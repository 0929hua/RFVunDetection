Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x5b]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1d4d691d
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x5b
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1d4d691d
0x3b: V13 = EQ V11 0x1d4d691d
0x3c: V14 = 0x5b
0x3f: JUMPI 0x5b V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xa0]
---
0x40 DUP1
0x41 PUSH4 0x20158c44
0x46 EQ
0x47 PUSH2 0xa0
0x4a JUMPI
---
0x41: V15 = 0x20158c44
0x46: V16 = EQ 0x20158c44 V11
0x47: V17 = 0xa0
0x4a: JUMPI 0xa0 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xca]
---
0x4b DUP1
0x4c PUSH4 0x66a26419
0x51 EQ
0x52 PUSH2 0xca
0x55 JUMPI
---
0x4c: V18 = 0x66a26419
0x51: V19 = EQ 0x66a26419 V11
0x52: V20 = 0xca
0x55: JUMPI 0xca V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x5a]
---
Predecessors: [0x0, 0x4b]
Successors: []
---
0x56 JUMPDEST
0x57 PUSH1 0x0
0x59 DUP1
0x5a REVERT
---
0x56: JUMPDEST 
0x57: V21 = 0x0
0x5a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b
[0x5b:0x9d]
---
Predecessors: [0xd]
Successors: [0x118]
---
0x5b JUMPDEST
0x5c PUSH2 0x9e
0x5f PUSH1 0x1
0x61 PUSH1 0xa0
0x63 PUSH1 0x2
0x65 EXP
0x66 SUB
0x67 PUSH1 0x4
0x69 CALLDATALOAD
0x6a DUP2
0x6b AND
0x6c SWAP1
0x6d PUSH1 0x24
0x6f CALLDATALOAD
0x70 SWAP1
0x71 PUSH1 0x44
0x73 CALLDATALOAD
0x74 DUP2
0x75 AND
0x76 SWAP1
0x77 PUSH1 0x64
0x79 CALLDATALOAD
0x7a DUP2
0x7b AND
0x7c SWAP1
0x7d PUSH1 0x84
0x7f CALLDATALOAD
0x80 SWAP1
0x81 PUSH1 0xa4
0x83 CALLDATALOAD
0x84 AND
0x85 PUSH1 0xc4
0x87 CALLDATALOAD
0x88 PUSH1 0xe4
0x8a CALLDATALOAD
0x8b PUSH1 0xff
0x8d PUSH2 0x104
0x90 CALLDATALOAD
0x91 AND
0x92 PUSH2 0x124
0x95 CALLDATALOAD
0x96 PUSH2 0x144
0x99 CALLDATALOAD
0x9a PUSH2 0x118
0x9d JUMP
---
0x5b: JUMPDEST 
0x5c: V22 = 0x9e
0x5f: V23 = 0x1
0x61: V24 = 0xa0
0x63: V25 = 0x2
0x65: V26 = EXP 0x2 0xa0
0x66: V27 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67: V28 = 0x4
0x69: V29 = CALLDATALOAD 0x4
0x6b: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x6d: V31 = 0x24
0x6f: V32 = CALLDATALOAD 0x24
0x71: V33 = 0x44
0x73: V34 = CALLDATALOAD 0x44
0x75: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x77: V36 = 0x64
0x79: V37 = CALLDATALOAD 0x64
0x7b: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0x7d: V39 = 0x84
0x7f: V40 = CALLDATALOAD 0x84
0x81: V41 = 0xa4
0x83: V42 = CALLDATALOAD 0xa4
0x84: V43 = AND V42 0xffffffffffffffffffffffffffffffffffffffff
0x85: V44 = 0xc4
0x87: V45 = CALLDATALOAD 0xc4
0x88: V46 = 0xe4
0x8a: V47 = CALLDATALOAD 0xe4
0x8b: V48 = 0xff
0x8d: V49 = 0x104
0x90: V50 = CALLDATALOAD 0x104
0x91: V51 = AND V50 0xff
0x92: V52 = 0x124
0x95: V53 = CALLDATALOAD 0x124
0x96: V54 = 0x144
0x99: V55 = CALLDATALOAD 0x144
0x9a: V56 = 0x118
0x9d: JUMP 0x118
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55]
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55]

================================

Block 0x9e
[0x9e:0x9f]
---
Predecessors: [0x73a, 0x83b]
Successors: []
---
0x9e JUMPDEST
0x9f STOP
---
0x9e: JUMPDEST 
0x9f: STOP 
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S0]

================================

Block 0xa0
[0xa0:0xa6]
---
Predecessors: [0x40]
Successors: [0xa7, 0xab]
---
0xa0 JUMPDEST
0xa1 CALLVALUE
0xa2 ISZERO
0xa3 PUSH2 0xab
0xa6 JUMPI
---
0xa0: JUMPDEST 
0xa1: V57 = CALLVALUE
0xa2: V58 = ISZERO V57
0xa3: V59 = 0xab
0xa6: JUMPI 0xab V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa7
[0xa7:0xaa]
---
Predecessors: [0xa0]
Successors: []
---
0xa7 PUSH1 0x0
0xa9 DUP1
0xaa REVERT
---
0xa7: V60 = 0x0
0xaa: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0x748]
---
0xab JUMPDEST
0xac PUSH2 0xb6
0xaf PUSH1 0x4
0xb1 CALLDATALOAD
0xb2 PUSH2 0x748
0xb5 JUMP
---
0xab: JUMPDEST 
0xac: V61 = 0xb6
0xaf: V62 = 0x4
0xb1: V63 = CALLDATALOAD 0x4
0xb2: V64 = 0x748
0xb5: JUMP 0x748
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb6, V63]
Exit stack: [V11, 0xb6, V63]

================================

Block 0xb6
[0xb6:0xc9]
---
Predecessors: [0x748]
Successors: []
---
0xb6 JUMPDEST
0xb7 PUSH1 0x40
0xb9 MLOAD
0xba SWAP1
0xbb ISZERO
0xbc ISZERO
0xbd DUP2
0xbe MSTORE
0xbf PUSH1 0x20
0xc1 ADD
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 DUP1
0xc6 SWAP2
0xc7 SUB
0xc8 SWAP1
0xc9 RETURN
---
0xb6: JUMPDEST 
0xb7: V65 = 0x40
0xb9: V66 = M[0x40]
0xbb: V67 = ISZERO V746
0xbc: V68 = ISZERO V67
0xbe: M[V66] = V68
0xbf: V69 = 0x20
0xc1: V70 = ADD 0x20 V66
0xc2: V71 = 0x40
0xc4: V72 = M[0x40]
0xc7: V73 = SUB V70 V72
0xc9: RETURN V72 V73
---
Entry stack: [V11, 0xb6, V746]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb6]

================================

Block 0xca
[0xca:0xd0]
---
Predecessors: [0x4b]
Successors: [0xd1, 0xd5]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xca: JUMPDEST 
0xcb: V74 = CALLVALUE
0xcc: V75 = ISZERO V74
0xcd: V76 = 0xd5
0xd0: JUMPI 0xd5 V75
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xca]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V77 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd5
[0xd5:0x117]
---
Predecessors: [0xca]
Successors: [0x75d]
---
0xd5 JUMPDEST
0xd6 PUSH2 0x9e
0xd9 PUSH1 0x1
0xdb PUSH1 0xa0
0xdd PUSH1 0x2
0xdf EXP
0xe0 SUB
0xe1 PUSH1 0x4
0xe3 CALLDATALOAD
0xe4 DUP2
0xe5 AND
0xe6 SWAP1
0xe7 PUSH1 0x24
0xe9 CALLDATALOAD
0xea SWAP1
0xeb PUSH1 0x44
0xed CALLDATALOAD
0xee DUP2
0xef AND
0xf0 SWAP1
0xf1 PUSH1 0x64
0xf3 CALLDATALOAD
0xf4 DUP2
0xf5 AND
0xf6 SWAP1
0xf7 PUSH1 0x84
0xf9 CALLDATALOAD
0xfa SWAP1
0xfb PUSH1 0xa4
0xfd CALLDATALOAD
0xfe AND
0xff PUSH1 0xc4
0x101 CALLDATALOAD
0x102 PUSH1 0xe4
0x104 CALLDATALOAD
0x105 PUSH1 0xff
0x107 PUSH2 0x104
0x10a CALLDATALOAD
0x10b AND
0x10c PUSH2 0x124
0x10f CALLDATALOAD
0x110 PUSH2 0x144
0x113 CALLDATALOAD
0x114 PUSH2 0x75d
0x117 JUMP
---
0xd5: JUMPDEST 
0xd6: V78 = 0x9e
0xd9: V79 = 0x1
0xdb: V80 = 0xa0
0xdd: V81 = 0x2
0xdf: V82 = EXP 0x2 0xa0
0xe0: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe1: V84 = 0x4
0xe3: V85 = CALLDATALOAD 0x4
0xe5: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0xe7: V87 = 0x24
0xe9: V88 = CALLDATALOAD 0x24
0xeb: V89 = 0x44
0xed: V90 = CALLDATALOAD 0x44
0xef: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0xf1: V92 = 0x64
0xf3: V93 = CALLDATALOAD 0x64
0xf5: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0xf7: V95 = 0x84
0xf9: V96 = CALLDATALOAD 0x84
0xfb: V97 = 0xa4
0xfd: V98 = CALLDATALOAD 0xa4
0xfe: V99 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0xff: V100 = 0xc4
0x101: V101 = CALLDATALOAD 0xc4
0x102: V102 = 0xe4
0x104: V103 = CALLDATALOAD 0xe4
0x105: V104 = 0xff
0x107: V105 = 0x104
0x10a: V106 = CALLDATALOAD 0x104
0x10b: V107 = AND V106 0xff
0x10c: V108 = 0x124
0x10f: V109 = CALLDATALOAD 0x124
0x110: V110 = 0x144
0x113: V111 = CALLDATALOAD 0x144
0x114: V112 = 0x75d
0x117: JUMP 0x75d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x9e, V86, V88, V91, V94, V96, V99, V101, V103, V107, V109, V111]
Exit stack: [V11, 0x9e, V86, V88, V91, V94, V96, V99, V101, V103, V107, V109, V111]

================================

Block 0x118
[0x118:0x134]
---
Predecessors: [0x5b]
Successors: [0x135, 0x1e9]
---
0x118 JUMPDEST
0x119 PUSH1 0x0
0x11b DUP9
0x11c PUSH1 0x1
0x11e PUSH1 0xa0
0x120 PUSH1 0x2
0x122 EXP
0x123 SUB
0x124 AND
0x125 DUP13
0x126 PUSH1 0x1
0x128 PUSH1 0xa0
0x12a PUSH1 0x2
0x12c EXP
0x12d SUB
0x12e AND
0x12f EQ
0x130 ISZERO
0x131 PUSH2 0x1e9
0x134 JUMPI
---
0x118: JUMPDEST 
0x119: V113 = 0x0
0x11c: V114 = 0x1
0x11e: V115 = 0xa0
0x120: V116 = 0x2
0x122: V117 = EXP 0x2 0xa0
0x123: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x124: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x126: V120 = 0x1
0x128: V121 = 0xa0
0x12a: V122 = 0x2
0x12c: V123 = EXP 0x2 0xa0
0x12d: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12e: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x12f: V126 = EQ V125 V119
0x130: V127 = ISZERO V126
0x131: V128 = 0x1e9
0x134: JUMPI 0x1e9 V127
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0]
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0]

================================

Block 0x135
[0x135:0x161]
---
Predecessors: [0x118]
Successors: [0x162, 0x166]
---
0x135 PUSH1 0x1
0x137 PUSH1 0xa0
0x139 PUSH1 0x2
0x13b EXP
0x13c SUB
0x13d CALLER
0x13e AND
0x13f CALLVALUE
0x140 DUP1
0x141 ISZERO
0x142 PUSH2 0x8fc
0x145 MUL
0x146 SWAP1
0x147 PUSH1 0x40
0x149 MLOAD
0x14a PUSH1 0x0
0x14c PUSH1 0x40
0x14e MLOAD
0x14f DUP1
0x150 DUP4
0x151 SUB
0x152 DUP2
0x153 DUP6
0x154 DUP9
0x155 DUP9
0x156 CALL
0x157 SWAP4
0x158 POP
0x159 POP
0x15a POP
0x15b POP
0x15c ISZERO
0x15d ISZERO
0x15e PUSH2 0x166
0x161 JUMPI
---
0x135: V129 = 0x1
0x137: V130 = 0xa0
0x139: V131 = 0x2
0x13b: V132 = EXP 0x2 0xa0
0x13c: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13d: V134 = CALLER
0x13e: V135 = AND V134 0xffffffffffffffffffffffffffffffffffffffff
0x13f: V136 = CALLVALUE
0x141: V137 = ISZERO V136
0x142: V138 = 0x8fc
0x145: V139 = MUL 0x8fc V137
0x147: V140 = 0x40
0x149: V141 = M[0x40]
0x14a: V142 = 0x0
0x14c: V143 = 0x40
0x14e: V144 = M[0x40]
0x151: V145 = SUB V141 V144
0x156: V146 = CALL V139 V135 V136 V144 V145 V144 0x0
0x15c: V147 = ISZERO V146
0x15d: V148 = ISZERO V147
0x15e: V149 = 0x166
0x161: JUMPI 0x166 V148
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0]

================================

Block 0x162
[0x162:0x165]
---
Predecessors: [0x135]
Successors: []
---
0x162 PUSH1 0x0
0x164 DUP1
0x165 REVERT
---
0x162: V150 = 0x0
0x165: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0]

================================

Block 0x166
[0x166:0x1e8]
---
Predecessors: [0x135]
Successors: [0x73a]
---
0x166 JUMPDEST
0x167 DUP7
0x168 PUSH1 0x1
0x16a PUSH1 0xa0
0x16c PUSH1 0x2
0x16e EXP
0x16f SUB
0x170 AND
0x171 DUP11
0x172 PUSH1 0x1
0x174 PUSH1 0xa0
0x176 PUSH1 0x2
0x178 EXP
0x179 SUB
0x17a AND
0x17b DUP14
0x17c PUSH1 0x1
0x17e PUSH1 0xa0
0x180 PUSH1 0x2
0x182 EXP
0x183 SUB
0x184 AND
0x185 PUSH1 0x0
0x187 DUP1
0x188 MLOAD
0x189 PUSH1 0x20
0x18b PUSH2 0xb74
0x18e DUP4
0x18f CODECOPY
0x190 DUP2
0x191 MLOAD
0x192 SWAP2
0x193 MSTORE
0x194 PUSH1 0x1
0x196 DUP16
0x197 DUP15
0x198 DUP15
0x199 DUP14
0x19a DUP14
0x19b PUSH1 0x40
0x19d MLOAD
0x19e DUP1
0x19f DUP8
0x1a0 DUP2
0x1a1 MSTORE
0x1a2 PUSH1 0x20
0x1a4 ADD
0x1a5 DUP7
0x1a6 DUP2
0x1a7 MSTORE
0x1a8 PUSH1 0x20
0x1aa ADD
0x1ab DUP6
0x1ac PUSH1 0x1
0x1ae PUSH1 0xa0
0x1b0 PUSH1 0x2
0x1b2 EXP
0x1b3 SUB
0x1b4 AND
0x1b5 PUSH1 0x1
0x1b7 PUSH1 0xa0
0x1b9 PUSH1 0x2
0x1bb EXP
0x1bc SUB
0x1bd AND
0x1be DUP2
0x1bf MSTORE
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 DUP5
0x1c4 DUP2
0x1c5 MSTORE
0x1c6 PUSH1 0x20
0x1c8 ADD
0x1c9 DUP4
0x1ca DUP2
0x1cb MSTORE
0x1cc PUSH1 0x20
0x1ce ADD
0x1cf DUP3
0x1d0 DUP2
0x1d1 MSTORE
0x1d2 PUSH1 0x20
0x1d4 ADD
0x1d5 SWAP7
0x1d6 POP
0x1d7 POP
0x1d8 POP
0x1d9 POP
0x1da POP
0x1db POP
0x1dc POP
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 DUP1
0x1e1 SWAP2
0x1e2 SUB
0x1e3 SWAP1
0x1e4 LOG4
0x1e5 PUSH2 0x73a
0x1e8 JUMP
---
0x166: JUMPDEST 
0x168: V151 = 0x1
0x16a: V152 = 0xa0
0x16c: V153 = 0x2
0x16e: V154 = EXP 0x2 0xa0
0x16f: V155 = SUB 0x10000000000000000000000000000000000000000 0x1
0x170: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x172: V157 = 0x1
0x174: V158 = 0xa0
0x176: V159 = 0x2
0x178: V160 = EXP 0x2 0xa0
0x179: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17a: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x17c: V163 = 0x1
0x17e: V164 = 0xa0
0x180: V165 = 0x2
0x182: V166 = EXP 0x2 0xa0
0x183: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x184: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x185: V169 = 0x0
0x188: V170 = M[0x0]
0x189: V171 = 0x20
0x18b: V172 = 0xb74
0x18f: CODECOPY 0x0 0xb74 0x20
0x191: V173 = M[0x0]
0x193: M[0x0] = V170
0x194: V174 = 0x1
0x19b: V175 = 0x40
0x19d: V176 = M[0x40]
0x1a1: M[V176] = 0x1
0x1a2: V177 = 0x20
0x1a4: V178 = ADD 0x20 V176
0x1a7: M[V178] = V32
0x1a8: V179 = 0x20
0x1aa: V180 = ADD 0x20 V178
0x1ac: V181 = 0x1
0x1ae: V182 = 0xa0
0x1b0: V183 = 0x2
0x1b2: V184 = EXP 0x2 0xa0
0x1b3: V185 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b4: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x1b5: V187 = 0x1
0x1b7: V188 = 0xa0
0x1b9: V189 = 0x2
0x1bb: V190 = EXP 0x2 0xa0
0x1bc: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bd: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x1bf: M[V180] = V192
0x1c0: V193 = 0x20
0x1c2: V194 = ADD 0x20 V180
0x1c5: M[V194] = V40
0x1c6: V195 = 0x20
0x1c8: V196 = ADD 0x20 V194
0x1cb: M[V196] = V45
0x1cc: V197 = 0x20
0x1ce: V198 = ADD 0x20 V196
0x1d1: M[V198] = V47
0x1d2: V199 = 0x20
0x1d4: V200 = ADD 0x20 V198
0x1dd: V201 = 0x40
0x1df: V202 = M[0x40]
0x1e2: V203 = SUB V200 V202
0x1e4: LOG V202 V203 V173 V168 V162 V156
0x1e5: V204 = 0x73a
0x1e8: JUMP 0x73a
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0]

================================

Block 0x1e9
[0x1e9:0x1f1]
---
Predecessors: [0x118]
Successors: [0x1f2, 0x2a6]
---
0x1e9 JUMPDEST
0x1ea TIMESTAMP
0x1eb DUP7
0x1ec LT
0x1ed ISZERO
0x1ee PUSH2 0x2a6
0x1f1 JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V205 = TIMESTAMP
0x1ec: V206 = LT V45 V205
0x1ed: V207 = ISZERO V206
0x1ee: V208 = 0x2a6
0x1f1: JUMPI 0x2a6 V207
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0]

================================

Block 0x1f2
[0x1f2:0x21e]
---
Predecessors: [0x1e9]
Successors: [0x21f, 0x223]
---
0x1f2 PUSH1 0x1
0x1f4 PUSH1 0xa0
0x1f6 PUSH1 0x2
0x1f8 EXP
0x1f9 SUB
0x1fa CALLER
0x1fb AND
0x1fc CALLVALUE
0x1fd DUP1
0x1fe ISZERO
0x1ff PUSH2 0x8fc
0x202 MUL
0x203 SWAP1
0x204 PUSH1 0x40
0x206 MLOAD
0x207 PUSH1 0x0
0x209 PUSH1 0x40
0x20b MLOAD
0x20c DUP1
0x20d DUP4
0x20e SUB
0x20f DUP2
0x210 DUP6
0x211 DUP9
0x212 DUP9
0x213 CALL
0x214 SWAP4
0x215 POP
0x216 POP
0x217 POP
0x218 POP
0x219 ISZERO
0x21a ISZERO
0x21b PUSH2 0x223
0x21e JUMPI
---
0x1f2: V209 = 0x1
0x1f4: V210 = 0xa0
0x1f6: V211 = 0x2
0x1f8: V212 = EXP 0x2 0xa0
0x1f9: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fa: V214 = CALLER
0x1fb: V215 = AND V214 0xffffffffffffffffffffffffffffffffffffffff
0x1fc: V216 = CALLVALUE
0x1fe: V217 = ISZERO V216
0x1ff: V218 = 0x8fc
0x202: V219 = MUL 0x8fc V217
0x204: V220 = 0x40
0x206: V221 = M[0x40]
0x207: V222 = 0x0
0x209: V223 = 0x40
0x20b: V224 = M[0x40]
0x20e: V225 = SUB V221 V224
0x213: V226 = CALL V219 V215 V216 V224 V225 V224 0x0
0x219: V227 = ISZERO V226
0x21a: V228 = ISZERO V227
0x21b: V229 = 0x223
0x21e: JUMPI 0x223 V228
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0]

================================

Block 0x21f
[0x21f:0x222]
---
Predecessors: [0x1f2]
Successors: []
---
0x21f PUSH1 0x0
0x221 DUP1
0x222 REVERT
---
0x21f: V230 = 0x0
0x222: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0]

================================

Block 0x223
[0x223:0x2a5]
---
Predecessors: [0x1f2]
Successors: [0x73a]
---
0x223 JUMPDEST
0x224 DUP7
0x225 PUSH1 0x1
0x227 PUSH1 0xa0
0x229 PUSH1 0x2
0x22b EXP
0x22c SUB
0x22d AND
0x22e DUP11
0x22f PUSH1 0x1
0x231 PUSH1 0xa0
0x233 PUSH1 0x2
0x235 EXP
0x236 SUB
0x237 AND
0x238 DUP14
0x239 PUSH1 0x1
0x23b PUSH1 0xa0
0x23d PUSH1 0x2
0x23f EXP
0x240 SUB
0x241 AND
0x242 PUSH1 0x0
0x244 DUP1
0x245 MLOAD
0x246 PUSH1 0x20
0x248 PUSH2 0xb74
0x24b DUP4
0x24c CODECOPY
0x24d DUP2
0x24e MLOAD
0x24f SWAP2
0x250 MSTORE
0x251 PUSH1 0x2
0x253 DUP16
0x254 DUP15
0x255 DUP15
0x256 DUP14
0x257 DUP14
0x258 PUSH1 0x40
0x25a MLOAD
0x25b DUP1
0x25c DUP8
0x25d DUP2
0x25e MSTORE
0x25f PUSH1 0x20
0x261 ADD
0x262 DUP7
0x263 DUP2
0x264 MSTORE
0x265 PUSH1 0x20
0x267 ADD
0x268 DUP6
0x269 PUSH1 0x1
0x26b PUSH1 0xa0
0x26d PUSH1 0x2
0x26f EXP
0x270 SUB
0x271 AND
0x272 PUSH1 0x1
0x274 PUSH1 0xa0
0x276 PUSH1 0x2
0x278 EXP
0x279 SUB
0x27a AND
0x27b DUP2
0x27c MSTORE
0x27d PUSH1 0x20
0x27f ADD
0x280 DUP5
0x281 DUP2
0x282 MSTORE
0x283 PUSH1 0x20
0x285 ADD
0x286 DUP4
0x287 DUP2
0x288 MSTORE
0x289 PUSH1 0x20
0x28b ADD
0x28c DUP3
0x28d DUP2
0x28e MSTORE
0x28f PUSH1 0x20
0x291 ADD
0x292 SWAP7
0x293 POP
0x294 POP
0x295 POP
0x296 POP
0x297 POP
0x298 POP
0x299 POP
0x29a PUSH1 0x40
0x29c MLOAD
0x29d DUP1
0x29e SWAP2
0x29f SUB
0x2a0 SWAP1
0x2a1 LOG4
0x2a2 PUSH2 0x73a
0x2a5 JUMP
---
0x223: JUMPDEST 
0x225: V231 = 0x1
0x227: V232 = 0xa0
0x229: V233 = 0x2
0x22b: V234 = EXP 0x2 0xa0
0x22c: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22d: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x22f: V237 = 0x1
0x231: V238 = 0xa0
0x233: V239 = 0x2
0x235: V240 = EXP 0x2 0xa0
0x236: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x237: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x239: V243 = 0x1
0x23b: V244 = 0xa0
0x23d: V245 = 0x2
0x23f: V246 = EXP 0x2 0xa0
0x240: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x241: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x242: V249 = 0x0
0x245: V250 = M[0x0]
0x246: V251 = 0x20
0x248: V252 = 0xb74
0x24c: CODECOPY 0x0 0xb74 0x20
0x24e: V253 = M[0x0]
0x250: M[0x0] = V250
0x251: V254 = 0x2
0x258: V255 = 0x40
0x25a: V256 = M[0x40]
0x25e: M[V256] = 0x2
0x25f: V257 = 0x20
0x261: V258 = ADD 0x20 V256
0x264: M[V258] = V32
0x265: V259 = 0x20
0x267: V260 = ADD 0x20 V258
0x269: V261 = 0x1
0x26b: V262 = 0xa0
0x26d: V263 = 0x2
0x26f: V264 = EXP 0x2 0xa0
0x270: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x271: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x272: V267 = 0x1
0x274: V268 = 0xa0
0x276: V269 = 0x2
0x278: V270 = EXP 0x2 0xa0
0x279: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27a: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x27c: M[V260] = V272
0x27d: V273 = 0x20
0x27f: V274 = ADD 0x20 V260
0x282: M[V274] = V40
0x283: V275 = 0x20
0x285: V276 = ADD 0x20 V274
0x288: M[V276] = V45
0x289: V277 = 0x20
0x28b: V278 = ADD 0x20 V276
0x28e: M[V278] = V47
0x28f: V279 = 0x20
0x291: V280 = ADD 0x20 V278
0x29a: V281 = 0x40
0x29c: V282 = M[0x40]
0x29f: V283 = SUB V280 V282
0x2a1: LOG V282 V283 V253 V248 V242 V236
0x2a2: V284 = 0x73a
0x2a5: JUMP 0x73a
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0]

================================

Block 0x2a6
[0x2a6:0x2b8]
---
Predecessors: [0x1e9]
Successors: [0x8c7]
---
0x2a6 JUMPDEST
0x2a7 PUSH2 0x2b9
0x2aa DUP13
0x2ab DUP13
0x2ac DUP13
0x2ad DUP13
0x2ae DUP13
0x2af DUP13
0x2b0 DUP13
0x2b1 DUP13
0x2b2 DUP13
0x2b3 DUP13
0x2b4 DUP13
0x2b5 PUSH2 0x8c7
0x2b8 JUMP
---
0x2a6: JUMPDEST 
0x2a7: V285 = 0x2b9
0x2b5: V286 = 0x8c7
0x2b8: JUMP 0x8c7
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x2b9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55, 0x0, 0x2b9, V30, V32, V35, V38, V40, V43, V45, V47, V51, V53, V55]

================================

Block 0x2b9
[0x2b9:0x2d3]
---
Predecessors: [0xa6c]
Successors: [0x2d4, 0x388]
---
0x2b9 JUMPDEST
0x2ba PUSH1 0x0
0x2bc DUP2
0x2bd DUP2
0x2be MSTORE
0x2bf PUSH1 0x20
0x2c1 DUP2
0x2c2 SWAP1
0x2c3 MSTORE
0x2c4 PUSH1 0x40
0x2c6 SWAP1
0x2c7 SHA3
0x2c8 SLOAD
0x2c9 SWAP1
0x2ca SWAP2
0x2cb POP
0x2cc PUSH1 0xff
0x2ce AND
0x2cf ISZERO
0x2d0 PUSH2 0x388
0x2d3 JUMPI
---
0x2b9: JUMPDEST 
0x2ba: V287 = 0x0
0x2be: M[0x0] = S0
0x2bf: V288 = 0x20
0x2c3: M[0x20] = 0x0
0x2c4: V289 = 0x40
0x2c7: V290 = SHA3 0x0 0x40
0x2c8: V291 = S[V290]
0x2cc: V292 = 0xff
0x2ce: V293 = AND 0xff V291
0x2cf: V294 = ISZERO V293
0x2d0: V295 = 0x388
0x2d3: JUMPI 0x388 V294
---
Entry stack: [V11, 0x9e, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x9e, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x2d4
[0x2d4:0x300]
---
Predecessors: [0x2b9]
Successors: [0x301, 0x305]
---
0x2d4 PUSH1 0x1
0x2d6 PUSH1 0xa0
0x2d8 PUSH1 0x2
0x2da EXP
0x2db SUB
0x2dc CALLER
0x2dd AND
0x2de CALLVALUE
0x2df DUP1
0x2e0 ISZERO
0x2e1 PUSH2 0x8fc
0x2e4 MUL
0x2e5 SWAP1
0x2e6 PUSH1 0x40
0x2e8 MLOAD
0x2e9 PUSH1 0x0
0x2eb PUSH1 0x40
0x2ed MLOAD
0x2ee DUP1
0x2ef DUP4
0x2f0 SUB
0x2f1 DUP2
0x2f2 DUP6
0x2f3 DUP9
0x2f4 DUP9
0x2f5 CALL
0x2f6 SWAP4
0x2f7 POP
0x2f8 POP
0x2f9 POP
0x2fa POP
0x2fb ISZERO
0x2fc ISZERO
0x2fd PUSH2 0x305
0x300 JUMPI
---
0x2d4: V296 = 0x1
0x2d6: V297 = 0xa0
0x2d8: V298 = 0x2
0x2da: V299 = EXP 0x2 0xa0
0x2db: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2dc: V301 = CALLER
0x2dd: V302 = AND V301 0xffffffffffffffffffffffffffffffffffffffff
0x2de: V303 = CALLVALUE
0x2e0: V304 = ISZERO V303
0x2e1: V305 = 0x8fc
0x2e4: V306 = MUL 0x8fc V304
0x2e6: V307 = 0x40
0x2e8: V308 = M[0x40]
0x2e9: V309 = 0x0
0x2eb: V310 = 0x40
0x2ed: V311 = M[0x40]
0x2f0: V312 = SUB V308 V311
0x2f5: V313 = CALL V306 V302 V303 V311 V312 V311 0x0
0x2fb: V314 = ISZERO V313
0x2fc: V315 = ISZERO V314
0x2fd: V316 = 0x305
0x300: JUMPI 0x305 V315
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x301
[0x301:0x304]
---
Predecessors: [0x2d4]
Successors: []
---
0x301 PUSH1 0x0
0x303 DUP1
0x304 REVERT
---
0x301: V317 = 0x0
0x304: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x305
[0x305:0x387]
---
Predecessors: [0x2d4]
Successors: [0x73a]
---
0x305 JUMPDEST
0x306 DUP7
0x307 PUSH1 0x1
0x309 PUSH1 0xa0
0x30b PUSH1 0x2
0x30d EXP
0x30e SUB
0x30f AND
0x310 DUP11
0x311 PUSH1 0x1
0x313 PUSH1 0xa0
0x315 PUSH1 0x2
0x317 EXP
0x318 SUB
0x319 AND
0x31a DUP14
0x31b PUSH1 0x1
0x31d PUSH1 0xa0
0x31f PUSH1 0x2
0x321 EXP
0x322 SUB
0x323 AND
0x324 PUSH1 0x0
0x326 DUP1
0x327 MLOAD
0x328 PUSH1 0x20
0x32a PUSH2 0xb74
0x32d DUP4
0x32e CODECOPY
0x32f DUP2
0x330 MLOAD
0x331 SWAP2
0x332 MSTORE
0x333 PUSH1 0x3
0x335 DUP16
0x336 DUP15
0x337 DUP15
0x338 DUP14
0x339 DUP14
0x33a PUSH1 0x40
0x33c MLOAD
0x33d DUP1
0x33e DUP8
0x33f DUP2
0x340 MSTORE
0x341 PUSH1 0x20
0x343 ADD
0x344 DUP7
0x345 DUP2
0x346 MSTORE
0x347 PUSH1 0x20
0x349 ADD
0x34a DUP6
0x34b PUSH1 0x1
0x34d PUSH1 0xa0
0x34f PUSH1 0x2
0x351 EXP
0x352 SUB
0x353 AND
0x354 PUSH1 0x1
0x356 PUSH1 0xa0
0x358 PUSH1 0x2
0x35a EXP
0x35b SUB
0x35c AND
0x35d DUP2
0x35e MSTORE
0x35f PUSH1 0x20
0x361 ADD
0x362 DUP5
0x363 DUP2
0x364 MSTORE
0x365 PUSH1 0x20
0x367 ADD
0x368 DUP4
0x369 DUP2
0x36a MSTORE
0x36b PUSH1 0x20
0x36d ADD
0x36e DUP3
0x36f DUP2
0x370 MSTORE
0x371 PUSH1 0x20
0x373 ADD
0x374 SWAP7
0x375 POP
0x376 POP
0x377 POP
0x378 POP
0x379 POP
0x37a POP
0x37b POP
0x37c PUSH1 0x40
0x37e MLOAD
0x37f DUP1
0x380 SWAP2
0x381 SUB
0x382 SWAP1
0x383 LOG4
0x384 PUSH2 0x73a
0x387 JUMP
---
0x305: JUMPDEST 
0x307: V318 = 0x1
0x309: V319 = 0xa0
0x30b: V320 = 0x2
0x30d: V321 = EXP 0x2 0xa0
0x30e: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30f: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x311: V324 = 0x1
0x313: V325 = 0xa0
0x315: V326 = 0x2
0x317: V327 = EXP 0x2 0xa0
0x318: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x319: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x31b: V330 = 0x1
0x31d: V331 = 0xa0
0x31f: V332 = 0x2
0x321: V333 = EXP 0x2 0xa0
0x322: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x323: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x324: V336 = 0x0
0x327: V337 = M[0x0]
0x328: V338 = 0x20
0x32a: V339 = 0xb74
0x32e: CODECOPY 0x0 0xb74 0x20
0x330: V340 = M[0x0]
0x332: M[0x0] = V337
0x333: V341 = 0x3
0x33a: V342 = 0x40
0x33c: V343 = M[0x40]
0x340: M[V343] = 0x3
0x341: V344 = 0x20
0x343: V345 = ADD 0x20 V343
0x346: M[V345] = S10
0x347: V346 = 0x20
0x349: V347 = ADD 0x20 V345
0x34b: V348 = 0x1
0x34d: V349 = 0xa0
0x34f: V350 = 0x2
0x351: V351 = EXP 0x2 0xa0
0x352: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x353: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x354: V354 = 0x1
0x356: V355 = 0xa0
0x358: V356 = 0x2
0x35a: V357 = EXP 0x2 0xa0
0x35b: V358 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35c: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x35e: M[V347] = V359
0x35f: V360 = 0x20
0x361: V361 = ADD 0x20 V347
0x364: M[V361] = S7
0x365: V362 = 0x20
0x367: V363 = ADD 0x20 V361
0x36a: M[V363] = S5
0x36b: V364 = 0x20
0x36d: V365 = ADD 0x20 V363
0x370: M[V365] = S4
0x371: V366 = 0x20
0x373: V367 = ADD 0x20 V365
0x37c: V368 = 0x40
0x37e: V369 = M[0x40]
0x381: V370 = SUB V367 V369
0x383: LOG V369 V370 V340 V335 V329 V323
0x384: V371 = 0x73a
0x387: JUMP 0x73a
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x388
[0x388:0x398]
---
Predecessors: [0x2b9]
Successors: [0x399, 0x536]
---
0x388 JUMPDEST
0x389 PUSH1 0x1
0x38b PUSH1 0xa0
0x38d PUSH1 0x2
0x38f EXP
0x390 SUB
0x391 DUP8
0x392 AND
0x393 ISZERO
0x394 ISZERO
0x395 PUSH2 0x536
0x398 JUMPI
---
0x388: JUMPDEST 
0x389: V372 = 0x1
0x38b: V373 = 0xa0
0x38d: V374 = 0x2
0x38f: V375 = EXP 0x2 0xa0
0x390: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x392: V377 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x393: V378 = ISZERO V377
0x394: V379 = ISZERO V378
0x395: V380 = 0x536
0x398: JUMPI 0x536 V379
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x399
[0x399:0x3a0]
---
Predecessors: [0x388]
Successors: [0x3a1, 0x480]
---
0x399 DUP8
0x39a CALLVALUE
0x39b EQ
0x39c ISZERO
0x39d PUSH2 0x480
0x3a0 JUMPI
---
0x39a: V381 = CALLVALUE
0x39b: V382 = EQ V381 S7
0x39c: V383 = ISZERO V382
0x39d: V384 = 0x480
0x3a0: JUMPI 0x480 V383
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x3a1
[0x3a1:0x3c4]
---
Predecessors: [0x399]
Successors: [0xa7f]
---
0x3a1 PUSH1 0x0
0x3a3 DUP2
0x3a4 DUP2
0x3a5 MSTORE
0x3a6 PUSH1 0x20
0x3a8 DUP2
0x3a9 SWAP1
0x3aa MSTORE
0x3ab PUSH1 0x40
0x3ad SWAP1
0x3ae SHA3
0x3af DUP1
0x3b0 SLOAD
0x3b1 PUSH1 0xff
0x3b3 NOT
0x3b4 AND
0x3b5 PUSH1 0x1
0x3b7 OR
0x3b8 SWAP1
0x3b9 SSTORE
0x3ba PUSH2 0x3c5
0x3bd DUP13
0x3be DUP11
0x3bf DUP14
0x3c0 DUP14
0x3c1 PUSH2 0xa7f
0x3c4 JUMP
---
0x3a1: V385 = 0x0
0x3a5: M[0x0] = S0
0x3a6: V386 = 0x20
0x3aa: M[0x20] = 0x0
0x3ab: V387 = 0x40
0x3ae: V388 = SHA3 0x0 0x40
0x3b0: V389 = S[V388]
0x3b1: V390 = 0xff
0x3b3: V391 = NOT 0xff
0x3b4: V392 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V389
0x3b5: V393 = 0x1
0x3b7: V394 = OR 0x1 V392
0x3b9: S[V388] = V394
0x3ba: V395 = 0x3c5
0x3c1: V396 = 0xa7f
0x3c4: JUMP 0xa7f
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x3c5, S11, S8, S10, S9]
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x3c5, S11, S8, S10, S9]

================================

Block 0x3c5
[0x3c5:0x3cb]
---
Predecessors: [0xb2a]
Successors: [0x3cc, 0x3cd]
---
0x3c5 JUMPDEST
0x3c6 ISZERO
0x3c7 ISZERO
0x3c8 PUSH2 0x3cd
0x3cb JUMPI
---
0x3c5: JUMPDEST 
0x3c6: V397 = ISZERO 0x1
0x3c7: V398 = ISZERO 0x0
0x3c8: V399 = 0x3cd
0x3cb: JUMPI 0x3cd 0x1
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x3cc
[0x3cc:0x3cc]
---
Predecessors: [0x3c5]
Successors: []
---
0x3cc INVALID
---
0x3cc: INVALID 
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x3cd
[0x3cd:0x3fa]
---
Predecessors: [0x3c5]
Successors: [0x3fb, 0x3ff]
---
0x3cd JUMPDEST
0x3ce PUSH1 0x1
0x3d0 PUSH1 0xa0
0x3d2 PUSH1 0x2
0x3d4 EXP
0x3d5 SUB
0x3d6 DUP13
0x3d7 AND
0x3d8 CALLVALUE
0x3d9 DUP1
0x3da ISZERO
0x3db PUSH2 0x8fc
0x3de MUL
0x3df SWAP1
0x3e0 PUSH1 0x40
0x3e2 MLOAD
0x3e3 PUSH1 0x0
0x3e5 PUSH1 0x40
0x3e7 MLOAD
0x3e8 DUP1
0x3e9 DUP4
0x3ea SUB
0x3eb DUP2
0x3ec DUP6
0x3ed DUP9
0x3ee DUP9
0x3ef CALL
0x3f0 SWAP4
0x3f1 POP
0x3f2 POP
0x3f3 POP
0x3f4 POP
0x3f5 ISZERO
0x3f6 ISZERO
0x3f7 PUSH2 0x3ff
0x3fa JUMPI
---
0x3cd: JUMPDEST 
0x3ce: V400 = 0x1
0x3d0: V401 = 0xa0
0x3d2: V402 = 0x2
0x3d4: V403 = EXP 0x2 0xa0
0x3d5: V404 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d7: V405 = AND S11 0xffffffffffffffffffffffffffffffffffffffff
0x3d8: V406 = CALLVALUE
0x3da: V407 = ISZERO V406
0x3db: V408 = 0x8fc
0x3de: V409 = MUL 0x8fc V407
0x3e0: V410 = 0x40
0x3e2: V411 = M[0x40]
0x3e3: V412 = 0x0
0x3e5: V413 = 0x40
0x3e7: V414 = M[0x40]
0x3ea: V415 = SUB V411 V414
0x3ef: V416 = CALL V409 V405 V406 V414 V415 V414 0x0
0x3f5: V417 = ISZERO V416
0x3f6: V418 = ISZERO V417
0x3f7: V419 = 0x3ff
0x3fa: JUMPI 0x3ff V418
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x3fb
[0x3fb:0x3fe]
---
Predecessors: [0x3cd]
Successors: []
---
0x3fb PUSH1 0x0
0x3fd DUP1
0x3fe REVERT
---
0x3fb: V420 = 0x0
0x3fe: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x3ff
[0x3ff:0x47f]
---
Predecessors: [0x3cd]
Successors: [0x531]
---
0x3ff JUMPDEST
0x400 DUP7
0x401 PUSH1 0x1
0x403 PUSH1 0xa0
0x405 PUSH1 0x2
0x407 EXP
0x408 SUB
0x409 AND
0x40a DUP11
0x40b PUSH1 0x1
0x40d PUSH1 0xa0
0x40f PUSH1 0x2
0x411 EXP
0x412 SUB
0x413 AND
0x414 DUP14
0x415 PUSH1 0x1
0x417 PUSH1 0xa0
0x419 PUSH1 0x2
0x41b EXP
0x41c SUB
0x41d AND
0x41e PUSH32 0xe59c5e56d85b2124f5e7f82cb5fcc6d28a4a241a9bdd732704ac9d3b6bfc98ab
0x43f DUP15
0x440 DUP14
0x441 DUP14
0x442 DUP13
0x443 DUP13
0x444 PUSH1 0x40
0x446 MLOAD
0x447 SWAP5
0x448 DUP6
0x449 MSTORE
0x44a PUSH1 0x1
0x44c PUSH1 0xa0
0x44e PUSH1 0x2
0x450 EXP
0x451 SUB
0x452 SWAP1
0x453 SWAP4
0x454 AND
0x455 PUSH1 0x20
0x457 DUP6
0x458 ADD
0x459 MSTORE
0x45a PUSH1 0x40
0x45c DUP1
0x45d DUP6
0x45e ADD
0x45f SWAP3
0x460 SWAP1
0x461 SWAP3
0x462 MSTORE
0x463 PUSH1 0x60
0x465 DUP5
0x466 ADD
0x467 MSTORE
0x468 PUSH1 0x80
0x46a DUP4
0x46b ADD
0x46c SWAP2
0x46d SWAP1
0x46e SWAP2
0x46f MSTORE
0x470 PUSH1 0xa0
0x472 SWAP1
0x473 SWAP2
0x474 ADD
0x475 SWAP1
0x476 MLOAD
0x477 DUP1
0x478 SWAP2
0x479 SUB
0x47a SWAP1
0x47b LOG4
0x47c PUSH2 0x531
0x47f JUMP
---
0x3ff: JUMPDEST 
0x401: V421 = 0x1
0x403: V422 = 0xa0
0x405: V423 = 0x2
0x407: V424 = EXP 0x2 0xa0
0x408: V425 = SUB 0x10000000000000000000000000000000000000000 0x1
0x409: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x40b: V427 = 0x1
0x40d: V428 = 0xa0
0x40f: V429 = 0x2
0x411: V430 = EXP 0x2 0xa0
0x412: V431 = SUB 0x10000000000000000000000000000000000000000 0x1
0x413: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x415: V433 = 0x1
0x417: V434 = 0xa0
0x419: V435 = 0x2
0x41b: V436 = EXP 0x2 0xa0
0x41c: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41d: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x41e: V439 = 0xe59c5e56d85b2124f5e7f82cb5fcc6d28a4a241a9bdd732704ac9d3b6bfc98ab
0x444: V440 = 0x40
0x446: V441 = M[0x40]
0x449: M[V441] = S10
0x44a: V442 = 0x1
0x44c: V443 = 0xa0
0x44e: V444 = 0x2
0x450: V445 = EXP 0x2 0xa0
0x451: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x454: V447 = AND S8 0xffffffffffffffffffffffffffffffffffffffff
0x455: V448 = 0x20
0x458: V449 = ADD V441 0x20
0x459: M[V449] = V447
0x45a: V450 = 0x40
0x45e: V451 = ADD V441 0x40
0x462: M[V451] = S7
0x463: V452 = 0x60
0x466: V453 = ADD V441 0x60
0x467: M[V453] = S5
0x468: V454 = 0x80
0x46b: V455 = ADD V441 0x80
0x46f: M[V455] = S4
0x470: V456 = 0xa0
0x474: V457 = ADD V441 0xa0
0x476: V458 = M[0x40]
0x479: V459 = SUB V457 V458
0x47b: LOG V458 V459 0xe59c5e56d85b2124f5e7f82cb5fcc6d28a4a241a9bdd732704ac9d3b6bfc98ab V438 V432 V426
0x47c: V460 = 0x531
0x47f: JUMP 0x531
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x480
[0x480:0x4ad]
---
Predecessors: [0x399]
Successors: [0x4ae, 0x4b2]
---
0x480 JUMPDEST
0x481 PUSH1 0x1
0x483 PUSH1 0xa0
0x485 PUSH1 0x2
0x487 EXP
0x488 SUB
0x489 CALLER
0x48a AND
0x48b CALLVALUE
0x48c DUP1
0x48d ISZERO
0x48e PUSH2 0x8fc
0x491 MUL
0x492 SWAP1
0x493 PUSH1 0x40
0x495 MLOAD
0x496 PUSH1 0x0
0x498 PUSH1 0x40
0x49a MLOAD
0x49b DUP1
0x49c DUP4
0x49d SUB
0x49e DUP2
0x49f DUP6
0x4a0 DUP9
0x4a1 DUP9
0x4a2 CALL
0x4a3 SWAP4
0x4a4 POP
0x4a5 POP
0x4a6 POP
0x4a7 POP
0x4a8 ISZERO
0x4a9 ISZERO
0x4aa PUSH2 0x4b2
0x4ad JUMPI
---
0x480: JUMPDEST 
0x481: V461 = 0x1
0x483: V462 = 0xa0
0x485: V463 = 0x2
0x487: V464 = EXP 0x2 0xa0
0x488: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x489: V466 = CALLER
0x48a: V467 = AND V466 0xffffffffffffffffffffffffffffffffffffffff
0x48b: V468 = CALLVALUE
0x48d: V469 = ISZERO V468
0x48e: V470 = 0x8fc
0x491: V471 = MUL 0x8fc V469
0x493: V472 = 0x40
0x495: V473 = M[0x40]
0x496: V474 = 0x0
0x498: V475 = 0x40
0x49a: V476 = M[0x40]
0x49d: V477 = SUB V473 V476
0x4a2: V478 = CALL V471 V467 V468 V476 V477 V476 0x0
0x4a8: V479 = ISZERO V478
0x4a9: V480 = ISZERO V479
0x4aa: V481 = 0x4b2
0x4ad: JUMPI 0x4b2 V480
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4ae
[0x4ae:0x4b1]
---
Predecessors: [0x480]
Successors: []
---
0x4ae PUSH1 0x0
0x4b0 DUP1
0x4b1 REVERT
---
0x4ae: V482 = 0x0
0x4b1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4b2
[0x4b2:0x530]
---
Predecessors: [0x480]
Successors: [0x531]
---
0x4b2 JUMPDEST
0x4b3 DUP7
0x4b4 PUSH1 0x1
0x4b6 PUSH1 0xa0
0x4b8 PUSH1 0x2
0x4ba EXP
0x4bb SUB
0x4bc AND
0x4bd DUP11
0x4be PUSH1 0x1
0x4c0 PUSH1 0xa0
0x4c2 PUSH1 0x2
0x4c4 EXP
0x4c5 SUB
0x4c6 AND
0x4c7 DUP14
0x4c8 PUSH1 0x1
0x4ca PUSH1 0xa0
0x4cc PUSH1 0x2
0x4ce EXP
0x4cf SUB
0x4d0 AND
0x4d1 PUSH1 0x0
0x4d3 DUP1
0x4d4 MLOAD
0x4d5 PUSH1 0x20
0x4d7 PUSH2 0xb74
0x4da DUP4
0x4db CODECOPY
0x4dc DUP2
0x4dd MLOAD
0x4de SWAP2
0x4df MSTORE
0x4e0 PUSH1 0x4
0x4e2 DUP16
0x4e3 DUP15
0x4e4 DUP15
0x4e5 DUP14
0x4e6 DUP14
0x4e7 PUSH1 0x40
0x4e9 MLOAD
0x4ea DUP1
0x4eb DUP8
0x4ec DUP2
0x4ed MSTORE
0x4ee PUSH1 0x20
0x4f0 ADD
0x4f1 DUP7
0x4f2 DUP2
0x4f3 MSTORE
0x4f4 PUSH1 0x20
0x4f6 ADD
0x4f7 DUP6
0x4f8 PUSH1 0x1
0x4fa PUSH1 0xa0
0x4fc PUSH1 0x2
0x4fe EXP
0x4ff SUB
0x500 AND
0x501 PUSH1 0x1
0x503 PUSH1 0xa0
0x505 PUSH1 0x2
0x507 EXP
0x508 SUB
0x509 AND
0x50a DUP2
0x50b MSTORE
0x50c PUSH1 0x20
0x50e ADD
0x50f DUP5
0x510 DUP2
0x511 MSTORE
0x512 PUSH1 0x20
0x514 ADD
0x515 DUP4
0x516 DUP2
0x517 MSTORE
0x518 PUSH1 0x20
0x51a ADD
0x51b DUP3
0x51c DUP2
0x51d MSTORE
0x51e PUSH1 0x20
0x520 ADD
0x521 SWAP7
0x522 POP
0x523 POP
0x524 POP
0x525 POP
0x526 POP
0x527 POP
0x528 POP
0x529 PUSH1 0x40
0x52b MLOAD
0x52c DUP1
0x52d SWAP2
0x52e SUB
0x52f SWAP1
0x530 LOG4
---
0x4b2: JUMPDEST 
0x4b4: V483 = 0x1
0x4b6: V484 = 0xa0
0x4b8: V485 = 0x2
0x4ba: V486 = EXP 0x2 0xa0
0x4bb: V487 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bc: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x4be: V489 = 0x1
0x4c0: V490 = 0xa0
0x4c2: V491 = 0x2
0x4c4: V492 = EXP 0x2 0xa0
0x4c5: V493 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c6: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x4c8: V495 = 0x1
0x4ca: V496 = 0xa0
0x4cc: V497 = 0x2
0x4ce: V498 = EXP 0x2 0xa0
0x4cf: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d0: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x4d1: V501 = 0x0
0x4d4: V502 = M[0x0]
0x4d5: V503 = 0x20
0x4d7: V504 = 0xb74
0x4db: CODECOPY 0x0 0xb74 0x20
0x4dd: V505 = M[0x0]
0x4df: M[0x0] = V502
0x4e0: V506 = 0x4
0x4e7: V507 = 0x40
0x4e9: V508 = M[0x40]
0x4ed: M[V508] = 0x4
0x4ee: V509 = 0x20
0x4f0: V510 = ADD 0x20 V508
0x4f3: M[V510] = S10
0x4f4: V511 = 0x20
0x4f6: V512 = ADD 0x20 V510
0x4f8: V513 = 0x1
0x4fa: V514 = 0xa0
0x4fc: V515 = 0x2
0x4fe: V516 = EXP 0x2 0xa0
0x4ff: V517 = SUB 0x10000000000000000000000000000000000000000 0x1
0x500: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x501: V519 = 0x1
0x503: V520 = 0xa0
0x505: V521 = 0x2
0x507: V522 = EXP 0x2 0xa0
0x508: V523 = SUB 0x10000000000000000000000000000000000000000 0x1
0x509: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V518
0x50b: M[V512] = V524
0x50c: V525 = 0x20
0x50e: V526 = ADD 0x20 V512
0x511: M[V526] = S7
0x512: V527 = 0x20
0x514: V528 = ADD 0x20 V526
0x517: M[V528] = S5
0x518: V529 = 0x20
0x51a: V530 = ADD 0x20 V528
0x51d: M[V530] = S4
0x51e: V531 = 0x20
0x520: V532 = ADD 0x20 V530
0x529: V533 = 0x40
0x52b: V534 = M[0x40]
0x52e: V535 = SUB V532 V534
0x530: LOG V534 V535 V505 V500 V494 V488
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x531
[0x531:0x535]
---
Predecessors: [0x3ff, 0x4b2]
Successors: [0x73a]
---
0x531 JUMPDEST
0x532 PUSH2 0x73a
0x535 JUMP
---
0x531: JUMPDEST 
0x532: V536 = 0x73a
0x535: JUMP 0x73a
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x536
[0x536:0x53c]
---
Predecessors: [0x388]
Successors: [0x53d, 0x5f1]
---
0x536 JUMPDEST
0x537 CALLVALUE
0x538 ISZERO
0x539 PUSH2 0x5f1
0x53c JUMPI
---
0x536: JUMPDEST 
0x537: V537 = CALLVALUE
0x538: V538 = ISZERO V537
0x539: V539 = 0x5f1
0x53c: JUMPI 0x5f1 V538
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x53d
[0x53d:0x569]
---
Predecessors: [0x536]
Successors: [0x56a, 0x56e]
---
0x53d PUSH1 0x1
0x53f PUSH1 0xa0
0x541 PUSH1 0x2
0x543 EXP
0x544 SUB
0x545 CALLER
0x546 AND
0x547 CALLVALUE
0x548 DUP1
0x549 ISZERO
0x54a PUSH2 0x8fc
0x54d MUL
0x54e SWAP1
0x54f PUSH1 0x40
0x551 MLOAD
0x552 PUSH1 0x0
0x554 PUSH1 0x40
0x556 MLOAD
0x557 DUP1
0x558 DUP4
0x559 SUB
0x55a DUP2
0x55b DUP6
0x55c DUP9
0x55d DUP9
0x55e CALL
0x55f SWAP4
0x560 POP
0x561 POP
0x562 POP
0x563 POP
0x564 ISZERO
0x565 ISZERO
0x566 PUSH2 0x56e
0x569 JUMPI
---
0x53d: V540 = 0x1
0x53f: V541 = 0xa0
0x541: V542 = 0x2
0x543: V543 = EXP 0x2 0xa0
0x544: V544 = SUB 0x10000000000000000000000000000000000000000 0x1
0x545: V545 = CALLER
0x546: V546 = AND V545 0xffffffffffffffffffffffffffffffffffffffff
0x547: V547 = CALLVALUE
0x549: V548 = ISZERO V547
0x54a: V549 = 0x8fc
0x54d: V550 = MUL 0x8fc V548
0x54f: V551 = 0x40
0x551: V552 = M[0x40]
0x552: V553 = 0x0
0x554: V554 = 0x40
0x556: V555 = M[0x40]
0x559: V556 = SUB V552 V555
0x55e: V557 = CALL V550 V546 V547 V555 V556 V555 0x0
0x564: V558 = ISZERO V557
0x565: V559 = ISZERO V558
0x566: V560 = 0x56e
0x569: JUMPI 0x56e V559
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x56a
[0x56a:0x56d]
---
Predecessors: [0x53d]
Successors: []
---
0x56a PUSH1 0x0
0x56c DUP1
0x56d REVERT
---
0x56a: V561 = 0x0
0x56d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x56e
[0x56e:0x5f0]
---
Predecessors: [0x53d]
Successors: [0x73a]
---
0x56e JUMPDEST
0x56f DUP7
0x570 PUSH1 0x1
0x572 PUSH1 0xa0
0x574 PUSH1 0x2
0x576 EXP
0x577 SUB
0x578 AND
0x579 DUP11
0x57a PUSH1 0x1
0x57c PUSH1 0xa0
0x57e PUSH1 0x2
0x580 EXP
0x581 SUB
0x582 AND
0x583 DUP14
0x584 PUSH1 0x1
0x586 PUSH1 0xa0
0x588 PUSH1 0x2
0x58a EXP
0x58b SUB
0x58c AND
0x58d PUSH1 0x0
0x58f DUP1
0x590 MLOAD
0x591 PUSH1 0x20
0x593 PUSH2 0xb74
0x596 DUP4
0x597 CODECOPY
0x598 DUP2
0x599 MLOAD
0x59a SWAP2
0x59b MSTORE
0x59c PUSH1 0x5
0x59e DUP16
0x59f DUP15
0x5a0 DUP15
0x5a1 DUP14
0x5a2 DUP14
0x5a3 PUSH1 0x40
0x5a5 MLOAD
0x5a6 DUP1
0x5a7 DUP8
0x5a8 DUP2
0x5a9 MSTORE
0x5aa PUSH1 0x20
0x5ac ADD
0x5ad DUP7
0x5ae DUP2
0x5af MSTORE
0x5b0 PUSH1 0x20
0x5b2 ADD
0x5b3 DUP6
0x5b4 PUSH1 0x1
0x5b6 PUSH1 0xa0
0x5b8 PUSH1 0x2
0x5ba EXP
0x5bb SUB
0x5bc AND
0x5bd PUSH1 0x1
0x5bf PUSH1 0xa0
0x5c1 PUSH1 0x2
0x5c3 EXP
0x5c4 SUB
0x5c5 AND
0x5c6 DUP2
0x5c7 MSTORE
0x5c8 PUSH1 0x20
0x5ca ADD
0x5cb DUP5
0x5cc DUP2
0x5cd MSTORE
0x5ce PUSH1 0x20
0x5d0 ADD
0x5d1 DUP4
0x5d2 DUP2
0x5d3 MSTORE
0x5d4 PUSH1 0x20
0x5d6 ADD
0x5d7 DUP3
0x5d8 DUP2
0x5d9 MSTORE
0x5da PUSH1 0x20
0x5dc ADD
0x5dd SWAP7
0x5de POP
0x5df POP
0x5e0 POP
0x5e1 POP
0x5e2 POP
0x5e3 POP
0x5e4 POP
0x5e5 PUSH1 0x40
0x5e7 MLOAD
0x5e8 DUP1
0x5e9 SWAP2
0x5ea SUB
0x5eb SWAP1
0x5ec LOG4
0x5ed PUSH2 0x73a
0x5f0 JUMP
---
0x56e: JUMPDEST 
0x570: V562 = 0x1
0x572: V563 = 0xa0
0x574: V564 = 0x2
0x576: V565 = EXP 0x2 0xa0
0x577: V566 = SUB 0x10000000000000000000000000000000000000000 0x1
0x578: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x57a: V568 = 0x1
0x57c: V569 = 0xa0
0x57e: V570 = 0x2
0x580: V571 = EXP 0x2 0xa0
0x581: V572 = SUB 0x10000000000000000000000000000000000000000 0x1
0x582: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x584: V574 = 0x1
0x586: V575 = 0xa0
0x588: V576 = 0x2
0x58a: V577 = EXP 0x2 0xa0
0x58b: V578 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58c: V579 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x58d: V580 = 0x0
0x590: V581 = M[0x0]
0x591: V582 = 0x20
0x593: V583 = 0xb74
0x597: CODECOPY 0x0 0xb74 0x20
0x599: V584 = M[0x0]
0x59b: M[0x0] = V581
0x59c: V585 = 0x5
0x5a3: V586 = 0x40
0x5a5: V587 = M[0x40]
0x5a9: M[V587] = 0x5
0x5aa: V588 = 0x20
0x5ac: V589 = ADD 0x20 V587
0x5af: M[V589] = S10
0x5b0: V590 = 0x20
0x5b2: V591 = ADD 0x20 V589
0x5b4: V592 = 0x1
0x5b6: V593 = 0xa0
0x5b8: V594 = 0x2
0x5ba: V595 = EXP 0x2 0xa0
0x5bb: V596 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bc: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x5bd: V598 = 0x1
0x5bf: V599 = 0xa0
0x5c1: V600 = 0x2
0x5c3: V601 = EXP 0x2 0xa0
0x5c4: V602 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c5: V603 = AND 0xffffffffffffffffffffffffffffffffffffffff V597
0x5c7: M[V591] = V603
0x5c8: V604 = 0x20
0x5ca: V605 = ADD 0x20 V591
0x5cd: M[V605] = S7
0x5ce: V606 = 0x20
0x5d0: V607 = ADD 0x20 V605
0x5d3: M[V607] = S5
0x5d4: V608 = 0x20
0x5d6: V609 = ADD 0x20 V607
0x5d9: M[V609] = S4
0x5da: V610 = 0x20
0x5dc: V611 = ADD 0x20 V609
0x5e5: V612 = 0x40
0x5e7: V613 = M[0x40]
0x5ea: V614 = SUB V611 V613
0x5ec: LOG V613 V614 V584 V579 V573 V567
0x5ed: V615 = 0x73a
0x5f0: JUMP 0x73a
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5f1
[0x5f1:0x60b]
---
Predecessors: [0x536]
Successors: [0x60c, 0x6bb]
---
0x5f1 JUMPDEST
0x5f2 CALLER
0x5f3 PUSH1 0x1
0x5f5 PUSH1 0xa0
0x5f7 PUSH1 0x2
0x5f9 EXP
0x5fa SUB
0x5fb AND
0x5fc DUP10
0x5fd PUSH1 0x1
0x5ff PUSH1 0xa0
0x601 PUSH1 0x2
0x603 EXP
0x604 SUB
0x605 AND
0x606 EQ
0x607 ISZERO
0x608 PUSH2 0x6bb
0x60b JUMPI
---
0x5f1: JUMPDEST 
0x5f2: V616 = CALLER
0x5f3: V617 = 0x1
0x5f5: V618 = 0xa0
0x5f7: V619 = 0x2
0x5f9: V620 = EXP 0x2 0xa0
0x5fa: V621 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fb: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0x5fd: V623 = 0x1
0x5ff: V624 = 0xa0
0x601: V625 = 0x2
0x603: V626 = EXP 0x2 0xa0
0x604: V627 = SUB 0x10000000000000000000000000000000000000000 0x1
0x605: V628 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x606: V629 = EQ V628 V622
0x607: V630 = ISZERO V629
0x608: V631 = 0x6bb
0x60b: JUMPI 0x6bb V630
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x60c
[0x60c:0x631]
---
Predecessors: [0x5f1]
Successors: [0xb35]
---
0x60c PUSH1 0x0
0x60e DUP2
0x60f DUP2
0x610 MSTORE
0x611 PUSH1 0x20
0x613 DUP2
0x614 SWAP1
0x615 MSTORE
0x616 PUSH1 0x40
0x618 SWAP1
0x619 SHA3
0x61a DUP1
0x61b SLOAD
0x61c PUSH1 0xff
0x61e NOT
0x61f AND
0x620 PUSH1 0x1
0x622 OR
0x623 SWAP1
0x624 SSTORE
0x625 PUSH2 0x632
0x628 DUP13
0x629 DUP13
0x62a DUP13
0x62b DUP13
0x62c DUP13
0x62d DUP13
0x62e PUSH2 0xb35
0x631 JUMP
---
0x60c: V632 = 0x0
0x610: M[0x0] = S0
0x611: V633 = 0x20
0x615: M[0x20] = 0x0
0x616: V634 = 0x40
0x619: V635 = SHA3 0x0 0x40
0x61b: V636 = S[V635]
0x61c: V637 = 0xff
0x61e: V638 = NOT 0xff
0x61f: V639 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V636
0x620: V640 = 0x1
0x622: V641 = OR 0x1 V639
0x624: S[V635] = V641
0x625: V642 = 0x632
0x62e: V643 = 0xb35
0x631: JUMP 0xb35
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x632, S11, S10, S9, S8, S7, S6]
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x632, S11, S10, S9, S8, S7, S6]

================================

Block 0x632
[0x632:0x638]
---
Predecessors: [0xb56]
Successors: [0x639, 0x63a]
---
0x632 JUMPDEST
0x633 ISZERO
0x634 ISZERO
0x635 PUSH2 0x63a
0x638 JUMPI
---
0x632: JUMPDEST 
0x633: V644 = ISZERO 0x1
0x634: V645 = ISZERO 0x0
0x635: V646 = 0x63a
0x638: JUMPI 0x63a 0x1
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S6, S5, S4, S3, S2, S1]

================================

Block 0x639
[0x639:0x639]
---
Predecessors: [0x632]
Successors: []
---
0x639 INVALID
---
0x639: INVALID 
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S5, S4, S3, S2, S1, S0]

================================

Block 0x63a
[0x63a:0x6ba]
---
Predecessors: [0x632]
Successors: [0x73a]
---
0x63a JUMPDEST
0x63b DUP7
0x63c PUSH1 0x1
0x63e PUSH1 0xa0
0x640 PUSH1 0x2
0x642 EXP
0x643 SUB
0x644 AND
0x645 DUP11
0x646 PUSH1 0x1
0x648 PUSH1 0xa0
0x64a PUSH1 0x2
0x64c EXP
0x64d SUB
0x64e AND
0x64f DUP14
0x650 PUSH1 0x1
0x652 PUSH1 0xa0
0x654 PUSH1 0x2
0x656 EXP
0x657 SUB
0x658 AND
0x659 PUSH32 0xe59c5e56d85b2124f5e7f82cb5fcc6d28a4a241a9bdd732704ac9d3b6bfc98ab
0x67a DUP15
0x67b DUP14
0x67c DUP14
0x67d DUP13
0x67e DUP13
0x67f PUSH1 0x40
0x681 MLOAD
0x682 SWAP5
0x683 DUP6
0x684 MSTORE
0x685 PUSH1 0x1
0x687 PUSH1 0xa0
0x689 PUSH1 0x2
0x68b EXP
0x68c SUB
0x68d SWAP1
0x68e SWAP4
0x68f AND
0x690 PUSH1 0x20
0x692 DUP6
0x693 ADD
0x694 MSTORE
0x695 PUSH1 0x40
0x697 DUP1
0x698 DUP6
0x699 ADD
0x69a SWAP3
0x69b SWAP1
0x69c SWAP3
0x69d MSTORE
0x69e PUSH1 0x60
0x6a0 DUP5
0x6a1 ADD
0x6a2 MSTORE
0x6a3 PUSH1 0x80
0x6a5 DUP4
0x6a6 ADD
0x6a7 SWAP2
0x6a8 SWAP1
0x6a9 SWAP2
0x6aa MSTORE
0x6ab PUSH1 0xa0
0x6ad SWAP1
0x6ae SWAP2
0x6af ADD
0x6b0 SWAP1
0x6b1 MLOAD
0x6b2 DUP1
0x6b3 SWAP2
0x6b4 SUB
0x6b5 SWAP1
0x6b6 LOG4
0x6b7 PUSH2 0x73a
0x6ba JUMP
---
0x63a: JUMPDEST 
0x63c: V647 = 0x1
0x63e: V648 = 0xa0
0x640: V649 = 0x2
0x642: V650 = EXP 0x2 0xa0
0x643: V651 = SUB 0x10000000000000000000000000000000000000000 0x1
0x644: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x646: V653 = 0x1
0x648: V654 = 0xa0
0x64a: V655 = 0x2
0x64c: V656 = EXP 0x2 0xa0
0x64d: V657 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64e: V658 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x650: V659 = 0x1
0x652: V660 = 0xa0
0x654: V661 = 0x2
0x656: V662 = EXP 0x2 0xa0
0x657: V663 = SUB 0x10000000000000000000000000000000000000000 0x1
0x658: V664 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x659: V665 = 0xe59c5e56d85b2124f5e7f82cb5fcc6d28a4a241a9bdd732704ac9d3b6bfc98ab
0x67f: V666 = 0x40
0x681: V667 = M[0x40]
0x684: M[V667] = V32
0x685: V668 = 0x1
0x687: V669 = 0xa0
0x689: V670 = 0x2
0x68b: V671 = EXP 0x2 0xa0
0x68c: V672 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68f: V673 = AND V38 0xffffffffffffffffffffffffffffffffffffffff
0x690: V674 = 0x20
0x693: V675 = ADD V667 0x20
0x694: M[V675] = V673
0x695: V676 = 0x40
0x699: V677 = ADD V667 0x40
0x69d: M[V677] = V40
0x69e: V678 = 0x60
0x6a1: V679 = ADD V667 0x60
0x6a2: M[V679] = S5
0x6a3: V680 = 0x80
0x6a6: V681 = ADD V667 0x80
0x6aa: M[V681] = S4
0x6ab: V682 = 0xa0
0x6af: V683 = ADD V667 0xa0
0x6b1: V684 = M[0x40]
0x6b4: V685 = SUB V683 V684
0x6b6: LOG V684 V685 0xe59c5e56d85b2124f5e7f82cb5fcc6d28a4a241a9bdd732704ac9d3b6bfc98ab V664 V658 V652
0x6b7: V686 = 0x73a
0x6ba: JUMP 0x73a
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S5, S4, S3, S2, S1, S0]

================================

Block 0x6bb
[0x6bb:0x739]
---
Predecessors: [0x5f1]
Successors: [0x73a]
---
0x6bb JUMPDEST
0x6bc DUP7
0x6bd PUSH1 0x1
0x6bf PUSH1 0xa0
0x6c1 PUSH1 0x2
0x6c3 EXP
0x6c4 SUB
0x6c5 AND
0x6c6 DUP11
0x6c7 PUSH1 0x1
0x6c9 PUSH1 0xa0
0x6cb PUSH1 0x2
0x6cd EXP
0x6ce SUB
0x6cf AND
0x6d0 DUP14
0x6d1 PUSH1 0x1
0x6d3 PUSH1 0xa0
0x6d5 PUSH1 0x2
0x6d7 EXP
0x6d8 SUB
0x6d9 AND
0x6da PUSH1 0x0
0x6dc DUP1
0x6dd MLOAD
0x6de PUSH1 0x20
0x6e0 PUSH2 0xb74
0x6e3 DUP4
0x6e4 CODECOPY
0x6e5 DUP2
0x6e6 MLOAD
0x6e7 SWAP2
0x6e8 MSTORE
0x6e9 PUSH1 0x6
0x6eb DUP16
0x6ec DUP15
0x6ed DUP15
0x6ee DUP14
0x6ef DUP14
0x6f0 PUSH1 0x40
0x6f2 MLOAD
0x6f3 DUP1
0x6f4 DUP8
0x6f5 DUP2
0x6f6 MSTORE
0x6f7 PUSH1 0x20
0x6f9 ADD
0x6fa DUP7
0x6fb DUP2
0x6fc MSTORE
0x6fd PUSH1 0x20
0x6ff ADD
0x700 DUP6
0x701 PUSH1 0x1
0x703 PUSH1 0xa0
0x705 PUSH1 0x2
0x707 EXP
0x708 SUB
0x709 AND
0x70a PUSH1 0x1
0x70c PUSH1 0xa0
0x70e PUSH1 0x2
0x710 EXP
0x711 SUB
0x712 AND
0x713 DUP2
0x714 MSTORE
0x715 PUSH1 0x20
0x717 ADD
0x718 DUP5
0x719 DUP2
0x71a MSTORE
0x71b PUSH1 0x20
0x71d ADD
0x71e DUP4
0x71f DUP2
0x720 MSTORE
0x721 PUSH1 0x20
0x723 ADD
0x724 DUP3
0x725 DUP2
0x726 MSTORE
0x727 PUSH1 0x20
0x729 ADD
0x72a SWAP7
0x72b POP
0x72c POP
0x72d POP
0x72e POP
0x72f POP
0x730 POP
0x731 POP
0x732 PUSH1 0x40
0x734 MLOAD
0x735 DUP1
0x736 SWAP2
0x737 SUB
0x738 SWAP1
0x739 LOG4
---
0x6bb: JUMPDEST 
0x6bd: V687 = 0x1
0x6bf: V688 = 0xa0
0x6c1: V689 = 0x2
0x6c3: V690 = EXP 0x2 0xa0
0x6c4: V691 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c5: V692 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x6c7: V693 = 0x1
0x6c9: V694 = 0xa0
0x6cb: V695 = 0x2
0x6cd: V696 = EXP 0x2 0xa0
0x6ce: V697 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cf: V698 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x6d1: V699 = 0x1
0x6d3: V700 = 0xa0
0x6d5: V701 = 0x2
0x6d7: V702 = EXP 0x2 0xa0
0x6d8: V703 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d9: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x6da: V705 = 0x0
0x6dd: V706 = M[0x0]
0x6de: V707 = 0x20
0x6e0: V708 = 0xb74
0x6e4: CODECOPY 0x0 0xb74 0x20
0x6e6: V709 = M[0x0]
0x6e8: M[0x0] = V706
0x6e9: V710 = 0x6
0x6f0: V711 = 0x40
0x6f2: V712 = M[0x40]
0x6f6: M[V712] = 0x6
0x6f7: V713 = 0x20
0x6f9: V714 = ADD 0x20 V712
0x6fc: M[V714] = S10
0x6fd: V715 = 0x20
0x6ff: V716 = ADD 0x20 V714
0x701: V717 = 0x1
0x703: V718 = 0xa0
0x705: V719 = 0x2
0x707: V720 = EXP 0x2 0xa0
0x708: V721 = SUB 0x10000000000000000000000000000000000000000 0x1
0x709: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x70a: V723 = 0x1
0x70c: V724 = 0xa0
0x70e: V725 = 0x2
0x710: V726 = EXP 0x2 0xa0
0x711: V727 = SUB 0x10000000000000000000000000000000000000000 0x1
0x712: V728 = AND 0xffffffffffffffffffffffffffffffffffffffff V722
0x714: M[V716] = V728
0x715: V729 = 0x20
0x717: V730 = ADD 0x20 V716
0x71a: M[V730] = S7
0x71b: V731 = 0x20
0x71d: V732 = ADD 0x20 V730
0x720: M[V732] = S5
0x721: V733 = 0x20
0x723: V734 = ADD 0x20 V732
0x726: M[V734] = S4
0x727: V735 = 0x20
0x729: V736 = ADD 0x20 V734
0x732: V737 = 0x40
0x734: V738 = M[0x40]
0x737: V739 = SUB V736 V738
0x739: LOG V738 V739 V709 V704 V698 V692
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x73a
[0x73a:0x747]
---
Predecessors: [0x166, 0x223, 0x305, 0x531, 0x56e, 0x63a, 0x6bb, 0x772, 0x7a7]
Successors: [0x9e]
---
0x73a JUMPDEST
0x73b POP
0x73c POP
0x73d POP
0x73e POP
0x73f POP
0x740 POP
0x741 POP
0x742 POP
0x743 POP
0x744 POP
0x745 POP
0x746 POP
0x747 JUMP
---
0x73a: JUMPDEST 
0x747: JUMP S12
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 13
Stack additions: []
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S13]

================================

Block 0x748
[0x748:0x75c]
---
Predecessors: [0xab]
Successors: [0xb6]
---
0x748 JUMPDEST
0x749 PUSH1 0x0
0x74b PUSH1 0x20
0x74d DUP2
0x74e SWAP1
0x74f MSTORE
0x750 SWAP1
0x751 DUP2
0x752 MSTORE
0x753 PUSH1 0x40
0x755 SWAP1
0x756 SHA3
0x757 SLOAD
0x758 PUSH1 0xff
0x75a AND
0x75b DUP2
0x75c JUMP
---
0x748: JUMPDEST 
0x749: V740 = 0x0
0x74b: V741 = 0x20
0x74f: M[0x20] = 0x0
0x752: M[0x0] = V63
0x753: V742 = 0x40
0x756: V743 = SHA3 0x0 0x40
0x757: V744 = S[V743]
0x758: V745 = 0xff
0x75a: V746 = AND 0xff V744
0x75c: JUMP 0xb6
---
Entry stack: [V11, 0xb6, V63]
Stack pops: 2
Stack additions: [S1, V746]
Exit stack: [V11, 0xb6, V746]

================================

Block 0x75d
[0x75d:0x771]
---
Predecessors: [0xd5]
Successors: [0x8c7]
---
0x75d JUMPDEST
0x75e PUSH1 0x0
0x760 PUSH2 0x772
0x763 DUP13
0x764 DUP13
0x765 DUP13
0x766 DUP13
0x767 DUP13
0x768 DUP13
0x769 DUP13
0x76a DUP13
0x76b DUP13
0x76c DUP13
0x76d DUP13
0x76e PUSH2 0x8c7
0x771 JUMP
---
0x75d: JUMPDEST 
0x75e: V747 = 0x0
0x760: V748 = 0x772
0x76e: V749 = 0x8c7
0x771: JUMP 0x8c7
---
Entry stack: [V11, 0x9e, V86, V88, V91, V94, V96, V99, V101, V103, V107, V109, V111]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x772, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9e, V86, V88, V91, V94, V96, V99, V101, V103, V107, V109, V111, 0x0, 0x772, V86, V88, V91, V94, V96, V99, V101, V103, V107, V109, V111]

================================

Block 0x772
[0x772:0x78e]
---
Predecessors: [0xa6c]
Successors: [0x73a, 0x78f]
---
0x772 JUMPDEST
0x773 SWAP1
0x774 POP
0x775 DUP12
0x776 PUSH1 0x1
0x778 PUSH1 0xa0
0x77a PUSH1 0x2
0x77c EXP
0x77d SUB
0x77e AND
0x77f CALLER
0x780 PUSH1 0x1
0x782 PUSH1 0xa0
0x784 PUSH1 0x2
0x786 EXP
0x787 SUB
0x788 AND
0x789 EQ
0x78a ISZERO
0x78b PUSH2 0x73a
0x78e JUMPI
---
0x772: JUMPDEST 
0x776: V750 = 0x1
0x778: V751 = 0xa0
0x77a: V752 = 0x2
0x77c: V753 = EXP 0x2 0xa0
0x77d: V754 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77e: V755 = AND 0xffffffffffffffffffffffffffffffffffffffff S12
0x77f: V756 = CALLER
0x780: V757 = 0x1
0x782: V758 = 0xa0
0x784: V759 = 0x2
0x786: V760 = EXP 0x2 0xa0
0x787: V761 = SUB 0x10000000000000000000000000000000000000000 0x1
0x788: V762 = AND 0xffffffffffffffffffffffffffffffffffffffff V756
0x789: V763 = EQ V762 V755
0x78a: V764 = ISZERO V763
0x78b: V765 = 0x73a
0x78e: JUMPI 0x73a V764
---
Entry stack: [V11, 0x9e, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]
Exit stack: [V11, 0x9e, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x78f
[0x78f:0x7a6]
---
Predecessors: [0x772]
Successors: [0x7a7, 0x83b]
---
0x78f PUSH1 0x0
0x791 DUP2
0x792 DUP2
0x793 MSTORE
0x794 PUSH1 0x20
0x796 DUP2
0x797 SWAP1
0x798 MSTORE
0x799 PUSH1 0x40
0x79b SWAP1
0x79c SHA3
0x79d SLOAD
0x79e PUSH1 0xff
0x7a0 AND
0x7a1 ISZERO
0x7a2 ISZERO
0x7a3 PUSH2 0x83b
0x7a6 JUMPI
---
0x78f: V766 = 0x0
0x793: M[0x0] = S0
0x794: V767 = 0x20
0x798: M[0x20] = 0x0
0x799: V768 = 0x40
0x79c: V769 = SHA3 0x0 0x40
0x79d: V770 = S[V769]
0x79e: V771 = 0xff
0x7a0: V772 = AND 0xff V770
0x7a1: V773 = ISZERO V772
0x7a2: V774 = ISZERO V773
0x7a3: V775 = 0x83b
0x7a6: JUMPI 0x83b V774
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x7a7
[0x7a7:0x83a]
---
Predecessors: [0x78f]
Successors: [0x73a]
---
0x7a7 PUSH1 0x0
0x7a9 DUP2
0x7aa DUP2
0x7ab MSTORE
0x7ac PUSH1 0x20
0x7ae DUP2
0x7af SWAP1
0x7b0 MSTORE
0x7b1 PUSH1 0x40
0x7b3 SWAP1
0x7b4 DUP2
0x7b5 SWAP1
0x7b6 SHA3
0x7b7 DUP1
0x7b8 SLOAD
0x7b9 PUSH1 0xff
0x7bb NOT
0x7bc AND
0x7bd PUSH1 0x1
0x7bf OR
0x7c0 SWAP1
0x7c1 SSTORE
0x7c2 PUSH1 0x1
0x7c4 PUSH1 0xa0
0x7c6 PUSH1 0x2
0x7c8 EXP
0x7c9 SUB
0x7ca DUP1
0x7cb DUP10
0x7cc AND
0x7cd SWAP2
0x7ce DUP13
0x7cf DUP3
0x7d0 AND
0x7d1 SWAP2
0x7d2 DUP16
0x7d3 AND
0x7d4 SWAP1
0x7d5 PUSH32 0x8ce0bae8f3488649f2f29762dfc77af336a695060bc787b9c813c6fdd79fdf25
0x7f6 SWAP1
0x7f7 DUP16
0x7f8 SWAP1
0x7f9 DUP15
0x7fa SWAP1
0x7fb DUP15
0x7fc SWAP1
0x7fd DUP14
0x7fe SWAP1
0x7ff DUP14
0x800 SWAP1
0x801 MLOAD
0x802 SWAP5
0x803 DUP6
0x804 MSTORE
0x805 PUSH1 0x1
0x807 PUSH1 0xa0
0x809 PUSH1 0x2
0x80b EXP
0x80c SUB
0x80d SWAP1
0x80e SWAP4
0x80f AND
0x810 PUSH1 0x20
0x812 DUP6
0x813 ADD
0x814 MSTORE
0x815 PUSH1 0x40
0x817 DUP1
0x818 DUP6
0x819 ADD
0x81a SWAP3
0x81b SWAP1
0x81c SWAP3
0x81d MSTORE
0x81e PUSH1 0x60
0x820 DUP5
0x821 ADD
0x822 MSTORE
0x823 PUSH1 0x80
0x825 DUP4
0x826 ADD
0x827 SWAP2
0x828 SWAP1
0x829 SWAP2
0x82a MSTORE
0x82b PUSH1 0xa0
0x82d SWAP1
0x82e SWAP2
0x82f ADD
0x830 SWAP1
0x831 MLOAD
0x832 DUP1
0x833 SWAP2
0x834 SUB
0x835 SWAP1
0x836 LOG4
0x837 PUSH2 0x73a
0x83a JUMP
---
0x7a7: V776 = 0x0
0x7ab: M[0x0] = S0
0x7ac: V777 = 0x20
0x7b0: M[0x20] = 0x0
0x7b1: V778 = 0x40
0x7b6: V779 = SHA3 0x0 0x40
0x7b8: V780 = S[V779]
0x7b9: V781 = 0xff
0x7bb: V782 = NOT 0xff
0x7bc: V783 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V780
0x7bd: V784 = 0x1
0x7bf: V785 = OR 0x1 V783
0x7c1: S[V779] = V785
0x7c2: V786 = 0x1
0x7c4: V787 = 0xa0
0x7c6: V788 = 0x2
0x7c8: V789 = EXP 0x2 0xa0
0x7c9: V790 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7cc: V791 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x7d0: V792 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x7d3: V793 = AND S11 0xffffffffffffffffffffffffffffffffffffffff
0x7d5: V794 = 0x8ce0bae8f3488649f2f29762dfc77af336a695060bc787b9c813c6fdd79fdf25
0x801: V795 = M[0x40]
0x804: M[V795] = S10
0x805: V796 = 0x1
0x807: V797 = 0xa0
0x809: V798 = 0x2
0x80b: V799 = EXP 0x2 0xa0
0x80c: V800 = SUB 0x10000000000000000000000000000000000000000 0x1
0x80f: V801 = AND S8 0xffffffffffffffffffffffffffffffffffffffff
0x810: V802 = 0x20
0x813: V803 = ADD V795 0x20
0x814: M[V803] = V801
0x815: V804 = 0x40
0x819: V805 = ADD V795 0x40
0x81d: M[V805] = S7
0x81e: V806 = 0x60
0x821: V807 = ADD V795 0x60
0x822: M[V807] = S5
0x823: V808 = 0x80
0x826: V809 = ADD V795 0x80
0x82a: M[V809] = S4
0x82b: V810 = 0xa0
0x82f: V811 = ADD V795 0xa0
0x831: V812 = M[0x40]
0x834: V813 = SUB V811 V812
0x836: LOG V812 V813 0x8ce0bae8f3488649f2f29762dfc77af336a695060bc787b9c813c6fdd79fdf25 V793 V792 V791
0x837: V814 = 0x73a
0x83a: JUMP 0x73a
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x83b
[0x83b:0x8c6]
---
Predecessors: [0x78f]
Successors: [0x9e]
---
0x83b JUMPDEST
0x83c DUP7
0x83d PUSH1 0x1
0x83f PUSH1 0xa0
0x841 PUSH1 0x2
0x843 EXP
0x844 SUB
0x845 AND
0x846 DUP11
0x847 PUSH1 0x1
0x849 PUSH1 0xa0
0x84b PUSH1 0x2
0x84d EXP
0x84e SUB
0x84f AND
0x850 DUP14
0x851 PUSH1 0x1
0x853 PUSH1 0xa0
0x855 PUSH1 0x2
0x857 EXP
0x858 SUB
0x859 AND
0x85a PUSH1 0x0
0x85c DUP1
0x85d MLOAD
0x85e PUSH1 0x20
0x860 PUSH2 0xb74
0x863 DUP4
0x864 CODECOPY
0x865 DUP2
0x866 MLOAD
0x867 SWAP2
0x868 MSTORE
0x869 PUSH1 0x7
0x86b DUP16
0x86c DUP15
0x86d DUP15
0x86e DUP14
0x86f DUP14
0x870 PUSH1 0x40
0x872 MLOAD
0x873 DUP1
0x874 DUP8
0x875 DUP2
0x876 MSTORE
0x877 PUSH1 0x20
0x879 ADD
0x87a DUP7
0x87b DUP2
0x87c MSTORE
0x87d PUSH1 0x20
0x87f ADD
0x880 DUP6
0x881 PUSH1 0x1
0x883 PUSH1 0xa0
0x885 PUSH1 0x2
0x887 EXP
0x888 SUB
0x889 AND
0x88a PUSH1 0x1
0x88c PUSH1 0xa0
0x88e PUSH1 0x2
0x890 EXP
0x891 SUB
0x892 AND
0x893 DUP2
0x894 MSTORE
0x895 PUSH1 0x20
0x897 ADD
0x898 DUP5
0x899 DUP2
0x89a MSTORE
0x89b PUSH1 0x20
0x89d ADD
0x89e DUP4
0x89f DUP2
0x8a0 MSTORE
0x8a1 PUSH1 0x20
0x8a3 ADD
0x8a4 DUP3
0x8a5 DUP2
0x8a6 MSTORE
0x8a7 PUSH1 0x20
0x8a9 ADD
0x8aa SWAP7
0x8ab POP
0x8ac POP
0x8ad POP
0x8ae POP
0x8af POP
0x8b0 POP
0x8b1 POP
0x8b2 PUSH1 0x40
0x8b4 MLOAD
0x8b5 DUP1
0x8b6 SWAP2
0x8b7 SUB
0x8b8 SWAP1
0x8b9 LOG4
0x8ba POP
0x8bb POP
0x8bc POP
0x8bd POP
0x8be POP
0x8bf POP
0x8c0 POP
0x8c1 POP
0x8c2 POP
0x8c3 POP
0x8c4 POP
0x8c5 POP
0x8c6 JUMP
---
0x83b: JUMPDEST 
0x83d: V815 = 0x1
0x83f: V816 = 0xa0
0x841: V817 = 0x2
0x843: V818 = EXP 0x2 0xa0
0x844: V819 = SUB 0x10000000000000000000000000000000000000000 0x1
0x845: V820 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x847: V821 = 0x1
0x849: V822 = 0xa0
0x84b: V823 = 0x2
0x84d: V824 = EXP 0x2 0xa0
0x84e: V825 = SUB 0x10000000000000000000000000000000000000000 0x1
0x84f: V826 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x851: V827 = 0x1
0x853: V828 = 0xa0
0x855: V829 = 0x2
0x857: V830 = EXP 0x2 0xa0
0x858: V831 = SUB 0x10000000000000000000000000000000000000000 0x1
0x859: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x85a: V833 = 0x0
0x85d: V834 = M[0x0]
0x85e: V835 = 0x20
0x860: V836 = 0xb74
0x864: CODECOPY 0x0 0xb74 0x20
0x866: V837 = M[0x0]
0x868: M[0x0] = V834
0x869: V838 = 0x7
0x870: V839 = 0x40
0x872: V840 = M[0x40]
0x876: M[V840] = 0x7
0x877: V841 = 0x20
0x879: V842 = ADD 0x20 V840
0x87c: M[V842] = S10
0x87d: V843 = 0x20
0x87f: V844 = ADD 0x20 V842
0x881: V845 = 0x1
0x883: V846 = 0xa0
0x885: V847 = 0x2
0x887: V848 = EXP 0x2 0xa0
0x888: V849 = SUB 0x10000000000000000000000000000000000000000 0x1
0x889: V850 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x88a: V851 = 0x1
0x88c: V852 = 0xa0
0x88e: V853 = 0x2
0x890: V854 = EXP 0x2 0xa0
0x891: V855 = SUB 0x10000000000000000000000000000000000000000 0x1
0x892: V856 = AND 0xffffffffffffffffffffffffffffffffffffffff V850
0x894: M[V844] = V856
0x895: V857 = 0x20
0x897: V858 = ADD 0x20 V844
0x89a: M[V858] = S7
0x89b: V859 = 0x20
0x89d: V860 = ADD 0x20 V858
0x8a0: M[V860] = S5
0x8a1: V861 = 0x20
0x8a3: V862 = ADD 0x20 V860
0x8a6: M[V862] = S4
0x8a7: V863 = 0x20
0x8a9: V864 = ADD 0x20 V862
0x8b2: V865 = 0x40
0x8b4: V866 = M[0x40]
0x8b7: V867 = SUB V864 V866
0x8b9: LOG V866 V867 V837 V832 V826 V820
0x8c6: JUMP 0x9e
---
Entry stack: [V11, 0x9e, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 13
Stack additions: []
Exit stack: [V11]

================================

Block 0x8c7
[0x8c7:0x8d1]
---
Predecessors: [0x2a6, 0x75d]
Successors: [0xb61]
---
0x8c7 JUMPDEST
0x8c8 PUSH1 0x0
0x8ca DUP1
0x8cb PUSH2 0x8d2
0x8ce PUSH2 0xb61
0x8d1 JUMP
---
0x8c7: JUMPDEST 
0x8c8: V868 = 0x0
0x8cb: V869 = 0x8d2
0x8ce: V870 = 0xb61
0x8d1: JUMP 0xb61
---
Entry stack: [V11, 0x9e, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x0, {0x2b9, 0x772}, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x8d2]
Exit stack: [V11, 0x9e, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x0, {0x2b9, 0x772}, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, 0x8d2]

================================

Block 0x8d2
[0x8d2:0x98e]
---
Predecessors: [0xb61]
Successors: [0x98f]
---
0x8d2 JUMPDEST
0x8d3 PUSH1 0x0
0x8d5 DUP15
0x8d6 DUP15
0x8d7 DUP15
0x8d8 DUP15
0x8d9 DUP15
0x8da DUP15
0x8db DUP15
0x8dc DUP15
0x8dd PUSH1 0x40
0x8df MLOAD
0x8e0 PUSH13 0x1000000000000000000000000
0x8ee PUSH1 0x1
0x8f0 PUSH1 0xa0
0x8f2 PUSH1 0x2
0x8f4 EXP
0x8f5 SUB
0x8f6 SWAP10
0x8f7 DUP11
0x8f8 AND
0x8f9 DUP2
0x8fa MUL
0x8fb DUP3
0x8fc MSTORE
0x8fd PUSH1 0x14
0x8ff DUP3
0x900 ADD
0x901 SWAP9
0x902 SWAP1
0x903 SWAP9
0x904 MSTORE
0x905 SWAP6
0x906 DUP9
0x907 AND
0x908 DUP8
0x909 MUL
0x90a PUSH1 0x34
0x90c DUP8
0x90d ADD
0x90e MSTORE
0x90f SWAP4
0x910 DUP8
0x911 AND
0x912 DUP7
0x913 MUL
0x914 PUSH1 0x48
0x916 DUP7
0x917 ADD
0x918 MSTORE
0x919 PUSH1 0x5c
0x91b DUP6
0x91c ADD
0x91d SWAP3
0x91e SWAP1
0x91f SWAP3
0x920 MSTORE
0x921 SWAP1
0x922 SWAP5
0x923 AND
0x924 SWAP1
0x925 SWAP3
0x926 MUL
0x927 PUSH1 0x7c
0x929 DUP3
0x92a ADD
0x92b MSTORE
0x92c PUSH1 0x90
0x92e DUP2
0x92f ADD
0x930 SWAP3
0x931 SWAP1
0x932 SWAP3
0x933 MSTORE
0x934 PUSH1 0xb0
0x936 DUP3
0x937 ADD
0x938 MSTORE
0x939 PUSH1 0xd0
0x93b ADD
0x93c PUSH1 0x40
0x93e MLOAD
0x93f DUP1
0x940 SWAP2
0x941 SUB
0x942 SWAP1
0x943 SHA3
0x944 SWAP3
0x945 POP
0x946 PUSH1 0x40
0x948 DUP1
0x949 MLOAD
0x94a SWAP1
0x94b DUP2
0x94c ADD
0x94d PUSH1 0x40
0x94f MSTORE
0x950 DUP1
0x951 PUSH1 0x1c
0x953 DUP2
0x954 MSTORE
0x955 PUSH1 0x20
0x957 ADD
0x958 PUSH32 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0x979 DUP2
0x97a MSTORE
0x97b POP
0x97c SWAP2
0x97d POP
0x97e DUP2
0x97f DUP4
0x980 PUSH1 0x40
0x982 MLOAD
0x983 DUP1
0x984 DUP4
0x985 DUP1
0x986 MLOAD
0x987 SWAP1
0x988 PUSH1 0x20
0x98a ADD
0x98b SWAP1
0x98c DUP1
0x98d DUP4
0x98e DUP4
---
0x8d2: JUMPDEST 
0x8d3: V871 = 0x0
0x8dd: V872 = 0x40
0x8df: V873 = M[0x40]
0x8e0: V874 = 0x1000000000000000000000000
0x8ee: V875 = 0x1
0x8f0: V876 = 0xa0
0x8f2: V877 = 0x2
0x8f4: V878 = EXP 0x2 0xa0
0x8f5: V879 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f8: V880 = AND 0xffffffffffffffffffffffffffffffffffffffff S13
0x8fa: V881 = MUL 0x1000000000000000000000000 V880
0x8fc: M[V873] = V881
0x8fd: V882 = 0x14
0x900: V883 = ADD V873 0x14
0x904: M[V883] = S12
0x907: V884 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x909: V885 = MUL 0x1000000000000000000000000 V884
0x90a: V886 = 0x34
0x90d: V887 = ADD V873 0x34
0x90e: M[V887] = V885
0x911: V888 = AND 0xffffffffffffffffffffffffffffffffffffffff S10
0x913: V889 = MUL 0x1000000000000000000000000 V888
0x914: V890 = 0x48
0x917: V891 = ADD V873 0x48
0x918: M[V891] = V889
0x919: V892 = 0x5c
0x91c: V893 = ADD V873 0x5c
0x920: M[V893] = S9
0x923: V894 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x926: V895 = MUL 0x1000000000000000000000000 V894
0x927: V896 = 0x7c
0x92a: V897 = ADD V873 0x7c
0x92b: M[V897] = V895
0x92c: V898 = 0x90
0x92f: V899 = ADD V873 0x90
0x933: M[V899] = S7
0x934: V900 = 0xb0
0x937: V901 = ADD V873 0xb0
0x938: M[V901] = S6
0x939: V902 = 0xd0
0x93b: V903 = ADD 0xd0 V873
0x93c: V904 = 0x40
0x93e: V905 = M[0x40]
0x941: V906 = SUB V903 V905
0x943: V907 = SHA3 V905 V906
0x946: V908 = 0x40
0x949: V909 = M[0x40]
0x94c: V910 = ADD V909 0x40
0x94d: V911 = 0x40
0x94f: M[0x40] = V910
0x951: V912 = 0x1c
0x954: M[V909] = 0x1c
0x955: V913 = 0x20
0x957: V914 = ADD 0x20 V909
0x958: V915 = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0x97a: M[V914] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0x980: V916 = 0x40
0x982: V917 = M[0x40]
0x986: V918 = M[V909]
0x988: V919 = 0x20
0x98a: V920 = ADD 0x20 V909
---
Entry stack: [V11, 0x9e, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0x0, {0x2b9, 0x772}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, 0x0, V1077]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V907, V909, 0x0, V909, V907, V917, V917, V920, V918, V918, V917, V920]
Exit stack: [V11, 0x9e, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0x0, {0x2b9, 0x772}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V907, V909, 0x0, V909, V907, V917, V917, V920, V918, V918, V917, V920]

================================

Block 0x98f
[0x98f:0x997]
---
Predecessors: [0x8d2, 0x998]
Successors: [0x998, 0x9ae]
---
0x98f JUMPDEST
0x990 PUSH1 0x20
0x992 DUP4
0x993 LT
0x994 PUSH2 0x9ae
0x997 JUMPI
---
0x98f: JUMPDEST 
0x990: V921 = 0x20
0x993: V922 = LT S2 0x20
0x994: V923 = 0x9ae
0x997: JUMPI 0x9ae V922
---
Entry stack: [V11, 0x9e, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, 0x0, {0x2b9, 0x772}, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x0, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x9e, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, 0x0, {0x2b9, 0x772}, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x0, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x998
[0x998:0x9ad]
---
Predecessors: [0x98f]
Successors: [0x98f]
---
0x998 DUP1
0x999 MLOAD
0x99a DUP3
0x99b MSTORE
0x99c PUSH1 0x1f
0x99e NOT
0x99f SWAP1
0x9a0 SWAP3
0x9a1 ADD
0x9a2 SWAP2
0x9a3 PUSH1 0x20
0x9a5 SWAP2
0x9a6 DUP3
0x9a7 ADD
0x9a8 SWAP2
0x9a9 ADD
0x9aa PUSH2 0x98f
0x9ad JUMP
---
0x999: V924 = M[S0]
0x99b: M[S1] = V924
0x99c: V925 = 0x1f
0x99e: V926 = NOT 0x1f
0x9a1: V927 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x9a3: V928 = 0x20
0x9a7: V929 = ADD 0x20 S1
0x9a9: V930 = ADD 0x20 S0
0x9aa: V931 = 0x98f
0x9ad: JUMP 0x98f
---
Entry stack: [V11, 0x9e, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, 0x0, {0x2b9, 0x772}, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x0, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V927, V929, V930]
Exit stack: [V11, 0x9e, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, 0x0, {0x2b9, 0x772}, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x0, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, V927, V929, V930]

================================

Block 0x9ae
[0x9ae:0xa4b]
---
Predecessors: [0x98f]
Successors: [0xa4c, 0xa50]
---
0x9ae JUMPDEST
0x9af PUSH1 0x1
0x9b1 DUP4
0x9b2 PUSH1 0x20
0x9b4 SUB
0x9b5 PUSH2 0x100
0x9b8 EXP
0x9b9 SUB
0x9ba DUP1
0x9bb NOT
0x9bc DUP3
0x9bd MLOAD
0x9be AND
0x9bf DUP2
0x9c0 DUP5
0x9c1 MLOAD
0x9c2 AND
0x9c3 OR
0x9c4 SWAP1
0x9c5 SWAP3
0x9c6 MSTORE
0x9c7 POP
0x9c8 POP
0x9c9 POP
0x9ca SWAP2
0x9cb SWAP1
0x9cc SWAP2
0x9cd ADD
0x9ce SWAP3
0x9cf DUP4
0x9d0 MSTORE
0x9d1 POP
0x9d2 POP
0x9d3 PUSH1 0x20
0x9d5 ADD
0x9d6 SWAP1
0x9d7 POP
0x9d8 PUSH1 0x40
0x9da MLOAD
0x9db DUP1
0x9dc SWAP2
0x9dd SUB
0x9de SWAP1
0x9df SHA3
0x9e0 SWAP1
0x9e1 POP
0x9e2 DUP15
0x9e3 PUSH1 0x1
0x9e5 PUSH1 0xa0
0x9e7 PUSH1 0x2
0x9e9 EXP
0x9ea SUB
0x9eb AND
0x9ec PUSH1 0x1
0x9ee DUP3
0x9ef DUP10
0x9f0 DUP10
0x9f1 DUP10
0x9f2 PUSH1 0x40
0x9f4 MLOAD
0x9f5 PUSH1 0x0
0x9f7 DUP2
0x9f8 MSTORE
0x9f9 PUSH1 0x20
0x9fb ADD
0x9fc PUSH1 0x40
0x9fe MSTORE
0x9ff PUSH1 0x0
0xa01 PUSH1 0x40
0xa03 MLOAD
0xa04 PUSH1 0x20
0xa06 ADD
0xa07 MSTORE
0xa08 PUSH1 0x40
0xa0a MLOAD
0xa0b SWAP4
0xa0c DUP5
0xa0d MSTORE
0xa0e PUSH1 0xff
0xa10 SWAP1
0xa11 SWAP3
0xa12 AND
0xa13 PUSH1 0x20
0xa15 DUP1
0xa16 DUP6
0xa17 ADD
0xa18 SWAP2
0xa19 SWAP1
0xa1a SWAP2
0xa1b MSTORE
0xa1c PUSH1 0x40
0xa1e DUP1
0xa1f DUP6
0xa20 ADD
0xa21 SWAP3
0xa22 SWAP1
0xa23 SWAP3
0xa24 MSTORE
0xa25 PUSH1 0x60
0xa27 DUP5
0xa28 ADD
0xa29 SWAP3
0xa2a SWAP1
0xa2b SWAP3
0xa2c MSTORE
0xa2d PUSH1 0x80
0xa2f SWAP1
0xa30 SWAP3
0xa31 ADD
0xa32 SWAP2
0xa33 MLOAD
0xa34 PUSH1 0x20
0xa36 DUP2
0xa37 SUB
0xa38 SWAP1
0xa39 DUP1
0xa3a DUP5
0xa3b SUB
0xa3c SWAP1
0xa3d PUSH1 0x0
0xa3f DUP7
0xa40 PUSH2 0x646e
0xa43 GAS
0xa44 SUB
0xa45 CALL
0xa46 ISZERO
0xa47 ISZERO
0xa48 PUSH2 0xa50
0xa4b JUMPI
---
0x9ae: JUMPDEST 
0x9af: V932 = 0x1
0x9b2: V933 = 0x20
0x9b4: V934 = SUB 0x20 S2
0x9b5: V935 = 0x100
0x9b8: V936 = EXP 0x100 V934
0x9b9: V937 = SUB V936 0x1
0x9bb: V938 = NOT V937
0x9bd: V939 = M[S0]
0x9be: V940 = AND V939 V938
0x9c1: V941 = M[S1]
0x9c2: V942 = AND V941 V937
0x9c3: V943 = OR V942 V940
0x9c6: M[S1] = V943
0x9cd: V944 = ADD S3 S5
0x9d0: M[V944] = S7
0x9d3: V945 = 0x20
0x9d5: V946 = ADD 0x20 V944
0x9d8: V947 = 0x40
0x9da: V948 = M[0x40]
0x9dd: V949 = SUB V946 V948
0x9df: V950 = SHA3 V948 V949
0x9e3: V951 = 0x1
0x9e5: V952 = 0xa0
0x9e7: V953 = 0x2
0x9e9: V954 = EXP 0x2 0xa0
0x9ea: V955 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9eb: V956 = AND 0xffffffffffffffffffffffffffffffffffffffff S23
0x9ec: V957 = 0x1
0x9f2: V958 = 0x40
0x9f4: V959 = M[0x40]
0x9f5: V960 = 0x0
0x9f8: M[V959] = 0x0
0x9f9: V961 = 0x20
0x9fb: V962 = ADD 0x20 V959
0x9fc: V963 = 0x40
0x9fe: M[0x40] = V962
0x9ff: V964 = 0x0
0xa01: V965 = 0x40
0xa03: V966 = M[0x40]
0xa04: V967 = 0x20
0xa06: V968 = ADD 0x20 V966
0xa07: M[V968] = 0x0
0xa08: V969 = 0x40
0xa0a: V970 = M[0x40]
0xa0d: M[V970] = V950
0xa0e: V971 = 0xff
0xa12: V972 = AND S15 0xff
0xa13: V973 = 0x20
0xa17: V974 = ADD V970 0x20
0xa1b: M[V974] = V972
0xa1c: V975 = 0x40
0xa20: V976 = ADD V970 0x40
0xa24: M[V976] = S14
0xa25: V977 = 0x60
0xa28: V978 = ADD V970 0x60
0xa2c: M[V978] = S13
0xa2d: V979 = 0x80
0xa31: V980 = ADD V970 0x80
0xa33: V981 = M[0x40]
0xa34: V982 = 0x20
0xa37: V983 = SUB V981 0x20
0xa3b: V984 = SUB V980 V981
0xa3d: V985 = 0x0
0xa40: V986 = 0x646e
0xa43: V987 = GAS
0xa44: V988 = SUB V987 0x646e
0xa45: V989 = CALL V988 0x1 0x0 V981 V984 V983 0x20
0xa46: V990 = ISZERO V989
0xa47: V991 = ISZERO V990
0xa48: V992 = 0xa50
0xa4b: JUMPI 0xa50 V991
---
Entry stack: [V11, 0x9e, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, 0x0, {0x2b9, 0x772}, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x0, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 24
Stack additions: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V950, V956, 0x1, V980]
Exit stack: [V11, 0x9e, S36, S35, S34, S33, S32, S31, S30, S29, S28, S27, S26, 0x0, {0x2b9, 0x772}, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0x0, S11, S10, V950, V956, 0x1, V980]

================================

Block 0xa4c
[0xa4c:0xa4f]
---
Predecessors: [0x9ae]
Successors: []
---
0xa4c PUSH1 0x0
0xa4e DUP1
0xa4f REVERT
---
0xa4c: V993 = 0x0
0xa4f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9e, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, 0x0, {0x2b9, 0x772}, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, S5, S4, V950, V956, 0x1, V980]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, 0x0, {0x2b9, 0x772}, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, S5, S4, V950, V956, 0x1, V980]

================================

Block 0xa50
[0xa50:0xa67]
---
Predecessors: [0x9ae]
Successors: [0xa68, 0xa6c]
---
0xa50 JUMPDEST
0xa51 POP
0xa52 POP
0xa53 PUSH1 0x20
0xa55 PUSH1 0x40
0xa57 MLOAD
0xa58 SUB
0xa59 MLOAD
0xa5a PUSH1 0x1
0xa5c PUSH1 0xa0
0xa5e PUSH1 0x2
0xa60 EXP
0xa61 SUB
0xa62 AND
0xa63 EQ
0xa64 PUSH2 0xa6c
0xa67 JUMPI
---
0xa50: JUMPDEST 
0xa53: V994 = 0x20
0xa55: V995 = 0x40
0xa57: V996 = M[0x40]
0xa58: V997 = SUB V996 0x20
0xa59: V998 = M[V997]
0xa5a: V999 = 0x1
0xa5c: V1000 = 0xa0
0xa5e: V1001 = 0x2
0xa60: V1002 = EXP 0x2 0xa0
0xa61: V1003 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa62: V1004 = AND 0xffffffffffffffffffffffffffffffffffffffff V998
0xa63: V1005 = EQ V1004 V956
0xa64: V1006 = 0xa6c
0xa67: JUMPI 0xa6c V1005
---
Entry stack: [V11, 0x9e, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, 0x0, {0x2b9, 0x772}, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, S5, S4, V950, V956, 0x1, V980]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x9e, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, 0x0, {0x2b9, 0x772}, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, S5, S4, V950]

================================

Block 0xa68
[0xa68:0xa6b]
---
Predecessors: [0xa50]
Successors: []
---
0xa68 PUSH1 0x0
0xa6a DUP1
0xa6b REVERT
---
0xa68: V1007 = 0x0
0xa6b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9e, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x0, {0x2b9, 0x772}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x0, {0x2b9, 0x772}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]

================================

Block 0xa6c
[0xa6c:0xa7e]
---
Predecessors: [0xa50]
Successors: [0x2b9, 0x772]
---
0xa6c JUMPDEST
0xa6d POP
0xa6e SWAP1
0xa6f SWAP14
0xa70 SWAP13
0xa71 POP
0xa72 POP
0xa73 POP
0xa74 POP
0xa75 POP
0xa76 POP
0xa77 POP
0xa78 POP
0xa79 POP
0xa7a POP
0xa7b POP
0xa7c POP
0xa7d POP
0xa7e JUMP
---
0xa6c: JUMPDEST 
0xa7e: JUMP {0x2b9, 0x772}
---
Entry stack: [V11, 0x9e, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x0, {0x2b9, 0x772}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]
Stack pops: 16
Stack additions: [S2]
Exit stack: [V11, 0x9e, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x0, S2]

================================

Block 0xa7f
[0xa7f:0xaff]
---
Predecessors: [0x3a1, 0xb35, 0xb4a]
Successors: [0xb00, 0xb04]
---
0xa7f JUMPDEST
0xa80 PUSH1 0x0
0xa82 DUP2
0xa83 PUSH1 0x1
0xa85 PUSH1 0xa0
0xa87 PUSH1 0x2
0xa89 EXP
0xa8a SUB
0xa8b AND
0xa8c PUSH4 0x23b872dd
0xa91 DUP7
0xa92 DUP7
0xa93 DUP7
0xa94 PUSH1 0x0
0xa96 PUSH1 0x40
0xa98 MLOAD
0xa99 PUSH1 0x20
0xa9b ADD
0xa9c MSTORE
0xa9d PUSH1 0x40
0xa9f MLOAD
0xaa0 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xabe PUSH4 0xffffffff
0xac3 DUP7
0xac4 AND
0xac5 MUL
0xac6 DUP2
0xac7 MSTORE
0xac8 PUSH1 0x1
0xaca PUSH1 0xa0
0xacc PUSH1 0x2
0xace EXP
0xacf SUB
0xad0 SWAP4
0xad1 DUP5
0xad2 AND
0xad3 PUSH1 0x4
0xad5 DUP3
0xad6 ADD
0xad7 MSTORE
0xad8 SWAP2
0xad9 SWAP1
0xada SWAP3
0xadb AND
0xadc PUSH1 0x24
0xade DUP3
0xadf ADD
0xae0 MSTORE
0xae1 PUSH1 0x44
0xae3 DUP2
0xae4 ADD
0xae5 SWAP2
0xae6 SWAP1
0xae7 SWAP2
0xae8 MSTORE
0xae9 PUSH1 0x64
0xaeb ADD
0xaec PUSH1 0x20
0xaee PUSH1 0x40
0xaf0 MLOAD
0xaf1 DUP1
0xaf2 DUP4
0xaf3 SUB
0xaf4 DUP2
0xaf5 PUSH1 0x0
0xaf7 DUP8
0xaf8 DUP1
0xaf9 EXTCODESIZE
0xafa ISZERO
0xafb ISZERO
0xafc PUSH2 0xb04
0xaff JUMPI
---
0xa7f: JUMPDEST 
0xa80: V1008 = 0x0
0xa83: V1009 = 0x1
0xa85: V1010 = 0xa0
0xa87: V1011 = 0x2
0xa89: V1012 = EXP 0x2 0xa0
0xa8a: V1013 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8b: V1014 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xa8c: V1015 = 0x23b872dd
0xa94: V1016 = 0x0
0xa96: V1017 = 0x40
0xa98: V1018 = M[0x40]
0xa99: V1019 = 0x20
0xa9b: V1020 = ADD 0x20 V1018
0xa9c: M[V1020] = 0x0
0xa9d: V1021 = 0x40
0xa9f: V1022 = M[0x40]
0xaa0: V1023 = 0x100000000000000000000000000000000000000000000000000000000
0xabe: V1024 = 0xffffffff
0xac4: V1025 = AND 0x23b872dd 0xffffffff
0xac5: V1026 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0xac7: M[V1022] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0xac8: V1027 = 0x1
0xaca: V1028 = 0xa0
0xacc: V1029 = 0x2
0xace: V1030 = EXP 0x2 0xa0
0xacf: V1031 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad2: V1032 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xad3: V1033 = 0x4
0xad6: V1034 = ADD V1022 0x4
0xad7: M[V1034] = V1032
0xadb: V1035 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xadc: V1036 = 0x24
0xadf: V1037 = ADD V1022 0x24
0xae0: M[V1037] = V1035
0xae1: V1038 = 0x44
0xae4: V1039 = ADD V1022 0x44
0xae8: M[V1039] = S1
0xae9: V1040 = 0x64
0xaeb: V1041 = ADD 0x64 V1022
0xaec: V1042 = 0x20
0xaee: V1043 = 0x40
0xaf0: V1044 = M[0x40]
0xaf3: V1045 = SUB V1041 V1044
0xaf5: V1046 = 0x0
0xaf9: V1047 = EXTCODESIZE V1014
0xafa: V1048 = ISZERO V1047
0xafb: V1049 = ISZERO V1048
0xafc: V1050 = 0xb04
0xaff: JUMPI 0xb04 V1049
---
Entry stack: [V11, 0x9e, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x3c5, 0xb43, 0xb56}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, V1014, 0x23b872dd, V1041, 0x20, V1044, V1045, V1044, 0x0, V1014]
Exit stack: [V11, 0x9e, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x3c5, 0xb43, 0xb56}, S3, S2, S1, S0, 0x0, V1014, 0x23b872dd, V1041, 0x20, V1044, V1045, V1044, 0x0, V1014]

================================

Block 0xb00
[0xb00:0xb03]
---
Predecessors: [0xa7f]
Successors: []
---
0xb00 PUSH1 0x0
0xb02 DUP1
0xb03 REVERT
---
0xb00: V1051 = 0x0
0xb03: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9e, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x3c5, 0xb43, 0xb56}, S13, S12, S11, S10, 0x0, V1014, 0x23b872dd, V1041, 0x20, V1044, V1045, V1044, 0x0, V1014]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x3c5, 0xb43, 0xb56}, S13, S12, S11, S10, 0x0, V1014, 0x23b872dd, V1041, 0x20, V1044, V1045, V1044, 0x0, V1014]

================================

Block 0xb04
[0xb04:0xb10]
---
Predecessors: [0xa7f]
Successors: [0xb11, 0xb15]
---
0xb04 JUMPDEST
0xb05 PUSH2 0x2c6
0xb08 GAS
0xb09 SUB
0xb0a CALL
0xb0b ISZERO
0xb0c ISZERO
0xb0d PUSH2 0xb15
0xb10 JUMPI
---
0xb04: JUMPDEST 
0xb05: V1052 = 0x2c6
0xb08: V1053 = GAS
0xb09: V1054 = SUB V1053 0x2c6
0xb0a: V1055 = CALL V1054 V1014 0x0 V1044 V1045 V1044 0x20
0xb0b: V1056 = ISZERO V1055
0xb0c: V1057 = ISZERO V1056
0xb0d: V1058 = 0xb15
0xb10: JUMPI 0xb15 V1057
---
Entry stack: [V11, 0x9e, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x3c5, 0xb43, 0xb56}, S13, S12, S11, S10, 0x0, V1014, 0x23b872dd, V1041, 0x20, V1044, V1045, V1044, 0x0, V1014]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x9e, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x3c5, 0xb43, 0xb56}, S13, S12, S11, S10, 0x0, V1014, 0x23b872dd, V1041]

================================

Block 0xb11
[0xb11:0xb14]
---
Predecessors: [0xb04]
Successors: []
---
0xb11 PUSH1 0x0
0xb13 DUP1
0xb14 REVERT
---
0xb11: V1059 = 0x0
0xb14: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x3c5, 0xb43, 0xb56}, S7, S6, S5, S4, 0x0, S2, 0x23b872dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x3c5, 0xb43, 0xb56}, S7, S6, S5, S4, 0x0, S2, 0x23b872dd, S0]

================================

Block 0xb15
[0xb15:0xb25]
---
Predecessors: [0xb04]
Successors: [0xb26, 0xb2a]
---
0xb15 JUMPDEST
0xb16 POP
0xb17 POP
0xb18 POP
0xb19 PUSH1 0x40
0xb1b MLOAD
0xb1c DUP1
0xb1d MLOAD
0xb1e SWAP1
0xb1f POP
0xb20 ISZERO
0xb21 ISZERO
0xb22 PUSH2 0xb2a
0xb25 JUMPI
---
0xb15: JUMPDEST 
0xb19: V1060 = 0x40
0xb1b: V1061 = M[0x40]
0xb1d: V1062 = M[V1061]
0xb20: V1063 = ISZERO V1062
0xb21: V1064 = ISZERO V1063
0xb22: V1065 = 0xb2a
0xb25: JUMPI 0xb2a V1064
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x3c5, 0xb43, 0xb56}, S7, S6, S5, S4, 0x0, S2, 0x23b872dd, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x3c5, 0xb43, 0xb56}, S7, S6, S5, S4, 0x0]

================================

Block 0xb26
[0xb26:0xb29]
---
Predecessors: [0xb15]
Successors: []
---
0xb26 PUSH1 0x0
0xb28 DUP1
0xb29 REVERT
---
0xb26: V1066 = 0x0
0xb29: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x3c5, 0xb43, 0xb56}, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x3c5, 0xb43, 0xb56}, S4, S3, S2, S1, 0x0]

================================

Block 0xb2a
[0xb2a:0xb34]
---
Predecessors: [0xb15]
Successors: [0x3c5, 0xb43, 0xb56]
---
0xb2a JUMPDEST
0xb2b POP
0xb2c PUSH1 0x1
0xb2e SWAP5
0xb2f SWAP4
0xb30 POP
0xb31 POP
0xb32 POP
0xb33 POP
0xb34 JUMP
---
0xb2a: JUMPDEST 
0xb2c: V1067 = 0x1
0xb34: JUMP {0x3c5, 0xb43, 0xb56}
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x3c5, 0xb43, 0xb56}, S4, S3, S2, S1, 0x0]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x1]

================================

Block 0xb35
[0xb35:0xb42]
---
Predecessors: [0x60c]
Successors: [0xa7f]
---
0xb35 JUMPDEST
0xb36 PUSH1 0x0
0xb38 PUSH2 0xb43
0xb3b DUP8
0xb3c DUP6
0xb3d DUP9
0xb3e DUP9
0xb3f PUSH2 0xa7f
0xb42 JUMP
---
0xb35: JUMPDEST 
0xb36: V1068 = 0x0
0xb38: V1069 = 0xb43
0xb3f: V1070 = 0xa7f
0xb42: JUMP 0xa7f
---
Entry stack: [V11, 0x9e, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x632, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x0, 0xb43, S5, S2, S4, S3]
Exit stack: [V11, 0x9e, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x632, S5, S4, S3, S2, S1, S0, 0x0, 0xb43, S5, S2, S4, S3]

================================

Block 0xb43
[0xb43:0xb49]
---
Predecessors: [0xb2a]
Successors: [0xb4a, 0xb56]
---
0xb43 JUMPDEST
0xb44 DUP1
0xb45 ISZERO
0xb46 PUSH2 0xb56
0xb49 JUMPI
---
0xb43: JUMPDEST 
0xb45: V1071 = ISZERO 0x1
0xb46: V1072 = 0xb56
0xb49: JUMPI 0xb56 0x0
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]

================================

Block 0xb4a
[0xb4a:0xb55]
---
Predecessors: [0xb43]
Successors: [0xa7f]
---
0xb4a POP
0xb4b PUSH2 0xb56
0xb4e DUP5
0xb4f DUP9
0xb50 DUP6
0xb51 DUP6
0xb52 PUSH2 0xa7f
0xb55 JUMP
---
0xb4b: V1073 = 0xb56
0xb52: V1074 = 0xa7f
0xb55: JUMP 0xa7f
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, 0xb56, S4, S7, S3, S2]
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xb56, S4, S7, S3, S2]

================================

Block 0xb56
[0xb56:0xb60]
---
Predecessors: [0xb2a, 0xb43]
Successors: [0x632]
---
0xb56 JUMPDEST
0xb57 SWAP8
0xb58 SWAP7
0xb59 POP
0xb5a POP
0xb5b POP
0xb5c POP
0xb5d POP
0xb5e POP
0xb5f POP
0xb60 JUMP
---
0xb56: JUMPDEST 
0xb60: JUMP S8
---
Entry stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 9
Stack additions: [S0]
Exit stack: [V11, 0x9e, V30, V32, V35, V38, V40, V43, S14, S13, S12, S11, S10, S9, 0x1]

================================

Block 0xb61
[0xb61:0xb72]
---
Predecessors: [0x8c7]
Successors: [0x8d2]
---
0xb61 JUMPDEST
0xb62 PUSH1 0x20
0xb64 PUSH1 0x40
0xb66 MLOAD
0xb67 SWAP1
0xb68 DUP2
0xb69 ADD
0xb6a PUSH1 0x40
0xb6c MSTORE
0xb6d PUSH1 0x0
0xb6f DUP2
0xb70 MSTORE
0xb71 SWAP1
0xb72 JUMP
---
0xb61: JUMPDEST 
0xb62: V1075 = 0x20
0xb64: V1076 = 0x40
0xb66: V1077 = M[0x40]
0xb69: V1078 = ADD V1077 0x20
0xb6a: V1079 = 0x40
0xb6c: M[0x40] = V1078
0xb6d: V1080 = 0x0
0xb70: M[V1077] = 0x0
0xb72: JUMP 0x8d2
---
Entry stack: [V11, 0x9e, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0x0, {0x2b9, 0x772}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, 0x0, 0x8d2]
Stack pops: 1
Stack additions: [V1077]
Exit stack: [V11, 0x9e, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0x0, {0x2b9, 0x772}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, 0x0, V1077]

================================

Block 0xb73
[0xb73:0xbc7]
---
Predecessors: []
Successors: []
---
0xb73 STOP
0xb74 DUP15
0xb75 MISSING 0x49
0xb76 MISSING 0xdd
0xb77 EXTCODEHASH
0xb78 MISSING 0x28
0xb79 RETURNDATASIZE
0xb7a SWAP11
0xb7b DUP5
0xb7c MISSING 0x46
0xb7d PUSH9 0xa6f422edaa50c4c229
0xb87 DUP8
0xb88 MLOAD
0xb89 MISSING 0x1e
0xb8a MISSING 0xc2
0xb8b DUP5
0xb8c MISSING 0xce
0xb8d MISSING 0xbe
0xb8e MISSING 0xc2
0xb8f DUP9
0xb90 MISSING 0xca
0xb91 SLOAD
0xb92 RETURN
0xb93 PUSH27 0xa165627a7a723058204b3d4d24c0e7038b6ac44e014d9e7c84ce9c
0xbaf MISSING 0xf
0xbb0 CREATE2
0xbb1 EQ
0xbb2 SHL
0xbb3 MISSING 0x4d
0xbb4 MISSING 0xd7
0xbb5 MISSING 0xce
0xbb6 MISSING 0xca
0xbb7 PUSH2 0xa125
0xbba PUSH13 0xc2c00029
---
0xb73: STOP 
0xb75: MISSING 0x49
0xb76: MISSING 0xdd
0xb77: V1081 = EXTCODEHASH S0
0xb78: MISSING 0x28
0xb79: V1082 = RETURNDATASIZE
0xb7c: MISSING 0x46
0xb7d: V1083 = 0xa6f422edaa50c4c229
0xb88: V1084 = M[S6]
0xb89: MISSING 0x1e
0xb8a: MISSING 0xc2
0xb8c: MISSING 0xce
0xb8d: MISSING 0xbe
0xb8e: MISSING 0xc2
0xb90: MISSING 0xca
0xb91: V1085 = S[S0]
0xb92: RETURN V1085 S1
0xb93: V1086 = 0xa165627a7a723058204b3d4d24c0e7038b6ac44e014d9e7c84ce9c
0xbaf: MISSING 0xf
0xbb0: V1087 = CREATE2 S0 S1 S2 S3
0xbb1: V1088 = EQ V1087 S4
0xbb2: V1089 = SHL V1088 S5
0xbb3: MISSING 0x4d
0xbb4: MISSING 0xd7
0xbb5: MISSING 0xce
0xbb6: MISSING 0xca
0xbb7: V1090 = 0xa125
0xbba: V1091 = 0xc2c00029
---
Entry stack: []
Stack pops: 0
Stack additions: [S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V1081, S3, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, V1082, V1084, 0xa6f422edaa50c4c229, S0, S1, S2, S3, S4, S5, S6, S4, S0, S1, S2, S3, S4, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8, 0xa165627a7a723058204b3d4d24c0e7038b6ac44e014d9e7c84ce9c, V1089, 0xc2c00029, 0xa125]
Exit stack: []

================================

Function 0:
Public function signature: 0x1d4d691d
Entry block: 0x5b
Exit block: 0x639
Body: 0x5b, 0x9e, 0x118, 0x135, 0x162, 0x166, 0x1e9, 0x1f2, 0x21f, 0x223, 0x2a6, 0x2b9, 0x2d4, 0x301, 0x305, 0x388, 0x399, 0x3a1, 0x3c5, 0x3cc, 0x3cd, 0x3fb, 0x3ff, 0x480, 0x4ae, 0x4b2, 0x531, 0x536, 0x53d, 0x56a, 0x56e, 0x5f1, 0x60c, 0x632, 0x639, 0x63a, 0x6bb, 0x73a, 0xb35, 0xb43, 0xb4a, 0xb56

Function 1:
Public function signature: 0x20158c44
Entry block: 0xa0
Exit block: 0xb6
Body: 0xa0, 0xa7, 0xab, 0xb6, 0x748

Function 2:
Public function signature: 0x66a26419
Entry block: 0xca
Exit block: 0x9e
Body: 0x9e, 0xca, 0xd1, 0xd5, 0x73a, 0x75d, 0x772, 0x78f, 0x7a7, 0x83b

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x56
Body: 0x56

Function 4:
Private function
Entry block: 0x8c7
Exit block: 0xa6c
Body: 0x8c7, 0x8d2, 0x98f, 0x998, 0x9ae, 0xa50, 0xa6c, 0xb61

Function 5:
Private function
Entry block: 0xa7f
Exit block: 0xb2a
Body: 0xa7f, 0xb04, 0xb15, 0xb2a

