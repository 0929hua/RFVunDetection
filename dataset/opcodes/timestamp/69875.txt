Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x69]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x69
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x69
0xc: JUMPI 0x69 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xaf]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x2d05d3f
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xaf
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x2d05d3f
0x22: V15 = EQ V13 0x2d05d3f
0x23: V16 = 0xaf
0x26: JUMPI 0xaf V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xde]
---
0x27 DUP1
0x28 PUSH4 0x370158ea
0x2d EQ
0x2e PUSH2 0xde
0x31 JUMPI
---
0x28: V17 = 0x370158ea
0x2d: V18 = EQ 0x370158ea V13
0x2e: V19 = 0xde
0x31: JUMPI 0xde V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x12b]
---
0x32 DUP1
0x33 PUSH4 0x3ccfd60b
0x38 EQ
0x39 PUSH2 0x12b
0x3c JUMPI
---
0x33: V20 = 0x3ccfd60b
0x38: V21 = EQ 0x3ccfd60b V13
0x39: V22 = 0x12b
0x3c: JUMPI 0x12b V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x140]
---
0x3d DUP1
0x3e PUSH4 0x49df728c
0x43 EQ
0x44 PUSH2 0x140
0x47 JUMPI
---
0x3e: V23 = 0x49df728c
0x43: V24 = EQ 0x49df728c V13
0x44: V25 = 0x140
0x47: JUMPI 0x140 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x15f]
---
0x48 DUP1
0x49 PUSH4 0x69ac5721
0x4e EQ
0x4f PUSH2 0x15f
0x52 JUMPI
---
0x49: V26 = 0x69ac5721
0x4e: V27 = EQ 0x69ac5721 V13
0x4f: V28 = 0x15f
0x52: JUMPI 0x15f V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x184]
---
0x53 DUP1
0x54 PUSH4 0x8da5cb5b
0x59 EQ
0x5a PUSH2 0x184
0x5d JUMPI
---
0x54: V29 = 0x8da5cb5b
0x59: V30 = EQ 0x8da5cb5b V13
0x5a: V31 = 0x184
0x5d: JUMPI 0x184 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x197]
---
0x5e DUP1
0x5f PUSH4 0xcf09e0d0
0x64 EQ
0x65 PUSH2 0x197
0x68 JUMPI
---
0x5f: V32 = 0xcf09e0d0
0x64: V33 = EQ 0xcf09e0d0 V13
0x65: V34 = 0x197
0x68: JUMPI 0x197 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0xae]
---
Predecessors: [0x0, 0x5e]
Successors: []
---
0x69 JUMPDEST
0x6a PUSH32 0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874
0x8b CALLER
0x8c CALLVALUE
0x8d PUSH1 0x40
0x8f MLOAD
0x90 PUSH1 0x1
0x92 PUSH1 0xa0
0x94 PUSH1 0x2
0x96 EXP
0x97 SUB
0x98 SWAP1
0x99 SWAP3
0x9a AND
0x9b DUP3
0x9c MSTORE
0x9d PUSH1 0x20
0x9f DUP3
0xa0 ADD
0xa1 MSTORE
0xa2 PUSH1 0x40
0xa4 SWAP1
0xa5 DUP2
0xa6 ADD
0xa7 SWAP1
0xa8 MLOAD
0xa9 DUP1
0xaa SWAP2
0xab SUB
0xac SWAP1
0xad LOG1
0xae STOP
---
0x69: JUMPDEST 
0x6a: V35 = 0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874
0x8b: V36 = CALLER
0x8c: V37 = CALLVALUE
0x8d: V38 = 0x40
0x8f: V39 = M[0x40]
0x90: V40 = 0x1
0x92: V41 = 0xa0
0x94: V42 = 0x2
0x96: V43 = EXP 0x2 0xa0
0x97: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a: V45 = AND V36 0xffffffffffffffffffffffffffffffffffffffff
0x9c: M[V39] = V45
0x9d: V46 = 0x20
0xa0: V47 = ADD V39 0x20
0xa1: M[V47] = V37
0xa2: V48 = 0x40
0xa6: V49 = ADD 0x40 V39
0xa8: V50 = M[0x40]
0xab: V51 = SUB V49 V50
0xad: LOG V50 V51 0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874
0xae: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xaf
[0xaf:0xb5]
---
Predecessors: [0xd]
Successors: [0xb6, 0xba]
---
0xaf JUMPDEST
0xb0 CALLVALUE
0xb1 ISZERO
0xb2 PUSH2 0xba
0xb5 JUMPI
---
0xaf: JUMPDEST 
0xb0: V52 = CALLVALUE
0xb1: V53 = ISZERO V52
0xb2: V54 = 0xba
0xb5: JUMPI 0xba V53
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xb9]
---
Predecessors: [0xaf]
Successors: []
---
0xb6 PUSH1 0x0
0xb8 DUP1
0xb9 REVERT
---
0xb6: V55 = 0x0
0xb9: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xba
[0xba:0xc1]
---
Predecessors: [0xaf]
Successors: [0x1aa]
---
0xba JUMPDEST
0xbb PUSH2 0xc2
0xbe PUSH2 0x1aa
0xc1 JUMP
---
0xba: JUMPDEST 
0xbb: V56 = 0xc2
0xbe: V57 = 0x1aa
0xc1: JUMP 0x1aa
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xc2]
Exit stack: [V13, 0xc2]

================================

Block 0xc2
[0xc2:0xdd]
---
Predecessors: [0x1aa, 0x416]
Successors: []
---
0xc2 JUMPDEST
0xc3 PUSH1 0x40
0xc5 MLOAD
0xc6 PUSH1 0x1
0xc8 PUSH1 0xa0
0xca PUSH1 0x2
0xcc EXP
0xcd SUB
0xce SWAP1
0xcf SWAP2
0xd0 AND
0xd1 DUP2
0xd2 MSTORE
0xd3 PUSH1 0x20
0xd5 ADD
0xd6 PUSH1 0x40
0xd8 MLOAD
0xd9 DUP1
0xda SWAP2
0xdb SUB
0xdc SWAP1
0xdd RETURN
---
0xc2: JUMPDEST 
0xc3: V58 = 0x40
0xc5: V59 = M[0x40]
0xc6: V60 = 0x1
0xc8: V61 = 0xa0
0xca: V62 = 0x2
0xcc: V63 = EXP 0x2 0xa0
0xcd: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd0: V65 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xd2: M[V59] = V65
0xd3: V66 = 0x20
0xd5: V67 = ADD 0x20 V59
0xd6: V68 = 0x40
0xd8: V69 = M[0x40]
0xdb: V70 = SUB V67 V69
0xdd: RETURN V69 V70
---
Entry stack: [V13, 0xc2, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xc2]

================================

Block 0xde
[0xde:0xe4]
---
Predecessors: [0x27]
Successors: [0xe5, 0xe9]
---
0xde JUMPDEST
0xdf CALLVALUE
0xe0 ISZERO
0xe1 PUSH2 0xe9
0xe4 JUMPI
---
0xde: JUMPDEST 
0xdf: V71 = CALLVALUE
0xe0: V72 = ISZERO V71
0xe1: V73 = 0xe9
0xe4: JUMPI 0xe9 V72
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xe5
[0xe5:0xe8]
---
Predecessors: [0xde]
Successors: []
---
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 REVERT
---
0xe5: V74 = 0x0
0xe8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xe9
[0xe9:0xf0]
---
Predecessors: [0xde]
Successors: [0x1b9]
---
0xe9 JUMPDEST
0xea PUSH2 0xf1
0xed PUSH2 0x1b9
0xf0 JUMP
---
0xe9: JUMPDEST 
0xea: V75 = 0xf1
0xed: V76 = 0x1b9
0xf0: JUMP 0x1b9
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xf1]
Exit stack: [V13, 0xf1]

================================

Block 0xf1
[0xf1:0x12a]
---
Predecessors: [0x1b9]
Successors: []
---
0xf1 JUMPDEST
0xf2 PUSH1 0x40
0xf4 MLOAD
0xf5 PUSH1 0x1
0xf7 PUSH1 0xa0
0xf9 PUSH1 0x2
0xfb EXP
0xfc SUB
0xfd SWAP6
0xfe DUP7
0xff AND
0x100 DUP2
0x101 MSTORE
0x102 SWAP4
0x103 SWAP1
0x104 SWAP5
0x105 AND
0x106 PUSH1 0x20
0x108 DUP5
0x109 ADD
0x10a MSTORE
0x10b PUSH1 0x40
0x10d DUP1
0x10e DUP5
0x10f ADD
0x110 SWAP3
0x111 SWAP1
0x112 SWAP3
0x113 MSTORE
0x114 PUSH1 0x60
0x116 DUP4
0x117 ADD
0x118 MSTORE
0x119 PUSH1 0x80
0x11b DUP3
0x11c ADD
0x11d SWAP3
0x11e SWAP1
0x11f SWAP3
0x120 MSTORE
0x121 PUSH1 0xa0
0x123 ADD
0x124 SWAP1
0x125 MLOAD
0x126 DUP1
0x127 SWAP2
0x128 SUB
0x129 SWAP1
0x12a RETURN
---
0xf1: JUMPDEST 
0xf2: V77 = 0x40
0xf4: V78 = M[0x40]
0xf5: V79 = 0x1
0xf7: V80 = 0xa0
0xf9: V81 = 0x2
0xfb: V82 = EXP 0x2 0xa0
0xfc: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0xff: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x101: M[V78] = V84
0x105: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x106: V86 = 0x20
0x109: V87 = ADD V78 0x20
0x10a: M[V87] = V85
0x10b: V88 = 0x40
0x10f: V89 = ADD V78 0x40
0x113: M[V89] = V156
0x114: V90 = 0x60
0x117: V91 = ADD V78 0x60
0x118: M[V91] = V158
0x119: V92 = 0x80
0x11c: V93 = ADD V78 0x80
0x120: M[V93] = V168
0x121: V94 = 0xa0
0x123: V95 = ADD 0xa0 V78
0x125: V96 = M[0x40]
0x128: V97 = SUB V95 V96
0x12a: RETURN V96 V97
---
Entry stack: [V13, V164, V165, V156, V158, V168]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x12b
[0x12b:0x131]
---
Predecessors: [0x32]
Successors: [0x132, 0x136]
---
0x12b JUMPDEST
0x12c CALLVALUE
0x12d ISZERO
0x12e PUSH2 0x136
0x131 JUMPI
---
0x12b: JUMPDEST 
0x12c: V98 = CALLVALUE
0x12d: V99 = ISZERO V98
0x12e: V100 = 0x136
0x131: JUMPI 0x136 V99
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x132
[0x132:0x135]
---
Predecessors: [0x12b]
Successors: []
---
0x132 PUSH1 0x0
0x134 DUP1
0x135 REVERT
---
0x132: V101 = 0x0
0x135: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x136
[0x136:0x13d]
---
Predecessors: [0x12b]
Successors: [0x1df]
---
0x136 JUMPDEST
0x137 PUSH2 0x13e
0x13a PUSH2 0x1df
0x13d JUMP
---
0x136: JUMPDEST 
0x137: V102 = 0x13e
0x13a: V103 = 0x1df
0x13d: JUMP 0x1df
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x13e]
Exit stack: [V13, 0x13e]

================================

Block 0x13e
[0x13e:0x13f]
---
Predecessors: [0x246, 0x3b0]
Successors: []
---
0x13e JUMPDEST
0x13f STOP
---
0x13e: JUMPDEST 
0x13f: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x140
[0x140:0x146]
---
Predecessors: [0x3d]
Successors: [0x147, 0x14b]
---
0x140 JUMPDEST
0x141 CALLVALUE
0x142 ISZERO
0x143 PUSH2 0x14b
0x146 JUMPI
---
0x140: JUMPDEST 
0x141: V104 = CALLVALUE
0x142: V105 = ISZERO V104
0x143: V106 = 0x14b
0x146: JUMPI 0x14b V105
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x147
[0x147:0x14a]
---
Predecessors: [0x140]
Successors: []
---
0x147 PUSH1 0x0
0x149 DUP1
0x14a REVERT
---
0x147: V107 = 0x0
0x14a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x14b
[0x14b:0x15e]
---
Predecessors: [0x140]
Successors: [0x296]
---
0x14b JUMPDEST
0x14c PUSH2 0x13e
0x14f PUSH1 0x1
0x151 PUSH1 0xa0
0x153 PUSH1 0x2
0x155 EXP
0x156 SUB
0x157 PUSH1 0x4
0x159 CALLDATALOAD
0x15a AND
0x15b PUSH2 0x296
0x15e JUMP
---
0x14b: JUMPDEST 
0x14c: V108 = 0x13e
0x14f: V109 = 0x1
0x151: V110 = 0xa0
0x153: V111 = 0x2
0x155: V112 = EXP 0x2 0xa0
0x156: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x157: V114 = 0x4
0x159: V115 = CALLDATALOAD 0x4
0x15a: V116 = AND V115 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V117 = 0x296
0x15e: JUMP 0x296
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x13e, V116]
Exit stack: [V13, 0x13e, V116]

================================

Block 0x15f
[0x15f:0x165]
---
Predecessors: [0x48]
Successors: [0x166, 0x16a]
---
0x15f JUMPDEST
0x160 CALLVALUE
0x161 ISZERO
0x162 PUSH2 0x16a
0x165 JUMPI
---
0x15f: JUMPDEST 
0x160: V118 = CALLVALUE
0x161: V119 = ISZERO V118
0x162: V120 = 0x16a
0x165: JUMPI 0x16a V119
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x166
[0x166:0x169]
---
Predecessors: [0x15f]
Successors: []
---
0x166 PUSH1 0x0
0x168 DUP1
0x169 REVERT
---
0x166: V121 = 0x0
0x169: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x16a
[0x16a:0x171]
---
Predecessors: [0x15f]
Successors: [0x410]
---
0x16a JUMPDEST
0x16b PUSH2 0x172
0x16e PUSH2 0x410
0x171 JUMP
---
0x16a: JUMPDEST 
0x16b: V122 = 0x172
0x16e: V123 = 0x410
0x171: JUMP 0x410
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x172]
Exit stack: [V13, 0x172]

================================

Block 0x172
[0x172:0x183]
---
Predecessors: [0x410, 0x425]
Successors: []
---
0x172 JUMPDEST
0x173 PUSH1 0x40
0x175 MLOAD
0x176 SWAP1
0x177 DUP2
0x178 MSTORE
0x179 PUSH1 0x20
0x17b ADD
0x17c PUSH1 0x40
0x17e MLOAD
0x17f DUP1
0x180 SWAP2
0x181 SUB
0x182 SWAP1
0x183 RETURN
---
0x172: JUMPDEST 
0x173: V124 = 0x40
0x175: V125 = M[0x40]
0x178: M[V125] = S0
0x179: V126 = 0x20
0x17b: V127 = ADD 0x20 V125
0x17c: V128 = 0x40
0x17e: V129 = M[0x40]
0x181: V130 = SUB V127 V129
0x183: RETURN V129 V130
---
Entry stack: [V13, 0x172, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x172]

================================

Block 0x184
[0x184:0x18a]
---
Predecessors: [0x53]
Successors: [0x18b, 0x18f]
---
0x184 JUMPDEST
0x185 CALLVALUE
0x186 ISZERO
0x187 PUSH2 0x18f
0x18a JUMPI
---
0x184: JUMPDEST 
0x185: V131 = CALLVALUE
0x186: V132 = ISZERO V131
0x187: V133 = 0x18f
0x18a: JUMPI 0x18f V132
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x18b
[0x18b:0x18e]
---
Predecessors: [0x184]
Successors: []
---
0x18b PUSH1 0x0
0x18d DUP1
0x18e REVERT
---
0x18b: V134 = 0x0
0x18e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x18f
[0x18f:0x196]
---
Predecessors: [0x184]
Successors: [0x416]
---
0x18f JUMPDEST
0x190 PUSH2 0xc2
0x193 PUSH2 0x416
0x196 JUMP
---
0x18f: JUMPDEST 
0x190: V135 = 0xc2
0x193: V136 = 0x416
0x196: JUMP 0x416
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xc2]
Exit stack: [V13, 0xc2]

================================

Block 0x197
[0x197:0x19d]
---
Predecessors: [0x5e]
Successors: [0x19e, 0x1a2]
---
0x197 JUMPDEST
0x198 CALLVALUE
0x199 ISZERO
0x19a PUSH2 0x1a2
0x19d JUMPI
---
0x197: JUMPDEST 
0x198: V137 = CALLVALUE
0x199: V138 = ISZERO V137
0x19a: V139 = 0x1a2
0x19d: JUMPI 0x1a2 V138
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x19e
[0x19e:0x1a1]
---
Predecessors: [0x197]
Successors: []
---
0x19e PUSH1 0x0
0x1a0 DUP1
0x1a1 REVERT
---
0x19e: V140 = 0x0
0x1a1: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a2
[0x1a2:0x1a9]
---
Predecessors: [0x197]
Successors: [0x425]
---
0x1a2 JUMPDEST
0x1a3 PUSH2 0x172
0x1a6 PUSH2 0x425
0x1a9 JUMP
---
0x1a2: JUMPDEST 
0x1a3: V141 = 0x172
0x1a6: V142 = 0x425
0x1a9: JUMP 0x425
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x172]
Exit stack: [V13, 0x172]

================================

Block 0x1aa
[0x1aa:0x1b8]
---
Predecessors: [0xba]
Successors: [0xc2]
---
0x1aa JUMPDEST
0x1ab PUSH1 0x0
0x1ad SLOAD
0x1ae PUSH1 0x1
0x1b0 PUSH1 0xa0
0x1b2 PUSH1 0x2
0x1b4 EXP
0x1b5 SUB
0x1b6 AND
0x1b7 DUP2
0x1b8 JUMP
---
0x1aa: JUMPDEST 
0x1ab: V143 = 0x0
0x1ad: V144 = S[0x0]
0x1ae: V145 = 0x1
0x1b0: V146 = 0xa0
0x1b2: V147 = 0x2
0x1b4: V148 = EXP 0x2 0xa0
0x1b5: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b6: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x1b8: JUMP 0xc2
---
Entry stack: [V13, 0xc2]
Stack pops: 1
Stack additions: [S0, V150]
Exit stack: [V13, 0xc2, V150]

================================

Block 0x1b9
[0x1b9:0x1de]
---
Predecessors: [0xe9]
Successors: [0xf1]
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x0
0x1bc SLOAD
0x1bd PUSH1 0x1
0x1bf SLOAD
0x1c0 PUSH1 0x2
0x1c2 SLOAD
0x1c3 PUSH1 0x3
0x1c5 SLOAD
0x1c6 PUSH1 0x1
0x1c8 PUSH1 0xa0
0x1ca PUSH1 0x2
0x1cc EXP
0x1cd SUB
0x1ce SWAP4
0x1cf DUP5
0x1d0 AND
0x1d1 SWAP4
0x1d2 SWAP3
0x1d3 DUP4
0x1d4 AND
0x1d5 SWAP3
0x1d6 ADDRESS
0x1d7 AND
0x1d8 BALANCE
0x1d9 SWAP1
0x1da SWAP2
0x1db SWAP3
0x1dc SWAP4
0x1dd SWAP5
0x1de JUMP
---
0x1b9: JUMPDEST 
0x1ba: V151 = 0x0
0x1bc: V152 = S[0x0]
0x1bd: V153 = 0x1
0x1bf: V154 = S[0x1]
0x1c0: V155 = 0x2
0x1c2: V156 = S[0x2]
0x1c3: V157 = 0x3
0x1c5: V158 = S[0x3]
0x1c6: V159 = 0x1
0x1c8: V160 = 0xa0
0x1ca: V161 = 0x2
0x1cc: V162 = EXP 0x2 0xa0
0x1cd: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d0: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x1d4: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x1d6: V166 = ADDRESS
0x1d7: V167 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x1d8: V168 = BALANCE V167
0x1de: JUMP 0xf1
---
Entry stack: [V13, 0xf1]
Stack pops: 1
Stack additions: [V164, V165, V156, V158, V168]
Exit stack: [V13, V164, V165, V156, V158, V168]

================================

Block 0x1df
[0x1df:0x1f5]
---
Predecessors: [0x136]
Successors: [0x1f6, 0x1fa]
---
0x1df JUMPDEST
0x1e0 PUSH1 0x1
0x1e2 SLOAD
0x1e3 CALLER
0x1e4 PUSH1 0x1
0x1e6 PUSH1 0xa0
0x1e8 PUSH1 0x2
0x1ea EXP
0x1eb SUB
0x1ec SWAP1
0x1ed DUP2
0x1ee AND
0x1ef SWAP2
0x1f0 AND
0x1f1 EQ
0x1f2 PUSH2 0x1fa
0x1f5 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V169 = 0x1
0x1e2: V170 = S[0x1]
0x1e3: V171 = CALLER
0x1e4: V172 = 0x1
0x1e6: V173 = 0xa0
0x1e8: V174 = 0x2
0x1ea: V175 = EXP 0x2 0xa0
0x1eb: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ee: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x1f0: V178 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: V179 = EQ V178 V177
0x1f2: V180 = 0x1fa
0x1f5: JUMPI 0x1fa V179
---
Entry stack: [V13, 0x13e]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x13e]

================================

Block 0x1f6
[0x1f6:0x1f9]
---
Predecessors: [0x1df]
Successors: []
---
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 REVERT
---
0x1f6: V181 = 0x0
0x1f9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x13e]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x13e]

================================

Block 0x1fa
[0x1fa:0x204]
---
Predecessors: [0x1df]
Successors: [0x205, 0x209]
---
0x1fa JUMPDEST
0x1fb PUSH1 0x2
0x1fd SLOAD
0x1fe TIMESTAMP
0x1ff LT
0x200 ISZERO
0x201 PUSH2 0x209
0x204 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V182 = 0x2
0x1fd: V183 = S[0x2]
0x1fe: V184 = TIMESTAMP
0x1ff: V185 = LT V184 V183
0x200: V186 = ISZERO V185
0x201: V187 = 0x209
0x204: JUMPI 0x209 V186
---
Entry stack: [V13, 0x13e]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x13e]

================================

Block 0x205
[0x205:0x208]
---
Predecessors: [0x1fa]
Successors: []
---
0x205 PUSH1 0x0
0x207 DUP1
0x208 REVERT
---
0x205: V188 = 0x0
0x208: REVERT 0x0 0x0
---
Entry stack: [V13, 0x13e]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x13e]

================================

Block 0x209
[0x209:0x241]
---
Predecessors: [0x1fa]
Successors: [0x242, 0x246]
---
0x209 JUMPDEST
0x20a CALLER
0x20b PUSH1 0x1
0x20d PUSH1 0xa0
0x20f PUSH1 0x2
0x211 EXP
0x212 SUB
0x213 AND
0x214 PUSH2 0x8fc
0x217 ADDRESS
0x218 PUSH1 0x1
0x21a PUSH1 0xa0
0x21c PUSH1 0x2
0x21e EXP
0x21f SUB
0x220 AND
0x221 BALANCE
0x222 SWAP1
0x223 DUP2
0x224 ISZERO
0x225 MUL
0x226 SWAP1
0x227 PUSH1 0x40
0x229 MLOAD
0x22a PUSH1 0x0
0x22c PUSH1 0x40
0x22e MLOAD
0x22f DUP1
0x230 DUP4
0x231 SUB
0x232 DUP2
0x233 DUP6
0x234 DUP9
0x235 DUP9
0x236 CALL
0x237 SWAP4
0x238 POP
0x239 POP
0x23a POP
0x23b POP
0x23c ISZERO
0x23d ISZERO
0x23e PUSH2 0x246
0x241 JUMPI
---
0x209: JUMPDEST 
0x20a: V189 = CALLER
0x20b: V190 = 0x1
0x20d: V191 = 0xa0
0x20f: V192 = 0x2
0x211: V193 = EXP 0x2 0xa0
0x212: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x213: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x214: V196 = 0x8fc
0x217: V197 = ADDRESS
0x218: V198 = 0x1
0x21a: V199 = 0xa0
0x21c: V200 = 0x2
0x21e: V201 = EXP 0x2 0xa0
0x21f: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x220: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x221: V204 = BALANCE V203
0x224: V205 = ISZERO V204
0x225: V206 = MUL V205 0x8fc
0x227: V207 = 0x40
0x229: V208 = M[0x40]
0x22a: V209 = 0x0
0x22c: V210 = 0x40
0x22e: V211 = M[0x40]
0x231: V212 = SUB V208 V211
0x236: V213 = CALL V206 V195 V204 V211 V212 V211 0x0
0x23c: V214 = ISZERO V213
0x23d: V215 = ISZERO V214
0x23e: V216 = 0x246
0x241: JUMPI 0x246 V215
---
Entry stack: [V13, 0x13e]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x13e]

================================

Block 0x242
[0x242:0x245]
---
Predecessors: [0x209]
Successors: []
---
0x242 PUSH1 0x0
0x244 DUP1
0x245 REVERT
---
0x242: V217 = 0x0
0x245: REVERT 0x0 0x0
---
Entry stack: [V13, 0x13e]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x13e]

================================

Block 0x246
[0x246:0x295]
---
Predecessors: [0x209]
Successors: [0x13e]
---
0x246 JUMPDEST
0x247 PUSH32 0xb244b9a17ad633c6e83b7983ee04320484956a68ddbe96a0b70dfca1cf19d723
0x268 CALLER
0x269 ADDRESS
0x26a PUSH1 0x1
0x26c PUSH1 0xa0
0x26e PUSH1 0x2
0x270 EXP
0x271 SUB
0x272 AND
0x273 BALANCE
0x274 PUSH1 0x40
0x276 MLOAD
0x277 PUSH1 0x1
0x279 PUSH1 0xa0
0x27b PUSH1 0x2
0x27d EXP
0x27e SUB
0x27f SWAP1
0x280 SWAP3
0x281 AND
0x282 DUP3
0x283 MSTORE
0x284 PUSH1 0x20
0x286 DUP3
0x287 ADD
0x288 MSTORE
0x289 PUSH1 0x40
0x28b SWAP1
0x28c DUP2
0x28d ADD
0x28e SWAP1
0x28f MLOAD
0x290 DUP1
0x291 SWAP2
0x292 SUB
0x293 SWAP1
0x294 LOG1
0x295 JUMP
---
0x246: JUMPDEST 
0x247: V218 = 0xb244b9a17ad633c6e83b7983ee04320484956a68ddbe96a0b70dfca1cf19d723
0x268: V219 = CALLER
0x269: V220 = ADDRESS
0x26a: V221 = 0x1
0x26c: V222 = 0xa0
0x26e: V223 = 0x2
0x270: V224 = EXP 0x2 0xa0
0x271: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x272: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x273: V227 = BALANCE V226
0x274: V228 = 0x40
0x276: V229 = M[0x40]
0x277: V230 = 0x1
0x279: V231 = 0xa0
0x27b: V232 = 0x2
0x27d: V233 = EXP 0x2 0xa0
0x27e: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x281: V235 = AND V219 0xffffffffffffffffffffffffffffffffffffffff
0x283: M[V229] = V235
0x284: V236 = 0x20
0x287: V237 = ADD V229 0x20
0x288: M[V237] = V227
0x289: V238 = 0x40
0x28d: V239 = ADD 0x40 V229
0x28f: V240 = M[0x40]
0x292: V241 = SUB V239 V240
0x294: LOG V240 V241 0xb244b9a17ad633c6e83b7983ee04320484956a68ddbe96a0b70dfca1cf19d723
0x295: JUMP 0x13e
---
Entry stack: [V13, 0x13e]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x296
[0x296:0x2b1]
---
Predecessors: [0x14b]
Successors: [0x2b2, 0x2b6]
---
0x296 JUMPDEST
0x297 PUSH1 0x1
0x299 SLOAD
0x29a PUSH1 0x0
0x29c SWAP1
0x29d DUP2
0x29e SWAP1
0x29f CALLER
0x2a0 PUSH1 0x1
0x2a2 PUSH1 0xa0
0x2a4 PUSH1 0x2
0x2a6 EXP
0x2a7 SUB
0x2a8 SWAP1
0x2a9 DUP2
0x2aa AND
0x2ab SWAP2
0x2ac AND
0x2ad EQ
0x2ae PUSH2 0x2b6
0x2b1 JUMPI
---
0x296: JUMPDEST 
0x297: V242 = 0x1
0x299: V243 = S[0x1]
0x29a: V244 = 0x0
0x29f: V245 = CALLER
0x2a0: V246 = 0x1
0x2a2: V247 = 0xa0
0x2a4: V248 = 0x2
0x2a6: V249 = EXP 0x2 0xa0
0x2a7: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2aa: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x2ac: V252 = AND V243 0xffffffffffffffffffffffffffffffffffffffff
0x2ad: V253 = EQ V252 V251
0x2ae: V254 = 0x2b6
0x2b1: JUMPI 0x2b6 V253
---
Entry stack: [V13, 0x13e, V116]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x13e, V116, 0x0, 0x0]

================================

Block 0x2b2
[0x2b2:0x2b5]
---
Predecessors: [0x296]
Successors: []
---
0x2b2 PUSH1 0x0
0x2b4 DUP1
0x2b5 REVERT
---
0x2b2: V255 = 0x0
0x2b5: REVERT 0x0 0x0
---
Entry stack: [V13, 0x13e, V116, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x13e, V116, 0x0, 0x0]

================================

Block 0x2b6
[0x2b6:0x2c0]
---
Predecessors: [0x296]
Successors: [0x2c1, 0x2c5]
---
0x2b6 JUMPDEST
0x2b7 PUSH1 0x2
0x2b9 SLOAD
0x2ba TIMESTAMP
0x2bb LT
0x2bc ISZERO
0x2bd PUSH2 0x2c5
0x2c0 JUMPI
---
0x2b6: JUMPDEST 
0x2b7: V256 = 0x2
0x2b9: V257 = S[0x2]
0x2ba: V258 = TIMESTAMP
0x2bb: V259 = LT V258 V257
0x2bc: V260 = ISZERO V259
0x2bd: V261 = 0x2c5
0x2c0: JUMPI 0x2c5 V260
---
Entry stack: [V13, 0x13e, V116, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x13e, V116, 0x0, 0x0]

================================

Block 0x2c1
[0x2c1:0x2c4]
---
Predecessors: [0x2b6]
Successors: []
---
0x2c1 PUSH1 0x0
0x2c3 DUP1
0x2c4 REVERT
---
0x2c1: V262 = 0x0
0x2c4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x13e, V116, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x13e, V116, 0x0, 0x0]

================================

Block 0x2c5
[0x2c5:0x31a]
---
Predecessors: [0x2b6]
Successors: [0x31b, 0x31f]
---
0x2c5 JUMPDEST
0x2c6 DUP3
0x2c7 SWAP2
0x2c8 POP
0x2c9 DUP2
0x2ca PUSH1 0x1
0x2cc PUSH1 0xa0
0x2ce PUSH1 0x2
0x2d0 EXP
0x2d1 SUB
0x2d2 AND
0x2d3 PUSH4 0x70a08231
0x2d8 ADDRESS
0x2d9 PUSH1 0x0
0x2db PUSH1 0x40
0x2dd MLOAD
0x2de PUSH1 0x20
0x2e0 ADD
0x2e1 MSTORE
0x2e2 PUSH1 0x40
0x2e4 MLOAD
0x2e5 PUSH1 0xe0
0x2e7 PUSH1 0x2
0x2e9 EXP
0x2ea PUSH4 0xffffffff
0x2ef DUP5
0x2f0 AND
0x2f1 MUL
0x2f2 DUP2
0x2f3 MSTORE
0x2f4 PUSH1 0x1
0x2f6 PUSH1 0xa0
0x2f8 PUSH1 0x2
0x2fa EXP
0x2fb SUB
0x2fc SWAP1
0x2fd SWAP2
0x2fe AND
0x2ff PUSH1 0x4
0x301 DUP3
0x302 ADD
0x303 MSTORE
0x304 PUSH1 0x24
0x306 ADD
0x307 PUSH1 0x20
0x309 PUSH1 0x40
0x30b MLOAD
0x30c DUP1
0x30d DUP4
0x30e SUB
0x30f DUP2
0x310 PUSH1 0x0
0x312 DUP8
0x313 DUP1
0x314 EXTCODESIZE
0x315 ISZERO
0x316 ISZERO
0x317 PUSH2 0x31f
0x31a JUMPI
---
0x2c5: JUMPDEST 
0x2ca: V263 = 0x1
0x2cc: V264 = 0xa0
0x2ce: V265 = 0x2
0x2d0: V266 = EXP 0x2 0xa0
0x2d1: V267 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d2: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x2d3: V269 = 0x70a08231
0x2d8: V270 = ADDRESS
0x2d9: V271 = 0x0
0x2db: V272 = 0x40
0x2dd: V273 = M[0x40]
0x2de: V274 = 0x20
0x2e0: V275 = ADD 0x20 V273
0x2e1: M[V275] = 0x0
0x2e2: V276 = 0x40
0x2e4: V277 = M[0x40]
0x2e5: V278 = 0xe0
0x2e7: V279 = 0x2
0x2e9: V280 = EXP 0x2 0xe0
0x2ea: V281 = 0xffffffff
0x2f0: V282 = AND 0x70a08231 0xffffffff
0x2f1: V283 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x2f3: M[V277] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2f4: V284 = 0x1
0x2f6: V285 = 0xa0
0x2f8: V286 = 0x2
0x2fa: V287 = EXP 0x2 0xa0
0x2fb: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fe: V289 = AND V270 0xffffffffffffffffffffffffffffffffffffffff
0x2ff: V290 = 0x4
0x302: V291 = ADD V277 0x4
0x303: M[V291] = V289
0x304: V292 = 0x24
0x306: V293 = ADD 0x24 V277
0x307: V294 = 0x20
0x309: V295 = 0x40
0x30b: V296 = M[0x40]
0x30e: V297 = SUB V293 V296
0x310: V298 = 0x0
0x314: V299 = EXTCODESIZE V268
0x315: V300 = ISZERO V299
0x316: V301 = ISZERO V300
0x317: V302 = 0x31f
0x31a: JUMPI 0x31f V301
---
Entry stack: [V13, 0x13e, V116, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S2, S0, V268, 0x70a08231, V293, 0x20, V296, V297, V296, 0x0, V268]
Exit stack: [V13, 0x13e, V116, V116, 0x0, V268, 0x70a08231, V293, 0x20, V296, V297, V296, 0x0, V268]

================================

Block 0x31b
[0x31b:0x31e]
---
Predecessors: [0x2c5]
Successors: []
---
0x31b PUSH1 0x0
0x31d DUP1
0x31e REVERT
---
0x31b: V303 = 0x0
0x31e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x13e, V116, V116, 0x0, V268, 0x70a08231, V293, 0x20, V296, V297, V296, 0x0, V268]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x13e, V116, V116, 0x0, V268, 0x70a08231, V293, 0x20, V296, V297, V296, 0x0, V268]

================================

Block 0x31f
[0x31f:0x32b]
---
Predecessors: [0x2c5]
Successors: [0x32c, 0x330]
---
0x31f JUMPDEST
0x320 PUSH2 0x2c6
0x323 GAS
0x324 SUB
0x325 CALL
0x326 ISZERO
0x327 ISZERO
0x328 PUSH2 0x330
0x32b JUMPI
---
0x31f: JUMPDEST 
0x320: V304 = 0x2c6
0x323: V305 = GAS
0x324: V306 = SUB V305 0x2c6
0x325: V307 = CALL V306 V268 0x0 V296 V297 V296 0x20
0x326: V308 = ISZERO V307
0x327: V309 = ISZERO V308
0x328: V310 = 0x330
0x32b: JUMPI 0x330 V309
---
Entry stack: [V13, 0x13e, V116, V116, 0x0, V268, 0x70a08231, V293, 0x20, V296, V297, V296, 0x0, V268]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x13e, V116, V116, 0x0, V268, 0x70a08231, V293]

================================

Block 0x32c
[0x32c:0x32f]
---
Predecessors: [0x31f]
Successors: []
---
0x32c PUSH1 0x0
0x32e DUP1
0x32f REVERT
---
0x32c: V311 = 0x0
0x32f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x13e, V116, V116, 0x0, V268, 0x70a08231, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x13e, V116, V116, 0x0, V268, 0x70a08231, V293]

================================

Block 0x330
[0x330:0x39a]
---
Predecessors: [0x31f]
Successors: [0x39b, 0x39f]
---
0x330 JUMPDEST
0x331 POP
0x332 POP
0x333 POP
0x334 PUSH1 0x40
0x336 MLOAD
0x337 DUP1
0x338 MLOAD
0x339 PUSH1 0x1
0x33b SLOAD
0x33c SWAP1
0x33d SWAP3
0x33e POP
0x33f PUSH1 0x1
0x341 PUSH1 0xa0
0x343 PUSH1 0x2
0x345 EXP
0x346 SUB
0x347 DUP1
0x348 DUP6
0x349 AND
0x34a SWAP3
0x34b POP
0x34c PUSH4 0xa9059cbb
0x351 SWAP2
0x352 AND
0x353 DUP4
0x354 PUSH1 0x0
0x356 PUSH1 0x40
0x358 MLOAD
0x359 PUSH1 0x20
0x35b ADD
0x35c MSTORE
0x35d PUSH1 0x40
0x35f MLOAD
0x360 PUSH1 0xe0
0x362 PUSH1 0x2
0x364 EXP
0x365 PUSH4 0xffffffff
0x36a DUP6
0x36b AND
0x36c MUL
0x36d DUP2
0x36e MSTORE
0x36f PUSH1 0x1
0x371 PUSH1 0xa0
0x373 PUSH1 0x2
0x375 EXP
0x376 SUB
0x377 SWAP1
0x378 SWAP3
0x379 AND
0x37a PUSH1 0x4
0x37c DUP4
0x37d ADD
0x37e MSTORE
0x37f PUSH1 0x24
0x381 DUP3
0x382 ADD
0x383 MSTORE
0x384 PUSH1 0x44
0x386 ADD
0x387 PUSH1 0x20
0x389 PUSH1 0x40
0x38b MLOAD
0x38c DUP1
0x38d DUP4
0x38e SUB
0x38f DUP2
0x390 PUSH1 0x0
0x392 DUP8
0x393 DUP1
0x394 EXTCODESIZE
0x395 ISZERO
0x396 ISZERO
0x397 PUSH2 0x39f
0x39a JUMPI
---
0x330: JUMPDEST 
0x334: V312 = 0x40
0x336: V313 = M[0x40]
0x338: V314 = M[V313]
0x339: V315 = 0x1
0x33b: V316 = S[0x1]
0x33f: V317 = 0x1
0x341: V318 = 0xa0
0x343: V319 = 0x2
0x345: V320 = EXP 0x2 0xa0
0x346: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x349: V322 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x34c: V323 = 0xa9059cbb
0x352: V324 = AND V316 0xffffffffffffffffffffffffffffffffffffffff
0x354: V325 = 0x0
0x356: V326 = 0x40
0x358: V327 = M[0x40]
0x359: V328 = 0x20
0x35b: V329 = ADD 0x20 V327
0x35c: M[V329] = 0x0
0x35d: V330 = 0x40
0x35f: V331 = M[0x40]
0x360: V332 = 0xe0
0x362: V333 = 0x2
0x364: V334 = EXP 0x2 0xe0
0x365: V335 = 0xffffffff
0x36b: V336 = AND 0xa9059cbb 0xffffffff
0x36c: V337 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x36e: M[V331] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x36f: V338 = 0x1
0x371: V339 = 0xa0
0x373: V340 = 0x2
0x375: V341 = EXP 0x2 0xa0
0x376: V342 = SUB 0x10000000000000000000000000000000000000000 0x1
0x379: V343 = AND V324 0xffffffffffffffffffffffffffffffffffffffff
0x37a: V344 = 0x4
0x37d: V345 = ADD V331 0x4
0x37e: M[V345] = V343
0x37f: V346 = 0x24
0x382: V347 = ADD V331 0x24
0x383: M[V347] = V314
0x384: V348 = 0x44
0x386: V349 = ADD 0x44 V331
0x387: V350 = 0x20
0x389: V351 = 0x40
0x38b: V352 = M[0x40]
0x38e: V353 = SUB V349 V352
0x390: V354 = 0x0
0x394: V355 = EXTCODESIZE V322
0x395: V356 = ISZERO V355
0x396: V357 = ISZERO V356
0x397: V358 = 0x39f
0x39a: JUMPI 0x39f V357
---
Entry stack: [V13, 0x13e, V116, V116, 0x0, V268, 0x70a08231, V293]
Stack pops: 5
Stack additions: [S4, V314, V322, 0xa9059cbb, V349, 0x20, V352, V353, V352, 0x0, V322]
Exit stack: [V13, 0x13e, V116, V116, V314, V322, 0xa9059cbb, V349, 0x20, V352, V353, V352, 0x0, V322]

================================

Block 0x39b
[0x39b:0x39e]
---
Predecessors: [0x330]
Successors: []
---
0x39b PUSH1 0x0
0x39d DUP1
0x39e REVERT
---
0x39b: V359 = 0x0
0x39e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x13e, V116, V116, V314, V322, 0xa9059cbb, V349, 0x20, V352, V353, V352, 0x0, V322]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x13e, V116, V116, V314, V322, 0xa9059cbb, V349, 0x20, V352, V353, V352, 0x0, V322]

================================

Block 0x39f
[0x39f:0x3ab]
---
Predecessors: [0x330]
Successors: [0x3ac, 0x3b0]
---
0x39f JUMPDEST
0x3a0 PUSH2 0x2c6
0x3a3 GAS
0x3a4 SUB
0x3a5 CALL
0x3a6 ISZERO
0x3a7 ISZERO
0x3a8 PUSH2 0x3b0
0x3ab JUMPI
---
0x39f: JUMPDEST 
0x3a0: V360 = 0x2c6
0x3a3: V361 = GAS
0x3a4: V362 = SUB V361 0x2c6
0x3a5: V363 = CALL V362 V322 0x0 V352 V353 V352 0x20
0x3a6: V364 = ISZERO V363
0x3a7: V365 = ISZERO V364
0x3a8: V366 = 0x3b0
0x3ab: JUMPI 0x3b0 V365
---
Entry stack: [V13, 0x13e, V116, V116, V314, V322, 0xa9059cbb, V349, 0x20, V352, V353, V352, 0x0, V322]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x13e, V116, V116, V314, V322, 0xa9059cbb, V349]

================================

Block 0x3ac
[0x3ac:0x3af]
---
Predecessors: [0x39f]
Successors: []
---
0x3ac PUSH1 0x0
0x3ae DUP1
0x3af REVERT
---
0x3ac: V367 = 0x0
0x3af: REVERT 0x0 0x0
---
Entry stack: [V13, 0x13e, V116, V116, V314, V322, 0xa9059cbb, V349]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x13e, V116, V116, V314, V322, 0xa9059cbb, V349]

================================

Block 0x3b0
[0x3b0:0x40f]
---
Predecessors: [0x39f]
Successors: [0x13e]
---
0x3b0 JUMPDEST
0x3b1 POP
0x3b2 POP
0x3b3 POP
0x3b4 PUSH1 0x40
0x3b6 MLOAD
0x3b7 DUP1
0x3b8 MLOAD
0x3b9 SWAP1
0x3ba POP
0x3bb POP
0x3bc PUSH32 0xa04c965e7d289704527a948915777d68bb4530fb4b08aa935fb958c0b7901ab9
0x3dd DUP4
0x3de CALLER
0x3df DUP4
0x3e0 PUSH1 0x40
0x3e2 MLOAD
0x3e3 PUSH1 0x1
0x3e5 PUSH1 0xa0
0x3e7 PUSH1 0x2
0x3e9 EXP
0x3ea SUB
0x3eb SWAP4
0x3ec DUP5
0x3ed AND
0x3ee DUP2
0x3ef MSTORE
0x3f0 SWAP2
0x3f1 SWAP1
0x3f2 SWAP3
0x3f3 AND
0x3f4 PUSH1 0x20
0x3f6 DUP3
0x3f7 ADD
0x3f8 MSTORE
0x3f9 PUSH1 0x40
0x3fb DUP1
0x3fc DUP3
0x3fd ADD
0x3fe SWAP3
0x3ff SWAP1
0x400 SWAP3
0x401 MSTORE
0x402 PUSH1 0x60
0x404 ADD
0x405 SWAP1
0x406 MLOAD
0x407 DUP1
0x408 SWAP2
0x409 SUB
0x40a SWAP1
0x40b LOG1
0x40c POP
0x40d POP
0x40e POP
0x40f JUMP
---
0x3b0: JUMPDEST 
0x3b4: V368 = 0x40
0x3b6: V369 = M[0x40]
0x3b8: V370 = M[V369]
0x3bc: V371 = 0xa04c965e7d289704527a948915777d68bb4530fb4b08aa935fb958c0b7901ab9
0x3de: V372 = CALLER
0x3e0: V373 = 0x40
0x3e2: V374 = M[0x40]
0x3e3: V375 = 0x1
0x3e5: V376 = 0xa0
0x3e7: V377 = 0x2
0x3e9: V378 = EXP 0x2 0xa0
0x3ea: V379 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ed: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x3ef: M[V374] = V380
0x3f3: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x3f4: V382 = 0x20
0x3f7: V383 = ADD V374 0x20
0x3f8: M[V383] = V381
0x3f9: V384 = 0x40
0x3fd: V385 = ADD V374 0x40
0x401: M[V385] = V314
0x402: V386 = 0x60
0x404: V387 = ADD 0x60 V374
0x406: V388 = M[0x40]
0x409: V389 = SUB V387 V388
0x40b: LOG V388 V389 0xa04c965e7d289704527a948915777d68bb4530fb4b08aa935fb958c0b7901ab9
0x40f: JUMP 0x13e
---
Entry stack: [V13, 0x13e, V116, V116, V314, V322, 0xa9059cbb, V349]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0x410
[0x410:0x415]
---
Predecessors: [0x16a]
Successors: [0x172]
---
0x410 JUMPDEST
0x411 PUSH1 0x2
0x413 SLOAD
0x414 DUP2
0x415 JUMP
---
0x410: JUMPDEST 
0x411: V390 = 0x2
0x413: V391 = S[0x2]
0x415: JUMP 0x172
---
Entry stack: [V13, 0x172]
Stack pops: 1
Stack additions: [S0, V391]
Exit stack: [V13, 0x172, V391]

================================

Block 0x416
[0x416:0x424]
---
Predecessors: [0x18f]
Successors: [0xc2]
---
0x416 JUMPDEST
0x417 PUSH1 0x1
0x419 SLOAD
0x41a PUSH1 0x1
0x41c PUSH1 0xa0
0x41e PUSH1 0x2
0x420 EXP
0x421 SUB
0x422 AND
0x423 DUP2
0x424 JUMP
---
0x416: JUMPDEST 
0x417: V392 = 0x1
0x419: V393 = S[0x1]
0x41a: V394 = 0x1
0x41c: V395 = 0xa0
0x41e: V396 = 0x2
0x420: V397 = EXP 0x2 0xa0
0x421: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x422: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x424: JUMP 0xc2
---
Entry stack: [V13, 0xc2]
Stack pops: 1
Stack additions: [S0, V399]
Exit stack: [V13, 0xc2, V399]

================================

Block 0x425
[0x425:0x42a]
---
Predecessors: [0x1a2]
Successors: [0x172]
---
0x425 JUMPDEST
0x426 PUSH1 0x3
0x428 SLOAD
0x429 DUP2
0x42a JUMP
---
0x425: JUMPDEST 
0x426: V400 = 0x3
0x428: V401 = S[0x3]
0x42a: JUMP 0x172
---
Entry stack: [V13, 0x172]
Stack pops: 1
Stack additions: [S0, V401]
Exit stack: [V13, 0x172, V401]

================================

Block 0x42b
[0x42b:0x470]
---
Predecessors: []
Successors: []
---
0x42b STOP
0x42c LOG1
0x42d PUSH6 0x627a7a723058
0x434 SHA3
0x435 MISSING 0xdc
0x436 SWAP3
0x437 MISSING 0x2e
0x438 ADDRESS
0x439 PUSH13 0x1dea61daed6ab7f42f18c92d3c
0x447 DUP11
0x448 XOR
0x449 PUSH8 0xef2bb0ee9aef7447
0x452 SWAP12
0x453 MISSING 0xe4
0x454 PUSH28 0x29
---
0x42b: STOP 
0x42c: LOG S0 S1 S2
0x42d: V402 = 0x627a7a723058
0x434: V403 = SHA3 0x627a7a723058 S3
0x435: MISSING 0xdc
0x437: MISSING 0x2e
0x438: V404 = ADDRESS
0x439: V405 = 0x1dea61daed6ab7f42f18c92d3c
0x448: V406 = XOR S8 0x1dea61daed6ab7f42f18c92d3c
0x449: V407 = 0xef2bb0ee9aef7447
0x453: MISSING 0xe4
0x454: V408 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V403, S3, S1, S2, S0, S9, V406, V404, S0, S1, S2, S3, S4, S5, S6, S7, S8, 0xef2bb0ee9aef7447, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0xaf
Exit block: 0xc2
Body: 0xaf, 0xb6, 0xba, 0xc2, 0x1aa

Function 1:
Public function signature: 0x370158ea
Entry block: 0xde
Exit block: 0xf1
Body: 0xde, 0xe5, 0xe9, 0xf1, 0x1b9

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x12b
Exit block: 0x13e
Body: 0x12b, 0x132, 0x136, 0x13e, 0x1df, 0x1f6, 0x1fa, 0x205, 0x209, 0x242, 0x246

Function 3:
Public function signature: 0x49df728c
Entry block: 0x140
Exit block: 0x13e
Body: 0x13e, 0x140, 0x147, 0x14b, 0x296, 0x2b2, 0x2b6, 0x2c1, 0x2c5, 0x31b, 0x31f, 0x32c, 0x330, 0x39b, 0x39f, 0x3ac, 0x3b0

Function 4:
Public function signature: 0x69ac5721
Entry block: 0x15f
Exit block: 0x172
Body: 0x15f, 0x166, 0x16a, 0x172, 0x410

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x184
Exit block: 0xc2
Body: 0xc2, 0x184, 0x18b, 0x18f, 0x416

Function 6:
Public function signature: 0xcf09e0d0
Entry block: 0x197
Exit block: 0x172
Body: 0x172, 0x197, 0x19e, 0x1a2, 0x425

Function 7:
Public fallback function
Entry block: 0x69
Exit block: 0x69
Body: 0x69

