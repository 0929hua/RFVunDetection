Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x75]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x75
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x75
0xa: JUMPI 0x75 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x7e]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x278ecde1
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x7e
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x278ecde1
0x39: V12 = EQ V10 0x278ecde1
0x3a: V13 = 0x7e
0x3d: JUMPI 0x7e V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x93]
---
0x3e DUP1
0x3f PUSH4 0x43d726d6
0x44 EQ
0x45 PUSH2 0x93
0x48 JUMPI
---
0x3f: V14 = 0x43d726d6
0x44: V15 = EQ 0x43d726d6 V10
0x45: V16 = 0x93
0x48: JUMPI 0x93 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xa5]
---
0x49 DUP1
0x4a PUSH4 0xb7b0422d
0x4f EQ
0x50 PUSH2 0xa5
0x53 JUMPI
---
0x4a: V17 = 0xb7b0422d
0x4f: V18 = EQ 0xb7b0422d V10
0x50: V19 = 0xa5
0x53: JUMPI 0xa5 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0xba]
---
0x54 DUP1
0x55 PUSH4 0xcb4d11b7
0x5a EQ
0x5b PUSH2 0xba
0x5e JUMPI
---
0x55: V20 = 0xcb4d11b7
0x5a: V21 = EQ 0xcb4d11b7 V10
0x5b: V22 = 0xba
0x5e: JUMPI 0xba V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0xf0]
---
0x5f DUP1
0x60 PUSH4 0xd0e30db0
0x65 EQ
0x66 PUSH2 0xf0
0x69 JUMPI
---
0x60: V23 = 0xd0e30db0
0x65: V24 = EQ 0xd0e30db0 V10
0x66: V25 = 0xf0
0x69: JUMPI 0xf0 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0xfa]
---
0x6a DUP1
0x6b PUSH4 0xd2514e84
0x70 EQ
0x71 PUSH2 0xfa
0x74 JUMPI
---
0x6b: V26 = 0xd2514e84
0x70: V27 = EQ 0xd2514e84 V10
0x71: V28 = 0xfa
0x74: JUMPI 0xfa V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x78]
---
Predecessors: [0x0, 0x6a]
Successors: [0x79]
---
0x75 JUMPDEST
0x76 PUSH2 0x7c
---
0x75: JUMPDEST 
0x76: V29 = 0x7c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7c]
Exit stack: [V10, 0x7c]

================================

Block 0x79
[0x79:0x79]
---
Predecessors: [0x75, 0x1a2, 0x1ba]
Successors: [0x7a]
---
0x79 JUMPDEST
---
0x79: JUMPDEST 
---
Entry stack: [V10, 0x7c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c]

================================

Block 0x7a
[0x7a:0x7b]
---
Predecessors: [0x79]
Successors: [0x7c]
---
0x7a JUMPDEST
0x7b JUMP
---
0x7a: JUMPDEST 
0x7b: JUMP 0x7c
---
Entry stack: [V10, 0x7c]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x7c
[0x7c:0x7d]
---
Predecessors: [0x7a, 0x19f, 0x1f4, 0x320]
Successors: []
---
0x7c JUMPDEST
0x7d STOP
---
0x7c: JUMPDEST 
0x7d: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7e
[0x7e:0x84]
---
Predecessors: [0xb]
Successors: [0x85, 0x86]
---
0x7e JUMPDEST
0x7f CALLVALUE
0x80 ISZERO
0x81 PUSH2 0x86
0x84 JUMPI
---
0x7e: JUMPDEST 
0x7f: V30 = CALLVALUE
0x80: V31 = ISZERO V30
0x81: V32 = 0x86
0x84: JUMPI 0x86 V31
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x85
[0x85:0x85]
---
Predecessors: [0x7e]
Successors: []
---
0x85 INVALID
---
0x85: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x86
[0x86:0x90]
---
Predecessors: [0x7e]
Successors: [0x128]
---
0x86 JUMPDEST
0x87 PUSH2 0x7c
0x8a PUSH1 0x4
0x8c CALLDATALOAD
0x8d PUSH2 0x128
0x90 JUMP
---
0x86: JUMPDEST 
0x87: V33 = 0x7c
0x8a: V34 = 0x4
0x8c: V35 = CALLDATALOAD 0x4
0x8d: V36 = 0x128
0x90: JUMP 0x128
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7c, V35]
Exit stack: [V10, 0x7c, V35]

================================

Block 0x91
[0x91:0x92]
---
Predecessors: []
Successors: []
---
0x91 JUMPDEST
0x92 STOP
---
0x91: JUMPDEST 
0x92: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x93
[0x93:0x99]
---
Predecessors: [0x3e]
Successors: [0x9a, 0x9b]
---
0x93 JUMPDEST
0x94 CALLVALUE
0x95 ISZERO
0x96 PUSH2 0x9b
0x99 JUMPI
---
0x93: JUMPDEST 
0x94: V37 = CALLVALUE
0x95: V38 = ISZERO V37
0x96: V39 = 0x9b
0x99: JUMPI 0x9b V38
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9a
[0x9a:0x9a]
---
Predecessors: [0x93]
Successors: []
---
0x9a INVALID
---
0x9a: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9b
[0x9b:0xa2]
---
Predecessors: [0x93]
Successors: [0x1a2]
---
0x9b JUMPDEST
0x9c PUSH2 0x7c
0x9f PUSH2 0x1a2
0xa2 JUMP
---
0x9b: JUMPDEST 
0x9c: V40 = 0x7c
0x9f: V41 = 0x1a2
0xa2: JUMP 0x1a2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7c]
Exit stack: [V10, 0x7c]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: []
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa5
[0xa5:0xab]
---
Predecessors: [0x49]
Successors: [0xac, 0xad]
---
0xa5 JUMPDEST
0xa6 CALLVALUE
0xa7 ISZERO
0xa8 PUSH2 0xad
0xab JUMPI
---
0xa5: JUMPDEST 
0xa6: V42 = CALLVALUE
0xa7: V43 = ISZERO V42
0xa8: V44 = 0xad
0xab: JUMPI 0xad V43
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xac
[0xac:0xac]
---
Predecessors: [0xa5]
Successors: []
---
0xac INVALID
---
0xac: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0xa5]
Successors: [0x1ee]
---
0xad JUMPDEST
0xae PUSH2 0x7c
0xb1 PUSH1 0x4
0xb3 CALLDATALOAD
0xb4 PUSH2 0x1ee
0xb7 JUMP
---
0xad: JUMPDEST 
0xae: V45 = 0x7c
0xb1: V46 = 0x4
0xb3: V47 = CALLDATALOAD 0x4
0xb4: V48 = 0x1ee
0xb7: JUMP 0x1ee
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7c, V47]
Exit stack: [V10, 0x7c, V47]

================================

Block 0xb8
[0xb8:0xb9]
---
Predecessors: []
Successors: []
---
0xb8 JUMPDEST
0xb9 STOP
---
0xb8: JUMPDEST 
0xb9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xba
[0xba:0xc0]
---
Predecessors: [0x54]
Successors: [0xc1, 0xc2]
---
0xba JUMPDEST
0xbb CALLVALUE
0xbc ISZERO
0xbd PUSH2 0xc2
0xc0 JUMPI
---
0xba: JUMPDEST 
0xbb: V49 = CALLVALUE
0xbc: V50 = ISZERO V49
0xbd: V51 = 0xc2
0xc0: JUMPI 0xc2 V50
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc1
[0xc1:0xc1]
---
Predecessors: [0xba]
Successors: []
---
0xc1 INVALID
---
0xc1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xba]
Successors: [0x1f7]
---
0xc2 JUMPDEST
0xc3 PUSH2 0xcd
0xc6 PUSH1 0x4
0xc8 CALLDATALOAD
0xc9 PUSH2 0x1f7
0xcc JUMP
---
0xc2: JUMPDEST 
0xc3: V52 = 0xcd
0xc6: V53 = 0x4
0xc8: V54 = CALLDATALOAD 0x4
0xc9: V55 = 0x1f7
0xcc: JUMP 0x1f7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xcd, V54]
Exit stack: [V10, 0xcd, V54]

================================

Block 0xcd
[0xcd:0xef]
---
Predecessors: [0x216]
Successors: []
---
0xcd JUMPDEST
0xce PUSH1 0x40
0xd0 DUP1
0xd1 MLOAD
0xd2 PUSH1 0x1
0xd4 PUSH1 0xa0
0xd6 PUSH1 0x2
0xd8 EXP
0xd9 SUB
0xda SWAP1
0xdb SWAP4
0xdc AND
0xdd DUP4
0xde MSTORE
0xdf PUSH1 0x20
0xe1 DUP4
0xe2 ADD
0xe3 SWAP2
0xe4 SWAP1
0xe5 SWAP2
0xe6 MSTORE
0xe7 DUP1
0xe8 MLOAD
0xe9 SWAP2
0xea DUP3
0xeb SWAP1
0xec SUB
0xed ADD
0xee SWAP1
0xef RETURN
---
0xcd: JUMPDEST 
0xce: V56 = 0x40
0xd1: V57 = M[0x40]
0xd2: V58 = 0x1
0xd4: V59 = 0xa0
0xd6: V60 = 0x2
0xd8: V61 = EXP 0x2 0xa0
0xd9: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdc: V63 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0xde: M[V57] = V63
0xdf: V64 = 0x20
0xe2: V65 = ADD V57 0x20
0xe6: M[V65] = V190
0xe8: V66 = M[0x40]
0xec: V67 = SUB V57 V66
0xed: V68 = ADD V67 0x40
0xef: RETURN V66 V68
---
Entry stack: [V10, 0xcd, V196, V190]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xcd]

================================

Block 0xf0
[0xf0:0xf7]
---
Predecessors: [0x5f]
Successors: [0x22f]
---
0xf0 JUMPDEST
0xf1 PUSH2 0x7c
0xf4 PUSH2 0x22f
0xf7 JUMP
---
0xf0: JUMPDEST 
0xf1: V69 = 0x7c
0xf4: V70 = 0x22f
0xf7: JUMP 0x22f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7c]
Exit stack: [V10, 0x7c]

================================

Block 0xf8
[0xf8:0xf9]
---
Predecessors: []
Successors: []
---
0xf8 JUMPDEST
0xf9 STOP
---
0xf8: JUMPDEST 
0xf9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xfa
[0xfa:0x100]
---
Predecessors: [0x6a]
Successors: [0x101, 0x102]
---
0xfa JUMPDEST
0xfb CALLVALUE
0xfc ISZERO
0xfd PUSH2 0x102
0x100 JUMPI
---
0xfa: JUMPDEST 
0xfb: V71 = CALLVALUE
0xfc: V72 = ISZERO V71
0xfd: V73 = 0x102
0x100: JUMPI 0x102 V72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x101
[0x101:0x101]
---
Predecessors: [0xfa]
Successors: []
---
0x101 INVALID
---
0x101: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x102
[0x102:0x115]
---
Predecessors: [0xfa]
Successors: [0x323]
---
0x102 JUMPDEST
0x103 PUSH2 0x116
0x106 PUSH1 0x1
0x108 PUSH1 0xa0
0x10a PUSH1 0x2
0x10c EXP
0x10d SUB
0x10e PUSH1 0x4
0x110 CALLDATALOAD
0x111 AND
0x112 PUSH2 0x323
0x115 JUMP
---
0x102: JUMPDEST 
0x103: V74 = 0x116
0x106: V75 = 0x1
0x108: V76 = 0xa0
0x10a: V77 = 0x2
0x10c: V78 = EXP 0x2 0xa0
0x10d: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10e: V80 = 0x4
0x110: V81 = CALLDATALOAD 0x4
0x111: V82 = AND V81 0xffffffffffffffffffffffffffffffffffffffff
0x112: V83 = 0x323
0x115: JUMP 0x323
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x116, V82]
Exit stack: [V10, 0x116, V82]

================================

Block 0x116
[0x116:0x127]
---
Predecessors: [0x323]
Successors: []
---
0x116 JUMPDEST
0x117 PUSH1 0x40
0x119 DUP1
0x11a MLOAD
0x11b SWAP2
0x11c DUP3
0x11d MSTORE
0x11e MLOAD
0x11f SWAP1
0x120 DUP2
0x121 SWAP1
0x122 SUB
0x123 PUSH1 0x20
0x125 ADD
0x126 SWAP1
0x127 RETURN
---
0x116: JUMPDEST 
0x117: V84 = 0x40
0x11a: V85 = M[0x40]
0x11d: M[V85] = V292
0x11e: V86 = M[0x40]
0x122: V87 = SUB V85 V86
0x123: V88 = 0x20
0x125: V89 = ADD 0x20 V87
0x127: RETURN V86 V89
---
Entry stack: [V10, 0x116, V292]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x116]

================================

Block 0x128
[0x128:0x134]
---
Predecessors: [0x86]
Successors: [0x135, 0x13d]
---
0x128 JUMPDEST
0x129 PUSH1 0x1
0x12b SLOAD
0x12c TIMESTAMP
0x12d LT
0x12e ISZERO
0x12f DUP1
0x130 ISZERO
0x131 PUSH2 0x13d
0x134 JUMPI
---
0x128: JUMPDEST 
0x129: V90 = 0x1
0x12b: V91 = S[0x1]
0x12c: V92 = TIMESTAMP
0x12d: V93 = LT V92 V91
0x12e: V94 = ISZERO V93
0x130: V95 = ISZERO V94
0x131: V96 = 0x13d
0x134: JUMPI 0x13d V95
---
Entry stack: [V10, 0x7c, V35]
Stack pops: 0
Stack additions: [V94]
Exit stack: [V10, 0x7c, V35, V94]

================================

Block 0x135
[0x135:0x13c]
---
Predecessors: [0x128]
Successors: [0x13d]
---
0x135 POP
0x136 PUSH1 0x0
0x138 SLOAD
0x139 PUSH1 0xff
0x13b AND
0x13c ISZERO
---
0x136: V97 = 0x0
0x138: V98 = S[0x0]
0x139: V99 = 0xff
0x13b: V100 = AND 0xff V98
0x13c: V101 = ISZERO V100
---
Entry stack: [V10, 0x7c, V35, V94]
Stack pops: 1
Stack additions: [V101]
Exit stack: [V10, 0x7c, V35, V101]

================================

Block 0x13d
[0x13d:0x142]
---
Predecessors: [0x128, 0x135]
Successors: [0x143, 0x19c]
---
0x13d JUMPDEST
0x13e ISZERO
0x13f PUSH2 0x19c
0x142 JUMPI
---
0x13d: JUMPDEST 
0x13e: V102 = ISZERO S0
0x13f: V103 = 0x19c
0x142: JUMPI 0x19c V102
---
Entry stack: [V10, 0x7c, V35, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x7c, V35]

================================

Block 0x143
[0x143:0x164]
---
Predecessors: [0x13d]
Successors: [0x165, 0x16a]
---
0x143 PUSH1 0x1
0x145 PUSH1 0xa0
0x147 PUSH1 0x2
0x149 EXP
0x14a SUB
0x14b CALLER
0x14c AND
0x14d PUSH1 0x0
0x14f SWAP1
0x150 DUP2
0x151 MSTORE
0x152 PUSH1 0x4
0x154 PUSH1 0x20
0x156 MSTORE
0x157 PUSH1 0x40
0x159 SWAP1
0x15a SHA3
0x15b SLOAD
0x15c DUP2
0x15d GT
0x15e DUP1
0x15f ISZERO
0x160 SWAP1
0x161 PUSH2 0x16a
0x164 JUMPI
---
0x143: V104 = 0x1
0x145: V105 = 0xa0
0x147: V106 = 0x2
0x149: V107 = EXP 0x2 0xa0
0x14a: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14b: V109 = CALLER
0x14c: V110 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x14d: V111 = 0x0
0x151: M[0x0] = V110
0x152: V112 = 0x4
0x154: V113 = 0x20
0x156: M[0x20] = 0x4
0x157: V114 = 0x40
0x15a: V115 = SHA3 0x0 0x40
0x15b: V116 = S[V115]
0x15d: V117 = GT V35 V116
0x15f: V118 = ISZERO V117
0x161: V119 = 0x16a
0x164: JUMPI 0x16a V117
---
Entry stack: [V10, 0x7c, V35]
Stack pops: 1
Stack additions: [S0, V118]
Exit stack: [V10, 0x7c, V35, V118]

================================

Block 0x165
[0x165:0x169]
---
Predecessors: [0x143]
Successors: [0x16a]
---
0x165 POP
0x166 PUSH1 0x0
0x168 DUP2
0x169 GT
---
0x166: V120 = 0x0
0x169: V121 = GT V35 0x0
---
Entry stack: [V10, 0x7c, V35, V118]
Stack pops: 2
Stack additions: [S1, V121]
Exit stack: [V10, 0x7c, V35, V121]

================================

Block 0x16a
[0x16a:0x16f]
---
Predecessors: [0x143, 0x165]
Successors: [0x170, 0x19c]
---
0x16a JUMPDEST
0x16b ISZERO
0x16c PUSH2 0x19c
0x16f JUMPI
---
0x16a: JUMPDEST 
0x16b: V122 = ISZERO S0
0x16c: V123 = 0x19c
0x16f: JUMPI 0x19c V122
---
Entry stack: [V10, 0x7c, V35, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x7c, V35]

================================

Block 0x170
[0x170:0x19a]
---
Predecessors: [0x16a]
Successors: [0x19b, 0x19c]
---
0x170 PUSH1 0x40
0x172 MLOAD
0x173 PUSH1 0x1
0x175 PUSH1 0xa0
0x177 PUSH1 0x2
0x179 EXP
0x17a SUB
0x17b CALLER
0x17c AND
0x17d SWAP1
0x17e DUP3
0x17f ISZERO
0x180 PUSH2 0x8fc
0x183 MUL
0x184 SWAP1
0x185 DUP4
0x186 SWAP1
0x187 PUSH1 0x0
0x189 DUP2
0x18a DUP2
0x18b DUP2
0x18c DUP6
0x18d DUP9
0x18e DUP9
0x18f CALL
0x190 SWAP4
0x191 POP
0x192 POP
0x193 POP
0x194 POP
0x195 ISZERO
0x196 ISZERO
0x197 PUSH2 0x19c
0x19a JUMPI
---
0x170: V124 = 0x40
0x172: V125 = M[0x40]
0x173: V126 = 0x1
0x175: V127 = 0xa0
0x177: V128 = 0x2
0x179: V129 = EXP 0x2 0xa0
0x17a: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17b: V131 = CALLER
0x17c: V132 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x17f: V133 = ISZERO V35
0x180: V134 = 0x8fc
0x183: V135 = MUL 0x8fc V133
0x187: V136 = 0x0
0x18f: V137 = CALL V135 V132 V35 V125 0x0 V125 0x0
0x195: V138 = ISZERO V137
0x196: V139 = ISZERO V138
0x197: V140 = 0x19c
0x19a: JUMPI 0x19c V139
---
Entry stack: [V10, 0x7c, V35]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x7c, V35]

================================

Block 0x19b
[0x19b:0x19b]
---
Predecessors: [0x170]
Successors: []
---
0x19b INVALID
---
0x19b: INVALID 
---
Entry stack: [V10, 0x7c, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, V35]

================================

Block 0x19c
[0x19c:0x19c]
---
Predecessors: [0x13d, 0x16a, 0x170, 0x2f7]
Successors: [0x19d]
---
0x19c JUMPDEST
---
0x19c: JUMPDEST 
---
Entry stack: [V10, 0x7c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, S0]

================================

Block 0x19d
[0x19d:0x19d]
---
Predecessors: [0x19c]
Successors: [0x19e]
---
0x19d JUMPDEST
---
0x19d: JUMPDEST 
---
Entry stack: [V10, 0x7c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, S0]

================================

Block 0x19e
[0x19e:0x19e]
---
Predecessors: [0x19d]
Successors: [0x19f]
---
0x19e JUMPDEST
---
0x19e: JUMPDEST 
---
Entry stack: [V10, 0x7c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, S0]

================================

Block 0x19f
[0x19f:0x1a1]
---
Predecessors: [0x19e]
Successors: [0x7c]
---
0x19f JUMPDEST
0x1a0 POP
0x1a1 JUMP
---
0x19f: JUMPDEST 
0x1a1: JUMP 0x7c
---
Entry stack: [V10, 0x7c, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a2
[0x1a2:0x1b9]
---
Predecessors: [0x9b]
Successors: [0x79, 0x1ba]
---
0x1a2 JUMPDEST
0x1a3 PUSH1 0x2
0x1a5 SLOAD
0x1a6 CALLER
0x1a7 PUSH1 0x1
0x1a9 PUSH1 0xa0
0x1ab PUSH1 0x2
0x1ad EXP
0x1ae SUB
0x1af SWAP1
0x1b0 DUP2
0x1b1 AND
0x1b2 SWAP2
0x1b3 AND
0x1b4 EQ
0x1b5 ISZERO
0x1b6 PUSH2 0x79
0x1b9 JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V141 = 0x2
0x1a5: V142 = S[0x2]
0x1a6: V143 = CALLER
0x1a7: V144 = 0x1
0x1a9: V145 = 0xa0
0x1ab: V146 = 0x2
0x1ad: V147 = EXP 0x2 0xa0
0x1ae: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b1: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x1b3: V150 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V151 = EQ V150 V149
0x1b5: V152 = ISZERO V151
0x1b6: V153 = 0x79
0x1b9: JUMPI 0x79 V152
---
Entry stack: [V10, 0x7c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c]

================================

Block 0x1ba
[0x1ba:0x1e8]
---
Predecessors: [0x1a2]
Successors: [0x79, 0x1e9]
---
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd PUSH1 0x1
0x1bf PUSH1 0xa0
0x1c1 PUSH1 0x2
0x1c3 EXP
0x1c4 SUB
0x1c5 CALLER
0x1c6 DUP2
0x1c7 AND
0x1c8 SWAP2
0x1c9 ADDRESS
0x1ca SWAP1
0x1cb SWAP2
0x1cc AND
0x1cd BALANCE
0x1ce DUP1
0x1cf ISZERO
0x1d0 PUSH2 0x8fc
0x1d3 MUL
0x1d4 SWAP2
0x1d5 PUSH1 0x0
0x1d7 DUP2
0x1d8 DUP2
0x1d9 DUP2
0x1da DUP6
0x1db DUP9
0x1dc DUP9
0x1dd CALL
0x1de SWAP4
0x1df POP
0x1e0 POP
0x1e1 POP
0x1e2 POP
0x1e3 ISZERO
0x1e4 ISZERO
0x1e5 PUSH2 0x79
0x1e8 JUMPI
---
0x1ba: V154 = 0x40
0x1bc: V155 = M[0x40]
0x1bd: V156 = 0x1
0x1bf: V157 = 0xa0
0x1c1: V158 = 0x2
0x1c3: V159 = EXP 0x2 0xa0
0x1c4: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c5: V161 = CALLER
0x1c7: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x1c9: V163 = ADDRESS
0x1cc: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x1cd: V165 = BALANCE V164
0x1cf: V166 = ISZERO V165
0x1d0: V167 = 0x8fc
0x1d3: V168 = MUL 0x8fc V166
0x1d5: V169 = 0x0
0x1dd: V170 = CALL V168 V162 V165 V155 0x0 V155 0x0
0x1e3: V171 = ISZERO V170
0x1e4: V172 = ISZERO V171
0x1e5: V173 = 0x79
0x1e8: JUMPI 0x79 V172
---
Entry stack: [V10, 0x7c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c]

================================

Block 0x1e9
[0x1e9:0x1e9]
---
Predecessors: [0x1ba]
Successors: []
---
0x1e9 INVALID
---
0x1e9: INVALID 
---
Entry stack: [V10, 0x7c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c]

================================

Block 0x1ea
[0x1ea:0x1ea]
---
Predecessors: []
Successors: [0x1eb]
---
0x1ea JUMPDEST
---
0x1ea: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1eb
[0x1eb:0x1eb]
---
Predecessors: [0x1ea]
Successors: [0x1ec]
---
0x1eb JUMPDEST
---
0x1eb: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1ec
[0x1ec:0x1ed]
---
Predecessors: [0x1eb]
Successors: []
Has unresolved jump.
---
0x1ec JUMPDEST
0x1ed JUMP
---
0x1ec: JUMPDEST 
0x1ed: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1ee
[0x1ee:0x1f3]
---
Predecessors: [0xad]
Successors: [0x1f4]
---
0x1ee JUMPDEST
0x1ef PUSH1 0x1
0x1f1 DUP2
0x1f2 SWAP1
0x1f3 SSTORE
---
0x1ee: JUMPDEST 
0x1ef: V174 = 0x1
0x1f3: S[0x1] = V47
---
Entry stack: [V10, 0x7c, V47]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x7c, V47]

================================

Block 0x1f4
[0x1f4:0x1f6]
---
Predecessors: [0x1ee]
Successors: [0x7c]
---
0x1f4 JUMPDEST
0x1f5 POP
0x1f6 JUMP
---
0x1f4: JUMPDEST 
0x1f6: JUMP 0x7c
---
Entry stack: [V10, 0x7c, V47]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f7
[0x1f7:0x203]
---
Predecessors: [0xc2]
Successors: [0x204, 0x205]
---
0x1f7 JUMPDEST
0x1f8 PUSH1 0x3
0x1fa DUP1
0x1fb SLOAD
0x1fc DUP3
0x1fd SWAP1
0x1fe DUP2
0x1ff LT
0x200 PUSH2 0x205
0x203 JUMPI
---
0x1f7: JUMPDEST 
0x1f8: V175 = 0x3
0x1fb: V176 = S[0x3]
0x1ff: V177 = LT V54 V176
0x200: V178 = 0x205
0x203: JUMPI 0x205 V177
---
Entry stack: [V10, 0xcd, V54]
Stack pops: 1
Stack additions: [S0, 0x3, S0]
Exit stack: [V10, 0xcd, V54, 0x3, V54]

================================

Block 0x204
[0x204:0x204]
---
Predecessors: [0x1f7]
Successors: []
---
0x204 INVALID
---
0x204: INVALID 
---
Entry stack: [V10, 0xcd, V54, 0x3, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcd, V54, 0x3, V54]

================================

Block 0x205
[0x205:0x215]
---
Predecessors: [0x1f7]
Successors: [0x216]
---
0x205 JUMPDEST
0x206 SWAP1
0x207 PUSH1 0x0
0x209 MSTORE
0x20a PUSH1 0x20
0x20c PUSH1 0x0
0x20e SHA3
0x20f SWAP1
0x210 PUSH1 0x2
0x212 MUL
0x213 ADD
0x214 PUSH1 0x0
---
0x205: JUMPDEST 
0x207: V179 = 0x0
0x209: M[0x0] = 0x3
0x20a: V180 = 0x20
0x20c: V181 = 0x0
0x20e: V182 = SHA3 0x0 0x20
0x210: V183 = 0x2
0x212: V184 = MUL 0x2 V54
0x213: V185 = ADD V184 V182
0x214: V186 = 0x0
---
Entry stack: [V10, 0xcd, V54, 0x3, V54]
Stack pops: 2
Stack additions: [V185, 0x0]
Exit stack: [V10, 0xcd, V54, V185, 0x0]

================================

Block 0x216
[0x216:0x22e]
---
Predecessors: [0x205]
Successors: [0xcd]
---
0x216 JUMPDEST
0x217 POP
0x218 DUP1
0x219 SLOAD
0x21a PUSH1 0x1
0x21c SWAP1
0x21d SWAP2
0x21e ADD
0x21f SLOAD
0x220 PUSH1 0x1
0x222 PUSH1 0xa0
0x224 PUSH1 0x2
0x226 EXP
0x227 SUB
0x228 SWAP1
0x229 SWAP2
0x22a AND
0x22b SWAP2
0x22c POP
0x22d DUP3
0x22e JUMP
---
0x216: JUMPDEST 
0x219: V187 = S[V185]
0x21a: V188 = 0x1
0x21e: V189 = ADD V185 0x1
0x21f: V190 = S[V189]
0x220: V191 = 0x1
0x222: V192 = 0xa0
0x224: V193 = 0x2
0x226: V194 = EXP 0x2 0xa0
0x227: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22a: V196 = AND V187 0xffffffffffffffffffffffffffffffffffffffff
0x22e: JUMP 0xcd
---
Entry stack: [V10, 0xcd, V54, V185, 0x0]
Stack pops: 4
Stack additions: [S3, V196, V190]
Exit stack: [V10, 0xcd, V196, V190]

================================

Block 0x22f
[0x22f:0x243]
---
Predecessors: [0xf0]
Successors: [0x244, 0x251]
---
0x22f JUMPDEST
0x230 PUSH1 0x0
0x232 PUSH8 0x6f05b59d3b20000
0x23b CALLVALUE
0x23c LT
0x23d ISZERO
0x23e DUP1
0x23f ISZERO
0x240 PUSH2 0x251
0x243 JUMPI
---
0x22f: JUMPDEST 
0x230: V197 = 0x0
0x232: V198 = 0x6f05b59d3b20000
0x23b: V199 = CALLVALUE
0x23c: V200 = LT V199 0x6f05b59d3b20000
0x23d: V201 = ISZERO V200
0x23f: V202 = ISZERO V201
0x240: V203 = 0x251
0x243: JUMPI 0x251 V202
---
Entry stack: [V10, 0x7c]
Stack pops: 0
Stack additions: [0x0, V201]
Exit stack: [V10, 0x7c, 0x0, V201]

================================

Block 0x244
[0x244:0x250]
---
Predecessors: [0x22f]
Successors: [0x251]
---
0x244 POP
0x245 PUSH1 0x1
0x247 PUSH1 0xa0
0x249 PUSH1 0x2
0x24b EXP
0x24c SUB
0x24d CALLER
0x24e AND
0x24f ISZERO
0x250 ISZERO
---
0x245: V204 = 0x1
0x247: V205 = 0xa0
0x249: V206 = 0x2
0x24b: V207 = EXP 0x2 0xa0
0x24c: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24d: V209 = CALLER
0x24e: V210 = AND V209 0xffffffffffffffffffffffffffffffffffffffff
0x24f: V211 = ISZERO V210
0x250: V212 = ISZERO V211
---
Entry stack: [V10, 0x7c, 0x0, V201]
Stack pops: 1
Stack additions: [V212]
Exit stack: [V10, 0x7c, 0x0, V212]

================================

Block 0x251
[0x251:0x256]
---
Predecessors: [0x22f, 0x244]
Successors: [0x257, 0x2f7]
---
0x251 JUMPDEST
0x252 ISZERO
0x253 PUSH2 0x2f7
0x256 JUMPI
---
0x251: JUMPDEST 
0x252: V213 = ISZERO S0
0x253: V214 = 0x2f7
0x256: JUMPI 0x2f7 V213
---
Entry stack: [V10, 0x7c, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x7c, 0x0]

================================

Block 0x257
[0x257:0x297]
---
Predecessors: [0x251]
Successors: [0x335]
---
0x257 DUP1
0x258 SLOAD
0x259 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26e NOT
0x26f AND
0x270 CALLER
0x271 PUSH1 0x1
0x273 PUSH1 0xa0
0x275 PUSH1 0x2
0x277 EXP
0x278 SUB
0x279 AND
0x27a OR
0x27b DUP2
0x27c SSTORE
0x27d CALLVALUE
0x27e PUSH1 0x1
0x280 DUP1
0x281 DUP4
0x282 ADD
0x283 SWAP2
0x284 SWAP1
0x285 SWAP2
0x286 SSTORE
0x287 PUSH1 0x3
0x289 DUP1
0x28a SLOAD
0x28b SWAP1
0x28c SWAP2
0x28d DUP2
0x28e ADD
0x28f PUSH2 0x298
0x292 DUP4
0x293 DUP3
0x294 PUSH2 0x335
0x297 JUMP
---
0x258: V215 = S[0x0]
0x259: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V217 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x26f: V218 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V215
0x270: V219 = CALLER
0x271: V220 = 0x1
0x273: V221 = 0xa0
0x275: V222 = 0x2
0x277: V223 = EXP 0x2 0xa0
0x278: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x279: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x27a: V226 = OR V225 V218
0x27c: S[0x0] = V226
0x27d: V227 = CALLVALUE
0x27e: V228 = 0x1
0x282: V229 = ADD 0x0 0x1
0x286: S[0x1] = V227
0x287: V230 = 0x3
0x28a: V231 = S[0x3]
0x28e: V232 = ADD V231 0x1
0x28f: V233 = 0x298
0x294: V234 = 0x335
0x297: JUMP 0x335
---
Entry stack: [V10, 0x7c, 0x0]
Stack pops: 1
Stack additions: [S0, 0x3, V231, V232, 0x298, 0x3, V232]
Exit stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232]

================================

Block 0x298
[0x298:0x2a8]
---
Predecessors: [0x362]
Successors: [0x2a9]
---
0x298 JUMPDEST
0x299 SWAP2
0x29a PUSH1 0x0
0x29c MSTORE
0x29d PUSH1 0x20
0x29f PUSH1 0x0
0x2a1 SHA3
0x2a2 SWAP1
0x2a3 PUSH1 0x2
0x2a5 MUL
0x2a6 ADD
0x2a7 PUSH1 0x0
---
0x298: JUMPDEST 
0x29a: V235 = 0x0
0x29c: M[0x0] = 0x3
0x29d: V236 = 0x20
0x29f: V237 = 0x0
0x2a1: V238 = SHA3 0x0 0x20
0x2a3: V239 = 0x2
0x2a5: V240 = MUL 0x2 V231
0x2a6: V241 = ADD V240 V238
0x2a7: V242 = 0x0
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V231, V232]
Stack pops: 3
Stack additions: [S0, V241, 0x0]
Exit stack: [V10, 0x7c, 0x0, V232, V241, 0x0]

================================

Block 0x2a9
[0x2a9:0x2f6]
---
Predecessors: [0x298]
Successors: [0x2f7]
---
0x2a9 JUMPDEST
0x2aa POP
0x2ab DUP3
0x2ac SLOAD
0x2ad DUP2
0x2ae SLOAD
0x2af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c4 NOT
0x2c5 AND
0x2c6 PUSH1 0x1
0x2c8 PUSH1 0xa0
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd SUB
0x2ce SWAP2
0x2cf DUP3
0x2d0 AND
0x2d1 OR
0x2d2 DUP3
0x2d3 SSTORE
0x2d4 PUSH1 0x1
0x2d6 DUP1
0x2d7 DUP6
0x2d8 ADD
0x2d9 SLOAD
0x2da SWAP3
0x2db ADD
0x2dc SWAP2
0x2dd SWAP1
0x2de SWAP2
0x2df SSTORE
0x2e0 CALLER
0x2e1 AND
0x2e2 PUSH1 0x0
0x2e4 SWAP1
0x2e5 DUP2
0x2e6 MSTORE
0x2e7 PUSH1 0x4
0x2e9 PUSH1 0x20
0x2eb MSTORE
0x2ec PUSH1 0x40
0x2ee SWAP1
0x2ef SHA3
0x2f0 DUP1
0x2f1 SLOAD
0x2f2 CALLVALUE
0x2f3 ADD
0x2f4 SWAP1
0x2f5 SSTORE
0x2f6 POP
---
0x2a9: JUMPDEST 
0x2ac: V243 = S[0x0]
0x2ae: V244 = S[V241]
0x2af: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c4: V246 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2c5: V247 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V244
0x2c6: V248 = 0x1
0x2c8: V249 = 0xa0
0x2ca: V250 = 0x2
0x2cc: V251 = EXP 0x2 0xa0
0x2cd: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d0: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x2d1: V254 = OR V253 V247
0x2d3: S[V241] = V254
0x2d4: V255 = 0x1
0x2d8: V256 = ADD 0x0 0x1
0x2d9: V257 = S[0x1]
0x2db: V258 = ADD V241 0x1
0x2df: S[V258] = V257
0x2e0: V259 = CALLER
0x2e1: V260 = AND V259 0xffffffffffffffffffffffffffffffffffffffff
0x2e2: V261 = 0x0
0x2e6: M[0x0] = V260
0x2e7: V262 = 0x4
0x2e9: V263 = 0x20
0x2eb: M[0x20] = 0x4
0x2ec: V264 = 0x40
0x2ef: V265 = SHA3 0x0 0x40
0x2f1: V266 = S[V265]
0x2f2: V267 = CALLVALUE
0x2f3: V268 = ADD V267 V266
0x2f5: S[V265] = V268
---
Entry stack: [V10, 0x7c, 0x0, V232, V241, 0x0]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x7c, 0x0]

================================

Block 0x2f7
[0x2f7:0x311]
---
Predecessors: [0x251, 0x2a9]
Successors: [0x19c, 0x312]
---
0x2f7 JUMPDEST
0x2f8 PUSH9 0x56bc75e2d63100000
0x302 PUSH1 0x1
0x304 PUSH1 0xa0
0x306 PUSH1 0x2
0x308 EXP
0x309 SUB
0x30a ADDRESS
0x30b AND
0x30c BALANCE
0x30d LT
0x30e PUSH2 0x19c
0x311 JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V269 = 0x56bc75e2d63100000
0x302: V270 = 0x1
0x304: V271 = 0xa0
0x306: V272 = 0x2
0x308: V273 = EXP 0x2 0xa0
0x309: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30a: V275 = ADDRESS
0x30b: V276 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0x30c: V277 = BALANCE V276
0x30d: V278 = LT V277 0x56bc75e2d63100000
0x30e: V279 = 0x19c
0x311: JUMPI 0x19c V278
---
Entry stack: [V10, 0x7c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, 0x0]

================================

Block 0x312
[0x312:0x31e]
---
Predecessors: [0x2f7]
Successors: [0x31f]
---
0x312 PUSH1 0x0
0x314 DUP1
0x315 SLOAD
0x316 PUSH1 0xff
0x318 NOT
0x319 AND
0x31a PUSH1 0x1
0x31c OR
0x31d SWAP1
0x31e SSTORE
---
0x312: V280 = 0x0
0x315: V281 = S[0x0]
0x316: V282 = 0xff
0x318: V283 = NOT 0xff
0x319: V284 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V281
0x31a: V285 = 0x1
0x31c: V286 = OR 0x1 V284
0x31e: S[0x0] = V286
---
Entry stack: [V10, 0x7c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, 0x0]

================================

Block 0x31f
[0x31f:0x31f]
---
Predecessors: [0x312]
Successors: [0x320]
---
0x31f JUMPDEST
---
0x31f: JUMPDEST 
---
Entry stack: [V10, 0x7c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, 0x0]

================================

Block 0x320
[0x320:0x322]
---
Predecessors: [0x31f]
Successors: [0x7c]
---
0x320 JUMPDEST
0x321 POP
0x322 JUMP
---
0x320: JUMPDEST 
0x322: JUMP 0x7c
---
Entry stack: [V10, 0x7c, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x323
[0x323:0x334]
---
Predecessors: [0x102]
Successors: [0x116]
---
0x323 JUMPDEST
0x324 PUSH1 0x4
0x326 PUSH1 0x20
0x328 MSTORE
0x329 PUSH1 0x0
0x32b SWAP1
0x32c DUP2
0x32d MSTORE
0x32e PUSH1 0x40
0x330 SWAP1
0x331 SHA3
0x332 SLOAD
0x333 DUP2
0x334 JUMP
---
0x323: JUMPDEST 
0x324: V287 = 0x4
0x326: V288 = 0x20
0x328: M[0x20] = 0x4
0x329: V289 = 0x0
0x32d: M[0x0] = V82
0x32e: V290 = 0x40
0x331: V291 = SHA3 0x0 0x40
0x332: V292 = S[V291]
0x334: JUMP 0x116
---
Entry stack: [V10, 0x116, V82]
Stack pops: 2
Stack additions: [S1, V292]
Exit stack: [V10, 0x116, V292]

================================

Block 0x335
[0x335:0x342]
---
Predecessors: [0x257]
Successors: [0x343, 0x361]
---
0x335 JUMPDEST
0x336 DUP2
0x337 SLOAD
0x338 DUP2
0x339 DUP4
0x33a SSTORE
0x33b DUP2
0x33c DUP2
0x33d ISZERO
0x33e GT
0x33f PUSH2 0x361
0x342 JUMPI
---
0x335: JUMPDEST 
0x337: V293 = S[0x3]
0x33a: S[0x3] = V232
0x33d: V294 = ISZERO V293
0x33e: V295 = GT V294 V232
0x33f: V296 = 0x361
0x342: JUMPI 0x361 V295
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232]
Stack pops: 2
Stack additions: [S1, S0, V293]
Exit stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232, V293]

================================

Block 0x343
[0x343:0x360]
---
Predecessors: [0x335]
Successors: [0x367]
---
0x343 PUSH1 0x2
0x345 MUL
0x346 DUP2
0x347 PUSH1 0x2
0x349 MUL
0x34a DUP4
0x34b PUSH1 0x0
0x34d MSTORE
0x34e PUSH1 0x20
0x350 PUSH1 0x0
0x352 SHA3
0x353 SWAP2
0x354 DUP3
0x355 ADD
0x356 SWAP2
0x357 ADD
0x358 PUSH2 0x361
0x35b SWAP2
0x35c SWAP1
0x35d PUSH2 0x367
0x360 JUMP
---
0x343: V297 = 0x2
0x345: V298 = MUL 0x2 V293
0x347: V299 = 0x2
0x349: V300 = MUL 0x2 V232
0x34b: V301 = 0x0
0x34d: M[0x0] = 0x3
0x34e: V302 = 0x20
0x350: V303 = 0x0
0x352: V304 = SHA3 0x0 0x20
0x355: V305 = ADD V304 V298
0x357: V306 = ADD V304 V300
0x358: V307 = 0x361
0x35d: V308 = 0x367
0x360: JUMP 0x367
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232, V293]
Stack pops: 3
Stack additions: [S2, S1, 0x361, V305, V306]
Exit stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232, 0x361, V305, V306]

================================

Block 0x361
[0x361:0x361]
---
Predecessors: [0x335, 0x3a3]
Successors: [0x362]
---
0x361 JUMPDEST
---
0x361: JUMPDEST 
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232, S0]

================================

Block 0x362
[0x362:0x366]
---
Predecessors: [0x361]
Successors: [0x298]
---
0x362 JUMPDEST
0x363 POP
0x364 POP
0x365 POP
0x366 JUMP
---
0x362: JUMPDEST 
0x366: JUMP 0x298
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x7c, 0x0, 0x3, V231, V232]

================================

Block 0x367
[0x367:0x36c]
---
Predecessors: [0x343]
Successors: [0x36d]
---
0x367 JUMPDEST
0x368 PUSH2 0x3a3
0x36b SWAP2
0x36c SWAP1
---
0x367: JUMPDEST 
0x368: V309 = 0x3a3
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232, 0x361, V305, V306]
Stack pops: 2
Stack additions: [0x3a3, S1, S0]
Exit stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232, 0x361, 0x3a3, V305, V306]

================================

Block 0x36d
[0x36d:0x375]
---
Predecessors: [0x367, 0x376]
Successors: [0x376, 0x39f]
---
0x36d JUMPDEST
0x36e DUP1
0x36f DUP3
0x370 GT
0x371 ISZERO
0x372 PUSH2 0x39f
0x375 JUMPI
---
0x36d: JUMPDEST 
0x370: V310 = GT V305 S0
0x371: V311 = ISZERO V310
0x372: V312 = 0x39f
0x375: JUMPI 0x39f V311
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232, 0x361, 0x3a3, V305, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232, 0x361, 0x3a3, V305, S0]

================================

Block 0x376
[0x376:0x39e]
---
Predecessors: [0x36d]
Successors: [0x36d]
---
0x376 DUP1
0x377 SLOAD
0x378 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38d NOT
0x38e AND
0x38f DUP2
0x390 SSTORE
0x391 PUSH1 0x0
0x393 PUSH1 0x1
0x395 DUP3
0x396 ADD
0x397 SSTORE
0x398 PUSH1 0x2
0x39a ADD
0x39b PUSH2 0x36d
0x39e JUMP
---
0x377: V313 = S[S0]
0x378: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x38d: V315 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x38e: V316 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V313
0x390: S[S0] = V316
0x391: V317 = 0x0
0x393: V318 = 0x1
0x396: V319 = ADD S0 0x1
0x397: S[V319] = 0x0
0x398: V320 = 0x2
0x39a: V321 = ADD 0x2 S0
0x39b: V322 = 0x36d
0x39e: JUMP 0x36d
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232, 0x361, 0x3a3, V305, S0]
Stack pops: 1
Stack additions: [V321]
Exit stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232, 0x361, 0x3a3, V305, V321]

================================

Block 0x39f
[0x39f:0x3a2]
---
Predecessors: [0x36d]
Successors: [0x3a3]
---
0x39f JUMPDEST
0x3a0 POP
0x3a1 SWAP1
0x3a2 JUMP
---
0x39f: JUMPDEST 
0x3a2: JUMP 0x3a3
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232, 0x361, 0x3a3, V305, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232, 0x361, V305]

================================

Block 0x3a3
[0x3a3:0x3a5]
---
Predecessors: [0x39f]
Successors: [0x361]
---
0x3a3 JUMPDEST
0x3a4 SWAP1
0x3a5 JUMP
---
0x3a3: JUMPDEST 
0x3a5: JUMP 0x361
---
Entry stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232, 0x361, V305]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x7c, 0x0, 0x3, V231, V232, 0x298, 0x3, V232, V305]

================================

Block 0x3a6
[0x3a6:0x3dd]
---
Predecessors: []
Successors: []
---
0x3a6 STOP
0x3a7 LOG1
0x3a8 PUSH6 0x627a7a723058
0x3af SHA3
0x3b0 NOT
0x3b1 SWAP10
0x3b2 MISSING 0xe6
0x3b3 PUSH4 0x8f603ced
0x3b8 MISSING 0xa6
0x3b9 CODESIZE
0x3ba MISSING 0x22
0x3bb MISSING 0xc
0x3bc MISSING 0xb6
0x3bd PUSH3 0x3b9ec7
0x3c1 XOR
0x3c2 MISSING 0x2c
0x3c3 SWAP1
0x3c4 MISSING 0x27
0x3c5 CALLDATALOAD
0x3c6 MULMOD
0x3c7 NUMBER
0x3c8 SWAP16
0x3c9 SIGNEXTEND
0x3ca SWAP7
0x3cb MISSING 0xcc
0x3cc SWAP6
0x3cd MISSING 0xaa
0x3ce DUP12
0x3cf PUSH14 0x29
---
0x3a6: STOP 
0x3a7: LOG S0 S1 S2
0x3a8: V323 = 0x627a7a723058
0x3af: V324 = SHA3 0x627a7a723058 S3
0x3b0: V325 = NOT V324
0x3b2: MISSING 0xe6
0x3b3: V326 = 0x8f603ced
0x3b8: MISSING 0xa6
0x3b9: V327 = CODESIZE
0x3ba: MISSING 0x22
0x3bb: MISSING 0xc
0x3bc: MISSING 0xb6
0x3bd: V328 = 0x3b9ec7
0x3c1: V329 = XOR 0x3b9ec7 S0
0x3c2: MISSING 0x2c
0x3c4: MISSING 0x27
0x3c5: V330 = CALLDATALOAD S0
0x3c6: V331 = MULMOD V330 S1 S2
0x3c7: V332 = NUMBER
0x3c9: V333 = SIGNEXTEND S17 V331
0x3cb: MISSING 0xcc
0x3cd: MISSING 0xaa
0x3cf: V334 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S13, S4, S5, S6, S7, S8, S9, S10, S11, S12, V325, 0x8f603ced, V327, V329, S1, S0, S9, S3, S4, S5, S6, S7, S8, V333, S10, S11, S12, S13, S14, S15, S16, V332, S6, S1, S2, S3, S4, S5, S0, 0x29, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11]
Exit stack: []

================================

Function 0:
Public function signature: 0x278ecde1
Entry block: 0x7e
Exit block: 0x7c
Body: 0x7c, 0x7e, 0x85, 0x86, 0x128, 0x135, 0x13d, 0x143, 0x165, 0x16a, 0x170, 0x19b, 0x19c, 0x19d, 0x19e, 0x19f

Function 1:
Public function signature: 0x43d726d6
Entry block: 0x93
Exit block: 0x7c
Body: 0x79, 0x7a, 0x7c, 0x93, 0x9a, 0x9b, 0x1a2, 0x1ba, 0x1e9

Function 2:
Public function signature: 0xb7b0422d
Entry block: 0xa5
Exit block: 0x7c
Body: 0x7c, 0xa5, 0xac, 0xad, 0x1ee, 0x1f4

Function 3:
Public function signature: 0xcb4d11b7
Entry block: 0xba
Exit block: 0xcd
Body: 0xba, 0xc1, 0xc2, 0xcd, 0x1f7, 0x204, 0x205, 0x216

Function 4:
Public function signature: 0xd0e30db0
Entry block: 0xf0
Exit block: 0x7c
Body: 0x7c, 0xf0, 0x19c, 0x19d, 0x19e, 0x19f, 0x22f, 0x244, 0x251, 0x257, 0x298, 0x2a9, 0x2f7, 0x312, 0x31f, 0x320, 0x335, 0x343, 0x361, 0x362, 0x367, 0x36d, 0x376, 0x39f, 0x3a3

Function 5:
Public function signature: 0xd2514e84
Entry block: 0xfa
Exit block: 0x116
Body: 0xfa, 0x101, 0x102, 0x116, 0x323

Function 6:
Public fallback function
Entry block: 0x75
Exit block: 0x7c
Body: 0x75, 0x79, 0x7a, 0x7c

