Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x132]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x132
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x132
0xa: JUMPI 0x132 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x134]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x12f52ee
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x134
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x12f52ee
0x1a: V12 = EQ V10 0x12f52ee
0x1b: V13 = 0x134
0x1e: JUMPI 0x134 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x17a]
---
0x1f DUP1
0x20 PUSH4 0x6661abd
0x25 EQ
0x26 PUSH2 0x17a
0x29 JUMPI
---
0x20: V14 = 0x6661abd
0x25: V15 = EQ 0x6661abd V10
0x26: V16 = 0x17a
0x29: JUMPI 0x17a V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x18d]
---
0x2a DUP1
0x2b PUSH4 0x6909f69
0x30 EQ
0x31 PUSH2 0x18d
0x34 JUMPI
---
0x2b: V17 = 0x6909f69
0x30: V18 = EQ 0x6909f69 V10
0x31: V19 = 0x18d
0x34: JUMPI 0x18d V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x2c3]
---
0x35 DUP1
0x36 PUSH4 0x8551a53
0x3b EQ
0x3c PUSH2 0x2c3
0x3f JUMPI
---
0x36: V20 = 0x8551a53
0x3b: V21 = EQ 0x8551a53 V10
0x3c: V22 = 0x2c3
0x3f: JUMPI 0x2c3 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x2d5]
---
0x40 DUP1
0x41 PUSH4 0xa3cb663
0x46 EQ
0x47 PUSH2 0x2d5
0x4a JUMPI
---
0x41: V23 = 0xa3cb663
0x46: V24 = EQ 0xa3cb663 V10
0x47: V25 = 0x2d5
0x4a: JUMPI 0x2d5 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x2de]
---
0x4b DUP1
0x4c PUSH4 0xfb59f95
0x51 EQ
0x52 PUSH2 0x2de
0x55 JUMPI
---
0x4c: V26 = 0xfb59f95
0x51: V27 = EQ 0xfb59f95 V10
0x52: V28 = 0x2de
0x55: JUMPI 0x2de V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x40d]
---
0x56 DUP1
0x57 PUSH4 0x200d2ed2
0x5c EQ
0x5d PUSH2 0x40d
0x60 JUMPI
---
0x57: V29 = 0x200d2ed2
0x5c: V30 = EQ 0x200d2ed2 V10
0x5d: V31 = 0x40d
0x60: JUMPI 0x40d V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x41a]
---
0x61 DUP1
0x62 PUSH4 0x309e21a9
0x67 EQ
0x68 PUSH2 0x41a
0x6b JUMPI
---
0x62: V32 = 0x309e21a9
0x67: V33 = EQ 0x309e21a9 V10
0x68: V34 = 0x41a
0x6b: JUMPI 0x41a V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x423]
---
0x6c DUP1
0x6d PUSH4 0x3262fd9a
0x72 EQ
0x73 PUSH2 0x423
0x76 JUMPI
---
0x6d: V35 = 0x3262fd9a
0x72: V36 = EQ 0x3262fd9a V10
0x73: V37 = 0x423
0x76: JUMPI 0x423 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x44b]
---
0x77 DUP1
0x78 PUSH4 0x34d24bff
0x7d EQ
0x7e PUSH2 0x44b
0x81 JUMPI
---
0x78: V38 = 0x34d24bff
0x7d: V39 = EQ 0x34d24bff V10
0x7e: V40 = 0x44b
0x81: JUMPI 0x44b V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x4b6]
---
0x82 DUP1
0x83 PUSH4 0x3cc08a46
0x88 EQ
0x89 PUSH2 0x4b6
0x8c JUMPI
---
0x83: V41 = 0x3cc08a46
0x88: V42 = EQ 0x3cc08a46 V10
0x89: V43 = 0x4b6
0x8c: JUMPI 0x4b6 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x578]
---
0x8d DUP1
0x8e PUSH4 0x41c0e1b5
0x93 EQ
0x94 PUSH2 0x578
0x97 JUMPI
---
0x8e: V44 = 0x41c0e1b5
0x93: V45 = EQ 0x41c0e1b5 V10
0x94: V46 = 0x578
0x97: JUMPI 0x578 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x596]
---
0x98 DUP1
0x99 PUSH4 0x63ee7c8d
0x9e EQ
0x9f PUSH2 0x596
0xa2 JUMPI
---
0x99: V47 = 0x63ee7c8d
0x9e: V48 = EQ 0x63ee7c8d V10
0x9f: V49 = 0x596
0xa2: JUMPI 0x596 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x59f]
---
0xa3 DUP1
0xa4 PUSH4 0x6958420b
0xa9 EQ
0xaa PUSH2 0x59f
0xad JUMPI
---
0xa4: V50 = 0x6958420b
0xa9: V51 = EQ 0x6958420b V10
0xaa: V52 = 0x59f
0xad: JUMPI 0x59f V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x60f]
---
0xae DUP1
0xaf PUSH4 0x6fd63728
0xb4 EQ
0xb5 PUSH2 0x60f
0xb8 JUMPI
---
0xaf: V53 = 0x6fd63728
0xb4: V54 = EQ 0x6fd63728 V10
0xb5: V55 = 0x60f
0xb8: JUMPI 0x60f V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x618]
---
0xb9 DUP1
0xba PUSH4 0x95a5dfc0
0xbf EQ
0xc0 PUSH2 0x618
0xc3 JUMPI
---
0xba: V56 = 0x95a5dfc0
0xbf: V57 = EQ 0x95a5dfc0 V10
0xc0: V58 = 0x618
0xc3: JUMPI 0x618 V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x686]
---
0xc4 DUP1
0xc5 PUSH4 0x97a993aa
0xca EQ
0xcb PUSH2 0x686
0xce JUMPI
---
0xc5: V59 = 0x97a993aa
0xca: V60 = EQ 0x97a993aa V10
0xcb: V61 = 0x686
0xce: JUMPI 0x686 V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x69e]
---
0xcf DUP1
0xd0 PUSH4 0x9e05c118
0xd5 EQ
0xd6 PUSH2 0x69e
0xd9 JUMPI
---
0xd0: V62 = 0x9e05c118
0xd5: V63 = EQ 0x9e05c118 V10
0xd6: V64 = 0x69e
0xd9: JUMPI 0x69e V63
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0xcf]
Successors: [0xe5, 0x6ab]
---
0xda DUP1
0xdb PUSH4 0xa035b1fe
0xe0 EQ
0xe1 PUSH2 0x6ab
0xe4 JUMPI
---
0xdb: V65 = 0xa035b1fe
0xe0: V66 = EQ 0xa035b1fe V10
0xe1: V67 = 0x6ab
0xe4: JUMPI 0x6ab V66
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe5
[0xe5:0xef]
---
Predecessors: [0xda]
Successors: [0xf0, 0x6b4]
---
0xe5 DUP1
0xe6 PUSH4 0xba491b78
0xeb EQ
0xec PUSH2 0x6b4
0xef JUMPI
---
0xe6: V68 = 0xba491b78
0xeb: V69 = EQ 0xba491b78 V10
0xec: V70 = 0x6b4
0xef: JUMPI 0x6b4 V69
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xf0
[0xf0:0xfa]
---
Predecessors: [0xe5]
Successors: [0xfb, 0x76a]
---
0xf0 DUP1
0xf1 PUSH4 0xceb98dc7
0xf6 EQ
0xf7 PUSH2 0x76a
0xfa JUMPI
---
0xf1: V71 = 0xceb98dc7
0xf6: V72 = EQ 0xceb98dc7 V10
0xf7: V73 = 0x76a
0xfa: JUMPI 0x76a V72
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xfb
[0xfb:0x105]
---
Predecessors: [0xf0]
Successors: [0x106, 0x788]
---
0xfb DUP1
0xfc PUSH4 0xdb8d55f1
0x101 EQ
0x102 PUSH2 0x788
0x105 JUMPI
---
0xfc: V74 = 0xdb8d55f1
0x101: V75 = EQ 0xdb8d55f1 V10
0x102: V76 = 0x788
0x105: JUMPI 0x788 V75
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x106
[0x106:0x110]
---
Predecessors: [0xfb]
Successors: [0x111, 0x7a6]
---
0x106 DUP1
0x107 PUSH4 0xdc3ef685
0x10c EQ
0x10d PUSH2 0x7a6
0x110 JUMPI
---
0x107: V77 = 0xdc3ef685
0x10c: V78 = EQ 0xdc3ef685 V10
0x10d: V79 = 0x7a6
0x110: JUMPI 0x7a6 V78
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x111
[0x111:0x11b]
---
Predecessors: [0x106]
Successors: [0x11c, 0x7af]
---
0x111 DUP1
0x112 PUSH4 0xde0d0850
0x117 EQ
0x118 PUSH2 0x7af
0x11b JUMPI
---
0x112: V80 = 0xde0d0850
0x117: V81 = EQ 0xde0d0850 V10
0x118: V82 = 0x7af
0x11b: JUMPI 0x7af V81
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x11c
[0x11c:0x126]
---
Predecessors: [0x111]
Successors: [0x127, 0x7b8]
---
0x11c DUP1
0x11d PUSH4 0xea70b4af
0x122 EQ
0x123 PUSH2 0x7b8
0x126 JUMPI
---
0x11d: V83 = 0xea70b4af
0x122: V84 = EQ 0xea70b4af V10
0x123: V85 = 0x7b8
0x126: JUMPI 0x7b8 V84
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x127
[0x127:0x131]
---
Predecessors: [0x11c]
Successors: [0x132, 0x7cc]
---
0x127 DUP1
0x128 PUSH4 0xfe25e00a
0x12d EQ
0x12e PUSH2 0x7cc
0x131 JUMPI
---
0x128: V86 = 0xfe25e00a
0x12d: V87 = EQ 0xfe25e00a V10
0x12e: V88 = 0x7cc
0x131: JUMPI 0x7cc V87
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x132
[0x132:0x133]
---
Predecessors: [0x0, 0x127, 0x2bf, 0x76a, 0x9f3, 0xbd7, 0xd19, 0xdff, 0xe44, 0x105b, 0x11ee, 0x1347, 0x1399]
Successors: []
---
0x132 JUMPDEST
0x133 STOP
---
0x132: JUMPDEST 
0x133: STOP 
---
Entry stack: [V10, 0x132, V405, V391, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V405, V391, S3, S2, S1, S0]

================================

Block 0x134
[0x134:0x179]
---
Predecessors: [0xb]
Successors: [0x7de]
---
0x134 JUMPDEST
0x135 PUSH2 0x7de
0x138 PUSH1 0x4
0x13a CALLDATALOAD
0x13b PUSH1 0x8
0x13d PUSH1 0x20
0x13f MSTORE
0x140 PUSH1 0x0
0x142 SWAP1
0x143 DUP2
0x144 MSTORE
0x145 PUSH1 0x40
0x147 SWAP1
0x148 SHA3
0x149 PUSH1 0x1
0x14b DUP2
0x14c ADD
0x14d SLOAD
0x14e DUP2
0x14f SLOAD
0x150 PUSH1 0x2
0x152 DUP4
0x153 ADD
0x154 SLOAD
0x155 PUSH1 0x3
0x157 DUP5
0x158 ADD
0x159 SLOAD
0x15a PUSH1 0x4
0x15c DUP6
0x15d ADD
0x15e SLOAD
0x15f PUSH1 0x5
0x161 SWAP6
0x162 SWAP1
0x163 SWAP6
0x164 ADD
0x165 SLOAD
0x166 PUSH1 0x1
0x168 PUSH1 0xa0
0x16a PUSH1 0x2
0x16c EXP
0x16d SUB
0x16e SWAP4
0x16f SWAP1
0x170 SWAP4
0x171 AND
0x172 SWAP5
0x173 SWAP2
0x174 SWAP3
0x175 SWAP1
0x176 SWAP2
0x177 SWAP1
0x178 DUP7
0x179 JUMP
---
0x134: JUMPDEST 
0x135: V89 = 0x7de
0x138: V90 = 0x4
0x13a: V91 = CALLDATALOAD 0x4
0x13b: V92 = 0x8
0x13d: V93 = 0x20
0x13f: M[0x20] = 0x8
0x140: V94 = 0x0
0x144: M[0x0] = V91
0x145: V95 = 0x40
0x148: V96 = SHA3 0x0 0x40
0x149: V97 = 0x1
0x14c: V98 = ADD V96 0x1
0x14d: V99 = S[V98]
0x14f: V100 = S[V96]
0x150: V101 = 0x2
0x153: V102 = ADD V96 0x2
0x154: V103 = S[V102]
0x155: V104 = 0x3
0x158: V105 = ADD V96 0x3
0x159: V106 = S[V105]
0x15a: V107 = 0x4
0x15d: V108 = ADD V96 0x4
0x15e: V109 = S[V108]
0x15f: V110 = 0x5
0x164: V111 = ADD 0x5 V96
0x165: V112 = S[V111]
0x166: V113 = 0x1
0x168: V114 = 0xa0
0x16a: V115 = 0x2
0x16c: V116 = EXP 0x2 0xa0
0x16d: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x179: JUMP 0x7de
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7de, V118, V99, V103, V106, V109, V112]
Exit stack: [V10, 0x7de, V118, V99, V103, V106, V109, V112]

================================

Block 0x17a
[0x17a:0x18c]
---
Predecessors: [0x1f]
Successors: [0x81c]
---
0x17a JUMPDEST
0x17b PUSH2 0x81c
0x17e PUSH1 0x9
0x180 SLOAD
0x181 PUSH3 0x10000
0x185 SWAP1
0x186 DIV
0x187 PUSH2 0xffff
0x18a AND
0x18b DUP2
0x18c JUMP
---
0x17a: JUMPDEST 
0x17b: V119 = 0x81c
0x17e: V120 = 0x9
0x180: V121 = S[0x9]
0x181: V122 = 0x10000
0x186: V123 = DIV V121 0x10000
0x187: V124 = 0xffff
0x18a: V125 = AND 0xffff V123
0x18c: JUMP 0x81c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x81c, V125]
Exit stack: [V10, 0x81c, V125]

================================

Block 0x18d
[0x18d:0x1ec]
---
Predecessors: [0x2a]
Successors: [0x1ed, 0x2bf]
---
0x18d JUMPDEST
0x18e PUSH1 0x40
0x190 DUP1
0x191 MLOAD
0x192 PUSH1 0x20
0x194 PUSH1 0x4
0x196 DUP1
0x197 CALLDATALOAD
0x198 DUP1
0x199 DUP3
0x19a ADD
0x19b CALLDATALOAD
0x19c PUSH1 0x1f
0x19e DUP2
0x19f ADD
0x1a0 DUP5
0x1a1 SWAP1
0x1a2 DIV
0x1a3 DUP5
0x1a4 MUL
0x1a5 DUP6
0x1a6 ADD
0x1a7 DUP5
0x1a8 ADD
0x1a9 SWAP1
0x1aa SWAP6
0x1ab MSTORE
0x1ac DUP5
0x1ad DUP5
0x1ae MSTORE
0x1af PUSH2 0x132
0x1b2 SWAP5
0x1b3 SWAP2
0x1b4 SWAP4
0x1b5 PUSH1 0x24
0x1b7 SWAP4
0x1b8 SWAP1
0x1b9 SWAP3
0x1ba SWAP2
0x1bb DUP5
0x1bc ADD
0x1bd SWAP2
0x1be SWAP1
0x1bf DUP2
0x1c0 SWAP1
0x1c1 DUP5
0x1c2 ADD
0x1c3 DUP4
0x1c4 DUP3
0x1c5 DUP1
0x1c6 DUP3
0x1c7 DUP5
0x1c8 CALLDATACOPY
0x1c9 POP
0x1ca SWAP5
0x1cb SWAP7
0x1cc POP
0x1cd POP
0x1ce SWAP4
0x1cf CALLDATALOAD
0x1d0 SWAP4
0x1d1 POP
0x1d2 POP
0x1d3 POP
0x1d4 POP
0x1d5 PUSH1 0x0
0x1d7 SLOAD
0x1d8 PUSH1 0x1
0x1da PUSH1 0xa0
0x1dc PUSH1 0x2
0x1de EXP
0x1df SUB
0x1e0 SWAP1
0x1e1 DUP2
0x1e2 AND
0x1e3 CALLER
0x1e4 SWAP1
0x1e5 SWAP2
0x1e6 AND
0x1e7 EQ
0x1e8 ISZERO
0x1e9 PUSH2 0x2bf
0x1ec JUMPI
---
0x18d: JUMPDEST 
0x18e: V126 = 0x40
0x191: V127 = M[0x40]
0x192: V128 = 0x20
0x194: V129 = 0x4
0x197: V130 = CALLDATALOAD 0x4
0x19a: V131 = ADD 0x4 V130
0x19b: V132 = CALLDATALOAD V131
0x19c: V133 = 0x1f
0x19f: V134 = ADD V132 0x1f
0x1a2: V135 = DIV V134 0x20
0x1a4: V136 = MUL 0x20 V135
0x1a6: V137 = ADD V127 V136
0x1a8: V138 = ADD 0x20 V137
0x1ab: M[0x40] = V138
0x1ae: M[V127] = V132
0x1af: V139 = 0x132
0x1b5: V140 = 0x24
0x1bc: V141 = ADD 0x24 V130
0x1c2: V142 = ADD V127 0x20
0x1c8: CALLDATACOPY V142 V141 V132
0x1cf: V143 = CALLDATALOAD 0x24
0x1d5: V144 = 0x0
0x1d7: V145 = S[0x0]
0x1d8: V146 = 0x1
0x1da: V147 = 0xa0
0x1dc: V148 = 0x2
0x1de: V149 = EXP 0x2 0xa0
0x1df: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e2: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x1e3: V152 = CALLER
0x1e6: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x1e7: V154 = EQ V153 V151
0x1e8: V155 = ISZERO V154
0x1e9: V156 = 0x2bf
0x1ec: JUMPI 0x2bf V155
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x132, V127, V143]
Exit stack: [V10, 0x132, V127, V143]

================================

Block 0x1ed
[0x1ed:0x294]
---
Predecessors: [0x18d]
Successors: [0x295, 0x2ae]
---
0x1ed PUSH1 0x2
0x1ef PUSH1 0x9
0x1f1 PUSH1 0x0
0x1f3 PUSH2 0x100
0x1f6 EXP
0x1f7 DUP2
0x1f8 SLOAD
0x1f9 DUP2
0x1fa PUSH2 0xffff
0x1fd MUL
0x1fe NOT
0x1ff AND
0x200 SWAP1
0x201 DUP4
0x202 MUL
0x203 OR
0x204 SWAP1
0x205 SSTORE
0x206 POP
0x207 CALLER
0x208 PUSH1 0x1
0x20a PUSH1 0xa0
0x20c PUSH1 0x2
0x20e EXP
0x20f SUB
0x210 AND
0x211 DUP2
0x212 PUSH1 0x0
0x214 PUSH1 0x0
0x216 DUP1
0x217 MLOAD
0x218 PUSH1 0x20
0x21a PUSH2 0x13c3
0x21d DUP4
0x21e CODECOPY
0x21f DUP2
0x220 MLOAD
0x221 SWAP2
0x222 MSTORE
0x223 DUP6
0x224 PUSH1 0x4
0x226 PUSH1 0xb
0x228 PUSH1 0x0
0x22a SWAP1
0x22b SLOAD
0x22c SWAP1
0x22d PUSH2 0x100
0x230 EXP
0x231 SWAP1
0x232 DIV
0x233 PUSH2 0xffff
0x236 AND
0x237 PUSH1 0x0
0x239 PUSH1 0x40
0x23b MLOAD
0x23c DUP1
0x23d DUP1
0x23e PUSH1 0x20
0x240 ADD
0x241 DUP6
0x242 DUP2
0x243 MSTORE
0x244 PUSH1 0x20
0x246 ADD
0x247 DUP5
0x248 PUSH2 0xffff
0x24b AND
0x24c DUP2
0x24d MSTORE
0x24e PUSH1 0x20
0x250 ADD
0x251 DUP4
0x252 DUP2
0x253 MSTORE
0x254 PUSH1 0x20
0x256 ADD
0x257 DUP3
0x258 DUP2
0x259 SUB
0x25a DUP3
0x25b MSTORE
0x25c DUP7
0x25d DUP2
0x25e DUP2
0x25f MLOAD
0x260 DUP2
0x261 MSTORE
0x262 PUSH1 0x20
0x264 ADD
0x265 SWAP2
0x266 POP
0x267 DUP1
0x268 MLOAD
0x269 SWAP1
0x26a PUSH1 0x20
0x26c ADD
0x26d SWAP1
0x26e DUP1
0x26f DUP4
0x270 DUP4
0x271 DUP3
0x272 SWAP1
0x273 PUSH1 0x0
0x275 PUSH1 0x4
0x277 PUSH1 0x20
0x279 DUP5
0x27a PUSH1 0x1f
0x27c ADD
0x27d DIV
0x27e PUSH1 0xf
0x280 MUL
0x281 PUSH1 0x3
0x283 ADD
0x284 CALL
0x285 POP
0x286 SWAP1
0x287 POP
0x288 SWAP1
0x289 DUP2
0x28a ADD
0x28b SWAP1
0x28c PUSH1 0x1f
0x28e AND
0x28f DUP1
0x290 ISZERO
0x291 PUSH2 0x2ae
0x294 JUMPI
---
0x1ed: V157 = 0x2
0x1ef: V158 = 0x9
0x1f1: V159 = 0x0
0x1f3: V160 = 0x100
0x1f6: V161 = EXP 0x100 0x0
0x1f8: V162 = S[0x9]
0x1fa: V163 = 0xffff
0x1fd: V164 = MUL 0xffff 0x1
0x1fe: V165 = NOT 0xffff
0x1ff: V166 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000 V162
0x202: V167 = MUL 0x2 0x1
0x203: V168 = OR 0x2 V166
0x205: S[0x9] = V168
0x207: V169 = CALLER
0x208: V170 = 0x1
0x20a: V171 = 0xa0
0x20c: V172 = 0x2
0x20e: V173 = EXP 0x2 0xa0
0x20f: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x210: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x212: V176 = 0x0
0x214: V177 = 0x0
0x217: V178 = M[0x0]
0x218: V179 = 0x20
0x21a: V180 = 0x13c3
0x21e: CODECOPY 0x0 0x13c3 0x20
0x220: V181 = M[0x0]
0x222: M[0x0] = V178
0x224: V182 = 0x4
0x226: V183 = 0xb
0x228: V184 = 0x0
0x22b: V185 = S[0xb]
0x22d: V186 = 0x100
0x230: V187 = EXP 0x100 0x0
0x232: V188 = DIV V185 0x1
0x233: V189 = 0xffff
0x236: V190 = AND 0xffff V188
0x237: V191 = 0x0
0x239: V192 = 0x40
0x23b: V193 = M[0x40]
0x23e: V194 = 0x20
0x240: V195 = ADD 0x20 V193
0x243: M[V195] = 0x4
0x244: V196 = 0x20
0x246: V197 = ADD 0x20 V195
0x248: V198 = 0xffff
0x24b: V199 = AND 0xffff V190
0x24d: M[V197] = V199
0x24e: V200 = 0x20
0x250: V201 = ADD 0x20 V197
0x253: M[V201] = 0x0
0x254: V202 = 0x20
0x256: V203 = ADD 0x20 V201
0x259: V204 = SUB V203 V193
0x25b: M[V193] = V204
0x25f: V205 = M[V127]
0x261: M[V203] = V205
0x262: V206 = 0x20
0x264: V207 = ADD 0x20 V203
0x268: V208 = M[V127]
0x26a: V209 = 0x20
0x26c: V210 = ADD 0x20 V127
0x273: V211 = 0x0
0x275: V212 = 0x4
0x277: V213 = 0x20
0x27a: V214 = 0x1f
0x27c: V215 = ADD 0x1f V208
0x27d: V216 = DIV V215 0x20
0x27e: V217 = 0xf
0x280: V218 = MUL 0xf V216
0x281: V219 = 0x3
0x283: V220 = ADD 0x3 V218
0x284: V221 = CALL V220 0x4 0x0 V210 V208 V207 V208
0x28a: V222 = ADD V208 V207
0x28c: V223 = 0x1f
0x28e: V224 = AND 0x1f V208
0x290: V225 = ISZERO V224
0x291: V226 = 0x2ae
0x294: JUMPI 0x2ae V225
---
Entry stack: [V10, 0x132, V127, V143]
Stack pops: 2
Stack additions: [S1, S0, V175, S0, 0x0, V181, S1, 0x4, V190, 0x0, V193, V193, V222, V224]
Exit stack: [V10, 0x132, V127, V143, V175, V143, 0x0, V181, V127, 0x4, V190, 0x0, V193, V193, V222, V224]

================================

Block 0x295
[0x295:0x2ad]
---
Predecessors: [0x1ed]
Successors: [0x2ae]
---
0x295 DUP1
0x296 DUP3
0x297 SUB
0x298 DUP1
0x299 MLOAD
0x29a PUSH1 0x1
0x29c DUP4
0x29d PUSH1 0x20
0x29f SUB
0x2a0 PUSH2 0x100
0x2a3 EXP
0x2a4 SUB
0x2a5 NOT
0x2a6 AND
0x2a7 DUP2
0x2a8 MSTORE
0x2a9 PUSH1 0x20
0x2ab ADD
0x2ac SWAP2
0x2ad POP
---
0x297: V227 = SUB V222 V224
0x299: V228 = M[V227]
0x29a: V229 = 0x1
0x29d: V230 = 0x20
0x29f: V231 = SUB 0x20 V224
0x2a0: V232 = 0x100
0x2a3: V233 = EXP 0x100 V231
0x2a4: V234 = SUB V233 0x1
0x2a5: V235 = NOT V234
0x2a6: V236 = AND V235 V228
0x2a8: M[V227] = V236
0x2a9: V237 = 0x20
0x2ab: V238 = ADD 0x20 V227
---
Entry stack: [V10, 0x132, V127, V143, V175, V143, 0x0, V181, V127, 0x4, V190, 0x0, V193, V193, V222, V224]
Stack pops: 2
Stack additions: [V238, S0]
Exit stack: [V10, 0x132, V127, V143, V175, V143, 0x0, V181, V127, 0x4, V190, 0x0, V193, V193, V238, V224]

================================

Block 0x2ae
[0x2ae:0x2be]
---
Predecessors: [0x1ed, 0x295]
Successors: [0x2bf]
---
0x2ae JUMPDEST
0x2af POP
0x2b0 SWAP6
0x2b1 POP
0x2b2 POP
0x2b3 POP
0x2b4 POP
0x2b5 POP
0x2b6 POP
0x2b7 PUSH1 0x40
0x2b9 MLOAD
0x2ba DUP1
0x2bb SWAP2
0x2bc SUB
0x2bd SWAP1
0x2be LOG4
---
0x2ae: JUMPDEST 
0x2b7: V239 = 0x40
0x2b9: V240 = M[0x40]
0x2bc: V241 = SUB S1 V240
0x2be: LOG V240 V241 V181 0x0 V143 V175
---
Entry stack: [V10, 0x132, V127, V143, V175, V143, 0x0, V181, V127, 0x4, V190, 0x0, V193, V193, S1, V224]
Stack pops: 12
Stack additions: []
Exit stack: [V10, 0x132, V127, V143]

================================

Block 0x2bf
[0x2bf:0x2c2]
---
Predecessors: [0x18d, 0x2ae]
Successors: [0x132]
---
0x2bf JUMPDEST
0x2c0 POP
0x2c1 POP
0x2c2 JUMP
---
0x2bf: JUMPDEST 
0x2c2: JUMP 0x132
---
Entry stack: [V10, 0x132, V127, V143]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c3
[0x2c3:0x2d4]
---
Predecessors: [0x35]
Successors: [0x834]
---
0x2c3 JUMPDEST
0x2c4 PUSH2 0x834
0x2c7 PUSH1 0x0
0x2c9 SLOAD
0x2ca PUSH1 0x1
0x2cc PUSH1 0xa0
0x2ce PUSH1 0x2
0x2d0 EXP
0x2d1 SUB
0x2d2 AND
0x2d3 DUP2
0x2d4 JUMP
---
0x2c3: JUMPDEST 
0x2c4: V242 = 0x834
0x2c7: V243 = 0x0
0x2c9: V244 = S[0x0]
0x2ca: V245 = 0x1
0x2cc: V246 = 0xa0
0x2ce: V247 = 0x2
0x2d0: V248 = EXP 0x2 0xa0
0x2d1: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d2: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x2d4: JUMP 0x834
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x834, V250]
Exit stack: [V10, 0x834, V250]

================================

Block 0x2d5
[0x2d5:0x2dd]
---
Predecessors: [0x40]
Successors: [0x851]
---
0x2d5 JUMPDEST
0x2d6 PUSH2 0x851
0x2d9 PUSH1 0x2
0x2db SLOAD
0x2dc DUP2
0x2dd JUMP
---
0x2d5: JUMPDEST 
0x2d6: V251 = 0x851
0x2d9: V252 = 0x2
0x2db: V253 = S[0x2]
0x2dd: JUMP 0x851
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x851, V253]
Exit stack: [V10, 0x851, V253]

================================

Block 0x2de
[0x2de:0x342]
---
Predecessors: [0x4b]
Successors: [0x343, 0x9fc]
---
0x2de JUMPDEST
0x2df PUSH1 0x40
0x2e1 DUP1
0x2e2 MLOAD
0x2e3 PUSH1 0x20
0x2e5 PUSH1 0x4
0x2e7 PUSH1 0x24
0x2e9 DUP1
0x2ea CALLDATALOAD
0x2eb DUP3
0x2ec DUP2
0x2ed ADD
0x2ee CALLDATALOAD
0x2ef PUSH1 0x1f
0x2f1 DUP2
0x2f2 ADD
0x2f3 DUP6
0x2f4 SWAP1
0x2f5 DIV
0x2f6 DUP6
0x2f7 MUL
0x2f8 DUP7
0x2f9 ADD
0x2fa DUP6
0x2fb ADD
0x2fc SWAP1
0x2fd SWAP7
0x2fe MSTORE
0x2ff DUP6
0x300 DUP6
0x301 MSTORE
0x302 PUSH2 0x132
0x305 SWAP6
0x306 DUP4
0x307 CALLDATALOAD
0x308 SWAP6
0x309 SWAP4
0x30a SWAP5
0x30b PUSH1 0x44
0x30d SWAP5
0x30e SWAP4
0x30f SWAP3
0x310 SWAP1
0x311 SWAP3
0x312 ADD
0x313 SWAP2
0x314 DUP2
0x315 SWAP1
0x316 DUP5
0x317 ADD
0x318 DUP4
0x319 DUP3
0x31a DUP1
0x31b DUP3
0x31c DUP5
0x31d CALLDATACOPY
0x31e POP
0x31f SWAP5
0x320 SWAP7
0x321 POP
0x322 POP
0x323 SWAP4
0x324 CALLDATALOAD
0x325 SWAP4
0x326 POP
0x327 POP
0x328 PUSH1 0x64
0x32a CALLDATALOAD
0x32b SWAP2
0x32c POP
0x32d POP
0x32e PUSH1 0x9
0x330 SLOAD
0x331 PUSH1 0x0
0x333 SWAP1
0x334 DUP2
0x335 SWAP1
0x336 DUP2
0x337 SWAP1
0x338 PUSH2 0xffff
0x33b AND
0x33c PUSH1 0x1
0x33e EQ
0x33f PUSH2 0x9fc
0x342 JUMPI
---
0x2de: JUMPDEST 
0x2df: V254 = 0x40
0x2e2: V255 = M[0x40]
0x2e3: V256 = 0x20
0x2e5: V257 = 0x4
0x2e7: V258 = 0x24
0x2ea: V259 = CALLDATALOAD 0x24
0x2ed: V260 = ADD V259 0x4
0x2ee: V261 = CALLDATALOAD V260
0x2ef: V262 = 0x1f
0x2f2: V263 = ADD V261 0x1f
0x2f5: V264 = DIV V263 0x20
0x2f7: V265 = MUL 0x20 V264
0x2f9: V266 = ADD V255 V265
0x2fb: V267 = ADD 0x20 V266
0x2fe: M[0x40] = V267
0x301: M[V255] = V261
0x302: V268 = 0x132
0x307: V269 = CALLDATALOAD 0x4
0x30b: V270 = 0x44
0x312: V271 = ADD 0x24 V259
0x317: V272 = ADD V255 0x20
0x31d: CALLDATACOPY V272 V271 V261
0x324: V273 = CALLDATALOAD 0x44
0x328: V274 = 0x64
0x32a: V275 = CALLDATALOAD 0x64
0x32e: V276 = 0x9
0x330: V277 = S[0x9]
0x331: V278 = 0x0
0x338: V279 = 0xffff
0x33b: V280 = AND 0xffff V277
0x33c: V281 = 0x1
0x33e: V282 = EQ 0x1 V280
0x33f: V283 = 0x9fc
0x342: JUMPI 0x9fc V282
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x132, V269, V255, V273, V275, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x132, V269, V255, V273, V275, 0x0, 0x0, 0x0]

================================

Block 0x343
[0x343:0x37a]
---
Predecessors: [0x2de]
Successors: [0x37b]
---
0x343 PUSH1 0x40
0x345 DUP1
0x346 MLOAD
0x347 DUP1
0x348 DUP3
0x349 ADD
0x34a SWAP1
0x34b SWAP2
0x34c MSTORE
0x34d PUSH1 0xb
0x34f DUP2
0x350 MSTORE
0x351 PUSH32 0x73746174757320213d2031000000000000000000000000000000000000000000
0x372 PUSH1 0x20
0x374 DUP3
0x375 ADD
0x376 MSTORE
0x377 PUSH2 0xa49
0x37a SWAP1
---
0x343: V284 = 0x40
0x346: V285 = M[0x40]
0x349: V286 = ADD 0x40 V285
0x34c: M[0x40] = V286
0x34d: V287 = 0xb
0x350: M[V285] = 0xb
0x351: V288 = 0x73746174757320213d2031000000000000000000000000000000000000000000
0x372: V289 = 0x20
0x375: V290 = ADD V285 0x20
0x376: M[V290] = 0x73746174757320213d2031000000000000000000000000000000000000000000
0x377: V291 = 0xa49
---
Entry stack: [V10, 0x132, V269, V255, V273, V275, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xa49, V285]
Exit stack: [V10, 0x132, V269, V255, V273, V275, 0x0, 0x0, 0x0, 0xa49, V285]

================================

Block 0x37b
[0x37b:0x3e3]
---
Predecessors: [0x343, 0x53c, 0x72e, 0xa0d, 0xa61, 0xaba, 0xf65, 0x1247]
Successors: [0x3e4, 0x3fd]
---
0x37b JUMPDEST
0x37c PUSH32 0xf4fd9cc72c8d1e6f6423a3909932b355f4087ac38128a3b3e5e27782885cbb9
0x39d DUP2
0x39e PUSH1 0x40
0x3a0 MLOAD
0x3a1 DUP1
0x3a2 DUP1
0x3a3 PUSH1 0x20
0x3a5 ADD
0x3a6 DUP3
0x3a7 DUP2
0x3a8 SUB
0x3a9 DUP3
0x3aa MSTORE
0x3ab DUP4
0x3ac DUP2
0x3ad DUP2
0x3ae MLOAD
0x3af DUP2
0x3b0 MSTORE
0x3b1 PUSH1 0x20
0x3b3 ADD
0x3b4 SWAP2
0x3b5 POP
0x3b6 DUP1
0x3b7 MLOAD
0x3b8 SWAP1
0x3b9 PUSH1 0x20
0x3bb ADD
0x3bc SWAP1
0x3bd DUP1
0x3be DUP4
0x3bf DUP4
0x3c0 DUP3
0x3c1 SWAP1
0x3c2 PUSH1 0x0
0x3c4 PUSH1 0x4
0x3c6 PUSH1 0x20
0x3c8 DUP5
0x3c9 PUSH1 0x1f
0x3cb ADD
0x3cc DIV
0x3cd PUSH1 0xf
0x3cf MUL
0x3d0 PUSH1 0x3
0x3d2 ADD
0x3d3 CALL
0x3d4 POP
0x3d5 SWAP1
0x3d6 POP
0x3d7 SWAP1
0x3d8 DUP2
0x3d9 ADD
0x3da SWAP1
0x3db PUSH1 0x1f
0x3dd AND
0x3de DUP1
0x3df ISZERO
0x3e0 PUSH2 0x3fd
0x3e3 JUMPI
---
0x37b: JUMPDEST 
0x37c: V292 = 0xf4fd9cc72c8d1e6f6423a3909932b355f4087ac38128a3b3e5e27782885cbb9
0x39e: V293 = 0x40
0x3a0: V294 = M[0x40]
0x3a3: V295 = 0x20
0x3a5: V296 = ADD 0x20 V294
0x3a8: V297 = SUB V296 V294
0x3aa: M[V294] = V297
0x3ae: V298 = M[S0]
0x3b0: M[V296] = V298
0x3b1: V299 = 0x20
0x3b3: V300 = ADD 0x20 V296
0x3b7: V301 = M[S0]
0x3b9: V302 = 0x20
0x3bb: V303 = ADD 0x20 S0
0x3c2: V304 = 0x0
0x3c4: V305 = 0x4
0x3c6: V306 = 0x20
0x3c9: V307 = 0x1f
0x3cb: V308 = ADD 0x1f V301
0x3cc: V309 = DIV V308 0x20
0x3cd: V310 = 0xf
0x3cf: V311 = MUL 0xf V309
0x3d0: V312 = 0x3
0x3d2: V313 = ADD 0x3 V311
0x3d3: V314 = CALL V313 0x4 0x0 V303 V301 V300 V301
0x3d9: V315 = ADD V301 V300
0x3db: V316 = 0x1f
0x3dd: V317 = AND 0x1f V301
0x3df: V318 = ISZERO V317
0x3e0: V319 = 0x3fd
0x3e3: JUMPI 0x3fd V318
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, {0xa49, 0xe32, 0x108c, 0x1283}, S0]
Stack pops: 1
Stack additions: [S0, 0xf4fd9cc72c8d1e6f6423a3909932b355f4087ac38128a3b3e5e27782885cbb9, S0, V294, V294, V315, V317]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, {0xa49, 0xe32, 0x108c, 0x1283}, S0, 0xf4fd9cc72c8d1e6f6423a3909932b355f4087ac38128a3b3e5e27782885cbb9, S0, V294, V294, V315, V317]

================================

Block 0x3e4
[0x3e4:0x3fc]
---
Predecessors: [0x37b]
Successors: [0x3fd]
---
0x3e4 DUP1
0x3e5 DUP3
0x3e6 SUB
0x3e7 DUP1
0x3e8 MLOAD
0x3e9 PUSH1 0x1
0x3eb DUP4
0x3ec PUSH1 0x20
0x3ee SUB
0x3ef PUSH2 0x100
0x3f2 EXP
0x3f3 SUB
0x3f4 NOT
0x3f5 AND
0x3f6 DUP2
0x3f7 MSTORE
0x3f8 PUSH1 0x20
0x3fa ADD
0x3fb SWAP2
0x3fc POP
---
0x3e6: V320 = SUB V315 V317
0x3e8: V321 = M[V320]
0x3e9: V322 = 0x1
0x3ec: V323 = 0x20
0x3ee: V324 = SUB 0x20 V317
0x3ef: V325 = 0x100
0x3f2: V326 = EXP 0x100 V324
0x3f3: V327 = SUB V326 0x1
0x3f4: V328 = NOT V327
0x3f5: V329 = AND V328 V321
0x3f7: M[V320] = V329
0x3f8: V330 = 0x20
0x3fa: V331 = ADD 0x20 V320
---
Entry stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8, {0xa49, 0xe32, 0x108c, 0x1283}, S6, 0xf4fd9cc72c8d1e6f6423a3909932b355f4087ac38128a3b3e5e27782885cbb9, S4, V294, V294, V315, V317]
Stack pops: 2
Stack additions: [V331, S0]
Exit stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8, {0xa49, 0xe32, 0x108c, 0x1283}, S6, 0xf4fd9cc72c8d1e6f6423a3909932b355f4087ac38128a3b3e5e27782885cbb9, S4, V294, V294, V331, V317]

================================

Block 0x3fd
[0x3fd:0x40c]
---
Predecessors: [0x37b, 0x3e4]
Successors: [0xa49, 0xe32, 0x108c, 0x1283]
---
0x3fd JUMPDEST
0x3fe POP
0x3ff SWAP3
0x400 POP
0x401 POP
0x402 POP
0x403 PUSH1 0x40
0x405 MLOAD
0x406 DUP1
0x407 SWAP2
0x408 SUB
0x409 SWAP1
0x40a LOG1
0x40b POP
0x40c JUMP
---
0x3fd: JUMPDEST 
0x403: V332 = 0x40
0x405: V333 = M[0x40]
0x408: V334 = SUB S1 V333
0x40a: LOG V333 V334 0xf4fd9cc72c8d1e6f6423a3909932b355f4087ac38128a3b3e5e27782885cbb9
0x40c: JUMP {0xa49, 0xe32, 0x108c, 0x1283}
---
Entry stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8, {0xa49, 0xe32, 0x108c, 0x1283}, S6, 0xf4fd9cc72c8d1e6f6423a3909932b355f4087ac38128a3b3e5e27782885cbb9, S4, V294, V294, S1, V317]
Stack pops: 8
Stack additions: []
Exit stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8]

================================

Block 0x40d
[0x40d:0x419]
---
Predecessors: [0x56]
Successors: [0x81c]
---
0x40d JUMPDEST
0x40e PUSH2 0x81c
0x411 PUSH1 0x9
0x413 SLOAD
0x414 PUSH2 0xffff
0x417 AND
0x418 DUP2
0x419 JUMP
---
0x40d: JUMPDEST 
0x40e: V335 = 0x81c
0x411: V336 = 0x9
0x413: V337 = S[0x9]
0x414: V338 = 0xffff
0x417: V339 = AND 0xffff V337
0x419: JUMP 0x81c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x81c, V339]
Exit stack: [V10, 0x81c, V339]

================================

Block 0x41a
[0x41a:0x422]
---
Predecessors: [0x61]
Successors: [0x851]
---
0x41a JUMPDEST
0x41b PUSH2 0x851
0x41e PUSH1 0x4
0x420 SLOAD
0x421 DUP2
0x422 JUMP
---
0x41a: JUMPDEST 
0x41b: V340 = 0x851
0x41e: V341 = 0x4
0x420: V342 = S[0x4]
0x422: JUMP 0x851
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x851, V342]
Exit stack: [V10, 0x851, V342]

================================

Block 0x423
[0x423:0x446]
---
Predecessors: [0x6c]
Successors: [0x447, 0xaf6]
---
0x423 JUMPDEST
0x424 PUSH2 0x132
0x427 PUSH1 0x4
0x429 CALLDATALOAD
0x42a PUSH1 0x0
0x42c DUP2
0x42d DUP2
0x42e MSTORE
0x42f PUSH1 0x8
0x431 PUSH1 0x20
0x433 MSTORE
0x434 PUSH1 0x40
0x436 DUP2
0x437 SHA3
0x438 PUSH1 0x1
0x43a DUP2
0x43b ADD
0x43c SLOAD
0x43d SWAP1
0x43e SWAP2
0x43f SWAP1
0x440 DUP2
0x441 EQ
0x442 ISZERO
0x443 PUSH2 0xaf6
0x446 JUMPI
---
0x423: JUMPDEST 
0x424: V343 = 0x132
0x427: V344 = 0x4
0x429: V345 = CALLDATALOAD 0x4
0x42a: V346 = 0x0
0x42e: M[0x0] = V345
0x42f: V347 = 0x8
0x431: V348 = 0x20
0x433: M[0x20] = 0x8
0x434: V349 = 0x40
0x437: V350 = SHA3 0x0 0x40
0x438: V351 = 0x1
0x43b: V352 = ADD V350 0x1
0x43c: V353 = S[V352]
0x441: V354 = EQ 0x0 V353
0x442: V355 = ISZERO V354
0x443: V356 = 0xaf6
0x446: JUMPI 0xaf6 V355
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x132, V345, V350, 0x0]
Exit stack: [V10, 0x132, V345, V350, 0x0]

================================

Block 0x447
[0x447:0x44a]
---
Predecessors: [0x423]
Successors: [0xbd7]
---
0x447 PUSH2 0xbd7
0x44a JUMP
---
0x447: V357 = 0xbd7
0x44a: JUMP 0xbd7
---
Entry stack: [V10, 0x132, V345, V350, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V345, V350, 0x0]

================================

Block 0x44b
[0x44b:0x4b1]
---
Predecessors: [0x77]
Successors: [0x4b2, 0xd1f]
---
0x44b JUMPDEST
0x44c PUSH1 0x40
0x44e DUP1
0x44f MLOAD
0x450 PUSH1 0x20
0x452 PUSH1 0x4
0x454 PUSH1 0x24
0x456 DUP1
0x457 CALLDATALOAD
0x458 DUP3
0x459 DUP2
0x45a ADD
0x45b CALLDATALOAD
0x45c PUSH1 0x1f
0x45e DUP2
0x45f ADD
0x460 DUP6
0x461 SWAP1
0x462 DIV
0x463 DUP6
0x464 MUL
0x465 DUP7
0x466 ADD
0x467 DUP6
0x468 ADD
0x469 SWAP1
0x46a SWAP7
0x46b MSTORE
0x46c DUP6
0x46d DUP6
0x46e MSTORE
0x46f PUSH2 0x132
0x472 SWAP6
0x473 DUP4
0x474 CALLDATALOAD
0x475 SWAP6
0x476 SWAP4
0x477 SWAP5
0x478 PUSH1 0x44
0x47a SWAP5
0x47b SWAP4
0x47c SWAP3
0x47d SWAP1
0x47e SWAP3
0x47f ADD
0x480 SWAP2
0x481 DUP2
0x482 SWAP1
0x483 DUP5
0x484 ADD
0x485 DUP4
0x486 DUP3
0x487 DUP1
0x488 DUP3
0x489 DUP5
0x48a CALLDATACOPY
0x48b POP
0x48c SWAP5
0x48d SWAP7
0x48e POP
0x48f POP
0x490 SWAP4
0x491 CALLDATALOAD
0x492 SWAP4
0x493 POP
0x494 POP
0x495 POP
0x496 POP
0x497 PUSH1 0x0
0x499 DUP4
0x49a DUP2
0x49b MSTORE
0x49c PUSH1 0x8
0x49e PUSH1 0x20
0x4a0 MSTORE
0x4a1 PUSH1 0x40
0x4a3 DUP2
0x4a4 SHA3
0x4a5 PUSH1 0x1
0x4a7 DUP2
0x4a8 ADD
0x4a9 SLOAD
0x4aa SWAP1
0x4ab SWAP2
0x4ac EQ
0x4ad ISZERO
0x4ae PUSH2 0xd1f
0x4b1 JUMPI
---
0x44b: JUMPDEST 
0x44c: V358 = 0x40
0x44f: V359 = M[0x40]
0x450: V360 = 0x20
0x452: V361 = 0x4
0x454: V362 = 0x24
0x457: V363 = CALLDATALOAD 0x24
0x45a: V364 = ADD V363 0x4
0x45b: V365 = CALLDATALOAD V364
0x45c: V366 = 0x1f
0x45f: V367 = ADD V365 0x1f
0x462: V368 = DIV V367 0x20
0x464: V369 = MUL 0x20 V368
0x466: V370 = ADD V359 V369
0x468: V371 = ADD 0x20 V370
0x46b: M[0x40] = V371
0x46e: M[V359] = V365
0x46f: V372 = 0x132
0x474: V373 = CALLDATALOAD 0x4
0x478: V374 = 0x44
0x47f: V375 = ADD 0x24 V363
0x484: V376 = ADD V359 0x20
0x48a: CALLDATACOPY V376 V375 V365
0x491: V377 = CALLDATALOAD 0x44
0x497: V378 = 0x0
0x49b: M[0x0] = V373
0x49c: V379 = 0x8
0x49e: V380 = 0x20
0x4a0: M[0x20] = 0x8
0x4a1: V381 = 0x40
0x4a4: V382 = SHA3 0x0 0x40
0x4a5: V383 = 0x1
0x4a8: V384 = ADD V382 0x1
0x4a9: V385 = S[V384]
0x4ac: V386 = EQ 0x0 V385
0x4ad: V387 = ISZERO V386
0x4ae: V388 = 0xd1f
0x4b1: JUMPI 0xd1f V387
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x132, V373, V359, V377, V382]
Exit stack: [V10, 0x132, V373, V359, V377, V382]

================================

Block 0x4b2
[0x4b2:0x4b5]
---
Predecessors: [0x44b]
Successors: [0xd19]
---
0x4b2 PUSH2 0xd19
0x4b5 JUMP
---
0x4b2: V389 = 0xd19
0x4b5: JUMP 0xd19
---
Entry stack: [V10, 0x132, V373, V359, V377, V382]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V373, V359, V377, V382]

================================

Block 0x4b6
[0x4b6:0x523]
---
Predecessors: [0x82]
Successors: [0x524, 0xdff]
---
0x4b6 JUMPDEST
0x4b7 PUSH1 0x40
0x4b9 DUP1
0x4ba MLOAD
0x4bb PUSH1 0x20
0x4bd PUSH1 0x4
0x4bf PUSH1 0x24
0x4c1 DUP1
0x4c2 CALLDATALOAD
0x4c3 DUP3
0x4c4 DUP2
0x4c5 ADD
0x4c6 CALLDATALOAD
0x4c7 PUSH1 0x1f
0x4c9 DUP2
0x4ca ADD
0x4cb DUP6
0x4cc SWAP1
0x4cd DIV
0x4ce DUP6
0x4cf MUL
0x4d0 DUP7
0x4d1 ADD
0x4d2 DUP6
0x4d3 ADD
0x4d4 SWAP1
0x4d5 SWAP7
0x4d6 MSTORE
0x4d7 DUP6
0x4d8 DUP6
0x4d9 MSTORE
0x4da PUSH2 0x132
0x4dd SWAP6
0x4de DUP4
0x4df CALLDATALOAD
0x4e0 SWAP6
0x4e1 SWAP4
0x4e2 SWAP5
0x4e3 PUSH1 0x44
0x4e5 SWAP5
0x4e6 SWAP4
0x4e7 SWAP3
0x4e8 SWAP1
0x4e9 SWAP3
0x4ea ADD
0x4eb SWAP2
0x4ec DUP2
0x4ed SWAP1
0x4ee DUP5
0x4ef ADD
0x4f0 DUP4
0x4f1 DUP3
0x4f2 DUP1
0x4f3 DUP3
0x4f4 DUP5
0x4f5 CALLDATACOPY
0x4f6 POP
0x4f7 SWAP5
0x4f8 SWAP7
0x4f9 POP
0x4fa POP
0x4fb SWAP4
0x4fc CALLDATALOAD
0x4fd SWAP4
0x4fe POP
0x4ff POP
0x500 PUSH1 0x64
0x502 CALLDATALOAD
0x503 SWAP2
0x504 POP
0x505 POP
0x506 PUSH1 0x84
0x508 CALLDATALOAD
0x509 PUSH1 0xa4
0x50b CALLDATALOAD
0x50c PUSH1 0x0
0x50e SLOAD
0x50f PUSH1 0x1
0x511 PUSH1 0xa0
0x513 PUSH1 0x2
0x515 EXP
0x516 SUB
0x517 SWAP1
0x518 DUP2
0x519 AND
0x51a CALLER
0x51b SWAP1
0x51c SWAP2
0x51d AND
0x51e EQ
0x51f ISZERO
0x520 PUSH2 0xdff
0x523 JUMPI
---
0x4b6: JUMPDEST 
0x4b7: V390 = 0x40
0x4ba: V391 = M[0x40]
0x4bb: V392 = 0x20
0x4bd: V393 = 0x4
0x4bf: V394 = 0x24
0x4c2: V395 = CALLDATALOAD 0x24
0x4c5: V396 = ADD V395 0x4
0x4c6: V397 = CALLDATALOAD V396
0x4c7: V398 = 0x1f
0x4ca: V399 = ADD V397 0x1f
0x4cd: V400 = DIV V399 0x20
0x4cf: V401 = MUL 0x20 V400
0x4d1: V402 = ADD V391 V401
0x4d3: V403 = ADD 0x20 V402
0x4d6: M[0x40] = V403
0x4d9: M[V391] = V397
0x4da: V404 = 0x132
0x4df: V405 = CALLDATALOAD 0x4
0x4e3: V406 = 0x44
0x4ea: V407 = ADD 0x24 V395
0x4ef: V408 = ADD V391 0x20
0x4f5: CALLDATACOPY V408 V407 V397
0x4fc: V409 = CALLDATALOAD 0x44
0x500: V410 = 0x64
0x502: V411 = CALLDATALOAD 0x64
0x506: V412 = 0x84
0x508: V413 = CALLDATALOAD 0x84
0x509: V414 = 0xa4
0x50b: V415 = CALLDATALOAD 0xa4
0x50c: V416 = 0x0
0x50e: V417 = S[0x0]
0x50f: V418 = 0x1
0x511: V419 = 0xa0
0x513: V420 = 0x2
0x515: V421 = EXP 0x2 0xa0
0x516: V422 = SUB 0x10000000000000000000000000000000000000000 0x1
0x519: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x51a: V424 = CALLER
0x51d: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x51e: V426 = EQ V425 V423
0x51f: V427 = ISZERO V426
0x520: V428 = 0xdff
0x523: JUMPI 0xdff V427
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x132, V405, V391, V409, V411, V413, V415]
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, V415]

================================

Block 0x524
[0x524:0x53b]
---
Predecessors: [0x4b6]
Successors: [0x53c, 0xe07]
---
0x524 PUSH1 0xb
0x526 SLOAD
0x527 PUSH3 0x10000
0x52b SWAP1
0x52c DIV
0x52d PUSH2 0xffff
0x530 SWAP1
0x531 DUP2
0x532 AND
0x533 SWAP1
0x534 DUP5
0x535 AND
0x536 GT
0x537 ISZERO
0x538 PUSH2 0xe07
0x53b JUMPI
---
0x524: V429 = 0xb
0x526: V430 = S[0xb]
0x527: V431 = 0x10000
0x52c: V432 = DIV V430 0x10000
0x52d: V433 = 0xffff
0x532: V434 = AND 0xffff V432
0x535: V435 = AND V411 0xffff
0x536: V436 = GT V435 V434
0x537: V437 = ISZERO V436
0x538: V438 = 0xe07
0x53b: JUMPI 0xe07 V437
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, V415]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, V415]

================================

Block 0x53c
[0x53c:0x577]
---
Predecessors: [0x524]
Successors: [0x37b]
---
0x53c PUSH1 0x40
0x53e DUP1
0x53f MLOAD
0x540 DUP1
0x541 DUP3
0x542 ADD
0x543 SWAP1
0x544 SWAP2
0x545 MSTORE
0x546 PUSH1 0x15
0x548 DUP2
0x549 MSTORE
0x54a PUSH32 0x5f636f756e74203e2070656e64696e67436f756e740000000000000000000000
0x56b PUSH1 0x20
0x56d DUP3
0x56e ADD
0x56f MSTORE
0x570 PUSH2 0xe32
0x573 SWAP1
0x574 PUSH2 0x37b
0x577 JUMP
---
0x53c: V439 = 0x40
0x53f: V440 = M[0x40]
0x542: V441 = ADD 0x40 V440
0x545: M[0x40] = V441
0x546: V442 = 0x15
0x549: M[V440] = 0x15
0x54a: V443 = 0x5f636f756e74203e2070656e64696e67436f756e740000000000000000000000
0x56b: V444 = 0x20
0x56e: V445 = ADD V440 0x20
0x56f: M[V445] = 0x5f636f756e74203e2070656e64696e67436f756e740000000000000000000000
0x570: V446 = 0xe32
0x574: V447 = 0x37b
0x577: JUMP 0x37b
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, V415]
Stack pops: 0
Stack additions: [0xe32, V440]
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, V415, 0xe32, V440]

================================

Block 0x578
[0x578:0x58a]
---
Predecessors: [0x8d]
Successors: [0x58b, 0xe37]
---
0x578 JUMPDEST
0x579 PUSH2 0x132
0x57c PUSH1 0x5
0x57e SLOAD
0x57f PUSH3 0xed4e00
0x583 ADD
0x584 TIMESTAMP
0x585 GT
0x586 ISZERO
0x587 PUSH2 0xe37
0x58a JUMPI
---
0x578: JUMPDEST 
0x579: V448 = 0x132
0x57c: V449 = 0x5
0x57e: V450 = S[0x5]
0x57f: V451 = 0xed4e00
0x583: V452 = ADD 0xed4e00 V450
0x584: V453 = TIMESTAMP
0x585: V454 = GT V453 V452
0x586: V455 = ISZERO V454
0x587: V456 = 0xe37
0x58a: JUMPI 0xe37 V455
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x132]
Exit stack: [V10, 0x132]

================================

Block 0x58b
[0x58b:0x595]
---
Predecessors: [0x578]
Successors: []
---
0x58b CALLER
0x58c PUSH1 0x1
0x58e PUSH1 0xa0
0x590 PUSH1 0x2
0x592 EXP
0x593 SUB
0x594 AND
0x595 SELFDESTRUCT
---
0x58b: V457 = CALLER
0x58c: V458 = 0x1
0x58e: V459 = 0xa0
0x590: V460 = 0x2
0x592: V461 = EXP 0x2 0xa0
0x593: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x594: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x595: SELFDESTRUCT V463
---
Entry stack: [V10, 0x132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132]

================================

Block 0x596
[0x596:0x59e]
---
Predecessors: [0x98]
Successors: [0x851]
---
0x596 JUMPDEST
0x597 PUSH2 0x851
0x59a PUSH1 0x7
0x59c SLOAD
0x59d DUP2
0x59e JUMP
---
0x596: JUMPDEST 
0x597: V464 = 0x851
0x59a: V465 = 0x7
0x59c: V466 = S[0x7]
0x59e: JUMP 0x851
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x851, V466]
Exit stack: [V10, 0x851, V466]

================================

Block 0x59f
[0x59f:0x60a]
---
Predecessors: [0xa3]
Successors: [0x60b, 0xe81]
---
0x59f JUMPDEST
0x5a0 PUSH1 0x40
0x5a2 DUP1
0x5a3 MLOAD
0x5a4 PUSH1 0x20
0x5a6 PUSH1 0x64
0x5a8 CALLDATALOAD
0x5a9 PUSH1 0x4
0x5ab DUP2
0x5ac DUP2
0x5ad ADD
0x5ae CALLDATALOAD
0x5af PUSH1 0x1f
0x5b1 DUP2
0x5b2 ADD
0x5b3 DUP5
0x5b4 SWAP1
0x5b5 DIV
0x5b6 DUP5
0x5b7 MUL
0x5b8 DUP6
0x5b9 ADD
0x5ba DUP5
0x5bb ADD
0x5bc SWAP1
0x5bd SWAP6
0x5be MSTORE
0x5bf DUP5
0x5c0 DUP5
0x5c1 MSTORE
0x5c2 PUSH2 0x132
0x5c5 SWAP5
0x5c6 DUP2
0x5c7 CALLDATALOAD
0x5c8 SWAP5
0x5c9 PUSH1 0x24
0x5cb DUP1
0x5cc CALLDATALOAD
0x5cd SWAP6
0x5ce PUSH1 0x44
0x5d0 CALLDATALOAD
0x5d1 SWAP6
0x5d2 PUSH1 0x84
0x5d4 SWAP5
0x5d5 SWAP3
0x5d6 ADD
0x5d7 SWAP2
0x5d8 SWAP1
0x5d9 DUP2
0x5da SWAP1
0x5db DUP5
0x5dc ADD
0x5dd DUP4
0x5de DUP3
0x5df DUP1
0x5e0 DUP3
0x5e1 DUP5
0x5e2 CALLDATACOPY
0x5e3 POP
0x5e4 SWAP5
0x5e5 SWAP7
0x5e6 POP
0x5e7 POP
0x5e8 SWAP4
0x5e9 CALLDATALOAD
0x5ea SWAP4
0x5eb POP
0x5ec POP
0x5ed POP
0x5ee POP
0x5ef PUSH1 0x1
0x5f1 SLOAD
0x5f2 PUSH1 0x0
0x5f4 SWAP1
0x5f5 DUP2
0x5f6 SWAP1
0x5f7 PUSH1 0x1
0x5f9 PUSH1 0xa0
0x5fb PUSH1 0x2
0x5fd EXP
0x5fe SUB
0x5ff SWAP1
0x600 DUP2
0x601 AND
0x602 CALLER
0x603 SWAP1
0x604 SWAP2
0x605 AND
0x606 EQ
0x607 PUSH2 0xe81
0x60a JUMPI
---
0x59f: JUMPDEST 
0x5a0: V467 = 0x40
0x5a3: V468 = M[0x40]
0x5a4: V469 = 0x20
0x5a6: V470 = 0x64
0x5a8: V471 = CALLDATALOAD 0x64
0x5a9: V472 = 0x4
0x5ad: V473 = ADD 0x4 V471
0x5ae: V474 = CALLDATALOAD V473
0x5af: V475 = 0x1f
0x5b2: V476 = ADD V474 0x1f
0x5b5: V477 = DIV V476 0x20
0x5b7: V478 = MUL 0x20 V477
0x5b9: V479 = ADD V468 V478
0x5bb: V480 = ADD 0x20 V479
0x5be: M[0x40] = V480
0x5c1: M[V468] = V474
0x5c2: V481 = 0x132
0x5c7: V482 = CALLDATALOAD 0x4
0x5c9: V483 = 0x24
0x5cc: V484 = CALLDATALOAD 0x24
0x5ce: V485 = 0x44
0x5d0: V486 = CALLDATALOAD 0x44
0x5d2: V487 = 0x84
0x5d6: V488 = ADD 0x24 V471
0x5dc: V489 = ADD V468 0x20
0x5e2: CALLDATACOPY V489 V488 V474
0x5e9: V490 = CALLDATALOAD 0x84
0x5ef: V491 = 0x1
0x5f1: V492 = S[0x1]
0x5f2: V493 = 0x0
0x5f7: V494 = 0x1
0x5f9: V495 = 0xa0
0x5fb: V496 = 0x2
0x5fd: V497 = EXP 0x2 0xa0
0x5fe: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x601: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x602: V500 = CALLER
0x605: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x606: V502 = EQ V501 V499
0x607: V503 = 0xe81
0x60a: JUMPI 0xe81 V502
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x132, V482, V484, V486, V468, V490, 0x0, 0x0]
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, 0x0, 0x0]

================================

Block 0x60b
[0x60b:0x60e]
---
Predecessors: [0x59f]
Successors: [0x9f3]
---
0x60b PUSH2 0x9f3
0x60e JUMP
---
0x60b: V504 = 0x9f3
0x60e: JUMP 0x9f3
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, 0x0, 0x0]

================================

Block 0x60f
[0x60f:0x617]
---
Predecessors: [0xae]
Successors: [0x851]
---
0x60f JUMPDEST
0x610 PUSH2 0x851
0x613 PUSH1 0x6
0x615 SLOAD
0x616 DUP2
0x617 JUMP
---
0x60f: JUMPDEST 
0x610: V505 = 0x851
0x613: V506 = 0x6
0x615: V507 = S[0x6]
0x617: JUMP 0x851
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x851, V507]
Exit stack: [V10, 0x851, V507]

================================

Block 0x618
[0x618:0x663]
---
Predecessors: [0xb9]
Successors: [0x664]
---
0x618 JUMPDEST
0x619 PUSH1 0x40
0x61b DUP1
0x61c MLOAD
0x61d PUSH1 0x20
0x61f PUSH1 0x4
0x621 PUSH1 0x24
0x623 DUP1
0x624 CALLDATALOAD
0x625 DUP3
0x626 DUP2
0x627 ADD
0x628 CALLDATALOAD
0x629 PUSH1 0x1f
0x62b DUP2
0x62c ADD
0x62d DUP6
0x62e SWAP1
0x62f DIV
0x630 DUP6
0x631 MUL
0x632 DUP7
0x633 ADD
0x634 DUP6
0x635 ADD
0x636 SWAP1
0x637 SWAP7
0x638 MSTORE
0x639 DUP6
0x63a DUP6
0x63b MSTORE
0x63c PUSH2 0x132
0x63f SWAP6
0x640 DUP4
0x641 CALLDATALOAD
0x642 SWAP6
0x643 SWAP4
0x644 SWAP5
0x645 PUSH1 0x44
0x647 SWAP5
0x648 SWAP4
0x649 SWAP3
0x64a SWAP1
0x64b SWAP3
0x64c ADD
0x64d SWAP2
0x64e DUP2
0x64f SWAP1
0x650 DUP5
0x651 ADD
0x652 DUP4
0x653 DUP3
0x654 DUP1
0x655 DUP3
0x656 DUP5
0x657 CALLDATACOPY
0x658 POP
0x659 SWAP5
0x65a SWAP7
0x65b POP
0x65c POP
0x65d SWAP4
0x65e CALLDATALOAD
0x65f SWAP4
0x660 POP
0x661 POP
0x662 POP
0x663 POP
---
0x618: JUMPDEST 
0x619: V508 = 0x40
0x61c: V509 = M[0x40]
0x61d: V510 = 0x20
0x61f: V511 = 0x4
0x621: V512 = 0x24
0x624: V513 = CALLDATALOAD 0x24
0x627: V514 = ADD V513 0x4
0x628: V515 = CALLDATALOAD V514
0x629: V516 = 0x1f
0x62c: V517 = ADD V515 0x1f
0x62f: V518 = DIV V517 0x20
0x631: V519 = MUL 0x20 V518
0x633: V520 = ADD V509 V519
0x635: V521 = ADD 0x20 V520
0x638: M[0x40] = V521
0x63b: M[V509] = V515
0x63c: V522 = 0x132
0x641: V523 = CALLDATALOAD 0x4
0x645: V524 = 0x44
0x64c: V525 = ADD 0x24 V513
0x651: V526 = ADD V509 0x20
0x657: CALLDATACOPY V526 V525 V515
0x65e: V527 = CALLDATALOAD 0x44
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x132, V523, V509, V527]
Exit stack: [V10, 0x132, V523, V509, V527]

================================

Block 0x664
[0x664:0x681]
---
Predecessors: [0x618, 0xe07]
Successors: [0x682, 0x11f5]
---
0x664 JUMPDEST
0x665 PUSH1 0x0
0x667 DUP4
0x668 DUP2
0x669 MSTORE
0x66a PUSH1 0x8
0x66c PUSH1 0x20
0x66e MSTORE
0x66f PUSH1 0x40
0x671 DUP2
0x672 SHA3
0x673 PUSH1 0x1
0x675 DUP2
0x676 ADD
0x677 SLOAD
0x678 SWAP1
0x679 SWAP2
0x67a SWAP1
0x67b DUP2
0x67c EQ
0x67d ISZERO
0x67e PUSH2 0x11f5
0x681 JUMPI
---
0x664: JUMPDEST 
0x665: V528 = 0x0
0x669: M[0x0] = S2
0x66a: V529 = 0x8
0x66c: V530 = 0x20
0x66e: M[0x20] = 0x8
0x66f: V531 = 0x40
0x672: V532 = SHA3 0x0 0x40
0x673: V533 = 0x1
0x676: V534 = ADD V532 0x1
0x677: V535 = S[V534]
0x67c: V536 = EQ 0x0 V535
0x67d: V537 = ISZERO V536
0x67e: V538 = 0x11f5
0x681: JUMPI 0x11f5 V537
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S4, {0x132, 0xd58}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V532, 0x0]
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S4, {0x132, 0xd58}, S2, S1, S0, V532, 0x0]

================================

Block 0x682
[0x682:0x685]
---
Predecessors: [0x664]
Successors: [0x11ee]
---
0x682 PUSH2 0x11ee
0x685 JUMP
---
0x682: V539 = 0x11ee
0x685: JUMP 0x11ee
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, V532, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, V532, 0x0]

================================

Block 0x686
[0x686:0x69d]
---
Predecessors: [0xc4]
Successors: [0x851]
---
0x686 JUMPDEST
0x687 PUSH2 0x851
0x68a PUSH1 0x4
0x68c CALLDATALOAD
0x68d PUSH1 0xc
0x68f PUSH1 0x20
0x691 MSTORE
0x692 PUSH1 0x0
0x694 SWAP1
0x695 DUP2
0x696 MSTORE
0x697 PUSH1 0x40
0x699 SWAP1
0x69a SHA3
0x69b SLOAD
0x69c DUP2
0x69d JUMP
---
0x686: JUMPDEST 
0x687: V540 = 0x851
0x68a: V541 = 0x4
0x68c: V542 = CALLDATALOAD 0x4
0x68d: V543 = 0xc
0x68f: V544 = 0x20
0x691: M[0x20] = 0xc
0x692: V545 = 0x0
0x696: M[0x0] = V542
0x697: V546 = 0x40
0x69a: V547 = SHA3 0x0 0x40
0x69b: V548 = S[V547]
0x69d: JUMP 0x851
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x851, V548]
Exit stack: [V10, 0x851, V548]

================================

Block 0x69e
[0x69e:0x6aa]
---
Predecessors: [0xcf]
Successors: [0x81c]
---
0x69e JUMPDEST
0x69f PUSH2 0x81c
0x6a2 PUSH1 0xb
0x6a4 SLOAD
0x6a5 PUSH2 0xffff
0x6a8 AND
0x6a9 DUP2
0x6aa JUMP
---
0x69e: JUMPDEST 
0x69f: V549 = 0x81c
0x6a2: V550 = 0xb
0x6a4: V551 = S[0xb]
0x6a5: V552 = 0xffff
0x6a8: V553 = AND 0xffff V551
0x6aa: JUMP 0x81c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x81c, V553]
Exit stack: [V10, 0x81c, V553]

================================

Block 0x6ab
[0x6ab:0x6b3]
---
Predecessors: [0xda]
Successors: [0x851]
---
0x6ab JUMPDEST
0x6ac PUSH2 0x851
0x6af PUSH1 0xa
0x6b1 SLOAD
0x6b2 DUP2
0x6b3 JUMP
---
0x6ab: JUMPDEST 
0x6ac: V554 = 0x851
0x6af: V555 = 0xa
0x6b1: V556 = S[0xa]
0x6b3: JUMP 0x851
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x851, V556]
Exit stack: [V10, 0x851, V556]

================================

Block 0x6b4
[0x6b4:0x71b]
---
Predecessors: [0xe5]
Successors: [0x71c, 0xd19]
---
0x6b4 JUMPDEST
0x6b5 PUSH1 0x40
0x6b7 DUP1
0x6b8 MLOAD
0x6b9 PUSH1 0x20
0x6bb PUSH1 0x4
0x6bd PUSH1 0x24
0x6bf DUP1
0x6c0 CALLDATALOAD
0x6c1 DUP3
0x6c2 DUP2
0x6c3 ADD
0x6c4 CALLDATALOAD
0x6c5 PUSH1 0x1f
0x6c7 DUP2
0x6c8 ADD
0x6c9 DUP6
0x6ca SWAP1
0x6cb DIV
0x6cc DUP6
0x6cd MUL
0x6ce DUP7
0x6cf ADD
0x6d0 DUP6
0x6d1 ADD
0x6d2 SWAP1
0x6d3 SWAP7
0x6d4 MSTORE
0x6d5 DUP6
0x6d6 DUP6
0x6d7 MSTORE
0x6d8 PUSH2 0x132
0x6db SWAP6
0x6dc DUP4
0x6dd CALLDATALOAD
0x6de SWAP6
0x6df SWAP4
0x6e0 SWAP5
0x6e1 PUSH1 0x44
0x6e3 SWAP5
0x6e4 SWAP4
0x6e5 SWAP3
0x6e6 SWAP1
0x6e7 SWAP3
0x6e8 ADD
0x6e9 SWAP2
0x6ea DUP2
0x6eb SWAP1
0x6ec DUP5
0x6ed ADD
0x6ee DUP4
0x6ef DUP3
0x6f0 DUP1
0x6f1 DUP3
0x6f2 DUP5
0x6f3 CALLDATACOPY
0x6f4 POP
0x6f5 SWAP5
0x6f6 SWAP7
0x6f7 POP
0x6f8 POP
0x6f9 SWAP4
0x6fa CALLDATALOAD
0x6fb SWAP4
0x6fc POP
0x6fd POP
0x6fe PUSH1 0x64
0x700 CALLDATALOAD
0x701 SWAP2
0x702 POP
0x703 POP
0x704 PUSH1 0x0
0x706 SLOAD
0x707 PUSH1 0x1
0x709 PUSH1 0xa0
0x70b PUSH1 0x2
0x70d EXP
0x70e SUB
0x70f SWAP1
0x710 DUP2
0x711 AND
0x712 CALLER
0x713 SWAP1
0x714 SWAP2
0x715 AND
0x716 EQ
0x717 ISZERO
0x718 PUSH2 0xd19
0x71b JUMPI
---
0x6b4: JUMPDEST 
0x6b5: V557 = 0x40
0x6b8: V558 = M[0x40]
0x6b9: V559 = 0x20
0x6bb: V560 = 0x4
0x6bd: V561 = 0x24
0x6c0: V562 = CALLDATALOAD 0x24
0x6c3: V563 = ADD V562 0x4
0x6c4: V564 = CALLDATALOAD V563
0x6c5: V565 = 0x1f
0x6c8: V566 = ADD V564 0x1f
0x6cb: V567 = DIV V566 0x20
0x6cd: V568 = MUL 0x20 V567
0x6cf: V569 = ADD V558 V568
0x6d1: V570 = ADD 0x20 V569
0x6d4: M[0x40] = V570
0x6d7: M[V558] = V564
0x6d8: V571 = 0x132
0x6dd: V572 = CALLDATALOAD 0x4
0x6e1: V573 = 0x44
0x6e8: V574 = ADD 0x24 V562
0x6ed: V575 = ADD V558 0x20
0x6f3: CALLDATACOPY V575 V574 V564
0x6fa: V576 = CALLDATALOAD 0x44
0x6fe: V577 = 0x64
0x700: V578 = CALLDATALOAD 0x64
0x704: V579 = 0x0
0x706: V580 = S[0x0]
0x707: V581 = 0x1
0x709: V582 = 0xa0
0x70b: V583 = 0x2
0x70d: V584 = EXP 0x2 0xa0
0x70e: V585 = SUB 0x10000000000000000000000000000000000000000 0x1
0x711: V586 = AND 0xffffffffffffffffffffffffffffffffffffffff V580
0x712: V587 = CALLER
0x715: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff V587
0x716: V589 = EQ V588 V586
0x717: V590 = ISZERO V589
0x718: V591 = 0xd19
0x71b: JUMPI 0xd19 V590
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x132, V572, V558, V576, V578]
Exit stack: [V10, 0x132, V572, V558, V576, V578]

================================

Block 0x71c
[0x71c:0x72d]
---
Predecessors: [0x6b4]
Successors: [0x72e, 0x122e]
---
0x71c PUSH1 0xb
0x71e SLOAD
0x71f PUSH2 0xffff
0x722 SWAP1
0x723 DUP2
0x724 AND
0x725 SWAP1
0x726 DUP3
0x727 AND
0x728 GT
0x729 ISZERO
0x72a PUSH2 0x122e
0x72d JUMPI
---
0x71c: V592 = 0xb
0x71e: V593 = S[0xb]
0x71f: V594 = 0xffff
0x724: V595 = AND 0xffff V593
0x727: V596 = AND V578 0xffff
0x728: V597 = GT V596 V595
0x729: V598 = ISZERO V597
0x72a: V599 = 0x122e
0x72d: JUMPI 0x122e V598
---
Entry stack: [V10, 0x132, V572, V558, V576, V578]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x132, V572, V558, V576, V578]

================================

Block 0x72e
[0x72e:0x769]
---
Predecessors: [0x71c]
Successors: [0x37b]
---
0x72e PUSH1 0x40
0x730 DUP1
0x731 MLOAD
0x732 DUP1
0x733 DUP3
0x734 ADD
0x735 SWAP1
0x736 SWAP2
0x737 MSTORE
0x738 PUSH1 0x17
0x73a DUP2
0x73b MSTORE
0x73c PUSH32 0x5f636f756e74203e20617661696c61626c65436f756e74000000000000000000
0x75d PUSH1 0x20
0x75f DUP3
0x760 ADD
0x761 MSTORE
0x762 PUSH2 0x1283
0x765 SWAP1
0x766 PUSH2 0x37b
0x769 JUMP
---
0x72e: V600 = 0x40
0x731: V601 = M[0x40]
0x734: V602 = ADD 0x40 V601
0x737: M[0x40] = V602
0x738: V603 = 0x17
0x73b: M[V601] = 0x17
0x73c: V604 = 0x5f636f756e74203e20617661696c61626c65436f756e74000000000000000000
0x75d: V605 = 0x20
0x760: V606 = ADD V601 0x20
0x761: M[V606] = 0x5f636f756e74203e20617661696c61626c65436f756e74000000000000000000
0x762: V607 = 0x1283
0x766: V608 = 0x37b
0x769: JUMP 0x37b
---
Entry stack: [V10, 0x132, V572, V558, V576, V578]
Stack pops: 0
Stack additions: [0x1283, V601]
Exit stack: [V10, 0x132, V572, V558, V576, V578, 0x1283, V601]

================================

Block 0x76a
[0x76a:0x787]
---
Predecessors: [0xf0]
Successors: [0x132]
---
0x76a JUMPDEST
0x76b PUSH2 0x132
0x76e CALLER
0x76f PUSH1 0x1
0x771 PUSH1 0xa0
0x773 PUSH1 0x2
0x775 EXP
0x776 SUB
0x777 AND
0x778 PUSH1 0x0
0x77a SWAP1
0x77b DUP2
0x77c MSTORE
0x77d PUSH1 0xc
0x77f PUSH1 0x20
0x781 MSTORE
0x782 PUSH1 0x40
0x784 DUP2
0x785 SHA3
0x786 SSTORE
0x787 JUMP
---
0x76a: JUMPDEST 
0x76b: V609 = 0x132
0x76e: V610 = CALLER
0x76f: V611 = 0x1
0x771: V612 = 0xa0
0x773: V613 = 0x2
0x775: V614 = EXP 0x2 0xa0
0x776: V615 = SUB 0x10000000000000000000000000000000000000000 0x1
0x777: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff V610
0x778: V617 = 0x0
0x77c: M[0x0] = V616
0x77d: V618 = 0xc
0x77f: V619 = 0x20
0x781: M[0x20] = 0xc
0x782: V620 = 0x40
0x785: V621 = SHA3 0x0 0x40
0x786: S[V621] = 0x0
0x787: JUMP 0x132
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x788
[0x788:0x7a1]
---
Predecessors: [0xfb]
Successors: [0x7a2, 0x1375]
---
0x788 JUMPDEST
0x789 PUSH2 0x132
0x78c PUSH1 0x1
0x78e SLOAD
0x78f CALLER
0x790 PUSH1 0x1
0x792 PUSH1 0xa0
0x794 PUSH1 0x2
0x796 EXP
0x797 SUB
0x798 SWAP1
0x799 DUP2
0x79a AND
0x79b SWAP2
0x79c AND
0x79d EQ
0x79e PUSH2 0x1375
0x7a1 JUMPI
---
0x788: JUMPDEST 
0x789: V622 = 0x132
0x78c: V623 = 0x1
0x78e: V624 = S[0x1]
0x78f: V625 = CALLER
0x790: V626 = 0x1
0x792: V627 = 0xa0
0x794: V628 = 0x2
0x796: V629 = EXP 0x2 0xa0
0x797: V630 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79a: V631 = AND 0xffffffffffffffffffffffffffffffffffffffff V625
0x79c: V632 = AND V624 0xffffffffffffffffffffffffffffffffffffffff
0x79d: V633 = EQ V632 V631
0x79e: V634 = 0x1375
0x7a1: JUMPI 0x1375 V633
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x132]
Exit stack: [V10, 0x132]

================================

Block 0x7a2
[0x7a2:0x7a5]
---
Predecessors: [0x788]
Successors: [0xe44]
---
0x7a2 PUSH2 0xe44
0x7a5 JUMP
---
0x7a2: V635 = 0xe44
0x7a5: JUMP 0xe44
---
Entry stack: [V10, 0x132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132]

================================

Block 0x7a6
[0x7a6:0x7ae]
---
Predecessors: [0x106]
Successors: [0x851]
---
0x7a6 JUMPDEST
0x7a7 PUSH2 0x851
0x7aa PUSH1 0x3
0x7ac SLOAD
0x7ad DUP2
0x7ae JUMP
---
0x7a6: JUMPDEST 
0x7a7: V636 = 0x851
0x7aa: V637 = 0x3
0x7ac: V638 = S[0x3]
0x7ae: JUMP 0x851
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x851, V638]
Exit stack: [V10, 0x851, V638]

================================

Block 0x7af
[0x7af:0x7b7]
---
Predecessors: [0x111]
Successors: [0x851]
---
0x7af JUMPDEST
0x7b0 PUSH2 0x851
0x7b3 PUSH1 0x5
0x7b5 SLOAD
0x7b6 DUP2
0x7b7 JUMP
---
0x7af: JUMPDEST 
0x7b0: V639 = 0x851
0x7b3: V640 = 0x5
0x7b5: V641 = S[0x5]
0x7b7: JUMP 0x851
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x851, V641]
Exit stack: [V10, 0x851, V641]

================================

Block 0x7b8
[0x7b8:0x7cb]
---
Predecessors: [0x11c]
Successors: [0x81c]
---
0x7b8 JUMPDEST
0x7b9 PUSH2 0x81c
0x7bc PUSH1 0xb
0x7be SLOAD
0x7bf PUSH2 0xffff
0x7c2 PUSH3 0x10000
0x7c6 SWAP1
0x7c7 SWAP2
0x7c8 DIV
0x7c9 AND
0x7ca DUP2
0x7cb JUMP
---
0x7b8: JUMPDEST 
0x7b9: V642 = 0x81c
0x7bc: V643 = 0xb
0x7be: V644 = S[0xb]
0x7bf: V645 = 0xffff
0x7c2: V646 = 0x10000
0x7c8: V647 = DIV V644 0x10000
0x7c9: V648 = AND V647 0xffff
0x7cb: JUMP 0x81c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x81c, V648]
Exit stack: [V10, 0x81c, V648]

================================

Block 0x7cc
[0x7cc:0x7dd]
---
Predecessors: [0x127]
Successors: [0x834]
---
0x7cc JUMPDEST
0x7cd PUSH2 0x834
0x7d0 PUSH1 0x1
0x7d2 SLOAD
0x7d3 PUSH1 0x1
0x7d5 PUSH1 0xa0
0x7d7 PUSH1 0x2
0x7d9 EXP
0x7da SUB
0x7db AND
0x7dc DUP2
0x7dd JUMP
---
0x7cc: JUMPDEST 
0x7cd: V649 = 0x834
0x7d0: V650 = 0x1
0x7d2: V651 = S[0x1]
0x7d3: V652 = 0x1
0x7d5: V653 = 0xa0
0x7d7: V654 = 0x2
0x7d9: V655 = EXP 0x2 0xa0
0x7da: V656 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7db: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V651
0x7dd: JUMP 0x834
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x834, V657]
Exit stack: [V10, 0x834, V657]

================================

Block 0x7de
[0x7de:0x81b]
---
Predecessors: [0x134]
Successors: []
---
0x7de JUMPDEST
0x7df PUSH1 0x40
0x7e1 DUP1
0x7e2 MLOAD
0x7e3 PUSH1 0x1
0x7e5 PUSH1 0xa0
0x7e7 PUSH1 0x2
0x7e9 EXP
0x7ea SUB
0x7eb SWAP8
0x7ec SWAP1
0x7ed SWAP8
0x7ee AND
0x7ef DUP8
0x7f0 MSTORE
0x7f1 PUSH1 0x20
0x7f3 DUP8
0x7f4 ADD
0x7f5 SWAP6
0x7f6 SWAP1
0x7f7 SWAP6
0x7f8 MSTORE
0x7f9 DUP6
0x7fa DUP6
0x7fb ADD
0x7fc SWAP4
0x7fd SWAP1
0x7fe SWAP4
0x7ff MSTORE
0x800 PUSH1 0x60
0x802 DUP6
0x803 ADD
0x804 SWAP2
0x805 SWAP1
0x806 SWAP2
0x807 MSTORE
0x808 PUSH1 0x80
0x80a DUP5
0x80b ADD
0x80c MSTORE
0x80d PUSH1 0xa0
0x80f DUP4
0x810 ADD
0x811 MSTORE
0x812 MLOAD
0x813 SWAP1
0x814 DUP2
0x815 SWAP1
0x816 SUB
0x817 PUSH1 0xc0
0x819 ADD
0x81a SWAP1
0x81b RETURN
---
0x7de: JUMPDEST 
0x7df: V658 = 0x40
0x7e2: V659 = M[0x40]
0x7e3: V660 = 0x1
0x7e5: V661 = 0xa0
0x7e7: V662 = 0x2
0x7e9: V663 = EXP 0x2 0xa0
0x7ea: V664 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ee: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x7f0: M[V659] = V665
0x7f1: V666 = 0x20
0x7f4: V667 = ADD V659 0x20
0x7f8: M[V667] = V99
0x7fb: V668 = ADD 0x40 V659
0x7ff: M[V668] = V103
0x800: V669 = 0x60
0x803: V670 = ADD V659 0x60
0x807: M[V670] = V106
0x808: V671 = 0x80
0x80b: V672 = ADD V659 0x80
0x80c: M[V672] = V109
0x80d: V673 = 0xa0
0x810: V674 = ADD V659 0xa0
0x811: M[V674] = V112
0x812: V675 = M[0x40]
0x816: V676 = SUB V659 V675
0x817: V677 = 0xc0
0x819: V678 = ADD 0xc0 V676
0x81b: RETURN V675 V678
---
Entry stack: [V10, 0x7de, V118, V99, V103, V106, V109, V112]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x7de]

================================

Block 0x81c
[0x81c:0x833]
---
Predecessors: [0x17a, 0x40d, 0x69e, 0x7b8]
Successors: []
---
0x81c JUMPDEST
0x81d PUSH1 0x40
0x81f DUP1
0x820 MLOAD
0x821 PUSH2 0xffff
0x824 SWAP3
0x825 SWAP1
0x826 SWAP3
0x827 AND
0x828 DUP3
0x829 MSTORE
0x82a MLOAD
0x82b SWAP1
0x82c DUP2
0x82d SWAP1
0x82e SUB
0x82f PUSH1 0x20
0x831 ADD
0x832 SWAP1
0x833 RETURN
---
0x81c: JUMPDEST 
0x81d: V679 = 0x40
0x820: V680 = M[0x40]
0x821: V681 = 0xffff
0x827: V682 = AND 0xffff S0
0x829: M[V680] = V682
0x82a: V683 = M[0x40]
0x82e: V684 = SUB V680 V683
0x82f: V685 = 0x20
0x831: V686 = ADD 0x20 V684
0x833: RETURN V683 V686
---
Entry stack: [V10, 0x81c, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x81c]

================================

Block 0x834
[0x834:0x850]
---
Predecessors: [0x2c3, 0x7cc]
Successors: []
---
0x834 JUMPDEST
0x835 PUSH1 0x40
0x837 DUP1
0x838 MLOAD
0x839 PUSH1 0x1
0x83b PUSH1 0xa0
0x83d PUSH1 0x2
0x83f EXP
0x840 SUB
0x841 SWAP3
0x842 SWAP1
0x843 SWAP3
0x844 AND
0x845 DUP3
0x846 MSTORE
0x847 MLOAD
0x848 SWAP1
0x849 DUP2
0x84a SWAP1
0x84b SUB
0x84c PUSH1 0x20
0x84e ADD
0x84f SWAP1
0x850 RETURN
---
0x834: JUMPDEST 
0x835: V687 = 0x40
0x838: V688 = M[0x40]
0x839: V689 = 0x1
0x83b: V690 = 0xa0
0x83d: V691 = 0x2
0x83f: V692 = EXP 0x2 0xa0
0x840: V693 = SUB 0x10000000000000000000000000000000000000000 0x1
0x844: V694 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x846: M[V688] = V694
0x847: V695 = M[0x40]
0x84b: V696 = SUB V688 V695
0x84c: V697 = 0x20
0x84e: V698 = ADD 0x20 V696
0x850: RETURN V695 V698
---
Entry stack: [V10, 0x834, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x834]

================================

Block 0x851
[0x851:0x862]
---
Predecessors: [0x2d5, 0x41a, 0x596, 0x60f, 0x686, 0x6ab, 0x7a6, 0x7af]
Successors: []
---
0x851 JUMPDEST
0x852 PUSH1 0x40
0x854 DUP1
0x855 MLOAD
0x856 SWAP2
0x857 DUP3
0x858 MSTORE
0x859 MLOAD
0x85a SWAP1
0x85b DUP2
0x85c SWAP1
0x85d SUB
0x85e PUSH1 0x20
0x860 ADD
0x861 SWAP1
0x862 RETURN
---
0x851: JUMPDEST 
0x852: V699 = 0x40
0x855: V700 = M[0x40]
0x858: M[V700] = S0
0x859: V701 = M[0x40]
0x85d: V702 = SUB V700 V701
0x85e: V703 = 0x20
0x860: V704 = ADD 0x20 V702
0x862: RETURN V701 V704
---
Entry stack: [V10, 0x851, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x851]

================================

Block 0x863
[0x863:0x9c8]
---
Predecessors: [0xa9d]
Successors: [0x9c9, 0x9e2]
---
0x863 JUMPDEST
0x864 TIMESTAMP
0x865 PUSH1 0x5
0x867 PUSH1 0x0
0x869 POP
0x86a DUP2
0x86b SWAP1
0x86c SSTORE
0x86d POP
0x86e PUSH2 0x3e8
0x871 PUSH1 0x3
0x873 PUSH1 0x0
0x875 POP
0x876 SLOAD
0x877 CALLVALUE
0x878 MUL
0x879 DIV
0x87a SWAP2
0x87b POP
0x87c DUP2
0x87d CALLVALUE
0x87e SUB
0x87f SWAP1
0x880 POP
0x881 DUP2
0x882 PUSH1 0x6
0x884 PUSH1 0x0
0x886 DUP3
0x887 DUP3
0x888 DUP3
0x889 POP
0x88a SLOAD
0x88b ADD
0x88c SWAP3
0x88d POP
0x88e POP
0x88f DUP2
0x890 SWAP1
0x891 SSTORE
0x892 POP
0x893 PUSH1 0x1
0x895 PUSH1 0x7
0x897 PUSH1 0x0
0x899 DUP3
0x89a DUP3
0x89b DUP3
0x89c POP
0x89d SLOAD
0x89e ADD
0x89f SWAP3
0x8a0 POP
0x8a1 POP
0x8a2 DUP2
0x8a3 SWAP1
0x8a4 SSTORE
0x8a5 POP
0x8a6 CALLER
0x8a7 DUP4
0x8a8 PUSH1 0x0
0x8aa ADD
0x8ab PUSH1 0x0
0x8ad PUSH2 0x100
0x8b0 EXP
0x8b1 DUP2
0x8b2 SLOAD
0x8b3 DUP2
0x8b4 PUSH1 0x1
0x8b6 PUSH1 0xa0
0x8b8 PUSH1 0x2
0x8ba EXP
0x8bb SUB
0x8bc MUL
0x8bd NOT
0x8be AND
0x8bf SWAP1
0x8c0 DUP4
0x8c1 MUL
0x8c2 OR
0x8c3 SWAP1
0x8c4 SSTORE
0x8c5 POP
0x8c6 DUP1
0x8c7 DUP4
0x8c8 PUSH1 0x1
0x8ca ADD
0x8cb PUSH1 0x0
0x8cd POP
0x8ce DUP2
0x8cf SWAP1
0x8d0 SSTORE
0x8d1 POP
0x8d2 PUSH1 0x0
0x8d4 DUP4
0x8d5 PUSH1 0x3
0x8d7 ADD
0x8d8 PUSH1 0x0
0x8da POP
0x8db DUP2
0x8dc SWAP1
0x8dd SSTORE
0x8de POP
0x8df PUSH1 0x0
0x8e1 DUP4
0x8e2 PUSH1 0x4
0x8e4 ADD
0x8e5 PUSH1 0x0
0x8e7 POP
0x8e8 DUP2
0x8e9 SWAP1
0x8ea SSTORE
0x8eb POP
0x8ec PUSH1 0x0
0x8ee DUP4
0x8ef PUSH1 0x5
0x8f1 ADD
0x8f2 PUSH1 0x0
0x8f4 POP
0x8f5 DUP2
0x8f6 SWAP1
0x8f7 SSTORE
0x8f8 POP
0x8f9 DUP4
0x8fa PUSH1 0xb
0x8fc PUSH1 0x2
0x8fe DUP3
0x8ff DUP3
0x900 DUP3
0x901 SWAP1
0x902 SLOAD
0x903 SWAP1
0x904 PUSH2 0x100
0x907 EXP
0x908 SWAP1
0x909 DIV
0x90a PUSH2 0xffff
0x90d AND
0x90e ADD
0x90f SWAP3
0x910 POP
0x911 PUSH2 0x100
0x914 EXP
0x915 DUP2
0x916 SLOAD
0x917 DUP2
0x918 PUSH2 0xffff
0x91b MUL
0x91c NOT
0x91d AND
0x91e SWAP1
0x91f DUP4
0x920 MUL
0x921 OR
0x922 SWAP1
0x923 SSTORE
0x924 POP
0x925 PUSH1 0x1
0x927 PUSH1 0xc
0x929 PUSH1 0x0
0x92b POP
0x92c PUSH1 0x0
0x92e CALLER
0x92f PUSH1 0x1
0x931 PUSH1 0xa0
0x933 PUSH1 0x2
0x935 EXP
0x936 SUB
0x937 AND
0x938 DUP2
0x939 MSTORE
0x93a PUSH1 0x20
0x93c ADD
0x93d SWAP1
0x93e DUP2
0x93f MSTORE
0x940 PUSH1 0x20
0x942 ADD
0x943 PUSH1 0x0
0x945 SHA3
0x946 PUSH1 0x0
0x948 POP
0x949 DUP2
0x94a SWAP1
0x94b SSTORE
0x94c POP
0x94d CALLER
0x94e PUSH1 0x1
0x950 PUSH1 0xa0
0x952 PUSH1 0x2
0x954 EXP
0x955 SUB
0x956 AND
0x957 DUP6
0x958 DUP9
0x959 PUSH1 0x0
0x95b DUP1
0x95c MLOAD
0x95d PUSH1 0x20
0x95f PUSH2 0x13c3
0x962 DUP4
0x963 CODECOPY
0x964 DUP2
0x965 MLOAD
0x966 SWAP2
0x967 MSTORE
0x968 DUP10
0x969 PUSH1 0x1
0x96b DUP10
0x96c CALLVALUE
0x96d PUSH1 0x40
0x96f MLOAD
0x970 DUP1
0x971 DUP1
0x972 PUSH1 0x20
0x974 ADD
0x975 DUP6
0x976 DUP2
0x977 MSTORE
0x978 PUSH1 0x20
0x97a ADD
0x97b DUP5
0x97c PUSH2 0xffff
0x97f AND
0x980 DUP2
0x981 MSTORE
0x982 PUSH1 0x20
0x984 ADD
0x985 DUP4
0x986 DUP2
0x987 MSTORE
0x988 PUSH1 0x20
0x98a ADD
0x98b DUP3
0x98c DUP2
0x98d SUB
0x98e DUP3
0x98f MSTORE
0x990 DUP7
0x991 DUP2
0x992 DUP2
0x993 MLOAD
0x994 DUP2
0x995 MSTORE
0x996 PUSH1 0x20
0x998 ADD
0x999 SWAP2
0x99a POP
0x99b DUP1
0x99c MLOAD
0x99d SWAP1
0x99e PUSH1 0x20
0x9a0 ADD
0x9a1 SWAP1
0x9a2 DUP1
0x9a3 DUP4
0x9a4 DUP4
0x9a5 DUP3
0x9a6 SWAP1
0x9a7 PUSH1 0x0
0x9a9 PUSH1 0x4
0x9ab PUSH1 0x20
0x9ad DUP5
0x9ae PUSH1 0x1f
0x9b0 ADD
0x9b1 DIV
0x9b2 PUSH1 0xf
0x9b4 MUL
0x9b5 PUSH1 0x3
0x9b7 ADD
0x9b8 CALL
0x9b9 POP
0x9ba SWAP1
0x9bb POP
0x9bc SWAP1
0x9bd DUP2
0x9be ADD
0x9bf SWAP1
0x9c0 PUSH1 0x1f
0x9c2 AND
0x9c3 DUP1
0x9c4 ISZERO
0x9c5 PUSH2 0x9e2
0x9c8 JUMPI
---
0x863: JUMPDEST 
0x864: V705 = TIMESTAMP
0x865: V706 = 0x5
0x867: V707 = 0x0
0x86c: S[0x5] = V705
0x86e: V708 = 0x3e8
0x871: V709 = 0x3
0x873: V710 = 0x0
0x876: V711 = S[0x3]
0x877: V712 = CALLVALUE
0x878: V713 = MUL V712 V711
0x879: V714 = DIV V713 0x3e8
0x87d: V715 = CALLVALUE
0x87e: V716 = SUB V715 V714
0x882: V717 = 0x6
0x884: V718 = 0x0
0x88a: V719 = S[0x6]
0x88b: V720 = ADD V719 V714
0x891: S[0x6] = V720
0x893: V721 = 0x1
0x895: V722 = 0x7
0x897: V723 = 0x0
0x89d: V724 = S[0x7]
0x89e: V725 = ADD V724 0x1
0x8a4: S[0x7] = V725
0x8a6: V726 = CALLER
0x8a8: V727 = 0x0
0x8aa: V728 = ADD 0x0 V898
0x8ab: V729 = 0x0
0x8ad: V730 = 0x100
0x8b0: V731 = EXP 0x100 0x0
0x8b2: V732 = S[V728]
0x8b4: V733 = 0x1
0x8b6: V734 = 0xa0
0x8b8: V735 = 0x2
0x8ba: V736 = EXP 0x2 0xa0
0x8bb: V737 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8bc: V738 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x8bd: V739 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8be: V740 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V732
0x8c1: V741 = MUL V726 0x1
0x8c2: V742 = OR V741 V740
0x8c4: S[V728] = V742
0x8c8: V743 = 0x1
0x8ca: V744 = ADD 0x1 V898
0x8cb: V745 = 0x0
0x8d0: S[V744] = V716
0x8d2: V746 = 0x0
0x8d5: V747 = 0x3
0x8d7: V748 = ADD 0x3 V898
0x8d8: V749 = 0x0
0x8dd: S[V748] = 0x0
0x8df: V750 = 0x0
0x8e2: V751 = 0x4
0x8e4: V752 = ADD 0x4 V898
0x8e5: V753 = 0x0
0x8ea: S[V752] = 0x0
0x8ec: V754 = 0x0
0x8ef: V755 = 0x5
0x8f1: V756 = ADD 0x5 V898
0x8f2: V757 = 0x0
0x8f7: S[V756] = 0x0
0x8fa: V758 = 0xb
0x8fc: V759 = 0x2
0x902: V760 = S[0xb]
0x904: V761 = 0x100
0x907: V762 = EXP 0x100 0x2
0x909: V763 = DIV V760 0x10000
0x90a: V764 = 0xffff
0x90d: V765 = AND 0xffff V763
0x90e: V766 = ADD V765 V275
0x911: V767 = 0x100
0x914: V768 = EXP 0x100 0x2
0x916: V769 = S[0xb]
0x918: V770 = 0xffff
0x91b: V771 = MUL 0xffff 0x10000
0x91c: V772 = NOT 0xffff0000
0x91d: V773 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff V769
0x920: V774 = MUL V766 0x10000
0x921: V775 = OR V774 V773
0x923: S[0xb] = V775
0x925: V776 = 0x1
0x927: V777 = 0xc
0x929: V778 = 0x0
0x92c: V779 = 0x0
0x92e: V780 = CALLER
0x92f: V781 = 0x1
0x931: V782 = 0xa0
0x933: V783 = 0x2
0x935: V784 = EXP 0x2 0xa0
0x936: V785 = SUB 0x10000000000000000000000000000000000000000 0x1
0x937: V786 = AND 0xffffffffffffffffffffffffffffffffffffffff V780
0x939: M[0x0] = V786
0x93a: V787 = 0x20
0x93c: V788 = ADD 0x20 0x0
0x93f: M[0x20] = 0xc
0x940: V789 = 0x20
0x942: V790 = ADD 0x20 0x20
0x943: V791 = 0x0
0x945: V792 = SHA3 0x0 0x40
0x946: V793 = 0x0
0x94b: S[V792] = 0x1
0x94d: V794 = CALLER
0x94e: V795 = 0x1
0x950: V796 = 0xa0
0x952: V797 = 0x2
0x954: V798 = EXP 0x2 0xa0
0x955: V799 = SUB 0x10000000000000000000000000000000000000000 0x1
0x956: V800 = AND 0xffffffffffffffffffffffffffffffffffffffff V794
0x959: V801 = 0x0
0x95c: V802 = M[0x0]
0x95d: V803 = 0x20
0x95f: V804 = 0x13c3
0x963: CODECOPY 0x0 0x13c3 0x20
0x965: V805 = M[0x0]
0x967: M[0x0] = V802
0x969: V806 = 0x1
0x96c: V807 = CALLVALUE
0x96d: V808 = 0x40
0x96f: V809 = M[0x40]
0x972: V810 = 0x20
0x974: V811 = ADD 0x20 V809
0x977: M[V811] = 0x1
0x978: V812 = 0x20
0x97a: V813 = ADD 0x20 V811
0x97c: V814 = 0xffff
0x97f: V815 = AND 0xffff V275
0x981: M[V813] = V815
0x982: V816 = 0x20
0x984: V817 = ADD 0x20 V813
0x987: M[V817] = V807
0x988: V818 = 0x20
0x98a: V819 = ADD 0x20 V817
0x98d: V820 = SUB V819 V809
0x98f: M[V809] = V820
0x993: V821 = M[V255]
0x995: M[V819] = V821
0x996: V822 = 0x20
0x998: V823 = ADD 0x20 V819
0x99c: V824 = M[V255]
0x99e: V825 = 0x20
0x9a0: V826 = ADD 0x20 V255
0x9a7: V827 = 0x0
0x9a9: V828 = 0x4
0x9ab: V829 = 0x20
0x9ae: V830 = 0x1f
0x9b0: V831 = ADD 0x1f V824
0x9b1: V832 = DIV V831 0x20
0x9b2: V833 = 0xf
0x9b4: V834 = MUL 0xf V832
0x9b5: V835 = 0x3
0x9b7: V836 = ADD 0x3 V834
0x9b8: V837 = CALL V836 0x4 0x0 V826 V824 V823 V824
0x9be: V838 = ADD V824 V823
0x9c0: V839 = 0x1f
0x9c2: V840 = AND 0x1f V824
0x9c4: V841 = ISZERO V840
0x9c5: V842 = 0x9e2
0x9c8: JUMPI 0x9e2 V841
---
Entry stack: [V10, 0x132, V269, V255, V273, V275, V898, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V714, V716, V800, S4, S6, V805, S5, 0x1, S3, V807, V809, V809, V838, V840]
Exit stack: [V10, 0x132, V269, V255, V273, V275, V898, V714, V716, V800, V273, V269, V805, V255, 0x1, V275, V807, V809, V809, V838, V840]

================================

Block 0x9c9
[0x9c9:0x9e1]
---
Predecessors: [0x863]
Successors: [0x9e2]
---
0x9c9 DUP1
0x9ca DUP3
0x9cb SUB
0x9cc DUP1
0x9cd MLOAD
0x9ce PUSH1 0x1
0x9d0 DUP4
0x9d1 PUSH1 0x20
0x9d3 SUB
0x9d4 PUSH2 0x100
0x9d7 EXP
0x9d8 SUB
0x9d9 NOT
0x9da AND
0x9db DUP2
0x9dc MSTORE
0x9dd PUSH1 0x20
0x9df ADD
0x9e0 SWAP2
0x9e1 POP
---
0x9cb: V843 = SUB V838 V840
0x9cd: V844 = M[V843]
0x9ce: V845 = 0x1
0x9d1: V846 = 0x20
0x9d3: V847 = SUB 0x20 V840
0x9d4: V848 = 0x100
0x9d7: V849 = EXP 0x100 V847
0x9d8: V850 = SUB V849 0x1
0x9d9: V851 = NOT V850
0x9da: V852 = AND V851 V844
0x9dc: M[V843] = V852
0x9dd: V853 = 0x20
0x9df: V854 = ADD 0x20 V843
---
Entry stack: [V10, 0x132, V269, V255, V273, V275, V898, V714, V716, V800, V273, V269, V805, V255, 0x1, V275, V807, V809, V809, V838, V840]
Stack pops: 2
Stack additions: [V854, S0]
Exit stack: [V10, 0x132, V269, V255, V273, V275, V898, V714, V716, V800, V273, V269, V805, V255, 0x1, V275, V807, V809, V809, V854, V840]

================================

Block 0x9e2
[0x9e2:0x9f2]
---
Predecessors: [0x863, 0x9c9, 0xfa1]
Successors: [0x9f3]
---
0x9e2 JUMPDEST
0x9e3 POP
0x9e4 SWAP6
0x9e5 POP
0x9e6 POP
0x9e7 POP
0x9e8 POP
0x9e9 POP
0x9ea POP
0x9eb PUSH1 0x40
0x9ed MLOAD
0x9ee DUP1
0x9ef SWAP2
0x9f0 SUB
0x9f1 SWAP1
0x9f2 LOG4
---
0x9e2: JUMPDEST 
0x9eb: V855 = 0x40
0x9ed: V856 = M[0x40]
0x9f0: V857 = SUB S1 V856
0x9f2: LOG V856 V857 S8 S9 S10 S11
---
Entry stack: [V10, 0x132, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x1, 0xd}, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: []
Exit stack: [V10, 0x132, S18, S17, S16, S15, S14, S13, S12]

================================

Block 0x9f3
[0x9f3:0x9fb]
---
Predecessors: [0x60b, 0x9e2, 0xe9e, 0xeb0, 0xee5, 0xf06, 0x108c]
Successors: [0x132]
---
0x9f3 JUMPDEST
0x9f4 POP
0x9f5 POP
0x9f6 POP
0x9f7 POP
0x9f8 POP
0x9f9 POP
0x9fa POP
0x9fb JUMP
---
0x9f3: JUMPDEST 
0x9fb: JUMP S7
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V10]

================================

Block 0x9fc
[0x9fc:0xa0c]
---
Predecessors: [0x2de]
Successors: [0xa0d, 0xa4e]
---
0x9fc JUMPDEST
0x9fd PUSH1 0xa
0x9ff SLOAD
0xa00 PUSH2 0xffff
0xa03 DUP6
0xa04 AND
0xa05 MUL
0xa06 CALLVALUE
0xa07 LT
0xa08 ISZERO
0xa09 PUSH2 0xa4e
0xa0c JUMPI
---
0x9fc: JUMPDEST 
0x9fd: V858 = 0xa
0x9ff: V859 = S[0xa]
0xa00: V860 = 0xffff
0xa04: V861 = AND V275 0xffff
0xa05: V862 = MUL V861 V859
0xa06: V863 = CALLVALUE
0xa07: V864 = LT V863 V862
0xa08: V865 = ISZERO V864
0xa09: V866 = 0xa4e
0xa0c: JUMPI 0xa4e V865
---
Entry stack: [V10, 0x132, V269, V255, V273, V275, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x132, V269, V255, V273, V275, 0x0, 0x0, 0x0]

================================

Block 0xa0d
[0xa0d:0xa48]
---
Predecessors: [0x9fc]
Successors: [0x37b]
---
0xa0d PUSH1 0x40
0xa0f DUP1
0xa10 MLOAD
0xa11 DUP1
0xa12 DUP3
0xa13 ADD
0xa14 SWAP1
0xa15 SWAP2
0xa16 MSTORE
0xa17 PUSH1 0x1c
0xa19 DUP2
0xa1a MSTORE
0xa1b PUSH32 0x6d73672e76616c7565203c20287072696365202a205f636f756e742900000000
0xa3c PUSH1 0x20
0xa3e DUP3
0xa3f ADD
0xa40 MSTORE
0xa41 PUSH2 0xa49
0xa44 SWAP1
0xa45 PUSH2 0x37b
0xa48 JUMP
---
0xa0d: V867 = 0x40
0xa10: V868 = M[0x40]
0xa13: V869 = ADD 0x40 V868
0xa16: M[0x40] = V869
0xa17: V870 = 0x1c
0xa1a: M[V868] = 0x1c
0xa1b: V871 = 0x6d73672e76616c7565203c20287072696365202a205f636f756e742900000000
0xa3c: V872 = 0x20
0xa3f: V873 = ADD V868 0x20
0xa40: M[V873] = 0x6d73672e76616c7565203c20287072696365202a205f636f756e742900000000
0xa41: V874 = 0xa49
0xa45: V875 = 0x37b
0xa48: JUMP 0x37b
---
Entry stack: [V10, 0x132, V269, V255, V273, V275, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xa49, V868]
Exit stack: [V10, 0x132, V269, V255, V273, V275, 0x0, 0x0, 0x0, 0xa49, V868]

================================

Block 0xa49
[0xa49:0xa4d]
---
Predecessors: [0x3fd]
Successors: []
---
0xa49 JUMPDEST
0xa4a PUSH2 0x2
0xa4d JUMP
---
0xa49: JUMPDEST 
0xa4a: V876 = 0x2
0xa4d: THROW 
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa4e
[0xa4e:0xa60]
---
Predecessors: [0x9fc]
Successors: [0xa61, 0xa9d]
---
0xa4e JUMPDEST
0xa4f PUSH1 0xb
0xa51 SLOAD
0xa52 PUSH2 0xffff
0xa55 SWAP1
0xa56 DUP2
0xa57 AND
0xa58 SWAP1
0xa59 DUP6
0xa5a AND
0xa5b GT
0xa5c ISZERO
0xa5d PUSH2 0xa9d
0xa60 JUMPI
---
0xa4e: JUMPDEST 
0xa4f: V877 = 0xb
0xa51: V878 = S[0xb]
0xa52: V879 = 0xffff
0xa57: V880 = AND 0xffff V878
0xa5a: V881 = AND V275 0xffff
0xa5b: V882 = GT V881 V880
0xa5c: V883 = ISZERO V882
0xa5d: V884 = 0xa9d
0xa60: JUMPI 0xa9d V883
---
Entry stack: [V10, 0x132, V269, V255, V273, V275, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x132, V269, V255, V273, V275, 0x0, 0x0, 0x0]

================================

Block 0xa61
[0xa61:0xa9c]
---
Predecessors: [0xa4e]
Successors: [0x37b]
---
0xa61 PUSH1 0x40
0xa63 DUP1
0xa64 MLOAD
0xa65 DUP1
0xa66 DUP3
0xa67 ADD
0xa68 SWAP1
0xa69 SWAP2
0xa6a MSTORE
0xa6b PUSH1 0x17
0xa6d DUP2
0xa6e MSTORE
0xa6f PUSH32 0x5f636f756e74203e20617661696c61626c65436f756e74000000000000000000
0xa90 PUSH1 0x20
0xa92 DUP3
0xa93 ADD
0xa94 MSTORE
0xa95 PUSH2 0xa49
0xa98 SWAP1
0xa99 PUSH2 0x37b
0xa9c JUMP
---
0xa61: V885 = 0x40
0xa64: V886 = M[0x40]
0xa67: V887 = ADD 0x40 V886
0xa6a: M[0x40] = V887
0xa6b: V888 = 0x17
0xa6e: M[V886] = 0x17
0xa6f: V889 = 0x5f636f756e74203e20617661696c61626c65436f756e74000000000000000000
0xa90: V890 = 0x20
0xa93: V891 = ADD V886 0x20
0xa94: M[V891] = 0x5f636f756e74203e20617661696c61626c65436f756e74000000000000000000
0xa95: V892 = 0xa49
0xa99: V893 = 0x37b
0xa9c: JUMP 0x37b
---
Entry stack: [V10, 0x132, V269, V255, V273, V275, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xa49, V886]
Exit stack: [V10, 0x132, V269, V255, V273, V275, 0x0, 0x0, 0x0, 0xa49, V886]

================================

Block 0xa9d
[0xa9d:0xab9]
---
Predecessors: [0xa4e]
Successors: [0x863, 0xaba]
---
0xa9d JUMPDEST
0xa9e PUSH1 0x0
0xaa0 DUP8
0xaa1 DUP2
0xaa2 MSTORE
0xaa3 PUSH1 0x8
0xaa5 PUSH1 0x20
0xaa7 MSTORE
0xaa8 PUSH1 0x40
0xaaa DUP2
0xaab SHA3
0xaac PUSH1 0x1
0xaae DUP2
0xaaf ADD
0xab0 SLOAD
0xab1 SWAP1
0xab2 SWAP5
0xab3 POP
0xab4 GT
0xab5 ISZERO
0xab6 PUSH2 0x863
0xab9 JUMPI
---
0xa9d: JUMPDEST 
0xa9e: V894 = 0x0
0xaa2: M[0x0] = V269
0xaa3: V895 = 0x8
0xaa5: V896 = 0x20
0xaa7: M[0x20] = 0x8
0xaa8: V897 = 0x40
0xaab: V898 = SHA3 0x0 0x40
0xaac: V899 = 0x1
0xaaf: V900 = ADD V898 0x1
0xab0: V901 = S[V900]
0xab4: V902 = GT V901 0x0
0xab5: V903 = ISZERO V902
0xab6: V904 = 0x863
0xab9: JUMPI 0x863 V903
---
Entry stack: [V10, 0x132, V269, V255, V273, V275, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V898, S1, S0]
Exit stack: [V10, 0x132, V269, V255, V273, V275, V898, 0x0, 0x0]

================================

Block 0xaba
[0xaba:0xaf5]
---
Predecessors: [0xa9d]
Successors: [0x37b]
---
0xaba PUSH1 0x40
0xabc DUP1
0xabd MLOAD
0xabe DUP1
0xabf DUP3
0xac0 ADD
0xac1 SWAP1
0xac2 SWAP2
0xac3 MSTORE
0xac4 PUSH1 0xe
0xac6 DUP2
0xac7 MSTORE
0xac8 PUSH32 0x416c7265616479206c6f636b6564000000000000000000000000000000000000
0xae9 PUSH1 0x20
0xaeb DUP3
0xaec ADD
0xaed MSTORE
0xaee PUSH2 0xa49
0xaf1 SWAP1
0xaf2 PUSH2 0x37b
0xaf5 JUMP
---
0xaba: V905 = 0x40
0xabd: V906 = M[0x40]
0xac0: V907 = ADD 0x40 V906
0xac3: M[0x40] = V907
0xac4: V908 = 0xe
0xac7: M[V906] = 0xe
0xac8: V909 = 0x416c7265616479206c6f636b6564000000000000000000000000000000000000
0xae9: V910 = 0x20
0xaec: V911 = ADD V906 0x20
0xaed: M[V911] = 0x416c7265616479206c6f636b6564000000000000000000000000000000000000
0xaee: V912 = 0xa49
0xaf2: V913 = 0x37b
0xaf5: JUMP 0x37b
---
Entry stack: [V10, 0x132, V269, V255, V273, V275, V898, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xa49, V906]
Exit stack: [V10, 0x132, V269, V255, V273, V275, V898, 0x0, 0x0, 0xa49, V906]

================================

Block 0xaf6
[0xaf6:0xb03]
---
Predecessors: [0x423]
Successors: [0xb04, 0xb08]
---
0xaf6 JUMPDEST
0xaf7 PUSH1 0x3
0xaf9 DUP3
0xafa ADD
0xafb SLOAD
0xafc PUSH1 0x0
0xafe EQ
0xaff ISZERO
0xb00 PUSH2 0xb08
0xb03 JUMPI
---
0xaf6: JUMPDEST 
0xaf7: V914 = 0x3
0xafa: V915 = ADD V350 0x3
0xafb: V916 = S[V915]
0xafc: V917 = 0x0
0xafe: V918 = EQ 0x0 V916
0xaff: V919 = ISZERO V918
0xb00: V920 = 0xb08
0xb03: JUMPI 0xb08 V919
---
Entry stack: [V10, 0x132, V345, V350, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x132, V345, V350, 0x0]

================================

Block 0xb04
[0xb04:0xb07]
---
Predecessors: [0xaf6]
Successors: [0xbd7]
---
0xb04 PUSH2 0xbd7
0xb07 JUMP
---
0xb04: V921 = 0xbd7
0xb07: JUMP 0xbd7
---
Entry stack: [V10, 0x132, V345, V350, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V345, V350, 0x0]

================================

Block 0xb08
[0xb08:0xb18]
---
Predecessors: [0xaf6]
Successors: [0xb19, 0xb1d]
---
0xb08 JUMPDEST
0xb09 PUSH1 0x2
0xb0b DUP1
0xb0c SLOAD
0xb0d SWAP1
0xb0e DUP4
0xb0f ADD
0xb10 SLOAD
0xb11 ADD
0xb12 TIMESTAMP
0xb13 LT
0xb14 ISZERO
0xb15 PUSH2 0xb1d
0xb18 JUMPI
---
0xb08: JUMPDEST 
0xb09: V922 = 0x2
0xb0c: V923 = S[0x2]
0xb0f: V924 = ADD V350 0x2
0xb10: V925 = S[V924]
0xb11: V926 = ADD V925 V923
0xb12: V927 = TIMESTAMP
0xb13: V928 = LT V927 V926
0xb14: V929 = ISZERO V928
0xb15: V930 = 0xb1d
0xb18: JUMPI 0xb1d V929
---
Entry stack: [V10, 0x132, V345, V350, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x132, V345, V350, 0x0]

================================

Block 0xb19
[0xb19:0xb1c]
---
Predecessors: [0xb08]
Successors: [0xbd7]
---
0xb19 PUSH2 0xbd7
0xb1c JUMP
---
0xb19: V931 = 0xbd7
0xb1c: JUMP 0xbd7
---
Entry stack: [V10, 0x132, V345, V350, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V345, V350, 0x0]

================================

Block 0xb1d
[0xb1d:0xb35]
---
Predecessors: [0xb08]
Successors: [0xb36, 0xb42]
---
0xb1d JUMPDEST
0xb1e POP
0xb1f PUSH1 0x1
0xb21 DUP2
0xb22 ADD
0xb23 SLOAD
0xb24 ADDRESS
0xb25 PUSH1 0x1
0xb27 PUSH1 0xa0
0xb29 PUSH1 0x2
0xb2b EXP
0xb2c SUB
0xb2d AND
0xb2e BALANCE
0xb2f DUP2
0xb30 GT
0xb31 ISZERO
0xb32 PUSH2 0xb42
0xb35 JUMPI
---
0xb1d: JUMPDEST 
0xb1f: V932 = 0x1
0xb22: V933 = ADD V350 0x1
0xb23: V934 = S[V933]
0xb24: V935 = ADDRESS
0xb25: V936 = 0x1
0xb27: V937 = 0xa0
0xb29: V938 = 0x2
0xb2b: V939 = EXP 0x2 0xa0
0xb2c: V940 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2d: V941 = AND 0xffffffffffffffffffffffffffffffffffffffff V935
0xb2e: V942 = BALANCE V941
0xb30: V943 = GT V934 V942
0xb31: V944 = ISZERO V943
0xb32: V945 = 0xb42
0xb35: JUMPI 0xb42 V944
---
Entry stack: [V10, 0x132, V345, V350, 0x0]
Stack pops: 2
Stack additions: [S1, V934]
Exit stack: [V10, 0x132, V345, V350, V934]

================================

Block 0xb36
[0xb36:0xb41]
---
Predecessors: [0xb1d]
Successors: [0xb42]
---
0xb36 POP
0xb37 ADDRESS
0xb38 PUSH1 0x1
0xb3a PUSH1 0xa0
0xb3c PUSH1 0x2
0xb3e EXP
0xb3f SUB
0xb40 AND
0xb41 BALANCE
---
0xb37: V946 = ADDRESS
0xb38: V947 = 0x1
0xb3a: V948 = 0xa0
0xb3c: V949 = 0x2
0xb3e: V950 = EXP 0x2 0xa0
0xb3f: V951 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb40: V952 = AND 0xffffffffffffffffffffffffffffffffffffffff V946
0xb41: V953 = BALANCE V952
---
Entry stack: [V10, 0x132, V345, V350, V934]
Stack pops: 1
Stack additions: [V953]
Exit stack: [V10, 0x132, V345, V350, V953]

================================

Block 0xb42
[0xb42:0xb51]
---
Predecessors: [0xb1d, 0xb36]
Successors: [0xb52, 0xb5c]
---
0xb42 JUMPDEST
0xb43 PUSH1 0x4
0xb45 DUP3
0xb46 ADD
0xb47 SLOAD
0xb48 PUSH1 0x0
0xb4a EQ
0xb4b DUP1
0xb4c ISZERO
0xb4d SWAP1
0xb4e PUSH2 0xb5c
0xb51 JUMPI
---
0xb42: JUMPDEST 
0xb43: V954 = 0x4
0xb46: V955 = ADD V350 0x4
0xb47: V956 = S[V955]
0xb48: V957 = 0x0
0xb4a: V958 = EQ 0x0 V956
0xb4c: V959 = ISZERO V958
0xb4e: V960 = 0xb5c
0xb51: JUMPI 0xb5c V958
---
Entry stack: [V10, 0x132, V345, V350, S0]
Stack pops: 2
Stack additions: [S1, S0, V959]
Exit stack: [V10, 0x132, V345, V350, S0, V959]

================================

Block 0xb52
[0xb52:0xb5b]
---
Predecessors: [0xb42]
Successors: [0xb5c]
---
0xb52 POP
0xb53 PUSH1 0x5
0xb55 DUP3
0xb56 ADD
0xb57 SLOAD
0xb58 PUSH1 0x0
0xb5a EQ
0xb5b ISZERO
---
0xb53: V961 = 0x5
0xb56: V962 = ADD V350 0x5
0xb57: V963 = S[V962]
0xb58: V964 = 0x0
0xb5a: V965 = EQ 0x0 V963
0xb5b: V966 = ISZERO V965
---
Entry stack: [V10, 0x132, V345, V350, S1, V959]
Stack pops: 3
Stack additions: [S2, S1, V966]
Exit stack: [V10, 0x132, V345, V350, S1, V966]

================================

Block 0xb5c
[0xb5c:0xb61]
---
Predecessors: [0xb42, 0xb52]
Successors: [0xb62, 0xb7b]
---
0xb5c JUMPDEST
0xb5d ISZERO
0xb5e PUSH2 0xb7b
0xb61 JUMPI
---
0xb5c: JUMPDEST 
0xb5d: V967 = ISZERO S0
0xb5e: V968 = 0xb7b
0xb61: JUMPI 0xb7b V967
---
Entry stack: [V10, 0x132, V345, V350, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x132, V345, V350, S1]

================================

Block 0xb62
[0xb62:0xb76]
---
Predecessors: [0xb5c]
Successors: [0xb77, 0xbb1]
---
0xb62 PUSH1 0x2
0xb64 DUP1
0xb65 SLOAD
0xb66 SWAP1
0xb67 DUP4
0xb68 ADD
0xb69 SLOAD
0xb6a ADD
0xb6b PUSH3 0x278d00
0xb6f ADD
0xb70 TIMESTAMP
0xb71 LT
0xb72 ISZERO
0xb73 PUSH2 0xbb1
0xb76 JUMPI
---
0xb62: V969 = 0x2
0xb65: V970 = S[0x2]
0xb68: V971 = ADD V350 0x2
0xb69: V972 = S[V971]
0xb6a: V973 = ADD V972 V970
0xb6b: V974 = 0x278d00
0xb6f: V975 = ADD 0x278d00 V973
0xb70: V976 = TIMESTAMP
0xb71: V977 = LT V976 V975
0xb72: V978 = ISZERO V977
0xb73: V979 = 0xbb1
0xb76: JUMPI 0xbb1 V978
---
Entry stack: [V10, 0x132, V345, V350, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x132, V345, V350, S0]

================================

Block 0xb77
[0xb77:0xb7a]
---
Predecessors: [0xb62]
Successors: [0xbd7]
---
0xb77 PUSH2 0xbd7
0xb7a JUMP
---
0xb77: V980 = 0xbd7
0xb7a: JUMP 0xbd7
---
Entry stack: [V10, 0x132, V345, V350, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V345, V350, S0]

================================

Block 0xb7b
[0xb7b:0xb87]
---
Predecessors: [0xb5c]
Successors: [0xb88, 0xbdc]
---
0xb7b JUMPDEST
0xb7c PUSH1 0x4
0xb7e DUP3
0xb7f ADD
0xb80 SLOAD
0xb81 PUSH1 0x0
0xb83 EQ
0xb84 PUSH2 0xbdc
0xb87 JUMPI
---
0xb7b: JUMPDEST 
0xb7c: V981 = 0x4
0xb7f: V982 = ADD V350 0x4
0xb80: V983 = S[V982]
0xb81: V984 = 0x0
0xb83: V985 = EQ 0x0 V983
0xb84: V986 = 0xbdc
0xb87: JUMPI 0xbdc V985
---
Entry stack: [V10, 0x132, V345, V350, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x132, V345, V350, S0]

================================

Block 0xb88
[0xb88:0xbb0]
---
Predecessors: [0xb7b]
Successors: [0xbd7]
---
0xb88 PUSH1 0x40
0xb8a MLOAD
0xb8b DUP3
0xb8c SLOAD
0xb8d PUSH1 0x1
0xb8f PUSH1 0xa0
0xb91 PUSH1 0x2
0xb93 EXP
0xb94 SUB
0xb95 AND
0xb96 SWAP1
0xb97 PUSH1 0x0
0xb99 SWAP1
0xb9a DUP4
0xb9b SWAP1
0xb9c DUP3
0xb9d DUP2
0xb9e DUP2
0xb9f DUP2
0xba0 DUP6
0xba1 DUP9
0xba2 DUP4
0xba3 CALL
0xba4 POP
0xba5 POP
0xba6 POP
0xba7 PUSH1 0x1
0xba9 DUP5
0xbaa ADD
0xbab SSTORE
0xbac POP
0xbad PUSH2 0xbd7
0xbb0 JUMP
---
0xb88: V987 = 0x40
0xb8a: V988 = M[0x40]
0xb8c: V989 = S[V350]
0xb8d: V990 = 0x1
0xb8f: V991 = 0xa0
0xb91: V992 = 0x2
0xb93: V993 = EXP 0x2 0xa0
0xb94: V994 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb95: V995 = AND 0xffffffffffffffffffffffffffffffffffffffff V989
0xb97: V996 = 0x0
0xba3: V997 = CALL 0x0 V995 S0 V988 0x0 V988 0x0
0xba7: V998 = 0x1
0xbaa: V999 = ADD V350 0x1
0xbab: S[V999] = 0x0
0xbad: V1000 = 0xbd7
0xbb0: JUMP 0xbd7
---
Entry stack: [V10, 0x132, V345, V350, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x132, V345, V350, S0]

================================

Block 0xbb1
[0xbb1:0xbd6]
---
Predecessors: [0xb62]
Successors: [0xbd7]
---
0xbb1 JUMPDEST
0xbb2 PUSH1 0x40
0xbb4 MLOAD
0xbb5 DUP3
0xbb6 SLOAD
0xbb7 PUSH1 0x1
0xbb9 PUSH1 0xa0
0xbbb PUSH1 0x2
0xbbd EXP
0xbbe SUB
0xbbf AND
0xbc0 SWAP1
0xbc1 PUSH1 0x0
0xbc3 SWAP1
0xbc4 DUP4
0xbc5 SWAP1
0xbc6 DUP3
0xbc7 DUP2
0xbc8 DUP2
0xbc9 DUP2
0xbca DUP6
0xbcb DUP9
0xbcc DUP4
0xbcd CALL
0xbce POP
0xbcf POP
0xbd0 POP
0xbd1 PUSH1 0x1
0xbd3 DUP5
0xbd4 ADD
0xbd5 SSTORE
0xbd6 POP
---
0xbb1: JUMPDEST 
0xbb2: V1001 = 0x40
0xbb4: V1002 = M[0x40]
0xbb6: V1003 = S[V350]
0xbb7: V1004 = 0x1
0xbb9: V1005 = 0xa0
0xbbb: V1006 = 0x2
0xbbd: V1007 = EXP 0x2 0xa0
0xbbe: V1008 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbbf: V1009 = AND 0xffffffffffffffffffffffffffffffffffffffff V1003
0xbc1: V1010 = 0x0
0xbcd: V1011 = CALL 0x0 V1009 S0 V1002 0x0 V1002 0x0
0xbd1: V1012 = 0x1
0xbd4: V1013 = ADD V350 0x1
0xbd5: S[V1013] = 0x0
---
Entry stack: [V10, 0x132, V345, V350, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x132, V345, V350, S0]

================================

Block 0xbd7
[0xbd7:0xbdb]
---
Predecessors: [0x447, 0xb04, 0xb19, 0xb77, 0xb88, 0xbb1, 0xbdc, 0xbe9]
Successors: [0x132]
---
0xbd7 JUMPDEST
0xbd8 POP
0xbd9 POP
0xbda POP
0xbdb JUMP
---
0xbd7: JUMPDEST 
0xbdb: JUMP 0x132
---
Entry stack: [V10, 0x132, V345, V350, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0xbdc
[0xbdc:0xbe8]
---
Predecessors: [0xb7b]
Successors: [0xbd7, 0xbe9]
---
0xbdc JUMPDEST
0xbdd PUSH1 0x5
0xbdf DUP3
0xbe0 ADD
0xbe1 SLOAD
0xbe2 PUSH1 0x0
0xbe4 EQ
0xbe5 PUSH2 0xbd7
0xbe8 JUMPI
---
0xbdc: JUMPDEST 
0xbdd: V1014 = 0x5
0xbe0: V1015 = ADD V350 0x5
0xbe1: V1016 = S[V1015]
0xbe2: V1017 = 0x0
0xbe4: V1018 = EQ 0x0 V1016
0xbe5: V1019 = 0xbd7
0xbe8: JUMPI 0xbd7 V1018
---
Entry stack: [V10, 0x132, V345, V350, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x132, V345, V350, S0]

================================

Block 0xbe9
[0xbe9:0xc10]
---
Predecessors: [0xbdc]
Successors: [0xbd7]
---
0xbe9 PUSH1 0x40
0xbeb MLOAD
0xbec PUSH1 0x0
0xbee DUP1
0xbef SLOAD
0xbf0 PUSH1 0x1
0xbf2 PUSH1 0xa0
0xbf4 PUSH1 0x2
0xbf6 EXP
0xbf7 SUB
0xbf8 AND
0xbf9 SWAP2
0xbfa DUP4
0xbfb SWAP1
0xbfc DUP3
0xbfd DUP2
0xbfe DUP2
0xbff DUP2
0xc00 DUP6
0xc01 DUP9
0xc02 DUP4
0xc03 CALL
0xc04 POP
0xc05 POP
0xc06 POP
0xc07 PUSH1 0x1
0xc09 DUP5
0xc0a ADD
0xc0b SSTORE
0xc0c POP
0xc0d PUSH2 0xbd7
0xc10 JUMP
---
0xbe9: V1020 = 0x40
0xbeb: V1021 = M[0x40]
0xbec: V1022 = 0x0
0xbef: V1023 = S[0x0]
0xbf0: V1024 = 0x1
0xbf2: V1025 = 0xa0
0xbf4: V1026 = 0x2
0xbf6: V1027 = EXP 0x2 0xa0
0xbf7: V1028 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf8: V1029 = AND 0xffffffffffffffffffffffffffffffffffffffff V1023
0xc03: V1030 = CALL 0x0 V1029 S0 V1021 0x0 V1021 0x0
0xc07: V1031 = 0x1
0xc0a: V1032 = ADD V350 0x1
0xc0b: S[V1032] = 0x0
0xc0d: V1033 = 0xbd7
0xc10: JUMP 0xbd7
---
Entry stack: [V10, 0x132, V345, V350, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x132, V345, V350, S0]

================================

Block 0xc11
[0xc11:0xc1e]
---
Predecessors: [0xd4e]
Successors: [0xc1f, 0xc2f]
---
0xc11 JUMPDEST
0xc12 PUSH1 0x3
0xc14 DUP2
0xc15 ADD
0xc16 SLOAD
0xc17 PUSH1 0x0
0xc19 EQ
0xc1a ISZERO
0xc1b PUSH2 0xc2f
0xc1e JUMPI
---
0xc11: JUMPDEST 
0xc12: V1034 = 0x3
0xc15: V1035 = ADD V382 0x3
0xc16: V1036 = S[V1035]
0xc17: V1037 = 0x0
0xc19: V1038 = EQ 0x0 V1036
0xc1a: V1039 = ISZERO V1038
0xc1b: V1040 = 0xc2f
0xc1e: JUMPI 0xc2f V1039
---
Entry stack: [V10, 0x132, V373, V359, V377, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x132, V373, V359, V377, V382]

================================

Block 0xc1f
[0xc1f:0xc2e]
---
Predecessors: [0xc11]
Successors: [0xc2f]
---
0xc1f PUSH1 0x1
0xc21 DUP2
0xc22 ADD
0xc23 SLOAD
0xc24 PUSH1 0x3
0xc26 DUP3
0xc27 ADD
0xc28 SSTORE
0xc29 TIMESTAMP
0xc2a PUSH1 0x2
0xc2c DUP3
0xc2d ADD
0xc2e SSTORE
---
0xc1f: V1041 = 0x1
0xc22: V1042 = ADD V382 0x1
0xc23: V1043 = S[V1042]
0xc24: V1044 = 0x3
0xc27: V1045 = ADD V382 0x3
0xc28: S[V1045] = V1043
0xc29: V1046 = TIMESTAMP
0xc2a: V1047 = 0x2
0xc2d: V1048 = ADD V382 0x2
0xc2e: S[V1048] = V1046
---
Entry stack: [V10, 0x132, V373, V359, V377, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x132, V373, V359, V377, V382]

================================

Block 0xc2f
[0xc2f:0xc46]
---
Predecessors: [0xc11, 0xc1f]
Successors: [0xc47, 0xc4e]
---
0xc2f JUMPDEST
0xc30 DUP1
0xc31 SLOAD
0xc32 PUSH1 0x1
0xc34 PUSH1 0xa0
0xc36 PUSH1 0x2
0xc38 EXP
0xc39 SUB
0xc3a SWAP1
0xc3b DUP2
0xc3c AND
0xc3d CALLER
0xc3e SWAP1
0xc3f SWAP2
0xc40 AND
0xc41 EQ
0xc42 ISZERO
0xc43 PUSH2 0xc4e
0xc46 JUMPI
---
0xc2f: JUMPDEST 
0xc31: V1049 = S[V382]
0xc32: V1050 = 0x1
0xc34: V1051 = 0xa0
0xc36: V1052 = 0x2
0xc38: V1053 = EXP 0x2 0xa0
0xc39: V1054 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc3c: V1055 = AND 0xffffffffffffffffffffffffffffffffffffffff V1049
0xc3d: V1056 = CALLER
0xc40: V1057 = AND 0xffffffffffffffffffffffffffffffffffffffff V1056
0xc41: V1058 = EQ V1057 V1055
0xc42: V1059 = ISZERO V1058
0xc43: V1060 = 0xc4e
0xc46: JUMPI 0xc4e V1059
---
Entry stack: [V10, 0x132, V373, V359, V377, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x132, V373, V359, V377, V382]

================================

Block 0xc47
[0xc47:0xc4d]
---
Predecessors: [0xc2f]
Successors: [0xc4e]
---
0xc47 PUSH1 0x1
0xc49 PUSH1 0x4
0xc4b DUP3
0xc4c ADD
0xc4d SSTORE
---
0xc47: V1061 = 0x1
0xc49: V1062 = 0x4
0xc4c: V1063 = ADD V382 0x4
0xc4d: S[V1063] = 0x1
---
Entry stack: [V10, 0x132, V373, V359, V377, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x132, V373, V359, V377, V382]

================================

Block 0xc4e
[0xc4e:0xc66]
---
Predecessors: [0xc2f, 0xc47]
Successors: [0xc67, 0xc6e]
---
0xc4e JUMPDEST
0xc4f PUSH1 0x0
0xc51 SLOAD
0xc52 PUSH1 0x1
0xc54 PUSH1 0xa0
0xc56 PUSH1 0x2
0xc58 EXP
0xc59 SUB
0xc5a SWAP1
0xc5b DUP2
0xc5c AND
0xc5d CALLER
0xc5e SWAP1
0xc5f SWAP2
0xc60 AND
0xc61 EQ
0xc62 ISZERO
0xc63 PUSH2 0xc6e
0xc66 JUMPI
---
0xc4e: JUMPDEST 
0xc4f: V1064 = 0x0
0xc51: V1065 = S[0x0]
0xc52: V1066 = 0x1
0xc54: V1067 = 0xa0
0xc56: V1068 = 0x2
0xc58: V1069 = EXP 0x2 0xa0
0xc59: V1070 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5c: V1071 = AND 0xffffffffffffffffffffffffffffffffffffffff V1065
0xc5d: V1072 = CALLER
0xc60: V1073 = AND 0xffffffffffffffffffffffffffffffffffffffff V1072
0xc61: V1074 = EQ V1073 V1071
0xc62: V1075 = ISZERO V1074
0xc63: V1076 = 0xc6e
0xc66: JUMPI 0xc6e V1075
---
Entry stack: [V10, 0x132, V373, V359, V377, V382]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V373, V359, V377, V382]

================================

Block 0xc67
[0xc67:0xc6d]
---
Predecessors: [0xc4e]
Successors: [0xc6e]
---
0xc67 PUSH1 0x1
0xc69 PUSH1 0x5
0xc6b DUP3
0xc6c ADD
0xc6d SSTORE
---
0xc67: V1077 = 0x1
0xc69: V1078 = 0x5
0xc6c: V1079 = ADD V382 0x5
0xc6d: S[V1079] = 0x1
---
Entry stack: [V10, 0x132, V373, V359, V377, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x132, V373, V359, V377, V382]

================================

Block 0xc6e
[0xc6e:0xcee]
---
Predecessors: [0xc4e, 0xc67]
Successors: [0xcef, 0xd08]
---
0xc6e JUMPDEST
0xc6f CALLER
0xc70 PUSH1 0x1
0xc72 PUSH1 0xa0
0xc74 PUSH1 0x2
0xc76 EXP
0xc77 SUB
0xc78 AND
0xc79 DUP3
0xc7a DUP6
0xc7b PUSH1 0x0
0xc7d DUP1
0xc7e MLOAD
0xc7f PUSH1 0x20
0xc81 PUSH2 0x13c3
0xc84 DUP4
0xc85 CODECOPY
0xc86 DUP2
0xc87 MLOAD
0xc88 SWAP2
0xc89 MSTORE
0xc8a DUP7
0xc8b PUSH1 0xc
0xc8d PUSH1 0x0
0xc8f DUP8
0xc90 PUSH1 0x1
0xc92 ADD
0xc93 PUSH1 0x0
0xc95 POP
0xc96 SLOAD
0xc97 PUSH1 0x40
0xc99 MLOAD
0xc9a DUP1
0xc9b DUP1
0xc9c PUSH1 0x20
0xc9e ADD
0xc9f DUP6
0xca0 DUP2
0xca1 MSTORE
0xca2 PUSH1 0x20
0xca4 ADD
0xca5 DUP5
0xca6 DUP2
0xca7 MSTORE
0xca8 PUSH1 0x20
0xcaa ADD
0xcab DUP4
0xcac DUP2
0xcad MSTORE
0xcae PUSH1 0x20
0xcb0 ADD
0xcb1 DUP3
0xcb2 DUP2
0xcb3 SUB
0xcb4 DUP3
0xcb5 MSTORE
0xcb6 DUP7
0xcb7 DUP2
0xcb8 DUP2
0xcb9 MLOAD
0xcba DUP2
0xcbb MSTORE
0xcbc PUSH1 0x20
0xcbe ADD
0xcbf SWAP2
0xcc0 POP
0xcc1 DUP1
0xcc2 MLOAD
0xcc3 SWAP1
0xcc4 PUSH1 0x20
0xcc6 ADD
0xcc7 SWAP1
0xcc8 DUP1
0xcc9 DUP4
0xcca DUP4
0xccb DUP3
0xccc SWAP1
0xccd PUSH1 0x0
0xccf PUSH1 0x4
0xcd1 PUSH1 0x20
0xcd3 DUP5
0xcd4 PUSH1 0x1f
0xcd6 ADD
0xcd7 DIV
0xcd8 PUSH1 0xf
0xcda MUL
0xcdb PUSH1 0x3
0xcdd ADD
0xcde CALL
0xcdf POP
0xce0 SWAP1
0xce1 POP
0xce2 SWAP1
0xce3 DUP2
0xce4 ADD
0xce5 SWAP1
0xce6 PUSH1 0x1f
0xce8 AND
0xce9 DUP1
0xcea ISZERO
0xceb PUSH2 0xd08
0xcee JUMPI
---
0xc6e: JUMPDEST 
0xc6f: V1080 = CALLER
0xc70: V1081 = 0x1
0xc72: V1082 = 0xa0
0xc74: V1083 = 0x2
0xc76: V1084 = EXP 0x2 0xa0
0xc77: V1085 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc78: V1086 = AND 0xffffffffffffffffffffffffffffffffffffffff V1080
0xc7b: V1087 = 0x0
0xc7e: V1088 = M[0x0]
0xc7f: V1089 = 0x20
0xc81: V1090 = 0x13c3
0xc85: CODECOPY 0x0 0x13c3 0x20
0xc87: V1091 = M[0x0]
0xc89: M[0x0] = V1088
0xc8b: V1092 = 0xc
0xc8d: V1093 = 0x0
0xc90: V1094 = 0x1
0xc92: V1095 = ADD 0x1 V382
0xc93: V1096 = 0x0
0xc96: V1097 = S[V1095]
0xc97: V1098 = 0x40
0xc99: V1099 = M[0x40]
0xc9c: V1100 = 0x20
0xc9e: V1101 = ADD 0x20 V1099
0xca1: M[V1101] = 0xc
0xca2: V1102 = 0x20
0xca4: V1103 = ADD 0x20 V1101
0xca7: M[V1103] = 0x0
0xca8: V1104 = 0x20
0xcaa: V1105 = ADD 0x20 V1103
0xcad: M[V1105] = V1097
0xcae: V1106 = 0x20
0xcb0: V1107 = ADD 0x20 V1105
0xcb3: V1108 = SUB V1107 V1099
0xcb5: M[V1099] = V1108
0xcb9: V1109 = M[V359]
0xcbb: M[V1107] = V1109
0xcbc: V1110 = 0x20
0xcbe: V1111 = ADD 0x20 V1107
0xcc2: V1112 = M[V359]
0xcc4: V1113 = 0x20
0xcc6: V1114 = ADD 0x20 V359
0xccd: V1115 = 0x0
0xccf: V1116 = 0x4
0xcd1: V1117 = 0x20
0xcd4: V1118 = 0x1f
0xcd6: V1119 = ADD 0x1f V1112
0xcd7: V1120 = DIV V1119 0x20
0xcd8: V1121 = 0xf
0xcda: V1122 = MUL 0xf V1120
0xcdb: V1123 = 0x3
0xcdd: V1124 = ADD 0x3 V1122
0xcde: V1125 = CALL V1124 0x4 0x0 V1114 V1112 V1111 V1112
0xce4: V1126 = ADD V1112 V1111
0xce6: V1127 = 0x1f
0xce8: V1128 = AND 0x1f V1112
0xcea: V1129 = ISZERO V1128
0xceb: V1130 = 0xd08
0xcee: JUMPI 0xd08 V1129
---
Entry stack: [V10, 0x132, V373, V359, V377, V382]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V1086, S1, S3, V1091, S2, 0xc, 0x0, V1097, V1099, V1099, V1126, V1128]
Exit stack: [V10, 0x132, V373, V359, V377, V382, V1086, V377, V373, V1091, V359, 0xc, 0x0, V1097, V1099, V1099, V1126, V1128]

================================

Block 0xcef
[0xcef:0xd07]
---
Predecessors: [0xc6e]
Successors: [0xd08]
---
0xcef DUP1
0xcf0 DUP3
0xcf1 SUB
0xcf2 DUP1
0xcf3 MLOAD
0xcf4 PUSH1 0x1
0xcf6 DUP4
0xcf7 PUSH1 0x20
0xcf9 SUB
0xcfa PUSH2 0x100
0xcfd EXP
0xcfe SUB
0xcff NOT
0xd00 AND
0xd01 DUP2
0xd02 MSTORE
0xd03 PUSH1 0x20
0xd05 ADD
0xd06 SWAP2
0xd07 POP
---
0xcf1: V1131 = SUB V1126 V1128
0xcf3: V1132 = M[V1131]
0xcf4: V1133 = 0x1
0xcf7: V1134 = 0x20
0xcf9: V1135 = SUB 0x20 V1128
0xcfa: V1136 = 0x100
0xcfd: V1137 = EXP 0x100 V1135
0xcfe: V1138 = SUB V1137 0x1
0xcff: V1139 = NOT V1138
0xd00: V1140 = AND V1139 V1132
0xd02: M[V1131] = V1140
0xd03: V1141 = 0x20
0xd05: V1142 = ADD 0x20 V1131
---
Entry stack: [V10, 0x132, V373, V359, V377, V382, V1086, V377, V373, V1091, V359, 0xc, 0x0, V1097, V1099, V1099, V1126, V1128]
Stack pops: 2
Stack additions: [V1142, S0]
Exit stack: [V10, 0x132, V373, V359, V377, V382, V1086, V377, V373, V1091, V359, 0xc, 0x0, V1097, V1099, V1099, V1142, V1128]

================================

Block 0xd08
[0xd08:0xd18]
---
Predecessors: [0xc6e, 0xcef, 0x1288]
Successors: [0xd19]
---
0xd08 JUMPDEST
0xd09 POP
0xd0a SWAP6
0xd0b POP
0xd0c POP
0xd0d POP
0xd0e POP
0xd0f POP
0xd10 POP
0xd11 PUSH1 0x40
0xd13 MLOAD
0xd14 DUP1
0xd15 SWAP2
0xd16 SUB
0xd17 SWAP1
0xd18 LOG4
---
0xd08: JUMPDEST 
0xd11: V1143 = 0x40
0xd13: V1144 = M[0x40]
0xd16: V1145 = SUB S1 V1144
0xd18: LOG V1144 V1145 S8 S9 S10 S11
---
Entry stack: [V10, 0x132, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x2, 0xc}, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: []
Exit stack: [V10, 0x132, S15, S14, S13, S12]

================================

Block 0xd19
[0xd19:0xd1e]
---
Predecessors: [0x4b2, 0x6b4, 0xd08, 0xd54, 0x1283]
Successors: [0x132]
---
0xd19 JUMPDEST
0xd1a POP
0xd1b POP
0xd1c POP
0xd1d POP
0xd1e JUMP
---
0xd19: JUMPDEST 
0xd1e: JUMP S4
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, S7, S6, S5]

================================

Block 0xd1f
[0xd1f:0xd38]
---
Predecessors: [0x44b]
Successors: [0xd39, 0xd4e]
---
0xd1f JUMPDEST
0xd20 DUP1
0xd21 SLOAD
0xd22 PUSH1 0x1
0xd24 PUSH1 0xa0
0xd26 PUSH1 0x2
0xd28 EXP
0xd29 SUB
0xd2a SWAP1
0xd2b DUP2
0xd2c AND
0xd2d CALLER
0xd2e SWAP1
0xd2f SWAP2
0xd30 AND
0xd31 EQ
0xd32 DUP1
0xd33 ISZERO
0xd34 SWAP1
0xd35 PUSH2 0xd4e
0xd38 JUMPI
---
0xd1f: JUMPDEST 
0xd21: V1146 = S[V382]
0xd22: V1147 = 0x1
0xd24: V1148 = 0xa0
0xd26: V1149 = 0x2
0xd28: V1150 = EXP 0x2 0xa0
0xd29: V1151 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd2c: V1152 = AND 0xffffffffffffffffffffffffffffffffffffffff V1146
0xd2d: V1153 = CALLER
0xd30: V1154 = AND 0xffffffffffffffffffffffffffffffffffffffff V1153
0xd31: V1155 = EQ V1154 V1152
0xd33: V1156 = ISZERO V1155
0xd35: V1157 = 0xd4e
0xd38: JUMPI 0xd4e V1155
---
Entry stack: [V10, 0x132, V373, V359, V377, V382]
Stack pops: 1
Stack additions: [S0, V1156]
Exit stack: [V10, 0x132, V373, V359, V377, V382, V1156]

================================

Block 0xd39
[0xd39:0xd4d]
---
Predecessors: [0xd1f]
Successors: [0xd4e]
---
0xd39 POP
0xd3a PUSH1 0x0
0xd3c SLOAD
0xd3d PUSH1 0x1
0xd3f PUSH1 0xa0
0xd41 PUSH1 0x2
0xd43 EXP
0xd44 SUB
0xd45 SWAP1
0xd46 DUP2
0xd47 AND
0xd48 CALLER
0xd49 SWAP1
0xd4a SWAP2
0xd4b AND
0xd4c EQ
0xd4d ISZERO
---
0xd3a: V1158 = 0x0
0xd3c: V1159 = S[0x0]
0xd3d: V1160 = 0x1
0xd3f: V1161 = 0xa0
0xd41: V1162 = 0x2
0xd43: V1163 = EXP 0x2 0xa0
0xd44: V1164 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd47: V1165 = AND 0xffffffffffffffffffffffffffffffffffffffff V1159
0xd48: V1166 = CALLER
0xd4b: V1167 = AND 0xffffffffffffffffffffffffffffffffffffffff V1166
0xd4c: V1168 = EQ V1167 V1165
0xd4d: V1169 = ISZERO V1168
---
Entry stack: [V10, 0x132, V373, V359, V377, V382, V1156]
Stack pops: 1
Stack additions: [V1169]
Exit stack: [V10, 0x132, V373, V359, V377, V382, V1169]

================================

Block 0xd4e
[0xd4e:0xd53]
---
Predecessors: [0xd1f, 0xd39]
Successors: [0xc11, 0xd54]
---
0xd4e JUMPDEST
0xd4f ISZERO
0xd50 PUSH2 0xc11
0xd53 JUMPI
---
0xd4e: JUMPDEST 
0xd4f: V1170 = ISZERO S0
0xd50: V1171 = 0xc11
0xd53: JUMPI 0xc11 V1170
---
Entry stack: [V10, 0x132, V373, V359, V377, V382, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x132, V373, V359, V377, V382]

================================

Block 0xd54
[0xd54:0xd57]
---
Predecessors: [0xd4e]
Successors: [0xd19]
---
0xd54 PUSH2 0xd19
0xd57 JUMP
---
0xd54: V1172 = 0xd19
0xd57: JUMP 0xd19
---
Entry stack: [V10, 0x132, V373, V359, V377, V382]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V373, V359, V377, V382]

================================

Block 0xd58
[0xd58:0xdd4]
---
Predecessors: [0x11ee]
Successors: [0xdd5, 0xdee]
---
0xd58 JUMPDEST
0xd59 CALLER
0xd5a PUSH1 0x1
0xd5c PUSH1 0xa0
0xd5e PUSH1 0x2
0xd60 EXP
0xd61 SUB
0xd62 AND
0xd63 DUP5
0xd64 DUP8
0xd65 PUSH1 0x0
0xd67 DUP1
0xd68 MLOAD
0xd69 PUSH1 0x20
0xd6b PUSH2 0x13c3
0xd6e DUP4
0xd6f CODECOPY
0xd70 DUP2
0xd71 MLOAD
0xd72 SWAP2
0xd73 MSTORE
0xd74 DUP9
0xd75 PUSH1 0x3
0xd77 DUP9
0xd78 DUP8
0xd79 PUSH1 0x40
0xd7b MLOAD
0xd7c DUP1
0xd7d DUP1
0xd7e PUSH1 0x20
0xd80 ADD
0xd81 DUP6
0xd82 DUP2
0xd83 MSTORE
0xd84 PUSH1 0x20
0xd86 ADD
0xd87 DUP5
0xd88 PUSH2 0xffff
0xd8b AND
0xd8c DUP2
0xd8d MSTORE
0xd8e PUSH1 0x20
0xd90 ADD
0xd91 DUP4
0xd92 DUP2
0xd93 MSTORE
0xd94 PUSH1 0x20
0xd96 ADD
0xd97 DUP3
0xd98 DUP2
0xd99 SUB
0xd9a DUP3
0xd9b MSTORE
0xd9c DUP7
0xd9d DUP2
0xd9e DUP2
0xd9f MLOAD
0xda0 DUP2
0xda1 MSTORE
0xda2 PUSH1 0x20
0xda4 ADD
0xda5 SWAP2
0xda6 POP
0xda7 DUP1
0xda8 MLOAD
0xda9 SWAP1
0xdaa PUSH1 0x20
0xdac ADD
0xdad SWAP1
0xdae DUP1
0xdaf DUP4
0xdb0 DUP4
0xdb1 DUP3
0xdb2 SWAP1
0xdb3 PUSH1 0x0
0xdb5 PUSH1 0x4
0xdb7 PUSH1 0x20
0xdb9 DUP5
0xdba PUSH1 0x1f
0xdbc ADD
0xdbd DIV
0xdbe PUSH1 0xf
0xdc0 MUL
0xdc1 PUSH1 0x3
0xdc3 ADD
0xdc4 CALL
0xdc5 POP
0xdc6 SWAP1
0xdc7 POP
0xdc8 SWAP1
0xdc9 DUP2
0xdca ADD
0xdcb SWAP1
0xdcc PUSH1 0x1f
0xdce AND
0xdcf DUP1
0xdd0 ISZERO
0xdd1 PUSH2 0xdee
0xdd4 JUMPI
---
0xd58: JUMPDEST 
0xd59: V1173 = CALLER
0xd5a: V1174 = 0x1
0xd5c: V1175 = 0xa0
0xd5e: V1176 = 0x2
0xd60: V1177 = EXP 0x2 0xa0
0xd61: V1178 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd62: V1179 = AND 0xffffffffffffffffffffffffffffffffffffffff V1173
0xd65: V1180 = 0x0
0xd68: V1181 = M[0x0]
0xd69: V1182 = 0x20
0xd6b: V1183 = 0x13c3
0xd6f: CODECOPY 0x0 0x13c3 0x20
0xd71: V1184 = M[0x0]
0xd73: M[0x0] = V1181
0xd75: V1185 = 0x3
0xd79: V1186 = 0x40
0xd7b: V1187 = M[0x40]
0xd7e: V1188 = 0x20
0xd80: V1189 = ADD 0x20 V1187
0xd83: M[V1189] = 0x3
0xd84: V1190 = 0x20
0xd86: V1191 = ADD 0x20 V1189
0xd88: V1192 = 0xffff
0xd8b: V1193 = AND 0xffff V411
0xd8d: M[V1191] = V1193
0xd8e: V1194 = 0x20
0xd90: V1195 = ADD 0x20 V1191
0xd93: M[V1195] = S0
0xd94: V1196 = 0x20
0xd96: V1197 = ADD 0x20 V1195
0xd99: V1198 = SUB V1197 V1187
0xd9b: M[V1187] = V1198
0xd9f: V1199 = M[V391]
0xda1: M[V1197] = V1199
0xda2: V1200 = 0x20
0xda4: V1201 = ADD 0x20 V1197
0xda8: V1202 = M[V391]
0xdaa: V1203 = 0x20
0xdac: V1204 = ADD 0x20 V391
0xdb3: V1205 = 0x0
0xdb5: V1206 = 0x4
0xdb7: V1207 = 0x20
0xdba: V1208 = 0x1f
0xdbc: V1209 = ADD 0x1f V1202
0xdbd: V1210 = DIV V1209 0x20
0xdbe: V1211 = 0xf
0xdc0: V1212 = MUL 0xf V1210
0xdc1: V1213 = 0x3
0xdc3: V1214 = ADD 0x3 V1212
0xdc4: V1215 = CALL V1214 0x4 0x0 V1204 V1202 V1201 V1202
0xdca: V1216 = ADD V1202 V1201
0xdcc: V1217 = 0x1f
0xdce: V1218 = AND 0x1f V1202
0xdd0: V1219 = ISZERO V1218
0xdd1: V1220 = 0xdee
0xdd4: JUMPI 0xdee V1219
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V1179, S3, S5, V1184, S4, 0x3, S2, S0, V1187, V1187, V1216, V1218]
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S0, V1179, V409, V405, V1184, V391, 0x3, V411, S0, V1187, V1187, V1216, V1218]

================================

Block 0xdd5
[0xdd5:0xded]
---
Predecessors: [0xd58]
Successors: [0xdee]
---
0xdd5 DUP1
0xdd6 DUP3
0xdd7 SUB
0xdd8 DUP1
0xdd9 MLOAD
0xdda PUSH1 0x1
0xddc DUP4
0xddd PUSH1 0x20
0xddf SUB
0xde0 PUSH2 0x100
0xde3 EXP
0xde4 SUB
0xde5 NOT
0xde6 AND
0xde7 DUP2
0xde8 MSTORE
0xde9 PUSH1 0x20
0xdeb ADD
0xdec SWAP2
0xded POP
---
0xdd7: V1221 = SUB V1216 V1218
0xdd9: V1222 = M[V1221]
0xdda: V1223 = 0x1
0xddd: V1224 = 0x20
0xddf: V1225 = SUB 0x20 V1218
0xde0: V1226 = 0x100
0xde3: V1227 = EXP 0x100 V1225
0xde4: V1228 = SUB V1227 0x1
0xde5: V1229 = NOT V1228
0xde6: V1230 = AND V1229 V1222
0xde8: M[V1221] = V1230
0xde9: V1231 = 0x20
0xdeb: V1232 = ADD 0x20 V1221
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S12, V1179, V409, V405, V1184, V391, 0x3, V411, S4, V1187, V1187, V1216, V1218]
Stack pops: 2
Stack additions: [V1232, S0]
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S12, V1179, V409, V405, V1184, V391, 0x3, V411, S4, V1187, V1187, V1232, V1218]

================================

Block 0xdee
[0xdee:0xdfe]
---
Predecessors: [0xd58, 0xdd5]
Successors: [0xdff]
---
0xdee JUMPDEST
0xdef POP
0xdf0 SWAP6
0xdf1 POP
0xdf2 POP
0xdf3 POP
0xdf4 POP
0xdf5 POP
0xdf6 POP
0xdf7 PUSH1 0x40
0xdf9 MLOAD
0xdfa DUP1
0xdfb SWAP2
0xdfc SUB
0xdfd SWAP1
0xdfe LOG4
---
0xdee: JUMPDEST 
0xdf7: V1233 = 0x40
0xdf9: V1234 = M[0x40]
0xdfc: V1235 = SUB S1 V1234
0xdfe: LOG V1234 V1235 V1184 V405 V409 V1179
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S12, V1179, V409, V405, V1184, V391, 0x3, V411, S4, V1187, V1187, S1, V1218]
Stack pops: 12
Stack additions: []
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S12]

================================

Block 0xdff
[0xdff:0xe06]
---
Predecessors: [0x4b6, 0xdee, 0xe32]
Successors: [0x132]
---
0xdff JUMPDEST
0xe00 POP
0xe01 POP
0xe02 POP
0xe03 POP
0xe04 POP
0xe05 POP
0xe06 JUMP
---
0xdff: JUMPDEST 
0xe06: JUMP S6
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V10, S7]

================================

Block 0xe07
[0xe07:0xe31]
---
Predecessors: [0x524]
Successors: [0x664]
---
0xe07 JUMPDEST
0xe08 PUSH1 0xb
0xe0a DUP1
0xe0b SLOAD
0xe0c PUSH3 0x10000
0xe10 DUP1
0xe11 DUP3
0xe12 DIV
0xe13 PUSH2 0xffff
0xe16 AND
0xe17 DUP7
0xe18 SWAP1
0xe19 SUB
0xe1a MUL
0xe1b PUSH4 0xffff0000
0xe20 NOT
0xe21 SWAP2
0xe22 SWAP1
0xe23 SWAP2
0xe24 AND
0xe25 OR
0xe26 SWAP1
0xe27 SSTORE
0xe28 PUSH2 0xd58
0xe2b DUP7
0xe2c DUP7
0xe2d DUP7
0xe2e PUSH2 0x664
0xe31 JUMP
---
0xe07: JUMPDEST 
0xe08: V1236 = 0xb
0xe0b: V1237 = S[0xb]
0xe0c: V1238 = 0x10000
0xe12: V1239 = DIV V1237 0x10000
0xe13: V1240 = 0xffff
0xe16: V1241 = AND 0xffff V1239
0xe19: V1242 = SUB V1241 V411
0xe1a: V1243 = MUL V1242 0x10000
0xe1b: V1244 = 0xffff0000
0xe20: V1245 = NOT 0xffff0000
0xe24: V1246 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff V1237
0xe25: V1247 = OR V1246 V1243
0xe27: S[0xb] = V1247
0xe28: V1248 = 0xd58
0xe2e: V1249 = 0x664
0xe31: JUMP 0x664
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, V415]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0xd58, S5, S4, S3]
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, V415, 0xd58, V405, V391, V409]

================================

Block 0xe32
[0xe32:0xe36]
---
Predecessors: [0x3fd]
Successors: [0xdff]
---
0xe32 JUMPDEST
0xe33 PUSH2 0xdff
0xe36 JUMP
---
0xe32: JUMPDEST 
0xe33: V1250 = 0xdff
0xe36: JUMP 0xdff
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe37
[0xe37:0xe43]
---
Predecessors: [0x578]
Successors: [0xe44, 0xe46]
---
0xe37 JUMPDEST
0xe38 PUSH1 0x7
0xe3a SLOAD
0xe3b PUSH1 0x0
0xe3d SWAP1
0xe3e GT
0xe3f ISZERO
0xe40 PUSH2 0xe46
0xe43 JUMPI
---
0xe37: JUMPDEST 
0xe38: V1251 = 0x7
0xe3a: V1252 = S[0x7]
0xe3b: V1253 = 0x0
0xe3e: V1254 = GT V1252 0x0
0xe3f: V1255 = ISZERO V1254
0xe40: V1256 = 0xe46
0xe43: JUMPI 0xe46 V1255
---
Entry stack: [V10, 0x132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132]

================================

Block 0xe44
[0xe44:0xe45]
---
Predecessors: [0x7a2, 0xe37, 0xe53, 0xe6f]
Successors: [0x132]
---
0xe44 JUMPDEST
0xe45 JUMP
---
0xe44: JUMPDEST 
0xe45: JUMP 0x132
---
Entry stack: [V10, 0x132]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xe46
[0xe46:0xe52]
---
Predecessors: [0xe37]
Successors: [0xe53, 0xe57]
---
0xe46 JUMPDEST
0xe47 PUSH1 0x6
0xe49 SLOAD
0xe4a PUSH1 0x0
0xe4c SWAP1
0xe4d GT
0xe4e ISZERO
0xe4f PUSH2 0xe57
0xe52 JUMPI
---
0xe46: JUMPDEST 
0xe47: V1257 = 0x6
0xe49: V1258 = S[0x6]
0xe4a: V1259 = 0x0
0xe4d: V1260 = GT V1258 0x0
0xe4e: V1261 = ISZERO V1260
0xe4f: V1262 = 0xe57
0xe52: JUMPI 0xe57 V1261
---
Entry stack: [V10, 0x132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132]

================================

Block 0xe53
[0xe53:0xe56]
---
Predecessors: [0xe46]
Successors: [0xe44]
---
0xe53 PUSH2 0xe44
0xe56 JUMP
---
0xe53: V1263 = 0xe44
0xe56: JUMP 0xe44
---
Entry stack: [V10, 0x132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132]

================================

Block 0xe57
[0xe57:0xe6e]
---
Predecessors: [0xe46]
Successors: [0xe6f, 0xe73]
---
0xe57 JUMPDEST
0xe58 PUSH1 0x0
0xe5a SLOAD
0xe5b PUSH1 0x1
0xe5d PUSH1 0xa0
0xe5f PUSH1 0x2
0xe61 EXP
0xe62 SUB
0xe63 SWAP1
0xe64 DUP2
0xe65 AND
0xe66 CALLER
0xe67 SWAP1
0xe68 SWAP2
0xe69 AND
0xe6a EQ
0xe6b PUSH2 0xe73
0xe6e JUMPI
---
0xe57: JUMPDEST 
0xe58: V1264 = 0x0
0xe5a: V1265 = S[0x0]
0xe5b: V1266 = 0x1
0xe5d: V1267 = 0xa0
0xe5f: V1268 = 0x2
0xe61: V1269 = EXP 0x2 0xa0
0xe62: V1270 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe65: V1271 = AND 0xffffffffffffffffffffffffffffffffffffffff V1265
0xe66: V1272 = CALLER
0xe69: V1273 = AND 0xffffffffffffffffffffffffffffffffffffffff V1272
0xe6a: V1274 = EQ V1273 V1271
0xe6b: V1275 = 0xe73
0xe6e: JUMPI 0xe73 V1274
---
Entry stack: [V10, 0x132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132]

================================

Block 0xe6f
[0xe6f:0xe72]
---
Predecessors: [0xe57]
Successors: [0xe44]
---
0xe6f PUSH2 0xe44
0xe72 JUMP
---
0xe6f: V1276 = 0xe44
0xe72: JUMP 0xe44
---
Entry stack: [V10, 0x132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132]

================================

Block 0xe73
[0xe73:0xe80]
---
Predecessors: [0xe57]
Successors: []
---
0xe73 JUMPDEST
0xe74 PUSH1 0x0
0xe76 SLOAD
0xe77 PUSH1 0x1
0xe79 PUSH1 0xa0
0xe7b PUSH1 0x2
0xe7d EXP
0xe7e SUB
0xe7f AND
0xe80 SELFDESTRUCT
---
0xe73: JUMPDEST 
0xe74: V1277 = 0x0
0xe76: V1278 = S[0x0]
0xe77: V1279 = 0x1
0xe79: V1280 = 0xa0
0xe7b: V1281 = 0x2
0xe7d: V1282 = EXP 0x2 0xa0
0xe7e: V1283 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe7f: V1284 = AND 0xffffffffffffffffffffffffffffffffffffffff V1278
0xe80: SELFDESTRUCT V1284
---
Entry stack: [V10, 0x132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132]

================================

Block 0xe81
[0xe81:0xe9d]
---
Predecessors: [0x59f]
Successors: [0xe9e, 0xea2]
---
0xe81 JUMPDEST
0xe82 PUSH1 0x0
0xe84 DUP8
0xe85 DUP2
0xe86 MSTORE
0xe87 PUSH1 0x8
0xe89 PUSH1 0x20
0xe8b MSTORE
0xe8c PUSH1 0x40
0xe8e DUP2
0xe8f SHA3
0xe90 PUSH1 0x1
0xe92 DUP2
0xe93 ADD
0xe94 SLOAD
0xe95 SWAP1
0xe96 SWAP4
0xe97 POP
0xe98 EQ
0xe99 ISZERO
0xe9a PUSH2 0xea2
0xe9d JUMPI
---
0xe81: JUMPDEST 
0xe82: V1285 = 0x0
0xe86: M[0x0] = V482
0xe87: V1286 = 0x8
0xe89: V1287 = 0x20
0xe8b: M[0x20] = 0x8
0xe8c: V1288 = 0x40
0xe8f: V1289 = SHA3 0x0 0x40
0xe90: V1290 = 0x1
0xe93: V1291 = ADD V1289 0x1
0xe94: V1292 = S[V1291]
0xe98: V1293 = EQ V1292 0x0
0xe99: V1294 = ISZERO V1293
0xe9a: V1295 = 0xea2
0xe9d: JUMPI 0xea2 V1294
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V1289, S0]
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]

================================

Block 0xe9e
[0xe9e:0xea1]
---
Predecessors: [0xe81]
Successors: [0x9f3]
---
0xe9e PUSH2 0x9f3
0xea1 JUMP
---
0xe9e: V1296 = 0x9f3
0xea1: JUMP 0x9f3
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]

================================

Block 0xea2
[0xea2:0xeaf]
---
Predecessors: [0xe81]
Successors: [0xeb0, 0xeb4]
---
0xea2 JUMPDEST
0xea3 PUSH1 0x3
0xea5 DUP3
0xea6 ADD
0xea7 SLOAD
0xea8 PUSH1 0x0
0xeaa EQ
0xeab ISZERO
0xeac PUSH2 0xeb4
0xeaf JUMPI
---
0xea2: JUMPDEST 
0xea3: V1297 = 0x3
0xea6: V1298 = ADD V1289 0x3
0xea7: V1299 = S[V1298]
0xea8: V1300 = 0x0
0xeaa: V1301 = EQ 0x0 V1299
0xeab: V1302 = ISZERO V1301
0xeac: V1303 = 0xeb4
0xeaf: JUMPI 0xeb4 V1302
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]

================================

Block 0xeb0
[0xeb0:0xeb3]
---
Predecessors: [0xea2]
Successors: [0x9f3]
---
0xeb0 PUSH2 0x9f3
0xeb3 JUMP
---
0xeb0: V1304 = 0x9f3
0xeb3: JUMP 0x9f3
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]

================================

Block 0xeb4
[0xeb4:0xecc]
---
Predecessors: [0xea2]
Successors: [0xecd, 0xedf]
---
0xeb4 JUMPDEST
0xeb5 PUSH1 0x0
0xeb7 SLOAD
0xeb8 PUSH1 0x1
0xeba PUSH1 0xa0
0xebc PUSH1 0x2
0xebe EXP
0xebf SUB
0xec0 DUP8
0xec1 DUP2
0xec2 AND
0xec3 SWAP2
0xec4 AND
0xec5 EQ
0xec6 DUP1
0xec7 ISZERO
0xec8 SWAP1
0xec9 PUSH2 0xedf
0xecc JUMPI
---
0xeb4: JUMPDEST 
0xeb5: V1305 = 0x0
0xeb7: V1306 = S[0x0]
0xeb8: V1307 = 0x1
0xeba: V1308 = 0xa0
0xebc: V1309 = 0x2
0xebe: V1310 = EXP 0x2 0xa0
0xebf: V1311 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec2: V1312 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0xec4: V1313 = AND V1306 0xffffffffffffffffffffffffffffffffffffffff
0xec5: V1314 = EQ V1313 V1312
0xec7: V1315 = ISZERO V1314
0xec9: V1316 = 0xedf
0xecc: JUMPI 0xedf V1314
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V1315]
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0, V1315]

================================

Block 0xecd
[0xecd:0xede]
---
Predecessors: [0xeb4]
Successors: [0xedf]
---
0xecd POP
0xece DUP2
0xecf SLOAD
0xed0 PUSH1 0x1
0xed2 PUSH1 0xa0
0xed4 PUSH1 0x2
0xed6 EXP
0xed7 SUB
0xed8 DUP8
0xed9 DUP2
0xeda AND
0xedb SWAP2
0xedc AND
0xedd EQ
0xede ISZERO
---
0xecf: V1317 = S[V1289]
0xed0: V1318 = 0x1
0xed2: V1319 = 0xa0
0xed4: V1320 = 0x2
0xed6: V1321 = EXP 0x2 0xa0
0xed7: V1322 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeda: V1323 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0xedc: V1324 = AND V1317 0xffffffffffffffffffffffffffffffffffffffff
0xedd: V1325 = EQ V1324 V1323
0xede: V1326 = ISZERO V1325
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0, V1315]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, V1326]
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0, V1326]

================================

Block 0xedf
[0xedf:0xee4]
---
Predecessors: [0xeb4, 0xecd]
Successors: [0xee5, 0xee9]
---
0xedf JUMPDEST
0xee0 ISZERO
0xee1 PUSH2 0xee9
0xee4 JUMPI
---
0xedf: JUMPDEST 
0xee0: V1327 = ISZERO S0
0xee1: V1328 = 0xee9
0xee4: JUMPI 0xee9 V1327
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]

================================

Block 0xee5
[0xee5:0xee8]
---
Predecessors: [0xedf]
Successors: [0x9f3]
---
0xee5 PUSH2 0x9f3
0xee8 JUMP
---
0xee5: V1329 = 0x9f3
0xee8: JUMP 0x9f3
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]

================================

Block 0xee9
[0xee9:0xef6]
---
Predecessors: [0xedf]
Successors: [0xef7, 0xf00]
---
0xee9 JUMPDEST
0xeea PUSH1 0x4
0xeec DUP3
0xeed ADD
0xeee SLOAD
0xeef PUSH1 0x0
0xef1 EQ
0xef2 DUP1
0xef3 PUSH2 0xf00
0xef6 JUMPI
---
0xee9: JUMPDEST 
0xeea: V1330 = 0x4
0xeed: V1331 = ADD V1289 0x4
0xeee: V1332 = S[V1331]
0xeef: V1333 = 0x0
0xef1: V1334 = EQ 0x0 V1332
0xef3: V1335 = 0xf00
0xef6: JUMPI 0xf00 V1334
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V1334]
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0, V1334]

================================

Block 0xef7
[0xef7:0xeff]
---
Predecessors: [0xee9]
Successors: [0xf00]
---
0xef7 POP
0xef8 PUSH1 0x5
0xefa DUP3
0xefb ADD
0xefc SLOAD
0xefd PUSH1 0x0
0xeff EQ
---
0xef8: V1336 = 0x5
0xefb: V1337 = ADD V1289 0x5
0xefc: V1338 = S[V1337]
0xefd: V1339 = 0x0
0xeff: V1340 = EQ 0x0 V1338
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0, V1334]
Stack pops: 3
Stack additions: [S2, S1, V1340]
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0, V1340]

================================

Block 0xf00
[0xf00:0xf05]
---
Predecessors: [0xee9, 0xef7]
Successors: [0xf06, 0xf0a]
---
0xf00 JUMPDEST
0xf01 ISZERO
0xf02 PUSH2 0xf0a
0xf05 JUMPI
---
0xf00: JUMPDEST 
0xf01: V1341 = ISZERO S0
0xf02: V1342 = 0xf0a
0xf05: JUMPI 0xf0a V1341
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]

================================

Block 0xf06
[0xf06:0xf09]
---
Predecessors: [0xf00]
Successors: [0x9f3]
---
0xf06 PUSH2 0x9f3
0xf09 JUMP
---
0xf06: V1343 = 0x9f3
0xf09: JUMP 0x9f3
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]

================================

Block 0xf0a
[0xf0a:0xf21]
---
Predecessors: [0xf00]
Successors: [0xf22, 0xf32]
---
0xf0a JUMPDEST
0xf0b PUSH1 0x1
0xf0d DUP3
0xf0e ADD
0xf0f SLOAD
0xf10 ADDRESS
0xf11 PUSH1 0x1
0xf13 PUSH1 0xa0
0xf15 PUSH1 0x2
0xf17 EXP
0xf18 SUB
0xf19 AND
0xf1a BALANCE
0xf1b SWAP1
0xf1c GT
0xf1d ISZERO
0xf1e PUSH2 0xf32
0xf21 JUMPI
---
0xf0a: JUMPDEST 
0xf0b: V1344 = 0x1
0xf0e: V1345 = ADD V1289 0x1
0xf0f: V1346 = S[V1345]
0xf10: V1347 = ADDRESS
0xf11: V1348 = 0x1
0xf13: V1349 = 0xa0
0xf15: V1350 = 0x2
0xf17: V1351 = EXP 0x2 0xa0
0xf18: V1352 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf19: V1353 = AND 0xffffffffffffffffffffffffffffffffffffffff V1347
0xf1a: V1354 = BALANCE V1353
0xf1c: V1355 = GT V1346 V1354
0xf1d: V1356 = ISZERO V1355
0xf1e: V1357 = 0xf32
0xf21: JUMPI 0xf32 V1356
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]

================================

Block 0xf22
[0xf22:0xf31]
---
Predecessors: [0xf0a]
Successors: [0xf32]
---
0xf22 ADDRESS
0xf23 PUSH1 0x1
0xf25 PUSH1 0xa0
0xf27 PUSH1 0x2
0xf29 EXP
0xf2a SUB
0xf2b AND
0xf2c BALANCE
0xf2d PUSH1 0x1
0xf2f DUP4
0xf30 ADD
0xf31 SSTORE
---
0xf22: V1358 = ADDRESS
0xf23: V1359 = 0x1
0xf25: V1360 = 0xa0
0xf27: V1361 = 0x2
0xf29: V1362 = EXP 0x2 0xa0
0xf2a: V1363 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf2b: V1364 = AND 0xffffffffffffffffffffffffffffffffffffffff V1358
0xf2c: V1365 = BALANCE V1364
0xf2d: V1366 = 0x1
0xf30: V1367 = ADD V1289 0x1
0xf31: S[V1367] = V1365
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]

================================

Block 0xf32
[0xf32:0xf3e]
---
Predecessors: [0xf0a, 0xf22]
Successors: [0xf3f, 0xf46]
---
0xf32 JUMPDEST
0xf33 PUSH1 0x1
0xf35 DUP3
0xf36 ADD
0xf37 SLOAD
0xf38 DUP6
0xf39 GT
0xf3a ISZERO
0xf3b PUSH2 0xf46
0xf3e JUMPI
---
0xf32: JUMPDEST 
0xf33: V1368 = 0x1
0xf36: V1369 = ADD V1289 0x1
0xf37: V1370 = S[V1369]
0xf39: V1371 = GT V486 V1370
0xf3a: V1372 = ISZERO V1371
0xf3b: V1373 = 0xf46
0xf3e: JUMPI 0xf46 V1372
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]

================================

Block 0xf3f
[0xf3f:0xf45]
---
Predecessors: [0xf32]
Successors: [0xf46]
---
0xf3f PUSH1 0x1
0xf41 DUP3
0xf42 ADD
0xf43 SLOAD
0xf44 SWAP5
0xf45 POP
---
0xf3f: V1374 = 0x1
0xf42: V1375 = ADD V1289 0x1
0xf43: V1376 = S[V1375]
---
Entry stack: [V10, 0x132, V482, V484, V486, V468, V490, V1289, 0x0]
Stack pops: 5
Stack additions: [V1376, S3, S2, S1, S0]
Exit stack: [V10, 0x132, V482, V484, V1376, V468, V490, V1289, 0x0]

================================

Block 0xf46
[0xf46:0xf64]
---
Predecessors: [0xf32, 0xf3f]
Successors: [0xf65, 0xfa1]
---
0xf46 JUMPDEST
0xf47 POP
0xf48 PUSH1 0x4
0xf4a SLOAD
0xf4b PUSH1 0x1
0xf4d DUP3
0xf4e ADD
0xf4f SLOAD
0xf50 PUSH2 0x3e8
0xf53 SWAP2
0xf54 DUP2
0xf55 MUL
0xf56 SWAP2
0xf57 SWAP1
0xf58 SWAP2
0xf59 DIV
0xf5a SWAP1
0xf5b DUP6
0xf5c SWAP1
0xf5d SUB
0xf5e DUP2
0xf5f GT
0xf60 ISZERO
0xf61 PUSH2 0xfa1
0xf64 JUMPI
---
0xf46: JUMPDEST 
0xf48: V1377 = 0x4
0xf4a: V1378 = S[0x4]
0xf4b: V1379 = 0x1
0xf4e: V1380 = ADD V1289 0x1
0xf4f: V1381 = S[V1380]
0xf50: V1382 = 0x3e8
0xf55: V1383 = MUL V1381 V1378
0xf59: V1384 = DIV V1383 0x3e8
0xf5d: V1385 = SUB V1381 S4
0xf5f: V1386 = GT V1384 V1385
0xf60: V1387 = ISZERO V1386
0xf61: V1388 = 0xfa1
0xf64: JUMPI 0xfa1 V1387
---
Entry stack: [V10, 0x132, V482, V484, S4, V468, V490, V1289, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V1384]
Exit stack: [V10, 0x132, V482, V484, S4, V468, V490, V1289, V1384]

================================

Block 0xf65
[0xf65:0xfa0]
---
Predecessors: [0xf46]
Successors: [0x37b]
---
0xf65 PUSH1 0x40
0xf67 DUP1
0xf68 MLOAD
0xf69 DUP1
0xf6a DUP3
0xf6b ADD
0xf6c SWAP1
0xf6d SWAP2
0xf6e MSTORE
0xf6f PUSH1 0x1b
0xf71 DUP2
0xf72 MSTORE
0xf73 PUSH32 0x526577617264206578636565647320726577617264206c696d69740000000000
0xf94 PUSH1 0x20
0xf96 DUP3
0xf97 ADD
0xf98 MSTORE
0xf99 PUSH2 0x108c
0xf9c SWAP1
0xf9d PUSH2 0x37b
0xfa0 JUMP
---
0xf65: V1389 = 0x40
0xf68: V1390 = M[0x40]
0xf6b: V1391 = ADD 0x40 V1390
0xf6e: M[0x40] = V1391
0xf6f: V1392 = 0x1b
0xf72: M[V1390] = 0x1b
0xf73: V1393 = 0x526577617264206578636565647320726577617264206c696d69740000000000
0xf94: V1394 = 0x20
0xf97: V1395 = ADD V1390 0x20
0xf98: M[V1395] = 0x526577617264206578636565647320726577617264206c696d69740000000000
0xf99: V1396 = 0x108c
0xf9d: V1397 = 0x37b
0xfa0: JUMP 0x37b
---
Entry stack: [V10, 0x132, V482, V484, S4, V468, V490, V1289, V1384]
Stack pops: 0
Stack additions: [0x108c, V1390]
Exit stack: [V10, 0x132, V482, V484, S4, V468, V490, V1289, V1384, 0x108c, V1390]

================================

Block 0xfa1
[0xfa1:0x105a]
---
Predecessors: [0xf46]
Successors: [0x9e2, 0x105b]
---
0xfa1 JUMPDEST
0xfa2 PUSH1 0x40
0xfa4 MLOAD
0xfa5 PUSH1 0x1
0xfa7 PUSH1 0xa0
0xfa9 PUSH1 0x2
0xfab EXP
0xfac SUB
0xfad DUP8
0xfae AND
0xfaf SWAP1
0xfb0 PUSH1 0x0
0xfb2 SWAP1
0xfb3 DUP8
0xfb4 SWAP1
0xfb5 DUP3
0xfb6 DUP2
0xfb7 DUP2
0xfb8 DUP2
0xfb9 DUP6
0xfba DUP9
0xfbb DUP4
0xfbc CALL
0xfbd POP
0xfbe POP
0xfbf POP
0xfc0 PUSH1 0x1
0xfc2 DUP5
0xfc3 ADD
0xfc4 DUP1
0xfc5 SLOAD
0xfc6 DUP9
0xfc7 SWAP1
0xfc8 SUB
0xfc9 DUP1
0xfca DUP3
0xfcb SSTORE
0xfcc PUSH1 0x6
0xfce DUP1
0xfcf SLOAD
0xfd0 SWAP2
0xfd1 SWAP1
0xfd2 SWAP2
0xfd3 ADD
0xfd4 SWAP1
0xfd5 SSTORE
0xfd6 DUP2
0xfd7 SWAP1
0xfd8 SSTORE
0xfd9 PUSH1 0x40
0xfdb DUP1
0xfdc MLOAD
0xfdd PUSH1 0xd
0xfdf PUSH1 0x20
0xfe1 DUP3
0xfe2 DUP2
0xfe3 ADD
0xfe4 DUP3
0xfe5 SWAP1
0xfe6 MSTORE
0xfe7 SWAP3
0xfe8 DUP3
0xfe9 ADD
0xfea DUP5
0xfeb SWAP1
0xfec MSTORE
0xfed PUSH1 0x60
0xfef DUP3
0xff0 ADD
0xff1 DUP11
0xff2 SWAP1
0xff3 MSTORE
0xff4 PUSH1 0x80
0xff6 DUP1
0xff7 DUP4
0xff8 MSTORE
0xff9 DUP10
0xffa MLOAD
0xffb SWAP1
0xffc DUP4
0xffd ADD
0xffe MSTORE
0xfff DUP9
0x1000 MLOAD
0x1001 CALLER
0x1002 PUSH1 0x1
0x1004 PUSH1 0xa0
0x1006 PUSH1 0x2
0x1008 EXP
0x1009 SUB
0x100a AND
0x100b SWAP6
0x100c POP
0x100d DUP9
0x100e SWAP5
0x100f DUP14
0x1010 SWAP5
0x1011 PUSH1 0x0
0x1013 DUP1
0x1014 MLOAD
0x1015 PUSH1 0x20
0x1017 PUSH2 0x13c3
0x101a DUP4
0x101b CODECOPY
0x101c DUP2
0x101d MLOAD
0x101e SWAP2
0x101f MSTORE
0x1020 SWAP5
0x1021 DUP13
0x1022 SWAP5
0x1023 SWAP4
0x1024 DUP15
0x1025 SWAP3
0x1026 DUP3
0x1027 SWAP2
0x1028 PUSH1 0xa0
0x102a DUP4
0x102b ADD
0x102c SWAP2
0x102d DUP9
0x102e DUP2
0x102f ADD
0x1030 SWAP2
0x1031 SWAP1
0x1032 DUP2
0x1033 SWAP1
0x1034 DUP5
0x1035 SWAP1
0x1036 DUP3
0x1037 SWAP1
0x1038 DUP6
0x1039 SWAP1
0x103a DUP12
0x103b SWAP1
0x103c PUSH1 0x4
0x103e SWAP1
0x103f PUSH1 0x1f
0x1041 DUP6
0x1042 ADD
0x1043 DIV
0x1044 PUSH1 0xf
0x1046 MUL
0x1047 PUSH1 0x3
0x1049 ADD
0x104a CALL
0x104b POP
0x104c SWAP1
0x104d POP
0x104e SWAP1
0x104f DUP2
0x1050 ADD
0x1051 SWAP1
0x1052 PUSH1 0x1f
0x1054 AND
0x1055 DUP1
0x1056 ISZERO
0x1057 PUSH2 0x9e2
0x105a JUMPI
---
0xfa1: JUMPDEST 
0xfa2: V1398 = 0x40
0xfa4: V1399 = M[0x40]
0xfa5: V1400 = 0x1
0xfa7: V1401 = 0xa0
0xfa9: V1402 = 0x2
0xfab: V1403 = EXP 0x2 0xa0
0xfac: V1404 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfae: V1405 = AND V484 0xffffffffffffffffffffffffffffffffffffffff
0xfb0: V1406 = 0x0
0xfbc: V1407 = CALL 0x0 V1405 S4 V1399 0x0 V1399 0x0
0xfc0: V1408 = 0x1
0xfc3: V1409 = ADD V1289 0x1
0xfc5: V1410 = S[V1409]
0xfc8: V1411 = SUB V1410 S4
0xfcb: S[V1409] = V1411
0xfcc: V1412 = 0x6
0xfcf: V1413 = S[0x6]
0xfd3: V1414 = ADD V1413 V1411
0xfd5: S[0x6] = V1414
0xfd8: S[V1409] = 0x0
0xfd9: V1415 = 0x40
0xfdc: V1416 = M[0x40]
0xfdd: V1417 = 0xd
0xfdf: V1418 = 0x20
0xfe3: V1419 = ADD 0x20 V1416
0xfe6: M[V1419] = 0xd
0xfe9: V1420 = ADD V1416 0x40
0xfec: M[V1420] = 0x0
0xfed: V1421 = 0x60
0xff0: V1422 = ADD V1416 0x60
0xff3: M[V1422] = S4
0xff4: V1423 = 0x80
0xff8: M[V1416] = 0x80
0xffa: V1424 = M[V468]
0xffd: V1425 = ADD V1416 0x80
0xffe: M[V1425] = V1424
0x1000: V1426 = M[V468]
0x1001: V1427 = CALLER
0x1002: V1428 = 0x1
0x1004: V1429 = 0xa0
0x1006: V1430 = 0x2
0x1008: V1431 = EXP 0x2 0xa0
0x1009: V1432 = SUB 0x10000000000000000000000000000000000000000 0x1
0x100a: V1433 = AND 0xffffffffffffffffffffffffffffffffffffffff V1427
0x1011: V1434 = 0x0
0x1014: V1435 = M[0x0]
0x1015: V1436 = 0x20
0x1017: V1437 = 0x13c3
0x101b: CODECOPY 0x0 0x13c3 0x20
0x101d: V1438 = M[0x0]
0x101f: M[0x0] = V1435
0x1028: V1439 = 0xa0
0x102b: V1440 = ADD V1416 0xa0
0x102f: V1441 = ADD 0x20 V468
0x103c: V1442 = 0x4
0x103f: V1443 = 0x1f
0x1042: V1444 = ADD V1426 0x1f
0x1043: V1445 = DIV V1444 0x20
0x1044: V1446 = 0xf
0x1046: V1447 = MUL 0xf V1445
0x1047: V1448 = 0x3
0x1049: V1449 = ADD 0x3 V1447
0x104a: V1450 = CALL V1449 0x4 0x0 V1441 V1426 V1440 V1426
0x1050: V1451 = ADD V1426 V1440
0x1052: V1452 = 0x1f
0x1054: V1453 = AND 0x1f V1426
0x1056: V1454 = ISZERO V1453
0x1057: V1455 = 0x9e2
0x105a: JUMPI 0x9e2 V1454
---
Entry stack: [V10, 0x132, V482, V484, S4, V468, V490, V1289, V1384]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V1433, S2, S6, V1438, S3, 0xd, 0x0, S4, V1416, V1416, V1451, V1453]
Exit stack: [V10, 0x132, V482, V484, S4, V468, V490, V1289, V1384, V1433, V490, V482, V1438, V468, 0xd, 0x0, S4, V1416, V1416, V1451, V1453]

================================

Block 0x105b
[0x105b:0x108b]
---
Predecessors: [0xfa1]
Successors: [0x132]
---
0x105b DUP1
0x105c DUP3
0x105d SUB
0x105e DUP1
0x105f MLOAD
0x1060 PUSH1 0x1
0x1062 DUP4
0x1063 PUSH1 0x20
0x1065 SUB
0x1066 PUSH2 0x100
0x1069 EXP
0x106a SUB
0x106b NOT
0x106c AND
0x106d DUP2
0x106e MSTORE
0x106f PUSH1 0x20
0x1071 ADD
0x1072 SWAP2
0x1073 POP
0x1074 POP
0x1075 SWAP6
0x1076 POP
0x1077 POP
0x1078 POP
0x1079 POP
0x107a POP
0x107b POP
0x107c PUSH1 0x40
0x107e MLOAD
0x107f DUP1
0x1080 SWAP2
0x1081 SUB
0x1082 SWAP1
0x1083 LOG4
0x1084 POP
0x1085 POP
0x1086 POP
0x1087 POP
0x1088 POP
0x1089 POP
0x108a POP
0x108b JUMP
---
0x105d: V1456 = SUB V1451 V1453
0x105f: V1457 = M[V1456]
0x1060: V1458 = 0x1
0x1063: V1459 = 0x20
0x1065: V1460 = SUB 0x20 V1453
0x1066: V1461 = 0x100
0x1069: V1462 = EXP 0x100 V1460
0x106a: V1463 = SUB V1462 0x1
0x106b: V1464 = NOT V1463
0x106c: V1465 = AND V1464 V1457
0x106e: M[V1456] = V1465
0x106f: V1466 = 0x20
0x1071: V1467 = ADD 0x20 V1456
0x107c: V1468 = 0x40
0x107e: V1469 = M[0x40]
0x1081: V1470 = SUB V1467 V1469
0x1083: LOG V1469 V1470 V1438 V482 V490 V1433
0x108b: JUMP 0x132
---
Entry stack: [V10, 0x132, V482, V484, S16, V468, V490, V1289, V1384, V1433, V490, V482, V1438, V468, 0xd, 0x0, S4, V1416, V1416, V1451, V1453]
Stack pops: 20
Stack additions: []
Exit stack: [V10]

================================

Block 0x108c
[0x108c:0x1090]
---
Predecessors: [0x3fd]
Successors: [0x9f3]
---
0x108c JUMPDEST
0x108d PUSH2 0x9f3
0x1090 JUMP
---
0x108c: JUMPDEST 
0x108d: V1471 = 0x9f3
0x1090: JUMP 0x9f3
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1091
[0x1091:0x10a9]
---
Predecessors: [0x1224]
Successors: [0x10aa, 0x10b6]
---
0x1091 JUMPDEST
0x1092 POP
0x1093 PUSH1 0x1
0x1095 DUP2
0x1096 ADD
0x1097 SLOAD
0x1098 ADDRESS
0x1099 PUSH1 0x1
0x109b PUSH1 0xa0
0x109d PUSH1 0x2
0x109f EXP
0x10a0 SUB
0x10a1 AND
0x10a2 BALANCE
0x10a3 DUP2
0x10a4 GT
0x10a5 ISZERO
0x10a6 PUSH2 0x10b6
0x10a9 JUMPI
---
0x1091: JUMPDEST 
0x1093: V1472 = 0x1
0x1096: V1473 = ADD S1 0x1
0x1097: V1474 = S[V1473]
0x1098: V1475 = ADDRESS
0x1099: V1476 = 0x1
0x109b: V1477 = 0xa0
0x109d: V1478 = 0x2
0x109f: V1479 = EXP 0x2 0xa0
0x10a0: V1480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10a1: V1481 = AND 0xffffffffffffffffffffffffffffffffffffffff V1475
0x10a2: V1482 = BALANCE V1481
0x10a4: V1483 = GT V1474 V1482
0x10a5: V1484 = ISZERO V1483
0x10a6: V1485 = 0x10b6
0x10a9: JUMPI 0x10b6 V1484
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, V1474]
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, V1474]

================================

Block 0x10aa
[0x10aa:0x10b5]
---
Predecessors: [0x1091]
Successors: [0x10b6]
---
0x10aa POP
0x10ab ADDRESS
0x10ac PUSH1 0x1
0x10ae PUSH1 0xa0
0x10b0 PUSH1 0x2
0x10b2 EXP
0x10b3 SUB
0x10b4 AND
0x10b5 BALANCE
---
0x10ab: V1486 = ADDRESS
0x10ac: V1487 = 0x1
0x10ae: V1488 = 0xa0
0x10b0: V1489 = 0x2
0x10b2: V1490 = EXP 0x2 0xa0
0x10b3: V1491 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10b4: V1492 = AND 0xffffffffffffffffffffffffffffffffffffffff V1486
0x10b5: V1493 = BALANCE V1492
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, V1474]
Stack pops: 1
Stack additions: [V1493]
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, V1493]

================================

Block 0x10b6
[0x10b6:0x10c2]
---
Predecessors: [0x1091, 0x10aa]
Successors: [0x10c3, 0x10cd]
---
0x10b6 JUMPDEST
0x10b7 PUSH1 0x7
0x10b9 SLOAD
0x10ba PUSH1 0x0
0x10bc SWAP1
0x10bd GT
0x10be ISZERO
0x10bf PUSH2 0x10cd
0x10c2 JUMPI
---
0x10b6: JUMPDEST 
0x10b7: V1494 = 0x7
0x10b9: V1495 = S[0x7]
0x10ba: V1496 = 0x0
0x10bd: V1497 = GT V1495 0x0
0x10be: V1498 = ISZERO V1497
0x10bf: V1499 = 0x10cd
0x10c2: JUMPI 0x10cd V1498
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, S0]

================================

Block 0x10c3
[0x10c3:0x10cc]
---
Predecessors: [0x10b6]
Successors: [0x10cd]
---
0x10c3 PUSH1 0x7
0x10c5 DUP1
0x10c6 SLOAD
0x10c7 PUSH1 0x0
0x10c9 NOT
0x10ca ADD
0x10cb SWAP1
0x10cc SSTORE
---
0x10c3: V1500 = 0x7
0x10c6: V1501 = S[0x7]
0x10c7: V1502 = 0x0
0x10c9: V1503 = NOT 0x0
0x10ca: V1504 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1501
0x10cc: S[0x7] = V1504
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, S0]

================================

Block 0x10cd
[0x10cd:0x10eb]
---
Predecessors: [0x10b6, 0x10c3]
Successors: [0x10ec, 0x1110]
---
0x10cd JUMPDEST
0x10ce PUSH1 0x0
0x10d0 PUSH1 0x1
0x10d2 DUP4
0x10d3 ADD
0x10d4 SSTORE
0x10d5 DUP2
0x10d6 SLOAD
0x10d7 PUSH1 0x1
0x10d9 PUSH1 0xa0
0x10db PUSH1 0x2
0x10dd EXP
0x10de SUB
0x10df SWAP1
0x10e0 DUP2
0x10e1 AND
0x10e2 CALLER
0x10e3 SWAP1
0x10e4 SWAP2
0x10e5 AND
0x10e6 EQ
0x10e7 ISZERO
0x10e8 PUSH2 0x1110
0x10eb JUMPI
---
0x10cd: JUMPDEST 
0x10ce: V1505 = 0x0
0x10d0: V1506 = 0x1
0x10d3: V1507 = ADD S1 0x1
0x10d4: S[V1507] = 0x0
0x10d6: V1508 = S[S1]
0x10d7: V1509 = 0x1
0x10d9: V1510 = 0xa0
0x10db: V1511 = 0x2
0x10dd: V1512 = EXP 0x2 0xa0
0x10de: V1513 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10e1: V1514 = AND 0xffffffffffffffffffffffffffffffffffffffff V1508
0x10e2: V1515 = CALLER
0x10e5: V1516 = AND 0xffffffffffffffffffffffffffffffffffffffff V1515
0x10e6: V1517 = EQ V1516 V1514
0x10e7: V1518 = ISZERO V1517
0x10e8: V1519 = 0x1110
0x10eb: JUMPI 0x1110 V1518
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, S0]

================================

Block 0x10ec
[0x10ec:0x110f]
---
Predecessors: [0x10cd]
Successors: [0x1110]
---
0x10ec PUSH1 0x0
0x10ee DUP1
0x10ef SLOAD
0x10f0 PUSH1 0x40
0x10f2 MLOAD
0x10f3 PUSH1 0x1
0x10f5 PUSH1 0xa0
0x10f7 PUSH1 0x2
0x10f9 EXP
0x10fa SUB
0x10fb SWAP2
0x10fc SWAP1
0x10fd SWAP2
0x10fe AND
0x10ff SWAP2
0x1100 SWAP1
0x1101 DUP4
0x1102 SWAP1
0x1103 DUP3
0x1104 DUP2
0x1105 DUP2
0x1106 DUP2
0x1107 DUP6
0x1108 DUP9
0x1109 DUP4
0x110a CALL
0x110b POP
0x110c POP
0x110d POP
0x110e POP
0x110f POP
---
0x10ec: V1520 = 0x0
0x10ef: V1521 = S[0x0]
0x10f0: V1522 = 0x40
0x10f2: V1523 = M[0x40]
0x10f3: V1524 = 0x1
0x10f5: V1525 = 0xa0
0x10f7: V1526 = 0x2
0x10f9: V1527 = EXP 0x2 0xa0
0x10fa: V1528 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10fe: V1529 = AND 0xffffffffffffffffffffffffffffffffffffffff V1521
0x110a: V1530 = CALL 0x0 V1529 S0 V1523 0x0 V1523 0x0
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, S0]

================================

Block 0x1110
[0x1110:0x1128]
---
Predecessors: [0x10cd, 0x10ec]
Successors: [0x1129, 0x114a]
---
0x1110 JUMPDEST
0x1111 PUSH1 0x0
0x1113 SLOAD
0x1114 PUSH1 0x1
0x1116 PUSH1 0xa0
0x1118 PUSH1 0x2
0x111a EXP
0x111b SUB
0x111c SWAP1
0x111d DUP2
0x111e AND
0x111f CALLER
0x1120 SWAP1
0x1121 SWAP2
0x1122 AND
0x1123 EQ
0x1124 ISZERO
0x1125 PUSH2 0x114a
0x1128 JUMPI
---
0x1110: JUMPDEST 
0x1111: V1531 = 0x0
0x1113: V1532 = S[0x0]
0x1114: V1533 = 0x1
0x1116: V1534 = 0xa0
0x1118: V1535 = 0x2
0x111a: V1536 = EXP 0x2 0xa0
0x111b: V1537 = SUB 0x10000000000000000000000000000000000000000 0x1
0x111e: V1538 = AND 0xffffffffffffffffffffffffffffffffffffffff V1532
0x111f: V1539 = CALLER
0x1122: V1540 = AND 0xffffffffffffffffffffffffffffffffffffffff V1539
0x1123: V1541 = EQ V1540 V1538
0x1124: V1542 = ISZERO V1541
0x1125: V1543 = 0x114a
0x1128: JUMPI 0x114a V1542
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, S0]

================================

Block 0x1129
[0x1129:0x1149]
---
Predecessors: [0x1110]
Successors: [0x114a]
---
0x1129 PUSH1 0x40
0x112b MLOAD
0x112c DUP3
0x112d SLOAD
0x112e PUSH1 0x1
0x1130 PUSH1 0xa0
0x1132 PUSH1 0x2
0x1134 EXP
0x1135 SUB
0x1136 AND
0x1137 SWAP1
0x1138 PUSH1 0x0
0x113a SWAP1
0x113b DUP4
0x113c SWAP1
0x113d DUP3
0x113e DUP2
0x113f DUP2
0x1140 DUP2
0x1141 DUP6
0x1142 DUP9
0x1143 DUP4
0x1144 CALL
0x1145 POP
0x1146 POP
0x1147 POP
0x1148 POP
0x1149 POP
---
0x1129: V1544 = 0x40
0x112b: V1545 = M[0x40]
0x112d: V1546 = S[S1]
0x112e: V1547 = 0x1
0x1130: V1548 = 0xa0
0x1132: V1549 = 0x2
0x1134: V1550 = EXP 0x2 0xa0
0x1135: V1551 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1136: V1552 = AND 0xffffffffffffffffffffffffffffffffffffffff V1546
0x1138: V1553 = 0x0
0x1144: V1554 = CALL 0x0 V1552 S0 V1545 0x0 V1545 0x0
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, S0]

================================

Block 0x114a
[0x114a:0x11c3]
---
Predecessors: [0x1110, 0x1129]
Successors: [0x11c4, 0x11dd]
---
0x114a JUMPDEST
0x114b CALLER
0x114c PUSH1 0x1
0x114e PUSH1 0xa0
0x1150 PUSH1 0x2
0x1152 EXP
0x1153 SUB
0x1154 AND
0x1155 DUP4
0x1156 DUP7
0x1157 PUSH1 0x0
0x1159 DUP1
0x115a MLOAD
0x115b PUSH1 0x20
0x115d PUSH2 0x13c3
0x1160 DUP4
0x1161 CODECOPY
0x1162 DUP2
0x1163 MLOAD
0x1164 SWAP2
0x1165 MSTORE
0x1166 DUP8
0x1167 PUSH1 0xb
0x1169 PUSH1 0x0
0x116b DUP8
0x116c PUSH1 0x40
0x116e MLOAD
0x116f DUP1
0x1170 DUP1
0x1171 PUSH1 0x20
0x1173 ADD
0x1174 DUP6
0x1175 DUP2
0x1176 MSTORE
0x1177 PUSH1 0x20
0x1179 ADD
0x117a DUP5
0x117b DUP2
0x117c MSTORE
0x117d PUSH1 0x20
0x117f ADD
0x1180 DUP4
0x1181 DUP2
0x1182 MSTORE
0x1183 PUSH1 0x20
0x1185 ADD
0x1186 DUP3
0x1187 DUP2
0x1188 SUB
0x1189 DUP3
0x118a MSTORE
0x118b DUP7
0x118c DUP2
0x118d DUP2
0x118e MLOAD
0x118f DUP2
0x1190 MSTORE
0x1191 PUSH1 0x20
0x1193 ADD
0x1194 SWAP2
0x1195 POP
0x1196 DUP1
0x1197 MLOAD
0x1198 SWAP1
0x1199 PUSH1 0x20
0x119b ADD
0x119c SWAP1
0x119d DUP1
0x119e DUP4
0x119f DUP4
0x11a0 DUP3
0x11a1 SWAP1
0x11a2 PUSH1 0x0
0x11a4 PUSH1 0x4
0x11a6 PUSH1 0x20
0x11a8 DUP5
0x11a9 PUSH1 0x1f
0x11ab ADD
0x11ac DIV
0x11ad PUSH1 0xf
0x11af MUL
0x11b0 PUSH1 0x3
0x11b2 ADD
0x11b3 CALL
0x11b4 POP
0x11b5 SWAP1
0x11b6 POP
0x11b7 SWAP1
0x11b8 DUP2
0x11b9 ADD
0x11ba SWAP1
0x11bb PUSH1 0x1f
0x11bd AND
0x11be DUP1
0x11bf ISZERO
0x11c0 PUSH2 0x11dd
0x11c3 JUMPI
---
0x114a: JUMPDEST 
0x114b: V1555 = CALLER
0x114c: V1556 = 0x1
0x114e: V1557 = 0xa0
0x1150: V1558 = 0x2
0x1152: V1559 = EXP 0x2 0xa0
0x1153: V1560 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1154: V1561 = AND 0xffffffffffffffffffffffffffffffffffffffff V1555
0x1157: V1562 = 0x0
0x115a: V1563 = M[0x0]
0x115b: V1564 = 0x20
0x115d: V1565 = 0x13c3
0x1161: CODECOPY 0x0 0x13c3 0x20
0x1163: V1566 = M[0x0]
0x1165: M[0x0] = V1563
0x1167: V1567 = 0xb
0x1169: V1568 = 0x0
0x116c: V1569 = 0x40
0x116e: V1570 = M[0x40]
0x1171: V1571 = 0x20
0x1173: V1572 = ADD 0x20 V1570
0x1176: M[V1572] = 0xb
0x1177: V1573 = 0x20
0x1179: V1574 = ADD 0x20 V1572
0x117c: M[V1574] = 0x0
0x117d: V1575 = 0x20
0x117f: V1576 = ADD 0x20 V1574
0x1182: M[V1576] = S0
0x1183: V1577 = 0x20
0x1185: V1578 = ADD 0x20 V1576
0x1188: V1579 = SUB V1578 V1570
0x118a: M[V1570] = V1579
0x118e: V1580 = M[S3]
0x1190: M[V1578] = V1580
0x1191: V1581 = 0x20
0x1193: V1582 = ADD 0x20 V1578
0x1197: V1583 = M[S3]
0x1199: V1584 = 0x20
0x119b: V1585 = ADD 0x20 S3
0x11a2: V1586 = 0x0
0x11a4: V1587 = 0x4
0x11a6: V1588 = 0x20
0x11a9: V1589 = 0x1f
0x11ab: V1590 = ADD 0x1f V1583
0x11ac: V1591 = DIV V1590 0x20
0x11ad: V1592 = 0xf
0x11af: V1593 = MUL 0xf V1591
0x11b0: V1594 = 0x3
0x11b2: V1595 = ADD 0x3 V1593
0x11b3: V1596 = CALL V1595 0x4 0x0 V1585 V1583 V1582 V1583
0x11b9: V1597 = ADD V1583 V1582
0x11bb: V1598 = 0x1f
0x11bd: V1599 = AND 0x1f V1583
0x11bf: V1600 = ISZERO V1599
0x11c0: V1601 = 0x11dd
0x11c3: JUMPI 0x11dd V1600
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V1561, S2, S4, V1566, S3, 0xb, 0x0, S0, V1570, V1570, V1597, V1599]
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, S0, V1561, S2, S4, V1566, S3, 0xb, 0x0, S0, V1570, V1570, V1597, V1599]

================================

Block 0x11c4
[0x11c4:0x11dc]
---
Predecessors: [0x114a]
Successors: [0x11dd]
---
0x11c4 DUP1
0x11c5 DUP3
0x11c6 SUB
0x11c7 DUP1
0x11c8 MLOAD
0x11c9 PUSH1 0x1
0x11cb DUP4
0x11cc PUSH1 0x20
0x11ce SUB
0x11cf PUSH2 0x100
0x11d2 EXP
0x11d3 SUB
0x11d4 NOT
0x11d5 AND
0x11d6 DUP2
0x11d7 MSTORE
0x11d8 PUSH1 0x20
0x11da ADD
0x11db SWAP2
0x11dc POP
---
0x11c6: V1602 = SUB V1597 V1599
0x11c8: V1603 = M[V1602]
0x11c9: V1604 = 0x1
0x11cc: V1605 = 0x20
0x11ce: V1606 = SUB 0x20 V1599
0x11cf: V1607 = 0x100
0x11d2: V1608 = EXP 0x100 V1606
0x11d3: V1609 = SUB V1608 0x1
0x11d4: V1610 = NOT V1609
0x11d5: V1611 = AND V1610 V1603
0x11d7: M[V1602] = V1611
0x11d8: V1612 = 0x20
0x11da: V1613 = ADD 0x20 V1602
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S18, {0x132, 0xd58}, S16, S15, S14, S13, S12, V1561, S10, S9, V1566, S7, 0xb, 0x0, S4, V1570, V1570, V1597, V1599]
Stack pops: 2
Stack additions: [V1613, S0]
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S18, {0x132, 0xd58}, S16, S15, S14, S13, S12, V1561, S10, S9, V1566, S7, 0xb, 0x0, S4, V1570, V1570, V1613, V1599]

================================

Block 0x11dd
[0x11dd:0x11ed]
---
Predecessors: [0x114a, 0x11c4]
Successors: [0x11ee]
---
0x11dd JUMPDEST
0x11de POP
0x11df SWAP6
0x11e0 POP
0x11e1 POP
0x11e2 POP
0x11e3 POP
0x11e4 POP
0x11e5 POP
0x11e6 PUSH1 0x40
0x11e8 MLOAD
0x11e9 DUP1
0x11ea SWAP2
0x11eb SUB
0x11ec SWAP1
0x11ed LOG4
---
0x11dd: JUMPDEST 
0x11e6: V1614 = 0x40
0x11e8: V1615 = M[0x40]
0x11eb: V1616 = SUB S1 V1615
0x11ed: LOG V1615 V1616 V1566 S9 S10 V1561
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S18, {0x132, 0xd58}, S16, S15, S14, S13, S12, V1561, S10, S9, V1566, S7, 0xb, 0x0, S4, V1570, V1570, S1, V1599]
Stack pops: 12
Stack additions: []
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S18, {0x132, 0xd58}, S16, S15, S14, S13, S12]

================================

Block 0x11ee
[0x11ee:0x11f4]
---
Predecessors: [0x682, 0x11dd, 0x122a]
Successors: [0x132, 0xd58]
---
0x11ee JUMPDEST
0x11ef POP
0x11f0 POP
0x11f1 POP
0x11f2 POP
0x11f3 POP
0x11f4 JUMP
---
0x11ee: JUMPDEST 
0x11f4: JUMP {0x132, 0xd58}
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S6]

================================

Block 0x11f5
[0x11f5:0x120e]
---
Predecessors: [0x664]
Successors: [0x120f, 0x1224]
---
0x11f5 JUMPDEST
0x11f6 DUP2
0x11f7 SLOAD
0x11f8 PUSH1 0x1
0x11fa PUSH1 0xa0
0x11fc PUSH1 0x2
0x11fe EXP
0x11ff SUB
0x1200 SWAP1
0x1201 DUP2
0x1202 AND
0x1203 CALLER
0x1204 SWAP1
0x1205 SWAP2
0x1206 AND
0x1207 EQ
0x1208 DUP1
0x1209 ISZERO
0x120a SWAP1
0x120b PUSH2 0x1224
0x120e JUMPI
---
0x11f5: JUMPDEST 
0x11f7: V1617 = S[V532]
0x11f8: V1618 = 0x1
0x11fa: V1619 = 0xa0
0x11fc: V1620 = 0x2
0x11fe: V1621 = EXP 0x2 0xa0
0x11ff: V1622 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1202: V1623 = AND 0xffffffffffffffffffffffffffffffffffffffff V1617
0x1203: V1624 = CALLER
0x1206: V1625 = AND 0xffffffffffffffffffffffffffffffffffffffff V1624
0x1207: V1626 = EQ V1625 V1623
0x1209: V1627 = ISZERO V1626
0x120b: V1628 = 0x1224
0x120e: JUMPI 0x1224 V1626
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, V532, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V1627]
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, V532, 0x0, V1627]

================================

Block 0x120f
[0x120f:0x1223]
---
Predecessors: [0x11f5]
Successors: [0x1224]
---
0x120f POP
0x1210 PUSH1 0x0
0x1212 SLOAD
0x1213 PUSH1 0x1
0x1215 PUSH1 0xa0
0x1217 PUSH1 0x2
0x1219 EXP
0x121a SUB
0x121b SWAP1
0x121c DUP2
0x121d AND
0x121e CALLER
0x121f SWAP1
0x1220 SWAP2
0x1221 AND
0x1222 EQ
0x1223 ISZERO
---
0x1210: V1629 = 0x0
0x1212: V1630 = S[0x0]
0x1213: V1631 = 0x1
0x1215: V1632 = 0xa0
0x1217: V1633 = 0x2
0x1219: V1634 = EXP 0x2 0xa0
0x121a: V1635 = SUB 0x10000000000000000000000000000000000000000 0x1
0x121d: V1636 = AND 0xffffffffffffffffffffffffffffffffffffffff V1630
0x121e: V1637 = CALLER
0x1221: V1638 = AND 0xffffffffffffffffffffffffffffffffffffffff V1637
0x1222: V1639 = EQ V1638 V1636
0x1223: V1640 = ISZERO V1639
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S7, {0x132, 0xd58}, S5, S4, S3, V532, 0x0, V1627]
Stack pops: 1
Stack additions: [V1640]
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S7, {0x132, 0xd58}, S5, S4, S3, V532, 0x0, V1640]

================================

Block 0x1224
[0x1224:0x1229]
---
Predecessors: [0x11f5, 0x120f]
Successors: [0x1091, 0x122a]
---
0x1224 JUMPDEST
0x1225 ISZERO
0x1226 PUSH2 0x1091
0x1229 JUMPI
---
0x1224: JUMPDEST 
0x1225: V1641 = ISZERO S0
0x1226: V1642 = 0x1091
0x1229: JUMPI 0x1091 V1641
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S7, {0x132, 0xd58}, S5, S4, S3, V532, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S7, {0x132, 0xd58}, S5, S4, S3, V532, 0x0]

================================

Block 0x122a
[0x122a:0x122d]
---
Predecessors: [0x1224]
Successors: [0x11ee]
---
0x122a PUSH2 0x11ee
0x122d JUMP
---
0x122a: V1643 = 0x11ee
0x122d: JUMP 0x11ee
---
Entry stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132, V405, V391, V409, V411, V413, S6, {0x132, 0xd58}, S4, S3, S2, S1, 0x0]

================================

Block 0x122e
[0x122e:0x1246]
---
Predecessors: [0x71c]
Successors: [0x1247, 0x1288]
---
0x122e JUMPDEST
0x122f PUSH1 0xb
0x1231 SLOAD
0x1232 PUSH3 0x10000
0x1236 SWAP1
0x1237 DIV
0x1238 PUSH2 0xffff
0x123b SWAP1
0x123c DUP2
0x123d AND
0x123e SWAP1
0x123f DUP3
0x1240 AND
0x1241 GT
0x1242 ISZERO
0x1243 PUSH2 0x1288
0x1246 JUMPI
---
0x122e: JUMPDEST 
0x122f: V1644 = 0xb
0x1231: V1645 = S[0xb]
0x1232: V1646 = 0x10000
0x1237: V1647 = DIV V1645 0x10000
0x1238: V1648 = 0xffff
0x123d: V1649 = AND 0xffff V1647
0x1240: V1650 = AND V578 0xffff
0x1241: V1651 = GT V1650 V1649
0x1242: V1652 = ISZERO V1651
0x1243: V1653 = 0x1288
0x1246: JUMPI 0x1288 V1652
---
Entry stack: [V10, 0x132, V572, V558, V576, V578]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x132, V572, V558, V576, V578]

================================

Block 0x1247
[0x1247:0x1282]
---
Predecessors: [0x122e]
Successors: [0x37b]
---
0x1247 PUSH1 0x40
0x1249 DUP1
0x124a MLOAD
0x124b DUP1
0x124c DUP3
0x124d ADD
0x124e SWAP1
0x124f SWAP2
0x1250 MSTORE
0x1251 PUSH1 0x15
0x1253 DUP2
0x1254 MSTORE
0x1255 PUSH32 0x5f636f756e74203e2070656e64696e67436f756e740000000000000000000000
0x1276 PUSH1 0x20
0x1278 DUP3
0x1279 ADD
0x127a MSTORE
0x127b PUSH2 0x1283
0x127e SWAP1
0x127f PUSH2 0x37b
0x1282 JUMP
---
0x1247: V1654 = 0x40
0x124a: V1655 = M[0x40]
0x124d: V1656 = ADD 0x40 V1655
0x1250: M[0x40] = V1656
0x1251: V1657 = 0x15
0x1254: M[V1655] = 0x15
0x1255: V1658 = 0x5f636f756e74203e2070656e64696e67436f756e740000000000000000000000
0x1276: V1659 = 0x20
0x1279: V1660 = ADD V1655 0x20
0x127a: M[V1660] = 0x5f636f756e74203e2070656e64696e67436f756e740000000000000000000000
0x127b: V1661 = 0x1283
0x127f: V1662 = 0x37b
0x1282: JUMP 0x37b
---
Entry stack: [V10, 0x132, V572, V558, V576, V578]
Stack pops: 0
Stack additions: [0x1283, V1655]
Exit stack: [V10, 0x132, V572, V558, V576, V578, 0x1283, V1655]

================================

Block 0x1283
[0x1283:0x1287]
---
Predecessors: [0x3fd]
Successors: [0xd19]
---
0x1283 JUMPDEST
0x1284 PUSH2 0xd19
0x1287 JUMP
---
0x1283: JUMPDEST 
0x1284: V1663 = 0xd19
0x1287: JUMP 0xd19
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1288
[0x1288:0x1346]
---
Predecessors: [0x122e]
Successors: [0xd08, 0x1347]
---
0x1288 JUMPDEST
0x1289 PUSH1 0xb
0x128b DUP1
0x128c SLOAD
0x128d PUSH3 0x10000
0x1291 DUP1
0x1292 DUP3
0x1293 DIV
0x1294 PUSH2 0xffff
0x1297 SWAP1
0x1298 DUP2
0x1299 AND
0x129a DUP6
0x129b SWAP1
0x129c SUB
0x129d SWAP1
0x129e SWAP2
0x129f MUL
0x12a0 PUSH4 0xffff0000
0x12a5 NOT
0x12a6 SWAP1
0x12a7 SWAP3
0x12a8 AND
0x12a9 SWAP2
0x12aa SWAP1
0x12ab SWAP2
0x12ac OR
0x12ad PUSH2 0xffff
0x12b0 NOT
0x12b1 DUP2
0x12b2 AND
0x12b3 SWAP1
0x12b4 DUP3
0x12b5 AND
0x12b6 DUP5
0x12b7 SWAP1
0x12b8 SUB
0x12b9 OR
0x12ba SWAP1
0x12bb SWAP2
0x12bc SSTORE
0x12bd PUSH1 0x40
0x12bf DUP1
0x12c0 MLOAD
0x12c1 PUSH1 0x2
0x12c3 PUSH1 0x20
0x12c5 DUP3
0x12c6 DUP2
0x12c7 ADD
0x12c8 DUP3
0x12c9 SWAP1
0x12ca MSTORE
0x12cb SWAP4
0x12cc DUP6
0x12cd AND
0x12ce SWAP3
0x12cf DUP3
0x12d0 ADD
0x12d1 SWAP3
0x12d2 SWAP1
0x12d3 SWAP3
0x12d4 MSTORE
0x12d5 PUSH1 0x0
0x12d7 PUSH1 0x60
0x12d9 DUP3
0x12da ADD
0x12db DUP2
0x12dc SWAP1
0x12dd MSTORE
0x12de PUSH1 0x80
0x12e0 DUP1
0x12e1 DUP4
0x12e2 MSTORE
0x12e3 DUP8
0x12e4 MLOAD
0x12e5 SWAP1
0x12e6 DUP4
0x12e7 ADD
0x12e8 MSTORE
0x12e9 DUP7
0x12ea MLOAD
0x12eb CALLER
0x12ec PUSH1 0x1
0x12ee PUSH1 0xa0
0x12f0 PUSH1 0x2
0x12f2 EXP
0x12f3 SUB
0x12f4 AND
0x12f5 SWAP5
0x12f6 DUP8
0x12f7 SWAP5
0x12f8 DUP11
0x12f9 SWAP5
0x12fa PUSH1 0x0
0x12fc DUP1
0x12fd MLOAD
0x12fe PUSH1 0x20
0x1300 PUSH2 0x13c3
0x1303 DUP4
0x1304 CODECOPY
0x1305 DUP2
0x1306 MLOAD
0x1307 SWAP2
0x1308 MSTORE
0x1309 SWAP5
0x130a DUP12
0x130b SWAP5
0x130c SWAP3
0x130d SWAP4
0x130e DUP11
0x130f SWAP4
0x1310 SWAP2
0x1311 SWAP3
0x1312 SWAP2
0x1313 DUP3
0x1314 SWAP2
0x1315 PUSH1 0xa0
0x1317 DUP4
0x1318 ADD
0x1319 SWAP2
0x131a DUP9
0x131b DUP3
0x131c ADD
0x131d SWAP2
0x131e DUP2
0x131f SWAP1
0x1320 DUP5
0x1321 SWAP1
0x1322 DUP3
0x1323 SWAP1
0x1324 DUP6
0x1325 SWAP1
0x1326 DUP11
0x1327 SWAP1
0x1328 PUSH1 0x4
0x132a SWAP1
0x132b PUSH1 0x1f
0x132d DUP6
0x132e ADD
0x132f DIV
0x1330 PUSH1 0xf
0x1332 MUL
0x1333 PUSH1 0x3
0x1335 ADD
0x1336 CALL
0x1337 POP
0x1338 SWAP1
0x1339 POP
0x133a SWAP1
0x133b DUP2
0x133c ADD
0x133d SWAP1
0x133e PUSH1 0x1f
0x1340 AND
0x1341 DUP1
0x1342 ISZERO
0x1343 PUSH2 0xd08
0x1346 JUMPI
---
0x1288: JUMPDEST 
0x1289: V1664 = 0xb
0x128c: V1665 = S[0xb]
0x128d: V1666 = 0x10000
0x1293: V1667 = DIV V1665 0x10000
0x1294: V1668 = 0xffff
0x1299: V1669 = AND 0xffff V1667
0x129c: V1670 = SUB V1669 V578
0x129f: V1671 = MUL 0x10000 V1670
0x12a0: V1672 = 0xffff0000
0x12a5: V1673 = NOT 0xffff0000
0x12a8: V1674 = AND V1665 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff
0x12ac: V1675 = OR V1674 V1671
0x12ad: V1676 = 0xffff
0x12b0: V1677 = NOT 0xffff
0x12b2: V1678 = AND V1675 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000
0x12b5: V1679 = AND 0xffff V1675
0x12b8: V1680 = SUB V1679 V578
0x12b9: V1681 = OR V1680 V1678
0x12bc: S[0xb] = V1681
0x12bd: V1682 = 0x40
0x12c0: V1683 = M[0x40]
0x12c1: V1684 = 0x2
0x12c3: V1685 = 0x20
0x12c7: V1686 = ADD 0x20 V1683
0x12ca: M[V1686] = 0x2
0x12cd: V1687 = AND V578 0xffff
0x12d0: V1688 = ADD V1683 0x40
0x12d4: M[V1688] = V1687
0x12d5: V1689 = 0x0
0x12d7: V1690 = 0x60
0x12da: V1691 = ADD V1683 0x60
0x12dd: M[V1691] = 0x0
0x12de: V1692 = 0x80
0x12e2: M[V1683] = 0x80
0x12e4: V1693 = M[V558]
0x12e7: V1694 = ADD V1683 0x80
0x12e8: M[V1694] = V1693
0x12ea: V1695 = M[V558]
0x12eb: V1696 = CALLER
0x12ec: V1697 = 0x1
0x12ee: V1698 = 0xa0
0x12f0: V1699 = 0x2
0x12f2: V1700 = EXP 0x2 0xa0
0x12f3: V1701 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12f4: V1702 = AND 0xffffffffffffffffffffffffffffffffffffffff V1696
0x12fa: V1703 = 0x0
0x12fd: V1704 = M[0x0]
0x12fe: V1705 = 0x20
0x1300: V1706 = 0x13c3
0x1304: CODECOPY 0x0 0x13c3 0x20
0x1306: V1707 = M[0x0]
0x1308: M[0x0] = V1704
0x1315: V1708 = 0xa0
0x1318: V1709 = ADD V1683 0xa0
0x131c: V1710 = ADD 0x20 V558
0x1328: V1711 = 0x4
0x132b: V1712 = 0x1f
0x132e: V1713 = ADD V1695 0x1f
0x132f: V1714 = DIV V1713 0x20
0x1330: V1715 = 0xf
0x1332: V1716 = MUL 0xf V1714
0x1333: V1717 = 0x3
0x1335: V1718 = ADD 0x3 V1716
0x1336: V1719 = CALL V1718 0x4 0x0 V1710 V1695 V1709 V1695
0x133c: V1720 = ADD V1695 V1709
0x133e: V1721 = 0x1f
0x1340: V1722 = AND 0x1f V1695
0x1342: V1723 = ISZERO V1722
0x1343: V1724 = 0xd08
0x1346: JUMPI 0xd08 V1723
---
Entry stack: [V10, 0x132, V572, V558, V576, V578]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V1702, S1, S3, V1707, S2, 0x2, S0, 0x0, V1683, V1683, V1720, V1722]
Exit stack: [V10, 0x132, V572, V558, V576, V578, V1702, V576, V572, V1707, V558, 0x2, V578, 0x0, V1683, V1683, V1720, V1722]

================================

Block 0x1347
[0x1347:0x1374]
---
Predecessors: [0x1288]
Successors: [0x132]
---
0x1347 DUP1
0x1348 DUP3
0x1349 SUB
0x134a DUP1
0x134b MLOAD
0x134c PUSH1 0x1
0x134e DUP4
0x134f PUSH1 0x20
0x1351 SUB
0x1352 PUSH2 0x100
0x1355 EXP
0x1356 SUB
0x1357 NOT
0x1358 AND
0x1359 DUP2
0x135a MSTORE
0x135b PUSH1 0x20
0x135d ADD
0x135e SWAP2
0x135f POP
0x1360 POP
0x1361 SWAP6
0x1362 POP
0x1363 POP
0x1364 POP
0x1365 POP
0x1366 POP
0x1367 POP
0x1368 PUSH1 0x40
0x136a MLOAD
0x136b DUP1
0x136c SWAP2
0x136d SUB
0x136e SWAP1
0x136f LOG4
0x1370 POP
0x1371 POP
0x1372 POP
0x1373 POP
0x1374 JUMP
---
0x1349: V1725 = SUB V1720 V1722
0x134b: V1726 = M[V1725]
0x134c: V1727 = 0x1
0x134f: V1728 = 0x20
0x1351: V1729 = SUB 0x20 V1722
0x1352: V1730 = 0x100
0x1355: V1731 = EXP 0x100 V1729
0x1356: V1732 = SUB V1731 0x1
0x1357: V1733 = NOT V1732
0x1358: V1734 = AND V1733 V1726
0x135a: M[V1725] = V1734
0x135b: V1735 = 0x20
0x135d: V1736 = ADD 0x20 V1725
0x1368: V1737 = 0x40
0x136a: V1738 = M[0x40]
0x136d: V1739 = SUB V1736 V1738
0x136f: LOG V1738 V1739 V1707 V572 V576 V1702
0x1374: JUMP 0x132
---
Entry stack: [V10, 0x132, V572, V558, V576, V578, V1702, V576, V572, V1707, V558, 0x2, V578, 0x0, V1683, V1683, V1720, V1722]
Stack pops: 17
Stack additions: []
Exit stack: [V10]

================================

Block 0x1375
[0x1375:0x138a]
---
Predecessors: [0x788]
Successors: [0x138b, 0x1399]
---
0x1375 JUMPDEST
0x1376 PUSH1 0x6
0x1378 SLOAD
0x1379 ADDRESS
0x137a PUSH1 0x1
0x137c PUSH1 0xa0
0x137e PUSH1 0x2
0x1380 EXP
0x1381 SUB
0x1382 AND
0x1383 BALANCE
0x1384 SWAP1
0x1385 GT
0x1386 ISZERO
0x1387 PUSH2 0x1399
0x138a JUMPI
---
0x1375: JUMPDEST 
0x1376: V1740 = 0x6
0x1378: V1741 = S[0x6]
0x1379: V1742 = ADDRESS
0x137a: V1743 = 0x1
0x137c: V1744 = 0xa0
0x137e: V1745 = 0x2
0x1380: V1746 = EXP 0x2 0xa0
0x1381: V1747 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1382: V1748 = AND 0xffffffffffffffffffffffffffffffffffffffff V1742
0x1383: V1749 = BALANCE V1748
0x1385: V1750 = GT V1741 V1749
0x1386: V1751 = ISZERO V1750
0x1387: V1752 = 0x1399
0x138a: JUMPI 0x1399 V1751
---
Entry stack: [V10, 0x132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132]

================================

Block 0x138b
[0x138b:0x1398]
---
Predecessors: [0x1375]
Successors: [0x1399]
---
0x138b ADDRESS
0x138c PUSH1 0x1
0x138e PUSH1 0xa0
0x1390 PUSH1 0x2
0x1392 EXP
0x1393 SUB
0x1394 AND
0x1395 BALANCE
0x1396 PUSH1 0x6
0x1398 SSTORE
---
0x138b: V1753 = ADDRESS
0x138c: V1754 = 0x1
0x138e: V1755 = 0xa0
0x1390: V1756 = 0x2
0x1392: V1757 = EXP 0x2 0xa0
0x1393: V1758 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1394: V1759 = AND 0xffffffffffffffffffffffffffffffffffffffff V1753
0x1395: V1760 = BALANCE V1759
0x1396: V1761 = 0x6
0x1398: S[0x6] = V1760
---
Entry stack: [V10, 0x132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x132]

================================

Block 0x1399
[0x1399:0x13c2]
---
Predecessors: [0x1375, 0x138b]
Successors: [0x132]
---
0x1399 JUMPDEST
0x139a PUSH1 0x6
0x139c SLOAD
0x139d PUSH1 0x1
0x139f SLOAD
0x13a0 PUSH1 0x40
0x13a2 MLOAD
0x13a3 PUSH1 0x1
0x13a5 PUSH1 0xa0
0x13a7 PUSH1 0x2
0x13a9 EXP
0x13aa SUB
0x13ab SWAP2
0x13ac SWAP1
0x13ad SWAP2
0x13ae AND
0x13af SWAP2
0x13b0 PUSH1 0x0
0x13b2 SWAP2
0x13b3 DUP3
0x13b4 DUP2
0x13b5 DUP2
0x13b6 DUP2
0x13b7 DUP6
0x13b8 DUP9
0x13b9 DUP4
0x13ba CALL
0x13bb POP
0x13bc POP
0x13bd POP
0x13be PUSH1 0x6
0x13c0 SSTORE
0x13c1 POP
0x13c2 JUMP
---
0x1399: JUMPDEST 
0x139a: V1762 = 0x6
0x139c: V1763 = S[0x6]
0x139d: V1764 = 0x1
0x139f: V1765 = S[0x1]
0x13a0: V1766 = 0x40
0x13a2: V1767 = M[0x40]
0x13a3: V1768 = 0x1
0x13a5: V1769 = 0xa0
0x13a7: V1770 = 0x2
0x13a9: V1771 = EXP 0x2 0xa0
0x13aa: V1772 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13ae: V1773 = AND 0xffffffffffffffffffffffffffffffffffffffff V1765
0x13b0: V1774 = 0x0
0x13ba: V1775 = CALL 0x0 V1773 V1763 V1767 0x0 V1767 0x0
0x13be: V1776 = 0x6
0x13c0: S[0x6] = 0x0
0x13c2: JUMP 0x132
---
Entry stack: [V10, 0x132]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x13c3
[0x13c3:0x13e7]
---
Predecessors: []
Successors: []
---
0x13c3 CREATE
0x13c4 SUB
0x13c5 PUSH10 0x312e90a2162ba2c7ce64
0x13d0 PUSH23 0xf08631da2ef74e7ccea0dcd91aa05b70159a
---
0x13c3: V1777 = CREATE S0 S1 S2
0x13c4: V1778 = SUB V1777 S3
0x13c5: V1779 = 0x312e90a2162ba2c7ce64
0x13d0: V1780 = 0xf08631da2ef74e7ccea0dcd91aa05b70159a
---
Entry stack: []
Stack pops: 4
Stack additions: [V1778, 0x312e90a2162ba2c7ce64, 0xf08631da2ef74e7ccea0dcd91aa05b70159a]
Exit stack: [V1778, 0x312e90a2162ba2c7ce64, 0xf08631da2ef74e7ccea0dcd91aa05b70159a]

================================

Function 0:
Public function signature: 0x12f52ee
Entry block: 0x134
Exit block: 0x7de
Body: 0x134, 0x7de

Function 1:
Public function signature: 0x6661abd
Entry block: 0x17a
Exit block: 0x81c
Body: 0x17a, 0x81c

Function 2:
Public function signature: 0x6909f69
Entry block: 0x18d
Exit block: 0x132
Body: 0x132, 0x18d, 0x1ed, 0x295, 0x2ae, 0x2bf

Function 3:
Public function signature: 0x8551a53
Entry block: 0x2c3
Exit block: 0x834
Body: 0x2c3, 0x834

Function 4:
Public function signature: 0xa3cb663
Entry block: 0x2d5
Exit block: 0x851
Body: 0x2d5, 0x851

Function 5:
Public function signature: 0xfb59f95
Entry block: 0x2de
Exit block: 0x132
Body: 0x132, 0x2de, 0x343, 0x863, 0x9c9, 0x9e2, 0x9f3, 0x9fc, 0xa0d, 0xa49, 0xa4e, 0xa61, 0xa9d, 0xaba

Function 6:
Public function signature: 0x200d2ed2
Entry block: 0x40d
Exit block: 0x81c
Body: 0x40d, 0x81c

Function 7:
Public function signature: 0x309e21a9
Entry block: 0x41a
Exit block: 0x851
Body: 0x41a, 0x851

Function 8:
Public function signature: 0x3262fd9a
Entry block: 0x423
Exit block: 0x132
Body: 0x132, 0x423, 0x447, 0xaf6, 0xb04, 0xb08, 0xb19, 0xb1d, 0xb36, 0xb42, 0xb52, 0xb5c, 0xb62, 0xb77, 0xb7b, 0xb88, 0xbb1, 0xbd7, 0xbdc, 0xbe9

Function 9:
Public function signature: 0x34d24bff
Entry block: 0x44b
Exit block: 0x132
Body: 0x132, 0x44b, 0x4b2, 0xc11, 0xc1f, 0xc2f, 0xc47, 0xc4e, 0xc67, 0xc6e, 0xcef, 0xd08, 0xd19, 0xd1f, 0xd39, 0xd4e, 0xd54

Function 10:
Public function signature: 0x3cc08a46
Entry block: 0x4b6
Exit block: 0x132
Body: 0x132, 0x4b6, 0x524, 0x53c, 0xd58, 0xdd5, 0xdee, 0xdff, 0xe07, 0xe32

Function 11:
Public function signature: 0x41c0e1b5
Entry block: 0x578
Exit block: 0xe73
Body: 0x132, 0x578, 0x58b, 0xe37, 0xe44, 0xe46, 0xe53, 0xe57, 0xe6f, 0xe73

Function 12:
Public function signature: 0x63ee7c8d
Entry block: 0x596
Exit block: 0x851
Body: 0x596, 0x851

Function 13:
Public function signature: 0x6958420b
Entry block: 0x59f
Exit block: 0x132
Body: 0x132, 0x59f, 0x60b, 0x9e2, 0x9f3, 0xe81, 0xe9e, 0xea2, 0xeb0, 0xeb4, 0xecd, 0xedf, 0xee5, 0xee9, 0xef7, 0xf00, 0xf06, 0xf0a, 0xf22, 0xf32, 0xf3f, 0xf46, 0xf65, 0xfa1, 0x105b, 0x108c

Function 14:
Public function signature: 0x6fd63728
Entry block: 0x60f
Exit block: 0x851
Body: 0x60f, 0x851

Function 15:
Public function signature: 0x95a5dfc0
Entry block: 0x618
Exit block: 0x132
Body: 0x132, 0x618

Function 16:
Public function signature: 0x97a993aa
Entry block: 0x686
Exit block: 0x851
Body: 0x686, 0x851

Function 17:
Public function signature: 0x9e05c118
Entry block: 0x69e
Exit block: 0x81c
Body: 0x69e, 0x81c

Function 18:
Public function signature: 0xa035b1fe
Entry block: 0x6ab
Exit block: 0x851
Body: 0x6ab, 0x851

Function 19:
Public function signature: 0xba491b78
Entry block: 0x6b4
Exit block: 0x132
Body: 0x132, 0x6b4, 0x71c, 0x72e, 0xd08, 0xd19, 0x122e, 0x1247, 0x1283, 0x1288, 0x1347

Function 20:
Public function signature: 0xceb98dc7
Entry block: 0x76a
Exit block: 0x132
Body: 0x132, 0x76a

Function 21:
Public function signature: 0xdb8d55f1
Entry block: 0x788
Exit block: 0x132
Body: 0x132, 0x788, 0x7a2, 0xe44, 0x1375, 0x138b, 0x1399

Function 22:
Public function signature: 0xdc3ef685
Entry block: 0x7a6
Exit block: 0x851
Body: 0x7a6, 0x851

Function 23:
Public function signature: 0xde0d0850
Entry block: 0x7af
Exit block: 0x851
Body: 0x7af, 0x851

Function 24:
Public function signature: 0xea70b4af
Entry block: 0x7b8
Exit block: 0x81c
Body: 0x7b8, 0x81c

Function 25:
Public function signature: 0xfe25e00a
Entry block: 0x7cc
Exit block: 0x834
Body: 0x7cc, 0x834

Function 26:
Public fallback function
Entry block: 0x132
Exit block: 0x132
Body: 0x132

Function 27:
Private function
Entry block: 0x664
Exit block: 0x11ee
Body: 0x664, 0x682, 0x1091, 0x10aa, 0x10b6, 0x10c3, 0x10cd, 0x10ec, 0x1110, 0x1129, 0x114a, 0x11c4, 0x11dd, 0x11ee, 0x11f5, 0x120f, 0x1224, 0x122a

Function 28:
Private function
Entry block: 0x37b
Exit block: 0x3fd
Body: 0x37b, 0x3e4, 0x3fd

