Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xbf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xbf
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xbf
0xa: JUMPI 0xbf V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x3c9]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x41c0e1b5
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x3c9
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x41c0e1b5
0x20: V14 = EQ V12 0x41c0e1b5
0x21: V15 = 0x3c9
0x24: JUMPI 0x3c9 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x3de]
---
0x25 DUP1
0x26 PUSH4 0x42e94c90
0x2b EQ
0x2c PUSH2 0x3de
0x2f JUMPI
---
0x26: V16 = 0x42e94c90
0x2b: V17 = EQ 0x42e94c90 V12
0x2c: V18 = 0x3de
0x2f: JUMPI 0x3de V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x40f]
---
0x30 DUP1
0x31 PUSH4 0x461ac019
0x36 EQ
0x37 PUSH2 0x40f
0x3a JUMPI
---
0x31: V19 = 0x461ac019
0x36: V20 = EQ 0x461ac019 V12
0x37: V21 = 0x40f
0x3a: JUMPI 0x40f V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x422]
---
0x3b DUP1
0x3c PUSH4 0x79ba5097
0x41 EQ
0x42 PUSH2 0x422
0x45 JUMPI
---
0x3c: V22 = 0x79ba5097
0x41: V23 = EQ 0x79ba5097 V12
0x42: V24 = 0x422
0x45: JUMPI 0x422 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x435]
---
0x46 DUP1
0x47 PUSH4 0x8616bc8b
0x4c EQ
0x4d PUSH2 0x435
0x50 JUMPI
---
0x47: V25 = 0x8616bc8b
0x4c: V26 = EQ 0x8616bc8b V12
0x4d: V27 = 0x435
0x50: JUMPI 0x435 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x448]
---
0x51 DUP1
0x52 PUSH4 0x8da5cb5b
0x57 EQ
0x58 PUSH2 0x448
0x5b JUMPI
---
0x52: V28 = 0x8da5cb5b
0x57: V29 = EQ 0x8da5cb5b V12
0x58: V30 = 0x448
0x5b: JUMPI 0x448 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x477]
---
0x5c DUP1
0x5d PUSH4 0x90fd67fc
0x62 EQ
0x63 PUSH2 0x477
0x66 JUMPI
---
0x5d: V31 = 0x90fd67fc
0x62: V32 = EQ 0x90fd67fc V12
0x63: V33 = 0x477
0x66: JUMPI 0x477 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x48a]
---
0x67 DUP1
0x68 PUSH4 0xae42a63c
0x6d EQ
0x6e PUSH2 0x48a
0x71 JUMPI
---
0x68: V34 = 0xae42a63c
0x6d: V35 = EQ 0xae42a63c V12
0x6e: V36 = 0x48a
0x71: JUMPI 0x48a V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x4b1]
---
0x72 DUP1
0x73 PUSH4 0xc3f53e94
0x78 EQ
0x79 PUSH2 0x4b1
0x7c JUMPI
---
0x73: V37 = 0xc3f53e94
0x78: V38 = EQ 0xc3f53e94 V12
0x79: V39 = 0x4b1
0x7c: JUMPI 0x4b1 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x4d0]
---
0x7d DUP1
0x7e PUSH4 0xd4ee1d90
0x83 EQ
0x84 PUSH2 0x4d0
0x87 JUMPI
---
0x7e: V40 = 0xd4ee1d90
0x83: V41 = EQ 0xd4ee1d90 V12
0x84: V42 = 0x4d0
0x87: JUMPI 0x4d0 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x4e3]
---
0x88 DUP1
0x89 PUSH4 0xd956634f
0x8e EQ
0x8f PUSH2 0x4e3
0x92 JUMPI
---
0x89: V43 = 0xd956634f
0x8e: V44 = EQ 0xd956634f V12
0x8f: V45 = 0x4e3
0x92: JUMPI 0x4e3 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x4f6]
---
0x93 DUP1
0x94 PUSH4 0xde2b4473
0x99 EQ
0x9a PUSH2 0x4f6
0x9d JUMPI
---
0x94: V46 = 0xde2b4473
0x99: V47 = EQ 0xde2b4473 V12
0x9a: V48 = 0x4f6
0x9d: JUMPI 0x4f6 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x50e]
---
0x9e DUP1
0x9f PUSH4 0xe14ed045
0xa4 EQ
0xa5 PUSH2 0x50e
0xa8 JUMPI
---
0x9f: V49 = 0xe14ed045
0xa4: V50 = EQ 0xe14ed045 V12
0xa5: V51 = 0x50e
0xa8: JUMPI 0x50e V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x52d]
---
0xa9 DUP1
0xaa PUSH4 0xe4e329ab
0xaf EQ
0xb0 PUSH2 0x52d
0xb3 JUMPI
---
0xaa: V52 = 0xe4e329ab
0xaf: V53 = EQ 0xe4e329ab V12
0xb0: V54 = 0x52d
0xb3: JUMPI 0x52d V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x540]
---
0xb4 DUP1
0xb5 PUSH4 0xf2fde38b
0xba EQ
0xbb PUSH2 0x540
0xbe JUMPI
---
0xb5: V55 = 0xf2fde38b
0xba: V56 = EQ 0xf2fde38b V12
0xbb: V57 = 0x540
0xbe: JUMPI 0x540 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0x115]
---
Predecessors: [0x0, 0xb4]
Successors: [0x116, 0x11a]
---
0xbf JUMPDEST
0xc0 PUSH1 0x0
0xc2 DUP1
0xc3 SLOAD
0xc4 PUSH1 0x1
0xc6 PUSH1 0xa0
0xc8 PUSH1 0x2
0xca EXP
0xcb SUB
0xcc AND
0xcd SWAP1
0xce DUP2
0xcf PUSH4 0x4cc53838
0xd4 ADDRESS
0xd5 DUP4
0xd6 PUSH1 0x40
0xd8 MLOAD
0xd9 PUSH1 0x20
0xdb ADD
0xdc MSTORE
0xdd PUSH1 0x40
0xdf MLOAD
0xe0 PUSH1 0xe0
0xe2 PUSH1 0x2
0xe4 EXP
0xe5 PUSH4 0xffffffff
0xea DUP5
0xeb AND
0xec MUL
0xed DUP2
0xee MSTORE
0xef PUSH1 0x1
0xf1 PUSH1 0xa0
0xf3 PUSH1 0x2
0xf5 EXP
0xf6 SUB
0xf7 SWAP1
0xf8 SWAP2
0xf9 AND
0xfa PUSH1 0x4
0xfc DUP3
0xfd ADD
0xfe MSTORE
0xff PUSH1 0x24
0x101 ADD
0x102 PUSH1 0x20
0x104 PUSH1 0x40
0x106 MLOAD
0x107 DUP1
0x108 DUP4
0x109 SUB
0x10a DUP2
0x10b PUSH1 0x0
0x10d DUP8
0x10e DUP1
0x10f EXTCODESIZE
0x110 ISZERO
0x111 ISZERO
0x112 PUSH2 0x11a
0x115 JUMPI
---
0xbf: JUMPDEST 
0xc0: V58 = 0x0
0xc3: V59 = S[0x0]
0xc4: V60 = 0x1
0xc6: V61 = 0xa0
0xc8: V62 = 0x2
0xca: V63 = EXP 0x2 0xa0
0xcb: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xcf: V66 = 0x4cc53838
0xd4: V67 = ADDRESS
0xd6: V68 = 0x40
0xd8: V69 = M[0x40]
0xd9: V70 = 0x20
0xdb: V71 = ADD 0x20 V69
0xdc: M[V71] = 0x0
0xdd: V72 = 0x40
0xdf: V73 = M[0x40]
0xe0: V74 = 0xe0
0xe2: V75 = 0x2
0xe4: V76 = EXP 0x2 0xe0
0xe5: V77 = 0xffffffff
0xeb: V78 = AND 0x4cc53838 0xffffffff
0xec: V79 = MUL 0x4cc53838 0x100000000000000000000000000000000000000000000000000000000
0xee: M[V73] = 0x4cc5383800000000000000000000000000000000000000000000000000000000
0xef: V80 = 0x1
0xf1: V81 = 0xa0
0xf3: V82 = 0x2
0xf5: V83 = EXP 0x2 0xa0
0xf6: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf9: V85 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0xfa: V86 = 0x4
0xfd: V87 = ADD V73 0x4
0xfe: M[V87] = V85
0xff: V88 = 0x24
0x101: V89 = ADD 0x24 V73
0x102: V90 = 0x20
0x104: V91 = 0x40
0x106: V92 = M[0x40]
0x109: V93 = SUB V89 V92
0x10b: V94 = 0x0
0x10f: V95 = EXTCODESIZE V65
0x110: V96 = ISZERO V95
0x111: V97 = ISZERO V96
0x112: V98 = 0x11a
0x115: JUMPI 0x11a V97
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [V65, 0x0, V65, 0x4cc53838, V89, 0x20, V92, V93, V92, 0x0, V65]
Exit stack: [V12, V65, 0x0, V65, 0x4cc53838, V89, 0x20, V92, V93, V92, 0x0, V65]

================================

Block 0x116
[0x116:0x119]
---
Predecessors: [0xbf]
Successors: []
---
0x116 PUSH1 0x0
0x118 DUP1
0x119 REVERT
---
0x116: V99 = 0x0
0x119: REVERT 0x0 0x0
---
Entry stack: [V12, V65, 0x0, V65, 0x4cc53838, V89, 0x20, V92, V93, V92, 0x0, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V65, 0x0, V65, 0x4cc53838, V89, 0x20, V92, V93, V92, 0x0, V65]

================================

Block 0x11a
[0x11a:0x126]
---
Predecessors: [0xbf]
Successors: [0x127, 0x12b]
---
0x11a JUMPDEST
0x11b PUSH2 0x2c6
0x11e GAS
0x11f SUB
0x120 CALL
0x121 ISZERO
0x122 ISZERO
0x123 PUSH2 0x12b
0x126 JUMPI
---
0x11a: JUMPDEST 
0x11b: V100 = 0x2c6
0x11e: V101 = GAS
0x11f: V102 = SUB V101 0x2c6
0x120: V103 = CALL V102 V65 0x0 V92 V93 V92 0x20
0x121: V104 = ISZERO V103
0x122: V105 = ISZERO V104
0x123: V106 = 0x12b
0x126: JUMPI 0x12b V105
---
Entry stack: [V12, V65, 0x0, V65, 0x4cc53838, V89, 0x20, V92, V93, V92, 0x0, V65]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V65, 0x0, V65, 0x4cc53838, V89]

================================

Block 0x127
[0x127:0x12a]
---
Predecessors: [0x11a]
Successors: []
---
0x127 PUSH1 0x0
0x129 DUP1
0x12a REVERT
---
0x127: V107 = 0x0
0x12a: REVERT 0x0 0x0
---
Entry stack: [V12, V65, 0x0, V65, 0x4cc53838, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V65, 0x0, V65, 0x4cc53838, V89]

================================

Block 0x12b
[0x12b:0x14e]
---
Predecessors: [0x11a]
Successors: [0x14f, 0x150]
---
0x12b JUMPDEST
0x12c POP
0x12d POP
0x12e POP
0x12f PUSH1 0x40
0x131 MLOAD
0x132 DUP1
0x133 MLOAD
0x134 PUSH1 0x4
0x136 SLOAD
0x137 SWAP1
0x138 SWAP3
0x139 POP
0x13a PUSH1 0xa8
0x13c PUSH1 0x2
0x13e EXP
0x13f SWAP1
0x140 DIV
0x141 PUSH1 0xff
0x143 AND
0x144 ISZERO
0x145 ISZERO
0x146 PUSH1 0x1
0x148 EQ
0x149 SWAP1
0x14a POP
0x14b PUSH2 0x150
0x14e JUMPI
---
0x12b: JUMPDEST 
0x12f: V108 = 0x40
0x131: V109 = M[0x40]
0x133: V110 = M[V109]
0x134: V111 = 0x4
0x136: V112 = S[0x4]
0x13a: V113 = 0xa8
0x13c: V114 = 0x2
0x13e: V115 = EXP 0x2 0xa8
0x140: V116 = DIV V112 0x1000000000000000000000000000000000000000000
0x141: V117 = 0xff
0x143: V118 = AND 0xff V116
0x144: V119 = ISZERO V118
0x145: V120 = ISZERO V119
0x146: V121 = 0x1
0x148: V122 = EQ 0x1 V120
0x14b: V123 = 0x150
0x14e: JUMPI 0x150 V122
---
Entry stack: [V12, V65, 0x0, V65, 0x4cc53838, V89]
Stack pops: 4
Stack additions: [V110]
Exit stack: [V12, V65, V110]

================================

Block 0x14f
[0x14f:0x14f]
---
Predecessors: [0x12b]
Successors: []
---
0x14f INVALID
---
0x14f: INVALID 
---
Entry stack: [V12, V65, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V65, V110]

================================

Block 0x150
[0x150:0x19a]
---
Predecessors: [0x12b]
Successors: [0x19b, 0x19f]
---
0x150 JUMPDEST
0x151 DUP2
0x152 PUSH1 0x1
0x154 PUSH1 0xa0
0x156 PUSH1 0x2
0x158 EXP
0x159 SUB
0x15a AND
0x15b PUSH4 0x99f16c6e
0x160 CALLVALUE
0x161 PUSH1 0x0
0x163 PUSH1 0x40
0x165 MLOAD
0x166 PUSH1 0x20
0x168 ADD
0x169 MSTORE
0x16a PUSH1 0x40
0x16c MLOAD
0x16d PUSH1 0xe0
0x16f PUSH1 0x2
0x171 EXP
0x172 PUSH4 0xffffffff
0x177 DUP5
0x178 AND
0x179 MUL
0x17a DUP2
0x17b MSTORE
0x17c PUSH1 0x4
0x17e DUP2
0x17f ADD
0x180 SWAP2
0x181 SWAP1
0x182 SWAP2
0x183 MSTORE
0x184 PUSH1 0x24
0x186 ADD
0x187 PUSH1 0x20
0x189 PUSH1 0x40
0x18b MLOAD
0x18c DUP1
0x18d DUP4
0x18e SUB
0x18f DUP2
0x190 PUSH1 0x0
0x192 DUP8
0x193 DUP1
0x194 EXTCODESIZE
0x195 ISZERO
0x196 ISZERO
0x197 PUSH2 0x19f
0x19a JUMPI
---
0x150: JUMPDEST 
0x152: V124 = 0x1
0x154: V125 = 0xa0
0x156: V126 = 0x2
0x158: V127 = EXP 0x2 0xa0
0x159: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15a: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x15b: V130 = 0x99f16c6e
0x160: V131 = CALLVALUE
0x161: V132 = 0x0
0x163: V133 = 0x40
0x165: V134 = M[0x40]
0x166: V135 = 0x20
0x168: V136 = ADD 0x20 V134
0x169: M[V136] = 0x0
0x16a: V137 = 0x40
0x16c: V138 = M[0x40]
0x16d: V139 = 0xe0
0x16f: V140 = 0x2
0x171: V141 = EXP 0x2 0xe0
0x172: V142 = 0xffffffff
0x178: V143 = AND 0x99f16c6e 0xffffffff
0x179: V144 = MUL 0x99f16c6e 0x100000000000000000000000000000000000000000000000000000000
0x17b: M[V138] = 0x99f16c6e00000000000000000000000000000000000000000000000000000000
0x17c: V145 = 0x4
0x17f: V146 = ADD V138 0x4
0x183: M[V146] = V131
0x184: V147 = 0x24
0x186: V148 = ADD 0x24 V138
0x187: V149 = 0x20
0x189: V150 = 0x40
0x18b: V151 = M[0x40]
0x18e: V152 = SUB V148 V151
0x190: V153 = 0x0
0x194: V154 = EXTCODESIZE V129
0x195: V155 = ISZERO V154
0x196: V156 = ISZERO V155
0x197: V157 = 0x19f
0x19a: JUMPI 0x19f V156
---
Entry stack: [V12, V65, V110]
Stack pops: 2
Stack additions: [S1, S0, V129, 0x99f16c6e, V148, 0x20, V151, V152, V151, 0x0, V129]
Exit stack: [V12, V65, V110, V129, 0x99f16c6e, V148, 0x20, V151, V152, V151, 0x0, V129]

================================

Block 0x19b
[0x19b:0x19e]
---
Predecessors: [0x150]
Successors: []
---
0x19b PUSH1 0x0
0x19d DUP1
0x19e REVERT
---
0x19b: V158 = 0x0
0x19e: REVERT 0x0 0x0
---
Entry stack: [V12, V65, V110, V129, 0x99f16c6e, V148, 0x20, V151, V152, V151, 0x0, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V65, V110, V129, 0x99f16c6e, V148, 0x20, V151, V152, V151, 0x0, V129]

================================

Block 0x19f
[0x19f:0x1ab]
---
Predecessors: [0x150]
Successors: [0x1ac, 0x1b0]
---
0x19f JUMPDEST
0x1a0 PUSH2 0x2c6
0x1a3 GAS
0x1a4 SUB
0x1a5 CALL
0x1a6 ISZERO
0x1a7 ISZERO
0x1a8 PUSH2 0x1b0
0x1ab JUMPI
---
0x19f: JUMPDEST 
0x1a0: V159 = 0x2c6
0x1a3: V160 = GAS
0x1a4: V161 = SUB V160 0x2c6
0x1a5: V162 = CALL V161 V129 0x0 V151 V152 V151 0x20
0x1a6: V163 = ISZERO V162
0x1a7: V164 = ISZERO V163
0x1a8: V165 = 0x1b0
0x1ab: JUMPI 0x1b0 V164
---
Entry stack: [V12, V65, V110, V129, 0x99f16c6e, V148, 0x20, V151, V152, V151, 0x0, V129]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V65, V110, V129, 0x99f16c6e, V148]

================================

Block 0x1ac
[0x1ac:0x1af]
---
Predecessors: [0x19f]
Successors: []
---
0x1ac PUSH1 0x0
0x1ae DUP1
0x1af REVERT
---
0x1ac: V166 = 0x0
0x1af: REVERT 0x0 0x0
---
Entry stack: [V12, V65, V110, V129, 0x99f16c6e, V148]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V65, V110, V129, 0x99f16c6e, V148]

================================

Block 0x1b0
[0x1b0:0x1c0]
---
Predecessors: [0x19f]
Successors: [0x1c1, 0x1c2]
---
0x1b0 JUMPDEST
0x1b1 POP
0x1b2 POP
0x1b3 POP
0x1b4 PUSH1 0x40
0x1b6 MLOAD
0x1b7 DUP1
0x1b8 MLOAD
0x1b9 SWAP1
0x1ba POP
0x1bb ISZERO
0x1bc ISZERO
0x1bd PUSH2 0x1c2
0x1c0 JUMPI
---
0x1b0: JUMPDEST 
0x1b4: V167 = 0x40
0x1b6: V168 = M[0x40]
0x1b8: V169 = M[V168]
0x1bb: V170 = ISZERO V169
0x1bc: V171 = ISZERO V170
0x1bd: V172 = 0x1c2
0x1c0: JUMPI 0x1c2 V171
---
Entry stack: [V12, V65, V110, V129, 0x99f16c6e, V148]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V65, V110]

================================

Block 0x1c1
[0x1c1:0x1c1]
---
Predecessors: [0x1b0]
Successors: []
---
0x1c1 INVALID
---
0x1c1: INVALID 
---
Entry stack: [V12, V65, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V65, V110]

================================

Block 0x1c2
[0x1c2:0x1ea]
---
Predecessors: [0x1b0]
Successors: [0x55f]
---
0x1c2 JUMPDEST
0x1c3 PUSH1 0x1
0x1c5 PUSH1 0xa0
0x1c7 PUSH1 0x2
0x1c9 EXP
0x1ca SUB
0x1cb CALLER
0x1cc AND
0x1cd PUSH1 0x0
0x1cf SWAP1
0x1d0 DUP2
0x1d1 MSTORE
0x1d2 PUSH1 0x1
0x1d4 PUSH1 0x20
0x1d6 MSTORE
0x1d7 PUSH1 0x40
0x1d9 SWAP1
0x1da SHA3
0x1db SLOAD
0x1dc PUSH2 0x1eb
0x1df SWAP1
0x1e0 CALLVALUE
0x1e1 PUSH4 0xffffffff
0x1e6 PUSH2 0x55f
0x1e9 AND
0x1ea JUMP
---
0x1c2: JUMPDEST 
0x1c3: V173 = 0x1
0x1c5: V174 = 0xa0
0x1c7: V175 = 0x2
0x1c9: V176 = EXP 0x2 0xa0
0x1ca: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cb: V178 = CALLER
0x1cc: V179 = AND V178 0xffffffffffffffffffffffffffffffffffffffff
0x1cd: V180 = 0x0
0x1d1: M[0x0] = V179
0x1d2: V181 = 0x1
0x1d4: V182 = 0x20
0x1d6: M[0x20] = 0x1
0x1d7: V183 = 0x40
0x1da: V184 = SHA3 0x0 0x40
0x1db: V185 = S[V184]
0x1dc: V186 = 0x1eb
0x1e0: V187 = CALLVALUE
0x1e1: V188 = 0xffffffff
0x1e6: V189 = 0x55f
0x1e9: V190 = AND 0x55f 0xffffffff
0x1ea: JUMP 0x55f
---
Entry stack: [V12, V65, V110]
Stack pops: 0
Stack additions: [0x1eb, V185, V187]
Exit stack: [V12, V65, V110, 0x1eb, V185, V187]

================================

Block 0x1eb
[0x1eb:0x216]
---
Predecessors: [0x56e]
Successors: [0x55f]
---
0x1eb JUMPDEST
0x1ec PUSH1 0x1
0x1ee PUSH1 0xa0
0x1f0 PUSH1 0x2
0x1f2 EXP
0x1f3 SUB
0x1f4 CALLER
0x1f5 AND
0x1f6 PUSH1 0x0
0x1f8 SWAP1
0x1f9 DUP2
0x1fa MSTORE
0x1fb PUSH1 0x1
0x1fd PUSH1 0x20
0x1ff MSTORE
0x200 PUSH1 0x40
0x202 SWAP1
0x203 SHA3
0x204 SSTORE
0x205 PUSH1 0x2
0x207 SLOAD
0x208 PUSH2 0x217
0x20b SWAP1
0x20c CALLVALUE
0x20d PUSH4 0xffffffff
0x212 PUSH2 0x55f
0x215 AND
0x216 JUMP
---
0x1eb: JUMPDEST 
0x1ec: V191 = 0x1
0x1ee: V192 = 0xa0
0x1f0: V193 = 0x2
0x1f2: V194 = EXP 0x2 0xa0
0x1f3: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f4: V196 = CALLER
0x1f5: V197 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V198 = 0x0
0x1fa: M[0x0] = V197
0x1fb: V199 = 0x1
0x1fd: V200 = 0x20
0x1ff: M[0x20] = 0x1
0x200: V201 = 0x40
0x203: V202 = SHA3 0x0 0x40
0x204: S[V202] = S0
0x205: V203 = 0x2
0x207: V204 = S[0x2]
0x208: V205 = 0x217
0x20c: V206 = CALLVALUE
0x20d: V207 = 0xffffffff
0x212: V208 = 0x55f
0x215: V209 = AND 0x55f 0xffffffff
0x216: JUMP 0x55f
---
Entry stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x217, V204, V206]
Exit stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x217, V204, V206]

================================

Block 0x217
[0x217:0x276]
---
Predecessors: [0x56e]
Successors: [0x277, 0x297]
---
0x217 JUMPDEST
0x218 PUSH1 0x2
0x21a SSTORE
0x21b PUSH32 0x3dbad08993b7c571c49ada845d4e0a4a24423f5bb227cfa69c9106520da1bea5
0x23c ADDRESS
0x23d CALLER
0x23e CALLVALUE
0x23f PUSH1 0x40
0x241 MLOAD
0x242 PUSH1 0x1
0x244 PUSH1 0xa0
0x246 PUSH1 0x2
0x248 EXP
0x249 SUB
0x24a SWAP4
0x24b DUP5
0x24c AND
0x24d DUP2
0x24e MSTORE
0x24f SWAP2
0x250 SWAP1
0x251 SWAP3
0x252 AND
0x253 PUSH1 0x20
0x255 DUP3
0x256 ADD
0x257 MSTORE
0x258 PUSH1 0x40
0x25a DUP1
0x25b DUP3
0x25c ADD
0x25d SWAP3
0x25e SWAP1
0x25f SWAP3
0x260 MSTORE
0x261 PUSH1 0x60
0x263 ADD
0x264 SWAP1
0x265 MLOAD
0x266 DUP1
0x267 SWAP2
0x268 SUB
0x269 SWAP1
0x26a LOG1
0x26b DUP1
0x26c PUSH1 0x2
0x26e SLOAD
0x26f LT
0x270 ISZERO
0x271 DUP1
0x272 ISZERO
0x273 PUSH2 0x297
0x276 JUMPI
---
0x217: JUMPDEST 
0x218: V210 = 0x2
0x21a: S[0x2] = S0
0x21b: V211 = 0x3dbad08993b7c571c49ada845d4e0a4a24423f5bb227cfa69c9106520da1bea5
0x23c: V212 = ADDRESS
0x23d: V213 = CALLER
0x23e: V214 = CALLVALUE
0x23f: V215 = 0x40
0x241: V216 = M[0x40]
0x242: V217 = 0x1
0x244: V218 = 0xa0
0x246: V219 = 0x2
0x248: V220 = EXP 0x2 0xa0
0x249: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24c: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x24e: M[V216] = V222
0x252: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x253: V224 = 0x20
0x256: V225 = ADD V216 0x20
0x257: M[V225] = V223
0x258: V226 = 0x40
0x25c: V227 = ADD V216 0x40
0x260: M[V227] = V214
0x261: V228 = 0x60
0x263: V229 = ADD 0x60 V216
0x265: V230 = M[0x40]
0x268: V231 = SUB V229 V230
0x26a: LOG V230 V231 0x3dbad08993b7c571c49ada845d4e0a4a24423f5bb227cfa69c9106520da1bea5
0x26c: V232 = 0x2
0x26e: V233 = S[0x2]
0x26f: V234 = LT V233 S1
0x270: V235 = ISZERO V234
0x272: V236 = ISZERO V235
0x273: V237 = 0x297
0x276: JUMPI 0x297 V236
---
Entry stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V235]
Exit stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V235]

================================

Block 0x277
[0x277:0x296]
---
Predecessors: [0x217]
Successors: [0x297]
---
0x277 POP
0x278 PUSH1 0x4
0x27a SLOAD
0x27b PUSH21 0x10000000000000000000000000000000000000000
0x291 SWAP1
0x292 DIV
0x293 PUSH1 0xff
0x295 AND
0x296 ISZERO
---
0x278: V238 = 0x4
0x27a: V239 = S[0x4]
0x27b: V240 = 0x10000000000000000000000000000000000000000
0x292: V241 = DIV V239 0x10000000000000000000000000000000000000000
0x293: V242 = 0xff
0x295: V243 = AND 0xff V241
0x296: V244 = ISZERO V243
---
Entry stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V235]
Stack pops: 1
Stack additions: [V244]
Exit stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V244]

================================

Block 0x297
[0x297:0x29c]
---
Predecessors: [0x217, 0x277]
Successors: [0x29d, 0x3c5]
---
0x297 JUMPDEST
0x298 ISZERO
0x299 PUSH2 0x3c5
0x29c JUMPI
---
0x297: JUMPDEST 
0x298: V245 = ISZERO S0
0x299: V246 = 0x3c5
0x29c: JUMPI 0x3c5 V245
---
Entry stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x29d
[0x29d:0x2ee]
---
Predecessors: [0x297]
Successors: [0x2ef, 0x2f3]
---
0x29d DUP2
0x29e PUSH1 0x1
0x2a0 PUSH1 0xa0
0x2a2 PUSH1 0x2
0x2a4 EXP
0x2a5 SUB
0x2a6 AND
0x2a7 PUSH4 0x6932c9c5
0x2ac ADDRESS
0x2ad PUSH1 0x0
0x2af PUSH1 0x40
0x2b1 MLOAD
0x2b2 PUSH1 0x20
0x2b4 ADD
0x2b5 MSTORE
0x2b6 PUSH1 0x40
0x2b8 MLOAD
0x2b9 PUSH1 0xe0
0x2bb PUSH1 0x2
0x2bd EXP
0x2be PUSH4 0xffffffff
0x2c3 DUP5
0x2c4 AND
0x2c5 MUL
0x2c6 DUP2
0x2c7 MSTORE
0x2c8 PUSH1 0x1
0x2ca PUSH1 0xa0
0x2cc PUSH1 0x2
0x2ce EXP
0x2cf SUB
0x2d0 SWAP1
0x2d1 SWAP2
0x2d2 AND
0x2d3 PUSH1 0x4
0x2d5 DUP3
0x2d6 ADD
0x2d7 MSTORE
0x2d8 PUSH1 0x24
0x2da ADD
0x2db PUSH1 0x20
0x2dd PUSH1 0x40
0x2df MLOAD
0x2e0 DUP1
0x2e1 DUP4
0x2e2 SUB
0x2e3 DUP2
0x2e4 PUSH1 0x0
0x2e6 DUP8
0x2e7 DUP1
0x2e8 EXTCODESIZE
0x2e9 ISZERO
0x2ea ISZERO
0x2eb PUSH2 0x2f3
0x2ee JUMPI
---
0x29e: V247 = 0x1
0x2a0: V248 = 0xa0
0x2a2: V249 = 0x2
0x2a4: V250 = EXP 0x2 0xa0
0x2a5: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a6: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x2a7: V253 = 0x6932c9c5
0x2ac: V254 = ADDRESS
0x2ad: V255 = 0x0
0x2af: V256 = 0x40
0x2b1: V257 = M[0x40]
0x2b2: V258 = 0x20
0x2b4: V259 = ADD 0x20 V257
0x2b5: M[V259] = 0x0
0x2b6: V260 = 0x40
0x2b8: V261 = M[0x40]
0x2b9: V262 = 0xe0
0x2bb: V263 = 0x2
0x2bd: V264 = EXP 0x2 0xe0
0x2be: V265 = 0xffffffff
0x2c4: V266 = AND 0x6932c9c5 0xffffffff
0x2c5: V267 = MUL 0x6932c9c5 0x100000000000000000000000000000000000000000000000000000000
0x2c7: M[V261] = 0x6932c9c500000000000000000000000000000000000000000000000000000000
0x2c8: V268 = 0x1
0x2ca: V269 = 0xa0
0x2cc: V270 = 0x2
0x2ce: V271 = EXP 0x2 0xa0
0x2cf: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d2: V273 = AND V254 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V274 = 0x4
0x2d6: V275 = ADD V261 0x4
0x2d7: M[V275] = V273
0x2d8: V276 = 0x24
0x2da: V277 = ADD 0x24 V261
0x2db: V278 = 0x20
0x2dd: V279 = 0x40
0x2df: V280 = M[0x40]
0x2e2: V281 = SUB V277 V280
0x2e4: V282 = 0x0
0x2e8: V283 = EXTCODESIZE V252
0x2e9: V284 = ISZERO V283
0x2ea: V285 = ISZERO V284
0x2eb: V286 = 0x2f3
0x2ee: JUMPI 0x2f3 V285
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V252, 0x6932c9c5, V277, 0x20, V280, V281, V280, 0x0, V252]
Exit stack: [S2, S1, S0, V252, 0x6932c9c5, V277, 0x20, V280, V281, V280, 0x0, V252]

================================

Block 0x2ef
[0x2ef:0x2f2]
---
Predecessors: [0x29d]
Successors: []
---
0x2ef PUSH1 0x0
0x2f1 DUP1
0x2f2 REVERT
---
0x2ef: V287 = 0x0
0x2f2: REVERT 0x0 0x0
---
Entry stack: [V12, V65, V110, V252, 0x6932c9c5, V277, 0x20, V280, V281, V280, 0x0, V252]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V65, V110, V252, 0x6932c9c5, V277, 0x20, V280, V281, V280, 0x0, V252]

================================

Block 0x2f3
[0x2f3:0x2ff]
---
Predecessors: [0x29d]
Successors: [0x300, 0x304]
---
0x2f3 JUMPDEST
0x2f4 PUSH2 0x2c6
0x2f7 GAS
0x2f8 SUB
0x2f9 CALL
0x2fa ISZERO
0x2fb ISZERO
0x2fc PUSH2 0x304
0x2ff JUMPI
---
0x2f3: JUMPDEST 
0x2f4: V288 = 0x2c6
0x2f7: V289 = GAS
0x2f8: V290 = SUB V289 0x2c6
0x2f9: V291 = CALL V290 V252 0x0 V280 V281 V280 0x20
0x2fa: V292 = ISZERO V291
0x2fb: V293 = ISZERO V292
0x2fc: V294 = 0x304
0x2ff: JUMPI 0x304 V293
---
Entry stack: [V12, V65, V110, V252, 0x6932c9c5, V277, 0x20, V280, V281, V280, 0x0, V252]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V65, V110, V252, 0x6932c9c5, V277]

================================

Block 0x300
[0x300:0x303]
---
Predecessors: [0x2f3]
Successors: []
---
0x300 PUSH1 0x0
0x302 DUP1
0x303 REVERT
---
0x300: V295 = 0x0
0x303: REVERT 0x0 0x0
---
Entry stack: [V12, V65, V110, V252, 0x6932c9c5, V277]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V65, V110, V252, 0x6932c9c5, V277]

================================

Block 0x304
[0x304:0x33d]
---
Predecessors: [0x2f3]
Successors: [0x33e, 0x33f]
---
0x304 JUMPDEST
0x305 POP
0x306 POP
0x307 POP
0x308 PUSH1 0x40
0x30a MLOAD
0x30b DUP1
0x30c MLOAD
0x30d PUSH1 0x1
0x30f PUSH1 0xa0
0x311 PUSH1 0x2
0x313 EXP
0x314 SUB
0x315 AND
0x316 SWAP1
0x317 POP
0x318 DUP2
0x319 ISZERO
0x31a PUSH2 0x8fc
0x31d MUL
0x31e DUP3
0x31f PUSH1 0x40
0x321 MLOAD
0x322 PUSH1 0x0
0x324 PUSH1 0x40
0x326 MLOAD
0x327 DUP1
0x328 DUP4
0x329 SUB
0x32a DUP2
0x32b DUP6
0x32c DUP9
0x32d DUP9
0x32e CALL
0x32f ISZERO
0x330 ISZERO
0x331 PUSH1 0x1
0x333 EQ
0x334 SWAP4
0x335 POP
0x336 PUSH2 0x33f
0x339 SWAP3
0x33a POP
0x33b POP
0x33c POP
0x33d JUMPI
---
0x304: JUMPDEST 
0x308: V296 = 0x40
0x30a: V297 = M[0x40]
0x30c: V298 = M[V297]
0x30d: V299 = 0x1
0x30f: V300 = 0xa0
0x311: V301 = 0x2
0x313: V302 = EXP 0x2 0xa0
0x314: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x315: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x319: V305 = ISZERO V110
0x31a: V306 = 0x8fc
0x31d: V307 = MUL 0x8fc V305
0x31f: V308 = 0x40
0x321: V309 = M[0x40]
0x322: V310 = 0x0
0x324: V311 = 0x40
0x326: V312 = M[0x40]
0x329: V313 = SUB V309 V312
0x32e: V314 = CALL V307 V304 V110 V312 V313 V312 0x0
0x32f: V315 = ISZERO V314
0x330: V316 = ISZERO V315
0x331: V317 = 0x1
0x333: V318 = EQ 0x1 V316
0x336: V319 = 0x33f
0x33d: JUMPI 0x33f V318
---
Entry stack: [V12, V65, V110, V252, 0x6932c9c5, V277]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V65, V110]

================================

Block 0x33e
[0x33e:0x33e]
---
Predecessors: [0x304]
Successors: []
---
0x33e INVALID
---
0x33e: INVALID 
---
Entry stack: [V12, V65, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V65, V110]

================================

Block 0x33f
[0x33f:0x3c4]
---
Predecessors: [0x304]
Successors: [0x3c5]
---
0x33f JUMPDEST
0x340 PUSH32 0x71528f41e180ca017ac2224b45812dfadb3aaf0dd67e593ff8abf4c2691482da
0x361 ADDRESS
0x362 CALLER
0x363 DUP4
0x364 PUSH1 0x40
0x366 MLOAD
0x367 PUSH1 0x1
0x369 PUSH1 0xa0
0x36b PUSH1 0x2
0x36d EXP
0x36e SUB
0x36f SWAP4
0x370 DUP5
0x371 AND
0x372 DUP2
0x373 MSTORE
0x374 SWAP2
0x375 SWAP1
0x376 SWAP3
0x377 AND
0x378 PUSH1 0x20
0x37a DUP3
0x37b ADD
0x37c MSTORE
0x37d PUSH1 0x40
0x37f DUP1
0x380 DUP3
0x381 ADD
0x382 SWAP3
0x383 SWAP1
0x384 SWAP3
0x385 MSTORE
0x386 PUSH1 0x60
0x388 ADD
0x389 SWAP1
0x38a MLOAD
0x38b DUP1
0x38c SWAP2
0x38d SUB
0x38e SWAP1
0x38f LOG1
0x390 PUSH1 0x4
0x392 DUP1
0x393 SLOAD
0x394 PUSH21 0xff0000000000000000000000000000000000000000
0x3aa NOT
0x3ab AND
0x3ac PUSH21 0x10000000000000000000000000000000000000000
0x3c2 OR
0x3c3 SWAP1
0x3c4 SSTORE
---
0x33f: JUMPDEST 
0x340: V320 = 0x71528f41e180ca017ac2224b45812dfadb3aaf0dd67e593ff8abf4c2691482da
0x361: V321 = ADDRESS
0x362: V322 = CALLER
0x364: V323 = 0x40
0x366: V324 = M[0x40]
0x367: V325 = 0x1
0x369: V326 = 0xa0
0x36b: V327 = 0x2
0x36d: V328 = EXP 0x2 0xa0
0x36e: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x371: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x373: M[V324] = V330
0x377: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x378: V332 = 0x20
0x37b: V333 = ADD V324 0x20
0x37c: M[V333] = V331
0x37d: V334 = 0x40
0x381: V335 = ADD V324 0x40
0x385: M[V335] = V110
0x386: V336 = 0x60
0x388: V337 = ADD 0x60 V324
0x38a: V338 = M[0x40]
0x38d: V339 = SUB V337 V338
0x38f: LOG V338 V339 0x71528f41e180ca017ac2224b45812dfadb3aaf0dd67e593ff8abf4c2691482da
0x390: V340 = 0x4
0x393: V341 = S[0x4]
0x394: V342 = 0xff0000000000000000000000000000000000000000
0x3aa: V343 = NOT 0xff0000000000000000000000000000000000000000
0x3ab: V344 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V341
0x3ac: V345 = 0x10000000000000000000000000000000000000000
0x3c2: V346 = OR 0x10000000000000000000000000000000000000000 V344
0x3c4: S[0x4] = V346
---
Entry stack: [V12, V65, V110]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V65, V110]

================================

Block 0x3c5
[0x3c5:0x3c8]
---
Predecessors: [0x297, 0x33f]
Successors: []
---
0x3c5 JUMPDEST
0x3c6 POP
0x3c7 POP
0x3c8 STOP
---
0x3c5: JUMPDEST 
0x3c8: STOP 
---
Entry stack: [S27, S26, S25, S24, S23, V942, V948, 0x40c10f19, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S27, S26, S25, S24, S23, V942, V948, 0x40c10f19, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x3c9
[0x3c9:0x3cf]
---
Predecessors: [0xb]
Successors: [0x3d0, 0x3d4]
---
0x3c9 JUMPDEST
0x3ca CALLVALUE
0x3cb ISZERO
0x3cc PUSH2 0x3d4
0x3cf JUMPI
---
0x3c9: JUMPDEST 
0x3ca: V347 = CALLVALUE
0x3cb: V348 = ISZERO V347
0x3cc: V349 = 0x3d4
0x3cf: JUMPI 0x3d4 V348
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d0
[0x3d0:0x3d3]
---
Predecessors: [0x3c9]
Successors: []
---
0x3d0 PUSH1 0x0
0x3d2 DUP1
0x3d3 REVERT
---
0x3d0: V350 = 0x0
0x3d3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d4
[0x3d4:0x3db]
---
Predecessors: [0x3c9]
Successors: [0x575]
---
0x3d4 JUMPDEST
0x3d5 PUSH2 0x3dc
0x3d8 PUSH2 0x575
0x3db JUMP
---
0x3d4: JUMPDEST 
0x3d5: V351 = 0x3dc
0x3d8: V352 = 0x575
0x3db: JUMP 0x575
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3dc]
Exit stack: [V12, 0x3dc]

================================

Block 0x3dc
[0x3dc:0x3dd]
---
Predecessors: [0x5e0, 0x6c7, 0x712, 0x72d, 0x74a, 0x7c0]
Successors: []
---
0x3dc JUMPDEST
0x3dd STOP
---
0x3dc: JUMPDEST 
0x3dd: STOP 
---
Entry stack: [S12, S11, S10, S9, S8, V942, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, V942, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x3de
[0x3de:0x3e4]
---
Predecessors: [0x25]
Successors: [0x3e5, 0x3e9]
---
0x3de JUMPDEST
0x3df CALLVALUE
0x3e0 ISZERO
0x3e1 PUSH2 0x3e9
0x3e4 JUMPI
---
0x3de: JUMPDEST 
0x3df: V353 = CALLVALUE
0x3e0: V354 = ISZERO V353
0x3e1: V355 = 0x3e9
0x3e4: JUMPI 0x3e9 V354
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e5
[0x3e5:0x3e8]
---
Predecessors: [0x3de]
Successors: []
---
0x3e5 PUSH1 0x0
0x3e7 DUP1
0x3e8 REVERT
---
0x3e5: V356 = 0x0
0x3e8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e9
[0x3e9:0x3fc]
---
Predecessors: [0x3de]
Successors: [0x5ad]
---
0x3e9 JUMPDEST
0x3ea PUSH2 0x3fd
0x3ed PUSH1 0x1
0x3ef PUSH1 0xa0
0x3f1 PUSH1 0x2
0x3f3 EXP
0x3f4 SUB
0x3f5 PUSH1 0x4
0x3f7 CALLDATALOAD
0x3f8 AND
0x3f9 PUSH2 0x5ad
0x3fc JUMP
---
0x3e9: JUMPDEST 
0x3ea: V357 = 0x3fd
0x3ed: V358 = 0x1
0x3ef: V359 = 0xa0
0x3f1: V360 = 0x2
0x3f3: V361 = EXP 0x2 0xa0
0x3f4: V362 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f5: V363 = 0x4
0x3f7: V364 = CALLDATALOAD 0x4
0x3f8: V365 = AND V364 0xffffffffffffffffffffffffffffffffffffffff
0x3f9: V366 = 0x5ad
0x3fc: JUMP 0x5ad
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3fd, V365]
Exit stack: [V12, 0x3fd, V365]

================================

Block 0x3fd
[0x3fd:0x40e]
---
Predecessors: [0x5ad, 0x5bf, 0x650, 0x77a]
Successors: []
---
0x3fd JUMPDEST
0x3fe PUSH1 0x40
0x400 MLOAD
0x401 SWAP1
0x402 DUP2
0x403 MSTORE
0x404 PUSH1 0x20
0x406 ADD
0x407 PUSH1 0x40
0x409 MLOAD
0x40a DUP1
0x40b SWAP2
0x40c SUB
0x40d SWAP1
0x40e RETURN
---
0x3fd: JUMPDEST 
0x3fe: V367 = 0x40
0x400: V368 = M[0x40]
0x403: M[V368] = S0
0x404: V369 = 0x20
0x406: V370 = ADD 0x20 V368
0x407: V371 = 0x40
0x409: V372 = M[0x40]
0x40c: V373 = SUB V370 V372
0x40e: RETURN V372 V373
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x40f
[0x40f:0x415]
---
Predecessors: [0x30]
Successors: [0x416, 0x41a]
---
0x40f JUMPDEST
0x410 CALLVALUE
0x411 ISZERO
0x412 PUSH2 0x41a
0x415 JUMPI
---
0x40f: JUMPDEST 
0x410: V374 = CALLVALUE
0x411: V375 = ISZERO V374
0x412: V376 = 0x41a
0x415: JUMPI 0x41a V375
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x416
[0x416:0x419]
---
Predecessors: [0x40f]
Successors: []
---
0x416 PUSH1 0x0
0x418 DUP1
0x419 REVERT
---
0x416: V377 = 0x0
0x419: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x41a
[0x41a:0x421]
---
Predecessors: [0x40f]
Successors: [0x5bf]
---
0x41a JUMPDEST
0x41b PUSH2 0x3fd
0x41e PUSH2 0x5bf
0x421 JUMP
---
0x41a: JUMPDEST 
0x41b: V378 = 0x3fd
0x41e: V379 = 0x5bf
0x421: JUMP 0x5bf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3fd]
Exit stack: [V12, 0x3fd]

================================

Block 0x422
[0x422:0x428]
---
Predecessors: [0x3b]
Successors: [0x429, 0x42d]
---
0x422 JUMPDEST
0x423 CALLVALUE
0x424 ISZERO
0x425 PUSH2 0x42d
0x428 JUMPI
---
0x422: JUMPDEST 
0x423: V380 = CALLVALUE
0x424: V381 = ISZERO V380
0x425: V382 = 0x42d
0x428: JUMPI 0x42d V381
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x429
[0x429:0x42c]
---
Predecessors: [0x422]
Successors: []
---
0x429 PUSH1 0x0
0x42b DUP1
0x42c REVERT
---
0x429: V383 = 0x0
0x42c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x42d
[0x42d:0x434]
---
Predecessors: [0x422]
Successors: [0x5c5]
---
0x42d JUMPDEST
0x42e PUSH2 0x3dc
0x431 PUSH2 0x5c5
0x434 JUMP
---
0x42d: JUMPDEST 
0x42e: V384 = 0x3dc
0x431: V385 = 0x5c5
0x434: JUMP 0x5c5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3dc]
Exit stack: [V12, 0x3dc]

================================

Block 0x435
[0x435:0x43b]
---
Predecessors: [0x46]
Successors: [0x43c, 0x440]
---
0x435 JUMPDEST
0x436 CALLVALUE
0x437 ISZERO
0x438 PUSH2 0x440
0x43b JUMPI
---
0x435: JUMPDEST 
0x436: V386 = CALLVALUE
0x437: V387 = ISZERO V386
0x438: V388 = 0x440
0x43b: JUMPI 0x440 V387
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x43c
[0x43c:0x43f]
---
Predecessors: [0x435]
Successors: []
---
0x43c PUSH1 0x0
0x43e DUP1
0x43f REVERT
---
0x43c: V389 = 0x0
0x43f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x440
[0x440:0x447]
---
Predecessors: [0x435]
Successors: [0x650]
---
0x440 JUMPDEST
0x441 PUSH2 0x3fd
0x444 PUSH2 0x650
0x447 JUMP
---
0x440: JUMPDEST 
0x441: V390 = 0x3fd
0x444: V391 = 0x650
0x447: JUMP 0x650
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3fd]
Exit stack: [V12, 0x3fd]

================================

Block 0x448
[0x448:0x44e]
---
Predecessors: [0x51]
Successors: [0x44f, 0x453]
---
0x448 JUMPDEST
0x449 CALLVALUE
0x44a ISZERO
0x44b PUSH2 0x453
0x44e JUMPI
---
0x448: JUMPDEST 
0x449: V392 = CALLVALUE
0x44a: V393 = ISZERO V392
0x44b: V394 = 0x453
0x44e: JUMPI 0x453 V393
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x44f
[0x44f:0x452]
---
Predecessors: [0x448]
Successors: []
---
0x44f PUSH1 0x0
0x451 DUP1
0x452 REVERT
---
0x44f: V395 = 0x0
0x452: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x453
[0x453:0x45a]
---
Predecessors: [0x448]
Successors: [0x656]
---
0x453 JUMPDEST
0x454 PUSH2 0x45b
0x457 PUSH2 0x656
0x45a JUMP
---
0x453: JUMPDEST 
0x454: V396 = 0x45b
0x457: V397 = 0x656
0x45a: JUMP 0x656
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x45b]
Exit stack: [V12, 0x45b]

================================

Block 0x45b
[0x45b:0x476]
---
Predecessors: [0x656, 0x715]
Successors: []
---
0x45b JUMPDEST
0x45c PUSH1 0x40
0x45e MLOAD
0x45f PUSH1 0x1
0x461 PUSH1 0xa0
0x463 PUSH1 0x2
0x465 EXP
0x466 SUB
0x467 SWAP1
0x468 SWAP2
0x469 AND
0x46a DUP2
0x46b MSTORE
0x46c PUSH1 0x20
0x46e ADD
0x46f PUSH1 0x40
0x471 MLOAD
0x472 DUP1
0x473 SWAP2
0x474 SUB
0x475 SWAP1
0x476 RETURN
---
0x45b: JUMPDEST 
0x45c: V398 = 0x40
0x45e: V399 = M[0x40]
0x45f: V400 = 0x1
0x461: V401 = 0xa0
0x463: V402 = 0x2
0x465: V403 = EXP 0x2 0xa0
0x466: V404 = SUB 0x10000000000000000000000000000000000000000 0x1
0x469: V405 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x46b: M[V399] = V405
0x46c: V406 = 0x20
0x46e: V407 = ADD 0x20 V399
0x46f: V408 = 0x40
0x471: V409 = M[0x40]
0x474: V410 = SUB V407 V409
0x476: RETURN V409 V410
---
Entry stack: [V12, 0x45b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x45b]

================================

Block 0x477
[0x477:0x47d]
---
Predecessors: [0x5c]
Successors: [0x47e, 0x482]
---
0x477 JUMPDEST
0x478 CALLVALUE
0x479 ISZERO
0x47a PUSH2 0x482
0x47d JUMPI
---
0x477: JUMPDEST 
0x478: V411 = CALLVALUE
0x479: V412 = ISZERO V411
0x47a: V413 = 0x482
0x47d: JUMPI 0x482 V412
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x47e
[0x47e:0x481]
---
Predecessors: [0x477]
Successors: []
---
0x47e PUSH1 0x0
0x480 DUP1
0x481 REVERT
---
0x47e: V414 = 0x0
0x481: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x482
[0x482:0x489]
---
Predecessors: [0x477]
Successors: [0x665]
---
0x482 JUMPDEST
0x483 PUSH2 0x3dc
0x486 PUSH2 0x665
0x489 JUMP
---
0x482: JUMPDEST 
0x483: V415 = 0x3dc
0x486: V416 = 0x665
0x489: JUMP 0x665
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3dc]
Exit stack: [V12, 0x3dc]

================================

Block 0x48a
[0x48a:0x490]
---
Predecessors: [0x67]
Successors: [0x491, 0x495]
---
0x48a JUMPDEST
0x48b CALLVALUE
0x48c ISZERO
0x48d PUSH2 0x495
0x490 JUMPI
---
0x48a: JUMPDEST 
0x48b: V417 = CALLVALUE
0x48c: V418 = ISZERO V417
0x48d: V419 = 0x495
0x490: JUMPI 0x495 V418
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x491
[0x491:0x494]
---
Predecessors: [0x48a]
Successors: []
---
0x491 PUSH1 0x0
0x493 DUP1
0x494 REVERT
---
0x491: V420 = 0x0
0x494: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x495
[0x495:0x49c]
---
Predecessors: [0x48a]
Successors: [0x6cd]
---
0x495 JUMPDEST
0x496 PUSH2 0x49d
0x499 PUSH2 0x6cd
0x49c JUMP
---
0x495: JUMPDEST 
0x496: V421 = 0x49d
0x499: V422 = 0x6cd
0x49c: JUMP 0x6cd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x49d]
Exit stack: [V12, 0x49d]

================================

Block 0x49d
[0x49d:0x4b0]
---
Predecessors: [0x6cd, 0x795]
Successors: []
---
0x49d JUMPDEST
0x49e PUSH1 0x40
0x4a0 MLOAD
0x4a1 SWAP1
0x4a2 ISZERO
0x4a3 ISZERO
0x4a4 DUP2
0x4a5 MSTORE
0x4a6 PUSH1 0x20
0x4a8 ADD
0x4a9 PUSH1 0x40
0x4ab MLOAD
0x4ac DUP1
0x4ad SWAP2
0x4ae SUB
0x4af SWAP1
0x4b0 RETURN
---
0x49d: JUMPDEST 
0x49e: V423 = 0x40
0x4a0: V424 = M[0x40]
0x4a2: V425 = ISZERO S0
0x4a3: V426 = ISZERO V425
0x4a5: M[V424] = V426
0x4a6: V427 = 0x20
0x4a8: V428 = ADD 0x20 V424
0x4a9: V429 = 0x40
0x4ab: V430 = M[0x40]
0x4ae: V431 = SUB V428 V430
0x4b0: RETURN V430 V431
---
Entry stack: [V12, 0x49d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x49d]

================================

Block 0x4b1
[0x4b1:0x4b7]
---
Predecessors: [0x72]
Successors: [0x4b8, 0x4bc]
---
0x4b1 JUMPDEST
0x4b2 CALLVALUE
0x4b3 ISZERO
0x4b4 PUSH2 0x4bc
0x4b7 JUMPI
---
0x4b1: JUMPDEST 
0x4b2: V432 = CALLVALUE
0x4b3: V433 = ISZERO V432
0x4b4: V434 = 0x4bc
0x4b7: JUMPI 0x4bc V433
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b8
[0x4b8:0x4bb]
---
Predecessors: [0x4b1]
Successors: []
---
0x4b8 PUSH1 0x0
0x4ba DUP1
0x4bb REVERT
---
0x4b8: V435 = 0x0
0x4bb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4bc
[0x4bc:0x4cf]
---
Predecessors: [0x4b1]
Successors: [0x6ee]
---
0x4bc JUMPDEST
0x4bd PUSH2 0x3dc
0x4c0 PUSH1 0x1
0x4c2 PUSH1 0xa0
0x4c4 PUSH1 0x2
0x4c6 EXP
0x4c7 SUB
0x4c8 PUSH1 0x4
0x4ca CALLDATALOAD
0x4cb AND
0x4cc PUSH2 0x6ee
0x4cf JUMP
---
0x4bc: JUMPDEST 
0x4bd: V436 = 0x3dc
0x4c0: V437 = 0x1
0x4c2: V438 = 0xa0
0x4c4: V439 = 0x2
0x4c6: V440 = EXP 0x2 0xa0
0x4c7: V441 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c8: V442 = 0x4
0x4ca: V443 = CALLDATALOAD 0x4
0x4cb: V444 = AND V443 0xffffffffffffffffffffffffffffffffffffffff
0x4cc: V445 = 0x6ee
0x4cf: JUMP 0x6ee
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3dc, V444]
Exit stack: [V12, 0x3dc, V444]

================================

Block 0x4d0
[0x4d0:0x4d6]
---
Predecessors: [0x7d]
Successors: [0x4d7, 0x4db]
---
0x4d0 JUMPDEST
0x4d1 CALLVALUE
0x4d2 ISZERO
0x4d3 PUSH2 0x4db
0x4d6 JUMPI
---
0x4d0: JUMPDEST 
0x4d1: V446 = CALLVALUE
0x4d2: V447 = ISZERO V446
0x4d3: V448 = 0x4db
0x4d6: JUMPI 0x4db V447
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d7
[0x4d7:0x4da]
---
Predecessors: [0x4d0]
Successors: []
---
0x4d7 PUSH1 0x0
0x4d9 DUP1
0x4da REVERT
---
0x4d7: V449 = 0x0
0x4da: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4db
[0x4db:0x4e2]
---
Predecessors: [0x4d0]
Successors: [0x715]
---
0x4db JUMPDEST
0x4dc PUSH2 0x45b
0x4df PUSH2 0x715
0x4e2 JUMP
---
0x4db: JUMPDEST 
0x4dc: V450 = 0x45b
0x4df: V451 = 0x715
0x4e2: JUMP 0x715
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x45b]
Exit stack: [V12, 0x45b]

================================

Block 0x4e3
[0x4e3:0x4e9]
---
Predecessors: [0x88]
Successors: [0x4ea, 0x4ee]
---
0x4e3 JUMPDEST
0x4e4 CALLVALUE
0x4e5 ISZERO
0x4e6 PUSH2 0x4ee
0x4e9 JUMPI
---
0x4e3: JUMPDEST 
0x4e4: V452 = CALLVALUE
0x4e5: V453 = ISZERO V452
0x4e6: V454 = 0x4ee
0x4e9: JUMPI 0x4ee V453
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ea
[0x4ea:0x4ed]
---
Predecessors: [0x4e3]
Successors: []
---
0x4ea PUSH1 0x0
0x4ec DUP1
0x4ed REVERT
---
0x4ea: V455 = 0x0
0x4ed: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ee
[0x4ee:0x4f5]
---
Predecessors: [0x4e3]
Successors: [0x724]
---
0x4ee JUMPDEST
0x4ef PUSH2 0x3dc
0x4f2 PUSH2 0x724
0x4f5 JUMP
---
0x4ee: JUMPDEST 
0x4ef: V456 = 0x3dc
0x4f2: V457 = 0x724
0x4f5: JUMP 0x724
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3dc]
Exit stack: [V12, 0x3dc]

================================

Block 0x4f6
[0x4f6:0x4fc]
---
Predecessors: [0x93]
Successors: [0x4fd, 0x501]
---
0x4f6 JUMPDEST
0x4f7 CALLVALUE
0x4f8 ISZERO
0x4f9 PUSH2 0x501
0x4fc JUMPI
---
0x4f6: JUMPDEST 
0x4f7: V458 = CALLVALUE
0x4f8: V459 = ISZERO V458
0x4f9: V460 = 0x501
0x4fc: JUMPI 0x501 V459
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4fd
[0x4fd:0x500]
---
Predecessors: [0x4f6]
Successors: []
---
0x4fd PUSH1 0x0
0x4ff DUP1
0x500 REVERT
---
0x4fd: V461 = 0x0
0x500: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x501
[0x501:0x50d]
---
Predecessors: [0x4f6]
Successors: [0x72f]
---
0x501 JUMPDEST
0x502 PUSH2 0x3dc
0x505 PUSH1 0x4
0x507 CALLDATALOAD
0x508 ISZERO
0x509 ISZERO
0x50a PUSH2 0x72f
0x50d JUMP
---
0x501: JUMPDEST 
0x502: V462 = 0x3dc
0x505: V463 = 0x4
0x507: V464 = CALLDATALOAD 0x4
0x508: V465 = ISZERO V464
0x509: V466 = ISZERO V465
0x50a: V467 = 0x72f
0x50d: JUMP 0x72f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3dc, V466]
Exit stack: [V12, 0x3dc, V466]

================================

Block 0x50e
[0x50e:0x514]
---
Predecessors: [0x9e]
Successors: [0x515, 0x519]
---
0x50e JUMPDEST
0x50f CALLVALUE
0x510 ISZERO
0x511 PUSH2 0x519
0x514 JUMPI
---
0x50e: JUMPDEST 
0x50f: V468 = CALLVALUE
0x510: V469 = ISZERO V468
0x511: V470 = 0x519
0x514: JUMPI 0x519 V469
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x515
[0x515:0x518]
---
Predecessors: [0x50e]
Successors: []
---
0x515 PUSH1 0x0
0x517 DUP1
0x518 REVERT
---
0x515: V471 = 0x0
0x518: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x519
[0x519:0x52c]
---
Predecessors: [0x50e]
Successors: [0x77a]
---
0x519 JUMPDEST
0x51a PUSH2 0x3fd
0x51d PUSH1 0x1
0x51f PUSH1 0xa0
0x521 PUSH1 0x2
0x523 EXP
0x524 SUB
0x525 PUSH1 0x4
0x527 CALLDATALOAD
0x528 AND
0x529 PUSH2 0x77a
0x52c JUMP
---
0x519: JUMPDEST 
0x51a: V472 = 0x3fd
0x51d: V473 = 0x1
0x51f: V474 = 0xa0
0x521: V475 = 0x2
0x523: V476 = EXP 0x2 0xa0
0x524: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x525: V478 = 0x4
0x527: V479 = CALLDATALOAD 0x4
0x528: V480 = AND V479 0xffffffffffffffffffffffffffffffffffffffff
0x529: V481 = 0x77a
0x52c: JUMP 0x77a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3fd, V480]
Exit stack: [V12, 0x3fd, V480]

================================

Block 0x52d
[0x52d:0x533]
---
Predecessors: [0xa9]
Successors: [0x534, 0x538]
---
0x52d JUMPDEST
0x52e CALLVALUE
0x52f ISZERO
0x530 PUSH2 0x538
0x533 JUMPI
---
0x52d: JUMPDEST 
0x52e: V482 = CALLVALUE
0x52f: V483 = ISZERO V482
0x530: V484 = 0x538
0x533: JUMPI 0x538 V483
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x534
[0x534:0x537]
---
Predecessors: [0x52d]
Successors: []
---
0x534 PUSH1 0x0
0x536 DUP1
0x537 REVERT
---
0x534: V485 = 0x0
0x537: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x538
[0x538:0x53f]
---
Predecessors: [0x52d]
Successors: [0x795]
---
0x538 JUMPDEST
0x539 PUSH2 0x49d
0x53c PUSH2 0x795
0x53f JUMP
---
0x538: JUMPDEST 
0x539: V486 = 0x49d
0x53c: V487 = 0x795
0x53f: JUMP 0x795
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x49d]
Exit stack: [V12, 0x49d]

================================

Block 0x540
[0x540:0x546]
---
Predecessors: [0xb4]
Successors: [0x547, 0x54b]
---
0x540 JUMPDEST
0x541 CALLVALUE
0x542 ISZERO
0x543 PUSH2 0x54b
0x546 JUMPI
---
0x540: JUMPDEST 
0x541: V488 = CALLVALUE
0x542: V489 = ISZERO V488
0x543: V490 = 0x54b
0x546: JUMPI 0x54b V489
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x547
[0x547:0x54a]
---
Predecessors: [0x540]
Successors: []
---
0x547 PUSH1 0x0
0x549 DUP1
0x54a REVERT
---
0x547: V491 = 0x0
0x54a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x54b
[0x54b:0x55e]
---
Predecessors: [0x540]
Successors: [0x7a5]
---
0x54b JUMPDEST
0x54c PUSH2 0x3dc
0x54f PUSH1 0x1
0x551 PUSH1 0xa0
0x553 PUSH1 0x2
0x555 EXP
0x556 SUB
0x557 PUSH1 0x4
0x559 CALLDATALOAD
0x55a AND
0x55b PUSH2 0x7a5
0x55e JUMP
---
0x54b: JUMPDEST 
0x54c: V492 = 0x3dc
0x54f: V493 = 0x1
0x551: V494 = 0xa0
0x553: V495 = 0x2
0x555: V496 = EXP 0x2 0xa0
0x556: V497 = SUB 0x10000000000000000000000000000000000000000 0x1
0x557: V498 = 0x4
0x559: V499 = CALLDATALOAD 0x4
0x55a: V500 = AND V499 0xffffffffffffffffffffffffffffffffffffffff
0x55b: V501 = 0x7a5
0x55e: JUMP 0x7a5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3dc, V500]
Exit stack: [V12, 0x3dc, V500]

================================

Block 0x55f
[0x55f:0x56c]
---
Predecessors: [0x1c2, 0x1eb]
Successors: [0x56d, 0x56e]
---
0x55f JUMPDEST
0x560 PUSH1 0x0
0x562 DUP3
0x563 DUP3
0x564 ADD
0x565 DUP4
0x566 DUP2
0x567 LT
0x568 ISZERO
0x569 PUSH2 0x56e
0x56c JUMPI
---
0x55f: JUMPDEST 
0x560: V502 = 0x0
0x564: V503 = ADD S0 S1
0x567: V504 = LT V503 S1
0x568: V505 = ISZERO V504
0x569: V506 = 0x56e
0x56c: JUMPI 0x56e V505
---
Entry stack: [S30, S29, S28, S27, S26, V942, V948, 0x40c10f19, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x1eb, 0x217}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V503]
Exit stack: [S30, S29, S28, S27, S26, V942, V948, 0x40c10f19, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x1eb, 0x217}, S1, S0, 0x0, V503]

================================

Block 0x56d
[0x56d:0x56d]
---
Predecessors: [0x55f]
Successors: []
---
0x56d INVALID
---
0x56d: INVALID 
---
Entry stack: [S32, S31, S30, S29, S28, V942, V948, 0x40c10f19, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x1eb, 0x217}, S3, S2, 0x0, V503]
Stack pops: 0
Stack additions: []
Exit stack: [S32, S31, S30, S29, S28, V942, V948, 0x40c10f19, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x1eb, 0x217}, S3, S2, 0x0, V503]

================================

Block 0x56e
[0x56e:0x574]
---
Predecessors: [0x55f, 0xbe7]
Successors: [0x1eb, 0x217, 0x9dc, 0xa0e]
---
0x56e JUMPDEST
0x56f SWAP4
0x570 SWAP3
0x571 POP
0x572 POP
0x573 POP
0x574 JUMP
---
0x56e: JUMPDEST 
0x574: JUMP {0x1eb, 0x217, 0x9dc, 0xa0e}
---
Entry stack: [S35, S34, S33, S32, S31, V942, V948, 0x40c10f19, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x1eb, 0x217, 0x9dc, 0xa0e}, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [S35, S34, S33, S32, S31, V942, V948, 0x40c10f19, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S0]

================================

Block 0x575
[0x575:0x58b]
---
Predecessors: [0x3d4]
Successors: [0x58c, 0x590]
---
0x575 JUMPDEST
0x576 PUSH1 0x3
0x578 SLOAD
0x579 CALLER
0x57a PUSH1 0x1
0x57c PUSH1 0xa0
0x57e PUSH1 0x2
0x580 EXP
0x581 SUB
0x582 SWAP1
0x583 DUP2
0x584 AND
0x585 SWAP2
0x586 AND
0x587 EQ
0x588 PUSH2 0x590
0x58b JUMPI
---
0x575: JUMPDEST 
0x576: V507 = 0x3
0x578: V508 = S[0x3]
0x579: V509 = CALLER
0x57a: V510 = 0x1
0x57c: V511 = 0xa0
0x57e: V512 = 0x2
0x580: V513 = EXP 0x2 0xa0
0x581: V514 = SUB 0x10000000000000000000000000000000000000000 0x1
0x584: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V509
0x586: V516 = AND V508 0xffffffffffffffffffffffffffffffffffffffff
0x587: V517 = EQ V516 V515
0x588: V518 = 0x590
0x58b: JUMPI 0x590 V517
---
Entry stack: [V12, 0x3dc]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3dc]

================================

Block 0x58c
[0x58c:0x58f]
---
Predecessors: [0x575]
Successors: []
---
0x58c PUSH1 0x0
0x58e DUP1
0x58f REVERT
---
0x58c: V519 = 0x0
0x58f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x3dc]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3dc]

================================

Block 0x590
[0x590:0x59f]
---
Predecessors: [0x575]
Successors: [0x5a0, 0x5a1]
---
0x590 JUMPDEST
0x591 PUSH1 0x5
0x593 SLOAD
0x594 PUSH3 0xdd7c00
0x598 ADD
0x599 TIMESTAMP
0x59a LT
0x59b ISZERO
0x59c PUSH2 0x5a1
0x59f JUMPI
---
0x590: JUMPDEST 
0x591: V520 = 0x5
0x593: V521 = S[0x5]
0x594: V522 = 0xdd7c00
0x598: V523 = ADD 0xdd7c00 V521
0x599: V524 = TIMESTAMP
0x59a: V525 = LT V524 V523
0x59b: V526 = ISZERO V525
0x59c: V527 = 0x5a1
0x59f: JUMPI 0x5a1 V526
---
Entry stack: [V12, 0x3dc]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3dc]

================================

Block 0x5a0
[0x5a0:0x5a0]
---
Predecessors: [0x590]
Successors: []
---
0x5a0 INVALID
---
0x5a0: INVALID 
---
Entry stack: [V12, 0x3dc]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3dc]

================================

Block 0x5a1
[0x5a1:0x5ac]
---
Predecessors: [0x590]
Successors: []
---
0x5a1 JUMPDEST
0x5a2 CALLER
0x5a3 PUSH1 0x1
0x5a5 PUSH1 0xa0
0x5a7 PUSH1 0x2
0x5a9 EXP
0x5aa SUB
0x5ab AND
0x5ac SELFDESTRUCT
---
0x5a1: JUMPDEST 
0x5a2: V528 = CALLER
0x5a3: V529 = 0x1
0x5a5: V530 = 0xa0
0x5a7: V531 = 0x2
0x5a9: V532 = EXP 0x2 0xa0
0x5aa: V533 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ab: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V528
0x5ac: SELFDESTRUCT V534
---
Entry stack: [V12, 0x3dc]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3dc]

================================

Block 0x5ad
[0x5ad:0x5be]
---
Predecessors: [0x3e9]
Successors: [0x3fd]
---
0x5ad JUMPDEST
0x5ae PUSH1 0x1
0x5b0 PUSH1 0x20
0x5b2 MSTORE
0x5b3 PUSH1 0x0
0x5b5 SWAP1
0x5b6 DUP2
0x5b7 MSTORE
0x5b8 PUSH1 0x40
0x5ba SWAP1
0x5bb SHA3
0x5bc SLOAD
0x5bd DUP2
0x5be JUMP
---
0x5ad: JUMPDEST 
0x5ae: V535 = 0x1
0x5b0: V536 = 0x20
0x5b2: M[0x20] = 0x1
0x5b3: V537 = 0x0
0x5b7: M[0x0] = V365
0x5b8: V538 = 0x40
0x5bb: V539 = SHA3 0x0 0x40
0x5bc: V540 = S[V539]
0x5be: JUMP 0x3fd
---
Entry stack: [V12, 0x3fd, V365]
Stack pops: 2
Stack additions: [S1, V540]
Exit stack: [V12, 0x3fd, V540]

================================

Block 0x5bf
[0x5bf:0x5c4]
---
Predecessors: [0x41a]
Successors: [0x3fd]
---
0x5bf JUMPDEST
0x5c0 PUSH1 0x5
0x5c2 SLOAD
0x5c3 DUP2
0x5c4 JUMP
---
0x5bf: JUMPDEST 
0x5c0: V541 = 0x5
0x5c2: V542 = S[0x5]
0x5c4: JUMP 0x3fd
---
Entry stack: [V12, 0x3fd]
Stack pops: 1
Stack additions: [S0, V542]
Exit stack: [V12, 0x3fd, V542]

================================

Block 0x5c5
[0x5c5:0x5db]
---
Predecessors: [0x42d]
Successors: [0x5dc, 0x5e0]
---
0x5c5 JUMPDEST
0x5c6 PUSH1 0x4
0x5c8 SLOAD
0x5c9 CALLER
0x5ca PUSH1 0x1
0x5cc PUSH1 0xa0
0x5ce PUSH1 0x2
0x5d0 EXP
0x5d1 SUB
0x5d2 SWAP1
0x5d3 DUP2
0x5d4 AND
0x5d5 SWAP2
0x5d6 AND
0x5d7 EQ
0x5d8 PUSH2 0x5e0
0x5db JUMPI
---
0x5c5: JUMPDEST 
0x5c6: V543 = 0x4
0x5c8: V544 = S[0x4]
0x5c9: V545 = CALLER
0x5ca: V546 = 0x1
0x5cc: V547 = 0xa0
0x5ce: V548 = 0x2
0x5d0: V549 = EXP 0x2 0xa0
0x5d1: V550 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d4: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V545
0x5d6: V552 = AND V544 0xffffffffffffffffffffffffffffffffffffffff
0x5d7: V553 = EQ V552 V551
0x5d8: V554 = 0x5e0
0x5db: JUMPI 0x5e0 V553
---
Entry stack: [V12, 0x3dc]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3dc]

================================

Block 0x5dc
[0x5dc:0x5df]
---
Predecessors: [0x5c5]
Successors: []
---
0x5dc PUSH1 0x0
0x5de DUP1
0x5df REVERT
---
0x5dc: V555 = 0x0
0x5df: REVERT 0x0 0x0
---
Entry stack: [V12, 0x3dc]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3dc]

================================

Block 0x5e0
[0x5e0:0x64f]
---
Predecessors: [0x5c5]
Successors: [0x3dc]
---
0x5e0 JUMPDEST
0x5e1 PUSH1 0x4
0x5e3 SLOAD
0x5e4 PUSH1 0x3
0x5e6 SLOAD
0x5e7 PUSH1 0x1
0x5e9 PUSH1 0xa0
0x5eb PUSH1 0x2
0x5ed EXP
0x5ee SUB
0x5ef SWAP2
0x5f0 DUP3
0x5f1 AND
0x5f2 SWAP2
0x5f3 AND
0x5f4 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x615 PUSH1 0x40
0x617 MLOAD
0x618 PUSH1 0x40
0x61a MLOAD
0x61b DUP1
0x61c SWAP2
0x61d SUB
0x61e SWAP1
0x61f LOG3
0x620 PUSH1 0x4
0x622 SLOAD
0x623 PUSH1 0x3
0x625 DUP1
0x626 SLOAD
0x627 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63c NOT
0x63d AND
0x63e PUSH1 0x1
0x640 PUSH1 0xa0
0x642 PUSH1 0x2
0x644 EXP
0x645 SUB
0x646 SWAP1
0x647 SWAP3
0x648 AND
0x649 SWAP2
0x64a SWAP1
0x64b SWAP2
0x64c OR
0x64d SWAP1
0x64e SSTORE
0x64f JUMP
---
0x5e0: JUMPDEST 
0x5e1: V556 = 0x4
0x5e3: V557 = S[0x4]
0x5e4: V558 = 0x3
0x5e6: V559 = S[0x3]
0x5e7: V560 = 0x1
0x5e9: V561 = 0xa0
0x5eb: V562 = 0x2
0x5ed: V563 = EXP 0x2 0xa0
0x5ee: V564 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f1: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0x5f3: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0x5f4: V567 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x615: V568 = 0x40
0x617: V569 = M[0x40]
0x618: V570 = 0x40
0x61a: V571 = M[0x40]
0x61d: V572 = SUB V569 V571
0x61f: LOG V571 V572 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V566 V565
0x620: V573 = 0x4
0x622: V574 = S[0x4]
0x623: V575 = 0x3
0x626: V576 = S[0x3]
0x627: V577 = 0xffffffffffffffffffffffffffffffffffffffff
0x63c: V578 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x63d: V579 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V576
0x63e: V580 = 0x1
0x640: V581 = 0xa0
0x642: V582 = 0x2
0x644: V583 = EXP 0x2 0xa0
0x645: V584 = SUB 0x10000000000000000000000000000000000000000 0x1
0x648: V585 = AND V574 0xffffffffffffffffffffffffffffffffffffffff
0x64c: V586 = OR V585 V579
0x64e: S[0x3] = V586
0x64f: JUMP 0x3dc
---
Entry stack: [V12, 0x3dc]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x650
[0x650:0x655]
---
Predecessors: [0x440]
Successors: [0x3fd]
---
0x650 JUMPDEST
0x651 PUSH1 0x2
0x653 SLOAD
0x654 DUP2
0x655 JUMP
---
0x650: JUMPDEST 
0x651: V587 = 0x2
0x653: V588 = S[0x2]
0x655: JUMP 0x3fd
---
Entry stack: [V12, 0x3fd]
Stack pops: 1
Stack additions: [S0, V588]
Exit stack: [V12, 0x3fd, V588]

================================

Block 0x656
[0x656:0x664]
---
Predecessors: [0x453]
Successors: [0x45b]
---
0x656 JUMPDEST
0x657 PUSH1 0x3
0x659 SLOAD
0x65a PUSH1 0x1
0x65c PUSH1 0xa0
0x65e PUSH1 0x2
0x660 EXP
0x661 SUB
0x662 AND
0x663 DUP2
0x664 JUMP
---
0x656: JUMPDEST 
0x657: V589 = 0x3
0x659: V590 = S[0x3]
0x65a: V591 = 0x1
0x65c: V592 = 0xa0
0x65e: V593 = 0x2
0x660: V594 = EXP 0x2 0xa0
0x661: V595 = SUB 0x10000000000000000000000000000000000000000 0x1
0x662: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V590
0x664: JUMP 0x45b
---
Entry stack: [V12, 0x45b]
Stack pops: 1
Stack additions: [S0, V596]
Exit stack: [V12, 0x45b, V596]

================================

Block 0x665
[0x665:0x6b1]
---
Predecessors: [0x482]
Successors: [0x6b2, 0x6b6]
---
0x665 JUMPDEST
0x666 PUSH1 0x0
0x668 SLOAD
0x669 PUSH1 0x1
0x66b PUSH1 0xa0
0x66d PUSH1 0x2
0x66f EXP
0x670 SUB
0x671 AND
0x672 DUP1
0x673 PUSH4 0x179c537e
0x678 CALLER
0x679 PUSH1 0x40
0x67b MLOAD
0x67c PUSH1 0xe0
0x67e PUSH1 0x2
0x680 EXP
0x681 PUSH4 0xffffffff
0x686 DUP5
0x687 AND
0x688 MUL
0x689 DUP2
0x68a MSTORE
0x68b PUSH1 0x1
0x68d PUSH1 0xa0
0x68f PUSH1 0x2
0x691 EXP
0x692 SUB
0x693 SWAP1
0x694 SWAP2
0x695 AND
0x696 PUSH1 0x4
0x698 DUP3
0x699 ADD
0x69a MSTORE
0x69b PUSH1 0x24
0x69d ADD
0x69e PUSH1 0x0
0x6a0 PUSH1 0x40
0x6a2 MLOAD
0x6a3 DUP1
0x6a4 DUP4
0x6a5 SUB
0x6a6 DUP2
0x6a7 PUSH1 0x0
0x6a9 DUP8
0x6aa DUP1
0x6ab EXTCODESIZE
0x6ac ISZERO
0x6ad ISZERO
0x6ae PUSH2 0x6b6
0x6b1 JUMPI
---
0x665: JUMPDEST 
0x666: V597 = 0x0
0x668: V598 = S[0x0]
0x669: V599 = 0x1
0x66b: V600 = 0xa0
0x66d: V601 = 0x2
0x66f: V602 = EXP 0x2 0xa0
0x670: V603 = SUB 0x10000000000000000000000000000000000000000 0x1
0x671: V604 = AND 0xffffffffffffffffffffffffffffffffffffffff V598
0x673: V605 = 0x179c537e
0x678: V606 = CALLER
0x679: V607 = 0x40
0x67b: V608 = M[0x40]
0x67c: V609 = 0xe0
0x67e: V610 = 0x2
0x680: V611 = EXP 0x2 0xe0
0x681: V612 = 0xffffffff
0x687: V613 = AND 0x179c537e 0xffffffff
0x688: V614 = MUL 0x179c537e 0x100000000000000000000000000000000000000000000000000000000
0x68a: M[V608] = 0x179c537e00000000000000000000000000000000000000000000000000000000
0x68b: V615 = 0x1
0x68d: V616 = 0xa0
0x68f: V617 = 0x2
0x691: V618 = EXP 0x2 0xa0
0x692: V619 = SUB 0x10000000000000000000000000000000000000000 0x1
0x695: V620 = AND V606 0xffffffffffffffffffffffffffffffffffffffff
0x696: V621 = 0x4
0x699: V622 = ADD V608 0x4
0x69a: M[V622] = V620
0x69b: V623 = 0x24
0x69d: V624 = ADD 0x24 V608
0x69e: V625 = 0x0
0x6a0: V626 = 0x40
0x6a2: V627 = M[0x40]
0x6a5: V628 = SUB V624 V627
0x6a7: V629 = 0x0
0x6ab: V630 = EXTCODESIZE V604
0x6ac: V631 = ISZERO V630
0x6ad: V632 = ISZERO V631
0x6ae: V633 = 0x6b6
0x6b1: JUMPI 0x6b6 V632
---
Entry stack: [V12, 0x3dc]
Stack pops: 0
Stack additions: [V604, V604, 0x179c537e, V624, 0x0, V627, V628, V627, 0x0, V604]
Exit stack: [V12, 0x3dc, V604, V604, 0x179c537e, V624, 0x0, V627, V628, V627, 0x0, V604]

================================

Block 0x6b2
[0x6b2:0x6b5]
---
Predecessors: [0x665]
Successors: []
---
0x6b2 PUSH1 0x0
0x6b4 DUP1
0x6b5 REVERT
---
0x6b2: V634 = 0x0
0x6b5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x3dc, V604, V604, 0x179c537e, V624, 0x0, V627, V628, V627, 0x0, V604]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3dc, V604, V604, 0x179c537e, V624, 0x0, V627, V628, V627, 0x0, V604]

================================

Block 0x6b6
[0x6b6:0x6c2]
---
Predecessors: [0x665]
Successors: [0x6c3, 0x6c7]
---
0x6b6 JUMPDEST
0x6b7 PUSH2 0x2c6
0x6ba GAS
0x6bb SUB
0x6bc CALL
0x6bd ISZERO
0x6be ISZERO
0x6bf PUSH2 0x6c7
0x6c2 JUMPI
---
0x6b6: JUMPDEST 
0x6b7: V635 = 0x2c6
0x6ba: V636 = GAS
0x6bb: V637 = SUB V636 0x2c6
0x6bc: V638 = CALL V637 V604 0x0 V627 V628 V627 0x0
0x6bd: V639 = ISZERO V638
0x6be: V640 = ISZERO V639
0x6bf: V641 = 0x6c7
0x6c2: JUMPI 0x6c7 V640
---
Entry stack: [V12, 0x3dc, V604, V604, 0x179c537e, V624, 0x0, V627, V628, V627, 0x0, V604]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x3dc, V604, V604, 0x179c537e, V624]

================================

Block 0x6c3
[0x6c3:0x6c6]
---
Predecessors: [0x6b6]
Successors: []
---
0x6c3 PUSH1 0x0
0x6c5 DUP1
0x6c6 REVERT
---
0x6c3: V642 = 0x0
0x6c6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x3dc, V604, V604, 0x179c537e, V624]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3dc, V604, V604, 0x179c537e, V624]

================================

Block 0x6c7
[0x6c7:0x6cc]
---
Predecessors: [0x6b6]
Successors: [0x3dc]
---
0x6c7 JUMPDEST
0x6c8 POP
0x6c9 POP
0x6ca POP
0x6cb POP
0x6cc JUMP
---
0x6c7: JUMPDEST 
0x6cc: JUMP 0x3dc
---
Entry stack: [V12, 0x3dc, V604, V604, 0x179c537e, V624]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x6cd
[0x6cd:0x6ed]
---
Predecessors: [0x495]
Successors: [0x49d]
---
0x6cd JUMPDEST
0x6ce PUSH1 0x4
0x6d0 SLOAD
0x6d1 PUSH21 0x10000000000000000000000000000000000000000
0x6e7 SWAP1
0x6e8 DIV
0x6e9 PUSH1 0xff
0x6eb AND
0x6ec DUP2
0x6ed JUMP
---
0x6cd: JUMPDEST 
0x6ce: V643 = 0x4
0x6d0: V644 = S[0x4]
0x6d1: V645 = 0x10000000000000000000000000000000000000000
0x6e8: V646 = DIV V644 0x10000000000000000000000000000000000000000
0x6e9: V647 = 0xff
0x6eb: V648 = AND 0xff V646
0x6ed: JUMP 0x49d
---
Entry stack: [V12, 0x49d]
Stack pops: 1
Stack additions: [S0, V648]
Exit stack: [V12, 0x49d, V648]

================================

Block 0x6ee
[0x6ee:0x704]
---
Predecessors: [0x4bc]
Successors: [0x705, 0x709]
---
0x6ee JUMPDEST
0x6ef PUSH1 0x3
0x6f1 SLOAD
0x6f2 CALLER
0x6f3 PUSH1 0x1
0x6f5 PUSH1 0xa0
0x6f7 PUSH1 0x2
0x6f9 EXP
0x6fa SUB
0x6fb SWAP1
0x6fc DUP2
0x6fd AND
0x6fe SWAP2
0x6ff AND
0x700 EQ
0x701 PUSH2 0x709
0x704 JUMPI
---
0x6ee: JUMPDEST 
0x6ef: V649 = 0x3
0x6f1: V650 = S[0x3]
0x6f2: V651 = CALLER
0x6f3: V652 = 0x1
0x6f5: V653 = 0xa0
0x6f7: V654 = 0x2
0x6f9: V655 = EXP 0x2 0xa0
0x6fa: V656 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fd: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V651
0x6ff: V658 = AND V650 0xffffffffffffffffffffffffffffffffffffffff
0x700: V659 = EQ V658 V657
0x701: V660 = 0x709
0x704: JUMPI 0x709 V659
---
Entry stack: [V12, 0x3dc, V444]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3dc, V444]

================================

Block 0x705
[0x705:0x708]
---
Predecessors: [0x6ee]
Successors: []
---
0x705 PUSH1 0x0
0x707 DUP1
0x708 REVERT
---
0x705: V661 = 0x0
0x708: REVERT 0x0 0x0
---
Entry stack: [V12, 0x3dc, V444]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3dc, V444]

================================

Block 0x709
[0x709:0x711]
---
Predecessors: [0x6ee]
Successors: [0x7ef]
---
0x709 JUMPDEST
0x70a PUSH2 0x712
0x70d DUP2
0x70e PUSH2 0x7ef
0x711 JUMP
---
0x709: JUMPDEST 
0x70a: V662 = 0x712
0x70e: V663 = 0x7ef
0x711: JUMP 0x7ef
---
Entry stack: [V12, 0x3dc, V444]
Stack pops: 1
Stack additions: [S0, 0x712, S0]
Exit stack: [V12, 0x3dc, V444, 0x712, V444]

================================

Block 0x712
[0x712:0x714]
---
Predecessors: [0xbc3]
Successors: [0x3dc]
---
0x712 JUMPDEST
0x713 POP
0x714 JUMP
---
0x712: JUMPDEST 
0x714: JUMP S1
---
Entry stack: [S13, S12, S11, S10, S9, V942, V948, 0x40c10f19, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S13, S12, S11, S10, S9, V942, V948, 0x40c10f19, S5, S4, S3, S2]

================================

Block 0x715
[0x715:0x723]
---
Predecessors: [0x4db]
Successors: [0x45b]
---
0x715 JUMPDEST
0x716 PUSH1 0x4
0x718 SLOAD
0x719 PUSH1 0x1
0x71b PUSH1 0xa0
0x71d PUSH1 0x2
0x71f EXP
0x720 SUB
0x721 AND
0x722 DUP2
0x723 JUMP
---
0x715: JUMPDEST 
0x716: V664 = 0x4
0x718: V665 = S[0x4]
0x719: V666 = 0x1
0x71b: V667 = 0xa0
0x71d: V668 = 0x2
0x71f: V669 = EXP 0x2 0xa0
0x720: V670 = SUB 0x10000000000000000000000000000000000000000 0x1
0x721: V671 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0x723: JUMP 0x45b
---
Entry stack: [V12, 0x45b]
Stack pops: 1
Stack additions: [S0, V671]
Exit stack: [V12, 0x45b, V671]

================================

Block 0x724
[0x724:0x72c]
---
Predecessors: [0x4ee]
Successors: [0x7ef]
---
0x724 JUMPDEST
0x725 PUSH2 0x72d
0x728 CALLER
0x729 PUSH2 0x7ef
0x72c JUMP
---
0x724: JUMPDEST 
0x725: V672 = 0x72d
0x728: V673 = CALLER
0x729: V674 = 0x7ef
0x72c: JUMP 0x7ef
---
Entry stack: [V12, 0x3dc]
Stack pops: 0
Stack additions: [0x72d, V673]
Exit stack: [V12, 0x3dc, 0x72d, V673]

================================

Block 0x72d
[0x72d:0x72e]
---
Predecessors: [0xbc3]
Successors: [0x3dc]
---
0x72d JUMPDEST
0x72e JUMP
---
0x72d: JUMPDEST 
0x72e: JUMP S0
---
Entry stack: [S13, S12, S11, S10, S9, V942, V948, 0x40c10f19, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S13, S12, S11, S10, S9, V942, V948, 0x40c10f19, S5, S4, S3, S2, S1]

================================

Block 0x72f
[0x72f:0x745]
---
Predecessors: [0x501]
Successors: [0x746, 0x74a]
---
0x72f JUMPDEST
0x730 PUSH1 0x3
0x732 SLOAD
0x733 CALLER
0x734 PUSH1 0x1
0x736 PUSH1 0xa0
0x738 PUSH1 0x2
0x73a EXP
0x73b SUB
0x73c SWAP1
0x73d DUP2
0x73e AND
0x73f SWAP2
0x740 AND
0x741 EQ
0x742 PUSH2 0x74a
0x745 JUMPI
---
0x72f: JUMPDEST 
0x730: V675 = 0x3
0x732: V676 = S[0x3]
0x733: V677 = CALLER
0x734: V678 = 0x1
0x736: V679 = 0xa0
0x738: V680 = 0x2
0x73a: V681 = EXP 0x2 0xa0
0x73b: V682 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73e: V683 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0x740: V684 = AND V676 0xffffffffffffffffffffffffffffffffffffffff
0x741: V685 = EQ V684 V683
0x742: V686 = 0x74a
0x745: JUMPI 0x74a V685
---
Entry stack: [V12, 0x3dc, V466]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3dc, V466]

================================

Block 0x746
[0x746:0x749]
---
Predecessors: [0x72f]
Successors: []
---
0x746 PUSH1 0x0
0x748 DUP1
0x749 REVERT
---
0x746: V687 = 0x0
0x749: REVERT 0x0 0x0
---
Entry stack: [V12, 0x3dc, V466]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3dc, V466]

================================

Block 0x74a
[0x74a:0x779]
---
Predecessors: [0x72f]
Successors: [0x3dc]
---
0x74a JUMPDEST
0x74b PUSH1 0x4
0x74d DUP1
0x74e SLOAD
0x74f SWAP2
0x750 ISZERO
0x751 ISZERO
0x752 PUSH1 0xa8
0x754 PUSH1 0x2
0x756 EXP
0x757 MUL
0x758 PUSH22 0xff000000000000000000000000000000000000000000
0x76f NOT
0x770 SWAP1
0x771 SWAP3
0x772 AND
0x773 SWAP2
0x774 SWAP1
0x775 SWAP2
0x776 OR
0x777 SWAP1
0x778 SSTORE
0x779 JUMP
---
0x74a: JUMPDEST 
0x74b: V688 = 0x4
0x74e: V689 = S[0x4]
0x750: V690 = ISZERO V466
0x751: V691 = ISZERO V690
0x752: V692 = 0xa8
0x754: V693 = 0x2
0x756: V694 = EXP 0x2 0xa8
0x757: V695 = MUL 0x1000000000000000000000000000000000000000000 V691
0x758: V696 = 0xff000000000000000000000000000000000000000000
0x76f: V697 = NOT 0xff000000000000000000000000000000000000000000
0x772: V698 = AND V689 0xffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff
0x776: V699 = OR V698 V695
0x778: S[0x4] = V699
0x779: JUMP 0x3dc
---
Entry stack: [V12, 0x3dc, V466]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x77a
[0x77a:0x794]
---
Predecessors: [0x519]
Successors: [0x3fd]
---
0x77a JUMPDEST
0x77b PUSH1 0x1
0x77d PUSH1 0xa0
0x77f PUSH1 0x2
0x781 EXP
0x782 SUB
0x783 AND
0x784 PUSH1 0x0
0x786 SWAP1
0x787 DUP2
0x788 MSTORE
0x789 PUSH1 0x1
0x78b PUSH1 0x20
0x78d MSTORE
0x78e PUSH1 0x40
0x790 SWAP1
0x791 SHA3
0x792 SLOAD
0x793 SWAP1
0x794 JUMP
---
0x77a: JUMPDEST 
0x77b: V700 = 0x1
0x77d: V701 = 0xa0
0x77f: V702 = 0x2
0x781: V703 = EXP 0x2 0xa0
0x782: V704 = SUB 0x10000000000000000000000000000000000000000 0x1
0x783: V705 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x784: V706 = 0x0
0x788: M[0x0] = V705
0x789: V707 = 0x1
0x78b: V708 = 0x20
0x78d: M[0x20] = 0x1
0x78e: V709 = 0x40
0x791: V710 = SHA3 0x0 0x40
0x792: V711 = S[V710]
0x794: JUMP 0x3fd
---
Entry stack: [V12, 0x3fd, V480]
Stack pops: 2
Stack additions: [V711]
Exit stack: [V12, V711]

================================

Block 0x795
[0x795:0x7a4]
---
Predecessors: [0x538]
Successors: [0x49d]
---
0x795 JUMPDEST
0x796 PUSH1 0x4
0x798 SLOAD
0x799 PUSH1 0xa8
0x79b PUSH1 0x2
0x79d EXP
0x79e SWAP1
0x79f DIV
0x7a0 PUSH1 0xff
0x7a2 AND
0x7a3 DUP2
0x7a4 JUMP
---
0x795: JUMPDEST 
0x796: V712 = 0x4
0x798: V713 = S[0x4]
0x799: V714 = 0xa8
0x79b: V715 = 0x2
0x79d: V716 = EXP 0x2 0xa8
0x79f: V717 = DIV V713 0x1000000000000000000000000000000000000000000
0x7a0: V718 = 0xff
0x7a2: V719 = AND 0xff V717
0x7a4: JUMP 0x49d
---
Entry stack: [V12, 0x49d]
Stack pops: 1
Stack additions: [S0, V719]
Exit stack: [V12, 0x49d, V719]

================================

Block 0x7a5
[0x7a5:0x7bb]
---
Predecessors: [0x54b]
Successors: [0x7bc, 0x7c0]
---
0x7a5 JUMPDEST
0x7a6 PUSH1 0x3
0x7a8 SLOAD
0x7a9 CALLER
0x7aa PUSH1 0x1
0x7ac PUSH1 0xa0
0x7ae PUSH1 0x2
0x7b0 EXP
0x7b1 SUB
0x7b2 SWAP1
0x7b3 DUP2
0x7b4 AND
0x7b5 SWAP2
0x7b6 AND
0x7b7 EQ
0x7b8 PUSH2 0x7c0
0x7bb JUMPI
---
0x7a5: JUMPDEST 
0x7a6: V720 = 0x3
0x7a8: V721 = S[0x3]
0x7a9: V722 = CALLER
0x7aa: V723 = 0x1
0x7ac: V724 = 0xa0
0x7ae: V725 = 0x2
0x7b0: V726 = EXP 0x2 0xa0
0x7b1: V727 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b4: V728 = AND 0xffffffffffffffffffffffffffffffffffffffff V722
0x7b6: V729 = AND V721 0xffffffffffffffffffffffffffffffffffffffff
0x7b7: V730 = EQ V729 V728
0x7b8: V731 = 0x7c0
0x7bb: JUMPI 0x7c0 V730
---
Entry stack: [V12, 0x3dc, V500]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3dc, V500]

================================

Block 0x7bc
[0x7bc:0x7bf]
---
Predecessors: [0x7a5]
Successors: []
---
0x7bc PUSH1 0x0
0x7be DUP1
0x7bf REVERT
---
0x7bc: V732 = 0x0
0x7bf: REVERT 0x0 0x0
---
Entry stack: [V12, 0x3dc, V500]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x3dc, V500]

================================

Block 0x7c0
[0x7c0:0x7ee]
---
Predecessors: [0x7a5]
Successors: [0x3dc]
---
0x7c0 JUMPDEST
0x7c1 PUSH1 0x4
0x7c3 DUP1
0x7c4 SLOAD
0x7c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7da NOT
0x7db AND
0x7dc PUSH1 0x1
0x7de PUSH1 0xa0
0x7e0 PUSH1 0x2
0x7e2 EXP
0x7e3 SUB
0x7e4 SWAP3
0x7e5 SWAP1
0x7e6 SWAP3
0x7e7 AND
0x7e8 SWAP2
0x7e9 SWAP1
0x7ea SWAP2
0x7eb OR
0x7ec SWAP1
0x7ed SSTORE
0x7ee JUMP
---
0x7c0: JUMPDEST 
0x7c1: V733 = 0x4
0x7c4: V734 = S[0x4]
0x7c5: V735 = 0xffffffffffffffffffffffffffffffffffffffff
0x7da: V736 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x7db: V737 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V734
0x7dc: V738 = 0x1
0x7de: V739 = 0xa0
0x7e0: V740 = 0x2
0x7e2: V741 = EXP 0x2 0xa0
0x7e3: V742 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e7: V743 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x7eb: V744 = OR V743 V737
0x7ed: S[0x4] = V744
0x7ee: JUMP 0x3dc
---
Entry stack: [V12, 0x3dc, V500]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x7ef
[0x7ef:0x848]
---
Predecessors: [0x709, 0x724]
Successors: [0x849, 0x84d]
---
0x7ef JUMPDEST
0x7f0 PUSH1 0x0
0x7f2 DUP1
0x7f3 SLOAD
0x7f4 PUSH1 0x1
0x7f6 PUSH1 0xa0
0x7f8 PUSH1 0x2
0x7fa EXP
0x7fb SUB
0x7fc AND
0x7fd SWAP1
0x7fe DUP1
0x7ff DUP1
0x800 DUP1
0x801 DUP5
0x802 PUSH4 0x4cc53838
0x807 ADDRESS
0x808 DUP4
0x809 PUSH1 0x40
0x80b MLOAD
0x80c PUSH1 0x20
0x80e ADD
0x80f MSTORE
0x810 PUSH1 0x40
0x812 MLOAD
0x813 PUSH1 0xe0
0x815 PUSH1 0x2
0x817 EXP
0x818 PUSH4 0xffffffff
0x81d DUP5
0x81e AND
0x81f MUL
0x820 DUP2
0x821 MSTORE
0x822 PUSH1 0x1
0x824 PUSH1 0xa0
0x826 PUSH1 0x2
0x828 EXP
0x829 SUB
0x82a SWAP1
0x82b SWAP2
0x82c AND
0x82d PUSH1 0x4
0x82f DUP3
0x830 ADD
0x831 MSTORE
0x832 PUSH1 0x24
0x834 ADD
0x835 PUSH1 0x20
0x837 PUSH1 0x40
0x839 MLOAD
0x83a DUP1
0x83b DUP4
0x83c SUB
0x83d DUP2
0x83e PUSH1 0x0
0x840 DUP8
0x841 DUP1
0x842 EXTCODESIZE
0x843 ISZERO
0x844 ISZERO
0x845 PUSH2 0x84d
0x848 JUMPI
---
0x7ef: JUMPDEST 
0x7f0: V745 = 0x0
0x7f3: V746 = S[0x0]
0x7f4: V747 = 0x1
0x7f6: V748 = 0xa0
0x7f8: V749 = 0x2
0x7fa: V750 = EXP 0x2 0xa0
0x7fb: V751 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7fc: V752 = AND 0xffffffffffffffffffffffffffffffffffffffff V746
0x802: V753 = 0x4cc53838
0x807: V754 = ADDRESS
0x809: V755 = 0x40
0x80b: V756 = M[0x40]
0x80c: V757 = 0x20
0x80e: V758 = ADD 0x20 V756
0x80f: M[V758] = 0x0
0x810: V759 = 0x40
0x812: V760 = M[0x40]
0x813: V761 = 0xe0
0x815: V762 = 0x2
0x817: V763 = EXP 0x2 0xe0
0x818: V764 = 0xffffffff
0x81e: V765 = AND 0x4cc53838 0xffffffff
0x81f: V766 = MUL 0x4cc53838 0x100000000000000000000000000000000000000000000000000000000
0x821: M[V760] = 0x4cc5383800000000000000000000000000000000000000000000000000000000
0x822: V767 = 0x1
0x824: V768 = 0xa0
0x826: V769 = 0x2
0x828: V770 = EXP 0x2 0xa0
0x829: V771 = SUB 0x10000000000000000000000000000000000000000 0x1
0x82c: V772 = AND V754 0xffffffffffffffffffffffffffffffffffffffff
0x82d: V773 = 0x4
0x830: V774 = ADD V760 0x4
0x831: M[V774] = V772
0x832: V775 = 0x24
0x834: V776 = ADD 0x24 V760
0x835: V777 = 0x20
0x837: V778 = 0x40
0x839: V779 = M[0x40]
0x83c: V780 = SUB V776 V779
0x83e: V781 = 0x0
0x842: V782 = EXTCODESIZE V752
0x843: V783 = ISZERO V782
0x844: V784 = ISZERO V783
0x845: V785 = 0x84d
0x848: JUMPI 0x84d V784
---
Entry stack: [V12, S3, S2, {0x712, 0x72d}, S0]
Stack pops: 0
Stack additions: [V752, 0x0, 0x0, 0x0, 0x0, V752, 0x4cc53838, V776, 0x20, V779, V780, V779, 0x0, V752]
Exit stack: [V12, S3, S2, {0x712, 0x72d}, S0, V752, 0x0, 0x0, 0x0, 0x0, V752, 0x4cc53838, V776, 0x20, V779, V780, V779, 0x0, V752]

================================

Block 0x849
[0x849:0x84c]
---
Predecessors: [0x7ef]
Successors: []
---
0x849 PUSH1 0x0
0x84b DUP1
0x84c REVERT
---
0x849: V786 = 0x0
0x84c: REVERT 0x0 0x0
---
Entry stack: [V12, S17, S16, {0x712, 0x72d}, S14, V752, 0x0, 0x0, 0x0, 0x0, V752, 0x4cc53838, V776, 0x20, V779, V780, V779, 0x0, V752]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, {0x712, 0x72d}, S14, V752, 0x0, 0x0, 0x0, 0x0, V752, 0x4cc53838, V776, 0x20, V779, V780, V779, 0x0, V752]

================================

Block 0x84d
[0x84d:0x859]
---
Predecessors: [0x7ef]
Successors: [0x85a, 0x85e]
---
0x84d JUMPDEST
0x84e PUSH2 0x2c6
0x851 GAS
0x852 SUB
0x853 CALL
0x854 ISZERO
0x855 ISZERO
0x856 PUSH2 0x85e
0x859 JUMPI
---
0x84d: JUMPDEST 
0x84e: V787 = 0x2c6
0x851: V788 = GAS
0x852: V789 = SUB V788 0x2c6
0x853: V790 = CALL V789 V752 0x0 V779 V780 V779 0x20
0x854: V791 = ISZERO V790
0x855: V792 = ISZERO V791
0x856: V793 = 0x85e
0x859: JUMPI 0x85e V792
---
Entry stack: [V12, S17, S16, {0x712, 0x72d}, S14, V752, 0x0, 0x0, 0x0, 0x0, V752, 0x4cc53838, V776, 0x20, V779, V780, V779, 0x0, V752]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S17, S16, {0x712, 0x72d}, S14, V752, 0x0, 0x0, 0x0, 0x0, V752, 0x4cc53838, V776]

================================

Block 0x85a
[0x85a:0x85d]
---
Predecessors: [0x84d]
Successors: []
---
0x85a PUSH1 0x0
0x85c DUP1
0x85d REVERT
---
0x85a: V794 = 0x0
0x85d: REVERT 0x0 0x0
---
Entry stack: [V12, S11, S10, {0x712, 0x72d}, S8, S7, 0x0, 0x0, 0x0, 0x0, S2, 0x4cc53838, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, {0x712, 0x72d}, S8, S7, 0x0, 0x0, 0x0, 0x0, S2, 0x4cc53838, S0]

================================

Block 0x85e
[0x85e:0x88a]
---
Predecessors: [0x84d]
Successors: [0x88b, 0x88c]
---
0x85e JUMPDEST
0x85f POP
0x860 POP
0x861 POP
0x862 PUSH1 0x40
0x864 MLOAD
0x865 DUP1
0x866 MLOAD
0x867 PUSH1 0x1
0x869 PUSH1 0xa0
0x86b PUSH1 0x2
0x86d EXP
0x86e SUB
0x86f DUP9
0x870 AND
0x871 PUSH1 0x0
0x873 SWAP1
0x874 DUP2
0x875 MSTORE
0x876 PUSH1 0x1
0x878 PUSH1 0x20
0x87a MSTORE
0x87b PUSH1 0x40
0x87d DUP2
0x87e SHA3
0x87f SLOAD
0x880 SWAP2
0x881 SWAP7
0x882 POP
0x883 SWAP1
0x884 GT
0x885 SWAP1
0x886 POP
0x887 PUSH2 0x88c
0x88a JUMPI
---
0x85e: JUMPDEST 
0x862: V795 = 0x40
0x864: V796 = M[0x40]
0x866: V797 = M[V796]
0x867: V798 = 0x1
0x869: V799 = 0xa0
0x86b: V800 = 0x2
0x86d: V801 = EXP 0x2 0xa0
0x86e: V802 = SUB 0x10000000000000000000000000000000000000000 0x1
0x870: V803 = AND S8 0xffffffffffffffffffffffffffffffffffffffff
0x871: V804 = 0x0
0x875: M[0x0] = V803
0x876: V805 = 0x1
0x878: V806 = 0x20
0x87a: M[0x20] = 0x1
0x87b: V807 = 0x40
0x87e: V808 = SHA3 0x0 0x40
0x87f: V809 = S[V808]
0x884: V810 = GT V809 0x0
0x887: V811 = 0x88c
0x88a: JUMPI 0x88c V810
---
Entry stack: [V12, S11, S10, {0x712, 0x72d}, S8, S7, 0x0, 0x0, 0x0, 0x0, S2, 0x4cc53838, S0]
Stack pops: 9
Stack additions: [S8, S7, V797, S5, S4, S3]
Exit stack: [V12, S11, S10, {0x712, 0x72d}, S8, S7, V797, 0x0, 0x0, 0x0]

================================

Block 0x88b
[0x88b:0x88b]
---
Predecessors: [0x85e]
Successors: []
---
0x88b INVALID
---
0x88b: INVALID 
---
Entry stack: [V12, S8, S7, {0x712, 0x72d}, S5, S4, V797, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, {0x712, 0x72d}, S5, S4, V797, 0x0, 0x0, 0x0]

================================

Block 0x88c
[0x88c:0x89e]
---
Predecessors: [0x85e]
Successors: [0x89f, 0x8a0]
---
0x88c JUMPDEST
0x88d PUSH1 0x4
0x88f SLOAD
0x890 PUSH1 0xa8
0x892 PUSH1 0x2
0x894 EXP
0x895 SWAP1
0x896 DIV
0x897 PUSH1 0xff
0x899 AND
0x89a ISZERO
0x89b PUSH2 0x8a0
0x89e JUMPI
---
0x88c: JUMPDEST 
0x88d: V812 = 0x4
0x88f: V813 = S[0x4]
0x890: V814 = 0xa8
0x892: V815 = 0x2
0x894: V816 = EXP 0x2 0xa8
0x896: V817 = DIV V813 0x1000000000000000000000000000000000000000000
0x897: V818 = 0xff
0x899: V819 = AND 0xff V817
0x89a: V820 = ISZERO V819
0x89b: V821 = 0x8a0
0x89e: JUMPI 0x8a0 V820
---
Entry stack: [V12, S8, S7, {0x712, 0x72d}, S5, S4, V797, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, {0x712, 0x72d}, S5, S4, V797, 0x0, 0x0, 0x0]

================================

Block 0x89f
[0x89f:0x89f]
---
Predecessors: [0x88c]
Successors: []
---
0x89f INVALID
---
0x89f: INVALID 
---
Entry stack: [V12, S8, S7, {0x712, 0x72d}, S5, S4, S3, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, {0x712, 0x72d}, S5, S4, S3, 0x0, 0x0, 0x0]

================================

Block 0x8a0
[0x8a0:0x8cb]
---
Predecessors: [0x88c]
Successors: [0x8cc, 0x952]
---
0x8a0 JUMPDEST
0x8a1 PUSH1 0x1
0x8a3 PUSH1 0xa0
0x8a5 PUSH1 0x2
0x8a7 EXP
0x8a8 SUB
0x8a9 DUP7
0x8aa AND
0x8ab PUSH1 0x0
0x8ad SWAP1
0x8ae DUP2
0x8af MSTORE
0x8b0 PUSH1 0x1
0x8b2 PUSH1 0x20
0x8b4 MSTORE
0x8b5 PUSH1 0x40
0x8b7 DUP2
0x8b8 SHA3
0x8b9 DUP1
0x8ba SLOAD
0x8bb SWAP2
0x8bc SWAP1
0x8bd SSTORE
0x8be PUSH1 0x2
0x8c0 SLOAD
0x8c1 SWAP1
0x8c2 SWAP4
0x8c3 POP
0x8c4 DUP5
0x8c5 SWAP1
0x8c6 LT
0x8c7 ISZERO
0x8c8 PUSH2 0x952
0x8cb JUMPI
---
0x8a0: JUMPDEST 
0x8a1: V822 = 0x1
0x8a3: V823 = 0xa0
0x8a5: V824 = 0x2
0x8a7: V825 = EXP 0x2 0xa0
0x8a8: V826 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8aa: V827 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x8ab: V828 = 0x0
0x8af: M[0x0] = V827
0x8b0: V829 = 0x1
0x8b2: V830 = 0x20
0x8b4: M[0x20] = 0x1
0x8b5: V831 = 0x40
0x8b8: V832 = SHA3 0x0 0x40
0x8ba: V833 = S[V832]
0x8bd: S[V832] = 0x0
0x8be: V834 = 0x2
0x8c0: V835 = S[0x2]
0x8c6: V836 = LT V835 S3
0x8c7: V837 = ISZERO V836
0x8c8: V838 = 0x952
0x8cb: JUMPI 0x952 V837
---
Entry stack: [V12, S8, S7, {0x712, 0x72d}, S5, S4, S3, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V833, S1, S0]
Exit stack: [V12, S8, S7, {0x712, 0x72d}, S5, S4, S3, V833, 0x0, 0x0]

================================

Block 0x8cc
[0x8cc:0x8fb]
---
Predecessors: [0x8a0]
Successors: [0x8fc, 0x8fd]
---
0x8cc PUSH1 0x1
0x8ce PUSH1 0xa0
0x8d0 PUSH1 0x2
0x8d2 EXP
0x8d3 SUB
0x8d4 DUP7
0x8d5 AND
0x8d6 DUP4
0x8d7 ISZERO
0x8d8 PUSH2 0x8fc
0x8db MUL
0x8dc DUP5
0x8dd PUSH1 0x40
0x8df MLOAD
0x8e0 PUSH1 0x0
0x8e2 PUSH1 0x40
0x8e4 MLOAD
0x8e5 DUP1
0x8e6 DUP4
0x8e7 SUB
0x8e8 DUP2
0x8e9 DUP6
0x8ea DUP9
0x8eb DUP9
0x8ec CALL
0x8ed ISZERO
0x8ee ISZERO
0x8ef PUSH1 0x1
0x8f1 EQ
0x8f2 SWAP4
0x8f3 POP
0x8f4 PUSH2 0x8fd
0x8f7 SWAP3
0x8f8 POP
0x8f9 POP
0x8fa POP
0x8fb JUMPI
---
0x8cc: V839 = 0x1
0x8ce: V840 = 0xa0
0x8d0: V841 = 0x2
0x8d2: V842 = EXP 0x2 0xa0
0x8d3: V843 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d5: V844 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x8d7: V845 = ISZERO V833
0x8d8: V846 = 0x8fc
0x8db: V847 = MUL 0x8fc V845
0x8dd: V848 = 0x40
0x8df: V849 = M[0x40]
0x8e0: V850 = 0x0
0x8e2: V851 = 0x40
0x8e4: V852 = M[0x40]
0x8e7: V853 = SUB V849 V852
0x8ec: V854 = CALL V847 V844 V833 V852 V853 V852 0x0
0x8ed: V855 = ISZERO V854
0x8ee: V856 = ISZERO V855
0x8ef: V857 = 0x1
0x8f1: V858 = EQ 0x1 V856
0x8f4: V859 = 0x8fd
0x8fb: JUMPI 0x8fd V858
---
Entry stack: [V12, S8, S7, {0x712, 0x72d}, S5, S4, S3, V833, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V12, S8, S7, {0x712, 0x72d}, S5, S4, S3, V833, 0x0, 0x0]

================================

Block 0x8fc
[0x8fc:0x8fc]
---
Predecessors: [0x8cc]
Successors: []
---
0x8fc INVALID
---
0x8fc: INVALID 
---
Entry stack: [V12, S8, S7, {0x712, 0x72d}, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, {0x712, 0x72d}, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x8fd
[0x8fd:0x951]
---
Predecessors: [0x8cc]
Successors: [0xbc3]
---
0x8fd JUMPDEST
0x8fe PUSH32 0xf40cc8c1a1d17359049ba500cfc894596a692cffc9d03943cd92ec2e159cf6ae
0x91f ADDRESS
0x920 DUP8
0x921 DUP6
0x922 PUSH1 0x40
0x924 MLOAD
0x925 PUSH1 0x1
0x927 PUSH1 0xa0
0x929 PUSH1 0x2
0x92b EXP
0x92c SUB
0x92d SWAP4
0x92e DUP5
0x92f AND
0x930 DUP2
0x931 MSTORE
0x932 SWAP2
0x933 SWAP1
0x934 SWAP3
0x935 AND
0x936 PUSH1 0x20
0x938 DUP3
0x939 ADD
0x93a MSTORE
0x93b PUSH1 0x40
0x93d DUP1
0x93e DUP3
0x93f ADD
0x940 SWAP3
0x941 SWAP1
0x942 SWAP3
0x943 MSTORE
0x944 PUSH1 0x60
0x946 ADD
0x947 SWAP1
0x948 MLOAD
0x949 DUP1
0x94a SWAP2
0x94b SUB
0x94c SWAP1
0x94d LOG1
0x94e PUSH2 0xbc3
0x951 JUMP
---
0x8fd: JUMPDEST 
0x8fe: V860 = 0xf40cc8c1a1d17359049ba500cfc894596a692cffc9d03943cd92ec2e159cf6ae
0x91f: V861 = ADDRESS
0x922: V862 = 0x40
0x924: V863 = M[0x40]
0x925: V864 = 0x1
0x927: V865 = 0xa0
0x929: V866 = 0x2
0x92b: V867 = EXP 0x2 0xa0
0x92c: V868 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92f: V869 = AND 0xffffffffffffffffffffffffffffffffffffffff V861
0x931: M[V863] = V869
0x935: V870 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x936: V871 = 0x20
0x939: V872 = ADD V863 0x20
0x93a: M[V872] = V870
0x93b: V873 = 0x40
0x93f: V874 = ADD V863 0x40
0x943: M[V874] = S2
0x944: V875 = 0x60
0x946: V876 = ADD 0x60 V863
0x948: V877 = M[0x40]
0x94b: V878 = SUB V876 V877
0x94d: LOG V877 V878 0xf40cc8c1a1d17359049ba500cfc894596a692cffc9d03943cd92ec2e159cf6ae
0x94e: V879 = 0xbc3
0x951: JUMP 0xbc3
---
Entry stack: [V12, S8, S7, {0x712, 0x72d}, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V12, S8, S7, {0x712, 0x72d}, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x952
[0x952:0x9a4]
---
Predecessors: [0x8a0]
Successors: [0x9a5, 0x9a9]
---
0x952 JUMPDEST
0x953 DUP5
0x954 PUSH1 0x1
0x956 PUSH1 0xa0
0x958 PUSH1 0x2
0x95a EXP
0x95b SUB
0x95c AND
0x95d PUSH4 0xff5bc8a7
0x962 ADDRESS
0x963 PUSH1 0x0
0x965 PUSH1 0x40
0x967 MLOAD
0x968 PUSH1 0x20
0x96a ADD
0x96b MSTORE
0x96c PUSH1 0x40
0x96e MLOAD
0x96f PUSH1 0xe0
0x971 PUSH1 0x2
0x973 EXP
0x974 PUSH4 0xffffffff
0x979 DUP5
0x97a AND
0x97b MUL
0x97c DUP2
0x97d MSTORE
0x97e PUSH1 0x1
0x980 PUSH1 0xa0
0x982 PUSH1 0x2
0x984 EXP
0x985 SUB
0x986 SWAP1
0x987 SWAP2
0x988 AND
0x989 PUSH1 0x4
0x98b DUP3
0x98c ADD
0x98d MSTORE
0x98e PUSH1 0x24
0x990 ADD
0x991 PUSH1 0x20
0x993 PUSH1 0x40
0x995 MLOAD
0x996 DUP1
0x997 DUP4
0x998 SUB
0x999 DUP2
0x99a PUSH1 0x0
0x99c DUP8
0x99d DUP1
0x99e EXTCODESIZE
0x99f ISZERO
0x9a0 ISZERO
0x9a1 PUSH2 0x9a9
0x9a4 JUMPI
---
0x952: JUMPDEST 
0x954: V880 = 0x1
0x956: V881 = 0xa0
0x958: V882 = 0x2
0x95a: V883 = EXP 0x2 0xa0
0x95b: V884 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95c: V885 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x95d: V886 = 0xff5bc8a7
0x962: V887 = ADDRESS
0x963: V888 = 0x0
0x965: V889 = 0x40
0x967: V890 = M[0x40]
0x968: V891 = 0x20
0x96a: V892 = ADD 0x20 V890
0x96b: M[V892] = 0x0
0x96c: V893 = 0x40
0x96e: V894 = M[0x40]
0x96f: V895 = 0xe0
0x971: V896 = 0x2
0x973: V897 = EXP 0x2 0xe0
0x974: V898 = 0xffffffff
0x97a: V899 = AND 0xff5bc8a7 0xffffffff
0x97b: V900 = MUL 0xff5bc8a7 0x100000000000000000000000000000000000000000000000000000000
0x97d: M[V894] = 0xff5bc8a700000000000000000000000000000000000000000000000000000000
0x97e: V901 = 0x1
0x980: V902 = 0xa0
0x982: V903 = 0x2
0x984: V904 = EXP 0x2 0xa0
0x985: V905 = SUB 0x10000000000000000000000000000000000000000 0x1
0x988: V906 = AND V887 0xffffffffffffffffffffffffffffffffffffffff
0x989: V907 = 0x4
0x98c: V908 = ADD V894 0x4
0x98d: M[V908] = V906
0x98e: V909 = 0x24
0x990: V910 = ADD 0x24 V894
0x991: V911 = 0x20
0x993: V912 = 0x40
0x995: V913 = M[0x40]
0x998: V914 = SUB V910 V913
0x99a: V915 = 0x0
0x99e: V916 = EXTCODESIZE V885
0x99f: V917 = ISZERO V916
0x9a0: V918 = ISZERO V917
0x9a1: V919 = 0x9a9
0x9a4: JUMPI 0x9a9 V918
---
Entry stack: [V12, S8, S7, {0x712, 0x72d}, S5, S4, S3, V833, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V885, 0xff5bc8a7, V910, 0x20, V913, V914, V913, 0x0, V885]
Exit stack: [V12, S8, S7, {0x712, 0x72d}, S5, S4, S3, V833, 0x0, 0x0, V885, 0xff5bc8a7, V910, 0x20, V913, V914, V913, 0x0, V885]

================================

Block 0x9a5
[0x9a5:0x9a8]
---
Predecessors: [0x952]
Successors: []
---
0x9a5 PUSH1 0x0
0x9a7 DUP1
0x9a8 REVERT
---
0x9a5: V920 = 0x0
0x9a8: REVERT 0x0 0x0
---
Entry stack: [V12, S17, S16, {0x712, 0x72d}, S14, S13, S12, V833, 0x0, 0x0, V885, 0xff5bc8a7, V910, 0x20, V913, V914, V913, 0x0, V885]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, {0x712, 0x72d}, S14, S13, S12, V833, 0x0, 0x0, V885, 0xff5bc8a7, V910, 0x20, V913, V914, V913, 0x0, V885]

================================

Block 0x9a9
[0x9a9:0x9b5]
---
Predecessors: [0x952]
Successors: [0x9b6, 0x9ba]
---
0x9a9 JUMPDEST
0x9aa PUSH2 0x2c6
0x9ad GAS
0x9ae SUB
0x9af CALL
0x9b0 ISZERO
0x9b1 ISZERO
0x9b2 PUSH2 0x9ba
0x9b5 JUMPI
---
0x9a9: JUMPDEST 
0x9aa: V921 = 0x2c6
0x9ad: V922 = GAS
0x9ae: V923 = SUB V922 0x2c6
0x9af: V924 = CALL V923 V885 0x0 V913 V914 V913 0x20
0x9b0: V925 = ISZERO V924
0x9b1: V926 = ISZERO V925
0x9b2: V927 = 0x9ba
0x9b5: JUMPI 0x9ba V926
---
Entry stack: [V12, S17, S16, {0x712, 0x72d}, S14, S13, S12, V833, 0x0, 0x0, V885, 0xff5bc8a7, V910, 0x20, V913, V914, V913, 0x0, V885]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S17, S16, {0x712, 0x72d}, S14, S13, S12, V833, 0x0, 0x0, V885, 0xff5bc8a7, V910]

================================

Block 0x9b6
[0x9b6:0x9b9]
---
Predecessors: [0x9a9]
Successors: []
---
0x9b6 PUSH1 0x0
0x9b8 DUP1
0x9b9 REVERT
---
0x9b6: V928 = 0x0
0x9b9: REVERT 0x0 0x0
---
Entry stack: [V12, S11, S10, {0x712, 0x72d}, S8, S7, S6, V833, 0x0, 0x0, V885, 0xff5bc8a7, V910]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, {0x712, 0x72d}, S8, S7, S6, V833, 0x0, 0x0, V885, 0xff5bc8a7, V910]

================================

Block 0x9ba
[0x9ba:0x9db]
---
Predecessors: [0x9a9]
Successors: [0xbcb]
---
0x9ba JUMPDEST
0x9bb POP
0x9bc POP
0x9bd POP
0x9be PUSH1 0x40
0x9c0 MLOAD
0x9c1 DUP1
0x9c2 MLOAD
0x9c3 PUSH1 0x2
0x9c5 SLOAD
0x9c6 SWAP1
0x9c7 SWAP4
0x9c8 POP
0x9c9 SWAP1
0x9ca POP
0x9cb PUSH2 0x9dc
0x9ce DUP6
0x9cf DUP3
0x9d0 SUB
0x9d1 DUP6
0x9d2 PUSH4 0xffffffff
0x9d7 PUSH2 0xbcb
0x9da AND
0x9db JUMP
---
0x9ba: JUMPDEST 
0x9be: V929 = 0x40
0x9c0: V930 = M[0x40]
0x9c2: V931 = M[V930]
0x9c3: V932 = 0x2
0x9c5: V933 = S[0x2]
0x9cb: V934 = 0x9dc
0x9d0: V935 = SUB V933 S6
0x9d2: V936 = 0xffffffff
0x9d7: V937 = 0xbcb
0x9da: V938 = AND 0xbcb 0xffffffff
0x9db: JUMP 0xbcb
---
Entry stack: [V12, S11, S10, {0x712, 0x72d}, S8, S7, S6, V833, 0x0, 0x0, V885, 0xff5bc8a7, V910]
Stack pops: 7
Stack additions: [S6, S5, V931, S3, V933, 0x9dc, V935, S5]
Exit stack: [V12, S11, S10, {0x712, 0x72d}, S8, S7, S6, V833, V931, 0x0, V933, 0x9dc, V935, V833]

================================

Block 0x9dc
[0x9dc:0x9e3]
---
Predecessors: [0x56e]
Successors: [0x9e4, 0x9e5]
---
0x9dc JUMPDEST
0x9dd DUP2
0x9de ISZERO
0x9df ISZERO
0x9e0 PUSH2 0x9e5
0x9e3 JUMPI
---
0x9dc: JUMPDEST 
0x9de: V939 = ISZERO S1
0x9df: V940 = ISZERO V939
0x9e0: V941 = 0x9e5
0x9e3: JUMPI 0x9e5 V940
---
Entry stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x9e4
[0x9e4:0x9e4]
---
Predecessors: [0x9dc]
Successors: []
---
0x9e4 INVALID
---
0x9e4: INVALID 
---
Entry stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x9e5
[0x9e5:0xa0d]
---
Predecessors: [0x9dc]
Successors: [0xbcb]
---
0x9e5 JUMPDEST
0x9e6 DIV
0x9e7 SWAP1
0x9e8 POP
0x9e9 DUP5
0x9ea PUSH1 0x1
0x9ec PUSH1 0xa0
0x9ee PUSH1 0x2
0x9f0 EXP
0x9f1 SUB
0x9f2 AND
0x9f3 PUSH4 0x40c10f19
0x9f8 DUP8
0x9f9 PUSH1 0x2
0x9fb SLOAD
0x9fc PUSH2 0xa0e
0x9ff DUP8
0xa00 DUP8
0xa01 PUSH2 0xbcb
0xa04 SWAP1
0xa05 SWAP2
0xa06 SWAP1
0xa07 PUSH4 0xffffffff
0xa0c AND
0xa0d JUMP
---
0x9e5: JUMPDEST 
0x9e6: V942 = DIV S0 S1
0x9ea: V943 = 0x1
0x9ec: V944 = 0xa0
0x9ee: V945 = 0x2
0x9f0: V946 = EXP 0x2 0xa0
0x9f1: V947 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f2: V948 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x9f3: V949 = 0x40c10f19
0x9f9: V950 = 0x2
0x9fb: V951 = S[0x2]
0x9fc: V952 = 0xa0e
0xa01: V953 = 0xbcb
0xa07: V954 = 0xffffffff
0xa0c: V955 = AND 0xffffffff 0xbcb
0xa0d: JUMP 0xbcb
---
Entry stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V942, V948, 0x40c10f19, S7, V951, 0xa0e, S3, S4]
Exit stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V942, V948, 0x40c10f19, S7, V951, 0xa0e, S3, S4]

================================

Block 0xa0e
[0xa0e:0xa15]
---
Predecessors: [0x56e]
Successors: [0xa16, 0xa17]
---
0xa0e JUMPDEST
0xa0f DUP2
0xa10 ISZERO
0xa11 ISZERO
0xa12 PUSH2 0xa17
0xa15 JUMPI
---
0xa0e: JUMPDEST 
0xa10: V956 = ISZERO S1
0xa11: V957 = ISZERO V956
0xa12: V958 = 0xa17
0xa15: JUMPI 0xa17 V957
---
Entry stack: [S31, S30, S29, S28, S27, V942, V948, 0x40c10f19, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S31, S30, S29, S28, S27, V942, V948, 0x40c10f19, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa16
[0xa16:0xa16]
---
Predecessors: [0xa0e]
Successors: []
---
0xa16 INVALID
---
0xa16: INVALID 
---
Entry stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa17
[0xa17:0xa5f]
---
Predecessors: [0xa0e]
Successors: [0xa60, 0xa64]
---
0xa17 JUMPDEST
0xa18 DIV
0xa19 PUSH1 0x0
0xa1b PUSH1 0x40
0xa1d MLOAD
0xa1e PUSH1 0x20
0xa20 ADD
0xa21 MSTORE
0xa22 PUSH1 0x40
0xa24 MLOAD
0xa25 PUSH1 0xe0
0xa27 PUSH1 0x2
0xa29 EXP
0xa2a PUSH4 0xffffffff
0xa2f DUP6
0xa30 AND
0xa31 MUL
0xa32 DUP2
0xa33 MSTORE
0xa34 PUSH1 0x1
0xa36 PUSH1 0xa0
0xa38 PUSH1 0x2
0xa3a EXP
0xa3b SUB
0xa3c SWAP1
0xa3d SWAP3
0xa3e AND
0xa3f PUSH1 0x4
0xa41 DUP4
0xa42 ADD
0xa43 MSTORE
0xa44 PUSH1 0x24
0xa46 DUP3
0xa47 ADD
0xa48 MSTORE
0xa49 PUSH1 0x44
0xa4b ADD
0xa4c PUSH1 0x20
0xa4e PUSH1 0x40
0xa50 MLOAD
0xa51 DUP1
0xa52 DUP4
0xa53 SUB
0xa54 DUP2
0xa55 PUSH1 0x0
0xa57 DUP8
0xa58 DUP1
0xa59 EXTCODESIZE
0xa5a ISZERO
0xa5b ISZERO
0xa5c PUSH2 0xa64
0xa5f JUMPI
---
0xa17: JUMPDEST 
0xa18: V959 = DIV S0 S1
0xa19: V960 = 0x0
0xa1b: V961 = 0x40
0xa1d: V962 = M[0x40]
0xa1e: V963 = 0x20
0xa20: V964 = ADD 0x20 V962
0xa21: M[V964] = 0x0
0xa22: V965 = 0x40
0xa24: V966 = M[0x40]
0xa25: V967 = 0xe0
0xa27: V968 = 0x2
0xa29: V969 = EXP 0x2 0xe0
0xa2a: V970 = 0xffffffff
0xa30: V971 = AND S3 0xffffffff
0xa31: V972 = MUL V971 0x100000000000000000000000000000000000000000000000000000000
0xa33: M[V966] = V972
0xa34: V973 = 0x1
0xa36: V974 = 0xa0
0xa38: V975 = 0x2
0xa3a: V976 = EXP 0x2 0xa0
0xa3b: V977 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa3e: V978 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xa3f: V979 = 0x4
0xa42: V980 = ADD V966 0x4
0xa43: M[V980] = V978
0xa44: V981 = 0x24
0xa47: V982 = ADD V966 0x24
0xa48: M[V982] = V959
0xa49: V983 = 0x44
0xa4b: V984 = ADD 0x44 V966
0xa4c: V985 = 0x20
0xa4e: V986 = 0x40
0xa50: V987 = M[0x40]
0xa53: V988 = SUB V984 V987
0xa55: V989 = 0x0
0xa59: V990 = EXTCODESIZE S4
0xa5a: V991 = ISZERO V990
0xa5b: V992 = ISZERO V991
0xa5c: V993 = 0xa64
0xa5f: JUMPI 0xa64 V992
---
Entry stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, V984, 0x20, V987, V988, V987, 0x0, S4]
Exit stack: [S28, S27, S26, S25, S24, V942, V948, 0x40c10f19, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V984, 0x20, V987, V988, V987, 0x0, S4]

================================

Block 0xa60
[0xa60:0xa63]
---
Predecessors: [0xa17]
Successors: []
---
0xa60 PUSH1 0x0
0xa62 DUP1
0xa63 REVERT
---
0xa60: V994 = 0x0
0xa63: REVERT 0x0 0x0
---
Entry stack: [S32, S31, S30, S29, S28, V942, V948, 0x40c10f19, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V984, 0x20, V987, V988, V987, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S32, S31, S30, S29, S28, V942, V948, 0x40c10f19, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V984, 0x20, V987, V988, V987, 0x0, S0]

================================

Block 0xa64
[0xa64:0xa70]
---
Predecessors: [0xa17]
Successors: [0xa71, 0xa75]
---
0xa64 JUMPDEST
0xa65 PUSH2 0x2c6
0xa68 GAS
0xa69 SUB
0xa6a CALL
0xa6b ISZERO
0xa6c ISZERO
0xa6d PUSH2 0xa75
0xa70 JUMPI
---
0xa64: JUMPDEST 
0xa65: V995 = 0x2c6
0xa68: V996 = GAS
0xa69: V997 = SUB V996 0x2c6
0xa6a: V998 = CALL V997 S0 0x0 V987 V988 V987 0x20
0xa6b: V999 = ISZERO V998
0xa6c: V1000 = ISZERO V999
0xa6d: V1001 = 0xa75
0xa70: JUMPI 0xa75 V1000
---
Entry stack: [S32, S31, S30, S29, S28, V942, V948, 0x40c10f19, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V984, 0x20, V987, V988, V987, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [S32, S31, S30, S29, S28, V942, V948, 0x40c10f19, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V984]

================================

Block 0xa71
[0xa71:0xa74]
---
Predecessors: [0xa64]
Successors: []
---
0xa71 PUSH1 0x0
0xa73 DUP1
0xa74 REVERT
---
0xa71: V1002 = 0x0
0xa74: REVERT 0x0 0x0
---
Entry stack: [S23, S22, V942, V948, 0x40c10f19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S23, S22, V942, V948, 0x40c10f19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa75
[0xa75:0xaaf]
---
Predecessors: [0xa64]
Successors: [0xab0, 0xab1]
---
0xa75 JUMPDEST
0xa76 POP
0xa77 POP
0xa78 POP
0xa79 PUSH1 0x40
0xa7b MLOAD
0xa7c DUP1
0xa7d MLOAD
0xa7e POP
0xa7f POP
0xa80 PUSH1 0x1
0xa82 PUSH1 0xa0
0xa84 PUSH1 0x2
0xa86 EXP
0xa87 SUB
0xa88 DUP7
0xa89 AND
0xa8a DUP2
0xa8b ISZERO
0xa8c PUSH2 0x8fc
0xa8f MUL
0xa90 DUP3
0xa91 PUSH1 0x40
0xa93 MLOAD
0xa94 PUSH1 0x0
0xa96 PUSH1 0x40
0xa98 MLOAD
0xa99 DUP1
0xa9a DUP4
0xa9b SUB
0xa9c DUP2
0xa9d DUP6
0xa9e DUP9
0xa9f DUP9
0xaa0 CALL
0xaa1 ISZERO
0xaa2 ISZERO
0xaa3 PUSH1 0x1
0xaa5 EQ
0xaa6 SWAP4
0xaa7 POP
0xaa8 PUSH2 0xab1
0xaab SWAP3
0xaac POP
0xaad POP
0xaae POP
0xaaf JUMPI
---
0xa75: JUMPDEST 
0xa79: V1003 = 0x40
0xa7b: V1004 = M[0x40]
0xa7d: V1005 = M[V1004]
0xa80: V1006 = 0x1
0xa82: V1007 = 0xa0
0xa84: V1008 = 0x2
0xa86: V1009 = EXP 0x2 0xa0
0xa87: V1010 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa89: V1011 = AND S8 0xffffffffffffffffffffffffffffffffffffffff
0xa8b: V1012 = ISZERO S3
0xa8c: V1013 = 0x8fc
0xa8f: V1014 = MUL 0x8fc V1012
0xa91: V1015 = 0x40
0xa93: V1016 = M[0x40]
0xa94: V1017 = 0x0
0xa96: V1018 = 0x40
0xa98: V1019 = M[0x40]
0xa9b: V1020 = SUB V1016 V1019
0xaa0: V1021 = CALL V1014 V1011 S3 V1019 V1020 V1019 0x0
0xaa1: V1022 = ISZERO V1021
0xaa2: V1023 = ISZERO V1022
0xaa3: V1024 = 0x1
0xaa5: V1025 = EQ 0x1 V1023
0xaa8: V1026 = 0xab1
0xaaf: JUMPI 0xab1 V1025
---
Entry stack: [S26, S25, S24, S23, S22, V942, V948, 0x40c10f19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3]
Exit stack: [S26, S25, S24, S23, S22, V942, V948, 0x40c10f19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0xab0
[0xab0:0xab0]
---
Predecessors: [0xa75]
Successors: []
---
0xab0 INVALID
---
0xab0: INVALID 
---
Entry stack: [S20, S19, V942, V948, 0x40c10f19, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S20, S19, V942, V948, 0x40c10f19, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xab1
[0xab1:0xb26]
---
Predecessors: [0xa75]
Successors: [0xb27, 0xb2b]
---
0xab1 JUMPDEST
0xab2 PUSH32 0xf98eaa9c1f790e5c18b1f227bd5bade62600f9f3e3587c7644b90c50b9bf13c5
0xad3 ADDRESS
0xad4 DUP8
0xad5 DUP8
0xad6 PUSH1 0x1
0xad8 PUSH1 0xa0
0xada PUSH1 0x2
0xadc EXP
0xadd SUB
0xade AND
0xadf PUSH4 0x70a08231
0xae4 DUP11
0xae5 PUSH1 0x0
0xae7 PUSH1 0x40
0xae9 MLOAD
0xaea PUSH1 0x20
0xaec ADD
0xaed MSTORE
0xaee PUSH1 0x40
0xaf0 MLOAD
0xaf1 PUSH1 0xe0
0xaf3 PUSH1 0x2
0xaf5 EXP
0xaf6 PUSH4 0xffffffff
0xafb DUP5
0xafc AND
0xafd MUL
0xafe DUP2
0xaff MSTORE
0xb00 PUSH1 0x1
0xb02 PUSH1 0xa0
0xb04 PUSH1 0x2
0xb06 EXP
0xb07 SUB
0xb08 SWAP1
0xb09 SWAP2
0xb0a AND
0xb0b PUSH1 0x4
0xb0d DUP3
0xb0e ADD
0xb0f MSTORE
0xb10 PUSH1 0x24
0xb12 ADD
0xb13 PUSH1 0x20
0xb15 PUSH1 0x40
0xb17 MLOAD
0xb18 DUP1
0xb19 DUP4
0xb1a SUB
0xb1b DUP2
0xb1c PUSH1 0x0
0xb1e DUP8
0xb1f DUP1
0xb20 EXTCODESIZE
0xb21 ISZERO
0xb22 ISZERO
0xb23 PUSH2 0xb2b
0xb26 JUMPI
---
0xab1: JUMPDEST 
0xab2: V1027 = 0xf98eaa9c1f790e5c18b1f227bd5bade62600f9f3e3587c7644b90c50b9bf13c5
0xad3: V1028 = ADDRESS
0xad6: V1029 = 0x1
0xad8: V1030 = 0xa0
0xada: V1031 = 0x2
0xadc: V1032 = EXP 0x2 0xa0
0xadd: V1033 = SUB 0x10000000000000000000000000000000000000000 0x1
0xade: V1034 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xadf: V1035 = 0x70a08231
0xae5: V1036 = 0x0
0xae7: V1037 = 0x40
0xae9: V1038 = M[0x40]
0xaea: V1039 = 0x20
0xaec: V1040 = ADD 0x20 V1038
0xaed: M[V1040] = 0x0
0xaee: V1041 = 0x40
0xaf0: V1042 = M[0x40]
0xaf1: V1043 = 0xe0
0xaf3: V1044 = 0x2
0xaf5: V1045 = EXP 0x2 0xe0
0xaf6: V1046 = 0xffffffff
0xafc: V1047 = AND 0x70a08231 0xffffffff
0xafd: V1048 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xaff: M[V1042] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xb00: V1049 = 0x1
0xb02: V1050 = 0xa0
0xb04: V1051 = 0x2
0xb06: V1052 = EXP 0x2 0xa0
0xb07: V1053 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0a: V1054 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0xb0b: V1055 = 0x4
0xb0e: V1056 = ADD V1042 0x4
0xb0f: M[V1056] = V1054
0xb10: V1057 = 0x24
0xb12: V1058 = ADD 0x24 V1042
0xb13: V1059 = 0x20
0xb15: V1060 = 0x40
0xb17: V1061 = M[0x40]
0xb1a: V1062 = SUB V1058 V1061
0xb1c: V1063 = 0x0
0xb20: V1064 = EXTCODESIZE V1034
0xb21: V1065 = ISZERO V1064
0xb22: V1066 = ISZERO V1065
0xb23: V1067 = 0xb2b
0xb26: JUMPI 0xb2b V1066
---
Entry stack: [S23, S22, S21, S20, S19, V942, V948, 0x40c10f19, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0xf98eaa9c1f790e5c18b1f227bd5bade62600f9f3e3587c7644b90c50b9bf13c5, V1028, S5, V1034, 0x70a08231, V1058, 0x20, V1061, V1062, V1061, 0x0, V1034]
Exit stack: [S23, S22, S21, S20, S19, V942, V948, 0x40c10f19, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xf98eaa9c1f790e5c18b1f227bd5bade62600f9f3e3587c7644b90c50b9bf13c5, V1028, S5, V1034, 0x70a08231, V1058, 0x20, V1061, V1062, V1061, 0x0, V1034]

================================

Block 0xb27
[0xb27:0xb2a]
---
Predecessors: [0xab1]
Successors: []
---
0xb27 PUSH1 0x0
0xb29 DUP1
0xb2a REVERT
---
0xb27: V1068 = 0x0
0xb2a: REVERT 0x0 0x0
---
Entry stack: [S32, S31, S30, S29, S28, V942, V948, 0x40c10f19, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0xf98eaa9c1f790e5c18b1f227bd5bade62600f9f3e3587c7644b90c50b9bf13c5, V1028, S9, V1034, 0x70a08231, V1058, 0x20, V1061, V1062, V1061, 0x0, V1034]
Stack pops: 0
Stack additions: []
Exit stack: [S32, S31, S30, S29, S28, V942, V948, 0x40c10f19, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0xf98eaa9c1f790e5c18b1f227bd5bade62600f9f3e3587c7644b90c50b9bf13c5, V1028, S9, V1034, 0x70a08231, V1058, 0x20, V1061, V1062, V1061, 0x0, V1034]

================================

Block 0xb2b
[0xb2b:0xb37]
---
Predecessors: [0xab1]
Successors: [0xb38, 0xb3c]
---
0xb2b JUMPDEST
0xb2c PUSH2 0x2c6
0xb2f GAS
0xb30 SUB
0xb31 CALL
0xb32 ISZERO
0xb33 ISZERO
0xb34 PUSH2 0xb3c
0xb37 JUMPI
---
0xb2b: JUMPDEST 
0xb2c: V1069 = 0x2c6
0xb2f: V1070 = GAS
0xb30: V1071 = SUB V1070 0x2c6
0xb31: V1072 = CALL V1071 V1034 0x0 V1061 V1062 V1061 0x20
0xb32: V1073 = ISZERO V1072
0xb33: V1074 = ISZERO V1073
0xb34: V1075 = 0xb3c
0xb37: JUMPI 0xb3c V1074
---
Entry stack: [S32, S31, S30, S29, S28, V942, V948, 0x40c10f19, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0xf98eaa9c1f790e5c18b1f227bd5bade62600f9f3e3587c7644b90c50b9bf13c5, V1028, S9, V1034, 0x70a08231, V1058, 0x20, V1061, V1062, V1061, 0x0, V1034]
Stack pops: 6
Stack additions: []
Exit stack: [S32, S31, S30, S29, S28, V942, V948, 0x40c10f19, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0xf98eaa9c1f790e5c18b1f227bd5bade62600f9f3e3587c7644b90c50b9bf13c5, V1028, S9, V1034, 0x70a08231, V1058]

================================

Block 0xb38
[0xb38:0xb3b]
---
Predecessors: [0xb2b]
Successors: []
---
0xb38 PUSH1 0x0
0xb3a DUP1
0xb3b REVERT
---
0xb38: V1076 = 0x0
0xb3b: REVERT 0x0 0x0
---
Entry stack: [S26, S25, S24, S23, S22, V942, V948, 0x40c10f19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0xf98eaa9c1f790e5c18b1f227bd5bade62600f9f3e3587c7644b90c50b9bf13c5, S4, S3, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S26, S25, S24, S23, S22, V942, V948, 0x40c10f19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0xf98eaa9c1f790e5c18b1f227bd5bade62600f9f3e3587c7644b90c50b9bf13c5, S4, S3, S2, 0x70a08231, S0]

================================

Block 0xb3c
[0xb3c:0xbc2]
---
Predecessors: [0xb2b]
Successors: [0xbc3]
---
0xb3c JUMPDEST
0xb3d POP
0xb3e POP
0xb3f POP
0xb40 PUSH1 0x40
0xb42 MLOAD
0xb43 DUP1
0xb44 MLOAD
0xb45 SWAP1
0xb46 POP
0xb47 PUSH1 0x40
0xb49 MLOAD
0xb4a PUSH1 0x1
0xb4c PUSH1 0xa0
0xb4e PUSH1 0x2
0xb50 EXP
0xb51 SUB
0xb52 SWAP4
0xb53 DUP5
0xb54 AND
0xb55 DUP2
0xb56 MSTORE
0xb57 SWAP2
0xb58 SWAP1
0xb59 SWAP3
0xb5a AND
0xb5b PUSH1 0x20
0xb5d DUP3
0xb5e ADD
0xb5f MSTORE
0xb60 PUSH1 0x40
0xb62 DUP1
0xb63 DUP3
0xb64 ADD
0xb65 SWAP3
0xb66 SWAP1
0xb67 SWAP3
0xb68 MSTORE
0xb69 PUSH1 0x60
0xb6b ADD
0xb6c SWAP1
0xb6d MLOAD
0xb6e DUP1
0xb6f SWAP2
0xb70 SUB
0xb71 SWAP1
0xb72 LOG1
0xb73 PUSH32 0xf40cc8c1a1d17359049ba500cfc894596a692cffc9d03943cd92ec2e159cf6ae
0xb94 ADDRESS
0xb95 DUP8
0xb96 DUP4
0xb97 PUSH1 0x40
0xb99 MLOAD
0xb9a PUSH1 0x1
0xb9c PUSH1 0xa0
0xb9e PUSH1 0x2
0xba0 EXP
0xba1 SUB
0xba2 SWAP4
0xba3 DUP5
0xba4 AND
0xba5 DUP2
0xba6 MSTORE
0xba7 SWAP2
0xba8 SWAP1
0xba9 SWAP3
0xbaa AND
0xbab PUSH1 0x20
0xbad DUP3
0xbae ADD
0xbaf MSTORE
0xbb0 PUSH1 0x40
0xbb2 DUP1
0xbb3 DUP3
0xbb4 ADD
0xbb5 SWAP3
0xbb6 SWAP1
0xbb7 SWAP3
0xbb8 MSTORE
0xbb9 PUSH1 0x60
0xbbb ADD
0xbbc SWAP1
0xbbd MLOAD
0xbbe DUP1
0xbbf SWAP2
0xbc0 SUB
0xbc1 SWAP1
0xbc2 LOG1
---
0xb3c: JUMPDEST 
0xb40: V1077 = 0x40
0xb42: V1078 = M[0x40]
0xb44: V1079 = M[V1078]
0xb47: V1080 = 0x40
0xb49: V1081 = M[0x40]
0xb4a: V1082 = 0x1
0xb4c: V1083 = 0xa0
0xb4e: V1084 = 0x2
0xb50: V1085 = EXP 0x2 0xa0
0xb51: V1086 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb54: V1087 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xb56: M[V1081] = V1087
0xb5a: V1088 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xb5b: V1089 = 0x20
0xb5e: V1090 = ADD V1081 0x20
0xb5f: M[V1090] = V1088
0xb60: V1091 = 0x40
0xb64: V1092 = ADD V1081 0x40
0xb68: M[V1092] = V1079
0xb69: V1093 = 0x60
0xb6b: V1094 = ADD 0x60 V1081
0xb6d: V1095 = M[0x40]
0xb70: V1096 = SUB V1094 V1095
0xb72: LOG V1095 V1096 0xf98eaa9c1f790e5c18b1f227bd5bade62600f9f3e3587c7644b90c50b9bf13c5
0xb73: V1097 = 0xf40cc8c1a1d17359049ba500cfc894596a692cffc9d03943cd92ec2e159cf6ae
0xb94: V1098 = ADDRESS
0xb97: V1099 = 0x40
0xb99: V1100 = M[0x40]
0xb9a: V1101 = 0x1
0xb9c: V1102 = 0xa0
0xb9e: V1103 = 0x2
0xba0: V1104 = EXP 0x2 0xa0
0xba1: V1105 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba4: V1106 = AND 0xffffffffffffffffffffffffffffffffffffffff V1098
0xba6: M[V1100] = V1106
0xbaa: V1107 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0xbab: V1108 = 0x20
0xbae: V1109 = ADD V1100 0x20
0xbaf: M[V1109] = V1107
0xbb0: V1110 = 0x40
0xbb4: V1111 = ADD V1100 0x40
0xbb8: M[V1111] = S6
0xbb9: V1112 = 0x60
0xbbb: V1113 = ADD 0x60 V1100
0xbbd: V1114 = M[0x40]
0xbc0: V1115 = SUB V1113 V1114
0xbc2: LOG V1114 V1115 0xf40cc8c1a1d17359049ba500cfc894596a692cffc9d03943cd92ec2e159cf6ae
---
Entry stack: [S26, S25, S24, S23, S22, V942, V948, 0x40c10f19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0xf98eaa9c1f790e5c18b1f227bd5bade62600f9f3e3587c7644b90c50b9bf13c5, S4, S3, S2, 0x70a08231, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6]
Exit stack: [S26, S25, S24, S23, S22, V942, V948, 0x40c10f19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6]

================================

Block 0xbc3
[0xbc3:0xbca]
---
Predecessors: [0x8fd, 0xb3c]
Successors: [0x712, 0x72d]
---
0xbc3 JUMPDEST
0xbc4 POP
0xbc5 POP
0xbc6 POP
0xbc7 POP
0xbc8 POP
0xbc9 POP
0xbca JUMP
---
0xbc3: JUMPDEST 
0xbca: JUMP S6
---
Entry stack: [S20, S19, S18, S17, S16, V942, V948, 0x40c10f19, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [S20, S19, S18, S17, S16, V942, V948, 0x40c10f19, S12, S11, S10, S9, S8, S7]

================================

Block 0xbcb
[0xbcb:0xbd7]
---
Predecessors: [0x9ba, 0x9e5]
Successors: [0xbd8, 0xbe7]
---
0xbcb JUMPDEST
0xbcc PUSH1 0x0
0xbce DUP3
0xbcf DUP3
0xbd0 MUL
0xbd1 DUP4
0xbd2 ISZERO
0xbd3 DUP1
0xbd4 PUSH2 0xbe7
0xbd7 JUMPI
---
0xbcb: JUMPDEST 
0xbcc: V1116 = 0x0
0xbd0: V1117 = MUL S0 S1
0xbd2: V1118 = ISZERO S1
0xbd4: V1119 = 0xbe7
0xbd7: JUMPI 0xbe7 V1118
---
Entry stack: [S33, S32, S31, S30, S29, V942, V948, 0x40c10f19, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x9dc, 0xa0e}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1117, V1118]
Exit stack: [S33, S32, S31, S30, S29, V942, V948, 0x40c10f19, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x9dc, 0xa0e}, S1, S0, 0x0, V1117, V1118]

================================

Block 0xbd8
[0xbd8:0xbe2]
---
Predecessors: [0xbcb]
Successors: [0xbe3, 0xbe4]
---
0xbd8 POP
0xbd9 DUP3
0xbda DUP5
0xbdb DUP3
0xbdc DUP2
0xbdd ISZERO
0xbde ISZERO
0xbdf PUSH2 0xbe4
0xbe2 JUMPI
---
0xbdd: V1120 = ISZERO S4
0xbde: V1121 = ISZERO V1120
0xbdf: V1122 = 0xbe4
0xbe2: JUMPI 0xbe4 V1121
---
Entry stack: [S36, S35, S34, S33, S32, V942, V948, 0x40c10f19, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x9dc, 0xa0e}, S4, S3, 0x0, V1117, V1118]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x9dc, 0xa0e}, S4, S3, 0x0, S1, S3, S4, S1]

================================

Block 0xbe3
[0xbe3:0xbe3]
---
Predecessors: [0xbd8]
Successors: []
---
0xbe3 INVALID
---
0xbe3: INVALID 
---
Entry stack: [S35, S34, S33, S32, S31, V942, V948, 0x40c10f19, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x9dc, 0xa0e}, S6, S5, 0x0, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S35, S34, S33, S32, S31, V942, V948, 0x40c10f19, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x9dc, 0xa0e}, S6, S5, 0x0, S3, S2, S1, S0]

================================

Block 0xbe4
[0xbe4:0xbe6]
---
Predecessors: [0xbd8]
Successors: [0xbe7]
---
0xbe4 JUMPDEST
0xbe5 DIV
0xbe6 EQ
---
0xbe4: JUMPDEST 
0xbe5: V1123 = DIV S0 S1
0xbe6: V1124 = EQ V1123 S2
---
Entry stack: [S35, S34, S33, S32, S31, V942, V948, 0x40c10f19, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x9dc, 0xa0e}, S6, S5, 0x0, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V1124]
Exit stack: [S35, S34, S33, S32, S31, V942, V948, 0x40c10f19, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x9dc, 0xa0e}, S6, S5, 0x0, S3, V1124]

================================

Block 0xbe7
[0xbe7:0xbed]
---
Predecessors: [0xbcb, 0xbe4]
Successors: [0x56e, 0xbee]
---
0xbe7 JUMPDEST
0xbe8 ISZERO
0xbe9 ISZERO
0xbea PUSH2 0x56e
0xbed JUMPI
---
0xbe7: JUMPDEST 
0xbe8: V1125 = ISZERO S0
0xbe9: V1126 = ISZERO V1125
0xbea: V1127 = 0x56e
0xbed: JUMPI 0x56e V1126
---
Entry stack: [S36, S35, S34, S33, S32, V942, V948, 0x40c10f19, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x9dc, 0xa0e}, S4, S3, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S36, S35, S34, S33, S32, V942, V948, 0x40c10f19, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x9dc, 0xa0e}, S4, S3, 0x0, S1]

================================

Block 0xbee
[0xbee:0xbee]
---
Predecessors: [0xbe7]
Successors: []
---
0xbee INVALID
---
0xbee: INVALID 
---
Entry stack: [S32, S31, V942, V948, 0x40c10f19, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x9dc, 0xa0e}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S32, S31, V942, V948, 0x40c10f19, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x9dc, 0xa0e}, S3, S2, 0x0, S0]

================================

Block 0xbef
[0xbef:0xc1f]
---
Predecessors: []
Successors: []
---
0xbef STOP
0xbf0 LOG1
0xbf1 PUSH6 0x627a7a723058
0xbf8 SHA3
0xbf9 ORIGIN
0xbfa MISSING 0xce
0xbfb MISSING 0xc7
0xbfc LOG2
0xbfd MISSING 0xa8
0xbfe SHR
0xbff MISSING 0xb3
0xc00 PUSH31 0xad6f4370a77dc37dc9fba976295c7d78e10ffb27394d8f770029
---
0xbef: STOP 
0xbf0: LOG S0 S1 S2
0xbf1: V1128 = 0x627a7a723058
0xbf8: V1129 = SHA3 0x627a7a723058 S3
0xbf9: V1130 = ORIGIN
0xbfa: MISSING 0xce
0xbfb: MISSING 0xc7
0xbfc: LOG S0 S1 S2 S3
0xbfd: MISSING 0xa8
0xbfe: V1131 = SHR S0 S1
0xbff: MISSING 0xb3
0xc00: V1132 = 0xad6f4370a77dc37dc9fba976295c7d78e10ffb27394d8f770029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1130, V1129, V1131, 0xad6f4370a77dc37dc9fba976295c7d78e10ffb27394d8f770029]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x3c9
Exit block: 0x5a1
Body: 0x3c9, 0x3d0, 0x3d4, 0x575, 0x58c, 0x590, 0x5a0, 0x5a1

Function 1:
Public function signature: 0x42e94c90
Entry block: 0x3de
Exit block: 0x3fd
Body: 0x3de, 0x3e5, 0x3e9, 0x3fd, 0x5ad

Function 2:
Public function signature: 0x461ac019
Entry block: 0x40f
Exit block: 0x3fd
Body: 0x3fd, 0x40f, 0x416, 0x41a, 0x5bf

Function 3:
Public function signature: 0x79ba5097
Entry block: 0x422
Exit block: 0x3dc
Body: 0x3dc, 0x422, 0x429, 0x42d, 0x5c5, 0x5dc, 0x5e0

Function 4:
Public function signature: 0x8616bc8b
Entry block: 0x435
Exit block: 0x3fd
Body: 0x3fd, 0x435, 0x43c, 0x440, 0x650

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x448
Exit block: 0x45b
Body: 0x448, 0x44f, 0x453, 0x45b, 0x656

Function 6:
Public function signature: 0x90fd67fc
Entry block: 0x477
Exit block: 0x3dc
Body: 0x3dc, 0x477, 0x47e, 0x482, 0x665, 0x6b2, 0x6b6, 0x6c3, 0x6c7

Function 7:
Public function signature: 0xae42a63c
Entry block: 0x48a
Exit block: 0x49d
Body: 0x48a, 0x491, 0x495, 0x49d, 0x6cd

Function 8:
Public function signature: 0xc3f53e94
Entry block: 0x4b1
Exit block: 0x3dc
Body: 0x3dc, 0x4b1, 0x4b8, 0x4bc, 0x6ee, 0x705, 0x709, 0x712

Function 9:
Public function signature: 0xd4ee1d90
Entry block: 0x4d0
Exit block: 0x45b
Body: 0x45b, 0x4d0, 0x4d7, 0x4db, 0x715

Function 10:
Public function signature: 0xd956634f
Entry block: 0x4e3
Exit block: 0x3dc
Body: 0x3dc, 0x4e3, 0x4ea, 0x4ee, 0x724, 0x72d

Function 11:
Public function signature: 0xde2b4473
Entry block: 0x4f6
Exit block: 0x3dc
Body: 0x3dc, 0x4f6, 0x4fd, 0x501, 0x72f, 0x746, 0x74a

Function 12:
Public function signature: 0xe14ed045
Entry block: 0x50e
Exit block: 0x3fd
Body: 0x3fd, 0x50e, 0x515, 0x519, 0x77a

Function 13:
Public function signature: 0xe4e329ab
Entry block: 0x52d
Exit block: 0x49d
Body: 0x49d, 0x52d, 0x534, 0x538, 0x795

Function 14:
Public function signature: 0xf2fde38b
Entry block: 0x540
Exit block: 0x3dc
Body: 0x3dc, 0x540, 0x547, 0x54b, 0x7a5, 0x7bc, 0x7c0

Function 15:
Public fallback function
Entry block: 0xbf
Exit block: 0x3dc
Body: 0xbf, 0x116, 0x11a, 0x127, 0x12b, 0x14f, 0x150, 0x19b, 0x19f, 0x1ac, 0x1b0, 0x1c1, 0x1c2, 0x1eb, 0x3dc

Function 16:
Private function
Entry block: 0xbcb
Exit block: 0x56e
Body: 0x1eb, 0x56e, 0xbcb, 0xbd8, 0xbe4, 0xbe7

Function 17:
Private function
Entry block: 0x55f
Exit block: 0x56e
Body: 0x55f, 0x56e, 0x9dc, 0x9e5

Function 18:
Private function
Entry block: 0x7ef
Exit block: 0xbc3
Body: 0x7ef, 0x84d, 0x85e, 0x88c, 0x8a0, 0x8cc, 0x8fd, 0x952, 0x9a9, 0x9ba, 0x9dc, 0x9e5, 0xa0e, 0xa17, 0xa64, 0xa75, 0xab1, 0xb2b, 0xb3c, 0xbc3

