args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/5/104900.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x6ff]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x27ebcf0e
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x6ff
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x27ebcf0e
0x20: V14 = EQ V12 0x27ebcf0e
0x21: V15 = 0x6ff
0x24: JUMPI 0x6ff V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x72e]
---
0x25 DUP1
0x26 PUSH4 0x30c74e04
0x2b EQ
0x2c PUSH2 0x72e
0x2f JUMPI
---
0x26: V16 = 0x30c74e04
0x2b: V17 = EQ 0x30c74e04 V12
0x2c: V18 = 0x72e
0x2f: JUMPI 0x72e V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x755]
---
0x30 DUP1
0x31 PUSH4 0x519ee19e
0x36 EQ
0x37 PUSH2 0x755
0x3a JUMPI
---
0x31: V19 = 0x519ee19e
0x36: V20 = EQ 0x519ee19e V12
0x37: V21 = 0x755
0x3a: JUMPI 0x755 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x77a]
---
0x3b DUP1
0x3c PUSH4 0x7fa8c158
0x41 EQ
0x42 PUSH2 0x77a
0x45 JUMPI
---
0x3c: V22 = 0x7fa8c158
0x41: V23 = EQ 0x7fa8c158 V12
0x42: V24 = 0x77a
0x45: JUMPI 0x77a V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x79f]
---
0x46 DUP1
0x47 PUSH4 0x8da5cb5b
0x4c EQ
0x4d PUSH2 0x79f
0x50 JUMPI
---
0x47: V25 = 0x8da5cb5b
0x4c: V26 = EQ 0x8da5cb5b V12
0x4d: V27 = 0x79f
0x50: JUMPI 0x79f V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x7ce]
---
0x51 DUP1
0x52 PUSH4 0x96c5406d
0x57 EQ
0x58 PUSH2 0x7ce
0x5b JUMPI
---
0x52: V28 = 0x96c5406d
0x57: V29 = EQ 0x96c5406d V12
0x58: V30 = 0x7ce
0x5b: JUMPI 0x7ce V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x7f3]
---
0x5c DUP1
0x5d PUSH4 0xa035b1fe
0x62 EQ
0x63 PUSH2 0x7f3
0x66 JUMPI
---
0x5d: V31 = 0xa035b1fe
0x62: V32 = EQ 0xa035b1fe V12
0x63: V33 = 0x7f3
0x66: JUMPI 0x7f3 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x818]
---
0x67 DUP1
0x68 PUSH4 0xc8e569a8
0x6d EQ
0x6e PUSH2 0x818
0x71 JUMPI
---
0x68: V34 = 0xc8e569a8
0x6d: V35 = EQ 0xc8e569a8 V12
0x6e: V36 = 0x818
0x71: JUMPI 0x818 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x83d]
---
0x72 DUP1
0x73 PUSH4 0xccb07cef
0x78 EQ
0x79 PUSH2 0x83d
0x7c JUMPI
---
0x73: V37 = 0xccb07cef
0x78: V38 = EQ 0xccb07cef V12
0x79: V39 = 0x83d
0x7c: JUMPI 0x83d V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x7d]
---
Predecessors: [0x0, 0x72]
Successors: [0x7e]
---
0x7d JUMPDEST
---
0x7d: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e
[0x7e:0x8f]
---
Predecessors: [0x7d]
Successors: [0x90, 0x9f]
---
0x7e JUMPDEST
0x7f PUSH1 0x0
0x81 DUP1
0x82 PUSH1 0x0
0x84 PUSH4 0x5a8b6500
0x89 TIMESTAMP
0x8a GT
0x8b ISZERO
0x8c PUSH2 0x9f
0x8f JUMPI
---
0x7e: JUMPDEST 
0x7f: V40 = 0x0
0x82: V41 = 0x0
0x84: V42 = 0x5a8b6500
0x89: V43 = TIMESTAMP
0x8a: V44 = GT V43 0x5a8b6500
0x8b: V45 = ISZERO V44
0x8c: V46 = 0x9f
0x8f: JUMPI 0x9f V45
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x90
[0x90:0x9e]
---
Predecessors: [0x7e]
Successors: [0xb7]
---
0x90 PUSH7 0x254db1c2244000
0x98 PUSH1 0x4
0x9a SSTORE
0x9b PUSH2 0xb7
0x9e JUMP
---
0x90: V47 = 0x254db1c2244000
0x98: V48 = 0x4
0x9a: S[0x4] = 0x254db1c2244000
0x9b: V49 = 0xb7
0x9e: JUMP 0xb7
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x9f
[0x9f:0xab]
---
Predecessors: [0x7e]
Successors: [0xac, 0xb7]
---
0x9f JUMPDEST
0xa0 PUSH4 0x5a628680
0xa5 TIMESTAMP
0xa6 GT
0xa7 ISZERO
0xa8 PUSH2 0xb7
0xab JUMPI
---
0x9f: JUMPDEST 
0xa0: V50 = 0x5a628680
0xa5: V51 = TIMESTAMP
0xa6: V52 = GT V51 0x5a628680
0xa7: V53 = ISZERO V52
0xa8: V54 = 0xb7
0xab: JUMPI 0xb7 V53
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0x9f]
Successors: [0xb7]
---
0xac PUSH7 0x18de76816d8000
0xb4 PUSH1 0x4
0xb6 SSTORE
---
0xac: V55 = 0x18de76816d8000
0xb4: V56 = 0x4
0xb6: S[0x4] = 0x18de76816d8000
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xb7
[0xb7:0xb7]
---
Predecessors: [0x90, 0x9f, 0xac]
Successors: [0xb8]
---
0xb7 JUMPDEST
---
0xb7: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xb8
[0xb8:0x10e]
---
Predecessors: [0xb7]
Successors: [0x10f, 0x113]
---
0xb8 JUMPDEST
0xb9 PUSH1 0x0
0xbb DUP1
0xbc SLOAD
0xbd PUSH1 0x1
0xbf PUSH1 0xa0
0xc1 PUSH1 0x2
0xc3 EXP
0xc4 SUB
0xc5 AND
0xc6 SWAP1
0xc7 PUSH4 0x70a08231
0xcc SWAP1
0xcd ADDRESS
0xce SWAP1
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 MSTORE
0xd6 PUSH1 0x40
0xd8 MLOAD
0xd9 PUSH1 0xe0
0xdb PUSH1 0x2
0xdd EXP
0xde PUSH4 0xffffffff
0xe3 DUP5
0xe4 AND
0xe5 MUL
0xe6 DUP2
0xe7 MSTORE
0xe8 PUSH1 0x1
0xea PUSH1 0xa0
0xec PUSH1 0x2
0xee EXP
0xef SUB
0xf0 SWAP1
0xf1 SWAP2
0xf2 AND
0xf3 PUSH1 0x4
0xf5 DUP3
0xf6 ADD
0xf7 MSTORE
0xf8 PUSH1 0x24
0xfa ADD
0xfb PUSH1 0x20
0xfd PUSH1 0x40
0xff MLOAD
0x100 DUP1
0x101 DUP4
0x102 SUB
0x103 DUP2
0x104 PUSH1 0x0
0x106 DUP8
0x107 DUP1
0x108 EXTCODESIZE
0x109 ISZERO
0x10a ISZERO
0x10b PUSH2 0x113
0x10e JUMPI
---
0xb8: JUMPDEST 
0xb9: V57 = 0x0
0xbc: V58 = S[0x0]
0xbd: V59 = 0x1
0xbf: V60 = 0xa0
0xc1: V61 = 0x2
0xc3: V62 = EXP 0x2 0xa0
0xc4: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0xc7: V65 = 0x70a08231
0xcd: V66 = ADDRESS
0xcf: V67 = 0x40
0xd1: V68 = M[0x40]
0xd2: V69 = 0x20
0xd4: V70 = ADD 0x20 V68
0xd5: M[V70] = 0x0
0xd6: V71 = 0x40
0xd8: V72 = M[0x40]
0xd9: V73 = 0xe0
0xdb: V74 = 0x2
0xdd: V75 = EXP 0x2 0xe0
0xde: V76 = 0xffffffff
0xe4: V77 = AND 0x70a08231 0xffffffff
0xe5: V78 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xe7: M[V72] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xe8: V79 = 0x1
0xea: V80 = 0xa0
0xec: V81 = 0x2
0xee: V82 = EXP 0x2 0xa0
0xef: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf2: V84 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0xf3: V85 = 0x4
0xf6: V86 = ADD V72 0x4
0xf7: M[V86] = V84
0xf8: V87 = 0x24
0xfa: V88 = ADD 0x24 V72
0xfb: V89 = 0x20
0xfd: V90 = 0x40
0xff: V91 = M[0x40]
0x102: V92 = SUB V88 V91
0x104: V93 = 0x0
0x108: V94 = EXTCODESIZE V64
0x109: V95 = ISZERO V94
0x10a: V96 = ISZERO V95
0x10b: V97 = 0x113
0x10e: JUMPI 0x113 V96
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V64, 0x70a08231, V88, 0x20, V91, V92, V91, 0x0, V64]
Exit stack: [V12, 0x0, 0x0, 0x0, V64, 0x70a08231, V88, 0x20, V91, V92, V91, 0x0, V64]

================================

Block 0x10f
[0x10f:0x112]
---
Predecessors: [0xb8]
Successors: []
---
0x10f PUSH1 0x0
0x111 DUP1
0x112 REVERT
---
0x10f: V98 = 0x0
0x112: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V64, 0x70a08231, V88, 0x20, V91, V92, V91, 0x0, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V64, 0x70a08231, V88, 0x20, V91, V92, V91, 0x0, V64]

================================

Block 0x113
[0x113:0x11f]
---
Predecessors: [0xb8]
Successors: [0x120, 0x124]
---
0x113 JUMPDEST
0x114 PUSH2 0x2c6
0x117 GAS
0x118 SUB
0x119 CALL
0x11a ISZERO
0x11b ISZERO
0x11c PUSH2 0x124
0x11f JUMPI
---
0x113: JUMPDEST 
0x114: V99 = 0x2c6
0x117: V100 = GAS
0x118: V101 = SUB V100 0x2c6
0x119: V102 = CALL V101 V64 0x0 V91 V92 V91 0x20
0x11a: V103 = ISZERO V102
0x11b: V104 = ISZERO V103
0x11c: V105 = 0x124
0x11f: JUMPI 0x124 V104
---
Entry stack: [V12, 0x0, 0x0, 0x0, V64, 0x70a08231, V88, 0x20, V91, V92, V91, 0x0, V64]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V64, 0x70a08231, V88]

================================

Block 0x120
[0x120:0x123]
---
Predecessors: [0x113]
Successors: []
---
0x120 PUSH1 0x0
0x122 DUP1
0x123 REVERT
---
0x120: V106 = 0x0
0x123: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V64, 0x70a08231, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V64, 0x70a08231, V88]

================================

Block 0x124
[0x124:0x13a]
---
Predecessors: [0x113]
Successors: [0x13b, 0x171]
---
0x124 JUMPDEST
0x125 POP
0x126 POP
0x127 POP
0x128 PUSH1 0x40
0x12a MLOAD
0x12b DUP1
0x12c MLOAD
0x12d PUSH1 0x7
0x12f SSTORE
0x130 POP
0x131 PUSH1 0x2
0x133 SLOAD
0x134 TIMESTAMP
0x135 LT
0x136 ISZERO
0x137 PUSH2 0x171
0x13a JUMPI
---
0x124: JUMPDEST 
0x128: V107 = 0x40
0x12a: V108 = M[0x40]
0x12c: V109 = M[V108]
0x12d: V110 = 0x7
0x12f: S[0x7] = V109
0x131: V111 = 0x2
0x133: V112 = S[0x2]
0x134: V113 = TIMESTAMP
0x135: V114 = LT V113 V112
0x136: V115 = ISZERO V114
0x137: V116 = 0x171
0x13a: JUMPI 0x171 V115
---
Entry stack: [V12, 0x0, 0x0, 0x0, V64, 0x70a08231, V88]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x13b
[0x13b:0x167]
---
Predecessors: [0x124]
Successors: [0x168, 0x16c]
---
0x13b PUSH1 0x1
0x13d PUSH1 0xa0
0x13f PUSH1 0x2
0x141 EXP
0x142 SUB
0x143 CALLER
0x144 AND
0x145 CALLVALUE
0x146 DUP1
0x147 ISZERO
0x148 PUSH2 0x8fc
0x14b MUL
0x14c SWAP1
0x14d PUSH1 0x40
0x14f MLOAD
0x150 PUSH1 0x0
0x152 PUSH1 0x40
0x154 MLOAD
0x155 DUP1
0x156 DUP4
0x157 SUB
0x158 DUP2
0x159 DUP6
0x15a DUP9
0x15b DUP9
0x15c CALL
0x15d SWAP4
0x15e POP
0x15f POP
0x160 POP
0x161 POP
0x162 ISZERO
0x163 ISZERO
0x164 PUSH2 0x16c
0x167 JUMPI
---
0x13b: V117 = 0x1
0x13d: V118 = 0xa0
0x13f: V119 = 0x2
0x141: V120 = EXP 0x2 0xa0
0x142: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x143: V122 = CALLER
0x144: V123 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x145: V124 = CALLVALUE
0x147: V125 = ISZERO V124
0x148: V126 = 0x8fc
0x14b: V127 = MUL 0x8fc V125
0x14d: V128 = 0x40
0x14f: V129 = M[0x40]
0x150: V130 = 0x0
0x152: V131 = 0x40
0x154: V132 = M[0x40]
0x157: V133 = SUB V129 V132
0x15c: V134 = CALL V127 V123 V124 V132 V133 V132 0x0
0x162: V135 = ISZERO V134
0x163: V136 = ISZERO V135
0x164: V137 = 0x16c
0x167: JUMPI 0x16c V136
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x168
[0x168:0x16b]
---
Predecessors: [0x13b]
Successors: []
---
0x168 PUSH1 0x0
0x16a DUP1
0x16b REVERT
---
0x168: V138 = 0x0
0x16b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x16c
[0x16c:0x170]
---
Predecessors: [0x13b, 0x1ad, 0x34b, 0x4d4]
Successors: [0x686]
---
0x16c JUMPDEST
0x16d PUSH2 0x686
0x170 JUMP
---
0x16c: JUMPDEST 
0x16d: V139 = 0x686
0x170: JUMP 0x686
---
Entry stack: [V12, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, 0x0]

================================

Block 0x171
[0x171:0x17b]
---
Predecessors: [0x124]
Successors: [0x17c, 0x33f]
---
0x171 JUMPDEST
0x172 PUSH1 0x3
0x174 SLOAD
0x175 TIMESTAMP
0x176 GT
0x177 ISZERO
0x178 PUSH2 0x33f
0x17b JUMPI
---
0x171: JUMPDEST 
0x172: V140 = 0x3
0x174: V141 = S[0x3]
0x175: V142 = TIMESTAMP
0x176: V143 = GT V142 V141
0x177: V144 = ISZERO V143
0x178: V145 = 0x33f
0x17b: JUMPI 0x33f V144
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x17c
[0x17c:0x1a8]
---
Predecessors: [0x171]
Successors: [0x1a9, 0x1ad]
---
0x17c PUSH1 0x1
0x17e PUSH1 0xa0
0x180 PUSH1 0x2
0x182 EXP
0x183 SUB
0x184 CALLER
0x185 AND
0x186 CALLVALUE
0x187 DUP1
0x188 ISZERO
0x189 PUSH2 0x8fc
0x18c MUL
0x18d SWAP1
0x18e PUSH1 0x40
0x190 MLOAD
0x191 PUSH1 0x0
0x193 PUSH1 0x40
0x195 MLOAD
0x196 DUP1
0x197 DUP4
0x198 SUB
0x199 DUP2
0x19a DUP6
0x19b DUP9
0x19c DUP9
0x19d CALL
0x19e SWAP4
0x19f POP
0x1a0 POP
0x1a1 POP
0x1a2 POP
0x1a3 ISZERO
0x1a4 ISZERO
0x1a5 PUSH2 0x1ad
0x1a8 JUMPI
---
0x17c: V146 = 0x1
0x17e: V147 = 0xa0
0x180: V148 = 0x2
0x182: V149 = EXP 0x2 0xa0
0x183: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x184: V151 = CALLER
0x185: V152 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x186: V153 = CALLVALUE
0x188: V154 = ISZERO V153
0x189: V155 = 0x8fc
0x18c: V156 = MUL 0x8fc V154
0x18e: V157 = 0x40
0x190: V158 = M[0x40]
0x191: V159 = 0x0
0x193: V160 = 0x40
0x195: V161 = M[0x40]
0x198: V162 = SUB V158 V161
0x19d: V163 = CALL V156 V152 V153 V161 V162 V161 0x0
0x1a3: V164 = ISZERO V163
0x1a4: V165 = ISZERO V164
0x1a5: V166 = 0x1ad
0x1a8: JUMPI 0x1ad V165
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1a9
[0x1a9:0x1ac]
---
Predecessors: [0x17c]
Successors: []
---
0x1a9 PUSH1 0x0
0x1ab DUP1
0x1ac REVERT
---
0x1a9: V167 = 0x0
0x1ac: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1ad
[0x1ad:0x1be]
---
Predecessors: [0x17c]
Successors: [0x16c, 0x1bf]
---
0x1ad JUMPDEST
0x1ae PUSH1 0x8
0x1b0 SLOAD
0x1b1 PUSH2 0x100
0x1b4 SWAP1
0x1b5 DIV
0x1b6 PUSH1 0xff
0x1b8 AND
0x1b9 ISZERO
0x1ba ISZERO
0x1bb PUSH2 0x16c
0x1be JUMPI
---
0x1ad: JUMPDEST 
0x1ae: V168 = 0x8
0x1b0: V169 = S[0x8]
0x1b1: V170 = 0x100
0x1b5: V171 = DIV V169 0x100
0x1b6: V172 = 0xff
0x1b8: V173 = AND 0xff V171
0x1b9: V174 = ISZERO V173
0x1ba: V175 = ISZERO V174
0x1bb: V176 = 0x16c
0x1be: JUMPI 0x16c V175
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1bf
[0x1bf:0x232]
---
Predecessors: [0x1ad]
Successors: [0x233, 0x237]
---
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 SLOAD
0x1c3 PUSH1 0x1
0x1c5 PUSH1 0xa0
0x1c7 PUSH1 0x2
0x1c9 EXP
0x1ca SUB
0x1cb AND
0x1cc SWAP1
0x1cd PUSH4 0xa9059cbb
0x1d2 SWAP1
0x1d3 PUSH20 0xe010d0a52791340db3323b77700817546a062109
0x1e8 SWAP1
0x1e9 DUP4
0x1ea SWAP1
0x1eb PUSH4 0x70a08231
0x1f0 SWAP1
0x1f1 ADDRESS
0x1f2 SWAP1
0x1f3 PUSH1 0x40
0x1f5 MLOAD
0x1f6 PUSH1 0x20
0x1f8 ADD
0x1f9 MSTORE
0x1fa PUSH1 0x40
0x1fc MLOAD
0x1fd PUSH1 0xe0
0x1ff PUSH1 0x2
0x201 EXP
0x202 PUSH4 0xffffffff
0x207 DUP5
0x208 AND
0x209 MUL
0x20a DUP2
0x20b MSTORE
0x20c PUSH1 0x1
0x20e PUSH1 0xa0
0x210 PUSH1 0x2
0x212 EXP
0x213 SUB
0x214 SWAP1
0x215 SWAP2
0x216 AND
0x217 PUSH1 0x4
0x219 DUP3
0x21a ADD
0x21b MSTORE
0x21c PUSH1 0x24
0x21e ADD
0x21f PUSH1 0x20
0x221 PUSH1 0x40
0x223 MLOAD
0x224 DUP1
0x225 DUP4
0x226 SUB
0x227 DUP2
0x228 PUSH1 0x0
0x22a DUP8
0x22b DUP1
0x22c EXTCODESIZE
0x22d ISZERO
0x22e ISZERO
0x22f PUSH2 0x237
0x232 JUMPI
---
0x1bf: V177 = 0x0
0x1c2: V178 = S[0x0]
0x1c3: V179 = 0x1
0x1c5: V180 = 0xa0
0x1c7: V181 = 0x2
0x1c9: V182 = EXP 0x2 0xa0
0x1ca: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cb: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x1cd: V185 = 0xa9059cbb
0x1d3: V186 = 0xe010d0a52791340db3323b77700817546a062109
0x1eb: V187 = 0x70a08231
0x1f1: V188 = ADDRESS
0x1f3: V189 = 0x40
0x1f5: V190 = M[0x40]
0x1f6: V191 = 0x20
0x1f8: V192 = ADD 0x20 V190
0x1f9: M[V192] = 0x0
0x1fa: V193 = 0x40
0x1fc: V194 = M[0x40]
0x1fd: V195 = 0xe0
0x1ff: V196 = 0x2
0x201: V197 = EXP 0x2 0xe0
0x202: V198 = 0xffffffff
0x208: V199 = AND 0x70a08231 0xffffffff
0x209: V200 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x20b: M[V194] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x20c: V201 = 0x1
0x20e: V202 = 0xa0
0x210: V203 = 0x2
0x212: V204 = EXP 0x2 0xa0
0x213: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x216: V206 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x217: V207 = 0x4
0x21a: V208 = ADD V194 0x4
0x21b: M[V208] = V206
0x21c: V209 = 0x24
0x21e: V210 = ADD 0x24 V194
0x21f: V211 = 0x20
0x221: V212 = 0x40
0x223: V213 = M[0x40]
0x226: V214 = SUB V210 V213
0x228: V215 = 0x0
0x22c: V216 = EXTCODESIZE V184
0x22d: V217 = ISZERO V216
0x22e: V218 = ISZERO V217
0x22f: V219 = 0x237
0x232: JUMPI 0x237 V218
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210, 0x20, V213, V214, V213, 0x0, V184]
Exit stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210, 0x20, V213, V214, V213, 0x0, V184]

================================

Block 0x233
[0x233:0x236]
---
Predecessors: [0x1bf]
Successors: []
---
0x233 PUSH1 0x0
0x235 DUP1
0x236 REVERT
---
0x233: V220 = 0x0
0x236: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210, 0x20, V213, V214, V213, 0x0, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210, 0x20, V213, V214, V213, 0x0, V184]

================================

Block 0x237
[0x237:0x243]
---
Predecessors: [0x1bf]
Successors: [0x244, 0x248]
---
0x237 JUMPDEST
0x238 PUSH2 0x2c6
0x23b GAS
0x23c SUB
0x23d CALL
0x23e ISZERO
0x23f ISZERO
0x240 PUSH2 0x248
0x243 JUMPI
---
0x237: JUMPDEST 
0x238: V221 = 0x2c6
0x23b: V222 = GAS
0x23c: V223 = SUB V222 0x2c6
0x23d: V224 = CALL V223 V184 0x0 V213 V214 V213 0x20
0x23e: V225 = ISZERO V224
0x23f: V226 = ISZERO V225
0x240: V227 = 0x248
0x243: JUMPI 0x248 V226
---
Entry stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210, 0x20, V213, V214, V213, 0x0, V184]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210]

================================

Block 0x244
[0x244:0x247]
---
Predecessors: [0x237]
Successors: []
---
0x244 PUSH1 0x0
0x246 DUP1
0x247 REVERT
---
0x244: V228 = 0x0
0x247: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210]

================================

Block 0x248
[0x248:0x290]
---
Predecessors: [0x237]
Successors: [0x291, 0x295]
---
0x248 JUMPDEST
0x249 POP
0x24a POP
0x24b POP
0x24c PUSH1 0x40
0x24e MLOAD
0x24f DUP1
0x250 MLOAD
0x251 SWAP1
0x252 POP
0x253 PUSH1 0x40
0x255 MLOAD
0x256 PUSH1 0xe0
0x258 PUSH1 0x2
0x25a EXP
0x25b PUSH4 0xffffffff
0x260 DUP6
0x261 AND
0x262 MUL
0x263 DUP2
0x264 MSTORE
0x265 PUSH1 0x1
0x267 PUSH1 0xa0
0x269 PUSH1 0x2
0x26b EXP
0x26c SUB
0x26d SWAP1
0x26e SWAP3
0x26f AND
0x270 PUSH1 0x4
0x272 DUP4
0x273 ADD
0x274 MSTORE
0x275 PUSH1 0x24
0x277 DUP3
0x278 ADD
0x279 MSTORE
0x27a PUSH1 0x44
0x27c ADD
0x27d PUSH1 0x0
0x27f PUSH1 0x40
0x281 MLOAD
0x282 DUP1
0x283 DUP4
0x284 SUB
0x285 DUP2
0x286 PUSH1 0x0
0x288 DUP8
0x289 DUP1
0x28a EXTCODESIZE
0x28b ISZERO
0x28c ISZERO
0x28d PUSH2 0x295
0x290 JUMPI
---
0x248: JUMPDEST 
0x24c: V229 = 0x40
0x24e: V230 = M[0x40]
0x250: V231 = M[V230]
0x253: V232 = 0x40
0x255: V233 = M[0x40]
0x256: V234 = 0xe0
0x258: V235 = 0x2
0x25a: V236 = EXP 0x2 0xe0
0x25b: V237 = 0xffffffff
0x261: V238 = AND 0xa9059cbb 0xffffffff
0x262: V239 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x264: M[V233] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x265: V240 = 0x1
0x267: V241 = 0xa0
0x269: V242 = 0x2
0x26b: V243 = EXP 0x2 0xa0
0x26c: V244 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26f: V245 = AND 0xe010d0a52791340db3323b77700817546a062109 0xffffffffffffffffffffffffffffffffffffffff
0x270: V246 = 0x4
0x273: V247 = ADD V233 0x4
0x274: M[V247] = 0xe010d0a52791340db3323b77700817546a062109
0x275: V248 = 0x24
0x278: V249 = ADD V233 0x24
0x279: M[V249] = V231
0x27a: V250 = 0x44
0x27c: V251 = ADD 0x44 V233
0x27d: V252 = 0x0
0x27f: V253 = 0x40
0x281: V254 = M[0x40]
0x284: V255 = SUB V251 V254
0x286: V256 = 0x0
0x28a: V257 = EXTCODESIZE V184
0x28b: V258 = ISZERO V257
0x28c: V259 = ISZERO V258
0x28d: V260 = 0x295
0x290: JUMPI 0x295 V259
---
Entry stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, 0xe010d0a52791340db3323b77700817546a062109, V184, 0x70a08231, V210]
Stack pops: 6
Stack additions: [S5, S4, V251, 0x0, V254, V255, V254, 0x0, S5]
Exit stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, V251, 0x0, V254, V255, V254, 0x0, V184]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x248]
Successors: []
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
---
0x291: V261 = 0x0
0x294: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, V251, 0x0, V254, V255, V254, 0x0, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, V251, 0x0, V254, V255, V254, 0x0, V184]

================================

Block 0x295
[0x295:0x2a1]
---
Predecessors: [0x248]
Successors: [0x2a2, 0x2a6]
---
0x295 JUMPDEST
0x296 PUSH2 0x2c6
0x299 GAS
0x29a SUB
0x29b CALL
0x29c ISZERO
0x29d ISZERO
0x29e PUSH2 0x2a6
0x2a1 JUMPI
---
0x295: JUMPDEST 
0x296: V262 = 0x2c6
0x299: V263 = GAS
0x29a: V264 = SUB V263 0x2c6
0x29b: V265 = CALL V264 V184 0x0 V254 V255 V254 0x0
0x29c: V266 = ISZERO V265
0x29d: V267 = ISZERO V266
0x29e: V268 = 0x2a6
0x2a1: JUMPI 0x2a6 V267
---
Entry stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, V251, 0x0, V254, V255, V254, 0x0, V184]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, V251]

================================

Block 0x2a2
[0x2a2:0x2a5]
---
Predecessors: [0x295]
Successors: []
---
0x2a2 PUSH1 0x0
0x2a4 DUP1
0x2a5 REVERT
---
0x2a2: V269 = 0x0
0x2a5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, V251]

================================

Block 0x2a6
[0x2a6:0x2ff]
---
Predecessors: [0x295]
Successors: [0x300, 0x304]
---
0x2a6 JUMPDEST
0x2a7 POP
0x2a8 POP
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac SLOAD
0x2ad PUSH1 0x1
0x2af PUSH1 0xa0
0x2b1 PUSH1 0x2
0x2b3 EXP
0x2b4 SUB
0x2b5 AND
0x2b6 SWAP2
0x2b7 POP
0x2b8 PUSH4 0x70a08231
0x2bd SWAP1
0x2be ADDRESS
0x2bf SWAP1
0x2c0 PUSH1 0x40
0x2c2 MLOAD
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 MSTORE
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca PUSH1 0xe0
0x2cc PUSH1 0x2
0x2ce EXP
0x2cf PUSH4 0xffffffff
0x2d4 DUP5
0x2d5 AND
0x2d6 MUL
0x2d7 DUP2
0x2d8 MSTORE
0x2d9 PUSH1 0x1
0x2db PUSH1 0xa0
0x2dd PUSH1 0x2
0x2df EXP
0x2e0 SUB
0x2e1 SWAP1
0x2e2 SWAP2
0x2e3 AND
0x2e4 PUSH1 0x4
0x2e6 DUP3
0x2e7 ADD
0x2e8 MSTORE
0x2e9 PUSH1 0x24
0x2eb ADD
0x2ec PUSH1 0x20
0x2ee PUSH1 0x40
0x2f0 MLOAD
0x2f1 DUP1
0x2f2 DUP4
0x2f3 SUB
0x2f4 DUP2
0x2f5 PUSH1 0x0
0x2f7 DUP8
0x2f8 DUP1
0x2f9 EXTCODESIZE
0x2fa ISZERO
0x2fb ISZERO
0x2fc PUSH2 0x304
0x2ff JUMPI
---
0x2a6: JUMPDEST 
0x2a9: V270 = 0x0
0x2ac: V271 = S[0x0]
0x2ad: V272 = 0x1
0x2af: V273 = 0xa0
0x2b1: V274 = 0x2
0x2b3: V275 = EXP 0x2 0xa0
0x2b4: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b5: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x2b8: V278 = 0x70a08231
0x2be: V279 = ADDRESS
0x2c0: V280 = 0x40
0x2c2: V281 = M[0x40]
0x2c3: V282 = 0x20
0x2c5: V283 = ADD 0x20 V281
0x2c6: M[V283] = 0x0
0x2c7: V284 = 0x40
0x2c9: V285 = M[0x40]
0x2ca: V286 = 0xe0
0x2cc: V287 = 0x2
0x2ce: V288 = EXP 0x2 0xe0
0x2cf: V289 = 0xffffffff
0x2d5: V290 = AND 0x70a08231 0xffffffff
0x2d6: V291 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x2d8: M[V285] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2d9: V292 = 0x1
0x2db: V293 = 0xa0
0x2dd: V294 = 0x2
0x2df: V295 = EXP 0x2 0xa0
0x2e0: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e3: V297 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x2e4: V298 = 0x4
0x2e7: V299 = ADD V285 0x4
0x2e8: M[V299] = V297
0x2e9: V300 = 0x24
0x2eb: V301 = ADD 0x24 V285
0x2ec: V302 = 0x20
0x2ee: V303 = 0x40
0x2f0: V304 = M[0x40]
0x2f3: V305 = SUB V301 V304
0x2f5: V306 = 0x0
0x2f9: V307 = EXTCODESIZE V277
0x2fa: V308 = ISZERO V307
0x2fb: V309 = ISZERO V308
0x2fc: V310 = 0x304
0x2ff: JUMPI 0x304 V309
---
Entry stack: [V12, 0x0, 0x0, 0x0, V184, 0xa9059cbb, V251]
Stack pops: 3
Stack additions: [V277, 0x70a08231, V301, 0x20, V304, V305, V304, 0x0, V277]
Exit stack: [V12, 0x0, 0x0, 0x0, V277, 0x70a08231, V301, 0x20, V304, V305, V304, 0x0, V277]

================================

Block 0x300
[0x300:0x303]
---
Predecessors: [0x2a6]
Successors: []
---
0x300 PUSH1 0x0
0x302 DUP1
0x303 REVERT
---
0x300: V311 = 0x0
0x303: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V277, 0x70a08231, V301, 0x20, V304, V305, V304, 0x0, V277]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V277, 0x70a08231, V301, 0x20, V304, V305, V304, 0x0, V277]

================================

Block 0x304
[0x304:0x310]
---
Predecessors: [0x2a6]
Successors: [0x311, 0x315]
---
0x304 JUMPDEST
0x305 PUSH2 0x2c6
0x308 GAS
0x309 SUB
0x30a CALL
0x30b ISZERO
0x30c ISZERO
0x30d PUSH2 0x315
0x310 JUMPI
---
0x304: JUMPDEST 
0x305: V312 = 0x2c6
0x308: V313 = GAS
0x309: V314 = SUB V313 0x2c6
0x30a: V315 = CALL V314 V277 0x0 V304 V305 V304 0x20
0x30b: V316 = ISZERO V315
0x30c: V317 = ISZERO V316
0x30d: V318 = 0x315
0x310: JUMPI 0x315 V317
---
Entry stack: [V12, 0x0, 0x0, 0x0, V277, 0x70a08231, V301, 0x20, V304, V305, V304, 0x0, V277]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V277, 0x70a08231, V301]

================================

Block 0x311
[0x311:0x314]
---
Predecessors: [0x304]
Successors: []
---
0x311 PUSH1 0x0
0x313 DUP1
0x314 REVERT
---
0x311: V319 = 0x0
0x314: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V277, 0x70a08231, V301]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V277, 0x70a08231, V301]

================================

Block 0x315
[0x315:0x339]
---
Predecessors: [0x304]
Successors: [0x33a]
---
0x315 JUMPDEST
0x316 POP
0x317 POP
0x318 POP
0x319 PUSH1 0x40
0x31b MLOAD
0x31c DUP1
0x31d MLOAD
0x31e PUSH1 0x7
0x320 SSTORE
0x321 POP
0x322 PUSH1 0x8
0x324 DUP1
0x325 SLOAD
0x326 PUSH1 0xff
0x328 NOT
0x329 PUSH2 0xff00
0x32c NOT
0x32d SWAP1
0x32e SWAP2
0x32f AND
0x330 PUSH2 0x100
0x333 OR
0x334 AND
0x335 PUSH1 0x1
0x337 OR
0x338 SWAP1
0x339 SSTORE
---
0x315: JUMPDEST 
0x319: V320 = 0x40
0x31b: V321 = M[0x40]
0x31d: V322 = M[V321]
0x31e: V323 = 0x7
0x320: S[0x7] = V322
0x322: V324 = 0x8
0x325: V325 = S[0x8]
0x326: V326 = 0xff
0x328: V327 = NOT 0xff
0x329: V328 = 0xff00
0x32c: V329 = NOT 0xff00
0x32f: V330 = AND V325 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff
0x330: V331 = 0x100
0x333: V332 = OR 0x100 V330
0x334: V333 = AND V332 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x335: V334 = 0x1
0x337: V335 = OR 0x1 V333
0x339: S[0x8] = V335
---
Entry stack: [V12, 0x0, 0x0, 0x0, V277, 0x70a08231, V301]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x33a
[0x33a:0x33e]
---
Predecessors: [0x315]
Successors: [0x686]
---
0x33a JUMPDEST
0x33b PUSH2 0x686
0x33e JUMP
---
0x33a: JUMPDEST 
0x33b: V336 = 0x686
0x33e: JUMP 0x686
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x33f
[0x33f:0x34a]
---
Predecessors: [0x171]
Successors: [0x34b, 0x381]
---
0x33f JUMPDEST
0x340 PUSH1 0x8
0x342 SLOAD
0x343 PUSH1 0xff
0x345 AND
0x346 ISZERO
0x347 PUSH2 0x381
0x34a JUMPI
---
0x33f: JUMPDEST 
0x340: V337 = 0x8
0x342: V338 = S[0x8]
0x343: V339 = 0xff
0x345: V340 = AND 0xff V338
0x346: V341 = ISZERO V340
0x347: V342 = 0x381
0x34a: JUMPI 0x381 V341
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x34b
[0x34b:0x377]
---
Predecessors: [0x33f]
Successors: [0x16c, 0x378]
---
0x34b PUSH1 0x1
0x34d PUSH1 0xa0
0x34f PUSH1 0x2
0x351 EXP
0x352 SUB
0x353 CALLER
0x354 AND
0x355 CALLVALUE
0x356 DUP1
0x357 ISZERO
0x358 PUSH2 0x8fc
0x35b MUL
0x35c SWAP1
0x35d PUSH1 0x40
0x35f MLOAD
0x360 PUSH1 0x0
0x362 PUSH1 0x40
0x364 MLOAD
0x365 DUP1
0x366 DUP4
0x367 SUB
0x368 DUP2
0x369 DUP6
0x36a DUP9
0x36b DUP9
0x36c CALL
0x36d SWAP4
0x36e POP
0x36f POP
0x370 POP
0x371 POP
0x372 ISZERO
0x373 ISZERO
0x374 PUSH2 0x16c
0x377 JUMPI
---
0x34b: V343 = 0x1
0x34d: V344 = 0xa0
0x34f: V345 = 0x2
0x351: V346 = EXP 0x2 0xa0
0x352: V347 = SUB 0x10000000000000000000000000000000000000000 0x1
0x353: V348 = CALLER
0x354: V349 = AND V348 0xffffffffffffffffffffffffffffffffffffffff
0x355: V350 = CALLVALUE
0x357: V351 = ISZERO V350
0x358: V352 = 0x8fc
0x35b: V353 = MUL 0x8fc V351
0x35d: V354 = 0x40
0x35f: V355 = M[0x40]
0x360: V356 = 0x0
0x362: V357 = 0x40
0x364: V358 = M[0x40]
0x367: V359 = SUB V355 V358
0x36c: V360 = CALL V353 V349 V350 V358 V359 V358 0x0
0x372: V361 = ISZERO V360
0x373: V362 = ISZERO V361
0x374: V363 = 0x16c
0x377: JUMPI 0x16c V362
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x378
[0x378:0x37b]
---
Predecessors: [0x34b]
Successors: []
---
0x378 PUSH1 0x0
0x37a DUP1
0x37b REVERT
---
0x378: V364 = 0x0
0x37b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x37c
[0x37c:0x380]
---
Predecessors: []
Successors: [0x686]
---
0x37c JUMPDEST
0x37d PUSH2 0x686
0x380 JUMP
---
0x37c: JUMPDEST 
0x37d: V365 = 0x686
0x380: JUMP 0x686
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x381
[0x381:0x38f]
---
Predecessors: [0x33f]
Successors: [0x390, 0x391]
---
0x381 JUMPDEST
0x382 PUSH1 0x5
0x384 SLOAD
0x385 PUSH1 0x4
0x387 SLOAD
0x388 CALLVALUE
0x389 DUP2
0x38a ISZERO
0x38b ISZERO
0x38c PUSH2 0x391
0x38f JUMPI
---
0x381: JUMPDEST 
0x382: V366 = 0x5
0x384: V367 = S[0x5]
0x385: V368 = 0x4
0x387: V369 = S[0x4]
0x388: V370 = CALLVALUE
0x38a: V371 = ISZERO V369
0x38b: V372 = ISZERO V371
0x38c: V373 = 0x391
0x38f: JUMPI 0x391 V372
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V367, V369, V370]
Exit stack: [V12, 0x0, 0x0, 0x0, V367, V369, V370]

================================

Block 0x390
[0x390:0x390]
---
Predecessors: [0x381]
Successors: []
---
0x390 INVALID
---
0x390: INVALID 
---
Entry stack: [V12, 0x0, 0x0, 0x0, V367, V369, V370]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V367, V369, V370]

================================

Block 0x391
[0x391:0x39d]
---
Predecessors: [0x381]
Successors: [0x39e, 0x3cf]
---
0x391 JUMPDEST
0x392 DIV
0x393 MUL
0x394 SWAP3
0x395 POP
0x396 PUSH1 0x0
0x398 DUP4
0x399 GT
0x39a PUSH2 0x3cf
0x39d JUMPI
---
0x391: JUMPDEST 
0x392: V374 = DIV V370 V369
0x393: V375 = MUL V374 V367
0x396: V376 = 0x0
0x399: V377 = GT V375 0x0
0x39a: V378 = 0x3cf
0x39d: JUMPI 0x3cf V377
---
Entry stack: [V12, 0x0, 0x0, 0x0, V367, V369, V370]
Stack pops: 6
Stack additions: [V375, S4, S3]
Exit stack: [V12, V375, 0x0, 0x0]

================================

Block 0x39e
[0x39e:0x3ca]
---
Predecessors: [0x391]
Successors: [0x3cb, 0x3cf]
---
0x39e PUSH1 0x1
0x3a0 PUSH1 0xa0
0x3a2 PUSH1 0x2
0x3a4 EXP
0x3a5 SUB
0x3a6 CALLER
0x3a7 AND
0x3a8 CALLVALUE
0x3a9 DUP1
0x3aa ISZERO
0x3ab PUSH2 0x8fc
0x3ae MUL
0x3af SWAP1
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 PUSH1 0x0
0x3b5 PUSH1 0x40
0x3b7 MLOAD
0x3b8 DUP1
0x3b9 DUP4
0x3ba SUB
0x3bb DUP2
0x3bc DUP6
0x3bd DUP9
0x3be DUP9
0x3bf CALL
0x3c0 SWAP4
0x3c1 POP
0x3c2 POP
0x3c3 POP
0x3c4 POP
0x3c5 ISZERO
0x3c6 ISZERO
0x3c7 PUSH2 0x3cf
0x3ca JUMPI
---
0x39e: V379 = 0x1
0x3a0: V380 = 0xa0
0x3a2: V381 = 0x2
0x3a4: V382 = EXP 0x2 0xa0
0x3a5: V383 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a6: V384 = CALLER
0x3a7: V385 = AND V384 0xffffffffffffffffffffffffffffffffffffffff
0x3a8: V386 = CALLVALUE
0x3aa: V387 = ISZERO V386
0x3ab: V388 = 0x8fc
0x3ae: V389 = MUL 0x8fc V387
0x3b0: V390 = 0x40
0x3b2: V391 = M[0x40]
0x3b3: V392 = 0x0
0x3b5: V393 = 0x40
0x3b7: V394 = M[0x40]
0x3ba: V395 = SUB V391 V394
0x3bf: V396 = CALL V389 V385 V386 V394 V395 V394 0x0
0x3c5: V397 = ISZERO V396
0x3c6: V398 = ISZERO V397
0x3c7: V399 = 0x3cf
0x3ca: JUMPI 0x3cf V398
---
Entry stack: [V12, V375, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, 0x0, 0x0]

================================

Block 0x3cb
[0x3cb:0x3ce]
---
Predecessors: [0x39e]
Successors: []
---
0x3cb PUSH1 0x0
0x3cd DUP1
0x3ce REVERT
---
0x3cb: V400 = 0x0
0x3ce: REVERT 0x0 0x0
---
Entry stack: [V12, V375, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, 0x0, 0x0]

================================

Block 0x3cf
[0x3cf:0x3cf]
---
Predecessors: [0x391, 0x39e]
Successors: [0x3d0]
---
0x3cf JUMPDEST
---
0x3cf: JUMPDEST 
---
Entry stack: [V12, V375, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, 0x0, 0x0]

================================

Block 0x3d0
[0x3d0:0x3d8]
---
Predecessors: [0x3cf]
Successors: [0x3d9, 0x3dd]
---
0x3d0 JUMPDEST
0x3d1 PUSH1 0x0
0x3d3 DUP4
0x3d4 GT
0x3d5 PUSH2 0x3dd
0x3d8 JUMPI
---
0x3d0: JUMPDEST 
0x3d1: V401 = 0x0
0x3d4: V402 = GT V375 0x0
0x3d5: V403 = 0x3dd
0x3d8: JUMPI 0x3dd V402
---
Entry stack: [V12, V375, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, V375, 0x0, 0x0]

================================

Block 0x3d9
[0x3d9:0x3dc]
---
Predecessors: [0x3d0]
Successors: []
---
0x3d9 PUSH1 0x0
0x3db DUP1
0x3dc REVERT
---
0x3d9: V404 = 0x0
0x3dc: REVERT 0x0 0x0
---
Entry stack: [V12, V375, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, 0x0, 0x0]

================================

Block 0x3dd
[0x3dd:0x3ec]
---
Predecessors: [0x3d0]
Successors: [0x3ed, 0x3ee]
---
0x3dd JUMPDEST
0x3de PUSH1 0x5
0x3e0 SLOAD
0x3e1 PUSH1 0x4
0x3e3 SLOAD
0x3e4 DUP5
0x3e5 MUL
0x3e6 DUP2
0x3e7 ISZERO
0x3e8 ISZERO
0x3e9 PUSH2 0x3ee
0x3ec JUMPI
---
0x3dd: JUMPDEST 
0x3de: V405 = 0x5
0x3e0: V406 = S[0x5]
0x3e1: V407 = 0x4
0x3e3: V408 = S[0x4]
0x3e5: V409 = MUL V375 V408
0x3e7: V410 = ISZERO V406
0x3e8: V411 = ISZERO V410
0x3e9: V412 = 0x3ee
0x3ec: JUMPI 0x3ee V411
---
Entry stack: [V12, V375, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V406, V409]
Exit stack: [V12, V375, 0x0, 0x0, V406, V409]

================================

Block 0x3ed
[0x3ed:0x3ed]
---
Predecessors: [0x3dd]
Successors: []
---
0x3ed INVALID
---
0x3ed: INVALID 
---
Entry stack: [V12, V375, 0x0, 0x0, V406, V409]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, 0x0, 0x0, V406, V409]

================================

Block 0x3ee
[0x3ee:0x3fc]
---
Predecessors: [0x3dd]
Successors: [0x3fd, 0x503]
---
0x3ee JUMPDEST
0x3ef DIV
0x3f0 SWAP2
0x3f1 POP
0x3f2 DUP3
0x3f3 PUSH1 0x7
0x3f5 SLOAD
0x3f6 LT
0x3f7 ISZERO
0x3f8 ISZERO
0x3f9 PUSH2 0x503
0x3fc JUMPI
---
0x3ee: JUMPDEST 
0x3ef: V413 = DIV V409 V406
0x3f3: V414 = 0x7
0x3f5: V415 = S[0x7]
0x3f6: V416 = LT V415 V375
0x3f7: V417 = ISZERO V416
0x3f8: V418 = ISZERO V417
0x3f9: V419 = 0x503
0x3fc: JUMPI 0x503 V418
---
Entry stack: [V12, V375, 0x0, 0x0, V406, V409]
Stack pops: 5
Stack additions: [S4, V413, S2]
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x3fd
[0x3fd:0x42a]
---
Predecessors: [0x3ee]
Successors: [0x42b, 0x42f]
---
0x3fd PUSH1 0x1
0x3ff SLOAD
0x400 PUSH1 0x1
0x402 PUSH1 0xa0
0x404 PUSH1 0x2
0x406 EXP
0x407 SUB
0x408 AND
0x409 DUP3
0x40a ISZERO
0x40b PUSH2 0x8fc
0x40e MUL
0x40f DUP4
0x410 PUSH1 0x40
0x412 MLOAD
0x413 PUSH1 0x0
0x415 PUSH1 0x40
0x417 MLOAD
0x418 DUP1
0x419 DUP4
0x41a SUB
0x41b DUP2
0x41c DUP6
0x41d DUP9
0x41e DUP9
0x41f CALL
0x420 SWAP4
0x421 POP
0x422 POP
0x423 POP
0x424 POP
0x425 ISZERO
0x426 ISZERO
0x427 PUSH2 0x42f
0x42a JUMPI
---
0x3fd: V420 = 0x1
0x3ff: V421 = S[0x1]
0x400: V422 = 0x1
0x402: V423 = 0xa0
0x404: V424 = 0x2
0x406: V425 = EXP 0x2 0xa0
0x407: V426 = SUB 0x10000000000000000000000000000000000000000 0x1
0x408: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x40a: V428 = ISZERO V413
0x40b: V429 = 0x8fc
0x40e: V430 = MUL 0x8fc V428
0x410: V431 = 0x40
0x412: V432 = M[0x40]
0x413: V433 = 0x0
0x415: V434 = 0x40
0x417: V435 = M[0x40]
0x41a: V436 = SUB V432 V435
0x41f: V437 = CALL V430 V427 V413 V435 V436 V435 0x0
0x425: V438 = ISZERO V437
0x426: V439 = ISZERO V438
0x427: V440 = 0x42f
0x42a: JUMPI 0x42f V439
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x42b
[0x42b:0x42e]
---
Predecessors: [0x3fd]
Successors: []
---
0x42b PUSH1 0x0
0x42d DUP1
0x42e REVERT
---
0x42b: V441 = 0x0
0x42e: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x42f
[0x42f:0x437]
---
Predecessors: [0x3fd]
Successors: [0x438, 0x46c]
---
0x42f JUMPDEST
0x430 DUP2
0x431 CALLVALUE
0x432 GT
0x433 ISZERO
0x434 PUSH2 0x46c
0x437 JUMPI
---
0x42f: JUMPDEST 
0x431: V442 = CALLVALUE
0x432: V443 = GT V442 V413
0x433: V444 = ISZERO V443
0x434: V445 = 0x46c
0x437: JUMPI 0x46c V444
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x438
[0x438:0x467]
---
Predecessors: [0x42f]
Successors: [0x468, 0x46c]
---
0x438 CALLER
0x439 PUSH1 0x1
0x43b PUSH1 0xa0
0x43d PUSH1 0x2
0x43f EXP
0x440 SUB
0x441 AND
0x442 PUSH2 0x8fc
0x445 DUP4
0x446 CALLVALUE
0x447 SUB
0x448 SWAP1
0x449 DUP2
0x44a ISZERO
0x44b MUL
0x44c SWAP1
0x44d PUSH1 0x40
0x44f MLOAD
0x450 PUSH1 0x0
0x452 PUSH1 0x40
0x454 MLOAD
0x455 DUP1
0x456 DUP4
0x457 SUB
0x458 DUP2
0x459 DUP6
0x45a DUP9
0x45b DUP9
0x45c CALL
0x45d SWAP4
0x45e POP
0x45f POP
0x460 POP
0x461 POP
0x462 ISZERO
0x463 ISZERO
0x464 PUSH2 0x46c
0x467 JUMPI
---
0x438: V446 = CALLER
0x439: V447 = 0x1
0x43b: V448 = 0xa0
0x43d: V449 = 0x2
0x43f: V450 = EXP 0x2 0xa0
0x440: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x441: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x442: V453 = 0x8fc
0x446: V454 = CALLVALUE
0x447: V455 = SUB V454 V413
0x44a: V456 = ISZERO V455
0x44b: V457 = MUL V456 0x8fc
0x44d: V458 = 0x40
0x44f: V459 = M[0x40]
0x450: V460 = 0x0
0x452: V461 = 0x40
0x454: V462 = M[0x40]
0x457: V463 = SUB V459 V462
0x45c: V464 = CALL V457 V452 V455 V462 V463 V462 0x0
0x462: V465 = ISZERO V464
0x463: V466 = ISZERO V465
0x464: V467 = 0x46c
0x467: JUMPI 0x46c V466
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x468
[0x468:0x46b]
---
Predecessors: [0x438]
Successors: []
---
0x468 PUSH1 0x0
0x46a DUP1
0x46b REVERT
---
0x468: V468 = 0x0
0x46b: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x46c
[0x46c:0x46c]
---
Predecessors: [0x42f, 0x438]
Successors: [0x46d]
---
0x46c JUMPDEST
---
0x46c: JUMPDEST 
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x46d
[0x46d:0x4be]
---
Predecessors: [0x46c]
Successors: [0x4bf, 0x4c3]
---
0x46d JUMPDEST
0x46e PUSH1 0x0
0x470 SLOAD
0x471 PUSH1 0x1
0x473 PUSH1 0xa0
0x475 PUSH1 0x2
0x477 EXP
0x478 SUB
0x479 AND
0x47a PUSH4 0xa9059cbb
0x47f CALLER
0x480 DUP6
0x481 PUSH1 0x40
0x483 MLOAD
0x484 PUSH1 0xe0
0x486 PUSH1 0x2
0x488 EXP
0x489 PUSH4 0xffffffff
0x48e DUP6
0x48f AND
0x490 MUL
0x491 DUP2
0x492 MSTORE
0x493 PUSH1 0x1
0x495 PUSH1 0xa0
0x497 PUSH1 0x2
0x499 EXP
0x49a SUB
0x49b SWAP1
0x49c SWAP3
0x49d AND
0x49e PUSH1 0x4
0x4a0 DUP4
0x4a1 ADD
0x4a2 MSTORE
0x4a3 PUSH1 0x24
0x4a5 DUP3
0x4a6 ADD
0x4a7 MSTORE
0x4a8 PUSH1 0x44
0x4aa ADD
0x4ab PUSH1 0x0
0x4ad PUSH1 0x40
0x4af MLOAD
0x4b0 DUP1
0x4b1 DUP4
0x4b2 SUB
0x4b3 DUP2
0x4b4 PUSH1 0x0
0x4b6 DUP8
0x4b7 DUP1
0x4b8 EXTCODESIZE
0x4b9 ISZERO
0x4ba ISZERO
0x4bb PUSH2 0x4c3
0x4be JUMPI
---
0x46d: JUMPDEST 
0x46e: V469 = 0x0
0x470: V470 = S[0x0]
0x471: V471 = 0x1
0x473: V472 = 0xa0
0x475: V473 = 0x2
0x477: V474 = EXP 0x2 0xa0
0x478: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x479: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x47a: V477 = 0xa9059cbb
0x47f: V478 = CALLER
0x481: V479 = 0x40
0x483: V480 = M[0x40]
0x484: V481 = 0xe0
0x486: V482 = 0x2
0x488: V483 = EXP 0x2 0xe0
0x489: V484 = 0xffffffff
0x48f: V485 = AND 0xa9059cbb 0xffffffff
0x490: V486 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x492: M[V480] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x493: V487 = 0x1
0x495: V488 = 0xa0
0x497: V489 = 0x2
0x499: V490 = EXP 0x2 0xa0
0x49a: V491 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49d: V492 = AND V478 0xffffffffffffffffffffffffffffffffffffffff
0x49e: V493 = 0x4
0x4a1: V494 = ADD V480 0x4
0x4a2: M[V494] = V492
0x4a3: V495 = 0x24
0x4a6: V496 = ADD V480 0x24
0x4a7: M[V496] = V375
0x4a8: V497 = 0x44
0x4aa: V498 = ADD 0x44 V480
0x4ab: V499 = 0x0
0x4ad: V500 = 0x40
0x4af: V501 = M[0x40]
0x4b2: V502 = SUB V498 V501
0x4b4: V503 = 0x0
0x4b8: V504 = EXTCODESIZE V476
0x4b9: V505 = ISZERO V504
0x4ba: V506 = ISZERO V505
0x4bb: V507 = 0x4c3
0x4be: JUMPI 0x4c3 V506
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V476, 0xa9059cbb, V498, 0x0, V501, V502, V501, 0x0, V476]
Exit stack: [V12, V375, V413, 0x0, V476, 0xa9059cbb, V498, 0x0, V501, V502, V501, 0x0, V476]

================================

Block 0x4bf
[0x4bf:0x4c2]
---
Predecessors: [0x46d]
Successors: []
---
0x4bf PUSH1 0x0
0x4c1 DUP1
0x4c2 REVERT
---
0x4bf: V508 = 0x0
0x4c2: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, 0x0, V476, 0xa9059cbb, V498, 0x0, V501, V502, V501, 0x0, V476]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, 0x0, V476, 0xa9059cbb, V498, 0x0, V501, V502, V501, 0x0, V476]

================================

Block 0x4c3
[0x4c3:0x4cf]
---
Predecessors: [0x46d]
Successors: [0x4d0, 0x4d4]
---
0x4c3 JUMPDEST
0x4c4 PUSH2 0x2c6
0x4c7 GAS
0x4c8 SUB
0x4c9 CALL
0x4ca ISZERO
0x4cb ISZERO
0x4cc PUSH2 0x4d4
0x4cf JUMPI
---
0x4c3: JUMPDEST 
0x4c4: V509 = 0x2c6
0x4c7: V510 = GAS
0x4c8: V511 = SUB V510 0x2c6
0x4c9: V512 = CALL V511 V476 0x0 V501 V502 V501 0x0
0x4ca: V513 = ISZERO V512
0x4cb: V514 = ISZERO V513
0x4cc: V515 = 0x4d4
0x4cf: JUMPI 0x4d4 V514
---
Entry stack: [V12, V375, V413, 0x0, V476, 0xa9059cbb, V498, 0x0, V501, V502, V501, 0x0, V476]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V375, V413, 0x0, V476, 0xa9059cbb, V498]

================================

Block 0x4d0
[0x4d0:0x4d3]
---
Predecessors: [0x4c3]
Successors: []
---
0x4d0 PUSH1 0x0
0x4d2 DUP1
0x4d3 REVERT
---
0x4d0: V516 = 0x0
0x4d3: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, 0x0, V476, 0xa9059cbb, V498]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, 0x0, V476, 0xa9059cbb, V498]

================================

Block 0x4d4
[0x4d4:0x4f0]
---
Predecessors: [0x4c3]
Successors: [0x16c, 0x4f1]
---
0x4d4 JUMPDEST
0x4d5 POP
0x4d6 POP
0x4d7 PUSH1 0x6
0x4d9 DUP1
0x4da SLOAD
0x4db DUP6
0x4dc ADD
0x4dd SWAP1
0x4de SSTORE
0x4df POP
0x4e0 PUSH1 0x7
0x4e2 DUP1
0x4e3 SLOAD
0x4e4 DUP5
0x4e5 SWAP1
0x4e6 SUB
0x4e7 SWAP1
0x4e8 DUP2
0x4e9 SWAP1
0x4ea SSTORE
0x4eb ISZERO
0x4ec ISZERO
0x4ed PUSH2 0x16c
0x4f0 JUMPI
---
0x4d4: JUMPDEST 
0x4d7: V517 = 0x6
0x4da: V518 = S[0x6]
0x4dc: V519 = ADD V375 V518
0x4de: S[0x6] = V519
0x4e0: V520 = 0x7
0x4e3: V521 = S[0x7]
0x4e6: V522 = SUB V521 V375
0x4ea: S[0x7] = V522
0x4eb: V523 = ISZERO V522
0x4ec: V524 = ISZERO V523
0x4ed: V525 = 0x16c
0x4f0: JUMPI 0x16c V524
---
Entry stack: [V12, V375, V413, 0x0, V476, 0xa9059cbb, V498]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x4f1
[0x4f1:0x4fd]
---
Predecessors: [0x4d4]
Successors: [0x4fe]
---
0x4f1 PUSH1 0x8
0x4f3 DUP1
0x4f4 SLOAD
0x4f5 PUSH1 0xff
0x4f7 NOT
0x4f8 AND
0x4f9 PUSH1 0x1
0x4fb OR
0x4fc SWAP1
0x4fd SSTORE
---
0x4f1: V526 = 0x8
0x4f4: V527 = S[0x8]
0x4f5: V528 = 0xff
0x4f7: V529 = NOT 0xff
0x4f8: V530 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V527
0x4f9: V531 = 0x1
0x4fb: V532 = OR 0x1 V530
0x4fd: S[0x8] = V532
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x4fe
[0x4fe:0x502]
---
Predecessors: [0x4f1]
Successors: [0x686]
---
0x4fe JUMPDEST
0x4ff PUSH2 0x686
0x502 JUMP
---
0x4fe: JUMPDEST 
0x4ff: V533 = 0x686
0x502: JUMP 0x686
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, 0x0]

================================

Block 0x503
[0x503:0x514]
---
Predecessors: [0x3ee]
Successors: [0x515, 0x516]
---
0x503 JUMPDEST
0x504 PUSH1 0x5
0x506 SLOAD
0x507 PUSH1 0x4
0x509 SLOAD
0x50a PUSH1 0x7
0x50c SLOAD
0x50d MUL
0x50e DUP2
0x50f ISZERO
0x510 ISZERO
0x511 PUSH2 0x516
0x514 JUMPI
---
0x503: JUMPDEST 
0x504: V534 = 0x5
0x506: V535 = S[0x5]
0x507: V536 = 0x4
0x509: V537 = S[0x4]
0x50a: V538 = 0x7
0x50c: V539 = S[0x7]
0x50d: V540 = MUL V539 V537
0x50f: V541 = ISZERO V535
0x510: V542 = ISZERO V541
0x511: V543 = 0x516
0x514: JUMPI 0x516 V542
---
Entry stack: [V12, V375, V413, 0x0]
Stack pops: 0
Stack additions: [V535, V540]
Exit stack: [V12, V375, V413, 0x0, V535, V540]

================================

Block 0x515
[0x515:0x515]
---
Predecessors: [0x503]
Successors: []
---
0x515 INVALID
---
0x515: INVALID 
---
Entry stack: [V12, V375, V413, 0x0, V535, V540]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, 0x0, V535, V540]

================================

Block 0x516
[0x516:0x549]
---
Predecessors: [0x503]
Successors: [0x54a, 0x54e]
---
0x516 JUMPDEST
0x517 PUSH1 0x1
0x519 SLOAD
0x51a SWAP2
0x51b SWAP1
0x51c DIV
0x51d SWAP2
0x51e POP
0x51f PUSH1 0x1
0x521 PUSH1 0xa0
0x523 PUSH1 0x2
0x525 EXP
0x526 SUB
0x527 AND
0x528 DUP2
0x529 ISZERO
0x52a PUSH2 0x8fc
0x52d MUL
0x52e DUP3
0x52f PUSH1 0x40
0x531 MLOAD
0x532 PUSH1 0x0
0x534 PUSH1 0x40
0x536 MLOAD
0x537 DUP1
0x538 DUP4
0x539 SUB
0x53a DUP2
0x53b DUP6
0x53c DUP9
0x53d DUP9
0x53e CALL
0x53f SWAP4
0x540 POP
0x541 POP
0x542 POP
0x543 POP
0x544 ISZERO
0x545 ISZERO
0x546 PUSH2 0x54e
0x549 JUMPI
---
0x516: JUMPDEST 
0x517: V544 = 0x1
0x519: V545 = S[0x1]
0x51c: V546 = DIV V540 V535
0x51f: V547 = 0x1
0x521: V548 = 0xa0
0x523: V549 = 0x2
0x525: V550 = EXP 0x2 0xa0
0x526: V551 = SUB 0x10000000000000000000000000000000000000000 0x1
0x527: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V545
0x529: V553 = ISZERO V546
0x52a: V554 = 0x8fc
0x52d: V555 = MUL 0x8fc V553
0x52f: V556 = 0x40
0x531: V557 = M[0x40]
0x532: V558 = 0x0
0x534: V559 = 0x40
0x536: V560 = M[0x40]
0x539: V561 = SUB V557 V560
0x53e: V562 = CALL V555 V552 V546 V560 V561 V560 0x0
0x544: V563 = ISZERO V562
0x545: V564 = ISZERO V563
0x546: V565 = 0x54e
0x549: JUMPI 0x54e V564
---
Entry stack: [V12, V375, V413, 0x0, V535, V540]
Stack pops: 3
Stack additions: [V546]
Exit stack: [V12, V375, V413, V546]

================================

Block 0x54a
[0x54a:0x54d]
---
Predecessors: [0x516]
Successors: []
---
0x54a PUSH1 0x0
0x54c DUP1
0x54d REVERT
---
0x54a: V566 = 0x0
0x54d: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, V546]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, V546]

================================

Block 0x54e
[0x54e:0x5a6]
---
Predecessors: [0x516]
Successors: [0x5a7, 0x5ab]
---
0x54e JUMPDEST
0x54f PUSH1 0x0
0x551 SLOAD
0x552 PUSH1 0x7
0x554 SLOAD
0x555 PUSH1 0x1
0x557 PUSH1 0xa0
0x559 PUSH1 0x2
0x55b EXP
0x55c SUB
0x55d SWAP1
0x55e SWAP2
0x55f AND
0x560 SWAP1
0x561 PUSH4 0xa9059cbb
0x566 SWAP1
0x567 CALLER
0x568 SWAP1
0x569 PUSH1 0x40
0x56b MLOAD
0x56c PUSH1 0xe0
0x56e PUSH1 0x2
0x570 EXP
0x571 PUSH4 0xffffffff
0x576 DUP6
0x577 AND
0x578 MUL
0x579 DUP2
0x57a MSTORE
0x57b PUSH1 0x1
0x57d PUSH1 0xa0
0x57f PUSH1 0x2
0x581 EXP
0x582 SUB
0x583 SWAP1
0x584 SWAP3
0x585 AND
0x586 PUSH1 0x4
0x588 DUP4
0x589 ADD
0x58a MSTORE
0x58b PUSH1 0x24
0x58d DUP3
0x58e ADD
0x58f MSTORE
0x590 PUSH1 0x44
0x592 ADD
0x593 PUSH1 0x0
0x595 PUSH1 0x40
0x597 MLOAD
0x598 DUP1
0x599 DUP4
0x59a SUB
0x59b DUP2
0x59c PUSH1 0x0
0x59e DUP8
0x59f DUP1
0x5a0 EXTCODESIZE
0x5a1 ISZERO
0x5a2 ISZERO
0x5a3 PUSH2 0x5ab
0x5a6 JUMPI
---
0x54e: JUMPDEST 
0x54f: V567 = 0x0
0x551: V568 = S[0x0]
0x552: V569 = 0x7
0x554: V570 = S[0x7]
0x555: V571 = 0x1
0x557: V572 = 0xa0
0x559: V573 = 0x2
0x55b: V574 = EXP 0x2 0xa0
0x55c: V575 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55f: V576 = AND V568 0xffffffffffffffffffffffffffffffffffffffff
0x561: V577 = 0xa9059cbb
0x567: V578 = CALLER
0x569: V579 = 0x40
0x56b: V580 = M[0x40]
0x56c: V581 = 0xe0
0x56e: V582 = 0x2
0x570: V583 = EXP 0x2 0xe0
0x571: V584 = 0xffffffff
0x577: V585 = AND 0xa9059cbb 0xffffffff
0x578: V586 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x57a: M[V580] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x57b: V587 = 0x1
0x57d: V588 = 0xa0
0x57f: V589 = 0x2
0x581: V590 = EXP 0x2 0xa0
0x582: V591 = SUB 0x10000000000000000000000000000000000000000 0x1
0x585: V592 = AND V578 0xffffffffffffffffffffffffffffffffffffffff
0x586: V593 = 0x4
0x589: V594 = ADD V580 0x4
0x58a: M[V594] = V592
0x58b: V595 = 0x24
0x58e: V596 = ADD V580 0x24
0x58f: M[V596] = V570
0x590: V597 = 0x44
0x592: V598 = ADD 0x44 V580
0x593: V599 = 0x0
0x595: V600 = 0x40
0x597: V601 = M[0x40]
0x59a: V602 = SUB V598 V601
0x59c: V603 = 0x0
0x5a0: V604 = EXTCODESIZE V576
0x5a1: V605 = ISZERO V604
0x5a2: V606 = ISZERO V605
0x5a3: V607 = 0x5ab
0x5a6: JUMPI 0x5ab V606
---
Entry stack: [V12, V375, V413, V546]
Stack pops: 0
Stack additions: [V576, 0xa9059cbb, V598, 0x0, V601, V602, V601, 0x0, V576]
Exit stack: [V12, V375, V413, V546, V576, 0xa9059cbb, V598, 0x0, V601, V602, V601, 0x0, V576]

================================

Block 0x5a7
[0x5a7:0x5aa]
---
Predecessors: [0x54e]
Successors: []
---
0x5a7 PUSH1 0x0
0x5a9 DUP1
0x5aa REVERT
---
0x5a7: V608 = 0x0
0x5aa: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, V546, V576, 0xa9059cbb, V598, 0x0, V601, V602, V601, 0x0, V576]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, V546, V576, 0xa9059cbb, V598, 0x0, V601, V602, V601, 0x0, V576]

================================

Block 0x5ab
[0x5ab:0x5b7]
---
Predecessors: [0x54e]
Successors: [0x5b8, 0x5bc]
---
0x5ab JUMPDEST
0x5ac PUSH2 0x2c6
0x5af GAS
0x5b0 SUB
0x5b1 CALL
0x5b2 ISZERO
0x5b3 ISZERO
0x5b4 PUSH2 0x5bc
0x5b7 JUMPI
---
0x5ab: JUMPDEST 
0x5ac: V609 = 0x2c6
0x5af: V610 = GAS
0x5b0: V611 = SUB V610 0x2c6
0x5b1: V612 = CALL V611 V576 0x0 V601 V602 V601 0x0
0x5b2: V613 = ISZERO V612
0x5b3: V614 = ISZERO V613
0x5b4: V615 = 0x5bc
0x5b7: JUMPI 0x5bc V614
---
Entry stack: [V12, V375, V413, V546, V576, 0xa9059cbb, V598, 0x0, V601, V602, V601, 0x0, V576]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V375, V413, V546, V576, 0xa9059cbb, V598]

================================

Block 0x5b8
[0x5b8:0x5bb]
---
Predecessors: [0x5ab]
Successors: []
---
0x5b8 PUSH1 0x0
0x5ba DUP1
0x5bb REVERT
---
0x5b8: V616 = 0x0
0x5bb: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, V546, V576, 0xa9059cbb, V598]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, V546, V576, 0xa9059cbb, V598]

================================

Block 0x5bc
[0x5bc:0x5ef]
---
Predecessors: [0x5ab]
Successors: [0x5f0, 0x5f4]
---
0x5bc JUMPDEST
0x5bd POP
0x5be POP
0x5bf POP
0x5c0 CALLER
0x5c1 PUSH1 0x1
0x5c3 PUSH1 0xa0
0x5c5 PUSH1 0x2
0x5c7 EXP
0x5c8 SUB
0x5c9 AND
0x5ca PUSH2 0x8fc
0x5cd DUP3
0x5ce CALLVALUE
0x5cf SUB
0x5d0 SWAP1
0x5d1 DUP2
0x5d2 ISZERO
0x5d3 MUL
0x5d4 SWAP1
0x5d5 PUSH1 0x40
0x5d7 MLOAD
0x5d8 PUSH1 0x0
0x5da PUSH1 0x40
0x5dc MLOAD
0x5dd DUP1
0x5de DUP4
0x5df SUB
0x5e0 DUP2
0x5e1 DUP6
0x5e2 DUP9
0x5e3 DUP9
0x5e4 CALL
0x5e5 SWAP4
0x5e6 POP
0x5e7 POP
0x5e8 POP
0x5e9 POP
0x5ea ISZERO
0x5eb ISZERO
0x5ec PUSH2 0x5f4
0x5ef JUMPI
---
0x5bc: JUMPDEST 
0x5c0: V617 = CALLER
0x5c1: V618 = 0x1
0x5c3: V619 = 0xa0
0x5c5: V620 = 0x2
0x5c7: V621 = EXP 0x2 0xa0
0x5c8: V622 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c9: V623 = AND 0xffffffffffffffffffffffffffffffffffffffff V617
0x5ca: V624 = 0x8fc
0x5ce: V625 = CALLVALUE
0x5cf: V626 = SUB V625 V546
0x5d2: V627 = ISZERO V626
0x5d3: V628 = MUL V627 0x8fc
0x5d5: V629 = 0x40
0x5d7: V630 = M[0x40]
0x5d8: V631 = 0x0
0x5da: V632 = 0x40
0x5dc: V633 = M[0x40]
0x5df: V634 = SUB V630 V633
0x5e4: V635 = CALL V628 V623 V626 V633 V634 V633 0x0
0x5ea: V636 = ISZERO V635
0x5eb: V637 = ISZERO V636
0x5ec: V638 = 0x5f4
0x5ef: JUMPI 0x5f4 V637
---
Entry stack: [V12, V375, V413, V546, V576, 0xa9059cbb, V598]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V375, V413, V546]

================================

Block 0x5f0
[0x5f0:0x5f3]
---
Predecessors: [0x5bc]
Successors: []
---
0x5f0 PUSH1 0x0
0x5f2 DUP1
0x5f3 REVERT
---
0x5f0: V639 = 0x0
0x5f3: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, V546]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, V546]

================================

Block 0x5f4
[0x5f4:0x656]
---
Predecessors: [0x5bc]
Successors: [0x657, 0x65b]
---
0x5f4 JUMPDEST
0x5f5 PUSH1 0x7
0x5f7 SLOAD
0x5f8 PUSH1 0x6
0x5fa DUP1
0x5fb SLOAD
0x5fc SWAP1
0x5fd SWAP2
0x5fe ADD
0x5ff SWAP1
0x600 SSTORE
0x601 PUSH1 0x0
0x603 DUP1
0x604 SLOAD
0x605 PUSH1 0x1
0x607 PUSH1 0xa0
0x609 PUSH1 0x2
0x60b EXP
0x60c SUB
0x60d AND
0x60e SWAP1
0x60f PUSH4 0x70a08231
0x614 SWAP1
0x615 ADDRESS
0x616 SWAP1
0x617 PUSH1 0x40
0x619 MLOAD
0x61a PUSH1 0x20
0x61c ADD
0x61d MSTORE
0x61e PUSH1 0x40
0x620 MLOAD
0x621 PUSH1 0xe0
0x623 PUSH1 0x2
0x625 EXP
0x626 PUSH4 0xffffffff
0x62b DUP5
0x62c AND
0x62d MUL
0x62e DUP2
0x62f MSTORE
0x630 PUSH1 0x1
0x632 PUSH1 0xa0
0x634 PUSH1 0x2
0x636 EXP
0x637 SUB
0x638 SWAP1
0x639 SWAP2
0x63a AND
0x63b PUSH1 0x4
0x63d DUP3
0x63e ADD
0x63f MSTORE
0x640 PUSH1 0x24
0x642 ADD
0x643 PUSH1 0x20
0x645 PUSH1 0x40
0x647 MLOAD
0x648 DUP1
0x649 DUP4
0x64a SUB
0x64b DUP2
0x64c PUSH1 0x0
0x64e DUP8
0x64f DUP1
0x650 EXTCODESIZE
0x651 ISZERO
0x652 ISZERO
0x653 PUSH2 0x65b
0x656 JUMPI
---
0x5f4: JUMPDEST 
0x5f5: V640 = 0x7
0x5f7: V641 = S[0x7]
0x5f8: V642 = 0x6
0x5fb: V643 = S[0x6]
0x5fe: V644 = ADD V641 V643
0x600: S[0x6] = V644
0x601: V645 = 0x0
0x604: V646 = S[0x0]
0x605: V647 = 0x1
0x607: V648 = 0xa0
0x609: V649 = 0x2
0x60b: V650 = EXP 0x2 0xa0
0x60c: V651 = SUB 0x10000000000000000000000000000000000000000 0x1
0x60d: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V646
0x60f: V653 = 0x70a08231
0x615: V654 = ADDRESS
0x617: V655 = 0x40
0x619: V656 = M[0x40]
0x61a: V657 = 0x20
0x61c: V658 = ADD 0x20 V656
0x61d: M[V658] = 0x0
0x61e: V659 = 0x40
0x620: V660 = M[0x40]
0x621: V661 = 0xe0
0x623: V662 = 0x2
0x625: V663 = EXP 0x2 0xe0
0x626: V664 = 0xffffffff
0x62c: V665 = AND 0x70a08231 0xffffffff
0x62d: V666 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x62f: M[V660] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x630: V667 = 0x1
0x632: V668 = 0xa0
0x634: V669 = 0x2
0x636: V670 = EXP 0x2 0xa0
0x637: V671 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63a: V672 = AND V654 0xffffffffffffffffffffffffffffffffffffffff
0x63b: V673 = 0x4
0x63e: V674 = ADD V660 0x4
0x63f: M[V674] = V672
0x640: V675 = 0x24
0x642: V676 = ADD 0x24 V660
0x643: V677 = 0x20
0x645: V678 = 0x40
0x647: V679 = M[0x40]
0x64a: V680 = SUB V676 V679
0x64c: V681 = 0x0
0x650: V682 = EXTCODESIZE V652
0x651: V683 = ISZERO V682
0x652: V684 = ISZERO V683
0x653: V685 = 0x65b
0x656: JUMPI 0x65b V684
---
Entry stack: [V12, V375, V413, V546]
Stack pops: 0
Stack additions: [V652, 0x70a08231, V676, 0x20, V679, V680, V679, 0x0, V652]
Exit stack: [V12, V375, V413, V546, V652, 0x70a08231, V676, 0x20, V679, V680, V679, 0x0, V652]

================================

Block 0x657
[0x657:0x65a]
---
Predecessors: [0x5f4]
Successors: []
---
0x657 PUSH1 0x0
0x659 DUP1
0x65a REVERT
---
0x657: V686 = 0x0
0x65a: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, V546, V652, 0x70a08231, V676, 0x20, V679, V680, V679, 0x0, V652]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, V546, V652, 0x70a08231, V676, 0x20, V679, V680, V679, 0x0, V652]

================================

Block 0x65b
[0x65b:0x667]
---
Predecessors: [0x5f4]
Successors: [0x668, 0x66c]
---
0x65b JUMPDEST
0x65c PUSH2 0x2c6
0x65f GAS
0x660 SUB
0x661 CALL
0x662 ISZERO
0x663 ISZERO
0x664 PUSH2 0x66c
0x667 JUMPI
---
0x65b: JUMPDEST 
0x65c: V687 = 0x2c6
0x65f: V688 = GAS
0x660: V689 = SUB V688 0x2c6
0x661: V690 = CALL V689 V652 0x0 V679 V680 V679 0x20
0x662: V691 = ISZERO V690
0x663: V692 = ISZERO V691
0x664: V693 = 0x66c
0x667: JUMPI 0x66c V692
---
Entry stack: [V12, V375, V413, V546, V652, 0x70a08231, V676, 0x20, V679, V680, V679, 0x0, V652]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V375, V413, V546, V652, 0x70a08231, V676]

================================

Block 0x668
[0x668:0x66b]
---
Predecessors: [0x65b]
Successors: []
---
0x668 PUSH1 0x0
0x66a DUP1
0x66b REVERT
---
0x668: V694 = 0x0
0x66b: REVERT 0x0 0x0
---
Entry stack: [V12, V375, V413, V546, V652, 0x70a08231, V676]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V375, V413, V546, V652, 0x70a08231, V676]

================================

Block 0x66c
[0x66c:0x685]
---
Predecessors: [0x65b]
Successors: [0x686]
---
0x66c JUMPDEST
0x66d POP
0x66e POP
0x66f POP
0x670 PUSH1 0x40
0x672 MLOAD
0x673 DUP1
0x674 MLOAD
0x675 PUSH1 0x7
0x677 SSTORE
0x678 POP
0x679 PUSH1 0x8
0x67b DUP1
0x67c SLOAD
0x67d PUSH1 0xff
0x67f NOT
0x680 AND
0x681 PUSH1 0x1
0x683 OR
0x684 SWAP1
0x685 SSTORE
---
0x66c: JUMPDEST 
0x670: V695 = 0x40
0x672: V696 = M[0x40]
0x674: V697 = M[V696]
0x675: V698 = 0x7
0x677: S[0x7] = V697
0x679: V699 = 0x8
0x67c: V700 = S[0x8]
0x67d: V701 = 0xff
0x67f: V702 = NOT 0xff
0x680: V703 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V700
0x681: V704 = 0x1
0x683: V705 = OR 0x1 V703
0x685: S[0x8] = V705
---
Entry stack: [V12, V375, V413, V546, V652, 0x70a08231, V676]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V375, V413, V546]

================================

Block 0x686
[0x686:0x686]
---
Predecessors: [0x16c, 0x33a, 0x37c, 0x4fe, 0x66c]
Successors: [0x687]
---
0x686 JUMPDEST
---
0x686: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x687
[0x687:0x687]
---
Predecessors: [0x686]
Successors: [0x688]
---
0x687 JUMPDEST
---
0x687: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x688
[0x688:0x688]
---
Predecessors: [0x687]
Successors: [0x689]
---
0x688 JUMPDEST
---
0x688: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x689
[0x689:0x6f9]
---
Predecessors: [0x688]
Successors: [0x6fa]
---
0x689 JUMPDEST
0x68a PUSH32 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6ab PUSH1 0x7
0x6ad SLOAD
0x6ae PUSH1 0x40
0x6b0 MLOAD
0x6b1 SWAP1
0x6b2 DUP2
0x6b3 MSTORE
0x6b4 PUSH1 0x20
0x6b6 ADD
0x6b7 PUSH1 0x40
0x6b9 MLOAD
0x6ba DUP1
0x6bb SWAP2
0x6bc SUB
0x6bd SWAP1
0x6be LOG1
0x6bf PUSH1 0x8
0x6c1 SLOAD
0x6c2 PUSH32 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x6e3 SWAP1
0x6e4 PUSH1 0xff
0x6e6 AND
0x6e7 PUSH1 0x40
0x6e9 MLOAD
0x6ea SWAP1
0x6eb ISZERO
0x6ec ISZERO
0x6ed DUP2
0x6ee MSTORE
0x6ef PUSH1 0x20
0x6f1 ADD
0x6f2 PUSH1 0x40
0x6f4 MLOAD
0x6f5 DUP1
0x6f6 SWAP2
0x6f7 SUB
0x6f8 SWAP1
0x6f9 LOG1
---
0x689: JUMPDEST 
0x68a: V706 = 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6ab: V707 = 0x7
0x6ad: V708 = S[0x7]
0x6ae: V709 = 0x40
0x6b0: V710 = M[0x40]
0x6b3: M[V710] = V708
0x6b4: V711 = 0x20
0x6b6: V712 = ADD 0x20 V710
0x6b7: V713 = 0x40
0x6b9: V714 = M[0x40]
0x6bc: V715 = SUB V712 V714
0x6be: LOG V714 V715 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6bf: V716 = 0x8
0x6c1: V717 = S[0x8]
0x6c2: V718 = 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x6e4: V719 = 0xff
0x6e6: V720 = AND 0xff V717
0x6e7: V721 = 0x40
0x6e9: V722 = M[0x40]
0x6eb: V723 = ISZERO V720
0x6ec: V724 = ISZERO V723
0x6ee: M[V722] = V724
0x6ef: V725 = 0x20
0x6f1: V726 = ADD 0x20 V722
0x6f2: V727 = 0x40
0x6f4: V728 = M[0x40]
0x6f7: V729 = SUB V726 V728
0x6f9: LOG V728 V729 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x6fa
[0x6fa:0x6fe]
---
Predecessors: [0x689]
Successors: []
---
0x6fa JUMPDEST
0x6fb POP
0x6fc POP
0x6fd POP
0x6fe STOP
---
0x6fa: JUMPDEST 
0x6fe: STOP 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x6ff
[0x6ff:0x705]
---
Predecessors: [0xb]
Successors: [0x706, 0x70a]
---
0x6ff JUMPDEST
0x700 CALLVALUE
0x701 ISZERO
0x702 PUSH2 0x70a
0x705 JUMPI
---
0x6ff: JUMPDEST 
0x700: V730 = CALLVALUE
0x701: V731 = ISZERO V730
0x702: V732 = 0x70a
0x705: JUMPI 0x70a V731
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x706
[0x706:0x709]
---
Predecessors: [0x6ff]
Successors: []
---
0x706 PUSH1 0x0
0x708 DUP1
0x709 REVERT
---
0x706: V733 = 0x0
0x709: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x70a
[0x70a:0x711]
---
Predecessors: [0x6ff]
Successors: [0x864]
---
0x70a JUMPDEST
0x70b PUSH2 0x712
0x70e PUSH2 0x864
0x711 JUMP
---
0x70a: JUMPDEST 
0x70b: V734 = 0x712
0x70e: V735 = 0x864
0x711: JUMP 0x864
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x712]
Exit stack: [V12, 0x712]

================================

Block 0x712
[0x712:0x72d]
---
Predecessors: [0x864, 0x88d]
Successors: []
---
0x712 JUMPDEST
0x713 PUSH1 0x40
0x715 MLOAD
0x716 PUSH1 0x1
0x718 PUSH1 0xa0
0x71a PUSH1 0x2
0x71c EXP
0x71d SUB
0x71e SWAP1
0x71f SWAP2
0x720 AND
0x721 DUP2
0x722 MSTORE
0x723 PUSH1 0x20
0x725 ADD
0x726 PUSH1 0x40
0x728 MLOAD
0x729 DUP1
0x72a SWAP2
0x72b SUB
0x72c SWAP1
0x72d RETURN
---
0x712: JUMPDEST 
0x713: V736 = 0x40
0x715: V737 = M[0x40]
0x716: V738 = 0x1
0x718: V739 = 0xa0
0x71a: V740 = 0x2
0x71c: V741 = EXP 0x2 0xa0
0x71d: V742 = SUB 0x10000000000000000000000000000000000000000 0x1
0x720: V743 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x722: M[V737] = V743
0x723: V744 = 0x20
0x725: V745 = ADD 0x20 V737
0x726: V746 = 0x40
0x728: V747 = M[0x40]
0x72b: V748 = SUB V745 V747
0x72d: RETURN V747 V748
---
Entry stack: [V12, 0x712, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x712]

================================

Block 0x72e
[0x72e:0x734]
---
Predecessors: [0x25]
Successors: [0x735, 0x739]
---
0x72e JUMPDEST
0x72f CALLVALUE
0x730 ISZERO
0x731 PUSH2 0x739
0x734 JUMPI
---
0x72e: JUMPDEST 
0x72f: V749 = CALLVALUE
0x730: V750 = ISZERO V749
0x731: V751 = 0x739
0x734: JUMPI 0x739 V750
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x735
[0x735:0x738]
---
Predecessors: [0x72e]
Successors: []
---
0x735 PUSH1 0x0
0x737 DUP1
0x738 REVERT
---
0x735: V752 = 0x0
0x738: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x739
[0x739:0x740]
---
Predecessors: [0x72e]
Successors: [0x873]
---
0x739 JUMPDEST
0x73a PUSH2 0x741
0x73d PUSH2 0x873
0x740 JUMP
---
0x739: JUMPDEST 
0x73a: V753 = 0x741
0x73d: V754 = 0x873
0x740: JUMP 0x873
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x741]
Exit stack: [V12, 0x741]

================================

Block 0x741
[0x741:0x754]
---
Predecessors: [0x873, 0x8ae]
Successors: []
---
0x741 JUMPDEST
0x742 PUSH1 0x40
0x744 MLOAD
0x745 SWAP1
0x746 ISZERO
0x747 ISZERO
0x748 DUP2
0x749 MSTORE
0x74a PUSH1 0x20
0x74c ADD
0x74d PUSH1 0x40
0x74f MLOAD
0x750 DUP1
0x751 SWAP2
0x752 SUB
0x753 SWAP1
0x754 RETURN
---
0x741: JUMPDEST 
0x742: V755 = 0x40
0x744: V756 = M[0x40]
0x746: V757 = ISZERO S0
0x747: V758 = ISZERO V757
0x749: M[V756] = V758
0x74a: V759 = 0x20
0x74c: V760 = ADD 0x20 V756
0x74d: V761 = 0x40
0x74f: V762 = M[0x40]
0x752: V763 = SUB V760 V762
0x754: RETURN V762 V763
---
Entry stack: [V12, 0x741, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x741]

================================

Block 0x755
[0x755:0x75b]
---
Predecessors: [0x30]
Successors: [0x75c, 0x760]
---
0x755 JUMPDEST
0x756 CALLVALUE
0x757 ISZERO
0x758 PUSH2 0x760
0x75b JUMPI
---
0x755: JUMPDEST 
0x756: V764 = CALLVALUE
0x757: V765 = ISZERO V764
0x758: V766 = 0x760
0x75b: JUMPI 0x760 V765
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x75c
[0x75c:0x75f]
---
Predecessors: [0x755]
Successors: []
---
0x75c PUSH1 0x0
0x75e DUP1
0x75f REVERT
---
0x75c: V767 = 0x0
0x75f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x760
[0x760:0x767]
---
Predecessors: [0x755]
Successors: [0x881]
---
0x760 JUMPDEST
0x761 PUSH2 0x768
0x764 PUSH2 0x881
0x767 JUMP
---
0x760: JUMPDEST 
0x761: V768 = 0x768
0x764: V769 = 0x881
0x767: JUMP 0x881
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x768]
Exit stack: [V12, 0x768]

================================

Block 0x768
[0x768:0x779]
---
Predecessors: [0x881, 0x887, 0x89c, 0x8a2, 0x8a8]
Successors: []
---
0x768 JUMPDEST
0x769 PUSH1 0x40
0x76b MLOAD
0x76c SWAP1
0x76d DUP2
0x76e MSTORE
0x76f PUSH1 0x20
0x771 ADD
0x772 PUSH1 0x40
0x774 MLOAD
0x775 DUP1
0x776 SWAP2
0x777 SUB
0x778 SWAP1
0x779 RETURN
---
0x768: JUMPDEST 
0x769: V770 = 0x40
0x76b: V771 = M[0x40]
0x76e: M[V771] = S0
0x76f: V772 = 0x20
0x771: V773 = ADD 0x20 V771
0x772: V774 = 0x40
0x774: V775 = M[0x40]
0x777: V776 = SUB V773 V775
0x779: RETURN V775 V776
---
Entry stack: [V12, 0x768, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x768]

================================

Block 0x77a
[0x77a:0x780]
---
Predecessors: [0x3b]
Successors: [0x781, 0x785]
---
0x77a JUMPDEST
0x77b CALLVALUE
0x77c ISZERO
0x77d PUSH2 0x785
0x780 JUMPI
---
0x77a: JUMPDEST 
0x77b: V777 = CALLVALUE
0x77c: V778 = ISZERO V777
0x77d: V779 = 0x785
0x780: JUMPI 0x785 V778
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x781
[0x781:0x784]
---
Predecessors: [0x77a]
Successors: []
---
0x781 PUSH1 0x0
0x783 DUP1
0x784 REVERT
---
0x781: V780 = 0x0
0x784: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x785
[0x785:0x78c]
---
Predecessors: [0x77a]
Successors: [0x887]
---
0x785 JUMPDEST
0x786 PUSH2 0x768
0x789 PUSH2 0x887
0x78c JUMP
---
0x785: JUMPDEST 
0x786: V781 = 0x768
0x789: V782 = 0x887
0x78c: JUMP 0x887
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x768]
Exit stack: [V12, 0x768]

================================

Block 0x78d
[0x78d:0x79e]
---
Predecessors: []
Successors: []
---
0x78d JUMPDEST
0x78e PUSH1 0x40
0x790 MLOAD
0x791 SWAP1
0x792 DUP2
0x793 MSTORE
0x794 PUSH1 0x20
0x796 ADD
0x797 PUSH1 0x40
0x799 MLOAD
0x79a DUP1
0x79b SWAP2
0x79c SUB
0x79d SWAP1
0x79e RETURN
---
0x78d: JUMPDEST 
0x78e: V783 = 0x40
0x790: V784 = M[0x40]
0x793: M[V784] = S0
0x794: V785 = 0x20
0x796: V786 = ADD 0x20 V784
0x797: V787 = 0x40
0x799: V788 = M[0x40]
0x79c: V789 = SUB V786 V788
0x79e: RETURN V788 V789
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x79f
[0x79f:0x7a5]
---
Predecessors: [0x46]
Successors: [0x7a6, 0x7aa]
---
0x79f JUMPDEST
0x7a0 CALLVALUE
0x7a1 ISZERO
0x7a2 PUSH2 0x7aa
0x7a5 JUMPI
---
0x79f: JUMPDEST 
0x7a0: V790 = CALLVALUE
0x7a1: V791 = ISZERO V790
0x7a2: V792 = 0x7aa
0x7a5: JUMPI 0x7aa V791
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7a6
[0x7a6:0x7a9]
---
Predecessors: [0x79f]
Successors: []
---
0x7a6 PUSH1 0x0
0x7a8 DUP1
0x7a9 REVERT
---
0x7a6: V793 = 0x0
0x7a9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7aa
[0x7aa:0x7b1]
---
Predecessors: [0x79f]
Successors: [0x88d]
---
0x7aa JUMPDEST
0x7ab PUSH2 0x712
0x7ae PUSH2 0x88d
0x7b1 JUMP
---
0x7aa: JUMPDEST 
0x7ab: V794 = 0x712
0x7ae: V795 = 0x88d
0x7b1: JUMP 0x88d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x712]
Exit stack: [V12, 0x712]

================================

Block 0x7b2
[0x7b2:0x7cd]
---
Predecessors: []
Successors: []
---
0x7b2 JUMPDEST
0x7b3 PUSH1 0x40
0x7b5 MLOAD
0x7b6 PUSH1 0x1
0x7b8 PUSH1 0xa0
0x7ba PUSH1 0x2
0x7bc EXP
0x7bd SUB
0x7be SWAP1
0x7bf SWAP2
0x7c0 AND
0x7c1 DUP2
0x7c2 MSTORE
0x7c3 PUSH1 0x20
0x7c5 ADD
0x7c6 PUSH1 0x40
0x7c8 MLOAD
0x7c9 DUP1
0x7ca SWAP2
0x7cb SUB
0x7cc SWAP1
0x7cd RETURN
---
0x7b2: JUMPDEST 
0x7b3: V796 = 0x40
0x7b5: V797 = M[0x40]
0x7b6: V798 = 0x1
0x7b8: V799 = 0xa0
0x7ba: V800 = 0x2
0x7bc: V801 = EXP 0x2 0xa0
0x7bd: V802 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c0: V803 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x7c2: M[V797] = V803
0x7c3: V804 = 0x20
0x7c5: V805 = ADD 0x20 V797
0x7c6: V806 = 0x40
0x7c8: V807 = M[0x40]
0x7cb: V808 = SUB V805 V807
0x7cd: RETURN V807 V808
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7ce
[0x7ce:0x7d4]
---
Predecessors: [0x51]
Successors: [0x7d5, 0x7d9]
---
0x7ce JUMPDEST
0x7cf CALLVALUE
0x7d0 ISZERO
0x7d1 PUSH2 0x7d9
0x7d4 JUMPI
---
0x7ce: JUMPDEST 
0x7cf: V809 = CALLVALUE
0x7d0: V810 = ISZERO V809
0x7d1: V811 = 0x7d9
0x7d4: JUMPI 0x7d9 V810
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d5
[0x7d5:0x7d8]
---
Predecessors: [0x7ce]
Successors: []
---
0x7d5 PUSH1 0x0
0x7d7 DUP1
0x7d8 REVERT
---
0x7d5: V812 = 0x0
0x7d8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d9
[0x7d9:0x7e0]
---
Predecessors: [0x7ce]
Successors: [0x89c]
---
0x7d9 JUMPDEST
0x7da PUSH2 0x768
0x7dd PUSH2 0x89c
0x7e0 JUMP
---
0x7d9: JUMPDEST 
0x7da: V813 = 0x768
0x7dd: V814 = 0x89c
0x7e0: JUMP 0x89c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x768]
Exit stack: [V12, 0x768]

================================

Block 0x7e1
[0x7e1:0x7f2]
---
Predecessors: []
Successors: []
---
0x7e1 JUMPDEST
0x7e2 PUSH1 0x40
0x7e4 MLOAD
0x7e5 SWAP1
0x7e6 DUP2
0x7e7 MSTORE
0x7e8 PUSH1 0x20
0x7ea ADD
0x7eb PUSH1 0x40
0x7ed MLOAD
0x7ee DUP1
0x7ef SWAP2
0x7f0 SUB
0x7f1 SWAP1
0x7f2 RETURN
---
0x7e1: JUMPDEST 
0x7e2: V815 = 0x40
0x7e4: V816 = M[0x40]
0x7e7: M[V816] = S0
0x7e8: V817 = 0x20
0x7ea: V818 = ADD 0x20 V816
0x7eb: V819 = 0x40
0x7ed: V820 = M[0x40]
0x7f0: V821 = SUB V818 V820
0x7f2: RETURN V820 V821
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7f3
[0x7f3:0x7f9]
---
Predecessors: [0x5c]
Successors: [0x7fa, 0x7fe]
---
0x7f3 JUMPDEST
0x7f4 CALLVALUE
0x7f5 ISZERO
0x7f6 PUSH2 0x7fe
0x7f9 JUMPI
---
0x7f3: JUMPDEST 
0x7f4: V822 = CALLVALUE
0x7f5: V823 = ISZERO V822
0x7f6: V824 = 0x7fe
0x7f9: JUMPI 0x7fe V823
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7fa
[0x7fa:0x7fd]
---
Predecessors: [0x7f3]
Successors: []
---
0x7fa PUSH1 0x0
0x7fc DUP1
0x7fd REVERT
---
0x7fa: V825 = 0x0
0x7fd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7fe
[0x7fe:0x805]
---
Predecessors: [0x7f3]
Successors: [0x8a2]
---
0x7fe JUMPDEST
0x7ff PUSH2 0x768
0x802 PUSH2 0x8a2
0x805 JUMP
---
0x7fe: JUMPDEST 
0x7ff: V826 = 0x768
0x802: V827 = 0x8a2
0x805: JUMP 0x8a2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x768]
Exit stack: [V12, 0x768]

================================

Block 0x806
[0x806:0x817]
---
Predecessors: []
Successors: []
---
0x806 JUMPDEST
0x807 PUSH1 0x40
0x809 MLOAD
0x80a SWAP1
0x80b DUP2
0x80c MSTORE
0x80d PUSH1 0x20
0x80f ADD
0x810 PUSH1 0x40
0x812 MLOAD
0x813 DUP1
0x814 SWAP2
0x815 SUB
0x816 SWAP1
0x817 RETURN
---
0x806: JUMPDEST 
0x807: V828 = 0x40
0x809: V829 = M[0x40]
0x80c: M[V829] = S0
0x80d: V830 = 0x20
0x80f: V831 = ADD 0x20 V829
0x810: V832 = 0x40
0x812: V833 = M[0x40]
0x815: V834 = SUB V831 V833
0x817: RETURN V833 V834
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x818
[0x818:0x81e]
---
Predecessors: [0x67]
Successors: [0x81f, 0x823]
---
0x818 JUMPDEST
0x819 CALLVALUE
0x81a ISZERO
0x81b PUSH2 0x823
0x81e JUMPI
---
0x818: JUMPDEST 
0x819: V835 = CALLVALUE
0x81a: V836 = ISZERO V835
0x81b: V837 = 0x823
0x81e: JUMPI 0x823 V836
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81f
[0x81f:0x822]
---
Predecessors: [0x818]
Successors: []
---
0x81f PUSH1 0x0
0x821 DUP1
0x822 REVERT
---
0x81f: V838 = 0x0
0x822: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x823
[0x823:0x82a]
---
Predecessors: [0x818]
Successors: [0x8a8]
---
0x823 JUMPDEST
0x824 PUSH2 0x768
0x827 PUSH2 0x8a8
0x82a JUMP
---
0x823: JUMPDEST 
0x824: V839 = 0x768
0x827: V840 = 0x8a8
0x82a: JUMP 0x8a8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x768]
Exit stack: [V12, 0x768]

================================

Block 0x82b
[0x82b:0x83c]
---
Predecessors: []
Successors: []
---
0x82b JUMPDEST
0x82c PUSH1 0x40
0x82e MLOAD
0x82f SWAP1
0x830 DUP2
0x831 MSTORE
0x832 PUSH1 0x20
0x834 ADD
0x835 PUSH1 0x40
0x837 MLOAD
0x838 DUP1
0x839 SWAP2
0x83a SUB
0x83b SWAP1
0x83c RETURN
---
0x82b: JUMPDEST 
0x82c: V841 = 0x40
0x82e: V842 = M[0x40]
0x831: M[V842] = S0
0x832: V843 = 0x20
0x834: V844 = ADD 0x20 V842
0x835: V845 = 0x40
0x837: V846 = M[0x40]
0x83a: V847 = SUB V844 V846
0x83c: RETURN V846 V847
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x83d
[0x83d:0x843]
---
Predecessors: [0x72]
Successors: [0x844, 0x848]
---
0x83d JUMPDEST
0x83e CALLVALUE
0x83f ISZERO
0x840 PUSH2 0x848
0x843 JUMPI
---
0x83d: JUMPDEST 
0x83e: V848 = CALLVALUE
0x83f: V849 = ISZERO V848
0x840: V850 = 0x848
0x843: JUMPI 0x848 V849
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x844
[0x844:0x847]
---
Predecessors: [0x83d]
Successors: []
---
0x844 PUSH1 0x0
0x846 DUP1
0x847 REVERT
---
0x844: V851 = 0x0
0x847: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x848
[0x848:0x84f]
---
Predecessors: [0x83d]
Successors: [0x8ae]
---
0x848 JUMPDEST
0x849 PUSH2 0x741
0x84c PUSH2 0x8ae
0x84f JUMP
---
0x848: JUMPDEST 
0x849: V852 = 0x741
0x84c: V853 = 0x8ae
0x84f: JUMP 0x8ae
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x741]
Exit stack: [V12, 0x741]

================================

Block 0x850
[0x850:0x863]
---
Predecessors: []
Successors: []
---
0x850 JUMPDEST
0x851 PUSH1 0x40
0x853 MLOAD
0x854 SWAP1
0x855 ISZERO
0x856 ISZERO
0x857 DUP2
0x858 MSTORE
0x859 PUSH1 0x20
0x85b ADD
0x85c PUSH1 0x40
0x85e MLOAD
0x85f DUP1
0x860 SWAP2
0x861 SUB
0x862 SWAP1
0x863 RETURN
---
0x850: JUMPDEST 
0x851: V854 = 0x40
0x853: V855 = M[0x40]
0x855: V856 = ISZERO S0
0x856: V857 = ISZERO V856
0x858: M[V855] = V857
0x859: V858 = 0x20
0x85b: V859 = ADD 0x20 V855
0x85c: V860 = 0x40
0x85e: V861 = M[0x40]
0x861: V862 = SUB V859 V861
0x863: RETURN V861 V862
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x864
[0x864:0x872]
---
Predecessors: [0x70a]
Successors: [0x712]
---
0x864 JUMPDEST
0x865 PUSH1 0x0
0x867 SLOAD
0x868 PUSH1 0x1
0x86a PUSH1 0xa0
0x86c PUSH1 0x2
0x86e EXP
0x86f SUB
0x870 AND
0x871 DUP2
0x872 JUMP
---
0x864: JUMPDEST 
0x865: V863 = 0x0
0x867: V864 = S[0x0]
0x868: V865 = 0x1
0x86a: V866 = 0xa0
0x86c: V867 = 0x2
0x86e: V868 = EXP 0x2 0xa0
0x86f: V869 = SUB 0x10000000000000000000000000000000000000000 0x1
0x870: V870 = AND 0xffffffffffffffffffffffffffffffffffffffff V864
0x872: JUMP 0x712
---
Entry stack: [V12, 0x712]
Stack pops: 1
Stack additions: [S0, V870]
Exit stack: [V12, 0x712, V870]

================================

Block 0x873
[0x873:0x880]
---
Predecessors: [0x739]
Successors: [0x741]
---
0x873 JUMPDEST
0x874 PUSH1 0x8
0x876 SLOAD
0x877 PUSH2 0x100
0x87a SWAP1
0x87b DIV
0x87c PUSH1 0xff
0x87e AND
0x87f DUP2
0x880 JUMP
---
0x873: JUMPDEST 
0x874: V871 = 0x8
0x876: V872 = S[0x8]
0x877: V873 = 0x100
0x87b: V874 = DIV V872 0x100
0x87c: V875 = 0xff
0x87e: V876 = AND 0xff V874
0x880: JUMP 0x741
---
Entry stack: [V12, 0x741]
Stack pops: 1
Stack additions: [S0, V876]
Exit stack: [V12, 0x741, V876]

================================

Block 0x881
[0x881:0x886]
---
Predecessors: [0x760]
Successors: [0x768]
---
0x881 JUMPDEST
0x882 PUSH1 0x6
0x884 SLOAD
0x885 DUP2
0x886 JUMP
---
0x881: JUMPDEST 
0x882: V877 = 0x6
0x884: V878 = S[0x6]
0x886: JUMP 0x768
---
Entry stack: [V12, 0x768]
Stack pops: 1
Stack additions: [S0, V878]
Exit stack: [V12, 0x768, V878]

================================

Block 0x887
[0x887:0x88c]
---
Predecessors: [0x785]
Successors: [0x768]
---
0x887 JUMPDEST
0x888 PUSH1 0x2
0x88a SLOAD
0x88b DUP2
0x88c JUMP
---
0x887: JUMPDEST 
0x888: V879 = 0x2
0x88a: V880 = S[0x2]
0x88c: JUMP 0x768
---
Entry stack: [V12, 0x768]
Stack pops: 1
Stack additions: [S0, V880]
Exit stack: [V12, 0x768, V880]

================================

Block 0x88d
[0x88d:0x89b]
---
Predecessors: [0x7aa]
Successors: [0x712]
---
0x88d JUMPDEST
0x88e PUSH1 0x1
0x890 SLOAD
0x891 PUSH1 0x1
0x893 PUSH1 0xa0
0x895 PUSH1 0x2
0x897 EXP
0x898 SUB
0x899 AND
0x89a DUP2
0x89b JUMP
---
0x88d: JUMPDEST 
0x88e: V881 = 0x1
0x890: V882 = S[0x1]
0x891: V883 = 0x1
0x893: V884 = 0xa0
0x895: V885 = 0x2
0x897: V886 = EXP 0x2 0xa0
0x898: V887 = SUB 0x10000000000000000000000000000000000000000 0x1
0x899: V888 = AND 0xffffffffffffffffffffffffffffffffffffffff V882
0x89b: JUMP 0x712
---
Entry stack: [V12, 0x712]
Stack pops: 1
Stack additions: [S0, V888]
Exit stack: [V12, 0x712, V888]

================================

Block 0x89c
[0x89c:0x8a1]
---
Predecessors: [0x7d9]
Successors: [0x768]
---
0x89c JUMPDEST
0x89d PUSH1 0x7
0x89f SLOAD
0x8a0 DUP2
0x8a1 JUMP
---
0x89c: JUMPDEST 
0x89d: V889 = 0x7
0x89f: V890 = S[0x7]
0x8a1: JUMP 0x768
---
Entry stack: [V12, 0x768]
Stack pops: 1
Stack additions: [S0, V890]
Exit stack: [V12, 0x768, V890]

================================

Block 0x8a2
[0x8a2:0x8a7]
---
Predecessors: [0x7fe]
Successors: [0x768]
---
0x8a2 JUMPDEST
0x8a3 PUSH1 0x4
0x8a5 SLOAD
0x8a6 DUP2
0x8a7 JUMP
---
0x8a2: JUMPDEST 
0x8a3: V891 = 0x4
0x8a5: V892 = S[0x4]
0x8a7: JUMP 0x768
---
Entry stack: [V12, 0x768]
Stack pops: 1
Stack additions: [S0, V892]
Exit stack: [V12, 0x768, V892]

================================

Block 0x8a8
[0x8a8:0x8ad]
---
Predecessors: [0x823]
Successors: [0x768]
---
0x8a8 JUMPDEST
0x8a9 PUSH1 0x3
0x8ab SLOAD
0x8ac DUP2
0x8ad JUMP
---
0x8a8: JUMPDEST 
0x8a9: V893 = 0x3
0x8ab: V894 = S[0x3]
0x8ad: JUMP 0x768
---
Entry stack: [V12, 0x768]
Stack pops: 1
Stack additions: [S0, V894]
Exit stack: [V12, 0x768, V894]

================================

Block 0x8ae
[0x8ae:0x8b6]
---
Predecessors: [0x848]
Successors: [0x741]
---
0x8ae JUMPDEST
0x8af PUSH1 0x8
0x8b1 SLOAD
0x8b2 PUSH1 0xff
0x8b4 AND
0x8b5 DUP2
0x8b6 JUMP
---
0x8ae: JUMPDEST 
0x8af: V895 = 0x8
0x8b1: V896 = S[0x8]
0x8b2: V897 = 0xff
0x8b4: V898 = AND 0xff V896
0x8b6: JUMP 0x741
---
Entry stack: [V12, 0x741]
Stack pops: 1
Stack additions: [S0, V898]
Exit stack: [V12, 0x741, V898]

================================

Block 0x8b7
[0x8b7:0x8e9]
---
Predecessors: []
Successors: []
---
0x8b7 STOP
0x8b8 LOG1
0x8b9 PUSH6 0x627a7a723058
0x8c0 SHA3
0x8c1 SWAP9
0x8c2 MISSING 0xc
0x8c3 MISSING 0xd2
0x8c4 DUP2
0x8c5 CALLER
0x8c6 MISSING 0x21
0x8c7 PUSH15 0xa6ce139c7e193e81d3c12c35665be1
0x8d7 MISSING 0xa6
0x8d8 TIMESTAMP
0x8d9 PUSH16 0xf4f5dc80962c9a0029
---
0x8b7: STOP 
0x8b8: LOG S0 S1 S2
0x8b9: V899 = 0x627a7a723058
0x8c0: V900 = SHA3 0x627a7a723058 S3
0x8c2: MISSING 0xc
0x8c3: MISSING 0xd2
0x8c5: V901 = CALLER
0x8c6: MISSING 0x21
0x8c7: V902 = 0xa6ce139c7e193e81d3c12c35665be1
0x8d7: MISSING 0xa6
0x8d8: V903 = TIMESTAMP
0x8d9: V904 = 0xf4f5dc80962c9a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S12, S4, S5, S6, S7, S8, S9, S10, S11, V900, V901, S1, S0, S1, 0xa6ce139c7e193e81d3c12c35665be1, 0xf4f5dc80962c9a0029, V903]
Exit stack: []

================================

Function 0:
Public function signature: 0x27ebcf0e
Entry block: 0x6ff
Exit block: 0x712
Body: 0x6ff, 0x706, 0x70a, 0x712, 0x864

Function 1:
Public function signature: 0x30c74e04
Entry block: 0x72e
Exit block: 0x741
Body: 0x72e, 0x735, 0x739, 0x741, 0x873

Function 2:
Public function signature: 0x519ee19e
Entry block: 0x755
Exit block: 0x768
Body: 0x755, 0x75c, 0x760, 0x768, 0x881

Function 3:
Public function signature: 0x7fa8c158
Entry block: 0x77a
Exit block: 0x768
Body: 0x768, 0x77a, 0x781, 0x785, 0x887

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x79f
Exit block: 0x712
Body: 0x712, 0x79f, 0x7a6, 0x7aa, 0x88d

Function 5:
Public function signature: 0x96c5406d
Entry block: 0x7ce
Exit block: 0x768
Body: 0x768, 0x7ce, 0x7d5, 0x7d9, 0x89c

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x7f3
Exit block: 0x768
Body: 0x768, 0x7f3, 0x7fa, 0x7fe, 0x8a2

Function 7:
Public function signature: 0xc8e569a8
Entry block: 0x818
Exit block: 0x768
Body: 0x768, 0x818, 0x81f, 0x823, 0x8a8

Function 8:
Public function signature: 0xccb07cef
Entry block: 0x83d
Exit block: 0x741
Body: 0x741, 0x83d, 0x844, 0x848, 0x8ae

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x668
Body: 0x7d, 0x7e, 0x90, 0x9f, 0xac, 0xb7, 0xb8, 0x10f, 0x113, 0x120, 0x124, 0x13b, 0x168, 0x16c, 0x171, 0x17c, 0x1a9, 0x1ad, 0x1bf, 0x233, 0x237, 0x244, 0x248, 0x291, 0x295, 0x2a2, 0x2a6, 0x300, 0x304, 0x311, 0x315, 0x33a, 0x33f, 0x34b, 0x378, 0x381, 0x390, 0x391, 0x39e, 0x3cb, 0x3cf, 0x3d0, 0x3d9, 0x3dd, 0x3ed, 0x3ee, 0x3fd, 0x42b, 0x42f, 0x438, 0x468, 0x46c, 0x46d, 0x4bf, 0x4c3, 0x4d0, 0x4d4, 0x4f1, 0x4fe, 0x503, 0x515, 0x516, 0x54a, 0x54e, 0x5a7, 0x5ab, 0x5b8, 0x5bc, 0x5f0, 0x5f4, 0x657, 0x65b, 0x668, 0x66c, 0x686, 0x687, 0x688, 0x689, 0x6fa

