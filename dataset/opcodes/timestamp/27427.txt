Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x67]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x67
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x67
0xa: JUMPI 0x67 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x70]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x41c0e1b5
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x70
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x41c0e1b5
0x20: V14 = EQ V12 0x41c0e1b5
0x21: V15 = 0x70
0x24: JUMPI 0x70 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x85]
---
0x25 DUP1
0x26 PUSH4 0x4665096d
0x2b EQ
0x2c PUSH2 0x85
0x2f JUMPI
---
0x26: V16 = 0x4665096d
0x2b: V17 = EQ 0x4665096d V12
0x2c: V18 = 0x85
0x2f: JUMPI 0x85 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xaa]
---
0x30 DUP1
0x31 PUSH4 0x842fc1a3
0x36 EQ
0x37 PUSH2 0xaa
0x3a JUMPI
---
0x31: V19 = 0x842fc1a3
0x36: V20 = EQ 0x842fc1a3 V12
0x37: V21 = 0xaa
0x3a: JUMPI 0xaa V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xcb]
---
0x3b DUP1
0x3c PUSH4 0x8da5cb5b
0x41 EQ
0x42 PUSH2 0xcb
0x45 JUMPI
---
0x3c: V22 = 0x8da5cb5b
0x41: V23 = EQ 0x8da5cb5b V12
0x42: V24 = 0xcb
0x45: JUMPI 0xcb V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0xfa]
---
0x46 DUP1
0x47 PUSH4 0xb60d4288
0x4c EQ
0x4d PUSH2 0xfa
0x50 JUMPI
---
0x47: V25 = 0xb60d4288
0x4c: V26 = EQ 0xb60d4288 V12
0x4d: V27 = 0xfa
0x50: JUMPI 0xfa V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x116]
---
0x51 DUP1
0x52 PUSH4 0xdd467064
0x57 EQ
0x58 PUSH2 0x116
0x5b JUMPI
---
0x52: V28 = 0xdd467064
0x57: V29 = EQ 0xdd467064 V12
0x58: V30 = 0x116
0x5b: JUMPI 0x116 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x140]
---
0x5c DUP1
0x5d PUSH4 0xf2fde38b
0x62 EQ
0x63 PUSH2 0x140
0x66 JUMPI
---
0x5d: V31 = 0xf2fde38b
0x62: V32 = EQ 0xf2fde38b V12
0x63: V33 = 0x140
0x66: JUMPI 0x140 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x6a]
---
Predecessors: [0x0, 0x5c]
Successors: [0x6b]
---
0x67 JUMPDEST
0x68 PUSH2 0x6e
---
0x67: JUMPDEST 
0x68: V34 = 0x6e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6e]
Exit stack: [V12, 0x6e]

================================

Block 0x6b
[0x6b:0x6b]
---
Predecessors: [0x67, 0x17c]
Successors: [0x6c]
---
0x6b JUMPDEST
---
0x6b: JUMPDEST 
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x6b]
Successors: [0x6e]
---
0x6c JUMPDEST
0x6d JUMP
---
0x6c: JUMPDEST 
0x6d: JUMP 0x6e
---
Entry stack: [V12, 0x6e]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x6e
[0x6e:0x6f]
---
Predecessors: [0x6c, 0x2b7, 0x36e]
Successors: []
---
0x6e JUMPDEST
0x6f STOP
---
0x6e: JUMPDEST 
0x6f: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x70
[0x70:0x76]
---
Predecessors: [0xb]
Successors: [0x77, 0x7b]
---
0x70 JUMPDEST
0x71 CALLVALUE
0x72 ISZERO
0x73 PUSH2 0x7b
0x76 JUMPI
---
0x70: JUMPDEST 
0x71: V35 = CALLVALUE
0x72: V36 = ISZERO V35
0x73: V37 = 0x7b
0x76: JUMPI 0x7b V36
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x77
[0x77:0x7a]
---
Predecessors: [0x70]
Successors: []
---
0x77 PUSH1 0x0
0x79 DUP1
0x7a REVERT
---
0x77: V38 = 0x0
0x7a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b
[0x7b:0x82]
---
Predecessors: [0x70]
Successors: [0x161]
---
0x7b JUMPDEST
0x7c PUSH2 0x6e
0x7f PUSH2 0x161
0x82 JUMP
---
0x7b: JUMPDEST 
0x7c: V39 = 0x6e
0x7f: V40 = 0x161
0x82: JUMP 0x161
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6e]
Exit stack: [V12, 0x6e]

================================

Block 0x83
[0x83:0x84]
---
Predecessors: []
Successors: []
---
0x83 JUMPDEST
0x84 STOP
---
0x83: JUMPDEST 
0x84: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x85
[0x85:0x8b]
---
Predecessors: [0x25]
Successors: [0x8c, 0x90]
---
0x85 JUMPDEST
0x86 CALLVALUE
0x87 ISZERO
0x88 PUSH2 0x90
0x8b JUMPI
---
0x85: JUMPDEST 
0x86: V41 = CALLVALUE
0x87: V42 = ISZERO V41
0x88: V43 = 0x90
0x8b: JUMPI 0x90 V42
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c
[0x8c:0x8f]
---
Predecessors: [0x85]
Successors: []
---
0x8c PUSH1 0x0
0x8e DUP1
0x8f REVERT
---
0x8c: V44 = 0x0
0x8f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x90
[0x90:0x97]
---
Predecessors: [0x85]
Successors: [0x198]
---
0x90 JUMPDEST
0x91 PUSH2 0x98
0x94 PUSH2 0x198
0x97 JUMP
---
0x90: JUMPDEST 
0x91: V45 = 0x98
0x94: V46 = 0x198
0x97: JUMP 0x198
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x98]
Exit stack: [V12, 0x98]

================================

Block 0x98
[0x98:0xa9]
---
Predecessors: [0x198]
Successors: []
---
0x98 JUMPDEST
0x99 PUSH1 0x40
0x9b MLOAD
0x9c SWAP1
0x9d DUP2
0x9e MSTORE
0x9f PUSH1 0x20
0xa1 ADD
0xa2 PUSH1 0x40
0xa4 MLOAD
0xa5 DUP1
0xa6 SWAP2
0xa7 SUB
0xa8 SWAP1
0xa9 RETURN
---
0x98: JUMPDEST 
0x99: V47 = 0x40
0x9b: V48 = M[0x40]
0x9e: M[V48] = V157
0x9f: V49 = 0x20
0xa1: V50 = ADD 0x20 V48
0xa2: V51 = 0x40
0xa4: V52 = M[0x40]
0xa7: V53 = SUB V50 V52
0xa9: RETURN V52 V53
---
Entry stack: [V12, 0x98, V157]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x98]

================================

Block 0xaa
[0xaa:0xb0]
---
Predecessors: [0x30]
Successors: [0xb1, 0xb5]
---
0xaa JUMPDEST
0xab CALLVALUE
0xac ISZERO
0xad PUSH2 0xb5
0xb0 JUMPI
---
0xaa: JUMPDEST 
0xab: V54 = CALLVALUE
0xac: V55 = ISZERO V54
0xad: V56 = 0xb5
0xb0: JUMPI 0xb5 V55
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb1
[0xb1:0xb4]
---
Predecessors: [0xaa]
Successors: []
---
0xb1 PUSH1 0x0
0xb3 DUP1
0xb4 REVERT
---
0xb1: V57 = 0x0
0xb4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb5
[0xb5:0xc8]
---
Predecessors: [0xaa]
Successors: [0x19e]
---
0xb5 JUMPDEST
0xb6 PUSH2 0x6e
0xb9 PUSH1 0x1
0xbb PUSH1 0xa0
0xbd PUSH1 0x2
0xbf EXP
0xc0 SUB
0xc1 PUSH1 0x4
0xc3 CALLDATALOAD
0xc4 AND
0xc5 PUSH2 0x19e
0xc8 JUMP
---
0xb5: JUMPDEST 
0xb6: V58 = 0x6e
0xb9: V59 = 0x1
0xbb: V60 = 0xa0
0xbd: V61 = 0x2
0xbf: V62 = EXP 0x2 0xa0
0xc0: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1: V64 = 0x4
0xc3: V65 = CALLDATALOAD 0x4
0xc4: V66 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0xc5: V67 = 0x19e
0xc8: JUMP 0x19e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6e, V66]
Exit stack: [V12, 0x6e, V66]

================================

Block 0xc9
[0xc9:0xca]
---
Predecessors: []
Successors: []
---
0xc9 JUMPDEST
0xca STOP
---
0xc9: JUMPDEST 
0xca: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcb
[0xcb:0xd1]
---
Predecessors: [0x3b]
Successors: [0xd2, 0xd6]
---
0xcb JUMPDEST
0xcc CALLVALUE
0xcd ISZERO
0xce PUSH2 0xd6
0xd1 JUMPI
---
0xcb: JUMPDEST 
0xcc: V68 = CALLVALUE
0xcd: V69 = ISZERO V68
0xce: V70 = 0xd6
0xd1: JUMPI 0xd6 V69
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd2
[0xd2:0xd5]
---
Predecessors: [0xcb]
Successors: []
---
0xd2 PUSH1 0x0
0xd4 DUP1
0xd5 REVERT
---
0xd2: V71 = 0x0
0xd5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd6
[0xd6:0xdd]
---
Predecessors: [0xcb]
Successors: [0x2bc]
---
0xd6 JUMPDEST
0xd7 PUSH2 0xde
0xda PUSH2 0x2bc
0xdd JUMP
---
0xd6: JUMPDEST 
0xd7: V72 = 0xde
0xda: V73 = 0x2bc
0xdd: JUMP 0x2bc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xde]
Exit stack: [V12, 0xde]

================================

Block 0xde
[0xde:0xf9]
---
Predecessors: [0x2bc]
Successors: []
---
0xde JUMPDEST
0xdf PUSH1 0x40
0xe1 MLOAD
0xe2 PUSH1 0x1
0xe4 PUSH1 0xa0
0xe6 PUSH1 0x2
0xe8 EXP
0xe9 SUB
0xea SWAP1
0xeb SWAP2
0xec AND
0xed DUP2
0xee MSTORE
0xef PUSH1 0x20
0xf1 ADD
0xf2 PUSH1 0x40
0xf4 MLOAD
0xf5 DUP1
0xf6 SWAP2
0xf7 SUB
0xf8 SWAP1
0xf9 RETURN
---
0xde: JUMPDEST 
0xdf: V74 = 0x40
0xe1: V75 = M[0x40]
0xe2: V76 = 0x1
0xe4: V77 = 0xa0
0xe6: V78 = 0x2
0xe8: V79 = EXP 0x2 0xa0
0xe9: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec: V81 = AND V288 0xffffffffffffffffffffffffffffffffffffffff
0xee: M[V75] = V81
0xef: V82 = 0x20
0xf1: V83 = ADD 0x20 V75
0xf2: V84 = 0x40
0xf4: V85 = M[0x40]
0xf7: V86 = SUB V83 V85
0xf9: RETURN V85 V86
---
Entry stack: [V12, 0xde, V288]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xde]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0x46]
Successors: [0x2cb]
---
0xfa JUMPDEST
0xfb PUSH2 0x102
0xfe PUSH2 0x2cb
0x101 JUMP
---
0xfa: JUMPDEST 
0xfb: V87 = 0x102
0xfe: V88 = 0x2cb
0x101: JUMP 0x2cb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x102]
Exit stack: [V12, 0x102]

================================

Block 0x102
[0x102:0x115]
---
Predecessors: [0x2ce, 0x314]
Successors: []
---
0x102 JUMPDEST
0x103 PUSH1 0x40
0x105 MLOAD
0x106 SWAP1
0x107 ISZERO
0x108 ISZERO
0x109 DUP2
0x10a MSTORE
0x10b PUSH1 0x20
0x10d ADD
0x10e PUSH1 0x40
0x110 MLOAD
0x111 DUP1
0x112 SWAP2
0x113 SUB
0x114 SWAP1
0x115 RETURN
---
0x102: JUMPDEST 
0x103: V89 = 0x40
0x105: V90 = M[0x40]
0x107: V91 = ISZERO {0x0, 0x1}
0x108: V92 = ISZERO V91
0x10a: M[V90] = V92
0x10b: V93 = 0x20
0x10d: V94 = ADD 0x20 V90
0x10e: V95 = 0x40
0x110: V96 = M[0x40]
0x113: V97 = SUB V94 V96
0x115: RETURN V96 V97
---
Entry stack: [V12, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x116
[0x116:0x11c]
---
Predecessors: [0x51]
Successors: [0x11d, 0x121]
---
0x116 JUMPDEST
0x117 CALLVALUE
0x118 ISZERO
0x119 PUSH2 0x121
0x11c JUMPI
---
0x116: JUMPDEST 
0x117: V98 = CALLVALUE
0x118: V99 = ISZERO V98
0x119: V100 = 0x121
0x11c: JUMPI 0x121 V99
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11d
[0x11d:0x120]
---
Predecessors: [0x116]
Successors: []
---
0x11d PUSH1 0x0
0x11f DUP1
0x120 REVERT
---
0x11d: V101 = 0x0
0x120: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x121
[0x121:0x12b]
---
Predecessors: [0x116]
Successors: [0x2d1]
---
0x121 JUMPDEST
0x122 PUSH2 0x102
0x125 PUSH1 0x4
0x127 CALLDATALOAD
0x128 PUSH2 0x2d1
0x12b JUMP
---
0x121: JUMPDEST 
0x122: V102 = 0x102
0x125: V103 = 0x4
0x127: V104 = CALLDATALOAD 0x4
0x128: V105 = 0x2d1
0x12b: JUMP 0x2d1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x102, V104]
Exit stack: [V12, 0x102, V104]

================================

Block 0x12c
[0x12c:0x13f]
---
Predecessors: []
Successors: []
---
0x12c JUMPDEST
0x12d PUSH1 0x40
0x12f MLOAD
0x130 SWAP1
0x131 ISZERO
0x132 ISZERO
0x133 DUP2
0x134 MSTORE
0x135 PUSH1 0x20
0x137 ADD
0x138 PUSH1 0x40
0x13a MLOAD
0x13b DUP1
0x13c SWAP2
0x13d SUB
0x13e SWAP1
0x13f RETURN
---
0x12c: JUMPDEST 
0x12d: V106 = 0x40
0x12f: V107 = M[0x40]
0x131: V108 = ISZERO S0
0x132: V109 = ISZERO V108
0x134: M[V107] = V109
0x135: V110 = 0x20
0x137: V111 = ADD 0x20 V107
0x138: V112 = 0x40
0x13a: V113 = M[0x40]
0x13d: V114 = SUB V111 V113
0x13f: RETURN V113 V114
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x140
[0x140:0x146]
---
Predecessors: [0x5c]
Successors: [0x147, 0x14b]
---
0x140 JUMPDEST
0x141 CALLVALUE
0x142 ISZERO
0x143 PUSH2 0x14b
0x146 JUMPI
---
0x140: JUMPDEST 
0x141: V115 = CALLVALUE
0x142: V116 = ISZERO V115
0x143: V117 = 0x14b
0x146: JUMPI 0x14b V116
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x147
[0x147:0x14a]
---
Predecessors: [0x140]
Successors: []
---
0x147 PUSH1 0x0
0x149 DUP1
0x14a REVERT
---
0x147: V118 = 0x0
0x14a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14b
[0x14b:0x15e]
---
Predecessors: [0x140]
Successors: [0x319]
---
0x14b JUMPDEST
0x14c PUSH2 0x6e
0x14f PUSH1 0x1
0x151 PUSH1 0xa0
0x153 PUSH1 0x2
0x155 EXP
0x156 SUB
0x157 PUSH1 0x4
0x159 CALLDATALOAD
0x15a AND
0x15b PUSH2 0x319
0x15e JUMP
---
0x14b: JUMPDEST 
0x14c: V119 = 0x6e
0x14f: V120 = 0x1
0x151: V121 = 0xa0
0x153: V122 = 0x2
0x155: V123 = EXP 0x2 0xa0
0x156: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x157: V125 = 0x4
0x159: V126 = CALLDATALOAD 0x4
0x15a: V127 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V128 = 0x319
0x15e: JUMP 0x319
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6e, V127]
Exit stack: [V12, 0x6e, V127]

================================

Block 0x15f
[0x15f:0x160]
---
Predecessors: []
Successors: []
---
0x15f JUMPDEST
0x160 STOP
---
0x15f: JUMPDEST 
0x160: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x161
[0x161:0x177]
---
Predecessors: [0x7b]
Successors: [0x178, 0x17c]
---
0x161 JUMPDEST
0x162 PUSH1 0x0
0x164 SLOAD
0x165 CALLER
0x166 PUSH1 0x1
0x168 PUSH1 0xa0
0x16a PUSH1 0x2
0x16c EXP
0x16d SUB
0x16e SWAP1
0x16f DUP2
0x170 AND
0x171 SWAP2
0x172 AND
0x173 EQ
0x174 PUSH2 0x17c
0x177 JUMPI
---
0x161: JUMPDEST 
0x162: V129 = 0x0
0x164: V130 = S[0x0]
0x165: V131 = CALLER
0x166: V132 = 0x1
0x168: V133 = 0xa0
0x16a: V134 = 0x2
0x16c: V135 = EXP 0x2 0xa0
0x16d: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x170: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x172: V138 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x173: V139 = EQ V138 V137
0x174: V140 = 0x17c
0x177: JUMPI 0x17c V139
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x178
[0x178:0x17b]
---
Predecessors: [0x161]
Successors: []
---
0x178 PUSH1 0x0
0x17a DUP1
0x17b REVERT
---
0x178: V141 = 0x0
0x17b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x17c
[0x17c:0x186]
---
Predecessors: [0x161]
Successors: [0x6b, 0x187]
---
0x17c JUMPDEST
0x17d PUSH1 0x1
0x17f SLOAD
0x180 TIMESTAMP
0x181 GT
0x182 ISZERO
0x183 PUSH2 0x6b
0x186 JUMPI
---
0x17c: JUMPDEST 
0x17d: V142 = 0x1
0x17f: V143 = S[0x1]
0x180: V144 = TIMESTAMP
0x181: V145 = GT V144 V143
0x182: V146 = ISZERO V145
0x183: V147 = 0x6b
0x186: JUMPI 0x6b V146
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x187
[0x187:0x193]
---
Predecessors: [0x17c]
Successors: []
---
0x187 PUSH1 0x0
0x189 SLOAD
0x18a PUSH1 0x1
0x18c PUSH1 0xa0
0x18e PUSH1 0x2
0x190 EXP
0x191 SUB
0x192 AND
0x193 SELFDESTRUCT
---
0x187: V148 = 0x0
0x189: V149 = S[0x0]
0x18a: V150 = 0x1
0x18c: V151 = 0xa0
0x18e: V152 = 0x2
0x190: V153 = EXP 0x2 0xa0
0x191: V154 = SUB 0x10000000000000000000000000000000000000000 0x1
0x192: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x193: SELFDESTRUCT V155
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x194
[0x194:0x194]
---
Predecessors: []
Successors: [0x195]
---
0x194 JUMPDEST
---
0x194: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x195
[0x195:0x195]
---
Predecessors: [0x194]
Successors: [0x196]
---
0x195 JUMPDEST
---
0x195: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x196
[0x196:0x197]
---
Predecessors: [0x195]
Successors: []
Has unresolved jump.
---
0x196 JUMPDEST
0x197 JUMP
---
0x196: JUMPDEST 
0x197: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x198
[0x198:0x19d]
---
Predecessors: [0x90]
Successors: [0x98]
---
0x198 JUMPDEST
0x199 PUSH1 0x1
0x19b SLOAD
0x19c DUP2
0x19d JUMP
---
0x198: JUMPDEST 
0x199: V156 = 0x1
0x19b: V157 = S[0x1]
0x19d: JUMP 0x98
---
Entry stack: [V12, 0x98]
Stack pops: 1
Stack additions: [S0, V157]
Exit stack: [V12, 0x98, V157]

================================

Block 0x19e
[0x19e:0x1b7]
---
Predecessors: [0xb5]
Successors: [0x1b8, 0x1bc]
---
0x19e JUMPDEST
0x19f PUSH1 0x0
0x1a1 DUP1
0x1a2 SLOAD
0x1a3 DUP2
0x1a4 SWAP1
0x1a5 CALLER
0x1a6 PUSH1 0x1
0x1a8 PUSH1 0xa0
0x1aa PUSH1 0x2
0x1ac EXP
0x1ad SUB
0x1ae SWAP1
0x1af DUP2
0x1b0 AND
0x1b1 SWAP2
0x1b2 AND
0x1b3 EQ
0x1b4 PUSH2 0x1bc
0x1b7 JUMPI
---
0x19e: JUMPDEST 
0x19f: V158 = 0x0
0x1a2: V159 = S[0x0]
0x1a5: V160 = CALLER
0x1a6: V161 = 0x1
0x1a8: V162 = 0xa0
0x1aa: V163 = 0x2
0x1ac: V164 = EXP 0x2 0xa0
0x1ad: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b0: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x1b2: V167 = AND V159 0xffffffffffffffffffffffffffffffffffffffff
0x1b3: V168 = EQ V167 V166
0x1b4: V169 = 0x1bc
0x1b7: JUMPI 0x1bc V168
---
Entry stack: [V12, 0x6e, V66]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x6e, V66, 0x0, 0x0]

================================

Block 0x1b8
[0x1b8:0x1bb]
---
Predecessors: [0x19e]
Successors: []
---
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb REVERT
---
0x1b8: V170 = 0x0
0x1bb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6e, V66, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V66, 0x0, 0x0]

================================

Block 0x1bc
[0x1bc:0x1c6]
---
Predecessors: [0x19e]
Successors: [0x1c7, 0x2b4]
---
0x1bc JUMPDEST
0x1bd PUSH1 0x1
0x1bf SLOAD
0x1c0 TIMESTAMP
0x1c1 GT
0x1c2 ISZERO
0x1c3 PUSH2 0x2b4
0x1c6 JUMPI
---
0x1bc: JUMPDEST 
0x1bd: V171 = 0x1
0x1bf: V172 = S[0x1]
0x1c0: V173 = TIMESTAMP
0x1c1: V174 = GT V173 V172
0x1c2: V175 = ISZERO V174
0x1c3: V176 = 0x2b4
0x1c6: JUMPI 0x2b4 V175
---
Entry stack: [V12, 0x6e, V66, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V66, 0x0, 0x0]

================================

Block 0x1c7
[0x1c7:0x21b]
---
Predecessors: [0x1bc]
Successors: [0x21c, 0x220]
---
0x1c7 DUP3
0x1c8 SWAP2
0x1c9 POP
0x1ca DUP2
0x1cb PUSH1 0x1
0x1cd PUSH1 0xa0
0x1cf PUSH1 0x2
0x1d1 EXP
0x1d2 SUB
0x1d3 AND
0x1d4 PUSH4 0x70a08231
0x1d9 ADDRESS
0x1da PUSH1 0x0
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df PUSH1 0x20
0x1e1 ADD
0x1e2 MSTORE
0x1e3 PUSH1 0x40
0x1e5 MLOAD
0x1e6 PUSH1 0xe0
0x1e8 PUSH1 0x2
0x1ea EXP
0x1eb PUSH4 0xffffffff
0x1f0 DUP5
0x1f1 AND
0x1f2 MUL
0x1f3 DUP2
0x1f4 MSTORE
0x1f5 PUSH1 0x1
0x1f7 PUSH1 0xa0
0x1f9 PUSH1 0x2
0x1fb EXP
0x1fc SUB
0x1fd SWAP1
0x1fe SWAP2
0x1ff AND
0x200 PUSH1 0x4
0x202 DUP3
0x203 ADD
0x204 MSTORE
0x205 PUSH1 0x24
0x207 ADD
0x208 PUSH1 0x20
0x20a PUSH1 0x40
0x20c MLOAD
0x20d DUP1
0x20e DUP4
0x20f SUB
0x210 DUP2
0x211 PUSH1 0x0
0x213 DUP8
0x214 DUP1
0x215 EXTCODESIZE
0x216 ISZERO
0x217 ISZERO
0x218 PUSH2 0x220
0x21b JUMPI
---
0x1cb: V177 = 0x1
0x1cd: V178 = 0xa0
0x1cf: V179 = 0x2
0x1d1: V180 = EXP 0x2 0xa0
0x1d2: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d3: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x1d4: V183 = 0x70a08231
0x1d9: V184 = ADDRESS
0x1da: V185 = 0x0
0x1dc: V186 = 0x40
0x1de: V187 = M[0x40]
0x1df: V188 = 0x20
0x1e1: V189 = ADD 0x20 V187
0x1e2: M[V189] = 0x0
0x1e3: V190 = 0x40
0x1e5: V191 = M[0x40]
0x1e6: V192 = 0xe0
0x1e8: V193 = 0x2
0x1ea: V194 = EXP 0x2 0xe0
0x1eb: V195 = 0xffffffff
0x1f1: V196 = AND 0x70a08231 0xffffffff
0x1f2: V197 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x1f4: M[V191] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x1f5: V198 = 0x1
0x1f7: V199 = 0xa0
0x1f9: V200 = 0x2
0x1fb: V201 = EXP 0x2 0xa0
0x1fc: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ff: V203 = AND V184 0xffffffffffffffffffffffffffffffffffffffff
0x200: V204 = 0x4
0x203: V205 = ADD V191 0x4
0x204: M[V205] = V203
0x205: V206 = 0x24
0x207: V207 = ADD 0x24 V191
0x208: V208 = 0x20
0x20a: V209 = 0x40
0x20c: V210 = M[0x40]
0x20f: V211 = SUB V207 V210
0x211: V212 = 0x0
0x215: V213 = EXTCODESIZE V182
0x216: V214 = ISZERO V213
0x217: V215 = ISZERO V214
0x218: V216 = 0x220
0x21b: JUMPI 0x220 V215
---
Entry stack: [V12, 0x6e, V66, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S2, S0, V182, 0x70a08231, V207, 0x20, V210, V211, V210, 0x0, V182]
Exit stack: [V12, 0x6e, V66, V66, 0x0, V182, 0x70a08231, V207, 0x20, V210, V211, V210, 0x0, V182]

================================

Block 0x21c
[0x21c:0x21f]
---
Predecessors: [0x1c7]
Successors: []
---
0x21c PUSH1 0x0
0x21e DUP1
0x21f REVERT
---
0x21c: V217 = 0x0
0x21f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6e, V66, V66, 0x0, V182, 0x70a08231, V207, 0x20, V210, V211, V210, 0x0, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V66, V66, 0x0, V182, 0x70a08231, V207, 0x20, V210, V211, V210, 0x0, V182]

================================

Block 0x220
[0x220:0x22c]
---
Predecessors: [0x1c7]
Successors: [0x22d, 0x231]
---
0x220 JUMPDEST
0x221 PUSH2 0x2c6
0x224 GAS
0x225 SUB
0x226 CALL
0x227 ISZERO
0x228 ISZERO
0x229 PUSH2 0x231
0x22c JUMPI
---
0x220: JUMPDEST 
0x221: V218 = 0x2c6
0x224: V219 = GAS
0x225: V220 = SUB V219 0x2c6
0x226: V221 = CALL V220 V182 0x0 V210 V211 V210 0x20
0x227: V222 = ISZERO V221
0x228: V223 = ISZERO V222
0x229: V224 = 0x231
0x22c: JUMPI 0x231 V223
---
Entry stack: [V12, 0x6e, V66, V66, 0x0, V182, 0x70a08231, V207, 0x20, V210, V211, V210, 0x0, V182]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x6e, V66, V66, 0x0, V182, 0x70a08231, V207]

================================

Block 0x22d
[0x22d:0x230]
---
Predecessors: [0x220]
Successors: []
---
0x22d PUSH1 0x0
0x22f DUP1
0x230 REVERT
---
0x22d: V225 = 0x0
0x230: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6e, V66, V66, 0x0, V182, 0x70a08231, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V66, V66, 0x0, V182, 0x70a08231, V207]

================================

Block 0x231
[0x231:0x245]
---
Predecessors: [0x220]
Successors: [0x246, 0x2b4]
---
0x231 JUMPDEST
0x232 POP
0x233 POP
0x234 POP
0x235 PUSH1 0x40
0x237 MLOAD
0x238 DUP1
0x239 MLOAD
0x23a SWAP2
0x23b POP
0x23c POP
0x23d PUSH1 0x0
0x23f DUP2
0x240 GT
0x241 ISZERO
0x242 PUSH2 0x2b4
0x245 JUMPI
---
0x231: JUMPDEST 
0x235: V226 = 0x40
0x237: V227 = M[0x40]
0x239: V228 = M[V227]
0x23d: V229 = 0x0
0x240: V230 = GT V228 0x0
0x241: V231 = ISZERO V230
0x242: V232 = 0x2b4
0x245: JUMPI 0x2b4 V231
---
Entry stack: [V12, 0x6e, V66, V66, 0x0, V182, 0x70a08231, V207]
Stack pops: 4
Stack additions: [V228]
Exit stack: [V12, 0x6e, V66, V66, V228]

================================

Block 0x246
[0x246:0x29a]
---
Predecessors: [0x231]
Successors: [0x29b, 0x29f]
---
0x246 PUSH1 0x0
0x248 SLOAD
0x249 PUSH1 0x1
0x24b PUSH1 0xa0
0x24d PUSH1 0x2
0x24f EXP
0x250 SUB
0x251 DUP1
0x252 DUP5
0x253 AND
0x254 SWAP2
0x255 PUSH4 0xa9059cbb
0x25a SWAP2
0x25b AND
0x25c DUP4
0x25d PUSH1 0x40
0x25f MLOAD
0x260 PUSH1 0xe0
0x262 PUSH1 0x2
0x264 EXP
0x265 PUSH4 0xffffffff
0x26a DUP6
0x26b AND
0x26c MUL
0x26d DUP2
0x26e MSTORE
0x26f PUSH1 0x1
0x271 PUSH1 0xa0
0x273 PUSH1 0x2
0x275 EXP
0x276 SUB
0x277 SWAP1
0x278 SWAP3
0x279 AND
0x27a PUSH1 0x4
0x27c DUP4
0x27d ADD
0x27e MSTORE
0x27f PUSH1 0x24
0x281 DUP3
0x282 ADD
0x283 MSTORE
0x284 PUSH1 0x44
0x286 ADD
0x287 PUSH1 0x0
0x289 PUSH1 0x40
0x28b MLOAD
0x28c DUP1
0x28d DUP4
0x28e SUB
0x28f DUP2
0x290 PUSH1 0x0
0x292 DUP8
0x293 DUP1
0x294 EXTCODESIZE
0x295 ISZERO
0x296 ISZERO
0x297 PUSH2 0x29f
0x29a JUMPI
---
0x246: V233 = 0x0
0x248: V234 = S[0x0]
0x249: V235 = 0x1
0x24b: V236 = 0xa0
0x24d: V237 = 0x2
0x24f: V238 = EXP 0x2 0xa0
0x250: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x253: V240 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0x255: V241 = 0xa9059cbb
0x25b: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x25d: V243 = 0x40
0x25f: V244 = M[0x40]
0x260: V245 = 0xe0
0x262: V246 = 0x2
0x264: V247 = EXP 0x2 0xe0
0x265: V248 = 0xffffffff
0x26b: V249 = AND 0xa9059cbb 0xffffffff
0x26c: V250 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x26e: M[V244] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x26f: V251 = 0x1
0x271: V252 = 0xa0
0x273: V253 = 0x2
0x275: V254 = EXP 0x2 0xa0
0x276: V255 = SUB 0x10000000000000000000000000000000000000000 0x1
0x279: V256 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x27a: V257 = 0x4
0x27d: V258 = ADD V244 0x4
0x27e: M[V258] = V256
0x27f: V259 = 0x24
0x282: V260 = ADD V244 0x24
0x283: M[V260] = V228
0x284: V261 = 0x44
0x286: V262 = ADD 0x44 V244
0x287: V263 = 0x0
0x289: V264 = 0x40
0x28b: V265 = M[0x40]
0x28e: V266 = SUB V262 V265
0x290: V267 = 0x0
0x294: V268 = EXTCODESIZE V240
0x295: V269 = ISZERO V268
0x296: V270 = ISZERO V269
0x297: V271 = 0x29f
0x29a: JUMPI 0x29f V270
---
Entry stack: [V12, 0x6e, V66, V66, V228]
Stack pops: 2
Stack additions: [S1, S0, V240, 0xa9059cbb, V262, 0x0, V265, V266, V265, 0x0, V240]
Exit stack: [V12, 0x6e, V66, V66, V228, V240, 0xa9059cbb, V262, 0x0, V265, V266, V265, 0x0, V240]

================================

Block 0x29b
[0x29b:0x29e]
---
Predecessors: [0x246]
Successors: []
---
0x29b PUSH1 0x0
0x29d DUP1
0x29e REVERT
---
0x29b: V272 = 0x0
0x29e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6e, V66, V66, V228, V240, 0xa9059cbb, V262, 0x0, V265, V266, V265, 0x0, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V66, V66, V228, V240, 0xa9059cbb, V262, 0x0, V265, V266, V265, 0x0, V240]

================================

Block 0x29f
[0x29f:0x2ab]
---
Predecessors: [0x246]
Successors: [0x2ac, 0x2b0]
---
0x29f JUMPDEST
0x2a0 PUSH2 0x2c6
0x2a3 GAS
0x2a4 SUB
0x2a5 CALL
0x2a6 ISZERO
0x2a7 ISZERO
0x2a8 PUSH2 0x2b0
0x2ab JUMPI
---
0x29f: JUMPDEST 
0x2a0: V273 = 0x2c6
0x2a3: V274 = GAS
0x2a4: V275 = SUB V274 0x2c6
0x2a5: V276 = CALL V275 V240 0x0 V265 V266 V265 0x0
0x2a6: V277 = ISZERO V276
0x2a7: V278 = ISZERO V277
0x2a8: V279 = 0x2b0
0x2ab: JUMPI 0x2b0 V278
---
Entry stack: [V12, 0x6e, V66, V66, V228, V240, 0xa9059cbb, V262, 0x0, V265, V266, V265, 0x0, V240]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x6e, V66, V66, V228, V240, 0xa9059cbb, V262]

================================

Block 0x2ac
[0x2ac:0x2af]
---
Predecessors: [0x29f]
Successors: []
---
0x2ac PUSH1 0x0
0x2ae DUP1
0x2af REVERT
---
0x2ac: V280 = 0x0
0x2af: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6e, V66, V66, V228, V240, 0xa9059cbb, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V66, V66, V228, V240, 0xa9059cbb, V262]

================================

Block 0x2b0
[0x2b0:0x2b3]
---
Predecessors: [0x29f]
Successors: [0x2b4]
---
0x2b0 JUMPDEST
0x2b1 POP
0x2b2 POP
0x2b3 POP
---
0x2b0: JUMPDEST 
---
Entry stack: [V12, 0x6e, V66, V66, V228, V240, 0xa9059cbb, V262]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x6e, V66, V66, V228]

================================

Block 0x2b4
[0x2b4:0x2b4]
---
Predecessors: [0x1bc, 0x231, 0x2b0]
Successors: [0x2b5]
---
0x2b4 JUMPDEST
---
0x2b4: JUMPDEST 
---
Entry stack: [V12, 0x6e, V66, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V66, S1, S0]

================================

Block 0x2b5
[0x2b5:0x2b5]
---
Predecessors: [0x2b4]
Successors: [0x2b6]
---
0x2b5 JUMPDEST
---
0x2b5: JUMPDEST 
---
Entry stack: [V12, 0x6e, V66, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V66, S1, S0]

================================

Block 0x2b6
[0x2b6:0x2b6]
---
Predecessors: [0x2b5]
Successors: [0x2b7]
---
0x2b6 JUMPDEST
---
0x2b6: JUMPDEST 
---
Entry stack: [V12, 0x6e, V66, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V66, S1, S0]

================================

Block 0x2b7
[0x2b7:0x2bb]
---
Predecessors: [0x2b6]
Successors: [0x6e]
---
0x2b7 JUMPDEST
0x2b8 POP
0x2b9 POP
0x2ba POP
0x2bb JUMP
---
0x2b7: JUMPDEST 
0x2bb: JUMP 0x6e
---
Entry stack: [V12, 0x6e, V66, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bc
[0x2bc:0x2ca]
---
Predecessors: [0xd6]
Successors: [0xde]
---
0x2bc JUMPDEST
0x2bd PUSH1 0x0
0x2bf SLOAD
0x2c0 PUSH1 0x1
0x2c2 PUSH1 0xa0
0x2c4 PUSH1 0x2
0x2c6 EXP
0x2c7 SUB
0x2c8 AND
0x2c9 DUP2
0x2ca JUMP
---
0x2bc: JUMPDEST 
0x2bd: V281 = 0x0
0x2bf: V282 = S[0x0]
0x2c0: V283 = 0x1
0x2c2: V284 = 0xa0
0x2c4: V285 = 0x2
0x2c6: V286 = EXP 0x2 0xa0
0x2c7: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c8: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x2ca: JUMP 0xde
---
Entry stack: [V12, 0xde]
Stack pops: 1
Stack additions: [S0, V288]
Exit stack: [V12, 0xde, V288]

================================

Block 0x2cb
[0x2cb:0x2cd]
---
Predecessors: [0xfa]
Successors: [0x2ce]
---
0x2cb JUMPDEST
0x2cc PUSH1 0x1
---
0x2cb: JUMPDEST 
0x2cc: V289 = 0x1
---
Entry stack: [V12, 0x102]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x102, 0x1]

================================

Block 0x2ce
[0x2ce:0x2d0]
---
Predecessors: [0x2cb]
Successors: [0x102]
---
0x2ce JUMPDEST
0x2cf SWAP1
0x2d0 JUMP
---
0x2ce: JUMPDEST 
0x2d0: JUMP 0x102
---
Entry stack: [V12, 0x102, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x2d1
[0x2d1:0x2e8]
---
Predecessors: [0x121]
Successors: [0x2e9, 0x2ed]
---
0x2d1 JUMPDEST
0x2d2 PUSH1 0x0
0x2d4 DUP1
0x2d5 SLOAD
0x2d6 CALLER
0x2d7 PUSH1 0x1
0x2d9 PUSH1 0xa0
0x2db PUSH1 0x2
0x2dd EXP
0x2de SUB
0x2df SWAP1
0x2e0 DUP2
0x2e1 AND
0x2e2 SWAP2
0x2e3 AND
0x2e4 EQ
0x2e5 PUSH2 0x2ed
0x2e8 JUMPI
---
0x2d1: JUMPDEST 
0x2d2: V290 = 0x0
0x2d5: V291 = S[0x0]
0x2d6: V292 = CALLER
0x2d7: V293 = 0x1
0x2d9: V294 = 0xa0
0x2db: V295 = 0x2
0x2dd: V296 = EXP 0x2 0xa0
0x2de: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e1: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x2e3: V299 = AND V291 0xffffffffffffffffffffffffffffffffffffffff
0x2e4: V300 = EQ V299 V298
0x2e5: V301 = 0x2ed
0x2e8: JUMPI 0x2ed V300
---
Entry stack: [V12, 0x102, V104]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x102, V104, 0x0]

================================

Block 0x2e9
[0x2e9:0x2ec]
---
Predecessors: [0x2d1]
Successors: []
---
0x2e9 PUSH1 0x0
0x2eb DUP1
0x2ec REVERT
---
0x2e9: V302 = 0x0
0x2ec: REVERT 0x0 0x0
---
Entry stack: [V12, 0x102, V104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V104, 0x0]

================================

Block 0x2ed
[0x2ed:0x2fe]
---
Predecessors: [0x2d1]
Successors: [0x2ff, 0x306]
---
0x2ed JUMPDEST
0x2ee PUSH1 0x1
0x2f0 SLOAD
0x2f1 DUP3
0x2f2 PUSH3 0x15180
0x2f6 MUL
0x2f7 TIMESTAMP
0x2f8 ADD
0x2f9 LT
0x2fa ISZERO
0x2fb PUSH2 0x306
0x2fe JUMPI
---
0x2ed: JUMPDEST 
0x2ee: V303 = 0x1
0x2f0: V304 = S[0x1]
0x2f2: V305 = 0x15180
0x2f6: V306 = MUL 0x15180 V104
0x2f7: V307 = TIMESTAMP
0x2f8: V308 = ADD V307 V306
0x2f9: V309 = LT V308 V304
0x2fa: V310 = ISZERO V309
0x2fb: V311 = 0x306
0x2fe: JUMPI 0x306 V310
---
Entry stack: [V12, 0x102, V104, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x102, V104, 0x0]

================================

Block 0x2ff
[0x2ff:0x305]
---
Predecessors: [0x2ed]
Successors: [0x313]
---
0x2ff POP
0x300 PUSH1 0x0
0x302 PUSH2 0x313
0x305 JUMP
---
0x300: V312 = 0x0
0x302: V313 = 0x313
0x305: JUMP 0x313
---
Entry stack: [V12, 0x102, V104, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x102, V104, 0x0]

================================

Block 0x306
[0x306:0x312]
---
Predecessors: [0x2ed]
Successors: [0x313]
---
0x306 JUMPDEST
0x307 POP
0x308 TIMESTAMP
0x309 PUSH1 0x3c
0x30b DUP3
0x30c MUL
0x30d ADD
0x30e PUSH1 0x1
0x310 SWAP1
0x311 DUP2
0x312 SSTORE
---
0x306: JUMPDEST 
0x308: V314 = TIMESTAMP
0x309: V315 = 0x3c
0x30c: V316 = MUL V104 0x3c
0x30d: V317 = ADD V316 V314
0x30e: V318 = 0x1
0x312: S[0x1] = V317
---
Entry stack: [V12, 0x102, V104, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0x102, V104, 0x1]

================================

Block 0x313
[0x313:0x313]
---
Predecessors: [0x2ff, 0x306]
Successors: [0x314]
---
0x313 JUMPDEST
---
0x313: JUMPDEST 
---
Entry stack: [V12, 0x102, V104, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x102, V104, {0x0, 0x1}]

================================

Block 0x314
[0x314:0x318]
---
Predecessors: [0x313]
Successors: [0x102]
---
0x314 JUMPDEST
0x315 SWAP2
0x316 SWAP1
0x317 POP
0x318 JUMP
---
0x314: JUMPDEST 
0x318: JUMP 0x102
---
Entry stack: [V12, 0x102, V104, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x319
[0x319:0x32f]
---
Predecessors: [0x14b]
Successors: [0x330, 0x334]
---
0x319 JUMPDEST
0x31a PUSH1 0x0
0x31c SLOAD
0x31d CALLER
0x31e PUSH1 0x1
0x320 PUSH1 0xa0
0x322 PUSH1 0x2
0x324 EXP
0x325 SUB
0x326 SWAP1
0x327 DUP2
0x328 AND
0x329 SWAP2
0x32a AND
0x32b EQ
0x32c PUSH2 0x334
0x32f JUMPI
---
0x319: JUMPDEST 
0x31a: V319 = 0x0
0x31c: V320 = S[0x0]
0x31d: V321 = CALLER
0x31e: V322 = 0x1
0x320: V323 = 0xa0
0x322: V324 = 0x2
0x324: V325 = EXP 0x2 0xa0
0x325: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x328: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x32a: V328 = AND V320 0xffffffffffffffffffffffffffffffffffffffff
0x32b: V329 = EQ V328 V327
0x32c: V330 = 0x334
0x32f: JUMPI 0x334 V329
---
Entry stack: [V12, 0x6e, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V127]

================================

Block 0x330
[0x330:0x333]
---
Predecessors: [0x319]
Successors: []
---
0x330 PUSH1 0x0
0x332 DUP1
0x333 REVERT
---
0x330: V331 = 0x0
0x333: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6e, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V127]

================================

Block 0x334
[0x334:0x343]
---
Predecessors: [0x319]
Successors: [0x344, 0x36c]
---
0x334 JUMPDEST
0x335 PUSH1 0x1
0x337 PUSH1 0xa0
0x339 PUSH1 0x2
0x33b EXP
0x33c SUB
0x33d DUP2
0x33e AND
0x33f ISZERO
0x340 PUSH2 0x36c
0x343 JUMPI
---
0x334: JUMPDEST 
0x335: V332 = 0x1
0x337: V333 = 0xa0
0x339: V334 = 0x2
0x33b: V335 = EXP 0x2 0xa0
0x33c: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33e: V337 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x33f: V338 = ISZERO V337
0x340: V339 = 0x36c
0x343: JUMPI 0x36c V338
---
Entry stack: [V12, 0x6e, V127]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x6e, V127]

================================

Block 0x344
[0x344:0x36b]
---
Predecessors: [0x334]
Successors: [0x36c]
---
0x344 PUSH1 0x0
0x346 DUP1
0x347 SLOAD
0x348 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35d NOT
0x35e AND
0x35f PUSH1 0x1
0x361 PUSH1 0xa0
0x363 PUSH1 0x2
0x365 EXP
0x366 SUB
0x367 DUP4
0x368 AND
0x369 OR
0x36a SWAP1
0x36b SSTORE
---
0x344: V340 = 0x0
0x347: V341 = S[0x0]
0x348: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x35d: V343 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x35e: V344 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V341
0x35f: V345 = 0x1
0x361: V346 = 0xa0
0x363: V347 = 0x2
0x365: V348 = EXP 0x2 0xa0
0x366: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x368: V350 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x369: V351 = OR V350 V344
0x36b: S[0x0] = V351
---
Entry stack: [V12, 0x6e, V127]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x6e, V127]

================================

Block 0x36c
[0x36c:0x36c]
---
Predecessors: [0x334, 0x344]
Successors: [0x36d]
---
0x36c JUMPDEST
---
0x36c: JUMPDEST 
---
Entry stack: [V12, 0x6e, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V127]

================================

Block 0x36d
[0x36d:0x36d]
---
Predecessors: [0x36c]
Successors: [0x36e]
---
0x36d JUMPDEST
---
0x36d: JUMPDEST 
---
Entry stack: [V12, 0x6e, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V127]

================================

Block 0x36e
[0x36e:0x370]
---
Predecessors: [0x36d]
Successors: [0x6e]
---
0x36e JUMPDEST
0x36f POP
0x370 JUMP
---
0x36e: JUMPDEST 
0x370: JUMP 0x6e
---
Entry stack: [V12, 0x6e, V127]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x371
[0x371:0x39c]
---
Predecessors: []
Successors: []
---
0x371 STOP
0x372 LOG1
0x373 PUSH6 0x627a7a723058
0x37a SHA3
0x37b SAR
0x37c MISSING 0x1e
0x37d PUSH29 0xb5b2bd7687dafa0fda7d88dfc4ea187fe123d95856d31b4f8dacd6fdb9
0x39b STOP
0x39c MISSING 0x29
---
0x371: STOP 
0x372: LOG S0 S1 S2
0x373: V352 = 0x627a7a723058
0x37a: V353 = SHA3 0x627a7a723058 S3
0x37b: V354 = SAR V353 S4
0x37c: MISSING 0x1e
0x37d: V355 = 0xb5b2bd7687dafa0fda7d88dfc4ea187fe123d95856d31b4f8dacd6fdb9
0x39b: STOP 
0x39c: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V354, 0xb5b2bd7687dafa0fda7d88dfc4ea187fe123d95856d31b4f8dacd6fdb9]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x70
Exit block: 0x6e
Body: 0x6b, 0x6c, 0x6e, 0x70, 0x77, 0x7b, 0x161, 0x178, 0x17c, 0x187

Function 1:
Public function signature: 0x4665096d
Entry block: 0x85
Exit block: 0x98
Body: 0x85, 0x8c, 0x90, 0x98, 0x198

Function 2:
Public function signature: 0x842fc1a3
Entry block: 0xaa
Exit block: 0x2ac
Body: 0x6e, 0xaa, 0xb1, 0xb5, 0x19e, 0x1b8, 0x1bc, 0x1c7, 0x21c, 0x220, 0x22d, 0x231, 0x246, 0x29b, 0x29f, 0x2ac, 0x2b0, 0x2b4, 0x2b5, 0x2b6, 0x2b7

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xcb
Exit block: 0xde
Body: 0xcb, 0xd2, 0xd6, 0xde, 0x2bc

Function 4:
Public function signature: 0xb60d4288
Entry block: 0xfa
Exit block: 0x102
Body: 0xfa, 0x102, 0x2cb, 0x2ce

Function 5:
Public function signature: 0xdd467064
Entry block: 0x116
Exit block: 0x102
Body: 0x102, 0x116, 0x11d, 0x121, 0x2d1, 0x2e9, 0x2ed, 0x2ff, 0x306, 0x313, 0x314

Function 6:
Public function signature: 0xf2fde38b
Entry block: 0x140
Exit block: 0x6e
Body: 0x6e, 0x140, 0x147, 0x14b, 0x319, 0x330, 0x334, 0x344, 0x36c, 0x36d, 0x36e

Function 7:
Public fallback function
Entry block: 0x67
Exit block: 0x6e
Body: 0x67, 0x6b, 0x6c, 0x6e

