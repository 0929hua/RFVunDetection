args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/2/101897.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa4]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa4
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa4
0xc: JUMPI 0xa4 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x33a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x29dcb0cf
0x3c EQ
0x3d PUSH2 0x33a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x29dcb0cf
0x3c: V13 = EQ 0x29dcb0cf V11
0x3d: V14 = 0x33a
0x40: JUMPI 0x33a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x365]
---
0x41 DUP1
0x42 PUSH4 0x38af3eed
0x47 EQ
0x48 PUSH2 0x365
0x4b JUMPI
---
0x42: V15 = 0x38af3eed
0x47: V16 = EQ 0x38af3eed V11
0x48: V17 = 0x365
0x4b: JUMPI 0x365 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x3bc]
---
0x4c DUP1
0x4d PUSH4 0x6e66f6e9
0x52 EQ
0x53 PUSH2 0x3bc
0x56 JUMPI
---
0x4d: V18 = 0x6e66f6e9
0x52: V19 = EQ 0x6e66f6e9 V11
0x53: V20 = 0x3bc
0x56: JUMPI 0x3bc V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x413]
---
0x57 DUP1
0x58 PUSH4 0x70a08231
0x5d EQ
0x5e PUSH2 0x413
0x61 JUMPI
---
0x58: V21 = 0x70a08231
0x5d: V22 = EQ 0x70a08231 V11
0x5e: V23 = 0x413
0x61: JUMPI 0x413 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x46a]
---
0x62 DUP1
0x63 PUSH4 0x7a3a0e84
0x68 EQ
0x69 PUSH2 0x46a
0x6c JUMPI
---
0x63: V24 = 0x7a3a0e84
0x68: V25 = EQ 0x7a3a0e84 V11
0x69: V26 = 0x46a
0x6c: JUMPI 0x46a V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x495]
---
0x6d DUP1
0x6e PUSH4 0x7b3e5e7b
0x73 EQ
0x74 PUSH2 0x495
0x77 JUMPI
---
0x6e: V27 = 0x7b3e5e7b
0x73: V28 = EQ 0x7b3e5e7b V11
0x74: V29 = 0x495
0x77: JUMPI 0x495 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x4c0]
---
0x78 DUP1
0x79 PUSH4 0xa035b1fe
0x7e EQ
0x7f PUSH2 0x4c0
0x82 JUMPI
---
0x79: V30 = 0xa035b1fe
0x7e: V31 = EQ 0xa035b1fe V11
0x7f: V32 = 0x4c0
0x82: JUMPI 0x4c0 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x4eb]
---
0x83 DUP1
0x84 PUSH4 0xc4650a03
0x89 EQ
0x8a PUSH2 0x4eb
0x8d JUMPI
---
0x84: V33 = 0xc4650a03
0x89: V34 = EQ 0xc4650a03 V11
0x8a: V35 = 0x4eb
0x8d: JUMPI 0x4eb V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x518]
---
0x8e DUP1
0x8f PUSH4 0xd4822fbf
0x94 EQ
0x95 PUSH2 0x518
0x98 JUMPI
---
0x8f: V36 = 0xd4822fbf
0x94: V37 = EQ 0xd4822fbf V11
0x95: V38 = 0x518
0x98: JUMPI 0x518 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x565]
---
0x99 DUP1
0x9a PUSH4 0xfd6b7ef8
0x9f EQ
0xa0 PUSH2 0x565
0xa3 JUMPI
---
0x9a: V39 = 0xfd6b7ef8
0x9f: V40 = EQ 0xfd6b7ef8 V11
0xa0: V41 = 0x565
0xa3: JUMPI 0x565 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xbe]
---
Predecessors: [0x0, 0x99]
Successors: [0xbf, 0xc3]
---
0xa4 JUMPDEST
0xa5 PUSH1 0x0
0xa7 DUP1
0xa8 PUSH1 0x7
0xaa PUSH1 0x1
0xac SWAP1
0xad SLOAD
0xae SWAP1
0xaf PUSH2 0x100
0xb2 EXP
0xb3 SWAP1
0xb4 DIV
0xb5 PUSH1 0xff
0xb7 AND
0xb8 ISZERO
0xb9 ISZERO
0xba ISZERO
0xbb PUSH2 0xc3
0xbe JUMPI
---
0xa4: JUMPDEST 
0xa5: V42 = 0x0
0xa8: V43 = 0x7
0xaa: V44 = 0x1
0xad: V45 = S[0x7]
0xaf: V46 = 0x100
0xb2: V47 = EXP 0x100 0x1
0xb4: V48 = DIV V45 0x100
0xb5: V49 = 0xff
0xb7: V50 = AND 0xff V48
0xb8: V51 = ISZERO V50
0xb9: V52 = ISZERO V51
0xba: V53 = ISZERO V52
0xbb: V54 = 0xc3
0xbe: JUMPI 0xc3 V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0xa4]
Successors: []
---
0xbf PUSH1 0x0
0xc1 DUP1
0xc2 REVERT
---
0xbf: V55 = 0x0
0xc2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xc3
[0xc3:0xce]
---
Predecessors: [0xa4]
Successors: [0xcf, 0xd3]
---
0xc3 JUMPDEST
0xc4 PUSH1 0x3
0xc6 SLOAD
0xc7 TIMESTAMP
0xc8 LT
0xc9 ISZERO
0xca ISZERO
0xcb PUSH2 0xd3
0xce JUMPI
---
0xc3: JUMPDEST 
0xc4: V56 = 0x3
0xc6: V57 = S[0x3]
0xc7: V58 = TIMESTAMP
0xc8: V59 = LT V58 V57
0xc9: V60 = ISZERO V59
0xca: V61 = ISZERO V60
0xcb: V62 = 0xd3
0xce: JUMPI 0xd3 V61
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xcf
[0xcf:0xd2]
---
Predecessors: [0xc3]
Successors: []
---
0xcf PUSH1 0x0
0xd1 DUP1
0xd2 REVERT
---
0xcf: V63 = 0x0
0xd2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xd3
[0xd3:0x145]
---
Predecessors: [0xc3]
Successors: [0x146, 0x147]
---
0xd3 JUMPDEST
0xd4 CALLVALUE
0xd5 SWAP2
0xd6 POP
0xd7 DUP2
0xd8 PUSH1 0x6
0xda PUSH1 0x0
0xdc CALLER
0xdd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf2 AND
0xf3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x108 AND
0x109 DUP2
0x10a MSTORE
0x10b PUSH1 0x20
0x10d ADD
0x10e SWAP1
0x10f DUP2
0x110 MSTORE
0x111 PUSH1 0x20
0x113 ADD
0x114 PUSH1 0x0
0x116 SHA3
0x117 PUSH1 0x0
0x119 DUP3
0x11a DUP3
0x11b SLOAD
0x11c ADD
0x11d SWAP3
0x11e POP
0x11f POP
0x120 DUP2
0x121 SWAP1
0x122 SSTORE
0x123 POP
0x124 DUP2
0x125 PUSH1 0x2
0x127 PUSH1 0x0
0x129 DUP3
0x12a DUP3
0x12b SLOAD
0x12c ADD
0x12d SWAP3
0x12e POP
0x12f POP
0x130 DUP2
0x131 SWAP1
0x132 SSTORE
0x133 POP
0x134 PUSH1 0x6
0x136 PUSH7 0x38d7ea4c68000
0x13e DUP4
0x13f DUP2
0x140 ISZERO
0x141 ISZERO
0x142 PUSH2 0x147
0x145 JUMPI
---
0xd3: JUMPDEST 
0xd4: V64 = CALLVALUE
0xd8: V65 = 0x6
0xda: V66 = 0x0
0xdc: V67 = CALLER
0xdd: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0xf2: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0xf3: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x108: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x10a: M[0x0] = V71
0x10b: V72 = 0x20
0x10d: V73 = ADD 0x20 0x0
0x110: M[0x20] = 0x6
0x111: V74 = 0x20
0x113: V75 = ADD 0x20 0x20
0x114: V76 = 0x0
0x116: V77 = SHA3 0x0 0x40
0x117: V78 = 0x0
0x11b: V79 = S[V77]
0x11c: V80 = ADD V79 V64
0x122: S[V77] = V80
0x125: V81 = 0x2
0x127: V82 = 0x0
0x12b: V83 = S[0x2]
0x12c: V84 = ADD V83 V64
0x132: S[0x2] = V84
0x134: V85 = 0x6
0x136: V86 = 0x38d7ea4c68000
0x140: V87 = ISZERO 0x38d7ea4c68000
0x141: V88 = ISZERO 0x0
0x142: V89 = 0x147
0x145: JUMPI 0x147 0x1
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 2
Stack additions: [V64, S0, 0x6, 0x38d7ea4c68000, V64]
Exit stack: [V11, V64, 0x0, 0x6, 0x38d7ea4c68000, V64]

================================

Block 0x146
[0x146:0x146]
---
Predecessors: [0xd3]
Successors: []
---
0x146 INVALID
---
0x146: INVALID 
---
Entry stack: [V11, V64, 0x0, 0x6, 0x38d7ea4c68000, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V64, 0x0, 0x6, 0x38d7ea4c68000, V64]

================================

Block 0x147
[0x147:0x20b]
---
Predecessors: [0xd3]
Successors: [0x20c, 0x210]
---
0x147 JUMPDEST
0x148 DIV
0x149 MUL
0x14a SWAP1
0x14b POP
0x14c PUSH1 0x5
0x14e PUSH1 0x0
0x150 SWAP1
0x151 SLOAD
0x152 SWAP1
0x153 PUSH2 0x100
0x156 EXP
0x157 SWAP1
0x158 DIV
0x159 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16e AND
0x16f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x184 AND
0x185 PUSH4 0xa9059cbb
0x18a CALLER
0x18b DUP4
0x18c PUSH1 0x40
0x18e MLOAD
0x18f DUP4
0x190 PUSH4 0xffffffff
0x195 AND
0x196 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1b4 MUL
0x1b5 DUP2
0x1b6 MSTORE
0x1b7 PUSH1 0x4
0x1b9 ADD
0x1ba DUP1
0x1bb DUP4
0x1bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d1 AND
0x1d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e7 AND
0x1e8 DUP2
0x1e9 MSTORE
0x1ea PUSH1 0x20
0x1ec ADD
0x1ed DUP3
0x1ee DUP2
0x1ef MSTORE
0x1f0 PUSH1 0x20
0x1f2 ADD
0x1f3 SWAP3
0x1f4 POP
0x1f5 POP
0x1f6 POP
0x1f7 PUSH1 0x0
0x1f9 PUSH1 0x40
0x1fb MLOAD
0x1fc DUP1
0x1fd DUP4
0x1fe SUB
0x1ff DUP2
0x200 PUSH1 0x0
0x202 DUP8
0x203 DUP1
0x204 EXTCODESIZE
0x205 ISZERO
0x206 DUP1
0x207 ISZERO
0x208 PUSH2 0x210
0x20b JUMPI
---
0x147: JUMPDEST 
0x148: V90 = DIV V64 0x38d7ea4c68000
0x149: V91 = MUL V90 0x6
0x14c: V92 = 0x5
0x14e: V93 = 0x0
0x151: V94 = S[0x5]
0x153: V95 = 0x100
0x156: V96 = EXP 0x100 0x0
0x158: V97 = DIV V94 0x1
0x159: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x16e: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x16f: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x184: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x185: V102 = 0xa9059cbb
0x18a: V103 = CALLER
0x18c: V104 = 0x40
0x18e: V105 = M[0x40]
0x190: V106 = 0xffffffff
0x195: V107 = AND 0xffffffff 0xa9059cbb
0x196: V108 = 0x100000000000000000000000000000000000000000000000000000000
0x1b4: V109 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x1b6: M[V105] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1b7: V110 = 0x4
0x1b9: V111 = ADD 0x4 V105
0x1bc: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1d2: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e7: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x1e9: M[V111] = V115
0x1ea: V116 = 0x20
0x1ec: V117 = ADD 0x20 V111
0x1ef: M[V117] = V91
0x1f0: V118 = 0x20
0x1f2: V119 = ADD 0x20 V117
0x1f7: V120 = 0x0
0x1f9: V121 = 0x40
0x1fb: V122 = M[0x40]
0x1fe: V123 = SUB V119 V122
0x200: V124 = 0x0
0x204: V125 = EXTCODESIZE V101
0x205: V126 = ISZERO V125
0x207: V127 = ISZERO V126
0x208: V128 = 0x210
0x20b: JUMPI 0x210 V127
---
Entry stack: [V11, V64, 0x0, 0x6, 0x38d7ea4c68000, V64]
Stack pops: 4
Stack additions: [V91, V101, 0xa9059cbb, V119, 0x0, V122, V123, V122, 0x0, V101, V126]
Exit stack: [V11, V64, V91, V101, 0xa9059cbb, V119, 0x0, V122, V123, V122, 0x0, V101, V126]

================================

Block 0x20c
[0x20c:0x20f]
---
Predecessors: [0x147]
Successors: []
---
0x20c PUSH1 0x0
0x20e DUP1
0x20f REVERT
---
0x20c: V129 = 0x0
0x20f: REVERT 0x0 0x0
---
Entry stack: [V11, V64, V91, V101, 0xa9059cbb, V119, 0x0, V122, V123, V122, 0x0, V101, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V64, V91, V101, 0xa9059cbb, V119, 0x0, V122, V123, V122, 0x0, V101, V126]

================================

Block 0x210
[0x210:0x21a]
---
Predecessors: [0x147]
Successors: [0x21b, 0x224]
---
0x210 JUMPDEST
0x211 POP
0x212 GAS
0x213 CALL
0x214 ISZERO
0x215 DUP1
0x216 ISZERO
0x217 PUSH2 0x224
0x21a JUMPI
---
0x210: JUMPDEST 
0x212: V130 = GAS
0x213: V131 = CALL V130 V101 0x0 V122 V123 V122 0x0
0x214: V132 = ISZERO V131
0x216: V133 = ISZERO V132
0x217: V134 = 0x224
0x21a: JUMPI 0x224 V133
---
Entry stack: [V11, V64, V91, V101, 0xa9059cbb, V119, 0x0, V122, V123, V122, 0x0, V101, V126]
Stack pops: 7
Stack additions: [V132]
Exit stack: [V11, V64, V91, V101, 0xa9059cbb, V119, V132]

================================

Block 0x21b
[0x21b:0x223]
---
Predecessors: [0x210]
Successors: []
---
0x21b RETURNDATASIZE
0x21c PUSH1 0x0
0x21e DUP1
0x21f RETURNDATACOPY
0x220 RETURNDATASIZE
0x221 PUSH1 0x0
0x223 REVERT
---
0x21b: V135 = RETURNDATASIZE
0x21c: V136 = 0x0
0x21f: RETURNDATACOPY 0x0 0x0 V135
0x220: V137 = RETURNDATASIZE
0x221: V138 = 0x0
0x223: REVERT 0x0 V137
---
Entry stack: [V11, V64, V91, V101, 0xa9059cbb, V119, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V64, V91, V101, 0xa9059cbb, V119, V132]

================================

Block 0x224
[0x224:0x235]
---
Predecessors: [0x210]
Successors: [0x236, 0x2be]
---
0x224 JUMPDEST
0x225 POP
0x226 POP
0x227 POP
0x228 POP
0x229 PUSH1 0x1
0x22b SLOAD
0x22c PUSH1 0x2
0x22e SLOAD
0x22f LT
0x230 ISZERO
0x231 ISZERO
0x232 PUSH2 0x2be
0x235 JUMPI
---
0x224: JUMPDEST 
0x229: V139 = 0x1
0x22b: V140 = S[0x1]
0x22c: V141 = 0x2
0x22e: V142 = S[0x2]
0x22f: V143 = LT V142 V140
0x230: V144 = ISZERO V143
0x231: V145 = ISZERO V144
0x232: V146 = 0x2be
0x235: JUMPI 0x2be V145
---
Entry stack: [V11, V64, V91, V101, 0xa9059cbb, V119, V132]
Stack pops: 4
Stack additions: []
Exit stack: [V11, V64, V91]

================================

Block 0x236
[0x236:0x2bd]
---
Predecessors: [0x224]
Successors: [0x2be]
---
0x236 PUSH1 0x1
0x238 PUSH1 0x7
0x23a PUSH1 0x1
0x23c PUSH2 0x100
0x23f EXP
0x240 DUP2
0x241 SLOAD
0x242 DUP2
0x243 PUSH1 0xff
0x245 MUL
0x246 NOT
0x247 AND
0x248 SWAP1
0x249 DUP4
0x24a ISZERO
0x24b ISZERO
0x24c MUL
0x24d OR
0x24e SWAP1
0x24f SSTORE
0x250 POP
0x251 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x272 CALLER
0x273 PUSH1 0x2
0x275 SLOAD
0x276 PUSH1 0x40
0x278 MLOAD
0x279 DUP1
0x27a DUP4
0x27b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x290 AND
0x291 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a6 AND
0x2a7 DUP2
0x2a8 MSTORE
0x2a9 PUSH1 0x20
0x2ab ADD
0x2ac DUP3
0x2ad DUP2
0x2ae MSTORE
0x2af PUSH1 0x20
0x2b1 ADD
0x2b2 SWAP3
0x2b3 POP
0x2b4 POP
0x2b5 POP
0x2b6 PUSH1 0x40
0x2b8 MLOAD
0x2b9 DUP1
0x2ba SWAP2
0x2bb SUB
0x2bc SWAP1
0x2bd LOG1
---
0x236: V147 = 0x1
0x238: V148 = 0x7
0x23a: V149 = 0x1
0x23c: V150 = 0x100
0x23f: V151 = EXP 0x100 0x1
0x241: V152 = S[0x7]
0x243: V153 = 0xff
0x245: V154 = MUL 0xff 0x100
0x246: V155 = NOT 0xff00
0x247: V156 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V152
0x24a: V157 = ISZERO 0x1
0x24b: V158 = ISZERO 0x0
0x24c: V159 = MUL 0x1 0x100
0x24d: V160 = OR 0x100 V156
0x24f: S[0x7] = V160
0x251: V161 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x272: V162 = CALLER
0x273: V163 = 0x2
0x275: V164 = S[0x2]
0x276: V165 = 0x40
0x278: V166 = M[0x40]
0x27b: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x290: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x291: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a6: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x2a8: M[V166] = V170
0x2a9: V171 = 0x20
0x2ab: V172 = ADD 0x20 V166
0x2ae: M[V172] = V164
0x2af: V173 = 0x20
0x2b1: V174 = ADD 0x20 V172
0x2b6: V175 = 0x40
0x2b8: V176 = M[0x40]
0x2bb: V177 = SUB V174 V176
0x2bd: LOG V176 V177 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V11, V64, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V64, V91]

================================

Block 0x2be
[0x2be:0x339]
---
Predecessors: [0x224, 0x236]
Successors: []
---
0x2be JUMPDEST
0x2bf PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2e0 CALLER
0x2e1 DUP4
0x2e2 PUSH1 0x1
0x2e4 PUSH1 0x40
0x2e6 MLOAD
0x2e7 DUP1
0x2e8 DUP5
0x2e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fe AND
0x2ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x314 AND
0x315 DUP2
0x316 MSTORE
0x317 PUSH1 0x20
0x319 ADD
0x31a DUP4
0x31b DUP2
0x31c MSTORE
0x31d PUSH1 0x20
0x31f ADD
0x320 DUP3
0x321 ISZERO
0x322 ISZERO
0x323 ISZERO
0x324 ISZERO
0x325 DUP2
0x326 MSTORE
0x327 PUSH1 0x20
0x329 ADD
0x32a SWAP4
0x32b POP
0x32c POP
0x32d POP
0x32e POP
0x32f PUSH1 0x40
0x331 MLOAD
0x332 DUP1
0x333 SWAP2
0x334 SUB
0x335 SWAP1
0x336 LOG1
0x337 POP
0x338 POP
0x339 STOP
---
0x2be: JUMPDEST 
0x2bf: V178 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2e0: V179 = CALLER
0x2e2: V180 = 0x1
0x2e4: V181 = 0x40
0x2e6: V182 = M[0x40]
0x2e9: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fe: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x2ff: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x314: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x316: M[V182] = V186
0x317: V187 = 0x20
0x319: V188 = ADD 0x20 V182
0x31c: M[V188] = V64
0x31d: V189 = 0x20
0x31f: V190 = ADD 0x20 V188
0x321: V191 = ISZERO 0x1
0x322: V192 = ISZERO 0x0
0x323: V193 = ISZERO 0x1
0x324: V194 = ISZERO 0x0
0x326: M[V190] = 0x1
0x327: V195 = 0x20
0x329: V196 = ADD 0x20 V190
0x32f: V197 = 0x40
0x331: V198 = M[0x40]
0x334: V199 = SUB V196 V198
0x336: LOG V198 V199 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x339: STOP 
---
Entry stack: [V11, V64, V91]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x33a
[0x33a:0x341]
---
Predecessors: [0xd]
Successors: [0x342, 0x346]
---
0x33a JUMPDEST
0x33b CALLVALUE
0x33c DUP1
0x33d ISZERO
0x33e PUSH2 0x346
0x341 JUMPI
---
0x33a: JUMPDEST 
0x33b: V200 = CALLVALUE
0x33d: V201 = ISZERO V200
0x33e: V202 = 0x346
0x341: JUMPI 0x346 V201
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V200]
Exit stack: [V11, V200]

================================

Block 0x342
[0x342:0x345]
---
Predecessors: [0x33a]
Successors: []
---
0x342 PUSH1 0x0
0x344 DUP1
0x345 REVERT
---
0x342: V203 = 0x0
0x345: REVERT 0x0 0x0
---
Entry stack: [V11, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V200]

================================

Block 0x346
[0x346:0x34e]
---
Predecessors: [0x33a]
Successors: [0x57c]
---
0x346 JUMPDEST
0x347 POP
0x348 PUSH2 0x34f
0x34b PUSH2 0x57c
0x34e JUMP
---
0x346: JUMPDEST 
0x348: V204 = 0x34f
0x34b: V205 = 0x57c
0x34e: JUMP 0x57c
---
Entry stack: [V11, V200]
Stack pops: 1
Stack additions: [0x34f]
Exit stack: [V11, 0x34f]

================================

Block 0x34f
[0x34f:0x364]
---
Predecessors: [0x57c]
Successors: []
---
0x34f JUMPDEST
0x350 PUSH1 0x40
0x352 MLOAD
0x353 DUP1
0x354 DUP3
0x355 DUP2
0x356 MSTORE
0x357 PUSH1 0x20
0x359 ADD
0x35a SWAP2
0x35b POP
0x35c POP
0x35d PUSH1 0x40
0x35f MLOAD
0x360 DUP1
0x361 SWAP2
0x362 SUB
0x363 SWAP1
0x364 RETURN
---
0x34f: JUMPDEST 
0x350: V206 = 0x40
0x352: V207 = M[0x40]
0x356: M[V207] = V346
0x357: V208 = 0x20
0x359: V209 = ADD 0x20 V207
0x35d: V210 = 0x40
0x35f: V211 = M[0x40]
0x362: V212 = SUB V209 V211
0x364: RETURN V211 V212
---
Entry stack: [V11, 0x34f, V346]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x34f]

================================

Block 0x365
[0x365:0x36c]
---
Predecessors: [0x41]
Successors: [0x36d, 0x371]
---
0x365 JUMPDEST
0x366 CALLVALUE
0x367 DUP1
0x368 ISZERO
0x369 PUSH2 0x371
0x36c JUMPI
---
0x365: JUMPDEST 
0x366: V213 = CALLVALUE
0x368: V214 = ISZERO V213
0x369: V215 = 0x371
0x36c: JUMPI 0x371 V214
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V213]
Exit stack: [V11, V213]

================================

Block 0x36d
[0x36d:0x370]
---
Predecessors: [0x365]
Successors: []
---
0x36d PUSH1 0x0
0x36f DUP1
0x370 REVERT
---
0x36d: V216 = 0x0
0x370: REVERT 0x0 0x0
---
Entry stack: [V11, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V213]

================================

Block 0x371
[0x371:0x379]
---
Predecessors: [0x365]
Successors: [0x582]
---
0x371 JUMPDEST
0x372 POP
0x373 PUSH2 0x37a
0x376 PUSH2 0x582
0x379 JUMP
---
0x371: JUMPDEST 
0x373: V217 = 0x37a
0x376: V218 = 0x582
0x379: JUMP 0x582
---
Entry stack: [V11, V213]
Stack pops: 1
Stack additions: [0x37a]
Exit stack: [V11, 0x37a]

================================

Block 0x37a
[0x37a:0x3bb]
---
Predecessors: [0x582]
Successors: []
---
0x37a JUMPDEST
0x37b PUSH1 0x40
0x37d MLOAD
0x37e DUP1
0x37f DUP3
0x380 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x395 AND
0x396 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ab AND
0x3ac DUP2
0x3ad MSTORE
0x3ae PUSH1 0x20
0x3b0 ADD
0x3b1 SWAP2
0x3b2 POP
0x3b3 POP
0x3b4 PUSH1 0x40
0x3b6 MLOAD
0x3b7 DUP1
0x3b8 SWAP2
0x3b9 SUB
0x3ba SWAP1
0x3bb RETURN
---
0x37a: JUMPDEST 
0x37b: V219 = 0x40
0x37d: V220 = M[0x40]
0x380: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x395: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x396: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x3ad: M[V220] = V224
0x3ae: V225 = 0x20
0x3b0: V226 = ADD 0x20 V220
0x3b4: V227 = 0x40
0x3b6: V228 = M[0x40]
0x3b9: V229 = SUB V226 V228
0x3bb: RETURN V228 V229
---
Entry stack: [V11, 0x37a, V353]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x37a]

================================

Block 0x3bc
[0x3bc:0x3c3]
---
Predecessors: [0x4c]
Successors: [0x3c4, 0x3c8]
---
0x3bc JUMPDEST
0x3bd CALLVALUE
0x3be DUP1
0x3bf ISZERO
0x3c0 PUSH2 0x3c8
0x3c3 JUMPI
---
0x3bc: JUMPDEST 
0x3bd: V230 = CALLVALUE
0x3bf: V231 = ISZERO V230
0x3c0: V232 = 0x3c8
0x3c3: JUMPI 0x3c8 V231
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V230]
Exit stack: [V11, V230]

================================

Block 0x3c4
[0x3c4:0x3c7]
---
Predecessors: [0x3bc]
Successors: []
---
0x3c4 PUSH1 0x0
0x3c6 DUP1
0x3c7 REVERT
---
0x3c4: V233 = 0x0
0x3c7: REVERT 0x0 0x0
---
Entry stack: [V11, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V230]

================================

Block 0x3c8
[0x3c8:0x3d0]
---
Predecessors: [0x3bc]
Successors: [0x5a7]
---
0x3c8 JUMPDEST
0x3c9 POP
0x3ca PUSH2 0x3d1
0x3cd PUSH2 0x5a7
0x3d0 JUMP
---
0x3c8: JUMPDEST 
0x3ca: V234 = 0x3d1
0x3cd: V235 = 0x5a7
0x3d0: JUMP 0x5a7
---
Entry stack: [V11, V230]
Stack pops: 1
Stack additions: [0x3d1]
Exit stack: [V11, 0x3d1]

================================

Block 0x3d1
[0x3d1:0x412]
---
Predecessors: [0x5a7]
Successors: []
---
0x3d1 JUMPDEST
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 DUP1
0x3d6 DUP3
0x3d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ec AND
0x3ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x402 AND
0x403 DUP2
0x404 MSTORE
0x405 PUSH1 0x20
0x407 ADD
0x408 SWAP2
0x409 POP
0x40a POP
0x40b PUSH1 0x40
0x40d MLOAD
0x40e DUP1
0x40f SWAP2
0x410 SUB
0x411 SWAP1
0x412 RETURN
---
0x3d1: JUMPDEST 
0x3d2: V236 = 0x40
0x3d4: V237 = M[0x40]
0x3d7: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ec: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x3ed: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x402: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x404: M[V237] = V241
0x405: V242 = 0x20
0x407: V243 = ADD 0x20 V237
0x40b: V244 = 0x40
0x40d: V245 = M[0x40]
0x410: V246 = SUB V243 V245
0x412: RETURN V245 V246
---
Entry stack: [V11, 0x3d1, V361]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3d1]

================================

Block 0x413
[0x413:0x41a]
---
Predecessors: [0x57]
Successors: [0x41b, 0x41f]
---
0x413 JUMPDEST
0x414 CALLVALUE
0x415 DUP1
0x416 ISZERO
0x417 PUSH2 0x41f
0x41a JUMPI
---
0x413: JUMPDEST 
0x414: V247 = CALLVALUE
0x416: V248 = ISZERO V247
0x417: V249 = 0x41f
0x41a: JUMPI 0x41f V248
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V247]
Exit stack: [V11, V247]

================================

Block 0x41b
[0x41b:0x41e]
---
Predecessors: [0x413]
Successors: []
---
0x41b PUSH1 0x0
0x41d DUP1
0x41e REVERT
---
0x41b: V250 = 0x0
0x41e: REVERT 0x0 0x0
---
Entry stack: [V11, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V247]

================================

Block 0x41f
[0x41f:0x453]
---
Predecessors: [0x413]
Successors: [0x5cd]
---
0x41f JUMPDEST
0x420 POP
0x421 PUSH2 0x454
0x424 PUSH1 0x4
0x426 DUP1
0x427 CALLDATASIZE
0x428 SUB
0x429 DUP2
0x42a ADD
0x42b SWAP1
0x42c DUP1
0x42d DUP1
0x42e CALLDATALOAD
0x42f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x444 AND
0x445 SWAP1
0x446 PUSH1 0x20
0x448 ADD
0x449 SWAP1
0x44a SWAP3
0x44b SWAP2
0x44c SWAP1
0x44d POP
0x44e POP
0x44f POP
0x450 PUSH2 0x5cd
0x453 JUMP
---
0x41f: JUMPDEST 
0x421: V251 = 0x454
0x424: V252 = 0x4
0x427: V253 = CALLDATASIZE
0x428: V254 = SUB V253 0x4
0x42a: V255 = ADD 0x4 V254
0x42e: V256 = CALLDATALOAD 0x4
0x42f: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x444: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x446: V259 = 0x20
0x448: V260 = ADD 0x20 0x4
0x450: V261 = 0x5cd
0x453: JUMP 0x5cd
---
Entry stack: [V11, V247]
Stack pops: 1
Stack additions: [0x454, V258]
Exit stack: [V11, 0x454, V258]

================================

Block 0x454
[0x454:0x469]
---
Predecessors: [0x5cd]
Successors: []
---
0x454 JUMPDEST
0x455 PUSH1 0x40
0x457 MLOAD
0x458 DUP1
0x459 DUP3
0x45a DUP2
0x45b MSTORE
0x45c PUSH1 0x20
0x45e ADD
0x45f SWAP2
0x460 POP
0x461 POP
0x462 PUSH1 0x40
0x464 MLOAD
0x465 DUP1
0x466 SWAP2
0x467 SUB
0x468 SWAP1
0x469 RETURN
---
0x454: JUMPDEST 
0x455: V262 = 0x40
0x457: V263 = M[0x40]
0x45b: M[V263] = V369
0x45c: V264 = 0x20
0x45e: V265 = ADD 0x20 V263
0x462: V266 = 0x40
0x464: V267 = M[0x40]
0x467: V268 = SUB V265 V267
0x469: RETURN V267 V268
---
Entry stack: [V11, 0x454, V369]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x454]

================================

Block 0x46a
[0x46a:0x471]
---
Predecessors: [0x62]
Successors: [0x472, 0x476]
---
0x46a JUMPDEST
0x46b CALLVALUE
0x46c DUP1
0x46d ISZERO
0x46e PUSH2 0x476
0x471 JUMPI
---
0x46a: JUMPDEST 
0x46b: V269 = CALLVALUE
0x46d: V270 = ISZERO V269
0x46e: V271 = 0x476
0x471: JUMPI 0x476 V270
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V269]
Exit stack: [V11, V269]

================================

Block 0x472
[0x472:0x475]
---
Predecessors: [0x46a]
Successors: []
---
0x472 PUSH1 0x0
0x474 DUP1
0x475 REVERT
---
0x472: V272 = 0x0
0x475: REVERT 0x0 0x0
---
Entry stack: [V11, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V269]

================================

Block 0x476
[0x476:0x47e]
---
Predecessors: [0x46a]
Successors: [0x5e5]
---
0x476 JUMPDEST
0x477 POP
0x478 PUSH2 0x47f
0x47b PUSH2 0x5e5
0x47e JUMP
---
0x476: JUMPDEST 
0x478: V273 = 0x47f
0x47b: V274 = 0x5e5
0x47e: JUMP 0x5e5
---
Entry stack: [V11, V269]
Stack pops: 1
Stack additions: [0x47f]
Exit stack: [V11, 0x47f]

================================

Block 0x47f
[0x47f:0x494]
---
Predecessors: [0x5e5]
Successors: []
---
0x47f JUMPDEST
0x480 PUSH1 0x40
0x482 MLOAD
0x483 DUP1
0x484 DUP3
0x485 DUP2
0x486 MSTORE
0x487 PUSH1 0x20
0x489 ADD
0x48a SWAP2
0x48b POP
0x48c POP
0x48d PUSH1 0x40
0x48f MLOAD
0x490 DUP1
0x491 SWAP2
0x492 SUB
0x493 SWAP1
0x494 RETURN
---
0x47f: JUMPDEST 
0x480: V275 = 0x40
0x482: V276 = M[0x40]
0x486: M[V276] = V371
0x487: V277 = 0x20
0x489: V278 = ADD 0x20 V276
0x48d: V279 = 0x40
0x48f: V280 = M[0x40]
0x492: V281 = SUB V278 V280
0x494: RETURN V280 V281
---
Entry stack: [V11, 0x47f, V371]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x47f]

================================

Block 0x495
[0x495:0x49c]
---
Predecessors: [0x6d]
Successors: [0x49d, 0x4a1]
---
0x495 JUMPDEST
0x496 CALLVALUE
0x497 DUP1
0x498 ISZERO
0x499 PUSH2 0x4a1
0x49c JUMPI
---
0x495: JUMPDEST 
0x496: V282 = CALLVALUE
0x498: V283 = ISZERO V282
0x499: V284 = 0x4a1
0x49c: JUMPI 0x4a1 V283
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V282]
Exit stack: [V11, V282]

================================

Block 0x49d
[0x49d:0x4a0]
---
Predecessors: [0x495]
Successors: []
---
0x49d PUSH1 0x0
0x49f DUP1
0x4a0 REVERT
---
0x49d: V285 = 0x0
0x4a0: REVERT 0x0 0x0
---
Entry stack: [V11, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V282]

================================

Block 0x4a1
[0x4a1:0x4a9]
---
Predecessors: [0x495]
Successors: [0x5eb]
---
0x4a1 JUMPDEST
0x4a2 POP
0x4a3 PUSH2 0x4aa
0x4a6 PUSH2 0x5eb
0x4a9 JUMP
---
0x4a1: JUMPDEST 
0x4a3: V286 = 0x4aa
0x4a6: V287 = 0x5eb
0x4a9: JUMP 0x5eb
---
Entry stack: [V11, V282]
Stack pops: 1
Stack additions: [0x4aa]
Exit stack: [V11, 0x4aa]

================================

Block 0x4aa
[0x4aa:0x4bf]
---
Predecessors: [0x5eb]
Successors: []
---
0x4aa JUMPDEST
0x4ab PUSH1 0x40
0x4ad MLOAD
0x4ae DUP1
0x4af DUP3
0x4b0 DUP2
0x4b1 MSTORE
0x4b2 PUSH1 0x20
0x4b4 ADD
0x4b5 SWAP2
0x4b6 POP
0x4b7 POP
0x4b8 PUSH1 0x40
0x4ba MLOAD
0x4bb DUP1
0x4bc SWAP2
0x4bd SUB
0x4be SWAP1
0x4bf RETURN
---
0x4aa: JUMPDEST 
0x4ab: V288 = 0x40
0x4ad: V289 = M[0x40]
0x4b1: M[V289] = V373
0x4b2: V290 = 0x20
0x4b4: V291 = ADD 0x20 V289
0x4b8: V292 = 0x40
0x4ba: V293 = M[0x40]
0x4bd: V294 = SUB V291 V293
0x4bf: RETURN V293 V294
---
Entry stack: [V11, 0x4aa, V373]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4aa]

================================

Block 0x4c0
[0x4c0:0x4c7]
---
Predecessors: [0x78]
Successors: [0x4c8, 0x4cc]
---
0x4c0 JUMPDEST
0x4c1 CALLVALUE
0x4c2 DUP1
0x4c3 ISZERO
0x4c4 PUSH2 0x4cc
0x4c7 JUMPI
---
0x4c0: JUMPDEST 
0x4c1: V295 = CALLVALUE
0x4c3: V296 = ISZERO V295
0x4c4: V297 = 0x4cc
0x4c7: JUMPI 0x4cc V296
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V295]
Exit stack: [V11, V295]

================================

Block 0x4c8
[0x4c8:0x4cb]
---
Predecessors: [0x4c0]
Successors: []
---
0x4c8 PUSH1 0x0
0x4ca DUP1
0x4cb REVERT
---
0x4c8: V298 = 0x0
0x4cb: REVERT 0x0 0x0
---
Entry stack: [V11, V295]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V295]

================================

Block 0x4cc
[0x4cc:0x4d4]
---
Predecessors: [0x4c0]
Successors: [0x5f1]
---
0x4cc JUMPDEST
0x4cd POP
0x4ce PUSH2 0x4d5
0x4d1 PUSH2 0x5f1
0x4d4 JUMP
---
0x4cc: JUMPDEST 
0x4ce: V299 = 0x4d5
0x4d1: V300 = 0x5f1
0x4d4: JUMP 0x5f1
---
Entry stack: [V11, V295]
Stack pops: 1
Stack additions: [0x4d5]
Exit stack: [V11, 0x4d5]

================================

Block 0x4d5
[0x4d5:0x4ea]
---
Predecessors: [0x5f1]
Successors: []
---
0x4d5 JUMPDEST
0x4d6 PUSH1 0x40
0x4d8 MLOAD
0x4d9 DUP1
0x4da DUP3
0x4db DUP2
0x4dc MSTORE
0x4dd PUSH1 0x20
0x4df ADD
0x4e0 SWAP2
0x4e1 POP
0x4e2 POP
0x4e3 PUSH1 0x40
0x4e5 MLOAD
0x4e6 DUP1
0x4e7 SWAP2
0x4e8 SUB
0x4e9 SWAP1
0x4ea RETURN
---
0x4d5: JUMPDEST 
0x4d6: V301 = 0x40
0x4d8: V302 = M[0x40]
0x4dc: M[V302] = V375
0x4dd: V303 = 0x20
0x4df: V304 = ADD 0x20 V302
0x4e3: V305 = 0x40
0x4e5: V306 = M[0x40]
0x4e8: V307 = SUB V304 V306
0x4ea: RETURN V306 V307
---
Entry stack: [V11, 0x4d5, V375]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4d5]

================================

Block 0x4eb
[0x4eb:0x4f2]
---
Predecessors: [0x83]
Successors: [0x4f3, 0x4f7]
---
0x4eb JUMPDEST
0x4ec CALLVALUE
0x4ed DUP1
0x4ee ISZERO
0x4ef PUSH2 0x4f7
0x4f2 JUMPI
---
0x4eb: JUMPDEST 
0x4ec: V308 = CALLVALUE
0x4ee: V309 = ISZERO V308
0x4ef: V310 = 0x4f7
0x4f2: JUMPI 0x4f7 V309
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V308]
Exit stack: [V11, V308]

================================

Block 0x4f3
[0x4f3:0x4f6]
---
Predecessors: [0x4eb]
Successors: []
---
0x4f3 PUSH1 0x0
0x4f5 DUP1
0x4f6 REVERT
---
0x4f3: V311 = 0x0
0x4f6: REVERT 0x0 0x0
---
Entry stack: [V11, V308]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V308]

================================

Block 0x4f7
[0x4f7:0x515]
---
Predecessors: [0x4eb]
Successors: [0x5f7]
---
0x4f7 JUMPDEST
0x4f8 POP
0x4f9 PUSH2 0x516
0x4fc PUSH1 0x4
0x4fe DUP1
0x4ff CALLDATASIZE
0x500 SUB
0x501 DUP2
0x502 ADD
0x503 SWAP1
0x504 DUP1
0x505 DUP1
0x506 CALLDATALOAD
0x507 SWAP1
0x508 PUSH1 0x20
0x50a ADD
0x50b SWAP1
0x50c SWAP3
0x50d SWAP2
0x50e SWAP1
0x50f POP
0x510 POP
0x511 POP
0x512 PUSH2 0x5f7
0x515 JUMP
---
0x4f7: JUMPDEST 
0x4f9: V312 = 0x516
0x4fc: V313 = 0x4
0x4ff: V314 = CALLDATASIZE
0x500: V315 = SUB V314 0x4
0x502: V316 = ADD 0x4 V315
0x506: V317 = CALLDATALOAD 0x4
0x508: V318 = 0x20
0x50a: V319 = ADD 0x20 0x4
0x512: V320 = 0x5f7
0x515: JUMP 0x5f7
---
Entry stack: [V11, V308]
Stack pops: 1
Stack additions: [0x516, V317]
Exit stack: [V11, 0x516, V317]

================================

Block 0x516
[0x516:0x517]
---
Predecessors: [0x74a]
Successors: []
---
0x516 JUMPDEST
0x517 STOP
---
0x516: JUMPDEST 
0x517: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x518
[0x518:0x51f]
---
Predecessors: [0x8e]
Successors: [0x520, 0x524]
---
0x518 JUMPDEST
0x519 CALLVALUE
0x51a DUP1
0x51b ISZERO
0x51c PUSH2 0x524
0x51f JUMPI
---
0x518: JUMPDEST 
0x519: V321 = CALLVALUE
0x51b: V322 = ISZERO V321
0x51c: V323 = 0x524
0x51f: JUMPI 0x524 V322
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V321]
Exit stack: [V11, V321]

================================

Block 0x520
[0x520:0x523]
---
Predecessors: [0x518]
Successors: []
---
0x520 PUSH1 0x0
0x522 DUP1
0x523 REVERT
---
0x520: V324 = 0x0
0x523: REVERT 0x0 0x0
---
Entry stack: [V11, V321]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V321]

================================

Block 0x524
[0x524:0x562]
---
Predecessors: [0x518]
Successors: [0x74d]
---
0x524 JUMPDEST
0x525 POP
0x526 PUSH2 0x563
0x529 PUSH1 0x4
0x52b DUP1
0x52c CALLDATASIZE
0x52d SUB
0x52e DUP2
0x52f ADD
0x530 SWAP1
0x531 DUP1
0x532 DUP1
0x533 CALLDATALOAD
0x534 SWAP1
0x535 PUSH1 0x20
0x537 ADD
0x538 SWAP1
0x539 SWAP3
0x53a SWAP2
0x53b SWAP1
0x53c DUP1
0x53d CALLDATALOAD
0x53e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x553 AND
0x554 SWAP1
0x555 PUSH1 0x20
0x557 ADD
0x558 SWAP1
0x559 SWAP3
0x55a SWAP2
0x55b SWAP1
0x55c POP
0x55d POP
0x55e POP
0x55f PUSH2 0x74d
0x562 JUMP
---
0x524: JUMPDEST 
0x526: V325 = 0x563
0x529: V326 = 0x4
0x52c: V327 = CALLDATASIZE
0x52d: V328 = SUB V327 0x4
0x52f: V329 = ADD 0x4 V328
0x533: V330 = CALLDATALOAD 0x4
0x535: V331 = 0x20
0x537: V332 = ADD 0x20 0x4
0x53d: V333 = CALLDATALOAD 0x24
0x53e: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x553: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x555: V336 = 0x20
0x557: V337 = ADD 0x20 0x24
0x55f: V338 = 0x74d
0x562: JUMP 0x74d
---
Entry stack: [V11, V321]
Stack pops: 1
Stack additions: [0x563, V330, V335]
Exit stack: [V11, 0x563, V330, V335]

================================

Block 0x563
[0x563:0x564]
---
Predecessors: [0x876]
Successors: []
---
0x563 JUMPDEST
0x564 STOP
---
0x563: JUMPDEST 
0x564: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x565
[0x565:0x56c]
---
Predecessors: [0x99]
Successors: [0x56d, 0x571]
---
0x565 JUMPDEST
0x566 CALLVALUE
0x567 DUP1
0x568 ISZERO
0x569 PUSH2 0x571
0x56c JUMPI
---
0x565: JUMPDEST 
0x566: V339 = CALLVALUE
0x568: V340 = ISZERO V339
0x569: V341 = 0x571
0x56c: JUMPI 0x571 V340
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V339]
Exit stack: [V11, V339]

================================

Block 0x56d
[0x56d:0x570]
---
Predecessors: [0x565]
Successors: []
---
0x56d PUSH1 0x0
0x56f DUP1
0x570 REVERT
---
0x56d: V342 = 0x0
0x570: REVERT 0x0 0x0
---
Entry stack: [V11, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V339]

================================

Block 0x571
[0x571:0x579]
---
Predecessors: [0x565]
Successors: [0x87a]
---
0x571 JUMPDEST
0x572 POP
0x573 PUSH2 0x57a
0x576 PUSH2 0x87a
0x579 JUMP
---
0x571: JUMPDEST 
0x573: V343 = 0x57a
0x576: V344 = 0x87a
0x579: JUMP 0x87a
---
Entry stack: [V11, V339]
Stack pops: 1
Stack additions: [0x57a]
Exit stack: [V11, 0x57a]

================================

Block 0x57a
[0x57a:0x57b]
---
Predecessors: [0xa09]
Successors: []
---
0x57a JUMPDEST
0x57b STOP
---
0x57a: JUMPDEST 
0x57b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x57c
[0x57c:0x581]
---
Predecessors: [0x346]
Successors: [0x34f]
---
0x57c JUMPDEST
0x57d PUSH1 0x3
0x57f SLOAD
0x580 DUP2
0x581 JUMP
---
0x57c: JUMPDEST 
0x57d: V345 = 0x3
0x57f: V346 = S[0x3]
0x581: JUMP 0x34f
---
Entry stack: [V11, 0x34f]
Stack pops: 1
Stack additions: [S0, V346]
Exit stack: [V11, 0x34f, V346]

================================

Block 0x582
[0x582:0x5a6]
---
Predecessors: [0x371]
Successors: [0x37a]
---
0x582 JUMPDEST
0x583 PUSH1 0x0
0x585 DUP1
0x586 SWAP1
0x587 SLOAD
0x588 SWAP1
0x589 PUSH2 0x100
0x58c EXP
0x58d SWAP1
0x58e DIV
0x58f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a4 AND
0x5a5 DUP2
0x5a6 JUMP
---
0x582: JUMPDEST 
0x583: V347 = 0x0
0x587: V348 = S[0x0]
0x589: V349 = 0x100
0x58c: V350 = EXP 0x100 0x0
0x58e: V351 = DIV V348 0x1
0x58f: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a4: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x5a6: JUMP 0x37a
---
Entry stack: [V11, 0x37a]
Stack pops: 1
Stack additions: [S0, V353]
Exit stack: [V11, 0x37a, V353]

================================

Block 0x5a7
[0x5a7:0x5cc]
---
Predecessors: [0x3c8]
Successors: [0x3d1]
---
0x5a7 JUMPDEST
0x5a8 PUSH1 0x5
0x5aa PUSH1 0x0
0x5ac SWAP1
0x5ad SLOAD
0x5ae SWAP1
0x5af PUSH2 0x100
0x5b2 EXP
0x5b3 SWAP1
0x5b4 DIV
0x5b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ca AND
0x5cb DUP2
0x5cc JUMP
---
0x5a7: JUMPDEST 
0x5a8: V354 = 0x5
0x5aa: V355 = 0x0
0x5ad: V356 = S[0x5]
0x5af: V357 = 0x100
0x5b2: V358 = EXP 0x100 0x0
0x5b4: V359 = DIV V356 0x1
0x5b5: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ca: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x5cc: JUMP 0x3d1
---
Entry stack: [V11, 0x3d1]
Stack pops: 1
Stack additions: [S0, V361]
Exit stack: [V11, 0x3d1, V361]

================================

Block 0x5cd
[0x5cd:0x5e4]
---
Predecessors: [0x41f]
Successors: [0x454]
---
0x5cd JUMPDEST
0x5ce PUSH1 0x6
0x5d0 PUSH1 0x20
0x5d2 MSTORE
0x5d3 DUP1
0x5d4 PUSH1 0x0
0x5d6 MSTORE
0x5d7 PUSH1 0x40
0x5d9 PUSH1 0x0
0x5db SHA3
0x5dc PUSH1 0x0
0x5de SWAP2
0x5df POP
0x5e0 SWAP1
0x5e1 POP
0x5e2 SLOAD
0x5e3 DUP2
0x5e4 JUMP
---
0x5cd: JUMPDEST 
0x5ce: V362 = 0x6
0x5d0: V363 = 0x20
0x5d2: M[0x20] = 0x6
0x5d4: V364 = 0x0
0x5d6: M[0x0] = V258
0x5d7: V365 = 0x40
0x5d9: V366 = 0x0
0x5db: V367 = SHA3 0x0 0x40
0x5dc: V368 = 0x0
0x5e2: V369 = S[V367]
0x5e4: JUMP 0x454
---
Entry stack: [V11, 0x454, V258]
Stack pops: 2
Stack additions: [S1, V369]
Exit stack: [V11, 0x454, V369]

================================

Block 0x5e5
[0x5e5:0x5ea]
---
Predecessors: [0x476]
Successors: [0x47f]
---
0x5e5 JUMPDEST
0x5e6 PUSH1 0x1
0x5e8 SLOAD
0x5e9 DUP2
0x5ea JUMP
---
0x5e5: JUMPDEST 
0x5e6: V370 = 0x1
0x5e8: V371 = S[0x1]
0x5ea: JUMP 0x47f
---
Entry stack: [V11, 0x47f]
Stack pops: 1
Stack additions: [S0, V371]
Exit stack: [V11, 0x47f, V371]

================================

Block 0x5eb
[0x5eb:0x5f0]
---
Predecessors: [0x4a1]
Successors: [0x4aa]
---
0x5eb JUMPDEST
0x5ec PUSH1 0x2
0x5ee SLOAD
0x5ef DUP2
0x5f0 JUMP
---
0x5eb: JUMPDEST 
0x5ec: V372 = 0x2
0x5ee: V373 = S[0x2]
0x5f0: JUMP 0x4aa
---
Entry stack: [V11, 0x4aa]
Stack pops: 1
Stack additions: [S0, V373]
Exit stack: [V11, 0x4aa, V373]

================================

Block 0x5f1
[0x5f1:0x5f6]
---
Predecessors: [0x4cc]
Successors: [0x4d5]
---
0x5f1 JUMPDEST
0x5f2 PUSH1 0x4
0x5f4 SLOAD
0x5f5 DUP2
0x5f6 JUMP
---
0x5f1: JUMPDEST 
0x5f2: V374 = 0x4
0x5f4: V375 = S[0x4]
0x5f6: JUMP 0x4d5
---
Entry stack: [V11, 0x4d5]
Stack pops: 1
Stack additions: [S0, V375]
Exit stack: [V11, 0x4d5, V375]

================================

Block 0x5f7
[0x5f7:0x602]
---
Predecessors: [0x4f7]
Successors: [0x603, 0x60c]
---
0x5f7 JUMPDEST
0x5f8 PUSH1 0x3
0x5fa SLOAD
0x5fb TIMESTAMP
0x5fc LT
0x5fd ISZERO
0x5fe DUP1
0x5ff PUSH2 0x60c
0x602 JUMPI
---
0x5f7: JUMPDEST 
0x5f8: V376 = 0x3
0x5fa: V377 = S[0x3]
0x5fb: V378 = TIMESTAMP
0x5fc: V379 = LT V378 V377
0x5fd: V380 = ISZERO V379
0x5ff: V381 = 0x60c
0x602: JUMPI 0x60c V380
---
Entry stack: [V11, 0x516, V317]
Stack pops: 0
Stack additions: [V380]
Exit stack: [V11, 0x516, V317, V380]

================================

Block 0x603
[0x603:0x60b]
---
Predecessors: [0x5f7]
Successors: [0x60c]
---
0x603 POP
0x604 PUSH1 0x1
0x606 SLOAD
0x607 PUSH1 0x2
0x609 SLOAD
0x60a LT
0x60b ISZERO
---
0x604: V382 = 0x1
0x606: V383 = S[0x1]
0x607: V384 = 0x2
0x609: V385 = S[0x2]
0x60a: V386 = LT V385 V383
0x60b: V387 = ISZERO V386
---
Entry stack: [V11, 0x516, V317, V380]
Stack pops: 1
Stack additions: [V387]
Exit stack: [V11, 0x516, V317, V387]

================================

Block 0x60c
[0x60c:0x612]
---
Predecessors: [0x5f7, 0x603]
Successors: [0x613, 0x617]
---
0x60c JUMPDEST
0x60d ISZERO
0x60e ISZERO
0x60f PUSH2 0x617
0x612 JUMPI
---
0x60c: JUMPDEST 
0x60d: V388 = ISZERO S0
0x60e: V389 = ISZERO V388
0x60f: V390 = 0x617
0x612: JUMPI 0x617 V389
---
Entry stack: [V11, 0x516, V317, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x516, V317]

================================

Block 0x613
[0x613:0x616]
---
Predecessors: [0x60c]
Successors: []
---
0x613 PUSH1 0x0
0x615 DUP1
0x616 REVERT
---
0x613: V391 = 0x0
0x616: REVERT 0x0 0x0
---
Entry stack: [V11, 0x516, V317]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x516, V317]

================================

Block 0x617
[0x617:0x66c]
---
Predecessors: [0x60c]
Successors: [0x66d, 0x74a]
---
0x617 JUMPDEST
0x618 CALLER
0x619 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62e AND
0x62f PUSH1 0x0
0x631 DUP1
0x632 SWAP1
0x633 SLOAD
0x634 SWAP1
0x635 PUSH2 0x100
0x638 EXP
0x639 SWAP1
0x63a DIV
0x63b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x650 AND
0x651 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x666 AND
0x667 EQ
0x668 ISZERO
0x669 PUSH2 0x74a
0x66c JUMPI
---
0x617: JUMPDEST 
0x618: V392 = CALLER
0x619: V393 = 0xffffffffffffffffffffffffffffffffffffffff
0x62e: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x62f: V395 = 0x0
0x633: V396 = S[0x0]
0x635: V397 = 0x100
0x638: V398 = EXP 0x100 0x0
0x63a: V399 = DIV V396 0x1
0x63b: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x650: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x651: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x666: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x667: V404 = EQ V403 V394
0x668: V405 = ISZERO V404
0x669: V406 = 0x74a
0x66c: JUMPI 0x74a V405
---
Entry stack: [V11, 0x516, V317]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x516, V317]

================================

Block 0x66d
[0x66d:0x72c]
---
Predecessors: [0x617]
Successors: [0x72d, 0x731]
---
0x66d PUSH1 0x5
0x66f PUSH1 0x0
0x671 SWAP1
0x672 SLOAD
0x673 SWAP1
0x674 PUSH2 0x100
0x677 EXP
0x678 SWAP1
0x679 DIV
0x67a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68f AND
0x690 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a5 AND
0x6a6 PUSH4 0xa9059cbb
0x6ab CALLER
0x6ac DUP4
0x6ad PUSH1 0x40
0x6af MLOAD
0x6b0 DUP4
0x6b1 PUSH4 0xffffffff
0x6b6 AND
0x6b7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6d5 MUL
0x6d6 DUP2
0x6d7 MSTORE
0x6d8 PUSH1 0x4
0x6da ADD
0x6db DUP1
0x6dc DUP4
0x6dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f2 AND
0x6f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x708 AND
0x709 DUP2
0x70a MSTORE
0x70b PUSH1 0x20
0x70d ADD
0x70e DUP3
0x70f DUP2
0x710 MSTORE
0x711 PUSH1 0x20
0x713 ADD
0x714 SWAP3
0x715 POP
0x716 POP
0x717 POP
0x718 PUSH1 0x0
0x71a PUSH1 0x40
0x71c MLOAD
0x71d DUP1
0x71e DUP4
0x71f SUB
0x720 DUP2
0x721 PUSH1 0x0
0x723 DUP8
0x724 DUP1
0x725 EXTCODESIZE
0x726 ISZERO
0x727 DUP1
0x728 ISZERO
0x729 PUSH2 0x731
0x72c JUMPI
---
0x66d: V407 = 0x5
0x66f: V408 = 0x0
0x672: V409 = S[0x5]
0x674: V410 = 0x100
0x677: V411 = EXP 0x100 0x0
0x679: V412 = DIV V409 0x1
0x67a: V413 = 0xffffffffffffffffffffffffffffffffffffffff
0x68f: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x690: V415 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a5: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x6a6: V417 = 0xa9059cbb
0x6ab: V418 = CALLER
0x6ad: V419 = 0x40
0x6af: V420 = M[0x40]
0x6b1: V421 = 0xffffffff
0x6b6: V422 = AND 0xffffffff 0xa9059cbb
0x6b7: V423 = 0x100000000000000000000000000000000000000000000000000000000
0x6d5: V424 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x6d7: M[V420] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6d8: V425 = 0x4
0x6da: V426 = ADD 0x4 V420
0x6dd: V427 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f2: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x6f3: V429 = 0xffffffffffffffffffffffffffffffffffffffff
0x708: V430 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x70a: M[V426] = V430
0x70b: V431 = 0x20
0x70d: V432 = ADD 0x20 V426
0x710: M[V432] = V317
0x711: V433 = 0x20
0x713: V434 = ADD 0x20 V432
0x718: V435 = 0x0
0x71a: V436 = 0x40
0x71c: V437 = M[0x40]
0x71f: V438 = SUB V434 V437
0x721: V439 = 0x0
0x725: V440 = EXTCODESIZE V416
0x726: V441 = ISZERO V440
0x728: V442 = ISZERO V441
0x729: V443 = 0x731
0x72c: JUMPI 0x731 V442
---
Entry stack: [V11, 0x516, V317]
Stack pops: 1
Stack additions: [S0, V416, 0xa9059cbb, V434, 0x0, V437, V438, V437, 0x0, V416, V441]
Exit stack: [V11, 0x516, V317, V416, 0xa9059cbb, V434, 0x0, V437, V438, V437, 0x0, V416, V441]

================================

Block 0x72d
[0x72d:0x730]
---
Predecessors: [0x66d]
Successors: []
---
0x72d PUSH1 0x0
0x72f DUP1
0x730 REVERT
---
0x72d: V444 = 0x0
0x730: REVERT 0x0 0x0
---
Entry stack: [V11, 0x516, V317, V416, 0xa9059cbb, V434, 0x0, V437, V438, V437, 0x0, V416, V441]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x516, V317, V416, 0xa9059cbb, V434, 0x0, V437, V438, V437, 0x0, V416, V441]

================================

Block 0x731
[0x731:0x73b]
---
Predecessors: [0x66d]
Successors: [0x73c, 0x745]
---
0x731 JUMPDEST
0x732 POP
0x733 GAS
0x734 CALL
0x735 ISZERO
0x736 DUP1
0x737 ISZERO
0x738 PUSH2 0x745
0x73b JUMPI
---
0x731: JUMPDEST 
0x733: V445 = GAS
0x734: V446 = CALL V445 V416 0x0 V437 V438 V437 0x0
0x735: V447 = ISZERO V446
0x737: V448 = ISZERO V447
0x738: V449 = 0x745
0x73b: JUMPI 0x745 V448
---
Entry stack: [V11, 0x516, V317, V416, 0xa9059cbb, V434, 0x0, V437, V438, V437, 0x0, V416, V441]
Stack pops: 7
Stack additions: [V447]
Exit stack: [V11, 0x516, V317, V416, 0xa9059cbb, V434, V447]

================================

Block 0x73c
[0x73c:0x744]
---
Predecessors: [0x731]
Successors: []
---
0x73c RETURNDATASIZE
0x73d PUSH1 0x0
0x73f DUP1
0x740 RETURNDATACOPY
0x741 RETURNDATASIZE
0x742 PUSH1 0x0
0x744 REVERT
---
0x73c: V450 = RETURNDATASIZE
0x73d: V451 = 0x0
0x740: RETURNDATACOPY 0x0 0x0 V450
0x741: V452 = RETURNDATASIZE
0x742: V453 = 0x0
0x744: REVERT 0x0 V452
---
Entry stack: [V11, 0x516, V317, V416, 0xa9059cbb, V434, V447]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x516, V317, V416, 0xa9059cbb, V434, V447]

================================

Block 0x745
[0x745:0x749]
---
Predecessors: [0x731]
Successors: [0x74a]
---
0x745 JUMPDEST
0x746 POP
0x747 POP
0x748 POP
0x749 POP
---
0x745: JUMPDEST 
---
Entry stack: [V11, 0x516, V317, V416, 0xa9059cbb, V434, V447]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x516, V317]

================================

Block 0x74a
[0x74a:0x74c]
---
Predecessors: [0x617, 0x745]
Successors: [0x516]
---
0x74a JUMPDEST
0x74b POP
0x74c JUMP
---
0x74a: JUMPDEST 
0x74c: JUMP 0x516
---
Entry stack: [V11, 0x516, V317]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x74d
[0x74d:0x758]
---
Predecessors: [0x524]
Successors: [0x759, 0x762]
---
0x74d JUMPDEST
0x74e PUSH1 0x3
0x750 SLOAD
0x751 TIMESTAMP
0x752 LT
0x753 ISZERO
0x754 DUP1
0x755 PUSH2 0x762
0x758 JUMPI
---
0x74d: JUMPDEST 
0x74e: V454 = 0x3
0x750: V455 = S[0x3]
0x751: V456 = TIMESTAMP
0x752: V457 = LT V456 V455
0x753: V458 = ISZERO V457
0x755: V459 = 0x762
0x758: JUMPI 0x762 V458
---
Entry stack: [V11, 0x563, V330, V335]
Stack pops: 0
Stack additions: [V458]
Exit stack: [V11, 0x563, V330, V335, V458]

================================

Block 0x759
[0x759:0x761]
---
Predecessors: [0x74d]
Successors: [0x762]
---
0x759 POP
0x75a PUSH1 0x1
0x75c SLOAD
0x75d PUSH1 0x2
0x75f SLOAD
0x760 LT
0x761 ISZERO
---
0x75a: V460 = 0x1
0x75c: V461 = S[0x1]
0x75d: V462 = 0x2
0x75f: V463 = S[0x2]
0x760: V464 = LT V463 V461
0x761: V465 = ISZERO V464
---
Entry stack: [V11, 0x563, V330, V335, V458]
Stack pops: 1
Stack additions: [V465]
Exit stack: [V11, 0x563, V330, V335, V465]

================================

Block 0x762
[0x762:0x768]
---
Predecessors: [0x74d, 0x759]
Successors: [0x769, 0x76d]
---
0x762 JUMPDEST
0x763 ISZERO
0x764 ISZERO
0x765 PUSH2 0x76d
0x768 JUMPI
---
0x762: JUMPDEST 
0x763: V466 = ISZERO S0
0x764: V467 = ISZERO V466
0x765: V468 = 0x76d
0x768: JUMPI 0x76d V467
---
Entry stack: [V11, 0x563, V330, V335, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x563, V330, V335]

================================

Block 0x769
[0x769:0x76c]
---
Predecessors: [0x762]
Successors: []
---
0x769 PUSH1 0x0
0x76b DUP1
0x76c REVERT
---
0x769: V469 = 0x0
0x76c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x563, V330, V335]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x563, V330, V335]

================================

Block 0x76d
[0x76d:0x7c2]
---
Predecessors: [0x762]
Successors: [0x7c3, 0x876]
---
0x76d JUMPDEST
0x76e CALLER
0x76f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x784 AND
0x785 PUSH1 0x0
0x787 DUP1
0x788 SWAP1
0x789 SLOAD
0x78a SWAP1
0x78b PUSH2 0x100
0x78e EXP
0x78f SWAP1
0x790 DIV
0x791 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a6 AND
0x7a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7bc AND
0x7bd EQ
0x7be ISZERO
0x7bf PUSH2 0x876
0x7c2 JUMPI
---
0x76d: JUMPDEST 
0x76e: V470 = CALLER
0x76f: V471 = 0xffffffffffffffffffffffffffffffffffffffff
0x784: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x785: V473 = 0x0
0x789: V474 = S[0x0]
0x78b: V475 = 0x100
0x78e: V476 = EXP 0x100 0x0
0x790: V477 = DIV V474 0x1
0x791: V478 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a6: V479 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x7a7: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x7bc: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x7bd: V482 = EQ V481 V472
0x7be: V483 = ISZERO V482
0x7bf: V484 = 0x876
0x7c2: JUMPI 0x876 V483
---
Entry stack: [V11, 0x563, V330, V335]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x563, V330, V335]

================================

Block 0x7c3
[0x7c3:0x7fc]
---
Predecessors: [0x76d]
Successors: [0x7fd, 0x875]
---
0x7c3 DUP1
0x7c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d9 AND
0x7da PUSH2 0x8fc
0x7dd DUP4
0x7de SWAP1
0x7df DUP2
0x7e0 ISZERO
0x7e1 MUL
0x7e2 SWAP1
0x7e3 PUSH1 0x40
0x7e5 MLOAD
0x7e6 PUSH1 0x0
0x7e8 PUSH1 0x40
0x7ea MLOAD
0x7eb DUP1
0x7ec DUP4
0x7ed SUB
0x7ee DUP2
0x7ef DUP6
0x7f0 DUP9
0x7f1 DUP9
0x7f2 CALL
0x7f3 SWAP4
0x7f4 POP
0x7f5 POP
0x7f6 POP
0x7f7 POP
0x7f8 ISZERO
0x7f9 PUSH2 0x875
0x7fc JUMPI
---
0x7c4: V485 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d9: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x7da: V487 = 0x8fc
0x7e0: V488 = ISZERO V330
0x7e1: V489 = MUL V488 0x8fc
0x7e3: V490 = 0x40
0x7e5: V491 = M[0x40]
0x7e6: V492 = 0x0
0x7e8: V493 = 0x40
0x7ea: V494 = M[0x40]
0x7ed: V495 = SUB V491 V494
0x7f2: V496 = CALL V489 V486 V330 V494 V495 V494 0x0
0x7f8: V497 = ISZERO V496
0x7f9: V498 = 0x875
0x7fc: JUMPI 0x875 V497
---
Entry stack: [V11, 0x563, V330, V335]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x563, V330, V335]

================================

Block 0x7fd
[0x7fd:0x874]
---
Predecessors: [0x7c3]
Successors: [0x875]
---
0x7fd PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x81e DUP2
0x81f DUP4
0x820 PUSH1 0x0
0x822 PUSH1 0x40
0x824 MLOAD
0x825 DUP1
0x826 DUP5
0x827 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83c AND
0x83d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x852 AND
0x853 DUP2
0x854 MSTORE
0x855 PUSH1 0x20
0x857 ADD
0x858 DUP4
0x859 DUP2
0x85a MSTORE
0x85b PUSH1 0x20
0x85d ADD
0x85e DUP3
0x85f ISZERO
0x860 ISZERO
0x861 ISZERO
0x862 ISZERO
0x863 DUP2
0x864 MSTORE
0x865 PUSH1 0x20
0x867 ADD
0x868 SWAP4
0x869 POP
0x86a POP
0x86b POP
0x86c POP
0x86d PUSH1 0x40
0x86f MLOAD
0x870 DUP1
0x871 SWAP2
0x872 SUB
0x873 SWAP1
0x874 LOG1
---
0x7fd: V499 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x820: V500 = 0x0
0x822: V501 = 0x40
0x824: V502 = M[0x40]
0x827: V503 = 0xffffffffffffffffffffffffffffffffffffffff
0x83c: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x83d: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0x852: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x854: M[V502] = V506
0x855: V507 = 0x20
0x857: V508 = ADD 0x20 V502
0x85a: M[V508] = V330
0x85b: V509 = 0x20
0x85d: V510 = ADD 0x20 V508
0x85f: V511 = ISZERO 0x0
0x860: V512 = ISZERO 0x1
0x861: V513 = ISZERO 0x0
0x862: V514 = ISZERO 0x1
0x864: M[V510] = 0x0
0x865: V515 = 0x20
0x867: V516 = ADD 0x20 V510
0x86d: V517 = 0x40
0x86f: V518 = M[0x40]
0x872: V519 = SUB V516 V518
0x874: LOG V518 V519 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V11, 0x563, V330, V335]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x563, V330, V335]

================================

Block 0x875
[0x875:0x875]
---
Predecessors: [0x7c3, 0x7fd]
Successors: [0x876]
---
0x875 JUMPDEST
---
0x875: JUMPDEST 
---
Entry stack: [V11, 0x563, V330, V335]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x563, V330, V335]

================================

Block 0x876
[0x876:0x879]
---
Predecessors: [0x76d, 0x875]
Successors: [0x563]
---
0x876 JUMPDEST
0x877 POP
0x878 POP
0x879 JUMP
---
0x876: JUMPDEST 
0x879: JUMP 0x563
---
Entry stack: [V11, 0x563, V330, V335]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x87a
[0x87a:0x885]
---
Predecessors: [0x571]
Successors: [0x886, 0x88f]
---
0x87a JUMPDEST
0x87b PUSH1 0x3
0x87d SLOAD
0x87e TIMESTAMP
0x87f LT
0x880 ISZERO
0x881 DUP1
0x882 PUSH2 0x88f
0x885 JUMPI
---
0x87a: JUMPDEST 
0x87b: V520 = 0x3
0x87d: V521 = S[0x3]
0x87e: V522 = TIMESTAMP
0x87f: V523 = LT V522 V521
0x880: V524 = ISZERO V523
0x882: V525 = 0x88f
0x885: JUMPI 0x88f V524
---
Entry stack: [V11, 0x57a]
Stack pops: 0
Stack additions: [V524]
Exit stack: [V11, 0x57a, V524]

================================

Block 0x886
[0x886:0x88e]
---
Predecessors: [0x87a]
Successors: [0x88f]
---
0x886 POP
0x887 PUSH1 0x1
0x889 SLOAD
0x88a PUSH1 0x2
0x88c SLOAD
0x88d LT
0x88e ISZERO
---
0x887: V526 = 0x1
0x889: V527 = S[0x1]
0x88a: V528 = 0x2
0x88c: V529 = S[0x2]
0x88d: V530 = LT V529 V527
0x88e: V531 = ISZERO V530
---
Entry stack: [V11, 0x57a, V524]
Stack pops: 1
Stack additions: [V531]
Exit stack: [V11, 0x57a, V531]

================================

Block 0x88f
[0x88f:0x895]
---
Predecessors: [0x87a, 0x886]
Successors: [0x896, 0x89a]
---
0x88f JUMPDEST
0x890 ISZERO
0x891 ISZERO
0x892 PUSH2 0x89a
0x895 JUMPI
---
0x88f: JUMPDEST 
0x890: V532 = ISZERO S0
0x891: V533 = ISZERO V532
0x892: V534 = 0x89a
0x895: JUMPI 0x89a V533
---
Entry stack: [V11, 0x57a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x57a]

================================

Block 0x896
[0x896:0x899]
---
Predecessors: [0x88f]
Successors: []
---
0x896 PUSH1 0x0
0x898 DUP1
0x899 REVERT
---
0x896: V535 = 0x0
0x899: REVERT 0x0 0x0
---
Entry stack: [V11, 0x57a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x57a]

================================

Block 0x89a
[0x89a:0x8ef]
---
Predecessors: [0x88f]
Successors: [0x8f0, 0xa09]
---
0x89a JUMPDEST
0x89b CALLER
0x89c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b1 AND
0x8b2 PUSH1 0x0
0x8b4 DUP1
0x8b5 SWAP1
0x8b6 SLOAD
0x8b7 SWAP1
0x8b8 PUSH2 0x100
0x8bb EXP
0x8bc SWAP1
0x8bd DIV
0x8be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d3 AND
0x8d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e9 AND
0x8ea EQ
0x8eb ISZERO
0x8ec PUSH2 0xa09
0x8ef JUMPI
---
0x89a: JUMPDEST 
0x89b: V536 = CALLER
0x89c: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b1: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x8b2: V539 = 0x0
0x8b6: V540 = S[0x0]
0x8b8: V541 = 0x100
0x8bb: V542 = EXP 0x100 0x0
0x8bd: V543 = DIV V540 0x1
0x8be: V544 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d3: V545 = AND 0xffffffffffffffffffffffffffffffffffffffff V543
0x8d4: V546 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e9: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V545
0x8ea: V548 = EQ V547 V538
0x8eb: V549 = ISZERO V548
0x8ec: V550 = 0xa09
0x8ef: JUMPI 0xa09 V549
---
Entry stack: [V11, 0x57a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x57a]

================================

Block 0x8f0
[0x8f0:0x94c]
---
Predecessors: [0x89a]
Successors: [0x94d, 0x9ec]
---
0x8f0 PUSH1 0x0
0x8f2 DUP1
0x8f3 SWAP1
0x8f4 SLOAD
0x8f5 SWAP1
0x8f6 PUSH2 0x100
0x8f9 EXP
0x8fa SWAP1
0x8fb DIV
0x8fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x911 AND
0x912 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x927 AND
0x928 PUSH2 0x8fc
0x92b PUSH1 0x2
0x92d SLOAD
0x92e SWAP1
0x92f DUP2
0x930 ISZERO
0x931 MUL
0x932 SWAP1
0x933 PUSH1 0x40
0x935 MLOAD
0x936 PUSH1 0x0
0x938 PUSH1 0x40
0x93a MLOAD
0x93b DUP1
0x93c DUP4
0x93d SUB
0x93e DUP2
0x93f DUP6
0x940 DUP9
0x941 DUP9
0x942 CALL
0x943 SWAP4
0x944 POP
0x945 POP
0x946 POP
0x947 POP
0x948 ISZERO
0x949 PUSH2 0x9ec
0x94c JUMPI
---
0x8f0: V551 = 0x0
0x8f4: V552 = S[0x0]
0x8f6: V553 = 0x100
0x8f9: V554 = EXP 0x100 0x0
0x8fb: V555 = DIV V552 0x1
0x8fc: V556 = 0xffffffffffffffffffffffffffffffffffffffff
0x911: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x912: V558 = 0xffffffffffffffffffffffffffffffffffffffff
0x927: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0x928: V560 = 0x8fc
0x92b: V561 = 0x2
0x92d: V562 = S[0x2]
0x930: V563 = ISZERO V562
0x931: V564 = MUL V563 0x8fc
0x933: V565 = 0x40
0x935: V566 = M[0x40]
0x936: V567 = 0x0
0x938: V568 = 0x40
0x93a: V569 = M[0x40]
0x93d: V570 = SUB V566 V569
0x942: V571 = CALL V564 V559 V562 V569 V570 V569 0x0
0x948: V572 = ISZERO V571
0x949: V573 = 0x9ec
0x94c: JUMPI 0x9ec V572
---
Entry stack: [V11, 0x57a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x57a]

================================

Block 0x94d
[0x94d:0x9eb]
---
Predecessors: [0x8f0]
Successors: [0xa08]
---
0x94d PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x96e PUSH1 0x0
0x970 DUP1
0x971 SWAP1
0x972 SLOAD
0x973 SWAP1
0x974 PUSH2 0x100
0x977 EXP
0x978 SWAP1
0x979 DIV
0x97a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98f AND
0x990 PUSH1 0x2
0x992 SLOAD
0x993 PUSH1 0x0
0x995 PUSH1 0x40
0x997 MLOAD
0x998 DUP1
0x999 DUP5
0x99a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9af AND
0x9b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c5 AND
0x9c6 DUP2
0x9c7 MSTORE
0x9c8 PUSH1 0x20
0x9ca ADD
0x9cb DUP4
0x9cc DUP2
0x9cd MSTORE
0x9ce PUSH1 0x20
0x9d0 ADD
0x9d1 DUP3
0x9d2 ISZERO
0x9d3 ISZERO
0x9d4 ISZERO
0x9d5 ISZERO
0x9d6 DUP2
0x9d7 MSTORE
0x9d8 PUSH1 0x20
0x9da ADD
0x9db SWAP4
0x9dc POP
0x9dd POP
0x9de POP
0x9df POP
0x9e0 PUSH1 0x40
0x9e2 MLOAD
0x9e3 DUP1
0x9e4 SWAP2
0x9e5 SUB
0x9e6 SWAP1
0x9e7 LOG1
0x9e8 PUSH2 0xa08
0x9eb JUMP
---
0x94d: V574 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x96e: V575 = 0x0
0x972: V576 = S[0x0]
0x974: V577 = 0x100
0x977: V578 = EXP 0x100 0x0
0x979: V579 = DIV V576 0x1
0x97a: V580 = 0xffffffffffffffffffffffffffffffffffffffff
0x98f: V581 = AND 0xffffffffffffffffffffffffffffffffffffffff V579
0x990: V582 = 0x2
0x992: V583 = S[0x2]
0x993: V584 = 0x0
0x995: V585 = 0x40
0x997: V586 = M[0x40]
0x99a: V587 = 0xffffffffffffffffffffffffffffffffffffffff
0x9af: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x9b0: V589 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c5: V590 = AND 0xffffffffffffffffffffffffffffffffffffffff V588
0x9c7: M[V586] = V590
0x9c8: V591 = 0x20
0x9ca: V592 = ADD 0x20 V586
0x9cd: M[V592] = V583
0x9ce: V593 = 0x20
0x9d0: V594 = ADD 0x20 V592
0x9d2: V595 = ISZERO 0x0
0x9d3: V596 = ISZERO 0x1
0x9d4: V597 = ISZERO 0x0
0x9d5: V598 = ISZERO 0x1
0x9d7: M[V594] = 0x0
0x9d8: V599 = 0x20
0x9da: V600 = ADD 0x20 V594
0x9e0: V601 = 0x40
0x9e2: V602 = M[0x40]
0x9e5: V603 = SUB V600 V602
0x9e7: LOG V602 V603 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x9e8: V604 = 0xa08
0x9eb: JUMP 0xa08
---
Entry stack: [V11, 0x57a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x57a]

================================

Block 0x9ec
[0x9ec:0xa07]
---
Predecessors: [0x8f0]
Successors: [0xa08]
---
0x9ec JUMPDEST
0x9ed PUSH1 0x1
0x9ef PUSH1 0x7
0x9f1 PUSH1 0x2
0x9f3 PUSH2 0x100
0x9f6 EXP
0x9f7 DUP2
0x9f8 SLOAD
0x9f9 DUP2
0x9fa PUSH1 0xff
0x9fc MUL
0x9fd NOT
0x9fe AND
0x9ff SWAP1
0xa00 DUP4
0xa01 ISZERO
0xa02 ISZERO
0xa03 MUL
0xa04 OR
0xa05 SWAP1
0xa06 SSTORE
0xa07 POP
---
0x9ec: JUMPDEST 
0x9ed: V605 = 0x1
0x9ef: V606 = 0x7
0x9f1: V607 = 0x2
0x9f3: V608 = 0x100
0x9f6: V609 = EXP 0x100 0x2
0x9f8: V610 = S[0x7]
0x9fa: V611 = 0xff
0x9fc: V612 = MUL 0xff 0x10000
0x9fd: V613 = NOT 0xff0000
0x9fe: V614 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V610
0xa01: V615 = ISZERO 0x1
0xa02: V616 = ISZERO 0x0
0xa03: V617 = MUL 0x1 0x10000
0xa04: V618 = OR 0x10000 V614
0xa06: S[0x7] = V618
---
Entry stack: [V11, 0x57a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x57a]

================================

Block 0xa08
[0xa08:0xa08]
---
Predecessors: [0x94d, 0x9ec]
Successors: [0xa09]
---
0xa08 JUMPDEST
---
0xa08: JUMPDEST 
---
Entry stack: [V11, 0x57a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x57a]

================================

Block 0xa09
[0xa09:0xa0a]
---
Predecessors: [0x89a, 0xa08]
Successors: [0x57a]
---
0xa09 JUMPDEST
0xa0a JUMP
---
0xa09: JUMPDEST 
0xa0a: JUMP 0x57a
---
Entry stack: [V11, 0x57a]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xa0b
[0xa0b:0xa36]
---
Predecessors: []
Successors: []
---
0xa0b STOP
0xa0c LOG1
0xa0d PUSH6 0x627a7a723058
0xa14 SHA3
0xa15 GAS
0xa16 MISSING 0x22
0xa17 MISSING 0xe5
0xa18 PUSH14 0x99093f9a258b29f19dad48bbe06f
0xa27 MOD
0xa28 PUSH13 0xbb15e17e1cfc6df13a6ef45800
0xa36 MISSING 0x29
---
0xa0b: STOP 
0xa0c: LOG S0 S1 S2
0xa0d: V619 = 0x627a7a723058
0xa14: V620 = SHA3 0x627a7a723058 S3
0xa15: V621 = GAS
0xa16: MISSING 0x22
0xa17: MISSING 0xe5
0xa18: V622 = 0x99093f9a258b29f19dad48bbe06f
0xa27: V623 = MOD 0x99093f9a258b29f19dad48bbe06f S0
0xa28: V624 = 0xbb15e17e1cfc6df13a6ef45800
0xa36: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V621, V620, 0xbb15e17e1cfc6df13a6ef45800, V623]
Exit stack: []

================================

Function 0:
Public function signature: 0x29dcb0cf
Entry block: 0x33a
Exit block: 0x34f
Body: 0x33a, 0x342, 0x346, 0x34f, 0x57c

Function 1:
Public function signature: 0x38af3eed
Entry block: 0x365
Exit block: 0x37a
Body: 0x365, 0x36d, 0x371, 0x37a, 0x582

Function 2:
Public function signature: 0x6e66f6e9
Entry block: 0x3bc
Exit block: 0x3d1
Body: 0x3bc, 0x3c4, 0x3c8, 0x3d1, 0x5a7

Function 3:
Public function signature: 0x70a08231
Entry block: 0x413
Exit block: 0x454
Body: 0x413, 0x41b, 0x41f, 0x454, 0x5cd

Function 4:
Public function signature: 0x7a3a0e84
Entry block: 0x46a
Exit block: 0x47f
Body: 0x46a, 0x472, 0x476, 0x47f, 0x5e5

Function 5:
Public function signature: 0x7b3e5e7b
Entry block: 0x495
Exit block: 0x4aa
Body: 0x495, 0x49d, 0x4a1, 0x4aa, 0x5eb

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x4c0
Exit block: 0x4d5
Body: 0x4c0, 0x4c8, 0x4cc, 0x4d5, 0x5f1

Function 7:
Public function signature: 0xc4650a03
Entry block: 0x4eb
Exit block: 0x73c
Body: 0x4eb, 0x4f3, 0x4f7, 0x516, 0x5f7, 0x603, 0x60c, 0x613, 0x617, 0x66d, 0x72d, 0x731, 0x73c, 0x745, 0x74a

Function 8:
Public function signature: 0xd4822fbf
Entry block: 0x518
Exit block: 0x563
Body: 0x518, 0x520, 0x524, 0x563, 0x74d, 0x759, 0x762, 0x769, 0x76d, 0x7c3, 0x7fd, 0x875, 0x876

Function 9:
Public function signature: 0xfd6b7ef8
Entry block: 0x565
Exit block: 0x57a
Body: 0x565, 0x56d, 0x571, 0x57a, 0x87a, 0x886, 0x88f, 0x896, 0x89a, 0x8f0, 0x94d, 0x9ec, 0xa08, 0xa09

Function 10:
Public fallback function
Entry block: 0xa4
Exit block: 0x2be
Body: 0xa4, 0xbf, 0xc3, 0xcf, 0xd3, 0x146, 0x147, 0x20c, 0x210, 0x21b, 0x224, 0x236, 0x2be

