Block 0x0
[0x0:0x32]
---
Predecessors: []
Successors: [0x33, 0x5a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 DUP1
0x29 PUSH4 0x29dcb0cf
0x2e EQ
0x2f PUSH2 0x5a
0x32 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x29: V6 = 0x29dcb0cf
0x2e: V7 = EQ 0x29dcb0cf V5
0x2f: V8 = 0x5a
0x32: JUMPI 0x5a V7
---
Entry stack: []
Stack pops: 0
Stack additions: [V5]
Exit stack: [V5]

================================

Block 0x33
[0x33:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x7d]
---
0x33 DUP1
0x34 PUSH4 0x590e1ae3
0x39 EQ
0x3a PUSH2 0x7d
0x3d JUMPI
---
0x34: V9 = 0x590e1ae3
0x39: V10 = EQ 0x590e1ae3 V5
0x3a: V11 = 0x7d
0x3d: JUMPI 0x7d V10
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0x33]
Successors: [0x49, 0x8c]
---
0x3e DUP1
0x3f PUSH4 0xb60d4288
0x44 EQ
0x45 PUSH2 0x8c
0x48 JUMPI
---
0x3f: V12 = 0xb60d4288
0x44: V13 = EQ 0xb60d4288 V5
0x45: V14 = 0x8c
0x48: JUMPI 0x8c V13
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x9b]
---
0x49 DUP1
0x4a PUSH4 0xe5225381
0x4f EQ
0x50 PUSH2 0x9b
0x53 JUMPI
---
0x4a: V15 = 0xe5225381
0x4f: V16 = EQ 0xe5225381 V5
0x50: V17 = 0x9b
0x53: JUMPI 0x9b V16
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x54
[0x54:0x57]
---
Predecessors: [0x49]
Successors: [0x58]
---
0x54 PUSH2 0x58
0x57 JUMP
---
0x54: V18 = 0x58
0x57: JUMP 0x58
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x58
[0x58:0x59]
---
Predecessors: [0x54]
Successors: []
---
0x58 JUMPDEST
0x59 STOP
---
0x58: JUMPDEST 
0x59: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x5a
[0x5a:0x66]
---
Predecessors: [0x0]
Successors: [0xaa]
---
0x5a JUMPDEST
0x5b PUSH2 0x67
0x5e PUSH1 0x4
0x60 DUP1
0x61 POP
0x62 POP
0x63 PUSH2 0xaa
0x66 JUMP
---
0x5a: JUMPDEST 
0x5b: V19 = 0x67
0x5e: V20 = 0x4
0x63: V21 = 0xaa
0x66: JUMP 0xaa
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x67]
Exit stack: [V5, 0x67]

================================

Block 0x67
[0x67:0x7c]
---
Predecessors: [0xaa]
Successors: []
---
0x67 JUMPDEST
0x68 PUSH1 0x40
0x6a MLOAD
0x6b DUP1
0x6c DUP3
0x6d DUP2
0x6e MSTORE
0x6f PUSH1 0x20
0x71 ADD
0x72 SWAP2
0x73 POP
0x74 POP
0x75 PUSH1 0x40
0x77 MLOAD
0x78 DUP1
0x79 SWAP2
0x7a SUB
0x7b SWAP1
0x7c RETURN
---
0x67: JUMPDEST 
0x68: V22 = 0x40
0x6a: V23 = M[0x40]
0x6e: M[V23] = V40
0x6f: V24 = 0x20
0x71: V25 = ADD 0x20 V23
0x75: V26 = 0x40
0x77: V27 = M[0x40]
0x7a: V28 = SUB V25 V27
0x7c: RETURN V27 V28
---
Entry stack: [V5, 0x67, V40]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0x67]

================================

Block 0x7d
[0x7d:0x89]
---
Predecessors: [0x33]
Successors: [0xb3]
---
0x7d JUMPDEST
0x7e PUSH2 0x8a
0x81 PUSH1 0x4
0x83 DUP1
0x84 POP
0x85 POP
0x86 PUSH2 0xb3
0x89 JUMP
---
0x7d: JUMPDEST 
0x7e: V29 = 0x8a
0x81: V30 = 0x4
0x86: V31 = 0xb3
0x89: JUMP 0xb3
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x8a]
Exit stack: [V5, 0x8a]

================================

Block 0x8a
[0x8a:0x8b]
---
Predecessors: [0x1c7]
Successors: []
---
0x8a JUMPDEST
0x8b STOP
---
0x8a: JUMPDEST 
0x8b: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x8c
[0x8c:0x98]
---
Predecessors: [0x3e]
Successors: [0x1ca]
---
0x8c JUMPDEST
0x8d PUSH2 0x99
0x90 PUSH1 0x4
0x92 DUP1
0x93 POP
0x94 POP
0x95 PUSH2 0x1ca
0x98 JUMP
---
0x8c: JUMPDEST 
0x8d: V32 = 0x99
0x90: V33 = 0x4
0x95: V34 = 0x1ca
0x98: JUMP 0x1ca
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x99]
Exit stack: [V5, 0x99]

================================

Block 0x99
[0x99:0x9a]
---
Predecessors: [0x2d5]
Successors: []
---
0x99 JUMPDEST
0x9a STOP
---
0x99: JUMPDEST 
0x9a: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x9b
[0x9b:0xa7]
---
Predecessors: [0x49]
Successors: [0x2d7]
---
0x9b JUMPDEST
0x9c PUSH2 0xa8
0x9f PUSH1 0x4
0xa1 DUP1
0xa2 POP
0xa3 POP
0xa4 PUSH2 0x2d7
0xa7 JUMP
---
0x9b: JUMPDEST 
0x9c: V35 = 0xa8
0x9f: V36 = 0x4
0xa4: V37 = 0x2d7
0xa7: JUMP 0x2d7
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0xa8]
Exit stack: [V5, 0xa8]

================================

Block 0xa8
[0xa8:0xa9]
---
Predecessors: [0x37a]
Successors: []
---
0xa8 JUMPDEST
0xa9 STOP
---
0xa8: JUMPDEST 
0xa9: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0xaa
[0xaa:0xb2]
---
Predecessors: [0x5a]
Successors: [0x67]
---
0xaa JUMPDEST
0xab PUSH1 0x2
0xad PUSH1 0x0
0xaf POP
0xb0 SLOAD
0xb1 DUP2
0xb2 JUMP
---
0xaa: JUMPDEST 
0xab: V38 = 0x2
0xad: V39 = 0x0
0xb0: V40 = S[0x2]
0xb2: JUMP 0x67
---
Entry stack: [V5, 0x67]
Stack pops: 1
Stack additions: [S0, V40]
Exit stack: [V5, 0x67, V40]

================================

Block 0xb3
[0xb3:0xc3]
---
Predecessors: [0x7d]
Successors: [0xc4, 0xe4]
---
0xb3 JUMPDEST
0xb4 PUSH1 0x0
0xb6 PUSH1 0x2
0xb8 PUSH1 0x0
0xba POP
0xbb SLOAD
0xbc TIMESTAMP
0xbd GT
0xbe DUP1
0xbf ISZERO
0xc0 PUSH2 0xe4
0xc3 JUMPI
---
0xb3: JUMPDEST 
0xb4: V41 = 0x0
0xb6: V42 = 0x2
0xb8: V43 = 0x0
0xbb: V44 = S[0x2]
0xbc: V45 = TIMESTAMP
0xbd: V46 = GT V45 V44
0xbf: V47 = ISZERO V46
0xc0: V48 = 0xe4
0xc3: JUMPI 0xe4 V47
---
Entry stack: [V5, 0x8a]
Stack pops: 0
Stack additions: [0x0, V46]
Exit stack: [V5, 0x8a, 0x0, V46]

================================

Block 0xc4
[0xc4:0xe3]
---
Predecessors: [0xb3]
Successors: [0xe4]
---
0xc4 POP
0xc5 PUSH1 0x1
0xc7 PUSH1 0x0
0xc9 POP
0xca SLOAD
0xcb ADDRESS
0xcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1 AND
0xe2 BALANCE
0xe3 LT
---
0xc5: V49 = 0x1
0xc7: V50 = 0x0
0xca: V51 = S[0x1]
0xcb: V52 = ADDRESS
0xcc: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xe2: V55 = BALANCE V54
0xe3: V56 = LT V55 V51
---
Entry stack: [V5, 0x8a, 0x0, V46]
Stack pops: 1
Stack additions: [V56]
Exit stack: [V5, 0x8a, 0x0, V56]

================================

Block 0xe4
[0xe4:0xe9]
---
Predecessors: [0xb3, 0xc4]
Successors: [0xea, 0x1c6]
---
0xe4 JUMPDEST
0xe5 ISZERO
0xe6 PUSH2 0x1c6
0xe9 JUMPI
---
0xe4: JUMPDEST 
0xe5: V57 = ISZERO S0
0xe6: V58 = 0x1c6
0xe9: JUMPI 0x1c6 V57
---
Entry stack: [V5, 0x8a, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0x8a, 0x0]

================================

Block 0xea
[0xea:0xf1]
---
Predecessors: [0xe4]
Successors: [0xf2]
---
0xea PUSH1 0x4
0xec PUSH1 0x0
0xee POP
0xef SLOAD
0xf0 SWAP1
0xf1 POP
---
0xea: V59 = 0x4
0xec: V60 = 0x0
0xef: V61 = S[0x4]
---
Entry stack: [V5, 0x8a, 0x0]
Stack pops: 1
Stack additions: [V61]
Exit stack: [V5, 0x8a, V61]

================================

Block 0xf2
[0xf2:0x103]
---
Predecessors: [0xea, 0x18d]
Successors: [0x104, 0x10b]
---
0xf2 JUMPDEST
0xf3 PUSH1 0x0
0xf5 PUSH1 0x0
0xf7 POP
0xf8 DUP1
0xf9 SLOAD
0xfa SWAP1
0xfb POP
0xfc DUP2
0xfd LT
0xfe DUP1
0xff ISZERO
0x100 PUSH2 0x10b
0x103 JUMPI
---
0xf2: JUMPDEST 
0xf3: V62 = 0x0
0xf5: V63 = 0x0
0xf9: V64 = S[0x0]
0xfd: V65 = LT S0 V64
0xff: V66 = ISZERO V65
0x100: V67 = 0x10b
0x103: JUMPI 0x10b V66
---
Entry stack: [V5, 0x8a, S0]
Stack pops: 1
Stack additions: [S0, V65]
Exit stack: [V5, 0x8a, S0, V65]

================================

Block 0x104
[0x104:0x10a]
---
Predecessors: [0xf2]
Successors: [0x10b]
---
0x104 POP
0x105 PUSH3 0x30d40
0x109 GAS
0x10a GT
---
0x105: V68 = 0x30d40
0x109: V69 = GAS
0x10a: V70 = GT V69 0x30d40
---
Entry stack: [V5, 0x8a, S1, V65]
Stack pops: 1
Stack additions: [V70]
Exit stack: [V5, 0x8a, S1, V70]

================================

Block 0x10b
[0x10b:0x110]
---
Predecessors: [0xf2, 0x104]
Successors: [0x111, 0x1bb]
---
0x10b JUMPDEST
0x10c ISZERO
0x10d PUSH2 0x1bb
0x110 JUMPI
---
0x10b: JUMPDEST 
0x10c: V71 = ISZERO S0
0x10d: V72 = 0x1bb
0x110: JUMPI 0x1bb V71
---
Entry stack: [V5, 0x8a, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0x8a, S1]

================================

Block 0x111
[0x111:0x11f]
---
Predecessors: [0x10b]
Successors: [0x120]
---
0x111 PUSH1 0x0
0x113 PUSH1 0x0
0x115 POP
0x116 DUP2
0x117 DUP2
0x118 SLOAD
0x119 DUP2
0x11a LT
0x11b ISZERO
0x11c PUSH2 0x2
0x11f JUMPI
---
0x111: V73 = 0x0
0x113: V74 = 0x0
0x118: V75 = S[0x0]
0x11a: V76 = LT S0 V75
0x11b: V77 = ISZERO V76
0x11c: V78 = 0x2
0x11f: THROWI V77
---
Entry stack: [V5, 0x8a, S0]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V5, 0x8a, S0, 0x0, S0]

================================

Block 0x120
[0x120:0x12f]
---
Predecessors: [0x111]
Successors: [0x130]
---
0x120 SWAP1
0x121 PUSH1 0x0
0x123 MSTORE
0x124 PUSH1 0x20
0x126 PUSH1 0x0
0x128 SHA3
0x129 SWAP1
0x12a PUSH1 0x2
0x12c MUL
0x12d ADD
0x12e PUSH1 0x0
---
0x121: V79 = 0x0
0x123: M[0x0] = 0x0
0x124: V80 = 0x20
0x126: V81 = 0x0
0x128: V82 = SHA3 0x0 0x20
0x12a: V83 = 0x2
0x12c: V84 = MUL 0x2 S0
0x12d: V85 = ADD V84 V82
0x12e: V86 = 0x0
---
Entry stack: [V5, 0x8a, S2, 0x0, S0]
Stack pops: 2
Stack additions: [V85, 0x0]
Exit stack: [V5, 0x8a, S2, V85, 0x0]

================================

Block 0x130
[0x130:0x17c]
---
Predecessors: [0x120]
Successors: [0x17d]
---
0x130 JUMPDEST
0x131 POP
0x132 PUSH1 0x0
0x134 ADD
0x135 PUSH1 0x0
0x137 SWAP1
0x138 SLOAD
0x139 SWAP1
0x13a PUSH2 0x100
0x13d EXP
0x13e SWAP1
0x13f DIV
0x140 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x155 AND
0x156 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16b AND
0x16c PUSH1 0x0
0x16e PUSH1 0x0
0x170 PUSH1 0x0
0x172 POP
0x173 DUP4
0x174 DUP2
0x175 SLOAD
0x176 DUP2
0x177 LT
0x178 ISZERO
0x179 PUSH2 0x2
0x17c JUMPI
---
0x130: JUMPDEST 
0x132: V87 = 0x0
0x134: V88 = ADD 0x0 V85
0x135: V89 = 0x0
0x138: V90 = S[V88]
0x13a: V91 = 0x100
0x13d: V92 = EXP 0x100 0x0
0x13f: V93 = DIV V90 0x1
0x140: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x155: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x156: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x16c: V98 = 0x0
0x16e: V99 = 0x0
0x170: V100 = 0x0
0x175: V101 = S[0x0]
0x177: V102 = LT S2 V101
0x178: V103 = ISZERO V102
0x179: V104 = 0x2
0x17c: THROWI V103
---
Entry stack: [V5, 0x8a, S2, V85, 0x0]
Stack pops: 3
Stack additions: [S2, V97, 0x0, 0x0, S2]
Exit stack: [V5, 0x8a, S2, V97, 0x0, 0x0, S2]

================================

Block 0x17d
[0x17d:0x18c]
---
Predecessors: [0x130]
Successors: [0x18d]
---
0x17d SWAP1
0x17e PUSH1 0x0
0x180 MSTORE
0x181 PUSH1 0x20
0x183 PUSH1 0x0
0x185 SHA3
0x186 SWAP1
0x187 PUSH1 0x2
0x189 MUL
0x18a ADD
0x18b PUSH1 0x0
---
0x17e: V105 = 0x0
0x180: M[0x0] = 0x0
0x181: V106 = 0x20
0x183: V107 = 0x0
0x185: V108 = SHA3 0x0 0x20
0x187: V109 = 0x2
0x189: V110 = MUL 0x2 S0
0x18a: V111 = ADD V110 V108
0x18b: V112 = 0x0
---
Entry stack: [V5, 0x8a, S4, V97, 0x0, 0x0, S0]
Stack pops: 2
Stack additions: [V111, 0x0]
Exit stack: [V5, 0x8a, S4, V97, 0x0, V111, 0x0]

================================

Block 0x18d
[0x18d:0x1ba]
---
Predecessors: [0x17d]
Successors: [0xf2]
---
0x18d JUMPDEST
0x18e POP
0x18f PUSH1 0x1
0x191 ADD
0x192 PUSH1 0x0
0x194 POP
0x195 SLOAD
0x196 PUSH1 0x40
0x198 MLOAD
0x199 DUP1
0x19a SWAP1
0x19b POP
0x19c PUSH1 0x0
0x19e PUSH1 0x40
0x1a0 MLOAD
0x1a1 DUP1
0x1a2 DUP4
0x1a3 SUB
0x1a4 DUP2
0x1a5 DUP6
0x1a6 DUP9
0x1a7 DUP9
0x1a8 CALL
0x1a9 SWAP4
0x1aa POP
0x1ab POP
0x1ac POP
0x1ad POP
0x1ae POP
0x1af DUP1
0x1b0 DUP1
0x1b1 PUSH1 0x1
0x1b3 ADD
0x1b4 SWAP2
0x1b5 POP
0x1b6 POP
0x1b7 PUSH2 0xf2
0x1ba JUMP
---
0x18d: JUMPDEST 
0x18f: V113 = 0x1
0x191: V114 = ADD 0x1 V111
0x192: V115 = 0x0
0x195: V116 = S[V114]
0x196: V117 = 0x40
0x198: V118 = M[0x40]
0x19c: V119 = 0x0
0x19e: V120 = 0x40
0x1a0: V121 = M[0x40]
0x1a3: V122 = SUB V118 V121
0x1a8: V123 = CALL 0x0 V97 V116 V121 V122 V121 0x0
0x1b1: V124 = 0x1
0x1b3: V125 = ADD 0x1 S4
0x1b7: V126 = 0xf2
0x1ba: JUMP 0xf2
---
Entry stack: [V5, 0x8a, S4, V97, 0x0, V111, 0x0]
Stack pops: 5
Stack additions: [V125]
Exit stack: [V5, 0x8a, V125]

================================

Block 0x1bb
[0x1bb:0x1c5]
---
Predecessors: [0x10b]
Successors: [0x1c6]
---
0x1bb JUMPDEST
0x1bc DUP1
0x1bd PUSH1 0x4
0x1bf PUSH1 0x0
0x1c1 POP
0x1c2 DUP2
0x1c3 SWAP1
0x1c4 SSTORE
0x1c5 POP
---
0x1bb: JUMPDEST 
0x1bd: V127 = 0x4
0x1bf: V128 = 0x0
0x1c4: S[0x4] = S0
---
Entry stack: [V5, 0x8a, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5, 0x8a, S0]

================================

Block 0x1c6
[0x1c6:0x1c6]
---
Predecessors: [0xe4, 0x1bb]
Successors: [0x1c7]
---
0x1c6 JUMPDEST
---
0x1c6: JUMPDEST 
---
Entry stack: [V5, 0x8a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x8a, S0]

================================

Block 0x1c7
[0x1c7:0x1c9]
---
Predecessors: [0x1c6]
Successors: [0x8a]
---
0x1c7 JUMPDEST
0x1c8 POP
0x1c9 JUMP
---
0x1c7: JUMPDEST 
0x1c9: JUMP 0x8a
---
Entry stack: [V5, 0x8a, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V5]

================================

Block 0x1ca
[0x1ca:0x1d7]
---
Predecessors: [0x8c]
Successors: [0x1d8, 0x1dc]
---
0x1ca JUMPDEST
0x1cb PUSH1 0x2
0x1cd PUSH1 0x0
0x1cf POP
0x1d0 SLOAD
0x1d1 TIMESTAMP
0x1d2 GT
0x1d3 ISZERO
0x1d4 PUSH2 0x1dc
0x1d7 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V129 = 0x2
0x1cd: V130 = 0x0
0x1d0: V131 = S[0x2]
0x1d1: V132 = TIMESTAMP
0x1d2: V133 = GT V132 V131
0x1d3: V134 = ISZERO V133
0x1d4: V135 = 0x1dc
0x1d7: JUMPI 0x1dc V134
---
Entry stack: [V5, 0x99]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x99]

================================

Block 0x1d8
[0x1d8:0x1db]
---
Predecessors: [0x1ca]
Successors: []
---
0x1d8 PUSH2 0x2
0x1db JUMP
---
0x1d8: V136 = 0x2
0x1db: THROW 
---
Entry stack: [V5, 0x99]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x99]

================================

Block 0x1dc
[0x1dc:0x1f6]
---
Predecessors: [0x1ca]
Successors: [0x1f7, 0x25f]
---
0x1dc JUMPDEST
0x1dd PUSH1 0x0
0x1df PUSH1 0x0
0x1e1 POP
0x1e2 DUP1
0x1e3 SLOAD
0x1e4 DUP1
0x1e5 PUSH1 0x1
0x1e7 ADD
0x1e8 DUP3
0x1e9 DUP2
0x1ea DUP2
0x1eb SLOAD
0x1ec DUP2
0x1ed DUP4
0x1ee SSTORE
0x1ef DUP2
0x1f0 DUP2
0x1f1 ISZERO
0x1f2 GT
0x1f3 PUSH2 0x25f
0x1f6 JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V137 = 0x0
0x1df: V138 = 0x0
0x1e3: V139 = S[0x0]
0x1e5: V140 = 0x1
0x1e7: V141 = ADD 0x1 V139
0x1eb: V142 = S[0x0]
0x1ee: S[0x0] = V141
0x1f1: V143 = ISZERO V142
0x1f2: V144 = GT V143 V141
0x1f3: V145 = 0x25f
0x1f6: JUMPI 0x25f V144
---
Entry stack: [V5, 0x99]
Stack pops: 0
Stack additions: [0x0, V139, V141, 0x0, V141, V142]
Exit stack: [V5, 0x99, 0x0, V139, V141, 0x0, V141, V142]

================================

Block 0x1f7
[0x1f7:0x214]
---
Predecessors: [0x1dc]
Successors: [0x215]
---
0x1f7 PUSH1 0x2
0x1f9 MUL
0x1fa DUP2
0x1fb PUSH1 0x2
0x1fd MUL
0x1fe DUP4
0x1ff PUSH1 0x0
0x201 MSTORE
0x202 PUSH1 0x20
0x204 PUSH1 0x0
0x206 SHA3
0x207 SWAP2
0x208 DUP3
0x209 ADD
0x20a SWAP2
0x20b ADD
0x20c PUSH2 0x25e
0x20f SWAP2
0x210 SWAP1
0x211 PUSH2 0x215
0x214 JUMP
---
0x1f7: V146 = 0x2
0x1f9: V147 = MUL 0x2 V142
0x1fb: V148 = 0x2
0x1fd: V149 = MUL 0x2 V141
0x1ff: V150 = 0x0
0x201: M[0x0] = 0x0
0x202: V151 = 0x20
0x204: V152 = 0x0
0x206: V153 = SHA3 0x0 0x20
0x209: V154 = ADD V153 V147
0x20b: V155 = ADD V153 V149
0x20c: V156 = 0x25e
0x211: V157 = 0x215
0x214: JUMP 0x215
---
Entry stack: [V5, 0x99, 0x0, V139, V141, 0x0, V141, V142]
Stack pops: 3
Stack additions: [S2, S1, 0x25e, V154, V155]
Exit stack: [V5, 0x99, 0x0, V139, V141, 0x0, V141, 0x25e, V154, V155]

================================

Block 0x215
[0x215:0x21d]
---
Predecessors: [0x1f7, 0x21e]
Successors: [0x21e, 0x25a]
---
0x215 JUMPDEST
0x216 DUP1
0x217 DUP3
0x218 GT
0x219 ISZERO
0x21a PUSH2 0x25a
0x21d JUMPI
---
0x215: JUMPDEST 
0x218: V158 = GT V154 S0
0x219: V159 = ISZERO V158
0x21a: V160 = 0x25a
0x21d: JUMPI 0x25a V159
---
Entry stack: [V5, 0x99, 0x0, V139, V141, 0x0, V141, 0x25e, V154, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V5, 0x99, 0x0, V139, V141, 0x0, V141, 0x25e, V154, S0]

================================

Block 0x21e
[0x21e:0x259]
---
Predecessors: [0x215]
Successors: [0x215]
---
0x21e PUSH1 0x0
0x220 PUSH1 0x0
0x222 DUP3
0x223 ADD
0x224 PUSH1 0x0
0x226 PUSH2 0x100
0x229 EXP
0x22a DUP2
0x22b SLOAD
0x22c SWAP1
0x22d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x242 MUL
0x243 NOT
0x244 AND
0x245 SWAP1
0x246 SSTORE
0x247 PUSH1 0x1
0x249 DUP3
0x24a ADD
0x24b PUSH1 0x0
0x24d POP
0x24e PUSH1 0x0
0x250 SWAP1
0x251 SSTORE
0x252 POP
0x253 PUSH1 0x2
0x255 ADD
0x256 PUSH2 0x215
0x259 JUMP
---
0x21e: V161 = 0x0
0x220: V162 = 0x0
0x223: V163 = ADD S0 0x0
0x224: V164 = 0x0
0x226: V165 = 0x100
0x229: V166 = EXP 0x100 0x0
0x22b: V167 = S[V163]
0x22d: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x242: V169 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x243: V170 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x244: V171 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V167
0x246: S[V163] = V171
0x247: V172 = 0x1
0x24a: V173 = ADD S0 0x1
0x24b: V174 = 0x0
0x24e: V175 = 0x0
0x251: S[V173] = 0x0
0x253: V176 = 0x2
0x255: V177 = ADD 0x2 S0
0x256: V178 = 0x215
0x259: JUMP 0x215
---
Entry stack: [V5, 0x99, 0x0, V139, V141, 0x0, V141, 0x25e, V154, S0]
Stack pops: 1
Stack additions: [V177]
Exit stack: [V5, 0x99, 0x0, V139, V141, 0x0, V141, 0x25e, V154, V177]

================================

Block 0x25a
[0x25a:0x25d]
---
Predecessors: [0x215]
Successors: [0x25e]
---
0x25a JUMPDEST
0x25b POP
0x25c SWAP1
0x25d JUMP
---
0x25a: JUMPDEST 
0x25d: JUMP 0x25e
---
Entry stack: [V5, 0x99, 0x0, V139, V141, 0x0, V141, 0x25e, V154, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V5, 0x99, 0x0, V139, V141, 0x0, V141, V154]

================================

Block 0x25e
[0x25e:0x25e]
---
Predecessors: [0x25a]
Successors: [0x25f]
---
0x25e JUMPDEST
---
0x25e: JUMPDEST 
---
Entry stack: [V5, 0x99, 0x0, V139, V141, 0x0, V141, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x99, 0x0, V139, V141, 0x0, V141, V154]

================================

Block 0x25f
[0x25f:0x274]
---
Predecessors: [0x1dc, 0x25e]
Successors: [0x275]
---
0x25f JUMPDEST
0x260 POP
0x261 POP
0x262 POP
0x263 SWAP2
0x264 SWAP1
0x265 SWAP1
0x266 PUSH1 0x0
0x268 MSTORE
0x269 PUSH1 0x20
0x26b PUSH1 0x0
0x26d SHA3
0x26e SWAP1
0x26f PUSH1 0x2
0x271 MUL
0x272 ADD
0x273 PUSH1 0x0
---
0x25f: JUMPDEST 
0x266: V179 = 0x0
0x268: M[0x0] = 0x0
0x269: V180 = 0x20
0x26b: V181 = 0x0
0x26d: V182 = SHA3 0x0 0x20
0x26f: V183 = 0x2
0x271: V184 = MUL 0x2 V139
0x272: V185 = ADD V184 V182
0x273: V186 = 0x0
---
Entry stack: [V5, 0x99, 0x0, V139, V141, 0x0, V141, S0]
Stack pops: 6
Stack additions: [S3, V185, 0x0]
Exit stack: [V5, 0x99, V141, V185, 0x0]

================================

Block 0x275
[0x275:0x2d4]
---
Predecessors: [0x25f]
Successors: [0x2d5]
---
0x275 JUMPDEST
0x276 PUSH1 0x40
0x278 PUSH1 0x40
0x27a MLOAD
0x27b SWAP1
0x27c DUP2
0x27d ADD
0x27e PUSH1 0x40
0x280 MSTORE
0x281 DUP1
0x282 CALLER
0x283 DUP2
0x284 MSTORE
0x285 PUSH1 0x20
0x287 ADD
0x288 CALLVALUE
0x289 DUP2
0x28a MSTORE
0x28b PUSH1 0x20
0x28d ADD
0x28e POP
0x28f SWAP1
0x290 SWAP2
0x291 SWAP1
0x292 SWAP2
0x293 POP
0x294 PUSH1 0x0
0x296 DUP3
0x297 ADD
0x298 MLOAD
0x299 DUP2
0x29a PUSH1 0x0
0x29c ADD
0x29d PUSH1 0x0
0x29f PUSH2 0x100
0x2a2 EXP
0x2a3 DUP2
0x2a4 SLOAD
0x2a5 DUP2
0x2a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bb MUL
0x2bc NOT
0x2bd AND
0x2be SWAP1
0x2bf DUP4
0x2c0 MUL
0x2c1 OR
0x2c2 SWAP1
0x2c3 SSTORE
0x2c4 POP
0x2c5 PUSH1 0x20
0x2c7 DUP3
0x2c8 ADD
0x2c9 MLOAD
0x2ca DUP2
0x2cb PUSH1 0x1
0x2cd ADD
0x2ce PUSH1 0x0
0x2d0 POP
0x2d1 SSTORE
0x2d2 POP
0x2d3 POP
0x2d4 POP
---
0x275: JUMPDEST 
0x276: V187 = 0x40
0x278: V188 = 0x40
0x27a: V189 = M[0x40]
0x27d: V190 = ADD V189 0x40
0x27e: V191 = 0x40
0x280: M[0x40] = V190
0x282: V192 = CALLER
0x284: M[V189] = V192
0x285: V193 = 0x20
0x287: V194 = ADD 0x20 V189
0x288: V195 = CALLVALUE
0x28a: M[V194] = V195
0x28b: V196 = 0x20
0x28d: V197 = ADD 0x20 V194
0x294: V198 = 0x0
0x297: V199 = ADD V189 0x0
0x298: V200 = M[V199]
0x29a: V201 = 0x0
0x29c: V202 = ADD 0x0 V185
0x29d: V203 = 0x0
0x29f: V204 = 0x100
0x2a2: V205 = EXP 0x100 0x0
0x2a4: V206 = S[V202]
0x2a6: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bb: V208 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2bc: V209 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V210 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V206
0x2c0: V211 = MUL V200 0x1
0x2c1: V212 = OR V211 V210
0x2c3: S[V202] = V212
0x2c5: V213 = 0x20
0x2c8: V214 = ADD V189 0x20
0x2c9: V215 = M[V214]
0x2cb: V216 = 0x1
0x2cd: V217 = ADD 0x1 V185
0x2ce: V218 = 0x0
0x2d1: S[V217] = V215
---
Entry stack: [V5, 0x99, V141, V185, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V5, 0x99]

================================

Block 0x2d5
[0x2d5:0x2d6]
---
Predecessors: [0x275]
Successors: [0x99]
---
0x2d5 JUMPDEST
0x2d6 JUMP
---
0x2d5: JUMPDEST 
0x2d6: JUMP 0x99
---
Entry stack: [V5, 0x99]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0x2d7
[0x2d7:0x2e5]
---
Predecessors: [0x9b]
Successors: [0x2e6, 0x307]
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x2
0x2da PUSH1 0x0
0x2dc POP
0x2dd SLOAD
0x2de TIMESTAMP
0x2df GT
0x2e0 DUP1
0x2e1 ISZERO
0x2e2 PUSH2 0x307
0x2e5 JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V219 = 0x2
0x2da: V220 = 0x0
0x2dd: V221 = S[0x2]
0x2de: V222 = TIMESTAMP
0x2df: V223 = GT V222 V221
0x2e1: V224 = ISZERO V223
0x2e2: V225 = 0x307
0x2e5: JUMPI 0x307 V224
---
Entry stack: [V5, 0xa8]
Stack pops: 0
Stack additions: [V223]
Exit stack: [V5, 0xa8, V223]

================================

Block 0x2e6
[0x2e6:0x306]
---
Predecessors: [0x2d7]
Successors: [0x307]
---
0x2e6 POP
0x2e7 PUSH1 0x1
0x2e9 PUSH1 0x0
0x2eb POP
0x2ec SLOAD
0x2ed ADDRESS
0x2ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x303 AND
0x304 BALANCE
0x305 LT
0x306 ISZERO
---
0x2e7: V226 = 0x1
0x2e9: V227 = 0x0
0x2ec: V228 = S[0x1]
0x2ed: V229 = ADDRESS
0x2ee: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x303: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x304: V232 = BALANCE V231
0x305: V233 = LT V232 V228
0x306: V234 = ISZERO V233
---
Entry stack: [V5, 0xa8, V223]
Stack pops: 1
Stack additions: [V234]
Exit stack: [V5, 0xa8, V234]

================================

Block 0x307
[0x307:0x30c]
---
Predecessors: [0x2d7, 0x2e6]
Successors: [0x30d, 0x379]
---
0x307 JUMPDEST
0x308 ISZERO
0x309 PUSH2 0x379
0x30c JUMPI
---
0x307: JUMPDEST 
0x308: V235 = ISZERO S0
0x309: V236 = 0x379
0x30c: JUMPI 0x379 V235
---
Entry stack: [V5, 0xa8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0xa8]

================================

Block 0x30d
[0x30d:0x378]
---
Predecessors: [0x307]
Successors: [0x379]
---
0x30d PUSH1 0x3
0x30f PUSH1 0x0
0x311 SWAP1
0x312 SLOAD
0x313 SWAP1
0x314 PUSH2 0x100
0x317 EXP
0x318 SWAP1
0x319 DIV
0x31a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32f AND
0x330 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x345 AND
0x346 PUSH1 0x0
0x348 ADDRESS
0x349 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35e AND
0x35f BALANCE
0x360 PUSH1 0x40
0x362 MLOAD
0x363 DUP1
0x364 SWAP1
0x365 POP
0x366 PUSH1 0x0
0x368 PUSH1 0x40
0x36a MLOAD
0x36b DUP1
0x36c DUP4
0x36d SUB
0x36e DUP2
0x36f DUP6
0x370 DUP9
0x371 DUP9
0x372 CALL
0x373 SWAP4
0x374 POP
0x375 POP
0x376 POP
0x377 POP
0x378 POP
---
0x30d: V237 = 0x3
0x30f: V238 = 0x0
0x312: V239 = S[0x3]
0x314: V240 = 0x100
0x317: V241 = EXP 0x100 0x0
0x319: V242 = DIV V239 0x1
0x31a: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x32f: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x330: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x345: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x346: V247 = 0x0
0x348: V248 = ADDRESS
0x349: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x35e: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x35f: V251 = BALANCE V250
0x360: V252 = 0x40
0x362: V253 = M[0x40]
0x366: V254 = 0x0
0x368: V255 = 0x40
0x36a: V256 = M[0x40]
0x36d: V257 = SUB V253 V256
0x372: V258 = CALL 0x0 V246 V251 V256 V257 V256 0x0
---
Entry stack: [V5, 0xa8]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0xa8]

================================

Block 0x379
[0x379:0x379]
---
Predecessors: [0x307, 0x30d]
Successors: [0x37a]
---
0x379 JUMPDEST
---
0x379: JUMPDEST 
---
Entry stack: [V5, 0xa8]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0xa8]

================================

Block 0x37a
[0x37a:0x37b]
---
Predecessors: [0x379]
Successors: [0xa8]
---
0x37a JUMPDEST
0x37b JUMP
---
0x37a: JUMPDEST 
0x37b: JUMP 0xa8
---
Entry stack: [V5, 0xa8]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Function 0:
Public function signature: 0x29dcb0cf
Entry block: 0x5a
Exit block: 0x67
Body: 0x5a, 0x67, 0xaa

Function 1:
Public function signature: 0x590e1ae3
Entry block: 0x7d
Exit block: 0x8a
Body: 0x7d, 0x8a, 0xb3, 0xc4, 0xe4, 0xea, 0xf2, 0x104, 0x10b, 0x111, 0x120, 0x130, 0x17d, 0x18d, 0x1bb, 0x1c6, 0x1c7

Function 2:
Public function signature: 0xb60d4288
Entry block: 0x8c
Exit block: 0x99
Body: 0x8c, 0x99, 0x1ca, 0x1d8, 0x1dc, 0x1f7, 0x215, 0x21e, 0x25a, 0x25e, 0x25f, 0x275, 0x2d5

Function 3:
Public function signature: 0xe5225381
Entry block: 0x9b
Exit block: 0xa8
Body: 0x9b, 0xa8, 0x2d7, 0x2e6, 0x307, 0x30d, 0x379, 0x37a

Function 4:
Public fallback function
Entry block: 0x54
Exit block: 0x58
Body: 0x54, 0x58

