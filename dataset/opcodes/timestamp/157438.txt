Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x215]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x215
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x215
0x24: JUMPI 0x215 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x227]
---
0x25 DUP1
0x26 PUSH4 0x29dcb0cf
0x2b EQ
0x2c PUSH2 0x227
0x2f JUMPI
---
0x26: V16 = 0x29dcb0cf
0x2b: V17 = EQ 0x29dcb0cf V12
0x2c: V18 = 0x227
0x2f: JUMPI 0x227 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x249]
---
0x30 DUP1
0x31 PUSH4 0x38af3eed
0x36 EQ
0x37 PUSH2 0x249
0x3a JUMPI
---
0x31: V19 = 0x38af3eed
0x36: V20 = EQ 0x38af3eed V12
0x37: V21 = 0x249
0x3a: JUMPI 0x249 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x275]
---
0x3b DUP1
0x3c PUSH4 0x6e66f6e9
0x41 EQ
0x42 PUSH2 0x275
0x45 JUMPI
---
0x3c: V22 = 0x6e66f6e9
0x41: V23 = EQ 0x6e66f6e9 V12
0x42: V24 = 0x275
0x45: JUMPI 0x275 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x2a1]
---
0x46 DUP1
0x47 PUSH4 0x70a08231
0x4c EQ
0x4d PUSH2 0x2a1
0x50 JUMPI
---
0x47: V25 = 0x70a08231
0x4c: V26 = EQ 0x70a08231 V12
0x4d: V27 = 0x2a1
0x50: JUMPI 0x2a1 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x2cf]
---
0x51 DUP1
0x52 PUSH4 0x7a3a0e84
0x57 EQ
0x58 PUSH2 0x2cf
0x5b JUMPI
---
0x52: V28 = 0x7a3a0e84
0x57: V29 = EQ 0x7a3a0e84 V12
0x58: V30 = 0x2cf
0x5b: JUMPI 0x2cf V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x2f1]
---
0x5c DUP1
0x5d PUSH4 0x7b3e5e7b
0x62 EQ
0x63 PUSH2 0x2f1
0x66 JUMPI
---
0x5d: V31 = 0x7b3e5e7b
0x62: V32 = EQ 0x7b3e5e7b V12
0x63: V33 = 0x2f1
0x66: JUMPI 0x2f1 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x313]
---
0x67 DUP1
0x68 PUSH4 0xa035b1fe
0x6d EQ
0x6e PUSH2 0x313
0x71 JUMPI
---
0x68: V34 = 0xa035b1fe
0x6d: V35 = EQ 0xa035b1fe V12
0x6e: V36 = 0x313
0x71: JUMPI 0x313 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x335]
---
0x72 DUP1
0x73 PUSH4 0xfd6b7ef8
0x78 EQ
0x79 PUSH2 0x335
0x7c JUMPI
---
0x73: V37 = 0xfd6b7ef8
0x78: V38 = EQ 0xfd6b7ef8 V12
0x79: V39 = 0x335
0x7c: JUMPI 0x335 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x0, 0x72]
Successors: [0x81]
---
0x7d JUMPDEST
0x7e PUSH2 0x213
---
0x7d: JUMPDEST 
0x7e: V40 = 0x213
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x213]
Exit stack: [V12, 0x213]

================================

Block 0x81
[0x81:0x94]
---
Predecessors: [0x7d]
Successors: [0x95, 0x9a]
---
0x81 JUMPDEST
0x82 PUSH1 0x7
0x84 SLOAD
0x85 PUSH1 0x0
0x87 SWAP1
0x88 PUSH2 0x100
0x8b SWAP1
0x8c DIV
0x8d PUSH1 0xff
0x8f AND
0x90 ISZERO
0x91 PUSH2 0x9a
0x94 JUMPI
---
0x81: JUMPDEST 
0x82: V41 = 0x7
0x84: V42 = S[0x7]
0x85: V43 = 0x0
0x88: V44 = 0x100
0x8c: V45 = DIV V42 0x100
0x8d: V46 = 0xff
0x8f: V47 = AND 0xff V45
0x90: V48 = ISZERO V47
0x91: V49 = 0x9a
0x94: JUMPI 0x9a V48
---
Entry stack: [V12, 0x213]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x213, 0x0]

================================

Block 0x95
[0x95:0x99]
---
Predecessors: [0x81]
Successors: []
---
0x95 PUSH1 0x0
0x97 PUSH1 0x0
0x99 REVERT
---
0x95: V50 = 0x0
0x97: V51 = 0x0
0x99: REVERT 0x0 0x0
---
Entry stack: [V12, 0x213, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, 0x0]

================================

Block 0x9a
[0x9a:0xda]
---
Predecessors: [0x81]
Successors: [0xdb, 0xdc]
---
0x9a JUMPDEST
0x9b POP
0x9c PUSH1 0x1
0x9e PUSH1 0xa0
0xa0 PUSH1 0x2
0xa2 EXP
0xa3 SUB
0xa4 CALLER
0xa5 DUP2
0xa6 DUP2
0xa7 AND
0xa8 PUSH1 0x0
0xaa SWAP1
0xab DUP2
0xac MSTORE
0xad PUSH1 0x6
0xaf PUSH1 0x20
0xb1 MSTORE
0xb2 PUSH1 0x40
0xb4 SWAP1
0xb5 SHA3
0xb6 CALLVALUE
0xb7 SWAP1
0xb8 DUP2
0xb9 SWAP1
0xba SSTORE
0xbb PUSH1 0x2
0xbd DUP1
0xbe SLOAD
0xbf DUP3
0xc0 ADD
0xc1 SWAP1
0xc2 SSTORE
0xc3 PUSH1 0x5
0xc5 SLOAD
0xc6 PUSH1 0x4
0xc8 SLOAD
0xc9 SWAP2
0xca SWAP4
0xcb AND
0xcc SWAP2
0xcd PUSH4 0x79c65068
0xd2 SWAP2
0xd3 DUP5
0xd4 DUP2
0xd5 ISZERO
0xd6 ISZERO
0xd7 PUSH2 0xdc
0xda JUMPI
---
0x9a: JUMPDEST 
0x9c: V52 = 0x1
0x9e: V53 = 0xa0
0xa0: V54 = 0x2
0xa2: V55 = EXP 0x2 0xa0
0xa3: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4: V57 = CALLER
0xa7: V58 = AND V57 0xffffffffffffffffffffffffffffffffffffffff
0xa8: V59 = 0x0
0xac: M[0x0] = V58
0xad: V60 = 0x6
0xaf: V61 = 0x20
0xb1: M[0x20] = 0x6
0xb2: V62 = 0x40
0xb5: V63 = SHA3 0x0 0x40
0xb6: V64 = CALLVALUE
0xba: S[V63] = V64
0xbb: V65 = 0x2
0xbe: V66 = S[0x2]
0xc0: V67 = ADD V64 V66
0xc2: S[0x2] = V67
0xc3: V68 = 0x5
0xc5: V69 = S[0x5]
0xc6: V70 = 0x4
0xc8: V71 = S[0x4]
0xcb: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0xcd: V73 = 0x79c65068
0xd5: V74 = ISZERO V71
0xd6: V75 = ISZERO V74
0xd7: V76 = 0xdc
0xda: JUMPI 0xdc V75
---
Entry stack: [V12, 0x213, 0x0]
Stack pops: 1
Stack additions: [V64, V72, 0x79c65068, V57, V71, V64]
Exit stack: [V12, 0x213, V64, V72, 0x79c65068, V57, V71, V64]

================================

Block 0xdb
[0xdb:0xdb]
---
Predecessors: [0x9a]
Successors: []
---
0xdb INVALID
---
0xdb: INVALID 
---
Entry stack: [V12, 0x213, V64, V72, 0x79c65068, V57, V71, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, V64, V72, 0x79c65068, V57, V71, V64]

================================

Block 0xdc
[0xdc:0x129]
---
Predecessors: [0x9a]
Successors: [0x12a, 0x12b]
---
0xdc JUMPDEST
0xdd DIV
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP4
0xe2 PUSH4 0xffffffff
0xe7 AND
0xe8 PUSH1 0xe0
0xea PUSH1 0x2
0xec EXP
0xed MUL
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x4
0xf2 ADD
0xf3 DUP1
0xf4 DUP4
0xf5 PUSH1 0x1
0xf7 PUSH1 0xa0
0xf9 PUSH1 0x2
0xfb EXP
0xfc SUB
0xfd AND
0xfe PUSH1 0x1
0x100 PUSH1 0xa0
0x102 PUSH1 0x2
0x104 EXP
0x105 SUB
0x106 AND
0x107 DUP2
0x108 MSTORE
0x109 PUSH1 0x20
0x10b ADD
0x10c DUP3
0x10d DUP2
0x10e MSTORE
0x10f PUSH1 0x20
0x111 ADD
0x112 SWAP3
0x113 POP
0x114 POP
0x115 POP
0x116 PUSH1 0x0
0x118 PUSH1 0x40
0x11a MLOAD
0x11b DUP1
0x11c DUP4
0x11d SUB
0x11e DUP2
0x11f PUSH1 0x0
0x121 DUP8
0x122 DUP1
0x123 EXTCODESIZE
0x124 ISZERO
0x125 ISZERO
0x126 PUSH2 0x12b
0x129 JUMPI
---
0xdc: JUMPDEST 
0xdd: V77 = DIV V64 V71
0xde: V78 = 0x40
0xe0: V79 = M[0x40]
0xe2: V80 = 0xffffffff
0xe7: V81 = AND 0xffffffff 0x79c65068
0xe8: V82 = 0xe0
0xea: V83 = 0x2
0xec: V84 = EXP 0x2 0xe0
0xed: V85 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x79c65068
0xef: M[V79] = 0x79c6506800000000000000000000000000000000000000000000000000000000
0xf0: V86 = 0x4
0xf2: V87 = ADD 0x4 V79
0xf5: V88 = 0x1
0xf7: V89 = 0xa0
0xf9: V90 = 0x2
0xfb: V91 = EXP 0x2 0xa0
0xfc: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfd: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xfe: V94 = 0x1
0x100: V95 = 0xa0
0x102: V96 = 0x2
0x104: V97 = EXP 0x2 0xa0
0x105: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0x106: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x108: M[V87] = V99
0x109: V100 = 0x20
0x10b: V101 = ADD 0x20 V87
0x10e: M[V101] = V77
0x10f: V102 = 0x20
0x111: V103 = ADD 0x20 V101
0x116: V104 = 0x0
0x118: V105 = 0x40
0x11a: V106 = M[0x40]
0x11d: V107 = SUB V103 V106
0x11f: V108 = 0x0
0x123: V109 = EXTCODESIZE V72
0x124: V110 = ISZERO V109
0x125: V111 = ISZERO V110
0x126: V112 = 0x12b
0x129: JUMPI 0x12b V111
---
Entry stack: [V12, 0x213, V64, V72, 0x79c65068, V57, V71, V64]
Stack pops: 5
Stack additions: [S4, S3, V103, 0x0, V106, V107, V106, 0x0, S4]
Exit stack: [V12, 0x213, V64, V72, 0x79c65068, V103, 0x0, V106, V107, V106, 0x0, V72]

================================

Block 0x12a
[0x12a:0x12a]
---
Predecessors: [0xdc]
Successors: []
---
0x12a INVALID
---
0x12a: INVALID 
---
Entry stack: [V12, 0x213, V64, V72, 0x79c65068, V103, 0x0, V106, V107, V106, 0x0, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, V64, V72, 0x79c65068, V103, 0x0, V106, V107, V106, 0x0, V72]

================================

Block 0x12b
[0x12b:0x137]
---
Predecessors: [0xdc]
Successors: [0x138, 0x139]
---
0x12b JUMPDEST
0x12c PUSH2 0x2c6
0x12f GAS
0x130 SUB
0x131 CALL
0x132 ISZERO
0x133 ISZERO
0x134 PUSH2 0x139
0x137 JUMPI
---
0x12b: JUMPDEST 
0x12c: V113 = 0x2c6
0x12f: V114 = GAS
0x130: V115 = SUB V114 0x2c6
0x131: V116 = CALL V115 V72 0x0 V106 V107 V106 0x0
0x132: V117 = ISZERO V116
0x133: V118 = ISZERO V117
0x134: V119 = 0x139
0x137: JUMPI 0x139 V118
---
Entry stack: [V12, 0x213, V64, V72, 0x79c65068, V103, 0x0, V106, V107, V106, 0x0, V72]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x213, V64, V72, 0x79c65068, V103]

================================

Block 0x138
[0x138:0x138]
---
Predecessors: [0x12b]
Successors: []
---
0x138 INVALID
---
0x138: INVALID 
---
Entry stack: [V12, 0x213, V64, V72, 0x79c65068, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, V64, V72, 0x79c65068, V103]

================================

Block 0x139
[0x139:0x163]
---
Predecessors: [0x12b]
Successors: [0x164, 0x165]
---
0x139 JUMPDEST
0x13a POP
0x13b POP
0x13c PUSH1 0x5
0x13e SLOAD
0x13f PUSH1 0x0
0x141 SLOAD
0x142 PUSH1 0x4
0x144 SLOAD
0x145 PUSH1 0x1
0x147 PUSH1 0xa0
0x149 PUSH1 0x2
0x14b EXP
0x14c SUB
0x14d SWAP3
0x14e DUP4
0x14f AND
0x150 SWAP4
0x151 POP
0x152 PUSH4 0x79c65068
0x157 SWAP3
0x158 SWAP1
0x159 SWAP2
0x15a AND
0x15b SWAP1
0x15c DUP5
0x15d DUP2
0x15e ISZERO
0x15f ISZERO
0x160 PUSH2 0x165
0x163 JUMPI
---
0x139: JUMPDEST 
0x13c: V120 = 0x5
0x13e: V121 = S[0x5]
0x13f: V122 = 0x0
0x141: V123 = S[0x0]
0x142: V124 = 0x4
0x144: V125 = S[0x4]
0x145: V126 = 0x1
0x147: V127 = 0xa0
0x149: V128 = 0x2
0x14b: V129 = EXP 0x2 0xa0
0x14c: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14f: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x152: V132 = 0x79c65068
0x15a: V133 = AND V123 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V134 = ISZERO V125
0x15f: V135 = ISZERO V134
0x160: V136 = 0x165
0x163: JUMPI 0x165 V135
---
Entry stack: [V12, 0x213, V64, V72, 0x79c65068, V103]
Stack pops: 4
Stack additions: [S3, V131, 0x79c65068, V133, V125, S3]
Exit stack: [V12, 0x213, V64, V131, 0x79c65068, V133, V125, V64]

================================

Block 0x164
[0x164:0x164]
---
Predecessors: [0x139]
Successors: []
---
0x164 INVALID
---
0x164: INVALID 
---
Entry stack: [V12, 0x213, V64, V131, 0x79c65068, V133, V125, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, V64, V131, 0x79c65068, V133, V125, V64]

================================

Block 0x165
[0x165:0x1b2]
---
Predecessors: [0x139]
Successors: [0x1b3, 0x1b4]
---
0x165 JUMPDEST
0x166 DIV
0x167 PUSH1 0x40
0x169 MLOAD
0x16a DUP4
0x16b PUSH4 0xffffffff
0x170 AND
0x171 PUSH1 0xe0
0x173 PUSH1 0x2
0x175 EXP
0x176 MUL
0x177 DUP2
0x178 MSTORE
0x179 PUSH1 0x4
0x17b ADD
0x17c DUP1
0x17d DUP4
0x17e PUSH1 0x1
0x180 PUSH1 0xa0
0x182 PUSH1 0x2
0x184 EXP
0x185 SUB
0x186 AND
0x187 PUSH1 0x1
0x189 PUSH1 0xa0
0x18b PUSH1 0x2
0x18d EXP
0x18e SUB
0x18f AND
0x190 DUP2
0x191 MSTORE
0x192 PUSH1 0x20
0x194 ADD
0x195 DUP3
0x196 DUP2
0x197 MSTORE
0x198 PUSH1 0x20
0x19a ADD
0x19b SWAP3
0x19c POP
0x19d POP
0x19e POP
0x19f PUSH1 0x0
0x1a1 PUSH1 0x40
0x1a3 MLOAD
0x1a4 DUP1
0x1a5 DUP4
0x1a6 SUB
0x1a7 DUP2
0x1a8 PUSH1 0x0
0x1aa DUP8
0x1ab DUP1
0x1ac EXTCODESIZE
0x1ad ISZERO
0x1ae ISZERO
0x1af PUSH2 0x1b4
0x1b2 JUMPI
---
0x165: JUMPDEST 
0x166: V137 = DIV V64 V125
0x167: V138 = 0x40
0x169: V139 = M[0x40]
0x16b: V140 = 0xffffffff
0x170: V141 = AND 0xffffffff 0x79c65068
0x171: V142 = 0xe0
0x173: V143 = 0x2
0x175: V144 = EXP 0x2 0xe0
0x176: V145 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x79c65068
0x178: M[V139] = 0x79c6506800000000000000000000000000000000000000000000000000000000
0x179: V146 = 0x4
0x17b: V147 = ADD 0x4 V139
0x17e: V148 = 0x1
0x180: V149 = 0xa0
0x182: V150 = 0x2
0x184: V151 = EXP 0x2 0xa0
0x185: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x186: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x187: V154 = 0x1
0x189: V155 = 0xa0
0x18b: V156 = 0x2
0x18d: V157 = EXP 0x2 0xa0
0x18e: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18f: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x191: M[V147] = V159
0x192: V160 = 0x20
0x194: V161 = ADD 0x20 V147
0x197: M[V161] = V137
0x198: V162 = 0x20
0x19a: V163 = ADD 0x20 V161
0x19f: V164 = 0x0
0x1a1: V165 = 0x40
0x1a3: V166 = M[0x40]
0x1a6: V167 = SUB V163 V166
0x1a8: V168 = 0x0
0x1ac: V169 = EXTCODESIZE V131
0x1ad: V170 = ISZERO V169
0x1ae: V171 = ISZERO V170
0x1af: V172 = 0x1b4
0x1b2: JUMPI 0x1b4 V171
---
Entry stack: [V12, 0x213, V64, V131, 0x79c65068, V133, V125, V64]
Stack pops: 5
Stack additions: [S4, S3, V163, 0x0, V166, V167, V166, 0x0, S4]
Exit stack: [V12, 0x213, V64, V131, 0x79c65068, V163, 0x0, V166, V167, V166, 0x0, V131]

================================

Block 0x1b3
[0x1b3:0x1b3]
---
Predecessors: [0x165]
Successors: []
---
0x1b3 INVALID
---
0x1b3: INVALID 
---
Entry stack: [V12, 0x213, V64, V131, 0x79c65068, V163, 0x0, V166, V167, V166, 0x0, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, V64, V131, 0x79c65068, V163, 0x0, V166, V167, V166, 0x0, V131]

================================

Block 0x1b4
[0x1b4:0x1c0]
---
Predecessors: [0x165]
Successors: [0x1c1, 0x1c2]
---
0x1b4 JUMPDEST
0x1b5 PUSH2 0x2c6
0x1b8 GAS
0x1b9 SUB
0x1ba CALL
0x1bb ISZERO
0x1bc ISZERO
0x1bd PUSH2 0x1c2
0x1c0 JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V173 = 0x2c6
0x1b8: V174 = GAS
0x1b9: V175 = SUB V174 0x2c6
0x1ba: V176 = CALL V175 V131 0x0 V166 V167 V166 0x0
0x1bb: V177 = ISZERO V176
0x1bc: V178 = ISZERO V177
0x1bd: V179 = 0x1c2
0x1c0: JUMPI 0x1c2 V178
---
Entry stack: [V12, 0x213, V64, V131, 0x79c65068, V163, 0x0, V166, V167, V166, 0x0, V131]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x213, V64, V131, 0x79c65068, V163]

================================

Block 0x1c1
[0x1c1:0x1c1]
---
Predecessors: [0x1b4]
Successors: []
---
0x1c1 INVALID
---
0x1c1: INVALID 
---
Entry stack: [V12, 0x213, V64, V131, 0x79c65068, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, V64, V131, 0x79c65068, V163]

================================

Block 0x1c2
[0x1c2:0x20f]
---
Predecessors: [0x1b4]
Successors: [0x210]
---
0x1c2 JUMPDEST
0x1c3 POP
0x1c4 POP
0x1c5 PUSH1 0x40
0x1c7 DUP1
0x1c8 MLOAD
0x1c9 PUSH1 0x1
0x1cb PUSH1 0xa0
0x1cd PUSH1 0x2
0x1cf EXP
0x1d0 SUB
0x1d1 CALLER
0x1d2 AND
0x1d3 DUP2
0x1d4 MSTORE
0x1d5 PUSH1 0x20
0x1d7 DUP2
0x1d8 ADD
0x1d9 DUP5
0x1da SWAP1
0x1db MSTORE
0x1dc PUSH1 0x1
0x1de DUP2
0x1df DUP4
0x1e0 ADD
0x1e1 MSTORE
0x1e2 SWAP1
0x1e3 MLOAD
0x1e4 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x205 SWAP3
0x206 POP
0x207 SWAP1
0x208 DUP2
0x209 SWAP1
0x20a SUB
0x20b PUSH1 0x60
0x20d ADD
0x20e SWAP1
0x20f LOG1
---
0x1c2: JUMPDEST 
0x1c5: V180 = 0x40
0x1c8: V181 = M[0x40]
0x1c9: V182 = 0x1
0x1cb: V183 = 0xa0
0x1cd: V184 = 0x2
0x1cf: V185 = EXP 0x2 0xa0
0x1d0: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d1: V187 = CALLER
0x1d2: V188 = AND V187 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: M[V181] = V188
0x1d5: V189 = 0x20
0x1d8: V190 = ADD V181 0x20
0x1db: M[V190] = V64
0x1dc: V191 = 0x1
0x1e0: V192 = ADD 0x40 V181
0x1e1: M[V192] = 0x1
0x1e3: V193 = M[0x40]
0x1e4: V194 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x20a: V195 = SUB V181 V193
0x20b: V196 = 0x60
0x20d: V197 = ADD 0x60 V195
0x20f: LOG V193 V197 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V12, 0x213, V64, V131, 0x79c65068, V163]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x213, V64]

================================

Block 0x210
[0x210:0x212]
---
Predecessors: [0x1c2, 0x404, 0x4f9, 0x52e]
Successors: [0x213]
---
0x210 JUMPDEST
0x211 POP
0x212 JUMP
---
0x210: JUMPDEST 
0x212: JUMP 0x213
---
Entry stack: [V12, 0x213, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x213
[0x213:0x214]
---
Predecessors: [0x210, 0x3ba, 0x594]
Successors: []
---
0x213 JUMPDEST
0x214 STOP
---
0x213: JUMPDEST 
0x214: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x215
[0x215:0x21b]
---
Predecessors: [0xb]
Successors: [0x21c, 0x21d]
---
0x215 JUMPDEST
0x216 CALLVALUE
0x217 ISZERO
0x218 PUSH2 0x21d
0x21b JUMPI
---
0x215: JUMPDEST 
0x216: V198 = CALLVALUE
0x217: V199 = ISZERO V198
0x218: V200 = 0x21d
0x21b: JUMPI 0x21d V199
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21c
[0x21c:0x21c]
---
Predecessors: [0x215]
Successors: []
---
0x21c INVALID
---
0x21c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21d
[0x21d:0x224]
---
Predecessors: [0x215]
Successors: [0x347]
---
0x21d JUMPDEST
0x21e PUSH2 0x213
0x221 PUSH2 0x347
0x224 JUMP
---
0x21d: JUMPDEST 
0x21e: V201 = 0x213
0x221: V202 = 0x347
0x224: JUMP 0x347
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x213]
Exit stack: [V12, 0x213]

================================

Block 0x225
[0x225:0x226]
---
Predecessors: []
Successors: []
---
0x225 JUMPDEST
0x226 STOP
---
0x225: JUMPDEST 
0x226: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x227
[0x227:0x22d]
---
Predecessors: [0x25]
Successors: [0x22e, 0x22f]
---
0x227 JUMPDEST
0x228 CALLVALUE
0x229 ISZERO
0x22a PUSH2 0x22f
0x22d JUMPI
---
0x227: JUMPDEST 
0x228: V203 = CALLVALUE
0x229: V204 = ISZERO V203
0x22a: V205 = 0x22f
0x22d: JUMPI 0x22f V204
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22e
[0x22e:0x22e]
---
Predecessors: [0x227]
Successors: []
---
0x22e INVALID
---
0x22e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22f
[0x22f:0x236]
---
Predecessors: [0x227]
Successors: [0x3bc]
---
0x22f JUMPDEST
0x230 PUSH2 0x237
0x233 PUSH2 0x3bc
0x236 JUMP
---
0x22f: JUMPDEST 
0x230: V206 = 0x237
0x233: V207 = 0x3bc
0x236: JUMP 0x3bc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x237]
Exit stack: [V12, 0x237]

================================

Block 0x237
[0x237:0x248]
---
Predecessors: [0x3bc, 0x3e0, 0x3f2, 0x3f8, 0x3fe]
Successors: []
---
0x237 JUMPDEST
0x238 PUSH1 0x40
0x23a DUP1
0x23b MLOAD
0x23c SWAP2
0x23d DUP3
0x23e MSTORE
0x23f MLOAD
0x240 SWAP1
0x241 DUP2
0x242 SWAP1
0x243 SUB
0x244 PUSH1 0x20
0x246 ADD
0x247 SWAP1
0x248 RETURN
---
0x237: JUMPDEST 
0x238: V208 = 0x40
0x23b: V209 = M[0x40]
0x23e: M[V209] = S0
0x23f: V210 = M[0x40]
0x243: V211 = SUB V209 V210
0x244: V212 = 0x20
0x246: V213 = ADD 0x20 V211
0x248: RETURN V210 V213
---
Entry stack: [V12, 0x237, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x237]

================================

Block 0x249
[0x249:0x24f]
---
Predecessors: [0x30]
Successors: [0x250, 0x251]
---
0x249 JUMPDEST
0x24a CALLVALUE
0x24b ISZERO
0x24c PUSH2 0x251
0x24f JUMPI
---
0x249: JUMPDEST 
0x24a: V214 = CALLVALUE
0x24b: V215 = ISZERO V214
0x24c: V216 = 0x251
0x24f: JUMPI 0x251 V215
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x250
[0x250:0x250]
---
Predecessors: [0x249]
Successors: []
---
0x250 INVALID
---
0x250: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x251
[0x251:0x258]
---
Predecessors: [0x249]
Successors: [0x3c2]
---
0x251 JUMPDEST
0x252 PUSH2 0x259
0x255 PUSH2 0x3c2
0x258 JUMP
---
0x251: JUMPDEST 
0x252: V217 = 0x259
0x255: V218 = 0x3c2
0x258: JUMP 0x3c2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x259]
Exit stack: [V12, 0x259]

================================

Block 0x259
[0x259:0x274]
---
Predecessors: [0x3c2, 0x3d1]
Successors: []
---
0x259 JUMPDEST
0x25a PUSH1 0x40
0x25c DUP1
0x25d MLOAD
0x25e PUSH1 0x1
0x260 PUSH1 0xa0
0x262 PUSH1 0x2
0x264 EXP
0x265 SUB
0x266 SWAP1
0x267 SWAP3
0x268 AND
0x269 DUP3
0x26a MSTORE
0x26b MLOAD
0x26c SWAP1
0x26d DUP2
0x26e SWAP1
0x26f SUB
0x270 PUSH1 0x20
0x272 ADD
0x273 SWAP1
0x274 RETURN
---
0x259: JUMPDEST 
0x25a: V219 = 0x40
0x25d: V220 = M[0x40]
0x25e: V221 = 0x1
0x260: V222 = 0xa0
0x262: V223 = 0x2
0x264: V224 = EXP 0x2 0xa0
0x265: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x268: V226 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x26a: M[V220] = V226
0x26b: V227 = M[0x40]
0x26f: V228 = SUB V220 V227
0x270: V229 = 0x20
0x272: V230 = ADD 0x20 V228
0x274: RETURN V227 V230
---
Entry stack: [V12, 0x259, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x259]

================================

Block 0x275
[0x275:0x27b]
---
Predecessors: [0x3b]
Successors: [0x27c, 0x27d]
---
0x275 JUMPDEST
0x276 CALLVALUE
0x277 ISZERO
0x278 PUSH2 0x27d
0x27b JUMPI
---
0x275: JUMPDEST 
0x276: V231 = CALLVALUE
0x277: V232 = ISZERO V231
0x278: V233 = 0x27d
0x27b: JUMPI 0x27d V232
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27c
[0x27c:0x27c]
---
Predecessors: [0x275]
Successors: []
---
0x27c INVALID
---
0x27c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27d
[0x27d:0x284]
---
Predecessors: [0x275]
Successors: [0x3d1]
---
0x27d JUMPDEST
0x27e PUSH2 0x259
0x281 PUSH2 0x3d1
0x284 JUMP
---
0x27d: JUMPDEST 
0x27e: V234 = 0x259
0x281: V235 = 0x3d1
0x284: JUMP 0x3d1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x259]
Exit stack: [V12, 0x259]

================================

Block 0x285
[0x285:0x2a0]
---
Predecessors: []
Successors: []
---
0x285 JUMPDEST
0x286 PUSH1 0x40
0x288 DUP1
0x289 MLOAD
0x28a PUSH1 0x1
0x28c PUSH1 0xa0
0x28e PUSH1 0x2
0x290 EXP
0x291 SUB
0x292 SWAP1
0x293 SWAP3
0x294 AND
0x295 DUP3
0x296 MSTORE
0x297 MLOAD
0x298 SWAP1
0x299 DUP2
0x29a SWAP1
0x29b SUB
0x29c PUSH1 0x20
0x29e ADD
0x29f SWAP1
0x2a0 RETURN
---
0x285: JUMPDEST 
0x286: V236 = 0x40
0x289: V237 = M[0x40]
0x28a: V238 = 0x1
0x28c: V239 = 0xa0
0x28e: V240 = 0x2
0x290: V241 = EXP 0x2 0xa0
0x291: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x294: V243 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x296: M[V237] = V243
0x297: V244 = M[0x40]
0x29b: V245 = SUB V237 V244
0x29c: V246 = 0x20
0x29e: V247 = ADD 0x20 V245
0x2a0: RETURN V244 V247
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2a1
[0x2a1:0x2a7]
---
Predecessors: [0x46]
Successors: [0x2a8, 0x2a9]
---
0x2a1 JUMPDEST
0x2a2 CALLVALUE
0x2a3 ISZERO
0x2a4 PUSH2 0x2a9
0x2a7 JUMPI
---
0x2a1: JUMPDEST 
0x2a2: V248 = CALLVALUE
0x2a3: V249 = ISZERO V248
0x2a4: V250 = 0x2a9
0x2a7: JUMPI 0x2a9 V249
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a8
[0x2a8:0x2a8]
---
Predecessors: [0x2a1]
Successors: []
---
0x2a8 INVALID
---
0x2a8: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a9
[0x2a9:0x2bc]
---
Predecessors: [0x2a1]
Successors: [0x3e0]
---
0x2a9 JUMPDEST
0x2aa PUSH2 0x237
0x2ad PUSH1 0x1
0x2af PUSH1 0xa0
0x2b1 PUSH1 0x2
0x2b3 EXP
0x2b4 SUB
0x2b5 PUSH1 0x4
0x2b7 CALLDATALOAD
0x2b8 AND
0x2b9 PUSH2 0x3e0
0x2bc JUMP
---
0x2a9: JUMPDEST 
0x2aa: V251 = 0x237
0x2ad: V252 = 0x1
0x2af: V253 = 0xa0
0x2b1: V254 = 0x2
0x2b3: V255 = EXP 0x2 0xa0
0x2b4: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b5: V257 = 0x4
0x2b7: V258 = CALLDATALOAD 0x4
0x2b8: V259 = AND V258 0xffffffffffffffffffffffffffffffffffffffff
0x2b9: V260 = 0x3e0
0x2bc: JUMP 0x3e0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x237, V259]
Exit stack: [V12, 0x237, V259]

================================

Block 0x2bd
[0x2bd:0x2ce]
---
Predecessors: []
Successors: []
---
0x2bd JUMPDEST
0x2be PUSH1 0x40
0x2c0 DUP1
0x2c1 MLOAD
0x2c2 SWAP2
0x2c3 DUP3
0x2c4 MSTORE
0x2c5 MLOAD
0x2c6 SWAP1
0x2c7 DUP2
0x2c8 SWAP1
0x2c9 SUB
0x2ca PUSH1 0x20
0x2cc ADD
0x2cd SWAP1
0x2ce RETURN
---
0x2bd: JUMPDEST 
0x2be: V261 = 0x40
0x2c1: V262 = M[0x40]
0x2c4: M[V262] = S0
0x2c5: V263 = M[0x40]
0x2c9: V264 = SUB V262 V263
0x2ca: V265 = 0x20
0x2cc: V266 = ADD 0x20 V264
0x2ce: RETURN V263 V266
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2cf
[0x2cf:0x2d5]
---
Predecessors: [0x51]
Successors: [0x2d6, 0x2d7]
---
0x2cf JUMPDEST
0x2d0 CALLVALUE
0x2d1 ISZERO
0x2d2 PUSH2 0x2d7
0x2d5 JUMPI
---
0x2cf: JUMPDEST 
0x2d0: V267 = CALLVALUE
0x2d1: V268 = ISZERO V267
0x2d2: V269 = 0x2d7
0x2d5: JUMPI 0x2d7 V268
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d6
[0x2d6:0x2d6]
---
Predecessors: [0x2cf]
Successors: []
---
0x2d6 INVALID
---
0x2d6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d7
[0x2d7:0x2de]
---
Predecessors: [0x2cf]
Successors: [0x3f2]
---
0x2d7 JUMPDEST
0x2d8 PUSH2 0x237
0x2db PUSH2 0x3f2
0x2de JUMP
---
0x2d7: JUMPDEST 
0x2d8: V270 = 0x237
0x2db: V271 = 0x3f2
0x2de: JUMP 0x3f2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x237]
Exit stack: [V12, 0x237]

================================

Block 0x2df
[0x2df:0x2f0]
---
Predecessors: []
Successors: []
---
0x2df JUMPDEST
0x2e0 PUSH1 0x40
0x2e2 DUP1
0x2e3 MLOAD
0x2e4 SWAP2
0x2e5 DUP3
0x2e6 MSTORE
0x2e7 MLOAD
0x2e8 SWAP1
0x2e9 DUP2
0x2ea SWAP1
0x2eb SUB
0x2ec PUSH1 0x20
0x2ee ADD
0x2ef SWAP1
0x2f0 RETURN
---
0x2df: JUMPDEST 
0x2e0: V272 = 0x40
0x2e3: V273 = M[0x40]
0x2e6: M[V273] = S0
0x2e7: V274 = M[0x40]
0x2eb: V275 = SUB V273 V274
0x2ec: V276 = 0x20
0x2ee: V277 = ADD 0x20 V275
0x2f0: RETURN V274 V277
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f1
[0x2f1:0x2f7]
---
Predecessors: [0x5c]
Successors: [0x2f8, 0x2f9]
---
0x2f1 JUMPDEST
0x2f2 CALLVALUE
0x2f3 ISZERO
0x2f4 PUSH2 0x2f9
0x2f7 JUMPI
---
0x2f1: JUMPDEST 
0x2f2: V278 = CALLVALUE
0x2f3: V279 = ISZERO V278
0x2f4: V280 = 0x2f9
0x2f7: JUMPI 0x2f9 V279
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f8
[0x2f8:0x2f8]
---
Predecessors: [0x2f1]
Successors: []
---
0x2f8 INVALID
---
0x2f8: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f9
[0x2f9:0x300]
---
Predecessors: [0x2f1]
Successors: [0x3f8]
---
0x2f9 JUMPDEST
0x2fa PUSH2 0x237
0x2fd PUSH2 0x3f8
0x300 JUMP
---
0x2f9: JUMPDEST 
0x2fa: V281 = 0x237
0x2fd: V282 = 0x3f8
0x300: JUMP 0x3f8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x237]
Exit stack: [V12, 0x237]

================================

Block 0x301
[0x301:0x312]
---
Predecessors: []
Successors: []
---
0x301 JUMPDEST
0x302 PUSH1 0x40
0x304 DUP1
0x305 MLOAD
0x306 SWAP2
0x307 DUP3
0x308 MSTORE
0x309 MLOAD
0x30a SWAP1
0x30b DUP2
0x30c SWAP1
0x30d SUB
0x30e PUSH1 0x20
0x310 ADD
0x311 SWAP1
0x312 RETURN
---
0x301: JUMPDEST 
0x302: V283 = 0x40
0x305: V284 = M[0x40]
0x308: M[V284] = S0
0x309: V285 = M[0x40]
0x30d: V286 = SUB V284 V285
0x30e: V287 = 0x20
0x310: V288 = ADD 0x20 V286
0x312: RETURN V285 V288
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x313
[0x313:0x319]
---
Predecessors: [0x67]
Successors: [0x31a, 0x31b]
---
0x313 JUMPDEST
0x314 CALLVALUE
0x315 ISZERO
0x316 PUSH2 0x31b
0x319 JUMPI
---
0x313: JUMPDEST 
0x314: V289 = CALLVALUE
0x315: V290 = ISZERO V289
0x316: V291 = 0x31b
0x319: JUMPI 0x31b V290
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31a
[0x31a:0x31a]
---
Predecessors: [0x313]
Successors: []
---
0x31a INVALID
---
0x31a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31b
[0x31b:0x322]
---
Predecessors: [0x313]
Successors: [0x3fe]
---
0x31b JUMPDEST
0x31c PUSH2 0x237
0x31f PUSH2 0x3fe
0x322 JUMP
---
0x31b: JUMPDEST 
0x31c: V292 = 0x237
0x31f: V293 = 0x3fe
0x322: JUMP 0x3fe
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x237]
Exit stack: [V12, 0x237]

================================

Block 0x323
[0x323:0x334]
---
Predecessors: []
Successors: []
---
0x323 JUMPDEST
0x324 PUSH1 0x40
0x326 DUP1
0x327 MLOAD
0x328 SWAP2
0x329 DUP3
0x32a MSTORE
0x32b MLOAD
0x32c SWAP1
0x32d DUP2
0x32e SWAP1
0x32f SUB
0x330 PUSH1 0x20
0x332 ADD
0x333 SWAP1
0x334 RETURN
---
0x323: JUMPDEST 
0x324: V294 = 0x40
0x327: V295 = M[0x40]
0x32a: M[V295] = S0
0x32b: V296 = M[0x40]
0x32f: V297 = SUB V295 V296
0x330: V298 = 0x20
0x332: V299 = ADD 0x20 V297
0x334: RETURN V296 V299
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x335
[0x335:0x33b]
---
Predecessors: [0x72]
Successors: [0x33c, 0x33d]
---
0x335 JUMPDEST
0x336 CALLVALUE
0x337 ISZERO
0x338 PUSH2 0x33d
0x33b JUMPI
---
0x335: JUMPDEST 
0x336: V300 = CALLVALUE
0x337: V301 = ISZERO V300
0x338: V302 = 0x33d
0x33b: JUMPI 0x33d V301
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33c
[0x33c:0x33c]
---
Predecessors: [0x335]
Successors: []
---
0x33c INVALID
---
0x33c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33d
[0x33d:0x344]
---
Predecessors: [0x335]
Successors: [0x404]
---
0x33d JUMPDEST
0x33e PUSH2 0x213
0x341 PUSH2 0x404
0x344 JUMP
---
0x33d: JUMPDEST 
0x33e: V303 = 0x213
0x341: V304 = 0x404
0x344: JUMP 0x404
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x213]
Exit stack: [V12, 0x213]

================================

Block 0x345
[0x345:0x346]
---
Predecessors: []
Successors: []
---
0x345 JUMPDEST
0x346 STOP
---
0x345: JUMPDEST 
0x346: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x347
[0x347:0x350]
---
Predecessors: [0x21d]
Successors: [0x351, 0x3b8]
---
0x347 JUMPDEST
0x348 PUSH1 0x3
0x34a SLOAD
0x34b TIMESTAMP
0x34c LT
0x34d PUSH2 0x3b8
0x350 JUMPI
---
0x347: JUMPDEST 
0x348: V305 = 0x3
0x34a: V306 = S[0x3]
0x34b: V307 = TIMESTAMP
0x34c: V308 = LT V307 V306
0x34d: V309 = 0x3b8
0x350: JUMPI 0x3b8 V308
---
Entry stack: [V12, 0x213]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213]

================================

Block 0x351
[0x351:0x3b7]
---
Predecessors: [0x347]
Successors: [0x3b8]
---
0x351 PUSH1 0x7
0x353 DUP1
0x354 SLOAD
0x355 PUSH1 0xff
0x357 NOT
0x358 AND
0x359 PUSH1 0x1
0x35b OR
0x35c SWAP1
0x35d SSTORE
0x35e PUSH1 0x0
0x360 SLOAD
0x361 PUSH1 0x2
0x363 SLOAD
0x364 PUSH1 0x40
0x366 DUP1
0x367 MLOAD
0x368 PUSH1 0x1
0x36a PUSH1 0xa0
0x36c PUSH1 0x2
0x36e EXP
0x36f SUB
0x370 SWAP1
0x371 SWAP4
0x372 AND
0x373 DUP4
0x374 MSTORE
0x375 PUSH1 0x20
0x377 DUP4
0x378 ADD
0x379 SWAP2
0x37a SWAP1
0x37b SWAP2
0x37c MSTORE
0x37d DUP1
0x37e MLOAD
0x37f PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x3a0 SWAP3
0x3a1 DUP2
0x3a2 SWAP1
0x3a3 SUB
0x3a4 SWAP1
0x3a5 SWAP2
0x3a6 ADD
0x3a7 SWAP1
0x3a8 LOG1
0x3a9 PUSH1 0x7
0x3ab DUP1
0x3ac SLOAD
0x3ad PUSH2 0xff00
0x3b0 NOT
0x3b1 AND
0x3b2 PUSH2 0x100
0x3b5 OR
0x3b6 SWAP1
0x3b7 SSTORE
---
0x351: V310 = 0x7
0x354: V311 = S[0x7]
0x355: V312 = 0xff
0x357: V313 = NOT 0xff
0x358: V314 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V311
0x359: V315 = 0x1
0x35b: V316 = OR 0x1 V314
0x35d: S[0x7] = V316
0x35e: V317 = 0x0
0x360: V318 = S[0x0]
0x361: V319 = 0x2
0x363: V320 = S[0x2]
0x364: V321 = 0x40
0x367: V322 = M[0x40]
0x368: V323 = 0x1
0x36a: V324 = 0xa0
0x36c: V325 = 0x2
0x36e: V326 = EXP 0x2 0xa0
0x36f: V327 = SUB 0x10000000000000000000000000000000000000000 0x1
0x372: V328 = AND V318 0xffffffffffffffffffffffffffffffffffffffff
0x374: M[V322] = V328
0x375: V329 = 0x20
0x378: V330 = ADD V322 0x20
0x37c: M[V330] = V320
0x37e: V331 = M[0x40]
0x37f: V332 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x3a3: V333 = SUB V322 V331
0x3a6: V334 = ADD 0x40 V333
0x3a8: LOG V331 V334 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x3a9: V335 = 0x7
0x3ac: V336 = S[0x7]
0x3ad: V337 = 0xff00
0x3b0: V338 = NOT 0xff00
0x3b1: V339 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V336
0x3b2: V340 = 0x100
0x3b5: V341 = OR 0x100 V339
0x3b7: S[0x7] = V341
---
Entry stack: [V12, 0x213]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213]

================================

Block 0x3b8
[0x3b8:0x3b8]
---
Predecessors: [0x347, 0x351]
Successors: [0x3b9]
---
0x3b8 JUMPDEST
---
0x3b8: JUMPDEST 
---
Entry stack: [V12, 0x213]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213]

================================

Block 0x3b9
[0x3b9:0x3b9]
---
Predecessors: [0x3b8]
Successors: [0x3ba]
---
0x3b9 JUMPDEST
---
0x3b9: JUMPDEST 
---
Entry stack: [V12, 0x213]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213]

================================

Block 0x3ba
[0x3ba:0x3bb]
---
Predecessors: [0x3b9]
Successors: [0x213]
---
0x3ba JUMPDEST
0x3bb JUMP
---
0x3ba: JUMPDEST 
0x3bb: JUMP 0x213
---
Entry stack: [V12, 0x213]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x3bc
[0x3bc:0x3c1]
---
Predecessors: [0x22f]
Successors: [0x237]
---
0x3bc JUMPDEST
0x3bd PUSH1 0x3
0x3bf SLOAD
0x3c0 DUP2
0x3c1 JUMP
---
0x3bc: JUMPDEST 
0x3bd: V342 = 0x3
0x3bf: V343 = S[0x3]
0x3c1: JUMP 0x237
---
Entry stack: [V12, 0x237]
Stack pops: 1
Stack additions: [S0, V343]
Exit stack: [V12, 0x237, V343]

================================

Block 0x3c2
[0x3c2:0x3d0]
---
Predecessors: [0x251]
Successors: [0x259]
---
0x3c2 JUMPDEST
0x3c3 PUSH1 0x0
0x3c5 SLOAD
0x3c6 PUSH1 0x1
0x3c8 PUSH1 0xa0
0x3ca PUSH1 0x2
0x3cc EXP
0x3cd SUB
0x3ce AND
0x3cf DUP2
0x3d0 JUMP
---
0x3c2: JUMPDEST 
0x3c3: V344 = 0x0
0x3c5: V345 = S[0x0]
0x3c6: V346 = 0x1
0x3c8: V347 = 0xa0
0x3ca: V348 = 0x2
0x3cc: V349 = EXP 0x2 0xa0
0x3cd: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ce: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x3d0: JUMP 0x259
---
Entry stack: [V12, 0x259]
Stack pops: 1
Stack additions: [S0, V351]
Exit stack: [V12, 0x259, V351]

================================

Block 0x3d1
[0x3d1:0x3df]
---
Predecessors: [0x27d]
Successors: [0x259]
---
0x3d1 JUMPDEST
0x3d2 PUSH1 0x5
0x3d4 SLOAD
0x3d5 PUSH1 0x1
0x3d7 PUSH1 0xa0
0x3d9 PUSH1 0x2
0x3db EXP
0x3dc SUB
0x3dd AND
0x3de DUP2
0x3df JUMP
---
0x3d1: JUMPDEST 
0x3d2: V352 = 0x5
0x3d4: V353 = S[0x5]
0x3d5: V354 = 0x1
0x3d7: V355 = 0xa0
0x3d9: V356 = 0x2
0x3db: V357 = EXP 0x2 0xa0
0x3dc: V358 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3dd: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x3df: JUMP 0x259
---
Entry stack: [V12, 0x259]
Stack pops: 1
Stack additions: [S0, V359]
Exit stack: [V12, 0x259, V359]

================================

Block 0x3e0
[0x3e0:0x3f1]
---
Predecessors: [0x2a9]
Successors: [0x237]
---
0x3e0 JUMPDEST
0x3e1 PUSH1 0x6
0x3e3 PUSH1 0x20
0x3e5 MSTORE
0x3e6 PUSH1 0x0
0x3e8 SWAP1
0x3e9 DUP2
0x3ea MSTORE
0x3eb PUSH1 0x40
0x3ed SWAP1
0x3ee SHA3
0x3ef SLOAD
0x3f0 DUP2
0x3f1 JUMP
---
0x3e0: JUMPDEST 
0x3e1: V360 = 0x6
0x3e3: V361 = 0x20
0x3e5: M[0x20] = 0x6
0x3e6: V362 = 0x0
0x3ea: M[0x0] = V259
0x3eb: V363 = 0x40
0x3ee: V364 = SHA3 0x0 0x40
0x3ef: V365 = S[V364]
0x3f1: JUMP 0x237
---
Entry stack: [V12, 0x237, V259]
Stack pops: 2
Stack additions: [S1, V365]
Exit stack: [V12, 0x237, V365]

================================

Block 0x3f2
[0x3f2:0x3f7]
---
Predecessors: [0x2d7]
Successors: [0x237]
---
0x3f2 JUMPDEST
0x3f3 PUSH1 0x1
0x3f5 SLOAD
0x3f6 DUP2
0x3f7 JUMP
---
0x3f2: JUMPDEST 
0x3f3: V366 = 0x1
0x3f5: V367 = S[0x1]
0x3f7: JUMP 0x237
---
Entry stack: [V12, 0x237]
Stack pops: 1
Stack additions: [S0, V367]
Exit stack: [V12, 0x237, V367]

================================

Block 0x3f8
[0x3f8:0x3fd]
---
Predecessors: [0x2f9]
Successors: [0x237]
---
0x3f8 JUMPDEST
0x3f9 PUSH1 0x2
0x3fb SLOAD
0x3fc DUP2
0x3fd JUMP
---
0x3f8: JUMPDEST 
0x3f9: V368 = 0x2
0x3fb: V369 = S[0x2]
0x3fd: JUMP 0x237
---
Entry stack: [V12, 0x237]
Stack pops: 1
Stack additions: [S0, V369]
Exit stack: [V12, 0x237, V369]

================================

Block 0x3fe
[0x3fe:0x403]
---
Predecessors: [0x31b]
Successors: [0x237]
---
0x3fe JUMPDEST
0x3ff PUSH1 0x4
0x401 SLOAD
0x402 DUP2
0x403 JUMP
---
0x3fe: JUMPDEST 
0x3ff: V370 = 0x4
0x401: V371 = S[0x4]
0x403: JUMP 0x237
---
Entry stack: [V12, 0x237]
Stack pops: 1
Stack additions: [S0, V371]
Exit stack: [V12, 0x237, V371]

================================

Block 0x404
[0x404:0x410]
---
Predecessors: [0x33d]
Successors: [0x210, 0x411]
---
0x404 JUMPDEST
0x405 PUSH1 0x3
0x407 SLOAD
0x408 PUSH1 0x0
0x40a SWAP1
0x40b TIMESTAMP
0x40c LT
0x40d PUSH2 0x210
0x410 JUMPI
---
0x404: JUMPDEST 
0x405: V372 = 0x3
0x407: V373 = S[0x3]
0x408: V374 = 0x0
0x40b: V375 = TIMESTAMP
0x40c: V376 = LT V375 V373
0x40d: V377 = 0x210
0x410: JUMPI 0x210 V376
---
Entry stack: [V12, 0x213]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x213, 0x0]

================================

Block 0x411
[0x411:0x41c]
---
Predecessors: [0x404]
Successors: [0x41d, 0x4d7]
---
0x411 PUSH1 0x7
0x413 SLOAD
0x414 PUSH1 0xff
0x416 AND
0x417 ISZERO
0x418 ISZERO
0x419 PUSH2 0x4d7
0x41c JUMPI
---
0x411: V378 = 0x7
0x413: V379 = S[0x7]
0x414: V380 = 0xff
0x416: V381 = AND 0xff V379
0x417: V382 = ISZERO V381
0x418: V383 = ISZERO V382
0x419: V384 = 0x4d7
0x41c: JUMPI 0x4d7 V383
---
Entry stack: [V12, 0x213, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, 0x0]

================================

Block 0x41d
[0x41d:0x443]
---
Predecessors: [0x411]
Successors: [0x444, 0x4d7]
---
0x41d POP
0x41e PUSH1 0x1
0x420 PUSH1 0xa0
0x422 PUSH1 0x2
0x424 EXP
0x425 SUB
0x426 CALLER
0x427 AND
0x428 PUSH1 0x0
0x42a SWAP1
0x42b DUP2
0x42c MSTORE
0x42d PUSH1 0x6
0x42f PUSH1 0x20
0x431 MSTORE
0x432 PUSH1 0x40
0x434 DUP2
0x435 SHA3
0x436 DUP1
0x437 SLOAD
0x438 SWAP1
0x439 DUP3
0x43a SWAP1
0x43b SSTORE
0x43c SWAP1
0x43d DUP2
0x43e GT
0x43f ISZERO
0x440 PUSH2 0x4d7
0x443 JUMPI
---
0x41e: V385 = 0x1
0x420: V386 = 0xa0
0x422: V387 = 0x2
0x424: V388 = EXP 0x2 0xa0
0x425: V389 = SUB 0x10000000000000000000000000000000000000000 0x1
0x426: V390 = CALLER
0x427: V391 = AND V390 0xffffffffffffffffffffffffffffffffffffffff
0x428: V392 = 0x0
0x42c: M[0x0] = V391
0x42d: V393 = 0x6
0x42f: V394 = 0x20
0x431: M[0x20] = 0x6
0x432: V395 = 0x40
0x435: V396 = SHA3 0x0 0x40
0x437: V397 = S[V396]
0x43b: S[V396] = 0x0
0x43e: V398 = GT V397 0x0
0x43f: V399 = ISZERO V398
0x440: V400 = 0x4d7
0x443: JUMPI 0x4d7 V399
---
Entry stack: [V12, 0x213, 0x0]
Stack pops: 1
Stack additions: [V397]
Exit stack: [V12, 0x213, V397]

================================

Block 0x444
[0x444:0x46d]
---
Predecessors: [0x41d]
Successors: [0x46e, 0x4bb]
---
0x444 PUSH1 0x40
0x446 MLOAD
0x447 PUSH1 0x1
0x449 PUSH1 0xa0
0x44b PUSH1 0x2
0x44d EXP
0x44e SUB
0x44f CALLER
0x450 AND
0x451 SWAP1
0x452 DUP3
0x453 ISZERO
0x454 PUSH2 0x8fc
0x457 MUL
0x458 SWAP1
0x459 DUP4
0x45a SWAP1
0x45b PUSH1 0x0
0x45d DUP2
0x45e DUP2
0x45f DUP2
0x460 DUP6
0x461 DUP9
0x462 DUP9
0x463 CALL
0x464 SWAP4
0x465 POP
0x466 POP
0x467 POP
0x468 POP
0x469 ISZERO
0x46a PUSH2 0x4bb
0x46d JUMPI
---
0x444: V401 = 0x40
0x446: V402 = M[0x40]
0x447: V403 = 0x1
0x449: V404 = 0xa0
0x44b: V405 = 0x2
0x44d: V406 = EXP 0x2 0xa0
0x44e: V407 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44f: V408 = CALLER
0x450: V409 = AND V408 0xffffffffffffffffffffffffffffffffffffffff
0x453: V410 = ISZERO V397
0x454: V411 = 0x8fc
0x457: V412 = MUL 0x8fc V410
0x45b: V413 = 0x0
0x463: V414 = CALL V412 V409 V397 V402 0x0 V402 0x0
0x469: V415 = ISZERO V414
0x46a: V416 = 0x4bb
0x46d: JUMPI 0x4bb V415
---
Entry stack: [V12, 0x213, V397]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x213, V397]

================================

Block 0x46e
[0x46e:0x4ba]
---
Predecessors: [0x444]
Successors: [0x4d7]
---
0x46e PUSH1 0x40
0x470 DUP1
0x471 MLOAD
0x472 PUSH1 0x1
0x474 PUSH1 0xa0
0x476 PUSH1 0x2
0x478 EXP
0x479 SUB
0x47a CALLER
0x47b AND
0x47c DUP2
0x47d MSTORE
0x47e PUSH1 0x20
0x480 DUP2
0x481 ADD
0x482 DUP4
0x483 SWAP1
0x484 MSTORE
0x485 PUSH1 0x0
0x487 DUP2
0x488 DUP4
0x489 ADD
0x48a MSTORE
0x48b SWAP1
0x48c MLOAD
0x48d PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4ae SWAP2
0x4af DUP2
0x4b0 SWAP1
0x4b1 SUB
0x4b2 PUSH1 0x60
0x4b4 ADD
0x4b5 SWAP1
0x4b6 LOG1
0x4b7 PUSH2 0x4d7
0x4ba JUMP
---
0x46e: V417 = 0x40
0x471: V418 = M[0x40]
0x472: V419 = 0x1
0x474: V420 = 0xa0
0x476: V421 = 0x2
0x478: V422 = EXP 0x2 0xa0
0x479: V423 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47a: V424 = CALLER
0x47b: V425 = AND V424 0xffffffffffffffffffffffffffffffffffffffff
0x47d: M[V418] = V425
0x47e: V426 = 0x20
0x481: V427 = ADD V418 0x20
0x484: M[V427] = V397
0x485: V428 = 0x0
0x489: V429 = ADD 0x40 V418
0x48a: M[V429] = 0x0
0x48c: V430 = M[0x40]
0x48d: V431 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4b1: V432 = SUB V418 V430
0x4b2: V433 = 0x60
0x4b4: V434 = ADD 0x60 V432
0x4b6: LOG V430 V434 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4b7: V435 = 0x4d7
0x4ba: JUMP 0x4d7
---
Entry stack: [V12, 0x213, V397]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x213, V397]

================================

Block 0x4bb
[0x4bb:0x4d6]
---
Predecessors: [0x444]
Successors: [0x4d7]
---
0x4bb JUMPDEST
0x4bc PUSH1 0x1
0x4be PUSH1 0xa0
0x4c0 PUSH1 0x2
0x4c2 EXP
0x4c3 SUB
0x4c4 CALLER
0x4c5 AND
0x4c6 PUSH1 0x0
0x4c8 SWAP1
0x4c9 DUP2
0x4ca MSTORE
0x4cb PUSH1 0x6
0x4cd PUSH1 0x20
0x4cf MSTORE
0x4d0 PUSH1 0x40
0x4d2 SWAP1
0x4d3 SHA3
0x4d4 DUP2
0x4d5 SWAP1
0x4d6 SSTORE
---
0x4bb: JUMPDEST 
0x4bc: V436 = 0x1
0x4be: V437 = 0xa0
0x4c0: V438 = 0x2
0x4c2: V439 = EXP 0x2 0xa0
0x4c3: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c4: V441 = CALLER
0x4c5: V442 = AND V441 0xffffffffffffffffffffffffffffffffffffffff
0x4c6: V443 = 0x0
0x4ca: M[0x0] = V442
0x4cb: V444 = 0x6
0x4cd: V445 = 0x20
0x4cf: M[0x20] = 0x6
0x4d0: V446 = 0x40
0x4d3: V447 = SHA3 0x0 0x40
0x4d6: S[V447] = V397
---
Entry stack: [V12, 0x213, V397]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x213, V397]

================================

Block 0x4d7
[0x4d7:0x4d7]
---
Predecessors: [0x411, 0x41d, 0x46e, 0x4bb]
Successors: [0x4d8]
---
0x4d7 JUMPDEST
---
0x4d7: JUMPDEST 
---
Entry stack: [V12, 0x213, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, S0]

================================

Block 0x4d8
[0x4d8:0x4d8]
---
Predecessors: [0x4d7]
Successors: [0x4d9]
---
0x4d8 JUMPDEST
---
0x4d8: JUMPDEST 
---
Entry stack: [V12, 0x213, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, S0]

================================

Block 0x4d9
[0x4d9:0x4e5]
---
Predecessors: [0x4d8]
Successors: [0x4e6, 0x4f9]
---
0x4d9 JUMPDEST
0x4da PUSH1 0x7
0x4dc SLOAD
0x4dd PUSH1 0xff
0x4df AND
0x4e0 DUP1
0x4e1 ISZERO
0x4e2 PUSH2 0x4f9
0x4e5 JUMPI
---
0x4d9: JUMPDEST 
0x4da: V448 = 0x7
0x4dc: V449 = S[0x7]
0x4dd: V450 = 0xff
0x4df: V451 = AND 0xff V449
0x4e1: V452 = ISZERO V451
0x4e2: V453 = 0x4f9
0x4e5: JUMPI 0x4f9 V452
---
Entry stack: [V12, 0x213, S0]
Stack pops: 0
Stack additions: [V451]
Exit stack: [V12, 0x213, S0, V451]

================================

Block 0x4e6
[0x4e6:0x4f8]
---
Predecessors: [0x4d9]
Successors: [0x4f9]
---
0x4e6 POP
0x4e7 PUSH1 0x0
0x4e9 SLOAD
0x4ea CALLER
0x4eb PUSH1 0x1
0x4ed PUSH1 0xa0
0x4ef PUSH1 0x2
0x4f1 EXP
0x4f2 SUB
0x4f3 SWAP1
0x4f4 DUP2
0x4f5 AND
0x4f6 SWAP2
0x4f7 AND
0x4f8 EQ
---
0x4e7: V454 = 0x0
0x4e9: V455 = S[0x0]
0x4ea: V456 = CALLER
0x4eb: V457 = 0x1
0x4ed: V458 = 0xa0
0x4ef: V459 = 0x2
0x4f1: V460 = EXP 0x2 0xa0
0x4f2: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f5: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V456
0x4f7: V463 = AND V455 0xffffffffffffffffffffffffffffffffffffffff
0x4f8: V464 = EQ V463 V462
---
Entry stack: [V12, 0x213, S1, V451]
Stack pops: 1
Stack additions: [V464]
Exit stack: [V12, 0x213, S1, V464]

================================

Block 0x4f9
[0x4f9:0x4fe]
---
Predecessors: [0x4d9, 0x4e6]
Successors: [0x210, 0x4ff]
---
0x4f9 JUMPDEST
0x4fa ISZERO
0x4fb PUSH2 0x210
0x4fe JUMPI
---
0x4f9: JUMPDEST 
0x4fa: V465 = ISZERO S0
0x4fb: V466 = 0x210
0x4fe: JUMPI 0x210 V465
---
Entry stack: [V12, 0x213, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x213, S1]

================================

Block 0x4ff
[0x4ff:0x52d]
---
Predecessors: [0x4f9]
Successors: [0x52e, 0x585]
---
0x4ff PUSH1 0x0
0x501 DUP1
0x502 SLOAD
0x503 PUSH1 0x2
0x505 SLOAD
0x506 PUSH1 0x40
0x508 MLOAD
0x509 PUSH1 0x1
0x50b PUSH1 0xa0
0x50d PUSH1 0x2
0x50f EXP
0x510 SUB
0x511 SWAP1
0x512 SWAP3
0x513 AND
0x514 SWAP3
0x515 DUP2
0x516 ISZERO
0x517 PUSH2 0x8fc
0x51a MUL
0x51b SWAP3
0x51c SWAP1
0x51d DUP2
0x51e DUP2
0x51f DUP2
0x520 DUP6
0x521 DUP9
0x522 DUP9
0x523 CALL
0x524 SWAP4
0x525 POP
0x526 POP
0x527 POP
0x528 POP
0x529 ISZERO
0x52a PUSH2 0x585
0x52d JUMPI
---
0x4ff: V467 = 0x0
0x502: V468 = S[0x0]
0x503: V469 = 0x2
0x505: V470 = S[0x2]
0x506: V471 = 0x40
0x508: V472 = M[0x40]
0x509: V473 = 0x1
0x50b: V474 = 0xa0
0x50d: V475 = 0x2
0x50f: V476 = EXP 0x2 0xa0
0x510: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x513: V478 = AND V468 0xffffffffffffffffffffffffffffffffffffffff
0x516: V479 = ISZERO V470
0x517: V480 = 0x8fc
0x51a: V481 = MUL 0x8fc V479
0x523: V482 = CALL V481 V478 V470 V472 0x0 V472 0x0
0x529: V483 = ISZERO V482
0x52a: V484 = 0x585
0x52d: JUMPI 0x585 V483
---
Entry stack: [V12, 0x213, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, S0]

================================

Block 0x52e
[0x52e:0x584]
---
Predecessors: [0x4ff]
Successors: [0x210]
---
0x52e PUSH1 0x0
0x530 DUP1
0x531 SLOAD
0x532 PUSH1 0x2
0x534 SLOAD
0x535 PUSH1 0x40
0x537 DUP1
0x538 MLOAD
0x539 PUSH1 0x1
0x53b PUSH1 0xa0
0x53d PUSH1 0x2
0x53f EXP
0x540 SUB
0x541 SWAP1
0x542 SWAP4
0x543 AND
0x544 DUP4
0x545 MSTORE
0x546 PUSH1 0x20
0x548 DUP4
0x549 ADD
0x54a SWAP2
0x54b SWAP1
0x54c SWAP2
0x54d MSTORE
0x54e DUP2
0x54f DUP2
0x550 ADD
0x551 SWAP3
0x552 SWAP1
0x553 SWAP3
0x554 MSTORE
0x555 SWAP1
0x556 MLOAD
0x557 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x578 SWAP2
0x579 DUP2
0x57a SWAP1
0x57b SUB
0x57c PUSH1 0x60
0x57e ADD
0x57f SWAP1
0x580 LOG1
0x581 PUSH2 0x210
0x584 JUMP
---
0x52e: V485 = 0x0
0x531: V486 = S[0x0]
0x532: V487 = 0x2
0x534: V488 = S[0x2]
0x535: V489 = 0x40
0x538: V490 = M[0x40]
0x539: V491 = 0x1
0x53b: V492 = 0xa0
0x53d: V493 = 0x2
0x53f: V494 = EXP 0x2 0xa0
0x540: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x543: V496 = AND V486 0xffffffffffffffffffffffffffffffffffffffff
0x545: M[V490] = V496
0x546: V497 = 0x20
0x549: V498 = ADD V490 0x20
0x54d: M[V498] = V488
0x550: V499 = ADD 0x40 V490
0x554: M[V499] = 0x0
0x556: V500 = M[0x40]
0x557: V501 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x57b: V502 = SUB V490 V500
0x57c: V503 = 0x60
0x57e: V504 = ADD 0x60 V502
0x580: LOG V500 V504 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x581: V505 = 0x210
0x584: JUMP 0x210
---
Entry stack: [V12, 0x213, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, S0]

================================

Block 0x585
[0x585:0x58f]
---
Predecessors: [0x4ff]
Successors: [0x590]
---
0x585 JUMPDEST
0x586 PUSH1 0x7
0x588 DUP1
0x589 SLOAD
0x58a PUSH1 0xff
0x58c NOT
0x58d AND
0x58e SWAP1
0x58f SSTORE
---
0x585: JUMPDEST 
0x586: V506 = 0x7
0x589: V507 = S[0x7]
0x58a: V508 = 0xff
0x58c: V509 = NOT 0xff
0x58d: V510 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V507
0x58f: S[0x7] = V510
---
Entry stack: [V12, 0x213, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, S0]

================================

Block 0x590
[0x590:0x590]
---
Predecessors: [0x585]
Successors: [0x591]
---
0x590 JUMPDEST
---
0x590: JUMPDEST 
---
Entry stack: [V12, 0x213, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, S0]

================================

Block 0x591
[0x591:0x591]
---
Predecessors: [0x590]
Successors: [0x592]
---
0x591 JUMPDEST
---
0x591: JUMPDEST 
---
Entry stack: [V12, 0x213, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, S0]

================================

Block 0x592
[0x592:0x592]
---
Predecessors: [0x591]
Successors: [0x593]
---
0x592 JUMPDEST
---
0x592: JUMPDEST 
---
Entry stack: [V12, 0x213, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, S0]

================================

Block 0x593
[0x593:0x593]
---
Predecessors: [0x592]
Successors: [0x594]
---
0x593 JUMPDEST
---
0x593: JUMPDEST 
---
Entry stack: [V12, 0x213, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x213, S0]

================================

Block 0x594
[0x594:0x596]
---
Predecessors: [0x593]
Successors: [0x213]
---
0x594 JUMPDEST
0x595 POP
0x596 JUMP
---
0x594: JUMPDEST 
0x596: JUMP 0x213
---
Entry stack: [V12, 0x213, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x597
[0x597:0x5cc]
---
Predecessors: []
Successors: []
---
0x597 STOP
0x598 LOG1
0x599 PUSH6 0x627a7a723058
0x5a0 SHA3
0x5a1 CREATE2
0x5a2 MISSING 0xa8
0x5a3 RETURN
0x5a4 MISSING 0x24
0x5a5 EXTCODECOPY
0x5a6 MISSING 0xf6
0x5a7 MISSING 0xaa
0x5a8 MISSING 0xc3
0x5a9 PUSH8 0x1a1c4ecce3d6ced4
0x5b2 MISSING 0x1e
0x5b3 MISSING 0x2a
0x5b4 MISSING 0xa9
0x5b5 MISSING 0xb5
0x5b6 ADDMOD
0x5b7 MISSING 0x26
0x5b8 MISSING 0x2f
0x5b9 COINBASE
0x5ba PUSH18 0x8d77b4c2ef980029
---
0x597: STOP 
0x598: LOG S0 S1 S2
0x599: V511 = 0x627a7a723058
0x5a0: V512 = SHA3 0x627a7a723058 S3
0x5a1: V513 = CREATE2 V512 S4 S5 S6
0x5a2: MISSING 0xa8
0x5a3: RETURN S0 S1
0x5a4: MISSING 0x24
0x5a5: EXTCODECOPY S0 S1 S2 S3
0x5a6: MISSING 0xf6
0x5a7: MISSING 0xaa
0x5a8: MISSING 0xc3
0x5a9: V514 = 0x1a1c4ecce3d6ced4
0x5b2: MISSING 0x1e
0x5b3: MISSING 0x2a
0x5b4: MISSING 0xa9
0x5b5: MISSING 0xb5
0x5b6: V515 = ADDMOD S0 S1 S2
0x5b7: MISSING 0x26
0x5b8: MISSING 0x2f
0x5b9: V516 = COINBASE
0x5ba: V517 = 0x8d77b4c2ef980029
---
Entry stack: []
Stack pops: 0
Stack additions: [V513, 0x1a1c4ecce3d6ced4, V515, 0x8d77b4c2ef980029, V516]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x215
Exit block: 0x213
Body: 0x213, 0x215, 0x21c, 0x21d, 0x347, 0x351, 0x3b8, 0x3b9, 0x3ba

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x227
Exit block: 0x237
Body: 0x227, 0x22e, 0x22f, 0x237, 0x3bc

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x249
Exit block: 0x259
Body: 0x249, 0x250, 0x251, 0x259, 0x3c2

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x275
Exit block: 0x259
Body: 0x259, 0x275, 0x27c, 0x27d, 0x3d1

Function 4:
Public function signature: 0x70a08231
Entry block: 0x2a1
Exit block: 0x237
Body: 0x237, 0x2a1, 0x2a8, 0x2a9, 0x3e0

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x2cf
Exit block: 0x237
Body: 0x237, 0x2cf, 0x2d6, 0x2d7, 0x3f2

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x2f1
Exit block: 0x237
Body: 0x237, 0x2f1, 0x2f8, 0x2f9, 0x3f8

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x313
Exit block: 0x237
Body: 0x237, 0x313, 0x31a, 0x31b, 0x3fe

Function 8:
Public function signature: 0xfd6b7ef8
Entry block: 0x335
Exit block: 0x213
Body: 0x210, 0x213, 0x335, 0x33c, 0x33d, 0x404, 0x411, 0x41d, 0x444, 0x46e, 0x4bb, 0x4d7, 0x4d8, 0x4d9, 0x4e6, 0x4f9, 0x4ff, 0x52e, 0x585, 0x590, 0x591, 0x592, 0x593, 0x594

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x213
Body: 0x7d, 0x81, 0x95, 0x9a, 0xdb, 0xdc, 0x12a, 0x12b, 0x138, 0x139, 0x164, 0x165, 0x1b3, 0x1b4, 0x1c1, 0x1c2, 0x210, 0x213

