Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xd5]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xd5
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xd5
0xa: JUMPI 0xd5 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xe8]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2d05d3f
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xe8
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2d05d3f
0x20: V14 = EQ V12 0x2d05d3f
0x21: V15 = 0xe8
0x24: JUMPI 0xe8 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x117]
---
0x25 DUP1
0x26 PUSH4 0x29dcb0cf
0x2b EQ
0x2c PUSH2 0x117
0x2f JUMPI
---
0x26: V16 = 0x29dcb0cf
0x2b: V17 = EQ 0x29dcb0cf V12
0x2c: V18 = 0x117
0x2f: JUMPI 0x117 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x13c]
---
0x30 DUP1
0x31 PUSH4 0x38771242
0x36 EQ
0x37 PUSH2 0x13c
0x3a JUMPI
---
0x31: V19 = 0x38771242
0x36: V20 = EQ 0x38771242 V12
0x37: V21 = 0x13c
0x3a: JUMPI 0x13c V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x161]
---
0x3b DUP1
0x3c PUSH4 0x38af3eed
0x41 EQ
0x42 PUSH2 0x161
0x45 JUMPI
---
0x3c: V22 = 0x38af3eed
0x41: V23 = EQ 0x38af3eed V12
0x42: V24 = 0x161
0x45: JUMPI 0x161 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x190]
---
0x46 DUP1
0x47 PUSH4 0x3c8da588
0x4c EQ
0x4d PUSH2 0x190
0x50 JUMPI
---
0x47: V25 = 0x3c8da588
0x4c: V26 = EQ 0x3c8da588 V12
0x4d: V27 = 0x190
0x50: JUMPI 0x190 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1b5]
---
0x51 DUP1
0x52 PUSH4 0x6e66f6e9
0x57 EQ
0x58 PUSH2 0x1b5
0x5b JUMPI
---
0x52: V28 = 0x6e66f6e9
0x57: V29 = EQ 0x6e66f6e9 V12
0x58: V30 = 0x1b5
0x5b: JUMPI 0x1b5 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1e4]
---
0x5c DUP1
0x5d PUSH4 0x71ae8f02
0x62 EQ
0x63 PUSH2 0x1e4
0x66 JUMPI
---
0x5d: V31 = 0x71ae8f02
0x62: V32 = EQ 0x71ae8f02 V12
0x63: V33 = 0x1e4
0x66: JUMPI 0x1e4 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x209]
---
0x67 DUP1
0x68 PUSH4 0x86f32586
0x6d EQ
0x6e PUSH2 0x209
0x71 JUMPI
---
0x68: V34 = 0x86f32586
0x6d: V35 = EQ 0x86f32586 V12
0x6e: V36 = 0x209
0x71: JUMPI 0x209 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x21e]
---
0x72 DUP1
0x73 PUSH4 0xaa367664
0x78 EQ
0x79 PUSH2 0x21e
0x7c JUMPI
---
0x73: V37 = 0xaa367664
0x78: V38 = EQ 0xaa367664 V12
0x79: V39 = 0x21e
0x7c: JUMPI 0x21e V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x243]
---
0x7d DUP1
0x7e PUSH4 0xb2d5ae44
0x83 EQ
0x84 PUSH2 0x243
0x87 JUMPI
---
0x7e: V40 = 0xb2d5ae44
0x83: V41 = EQ 0xb2d5ae44 V12
0x84: V42 = 0x243
0x87: JUMPI 0x243 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x26a]
---
0x88 DUP1
0x89 PUSH4 0xc19d93fb
0x8e EQ
0x8f PUSH2 0x26a
0x92 JUMPI
---
0x89: V43 = 0xc19d93fb
0x8e: V44 = EQ 0xc19d93fb V12
0x8f: V45 = 0x26a
0x92: JUMPI 0x26a V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2a1]
---
0x93 DUP1
0x94 PUSH4 0xc2052403
0x99 EQ
0x9a PUSH2 0x2a1
0x9d JUMPI
---
0x94: V46 = 0xc2052403
0x99: V47 = EQ 0xc2052403 V12
0x9a: V48 = 0x2a1
0x9d: JUMPI 0x2a1 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2b6]
---
0x9e DUP1
0x9f PUSH4 0xc5c4744c
0xa4 EQ
0xa5 PUSH2 0x2b6
0xa8 JUMPI
---
0x9f: V49 = 0xc5c4744c
0xa4: V50 = EQ 0xc5c4744c V12
0xa5: V51 = 0x2b6
0xa8: JUMPI 0x2b6 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x2db]
---
0xa9 DUP1
0xaa PUSH4 0xce845d1d
0xaf EQ
0xb0 PUSH2 0x2db
0xb3 JUMPI
---
0xaa: V52 = 0xce845d1d
0xaf: V53 = EQ 0xce845d1d V12
0xb0: V54 = 0x2db
0xb3: JUMPI 0x2db V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x300]
---
0xb4 DUP1
0xb5 PUSH4 0xcf19e3b9
0xba EQ
0xbb PUSH2 0x300
0xbe JUMPI
---
0xb5: V55 = 0xcf19e3b9
0xba: V56 = EQ 0xcf19e3b9 V12
0xbb: V57 = 0x300
0xbe: JUMPI 0x300 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x300]
---
0xbf DUP1
0xc0 PUSH4 0xd7bb99ba
0xc5 EQ
0xc6 PUSH2 0x300
0xc9 JUMPI
---
0xc0: V58 = 0xd7bb99ba
0xc5: V59 = EQ 0xd7bb99ba V12
0xc6: V60 = 0x300
0xc9: JUMPI 0x300 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x334]
---
0xca DUP1
0xcb PUSH4 0xfe389e09
0xd0 EQ
0xd1 PUSH2 0x334
0xd4 JUMPI
---
0xcb: V61 = 0xfe389e09
0xd0: V62 = EQ 0xfe389e09 V12
0xd1: V63 = 0x334
0xd4: JUMPI 0x334 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdb]
---
Predecessors: [0x0, 0xca]
Successors: [0xdc, 0xe0]
---
0xd5 JUMPDEST
0xd6 CALLVALUE
0xd7 ISZERO
0xd8 PUSH2 0xe0
0xdb JUMPI
---
0xd5: JUMPDEST 
0xd6: V64 = CALLVALUE
0xd7: V65 = ISZERO V64
0xd8: V66 = 0xe0
0xdb: JUMPI 0xe0 V65
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdc
[0xdc:0xdf]
---
Predecessors: [0xd5]
Successors: []
---
0xdc PUSH1 0x0
0xde DUP1
0xdf REVERT
---
0xdc: V67 = 0x0
0xdf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xe0]
---
Predecessors: [0xd5]
Successors: [0xe1]
---
0xe0 JUMPDEST
---
0xe0: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe1
[0xe1:0xe5]
---
Predecessors: [0xe0]
Successors: []
---
0xe1 JUMPDEST
0xe2 PUSH1 0x0
0xe4 DUP1
0xe5 REVERT
---
0xe1: JUMPDEST 
0xe2: V68 = 0x0
0xe5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe6
[0xe6:0xe7]
---
Predecessors: [0x492, 0x6c2]
Successors: []
---
0xe6 JUMPDEST
0xe7 STOP
---
0xe6: JUMPDEST 
0xe7: STOP 
---
Entry stack: [V12, S4, {0x0, 0x12a}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0x0, 0x12a}, S2, S1, S0]

================================

Block 0xe8
[0xe8:0xee]
---
Predecessors: [0xb]
Successors: [0xef, 0xf3]
---
0xe8 JUMPDEST
0xe9 CALLVALUE
0xea ISZERO
0xeb PUSH2 0xf3
0xee JUMPI
---
0xe8: JUMPDEST 
0xe9: V69 = CALLVALUE
0xea: V70 = ISZERO V69
0xeb: V71 = 0xf3
0xee: JUMPI 0xf3 V70
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xef
[0xef:0xf2]
---
Predecessors: [0xe8]
Successors: []
---
0xef PUSH1 0x0
0xf1 DUP1
0xf2 REVERT
---
0xef: V72 = 0x0
0xf2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf3
[0xf3:0xfa]
---
Predecessors: [0xe8]
Successors: [0x349]
---
0xf3 JUMPDEST
0xf4 PUSH2 0xfb
0xf7 PUSH2 0x349
0xfa JUMP
---
0xf3: JUMPDEST 
0xf4: V73 = 0xfb
0xf7: V74 = 0x349
0xfa: JUMP 0x349
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xfb]
Exit stack: [V12, 0xfb]

================================

Block 0xfb
[0xfb:0x116]
---
Predecessors: [0x349, 0x364, 0x379]
Successors: []
---
0xfb JUMPDEST
0xfc PUSH1 0x40
0xfe MLOAD
0xff PUSH1 0x1
0x101 PUSH1 0xa0
0x103 PUSH1 0x2
0x105 EXP
0x106 SUB
0x107 SWAP1
0x108 SWAP2
0x109 AND
0x10a DUP2
0x10b MSTORE
0x10c PUSH1 0x20
0x10e ADD
0x10f PUSH1 0x40
0x111 MLOAD
0x112 DUP1
0x113 SWAP2
0x114 SUB
0x115 SWAP1
0x116 RETURN
---
0xfb: JUMPDEST 
0xfc: V75 = 0x40
0xfe: V76 = M[0x40]
0xff: V77 = 0x1
0x101: V78 = 0xa0
0x103: V79 = 0x2
0x105: V80 = EXP 0x2 0xa0
0x106: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0x109: V82 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x10b: M[V76] = V82
0x10c: V83 = 0x20
0x10e: V84 = ADD 0x20 V76
0x10f: V85 = 0x40
0x111: V86 = M[0x40]
0x114: V87 = SUB V84 V86
0x116: RETURN V86 V87
---
Entry stack: [V12, 0xfb, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xfb]

================================

Block 0x117
[0x117:0x11d]
---
Predecessors: [0x25]
Successors: [0x11e, 0x122]
---
0x117 JUMPDEST
0x118 CALLVALUE
0x119 ISZERO
0x11a PUSH2 0x122
0x11d JUMPI
---
0x117: JUMPDEST 
0x118: V88 = CALLVALUE
0x119: V89 = ISZERO V88
0x11a: V90 = 0x122
0x11d: JUMPI 0x122 V89
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11e
[0x11e:0x121]
---
Predecessors: [0x117]
Successors: []
---
0x11e PUSH1 0x0
0x120 DUP1
0x121 REVERT
---
0x11e: V91 = 0x0
0x121: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x122
[0x122:0x129]
---
Predecessors: [0x117]
Successors: [0x358]
---
0x122 JUMPDEST
0x123 PUSH2 0x12a
0x126 PUSH2 0x358
0x129 JUMP
---
0x122: JUMPDEST 
0x123: V92 = 0x12a
0x126: V93 = 0x358
0x129: JUMP 0x358
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x12a
[0x12a:0x13b]
---
Predecessors: [0x358, 0x35e, 0x373, 0x388, 0x494, 0x6c5, 0x6cb, 0x91b]
Successors: []
---
0x12a JUMPDEST
0x12b PUSH1 0x40
0x12d MLOAD
0x12e SWAP1
0x12f DUP2
0x130 MSTORE
0x131 PUSH1 0x20
0x133 ADD
0x134 PUSH1 0x40
0x136 MLOAD
0x137 DUP1
0x138 SWAP2
0x139 SUB
0x13a SWAP1
0x13b RETURN
---
0x12a: JUMPDEST 
0x12b: V94 = 0x40
0x12d: V95 = M[0x40]
0x130: M[V95] = S0
0x131: V96 = 0x20
0x133: V97 = ADD 0x20 V95
0x134: V98 = 0x40
0x136: V99 = M[0x40]
0x139: V100 = SUB V97 V99
0x13b: RETURN V99 V100
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x13c
[0x13c:0x142]
---
Predecessors: [0x30]
Successors: [0x143, 0x147]
---
0x13c JUMPDEST
0x13d CALLVALUE
0x13e ISZERO
0x13f PUSH2 0x147
0x142 JUMPI
---
0x13c: JUMPDEST 
0x13d: V101 = CALLVALUE
0x13e: V102 = ISZERO V101
0x13f: V103 = 0x147
0x142: JUMPI 0x147 V102
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x143
[0x143:0x146]
---
Predecessors: [0x13c]
Successors: []
---
0x143 PUSH1 0x0
0x145 DUP1
0x146 REVERT
---
0x143: V104 = 0x0
0x146: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x147
[0x147:0x14e]
---
Predecessors: [0x13c]
Successors: [0x35e]
---
0x147 JUMPDEST
0x148 PUSH2 0x12a
0x14b PUSH2 0x35e
0x14e JUMP
---
0x147: JUMPDEST 
0x148: V105 = 0x12a
0x14b: V106 = 0x35e
0x14e: JUMP 0x35e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x14f
[0x14f:0x160]
---
Predecessors: []
Successors: []
---
0x14f JUMPDEST
0x150 PUSH1 0x40
0x152 MLOAD
0x153 SWAP1
0x154 DUP2
0x155 MSTORE
0x156 PUSH1 0x20
0x158 ADD
0x159 PUSH1 0x40
0x15b MLOAD
0x15c DUP1
0x15d SWAP2
0x15e SUB
0x15f SWAP1
0x160 RETURN
---
0x14f: JUMPDEST 
0x150: V107 = 0x40
0x152: V108 = M[0x40]
0x155: M[V108] = S0
0x156: V109 = 0x20
0x158: V110 = ADD 0x20 V108
0x159: V111 = 0x40
0x15b: V112 = M[0x40]
0x15e: V113 = SUB V110 V112
0x160: RETURN V112 V113
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x161
[0x161:0x167]
---
Predecessors: [0x3b]
Successors: [0x168, 0x16c]
---
0x161 JUMPDEST
0x162 CALLVALUE
0x163 ISZERO
0x164 PUSH2 0x16c
0x167 JUMPI
---
0x161: JUMPDEST 
0x162: V114 = CALLVALUE
0x163: V115 = ISZERO V114
0x164: V116 = 0x16c
0x167: JUMPI 0x16c V115
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x168
[0x168:0x16b]
---
Predecessors: [0x161]
Successors: []
---
0x168 PUSH1 0x0
0x16a DUP1
0x16b REVERT
---
0x168: V117 = 0x0
0x16b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16c
[0x16c:0x173]
---
Predecessors: [0x161]
Successors: [0x364]
---
0x16c JUMPDEST
0x16d PUSH2 0xfb
0x170 PUSH2 0x364
0x173 JUMP
---
0x16c: JUMPDEST 
0x16d: V118 = 0xfb
0x170: V119 = 0x364
0x173: JUMP 0x364
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xfb]
Exit stack: [V12, 0xfb]

================================

Block 0x174
[0x174:0x18f]
---
Predecessors: []
Successors: []
---
0x174 JUMPDEST
0x175 PUSH1 0x40
0x177 MLOAD
0x178 PUSH1 0x1
0x17a PUSH1 0xa0
0x17c PUSH1 0x2
0x17e EXP
0x17f SUB
0x180 SWAP1
0x181 SWAP2
0x182 AND
0x183 DUP2
0x184 MSTORE
0x185 PUSH1 0x20
0x187 ADD
0x188 PUSH1 0x40
0x18a MLOAD
0x18b DUP1
0x18c SWAP2
0x18d SUB
0x18e SWAP1
0x18f RETURN
---
0x174: JUMPDEST 
0x175: V120 = 0x40
0x177: V121 = M[0x40]
0x178: V122 = 0x1
0x17a: V123 = 0xa0
0x17c: V124 = 0x2
0x17e: V125 = EXP 0x2 0xa0
0x17f: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x182: V127 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x184: M[V121] = V127
0x185: V128 = 0x20
0x187: V129 = ADD 0x20 V121
0x188: V130 = 0x40
0x18a: V131 = M[0x40]
0x18d: V132 = SUB V129 V131
0x18f: RETURN V131 V132
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x190
[0x190:0x196]
---
Predecessors: [0x46]
Successors: [0x197, 0x19b]
---
0x190 JUMPDEST
0x191 CALLVALUE
0x192 ISZERO
0x193 PUSH2 0x19b
0x196 JUMPI
---
0x190: JUMPDEST 
0x191: V133 = CALLVALUE
0x192: V134 = ISZERO V133
0x193: V135 = 0x19b
0x196: JUMPI 0x19b V134
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x197
[0x197:0x19a]
---
Predecessors: [0x190]
Successors: []
---
0x197 PUSH1 0x0
0x199 DUP1
0x19a REVERT
---
0x197: V136 = 0x0
0x19a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19b
[0x19b:0x1a2]
---
Predecessors: [0x190]
Successors: [0x373]
---
0x19b JUMPDEST
0x19c PUSH2 0x12a
0x19f PUSH2 0x373
0x1a2 JUMP
---
0x19b: JUMPDEST 
0x19c: V137 = 0x12a
0x19f: V138 = 0x373
0x1a2: JUMP 0x373
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x1a3
[0x1a3:0x1b4]
---
Predecessors: []
Successors: []
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x40
0x1a6 MLOAD
0x1a7 SWAP1
0x1a8 DUP2
0x1a9 MSTORE
0x1aa PUSH1 0x20
0x1ac ADD
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 DUP1
0x1b1 SWAP2
0x1b2 SUB
0x1b3 SWAP1
0x1b4 RETURN
---
0x1a3: JUMPDEST 
0x1a4: V139 = 0x40
0x1a6: V140 = M[0x40]
0x1a9: M[V140] = S0
0x1aa: V141 = 0x20
0x1ac: V142 = ADD 0x20 V140
0x1ad: V143 = 0x40
0x1af: V144 = M[0x40]
0x1b2: V145 = SUB V142 V144
0x1b4: RETURN V144 V145
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b5
[0x1b5:0x1bb]
---
Predecessors: [0x51]
Successors: [0x1bc, 0x1c0]
---
0x1b5 JUMPDEST
0x1b6 CALLVALUE
0x1b7 ISZERO
0x1b8 PUSH2 0x1c0
0x1bb JUMPI
---
0x1b5: JUMPDEST 
0x1b6: V146 = CALLVALUE
0x1b7: V147 = ISZERO V146
0x1b8: V148 = 0x1c0
0x1bb: JUMPI 0x1c0 V147
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bc
[0x1bc:0x1bf]
---
Predecessors: [0x1b5]
Successors: []
---
0x1bc PUSH1 0x0
0x1be DUP1
0x1bf REVERT
---
0x1bc: V149 = 0x0
0x1bf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c0
[0x1c0:0x1c7]
---
Predecessors: [0x1b5]
Successors: [0x379]
---
0x1c0 JUMPDEST
0x1c1 PUSH2 0xfb
0x1c4 PUSH2 0x379
0x1c7 JUMP
---
0x1c0: JUMPDEST 
0x1c1: V150 = 0xfb
0x1c4: V151 = 0x379
0x1c7: JUMP 0x379
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xfb]
Exit stack: [V12, 0xfb]

================================

Block 0x1c8
[0x1c8:0x1e3]
---
Predecessors: []
Successors: []
---
0x1c8 JUMPDEST
0x1c9 PUSH1 0x40
0x1cb MLOAD
0x1cc PUSH1 0x1
0x1ce PUSH1 0xa0
0x1d0 PUSH1 0x2
0x1d2 EXP
0x1d3 SUB
0x1d4 SWAP1
0x1d5 SWAP2
0x1d6 AND
0x1d7 DUP2
0x1d8 MSTORE
0x1d9 PUSH1 0x20
0x1db ADD
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP1
0x1e0 SWAP2
0x1e1 SUB
0x1e2 SWAP1
0x1e3 RETURN
---
0x1c8: JUMPDEST 
0x1c9: V152 = 0x40
0x1cb: V153 = M[0x40]
0x1cc: V154 = 0x1
0x1ce: V155 = 0xa0
0x1d0: V156 = 0x2
0x1d2: V157 = EXP 0x2 0xa0
0x1d3: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d6: V159 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1d8: M[V153] = V159
0x1d9: V160 = 0x20
0x1db: V161 = ADD 0x20 V153
0x1dc: V162 = 0x40
0x1de: V163 = M[0x40]
0x1e1: V164 = SUB V161 V163
0x1e3: RETURN V163 V164
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1e4
[0x1e4:0x1ea]
---
Predecessors: [0x5c]
Successors: [0x1eb, 0x1ef]
---
0x1e4 JUMPDEST
0x1e5 CALLVALUE
0x1e6 ISZERO
0x1e7 PUSH2 0x1ef
0x1ea JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V165 = CALLVALUE
0x1e6: V166 = ISZERO V165
0x1e7: V167 = 0x1ef
0x1ea: JUMPI 0x1ef V166
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1eb
[0x1eb:0x1ee]
---
Predecessors: [0x1e4]
Successors: []
---
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee REVERT
---
0x1eb: V168 = 0x0
0x1ee: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ef
[0x1ef:0x1f6]
---
Predecessors: [0x1e4]
Successors: [0x388]
---
0x1ef JUMPDEST
0x1f0 PUSH2 0x12a
0x1f3 PUSH2 0x388
0x1f6 JUMP
---
0x1ef: JUMPDEST 
0x1f0: V169 = 0x12a
0x1f3: V170 = 0x388
0x1f6: JUMP 0x388
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x1f7
[0x1f7:0x208]
---
Predecessors: []
Successors: []
---
0x1f7 JUMPDEST
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb SWAP1
0x1fc DUP2
0x1fd MSTORE
0x1fe PUSH1 0x20
0x200 ADD
0x201 PUSH1 0x40
0x203 MLOAD
0x204 DUP1
0x205 SWAP2
0x206 SUB
0x207 SWAP1
0x208 RETURN
---
0x1f7: JUMPDEST 
0x1f8: V171 = 0x40
0x1fa: V172 = M[0x40]
0x1fd: M[V172] = S0
0x1fe: V173 = 0x20
0x200: V174 = ADD 0x20 V172
0x201: V175 = 0x40
0x203: V176 = M[0x40]
0x206: V177 = SUB V174 V176
0x208: RETURN V176 V177
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x209
[0x209:0x20f]
---
Predecessors: [0x67]
Successors: [0x210, 0x214]
---
0x209 JUMPDEST
0x20a CALLVALUE
0x20b ISZERO
0x20c PUSH2 0x214
0x20f JUMPI
---
0x209: JUMPDEST 
0x20a: V178 = CALLVALUE
0x20b: V179 = ISZERO V178
0x20c: V180 = 0x214
0x20f: JUMPI 0x214 V179
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x210
[0x210:0x213]
---
Predecessors: [0x209]
Successors: []
---
0x210 PUSH1 0x0
0x212 DUP1
0x213 REVERT
---
0x210: V181 = 0x0
0x213: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x214
[0x214:0x21b]
---
Predecessors: [0x209]
Successors: [0x38e]
---
0x214 JUMPDEST
0x215 PUSH2 0xe6
0x218 PUSH2 0x38e
0x21b JUMP
---
0x214: JUMPDEST 
0x215: V182 = 0xe6
0x218: V183 = 0x38e
0x21b: JUMP 0x38e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe6]
Exit stack: [V12, 0xe6]

================================

Block 0x21c
[0x21c:0x21d]
---
Predecessors: []
Successors: []
---
0x21c JUMPDEST
0x21d STOP
---
0x21c: JUMPDEST 
0x21d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x21e
[0x21e:0x224]
---
Predecessors: [0x72]
Successors: [0x225, 0x229]
---
0x21e JUMPDEST
0x21f CALLVALUE
0x220 ISZERO
0x221 PUSH2 0x229
0x224 JUMPI
---
0x21e: JUMPDEST 
0x21f: V184 = CALLVALUE
0x220: V185 = ISZERO V184
0x221: V186 = 0x229
0x224: JUMPI 0x229 V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x225
[0x225:0x228]
---
Predecessors: [0x21e]
Successors: []
---
0x225 PUSH1 0x0
0x227 DUP1
0x228 REVERT
---
0x225: V187 = 0x0
0x228: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x229
[0x229:0x230]
---
Predecessors: [0x21e]
Successors: [0x494]
---
0x229 JUMPDEST
0x22a PUSH2 0x12a
0x22d PUSH2 0x494
0x230 JUMP
---
0x229: JUMPDEST 
0x22a: V188 = 0x12a
0x22d: V189 = 0x494
0x230: JUMP 0x494
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x231
[0x231:0x242]
---
Predecessors: []
Successors: []
---
0x231 JUMPDEST
0x232 PUSH1 0x40
0x234 MLOAD
0x235 SWAP1
0x236 DUP2
0x237 MSTORE
0x238 PUSH1 0x20
0x23a ADD
0x23b PUSH1 0x40
0x23d MLOAD
0x23e DUP1
0x23f SWAP2
0x240 SUB
0x241 SWAP1
0x242 RETURN
---
0x231: JUMPDEST 
0x232: V190 = 0x40
0x234: V191 = M[0x40]
0x237: M[V191] = S0
0x238: V192 = 0x20
0x23a: V193 = ADD 0x20 V191
0x23b: V194 = 0x40
0x23d: V195 = M[0x40]
0x240: V196 = SUB V193 V195
0x242: RETURN V195 V196
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x243
[0x243:0x249]
---
Predecessors: [0x7d]
Successors: [0x24a, 0x24e]
---
0x243 JUMPDEST
0x244 CALLVALUE
0x245 ISZERO
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x243: JUMPDEST 
0x244: V197 = CALLVALUE
0x245: V198 = ISZERO V197
0x246: V199 = 0x24e
0x249: JUMPI 0x24e V198
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x243]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V200 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24e
[0x24e:0x255]
---
Predecessors: [0x243]
Successors: [0x49a]
---
0x24e JUMPDEST
0x24f PUSH2 0x256
0x252 PUSH2 0x49a
0x255 JUMP
---
0x24e: JUMPDEST 
0x24f: V201 = 0x256
0x252: V202 = 0x49a
0x255: JUMP 0x49a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x256]
Exit stack: [V12, 0x256]

================================

Block 0x256
[0x256:0x269]
---
Predecessors: [0x5f6]
Successors: []
---
0x256 JUMPDEST
0x257 PUSH1 0x40
0x259 MLOAD
0x25a SWAP1
0x25b ISZERO
0x25c ISZERO
0x25d DUP2
0x25e MSTORE
0x25f PUSH1 0x20
0x261 ADD
0x262 PUSH1 0x40
0x264 MLOAD
0x265 DUP1
0x266 SWAP2
0x267 SUB
0x268 SWAP1
0x269 RETURN
---
0x256: JUMPDEST 
0x257: V203 = 0x40
0x259: V204 = M[0x40]
0x25b: V205 = ISZERO {0x0, 0x1}
0x25c: V206 = ISZERO V205
0x25e: M[V204] = V206
0x25f: V207 = 0x20
0x261: V208 = ADD 0x20 V204
0x262: V209 = 0x40
0x264: V210 = M[0x40]
0x267: V211 = SUB V208 V210
0x269: RETURN V210 V211
---
Entry stack: [V12, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x26a
[0x26a:0x270]
---
Predecessors: [0x88]
Successors: [0x271, 0x275]
---
0x26a JUMPDEST
0x26b CALLVALUE
0x26c ISZERO
0x26d PUSH2 0x275
0x270 JUMPI
---
0x26a: JUMPDEST 
0x26b: V212 = CALLVALUE
0x26c: V213 = ISZERO V212
0x26d: V214 = 0x275
0x270: JUMPI 0x275 V213
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x271
[0x271:0x274]
---
Predecessors: [0x26a]
Successors: []
---
0x271 PUSH1 0x0
0x273 DUP1
0x274 REVERT
---
0x271: V215 = 0x0
0x274: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x275
[0x275:0x27c]
---
Predecessors: [0x26a]
Successors: [0x5fc]
---
0x275 JUMPDEST
0x276 PUSH2 0x27d
0x279 PUSH2 0x5fc
0x27c JUMP
---
0x275: JUMPDEST 
0x276: V216 = 0x27d
0x279: V217 = 0x5fc
0x27c: JUMP 0x5fc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27d]
Exit stack: [V12, 0x27d]

================================

Block 0x27d
[0x27d:0x28b]
---
Predecessors: [0x5fc]
Successors: [0x28c, 0x28d]
---
0x27d JUMPDEST
0x27e PUSH1 0x40
0x280 MLOAD
0x281 DUP1
0x282 DUP3
0x283 PUSH1 0x3
0x285 DUP2
0x286 GT
0x287 ISZERO
0x288 PUSH2 0x28d
0x28b JUMPI
---
0x27d: JUMPDEST 
0x27e: V218 = 0x40
0x280: V219 = M[0x40]
0x283: V220 = 0x3
0x286: V221 = GT V544 0x3
0x287: V222 = ISZERO V221
0x288: V223 = 0x28d
0x28b: JUMPI 0x28d V222
---
Entry stack: [V12, 0x27d, V544]
Stack pops: 1
Stack additions: [S0, V219, V219, S0]
Exit stack: [V12, 0x27d, V544, V219, V219, V544]

================================

Block 0x28c
[0x28c:0x28c]
---
Predecessors: [0x27d]
Successors: []
---
0x28c INVALID
---
0x28c: INVALID 
---
Entry stack: [V12, 0x27d, V544, V219, V219, V544]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x27d, V544, V219, V219, V544]

================================

Block 0x28d
[0x28d:0x2a0]
---
Predecessors: [0x27d]
Successors: []
---
0x28d JUMPDEST
0x28e PUSH1 0xff
0x290 AND
0x291 DUP2
0x292 MSTORE
0x293 PUSH1 0x20
0x295 ADD
0x296 SWAP2
0x297 POP
0x298 POP
0x299 PUSH1 0x40
0x29b MLOAD
0x29c DUP1
0x29d SWAP2
0x29e SUB
0x29f SWAP1
0x2a0 RETURN
---
0x28d: JUMPDEST 
0x28e: V224 = 0xff
0x290: V225 = AND 0xff V544
0x292: M[V219] = V225
0x293: V226 = 0x20
0x295: V227 = ADD 0x20 V219
0x299: V228 = 0x40
0x29b: V229 = M[0x40]
0x29e: V230 = SUB V227 V229
0x2a0: RETURN V229 V230
---
Entry stack: [V12, 0x27d, V544, V219, V219, V544]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x27d]

================================

Block 0x2a1
[0x2a1:0x2a7]
---
Predecessors: [0x93]
Successors: [0x2a8, 0x2ac]
---
0x2a1 JUMPDEST
0x2a2 CALLVALUE
0x2a3 ISZERO
0x2a4 PUSH2 0x2ac
0x2a7 JUMPI
---
0x2a1: JUMPDEST 
0x2a2: V231 = CALLVALUE
0x2a3: V232 = ISZERO V231
0x2a4: V233 = 0x2ac
0x2a7: JUMPI 0x2ac V232
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a8
[0x2a8:0x2ab]
---
Predecessors: [0x2a1]
Successors: []
---
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab REVERT
---
0x2a8: V234 = 0x0
0x2ab: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ac
[0x2ac:0x2b3]
---
Predecessors: [0x2a1]
Successors: [0x605]
---
0x2ac JUMPDEST
0x2ad PUSH2 0xe6
0x2b0 PUSH2 0x605
0x2b3 JUMP
---
0x2ac: JUMPDEST 
0x2ad: V235 = 0xe6
0x2b0: V236 = 0x605
0x2b3: JUMP 0x605
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe6]
Exit stack: [V12, 0xe6]

================================

Block 0x2b4
[0x2b4:0x2b5]
---
Predecessors: []
Successors: []
---
0x2b4 JUMPDEST
0x2b5 STOP
---
0x2b4: JUMPDEST 
0x2b5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2b6
[0x2b6:0x2bc]
---
Predecessors: [0x9e]
Successors: [0x2bd, 0x2c1]
---
0x2b6 JUMPDEST
0x2b7 CALLVALUE
0x2b8 ISZERO
0x2b9 PUSH2 0x2c1
0x2bc JUMPI
---
0x2b6: JUMPDEST 
0x2b7: V237 = CALLVALUE
0x2b8: V238 = ISZERO V237
0x2b9: V239 = 0x2c1
0x2bc: JUMPI 0x2c1 V238
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bd
[0x2bd:0x2c0]
---
Predecessors: [0x2b6]
Successors: []
---
0x2bd PUSH1 0x0
0x2bf DUP1
0x2c0 REVERT
---
0x2bd: V240 = 0x0
0x2c0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c1
[0x2c1:0x2c8]
---
Predecessors: [0x2b6]
Successors: [0x6c5]
---
0x2c1 JUMPDEST
0x2c2 PUSH2 0x12a
0x2c5 PUSH2 0x6c5
0x2c8 JUMP
---
0x2c1: JUMPDEST 
0x2c2: V241 = 0x12a
0x2c5: V242 = 0x6c5
0x2c8: JUMP 0x6c5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x2c9
[0x2c9:0x2da]
---
Predecessors: []
Successors: []
---
0x2c9 JUMPDEST
0x2ca PUSH1 0x40
0x2cc MLOAD
0x2cd SWAP1
0x2ce DUP2
0x2cf MSTORE
0x2d0 PUSH1 0x20
0x2d2 ADD
0x2d3 PUSH1 0x40
0x2d5 MLOAD
0x2d6 DUP1
0x2d7 SWAP2
0x2d8 SUB
0x2d9 SWAP1
0x2da RETURN
---
0x2c9: JUMPDEST 
0x2ca: V243 = 0x40
0x2cc: V244 = M[0x40]
0x2cf: M[V244] = S0
0x2d0: V245 = 0x20
0x2d2: V246 = ADD 0x20 V244
0x2d3: V247 = 0x40
0x2d5: V248 = M[0x40]
0x2d8: V249 = SUB V246 V248
0x2da: RETURN V248 V249
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2db
[0x2db:0x2e1]
---
Predecessors: [0xa9]
Successors: [0x2e2, 0x2e6]
---
0x2db JUMPDEST
0x2dc CALLVALUE
0x2dd ISZERO
0x2de PUSH2 0x2e6
0x2e1 JUMPI
---
0x2db: JUMPDEST 
0x2dc: V250 = CALLVALUE
0x2dd: V251 = ISZERO V250
0x2de: V252 = 0x2e6
0x2e1: JUMPI 0x2e6 V251
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e2
[0x2e2:0x2e5]
---
Predecessors: [0x2db]
Successors: []
---
0x2e2 PUSH1 0x0
0x2e4 DUP1
0x2e5 REVERT
---
0x2e2: V253 = 0x0
0x2e5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e6
[0x2e6:0x2ed]
---
Predecessors: [0x2db]
Successors: [0x6cb]
---
0x2e6 JUMPDEST
0x2e7 PUSH2 0x12a
0x2ea PUSH2 0x6cb
0x2ed JUMP
---
0x2e6: JUMPDEST 
0x2e7: V254 = 0x12a
0x2ea: V255 = 0x6cb
0x2ed: JUMP 0x6cb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x2ee
[0x2ee:0x2ff]
---
Predecessors: []
Successors: []
---
0x2ee JUMPDEST
0x2ef PUSH1 0x40
0x2f1 MLOAD
0x2f2 SWAP1
0x2f3 DUP2
0x2f4 MSTORE
0x2f5 PUSH1 0x20
0x2f7 ADD
0x2f8 PUSH1 0x40
0x2fa MLOAD
0x2fb DUP1
0x2fc SWAP2
0x2fd SUB
0x2fe SWAP1
0x2ff RETURN
---
0x2ee: JUMPDEST 
0x2ef: V256 = 0x40
0x2f1: V257 = M[0x40]
0x2f4: M[V257] = S0
0x2f5: V258 = 0x20
0x2f7: V259 = ADD 0x20 V257
0x2f8: V260 = 0x40
0x2fa: V261 = M[0x40]
0x2fd: V262 = SUB V259 V261
0x2ff: RETURN V261 V262
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x300
[0x300:0x307]
---
Predecessors: [0xb4, 0xbf]
Successors: [0x6d1]
---
0x300 JUMPDEST
0x301 PUSH2 0x12a
0x304 PUSH2 0x6d1
0x307 JUMP
---
0x300: JUMPDEST 
0x301: V263 = 0x12a
0x304: V264 = 0x6d1
0x307: JUMP 0x6d1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x308
[0x308:0x321]
---
Predecessors: []
Successors: [0x6d1]
---
0x308 JUMPDEST
0x309 PUSH1 0x40
0x30b MLOAD
0x30c SWAP1
0x30d DUP2
0x30e MSTORE
0x30f PUSH1 0x20
0x311 ADD
0x312 PUSH1 0x40
0x314 MLOAD
0x315 DUP1
0x316 SWAP2
0x317 SUB
0x318 SWAP1
0x319 RETURN
0x31a JUMPDEST
0x31b PUSH2 0x12a
0x31e PUSH2 0x6d1
0x321 JUMP
---
0x308: JUMPDEST 
0x309: V265 = 0x40
0x30b: V266 = M[0x40]
0x30e: M[V266] = S0
0x30f: V267 = 0x20
0x311: V268 = ADD 0x20 V266
0x312: V269 = 0x40
0x314: V270 = M[0x40]
0x317: V271 = SUB V268 V270
0x319: RETURN V270 V271
0x31a: JUMPDEST 
0x31b: V272 = 0x12a
0x31e: V273 = 0x6d1
0x321: JUMP 0x6d1
---
Entry stack: []
Stack pops: 2
Stack additions: [0x12a]
Exit stack: []

================================

Block 0x322
[0x322:0x333]
---
Predecessors: []
Successors: []
---
0x322 JUMPDEST
0x323 PUSH1 0x40
0x325 MLOAD
0x326 SWAP1
0x327 DUP2
0x328 MSTORE
0x329 PUSH1 0x20
0x32b ADD
0x32c PUSH1 0x40
0x32e MLOAD
0x32f DUP1
0x330 SWAP2
0x331 SUB
0x332 SWAP1
0x333 RETURN
---
0x322: JUMPDEST 
0x323: V274 = 0x40
0x325: V275 = M[0x40]
0x328: M[V275] = S0
0x329: V276 = 0x20
0x32b: V277 = ADD 0x20 V275
0x32c: V278 = 0x40
0x32e: V279 = M[0x40]
0x331: V280 = SUB V277 V279
0x333: RETURN V279 V280
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x334
[0x334:0x33a]
---
Predecessors: [0xca]
Successors: [0x33b, 0x33f]
---
0x334 JUMPDEST
0x335 CALLVALUE
0x336 ISZERO
0x337 PUSH2 0x33f
0x33a JUMPI
---
0x334: JUMPDEST 
0x335: V281 = CALLVALUE
0x336: V282 = ISZERO V281
0x337: V283 = 0x33f
0x33a: JUMPI 0x33f V282
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33b
[0x33b:0x33e]
---
Predecessors: [0x334]
Successors: []
---
0x33b PUSH1 0x0
0x33d DUP1
0x33e REVERT
---
0x33b: V284 = 0x0
0x33e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33f
[0x33f:0x346]
---
Predecessors: [0x334]
Successors: [0xb73]
---
0x33f JUMPDEST
0x340 PUSH2 0xe6
0x343 PUSH2 0xb73
0x346 JUMP
---
0x33f: JUMPDEST 
0x340: V285 = 0xe6
0x343: V286 = 0xb73
0x346: JUMP 0xb73
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe6]
Exit stack: [V12, 0xe6]

================================

Block 0x347
[0x347:0x348]
---
Predecessors: []
Successors: []
---
0x347 JUMPDEST
0x348 STOP
---
0x347: JUMPDEST 
0x348: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x349
[0x349:0x357]
---
Predecessors: [0xf3]
Successors: [0xfb]
---
0x349 JUMPDEST
0x34a PUSH1 0xa
0x34c SLOAD
0x34d PUSH1 0x1
0x34f PUSH1 0xa0
0x351 PUSH1 0x2
0x353 EXP
0x354 SUB
0x355 AND
0x356 DUP2
0x357 JUMP
---
0x349: JUMPDEST 
0x34a: V287 = 0xa
0x34c: V288 = S[0xa]
0x34d: V289 = 0x1
0x34f: V290 = 0xa0
0x351: V291 = 0x2
0x353: V292 = EXP 0x2 0xa0
0x354: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x355: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x357: JUMP 0xfb
---
Entry stack: [V12, 0xfb]
Stack pops: 1
Stack additions: [S0, V294]
Exit stack: [V12, 0xfb, V294]

================================

Block 0x358
[0x358:0x35d]
---
Predecessors: [0x122]
Successors: [0x12a]
---
0x358 JUMPDEST
0x359 PUSH1 0x4
0x35b SLOAD
0x35c DUP2
0x35d JUMP
---
0x358: JUMPDEST 
0x359: V295 = 0x4
0x35b: V296 = S[0x4]
0x35d: JUMP 0x12a
---
Entry stack: [V12, 0x12a]
Stack pops: 1
Stack additions: [S0, V296]
Exit stack: [V12, 0x12a, V296]

================================

Block 0x35e
[0x35e:0x363]
---
Predecessors: [0x147]
Successors: [0x12a]
---
0x35e JUMPDEST
0x35f PUSH1 0x5
0x361 SLOAD
0x362 DUP2
0x363 JUMP
---
0x35e: JUMPDEST 
0x35f: V297 = 0x5
0x361: V298 = S[0x5]
0x363: JUMP 0x12a
---
Entry stack: [V12, 0x12a]
Stack pops: 1
Stack additions: [S0, V298]
Exit stack: [V12, 0x12a, V298]

================================

Block 0x364
[0x364:0x372]
---
Predecessors: [0x16c]
Successors: [0xfb]
---
0x364 JUMPDEST
0x365 PUSH1 0xb
0x367 SLOAD
0x368 PUSH1 0x1
0x36a PUSH1 0xa0
0x36c PUSH1 0x2
0x36e EXP
0x36f SUB
0x370 AND
0x371 DUP2
0x372 JUMP
---
0x364: JUMPDEST 
0x365: V299 = 0xb
0x367: V300 = S[0xb]
0x368: V301 = 0x1
0x36a: V302 = 0xa0
0x36c: V303 = 0x2
0x36e: V304 = EXP 0x2 0xa0
0x36f: V305 = SUB 0x10000000000000000000000000000000000000000 0x1
0x370: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x372: JUMP 0xfb
---
Entry stack: [V12, 0xfb]
Stack pops: 1
Stack additions: [S0, V306]
Exit stack: [V12, 0xfb, V306]

================================

Block 0x373
[0x373:0x378]
---
Predecessors: [0x19b]
Successors: [0x12a]
---
0x373 JUMPDEST
0x374 PUSH1 0x6
0x376 SLOAD
0x377 DUP2
0x378 JUMP
---
0x373: JUMPDEST 
0x374: V307 = 0x6
0x376: V308 = S[0x6]
0x378: JUMP 0x12a
---
Entry stack: [V12, 0x12a]
Stack pops: 1
Stack additions: [S0, V308]
Exit stack: [V12, 0x12a, V308]

================================

Block 0x379
[0x379:0x387]
---
Predecessors: [0x1c0]
Successors: [0xfb]
---
0x379 JUMPDEST
0x37a PUSH1 0x9
0x37c SLOAD
0x37d PUSH1 0x1
0x37f PUSH1 0xa0
0x381 PUSH1 0x2
0x383 EXP
0x384 SUB
0x385 AND
0x386 DUP2
0x387 JUMP
---
0x379: JUMPDEST 
0x37a: V309 = 0x9
0x37c: V310 = S[0x9]
0x37d: V311 = 0x1
0x37f: V312 = 0xa0
0x381: V313 = 0x2
0x383: V314 = EXP 0x2 0xa0
0x384: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x385: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x387: JUMP 0xfb
---
Entry stack: [V12, 0xfb]
Stack pops: 1
Stack additions: [S0, V316]
Exit stack: [V12, 0xfb, V316]

================================

Block 0x388
[0x388:0x38d]
---
Predecessors: [0x1ef]
Successors: [0x12a]
---
0x388 JUMPDEST
0x389 PUSH1 0x7
0x38b SLOAD
0x38c DUP2
0x38d JUMP
---
0x388: JUMPDEST 
0x389: V317 = 0x7
0x38b: V318 = S[0x7]
0x38d: JUMP 0x12a
---
Entry stack: [V12, 0x12a]
Stack pops: 1
Stack additions: [S0, V318]
Exit stack: [V12, 0x12a, V318]

================================

Block 0x38e
[0x38e:0x399]
---
Predecessors: [0x214, 0x8ab, 0xafe]
Successors: [0x39a, 0x3a2]
---
0x38e JUMPDEST
0x38f PUSH1 0x8
0x391 SLOAD
0x392 ISZERO
0x393 DUP1
0x394 ISZERO
0x395 SWAP1
0x396 PUSH2 0x3a2
0x399 JUMPI
---
0x38e: JUMPDEST 
0x38f: V319 = 0x8
0x391: V320 = S[0x8]
0x392: V321 = ISZERO V320
0x394: V322 = ISZERO V321
0x396: V323 = 0x3a2
0x399: JUMPI 0x3a2 V321
---
Entry stack: [V12, 0x12a, 0x0, S2, S1, {0xe6, 0x90e}]
Stack pops: 0
Stack additions: [V322]
Exit stack: [V12, 0x12a, 0x0, S2, S1, {0xe6, 0x90e}, V322]

================================

Block 0x39a
[0x39a:0x3a1]
---
Predecessors: [0x38e]
Successors: [0x3a2]
---
0x39a POP
0x39b PUSH1 0x8
0x39d SLOAD
0x39e PUSH1 0x2
0x3a0 SLOAD
0x3a1 GT
---
0x39b: V324 = 0x8
0x39d: V325 = S[0x8]
0x39e: V326 = 0x2
0x3a0: V327 = S[0x2]
0x3a1: V328 = GT V327 V325
---
Entry stack: [V12, 0x12a, 0x0, S3, S2, {0xe6, 0x90e}, V322]
Stack pops: 1
Stack additions: [V328]
Exit stack: [V12, 0x12a, 0x0, S3, S2, {0xe6, 0x90e}, V328]

================================

Block 0x3a2
[0x3a2:0x3a7]
---
Predecessors: [0x38e, 0x39a]
Successors: [0x3a8, 0x402]
---
0x3a2 JUMPDEST
0x3a3 ISZERO
0x3a4 PUSH2 0x402
0x3a7 JUMPI
---
0x3a2: JUMPDEST 
0x3a3: V329 = ISZERO S0
0x3a4: V330 = 0x402
0x3a7: JUMPI 0x402 V329
---
Entry stack: [V12, 0x12a, 0x0, S3, S2, {0xe6, 0x90e}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S3, S2, {0xe6, 0x90e}]

================================

Block 0x3a8
[0x3a8:0x3b6]
---
Predecessors: [0x3a2]
Successors: [0x3b7]
---
0x3a8 PUSH1 0x0
0x3aa DUP1
0x3ab SLOAD
0x3ac PUSH1 0x2
0x3ae SWAP2
0x3af SWAP1
0x3b0 PUSH1 0xff
0x3b2 NOT
0x3b3 AND
0x3b4 PUSH1 0x1
0x3b6 DUP4
---
0x3a8: V331 = 0x0
0x3ab: V332 = S[0x0]
0x3ac: V333 = 0x2
0x3b0: V334 = 0xff
0x3b2: V335 = NOT 0xff
0x3b3: V336 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V332
0x3b4: V337 = 0x1
---
Entry stack: [V12, 0x12a, 0x0, S2, S1, {0xe6, 0x90e}]
Stack pops: 0
Stack additions: [0x2, 0x0, V336, 0x1, 0x2]
Exit stack: [V12, 0x12a, 0x0, S2, S1, {0xe6, 0x90e}, 0x2, 0x0, V336, 0x1, 0x2]

================================

Block 0x3b7
[0x3b7:0x3f8]
---
Predecessors: [0x3a8, 0x418]
Successors: [0x605]
---
0x3b7 JUMPDEST
0x3b8 MUL
0x3b9 OR
0x3ba SWAP1
0x3bb SSTORE
0x3bc POP
0x3bd PUSH32 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x3de PUSH1 0x2
0x3e0 SLOAD
0x3e1 PUSH1 0x40
0x3e3 MLOAD
0x3e4 SWAP1
0x3e5 DUP2
0x3e6 MSTORE
0x3e7 PUSH1 0x20
0x3e9 ADD
0x3ea PUSH1 0x40
0x3ec MLOAD
0x3ed DUP1
0x3ee SWAP2
0x3ef SUB
0x3f0 SWAP1
0x3f1 LOG1
0x3f2 PUSH2 0x3f9
0x3f5 PUSH2 0x605
0x3f8 JUMP
---
0x3b7: JUMPDEST 
0x3b8: V338 = MUL 0x2 0x1
0x3b9: V339 = OR 0x2 S2
0x3bb: S[0x0] = V339
0x3bd: V340 = 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x3de: V341 = 0x2
0x3e0: V342 = S[0x2]
0x3e1: V343 = 0x40
0x3e3: V344 = M[0x40]
0x3e6: M[V344] = V342
0x3e7: V345 = 0x20
0x3e9: V346 = ADD 0x20 V344
0x3ea: V347 = 0x40
0x3ec: V348 = M[0x40]
0x3ef: V349 = SUB V346 V348
0x3f1: LOG V348 V349 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x3f2: V350 = 0x3f9
0x3f5: V351 = 0x605
0x3f8: JUMP 0x605
---
Entry stack: [V12, 0x12a, 0x0, S7, S6, {0xe6, 0x90e}, 0x2, 0x0, S2, 0x1, 0x2]
Stack pops: 5
Stack additions: [0x3f9]
Exit stack: [V12, 0x12a, 0x0, S7, S6, {0xe6, 0x90e}, 0x3f9]

================================

Block 0x3f9
[0x3f9:0x401]
---
Predecessors: [0x6c2]
Successors: [0x48f]
---
0x3f9 JUMPDEST
0x3fa TIMESTAMP
0x3fb PUSH1 0x5
0x3fd SSTORE
0x3fe PUSH2 0x48f
0x401 JUMP
---
0x3f9: JUMPDEST 
0x3fa: V352 = TIMESTAMP
0x3fb: V353 = 0x5
0x3fd: S[0x5] = V352
0x3fe: V354 = 0x48f
0x401: JUMP 0x48f
---
Entry stack: [V12, 0x12a, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S2, S1, S0]

================================

Block 0x402
[0x402:0x40c]
---
Predecessors: [0x3a2]
Successors: [0x40d, 0x48f]
---
0x402 JUMPDEST
0x403 PUSH1 0x4
0x405 SLOAD
0x406 TIMESTAMP
0x407 GT
0x408 ISZERO
0x409 PUSH2 0x48f
0x40c JUMPI
---
0x402: JUMPDEST 
0x403: V355 = 0x4
0x405: V356 = S[0x4]
0x406: V357 = TIMESTAMP
0x407: V358 = GT V357 V356
0x408: V359 = ISZERO V358
0x409: V360 = 0x48f
0x40c: JUMPI 0x48f V359
---
Entry stack: [V12, 0x12a, 0x0, S2, S1, {0xe6, 0x90e}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S2, S1, {0xe6, 0x90e}]

================================

Block 0x40d
[0x40d:0x417]
---
Predecessors: [0x402]
Successors: [0x418, 0x476]
---
0x40d PUSH1 0x7
0x40f SLOAD
0x410 PUSH1 0x2
0x412 SLOAD
0x413 LT
0x414 PUSH2 0x476
0x417 JUMPI
---
0x40d: V361 = 0x7
0x40f: V362 = S[0x7]
0x410: V363 = 0x2
0x412: V364 = S[0x2]
0x413: V365 = LT V364 V362
0x414: V366 = 0x476
0x417: JUMPI 0x476 V365
---
Entry stack: [V12, 0x12a, 0x0, S2, S1, {0xe6, 0x90e}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S2, S1, {0xe6, 0x90e}]

================================

Block 0x418
[0x418:0x42a]
---
Predecessors: [0x40d]
Successors: [0x3b7]
---
0x418 PUSH1 0x0
0x41a DUP1
0x41b SLOAD
0x41c PUSH1 0x2
0x41e SWAP2
0x41f SWAP1
0x420 PUSH1 0xff
0x422 NOT
0x423 AND
0x424 PUSH1 0x1
0x426 DUP4
0x427 PUSH2 0x3b7
0x42a JUMP
---
0x418: V367 = 0x0
0x41b: V368 = S[0x0]
0x41c: V369 = 0x2
0x420: V370 = 0xff
0x422: V371 = NOT 0xff
0x423: V372 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V368
0x424: V373 = 0x1
0x427: V374 = 0x3b7
0x42a: JUMP 0x3b7
---
Entry stack: [V12, 0x12a, 0x0, S2, S1, {0xe6, 0x90e}]
Stack pops: 0
Stack additions: [0x2, 0x0, V372, 0x1, 0x2]
Exit stack: [V12, 0x12a, 0x0, S2, S1, {0xe6, 0x90e}, 0x2, 0x0, V372, 0x1, 0x2]

================================

Block 0x42b
[0x42b:0x46c]
---
Predecessors: []
Successors: [0x605]
---
0x42b JUMPDEST
0x42c MUL
0x42d OR
0x42e SWAP1
0x42f SSTORE
0x430 POP
0x431 PUSH32 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x452 PUSH1 0x2
0x454 SLOAD
0x455 PUSH1 0x40
0x457 MLOAD
0x458 SWAP1
0x459 DUP2
0x45a MSTORE
0x45b PUSH1 0x20
0x45d ADD
0x45e PUSH1 0x40
0x460 MLOAD
0x461 DUP1
0x462 SWAP2
0x463 SUB
0x464 SWAP1
0x465 LOG1
0x466 PUSH2 0x3f9
0x469 PUSH2 0x605
0x46c JUMP
---
0x42b: JUMPDEST 
0x42c: V375 = MUL S0 S1
0x42d: V376 = OR V375 S2
0x42f: S[S3] = V376
0x431: V377 = 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x452: V378 = 0x2
0x454: V379 = S[0x2]
0x455: V380 = 0x40
0x457: V381 = M[0x40]
0x45a: M[V381] = V379
0x45b: V382 = 0x20
0x45d: V383 = ADD 0x20 V381
0x45e: V384 = 0x40
0x460: V385 = M[0x40]
0x463: V386 = SUB V383 V385
0x465: LOG V385 V386 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x466: V387 = 0x3f9
0x469: V388 = 0x605
0x46c: JUMP 0x605
---
Entry stack: []
Stack pops: 5
Stack additions: [0x3f9]
Exit stack: [0x3f9]

================================

Block 0x46d
[0x46d:0x475]
---
Predecessors: []
Successors: [0x48f]
---
0x46d JUMPDEST
0x46e TIMESTAMP
0x46f PUSH1 0x5
0x471 SSTORE
0x472 PUSH2 0x48f
0x475 JUMP
---
0x46d: JUMPDEST 
0x46e: V389 = TIMESTAMP
0x46f: V390 = 0x5
0x471: S[0x5] = V389
0x472: V391 = 0x48f
0x475: JUMP 0x48f
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x476
[0x476:0x484]
---
Predecessors: [0x40d]
Successors: [0x485]
---
0x476 JUMPDEST
0x477 PUSH1 0x0
0x479 DUP1
0x47a SLOAD
0x47b PUSH1 0x1
0x47d SWAP2
0x47e SWAP1
0x47f PUSH1 0xff
0x481 NOT
0x482 AND
0x483 DUP3
0x484 DUP1
---
0x476: JUMPDEST 
0x477: V392 = 0x0
0x47a: V393 = S[0x0]
0x47b: V394 = 0x1
0x47f: V395 = 0xff
0x481: V396 = NOT 0xff
0x482: V397 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V393
---
Entry stack: [V12, 0x12a, 0x0, S2, S1, {0xe6, 0x90e}]
Stack pops: 0
Stack additions: [0x1, 0x0, V397, 0x1, 0x1]
Exit stack: [V12, 0x12a, 0x0, S2, S1, {0xe6, 0x90e}, 0x1, 0x0, V397, 0x1, 0x1]

================================

Block 0x485
[0x485:0x48e]
---
Predecessors: [0x476]
Successors: [0x48f]
---
0x485 JUMPDEST
0x486 MUL
0x487 OR
0x488 SWAP1
0x489 SSTORE
0x48a POP
0x48b TIMESTAMP
0x48c PUSH1 0x5
0x48e SSTORE
---
0x485: JUMPDEST 
0x486: V398 = MUL 0x1 0x1
0x487: V399 = OR 0x1 V397
0x489: S[0x0] = V399
0x48b: V400 = TIMESTAMP
0x48c: V401 = 0x5
0x48e: S[0x5] = V400
---
Entry stack: [V12, 0x12a, 0x0, S7, S6, {0xe6, 0x90e}, 0x1, 0x0, V397, 0x1, 0x1]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S7, S6, {0xe6, 0x90e}]

================================

Block 0x48f
[0x48f:0x48f]
---
Predecessors: [0x3f9, 0x402, 0x46d, 0x485]
Successors: [0x490]
---
0x48f JUMPDEST
---
0x48f: JUMPDEST 
---
Entry stack: [V12, 0x12a, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S2, S1, S0]

================================

Block 0x490
[0x490:0x490]
---
Predecessors: [0x48f]
Successors: [0x491]
---
0x490 JUMPDEST
---
0x490: JUMPDEST 
---
Entry stack: [V12, 0x12a, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S2, S1, S0]

================================

Block 0x491
[0x491:0x491]
---
Predecessors: [0x490]
Successors: [0x492]
---
0x491 JUMPDEST
---
0x491: JUMPDEST 
---
Entry stack: [V12, 0x12a, 0x0, S2, S1, {0xe6, 0x90e}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S2, S1, {0xe6, 0x90e}]

================================

Block 0x492
[0x492:0x493]
---
Predecessors: [0x491]
Successors: [0xe6, 0x90e]
---
0x492 JUMPDEST
0x493 JUMP
---
0x492: JUMPDEST 
0x493: JUMP {0xe6, 0x90e}
---
Entry stack: [V12, 0x12a, 0x0, S2, S1, {0xe6, 0x90e}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S2, S1]

================================

Block 0x494
[0x494:0x499]
---
Predecessors: [0x229]
Successors: [0x12a]
---
0x494 JUMPDEST
0x495 PUSH1 0x8
0x497 SLOAD
0x498 DUP2
0x499 JUMP
---
0x494: JUMPDEST 
0x495: V402 = 0x8
0x497: V403 = S[0x8]
0x499: JUMP 0x12a
---
Entry stack: [V12, 0x12a]
Stack pops: 1
Stack additions: [S0, V403]
Exit stack: [V12, 0x12a, V403]

================================

Block 0x49a
[0x49a:0x4a1]
---
Predecessors: [0x24e]
Successors: [0x4a2]
---
0x49a JUMPDEST
0x49b PUSH1 0x0
0x49d DUP1
0x49e DUP1
0x49f PUSH1 0x1
0x4a1 DUP1
---
0x49a: JUMPDEST 
0x49b: V404 = 0x0
0x49f: V405 = 0x1
---
Entry stack: [V12, 0x256]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x1, 0x1]
Exit stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1, 0x1]

================================

Block 0x4a2
[0x4a2:0x4b1]
---
Predecessors: [0x49a]
Successors: [0x4b2, 0x4b3]
---
0x4a2 JUMPDEST
0x4a3 PUSH1 0x0
0x4a5 SLOAD
0x4a6 PUSH1 0xff
0x4a8 AND
0x4a9 PUSH1 0x3
0x4ab DUP2
0x4ac GT
0x4ad ISZERO
0x4ae PUSH2 0x4b3
0x4b1 JUMPI
---
0x4a2: JUMPDEST 
0x4a3: V406 = 0x0
0x4a5: V407 = S[0x0]
0x4a6: V408 = 0xff
0x4a8: V409 = AND 0xff V407
0x4a9: V410 = 0x3
0x4ac: V411 = GT V409 0x3
0x4ad: V412 = ISZERO V411
0x4ae: V413 = 0x4b3
0x4b1: JUMPI 0x4b3 V412
---
Entry stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1, 0x1]
Stack pops: 0
Stack additions: [V409]
Exit stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1, 0x1, V409]

================================

Block 0x4b2
[0x4b2:0x4b2]
---
Predecessors: [0x4a2]
Successors: []
---
0x4b2 INVALID
---
0x4b2: INVALID 
---
Entry stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1, 0x1, V409]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1, 0x1, V409]

================================

Block 0x4b3
[0x4b3:0x4b8]
---
Predecessors: [0x4a2]
Successors: [0x4b9, 0x4bd]
---
0x4b3 JUMPDEST
0x4b4 EQ
0x4b5 PUSH2 0x4bd
0x4b8 JUMPI
---
0x4b3: JUMPDEST 
0x4b4: V414 = EQ V409 0x1
0x4b5: V415 = 0x4bd
0x4b8: JUMPI 0x4bd V414
---
Entry stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1, 0x1, V409]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1]

================================

Block 0x4b9
[0x4b9:0x4bc]
---
Predecessors: [0x4b3]
Successors: []
---
0x4b9 PUSH1 0x0
0x4bb DUP1
0x4bc REVERT
---
0x4b9: V416 = 0x0
0x4bc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1]

================================

Block 0x4bd
[0x4bd:0x4c1]
---
Predecessors: [0x4b3]
Successors: [0x4c2]
---
0x4bd JUMPDEST
0x4be PUSH1 0x0
0x4c0 SWAP3
0x4c1 POP
---
0x4bd: JUMPDEST 
0x4be: V417 = 0x0
---
Entry stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V12, 0x256, 0x0, 0x0, 0x0, 0x1]

================================

Block 0x4c2
[0x4c2:0x4cb]
---
Predecessors: [0x4bd, 0x5e5]
Successors: [0x4cc, 0x5f0]
---
0x4c2 JUMPDEST
0x4c3 PUSH1 0x1
0x4c5 SLOAD
0x4c6 DUP4
0x4c7 GT
0x4c8 PUSH2 0x5f0
0x4cb JUMPI
---
0x4c2: JUMPDEST 
0x4c3: V418 = 0x1
0x4c5: V419 = S[0x1]
0x4c7: V420 = GT S2 V419
0x4c8: V421 = 0x5f0
0x4cb: JUMPI 0x5f0 V420
---
Entry stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]

================================

Block 0x4cc
[0x4cc:0x4e2]
---
Predecessors: [0x4c2]
Successors: [0x4e3, 0x4e4]
---
0x4cc CALLER
0x4cd PUSH1 0x1
0x4cf PUSH1 0xa0
0x4d1 PUSH1 0x2
0x4d3 EXP
0x4d4 SUB
0x4d5 AND
0x4d6 PUSH1 0x1
0x4d8 DUP5
0x4d9 DUP2
0x4da SLOAD
0x4db DUP2
0x4dc LT
0x4dd ISZERO
0x4de ISZERO
0x4df PUSH2 0x4e4
0x4e2 JUMPI
---
0x4cc: V422 = CALLER
0x4cd: V423 = 0x1
0x4cf: V424 = 0xa0
0x4d1: V425 = 0x2
0x4d3: V426 = EXP 0x2 0xa0
0x4d4: V427 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d5: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x4d6: V429 = 0x1
0x4da: V430 = S[0x1]
0x4dc: V431 = LT S2 V430
0x4dd: V432 = ISZERO V431
0x4de: V433 = ISZERO V432
0x4df: V434 = 0x4e4
0x4e2: JUMPI 0x4e4 V433
---
Entry stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0, V428, 0x1, S2]
Exit stack: [V12, 0x256, 0x0, S2, 0x0, 0x1, V428, 0x1, S2]

================================

Block 0x4e3
[0x4e3:0x4e3]
---
Predecessors: [0x4cc]
Successors: []
---
0x4e3 INVALID
---
0x4e3: INVALID 
---
Entry stack: [V12, 0x256, 0x0, S5, 0x0, 0x1, V428, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, 0x0, S5, 0x0, 0x1, V428, 0x1, S0]

================================

Block 0x4e4
[0x4e4:0x4f4]
---
Predecessors: [0x4cc]
Successors: [0x4f5]
---
0x4e4 JUMPDEST
0x4e5 SWAP1
0x4e6 PUSH1 0x0
0x4e8 MSTORE
0x4e9 PUSH1 0x20
0x4eb PUSH1 0x0
0x4ed SHA3
0x4ee SWAP1
0x4ef PUSH1 0x2
0x4f1 MUL
0x4f2 ADD
0x4f3 PUSH1 0x0
---
0x4e4: JUMPDEST 
0x4e6: V435 = 0x0
0x4e8: M[0x0] = 0x1
0x4e9: V436 = 0x20
0x4eb: V437 = 0x0
0x4ed: V438 = SHA3 0x0 0x20
0x4ef: V439 = 0x2
0x4f1: V440 = MUL 0x2 S0
0x4f2: V441 = ADD V440 V438
0x4f3: V442 = 0x0
---
Entry stack: [V12, 0x256, 0x0, S5, 0x0, 0x1, V428, 0x1, S0]
Stack pops: 2
Stack additions: [V441, 0x0]
Exit stack: [V12, 0x256, 0x0, S5, 0x0, 0x1, V428, V441, 0x0]

================================

Block 0x4f5
[0x4f5:0x509]
---
Predecessors: [0x4e4]
Successors: [0x50a, 0x5e4]
---
0x4f5 JUMPDEST
0x4f6 POP
0x4f7 PUSH1 0x1
0x4f9 ADD
0x4fa SLOAD
0x4fb PUSH1 0x1
0x4fd PUSH1 0xa0
0x4ff PUSH1 0x2
0x501 EXP
0x502 SUB
0x503 AND
0x504 EQ
0x505 ISZERO
0x506 PUSH2 0x5e4
0x509 JUMPI
---
0x4f5: JUMPDEST 
0x4f7: V443 = 0x1
0x4f9: V444 = ADD 0x1 V441
0x4fa: V445 = S[V444]
0x4fb: V446 = 0x1
0x4fd: V447 = 0xa0
0x4ff: V448 = 0x2
0x501: V449 = EXP 0x2 0xa0
0x502: V450 = SUB 0x10000000000000000000000000000000000000000 0x1
0x503: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x504: V452 = EQ V451 V428
0x505: V453 = ISZERO V452
0x506: V454 = 0x5e4
0x509: JUMPI 0x5e4 V453
---
Entry stack: [V12, 0x256, 0x0, S5, 0x0, 0x1, V428, V441, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x256, 0x0, S5, 0x0, 0x1]

================================

Block 0x50a
[0x50a:0x515]
---
Predecessors: [0x4f5]
Successors: [0x516, 0x517]
---
0x50a PUSH1 0x1
0x50c DUP1
0x50d SLOAD
0x50e DUP5
0x50f SWAP1
0x510 DUP2
0x511 LT
0x512 PUSH2 0x517
0x515 JUMPI
---
0x50a: V455 = 0x1
0x50d: V456 = S[0x1]
0x511: V457 = LT S2 V456
0x512: V458 = 0x517
0x515: JUMPI 0x517 V457
---
Entry stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x1, S2]
Exit stack: [V12, 0x256, 0x0, S2, 0x0, 0x1, 0x1, S2]

================================

Block 0x516
[0x516:0x516]
---
Predecessors: [0x50a]
Successors: []
---
0x516 INVALID
---
0x516: INVALID 
---
Entry stack: [V12, 0x256, 0x0, S4, 0x0, 0x1, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, 0x0, S4, 0x0, 0x1, 0x1, S0]

================================

Block 0x517
[0x517:0x527]
---
Predecessors: [0x50a]
Successors: [0x528]
---
0x517 JUMPDEST
0x518 SWAP1
0x519 PUSH1 0x0
0x51b MSTORE
0x51c PUSH1 0x20
0x51e PUSH1 0x0
0x520 SHA3
0x521 SWAP1
0x522 PUSH1 0x2
0x524 MUL
0x525 ADD
0x526 PUSH1 0x0
---
0x517: JUMPDEST 
0x519: V459 = 0x0
0x51b: M[0x0] = 0x1
0x51c: V460 = 0x20
0x51e: V461 = 0x0
0x520: V462 = SHA3 0x0 0x20
0x522: V463 = 0x2
0x524: V464 = MUL 0x2 S0
0x525: V465 = ADD V464 V462
0x526: V466 = 0x0
---
Entry stack: [V12, 0x256, 0x0, S4, 0x0, 0x1, 0x1, S0]
Stack pops: 2
Stack additions: [V465, 0x0]
Exit stack: [V12, 0x256, 0x0, S4, 0x0, 0x1, V465, 0x0]

================================

Block 0x528
[0x528:0x53c]
---
Predecessors: [0x517]
Successors: [0x53d, 0x53e]
---
0x528 JUMPDEST
0x529 POP
0x52a SLOAD
0x52b PUSH1 0x1
0x52d DUP1
0x52e SLOAD
0x52f SWAP2
0x530 SWAP4
0x531 POP
0x532 PUSH1 0x0
0x534 SWAP2
0x535 DUP6
0x536 SWAP1
0x537 DUP2
0x538 LT
0x539 PUSH2 0x53e
0x53c JUMPI
---
0x528: JUMPDEST 
0x52a: V467 = S[V465]
0x52b: V468 = 0x1
0x52e: V469 = S[0x1]
0x532: V470 = 0x0
0x538: V471 = LT S4 V469
0x539: V472 = 0x53e
0x53c: JUMPI 0x53e V471
---
Entry stack: [V12, 0x256, 0x0, S4, 0x0, 0x1, V465, 0x0]
Stack pops: 5
Stack additions: [S4, V467, S2, 0x0, 0x1, S4]
Exit stack: [V12, 0x256, 0x0, S4, V467, 0x1, 0x0, 0x1, S4]

================================

Block 0x53d
[0x53d:0x53d]
---
Predecessors: [0x528]
Successors: []
---
0x53d INVALID
---
0x53d: INVALID 
---
Entry stack: [V12, 0x256, 0x0, S5, V467, 0x1, 0x0, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, 0x0, S5, V467, 0x1, 0x0, 0x1, S0]

================================

Block 0x53e
[0x53e:0x54e]
---
Predecessors: [0x528]
Successors: [0x54f]
---
0x53e JUMPDEST
0x53f SWAP1
0x540 PUSH1 0x0
0x542 MSTORE
0x543 PUSH1 0x20
0x545 PUSH1 0x0
0x547 SHA3
0x548 SWAP1
0x549 PUSH1 0x2
0x54b MUL
0x54c ADD
0x54d PUSH1 0x0
---
0x53e: JUMPDEST 
0x540: V473 = 0x0
0x542: M[0x0] = 0x1
0x543: V474 = 0x20
0x545: V475 = 0x0
0x547: V476 = SHA3 0x0 0x20
0x549: V477 = 0x2
0x54b: V478 = MUL 0x2 S0
0x54c: V479 = ADD V478 V476
0x54d: V480 = 0x0
---
Entry stack: [V12, 0x256, 0x0, S5, V467, 0x1, 0x0, 0x1, S0]
Stack pops: 2
Stack additions: [V479, 0x0]
Exit stack: [V12, 0x256, 0x0, S5, V467, 0x1, 0x0, V479, 0x0]

================================

Block 0x54f
[0x54f:0x55d]
---
Predecessors: [0x53e]
Successors: [0x55e, 0x55f]
---
0x54f JUMPDEST
0x550 POP
0x551 SSTORE
0x552 PUSH1 0x1
0x554 DUP1
0x555 SLOAD
0x556 DUP5
0x557 SWAP1
0x558 DUP2
0x559 LT
0x55a PUSH2 0x55f
0x55d JUMPI
---
0x54f: JUMPDEST 
0x551: S[V479] = 0x0
0x552: V481 = 0x1
0x555: V482 = S[0x1]
0x559: V483 = LT S5 V482
0x55a: V484 = 0x55f
0x55d: JUMPI 0x55f V483
---
Entry stack: [V12, 0x256, 0x0, S5, V467, 0x1, 0x0, V479, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, 0x1, S5]
Exit stack: [V12, 0x256, 0x0, S5, V467, 0x1, 0x1, S5]

================================

Block 0x55e
[0x55e:0x55e]
---
Predecessors: [0x54f]
Successors: []
---
0x55e INVALID
---
0x55e: INVALID 
---
Entry stack: [V12, 0x256, 0x0, S4, V467, 0x1, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, 0x0, S4, V467, 0x1, 0x1, S0]

================================

Block 0x55f
[0x55f:0x56f]
---
Predecessors: [0x54f]
Successors: [0x570]
---
0x55f JUMPDEST
0x560 SWAP1
0x561 PUSH1 0x0
0x563 MSTORE
0x564 PUSH1 0x20
0x566 PUSH1 0x0
0x568 SHA3
0x569 SWAP1
0x56a PUSH1 0x2
0x56c MUL
0x56d ADD
0x56e PUSH1 0x0
---
0x55f: JUMPDEST 
0x561: V485 = 0x0
0x563: M[0x0] = 0x1
0x564: V486 = 0x20
0x566: V487 = 0x0
0x568: V488 = SHA3 0x0 0x20
0x56a: V489 = 0x2
0x56c: V490 = MUL 0x2 S0
0x56d: V491 = ADD V490 V488
0x56e: V492 = 0x0
---
Entry stack: [V12, 0x256, 0x0, S4, V467, 0x1, 0x1, S0]
Stack pops: 2
Stack additions: [V491, 0x0]
Exit stack: [V12, 0x256, 0x0, S4, V467, 0x1, V491, 0x0]

================================

Block 0x570
[0x570:0x5a0]
---
Predecessors: [0x55f]
Successors: [0x5a1, 0x5cc]
---
0x570 JUMPDEST
0x571 POP
0x572 PUSH1 0x1
0x574 ADD
0x575 SLOAD
0x576 PUSH1 0x1
0x578 PUSH1 0xa0
0x57a PUSH1 0x2
0x57c EXP
0x57d SUB
0x57e AND
0x57f DUP3
0x580 ISZERO
0x581 PUSH2 0x8fc
0x584 MUL
0x585 DUP4
0x586 PUSH1 0x40
0x588 MLOAD
0x589 PUSH1 0x0
0x58b PUSH1 0x40
0x58d MLOAD
0x58e DUP1
0x58f DUP4
0x590 SUB
0x591 DUP2
0x592 DUP6
0x593 DUP9
0x594 DUP9
0x595 CALL
0x596 SWAP4
0x597 POP
0x598 POP
0x599 POP
0x59a POP
0x59b ISZERO
0x59c ISZERO
0x59d PUSH2 0x5cc
0x5a0 JUMPI
---
0x570: JUMPDEST 
0x572: V493 = 0x1
0x574: V494 = ADD 0x1 V491
0x575: V495 = S[V494]
0x576: V496 = 0x1
0x578: V497 = 0xa0
0x57a: V498 = 0x2
0x57c: V499 = EXP 0x2 0xa0
0x57d: V500 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57e: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V495
0x580: V502 = ISZERO V467
0x581: V503 = 0x8fc
0x584: V504 = MUL 0x8fc V502
0x586: V505 = 0x40
0x588: V506 = M[0x40]
0x589: V507 = 0x0
0x58b: V508 = 0x40
0x58d: V509 = M[0x40]
0x590: V510 = SUB V506 V509
0x595: V511 = CALL V504 V501 V467 V509 V510 V509 0x0
0x59b: V512 = ISZERO V511
0x59c: V513 = ISZERO V512
0x59d: V514 = 0x5cc
0x5a0: JUMPI 0x5cc V513
---
Entry stack: [V12, 0x256, 0x0, S4, V467, 0x1, V491, 0x0]
Stack pops: 4
Stack additions: [S3, S2]
Exit stack: [V12, 0x256, 0x0, S4, V467, 0x1]

================================

Block 0x5a1
[0x5a1:0x5ae]
---
Predecessors: [0x570]
Successors: [0x5af, 0x5b0]
---
0x5a1 DUP2
0x5a2 PUSH1 0x1
0x5a4 DUP5
0x5a5 DUP2
0x5a6 SLOAD
0x5a7 DUP2
0x5a8 LT
0x5a9 ISZERO
0x5aa ISZERO
0x5ab PUSH2 0x5b0
0x5ae JUMPI
---
0x5a2: V515 = 0x1
0x5a6: V516 = S[0x1]
0x5a8: V517 = LT S2 V516
0x5a9: V518 = ISZERO V517
0x5aa: V519 = ISZERO V518
0x5ab: V520 = 0x5b0
0x5ae: JUMPI 0x5b0 V519
---
Entry stack: [V12, 0x256, 0x0, S2, V467, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0, S1, 0x1, S2]
Exit stack: [V12, 0x256, 0x0, S2, V467, 0x1, V467, 0x1, S2]

================================

Block 0x5af
[0x5af:0x5af]
---
Predecessors: [0x5a1]
Successors: []
---
0x5af INVALID
---
0x5af: INVALID 
---
Entry stack: [V12, 0x256, 0x0, S5, V467, 0x1, V467, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, 0x0, S5, V467, 0x1, V467, 0x1, S0]

================================

Block 0x5b0
[0x5b0:0x5c0]
---
Predecessors: [0x5a1]
Successors: [0x5c1]
---
0x5b0 JUMPDEST
0x5b1 SWAP1
0x5b2 PUSH1 0x0
0x5b4 MSTORE
0x5b5 PUSH1 0x20
0x5b7 PUSH1 0x0
0x5b9 SHA3
0x5ba SWAP1
0x5bb PUSH1 0x2
0x5bd MUL
0x5be ADD
0x5bf PUSH1 0x0
---
0x5b0: JUMPDEST 
0x5b2: V521 = 0x0
0x5b4: M[0x0] = 0x1
0x5b5: V522 = 0x20
0x5b7: V523 = 0x0
0x5b9: V524 = SHA3 0x0 0x20
0x5bb: V525 = 0x2
0x5bd: V526 = MUL 0x2 S0
0x5be: V527 = ADD V526 V524
0x5bf: V528 = 0x0
---
Entry stack: [V12, 0x256, 0x0, S5, V467, 0x1, V467, 0x1, S0]
Stack pops: 2
Stack additions: [V527, 0x0]
Exit stack: [V12, 0x256, 0x0, S5, V467, 0x1, V467, V527, 0x0]

================================

Block 0x5c1
[0x5c1:0x5cb]
---
Predecessors: [0x5b0]
Successors: [0x5f5]
---
0x5c1 JUMPDEST
0x5c2 POP
0x5c3 SSTORE
0x5c4 PUSH1 0x0
0x5c6 SWAP4
0x5c7 POP
0x5c8 PUSH2 0x5f5
0x5cb JUMP
---
0x5c1: JUMPDEST 
0x5c3: S[V527] = V467
0x5c4: V529 = 0x0
0x5c8: V530 = 0x5f5
0x5cb: JUMP 0x5f5
---
Entry stack: [V12, 0x256, 0x0, S5, V467, 0x1, V467, V527, 0x0]
Stack pops: 7
Stack additions: [0x0, S5, S4, S3]
Exit stack: [V12, 0x256, 0x0, S5, V467, 0x1]

================================

Block 0x5cc
[0x5cc:0x5da]
---
Predecessors: [0x570]
Successors: [0x5db]
---
0x5cc JUMPDEST
0x5cd PUSH1 0x2
0x5cf DUP1
0x5d0 SLOAD
0x5d1 DUP4
0x5d2 SWAP1
0x5d3 SUB
0x5d4 SWAP1
0x5d5 DUP2
0x5d6 SWAP1
0x5d7 SSTORE
0x5d8 PUSH1 0x3
0x5da SSTORE
---
0x5cc: JUMPDEST 
0x5cd: V531 = 0x2
0x5d0: V532 = S[0x2]
0x5d3: V533 = SUB V532 V467
0x5d7: S[0x2] = V533
0x5d8: V534 = 0x3
0x5da: S[0x3] = V533
---
Entry stack: [V12, 0x256, 0x0, S2, V467, 0x1]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x256, 0x0, S2, V467, 0x1]

================================

Block 0x5db
[0x5db:0x5e3]
---
Predecessors: [0x5cc]
Successors: [0x5f5]
---
0x5db JUMPDEST
0x5dc PUSH1 0x1
0x5de SWAP4
0x5df POP
0x5e0 PUSH2 0x5f5
0x5e3 JUMP
---
0x5db: JUMPDEST 
0x5dc: V535 = 0x1
0x5e0: V536 = 0x5f5
0x5e3: JUMP 0x5f5
---
Entry stack: [V12, 0x256, 0x0, S2, V467, 0x1]
Stack pops: 4
Stack additions: [0x1, S2, S1, S0]
Exit stack: [V12, 0x256, 0x1, S2, V467, 0x1]

================================

Block 0x5e4
[0x5e4:0x5e4]
---
Predecessors: [0x4f5]
Successors: [0x5e5]
---
0x5e4 JUMPDEST
---
0x5e4: JUMPDEST 
---
Entry stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]

================================

Block 0x5e5
[0x5e5:0x5ef]
---
Predecessors: [0x5e4]
Successors: [0x4c2]
---
0x5e5 JUMPDEST
0x5e6 PUSH1 0x1
0x5e8 SWAP1
0x5e9 SWAP3
0x5ea ADD
0x5eb SWAP2
0x5ec PUSH2 0x4c2
0x5ef JUMP
---
0x5e5: JUMPDEST 
0x5e6: V537 = 0x1
0x5ea: V538 = ADD S2 0x1
0x5ec: V539 = 0x4c2
0x5ef: JUMP 0x4c2
---
Entry stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]
Stack pops: 3
Stack additions: [V538, S1, S0]
Exit stack: [V12, 0x256, 0x0, V538, 0x0, 0x1]

================================

Block 0x5f0
[0x5f0:0x5f4]
---
Predecessors: [0x4c2]
Successors: [0x5f5]
---
0x5f0 JUMPDEST
0x5f1 PUSH1 0x0
0x5f3 SWAP4
0x5f4 POP
---
0x5f0: JUMPDEST 
0x5f1: V540 = 0x0
---
Entry stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x256, 0x0, S2, 0x0, 0x1]

================================

Block 0x5f5
[0x5f5:0x5f5]
---
Predecessors: [0x5c1, 0x5db, 0x5f0]
Successors: [0x5f6]
---
0x5f5 JUMPDEST
---
0x5f5: JUMPDEST 
---
Entry stack: [V12, 0x256, {0x0, 0x1}, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x256, {0x0, 0x1}, S2, S1, 0x1]

================================

Block 0x5f6
[0x5f6:0x5fb]
---
Predecessors: [0x5f5]
Successors: [0x256]
---
0x5f6 JUMPDEST
0x5f7 POP
0x5f8 POP
0x5f9 POP
0x5fa SWAP1
0x5fb JUMP
---
0x5f6: JUMPDEST 
0x5fb: JUMP 0x256
---
Entry stack: [V12, 0x256, {0x0, 0x1}, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S3]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x5fc
[0x5fc:0x604]
---
Predecessors: [0x275]
Successors: [0x27d]
---
0x5fc JUMPDEST
0x5fd PUSH1 0x0
0x5ff SLOAD
0x600 PUSH1 0xff
0x602 AND
0x603 DUP2
0x604 JUMP
---
0x5fc: JUMPDEST 
0x5fd: V541 = 0x0
0x5ff: V542 = S[0x0]
0x600: V543 = 0xff
0x602: V544 = AND 0xff V542
0x604: JUMP 0x27d
---
Entry stack: [V12, 0x27d]
Stack pops: 1
Stack additions: [S0, V544]
Exit stack: [V12, 0x27d, V544]

================================

Block 0x605
[0x605:0x608]
---
Predecessors: [0x2ac, 0x3b7, 0x42b]
Successors: [0x609]
---
0x605 JUMPDEST
0x606 PUSH1 0x2
0x608 DUP1
---
0x605: JUMPDEST 
0x606: V545 = 0x2
---
Entry stack: [V12, 0x12a, 0x0, S3, S2, S1, {0xe6, 0x3f9}]
Stack pops: 0
Stack additions: [0x2, 0x2]
Exit stack: [V12, 0x12a, 0x0, S3, S2, S1, {0xe6, 0x3f9}, 0x2, 0x2]

================================

Block 0x609
[0x609:0x618]
---
Predecessors: [0x605]
Successors: [0x619, 0x61a]
---
0x609 JUMPDEST
0x60a PUSH1 0x0
0x60c SLOAD
0x60d PUSH1 0xff
0x60f AND
0x610 PUSH1 0x3
0x612 DUP2
0x613 GT
0x614 ISZERO
0x615 PUSH2 0x61a
0x618 JUMPI
---
0x609: JUMPDEST 
0x60a: V546 = 0x0
0x60c: V547 = S[0x0]
0x60d: V548 = 0xff
0x60f: V549 = AND 0xff V547
0x610: V550 = 0x3
0x613: V551 = GT V549 0x3
0x614: V552 = ISZERO V551
0x615: V553 = 0x61a
0x618: JUMPI 0x61a V552
---
Entry stack: [V12, 0x12a, 0x0, S5, S4, S3, {0xe6, 0x3f9}, 0x2, 0x2]
Stack pops: 0
Stack additions: [V549]
Exit stack: [V12, 0x12a, 0x0, S5, S4, S3, {0xe6, 0x3f9}, 0x2, 0x2, V549]

================================

Block 0x619
[0x619:0x619]
---
Predecessors: [0x609]
Successors: []
---
0x619 INVALID
---
0x619: INVALID 
---
Entry stack: [V12, 0x12a, 0x0, S6, S5, S4, {0xe6, 0x3f9}, 0x2, 0x2, V549]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S6, S5, S4, {0xe6, 0x3f9}, 0x2, 0x2, V549]

================================

Block 0x61a
[0x61a:0x61f]
---
Predecessors: [0x609]
Successors: [0x620, 0x624]
---
0x61a JUMPDEST
0x61b EQ
0x61c PUSH2 0x624
0x61f JUMPI
---
0x61a: JUMPDEST 
0x61b: V554 = EQ V549 0x2
0x61c: V555 = 0x624
0x61f: JUMPI 0x624 V554
---
Entry stack: [V12, 0x12a, 0x0, S6, S5, S4, {0xe6, 0x3f9}, 0x2, 0x2, V549]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S6, S5, S4, {0xe6, 0x3f9}, 0x2]

================================

Block 0x620
[0x620:0x623]
---
Predecessors: [0x61a]
Successors: []
---
0x620 PUSH1 0x0
0x622 DUP1
0x623 REVERT
---
0x620: V556 = 0x0
0x623: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, S4, S3, S2, {0xe6, 0x3f9}, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S4, S3, S2, {0xe6, 0x3f9}, 0x2]

================================

Block 0x624
[0x624:0x658]
---
Predecessors: [0x61a]
Successors: [0x659, 0x65d]
---
0x624 JUMPDEST
0x625 PUSH1 0xb
0x627 SLOAD
0x628 PUSH1 0x1
0x62a PUSH1 0xa0
0x62c PUSH1 0x2
0x62e EXP
0x62f SUB
0x630 SWAP1
0x631 DUP2
0x632 AND
0x633 SWAP1
0x634 ADDRESS
0x635 AND
0x636 BALANCE
0x637 DUP1
0x638 ISZERO
0x639 PUSH2 0x8fc
0x63c MUL
0x63d SWAP1
0x63e PUSH1 0x40
0x640 MLOAD
0x641 PUSH1 0x0
0x643 PUSH1 0x40
0x645 MLOAD
0x646 DUP1
0x647 DUP4
0x648 SUB
0x649 DUP2
0x64a DUP6
0x64b DUP9
0x64c DUP9
0x64d CALL
0x64e SWAP4
0x64f POP
0x650 POP
0x651 POP
0x652 POP
0x653 ISZERO
0x654 ISZERO
0x655 PUSH2 0x65d
0x658 JUMPI
---
0x624: JUMPDEST 
0x625: V557 = 0xb
0x627: V558 = S[0xb]
0x628: V559 = 0x1
0x62a: V560 = 0xa0
0x62c: V561 = 0x2
0x62e: V562 = EXP 0x2 0xa0
0x62f: V563 = SUB 0x10000000000000000000000000000000000000000 0x1
0x632: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V558
0x634: V565 = ADDRESS
0x635: V566 = AND V565 0xffffffffffffffffffffffffffffffffffffffff
0x636: V567 = BALANCE V566
0x638: V568 = ISZERO V567
0x639: V569 = 0x8fc
0x63c: V570 = MUL 0x8fc V568
0x63e: V571 = 0x40
0x640: V572 = M[0x40]
0x641: V573 = 0x0
0x643: V574 = 0x40
0x645: V575 = M[0x40]
0x648: V576 = SUB V572 V575
0x64d: V577 = CALL V570 V564 V567 V575 V576 V575 0x0
0x653: V578 = ISZERO V577
0x654: V579 = ISZERO V578
0x655: V580 = 0x65d
0x658: JUMPI 0x65d V579
---
Entry stack: [V12, 0x12a, 0x0, S4, S3, S2, {0xe6, 0x3f9}, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S4, S3, S2, {0xe6, 0x3f9}, 0x2]

================================

Block 0x659
[0x659:0x65c]
---
Predecessors: [0x624]
Successors: []
---
0x659 PUSH1 0x0
0x65b DUP1
0x65c REVERT
---
0x659: V581 = 0x0
0x65c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, S4, S3, S2, {0xe6, 0x3f9}, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S4, S3, S2, {0xe6, 0x3f9}, 0x2]

================================

Block 0x65d
[0x65d:0x66c]
---
Predecessors: [0x624]
Successors: [0x66d]
---
0x65d JUMPDEST
0x65e PUSH1 0x0
0x660 DUP1
0x661 SLOAD
0x662 PUSH1 0x3
0x664 SWAP2
0x665 SWAP1
0x666 PUSH1 0xff
0x668 NOT
0x669 AND
0x66a PUSH1 0x1
0x66c DUP4
---
0x65d: JUMPDEST 
0x65e: V582 = 0x0
0x661: V583 = S[0x0]
0x662: V584 = 0x3
0x666: V585 = 0xff
0x668: V586 = NOT 0xff
0x669: V587 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V583
0x66a: V588 = 0x1
---
Entry stack: [V12, 0x12a, 0x0, S4, S3, S2, {0xe6, 0x3f9}, 0x2]
Stack pops: 0
Stack additions: [0x3, 0x0, V587, 0x1, 0x3]
Exit stack: [V12, 0x12a, 0x0, S4, S3, S2, {0xe6, 0x3f9}, 0x2, 0x3, 0x0, V587, 0x1, 0x3]

================================

Block 0x66d
[0x66d:0x6c0]
---
Predecessors: [0x65d]
Successors: [0x6c1]
---
0x66d JUMPDEST
0x66e MUL
0x66f OR
0x670 SWAP1
0x671 SSTORE
0x672 POP
0x673 PUSH1 0x0
0x675 PUSH1 0x3
0x677 SSTORE
0x678 PUSH1 0xb
0x67a SLOAD
0x67b PUSH32 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
0x69c SWAP1
0x69d PUSH1 0x1
0x69f PUSH1 0xa0
0x6a1 PUSH1 0x2
0x6a3 EXP
0x6a4 SUB
0x6a5 AND
0x6a6 PUSH1 0x40
0x6a8 MLOAD
0x6a9 PUSH1 0x1
0x6ab PUSH1 0xa0
0x6ad PUSH1 0x2
0x6af EXP
0x6b0 SUB
0x6b1 SWAP1
0x6b2 SWAP2
0x6b3 AND
0x6b4 DUP2
0x6b5 MSTORE
0x6b6 PUSH1 0x20
0x6b8 ADD
0x6b9 PUSH1 0x40
0x6bb MLOAD
0x6bc DUP1
0x6bd SWAP2
0x6be SUB
0x6bf SWAP1
0x6c0 LOG1
---
0x66d: JUMPDEST 
0x66e: V589 = MUL 0x3 0x1
0x66f: V590 = OR 0x3 V587
0x671: S[0x0] = V590
0x673: V591 = 0x0
0x675: V592 = 0x3
0x677: S[0x3] = 0x0
0x678: V593 = 0xb
0x67a: V594 = S[0xb]
0x67b: V595 = 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
0x69d: V596 = 0x1
0x69f: V597 = 0xa0
0x6a1: V598 = 0x2
0x6a3: V599 = EXP 0x2 0xa0
0x6a4: V600 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a5: V601 = AND 0xffffffffffffffffffffffffffffffffffffffff V594
0x6a6: V602 = 0x40
0x6a8: V603 = M[0x40]
0x6a9: V604 = 0x1
0x6ab: V605 = 0xa0
0x6ad: V606 = 0x2
0x6af: V607 = EXP 0x2 0xa0
0x6b0: V608 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b3: V609 = AND V601 0xffffffffffffffffffffffffffffffffffffffff
0x6b5: M[V603] = V609
0x6b6: V610 = 0x20
0x6b8: V611 = ADD 0x20 V603
0x6b9: V612 = 0x40
0x6bb: V613 = M[0x40]
0x6be: V614 = SUB V611 V613
0x6c0: LOG V613 V614 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
---
Entry stack: [V12, 0x12a, 0x0, S9, S8, S7, {0xe6, 0x3f9}, 0x2, 0x3, 0x0, V587, 0x1, 0x3]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S9, S8, S7, {0xe6, 0x3f9}, 0x2]

================================

Block 0x6c1
[0x6c1:0x6c1]
---
Predecessors: [0x66d]
Successors: [0x6c2]
---
0x6c1 JUMPDEST
---
0x6c1: JUMPDEST 
---
Entry stack: [V12, 0x12a, 0x0, S4, S3, S2, {0xe6, 0x3f9}, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S4, S3, S2, {0xe6, 0x3f9}, 0x2]

================================

Block 0x6c2
[0x6c2:0x6c4]
---
Predecessors: [0x6c1]
Successors: [0xe6, 0x3f9]
---
0x6c2 JUMPDEST
0x6c3 POP
0x6c4 JUMP
---
0x6c2: JUMPDEST 
0x6c4: JUMP {0xe6, 0x3f9}
---
Entry stack: [V12, 0x12a, 0x0, S4, S3, S2, {0xe6, 0x3f9}, 0x2]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S4, S3, S2]

================================

Block 0x6c5
[0x6c5:0x6ca]
---
Predecessors: [0x2c1]
Successors: [0x12a]
---
0x6c5 JUMPDEST
0x6c6 PUSH1 0x2
0x6c8 SLOAD
0x6c9 DUP2
0x6ca JUMP
---
0x6c5: JUMPDEST 
0x6c6: V615 = 0x2
0x6c8: V616 = S[0x2]
0x6ca: JUMP 0x12a
---
Entry stack: [V12, 0x12a]
Stack pops: 1
Stack additions: [S0, V616]
Exit stack: [V12, 0x12a, V616]

================================

Block 0x6cb
[0x6cb:0x6d0]
---
Predecessors: [0x2e6]
Successors: [0x12a]
---
0x6cb JUMPDEST
0x6cc PUSH1 0x3
0x6ce SLOAD
0x6cf DUP2
0x6d0 JUMP
---
0x6cb: JUMPDEST 
0x6cc: V617 = 0x3
0x6ce: V618 = S[0x3]
0x6d0: JUMP 0x12a
---
Entry stack: [V12, 0x12a]
Stack pops: 1
Stack additions: [S0, V618]
Exit stack: [V12, 0x12a, V618]

================================

Block 0x6d1
[0x6d1:0x6d6]
---
Predecessors: [0x300, 0x308]
Successors: [0x6d7]
---
0x6d1 JUMPDEST
0x6d2 PUSH1 0x0
0x6d4 DUP1
0x6d5 DUP1
0x6d6 DUP1
---
0x6d1: JUMPDEST 
0x6d2: V619 = 0x0
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x6d7
[0x6d7:0x6e6]
---
Predecessors: [0x6d1, 0x920]
Successors: [0x6e7, 0x6e8]
---
0x6d7 JUMPDEST
0x6d8 PUSH1 0x0
0x6da SLOAD
0x6db PUSH1 0xff
0x6dd AND
0x6de PUSH1 0x3
0x6e0 DUP2
0x6e1 GT
0x6e2 ISZERO
0x6e3 PUSH2 0x6e8
0x6e6 JUMPI
---
0x6d7: JUMPDEST 
0x6d8: V620 = 0x0
0x6da: V621 = S[0x0]
0x6db: V622 = 0xff
0x6dd: V623 = AND 0xff V621
0x6de: V624 = 0x3
0x6e1: V625 = GT V623 0x3
0x6e2: V626 = ISZERO V625
0x6e3: V627 = 0x6e8
0x6e6: JUMPI 0x6e8 V626
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V623]
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0, 0x0, V623]

================================

Block 0x6e7
[0x6e7:0x6e7]
---
Predecessors: [0x6d7]
Successors: []
---
0x6e7 INVALID
---
0x6e7: INVALID 
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0, 0x0, V623]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0, 0x0, V623]

================================

Block 0x6e8
[0x6e8:0x6ed]
---
Predecessors: [0x6d7, 0x92a]
Successors: [0x6ee, 0x6f2]
---
0x6e8 JUMPDEST
0x6e9 EQ
0x6ea PUSH2 0x6f2
0x6ed JUMPI
---
0x6e8: JUMPDEST 
0x6e9: V628 = EQ S0 0x0
0x6ea: V629 = 0x6f2
0x6ed: JUMPI 0x6f2 V628
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x6ee
[0x6ee:0x6f1]
---
Predecessors: [0x6e8]
Successors: []
---
0x6ee PUSH1 0x0
0x6f0 DUP1
0x6f1 REVERT
---
0x6ee: V630 = 0x0
0x6f1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x6f2
[0x6f2:0x6fc]
---
Predecessors: [0x6e8, 0x93a]
Successors: [0x6fd, 0x701]
---
0x6f2 JUMPDEST
0x6f3 PUSH1 0x6
0x6f5 SLOAD
0x6f6 CALLVALUE
0x6f7 LT
0x6f8 ISZERO
0x6f9 PUSH2 0x701
0x6fc JUMPI
---
0x6f2: JUMPDEST 
0x6f3: V631 = 0x6
0x6f5: V632 = S[0x6]
0x6f6: V633 = CALLVALUE
0x6f7: V634 = LT V633 V632
0x6f8: V635 = ISZERO V634
0x6f9: V636 = 0x701
0x6fc: JUMPI 0x701 V635
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x6fd
[0x6fd:0x700]
---
Predecessors: [0x6f2]
Successors: []
---
0x6fd PUSH1 0x0
0x6ff DUP1
0x700 REVERT
---
0x6fd: V637 = 0x0
0x700: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x701
[0x701:0x70c]
---
Predecessors: [0x6f2, 0x941]
Successors: [0x70d, 0x70e]
---
0x701 JUMPDEST
0x702 PUSH1 0x6
0x704 SLOAD
0x705 CALLVALUE
0x706 DUP2
0x707 ISZERO
0x708 ISZERO
0x709 PUSH2 0x70e
0x70c JUMPI
---
0x701: JUMPDEST 
0x702: V638 = 0x6
0x704: V639 = S[0x6]
0x705: V640 = CALLVALUE
0x707: V641 = ISZERO V639
0x708: V642 = ISZERO V641
0x709: V643 = 0x70e
0x70c: JUMPI 0x70e V642
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V639, V640]
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0, V639, V640]

================================

Block 0x70d
[0x70d:0x70d]
---
Predecessors: [0x701]
Successors: []
---
0x70d INVALID
---
0x70d: INVALID 
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0, V639, V640]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0, V639, V640]

================================

Block 0x70e
[0x70e:0x714]
---
Predecessors: [0x701, 0x950]
Successors: [0x715, 0x719]
---
0x70e JUMPDEST
0x70f MOD
0x710 ISZERO
0x711 PUSH2 0x719
0x714 JUMPI
---
0x70e: JUMPDEST 
0x70f: V644 = MOD S0 S1
0x710: V645 = ISZERO V644
0x711: V646 = 0x719
0x714: JUMPI 0x719 V645
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x715
[0x715:0x718]
---
Predecessors: [0x70e]
Successors: []
---
0x715 PUSH1 0x0
0x717 DUP1
0x718 REVERT
---
0x715: V647 = 0x0
0x718: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x719
[0x719:0x72c]
---
Predecessors: [0x70e, 0x960]
Successors: [0xbeb]
---
0x719 JUMPDEST
0x71a PUSH1 0x1
0x71c DUP1
0x71d SLOAD
0x71e CALLVALUE
0x71f SWAP4
0x720 POP
0x721 DUP1
0x722 DUP3
0x723 ADD
0x724 PUSH2 0x72d
0x727 DUP4
0x728 DUP3
0x729 PUSH2 0xbeb
0x72c JUMP
---
0x719: JUMPDEST 
0x71a: V648 = 0x1
0x71d: V649 = S[0x1]
0x71e: V650 = CALLVALUE
0x723: V651 = ADD 0x1 V649
0x724: V652 = 0x72d
0x729: V653 = 0xbeb
0x72c: JUMP 0xbeb
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [V650, S0, 0x1, V649, V651, 0x72d, 0x1, V651]
Exit stack: [V12, 0x12a, 0x0, V650, 0x0, 0x1, V649, V651, 0x72d, 0x1, V651]

================================

Block 0x72d
[0x72d:0x73d]
---
Predecessors: [0xc18]
Successors: [0x73e]
---
0x72d JUMPDEST
0x72e SWAP2
0x72f PUSH1 0x0
0x731 MSTORE
0x732 PUSH1 0x20
0x734 PUSH1 0x0
0x736 SHA3
0x737 SWAP1
0x738 PUSH1 0x2
0x73a MUL
0x73b ADD
0x73c PUSH1 0x0
---
0x72d: JUMPDEST 
0x72f: V654 = 0x0
0x731: M[0x0] = 0x1
0x732: V655 = 0x20
0x734: V656 = 0x0
0x736: V657 = SHA3 0x0 0x20
0x738: V658 = 0x2
0x73a: V659 = MUL 0x2 S1
0x73b: V660 = ADD V659 V657
0x73c: V661 = 0x0
---
Entry stack: [V12, 0x12a, 0x0, S4, S3, 0x1, S1, S0]
Stack pops: 3
Stack additions: [S0, V660, 0x0]
Exit stack: [V12, 0x12a, 0x0, S4, S3, S0, V660, 0x0]

================================

Block 0x73e
[0x73e:0x7ad]
---
Predecessors: [0x72d]
Successors: [0x7ae, 0x82e]
---
0x73e JUMPDEST
0x73f PUSH1 0x40
0x741 DUP1
0x742 MLOAD
0x743 SWAP1
0x744 DUP2
0x745 ADD
0x746 PUSH1 0x40
0x748 MSTORE
0x749 CALLVALUE
0x74a DUP2
0x74b MSTORE
0x74c PUSH1 0x1
0x74e PUSH1 0xa0
0x750 PUSH1 0x2
0x752 EXP
0x753 SUB
0x754 CALLER
0x755 AND
0x756 PUSH1 0x20
0x758 DUP3
0x759 ADD
0x75a MSTORE
0x75b SWAP2
0x75c SWAP1
0x75d POP
0x75e DUP2
0x75f MLOAD
0x760 DUP2
0x761 SSTORE
0x762 PUSH1 0x20
0x764 DUP3
0x765 ADD
0x766 MLOAD
0x767 PUSH1 0x1
0x769 SWAP2
0x76a SWAP1
0x76b SWAP2
0x76c ADD
0x76d DUP1
0x76e SLOAD
0x76f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x784 NOT
0x785 AND
0x786 PUSH1 0x1
0x788 PUSH1 0xa0
0x78a PUSH1 0x2
0x78c EXP
0x78d SUB
0x78e SWAP1
0x78f SWAP3
0x790 AND
0x791 SWAP2
0x792 SWAP1
0x793 SWAP2
0x794 OR
0x795 SWAP1
0x796 SSTORE
0x797 POP
0x798 POP
0x799 PUSH1 0x2
0x79b DUP1
0x79c SLOAD
0x79d CALLVALUE
0x79e ADD
0x79f SWAP1
0x7a0 DUP2
0x7a1 SWAP1
0x7a2 SSTORE
0x7a3 PUSH1 0x3
0x7a5 SSTORE
0x7a6 PUSH1 0x8
0x7a8 SLOAD
0x7a9 ISZERO
0x7aa PUSH2 0x82e
0x7ad JUMPI
---
0x73e: JUMPDEST 
0x73f: V662 = 0x40
0x742: V663 = M[0x40]
0x745: V664 = ADD V663 0x40
0x746: V665 = 0x40
0x748: M[0x40] = V664
0x749: V666 = CALLVALUE
0x74b: M[V663] = V666
0x74c: V667 = 0x1
0x74e: V668 = 0xa0
0x750: V669 = 0x2
0x752: V670 = EXP 0x2 0xa0
0x753: V671 = SUB 0x10000000000000000000000000000000000000000 0x1
0x754: V672 = CALLER
0x755: V673 = AND V672 0xffffffffffffffffffffffffffffffffffffffff
0x756: V674 = 0x20
0x759: V675 = ADD V663 0x20
0x75a: M[V675] = V673
0x75f: V676 = M[V663]
0x761: S[V660] = V676
0x762: V677 = 0x20
0x765: V678 = ADD V663 0x20
0x766: V679 = M[V678]
0x767: V680 = 0x1
0x76c: V681 = ADD 0x1 V660
0x76e: V682 = S[V681]
0x76f: V683 = 0xffffffffffffffffffffffffffffffffffffffff
0x784: V684 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x785: V685 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V682
0x786: V686 = 0x1
0x788: V687 = 0xa0
0x78a: V688 = 0x2
0x78c: V689 = EXP 0x2 0xa0
0x78d: V690 = SUB 0x10000000000000000000000000000000000000000 0x1
0x790: V691 = AND V679 0xffffffffffffffffffffffffffffffffffffffff
0x794: V692 = OR V691 V685
0x796: S[V681] = V692
0x799: V693 = 0x2
0x79c: V694 = S[0x2]
0x79d: V695 = CALLVALUE
0x79e: V696 = ADD V695 V694
0x7a2: S[0x2] = V696
0x7a3: V697 = 0x3
0x7a5: S[0x3] = V696
0x7a6: V698 = 0x8
0x7a8: V699 = S[0x8]
0x7a9: V700 = ISZERO V699
0x7aa: V701 = 0x82e
0x7ad: JUMPI 0x82e V700
---
Entry stack: [V12, 0x12a, 0x0, S4, S3, S2, V660, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S4, S3]

================================

Block 0x7ae
[0x7ae:0x7cf]
---
Predecessors: [0x73e]
Successors: [0x7d0, 0x7d1]
---
0x7ae PUSH1 0x9
0x7b0 SLOAD
0x7b1 PUSH1 0x6
0x7b3 SLOAD
0x7b4 PUSH1 0x1
0x7b6 PUSH1 0xa0
0x7b8 PUSH1 0x2
0x7ba EXP
0x7bb SUB
0x7bc SWAP1
0x7bd SWAP2
0x7be AND
0x7bf SWAP1
0x7c0 PUSH4 0xa9059cbb
0x7c5 SWAP1
0x7c6 CALLER
0x7c7 SWAP1
0x7c8 DUP6
0x7c9 DUP2
0x7ca ISZERO
0x7cb ISZERO
0x7cc PUSH2 0x7d1
0x7cf JUMPI
---
0x7ae: V702 = 0x9
0x7b0: V703 = S[0x9]
0x7b1: V704 = 0x6
0x7b3: V705 = S[0x6]
0x7b4: V706 = 0x1
0x7b6: V707 = 0xa0
0x7b8: V708 = 0x2
0x7ba: V709 = EXP 0x2 0xa0
0x7bb: V710 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7be: V711 = AND V703 0xffffffffffffffffffffffffffffffffffffffff
0x7c0: V712 = 0xa9059cbb
0x7c6: V713 = CALLER
0x7ca: V714 = ISZERO V705
0x7cb: V715 = ISZERO V714
0x7cc: V716 = 0x7d1
0x7cf: JUMPI 0x7d1 V715
---
Entry stack: [V12, 0x12a, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V711, 0xa9059cbb, V713, V705, S1]
Exit stack: [V12, 0x12a, 0x0, S1, S0, V711, 0xa9059cbb, V713, V705, S1]

================================

Block 0x7d0
[0x7d0:0x7d0]
---
Predecessors: [0x7ae]
Successors: []
---
0x7d0 INVALID
---
0x7d0: INVALID 
---
Entry stack: [V12, 0x12a, 0x0, S6, S5, V711, 0xa9059cbb, V713, V705, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S6, S5, V711, 0xa9059cbb, V713, V705, S0]

================================

Block 0x7d1
[0x7d1:0x810]
---
Predecessors: [0x7ae, 0xa01]
Successors: [0x811, 0x815]
---
0x7d1 JUMPDEST
0x7d2 DIV
0x7d3 PUSH1 0x40
0x7d5 MLOAD
0x7d6 PUSH1 0xe0
0x7d8 PUSH1 0x2
0x7da EXP
0x7db PUSH4 0xffffffff
0x7e0 DUP6
0x7e1 AND
0x7e2 MUL
0x7e3 DUP2
0x7e4 MSTORE
0x7e5 PUSH1 0x1
0x7e7 PUSH1 0xa0
0x7e9 PUSH1 0x2
0x7eb EXP
0x7ec SUB
0x7ed SWAP1
0x7ee SWAP3
0x7ef AND
0x7f0 PUSH1 0x4
0x7f2 DUP4
0x7f3 ADD
0x7f4 MSTORE
0x7f5 PUSH1 0x24
0x7f7 DUP3
0x7f8 ADD
0x7f9 MSTORE
0x7fa PUSH1 0x44
0x7fc ADD
0x7fd PUSH1 0x0
0x7ff PUSH1 0x40
0x801 MLOAD
0x802 DUP1
0x803 DUP4
0x804 SUB
0x805 DUP2
0x806 PUSH1 0x0
0x808 DUP8
0x809 DUP1
0x80a EXTCODESIZE
0x80b ISZERO
0x80c ISZERO
0x80d PUSH2 0x815
0x810 JUMPI
---
0x7d1: JUMPDEST 
0x7d2: V717 = DIV S0 S1
0x7d3: V718 = 0x40
0x7d5: V719 = M[0x40]
0x7d6: V720 = 0xe0
0x7d8: V721 = 0x2
0x7da: V722 = EXP 0x2 0xe0
0x7db: V723 = 0xffffffff
0x7e1: V724 = AND 0xa9059cbb 0xffffffff
0x7e2: V725 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x7e4: M[V719] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7e5: V726 = 0x1
0x7e7: V727 = 0xa0
0x7e9: V728 = 0x2
0x7eb: V729 = EXP 0x2 0xa0
0x7ec: V730 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ef: V731 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x7f0: V732 = 0x4
0x7f3: V733 = ADD V719 0x4
0x7f4: M[V733] = V731
0x7f5: V734 = 0x24
0x7f8: V735 = ADD V719 0x24
0x7f9: M[V735] = V717
0x7fa: V736 = 0x44
0x7fc: V737 = ADD 0x44 V719
0x7fd: V738 = 0x0
0x7ff: V739 = 0x40
0x801: V740 = M[0x40]
0x804: V741 = SUB V737 V740
0x806: V742 = 0x0
0x80a: V743 = EXTCODESIZE S4
0x80b: V744 = ISZERO V743
0x80c: V745 = ISZERO V744
0x80d: V746 = 0x815
0x810: JUMPI 0x815 V745
---
Entry stack: [V12, 0x12a, 0x0, S6, S5, S4, 0xa9059cbb, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, V737, 0x0, V740, V741, V740, 0x0, S4]
Exit stack: [V12, 0x12a, 0x0, S6, S5, S4, 0xa9059cbb, V737, 0x0, V740, V741, V740, 0x0, S4]

================================

Block 0x811
[0x811:0x814]
---
Predecessors: [0x7d1]
Successors: []
---
0x811 PUSH1 0x0
0x813 DUP1
0x814 REVERT
---
0x811: V747 = 0x0
0x814: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, S10, S9, S8, 0xa9059cbb, V737, 0x0, V740, V741, V740, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S10, S9, S8, 0xa9059cbb, V737, 0x0, V740, V741, V740, 0x0, S0]

================================

Block 0x815
[0x815:0x821]
---
Predecessors: [0x7d1, 0xa23]
Successors: [0x822, 0x826]
---
0x815 JUMPDEST
0x816 PUSH2 0x2c6
0x819 GAS
0x81a SUB
0x81b CALL
0x81c ISZERO
0x81d ISZERO
0x81e PUSH2 0x826
0x821 JUMPI
---
0x815: JUMPDEST 
0x816: V748 = 0x2c6
0x819: V749 = GAS
0x81a: V750 = SUB V749 0x2c6
0x81b: V751 = CALL V750 S0 0x0 S2 S3 S4 0x0
0x81c: V752 = ISZERO V751
0x81d: V753 = ISZERO V752
0x81e: V754 = 0x826
0x821: JUMPI 0x826 V753
---
Entry stack: [V12, 0x12a, 0x0, S10, S9, S8, S7, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S10, S9, S8, S7, S6]

================================

Block 0x822
[0x822:0x825]
---
Predecessors: [0x815]
Successors: []
---
0x822 PUSH1 0x0
0x824 DUP1
0x825 REVERT
---
0x822: V755 = 0x0
0x825: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S4, S3, S2, S1, S0]

================================

Block 0x826
[0x826:0x82d]
---
Predecessors: [0x815, 0xa64]
Successors: [0x8ab]
---
0x826 JUMPDEST
0x827 POP
0x828 POP
0x829 POP
0x82a PUSH2 0x8ab
0x82d JUMP
---
0x826: JUMPDEST 
0x82a: V756 = 0x8ab
0x82d: JUMP 0x8ab
---
Entry stack: [V12, 0x12a, 0x0, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S4, S3]

================================

Block 0x82e
[0x82e:0x850]
---
Predecessors: [0x73e, 0x991]
Successors: [0x851, 0x852]
---
0x82e JUMPDEST
0x82f PUSH1 0x9
0x831 SLOAD
0x832 PUSH1 0x6
0x834 SLOAD
0x835 PUSH1 0x1
0x837 PUSH1 0xa0
0x839 PUSH1 0x2
0x83b EXP
0x83c SUB
0x83d SWAP1
0x83e SWAP2
0x83f AND
0x840 SWAP1
0x841 PUSH4 0x79c65068
0x846 SWAP1
0x847 CALLER
0x848 SWAP1
0x849 DUP6
0x84a DUP2
0x84b ISZERO
0x84c ISZERO
0x84d PUSH2 0x852
0x850 JUMPI
---
0x82e: JUMPDEST 
0x82f: V757 = 0x9
0x831: V758 = S[0x9]
0x832: V759 = 0x6
0x834: V760 = S[0x6]
0x835: V761 = 0x1
0x837: V762 = 0xa0
0x839: V763 = 0x2
0x83b: V764 = EXP 0x2 0xa0
0x83c: V765 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83f: V766 = AND V758 0xffffffffffffffffffffffffffffffffffffffff
0x841: V767 = 0x79c65068
0x847: V768 = CALLER
0x84b: V769 = ISZERO V760
0x84c: V770 = ISZERO V769
0x84d: V771 = 0x852
0x850: JUMPI 0x852 V770
---
Entry stack: [V12, 0x12a, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V766, 0x79c65068, V768, V760, S1]
Exit stack: [V12, 0x12a, 0x0, S1, S0, V766, 0x79c65068, V768, V760, S1]

================================

Block 0x851
[0x851:0x851]
---
Predecessors: [0x82e]
Successors: []
---
0x851 INVALID
---
0x851: INVALID 
---
Entry stack: [V12, 0x12a, 0x0, S6, S5, V766, 0x79c65068, V768, V760, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S6, S5, V766, 0x79c65068, V768, V760, S0]

================================

Block 0x852
[0x852:0x891]
---
Predecessors: [0x82e, 0xa81]
Successors: [0x892, 0x896]
---
0x852 JUMPDEST
0x853 DIV
0x854 PUSH1 0x40
0x856 MLOAD
0x857 PUSH1 0xe0
0x859 PUSH1 0x2
0x85b EXP
0x85c PUSH4 0xffffffff
0x861 DUP6
0x862 AND
0x863 MUL
0x864 DUP2
0x865 MSTORE
0x866 PUSH1 0x1
0x868 PUSH1 0xa0
0x86a PUSH1 0x2
0x86c EXP
0x86d SUB
0x86e SWAP1
0x86f SWAP3
0x870 AND
0x871 PUSH1 0x4
0x873 DUP4
0x874 ADD
0x875 MSTORE
0x876 PUSH1 0x24
0x878 DUP3
0x879 ADD
0x87a MSTORE
0x87b PUSH1 0x44
0x87d ADD
0x87e PUSH1 0x0
0x880 PUSH1 0x40
0x882 MLOAD
0x883 DUP1
0x884 DUP4
0x885 SUB
0x886 DUP2
0x887 PUSH1 0x0
0x889 DUP8
0x88a DUP1
0x88b EXTCODESIZE
0x88c ISZERO
0x88d ISZERO
0x88e PUSH2 0x896
0x891 JUMPI
---
0x852: JUMPDEST 
0x853: V772 = DIV S0 S1
0x854: V773 = 0x40
0x856: V774 = M[0x40]
0x857: V775 = 0xe0
0x859: V776 = 0x2
0x85b: V777 = EXP 0x2 0xe0
0x85c: V778 = 0xffffffff
0x862: V779 = AND 0x79c65068 0xffffffff
0x863: V780 = MUL 0x79c65068 0x100000000000000000000000000000000000000000000000000000000
0x865: M[V774] = 0x79c6506800000000000000000000000000000000000000000000000000000000
0x866: V781 = 0x1
0x868: V782 = 0xa0
0x86a: V783 = 0x2
0x86c: V784 = EXP 0x2 0xa0
0x86d: V785 = SUB 0x10000000000000000000000000000000000000000 0x1
0x870: V786 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x871: V787 = 0x4
0x874: V788 = ADD V774 0x4
0x875: M[V788] = V786
0x876: V789 = 0x24
0x879: V790 = ADD V774 0x24
0x87a: M[V790] = V772
0x87b: V791 = 0x44
0x87d: V792 = ADD 0x44 V774
0x87e: V793 = 0x0
0x880: V794 = 0x40
0x882: V795 = M[0x40]
0x885: V796 = SUB V792 V795
0x887: V797 = 0x0
0x88b: V798 = EXTCODESIZE S4
0x88c: V799 = ISZERO V798
0x88d: V800 = ISZERO V799
0x88e: V801 = 0x896
0x891: JUMPI 0x896 V800
---
Entry stack: [V12, 0x12a, 0x0, S6, S5, S4, 0x79c65068, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, V792, 0x0, V795, V796, V795, 0x0, S4]
Exit stack: [V12, 0x12a, 0x0, S6, S5, S4, 0x79c65068, V792, 0x0, V795, V796, V795, 0x0, S4]

================================

Block 0x892
[0x892:0x895]
---
Predecessors: [0x852]
Successors: []
---
0x892 PUSH1 0x0
0x894 DUP1
0x895 REVERT
---
0x892: V802 = 0x0
0x895: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, S10, S9, S8, 0x79c65068, V792, 0x0, V795, V796, V795, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S10, S9, S8, 0x79c65068, V792, 0x0, V795, V796, V795, 0x0, S0]

================================

Block 0x896
[0x896:0x8a2]
---
Predecessors: [0x852, 0xaa4]
Successors: [0x8a3, 0x8a7]
---
0x896 JUMPDEST
0x897 PUSH2 0x2c6
0x89a GAS
0x89b SUB
0x89c CALL
0x89d ISZERO
0x89e ISZERO
0x89f PUSH2 0x8a7
0x8a2 JUMPI
---
0x896: JUMPDEST 
0x897: V803 = 0x2c6
0x89a: V804 = GAS
0x89b: V805 = SUB V804 0x2c6
0x89c: V806 = CALL V805 S0 0x0 S2 S3 S4 0x0
0x89d: V807 = ISZERO V806
0x89e: V808 = ISZERO V807
0x89f: V809 = 0x8a7
0x8a2: JUMPI 0x8a7 V808
---
Entry stack: [V12, 0x12a, 0x0, S10, S9, S8, S7, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S10, S9, S8, S7, S6]

================================

Block 0x8a3
[0x8a3:0x8a6]
---
Predecessors: [0x896]
Successors: []
---
0x8a3 PUSH1 0x0
0x8a5 DUP1
0x8a6 REVERT
---
0x8a3: V810 = 0x0
0x8a6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12a, 0x0, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S4, S3, S2, S1, S0]

================================

Block 0x8a7
[0x8a7:0x8aa]
---
Predecessors: [0x896, 0xae5]
Successors: [0x8ab]
---
0x8a7 JUMPDEST
0x8a8 POP
0x8a9 POP
0x8aa POP
---
0x8a7: JUMPDEST 
---
Entry stack: [V12, 0x12a, 0x0, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S4, S3]

================================

Block 0x8ab
[0x8ab:0x90d]
---
Predecessors: [0x826, 0x8a7, 0xa75]
Successors: [0x38e]
---
0x8ab JUMPDEST
0x8ac PUSH32 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x8cd CALLER
0x8ce CALLVALUE
0x8cf PUSH1 0x2
0x8d1 SLOAD
0x8d2 PUSH1 0x40
0x8d4 MLOAD
0x8d5 DUP1
0x8d6 DUP5
0x8d7 PUSH1 0x1
0x8d9 PUSH1 0xa0
0x8db PUSH1 0x2
0x8dd EXP
0x8de SUB
0x8df AND
0x8e0 PUSH1 0x1
0x8e2 PUSH1 0xa0
0x8e4 PUSH1 0x2
0x8e6 EXP
0x8e7 SUB
0x8e8 AND
0x8e9 DUP2
0x8ea MSTORE
0x8eb PUSH1 0x20
0x8ed ADD
0x8ee DUP4
0x8ef DUP2
0x8f0 MSTORE
0x8f1 PUSH1 0x20
0x8f3 ADD
0x8f4 DUP3
0x8f5 DUP2
0x8f6 MSTORE
0x8f7 PUSH1 0x20
0x8f9 ADD
0x8fa SWAP4
0x8fb POP
0x8fc POP
0x8fd POP
0x8fe POP
0x8ff PUSH1 0x40
0x901 MLOAD
0x902 DUP1
0x903 SWAP2
0x904 SUB
0x905 SWAP1
0x906 LOG1
0x907 PUSH2 0x90e
0x90a PUSH2 0x38e
0x90d JUMP
---
0x8ab: JUMPDEST 
0x8ac: V811 = 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x8cd: V812 = CALLER
0x8ce: V813 = CALLVALUE
0x8cf: V814 = 0x2
0x8d1: V815 = S[0x2]
0x8d2: V816 = 0x40
0x8d4: V817 = M[0x40]
0x8d7: V818 = 0x1
0x8d9: V819 = 0xa0
0x8db: V820 = 0x2
0x8dd: V821 = EXP 0x2 0xa0
0x8de: V822 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8df: V823 = AND 0xffffffffffffffffffffffffffffffffffffffff V812
0x8e0: V824 = 0x1
0x8e2: V825 = 0xa0
0x8e4: V826 = 0x2
0x8e6: V827 = EXP 0x2 0xa0
0x8e7: V828 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e8: V829 = AND 0xffffffffffffffffffffffffffffffffffffffff V823
0x8ea: M[V817] = V829
0x8eb: V830 = 0x20
0x8ed: V831 = ADD 0x20 V817
0x8f0: M[V831] = V813
0x8f1: V832 = 0x20
0x8f3: V833 = ADD 0x20 V831
0x8f6: M[V833] = V815
0x8f7: V834 = 0x20
0x8f9: V835 = ADD 0x20 V833
0x8ff: V836 = 0x40
0x901: V837 = M[0x40]
0x904: V838 = SUB V835 V837
0x906: LOG V837 V838 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x907: V839 = 0x90e
0x90a: V840 = 0x38e
0x90d: JUMP 0x38e
---
Entry stack: [V12, 0x12a, 0x0, S1, S0]
Stack pops: 0
Stack additions: [0x90e]
Exit stack: [V12, 0x12a, 0x0, S1, S0, 0x90e]

================================

Block 0x90e
[0x90e:0x917]
---
Predecessors: [0x492]
Successors: [0x918]
---
0x90e JUMPDEST
0x90f PUSH1 0x1
0x911 SLOAD
0x912 PUSH1 0x0
0x914 NOT
0x915 ADD
0x916 SWAP3
0x917 POP
---
0x90e: JUMPDEST 
0x90f: V841 = 0x1
0x911: V842 = S[0x1]
0x912: V843 = 0x0
0x914: V844 = NOT 0x0
0x915: V845 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V842
---
Entry stack: [V12, 0x12a, 0x0, S1, S0]
Stack pops: 3
Stack additions: [V845, S1, S0]
Exit stack: [V12, 0x12a, V845, S1, S0]

================================

Block 0x918
[0x918:0x918]
---
Predecessors: [0x90e]
Successors: [0x919]
---
0x918 JUMPDEST
---
0x918: JUMPDEST 
---
Entry stack: [V12, 0x12a, V845, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V845, S1, S0]

================================

Block 0x919
[0x919:0x919]
---
Predecessors: [0x918]
Successors: [0x91a]
---
0x919 JUMPDEST
---
0x919: JUMPDEST 
---
Entry stack: [V12, 0x12a, V845, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V845, S1, S0]

================================

Block 0x91a
[0x91a:0x91a]
---
Predecessors: [0x919]
Successors: [0x91b]
---
0x91a JUMPDEST
---
0x91a: JUMPDEST 
---
Entry stack: [V12, 0x12a, V845, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V845, S1, S0]

================================

Block 0x91b
[0x91b:0x91f]
---
Predecessors: [0x91a]
Successors: [0x12a]
---
0x91b JUMPDEST
0x91c POP
0x91d POP
0x91e SWAP1
0x91f JUMP
---
0x91b: JUMPDEST 
0x91f: JUMP 0x12a
---
Entry stack: [V12, 0x12a, V845, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, V845]

================================

Block 0x920
[0x920:0x929]
---
Predecessors: []
Successors: [0x6d7]
---
0x920 JUMPDEST
0x921 PUSH1 0x0
0x923 DUP1
0x924 DUP1
0x925 DUP1
0x926 PUSH2 0x6d7
0x929 JUMP
---
0x920: JUMPDEST 
0x921: V846 = 0x0
0x926: V847 = 0x6d7
0x929: JUMP 0x6d7
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [0x0, 0x0, 0x0, 0x0]

================================

Block 0x92a
[0x92a:0x939]
---
Predecessors: []
Successors: [0x6e8, 0x93a]
---
0x92a JUMPDEST
0x92b PUSH1 0x0
0x92d SLOAD
0x92e PUSH1 0xff
0x930 AND
0x931 PUSH1 0x3
0x933 DUP2
0x934 GT
0x935 ISZERO
0x936 PUSH2 0x6e8
0x939 JUMPI
---
0x92a: JUMPDEST 
0x92b: V848 = 0x0
0x92d: V849 = S[0x0]
0x92e: V850 = 0xff
0x930: V851 = AND 0xff V849
0x931: V852 = 0x3
0x934: V853 = GT V851 0x3
0x935: V854 = ISZERO V853
0x936: V855 = 0x6e8
0x939: JUMPI 0x6e8 V854
---
Entry stack: []
Stack pops: 0
Stack additions: [V851]
Exit stack: [V851]

================================

Block 0x93a
[0x93a:0x940]
---
Predecessors: [0x92a]
Successors: [0x6f2, 0x941]
---
0x93a INVALID
0x93b JUMPDEST
0x93c EQ
0x93d PUSH2 0x6f2
0x940 JUMPI
---
0x93a: INVALID 
0x93b: JUMPDEST 
0x93c: V856 = EQ S0 S1
0x93d: V857 = 0x6f2
0x940: JUMPI 0x6f2 V856
---
Entry stack: [V851]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x941
[0x941:0x94f]
---
Predecessors: [0x93a]
Successors: [0x701, 0x950]
---
0x941 PUSH1 0x0
0x943 DUP1
0x944 REVERT
0x945 JUMPDEST
0x946 PUSH1 0x6
0x948 SLOAD
0x949 CALLVALUE
0x94a LT
0x94b ISZERO
0x94c PUSH2 0x701
0x94f JUMPI
---
0x941: V858 = 0x0
0x944: REVERT 0x0 0x0
0x945: JUMPDEST 
0x946: V859 = 0x6
0x948: V860 = S[0x6]
0x949: V861 = CALLVALUE
0x94a: V862 = LT V861 V860
0x94b: V863 = ISZERO V862
0x94c: V864 = 0x701
0x94f: JUMPI 0x701 V863
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x950
[0x950:0x95f]
---
Predecessors: [0x941]
Successors: [0x70e, 0x960]
---
0x950 PUSH1 0x0
0x952 DUP1
0x953 REVERT
0x954 JUMPDEST
0x955 PUSH1 0x6
0x957 SLOAD
0x958 CALLVALUE
0x959 DUP2
0x95a ISZERO
0x95b ISZERO
0x95c PUSH2 0x70e
0x95f JUMPI
---
0x950: V865 = 0x0
0x953: REVERT 0x0 0x0
0x954: JUMPDEST 
0x955: V866 = 0x6
0x957: V867 = S[0x6]
0x958: V868 = CALLVALUE
0x95a: V869 = ISZERO V867
0x95b: V870 = ISZERO V869
0x95c: V871 = 0x70e
0x95f: JUMPI 0x70e V870
---
Entry stack: []
Stack pops: 0
Stack additions: [V868, V867]
Exit stack: []

================================

Block 0x960
[0x960:0x967]
---
Predecessors: [0x950]
Successors: [0x719, 0x968]
---
0x960 INVALID
0x961 JUMPDEST
0x962 MOD
0x963 ISZERO
0x964 PUSH2 0x719
0x967 JUMPI
---
0x960: INVALID 
0x961: JUMPDEST 
0x962: V872 = MOD S0 S1
0x963: V873 = ISZERO V872
0x964: V874 = 0x719
0x967: JUMPI 0x719 V873
---
Entry stack: [V867, V868]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x968
[0x968:0x97f]
---
Predecessors: [0x960]
Successors: [0xbeb]
---
0x968 PUSH1 0x0
0x96a DUP1
0x96b REVERT
0x96c JUMPDEST
0x96d PUSH1 0x1
0x96f DUP1
0x970 SLOAD
0x971 CALLVALUE
0x972 SWAP4
0x973 POP
0x974 DUP1
0x975 DUP3
0x976 ADD
0x977 PUSH2 0x72d
0x97a DUP4
0x97b DUP3
0x97c PUSH2 0xbeb
0x97f JUMP
---
0x968: V875 = 0x0
0x96b: REVERT 0x0 0x0
0x96c: JUMPDEST 
0x96d: V876 = 0x1
0x970: V877 = S[0x1]
0x971: V878 = CALLVALUE
0x976: V879 = ADD 0x1 V877
0x977: V880 = 0x72d
0x97c: V881 = 0xbeb
0x97f: JUMP 0xbeb
---
Entry stack: []
Stack pops: 0
Stack additions: [V879, 0x1, 0x72d, V879, V877, 0x1, S0, V878]
Exit stack: []

================================

Block 0x980
[0x980:0x990]
---
Predecessors: []
Successors: [0x991]
---
0x980 JUMPDEST
0x981 SWAP2
0x982 PUSH1 0x0
0x984 MSTORE
0x985 PUSH1 0x20
0x987 PUSH1 0x0
0x989 SHA3
0x98a SWAP1
0x98b PUSH1 0x2
0x98d MUL
0x98e ADD
0x98f PUSH1 0x0
---
0x980: JUMPDEST 
0x982: V882 = 0x0
0x984: M[0x0] = S2
0x985: V883 = 0x20
0x987: V884 = 0x0
0x989: V885 = SHA3 0x0 0x20
0x98b: V886 = 0x2
0x98d: V887 = MUL 0x2 S1
0x98e: V888 = ADD V887 V885
0x98f: V889 = 0x0
---
Entry stack: []
Stack pops: 3
Stack additions: [S0, V888, 0x0]
Exit stack: [S0, V888, 0x0]

================================

Block 0x991
[0x991:0xa00]
---
Predecessors: [0x980]
Successors: [0x82e, 0xa01]
---
0x991 JUMPDEST
0x992 PUSH1 0x40
0x994 DUP1
0x995 MLOAD
0x996 SWAP1
0x997 DUP2
0x998 ADD
0x999 PUSH1 0x40
0x99b MSTORE
0x99c CALLVALUE
0x99d DUP2
0x99e MSTORE
0x99f PUSH1 0x1
0x9a1 PUSH1 0xa0
0x9a3 PUSH1 0x2
0x9a5 EXP
0x9a6 SUB
0x9a7 CALLER
0x9a8 AND
0x9a9 PUSH1 0x20
0x9ab DUP3
0x9ac ADD
0x9ad MSTORE
0x9ae SWAP2
0x9af SWAP1
0x9b0 POP
0x9b1 DUP2
0x9b2 MLOAD
0x9b3 DUP2
0x9b4 SSTORE
0x9b5 PUSH1 0x20
0x9b7 DUP3
0x9b8 ADD
0x9b9 MLOAD
0x9ba PUSH1 0x1
0x9bc SWAP2
0x9bd SWAP1
0x9be SWAP2
0x9bf ADD
0x9c0 DUP1
0x9c1 SLOAD
0x9c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d7 NOT
0x9d8 AND
0x9d9 PUSH1 0x1
0x9db PUSH1 0xa0
0x9dd PUSH1 0x2
0x9df EXP
0x9e0 SUB
0x9e1 SWAP1
0x9e2 SWAP3
0x9e3 AND
0x9e4 SWAP2
0x9e5 SWAP1
0x9e6 SWAP2
0x9e7 OR
0x9e8 SWAP1
0x9e9 SSTORE
0x9ea POP
0x9eb POP
0x9ec PUSH1 0x2
0x9ee DUP1
0x9ef SLOAD
0x9f0 CALLVALUE
0x9f1 ADD
0x9f2 SWAP1
0x9f3 DUP2
0x9f4 SWAP1
0x9f5 SSTORE
0x9f6 PUSH1 0x3
0x9f8 SSTORE
0x9f9 PUSH1 0x8
0x9fb SLOAD
0x9fc ISZERO
0x9fd PUSH2 0x82e
0xa00 JUMPI
---
0x991: JUMPDEST 
0x992: V890 = 0x40
0x995: V891 = M[0x40]
0x998: V892 = ADD V891 0x40
0x999: V893 = 0x40
0x99b: M[0x40] = V892
0x99c: V894 = CALLVALUE
0x99e: M[V891] = V894
0x99f: V895 = 0x1
0x9a1: V896 = 0xa0
0x9a3: V897 = 0x2
0x9a5: V898 = EXP 0x2 0xa0
0x9a6: V899 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a7: V900 = CALLER
0x9a8: V901 = AND V900 0xffffffffffffffffffffffffffffffffffffffff
0x9a9: V902 = 0x20
0x9ac: V903 = ADD V891 0x20
0x9ad: M[V903] = V901
0x9b2: V904 = M[V891]
0x9b4: S[V888] = V904
0x9b5: V905 = 0x20
0x9b8: V906 = ADD V891 0x20
0x9b9: V907 = M[V906]
0x9ba: V908 = 0x1
0x9bf: V909 = ADD 0x1 V888
0x9c1: V910 = S[V909]
0x9c2: V911 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d7: V912 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9d8: V913 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V910
0x9d9: V914 = 0x1
0x9db: V915 = 0xa0
0x9dd: V916 = 0x2
0x9df: V917 = EXP 0x2 0xa0
0x9e0: V918 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e3: V919 = AND V907 0xffffffffffffffffffffffffffffffffffffffff
0x9e7: V920 = OR V919 V913
0x9e9: S[V909] = V920
0x9ec: V921 = 0x2
0x9ef: V922 = S[0x2]
0x9f0: V923 = CALLVALUE
0x9f1: V924 = ADD V923 V922
0x9f5: S[0x2] = V924
0x9f6: V925 = 0x3
0x9f8: S[0x3] = V924
0x9f9: V926 = 0x8
0x9fb: V927 = S[0x8]
0x9fc: V928 = ISZERO V927
0x9fd: V929 = 0x82e
0xa00: JUMPI 0x82e V928
---
Entry stack: [S2, V888, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xa01
[0xa01:0xa22]
---
Predecessors: [0x991]
Successors: [0x7d1, 0xa23]
---
0xa01 PUSH1 0x9
0xa03 SLOAD
0xa04 PUSH1 0x6
0xa06 SLOAD
0xa07 PUSH1 0x1
0xa09 PUSH1 0xa0
0xa0b PUSH1 0x2
0xa0d EXP
0xa0e SUB
0xa0f SWAP1
0xa10 SWAP2
0xa11 AND
0xa12 SWAP1
0xa13 PUSH4 0xa9059cbb
0xa18 SWAP1
0xa19 CALLER
0xa1a SWAP1
0xa1b DUP6
0xa1c DUP2
0xa1d ISZERO
0xa1e ISZERO
0xa1f PUSH2 0x7d1
0xa22 JUMPI
---
0xa01: V930 = 0x9
0xa03: V931 = S[0x9]
0xa04: V932 = 0x6
0xa06: V933 = S[0x6]
0xa07: V934 = 0x1
0xa09: V935 = 0xa0
0xa0b: V936 = 0x2
0xa0d: V937 = EXP 0x2 0xa0
0xa0e: V938 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa11: V939 = AND V931 0xffffffffffffffffffffffffffffffffffffffff
0xa13: V940 = 0xa9059cbb
0xa19: V941 = CALLER
0xa1d: V942 = ISZERO V933
0xa1e: V943 = ISZERO V942
0xa1f: V944 = 0x7d1
0xa22: JUMPI 0x7d1 V943
---
Entry stack: []
Stack pops: 2
Stack additions: [S1, S0, V939, 0xa9059cbb, V941, V933, S1]
Exit stack: [S1, S0, V939, 0xa9059cbb, V941, V933, S1]

================================

Block 0xa23
[0xa23:0xa63]
---
Predecessors: [0xa01]
Successors: [0x815, 0xa64]
---
0xa23 INVALID
0xa24 JUMPDEST
0xa25 DIV
0xa26 PUSH1 0x40
0xa28 MLOAD
0xa29 PUSH1 0xe0
0xa2b PUSH1 0x2
0xa2d EXP
0xa2e PUSH4 0xffffffff
0xa33 DUP6
0xa34 AND
0xa35 MUL
0xa36 DUP2
0xa37 MSTORE
0xa38 PUSH1 0x1
0xa3a PUSH1 0xa0
0xa3c PUSH1 0x2
0xa3e EXP
0xa3f SUB
0xa40 SWAP1
0xa41 SWAP3
0xa42 AND
0xa43 PUSH1 0x4
0xa45 DUP4
0xa46 ADD
0xa47 MSTORE
0xa48 PUSH1 0x24
0xa4a DUP3
0xa4b ADD
0xa4c MSTORE
0xa4d PUSH1 0x44
0xa4f ADD
0xa50 PUSH1 0x0
0xa52 PUSH1 0x40
0xa54 MLOAD
0xa55 DUP1
0xa56 DUP4
0xa57 SUB
0xa58 DUP2
0xa59 PUSH1 0x0
0xa5b DUP8
0xa5c DUP1
0xa5d EXTCODESIZE
0xa5e ISZERO
0xa5f ISZERO
0xa60 PUSH2 0x815
0xa63 JUMPI
---
0xa23: INVALID 
0xa24: JUMPDEST 
0xa25: V945 = DIV S0 S1
0xa26: V946 = 0x40
0xa28: V947 = M[0x40]
0xa29: V948 = 0xe0
0xa2b: V949 = 0x2
0xa2d: V950 = EXP 0x2 0xe0
0xa2e: V951 = 0xffffffff
0xa34: V952 = AND S3 0xffffffff
0xa35: V953 = MUL V952 0x100000000000000000000000000000000000000000000000000000000
0xa37: M[V947] = V953
0xa38: V954 = 0x1
0xa3a: V955 = 0xa0
0xa3c: V956 = 0x2
0xa3e: V957 = EXP 0x2 0xa0
0xa3f: V958 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa42: V959 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xa43: V960 = 0x4
0xa46: V961 = ADD V947 0x4
0xa47: M[V961] = V959
0xa48: V962 = 0x24
0xa4b: V963 = ADD V947 0x24
0xa4c: M[V963] = V945
0xa4d: V964 = 0x44
0xa4f: V965 = ADD 0x44 V947
0xa50: V966 = 0x0
0xa52: V967 = 0x40
0xa54: V968 = M[0x40]
0xa57: V969 = SUB V965 V968
0xa59: V970 = 0x0
0xa5d: V971 = EXTCODESIZE S4
0xa5e: V972 = ISZERO V971
0xa5f: V973 = ISZERO V972
0xa60: V974 = 0x815
0xa63: JUMPI 0x815 V973
---
Entry stack: [S6, S5, V939, 0xa9059cbb, V941, V933, S0]
Stack pops: 0
Stack additions: [S4, 0x0, V968, V969, V968, 0x0, V965, S3, S4]
Exit stack: []

================================

Block 0xa64
[0xa64:0xa74]
---
Predecessors: [0xa23]
Successors: [0x826, 0xa75]
---
0xa64 PUSH1 0x0
0xa66 DUP1
0xa67 REVERT
0xa68 JUMPDEST
0xa69 PUSH2 0x2c6
0xa6c GAS
0xa6d SUB
0xa6e CALL
0xa6f ISZERO
0xa70 ISZERO
0xa71 PUSH2 0x826
0xa74 JUMPI
---
0xa64: V975 = 0x0
0xa67: REVERT 0x0 0x0
0xa68: JUMPDEST 
0xa69: V976 = 0x2c6
0xa6c: V977 = GAS
0xa6d: V978 = SUB V977 0x2c6
0xa6e: V979 = CALL V978 S0 S1 S2 S3 S4 S5
0xa6f: V980 = ISZERO V979
0xa70: V981 = ISZERO V980
0xa71: V982 = 0x826
0xa74: JUMPI 0x826 V981
---
Entry stack: [S8, S7, V965, 0x0, V968, V969, V968, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa75
[0xa75:0xa80]
---
Predecessors: [0xa64]
Successors: [0x8ab]
---
0xa75 PUSH1 0x0
0xa77 DUP1
0xa78 REVERT
0xa79 JUMPDEST
0xa7a POP
0xa7b POP
0xa7c POP
0xa7d PUSH2 0x8ab
0xa80 JUMP
---
0xa75: V983 = 0x0
0xa78: REVERT 0x0 0x0
0xa79: JUMPDEST 
0xa7d: V984 = 0x8ab
0xa80: JUMP 0x8ab
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa81
[0xa81:0xaa3]
---
Predecessors: []
Successors: [0x852, 0xaa4]
---
0xa81 JUMPDEST
0xa82 PUSH1 0x9
0xa84 SLOAD
0xa85 PUSH1 0x6
0xa87 SLOAD
0xa88 PUSH1 0x1
0xa8a PUSH1 0xa0
0xa8c PUSH1 0x2
0xa8e EXP
0xa8f SUB
0xa90 SWAP1
0xa91 SWAP2
0xa92 AND
0xa93 SWAP1
0xa94 PUSH4 0x79c65068
0xa99 SWAP1
0xa9a CALLER
0xa9b SWAP1
0xa9c DUP6
0xa9d DUP2
0xa9e ISZERO
0xa9f ISZERO
0xaa0 PUSH2 0x852
0xaa3 JUMPI
---
0xa81: JUMPDEST 
0xa82: V985 = 0x9
0xa84: V986 = S[0x9]
0xa85: V987 = 0x6
0xa87: V988 = S[0x6]
0xa88: V989 = 0x1
0xa8a: V990 = 0xa0
0xa8c: V991 = 0x2
0xa8e: V992 = EXP 0x2 0xa0
0xa8f: V993 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa92: V994 = AND V986 0xffffffffffffffffffffffffffffffffffffffff
0xa94: V995 = 0x79c65068
0xa9a: V996 = CALLER
0xa9e: V997 = ISZERO V988
0xa9f: V998 = ISZERO V997
0xaa0: V999 = 0x852
0xaa3: JUMPI 0x852 V998
---
Entry stack: []
Stack pops: 2
Stack additions: [S1, S0, V994, 0x79c65068, V996, V988, S1]
Exit stack: [S1, S0, V994, 0x79c65068, V996, V988, S1]

================================

Block 0xaa4
[0xaa4:0xae4]
---
Predecessors: [0xa81]
Successors: [0x896, 0xae5]
---
0xaa4 INVALID
0xaa5 JUMPDEST
0xaa6 DIV
0xaa7 PUSH1 0x40
0xaa9 MLOAD
0xaaa PUSH1 0xe0
0xaac PUSH1 0x2
0xaae EXP
0xaaf PUSH4 0xffffffff
0xab4 DUP6
0xab5 AND
0xab6 MUL
0xab7 DUP2
0xab8 MSTORE
0xab9 PUSH1 0x1
0xabb PUSH1 0xa0
0xabd PUSH1 0x2
0xabf EXP
0xac0 SUB
0xac1 SWAP1
0xac2 SWAP3
0xac3 AND
0xac4 PUSH1 0x4
0xac6 DUP4
0xac7 ADD
0xac8 MSTORE
0xac9 PUSH1 0x24
0xacb DUP3
0xacc ADD
0xacd MSTORE
0xace PUSH1 0x44
0xad0 ADD
0xad1 PUSH1 0x0
0xad3 PUSH1 0x40
0xad5 MLOAD
0xad6 DUP1
0xad7 DUP4
0xad8 SUB
0xad9 DUP2
0xada PUSH1 0x0
0xadc DUP8
0xadd DUP1
0xade EXTCODESIZE
0xadf ISZERO
0xae0 ISZERO
0xae1 PUSH2 0x896
0xae4 JUMPI
---
0xaa4: INVALID 
0xaa5: JUMPDEST 
0xaa6: V1000 = DIV S0 S1
0xaa7: V1001 = 0x40
0xaa9: V1002 = M[0x40]
0xaaa: V1003 = 0xe0
0xaac: V1004 = 0x2
0xaae: V1005 = EXP 0x2 0xe0
0xaaf: V1006 = 0xffffffff
0xab5: V1007 = AND S3 0xffffffff
0xab6: V1008 = MUL V1007 0x100000000000000000000000000000000000000000000000000000000
0xab8: M[V1002] = V1008
0xab9: V1009 = 0x1
0xabb: V1010 = 0xa0
0xabd: V1011 = 0x2
0xabf: V1012 = EXP 0x2 0xa0
0xac0: V1013 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac3: V1014 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xac4: V1015 = 0x4
0xac7: V1016 = ADD V1002 0x4
0xac8: M[V1016] = V1014
0xac9: V1017 = 0x24
0xacc: V1018 = ADD V1002 0x24
0xacd: M[V1018] = V1000
0xace: V1019 = 0x44
0xad0: V1020 = ADD 0x44 V1002
0xad1: V1021 = 0x0
0xad3: V1022 = 0x40
0xad5: V1023 = M[0x40]
0xad8: V1024 = SUB V1020 V1023
0xada: V1025 = 0x0
0xade: V1026 = EXTCODESIZE S4
0xadf: V1027 = ISZERO V1026
0xae0: V1028 = ISZERO V1027
0xae1: V1029 = 0x896
0xae4: JUMPI 0x896 V1028
---
Entry stack: [S6, S5, V994, 0x79c65068, V996, V988, S0]
Stack pops: 0
Stack additions: [S4, 0x0, V1023, V1024, V1023, 0x0, V1020, S3, S4]
Exit stack: []

================================

Block 0xae5
[0xae5:0xaf5]
---
Predecessors: [0xaa4]
Successors: [0x8a7, 0xaf6]
---
0xae5 PUSH1 0x0
0xae7 DUP1
0xae8 REVERT
0xae9 JUMPDEST
0xaea PUSH2 0x2c6
0xaed GAS
0xaee SUB
0xaef CALL
0xaf0 ISZERO
0xaf1 ISZERO
0xaf2 PUSH2 0x8a7
0xaf5 JUMPI
---
0xae5: V1030 = 0x0
0xae8: REVERT 0x0 0x0
0xae9: JUMPDEST 
0xaea: V1031 = 0x2c6
0xaed: V1032 = GAS
0xaee: V1033 = SUB V1032 0x2c6
0xaef: V1034 = CALL V1033 S0 S1 S2 S3 S4 S5
0xaf0: V1035 = ISZERO V1034
0xaf1: V1036 = ISZERO V1035
0xaf2: V1037 = 0x8a7
0xaf5: JUMPI 0x8a7 V1036
---
Entry stack: [S8, S7, V1020, 0x0, V1023, V1024, V1023, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaf6
[0xaf6:0xafd]
---
Predecessors: [0xae5]
Successors: [0xafe]
---
0xaf6 PUSH1 0x0
0xaf8 DUP1
0xaf9 REVERT
0xafa JUMPDEST
0xafb POP
0xafc POP
0xafd POP
---
0xaf6: V1038 = 0x0
0xaf9: REVERT 0x0 0x0
0xafa: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xafe
[0xafe:0xb60]
---
Predecessors: [0xaf6]
Successors: [0x38e]
---
0xafe JUMPDEST
0xaff PUSH32 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0xb20 CALLER
0xb21 CALLVALUE
0xb22 PUSH1 0x2
0xb24 SLOAD
0xb25 PUSH1 0x40
0xb27 MLOAD
0xb28 DUP1
0xb29 DUP5
0xb2a PUSH1 0x1
0xb2c PUSH1 0xa0
0xb2e PUSH1 0x2
0xb30 EXP
0xb31 SUB
0xb32 AND
0xb33 PUSH1 0x1
0xb35 PUSH1 0xa0
0xb37 PUSH1 0x2
0xb39 EXP
0xb3a SUB
0xb3b AND
0xb3c DUP2
0xb3d MSTORE
0xb3e PUSH1 0x20
0xb40 ADD
0xb41 DUP4
0xb42 DUP2
0xb43 MSTORE
0xb44 PUSH1 0x20
0xb46 ADD
0xb47 DUP3
0xb48 DUP2
0xb49 MSTORE
0xb4a PUSH1 0x20
0xb4c ADD
0xb4d SWAP4
0xb4e POP
0xb4f POP
0xb50 POP
0xb51 POP
0xb52 PUSH1 0x40
0xb54 MLOAD
0xb55 DUP1
0xb56 SWAP2
0xb57 SUB
0xb58 SWAP1
0xb59 LOG1
0xb5a PUSH2 0x90e
0xb5d PUSH2 0x38e
0xb60 JUMP
---
0xafe: JUMPDEST 
0xaff: V1039 = 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0xb20: V1040 = CALLER
0xb21: V1041 = CALLVALUE
0xb22: V1042 = 0x2
0xb24: V1043 = S[0x2]
0xb25: V1044 = 0x40
0xb27: V1045 = M[0x40]
0xb2a: V1046 = 0x1
0xb2c: V1047 = 0xa0
0xb2e: V1048 = 0x2
0xb30: V1049 = EXP 0x2 0xa0
0xb31: V1050 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb32: V1051 = AND 0xffffffffffffffffffffffffffffffffffffffff V1040
0xb33: V1052 = 0x1
0xb35: V1053 = 0xa0
0xb37: V1054 = 0x2
0xb39: V1055 = EXP 0x2 0xa0
0xb3a: V1056 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3b: V1057 = AND 0xffffffffffffffffffffffffffffffffffffffff V1051
0xb3d: M[V1045] = V1057
0xb3e: V1058 = 0x20
0xb40: V1059 = ADD 0x20 V1045
0xb43: M[V1059] = V1041
0xb44: V1060 = 0x20
0xb46: V1061 = ADD 0x20 V1059
0xb49: M[V1061] = V1043
0xb4a: V1062 = 0x20
0xb4c: V1063 = ADD 0x20 V1061
0xb52: V1064 = 0x40
0xb54: V1065 = M[0x40]
0xb57: V1066 = SUB V1063 V1065
0xb59: LOG V1065 V1066 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0xb5a: V1067 = 0x90e
0xb5d: V1068 = 0x38e
0xb60: JUMP 0x38e
---
Entry stack: []
Stack pops: 0
Stack additions: [0x90e]
Exit stack: [0x90e]

================================

Block 0xb61
[0xb61:0xb6a]
---
Predecessors: []
Successors: [0xb6b]
---
0xb61 JUMPDEST
0xb62 PUSH1 0x1
0xb64 SLOAD
0xb65 PUSH1 0x0
0xb67 NOT
0xb68 ADD
0xb69 SWAP3
0xb6a POP
---
0xb61: JUMPDEST 
0xb62: V1069 = 0x1
0xb64: V1070 = S[0x1]
0xb65: V1071 = 0x0
0xb67: V1072 = NOT 0x0
0xb68: V1073 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1070
---
Entry stack: []
Stack pops: 3
Stack additions: [V1073, S1, S0]
Exit stack: [V1073, S1, S0]

================================

Block 0xb6b
[0xb6b:0xb6b]
---
Predecessors: [0xb61]
Successors: [0xb6c]
---
0xb6b JUMPDEST
---
0xb6b: JUMPDEST 
---
Entry stack: [V1073, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V1073, S1, S0]

================================

Block 0xb6c
[0xb6c:0xb6c]
---
Predecessors: [0xb6b]
Successors: [0xb6d]
---
0xb6c JUMPDEST
---
0xb6c: JUMPDEST 
---
Entry stack: [V1073, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V1073, S1, S0]

================================

Block 0xb6d
[0xb6d:0xb6d]
---
Predecessors: [0xb6c]
Successors: [0xb6e]
---
0xb6d JUMPDEST
---
0xb6d: JUMPDEST 
---
Entry stack: [V1073, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V1073, S1, S0]

================================

Block 0xb6e
[0xb6e:0xb72]
---
Predecessors: [0xb6d]
Successors: []
Has unresolved jump.
---
0xb6e JUMPDEST
0xb6f POP
0xb70 POP
0xb71 SWAP1
0xb72 JUMP
---
0xb6e: JUMPDEST 
0xb72: JUMP S3
---
Entry stack: [V1073, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V1073]

================================

Block 0xb73
[0xb73:0xb89]
---
Predecessors: [0x33f]
Successors: [0xb8a, 0xb8e]
---
0xb73 JUMPDEST
0xb74 PUSH1 0xa
0xb76 SLOAD
0xb77 CALLER
0xb78 PUSH1 0x1
0xb7a PUSH1 0xa0
0xb7c PUSH1 0x2
0xb7e EXP
0xb7f SUB
0xb80 SWAP1
0xb81 DUP2
0xb82 AND
0xb83 SWAP2
0xb84 AND
0xb85 EQ
0xb86 PUSH2 0xb8e
0xb89 JUMPI
---
0xb73: JUMPDEST 
0xb74: V1074 = 0xa
0xb76: V1075 = S[0xa]
0xb77: V1076 = CALLER
0xb78: V1077 = 0x1
0xb7a: V1078 = 0xa0
0xb7c: V1079 = 0x2
0xb7e: V1080 = EXP 0x2 0xa0
0xb7f: V1081 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb82: V1082 = AND 0xffffffffffffffffffffffffffffffffffffffff V1076
0xb84: V1083 = AND V1075 0xffffffffffffffffffffffffffffffffffffffff
0xb85: V1084 = EQ V1083 V1082
0xb86: V1085 = 0xb8e
0xb89: JUMPI 0xb8e V1084
---
Entry stack: [V12, 0xe6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe6]

================================

Block 0xb8a
[0xb8a:0xb8d]
---
Predecessors: [0xb73]
Successors: []
---
0xb8a PUSH1 0x0
0xb8c DUP1
0xb8d REVERT
---
0xb8a: V1086 = 0x0
0xb8d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe6]

================================

Block 0xb8e
[0xb8e:0xb90]
---
Predecessors: [0xb73]
Successors: [0xb91]
---
0xb8e JUMPDEST
0xb8f PUSH1 0x1
---
0xb8e: JUMPDEST 
0xb8f: V1087 = 0x1
---
Entry stack: [V12, 0xe6]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0xe6, 0x1]

================================

Block 0xb91
[0xb91:0xba0]
---
Predecessors: [0xb8e]
Successors: [0xba1, 0xba2]
---
0xb91 JUMPDEST
0xb92 PUSH1 0x0
0xb94 SLOAD
0xb95 PUSH1 0xff
0xb97 AND
0xb98 PUSH1 0x3
0xb9a DUP2
0xb9b GT
0xb9c ISZERO
0xb9d PUSH2 0xba2
0xba0 JUMPI
---
0xb91: JUMPDEST 
0xb92: V1088 = 0x0
0xb94: V1089 = S[0x0]
0xb95: V1090 = 0xff
0xb97: V1091 = AND 0xff V1089
0xb98: V1092 = 0x3
0xb9b: V1093 = GT V1091 0x3
0xb9c: V1094 = ISZERO V1093
0xb9d: V1095 = 0xba2
0xba0: JUMPI 0xba2 V1094
---
Entry stack: [V12, 0xe6, 0x1]
Stack pops: 0
Stack additions: [V1091]
Exit stack: [V12, 0xe6, 0x1, V1091]

================================

Block 0xba1
[0xba1:0xba1]
---
Predecessors: [0xb91]
Successors: []
---
0xba1 INVALID
---
0xba1: INVALID 
---
Entry stack: [V12, 0xe6, 0x1, V1091]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe6, 0x1, V1091]

================================

Block 0xba2
[0xba2:0xba8]
---
Predecessors: [0xb91]
Successors: [0xba9, 0xbbf]
---
0xba2 JUMPDEST
0xba3 EQ
0xba4 DUP1
0xba5 PUSH2 0xbbf
0xba8 JUMPI
---
0xba2: JUMPDEST 
0xba3: V1096 = EQ V1091 0x1
0xba5: V1097 = 0xbbf
0xba8: JUMPI 0xbbf V1096
---
Entry stack: [V12, 0xe6, 0x1, V1091]
Stack pops: 2
Stack additions: [V1096]
Exit stack: [V12, 0xe6, V1096]

================================

Block 0xba9
[0xba9:0xbab]
---
Predecessors: [0xba2]
Successors: [0xbac]
---
0xba9 POP
0xbaa PUSH1 0x2
---
0xbaa: V1098 = 0x2
---
Entry stack: [V12, 0xe6, V1096]
Stack pops: 1
Stack additions: [0x2]
Exit stack: [V12, 0xe6, 0x2]

================================

Block 0xbac
[0xbac:0xbbb]
---
Predecessors: [0xba9]
Successors: [0xbbc, 0xbbd]
---
0xbac JUMPDEST
0xbad PUSH1 0x0
0xbaf SLOAD
0xbb0 PUSH1 0xff
0xbb2 AND
0xbb3 PUSH1 0x3
0xbb5 DUP2
0xbb6 GT
0xbb7 ISZERO
0xbb8 PUSH2 0xbbd
0xbbb JUMPI
---
0xbac: JUMPDEST 
0xbad: V1099 = 0x0
0xbaf: V1100 = S[0x0]
0xbb0: V1101 = 0xff
0xbb2: V1102 = AND 0xff V1100
0xbb3: V1103 = 0x3
0xbb6: V1104 = GT V1102 0x3
0xbb7: V1105 = ISZERO V1104
0xbb8: V1106 = 0xbbd
0xbbb: JUMPI 0xbbd V1105
---
Entry stack: [V12, 0xe6, 0x2]
Stack pops: 0
Stack additions: [V1102]
Exit stack: [V12, 0xe6, 0x2, V1102]

================================

Block 0xbbc
[0xbbc:0xbbc]
---
Predecessors: [0xbac]
Successors: []
---
0xbbc INVALID
---
0xbbc: INVALID 
---
Entry stack: [V12, 0xe6, 0x2, V1102]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe6, 0x2, V1102]

================================

Block 0xbbd
[0xbbd:0xbbe]
---
Predecessors: [0xbac]
Successors: [0xbbf]
---
0xbbd JUMPDEST
0xbbe EQ
---
0xbbd: JUMPDEST 
0xbbe: V1107 = EQ V1102 0x2
---
Entry stack: [V12, 0xe6, 0x2, V1102]
Stack pops: 2
Stack additions: [V1107]
Exit stack: [V12, 0xe6, V1107]

================================

Block 0xbbf
[0xbbf:0xbc5]
---
Predecessors: [0xba2, 0xbbd]
Successors: [0xbc6, 0xbd0]
---
0xbbf JUMPDEST
0xbc0 DUP1
0xbc1 ISZERO
0xbc2 PUSH2 0xbd0
0xbc5 JUMPI
---
0xbbf: JUMPDEST 
0xbc1: V1108 = ISZERO S0
0xbc2: V1109 = 0xbd0
0xbc5: JUMPI 0xbd0 V1108
---
Entry stack: [V12, 0xe6, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xe6, S0]

================================

Block 0xbc6
[0xbc6:0xbcf]
---
Predecessors: [0xbbf]
Successors: [0xbd0]
---
0xbc6 POP
0xbc7 TIMESTAMP
0xbc8 PUSH1 0x5
0xbca SLOAD
0xbcb PUSH2 0xe10
0xbce ADD
0xbcf LT
---
0xbc7: V1110 = TIMESTAMP
0xbc8: V1111 = 0x5
0xbca: V1112 = S[0x5]
0xbcb: V1113 = 0xe10
0xbce: V1114 = ADD 0xe10 V1112
0xbcf: V1115 = LT V1114 V1110
---
Entry stack: [V12, 0xe6, S0]
Stack pops: 1
Stack additions: [V1115]
Exit stack: [V12, 0xe6, V1115]

================================

Block 0xbd0
[0xbd0:0xbd6]
---
Predecessors: [0xbbf, 0xbc6]
Successors: [0xbd7, 0xbdb]
---
0xbd0 JUMPDEST
0xbd1 ISZERO
0xbd2 ISZERO
0xbd3 PUSH2 0xbdb
0xbd6 JUMPI
---
0xbd0: JUMPDEST 
0xbd1: V1116 = ISZERO S0
0xbd2: V1117 = ISZERO V1116
0xbd3: V1118 = 0xbdb
0xbd6: JUMPI 0xbdb V1117
---
Entry stack: [V12, 0xe6, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xe6]

================================

Block 0xbd7
[0xbd7:0xbda]
---
Predecessors: [0xbd0]
Successors: []
---
0xbd7 PUSH1 0x0
0xbd9 DUP1
0xbda REVERT
---
0xbd7: V1119 = 0x0
0xbda: REVERT 0x0 0x0
---
Entry stack: [V12, 0xe6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe6]

================================

Block 0xbdb
[0xbdb:0xbe6]
---
Predecessors: [0xbd0]
Successors: []
---
0xbdb JUMPDEST
0xbdc CALLER
0xbdd PUSH1 0x1
0xbdf PUSH1 0xa0
0xbe1 PUSH1 0x2
0xbe3 EXP
0xbe4 SUB
0xbe5 AND
0xbe6 SELFDESTRUCT
---
0xbdb: JUMPDEST 
0xbdc: V1120 = CALLER
0xbdd: V1121 = 0x1
0xbdf: V1122 = 0xa0
0xbe1: V1123 = 0x2
0xbe3: V1124 = EXP 0x2 0xa0
0xbe4: V1125 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe5: V1126 = AND 0xffffffffffffffffffffffffffffffffffffffff V1120
0xbe6: SELFDESTRUCT V1126
---
Entry stack: [V12, 0xe6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xe6]

================================

Block 0xbe7
[0xbe7:0xbe7]
---
Predecessors: []
Successors: [0xbe8]
---
0xbe7 JUMPDEST
---
0xbe7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbe8
[0xbe8:0xbe8]
---
Predecessors: [0xbe7]
Successors: [0xbe9]
---
0xbe8 JUMPDEST
---
0xbe8: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbe9
[0xbe9:0xbea]
---
Predecessors: [0xbe8]
Successors: []
Has unresolved jump.
---
0xbe9 JUMPDEST
0xbea JUMP
---
0xbe9: JUMPDEST 
0xbea: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xbeb
[0xbeb:0xbf8]
---
Predecessors: [0x719, 0x968]
Successors: [0xbf9, 0xc17]
---
0xbeb JUMPDEST
0xbec DUP2
0xbed SLOAD
0xbee DUP2
0xbef DUP4
0xbf0 SSTORE
0xbf1 DUP2
0xbf2 DUP2
0xbf3 ISZERO
0xbf4 GT
0xbf5 PUSH2 0xc17
0xbf8 JUMPI
---
0xbeb: JUMPDEST 
0xbed: V1127 = S[0x1]
0xbf0: S[0x1] = S0
0xbf3: V1128 = ISZERO V1127
0xbf4: V1129 = GT V1128 S0
0xbf5: V1130 = 0xc17
0xbf8: JUMPI 0xc17 V1129
---
Entry stack: [V12, 0x12a, 0x0, S7, S6, 0x1, S4, S3, 0x72d, 0x1, S0]
Stack pops: 2
Stack additions: [S1, S0, V1127]
Exit stack: [V12, 0x12a, 0x0, S7, S6, 0x1, S4, S3, 0x72d, 0x1, S0, V1127]

================================

Block 0xbf9
[0xbf9:0xc16]
---
Predecessors: [0xbeb]
Successors: [0xc1d]
---
0xbf9 PUSH1 0x2
0xbfb MUL
0xbfc DUP2
0xbfd PUSH1 0x2
0xbff MUL
0xc00 DUP4
0xc01 PUSH1 0x0
0xc03 MSTORE
0xc04 PUSH1 0x20
0xc06 PUSH1 0x0
0xc08 SHA3
0xc09 SWAP2
0xc0a DUP3
0xc0b ADD
0xc0c SWAP2
0xc0d ADD
0xc0e PUSH2 0xc17
0xc11 SWAP2
0xc12 SWAP1
0xc13 PUSH2 0xc1d
0xc16 JUMP
---
0xbf9: V1131 = 0x2
0xbfb: V1132 = MUL 0x2 V1127
0xbfd: V1133 = 0x2
0xbff: V1134 = MUL 0x2 S1
0xc01: V1135 = 0x0
0xc03: M[0x0] = 0x1
0xc04: V1136 = 0x20
0xc06: V1137 = 0x0
0xc08: V1138 = SHA3 0x0 0x20
0xc0b: V1139 = ADD V1138 V1132
0xc0d: V1140 = ADD V1138 V1134
0xc0e: V1141 = 0xc17
0xc13: V1142 = 0xc1d
0xc16: JUMP 0xc1d
---
Entry stack: [V12, 0x12a, 0x0, S8, S7, 0x1, S5, S4, 0x72d, 0x1, S1, V1127]
Stack pops: 3
Stack additions: [S2, S1, 0xc17, V1139, V1140]
Exit stack: [V12, 0x12a, 0x0, S8, S7, 0x1, S5, S4, 0x72d, 0x1, S1, 0xc17, V1139, V1140]

================================

Block 0xc17
[0xc17:0xc17]
---
Predecessors: [0xbeb, 0xc5a]
Successors: [0xc18]
---
0xc17 JUMPDEST
---
0xc17: JUMPDEST 
---
Entry stack: [V12, 0x12a, 0x0, S8, S7, 0x1, S5, S4, 0x72d, 0x1, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S8, S7, 0x1, S5, S4, 0x72d, 0x1, S1, S0]

================================

Block 0xc18
[0xc18:0xc1c]
---
Predecessors: [0xc17]
Successors: [0x72d]
---
0xc18 JUMPDEST
0xc19 POP
0xc1a POP
0xc1b POP
0xc1c JUMP
---
0xc18: JUMPDEST 
0xc1c: JUMP 0x72d
---
Entry stack: [V12, 0x12a, 0x0, S8, S7, 0x1, S5, S4, 0x72d, 0x1, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, S8, S7, 0x1, S5, S4]

================================

Block 0xc1d
[0xc1d:0xc22]
---
Predecessors: [0xbf9]
Successors: [0xc23]
---
0xc1d JUMPDEST
0xc1e PUSH2 0xc5a
0xc21 SWAP2
0xc22 SWAP1
---
0xc1d: JUMPDEST 
0xc1e: V1143 = 0xc5a
---
Entry stack: [V12, 0x12a, 0x0, S10, S9, 0x1, S7, S6, 0x72d, 0x1, S3, 0xc17, V1139, V1140]
Stack pops: 2
Stack additions: [0xc5a, S1, S0]
Exit stack: [V12, 0x12a, 0x0, S10, S9, 0x1, S7, S6, 0x72d, 0x1, S3, 0xc17, 0xc5a, V1139, V1140]

================================

Block 0xc23
[0xc23:0xc2b]
---
Predecessors: [0xc1d, 0xc2c]
Successors: [0xc2c, 0xc56]
---
0xc23 JUMPDEST
0xc24 DUP1
0xc25 DUP3
0xc26 GT
0xc27 ISZERO
0xc28 PUSH2 0xc56
0xc2b JUMPI
---
0xc23: JUMPDEST 
0xc26: V1144 = GT V1139 S0
0xc27: V1145 = ISZERO V1144
0xc28: V1146 = 0xc56
0xc2b: JUMPI 0xc56 V1145
---
Entry stack: [V12, 0x12a, 0x0, S11, S10, 0x1, S8, S7, 0x72d, 0x1, S4, 0xc17, 0xc5a, V1139, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x12a, 0x0, S11, S10, 0x1, S8, S7, 0x72d, 0x1, S4, 0xc17, 0xc5a, V1139, S0]

================================

Block 0xc2c
[0xc2c:0xc55]
---
Predecessors: [0xc23]
Successors: [0xc23]
---
0xc2c PUSH1 0x0
0xc2e DUP2
0xc2f SSTORE
0xc30 PUSH1 0x1
0xc32 DUP2
0xc33 ADD
0xc34 DUP1
0xc35 SLOAD
0xc36 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4b NOT
0xc4c AND
0xc4d SWAP1
0xc4e SSTORE
0xc4f PUSH1 0x2
0xc51 ADD
0xc52 PUSH2 0xc23
0xc55 JUMP
---
0xc2c: V1147 = 0x0
0xc2f: S[S0] = 0x0
0xc30: V1148 = 0x1
0xc33: V1149 = ADD S0 0x1
0xc35: V1150 = S[V1149]
0xc36: V1151 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4b: V1152 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc4c: V1153 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1150
0xc4e: S[V1149] = V1153
0xc4f: V1154 = 0x2
0xc51: V1155 = ADD 0x2 S0
0xc52: V1156 = 0xc23
0xc55: JUMP 0xc23
---
Entry stack: [V12, 0x12a, 0x0, S11, S10, 0x1, S8, S7, 0x72d, 0x1, S4, 0xc17, 0xc5a, V1139, S0]
Stack pops: 1
Stack additions: [V1155]
Exit stack: [V12, 0x12a, 0x0, S11, S10, 0x1, S8, S7, 0x72d, 0x1, S4, 0xc17, 0xc5a, V1139, V1155]

================================

Block 0xc56
[0xc56:0xc59]
---
Predecessors: [0xc23]
Successors: [0xc5a]
---
0xc56 JUMPDEST
0xc57 POP
0xc58 SWAP1
0xc59 JUMP
---
0xc56: JUMPDEST 
0xc59: JUMP 0xc5a
---
Entry stack: [V12, 0x12a, 0x0, S11, S10, 0x1, S8, S7, 0x72d, 0x1, S4, 0xc17, 0xc5a, V1139, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, 0x12a, 0x0, S11, S10, 0x1, S8, S7, 0x72d, 0x1, S4, 0xc17, V1139]

================================

Block 0xc5a
[0xc5a:0xc5c]
---
Predecessors: [0xc56]
Successors: [0xc17]
---
0xc5a JUMPDEST
0xc5b SWAP1
0xc5c JUMP
---
0xc5a: JUMPDEST 
0xc5c: JUMP 0xc17
---
Entry stack: [V12, 0x12a, 0x0, S9, S8, 0x1, S6, S5, 0x72d, 0x1, S2, 0xc17, V1139]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x12a, 0x0, S9, S8, 0x1, S6, S5, 0x72d, 0x1, S2, V1139]

================================

Block 0xc5d
[0xc5d:0xc88]
---
Predecessors: []
Successors: []
---
0xc5d STOP
0xc5e LOG1
0xc5f PUSH6 0x627a7a723058
0xc66 SHA3
0xc67 DUP4
0xc68 DELEGATECALL
0xc69 PUSH9 0x747bb56da19e2beda
0xc73 MISSING 0xe0
0xc74 ADD
0xc75 SUB
0xc76 MISSING 0x2e
0xc77 SWAP16
0xc78 CODECOPY
0xc79 MISSING 0xc0
0xc7a SWAP15
0xc7b MISSING 0xe0
0xc7c MISSING 0x1e
0xc7d PUSH5 0x332f862073
0xc83 GT
0xc84 MISSING 0x4d
0xc85 MISSING 0xdf
0xc86 LOG3
0xc87 STOP
0xc88 MISSING 0x29
---
0xc5d: STOP 
0xc5e: LOG S0 S1 S2
0xc5f: V1157 = 0x627a7a723058
0xc66: V1158 = SHA3 0x627a7a723058 S3
0xc68: V1159 = DELEGATECALL S6 V1158 S4 S5 S6 S7
0xc69: V1160 = 0x747bb56da19e2beda
0xc73: MISSING 0xe0
0xc74: V1161 = ADD S0 S1
0xc75: V1162 = SUB V1161 S2
0xc76: MISSING 0x2e
0xc78: CODECOPY S16 S1 S2
0xc79: MISSING 0xc0
0xc7b: MISSING 0xe0
0xc7c: MISSING 0x1e
0xc7d: V1163 = 0x332f862073
0xc83: V1164 = GT 0x332f862073 S0
0xc84: MISSING 0x4d
0xc85: MISSING 0xdf
0xc86: LOG S0 S1 S2 S3 S4
0xc87: STOP 
0xc88: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x747bb56da19e2beda, V1159, V1162, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, S15, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0, V1164]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0xe8
Exit block: 0xfb
Body: 0xe8, 0xef, 0xf3, 0xfb, 0x349

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x117
Exit block: 0x12a
Body: 0x117, 0x11e, 0x122, 0x12a, 0x358

Function 2:
Public function signature: 0x38771242
Entry block: 0x13c
Exit block: 0x12a
Body: 0x12a, 0x13c, 0x143, 0x147, 0x35e

Function 3:
Public function signature: 0x38af3eed
Entry block: 0x161
Exit block: 0xfb
Body: 0xfb, 0x161, 0x168, 0x16c, 0x364

Function 4:
Public function signature: 0x3c8da588
Entry block: 0x190
Exit block: 0x12a
Body: 0x12a, 0x190, 0x197, 0x19b, 0x373

Function 5:
Public function signature: 0x6e66f6e9
Entry block: 0x1b5
Exit block: 0xfb
Body: 0xfb, 0x1b5, 0x1bc, 0x1c0, 0x379

Function 6:
Public function signature: 0x71ae8f02
Entry block: 0x1e4
Exit block: 0x12a
Body: 0x12a, 0x1e4, 0x1eb, 0x1ef, 0x388

Function 7:
Public function signature: 0x86f32586
Entry block: 0x209
Exit block: 0xe6
Body: 0xe6, 0x209, 0x210, 0x214

Function 8:
Public function signature: 0xaa367664
Entry block: 0x21e
Exit block: 0x12a
Body: 0x12a, 0x21e, 0x225, 0x229, 0x494

Function 9:
Public function signature: 0xb2d5ae44
Entry block: 0x243
Exit block: 0x5af
Body: 0x243, 0x24a, 0x24e, 0x256, 0x49a, 0x4a2, 0x4b2, 0x4b3, 0x4b9, 0x4bd, 0x4c2, 0x4cc, 0x4e3, 0x4e4, 0x4f5, 0x50a, 0x516, 0x517, 0x528, 0x53d, 0x53e, 0x54f, 0x55e, 0x55f, 0x570, 0x5a1, 0x5af, 0x5b0, 0x5c1, 0x5cc, 0x5db, 0x5e4, 0x5e5, 0x5f0, 0x5f5, 0x5f6

Function 10:
Public function signature: 0xc19d93fb
Entry block: 0x26a
Exit block: 0x28c
Body: 0x26a, 0x271, 0x275, 0x27d, 0x28c, 0x28d, 0x5fc

Function 11:
Public function signature: 0xc2052403
Entry block: 0x2a1
Exit block: 0xe6
Body: 0xe6, 0x2a1, 0x2a8, 0x2ac

Function 12:
Public function signature: 0xc5c4744c
Entry block: 0x2b6
Exit block: 0x12a
Body: 0x12a, 0x2b6, 0x2bd, 0x2c1, 0x6c5

Function 13:
Public function signature: 0xce845d1d
Entry block: 0x2db
Exit block: 0x12a
Body: 0x12a, 0x2db, 0x2e2, 0x2e6, 0x6cb

Function 14:
Public function signature: 0xcf19e3b9
Entry block: 0x300
Exit block: 0x12a
Body: 0x12a, 0x300

Function 15:
Public function signature: 0xd7bb99ba
Entry block: 0x300
Exit block: 0x12a
Body: 0x12a, 0x300

Function 16:
Public function signature: 0xfe389e09
Entry block: 0x334
Exit block: 0xbbc
Body: 0x334, 0x33b, 0x33f, 0xb73, 0xb8a, 0xb8e, 0xb91, 0xba1, 0xba2, 0xba9, 0xbac, 0xbbc, 0xbbd, 0xbbf, 0xbc6, 0xbd0, 0xbd7, 0xbdb

Function 17:
Public fallback function
Entry block: 0xd5
Exit block: 0xe1
Body: 0xd5, 0xdc, 0xe0, 0xe1

Function 18:
Private function
Entry block: 0x605
Exit block: 0x6c2
Body: 0x605, 0x609, 0x61a, 0x624, 0x65d, 0x66d, 0x6c1, 0x6c2

Function 19:
Private function
Entry block: 0xbeb
Exit block: 0xc18
Body: 0xbeb, 0xbf9, 0xc17, 0xc18, 0xc1d, 0xc23, 0xc2c, 0xc56, 0xc5a

Function 20:
Private function
Entry block: 0x6d1
Exit block: 0x91b
Body: 0x6d1, 0x6d7, 0x6e8, 0x6f2, 0x701, 0x70e, 0x719, 0x72d, 0x73e, 0x7ae, 0x7d1, 0x815, 0x826, 0x82e, 0x852, 0x896, 0x8a7, 0x8ab, 0x8ab, 0x90e, 0x918, 0x919, 0x91a, 0x91b

Function 21:
Private function
Entry block: 0x38e
Exit block: 0x492
Body: 0x38e, 0x39a, 0x3a2, 0x3a8, 0x3b7, 0x3b7, 0x3f9, 0x402, 0x40d, 0x418, 0x476, 0x485, 0x48f, 0x490, 0x491, 0x492

