Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa3]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa3
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa3
0xa: JUMPI 0xa3 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0xa5]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x12065fe0
0x19 DUP2
0x1a EQ
0x1b PUSH2 0xa5
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x12065fe0
0x1a: V12 = EQ V10 0x12065fe0
0x1b: V13 = 0xa5
0x1e: JUMPI 0xa5 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xb7]
---
0x1f DUP1
0x20 PUSH4 0x1c6cc8c4
0x25 EQ
0x26 PUSH2 0xb7
0x29 JUMPI
---
0x20: V14 = 0x1c6cc8c4
0x25: V15 = EQ 0x1c6cc8c4 V10
0x26: V16 = 0xb7
0x29: JUMPI 0xb7 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xdc]
---
0x2a DUP1
0x2b PUSH4 0x1fb1c61e
0x30 EQ
0x31 PUSH2 0xdc
0x34 JUMPI
---
0x2b: V17 = 0x1fb1c61e
0x30: V18 = EQ 0x1fb1c61e V10
0x31: V19 = 0xdc
0x34: JUMPI 0xdc V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x102]
---
0x35 DUP1
0x36 PUSH4 0x38cc4831
0x3b EQ
0x3c PUSH2 0x102
0x3f JUMPI
---
0x36: V20 = 0x38cc4831
0x3b: V21 = EQ 0x38cc4831 V10
0x3c: V22 = 0x102
0x3f: JUMPI 0x102 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x10b]
---
0x40 DUP1
0x41 PUSH4 0x406e3e07
0x46 EQ
0x47 PUSH2 0x10b
0x4a JUMPI
---
0x41: V23 = 0x406e3e07
0x46: V24 = EQ 0x406e3e07 V10
0x47: V25 = 0x10b
0x4a: JUMPI 0x10b V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x140]
---
0x4b DUP1
0x4c PUSH4 0x4cc80b79
0x51 EQ
0x52 PUSH2 0x140
0x55 JUMPI
---
0x4c: V26 = 0x4cc80b79
0x51: V27 = EQ 0x4cc80b79 V10
0x52: V28 = 0x140
0x55: JUMPI 0x140 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x154]
---
0x56 DUP1
0x57 PUSH4 0x7c4822c0
0x5c EQ
0x5d PUSH2 0x154
0x60 JUMPI
---
0x57: V29 = 0x7c4822c0
0x5c: V30 = EQ 0x7c4822c0 V10
0x5d: V31 = 0x154
0x60: JUMPI 0x154 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x166]
---
0x61 DUP1
0x62 PUSH4 0xac9b845d
0x67 EQ
0x68 PUSH2 0x166
0x6b JUMPI
---
0x62: V32 = 0xac9b845d
0x67: V33 = EQ 0xac9b845d V10
0x68: V34 = 0x166
0x6b: JUMPI 0x166 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1d0]
---
0x6c DUP1
0x6d PUSH4 0xb5af8556
0x72 EQ
0x73 PUSH2 0x1d0
0x76 JUMPI
---
0x6d: V35 = 0xb5af8556
0x72: V36 = EQ 0xb5af8556 V10
0x73: V37 = 0x1d0
0x76: JUMPI 0x1d0 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1db]
---
0x77 DUP1
0x78 PUSH4 0xc0896578
0x7d EQ
0x7e PUSH2 0x1db
0x81 JUMPI
---
0x78: V38 = 0xc0896578
0x7d: V39 = EQ 0xc0896578 V10
0x7e: V40 = 0x1db
0x81: JUMPI 0x1db V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x1f3]
---
0x82 DUP1
0x83 PUSH4 0xc23697a8
0x88 EQ
0x89 PUSH2 0x1f3
0x8c JUMPI
---
0x83: V41 = 0xc23697a8
0x88: V42 = EQ 0xc23697a8 V10
0x89: V43 = 0x1f3
0x8c: JUMPI 0x1f3 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x214]
---
0x8d DUP1
0x8e PUSH4 0xd173b392
0x93 EQ
0x94 PUSH2 0x214
0x97 JUMPI
---
0x8e: V44 = 0xd173b392
0x93: V45 = EQ 0xd173b392 V10
0x94: V46 = 0x214
0x97: JUMPI 0x214 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x226]
---
0x98 DUP1
0x99 PUSH4 0xdace4557
0x9e EQ
0x9f PUSH2 0x226
0xa2 JUMPI
---
0x99: V47 = 0xdace4557
0x9e: V48 = EQ 0xdace4557 V10
0x9f: V49 = 0x226
0xa2: JUMPI 0x226 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: [0x0, 0x98, 0xb7, 0xdc, 0x13e, 0x189, 0x1d0, 0x226]
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa5
[0xa5:0xb3]
---
Predecessors: [0xb]
Successors: [0xb4]
---
0xa5 JUMPDEST
0xa6 PUSH2 0x231
0xa9 ADDRESS
0xaa PUSH1 0x1
0xac PUSH1 0xa0
0xae PUSH1 0x2
0xb0 EXP
0xb1 SUB
0xb2 AND
0xb3 BALANCE
---
0xa5: JUMPDEST 
0xa6: V50 = 0x231
0xa9: V51 = ADDRESS
0xaa: V52 = 0x1
0xac: V53 = 0xa0
0xae: V54 = 0x2
0xb0: V55 = EXP 0x2 0xa0
0xb1: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xb3: V58 = BALANCE V57
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x231, V58]
Exit stack: [V10, 0x231, V58]

================================

Block 0xb4
[0xb4:0xb6]
---
Predecessors: [0xa5, 0x102, 0x140]
Successors: [0x231, 0x243]
---
0xb4 JUMPDEST
0xb5 SWAP1
0xb6 JUMP
---
0xb4: JUMPDEST 
0xb6: JUMP {0x231, 0x243}
---
Entry stack: [V10, {0x231, 0x243}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0xb7
[0xb7:0xdb]
---
Predecessors: [0x1f]
Successors: [0xa3]
---
0xb7 JUMPDEST
0xb8 PUSH2 0xa3
0xbb PUSH1 0x4
0xbd CALLDATALOAD
0xbe PUSH1 0x1
0xc0 PUSH1 0xa0
0xc2 PUSH1 0x2
0xc4 EXP
0xc5 SUB
0xc6 DUP2
0xc7 AND
0xc8 PUSH1 0x0
0xca SWAP1
0xcb DUP2
0xcc MSTORE
0xcd PUSH1 0x4
0xcf PUSH1 0x20
0xd1 MSTORE
0xd2 PUSH1 0x40
0xd4 SWAP1
0xd5 SHA3
0xd6 PUSH1 0x64
0xd8 SWAP1
0xd9 SSTORE
0xda POP
0xdb JUMP
---
0xb7: JUMPDEST 
0xb8: V59 = 0xa3
0xbb: V60 = 0x4
0xbd: V61 = CALLDATALOAD 0x4
0xbe: V62 = 0x1
0xc0: V63 = 0xa0
0xc2: V64 = 0x2
0xc4: V65 = EXP 0x2 0xa0
0xc5: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7: V67 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0xc8: V68 = 0x0
0xcc: M[0x0] = V67
0xcd: V69 = 0x4
0xcf: V70 = 0x20
0xd1: M[0x20] = 0x4
0xd2: V71 = 0x40
0xd5: V72 = SHA3 0x0 0x40
0xd6: V73 = 0x64
0xd9: S[V72] = 0x64
0xdb: JUMP 0xa3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdc
[0xdc:0x101]
---
Predecessors: [0x2a]
Successors: [0xa3]
---
0xdc JUMPDEST
0xdd PUSH1 0x1
0xdf DUP1
0xe0 SLOAD
0xe1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf6 NOT
0xf7 AND
0xf8 PUSH1 0x4
0xfa CALLDATALOAD
0xfb OR
0xfc SWAP1
0xfd SSTORE
0xfe PUSH2 0xa3
0x101 JUMP
---
0xdc: JUMPDEST 
0xdd: V74 = 0x1
0xe0: V75 = S[0x1]
0xe1: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0xf6: V77 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf7: V78 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V75
0xf8: V79 = 0x4
0xfa: V80 = CALLDATALOAD 0x4
0xfb: V81 = OR V80 V78
0xfd: S[0x1] = V81
0xfe: V82 = 0xa3
0x101: JUMP 0xa3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x102
[0x102:0x10a]
---
Predecessors: [0x35]
Successors: [0xb4]
---
0x102 JUMPDEST
0x103 PUSH2 0x243
0x106 ADDRESS
0x107 PUSH2 0xb4
0x10a JUMP
---
0x102: JUMPDEST 
0x103: V83 = 0x243
0x106: V84 = ADDRESS
0x107: V85 = 0xb4
0x10a: JUMP 0xb4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x243, V84]
Exit stack: [V10, 0x243, V84]

================================

Block 0x10b
[0x10b:0x118]
---
Predecessors: [0x40]
Successors: [0x119, 0x13e]
---
0x10b JUMPDEST
0x10c PUSH2 0xa3
0x10f PUSH1 0x2
0x111 SLOAD
0x112 TIMESTAMP
0x113 GT
0x114 ISZERO
0x115 PUSH2 0x13e
0x118 JUMPI
---
0x10b: JUMPDEST 
0x10c: V86 = 0xa3
0x10f: V87 = 0x2
0x111: V88 = S[0x2]
0x112: V89 = TIMESTAMP
0x113: V90 = GT V89 V88
0x114: V91 = ISZERO V90
0x115: V92 = 0x13e
0x118: JUMPI 0x13e V91
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3]
Exit stack: [V10, 0xa3]

================================

Block 0x119
[0x119:0x13d]
---
Predecessors: [0x10b]
Successors: [0x13e]
---
0x119 PUSH1 0x0
0x11b DUP1
0x11c SLOAD
0x11d PUSH1 0x40
0x11f MLOAD
0x120 PUSH1 0x1
0x122 PUSH1 0xa0
0x124 PUSH1 0x2
0x126 EXP
0x127 SUB
0x128 SWAP2
0x129 DUP3
0x12a AND
0x12b SWAP3
0x12c SWAP2
0x12d ADDRESS
0x12e AND
0x12f BALANCE
0x130 SWAP1
0x131 DUP3
0x132 DUP2
0x133 DUP2
0x134 DUP2
0x135 DUP6
0x136 DUP9
0x137 DUP4
0x138 CALL
0x139 POP
0x13a POP
0x13b POP
0x13c POP
0x13d POP
---
0x119: V93 = 0x0
0x11c: V94 = S[0x0]
0x11d: V95 = 0x40
0x11f: V96 = M[0x40]
0x120: V97 = 0x1
0x122: V98 = 0xa0
0x124: V99 = 0x2
0x126: V100 = EXP 0x2 0xa0
0x127: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12a: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x12d: V103 = ADDRESS
0x12e: V104 = AND V103 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V105 = BALANCE V104
0x138: V106 = CALL 0x0 V102 V105 V96 0x0 V96 0x0
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x13e
[0x13e:0x13f]
---
Predecessors: [0x10b, 0x119, 0x166]
Successors: [0xa3]
---
0x13e JUMPDEST
0x13f JUMP
---
0x13e: JUMPDEST 
0x13f: JUMP 0xa3
---
Entry stack: [V10, 0xa3]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x140
[0x140:0x153]
---
Predecessors: [0x4b]
Successors: [0xb4]
---
0x140 JUMPDEST
0x141 PUSH2 0x243
0x144 PUSH1 0x1
0x146 SLOAD
0x147 PUSH1 0x1
0x149 PUSH1 0xa0
0x14b PUSH1 0x2
0x14d EXP
0x14e SUB
0x14f AND
0x150 PUSH2 0xb4
0x153 JUMP
---
0x140: JUMPDEST 
0x141: V107 = 0x243
0x144: V108 = 0x1
0x146: V109 = S[0x1]
0x147: V110 = 0x1
0x149: V111 = 0xa0
0x14b: V112 = 0x2
0x14d: V113 = EXP 0x2 0xa0
0x14e: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14f: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x150: V116 = 0xb4
0x153: JUMP 0xb4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x243, V115]
Exit stack: [V10, 0x243, V115]

================================

Block 0x154
[0x154:0x165]
---
Predecessors: [0x56]
Successors: [0x243]
---
0x154 JUMPDEST
0x155 PUSH2 0x243
0x158 PUSH1 0x0
0x15a SLOAD
0x15b PUSH1 0x1
0x15d PUSH1 0xa0
0x15f PUSH1 0x2
0x161 EXP
0x162 SUB
0x163 AND
0x164 DUP2
0x165 JUMP
---
0x154: JUMPDEST 
0x155: V117 = 0x243
0x158: V118 = 0x0
0x15a: V119 = S[0x0]
0x15b: V120 = 0x1
0x15d: V121 = 0xa0
0x15f: V122 = 0x2
0x161: V123 = EXP 0x2 0xa0
0x162: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x163: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x165: JUMP 0x243
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x243, V125]
Exit stack: [V10, 0x243, V125]

================================

Block 0x166
[0x166:0x188]
---
Predecessors: [0x61]
Successors: [0x13e, 0x189]
---
0x166 JUMPDEST
0x167 PUSH2 0xa3
0x16a CALLER
0x16b PUSH1 0x1
0x16d PUSH1 0xa0
0x16f PUSH1 0x2
0x171 EXP
0x172 SUB
0x173 AND
0x174 PUSH1 0x0
0x176 SWAP1
0x177 DUP2
0x178 MSTORE
0x179 PUSH1 0x4
0x17b PUSH1 0x20
0x17d MSTORE
0x17e PUSH1 0x40
0x180 DUP2
0x181 SHA3
0x182 SLOAD
0x183 GT
0x184 ISZERO
0x185 PUSH2 0x13e
0x188 JUMPI
---
0x166: JUMPDEST 
0x167: V126 = 0xa3
0x16a: V127 = CALLER
0x16b: V128 = 0x1
0x16d: V129 = 0xa0
0x16f: V130 = 0x2
0x171: V131 = EXP 0x2 0xa0
0x172: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x173: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x174: V134 = 0x0
0x178: M[0x0] = V133
0x179: V135 = 0x4
0x17b: V136 = 0x20
0x17d: M[0x20] = 0x4
0x17e: V137 = 0x40
0x181: V138 = SHA3 0x0 0x40
0x182: V139 = S[V138]
0x183: V140 = GT V139 0x0
0x184: V141 = ISZERO V140
0x185: V142 = 0x13e
0x188: JUMPI 0x13e V141
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3]
Exit stack: [V10, 0xa3]

================================

Block 0x189
[0x189:0x1cf]
---
Predecessors: [0x166]
Successors: [0xa3]
---
0x189 PUSH1 0x40
0x18b MLOAD
0x18c PUSH1 0x3
0x18e SLOAD
0x18f CALLER
0x190 PUSH1 0x1
0x192 PUSH1 0xa0
0x194 PUSH1 0x2
0x196 EXP
0x197 SUB
0x198 AND
0x199 SWAP2
0x19a PUSH1 0x0
0x19c SWAP2
0x19d SWAP1
0x19e DUP3
0x19f DUP2
0x1a0 DUP2
0x1a1 DUP2
0x1a2 DUP6
0x1a3 DUP9
0x1a4 DUP4
0x1a5 CALL
0x1a6 POP
0x1a7 POP
0x1a8 PUSH1 0x1
0x1aa SLOAD
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae PUSH1 0x1
0x1b0 PUSH1 0xa0
0x1b2 PUSH1 0x2
0x1b4 EXP
0x1b5 SUB
0x1b6 SWAP2
0x1b7 DUP3
0x1b8 AND
0x1b9 SWAP5
0x1ba POP
0x1bb ADDRESS
0x1bc SWAP1
0x1bd SWAP2
0x1be AND
0x1bf BALANCE
0x1c0 SWAP2
0x1c1 POP
0x1c2 DUP3
0x1c3 DUP2
0x1c4 DUP2
0x1c5 DUP2
0x1c6 DUP6
0x1c7 DUP9
0x1c8 DUP4
0x1c9 CALL
0x1ca POP
0x1cb POP
0x1cc POP
0x1cd POP
0x1ce POP
0x1cf JUMP
---
0x189: V143 = 0x40
0x18b: V144 = M[0x40]
0x18c: V145 = 0x3
0x18e: V146 = S[0x3]
0x18f: V147 = CALLER
0x190: V148 = 0x1
0x192: V149 = 0xa0
0x194: V150 = 0x2
0x196: V151 = EXP 0x2 0xa0
0x197: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x198: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x19a: V154 = 0x0
0x1a5: V155 = CALL 0x0 V153 V146 V144 0x0 V144 0x0
0x1a8: V156 = 0x1
0x1aa: V157 = S[0x1]
0x1ab: V158 = 0x40
0x1ad: V159 = M[0x40]
0x1ae: V160 = 0x1
0x1b0: V161 = 0xa0
0x1b2: V162 = 0x2
0x1b4: V163 = EXP 0x2 0xa0
0x1b5: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b8: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x1bb: V166 = ADDRESS
0x1be: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x1bf: V168 = BALANCE V167
0x1c9: V169 = CALL 0x0 V165 V168 V159 0x0 V159 0x0
0x1cf: JUMP 0xa3
---
Entry stack: [V10, 0xa3]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d0
[0x1d0:0x1da]
---
Predecessors: [0x6c]
Successors: [0xa3]
---
0x1d0 JUMPDEST
0x1d1 PUSH1 0x4
0x1d3 CALLDATALOAD
0x1d4 PUSH1 0x3
0x1d6 SSTORE
0x1d7 PUSH2 0xa3
0x1da JUMP
---
0x1d0: JUMPDEST 
0x1d1: V170 = 0x4
0x1d3: V171 = CALLDATALOAD 0x4
0x1d4: V172 = 0x3
0x1d6: S[0x3] = V171
0x1d7: V173 = 0xa3
0x1da: JUMP 0xa3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1db
[0x1db:0x1f2]
---
Predecessors: [0x77]
Successors: [0x231]
---
0x1db JUMPDEST
0x1dc PUSH2 0x231
0x1df PUSH1 0x4
0x1e1 CALLDATALOAD
0x1e2 PUSH1 0x4
0x1e4 PUSH1 0x20
0x1e6 MSTORE
0x1e7 PUSH1 0x0
0x1e9 SWAP1
0x1ea DUP2
0x1eb MSTORE
0x1ec PUSH1 0x40
0x1ee SWAP1
0x1ef SHA3
0x1f0 SLOAD
0x1f1 DUP2
0x1f2 JUMP
---
0x1db: JUMPDEST 
0x1dc: V174 = 0x231
0x1df: V175 = 0x4
0x1e1: V176 = CALLDATALOAD 0x4
0x1e2: V177 = 0x4
0x1e4: V178 = 0x20
0x1e6: M[0x20] = 0x4
0x1e7: V179 = 0x0
0x1eb: M[0x0] = V176
0x1ec: V180 = 0x40
0x1ef: V181 = SHA3 0x0 0x40
0x1f0: V182 = S[V181]
0x1f2: JUMP 0x231
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x231, V182]
Exit stack: [V10, 0x231, V182]

================================

Block 0x1f3
[0x1f3:0x20c]
---
Predecessors: [0x82]
Successors: [0x20d, 0x274]
---
0x1f3 JUMPDEST
0x1f4 PUSH2 0x260
0x1f7 PUSH1 0x4
0x1f9 CALLDATALOAD
0x1fa PUSH1 0x2
0x1fc SLOAD
0x1fd PUSH1 0x0
0x1ff SWAP1
0x200 PUSH3 0x2a2ff
0x204 NOT
0x205 ADD
0x206 TIMESTAMP
0x207 GT
0x208 ISZERO
0x209 PUSH2 0x274
0x20c JUMPI
---
0x1f3: JUMPDEST 
0x1f4: V183 = 0x260
0x1f7: V184 = 0x4
0x1f9: V185 = CALLDATALOAD 0x4
0x1fa: V186 = 0x2
0x1fc: V187 = S[0x2]
0x1fd: V188 = 0x0
0x200: V189 = 0x2a2ff
0x204: V190 = NOT 0x2a2ff
0x205: V191 = ADD 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd5d00 V187
0x206: V192 = TIMESTAMP
0x207: V193 = GT V192 V191
0x208: V194 = ISZERO V193
0x209: V195 = 0x274
0x20c: JUMPI 0x274 V194
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x260, V185, 0x0]
Exit stack: [V10, 0x260, V185, 0x0]

================================

Block 0x20d
[0x20d:0x213]
---
Predecessors: [0x1f3]
Successors: [0x29f]
---
0x20d POP
0x20e PUSH1 0x0
0x210 PUSH2 0x29f
0x213 JUMP
---
0x20e: V196 = 0x0
0x210: V197 = 0x29f
0x213: JUMP 0x29f
---
Entry stack: [V10, 0x260, V185, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x260, V185, 0x0]

================================

Block 0x214
[0x214:0x225]
---
Predecessors: [0x8d]
Successors: [0x243]
---
0x214 JUMPDEST
0x215 PUSH2 0x243
0x218 PUSH1 0x1
0x21a SLOAD
0x21b PUSH1 0x1
0x21d PUSH1 0xa0
0x21f PUSH1 0x2
0x221 EXP
0x222 SUB
0x223 AND
0x224 DUP2
0x225 JUMP
---
0x214: JUMPDEST 
0x215: V198 = 0x243
0x218: V199 = 0x1
0x21a: V200 = S[0x1]
0x21b: V201 = 0x1
0x21d: V202 = 0xa0
0x21f: V203 = 0x2
0x221: V204 = EXP 0x2 0xa0
0x222: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x223: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x225: JUMP 0x243
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x243, V206]
Exit stack: [V10, 0x243, V206]

================================

Block 0x226
[0x226:0x230]
---
Predecessors: [0x98]
Successors: [0xa3]
---
0x226 JUMPDEST
0x227 PUSH1 0x4
0x229 CALLDATALOAD
0x22a PUSH1 0x2
0x22c SSTORE
0x22d PUSH2 0xa3
0x230 JUMP
---
0x226: JUMPDEST 
0x227: V207 = 0x4
0x229: V208 = CALLDATALOAD 0x4
0x22a: V209 = 0x2
0x22c: S[0x2] = V208
0x22d: V210 = 0xa3
0x230: JUMP 0xa3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x231
[0x231:0x242]
---
Predecessors: [0xb4, 0x1db]
Successors: []
---
0x231 JUMPDEST
0x232 PUSH1 0x40
0x234 DUP1
0x235 MLOAD
0x236 SWAP2
0x237 DUP3
0x238 MSTORE
0x239 MLOAD
0x23a SWAP1
0x23b DUP2
0x23c SWAP1
0x23d SUB
0x23e PUSH1 0x20
0x240 ADD
0x241 SWAP1
0x242 RETURN
---
0x231: JUMPDEST 
0x232: V211 = 0x40
0x235: V212 = M[0x40]
0x238: M[V212] = S0
0x239: V213 = M[0x40]
0x23d: V214 = SUB V212 V213
0x23e: V215 = 0x20
0x240: V216 = ADD 0x20 V214
0x242: RETURN V213 V216
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x243
[0x243:0x25f]
---
Predecessors: [0xb4, 0x154, 0x214]
Successors: []
---
0x243 JUMPDEST
0x244 PUSH1 0x40
0x246 DUP1
0x247 MLOAD
0x248 PUSH1 0x1
0x24a PUSH1 0xa0
0x24c PUSH1 0x2
0x24e EXP
0x24f SUB
0x250 SWAP3
0x251 SWAP1
0x252 SWAP3
0x253 AND
0x254 DUP3
0x255 MSTORE
0x256 MLOAD
0x257 SWAP1
0x258 DUP2
0x259 SWAP1
0x25a SUB
0x25b PUSH1 0x20
0x25d ADD
0x25e SWAP1
0x25f RETURN
---
0x243: JUMPDEST 
0x244: V217 = 0x40
0x247: V218 = M[0x40]
0x248: V219 = 0x1
0x24a: V220 = 0xa0
0x24c: V221 = 0x2
0x24e: V222 = EXP 0x2 0xa0
0x24f: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x253: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x255: M[V218] = V224
0x256: V225 = M[0x40]
0x25a: V226 = SUB V218 V225
0x25b: V227 = 0x20
0x25d: V228 = ADD 0x20 V226
0x25f: RETURN V225 V228
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x260
[0x260:0x273]
---
Predecessors: [0x29f]
Successors: []
---
0x260 JUMPDEST
0x261 PUSH1 0x40
0x263 DUP1
0x264 MLOAD
0x265 SWAP2
0x266 ISZERO
0x267 ISZERO
0x268 DUP3
0x269 MSTORE
0x26a MLOAD
0x26b SWAP1
0x26c DUP2
0x26d SWAP1
0x26e SUB
0x26f PUSH1 0x20
0x271 ADD
0x272 SWAP1
0x273 RETURN
---
0x260: JUMPDEST 
0x261: V229 = 0x40
0x264: V230 = M[0x40]
0x266: V231 = ISZERO {0x0, 0x1}
0x267: V232 = ISZERO V231
0x269: M[V230] = V232
0x26a: V233 = M[0x40]
0x26e: V234 = SUB V230 V233
0x26f: V235 = 0x20
0x271: V236 = ADD 0x20 V234
0x273: RETURN V233 V236
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x274
[0x274:0x293]
---
Predecessors: [0x1f3]
Successors: [0x294, 0x29b]
---
0x274 JUMPDEST
0x275 PUSH1 0x1
0x277 PUSH1 0xa0
0x279 PUSH1 0x2
0x27b EXP
0x27c SUB
0x27d DUP3
0x27e AND
0x27f PUSH1 0x0
0x281 SWAP1
0x282 DUP2
0x283 MSTORE
0x284 PUSH1 0x4
0x286 PUSH1 0x20
0x288 MSTORE
0x289 PUSH1 0x40
0x28b DUP2
0x28c SHA3
0x28d SLOAD
0x28e GT
0x28f ISZERO
0x290 PUSH2 0x29b
0x293 JUMPI
---
0x274: JUMPDEST 
0x275: V237 = 0x1
0x277: V238 = 0xa0
0x279: V239 = 0x2
0x27b: V240 = EXP 0x2 0xa0
0x27c: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27e: V242 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V243 = 0x0
0x283: M[0x0] = V242
0x284: V244 = 0x4
0x286: V245 = 0x20
0x288: M[0x20] = 0x4
0x289: V246 = 0x40
0x28c: V247 = SHA3 0x0 0x40
0x28d: V248 = S[V247]
0x28e: V249 = GT V248 0x0
0x28f: V250 = ISZERO V249
0x290: V251 = 0x29b
0x293: JUMPI 0x29b V250
---
Entry stack: [V10, 0x260, V185, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x260, V185, 0x0]

================================

Block 0x294
[0x294:0x29a]
---
Predecessors: [0x274]
Successors: [0x29f]
---
0x294 POP
0x295 PUSH1 0x1
0x297 PUSH2 0x29f
0x29a JUMP
---
0x295: V252 = 0x1
0x297: V253 = 0x29f
0x29a: JUMP 0x29f
---
Entry stack: [V10, 0x260, V185, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x260, V185, 0x1]

================================

Block 0x29b
[0x29b:0x29e]
---
Predecessors: [0x274]
Successors: [0x29f]
---
0x29b JUMPDEST
0x29c POP
0x29d PUSH1 0x0
---
0x29b: JUMPDEST 
0x29d: V254 = 0x0
---
Entry stack: [V10, 0x260, V185, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x260, V185, 0x0]

================================

Block 0x29f
[0x29f:0x2a3]
---
Predecessors: [0x20d, 0x294, 0x29b]
Successors: [0x260]
---
0x29f JUMPDEST
0x2a0 SWAP2
0x2a1 SWAP1
0x2a2 POP
0x2a3 JUMP
---
0x29f: JUMPDEST 
0x2a3: JUMP 0x260
---
Entry stack: [V10, 0x260, V185, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Function 0:
Public function signature: 0x12065fe0
Entry block: 0xa5
Exit block: 0x231
Body: 0xa5, 0x231

Function 1:
Public function signature: 0x1c6cc8c4
Entry block: 0xb7
Exit block: 0xa3
Body: 0xa3, 0xb7

Function 2:
Public function signature: 0x1fb1c61e
Entry block: 0xdc
Exit block: 0xa3
Body: 0xa3, 0xdc

Function 3:
Public function signature: 0x38cc4831
Entry block: 0x102
Exit block: 0x243
Body: 0x102, 0x243

Function 4:
Public function signature: 0x406e3e07
Entry block: 0x10b
Exit block: 0xa3
Body: 0xa3, 0x10b, 0x119, 0x13e

Function 5:
Public function signature: 0x4cc80b79
Entry block: 0x140
Exit block: 0x243
Body: 0x140, 0x243

Function 6:
Public function signature: 0x7c4822c0
Entry block: 0x154
Exit block: 0x243
Body: 0x154, 0x243

Function 7:
Public function signature: 0xac9b845d
Entry block: 0x166
Exit block: 0xa3
Body: 0xa3, 0x13e, 0x166, 0x189

Function 8:
Public function signature: 0xb5af8556
Entry block: 0x1d0
Exit block: 0xa3
Body: 0xa3, 0x1d0

Function 9:
Public function signature: 0xc0896578
Entry block: 0x1db
Exit block: 0x231
Body: 0x1db, 0x231

Function 10:
Public function signature: 0xc23697a8
Entry block: 0x1f3
Exit block: 0x260
Body: 0x1f3, 0x20d, 0x260, 0x274, 0x294, 0x29b, 0x29f

Function 11:
Public function signature: 0xd173b392
Entry block: 0x214
Exit block: 0x243
Body: 0x214, 0x243

Function 12:
Public function signature: 0xdace4557
Entry block: 0x226
Exit block: 0xa3
Body: 0xa3, 0x226

Function 13:
Public fallback function
Entry block: 0xa3
Exit block: 0xa3
Body: 0xa3

