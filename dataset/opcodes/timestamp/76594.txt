Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8b
0xa: JUMPI 0x8b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xb3]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x1793c314
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xb3
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x1793c314
0x39: V12 = EQ V10 0x1793c314
0x3a: V13 = 0xb3
0x3d: JUMPI 0xb3 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xda]
---
0x3e DUP1
0x3f PUSH4 0x21e92d49
0x44 EQ
0x45 PUSH2 0xda
0x48 JUMPI
---
0x3f: V14 = 0x21e92d49
0x44: V15 = EQ 0x21e92d49 V10
0x45: V16 = 0xda
0x48: JUMPI 0xda V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xf3]
---
0x49 DUP1
0x4a PUSH4 0x872fe620
0x4f EQ
0x50 PUSH2 0xf3
0x53 JUMPI
---
0x4a: V17 = 0x872fe620
0x4f: V18 = EQ 0x872fe620 V10
0x50: V19 = 0xf3
0x53: JUMPI 0xf3 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x108]
---
0x54 DUP1
0x55 PUSH4 0x8da5cb5b
0x5a EQ
0x5b PUSH2 0x108
0x5e JUMPI
---
0x55: V20 = 0x8da5cb5b
0x5a: V21 = EQ 0x8da5cb5b V10
0x5b: V22 = 0x108
0x5e: JUMPI 0x108 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x137]
---
0x5f DUP1
0x60 PUSH4 0x9066314e
0x65 EQ
0x66 PUSH2 0x137
0x69 JUMPI
---
0x60: V23 = 0x9066314e
0x65: V24 = EQ 0x9066314e V10
0x66: V25 = 0x137
0x69: JUMPI 0x137 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x151]
---
0x6a DUP1
0x6b PUSH4 0xa5bbc423
0x70 EQ
0x71 PUSH2 0x151
0x74 JUMPI
---
0x6b: V26 = 0xa5bbc423
0x70: V27 = EQ 0xa5bbc423 V10
0x71: V28 = 0x151
0x74: JUMPI 0x151 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x1a4]
---
0x75 DUP1
0x76 PUSH4 0xc46f3e25
0x7b EQ
0x7c PUSH2 0x1a4
0x7f JUMPI
---
0x76: V29 = 0xc46f3e25
0x7b: V30 = EQ 0xc46f3e25 V10
0x7c: V31 = 0x1a4
0x7f: JUMPI 0x1a4 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x1cb]
---
0x80 DUP1
0x81 PUSH4 0xf341cae8
0x86 EQ
0x87 PUSH2 0x1cb
0x8a JUMPI
---
0x81: V32 = 0xf341cae8
0x86: V33 = EQ 0xf341cae8 V10
0x87: V34 = 0x1cb
0x8a: JUMPI 0x1cb V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x8b]
---
Predecessors: [0x0, 0x80]
Successors: [0x8c]
---
0x8b JUMPDEST
---
0x8b: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x8e]
---
Predecessors: [0x8b]
Successors: [0x8f]
---
0x8c JUMPDEST
0x8d PUSH1 0x0
---
0x8c: JUMPDEST 
0x8d: V35 = 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x0]

================================

Block 0x8f
[0x8f:0xa4]
---
Predecessors: [0x8c]
Successors: [0xa5, 0xa6]
---
0x8f JUMPDEST
0x90 PUSH1 0x12
0x92 SLOAD
0x93 PUSH3 0x10000
0x97 SWAP1
0x98 DIV
0x99 PUSH1 0xff
0x9b AND
0x9c PUSH1 0x2
0x9e DUP2
0x9f GT
0xa0 ISZERO
0xa1 PUSH2 0xa6
0xa4 JUMPI
---
0x8f: JUMPDEST 
0x90: V36 = 0x12
0x92: V37 = S[0x12]
0x93: V38 = 0x10000
0x98: V39 = DIV V37 0x10000
0x99: V40 = 0xff
0x9b: V41 = AND 0xff V39
0x9c: V42 = 0x2
0x9f: V43 = GT V41 0x2
0xa0: V44 = ISZERO V43
0xa1: V45 = 0xa6
0xa4: JUMPI 0xa6 V44
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V10, 0x0, V41]

================================

Block 0xa5
[0xa5:0xa5]
---
Predecessors: [0x8f]
Successors: []
---
0xa5 INVALID
---
0xa5: INVALID 
---
Entry stack: [V10, 0x0, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, V41]

================================

Block 0xa6
[0xa6:0xab]
---
Predecessors: [0x8f]
Successors: [0xac, 0xb0]
---
0xa6 JUMPDEST
0xa7 EQ
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa6: JUMPDEST 
0xa7: V46 = EQ V41 0x0
0xa8: V47 = 0xb0
0xab: JUMPI 0xb0 V46
---
Entry stack: [V10, 0x0, V41]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa6]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V48 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb0
[0xb0:0xb0]
---
Predecessors: [0xa6, 0x290, 0x336, 0x42a, 0x49b, 0x6e1]
Successors: [0xb1]
---
0xb0 JUMPDEST
---
0xb0: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb1
[0xb1:0xb2]
---
Predecessors: [0xb0]
Successors: []
---
0xb1 JUMPDEST
0xb2 STOP
---
0xb1: JUMPDEST 
0xb2: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb3
[0xb3:0xb9]
---
Predecessors: [0xb]
Successors: [0xba, 0xbe]
---
0xb3 JUMPDEST
0xb4 CALLVALUE
0xb5 ISZERO
0xb6 PUSH2 0xbe
0xb9 JUMPI
---
0xb3: JUMPDEST 
0xb4: V49 = CALLVALUE
0xb5: V50 = ISZERO V49
0xb6: V51 = 0xbe
0xb9: JUMPI 0xbe V50
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xba
[0xba:0xbd]
---
Predecessors: [0xb3]
Successors: []
---
0xba PUSH1 0x0
0xbc DUP1
0xbd REVERT
---
0xba: V52 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbe
[0xbe:0xd7]
---
Predecessors: [0xb3]
Successors: [0x1e6]
---
0xbe JUMPDEST
0xbf PUSH2 0xb0
0xc2 PUSH1 0x1
0xc4 PUSH1 0xa0
0xc6 PUSH1 0x2
0xc8 EXP
0xc9 SUB
0xca PUSH1 0x4
0xcc CALLDATALOAD
0xcd DUP2
0xce AND
0xcf SWAP1
0xd0 PUSH1 0x24
0xd2 CALLDATALOAD
0xd3 AND
0xd4 PUSH2 0x1e6
0xd7 JUMP
---
0xbe: JUMPDEST 
0xbf: V53 = 0xb0
0xc2: V54 = 0x1
0xc4: V55 = 0xa0
0xc6: V56 = 0x2
0xc8: V57 = EXP 0x2 0xa0
0xc9: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0xca: V59 = 0x4
0xcc: V60 = CALLDATALOAD 0x4
0xce: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0xd0: V62 = 0x24
0xd2: V63 = CALLDATALOAD 0x24
0xd3: V64 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0xd4: V65 = 0x1e6
0xd7: JUMP 0x1e6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb0, V61, V64]
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0xd8
[0xd8:0xd9]
---
Predecessors: []
Successors: []
---
0xd8 JUMPDEST
0xd9 STOP
---
0xd8: JUMPDEST 
0xd9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xda
[0xda:0xf0]
---
Predecessors: [0x3e]
Successors: [0x294]
---
0xda JUMPDEST
0xdb PUSH2 0xb0
0xde PUSH1 0x1
0xe0 PUSH1 0xa0
0xe2 PUSH1 0x2
0xe4 EXP
0xe5 SUB
0xe6 PUSH1 0x4
0xe8 CALLDATALOAD
0xe9 AND
0xea PUSH1 0x24
0xec CALLDATALOAD
0xed PUSH2 0x294
0xf0 JUMP
---
0xda: JUMPDEST 
0xdb: V66 = 0xb0
0xde: V67 = 0x1
0xe0: V68 = 0xa0
0xe2: V69 = 0x2
0xe4: V70 = EXP 0x2 0xa0
0xe5: V71 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe6: V72 = 0x4
0xe8: V73 = CALLDATALOAD 0x4
0xe9: V74 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0xea: V75 = 0x24
0xec: V76 = CALLDATALOAD 0x24
0xed: V77 = 0x294
0xf0: JUMP 0x294
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb0, V74, V76]
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0xf1
[0xf1:0xf2]
---
Predecessors: []
Successors: []
---
0xf1 JUMPDEST
0xf2 STOP
---
0xf1: JUMPDEST 
0xf2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf3
[0xf3:0xf9]
---
Predecessors: [0x49]
Successors: [0xfa, 0xfe]
---
0xf3 JUMPDEST
0xf4 CALLVALUE
0xf5 ISZERO
0xf6 PUSH2 0xfe
0xf9 JUMPI
---
0xf3: JUMPDEST 
0xf4: V78 = CALLVALUE
0xf5: V79 = ISZERO V78
0xf6: V80 = 0xfe
0xf9: JUMPI 0xfe V79
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfa
[0xfa:0xfd]
---
Predecessors: [0xf3]
Successors: []
---
0xfa PUSH1 0x0
0xfc DUP1
0xfd REVERT
---
0xfa: V81 = 0x0
0xfd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfe
[0xfe:0x105]
---
Predecessors: [0xf3]
Successors: [0x33a]
---
0xfe JUMPDEST
0xff PUSH2 0xb0
0x102 PUSH2 0x33a
0x105 JUMP
---
0xfe: JUMPDEST 
0xff: V82 = 0xb0
0x102: V83 = 0x33a
0x105: JUMP 0x33a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb0]
Exit stack: [V10, 0xb0]

================================

Block 0x106
[0x106:0x107]
---
Predecessors: []
Successors: []
---
0x106 JUMPDEST
0x107 STOP
---
0x106: JUMPDEST 
0x107: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x108
[0x108:0x10e]
---
Predecessors: [0x54]
Successors: [0x10f, 0x113]
---
0x108 JUMPDEST
0x109 CALLVALUE
0x10a ISZERO
0x10b PUSH2 0x113
0x10e JUMPI
---
0x108: JUMPDEST 
0x109: V84 = CALLVALUE
0x10a: V85 = ISZERO V84
0x10b: V86 = 0x113
0x10e: JUMPI 0x113 V85
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10f
[0x10f:0x112]
---
Predecessors: [0x108]
Successors: []
---
0x10f PUSH1 0x0
0x111 DUP1
0x112 REVERT
---
0x10f: V87 = 0x0
0x112: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x113
[0x113:0x11a]
---
Predecessors: [0x108]
Successors: [0x42c]
---
0x113 JUMPDEST
0x114 PUSH2 0x11b
0x117 PUSH2 0x42c
0x11a JUMP
---
0x113: JUMPDEST 
0x114: V88 = 0x11b
0x117: V89 = 0x42c
0x11a: JUMP 0x42c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11b]
Exit stack: [V10, 0x11b]

================================

Block 0x11b
[0x11b:0x136]
---
Predecessors: [0x42c]
Successors: []
---
0x11b JUMPDEST
0x11c PUSH1 0x40
0x11e MLOAD
0x11f PUSH1 0x1
0x121 PUSH1 0xa0
0x123 PUSH1 0x2
0x125 EXP
0x126 SUB
0x127 SWAP1
0x128 SWAP2
0x129 AND
0x12a DUP2
0x12b MSTORE
0x12c PUSH1 0x20
0x12e ADD
0x12f PUSH1 0x40
0x131 MLOAD
0x132 DUP1
0x133 SWAP2
0x134 SUB
0x135 SWAP1
0x136 RETURN
---
0x11b: JUMPDEST 
0x11c: V90 = 0x40
0x11e: V91 = M[0x40]
0x11f: V92 = 0x1
0x121: V93 = 0xa0
0x123: V94 = 0x2
0x125: V95 = EXP 0x2 0xa0
0x126: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x129: V97 = AND V411 0xffffffffffffffffffffffffffffffffffffffff
0x12b: M[V91] = V97
0x12c: V98 = 0x20
0x12e: V99 = ADD 0x20 V91
0x12f: V100 = 0x40
0x131: V101 = M[0x40]
0x134: V102 = SUB V99 V101
0x136: RETURN V101 V102
---
Entry stack: [V10, 0x11b, V411]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x11b]

================================

Block 0x137
[0x137:0x13d]
---
Predecessors: [0x5f]
Successors: [0x13e, 0x142]
---
0x137 JUMPDEST
0x138 CALLVALUE
0x139 ISZERO
0x13a PUSH2 0x142
0x13d JUMPI
---
0x137: JUMPDEST 
0x138: V103 = CALLVALUE
0x139: V104 = ISZERO V103
0x13a: V105 = 0x142
0x13d: JUMPI 0x142 V104
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13e
[0x13e:0x141]
---
Predecessors: [0x137]
Successors: []
---
0x13e PUSH1 0x0
0x140 DUP1
0x141 REVERT
---
0x13e: V106 = 0x0
0x141: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x142
[0x142:0x14e]
---
Predecessors: [0x137]
Successors: [0x43b]
---
0x142 JUMPDEST
0x143 PUSH2 0xb0
0x146 PUSH1 0x4
0x148 CALLDATALOAD
0x149 ISZERO
0x14a ISZERO
0x14b PUSH2 0x43b
0x14e JUMP
---
0x142: JUMPDEST 
0x143: V107 = 0xb0
0x146: V108 = 0x4
0x148: V109 = CALLDATALOAD 0x4
0x149: V110 = ISZERO V109
0x14a: V111 = ISZERO V110
0x14b: V112 = 0x43b
0x14e: JUMP 0x43b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb0, V111]
Exit stack: [V10, 0xb0, V111]

================================

Block 0x14f
[0x14f:0x150]
---
Predecessors: []
Successors: []
---
0x14f JUMPDEST
0x150 STOP
---
0x14f: JUMPDEST 
0x150: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x151
[0x151:0x157]
---
Predecessors: [0x6a]
Successors: [0x158, 0x15c]
---
0x151 JUMPDEST
0x152 CALLVALUE
0x153 ISZERO
0x154 PUSH2 0x15c
0x157 JUMPI
---
0x151: JUMPDEST 
0x152: V113 = CALLVALUE
0x153: V114 = ISZERO V113
0x154: V115 = 0x15c
0x157: JUMPI 0x15c V114
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x158
[0x158:0x15b]
---
Predecessors: [0x151]
Successors: []
---
0x158 PUSH1 0x0
0x15a DUP1
0x15b REVERT
---
0x158: V116 = 0x0
0x15b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15c
[0x15c:0x1a1]
---
Predecessors: [0x151]
Successors: [0x49e]
---
0x15c JUMPDEST
0x15d PUSH2 0xb0
0x160 PUSH1 0x4
0x162 PUSH1 0x24
0x164 DUP2
0x165 CALLDATALOAD
0x166 DUP2
0x167 DUP2
0x168 ADD
0x169 SWAP1
0x16a DUP4
0x16b ADD
0x16c CALLDATALOAD
0x16d DUP1
0x16e PUSH1 0x20
0x170 PUSH1 0x1f
0x172 DUP3
0x173 ADD
0x174 DUP2
0x175 SWAP1
0x176 DIV
0x177 DUP2
0x178 MUL
0x179 ADD
0x17a PUSH1 0x40
0x17c MLOAD
0x17d SWAP1
0x17e DUP2
0x17f ADD
0x180 PUSH1 0x40
0x182 MSTORE
0x183 DUP2
0x184 DUP2
0x185 MSTORE
0x186 SWAP3
0x187 SWAP2
0x188 SWAP1
0x189 PUSH1 0x20
0x18b DUP5
0x18c ADD
0x18d DUP4
0x18e DUP4
0x18f DUP1
0x190 DUP3
0x191 DUP5
0x192 CALLDATACOPY
0x193 POP
0x194 SWAP5
0x195 SWAP7
0x196 POP
0x197 PUSH2 0x49e
0x19a SWAP6
0x19b POP
0x19c POP
0x19d POP
0x19e POP
0x19f POP
0x1a0 POP
0x1a1 JUMP
---
0x15c: JUMPDEST 
0x15d: V117 = 0xb0
0x160: V118 = 0x4
0x162: V119 = 0x24
0x165: V120 = CALLDATALOAD 0x4
0x168: V121 = ADD V120 0x24
0x16b: V122 = ADD 0x4 V120
0x16c: V123 = CALLDATALOAD V122
0x16e: V124 = 0x20
0x170: V125 = 0x1f
0x173: V126 = ADD V123 0x1f
0x176: V127 = DIV V126 0x20
0x178: V128 = MUL 0x20 V127
0x179: V129 = ADD V128 0x20
0x17a: V130 = 0x40
0x17c: V131 = M[0x40]
0x17f: V132 = ADD V131 V129
0x180: V133 = 0x40
0x182: M[0x40] = V132
0x185: M[V131] = V123
0x189: V134 = 0x20
0x18c: V135 = ADD V131 0x20
0x192: CALLDATACOPY V135 V121 V123
0x197: V136 = 0x49e
0x1a1: JUMP 0x49e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb0, V131]
Exit stack: [V10, 0xb0, V131]

================================

Block 0x1a2
[0x1a2:0x1a3]
---
Predecessors: []
Successors: []
---
0x1a2 JUMPDEST
0x1a3 STOP
---
0x1a2: JUMPDEST 
0x1a3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a4
[0x1a4:0x1aa]
---
Predecessors: [0x75]
Successors: [0x1ab, 0x1af]
---
0x1a4 JUMPDEST
0x1a5 CALLVALUE
0x1a6 ISZERO
0x1a7 PUSH2 0x1af
0x1aa JUMPI
---
0x1a4: JUMPDEST 
0x1a5: V137 = CALLVALUE
0x1a6: V138 = ISZERO V137
0x1a7: V139 = 0x1af
0x1aa: JUMPI 0x1af V138
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ab
[0x1ab:0x1ae]
---
Predecessors: [0x1a4]
Successors: []
---
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae REVERT
---
0x1ab: V140 = 0x0
0x1ae: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1af
[0x1af:0x1b6]
---
Predecessors: [0x1a4]
Successors: [0x61a]
---
0x1af JUMPDEST
0x1b0 PUSH2 0x1b7
0x1b3 PUSH2 0x61a
0x1b6 JUMP
---
0x1af: JUMPDEST 
0x1b0: V141 = 0x1b7
0x1b3: V142 = 0x61a
0x1b6: JUMP 0x61a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b7]
Exit stack: [V10, 0x1b7]

================================

Block 0x1b7
[0x1b7:0x1ca]
---
Predecessors: [0x61a]
Successors: []
---
0x1b7 JUMPDEST
0x1b8 PUSH1 0x40
0x1ba MLOAD
0x1bb SWAP1
0x1bc ISZERO
0x1bd ISZERO
0x1be DUP2
0x1bf MSTORE
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 SWAP2
0x1c8 SUB
0x1c9 SWAP1
0x1ca RETURN
---
0x1b7: JUMPDEST 
0x1b8: V143 = 0x40
0x1ba: V144 = M[0x40]
0x1bc: V145 = ISZERO V603
0x1bd: V146 = ISZERO V145
0x1bf: M[V144] = V146
0x1c0: V147 = 0x20
0x1c2: V148 = ADD 0x20 V144
0x1c3: V149 = 0x40
0x1c5: V150 = M[0x40]
0x1c8: V151 = SUB V148 V150
0x1ca: RETURN V150 V151
---
Entry stack: [V10, 0x1b7, V603]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b7]

================================

Block 0x1cb
[0x1cb:0x1d1]
---
Predecessors: [0x80]
Successors: [0x1d2, 0x1d6]
---
0x1cb JUMPDEST
0x1cc CALLVALUE
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V152 = CALLVALUE
0x1cd: V153 = ISZERO V152
0x1ce: V154 = 0x1d6
0x1d1: JUMPI 0x1d6 V153
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1cb]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V155 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d6
[0x1d6:0x1e3]
---
Predecessors: [0x1cb]
Successors: [0x623]
---
0x1d6 JUMPDEST
0x1d7 PUSH2 0xb0
0x1da PUSH1 0x4
0x1dc CALLDATALOAD
0x1dd PUSH1 0x24
0x1df CALLDATALOAD
0x1e0 PUSH2 0x623
0x1e3 JUMP
---
0x1d6: JUMPDEST 
0x1d7: V156 = 0xb0
0x1da: V157 = 0x4
0x1dc: V158 = CALLDATALOAD 0x4
0x1dd: V159 = 0x24
0x1df: V160 = CALLDATALOAD 0x24
0x1e0: V161 = 0x623
0x1e3: JUMP 0x623
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb0, V158, V160]
Exit stack: [V10, 0xb0, V158, V160]

================================

Block 0x1e4
[0x1e4:0x1e5]
---
Predecessors: []
Successors: []
---
0x1e4 JUMPDEST
0x1e5 STOP
---
0x1e4: JUMPDEST 
0x1e5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e6
[0x1e6:0x1f2]
---
Predecessors: [0xbe]
Successors: [0x1f3, 0x1fd]
---
0x1e6 JUMPDEST
0x1e7 PUSH1 0x12
0x1e9 SLOAD
0x1ea PUSH1 0xff
0x1ec AND
0x1ed ISZERO
0x1ee DUP1
0x1ef PUSH2 0x1fd
0x1f2 JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V162 = 0x12
0x1e9: V163 = S[0x12]
0x1ea: V164 = 0xff
0x1ec: V165 = AND 0xff V163
0x1ed: V166 = ISZERO V165
0x1ef: V167 = 0x1fd
0x1f2: JUMPI 0x1fd V166
---
Entry stack: [V10, 0xb0, V61, V64]
Stack pops: 0
Stack additions: [V166]
Exit stack: [V10, 0xb0, V61, V64, V166]

================================

Block 0x1f3
[0x1f3:0x1fc]
---
Predecessors: [0x1e6]
Successors: [0x1fd]
---
0x1f3 POP
0x1f4 PUSH1 0x11
0x1f6 SLOAD
0x1f7 PUSH1 0x3c
0x1f9 ADD
0x1fa TIMESTAMP
0x1fb GT
0x1fc ISZERO
---
0x1f4: V168 = 0x11
0x1f6: V169 = S[0x11]
0x1f7: V170 = 0x3c
0x1f9: V171 = ADD 0x3c V169
0x1fa: V172 = TIMESTAMP
0x1fb: V173 = GT V172 V171
0x1fc: V174 = ISZERO V173
---
Entry stack: [V10, 0xb0, V61, V64, V166]
Stack pops: 1
Stack additions: [V174]
Exit stack: [V10, 0xb0, V61, V64, V174]

================================

Block 0x1fd
[0x1fd:0x202]
---
Predecessors: [0x1e6, 0x1f3]
Successors: [0x203, 0x207]
---
0x1fd JUMPDEST
0x1fe ISZERO
0x1ff PUSH2 0x207
0x202 JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V175 = ISZERO S0
0x1ff: V176 = 0x207
0x202: JUMPI 0x207 V175
---
Entry stack: [V10, 0xb0, V61, V64, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0x203
[0x203:0x206]
---
Predecessors: [0x1fd]
Successors: [0x28f]
---
0x203 PUSH2 0x28f
0x206 JUMP
---
0x203: V177 = 0x28f
0x206: JUMP 0x28f
---
Entry stack: [V10, 0xb0, V61, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0x207
[0x207:0x217]
---
Predecessors: [0x1fd]
Successors: [0x218, 0x251]
---
0x207 JUMPDEST
0x208 PUSH1 0x12
0x20a SLOAD
0x20b PUSH2 0x100
0x20e SWAP1
0x20f DIV
0x210 PUSH1 0xff
0x212 AND
0x213 ISZERO
0x214 PUSH2 0x251
0x217 JUMPI
---
0x207: JUMPDEST 
0x208: V178 = 0x12
0x20a: V179 = S[0x12]
0x20b: V180 = 0x100
0x20f: V181 = DIV V179 0x100
0x210: V182 = 0xff
0x212: V183 = AND 0xff V181
0x213: V184 = ISZERO V183
0x214: V185 = 0x251
0x217: JUMPI 0x251 V184
---
Entry stack: [V10, 0xb0, V61, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0x218
[0x218:0x24c]
---
Predecessors: [0x207]
Successors: [0x24d, 0x251]
---
0x218 PUSH1 0x3
0x21a SLOAD
0x21b DUP2
0x21c PUSH1 0x40
0x21e MLOAD
0x21f PUSH1 0x1
0x221 PUSH1 0xa0
0x223 PUSH1 0x2
0x225 EXP
0x226 SUB
0x227 SWAP2
0x228 SWAP1
0x229 SWAP2
0x22a AND
0x22b PUSH13 0x1000000000000000000000000
0x239 MUL
0x23a DUP2
0x23b MSTORE
0x23c PUSH1 0x14
0x23e ADD
0x23f PUSH1 0x40
0x241 MLOAD
0x242 SWAP1
0x243 DUP2
0x244 SWAP1
0x245 SUB
0x246 SWAP1
0x247 SHA3
0x248 EQ
0x249 PUSH2 0x251
0x24c JUMPI
---
0x218: V186 = 0x3
0x21a: V187 = S[0x3]
0x21c: V188 = 0x40
0x21e: V189 = M[0x40]
0x21f: V190 = 0x1
0x221: V191 = 0xa0
0x223: V192 = 0x2
0x225: V193 = EXP 0x2 0xa0
0x226: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22a: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x22b: V196 = 0x1000000000000000000000000
0x239: V197 = MUL 0x1000000000000000000000000 V195
0x23b: M[V189] = V197
0x23c: V198 = 0x14
0x23e: V199 = ADD 0x14 V189
0x23f: V200 = 0x40
0x241: V201 = M[0x40]
0x245: V202 = SUB V199 V201
0x247: V203 = SHA3 V201 V202
0x248: V204 = EQ V203 V187
0x249: V205 = 0x251
0x24c: JUMPI 0x251 V204
---
Entry stack: [V10, 0xb0, V61, V64]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0x24d
[0x24d:0x250]
---
Predecessors: [0x218]
Successors: []
---
0x24d PUSH1 0x0
0x24f DUP1
0x250 REVERT
---
0x24d: V206 = 0x0
0x250: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V61, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0x251
[0x251:0x251]
---
Predecessors: [0x207, 0x218]
Successors: [0x252]
---
0x251 JUMPDEST
---
0x251: JUMPDEST 
---
Entry stack: [V10, 0xb0, V61, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0x252
[0x252:0x28a]
---
Predecessors: [0x251]
Successors: [0x28b, 0x28f]
---
0x252 JUMPDEST
0x253 DUP2
0x254 PUSH1 0x1
0x256 PUSH1 0xa0
0x258 PUSH1 0x2
0x25a EXP
0x25b SUB
0x25c AND
0x25d PUSH2 0x8fc
0x260 ADDRESS
0x261 PUSH1 0x1
0x263 PUSH1 0xa0
0x265 PUSH1 0x2
0x267 EXP
0x268 SUB
0x269 AND
0x26a BALANCE
0x26b SWAP1
0x26c DUP2
0x26d ISZERO
0x26e MUL
0x26f SWAP1
0x270 PUSH1 0x40
0x272 MLOAD
0x273 PUSH1 0x0
0x275 PUSH1 0x40
0x277 MLOAD
0x278 DUP1
0x279 DUP4
0x27a SUB
0x27b DUP2
0x27c DUP6
0x27d DUP9
0x27e DUP9
0x27f CALL
0x280 SWAP4
0x281 POP
0x282 POP
0x283 POP
0x284 POP
0x285 ISZERO
0x286 ISZERO
0x287 PUSH2 0x28f
0x28a JUMPI
---
0x252: JUMPDEST 
0x254: V207 = 0x1
0x256: V208 = 0xa0
0x258: V209 = 0x2
0x25a: V210 = EXP 0x2 0xa0
0x25b: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25c: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x25d: V213 = 0x8fc
0x260: V214 = ADDRESS
0x261: V215 = 0x1
0x263: V216 = 0xa0
0x265: V217 = 0x2
0x267: V218 = EXP 0x2 0xa0
0x268: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x269: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x26a: V221 = BALANCE V220
0x26d: V222 = ISZERO V221
0x26e: V223 = MUL V222 0x8fc
0x270: V224 = 0x40
0x272: V225 = M[0x40]
0x273: V226 = 0x0
0x275: V227 = 0x40
0x277: V228 = M[0x40]
0x27a: V229 = SUB V225 V228
0x27f: V230 = CALL V223 V212 V221 V228 V229 V228 0x0
0x285: V231 = ISZERO V230
0x286: V232 = ISZERO V231
0x287: V233 = 0x28f
0x28a: JUMPI 0x28f V232
---
Entry stack: [V10, 0xb0, V61, V64]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0x28b
[0x28b:0x28e]
---
Predecessors: [0x252]
Successors: []
---
0x28b PUSH1 0x0
0x28d DUP1
0x28e REVERT
---
0x28b: V234 = 0x0
0x28e: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V61, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V61, V64]

================================

Block 0x28f
[0x28f:0x28f]
---
Predecessors: [0x203, 0x252, 0x5d7]
Successors: [0x290]
---
0x28f JUMPDEST
---
0x28f: JUMPDEST 
---
Entry stack: [V10, 0xb0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, S1, S0]

================================

Block 0x290
[0x290:0x293]
---
Predecessors: [0x28f]
Successors: [0xb0]
---
0x290 JUMPDEST
0x291 POP
0x292 POP
0x293 JUMP
---
0x290: JUMPDEST 
0x293: JUMP 0xb0
---
Entry stack: [V10, 0xb0, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x294
[0x294:0x2aa]
---
Predecessors: [0xda]
Successors: [0x2ab, 0x2af]
---
0x294 JUMPDEST
0x295 PUSH1 0x2
0x297 SLOAD
0x298 CALLER
0x299 PUSH1 0x1
0x29b PUSH1 0xa0
0x29d PUSH1 0x2
0x29f EXP
0x2a0 SUB
0x2a1 SWAP1
0x2a2 DUP2
0x2a3 AND
0x2a4 SWAP2
0x2a5 AND
0x2a6 EQ
0x2a7 PUSH2 0x2af
0x2aa JUMPI
---
0x294: JUMPDEST 
0x295: V235 = 0x2
0x297: V236 = S[0x2]
0x298: V237 = CALLER
0x299: V238 = 0x1
0x29b: V239 = 0xa0
0x29d: V240 = 0x2
0x29f: V241 = EXP 0x2 0xa0
0x2a0: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a3: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x2a5: V244 = AND V236 0xffffffffffffffffffffffffffffffffffffffff
0x2a6: V245 = EQ V244 V243
0x2a7: V246 = 0x2af
0x2aa: JUMPI 0x2af V245
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x2ab
[0x2ab:0x2ae]
---
Predecessors: [0x294]
Successors: []
---
0x2ab PUSH1 0x0
0x2ad DUP1
0x2ae REVERT
---
0x2ab: V247 = 0x0
0x2ae: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x2af
[0x2af:0x2b1]
---
Predecessors: [0x294]
Successors: [0x2b2]
---
0x2af JUMPDEST
0x2b0 PUSH1 0x0
---
0x2af: JUMPDEST 
0x2b0: V248 = 0x0
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xb0, V74, V76, 0x0]

================================

Block 0x2b2
[0x2b2:0x2c7]
---
Predecessors: [0x2af]
Successors: [0x2c8, 0x2c9]
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x12
0x2b5 SLOAD
0x2b6 PUSH3 0x10000
0x2ba SWAP1
0x2bb DIV
0x2bc PUSH1 0xff
0x2be AND
0x2bf PUSH1 0x2
0x2c1 DUP2
0x2c2 GT
0x2c3 ISZERO
0x2c4 PUSH2 0x2c9
0x2c7 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V249 = 0x12
0x2b5: V250 = S[0x12]
0x2b6: V251 = 0x10000
0x2bb: V252 = DIV V250 0x10000
0x2bc: V253 = 0xff
0x2be: V254 = AND 0xff V252
0x2bf: V255 = 0x2
0x2c2: V256 = GT V254 0x2
0x2c3: V257 = ISZERO V256
0x2c4: V258 = 0x2c9
0x2c7: JUMPI 0x2c9 V257
---
Entry stack: [V10, 0xb0, V74, V76, 0x0]
Stack pops: 0
Stack additions: [V254]
Exit stack: [V10, 0xb0, V74, V76, 0x0, V254]

================================

Block 0x2c8
[0x2c8:0x2c8]
---
Predecessors: [0x2b2]
Successors: []
---
0x2c8 INVALID
---
0x2c8: INVALID 
---
Entry stack: [V10, 0xb0, V74, V76, 0x0, V254]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76, 0x0, V254]

================================

Block 0x2c9
[0x2c9:0x2ce]
---
Predecessors: [0x2b2]
Successors: [0x2cf, 0x2d3]
---
0x2c9 JUMPDEST
0x2ca EQ
0x2cb PUSH2 0x2d3
0x2ce JUMPI
---
0x2c9: JUMPDEST 
0x2ca: V259 = EQ V254 0x0
0x2cb: V260 = 0x2d3
0x2ce: JUMPI 0x2d3 V259
---
Entry stack: [V10, 0xb0, V74, V76, 0x0, V254]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x2cf
[0x2cf:0x2d2]
---
Predecessors: [0x2c9]
Successors: []
---
0x2cf PUSH1 0x0
0x2d1 DUP1
0x2d2 REVERT
---
0x2cf: V261 = 0x0
0x2d2: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x2d3
[0x2d3:0x2e5]
---
Predecessors: [0x2c9]
Successors: [0x2e6, 0x2ea]
---
0x2d3 JUMPDEST
0x2d4 PUSH1 0x1
0x2d6 PUSH1 0xa0
0x2d8 PUSH1 0x2
0x2da EXP
0x2db SUB
0x2dc ADDRESS
0x2dd AND
0x2de BALANCE
0x2df DUP2
0x2e0 GT
0x2e1 ISZERO
0x2e2 PUSH2 0x2ea
0x2e5 JUMPI
---
0x2d3: JUMPDEST 
0x2d4: V262 = 0x1
0x2d6: V263 = 0xa0
0x2d8: V264 = 0x2
0x2da: V265 = EXP 0x2 0xa0
0x2db: V266 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2dc: V267 = ADDRESS
0x2dd: V268 = AND V267 0xffffffffffffffffffffffffffffffffffffffff
0x2de: V269 = BALANCE V268
0x2e0: V270 = GT V76 V269
0x2e1: V271 = ISZERO V270
0x2e2: V272 = 0x2ea
0x2e5: JUMPI 0x2ea V271
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x2e6
[0x2e6:0x2e9]
---
Predecessors: [0x2d3]
Successors: []
---
0x2e6 PUSH1 0x0
0x2e8 DUP1
0x2e9 REVERT
---
0x2e6: V273 = 0x0
0x2e9: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x2ea
[0x2ea:0x2fa]
---
Predecessors: [0x2d3]
Successors: [0x2fb, 0x2ff]
---
0x2ea JUMPDEST
0x2eb PUSH1 0x1
0x2ed PUSH1 0xa0
0x2ef PUSH1 0x2
0x2f1 EXP
0x2f2 SUB
0x2f3 DUP3
0x2f4 AND
0x2f5 ISZERO
0x2f6 ISZERO
0x2f7 PUSH2 0x2ff
0x2fa JUMPI
---
0x2ea: JUMPDEST 
0x2eb: V274 = 0x1
0x2ed: V275 = 0xa0
0x2ef: V276 = 0x2
0x2f1: V277 = EXP 0x2 0xa0
0x2f2: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f4: V279 = AND V74 0xffffffffffffffffffffffffffffffffffffffff
0x2f5: V280 = ISZERO V279
0x2f6: V281 = ISZERO V280
0x2f7: V282 = 0x2ff
0x2fa: JUMPI 0x2ff V281
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x2fb
[0x2fb:0x2fe]
---
Predecessors: [0x2ea]
Successors: []
---
0x2fb PUSH1 0x0
0x2fd DUP1
0x2fe REVERT
---
0x2fb: V283 = 0x0
0x2fe: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x2ff
[0x2ff:0x32b]
---
Predecessors: [0x2ea]
Successors: [0x32c, 0x330]
---
0x2ff JUMPDEST
0x300 PUSH1 0x1
0x302 PUSH1 0xa0
0x304 PUSH1 0x2
0x306 EXP
0x307 SUB
0x308 DUP3
0x309 AND
0x30a DUP2
0x30b ISZERO
0x30c PUSH2 0x8fc
0x30f MUL
0x310 DUP3
0x311 PUSH1 0x40
0x313 MLOAD
0x314 PUSH1 0x0
0x316 PUSH1 0x40
0x318 MLOAD
0x319 DUP1
0x31a DUP4
0x31b SUB
0x31c DUP2
0x31d DUP6
0x31e DUP9
0x31f DUP9
0x320 CALL
0x321 SWAP4
0x322 POP
0x323 POP
0x324 POP
0x325 POP
0x326 ISZERO
0x327 ISZERO
0x328 PUSH2 0x330
0x32b JUMPI
---
0x2ff: JUMPDEST 
0x300: V284 = 0x1
0x302: V285 = 0xa0
0x304: V286 = 0x2
0x306: V287 = EXP 0x2 0xa0
0x307: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x309: V289 = AND V74 0xffffffffffffffffffffffffffffffffffffffff
0x30b: V290 = ISZERO V76
0x30c: V291 = 0x8fc
0x30f: V292 = MUL 0x8fc V290
0x311: V293 = 0x40
0x313: V294 = M[0x40]
0x314: V295 = 0x0
0x316: V296 = 0x40
0x318: V297 = M[0x40]
0x31b: V298 = SUB V294 V297
0x320: V299 = CALL V292 V289 V76 V297 V298 V297 0x0
0x326: V300 = ISZERO V299
0x327: V301 = ISZERO V300
0x328: V302 = 0x330
0x32b: JUMPI 0x330 V301
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x32c
[0x32c:0x32f]
---
Predecessors: [0x2ff]
Successors: []
---
0x32c PUSH1 0x0
0x32e DUP1
0x32f REVERT
---
0x32c: V303 = 0x0
0x32f: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x330
[0x330:0x334]
---
Predecessors: [0x2ff]
Successors: [0x335]
---
0x330 JUMPDEST
0x331 TIMESTAMP
0x332 PUSH1 0x11
0x334 SSTORE
---
0x330: JUMPDEST 
0x331: V304 = TIMESTAMP
0x332: V305 = 0x11
0x334: S[0x11] = V304
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x335
[0x335:0x335]
---
Predecessors: [0x330]
Successors: [0x336]
---
0x335 JUMPDEST
---
0x335: JUMPDEST 
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V74, V76]

================================

Block 0x336
[0x336:0x339]
---
Predecessors: [0x335]
Successors: [0xb0]
---
0x336 JUMPDEST
0x337 POP
0x338 POP
0x339 JUMP
---
0x336: JUMPDEST 
0x339: JUMP 0xb0
---
Entry stack: [V10, 0xb0, V74, V76]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x33a
[0x33a:0x36f]
---
Predecessors: [0xfe]
Successors: [0x370, 0x374]
---
0x33a JUMPDEST
0x33b PUSH1 0x3
0x33d SLOAD
0x33e CALLER
0x33f PUSH1 0x40
0x341 MLOAD
0x342 PUSH1 0x1
0x344 PUSH1 0xa0
0x346 PUSH1 0x2
0x348 EXP
0x349 SUB
0x34a SWAP2
0x34b SWAP1
0x34c SWAP2
0x34d AND
0x34e PUSH13 0x1000000000000000000000000
0x35c MUL
0x35d DUP2
0x35e MSTORE
0x35f PUSH1 0x14
0x361 ADD
0x362 PUSH1 0x40
0x364 MLOAD
0x365 SWAP1
0x366 DUP2
0x367 SWAP1
0x368 SUB
0x369 SWAP1
0x36a SHA3
0x36b EQ
0x36c PUSH2 0x374
0x36f JUMPI
---
0x33a: JUMPDEST 
0x33b: V306 = 0x3
0x33d: V307 = S[0x3]
0x33e: V308 = CALLER
0x33f: V309 = 0x40
0x341: V310 = M[0x40]
0x342: V311 = 0x1
0x344: V312 = 0xa0
0x346: V313 = 0x2
0x348: V314 = EXP 0x2 0xa0
0x349: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34d: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x34e: V317 = 0x1000000000000000000000000
0x35c: V318 = MUL 0x1000000000000000000000000 V316
0x35e: M[V310] = V318
0x35f: V319 = 0x14
0x361: V320 = ADD 0x14 V310
0x362: V321 = 0x40
0x364: V322 = M[0x40]
0x368: V323 = SUB V320 V322
0x36a: V324 = SHA3 V322 V323
0x36b: V325 = EQ V324 V307
0x36c: V326 = 0x374
0x36f: JUMPI 0x374 V325
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x370
[0x370:0x373]
---
Predecessors: [0x33a]
Successors: []
---
0x370 PUSH1 0x0
0x372 DUP1
0x373 REVERT
---
0x370: V327 = 0x0
0x373: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x374
[0x374:0x376]
---
Predecessors: [0x33a]
Successors: [0x377]
---
0x374 JUMPDEST
0x375 PUSH1 0x1
---
0x374: JUMPDEST 
0x375: V328 = 0x1
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V10, 0xb0, 0x1]

================================

Block 0x377
[0x377:0x38c]
---
Predecessors: [0x374]
Successors: [0x38d, 0x38e]
---
0x377 JUMPDEST
0x378 PUSH1 0x12
0x37a SLOAD
0x37b PUSH3 0x10000
0x37f SWAP1
0x380 DIV
0x381 PUSH1 0xff
0x383 AND
0x384 PUSH1 0x2
0x386 DUP2
0x387 GT
0x388 ISZERO
0x389 PUSH2 0x38e
0x38c JUMPI
---
0x377: JUMPDEST 
0x378: V329 = 0x12
0x37a: V330 = S[0x12]
0x37b: V331 = 0x10000
0x380: V332 = DIV V330 0x10000
0x381: V333 = 0xff
0x383: V334 = AND 0xff V332
0x384: V335 = 0x2
0x387: V336 = GT V334 0x2
0x388: V337 = ISZERO V336
0x389: V338 = 0x38e
0x38c: JUMPI 0x38e V337
---
Entry stack: [V10, 0xb0, 0x1]
Stack pops: 0
Stack additions: [V334]
Exit stack: [V10, 0xb0, 0x1, V334]

================================

Block 0x38d
[0x38d:0x38d]
---
Predecessors: [0x377]
Successors: []
---
0x38d INVALID
---
0x38d: INVALID 
---
Entry stack: [V10, 0xb0, 0x1, V334]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, 0x1, V334]

================================

Block 0x38e
[0x38e:0x393]
---
Predecessors: [0x377]
Successors: [0x394, 0x3b5]
---
0x38e JUMPDEST
0x38f EQ
0x390 PUSH2 0x3b5
0x393 JUMPI
---
0x38e: JUMPDEST 
0x38f: V339 = EQ V334 0x1
0x390: V340 = 0x3b5
0x393: JUMPI 0x3b5 V339
---
Entry stack: [V10, 0xb0, 0x1, V334]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x394
[0x394:0x3aa]
---
Predecessors: [0x38e]
Successors: [0x3ab]
---
0x394 TIMESTAMP
0x395 PUSH1 0xf
0x397 SSTORE
0x398 PUSH1 0x12
0x39a DUP1
0x39b SLOAD
0x39c PUSH1 0x1
0x39e SWAP2
0x39f SWAP1
0x3a0 PUSH3 0xff0000
0x3a4 NOT
0x3a5 AND
0x3a6 PUSH3 0x10000
0x3aa DUP4
---
0x394: V341 = TIMESTAMP
0x395: V342 = 0xf
0x397: S[0xf] = V341
0x398: V343 = 0x12
0x39b: V344 = S[0x12]
0x39c: V345 = 0x1
0x3a0: V346 = 0xff0000
0x3a4: V347 = NOT 0xff0000
0x3a5: V348 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V344
0x3a6: V349 = 0x10000
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: [0x1, 0x12, V348, 0x10000, 0x1]
Exit stack: [V10, 0xb0, 0x1, 0x12, V348, 0x10000, 0x1]

================================

Block 0x3ab
[0x3ab:0x3b4]
---
Predecessors: [0x394]
Successors: [0x428]
---
0x3ab JUMPDEST
0x3ac MUL
0x3ad OR
0x3ae SWAP1
0x3af SSTORE
0x3b0 POP
0x3b1 PUSH2 0x428
0x3b4 JUMP
---
0x3ab: JUMPDEST 
0x3ac: V350 = MUL 0x1 0x10000
0x3ad: V351 = OR 0x10000 V348
0x3af: S[0x12] = V351
0x3b1: V352 = 0x428
0x3b4: JUMP 0x428
---
Entry stack: [V10, 0xb0, 0x1, 0x12, V348, 0x10000, 0x1]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x3b5
[0x3b5:0x3c1]
---
Predecessors: [0x38e]
Successors: [0x3c2, 0x3c6]
---
0x3b5 JUMPDEST
0x3b6 PUSH1 0xf
0x3b8 SLOAD
0x3b9 PUSH1 0x3c
0x3bb ADD
0x3bc TIMESTAMP
0x3bd GT
0x3be PUSH2 0x3c6
0x3c1 JUMPI
---
0x3b5: JUMPDEST 
0x3b6: V353 = 0xf
0x3b8: V354 = S[0xf]
0x3b9: V355 = 0x3c
0x3bb: V356 = ADD 0x3c V354
0x3bc: V357 = TIMESTAMP
0x3bd: V358 = GT V357 V356
0x3be: V359 = 0x3c6
0x3c1: JUMPI 0x3c6 V358
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x3c2
[0x3c2:0x3c5]
---
Predecessors: [0x3b5]
Successors: [0x428]
---
0x3c2 PUSH2 0x428
0x3c5 JUMP
---
0x3c2: V360 = 0x428
0x3c5: JUMP 0x428
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x3c6
[0x3c6:0x3c6]
---
Predecessors: [0x3b5]
Successors: [0x3c7]
---
0x3c6 JUMPDEST
---
0x3c6: JUMPDEST 
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x3c7
[0x3c7:0x3c9]
---
Predecessors: [0x3c6]
Successors: [0x3ca]
---
0x3c7 JUMPDEST
0x3c8 PUSH1 0x1
---
0x3c7: JUMPDEST 
0x3c8: V361 = 0x1
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V10, 0xb0, 0x1]

================================

Block 0x3ca
[0x3ca:0x3df]
---
Predecessors: [0x3c7]
Successors: [0x3e0, 0x3e1]
---
0x3ca JUMPDEST
0x3cb PUSH1 0x12
0x3cd SLOAD
0x3ce PUSH3 0x10000
0x3d2 SWAP1
0x3d3 DIV
0x3d4 PUSH1 0xff
0x3d6 AND
0x3d7 PUSH1 0x2
0x3d9 DUP2
0x3da GT
0x3db ISZERO
0x3dc PUSH2 0x3e1
0x3df JUMPI
---
0x3ca: JUMPDEST 
0x3cb: V362 = 0x12
0x3cd: V363 = S[0x12]
0x3ce: V364 = 0x10000
0x3d3: V365 = DIV V363 0x10000
0x3d4: V366 = 0xff
0x3d6: V367 = AND 0xff V365
0x3d7: V368 = 0x2
0x3da: V369 = GT V367 0x2
0x3db: V370 = ISZERO V369
0x3dc: V371 = 0x3e1
0x3df: JUMPI 0x3e1 V370
---
Entry stack: [V10, 0xb0, 0x1]
Stack pops: 0
Stack additions: [V367]
Exit stack: [V10, 0xb0, 0x1, V367]

================================

Block 0x3e0
[0x3e0:0x3e0]
---
Predecessors: [0x3ca]
Successors: []
---
0x3e0 INVALID
---
0x3e0: INVALID 
---
Entry stack: [V10, 0xb0, 0x1, V367]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, 0x1, V367]

================================

Block 0x3e1
[0x3e1:0x3e6]
---
Predecessors: [0x3ca]
Successors: [0x3e7, 0x3eb]
---
0x3e1 JUMPDEST
0x3e2 EQ
0x3e3 PUSH2 0x3eb
0x3e6 JUMPI
---
0x3e1: JUMPDEST 
0x3e2: V372 = EQ V367 0x1
0x3e3: V373 = 0x3eb
0x3e6: JUMPI 0x3eb V372
---
Entry stack: [V10, 0xb0, 0x1, V367]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x3e7
[0x3e7:0x3ea]
---
Predecessors: [0x3e1]
Successors: []
---
0x3e7 PUSH1 0x0
0x3e9 DUP1
0x3ea REVERT
---
0x3e7: V374 = 0x0
0x3ea: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x3eb
[0x3eb:0x423]
---
Predecessors: [0x3e1]
Successors: [0x424, 0x428]
---
0x3eb JUMPDEST
0x3ec CALLER
0x3ed PUSH1 0x1
0x3ef PUSH1 0xa0
0x3f1 PUSH1 0x2
0x3f3 EXP
0x3f4 SUB
0x3f5 AND
0x3f6 PUSH2 0x8fc
0x3f9 ADDRESS
0x3fa PUSH1 0x1
0x3fc PUSH1 0xa0
0x3fe PUSH1 0x2
0x400 EXP
0x401 SUB
0x402 AND
0x403 BALANCE
0x404 SWAP1
0x405 DUP2
0x406 ISZERO
0x407 MUL
0x408 SWAP1
0x409 PUSH1 0x40
0x40b MLOAD
0x40c PUSH1 0x0
0x40e PUSH1 0x40
0x410 MLOAD
0x411 DUP1
0x412 DUP4
0x413 SUB
0x414 DUP2
0x415 DUP6
0x416 DUP9
0x417 DUP9
0x418 CALL
0x419 SWAP4
0x41a POP
0x41b POP
0x41c POP
0x41d POP
0x41e ISZERO
0x41f ISZERO
0x420 PUSH2 0x428
0x423 JUMPI
---
0x3eb: JUMPDEST 
0x3ec: V375 = CALLER
0x3ed: V376 = 0x1
0x3ef: V377 = 0xa0
0x3f1: V378 = 0x2
0x3f3: V379 = EXP 0x2 0xa0
0x3f4: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f5: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x3f6: V382 = 0x8fc
0x3f9: V383 = ADDRESS
0x3fa: V384 = 0x1
0x3fc: V385 = 0xa0
0x3fe: V386 = 0x2
0x400: V387 = EXP 0x2 0xa0
0x401: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x402: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x403: V390 = BALANCE V389
0x406: V391 = ISZERO V390
0x407: V392 = MUL V391 0x8fc
0x409: V393 = 0x40
0x40b: V394 = M[0x40]
0x40c: V395 = 0x0
0x40e: V396 = 0x40
0x410: V397 = M[0x40]
0x413: V398 = SUB V394 V397
0x418: V399 = CALL V392 V381 V390 V397 V398 V397 0x0
0x41e: V400 = ISZERO V399
0x41f: V401 = ISZERO V400
0x420: V402 = 0x428
0x423: JUMPI 0x428 V401
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x424
[0x424:0x427]
---
Predecessors: [0x3eb]
Successors: []
---
0x424 PUSH1 0x0
0x426 DUP1
0x427 REVERT
---
0x424: V403 = 0x0
0x427: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x428
[0x428:0x428]
---
Predecessors: [0x3ab, 0x3c2, 0x3eb]
Successors: [0x429]
---
0x428 JUMPDEST
---
0x428: JUMPDEST 
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x429
[0x429:0x429]
---
Predecessors: [0x428]
Successors: [0x42a]
---
0x429 JUMPDEST
---
0x429: JUMPDEST 
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x42a
[0x42a:0x42b]
---
Predecessors: [0x429]
Successors: [0xb0]
---
0x42a JUMPDEST
0x42b JUMP
---
0x42a: JUMPDEST 
0x42b: JUMP 0xb0
---
Entry stack: [V10, 0xb0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x42c
[0x42c:0x43a]
---
Predecessors: [0x113]
Successors: [0x11b]
---
0x42c JUMPDEST
0x42d PUSH1 0x2
0x42f SLOAD
0x430 PUSH1 0x1
0x432 PUSH1 0xa0
0x434 PUSH1 0x2
0x436 EXP
0x437 SUB
0x438 AND
0x439 DUP2
0x43a JUMP
---
0x42c: JUMPDEST 
0x42d: V404 = 0x2
0x42f: V405 = S[0x2]
0x430: V406 = 0x1
0x432: V407 = 0xa0
0x434: V408 = 0x2
0x436: V409 = EXP 0x2 0xa0
0x437: V410 = SUB 0x10000000000000000000000000000000000000000 0x1
0x438: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x43a: JUMP 0x11b
---
Entry stack: [V10, 0x11b]
Stack pops: 1
Stack additions: [S0, V411]
Exit stack: [V10, 0x11b, V411]

================================

Block 0x43b
[0x43b:0x451]
---
Predecessors: [0x142]
Successors: [0x452, 0x456]
---
0x43b JUMPDEST
0x43c PUSH1 0x2
0x43e SLOAD
0x43f CALLER
0x440 PUSH1 0x1
0x442 PUSH1 0xa0
0x444 PUSH1 0x2
0x446 EXP
0x447 SUB
0x448 SWAP1
0x449 DUP2
0x44a AND
0x44b SWAP2
0x44c AND
0x44d EQ
0x44e PUSH2 0x456
0x451 JUMPI
---
0x43b: JUMPDEST 
0x43c: V412 = 0x2
0x43e: V413 = S[0x2]
0x43f: V414 = CALLER
0x440: V415 = 0x1
0x442: V416 = 0xa0
0x444: V417 = 0x2
0x446: V418 = EXP 0x2 0xa0
0x447: V419 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44a: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x44c: V421 = AND V413 0xffffffffffffffffffffffffffffffffffffffff
0x44d: V422 = EQ V421 V420
0x44e: V423 = 0x456
0x451: JUMPI 0x456 V422
---
Entry stack: [V10, 0xb0, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V111]

================================

Block 0x452
[0x452:0x455]
---
Predecessors: [0x43b]
Successors: []
---
0x452 PUSH1 0x0
0x454 DUP1
0x455 REVERT
---
0x452: V424 = 0x0
0x455: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V111]

================================

Block 0x456
[0x456:0x458]
---
Predecessors: [0x43b]
Successors: [0x459]
---
0x456 JUMPDEST
0x457 PUSH1 0x0
---
0x456: JUMPDEST 
0x457: V425 = 0x0
---
Entry stack: [V10, 0xb0, V111]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xb0, V111, 0x0]

================================

Block 0x459
[0x459:0x46e]
---
Predecessors: [0x456]
Successors: [0x46f, 0x470]
---
0x459 JUMPDEST
0x45a PUSH1 0x12
0x45c SLOAD
0x45d PUSH3 0x10000
0x461 SWAP1
0x462 DIV
0x463 PUSH1 0xff
0x465 AND
0x466 PUSH1 0x2
0x468 DUP2
0x469 GT
0x46a ISZERO
0x46b PUSH2 0x470
0x46e JUMPI
---
0x459: JUMPDEST 
0x45a: V426 = 0x12
0x45c: V427 = S[0x12]
0x45d: V428 = 0x10000
0x462: V429 = DIV V427 0x10000
0x463: V430 = 0xff
0x465: V431 = AND 0xff V429
0x466: V432 = 0x2
0x469: V433 = GT V431 0x2
0x46a: V434 = ISZERO V433
0x46b: V435 = 0x470
0x46e: JUMPI 0x470 V434
---
Entry stack: [V10, 0xb0, V111, 0x0]
Stack pops: 0
Stack additions: [V431]
Exit stack: [V10, 0xb0, V111, 0x0, V431]

================================

Block 0x46f
[0x46f:0x46f]
---
Predecessors: [0x459]
Successors: []
---
0x46f INVALID
---
0x46f: INVALID 
---
Entry stack: [V10, 0xb0, V111, 0x0, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V111, 0x0, V431]

================================

Block 0x470
[0x470:0x475]
---
Predecessors: [0x459]
Successors: [0x476, 0x47a]
---
0x470 JUMPDEST
0x471 EQ
0x472 PUSH2 0x47a
0x475 JUMPI
---
0x470: JUMPDEST 
0x471: V436 = EQ V431 0x0
0x472: V437 = 0x47a
0x475: JUMPI 0x47a V436
---
Entry stack: [V10, 0xb0, V111, 0x0, V431]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xb0, V111]

================================

Block 0x476
[0x476:0x479]
---
Predecessors: [0x470]
Successors: []
---
0x476 PUSH1 0x0
0x478 DUP1
0x479 REVERT
---
0x476: V438 = 0x0
0x479: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V111]

================================

Block 0x47a
[0x47a:0x499]
---
Predecessors: [0x470]
Successors: [0x49a]
---
0x47a JUMPDEST
0x47b PUSH1 0x12
0x47d DUP1
0x47e SLOAD
0x47f PUSH1 0xff
0x481 DUP2
0x482 AND
0x483 ISZERO
0x484 PUSH1 0xff
0x486 NOT
0x487 SWAP1
0x488 SWAP2
0x489 AND
0x48a OR
0x48b PUSH2 0xff00
0x48e NOT
0x48f AND
0x490 PUSH2 0x100
0x493 DUP4
0x494 ISZERO
0x495 ISZERO
0x496 MUL
0x497 OR
0x498 SWAP1
0x499 SSTORE
---
0x47a: JUMPDEST 
0x47b: V439 = 0x12
0x47e: V440 = S[0x12]
0x47f: V441 = 0xff
0x482: V442 = AND V440 0xff
0x483: V443 = ISZERO V442
0x484: V444 = 0xff
0x486: V445 = NOT 0xff
0x489: V446 = AND V440 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x48a: V447 = OR V446 V443
0x48b: V448 = 0xff00
0x48e: V449 = NOT 0xff00
0x48f: V450 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V447
0x490: V451 = 0x100
0x494: V452 = ISZERO V111
0x495: V453 = ISZERO V452
0x496: V454 = MUL V453 0x100
0x497: V455 = OR V454 V450
0x499: S[0x12] = V455
---
Entry stack: [V10, 0xb0, V111]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xb0, V111]

================================

Block 0x49a
[0x49a:0x49a]
---
Predecessors: [0x47a]
Successors: [0x49b]
---
0x49a JUMPDEST
---
0x49a: JUMPDEST 
---
Entry stack: [V10, 0xb0, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V111]

================================

Block 0x49b
[0x49b:0x49d]
---
Predecessors: [0x49a]
Successors: [0xb0]
---
0x49b JUMPDEST
0x49c POP
0x49d JUMP
---
0x49b: JUMPDEST 
0x49d: JUMP 0xb0
---
Entry stack: [V10, 0xb0, V111]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x49e
[0x49e:0x4b4]
---
Predecessors: [0x15c]
Successors: [0x4b5]
---
0x49e JUMPDEST
0x49f PUSH1 0x0
0x4a1 SLOAD
0x4a2 DUP2
0x4a3 SWAP1
0x4a4 DUP2
0x4a5 CALLER
0x4a6 PUSH1 0x40
0x4a8 MLOAD
0x4a9 DUP1
0x4aa DUP4
0x4ab DUP1
0x4ac MLOAD
0x4ad SWAP1
0x4ae PUSH1 0x20
0x4b0 ADD
0x4b1 SWAP1
0x4b2 DUP1
0x4b3 DUP4
0x4b4 DUP4
---
0x49e: JUMPDEST 
0x49f: V456 = 0x0
0x4a1: V457 = S[0x0]
0x4a5: V458 = CALLER
0x4a6: V459 = 0x40
0x4a8: V460 = M[0x40]
0x4ac: V461 = M[V131]
0x4ae: V462 = 0x20
0x4b0: V463 = ADD 0x20 V131
---
Entry stack: [V10, 0xb0, V131]
Stack pops: 1
Stack additions: [S0, S0, V457, S0, V458, V460, V460, V463, V461, V461, V460, V463]
Exit stack: [V10, 0xb0, V131, V131, V457, V131, V458, V460, V460, V463, V461, V461, V460, V463]

================================

Block 0x4b5
[0x4b5:0x4bd]
---
Predecessors: [0x49e, 0x4c2]
Successors: [0x4be, 0x4d5]
---
0x4b5 JUMPDEST
0x4b6 PUSH1 0x20
0x4b8 DUP4
0x4b9 LT
0x4ba PUSH2 0x4d5
0x4bd JUMPI
---
0x4b5: JUMPDEST 
0x4b6: V464 = 0x20
0x4b9: V465 = LT S2 0x20
0x4ba: V466 = 0x4d5
0x4bd: JUMPI 0x4d5 V465
---
Entry stack: [V10, 0xb0, V131, V131, V457, V131, V458, V460, V460, V463, V461, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xb0, V131, V131, V457, V131, V458, V460, V460, V463, V461, S2, S1, S0]

================================

Block 0x4be
[0x4be:0x4c1]
---
Predecessors: [0x4b5]
Successors: [0x4c2]
---
0x4be DUP1
0x4bf MLOAD
0x4c0 DUP3
0x4c1 MSTORE
---
0x4bf: V467 = M[S0]
0x4c1: M[S1] = V467
---
Entry stack: [V10, 0xb0, V131, V131, V457, V131, V458, V460, V460, V463, V461, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xb0, V131, V131, V457, V131, V458, V460, V460, V463, V461, S2, S1, S0]

================================

Block 0x4c2
[0x4c2:0x4d4]
---
Predecessors: [0x4be]
Successors: [0x4b5]
---
0x4c2 JUMPDEST
0x4c3 PUSH1 0x1f
0x4c5 NOT
0x4c6 SWAP1
0x4c7 SWAP3
0x4c8 ADD
0x4c9 SWAP2
0x4ca PUSH1 0x20
0x4cc SWAP2
0x4cd DUP3
0x4ce ADD
0x4cf SWAP2
0x4d0 ADD
0x4d1 PUSH2 0x4b5
0x4d4 JUMP
---
0x4c2: JUMPDEST 
0x4c3: V468 = 0x1f
0x4c5: V469 = NOT 0x1f
0x4c8: V470 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x4ca: V471 = 0x20
0x4ce: V472 = ADD 0x20 S1
0x4d0: V473 = ADD 0x20 S0
0x4d1: V474 = 0x4b5
0x4d4: JUMP 0x4b5
---
Entry stack: [V10, 0xb0, V131, V131, V457, V131, V458, V460, V460, V463, V461, S2, S1, S0]
Stack pops: 3
Stack additions: [V470, V472, V473]
Exit stack: [V10, 0xb0, V131, V131, V457, V131, V458, V460, V460, V463, V461, V470, V472, V473]

================================

Block 0x4d5
[0x4d5:0x530]
---
Predecessors: [0x4b5]
Successors: [0x531, 0x535]
---
0x4d5 JUMPDEST
0x4d6 PUSH1 0x1
0x4d8 DUP4
0x4d9 PUSH1 0x20
0x4db SUB
0x4dc PUSH2 0x100
0x4df EXP
0x4e0 SUB
0x4e1 DUP1
0x4e2 NOT
0x4e3 DUP3
0x4e4 MLOAD
0x4e5 AND
0x4e6 DUP2
0x4e7 DUP5
0x4e8 MLOAD
0x4e9 AND
0x4ea DUP1
0x4eb DUP3
0x4ec OR
0x4ed DUP6
0x4ee MSTORE
0x4ef POP
0x4f0 POP
0x4f1 POP
0x4f2 POP
0x4f3 POP
0x4f4 POP
0x4f5 SWAP1
0x4f6 POP
0x4f7 ADD
0x4f8 DUP3
0x4f9 PUSH1 0x1
0x4fb PUSH1 0xa0
0x4fd PUSH1 0x2
0x4ff EXP
0x500 SUB
0x501 AND
0x502 PUSH1 0x1
0x504 PUSH1 0xa0
0x506 PUSH1 0x2
0x508 EXP
0x509 SUB
0x50a AND
0x50b PUSH13 0x1000000000000000000000000
0x519 MUL
0x51a DUP2
0x51b MSTORE
0x51c PUSH1 0x14
0x51e ADD
0x51f SWAP3
0x520 POP
0x521 POP
0x522 POP
0x523 PUSH1 0x40
0x525 MLOAD
0x526 SWAP1
0x527 DUP2
0x528 SWAP1
0x529 SUB
0x52a SWAP1
0x52b SHA3
0x52c EQ
0x52d PUSH2 0x535
0x530 JUMPI
---
0x4d5: JUMPDEST 
0x4d6: V475 = 0x1
0x4d9: V476 = 0x20
0x4db: V477 = SUB 0x20 S2
0x4dc: V478 = 0x100
0x4df: V479 = EXP 0x100 V477
0x4e0: V480 = SUB V479 0x1
0x4e2: V481 = NOT V480
0x4e4: V482 = M[S0]
0x4e5: V483 = AND V482 V481
0x4e8: V484 = M[S1]
0x4e9: V485 = AND V484 V480
0x4ec: V486 = OR V483 V485
0x4ee: M[S1] = V486
0x4f7: V487 = ADD V461 V460
0x4f9: V488 = 0x1
0x4fb: V489 = 0xa0
0x4fd: V490 = 0x2
0x4ff: V491 = EXP 0x2 0xa0
0x500: V492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x501: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V458
0x502: V494 = 0x1
0x504: V495 = 0xa0
0x506: V496 = 0x2
0x508: V497 = EXP 0x2 0xa0
0x509: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50a: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V493
0x50b: V500 = 0x1000000000000000000000000
0x519: V501 = MUL 0x1000000000000000000000000 V499
0x51b: M[V487] = V501
0x51c: V502 = 0x14
0x51e: V503 = ADD 0x14 V487
0x523: V504 = 0x40
0x525: V505 = M[0x40]
0x529: V506 = SUB V503 V505
0x52b: V507 = SHA3 V505 V506
0x52c: V508 = EQ V507 V457
0x52d: V509 = 0x535
0x530: JUMPI 0x535 V508
---
Entry stack: [V10, 0xb0, V131, V131, V457, V131, V458, V460, V460, V463, V461, S2, S1, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x531
[0x531:0x534]
---
Predecessors: [0x4d5]
Successors: []
---
0x531 PUSH1 0x0
0x533 DUP1
0x534 REVERT
---
0x531: V510 = 0x0
0x534: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x535
[0x535:0x543]
---
Predecessors: [0x4d5]
Successors: [0x544, 0x548]
---
0x535 JUMPDEST
0x536 PUSH1 0x10
0x538 SLOAD
0x539 PUSH3 0x15180
0x53d ADD
0x53e TIMESTAMP
0x53f GT
0x540 PUSH2 0x548
0x543 JUMPI
---
0x535: JUMPDEST 
0x536: V511 = 0x10
0x538: V512 = S[0x10]
0x539: V513 = 0x15180
0x53d: V514 = ADD 0x15180 V512
0x53e: V515 = TIMESTAMP
0x53f: V516 = GT V515 V514
0x540: V517 = 0x548
0x543: JUMPI 0x548 V516
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x544
[0x544:0x547]
---
Predecessors: [0x535]
Successors: []
---
0x544 PUSH1 0x0
0x546 DUP1
0x547 REVERT
---
0x544: V518 = 0x0
0x547: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x548
[0x548:0x55b]
---
Predecessors: [0x535]
Successors: [0x55c]
---
0x548 JUMPDEST
0x549 PUSH1 0x4
0x54b SLOAD
0x54c DUP3
0x54d PUSH1 0x40
0x54f MLOAD
0x550 DUP1
0x551 DUP3
0x552 DUP1
0x553 MLOAD
0x554 SWAP1
0x555 PUSH1 0x20
0x557 ADD
0x558 SWAP1
0x559 DUP1
0x55a DUP4
0x55b DUP4
---
0x548: JUMPDEST 
0x549: V519 = 0x4
0x54b: V520 = S[0x4]
0x54d: V521 = 0x40
0x54f: V522 = M[0x40]
0x553: V523 = M[V131]
0x555: V524 = 0x20
0x557: V525 = ADD 0x20 V131
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 2
Stack additions: [S1, S0, V520, S1, V522, V522, V525, V523, V523, V522, V525]
Exit stack: [V10, 0xb0, V131, V131, V520, V131, V522, V522, V525, V523, V523, V522, V525]

================================

Block 0x55c
[0x55c:0x564]
---
Predecessors: [0x548, 0x569]
Successors: [0x565, 0x57c]
---
0x55c JUMPDEST
0x55d PUSH1 0x20
0x55f DUP4
0x560 LT
0x561 PUSH2 0x57c
0x564 JUMPI
---
0x55c: JUMPDEST 
0x55d: V526 = 0x20
0x560: V527 = LT S2 0x20
0x561: V528 = 0x57c
0x564: JUMPI 0x57c V527
---
Entry stack: [V10, 0xb0, V131, V131, V520, V131, V522, V522, V525, V523, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xb0, V131, V131, V520, V131, V522, V522, V525, V523, S2, S1, S0]

================================

Block 0x565
[0x565:0x568]
---
Predecessors: [0x55c]
Successors: [0x569]
---
0x565 DUP1
0x566 MLOAD
0x567 DUP3
0x568 MSTORE
---
0x566: V529 = M[S0]
0x568: M[S1] = V529
---
Entry stack: [V10, 0xb0, V131, V131, V520, V131, V522, V522, V525, V523, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xb0, V131, V131, V520, V131, V522, V522, V525, V523, S2, S1, S0]

================================

Block 0x569
[0x569:0x57b]
---
Predecessors: [0x565]
Successors: [0x55c]
---
0x569 JUMPDEST
0x56a PUSH1 0x1f
0x56c NOT
0x56d SWAP1
0x56e SWAP3
0x56f ADD
0x570 SWAP2
0x571 PUSH1 0x20
0x573 SWAP2
0x574 DUP3
0x575 ADD
0x576 SWAP2
0x577 ADD
0x578 PUSH2 0x55c
0x57b JUMP
---
0x569: JUMPDEST 
0x56a: V530 = 0x1f
0x56c: V531 = NOT 0x1f
0x56f: V532 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x571: V533 = 0x20
0x575: V534 = ADD 0x20 S1
0x577: V535 = ADD 0x20 S0
0x578: V536 = 0x55c
0x57b: JUMP 0x55c
---
Entry stack: [V10, 0xb0, V131, V131, V520, V131, V522, V522, V525, V523, S2, S1, S0]
Stack pops: 3
Stack additions: [V532, V534, V535]
Exit stack: [V10, 0xb0, V131, V131, V520, V131, V522, V522, V525, V523, V532, V534, V535]

================================

Block 0x57c
[0x57c:0x5ae]
---
Predecessors: [0x55c]
Successors: [0x5af, 0x5b3]
---
0x57c JUMPDEST
0x57d PUSH1 0x1
0x57f DUP4
0x580 PUSH1 0x20
0x582 SUB
0x583 PUSH2 0x100
0x586 EXP
0x587 SUB
0x588 DUP1
0x589 NOT
0x58a DUP3
0x58b MLOAD
0x58c AND
0x58d DUP2
0x58e DUP5
0x58f MLOAD
0x590 AND
0x591 OR
0x592 SWAP1
0x593 SWAP3
0x594 MSTORE
0x595 POP
0x596 POP
0x597 POP
0x598 SWAP2
0x599 SWAP1
0x59a SWAP2
0x59b ADD
0x59c SWAP3
0x59d POP
0x59e PUSH1 0x40
0x5a0 SWAP2
0x5a1 POP
0x5a2 POP
0x5a3 MLOAD
0x5a4 SWAP1
0x5a5 DUP2
0x5a6 SWAP1
0x5a7 SUB
0x5a8 SWAP1
0x5a9 SHA3
0x5aa EQ
0x5ab PUSH2 0x5b3
0x5ae JUMPI
---
0x57c: JUMPDEST 
0x57d: V537 = 0x1
0x580: V538 = 0x20
0x582: V539 = SUB 0x20 S2
0x583: V540 = 0x100
0x586: V541 = EXP 0x100 V539
0x587: V542 = SUB V541 0x1
0x589: V543 = NOT V542
0x58b: V544 = M[S0]
0x58c: V545 = AND V544 V543
0x58f: V546 = M[S1]
0x590: V547 = AND V546 V542
0x591: V548 = OR V547 V545
0x594: M[S1] = V548
0x59b: V549 = ADD V523 V522
0x59e: V550 = 0x40
0x5a3: V551 = M[0x40]
0x5a7: V552 = SUB V549 V551
0x5a9: V553 = SHA3 V551 V552
0x5aa: V554 = EQ V553 V520
0x5ab: V555 = 0x5b3
0x5ae: JUMPI 0x5b3 V554
---
Entry stack: [V10, 0xb0, V131, V131, V520, V131, V522, V522, V525, V523, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x5af
[0x5af:0x5b2]
---
Predecessors: [0x57c]
Successors: []
---
0x5af PUSH1 0x0
0x5b1 DUP1
0x5b2 REVERT
---
0x5af: V556 = 0x0
0x5b2: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x5b3
[0x5b3:0x5b5]
---
Predecessors: [0x57c]
Successors: [0x5b6]
---
0x5b3 JUMPDEST
0x5b4 PUSH1 0x2
---
0x5b3: JUMPDEST 
0x5b4: V557 = 0x2
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V10, 0xb0, V131, V131, 0x2]

================================

Block 0x5b6
[0x5b6:0x5cb]
---
Predecessors: [0x5b3]
Successors: [0x5cc, 0x5cd]
---
0x5b6 JUMPDEST
0x5b7 PUSH1 0x12
0x5b9 SLOAD
0x5ba PUSH3 0x10000
0x5be SWAP1
0x5bf DIV
0x5c0 PUSH1 0xff
0x5c2 AND
0x5c3 PUSH1 0x2
0x5c5 DUP2
0x5c6 GT
0x5c7 ISZERO
0x5c8 PUSH2 0x5cd
0x5cb JUMPI
---
0x5b6: JUMPDEST 
0x5b7: V558 = 0x12
0x5b9: V559 = S[0x12]
0x5ba: V560 = 0x10000
0x5bf: V561 = DIV V559 0x10000
0x5c0: V562 = 0xff
0x5c2: V563 = AND 0xff V561
0x5c3: V564 = 0x2
0x5c6: V565 = GT V563 0x2
0x5c7: V566 = ISZERO V565
0x5c8: V567 = 0x5cd
0x5cb: JUMPI 0x5cd V566
---
Entry stack: [V10, 0xb0, V131, V131, 0x2]
Stack pops: 0
Stack additions: [V563]
Exit stack: [V10, 0xb0, V131, V131, 0x2, V563]

================================

Block 0x5cc
[0x5cc:0x5cc]
---
Predecessors: [0x5b6]
Successors: []
---
0x5cc INVALID
---
0x5cc: INVALID 
---
Entry stack: [V10, 0xb0, V131, V131, 0x2, V563]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131, 0x2, V563]

================================

Block 0x5cd
[0x5cd:0x5d2]
---
Predecessors: [0x5b6]
Successors: [0x5d3, 0x5d7]
---
0x5cd JUMPDEST
0x5ce EQ
0x5cf PUSH2 0x5d7
0x5d2 JUMPI
---
0x5cd: JUMPDEST 
0x5ce: V568 = EQ V563 0x2
0x5cf: V569 = 0x5d7
0x5d2: JUMPI 0x5d7 V568
---
Entry stack: [V10, 0xb0, V131, V131, 0x2, V563]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x5d3
[0x5d3:0x5d6]
---
Predecessors: [0x5cd]
Successors: []
---
0x5d3 PUSH1 0x0
0x5d5 DUP1
0x5d6 REVERT
---
0x5d3: V570 = 0x0
0x5d6: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x5d7
[0x5d7:0x60f]
---
Predecessors: [0x5cd]
Successors: [0x28f, 0x610]
---
0x5d7 JUMPDEST
0x5d8 CALLER
0x5d9 PUSH1 0x1
0x5db PUSH1 0xa0
0x5dd PUSH1 0x2
0x5df EXP
0x5e0 SUB
0x5e1 AND
0x5e2 PUSH2 0x8fc
0x5e5 ADDRESS
0x5e6 PUSH1 0x1
0x5e8 PUSH1 0xa0
0x5ea PUSH1 0x2
0x5ec EXP
0x5ed SUB
0x5ee AND
0x5ef BALANCE
0x5f0 SWAP1
0x5f1 DUP2
0x5f2 ISZERO
0x5f3 MUL
0x5f4 SWAP1
0x5f5 PUSH1 0x40
0x5f7 MLOAD
0x5f8 PUSH1 0x0
0x5fa PUSH1 0x40
0x5fc MLOAD
0x5fd DUP1
0x5fe DUP4
0x5ff SUB
0x600 DUP2
0x601 DUP6
0x602 DUP9
0x603 DUP9
0x604 CALL
0x605 SWAP4
0x606 POP
0x607 POP
0x608 POP
0x609 POP
0x60a ISZERO
0x60b ISZERO
0x60c PUSH2 0x28f
0x60f JUMPI
---
0x5d7: JUMPDEST 
0x5d8: V571 = CALLER
0x5d9: V572 = 0x1
0x5db: V573 = 0xa0
0x5dd: V574 = 0x2
0x5df: V575 = EXP 0x2 0xa0
0x5e0: V576 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e1: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0x5e2: V578 = 0x8fc
0x5e5: V579 = ADDRESS
0x5e6: V580 = 0x1
0x5e8: V581 = 0xa0
0x5ea: V582 = 0x2
0x5ec: V583 = EXP 0x2 0xa0
0x5ed: V584 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ee: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V579
0x5ef: V586 = BALANCE V585
0x5f2: V587 = ISZERO V586
0x5f3: V588 = MUL V587 0x8fc
0x5f5: V589 = 0x40
0x5f7: V590 = M[0x40]
0x5f8: V591 = 0x0
0x5fa: V592 = 0x40
0x5fc: V593 = M[0x40]
0x5ff: V594 = SUB V590 V593
0x604: V595 = CALL V588 V577 V586 V593 V594 V593 0x0
0x60a: V596 = ISZERO V595
0x60b: V597 = ISZERO V596
0x60c: V598 = 0x28f
0x60f: JUMPI 0x28f V597
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x610
[0x610:0x613]
---
Predecessors: [0x5d7]
Successors: []
---
0x610 PUSH1 0x0
0x612 DUP1
0x613 REVERT
---
0x610: V599 = 0x0
0x613: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V131, V131]

================================

Block 0x614
[0x614:0x614]
---
Predecessors: []
Successors: [0x615]
---
0x614 JUMPDEST
---
0x614: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x615
[0x615:0x615]
---
Predecessors: [0x614]
Successors: [0x616]
---
0x615 JUMPDEST
---
0x615: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x616
[0x616:0x619]
---
Predecessors: [0x615]
Successors: []
Has unresolved jump.
---
0x616 JUMPDEST
0x617 POP
0x618 POP
0x619 JUMP
---
0x616: JUMPDEST 
0x619: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x61a
[0x61a:0x622]
---
Predecessors: [0x1af]
Successors: [0x1b7]
---
0x61a JUMPDEST
0x61b PUSH1 0x12
0x61d SLOAD
0x61e PUSH1 0xff
0x620 AND
0x621 DUP2
0x622 JUMP
---
0x61a: JUMPDEST 
0x61b: V600 = 0x12
0x61d: V601 = S[0x12]
0x61e: V602 = 0xff
0x620: V603 = AND 0xff V601
0x622: JUMP 0x1b7
---
Entry stack: [V10, 0x1b7]
Stack pops: 1
Stack additions: [S0, V603]
Exit stack: [V10, 0x1b7, V603]

================================

Block 0x623
[0x623:0x63e]
---
Predecessors: [0x1d6]
Successors: [0x63f, 0x643]
---
0x623 JUMPDEST
0x624 PUSH1 0x1
0x626 SLOAD
0x627 PUSH1 0x0
0x629 SWAP1
0x62a DUP2
0x62b SWAP1
0x62c CALLER
0x62d PUSH1 0x1
0x62f PUSH1 0xa0
0x631 PUSH1 0x2
0x633 EXP
0x634 SUB
0x635 SWAP1
0x636 DUP2
0x637 AND
0x638 SWAP2
0x639 AND
0x63a EQ
0x63b PUSH2 0x643
0x63e JUMPI
---
0x623: JUMPDEST 
0x624: V604 = 0x1
0x626: V605 = S[0x1]
0x627: V606 = 0x0
0x62c: V607 = CALLER
0x62d: V608 = 0x1
0x62f: V609 = 0xa0
0x631: V610 = 0x2
0x633: V611 = EXP 0x2 0xa0
0x634: V612 = SUB 0x10000000000000000000000000000000000000000 0x1
0x637: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0x639: V614 = AND V605 0xffffffffffffffffffffffffffffffffffffffff
0x63a: V615 = EQ V614 V613
0x63b: V616 = 0x643
0x63e: JUMPI 0x643 V615
---
Entry stack: [V10, 0xb0, V158, V160]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0xb0, V158, V160, 0x0, 0x0]

================================

Block 0x63f
[0x63f:0x642]
---
Predecessors: [0x623]
Successors: []
---
0x63f PUSH1 0x0
0x641 DUP1
0x642 REVERT
---
0x63f: V617 = 0x0
0x642: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V158, V160, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V158, V160, 0x0, 0x0]

================================

Block 0x643
[0x643:0x64c]
---
Predecessors: [0x623]
Successors: [0x64d, 0x651]
---
0x643 JUMPDEST
0x644 DUP3
0x645 ISZERO
0x646 DUP1
0x647 ISZERO
0x648 SWAP1
0x649 PUSH2 0x651
0x64c JUMPI
---
0x643: JUMPDEST 
0x645: V618 = ISZERO V160
0x647: V619 = ISZERO V618
0x649: V620 = 0x651
0x64c: JUMPI 0x651 V618
---
Entry stack: [V10, 0xb0, V158, V160, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V619]
Exit stack: [V10, 0xb0, V158, V160, 0x0, 0x0, V619]

================================

Block 0x64d
[0x64d:0x650]
---
Predecessors: [0x643]
Successors: [0x651]
---
0x64d POP
0x64e DUP4
0x64f ISZERO
0x650 ISZERO
---
0x64f: V621 = ISZERO V158
0x650: V622 = ISZERO V621
---
Entry stack: [V10, 0xb0, V158, V160, 0x0, 0x0, V619]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V622]
Exit stack: [V10, 0xb0, V158, V160, 0x0, 0x0, V622]

================================

Block 0x651
[0x651:0x657]
---
Predecessors: [0x643, 0x64d]
Successors: [0x658, 0x65c]
---
0x651 JUMPDEST
0x652 ISZERO
0x653 ISZERO
0x654 PUSH2 0x65c
0x657 JUMPI
---
0x651: JUMPDEST 
0x652: V623 = ISZERO S0
0x653: V624 = ISZERO V623
0x654: V625 = 0x65c
0x657: JUMPI 0x65c V624
---
Entry stack: [V10, 0xb0, V158, V160, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xb0, V158, V160, 0x0, 0x0]

================================

Block 0x658
[0x658:0x65b]
---
Predecessors: [0x651]
Successors: []
---
0x658 PUSH1 0x0
0x65a DUP1
0x65b REVERT
---
0x658: V626 = 0x0
0x65b: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V158, V160, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V158, V160, 0x0, 0x0]

================================

Block 0x65c
[0x65c:0x662]
---
Predecessors: [0x651]
Successors: [0x663]
---
0x65c JUMPDEST
0x65d POP
0x65e PUSH1 0x0
0x660 SWAP1
0x661 POP
0x662 DUP1
---
0x65c: JUMPDEST 
0x65e: V627 = 0x0
---
Entry stack: [V10, 0xb0, V158, V160, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0xb0, V158, V160, 0x0, 0x0]

================================

Block 0x663
[0x663:0x66f]
---
Predecessors: [0x65c, 0x6a6]
Successors: [0x670, 0x6b1]
---
0x663 JUMPDEST
0x664 PUSH1 0xa
0x666 DUP3
0x667 PUSH1 0xff
0x669 AND
0x66a LT
0x66b ISZERO
0x66c PUSH2 0x6b1
0x66f JUMPI
---
0x663: JUMPDEST 
0x664: V628 = 0xa
0x667: V629 = 0xff
0x669: V630 = AND 0xff S1
0x66a: V631 = LT V630 0xa
0x66b: V632 = ISZERO V631
0x66c: V633 = 0x6b1
0x66f: JUMPI 0x6b1 V632
---
Entry stack: [V10, 0xb0, V158, V160, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xb0, V158, V160, S1, 0x0]

================================

Block 0x670
[0x670:0x690]
---
Predecessors: [0x663]
Successors: [0x691, 0x692]
---
0x670 DUP3
0x671 PUSH1 0x40
0x673 MLOAD
0x674 SWAP1
0x675 DUP2
0x676 MSTORE
0x677 PUSH1 0x20
0x679 ADD
0x67a PUSH1 0x40
0x67c MLOAD
0x67d SWAP1
0x67e DUP2
0x67f SWAP1
0x680 SUB
0x681 SWAP1
0x682 SHA3
0x683 PUSH1 0x5
0x685 PUSH1 0xff
0x687 DUP5
0x688 AND
0x689 PUSH1 0xa
0x68b DUP2
0x68c LT
0x68d PUSH2 0x692
0x690 JUMPI
---
0x671: V634 = 0x40
0x673: V635 = M[0x40]
0x676: M[V635] = V160
0x677: V636 = 0x20
0x679: V637 = ADD 0x20 V635
0x67a: V638 = 0x40
0x67c: V639 = M[0x40]
0x680: V640 = SUB V637 V639
0x682: V641 = SHA3 V639 V640
0x683: V642 = 0x5
0x685: V643 = 0xff
0x688: V644 = AND S1 0xff
0x689: V645 = 0xa
0x68c: V646 = LT V644 0xa
0x68d: V647 = 0x692
0x690: JUMPI 0x692 V646
---
Entry stack: [V10, 0xb0, V158, V160, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V641, 0x5, V644]
Exit stack: [V10, 0xb0, V158, V160, S1, 0x0, V641, 0x5, V644]

================================

Block 0x691
[0x691:0x691]
---
Predecessors: [0x670]
Successors: []
---
0x691 INVALID
---
0x691: INVALID 
---
Entry stack: [V10, 0xb0, V158, V160, S4, 0x0, V641, 0x5, V644]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V158, V160, S4, 0x0, V641, 0x5, V644]

================================

Block 0x692
[0x692:0x695]
---
Predecessors: [0x670]
Successors: [0x696]
---
0x692 JUMPDEST
0x693 ADD
0x694 PUSH1 0x0
---
0x692: JUMPDEST 
0x693: V648 = ADD V644 0x5
0x694: V649 = 0x0
---
Entry stack: [V10, 0xb0, V158, V160, S4, 0x0, V641, 0x5, V644]
Stack pops: 2
Stack additions: [V648, 0x0]
Exit stack: [V10, 0xb0, V158, V160, S4, 0x0, V641, V648, 0x0]

================================

Block 0x696
[0x696:0x69e]
---
Predecessors: [0x692]
Successors: [0x69f, 0x6a6]
---
0x696 JUMPDEST
0x697 POP
0x698 SLOAD
0x699 EQ
0x69a ISZERO
0x69b PUSH2 0x6a6
0x69e JUMPI
---
0x696: JUMPDEST 
0x698: V650 = S[V648]
0x699: V651 = EQ V650 V641
0x69a: V652 = ISZERO V651
0x69b: V653 = 0x6a6
0x69e: JUMPI 0x6a6 V652
---
Entry stack: [V10, 0xb0, V158, V160, S4, 0x0, V641, V648, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0xb0, V158, V160, S4, 0x0]

================================

Block 0x69f
[0x69f:0x6a5]
---
Predecessors: [0x696]
Successors: [0x6b1]
---
0x69f POP
0x6a0 PUSH1 0x1
0x6a2 PUSH2 0x6b1
0x6a5 JUMP
---
0x6a0: V654 = 0x1
0x6a2: V655 = 0x6b1
0x6a5: JUMP 0x6b1
---
Entry stack: [V10, 0xb0, V158, V160, S1, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0xb0, V158, V160, S1, 0x1]

================================

Block 0x6a6
[0x6a6:0x6b0]
---
Predecessors: [0x696]
Successors: [0x663]
---
0x6a6 JUMPDEST
0x6a7 PUSH1 0x1
0x6a9 SWAP1
0x6aa SWAP2
0x6ab ADD
0x6ac SWAP1
0x6ad PUSH2 0x663
0x6b0 JUMP
---
0x6a6: JUMPDEST 
0x6a7: V656 = 0x1
0x6ab: V657 = ADD S1 0x1
0x6ad: V658 = 0x663
0x6b0: JUMP 0x663
---
Entry stack: [V10, 0xb0, V158, V160, S1, 0x0]
Stack pops: 2
Stack additions: [V657, S0]
Exit stack: [V10, 0xb0, V158, V160, V657, 0x0]

================================

Block 0x6b1
[0x6b1:0x6b8]
---
Predecessors: [0x663, 0x69f]
Successors: [0x6b9, 0x6bd]
---
0x6b1 JUMPDEST
0x6b2 DUP1
0x6b3 ISZERO
0x6b4 ISZERO
0x6b5 PUSH2 0x6bd
0x6b8 JUMPI
---
0x6b1: JUMPDEST 
0x6b3: V659 = ISZERO {0x0, 0x1}
0x6b4: V660 = ISZERO V659
0x6b5: V661 = 0x6bd
0x6b8: JUMPI 0x6bd V660
---
Entry stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}]

================================

Block 0x6b9
[0x6b9:0x6bc]
---
Predecessors: [0x6b1]
Successors: []
---
0x6b9 PUSH1 0x0
0x6bb DUP1
0x6bc REVERT
---
0x6b9: V662 = 0x0
0x6bc: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}]

================================

Block 0x6bd
[0x6bd:0x6d4]
---
Predecessors: [0x6b1]
Successors: [0x6d5]
---
0x6bd JUMPDEST
0x6be TIMESTAMP
0x6bf PUSH1 0x10
0x6c1 SSTORE
0x6c2 PUSH1 0x12
0x6c4 DUP1
0x6c5 SLOAD
0x6c6 PUSH1 0x2
0x6c8 SWAP2
0x6c9 SWAP1
0x6ca PUSH3 0xff0000
0x6ce NOT
0x6cf AND
0x6d0 PUSH3 0x10000
0x6d4 DUP4
---
0x6bd: JUMPDEST 
0x6be: V663 = TIMESTAMP
0x6bf: V664 = 0x10
0x6c1: S[0x10] = V663
0x6c2: V665 = 0x12
0x6c5: V666 = S[0x12]
0x6c6: V667 = 0x2
0x6ca: V668 = 0xff0000
0x6ce: V669 = NOT 0xff0000
0x6cf: V670 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V666
0x6d0: V671 = 0x10000
---
Entry stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x2, 0x12, V670, 0x10000, 0x2]
Exit stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}, 0x2, 0x12, V670, 0x10000, 0x2]

================================

Block 0x6d5
[0x6d5:0x6df]
---
Predecessors: [0x6bd]
Successors: [0x6e0]
---
0x6d5 JUMPDEST
0x6d6 MUL
0x6d7 OR
0x6d8 SWAP1
0x6d9 SSTORE
0x6da POP
0x6db PUSH1 0x0
0x6dd DUP5
0x6de SWAP1
0x6df SSTORE
---
0x6d5: JUMPDEST 
0x6d6: V672 = MUL 0x2 0x10000
0x6d7: V673 = OR 0x20000 V670
0x6d9: S[0x12] = V673
0x6db: V674 = 0x0
0x6df: S[0x0] = V158
---
Entry stack: [V10, 0xb0, V158, V160, S6, {0x0, 0x1}, 0x2, 0x12, V670, 0x10000, 0x2]
Stack pops: 9
Stack additions: [S8, S7, S6, S5]
Exit stack: [V10, 0xb0, V158, V160, S6, {0x0, 0x1}]

================================

Block 0x6e0
[0x6e0:0x6e0]
---
Predecessors: [0x6d5]
Successors: [0x6e1]
---
0x6e0 JUMPDEST
---
0x6e0: JUMPDEST 
---
Entry stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}]

================================

Block 0x6e1
[0x6e1:0x6e6]
---
Predecessors: [0x6e0]
Successors: [0xb0]
---
0x6e1 JUMPDEST
0x6e2 POP
0x6e3 POP
0x6e4 POP
0x6e5 POP
0x6e6 JUMP
---
0x6e1: JUMPDEST 
0x6e6: JUMP 0xb0
---
Entry stack: [V10, 0xb0, V158, V160, S1, {0x0, 0x1}]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x6e7
[0x6e7:0x715]
---
Predecessors: []
Successors: []
---
0x6e7 STOP
0x6e8 LOG1
0x6e9 PUSH6 0x627a7a723058
0x6f0 SHA3
0x6f1 PUSH21 0x5b4eedc49fed0fe233d006a665e607c8fbf17898df
0x707 MISSING 0x47
0x708 MISSING 0xcb
0x709 MISSING 0xec
0x70a PUSH11 0x655937b182a00029
---
0x6e7: STOP 
0x6e8: LOG S0 S1 S2
0x6e9: V675 = 0x627a7a723058
0x6f0: V676 = SHA3 0x627a7a723058 S3
0x6f1: V677 = 0x5b4eedc49fed0fe233d006a665e607c8fbf17898df
0x707: MISSING 0x47
0x708: MISSING 0xcb
0x709: MISSING 0xec
0x70a: V678 = 0x655937b182a00029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x5b4eedc49fed0fe233d006a665e607c8fbf17898df, V676, 0x655937b182a00029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1793c314
Entry block: 0xb3
Exit block: 0xb1
Body: 0xb0, 0xb1, 0xb3, 0xba, 0xbe, 0x1e6, 0x1f3, 0x1fd, 0x203, 0x207, 0x218, 0x24d, 0x251, 0x252, 0x28b, 0x28f, 0x290

Function 1:
Public function signature: 0x21e92d49
Entry block: 0xda
Exit block: 0xb1
Body: 0xb0, 0xb1, 0xda, 0x294, 0x2ab, 0x2af, 0x2b2, 0x2c8, 0x2c9, 0x2cf, 0x2d3, 0x2e6, 0x2ea, 0x2fb, 0x2ff, 0x32c, 0x330, 0x335, 0x336

Function 2:
Public function signature: 0x872fe620
Entry block: 0xf3
Exit block: 0x424
Body: 0xb0, 0xb1, 0xf3, 0xfa, 0xfe, 0x33a, 0x370, 0x374, 0x377, 0x38d, 0x38e, 0x394, 0x3ab, 0x3b5, 0x3c2, 0x3c6, 0x3c7, 0x3ca, 0x3e0, 0x3e1, 0x3e7, 0x3eb, 0x424, 0x428, 0x429, 0x42a

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x108
Exit block: 0x11b
Body: 0x108, 0x10f, 0x113, 0x11b, 0x42c

Function 4:
Public function signature: 0x9066314e
Entry block: 0x137
Exit block: 0xb1
Body: 0xb0, 0xb1, 0x137, 0x13e, 0x142, 0x43b, 0x452, 0x456, 0x459, 0x46f, 0x470, 0x476, 0x47a, 0x49a, 0x49b

Function 5:
Public function signature: 0xa5bbc423
Entry block: 0x151
Exit block: 0xb1
Body: 0xb0, 0xb1, 0x151, 0x158, 0x15c, 0x28f, 0x290, 0x49e, 0x4b5, 0x4be, 0x4c2, 0x4d5, 0x531, 0x535, 0x544, 0x548, 0x55c, 0x565, 0x569, 0x57c, 0x5af, 0x5b3, 0x5b6, 0x5cc, 0x5cd, 0x5d3, 0x5d7, 0x610

Function 6:
Public function signature: 0xc46f3e25
Entry block: 0x1a4
Exit block: 0x1b7
Body: 0x1a4, 0x1ab, 0x1af, 0x1b7, 0x61a

Function 7:
Public function signature: 0xf341cae8
Entry block: 0x1cb
Exit block: 0xb1
Body: 0xb0, 0xb1, 0x1cb, 0x1d2, 0x1d6, 0x623, 0x63f, 0x643, 0x64d, 0x651, 0x658, 0x65c, 0x663, 0x670, 0x691, 0x692, 0x696, 0x69f, 0x6a6, 0x6b1, 0x6b9, 0x6bd, 0x6d5, 0x6e0, 0x6e1

Function 8:
Public fallback function
Entry block: 0x8b
Exit block: 0xb1
Body: 0x8b, 0x8c, 0x8f, 0xa5, 0xa6, 0xac, 0xb0, 0xb1

