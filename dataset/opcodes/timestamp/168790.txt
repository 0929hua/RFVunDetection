Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xb9]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xb9
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xb9
0xc: JUMPI 0xb9 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x244]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2d05d3f
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x244
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2d05d3f
0x3b: V13 = EQ V11 0x2d05d3f
0x3c: V14 = 0x244
0x3f: JUMPI 0x244 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x275]
---
0x40 DUP1
0x41 PUSH4 0xb97bc86
0x46 EQ
0x47 PUSH2 0x275
0x4a JUMPI
---
0x41: V15 = 0xb97bc86
0x46: V16 = EQ 0xb97bc86 V11
0x47: V17 = 0x275
0x4a: JUMPI 0x275 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x29c]
---
0x4b DUP1
0x4c PUSH4 0x13af4035
0x51 EQ
0x52 PUSH2 0x29c
0x55 JUMPI
---
0x4c: V18 = 0x13af4035
0x51: V19 = EQ 0x13af4035 V11
0x52: V20 = 0x29c
0x55: JUMPI 0x29c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x2bf]
---
0x56 DUP1
0x57 PUSH4 0x144fa6d7
0x5c EQ
0x5d PUSH2 0x2bf
0x60 JUMPI
---
0x57: V21 = 0x144fa6d7
0x5c: V22 = EQ 0x144fa6d7 V11
0x5d: V23 = 0x2bf
0x60: JUMPI 0x2bf V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x2e0]
---
0x61 DUP1
0x62 PUSH4 0x3f516018
0x67 EQ
0x68 PUSH2 0x2e0
0x6b JUMPI
---
0x62: V24 = 0x3f516018
0x67: V25 = EQ 0x3f516018 V11
0x68: V26 = 0x2e0
0x6b: JUMPI 0x2e0 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x301]
---
0x6c DUP1
0x6d PUSH4 0x412664ae
0x72 EQ
0x73 PUSH2 0x301
0x76 JUMPI
---
0x6d: V27 = 0x412664ae
0x72: V28 = EQ 0x412664ae V11
0x73: V29 = 0x301
0x76: JUMPI 0x301 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x325]
---
0x77 DUP1
0x78 PUSH4 0x41c0e1b5
0x7d EQ
0x7e PUSH2 0x325
0x81 JUMPI
---
0x78: V30 = 0x41c0e1b5
0x7d: V31 = EQ 0x41c0e1b5 V11
0x7e: V32 = 0x325
0x81: JUMPI 0x325 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x33a]
---
0x82 DUP1
0x83 PUSH4 0x6e66f6e9
0x88 EQ
0x89 PUSH2 0x33a
0x8c JUMPI
---
0x83: V33 = 0x6e66f6e9
0x88: V34 = EQ 0x6e66f6e9 V11
0x89: V35 = 0x33a
0x8c: JUMPI 0x33a V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x34f]
---
0x8d DUP1
0x8e PUSH4 0x739cb57d
0x93 EQ
0x94 PUSH2 0x34f
0x97 JUMPI
---
0x8e: V36 = 0x739cb57d
0x93: V37 = EQ 0x739cb57d V11
0x94: V38 = 0x34f
0x97: JUMPI 0x34f V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x367]
---
0x98 DUP1
0x99 PUSH4 0x82d95df5
0x9e EQ
0x9f PUSH2 0x367
0xa2 JUMPI
---
0x99: V39 = 0x82d95df5
0x9e: V40 = EQ 0x82d95df5 V11
0x9f: V41 = 0x367
0xa2: JUMPI 0x367 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x37f]
---
0xa3 DUP1
0xa4 PUSH4 0x8da5cb5b
0xa9 EQ
0xaa PUSH2 0x37f
0xad JUMPI
---
0xa4: V42 = 0x8da5cb5b
0xa9: V43 = EQ 0x8da5cb5b V11
0xaa: V44 = 0x37f
0xad: JUMPI 0x37f V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x394]
---
0xae DUP1
0xaf PUSH4 0xc24a0f8b
0xb4 EQ
0xb5 PUSH2 0x394
0xb8 JUMPI
---
0xaf: V45 = 0xc24a0f8b
0xb4: V46 = EQ 0xc24a0f8b V11
0xb5: V47 = 0x394
0xb8: JUMPI 0x394 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc2]
---
Predecessors: [0x0, 0xae]
Successors: [0xc3, 0xc7]
---
0xb9 JUMPDEST
0xba PUSH1 0x0
0xbc CALLVALUE
0xbd DUP2
0xbe LT
0xbf PUSH2 0xc7
0xc2 JUMPI
---
0xb9: JUMPDEST 
0xba: V48 = 0x0
0xbc: V49 = CALLVALUE
0xbe: V50 = LT 0x0 V49
0xbf: V51 = 0xc7
0xc2: JUMPI 0xc7 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0xc3
[0xc3:0xc6]
---
Predecessors: [0xb9]
Successors: []
---
0xc3 PUSH1 0x0
0xc5 DUP1
0xc6 REVERT
---
0xc3: V52 = 0x0
0xc6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xc7
[0xc7:0xd0]
---
Predecessors: [0xb9]
Successors: [0xd1, 0xd5]
---
0xc7 JUMPDEST
0xc8 PUSH1 0x3
0xca SLOAD
0xcb TIMESTAMP
0xcc GT
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xc7: JUMPDEST 
0xc8: V53 = 0x3
0xca: V54 = S[0x3]
0xcb: V55 = TIMESTAMP
0xcc: V56 = GT V55 V54
0xcd: V57 = 0xd5
0xd0: JUMPI 0xd5 V56
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xc7]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V58 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xd5
[0xd5:0xde]
---
Predecessors: [0xc7]
Successors: [0xdf, 0xe3]
---
0xd5 JUMPDEST
0xd6 PUSH1 0x4
0xd8 SLOAD
0xd9 TIMESTAMP
0xda LT
0xdb PUSH2 0xe3
0xde JUMPI
---
0xd5: JUMPDEST 
0xd6: V59 = 0x4
0xd8: V60 = S[0x4]
0xd9: V61 = TIMESTAMP
0xda: V62 = LT V61 V60
0xdb: V63 = 0xe3
0xde: JUMPI 0xe3 V62
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xdf
[0xdf:0xe2]
---
Predecessors: [0xd5]
Successors: []
---
0xdf PUSH1 0x0
0xe1 DUP1
0xe2 REVERT
---
0xdf: V64 = 0x0
0xe2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xe3
[0xe3:0xf8]
---
Predecessors: [0xd5]
Successors: [0xf9, 0x101]
---
0xe3 JUMPDEST
0xe4 PUSH5 0x2540be400
0xea CALLVALUE
0xeb DIV
0xec SWAP1
0xed POP
0xee PUSH1 0x3
0xf0 SLOAD
0xf1 TIMESTAMP
0xf2 GT
0xf3 DUP1
0xf4 ISZERO
0xf5 PUSH2 0x101
0xf8 JUMPI
---
0xe3: JUMPDEST 
0xe4: V65 = 0x2540be400
0xea: V66 = CALLVALUE
0xeb: V67 = DIV V66 0x2540be400
0xee: V68 = 0x3
0xf0: V69 = S[0x3]
0xf1: V70 = TIMESTAMP
0xf2: V71 = GT V70 V69
0xf4: V72 = ISZERO V71
0xf5: V73 = 0x101
0xf8: JUMPI 0x101 V72
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V67, V71]
Exit stack: [V11, V67, V71]

================================

Block 0xf9
[0xf9:0x100]
---
Predecessors: [0xe3]
Successors: [0x101]
---
0xf9 POP
0xfa PUSH4 0x5a5d4080
0xff TIMESTAMP
0x100 LT
---
0xfa: V74 = 0x5a5d4080
0xff: V75 = TIMESTAMP
0x100: V76 = LT V75 0x5a5d4080
---
Entry stack: [V11, V67, V71]
Stack pops: 1
Stack additions: [V76]
Exit stack: [V11, V67, V76]

================================

Block 0x101
[0x101:0x106]
---
Predecessors: [0xe3, 0xf9]
Successors: [0x107, 0x10d]
---
0x101 JUMPDEST
0x102 ISZERO
0x103 PUSH2 0x10d
0x106 JUMPI
---
0x101: JUMPDEST 
0x102: V77 = ISZERO S0
0x103: V78 = 0x10d
0x106: JUMPI 0x10d V77
---
Entry stack: [V11, V67, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, V67]

================================

Block 0x107
[0x107:0x10c]
---
Predecessors: [0x101]
Successors: [0x10d]
---
0x107 POP
0x108 PUSH2 0x271
0x10b CALLVALUE
0x10c MUL
---
0x108: V79 = 0x271
0x10b: V80 = CALLVALUE
0x10c: V81 = MUL V80 0x271
---
Entry stack: [V11, V67]
Stack pops: 1
Stack additions: [V81]
Exit stack: [V11, V81]

================================

Block 0x10d
[0x10d:0x11a]
---
Predecessors: [0x101, 0x107]
Successors: [0x11b, 0x123]
---
0x10d JUMPDEST
0x10e PUSH4 0x5a5d4080
0x113 TIMESTAMP
0x114 GT
0x115 DUP1
0x116 ISZERO
0x117 PUSH2 0x123
0x11a JUMPI
---
0x10d: JUMPDEST 
0x10e: V82 = 0x5a5d4080
0x113: V83 = TIMESTAMP
0x114: V84 = GT V83 0x5a5d4080
0x116: V85 = ISZERO V84
0x117: V86 = 0x123
0x11a: JUMPI 0x123 V85
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: [V84]
Exit stack: [V11, S0, V84]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0x10d]
Successors: [0x123]
---
0x11b POP
0x11c PUSH4 0x5a877080
0x121 TIMESTAMP
0x122 LT
---
0x11c: V87 = 0x5a877080
0x121: V88 = TIMESTAMP
0x122: V89 = LT V88 0x5a877080
---
Entry stack: [V11, S1, V84]
Stack pops: 1
Stack additions: [V89]
Exit stack: [V11, S1, V89]

================================

Block 0x123
[0x123:0x128]
---
Predecessors: [0x10d, 0x11b]
Successors: [0x129, 0x12e]
---
0x123 JUMPDEST
0x124 ISZERO
0x125 PUSH2 0x12e
0x128 JUMPI
---
0x123: JUMPDEST 
0x124: V90 = ISZERO S0
0x125: V91 = 0x12e
0x128: JUMPI 0x12e V90
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x129
[0x129:0x12d]
---
Predecessors: [0x123]
Successors: [0x12e]
---
0x129 POP
0x12a PUSH1 0xeb
0x12c CALLVALUE
0x12d MUL
---
0x12a: V92 = 0xeb
0x12c: V93 = CALLVALUE
0x12d: V94 = MUL V93 0xeb
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [V94]
Exit stack: [V11, V94]

================================

Block 0x12e
[0x12e:0x13b]
---
Predecessors: [0x123, 0x129]
Successors: [0x13c, 0x142]
---
0x12e JUMPDEST
0x12f PUSH4 0x5a877080
0x134 TIMESTAMP
0x135 GT
0x136 DUP1
0x137 ISZERO
0x138 PUSH2 0x142
0x13b JUMPI
---
0x12e: JUMPDEST 
0x12f: V95 = 0x5a877080
0x134: V96 = TIMESTAMP
0x135: V97 = GT V96 0x5a877080
0x137: V98 = ISZERO V97
0x138: V99 = 0x142
0x13b: JUMPI 0x142 V98
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: [V97]
Exit stack: [V11, S0, V97]

================================

Block 0x13c
[0x13c:0x141]
---
Predecessors: [0x12e]
Successors: [0x142]
---
0x13c POP
0x13d PUSH1 0x4
0x13f SLOAD
0x140 TIMESTAMP
0x141 LT
---
0x13d: V100 = 0x4
0x13f: V101 = S[0x4]
0x140: V102 = TIMESTAMP
0x141: V103 = LT V102 V101
---
Entry stack: [V11, S1, V97]
Stack pops: 1
Stack additions: [V103]
Exit stack: [V11, S1, V103]

================================

Block 0x142
[0x142:0x147]
---
Predecessors: [0x12e, 0x13c]
Successors: [0x148, 0x14d]
---
0x142 JUMPDEST
0x143 ISZERO
0x144 PUSH2 0x14d
0x147 JUMPI
---
0x142: JUMPDEST 
0x143: V104 = ISZERO S0
0x144: V105 = 0x14d
0x147: JUMPI 0x14d V104
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x148
[0x148:0x14c]
---
Predecessors: [0x142]
Successors: [0x14d]
---
0x148 POP
0x149 PUSH1 0x76
0x14b CALLVALUE
0x14c MUL
---
0x149: V106 = 0x76
0x14b: V107 = CALLVALUE
0x14c: V108 = MUL V107 0x76
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [V108]
Exit stack: [V11, V108]

================================

Block 0x14d
[0x14d:0x1af]
---
Predecessors: [0x142, 0x148]
Successors: [0x1b0, 0x1b4]
---
0x14d JUMPDEST
0x14e PUSH1 0x0
0x150 DUP1
0x151 SLOAD
0x152 PUSH1 0x40
0x154 DUP1
0x155 MLOAD
0x156 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x177 DUP2
0x178 MSTORE
0x179 CALLER
0x17a PUSH1 0x4
0x17c DUP3
0x17d ADD
0x17e MSTORE
0x17f PUSH1 0x24
0x181 DUP2
0x182 ADD
0x183 DUP6
0x184 SWAP1
0x185 MSTORE
0x186 SWAP1
0x187 MLOAD
0x188 PUSH1 0x1
0x18a PUSH1 0xa0
0x18c PUSH1 0x2
0x18e EXP
0x18f SUB
0x190 SWAP1
0x191 SWAP3
0x192 AND
0x193 SWAP3
0x194 PUSH4 0xa9059cbb
0x199 SWAP3
0x19a PUSH1 0x44
0x19c DUP1
0x19d DUP5
0x19e ADD
0x19f SWAP4
0x1a0 DUP3
0x1a1 SWAP1
0x1a2 SUB
0x1a3 ADD
0x1a4 DUP2
0x1a5 DUP4
0x1a6 DUP8
0x1a7 DUP1
0x1a8 EXTCODESIZE
0x1a9 ISZERO
0x1aa DUP1
0x1ab ISZERO
0x1ac PUSH2 0x1b4
0x1af JUMPI
---
0x14d: JUMPDEST 
0x14e: V109 = 0x0
0x151: V110 = S[0x0]
0x152: V111 = 0x40
0x155: V112 = M[0x40]
0x156: V113 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x178: M[V112] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x179: V114 = CALLER
0x17a: V115 = 0x4
0x17d: V116 = ADD V112 0x4
0x17e: M[V116] = V114
0x17f: V117 = 0x24
0x182: V118 = ADD V112 0x24
0x185: M[V118] = S0
0x187: V119 = M[0x40]
0x188: V120 = 0x1
0x18a: V121 = 0xa0
0x18c: V122 = 0x2
0x18e: V123 = EXP 0x2 0xa0
0x18f: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x192: V125 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x194: V126 = 0xa9059cbb
0x19a: V127 = 0x44
0x19e: V128 = ADD V112 0x44
0x1a2: V129 = SUB V112 V119
0x1a3: V130 = ADD V129 0x44
0x1a8: V131 = EXTCODESIZE V125
0x1a9: V132 = ISZERO V131
0x1ab: V133 = ISZERO V132
0x1ac: V134 = 0x1b4
0x1af: JUMPI 0x1b4 V133
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [S0, V125, 0xa9059cbb, V128, 0x0, V119, V130, V119, 0x0, V125, V132]
Exit stack: [V11, S0, V125, 0xa9059cbb, V128, 0x0, V119, V130, V119, 0x0, V125, V132]

================================

Block 0x1b0
[0x1b0:0x1b3]
---
Predecessors: [0x14d]
Successors: []
---
0x1b0 PUSH1 0x0
0x1b2 DUP1
0x1b3 REVERT
---
0x1b0: V135 = 0x0
0x1b3: REVERT 0x0 0x0
---
Entry stack: [V11, S10, V125, 0xa9059cbb, V128, 0x0, V119, V130, V119, 0x0, V125, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, V125, 0xa9059cbb, V128, 0x0, V119, V130, V119, 0x0, V125, V132]

================================

Block 0x1b4
[0x1b4:0x1be]
---
Predecessors: [0x14d]
Successors: [0x1bf, 0x1c8]
---
0x1b4 JUMPDEST
0x1b5 POP
0x1b6 GAS
0x1b7 CALL
0x1b8 ISZERO
0x1b9 DUP1
0x1ba ISZERO
0x1bb PUSH2 0x1c8
0x1be JUMPI
---
0x1b4: JUMPDEST 
0x1b6: V136 = GAS
0x1b7: V137 = CALL V136 V125 0x0 V119 V130 V119 0x0
0x1b8: V138 = ISZERO V137
0x1ba: V139 = ISZERO V138
0x1bb: V140 = 0x1c8
0x1be: JUMPI 0x1c8 V139
---
Entry stack: [V11, S10, V125, 0xa9059cbb, V128, 0x0, V119, V130, V119, 0x0, V125, V132]
Stack pops: 7
Stack additions: [V138]
Exit stack: [V11, S10, V125, 0xa9059cbb, V128, V138]

================================

Block 0x1bf
[0x1bf:0x1c7]
---
Predecessors: [0x1b4]
Successors: []
---
0x1bf RETURNDATASIZE
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 RETURNDATACOPY
0x1c4 RETURNDATASIZE
0x1c5 PUSH1 0x0
0x1c7 REVERT
---
0x1bf: V141 = RETURNDATASIZE
0x1c0: V142 = 0x0
0x1c3: RETURNDATACOPY 0x0 0x0 V141
0x1c4: V143 = RETURNDATASIZE
0x1c5: V144 = 0x0
0x1c7: REVERT 0x0 V143
---
Entry stack: [V11, S4, V125, 0xa9059cbb, V128, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, V125, 0xa9059cbb, V128, V138]

================================

Block 0x1c8
[0x1c8:0x236]
---
Predecessors: [0x1b4]
Successors: [0x237, 0x240]
---
0x1c8 JUMPDEST
0x1c9 POP
0x1ca POP
0x1cb PUSH1 0x40
0x1cd DUP1
0x1ce MLOAD
0x1cf CALLER
0x1d0 DUP2
0x1d1 MSTORE
0x1d2 PUSH1 0x20
0x1d4 DUP2
0x1d5 ADD
0x1d6 DUP6
0x1d7 SWAP1
0x1d8 MSTORE
0x1d9 DUP2
0x1da MLOAD
0x1db PUSH32 0x97c35397cb6acebd9df368c206404479fc4c80dd6034d1b28943aaf582631870
0x1fc SWAP5
0x1fd POP
0x1fe SWAP1
0x1ff DUP2
0x200 SWAP1
0x201 SUB
0x202 SWAP1
0x203 SWAP2
0x204 ADD
0x205 SWAP2
0x206 POP
0x207 LOG1
0x208 PUSH1 0x2
0x20a SLOAD
0x20b PUSH1 0x40
0x20d MLOAD
0x20e PUSH1 0x1
0x210 PUSH1 0xa0
0x212 PUSH1 0x2
0x214 EXP
0x215 SUB
0x216 SWAP1
0x217 SWAP2
0x218 AND
0x219 SWAP1
0x21a CALLVALUE
0x21b DUP1
0x21c ISZERO
0x21d PUSH2 0x8fc
0x220 MUL
0x221 SWAP2
0x222 PUSH1 0x0
0x224 DUP2
0x225 DUP2
0x226 DUP2
0x227 DUP6
0x228 DUP9
0x229 DUP9
0x22a CALL
0x22b SWAP4
0x22c POP
0x22d POP
0x22e POP
0x22f POP
0x230 ISZERO
0x231 DUP1
0x232 ISZERO
0x233 PUSH2 0x240
0x236 JUMPI
---
0x1c8: JUMPDEST 
0x1cb: V145 = 0x40
0x1ce: V146 = M[0x40]
0x1cf: V147 = CALLER
0x1d1: M[V146] = V147
0x1d2: V148 = 0x20
0x1d5: V149 = ADD V146 0x20
0x1d8: M[V149] = S4
0x1da: V150 = M[0x40]
0x1db: V151 = 0x97c35397cb6acebd9df368c206404479fc4c80dd6034d1b28943aaf582631870
0x201: V152 = SUB V146 V150
0x204: V153 = ADD 0x40 V152
0x207: LOG V150 V153 0x97c35397cb6acebd9df368c206404479fc4c80dd6034d1b28943aaf582631870
0x208: V154 = 0x2
0x20a: V155 = S[0x2]
0x20b: V156 = 0x40
0x20d: V157 = M[0x40]
0x20e: V158 = 0x1
0x210: V159 = 0xa0
0x212: V160 = 0x2
0x214: V161 = EXP 0x2 0xa0
0x215: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x218: V163 = AND V155 0xffffffffffffffffffffffffffffffffffffffff
0x21a: V164 = CALLVALUE
0x21c: V165 = ISZERO V164
0x21d: V166 = 0x8fc
0x220: V167 = MUL 0x8fc V165
0x222: V168 = 0x0
0x22a: V169 = CALL V167 V163 V164 V157 0x0 V157 0x0
0x230: V170 = ISZERO V169
0x232: V171 = ISZERO V170
0x233: V172 = 0x240
0x236: JUMPI 0x240 V171
---
Entry stack: [V11, S4, V125, 0xa9059cbb, V128, V138]
Stack pops: 5
Stack additions: [S4, V170]
Exit stack: [V11, S4, V170]

================================

Block 0x237
[0x237:0x23f]
---
Predecessors: [0x1c8]
Successors: []
---
0x237 RETURNDATASIZE
0x238 PUSH1 0x0
0x23a DUP1
0x23b RETURNDATACOPY
0x23c RETURNDATASIZE
0x23d PUSH1 0x0
0x23f REVERT
---
0x237: V173 = RETURNDATASIZE
0x238: V174 = 0x0
0x23b: RETURNDATACOPY 0x0 0x0 V173
0x23c: V175 = RETURNDATASIZE
0x23d: V176 = 0x0
0x23f: REVERT 0x0 V175
---
Entry stack: [V11, S1, V170]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, V170]

================================

Block 0x240
[0x240:0x243]
---
Predecessors: [0x1c8]
Successors: []
---
0x240 JUMPDEST
0x241 POP
0x242 POP
0x243 STOP
---
0x240: JUMPDEST 
0x243: STOP 
---
Entry stack: [V11, S1, V170]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x244
[0x244:0x24b]
---
Predecessors: [0xd]
Successors: [0x24c, 0x250]
---
0x244 JUMPDEST
0x245 CALLVALUE
0x246 DUP1
0x247 ISZERO
0x248 PUSH2 0x250
0x24b JUMPI
---
0x244: JUMPDEST 
0x245: V177 = CALLVALUE
0x247: V178 = ISZERO V177
0x248: V179 = 0x250
0x24b: JUMPI 0x250 V178
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V177]
Exit stack: [V11, V177]

================================

Block 0x24c
[0x24c:0x24f]
---
Predecessors: [0x244]
Successors: []
---
0x24c PUSH1 0x0
0x24e DUP1
0x24f REVERT
---
0x24c: V180 = 0x0
0x24f: REVERT 0x0 0x0
---
Entry stack: [V11, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V177]

================================

Block 0x250
[0x250:0x258]
---
Predecessors: [0x244]
Successors: [0x3a9]
---
0x250 JUMPDEST
0x251 POP
0x252 PUSH2 0x259
0x255 PUSH2 0x3a9
0x258 JUMP
---
0x250: JUMPDEST 
0x252: V181 = 0x259
0x255: V182 = 0x3a9
0x258: JUMP 0x3a9
---
Entry stack: [V11, V177]
Stack pops: 1
Stack additions: [0x259]
Exit stack: [V11, 0x259]

================================

Block 0x259
[0x259:0x274]
---
Predecessors: [0x3a9, 0x553, 0x59a]
Successors: []
---
0x259 JUMPDEST
0x25a PUSH1 0x40
0x25c DUP1
0x25d MLOAD
0x25e PUSH1 0x1
0x260 PUSH1 0xa0
0x262 PUSH1 0x2
0x264 EXP
0x265 SUB
0x266 SWAP1
0x267 SWAP3
0x268 AND
0x269 DUP3
0x26a MSTORE
0x26b MLOAD
0x26c SWAP1
0x26d DUP2
0x26e SWAP1
0x26f SUB
0x270 PUSH1 0x20
0x272 ADD
0x273 SWAP1
0x274 RETURN
---
0x259: JUMPDEST 
0x25a: V183 = 0x40
0x25d: V184 = M[0x40]
0x25e: V185 = 0x1
0x260: V186 = 0xa0
0x262: V187 = 0x2
0x264: V188 = EXP 0x2 0xa0
0x265: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x268: V190 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x26a: M[V184] = V190
0x26b: V191 = M[0x40]
0x26f: V192 = SUB V184 V191
0x270: V193 = 0x20
0x272: V194 = ADD 0x20 V192
0x274: RETURN V191 V194
---
Entry stack: [V11, 0x259, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x259]

================================

Block 0x275
[0x275:0x27c]
---
Predecessors: [0x40]
Successors: [0x27d, 0x281]
---
0x275 JUMPDEST
0x276 CALLVALUE
0x277 DUP1
0x278 ISZERO
0x279 PUSH2 0x281
0x27c JUMPI
---
0x275: JUMPDEST 
0x276: V195 = CALLVALUE
0x278: V196 = ISZERO V195
0x279: V197 = 0x281
0x27c: JUMPI 0x281 V196
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V195]
Exit stack: [V11, V195]

================================

Block 0x27d
[0x27d:0x280]
---
Predecessors: [0x275]
Successors: []
---
0x27d PUSH1 0x0
0x27f DUP1
0x280 REVERT
---
0x27d: V198 = 0x0
0x280: REVERT 0x0 0x0
---
Entry stack: [V11, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V195]

================================

Block 0x281
[0x281:0x289]
---
Predecessors: [0x275]
Successors: [0x3b8]
---
0x281 JUMPDEST
0x282 POP
0x283 PUSH2 0x28a
0x286 PUSH2 0x3b8
0x289 JUMP
---
0x281: JUMPDEST 
0x283: V199 = 0x28a
0x286: V200 = 0x3b8
0x289: JUMP 0x3b8
---
Entry stack: [V11, V195]
Stack pops: 1
Stack additions: [0x28a]
Exit stack: [V11, 0x28a]

================================

Block 0x28a
[0x28a:0x29b]
---
Predecessors: [0x3b8, 0x5a9]
Successors: []
---
0x28a JUMPDEST
0x28b PUSH1 0x40
0x28d DUP1
0x28e MLOAD
0x28f SWAP2
0x290 DUP3
0x291 MSTORE
0x292 MLOAD
0x293 SWAP1
0x294 DUP2
0x295 SWAP1
0x296 SUB
0x297 PUSH1 0x20
0x299 ADD
0x29a SWAP1
0x29b RETURN
---
0x28a: JUMPDEST 
0x28b: V201 = 0x40
0x28e: V202 = M[0x40]
0x291: M[V202] = S0
0x292: V203 = M[0x40]
0x296: V204 = SUB V202 V203
0x297: V205 = 0x20
0x299: V206 = ADD 0x20 V204
0x29b: RETURN V203 V206
---
Entry stack: [V11, 0x28a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x28a]

================================

Block 0x29c
[0x29c:0x2a3]
---
Predecessors: [0x4b]
Successors: [0x2a4, 0x2a8]
---
0x29c JUMPDEST
0x29d CALLVALUE
0x29e DUP1
0x29f ISZERO
0x2a0 PUSH2 0x2a8
0x2a3 JUMPI
---
0x29c: JUMPDEST 
0x29d: V207 = CALLVALUE
0x29f: V208 = ISZERO V207
0x2a0: V209 = 0x2a8
0x2a3: JUMPI 0x2a8 V208
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V207]
Exit stack: [V11, V207]

================================

Block 0x2a4
[0x2a4:0x2a7]
---
Predecessors: [0x29c]
Successors: []
---
0x2a4 PUSH1 0x0
0x2a6 DUP1
0x2a7 REVERT
---
0x2a4: V210 = 0x0
0x2a7: REVERT 0x0 0x0
---
Entry stack: [V11, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V207]

================================

Block 0x2a8
[0x2a8:0x2bc]
---
Predecessors: [0x29c]
Successors: [0x3be]
---
0x2a8 JUMPDEST
0x2a9 POP
0x2aa PUSH2 0x2bd
0x2ad PUSH1 0x1
0x2af PUSH1 0xa0
0x2b1 PUSH1 0x2
0x2b3 EXP
0x2b4 SUB
0x2b5 PUSH1 0x4
0x2b7 CALLDATALOAD
0x2b8 AND
0x2b9 PUSH2 0x3be
0x2bc JUMP
---
0x2a8: JUMPDEST 
0x2aa: V211 = 0x2bd
0x2ad: V212 = 0x1
0x2af: V213 = 0xa0
0x2b1: V214 = 0x2
0x2b3: V215 = EXP 0x2 0xa0
0x2b4: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b5: V217 = 0x4
0x2b7: V218 = CALLDATALOAD 0x4
0x2b8: V219 = AND V218 0xffffffffffffffffffffffffffffffffffffffff
0x2b9: V220 = 0x3be
0x2bc: JUMP 0x3be
---
Entry stack: [V11, V207]
Stack pops: 1
Stack additions: [0x2bd, V219]
Exit stack: [V11, 0x2bd, V219]

================================

Block 0x2bd
[0x2bd:0x2be]
---
Predecessors: [0x3d5, 0x41b, 0x461, 0x526, 0x579, 0x595]
Successors: []
---
0x2bd JUMPDEST
0x2be STOP
---
0x2bd: JUMPDEST 
0x2be: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2bf
[0x2bf:0x2c6]
---
Predecessors: [0x56]
Successors: [0x2c7, 0x2cb]
---
0x2bf JUMPDEST
0x2c0 CALLVALUE
0x2c1 DUP1
0x2c2 ISZERO
0x2c3 PUSH2 0x2cb
0x2c6 JUMPI
---
0x2bf: JUMPDEST 
0x2c0: V221 = CALLVALUE
0x2c2: V222 = ISZERO V221
0x2c3: V223 = 0x2cb
0x2c6: JUMPI 0x2cb V222
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V221]
Exit stack: [V11, V221]

================================

Block 0x2c7
[0x2c7:0x2ca]
---
Predecessors: [0x2bf]
Successors: []
---
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca REVERT
---
0x2c7: V224 = 0x0
0x2ca: REVERT 0x0 0x0
---
Entry stack: [V11, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V221]

================================

Block 0x2cb
[0x2cb:0x2df]
---
Predecessors: [0x2bf]
Successors: [0x404]
---
0x2cb JUMPDEST
0x2cc POP
0x2cd PUSH2 0x2bd
0x2d0 PUSH1 0x1
0x2d2 PUSH1 0xa0
0x2d4 PUSH1 0x2
0x2d6 EXP
0x2d7 SUB
0x2d8 PUSH1 0x4
0x2da CALLDATALOAD
0x2db AND
0x2dc PUSH2 0x404
0x2df JUMP
---
0x2cb: JUMPDEST 
0x2cd: V225 = 0x2bd
0x2d0: V226 = 0x1
0x2d2: V227 = 0xa0
0x2d4: V228 = 0x2
0x2d6: V229 = EXP 0x2 0xa0
0x2d7: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d8: V231 = 0x4
0x2da: V232 = CALLDATALOAD 0x4
0x2db: V233 = AND V232 0xffffffffffffffffffffffffffffffffffffffff
0x2dc: V234 = 0x404
0x2df: JUMP 0x404
---
Entry stack: [V11, V221]
Stack pops: 1
Stack additions: [0x2bd, V233]
Exit stack: [V11, 0x2bd, V233]

================================

Block 0x2e0
[0x2e0:0x2e7]
---
Predecessors: [0x61]
Successors: [0x2e8, 0x2ec]
---
0x2e0 JUMPDEST
0x2e1 CALLVALUE
0x2e2 DUP1
0x2e3 ISZERO
0x2e4 PUSH2 0x2ec
0x2e7 JUMPI
---
0x2e0: JUMPDEST 
0x2e1: V235 = CALLVALUE
0x2e3: V236 = ISZERO V235
0x2e4: V237 = 0x2ec
0x2e7: JUMPI 0x2ec V236
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V235]
Exit stack: [V11, V235]

================================

Block 0x2e8
[0x2e8:0x2eb]
---
Predecessors: [0x2e0]
Successors: []
---
0x2e8 PUSH1 0x0
0x2ea DUP1
0x2eb REVERT
---
0x2e8: V238 = 0x0
0x2eb: REVERT 0x0 0x0
---
Entry stack: [V11, V235]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V235]

================================

Block 0x2ec
[0x2ec:0x300]
---
Predecessors: [0x2e0]
Successors: [0x44a]
---
0x2ec JUMPDEST
0x2ed POP
0x2ee PUSH2 0x2bd
0x2f1 PUSH1 0x1
0x2f3 PUSH1 0xa0
0x2f5 PUSH1 0x2
0x2f7 EXP
0x2f8 SUB
0x2f9 PUSH1 0x4
0x2fb CALLDATALOAD
0x2fc AND
0x2fd PUSH2 0x44a
0x300 JUMP
---
0x2ec: JUMPDEST 
0x2ee: V239 = 0x2bd
0x2f1: V240 = 0x1
0x2f3: V241 = 0xa0
0x2f5: V242 = 0x2
0x2f7: V243 = EXP 0x2 0xa0
0x2f8: V244 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f9: V245 = 0x4
0x2fb: V246 = CALLDATALOAD 0x4
0x2fc: V247 = AND V246 0xffffffffffffffffffffffffffffffffffffffff
0x2fd: V248 = 0x44a
0x300: JUMP 0x44a
---
Entry stack: [V11, V235]
Stack pops: 1
Stack additions: [0x2bd, V247]
Exit stack: [V11, 0x2bd, V247]

================================

Block 0x301
[0x301:0x308]
---
Predecessors: [0x6c]
Successors: [0x309, 0x30d]
---
0x301 JUMPDEST
0x302 CALLVALUE
0x303 DUP1
0x304 ISZERO
0x305 PUSH2 0x30d
0x308 JUMPI
---
0x301: JUMPDEST 
0x302: V249 = CALLVALUE
0x304: V250 = ISZERO V249
0x305: V251 = 0x30d
0x308: JUMPI 0x30d V250
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V249]
Exit stack: [V11, V249]

================================

Block 0x309
[0x309:0x30c]
---
Predecessors: [0x301]
Successors: []
---
0x309 PUSH1 0x0
0x30b DUP1
0x30c REVERT
---
0x309: V252 = 0x0
0x30c: REVERT 0x0 0x0
---
Entry stack: [V11, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V249]

================================

Block 0x30d
[0x30d:0x324]
---
Predecessors: [0x301]
Successors: [0x490]
---
0x30d JUMPDEST
0x30e POP
0x30f PUSH2 0x2bd
0x312 PUSH1 0x1
0x314 PUSH1 0xa0
0x316 PUSH1 0x2
0x318 EXP
0x319 SUB
0x31a PUSH1 0x4
0x31c CALLDATALOAD
0x31d AND
0x31e PUSH1 0x24
0x320 CALLDATALOAD
0x321 PUSH2 0x490
0x324 JUMP
---
0x30d: JUMPDEST 
0x30f: V253 = 0x2bd
0x312: V254 = 0x1
0x314: V255 = 0xa0
0x316: V256 = 0x2
0x318: V257 = EXP 0x2 0xa0
0x319: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31a: V259 = 0x4
0x31c: V260 = CALLDATALOAD 0x4
0x31d: V261 = AND V260 0xffffffffffffffffffffffffffffffffffffffff
0x31e: V262 = 0x24
0x320: V263 = CALLDATALOAD 0x24
0x321: V264 = 0x490
0x324: JUMP 0x490
---
Entry stack: [V11, V249]
Stack pops: 1
Stack additions: [0x2bd, V261, V263]
Exit stack: [V11, 0x2bd, V261, V263]

================================

Block 0x325
[0x325:0x32c]
---
Predecessors: [0x77]
Successors: [0x32d, 0x331]
---
0x325 JUMPDEST
0x326 CALLVALUE
0x327 DUP1
0x328 ISZERO
0x329 PUSH2 0x331
0x32c JUMPI
---
0x325: JUMPDEST 
0x326: V265 = CALLVALUE
0x328: V266 = ISZERO V265
0x329: V267 = 0x331
0x32c: JUMPI 0x331 V266
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V265]
Exit stack: [V11, V265]

================================

Block 0x32d
[0x32d:0x330]
---
Predecessors: [0x325]
Successors: []
---
0x32d PUSH1 0x0
0x32f DUP1
0x330 REVERT
---
0x32d: V268 = 0x0
0x330: REVERT 0x0 0x0
---
Entry stack: [V11, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V265]

================================

Block 0x331
[0x331:0x339]
---
Predecessors: [0x325]
Successors: [0x52e]
---
0x331 JUMPDEST
0x332 POP
0x333 PUSH2 0x2bd
0x336 PUSH2 0x52e
0x339 JUMP
---
0x331: JUMPDEST 
0x333: V269 = 0x2bd
0x336: V270 = 0x52e
0x339: JUMP 0x52e
---
Entry stack: [V11, V265]
Stack pops: 1
Stack additions: [0x2bd]
Exit stack: [V11, 0x2bd]

================================

Block 0x33a
[0x33a:0x341]
---
Predecessors: [0x82]
Successors: [0x342, 0x346]
---
0x33a JUMPDEST
0x33b CALLVALUE
0x33c DUP1
0x33d ISZERO
0x33e PUSH2 0x346
0x341 JUMPI
---
0x33a: JUMPDEST 
0x33b: V271 = CALLVALUE
0x33d: V272 = ISZERO V271
0x33e: V273 = 0x346
0x341: JUMPI 0x346 V272
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V271]
Exit stack: [V11, V271]

================================

Block 0x342
[0x342:0x345]
---
Predecessors: [0x33a]
Successors: []
---
0x342 PUSH1 0x0
0x344 DUP1
0x345 REVERT
---
0x342: V274 = 0x0
0x345: REVERT 0x0 0x0
---
Entry stack: [V11, V271]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V271]

================================

Block 0x346
[0x346:0x34e]
---
Predecessors: [0x33a]
Successors: [0x553]
---
0x346 JUMPDEST
0x347 POP
0x348 PUSH2 0x259
0x34b PUSH2 0x553
0x34e JUMP
---
0x346: JUMPDEST 
0x348: V275 = 0x259
0x34b: V276 = 0x553
0x34e: JUMP 0x553
---
Entry stack: [V11, V271]
Stack pops: 1
Stack additions: [0x259]
Exit stack: [V11, 0x259]

================================

Block 0x34f
[0x34f:0x356]
---
Predecessors: [0x8d]
Successors: [0x357, 0x35b]
---
0x34f JUMPDEST
0x350 CALLVALUE
0x351 DUP1
0x352 ISZERO
0x353 PUSH2 0x35b
0x356 JUMPI
---
0x34f: JUMPDEST 
0x350: V277 = CALLVALUE
0x352: V278 = ISZERO V277
0x353: V279 = 0x35b
0x356: JUMPI 0x35b V278
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V277]
Exit stack: [V11, V277]

================================

Block 0x357
[0x357:0x35a]
---
Predecessors: [0x34f]
Successors: []
---
0x357 PUSH1 0x0
0x359 DUP1
0x35a REVERT
---
0x357: V280 = 0x0
0x35a: REVERT 0x0 0x0
---
Entry stack: [V11, V277]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V277]

================================

Block 0x35b
[0x35b:0x366]
---
Predecessors: [0x34f]
Successors: [0x562]
---
0x35b JUMPDEST
0x35c POP
0x35d PUSH2 0x2bd
0x360 PUSH1 0x4
0x362 CALLDATALOAD
0x363 PUSH2 0x562
0x366 JUMP
---
0x35b: JUMPDEST 
0x35d: V281 = 0x2bd
0x360: V282 = 0x4
0x362: V283 = CALLDATALOAD 0x4
0x363: V284 = 0x562
0x366: JUMP 0x562
---
Entry stack: [V11, V277]
Stack pops: 1
Stack additions: [0x2bd, V283]
Exit stack: [V11, 0x2bd, V283]

================================

Block 0x367
[0x367:0x36e]
---
Predecessors: [0x98]
Successors: [0x36f, 0x373]
---
0x367 JUMPDEST
0x368 CALLVALUE
0x369 DUP1
0x36a ISZERO
0x36b PUSH2 0x373
0x36e JUMPI
---
0x367: JUMPDEST 
0x368: V285 = CALLVALUE
0x36a: V286 = ISZERO V285
0x36b: V287 = 0x373
0x36e: JUMPI 0x373 V286
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V285]
Exit stack: [V11, V285]

================================

Block 0x36f
[0x36f:0x372]
---
Predecessors: [0x367]
Successors: []
---
0x36f PUSH1 0x0
0x371 DUP1
0x372 REVERT
---
0x36f: V288 = 0x0
0x372: REVERT 0x0 0x0
---
Entry stack: [V11, V285]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V285]

================================

Block 0x373
[0x373:0x37e]
---
Predecessors: [0x367]
Successors: [0x57e]
---
0x373 JUMPDEST
0x374 POP
0x375 PUSH2 0x2bd
0x378 PUSH1 0x4
0x37a CALLDATALOAD
0x37b PUSH2 0x57e
0x37e JUMP
---
0x373: JUMPDEST 
0x375: V289 = 0x2bd
0x378: V290 = 0x4
0x37a: V291 = CALLDATALOAD 0x4
0x37b: V292 = 0x57e
0x37e: JUMP 0x57e
---
Entry stack: [V11, V285]
Stack pops: 1
Stack additions: [0x2bd, V291]
Exit stack: [V11, 0x2bd, V291]

================================

Block 0x37f
[0x37f:0x386]
---
Predecessors: [0xa3]
Successors: [0x387, 0x38b]
---
0x37f JUMPDEST
0x380 CALLVALUE
0x381 DUP1
0x382 ISZERO
0x383 PUSH2 0x38b
0x386 JUMPI
---
0x37f: JUMPDEST 
0x380: V293 = CALLVALUE
0x382: V294 = ISZERO V293
0x383: V295 = 0x38b
0x386: JUMPI 0x38b V294
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V293]
Exit stack: [V11, V293]

================================

Block 0x387
[0x387:0x38a]
---
Predecessors: [0x37f]
Successors: []
---
0x387 PUSH1 0x0
0x389 DUP1
0x38a REVERT
---
0x387: V296 = 0x0
0x38a: REVERT 0x0 0x0
---
Entry stack: [V11, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V293]

================================

Block 0x38b
[0x38b:0x393]
---
Predecessors: [0x37f]
Successors: [0x59a]
---
0x38b JUMPDEST
0x38c POP
0x38d PUSH2 0x259
0x390 PUSH2 0x59a
0x393 JUMP
---
0x38b: JUMPDEST 
0x38d: V297 = 0x259
0x390: V298 = 0x59a
0x393: JUMP 0x59a
---
Entry stack: [V11, V293]
Stack pops: 1
Stack additions: [0x259]
Exit stack: [V11, 0x259]

================================

Block 0x394
[0x394:0x39b]
---
Predecessors: [0xae]
Successors: [0x39c, 0x3a0]
---
0x394 JUMPDEST
0x395 CALLVALUE
0x396 DUP1
0x397 ISZERO
0x398 PUSH2 0x3a0
0x39b JUMPI
---
0x394: JUMPDEST 
0x395: V299 = CALLVALUE
0x397: V300 = ISZERO V299
0x398: V301 = 0x3a0
0x39b: JUMPI 0x3a0 V300
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V299]
Exit stack: [V11, V299]

================================

Block 0x39c
[0x39c:0x39f]
---
Predecessors: [0x394]
Successors: []
---
0x39c PUSH1 0x0
0x39e DUP1
0x39f REVERT
---
0x39c: V302 = 0x0
0x39f: REVERT 0x0 0x0
---
Entry stack: [V11, V299]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V299]

================================

Block 0x3a0
[0x3a0:0x3a8]
---
Predecessors: [0x394]
Successors: [0x5a9]
---
0x3a0 JUMPDEST
0x3a1 POP
0x3a2 PUSH2 0x28a
0x3a5 PUSH2 0x5a9
0x3a8 JUMP
---
0x3a0: JUMPDEST 
0x3a2: V303 = 0x28a
0x3a5: V304 = 0x5a9
0x3a8: JUMP 0x5a9
---
Entry stack: [V11, V299]
Stack pops: 1
Stack additions: [0x28a]
Exit stack: [V11, 0x28a]

================================

Block 0x3a9
[0x3a9:0x3b7]
---
Predecessors: [0x250]
Successors: [0x259]
---
0x3a9 JUMPDEST
0x3aa PUSH1 0x1
0x3ac SLOAD
0x3ad PUSH1 0x1
0x3af PUSH1 0xa0
0x3b1 PUSH1 0x2
0x3b3 EXP
0x3b4 SUB
0x3b5 AND
0x3b6 DUP2
0x3b7 JUMP
---
0x3a9: JUMPDEST 
0x3aa: V305 = 0x1
0x3ac: V306 = S[0x1]
0x3ad: V307 = 0x1
0x3af: V308 = 0xa0
0x3b1: V309 = 0x2
0x3b3: V310 = EXP 0x2 0xa0
0x3b4: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b5: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x3b7: JUMP 0x259
---
Entry stack: [V11, 0x259]
Stack pops: 1
Stack additions: [S0, V312]
Exit stack: [V11, 0x259, V312]

================================

Block 0x3b8
[0x3b8:0x3bd]
---
Predecessors: [0x281]
Successors: [0x28a]
---
0x3b8 JUMPDEST
0x3b9 PUSH1 0x3
0x3bb SLOAD
0x3bc DUP2
0x3bd JUMP
---
0x3b8: JUMPDEST 
0x3b9: V313 = 0x3
0x3bb: V314 = S[0x3]
0x3bd: JUMP 0x28a
---
Entry stack: [V11, 0x28a]
Stack pops: 1
Stack additions: [S0, V314]
Exit stack: [V11, 0x28a, V314]

================================

Block 0x3be
[0x3be:0x3d0]
---
Predecessors: [0x2a8]
Successors: [0x3d1, 0x3d5]
---
0x3be JUMPDEST
0x3bf PUSH1 0x1
0x3c1 SLOAD
0x3c2 PUSH1 0x1
0x3c4 PUSH1 0xa0
0x3c6 PUSH1 0x2
0x3c8 EXP
0x3c9 SUB
0x3ca AND
0x3cb CALLER
0x3cc EQ
0x3cd PUSH2 0x3d5
0x3d0 JUMPI
---
0x3be: JUMPDEST 
0x3bf: V315 = 0x1
0x3c1: V316 = S[0x1]
0x3c2: V317 = 0x1
0x3c4: V318 = 0xa0
0x3c6: V319 = 0x2
0x3c8: V320 = EXP 0x2 0xa0
0x3c9: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ca: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x3cb: V323 = CALLER
0x3cc: V324 = EQ V323 V322
0x3cd: V325 = 0x3d5
0x3d0: JUMPI 0x3d5 V324
---
Entry stack: [V11, 0x2bd, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd, V219]

================================

Block 0x3d1
[0x3d1:0x3d4]
---
Predecessors: [0x3be]
Successors: []
---
0x3d1 PUSH1 0x0
0x3d3 DUP1
0x3d4 REVERT
---
0x3d1: V326 = 0x0
0x3d4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2bd, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd, V219]

================================

Block 0x3d5
[0x3d5:0x403]
---
Predecessors: [0x3be]
Successors: [0x2bd]
---
0x3d5 JUMPDEST
0x3d6 PUSH1 0x2
0x3d8 DUP1
0x3d9 SLOAD
0x3da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ef NOT
0x3f0 AND
0x3f1 PUSH1 0x1
0x3f3 PUSH1 0xa0
0x3f5 PUSH1 0x2
0x3f7 EXP
0x3f8 SUB
0x3f9 SWAP3
0x3fa SWAP1
0x3fb SWAP3
0x3fc AND
0x3fd SWAP2
0x3fe SWAP1
0x3ff SWAP2
0x400 OR
0x401 SWAP1
0x402 SSTORE
0x403 JUMP
---
0x3d5: JUMPDEST 
0x3d6: V327 = 0x2
0x3d9: V328 = S[0x2]
0x3da: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ef: V330 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3f0: V331 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V328
0x3f1: V332 = 0x1
0x3f3: V333 = 0xa0
0x3f5: V334 = 0x2
0x3f7: V335 = EXP 0x2 0xa0
0x3f8: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fc: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x400: V338 = OR V337 V331
0x402: S[0x2] = V338
0x403: JUMP 0x2bd
---
Entry stack: [V11, 0x2bd, V219]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x404
[0x404:0x416]
---
Predecessors: [0x2cb]
Successors: [0x417, 0x41b]
---
0x404 JUMPDEST
0x405 PUSH1 0x1
0x407 SLOAD
0x408 PUSH1 0x1
0x40a PUSH1 0xa0
0x40c PUSH1 0x2
0x40e EXP
0x40f SUB
0x410 AND
0x411 CALLER
0x412 EQ
0x413 PUSH2 0x41b
0x416 JUMPI
---
0x404: JUMPDEST 
0x405: V339 = 0x1
0x407: V340 = S[0x1]
0x408: V341 = 0x1
0x40a: V342 = 0xa0
0x40c: V343 = 0x2
0x40e: V344 = EXP 0x2 0xa0
0x40f: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x410: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x411: V347 = CALLER
0x412: V348 = EQ V347 V346
0x413: V349 = 0x41b
0x416: JUMPI 0x41b V348
---
Entry stack: [V11, 0x2bd, V233]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd, V233]

================================

Block 0x417
[0x417:0x41a]
---
Predecessors: [0x404]
Successors: []
---
0x417 PUSH1 0x0
0x419 DUP1
0x41a REVERT
---
0x417: V350 = 0x0
0x41a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2bd, V233]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd, V233]

================================

Block 0x41b
[0x41b:0x449]
---
Predecessors: [0x404]
Successors: [0x2bd]
---
0x41b JUMPDEST
0x41c PUSH1 0x0
0x41e DUP1
0x41f SLOAD
0x420 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x435 NOT
0x436 AND
0x437 PUSH1 0x1
0x439 PUSH1 0xa0
0x43b PUSH1 0x2
0x43d EXP
0x43e SUB
0x43f SWAP3
0x440 SWAP1
0x441 SWAP3
0x442 AND
0x443 SWAP2
0x444 SWAP1
0x445 SWAP2
0x446 OR
0x447 SWAP1
0x448 SSTORE
0x449 JUMP
---
0x41b: JUMPDEST 
0x41c: V351 = 0x0
0x41f: V352 = S[0x0]
0x420: V353 = 0xffffffffffffffffffffffffffffffffffffffff
0x435: V354 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x436: V355 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V352
0x437: V356 = 0x1
0x439: V357 = 0xa0
0x43b: V358 = 0x2
0x43d: V359 = EXP 0x2 0xa0
0x43e: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x442: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x446: V362 = OR V361 V355
0x448: S[0x0] = V362
0x449: JUMP 0x2bd
---
Entry stack: [V11, 0x2bd, V233]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x44a
[0x44a:0x45c]
---
Predecessors: [0x2ec]
Successors: [0x45d, 0x461]
---
0x44a JUMPDEST
0x44b PUSH1 0x1
0x44d SLOAD
0x44e PUSH1 0x1
0x450 PUSH1 0xa0
0x452 PUSH1 0x2
0x454 EXP
0x455 SUB
0x456 AND
0x457 CALLER
0x458 EQ
0x459 PUSH2 0x461
0x45c JUMPI
---
0x44a: JUMPDEST 
0x44b: V363 = 0x1
0x44d: V364 = S[0x1]
0x44e: V365 = 0x1
0x450: V366 = 0xa0
0x452: V367 = 0x2
0x454: V368 = EXP 0x2 0xa0
0x455: V369 = SUB 0x10000000000000000000000000000000000000000 0x1
0x456: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x457: V371 = CALLER
0x458: V372 = EQ V371 V370
0x459: V373 = 0x461
0x45c: JUMPI 0x461 V372
---
Entry stack: [V11, 0x2bd, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd, V247]

================================

Block 0x45d
[0x45d:0x460]
---
Predecessors: [0x44a]
Successors: []
---
0x45d PUSH1 0x0
0x45f DUP1
0x460 REVERT
---
0x45d: V374 = 0x0
0x460: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2bd, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd, V247]

================================

Block 0x461
[0x461:0x48f]
---
Predecessors: [0x44a]
Successors: [0x2bd]
---
0x461 JUMPDEST
0x462 PUSH1 0x1
0x464 DUP1
0x465 SLOAD
0x466 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47b NOT
0x47c AND
0x47d PUSH1 0x1
0x47f PUSH1 0xa0
0x481 PUSH1 0x2
0x483 EXP
0x484 SUB
0x485 SWAP3
0x486 SWAP1
0x487 SWAP3
0x488 AND
0x489 SWAP2
0x48a SWAP1
0x48b SWAP2
0x48c OR
0x48d SWAP1
0x48e SSTORE
0x48f JUMP
---
0x461: JUMPDEST 
0x462: V375 = 0x1
0x465: V376 = S[0x1]
0x466: V377 = 0xffffffffffffffffffffffffffffffffffffffff
0x47b: V378 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x47c: V379 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V376
0x47d: V380 = 0x1
0x47f: V381 = 0xa0
0x481: V382 = 0x2
0x483: V383 = EXP 0x2 0xa0
0x484: V384 = SUB 0x10000000000000000000000000000000000000000 0x1
0x488: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x48c: V386 = OR V385 V379
0x48e: S[0x1] = V386
0x48f: JUMP 0x2bd
---
Entry stack: [V11, 0x2bd, V247]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x490
[0x490:0x4a2]
---
Predecessors: [0x30d]
Successors: [0x4a3, 0x4a7]
---
0x490 JUMPDEST
0x491 PUSH1 0x1
0x493 SLOAD
0x494 PUSH1 0x1
0x496 PUSH1 0xa0
0x498 PUSH1 0x2
0x49a EXP
0x49b SUB
0x49c AND
0x49d CALLER
0x49e EQ
0x49f PUSH2 0x4a7
0x4a2 JUMPI
---
0x490: JUMPDEST 
0x491: V387 = 0x1
0x493: V388 = S[0x1]
0x494: V389 = 0x1
0x496: V390 = 0xa0
0x498: V391 = 0x2
0x49a: V392 = EXP 0x2 0xa0
0x49b: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49c: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x49d: V395 = CALLER
0x49e: V396 = EQ V395 V394
0x49f: V397 = 0x4a7
0x4a2: JUMPI 0x4a7 V396
---
Entry stack: [V11, 0x2bd, V261, V263]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd, V261, V263]

================================

Block 0x4a3
[0x4a3:0x4a6]
---
Predecessors: [0x490]
Successors: []
---
0x4a3 PUSH1 0x0
0x4a5 DUP1
0x4a6 REVERT
---
0x4a3: V398 = 0x0
0x4a6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2bd, V261, V263]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd, V261, V263]

================================

Block 0x4a7
[0x4a7:0x50d]
---
Predecessors: [0x490]
Successors: [0x50e, 0x512]
---
0x4a7 JUMPDEST
0x4a8 PUSH1 0x0
0x4aa DUP1
0x4ab SLOAD
0x4ac PUSH1 0x40
0x4ae DUP1
0x4af MLOAD
0x4b0 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4d1 DUP2
0x4d2 MSTORE
0x4d3 PUSH1 0x1
0x4d5 PUSH1 0xa0
0x4d7 PUSH1 0x2
0x4d9 EXP
0x4da SUB
0x4db DUP7
0x4dc DUP2
0x4dd AND
0x4de PUSH1 0x4
0x4e0 DUP4
0x4e1 ADD
0x4e2 MSTORE
0x4e3 PUSH1 0x24
0x4e5 DUP3
0x4e6 ADD
0x4e7 DUP7
0x4e8 SWAP1
0x4e9 MSTORE
0x4ea SWAP2
0x4eb MLOAD
0x4ec SWAP2
0x4ed SWAP1
0x4ee SWAP3
0x4ef AND
0x4f0 SWAP3
0x4f1 PUSH4 0xa9059cbb
0x4f6 SWAP3
0x4f7 PUSH1 0x44
0x4f9 DUP1
0x4fa DUP3
0x4fb ADD
0x4fc SWAP4
0x4fd SWAP2
0x4fe DUP3
0x4ff SWAP1
0x500 SUB
0x501 ADD
0x502 DUP2
0x503 DUP4
0x504 DUP8
0x505 DUP1
0x506 EXTCODESIZE
0x507 ISZERO
0x508 DUP1
0x509 ISZERO
0x50a PUSH2 0x512
0x50d JUMPI
---
0x4a7: JUMPDEST 
0x4a8: V399 = 0x0
0x4ab: V400 = S[0x0]
0x4ac: V401 = 0x40
0x4af: V402 = M[0x40]
0x4b0: V403 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4d2: M[V402] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4d3: V404 = 0x1
0x4d5: V405 = 0xa0
0x4d7: V406 = 0x2
0x4d9: V407 = EXP 0x2 0xa0
0x4da: V408 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4dd: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x4de: V410 = 0x4
0x4e1: V411 = ADD V402 0x4
0x4e2: M[V411] = V409
0x4e3: V412 = 0x24
0x4e6: V413 = ADD V402 0x24
0x4e9: M[V413] = V263
0x4eb: V414 = M[0x40]
0x4ef: V415 = AND V400 0xffffffffffffffffffffffffffffffffffffffff
0x4f1: V416 = 0xa9059cbb
0x4f7: V417 = 0x44
0x4fb: V418 = ADD V402 0x44
0x500: V419 = SUB V402 V414
0x501: V420 = ADD V419 0x44
0x506: V421 = EXTCODESIZE V415
0x507: V422 = ISZERO V421
0x509: V423 = ISZERO V422
0x50a: V424 = 0x512
0x50d: JUMPI 0x512 V423
---
Entry stack: [V11, 0x2bd, V261, V263]
Stack pops: 2
Stack additions: [S1, S0, V415, 0xa9059cbb, V418, 0x0, V414, V420, V414, 0x0, V415, V422]
Exit stack: [V11, 0x2bd, V261, V263, V415, 0xa9059cbb, V418, 0x0, V414, V420, V414, 0x0, V415, V422]

================================

Block 0x50e
[0x50e:0x511]
---
Predecessors: [0x4a7]
Successors: []
---
0x50e PUSH1 0x0
0x510 DUP1
0x511 REVERT
---
0x50e: V425 = 0x0
0x511: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2bd, V261, V263, V415, 0xa9059cbb, V418, 0x0, V414, V420, V414, 0x0, V415, V422]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd, V261, V263, V415, 0xa9059cbb, V418, 0x0, V414, V420, V414, 0x0, V415, V422]

================================

Block 0x512
[0x512:0x51c]
---
Predecessors: [0x4a7]
Successors: [0x51d, 0x526]
---
0x512 JUMPDEST
0x513 POP
0x514 GAS
0x515 CALL
0x516 ISZERO
0x517 DUP1
0x518 ISZERO
0x519 PUSH2 0x526
0x51c JUMPI
---
0x512: JUMPDEST 
0x514: V426 = GAS
0x515: V427 = CALL V426 V415 0x0 V414 V420 V414 0x0
0x516: V428 = ISZERO V427
0x518: V429 = ISZERO V428
0x519: V430 = 0x526
0x51c: JUMPI 0x526 V429
---
Entry stack: [V11, 0x2bd, V261, V263, V415, 0xa9059cbb, V418, 0x0, V414, V420, V414, 0x0, V415, V422]
Stack pops: 7
Stack additions: [V428]
Exit stack: [V11, 0x2bd, V261, V263, V415, 0xa9059cbb, V418, V428]

================================

Block 0x51d
[0x51d:0x525]
---
Predecessors: [0x512]
Successors: []
---
0x51d RETURNDATASIZE
0x51e PUSH1 0x0
0x520 DUP1
0x521 RETURNDATACOPY
0x522 RETURNDATASIZE
0x523 PUSH1 0x0
0x525 REVERT
---
0x51d: V431 = RETURNDATASIZE
0x51e: V432 = 0x0
0x521: RETURNDATACOPY 0x0 0x0 V431
0x522: V433 = RETURNDATASIZE
0x523: V434 = 0x0
0x525: REVERT 0x0 V433
---
Entry stack: [V11, 0x2bd, V261, V263, V415, 0xa9059cbb, V418, V428]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd, V261, V263, V415, 0xa9059cbb, V418, V428]

================================

Block 0x526
[0x526:0x52d]
---
Predecessors: [0x512]
Successors: [0x2bd]
---
0x526 JUMPDEST
0x527 POP
0x528 POP
0x529 POP
0x52a POP
0x52b POP
0x52c POP
0x52d JUMP
---
0x526: JUMPDEST 
0x52d: JUMP 0x2bd
---
Entry stack: [V11, 0x2bd, V261, V263, V415, 0xa9059cbb, V418, V428]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x52e
[0x52e:0x540]
---
Predecessors: [0x331]
Successors: [0x541, 0x545]
---
0x52e JUMPDEST
0x52f PUSH1 0x1
0x531 SLOAD
0x532 PUSH1 0x1
0x534 PUSH1 0xa0
0x536 PUSH1 0x2
0x538 EXP
0x539 SUB
0x53a AND
0x53b CALLER
0x53c EQ
0x53d PUSH2 0x545
0x540 JUMPI
---
0x52e: JUMPDEST 
0x52f: V435 = 0x1
0x531: V436 = S[0x1]
0x532: V437 = 0x1
0x534: V438 = 0xa0
0x536: V439 = 0x2
0x538: V440 = EXP 0x2 0xa0
0x539: V441 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53a: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x53b: V443 = CALLER
0x53c: V444 = EQ V443 V442
0x53d: V445 = 0x545
0x540: JUMPI 0x545 V444
---
Entry stack: [V11, 0x2bd]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd]

================================

Block 0x541
[0x541:0x544]
---
Predecessors: [0x52e]
Successors: []
---
0x541 PUSH1 0x0
0x543 DUP1
0x544 REVERT
---
0x541: V446 = 0x0
0x544: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2bd]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd]

================================

Block 0x545
[0x545:0x552]
---
Predecessors: [0x52e]
Successors: []
---
0x545 JUMPDEST
0x546 PUSH1 0x2
0x548 SLOAD
0x549 PUSH1 0x1
0x54b PUSH1 0xa0
0x54d PUSH1 0x2
0x54f EXP
0x550 SUB
0x551 AND
0x552 SELFDESTRUCT
---
0x545: JUMPDEST 
0x546: V447 = 0x2
0x548: V448 = S[0x2]
0x549: V449 = 0x1
0x54b: V450 = 0xa0
0x54d: V451 = 0x2
0x54f: V452 = EXP 0x2 0xa0
0x550: V453 = SUB 0x10000000000000000000000000000000000000000 0x1
0x551: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x552: SELFDESTRUCT V454
---
Entry stack: [V11, 0x2bd]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd]

================================

Block 0x553
[0x553:0x561]
---
Predecessors: [0x346]
Successors: [0x259]
---
0x553 JUMPDEST
0x554 PUSH1 0x0
0x556 SLOAD
0x557 PUSH1 0x1
0x559 PUSH1 0xa0
0x55b PUSH1 0x2
0x55d EXP
0x55e SUB
0x55f AND
0x560 DUP2
0x561 JUMP
---
0x553: JUMPDEST 
0x554: V455 = 0x0
0x556: V456 = S[0x0]
0x557: V457 = 0x1
0x559: V458 = 0xa0
0x55b: V459 = 0x2
0x55d: V460 = EXP 0x2 0xa0
0x55e: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55f: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V456
0x561: JUMP 0x259
---
Entry stack: [V11, 0x259]
Stack pops: 1
Stack additions: [S0, V462]
Exit stack: [V11, 0x259, V462]

================================

Block 0x562
[0x562:0x574]
---
Predecessors: [0x35b]
Successors: [0x575, 0x579]
---
0x562 JUMPDEST
0x563 PUSH1 0x1
0x565 SLOAD
0x566 PUSH1 0x1
0x568 PUSH1 0xa0
0x56a PUSH1 0x2
0x56c EXP
0x56d SUB
0x56e AND
0x56f CALLER
0x570 EQ
0x571 PUSH2 0x579
0x574 JUMPI
---
0x562: JUMPDEST 
0x563: V463 = 0x1
0x565: V464 = S[0x1]
0x566: V465 = 0x1
0x568: V466 = 0xa0
0x56a: V467 = 0x2
0x56c: V468 = EXP 0x2 0xa0
0x56d: V469 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56e: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0x56f: V471 = CALLER
0x570: V472 = EQ V471 V470
0x571: V473 = 0x579
0x574: JUMPI 0x579 V472
---
Entry stack: [V11, 0x2bd, V283]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd, V283]

================================

Block 0x575
[0x575:0x578]
---
Predecessors: [0x562]
Successors: []
---
0x575 PUSH1 0x0
0x577 DUP1
0x578 REVERT
---
0x575: V474 = 0x0
0x578: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2bd, V283]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd, V283]

================================

Block 0x579
[0x579:0x57d]
---
Predecessors: [0x562]
Successors: [0x2bd]
---
0x579 JUMPDEST
0x57a PUSH1 0x4
0x57c SSTORE
0x57d JUMP
---
0x579: JUMPDEST 
0x57a: V475 = 0x4
0x57c: S[0x4] = V283
0x57d: JUMP 0x2bd
---
Entry stack: [V11, 0x2bd, V283]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x57e
[0x57e:0x590]
---
Predecessors: [0x373]
Successors: [0x591, 0x595]
---
0x57e JUMPDEST
0x57f PUSH1 0x1
0x581 SLOAD
0x582 PUSH1 0x1
0x584 PUSH1 0xa0
0x586 PUSH1 0x2
0x588 EXP
0x589 SUB
0x58a AND
0x58b CALLER
0x58c EQ
0x58d PUSH2 0x595
0x590 JUMPI
---
0x57e: JUMPDEST 
0x57f: V476 = 0x1
0x581: V477 = S[0x1]
0x582: V478 = 0x1
0x584: V479 = 0xa0
0x586: V480 = 0x2
0x588: V481 = EXP 0x2 0xa0
0x589: V482 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58a: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x58b: V484 = CALLER
0x58c: V485 = EQ V484 V483
0x58d: V486 = 0x595
0x590: JUMPI 0x595 V485
---
Entry stack: [V11, 0x2bd, V291]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd, V291]

================================

Block 0x591
[0x591:0x594]
---
Predecessors: [0x57e]
Successors: []
---
0x591 PUSH1 0x0
0x593 DUP1
0x594 REVERT
---
0x591: V487 = 0x0
0x594: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2bd, V291]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2bd, V291]

================================

Block 0x595
[0x595:0x599]
---
Predecessors: [0x57e]
Successors: [0x2bd]
---
0x595 JUMPDEST
0x596 PUSH1 0x3
0x598 SSTORE
0x599 JUMP
---
0x595: JUMPDEST 
0x596: V488 = 0x3
0x598: S[0x3] = V291
0x599: JUMP 0x2bd
---
Entry stack: [V11, 0x2bd, V291]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x59a
[0x59a:0x5a8]
---
Predecessors: [0x38b]
Successors: [0x259]
---
0x59a JUMPDEST
0x59b PUSH1 0x2
0x59d SLOAD
0x59e PUSH1 0x1
0x5a0 PUSH1 0xa0
0x5a2 PUSH1 0x2
0x5a4 EXP
0x5a5 SUB
0x5a6 AND
0x5a7 DUP2
0x5a8 JUMP
---
0x59a: JUMPDEST 
0x59b: V489 = 0x2
0x59d: V490 = S[0x2]
0x59e: V491 = 0x1
0x5a0: V492 = 0xa0
0x5a2: V493 = 0x2
0x5a4: V494 = EXP 0x2 0xa0
0x5a5: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a6: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x5a8: JUMP 0x259
---
Entry stack: [V11, 0x259]
Stack pops: 1
Stack additions: [S0, V496]
Exit stack: [V11, 0x259, V496]

================================

Block 0x5a9
[0x5a9:0x5ae]
---
Predecessors: [0x3a0]
Successors: [0x28a]
---
0x5a9 JUMPDEST
0x5aa PUSH1 0x4
0x5ac SLOAD
0x5ad DUP2
0x5ae JUMP
---
0x5a9: JUMPDEST 
0x5aa: V497 = 0x4
0x5ac: V498 = S[0x4]
0x5ae: JUMP 0x28a
---
Entry stack: [V11, 0x28a]
Stack pops: 1
Stack additions: [S0, V498]
Exit stack: [V11, 0x28a, V498]

================================

Block 0x5af
[0x5af:0x5e2]
---
Predecessors: []
Successors: []
---
0x5af STOP
0x5b0 LOG1
0x5b1 PUSH6 0x627a7a723058
0x5b8 SHA3
0x5b9 MISSING 0xa5
0x5ba MISSING 0x4a
0x5bb DELEGATECALL
0x5bc CODESIZE
0x5bd DUP2
0x5be MISSING 0xc5
0x5bf BALANCE
0x5c0 MISSING 0x2f
0x5c1 MISSING 0x2a
0x5c2 SWAP10
0x5c3 MISSING 0x28
0x5c4 EXTCODESIZE
0x5c5 MISSING 0xad
0x5c6 MISSING 0xd9
0x5c7 MISSING 0xd1
0x5c8 PC
0x5c9 MISSING 0xbb
0x5ca DELEGATECALL
0x5cb DUP10
0x5cc STATICCALL
0x5cd PUSH21 0x758a354bc76cca2ffd94e80029
---
0x5af: STOP 
0x5b0: LOG S0 S1 S2
0x5b1: V499 = 0x627a7a723058
0x5b8: V500 = SHA3 0x627a7a723058 S3
0x5b9: MISSING 0xa5
0x5ba: MISSING 0x4a
0x5bb: V501 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x5bc: V502 = CODESIZE
0x5be: MISSING 0xc5
0x5bf: V503 = BALANCE S0
0x5c0: MISSING 0x2f
0x5c1: MISSING 0x2a
0x5c3: MISSING 0x28
0x5c4: V504 = EXTCODESIZE S0
0x5c5: MISSING 0xad
0x5c6: MISSING 0xd9
0x5c7: MISSING 0xd1
0x5c8: V505 = PC
0x5c9: MISSING 0xbb
0x5ca: V506 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x5cc: V507 = STATICCALL S14 V506 S6 S7 S8 S9
0x5cd: V508 = 0x758a354bc76cca2ffd94e80029
---
Entry stack: []
Stack pops: 0
Stack additions: [V500, V501, V502, V501, V503, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, V504, V505, 0x758a354bc76cca2ffd94e80029, V507, S10, S11, S12, S13, S14]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x244
Exit block: 0x259
Body: 0x244, 0x24c, 0x250, 0x259, 0x3a9

Function 1:
Public function signature: 0xb97bc86
Entry block: 0x275
Exit block: 0x28a
Body: 0x275, 0x27d, 0x281, 0x28a, 0x3b8

Function 2:
Public function signature: 0x13af4035
Entry block: 0x29c
Exit block: 0x2bd
Body: 0x29c, 0x2a4, 0x2a8, 0x2bd, 0x3be, 0x3d1, 0x3d5

Function 3:
Public function signature: 0x144fa6d7
Entry block: 0x2bf
Exit block: 0x2bd
Body: 0x2bd, 0x2bf, 0x2c7, 0x2cb, 0x404, 0x417, 0x41b

Function 4:
Public function signature: 0x3f516018
Entry block: 0x2e0
Exit block: 0x2bd
Body: 0x2bd, 0x2e0, 0x2e8, 0x2ec, 0x44a, 0x45d, 0x461

Function 5:
Public function signature: 0x412664ae
Entry block: 0x301
Exit block: 0x2bd
Body: 0x2bd, 0x301, 0x309, 0x30d, 0x490, 0x4a3, 0x4a7, 0x50e, 0x512, 0x51d, 0x526

Function 6:
Public function signature: 0x41c0e1b5
Entry block: 0x325
Exit block: 0x545
Body: 0x325, 0x32d, 0x331, 0x52e, 0x541, 0x545

Function 7:
Public function signature: 0x6e66f6e9
Entry block: 0x33a
Exit block: 0x259
Body: 0x259, 0x33a, 0x342, 0x346, 0x553

Function 8:
Public function signature: 0x739cb57d
Entry block: 0x34f
Exit block: 0x2bd
Body: 0x2bd, 0x34f, 0x357, 0x35b, 0x562, 0x575, 0x579

Function 9:
Public function signature: 0x82d95df5
Entry block: 0x367
Exit block: 0x2bd
Body: 0x2bd, 0x367, 0x36f, 0x373, 0x57e, 0x591, 0x595

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x37f
Exit block: 0x259
Body: 0x259, 0x37f, 0x387, 0x38b, 0x59a

Function 11:
Public function signature: 0xc24a0f8b
Entry block: 0x394
Exit block: 0x28a
Body: 0x28a, 0x394, 0x39c, 0x3a0, 0x5a9

Function 12:
Public fallback function
Entry block: 0xb9
Exit block: 0x237
Body: 0xb9, 0xc3, 0xc7, 0xd1, 0xd5, 0xdf, 0xe3, 0xf9, 0x101, 0x107, 0x10d, 0x11b, 0x123, 0x129, 0x12e, 0x13c, 0x142, 0x148, 0x14d, 0x1b0, 0x1b4, 0x1bf, 0x1c8, 0x237, 0x240

