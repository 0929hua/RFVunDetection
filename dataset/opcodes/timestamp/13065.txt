Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x9e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x9e
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x9e
0xa: JUMPI 0x9e V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x1bc]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x1bc
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x1bc
0x24: JUMPI 0x1bc V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x1d1]
---
0x25 DUP1
0x26 PUSH4 0x262199c3
0x2b EQ
0x2c PUSH2 0x1d1
0x2f JUMPI
---
0x26: V16 = 0x262199c3
0x2b: V17 = EQ 0x262199c3 V12
0x2c: V18 = 0x1d1
0x2f: JUMPI 0x1d1 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x1e6]
---
0x30 DUP1
0x31 PUSH4 0x29dcb0cf
0x36 EQ
0x37 PUSH2 0x1e6
0x3a JUMPI
---
0x31: V19 = 0x29dcb0cf
0x36: V20 = EQ 0x29dcb0cf V12
0x37: V21 = 0x1e6
0x3a: JUMPI 0x1e6 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x20b]
---
0x3b DUP1
0x3c PUSH4 0x38af3eed
0x41 EQ
0x42 PUSH2 0x20b
0x45 JUMPI
---
0x3c: V22 = 0x38af3eed
0x41: V23 = EQ 0x38af3eed V12
0x42: V24 = 0x20b
0x45: JUMPI 0x20b V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x23a]
---
0x46 DUP1
0x47 PUSH4 0x41bde110
0x4c EQ
0x4d PUSH2 0x23a
0x50 JUMPI
---
0x47: V25 = 0x41bde110
0x4c: V26 = EQ 0x41bde110 V12
0x4d: V27 = 0x23a
0x50: JUMPI 0x23a V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x24f]
---
0x51 DUP1
0x52 PUSH4 0x4fb2e45d
0x57 EQ
0x58 PUSH2 0x24f
0x5b JUMPI
---
0x52: V28 = 0x4fb2e45d
0x57: V29 = EQ 0x4fb2e45d V12
0x58: V30 = 0x24f
0x5b: JUMPI 0x24f V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x270]
---
0x5c DUP1
0x5d PUSH4 0x6e66f6e9
0x62 EQ
0x63 PUSH2 0x270
0x66 JUMPI
---
0x5d: V31 = 0x6e66f6e9
0x62: V32 = EQ 0x6e66f6e9 V12
0x63: V33 = 0x270
0x66: JUMPI 0x270 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x29f]
---
0x67 DUP1
0x68 PUSH4 0x70a08231
0x6d EQ
0x6e PUSH2 0x29f
0x71 JUMPI
---
0x68: V34 = 0x70a08231
0x6d: V35 = EQ 0x70a08231 V12
0x6e: V36 = 0x29f
0x71: JUMPI 0x29f V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x2d0]
---
0x72 DUP1
0x73 PUSH4 0x7a3a0e84
0x78 EQ
0x79 PUSH2 0x2d0
0x7c JUMPI
---
0x73: V37 = 0x7a3a0e84
0x78: V38 = EQ 0x7a3a0e84 V12
0x79: V39 = 0x2d0
0x7c: JUMPI 0x2d0 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2f5]
---
0x7d DUP1
0x7e PUSH4 0x7b3e5e7b
0x83 EQ
0x84 PUSH2 0x2f5
0x87 JUMPI
---
0x7e: V40 = 0x7b3e5e7b
0x83: V41 = EQ 0x7b3e5e7b V12
0x84: V42 = 0x2f5
0x87: JUMPI 0x2f5 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x31a]
---
0x88 DUP1
0x89 PUSH4 0x8da5cb5b
0x8e EQ
0x8f PUSH2 0x31a
0x92 JUMPI
---
0x89: V43 = 0x8da5cb5b
0x8e: V44 = EQ 0x8da5cb5b V12
0x8f: V45 = 0x31a
0x92: JUMPI 0x31a V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x349]
---
0x93 DUP1
0x94 PUSH4 0xa035b1fe
0x99 EQ
0x9a PUSH2 0x349
0x9d JUMPI
---
0x94: V46 = 0xa035b1fe
0x99: V47 = EQ 0xa035b1fe V12
0x9a: V48 = 0x349
0x9d: JUMPI 0x349 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa1]
---
Predecessors: [0x0, 0x93]
Successors: [0xa2]
---
0x9e JUMPDEST
0x9f PUSH2 0x1ba
---
0x9e: JUMPDEST 
0x9f: V49 = 0x1ba
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ba]
Exit stack: [V12, 0x1ba]

================================

Block 0xa2
[0xa2:0xb5]
---
Predecessors: [0x9e]
Successors: [0xb6, 0xba]
---
0xa2 JUMPDEST
0xa3 PUSH1 0x8
0xa5 SLOAD
0xa6 PUSH1 0x0
0xa8 SWAP1
0xa9 PUSH2 0x100
0xac SWAP1
0xad DIV
0xae PUSH1 0xff
0xb0 AND
0xb1 ISZERO
0xb2 PUSH2 0xba
0xb5 JUMPI
---
0xa2: JUMPDEST 
0xa3: V50 = 0x8
0xa5: V51 = S[0x8]
0xa6: V52 = 0x0
0xa9: V53 = 0x100
0xad: V54 = DIV V51 0x100
0xae: V55 = 0xff
0xb0: V56 = AND 0xff V54
0xb1: V57 = ISZERO V56
0xb2: V58 = 0xba
0xb5: JUMPI 0xba V57
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x1ba, 0x0]

================================

Block 0xb6
[0xb6:0xb9]
---
Predecessors: [0xa2]
Successors: []
---
0xb6 PUSH1 0x0
0xb8 DUP1
0xb9 REVERT
---
0xb6: V59 = 0x0
0xb9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ba, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba, 0x0]

================================

Block 0xba
[0xba:0xc7]
---
Predecessors: [0xa2]
Successors: [0xc8, 0xcc]
---
0xba JUMPDEST
0xbb POP
0xbc PUSH1 0x5
0xbe SLOAD
0xbf CALLVALUE
0xc0 SWAP1
0xc1 DUP2
0xc2 LT
0xc3 ISZERO
0xc4 PUSH2 0xcc
0xc7 JUMPI
---
0xba: JUMPDEST 
0xbc: V60 = 0x5
0xbe: V61 = S[0x5]
0xbf: V62 = CALLVALUE
0xc2: V63 = LT V62 V61
0xc3: V64 = ISZERO V63
0xc4: V65 = 0xcc
0xc7: JUMPI 0xcc V64
---
Entry stack: [V12, 0x1ba, 0x0]
Stack pops: 1
Stack additions: [V62]
Exit stack: [V12, 0x1ba, V62]

================================

Block 0xc8
[0xc8:0xcb]
---
Predecessors: [0xba]
Successors: []
---
0xc8 PUSH1 0x0
0xca DUP1
0xcb REVERT
---
0xc8: V66 = 0x0
0xcb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ba, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba, V62]

================================

Block 0xcc
[0xcc:0x108]
---
Predecessors: [0xba]
Successors: [0x109, 0x10a]
---
0xcc JUMPDEST
0xcd CALLER
0xce PUSH1 0x1
0xd0 PUSH1 0xa0
0xd2 PUSH1 0x2
0xd4 EXP
0xd5 SUB
0xd6 DUP2
0xd7 DUP2
0xd8 AND
0xd9 PUSH1 0x0
0xdb SWAP1
0xdc DUP2
0xdd MSTORE
0xde PUSH1 0x7
0xe0 PUSH1 0x20
0xe2 MSTORE
0xe3 PUSH1 0x40
0xe5 SWAP1
0xe6 SHA3
0xe7 DUP4
0xe8 SWAP1
0xe9 SSTORE
0xea PUSH1 0x3
0xec DUP1
0xed SLOAD
0xee DUP5
0xef ADD
0xf0 SWAP1
0xf1 SSTORE
0xf2 PUSH1 0x6
0xf4 SLOAD
0xf5 PUSH1 0x5
0xf7 SLOAD
0xf8 SWAP2
0xf9 AND
0xfa SWAP2
0xfb PUSH4 0x79c65068
0x100 SWAP2
0x101 DUP5
0x102 DUP2
0x103 ISZERO
0x104 ISZERO
0x105 PUSH2 0x10a
0x108 JUMPI
---
0xcc: JUMPDEST 
0xcd: V67 = CALLER
0xce: V68 = 0x1
0xd0: V69 = 0xa0
0xd2: V70 = 0x2
0xd4: V71 = EXP 0x2 0xa0
0xd5: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0xd9: V74 = 0x0
0xdd: M[0x0] = V73
0xde: V75 = 0x7
0xe0: V76 = 0x20
0xe2: M[0x20] = 0x7
0xe3: V77 = 0x40
0xe6: V78 = SHA3 0x0 0x40
0xe9: S[V78] = V62
0xea: V79 = 0x3
0xed: V80 = S[0x3]
0xef: V81 = ADD V62 V80
0xf1: S[0x3] = V81
0xf2: V82 = 0x6
0xf4: V83 = S[0x6]
0xf5: V84 = 0x5
0xf7: V85 = S[0x5]
0xf9: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0xfb: V87 = 0x79c65068
0x103: V88 = ISZERO V85
0x104: V89 = ISZERO V88
0x105: V90 = 0x10a
0x108: JUMPI 0x10a V89
---
Entry stack: [V12, 0x1ba, V62]
Stack pops: 1
Stack additions: [S0, V86, 0x79c65068, V67, V85, S0]
Exit stack: [V12, 0x1ba, V62, V86, 0x79c65068, V67, V85, V62]

================================

Block 0x109
[0x109:0x109]
---
Predecessors: [0xcc]
Successors: []
---
0x109 INVALID
---
0x109: INVALID 
---
Entry stack: [V12, 0x1ba, V62, V86, 0x79c65068, V67, V85, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba, V62, V86, 0x79c65068, V67, V85, V62]

================================

Block 0x10a
[0x10a:0x149]
---
Predecessors: [0xcc]
Successors: [0x14a, 0x14e]
---
0x10a JUMPDEST
0x10b DIV
0x10c PUSH1 0x40
0x10e MLOAD
0x10f PUSH1 0xe0
0x111 PUSH1 0x2
0x113 EXP
0x114 PUSH4 0xffffffff
0x119 DUP6
0x11a AND
0x11b MUL
0x11c DUP2
0x11d MSTORE
0x11e PUSH1 0x1
0x120 PUSH1 0xa0
0x122 PUSH1 0x2
0x124 EXP
0x125 SUB
0x126 SWAP1
0x127 SWAP3
0x128 AND
0x129 PUSH1 0x4
0x12b DUP4
0x12c ADD
0x12d MSTORE
0x12e PUSH1 0x24
0x130 DUP3
0x131 ADD
0x132 MSTORE
0x133 PUSH1 0x44
0x135 ADD
0x136 PUSH1 0x0
0x138 PUSH1 0x40
0x13a MLOAD
0x13b DUP1
0x13c DUP4
0x13d SUB
0x13e DUP2
0x13f PUSH1 0x0
0x141 DUP8
0x142 DUP1
0x143 EXTCODESIZE
0x144 ISZERO
0x145 ISZERO
0x146 PUSH2 0x14e
0x149 JUMPI
---
0x10a: JUMPDEST 
0x10b: V91 = DIV V62 V85
0x10c: V92 = 0x40
0x10e: V93 = M[0x40]
0x10f: V94 = 0xe0
0x111: V95 = 0x2
0x113: V96 = EXP 0x2 0xe0
0x114: V97 = 0xffffffff
0x11a: V98 = AND 0x79c65068 0xffffffff
0x11b: V99 = MUL 0x79c65068 0x100000000000000000000000000000000000000000000000000000000
0x11d: M[V93] = 0x79c6506800000000000000000000000000000000000000000000000000000000
0x11e: V100 = 0x1
0x120: V101 = 0xa0
0x122: V102 = 0x2
0x124: V103 = EXP 0x2 0xa0
0x125: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x128: V105 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0x129: V106 = 0x4
0x12c: V107 = ADD V93 0x4
0x12d: M[V107] = V105
0x12e: V108 = 0x24
0x131: V109 = ADD V93 0x24
0x132: M[V109] = V91
0x133: V110 = 0x44
0x135: V111 = ADD 0x44 V93
0x136: V112 = 0x0
0x138: V113 = 0x40
0x13a: V114 = M[0x40]
0x13d: V115 = SUB V111 V114
0x13f: V116 = 0x0
0x143: V117 = EXTCODESIZE V86
0x144: V118 = ISZERO V117
0x145: V119 = ISZERO V118
0x146: V120 = 0x14e
0x149: JUMPI 0x14e V119
---
Entry stack: [V12, 0x1ba, V62, V86, 0x79c65068, V67, V85, V62]
Stack pops: 5
Stack additions: [S4, S3, V111, 0x0, V114, V115, V114, 0x0, S4]
Exit stack: [V12, 0x1ba, V62, V86, 0x79c65068, V111, 0x0, V114, V115, V114, 0x0, V86]

================================

Block 0x14a
[0x14a:0x14d]
---
Predecessors: [0x10a]
Successors: []
---
0x14a PUSH1 0x0
0x14c DUP1
0x14d REVERT
---
0x14a: V121 = 0x0
0x14d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ba, V62, V86, 0x79c65068, V111, 0x0, V114, V115, V114, 0x0, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba, V62, V86, 0x79c65068, V111, 0x0, V114, V115, V114, 0x0, V86]

================================

Block 0x14e
[0x14e:0x15a]
---
Predecessors: [0x10a]
Successors: [0x15b, 0x15f]
---
0x14e JUMPDEST
0x14f PUSH2 0x2c6
0x152 GAS
0x153 SUB
0x154 CALL
0x155 ISZERO
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0x14e: JUMPDEST 
0x14f: V122 = 0x2c6
0x152: V123 = GAS
0x153: V124 = SUB V123 0x2c6
0x154: V125 = CALL V124 V86 0x0 V114 V115 V114 0x0
0x155: V126 = ISZERO V125
0x156: V127 = ISZERO V126
0x157: V128 = 0x15f
0x15a: JUMPI 0x15f V127
---
Entry stack: [V12, 0x1ba, V62, V86, 0x79c65068, V111, 0x0, V114, V115, V114, 0x0, V86]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1ba, V62, V86, 0x79c65068, V111]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0x14e]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V129 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ba, V62, V86, 0x79c65068, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba, V62, V86, 0x79c65068, V111]

================================

Block 0x15f
[0x15f:0x1b6]
---
Predecessors: [0x14e]
Successors: [0x1b7]
---
0x15f JUMPDEST
0x160 POP
0x161 POP
0x162 POP
0x163 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x184 CALLER
0x185 DUP3
0x186 PUSH1 0x1
0x188 PUSH1 0x40
0x18a MLOAD
0x18b PUSH1 0x1
0x18d PUSH1 0xa0
0x18f PUSH1 0x2
0x191 EXP
0x192 SUB
0x193 SWAP1
0x194 SWAP4
0x195 AND
0x196 DUP4
0x197 MSTORE
0x198 PUSH1 0x20
0x19a DUP4
0x19b ADD
0x19c SWAP2
0x19d SWAP1
0x19e SWAP2
0x19f MSTORE
0x1a0 ISZERO
0x1a1 ISZERO
0x1a2 PUSH1 0x40
0x1a4 DUP1
0x1a5 DUP4
0x1a6 ADD
0x1a7 SWAP2
0x1a8 SWAP1
0x1a9 SWAP2
0x1aa MSTORE
0x1ab PUSH1 0x60
0x1ad SWAP1
0x1ae SWAP2
0x1af ADD
0x1b0 SWAP1
0x1b1 MLOAD
0x1b2 DUP1
0x1b3 SWAP2
0x1b4 SUB
0x1b5 SWAP1
0x1b6 LOG1
---
0x15f: JUMPDEST 
0x163: V130 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x184: V131 = CALLER
0x186: V132 = 0x1
0x188: V133 = 0x40
0x18a: V134 = M[0x40]
0x18b: V135 = 0x1
0x18d: V136 = 0xa0
0x18f: V137 = 0x2
0x191: V138 = EXP 0x2 0xa0
0x192: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x195: V140 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x197: M[V134] = V140
0x198: V141 = 0x20
0x19b: V142 = ADD V134 0x20
0x19f: M[V142] = V62
0x1a0: V143 = ISZERO 0x1
0x1a1: V144 = ISZERO 0x0
0x1a2: V145 = 0x40
0x1a6: V146 = ADD V134 0x40
0x1aa: M[V146] = 0x1
0x1ab: V147 = 0x60
0x1af: V148 = ADD V134 0x60
0x1b1: V149 = M[0x40]
0x1b4: V150 = SUB V148 V149
0x1b6: LOG V149 V150 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V12, 0x1ba, V62, V86, 0x79c65068, V111]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x1ba, V62]

================================

Block 0x1b7
[0x1b7:0x1b9]
---
Predecessors: [0x15f]
Successors: [0x1ba]
---
0x1b7 JUMPDEST
0x1b8 POP
0x1b9 JUMP
---
0x1b7: JUMPDEST 
0x1b9: JUMP 0x1ba
---
Entry stack: [V12, 0x1ba, V62]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ba
[0x1ba:0x1bb]
---
Predecessors: [0x1b7, 0x3eb, 0x476, 0x548, 0x590]
Successors: []
---
0x1ba JUMPDEST
0x1bb STOP
---
0x1ba: JUMPDEST 
0x1bb: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bc
[0x1bc:0x1c2]
---
Predecessors: [0xb]
Successors: [0x1c3, 0x1c7]
---
0x1bc JUMPDEST
0x1bd CALLVALUE
0x1be ISZERO
0x1bf PUSH2 0x1c7
0x1c2 JUMPI
---
0x1bc: JUMPDEST 
0x1bd: V151 = CALLVALUE
0x1be: V152 = ISZERO V151
0x1bf: V153 = 0x1c7
0x1c2: JUMPI 0x1c7 V152
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c3
[0x1c3:0x1c6]
---
Predecessors: [0x1bc]
Successors: []
---
0x1c3 PUSH1 0x0
0x1c5 DUP1
0x1c6 REVERT
---
0x1c3: V154 = 0x0
0x1c6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c7
[0x1c7:0x1ce]
---
Predecessors: [0x1bc]
Successors: [0x36e]
---
0x1c7 JUMPDEST
0x1c8 PUSH2 0x1ba
0x1cb PUSH2 0x36e
0x1ce JUMP
---
0x1c7: JUMPDEST 
0x1c8: V155 = 0x1ba
0x1cb: V156 = 0x36e
0x1ce: JUMP 0x36e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ba]
Exit stack: [V12, 0x1ba]

================================

Block 0x1cf
[0x1cf:0x1d0]
---
Predecessors: []
Successors: []
---
0x1cf JUMPDEST
0x1d0 STOP
---
0x1cf: JUMPDEST 
0x1d0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d1
[0x1d1:0x1d7]
---
Predecessors: [0x25]
Successors: [0x1d8, 0x1dc]
---
0x1d1 JUMPDEST
0x1d2 CALLVALUE
0x1d3 ISZERO
0x1d4 PUSH2 0x1dc
0x1d7 JUMPI
---
0x1d1: JUMPDEST 
0x1d2: V157 = CALLVALUE
0x1d3: V158 = ISZERO V157
0x1d4: V159 = 0x1dc
0x1d7: JUMPI 0x1dc V158
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d8
[0x1d8:0x1db]
---
Predecessors: [0x1d1]
Successors: []
---
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db REVERT
---
0x1d8: V160 = 0x0
0x1db: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1dc
[0x1dc:0x1e3]
---
Predecessors: [0x1d1]
Successors: [0x3ed]
---
0x1dc JUMPDEST
0x1dd PUSH2 0x1ba
0x1e0 PUSH2 0x3ed
0x1e3 JUMP
---
0x1dc: JUMPDEST 
0x1dd: V161 = 0x1ba
0x1e0: V162 = 0x3ed
0x1e3: JUMP 0x3ed
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ba]
Exit stack: [V12, 0x1ba]

================================

Block 0x1e4
[0x1e4:0x1e5]
---
Predecessors: []
Successors: []
---
0x1e4 JUMPDEST
0x1e5 STOP
---
0x1e4: JUMPDEST 
0x1e5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e6
[0x1e6:0x1ec]
---
Predecessors: [0x30]
Successors: [0x1ed, 0x1f1]
---
0x1e6 JUMPDEST
0x1e7 CALLVALUE
0x1e8 ISZERO
0x1e9 PUSH2 0x1f1
0x1ec JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V163 = CALLVALUE
0x1e8: V164 = ISZERO V163
0x1e9: V165 = 0x1f1
0x1ec: JUMPI 0x1f1 V164
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ed
[0x1ed:0x1f0]
---
Predecessors: [0x1e6]
Successors: []
---
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 REVERT
---
0x1ed: V166 = 0x0
0x1f0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f1
[0x1f1:0x1f8]
---
Predecessors: [0x1e6]
Successors: [0x478]
---
0x1f1 JUMPDEST
0x1f2 PUSH2 0x1f9
0x1f5 PUSH2 0x478
0x1f8 JUMP
---
0x1f1: JUMPDEST 
0x1f2: V167 = 0x1f9
0x1f5: V168 = 0x478
0x1f8: JUMP 0x478
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f9]
Exit stack: [V12, 0x1f9]

================================

Block 0x1f9
[0x1f9:0x20a]
---
Predecessors: [0x478, 0x5a2, 0x5b4, 0x5ba, 0x5cf]
Successors: []
---
0x1f9 JUMPDEST
0x1fa PUSH1 0x40
0x1fc MLOAD
0x1fd SWAP1
0x1fe DUP2
0x1ff MSTORE
0x200 PUSH1 0x20
0x202 ADD
0x203 PUSH1 0x40
0x205 MLOAD
0x206 DUP1
0x207 SWAP2
0x208 SUB
0x209 SWAP1
0x20a RETURN
---
0x1f9: JUMPDEST 
0x1fa: V169 = 0x40
0x1fc: V170 = M[0x40]
0x1ff: M[V170] = S0
0x200: V171 = 0x20
0x202: V172 = ADD 0x20 V170
0x203: V173 = 0x40
0x205: V174 = M[0x40]
0x208: V175 = SUB V172 V174
0x20a: RETURN V174 V175
---
Entry stack: [V12, 0x1f9, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1f9]

================================

Block 0x20b
[0x20b:0x211]
---
Predecessors: [0x3b]
Successors: [0x212, 0x216]
---
0x20b JUMPDEST
0x20c CALLVALUE
0x20d ISZERO
0x20e PUSH2 0x216
0x211 JUMPI
---
0x20b: JUMPDEST 
0x20c: V176 = CALLVALUE
0x20d: V177 = ISZERO V176
0x20e: V178 = 0x216
0x211: JUMPI 0x216 V177
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x212
[0x212:0x215]
---
Predecessors: [0x20b]
Successors: []
---
0x212 PUSH1 0x0
0x214 DUP1
0x215 REVERT
---
0x212: V179 = 0x0
0x215: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x216
[0x216:0x21d]
---
Predecessors: [0x20b]
Successors: [0x47e]
---
0x216 JUMPDEST
0x217 PUSH2 0x21e
0x21a PUSH2 0x47e
0x21d JUMP
---
0x216: JUMPDEST 
0x217: V180 = 0x21e
0x21a: V181 = 0x47e
0x21d: JUMP 0x47e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x21e]
Exit stack: [V12, 0x21e]

================================

Block 0x21e
[0x21e:0x239]
---
Predecessors: [0x47e, 0x593, 0x5c0]
Successors: []
---
0x21e JUMPDEST
0x21f PUSH1 0x40
0x221 MLOAD
0x222 PUSH1 0x1
0x224 PUSH1 0xa0
0x226 PUSH1 0x2
0x228 EXP
0x229 SUB
0x22a SWAP1
0x22b SWAP2
0x22c AND
0x22d DUP2
0x22e MSTORE
0x22f PUSH1 0x20
0x231 ADD
0x232 PUSH1 0x40
0x234 MLOAD
0x235 DUP1
0x236 SWAP2
0x237 SUB
0x238 SWAP1
0x239 RETURN
---
0x21e: JUMPDEST 
0x21f: V182 = 0x40
0x221: V183 = M[0x40]
0x222: V184 = 0x1
0x224: V185 = 0xa0
0x226: V186 = 0x2
0x228: V187 = EXP 0x2 0xa0
0x229: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22c: V189 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x22e: M[V183] = V189
0x22f: V190 = 0x20
0x231: V191 = ADD 0x20 V183
0x232: V192 = 0x40
0x234: V193 = M[0x40]
0x237: V194 = SUB V191 V193
0x239: RETURN V193 V194
---
Entry stack: [V12, 0x21e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x21e]

================================

Block 0x23a
[0x23a:0x240]
---
Predecessors: [0x46]
Successors: [0x241, 0x245]
---
0x23a JUMPDEST
0x23b CALLVALUE
0x23c ISZERO
0x23d PUSH2 0x245
0x240 JUMPI
---
0x23a: JUMPDEST 
0x23b: V195 = CALLVALUE
0x23c: V196 = ISZERO V195
0x23d: V197 = 0x245
0x240: JUMPI 0x245 V196
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x241
[0x241:0x244]
---
Predecessors: [0x23a]
Successors: []
---
0x241 PUSH1 0x0
0x243 DUP1
0x244 REVERT
---
0x241: V198 = 0x0
0x244: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x245
[0x245:0x24c]
---
Predecessors: [0x23a]
Successors: [0x48d]
---
0x245 JUMPDEST
0x246 PUSH2 0x1ba
0x249 PUSH2 0x48d
0x24c JUMP
---
0x245: JUMPDEST 
0x246: V199 = 0x1ba
0x249: V200 = 0x48d
0x24c: JUMP 0x48d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ba]
Exit stack: [V12, 0x1ba]

================================

Block 0x24d
[0x24d:0x24e]
---
Predecessors: []
Successors: []
---
0x24d JUMPDEST
0x24e STOP
---
0x24d: JUMPDEST 
0x24e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x24f
[0x24f:0x255]
---
Predecessors: [0x51]
Successors: [0x256, 0x25a]
---
0x24f JUMPDEST
0x250 CALLVALUE
0x251 ISZERO
0x252 PUSH2 0x25a
0x255 JUMPI
---
0x24f: JUMPDEST 
0x250: V201 = CALLVALUE
0x251: V202 = ISZERO V201
0x252: V203 = 0x25a
0x255: JUMPI 0x25a V202
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x256
[0x256:0x259]
---
Predecessors: [0x24f]
Successors: []
---
0x256 PUSH1 0x0
0x258 DUP1
0x259 REVERT
---
0x256: V204 = 0x0
0x259: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25a
[0x25a:0x26d]
---
Predecessors: [0x24f]
Successors: [0x54a]
---
0x25a JUMPDEST
0x25b PUSH2 0x1ba
0x25e PUSH1 0x1
0x260 PUSH1 0xa0
0x262 PUSH1 0x2
0x264 EXP
0x265 SUB
0x266 PUSH1 0x4
0x268 CALLDATALOAD
0x269 AND
0x26a PUSH2 0x54a
0x26d JUMP
---
0x25a: JUMPDEST 
0x25b: V205 = 0x1ba
0x25e: V206 = 0x1
0x260: V207 = 0xa0
0x262: V208 = 0x2
0x264: V209 = EXP 0x2 0xa0
0x265: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x266: V211 = 0x4
0x268: V212 = CALLDATALOAD 0x4
0x269: V213 = AND V212 0xffffffffffffffffffffffffffffffffffffffff
0x26a: V214 = 0x54a
0x26d: JUMP 0x54a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ba, V213]
Exit stack: [V12, 0x1ba, V213]

================================

Block 0x26e
[0x26e:0x26f]
---
Predecessors: []
Successors: []
---
0x26e JUMPDEST
0x26f STOP
---
0x26e: JUMPDEST 
0x26f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x270
[0x270:0x276]
---
Predecessors: [0x5c]
Successors: [0x277, 0x27b]
---
0x270 JUMPDEST
0x271 CALLVALUE
0x272 ISZERO
0x273 PUSH2 0x27b
0x276 JUMPI
---
0x270: JUMPDEST 
0x271: V215 = CALLVALUE
0x272: V216 = ISZERO V215
0x273: V217 = 0x27b
0x276: JUMPI 0x27b V216
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x277
[0x277:0x27a]
---
Predecessors: [0x270]
Successors: []
---
0x277 PUSH1 0x0
0x279 DUP1
0x27a REVERT
---
0x277: V218 = 0x0
0x27a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27b
[0x27b:0x282]
---
Predecessors: [0x270]
Successors: [0x593]
---
0x27b JUMPDEST
0x27c PUSH2 0x21e
0x27f PUSH2 0x593
0x282 JUMP
---
0x27b: JUMPDEST 
0x27c: V219 = 0x21e
0x27f: V220 = 0x593
0x282: JUMP 0x593
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x21e]
Exit stack: [V12, 0x21e]

================================

Block 0x283
[0x283:0x29e]
---
Predecessors: []
Successors: []
---
0x283 JUMPDEST
0x284 PUSH1 0x40
0x286 MLOAD
0x287 PUSH1 0x1
0x289 PUSH1 0xa0
0x28b PUSH1 0x2
0x28d EXP
0x28e SUB
0x28f SWAP1
0x290 SWAP2
0x291 AND
0x292 DUP2
0x293 MSTORE
0x294 PUSH1 0x20
0x296 ADD
0x297 PUSH1 0x40
0x299 MLOAD
0x29a DUP1
0x29b SWAP2
0x29c SUB
0x29d SWAP1
0x29e RETURN
---
0x283: JUMPDEST 
0x284: V221 = 0x40
0x286: V222 = M[0x40]
0x287: V223 = 0x1
0x289: V224 = 0xa0
0x28b: V225 = 0x2
0x28d: V226 = EXP 0x2 0xa0
0x28e: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x291: V228 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x293: M[V222] = V228
0x294: V229 = 0x20
0x296: V230 = ADD 0x20 V222
0x297: V231 = 0x40
0x299: V232 = M[0x40]
0x29c: V233 = SUB V230 V232
0x29e: RETURN V232 V233
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x29f
[0x29f:0x2a5]
---
Predecessors: [0x67]
Successors: [0x2a6, 0x2aa]
---
0x29f JUMPDEST
0x2a0 CALLVALUE
0x2a1 ISZERO
0x2a2 PUSH2 0x2aa
0x2a5 JUMPI
---
0x29f: JUMPDEST 
0x2a0: V234 = CALLVALUE
0x2a1: V235 = ISZERO V234
0x2a2: V236 = 0x2aa
0x2a5: JUMPI 0x2aa V235
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a6
[0x2a6:0x2a9]
---
Predecessors: [0x29f]
Successors: []
---
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 REVERT
---
0x2a6: V237 = 0x0
0x2a9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2aa
[0x2aa:0x2bd]
---
Predecessors: [0x29f]
Successors: [0x5a2]
---
0x2aa JUMPDEST
0x2ab PUSH2 0x1f9
0x2ae PUSH1 0x1
0x2b0 PUSH1 0xa0
0x2b2 PUSH1 0x2
0x2b4 EXP
0x2b5 SUB
0x2b6 PUSH1 0x4
0x2b8 CALLDATALOAD
0x2b9 AND
0x2ba PUSH2 0x5a2
0x2bd JUMP
---
0x2aa: JUMPDEST 
0x2ab: V238 = 0x1f9
0x2ae: V239 = 0x1
0x2b0: V240 = 0xa0
0x2b2: V241 = 0x2
0x2b4: V242 = EXP 0x2 0xa0
0x2b5: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b6: V244 = 0x4
0x2b8: V245 = CALLDATALOAD 0x4
0x2b9: V246 = AND V245 0xffffffffffffffffffffffffffffffffffffffff
0x2ba: V247 = 0x5a2
0x2bd: JUMP 0x5a2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f9, V246]
Exit stack: [V12, 0x1f9, V246]

================================

Block 0x2be
[0x2be:0x2cf]
---
Predecessors: []
Successors: []
---
0x2be JUMPDEST
0x2bf PUSH1 0x40
0x2c1 MLOAD
0x2c2 SWAP1
0x2c3 DUP2
0x2c4 MSTORE
0x2c5 PUSH1 0x20
0x2c7 ADD
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb DUP1
0x2cc SWAP2
0x2cd SUB
0x2ce SWAP1
0x2cf RETURN
---
0x2be: JUMPDEST 
0x2bf: V248 = 0x40
0x2c1: V249 = M[0x40]
0x2c4: M[V249] = S0
0x2c5: V250 = 0x20
0x2c7: V251 = ADD 0x20 V249
0x2c8: V252 = 0x40
0x2ca: V253 = M[0x40]
0x2cd: V254 = SUB V251 V253
0x2cf: RETURN V253 V254
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d0
[0x2d0:0x2d6]
---
Predecessors: [0x72]
Successors: [0x2d7, 0x2db]
---
0x2d0 JUMPDEST
0x2d1 CALLVALUE
0x2d2 ISZERO
0x2d3 PUSH2 0x2db
0x2d6 JUMPI
---
0x2d0: JUMPDEST 
0x2d1: V255 = CALLVALUE
0x2d2: V256 = ISZERO V255
0x2d3: V257 = 0x2db
0x2d6: JUMPI 0x2db V256
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d7
[0x2d7:0x2da]
---
Predecessors: [0x2d0]
Successors: []
---
0x2d7 PUSH1 0x0
0x2d9 DUP1
0x2da REVERT
---
0x2d7: V258 = 0x0
0x2da: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2db
[0x2db:0x2e2]
---
Predecessors: [0x2d0]
Successors: [0x5b4]
---
0x2db JUMPDEST
0x2dc PUSH2 0x1f9
0x2df PUSH2 0x5b4
0x2e2 JUMP
---
0x2db: JUMPDEST 
0x2dc: V259 = 0x1f9
0x2df: V260 = 0x5b4
0x2e2: JUMP 0x5b4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f9]
Exit stack: [V12, 0x1f9]

================================

Block 0x2e3
[0x2e3:0x2f4]
---
Predecessors: []
Successors: []
---
0x2e3 JUMPDEST
0x2e4 PUSH1 0x40
0x2e6 MLOAD
0x2e7 SWAP1
0x2e8 DUP2
0x2e9 MSTORE
0x2ea PUSH1 0x20
0x2ec ADD
0x2ed PUSH1 0x40
0x2ef MLOAD
0x2f0 DUP1
0x2f1 SWAP2
0x2f2 SUB
0x2f3 SWAP1
0x2f4 RETURN
---
0x2e3: JUMPDEST 
0x2e4: V261 = 0x40
0x2e6: V262 = M[0x40]
0x2e9: M[V262] = S0
0x2ea: V263 = 0x20
0x2ec: V264 = ADD 0x20 V262
0x2ed: V265 = 0x40
0x2ef: V266 = M[0x40]
0x2f2: V267 = SUB V264 V266
0x2f4: RETURN V266 V267
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f5
[0x2f5:0x2fb]
---
Predecessors: [0x7d]
Successors: [0x2fc, 0x300]
---
0x2f5 JUMPDEST
0x2f6 CALLVALUE
0x2f7 ISZERO
0x2f8 PUSH2 0x300
0x2fb JUMPI
---
0x2f5: JUMPDEST 
0x2f6: V268 = CALLVALUE
0x2f7: V269 = ISZERO V268
0x2f8: V270 = 0x300
0x2fb: JUMPI 0x300 V269
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fc
[0x2fc:0x2ff]
---
Predecessors: [0x2f5]
Successors: []
---
0x2fc PUSH1 0x0
0x2fe DUP1
0x2ff REVERT
---
0x2fc: V271 = 0x0
0x2ff: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x300
[0x300:0x307]
---
Predecessors: [0x2f5]
Successors: [0x5ba]
---
0x300 JUMPDEST
0x301 PUSH2 0x1f9
0x304 PUSH2 0x5ba
0x307 JUMP
---
0x300: JUMPDEST 
0x301: V272 = 0x1f9
0x304: V273 = 0x5ba
0x307: JUMP 0x5ba
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f9]
Exit stack: [V12, 0x1f9]

================================

Block 0x308
[0x308:0x319]
---
Predecessors: []
Successors: []
---
0x308 JUMPDEST
0x309 PUSH1 0x40
0x30b MLOAD
0x30c SWAP1
0x30d DUP2
0x30e MSTORE
0x30f PUSH1 0x20
0x311 ADD
0x312 PUSH1 0x40
0x314 MLOAD
0x315 DUP1
0x316 SWAP2
0x317 SUB
0x318 SWAP1
0x319 RETURN
---
0x308: JUMPDEST 
0x309: V274 = 0x40
0x30b: V275 = M[0x40]
0x30e: M[V275] = S0
0x30f: V276 = 0x20
0x311: V277 = ADD 0x20 V275
0x312: V278 = 0x40
0x314: V279 = M[0x40]
0x317: V280 = SUB V277 V279
0x319: RETURN V279 V280
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x31a
[0x31a:0x320]
---
Predecessors: [0x88]
Successors: [0x321, 0x325]
---
0x31a JUMPDEST
0x31b CALLVALUE
0x31c ISZERO
0x31d PUSH2 0x325
0x320 JUMPI
---
0x31a: JUMPDEST 
0x31b: V281 = CALLVALUE
0x31c: V282 = ISZERO V281
0x31d: V283 = 0x325
0x320: JUMPI 0x325 V282
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x321
[0x321:0x324]
---
Predecessors: [0x31a]
Successors: []
---
0x321 PUSH1 0x0
0x323 DUP1
0x324 REVERT
---
0x321: V284 = 0x0
0x324: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x325
[0x325:0x32c]
---
Predecessors: [0x31a]
Successors: [0x5c0]
---
0x325 JUMPDEST
0x326 PUSH2 0x21e
0x329 PUSH2 0x5c0
0x32c JUMP
---
0x325: JUMPDEST 
0x326: V285 = 0x21e
0x329: V286 = 0x5c0
0x32c: JUMP 0x5c0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x21e]
Exit stack: [V12, 0x21e]

================================

Block 0x32d
[0x32d:0x348]
---
Predecessors: []
Successors: []
---
0x32d JUMPDEST
0x32e PUSH1 0x40
0x330 MLOAD
0x331 PUSH1 0x1
0x333 PUSH1 0xa0
0x335 PUSH1 0x2
0x337 EXP
0x338 SUB
0x339 SWAP1
0x33a SWAP2
0x33b AND
0x33c DUP2
0x33d MSTORE
0x33e PUSH1 0x20
0x340 ADD
0x341 PUSH1 0x40
0x343 MLOAD
0x344 DUP1
0x345 SWAP2
0x346 SUB
0x347 SWAP1
0x348 RETURN
---
0x32d: JUMPDEST 
0x32e: V287 = 0x40
0x330: V288 = M[0x40]
0x331: V289 = 0x1
0x333: V290 = 0xa0
0x335: V291 = 0x2
0x337: V292 = EXP 0x2 0xa0
0x338: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33b: V294 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x33d: M[V288] = V294
0x33e: V295 = 0x20
0x340: V296 = ADD 0x20 V288
0x341: V297 = 0x40
0x343: V298 = M[0x40]
0x346: V299 = SUB V296 V298
0x348: RETURN V298 V299
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x349
[0x349:0x34f]
---
Predecessors: [0x93]
Successors: [0x350, 0x354]
---
0x349 JUMPDEST
0x34a CALLVALUE
0x34b ISZERO
0x34c PUSH2 0x354
0x34f JUMPI
---
0x349: JUMPDEST 
0x34a: V300 = CALLVALUE
0x34b: V301 = ISZERO V300
0x34c: V302 = 0x354
0x34f: JUMPI 0x354 V301
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x350
[0x350:0x353]
---
Predecessors: [0x349]
Successors: []
---
0x350 PUSH1 0x0
0x352 DUP1
0x353 REVERT
---
0x350: V303 = 0x0
0x353: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x354
[0x354:0x35b]
---
Predecessors: [0x349]
Successors: [0x5cf]
---
0x354 JUMPDEST
0x355 PUSH2 0x1f9
0x358 PUSH2 0x5cf
0x35b JUMP
---
0x354: JUMPDEST 
0x355: V304 = 0x1f9
0x358: V305 = 0x5cf
0x35b: JUMP 0x5cf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f9]
Exit stack: [V12, 0x1f9]

================================

Block 0x35c
[0x35c:0x36d]
---
Predecessors: []
Successors: []
---
0x35c JUMPDEST
0x35d PUSH1 0x40
0x35f MLOAD
0x360 SWAP1
0x361 DUP2
0x362 MSTORE
0x363 PUSH1 0x20
0x365 ADD
0x366 PUSH1 0x40
0x368 MLOAD
0x369 DUP1
0x36a SWAP2
0x36b SUB
0x36c SWAP1
0x36d RETURN
---
0x35c: JUMPDEST 
0x35d: V306 = 0x40
0x35f: V307 = M[0x40]
0x362: M[V307] = S0
0x363: V308 = 0x20
0x365: V309 = ADD 0x20 V307
0x366: V310 = 0x40
0x368: V311 = M[0x40]
0x36b: V312 = SUB V309 V311
0x36d: RETURN V311 V312
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x36e
[0x36e:0x379]
---
Predecessors: [0x1c7]
Successors: [0x37a, 0x3ea]
---
0x36e JUMPDEST
0x36f PUSH1 0x2
0x371 SLOAD
0x372 PUSH1 0x3
0x374 SLOAD
0x375 LT
0x376 PUSH2 0x3ea
0x379 JUMPI
---
0x36e: JUMPDEST 
0x36f: V313 = 0x2
0x371: V314 = S[0x2]
0x372: V315 = 0x3
0x374: V316 = S[0x3]
0x375: V317 = LT V316 V314
0x376: V318 = 0x3ea
0x379: JUMPI 0x3ea V317
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x37a
[0x37a:0x3e9]
---
Predecessors: [0x36e]
Successors: [0x3ea]
---
0x37a PUSH1 0x8
0x37c DUP1
0x37d SLOAD
0x37e PUSH1 0xff
0x380 NOT
0x381 AND
0x382 PUSH1 0x1
0x384 SWAP1
0x385 DUP2
0x386 OR
0x387 SWAP1
0x388 SWAP2
0x389 SSTORE
0x38a SLOAD
0x38b PUSH1 0x3
0x38d SLOAD
0x38e PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x3af SWAP2
0x3b0 PUSH1 0x1
0x3b2 PUSH1 0xa0
0x3b4 PUSH1 0x2
0x3b6 EXP
0x3b7 SUB
0x3b8 AND
0x3b9 SWAP1
0x3ba PUSH1 0x40
0x3bc MLOAD
0x3bd PUSH1 0x1
0x3bf PUSH1 0xa0
0x3c1 PUSH1 0x2
0x3c3 EXP
0x3c4 SUB
0x3c5 SWAP1
0x3c6 SWAP3
0x3c7 AND
0x3c8 DUP3
0x3c9 MSTORE
0x3ca PUSH1 0x20
0x3cc DUP3
0x3cd ADD
0x3ce MSTORE
0x3cf PUSH1 0x40
0x3d1 SWAP1
0x3d2 DUP2
0x3d3 ADD
0x3d4 SWAP1
0x3d5 MLOAD
0x3d6 DUP1
0x3d7 SWAP2
0x3d8 SUB
0x3d9 SWAP1
0x3da LOG1
0x3db PUSH1 0x8
0x3dd DUP1
0x3de SLOAD
0x3df PUSH2 0xff00
0x3e2 NOT
0x3e3 AND
0x3e4 PUSH2 0x100
0x3e7 OR
0x3e8 SWAP1
0x3e9 SSTORE
---
0x37a: V319 = 0x8
0x37d: V320 = S[0x8]
0x37e: V321 = 0xff
0x380: V322 = NOT 0xff
0x381: V323 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V320
0x382: V324 = 0x1
0x386: V325 = OR 0x1 V323
0x389: S[0x8] = V325
0x38a: V326 = S[0x1]
0x38b: V327 = 0x3
0x38d: V328 = S[0x3]
0x38e: V329 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x3b0: V330 = 0x1
0x3b2: V331 = 0xa0
0x3b4: V332 = 0x2
0x3b6: V333 = EXP 0x2 0xa0
0x3b7: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b8: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x3ba: V336 = 0x40
0x3bc: V337 = M[0x40]
0x3bd: V338 = 0x1
0x3bf: V339 = 0xa0
0x3c1: V340 = 0x2
0x3c3: V341 = EXP 0x2 0xa0
0x3c4: V342 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c7: V343 = AND V335 0xffffffffffffffffffffffffffffffffffffffff
0x3c9: M[V337] = V343
0x3ca: V344 = 0x20
0x3cd: V345 = ADD V337 0x20
0x3ce: M[V345] = V328
0x3cf: V346 = 0x40
0x3d3: V347 = ADD 0x40 V337
0x3d5: V348 = M[0x40]
0x3d8: V349 = SUB V347 V348
0x3da: LOG V348 V349 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x3db: V350 = 0x8
0x3de: V351 = S[0x8]
0x3df: V352 = 0xff00
0x3e2: V353 = NOT 0xff00
0x3e3: V354 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V351
0x3e4: V355 = 0x100
0x3e7: V356 = OR 0x100 V354
0x3e9: S[0x8] = V356
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x3ea
[0x3ea:0x3ea]
---
Predecessors: [0x36e, 0x37a, 0x48d, 0x497, 0x4ae]
Successors: [0x3eb]
---
0x3ea JUMPDEST
---
0x3ea: JUMPDEST 
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x3eb
[0x3eb:0x3ec]
---
Predecessors: [0x3ea]
Successors: [0x1ba]
---
0x3eb JUMPDEST
0x3ec JUMP
---
0x3eb: JUMPDEST 
0x3ec: JUMP 0x1ba
---
Entry stack: [V12, 0x1ba]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ed
[0x3ed:0x403]
---
Predecessors: [0x1dc]
Successors: [0x404, 0x408]
---
0x3ed JUMPDEST
0x3ee PUSH1 0x0
0x3f0 SLOAD
0x3f1 CALLER
0x3f2 PUSH1 0x1
0x3f4 PUSH1 0xa0
0x3f6 PUSH1 0x2
0x3f8 EXP
0x3f9 SUB
0x3fa SWAP1
0x3fb DUP2
0x3fc AND
0x3fd SWAP2
0x3fe AND
0x3ff EQ
0x400 PUSH2 0x408
0x403 JUMPI
---
0x3ed: JUMPDEST 
0x3ee: V357 = 0x0
0x3f0: V358 = S[0x0]
0x3f1: V359 = CALLER
0x3f2: V360 = 0x1
0x3f4: V361 = 0xa0
0x3f6: V362 = 0x2
0x3f8: V363 = EXP 0x2 0xa0
0x3f9: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fc: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x3fe: V366 = AND V358 0xffffffffffffffffffffffffffffffffffffffff
0x3ff: V367 = EQ V366 V365
0x400: V368 = 0x408
0x403: JUMPI 0x408 V367
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x404
[0x404:0x407]
---
Predecessors: [0x3ed]
Successors: []
---
0x404 PUSH1 0x0
0x406 DUP1
0x407 REVERT
---
0x404: V369 = 0x0
0x407: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x408
[0x408:0x45a]
---
Predecessors: [0x3ed]
Successors: [0x45b, 0x45f]
---
0x408 JUMPDEST
0x409 PUSH1 0x6
0x40b SLOAD
0x40c PUSH1 0x0
0x40e SLOAD
0x40f PUSH1 0x1
0x411 PUSH1 0xa0
0x413 PUSH1 0x2
0x415 EXP
0x416 SUB
0x417 SWAP2
0x418 DUP3
0x419 AND
0x41a SWAP2
0x41b PUSH4 0xa6f9dae1
0x420 SWAP2
0x421 AND
0x422 PUSH1 0x40
0x424 MLOAD
0x425 PUSH1 0xe0
0x427 PUSH1 0x2
0x429 EXP
0x42a PUSH4 0xffffffff
0x42f DUP5
0x430 AND
0x431 MUL
0x432 DUP2
0x433 MSTORE
0x434 PUSH1 0x1
0x436 PUSH1 0xa0
0x438 PUSH1 0x2
0x43a EXP
0x43b SUB
0x43c SWAP1
0x43d SWAP2
0x43e AND
0x43f PUSH1 0x4
0x441 DUP3
0x442 ADD
0x443 MSTORE
0x444 PUSH1 0x24
0x446 ADD
0x447 PUSH1 0x0
0x449 PUSH1 0x40
0x44b MLOAD
0x44c DUP1
0x44d DUP4
0x44e SUB
0x44f DUP2
0x450 PUSH1 0x0
0x452 DUP8
0x453 DUP1
0x454 EXTCODESIZE
0x455 ISZERO
0x456 ISZERO
0x457 PUSH2 0x45f
0x45a JUMPI
---
0x408: JUMPDEST 
0x409: V370 = 0x6
0x40b: V371 = S[0x6]
0x40c: V372 = 0x0
0x40e: V373 = S[0x0]
0x40f: V374 = 0x1
0x411: V375 = 0xa0
0x413: V376 = 0x2
0x415: V377 = EXP 0x2 0xa0
0x416: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x419: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x41b: V380 = 0xa6f9dae1
0x421: V381 = AND V373 0xffffffffffffffffffffffffffffffffffffffff
0x422: V382 = 0x40
0x424: V383 = M[0x40]
0x425: V384 = 0xe0
0x427: V385 = 0x2
0x429: V386 = EXP 0x2 0xe0
0x42a: V387 = 0xffffffff
0x430: V388 = AND 0xa6f9dae1 0xffffffff
0x431: V389 = MUL 0xa6f9dae1 0x100000000000000000000000000000000000000000000000000000000
0x433: M[V383] = 0xa6f9dae100000000000000000000000000000000000000000000000000000000
0x434: V390 = 0x1
0x436: V391 = 0xa0
0x438: V392 = 0x2
0x43a: V393 = EXP 0x2 0xa0
0x43b: V394 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43e: V395 = AND V381 0xffffffffffffffffffffffffffffffffffffffff
0x43f: V396 = 0x4
0x442: V397 = ADD V383 0x4
0x443: M[V397] = V395
0x444: V398 = 0x24
0x446: V399 = ADD 0x24 V383
0x447: V400 = 0x0
0x449: V401 = 0x40
0x44b: V402 = M[0x40]
0x44e: V403 = SUB V399 V402
0x450: V404 = 0x0
0x454: V405 = EXTCODESIZE V379
0x455: V406 = ISZERO V405
0x456: V407 = ISZERO V406
0x457: V408 = 0x45f
0x45a: JUMPI 0x45f V407
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: [V379, 0xa6f9dae1, V399, 0x0, V402, V403, V402, 0x0, V379]
Exit stack: [V12, 0x1ba, V379, 0xa6f9dae1, V399, 0x0, V402, V403, V402, 0x0, V379]

================================

Block 0x45b
[0x45b:0x45e]
---
Predecessors: [0x408]
Successors: []
---
0x45b PUSH1 0x0
0x45d DUP1
0x45e REVERT
---
0x45b: V409 = 0x0
0x45e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ba, V379, 0xa6f9dae1, V399, 0x0, V402, V403, V402, 0x0, V379]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba, V379, 0xa6f9dae1, V399, 0x0, V402, V403, V402, 0x0, V379]

================================

Block 0x45f
[0x45f:0x46b]
---
Predecessors: [0x408]
Successors: [0x46c, 0x470]
---
0x45f JUMPDEST
0x460 PUSH2 0x2c6
0x463 GAS
0x464 SUB
0x465 CALL
0x466 ISZERO
0x467 ISZERO
0x468 PUSH2 0x470
0x46b JUMPI
---
0x45f: JUMPDEST 
0x460: V410 = 0x2c6
0x463: V411 = GAS
0x464: V412 = SUB V411 0x2c6
0x465: V413 = CALL V412 V379 0x0 V402 V403 V402 0x0
0x466: V414 = ISZERO V413
0x467: V415 = ISZERO V414
0x468: V416 = 0x470
0x46b: JUMPI 0x470 V415
---
Entry stack: [V12, 0x1ba, V379, 0xa6f9dae1, V399, 0x0, V402, V403, V402, 0x0, V379]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1ba, V379, 0xa6f9dae1, V399]

================================

Block 0x46c
[0x46c:0x46f]
---
Predecessors: [0x45f]
Successors: []
---
0x46c PUSH1 0x0
0x46e DUP1
0x46f REVERT
---
0x46c: V417 = 0x0
0x46f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ba, V379, 0xa6f9dae1, V399]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba, V379, 0xa6f9dae1, V399]

================================

Block 0x470
[0x470:0x473]
---
Predecessors: [0x45f]
Successors: [0x474]
---
0x470 JUMPDEST
0x471 POP
0x472 POP
0x473 POP
---
0x470: JUMPDEST 
---
Entry stack: [V12, 0x1ba, V379, 0xa6f9dae1, V399]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x474
[0x474:0x474]
---
Predecessors: [0x470]
Successors: [0x475]
---
0x474 JUMPDEST
---
0x474: JUMPDEST 
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x475
[0x475:0x475]
---
Predecessors: [0x474]
Successors: [0x476]
---
0x475 JUMPDEST
---
0x475: JUMPDEST 
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x476
[0x476:0x477]
---
Predecessors: [0x475]
Successors: [0x1ba]
---
0x476 JUMPDEST
0x477 JUMP
---
0x476: JUMPDEST 
0x477: JUMP 0x1ba
---
Entry stack: [V12, 0x1ba]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x478
[0x478:0x47d]
---
Predecessors: [0x1f1]
Successors: [0x1f9]
---
0x478 JUMPDEST
0x479 PUSH1 0x4
0x47b SLOAD
0x47c DUP2
0x47d JUMP
---
0x478: JUMPDEST 
0x479: V418 = 0x4
0x47b: V419 = S[0x4]
0x47d: JUMP 0x1f9
---
Entry stack: [V12, 0x1f9]
Stack pops: 1
Stack additions: [S0, V419]
Exit stack: [V12, 0x1f9, V419]

================================

Block 0x47e
[0x47e:0x48c]
---
Predecessors: [0x216]
Successors: [0x21e]
---
0x47e JUMPDEST
0x47f PUSH1 0x1
0x481 SLOAD
0x482 PUSH1 0x1
0x484 PUSH1 0xa0
0x486 PUSH1 0x2
0x488 EXP
0x489 SUB
0x48a AND
0x48b DUP2
0x48c JUMP
---
0x47e: JUMPDEST 
0x47f: V420 = 0x1
0x481: V421 = S[0x1]
0x482: V422 = 0x1
0x484: V423 = 0xa0
0x486: V424 = 0x2
0x488: V425 = EXP 0x2 0xa0
0x489: V426 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48a: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x48c: JUMP 0x21e
---
Entry stack: [V12, 0x21e]
Stack pops: 1
Stack additions: [S0, V427]
Exit stack: [V12, 0x21e, V427]

================================

Block 0x48d
[0x48d:0x496]
---
Predecessors: [0x245]
Successors: [0x3ea, 0x497]
---
0x48d JUMPDEST
0x48e PUSH1 0x4
0x490 SLOAD
0x491 TIMESTAMP
0x492 LT
0x493 PUSH2 0x3ea
0x496 JUMPI
---
0x48d: JUMPDEST 
0x48e: V428 = 0x4
0x490: V429 = S[0x4]
0x491: V430 = TIMESTAMP
0x492: V431 = LT V430 V429
0x493: V432 = 0x3ea
0x496: JUMPI 0x3ea V431
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x497
[0x497:0x4ad]
---
Predecessors: [0x48d]
Successors: [0x3ea, 0x4ae]
---
0x497 PUSH1 0x1
0x499 SLOAD
0x49a CALLER
0x49b PUSH1 0x1
0x49d PUSH1 0xa0
0x49f PUSH1 0x2
0x4a1 EXP
0x4a2 SUB
0x4a3 SWAP1
0x4a4 DUP2
0x4a5 AND
0x4a6 SWAP2
0x4a7 AND
0x4a8 EQ
0x4a9 ISZERO
0x4aa PUSH2 0x3ea
0x4ad JUMPI
---
0x497: V433 = 0x1
0x499: V434 = S[0x1]
0x49a: V435 = CALLER
0x49b: V436 = 0x1
0x49d: V437 = 0xa0
0x49f: V438 = 0x2
0x4a1: V439 = EXP 0x2 0xa0
0x4a2: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a5: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x4a7: V442 = AND V434 0xffffffffffffffffffffffffffffffffffffffff
0x4a8: V443 = EQ V442 V441
0x4a9: V444 = ISZERO V443
0x4aa: V445 = 0x3ea
0x4ad: JUMPI 0x3ea V444
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x4ae
[0x4ae:0x4e0]
---
Predecessors: [0x497]
Successors: [0x3ea, 0x4e1]
---
0x4ae PUSH1 0x1
0x4b0 SLOAD
0x4b1 PUSH1 0x3
0x4b3 SLOAD
0x4b4 PUSH1 0x1
0x4b6 PUSH1 0xa0
0x4b8 PUSH1 0x2
0x4ba EXP
0x4bb SUB
0x4bc SWAP1
0x4bd SWAP2
0x4be AND
0x4bf SWAP1
0x4c0 DUP1
0x4c1 ISZERO
0x4c2 PUSH2 0x8fc
0x4c5 MUL
0x4c6 SWAP1
0x4c7 PUSH1 0x40
0x4c9 MLOAD
0x4ca PUSH1 0x0
0x4cc PUSH1 0x40
0x4ce MLOAD
0x4cf DUP1
0x4d0 DUP4
0x4d1 SUB
0x4d2 DUP2
0x4d3 DUP6
0x4d4 DUP9
0x4d5 DUP9
0x4d6 CALL
0x4d7 SWAP4
0x4d8 POP
0x4d9 POP
0x4da POP
0x4db POP
0x4dc ISZERO
0x4dd PUSH2 0x3ea
0x4e0 JUMPI
---
0x4ae: V446 = 0x1
0x4b0: V447 = S[0x1]
0x4b1: V448 = 0x3
0x4b3: V449 = S[0x3]
0x4b4: V450 = 0x1
0x4b6: V451 = 0xa0
0x4b8: V452 = 0x2
0x4ba: V453 = EXP 0x2 0xa0
0x4bb: V454 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4be: V455 = AND V447 0xffffffffffffffffffffffffffffffffffffffff
0x4c1: V456 = ISZERO V449
0x4c2: V457 = 0x8fc
0x4c5: V458 = MUL 0x8fc V456
0x4c7: V459 = 0x40
0x4c9: V460 = M[0x40]
0x4ca: V461 = 0x0
0x4cc: V462 = 0x40
0x4ce: V463 = M[0x40]
0x4d1: V464 = SUB V460 V463
0x4d6: V465 = CALL V458 V455 V449 V463 V464 V463 0x0
0x4dc: V466 = ISZERO V465
0x4dd: V467 = 0x3ea
0x4e0: JUMPI 0x3ea V466
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x4e1
[0x4e1:0x543]
---
Predecessors: [0x4ae]
Successors: [0x544]
---
0x4e1 PUSH1 0x1
0x4e3 SLOAD
0x4e4 PUSH1 0x3
0x4e6 SLOAD
0x4e7 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x508 SWAP2
0x509 PUSH1 0x1
0x50b PUSH1 0xa0
0x50d PUSH1 0x2
0x50f EXP
0x510 SUB
0x511 AND
0x512 SWAP1
0x513 PUSH1 0x0
0x515 PUSH1 0x40
0x517 MLOAD
0x518 PUSH1 0x1
0x51a PUSH1 0xa0
0x51c PUSH1 0x2
0x51e EXP
0x51f SUB
0x520 SWAP1
0x521 SWAP4
0x522 AND
0x523 DUP4
0x524 MSTORE
0x525 PUSH1 0x20
0x527 DUP4
0x528 ADD
0x529 SWAP2
0x52a SWAP1
0x52b SWAP2
0x52c MSTORE
0x52d ISZERO
0x52e ISZERO
0x52f PUSH1 0x40
0x531 DUP1
0x532 DUP4
0x533 ADD
0x534 SWAP2
0x535 SWAP1
0x536 SWAP2
0x537 MSTORE
0x538 PUSH1 0x60
0x53a SWAP1
0x53b SWAP2
0x53c ADD
0x53d SWAP1
0x53e MLOAD
0x53f DUP1
0x540 SWAP2
0x541 SUB
0x542 SWAP1
0x543 LOG1
---
0x4e1: V468 = 0x1
0x4e3: V469 = S[0x1]
0x4e4: V470 = 0x3
0x4e6: V471 = S[0x3]
0x4e7: V472 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x509: V473 = 0x1
0x50b: V474 = 0xa0
0x50d: V475 = 0x2
0x50f: V476 = EXP 0x2 0xa0
0x510: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x511: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x513: V479 = 0x0
0x515: V480 = 0x40
0x517: V481 = M[0x40]
0x518: V482 = 0x1
0x51a: V483 = 0xa0
0x51c: V484 = 0x2
0x51e: V485 = EXP 0x2 0xa0
0x51f: V486 = SUB 0x10000000000000000000000000000000000000000 0x1
0x522: V487 = AND V478 0xffffffffffffffffffffffffffffffffffffffff
0x524: M[V481] = V487
0x525: V488 = 0x20
0x528: V489 = ADD V481 0x20
0x52c: M[V489] = V471
0x52d: V490 = ISZERO 0x0
0x52e: V491 = ISZERO 0x1
0x52f: V492 = 0x40
0x533: V493 = ADD V481 0x40
0x537: M[V493] = 0x0
0x538: V494 = 0x60
0x53c: V495 = ADD V481 0x60
0x53e: V496 = M[0x40]
0x541: V497 = SUB V495 V496
0x543: LOG V496 V497 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x544
[0x544:0x544]
---
Predecessors: [0x4e1]
Successors: [0x545]
---
0x544 JUMPDEST
---
0x544: JUMPDEST 
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x545
[0x545:0x545]
---
Predecessors: [0x544]
Successors: [0x546]
---
0x545 JUMPDEST
---
0x545: JUMPDEST 
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x546
[0x546:0x546]
---
Predecessors: [0x545]
Successors: [0x547]
---
0x546 JUMPDEST
---
0x546: JUMPDEST 
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x547
[0x547:0x547]
---
Predecessors: [0x546]
Successors: [0x548]
---
0x547 JUMPDEST
---
0x547: JUMPDEST 
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba]

================================

Block 0x548
[0x548:0x549]
---
Predecessors: [0x547]
Successors: [0x1ba]
---
0x548 JUMPDEST
0x549 JUMP
---
0x548: JUMPDEST 
0x549: JUMP 0x1ba
---
Entry stack: [V12, 0x1ba]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x54a
[0x54a:0x560]
---
Predecessors: [0x25a]
Successors: [0x561, 0x565]
---
0x54a JUMPDEST
0x54b PUSH1 0x0
0x54d SLOAD
0x54e CALLER
0x54f PUSH1 0x1
0x551 PUSH1 0xa0
0x553 PUSH1 0x2
0x555 EXP
0x556 SUB
0x557 SWAP1
0x558 DUP2
0x559 AND
0x55a SWAP2
0x55b AND
0x55c EQ
0x55d PUSH2 0x565
0x560 JUMPI
---
0x54a: JUMPDEST 
0x54b: V498 = 0x0
0x54d: V499 = S[0x0]
0x54e: V500 = CALLER
0x54f: V501 = 0x1
0x551: V502 = 0xa0
0x553: V503 = 0x2
0x555: V504 = EXP 0x2 0xa0
0x556: V505 = SUB 0x10000000000000000000000000000000000000000 0x1
0x559: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x55b: V507 = AND V499 0xffffffffffffffffffffffffffffffffffffffff
0x55c: V508 = EQ V507 V506
0x55d: V509 = 0x565
0x560: JUMPI 0x565 V508
---
Entry stack: [V12, 0x1ba, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba, V213]

================================

Block 0x561
[0x561:0x564]
---
Predecessors: [0x54a]
Successors: []
---
0x561 PUSH1 0x0
0x563 DUP1
0x564 REVERT
---
0x561: V510 = 0x0
0x564: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ba, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba, V213]

================================

Block 0x565
[0x565:0x58d]
---
Predecessors: [0x54a]
Successors: [0x58e]
---
0x565 JUMPDEST
0x566 PUSH1 0x0
0x568 DUP1
0x569 SLOAD
0x56a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57f NOT
0x580 AND
0x581 PUSH1 0x1
0x583 PUSH1 0xa0
0x585 PUSH1 0x2
0x587 EXP
0x588 SUB
0x589 DUP4
0x58a AND
0x58b OR
0x58c SWAP1
0x58d SSTORE
---
0x565: JUMPDEST 
0x566: V511 = 0x0
0x569: V512 = S[0x0]
0x56a: V513 = 0xffffffffffffffffffffffffffffffffffffffff
0x57f: V514 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x580: V515 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V512
0x581: V516 = 0x1
0x583: V517 = 0xa0
0x585: V518 = 0x2
0x587: V519 = EXP 0x2 0xa0
0x588: V520 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58a: V521 = AND V213 0xffffffffffffffffffffffffffffffffffffffff
0x58b: V522 = OR V521 V515
0x58d: S[0x0] = V522
---
Entry stack: [V12, 0x1ba, V213]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1ba, V213]

================================

Block 0x58e
[0x58e:0x58e]
---
Predecessors: [0x565]
Successors: [0x58f]
---
0x58e JUMPDEST
---
0x58e: JUMPDEST 
---
Entry stack: [V12, 0x1ba, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba, V213]

================================

Block 0x58f
[0x58f:0x58f]
---
Predecessors: [0x58e]
Successors: [0x590]
---
0x58f JUMPDEST
---
0x58f: JUMPDEST 
---
Entry stack: [V12, 0x1ba, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ba, V213]

================================

Block 0x590
[0x590:0x592]
---
Predecessors: [0x58f]
Successors: [0x1ba]
---
0x590 JUMPDEST
0x591 POP
0x592 JUMP
---
0x590: JUMPDEST 
0x592: JUMP 0x1ba
---
Entry stack: [V12, 0x1ba, V213]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x593
[0x593:0x5a1]
---
Predecessors: [0x27b]
Successors: [0x21e]
---
0x593 JUMPDEST
0x594 PUSH1 0x6
0x596 SLOAD
0x597 PUSH1 0x1
0x599 PUSH1 0xa0
0x59b PUSH1 0x2
0x59d EXP
0x59e SUB
0x59f AND
0x5a0 DUP2
0x5a1 JUMP
---
0x593: JUMPDEST 
0x594: V523 = 0x6
0x596: V524 = S[0x6]
0x597: V525 = 0x1
0x599: V526 = 0xa0
0x59b: V527 = 0x2
0x59d: V528 = EXP 0x2 0xa0
0x59e: V529 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59f: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff V524
0x5a1: JUMP 0x21e
---
Entry stack: [V12, 0x21e]
Stack pops: 1
Stack additions: [S0, V530]
Exit stack: [V12, 0x21e, V530]

================================

Block 0x5a2
[0x5a2:0x5b3]
---
Predecessors: [0x2aa]
Successors: [0x1f9]
---
0x5a2 JUMPDEST
0x5a3 PUSH1 0x7
0x5a5 PUSH1 0x20
0x5a7 MSTORE
0x5a8 PUSH1 0x0
0x5aa SWAP1
0x5ab DUP2
0x5ac MSTORE
0x5ad PUSH1 0x40
0x5af SWAP1
0x5b0 SHA3
0x5b1 SLOAD
0x5b2 DUP2
0x5b3 JUMP
---
0x5a2: JUMPDEST 
0x5a3: V531 = 0x7
0x5a5: V532 = 0x20
0x5a7: M[0x20] = 0x7
0x5a8: V533 = 0x0
0x5ac: M[0x0] = V246
0x5ad: V534 = 0x40
0x5b0: V535 = SHA3 0x0 0x40
0x5b1: V536 = S[V535]
0x5b3: JUMP 0x1f9
---
Entry stack: [V12, 0x1f9, V246]
Stack pops: 2
Stack additions: [S1, V536]
Exit stack: [V12, 0x1f9, V536]

================================

Block 0x5b4
[0x5b4:0x5b9]
---
Predecessors: [0x2db]
Successors: [0x1f9]
---
0x5b4 JUMPDEST
0x5b5 PUSH1 0x2
0x5b7 SLOAD
0x5b8 DUP2
0x5b9 JUMP
---
0x5b4: JUMPDEST 
0x5b5: V537 = 0x2
0x5b7: V538 = S[0x2]
0x5b9: JUMP 0x1f9
---
Entry stack: [V12, 0x1f9]
Stack pops: 1
Stack additions: [S0, V538]
Exit stack: [V12, 0x1f9, V538]

================================

Block 0x5ba
[0x5ba:0x5bf]
---
Predecessors: [0x300]
Successors: [0x1f9]
---
0x5ba JUMPDEST
0x5bb PUSH1 0x3
0x5bd SLOAD
0x5be DUP2
0x5bf JUMP
---
0x5ba: JUMPDEST 
0x5bb: V539 = 0x3
0x5bd: V540 = S[0x3]
0x5bf: JUMP 0x1f9
---
Entry stack: [V12, 0x1f9]
Stack pops: 1
Stack additions: [S0, V540]
Exit stack: [V12, 0x1f9, V540]

================================

Block 0x5c0
[0x5c0:0x5ce]
---
Predecessors: [0x325]
Successors: [0x21e]
---
0x5c0 JUMPDEST
0x5c1 PUSH1 0x0
0x5c3 SLOAD
0x5c4 PUSH1 0x1
0x5c6 PUSH1 0xa0
0x5c8 PUSH1 0x2
0x5ca EXP
0x5cb SUB
0x5cc AND
0x5cd DUP2
0x5ce JUMP
---
0x5c0: JUMPDEST 
0x5c1: V541 = 0x0
0x5c3: V542 = S[0x0]
0x5c4: V543 = 0x1
0x5c6: V544 = 0xa0
0x5c8: V545 = 0x2
0x5ca: V546 = EXP 0x2 0xa0
0x5cb: V547 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5cc: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff V542
0x5ce: JUMP 0x21e
---
Entry stack: [V12, 0x21e]
Stack pops: 1
Stack additions: [S0, V548]
Exit stack: [V12, 0x21e, V548]

================================

Block 0x5cf
[0x5cf:0x5d4]
---
Predecessors: [0x354]
Successors: [0x1f9]
---
0x5cf JUMPDEST
0x5d0 PUSH1 0x5
0x5d2 SLOAD
0x5d3 DUP2
0x5d4 JUMP
---
0x5cf: JUMPDEST 
0x5d0: V549 = 0x5
0x5d2: V550 = S[0x5]
0x5d4: JUMP 0x1f9
---
Entry stack: [V12, 0x1f9]
Stack pops: 1
Stack additions: [S0, V550]
Exit stack: [V12, 0x1f9, V550]

================================

Block 0x5d5
[0x5d5:0x601]
---
Predecessors: []
Successors: []
---
0x5d5 STOP
0x5d6 LOG1
0x5d7 PUSH6 0x627a7a723058
0x5de SHA3
0x5df OR
0x5e0 MISSING 0x49
0x5e1 ADDMOD
0x5e2 PUSH31 0xfc9b05ba8bac72482164576a39a7a0e8bc543ab15e461515b5018ebd0029
---
0x5d5: STOP 
0x5d6: LOG S0 S1 S2
0x5d7: V551 = 0x627a7a723058
0x5de: V552 = SHA3 0x627a7a723058 S3
0x5df: V553 = OR V552 S4
0x5e0: MISSING 0x49
0x5e1: V554 = ADDMOD S0 S1 S2
0x5e2: V555 = 0xfc9b05ba8bac72482164576a39a7a0e8bc543ab15e461515b5018ebd0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V553, 0xfc9b05ba8bac72482164576a39a7a0e8bc543ab15e461515b5018ebd0029, V554]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x1bc
Exit block: 0x1ba
Body: 0x1ba, 0x1bc, 0x1c3, 0x1c7, 0x36e, 0x37a, 0x3ea, 0x3eb

Function 1:
Public function signature: 0x262199c3
Entry block: 0x1d1
Exit block: 0x1ba
Body: 0x1ba, 0x1d1, 0x1d8, 0x1dc, 0x3ed, 0x404, 0x408, 0x45b, 0x45f, 0x46c, 0x470, 0x474, 0x475, 0x476

Function 2:
Public function signature: 0x29dcb0cf
Entry block: 0x1e6
Exit block: 0x1f9
Body: 0x1e6, 0x1ed, 0x1f1, 0x1f9, 0x478

Function 3:
Public function signature: 0x38af3eed
Entry block: 0x20b
Exit block: 0x21e
Body: 0x20b, 0x212, 0x216, 0x21e, 0x47e

Function 4:
Public function signature: 0x41bde110
Entry block: 0x23a
Exit block: 0x1ba
Body: 0x1ba, 0x23a, 0x241, 0x245, 0x3ea, 0x3eb, 0x48d, 0x497, 0x4ae, 0x4e1, 0x544, 0x545, 0x546, 0x547, 0x548

Function 5:
Public function signature: 0x4fb2e45d
Entry block: 0x24f
Exit block: 0x1ba
Body: 0x1ba, 0x24f, 0x256, 0x25a, 0x54a, 0x561, 0x565, 0x58e, 0x58f, 0x590

Function 6:
Public function signature: 0x6e66f6e9
Entry block: 0x270
Exit block: 0x21e
Body: 0x21e, 0x270, 0x277, 0x27b, 0x593

Function 7:
Public function signature: 0x70a08231
Entry block: 0x29f
Exit block: 0x1f9
Body: 0x1f9, 0x29f, 0x2a6, 0x2aa, 0x5a2

Function 8:
Public function signature: 0x7a3a0e84
Entry block: 0x2d0
Exit block: 0x1f9
Body: 0x1f9, 0x2d0, 0x2d7, 0x2db, 0x5b4

Function 9:
Public function signature: 0x7b3e5e7b
Entry block: 0x2f5
Exit block: 0x1f9
Body: 0x1f9, 0x2f5, 0x2fc, 0x300, 0x5ba

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x31a
Exit block: 0x21e
Body: 0x21e, 0x31a, 0x321, 0x325, 0x5c0

Function 11:
Public function signature: 0xa035b1fe
Entry block: 0x349
Exit block: 0x1f9
Body: 0x1f9, 0x349, 0x350, 0x354, 0x5cf

Function 12:
Public fallback function
Entry block: 0x9e
Exit block: 0x1ba
Body: 0x9e, 0xa2, 0xb6, 0xba, 0xc8, 0xcc, 0x109, 0x10a, 0x14a, 0x14e, 0x15b, 0x15f, 0x1b7, 0x1ba

