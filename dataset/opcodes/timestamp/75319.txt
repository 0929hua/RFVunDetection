Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x96]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x96
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x96
0xa: JUMPI 0x96 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x1c3]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x1cb3b20
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x1c3
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x1cb3b20
0x39: V12 = EQ V10 0x1cb3b20
0x3a: V13 = 0x1c3
0x3d: JUMPI 0x1c3 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x1d8]
---
0x3e DUP1
0x3f PUSH4 0x29dcb0cf
0x44 EQ
0x45 PUSH2 0x1d8
0x48 JUMPI
---
0x3f: V14 = 0x29dcb0cf
0x44: V15 = EQ 0x29dcb0cf V10
0x45: V16 = 0x1d8
0x48: JUMPI 0x1d8 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x1fd]
---
0x49 DUP1
0x4a PUSH4 0x38af3eed
0x4f EQ
0x50 PUSH2 0x1fd
0x53 JUMPI
---
0x4a: V17 = 0x38af3eed
0x4f: V18 = EQ 0x38af3eed V10
0x50: V19 = 0x1fd
0x53: JUMPI 0x1fd V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x22c]
---
0x54 DUP1
0x55 PUSH4 0x6e66f6e9
0x5a EQ
0x5b PUSH2 0x22c
0x5e JUMPI
---
0x55: V20 = 0x6e66f6e9
0x5a: V21 = EQ 0x6e66f6e9 V10
0x5b: V22 = 0x22c
0x5e: JUMPI 0x22c V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x25b]
---
0x5f DUP1
0x60 PUSH4 0x70a08231
0x65 EQ
0x66 PUSH2 0x25b
0x69 JUMPI
---
0x60: V23 = 0x70a08231
0x65: V24 = EQ 0x70a08231 V10
0x66: V25 = 0x25b
0x69: JUMPI 0x25b V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x28c]
---
0x6a DUP1
0x6b PUSH4 0x7a3a0e84
0x70 EQ
0x71 PUSH2 0x28c
0x74 JUMPI
---
0x6b: V26 = 0x7a3a0e84
0x70: V27 = EQ 0x7a3a0e84 V10
0x71: V28 = 0x28c
0x74: JUMPI 0x28c V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x2b1]
---
0x75 DUP1
0x76 PUSH4 0x7b3e5e7b
0x7b EQ
0x7c PUSH2 0x2b1
0x7f JUMPI
---
0x76: V29 = 0x7b3e5e7b
0x7b: V30 = EQ 0x7b3e5e7b V10
0x7c: V31 = 0x2b1
0x7f: JUMPI 0x2b1 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x2d6]
---
0x80 DUP1
0x81 PUSH4 0xa035b1fe
0x86 EQ
0x87 PUSH2 0x2d6
0x8a JUMPI
---
0x81: V32 = 0xa035b1fe
0x86: V33 = EQ 0xa035b1fe V10
0x87: V34 = 0x2d6
0x8a: JUMPI 0x2d6 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x2fb]
---
0x8b DUP1
0x8c PUSH4 0xfd6b7ef8
0x91 EQ
0x92 PUSH2 0x2fb
0x95 JUMPI
---
0x8c: V35 = 0xfd6b7ef8
0x91: V36 = EQ 0xfd6b7ef8 V10
0x92: V37 = 0x2fb
0x95: JUMPI 0x2fb V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0x99]
---
Predecessors: [0x0, 0x8b]
Successors: [0x9a]
---
0x96 JUMPDEST
0x97 PUSH2 0x1c1
---
0x96: JUMPDEST 
0x97: V38 = 0x1c1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c1]
Exit stack: [V10, 0x1c1]

================================

Block 0x9a
[0x9a:0xad]
---
Predecessors: [0x96]
Successors: [0xae, 0xb2]
---
0x9a JUMPDEST
0x9b PUSH1 0x7
0x9d SLOAD
0x9e PUSH1 0x0
0xa0 SWAP1
0xa1 PUSH2 0x100
0xa4 SWAP1
0xa5 DIV
0xa6 PUSH1 0xff
0xa8 AND
0xa9 ISZERO
0xaa PUSH2 0xb2
0xad JUMPI
---
0x9a: JUMPDEST 
0x9b: V39 = 0x7
0x9d: V40 = S[0x7]
0x9e: V41 = 0x0
0xa1: V42 = 0x100
0xa5: V43 = DIV V40 0x100
0xa6: V44 = 0xff
0xa8: V45 = AND 0xff V43
0xa9: V46 = ISZERO V45
0xaa: V47 = 0xb2
0xad: JUMPI 0xb2 V46
---
Entry stack: [V10, 0x1c1]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1c1, 0x0]

================================

Block 0xae
[0xae:0xb1]
---
Predecessors: [0x9a]
Successors: []
---
0xae PUSH1 0x0
0xb0 DUP1
0xb1 REVERT
---
0xae: V48 = 0x0
0xb1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1c1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1, 0x0]

================================

Block 0xb2
[0xb2:0xf6]
---
Predecessors: [0x9a]
Successors: [0xf7, 0xf8]
---
0xb2 JUMPDEST
0xb3 POP
0xb4 PUSH1 0x1
0xb6 PUSH1 0xa0
0xb8 PUSH1 0x2
0xba EXP
0xbb SUB
0xbc CALLER
0xbd DUP2
0xbe DUP2
0xbf AND
0xc0 PUSH1 0x0
0xc2 SWAP1
0xc3 DUP2
0xc4 MSTORE
0xc5 PUSH1 0x6
0xc7 PUSH1 0x20
0xc9 MSTORE
0xca PUSH1 0x40
0xcc SWAP1
0xcd SHA3
0xce DUP1
0xcf SLOAD
0xd0 CALLVALUE
0xd1 SWAP1
0xd2 DUP2
0xd3 ADD
0xd4 SWAP1
0xd5 SWAP2
0xd6 SSTORE
0xd7 PUSH1 0x2
0xd9 DUP1
0xda SLOAD
0xdb DUP3
0xdc ADD
0xdd SWAP1
0xde SSTORE
0xdf PUSH1 0x5
0xe1 SLOAD
0xe2 PUSH1 0x4
0xe4 SLOAD
0xe5 SWAP2
0xe6 SWAP4
0xe7 AND
0xe8 SWAP2
0xe9 PUSH4 0xa9059cbb
0xee SWAP2
0xef DUP5
0xf0 DUP2
0xf1 ISZERO
0xf2 ISZERO
0xf3 PUSH2 0xf8
0xf6 JUMPI
---
0xb2: JUMPDEST 
0xb4: V49 = 0x1
0xb6: V50 = 0xa0
0xb8: V51 = 0x2
0xba: V52 = EXP 0x2 0xa0
0xbb: V53 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbc: V54 = CALLER
0xbf: V55 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0xc0: V56 = 0x0
0xc4: M[0x0] = V55
0xc5: V57 = 0x6
0xc7: V58 = 0x20
0xc9: M[0x20] = 0x6
0xca: V59 = 0x40
0xcd: V60 = SHA3 0x0 0x40
0xcf: V61 = S[V60]
0xd0: V62 = CALLVALUE
0xd3: V63 = ADD V62 V61
0xd6: S[V60] = V63
0xd7: V64 = 0x2
0xda: V65 = S[0x2]
0xdc: V66 = ADD V62 V65
0xde: S[0x2] = V66
0xdf: V67 = 0x5
0xe1: V68 = S[0x5]
0xe2: V69 = 0x4
0xe4: V70 = S[0x4]
0xe7: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0xe9: V72 = 0xa9059cbb
0xf1: V73 = ISZERO V70
0xf2: V74 = ISZERO V73
0xf3: V75 = 0xf8
0xf6: JUMPI 0xf8 V74
---
Entry stack: [V10, 0x1c1, 0x0]
Stack pops: 1
Stack additions: [V62, V71, 0xa9059cbb, V54, V70, V62]
Exit stack: [V10, 0x1c1, V62, V71, 0xa9059cbb, V54, V70, V62]

================================

Block 0xf7
[0xf7:0xf7]
---
Predecessors: [0xb2]
Successors: []
---
0xf7 INVALID
---
0xf7: INVALID 
---
Entry stack: [V10, 0x1c1, V62, V71, 0xa9059cbb, V54, V70, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1, V62, V71, 0xa9059cbb, V54, V70, V62]

================================

Block 0xf8
[0xf8:0x150]
---
Predecessors: [0xb2]
Successors: [0x151, 0x155]
---
0xf8 JUMPDEST
0xf9 DIV
0xfa PUSH1 0x40
0xfc MLOAD
0xfd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x11b PUSH4 0xffffffff
0x120 DUP6
0x121 AND
0x122 MUL
0x123 DUP2
0x124 MSTORE
0x125 PUSH1 0x1
0x127 PUSH1 0xa0
0x129 PUSH1 0x2
0x12b EXP
0x12c SUB
0x12d SWAP1
0x12e SWAP3
0x12f AND
0x130 PUSH1 0x4
0x132 DUP4
0x133 ADD
0x134 MSTORE
0x135 PUSH1 0x24
0x137 DUP3
0x138 ADD
0x139 MSTORE
0x13a PUSH1 0x44
0x13c ADD
0x13d PUSH1 0x0
0x13f PUSH1 0x40
0x141 MLOAD
0x142 DUP1
0x143 DUP4
0x144 SUB
0x145 DUP2
0x146 PUSH1 0x0
0x148 DUP8
0x149 DUP1
0x14a EXTCODESIZE
0x14b ISZERO
0x14c ISZERO
0x14d PUSH2 0x155
0x150 JUMPI
---
0xf8: JUMPDEST 
0xf9: V76 = DIV V62 V70
0xfa: V77 = 0x40
0xfc: V78 = M[0x40]
0xfd: V79 = 0x100000000000000000000000000000000000000000000000000000000
0x11b: V80 = 0xffffffff
0x121: V81 = AND 0xa9059cbb 0xffffffff
0x122: V82 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x124: M[V78] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x125: V83 = 0x1
0x127: V84 = 0xa0
0x129: V85 = 0x2
0x12b: V86 = EXP 0x2 0xa0
0x12c: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12f: V88 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0x130: V89 = 0x4
0x133: V90 = ADD V78 0x4
0x134: M[V90] = V88
0x135: V91 = 0x24
0x138: V92 = ADD V78 0x24
0x139: M[V92] = V76
0x13a: V93 = 0x44
0x13c: V94 = ADD 0x44 V78
0x13d: V95 = 0x0
0x13f: V96 = 0x40
0x141: V97 = M[0x40]
0x144: V98 = SUB V94 V97
0x146: V99 = 0x0
0x14a: V100 = EXTCODESIZE V71
0x14b: V101 = ISZERO V100
0x14c: V102 = ISZERO V101
0x14d: V103 = 0x155
0x150: JUMPI 0x155 V102
---
Entry stack: [V10, 0x1c1, V62, V71, 0xa9059cbb, V54, V70, V62]
Stack pops: 5
Stack additions: [S4, S3, V94, 0x0, V97, V98, V97, 0x0, S4]
Exit stack: [V10, 0x1c1, V62, V71, 0xa9059cbb, V94, 0x0, V97, V98, V97, 0x0, V71]

================================

Block 0x151
[0x151:0x154]
---
Predecessors: [0xf8]
Successors: []
---
0x151 PUSH1 0x0
0x153 DUP1
0x154 REVERT
---
0x151: V104 = 0x0
0x154: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1c1, V62, V71, 0xa9059cbb, V94, 0x0, V97, V98, V97, 0x0, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1, V62, V71, 0xa9059cbb, V94, 0x0, V97, V98, V97, 0x0, V71]

================================

Block 0x155
[0x155:0x161]
---
Predecessors: [0xf8]
Successors: [0x162, 0x166]
---
0x155 JUMPDEST
0x156 PUSH2 0x2c6
0x159 GAS
0x15a SUB
0x15b CALL
0x15c ISZERO
0x15d ISZERO
0x15e PUSH2 0x166
0x161 JUMPI
---
0x155: JUMPDEST 
0x156: V105 = 0x2c6
0x159: V106 = GAS
0x15a: V107 = SUB V106 0x2c6
0x15b: V108 = CALL V107 V71 0x0 V97 V98 V97 0x0
0x15c: V109 = ISZERO V108
0x15d: V110 = ISZERO V109
0x15e: V111 = 0x166
0x161: JUMPI 0x166 V110
---
Entry stack: [V10, 0x1c1, V62, V71, 0xa9059cbb, V94, 0x0, V97, V98, V97, 0x0, V71]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1c1, V62, V71, 0xa9059cbb, V94]

================================

Block 0x162
[0x162:0x165]
---
Predecessors: [0x155]
Successors: []
---
0x162 PUSH1 0x0
0x164 DUP1
0x165 REVERT
---
0x162: V112 = 0x0
0x165: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1c1, V62, V71, 0xa9059cbb, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1, V62, V71, 0xa9059cbb, V94]

================================

Block 0x166
[0x166:0x1bd]
---
Predecessors: [0x155]
Successors: [0x1be]
---
0x166 JUMPDEST
0x167 POP
0x168 POP
0x169 POP
0x16a PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x18b CALLER
0x18c DUP3
0x18d PUSH1 0x1
0x18f PUSH1 0x40
0x191 MLOAD
0x192 PUSH1 0x1
0x194 PUSH1 0xa0
0x196 PUSH1 0x2
0x198 EXP
0x199 SUB
0x19a SWAP1
0x19b SWAP4
0x19c AND
0x19d DUP4
0x19e MSTORE
0x19f PUSH1 0x20
0x1a1 DUP4
0x1a2 ADD
0x1a3 SWAP2
0x1a4 SWAP1
0x1a5 SWAP2
0x1a6 MSTORE
0x1a7 ISZERO
0x1a8 ISZERO
0x1a9 PUSH1 0x40
0x1ab DUP1
0x1ac DUP4
0x1ad ADD
0x1ae SWAP2
0x1af SWAP1
0x1b0 SWAP2
0x1b1 MSTORE
0x1b2 PUSH1 0x60
0x1b4 SWAP1
0x1b5 SWAP2
0x1b6 ADD
0x1b7 SWAP1
0x1b8 MLOAD
0x1b9 DUP1
0x1ba SWAP2
0x1bb SUB
0x1bc SWAP1
0x1bd LOG1
---
0x166: JUMPDEST 
0x16a: V113 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x18b: V114 = CALLER
0x18d: V115 = 0x1
0x18f: V116 = 0x40
0x191: V117 = M[0x40]
0x192: V118 = 0x1
0x194: V119 = 0xa0
0x196: V120 = 0x2
0x198: V121 = EXP 0x2 0xa0
0x199: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19c: V123 = AND V114 0xffffffffffffffffffffffffffffffffffffffff
0x19e: M[V117] = V123
0x19f: V124 = 0x20
0x1a2: V125 = ADD V117 0x20
0x1a6: M[V125] = V62
0x1a7: V126 = ISZERO 0x1
0x1a8: V127 = ISZERO 0x0
0x1a9: V128 = 0x40
0x1ad: V129 = ADD V117 0x40
0x1b1: M[V129] = 0x1
0x1b2: V130 = 0x60
0x1b6: V131 = ADD V117 0x60
0x1b8: V132 = M[0x40]
0x1bb: V133 = SUB V131 V132
0x1bd: LOG V132 V133 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, 0x1c1, V62, V71, 0xa9059cbb, V94]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x1c1, V62]

================================

Block 0x1be
[0x1be:0x1c0]
---
Predecessors: [0x166, 0x3e1, 0x4e2, 0x51b]
Successors: [0x1c1]
---
0x1be JUMPDEST
0x1bf POP
0x1c0 JUMP
---
0x1be: JUMPDEST 
0x1c0: JUMP 0x1c1
---
Entry stack: [V10, 0x1c1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c1
[0x1c1:0x1c2]
---
Predecessors: [0x1be, 0x397, 0x592]
Successors: []
---
0x1c1 JUMPDEST
0x1c2 STOP
---
0x1c1: JUMPDEST 
0x1c2: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c3
[0x1c3:0x1c9]
---
Predecessors: [0xb]
Successors: [0x1ca, 0x1ce]
---
0x1c3 JUMPDEST
0x1c4 CALLVALUE
0x1c5 ISZERO
0x1c6 PUSH2 0x1ce
0x1c9 JUMPI
---
0x1c3: JUMPDEST 
0x1c4: V134 = CALLVALUE
0x1c5: V135 = ISZERO V134
0x1c6: V136 = 0x1ce
0x1c9: JUMPI 0x1ce V135
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ca
[0x1ca:0x1cd]
---
Predecessors: [0x1c3]
Successors: []
---
0x1ca PUSH1 0x0
0x1cc DUP1
0x1cd REVERT
---
0x1ca: V137 = 0x0
0x1cd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ce
[0x1ce:0x1d5]
---
Predecessors: [0x1c3]
Successors: [0x310]
---
0x1ce JUMPDEST
0x1cf PUSH2 0x1c1
0x1d2 PUSH2 0x310
0x1d5 JUMP
---
0x1ce: JUMPDEST 
0x1cf: V138 = 0x1c1
0x1d2: V139 = 0x310
0x1d5: JUMP 0x310
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c1]
Exit stack: [V10, 0x1c1]

================================

Block 0x1d6
[0x1d6:0x1d7]
---
Predecessors: []
Successors: []
---
0x1d6 JUMPDEST
0x1d7 STOP
---
0x1d6: JUMPDEST 
0x1d7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d8
[0x1d8:0x1de]
---
Predecessors: [0x3e]
Successors: [0x1df, 0x1e3]
---
0x1d8 JUMPDEST
0x1d9 CALLVALUE
0x1da ISZERO
0x1db PUSH2 0x1e3
0x1de JUMPI
---
0x1d8: JUMPDEST 
0x1d9: V140 = CALLVALUE
0x1da: V141 = ISZERO V140
0x1db: V142 = 0x1e3
0x1de: JUMPI 0x1e3 V141
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1df
[0x1df:0x1e2]
---
Predecessors: [0x1d8]
Successors: []
---
0x1df PUSH1 0x0
0x1e1 DUP1
0x1e2 REVERT
---
0x1df: V143 = 0x0
0x1e2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e3
[0x1e3:0x1ea]
---
Predecessors: [0x1d8]
Successors: [0x399]
---
0x1e3 JUMPDEST
0x1e4 PUSH2 0x1eb
0x1e7 PUSH2 0x399
0x1ea JUMP
---
0x1e3: JUMPDEST 
0x1e4: V144 = 0x1eb
0x1e7: V145 = 0x399
0x1ea: JUMP 0x399
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1eb]
Exit stack: [V10, 0x1eb]

================================

Block 0x1eb
[0x1eb:0x1fc]
---
Predecessors: [0x399, 0x3bd, 0x3cf, 0x3d5, 0x3db]
Successors: []
---
0x1eb JUMPDEST
0x1ec PUSH1 0x40
0x1ee MLOAD
0x1ef SWAP1
0x1f0 DUP2
0x1f1 MSTORE
0x1f2 PUSH1 0x20
0x1f4 ADD
0x1f5 PUSH1 0x40
0x1f7 MLOAD
0x1f8 DUP1
0x1f9 SWAP2
0x1fa SUB
0x1fb SWAP1
0x1fc RETURN
---
0x1eb: JUMPDEST 
0x1ec: V146 = 0x40
0x1ee: V147 = M[0x40]
0x1f1: M[V147] = S0
0x1f2: V148 = 0x20
0x1f4: V149 = ADD 0x20 V147
0x1f5: V150 = 0x40
0x1f7: V151 = M[0x40]
0x1fa: V152 = SUB V149 V151
0x1fc: RETURN V151 V152
---
Entry stack: [V10, 0x1eb, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1eb]

================================

Block 0x1fd
[0x1fd:0x203]
---
Predecessors: [0x49]
Successors: [0x204, 0x208]
---
0x1fd JUMPDEST
0x1fe CALLVALUE
0x1ff ISZERO
0x200 PUSH2 0x208
0x203 JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V153 = CALLVALUE
0x1ff: V154 = ISZERO V153
0x200: V155 = 0x208
0x203: JUMPI 0x208 V154
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x204
[0x204:0x207]
---
Predecessors: [0x1fd]
Successors: []
---
0x204 PUSH1 0x0
0x206 DUP1
0x207 REVERT
---
0x204: V156 = 0x0
0x207: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x208
[0x208:0x20f]
---
Predecessors: [0x1fd]
Successors: [0x39f]
---
0x208 JUMPDEST
0x209 PUSH2 0x210
0x20c PUSH2 0x39f
0x20f JUMP
---
0x208: JUMPDEST 
0x209: V157 = 0x210
0x20c: V158 = 0x39f
0x20f: JUMP 0x39f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x210]
Exit stack: [V10, 0x210]

================================

Block 0x210
[0x210:0x22b]
---
Predecessors: [0x39f, 0x3ae]
Successors: []
---
0x210 JUMPDEST
0x211 PUSH1 0x40
0x213 MLOAD
0x214 PUSH1 0x1
0x216 PUSH1 0xa0
0x218 PUSH1 0x2
0x21a EXP
0x21b SUB
0x21c SWAP1
0x21d SWAP2
0x21e AND
0x21f DUP2
0x220 MSTORE
0x221 PUSH1 0x20
0x223 ADD
0x224 PUSH1 0x40
0x226 MLOAD
0x227 DUP1
0x228 SWAP2
0x229 SUB
0x22a SWAP1
0x22b RETURN
---
0x210: JUMPDEST 
0x211: V159 = 0x40
0x213: V160 = M[0x40]
0x214: V161 = 0x1
0x216: V162 = 0xa0
0x218: V163 = 0x2
0x21a: V164 = EXP 0x2 0xa0
0x21b: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21e: V166 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x220: M[V160] = V166
0x221: V167 = 0x20
0x223: V168 = ADD 0x20 V160
0x224: V169 = 0x40
0x226: V170 = M[0x40]
0x229: V171 = SUB V168 V170
0x22b: RETURN V170 V171
---
Entry stack: [V10, 0x210, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x210]

================================

Block 0x22c
[0x22c:0x232]
---
Predecessors: [0x54]
Successors: [0x233, 0x237]
---
0x22c JUMPDEST
0x22d CALLVALUE
0x22e ISZERO
0x22f PUSH2 0x237
0x232 JUMPI
---
0x22c: JUMPDEST 
0x22d: V172 = CALLVALUE
0x22e: V173 = ISZERO V172
0x22f: V174 = 0x237
0x232: JUMPI 0x237 V173
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x233
[0x233:0x236]
---
Predecessors: [0x22c]
Successors: []
---
0x233 PUSH1 0x0
0x235 DUP1
0x236 REVERT
---
0x233: V175 = 0x0
0x236: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x237
[0x237:0x23e]
---
Predecessors: [0x22c]
Successors: [0x3ae]
---
0x237 JUMPDEST
0x238 PUSH2 0x210
0x23b PUSH2 0x3ae
0x23e JUMP
---
0x237: JUMPDEST 
0x238: V176 = 0x210
0x23b: V177 = 0x3ae
0x23e: JUMP 0x3ae
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x210]
Exit stack: [V10, 0x210]

================================

Block 0x23f
[0x23f:0x25a]
---
Predecessors: []
Successors: []
---
0x23f JUMPDEST
0x240 PUSH1 0x40
0x242 MLOAD
0x243 PUSH1 0x1
0x245 PUSH1 0xa0
0x247 PUSH1 0x2
0x249 EXP
0x24a SUB
0x24b SWAP1
0x24c SWAP2
0x24d AND
0x24e DUP2
0x24f MSTORE
0x250 PUSH1 0x20
0x252 ADD
0x253 PUSH1 0x40
0x255 MLOAD
0x256 DUP1
0x257 SWAP2
0x258 SUB
0x259 SWAP1
0x25a RETURN
---
0x23f: JUMPDEST 
0x240: V178 = 0x40
0x242: V179 = M[0x40]
0x243: V180 = 0x1
0x245: V181 = 0xa0
0x247: V182 = 0x2
0x249: V183 = EXP 0x2 0xa0
0x24a: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24d: V185 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x24f: M[V179] = V185
0x250: V186 = 0x20
0x252: V187 = ADD 0x20 V179
0x253: V188 = 0x40
0x255: V189 = M[0x40]
0x258: V190 = SUB V187 V189
0x25a: RETURN V189 V190
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x25b
[0x25b:0x261]
---
Predecessors: [0x5f]
Successors: [0x262, 0x266]
---
0x25b JUMPDEST
0x25c CALLVALUE
0x25d ISZERO
0x25e PUSH2 0x266
0x261 JUMPI
---
0x25b: JUMPDEST 
0x25c: V191 = CALLVALUE
0x25d: V192 = ISZERO V191
0x25e: V193 = 0x266
0x261: JUMPI 0x266 V192
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x262
[0x262:0x265]
---
Predecessors: [0x25b]
Successors: []
---
0x262 PUSH1 0x0
0x264 DUP1
0x265 REVERT
---
0x262: V194 = 0x0
0x265: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x266
[0x266:0x279]
---
Predecessors: [0x25b]
Successors: [0x3bd]
---
0x266 JUMPDEST
0x267 PUSH2 0x1eb
0x26a PUSH1 0x1
0x26c PUSH1 0xa0
0x26e PUSH1 0x2
0x270 EXP
0x271 SUB
0x272 PUSH1 0x4
0x274 CALLDATALOAD
0x275 AND
0x276 PUSH2 0x3bd
0x279 JUMP
---
0x266: JUMPDEST 
0x267: V195 = 0x1eb
0x26a: V196 = 0x1
0x26c: V197 = 0xa0
0x26e: V198 = 0x2
0x270: V199 = EXP 0x2 0xa0
0x271: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x272: V201 = 0x4
0x274: V202 = CALLDATALOAD 0x4
0x275: V203 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x276: V204 = 0x3bd
0x279: JUMP 0x3bd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1eb, V203]
Exit stack: [V10, 0x1eb, V203]

================================

Block 0x27a
[0x27a:0x28b]
---
Predecessors: []
Successors: []
---
0x27a JUMPDEST
0x27b PUSH1 0x40
0x27d MLOAD
0x27e SWAP1
0x27f DUP2
0x280 MSTORE
0x281 PUSH1 0x20
0x283 ADD
0x284 PUSH1 0x40
0x286 MLOAD
0x287 DUP1
0x288 SWAP2
0x289 SUB
0x28a SWAP1
0x28b RETURN
---
0x27a: JUMPDEST 
0x27b: V205 = 0x40
0x27d: V206 = M[0x40]
0x280: M[V206] = S0
0x281: V207 = 0x20
0x283: V208 = ADD 0x20 V206
0x284: V209 = 0x40
0x286: V210 = M[0x40]
0x289: V211 = SUB V208 V210
0x28b: RETURN V210 V211
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x28c
[0x28c:0x292]
---
Predecessors: [0x6a]
Successors: [0x293, 0x297]
---
0x28c JUMPDEST
0x28d CALLVALUE
0x28e ISZERO
0x28f PUSH2 0x297
0x292 JUMPI
---
0x28c: JUMPDEST 
0x28d: V212 = CALLVALUE
0x28e: V213 = ISZERO V212
0x28f: V214 = 0x297
0x292: JUMPI 0x297 V213
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x293
[0x293:0x296]
---
Predecessors: [0x28c]
Successors: []
---
0x293 PUSH1 0x0
0x295 DUP1
0x296 REVERT
---
0x293: V215 = 0x0
0x296: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x297
[0x297:0x29e]
---
Predecessors: [0x28c]
Successors: [0x3cf]
---
0x297 JUMPDEST
0x298 PUSH2 0x1eb
0x29b PUSH2 0x3cf
0x29e JUMP
---
0x297: JUMPDEST 
0x298: V216 = 0x1eb
0x29b: V217 = 0x3cf
0x29e: JUMP 0x3cf
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1eb]
Exit stack: [V10, 0x1eb]

================================

Block 0x29f
[0x29f:0x2b0]
---
Predecessors: []
Successors: []
---
0x29f JUMPDEST
0x2a0 PUSH1 0x40
0x2a2 MLOAD
0x2a3 SWAP1
0x2a4 DUP2
0x2a5 MSTORE
0x2a6 PUSH1 0x20
0x2a8 ADD
0x2a9 PUSH1 0x40
0x2ab MLOAD
0x2ac DUP1
0x2ad SWAP2
0x2ae SUB
0x2af SWAP1
0x2b0 RETURN
---
0x29f: JUMPDEST 
0x2a0: V218 = 0x40
0x2a2: V219 = M[0x40]
0x2a5: M[V219] = S0
0x2a6: V220 = 0x20
0x2a8: V221 = ADD 0x20 V219
0x2a9: V222 = 0x40
0x2ab: V223 = M[0x40]
0x2ae: V224 = SUB V221 V223
0x2b0: RETURN V223 V224
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b1
[0x2b1:0x2b7]
---
Predecessors: [0x75]
Successors: [0x2b8, 0x2bc]
---
0x2b1 JUMPDEST
0x2b2 CALLVALUE
0x2b3 ISZERO
0x2b4 PUSH2 0x2bc
0x2b7 JUMPI
---
0x2b1: JUMPDEST 
0x2b2: V225 = CALLVALUE
0x2b3: V226 = ISZERO V225
0x2b4: V227 = 0x2bc
0x2b7: JUMPI 0x2bc V226
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b8
[0x2b8:0x2bb]
---
Predecessors: [0x2b1]
Successors: []
---
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb REVERT
---
0x2b8: V228 = 0x0
0x2bb: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2bc
[0x2bc:0x2c3]
---
Predecessors: [0x2b1]
Successors: [0x3d5]
---
0x2bc JUMPDEST
0x2bd PUSH2 0x1eb
0x2c0 PUSH2 0x3d5
0x2c3 JUMP
---
0x2bc: JUMPDEST 
0x2bd: V229 = 0x1eb
0x2c0: V230 = 0x3d5
0x2c3: JUMP 0x3d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1eb]
Exit stack: [V10, 0x1eb]

================================

Block 0x2c4
[0x2c4:0x2d5]
---
Predecessors: []
Successors: []
---
0x2c4 JUMPDEST
0x2c5 PUSH1 0x40
0x2c7 MLOAD
0x2c8 SWAP1
0x2c9 DUP2
0x2ca MSTORE
0x2cb PUSH1 0x20
0x2cd ADD
0x2ce PUSH1 0x40
0x2d0 MLOAD
0x2d1 DUP1
0x2d2 SWAP2
0x2d3 SUB
0x2d4 SWAP1
0x2d5 RETURN
---
0x2c4: JUMPDEST 
0x2c5: V231 = 0x40
0x2c7: V232 = M[0x40]
0x2ca: M[V232] = S0
0x2cb: V233 = 0x20
0x2cd: V234 = ADD 0x20 V232
0x2ce: V235 = 0x40
0x2d0: V236 = M[0x40]
0x2d3: V237 = SUB V234 V236
0x2d5: RETURN V236 V237
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d6
[0x2d6:0x2dc]
---
Predecessors: [0x80]
Successors: [0x2dd, 0x2e1]
---
0x2d6 JUMPDEST
0x2d7 CALLVALUE
0x2d8 ISZERO
0x2d9 PUSH2 0x2e1
0x2dc JUMPI
---
0x2d6: JUMPDEST 
0x2d7: V238 = CALLVALUE
0x2d8: V239 = ISZERO V238
0x2d9: V240 = 0x2e1
0x2dc: JUMPI 0x2e1 V239
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2dd
[0x2dd:0x2e0]
---
Predecessors: [0x2d6]
Successors: []
---
0x2dd PUSH1 0x0
0x2df DUP1
0x2e0 REVERT
---
0x2dd: V241 = 0x0
0x2e0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e1
[0x2e1:0x2e8]
---
Predecessors: [0x2d6]
Successors: [0x3db]
---
0x2e1 JUMPDEST
0x2e2 PUSH2 0x1eb
0x2e5 PUSH2 0x3db
0x2e8 JUMP
---
0x2e1: JUMPDEST 
0x2e2: V242 = 0x1eb
0x2e5: V243 = 0x3db
0x2e8: JUMP 0x3db
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1eb]
Exit stack: [V10, 0x1eb]

================================

Block 0x2e9
[0x2e9:0x2fa]
---
Predecessors: []
Successors: []
---
0x2e9 JUMPDEST
0x2ea PUSH1 0x40
0x2ec MLOAD
0x2ed SWAP1
0x2ee DUP2
0x2ef MSTORE
0x2f0 PUSH1 0x20
0x2f2 ADD
0x2f3 PUSH1 0x40
0x2f5 MLOAD
0x2f6 DUP1
0x2f7 SWAP2
0x2f8 SUB
0x2f9 SWAP1
0x2fa RETURN
---
0x2e9: JUMPDEST 
0x2ea: V244 = 0x40
0x2ec: V245 = M[0x40]
0x2ef: M[V245] = S0
0x2f0: V246 = 0x20
0x2f2: V247 = ADD 0x20 V245
0x2f3: V248 = 0x40
0x2f5: V249 = M[0x40]
0x2f8: V250 = SUB V247 V249
0x2fa: RETURN V249 V250
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2fb
[0x2fb:0x301]
---
Predecessors: [0x8b]
Successors: [0x302, 0x306]
---
0x2fb JUMPDEST
0x2fc CALLVALUE
0x2fd ISZERO
0x2fe PUSH2 0x306
0x301 JUMPI
---
0x2fb: JUMPDEST 
0x2fc: V251 = CALLVALUE
0x2fd: V252 = ISZERO V251
0x2fe: V253 = 0x306
0x301: JUMPI 0x306 V252
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x302
[0x302:0x305]
---
Predecessors: [0x2fb]
Successors: []
---
0x302 PUSH1 0x0
0x304 DUP1
0x305 REVERT
---
0x302: V254 = 0x0
0x305: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x306
[0x306:0x30d]
---
Predecessors: [0x2fb]
Successors: [0x3e1]
---
0x306 JUMPDEST
0x307 PUSH2 0x1c1
0x30a PUSH2 0x3e1
0x30d JUMP
---
0x306: JUMPDEST 
0x307: V255 = 0x1c1
0x30a: V256 = 0x3e1
0x30d: JUMP 0x3e1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c1]
Exit stack: [V10, 0x1c1]

================================

Block 0x30e
[0x30e:0x30f]
---
Predecessors: []
Successors: []
---
0x30e JUMPDEST
0x30f STOP
---
0x30e: JUMPDEST 
0x30f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x310
[0x310:0x319]
---
Predecessors: [0x1ce]
Successors: [0x31a, 0x395]
---
0x310 JUMPDEST
0x311 PUSH1 0x3
0x313 SLOAD
0x314 TIMESTAMP
0x315 LT
0x316 PUSH2 0x395
0x319 JUMPI
---
0x310: JUMPDEST 
0x311: V257 = 0x3
0x313: V258 = S[0x3]
0x314: V259 = TIMESTAMP
0x315: V260 = LT V259 V258
0x316: V261 = 0x395
0x319: JUMPI 0x395 V260
---
Entry stack: [V10, 0x1c1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1]

================================

Block 0x31a
[0x31a:0x324]
---
Predecessors: [0x310]
Successors: [0x325, 0x385]
---
0x31a PUSH1 0x1
0x31c SLOAD
0x31d PUSH1 0x2
0x31f SLOAD
0x320 LT
0x321 PUSH2 0x385
0x324 JUMPI
---
0x31a: V262 = 0x1
0x31c: V263 = S[0x1]
0x31d: V264 = 0x2
0x31f: V265 = S[0x2]
0x320: V266 = LT V265 V263
0x321: V267 = 0x385
0x324: JUMPI 0x385 V266
---
Entry stack: [V10, 0x1c1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1]

================================

Block 0x325
[0x325:0x384]
---
Predecessors: [0x31a]
Successors: [0x385]
---
0x325 PUSH1 0x7
0x327 DUP1
0x328 SLOAD
0x329 PUSH1 0xff
0x32b NOT
0x32c AND
0x32d PUSH1 0x1
0x32f OR
0x330 SWAP1
0x331 SSTORE
0x332 PUSH1 0x0
0x334 SLOAD
0x335 PUSH1 0x2
0x337 SLOAD
0x338 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x359 SWAP2
0x35a PUSH1 0x1
0x35c PUSH1 0xa0
0x35e PUSH1 0x2
0x360 EXP
0x361 SUB
0x362 AND
0x363 SWAP1
0x364 PUSH1 0x40
0x366 MLOAD
0x367 PUSH1 0x1
0x369 PUSH1 0xa0
0x36b PUSH1 0x2
0x36d EXP
0x36e SUB
0x36f SWAP1
0x370 SWAP3
0x371 AND
0x372 DUP3
0x373 MSTORE
0x374 PUSH1 0x20
0x376 DUP3
0x377 ADD
0x378 MSTORE
0x379 PUSH1 0x40
0x37b SWAP1
0x37c DUP2
0x37d ADD
0x37e SWAP1
0x37f MLOAD
0x380 DUP1
0x381 SWAP2
0x382 SUB
0x383 SWAP1
0x384 LOG1
---
0x325: V268 = 0x7
0x328: V269 = S[0x7]
0x329: V270 = 0xff
0x32b: V271 = NOT 0xff
0x32c: V272 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V269
0x32d: V273 = 0x1
0x32f: V274 = OR 0x1 V272
0x331: S[0x7] = V274
0x332: V275 = 0x0
0x334: V276 = S[0x0]
0x335: V277 = 0x2
0x337: V278 = S[0x2]
0x338: V279 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x35a: V280 = 0x1
0x35c: V281 = 0xa0
0x35e: V282 = 0x2
0x360: V283 = EXP 0x2 0xa0
0x361: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x362: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x364: V286 = 0x40
0x366: V287 = M[0x40]
0x367: V288 = 0x1
0x369: V289 = 0xa0
0x36b: V290 = 0x2
0x36d: V291 = EXP 0x2 0xa0
0x36e: V292 = SUB 0x10000000000000000000000000000000000000000 0x1
0x371: V293 = AND V285 0xffffffffffffffffffffffffffffffffffffffff
0x373: M[V287] = V293
0x374: V294 = 0x20
0x377: V295 = ADD V287 0x20
0x378: M[V295] = V278
0x379: V296 = 0x40
0x37d: V297 = ADD 0x40 V287
0x37f: V298 = M[0x40]
0x382: V299 = SUB V297 V298
0x384: LOG V298 V299 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V10, 0x1c1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1]

================================

Block 0x385
[0x385:0x394]
---
Predecessors: [0x31a, 0x325]
Successors: [0x395]
---
0x385 JUMPDEST
0x386 PUSH1 0x7
0x388 DUP1
0x389 SLOAD
0x38a PUSH2 0xff00
0x38d NOT
0x38e AND
0x38f PUSH2 0x100
0x392 OR
0x393 SWAP1
0x394 SSTORE
---
0x385: JUMPDEST 
0x386: V300 = 0x7
0x389: V301 = S[0x7]
0x38a: V302 = 0xff00
0x38d: V303 = NOT 0xff00
0x38e: V304 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V301
0x38f: V305 = 0x100
0x392: V306 = OR 0x100 V304
0x394: S[0x7] = V306
---
Entry stack: [V10, 0x1c1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1]

================================

Block 0x395
[0x395:0x395]
---
Predecessors: [0x310, 0x385]
Successors: [0x396]
---
0x395 JUMPDEST
---
0x395: JUMPDEST 
---
Entry stack: [V10, 0x1c1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1]

================================

Block 0x396
[0x396:0x396]
---
Predecessors: [0x395]
Successors: [0x397]
---
0x396 JUMPDEST
---
0x396: JUMPDEST 
---
Entry stack: [V10, 0x1c1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1]

================================

Block 0x397
[0x397:0x398]
---
Predecessors: [0x396]
Successors: [0x1c1]
---
0x397 JUMPDEST
0x398 JUMP
---
0x397: JUMPDEST 
0x398: JUMP 0x1c1
---
Entry stack: [V10, 0x1c1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x399
[0x399:0x39e]
---
Predecessors: [0x1e3]
Successors: [0x1eb]
---
0x399 JUMPDEST
0x39a PUSH1 0x3
0x39c SLOAD
0x39d DUP2
0x39e JUMP
---
0x399: JUMPDEST 
0x39a: V307 = 0x3
0x39c: V308 = S[0x3]
0x39e: JUMP 0x1eb
---
Entry stack: [V10, 0x1eb]
Stack pops: 1
Stack additions: [S0, V308]
Exit stack: [V10, 0x1eb, V308]

================================

Block 0x39f
[0x39f:0x3ad]
---
Predecessors: [0x208]
Successors: [0x210]
---
0x39f JUMPDEST
0x3a0 PUSH1 0x0
0x3a2 SLOAD
0x3a3 PUSH1 0x1
0x3a5 PUSH1 0xa0
0x3a7 PUSH1 0x2
0x3a9 EXP
0x3aa SUB
0x3ab AND
0x3ac DUP2
0x3ad JUMP
---
0x39f: JUMPDEST 
0x3a0: V309 = 0x0
0x3a2: V310 = S[0x0]
0x3a3: V311 = 0x1
0x3a5: V312 = 0xa0
0x3a7: V313 = 0x2
0x3a9: V314 = EXP 0x2 0xa0
0x3aa: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ab: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x3ad: JUMP 0x210
---
Entry stack: [V10, 0x210]
Stack pops: 1
Stack additions: [S0, V316]
Exit stack: [V10, 0x210, V316]

================================

Block 0x3ae
[0x3ae:0x3bc]
---
Predecessors: [0x237]
Successors: [0x210]
---
0x3ae JUMPDEST
0x3af PUSH1 0x5
0x3b1 SLOAD
0x3b2 PUSH1 0x1
0x3b4 PUSH1 0xa0
0x3b6 PUSH1 0x2
0x3b8 EXP
0x3b9 SUB
0x3ba AND
0x3bb DUP2
0x3bc JUMP
---
0x3ae: JUMPDEST 
0x3af: V317 = 0x5
0x3b1: V318 = S[0x5]
0x3b2: V319 = 0x1
0x3b4: V320 = 0xa0
0x3b6: V321 = 0x2
0x3b8: V322 = EXP 0x2 0xa0
0x3b9: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ba: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x3bc: JUMP 0x210
---
Entry stack: [V10, 0x210]
Stack pops: 1
Stack additions: [S0, V324]
Exit stack: [V10, 0x210, V324]

================================

Block 0x3bd
[0x3bd:0x3ce]
---
Predecessors: [0x266]
Successors: [0x1eb]
---
0x3bd JUMPDEST
0x3be PUSH1 0x6
0x3c0 PUSH1 0x20
0x3c2 MSTORE
0x3c3 PUSH1 0x0
0x3c5 SWAP1
0x3c6 DUP2
0x3c7 MSTORE
0x3c8 PUSH1 0x40
0x3ca SWAP1
0x3cb SHA3
0x3cc SLOAD
0x3cd DUP2
0x3ce JUMP
---
0x3bd: JUMPDEST 
0x3be: V325 = 0x6
0x3c0: V326 = 0x20
0x3c2: M[0x20] = 0x6
0x3c3: V327 = 0x0
0x3c7: M[0x0] = V203
0x3c8: V328 = 0x40
0x3cb: V329 = SHA3 0x0 0x40
0x3cc: V330 = S[V329]
0x3ce: JUMP 0x1eb
---
Entry stack: [V10, 0x1eb, V203]
Stack pops: 2
Stack additions: [S1, V330]
Exit stack: [V10, 0x1eb, V330]

================================

Block 0x3cf
[0x3cf:0x3d4]
---
Predecessors: [0x297]
Successors: [0x1eb]
---
0x3cf JUMPDEST
0x3d0 PUSH1 0x1
0x3d2 SLOAD
0x3d3 DUP2
0x3d4 JUMP
---
0x3cf: JUMPDEST 
0x3d0: V331 = 0x1
0x3d2: V332 = S[0x1]
0x3d4: JUMP 0x1eb
---
Entry stack: [V10, 0x1eb]
Stack pops: 1
Stack additions: [S0, V332]
Exit stack: [V10, 0x1eb, V332]

================================

Block 0x3d5
[0x3d5:0x3da]
---
Predecessors: [0x2bc]
Successors: [0x1eb]
---
0x3d5 JUMPDEST
0x3d6 PUSH1 0x2
0x3d8 SLOAD
0x3d9 DUP2
0x3da JUMP
---
0x3d5: JUMPDEST 
0x3d6: V333 = 0x2
0x3d8: V334 = S[0x2]
0x3da: JUMP 0x1eb
---
Entry stack: [V10, 0x1eb]
Stack pops: 1
Stack additions: [S0, V334]
Exit stack: [V10, 0x1eb, V334]

================================

Block 0x3db
[0x3db:0x3e0]
---
Predecessors: [0x2e1]
Successors: [0x1eb]
---
0x3db JUMPDEST
0x3dc PUSH1 0x4
0x3de SLOAD
0x3df DUP2
0x3e0 JUMP
---
0x3db: JUMPDEST 
0x3dc: V335 = 0x4
0x3de: V336 = S[0x4]
0x3e0: JUMP 0x1eb
---
Entry stack: [V10, 0x1eb]
Stack pops: 1
Stack additions: [S0, V336]
Exit stack: [V10, 0x1eb, V336]

================================

Block 0x3e1
[0x3e1:0x3ed]
---
Predecessors: [0x306]
Successors: [0x1be, 0x3ee]
---
0x3e1 JUMPDEST
0x3e2 PUSH1 0x3
0x3e4 SLOAD
0x3e5 PUSH1 0x0
0x3e7 SWAP1
0x3e8 TIMESTAMP
0x3e9 LT
0x3ea PUSH2 0x1be
0x3ed JUMPI
---
0x3e1: JUMPDEST 
0x3e2: V337 = 0x3
0x3e4: V338 = S[0x3]
0x3e5: V339 = 0x0
0x3e8: V340 = TIMESTAMP
0x3e9: V341 = LT V340 V338
0x3ea: V342 = 0x1be
0x3ed: JUMPI 0x1be V341
---
Entry stack: [V10, 0x1c1]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1c1, 0x0]

================================

Block 0x3ee
[0x3ee:0x3f9]
---
Predecessors: [0x3e1]
Successors: [0x3fa, 0x4c0]
---
0x3ee PUSH1 0x7
0x3f0 SLOAD
0x3f1 PUSH1 0xff
0x3f3 AND
0x3f4 ISZERO
0x3f5 ISZERO
0x3f6 PUSH2 0x4c0
0x3f9 JUMPI
---
0x3ee: V343 = 0x7
0x3f0: V344 = S[0x7]
0x3f1: V345 = 0xff
0x3f3: V346 = AND 0xff V344
0x3f4: V347 = ISZERO V346
0x3f5: V348 = ISZERO V347
0x3f6: V349 = 0x4c0
0x3f9: JUMPI 0x4c0 V348
---
Entry stack: [V10, 0x1c1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1, 0x0]

================================

Block 0x3fa
[0x3fa:0x420]
---
Predecessors: [0x3ee]
Successors: [0x421, 0x4c0]
---
0x3fa POP
0x3fb PUSH1 0x1
0x3fd PUSH1 0xa0
0x3ff PUSH1 0x2
0x401 EXP
0x402 SUB
0x403 CALLER
0x404 AND
0x405 PUSH1 0x0
0x407 SWAP1
0x408 DUP2
0x409 MSTORE
0x40a PUSH1 0x6
0x40c PUSH1 0x20
0x40e MSTORE
0x40f PUSH1 0x40
0x411 DUP2
0x412 SHA3
0x413 DUP1
0x414 SLOAD
0x415 SWAP1
0x416 DUP3
0x417 SWAP1
0x418 SSTORE
0x419 SWAP1
0x41a DUP2
0x41b GT
0x41c ISZERO
0x41d PUSH2 0x4c0
0x420 JUMPI
---
0x3fb: V350 = 0x1
0x3fd: V351 = 0xa0
0x3ff: V352 = 0x2
0x401: V353 = EXP 0x2 0xa0
0x402: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x403: V355 = CALLER
0x404: V356 = AND V355 0xffffffffffffffffffffffffffffffffffffffff
0x405: V357 = 0x0
0x409: M[0x0] = V356
0x40a: V358 = 0x6
0x40c: V359 = 0x20
0x40e: M[0x20] = 0x6
0x40f: V360 = 0x40
0x412: V361 = SHA3 0x0 0x40
0x414: V362 = S[V361]
0x418: S[V361] = 0x0
0x41b: V363 = GT V362 0x0
0x41c: V364 = ISZERO V363
0x41d: V365 = 0x4c0
0x420: JUMPI 0x4c0 V364
---
Entry stack: [V10, 0x1c1, 0x0]
Stack pops: 1
Stack additions: [V362]
Exit stack: [V10, 0x1c1, V362]

================================

Block 0x421
[0x421:0x44b]
---
Predecessors: [0x3fa]
Successors: [0x44c, 0x4a4]
---
0x421 PUSH1 0x1
0x423 PUSH1 0xa0
0x425 PUSH1 0x2
0x427 EXP
0x428 SUB
0x429 CALLER
0x42a AND
0x42b DUP2
0x42c ISZERO
0x42d PUSH2 0x8fc
0x430 MUL
0x431 DUP3
0x432 PUSH1 0x40
0x434 MLOAD
0x435 PUSH1 0x0
0x437 PUSH1 0x40
0x439 MLOAD
0x43a DUP1
0x43b DUP4
0x43c SUB
0x43d DUP2
0x43e DUP6
0x43f DUP9
0x440 DUP9
0x441 CALL
0x442 SWAP4
0x443 POP
0x444 POP
0x445 POP
0x446 POP
0x447 ISZERO
0x448 PUSH2 0x4a4
0x44b JUMPI
---
0x421: V366 = 0x1
0x423: V367 = 0xa0
0x425: V368 = 0x2
0x427: V369 = EXP 0x2 0xa0
0x428: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x429: V371 = CALLER
0x42a: V372 = AND V371 0xffffffffffffffffffffffffffffffffffffffff
0x42c: V373 = ISZERO V362
0x42d: V374 = 0x8fc
0x430: V375 = MUL 0x8fc V373
0x432: V376 = 0x40
0x434: V377 = M[0x40]
0x435: V378 = 0x0
0x437: V379 = 0x40
0x439: V380 = M[0x40]
0x43c: V381 = SUB V377 V380
0x441: V382 = CALL V375 V372 V362 V380 V381 V380 0x0
0x447: V383 = ISZERO V382
0x448: V384 = 0x4a4
0x44b: JUMPI 0x4a4 V383
---
Entry stack: [V10, 0x1c1, V362]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1c1, V362]

================================

Block 0x44c
[0x44c:0x4a3]
---
Predecessors: [0x421]
Successors: [0x4c0]
---
0x44c PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x46d CALLER
0x46e DUP3
0x46f PUSH1 0x0
0x471 PUSH1 0x40
0x473 MLOAD
0x474 PUSH1 0x1
0x476 PUSH1 0xa0
0x478 PUSH1 0x2
0x47a EXP
0x47b SUB
0x47c SWAP1
0x47d SWAP4
0x47e AND
0x47f DUP4
0x480 MSTORE
0x481 PUSH1 0x20
0x483 DUP4
0x484 ADD
0x485 SWAP2
0x486 SWAP1
0x487 SWAP2
0x488 MSTORE
0x489 ISZERO
0x48a ISZERO
0x48b PUSH1 0x40
0x48d DUP1
0x48e DUP4
0x48f ADD
0x490 SWAP2
0x491 SWAP1
0x492 SWAP2
0x493 MSTORE
0x494 PUSH1 0x60
0x496 SWAP1
0x497 SWAP2
0x498 ADD
0x499 SWAP1
0x49a MLOAD
0x49b DUP1
0x49c SWAP2
0x49d SUB
0x49e SWAP1
0x49f LOG1
0x4a0 PUSH2 0x4c0
0x4a3 JUMP
---
0x44c: V385 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x46d: V386 = CALLER
0x46f: V387 = 0x0
0x471: V388 = 0x40
0x473: V389 = M[0x40]
0x474: V390 = 0x1
0x476: V391 = 0xa0
0x478: V392 = 0x2
0x47a: V393 = EXP 0x2 0xa0
0x47b: V394 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47e: V395 = AND V386 0xffffffffffffffffffffffffffffffffffffffff
0x480: M[V389] = V395
0x481: V396 = 0x20
0x484: V397 = ADD V389 0x20
0x488: M[V397] = V362
0x489: V398 = ISZERO 0x0
0x48a: V399 = ISZERO 0x1
0x48b: V400 = 0x40
0x48f: V401 = ADD V389 0x40
0x493: M[V401] = 0x0
0x494: V402 = 0x60
0x498: V403 = ADD V389 0x60
0x49a: V404 = M[0x40]
0x49d: V405 = SUB V403 V404
0x49f: LOG V404 V405 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4a0: V406 = 0x4c0
0x4a3: JUMP 0x4c0
---
Entry stack: [V10, 0x1c1, V362]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1c1, V362]

================================

Block 0x4a4
[0x4a4:0x4bf]
---
Predecessors: [0x421]
Successors: [0x4c0]
---
0x4a4 JUMPDEST
0x4a5 PUSH1 0x1
0x4a7 PUSH1 0xa0
0x4a9 PUSH1 0x2
0x4ab EXP
0x4ac SUB
0x4ad CALLER
0x4ae AND
0x4af PUSH1 0x0
0x4b1 SWAP1
0x4b2 DUP2
0x4b3 MSTORE
0x4b4 PUSH1 0x6
0x4b6 PUSH1 0x20
0x4b8 MSTORE
0x4b9 PUSH1 0x40
0x4bb SWAP1
0x4bc SHA3
0x4bd DUP2
0x4be SWAP1
0x4bf SSTORE
---
0x4a4: JUMPDEST 
0x4a5: V407 = 0x1
0x4a7: V408 = 0xa0
0x4a9: V409 = 0x2
0x4ab: V410 = EXP 0x2 0xa0
0x4ac: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ad: V412 = CALLER
0x4ae: V413 = AND V412 0xffffffffffffffffffffffffffffffffffffffff
0x4af: V414 = 0x0
0x4b3: M[0x0] = V413
0x4b4: V415 = 0x6
0x4b6: V416 = 0x20
0x4b8: M[0x20] = 0x6
0x4b9: V417 = 0x40
0x4bc: V418 = SHA3 0x0 0x40
0x4bf: S[V418] = V362
---
Entry stack: [V10, 0x1c1, V362]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1c1, V362]

================================

Block 0x4c0
[0x4c0:0x4c0]
---
Predecessors: [0x3ee, 0x3fa, 0x44c, 0x4a4]
Successors: [0x4c1]
---
0x4c0 JUMPDEST
---
0x4c0: JUMPDEST 
---
Entry stack: [V10, 0x1c1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1, S0]

================================

Block 0x4c1
[0x4c1:0x4c1]
---
Predecessors: [0x4c0]
Successors: [0x4c2]
---
0x4c1 JUMPDEST
---
0x4c1: JUMPDEST 
---
Entry stack: [V10, 0x1c1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1, S0]

================================

Block 0x4c2
[0x4c2:0x4ce]
---
Predecessors: [0x4c1]
Successors: [0x4cf, 0x4e2]
---
0x4c2 JUMPDEST
0x4c3 PUSH1 0x7
0x4c5 SLOAD
0x4c6 PUSH1 0xff
0x4c8 AND
0x4c9 DUP1
0x4ca ISZERO
0x4cb PUSH2 0x4e2
0x4ce JUMPI
---
0x4c2: JUMPDEST 
0x4c3: V419 = 0x7
0x4c5: V420 = S[0x7]
0x4c6: V421 = 0xff
0x4c8: V422 = AND 0xff V420
0x4ca: V423 = ISZERO V422
0x4cb: V424 = 0x4e2
0x4ce: JUMPI 0x4e2 V423
---
Entry stack: [V10, 0x1c1, S0]
Stack pops: 0
Stack additions: [V422]
Exit stack: [V10, 0x1c1, S0, V422]

================================

Block 0x4cf
[0x4cf:0x4e1]
---
Predecessors: [0x4c2]
Successors: [0x4e2]
---
0x4cf POP
0x4d0 PUSH1 0x0
0x4d2 SLOAD
0x4d3 CALLER
0x4d4 PUSH1 0x1
0x4d6 PUSH1 0xa0
0x4d8 PUSH1 0x2
0x4da EXP
0x4db SUB
0x4dc SWAP1
0x4dd DUP2
0x4de AND
0x4df SWAP2
0x4e0 AND
0x4e1 EQ
---
0x4d0: V425 = 0x0
0x4d2: V426 = S[0x0]
0x4d3: V427 = CALLER
0x4d4: V428 = 0x1
0x4d6: V429 = 0xa0
0x4d8: V430 = 0x2
0x4da: V431 = EXP 0x2 0xa0
0x4db: V432 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4de: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x4e0: V434 = AND V426 0xffffffffffffffffffffffffffffffffffffffff
0x4e1: V435 = EQ V434 V433
---
Entry stack: [V10, 0x1c1, S1, V422]
Stack pops: 1
Stack additions: [V435]
Exit stack: [V10, 0x1c1, S1, V435]

================================

Block 0x4e2
[0x4e2:0x4e7]
---
Predecessors: [0x4c2, 0x4cf]
Successors: [0x1be, 0x4e8]
---
0x4e2 JUMPDEST
0x4e3 ISZERO
0x4e4 PUSH2 0x1be
0x4e7 JUMPI
---
0x4e2: JUMPDEST 
0x4e3: V436 = ISZERO S0
0x4e4: V437 = 0x1be
0x4e7: JUMPI 0x1be V436
---
Entry stack: [V10, 0x1c1, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1c1, S1]

================================

Block 0x4e8
[0x4e8:0x51a]
---
Predecessors: [0x4e2]
Successors: [0x51b, 0x583]
---
0x4e8 PUSH1 0x0
0x4ea SLOAD
0x4eb PUSH1 0x2
0x4ed SLOAD
0x4ee PUSH1 0x1
0x4f0 PUSH1 0xa0
0x4f2 PUSH1 0x2
0x4f4 EXP
0x4f5 SUB
0x4f6 SWAP1
0x4f7 SWAP2
0x4f8 AND
0x4f9 SWAP1
0x4fa DUP1
0x4fb ISZERO
0x4fc PUSH2 0x8fc
0x4ff MUL
0x500 SWAP1
0x501 PUSH1 0x40
0x503 MLOAD
0x504 PUSH1 0x0
0x506 PUSH1 0x40
0x508 MLOAD
0x509 DUP1
0x50a DUP4
0x50b SUB
0x50c DUP2
0x50d DUP6
0x50e DUP9
0x50f DUP9
0x510 CALL
0x511 SWAP4
0x512 POP
0x513 POP
0x514 POP
0x515 POP
0x516 ISZERO
0x517 PUSH2 0x583
0x51a JUMPI
---
0x4e8: V438 = 0x0
0x4ea: V439 = S[0x0]
0x4eb: V440 = 0x2
0x4ed: V441 = S[0x2]
0x4ee: V442 = 0x1
0x4f0: V443 = 0xa0
0x4f2: V444 = 0x2
0x4f4: V445 = EXP 0x2 0xa0
0x4f5: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f8: V447 = AND V439 0xffffffffffffffffffffffffffffffffffffffff
0x4fb: V448 = ISZERO V441
0x4fc: V449 = 0x8fc
0x4ff: V450 = MUL 0x8fc V448
0x501: V451 = 0x40
0x503: V452 = M[0x40]
0x504: V453 = 0x0
0x506: V454 = 0x40
0x508: V455 = M[0x40]
0x50b: V456 = SUB V452 V455
0x510: V457 = CALL V450 V447 V441 V455 V456 V455 0x0
0x516: V458 = ISZERO V457
0x517: V459 = 0x583
0x51a: JUMPI 0x583 V458
---
Entry stack: [V10, 0x1c1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1, S0]

================================

Block 0x51b
[0x51b:0x582]
---
Predecessors: [0x4e8]
Successors: [0x1be]
---
0x51b PUSH1 0x0
0x51d DUP1
0x51e SLOAD
0x51f PUSH1 0x2
0x521 SLOAD
0x522 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x543 SWAP3
0x544 PUSH1 0x1
0x546 PUSH1 0xa0
0x548 PUSH1 0x2
0x54a EXP
0x54b SUB
0x54c SWAP1
0x54d SWAP3
0x54e AND
0x54f SWAP2
0x550 PUSH1 0x40
0x552 MLOAD
0x553 PUSH1 0x1
0x555 PUSH1 0xa0
0x557 PUSH1 0x2
0x559 EXP
0x55a SUB
0x55b SWAP1
0x55c SWAP4
0x55d AND
0x55e DUP4
0x55f MSTORE
0x560 PUSH1 0x20
0x562 DUP4
0x563 ADD
0x564 SWAP2
0x565 SWAP1
0x566 SWAP2
0x567 MSTORE
0x568 ISZERO
0x569 ISZERO
0x56a PUSH1 0x40
0x56c DUP1
0x56d DUP4
0x56e ADD
0x56f SWAP2
0x570 SWAP1
0x571 SWAP2
0x572 MSTORE
0x573 PUSH1 0x60
0x575 SWAP1
0x576 SWAP2
0x577 ADD
0x578 SWAP1
0x579 MLOAD
0x57a DUP1
0x57b SWAP2
0x57c SUB
0x57d SWAP1
0x57e LOG1
0x57f PUSH2 0x1be
0x582 JUMP
---
0x51b: V460 = 0x0
0x51e: V461 = S[0x0]
0x51f: V462 = 0x2
0x521: V463 = S[0x2]
0x522: V464 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x544: V465 = 0x1
0x546: V466 = 0xa0
0x548: V467 = 0x2
0x54a: V468 = EXP 0x2 0xa0
0x54b: V469 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54e: V470 = AND V461 0xffffffffffffffffffffffffffffffffffffffff
0x550: V471 = 0x40
0x552: V472 = M[0x40]
0x553: V473 = 0x1
0x555: V474 = 0xa0
0x557: V475 = 0x2
0x559: V476 = EXP 0x2 0xa0
0x55a: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55d: V478 = AND V470 0xffffffffffffffffffffffffffffffffffffffff
0x55f: M[V472] = V478
0x560: V479 = 0x20
0x563: V480 = ADD V472 0x20
0x567: M[V480] = V463
0x568: V481 = ISZERO 0x0
0x569: V482 = ISZERO 0x1
0x56a: V483 = 0x40
0x56e: V484 = ADD V472 0x40
0x572: M[V484] = 0x0
0x573: V485 = 0x60
0x577: V486 = ADD V472 0x60
0x579: V487 = M[0x40]
0x57c: V488 = SUB V486 V487
0x57e: LOG V487 V488 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x57f: V489 = 0x1be
0x582: JUMP 0x1be
---
Entry stack: [V10, 0x1c1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1, S0]

================================

Block 0x583
[0x583:0x58d]
---
Predecessors: [0x4e8]
Successors: [0x58e]
---
0x583 JUMPDEST
0x584 PUSH1 0x7
0x586 DUP1
0x587 SLOAD
0x588 PUSH1 0xff
0x58a NOT
0x58b AND
0x58c SWAP1
0x58d SSTORE
---
0x583: JUMPDEST 
0x584: V490 = 0x7
0x587: V491 = S[0x7]
0x588: V492 = 0xff
0x58a: V493 = NOT 0xff
0x58b: V494 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V491
0x58d: S[0x7] = V494
---
Entry stack: [V10, 0x1c1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1, S0]

================================

Block 0x58e
[0x58e:0x58e]
---
Predecessors: [0x583]
Successors: [0x58f]
---
0x58e JUMPDEST
---
0x58e: JUMPDEST 
---
Entry stack: [V10, 0x1c1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1, S0]

================================

Block 0x58f
[0x58f:0x58f]
---
Predecessors: [0x58e]
Successors: [0x590]
---
0x58f JUMPDEST
---
0x58f: JUMPDEST 
---
Entry stack: [V10, 0x1c1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1, S0]

================================

Block 0x590
[0x590:0x590]
---
Predecessors: [0x58f]
Successors: [0x591]
---
0x590 JUMPDEST
---
0x590: JUMPDEST 
---
Entry stack: [V10, 0x1c1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1, S0]

================================

Block 0x591
[0x591:0x591]
---
Predecessors: [0x590]
Successors: [0x592]
---
0x591 JUMPDEST
---
0x591: JUMPDEST 
---
Entry stack: [V10, 0x1c1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c1, S0]

================================

Block 0x592
[0x592:0x594]
---
Predecessors: [0x591]
Successors: [0x1c1]
---
0x592 JUMPDEST
0x593 POP
0x594 JUMP
---
0x592: JUMPDEST 
0x594: JUMP 0x1c1
---
Entry stack: [V10, 0x1c1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x595
[0x595:0x5c3]
---
Predecessors: []
Successors: []
---
0x595 STOP
0x596 LOG1
0x597 PUSH6 0x627a7a723058
0x59e SHA3
0x59f MISSING 0xdc
0x5a0 GASPRICE
0x5a1 CALLDATASIZE
0x5a2 SWAP15
0x5a3 MISSING 0xc
0x5a4 PUSH2 0x8bf1
0x5a7 MISSING 0xef
0x5a8 MISSING 0xe7
0x5a9 MISSING 0xeb
0x5aa MISSING 0xcc
0x5ab MISSING 0xe1
0x5ac MISSING 0x5e
0x5ad MISSING 0xd3
0x5ae MISSING 0x26
0x5af SWAP2
0x5b0 SGT
0x5b1 ISZERO
0x5b2 PUSH17 0xbd1220096416665a22753bda0029
---
0x595: STOP 
0x596: LOG S0 S1 S2
0x597: V495 = 0x627a7a723058
0x59e: V496 = SHA3 0x627a7a723058 S3
0x59f: MISSING 0xdc
0x5a0: V497 = GASPRICE
0x5a1: V498 = CALLDATASIZE
0x5a3: MISSING 0xc
0x5a4: V499 = 0x8bf1
0x5a7: MISSING 0xef
0x5a8: MISSING 0xe7
0x5a9: MISSING 0xeb
0x5aa: MISSING 0xcc
0x5ab: MISSING 0xe1
0x5ac: MISSING 0x5e
0x5ad: MISSING 0xd3
0x5ae: MISSING 0x26
0x5b0: V500 = SGT S2 S1
0x5b1: V501 = ISZERO V500
0x5b2: V502 = 0xbd1220096416665a22753bda0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V496, S13, V497, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V498, 0x8bf1, 0xbd1220096416665a22753bda0029, V501, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x1c3
Exit block: 0x1c1
Body: 0x1c1, 0x1c3, 0x1ca, 0x1ce, 0x310, 0x31a, 0x325, 0x385, 0x395, 0x396, 0x397

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x1d8
Exit block: 0x1eb
Body: 0x1d8, 0x1df, 0x1e3, 0x1eb, 0x399

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x1fd
Exit block: 0x210
Body: 0x1fd, 0x204, 0x208, 0x210, 0x39f

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x22c
Exit block: 0x210
Body: 0x210, 0x22c, 0x233, 0x237, 0x3ae

Function 4:
Public function signature: 0x70a08231
Entry block: 0x25b
Exit block: 0x1eb
Body: 0x1eb, 0x25b, 0x262, 0x266, 0x3bd

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x28c
Exit block: 0x1eb
Body: 0x1eb, 0x28c, 0x293, 0x297, 0x3cf

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x2b1
Exit block: 0x1eb
Body: 0x1eb, 0x2b1, 0x2b8, 0x2bc, 0x3d5

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x2d6
Exit block: 0x1eb
Body: 0x1eb, 0x2d6, 0x2dd, 0x2e1, 0x3db

Function 8:
Public function signature: 0xfd6b7ef8
Entry block: 0x2fb
Exit block: 0x1c1
Body: 0x1be, 0x1c1, 0x2fb, 0x302, 0x306, 0x3e1, 0x3ee, 0x3fa, 0x421, 0x44c, 0x4a4, 0x4c0, 0x4c1, 0x4c2, 0x4cf, 0x4e2, 0x4e8, 0x51b, 0x583, 0x58e, 0x58f, 0x590, 0x591, 0x592

Function 9:
Public fallback function
Entry block: 0x96
Exit block: 0x1c1
Body: 0x96, 0x9a, 0xae, 0xb2, 0xf7, 0xf8, 0x151, 0x155, 0x162, 0x166, 0x1be, 0x1c1

