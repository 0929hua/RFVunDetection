args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/8/107763.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xf0]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xf0
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xf0
0xc: JUMPI 0xf0 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xf5]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x171060ec
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xf5
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x171060ec
0x3b: V13 = EQ V11 0x171060ec
0x3c: V14 = 0xf5
0x3f: JUMPI 0xf5 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x118]
---
0x40 DUP1
0x41 PUSH4 0x19165587
0x46 EQ
0x47 PUSH2 0x118
0x4a JUMPI
---
0x41: V15 = 0x19165587
0x46: V16 = EQ 0x19165587 V11
0x47: V17 = 0x118
0x4a: JUMPI 0x118 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x139]
---
0x4b DUP1
0x4c PUSH4 0x1f2698ab
0x51 EQ
0x52 PUSH2 0x139
0x55 JUMPI
---
0x4c: V18 = 0x1f2698ab
0x51: V19 = EQ 0x1f2698ab V11
0x52: V20 = 0x139
0x55: JUMPI 0x139 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x162]
---
0x56 DUP1
0x57 PUSH4 0x282d3fdf
0x5c EQ
0x5d PUSH2 0x162
0x60 JUMPI
---
0x57: V21 = 0x282d3fdf
0x5c: V22 = EQ 0x282d3fdf V11
0x5d: V23 = 0x162
0x60: JUMPI 0x162 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x186]
---
0x61 DUP1
0x62 PUSH4 0x3ccfd60b
0x67 EQ
0x68 PUSH2 0x186
0x6b JUMPI
---
0x62: V24 = 0x3ccfd60b
0x67: V25 = EQ 0x3ccfd60b V11
0x68: V26 = 0x186
0x6b: JUMPI 0x186 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x19b]
---
0x6c DUP1
0x6d PUSH4 0x43d726d6
0x72 EQ
0x73 PUSH2 0x19b
0x76 JUMPI
---
0x6d: V27 = 0x43d726d6
0x72: V28 = EQ 0x43d726d6 V11
0x73: V29 = 0x19b
0x76: JUMPI 0x19b V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1b0]
---
0x77 DUP1
0x78 PUSH4 0x715018a6
0x7d EQ
0x7e PUSH2 0x1b0
0x81 JUMPI
---
0x78: V30 = 0x715018a6
0x7d: V31 = EQ 0x715018a6 V11
0x7e: V32 = 0x1b0
0x81: JUMPI 0x1b0 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x1c5]
---
0x82 DUP1
0x83 PUSH4 0x75619ab5
0x88 EQ
0x89 PUSH2 0x1c5
0x8c JUMPI
---
0x83: V33 = 0x75619ab5
0x88: V34 = EQ 0x75619ab5 V11
0x89: V35 = 0x1c5
0x8c: JUMPI 0x1c5 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x1e6]
---
0x8d DUP1
0x8e PUSH4 0x8da5cb5b
0x93 EQ
0x94 PUSH2 0x1e6
0x97 JUMPI
---
0x8e: V36 = 0x8da5cb5b
0x93: V37 = EQ 0x8da5cb5b V11
0x94: V38 = 0x1e6
0x97: JUMPI 0x1e6 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x217]
---
0x98 DUP1
0x99 PUSH4 0x947a36fb
0x9e EQ
0x9f PUSH2 0x217
0xa2 JUMPI
---
0x99: V39 = 0x947a36fb
0x9e: V40 = EQ 0x947a36fb V11
0x9f: V41 = 0x217
0xa2: JUMPI 0x217 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x23e]
---
0xa3 DUP1
0xa4 PUSH4 0x97a993aa
0xa9 EQ
0xaa PUSH2 0x23e
0xad JUMPI
---
0xa4: V42 = 0x97a993aa
0xa9: V43 = EQ 0x97a993aa V11
0xaa: V44 = 0x23e
0xad: JUMPI 0x23e V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x25f]
---
0xae DUP1
0xaf PUSH4 0xb91d4001
0xb4 EQ
0xb5 PUSH2 0x25f
0xb8 JUMPI
---
0xaf: V45 = 0xb91d4001
0xb4: V46 = EQ 0xb91d4001 V11
0xb5: V47 = 0x25f
0xb8: JUMPI 0x25f V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x274]
---
0xb9 DUP1
0xba PUSH4 0xbe9a6555
0xbf EQ
0xc0 PUSH2 0x274
0xc3 JUMPI
---
0xba: V48 = 0xbe9a6555
0xbf: V49 = EQ 0xbe9a6555 V11
0xc0: V50 = 0x274
0xc3: JUMPI 0x274 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x289]
---
0xc4 DUP1
0xc5 PUSH4 0xbfe10928
0xca EQ
0xcb PUSH2 0x289
0xce JUMPI
---
0xc5: V51 = 0xbfe10928
0xca: V52 = EQ 0xbfe10928 V11
0xcb: V53 = 0x289
0xce: JUMPI 0x289 V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x29e]
---
0xcf DUP1
0xd0 PUSH4 0xc2412676
0xd5 EQ
0xd6 PUSH2 0x29e
0xd9 JUMPI
---
0xd0: V54 = 0xc2412676
0xd5: V55 = EQ 0xc2412676 V11
0xd6: V56 = 0x29e
0xd9: JUMPI 0x29e V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0xcf]
Successors: [0xe5, 0x2b3]
---
0xda DUP1
0xdb PUSH4 0xd7b96d4e
0xe0 EQ
0xe1 PUSH2 0x2b3
0xe4 JUMPI
---
0xdb: V57 = 0xd7b96d4e
0xe0: V58 = EQ 0xd7b96d4e V11
0xe1: V59 = 0x2b3
0xe4: JUMPI 0x2b3 V58
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xef]
---
Predecessors: [0xda]
Successors: [0xf0, 0x2c8]
---
0xe5 DUP1
0xe6 PUSH4 0xf2fde38b
0xeb EQ
0xec PUSH2 0x2c8
0xef JUMPI
---
0xe6: V60 = 0xf2fde38b
0xeb: V61 = EQ 0xf2fde38b V11
0xec: V62 = 0x2c8
0xef: JUMPI 0x2c8 V61
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xf0
[0xf0:0xf4]
---
Predecessors: [0x0, 0xe5]
Successors: []
---
0xf0 JUMPDEST
0xf1 PUSH1 0x0
0xf3 DUP1
0xf4 REVERT
---
0xf0: JUMPDEST 
0xf1: V63 = 0x0
0xf4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf5
[0xf5:0xfc]
---
Predecessors: [0xd]
Successors: [0xfd, 0x101]
---
0xf5 JUMPDEST
0xf6 CALLVALUE
0xf7 DUP1
0xf8 ISZERO
0xf9 PUSH2 0x101
0xfc JUMPI
---
0xf5: JUMPDEST 
0xf6: V64 = CALLVALUE
0xf8: V65 = ISZERO V64
0xf9: V66 = 0x101
0xfc: JUMPI 0x101 V65
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V64]
Exit stack: [V11, V64]

================================

Block 0xfd
[0xfd:0x100]
---
Predecessors: [0xf5]
Successors: []
---
0xfd PUSH1 0x0
0xff DUP1
0x100 REVERT
---
0xfd: V67 = 0x0
0x100: REVERT 0x0 0x0
---
Entry stack: [V11, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V64]

================================

Block 0x101
[0x101:0x115]
---
Predecessors: [0xf5]
Successors: [0x2e9]
---
0x101 JUMPDEST
0x102 POP
0x103 PUSH2 0x116
0x106 PUSH1 0x1
0x108 PUSH1 0xa0
0x10a PUSH1 0x2
0x10c EXP
0x10d SUB
0x10e PUSH1 0x4
0x110 CALLDATALOAD
0x111 AND
0x112 PUSH2 0x2e9
0x115 JUMP
---
0x101: JUMPDEST 
0x103: V68 = 0x116
0x106: V69 = 0x1
0x108: V70 = 0xa0
0x10a: V71 = 0x2
0x10c: V72 = EXP 0x2 0xa0
0x10d: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10e: V74 = 0x4
0x110: V75 = CALLDATALOAD 0x4
0x111: V76 = AND V75 0xffffffffffffffffffffffffffffffffffffffff
0x112: V77 = 0x2e9
0x115: JUMP 0x2e9
---
Entry stack: [V11, V64]
Stack pops: 1
Stack additions: [0x116, V76]
Exit stack: [V11, 0x116, V76]

================================

Block 0x116
[0x116:0x117]
---
Predecessors: [0x315, 0x3cc, 0x45c, 0x596, 0x5dc, 0x65d, 0x6f8, 0x7c2]
Successors: []
---
0x116 JUMPDEST
0x117 STOP
---
0x116: JUMPDEST 
0x117: STOP 
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0x118
[0x118:0x11f]
---
Predecessors: [0x40]
Successors: [0x120, 0x124]
---
0x118 JUMPDEST
0x119 CALLVALUE
0x11a DUP1
0x11b ISZERO
0x11c PUSH2 0x124
0x11f JUMPI
---
0x118: JUMPDEST 
0x119: V78 = CALLVALUE
0x11b: V79 = ISZERO V78
0x11c: V80 = 0x124
0x11f: JUMPI 0x124 V79
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V78]
Exit stack: [V11, V78]

================================

Block 0x120
[0x120:0x123]
---
Predecessors: [0x118]
Successors: []
---
0x120 PUSH1 0x0
0x122 DUP1
0x123 REVERT
---
0x120: V81 = 0x0
0x123: REVERT 0x0 0x0
---
Entry stack: [V11, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V78]

================================

Block 0x124
[0x124:0x138]
---
Predecessors: [0x118]
Successors: [0x344]
---
0x124 JUMPDEST
0x125 POP
0x126 PUSH2 0x116
0x129 PUSH1 0x1
0x12b PUSH1 0xa0
0x12d PUSH1 0x2
0x12f EXP
0x130 SUB
0x131 PUSH1 0x4
0x133 CALLDATALOAD
0x134 AND
0x135 PUSH2 0x344
0x138 JUMP
---
0x124: JUMPDEST 
0x126: V82 = 0x116
0x129: V83 = 0x1
0x12b: V84 = 0xa0
0x12d: V85 = 0x2
0x12f: V86 = EXP 0x2 0xa0
0x130: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0x131: V88 = 0x4
0x133: V89 = CALLDATALOAD 0x4
0x134: V90 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x135: V91 = 0x344
0x138: JUMP 0x344
---
Entry stack: [V11, V78]
Stack pops: 1
Stack additions: [0x116, V90]
Exit stack: [V11, 0x116, V90]

================================

Block 0x139
[0x139:0x140]
---
Predecessors: [0x4b]
Successors: [0x141, 0x145]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b DUP1
0x13c ISZERO
0x13d PUSH2 0x145
0x140 JUMPI
---
0x139: JUMPDEST 
0x13a: V92 = CALLVALUE
0x13c: V93 = ISZERO V92
0x13d: V94 = 0x145
0x140: JUMPI 0x145 V93
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V92]
Exit stack: [V11, V92]

================================

Block 0x141
[0x141:0x144]
---
Predecessors: [0x139]
Successors: []
---
0x141 PUSH1 0x0
0x143 DUP1
0x144 REVERT
---
0x141: V95 = 0x0
0x144: REVERT 0x0 0x0
---
Entry stack: [V11, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V92]

================================

Block 0x145
[0x145:0x14d]
---
Predecessors: [0x139]
Successors: [0x40f]
---
0x145 JUMPDEST
0x146 POP
0x147 PUSH2 0x14e
0x14a PUSH2 0x40f
0x14d JUMP
---
0x145: JUMPDEST 
0x147: V96 = 0x14e
0x14a: V97 = 0x40f
0x14d: JUMP 0x40f
---
Entry stack: [V11, V92]
Stack pops: 1
Stack additions: [0x14e]
Exit stack: [V11, 0x14e]

================================

Block 0x14e
[0x14e:0x161]
---
Predecessors: [0x40f]
Successors: []
---
0x14e JUMPDEST
0x14f PUSH1 0x40
0x151 DUP1
0x152 MLOAD
0x153 SWAP2
0x154 ISZERO
0x155 ISZERO
0x156 DUP3
0x157 MSTORE
0x158 MLOAD
0x159 SWAP1
0x15a DUP2
0x15b SWAP1
0x15c SUB
0x15d PUSH1 0x20
0x15f ADD
0x160 SWAP1
0x161 RETURN
---
0x14e: JUMPDEST 
0x14f: V98 = 0x40
0x152: V99 = M[0x40]
0x154: V100 = ISZERO V343
0x155: V101 = ISZERO V100
0x157: M[V99] = V101
0x158: V102 = M[0x40]
0x15c: V103 = SUB V99 V102
0x15d: V104 = 0x20
0x15f: V105 = ADD 0x20 V103
0x161: RETURN V102 V105
---
Entry stack: [V11, 0x14e, V343]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14e]

================================

Block 0x162
[0x162:0x169]
---
Predecessors: [0x56]
Successors: [0x16a, 0x16e]
---
0x162 JUMPDEST
0x163 CALLVALUE
0x164 DUP1
0x165 ISZERO
0x166 PUSH2 0x16e
0x169 JUMPI
---
0x162: JUMPDEST 
0x163: V106 = CALLVALUE
0x165: V107 = ISZERO V106
0x166: V108 = 0x16e
0x169: JUMPI 0x16e V107
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V106]
Exit stack: [V11, V106]

================================

Block 0x16a
[0x16a:0x16d]
---
Predecessors: [0x162]
Successors: []
---
0x16a PUSH1 0x0
0x16c DUP1
0x16d REVERT
---
0x16a: V109 = 0x0
0x16d: REVERT 0x0 0x0
---
Entry stack: [V11, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V106]

================================

Block 0x16e
[0x16e:0x185]
---
Predecessors: [0x162]
Successors: [0x430]
---
0x16e JUMPDEST
0x16f POP
0x170 PUSH2 0x116
0x173 PUSH1 0x1
0x175 PUSH1 0xa0
0x177 PUSH1 0x2
0x179 EXP
0x17a SUB
0x17b PUSH1 0x4
0x17d CALLDATALOAD
0x17e AND
0x17f PUSH1 0x24
0x181 CALLDATALOAD
0x182 PUSH2 0x430
0x185 JUMP
---
0x16e: JUMPDEST 
0x170: V110 = 0x116
0x173: V111 = 0x1
0x175: V112 = 0xa0
0x177: V113 = 0x2
0x179: V114 = EXP 0x2 0xa0
0x17a: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17b: V116 = 0x4
0x17d: V117 = CALLDATALOAD 0x4
0x17e: V118 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x17f: V119 = 0x24
0x181: V120 = CALLDATALOAD 0x24
0x182: V121 = 0x430
0x185: JUMP 0x430
---
Entry stack: [V11, V106]
Stack pops: 1
Stack additions: [0x116, V118, V120]
Exit stack: [V11, 0x116, V118, V120]

================================

Block 0x186
[0x186:0x18d]
---
Predecessors: [0x61]
Successors: [0x18e, 0x192]
---
0x186 JUMPDEST
0x187 CALLVALUE
0x188 DUP1
0x189 ISZERO
0x18a PUSH2 0x192
0x18d JUMPI
---
0x186: JUMPDEST 
0x187: V122 = CALLVALUE
0x189: V123 = ISZERO V122
0x18a: V124 = 0x192
0x18d: JUMPI 0x192 V123
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V122]
Exit stack: [V11, V122]

================================

Block 0x18e
[0x18e:0x191]
---
Predecessors: [0x186]
Successors: []
---
0x18e PUSH1 0x0
0x190 DUP1
0x191 REVERT
---
0x18e: V125 = 0x0
0x191: REVERT 0x0 0x0
---
Entry stack: [V11, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V122]

================================

Block 0x192
[0x192:0x19a]
---
Predecessors: [0x186]
Successors: [0x4b5]
---
0x192 JUMPDEST
0x193 POP
0x194 PUSH2 0x116
0x197 PUSH2 0x4b5
0x19a JUMP
---
0x192: JUMPDEST 
0x194: V126 = 0x116
0x197: V127 = 0x4b5
0x19a: JUMP 0x4b5
---
Entry stack: [V11, V122]
Stack pops: 1
Stack additions: [0x116]
Exit stack: [V11, 0x116]

================================

Block 0x19b
[0x19b:0x1a2]
---
Predecessors: [0x6c]
Successors: [0x1a3, 0x1a7]
---
0x19b JUMPDEST
0x19c CALLVALUE
0x19d DUP1
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x19b: JUMPDEST 
0x19c: V128 = CALLVALUE
0x19e: V129 = ISZERO V128
0x19f: V130 = 0x1a7
0x1a2: JUMPI 0x1a7 V129
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V128]
Exit stack: [V11, V128]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x19b]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V131 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V11, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V128]

================================

Block 0x1a7
[0x1a7:0x1af]
---
Predecessors: [0x19b]
Successors: [0x598]
---
0x1a7 JUMPDEST
0x1a8 POP
0x1a9 PUSH2 0x116
0x1ac PUSH2 0x598
0x1af JUMP
---
0x1a7: JUMPDEST 
0x1a9: V132 = 0x116
0x1ac: V133 = 0x598
0x1af: JUMP 0x598
---
Entry stack: [V11, V128]
Stack pops: 1
Stack additions: [0x116]
Exit stack: [V11, 0x116]

================================

Block 0x1b0
[0x1b0:0x1b7]
---
Predecessors: [0x77]
Successors: [0x1b8, 0x1bc]
---
0x1b0 JUMPDEST
0x1b1 CALLVALUE
0x1b2 DUP1
0x1b3 ISZERO
0x1b4 PUSH2 0x1bc
0x1b7 JUMPI
---
0x1b0: JUMPDEST 
0x1b1: V134 = CALLVALUE
0x1b3: V135 = ISZERO V134
0x1b4: V136 = 0x1bc
0x1b7: JUMPI 0x1bc V135
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V134]
Exit stack: [V11, V134]

================================

Block 0x1b8
[0x1b8:0x1bb]
---
Predecessors: [0x1b0]
Successors: []
---
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb REVERT
---
0x1b8: V137 = 0x0
0x1bb: REVERT 0x0 0x0
---
Entry stack: [V11, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V134]

================================

Block 0x1bc
[0x1bc:0x1c4]
---
Predecessors: [0x1b0]
Successors: [0x5c5]
---
0x1bc JUMPDEST
0x1bd POP
0x1be PUSH2 0x116
0x1c1 PUSH2 0x5c5
0x1c4 JUMP
---
0x1bc: JUMPDEST 
0x1be: V138 = 0x116
0x1c1: V139 = 0x5c5
0x1c4: JUMP 0x5c5
---
Entry stack: [V11, V134]
Stack pops: 1
Stack additions: [0x116]
Exit stack: [V11, 0x116]

================================

Block 0x1c5
[0x1c5:0x1cc]
---
Predecessors: [0x82]
Successors: [0x1cd, 0x1d1]
---
0x1c5 JUMPDEST
0x1c6 CALLVALUE
0x1c7 DUP1
0x1c8 ISZERO
0x1c9 PUSH2 0x1d1
0x1cc JUMPI
---
0x1c5: JUMPDEST 
0x1c6: V140 = CALLVALUE
0x1c8: V141 = ISZERO V140
0x1c9: V142 = 0x1d1
0x1cc: JUMPI 0x1d1 V141
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V140]
Exit stack: [V11, V140]

================================

Block 0x1cd
[0x1cd:0x1d0]
---
Predecessors: [0x1c5]
Successors: []
---
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 REVERT
---
0x1cd: V143 = 0x0
0x1d0: REVERT 0x0 0x0
---
Entry stack: [V11, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V140]

================================

Block 0x1d1
[0x1d1:0x1e5]
---
Predecessors: [0x1c5]
Successors: [0x631]
---
0x1d1 JUMPDEST
0x1d2 POP
0x1d3 PUSH2 0x116
0x1d6 PUSH1 0x1
0x1d8 PUSH1 0xa0
0x1da PUSH1 0x2
0x1dc EXP
0x1dd SUB
0x1de PUSH1 0x4
0x1e0 CALLDATALOAD
0x1e1 AND
0x1e2 PUSH2 0x631
0x1e5 JUMP
---
0x1d1: JUMPDEST 
0x1d3: V144 = 0x116
0x1d6: V145 = 0x1
0x1d8: V146 = 0xa0
0x1da: V147 = 0x2
0x1dc: V148 = EXP 0x2 0xa0
0x1dd: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1de: V150 = 0x4
0x1e0: V151 = CALLDATALOAD 0x4
0x1e1: V152 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x1e2: V153 = 0x631
0x1e5: JUMP 0x631
---
Entry stack: [V11, V140]
Stack pops: 1
Stack additions: [0x116, V152]
Exit stack: [V11, 0x116, V152]

================================

Block 0x1e6
[0x1e6:0x1ed]
---
Predecessors: [0x8d]
Successors: [0x1ee, 0x1f2]
---
0x1e6 JUMPDEST
0x1e7 CALLVALUE
0x1e8 DUP1
0x1e9 ISZERO
0x1ea PUSH2 0x1f2
0x1ed JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V154 = CALLVALUE
0x1e9: V155 = ISZERO V154
0x1ea: V156 = 0x1f2
0x1ed: JUMPI 0x1f2 V155
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V154]
Exit stack: [V11, V154]

================================

Block 0x1ee
[0x1ee:0x1f1]
---
Predecessors: [0x1e6]
Successors: []
---
0x1ee PUSH1 0x0
0x1f0 DUP1
0x1f1 REVERT
---
0x1ee: V157 = 0x0
0x1f1: REVERT 0x0 0x0
---
Entry stack: [V11, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V154]

================================

Block 0x1f2
[0x1f2:0x1fa]
---
Predecessors: [0x1e6]
Successors: [0x68c]
---
0x1f2 JUMPDEST
0x1f3 POP
0x1f4 PUSH2 0x1fb
0x1f7 PUSH2 0x68c
0x1fa JUMP
---
0x1f2: JUMPDEST 
0x1f4: V158 = 0x1fb
0x1f7: V159 = 0x68c
0x1fa: JUMP 0x68c
---
Entry stack: [V11, V154]
Stack pops: 1
Stack additions: [0x1fb]
Exit stack: [V11, 0x1fb]

================================

Block 0x1fb
[0x1fb:0x216]
---
Predecessors: [0x68c, 0x775, 0x784, 0x793]
Successors: []
---
0x1fb JUMPDEST
0x1fc PUSH1 0x40
0x1fe DUP1
0x1ff MLOAD
0x200 PUSH1 0x1
0x202 PUSH1 0xa0
0x204 PUSH1 0x2
0x206 EXP
0x207 SUB
0x208 SWAP1
0x209 SWAP3
0x20a AND
0x20b DUP3
0x20c MSTORE
0x20d MLOAD
0x20e SWAP1
0x20f DUP2
0x210 SWAP1
0x211 SUB
0x212 PUSH1 0x20
0x214 ADD
0x215 SWAP1
0x216 RETURN
---
0x1fb: JUMPDEST 
0x1fc: V160 = 0x40
0x1ff: V161 = M[0x40]
0x200: V162 = 0x1
0x202: V163 = 0xa0
0x204: V164 = 0x2
0x206: V165 = EXP 0x2 0xa0
0x207: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20a: V167 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x20c: M[V161] = V167
0x20d: V168 = M[0x40]
0x211: V169 = SUB V161 V168
0x212: V170 = 0x20
0x214: V171 = ADD 0x20 V169
0x216: RETURN V168 V171
---
Entry stack: [V11, 0x1fb, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1fb]

================================

Block 0x217
[0x217:0x21e]
---
Predecessors: [0x98]
Successors: [0x21f, 0x223]
---
0x217 JUMPDEST
0x218 CALLVALUE
0x219 DUP1
0x21a ISZERO
0x21b PUSH2 0x223
0x21e JUMPI
---
0x217: JUMPDEST 
0x218: V172 = CALLVALUE
0x21a: V173 = ISZERO V172
0x21b: V174 = 0x223
0x21e: JUMPI 0x223 V173
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V172]
Exit stack: [V11, V172]

================================

Block 0x21f
[0x21f:0x222]
---
Predecessors: [0x217]
Successors: []
---
0x21f PUSH1 0x0
0x221 DUP1
0x222 REVERT
---
0x21f: V175 = 0x0
0x222: REVERT 0x0 0x0
---
Entry stack: [V11, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V172]

================================

Block 0x223
[0x223:0x22b]
---
Predecessors: [0x217]
Successors: [0x69b]
---
0x223 JUMPDEST
0x224 POP
0x225 PUSH2 0x22c
0x228 PUSH2 0x69b
0x22b JUMP
---
0x223: JUMPDEST 
0x225: V176 = 0x22c
0x228: V177 = 0x69b
0x22b: JUMP 0x69b
---
Entry stack: [V11, V172]
Stack pops: 1
Stack additions: [0x22c]
Exit stack: [V11, 0x22c]

================================

Block 0x22c
[0x22c:0x23d]
---
Predecessors: [0x69b, 0x6a1, 0x6b3]
Successors: []
---
0x22c JUMPDEST
0x22d PUSH1 0x40
0x22f DUP1
0x230 MLOAD
0x231 SWAP2
0x232 DUP3
0x233 MSTORE
0x234 MLOAD
0x235 SWAP1
0x236 DUP2
0x237 SWAP1
0x238 SUB
0x239 PUSH1 0x20
0x23b ADD
0x23c SWAP1
0x23d RETURN
---
0x22c: JUMPDEST 
0x22d: V178 = 0x40
0x230: V179 = M[0x40]
0x233: M[V179] = S0
0x234: V180 = M[0x40]
0x238: V181 = SUB V179 V180
0x239: V182 = 0x20
0x23b: V183 = ADD 0x20 V181
0x23d: RETURN V180 V183
---
Entry stack: [V11, 0x22c, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x22c]

================================

Block 0x23e
[0x23e:0x245]
---
Predecessors: [0xa3]
Successors: [0x246, 0x24a]
---
0x23e JUMPDEST
0x23f CALLVALUE
0x240 DUP1
0x241 ISZERO
0x242 PUSH2 0x24a
0x245 JUMPI
---
0x23e: JUMPDEST 
0x23f: V184 = CALLVALUE
0x241: V185 = ISZERO V184
0x242: V186 = 0x24a
0x245: JUMPI 0x24a V185
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V184]
Exit stack: [V11, V184]

================================

Block 0x246
[0x246:0x249]
---
Predecessors: [0x23e]
Successors: []
---
0x246 PUSH1 0x0
0x248 DUP1
0x249 REVERT
---
0x246: V187 = 0x0
0x249: REVERT 0x0 0x0
---
Entry stack: [V11, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V184]

================================

Block 0x24a
[0x24a:0x25e]
---
Predecessors: [0x23e]
Successors: [0x6a1]
---
0x24a JUMPDEST
0x24b POP
0x24c PUSH2 0x22c
0x24f PUSH1 0x1
0x251 PUSH1 0xa0
0x253 PUSH1 0x2
0x255 EXP
0x256 SUB
0x257 PUSH1 0x4
0x259 CALLDATALOAD
0x25a AND
0x25b PUSH2 0x6a1
0x25e JUMP
---
0x24a: JUMPDEST 
0x24c: V188 = 0x22c
0x24f: V189 = 0x1
0x251: V190 = 0xa0
0x253: V191 = 0x2
0x255: V192 = EXP 0x2 0xa0
0x256: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x257: V194 = 0x4
0x259: V195 = CALLDATALOAD 0x4
0x25a: V196 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0x25b: V197 = 0x6a1
0x25e: JUMP 0x6a1
---
Entry stack: [V11, V184]
Stack pops: 1
Stack additions: [0x22c, V196]
Exit stack: [V11, 0x22c, V196]

================================

Block 0x25f
[0x25f:0x266]
---
Predecessors: [0xae]
Successors: [0x267, 0x26b]
---
0x25f JUMPDEST
0x260 CALLVALUE
0x261 DUP1
0x262 ISZERO
0x263 PUSH2 0x26b
0x266 JUMPI
---
0x25f: JUMPDEST 
0x260: V198 = CALLVALUE
0x262: V199 = ISZERO V198
0x263: V200 = 0x26b
0x266: JUMPI 0x26b V199
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V198]
Exit stack: [V11, V198]

================================

Block 0x267
[0x267:0x26a]
---
Predecessors: [0x25f]
Successors: []
---
0x267 PUSH1 0x0
0x269 DUP1
0x26a REVERT
---
0x267: V201 = 0x0
0x26a: REVERT 0x0 0x0
---
Entry stack: [V11, V198]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V198]

================================

Block 0x26b
[0x26b:0x273]
---
Predecessors: [0x25f]
Successors: [0x6b3]
---
0x26b JUMPDEST
0x26c POP
0x26d PUSH2 0x22c
0x270 PUSH2 0x6b3
0x273 JUMP
---
0x26b: JUMPDEST 
0x26d: V202 = 0x22c
0x270: V203 = 0x6b3
0x273: JUMP 0x6b3
---
Entry stack: [V11, V198]
Stack pops: 1
Stack additions: [0x22c]
Exit stack: [V11, 0x22c]

================================

Block 0x274
[0x274:0x27b]
---
Predecessors: [0xb9]
Successors: [0x27c, 0x280]
---
0x274 JUMPDEST
0x275 CALLVALUE
0x276 DUP1
0x277 ISZERO
0x278 PUSH2 0x280
0x27b JUMPI
---
0x274: JUMPDEST 
0x275: V204 = CALLVALUE
0x277: V205 = ISZERO V204
0x278: V206 = 0x280
0x27b: JUMPI 0x280 V205
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V204]
Exit stack: [V11, V204]

================================

Block 0x27c
[0x27c:0x27f]
---
Predecessors: [0x274]
Successors: []
---
0x27c PUSH1 0x0
0x27e DUP1
0x27f REVERT
---
0x27c: V207 = 0x0
0x27f: REVERT 0x0 0x0
---
Entry stack: [V11, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V204]

================================

Block 0x280
[0x280:0x288]
---
Predecessors: [0x274]
Successors: [0x6b9]
---
0x280 JUMPDEST
0x281 POP
0x282 PUSH2 0x116
0x285 PUSH2 0x6b9
0x288 JUMP
---
0x280: JUMPDEST 
0x282: V208 = 0x116
0x285: V209 = 0x6b9
0x288: JUMP 0x6b9
---
Entry stack: [V11, V204]
Stack pops: 1
Stack additions: [0x116]
Exit stack: [V11, 0x116]

================================

Block 0x289
[0x289:0x290]
---
Predecessors: [0xc4]
Successors: [0x291, 0x295]
---
0x289 JUMPDEST
0x28a CALLVALUE
0x28b DUP1
0x28c ISZERO
0x28d PUSH2 0x295
0x290 JUMPI
---
0x289: JUMPDEST 
0x28a: V210 = CALLVALUE
0x28c: V211 = ISZERO V210
0x28d: V212 = 0x295
0x290: JUMPI 0x295 V211
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V210]
Exit stack: [V11, V210]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x289]
Successors: []
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
---
0x291: V213 = 0x0
0x294: REVERT 0x0 0x0
---
Entry stack: [V11, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V210]

================================

Block 0x295
[0x295:0x29d]
---
Predecessors: [0x289]
Successors: [0x775]
---
0x295 JUMPDEST
0x296 POP
0x297 PUSH2 0x1fb
0x29a PUSH2 0x775
0x29d JUMP
---
0x295: JUMPDEST 
0x297: V214 = 0x1fb
0x29a: V215 = 0x775
0x29d: JUMP 0x775
---
Entry stack: [V11, V210]
Stack pops: 1
Stack additions: [0x1fb]
Exit stack: [V11, 0x1fb]

================================

Block 0x29e
[0x29e:0x2a5]
---
Predecessors: [0xcf]
Successors: [0x2a6, 0x2aa]
---
0x29e JUMPDEST
0x29f CALLVALUE
0x2a0 DUP1
0x2a1 ISZERO
0x2a2 PUSH2 0x2aa
0x2a5 JUMPI
---
0x29e: JUMPDEST 
0x29f: V216 = CALLVALUE
0x2a1: V217 = ISZERO V216
0x2a2: V218 = 0x2aa
0x2a5: JUMPI 0x2aa V217
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V216]
Exit stack: [V11, V216]

================================

Block 0x2a6
[0x2a6:0x2a9]
---
Predecessors: [0x29e]
Successors: []
---
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 REVERT
---
0x2a6: V219 = 0x0
0x2a9: REVERT 0x0 0x0
---
Entry stack: [V11, V216]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V216]

================================

Block 0x2aa
[0x2aa:0x2b2]
---
Predecessors: [0x29e]
Successors: [0x784]
---
0x2aa JUMPDEST
0x2ab POP
0x2ac PUSH2 0x1fb
0x2af PUSH2 0x784
0x2b2 JUMP
---
0x2aa: JUMPDEST 
0x2ac: V220 = 0x1fb
0x2af: V221 = 0x784
0x2b2: JUMP 0x784
---
Entry stack: [V11, V216]
Stack pops: 1
Stack additions: [0x1fb]
Exit stack: [V11, 0x1fb]

================================

Block 0x2b3
[0x2b3:0x2ba]
---
Predecessors: [0xda]
Successors: [0x2bb, 0x2bf]
---
0x2b3 JUMPDEST
0x2b4 CALLVALUE
0x2b5 DUP1
0x2b6 ISZERO
0x2b7 PUSH2 0x2bf
0x2ba JUMPI
---
0x2b3: JUMPDEST 
0x2b4: V222 = CALLVALUE
0x2b6: V223 = ISZERO V222
0x2b7: V224 = 0x2bf
0x2ba: JUMPI 0x2bf V223
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V222]
Exit stack: [V11, V222]

================================

Block 0x2bb
[0x2bb:0x2be]
---
Predecessors: [0x2b3]
Successors: []
---
0x2bb PUSH1 0x0
0x2bd DUP1
0x2be REVERT
---
0x2bb: V225 = 0x0
0x2be: REVERT 0x0 0x0
---
Entry stack: [V11, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V222]

================================

Block 0x2bf
[0x2bf:0x2c7]
---
Predecessors: [0x2b3]
Successors: [0x793]
---
0x2bf JUMPDEST
0x2c0 POP
0x2c1 PUSH2 0x1fb
0x2c4 PUSH2 0x793
0x2c7 JUMP
---
0x2bf: JUMPDEST 
0x2c1: V226 = 0x1fb
0x2c4: V227 = 0x793
0x2c7: JUMP 0x793
---
Entry stack: [V11, V222]
Stack pops: 1
Stack additions: [0x1fb]
Exit stack: [V11, 0x1fb]

================================

Block 0x2c8
[0x2c8:0x2cf]
---
Predecessors: [0xe5]
Successors: [0x2d0, 0x2d4]
---
0x2c8 JUMPDEST
0x2c9 CALLVALUE
0x2ca DUP1
0x2cb ISZERO
0x2cc PUSH2 0x2d4
0x2cf JUMPI
---
0x2c8: JUMPDEST 
0x2c9: V228 = CALLVALUE
0x2cb: V229 = ISZERO V228
0x2cc: V230 = 0x2d4
0x2cf: JUMPI 0x2d4 V229
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V228]
Exit stack: [V11, V228]

================================

Block 0x2d0
[0x2d0:0x2d3]
---
Predecessors: [0x2c8]
Successors: []
---
0x2d0 PUSH1 0x0
0x2d2 DUP1
0x2d3 REVERT
---
0x2d0: V231 = 0x0
0x2d3: REVERT 0x0 0x0
---
Entry stack: [V11, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V228]

================================

Block 0x2d4
[0x2d4:0x2e8]
---
Predecessors: [0x2c8]
Successors: [0x7a2]
---
0x2d4 JUMPDEST
0x2d5 POP
0x2d6 PUSH2 0x116
0x2d9 PUSH1 0x1
0x2db PUSH1 0xa0
0x2dd PUSH1 0x2
0x2df EXP
0x2e0 SUB
0x2e1 PUSH1 0x4
0x2e3 CALLDATALOAD
0x2e4 AND
0x2e5 PUSH2 0x7a2
0x2e8 JUMP
---
0x2d4: JUMPDEST 
0x2d6: V232 = 0x116
0x2d9: V233 = 0x1
0x2db: V234 = 0xa0
0x2dd: V235 = 0x2
0x2df: V236 = EXP 0x2 0xa0
0x2e0: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e1: V238 = 0x4
0x2e3: V239 = CALLDATALOAD 0x4
0x2e4: V240 = AND V239 0xffffffffffffffffffffffffffffffffffffffff
0x2e5: V241 = 0x7a2
0x2e8: JUMP 0x7a2
---
Entry stack: [V11, V228]
Stack pops: 1
Stack additions: [0x116, V240]
Exit stack: [V11, 0x116, V240]

================================

Block 0x2e9
[0x2e9:0x2fb]
---
Predecessors: [0x101]
Successors: [0x2fc, 0x300]
---
0x2e9 JUMPDEST
0x2ea PUSH1 0x0
0x2ec SLOAD
0x2ed PUSH1 0x1
0x2ef PUSH1 0xa0
0x2f1 PUSH1 0x2
0x2f3 EXP
0x2f4 SUB
0x2f5 AND
0x2f6 CALLER
0x2f7 EQ
0x2f8 PUSH2 0x300
0x2fb JUMPI
---
0x2e9: JUMPDEST 
0x2ea: V242 = 0x0
0x2ec: V243 = S[0x0]
0x2ed: V244 = 0x1
0x2ef: V245 = 0xa0
0x2f1: V246 = 0x2
0x2f3: V247 = EXP 0x2 0xa0
0x2f4: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f5: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x2f6: V250 = CALLER
0x2f7: V251 = EQ V250 V249
0x2f8: V252 = 0x300
0x2fb: JUMPI 0x300 V251
---
Entry stack: [V11, 0x116, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V76]

================================

Block 0x2fc
[0x2fc:0x2ff]
---
Predecessors: [0x2e9]
Successors: []
---
0x2fc PUSH1 0x0
0x2fe DUP1
0x2ff REVERT
---
0x2fc: V253 = 0x0
0x2ff: REVERT 0x0 0x0
---
Entry stack: [V11, 0x116, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V76]

================================

Block 0x300
[0x300:0x310]
---
Predecessors: [0x2e9]
Successors: [0x311, 0x315]
---
0x300 JUMPDEST
0x301 PUSH1 0x1
0x303 PUSH1 0xa0
0x305 PUSH1 0x2
0x307 EXP
0x308 SUB
0x309 DUP2
0x30a AND
0x30b ISZERO
0x30c ISZERO
0x30d PUSH2 0x315
0x310 JUMPI
---
0x300: JUMPDEST 
0x301: V254 = 0x1
0x303: V255 = 0xa0
0x305: V256 = 0x2
0x307: V257 = EXP 0x2 0xa0
0x308: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30a: V259 = AND V76 0xffffffffffffffffffffffffffffffffffffffff
0x30b: V260 = ISZERO V259
0x30c: V261 = ISZERO V260
0x30d: V262 = 0x315
0x310: JUMPI 0x315 V261
---
Entry stack: [V11, 0x116, V76]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x116, V76]

================================

Block 0x311
[0x311:0x314]
---
Predecessors: [0x300]
Successors: []
---
0x311 PUSH1 0x0
0x313 DUP1
0x314 REVERT
---
0x311: V263 = 0x0
0x314: REVERT 0x0 0x0
---
Entry stack: [V11, 0x116, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V76]

================================

Block 0x315
[0x315:0x343]
---
Predecessors: [0x300]
Successors: [0x116]
---
0x315 JUMPDEST
0x316 PUSH1 0x2
0x318 DUP1
0x319 SLOAD
0x31a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32f NOT
0x330 AND
0x331 PUSH1 0x1
0x333 PUSH1 0xa0
0x335 PUSH1 0x2
0x337 EXP
0x338 SUB
0x339 SWAP3
0x33a SWAP1
0x33b SWAP3
0x33c AND
0x33d SWAP2
0x33e SWAP1
0x33f SWAP2
0x340 OR
0x341 SWAP1
0x342 SSTORE
0x343 JUMP
---
0x315: JUMPDEST 
0x316: V264 = 0x2
0x319: V265 = S[0x2]
0x31a: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x32f: V267 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x330: V268 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V265
0x331: V269 = 0x1
0x333: V270 = 0xa0
0x335: V271 = 0x2
0x337: V272 = EXP 0x2 0xa0
0x338: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33c: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x340: V275 = OR V274 V268
0x342: S[0x2] = V275
0x343: JUMP 0x116
---
Entry stack: [V11, 0x116, V76]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x344
[0x344:0x359]
---
Predecessors: [0x124]
Successors: [0x35a, 0x35e]
---
0x344 JUMPDEST
0x345 PUSH1 0x3
0x347 SLOAD
0x348 PUSH1 0x0
0x34a SWAP1
0x34b PUSH1 0x1
0x34d PUSH1 0xa0
0x34f PUSH1 0x2
0x351 EXP
0x352 SUB
0x353 AND
0x354 CALLER
0x355 EQ
0x356 PUSH2 0x35e
0x359 JUMPI
---
0x344: JUMPDEST 
0x345: V276 = 0x3
0x347: V277 = S[0x3]
0x348: V278 = 0x0
0x34b: V279 = 0x1
0x34d: V280 = 0xa0
0x34f: V281 = 0x2
0x351: V282 = EXP 0x2 0xa0
0x352: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x353: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x354: V285 = CALLER
0x355: V286 = EQ V285 V284
0x356: V287 = 0x35e
0x359: JUMPI 0x35e V286
---
Entry stack: [V11, 0x116, V90]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x116, V90, 0x0]

================================

Block 0x35a
[0x35a:0x35d]
---
Predecessors: [0x344]
Successors: []
---
0x35a PUSH1 0x0
0x35c DUP1
0x35d REVERT
---
0x35a: V288 = 0x0
0x35d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x116, V90, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V90, 0x0]

================================

Block 0x35e
[0x35e:0x382]
---
Predecessors: [0x344]
Successors: [0x383, 0x387]
---
0x35e JUMPDEST
0x35f PUSH1 0x4
0x361 SLOAD
0x362 PUSH21 0x10000000000000000000000000000000000000000
0x378 SWAP1
0x379 DIV
0x37a PUSH1 0xff
0x37c AND
0x37d ISZERO
0x37e ISZERO
0x37f PUSH2 0x387
0x382 JUMPI
---
0x35e: JUMPDEST 
0x35f: V289 = 0x4
0x361: V290 = S[0x4]
0x362: V291 = 0x10000000000000000000000000000000000000000
0x379: V292 = DIV V290 0x10000000000000000000000000000000000000000
0x37a: V293 = 0xff
0x37c: V294 = AND 0xff V292
0x37d: V295 = ISZERO V294
0x37e: V296 = ISZERO V295
0x37f: V297 = 0x387
0x382: JUMPI 0x387 V296
---
Entry stack: [V11, 0x116, V90, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V90, 0x0]

================================

Block 0x383
[0x383:0x386]
---
Predecessors: [0x35e]
Successors: []
---
0x383 PUSH1 0x0
0x385 DUP1
0x386 REVERT
---
0x383: V298 = 0x0
0x386: REVERT 0x0 0x0
---
Entry stack: [V11, 0x116, V90, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V90, 0x0]

================================

Block 0x387
[0x387:0x391]
---
Predecessors: [0x35e]
Successors: [0x392, 0x396]
---
0x387 JUMPDEST
0x388 PUSH1 0x6
0x38a SLOAD
0x38b TIMESTAMP
0x38c LT
0x38d ISZERO
0x38e PUSH2 0x396
0x391 JUMPI
---
0x387: JUMPDEST 
0x388: V299 = 0x6
0x38a: V300 = S[0x6]
0x38b: V301 = TIMESTAMP
0x38c: V302 = LT V301 V300
0x38d: V303 = ISZERO V302
0x38e: V304 = 0x396
0x391: JUMPI 0x396 V303
---
Entry stack: [V11, 0x116, V90, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V90, 0x0]

================================

Block 0x392
[0x392:0x395]
---
Predecessors: [0x387]
Successors: []
---
0x392 PUSH1 0x0
0x394 DUP1
0x395 REVERT
---
0x392: V305 = 0x0
0x395: REVERT 0x0 0x0
---
Entry stack: [V11, 0x116, V90, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V90, 0x0]

================================

Block 0x396
[0x396:0x3cb]
---
Predecessors: [0x387]
Successors: [0x7c5]
---
0x396 JUMPDEST
0x397 POP
0x398 PUSH1 0x1
0x39a PUSH1 0xa0
0x39c PUSH1 0x2
0x39e EXP
0x39f SUB
0x3a0 DUP1
0x3a1 DUP3
0x3a2 AND
0x3a3 PUSH1 0x0
0x3a5 SWAP1
0x3a6 DUP2
0x3a7 MSTORE
0x3a8 PUSH1 0x1
0x3aa PUSH1 0x20
0x3ac MSTORE
0x3ad PUSH1 0x40
0x3af DUP2
0x3b0 SHA3
0x3b1 DUP1
0x3b2 SLOAD
0x3b3 SWAP2
0x3b4 SWAP1
0x3b5 SSTORE
0x3b6 PUSH1 0x4
0x3b8 SLOAD
0x3b9 SWAP1
0x3ba SWAP2
0x3bb PUSH2 0x3cc
0x3be SWAP2
0x3bf AND
0x3c0 DUP4
0x3c1 DUP4
0x3c2 PUSH4 0xffffffff
0x3c7 PUSH2 0x7c5
0x3ca AND
0x3cb JUMP
---
0x396: JUMPDEST 
0x398: V306 = 0x1
0x39a: V307 = 0xa0
0x39c: V308 = 0x2
0x39e: V309 = EXP 0x2 0xa0
0x39f: V310 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a2: V311 = AND V90 0xffffffffffffffffffffffffffffffffffffffff
0x3a3: V312 = 0x0
0x3a7: M[0x0] = V311
0x3a8: V313 = 0x1
0x3aa: V314 = 0x20
0x3ac: M[0x20] = 0x1
0x3ad: V315 = 0x40
0x3b0: V316 = SHA3 0x0 0x40
0x3b2: V317 = S[V316]
0x3b5: S[V316] = 0x0
0x3b6: V318 = 0x4
0x3b8: V319 = S[0x4]
0x3bb: V320 = 0x3cc
0x3bf: V321 = AND V319 0xffffffffffffffffffffffffffffffffffffffff
0x3c2: V322 = 0xffffffff
0x3c7: V323 = 0x7c5
0x3ca: V324 = AND 0x7c5 0xffffffff
0x3cb: JUMP 0x7c5
---
Entry stack: [V11, 0x116, V90, 0x0]
Stack pops: 2
Stack additions: [S1, V317, 0x3cc, V321, S1, V317]
Exit stack: [V11, 0x116, V90, V317, 0x3cc, V321, V90, V317]

================================

Block 0x3cc
[0x3cc:0x40e]
---
Predecessors: [0x878]
Successors: [0x116]
---
0x3cc JUMPDEST
0x3cd PUSH1 0x40
0x3cf DUP1
0x3d0 MLOAD
0x3d1 DUP3
0x3d2 DUP2
0x3d3 MSTORE
0x3d4 SWAP1
0x3d5 MLOAD
0x3d6 PUSH1 0x1
0x3d8 PUSH1 0xa0
0x3da PUSH1 0x2
0x3dc EXP
0x3dd SUB
0x3de DUP5
0x3df AND
0x3e0 SWAP2
0x3e1 PUSH32 0x9cf9e3ab58b33f06d81842ea0ad850b6640c6430d6396973312e1715792e7a91
0x402 SWAP2
0x403 SWAP1
0x404 DUP2
0x405 SWAP1
0x406 SUB
0x407 PUSH1 0x20
0x409 ADD
0x40a SWAP1
0x40b LOG2
0x40c POP
0x40d POP
0x40e JUMP
---
0x3cc: JUMPDEST 
0x3cd: V325 = 0x40
0x3d0: V326 = M[0x40]
0x3d3: M[V326] = S0
0x3d5: V327 = M[0x40]
0x3d6: V328 = 0x1
0x3d8: V329 = 0xa0
0x3da: V330 = 0x2
0x3dc: V331 = EXP 0x2 0xa0
0x3dd: V332 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3df: V333 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x3e1: V334 = 0x9cf9e3ab58b33f06d81842ea0ad850b6640c6430d6396973312e1715792e7a91
0x406: V335 = SUB V326 V327
0x407: V336 = 0x20
0x409: V337 = ADD 0x20 V335
0x40b: LOG V327 V337 0x9cf9e3ab58b33f06d81842ea0ad850b6640c6430d6396973312e1715792e7a91 V333
0x40e: JUMP S2
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x40f
[0x40f:0x42f]
---
Predecessors: [0x145]
Successors: [0x14e]
---
0x40f JUMPDEST
0x410 PUSH1 0x4
0x412 SLOAD
0x413 PUSH21 0x10000000000000000000000000000000000000000
0x429 SWAP1
0x42a DIV
0x42b PUSH1 0xff
0x42d AND
0x42e DUP2
0x42f JUMP
---
0x40f: JUMPDEST 
0x410: V338 = 0x4
0x412: V339 = S[0x4]
0x413: V340 = 0x10000000000000000000000000000000000000000
0x42a: V341 = DIV V339 0x10000000000000000000000000000000000000000
0x42b: V342 = 0xff
0x42d: V343 = AND 0xff V341
0x42f: JUMP 0x14e
---
Entry stack: [V11, 0x14e]
Stack pops: 1
Stack additions: [S0, V343]
Exit stack: [V11, 0x14e, V343]

================================

Block 0x430
[0x430:0x442]
---
Predecessors: [0x16e]
Successors: [0x443, 0x447]
---
0x430 JUMPDEST
0x431 PUSH1 0x2
0x433 SLOAD
0x434 PUSH1 0x1
0x436 PUSH1 0xa0
0x438 PUSH1 0x2
0x43a EXP
0x43b SUB
0x43c AND
0x43d CALLER
0x43e EQ
0x43f PUSH2 0x447
0x442 JUMPI
---
0x430: JUMPDEST 
0x431: V344 = 0x2
0x433: V345 = S[0x2]
0x434: V346 = 0x1
0x436: V347 = 0xa0
0x438: V348 = 0x2
0x43a: V349 = EXP 0x2 0xa0
0x43b: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43c: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x43d: V352 = CALLER
0x43e: V353 = EQ V352 V351
0x43f: V354 = 0x447
0x442: JUMPI 0x447 V353
---
Entry stack: [V11, 0x116, V118, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V118, V120]

================================

Block 0x443
[0x443:0x446]
---
Predecessors: [0x430]
Successors: []
---
0x443 PUSH1 0x0
0x445 DUP1
0x446 REVERT
---
0x443: V355 = 0x0
0x446: REVERT 0x0 0x0
---
Entry stack: [V11, 0x116, V118, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V118, V120]

================================

Block 0x447
[0x447:0x457]
---
Predecessors: [0x430]
Successors: [0x458, 0x45c]
---
0x447 JUMPDEST
0x448 PUSH1 0x1
0x44a PUSH1 0xa0
0x44c PUSH1 0x2
0x44e EXP
0x44f SUB
0x450 DUP3
0x451 AND
0x452 ISZERO
0x453 ISZERO
0x454 PUSH2 0x45c
0x457 JUMPI
---
0x447: JUMPDEST 
0x448: V356 = 0x1
0x44a: V357 = 0xa0
0x44c: V358 = 0x2
0x44e: V359 = EXP 0x2 0xa0
0x44f: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x451: V361 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x452: V362 = ISZERO V361
0x453: V363 = ISZERO V362
0x454: V364 = 0x45c
0x457: JUMPI 0x45c V363
---
Entry stack: [V11, 0x116, V118, V120]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x116, V118, V120]

================================

Block 0x458
[0x458:0x45b]
---
Predecessors: [0x447]
Successors: []
---
0x458 PUSH1 0x0
0x45a DUP1
0x45b REVERT
---
0x458: V365 = 0x0
0x45b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x116, V118, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V118, V120]

================================

Block 0x45c
[0x45c:0x4b4]
---
Predecessors: [0x447]
Successors: [0x116]
---
0x45c JUMPDEST
0x45d PUSH1 0x1
0x45f PUSH1 0xa0
0x461 PUSH1 0x2
0x463 EXP
0x464 SUB
0x465 DUP3
0x466 AND
0x467 PUSH1 0x0
0x469 DUP2
0x46a DUP2
0x46b MSTORE
0x46c PUSH1 0x1
0x46e PUSH1 0x20
0x470 SWAP1
0x471 DUP2
0x472 MSTORE
0x473 PUSH1 0x40
0x475 SWAP2
0x476 DUP3
0x477 SWAP1
0x478 SHA3
0x479 DUP1
0x47a SLOAD
0x47b DUP6
0x47c ADD
0x47d SWAP1
0x47e DUP2
0x47f SWAP1
0x480 SSTORE
0x481 DUP3
0x482 MLOAD
0x483 SWAP1
0x484 DUP2
0x485 MSTORE
0x486 SWAP2
0x487 MLOAD
0x488 PUSH32 0xf9626bca62c59d77fa45a204dc096874ee066a5c5e124aa9ce6c438dbdf7387a
0x4a9 SWAP3
0x4aa DUP2
0x4ab SWAP1
0x4ac SUB
0x4ad SWAP1
0x4ae SWAP2
0x4af ADD
0x4b0 SWAP1
0x4b1 LOG2
0x4b2 POP
0x4b3 POP
0x4b4 JUMP
---
0x45c: JUMPDEST 
0x45d: V366 = 0x1
0x45f: V367 = 0xa0
0x461: V368 = 0x2
0x463: V369 = EXP 0x2 0xa0
0x464: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x466: V371 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x467: V372 = 0x0
0x46b: M[0x0] = V371
0x46c: V373 = 0x1
0x46e: V374 = 0x20
0x472: M[0x20] = 0x1
0x473: V375 = 0x40
0x478: V376 = SHA3 0x0 0x40
0x47a: V377 = S[V376]
0x47c: V378 = ADD V120 V377
0x480: S[V376] = V378
0x482: V379 = M[0x40]
0x485: M[V379] = V378
0x487: V380 = M[0x40]
0x488: V381 = 0xf9626bca62c59d77fa45a204dc096874ee066a5c5e124aa9ce6c438dbdf7387a
0x4ac: V382 = SUB V379 V380
0x4af: V383 = ADD 0x20 V382
0x4b1: LOG V380 V383 0xf9626bca62c59d77fa45a204dc096874ee066a5c5e124aa9ce6c438dbdf7387a V371
0x4b4: JUMP 0x116
---
Entry stack: [V11, 0x116, V118, V120]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x4b5
[0x4b5:0x4c7]
---
Predecessors: [0x192, 0x5af]
Successors: [0x4c8, 0x4cc]
---
0x4b5 JUMPDEST
0x4b6 PUSH1 0x0
0x4b8 SLOAD
0x4b9 PUSH1 0x1
0x4bb PUSH1 0xa0
0x4bd PUSH1 0x2
0x4bf EXP
0x4c0 SUB
0x4c1 AND
0x4c2 CALLER
0x4c3 EQ
0x4c4 PUSH2 0x4cc
0x4c7 JUMPI
---
0x4b5: JUMPDEST 
0x4b6: V384 = 0x0
0x4b8: V385 = S[0x0]
0x4b9: V386 = 0x1
0x4bb: V387 = 0xa0
0x4bd: V388 = 0x2
0x4bf: V389 = EXP 0x2 0xa0
0x4c0: V390 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c1: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x4c2: V392 = CALLER
0x4c3: V393 = EQ V392 V391
0x4c4: V394 = 0x4cc
0x4c7: JUMPI 0x4cc V393
---
Entry stack: [V11, S1, {0x116, 0x5b7}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, {0x116, 0x5b7}]

================================

Block 0x4c8
[0x4c8:0x4cb]
---
Predecessors: [0x4b5]
Successors: []
---
0x4c8 PUSH1 0x0
0x4ca DUP1
0x4cb REVERT
---
0x4c8: V395 = 0x0
0x4cb: REVERT 0x0 0x0
---
Entry stack: [V11, S1, {0x116, 0x5b7}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, {0x116, 0x5b7}]

================================

Block 0x4cc
[0x4cc:0x4d6]
---
Predecessors: [0x4b5]
Successors: [0x4d7, 0x4db]
---
0x4cc JUMPDEST
0x4cd PUSH1 0x6
0x4cf SLOAD
0x4d0 TIMESTAMP
0x4d1 LT
0x4d2 ISZERO
0x4d3 PUSH2 0x4db
0x4d6 JUMPI
---
0x4cc: JUMPDEST 
0x4cd: V396 = 0x6
0x4cf: V397 = S[0x6]
0x4d0: V398 = TIMESTAMP
0x4d1: V399 = LT V398 V397
0x4d2: V400 = ISZERO V399
0x4d3: V401 = 0x4db
0x4d6: JUMPI 0x4db V400
---
Entry stack: [V11, S1, {0x116, 0x5b7}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, {0x116, 0x5b7}]

================================

Block 0x4d7
[0x4d7:0x4da]
---
Predecessors: [0x4cc]
Successors: []
---
0x4d7 PUSH1 0x0
0x4d9 DUP1
0x4da REVERT
---
0x4d7: V402 = 0x0
0x4da: REVERT 0x0 0x0
---
Entry stack: [V11, S1, {0x116, 0x5b7}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, {0x116, 0x5b7}]

================================

Block 0x4db
[0x4db:0x54c]
---
Predecessors: [0x4cc]
Successors: [0x54d, 0x551]
---
0x4db JUMPDEST
0x4dc PUSH1 0x0
0x4de DUP1
0x4df SLOAD
0x4e0 PUSH1 0x4
0x4e2 DUP1
0x4e3 SLOAD
0x4e4 PUSH1 0x40
0x4e6 DUP1
0x4e7 MLOAD
0x4e8 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x509 DUP2
0x50a MSTORE
0x50b ADDRESS
0x50c SWAP4
0x50d DUP2
0x50e ADD
0x50f SWAP4
0x510 SWAP1
0x511 SWAP4
0x512 MSTORE
0x513 MLOAD
0x514 PUSH2 0x596
0x517 SWAP5
0x518 PUSH1 0x1
0x51a PUSH1 0xa0
0x51c PUSH1 0x2
0x51e EXP
0x51f SUB
0x520 SWAP5
0x521 DUP6
0x522 AND
0x523 SWAP5
0x524 SWAP1
0x525 SWAP3
0x526 AND
0x527 SWAP3
0x528 PUSH4 0x70a08231
0x52d SWAP3
0x52e PUSH1 0x24
0x530 DUP1
0x531 DUP4
0x532 ADD
0x533 SWAP4
0x534 PUSH1 0x20
0x536 SWAP4
0x537 SWAP1
0x538 SWAP3
0x539 SWAP1
0x53a DUP4
0x53b SWAP1
0x53c SUB
0x53d SWAP1
0x53e SWAP2
0x53f ADD
0x540 SWAP1
0x541 DUP3
0x542 SWAP1
0x543 DUP8
0x544 DUP1
0x545 EXTCODESIZE
0x546 ISZERO
0x547 DUP1
0x548 ISZERO
0x549 PUSH2 0x551
0x54c JUMPI
---
0x4db: JUMPDEST 
0x4dc: V403 = 0x0
0x4df: V404 = S[0x0]
0x4e0: V405 = 0x4
0x4e3: V406 = S[0x4]
0x4e4: V407 = 0x40
0x4e7: V408 = M[0x40]
0x4e8: V409 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x50a: M[V408] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x50b: V410 = ADDRESS
0x50e: V411 = ADD V408 0x4
0x512: M[V411] = V410
0x513: V412 = M[0x40]
0x514: V413 = 0x596
0x518: V414 = 0x1
0x51a: V415 = 0xa0
0x51c: V416 = 0x2
0x51e: V417 = EXP 0x2 0xa0
0x51f: V418 = SUB 0x10000000000000000000000000000000000000000 0x1
0x522: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x526: V420 = AND V406 0xffffffffffffffffffffffffffffffffffffffff
0x528: V421 = 0x70a08231
0x52e: V422 = 0x24
0x532: V423 = ADD V408 0x24
0x534: V424 = 0x20
0x53c: V425 = SUB V408 V412
0x53f: V426 = ADD 0x24 V425
0x545: V427 = EXTCODESIZE V420
0x546: V428 = ISZERO V427
0x548: V429 = ISZERO V428
0x549: V430 = 0x551
0x54c: JUMPI 0x551 V429
---
Entry stack: [V11, S1, {0x116, 0x5b7}]
Stack pops: 0
Stack additions: [0x596, V419, V420, 0x70a08231, V423, 0x20, V412, V426, V412, 0x0, V420, V428]
Exit stack: [V11, S1, {0x116, 0x5b7}, 0x596, V419, V420, 0x70a08231, V423, 0x20, V412, V426, V412, 0x0, V420, V428]

================================

Block 0x54d
[0x54d:0x550]
---
Predecessors: [0x4db]
Successors: []
---
0x54d PUSH1 0x0
0x54f DUP1
0x550 REVERT
---
0x54d: V431 = 0x0
0x550: REVERT 0x0 0x0
---
Entry stack: [V11, S13, {0x116, 0x5b7}, 0x596, V419, V420, 0x70a08231, V423, 0x20, V412, V426, V412, 0x0, V420, V428]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, {0x116, 0x5b7}, 0x596, V419, V420, 0x70a08231, V423, 0x20, V412, V426, V412, 0x0, V420, V428]

================================

Block 0x551
[0x551:0x55b]
---
Predecessors: [0x4db]
Successors: [0x55c, 0x565]
---
0x551 JUMPDEST
0x552 POP
0x553 GAS
0x554 CALL
0x555 ISZERO
0x556 DUP1
0x557 ISZERO
0x558 PUSH2 0x565
0x55b JUMPI
---
0x551: JUMPDEST 
0x553: V432 = GAS
0x554: V433 = CALL V432 V420 0x0 V412 V426 V412 0x20
0x555: V434 = ISZERO V433
0x557: V435 = ISZERO V434
0x558: V436 = 0x565
0x55b: JUMPI 0x565 V435
---
Entry stack: [V11, S13, {0x116, 0x5b7}, 0x596, V419, V420, 0x70a08231, V423, 0x20, V412, V426, V412, 0x0, V420, V428]
Stack pops: 7
Stack additions: [V434]
Exit stack: [V11, S13, {0x116, 0x5b7}, 0x596, V419, V420, 0x70a08231, V423, V434]

================================

Block 0x55c
[0x55c:0x564]
---
Predecessors: [0x551]
Successors: []
---
0x55c RETURNDATASIZE
0x55d PUSH1 0x0
0x55f DUP1
0x560 RETURNDATACOPY
0x561 RETURNDATASIZE
0x562 PUSH1 0x0
0x564 REVERT
---
0x55c: V437 = RETURNDATASIZE
0x55d: V438 = 0x0
0x560: RETURNDATACOPY 0x0 0x0 V437
0x561: V439 = RETURNDATASIZE
0x562: V440 = 0x0
0x564: REVERT 0x0 V439
---
Entry stack: [V11, S7, {0x116, 0x5b7}, 0x596, S4, S3, 0x70a08231, S1, V434]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, {0x116, 0x5b7}, 0x596, S4, S3, 0x70a08231, S1, V434]

================================

Block 0x565
[0x565:0x576]
---
Predecessors: [0x551]
Successors: [0x577, 0x57b]
---
0x565 JUMPDEST
0x566 POP
0x567 POP
0x568 POP
0x569 POP
0x56a PUSH1 0x40
0x56c MLOAD
0x56d RETURNDATASIZE
0x56e PUSH1 0x20
0x570 DUP2
0x571 LT
0x572 ISZERO
0x573 PUSH2 0x57b
0x576 JUMPI
---
0x565: JUMPDEST 
0x56a: V441 = 0x40
0x56c: V442 = M[0x40]
0x56d: V443 = RETURNDATASIZE
0x56e: V444 = 0x20
0x571: V445 = LT V443 0x20
0x572: V446 = ISZERO V445
0x573: V447 = 0x57b
0x576: JUMPI 0x57b V446
---
Entry stack: [V11, S7, {0x116, 0x5b7}, 0x596, S4, S3, 0x70a08231, S1, V434]
Stack pops: 4
Stack additions: [V442, V443]
Exit stack: [V11, S7, {0x116, 0x5b7}, 0x596, S4, V442, V443]

================================

Block 0x577
[0x577:0x57a]
---
Predecessors: [0x565]
Successors: []
---
0x577 PUSH1 0x0
0x579 DUP1
0x57a REVERT
---
0x577: V448 = 0x0
0x57a: REVERT 0x0 0x0
---
Entry stack: [V11, S5, {0x116, 0x5b7}, 0x596, S2, V442, V443]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S5, {0x116, 0x5b7}, 0x596, S2, V442, V443]

================================

Block 0x57b
[0x57b:0x595]
---
Predecessors: [0x565]
Successors: [0x7c5]
---
0x57b JUMPDEST
0x57c POP
0x57d MLOAD
0x57e PUSH1 0x4
0x580 SLOAD
0x581 PUSH1 0x1
0x583 PUSH1 0xa0
0x585 PUSH1 0x2
0x587 EXP
0x588 SUB
0x589 AND
0x58a SWAP2
0x58b SWAP1
0x58c PUSH4 0xffffffff
0x591 PUSH2 0x7c5
0x594 AND
0x595 JUMP
---
0x57b: JUMPDEST 
0x57d: V449 = M[V442]
0x57e: V450 = 0x4
0x580: V451 = S[0x4]
0x581: V452 = 0x1
0x583: V453 = 0xa0
0x585: V454 = 0x2
0x587: V455 = EXP 0x2 0xa0
0x588: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x589: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x58c: V458 = 0xffffffff
0x591: V459 = 0x7c5
0x594: V460 = AND 0x7c5 0xffffffff
0x595: JUMP 0x7c5
---
Entry stack: [V11, S5, {0x116, 0x5b7}, 0x596, S2, V442, V443]
Stack pops: 3
Stack additions: [V457, S2, V449]
Exit stack: [V11, S5, {0x116, 0x5b7}, 0x596, V457, S2, V449]

================================

Block 0x596
[0x596:0x597]
---
Predecessors: [0x878]
Successors: [0x116, 0x5b7]
---
0x596 JUMPDEST
0x597 JUMP
---
0x596: JUMPDEST 
0x597: JUMP S0
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S2, S1]

================================

Block 0x598
[0x598:0x5aa]
---
Predecessors: [0x1a7]
Successors: [0x5ab, 0x5af]
---
0x598 JUMPDEST
0x599 PUSH1 0x0
0x59b SLOAD
0x59c PUSH1 0x1
0x59e PUSH1 0xa0
0x5a0 PUSH1 0x2
0x5a2 EXP
0x5a3 SUB
0x5a4 AND
0x5a5 CALLER
0x5a6 EQ
0x5a7 PUSH2 0x5af
0x5aa JUMPI
---
0x598: JUMPDEST 
0x599: V461 = 0x0
0x59b: V462 = S[0x0]
0x59c: V463 = 0x1
0x59e: V464 = 0xa0
0x5a0: V465 = 0x2
0x5a2: V466 = EXP 0x2 0xa0
0x5a3: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a4: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x5a5: V469 = CALLER
0x5a6: V470 = EQ V469 V468
0x5a7: V471 = 0x5af
0x5aa: JUMPI 0x5af V470
---
Entry stack: [V11, 0x116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116]

================================

Block 0x5ab
[0x5ab:0x5ae]
---
Predecessors: [0x598]
Successors: []
---
0x5ab PUSH1 0x0
0x5ad DUP1
0x5ae REVERT
---
0x5ab: V472 = 0x0
0x5ae: REVERT 0x0 0x0
---
Entry stack: [V11, 0x116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116]

================================

Block 0x5af
[0x5af:0x5b6]
---
Predecessors: [0x598]
Successors: [0x4b5]
---
0x5af JUMPDEST
0x5b0 PUSH2 0x5b7
0x5b3 PUSH2 0x4b5
0x5b6 JUMP
---
0x5af: JUMPDEST 
0x5b0: V473 = 0x5b7
0x5b3: V474 = 0x4b5
0x5b6: JUMP 0x4b5
---
Entry stack: [V11, 0x116]
Stack pops: 0
Stack additions: [0x5b7]
Exit stack: [V11, 0x116, 0x5b7]

================================

Block 0x5b7
[0x5b7:0x5c4]
---
Predecessors: [0x596]
Successors: []
---
0x5b7 JUMPDEST
0x5b8 PUSH1 0x0
0x5ba SLOAD
0x5bb PUSH1 0x1
0x5bd PUSH1 0xa0
0x5bf PUSH1 0x2
0x5c1 EXP
0x5c2 SUB
0x5c3 AND
0x5c4 SELFDESTRUCT
---
0x5b7: JUMPDEST 
0x5b8: V475 = 0x0
0x5ba: V476 = S[0x0]
0x5bb: V477 = 0x1
0x5bd: V478 = 0xa0
0x5bf: V479 = 0x2
0x5c1: V480 = EXP 0x2 0xa0
0x5c2: V481 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c3: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x5c4: SELFDESTRUCT V482
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0x5c5
[0x5c5:0x5d7]
---
Predecessors: [0x1bc]
Successors: [0x5d8, 0x5dc]
---
0x5c5 JUMPDEST
0x5c6 PUSH1 0x0
0x5c8 SLOAD
0x5c9 PUSH1 0x1
0x5cb PUSH1 0xa0
0x5cd PUSH1 0x2
0x5cf EXP
0x5d0 SUB
0x5d1 AND
0x5d2 CALLER
0x5d3 EQ
0x5d4 PUSH2 0x5dc
0x5d7 JUMPI
---
0x5c5: JUMPDEST 
0x5c6: V483 = 0x0
0x5c8: V484 = S[0x0]
0x5c9: V485 = 0x1
0x5cb: V486 = 0xa0
0x5cd: V487 = 0x2
0x5cf: V488 = EXP 0x2 0xa0
0x5d0: V489 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d1: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0x5d2: V491 = CALLER
0x5d3: V492 = EQ V491 V490
0x5d4: V493 = 0x5dc
0x5d7: JUMPI 0x5dc V492
---
Entry stack: [V11, 0x116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116]

================================

Block 0x5d8
[0x5d8:0x5db]
---
Predecessors: [0x5c5]
Successors: []
---
0x5d8 PUSH1 0x0
0x5da DUP1
0x5db REVERT
---
0x5d8: V494 = 0x0
0x5db: REVERT 0x0 0x0
---
Entry stack: [V11, 0x116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116]

================================

Block 0x5dc
[0x5dc:0x630]
---
Predecessors: [0x5c5]
Successors: [0x116]
---
0x5dc JUMPDEST
0x5dd PUSH1 0x0
0x5df DUP1
0x5e0 SLOAD
0x5e1 PUSH1 0x40
0x5e3 MLOAD
0x5e4 PUSH1 0x1
0x5e6 PUSH1 0xa0
0x5e8 PUSH1 0x2
0x5ea EXP
0x5eb SUB
0x5ec SWAP1
0x5ed SWAP2
0x5ee AND
0x5ef SWAP2
0x5f0 PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x611 SWAP2
0x612 LOG2
0x613 PUSH1 0x0
0x615 DUP1
0x616 SLOAD
0x617 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62c NOT
0x62d AND
0x62e SWAP1
0x62f SSTORE
0x630 JUMP
---
0x5dc: JUMPDEST 
0x5dd: V495 = 0x0
0x5e0: V496 = S[0x0]
0x5e1: V497 = 0x40
0x5e3: V498 = M[0x40]
0x5e4: V499 = 0x1
0x5e6: V500 = 0xa0
0x5e8: V501 = 0x2
0x5ea: V502 = EXP 0x2 0xa0
0x5eb: V503 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ee: V504 = AND V496 0xffffffffffffffffffffffffffffffffffffffff
0x5f0: V505 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x612: LOG V498 0x0 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V504
0x613: V506 = 0x0
0x616: V507 = S[0x0]
0x617: V508 = 0xffffffffffffffffffffffffffffffffffffffff
0x62c: V509 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x62d: V510 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V507
0x62f: S[0x0] = V510
0x630: JUMP 0x116
---
Entry stack: [V11, 0x116]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x631
[0x631:0x643]
---
Predecessors: [0x1d1]
Successors: [0x644, 0x648]
---
0x631 JUMPDEST
0x632 PUSH1 0x0
0x634 SLOAD
0x635 PUSH1 0x1
0x637 PUSH1 0xa0
0x639 PUSH1 0x2
0x63b EXP
0x63c SUB
0x63d AND
0x63e CALLER
0x63f EQ
0x640 PUSH2 0x648
0x643 JUMPI
---
0x631: JUMPDEST 
0x632: V511 = 0x0
0x634: V512 = S[0x0]
0x635: V513 = 0x1
0x637: V514 = 0xa0
0x639: V515 = 0x2
0x63b: V516 = EXP 0x2 0xa0
0x63c: V517 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63d: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff V512
0x63e: V519 = CALLER
0x63f: V520 = EQ V519 V518
0x640: V521 = 0x648
0x643: JUMPI 0x648 V520
---
Entry stack: [V11, 0x116, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V152]

================================

Block 0x644
[0x644:0x647]
---
Predecessors: [0x631]
Successors: []
---
0x644 PUSH1 0x0
0x646 DUP1
0x647 REVERT
---
0x644: V522 = 0x0
0x647: REVERT 0x0 0x0
---
Entry stack: [V11, 0x116, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V152]

================================

Block 0x648
[0x648:0x658]
---
Predecessors: [0x631]
Successors: [0x659, 0x65d]
---
0x648 JUMPDEST
0x649 PUSH1 0x1
0x64b PUSH1 0xa0
0x64d PUSH1 0x2
0x64f EXP
0x650 SUB
0x651 DUP2
0x652 AND
0x653 ISZERO
0x654 ISZERO
0x655 PUSH2 0x65d
0x658 JUMPI
---
0x648: JUMPDEST 
0x649: V523 = 0x1
0x64b: V524 = 0xa0
0x64d: V525 = 0x2
0x64f: V526 = EXP 0x2 0xa0
0x650: V527 = SUB 0x10000000000000000000000000000000000000000 0x1
0x652: V528 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x653: V529 = ISZERO V528
0x654: V530 = ISZERO V529
0x655: V531 = 0x65d
0x658: JUMPI 0x65d V530
---
Entry stack: [V11, 0x116, V152]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x116, V152]

================================

Block 0x659
[0x659:0x65c]
---
Predecessors: [0x648]
Successors: []
---
0x659 PUSH1 0x0
0x65b DUP1
0x65c REVERT
---
0x659: V532 = 0x0
0x65c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x116, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V152]

================================

Block 0x65d
[0x65d:0x68b]
---
Predecessors: [0x648]
Successors: [0x116]
---
0x65d JUMPDEST
0x65e PUSH1 0x3
0x660 DUP1
0x661 SLOAD
0x662 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x677 NOT
0x678 AND
0x679 PUSH1 0x1
0x67b PUSH1 0xa0
0x67d PUSH1 0x2
0x67f EXP
0x680 SUB
0x681 SWAP3
0x682 SWAP1
0x683 SWAP3
0x684 AND
0x685 SWAP2
0x686 SWAP1
0x687 SWAP2
0x688 OR
0x689 SWAP1
0x68a SSTORE
0x68b JUMP
---
0x65d: JUMPDEST 
0x65e: V533 = 0x3
0x661: V534 = S[0x3]
0x662: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x677: V536 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x678: V537 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V534
0x679: V538 = 0x1
0x67b: V539 = 0xa0
0x67d: V540 = 0x2
0x67f: V541 = EXP 0x2 0xa0
0x680: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x684: V543 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x688: V544 = OR V543 V537
0x68a: S[0x3] = V544
0x68b: JUMP 0x116
---
Entry stack: [V11, 0x116, V152]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x68c
[0x68c:0x69a]
---
Predecessors: [0x1f2]
Successors: [0x1fb]
---
0x68c JUMPDEST
0x68d PUSH1 0x0
0x68f SLOAD
0x690 PUSH1 0x1
0x692 PUSH1 0xa0
0x694 PUSH1 0x2
0x696 EXP
0x697 SUB
0x698 AND
0x699 DUP2
0x69a JUMP
---
0x68c: JUMPDEST 
0x68d: V545 = 0x0
0x68f: V546 = S[0x0]
0x690: V547 = 0x1
0x692: V548 = 0xa0
0x694: V549 = 0x2
0x696: V550 = EXP 0x2 0xa0
0x697: V551 = SUB 0x10000000000000000000000000000000000000000 0x1
0x698: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x69a: JUMP 0x1fb
---
Entry stack: [V11, 0x1fb]
Stack pops: 1
Stack additions: [S0, V552]
Exit stack: [V11, 0x1fb, V552]

================================

Block 0x69b
[0x69b:0x6a0]
---
Predecessors: [0x223]
Successors: [0x22c]
---
0x69b JUMPDEST
0x69c PUSH1 0x5
0x69e SLOAD
0x69f DUP2
0x6a0 JUMP
---
0x69b: JUMPDEST 
0x69c: V553 = 0x5
0x69e: V554 = S[0x5]
0x6a0: JUMP 0x22c
---
Entry stack: [V11, 0x22c]
Stack pops: 1
Stack additions: [S0, V554]
Exit stack: [V11, 0x22c, V554]

================================

Block 0x6a1
[0x6a1:0x6b2]
---
Predecessors: [0x24a]
Successors: [0x22c]
---
0x6a1 JUMPDEST
0x6a2 PUSH1 0x1
0x6a4 PUSH1 0x20
0x6a6 MSTORE
0x6a7 PUSH1 0x0
0x6a9 SWAP1
0x6aa DUP2
0x6ab MSTORE
0x6ac PUSH1 0x40
0x6ae SWAP1
0x6af SHA3
0x6b0 SLOAD
0x6b1 DUP2
0x6b2 JUMP
---
0x6a1: JUMPDEST 
0x6a2: V555 = 0x1
0x6a4: V556 = 0x20
0x6a6: M[0x20] = 0x1
0x6a7: V557 = 0x0
0x6ab: M[0x0] = V196
0x6ac: V558 = 0x40
0x6af: V559 = SHA3 0x0 0x40
0x6b0: V560 = S[V559]
0x6b2: JUMP 0x22c
---
Entry stack: [V11, 0x22c, V196]
Stack pops: 2
Stack additions: [S1, V560]
Exit stack: [V11, 0x22c, V560]

================================

Block 0x6b3
[0x6b3:0x6b8]
---
Predecessors: [0x26b]
Successors: [0x22c]
---
0x6b3 JUMPDEST
0x6b4 PUSH1 0x6
0x6b6 SLOAD
0x6b7 DUP2
0x6b8 JUMP
---
0x6b3: JUMPDEST 
0x6b4: V561 = 0x6
0x6b6: V562 = S[0x6]
0x6b8: JUMP 0x22c
---
Entry stack: [V11, 0x22c]
Stack pops: 1
Stack additions: [S0, V562]
Exit stack: [V11, 0x22c, V562]

================================

Block 0x6b9
[0x6b9:0x6cb]
---
Predecessors: [0x280]
Successors: [0x6cc, 0x6d0]
---
0x6b9 JUMPDEST
0x6ba PUSH1 0x0
0x6bc SLOAD
0x6bd PUSH1 0x1
0x6bf PUSH1 0xa0
0x6c1 PUSH1 0x2
0x6c3 EXP
0x6c4 SUB
0x6c5 AND
0x6c6 CALLER
0x6c7 EQ
0x6c8 PUSH2 0x6d0
0x6cb JUMPI
---
0x6b9: JUMPDEST 
0x6ba: V563 = 0x0
0x6bc: V564 = S[0x0]
0x6bd: V565 = 0x1
0x6bf: V566 = 0xa0
0x6c1: V567 = 0x2
0x6c3: V568 = EXP 0x2 0xa0
0x6c4: V569 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c5: V570 = AND 0xffffffffffffffffffffffffffffffffffffffff V564
0x6c6: V571 = CALLER
0x6c7: V572 = EQ V571 V570
0x6c8: V573 = 0x6d0
0x6cb: JUMPI 0x6d0 V572
---
Entry stack: [V11, 0x116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116]

================================

Block 0x6cc
[0x6cc:0x6cf]
---
Predecessors: [0x6b9]
Successors: []
---
0x6cc PUSH1 0x0
0x6ce DUP1
0x6cf REVERT
---
0x6cc: V574 = 0x0
0x6cf: REVERT 0x0 0x0
---
Entry stack: [V11, 0x116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116]

================================

Block 0x6d0
[0x6d0:0x6f3]
---
Predecessors: [0x6b9]
Successors: [0x6f4, 0x6f8]
---
0x6d0 JUMPDEST
0x6d1 PUSH1 0x4
0x6d3 SLOAD
0x6d4 PUSH21 0x10000000000000000000000000000000000000000
0x6ea SWAP1
0x6eb DIV
0x6ec PUSH1 0xff
0x6ee AND
0x6ef ISZERO
0x6f0 PUSH2 0x6f8
0x6f3 JUMPI
---
0x6d0: JUMPDEST 
0x6d1: V575 = 0x4
0x6d3: V576 = S[0x4]
0x6d4: V577 = 0x10000000000000000000000000000000000000000
0x6eb: V578 = DIV V576 0x10000000000000000000000000000000000000000
0x6ec: V579 = 0xff
0x6ee: V580 = AND 0xff V578
0x6ef: V581 = ISZERO V580
0x6f0: V582 = 0x6f8
0x6f3: JUMPI 0x6f8 V581
---
Entry stack: [V11, 0x116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116]

================================

Block 0x6f4
[0x6f4:0x6f7]
---
Predecessors: [0x6d0]
Successors: []
---
0x6f4 PUSH1 0x0
0x6f6 DUP1
0x6f7 REVERT
---
0x6f4: V583 = 0x0
0x6f7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116]

================================

Block 0x6f8
[0x6f8:0x774]
---
Predecessors: [0x6d0]
Successors: [0x116]
---
0x6f8 JUMPDEST
0x6f9 PUSH1 0x4
0x6fb DUP1
0x6fc SLOAD
0x6fd PUSH21 0xff0000000000000000000000000000000000000000
0x713 NOT
0x714 AND
0x715 PUSH21 0x10000000000000000000000000000000000000000
0x72b OR
0x72c SWAP1
0x72d SSTORE
0x72e PUSH1 0x5
0x730 SLOAD
0x731 TIMESTAMP
0x732 DUP1
0x733 DUP3
0x734 ADD
0x735 PUSH1 0x6
0x737 SSTORE
0x738 PUSH1 0x40
0x73a DUP1
0x73b MLOAD
0x73c SWAP2
0x73d DUP3
0x73e MSTORE
0x73f PUSH1 0x20
0x741 DUP3
0x742 ADD
0x743 SWAP3
0x744 SWAP1
0x745 SWAP3
0x746 MSTORE
0x747 DUP2
0x748 MLOAD
0x749 PUSH32 0xbdac74f1cfa0a7d058c00113db6186531a8f5334942547936727fe8cfdaa023
0x76a SWAP3
0x76b SWAP2
0x76c DUP2
0x76d SWAP1
0x76e SUB
0x76f SWAP1
0x770 SWAP2
0x771 ADD
0x772 SWAP1
0x773 LOG1
0x774 JUMP
---
0x6f8: JUMPDEST 
0x6f9: V584 = 0x4
0x6fc: V585 = S[0x4]
0x6fd: V586 = 0xff0000000000000000000000000000000000000000
0x713: V587 = NOT 0xff0000000000000000000000000000000000000000
0x714: V588 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V585
0x715: V589 = 0x10000000000000000000000000000000000000000
0x72b: V590 = OR 0x10000000000000000000000000000000000000000 V588
0x72d: S[0x4] = V590
0x72e: V591 = 0x5
0x730: V592 = S[0x5]
0x731: V593 = TIMESTAMP
0x734: V594 = ADD V592 V593
0x735: V595 = 0x6
0x737: S[0x6] = V594
0x738: V596 = 0x40
0x73b: V597 = M[0x40]
0x73e: M[V597] = V593
0x73f: V598 = 0x20
0x742: V599 = ADD V597 0x20
0x746: M[V599] = V592
0x748: V600 = M[0x40]
0x749: V601 = 0xbdac74f1cfa0a7d058c00113db6186531a8f5334942547936727fe8cfdaa023
0x76e: V602 = SUB V597 V600
0x771: V603 = ADD 0x40 V602
0x773: LOG V600 V603 0xbdac74f1cfa0a7d058c00113db6186531a8f5334942547936727fe8cfdaa023
0x774: JUMP 0x116
---
Entry stack: [V11, 0x116]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x775
[0x775:0x783]
---
Predecessors: [0x295]
Successors: [0x1fb]
---
0x775 JUMPDEST
0x776 PUSH1 0x3
0x778 SLOAD
0x779 PUSH1 0x1
0x77b PUSH1 0xa0
0x77d PUSH1 0x2
0x77f EXP
0x780 SUB
0x781 AND
0x782 DUP2
0x783 JUMP
---
0x775: JUMPDEST 
0x776: V604 = 0x3
0x778: V605 = S[0x3]
0x779: V606 = 0x1
0x77b: V607 = 0xa0
0x77d: V608 = 0x2
0x77f: V609 = EXP 0x2 0xa0
0x780: V610 = SUB 0x10000000000000000000000000000000000000000 0x1
0x781: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x783: JUMP 0x1fb
---
Entry stack: [V11, 0x1fb]
Stack pops: 1
Stack additions: [S0, V611]
Exit stack: [V11, 0x1fb, V611]

================================

Block 0x784
[0x784:0x792]
---
Predecessors: [0x2aa]
Successors: [0x1fb]
---
0x784 JUMPDEST
0x785 PUSH1 0x4
0x787 SLOAD
0x788 PUSH1 0x1
0x78a PUSH1 0xa0
0x78c PUSH1 0x2
0x78e EXP
0x78f SUB
0x790 AND
0x791 DUP2
0x792 JUMP
---
0x784: JUMPDEST 
0x785: V612 = 0x4
0x787: V613 = S[0x4]
0x788: V614 = 0x1
0x78a: V615 = 0xa0
0x78c: V616 = 0x2
0x78e: V617 = EXP 0x2 0xa0
0x78f: V618 = SUB 0x10000000000000000000000000000000000000000 0x1
0x790: V619 = AND 0xffffffffffffffffffffffffffffffffffffffff V613
0x792: JUMP 0x1fb
---
Entry stack: [V11, 0x1fb]
Stack pops: 1
Stack additions: [S0, V619]
Exit stack: [V11, 0x1fb, V619]

================================

Block 0x793
[0x793:0x7a1]
---
Predecessors: [0x2bf]
Successors: [0x1fb]
---
0x793 JUMPDEST
0x794 PUSH1 0x2
0x796 SLOAD
0x797 PUSH1 0x1
0x799 PUSH1 0xa0
0x79b PUSH1 0x2
0x79d EXP
0x79e SUB
0x79f AND
0x7a0 DUP2
0x7a1 JUMP
---
0x793: JUMPDEST 
0x794: V620 = 0x2
0x796: V621 = S[0x2]
0x797: V622 = 0x1
0x799: V623 = 0xa0
0x79b: V624 = 0x2
0x79d: V625 = EXP 0x2 0xa0
0x79e: V626 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79f: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V621
0x7a1: JUMP 0x1fb
---
Entry stack: [V11, 0x1fb]
Stack pops: 1
Stack additions: [S0, V627]
Exit stack: [V11, 0x1fb, V627]

================================

Block 0x7a2
[0x7a2:0x7b4]
---
Predecessors: [0x2d4]
Successors: [0x7b5, 0x7b9]
---
0x7a2 JUMPDEST
0x7a3 PUSH1 0x0
0x7a5 SLOAD
0x7a6 PUSH1 0x1
0x7a8 PUSH1 0xa0
0x7aa PUSH1 0x2
0x7ac EXP
0x7ad SUB
0x7ae AND
0x7af CALLER
0x7b0 EQ
0x7b1 PUSH2 0x7b9
0x7b4 JUMPI
---
0x7a2: JUMPDEST 
0x7a3: V628 = 0x0
0x7a5: V629 = S[0x0]
0x7a6: V630 = 0x1
0x7a8: V631 = 0xa0
0x7aa: V632 = 0x2
0x7ac: V633 = EXP 0x2 0xa0
0x7ad: V634 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ae: V635 = AND 0xffffffffffffffffffffffffffffffffffffffff V629
0x7af: V636 = CALLER
0x7b0: V637 = EQ V636 V635
0x7b1: V638 = 0x7b9
0x7b4: JUMPI 0x7b9 V637
---
Entry stack: [V11, 0x116, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V240]

================================

Block 0x7b5
[0x7b5:0x7b8]
---
Predecessors: [0x7a2]
Successors: []
---
0x7b5 PUSH1 0x0
0x7b7 DUP1
0x7b8 REVERT
---
0x7b5: V639 = 0x0
0x7b8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x116, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V240]

================================

Block 0x7b9
[0x7b9:0x7c1]
---
Predecessors: [0x7a2]
Successors: [0x87d]
---
0x7b9 JUMPDEST
0x7ba PUSH2 0x7c2
0x7bd DUP2
0x7be PUSH2 0x87d
0x7c1 JUMP
---
0x7b9: JUMPDEST 
0x7ba: V640 = 0x7c2
0x7be: V641 = 0x87d
0x7c1: JUMP 0x87d
---
Entry stack: [V11, 0x116, V240]
Stack pops: 1
Stack additions: [S0, 0x7c2, S0]
Exit stack: [V11, 0x116, V240, 0x7c2, V240]

================================

Block 0x7c2
[0x7c2:0x7c4]
---
Predecessors: [0x892]
Successors: [0x116]
---
0x7c2 JUMPDEST
0x7c3 POP
0x7c4 JUMP
---
0x7c2: JUMPDEST 
0x7c4: JUMP 0x116
---
Entry stack: [V11, 0x116, V240]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x7c5
[0x7c5:0x83c]
---
Predecessors: [0x396, 0x57b]
Successors: [0x83d, 0x841]
---
0x7c5 JUMPDEST
0x7c6 DUP3
0x7c7 PUSH1 0x1
0x7c9 PUSH1 0xa0
0x7cb PUSH1 0x2
0x7cd EXP
0x7ce SUB
0x7cf AND
0x7d0 PUSH4 0xa9059cbb
0x7d5 DUP4
0x7d6 DUP4
0x7d7 PUSH1 0x40
0x7d9 MLOAD
0x7da DUP4
0x7db PUSH4 0xffffffff
0x7e0 AND
0x7e1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7ff MUL
0x800 DUP2
0x801 MSTORE
0x802 PUSH1 0x4
0x804 ADD
0x805 DUP1
0x806 DUP4
0x807 PUSH1 0x1
0x809 PUSH1 0xa0
0x80b PUSH1 0x2
0x80d EXP
0x80e SUB
0x80f AND
0x810 PUSH1 0x1
0x812 PUSH1 0xa0
0x814 PUSH1 0x2
0x816 EXP
0x817 SUB
0x818 AND
0x819 DUP2
0x81a MSTORE
0x81b PUSH1 0x20
0x81d ADD
0x81e DUP3
0x81f DUP2
0x820 MSTORE
0x821 PUSH1 0x20
0x823 ADD
0x824 SWAP3
0x825 POP
0x826 POP
0x827 POP
0x828 PUSH1 0x20
0x82a PUSH1 0x40
0x82c MLOAD
0x82d DUP1
0x82e DUP4
0x82f SUB
0x830 DUP2
0x831 PUSH1 0x0
0x833 DUP8
0x834 DUP1
0x835 EXTCODESIZE
0x836 ISZERO
0x837 DUP1
0x838 ISZERO
0x839 PUSH2 0x841
0x83c JUMPI
---
0x7c5: JUMPDEST 
0x7c7: V642 = 0x1
0x7c9: V643 = 0xa0
0x7cb: V644 = 0x2
0x7cd: V645 = EXP 0x2 0xa0
0x7ce: V646 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7cf: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x7d0: V648 = 0xa9059cbb
0x7d7: V649 = 0x40
0x7d9: V650 = M[0x40]
0x7db: V651 = 0xffffffff
0x7e0: V652 = AND 0xffffffff 0xa9059cbb
0x7e1: V653 = 0x100000000000000000000000000000000000000000000000000000000
0x7ff: V654 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x801: M[V650] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x802: V655 = 0x4
0x804: V656 = ADD 0x4 V650
0x807: V657 = 0x1
0x809: V658 = 0xa0
0x80b: V659 = 0x2
0x80d: V660 = EXP 0x2 0xa0
0x80e: V661 = SUB 0x10000000000000000000000000000000000000000 0x1
0x80f: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x810: V663 = 0x1
0x812: V664 = 0xa0
0x814: V665 = 0x2
0x816: V666 = EXP 0x2 0xa0
0x817: V667 = SUB 0x10000000000000000000000000000000000000000 0x1
0x818: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff V662
0x81a: M[V656] = V668
0x81b: V669 = 0x20
0x81d: V670 = ADD 0x20 V656
0x820: M[V670] = S0
0x821: V671 = 0x20
0x823: V672 = ADD 0x20 V670
0x828: V673 = 0x20
0x82a: V674 = 0x40
0x82c: V675 = M[0x40]
0x82f: V676 = SUB V672 V675
0x831: V677 = 0x0
0x835: V678 = EXTCODESIZE V647
0x836: V679 = ISZERO V678
0x838: V680 = ISZERO V679
0x839: V681 = 0x841
0x83c: JUMPI 0x841 V680
---
Entry stack: [V11, S6, S5, S4, {0x3cc, 0x596}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V647, 0xa9059cbb, V672, 0x20, V675, V676, V675, 0x0, V647, V679]
Exit stack: [V11, S6, S5, S4, {0x3cc, 0x596}, S2, S1, S0, V647, 0xa9059cbb, V672, 0x20, V675, V676, V675, 0x0, V647, V679]

================================

Block 0x83d
[0x83d:0x840]
---
Predecessors: [0x7c5]
Successors: []
---
0x83d PUSH1 0x0
0x83f DUP1
0x840 REVERT
---
0x83d: V682 = 0x0
0x840: REVERT 0x0 0x0
---
Entry stack: [V11, S16, S15, S14, {0x3cc, 0x596}, S12, S11, S10, V647, 0xa9059cbb, V672, 0x20, V675, V676, V675, 0x0, V647, V679]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S16, S15, S14, {0x3cc, 0x596}, S12, S11, S10, V647, 0xa9059cbb, V672, 0x20, V675, V676, V675, 0x0, V647, V679]

================================

Block 0x841
[0x841:0x84b]
---
Predecessors: [0x7c5]
Successors: [0x84c, 0x855]
---
0x841 JUMPDEST
0x842 POP
0x843 GAS
0x844 CALL
0x845 ISZERO
0x846 DUP1
0x847 ISZERO
0x848 PUSH2 0x855
0x84b JUMPI
---
0x841: JUMPDEST 
0x843: V683 = GAS
0x844: V684 = CALL V683 V647 0x0 V675 V676 V675 0x20
0x845: V685 = ISZERO V684
0x847: V686 = ISZERO V685
0x848: V687 = 0x855
0x84b: JUMPI 0x855 V686
---
Entry stack: [V11, S16, S15, S14, {0x3cc, 0x596}, S12, S11, S10, V647, 0xa9059cbb, V672, 0x20, V675, V676, V675, 0x0, V647, V679]
Stack pops: 7
Stack additions: [V685]
Exit stack: [V11, S16, S15, S14, {0x3cc, 0x596}, S12, S11, S10, V647, 0xa9059cbb, V672, V685]

================================

Block 0x84c
[0x84c:0x854]
---
Predecessors: [0x841]
Successors: []
---
0x84c RETURNDATASIZE
0x84d PUSH1 0x0
0x84f DUP1
0x850 RETURNDATACOPY
0x851 RETURNDATASIZE
0x852 PUSH1 0x0
0x854 REVERT
---
0x84c: V688 = RETURNDATASIZE
0x84d: V689 = 0x0
0x850: RETURNDATACOPY 0x0 0x0 V688
0x851: V690 = RETURNDATASIZE
0x852: V691 = 0x0
0x854: REVERT 0x0 V690
---
Entry stack: [V11, S10, S9, S8, {0x3cc, 0x596}, S6, S5, S4, S3, 0xa9059cbb, S1, V685]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, S9, S8, {0x3cc, 0x596}, S6, S5, S4, S3, 0xa9059cbb, S1, V685]

================================

Block 0x855
[0x855:0x866]
---
Predecessors: [0x841]
Successors: [0x867, 0x86b]
---
0x855 JUMPDEST
0x856 POP
0x857 POP
0x858 POP
0x859 POP
0x85a PUSH1 0x40
0x85c MLOAD
0x85d RETURNDATASIZE
0x85e PUSH1 0x20
0x860 DUP2
0x861 LT
0x862 ISZERO
0x863 PUSH2 0x86b
0x866 JUMPI
---
0x855: JUMPDEST 
0x85a: V692 = 0x40
0x85c: V693 = M[0x40]
0x85d: V694 = RETURNDATASIZE
0x85e: V695 = 0x20
0x861: V696 = LT V694 0x20
0x862: V697 = ISZERO V696
0x863: V698 = 0x86b
0x866: JUMPI 0x86b V697
---
Entry stack: [V11, S10, S9, S8, {0x3cc, 0x596}, S6, S5, S4, S3, 0xa9059cbb, S1, V685]
Stack pops: 4
Stack additions: [V693, V694]
Exit stack: [V11, S10, S9, S8, {0x3cc, 0x596}, S6, S5, S4, V693, V694]

================================

Block 0x867
[0x867:0x86a]
---
Predecessors: [0x855]
Successors: []
---
0x867 PUSH1 0x0
0x869 DUP1
0x86a REVERT
---
0x867: V699 = 0x0
0x86a: REVERT 0x0 0x0
---
Entry stack: [V11, S8, S7, S6, {0x3cc, 0x596}, S4, S3, S2, V693, V694]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, {0x3cc, 0x596}, S4, S3, S2, V693, V694]

================================

Block 0x86b
[0x86b:0x873]
---
Predecessors: [0x855]
Successors: [0x874, 0x878]
---
0x86b JUMPDEST
0x86c POP
0x86d MLOAD
0x86e ISZERO
0x86f ISZERO
0x870 PUSH2 0x878
0x873 JUMPI
---
0x86b: JUMPDEST 
0x86d: V700 = M[V693]
0x86e: V701 = ISZERO V700
0x86f: V702 = ISZERO V701
0x870: V703 = 0x878
0x873: JUMPI 0x878 V702
---
Entry stack: [V11, S8, S7, S6, {0x3cc, 0x596}, S4, S3, S2, V693, V694]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S8, S7, S6, {0x3cc, 0x596}, S4, S3, S2]

================================

Block 0x874
[0x874:0x877]
---
Predecessors: [0x86b]
Successors: []
---
0x874 PUSH1 0x0
0x876 DUP1
0x877 REVERT
---
0x874: V704 = 0x0
0x877: REVERT 0x0 0x0
---
Entry stack: [V11, S6, S5, S4, {0x3cc, 0x596}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, S5, S4, {0x3cc, 0x596}, S2, S1, S0]

================================

Block 0x878
[0x878:0x87c]
---
Predecessors: [0x86b]
Successors: [0x3cc, 0x596]
---
0x878 JUMPDEST
0x879 POP
0x87a POP
0x87b POP
0x87c JUMP
---
0x878: JUMPDEST 
0x87c: JUMP {0x3cc, 0x596}
---
Entry stack: [V11, S6, S5, S4, {0x3cc, 0x596}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, S6, S5, S4]

================================

Block 0x87d
[0x87d:0x88d]
---
Predecessors: [0x7b9]
Successors: [0x88e, 0x892]
---
0x87d JUMPDEST
0x87e PUSH1 0x1
0x880 PUSH1 0xa0
0x882 PUSH1 0x2
0x884 EXP
0x885 SUB
0x886 DUP2
0x887 AND
0x888 ISZERO
0x889 ISZERO
0x88a PUSH2 0x892
0x88d JUMPI
---
0x87d: JUMPDEST 
0x87e: V705 = 0x1
0x880: V706 = 0xa0
0x882: V707 = 0x2
0x884: V708 = EXP 0x2 0xa0
0x885: V709 = SUB 0x10000000000000000000000000000000000000000 0x1
0x887: V710 = AND V240 0xffffffffffffffffffffffffffffffffffffffff
0x888: V711 = ISZERO V710
0x889: V712 = ISZERO V711
0x88a: V713 = 0x892
0x88d: JUMPI 0x892 V712
---
Entry stack: [V11, 0x116, V240, 0x7c2, V240]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x116, V240, 0x7c2, V240]

================================

Block 0x88e
[0x88e:0x891]
---
Predecessors: [0x87d]
Successors: []
---
0x88e PUSH1 0x0
0x890 DUP1
0x891 REVERT
---
0x88e: V714 = 0x0
0x891: REVERT 0x0 0x0
---
Entry stack: [V11, 0x116, V240, 0x7c2, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x116, V240, 0x7c2, V240]

================================

Block 0x892
[0x892:0x8f9]
---
Predecessors: [0x87d]
Successors: [0x7c2]
---
0x892 JUMPDEST
0x893 PUSH1 0x0
0x895 DUP1
0x896 SLOAD
0x897 PUSH1 0x40
0x899 MLOAD
0x89a PUSH1 0x1
0x89c PUSH1 0xa0
0x89e PUSH1 0x2
0x8a0 EXP
0x8a1 SUB
0x8a2 DUP1
0x8a3 DUP6
0x8a4 AND
0x8a5 SWAP4
0x8a6 SWAP3
0x8a7 AND
0x8a8 SWAP2
0x8a9 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x8ca SWAP2
0x8cb LOG3
0x8cc PUSH1 0x0
0x8ce DUP1
0x8cf SLOAD
0x8d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e5 NOT
0x8e6 AND
0x8e7 PUSH1 0x1
0x8e9 PUSH1 0xa0
0x8eb PUSH1 0x2
0x8ed EXP
0x8ee SUB
0x8ef SWAP3
0x8f0 SWAP1
0x8f1 SWAP3
0x8f2 AND
0x8f3 SWAP2
0x8f4 SWAP1
0x8f5 SWAP2
0x8f6 OR
0x8f7 SWAP1
0x8f8 SSTORE
0x8f9 JUMP
---
0x892: JUMPDEST 
0x893: V715 = 0x0
0x896: V716 = S[0x0]
0x897: V717 = 0x40
0x899: V718 = M[0x40]
0x89a: V719 = 0x1
0x89c: V720 = 0xa0
0x89e: V721 = 0x2
0x8a0: V722 = EXP 0x2 0xa0
0x8a1: V723 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a4: V724 = AND V240 0xffffffffffffffffffffffffffffffffffffffff
0x8a7: V725 = AND V716 0xffffffffffffffffffffffffffffffffffffffff
0x8a9: V726 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x8cb: LOG V718 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V725 V724
0x8cc: V727 = 0x0
0x8cf: V728 = S[0x0]
0x8d0: V729 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e5: V730 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8e6: V731 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V728
0x8e7: V732 = 0x1
0x8e9: V733 = 0xa0
0x8eb: V734 = 0x2
0x8ed: V735 = EXP 0x2 0xa0
0x8ee: V736 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f2: V737 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x8f6: V738 = OR V737 V731
0x8f8: S[0x0] = V738
0x8f9: JUMP 0x7c2
---
Entry stack: [V11, 0x116, V240, 0x7c2, V240]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x116, V240]

================================

Block 0x8fa
[0x8fa:0x927]
---
Predecessors: []
Successors: []
---
0x8fa STOP
0x8fb LOG1
0x8fc PUSH6 0x627a7a723058
0x903 SHA3
0x904 LOG1
0x905 MISSING 0xde
0x906 LT
0x907 SELFDESTRUCT
0x908 DUP11
0x909 MISSING 0xc3
0x90a MLOAD
0x90b COINBASE
0x90c MISSING 0xef
0x90d SLOAD
0x90e GASLIMIT
0x90f PUSH24 0x2bea5a2897c1f4f9b755e1a5aa4d575f8f6208cf0029
---
0x8fa: STOP 
0x8fb: LOG S0 S1 S2
0x8fc: V739 = 0x627a7a723058
0x903: V740 = SHA3 0x627a7a723058 S3
0x904: LOG V740 S4 S5
0x905: MISSING 0xde
0x906: V741 = LT S0 S1
0x907: SELFDESTRUCT V741
0x909: MISSING 0xc3
0x90a: V742 = M[S0]
0x90b: V743 = COINBASE
0x90c: MISSING 0xef
0x90d: V744 = S[S0]
0x90e: V745 = GASLIMIT
0x90f: V746 = 0x2bea5a2897c1f4f9b755e1a5aa4d575f8f6208cf0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V743, V742, 0x2bea5a2897c1f4f9b755e1a5aa4d575f8f6208cf0029, V745, V744]
Exit stack: []

================================

Function 0:
Public function signature: 0x171060ec
Entry block: 0xf5
Exit block: 0x116
Body: 0xf5, 0xfd, 0x101, 0x116, 0x2e9, 0x2fc, 0x300, 0x311, 0x315

Function 1:
Public function signature: 0x19165587
Entry block: 0x118
Exit block: 0x5b7
Body: 0x118, 0x120, 0x124, 0x344, 0x35a, 0x35e, 0x383, 0x387, 0x392, 0x396, 0x5b7

Function 2:
Public function signature: 0x1f2698ab
Entry block: 0x139
Exit block: 0x14e
Body: 0x139, 0x141, 0x145, 0x14e, 0x40f

Function 3:
Public function signature: 0x282d3fdf
Entry block: 0x162
Exit block: 0x116
Body: 0x116, 0x162, 0x16a, 0x16e, 0x430, 0x443, 0x447, 0x458, 0x45c

Function 4:
Public function signature: 0x3ccfd60b
Entry block: 0x186
Exit block: 0x18e
Body: 0x116, 0x186, 0x18e, 0x192

Function 5:
Public function signature: 0x43d726d6
Entry block: 0x19b
Exit block: 0x5ab
Body: 0x19b, 0x1a3, 0x1a7, 0x598, 0x5ab, 0x5af, 0x5b7

Function 6:
Public function signature: 0x715018a6
Entry block: 0x1b0
Exit block: 0x116
Body: 0x116, 0x1b0, 0x1b8, 0x1bc, 0x5c5, 0x5d8, 0x5dc

Function 7:
Public function signature: 0x75619ab5
Entry block: 0x1c5
Exit block: 0x116
Body: 0x116, 0x1c5, 0x1cd, 0x1d1, 0x631, 0x644, 0x648, 0x659, 0x65d

Function 8:
Public function signature: 0x8da5cb5b
Entry block: 0x1e6
Exit block: 0x1fb
Body: 0x1e6, 0x1ee, 0x1f2, 0x1fb, 0x68c

Function 9:
Public function signature: 0x947a36fb
Entry block: 0x217
Exit block: 0x22c
Body: 0x217, 0x21f, 0x223, 0x22c, 0x69b

Function 10:
Public function signature: 0x97a993aa
Entry block: 0x23e
Exit block: 0x22c
Body: 0x22c, 0x23e, 0x246, 0x24a, 0x6a1

Function 11:
Public function signature: 0xb91d4001
Entry block: 0x25f
Exit block: 0x22c
Body: 0x22c, 0x25f, 0x267, 0x26b, 0x6b3

Function 12:
Public function signature: 0xbe9a6555
Entry block: 0x274
Exit block: 0x116
Body: 0x116, 0x274, 0x27c, 0x280, 0x6b9, 0x6cc, 0x6d0, 0x6f4, 0x6f8

Function 13:
Public function signature: 0xbfe10928
Entry block: 0x289
Exit block: 0x1fb
Body: 0x1fb, 0x289, 0x291, 0x295, 0x775

Function 14:
Public function signature: 0xc2412676
Entry block: 0x29e
Exit block: 0x1fb
Body: 0x1fb, 0x29e, 0x2a6, 0x2aa, 0x784

Function 15:
Public function signature: 0xd7b96d4e
Entry block: 0x2b3
Exit block: 0x1fb
Body: 0x1fb, 0x2b3, 0x2bb, 0x2bf, 0x793

Function 16:
Public function signature: 0xf2fde38b
Entry block: 0x2c8
Exit block: 0x116
Body: 0x116, 0x2c8, 0x2d0, 0x2d4, 0x7a2, 0x7b5, 0x7b9, 0x7c2, 0x87d, 0x88e, 0x892

Function 17:
Public fallback function
Entry block: 0xf0
Exit block: 0xf0
Body: 0xf0

Function 18:
Private function
Entry block: 0x4b5
Exit block: 0x596
Body: 0x3cc, 0x4b5, 0x4cc, 0x4db, 0x551, 0x565, 0x57b, 0x596, 0x7c5, 0x841, 0x855, 0x86b, 0x878

