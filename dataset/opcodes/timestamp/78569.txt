Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xf6]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xf6
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xf6
0xa: JUMPI 0xf6 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x12d]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x5748be2
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x12d
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x5748be2
0x20: V14 = EQ V12 0x5748be2
0x21: V15 = 0x12d
0x24: JUMPI 0x12d V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x152]
---
0x25 DUP1
0x26 PUSH4 0x6fdde03
0x2b EQ
0x2c PUSH2 0x152
0x2f JUMPI
---
0x26: V16 = 0x6fdde03
0x2b: V17 = EQ 0x6fdde03 V12
0x2c: V18 = 0x152
0x2f: JUMPI 0x152 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x1dd]
---
0x30 DUP1
0x31 PUSH4 0x11f2a395
0x36 EQ
0x37 PUSH2 0x1dd
0x3a JUMPI
---
0x31: V19 = 0x11f2a395
0x36: V20 = EQ 0x11f2a395 V12
0x37: V21 = 0x1dd
0x3a: JUMPI 0x1dd V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1f2]
---
0x3b DUP1
0x3c PUSH4 0x18886657
0x41 EQ
0x42 PUSH2 0x1f2
0x45 JUMPI
---
0x3c: V22 = 0x18886657
0x41: V23 = EQ 0x18886657 V12
0x42: V24 = 0x1f2
0x45: JUMPI 0x1f2 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x217]
---
0x46 DUP1
0x47 PUSH4 0x3197cbb6
0x4c EQ
0x4d PUSH2 0x217
0x50 JUMPI
---
0x47: V25 = 0x3197cbb6
0x4c: V26 = EQ 0x3197cbb6 V12
0x4d: V27 = 0x217
0x50: JUMPI 0x217 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x23c]
---
0x51 DUP1
0x52 PUSH4 0x38af3eed
0x57 EQ
0x58 PUSH2 0x23c
0x5b JUMPI
---
0x52: V28 = 0x38af3eed
0x57: V29 = EQ 0x38af3eed V12
0x58: V30 = 0x23c
0x5b: JUMPI 0x23c V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x26b]
---
0x5c DUP1
0x5d PUSH4 0x3ccfd60b
0x62 EQ
0x63 PUSH2 0x26b
0x66 JUMPI
---
0x5d: V31 = 0x3ccfd60b
0x62: V32 = EQ 0x3ccfd60b V12
0x63: V33 = 0x26b
0x66: JUMPI 0x26b V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x280]
---
0x67 DUP1
0x68 PUSH4 0x518ab2a8
0x6d EQ
0x6e PUSH2 0x280
0x71 JUMPI
---
0x68: V34 = 0x518ab2a8
0x6d: V35 = EQ 0x518ab2a8 V12
0x6e: V36 = 0x280
0x71: JUMPI 0x280 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x2a5]
---
0x72 DUP1
0x73 PUSH4 0x5ed7ca5b
0x78 EQ
0x79 PUSH2 0x2a5
0x7c JUMPI
---
0x73: V37 = 0x5ed7ca5b
0x78: V38 = EQ 0x5ed7ca5b V12
0x79: V39 = 0x2a5
0x7c: JUMPI 0x2a5 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2ba]
---
0x7d DUP1
0x7e PUSH4 0x78e97925
0x83 EQ
0x84 PUSH2 0x2ba
0x87 JUMPI
---
0x7e: V40 = 0x78e97925
0x83: V41 = EQ 0x78e97925 V12
0x84: V42 = 0x2ba
0x87: JUMPI 0x2ba V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2df]
---
0x88 DUP1
0x89 PUSH4 0x84bcefd4
0x8e EQ
0x8f PUSH2 0x2df
0x92 JUMPI
---
0x89: V43 = 0x84bcefd4
0x8e: V44 = EQ 0x84bcefd4 V12
0x8f: V45 = 0x2df
0x92: JUMPI 0x2df V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x304]
---
0x93 DUP1
0x94 PUSH4 0x8da5cb5b
0x99 EQ
0x9a PUSH2 0x304
0x9d JUMPI
---
0x94: V46 = 0x8da5cb5b
0x99: V47 = EQ 0x8da5cb5b V12
0x9a: V48 = 0x304
0x9d: JUMPI 0x304 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x333]
---
0x9e DUP1
0x9f PUSH4 0xa035b1fe
0xa4 EQ
0xa5 PUSH2 0x333
0xa8 JUMPI
---
0x9f: V49 = 0xa035b1fe
0xa4: V50 = EQ 0xa035b1fe V12
0xa5: V51 = 0x333
0xa8: JUMPI 0x333 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x358]
---
0xa9 DUP1
0xaa PUSH4 0xb9b8af0b
0xaf EQ
0xb0 PUSH2 0x358
0xb3 JUMPI
---
0xaa: V52 = 0xb9b8af0b
0xaf: V53 = EQ 0xb9b8af0b V12
0xb0: V54 = 0x358
0xb3: JUMPI 0x358 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x37f]
---
0xb4 DUP1
0xb5 PUSH4 0xcb3e64fd
0xba EQ
0xbb PUSH2 0x37f
0xbe JUMPI
---
0xb5: V55 = 0xcb3e64fd
0xba: V56 = EQ 0xcb3e64fd V12
0xbb: V57 = 0x37f
0xbe: JUMPI 0x37f V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x394]
---
0xbf DUP1
0xc0 PUSH4 0xce845d1d
0xc5 EQ
0xc6 PUSH2 0x394
0xc9 JUMPI
---
0xc0: V58 = 0xce845d1d
0xc5: V59 = EQ 0xce845d1d V12
0xc6: V60 = 0x394
0xc9: JUMPI 0x394 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x3b9]
---
0xca DUP1
0xcb PUSH4 0xd7e64c00
0xd0 EQ
0xd1 PUSH2 0x3b9
0xd4 JUMPI
---
0xcb: V61 = 0xd7e64c00
0xd0: V62 = EQ 0xd7e64c00 V12
0xd1: V63 = 0x3b9
0xd4: JUMPI 0x3b9 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x3de]
---
0xd5 DUP1
0xd6 PUSH4 0xf2fde38b
0xdb EQ
0xdc PUSH2 0x3de
0xdf JUMPI
---
0xd6: V64 = 0xf2fde38b
0xdb: V65 = EQ 0xf2fde38b V12
0xdc: V66 = 0x3de
0xdf: JUMPI 0x3de V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x3ff]
---
0xe0 DUP1
0xe1 PUSH4 0xfb86a404
0xe6 EQ
0xe7 PUSH2 0x3ff
0xea JUMPI
---
0xe1: V67 = 0xfb86a404
0xe6: V68 = EQ 0xfb86a404 V12
0xe7: V69 = 0x3ff
0xea: JUMPI 0x3ff V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x424]
---
0xeb DUP1
0xec PUSH4 0xfc0c546a
0xf1 EQ
0xf2 PUSH2 0x424
0xf5 JUMPI
---
0xec: V70 = 0xfc0c546a
0xf1: V71 = EQ 0xfc0c546a V12
0xf2: V72 = 0x424
0xf5: JUMPI 0x424 V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0xf6]
---
Predecessors: [0x0, 0xeb]
Successors: [0xf7]
---
0xf6 JUMPDEST
---
0xf6: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf7
[0xf7:0x109]
---
Predecessors: [0xf6]
Successors: [0x10a, 0x10e]
---
0xf7 JUMPDEST
0xf8 PUSH1 0x0
0xfa SLOAD
0xfb PUSH1 0xa0
0xfd PUSH1 0x2
0xff EXP
0x100 SWAP1
0x101 DIV
0x102 PUSH1 0xff
0x104 AND
0x105 ISZERO
0x106 PUSH2 0x10e
0x109 JUMPI
---
0xf7: JUMPDEST 
0xf8: V73 = 0x0
0xfa: V74 = S[0x0]
0xfb: V75 = 0xa0
0xfd: V76 = 0x2
0xff: V77 = EXP 0x2 0xa0
0x101: V78 = DIV V74 0x10000000000000000000000000000000000000000
0x102: V79 = 0xff
0x104: V80 = AND 0xff V78
0x105: V81 = ISZERO V80
0x106: V82 = 0x10e
0x109: JUMPI 0x10e V81
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10a
[0x10a:0x10d]
---
Predecessors: [0xf7]
Successors: []
---
0x10a PUSH1 0x0
0x10c DUP1
0x10d REVERT
---
0x10a: V83 = 0x0
0x10d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10e
[0x10e:0x11b]
---
Predecessors: [0xf7]
Successors: [0x11c, 0x120]
---
0x10e JUMPDEST
0x10f PUSH6 0xb5e620f48000
0x116 CALLVALUE
0x117 EQ
0x118 PUSH2 0x120
0x11b JUMPI
---
0x10e: JUMPDEST 
0x10f: V84 = 0xb5e620f48000
0x116: V85 = CALLVALUE
0x117: V86 = EQ V85 0xb5e620f48000
0x118: V87 = 0x120
0x11b: JUMPI 0x120 V86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11c
[0x11c:0x11f]
---
Predecessors: [0x10e]
Successors: []
---
0x11c PUSH1 0x0
0x11e DUP1
0x11f REVERT
---
0x11c: V88 = 0x0
0x11f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x120
[0x120:0x128]
---
Predecessors: [0x10e]
Successors: [0x453]
---
0x120 JUMPDEST
0x121 PUSH2 0x129
0x124 CALLER
0x125 PUSH2 0x453
0x128 JUMP
---
0x120: JUMPDEST 
0x121: V89 = 0x129
0x124: V90 = CALLER
0x125: V91 = 0x453
0x128: JUMP 0x453
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x129, V90]
Exit stack: [V12, 0x129, V90]

================================

Block 0x129
[0x129:0x129]
---
Predecessors: [0x6db, 0x8d2, 0x94a, 0x993, 0xa1a, 0xa7d]
Successors: [0x12a]
---
0x129 JUMPDEST
---
0x129: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12a
[0x12a:0x12a]
---
Predecessors: [0x129]
Successors: [0x12b]
---
0x12a JUMPDEST
---
0x12a: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12b
[0x12b:0x12c]
---
Predecessors: [0x12a]
Successors: []
---
0x12b JUMPDEST
0x12c STOP
---
0x12b: JUMPDEST 
0x12c: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12d
[0x12d:0x133]
---
Predecessors: [0xb]
Successors: [0x134, 0x138]
---
0x12d JUMPDEST
0x12e CALLVALUE
0x12f ISZERO
0x130 PUSH2 0x138
0x133 JUMPI
---
0x12d: JUMPDEST 
0x12e: V92 = CALLVALUE
0x12f: V93 = ISZERO V92
0x130: V94 = 0x138
0x133: JUMPI 0x138 V93
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x134
[0x134:0x137]
---
Predecessors: [0x12d]
Successors: []
---
0x134 PUSH1 0x0
0x136 DUP1
0x137 REVERT
---
0x134: V95 = 0x0
0x137: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x138
[0x138:0x13f]
---
Predecessors: [0x12d]
Successors: [0x6e0]
---
0x138 JUMPDEST
0x139 PUSH2 0x140
0x13c PUSH2 0x6e0
0x13f JUMP
---
0x138: JUMPDEST 
0x139: V96 = 0x140
0x13c: V97 = 0x6e0
0x13f: JUMP 0x6e0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V12, 0x140]

================================

Block 0x140
[0x140:0x151]
---
Predecessors: [0x6e0, 0x8d4, 0x8da, 0x94c, 0x995, 0x99b, 0x9b0, 0xa1c, 0xa22, 0xa80]
Successors: []
---
0x140 JUMPDEST
0x141 PUSH1 0x40
0x143 MLOAD
0x144 SWAP1
0x145 DUP2
0x146 MSTORE
0x147 PUSH1 0x20
0x149 ADD
0x14a PUSH1 0x40
0x14c MLOAD
0x14d DUP1
0x14e SWAP2
0x14f SUB
0x150 SWAP1
0x151 RETURN
---
0x140: JUMPDEST 
0x141: V98 = 0x40
0x143: V99 = M[0x40]
0x146: M[V99] = S0
0x147: V100 = 0x20
0x149: V101 = ADD 0x20 V99
0x14a: V102 = 0x40
0x14c: V103 = M[0x40]
0x14f: V104 = SUB V101 V103
0x151: RETURN V103 V104
---
Entry stack: [V12, 0x140, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x140]

================================

Block 0x152
[0x152:0x158]
---
Predecessors: [0x25]
Successors: [0x159, 0x15d]
---
0x152 JUMPDEST
0x153 CALLVALUE
0x154 ISZERO
0x155 PUSH2 0x15d
0x158 JUMPI
---
0x152: JUMPDEST 
0x153: V105 = CALLVALUE
0x154: V106 = ISZERO V105
0x155: V107 = 0x15d
0x158: JUMPI 0x15d V106
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x159
[0x159:0x15c]
---
Predecessors: [0x152]
Successors: []
---
0x159 PUSH1 0x0
0x15b DUP1
0x15c REVERT
---
0x159: V108 = 0x0
0x15c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15d
[0x15d:0x164]
---
Predecessors: [0x152]
Successors: [0x6e6]
---
0x15d JUMPDEST
0x15e PUSH2 0x165
0x161 PUSH2 0x6e6
0x164 JUMP
---
0x15d: JUMPDEST 
0x15e: V109 = 0x165
0x161: V110 = 0x6e6
0x164: JUMP 0x6e6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x165]
Exit stack: [V12, 0x165]

================================

Block 0x165
[0x165:0x188]
---
Predecessors: [0x77c]
Successors: [0x189]
---
0x165 JUMPDEST
0x166 PUSH1 0x40
0x168 MLOAD
0x169 PUSH1 0x20
0x16b DUP1
0x16c DUP3
0x16d MSTORE
0x16e DUP2
0x16f SWAP1
0x170 DUP2
0x171 ADD
0x172 DUP4
0x173 DUP2
0x174 DUP2
0x175 MLOAD
0x176 DUP2
0x177 MSTORE
0x178 PUSH1 0x20
0x17a ADD
0x17b SWAP2
0x17c POP
0x17d DUP1
0x17e MLOAD
0x17f SWAP1
0x180 PUSH1 0x20
0x182 ADD
0x183 SWAP1
0x184 DUP1
0x185 DUP4
0x186 DUP4
0x187 PUSH1 0x0
---
0x165: JUMPDEST 
0x166: V111 = 0x40
0x168: V112 = M[0x40]
0x169: V113 = 0x20
0x16d: M[V112] = 0x20
0x171: V114 = ADD V112 0x20
0x175: V115 = M[V658]
0x177: M[V114] = V115
0x178: V116 = 0x20
0x17a: V117 = ADD 0x20 V114
0x17e: V118 = M[V658]
0x180: V119 = 0x20
0x182: V120 = ADD 0x20 V658
0x187: V121 = 0x0
---
Entry stack: [V12, 0x165, V658]
Stack pops: 1
Stack additions: [S0, V112, V112, V117, V120, V118, V118, V117, V120, 0x0]
Exit stack: [V12, 0x165, V658, V112, V112, V117, V120, V118, V118, V117, V120, 0x0]

================================

Block 0x189
[0x189:0x191]
---
Predecessors: [0x165, 0x19a]
Successors: [0x192, 0x1a2]
---
0x189 JUMPDEST
0x18a DUP4
0x18b DUP2
0x18c LT
0x18d ISZERO
0x18e PUSH2 0x1a2
0x191 JUMPI
---
0x189: JUMPDEST 
0x18c: V122 = LT S0 V118
0x18d: V123 = ISZERO V122
0x18e: V124 = 0x1a2
0x191: JUMPI 0x1a2 V123
---
Entry stack: [V12, 0x165, V658, V112, V112, V117, V120, V118, V118, V117, V120, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x165, V658, V112, V112, V117, V120, V118, V118, V117, V120, S0]

================================

Block 0x192
[0x192:0x199]
---
Predecessors: [0x189]
Successors: [0x19a]
---
0x192 DUP1
0x193 DUP3
0x194 ADD
0x195 MLOAD
0x196 DUP2
0x197 DUP5
0x198 ADD
0x199 MSTORE
---
0x194: V125 = ADD V120 S0
0x195: V126 = M[V125]
0x198: V127 = ADD V117 S0
0x199: M[V127] = V126
---
Entry stack: [V12, 0x165, V658, V112, V112, V117, V120, V118, V118, V117, V120, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x165, V658, V112, V112, V117, V120, V118, V118, V117, V120, S0]

================================

Block 0x19a
[0x19a:0x1a1]
---
Predecessors: [0x192]
Successors: [0x189]
---
0x19a JUMPDEST
0x19b PUSH1 0x20
0x19d ADD
0x19e PUSH2 0x189
0x1a1 JUMP
---
0x19a: JUMPDEST 
0x19b: V128 = 0x20
0x19d: V129 = ADD 0x20 S0
0x19e: V130 = 0x189
0x1a1: JUMP 0x189
---
Entry stack: [V12, 0x165, V658, V112, V112, V117, V120, V118, V118, V117, V120, S0]
Stack pops: 1
Stack additions: [V129]
Exit stack: [V12, 0x165, V658, V112, V112, V117, V120, V118, V118, V117, V120, V129]

================================

Block 0x1a2
[0x1a2:0x1b5]
---
Predecessors: [0x189]
Successors: [0x1b6, 0x1cf]
---
0x1a2 JUMPDEST
0x1a3 POP
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 SWAP1
0x1a8 POP
0x1a9 SWAP1
0x1aa DUP2
0x1ab ADD
0x1ac SWAP1
0x1ad PUSH1 0x1f
0x1af AND
0x1b0 DUP1
0x1b1 ISZERO
0x1b2 PUSH2 0x1cf
0x1b5 JUMPI
---
0x1a2: JUMPDEST 
0x1ab: V131 = ADD V118 V117
0x1ad: V132 = 0x1f
0x1af: V133 = AND 0x1f V118
0x1b1: V134 = ISZERO V133
0x1b2: V135 = 0x1cf
0x1b5: JUMPI 0x1cf V134
---
Entry stack: [V12, 0x165, V658, V112, V112, V117, V120, V118, V118, V117, V120, S0]
Stack pops: 7
Stack additions: [V131, V133]
Exit stack: [V12, 0x165, V658, V112, V112, V131, V133]

================================

Block 0x1b6
[0x1b6:0x1ce]
---
Predecessors: [0x1a2]
Successors: [0x1cf]
---
0x1b6 DUP1
0x1b7 DUP3
0x1b8 SUB
0x1b9 DUP1
0x1ba MLOAD
0x1bb PUSH1 0x1
0x1bd DUP4
0x1be PUSH1 0x20
0x1c0 SUB
0x1c1 PUSH2 0x100
0x1c4 EXP
0x1c5 SUB
0x1c6 NOT
0x1c7 AND
0x1c8 DUP2
0x1c9 MSTORE
0x1ca PUSH1 0x20
0x1cc ADD
0x1cd SWAP2
0x1ce POP
---
0x1b8: V136 = SUB V131 V133
0x1ba: V137 = M[V136]
0x1bb: V138 = 0x1
0x1be: V139 = 0x20
0x1c0: V140 = SUB 0x20 V133
0x1c1: V141 = 0x100
0x1c4: V142 = EXP 0x100 V140
0x1c5: V143 = SUB V142 0x1
0x1c6: V144 = NOT V143
0x1c7: V145 = AND V144 V137
0x1c9: M[V136] = V145
0x1ca: V146 = 0x20
0x1cc: V147 = ADD 0x20 V136
---
Entry stack: [V12, 0x165, V658, V112, V112, V131, V133]
Stack pops: 2
Stack additions: [V147, S0]
Exit stack: [V12, 0x165, V658, V112, V112, V147, V133]

================================

Block 0x1cf
[0x1cf:0x1dc]
---
Predecessors: [0x1a2, 0x1b6]
Successors: []
---
0x1cf JUMPDEST
0x1d0 POP
0x1d1 SWAP3
0x1d2 POP
0x1d3 POP
0x1d4 POP
0x1d5 PUSH1 0x40
0x1d7 MLOAD
0x1d8 DUP1
0x1d9 SWAP2
0x1da SUB
0x1db SWAP1
0x1dc RETURN
---
0x1cf: JUMPDEST 
0x1d5: V148 = 0x40
0x1d7: V149 = M[0x40]
0x1da: V150 = SUB S1 V149
0x1dc: RETURN V149 V150
---
Entry stack: [V12, 0x165, V658, V112, V112, S1, V133]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x165]

================================

Block 0x1dd
[0x1dd:0x1e3]
---
Predecessors: [0x30]
Successors: [0x1e4, 0x1e8]
---
0x1dd JUMPDEST
0x1de CALLVALUE
0x1df ISZERO
0x1e0 PUSH2 0x1e8
0x1e3 JUMPI
---
0x1dd: JUMPDEST 
0x1de: V151 = CALLVALUE
0x1df: V152 = ISZERO V151
0x1e0: V153 = 0x1e8
0x1e3: JUMPI 0x1e8 V152
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e4
[0x1e4:0x1e7]
---
Predecessors: [0x1dd]
Successors: []
---
0x1e4 PUSH1 0x0
0x1e6 DUP1
0x1e7 REVERT
---
0x1e4: V154 = 0x0
0x1e7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e8
[0x1e8:0x1ef]
---
Predecessors: [0x1dd]
Successors: [0x784]
---
0x1e8 JUMPDEST
0x1e9 PUSH2 0x129
0x1ec PUSH2 0x784
0x1ef JUMP
---
0x1e8: JUMPDEST 
0x1e9: V155 = 0x129
0x1ec: V156 = 0x784
0x1ef: JUMP 0x784
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x129]
Exit stack: [V12, 0x129]

================================

Block 0x1f0
[0x1f0:0x1f1]
---
Predecessors: []
Successors: []
---
0x1f0 JUMPDEST
0x1f1 STOP
---
0x1f0: JUMPDEST 
0x1f1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f2
[0x1f2:0x1f8]
---
Predecessors: [0x3b]
Successors: [0x1f9, 0x1fd]
---
0x1f2 JUMPDEST
0x1f3 CALLVALUE
0x1f4 ISZERO
0x1f5 PUSH2 0x1fd
0x1f8 JUMPI
---
0x1f2: JUMPDEST 
0x1f3: V157 = CALLVALUE
0x1f4: V158 = ISZERO V157
0x1f5: V159 = 0x1fd
0x1f8: JUMPI 0x1fd V158
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f9
[0x1f9:0x1fc]
---
Predecessors: [0x1f2]
Successors: []
---
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc REVERT
---
0x1f9: V160 = 0x0
0x1fc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fd
[0x1fd:0x204]
---
Predecessors: [0x1f2]
Successors: [0x8d4]
---
0x1fd JUMPDEST
0x1fe PUSH2 0x140
0x201 PUSH2 0x8d4
0x204 JUMP
---
0x1fd: JUMPDEST 
0x1fe: V161 = 0x140
0x201: V162 = 0x8d4
0x204: JUMP 0x8d4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V12, 0x140]

================================

Block 0x205
[0x205:0x216]
---
Predecessors: []
Successors: []
---
0x205 JUMPDEST
0x206 PUSH1 0x40
0x208 MLOAD
0x209 SWAP1
0x20a DUP2
0x20b MSTORE
0x20c PUSH1 0x20
0x20e ADD
0x20f PUSH1 0x40
0x211 MLOAD
0x212 DUP1
0x213 SWAP2
0x214 SUB
0x215 SWAP1
0x216 RETURN
---
0x205: JUMPDEST 
0x206: V163 = 0x40
0x208: V164 = M[0x40]
0x20b: M[V164] = S0
0x20c: V165 = 0x20
0x20e: V166 = ADD 0x20 V164
0x20f: V167 = 0x40
0x211: V168 = M[0x40]
0x214: V169 = SUB V166 V168
0x216: RETURN V168 V169
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x217
[0x217:0x21d]
---
Predecessors: [0x46]
Successors: [0x21e, 0x222]
---
0x217 JUMPDEST
0x218 CALLVALUE
0x219 ISZERO
0x21a PUSH2 0x222
0x21d JUMPI
---
0x217: JUMPDEST 
0x218: V170 = CALLVALUE
0x219: V171 = ISZERO V170
0x21a: V172 = 0x222
0x21d: JUMPI 0x222 V171
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21e
[0x21e:0x221]
---
Predecessors: [0x217]
Successors: []
---
0x21e PUSH1 0x0
0x220 DUP1
0x221 REVERT
---
0x21e: V173 = 0x0
0x221: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x222
[0x222:0x229]
---
Predecessors: [0x217]
Successors: [0x8da]
---
0x222 JUMPDEST
0x223 PUSH2 0x140
0x226 PUSH2 0x8da
0x229 JUMP
---
0x222: JUMPDEST 
0x223: V174 = 0x140
0x226: V175 = 0x8da
0x229: JUMP 0x8da
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V12, 0x140]

================================

Block 0x22a
[0x22a:0x23b]
---
Predecessors: []
Successors: []
---
0x22a JUMPDEST
0x22b PUSH1 0x40
0x22d MLOAD
0x22e SWAP1
0x22f DUP2
0x230 MSTORE
0x231 PUSH1 0x20
0x233 ADD
0x234 PUSH1 0x40
0x236 MLOAD
0x237 DUP1
0x238 SWAP2
0x239 SUB
0x23a SWAP1
0x23b RETURN
---
0x22a: JUMPDEST 
0x22b: V176 = 0x40
0x22d: V177 = M[0x40]
0x230: M[V177] = S0
0x231: V178 = 0x20
0x233: V179 = ADD 0x20 V177
0x234: V180 = 0x40
0x236: V181 = M[0x40]
0x239: V182 = SUB V179 V181
0x23b: RETURN V181 V182
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x23c
[0x23c:0x242]
---
Predecessors: [0x51]
Successors: [0x243, 0x247]
---
0x23c JUMPDEST
0x23d CALLVALUE
0x23e ISZERO
0x23f PUSH2 0x247
0x242 JUMPI
---
0x23c: JUMPDEST 
0x23d: V183 = CALLVALUE
0x23e: V184 = ISZERO V183
0x23f: V185 = 0x247
0x242: JUMPI 0x247 V184
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x243
[0x243:0x246]
---
Predecessors: [0x23c]
Successors: []
---
0x243 PUSH1 0x0
0x245 DUP1
0x246 REVERT
---
0x243: V186 = 0x0
0x246: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x247
[0x247:0x24e]
---
Predecessors: [0x23c]
Successors: [0x8e0]
---
0x247 JUMPDEST
0x248 PUSH2 0x24f
0x24b PUSH2 0x8e0
0x24e JUMP
---
0x247: JUMPDEST 
0x248: V187 = 0x24f
0x24b: V188 = 0x8e0
0x24e: JUMP 0x8e0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x24f]
Exit stack: [V12, 0x24f]

================================

Block 0x24f
[0x24f:0x26a]
---
Predecessors: [0x8e0, 0x9a1, 0xa86]
Successors: []
---
0x24f JUMPDEST
0x250 PUSH1 0x40
0x252 MLOAD
0x253 PUSH1 0x1
0x255 PUSH1 0xa0
0x257 PUSH1 0x2
0x259 EXP
0x25a SUB
0x25b SWAP1
0x25c SWAP2
0x25d AND
0x25e DUP2
0x25f MSTORE
0x260 PUSH1 0x20
0x262 ADD
0x263 PUSH1 0x40
0x265 MLOAD
0x266 DUP1
0x267 SWAP2
0x268 SUB
0x269 SWAP1
0x26a RETURN
---
0x24f: JUMPDEST 
0x250: V189 = 0x40
0x252: V190 = M[0x40]
0x253: V191 = 0x1
0x255: V192 = 0xa0
0x257: V193 = 0x2
0x259: V194 = EXP 0x2 0xa0
0x25a: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25d: V196 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x25f: M[V190] = V196
0x260: V197 = 0x20
0x262: V198 = ADD 0x20 V190
0x263: V199 = 0x40
0x265: V200 = M[0x40]
0x268: V201 = SUB V198 V200
0x26a: RETURN V200 V201
---
Entry stack: [V12, 0x24f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x24f]

================================

Block 0x26b
[0x26b:0x271]
---
Predecessors: [0x5c]
Successors: [0x272, 0x276]
---
0x26b JUMPDEST
0x26c CALLVALUE
0x26d ISZERO
0x26e PUSH2 0x276
0x271 JUMPI
---
0x26b: JUMPDEST 
0x26c: V202 = CALLVALUE
0x26d: V203 = ISZERO V202
0x26e: V204 = 0x276
0x271: JUMPI 0x276 V203
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x272
[0x272:0x275]
---
Predecessors: [0x26b]
Successors: []
---
0x272 PUSH1 0x0
0x274 DUP1
0x275 REVERT
---
0x272: V205 = 0x0
0x275: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x276
[0x276:0x27d]
---
Predecessors: [0x26b]
Successors: [0x8ef]
---
0x276 JUMPDEST
0x277 PUSH2 0x129
0x27a PUSH2 0x8ef
0x27d JUMP
---
0x276: JUMPDEST 
0x277: V206 = 0x129
0x27a: V207 = 0x8ef
0x27d: JUMP 0x8ef
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x129]
Exit stack: [V12, 0x129]

================================

Block 0x27e
[0x27e:0x27f]
---
Predecessors: []
Successors: []
---
0x27e JUMPDEST
0x27f STOP
---
0x27e: JUMPDEST 
0x27f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x280
[0x280:0x286]
---
Predecessors: [0x67]
Successors: [0x287, 0x28b]
---
0x280 JUMPDEST
0x281 CALLVALUE
0x282 ISZERO
0x283 PUSH2 0x28b
0x286 JUMPI
---
0x280: JUMPDEST 
0x281: V208 = CALLVALUE
0x282: V209 = ISZERO V208
0x283: V210 = 0x28b
0x286: JUMPI 0x28b V209
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x287
[0x287:0x28a]
---
Predecessors: [0x280]
Successors: []
---
0x287 PUSH1 0x0
0x289 DUP1
0x28a REVERT
---
0x287: V211 = 0x0
0x28a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28b
[0x28b:0x292]
---
Predecessors: [0x280]
Successors: [0x94c]
---
0x28b JUMPDEST
0x28c PUSH2 0x140
0x28f PUSH2 0x94c
0x292 JUMP
---
0x28b: JUMPDEST 
0x28c: V212 = 0x140
0x28f: V213 = 0x94c
0x292: JUMP 0x94c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V12, 0x140]

================================

Block 0x293
[0x293:0x2a4]
---
Predecessors: []
Successors: []
---
0x293 JUMPDEST
0x294 PUSH1 0x40
0x296 MLOAD
0x297 SWAP1
0x298 DUP2
0x299 MSTORE
0x29a PUSH1 0x20
0x29c ADD
0x29d PUSH1 0x40
0x29f MLOAD
0x2a0 DUP1
0x2a1 SWAP2
0x2a2 SUB
0x2a3 SWAP1
0x2a4 RETURN
---
0x293: JUMPDEST 
0x294: V214 = 0x40
0x296: V215 = M[0x40]
0x299: M[V215] = S0
0x29a: V216 = 0x20
0x29c: V217 = ADD 0x20 V215
0x29d: V218 = 0x40
0x29f: V219 = M[0x40]
0x2a2: V220 = SUB V217 V219
0x2a4: RETURN V219 V220
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2a5
[0x2a5:0x2ab]
---
Predecessors: [0x72]
Successors: [0x2ac, 0x2b0]
---
0x2a5 JUMPDEST
0x2a6 CALLVALUE
0x2a7 ISZERO
0x2a8 PUSH2 0x2b0
0x2ab JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V221 = CALLVALUE
0x2a7: V222 = ISZERO V221
0x2a8: V223 = 0x2b0
0x2ab: JUMPI 0x2b0 V222
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ac
[0x2ac:0x2af]
---
Predecessors: [0x2a5]
Successors: []
---
0x2ac PUSH1 0x0
0x2ae DUP1
0x2af REVERT
---
0x2ac: V224 = 0x0
0x2af: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b0
[0x2b0:0x2b7]
---
Predecessors: [0x2a5]
Successors: [0x952]
---
0x2b0 JUMPDEST
0x2b1 PUSH2 0x129
0x2b4 PUSH2 0x952
0x2b7 JUMP
---
0x2b0: JUMPDEST 
0x2b1: V225 = 0x129
0x2b4: V226 = 0x952
0x2b7: JUMP 0x952
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x129]
Exit stack: [V12, 0x129]

================================

Block 0x2b8
[0x2b8:0x2b9]
---
Predecessors: []
Successors: []
---
0x2b8 JUMPDEST
0x2b9 STOP
---
0x2b8: JUMPDEST 
0x2b9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ba
[0x2ba:0x2c0]
---
Predecessors: [0x7d]
Successors: [0x2c1, 0x2c5]
---
0x2ba JUMPDEST
0x2bb CALLVALUE
0x2bc ISZERO
0x2bd PUSH2 0x2c5
0x2c0 JUMPI
---
0x2ba: JUMPDEST 
0x2bb: V227 = CALLVALUE
0x2bc: V228 = ISZERO V227
0x2bd: V229 = 0x2c5
0x2c0: JUMPI 0x2c5 V228
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c1
[0x2c1:0x2c4]
---
Predecessors: [0x2ba]
Successors: []
---
0x2c1 PUSH1 0x0
0x2c3 DUP1
0x2c4 REVERT
---
0x2c1: V230 = 0x0
0x2c4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c5
[0x2c5:0x2cc]
---
Predecessors: [0x2ba]
Successors: [0x995]
---
0x2c5 JUMPDEST
0x2c6 PUSH2 0x140
0x2c9 PUSH2 0x995
0x2cc JUMP
---
0x2c5: JUMPDEST 
0x2c6: V231 = 0x140
0x2c9: V232 = 0x995
0x2cc: JUMP 0x995
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V12, 0x140]

================================

Block 0x2cd
[0x2cd:0x2de]
---
Predecessors: []
Successors: []
---
0x2cd JUMPDEST
0x2ce PUSH1 0x40
0x2d0 MLOAD
0x2d1 SWAP1
0x2d2 DUP2
0x2d3 MSTORE
0x2d4 PUSH1 0x20
0x2d6 ADD
0x2d7 PUSH1 0x40
0x2d9 MLOAD
0x2da DUP1
0x2db SWAP2
0x2dc SUB
0x2dd SWAP1
0x2de RETURN
---
0x2cd: JUMPDEST 
0x2ce: V233 = 0x40
0x2d0: V234 = M[0x40]
0x2d3: M[V234] = S0
0x2d4: V235 = 0x20
0x2d6: V236 = ADD 0x20 V234
0x2d7: V237 = 0x40
0x2d9: V238 = M[0x40]
0x2dc: V239 = SUB V236 V238
0x2de: RETURN V238 V239
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2df
[0x2df:0x2e5]
---
Predecessors: [0x88]
Successors: [0x2e6, 0x2ea]
---
0x2df JUMPDEST
0x2e0 CALLVALUE
0x2e1 ISZERO
0x2e2 PUSH2 0x2ea
0x2e5 JUMPI
---
0x2df: JUMPDEST 
0x2e0: V240 = CALLVALUE
0x2e1: V241 = ISZERO V240
0x2e2: V242 = 0x2ea
0x2e5: JUMPI 0x2ea V241
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e6
[0x2e6:0x2e9]
---
Predecessors: [0x2df]
Successors: []
---
0x2e6 PUSH1 0x0
0x2e8 DUP1
0x2e9 REVERT
---
0x2e6: V243 = 0x0
0x2e9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ea
[0x2ea:0x2f1]
---
Predecessors: [0x2df]
Successors: [0x99b]
---
0x2ea JUMPDEST
0x2eb PUSH2 0x140
0x2ee PUSH2 0x99b
0x2f1 JUMP
---
0x2ea: JUMPDEST 
0x2eb: V244 = 0x140
0x2ee: V245 = 0x99b
0x2f1: JUMP 0x99b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V12, 0x140]

================================

Block 0x2f2
[0x2f2:0x303]
---
Predecessors: []
Successors: []
---
0x2f2 JUMPDEST
0x2f3 PUSH1 0x40
0x2f5 MLOAD
0x2f6 SWAP1
0x2f7 DUP2
0x2f8 MSTORE
0x2f9 PUSH1 0x20
0x2fb ADD
0x2fc PUSH1 0x40
0x2fe MLOAD
0x2ff DUP1
0x300 SWAP2
0x301 SUB
0x302 SWAP1
0x303 RETURN
---
0x2f2: JUMPDEST 
0x2f3: V246 = 0x40
0x2f5: V247 = M[0x40]
0x2f8: M[V247] = S0
0x2f9: V248 = 0x20
0x2fb: V249 = ADD 0x20 V247
0x2fc: V250 = 0x40
0x2fe: V251 = M[0x40]
0x301: V252 = SUB V249 V251
0x303: RETURN V251 V252
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x304
[0x304:0x30a]
---
Predecessors: [0x93]
Successors: [0x30b, 0x30f]
---
0x304 JUMPDEST
0x305 CALLVALUE
0x306 ISZERO
0x307 PUSH2 0x30f
0x30a JUMPI
---
0x304: JUMPDEST 
0x305: V253 = CALLVALUE
0x306: V254 = ISZERO V253
0x307: V255 = 0x30f
0x30a: JUMPI 0x30f V254
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x30b
[0x30b:0x30e]
---
Predecessors: [0x304]
Successors: []
---
0x30b PUSH1 0x0
0x30d DUP1
0x30e REVERT
---
0x30b: V256 = 0x0
0x30e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x30f
[0x30f:0x316]
---
Predecessors: [0x304]
Successors: [0x9a1]
---
0x30f JUMPDEST
0x310 PUSH2 0x24f
0x313 PUSH2 0x9a1
0x316 JUMP
---
0x30f: JUMPDEST 
0x310: V257 = 0x24f
0x313: V258 = 0x9a1
0x316: JUMP 0x9a1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x24f]
Exit stack: [V12, 0x24f]

================================

Block 0x317
[0x317:0x332]
---
Predecessors: []
Successors: []
---
0x317 JUMPDEST
0x318 PUSH1 0x40
0x31a MLOAD
0x31b PUSH1 0x1
0x31d PUSH1 0xa0
0x31f PUSH1 0x2
0x321 EXP
0x322 SUB
0x323 SWAP1
0x324 SWAP2
0x325 AND
0x326 DUP2
0x327 MSTORE
0x328 PUSH1 0x20
0x32a ADD
0x32b PUSH1 0x40
0x32d MLOAD
0x32e DUP1
0x32f SWAP2
0x330 SUB
0x331 SWAP1
0x332 RETURN
---
0x317: JUMPDEST 
0x318: V259 = 0x40
0x31a: V260 = M[0x40]
0x31b: V261 = 0x1
0x31d: V262 = 0xa0
0x31f: V263 = 0x2
0x321: V264 = EXP 0x2 0xa0
0x322: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x325: V266 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x327: M[V260] = V266
0x328: V267 = 0x20
0x32a: V268 = ADD 0x20 V260
0x32b: V269 = 0x40
0x32d: V270 = M[0x40]
0x330: V271 = SUB V268 V270
0x332: RETURN V270 V271
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x333
[0x333:0x339]
---
Predecessors: [0x9e]
Successors: [0x33a, 0x33e]
---
0x333 JUMPDEST
0x334 CALLVALUE
0x335 ISZERO
0x336 PUSH2 0x33e
0x339 JUMPI
---
0x333: JUMPDEST 
0x334: V272 = CALLVALUE
0x335: V273 = ISZERO V272
0x336: V274 = 0x33e
0x339: JUMPI 0x33e V273
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33a
[0x33a:0x33d]
---
Predecessors: [0x333]
Successors: []
---
0x33a PUSH1 0x0
0x33c DUP1
0x33d REVERT
---
0x33a: V275 = 0x0
0x33d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33e
[0x33e:0x345]
---
Predecessors: [0x333]
Successors: [0x9b0]
---
0x33e JUMPDEST
0x33f PUSH2 0x140
0x342 PUSH2 0x9b0
0x345 JUMP
---
0x33e: JUMPDEST 
0x33f: V276 = 0x140
0x342: V277 = 0x9b0
0x345: JUMP 0x9b0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V12, 0x140]

================================

Block 0x346
[0x346:0x357]
---
Predecessors: []
Successors: []
---
0x346 JUMPDEST
0x347 PUSH1 0x40
0x349 MLOAD
0x34a SWAP1
0x34b DUP2
0x34c MSTORE
0x34d PUSH1 0x20
0x34f ADD
0x350 PUSH1 0x40
0x352 MLOAD
0x353 DUP1
0x354 SWAP2
0x355 SUB
0x356 SWAP1
0x357 RETURN
---
0x346: JUMPDEST 
0x347: V278 = 0x40
0x349: V279 = M[0x40]
0x34c: M[V279] = S0
0x34d: V280 = 0x20
0x34f: V281 = ADD 0x20 V279
0x350: V282 = 0x40
0x352: V283 = M[0x40]
0x355: V284 = SUB V281 V283
0x357: RETURN V283 V284
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x358
[0x358:0x35e]
---
Predecessors: [0xa9]
Successors: [0x35f, 0x363]
---
0x358 JUMPDEST
0x359 CALLVALUE
0x35a ISZERO
0x35b PUSH2 0x363
0x35e JUMPI
---
0x358: JUMPDEST 
0x359: V285 = CALLVALUE
0x35a: V286 = ISZERO V285
0x35b: V287 = 0x363
0x35e: JUMPI 0x363 V286
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35f
[0x35f:0x362]
---
Predecessors: [0x358]
Successors: []
---
0x35f PUSH1 0x0
0x361 DUP1
0x362 REVERT
---
0x35f: V288 = 0x0
0x362: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x363
[0x363:0x36a]
---
Predecessors: [0x358]
Successors: [0x9b6]
---
0x363 JUMPDEST
0x364 PUSH2 0x36b
0x367 PUSH2 0x9b6
0x36a JUMP
---
0x363: JUMPDEST 
0x364: V289 = 0x36b
0x367: V290 = 0x9b6
0x36a: JUMP 0x9b6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x36b]
Exit stack: [V12, 0x36b]

================================

Block 0x36b
[0x36b:0x37e]
---
Predecessors: [0x9b6]
Successors: []
---
0x36b JUMPDEST
0x36c PUSH1 0x40
0x36e MLOAD
0x36f SWAP1
0x370 ISZERO
0x371 ISZERO
0x372 DUP2
0x373 MSTORE
0x374 PUSH1 0x20
0x376 ADD
0x377 PUSH1 0x40
0x379 MLOAD
0x37a DUP1
0x37b SWAP2
0x37c SUB
0x37d SWAP1
0x37e RETURN
---
0x36b: JUMPDEST 
0x36c: V291 = 0x40
0x36e: V292 = M[0x40]
0x370: V293 = ISZERO V944
0x371: V294 = ISZERO V293
0x373: M[V292] = V294
0x374: V295 = 0x20
0x376: V296 = ADD 0x20 V292
0x377: V297 = 0x40
0x379: V298 = M[0x40]
0x37c: V299 = SUB V296 V298
0x37e: RETURN V298 V299
---
Entry stack: [V12, 0x36b, V944]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x36b]

================================

Block 0x37f
[0x37f:0x385]
---
Predecessors: [0xb4]
Successors: [0x386, 0x38a]
---
0x37f JUMPDEST
0x380 CALLVALUE
0x381 ISZERO
0x382 PUSH2 0x38a
0x385 JUMPI
---
0x37f: JUMPDEST 
0x380: V300 = CALLVALUE
0x381: V301 = ISZERO V300
0x382: V302 = 0x38a
0x385: JUMPI 0x38a V301
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x386
[0x386:0x389]
---
Predecessors: [0x37f]
Successors: []
---
0x386 PUSH1 0x0
0x388 DUP1
0x389 REVERT
---
0x386: V303 = 0x0
0x389: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x38a
[0x38a:0x391]
---
Predecessors: [0x37f]
Successors: [0x9c6]
---
0x38a JUMPDEST
0x38b PUSH2 0x129
0x38e PUSH2 0x9c6
0x391 JUMP
---
0x38a: JUMPDEST 
0x38b: V304 = 0x129
0x38e: V305 = 0x9c6
0x391: JUMP 0x9c6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x129]
Exit stack: [V12, 0x129]

================================

Block 0x392
[0x392:0x393]
---
Predecessors: []
Successors: []
---
0x392 JUMPDEST
0x393 STOP
---
0x392: JUMPDEST 
0x393: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x394
[0x394:0x39a]
---
Predecessors: [0xbf]
Successors: [0x39b, 0x39f]
---
0x394 JUMPDEST
0x395 CALLVALUE
0x396 ISZERO
0x397 PUSH2 0x39f
0x39a JUMPI
---
0x394: JUMPDEST 
0x395: V306 = CALLVALUE
0x396: V307 = ISZERO V306
0x397: V308 = 0x39f
0x39a: JUMPI 0x39f V307
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39b
[0x39b:0x39e]
---
Predecessors: [0x394]
Successors: []
---
0x39b PUSH1 0x0
0x39d DUP1
0x39e REVERT
---
0x39b: V309 = 0x0
0x39e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39f
[0x39f:0x3a6]
---
Predecessors: [0x394]
Successors: [0xa1c]
---
0x39f JUMPDEST
0x3a0 PUSH2 0x140
0x3a3 PUSH2 0xa1c
0x3a6 JUMP
---
0x39f: JUMPDEST 
0x3a0: V310 = 0x140
0x3a3: V311 = 0xa1c
0x3a6: JUMP 0xa1c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V12, 0x140]

================================

Block 0x3a7
[0x3a7:0x3b8]
---
Predecessors: []
Successors: []
---
0x3a7 JUMPDEST
0x3a8 PUSH1 0x40
0x3aa MLOAD
0x3ab SWAP1
0x3ac DUP2
0x3ad MSTORE
0x3ae PUSH1 0x20
0x3b0 ADD
0x3b1 PUSH1 0x40
0x3b3 MLOAD
0x3b4 DUP1
0x3b5 SWAP2
0x3b6 SUB
0x3b7 SWAP1
0x3b8 RETURN
---
0x3a7: JUMPDEST 
0x3a8: V312 = 0x40
0x3aa: V313 = M[0x40]
0x3ad: M[V313] = S0
0x3ae: V314 = 0x20
0x3b0: V315 = ADD 0x20 V313
0x3b1: V316 = 0x40
0x3b3: V317 = M[0x40]
0x3b6: V318 = SUB V315 V317
0x3b8: RETURN V317 V318
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3b9
[0x3b9:0x3bf]
---
Predecessors: [0xca]
Successors: [0x3c0, 0x3c4]
---
0x3b9 JUMPDEST
0x3ba CALLVALUE
0x3bb ISZERO
0x3bc PUSH2 0x3c4
0x3bf JUMPI
---
0x3b9: JUMPDEST 
0x3ba: V319 = CALLVALUE
0x3bb: V320 = ISZERO V319
0x3bc: V321 = 0x3c4
0x3bf: JUMPI 0x3c4 V320
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c0
[0x3c0:0x3c3]
---
Predecessors: [0x3b9]
Successors: []
---
0x3c0 PUSH1 0x0
0x3c2 DUP1
0x3c3 REVERT
---
0x3c0: V322 = 0x0
0x3c3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c4
[0x3c4:0x3cb]
---
Predecessors: [0x3b9]
Successors: [0xa22]
---
0x3c4 JUMPDEST
0x3c5 PUSH2 0x140
0x3c8 PUSH2 0xa22
0x3cb JUMP
---
0x3c4: JUMPDEST 
0x3c5: V323 = 0x140
0x3c8: V324 = 0xa22
0x3cb: JUMP 0xa22
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V12, 0x140]

================================

Block 0x3cc
[0x3cc:0x3dd]
---
Predecessors: []
Successors: []
---
0x3cc JUMPDEST
0x3cd PUSH1 0x40
0x3cf MLOAD
0x3d0 SWAP1
0x3d1 DUP2
0x3d2 MSTORE
0x3d3 PUSH1 0x20
0x3d5 ADD
0x3d6 PUSH1 0x40
0x3d8 MLOAD
0x3d9 DUP1
0x3da SWAP2
0x3db SUB
0x3dc SWAP1
0x3dd RETURN
---
0x3cc: JUMPDEST 
0x3cd: V325 = 0x40
0x3cf: V326 = M[0x40]
0x3d2: M[V326] = S0
0x3d3: V327 = 0x20
0x3d5: V328 = ADD 0x20 V326
0x3d6: V329 = 0x40
0x3d8: V330 = M[0x40]
0x3db: V331 = SUB V328 V330
0x3dd: RETURN V330 V331
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3de
[0x3de:0x3e4]
---
Predecessors: [0xd5]
Successors: [0x3e5, 0x3e9]
---
0x3de JUMPDEST
0x3df CALLVALUE
0x3e0 ISZERO
0x3e1 PUSH2 0x3e9
0x3e4 JUMPI
---
0x3de: JUMPDEST 
0x3df: V332 = CALLVALUE
0x3e0: V333 = ISZERO V332
0x3e1: V334 = 0x3e9
0x3e4: JUMPI 0x3e9 V333
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e5
[0x3e5:0x3e8]
---
Predecessors: [0x3de]
Successors: []
---
0x3e5 PUSH1 0x0
0x3e7 DUP1
0x3e8 REVERT
---
0x3e5: V335 = 0x0
0x3e8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e9
[0x3e9:0x3fc]
---
Predecessors: [0x3de]
Successors: [0xa28]
---
0x3e9 JUMPDEST
0x3ea PUSH2 0x129
0x3ed PUSH1 0x1
0x3ef PUSH1 0xa0
0x3f1 PUSH1 0x2
0x3f3 EXP
0x3f4 SUB
0x3f5 PUSH1 0x4
0x3f7 CALLDATALOAD
0x3f8 AND
0x3f9 PUSH2 0xa28
0x3fc JUMP
---
0x3e9: JUMPDEST 
0x3ea: V336 = 0x129
0x3ed: V337 = 0x1
0x3ef: V338 = 0xa0
0x3f1: V339 = 0x2
0x3f3: V340 = EXP 0x2 0xa0
0x3f4: V341 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f5: V342 = 0x4
0x3f7: V343 = CALLDATALOAD 0x4
0x3f8: V344 = AND V343 0xffffffffffffffffffffffffffffffffffffffff
0x3f9: V345 = 0xa28
0x3fc: JUMP 0xa28
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x129, V344]
Exit stack: [V12, 0x129, V344]

================================

Block 0x3fd
[0x3fd:0x3fe]
---
Predecessors: []
Successors: []
---
0x3fd JUMPDEST
0x3fe STOP
---
0x3fd: JUMPDEST 
0x3fe: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3ff
[0x3ff:0x405]
---
Predecessors: [0xe0]
Successors: [0x406, 0x40a]
---
0x3ff JUMPDEST
0x400 CALLVALUE
0x401 ISZERO
0x402 PUSH2 0x40a
0x405 JUMPI
---
0x3ff: JUMPDEST 
0x400: V346 = CALLVALUE
0x401: V347 = ISZERO V346
0x402: V348 = 0x40a
0x405: JUMPI 0x40a V347
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x406
[0x406:0x409]
---
Predecessors: [0x3ff]
Successors: []
---
0x406 PUSH1 0x0
0x408 DUP1
0x409 REVERT
---
0x406: V349 = 0x0
0x409: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x40a
[0x40a:0x411]
---
Predecessors: [0x3ff]
Successors: [0xa80]
---
0x40a JUMPDEST
0x40b PUSH2 0x140
0x40e PUSH2 0xa80
0x411 JUMP
---
0x40a: JUMPDEST 
0x40b: V350 = 0x140
0x40e: V351 = 0xa80
0x411: JUMP 0xa80
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V12, 0x140]

================================

Block 0x412
[0x412:0x423]
---
Predecessors: []
Successors: []
---
0x412 JUMPDEST
0x413 PUSH1 0x40
0x415 MLOAD
0x416 SWAP1
0x417 DUP2
0x418 MSTORE
0x419 PUSH1 0x20
0x41b ADD
0x41c PUSH1 0x40
0x41e MLOAD
0x41f DUP1
0x420 SWAP2
0x421 SUB
0x422 SWAP1
0x423 RETURN
---
0x412: JUMPDEST 
0x413: V352 = 0x40
0x415: V353 = M[0x40]
0x418: M[V353] = S0
0x419: V354 = 0x20
0x41b: V355 = ADD 0x20 V353
0x41c: V356 = 0x40
0x41e: V357 = M[0x40]
0x421: V358 = SUB V355 V357
0x423: RETURN V357 V358
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x424
[0x424:0x42a]
---
Predecessors: [0xeb]
Successors: [0x42b, 0x42f]
---
0x424 JUMPDEST
0x425 CALLVALUE
0x426 ISZERO
0x427 PUSH2 0x42f
0x42a JUMPI
---
0x424: JUMPDEST 
0x425: V359 = CALLVALUE
0x426: V360 = ISZERO V359
0x427: V361 = 0x42f
0x42a: JUMPI 0x42f V360
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x42b
[0x42b:0x42e]
---
Predecessors: [0x424]
Successors: []
---
0x42b PUSH1 0x0
0x42d DUP1
0x42e REVERT
---
0x42b: V362 = 0x0
0x42e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x42f
[0x42f:0x436]
---
Predecessors: [0x424]
Successors: [0xa86]
---
0x42f JUMPDEST
0x430 PUSH2 0x24f
0x433 PUSH2 0xa86
0x436 JUMP
---
0x42f: JUMPDEST 
0x430: V363 = 0x24f
0x433: V364 = 0xa86
0x436: JUMP 0xa86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x24f]
Exit stack: [V12, 0x24f]

================================

Block 0x437
[0x437:0x452]
---
Predecessors: []
Successors: []
---
0x437 JUMPDEST
0x438 PUSH1 0x40
0x43a MLOAD
0x43b PUSH1 0x1
0x43d PUSH1 0xa0
0x43f PUSH1 0x2
0x441 EXP
0x442 SUB
0x443 SWAP1
0x444 SWAP2
0x445 AND
0x446 DUP2
0x447 MSTORE
0x448 PUSH1 0x20
0x44a ADD
0x44b PUSH1 0x40
0x44d MLOAD
0x44e DUP1
0x44f SWAP2
0x450 SUB
0x451 SWAP1
0x452 RETURN
---
0x437: JUMPDEST 
0x438: V365 = 0x40
0x43a: V366 = M[0x40]
0x43b: V367 = 0x1
0x43d: V368 = 0xa0
0x43f: V369 = 0x2
0x441: V370 = EXP 0x2 0xa0
0x442: V371 = SUB 0x10000000000000000000000000000000000000000 0x1
0x445: V372 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x447: M[V366] = V372
0x448: V373 = 0x20
0x44a: V374 = ADD 0x20 V366
0x44b: V375 = 0x40
0x44d: V376 = M[0x40]
0x450: V377 = SUB V374 V376
0x452: RETURN V376 V377
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x453
[0x453:0x462]
---
Predecessors: [0x120]
Successors: [0x463, 0x467]
---
0x453 JUMPDEST
0x454 PUSH1 0x0
0x456 PUSH1 0xc
0x458 SLOAD
0x459 DUP1
0x45a TIMESTAMP
0x45b LT
0x45c ISZERO
0x45d ISZERO
0x45e ISZERO
0x45f PUSH2 0x467
0x462 JUMPI
---
0x453: JUMPDEST 
0x454: V378 = 0x0
0x456: V379 = 0xc
0x458: V380 = S[0xc]
0x45a: V381 = TIMESTAMP
0x45b: V382 = LT V381 V380
0x45c: V383 = ISZERO V382
0x45d: V384 = ISZERO V383
0x45e: V385 = ISZERO V384
0x45f: V386 = 0x467
0x462: JUMPI 0x467 V385
---
Entry stack: [V12, 0x129, V90]
Stack pops: 0
Stack additions: [0x0, V380]
Exit stack: [V12, 0x129, V90, 0x0, V380]

================================

Block 0x463
[0x463:0x466]
---
Predecessors: [0x453]
Successors: []
---
0x463 PUSH1 0x0
0x465 DUP1
0x466 REVERT
---
0x463: V387 = 0x0
0x466: REVERT 0x0 0x0
---
Entry stack: [V12, 0x129, V90, 0x0, V380]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129, V90, 0x0, V380]

================================

Block 0x467
[0x467:0x473]
---
Predecessors: [0x453]
Successors: [0x474, 0x478]
---
0x467 JUMPDEST
0x468 PUSH1 0xd
0x46a SLOAD
0x46b TIMESTAMP
0x46c DUP2
0x46d SWAP1
0x46e GT
0x46f ISZERO
0x470 PUSH2 0x478
0x473 JUMPI
---
0x467: JUMPDEST 
0x468: V388 = 0xd
0x46a: V389 = S[0xd]
0x46b: V390 = TIMESTAMP
0x46e: V391 = GT V390 V389
0x46f: V392 = ISZERO V391
0x470: V393 = 0x478
0x473: JUMPI 0x478 V392
---
Entry stack: [V12, 0x129, V90, 0x0, V380]
Stack pops: 0
Stack additions: [V389]
Exit stack: [V12, 0x129, V90, 0x0, V380, V389]

================================

Block 0x474
[0x474:0x477]
---
Predecessors: [0x467]
Successors: []
---
0x474 PUSH1 0x0
0x476 DUP1
0x477 REVERT
---
0x474: V394 = 0x0
0x477: REVERT 0x0 0x0
---
Entry stack: [V12, 0x129, V90, 0x0, V380, V389]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129, V90, 0x0, V380, V389]

================================

Block 0x478
[0x478:0x48d]
---
Predecessors: [0x467]
Successors: [0xa95]
---
0x478 JUMPDEST
0x479 PUSH1 0x4
0x47b SLOAD
0x47c PUSH1 0x5
0x47e SLOAD
0x47f PUSH2 0x48e
0x482 SWAP1
0x483 CALLVALUE
0x484 PUSH4 0xffffffff
0x489 PUSH2 0xa95
0x48c AND
0x48d JUMP
---
0x478: JUMPDEST 
0x479: V395 = 0x4
0x47b: V396 = S[0x4]
0x47c: V397 = 0x5
0x47e: V398 = S[0x5]
0x47f: V399 = 0x48e
0x483: V400 = CALLVALUE
0x484: V401 = 0xffffffff
0x489: V402 = 0xa95
0x48c: V403 = AND 0xa95 0xffffffff
0x48d: JUMP 0xa95
---
Entry stack: [V12, 0x129, V90, 0x0, V380, V389]
Stack pops: 0
Stack additions: [V396, 0x48e, V398, V400]
Exit stack: [V12, 0x129, V90, 0x0, V380, V389, V396, 0x48e, V398, V400]

================================

Block 0x48e
[0x48e:0x494]
---
Predecessors: [0xaa8]
Successors: [0x495, 0x496]
---
0x48e JUMPDEST
0x48f GT
0x490 ISZERO
0x491 PUSH2 0x496
0x494 JUMPI
---
0x48e: JUMPDEST 
0x48f: V404 = GT S0 S1
0x490: V405 = ISZERO V404
0x491: V406 = 0x496
0x494: JUMPI 0x496 V405
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S6, S5, S4, S3, S2]

================================

Block 0x495
[0x495:0x495]
---
Predecessors: [0x48e]
Successors: []
---
0x495 INVALID
---
0x495: INVALID 
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0x496
[0x496:0x4f6]
---
Predecessors: [0x48e]
Successors: [0x4f7, 0x4fb]
---
0x496 JUMPDEST
0x497 PUSH1 0x8
0x499 SLOAD
0x49a PUSH1 0x7
0x49c SLOAD
0x49d PUSH1 0x2
0x49f SLOAD
0x4a0 SWAP2
0x4a1 SWAP5
0x4a2 POP
0x4a3 SWAP1
0x4a4 DUP5
0x4a5 SWAP1
0x4a6 PUSH1 0x1
0x4a8 PUSH1 0xa0
0x4aa PUSH1 0x2
0x4ac EXP
0x4ad SUB
0x4ae AND
0x4af PUSH4 0x70a08231
0x4b4 CALLER
0x4b5 PUSH1 0x0
0x4b7 PUSH1 0x40
0x4b9 MLOAD
0x4ba PUSH1 0x20
0x4bc ADD
0x4bd MSTORE
0x4be PUSH1 0x40
0x4c0 MLOAD
0x4c1 PUSH1 0xe0
0x4c3 PUSH1 0x2
0x4c5 EXP
0x4c6 PUSH4 0xffffffff
0x4cb DUP5
0x4cc AND
0x4cd MUL
0x4ce DUP2
0x4cf MSTORE
0x4d0 PUSH1 0x1
0x4d2 PUSH1 0xa0
0x4d4 PUSH1 0x2
0x4d6 EXP
0x4d7 SUB
0x4d8 SWAP1
0x4d9 SWAP2
0x4da AND
0x4db PUSH1 0x4
0x4dd DUP3
0x4de ADD
0x4df MSTORE
0x4e0 PUSH1 0x24
0x4e2 ADD
0x4e3 PUSH1 0x20
0x4e5 PUSH1 0x40
0x4e7 MLOAD
0x4e8 DUP1
0x4e9 DUP4
0x4ea SUB
0x4eb DUP2
0x4ec PUSH1 0x0
0x4ee DUP8
0x4ef DUP1
0x4f0 EXTCODESIZE
0x4f1 ISZERO
0x4f2 ISZERO
0x4f3 PUSH2 0x4fb
0x4f6 JUMPI
---
0x496: JUMPDEST 
0x497: V407 = 0x8
0x499: V408 = S[0x8]
0x49a: V409 = 0x7
0x49c: V410 = S[0x7]
0x49d: V411 = 0x2
0x49f: V412 = S[0x2]
0x4a6: V413 = 0x1
0x4a8: V414 = 0xa0
0x4aa: V415 = 0x2
0x4ac: V416 = EXP 0x2 0xa0
0x4ad: V417 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ae: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x4af: V419 = 0x70a08231
0x4b4: V420 = CALLER
0x4b5: V421 = 0x0
0x4b7: V422 = 0x40
0x4b9: V423 = M[0x40]
0x4ba: V424 = 0x20
0x4bc: V425 = ADD 0x20 V423
0x4bd: M[V425] = 0x0
0x4be: V426 = 0x40
0x4c0: V427 = M[0x40]
0x4c1: V428 = 0xe0
0x4c3: V429 = 0x2
0x4c5: V430 = EXP 0x2 0xe0
0x4c6: V431 = 0xffffffff
0x4cc: V432 = AND 0x70a08231 0xffffffff
0x4cd: V433 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x4cf: M[V427] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4d0: V434 = 0x1
0x4d2: V435 = 0xa0
0x4d4: V436 = 0x2
0x4d6: V437 = EXP 0x2 0xa0
0x4d7: V438 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4da: V439 = AND V420 0xffffffffffffffffffffffffffffffffffffffff
0x4db: V440 = 0x4
0x4de: V441 = ADD V427 0x4
0x4df: M[V441] = V439
0x4e0: V442 = 0x24
0x4e2: V443 = ADD 0x24 V427
0x4e3: V444 = 0x20
0x4e5: V445 = 0x40
0x4e7: V446 = M[0x40]
0x4ea: V447 = SUB V443 V446
0x4ec: V448 = 0x0
0x4f0: V449 = EXTCODESIZE V418
0x4f1: V450 = ISZERO V449
0x4f2: V451 = ISZERO V450
0x4f3: V452 = 0x4fb
0x4f6: JUMPI 0x4fb V451
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V408, S1, S0, V410, V408, V418, 0x70a08231, V443, 0x20, V446, V447, V446, 0x0, V418]
Exit stack: [V12, S4, S3, V408, S1, S0, V410, V408, V418, 0x70a08231, V443, 0x20, V446, V447, V446, 0x0, V418]

================================

Block 0x4f7
[0x4f7:0x4fa]
---
Predecessors: [0x496]
Successors: []
---
0x4f7 PUSH1 0x0
0x4f9 DUP1
0x4fa REVERT
---
0x4f7: V453 = 0x0
0x4fa: REVERT 0x0 0x0
---
Entry stack: [V12, S15, S14, V408, S12, S11, V410, V408, V418, 0x70a08231, V443, 0x20, V446, V447, V446, 0x0, V418]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S15, S14, V408, S12, S11, V410, V408, V418, 0x70a08231, V443, 0x20, V446, V447, V446, 0x0, V418]

================================

Block 0x4fb
[0x4fb:0x507]
---
Predecessors: [0x496]
Successors: [0x508, 0x50c]
---
0x4fb JUMPDEST
0x4fc PUSH2 0x2c6
0x4ff GAS
0x500 SUB
0x501 CALL
0x502 ISZERO
0x503 ISZERO
0x504 PUSH2 0x50c
0x507 JUMPI
---
0x4fb: JUMPDEST 
0x4fc: V454 = 0x2c6
0x4ff: V455 = GAS
0x500: V456 = SUB V455 0x2c6
0x501: V457 = CALL V456 V418 0x0 V446 V447 V446 0x20
0x502: V458 = ISZERO V457
0x503: V459 = ISZERO V458
0x504: V460 = 0x50c
0x507: JUMPI 0x50c V459
---
Entry stack: [V12, S15, S14, V408, S12, S11, V410, V408, V418, 0x70a08231, V443, 0x20, V446, V447, V446, 0x0, V418]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S15, S14, V408, S12, S11, V410, V408, V418, 0x70a08231, V443]

================================

Block 0x508
[0x508:0x50b]
---
Predecessors: [0x4fb]
Successors: []
---
0x508 PUSH1 0x0
0x50a DUP1
0x50b REVERT
---
0x508: V461 = 0x0
0x50b: REVERT 0x0 0x0
---
Entry stack: [V12, S9, S8, V408, S6, S5, V410, V408, V418, 0x70a08231, V443]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, V408, S6, S5, V410, V408, V418, 0x70a08231, V443]

================================

Block 0x50c
[0x50c:0x51f]
---
Predecessors: [0x4fb]
Successors: [0x520, 0x521]
---
0x50c JUMPDEST
0x50d POP
0x50e POP
0x50f POP
0x510 PUSH1 0x40
0x512 MLOAD
0x513 DUP1
0x514 MLOAD
0x515 SWAP1
0x516 POP
0x517 ADD
0x518 GT
0x519 ISZERO
0x51a ISZERO
0x51b ISZERO
0x51c PUSH2 0x521
0x51f JUMPI
---
0x50c: JUMPDEST 
0x510: V462 = 0x40
0x512: V463 = M[0x40]
0x514: V464 = M[V463]
0x517: V465 = ADD V464 V408
0x518: V466 = GT V465 V410
0x519: V467 = ISZERO V466
0x51a: V468 = ISZERO V467
0x51b: V469 = ISZERO V468
0x51c: V470 = 0x521
0x51f: JUMPI 0x521 V469
---
Entry stack: [V12, S9, S8, V408, S6, S5, V410, V408, V418, 0x70a08231, V443]
Stack pops: 5
Stack additions: []
Exit stack: [V12, S9, S8, V408, S6, S5]

================================

Block 0x520
[0x520:0x520]
---
Predecessors: [0x50c]
Successors: []
---
0x520 INVALID
---
0x520: INVALID 
---
Entry stack: [V12, S4, S3, V408, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, V408, S1, S0]

================================

Block 0x521
[0x521:0x575]
---
Predecessors: [0x50c]
Successors: [0x576, 0x57a]
---
0x521 JUMPDEST
0x522 PUSH1 0x2
0x524 SLOAD
0x525 PUSH1 0x1
0x527 PUSH1 0xa0
0x529 PUSH1 0x2
0x52b EXP
0x52c SUB
0x52d AND
0x52e PUSH4 0x70a08231
0x533 CALLER
0x534 PUSH1 0x0
0x536 PUSH1 0x40
0x538 MLOAD
0x539 PUSH1 0x20
0x53b ADD
0x53c MSTORE
0x53d PUSH1 0x40
0x53f MLOAD
0x540 PUSH1 0xe0
0x542 PUSH1 0x2
0x544 EXP
0x545 PUSH4 0xffffffff
0x54a DUP5
0x54b AND
0x54c MUL
0x54d DUP2
0x54e MSTORE
0x54f PUSH1 0x1
0x551 PUSH1 0xa0
0x553 PUSH1 0x2
0x555 EXP
0x556 SUB
0x557 SWAP1
0x558 SWAP2
0x559 AND
0x55a PUSH1 0x4
0x55c DUP3
0x55d ADD
0x55e MSTORE
0x55f PUSH1 0x24
0x561 ADD
0x562 PUSH1 0x20
0x564 PUSH1 0x40
0x566 MLOAD
0x567 DUP1
0x568 DUP4
0x569 SUB
0x56a DUP2
0x56b PUSH1 0x0
0x56d DUP8
0x56e DUP1
0x56f EXTCODESIZE
0x570 ISZERO
0x571 ISZERO
0x572 PUSH2 0x57a
0x575 JUMPI
---
0x521: JUMPDEST 
0x522: V471 = 0x2
0x524: V472 = S[0x2]
0x525: V473 = 0x1
0x527: V474 = 0xa0
0x529: V475 = 0x2
0x52b: V476 = EXP 0x2 0xa0
0x52c: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52d: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V472
0x52e: V479 = 0x70a08231
0x533: V480 = CALLER
0x534: V481 = 0x0
0x536: V482 = 0x40
0x538: V483 = M[0x40]
0x539: V484 = 0x20
0x53b: V485 = ADD 0x20 V483
0x53c: M[V485] = 0x0
0x53d: V486 = 0x40
0x53f: V487 = M[0x40]
0x540: V488 = 0xe0
0x542: V489 = 0x2
0x544: V490 = EXP 0x2 0xe0
0x545: V491 = 0xffffffff
0x54b: V492 = AND 0x70a08231 0xffffffff
0x54c: V493 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x54e: M[V487] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x54f: V494 = 0x1
0x551: V495 = 0xa0
0x553: V496 = 0x2
0x555: V497 = EXP 0x2 0xa0
0x556: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x559: V499 = AND V480 0xffffffffffffffffffffffffffffffffffffffff
0x55a: V500 = 0x4
0x55d: V501 = ADD V487 0x4
0x55e: M[V501] = V499
0x55f: V502 = 0x24
0x561: V503 = ADD 0x24 V487
0x562: V504 = 0x20
0x564: V505 = 0x40
0x566: V506 = M[0x40]
0x569: V507 = SUB V503 V506
0x56b: V508 = 0x0
0x56f: V509 = EXTCODESIZE V478
0x570: V510 = ISZERO V509
0x571: V511 = ISZERO V510
0x572: V512 = 0x57a
0x575: JUMPI 0x57a V511
---
Entry stack: [V12, S4, S3, V408, S1, S0]
Stack pops: 0
Stack additions: [V478, 0x70a08231, V503, 0x20, V506, V507, V506, 0x0, V478]
Exit stack: [V12, S4, S3, V408, S1, S0, V478, 0x70a08231, V503, 0x20, V506, V507, V506, 0x0, V478]

================================

Block 0x576
[0x576:0x579]
---
Predecessors: [0x521]
Successors: []
---
0x576 PUSH1 0x0
0x578 DUP1
0x579 REVERT
---
0x576: V513 = 0x0
0x579: REVERT 0x0 0x0
---
Entry stack: [V12, S13, S12, V408, S10, S9, V478, 0x70a08231, V503, 0x20, V506, V507, V506, 0x0, V478]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, S12, V408, S10, S9, V478, 0x70a08231, V503, 0x20, V506, V507, V506, 0x0, V478]

================================

Block 0x57a
[0x57a:0x586]
---
Predecessors: [0x521]
Successors: [0x587, 0x58b]
---
0x57a JUMPDEST
0x57b PUSH2 0x2c6
0x57e GAS
0x57f SUB
0x580 CALL
0x581 ISZERO
0x582 ISZERO
0x583 PUSH2 0x58b
0x586 JUMPI
---
0x57a: JUMPDEST 
0x57b: V514 = 0x2c6
0x57e: V515 = GAS
0x57f: V516 = SUB V515 0x2c6
0x580: V517 = CALL V516 V478 0x0 V506 V507 V506 0x20
0x581: V518 = ISZERO V517
0x582: V519 = ISZERO V518
0x583: V520 = 0x58b
0x586: JUMPI 0x58b V519
---
Entry stack: [V12, S13, S12, V408, S10, S9, V478, 0x70a08231, V503, 0x20, V506, V507, V506, 0x0, V478]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S13, S12, V408, S10, S9, V478, 0x70a08231, V503]

================================

Block 0x587
[0x587:0x58a]
---
Predecessors: [0x57a]
Successors: []
---
0x587 PUSH1 0x0
0x589 DUP1
0x58a REVERT
---
0x587: V521 = 0x0
0x58a: REVERT 0x0 0x0
---
Entry stack: [V12, S7, S6, V408, S4, S3, V478, 0x70a08231, V503]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S7, S6, V408, S4, S3, V478, 0x70a08231, V503]

================================

Block 0x58b
[0x58b:0x59b]
---
Predecessors: [0x57a]
Successors: [0x59c, 0x5a5]
---
0x58b JUMPDEST
0x58c POP
0x58d POP
0x58e POP
0x58f PUSH1 0x40
0x591 MLOAD
0x592 DUP1
0x593 MLOAD
0x594 ISZERO
0x595 ISZERO
0x596 SWAP1
0x597 POP
0x598 PUSH2 0x5a5
0x59b JUMPI
---
0x58b: JUMPDEST 
0x58f: V522 = 0x40
0x591: V523 = M[0x40]
0x593: V524 = M[V523]
0x594: V525 = ISZERO V524
0x595: V526 = ISZERO V525
0x598: V527 = 0x5a5
0x59b: JUMPI 0x5a5 V526
---
Entry stack: [V12, S7, S6, V408, S4, S3, V478, 0x70a08231, V503]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S7, S6, V408, S4, S3]

================================

Block 0x59c
[0x59c:0x5a4]
---
Predecessors: [0x58b]
Successors: [0x5a5]
---
0x59c PUSH1 0xb
0x59e DUP1
0x59f SLOAD
0x5a0 PUSH1 0x1
0x5a2 ADD
0x5a3 SWAP1
0x5a4 SSTORE
---
0x59c: V528 = 0xb
0x59f: V529 = S[0xb]
0x5a0: V530 = 0x1
0x5a2: V531 = ADD 0x1 V529
0x5a4: S[0xb] = V531
---
Entry stack: [V12, S4, S3, V408, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, V408, S1, S0]

================================

Block 0x5a5
[0x5a5:0x5b7]
---
Predecessors: [0x58b, 0x59c]
Successors: [0xa95]
---
0x5a5 JUMPDEST
0x5a6 PUSH1 0x5
0x5a8 SLOAD
0x5a9 PUSH2 0x5b8
0x5ac SWAP1
0x5ad CALLVALUE
0x5ae PUSH4 0xffffffff
0x5b3 PUSH2 0xa95
0x5b6 AND
0x5b7 JUMP
---
0x5a5: JUMPDEST 
0x5a6: V532 = 0x5
0x5a8: V533 = S[0x5]
0x5a9: V534 = 0x5b8
0x5ad: V535 = CALLVALUE
0x5ae: V536 = 0xffffffff
0x5b3: V537 = 0xa95
0x5b6: V538 = AND 0xa95 0xffffffff
0x5b7: JUMP 0xa95
---
Entry stack: [V12, S4, S3, V408, S1, S0]
Stack pops: 0
Stack additions: [0x5b8, V533, V535]
Exit stack: [V12, S4, S3, V408, S1, S0, 0x5b8, V533, V535]

================================

Block 0x5b8
[0x5b8:0x5cd]
---
Predecessors: [0xaa8]
Successors: [0xa95]
---
0x5b8 JUMPDEST
0x5b9 PUSH1 0x5
0x5bb SSTORE
0x5bc PUSH1 0x9
0x5be SLOAD
0x5bf PUSH2 0x5ce
0x5c2 SWAP1
0x5c3 CALLVALUE
0x5c4 PUSH4 0xffffffff
0x5c9 PUSH2 0xa95
0x5cc AND
0x5cd JUMP
---
0x5b8: JUMPDEST 
0x5b9: V539 = 0x5
0x5bb: S[0x5] = S0
0x5bc: V540 = 0x9
0x5be: V541 = S[0x9]
0x5bf: V542 = 0x5ce
0x5c3: V543 = CALLVALUE
0x5c4: V544 = 0xffffffff
0x5c9: V545 = 0xa95
0x5cc: V546 = AND 0xa95 0xffffffff
0x5cd: JUMP 0xa95
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x5ce, V541, V543]
Exit stack: [V12, S6, S5, S4, S3, S2, S1, 0x5ce, V541, V543]

================================

Block 0x5ce
[0x5ce:0x622]
---
Predecessors: [0xaa8]
Successors: [0x623, 0x627]
---
0x5ce JUMPDEST
0x5cf PUSH1 0x9
0x5d1 SSTORE
0x5d2 PUSH1 0x2
0x5d4 SLOAD
0x5d5 PUSH1 0x1
0x5d7 PUSH1 0xa0
0x5d9 PUSH1 0x2
0x5db EXP
0x5dc SUB
0x5dd AND
0x5de PUSH4 0xa9059cbb
0x5e3 CALLER
0x5e4 DUP6
0x5e5 PUSH1 0x40
0x5e7 MLOAD
0x5e8 PUSH1 0xe0
0x5ea PUSH1 0x2
0x5ec EXP
0x5ed PUSH4 0xffffffff
0x5f2 DUP6
0x5f3 AND
0x5f4 MUL
0x5f5 DUP2
0x5f6 MSTORE
0x5f7 PUSH1 0x1
0x5f9 PUSH1 0xa0
0x5fb PUSH1 0x2
0x5fd EXP
0x5fe SUB
0x5ff SWAP1
0x600 SWAP3
0x601 AND
0x602 PUSH1 0x4
0x604 DUP4
0x605 ADD
0x606 MSTORE
0x607 PUSH1 0x24
0x609 DUP3
0x60a ADD
0x60b MSTORE
0x60c PUSH1 0x44
0x60e ADD
0x60f PUSH1 0x0
0x611 PUSH1 0x40
0x613 MLOAD
0x614 DUP1
0x615 DUP4
0x616 SUB
0x617 DUP2
0x618 PUSH1 0x0
0x61a DUP8
0x61b DUP1
0x61c EXTCODESIZE
0x61d ISZERO
0x61e ISZERO
0x61f PUSH2 0x627
0x622 JUMPI
---
0x5ce: JUMPDEST 
0x5cf: V547 = 0x9
0x5d1: S[0x9] = S0
0x5d2: V548 = 0x2
0x5d4: V549 = S[0x2]
0x5d5: V550 = 0x1
0x5d7: V551 = 0xa0
0x5d9: V552 = 0x2
0x5db: V553 = EXP 0x2 0xa0
0x5dc: V554 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5dd: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x5de: V556 = 0xa9059cbb
0x5e3: V557 = CALLER
0x5e5: V558 = 0x40
0x5e7: V559 = M[0x40]
0x5e8: V560 = 0xe0
0x5ea: V561 = 0x2
0x5ec: V562 = EXP 0x2 0xe0
0x5ed: V563 = 0xffffffff
0x5f3: V564 = AND 0xa9059cbb 0xffffffff
0x5f4: V565 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x5f6: M[V559] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5f7: V566 = 0x1
0x5f9: V567 = 0xa0
0x5fb: V568 = 0x2
0x5fd: V569 = EXP 0x2 0xa0
0x5fe: V570 = SUB 0x10000000000000000000000000000000000000000 0x1
0x601: V571 = AND V557 0xffffffffffffffffffffffffffffffffffffffff
0x602: V572 = 0x4
0x605: V573 = ADD V559 0x4
0x606: M[V573] = V571
0x607: V574 = 0x24
0x60a: V575 = ADD V559 0x24
0x60b: M[V575] = S3
0x60c: V576 = 0x44
0x60e: V577 = ADD 0x44 V559
0x60f: V578 = 0x0
0x611: V579 = 0x40
0x613: V580 = M[0x40]
0x616: V581 = SUB V577 V580
0x618: V582 = 0x0
0x61c: V583 = EXTCODESIZE V555
0x61d: V584 = ISZERO V583
0x61e: V585 = ISZERO V584
0x61f: V586 = 0x627
0x622: JUMPI 0x627 V585
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V555, 0xa9059cbb, V577, 0x0, V580, V581, V580, 0x0, V555]
Exit stack: [V12, S6, S5, S4, S3, S2, S1, V555, 0xa9059cbb, V577, 0x0, V580, V581, V580, 0x0, V555]

================================

Block 0x623
[0x623:0x626]
---
Predecessors: [0x5ce]
Successors: []
---
0x623 PUSH1 0x0
0x625 DUP1
0x626 REVERT
---
0x623: V587 = 0x0
0x626: REVERT 0x0 0x0
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, V555, 0xa9059cbb, V577, 0x0, V580, V581, V580, 0x0, V555]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, S10, S9, V555, 0xa9059cbb, V577, 0x0, V580, V581, V580, 0x0, V555]

================================

Block 0x627
[0x627:0x633]
---
Predecessors: [0x5ce]
Successors: [0x634, 0x638]
---
0x627 JUMPDEST
0x628 PUSH2 0x2c6
0x62b GAS
0x62c SUB
0x62d CALL
0x62e ISZERO
0x62f ISZERO
0x630 PUSH2 0x638
0x633 JUMPI
---
0x627: JUMPDEST 
0x628: V588 = 0x2c6
0x62b: V589 = GAS
0x62c: V590 = SUB V589 0x2c6
0x62d: V591 = CALL V590 V555 0x0 V580 V581 V580 0x0
0x62e: V592 = ISZERO V591
0x62f: V593 = ISZERO V592
0x630: V594 = 0x638
0x633: JUMPI 0x638 V593
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, V555, 0xa9059cbb, V577, 0x0, V580, V581, V580, 0x0, V555]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, S10, S9, V555, 0xa9059cbb, V577]

================================

Block 0x634
[0x634:0x637]
---
Predecessors: [0x627]
Successors: []
---
0x634 PUSH1 0x0
0x636 DUP1
0x637 REVERT
---
0x634: V595 = 0x0
0x637: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, V555, 0xa9059cbb, V577]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, V555, 0xa9059cbb, V577]

================================

Block 0x638
[0x638:0x64d]
---
Predecessors: [0x627]
Successors: [0xa95]
---
0x638 JUMPDEST
0x639 POP
0x63a POP
0x63b PUSH1 0xa
0x63d SLOAD
0x63e PUSH2 0x64e
0x641 SWAP2
0x642 POP
0x643 DUP5
0x644 PUSH4 0xffffffff
0x649 PUSH2 0xa95
0x64c AND
0x64d JUMP
---
0x638: JUMPDEST 
0x63b: V596 = 0xa
0x63d: V597 = S[0xa]
0x63e: V598 = 0x64e
0x644: V599 = 0xffffffff
0x649: V600 = 0xa95
0x64c: V601 = AND 0xa95 0xffffffff
0x64d: JUMP 0xa95
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, V555, 0xa9059cbb, V577]
Stack pops: 6
Stack additions: [S5, S4, S3, 0x64e, V597, S5]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, 0x64e, V597, S5]

================================

Block 0x64e
[0x64e:0x6a1]
---
Predecessors: [0xaa8]
Successors: [0x6a2, 0x6d7]
---
0x64e JUMPDEST
0x64f PUSH1 0xa
0x651 SSTORE
0x652 PUSH1 0x1
0x654 PUSH1 0xa0
0x656 PUSH1 0x2
0x658 EXP
0x659 SUB
0x65a DUP5
0x65b AND
0x65c PUSH32 0x16d99cb06fd9528f88184dd0483174a09cfd8312c28639858734b0c449cc05b8
0x67d DUP5
0x67e CALLVALUE
0x67f PUSH1 0x40
0x681 MLOAD
0x682 SWAP2
0x683 DUP3
0x684 MSTORE
0x685 PUSH1 0x20
0x687 DUP3
0x688 ADD
0x689 MSTORE
0x68a PUSH1 0x40
0x68c SWAP1
0x68d DUP2
0x68e ADD
0x68f SWAP1
0x690 MLOAD
0x691 DUP1
0x692 SWAP2
0x693 SUB
0x694 SWAP1
0x695 LOG2
0x696 PUSH1 0x4
0x698 SLOAD
0x699 PUSH1 0x5
0x69b SLOAD
0x69c EQ
0x69d ISZERO
0x69e PUSH2 0x6d7
0x6a1 JUMPI
---
0x64e: JUMPDEST 
0x64f: V602 = 0xa
0x651: S[0xa] = S0
0x652: V603 = 0x1
0x654: V604 = 0xa0
0x656: V605 = 0x2
0x658: V606 = EXP 0x2 0xa0
0x659: V607 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65b: V608 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x65c: V609 = 0x16d99cb06fd9528f88184dd0483174a09cfd8312c28639858734b0c449cc05b8
0x67e: V610 = CALLVALUE
0x67f: V611 = 0x40
0x681: V612 = M[0x40]
0x684: M[V612] = S3
0x685: V613 = 0x20
0x688: V614 = ADD V612 0x20
0x689: M[V614] = V610
0x68a: V615 = 0x40
0x68e: V616 = ADD 0x40 V612
0x690: V617 = M[0x40]
0x693: V618 = SUB V616 V617
0x695: LOG V617 V618 0x16d99cb06fd9528f88184dd0483174a09cfd8312c28639858734b0c449cc05b8 V608
0x696: V619 = 0x4
0x698: V620 = S[0x4]
0x699: V621 = 0x5
0x69b: V622 = S[0x5]
0x69c: V623 = EQ V622 V620
0x69d: V624 = ISZERO V623
0x69e: V625 = 0x6d7
0x6a1: JUMPI 0x6d7 V624
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1]
Exit stack: [V12, S6, S5, S4, S3, S2, S1]

================================

Block 0x6a2
[0x6a2:0x6d6]
---
Predecessors: [0x64e]
Successors: [0x6d7]
---
0x6a2 PUSH32 0xfbfd8ab7c24300fa9888cd721c8565a7da56759384781283684dcf7c7c4a846b
0x6c3 PUSH1 0x4
0x6c5 SLOAD
0x6c6 PUSH1 0x40
0x6c8 MLOAD
0x6c9 SWAP1
0x6ca DUP2
0x6cb MSTORE
0x6cc PUSH1 0x20
0x6ce ADD
0x6cf PUSH1 0x40
0x6d1 MLOAD
0x6d2 DUP1
0x6d3 SWAP2
0x6d4 SUB
0x6d5 SWAP1
0x6d6 LOG1
---
0x6a2: V626 = 0xfbfd8ab7c24300fa9888cd721c8565a7da56759384781283684dcf7c7c4a846b
0x6c3: V627 = 0x4
0x6c5: V628 = S[0x4]
0x6c6: V629 = 0x40
0x6c8: V630 = M[0x40]
0x6cb: M[V630] = V628
0x6cc: V631 = 0x20
0x6ce: V632 = ADD 0x20 V630
0x6cf: V633 = 0x40
0x6d1: V634 = M[0x40]
0x6d4: V635 = SUB V632 V634
0x6d6: LOG V634 V635 0xfbfd8ab7c24300fa9888cd721c8565a7da56759384781283684dcf7c7c4a846b
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1, S0]

================================

Block 0x6d7
[0x6d7:0x6d7]
---
Predecessors: [0x64e, 0x6a2, 0x8ba]
Successors: [0x6d8]
---
0x6d7 JUMPDEST
---
0x6d7: JUMPDEST 
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1, S0]

================================

Block 0x6d8
[0x6d8:0x6d8]
---
Predecessors: [0x6d7]
Successors: [0x6d9]
---
0x6d8 JUMPDEST
---
0x6d8: JUMPDEST 
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1, S0]

================================

Block 0x6d9
[0x6d9:0x6da]
---
Predecessors: [0x6d8]
Successors: [0x6db]
---
0x6d9 JUMPDEST
0x6da POP
---
0x6d9: JUMPDEST 
---
Entry stack: [V12, 0x129, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x129, S3, S2, S1]

================================

Block 0x6db
[0x6db:0x6df]
---
Predecessors: [0x6d9]
Successors: [0x129]
---
0x6db JUMPDEST
0x6dc POP
0x6dd POP
0x6de POP
0x6df JUMP
---
0x6db: JUMPDEST 
0x6df: JUMP 0x129
---
Entry stack: [V12, 0x129, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x6e0
[0x6e0:0x6e5]
---
Predecessors: [0x138]
Successors: [0x140]
---
0x6e0 JUMPDEST
0x6e1 PUSH1 0x8
0x6e3 SLOAD
0x6e4 DUP2
0x6e5 JUMP
---
0x6e0: JUMPDEST 
0x6e1: V636 = 0x8
0x6e3: V637 = S[0x8]
0x6e5: JUMP 0x140
---
Entry stack: [V12, 0x140]
Stack pops: 1
Stack additions: [S0, V637]
Exit stack: [V12, 0x140, V637]

================================

Block 0x6e6
[0x6e6:0x735]
---
Predecessors: [0x15d]
Successors: [0x736, 0x77c]
---
0x6e6 JUMPDEST
0x6e7 PUSH1 0x1
0x6e9 DUP1
0x6ea SLOAD
0x6eb PUSH1 0x1
0x6ed DUP2
0x6ee PUSH1 0x1
0x6f0 AND
0x6f1 ISZERO
0x6f2 PUSH2 0x100
0x6f5 MUL
0x6f6 SUB
0x6f7 AND
0x6f8 PUSH1 0x2
0x6fa SWAP1
0x6fb DIV
0x6fc DUP1
0x6fd PUSH1 0x1f
0x6ff ADD
0x700 PUSH1 0x20
0x702 DUP1
0x703 SWAP2
0x704 DIV
0x705 MUL
0x706 PUSH1 0x20
0x708 ADD
0x709 PUSH1 0x40
0x70b MLOAD
0x70c SWAP1
0x70d DUP2
0x70e ADD
0x70f PUSH1 0x40
0x711 MSTORE
0x712 DUP1
0x713 SWAP3
0x714 SWAP2
0x715 SWAP1
0x716 DUP2
0x717 DUP2
0x718 MSTORE
0x719 PUSH1 0x20
0x71b ADD
0x71c DUP3
0x71d DUP1
0x71e SLOAD
0x71f PUSH1 0x1
0x721 DUP2
0x722 PUSH1 0x1
0x724 AND
0x725 ISZERO
0x726 PUSH2 0x100
0x729 MUL
0x72a SUB
0x72b AND
0x72c PUSH1 0x2
0x72e SWAP1
0x72f DIV
0x730 DUP1
0x731 ISZERO
0x732 PUSH2 0x77c
0x735 JUMPI
---
0x6e6: JUMPDEST 
0x6e7: V638 = 0x1
0x6ea: V639 = S[0x1]
0x6eb: V640 = 0x1
0x6ee: V641 = 0x1
0x6f0: V642 = AND 0x1 V639
0x6f1: V643 = ISZERO V642
0x6f2: V644 = 0x100
0x6f5: V645 = MUL 0x100 V643
0x6f6: V646 = SUB V645 0x1
0x6f7: V647 = AND V646 V639
0x6f8: V648 = 0x2
0x6fb: V649 = DIV V647 0x2
0x6fd: V650 = 0x1f
0x6ff: V651 = ADD 0x1f V649
0x700: V652 = 0x20
0x704: V653 = DIV V651 0x20
0x705: V654 = MUL V653 0x20
0x706: V655 = 0x20
0x708: V656 = ADD 0x20 V654
0x709: V657 = 0x40
0x70b: V658 = M[0x40]
0x70e: V659 = ADD V658 V656
0x70f: V660 = 0x40
0x711: M[0x40] = V659
0x718: M[V658] = V649
0x719: V661 = 0x20
0x71b: V662 = ADD 0x20 V658
0x71e: V663 = S[0x1]
0x71f: V664 = 0x1
0x722: V665 = 0x1
0x724: V666 = AND 0x1 V663
0x725: V667 = ISZERO V666
0x726: V668 = 0x100
0x729: V669 = MUL 0x100 V667
0x72a: V670 = SUB V669 0x1
0x72b: V671 = AND V670 V663
0x72c: V672 = 0x2
0x72f: V673 = DIV V671 0x2
0x731: V674 = ISZERO V673
0x732: V675 = 0x77c
0x735: JUMPI 0x77c V674
---
Entry stack: [V12, 0x165]
Stack pops: 0
Stack additions: [V658, 0x1, V649, V662, 0x1, V673]
Exit stack: [V12, 0x165, V658, 0x1, V649, V662, 0x1, V673]

================================

Block 0x736
[0x736:0x73d]
---
Predecessors: [0x6e6]
Successors: [0x73e, 0x751]
---
0x736 DUP1
0x737 PUSH1 0x1f
0x739 LT
0x73a PUSH2 0x751
0x73d JUMPI
---
0x737: V676 = 0x1f
0x739: V677 = LT 0x1f V673
0x73a: V678 = 0x751
0x73d: JUMPI 0x751 V677
---
Entry stack: [V12, 0x165, V658, 0x1, V649, V662, 0x1, V673]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x165, V658, 0x1, V649, V662, 0x1, V673]

================================

Block 0x73e
[0x73e:0x750]
---
Predecessors: [0x736]
Successors: [0x77c]
---
0x73e PUSH2 0x100
0x741 DUP1
0x742 DUP4
0x743 SLOAD
0x744 DIV
0x745 MUL
0x746 DUP4
0x747 MSTORE
0x748 SWAP2
0x749 PUSH1 0x20
0x74b ADD
0x74c SWAP2
0x74d PUSH2 0x77c
0x750 JUMP
---
0x73e: V679 = 0x100
0x743: V680 = S[0x1]
0x744: V681 = DIV V680 0x100
0x745: V682 = MUL V681 0x100
0x747: M[V662] = V682
0x749: V683 = 0x20
0x74b: V684 = ADD 0x20 V662
0x74d: V685 = 0x77c
0x750: JUMP 0x77c
---
Entry stack: [V12, 0x165, V658, 0x1, V649, V662, 0x1, V673]
Stack pops: 3
Stack additions: [V684, S1, S0]
Exit stack: [V12, 0x165, V658, 0x1, V649, V684, 0x1, V673]

================================

Block 0x751
[0x751:0x75e]
---
Predecessors: [0x736]
Successors: [0x75f]
---
0x751 JUMPDEST
0x752 DUP3
0x753 ADD
0x754 SWAP2
0x755 SWAP1
0x756 PUSH1 0x0
0x758 MSTORE
0x759 PUSH1 0x20
0x75b PUSH1 0x0
0x75d SHA3
0x75e SWAP1
---
0x751: JUMPDEST 
0x753: V686 = ADD V662 V673
0x756: V687 = 0x0
0x758: M[0x0] = 0x1
0x759: V688 = 0x20
0x75b: V689 = 0x0
0x75d: V690 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x165, V658, 0x1, V649, V662, 0x1, V673]
Stack pops: 3
Stack additions: [V686, V690, S2]
Exit stack: [V12, 0x165, V658, 0x1, V649, V686, V690, V662]

================================

Block 0x75f
[0x75f:0x772]
---
Predecessors: [0x751, 0x75f]
Successors: [0x75f, 0x773]
---
0x75f JUMPDEST
0x760 DUP2
0x761 SLOAD
0x762 DUP2
0x763 MSTORE
0x764 SWAP1
0x765 PUSH1 0x1
0x767 ADD
0x768 SWAP1
0x769 PUSH1 0x20
0x76b ADD
0x76c DUP1
0x76d DUP4
0x76e GT
0x76f PUSH2 0x75f
0x772 JUMPI
---
0x75f: JUMPDEST 
0x761: V691 = S[S1]
0x763: M[S0] = V691
0x765: V692 = 0x1
0x767: V693 = ADD 0x1 S1
0x769: V694 = 0x20
0x76b: V695 = ADD 0x20 S0
0x76e: V696 = GT V686 V695
0x76f: V697 = 0x75f
0x772: JUMPI 0x75f V696
---
Entry stack: [V12, 0x165, V658, 0x1, V649, V686, S1, S0]
Stack pops: 3
Stack additions: [S2, V693, V695]
Exit stack: [V12, 0x165, V658, 0x1, V649, V686, V693, V695]

================================

Block 0x773
[0x773:0x77b]
---
Predecessors: [0x75f]
Successors: [0x77c]
---
0x773 DUP3
0x774 SWAP1
0x775 SUB
0x776 PUSH1 0x1f
0x778 AND
0x779 DUP3
0x77a ADD
0x77b SWAP2
---
0x775: V698 = SUB V695 V686
0x776: V699 = 0x1f
0x778: V700 = AND 0x1f V698
0x77a: V701 = ADD V686 V700
---
Entry stack: [V12, 0x165, V658, 0x1, V649, V686, V693, V695]
Stack pops: 3
Stack additions: [V701, S1, S2]
Exit stack: [V12, 0x165, V658, 0x1, V649, V701, V693, V686]

================================

Block 0x77c
[0x77c:0x783]
---
Predecessors: [0x6e6, 0x73e, 0x773]
Successors: [0x165]
---
0x77c JUMPDEST
0x77d POP
0x77e POP
0x77f POP
0x780 POP
0x781 POP
0x782 DUP2
0x783 JUMP
---
0x77c: JUMPDEST 
0x783: JUMP 0x165
---
Entry stack: [V12, 0x165, V658, 0x1, V649, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0x165, V658]

================================

Block 0x784
[0x784:0x79a]
---
Predecessors: [0x1e8]
Successors: [0x79b, 0x79f]
---
0x784 JUMPDEST
0x785 PUSH1 0x0
0x787 SLOAD
0x788 CALLER
0x789 PUSH1 0x1
0x78b PUSH1 0xa0
0x78d PUSH1 0x2
0x78f EXP
0x790 SUB
0x791 SWAP1
0x792 DUP2
0x793 AND
0x794 SWAP2
0x795 AND
0x796 EQ
0x797 PUSH2 0x79f
0x79a JUMPI
---
0x784: JUMPDEST 
0x785: V702 = 0x0
0x787: V703 = S[0x0]
0x788: V704 = CALLER
0x789: V705 = 0x1
0x78b: V706 = 0xa0
0x78d: V707 = 0x2
0x78f: V708 = EXP 0x2 0xa0
0x790: V709 = SUB 0x10000000000000000000000000000000000000000 0x1
0x793: V710 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0x795: V711 = AND V703 0xffffffffffffffffffffffffffffffffffffffff
0x796: V712 = EQ V711 V710
0x797: V713 = 0x79f
0x79a: JUMPI 0x79f V712
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x79b
[0x79b:0x79e]
---
Predecessors: [0x784]
Successors: []
---
0x79b PUSH1 0x0
0x79d DUP1
0x79e REVERT
---
0x79b: V714 = 0x0
0x79e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x79f
[0x79f:0x7ab]
---
Predecessors: [0x784]
Successors: [0x7ac, 0x7b0]
---
0x79f JUMPDEST
0x7a0 PUSH1 0xd
0x7a2 SLOAD
0x7a3 TIMESTAMP
0x7a4 DUP2
0x7a5 SWAP1
0x7a6 LT
0x7a7 ISZERO
0x7a8 PUSH2 0x7b0
0x7ab JUMPI
---
0x79f: JUMPDEST 
0x7a0: V715 = 0xd
0x7a2: V716 = S[0xd]
0x7a3: V717 = TIMESTAMP
0x7a6: V718 = LT V717 V716
0x7a7: V719 = ISZERO V718
0x7a8: V720 = 0x7b0
0x7ab: JUMPI 0x7b0 V719
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: [V716]
Exit stack: [V12, 0x129, V716]

================================

Block 0x7ac
[0x7ac:0x7af]
---
Predecessors: [0x79f]
Successors: []
---
0x7ac PUSH1 0x0
0x7ae DUP1
0x7af REVERT
---
0x7ac: V721 = 0x0
0x7af: REVERT 0x0 0x0
---
Entry stack: [V12, 0x129, V716]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129, V716]

================================

Block 0x7b0
[0x7b0:0x7bb]
---
Predecessors: [0x79f]
Successors: [0x7bc, 0x7f4]
---
0x7b0 JUMPDEST
0x7b1 PUSH1 0x0
0x7b3 PUSH1 0x9
0x7b5 SLOAD
0x7b6 GT
0x7b7 ISZERO
0x7b8 PUSH2 0x7f4
0x7bb JUMPI
---
0x7b0: JUMPDEST 
0x7b1: V722 = 0x0
0x7b3: V723 = 0x9
0x7b5: V724 = S[0x9]
0x7b6: V725 = GT V724 0x0
0x7b7: V726 = ISZERO V725
0x7b8: V727 = 0x7f4
0x7bb: JUMPI 0x7f4 V726
---
Entry stack: [V12, 0x129, V716]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129, V716]

================================

Block 0x7bc
[0x7bc:0x7ef]
---
Predecessors: [0x7b0]
Successors: [0x7f0, 0x7f4]
---
0x7bc PUSH1 0x3
0x7be SLOAD
0x7bf PUSH1 0x9
0x7c1 SLOAD
0x7c2 PUSH1 0x1
0x7c4 PUSH1 0xa0
0x7c6 PUSH1 0x2
0x7c8 EXP
0x7c9 SUB
0x7ca SWAP1
0x7cb SWAP2
0x7cc AND
0x7cd SWAP1
0x7ce DUP1
0x7cf ISZERO
0x7d0 PUSH2 0x8fc
0x7d3 MUL
0x7d4 SWAP1
0x7d5 PUSH1 0x40
0x7d7 MLOAD
0x7d8 PUSH1 0x0
0x7da PUSH1 0x40
0x7dc MLOAD
0x7dd DUP1
0x7de DUP4
0x7df SUB
0x7e0 DUP2
0x7e1 DUP6
0x7e2 DUP9
0x7e3 DUP9
0x7e4 CALL
0x7e5 SWAP4
0x7e6 POP
0x7e7 POP
0x7e8 POP
0x7e9 POP
0x7ea ISZERO
0x7eb ISZERO
0x7ec PUSH2 0x7f4
0x7ef JUMPI
---
0x7bc: V728 = 0x3
0x7be: V729 = S[0x3]
0x7bf: V730 = 0x9
0x7c1: V731 = S[0x9]
0x7c2: V732 = 0x1
0x7c4: V733 = 0xa0
0x7c6: V734 = 0x2
0x7c8: V735 = EXP 0x2 0xa0
0x7c9: V736 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7cc: V737 = AND V729 0xffffffffffffffffffffffffffffffffffffffff
0x7cf: V738 = ISZERO V731
0x7d0: V739 = 0x8fc
0x7d3: V740 = MUL 0x8fc V738
0x7d5: V741 = 0x40
0x7d7: V742 = M[0x40]
0x7d8: V743 = 0x0
0x7da: V744 = 0x40
0x7dc: V745 = M[0x40]
0x7df: V746 = SUB V742 V745
0x7e4: V747 = CALL V740 V737 V731 V745 V746 V745 0x0
0x7ea: V748 = ISZERO V747
0x7eb: V749 = ISZERO V748
0x7ec: V750 = 0x7f4
0x7ef: JUMPI 0x7f4 V749
---
Entry stack: [V12, 0x129, V716]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129, V716]

================================

Block 0x7f0
[0x7f0:0x7f3]
---
Predecessors: [0x7bc]
Successors: []
---
0x7f0 PUSH1 0x0
0x7f2 DUP1
0x7f3 REVERT
---
0x7f0: V751 = 0x0
0x7f3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x129, V716]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129, V716]

================================

Block 0x7f4
[0x7f4:0x7f4]
---
Predecessors: [0x7b0, 0x7bc]
Successors: [0x7f5]
---
0x7f4 JUMPDEST
---
0x7f4: JUMPDEST 
---
Entry stack: [V12, 0x129, V716]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129, V716]

================================

Block 0x7f5
[0x7f5:0x857]
---
Predecessors: [0x7f4]
Successors: [0x858, 0x85c]
---
0x7f5 JUMPDEST
0x7f6 PUSH1 0x2
0x7f8 SLOAD
0x7f9 PUSH1 0x3
0x7fb SLOAD
0x7fc PUSH1 0x1
0x7fe PUSH1 0xa0
0x800 PUSH1 0x2
0x802 EXP
0x803 SUB
0x804 SWAP2
0x805 DUP3
0x806 AND
0x807 SWAP2
0x808 PUSH4 0xa9059cbb
0x80d SWAP2
0x80e AND
0x80f DUP3
0x810 PUSH4 0x70a08231
0x815 ADDRESS
0x816 PUSH1 0x0
0x818 PUSH1 0x40
0x81a MLOAD
0x81b PUSH1 0x20
0x81d ADD
0x81e MSTORE
0x81f PUSH1 0x40
0x821 MLOAD
0x822 PUSH1 0xe0
0x824 PUSH1 0x2
0x826 EXP
0x827 PUSH4 0xffffffff
0x82c DUP5
0x82d AND
0x82e MUL
0x82f DUP2
0x830 MSTORE
0x831 PUSH1 0x1
0x833 PUSH1 0xa0
0x835 PUSH1 0x2
0x837 EXP
0x838 SUB
0x839 SWAP1
0x83a SWAP2
0x83b AND
0x83c PUSH1 0x4
0x83e DUP3
0x83f ADD
0x840 MSTORE
0x841 PUSH1 0x24
0x843 ADD
0x844 PUSH1 0x20
0x846 PUSH1 0x40
0x848 MLOAD
0x849 DUP1
0x84a DUP4
0x84b SUB
0x84c DUP2
0x84d PUSH1 0x0
0x84f DUP8
0x850 DUP1
0x851 EXTCODESIZE
0x852 ISZERO
0x853 ISZERO
0x854 PUSH2 0x85c
0x857 JUMPI
---
0x7f5: JUMPDEST 
0x7f6: V752 = 0x2
0x7f8: V753 = S[0x2]
0x7f9: V754 = 0x3
0x7fb: V755 = S[0x3]
0x7fc: V756 = 0x1
0x7fe: V757 = 0xa0
0x800: V758 = 0x2
0x802: V759 = EXP 0x2 0xa0
0x803: V760 = SUB 0x10000000000000000000000000000000000000000 0x1
0x806: V761 = AND 0xffffffffffffffffffffffffffffffffffffffff V753
0x808: V762 = 0xa9059cbb
0x80e: V763 = AND V755 0xffffffffffffffffffffffffffffffffffffffff
0x810: V764 = 0x70a08231
0x815: V765 = ADDRESS
0x816: V766 = 0x0
0x818: V767 = 0x40
0x81a: V768 = M[0x40]
0x81b: V769 = 0x20
0x81d: V770 = ADD 0x20 V768
0x81e: M[V770] = 0x0
0x81f: V771 = 0x40
0x821: V772 = M[0x40]
0x822: V773 = 0xe0
0x824: V774 = 0x2
0x826: V775 = EXP 0x2 0xe0
0x827: V776 = 0xffffffff
0x82d: V777 = AND 0x70a08231 0xffffffff
0x82e: V778 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x830: M[V772] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x831: V779 = 0x1
0x833: V780 = 0xa0
0x835: V781 = 0x2
0x837: V782 = EXP 0x2 0xa0
0x838: V783 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83b: V784 = AND V765 0xffffffffffffffffffffffffffffffffffffffff
0x83c: V785 = 0x4
0x83f: V786 = ADD V772 0x4
0x840: M[V786] = V784
0x841: V787 = 0x24
0x843: V788 = ADD 0x24 V772
0x844: V789 = 0x20
0x846: V790 = 0x40
0x848: V791 = M[0x40]
0x84b: V792 = SUB V788 V791
0x84d: V793 = 0x0
0x851: V794 = EXTCODESIZE V761
0x852: V795 = ISZERO V794
0x853: V796 = ISZERO V795
0x854: V797 = 0x85c
0x857: JUMPI 0x85c V796
---
Entry stack: [V12, 0x129, V716]
Stack pops: 0
Stack additions: [V761, 0xa9059cbb, V763, V761, 0x70a08231, V788, 0x20, V791, V792, V791, 0x0, V761]
Exit stack: [V12, 0x129, V716, V761, 0xa9059cbb, V763, V761, 0x70a08231, V788, 0x20, V791, V792, V791, 0x0, V761]

================================

Block 0x858
[0x858:0x85b]
---
Predecessors: [0x7f5]
Successors: []
---
0x858 PUSH1 0x0
0x85a DUP1
0x85b REVERT
---
0x858: V798 = 0x0
0x85b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x129, V716, V761, 0xa9059cbb, V763, V761, 0x70a08231, V788, 0x20, V791, V792, V791, 0x0, V761]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129, V716, V761, 0xa9059cbb, V763, V761, 0x70a08231, V788, 0x20, V791, V792, V791, 0x0, V761]

================================

Block 0x85c
[0x85c:0x868]
---
Predecessors: [0x7f5]
Successors: [0x869, 0x86d]
---
0x85c JUMPDEST
0x85d PUSH2 0x2c6
0x860 GAS
0x861 SUB
0x862 CALL
0x863 ISZERO
0x864 ISZERO
0x865 PUSH2 0x86d
0x868 JUMPI
---
0x85c: JUMPDEST 
0x85d: V799 = 0x2c6
0x860: V800 = GAS
0x861: V801 = SUB V800 0x2c6
0x862: V802 = CALL V801 V761 0x0 V791 V792 V791 0x20
0x863: V803 = ISZERO V802
0x864: V804 = ISZERO V803
0x865: V805 = 0x86d
0x868: JUMPI 0x86d V804
---
Entry stack: [V12, 0x129, V716, V761, 0xa9059cbb, V763, V761, 0x70a08231, V788, 0x20, V791, V792, V791, 0x0, V761]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x129, V716, V761, 0xa9059cbb, V763, V761, 0x70a08231, V788]

================================

Block 0x869
[0x869:0x86c]
---
Predecessors: [0x85c]
Successors: []
---
0x869 PUSH1 0x0
0x86b DUP1
0x86c REVERT
---
0x869: V806 = 0x0
0x86c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x129, V716, V761, 0xa9059cbb, V763, V761, 0x70a08231, V788]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129, V716, V761, 0xa9059cbb, V763, V761, 0x70a08231, V788]

================================

Block 0x86d
[0x86d:0x8b5]
---
Predecessors: [0x85c]
Successors: [0x8b6, 0x8ba]
---
0x86d JUMPDEST
0x86e POP
0x86f POP
0x870 POP
0x871 PUSH1 0x40
0x873 MLOAD
0x874 DUP1
0x875 MLOAD
0x876 SWAP1
0x877 POP
0x878 PUSH1 0x40
0x87a MLOAD
0x87b PUSH1 0xe0
0x87d PUSH1 0x2
0x87f EXP
0x880 PUSH4 0xffffffff
0x885 DUP6
0x886 AND
0x887 MUL
0x888 DUP2
0x889 MSTORE
0x88a PUSH1 0x1
0x88c PUSH1 0xa0
0x88e PUSH1 0x2
0x890 EXP
0x891 SUB
0x892 SWAP1
0x893 SWAP3
0x894 AND
0x895 PUSH1 0x4
0x897 DUP4
0x898 ADD
0x899 MSTORE
0x89a PUSH1 0x24
0x89c DUP3
0x89d ADD
0x89e MSTORE
0x89f PUSH1 0x44
0x8a1 ADD
0x8a2 PUSH1 0x0
0x8a4 PUSH1 0x40
0x8a6 MLOAD
0x8a7 DUP1
0x8a8 DUP4
0x8a9 SUB
0x8aa DUP2
0x8ab PUSH1 0x0
0x8ad DUP8
0x8ae DUP1
0x8af EXTCODESIZE
0x8b0 ISZERO
0x8b1 ISZERO
0x8b2 PUSH2 0x8ba
0x8b5 JUMPI
---
0x86d: JUMPDEST 
0x871: V807 = 0x40
0x873: V808 = M[0x40]
0x875: V809 = M[V808]
0x878: V810 = 0x40
0x87a: V811 = M[0x40]
0x87b: V812 = 0xe0
0x87d: V813 = 0x2
0x87f: V814 = EXP 0x2 0xe0
0x880: V815 = 0xffffffff
0x886: V816 = AND 0xa9059cbb 0xffffffff
0x887: V817 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x889: M[V811] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x88a: V818 = 0x1
0x88c: V819 = 0xa0
0x88e: V820 = 0x2
0x890: V821 = EXP 0x2 0xa0
0x891: V822 = SUB 0x10000000000000000000000000000000000000000 0x1
0x894: V823 = AND V763 0xffffffffffffffffffffffffffffffffffffffff
0x895: V824 = 0x4
0x898: V825 = ADD V811 0x4
0x899: M[V825] = V823
0x89a: V826 = 0x24
0x89d: V827 = ADD V811 0x24
0x89e: M[V827] = V809
0x89f: V828 = 0x44
0x8a1: V829 = ADD 0x44 V811
0x8a2: V830 = 0x0
0x8a4: V831 = 0x40
0x8a6: V832 = M[0x40]
0x8a9: V833 = SUB V829 V832
0x8ab: V834 = 0x0
0x8af: V835 = EXTCODESIZE V761
0x8b0: V836 = ISZERO V835
0x8b1: V837 = ISZERO V836
0x8b2: V838 = 0x8ba
0x8b5: JUMPI 0x8ba V837
---
Entry stack: [V12, 0x129, V716, V761, 0xa9059cbb, V763, V761, 0x70a08231, V788]
Stack pops: 6
Stack additions: [S5, S4, V829, 0x0, V832, V833, V832, 0x0, S5]
Exit stack: [V12, 0x129, V716, V761, 0xa9059cbb, V829, 0x0, V832, V833, V832, 0x0, V761]

================================

Block 0x8b6
[0x8b6:0x8b9]
---
Predecessors: [0x86d]
Successors: []
---
0x8b6 PUSH1 0x0
0x8b8 DUP1
0x8b9 REVERT
---
0x8b6: V839 = 0x0
0x8b9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x129, V716, V761, 0xa9059cbb, V829, 0x0, V832, V833, V832, 0x0, V761]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129, V716, V761, 0xa9059cbb, V829, 0x0, V832, V833, V832, 0x0, V761]

================================

Block 0x8ba
[0x8ba:0x8c6]
---
Predecessors: [0x86d]
Successors: [0x6d7, 0x8c7]
---
0x8ba JUMPDEST
0x8bb PUSH2 0x2c6
0x8be GAS
0x8bf SUB
0x8c0 CALL
0x8c1 ISZERO
0x8c2 ISZERO
0x8c3 PUSH2 0x6d7
0x8c6 JUMPI
---
0x8ba: JUMPDEST 
0x8bb: V840 = 0x2c6
0x8be: V841 = GAS
0x8bf: V842 = SUB V841 0x2c6
0x8c0: V843 = CALL V842 V761 0x0 V832 V833 V832 0x0
0x8c1: V844 = ISZERO V843
0x8c2: V845 = ISZERO V844
0x8c3: V846 = 0x6d7
0x8c6: JUMPI 0x6d7 V845
---
Entry stack: [V12, 0x129, V716, V761, 0xa9059cbb, V829, 0x0, V832, V833, V832, 0x0, V761]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x129, V716, V761, 0xa9059cbb, V829]

================================

Block 0x8c7
[0x8c7:0x8ca]
---
Predecessors: [0x8ba]
Successors: []
---
0x8c7 PUSH1 0x0
0x8c9 DUP1
0x8ca REVERT
---
0x8c7: V847 = 0x0
0x8ca: REVERT 0x0 0x0
---
Entry stack: [V12, 0x129, V716, V761, 0xa9059cbb, V829]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129, V716, V761, 0xa9059cbb, V829]

================================

Block 0x8cb
[0x8cb:0x8ce]
---
Predecessors: []
Successors: [0x8cf]
---
0x8cb JUMPDEST
0x8cc POP
0x8cd POP
0x8ce POP
---
0x8cb: JUMPDEST 
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x8cf
[0x8cf:0x8cf]
---
Predecessors: [0x8cb, 0xa43]
Successors: [0x8d0]
---
0x8cf JUMPDEST
---
0x8cf: JUMPDEST 
---
Entry stack: [V12, 0x129, V344]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129, V344]

================================

Block 0x8d0
[0x8d0:0x8d1]
---
Predecessors: [0x8cf]
Successors: [0x8d2]
---
0x8d0 JUMPDEST
0x8d1 POP
---
0x8d0: JUMPDEST 
---
Entry stack: [V12, 0x129, V344]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x8d2
[0x8d2:0x8d3]
---
Predecessors: [0x8d0]
Successors: [0x129]
---
0x8d2 JUMPDEST
0x8d3 JUMP
---
0x8d2: JUMPDEST 
0x8d3: JUMP 0x129
---
Entry stack: [V12, 0x129]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x8d4
[0x8d4:0x8d9]
---
Predecessors: [0x1fd]
Successors: [0x140]
---
0x8d4 JUMPDEST
0x8d5 PUSH1 0x7
0x8d7 SLOAD
0x8d8 DUP2
0x8d9 JUMP
---
0x8d4: JUMPDEST 
0x8d5: V848 = 0x7
0x8d7: V849 = S[0x7]
0x8d9: JUMP 0x140
---
Entry stack: [V12, 0x140]
Stack pops: 1
Stack additions: [S0, V849]
Exit stack: [V12, 0x140, V849]

================================

Block 0x8da
[0x8da:0x8df]
---
Predecessors: [0x222]
Successors: [0x140]
---
0x8da JUMPDEST
0x8db PUSH1 0xd
0x8dd SLOAD
0x8de DUP2
0x8df JUMP
---
0x8da: JUMPDEST 
0x8db: V850 = 0xd
0x8dd: V851 = S[0xd]
0x8df: JUMP 0x140
---
Entry stack: [V12, 0x140]
Stack pops: 1
Stack additions: [S0, V851]
Exit stack: [V12, 0x140, V851]

================================

Block 0x8e0
[0x8e0:0x8ee]
---
Predecessors: [0x247]
Successors: [0x24f]
---
0x8e0 JUMPDEST
0x8e1 PUSH1 0x3
0x8e3 SLOAD
0x8e4 PUSH1 0x1
0x8e6 PUSH1 0xa0
0x8e8 PUSH1 0x2
0x8ea EXP
0x8eb SUB
0x8ec AND
0x8ed DUP2
0x8ee JUMP
---
0x8e0: JUMPDEST 
0x8e1: V852 = 0x3
0x8e3: V853 = S[0x3]
0x8e4: V854 = 0x1
0x8e6: V855 = 0xa0
0x8e8: V856 = 0x2
0x8ea: V857 = EXP 0x2 0xa0
0x8eb: V858 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ec: V859 = AND 0xffffffffffffffffffffffffffffffffffffffff V853
0x8ee: JUMP 0x24f
---
Entry stack: [V12, 0x24f]
Stack pops: 1
Stack additions: [S0, V859]
Exit stack: [V12, 0x24f, V859]

================================

Block 0x8ef
[0x8ef:0x905]
---
Predecessors: [0x276]
Successors: [0x906, 0x90a]
---
0x8ef JUMPDEST
0x8f0 PUSH1 0x0
0x8f2 SLOAD
0x8f3 CALLER
0x8f4 PUSH1 0x1
0x8f6 PUSH1 0xa0
0x8f8 PUSH1 0x2
0x8fa EXP
0x8fb SUB
0x8fc SWAP1
0x8fd DUP2
0x8fe AND
0x8ff SWAP2
0x900 AND
0x901 EQ
0x902 PUSH2 0x90a
0x905 JUMPI
---
0x8ef: JUMPDEST 
0x8f0: V860 = 0x0
0x8f2: V861 = S[0x0]
0x8f3: V862 = CALLER
0x8f4: V863 = 0x1
0x8f6: V864 = 0xa0
0x8f8: V865 = 0x2
0x8fa: V866 = EXP 0x2 0xa0
0x8fb: V867 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8fe: V868 = AND 0xffffffffffffffffffffffffffffffffffffffff V862
0x900: V869 = AND V861 0xffffffffffffffffffffffffffffffffffffffff
0x901: V870 = EQ V869 V868
0x902: V871 = 0x90a
0x905: JUMPI 0x90a V870
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x906
[0x906:0x909]
---
Predecessors: [0x8ef]
Successors: []
---
0x906 PUSH1 0x0
0x908 DUP1
0x909 REVERT
---
0x906: V872 = 0x0
0x909: REVERT 0x0 0x0
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x90a
[0x90a:0x93e]
---
Predecessors: [0x8ef]
Successors: [0x93f, 0x943]
---
0x90a JUMPDEST
0x90b PUSH1 0x3
0x90d SLOAD
0x90e PUSH1 0x9
0x910 SLOAD
0x911 PUSH1 0x1
0x913 PUSH1 0xa0
0x915 PUSH1 0x2
0x917 EXP
0x918 SUB
0x919 SWAP1
0x91a SWAP2
0x91b AND
0x91c SWAP1
0x91d DUP1
0x91e ISZERO
0x91f PUSH2 0x8fc
0x922 MUL
0x923 SWAP1
0x924 PUSH1 0x40
0x926 MLOAD
0x927 PUSH1 0x0
0x929 PUSH1 0x40
0x92b MLOAD
0x92c DUP1
0x92d DUP4
0x92e SUB
0x92f DUP2
0x930 DUP6
0x931 DUP9
0x932 DUP9
0x933 CALL
0x934 SWAP4
0x935 POP
0x936 POP
0x937 POP
0x938 POP
0x939 ISZERO
0x93a ISZERO
0x93b PUSH2 0x943
0x93e JUMPI
---
0x90a: JUMPDEST 
0x90b: V873 = 0x3
0x90d: V874 = S[0x3]
0x90e: V875 = 0x9
0x910: V876 = S[0x9]
0x911: V877 = 0x1
0x913: V878 = 0xa0
0x915: V879 = 0x2
0x917: V880 = EXP 0x2 0xa0
0x918: V881 = SUB 0x10000000000000000000000000000000000000000 0x1
0x91b: V882 = AND V874 0xffffffffffffffffffffffffffffffffffffffff
0x91e: V883 = ISZERO V876
0x91f: V884 = 0x8fc
0x922: V885 = MUL 0x8fc V883
0x924: V886 = 0x40
0x926: V887 = M[0x40]
0x927: V888 = 0x0
0x929: V889 = 0x40
0x92b: V890 = M[0x40]
0x92e: V891 = SUB V887 V890
0x933: V892 = CALL V885 V882 V876 V890 V891 V890 0x0
0x939: V893 = ISZERO V892
0x93a: V894 = ISZERO V893
0x93b: V895 = 0x943
0x93e: JUMPI 0x943 V894
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x93f
[0x93f:0x942]
---
Predecessors: [0x90a]
Successors: []
---
0x93f PUSH1 0x0
0x941 DUP1
0x942 REVERT
---
0x93f: V896 = 0x0
0x942: REVERT 0x0 0x0
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x943
[0x943:0x948]
---
Predecessors: [0x90a]
Successors: [0x949]
---
0x943 JUMPDEST
0x944 PUSH1 0x0
0x946 PUSH1 0x9
0x948 SSTORE
---
0x943: JUMPDEST 
0x944: V897 = 0x0
0x946: V898 = 0x9
0x948: S[0x9] = 0x0
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x949
[0x949:0x949]
---
Predecessors: [0x943]
Successors: [0x94a]
---
0x949 JUMPDEST
---
0x949: JUMPDEST 
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x94a
[0x94a:0x94b]
---
Predecessors: [0x949]
Successors: [0x129]
---
0x94a JUMPDEST
0x94b JUMP
---
0x94a: JUMPDEST 
0x94b: JUMP 0x129
---
Entry stack: [V12, 0x129]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x94c
[0x94c:0x951]
---
Predecessors: [0x28b]
Successors: [0x140]
---
0x94c JUMPDEST
0x94d PUSH1 0xa
0x94f SLOAD
0x950 DUP2
0x951 JUMP
---
0x94c: JUMPDEST 
0x94d: V899 = 0xa
0x94f: V900 = S[0xa]
0x951: JUMP 0x140
---
Entry stack: [V12, 0x140]
Stack pops: 1
Stack additions: [S0, V900]
Exit stack: [V12, 0x140, V900]

================================

Block 0x952
[0x952:0x968]
---
Predecessors: [0x2b0]
Successors: [0x969, 0x96d]
---
0x952 JUMPDEST
0x953 PUSH1 0x0
0x955 SLOAD
0x956 CALLER
0x957 PUSH1 0x1
0x959 PUSH1 0xa0
0x95b PUSH1 0x2
0x95d EXP
0x95e SUB
0x95f SWAP1
0x960 DUP2
0x961 AND
0x962 SWAP2
0x963 AND
0x964 EQ
0x965 PUSH2 0x96d
0x968 JUMPI
---
0x952: JUMPDEST 
0x953: V901 = 0x0
0x955: V902 = S[0x0]
0x956: V903 = CALLER
0x957: V904 = 0x1
0x959: V905 = 0xa0
0x95b: V906 = 0x2
0x95d: V907 = EXP 0x2 0xa0
0x95e: V908 = SUB 0x10000000000000000000000000000000000000000 0x1
0x961: V909 = AND 0xffffffffffffffffffffffffffffffffffffffff V903
0x963: V910 = AND V902 0xffffffffffffffffffffffffffffffffffffffff
0x964: V911 = EQ V910 V909
0x965: V912 = 0x96d
0x968: JUMPI 0x96d V911
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x969
[0x969:0x96c]
---
Predecessors: [0x952]
Successors: []
---
0x969 PUSH1 0x0
0x96b DUP1
0x96c REVERT
---
0x969: V913 = 0x0
0x96c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x96d
[0x96d:0x991]
---
Predecessors: [0x952]
Successors: [0x992]
---
0x96d JUMPDEST
0x96e PUSH1 0x0
0x970 DUP1
0x971 SLOAD
0x972 PUSH21 0xff0000000000000000000000000000000000000000
0x988 NOT
0x989 AND
0x98a PUSH1 0xa0
0x98c PUSH1 0x2
0x98e EXP
0x98f OR
0x990 SWAP1
0x991 SSTORE
---
0x96d: JUMPDEST 
0x96e: V914 = 0x0
0x971: V915 = S[0x0]
0x972: V916 = 0xff0000000000000000000000000000000000000000
0x988: V917 = NOT 0xff0000000000000000000000000000000000000000
0x989: V918 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V915
0x98a: V919 = 0xa0
0x98c: V920 = 0x2
0x98e: V921 = EXP 0x2 0xa0
0x98f: V922 = OR 0x10000000000000000000000000000000000000000 V918
0x991: S[0x0] = V922
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x992
[0x992:0x992]
---
Predecessors: [0x96d]
Successors: [0x993]
---
0x992 JUMPDEST
---
0x992: JUMPDEST 
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x993
[0x993:0x994]
---
Predecessors: [0x992]
Successors: [0x129]
---
0x993 JUMPDEST
0x994 JUMP
---
0x993: JUMPDEST 
0x994: JUMP 0x129
---
Entry stack: [V12, 0x129]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x995
[0x995:0x99a]
---
Predecessors: [0x2c5]
Successors: [0x140]
---
0x995 JUMPDEST
0x996 PUSH1 0xc
0x998 SLOAD
0x999 DUP2
0x99a JUMP
---
0x995: JUMPDEST 
0x996: V923 = 0xc
0x998: V924 = S[0xc]
0x99a: JUMP 0x140
---
Entry stack: [V12, 0x140]
Stack pops: 1
Stack additions: [S0, V924]
Exit stack: [V12, 0x140, V924]

================================

Block 0x99b
[0x99b:0x9a0]
---
Predecessors: [0x2ea]
Successors: [0x140]
---
0x99b JUMPDEST
0x99c PUSH1 0x5
0x99e SLOAD
0x99f DUP2
0x9a0 JUMP
---
0x99b: JUMPDEST 
0x99c: V925 = 0x5
0x99e: V926 = S[0x5]
0x9a0: JUMP 0x140
---
Entry stack: [V12, 0x140]
Stack pops: 1
Stack additions: [S0, V926]
Exit stack: [V12, 0x140, V926]

================================

Block 0x9a1
[0x9a1:0x9af]
---
Predecessors: [0x30f]
Successors: [0x24f]
---
0x9a1 JUMPDEST
0x9a2 PUSH1 0x0
0x9a4 SLOAD
0x9a5 PUSH1 0x1
0x9a7 PUSH1 0xa0
0x9a9 PUSH1 0x2
0x9ab EXP
0x9ac SUB
0x9ad AND
0x9ae DUP2
0x9af JUMP
---
0x9a1: JUMPDEST 
0x9a2: V927 = 0x0
0x9a4: V928 = S[0x0]
0x9a5: V929 = 0x1
0x9a7: V930 = 0xa0
0x9a9: V931 = 0x2
0x9ab: V932 = EXP 0x2 0xa0
0x9ac: V933 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ad: V934 = AND 0xffffffffffffffffffffffffffffffffffffffff V928
0x9af: JUMP 0x24f
---
Entry stack: [V12, 0x24f]
Stack pops: 1
Stack additions: [S0, V934]
Exit stack: [V12, 0x24f, V934]

================================

Block 0x9b0
[0x9b0:0x9b5]
---
Predecessors: [0x33e]
Successors: [0x140]
---
0x9b0 JUMPDEST
0x9b1 PUSH1 0x6
0x9b3 SLOAD
0x9b4 DUP2
0x9b5 JUMP
---
0x9b0: JUMPDEST 
0x9b1: V935 = 0x6
0x9b3: V936 = S[0x6]
0x9b5: JUMP 0x140
---
Entry stack: [V12, 0x140]
Stack pops: 1
Stack additions: [S0, V936]
Exit stack: [V12, 0x140, V936]

================================

Block 0x9b6
[0x9b6:0x9c5]
---
Predecessors: [0x363]
Successors: [0x36b]
---
0x9b6 JUMPDEST
0x9b7 PUSH1 0x0
0x9b9 SLOAD
0x9ba PUSH1 0xa0
0x9bc PUSH1 0x2
0x9be EXP
0x9bf SWAP1
0x9c0 DIV
0x9c1 PUSH1 0xff
0x9c3 AND
0x9c4 DUP2
0x9c5 JUMP
---
0x9b6: JUMPDEST 
0x9b7: V937 = 0x0
0x9b9: V938 = S[0x0]
0x9ba: V939 = 0xa0
0x9bc: V940 = 0x2
0x9be: V941 = EXP 0x2 0xa0
0x9c0: V942 = DIV V938 0x10000000000000000000000000000000000000000
0x9c1: V943 = 0xff
0x9c3: V944 = AND 0xff V942
0x9c5: JUMP 0x36b
---
Entry stack: [V12, 0x36b]
Stack pops: 1
Stack additions: [S0, V944]
Exit stack: [V12, 0x36b, V944]

================================

Block 0x9c6
[0x9c6:0x9dc]
---
Predecessors: [0x38a]
Successors: [0x9dd, 0x9e1]
---
0x9c6 JUMPDEST
0x9c7 PUSH1 0x0
0x9c9 SLOAD
0x9ca CALLER
0x9cb PUSH1 0x1
0x9cd PUSH1 0xa0
0x9cf PUSH1 0x2
0x9d1 EXP
0x9d2 SUB
0x9d3 SWAP1
0x9d4 DUP2
0x9d5 AND
0x9d6 SWAP2
0x9d7 AND
0x9d8 EQ
0x9d9 PUSH2 0x9e1
0x9dc JUMPI
---
0x9c6: JUMPDEST 
0x9c7: V945 = 0x0
0x9c9: V946 = S[0x0]
0x9ca: V947 = CALLER
0x9cb: V948 = 0x1
0x9cd: V949 = 0xa0
0x9cf: V950 = 0x2
0x9d1: V951 = EXP 0x2 0xa0
0x9d2: V952 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d5: V953 = AND 0xffffffffffffffffffffffffffffffffffffffff V947
0x9d7: V954 = AND V946 0xffffffffffffffffffffffffffffffffffffffff
0x9d8: V955 = EQ V954 V953
0x9d9: V956 = 0x9e1
0x9dc: JUMPI 0x9e1 V955
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x9dd
[0x9dd:0x9e0]
---
Predecessors: [0x9c6]
Successors: []
---
0x9dd PUSH1 0x0
0x9df DUP1
0x9e0 REVERT
---
0x9dd: V957 = 0x0
0x9e0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x9e1
[0x9e1:0x9f4]
---
Predecessors: [0x9c6]
Successors: [0x9f5, 0x9f9]
---
0x9e1 JUMPDEST
0x9e2 PUSH1 0x0
0x9e4 SLOAD
0x9e5 PUSH1 0xa0
0x9e7 PUSH1 0x2
0x9e9 EXP
0x9ea SWAP1
0x9eb DIV
0x9ec PUSH1 0xff
0x9ee AND
0x9ef ISZERO
0x9f0 ISZERO
0x9f1 PUSH2 0x9f9
0x9f4 JUMPI
---
0x9e1: JUMPDEST 
0x9e2: V958 = 0x0
0x9e4: V959 = S[0x0]
0x9e5: V960 = 0xa0
0x9e7: V961 = 0x2
0x9e9: V962 = EXP 0x2 0xa0
0x9eb: V963 = DIV V959 0x10000000000000000000000000000000000000000
0x9ec: V964 = 0xff
0x9ee: V965 = AND 0xff V963
0x9ef: V966 = ISZERO V965
0x9f0: V967 = ISZERO V966
0x9f1: V968 = 0x9f9
0x9f4: JUMPI 0x9f9 V967
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x9f5
[0x9f5:0x9f8]
---
Predecessors: [0x9e1]
Successors: []
---
0x9f5 PUSH1 0x0
0x9f7 DUP1
0x9f8 REVERT
---
0x9f5: V969 = 0x0
0x9f8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0x9f9
[0x9f9:0xa17]
---
Predecessors: [0x9e1]
Successors: [0xa18]
---
0x9f9 JUMPDEST
0x9fa PUSH1 0x0
0x9fc DUP1
0x9fd SLOAD
0x9fe PUSH21 0xff0000000000000000000000000000000000000000
0xa14 NOT
0xa15 AND
0xa16 SWAP1
0xa17 SSTORE
---
0x9f9: JUMPDEST 
0x9fa: V970 = 0x0
0x9fd: V971 = S[0x0]
0x9fe: V972 = 0xff0000000000000000000000000000000000000000
0xa14: V973 = NOT 0xff0000000000000000000000000000000000000000
0xa15: V974 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V971
0xa17: S[0x0] = V974
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0xa18
[0xa18:0xa18]
---
Predecessors: [0x9f9]
Successors: [0xa19]
---
0xa18 JUMPDEST
---
0xa18: JUMPDEST 
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0xa19
[0xa19:0xa19]
---
Predecessors: [0xa18]
Successors: [0xa1a]
---
0xa19 JUMPDEST
---
0xa19: JUMPDEST 
---
Entry stack: [V12, 0x129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129]

================================

Block 0xa1a
[0xa1a:0xa1b]
---
Predecessors: [0xa19]
Successors: [0x129]
---
0xa1a JUMPDEST
0xa1b JUMP
---
0xa1a: JUMPDEST 
0xa1b: JUMP 0x129
---
Entry stack: [V12, 0x129]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xa1c
[0xa1c:0xa21]
---
Predecessors: [0x39f]
Successors: [0x140]
---
0xa1c JUMPDEST
0xa1d PUSH1 0x9
0xa1f SLOAD
0xa20 DUP2
0xa21 JUMP
---
0xa1c: JUMPDEST 
0xa1d: V975 = 0x9
0xa1f: V976 = S[0x9]
0xa21: JUMP 0x140
---
Entry stack: [V12, 0x140]
Stack pops: 1
Stack additions: [S0, V976]
Exit stack: [V12, 0x140, V976]

================================

Block 0xa22
[0xa22:0xa27]
---
Predecessors: [0x3c4]
Successors: [0x140]
---
0xa22 JUMPDEST
0xa23 PUSH1 0xb
0xa25 SLOAD
0xa26 DUP2
0xa27 JUMP
---
0xa22: JUMPDEST 
0xa23: V977 = 0xb
0xa25: V978 = S[0xb]
0xa27: JUMP 0x140
---
Entry stack: [V12, 0x140]
Stack pops: 1
Stack additions: [S0, V978]
Exit stack: [V12, 0x140, V978]

================================

Block 0xa28
[0xa28:0xa3e]
---
Predecessors: [0x3e9]
Successors: [0xa3f, 0xa43]
---
0xa28 JUMPDEST
0xa29 PUSH1 0x0
0xa2b SLOAD
0xa2c CALLER
0xa2d PUSH1 0x1
0xa2f PUSH1 0xa0
0xa31 PUSH1 0x2
0xa33 EXP
0xa34 SUB
0xa35 SWAP1
0xa36 DUP2
0xa37 AND
0xa38 SWAP2
0xa39 AND
0xa3a EQ
0xa3b PUSH2 0xa43
0xa3e JUMPI
---
0xa28: JUMPDEST 
0xa29: V979 = 0x0
0xa2b: V980 = S[0x0]
0xa2c: V981 = CALLER
0xa2d: V982 = 0x1
0xa2f: V983 = 0xa0
0xa31: V984 = 0x2
0xa33: V985 = EXP 0x2 0xa0
0xa34: V986 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa37: V987 = AND 0xffffffffffffffffffffffffffffffffffffffff V981
0xa39: V988 = AND V980 0xffffffffffffffffffffffffffffffffffffffff
0xa3a: V989 = EQ V988 V987
0xa3b: V990 = 0xa43
0xa3e: JUMPI 0xa43 V989
---
Entry stack: [V12, 0x129, V344]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129, V344]

================================

Block 0xa3f
[0xa3f:0xa42]
---
Predecessors: [0xa28]
Successors: []
---
0xa3f PUSH1 0x0
0xa41 DUP1
0xa42 REVERT
---
0xa3f: V991 = 0x0
0xa42: REVERT 0x0 0x0
---
Entry stack: [V12, 0x129, V344]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129, V344]

================================

Block 0xa43
[0xa43:0xa52]
---
Predecessors: [0xa28]
Successors: [0x8cf, 0xa53]
---
0xa43 JUMPDEST
0xa44 PUSH1 0x1
0xa46 PUSH1 0xa0
0xa48 PUSH1 0x2
0xa4a EXP
0xa4b SUB
0xa4c DUP2
0xa4d AND
0xa4e ISZERO
0xa4f PUSH2 0x8cf
0xa52 JUMPI
---
0xa43: JUMPDEST 
0xa44: V992 = 0x1
0xa46: V993 = 0xa0
0xa48: V994 = 0x2
0xa4a: V995 = EXP 0x2 0xa0
0xa4b: V996 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4d: V997 = AND V344 0xffffffffffffffffffffffffffffffffffffffff
0xa4e: V998 = ISZERO V997
0xa4f: V999 = 0x8cf
0xa52: JUMPI 0x8cf V998
---
Entry stack: [V12, 0x129, V344]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x129, V344]

================================

Block 0xa53
[0xa53:0xa7a]
---
Predecessors: [0xa43]
Successors: [0xa7b]
---
0xa53 PUSH1 0x0
0xa55 DUP1
0xa56 SLOAD
0xa57 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6c NOT
0xa6d AND
0xa6e PUSH1 0x1
0xa70 PUSH1 0xa0
0xa72 PUSH1 0x2
0xa74 EXP
0xa75 SUB
0xa76 DUP4
0xa77 AND
0xa78 OR
0xa79 SWAP1
0xa7a SSTORE
---
0xa53: V1000 = 0x0
0xa56: V1001 = S[0x0]
0xa57: V1002 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6c: V1003 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa6d: V1004 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1001
0xa6e: V1005 = 0x1
0xa70: V1006 = 0xa0
0xa72: V1007 = 0x2
0xa74: V1008 = EXP 0x2 0xa0
0xa75: V1009 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa77: V1010 = AND V344 0xffffffffffffffffffffffffffffffffffffffff
0xa78: V1011 = OR V1010 V1004
0xa7a: S[0x0] = V1011
---
Entry stack: [V12, 0x129, V344]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x129, V344]

================================

Block 0xa7b
[0xa7b:0xa7b]
---
Predecessors: [0xa53]
Successors: [0xa7c]
---
0xa7b JUMPDEST
---
0xa7b: JUMPDEST 
---
Entry stack: [V12, 0x129, V344]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129, V344]

================================

Block 0xa7c
[0xa7c:0xa7c]
---
Predecessors: [0xa7b]
Successors: [0xa7d]
---
0xa7c JUMPDEST
---
0xa7c: JUMPDEST 
---
Entry stack: [V12, 0x129, V344]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x129, V344]

================================

Block 0xa7d
[0xa7d:0xa7f]
---
Predecessors: [0xa7c]
Successors: [0x129]
---
0xa7d JUMPDEST
0xa7e POP
0xa7f JUMP
---
0xa7d: JUMPDEST 
0xa7f: JUMP 0x129
---
Entry stack: [V12, 0x129, V344]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xa80
[0xa80:0xa85]
---
Predecessors: [0x40a]
Successors: [0x140]
---
0xa80 JUMPDEST
0xa81 PUSH1 0x4
0xa83 SLOAD
0xa84 DUP2
0xa85 JUMP
---
0xa80: JUMPDEST 
0xa81: V1012 = 0x4
0xa83: V1013 = S[0x4]
0xa85: JUMP 0x140
---
Entry stack: [V12, 0x140]
Stack pops: 1
Stack additions: [S0, V1013]
Exit stack: [V12, 0x140, V1013]

================================

Block 0xa86
[0xa86:0xa94]
---
Predecessors: [0x42f]
Successors: [0x24f]
---
0xa86 JUMPDEST
0xa87 PUSH1 0x2
0xa89 SLOAD
0xa8a PUSH1 0x1
0xa8c PUSH1 0xa0
0xa8e PUSH1 0x2
0xa90 EXP
0xa91 SUB
0xa92 AND
0xa93 DUP2
0xa94 JUMP
---
0xa86: JUMPDEST 
0xa87: V1014 = 0x2
0xa89: V1015 = S[0x2]
0xa8a: V1016 = 0x1
0xa8c: V1017 = 0xa0
0xa8e: V1018 = 0x2
0xa90: V1019 = EXP 0x2 0xa0
0xa91: V1020 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa92: V1021 = AND 0xffffffffffffffffffffffffffffffffffffffff V1015
0xa94: JUMP 0x24f
---
Entry stack: [V12, 0x24f]
Stack pops: 1
Stack additions: [S0, V1021]
Exit stack: [V12, 0x24f, V1021]

================================

Block 0xa95
[0xa95:0xaa2]
---
Predecessors: [0x478, 0x5a5, 0x5b8, 0x638]
Successors: [0xaa3, 0xaa4]
---
0xa95 JUMPDEST
0xa96 PUSH1 0x0
0xa98 DUP3
0xa99 DUP3
0xa9a ADD
0xa9b DUP4
0xa9c DUP2
0xa9d LT
0xa9e ISZERO
0xa9f PUSH2 0xaa4
0xaa2 JUMPI
---
0xa95: JUMPDEST 
0xa96: V1022 = 0x0
0xa9a: V1023 = ADD S0 S1
0xa9d: V1024 = LT V1023 S1
0xa9e: V1025 = ISZERO V1024
0xa9f: V1026 = 0xaa4
0xaa2: JUMPI 0xaa4 V1025
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, {0x48e, 0x5b8, 0x5ce, 0x64e}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1023]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, {0x48e, 0x5b8, 0x5ce, 0x64e}, S1, S0, 0x0, V1023]

================================

Block 0xaa3
[0xaa3:0xaa3]
---
Predecessors: [0xa95]
Successors: []
---
0xaa3 INVALID
---
0xaa3: INVALID 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, {0x48e, 0x5b8, 0x5ce, 0x64e}, S3, S2, 0x0, V1023]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, {0x48e, 0x5b8, 0x5ce, 0x64e}, S3, S2, 0x0, V1023]

================================

Block 0xaa4
[0xaa4:0xaa7]
---
Predecessors: [0xa95]
Successors: [0xaa8]
---
0xaa4 JUMPDEST
0xaa5 DUP1
0xaa6 SWAP2
0xaa7 POP
---
0xaa4: JUMPDEST 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, {0x48e, 0x5b8, 0x5ce, 0x64e}, S3, S2, 0x0, V1023]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, {0x48e, 0x5b8, 0x5ce, 0x64e}, S3, S2, V1023, V1023]

================================

Block 0xaa8
[0xaa8:0xaae]
---
Predecessors: [0xaa4]
Successors: [0x48e, 0x5b8, 0x5ce, 0x64e]
---
0xaa8 JUMPDEST
0xaa9 POP
0xaaa SWAP3
0xaab SWAP2
0xaac POP
0xaad POP
0xaae JUMP
---
0xaa8: JUMPDEST 
0xaae: JUMP {0x48e, 0x5b8, 0x5ce, 0x64e}
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, {0x48e, 0x5b8, 0x5ce, 0x64e}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0xaaf
[0xaaf:0xaed]
---
Predecessors: []
Successors: []
---
0xaaf STOP
0xab0 LOG1
0xab1 PUSH6 0x627a7a723058
0xab8 SHA3
0xab9 XOR
0xaba SWAP2
0xabb MUL
0xabc ISZERO
0xabd MISSING 0xe8
0xabe MISSING 0xcc
0xabf MISSING 0xe0
0xac0 BYTE
0xac1 DUP13
0xac2 MISSING 0xe2
0xac3 MISSING 0xd6
0xac4 MISSING 0xe7
0xac5 MISSING 0x23
0xac6 COINBASE
0xac7 SDIV
0xac8 MISSING 0xcb
0xac9 MISSING 0x1f
0xaca PUSH5 0x1906599485
0xad0 GAS
0xad1 PUSH28 0xba43ed148184890029
---
0xaaf: STOP 
0xab0: LOG S0 S1 S2
0xab1: V1027 = 0x627a7a723058
0xab8: V1028 = SHA3 0x627a7a723058 S3
0xab9: V1029 = XOR V1028 S4
0xabb: V1030 = MUL S6 S5
0xabc: V1031 = ISZERO V1030
0xabd: MISSING 0xe8
0xabe: MISSING 0xcc
0xabf: MISSING 0xe0
0xac0: V1032 = BYTE S0 S1
0xac2: MISSING 0xe2
0xac3: MISSING 0xd6
0xac4: MISSING 0xe7
0xac5: MISSING 0x23
0xac6: V1033 = COINBASE
0xac7: V1034 = SDIV V1033 S0
0xac8: MISSING 0xcb
0xac9: MISSING 0x1f
0xaca: V1035 = 0x1906599485
0xad0: V1036 = GAS
0xad1: V1037 = 0xba43ed148184890029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1031, V1029, S13, V1032, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V1034, 0xba43ed148184890029, V1036, 0x1906599485]
Exit stack: []

================================

Function 0:
Public function signature: 0x5748be2
Entry block: 0x12d
Exit block: 0x140
Body: 0x12d, 0x134, 0x138, 0x140, 0x6e0

Function 1:
Public function signature: 0x6fdde03
Entry block: 0x152
Exit block: 0x1cf
Body: 0x152, 0x159, 0x15d, 0x165, 0x189, 0x192, 0x19a, 0x1a2, 0x1b6, 0x1cf, 0x6e6, 0x736, 0x73e, 0x751, 0x75f, 0x773, 0x77c

Function 2:
Public function signature: 0x11f2a395
Entry block: 0x1dd
Exit block: 0x12b
Body: 0x129, 0x12a, 0x12b, 0x1dd, 0x1e4, 0x1e8, 0x6d7, 0x6d8, 0x6d9, 0x6db, 0x784, 0x79b, 0x79f, 0x7ac, 0x7b0, 0x7bc, 0x7f0, 0x7f4, 0x7f5, 0x858, 0x85c, 0x869, 0x86d, 0x8b6, 0x8ba, 0x8c7

Function 3:
Public function signature: 0x18886657
Entry block: 0x1f2
Exit block: 0x140
Body: 0x140, 0x1f2, 0x1f9, 0x1fd, 0x8d4

Function 4:
Public function signature: 0x3197cbb6
Entry block: 0x217
Exit block: 0x140
Body: 0x140, 0x217, 0x21e, 0x222, 0x8da

Function 5:
Public function signature: 0x38af3eed
Entry block: 0x23c
Exit block: 0x24f
Body: 0x23c, 0x243, 0x247, 0x24f, 0x8e0

Function 6:
Public function signature: 0x3ccfd60b
Entry block: 0x26b
Exit block: 0x12b
Body: 0x129, 0x12a, 0x12b, 0x26b, 0x272, 0x276, 0x8ef, 0x906, 0x90a, 0x93f, 0x943, 0x949, 0x94a

Function 7:
Public function signature: 0x518ab2a8
Entry block: 0x280
Exit block: 0x140
Body: 0x140, 0x280, 0x287, 0x28b, 0x94c

Function 8:
Public function signature: 0x5ed7ca5b
Entry block: 0x2a5
Exit block: 0x12b
Body: 0x129, 0x12a, 0x12b, 0x2a5, 0x2ac, 0x2b0, 0x952, 0x969, 0x96d, 0x992, 0x993

Function 9:
Public function signature: 0x78e97925
Entry block: 0x2ba
Exit block: 0x140
Body: 0x140, 0x2ba, 0x2c1, 0x2c5, 0x995

Function 10:
Public function signature: 0x84bcefd4
Entry block: 0x2df
Exit block: 0x140
Body: 0x140, 0x2df, 0x2e6, 0x2ea, 0x99b

Function 11:
Public function signature: 0x8da5cb5b
Entry block: 0x304
Exit block: 0x24f
Body: 0x24f, 0x304, 0x30b, 0x30f, 0x9a1

Function 12:
Public function signature: 0xa035b1fe
Entry block: 0x333
Exit block: 0x140
Body: 0x140, 0x333, 0x33a, 0x33e, 0x9b0

Function 13:
Public function signature: 0xb9b8af0b
Entry block: 0x358
Exit block: 0x36b
Body: 0x358, 0x35f, 0x363, 0x36b, 0x9b6

Function 14:
Public function signature: 0xcb3e64fd
Entry block: 0x37f
Exit block: 0x12b
Body: 0x129, 0x12a, 0x12b, 0x37f, 0x386, 0x38a, 0x9c6, 0x9dd, 0x9e1, 0x9f5, 0x9f9, 0xa18, 0xa19, 0xa1a

Function 15:
Public function signature: 0xce845d1d
Entry block: 0x394
Exit block: 0x140
Body: 0x140, 0x394, 0x39b, 0x39f, 0xa1c

Function 16:
Public function signature: 0xd7e64c00
Entry block: 0x3b9
Exit block: 0x140
Body: 0x140, 0x3b9, 0x3c0, 0x3c4, 0xa22

Function 17:
Public function signature: 0xf2fde38b
Entry block: 0x3de
Exit block: 0x12b
Body: 0x129, 0x12a, 0x12b, 0x3de, 0x3e5, 0x3e9, 0x8cf, 0x8d0, 0x8d2, 0xa28, 0xa3f, 0xa43, 0xa53, 0xa7b, 0xa7c, 0xa7d

Function 18:
Public function signature: 0xfb86a404
Entry block: 0x3ff
Exit block: 0x140
Body: 0x140, 0x3ff, 0x406, 0x40a, 0xa80

Function 19:
Public function signature: 0xfc0c546a
Entry block: 0x424
Exit block: 0x24f
Body: 0x24f, 0x424, 0x42b, 0x42f, 0xa86

Function 20:
Public fallback function
Entry block: 0xf6
Exit block: 0x12b
Body: 0xf6, 0xf7, 0x10a, 0x10e, 0x11c, 0x120, 0x12b, 0x453, 0x463, 0x467, 0x474, 0x478, 0x48e, 0x495, 0x496, 0x4f7, 0x4fb, 0x508, 0x50c, 0x520, 0x521, 0x576, 0x57a, 0x587, 0x58b, 0x59c, 0x5a5, 0x5b8

Function 21:
Private function
Entry block: 0xa95
Exit block: 0xaa8
Body: 0xa95, 0xaa4, 0xaa8

