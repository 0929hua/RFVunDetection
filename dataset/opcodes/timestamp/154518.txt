Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x77]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x77
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x77
0xa: JUMPI 0x77 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x8f]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x38af3eed
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x8f
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x38af3eed
0x1a: V12 = EQ V10 0x38af3eed
0x1b: V13 = 0x8f
0x1e: JUMPI 0x8f V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xa1]
---
0x1f DUP1
0x20 PUSH4 0x411e6832
0x25 EQ
0x26 PUSH2 0xa1
0x29 JUMPI
---
0x20: V14 = 0x411e6832
0x25: V15 = EQ 0x411e6832 V10
0x26: V16 = 0xa1
0x29: JUMPI 0xa1 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xb3]
---
0x2a DUP1
0x2b PUSH4 0x4beda18b
0x30 EQ
0x31 PUSH2 0xb3
0x34 JUMPI
---
0x2b: V17 = 0x4beda18b
0x30: V18 = EQ 0x4beda18b V10
0x31: V19 = 0xb3
0x34: JUMPI 0xb3 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xbc]
---
0x35 DUP1
0x36 PUSH4 0x516dde43
0x3b EQ
0x3c PUSH2 0xbc
0x3f JUMPI
---
0x36: V20 = 0x516dde43
0x3b: V21 = EQ 0x516dde43 V10
0x3c: V22 = 0xbc
0x3f: JUMPI 0xbc V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0xc5]
---
0x40 DUP1
0x41 PUSH4 0x6e353a1d
0x46 EQ
0x47 PUSH2 0xc5
0x4a JUMPI
---
0x41: V23 = 0x6e353a1d
0x46: V24 = EQ 0x6e353a1d V10
0x47: V25 = 0xc5
0x4a: JUMPI 0xc5 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xeb]
---
0x4b DUP1
0x4c PUSH4 0x8c3753d7
0x51 EQ
0x52 PUSH2 0xeb
0x55 JUMPI
---
0x4c: V26 = 0x8c3753d7
0x51: V27 = EQ 0x8c3753d7 V10
0x52: V28 = 0xeb
0x55: JUMPI 0xeb V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xf4]
---
0x56 DUP1
0x57 PUSH4 0x984474fb
0x5c EQ
0x5d PUSH2 0xf4
0x60 JUMPI
---
0x57: V29 = 0x984474fb
0x5c: V30 = EQ 0x984474fb V10
0x5d: V31 = 0xf4
0x60: JUMPI 0xf4 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xfd]
---
0x61 DUP1
0x62 PUSH4 0x9cc9299e
0x67 EQ
0x68 PUSH2 0xfd
0x6b JUMPI
---
0x62: V32 = 0x9cc9299e
0x67: V33 = EQ 0x9cc9299e V10
0x68: V34 = 0xfd
0x6b: JUMPI 0xfd V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x11b]
---
0x6c DUP1
0x6d PUSH4 0xb69ef8a8
0x72 EQ
0x73 PUSH2 0x11b
0x76 JUMPI
---
0x6d: V35 = 0xb69ef8a8
0x72: V36 = EQ 0xb69ef8a8 V10
0x73: V37 = 0x11b
0x76: JUMPI 0x11b V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x8a]
---
Predecessors: [0x0, 0x6c]
Successors: [0x8b, 0x20f]
---
0x77 JUMPDEST
0x78 PUSH2 0x124
0x7b PUSH1 0x5
0x7d SLOAD
0x7e PUSH1 0x0
0x80 SWAP1
0x81 DUP2
0x82 SWAP1
0x83 DUP2
0x84 SWAP1
0x85 TIMESTAMP
0x86 LT
0x87 PUSH2 0x20f
0x8a JUMPI
---
0x77: JUMPDEST 
0x78: V38 = 0x124
0x7b: V39 = 0x5
0x7d: V40 = S[0x5]
0x7e: V41 = 0x0
0x85: V42 = TIMESTAMP
0x86: V43 = LT V42 V40
0x87: V44 = 0x20f
0x8a: JUMPI 0x20f V43
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x124, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x124, 0x0, 0x0, 0x0]

================================

Block 0x8b
[0x8b:0x8e]
---
Predecessors: [0x77]
Successors: []
---
0x8b PUSH2 0x2
0x8e JUMP
---
0x8b: V45 = 0x2
0x8e: THROW 
---
Entry stack: [V10, 0x124, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x124, 0x0, 0x0, 0x0]

================================

Block 0x8f
[0x8f:0xa0]
---
Predecessors: [0xb]
Successors: [0x34b]
---
0x8f JUMPDEST
0x90 PUSH2 0x34b
0x93 PUSH1 0x0
0x95 SLOAD
0x96 PUSH1 0x1
0x98 PUSH1 0xa0
0x9a PUSH1 0x2
0x9c EXP
0x9d SUB
0x9e AND
0x9f DUP2
0xa0 JUMP
---
0x8f: JUMPDEST 
0x90: V46 = 0x34b
0x93: V47 = 0x0
0x95: V48 = S[0x0]
0x96: V49 = 0x1
0x98: V50 = 0xa0
0x9a: V51 = 0x2
0x9c: V52 = EXP 0x2 0xa0
0x9d: V53 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xa0: JUMP 0x34b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x34b, V54]
Exit stack: [V10, 0x34b, V54]

================================

Block 0xa1
[0xa1:0xb2]
---
Predecessors: [0x1f]
Successors: [0x34b]
---
0xa1 JUMPDEST
0xa2 PUSH2 0x34b
0xa5 PUSH1 0x1
0xa7 SLOAD
0xa8 PUSH1 0x1
0xaa PUSH1 0xa0
0xac PUSH1 0x2
0xae EXP
0xaf SUB
0xb0 AND
0xb1 DUP2
0xb2 JUMP
---
0xa1: JUMPDEST 
0xa2: V55 = 0x34b
0xa5: V56 = 0x1
0xa7: V57 = S[0x1]
0xa8: V58 = 0x1
0xaa: V59 = 0xa0
0xac: V60 = 0x2
0xae: V61 = EXP 0x2 0xa0
0xaf: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xb2: JUMP 0x34b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x34b, V63]
Exit stack: [V10, 0x34b, V63]

================================

Block 0xb3
[0xb3:0xbb]
---
Predecessors: [0x2a]
Successors: [0x35e]
---
0xb3 JUMPDEST
0xb4 PUSH2 0x35e
0xb7 PUSH1 0x4
0xb9 SLOAD
0xba DUP2
0xbb JUMP
---
0xb3: JUMPDEST 
0xb4: V64 = 0x35e
0xb7: V65 = 0x4
0xb9: V66 = S[0x4]
0xbb: JUMP 0x35e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x35e, V66]
Exit stack: [V10, 0x35e, V66]

================================

Block 0xbc
[0xbc:0xc4]
---
Predecessors: [0x35]
Successors: [0x35e]
---
0xbc JUMPDEST
0xbd PUSH2 0x35e
0xc0 PUSH1 0x5
0xc2 SLOAD
0xc3 DUP2
0xc4 JUMP
---
0xbc: JUMPDEST 
0xbd: V67 = 0x35e
0xc0: V68 = 0x5
0xc2: V69 = S[0x5]
0xc4: JUMP 0x35e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x35e, V69]
Exit stack: [V10, 0x35e, V69]

================================

Block 0xc5
[0xc5:0xe6]
---
Predecessors: [0x40]
Successors: [0xe7, 0x3f5]
---
0xc5 JUMPDEST
0xc6 PUSH2 0x124
0xc9 PUSH1 0x4
0xcb CALLDATALOAD
0xcc PUSH1 0x0
0xce DUP1
0xcf SLOAD
0xd0 DUP2
0xd1 SWAP1
0xd2 DUP2
0xd3 SWAP1
0xd4 CALLER
0xd5 PUSH1 0x1
0xd7 PUSH1 0xa0
0xd9 PUSH1 0x2
0xdb EXP
0xdc SUB
0xdd SWAP1
0xde DUP2
0xdf AND
0xe0 SWAP2
0xe1 AND
0xe2 EQ
0xe3 PUSH2 0x3f5
0xe6 JUMPI
---
0xc5: JUMPDEST 
0xc6: V70 = 0x124
0xc9: V71 = 0x4
0xcb: V72 = CALLDATALOAD 0x4
0xcc: V73 = 0x0
0xcf: V74 = S[0x0]
0xd4: V75 = CALLER
0xd5: V76 = 0x1
0xd7: V77 = 0xa0
0xd9: V78 = 0x2
0xdb: V79 = EXP 0x2 0xa0
0xdc: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0xe1: V82 = AND V74 0xffffffffffffffffffffffffffffffffffffffff
0xe2: V83 = EQ V82 V81
0xe3: V84 = 0x3f5
0xe6: JUMPI 0x3f5 V83
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x124, V72, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x124, V72, 0x0, 0x0, 0x0]

================================

Block 0xe7
[0xe7:0xea]
---
Predecessors: [0xc5]
Successors: []
---
0xe7 PUSH2 0x2
0xea JUMP
---
0xe7: V85 = 0x2
0xea: THROW 
---
Entry stack: [V10, 0x124, V72, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x124, V72, 0x0, 0x0, 0x0]

================================

Block 0xeb
[0xeb:0xf3]
---
Predecessors: [0x4b]
Successors: [0x35e]
---
0xeb JUMPDEST
0xec PUSH2 0x35e
0xef PUSH1 0x3
0xf1 SLOAD
0xf2 DUP2
0xf3 JUMP
---
0xeb: JUMPDEST 
0xec: V86 = 0x35e
0xef: V87 = 0x3
0xf1: V88 = S[0x3]
0xf3: JUMP 0x35e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x35e, V88]
Exit stack: [V10, 0x35e, V88]

================================

Block 0xf4
[0xf4:0xfc]
---
Predecessors: [0x56]
Successors: [0x35e]
---
0xf4 JUMPDEST
0xf5 PUSH2 0x35e
0xf8 PUSH1 0x2
0xfa SLOAD
0xfb DUP2
0xfc JUMP
---
0xf4: JUMPDEST 
0xf5: V89 = 0x35e
0xf8: V90 = 0x2
0xfa: V91 = S[0x2]
0xfc: JUMP 0x35e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x35e, V91]
Exit stack: [V10, 0x35e, V91]

================================

Block 0xfd
[0xfd:0x116]
---
Predecessors: [0x61]
Successors: [0x117, 0x36a]
---
0xfd JUMPDEST
0xfe PUSH2 0x124
0x101 PUSH1 0x0
0x103 SLOAD
0x104 CALLER
0x105 PUSH1 0x1
0x107 PUSH1 0xa0
0x109 PUSH1 0x2
0x10b EXP
0x10c SUB
0x10d SWAP1
0x10e DUP2
0x10f AND
0x110 SWAP2
0x111 AND
0x112 EQ
0x113 PUSH2 0x36a
0x116 JUMPI
---
0xfd: JUMPDEST 
0xfe: V92 = 0x124
0x101: V93 = 0x0
0x103: V94 = S[0x0]
0x104: V95 = CALLER
0x105: V96 = 0x1
0x107: V97 = 0xa0
0x109: V98 = 0x2
0x10b: V99 = EXP 0x2 0xa0
0x10c: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x111: V102 = AND V94 0xffffffffffffffffffffffffffffffffffffffff
0x112: V103 = EQ V102 V101
0x113: V104 = 0x36a
0x116: JUMPI 0x36a V103
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x124]
Exit stack: [V10, 0x124]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0xfd]
Successors: []
---
0x117 PUSH2 0x2
0x11a JUMP
---
0x117: V105 = 0x2
0x11a: THROW 
---
Entry stack: [V10, 0x124]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x124]

================================

Block 0x11b
[0x11b:0x123]
---
Predecessors: [0x6c]
Successors: [0x35e]
---
0x11b JUMPDEST
0x11c PUSH2 0x35e
0x11f PUSH1 0x6
0x121 SLOAD
0x122 DUP2
0x123 JUMP
---
0x11b: JUMPDEST 
0x11c: V106 = 0x35e
0x11f: V107 = 0x6
0x121: V108 = S[0x6]
0x123: JUMP 0x35e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x35e, V108]
Exit stack: [V10, 0x35e, V108]

================================

Block 0x124
[0x124:0x125]
---
Predecessors: [0x20a, 0x368, 0x3ef]
Successors: []
---
0x124 JUMPDEST
0x125 STOP
---
0x124: JUMPDEST 
0x125: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x126
[0x126:0x1b7]
---
Predecessors: [0x280]
Successors: [0x1b8]
---
0x126 JUMPDEST
0x127 PUSH1 0x1
0x129 PUSH1 0x0
0x12b SWAP1
0x12c SLOAD
0x12d SWAP1
0x12e PUSH2 0x100
0x131 EXP
0x132 SWAP1
0x133 DIV
0x134 PUSH1 0x1
0x136 PUSH1 0xa0
0x138 PUSH1 0x2
0x13a EXP
0x13b SUB
0x13c AND
0x13d PUSH1 0x1
0x13f PUSH1 0xa0
0x141 PUSH1 0x2
0x143 EXP
0x144 SUB
0x145 AND
0x146 PUSH4 0x23b872dd
0x14b PUSH1 0x0
0x14d PUSH1 0x0
0x14f SWAP1
0x150 SLOAD
0x151 SWAP1
0x152 PUSH2 0x100
0x155 EXP
0x156 SWAP1
0x157 DIV
0x158 PUSH1 0x1
0x15a PUSH1 0xa0
0x15c PUSH1 0x2
0x15e EXP
0x15f SUB
0x160 AND
0x161 CALLER
0x162 PUSH1 0x6
0x164 PUSH1 0x0
0x166 POP
0x167 SLOAD
0x168 PUSH1 0x40
0x16a MLOAD
0x16b DUP5
0x16c PUSH1 0xe0
0x16e PUSH1 0x2
0x170 EXP
0x171 MUL
0x172 DUP2
0x173 MSTORE
0x174 PUSH1 0x4
0x176 ADD
0x177 DUP1
0x178 DUP5
0x179 PUSH1 0x1
0x17b PUSH1 0xa0
0x17d PUSH1 0x2
0x17f EXP
0x180 SUB
0x181 AND
0x182 DUP2
0x183 MSTORE
0x184 PUSH1 0x20
0x186 ADD
0x187 DUP4
0x188 PUSH1 0x1
0x18a PUSH1 0xa0
0x18c PUSH1 0x2
0x18e EXP
0x18f SUB
0x190 AND
0x191 DUP2
0x192 MSTORE
0x193 PUSH1 0x20
0x195 ADD
0x196 DUP3
0x197 DUP2
0x198 MSTORE
0x199 PUSH1 0x20
0x19b ADD
0x19c SWAP4
0x19d POP
0x19e POP
0x19f POP
0x1a0 POP
0x1a1 PUSH1 0x20
0x1a3 PUSH1 0x40
0x1a5 MLOAD
0x1a6 DUP1
0x1a7 DUP4
0x1a8 SUB
0x1a9 DUP2
0x1aa PUSH1 0x0
0x1ac DUP8
0x1ad PUSH2 0x61da
0x1b0 GAS
0x1b1 SUB
0x1b2 CALL
0x1b3 ISZERO
0x1b4 PUSH2 0x2
0x1b7 JUMPI
---
0x126: JUMPDEST 
0x127: V109 = 0x1
0x129: V110 = 0x0
0x12c: V111 = S[0x1]
0x12e: V112 = 0x100
0x131: V113 = EXP 0x100 0x0
0x133: V114 = DIV V111 0x1
0x134: V115 = 0x1
0x136: V116 = 0xa0
0x138: V117 = 0x2
0x13a: V118 = EXP 0x2 0xa0
0x13b: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13c: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x13d: V121 = 0x1
0x13f: V122 = 0xa0
0x141: V123 = 0x2
0x143: V124 = EXP 0x2 0xa0
0x144: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x145: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x146: V127 = 0x23b872dd
0x14b: V128 = 0x0
0x14d: V129 = 0x0
0x150: V130 = S[0x0]
0x152: V131 = 0x100
0x155: V132 = EXP 0x100 0x0
0x157: V133 = DIV V130 0x1
0x158: V134 = 0x1
0x15a: V135 = 0xa0
0x15c: V136 = 0x2
0x15e: V137 = EXP 0x2 0xa0
0x15f: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x160: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x161: V140 = CALLER
0x162: V141 = 0x6
0x164: V142 = 0x0
0x167: V143 = S[0x6]
0x168: V144 = 0x40
0x16a: V145 = M[0x40]
0x16c: V146 = 0xe0
0x16e: V147 = 0x2
0x170: V148 = EXP 0x2 0xe0
0x171: V149 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x173: M[V145] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x174: V150 = 0x4
0x176: V151 = ADD 0x4 V145
0x179: V152 = 0x1
0x17b: V153 = 0xa0
0x17d: V154 = 0x2
0x17f: V155 = EXP 0x2 0xa0
0x180: V156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x181: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x183: M[V151] = V157
0x184: V158 = 0x20
0x186: V159 = ADD 0x20 V151
0x188: V160 = 0x1
0x18a: V161 = 0xa0
0x18c: V162 = 0x2
0x18e: V163 = EXP 0x2 0xa0
0x18f: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x190: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x192: M[V159] = V165
0x193: V166 = 0x20
0x195: V167 = ADD 0x20 V159
0x198: M[V167] = V143
0x199: V168 = 0x20
0x19b: V169 = ADD 0x20 V167
0x1a1: V170 = 0x20
0x1a3: V171 = 0x40
0x1a5: V172 = M[0x40]
0x1a8: V173 = SUB V169 V172
0x1aa: V174 = 0x0
0x1ad: V175 = 0x61da
0x1b0: V176 = GAS
0x1b1: V177 = SUB V176 0x61da
0x1b2: V178 = CALL V177 V126 0x0 V172 V173 V172 0x20
0x1b3: V179 = ISZERO V178
0x1b4: V180 = 0x2
0x1b7: THROWI V179
---
Entry stack: [V10, 0x124, V232, V248, 0x0]
Stack pops: 0
Stack additions: [V126, 0x23b872dd, V169]
Exit stack: [V10, 0x124, V232, V248, 0x0, V126, 0x23b872dd, V169]

================================

Block 0x1b8
[0x1b8:0x209]
---
Predecessors: [0x126]
Successors: [0x20a]
---
0x1b8 POP
0x1b9 POP
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd PUSH1 0x4
0x1bf SLOAD
0x1c0 PUSH1 0x2
0x1c2 SLOAD
0x1c3 PUSH1 0x6
0x1c5 SLOAD
0x1c6 DUP8
0x1c7 SUB
0x1c8 MUL
0x1c9 DIV
0x1ca SWAP3
0x1cb PUSH1 0x1
0x1cd PUSH1 0xa0
0x1cf PUSH1 0x2
0x1d1 EXP
0x1d2 SUB
0x1d3 DUP6
0x1d4 AND
0x1d5 SWAP3
0x1d6 POP
0x1d7 SWAP1
0x1d8 DUP4
0x1d9 SWAP1
0x1da DUP3
0x1db DUP2
0x1dc DUP2
0x1dd DUP2
0x1de DUP6
0x1df DUP9
0x1e0 DUP4
0x1e1 CALL
0x1e2 POP
0x1e3 POP
0x1e4 DUP2
0x1e5 SLOAD
0x1e6 PUSH1 0x40
0x1e8 MLOAD
0x1e9 PUSH1 0x1
0x1eb PUSH1 0xa0
0x1ed PUSH1 0x2
0x1ef EXP
0x1f0 SUB
0x1f1 SWAP2
0x1f2 SWAP1
0x1f3 SWAP2
0x1f4 AND
0x1f5 SWAP4
0x1f6 POP
0x1f7 CALLVALUE
0x1f8 SWAP2
0x1f9 SWAP1
0x1fa SWAP2
0x1fb SUB
0x1fc SWAP1
0x1fd DUP3
0x1fe DUP2
0x1ff DUP2
0x200 DUP2
0x201 DUP6
0x202 DUP9
0x203 DUP4
0x204 CALL
0x205 POP
0x206 POP
0x207 POP
0x208 POP
0x209 POP
---
0x1ba: V181 = 0x40
0x1bc: V182 = M[0x40]
0x1bd: V183 = 0x4
0x1bf: V184 = S[0x4]
0x1c0: V185 = 0x2
0x1c2: V186 = S[0x2]
0x1c3: V187 = 0x6
0x1c5: V188 = S[0x6]
0x1c7: V189 = SUB V232 V188
0x1c8: V190 = MUL V189 V186
0x1c9: V191 = DIV V190 V184
0x1cb: V192 = 0x1
0x1cd: V193 = 0xa0
0x1cf: V194 = 0x2
0x1d1: V195 = EXP 0x2 0xa0
0x1d2: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d4: V197 = AND V248 0xffffffffffffffffffffffffffffffffffffffff
0x1e1: V198 = CALL 0x0 V197 V191 V182 0x0 V182 0x0
0x1e5: V199 = S[0x0]
0x1e6: V200 = 0x40
0x1e8: V201 = M[0x40]
0x1e9: V202 = 0x1
0x1eb: V203 = 0xa0
0x1ed: V204 = 0x2
0x1ef: V205 = EXP 0x2 0xa0
0x1f0: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f4: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x1f7: V208 = CALLVALUE
0x1fb: V209 = SUB V208 V191
0x204: V210 = CALL 0x0 V207 V209 V201 0x0 V201 0x0
---
Entry stack: [V10, 0x124, V232, V248, 0x0, V126, 0x23b872dd, V169]
Stack pops: 6
Stack additions: [S5, S4, V191]
Exit stack: [V10, 0x124, V232, V248, V191]

================================

Block 0x20a
[0x20a:0x20e]
---
Predecessors: [0x1b8, 0x323]
Successors: [0x124]
---
0x20a JUMPDEST
0x20b POP
0x20c POP
0x20d POP
0x20e JUMP
---
0x20a: JUMPDEST 
0x20e: JUMP 0x124
---
Entry stack: [V10, 0x124, V232, V248, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x20f
[0x20f:0x27f]
---
Predecessors: [0x77]
Successors: [0x280]
---
0x20f JUMPDEST
0x210 PUSH1 0x2
0x212 SLOAD
0x213 PUSH1 0x4
0x215 SLOAD
0x216 PUSH1 0x1
0x218 SLOAD
0x219 DUP4
0x21a SLOAD
0x21b PUSH32 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x23c PUSH1 0x60
0x23e SWAP1
0x23f DUP2
0x240 MSTORE
0x241 PUSH1 0x1
0x243 PUSH1 0xa0
0x245 PUSH1 0x2
0x247 EXP
0x248 SUB
0x249 SWAP2
0x24a DUP3
0x24b AND
0x24c PUSH1 0x64
0x24e MSTORE
0x24f ADDRESS
0x250 DUP3
0x251 AND
0x252 PUSH1 0x84
0x254 MSTORE
0x255 CALLVALUE
0x256 SWAP1
0x257 SWAP4
0x258 MUL
0x259 SWAP4
0x25a SWAP1
0x25b SWAP4
0x25c DIV
0x25d SWAP6
0x25e POP
0x25f SWAP2
0x260 SWAP1
0x261 SWAP2
0x262 AND
0x263 SWAP1
0x264 PUSH4 0xdd62ed3e
0x269 SWAP1
0x26a PUSH1 0xa4
0x26c SWAP1
0x26d PUSH1 0x20
0x26f SWAP1
0x270 PUSH1 0x44
0x272 DUP2
0x273 DUP8
0x274 DUP8
0x275 PUSH2 0x61da
0x278 GAS
0x279 SUB
0x27a CALL
0x27b ISZERO
0x27c PUSH2 0x2
0x27f JUMPI
---
0x20f: JUMPDEST 
0x210: V211 = 0x2
0x212: V212 = S[0x2]
0x213: V213 = 0x4
0x215: V214 = S[0x4]
0x216: V215 = 0x1
0x218: V216 = S[0x1]
0x21a: V217 = S[0x0]
0x21b: V218 = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x23c: V219 = 0x60
0x240: M[0x60] = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x241: V220 = 0x1
0x243: V221 = 0xa0
0x245: V222 = 0x2
0x247: V223 = EXP 0x2 0xa0
0x248: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24b: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x24c: V226 = 0x64
0x24e: M[0x64] = V225
0x24f: V227 = ADDRESS
0x251: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x252: V229 = 0x84
0x254: M[0x84] = V228
0x255: V230 = CALLVALUE
0x258: V231 = MUL V214 V230
0x25c: V232 = DIV V231 V212
0x262: V233 = AND V216 0xffffffffffffffffffffffffffffffffffffffff
0x264: V234 = 0xdd62ed3e
0x26a: V235 = 0xa4
0x26d: V236 = 0x20
0x270: V237 = 0x44
0x275: V238 = 0x61da
0x278: V239 = GAS
0x279: V240 = SUB V239 0x61da
0x27a: V241 = CALL V240 V233 0x0 0x60 0x44 0x60 0x20
0x27b: V242 = ISZERO V241
0x27c: V243 = 0x2
0x27f: THROWI V242
---
Entry stack: [V10, 0x124, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V232, S1, S0, V233, 0xdd62ed3e, 0xa4]
Exit stack: [V10, 0x124, V232, 0x0, 0x0, V233, 0xdd62ed3e, 0xa4]

================================

Block 0x280
[0x280:0x296]
---
Predecessors: [0x20f]
Successors: [0x126, 0x297]
---
0x280 POP
0x281 POP
0x282 PUSH1 0x40
0x284 MLOAD
0x285 MLOAD
0x286 PUSH1 0x6
0x288 DUP2
0x289 SWAP1
0x28a SSTORE
0x28b CALLER
0x28c SWAP4
0x28d POP
0x28e DUP5
0x28f SWAP1
0x290 LT
0x291 SWAP1
0x292 POP
0x293 PUSH2 0x126
0x296 JUMPI
---
0x282: V244 = 0x40
0x284: V245 = M[0x40]
0x285: V246 = M[V245]
0x286: V247 = 0x6
0x28a: S[0x6] = V246
0x28b: V248 = CALLER
0x290: V249 = LT V246 V232
0x293: V250 = 0x126
0x296: JUMPI 0x126 V249
---
Entry stack: [V10, 0x124, V232, 0x0, 0x0, V233, 0xdd62ed3e, 0xa4]
Stack pops: 6
Stack additions: [S5, V248, S3]
Exit stack: [V10, 0x124, V232, V248, 0x0]

================================

Block 0x297
[0x297:0x322]
---
Predecessors: [0x280]
Successors: [0x323]
---
0x297 PUSH1 0x1
0x299 PUSH1 0x0
0x29b SWAP1
0x29c SLOAD
0x29d SWAP1
0x29e PUSH2 0x100
0x2a1 EXP
0x2a2 SWAP1
0x2a3 DIV
0x2a4 PUSH1 0x1
0x2a6 PUSH1 0xa0
0x2a8 PUSH1 0x2
0x2aa EXP
0x2ab SUB
0x2ac AND
0x2ad PUSH1 0x1
0x2af PUSH1 0xa0
0x2b1 PUSH1 0x2
0x2b3 EXP
0x2b4 SUB
0x2b5 AND
0x2b6 PUSH4 0x23b872dd
0x2bb PUSH1 0x0
0x2bd PUSH1 0x0
0x2bf SWAP1
0x2c0 SLOAD
0x2c1 SWAP1
0x2c2 PUSH2 0x100
0x2c5 EXP
0x2c6 SWAP1
0x2c7 DIV
0x2c8 PUSH1 0x1
0x2ca PUSH1 0xa0
0x2cc PUSH1 0x2
0x2ce EXP
0x2cf SUB
0x2d0 AND
0x2d1 CALLER
0x2d2 DUP7
0x2d3 PUSH1 0x40
0x2d5 MLOAD
0x2d6 DUP5
0x2d7 PUSH1 0xe0
0x2d9 PUSH1 0x2
0x2db EXP
0x2dc MUL
0x2dd DUP2
0x2de MSTORE
0x2df PUSH1 0x4
0x2e1 ADD
0x2e2 DUP1
0x2e3 DUP5
0x2e4 PUSH1 0x1
0x2e6 PUSH1 0xa0
0x2e8 PUSH1 0x2
0x2ea EXP
0x2eb SUB
0x2ec AND
0x2ed DUP2
0x2ee MSTORE
0x2ef PUSH1 0x20
0x2f1 ADD
0x2f2 DUP4
0x2f3 PUSH1 0x1
0x2f5 PUSH1 0xa0
0x2f7 PUSH1 0x2
0x2f9 EXP
0x2fa SUB
0x2fb AND
0x2fc DUP2
0x2fd MSTORE
0x2fe PUSH1 0x20
0x300 ADD
0x301 DUP3
0x302 DUP2
0x303 MSTORE
0x304 PUSH1 0x20
0x306 ADD
0x307 SWAP4
0x308 POP
0x309 POP
0x30a POP
0x30b POP
0x30c PUSH1 0x20
0x30e PUSH1 0x40
0x310 MLOAD
0x311 DUP1
0x312 DUP4
0x313 SUB
0x314 DUP2
0x315 PUSH1 0x0
0x317 DUP8
0x318 PUSH2 0x61da
0x31b GAS
0x31c SUB
0x31d CALL
0x31e ISZERO
0x31f PUSH2 0x2
0x322 JUMPI
---
0x297: V251 = 0x1
0x299: V252 = 0x0
0x29c: V253 = S[0x1]
0x29e: V254 = 0x100
0x2a1: V255 = EXP 0x100 0x0
0x2a3: V256 = DIV V253 0x1
0x2a4: V257 = 0x1
0x2a6: V258 = 0xa0
0x2a8: V259 = 0x2
0x2aa: V260 = EXP 0x2 0xa0
0x2ab: V261 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ac: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x2ad: V263 = 0x1
0x2af: V264 = 0xa0
0x2b1: V265 = 0x2
0x2b3: V266 = EXP 0x2 0xa0
0x2b4: V267 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b5: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x2b6: V269 = 0x23b872dd
0x2bb: V270 = 0x0
0x2bd: V271 = 0x0
0x2c0: V272 = S[0x0]
0x2c2: V273 = 0x100
0x2c5: V274 = EXP 0x100 0x0
0x2c7: V275 = DIV V272 0x1
0x2c8: V276 = 0x1
0x2ca: V277 = 0xa0
0x2cc: V278 = 0x2
0x2ce: V279 = EXP 0x2 0xa0
0x2cf: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d0: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x2d1: V282 = CALLER
0x2d3: V283 = 0x40
0x2d5: V284 = M[0x40]
0x2d7: V285 = 0xe0
0x2d9: V286 = 0x2
0x2db: V287 = EXP 0x2 0xe0
0x2dc: V288 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x2de: M[V284] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x2df: V289 = 0x4
0x2e1: V290 = ADD 0x4 V284
0x2e4: V291 = 0x1
0x2e6: V292 = 0xa0
0x2e8: V293 = 0x2
0x2ea: V294 = EXP 0x2 0xa0
0x2eb: V295 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ec: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x2ee: M[V290] = V296
0x2ef: V297 = 0x20
0x2f1: V298 = ADD 0x20 V290
0x2f3: V299 = 0x1
0x2f5: V300 = 0xa0
0x2f7: V301 = 0x2
0x2f9: V302 = EXP 0x2 0xa0
0x2fa: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fb: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x2fd: M[V298] = V304
0x2fe: V305 = 0x20
0x300: V306 = ADD 0x20 V298
0x303: M[V306] = V232
0x304: V307 = 0x20
0x306: V308 = ADD 0x20 V306
0x30c: V309 = 0x20
0x30e: V310 = 0x40
0x310: V311 = M[0x40]
0x313: V312 = SUB V308 V311
0x315: V313 = 0x0
0x318: V314 = 0x61da
0x31b: V315 = GAS
0x31c: V316 = SUB V315 0x61da
0x31d: V317 = CALL V316 V268 0x0 V311 V312 V311 0x20
0x31e: V318 = ISZERO V317
0x31f: V319 = 0x2
0x322: THROWI V318
---
Entry stack: [V10, 0x124, V232, V248, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V268, 0x23b872dd, V308]
Exit stack: [V10, 0x124, V232, V248, 0x0, V268, 0x23b872dd, V308]

================================

Block 0x323
[0x323:0x34a]
---
Predecessors: [0x297]
Successors: [0x20a]
---
0x323 POP
0x324 POP
0x325 PUSH1 0x40
0x327 MLOAD
0x328 DUP3
0x329 SLOAD
0x32a PUSH1 0x1
0x32c PUSH1 0xa0
0x32e PUSH1 0x2
0x330 EXP
0x331 SUB
0x332 AND
0x333 SWAP2
0x334 POP
0x335 DUP3
0x336 SWAP1
0x337 CALLVALUE
0x338 SWAP1
0x339 DUP3
0x33a DUP2
0x33b DUP2
0x33c DUP2
0x33d DUP6
0x33e DUP9
0x33f DUP4
0x340 CALL
0x341 SWAP4
0x342 POP
0x343 POP
0x344 POP
0x345 POP
0x346 POP
0x347 PUSH2 0x20a
0x34a JUMP
---
0x325: V320 = 0x40
0x327: V321 = M[0x40]
0x329: V322 = S[0x0]
0x32a: V323 = 0x1
0x32c: V324 = 0xa0
0x32e: V325 = 0x2
0x330: V326 = EXP 0x2 0xa0
0x331: V327 = SUB 0x10000000000000000000000000000000000000000 0x1
0x332: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x337: V329 = CALLVALUE
0x340: V330 = CALL 0x0 V328 V329 V321 0x0 V321 0x0
0x347: V331 = 0x20a
0x34a: JUMP 0x20a
---
Entry stack: [V10, 0x124, V232, V248, 0x0, V268, 0x23b872dd, V308]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x124, V232, V248, 0x0]

================================

Block 0x34b
[0x34b:0x35d]
---
Predecessors: [0x8f, 0xa1]
Successors: []
---
0x34b JUMPDEST
0x34c PUSH1 0x1
0x34e PUSH1 0xa0
0x350 PUSH1 0x2
0x352 EXP
0x353 SUB
0x354 AND
0x355 PUSH1 0x60
0x357 SWAP1
0x358 DUP2
0x359 MSTORE
0x35a PUSH1 0x20
0x35c SWAP1
0x35d RETURN
---
0x34b: JUMPDEST 
0x34c: V332 = 0x1
0x34e: V333 = 0xa0
0x350: V334 = 0x2
0x352: V335 = EXP 0x2 0xa0
0x353: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x354: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x355: V338 = 0x60
0x359: M[0x60] = V337
0x35a: V339 = 0x20
0x35d: RETURN 0x60 0x20
---
Entry stack: [V10, 0x34b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x34b]

================================

Block 0x35e
[0x35e:0x367]
---
Predecessors: [0xb3, 0xbc, 0xeb, 0xf4, 0x11b]
Successors: []
---
0x35e JUMPDEST
0x35f PUSH1 0x60
0x361 SWAP1
0x362 DUP2
0x363 MSTORE
0x364 PUSH1 0x20
0x366 SWAP1
0x367 RETURN
---
0x35e: JUMPDEST 
0x35f: V340 = 0x60
0x363: M[0x60] = S0
0x364: V341 = 0x20
0x367: RETURN 0x60 0x20
---
Entry stack: [V10, 0x35e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x35e]

================================

Block 0x368
[0x368:0x369]
---
Predecessors: [0x36a]
Successors: [0x124]
---
0x368 JUMPDEST
0x369 JUMP
---
0x368: JUMPDEST 
0x369: JUMP 0x124
---
Entry stack: [V10, 0x124]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x36a
[0x36a:0x373]
---
Predecessors: [0xfd]
Successors: [0x368, 0x374]
---
0x36a JUMPDEST
0x36b PUSH1 0x5
0x36d SLOAD
0x36e TIMESTAMP
0x36f LT
0x370 PUSH2 0x368
0x373 JUMPI
---
0x36a: JUMPDEST 
0x36b: V342 = 0x5
0x36d: V343 = S[0x5]
0x36e: V344 = TIMESTAMP
0x36f: V345 = LT V344 V343
0x370: V346 = 0x368
0x373: JUMPI 0x368 V345
---
Entry stack: [V10, 0x124]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x124]

================================

Block 0x374
[0x374:0x380]
---
Predecessors: [0x36a]
Successors: []
---
0x374 PUSH1 0x0
0x376 SLOAD
0x377 PUSH1 0x1
0x379 PUSH1 0xa0
0x37b PUSH1 0x2
0x37d EXP
0x37e SUB
0x37f AND
0x380 SELFDESTRUCT
---
0x374: V347 = 0x0
0x376: V348 = S[0x0]
0x377: V349 = 0x1
0x379: V350 = 0xa0
0x37b: V351 = 0x2
0x37d: V352 = EXP 0x2 0xa0
0x37e: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37f: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x380: SELFDESTRUCT V354
---
Entry stack: [V10, 0x124]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x124]

================================

Block 0x381
[0x381:0x3eb]
---
Predecessors: [0x44a]
Successors: [0x3ec]
---
0x381 JUMPDEST
0x382 PUSH1 0x40
0x384 DUP1
0x385 MLOAD
0x386 DUP3
0x387 SLOAD
0x388 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3a9 DUP3
0x3aa MSTORE
0x3ab PUSH1 0x1
0x3ad PUSH1 0xa0
0x3af PUSH1 0x2
0x3b1 EXP
0x3b2 SUB
0x3b3 SWAP1
0x3b4 DUP2
0x3b5 AND
0x3b6 PUSH1 0x4
0x3b8 DUP4
0x3b9 ADD
0x3ba MSTORE
0x3bb PUSH1 0x24
0x3bd DUP3
0x3be ADD
0x3bf DUP7
0x3c0 SWAP1
0x3c1 MSTORE
0x3c2 SWAP2
0x3c3 MLOAD
0x3c4 SWAP2
0x3c5 DUP7
0x3c6 AND
0x3c7 SWAP2
0x3c8 PUSH4 0xa9059cbb
0x3cd SWAP2
0x3ce PUSH1 0x44
0x3d0 DUP2
0x3d1 DUP2
0x3d2 ADD
0x3d3 SWAP3
0x3d4 PUSH1 0x20
0x3d6 SWAP3
0x3d7 SWAP1
0x3d8 SWAP2
0x3d9 SWAP1
0x3da DUP3
0x3db SWAP1
0x3dc SUB
0x3dd ADD
0x3de DUP2
0x3df DUP8
0x3e0 DUP8
0x3e1 PUSH2 0x61da
0x3e4 GAS
0x3e5 SUB
0x3e6 CALL
0x3e7 ISZERO
0x3e8 PUSH2 0x2
0x3eb JUMPI
---
0x381: JUMPDEST 
0x382: V355 = 0x40
0x385: V356 = M[0x40]
0x387: V357 = S[0x0]
0x388: V358 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3aa: M[V356] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3ab: V359 = 0x1
0x3ad: V360 = 0xa0
0x3af: V361 = 0x2
0x3b1: V362 = EXP 0x2 0xa0
0x3b2: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b5: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x3b6: V365 = 0x4
0x3b9: V366 = ADD V356 0x4
0x3ba: M[V366] = V364
0x3bb: V367 = 0x24
0x3be: V368 = ADD V356 0x24
0x3c1: M[V368] = V406
0x3c3: V369 = M[0x40]
0x3c6: V370 = AND V72 0xffffffffffffffffffffffffffffffffffffffff
0x3c8: V371 = 0xa9059cbb
0x3ce: V372 = 0x44
0x3d2: V373 = ADD 0x44 V356
0x3d4: V374 = 0x20
0x3dc: V375 = SUB V356 V369
0x3dd: V376 = ADD V375 0x44
0x3e1: V377 = 0x61da
0x3e4: V378 = GAS
0x3e5: V379 = SUB V378 0x61da
0x3e6: V380 = CALL V379 V370 0x0 V369 V376 V369 0x20
0x3e7: V381 = ISZERO V380
0x3e8: V382 = 0x2
0x3eb: THROWI V381
---
Entry stack: [V10, 0x124, V72, V406, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V370, 0xa9059cbb, V373]
Exit stack: [V10, 0x124, V72, V406, 0x0, 0x0, V370, 0xa9059cbb, V373]

================================

Block 0x3ec
[0x3ec:0x3ee]
---
Predecessors: [0x381]
Successors: [0x3ef]
---
0x3ec POP
0x3ed POP
0x3ee POP
---
0x3ec: NOP 
---
Entry stack: [V10, 0x124, V72, V406, 0x0, 0x0, V370, 0xa9059cbb, V373]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x124, V72, V406, 0x0, 0x0]

================================

Block 0x3ef
[0x3ef:0x3f4]
---
Predecessors: [0x3ec, 0x538]
Successors: [0x124]
---
0x3ef JUMPDEST
0x3f0 POP
0x3f1 POP
0x3f2 POP
0x3f3 POP
0x3f4 JUMP
---
0x3ef: JUMPDEST 
0x3f4: JUMP 0x124
---
Entry stack: [V10, 0x124, V72, V406, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f5
[0x3f5:0x449]
---
Predecessors: [0xc5]
Successors: [0x44a]
---
0x3f5 JUMPDEST
0x3f6 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x417 PUSH1 0x60
0x419 SWAP1
0x41a DUP2
0x41b MSTORE
0x41c ADDRESS
0x41d PUSH1 0x1
0x41f PUSH1 0xa0
0x421 PUSH1 0x2
0x423 EXP
0x424 SUB
0x425 SWAP1
0x426 DUP2
0x427 AND
0x428 PUSH1 0x64
0x42a MSTORE
0x42b DUP6
0x42c AND
0x42d SWAP1
0x42e PUSH4 0x70a08231
0x433 SWAP1
0x434 PUSH1 0x84
0x436 SWAP1
0x437 PUSH1 0x20
0x439 SWAP1
0x43a PUSH1 0x24
0x43c DUP2
0x43d DUP8
0x43e DUP8
0x43f PUSH2 0x61da
0x442 GAS
0x443 SUB
0x444 CALL
0x445 ISZERO
0x446 PUSH2 0x2
0x449 JUMPI
---
0x3f5: JUMPDEST 
0x3f6: V383 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x417: V384 = 0x60
0x41b: M[0x60] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x41c: V385 = ADDRESS
0x41d: V386 = 0x1
0x41f: V387 = 0xa0
0x421: V388 = 0x2
0x423: V389 = EXP 0x2 0xa0
0x424: V390 = SUB 0x10000000000000000000000000000000000000000 0x1
0x427: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x428: V392 = 0x64
0x42a: M[0x64] = V391
0x42c: V393 = AND V72 0xffffffffffffffffffffffffffffffffffffffff
0x42e: V394 = 0x70a08231
0x434: V395 = 0x84
0x437: V396 = 0x20
0x43a: V397 = 0x24
0x43f: V398 = 0x61da
0x442: V399 = GAS
0x443: V400 = SUB V399 0x61da
0x444: V401 = CALL V400 V393 0x0 0x60 0x24 0x60 0x20
0x445: V402 = ISZERO V401
0x446: V403 = 0x2
0x449: THROWI V402
---
Entry stack: [V10, 0x124, V72, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V393, 0x70a08231, 0x84]
Exit stack: [V10, 0x124, V72, 0x0, 0x0, 0x0, V393, 0x70a08231, 0x84]

================================

Block 0x44a
[0x44a:0x46c]
---
Predecessors: [0x3f5]
Successors: [0x381, 0x46d]
---
0x44a POP
0x44b POP
0x44c PUSH1 0x40
0x44e MLOAD
0x44f MLOAD
0x450 SWAP4
0x451 POP
0x452 PUSH20 0x943bbeef41460a3f0f3ac7f7a062128ad0ba9cb1
0x467 EQ
0x468 ISZERO
0x469 PUSH2 0x381
0x46c JUMPI
---
0x44c: V404 = 0x40
0x44e: V405 = M[0x40]
0x44f: V406 = M[V405]
0x452: V407 = 0x943bbeef41460a3f0f3ac7f7a062128ad0ba9cb1
0x467: V408 = EQ 0x943bbeef41460a3f0f3ac7f7a062128ad0ba9cb1 V393
0x468: V409 = ISZERO V408
0x469: V410 = 0x381
0x46c: JUMPI 0x381 V409
---
Entry stack: [V10, 0x124, V72, 0x0, 0x0, 0x0, V393, 0x70a08231, 0x84]
Stack pops: 6
Stack additions: [V406, S4, S3]
Exit stack: [V10, 0x124, V72, V406, 0x0, 0x0]

================================

Block 0x46d
[0x46d:0x4bd]
---
Predecessors: [0x44a]
Successors: [0x4be]
---
0x46d DUP4
0x46e PUSH1 0x1
0x470 PUSH1 0xa0
0x472 PUSH1 0x2
0x474 EXP
0x475 SUB
0x476 AND
0x477 PUSH4 0xfae9d06d
0x47c DUP5
0x47d ADDRESS
0x47e PUSH1 0x40
0x480 MLOAD
0x481 DUP4
0x482 PUSH1 0xe0
0x484 PUSH1 0x2
0x486 EXP
0x487 MUL
0x488 DUP2
0x489 MSTORE
0x48a PUSH1 0x4
0x48c ADD
0x48d DUP1
0x48e DUP4
0x48f DUP2
0x490 MSTORE
0x491 PUSH1 0x20
0x493 ADD
0x494 DUP3
0x495 PUSH1 0x1
0x497 PUSH1 0xa0
0x499 PUSH1 0x2
0x49b EXP
0x49c SUB
0x49d AND
0x49e DUP2
0x49f MSTORE
0x4a0 PUSH1 0x20
0x4a2 ADD
0x4a3 SWAP3
0x4a4 POP
0x4a5 POP
0x4a6 POP
0x4a7 PUSH1 0x20
0x4a9 PUSH1 0x40
0x4ab MLOAD
0x4ac DUP1
0x4ad DUP4
0x4ae SUB
0x4af DUP2
0x4b0 PUSH1 0x0
0x4b2 DUP8
0x4b3 PUSH2 0x61da
0x4b6 GAS
0x4b7 SUB
0x4b8 CALL
0x4b9 ISZERO
0x4ba PUSH2 0x2
0x4bd JUMPI
---
0x46e: V411 = 0x1
0x470: V412 = 0xa0
0x472: V413 = 0x2
0x474: V414 = EXP 0x2 0xa0
0x475: V415 = SUB 0x10000000000000000000000000000000000000000 0x1
0x476: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x477: V417 = 0xfae9d06d
0x47d: V418 = ADDRESS
0x47e: V419 = 0x40
0x480: V420 = M[0x40]
0x482: V421 = 0xe0
0x484: V422 = 0x2
0x486: V423 = EXP 0x2 0xe0
0x487: V424 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xfae9d06d
0x489: M[V420] = 0xfae9d06d00000000000000000000000000000000000000000000000000000000
0x48a: V425 = 0x4
0x48c: V426 = ADD 0x4 V420
0x490: M[V426] = V406
0x491: V427 = 0x20
0x493: V428 = ADD 0x20 V426
0x495: V429 = 0x1
0x497: V430 = 0xa0
0x499: V431 = 0x2
0x49b: V432 = EXP 0x2 0xa0
0x49c: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49d: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x49f: M[V428] = V434
0x4a0: V435 = 0x20
0x4a2: V436 = ADD 0x20 V428
0x4a7: V437 = 0x20
0x4a9: V438 = 0x40
0x4ab: V439 = M[0x40]
0x4ae: V440 = SUB V436 V439
0x4b0: V441 = 0x0
0x4b3: V442 = 0x61da
0x4b6: V443 = GAS
0x4b7: V444 = SUB V443 0x61da
0x4b8: V445 = CALL V444 V416 0x0 V439 V440 V439 0x20
0x4b9: V446 = ISZERO V445
0x4ba: V447 = 0x2
0x4bd: THROWI V446
---
Entry stack: [V10, 0x124, V72, V406, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V416, 0xfae9d06d, V436]
Exit stack: [V10, 0x124, V72, V406, 0x0, 0x0, V416, 0xfae9d06d, V436]

================================

Block 0x4be
[0x4be:0x537]
---
Predecessors: [0x46d]
Successors: [0x538]
---
0x4be POP
0x4bf POP
0x4c0 POP
0x4c1 PUSH1 0x40
0x4c3 MLOAD
0x4c4 DUP1
0x4c5 MLOAD
0x4c6 SWAP1
0x4c7 PUSH1 0x20
0x4c9 ADD
0x4ca POP
0x4cb SWAP2
0x4cc POP
0x4cd DUP2
0x4ce DUP4
0x4cf SUB
0x4d0 SWAP1
0x4d1 POP
0x4d2 DUP4
0x4d3 PUSH1 0x1
0x4d5 PUSH1 0xa0
0x4d7 PUSH1 0x2
0x4d9 EXP
0x4da SUB
0x4db AND
0x4dc PUSH4 0xa9059cbb
0x4e1 PUSH1 0x0
0x4e3 PUSH1 0x0
0x4e5 SWAP1
0x4e6 SLOAD
0x4e7 SWAP1
0x4e8 PUSH2 0x100
0x4eb EXP
0x4ec SWAP1
0x4ed DIV
0x4ee PUSH1 0x1
0x4f0 PUSH1 0xa0
0x4f2 PUSH1 0x2
0x4f4 EXP
0x4f5 SUB
0x4f6 AND
0x4f7 DUP4
0x4f8 PUSH1 0x40
0x4fa MLOAD
0x4fb DUP4
0x4fc PUSH1 0xe0
0x4fe PUSH1 0x2
0x500 EXP
0x501 MUL
0x502 DUP2
0x503 MSTORE
0x504 PUSH1 0x4
0x506 ADD
0x507 DUP1
0x508 DUP4
0x509 PUSH1 0x1
0x50b PUSH1 0xa0
0x50d PUSH1 0x2
0x50f EXP
0x510 SUB
0x511 AND
0x512 DUP2
0x513 MSTORE
0x514 PUSH1 0x20
0x516 ADD
0x517 DUP3
0x518 DUP2
0x519 MSTORE
0x51a PUSH1 0x20
0x51c ADD
0x51d SWAP3
0x51e POP
0x51f POP
0x520 POP
0x521 PUSH1 0x20
0x523 PUSH1 0x40
0x525 MLOAD
0x526 DUP1
0x527 DUP4
0x528 SUB
0x529 DUP2
0x52a PUSH1 0x0
0x52c DUP8
0x52d PUSH2 0x61da
0x530 GAS
0x531 SUB
0x532 CALL
0x533 ISZERO
0x534 PUSH2 0x2
0x537 JUMPI
---
0x4c1: V448 = 0x40
0x4c3: V449 = M[0x40]
0x4c5: V450 = M[V449]
0x4c7: V451 = 0x20
0x4c9: V452 = ADD 0x20 V449
0x4cf: V453 = SUB V406 V450
0x4d3: V454 = 0x1
0x4d5: V455 = 0xa0
0x4d7: V456 = 0x2
0x4d9: V457 = EXP 0x2 0xa0
0x4da: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4db: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x4dc: V460 = 0xa9059cbb
0x4e1: V461 = 0x0
0x4e3: V462 = 0x0
0x4e6: V463 = S[0x0]
0x4e8: V464 = 0x100
0x4eb: V465 = EXP 0x100 0x0
0x4ed: V466 = DIV V463 0x1
0x4ee: V467 = 0x1
0x4f0: V468 = 0xa0
0x4f2: V469 = 0x2
0x4f4: V470 = EXP 0x2 0xa0
0x4f5: V471 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f6: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x4f8: V473 = 0x40
0x4fa: V474 = M[0x40]
0x4fc: V475 = 0xe0
0x4fe: V476 = 0x2
0x500: V477 = EXP 0x2 0xe0
0x501: V478 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x503: M[V474] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x504: V479 = 0x4
0x506: V480 = ADD 0x4 V474
0x509: V481 = 0x1
0x50b: V482 = 0xa0
0x50d: V483 = 0x2
0x50f: V484 = EXP 0x2 0xa0
0x510: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x511: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V472
0x513: M[V480] = V486
0x514: V487 = 0x20
0x516: V488 = ADD 0x20 V480
0x519: M[V488] = V453
0x51a: V489 = 0x20
0x51c: V490 = ADD 0x20 V488
0x521: V491 = 0x20
0x523: V492 = 0x40
0x525: V493 = M[0x40]
0x528: V494 = SUB V490 V493
0x52a: V495 = 0x0
0x52d: V496 = 0x61da
0x530: V497 = GAS
0x531: V498 = SUB V497 0x61da
0x532: V499 = CALL V498 V459 0x0 V493 V494 V493 0x20
0x533: V500 = ISZERO V499
0x534: V501 = 0x2
0x537: THROWI V500
---
Entry stack: [V10, 0x124, V72, V406, 0x0, 0x0, V416, 0xfae9d06d, V436]
Stack pops: 7
Stack additions: [S6, S5, V450, V453, V459, 0xa9059cbb, V490]
Exit stack: [V10, 0x124, V72, V406, V450, V453, V459, 0xa9059cbb, V490]

================================

Block 0x538
[0x538:0x53f]
---
Predecessors: [0x4be]
Successors: [0x3ef]
---
0x538 POP
0x539 PUSH2 0x3ef
0x53c SWAP2
0x53d POP
0x53e POP
0x53f JUMP
---
0x539: V502 = 0x3ef
0x53f: JUMP 0x3ef
---
Entry stack: [V10, 0x124, V72, V406, V450, V453, V459, 0xa9059cbb, V490]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x124, V72, V406, V450, V453]

================================

Function 0:
Public function signature: 0x38af3eed
Entry block: 0x8f
Exit block: 0x34b
Body: 0x8f, 0x34b

Function 1:
Public function signature: 0x411e6832
Entry block: 0xa1
Exit block: 0x34b
Body: 0xa1, 0x34b

Function 2:
Public function signature: 0x4beda18b
Entry block: 0xb3
Exit block: 0x35e
Body: 0xb3, 0x35e

Function 3:
Public function signature: 0x516dde43
Entry block: 0xbc
Exit block: 0x35e
Body: 0xbc, 0x35e

Function 4:
Public function signature: 0x6e353a1d
Entry block: 0xc5
Exit block: 0x124
Body: 0xc5, 0xe7, 0x124, 0x381, 0x3ec, 0x3ef, 0x3f5, 0x44a, 0x46d, 0x4be, 0x538

Function 5:
Public function signature: 0x8c3753d7
Entry block: 0xeb
Exit block: 0x35e
Body: 0xeb, 0x35e

Function 6:
Public function signature: 0x984474fb
Entry block: 0xf4
Exit block: 0x35e
Body: 0xf4, 0x35e

Function 7:
Public function signature: 0x9cc9299e
Entry block: 0xfd
Exit block: 0x124
Body: 0xfd, 0x117, 0x124, 0x368, 0x36a, 0x374

Function 8:
Public function signature: 0xb69ef8a8
Entry block: 0x11b
Exit block: 0x35e
Body: 0x11b, 0x35e

Function 9:
Public fallback function
Entry block: 0x77
Exit block: 0x124
Body: 0x77, 0x8b, 0x124, 0x126, 0x1b8, 0x20a, 0x20f, 0x280, 0x297, 0x323

