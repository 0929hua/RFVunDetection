Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xeb]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xeb
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xeb
0xa: JUMPI 0xeb V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x242]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x242
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x242
0x24: JUMPI 0x242 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x254]
---
0x25 DUP1
0x26 PUSH4 0x13a5d9e4
0x2b EQ
0x2c PUSH2 0x254
0x2f JUMPI
---
0x26: V16 = 0x13a5d9e4
0x2b: V17 = EQ 0x13a5d9e4 V12
0x2c: V18 = 0x254
0x2f: JUMPI 0x254 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x276]
---
0x30 DUP1
0x31 PUSH4 0x13f4e977
0x36 EQ
0x37 PUSH2 0x276
0x3a JUMPI
---
0x31: V19 = 0x13f4e977
0x36: V20 = EQ 0x13f4e977 V12
0x37: V21 = 0x276
0x3a: JUMPI 0x276 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x298]
---
0x3b DUP1
0x3c PUSH4 0x1cee0700
0x41 EQ
0x42 PUSH2 0x298
0x45 JUMPI
---
0x3c: V22 = 0x1cee0700
0x41: V23 = EQ 0x1cee0700 V12
0x42: V24 = 0x298
0x45: JUMPI 0x298 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x2da]
---
0x46 DUP1
0x47 PUSH4 0x29dcb0cf
0x4c EQ
0x4d PUSH2 0x2da
0x50 JUMPI
---
0x47: V25 = 0x29dcb0cf
0x4c: V26 = EQ 0x29dcb0cf V12
0x4d: V27 = 0x2da
0x50: JUMPI 0x2da V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x2fc]
---
0x51 DUP1
0x52 PUSH4 0x2a3dc703
0x57 EQ
0x58 PUSH2 0x2fc
0x5b JUMPI
---
0x52: V28 = 0x2a3dc703
0x57: V29 = EQ 0x2a3dc703 V12
0x58: V30 = 0x2fc
0x5b: JUMPI 0x2fc V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x320]
---
0x5c DUP1
0x5d PUSH4 0x3fc4caa1
0x62 EQ
0x63 PUSH2 0x320
0x66 JUMPI
---
0x5d: V31 = 0x3fc4caa1
0x62: V32 = EQ 0x3fc4caa1 V12
0x63: V33 = 0x320
0x66: JUMPI 0x320 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x345]
---
0x67 DUP1
0x68 PUSH4 0x47e17349
0x6d EQ
0x6e PUSH2 0x345
0x71 JUMPI
---
0x68: V34 = 0x47e17349
0x6d: V35 = EQ 0x47e17349 V12
0x6e: V36 = 0x345
0x71: JUMPI 0x345 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x36a]
---
0x72 DUP1
0x73 PUSH4 0x6ca596fa
0x78 EQ
0x79 PUSH2 0x36a
0x7c JUMPI
---
0x73: V37 = 0x6ca596fa
0x78: V38 = EQ 0x6ca596fa V12
0x79: V39 = 0x36a
0x7c: JUMPI 0x36a V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x38e]
---
0x7d DUP1
0x7e PUSH4 0x85f63a4a
0x83 EQ
0x84 PUSH2 0x38e
0x87 JUMPI
---
0x7e: V40 = 0x85f63a4a
0x83: V41 = EQ 0x85f63a4a V12
0x84: V42 = 0x38e
0x87: JUMPI 0x38e V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x3ba]
---
0x88 DUP1
0x89 PUSH4 0x8a2e196c
0x8e EQ
0x8f PUSH2 0x3ba
0x92 JUMPI
---
0x89: V43 = 0x8a2e196c
0x8e: V44 = EQ 0x8a2e196c V12
0x8f: V45 = 0x3ba
0x92: JUMPI 0x3ba V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x3dc]
---
0x93 DUP1
0x94 PUSH4 0x8d6cc56d
0x99 EQ
0x9a PUSH2 0x3dc
0x9d JUMPI
---
0x94: V46 = 0x8d6cc56d
0x99: V47 = EQ 0x8d6cc56d V12
0x9a: V48 = 0x3dc
0x9d: JUMPI 0x3dc V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x3f1]
---
0x9e DUP1
0x9f PUSH4 0xa2b475f3
0xa4 EQ
0xa5 PUSH2 0x3f1
0xa8 JUMPI
---
0x9f: V49 = 0xa2b475f3
0xa4: V50 = EQ 0xa2b475f3 V12
0xa5: V51 = 0x3f1
0xa8: JUMPI 0x3f1 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x41d]
---
0xa9 DUP1
0xaa PUSH4 0xe59cef17
0xaf EQ
0xb0 PUSH2 0x41d
0xb3 JUMPI
---
0xaa: V52 = 0xe59cef17
0xaf: V53 = EQ 0xe59cef17 V12
0xb0: V54 = 0x41d
0xb3: JUMPI 0x41d V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x43f]
---
0xb4 DUP1
0xb5 PUSH4 0xe8974832
0xba EQ
0xbb PUSH2 0x43f
0xbe JUMPI
---
0xb5: V55 = 0xe8974832
0xba: V56 = EQ 0xe8974832 V12
0xbb: V57 = 0x43f
0xbe: JUMPI 0x43f V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x46b]
---
0xbf DUP1
0xc0 PUSH4 0xe8bd5cc4
0xc5 EQ
0xc6 PUSH2 0x46b
0xc9 JUMPI
---
0xc0: V58 = 0xe8bd5cc4
0xc5: V59 = EQ 0xe8bd5cc4 V12
0xc6: V60 = 0x46b
0xc9: JUMPI 0x46b V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x48d]
---
0xca DUP1
0xcb PUSH4 0xf1eae25c
0xd0 EQ
0xd1 PUSH2 0x48d
0xd4 JUMPI
---
0xcb: V61 = 0xf1eae25c
0xd0: V62 = EQ 0xf1eae25c V12
0xd1: V63 = 0x48d
0xd4: JUMPI 0x48d V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x49f]
---
0xd5 DUP1
0xd6 PUSH4 0xf2fde38b
0xdb EQ
0xdc PUSH2 0x49f
0xdf JUMPI
---
0xd6: V64 = 0xf2fde38b
0xdb: V65 = EQ 0xf2fde38b V12
0xdc: V66 = 0x49f
0xdf: JUMPI 0x49f V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x4bd]
---
0xe0 DUP1
0xe1 PUSH4 0xfd6b7ef8
0xe6 EQ
0xe7 PUSH2 0x4bd
0xea JUMPI
---
0xe1: V67 = 0xfd6b7ef8
0xe6: V68 = EQ 0xfd6b7ef8 V12
0xe7: V69 = 0x4bd
0xea: JUMPI 0x4bd V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0x0, 0xe0]
Successors: [0xef]
---
0xeb JUMPDEST
0xec PUSH2 0x240
---
0xeb: JUMPDEST 
0xec: V70 = 0x240
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x240]
Exit stack: [V12, 0x240]

================================

Block 0xef
[0xef:0xfd]
---
Predecessors: [0xeb]
Successors: [0xfe, 0x104]
---
0xef JUMPDEST
0xf0 PUSH1 0x8
0xf2 SLOAD
0xf3 PUSH1 0x0
0xf5 SWAP1
0xf6 PUSH1 0xff
0xf8 AND
0xf9 DUP1
0xfa PUSH2 0x104
0xfd JUMPI
---
0xef: JUMPDEST 
0xf0: V71 = 0x8
0xf2: V72 = S[0x8]
0xf3: V73 = 0x0
0xf6: V74 = 0xff
0xf8: V75 = AND 0xff V72
0xfa: V76 = 0x104
0xfd: JUMPI 0x104 V75
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: [0x0, V75]
Exit stack: [V12, 0x240, 0x0, V75]

================================

Block 0xfe
[0xfe:0x103]
---
Predecessors: [0xef]
Successors: [0x104]
---
0xfe POP
0xff PUSH1 0x0
0x101 CALLVALUE
0x102 GT
0x103 ISZERO
---
0xff: V77 = 0x0
0x101: V78 = CALLVALUE
0x102: V79 = GT V78 0x0
0x103: V80 = ISZERO V79
---
Entry stack: [V12, 0x240, 0x0, V75]
Stack pops: 1
Stack additions: [V80]
Exit stack: [V12, 0x240, 0x0, V80]

================================

Block 0x104
[0x104:0x109]
---
Predecessors: [0xef, 0xfe]
Successors: [0x10a, 0x10f]
---
0x104 JUMPDEST
0x105 ISZERO
0x106 PUSH2 0x10f
0x109 JUMPI
---
0x104: JUMPDEST 
0x105: V81 = ISZERO S0
0x106: V82 = 0x10f
0x109: JUMPI 0x10f V81
---
Entry stack: [V12, 0x240, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x240, 0x0]

================================

Block 0x10a
[0x10a:0x10e]
---
Predecessors: [0x104]
Successors: []
---
0x10a PUSH1 0x0
0x10c PUSH1 0x0
0x10e REVERT
---
0x10a: V83 = 0x0
0x10c: V84 = 0x0
0x10e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x240, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, 0x0]

================================

Block 0x10f
[0x10f:0x121]
---
Predecessors: [0x104]
Successors: [0x122, 0x22b]
---
0x10f JUMPDEST
0x110 PUSH1 0x4
0x112 SLOAD
0x113 CALLVALUE
0x114 MUL
0x115 SWAP1
0x116 POP
0x117 DUP1
0x118 PUSH1 0x6
0x11a SLOAD
0x11b LT
0x11c ISZERO
0x11d ISZERO
0x11e PUSH2 0x22b
0x121 JUMPI
---
0x10f: JUMPDEST 
0x110: V85 = 0x4
0x112: V86 = S[0x4]
0x113: V87 = CALLVALUE
0x114: V88 = MUL V87 V86
0x118: V89 = 0x6
0x11a: V90 = S[0x6]
0x11b: V91 = LT V90 V88
0x11c: V92 = ISZERO V91
0x11d: V93 = ISZERO V92
0x11e: V94 = 0x22b
0x121: JUMPI 0x22b V93
---
Entry stack: [V12, 0x240, 0x0]
Stack pops: 1
Stack additions: [V88]
Exit stack: [V12, 0x240, V88]

================================

Block 0x122
[0x122:0x129]
---
Predecessors: [0x10f]
Successors: [0x4cf]
---
0x122 PUSH2 0x12a
0x125 DUP2
0x126 PUSH2 0x4cf
0x129 JUMP
---
0x122: V95 = 0x12a
0x126: V96 = 0x4cf
0x129: JUMP 0x4cf
---
Entry stack: [V12, 0x240, V88]
Stack pops: 1
Stack additions: [S0, 0x12a, S0]
Exit stack: [V12, 0x240, V88, 0x12a, V88]

================================

Block 0x12a
[0x12a:0x1a8]
---
Predecessors: [0x589]
Successors: [0x1a9, 0x1aa]
---
0x12a JUMPDEST
0x12b PUSH1 0xa
0x12d SLOAD
0x12e PUSH1 0x0
0x130 DUP1
0x131 SLOAD
0x132 PUSH1 0x40
0x134 DUP1
0x135 MLOAD
0x136 PUSH1 0x20
0x138 SWAP1
0x139 DUP2
0x13a ADD
0x13b DUP5
0x13c SWAP1
0x13d MSTORE
0x13e DUP2
0x13f MLOAD
0x140 PUSH32 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x161 DUP2
0x162 MSTORE
0x163 PUSH1 0x1
0x165 PUSH1 0xa0
0x167 PUSH1 0x2
0x169 EXP
0x16a SUB
0x16b SWAP4
0x16c DUP5
0x16d AND
0x16e PUSH1 0x4
0x170 DUP3
0x171 ADD
0x172 MSTORE
0x173 CALLER
0x174 DUP5
0x175 AND
0x176 PUSH1 0x24
0x178 DUP3
0x179 ADD
0x17a MSTORE
0x17b PUSH1 0x44
0x17d DUP2
0x17e ADD
0x17f DUP8
0x180 SWAP1
0x181 MSTORE
0x182 SWAP2
0x183 MLOAD
0x184 SWAP6
0x185 SWAP7
0x186 POP
0x187 SWAP2
0x188 SWAP1
0x189 SWAP4
0x18a AND
0x18b SWAP4
0x18c PUSH4 0x23b872dd
0x191 SWAP4
0x192 PUSH1 0x64
0x194 DUP1
0x195 DUP3
0x196 ADD
0x197 SWAP5
0x198 SWAP2
0x199 DUP4
0x19a SWAP1
0x19b SUB
0x19c ADD
0x19d SWAP1
0x19e DUP3
0x19f SWAP1
0x1a0 DUP8
0x1a1 DUP1
0x1a2 EXTCODESIZE
0x1a3 ISZERO
0x1a4 ISZERO
0x1a5 PUSH2 0x1aa
0x1a8 JUMPI
---
0x12a: JUMPDEST 
0x12b: V97 = 0xa
0x12d: V98 = S[0xa]
0x12e: V99 = 0x0
0x131: V100 = S[0x0]
0x132: V101 = 0x40
0x135: V102 = M[0x40]
0x136: V103 = 0x20
0x13a: V104 = ADD 0x20 V102
0x13d: M[V104] = 0x0
0x13f: V105 = M[0x40]
0x140: V106 = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x162: M[V105] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x163: V107 = 0x1
0x165: V108 = 0xa0
0x167: V109 = 0x2
0x169: V110 = EXP 0x2 0xa0
0x16a: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16d: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x16e: V113 = 0x4
0x171: V114 = ADD V105 0x4
0x172: M[V114] = V112
0x173: V115 = CALLER
0x175: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x176: V117 = 0x24
0x179: V118 = ADD V105 0x24
0x17a: M[V118] = V116
0x17b: V119 = 0x44
0x17e: V120 = ADD V105 0x44
0x181: M[V120] = S0
0x183: V121 = M[0x40]
0x18a: V122 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V123 = 0x23b872dd
0x192: V124 = 0x64
0x196: V125 = ADD V105 0x64
0x19b: V126 = SUB V105 V121
0x19c: V127 = ADD V126 0x64
0x1a2: V128 = EXTCODESIZE V122
0x1a3: V129 = ISZERO V128
0x1a4: V130 = ISZERO V129
0x1a5: V131 = 0x1aa
0x1a8: JUMPI 0x1aa V130
---
Entry stack: [V12, 0x240, S1, S0]
Stack pops: 2
Stack additions: [S0, V122, 0x23b872dd, V125, 0x20, V121, V127, V121, 0x0, V122]
Exit stack: [V12, 0x240, S0, V122, 0x23b872dd, V125, 0x20, V121, V127, V121, 0x0, V122]

================================

Block 0x1a9
[0x1a9:0x1a9]
---
Predecessors: [0x12a]
Successors: []
---
0x1a9 INVALID
---
0x1a9: INVALID 
---
Entry stack: [V12, 0x240, S9, V122, 0x23b872dd, V125, 0x20, V121, V127, V121, 0x0, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, S9, V122, 0x23b872dd, V125, 0x20, V121, V127, V121, 0x0, V122]

================================

Block 0x1aa
[0x1aa:0x1b5]
---
Predecessors: [0x12a]
Successors: [0x1b6, 0x1b7]
---
0x1aa JUMPDEST
0x1ab PUSH1 0x32
0x1ad GAS
0x1ae SUB
0x1af CALL
0x1b0 ISZERO
0x1b1 ISZERO
0x1b2 PUSH2 0x1b7
0x1b5 JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V132 = 0x32
0x1ad: V133 = GAS
0x1ae: V134 = SUB V133 0x32
0x1af: V135 = CALL V134 V122 0x0 V121 V127 V121 0x20
0x1b0: V136 = ISZERO V135
0x1b1: V137 = ISZERO V136
0x1b2: V138 = 0x1b7
0x1b5: JUMPI 0x1b7 V137
---
Entry stack: [V12, 0x240, S9, V122, 0x23b872dd, V125, 0x20, V121, V127, V121, 0x0, V122]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x240, S9, V122, 0x23b872dd, V125]

================================

Block 0x1b6
[0x1b6:0x1b6]
---
Predecessors: [0x1aa]
Successors: []
---
0x1b6 INVALID
---
0x1b6: INVALID 
---
Entry stack: [V12, 0x240, S3, V122, 0x23b872dd, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, S3, V122, 0x23b872dd, V125]

================================

Block 0x1b7
[0x1b7:0x1c4]
---
Predecessors: [0x1aa]
Successors: [0x1c5, 0x22b]
---
0x1b7 JUMPDEST
0x1b8 POP
0x1b9 POP
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd MLOAD
0x1be ISZERO
0x1bf SWAP1
0x1c0 POP
0x1c1 PUSH2 0x22b
0x1c4 JUMPI
---
0x1b7: JUMPDEST 
0x1ba: V139 = 0x40
0x1bc: V140 = M[0x40]
0x1bd: V141 = M[V140]
0x1be: V142 = ISZERO V141
0x1c1: V143 = 0x22b
0x1c4: JUMPI 0x22b V142
---
Entry stack: [V12, 0x240, S3, V122, 0x23b872dd, V125]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x240, S3]

================================

Block 0x1c5
[0x1c5:0x1da]
---
Predecessors: [0x1b7]
Successors: [0x591]
---
0x1c5 PUSH1 0x7
0x1c7 DUP1
0x1c8 SLOAD
0x1c9 CALLVALUE
0x1ca SWAP1
0x1cb DUP2
0x1cc ADD
0x1cd SWAP1
0x1ce SWAP2
0x1cf SSTORE
0x1d0 PUSH2 0x1db
0x1d3 SWAP1
0x1d4 CALLER
0x1d5 SWAP1
0x1d6 DUP4
0x1d7 PUSH2 0x591
0x1da JUMP
---
0x1c5: V144 = 0x7
0x1c8: V145 = S[0x7]
0x1c9: V146 = CALLVALUE
0x1cc: V147 = ADD V146 V145
0x1cf: S[0x7] = V147
0x1d0: V148 = 0x1db
0x1d4: V149 = CALLER
0x1d7: V150 = 0x591
0x1da: JUMP 0x591
---
Entry stack: [V12, 0x240, S0]
Stack pops: 1
Stack additions: [S0, 0x1db, V149, V146, S0]
Exit stack: [V12, 0x240, S0, 0x1db, V149, V146, S0]

================================

Block 0x1db
[0x1db:0x22a]
---
Predecessors: [0x74d]
Successors: [0x231]
---
0x1db JUMPDEST
0x1dc PUSH1 0x7
0x1de SLOAD
0x1df PUSH1 0x40
0x1e1 DUP1
0x1e2 MLOAD
0x1e3 PUSH1 0x1
0x1e5 PUSH1 0xa0
0x1e7 PUSH1 0x2
0x1e9 EXP
0x1ea SUB
0x1eb CALLER
0x1ec AND
0x1ed DUP2
0x1ee MSTORE
0x1ef CALLVALUE
0x1f0 PUSH1 0x20
0x1f2 DUP3
0x1f3 ADD
0x1f4 MSTORE
0x1f5 DUP1
0x1f6 DUP3
0x1f7 ADD
0x1f8 SWAP3
0x1f9 SWAP1
0x1fa SWAP3
0x1fb MSTORE
0x1fc MLOAD
0x1fd PUSH32 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x21e SWAP2
0x21f DUP2
0x220 SWAP1
0x221 SUB
0x222 PUSH1 0x60
0x224 ADD
0x225 SWAP1
0x226 LOG1
0x227 PUSH2 0x231
0x22a JUMP
---
0x1db: JUMPDEST 
0x1dc: V151 = 0x7
0x1de: V152 = S[0x7]
0x1df: V153 = 0x40
0x1e2: V154 = M[0x40]
0x1e3: V155 = 0x1
0x1e5: V156 = 0xa0
0x1e7: V157 = 0x2
0x1e9: V158 = EXP 0x2 0xa0
0x1ea: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1eb: V160 = CALLER
0x1ec: V161 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: M[V154] = V161
0x1ef: V162 = CALLVALUE
0x1f0: V163 = 0x20
0x1f3: V164 = ADD V154 0x20
0x1f4: M[V164] = V162
0x1f7: V165 = ADD 0x40 V154
0x1fb: M[V165] = V152
0x1fc: V166 = M[0x40]
0x1fd: V167 = 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x221: V168 = SUB V154 V166
0x222: V169 = 0x60
0x224: V170 = ADD 0x60 V168
0x226: LOG V166 V170 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x227: V171 = 0x231
0x22a: JUMP 0x231
---
Entry stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3, S2, S1, S0]

================================

Block 0x22b
[0x22b:0x230]
---
Predecessors: [0x10f, 0x1b7]
Successors: []
---
0x22b JUMPDEST
0x22c PUSH1 0x0
0x22e PUSH1 0x0
0x230 REVERT
---
0x22b: JUMPDEST 
0x22c: V172 = 0x0
0x22e: V173 = 0x0
0x230: REVERT 0x0 0x0
---
Entry stack: [V12, 0x240, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, S0]

================================

Block 0x231
[0x231:0x235]
---
Predecessors: [0x1db]
Successors: [0x23c]
---
0x231 JUMPDEST
0x232 PUSH2 0x23c
0x235 JUMP
---
0x231: JUMPDEST 
0x232: V174 = 0x23c
0x235: JUMP 0x23c
---
Entry stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3, S2, S1, S0]

================================

Block 0x236
[0x236:0x23b]
---
Predecessors: []
Successors: []
---
0x236 JUMPDEST
0x237 PUSH1 0x0
0x239 PUSH1 0x0
0x23b REVERT
---
0x236: JUMPDEST 
0x237: V175 = 0x0
0x239: V176 = 0x0
0x23b: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x23c
[0x23c:0x23c]
---
Predecessors: [0x231, 0x991, 0x997]
Successors: [0x23d]
---
0x23c JUMPDEST
---
0x23c: JUMPDEST 
---
Entry stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3, S2, S1, S0]

================================

Block 0x23d
[0x23d:0x23f]
---
Predecessors: [0x23c]
Successors: [0x240]
---
0x23d JUMPDEST
0x23e POP
0x23f JUMP
---
0x23d: JUMPDEST 
0x23f: JUMP S1
---
Entry stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3, S2]

================================

Block 0x240
[0x240:0x241]
---
Predecessors: [0x23d, 0x74d, 0x7eb, 0x8ac, 0xa07, 0xd01]
Successors: []
---
0x240 JUMPDEST
0x241 STOP
---
0x240: JUMPDEST 
0x241: STOP 
---
Entry stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3, S2, S1, S0]

================================

Block 0x242
[0x242:0x248]
---
Predecessors: [0xb]
Successors: [0x249, 0x24a]
---
0x242 JUMPDEST
0x243 CALLVALUE
0x244 ISZERO
0x245 PUSH2 0x24a
0x248 JUMPI
---
0x242: JUMPDEST 
0x243: V177 = CALLVALUE
0x244: V178 = ISZERO V177
0x245: V179 = 0x24a
0x248: JUMPI 0x24a V178
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x249
[0x249:0x249]
---
Predecessors: [0x242]
Successors: []
---
0x249 INVALID
---
0x249: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24a
[0x24a:0x251]
---
Predecessors: [0x242]
Successors: [0x752]
---
0x24a JUMPDEST
0x24b PUSH2 0x240
0x24e PUSH2 0x752
0x251 JUMP
---
0x24a: JUMPDEST 
0x24b: V180 = 0x240
0x24e: V181 = 0x752
0x251: JUMP 0x752
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x240]
Exit stack: [V12, 0x240]

================================

Block 0x252
[0x252:0x253]
---
Predecessors: []
Successors: []
---
0x252 JUMPDEST
0x253 STOP
---
0x252: JUMPDEST 
0x253: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x254
[0x254:0x25a]
---
Predecessors: [0x25]
Successors: [0x25b, 0x25c]
---
0x254 JUMPDEST
0x255 CALLVALUE
0x256 ISZERO
0x257 PUSH2 0x25c
0x25a JUMPI
---
0x254: JUMPDEST 
0x255: V182 = CALLVALUE
0x256: V183 = ISZERO V182
0x257: V184 = 0x25c
0x25a: JUMPI 0x25c V183
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25b
[0x25b:0x25b]
---
Predecessors: [0x254]
Successors: []
---
0x25b INVALID
---
0x25b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25c
[0x25c:0x263]
---
Predecessors: [0x254]
Successors: [0x7ed]
---
0x25c JUMPDEST
0x25d PUSH2 0x264
0x260 PUSH2 0x7ed
0x263 JUMP
---
0x25c: JUMPDEST 
0x25d: V185 = 0x264
0x260: V186 = 0x7ed
0x263: JUMP 0x7ed
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x264]
Exit stack: [V12, 0x264]

================================

Block 0x264
[0x264:0x275]
---
Predecessors: [0x589, 0x7f1, 0x7f8, 0x83e, 0x85a, 0x886, 0x90c, 0x967]
Successors: []
---
0x264 JUMPDEST
0x265 PUSH1 0x40
0x267 DUP1
0x268 MLOAD
0x269 SWAP2
0x26a DUP3
0x26b MSTORE
0x26c MLOAD
0x26d SWAP1
0x26e DUP2
0x26f SWAP1
0x270 SUB
0x271 PUSH1 0x20
0x273 ADD
0x274 SWAP1
0x275 RETURN
---
0x264: JUMPDEST 
0x265: V187 = 0x40
0x268: V188 = M[0x40]
0x26b: M[V188] = S0
0x26c: V189 = M[0x40]
0x270: V190 = SUB V188 V189
0x271: V191 = 0x20
0x273: V192 = ADD 0x20 V190
0x275: RETURN V189 V192
---
Entry stack: [V12, 0x240, S11, {0x1db, 0x240}, S9, S8, S7, {0x1, 0x12a, 0x264}, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x240, S11, {0x1db, 0x240}, S9, S8, S7, {0x1, 0x12a, 0x264}, S5, S4, S3, S2, S1]

================================

Block 0x276
[0x276:0x27c]
---
Predecessors: [0x30]
Successors: [0x27d, 0x27e]
---
0x276 JUMPDEST
0x277 CALLVALUE
0x278 ISZERO
0x279 PUSH2 0x27e
0x27c JUMPI
---
0x276: JUMPDEST 
0x277: V193 = CALLVALUE
0x278: V194 = ISZERO V193
0x279: V195 = 0x27e
0x27c: JUMPI 0x27e V194
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27d
[0x27d:0x27d]
---
Predecessors: [0x276]
Successors: []
---
0x27d INVALID
---
0x27d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27e
[0x27e:0x285]
---
Predecessors: [0x276]
Successors: [0x7f4]
---
0x27e JUMPDEST
0x27f PUSH2 0x264
0x282 PUSH2 0x7f4
0x285 JUMP
---
0x27e: JUMPDEST 
0x27f: V196 = 0x264
0x282: V197 = 0x7f4
0x285: JUMP 0x7f4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x264]
Exit stack: [V12, 0x264]

================================

Block 0x286
[0x286:0x297]
---
Predecessors: []
Successors: []
---
0x286 JUMPDEST
0x287 PUSH1 0x40
0x289 DUP1
0x28a MLOAD
0x28b SWAP2
0x28c DUP3
0x28d MSTORE
0x28e MLOAD
0x28f SWAP1
0x290 DUP2
0x291 SWAP1
0x292 SUB
0x293 PUSH1 0x20
0x295 ADD
0x296 SWAP1
0x297 RETURN
---
0x286: JUMPDEST 
0x287: V198 = 0x40
0x28a: V199 = M[0x40]
0x28d: M[V199] = S0
0x28e: V200 = M[0x40]
0x292: V201 = SUB V199 V200
0x293: V202 = 0x20
0x295: V203 = ADD 0x20 V201
0x297: RETURN V200 V203
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x298
[0x298:0x29e]
---
Predecessors: [0x3b]
Successors: [0x29f, 0x2a0]
---
0x298 JUMPDEST
0x299 CALLVALUE
0x29a ISZERO
0x29b PUSH2 0x2a0
0x29e JUMPI
---
0x298: JUMPDEST 
0x299: V204 = CALLVALUE
0x29a: V205 = ISZERO V204
0x29b: V206 = 0x2a0
0x29e: JUMPI 0x2a0 V205
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29f
[0x29f:0x29f]
---
Predecessors: [0x298]
Successors: []
---
0x29f INVALID
---
0x29f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a0
[0x2a0:0x2aa]
---
Predecessors: [0x298]
Successors: [0x7fb]
---
0x2a0 JUMPDEST
0x2a1 PUSH2 0x2ab
0x2a4 PUSH1 0x4
0x2a6 CALLDATALOAD
0x2a7 PUSH2 0x7fb
0x2aa JUMP
---
0x2a0: JUMPDEST 
0x2a1: V207 = 0x2ab
0x2a4: V208 = 0x4
0x2a6: V209 = CALLDATALOAD 0x4
0x2a7: V210 = 0x7fb
0x2aa: JUMP 0x7fb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2ab, V209]
Exit stack: [V12, 0x2ab, V209]

================================

Block 0x2ab
[0x2ab:0x2d9]
---
Predecessors: [0x81a]
Successors: []
---
0x2ab JUMPDEST
0x2ac PUSH1 0x40
0x2ae DUP1
0x2af MLOAD
0x2b0 SWAP5
0x2b1 DUP6
0x2b2 MSTORE
0x2b3 PUSH1 0x20
0x2b5 DUP6
0x2b6 ADD
0x2b7 SWAP4
0x2b8 SWAP1
0x2b9 SWAP4
0x2ba MSTORE
0x2bb DUP4
0x2bc DUP4
0x2bd ADD
0x2be SWAP2
0x2bf SWAP1
0x2c0 SWAP2
0x2c1 MSTORE
0x2c2 PUSH1 0x1
0x2c4 PUSH1 0xa0
0x2c6 PUSH1 0x2
0x2c8 EXP
0x2c9 SUB
0x2ca AND
0x2cb PUSH1 0x60
0x2cd DUP4
0x2ce ADD
0x2cf MSTORE
0x2d0 MLOAD
0x2d1 SWAP1
0x2d2 DUP2
0x2d3 SWAP1
0x2d4 SUB
0x2d5 PUSH1 0x80
0x2d7 ADD
0x2d8 SWAP1
0x2d9 RETURN
---
0x2ab: JUMPDEST 
0x2ac: V211 = 0x40
0x2af: V212 = M[0x40]
0x2b2: M[V212] = V676
0x2b3: V213 = 0x20
0x2b6: V214 = ADD V212 0x20
0x2ba: M[V214] = V679
0x2bd: V215 = ADD 0x40 V212
0x2c1: M[V215] = V682
0x2c2: V216 = 0x1
0x2c4: V217 = 0xa0
0x2c6: V218 = 0x2
0x2c8: V219 = EXP 0x2 0xa0
0x2c9: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ca: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V691
0x2cb: V222 = 0x60
0x2ce: V223 = ADD V212 0x60
0x2cf: M[V223] = V221
0x2d0: V224 = M[0x40]
0x2d4: V225 = SUB V212 V224
0x2d5: V226 = 0x80
0x2d7: V227 = ADD 0x80 V225
0x2d9: RETURN V224 V227
---
Entry stack: [V12, 0x2ab, V676, V679, V682, V691]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x2ab]

================================

Block 0x2da
[0x2da:0x2e0]
---
Predecessors: [0x46]
Successors: [0x2e1, 0x2e2]
---
0x2da JUMPDEST
0x2db CALLVALUE
0x2dc ISZERO
0x2dd PUSH2 0x2e2
0x2e0 JUMPI
---
0x2da: JUMPDEST 
0x2db: V228 = CALLVALUE
0x2dc: V229 = ISZERO V228
0x2dd: V230 = 0x2e2
0x2e0: JUMPI 0x2e2 V229
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e1
[0x2e1:0x2e1]
---
Predecessors: [0x2da]
Successors: []
---
0x2e1 INVALID
---
0x2e1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e2
[0x2e2:0x2e9]
---
Predecessors: [0x2da]
Successors: [0x83e]
---
0x2e2 JUMPDEST
0x2e3 PUSH2 0x264
0x2e6 PUSH2 0x83e
0x2e9 JUMP
---
0x2e2: JUMPDEST 
0x2e3: V231 = 0x264
0x2e6: V232 = 0x83e
0x2e9: JUMP 0x83e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x264]
Exit stack: [V12, 0x264]

================================

Block 0x2ea
[0x2ea:0x2fb]
---
Predecessors: []
Successors: []
---
0x2ea JUMPDEST
0x2eb PUSH1 0x40
0x2ed DUP1
0x2ee MLOAD
0x2ef SWAP2
0x2f0 DUP3
0x2f1 MSTORE
0x2f2 MLOAD
0x2f3 SWAP1
0x2f4 DUP2
0x2f5 SWAP1
0x2f6 SUB
0x2f7 PUSH1 0x20
0x2f9 ADD
0x2fa SWAP1
0x2fb RETURN
---
0x2ea: JUMPDEST 
0x2eb: V233 = 0x40
0x2ee: V234 = M[0x40]
0x2f1: M[V234] = S0
0x2f2: V235 = M[0x40]
0x2f6: V236 = SUB V234 V235
0x2f7: V237 = 0x20
0x2f9: V238 = ADD 0x20 V236
0x2fb: RETURN V235 V238
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2fc
[0x2fc:0x302]
---
Predecessors: [0x51]
Successors: [0x303, 0x304]
---
0x2fc JUMPDEST
0x2fd CALLVALUE
0x2fe ISZERO
0x2ff PUSH2 0x304
0x302 JUMPI
---
0x2fc: JUMPDEST 
0x2fd: V239 = CALLVALUE
0x2fe: V240 = ISZERO V239
0x2ff: V241 = 0x304
0x302: JUMPI 0x304 V240
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x303
[0x303:0x303]
---
Predecessors: [0x2fc]
Successors: []
---
0x303 INVALID
---
0x303: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x304
[0x304:0x31d]
---
Predecessors: [0x2fc]
Successors: [0x591]
---
0x304 JUMPDEST
0x305 PUSH2 0x240
0x308 PUSH1 0x1
0x30a PUSH1 0xa0
0x30c PUSH1 0x2
0x30e EXP
0x30f SUB
0x310 PUSH1 0x4
0x312 CALLDATALOAD
0x313 AND
0x314 PUSH1 0x24
0x316 CALLDATALOAD
0x317 PUSH1 0x44
0x319 CALLDATALOAD
0x31a PUSH2 0x591
0x31d JUMP
---
0x304: JUMPDEST 
0x305: V242 = 0x240
0x308: V243 = 0x1
0x30a: V244 = 0xa0
0x30c: V245 = 0x2
0x30e: V246 = EXP 0x2 0xa0
0x30f: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x310: V248 = 0x4
0x312: V249 = CALLDATALOAD 0x4
0x313: V250 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0x314: V251 = 0x24
0x316: V252 = CALLDATALOAD 0x24
0x317: V253 = 0x44
0x319: V254 = CALLDATALOAD 0x44
0x31a: V255 = 0x591
0x31d: JUMP 0x591
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x240, V250, V252, V254]
Exit stack: [V12, 0x240, V250, V252, V254]

================================

Block 0x31e
[0x31e:0x31f]
---
Predecessors: []
Successors: []
---
0x31e JUMPDEST
0x31f STOP
---
0x31e: JUMPDEST 
0x31f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x320
[0x320:0x326]
---
Predecessors: [0x5c]
Successors: [0x327, 0x328]
---
0x320 JUMPDEST
0x321 CALLVALUE
0x322 ISZERO
0x323 PUSH2 0x328
0x326 JUMPI
---
0x320: JUMPDEST 
0x321: V256 = CALLVALUE
0x322: V257 = ISZERO V256
0x323: V258 = 0x328
0x326: JUMPI 0x328 V257
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x327
[0x327:0x327]
---
Predecessors: [0x320]
Successors: []
---
0x327 INVALID
---
0x327: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x328
[0x328:0x332]
---
Predecessors: [0x320]
Successors: [0x844]
---
0x328 JUMPDEST
0x329 PUSH2 0x264
0x32c PUSH1 0x4
0x32e CALLDATALOAD
0x32f PUSH2 0x844
0x332 JUMP
---
0x328: JUMPDEST 
0x329: V259 = 0x264
0x32c: V260 = 0x4
0x32e: V261 = CALLDATALOAD 0x4
0x32f: V262 = 0x844
0x332: JUMP 0x844
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x264, V261]
Exit stack: [V12, 0x264, V261]

================================

Block 0x333
[0x333:0x344]
---
Predecessors: []
Successors: []
---
0x333 JUMPDEST
0x334 PUSH1 0x40
0x336 DUP1
0x337 MLOAD
0x338 SWAP2
0x339 DUP3
0x33a MSTORE
0x33b MLOAD
0x33c SWAP1
0x33d DUP2
0x33e SWAP1
0x33f SUB
0x340 PUSH1 0x20
0x342 ADD
0x343 SWAP1
0x344 RETURN
---
0x333: JUMPDEST 
0x334: V263 = 0x40
0x337: V264 = M[0x40]
0x33a: M[V264] = S0
0x33b: V265 = M[0x40]
0x33f: V266 = SUB V264 V265
0x340: V267 = 0x20
0x342: V268 = ADD 0x20 V266
0x344: RETURN V265 V268
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x345
[0x345:0x34b]
---
Predecessors: [0x67]
Successors: [0x34c, 0x34d]
---
0x345 JUMPDEST
0x346 CALLVALUE
0x347 ISZERO
0x348 PUSH2 0x34d
0x34b JUMPI
---
0x345: JUMPDEST 
0x346: V269 = CALLVALUE
0x347: V270 = ISZERO V269
0x348: V271 = 0x34d
0x34b: JUMPI 0x34d V270
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x34c
[0x34c:0x34c]
---
Predecessors: [0x345]
Successors: []
---
0x34c INVALID
---
0x34c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x34d
[0x34d:0x357]
---
Predecessors: [0x345]
Successors: [0x4cf]
---
0x34d JUMPDEST
0x34e PUSH2 0x264
0x351 PUSH1 0x4
0x353 CALLDATALOAD
0x354 PUSH2 0x4cf
0x357 JUMP
---
0x34d: JUMPDEST 
0x34e: V272 = 0x264
0x351: V273 = 0x4
0x353: V274 = CALLDATALOAD 0x4
0x354: V275 = 0x4cf
0x357: JUMP 0x4cf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x264, V274]
Exit stack: [V12, 0x264, V274]

================================

Block 0x358
[0x358:0x369]
---
Predecessors: []
Successors: []
---
0x358 JUMPDEST
0x359 PUSH1 0x40
0x35b DUP1
0x35c MLOAD
0x35d SWAP2
0x35e DUP3
0x35f MSTORE
0x360 MLOAD
0x361 SWAP1
0x362 DUP2
0x363 SWAP1
0x364 SUB
0x365 PUSH1 0x20
0x367 ADD
0x368 SWAP1
0x369 RETURN
---
0x358: JUMPDEST 
0x359: V276 = 0x40
0x35c: V277 = M[0x40]
0x35f: M[V277] = S0
0x360: V278 = M[0x40]
0x364: V279 = SUB V277 V278
0x365: V280 = 0x20
0x367: V281 = ADD 0x20 V279
0x369: RETURN V278 V281
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x36a
[0x36a:0x370]
---
Predecessors: [0x72]
Successors: [0x371, 0x372]
---
0x36a JUMPDEST
0x36b CALLVALUE
0x36c ISZERO
0x36d PUSH2 0x372
0x370 JUMPI
---
0x36a: JUMPDEST 
0x36b: V282 = CALLVALUE
0x36c: V283 = ISZERO V282
0x36d: V284 = 0x372
0x370: JUMPI 0x372 V283
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x371
[0x371:0x371]
---
Predecessors: [0x36a]
Successors: []
---
0x371 INVALID
---
0x371: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x372
[0x372:0x379]
---
Predecessors: [0x36a]
Successors: [0x85f]
---
0x372 JUMPDEST
0x373 PUSH2 0x37a
0x376 PUSH2 0x85f
0x379 JUMP
---
0x372: JUMPDEST 
0x373: V285 = 0x37a
0x376: V286 = 0x85f
0x379: JUMP 0x85f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x37a]
Exit stack: [V12, 0x37a]

================================

Block 0x37a
[0x37a:0x38d]
---
Predecessors: [0x866]
Successors: []
---
0x37a JUMPDEST
0x37b PUSH1 0x40
0x37d DUP1
0x37e MLOAD
0x37f SWAP2
0x380 ISZERO
0x381 ISZERO
0x382 DUP3
0x383 MSTORE
0x384 MLOAD
0x385 SWAP1
0x386 DUP2
0x387 SWAP1
0x388 SUB
0x389 PUSH1 0x20
0x38b ADD
0x38c SWAP1
0x38d RETURN
---
0x37a: JUMPDEST 
0x37b: V287 = 0x40
0x37e: V288 = M[0x40]
0x380: V289 = ISZERO V705
0x381: V290 = ISZERO V289
0x383: M[V288] = V290
0x384: V291 = M[0x40]
0x388: V292 = SUB V288 V291
0x389: V293 = 0x20
0x38b: V294 = ADD 0x20 V292
0x38d: RETURN V291 V294
---
Entry stack: [V12, V705]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x38e
[0x38e:0x394]
---
Predecessors: [0x7d]
Successors: [0x395, 0x396]
---
0x38e JUMPDEST
0x38f CALLVALUE
0x390 ISZERO
0x391 PUSH2 0x396
0x394 JUMPI
---
0x38e: JUMPDEST 
0x38f: V295 = CALLVALUE
0x390: V296 = ISZERO V295
0x391: V297 = 0x396
0x394: JUMPI 0x396 V296
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x395
[0x395:0x395]
---
Predecessors: [0x38e]
Successors: []
---
0x395 INVALID
---
0x395: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x396
[0x396:0x39d]
---
Predecessors: [0x38e]
Successors: [0x869]
---
0x396 JUMPDEST
0x397 PUSH2 0x39e
0x39a PUSH2 0x869
0x39d JUMP
---
0x396: JUMPDEST 
0x397: V298 = 0x39e
0x39a: V299 = 0x869
0x39d: JUMP 0x869
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x39e]
Exit stack: [V12, 0x39e]

================================

Block 0x39e
[0x39e:0x3b9]
---
Predecessors: [0x876]
Successors: []
---
0x39e JUMPDEST
0x39f PUSH1 0x40
0x3a1 DUP1
0x3a2 MLOAD
0x3a3 PUSH1 0x1
0x3a5 PUSH1 0xa0
0x3a7 PUSH1 0x2
0x3a9 EXP
0x3aa SUB
0x3ab SWAP1
0x3ac SWAP3
0x3ad AND
0x3ae DUP3
0x3af MSTORE
0x3b0 MLOAD
0x3b1 SWAP1
0x3b2 DUP2
0x3b3 SWAP1
0x3b4 SUB
0x3b5 PUSH1 0x20
0x3b7 ADD
0x3b8 SWAP1
0x3b9 RETURN
---
0x39e: JUMPDEST 
0x39f: V300 = 0x40
0x3a2: V301 = M[0x40]
0x3a3: V302 = 0x1
0x3a5: V303 = 0xa0
0x3a7: V304 = 0x2
0x3a9: V305 = EXP 0x2 0xa0
0x3aa: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ad: V307 = AND V713 0xffffffffffffffffffffffffffffffffffffffff
0x3af: M[V301] = V307
0x3b0: V308 = M[0x40]
0x3b4: V309 = SUB V301 V308
0x3b5: V310 = 0x20
0x3b7: V311 = ADD 0x20 V309
0x3b9: RETURN V308 V311
---
Entry stack: [V12, V713]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ba
[0x3ba:0x3c0]
---
Predecessors: [0x88]
Successors: [0x3c1, 0x3c2]
---
0x3ba JUMPDEST
0x3bb CALLVALUE
0x3bc ISZERO
0x3bd PUSH2 0x3c2
0x3c0 JUMPI
---
0x3ba: JUMPDEST 
0x3bb: V312 = CALLVALUE
0x3bc: V313 = ISZERO V312
0x3bd: V314 = 0x3c2
0x3c0: JUMPI 0x3c2 V313
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c1
[0x3c1:0x3c1]
---
Predecessors: [0x3ba]
Successors: []
---
0x3c1 INVALID
---
0x3c1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c2
[0x3c2:0x3c9]
---
Predecessors: [0x3ba]
Successors: [0x879]
---
0x3c2 JUMPDEST
0x3c3 PUSH2 0x264
0x3c6 PUSH2 0x879
0x3c9 JUMP
---
0x3c2: JUMPDEST 
0x3c3: V315 = 0x264
0x3c6: V316 = 0x879
0x3c9: JUMP 0x879
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x264]
Exit stack: [V12, 0x264]

================================

Block 0x3ca
[0x3ca:0x3db]
---
Predecessors: []
Successors: []
---
0x3ca JUMPDEST
0x3cb PUSH1 0x40
0x3cd DUP1
0x3ce MLOAD
0x3cf SWAP2
0x3d0 DUP3
0x3d1 MSTORE
0x3d2 MLOAD
0x3d3 SWAP1
0x3d4 DUP2
0x3d5 SWAP1
0x3d6 SUB
0x3d7 PUSH1 0x20
0x3d9 ADD
0x3da SWAP1
0x3db RETURN
---
0x3ca: JUMPDEST 
0x3cb: V317 = 0x40
0x3ce: V318 = M[0x40]
0x3d1: M[V318] = S0
0x3d2: V319 = M[0x40]
0x3d6: V320 = SUB V318 V319
0x3d7: V321 = 0x20
0x3d9: V322 = ADD 0x20 V320
0x3db: RETURN V319 V322
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3dc
[0x3dc:0x3e2]
---
Predecessors: [0x93]
Successors: [0x3e3, 0x3e4]
---
0x3dc JUMPDEST
0x3dd CALLVALUE
0x3de ISZERO
0x3df PUSH2 0x3e4
0x3e2 JUMPI
---
0x3dc: JUMPDEST 
0x3dd: V323 = CALLVALUE
0x3de: V324 = ISZERO V323
0x3df: V325 = 0x3e4
0x3e2: JUMPI 0x3e4 V324
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e3
[0x3e3:0x3e3]
---
Predecessors: [0x3dc]
Successors: []
---
0x3e3 INVALID
---
0x3e3: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e4
[0x3e4:0x3ee]
---
Predecessors: [0x3dc]
Successors: [0x889]
---
0x3e4 JUMPDEST
0x3e5 PUSH2 0x240
0x3e8 PUSH1 0x4
0x3ea CALLDATALOAD
0x3eb PUSH2 0x889
0x3ee JUMP
---
0x3e4: JUMPDEST 
0x3e5: V326 = 0x240
0x3e8: V327 = 0x4
0x3ea: V328 = CALLDATALOAD 0x4
0x3eb: V329 = 0x889
0x3ee: JUMP 0x889
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x240, V328]
Exit stack: [V12, 0x240, V328]

================================

Block 0x3ef
[0x3ef:0x3f0]
---
Predecessors: []
Successors: []
---
0x3ef JUMPDEST
0x3f0 STOP
---
0x3ef: JUMPDEST 
0x3f0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3f1
[0x3f1:0x3f7]
---
Predecessors: [0x9e]
Successors: [0x3f8, 0x3f9]
---
0x3f1 JUMPDEST
0x3f2 CALLVALUE
0x3f3 ISZERO
0x3f4 PUSH2 0x3f9
0x3f7 JUMPI
---
0x3f1: JUMPDEST 
0x3f2: V330 = CALLVALUE
0x3f3: V331 = ISZERO V330
0x3f4: V332 = 0x3f9
0x3f7: JUMPI 0x3f9 V331
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f8
[0x3f8:0x3f8]
---
Predecessors: [0x3f1]
Successors: []
---
0x3f8 INVALID
---
0x3f8: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f9
[0x3f9:0x403]
---
Predecessors: [0x3f1]
Successors: [0x8af]
---
0x3f9 JUMPDEST
0x3fa PUSH2 0x404
0x3fd PUSH1 0x4
0x3ff CALLDATALOAD
0x400 PUSH2 0x8af
0x403 JUMP
---
0x3f9: JUMPDEST 
0x3fa: V333 = 0x404
0x3fd: V334 = 0x4
0x3ff: V335 = CALLDATALOAD 0x4
0x400: V336 = 0x8af
0x403: JUMP 0x8af
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x404, V335]
Exit stack: [V12, 0x404, V335]

================================

Block 0x404
[0x404:0x41c]
---
Predecessors: [0x902]
Successors: []
---
0x404 JUMPDEST
0x405 PUSH1 0x40
0x407 DUP1
0x408 MLOAD
0x409 SWAP3
0x40a DUP4
0x40b MSTORE
0x40c PUSH1 0x20
0x40e DUP4
0x40f ADD
0x410 SWAP2
0x411 SWAP1
0x412 SWAP2
0x413 MSTORE
0x414 DUP1
0x415 MLOAD
0x416 SWAP2
0x417 DUP3
0x418 SWAP1
0x419 SUB
0x41a ADD
0x41b SWAP1
0x41c RETURN
---
0x404: JUMPDEST 
0x405: V337 = 0x40
0x408: V338 = M[0x40]
0x40b: M[V338] = S1
0x40c: V339 = 0x20
0x40f: V340 = ADD V338 0x20
0x413: M[V340] = S0
0x415: V341 = M[0x40]
0x419: V342 = SUB V338 V341
0x41a: V343 = ADD V342 0x40
0x41c: RETURN V341 V343
---
Entry stack: [V12, 0x240, S8, {0x12a, 0x264}, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x240, S8, {0x12a, 0x264}, S6, 0x0, S4, S3, S2]

================================

Block 0x41d
[0x41d:0x423]
---
Predecessors: [0xa9]
Successors: [0x424, 0x425]
---
0x41d JUMPDEST
0x41e CALLVALUE
0x41f ISZERO
0x420 PUSH2 0x425
0x423 JUMPI
---
0x41d: JUMPDEST 
0x41e: V344 = CALLVALUE
0x41f: V345 = ISZERO V344
0x420: V346 = 0x425
0x423: JUMPI 0x425 V345
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x424
[0x424:0x424]
---
Predecessors: [0x41d]
Successors: []
---
0x424 INVALID
---
0x424: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x425
[0x425:0x42c]
---
Predecessors: [0x41d]
Successors: [0x908]
---
0x425 JUMPDEST
0x426 PUSH2 0x264
0x429 PUSH2 0x908
0x42c JUMP
---
0x425: JUMPDEST 
0x426: V347 = 0x264
0x429: V348 = 0x908
0x42c: JUMP 0x908
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x264]
Exit stack: [V12, 0x264]

================================

Block 0x42d
[0x42d:0x43e]
---
Predecessors: []
Successors: []
---
0x42d JUMPDEST
0x42e PUSH1 0x40
0x430 DUP1
0x431 MLOAD
0x432 SWAP2
0x433 DUP3
0x434 MSTORE
0x435 MLOAD
0x436 SWAP1
0x437 DUP2
0x438 SWAP1
0x439 SUB
0x43a PUSH1 0x20
0x43c ADD
0x43d SWAP1
0x43e RETURN
---
0x42d: JUMPDEST 
0x42e: V349 = 0x40
0x431: V350 = M[0x40]
0x434: M[V350] = S0
0x435: V351 = M[0x40]
0x439: V352 = SUB V350 V351
0x43a: V353 = 0x20
0x43c: V354 = ADD 0x20 V352
0x43e: RETURN V351 V354
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x43f
[0x43f:0x445]
---
Predecessors: [0xb4]
Successors: [0x446, 0x447]
---
0x43f JUMPDEST
0x440 CALLVALUE
0x441 ISZERO
0x442 PUSH2 0x447
0x445 JUMPI
---
0x43f: JUMPDEST 
0x440: V355 = CALLVALUE
0x441: V356 = ISZERO V355
0x442: V357 = 0x447
0x445: JUMPI 0x447 V356
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x446
[0x446:0x446]
---
Predecessors: [0x43f]
Successors: []
---
0x446 INVALID
---
0x446: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x447
[0x447:0x451]
---
Predecessors: [0x43f]
Successors: [0x90f]
---
0x447 JUMPDEST
0x448 PUSH2 0x404
0x44b PUSH1 0x4
0x44d CALLDATALOAD
0x44e PUSH2 0x90f
0x451 JUMP
---
0x447: JUMPDEST 
0x448: V358 = 0x404
0x44b: V359 = 0x4
0x44d: V360 = CALLDATALOAD 0x4
0x44e: V361 = 0x90f
0x451: JUMP 0x90f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x404, V360]
Exit stack: [V12, 0x404, V360]

================================

Block 0x452
[0x452:0x46a]
---
Predecessors: []
Successors: []
---
0x452 JUMPDEST
0x453 PUSH1 0x40
0x455 DUP1
0x456 MLOAD
0x457 SWAP3
0x458 DUP4
0x459 MSTORE
0x45a PUSH1 0x20
0x45c DUP4
0x45d ADD
0x45e SWAP2
0x45f SWAP1
0x460 SWAP2
0x461 MSTORE
0x462 DUP1
0x463 MLOAD
0x464 SWAP2
0x465 DUP3
0x466 SWAP1
0x467 SUB
0x468 ADD
0x469 SWAP1
0x46a RETURN
---
0x452: JUMPDEST 
0x453: V362 = 0x40
0x456: V363 = M[0x40]
0x459: M[V363] = S1
0x45a: V364 = 0x20
0x45d: V365 = ADD V363 0x20
0x461: M[V365] = S0
0x463: V366 = M[0x40]
0x467: V367 = SUB V363 V366
0x468: V368 = ADD V367 0x40
0x46a: RETURN V366 V368
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x46b
[0x46b:0x471]
---
Predecessors: [0xbf]
Successors: [0x472, 0x473]
---
0x46b JUMPDEST
0x46c CALLVALUE
0x46d ISZERO
0x46e PUSH2 0x473
0x471 JUMPI
---
0x46b: JUMPDEST 
0x46c: V369 = CALLVALUE
0x46d: V370 = ISZERO V369
0x46e: V371 = 0x473
0x471: JUMPI 0x473 V370
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x472
[0x472:0x472]
---
Predecessors: [0x46b]
Successors: []
---
0x472 INVALID
---
0x472: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x473
[0x473:0x47a]
---
Predecessors: [0x46b]
Successors: [0x963]
---
0x473 JUMPDEST
0x474 PUSH2 0x264
0x477 PUSH2 0x963
0x47a JUMP
---
0x473: JUMPDEST 
0x474: V372 = 0x264
0x477: V373 = 0x963
0x47a: JUMP 0x963
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x264]
Exit stack: [V12, 0x264]

================================

Block 0x47b
[0x47b:0x48c]
---
Predecessors: []
Successors: []
---
0x47b JUMPDEST
0x47c PUSH1 0x40
0x47e DUP1
0x47f MLOAD
0x480 SWAP2
0x481 DUP3
0x482 MSTORE
0x483 MLOAD
0x484 SWAP1
0x485 DUP2
0x486 SWAP1
0x487 SUB
0x488 PUSH1 0x20
0x48a ADD
0x48b SWAP1
0x48c RETURN
---
0x47b: JUMPDEST 
0x47c: V374 = 0x40
0x47f: V375 = M[0x40]
0x482: M[V375] = S0
0x483: V376 = M[0x40]
0x487: V377 = SUB V375 V376
0x488: V378 = 0x20
0x48a: V379 = ADD 0x20 V377
0x48c: RETURN V376 V379
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x48d
[0x48d:0x493]
---
Predecessors: [0xca]
Successors: [0x494, 0x495]
---
0x48d JUMPDEST
0x48e CALLVALUE
0x48f ISZERO
0x490 PUSH2 0x495
0x493 JUMPI
---
0x48d: JUMPDEST 
0x48e: V380 = CALLVALUE
0x48f: V381 = ISZERO V380
0x490: V382 = 0x495
0x493: JUMPI 0x495 V381
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x494
[0x494:0x494]
---
Predecessors: [0x48d]
Successors: []
---
0x494 INVALID
---
0x494: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x495
[0x495:0x49c]
---
Predecessors: [0x48d]
Successors: [0x96a]
---
0x495 JUMPDEST
0x496 PUSH2 0x240
0x499 PUSH2 0x96a
0x49c JUMP
---
0x495: JUMPDEST 
0x496: V383 = 0x240
0x499: V384 = 0x96a
0x49c: JUMP 0x96a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x240]
Exit stack: [V12, 0x240]

================================

Block 0x49d
[0x49d:0x49e]
---
Predecessors: []
Successors: []
---
0x49d JUMPDEST
0x49e STOP
---
0x49d: JUMPDEST 
0x49e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x49f
[0x49f:0x4a5]
---
Predecessors: [0xd5]
Successors: [0x4a6, 0x4a7]
---
0x49f JUMPDEST
0x4a0 CALLVALUE
0x4a1 ISZERO
0x4a2 PUSH2 0x4a7
0x4a5 JUMPI
---
0x49f: JUMPDEST 
0x4a0: V385 = CALLVALUE
0x4a1: V386 = ISZERO V385
0x4a2: V387 = 0x4a7
0x4a5: JUMPI 0x4a7 V386
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4a6
[0x4a6:0x4a6]
---
Predecessors: [0x49f]
Successors: []
---
0x4a6 INVALID
---
0x4a6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4a7
[0x4a7:0x4ba]
---
Predecessors: [0x49f]
Successors: [0x9ce]
---
0x4a7 JUMPDEST
0x4a8 PUSH2 0x240
0x4ab PUSH1 0x1
0x4ad PUSH1 0xa0
0x4af PUSH1 0x2
0x4b1 EXP
0x4b2 SUB
0x4b3 PUSH1 0x4
0x4b5 CALLDATALOAD
0x4b6 AND
0x4b7 PUSH2 0x9ce
0x4ba JUMP
---
0x4a7: JUMPDEST 
0x4a8: V388 = 0x240
0x4ab: V389 = 0x1
0x4ad: V390 = 0xa0
0x4af: V391 = 0x2
0x4b1: V392 = EXP 0x2 0xa0
0x4b2: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b3: V394 = 0x4
0x4b5: V395 = CALLDATALOAD 0x4
0x4b6: V396 = AND V395 0xffffffffffffffffffffffffffffffffffffffff
0x4b7: V397 = 0x9ce
0x4ba: JUMP 0x9ce
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x240, V396]
Exit stack: [V12, 0x240, V396]

================================

Block 0x4bb
[0x4bb:0x4bc]
---
Predecessors: []
Successors: []
---
0x4bb JUMPDEST
0x4bc STOP
---
0x4bb: JUMPDEST 
0x4bc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4bd
[0x4bd:0x4c3]
---
Predecessors: [0xe0]
Successors: [0x4c4, 0x4c5]
---
0x4bd JUMPDEST
0x4be CALLVALUE
0x4bf ISZERO
0x4c0 PUSH2 0x4c5
0x4c3 JUMPI
---
0x4bd: JUMPDEST 
0x4be: V398 = CALLVALUE
0x4bf: V399 = ISZERO V398
0x4c0: V400 = 0x4c5
0x4c3: JUMPI 0x4c5 V399
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c4
[0x4c4:0x4c4]
---
Predecessors: [0x4bd]
Successors: []
---
0x4c4 INVALID
---
0x4c4: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c5
[0x4c5:0x4cc]
---
Predecessors: [0x4bd]
Successors: [0xa0a]
---
0x4c5 JUMPDEST
0x4c6 PUSH2 0x240
0x4c9 PUSH2 0xa0a
0x4cc JUMP
---
0x4c5: JUMPDEST 
0x4c6: V401 = 0x240
0x4c9: V402 = 0xa0a
0x4cc: JUMP 0xa0a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x240]
Exit stack: [V12, 0x240]

================================

Block 0x4cd
[0x4cd:0x4ce]
---
Predecessors: []
Successors: []
---
0x4cd JUMPDEST
0x4ce STOP
---
0x4cd: JUMPDEST 
0x4ce: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4cf
[0x4cf:0x4ee]
---
Predecessors: [0x122, 0x34d]
Successors: [0x4ef, 0x539]
---
0x4cf JUMPDEST
0x4d0 PUSH1 0x6
0x4d2 SLOAD
0x4d3 PUSH1 0x0
0x4d5 SWAP1
0x4d6 DUP2
0x4d7 SWAP1
0x4d8 DUP2
0x4d9 SWAP1
0x4da DUP2
0x4db SWAP1
0x4dc PUSH11 0x1a784379d99db42000000
0x4e8 SWAP1
0x4e9 GT
0x4ea ISZERO
0x4eb PUSH2 0x539
0x4ee JUMPI
---
0x4cf: JUMPDEST 
0x4d0: V403 = 0x6
0x4d2: V404 = S[0x6]
0x4d3: V405 = 0x0
0x4dc: V406 = 0x1a784379d99db42000000
0x4e9: V407 = GT V404 0x1a784379d99db42000000
0x4ea: V408 = ISZERO V407
0x4eb: V409 = 0x539
0x4ee: JUMPI 0x539 V408
---
Entry stack: [V12, 0x240, S2, {0x12a, 0x264}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x240, S2, {0x12a, 0x264}, S0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x4ef
[0x4ef:0x4f6]
---
Predecessors: [0x4cf]
Successors: [0x8af]
---
0x4ef PUSH2 0x4f7
0x4f2 DUP6
0x4f3 PUSH2 0x8af
0x4f6 JUMP
---
0x4ef: V410 = 0x4f7
0x4f3: V411 = 0x8af
0x4f6: JUMP 0x8af
---
Entry stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x4f7, S4]
Exit stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, 0x0, 0x0, 0x0, 0x4f7, S4]

================================

Block 0x4f7
[0x4f7:0x506]
---
Predecessors: [0x902]
Successors: [0x507, 0x530]
---
0x4f7 JUMPDEST
0x4f8 SWAP4
0x4f9 DUP2
0x4fa ADD
0x4fb SWAP4
0x4fc SWAP1
0x4fd SWAP3
0x4fe POP
0x4ff SWAP1
0x500 POP
0x501 DUP1
0x502 ISZERO
0x503 PUSH2 0x530
0x506 JUMPI
---
0x4f7: JUMPDEST 
0x4fa: V412 = ADD S1 S4
0x502: V413 = ISZERO S0
0x503: V414 = 0x530
0x506: JUMPI 0x530 V413
---
Entry stack: [V12, 0x240, S8, {0x12a, 0x264}, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [V412, S1, S0]
Exit stack: [V12, 0x240, S8, {0x12a, 0x264}, S6, 0x0, V412, S1, S0]

================================

Block 0x507
[0x507:0x50e]
---
Predecessors: [0x4f7]
Successors: [0x90f]
---
0x507 PUSH2 0x50f
0x50a DUP2
0x50b PUSH2 0x90f
0x50e JUMP
---
0x507: V415 = 0x50f
0x50b: V416 = 0x90f
0x50e: JUMP 0x90f
---
Entry stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, V412, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x50f, S0]
Exit stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, V412, S1, S0, 0x50f, S0]

================================

Block 0x50f
[0x50f:0x51e]
---
Predecessors: [0x902]
Successors: [0x51f, 0x530]
---
0x50f JUMPDEST
0x510 SWAP4
0x511 DUP2
0x512 ADD
0x513 SWAP4
0x514 SWAP1
0x515 SWAP3
0x516 POP
0x517 SWAP1
0x518 POP
0x519 DUP1
0x51a ISZERO
0x51b PUSH2 0x530
0x51e JUMPI
---
0x50f: JUMPDEST 
0x512: V417 = ADD S1 S4
0x51a: V418 = ISZERO S0
0x51b: V419 = 0x530
0x51e: JUMPI 0x530 V418
---
Entry stack: [V12, 0x240, S8, {0x12a, 0x264}, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [V417, S1, S0]
Exit stack: [V12, 0x240, S8, {0x12a, 0x264}, S6, 0x0, V417, S1, S0]

================================

Block 0x51f
[0x51f:0x526]
---
Predecessors: [0x50f]
Successors: [0x844]
---
0x51f PUSH2 0x527
0x522 DUP2
0x523 PUSH2 0x844
0x526 JUMP
---
0x51f: V420 = 0x527
0x523: V421 = 0x844
0x526: JUMP 0x844
---
Entry stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, V417, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x527, S0]
Exit stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, V417, S1, S0, 0x527, S0]

================================

Block 0x527
[0x527:0x52f]
---
Predecessors: [0x85a]
Successors: [0x587]
---
0x527 JUMPDEST
0x528 DUP4
0x529 ADD
0x52a SWAP4
0x52b POP
0x52c PUSH2 0x587
0x52f JUMP
---
0x527: JUMPDEST 
0x529: V422 = ADD S3 V701
0x52c: V423 = 0x587
0x52f: JUMP 0x587
---
Entry stack: [V12, 0x240, S7, {0x12a, 0x264}, S5, 0x0, S3, S2, S1, V701]
Stack pops: 5
Stack additions: [V422, S3, S2, S1]
Exit stack: [V12, 0x240, S7, {0x12a, 0x264}, S5, V422, S3, S2, S1]

================================

Block 0x530
[0x530:0x530]
---
Predecessors: [0x4f7, 0x50f]
Successors: [0x531]
---
0x530 JUMPDEST
---
0x530: JUMPDEST 
---
Entry stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, S2, S1, S0]

================================

Block 0x531
[0x531:0x538]
---
Predecessors: [0x530]
Successors: [0x587]
---
0x531 JUMPDEST
0x532 DUP3
0x533 SWAP4
0x534 POP
0x535 PUSH2 0x587
0x538 JUMP
---
0x531: JUMPDEST 
0x535: V424 = 0x587
0x538: JUMP 0x587
---
Entry stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, S2, S1, S0]
Stack pops: 4
Stack additions: [S2, S2, S1, S0]
Exit stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, S2, S2, S1, S0]

================================

Block 0x539
[0x539:0x54d]
---
Predecessors: [0x4cf]
Successors: [0x54e, 0x57b]
---
0x539 JUMPDEST
0x53a PUSH10 0xd3c21bcecceda1000000
0x545 PUSH1 0x6
0x547 SLOAD
0x548 GT
0x549 ISZERO
0x54a PUSH2 0x57b
0x54d JUMPI
---
0x539: JUMPDEST 
0x53a: V425 = 0xd3c21bcecceda1000000
0x545: V426 = 0x6
0x547: V427 = S[0x6]
0x548: V428 = GT V427 0xd3c21bcecceda1000000
0x549: V429 = ISZERO V428
0x54a: V430 = 0x57b
0x54d: JUMPI 0x57b V429
---
Entry stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x54e
[0x54e:0x555]
---
Predecessors: [0x539]
Successors: [0x90f]
---
0x54e PUSH2 0x556
0x551 DUP6
0x552 PUSH2 0x90f
0x555 JUMP
---
0x54e: V431 = 0x556
0x552: V432 = 0x90f
0x555: JUMP 0x90f
---
Entry stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x556, S4]
Exit stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, 0x0, 0x0, 0x0, 0x556, S4]

================================

Block 0x556
[0x556:0x561]
---
Predecessors: [0x902]
Successors: [0x562, 0x573]
---
0x556 JUMPDEST
0x557 SWAP1
0x558 SWAP3
0x559 POP
0x55a SWAP1
0x55b POP
0x55c DUP1
0x55d ISZERO
0x55e PUSH2 0x573
0x561 JUMPI
---
0x556: JUMPDEST 
0x55d: V433 = ISZERO S0
0x55e: V434 = 0x573
0x561: JUMPI 0x573 V433
---
Entry stack: [V12, 0x240, S8, {0x12a, 0x264}, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S1, S0]
Exit stack: [V12, 0x240, S8, {0x12a, 0x264}, S6, 0x0, S4, S1, S0]

================================

Block 0x562
[0x562:0x569]
---
Predecessors: [0x556]
Successors: [0x844]
---
0x562 PUSH2 0x56a
0x565 DUP2
0x566 PUSH2 0x844
0x569 JUMP
---
0x562: V435 = 0x56a
0x566: V436 = 0x844
0x569: JUMP 0x844
---
Entry stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x56a, S0]
Exit stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, S2, S1, S0, 0x56a, S0]

================================

Block 0x56a
[0x56a:0x572]
---
Predecessors: [0x85a]
Successors: [0x587]
---
0x56a JUMPDEST
0x56b DUP3
0x56c ADD
0x56d SWAP4
0x56e POP
0x56f PUSH2 0x587
0x572 JUMP
---
0x56a: JUMPDEST 
0x56c: V437 = ADD S2 V701
0x56f: V438 = 0x587
0x572: JUMP 0x587
---
Entry stack: [V12, 0x240, S7, {0x12a, 0x264}, S5, 0x0, S3, S2, S1, V701]
Stack pops: 5
Stack additions: [V437, S3, S2, S1]
Exit stack: [V12, 0x240, S7, {0x12a, 0x264}, S5, V437, S3, S2, S1]

================================

Block 0x573
[0x573:0x57a]
---
Predecessors: [0x556]
Successors: [0x587]
---
0x573 JUMPDEST
0x574 DUP2
0x575 SWAP4
0x576 POP
0x577 PUSH2 0x587
0x57a JUMP
---
0x573: JUMPDEST 
0x577: V439 = 0x587
0x57a: JUMP 0x587
---
Entry stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, S2, S1, S0]
Stack pops: 4
Stack additions: [S1, S2, S1, S0]
Exit stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, S1, S2, S1, S0]

================================

Block 0x57b
[0x57b:0x583]
---
Predecessors: [0x539]
Successors: [0x844]
---
0x57b JUMPDEST
0x57c PUSH2 0x584
0x57f DUP6
0x580 PUSH2 0x844
0x583 JUMP
---
0x57b: JUMPDEST 
0x57c: V440 = 0x584
0x580: V441 = 0x844
0x583: JUMP 0x844
---
Entry stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x584, S4]
Exit stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, 0x0, 0x0, 0x0, 0x0, 0x584, S4]

================================

Block 0x584
[0x584:0x586]
---
Predecessors: [0x85a]
Successors: [0x587]
---
0x584 JUMPDEST
0x585 SWAP4
0x586 POP
---
0x584: JUMPDEST 
---
Entry stack: [V12, 0x240, S7, {0x12a, 0x264}, S5, 0x0, S3, S2, S1, V701]
Stack pops: 5
Stack additions: [S0, S3, S2, S1]
Exit stack: [V12, 0x240, S7, {0x12a, 0x264}, S5, V701, S3, S2, S1]

================================

Block 0x587
[0x587:0x587]
---
Predecessors: [0x527, 0x531, 0x56a, 0x573, 0x584]
Successors: [0x588]
---
0x587 JUMPDEST
---
0x587: JUMPDEST 
---
Entry stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, S3, S2, S1, S0]

================================

Block 0x588
[0x588:0x588]
---
Predecessors: [0x587]
Successors: [0x589]
---
0x588 JUMPDEST
---
0x588: JUMPDEST 
---
Entry stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, S3, S2, S1, S0]

================================

Block 0x589
[0x589:0x590]
---
Predecessors: [0x588]
Successors: [0x12a, 0x264]
---
0x589 JUMPDEST
0x58a POP
0x58b POP
0x58c POP
0x58d SWAP2
0x58e SWAP1
0x58f POP
0x590 JUMP
---
0x589: JUMPDEST 
0x590: JUMP {0x12a, 0x264}
---
Entry stack: [V12, 0x240, S6, {0x12a, 0x264}, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S3]
Exit stack: [V12, 0x240, S6, S3]

================================

Block 0x591
[0x591:0x5b5]
---
Predecessors: [0x1c5, 0x304]
Successors: [0x5b6, 0x6a2]
---
0x591 JUMPDEST
0x592 PUSH1 0x1
0x594 PUSH1 0xa0
0x596 PUSH1 0x2
0x598 EXP
0x599 SUB
0x59a DUP1
0x59b DUP5
0x59c AND
0x59d PUSH1 0x0
0x59f SWAP1
0x5a0 DUP2
0x5a1 MSTORE
0x5a2 PUSH1 0x2
0x5a4 PUSH1 0x20
0x5a6 MSTORE
0x5a7 PUSH1 0x40
0x5a9 SWAP1
0x5aa SHA3
0x5ab PUSH1 0x3
0x5ad ADD
0x5ae SLOAD
0x5af AND
0x5b0 ISZERO
0x5b1 ISZERO
0x5b2 PUSH2 0x6a2
0x5b5 JUMPI
---
0x591: JUMPDEST 
0x592: V442 = 0x1
0x594: V443 = 0xa0
0x596: V444 = 0x2
0x598: V445 = EXP 0x2 0xa0
0x599: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59c: V447 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x59d: V448 = 0x0
0x5a1: M[0x0] = V447
0x5a2: V449 = 0x2
0x5a4: V450 = 0x20
0x5a6: M[0x20] = 0x2
0x5a7: V451 = 0x40
0x5aa: V452 = SHA3 0x0 0x40
0x5ab: V453 = 0x3
0x5ad: V454 = ADD 0x3 V452
0x5ae: V455 = S[V454]
0x5af: V456 = AND V455 0xffffffffffffffffffffffffffffffffffffffff
0x5b0: V457 = ISZERO V456
0x5b1: V458 = ISZERO V457
0x5b2: V459 = 0x6a2
0x5b5: JUMPI 0x6a2 V458
---
Entry stack: [V12, 0x240, S4, {0x1db, 0x240}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x240, S4, {0x1db, 0x240}, S2, S1, S0]

================================

Block 0x5b6
[0x5b6:0x636]
---
Predecessors: [0x591]
Successors: [0xd03]
---
0x5b6 PUSH1 0x40
0x5b8 DUP1
0x5b9 MLOAD
0x5ba PUSH1 0x80
0x5bc DUP2
0x5bd ADD
0x5be DUP3
0x5bf MSTORE
0x5c0 DUP4
0x5c1 DUP2
0x5c2 MSTORE
0x5c3 PUSH1 0x4
0x5c5 SLOAD
0x5c6 PUSH1 0x20
0x5c8 DUP1
0x5c9 DUP4
0x5ca ADD
0x5cb SWAP2
0x5cc DUP3
0x5cd MSTORE
0x5ce DUP3
0x5cf DUP5
0x5d0 ADD
0x5d1 DUP6
0x5d2 DUP2
0x5d3 MSTORE
0x5d4 PUSH1 0x1
0x5d6 PUSH1 0xa0
0x5d8 PUSH1 0x2
0x5da EXP
0x5db SUB
0x5dc DUP9
0x5dd DUP2
0x5de AND
0x5df PUSH1 0x60
0x5e1 DUP7
0x5e2 ADD
0x5e3 DUP2
0x5e4 DUP2
0x5e5 MSTORE
0x5e6 PUSH1 0x0
0x5e8 SWAP2
0x5e9 DUP3
0x5ea MSTORE
0x5eb PUSH1 0x2
0x5ed SWAP5
0x5ee DUP6
0x5ef SWAP1
0x5f0 MSTORE
0x5f1 SWAP7
0x5f2 SWAP1
0x5f3 SHA3
0x5f4 SWAP5
0x5f5 MLOAD
0x5f6 DUP6
0x5f7 SSTORE
0x5f8 SWAP3
0x5f9 MLOAD
0x5fa PUSH1 0x1
0x5fc DUP1
0x5fd DUP7
0x5fe ADD
0x5ff SWAP2
0x600 SWAP1
0x601 SWAP2
0x602 SSTORE
0x603 SWAP1
0x604 MLOAD
0x605 SWAP2
0x606 DUP5
0x607 ADD
0x608 SWAP2
0x609 SWAP1
0x60a SWAP2
0x60b SSTORE
0x60c SWAP3
0x60d MLOAD
0x60e PUSH1 0x3
0x610 SWAP1
0x611 SWAP3
0x612 ADD
0x613 DUP1
0x614 SLOAD
0x615 PUSH1 0x1
0x617 PUSH1 0xa0
0x619 PUSH1 0x2
0x61b EXP
0x61c SUB
0x61d NOT
0x61e AND
0x61f SWAP3
0x620 SWAP1
0x621 SWAP2
0x622 AND
0x623 SWAP2
0x624 SWAP1
0x625 SWAP2
0x626 OR
0x627 SWAP1
0x628 SSTORE
0x629 DUP1
0x62a SLOAD
0x62b DUP1
0x62c DUP3
0x62d ADD
0x62e PUSH2 0x637
0x631 DUP4
0x632 DUP3
0x633 PUSH2 0xd03
0x636 JUMP
---
0x5b6: V460 = 0x40
0x5b9: V461 = M[0x40]
0x5ba: V462 = 0x80
0x5bd: V463 = ADD V461 0x80
0x5bf: M[0x40] = V463
0x5c2: M[V461] = S1
0x5c3: V464 = 0x4
0x5c5: V465 = S[0x4]
0x5c6: V466 = 0x20
0x5ca: V467 = ADD V461 0x20
0x5cd: M[V467] = V465
0x5d0: V468 = ADD 0x40 V461
0x5d3: M[V468] = S0
0x5d4: V469 = 0x1
0x5d6: V470 = 0xa0
0x5d8: V471 = 0x2
0x5da: V472 = EXP 0x2 0xa0
0x5db: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5de: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x5df: V475 = 0x60
0x5e2: V476 = ADD V461 0x60
0x5e5: M[V476] = V474
0x5e6: V477 = 0x0
0x5ea: M[0x0] = V474
0x5eb: V478 = 0x2
0x5f0: M[0x20] = 0x2
0x5f3: V479 = SHA3 0x0 0x40
0x5f5: V480 = M[V461]
0x5f7: S[V479] = V480
0x5f9: V481 = M[V467]
0x5fa: V482 = 0x1
0x5fe: V483 = ADD V479 0x1
0x602: S[V483] = V481
0x604: V484 = M[V468]
0x607: V485 = ADD V479 0x2
0x60b: S[V485] = V484
0x60d: V486 = M[V476]
0x60e: V487 = 0x3
0x612: V488 = ADD V479 0x3
0x614: V489 = S[V488]
0x615: V490 = 0x1
0x617: V491 = 0xa0
0x619: V492 = 0x2
0x61b: V493 = EXP 0x2 0xa0
0x61c: V494 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61d: V495 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x61e: V496 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V489
0x622: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V486
0x626: V498 = OR V497 V496
0x628: S[V488] = V498
0x62a: V499 = S[0x1]
0x62d: V500 = ADD 0x1 V499
0x62e: V501 = 0x637
0x633: V502 = 0xd03
0x636: JUMP 0xd03
---
Entry stack: [V12, 0x240, S4, {0x1db, 0x240}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x1, V499, V500, 0x637, 0x1, V500]
Exit stack: [V12, 0x240, S4, {0x1db, 0x240}, S2, S1, S0, 0x1, V499, V500, 0x637, 0x1, V500]

================================

Block 0x637
[0x637:0x647]
---
Predecessors: [0x74d]
Successors: [0x648]
---
0x637 JUMPDEST
0x638 SWAP2
0x639 PUSH1 0x0
0x63b MSTORE
0x63c PUSH1 0x20
0x63e PUSH1 0x0
0x640 SHA3
0x641 SWAP1
0x642 PUSH1 0x4
0x644 MUL
0x645 ADD
0x646 PUSH1 0x0
---
0x637: JUMPDEST 
0x639: V503 = 0x0
0x63b: M[0x0] = S2
0x63c: V504 = 0x20
0x63e: V505 = 0x0
0x640: V506 = SHA3 0x0 0x20
0x642: V507 = 0x4
0x644: V508 = MUL 0x4 S1
0x645: V509 = ADD V508 V506
0x646: V510 = 0x0
---
Entry stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, V509, 0x0]
Exit stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3, S0, V509, 0x0]

================================

Block 0x648
[0x648:0x6a1]
---
Predecessors: [0x637]
Successors: [0x74c]
---
0x648 JUMPDEST
0x649 POP
0x64a PUSH1 0x1
0x64c PUSH1 0xa0
0x64e PUSH1 0x2
0x650 EXP
0x651 SUB
0x652 DUP1
0x653 DUP7
0x654 AND
0x655 PUSH1 0x0
0x657 SWAP1
0x658 DUP2
0x659 MSTORE
0x65a PUSH1 0x2
0x65c PUSH1 0x20
0x65e DUP2
0x65f SWAP1
0x660 MSTORE
0x661 PUSH1 0x40
0x663 SWAP1
0x664 SWAP2
0x665 SHA3
0x666 DUP1
0x667 SLOAD
0x668 DUP5
0x669 SSTORE
0x66a PUSH1 0x1
0x66c DUP1
0x66d DUP3
0x66e ADD
0x66f SLOAD
0x670 SWAP1
0x671 DUP6
0x672 ADD
0x673 SSTORE
0x674 DUP1
0x675 DUP3
0x676 ADD
0x677 SLOAD
0x678 SWAP2
0x679 DUP5
0x67a ADD
0x67b SWAP2
0x67c SWAP1
0x67d SWAP2
0x67e SSTORE
0x67f PUSH1 0x3
0x681 SWAP1
0x682 DUP2
0x683 ADD
0x684 SLOAD
0x685 SWAP3
0x686 ADD
0x687 DUP1
0x688 SLOAD
0x689 PUSH1 0x1
0x68b PUSH1 0xa0
0x68d PUSH1 0x2
0x68f EXP
0x690 SUB
0x691 NOT
0x692 AND
0x693 SWAP3
0x694 SWAP1
0x695 SWAP2
0x696 AND
0x697 SWAP2
0x698 SWAP1
0x699 SWAP2
0x69a OR
0x69b SWAP1
0x69c SSTORE
0x69d POP
0x69e PUSH2 0x74c
0x6a1 JUMP
---
0x648: JUMPDEST 
0x64a: V511 = 0x1
0x64c: V512 = 0xa0
0x64e: V513 = 0x2
0x650: V514 = EXP 0x2 0xa0
0x651: V515 = SUB 0x10000000000000000000000000000000000000000 0x1
0x654: V516 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x655: V517 = 0x0
0x659: M[0x0] = V516
0x65a: V518 = 0x2
0x65c: V519 = 0x20
0x660: M[0x20] = 0x2
0x661: V520 = 0x40
0x665: V521 = SHA3 0x0 0x40
0x667: V522 = S[V521]
0x669: S[V509] = V522
0x66a: V523 = 0x1
0x66e: V524 = ADD V521 0x1
0x66f: V525 = S[V524]
0x672: V526 = ADD V509 0x1
0x673: S[V526] = V525
0x676: V527 = ADD 0x2 V521
0x677: V528 = S[V527]
0x67a: V529 = ADD V509 0x2
0x67e: S[V529] = V528
0x67f: V530 = 0x3
0x683: V531 = ADD 0x3 V521
0x684: V532 = S[V531]
0x686: V533 = ADD V509 0x3
0x688: V534 = S[V533]
0x689: V535 = 0x1
0x68b: V536 = 0xa0
0x68d: V537 = 0x2
0x68f: V538 = EXP 0x2 0xa0
0x690: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x691: V540 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x692: V541 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V534
0x696: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x69a: V543 = OR V542 V541
0x69c: S[V533] = V543
0x69e: V544 = 0x74c
0x6a1: JUMP 0x74c
---
Entry stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3, S2, V509, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3]

================================

Block 0x6a2
[0x6a2:0x6e0]
---
Predecessors: [0x591]
Successors: [0xd03]
---
0x6a2 JUMPDEST
0x6a3 PUSH1 0x1
0x6a5 PUSH1 0xa0
0x6a7 PUSH1 0x2
0x6a9 EXP
0x6aa SUB
0x6ab DUP4
0x6ac AND
0x6ad PUSH1 0x0
0x6af SWAP1
0x6b0 DUP2
0x6b1 MSTORE
0x6b2 PUSH1 0x2
0x6b4 PUSH1 0x20
0x6b6 DUP2
0x6b7 SWAP1
0x6b8 MSTORE
0x6b9 PUSH1 0x40
0x6bb DUP3
0x6bc SHA3
0x6bd DUP1
0x6be SLOAD
0x6bf DUP6
0x6c0 ADD
0x6c1 DUP2
0x6c2 SSTORE
0x6c3 PUSH1 0x1
0x6c5 DUP1
0x6c6 DUP3
0x6c7 ADD
0x6c8 SWAP4
0x6c9 SWAP1
0x6ca SWAP4
0x6cb SSTORE
0x6cc ADD
0x6cd DUP1
0x6ce SLOAD
0x6cf DUP4
0x6d0 ADD
0x6d1 SWAP1
0x6d2 SSTORE
0x6d3 DUP1
0x6d4 SLOAD
0x6d5 DUP1
0x6d6 DUP3
0x6d7 ADD
0x6d8 PUSH2 0x6e1
0x6db DUP4
0x6dc DUP3
0x6dd PUSH2 0xd03
0x6e0 JUMP
---
0x6a2: JUMPDEST 
0x6a3: V545 = 0x1
0x6a5: V546 = 0xa0
0x6a7: V547 = 0x2
0x6a9: V548 = EXP 0x2 0xa0
0x6aa: V549 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ac: V550 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x6ad: V551 = 0x0
0x6b1: M[0x0] = V550
0x6b2: V552 = 0x2
0x6b4: V553 = 0x20
0x6b8: M[0x20] = 0x2
0x6b9: V554 = 0x40
0x6bc: V555 = SHA3 0x0 0x40
0x6be: V556 = S[V555]
0x6c0: V557 = ADD S1 V556
0x6c2: S[V555] = V557
0x6c3: V558 = 0x1
0x6c7: V559 = ADD V555 0x1
0x6cb: S[V559] = 0x0
0x6cc: V560 = ADD V555 0x2
0x6ce: V561 = S[V560]
0x6d0: V562 = ADD S0 V561
0x6d2: S[V560] = V562
0x6d4: V563 = S[0x1]
0x6d7: V564 = ADD 0x1 V563
0x6d8: V565 = 0x6e1
0x6dd: V566 = 0xd03
0x6e0: JUMP 0xd03
---
Entry stack: [V12, 0x240, S4, {0x1db, 0x240}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x1, V563, V564, 0x6e1, 0x1, V564]
Exit stack: [V12, 0x240, S4, {0x1db, 0x240}, S2, S1, S0, 0x1, V563, V564, 0x6e1, 0x1, V564]

================================

Block 0x6e1
[0x6e1:0x6f1]
---
Predecessors: [0x74d]
Successors: [0x6f2]
---
0x6e1 JUMPDEST
0x6e2 SWAP2
0x6e3 PUSH1 0x0
0x6e5 MSTORE
0x6e6 PUSH1 0x20
0x6e8 PUSH1 0x0
0x6ea SHA3
0x6eb SWAP1
0x6ec PUSH1 0x4
0x6ee MUL
0x6ef ADD
0x6f0 PUSH1 0x0
---
0x6e1: JUMPDEST 
0x6e3: V567 = 0x0
0x6e5: M[0x0] = S2
0x6e6: V568 = 0x20
0x6e8: V569 = 0x0
0x6ea: V570 = SHA3 0x0 0x20
0x6ec: V571 = 0x4
0x6ee: V572 = MUL 0x4 S1
0x6ef: V573 = ADD V572 V570
0x6f0: V574 = 0x0
---
Entry stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, V573, 0x0]
Exit stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3, S0, V573, 0x0]

================================

Block 0x6f2
[0x6f2:0x74b]
---
Predecessors: [0x6e1]
Successors: [0x74c]
---
0x6f2 JUMPDEST
0x6f3 POP
0x6f4 PUSH1 0x40
0x6f6 DUP1
0x6f7 MLOAD
0x6f8 PUSH1 0x80
0x6fa DUP2
0x6fb ADD
0x6fc DUP3
0x6fd MSTORE
0x6fe DUP6
0x6ff DUP2
0x700 MSTORE
0x701 PUSH1 0x4
0x703 SLOAD
0x704 PUSH1 0x20
0x706 DUP3
0x707 ADD
0x708 DUP2
0x709 SWAP1
0x70a MSTORE
0x70b SWAP2
0x70c DUP2
0x70d ADD
0x70e DUP6
0x70f SWAP1
0x710 MSTORE
0x711 PUSH1 0x1
0x713 PUSH1 0xa0
0x715 PUSH1 0x2
0x717 EXP
0x718 SUB
0x719 DUP8
0x71a AND
0x71b PUSH1 0x60
0x71d SWAP1
0x71e SWAP2
0x71f ADD
0x720 DUP2
0x721 SWAP1
0x722 MSTORE
0x723 DUP6
0x724 DUP4
0x725 SSTORE
0x726 PUSH1 0x1
0x728 DUP4
0x729 ADD
0x72a SWAP2
0x72b SWAP1
0x72c SWAP2
0x72d SSTORE
0x72e PUSH1 0x2
0x730 DUP3
0x731 ADD
0x732 DUP5
0x733 SWAP1
0x734 SSTORE
0x735 PUSH1 0x3
0x737 SWAP1
0x738 SWAP2
0x739 ADD
0x73a DUP1
0x73b SLOAD
0x73c PUSH1 0x1
0x73e PUSH1 0xa0
0x740 PUSH1 0x2
0x742 EXP
0x743 SUB
0x744 NOT
0x745 AND
0x746 SWAP1
0x747 SWAP2
0x748 OR
0x749 SWAP1
0x74a SSTORE
0x74b POP
---
0x6f2: JUMPDEST 
0x6f4: V575 = 0x40
0x6f7: V576 = M[0x40]
0x6f8: V577 = 0x80
0x6fb: V578 = ADD V576 0x80
0x6fd: M[0x40] = V578
0x700: M[V576] = S4
0x701: V579 = 0x4
0x703: V580 = S[0x4]
0x704: V581 = 0x20
0x707: V582 = ADD V576 0x20
0x70a: M[V582] = V580
0x70d: V583 = ADD V576 0x40
0x710: M[V583] = S3
0x711: V584 = 0x1
0x713: V585 = 0xa0
0x715: V586 = 0x2
0x717: V587 = EXP 0x2 0xa0
0x718: V588 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71a: V589 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x71b: V590 = 0x60
0x71f: V591 = ADD V576 0x60
0x722: M[V591] = V589
0x725: S[V573] = S4
0x726: V592 = 0x1
0x729: V593 = ADD V573 0x1
0x72d: S[V593] = V580
0x72e: V594 = 0x2
0x731: V595 = ADD V573 0x2
0x734: S[V595] = S3
0x735: V596 = 0x3
0x739: V597 = ADD V573 0x3
0x73b: V598 = S[V597]
0x73c: V599 = 0x1
0x73e: V600 = 0xa0
0x740: V601 = 0x2
0x742: V602 = EXP 0x2 0xa0
0x743: V603 = SUB 0x10000000000000000000000000000000000000000 0x1
0x744: V604 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x745: V605 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V598
0x748: V606 = OR V589 V605
0x74a: S[V597] = V606
---
Entry stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3, S2, V573, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, 0x240, S7, {0x1db, 0x240}, S5, S4, S3]

================================

Block 0x74c
[0x74c:0x74c]
---
Predecessors: [0x648, 0x6f2, 0x7f1, 0xd03]
Successors: [0x74d]
---
0x74c JUMPDEST
---
0x74c: JUMPDEST 
---
Entry stack: [V12, 0x240, S11, {0x1db, 0x240}, S9, S8, S7, S6, S5, S4, {0x1db, 0x240, 0x637, 0x6e1}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, S11, {0x1db, 0x240}, S9, S8, S7, S6, S5, S4, {0x1db, 0x240, 0x637, 0x6e1}, S2, S1, S0]

================================

Block 0x74d
[0x74d:0x751]
---
Predecessors: [0x74c]
Successors: [0x1db, 0x240, 0x637, 0x6e1]
---
0x74d JUMPDEST
0x74e POP
0x74f POP
0x750 POP
0x751 JUMP
---
0x74d: JUMPDEST 
0x751: JUMP {0x1db, 0x240, 0x637, 0x6e1}
---
Entry stack: [V12, 0x240, S11, {0x1db, 0x240}, S9, S8, S7, S6, S5, S4, {0x1db, 0x240, 0x637, 0x6e1}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x240, S11, {0x1db, 0x240}, S9, S8, S7, S6, S5, S4]

================================

Block 0x752
[0x752:0x75b]
---
Predecessors: [0x24a]
Successors: [0x75c, 0x7e9]
---
0x752 JUMPDEST
0x753 PUSH1 0x9
0x755 SLOAD
0x756 TIMESTAMP
0x757 LT
0x758 PUSH2 0x7e9
0x75b JUMPI
---
0x752: JUMPDEST 
0x753: V607 = 0x9
0x755: V608 = S[0x9]
0x756: V609 = TIMESTAMP
0x757: V610 = LT V609 V608
0x758: V611 = 0x7e9
0x75b: JUMPI 0x7e9 V610
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0x75c
[0x75c:0x766]
---
Predecessors: [0x752]
Successors: [0x767, 0x7c6]
---
0x75c PUSH1 0x5
0x75e SLOAD
0x75f PUSH1 0x7
0x761 SLOAD
0x762 LT
0x763 PUSH2 0x7c6
0x766 JUMPI
---
0x75c: V612 = 0x5
0x75e: V613 = S[0x5]
0x75f: V614 = 0x7
0x761: V615 = S[0x7]
0x762: V616 = LT V615 V613
0x763: V617 = 0x7c6
0x766: JUMPI 0x7c6 V616
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0x767
[0x767:0x7c5]
---
Predecessors: [0x75c]
Successors: [0x7db]
---
0x767 PUSH1 0x3
0x769 SLOAD
0x76a PUSH1 0x7
0x76c SLOAD
0x76d PUSH1 0x40
0x76f DUP1
0x770 MLOAD
0x771 PUSH1 0x1
0x773 PUSH1 0xa0
0x775 PUSH1 0x2
0x777 EXP
0x778 SUB
0x779 SWAP1
0x77a SWAP4
0x77b AND
0x77c DUP4
0x77d MSTORE
0x77e PUSH1 0x20
0x780 DUP4
0x781 ADD
0x782 SWAP2
0x783 SWAP1
0x784 SWAP2
0x785 MSTORE
0x786 DUP1
0x787 MLOAD
0x788 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x7a9 SWAP3
0x7aa DUP2
0x7ab SWAP1
0x7ac SUB
0x7ad SWAP1
0x7ae SWAP2
0x7af ADD
0x7b0 SWAP1
0x7b1 LOG1
0x7b2 PUSH1 0x8
0x7b4 DUP1
0x7b5 SLOAD
0x7b6 PUSH2 0xff00
0x7b9 NOT
0x7ba AND
0x7bb SWAP1
0x7bc SSTORE
0x7bd PUSH1 0x0
0x7bf PUSH1 0x6
0x7c1 SSTORE
0x7c2 PUSH2 0x7db
0x7c5 JUMP
---
0x767: V618 = 0x3
0x769: V619 = S[0x3]
0x76a: V620 = 0x7
0x76c: V621 = S[0x7]
0x76d: V622 = 0x40
0x770: V623 = M[0x40]
0x771: V624 = 0x1
0x773: V625 = 0xa0
0x775: V626 = 0x2
0x777: V627 = EXP 0x2 0xa0
0x778: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77b: V629 = AND V619 0xffffffffffffffffffffffffffffffffffffffff
0x77d: M[V623] = V629
0x77e: V630 = 0x20
0x781: V631 = ADD V623 0x20
0x785: M[V631] = V621
0x787: V632 = M[0x40]
0x788: V633 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x7ac: V634 = SUB V623 V632
0x7af: V635 = ADD 0x40 V634
0x7b1: LOG V632 V635 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x7b2: V636 = 0x8
0x7b5: V637 = S[0x8]
0x7b6: V638 = 0xff00
0x7b9: V639 = NOT 0xff00
0x7ba: V640 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V637
0x7bc: S[0x8] = V640
0x7bd: V641 = 0x0
0x7bf: V642 = 0x6
0x7c1: S[0x6] = 0x0
0x7c2: V643 = 0x7db
0x7c5: JUMP 0x7db
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0x7c6
[0x7c6:0x7da]
---
Predecessors: [0x75c]
Successors: [0x7db]
---
0x7c6 JUMPDEST
0x7c7 PUSH1 0x0
0x7c9 PUSH1 0x6
0x7cb SSTORE
0x7cc PUSH1 0x8
0x7ce DUP1
0x7cf SLOAD
0x7d0 PUSH2 0xff00
0x7d3 NOT
0x7d4 AND
0x7d5 PUSH2 0x100
0x7d8 OR
0x7d9 SWAP1
0x7da SSTORE
---
0x7c6: JUMPDEST 
0x7c7: V644 = 0x0
0x7c9: V645 = 0x6
0x7cb: S[0x6] = 0x0
0x7cc: V646 = 0x8
0x7cf: V647 = S[0x8]
0x7d0: V648 = 0xff00
0x7d3: V649 = NOT 0xff00
0x7d4: V650 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V647
0x7d5: V651 = 0x100
0x7d8: V652 = OR 0x100 V650
0x7da: S[0x8] = V652
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0x7db
[0x7db:0x7e8]
---
Predecessors: [0x767, 0x7c6]
Successors: [0x7e9]
---
0x7db JUMPDEST
0x7dc PUSH1 0x8
0x7de DUP1
0x7df SLOAD
0x7e0 PUSH1 0xff
0x7e2 NOT
0x7e3 AND
0x7e4 PUSH1 0x1
0x7e6 OR
0x7e7 SWAP1
0x7e8 SSTORE
---
0x7db: JUMPDEST 
0x7dc: V653 = 0x8
0x7df: V654 = S[0x8]
0x7e0: V655 = 0xff
0x7e2: V656 = NOT 0xff
0x7e3: V657 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V654
0x7e4: V658 = 0x1
0x7e6: V659 = OR 0x1 V657
0x7e8: S[0x8] = V659
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0x7e9
[0x7e9:0x7e9]
---
Predecessors: [0x752, 0x7db, 0xa0a, 0xadd, 0xc63, 0xc99]
Successors: [0x7ea]
---
0x7e9 JUMPDEST
---
0x7e9: JUMPDEST 
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0x7ea
[0x7ea:0x7ea]
---
Predecessors: [0x7e9]
Successors: [0x7eb]
---
0x7ea JUMPDEST
---
0x7ea: JUMPDEST 
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0x7eb
[0x7eb:0x7ec]
---
Predecessors: [0x7ea]
Successors: [0x240]
---
0x7eb JUMPDEST
0x7ec JUMP
---
0x7eb: JUMPDEST 
0x7ec: JUMP 0x240
---
Entry stack: [V12, 0x240]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x7ed
[0x7ed:0x7f0]
---
Predecessors: [0x25c]
Successors: [0x7f1]
---
0x7ed JUMPDEST
0x7ee PUSH1 0x6
0x7f0 SLOAD
---
0x7ed: JUMPDEST 
0x7ee: V660 = 0x6
0x7f0: V661 = S[0x6]
---
Entry stack: [V12, 0x264]
Stack pops: 0
Stack additions: [V661]
Exit stack: [V12, 0x264, V661]

================================

Block 0x7f1
[0x7f1:0x7f3]
---
Predecessors: [0x7ed, 0xd6e]
Successors: [0x264, 0x74c]
---
0x7f1 JUMPDEST
0x7f2 SWAP1
0x7f3 JUMP
---
0x7f1: JUMPDEST 
0x7f3: JUMP {0x264, 0x74c}
---
Entry stack: [V12, 0x240, S12, {0x1db, 0x240}, S10, S9, S8, 0x1, S6, S5, {0x637, 0x6e1}, S3, S2, {0x264, 0x74c}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x240, S12, {0x1db, 0x240}, S10, S9, S8, 0x1, S6, S5, {0x637, 0x6e1}, S3, S2, S0]

================================

Block 0x7f4
[0x7f4:0x7f7]
---
Predecessors: [0x27e]
Successors: [0x7f8]
---
0x7f4 JUMPDEST
0x7f5 PUSH1 0x5
0x7f7 SLOAD
---
0x7f4: JUMPDEST 
0x7f5: V662 = 0x5
0x7f7: V663 = S[0x5]
---
Entry stack: [V12, 0x264]
Stack pops: 0
Stack additions: [V663]
Exit stack: [V12, 0x264, V663]

================================

Block 0x7f8
[0x7f8:0x7fa]
---
Predecessors: [0x7f4]
Successors: [0x264]
---
0x7f8 JUMPDEST
0x7f9 SWAP1
0x7fa JUMP
---
0x7f8: JUMPDEST 
0x7fa: JUMP 0x264
---
Entry stack: [V12, 0x264, V663]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V663]

================================

Block 0x7fb
[0x7fb:0x807]
---
Predecessors: [0x2a0]
Successors: [0x808, 0x809]
---
0x7fb JUMPDEST
0x7fc PUSH1 0x1
0x7fe DUP1
0x7ff SLOAD
0x800 DUP3
0x801 SWAP1
0x802 DUP2
0x803 LT
0x804 PUSH2 0x809
0x807 JUMPI
---
0x7fb: JUMPDEST 
0x7fc: V664 = 0x1
0x7ff: V665 = S[0x1]
0x803: V666 = LT V209 V665
0x804: V667 = 0x809
0x807: JUMPI 0x809 V666
---
Entry stack: [V12, 0x2ab, V209]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V12, 0x2ab, V209, 0x1, V209]

================================

Block 0x808
[0x808:0x808]
---
Predecessors: [0x7fb]
Successors: []
---
0x808 INVALID
---
0x808: INVALID 
---
Entry stack: [V12, 0x2ab, V209, 0x1, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2ab, V209, 0x1, V209]

================================

Block 0x809
[0x809:0x819]
---
Predecessors: [0x7fb]
Successors: [0x81a]
---
0x809 JUMPDEST
0x80a SWAP1
0x80b PUSH1 0x0
0x80d MSTORE
0x80e PUSH1 0x20
0x810 PUSH1 0x0
0x812 SHA3
0x813 SWAP1
0x814 PUSH1 0x4
0x816 MUL
0x817 ADD
0x818 PUSH1 0x0
---
0x809: JUMPDEST 
0x80b: V668 = 0x0
0x80d: M[0x0] = 0x1
0x80e: V669 = 0x20
0x810: V670 = 0x0
0x812: V671 = SHA3 0x0 0x20
0x814: V672 = 0x4
0x816: V673 = MUL 0x4 V209
0x817: V674 = ADD V673 V671
0x818: V675 = 0x0
---
Entry stack: [V12, 0x2ab, V209, 0x1, V209]
Stack pops: 2
Stack additions: [V674, 0x0]
Exit stack: [V12, 0x2ab, V209, V674, 0x0]

================================

Block 0x81a
[0x81a:0x83d]
---
Predecessors: [0x809]
Successors: [0x2ab]
---
0x81a JUMPDEST
0x81b POP
0x81c DUP1
0x81d SLOAD
0x81e PUSH1 0x1
0x820 DUP3
0x821 ADD
0x822 SLOAD
0x823 PUSH1 0x2
0x825 DUP4
0x826 ADD
0x827 SLOAD
0x828 PUSH1 0x3
0x82a SWAP1
0x82b SWAP4
0x82c ADD
0x82d SLOAD
0x82e SWAP2
0x82f SWAP4
0x830 POP
0x831 SWAP2
0x832 SWAP1
0x833 PUSH1 0x1
0x835 PUSH1 0xa0
0x837 PUSH1 0x2
0x839 EXP
0x83a SUB
0x83b AND
0x83c DUP5
0x83d JUMP
---
0x81a: JUMPDEST 
0x81d: V676 = S[V674]
0x81e: V677 = 0x1
0x821: V678 = ADD V674 0x1
0x822: V679 = S[V678]
0x823: V680 = 0x2
0x826: V681 = ADD V674 0x2
0x827: V682 = S[V681]
0x828: V683 = 0x3
0x82c: V684 = ADD V674 0x3
0x82d: V685 = S[V684]
0x833: V686 = 0x1
0x835: V687 = 0xa0
0x837: V688 = 0x2
0x839: V689 = EXP 0x2 0xa0
0x83a: V690 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83b: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff V685
0x83d: JUMP 0x2ab
---
Entry stack: [V12, 0x2ab, V209, V674, 0x0]
Stack pops: 4
Stack additions: [S3, V676, V679, V682, V691]
Exit stack: [V12, 0x2ab, V676, V679, V682, V691]

================================

Block 0x83e
[0x83e:0x843]
---
Predecessors: [0x2e2]
Successors: [0x264]
---
0x83e JUMPDEST
0x83f PUSH1 0x9
0x841 SLOAD
0x842 DUP2
0x843 JUMP
---
0x83e: JUMPDEST 
0x83f: V692 = 0x9
0x841: V693 = S[0x9]
0x843: JUMP 0x264
---
Entry stack: [V12, 0x264]
Stack pops: 1
Stack additions: [S0, V693]
Exit stack: [V12, 0x264, V693]

================================

Block 0x844
[0x844:0x855]
---
Predecessors: [0x328, 0x51f, 0x562, 0x57b]
Successors: [0x856]
---
0x844 JUMPDEST
0x845 PUSH1 0x6
0x847 DUP1
0x848 SLOAD
0x849 DUP3
0x84a SWAP1
0x84b SUB
0x84c SWAP1
0x84d SSTORE
0x84e PUSH1 0x0
0x850 PUSH1 0x8
0x852 PUSH1 0xd
0x854 DUP4
0x855 MUL
---
0x844: JUMPDEST 
0x845: V694 = 0x6
0x848: V695 = S[0x6]
0x84b: V696 = SUB V695 S0
0x84d: S[0x6] = V696
0x84e: V697 = 0x0
0x850: V698 = 0x8
0x852: V699 = 0xd
0x855: V700 = MUL S0 0xd
---
Entry stack: [V12, 0x240, S8, {0x12a, 0x264}, S6, 0x0, S4, S3, S2, {0x264, 0x527, 0x56a, 0x584}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x8, V700]
Exit stack: [V12, 0x240, S8, {0x12a, 0x264}, S6, 0x0, S4, S3, S2, {0x264, 0x527, 0x56a, 0x584}, S0, 0x0, 0x8, V700]

================================

Block 0x856
[0x856:0x859]
---
Predecessors: [0x844]
Successors: [0x85a]
---
0x856 JUMPDEST
0x857 DIV
0x858 SWAP1
0x859 POP
---
0x856: JUMPDEST 
0x857: V701 = DIV V700 0x8
---
Entry stack: [V12, 0x240, S11, {0x12a, 0x264}, S9, 0x0, S7, S6, S5, {0x264, 0x527, 0x56a, 0x584}, S3, 0x0, 0x8, V700]
Stack pops: 3
Stack additions: [V701]
Exit stack: [V12, 0x240, S11, {0x12a, 0x264}, S9, 0x0, S7, S6, S5, {0x264, 0x527, 0x56a, 0x584}, S3, V701]

================================

Block 0x85a
[0x85a:0x85e]
---
Predecessors: [0x856]
Successors: [0x264, 0x527, 0x56a, 0x584]
---
0x85a JUMPDEST
0x85b SWAP2
0x85c SWAP1
0x85d POP
0x85e JUMP
---
0x85a: JUMPDEST 
0x85e: JUMP {0x264, 0x527, 0x56a, 0x584}
---
Entry stack: [V12, 0x240, S9, {0x12a, 0x264}, S7, 0x0, S5, S4, S3, {0x264, 0x527, 0x56a, 0x584}, S1, V701]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x240, S9, {0x12a, 0x264}, S7, 0x0, S5, S4, S3, V701]

================================

Block 0x85f
[0x85f:0x865]
---
Predecessors: [0x372]
Successors: [0x866]
---
0x85f JUMPDEST
0x860 PUSH1 0x8
0x862 SLOAD
0x863 PUSH1 0xff
0x865 AND
---
0x85f: JUMPDEST 
0x860: V702 = 0x8
0x862: V703 = S[0x8]
0x863: V704 = 0xff
0x865: V705 = AND 0xff V703
---
Entry stack: [V12, 0x37a]
Stack pops: 0
Stack additions: [V705]
Exit stack: [V12, 0x37a, V705]

================================

Block 0x866
[0x866:0x868]
---
Predecessors: [0x85f]
Successors: [0x37a]
---
0x866 JUMPDEST
0x867 SWAP1
0x868 JUMP
---
0x866: JUMPDEST 
0x868: JUMP 0x37a
---
Entry stack: [V12, 0x37a, V705]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V705]

================================

Block 0x869
[0x869:0x875]
---
Predecessors: [0x396]
Successors: [0x876]
---
0x869 JUMPDEST
0x86a PUSH1 0x3
0x86c SLOAD
0x86d PUSH1 0x1
0x86f PUSH1 0xa0
0x871 PUSH1 0x2
0x873 EXP
0x874 SUB
0x875 AND
---
0x869: JUMPDEST 
0x86a: V706 = 0x3
0x86c: V707 = S[0x3]
0x86d: V708 = 0x1
0x86f: V709 = 0xa0
0x871: V710 = 0x2
0x873: V711 = EXP 0x2 0xa0
0x874: V712 = SUB 0x10000000000000000000000000000000000000000 0x1
0x875: V713 = AND 0xffffffffffffffffffffffffffffffffffffffff V707
---
Entry stack: [V12, 0x39e]
Stack pops: 0
Stack additions: [V713]
Exit stack: [V12, 0x39e, V713]

================================

Block 0x876
[0x876:0x878]
---
Predecessors: [0x869]
Successors: [0x39e]
---
0x876 JUMPDEST
0x877 SWAP1
0x878 JUMP
---
0x876: JUMPDEST 
0x878: JUMP 0x39e
---
Entry stack: [V12, 0x39e, V713]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V713]

================================

Block 0x879
[0x879:0x885]
---
Predecessors: [0x3c2]
Successors: [0x886]
---
0x879 JUMPDEST
0x87a PUSH11 0x2e5276153cd3fb3800000
---
0x879: JUMPDEST 
0x87a: V714 = 0x2e5276153cd3fb3800000
---
Entry stack: [V12, 0x264]
Stack pops: 0
Stack additions: [0x2e5276153cd3fb3800000]
Exit stack: [V12, 0x264, 0x2e5276153cd3fb3800000]

================================

Block 0x886
[0x886:0x888]
---
Predecessors: [0x879]
Successors: [0x264]
---
0x886 JUMPDEST
0x887 SWAP1
0x888 JUMP
---
0x886: JUMPDEST 
0x888: JUMP 0x264
---
Entry stack: [V12, 0x264, 0x2e5276153cd3fb3800000]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x2e5276153cd3fb3800000]

================================

Block 0x889
[0x889:0x89f]
---
Predecessors: [0x3e4]
Successors: [0x8a0, 0x8a5]
---
0x889 JUMPDEST
0x88a PUSH1 0x0
0x88c SLOAD
0x88d CALLER
0x88e PUSH1 0x1
0x890 PUSH1 0xa0
0x892 PUSH1 0x2
0x894 EXP
0x895 SUB
0x896 SWAP1
0x897 DUP2
0x898 AND
0x899 SWAP2
0x89a AND
0x89b EQ
0x89c PUSH2 0x8a5
0x89f JUMPI
---
0x889: JUMPDEST 
0x88a: V715 = 0x0
0x88c: V716 = S[0x0]
0x88d: V717 = CALLER
0x88e: V718 = 0x1
0x890: V719 = 0xa0
0x892: V720 = 0x2
0x894: V721 = EXP 0x2 0xa0
0x895: V722 = SUB 0x10000000000000000000000000000000000000000 0x1
0x898: V723 = AND 0xffffffffffffffffffffffffffffffffffffffff V717
0x89a: V724 = AND V716 0xffffffffffffffffffffffffffffffffffffffff
0x89b: V725 = EQ V724 V723
0x89c: V726 = 0x8a5
0x89f: JUMPI 0x8a5 V725
---
Entry stack: [V12, 0x240, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, V328]

================================

Block 0x8a0
[0x8a0:0x8a4]
---
Predecessors: [0x889]
Successors: []
---
0x8a0 PUSH1 0x0
0x8a2 PUSH1 0x0
0x8a4 REVERT
---
0x8a0: V727 = 0x0
0x8a2: V728 = 0x0
0x8a4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x240, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, V328]

================================

Block 0x8a5
[0x8a5:0x8aa]
---
Predecessors: [0x889]
Successors: [0x8ab]
---
0x8a5 JUMPDEST
0x8a6 PUSH1 0x4
0x8a8 DUP2
0x8a9 SWAP1
0x8aa SSTORE
---
0x8a5: JUMPDEST 
0x8a6: V729 = 0x4
0x8aa: S[0x4] = V328
---
Entry stack: [V12, 0x240, V328]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x240, V328]

================================

Block 0x8ab
[0x8ab:0x8ab]
---
Predecessors: [0x8a5]
Successors: [0x8ac]
---
0x8ab JUMPDEST
---
0x8ab: JUMPDEST 
---
Entry stack: [V12, 0x240, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, V328]

================================

Block 0x8ac
[0x8ac:0x8ae]
---
Predecessors: [0x8ab]
Successors: [0x240]
---
0x8ac JUMPDEST
0x8ad POP
0x8ae JUMP
---
0x8ac: JUMPDEST 
0x8ae: JUMP 0x240
---
Entry stack: [V12, 0x240, V328]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x8af
[0x8af:0x8cc]
---
Predecessors: [0x3f9, 0x4ef]
Successors: [0x8cd, 0x8e8]
---
0x8af JUMPDEST
0x8b0 PUSH1 0x6
0x8b2 SLOAD
0x8b3 PUSH1 0x0
0x8b5 SWAP1
0x8b6 DUP2
0x8b7 SWAP1
0x8b8 PUSH11 0x1a784379d99db41ffffff
0x8c4 NOT
0x8c5 ADD
0x8c6 DUP4
0x8c7 DUP2
0x8c8 LT
0x8c9 PUSH2 0x8e8
0x8cc JUMPI
---
0x8af: JUMPDEST 
0x8b0: V730 = 0x6
0x8b2: V731 = S[0x6]
0x8b3: V732 = 0x0
0x8b8: V733 = 0x1a784379d99db41ffffff
0x8c4: V734 = NOT 0x1a784379d99db41ffffff
0x8c5: V735 = ADD 0xfffffffffffffffffffffffffffffffffffffffffffe587bc8626624be000000 V731
0x8c8: V736 = LT V735 S0
0x8c9: V737 = 0x8e8
0x8cc: JUMPI 0x8e8 V736
---
Entry stack: [V12, 0x240, S8, {0x12a, 0x264}, S6, 0x0, 0x0, 0x0, S2, {0x404, 0x4f7}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, V735]
Exit stack: [V12, 0x240, S8, {0x12a, 0x264}, S6, 0x0, 0x0, 0x0, S2, {0x404, 0x4f7}, S0, 0x0, 0x0, V735]

================================

Block 0x8cd
[0x8cd:0x8db]
---
Predecessors: [0x8af]
Successors: [0x8dc]
---
0x8cd PUSH1 0x6
0x8cf DUP1
0x8d0 SLOAD
0x8d1 DUP6
0x8d2 SWAP1
0x8d3 SUB
0x8d4 SWAP1
0x8d5 SSTORE
0x8d6 PUSH1 0x4
0x8d8 PUSH1 0x9
0x8da DUP6
0x8db MUL
---
0x8cd: V738 = 0x6
0x8d0: V739 = S[0x6]
0x8d3: V740 = SUB V739 S3
0x8d5: S[0x6] = V740
0x8d6: V741 = 0x4
0x8d8: V742 = 0x9
0x8db: V743 = MUL S3 0x9
---
Entry stack: [V12, 0x240, S11, {0x12a, 0x264}, S9, 0x0, 0x0, 0x0, S5, {0x404, 0x4f7}, S3, 0x0, 0x0, V735]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x4, V743]
Exit stack: [V12, 0x240, S11, {0x12a, 0x264}, S9, 0x0, 0x0, 0x0, S5, {0x404, 0x4f7}, S3, 0x0, 0x0, V735, 0x4, V743]

================================

Block 0x8dc
[0x8dc:0x8e7]
---
Predecessors: [0x8cd]
Successors: [0x901]
---
0x8dc JUMPDEST
0x8dd DIV
0x8de SWAP3
0x8df POP
0x8e0 PUSH1 0x0
0x8e2 SWAP2
0x8e3 POP
0x8e4 PUSH2 0x901
0x8e7 JUMP
---
0x8dc: JUMPDEST 
0x8dd: V744 = DIV V743 0x4
0x8e0: V745 = 0x0
0x8e4: V746 = 0x901
0x8e7: JUMP 0x901
---
Entry stack: [V12, 0x240, S13, {0x12a, 0x264}, S11, 0x0, 0x0, 0x0, S7, {0x404, 0x4f7}, S5, 0x0, 0x0, S2, 0x4, V743]
Stack pops: 5
Stack additions: [V744, 0x0, S2]
Exit stack: [V12, 0x240, S13, {0x12a, 0x264}, S11, 0x0, 0x0, 0x0, S7, {0x404, 0x4f7}, S5, V744, 0x0, S2]

================================

Block 0x8e8
[0x8e8:0x8f7]
---
Predecessors: [0x8af]
Successors: [0x8f8]
---
0x8e8 JUMPDEST
0x8e9 PUSH1 0x6
0x8eb DUP1
0x8ec SLOAD
0x8ed DUP3
0x8ee SWAP1
0x8ef SUB
0x8f0 SWAP1
0x8f1 SSTORE
0x8f2 PUSH1 0x4
0x8f4 PUSH1 0x9
0x8f6 DUP3
0x8f7 MUL
---
0x8e8: JUMPDEST 
0x8e9: V747 = 0x6
0x8ec: V748 = S[0x6]
0x8ef: V749 = SUB V748 V735
0x8f1: S[0x6] = V749
0x8f2: V750 = 0x4
0x8f4: V751 = 0x9
0x8f7: V752 = MUL V735 0x9
---
Entry stack: [V12, 0x240, S11, {0x12a, 0x264}, S9, 0x0, 0x0, 0x0, S5, {0x404, 0x4f7}, S3, 0x0, 0x0, V735]
Stack pops: 1
Stack additions: [S0, 0x4, V752]
Exit stack: [V12, 0x240, S11, {0x12a, 0x264}, S9, 0x0, 0x0, 0x0, S5, {0x404, 0x4f7}, S3, 0x0, 0x0, V735, 0x4, V752]

================================

Block 0x8f8
[0x8f8:0x900]
---
Predecessors: [0x8e8]
Successors: [0x901]
---
0x8f8 JUMPDEST
0x8f9 DIV
0x8fa DUP2
0x8fb DUP6
0x8fc SUB
0x8fd SWAP3
0x8fe POP
0x8ff SWAP3
0x900 POP
---
0x8f8: JUMPDEST 
0x8f9: V753 = DIV V752 0x4
0x8fc: V754 = SUB S5 V735
---
Entry stack: [V12, 0x240, S13, {0x12a, 0x264}, S11, 0x0, 0x0, 0x0, S7, {0x404, 0x4f7}, S5, 0x0, 0x0, V735, 0x4, V752]
Stack pops: 6
Stack additions: [S5, V753, V754, S2]
Exit stack: [V12, 0x240, S13, {0x12a, 0x264}, S11, 0x0, 0x0, 0x0, S7, {0x404, 0x4f7}, S5, V753, V754, V735]

================================

Block 0x901
[0x901:0x901]
---
Predecessors: [0x8dc, 0x8f8, 0x92c, 0x943]
Successors: [0x902]
---
0x901 JUMPDEST
---
0x901: JUMPDEST 
---
Entry stack: [V12, 0x240, S11, {0x12a, 0x264}, S9, 0x0, S7, S6, S5, {0x404, 0x4f7, 0x50f, 0x556}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, S11, {0x12a, 0x264}, S9, 0x0, S7, S6, S5, {0x404, 0x4f7, 0x50f, 0x556}, S3, S2, S1, S0]

================================

Block 0x902
[0x902:0x907]
---
Predecessors: [0x901]
Successors: [0x404, 0x4f7, 0x50f, 0x556]
---
0x902 JUMPDEST
0x903 POP
0x904 SWAP2
0x905 POP
0x906 SWAP2
0x907 JUMP
---
0x902: JUMPDEST 
0x907: JUMP {0x404, 0x4f7, 0x50f, 0x556}
---
Entry stack: [V12, 0x240, S11, {0x12a, 0x264}, S9, 0x0, S7, S6, S5, {0x404, 0x4f7, 0x50f, 0x556}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S2, S1]
Exit stack: [V12, 0x240, S11, {0x12a, 0x264}, S9, 0x0, S7, S6, S5, S2, S1]

================================

Block 0x908
[0x908:0x90b]
---
Predecessors: [0x425]
Successors: [0x90c]
---
0x908 JUMPDEST
0x909 PUSH1 0x7
0x90b SLOAD
---
0x908: JUMPDEST 
0x909: V755 = 0x7
0x90b: V756 = S[0x7]
---
Entry stack: [V12, 0x264]
Stack pops: 0
Stack additions: [V756]
Exit stack: [V12, 0x264, V756]

================================

Block 0x90c
[0x90c:0x90e]
---
Predecessors: [0x908]
Successors: [0x264]
---
0x90c JUMPDEST
0x90d SWAP1
0x90e JUMP
---
0x90c: JUMPDEST 
0x90e: JUMP 0x264
---
Entry stack: [V12, 0x264, V756]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V756]

================================

Block 0x90f
[0x90f:0x92b]
---
Predecessors: [0x447, 0x507, 0x54e]
Successors: [0x92c, 0x943]
---
0x90f JUMPDEST
0x910 PUSH1 0x6
0x912 SLOAD
0x913 PUSH1 0x0
0x915 SWAP1
0x916 DUP2
0x917 SWAP1
0x918 PUSH10 0xd3c21bcecceda0ffffff
0x923 NOT
0x924 ADD
0x925 DUP4
0x926 DUP2
0x927 LT
0x928 PUSH2 0x943
0x92b JUMPI
---
0x90f: JUMPDEST 
0x910: V757 = 0x6
0x912: V758 = S[0x6]
0x913: V759 = 0x0
0x918: V760 = 0xd3c21bcecceda0ffffff
0x923: V761 = NOT 0xd3c21bcecceda0ffffff
0x924: V762 = ADD 0xffffffffffffffffffffffffffffffffffffffffffff2c3de43133125f000000 V758
0x927: V763 = LT V762 S0
0x928: V764 = 0x943
0x92b: JUMPI 0x943 V763
---
Entry stack: [V12, 0x240, S8, {0x12a, 0x264}, S6, 0x0, S4, S3, S2, {0x404, 0x50f, 0x556}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, V762]
Exit stack: [V12, 0x240, S8, {0x12a, 0x264}, S6, 0x0, S4, S3, S2, {0x404, 0x50f, 0x556}, S0, 0x0, 0x0, V762]

================================

Block 0x92c
[0x92c:0x942]
---
Predecessors: [0x90f]
Successors: [0x901]
---
0x92c PUSH1 0x6
0x92e DUP1
0x92f SLOAD
0x930 DUP6
0x931 SWAP1
0x932 SUB
0x933 SWAP1
0x934 SSTORE
0x935 PUSH1 0x2
0x937 DUP5
0x938 MUL
0x939 SWAP3
0x93a POP
0x93b PUSH1 0x0
0x93d SWAP2
0x93e POP
0x93f PUSH2 0x901
0x942 JUMP
---
0x92c: V765 = 0x6
0x92f: V766 = S[0x6]
0x932: V767 = SUB V766 S3
0x934: S[0x6] = V767
0x935: V768 = 0x2
0x938: V769 = MUL S3 0x2
0x93b: V770 = 0x0
0x93f: V771 = 0x901
0x942: JUMP 0x901
---
Entry stack: [V12, 0x240, S11, {0x12a, 0x264}, S9, 0x0, S7, S6, S5, {0x404, 0x50f, 0x556}, S3, 0x0, 0x0, V762]
Stack pops: 4
Stack additions: [S3, V769, 0x0, S0]
Exit stack: [V12, 0x240, S11, {0x12a, 0x264}, S9, 0x0, S7, S6, S5, {0x404, 0x50f, 0x556}, S3, V769, 0x0, V762]

================================

Block 0x943
[0x943:0x95b]
---
Predecessors: [0x90f]
Successors: [0x901]
---
0x943 JUMPDEST
0x944 PUSH1 0x6
0x946 DUP1
0x947 SLOAD
0x948 DUP3
0x949 SWAP1
0x94a SUB
0x94b SWAP1
0x94c SSTORE
0x94d PUSH1 0x2
0x94f DUP2
0x950 MUL
0x951 SWAP3
0x952 POP
0x953 DUP1
0x954 DUP5
0x955 SUB
0x956 SWAP2
0x957 POP
0x958 PUSH2 0x901
0x95b JUMP
---
0x943: JUMPDEST 
0x944: V772 = 0x6
0x947: V773 = S[0x6]
0x94a: V774 = SUB V773 V762
0x94c: S[0x6] = V774
0x94d: V775 = 0x2
0x950: V776 = MUL V762 0x2
0x955: V777 = SUB S3 V762
0x958: V778 = 0x901
0x95b: JUMP 0x901
---
Entry stack: [V12, 0x240, S11, {0x12a, 0x264}, S9, 0x0, S7, S6, S5, {0x404, 0x50f, 0x556}, S3, 0x0, 0x0, V762]
Stack pops: 4
Stack additions: [S3, V776, V777, S0]
Exit stack: [V12, 0x240, S11, {0x12a, 0x264}, S9, 0x0, S7, S6, S5, {0x404, 0x50f, 0x556}, S3, V776, V777, V762]

================================

Block 0x95c
[0x95c:0x95c]
---
Predecessors: []
Successors: [0x95d]
---
0x95c JUMPDEST
---
0x95c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x95d
[0x95d:0x962]
---
Predecessors: [0x95c]
Successors: []
Has unresolved jump.
---
0x95d JUMPDEST
0x95e POP
0x95f SWAP2
0x960 POP
0x961 SWAP2
0x962 JUMP
---
0x95d: JUMPDEST 
0x962: JUMP S4
---
Entry stack: []
Stack pops: 5
Stack additions: [S2, S1]
Exit stack: [S2, S1]

================================

Block 0x963
[0x963:0x966]
---
Predecessors: [0x473]
Successors: [0x967]
---
0x963 JUMPDEST
0x964 PUSH1 0x4
0x966 SLOAD
---
0x963: JUMPDEST 
0x964: V779 = 0x4
0x966: V780 = S[0x4]
---
Entry stack: [V12, 0x264]
Stack pops: 0
Stack additions: [V780]
Exit stack: [V12, 0x264, V780]

================================

Block 0x967
[0x967:0x969]
---
Predecessors: [0x963]
Successors: [0x264]
---
0x967 JUMPDEST
0x968 SWAP1
0x969 JUMP
---
0x967: JUMPDEST 
0x969: JUMP 0x264
---
Entry stack: [V12, 0x264, V780]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V780]

================================

Block 0x96a
[0x96a:0x97d]
---
Predecessors: [0x495]
Successors: [0x97e, 0x991]
---
0x96a JUMPDEST
0x96b PUSH1 0x9
0x96d SLOAD
0x96e PUSH3 0x24ea00
0x972 ADD
0x973 TIMESTAMP
0x974 DUP2
0x975 SWAP1
0x976 LT
0x977 DUP1
0x978 ISZERO
0x979 SWAP1
0x97a PUSH2 0x991
0x97d JUMPI
---
0x96a: JUMPDEST 
0x96b: V781 = 0x9
0x96d: V782 = S[0x9]
0x96e: V783 = 0x24ea00
0x972: V784 = ADD 0x24ea00 V782
0x973: V785 = TIMESTAMP
0x976: V786 = LT V785 V784
0x978: V787 = ISZERO V786
0x97a: V788 = 0x991
0x97d: JUMPI 0x991 V786
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: [V784, V787]
Exit stack: [V12, 0x240, V784, V787]

================================

Block 0x97e
[0x97e:0x990]
---
Predecessors: [0x96a]
Successors: [0x991]
---
0x97e POP
0x97f PUSH1 0x3
0x981 SLOAD
0x982 CALLER
0x983 PUSH1 0x1
0x985 PUSH1 0xa0
0x987 PUSH1 0x2
0x989 EXP
0x98a SUB
0x98b SWAP1
0x98c DUP2
0x98d AND
0x98e SWAP2
0x98f AND
0x990 EQ
---
0x97f: V789 = 0x3
0x981: V790 = S[0x3]
0x982: V791 = CALLER
0x983: V792 = 0x1
0x985: V793 = 0xa0
0x987: V794 = 0x2
0x989: V795 = EXP 0x2 0xa0
0x98a: V796 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98d: V797 = AND 0xffffffffffffffffffffffffffffffffffffffff V791
0x98f: V798 = AND V790 0xffffffffffffffffffffffffffffffffffffffff
0x990: V799 = EQ V798 V797
---
Entry stack: [V12, 0x240, V784, V787]
Stack pops: 1
Stack additions: [V799]
Exit stack: [V12, 0x240, V784, V799]

================================

Block 0x991
[0x991:0x996]
---
Predecessors: [0x96a, 0x97e]
Successors: [0x23c, 0x997]
---
0x991 JUMPDEST
0x992 ISZERO
0x993 PUSH2 0x23c
0x996 JUMPI
---
0x991: JUMPDEST 
0x992: V800 = ISZERO S0
0x993: V801 = 0x23c
0x996: JUMPI 0x23c V800
---
Entry stack: [V12, 0x240, V784, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x240, V784]

================================

Block 0x997
[0x997:0x9c7]
---
Predecessors: [0x991]
Successors: [0x23c, 0x9c8]
---
0x997 PUSH1 0x3
0x999 SLOAD
0x99a PUSH1 0x7
0x99c SLOAD
0x99d PUSH1 0x40
0x99f MLOAD
0x9a0 PUSH1 0x1
0x9a2 PUSH1 0xa0
0x9a4 PUSH1 0x2
0x9a6 EXP
0x9a7 SUB
0x9a8 SWAP1
0x9a9 SWAP3
0x9aa AND
0x9ab SWAP2
0x9ac DUP2
0x9ad ISZERO
0x9ae PUSH2 0x8fc
0x9b1 MUL
0x9b2 SWAP2
0x9b3 SWAP1
0x9b4 PUSH1 0x0
0x9b6 DUP2
0x9b7 DUP2
0x9b8 DUP2
0x9b9 DUP6
0x9ba DUP9
0x9bb DUP9
0x9bc CALL
0x9bd SWAP4
0x9be POP
0x9bf POP
0x9c0 POP
0x9c1 POP
0x9c2 ISZERO
0x9c3 ISZERO
0x9c4 PUSH2 0x23c
0x9c7 JUMPI
---
0x997: V802 = 0x3
0x999: V803 = S[0x3]
0x99a: V804 = 0x7
0x99c: V805 = S[0x7]
0x99d: V806 = 0x40
0x99f: V807 = M[0x40]
0x9a0: V808 = 0x1
0x9a2: V809 = 0xa0
0x9a4: V810 = 0x2
0x9a6: V811 = EXP 0x2 0xa0
0x9a7: V812 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9aa: V813 = AND V803 0xffffffffffffffffffffffffffffffffffffffff
0x9ad: V814 = ISZERO V805
0x9ae: V815 = 0x8fc
0x9b1: V816 = MUL 0x8fc V814
0x9b4: V817 = 0x0
0x9bc: V818 = CALL V816 V813 V805 V807 0x0 V807 0x0
0x9c2: V819 = ISZERO V818
0x9c3: V820 = ISZERO V819
0x9c4: V821 = 0x23c
0x9c7: JUMPI 0x23c V820
---
Entry stack: [V12, 0x240, V784]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, V784]

================================

Block 0x9c8
[0x9c8:0x9c8]
---
Predecessors: [0x997]
Successors: []
---
0x9c8 INVALID
---
0x9c8: INVALID 
---
Entry stack: [V12, 0x240, V784]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, V784]

================================

Block 0x9c9
[0x9c9:0x9c9]
---
Predecessors: []
Successors: [0x9ca]
---
0x9c9 JUMPDEST
---
0x9c9: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9ca
[0x9ca:0x9ca]
---
Predecessors: [0x9c9]
Successors: [0x9cb]
---
0x9ca JUMPDEST
---
0x9ca: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9cb
[0x9cb:0x9cd]
---
Predecessors: [0x9ca]
Successors: []
Has unresolved jump.
---
0x9cb JUMPDEST
0x9cc POP
0x9cd JUMP
---
0x9cb: JUMPDEST 
0x9cd: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x9ce
[0x9ce:0x9e4]
---
Predecessors: [0x4a7]
Successors: [0x9e5, 0x9ea]
---
0x9ce JUMPDEST
0x9cf PUSH1 0x0
0x9d1 SLOAD
0x9d2 CALLER
0x9d3 PUSH1 0x1
0x9d5 PUSH1 0xa0
0x9d7 PUSH1 0x2
0x9d9 EXP
0x9da SUB
0x9db SWAP1
0x9dc DUP2
0x9dd AND
0x9de SWAP2
0x9df AND
0x9e0 EQ
0x9e1 PUSH2 0x9ea
0x9e4 JUMPI
---
0x9ce: JUMPDEST 
0x9cf: V822 = 0x0
0x9d1: V823 = S[0x0]
0x9d2: V824 = CALLER
0x9d3: V825 = 0x1
0x9d5: V826 = 0xa0
0x9d7: V827 = 0x2
0x9d9: V828 = EXP 0x2 0xa0
0x9da: V829 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9dd: V830 = AND 0xffffffffffffffffffffffffffffffffffffffff V824
0x9df: V831 = AND V823 0xffffffffffffffffffffffffffffffffffffffff
0x9e0: V832 = EQ V831 V830
0x9e1: V833 = 0x9ea
0x9e4: JUMPI 0x9ea V832
---
Entry stack: [V12, 0x240, V396]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, V396]

================================

Block 0x9e5
[0x9e5:0x9e9]
---
Predecessors: [0x9ce]
Successors: []
---
0x9e5 PUSH1 0x0
0x9e7 PUSH1 0x0
0x9e9 REVERT
---
0x9e5: V834 = 0x0
0x9e7: V835 = 0x0
0x9e9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x240, V396]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, V396]

================================

Block 0x9ea
[0x9ea:0xa05]
---
Predecessors: [0x9ce]
Successors: [0xa06]
---
0x9ea JUMPDEST
0x9eb PUSH1 0x0
0x9ed DUP1
0x9ee SLOAD
0x9ef PUSH1 0x1
0x9f1 PUSH1 0xa0
0x9f3 PUSH1 0x2
0x9f5 EXP
0x9f6 SUB
0x9f7 NOT
0x9f8 AND
0x9f9 PUSH1 0x1
0x9fb PUSH1 0xa0
0x9fd PUSH1 0x2
0x9ff EXP
0xa00 SUB
0xa01 DUP4
0xa02 AND
0xa03 OR
0xa04 SWAP1
0xa05 SSTORE
---
0x9ea: JUMPDEST 
0x9eb: V836 = 0x0
0x9ee: V837 = S[0x0]
0x9ef: V838 = 0x1
0x9f1: V839 = 0xa0
0x9f3: V840 = 0x2
0x9f5: V841 = EXP 0x2 0xa0
0x9f6: V842 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f7: V843 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9f8: V844 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V837
0x9f9: V845 = 0x1
0x9fb: V846 = 0xa0
0x9fd: V847 = 0x2
0x9ff: V848 = EXP 0x2 0xa0
0xa00: V849 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa02: V850 = AND V396 0xffffffffffffffffffffffffffffffffffffffff
0xa03: V851 = OR V850 V844
0xa05: S[0x0] = V851
---
Entry stack: [V12, 0x240, V396]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x240, V396]

================================

Block 0xa06
[0xa06:0xa06]
---
Predecessors: [0x9ea]
Successors: [0xa07]
---
0xa06 JUMPDEST
---
0xa06: JUMPDEST 
---
Entry stack: [V12, 0x240, V396]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, V396]

================================

Block 0xa07
[0xa07:0xa09]
---
Predecessors: [0xa06]
Successors: [0x240]
---
0xa07 JUMPDEST
0xa08 POP
0xa09 JUMP
---
0xa07: JUMPDEST 
0xa09: JUMP 0x240
---
Entry stack: [V12, 0x240, V396]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xa0a
[0xa0a:0xa13]
---
Predecessors: [0x4c5]
Successors: [0x7e9, 0xa14]
---
0xa0a JUMPDEST
0xa0b PUSH1 0x9
0xa0d SLOAD
0xa0e TIMESTAMP
0xa0f LT
0xa10 PUSH2 0x7e9
0xa13 JUMPI
---
0xa0a: JUMPDEST 
0xa0b: V852 = 0x9
0xa0d: V853 = S[0x9]
0xa0e: V854 = TIMESTAMP
0xa0f: V855 = LT V854 V853
0xa10: V856 = 0x7e9
0xa13: JUMPI 0x7e9 V855
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xa14
[0xa14:0xa23]
---
Predecessors: [0xa0a]
Successors: [0xa24, 0xc3b]
---
0xa14 PUSH1 0x8
0xa16 SLOAD
0xa17 PUSH2 0x100
0xa1a SWAP1
0xa1b DIV
0xa1c PUSH1 0xff
0xa1e AND
0xa1f ISZERO
0xa20 PUSH2 0xc3b
0xa23 JUMPI
---
0xa14: V857 = 0x8
0xa16: V858 = S[0x8]
0xa17: V859 = 0x100
0xa1b: V860 = DIV V858 0x100
0xa1c: V861 = 0xff
0xa1e: V862 = AND 0xff V860
0xa1f: V863 = ISZERO V862
0xa20: V864 = 0xc3b
0xa23: JUMPI 0xc3b V863
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xa24
[0xa24:0xa45]
---
Predecessors: [0xa14]
Successors: [0xa46, 0xc3b]
---
0xa24 PUSH1 0x1
0xa26 PUSH1 0xa0
0xa28 PUSH1 0x2
0xa2a EXP
0xa2b SUB
0xa2c CALLER
0xa2d AND
0xa2e PUSH1 0x0
0xa30 SWAP1
0xa31 DUP2
0xa32 MSTORE
0xa33 PUSH1 0x2
0xa35 PUSH1 0x20
0xa37 DUP2
0xa38 SWAP1
0xa39 MSTORE
0xa3a PUSH1 0x40
0xa3c DUP3
0xa3d SHA3
0xa3e ADD
0xa3f SLOAD
0xa40 GT
0xa41 ISZERO
0xa42 PUSH2 0xc3b
0xa45 JUMPI
---
0xa24: V865 = 0x1
0xa26: V866 = 0xa0
0xa28: V867 = 0x2
0xa2a: V868 = EXP 0x2 0xa0
0xa2b: V869 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2c: V870 = CALLER
0xa2d: V871 = AND V870 0xffffffffffffffffffffffffffffffffffffffff
0xa2e: V872 = 0x0
0xa32: M[0x0] = V871
0xa33: V873 = 0x2
0xa35: V874 = 0x20
0xa39: M[0x20] = 0x2
0xa3a: V875 = 0x40
0xa3d: V876 = SHA3 0x0 0x40
0xa3e: V877 = ADD V876 0x2
0xa3f: V878 = S[V877]
0xa40: V879 = GT V878 0x0
0xa41: V880 = ISZERO V879
0xa42: V881 = 0xc3b
0xa45: JUMPI 0xc3b V880
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xa46
[0xa46:0xac0]
---
Predecessors: [0xa24]
Successors: [0xac1, 0xac2]
---
0xa46 PUSH1 0xa
0xa48 SLOAD
0xa49 PUSH1 0xb
0xa4b SLOAD
0xa4c PUSH1 0x1
0xa4e PUSH1 0xa0
0xa50 PUSH1 0x2
0xa52 EXP
0xa53 SUB
0xa54 CALLER
0xa55 DUP2
0xa56 AND
0xa57 PUSH1 0x0
0xa59 DUP2
0xa5a DUP2
0xa5b MSTORE
0xa5c PUSH1 0x2
0xa5e PUSH1 0x20
0xa60 DUP2
0xa61 DUP2
0xa62 MSTORE
0xa63 PUSH1 0x40
0xa65 DUP1
0xa66 DUP5
0xa67 SHA3
0xa68 SWAP1
0xa69 SWAP3
0xa6a ADD
0xa6b SLOAD
0xa6c DUP3
0xa6d MLOAD
0xa6e DUP3
0xa6f ADD
0xa70 DUP5
0xa71 SWAP1
0xa72 MSTORE
0xa73 DUP3
0xa74 MLOAD
0xa75 PUSH1 0xe0
0xa77 PUSH1 0x2
0xa79 EXP
0xa7a PUSH4 0x799ad8d
0xa7f MUL
0xa80 DUP2
0xa81 MSTORE
0xa82 PUSH1 0x4
0xa84 DUP2
0xa85 ADD
0xa86 SWAP6
0xa87 SWAP1
0xa88 SWAP6
0xa89 MSTORE
0xa8a SWAP6
0xa8b DUP6
0xa8c AND
0xa8d PUSH1 0x24
0xa8f DUP6
0xa90 ADD
0xa91 MSTORE
0xa92 PUSH1 0x44
0xa94 DUP5
0xa95 ADD
0xa96 SWAP6
0xa97 SWAP1
0xa98 SWAP6
0xa99 MSTORE
0xa9a MLOAD
0xa9b SWAP3
0xa9c SWAP1
0xa9d SWAP5
0xa9e AND
0xa9f SWAP4
0xaa0 PUSH4 0x799ad8d
0xaa5 SWAP4
0xaa6 PUSH1 0x64
0xaa8 DUP1
0xaa9 DUP5
0xaaa ADD
0xaab SWAP5
0xaac SWAP2
0xaad SWAP4
0xaae SWAP2
0xaaf SWAP3
0xab0 SWAP2
0xab1 DUP4
0xab2 SWAP1
0xab3 SUB
0xab4 ADD
0xab5 SWAP1
0xab6 DUP3
0xab7 SWAP1
0xab8 DUP8
0xab9 DUP1
0xaba EXTCODESIZE
0xabb ISZERO
0xabc ISZERO
0xabd PUSH2 0xac2
0xac0 JUMPI
---
0xa46: V882 = 0xa
0xa48: V883 = S[0xa]
0xa49: V884 = 0xb
0xa4b: V885 = S[0xb]
0xa4c: V886 = 0x1
0xa4e: V887 = 0xa0
0xa50: V888 = 0x2
0xa52: V889 = EXP 0x2 0xa0
0xa53: V890 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa54: V891 = CALLER
0xa56: V892 = AND 0xffffffffffffffffffffffffffffffffffffffff V891
0xa57: V893 = 0x0
0xa5b: M[0x0] = V892
0xa5c: V894 = 0x2
0xa5e: V895 = 0x20
0xa62: M[0x20] = 0x2
0xa63: V896 = 0x40
0xa67: V897 = SHA3 0x0 0x40
0xa6a: V898 = ADD 0x2 V897
0xa6b: V899 = S[V898]
0xa6d: V900 = M[0x40]
0xa6f: V901 = ADD 0x20 V900
0xa72: M[V901] = 0x0
0xa74: V902 = M[0x40]
0xa75: V903 = 0xe0
0xa77: V904 = 0x2
0xa79: V905 = EXP 0x2 0xe0
0xa7a: V906 = 0x799ad8d
0xa7f: V907 = MUL 0x799ad8d 0x100000000000000000000000000000000000000000000000000000000
0xa81: M[V902] = 0x799ad8d00000000000000000000000000000000000000000000000000000000
0xa82: V908 = 0x4
0xa85: V909 = ADD V902 0x4
0xa89: M[V909] = V892
0xa8c: V910 = AND 0xffffffffffffffffffffffffffffffffffffffff V885
0xa8d: V911 = 0x24
0xa90: V912 = ADD V902 0x24
0xa91: M[V912] = V910
0xa92: V913 = 0x44
0xa95: V914 = ADD V902 0x44
0xa99: M[V914] = V899
0xa9a: V915 = M[0x40]
0xa9e: V916 = AND V883 0xffffffffffffffffffffffffffffffffffffffff
0xaa0: V917 = 0x799ad8d
0xaa6: V918 = 0x64
0xaaa: V919 = ADD V902 0x64
0xab3: V920 = SUB V902 V915
0xab4: V921 = ADD V920 0x64
0xaba: V922 = EXTCODESIZE V916
0xabb: V923 = ISZERO V922
0xabc: V924 = ISZERO V923
0xabd: V925 = 0xac2
0xac0: JUMPI 0xac2 V924
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: [V916, 0x799ad8d, V919, 0x20, V915, V921, V915, 0x0, V916]
Exit stack: [V12, 0x240, V916, 0x799ad8d, V919, 0x20, V915, V921, V915, 0x0, V916]

================================

Block 0xac1
[0xac1:0xac1]
---
Predecessors: [0xa46]
Successors: []
---
0xac1 INVALID
---
0xac1: INVALID 
---
Entry stack: [V12, 0x240, V916, 0x799ad8d, V919, 0x20, V915, V921, V915, 0x0, V916]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, V916, 0x799ad8d, V919, 0x20, V915, V921, V915, 0x0, V916]

================================

Block 0xac2
[0xac2:0xacd]
---
Predecessors: [0xa46]
Successors: [0xace, 0xacf]
---
0xac2 JUMPDEST
0xac3 PUSH1 0x32
0xac5 GAS
0xac6 SUB
0xac7 CALL
0xac8 ISZERO
0xac9 ISZERO
0xaca PUSH2 0xacf
0xacd JUMPI
---
0xac2: JUMPDEST 
0xac3: V926 = 0x32
0xac5: V927 = GAS
0xac6: V928 = SUB V927 0x32
0xac7: V929 = CALL V928 V916 0x0 V915 V921 V915 0x20
0xac8: V930 = ISZERO V929
0xac9: V931 = ISZERO V930
0xaca: V932 = 0xacf
0xacd: JUMPI 0xacf V931
---
Entry stack: [V12, 0x240, V916, 0x799ad8d, V919, 0x20, V915, V921, V915, 0x0, V916]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x240, V916, 0x799ad8d, V919]

================================

Block 0xace
[0xace:0xace]
---
Predecessors: [0xac2]
Successors: []
---
0xace INVALID
---
0xace: INVALID 
---
Entry stack: [V12, 0x240, V916, 0x799ad8d, V919]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, V916, 0x799ad8d, V919]

================================

Block 0xacf
[0xacf:0xadc]
---
Predecessors: [0xac2]
Successors: [0xadd, 0xae1]
---
0xacf JUMPDEST
0xad0 POP
0xad1 POP
0xad2 PUSH1 0x40
0xad4 MLOAD
0xad5 MLOAD
0xad6 ISZERO
0xad7 SWAP1
0xad8 POP
0xad9 PUSH2 0xae1
0xadc JUMPI
---
0xacf: JUMPDEST 
0xad2: V933 = 0x40
0xad4: V934 = M[0x40]
0xad5: V935 = M[V934]
0xad6: V936 = ISZERO V935
0xad9: V937 = 0xae1
0xadc: JUMPI 0xae1 V936
---
Entry stack: [V12, 0x240, V916, 0x799ad8d, V919]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xadd
[0xadd:0xae0]
---
Predecessors: [0xacf]
Successors: [0x7e9]
---
0xadd PUSH2 0x7e9
0xae0 JUMP
---
0xadd: V938 = 0x7e9
0xae0: JUMP 0x7e9
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xae1
[0xae1:0xb15]
---
Predecessors: [0xacf]
Successors: [0xb16, 0xbb0]
---
0xae1 JUMPDEST
0xae2 PUSH1 0x1
0xae4 PUSH1 0xa0
0xae6 PUSH1 0x2
0xae8 EXP
0xae9 SUB
0xaea CALLER
0xaeb AND
0xaec PUSH1 0x0
0xaee DUP2
0xaef DUP2
0xaf0 MSTORE
0xaf1 PUSH1 0x2
0xaf3 PUSH1 0x20
0xaf5 MSTORE
0xaf6 PUSH1 0x40
0xaf8 DUP1
0xaf9 DUP3
0xafa SHA3
0xafb SLOAD
0xafc SWAP1
0xafd MLOAD
0xafe DUP2
0xaff ISZERO
0xb00 PUSH2 0x8fc
0xb03 MUL
0xb04 SWAP3
0xb05 DUP2
0xb06 DUP2
0xb07 DUP2
0xb08 DUP6
0xb09 DUP9
0xb0a DUP9
0xb0b CALL
0xb0c SWAP4
0xb0d POP
0xb0e POP
0xb0f POP
0xb10 POP
0xb11 ISZERO
0xb12 PUSH2 0xbb0
0xb15 JUMPI
---
0xae1: JUMPDEST 
0xae2: V939 = 0x1
0xae4: V940 = 0xa0
0xae6: V941 = 0x2
0xae8: V942 = EXP 0x2 0xa0
0xae9: V943 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaea: V944 = CALLER
0xaeb: V945 = AND V944 0xffffffffffffffffffffffffffffffffffffffff
0xaec: V946 = 0x0
0xaf0: M[0x0] = V945
0xaf1: V947 = 0x2
0xaf3: V948 = 0x20
0xaf5: M[0x20] = 0x2
0xaf6: V949 = 0x40
0xafa: V950 = SHA3 0x0 0x40
0xafb: V951 = S[V950]
0xafd: V952 = M[0x40]
0xaff: V953 = ISZERO V951
0xb00: V954 = 0x8fc
0xb03: V955 = MUL 0x8fc V953
0xb0b: V956 = CALL V955 V945 V951 V952 0x0 V952 0x0
0xb11: V957 = ISZERO V956
0xb12: V958 = 0xbb0
0xb15: JUMPI 0xbb0 V957
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xb16
[0xb16:0xbaf]
---
Predecessors: [0xae1]
Successors: [0xc3b]
---
0xb16 PUSH1 0x1
0xb18 PUSH1 0xa0
0xb1a PUSH1 0x2
0xb1c EXP
0xb1d SUB
0xb1e CALLER
0xb1f AND
0xb20 PUSH1 0x0
0xb22 DUP2
0xb23 DUP2
0xb24 MSTORE
0xb25 PUSH1 0x2
0xb27 PUSH1 0x20
0xb29 SWAP1
0xb2a DUP2
0xb2b MSTORE
0xb2c PUSH1 0x40
0xb2e DUP1
0xb2f DUP4
0xb30 SHA3
0xb31 SLOAD
0xb32 DUP2
0xb33 MLOAD
0xb34 SWAP5
0xb35 DUP6
0xb36 MSTORE
0xb37 SWAP2
0xb38 DUP5
0xb39 ADD
0xb3a SWAP2
0xb3b SWAP1
0xb3c SWAP2
0xb3d MSTORE
0xb3e DUP3
0xb3f DUP2
0xb40 ADD
0xb41 SWAP2
0xb42 SWAP1
0xb43 SWAP2
0xb44 MSTORE
0xb45 MLOAD
0xb46 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0xb67 SWAP2
0xb68 DUP2
0xb69 SWAP1
0xb6a SUB
0xb6b PUSH1 0x60
0xb6d ADD
0xb6e SWAP1
0xb6f LOG1
0xb70 PUSH1 0x1
0xb72 PUSH1 0xa0
0xb74 PUSH1 0x2
0xb76 EXP
0xb77 SUB
0xb78 CALLER
0xb79 AND
0xb7a PUSH1 0x0
0xb7c SWAP1
0xb7d DUP2
0xb7e MSTORE
0xb7f PUSH1 0x2
0xb81 PUSH1 0x20
0xb83 DUP2
0xb84 SWAP1
0xb85 MSTORE
0xb86 PUSH1 0x40
0xb88 DUP3
0xb89 SHA3
0xb8a DUP3
0xb8b DUP2
0xb8c SSTORE
0xb8d PUSH1 0x1
0xb8f DUP2
0xb90 ADD
0xb91 DUP4
0xb92 SWAP1
0xb93 SSTORE
0xb94 SWAP1
0xb95 DUP2
0xb96 ADD
0xb97 SWAP2
0xb98 SWAP1
0xb99 SWAP2
0xb9a SSTORE
0xb9b PUSH1 0x3
0xb9d ADD
0xb9e DUP1
0xb9f SLOAD
0xba0 PUSH1 0x1
0xba2 PUSH1 0xa0
0xba4 PUSH1 0x2
0xba6 EXP
0xba7 SUB
0xba8 NOT
0xba9 AND
0xbaa SWAP1
0xbab SSTORE
0xbac PUSH2 0xc3b
0xbaf JUMP
---
0xb16: V959 = 0x1
0xb18: V960 = 0xa0
0xb1a: V961 = 0x2
0xb1c: V962 = EXP 0x2 0xa0
0xb1d: V963 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1e: V964 = CALLER
0xb1f: V965 = AND V964 0xffffffffffffffffffffffffffffffffffffffff
0xb20: V966 = 0x0
0xb24: M[0x0] = V965
0xb25: V967 = 0x2
0xb27: V968 = 0x20
0xb2b: M[0x20] = 0x2
0xb2c: V969 = 0x40
0xb30: V970 = SHA3 0x0 0x40
0xb31: V971 = S[V970]
0xb33: V972 = M[0x40]
0xb36: M[V972] = V965
0xb39: V973 = ADD V972 0x20
0xb3d: M[V973] = V971
0xb40: V974 = ADD 0x40 V972
0xb44: M[V974] = 0x0
0xb45: V975 = M[0x40]
0xb46: V976 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0xb6a: V977 = SUB V972 V975
0xb6b: V978 = 0x60
0xb6d: V979 = ADD 0x60 V977
0xb6f: LOG V975 V979 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0xb70: V980 = 0x1
0xb72: V981 = 0xa0
0xb74: V982 = 0x2
0xb76: V983 = EXP 0x2 0xa0
0xb77: V984 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb78: V985 = CALLER
0xb79: V986 = AND V985 0xffffffffffffffffffffffffffffffffffffffff
0xb7a: V987 = 0x0
0xb7e: M[0x0] = V986
0xb7f: V988 = 0x2
0xb81: V989 = 0x20
0xb85: M[0x20] = 0x2
0xb86: V990 = 0x40
0xb89: V991 = SHA3 0x0 0x40
0xb8c: S[V991] = 0x0
0xb8d: V992 = 0x1
0xb90: V993 = ADD V991 0x1
0xb93: S[V993] = 0x0
0xb96: V994 = ADD V991 0x2
0xb9a: S[V994] = 0x0
0xb9b: V995 = 0x3
0xb9d: V996 = ADD 0x3 V991
0xb9f: V997 = S[V996]
0xba0: V998 = 0x1
0xba2: V999 = 0xa0
0xba4: V1000 = 0x2
0xba6: V1001 = EXP 0x2 0xa0
0xba7: V1002 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba8: V1003 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xba9: V1004 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V997
0xbab: S[V996] = V1004
0xbac: V1005 = 0xc3b
0xbaf: JUMP 0xc3b
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xbb0
[0xbb0:0xc28]
---
Predecessors: [0xae1]
Successors: [0xc29, 0xc2a]
---
0xbb0 JUMPDEST
0xbb1 PUSH1 0xa
0xbb3 SLOAD
0xbb4 PUSH1 0xb
0xbb6 SLOAD
0xbb7 PUSH1 0x1
0xbb9 PUSH1 0xa0
0xbbb PUSH1 0x2
0xbbd EXP
0xbbe SUB
0xbbf CALLER
0xbc0 DUP2
0xbc1 AND
0xbc2 PUSH1 0x0
0xbc4 DUP2
0xbc5 DUP2
0xbc6 MSTORE
0xbc7 PUSH1 0x2
0xbc9 PUSH1 0x20
0xbcb DUP2
0xbcc DUP2
0xbcd MSTORE
0xbce PUSH1 0x40
0xbd0 DUP1
0xbd1 DUP5
0xbd2 SHA3
0xbd3 SWAP1
0xbd4 SWAP3
0xbd5 ADD
0xbd6 SLOAD
0xbd7 DUP3
0xbd8 MLOAD
0xbd9 DUP3
0xbda ADD
0xbdb DUP5
0xbdc SWAP1
0xbdd MSTORE
0xbde DUP3
0xbdf MLOAD
0xbe0 PUSH1 0xe0
0xbe2 PUSH1 0x2
0xbe4 EXP
0xbe5 PUSH4 0x799ad8d
0xbea MUL
0xbeb DUP2
0xbec MSTORE
0xbed SWAP7
0xbee DUP7
0xbef AND
0xbf0 PUSH1 0x4
0xbf2 DUP9
0xbf3 ADD
0xbf4 MSTORE
0xbf5 PUSH1 0x24
0xbf7 DUP8
0xbf8 ADD
0xbf9 SWAP5
0xbfa SWAP1
0xbfb SWAP5
0xbfc MSTORE
0xbfd PUSH1 0x44
0xbff DUP7
0xc00 ADD
0xc01 SWAP4
0xc02 SWAP1
0xc03 SWAP4
0xc04 MSTORE
0xc05 MLOAD
0xc06 SWAP3
0xc07 SWAP1
0xc08 SWAP5
0xc09 AND
0xc0a SWAP4
0xc0b PUSH4 0x799ad8d
0xc10 SWAP4
0xc11 PUSH1 0x64
0xc13 DUP1
0xc14 DUP3
0xc15 ADD
0xc16 SWAP5
0xc17 SWAP3
0xc18 SWAP2
0xc19 DUP4
0xc1a SWAP1
0xc1b SUB
0xc1c ADD
0xc1d SWAP1
0xc1e DUP3
0xc1f SWAP1
0xc20 DUP8
0xc21 DUP1
0xc22 EXTCODESIZE
0xc23 ISZERO
0xc24 ISZERO
0xc25 PUSH2 0xc2a
0xc28 JUMPI
---
0xbb0: JUMPDEST 
0xbb1: V1006 = 0xa
0xbb3: V1007 = S[0xa]
0xbb4: V1008 = 0xb
0xbb6: V1009 = S[0xb]
0xbb7: V1010 = 0x1
0xbb9: V1011 = 0xa0
0xbbb: V1012 = 0x2
0xbbd: V1013 = EXP 0x2 0xa0
0xbbe: V1014 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbbf: V1015 = CALLER
0xbc1: V1016 = AND 0xffffffffffffffffffffffffffffffffffffffff V1015
0xbc2: V1017 = 0x0
0xbc6: M[0x0] = V1016
0xbc7: V1018 = 0x2
0xbc9: V1019 = 0x20
0xbcd: M[0x20] = 0x2
0xbce: V1020 = 0x40
0xbd2: V1021 = SHA3 0x0 0x40
0xbd5: V1022 = ADD 0x2 V1021
0xbd6: V1023 = S[V1022]
0xbd8: V1024 = M[0x40]
0xbda: V1025 = ADD 0x20 V1024
0xbdd: M[V1025] = 0x0
0xbdf: V1026 = M[0x40]
0xbe0: V1027 = 0xe0
0xbe2: V1028 = 0x2
0xbe4: V1029 = EXP 0x2 0xe0
0xbe5: V1030 = 0x799ad8d
0xbea: V1031 = MUL 0x799ad8d 0x100000000000000000000000000000000000000000000000000000000
0xbec: M[V1026] = 0x799ad8d00000000000000000000000000000000000000000000000000000000
0xbef: V1032 = AND 0xffffffffffffffffffffffffffffffffffffffff V1009
0xbf0: V1033 = 0x4
0xbf3: V1034 = ADD V1026 0x4
0xbf4: M[V1034] = V1032
0xbf5: V1035 = 0x24
0xbf8: V1036 = ADD V1026 0x24
0xbfc: M[V1036] = V1016
0xbfd: V1037 = 0x44
0xc00: V1038 = ADD V1026 0x44
0xc04: M[V1038] = V1023
0xc05: V1039 = M[0x40]
0xc09: V1040 = AND V1007 0xffffffffffffffffffffffffffffffffffffffff
0xc0b: V1041 = 0x799ad8d
0xc11: V1042 = 0x64
0xc15: V1043 = ADD V1026 0x64
0xc1b: V1044 = SUB V1026 V1039
0xc1c: V1045 = ADD V1044 0x64
0xc22: V1046 = EXTCODESIZE V1040
0xc23: V1047 = ISZERO V1046
0xc24: V1048 = ISZERO V1047
0xc25: V1049 = 0xc2a
0xc28: JUMPI 0xc2a V1048
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: [V1040, 0x799ad8d, V1043, 0x20, V1039, V1045, V1039, 0x0, V1040]
Exit stack: [V12, 0x240, V1040, 0x799ad8d, V1043, 0x20, V1039, V1045, V1039, 0x0, V1040]

================================

Block 0xc29
[0xc29:0xc29]
---
Predecessors: [0xbb0]
Successors: []
---
0xc29 INVALID
---
0xc29: INVALID 
---
Entry stack: [V12, 0x240, V1040, 0x799ad8d, V1043, 0x20, V1039, V1045, V1039, 0x0, V1040]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, V1040, 0x799ad8d, V1043, 0x20, V1039, V1045, V1039, 0x0, V1040]

================================

Block 0xc2a
[0xc2a:0xc35]
---
Predecessors: [0xbb0]
Successors: [0xc36, 0xc37]
---
0xc2a JUMPDEST
0xc2b PUSH1 0x32
0xc2d GAS
0xc2e SUB
0xc2f CALL
0xc30 ISZERO
0xc31 ISZERO
0xc32 PUSH2 0xc37
0xc35 JUMPI
---
0xc2a: JUMPDEST 
0xc2b: V1050 = 0x32
0xc2d: V1051 = GAS
0xc2e: V1052 = SUB V1051 0x32
0xc2f: V1053 = CALL V1052 V1040 0x0 V1039 V1045 V1039 0x20
0xc30: V1054 = ISZERO V1053
0xc31: V1055 = ISZERO V1054
0xc32: V1056 = 0xc37
0xc35: JUMPI 0xc37 V1055
---
Entry stack: [V12, 0x240, V1040, 0x799ad8d, V1043, 0x20, V1039, V1045, V1039, 0x0, V1040]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x240, V1040, 0x799ad8d, V1043]

================================

Block 0xc36
[0xc36:0xc36]
---
Predecessors: [0xc2a]
Successors: []
---
0xc36 INVALID
---
0xc36: INVALID 
---
Entry stack: [V12, 0x240, V1040, 0x799ad8d, V1043]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240, V1040, 0x799ad8d, V1043]

================================

Block 0xc37
[0xc37:0xc3a]
---
Predecessors: [0xc2a]
Successors: [0xc3b]
---
0xc37 JUMPDEST
0xc38 POP
0xc39 POP
0xc3a POP
---
0xc37: JUMPDEST 
---
Entry stack: [V12, 0x240, V1040, 0x799ad8d, V1043]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xc3b
[0xc3b:0xc3b]
---
Predecessors: [0xa14, 0xa24, 0xb16, 0xc37]
Successors: [0xc3c]
---
0xc3b JUMPDEST
---
0xc3b: JUMPDEST 
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xc3c
[0xc3c:0xc3c]
---
Predecessors: [0xc3b]
Successors: [0xc3d]
---
0xc3c JUMPDEST
---
0xc3c: JUMPDEST 
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xc3d
[0xc3d:0xc4f]
---
Predecessors: [0xc3c]
Successors: [0xc50, 0xc63]
---
0xc3d JUMPDEST
0xc3e PUSH1 0x8
0xc40 SLOAD
0xc41 PUSH2 0x100
0xc44 SWAP1
0xc45 DIV
0xc46 PUSH1 0xff
0xc48 AND
0xc49 ISZERO
0xc4a DUP1
0xc4b ISZERO
0xc4c PUSH2 0xc63
0xc4f JUMPI
---
0xc3d: JUMPDEST 
0xc3e: V1057 = 0x8
0xc40: V1058 = S[0x8]
0xc41: V1059 = 0x100
0xc45: V1060 = DIV V1058 0x100
0xc46: V1061 = 0xff
0xc48: V1062 = AND 0xff V1060
0xc49: V1063 = ISZERO V1062
0xc4b: V1064 = ISZERO V1063
0xc4c: V1065 = 0xc63
0xc4f: JUMPI 0xc63 V1064
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: [V1063]
Exit stack: [V12, 0x240, V1063]

================================

Block 0xc50
[0xc50:0xc62]
---
Predecessors: [0xc3d]
Successors: [0xc63]
---
0xc50 POP
0xc51 PUSH1 0x3
0xc53 SLOAD
0xc54 CALLER
0xc55 PUSH1 0x1
0xc57 PUSH1 0xa0
0xc59 PUSH1 0x2
0xc5b EXP
0xc5c SUB
0xc5d SWAP1
0xc5e DUP2
0xc5f AND
0xc60 SWAP2
0xc61 AND
0xc62 EQ
---
0xc51: V1066 = 0x3
0xc53: V1067 = S[0x3]
0xc54: V1068 = CALLER
0xc55: V1069 = 0x1
0xc57: V1070 = 0xa0
0xc59: V1071 = 0x2
0xc5b: V1072 = EXP 0x2 0xa0
0xc5c: V1073 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5f: V1074 = AND 0xffffffffffffffffffffffffffffffffffffffff V1068
0xc61: V1075 = AND V1067 0xffffffffffffffffffffffffffffffffffffffff
0xc62: V1076 = EQ V1075 V1074
---
Entry stack: [V12, 0x240, V1063]
Stack pops: 1
Stack additions: [V1076]
Exit stack: [V12, 0x240, V1076]

================================

Block 0xc63
[0xc63:0xc68]
---
Predecessors: [0xc3d, 0xc50]
Successors: [0x7e9, 0xc69]
---
0xc63 JUMPDEST
0xc64 ISZERO
0xc65 PUSH2 0x7e9
0xc68 JUMPI
---
0xc63: JUMPDEST 
0xc64: V1077 = ISZERO S0
0xc65: V1078 = 0x7e9
0xc68: JUMPI 0x7e9 V1077
---
Entry stack: [V12, 0x240, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xc69
[0xc69:0xc98]
---
Predecessors: [0xc63]
Successors: [0xc99, 0xced]
---
0xc69 PUSH1 0x3
0xc6b SLOAD
0xc6c PUSH1 0x7
0xc6e SLOAD
0xc6f PUSH1 0x40
0xc71 MLOAD
0xc72 PUSH1 0x1
0xc74 PUSH1 0xa0
0xc76 PUSH1 0x2
0xc78 EXP
0xc79 SUB
0xc7a SWAP1
0xc7b SWAP3
0xc7c AND
0xc7d SWAP2
0xc7e DUP2
0xc7f ISZERO
0xc80 PUSH2 0x8fc
0xc83 MUL
0xc84 SWAP2
0xc85 SWAP1
0xc86 PUSH1 0x0
0xc88 DUP2
0xc89 DUP2
0xc8a DUP2
0xc8b DUP6
0xc8c DUP9
0xc8d DUP9
0xc8e CALL
0xc8f SWAP4
0xc90 POP
0xc91 POP
0xc92 POP
0xc93 POP
0xc94 ISZERO
0xc95 PUSH2 0xced
0xc98 JUMPI
---
0xc69: V1079 = 0x3
0xc6b: V1080 = S[0x3]
0xc6c: V1081 = 0x7
0xc6e: V1082 = S[0x7]
0xc6f: V1083 = 0x40
0xc71: V1084 = M[0x40]
0xc72: V1085 = 0x1
0xc74: V1086 = 0xa0
0xc76: V1087 = 0x2
0xc78: V1088 = EXP 0x2 0xa0
0xc79: V1089 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7c: V1090 = AND V1080 0xffffffffffffffffffffffffffffffffffffffff
0xc7f: V1091 = ISZERO V1082
0xc80: V1092 = 0x8fc
0xc83: V1093 = MUL 0x8fc V1091
0xc86: V1094 = 0x0
0xc8e: V1095 = CALL V1093 V1090 V1082 V1084 0x0 V1084 0x0
0xc94: V1096 = ISZERO V1095
0xc95: V1097 = 0xced
0xc98: JUMPI 0xced V1096
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xc99
[0xc99:0xcec]
---
Predecessors: [0xc69]
Successors: [0x7e9]
---
0xc99 PUSH1 0x3
0xc9b SLOAD
0xc9c PUSH1 0x7
0xc9e SLOAD
0xc9f PUSH1 0x40
0xca1 DUP1
0xca2 MLOAD
0xca3 PUSH1 0x1
0xca5 PUSH1 0xa0
0xca7 PUSH1 0x2
0xca9 EXP
0xcaa SUB
0xcab SWAP1
0xcac SWAP4
0xcad AND
0xcae DUP4
0xcaf MSTORE
0xcb0 PUSH1 0x20
0xcb2 DUP4
0xcb3 ADD
0xcb4 SWAP2
0xcb5 SWAP1
0xcb6 SWAP2
0xcb7 MSTORE
0xcb8 PUSH1 0x0
0xcba DUP3
0xcbb DUP3
0xcbc ADD
0xcbd MSTORE
0xcbe MLOAD
0xcbf PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0xce0 SWAP2
0xce1 DUP2
0xce2 SWAP1
0xce3 SUB
0xce4 PUSH1 0x60
0xce6 ADD
0xce7 SWAP1
0xce8 LOG1
0xce9 PUSH2 0x7e9
0xcec JUMP
---
0xc99: V1098 = 0x3
0xc9b: V1099 = S[0x3]
0xc9c: V1100 = 0x7
0xc9e: V1101 = S[0x7]
0xc9f: V1102 = 0x40
0xca2: V1103 = M[0x40]
0xca3: V1104 = 0x1
0xca5: V1105 = 0xa0
0xca7: V1106 = 0x2
0xca9: V1107 = EXP 0x2 0xa0
0xcaa: V1108 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcad: V1109 = AND V1099 0xffffffffffffffffffffffffffffffffffffffff
0xcaf: M[V1103] = V1109
0xcb0: V1110 = 0x20
0xcb3: V1111 = ADD V1103 0x20
0xcb7: M[V1111] = V1101
0xcb8: V1112 = 0x0
0xcbc: V1113 = ADD 0x40 V1103
0xcbd: M[V1113] = 0x0
0xcbe: V1114 = M[0x40]
0xcbf: V1115 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0xce3: V1116 = SUB V1103 V1114
0xce4: V1117 = 0x60
0xce6: V1118 = ADD 0x60 V1116
0xce8: LOG V1114 V1118 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0xce9: V1119 = 0x7e9
0xcec: JUMP 0x7e9
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xced
[0xced:0xcfc]
---
Predecessors: [0xc69]
Successors: [0xcfd]
---
0xced JUMPDEST
0xcee PUSH1 0x8
0xcf0 DUP1
0xcf1 SLOAD
0xcf2 PUSH2 0xff00
0xcf5 NOT
0xcf6 AND
0xcf7 PUSH2 0x100
0xcfa OR
0xcfb SWAP1
0xcfc SSTORE
---
0xced: JUMPDEST 
0xcee: V1120 = 0x8
0xcf1: V1121 = S[0x8]
0xcf2: V1122 = 0xff00
0xcf5: V1123 = NOT 0xff00
0xcf6: V1124 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1121
0xcf7: V1125 = 0x100
0xcfa: V1126 = OR 0x100 V1124
0xcfc: S[0x8] = V1126
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xcfd
[0xcfd:0xcfd]
---
Predecessors: [0xced]
Successors: [0xcfe]
---
0xcfd JUMPDEST
---
0xcfd: JUMPDEST 
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xcfe
[0xcfe:0xcfe]
---
Predecessors: [0xcfd]
Successors: [0xcff]
---
0xcfe JUMPDEST
---
0xcfe: JUMPDEST 
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xcff
[0xcff:0xcff]
---
Predecessors: [0xcfe]
Successors: [0xd00]
---
0xcff JUMPDEST
---
0xcff: JUMPDEST 
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xd00
[0xd00:0xd00]
---
Predecessors: [0xcff]
Successors: [0xd01]
---
0xd00 JUMPDEST
---
0xd00: JUMPDEST 
---
Entry stack: [V12, 0x240]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x240]

================================

Block 0xd01
[0xd01:0xd02]
---
Predecessors: [0xd00]
Successors: [0x240]
---
0xd01 JUMPDEST
0xd02 JUMP
---
0xd01: JUMPDEST 
0xd02: JUMP 0x240
---
Entry stack: [V12, 0x240]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xd03
[0xd03:0xd10]
---
Predecessors: [0x5b6, 0x6a2]
Successors: [0x74c, 0xd11]
---
0xd03 JUMPDEST
0xd04 DUP2
0xd05 SLOAD
0xd06 DUP2
0xd07 DUP4
0xd08 SSTORE
0xd09 DUP2
0xd0a DUP2
0xd0b ISZERO
0xd0c GT
0xd0d PUSH2 0x74c
0xd10 JUMPI
---
0xd03: JUMPDEST 
0xd05: V1127 = S[0x1]
0xd08: S[0x1] = S0
0xd0b: V1128 = ISZERO V1127
0xd0c: V1129 = GT V1128 S0
0xd0d: V1130 = 0x74c
0xd10: JUMPI 0x74c V1129
---
Entry stack: [V12, 0x240, S10, {0x1db, 0x240}, S8, S7, S6, 0x1, S4, S3, {0x637, 0x6e1}, 0x1, S0]
Stack pops: 2
Stack additions: [S1, S0, V1127]
Exit stack: [V12, 0x240, S10, {0x1db, 0x240}, S8, S7, S6, 0x1, S4, S3, {0x637, 0x6e1}, 0x1, S0, V1127]

================================

Block 0xd11
[0xd11:0xd2e]
---
Predecessors: [0xd03]
Successors: [0xd35]
---
0xd11 PUSH1 0x4
0xd13 MUL
0xd14 DUP2
0xd15 PUSH1 0x4
0xd17 MUL
0xd18 DUP4
0xd19 PUSH1 0x0
0xd1b MSTORE
0xd1c PUSH1 0x20
0xd1e PUSH1 0x0
0xd20 SHA3
0xd21 SWAP2
0xd22 DUP3
0xd23 ADD
0xd24 SWAP2
0xd25 ADD
0xd26 PUSH2 0x74c
0xd29 SWAP2
0xd2a SWAP1
0xd2b PUSH2 0xd35
0xd2e JUMP
---
0xd11: V1131 = 0x4
0xd13: V1132 = MUL 0x4 V1127
0xd15: V1133 = 0x4
0xd17: V1134 = MUL 0x4 S1
0xd19: V1135 = 0x0
0xd1b: M[0x0] = 0x1
0xd1c: V1136 = 0x20
0xd1e: V1137 = 0x0
0xd20: V1138 = SHA3 0x0 0x20
0xd23: V1139 = ADD V1138 V1132
0xd25: V1140 = ADD V1138 V1134
0xd26: V1141 = 0x74c
0xd2b: V1142 = 0xd35
0xd2e: JUMP 0xd35
---
Entry stack: [V12, 0x240, S11, {0x1db, 0x240}, S9, S8, S7, 0x1, S5, S4, {0x637, 0x6e1}, 0x1, S1, V1127]
Stack pops: 3
Stack additions: [S2, S1, 0x74c, V1139, V1140]
Exit stack: [V12, 0x240, S11, {0x1db, 0x240}, S9, S8, S7, 0x1, S5, S4, {0x637, 0x6e1}, 0x1, S1, 0x74c, V1139, V1140]

================================

Block 0xd2f
[0xd2f:0xd2f]
---
Predecessors: []
Successors: [0xd30]
---
0xd2f JUMPDEST
---
0xd2f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd30
[0xd30:0xd34]
---
Predecessors: [0xd2f]
Successors: []
Has unresolved jump.
---
0xd30 JUMPDEST
0xd31 POP
0xd32 POP
0xd33 POP
0xd34 JUMP
---
0xd30: JUMPDEST 
0xd34: JUMP S3
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0xd35
[0xd35:0xd3a]
---
Predecessors: [0xd11]
Successors: [0xd3b]
---
0xd35 JUMPDEST
0xd36 PUSH2 0x7f1
0xd39 SWAP2
0xd3a SWAP1
---
0xd35: JUMPDEST 
0xd36: V1143 = 0x7f1
---
Entry stack: [V12, 0x240, S13, {0x1db, 0x240}, S11, S10, S9, 0x1, S7, S6, {0x637, 0x6e1}, 0x1, S3, 0x74c, V1139, V1140]
Stack pops: 2
Stack additions: [0x7f1, S1, S0]
Exit stack: [V12, 0x240, S13, {0x1db, 0x240}, S11, S10, S9, 0x1, S7, S6, {0x637, 0x6e1}, 0x1, S3, 0x74c, 0x7f1, V1139, V1140]

================================

Block 0xd3b
[0xd3b:0xd43]
---
Predecessors: [0xd35, 0xd44]
Successors: [0xd44, 0xd6e]
---
0xd3b JUMPDEST
0xd3c DUP1
0xd3d DUP3
0xd3e GT
0xd3f ISZERO
0xd40 PUSH2 0xd6e
0xd43 JUMPI
---
0xd3b: JUMPDEST 
0xd3e: V1144 = GT V1139 S0
0xd3f: V1145 = ISZERO V1144
0xd40: V1146 = 0xd6e
0xd43: JUMPI 0xd6e V1145
---
Entry stack: [V12, 0x240, S14, {0x1db, 0x240}, S12, S11, S10, 0x1, S8, S7, {0x637, 0x6e1}, S5, S4, 0x74c, 0x7f1, V1139, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x240, S14, {0x1db, 0x240}, S12, S11, S10, 0x1, S8, S7, {0x637, 0x6e1}, S5, S4, 0x74c, 0x7f1, V1139, S0]

================================

Block 0xd44
[0xd44:0xd6d]
---
Predecessors: [0xd3b]
Successors: [0xd3b]
---
0xd44 PUSH1 0x0
0xd46 DUP1
0xd47 DUP3
0xd48 SSTORE
0xd49 PUSH1 0x1
0xd4b DUP3
0xd4c ADD
0xd4d DUP2
0xd4e SWAP1
0xd4f SSTORE
0xd50 PUSH1 0x2
0xd52 DUP3
0xd53 ADD
0xd54 SSTORE
0xd55 PUSH1 0x3
0xd57 DUP2
0xd58 ADD
0xd59 DUP1
0xd5a SLOAD
0xd5b PUSH1 0x1
0xd5d PUSH1 0xa0
0xd5f PUSH1 0x2
0xd61 EXP
0xd62 SUB
0xd63 NOT
0xd64 AND
0xd65 SWAP1
0xd66 SSTORE
0xd67 PUSH1 0x4
0xd69 ADD
0xd6a PUSH2 0xd3b
0xd6d JUMP
---
0xd44: V1147 = 0x0
0xd48: S[S0] = 0x0
0xd49: V1148 = 0x1
0xd4c: V1149 = ADD S0 0x1
0xd4f: S[V1149] = 0x0
0xd50: V1150 = 0x2
0xd53: V1151 = ADD S0 0x2
0xd54: S[V1151] = 0x0
0xd55: V1152 = 0x3
0xd58: V1153 = ADD S0 0x3
0xd5a: V1154 = S[V1153]
0xd5b: V1155 = 0x1
0xd5d: V1156 = 0xa0
0xd5f: V1157 = 0x2
0xd61: V1158 = EXP 0x2 0xa0
0xd62: V1159 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd63: V1160 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd64: V1161 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1154
0xd66: S[V1153] = V1161
0xd67: V1162 = 0x4
0xd69: V1163 = ADD 0x4 S0
0xd6a: V1164 = 0xd3b
0xd6d: JUMP 0xd3b
---
Entry stack: [V12, 0x240, S14, {0x1db, 0x240}, S12, S11, S10, 0x1, S8, S7, {0x637, 0x6e1}, S5, S4, 0x74c, 0x7f1, V1139, S0]
Stack pops: 1
Stack additions: [V1163]
Exit stack: [V12, 0x240, S14, {0x1db, 0x240}, S12, S11, S10, 0x1, S8, S7, {0x637, 0x6e1}, S5, S4, 0x74c, 0x7f1, V1139, V1163]

================================

Block 0xd6e
[0xd6e:0xd71]
---
Predecessors: [0xd3b]
Successors: [0x7f1]
---
0xd6e JUMPDEST
0xd6f POP
0xd70 SWAP1
0xd71 JUMP
---
0xd6e: JUMPDEST 
0xd71: JUMP 0x7f1
---
Entry stack: [V12, 0x240, S14, {0x1db, 0x240}, S12, S11, S10, 0x1, S8, S7, {0x637, 0x6e1}, S5, S4, 0x74c, 0x7f1, V1139, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, 0x240, S14, {0x1db, 0x240}, S12, S11, S10, 0x1, S8, S7, {0x637, 0x6e1}, S5, S4, 0x74c, V1139]

================================

Block 0xd72
[0xd72:0xdad]
---
Predecessors: []
Successors: []
---
0xd72 JUMPDEST
0xd73 SWAP1
0xd74 JUMP
0xd75 STOP
0xd76 LOG1
0xd77 PUSH6 0x627a7a723058
0xd7e SHA3
0xd7f PUSH22 0x361ce7c2495d4782714d861e629e114ad490b48863a8
0xd96 MISSING 0xb6
0xd97 MISSING 0x1e
0xd98 SIGNEXTEND
0xd99 BALANCE
0xd9a MISSING 0xd6
0xd9b DUP6
0xd9c PUSH17 0x42000029
---
0xd72: JUMPDEST 
0xd74: JUMP S1
0xd75: STOP 
0xd76: LOG S0 S1 S2
0xd77: V1165 = 0x627a7a723058
0xd7e: V1166 = SHA3 0x627a7a723058 S3
0xd7f: V1167 = 0x361ce7c2495d4782714d861e629e114ad490b48863a8
0xd96: MISSING 0xb6
0xd97: MISSING 0x1e
0xd98: V1168 = SIGNEXTEND S0 S1
0xd99: V1169 = BALANCE V1168
0xd9a: MISSING 0xd6
0xd9c: V1170 = 0x42000029
---
Entry stack: []
Stack pops: 39
Stack additions: [0x42000029, S5, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x242
Exit block: 0x240
Body: 0x240, 0x242, 0x249, 0x24a, 0x752, 0x75c, 0x767, 0x7c6, 0x7db, 0x7e9, 0x7ea, 0x7eb

Function 1:
Public function signature: 0x13a5d9e4
Entry block: 0x254
Exit block: 0x240
Body: 0x240, 0x254, 0x25b, 0x25c, 0x7ed

Function 2:
Public function signature: 0x13f4e977
Entry block: 0x276
Exit block: 0x264
Body: 0x264, 0x276, 0x27d, 0x27e, 0x7f4, 0x7f8

Function 3:
Public function signature: 0x1cee0700
Entry block: 0x298
Exit block: 0x2ab
Body: 0x298, 0x29f, 0x2a0, 0x2ab, 0x7fb, 0x808, 0x809, 0x81a

Function 4:
Public function signature: 0x29dcb0cf
Entry block: 0x2da
Exit block: 0x264
Body: 0x264, 0x2da, 0x2e1, 0x2e2, 0x83e

Function 5:
Public function signature: 0x2a3dc703
Entry block: 0x2fc
Exit block: 0x240
Body: 0x240, 0x2fc, 0x303, 0x304

Function 6:
Public function signature: 0x3fc4caa1
Entry block: 0x320
Exit block: 0x264
Body: 0x264, 0x320, 0x327, 0x328

Function 7:
Public function signature: 0x47e17349
Entry block: 0x345
Exit block: 0x264
Body: 0x264, 0x345, 0x34c, 0x34d

Function 8:
Public function signature: 0x6ca596fa
Entry block: 0x36a
Exit block: 0x37a
Body: 0x36a, 0x371, 0x372, 0x37a, 0x85f, 0x866

Function 9:
Public function signature: 0x85f63a4a
Entry block: 0x38e
Exit block: 0x39e
Body: 0x38e, 0x395, 0x396, 0x39e, 0x869, 0x876

Function 10:
Public function signature: 0x8a2e196c
Entry block: 0x3ba
Exit block: 0x264
Body: 0x264, 0x3ba, 0x3c1, 0x3c2, 0x879, 0x886

Function 11:
Public function signature: 0x8d6cc56d
Entry block: 0x3dc
Exit block: 0x240
Body: 0x240, 0x3dc, 0x3e3, 0x3e4, 0x889, 0x8a0, 0x8a5, 0x8ab, 0x8ac

Function 12:
Public function signature: 0xa2b475f3
Entry block: 0x3f1
Exit block: 0x3f8
Body: 0x3f1, 0x3f8, 0x3f9, 0x404

Function 13:
Public function signature: 0xe59cef17
Entry block: 0x41d
Exit block: 0x264
Body: 0x264, 0x41d, 0x424, 0x425, 0x908, 0x90c

Function 14:
Public function signature: 0xe8974832
Entry block: 0x43f
Exit block: 0x446
Body: 0x404, 0x43f, 0x446, 0x447

Function 15:
Public function signature: 0xe8bd5cc4
Entry block: 0x46b
Exit block: 0x264
Body: 0x264, 0x46b, 0x472, 0x473, 0x963, 0x967

Function 16:
Public function signature: 0xf1eae25c
Entry block: 0x48d
Exit block: 0x240
Body: 0x23c, 0x23d, 0x240, 0x48d, 0x494, 0x495, 0x96a, 0x97e, 0x991, 0x997, 0x9c8

Function 17:
Public function signature: 0xf2fde38b
Entry block: 0x49f
Exit block: 0x240
Body: 0x240, 0x49f, 0x4a6, 0x4a7, 0x9ce, 0x9e5, 0x9ea, 0xa06, 0xa07

Function 18:
Public function signature: 0xfd6b7ef8
Entry block: 0x4bd
Exit block: 0x240
Body: 0x240, 0x4bd, 0x4c4, 0x4c5, 0x7e9, 0x7ea, 0x7eb, 0xa0a, 0xa14, 0xa24, 0xa46, 0xac1, 0xac2, 0xace, 0xacf, 0xadd, 0xae1, 0xb16, 0xbb0, 0xc29, 0xc2a, 0xc36, 0xc37, 0xc3b, 0xc3c, 0xc3d, 0xc50, 0xc63, 0xc69, 0xc99, 0xced, 0xcfd, 0xcfe, 0xcff, 0xd00, 0xd01

Function 19:
Public fallback function
Entry block: 0xeb
Exit block: 0x240
Body: 0xeb, 0xef, 0xfe, 0x104, 0x10a, 0x10f, 0x122, 0x12a, 0x1a9, 0x1aa, 0x1b6, 0x1b7, 0x1c5, 0x1db, 0x22b, 0x231, 0x23c, 0x23d, 0x240

Function 20:
Private function
Entry block: 0xd03
Exit block: 0x74d
Body: 0x74c, 0x74d, 0x7f1, 0xd03, 0xd11, 0xd35, 0xd3b, 0xd44, 0xd6e

Function 21:
Private function
Entry block: 0x4cf
Exit block: 0x589
Body: 0x4cf, 0x4ef, 0x4f7, 0x507, 0x50f, 0x51f, 0x527, 0x530, 0x531, 0x539, 0x54e, 0x556, 0x562, 0x56a, 0x573, 0x57b, 0x584, 0x587, 0x588, 0x589

Function 22:
Private function
Entry block: 0x90f
Exit block: 0x902
Body: 0x4f7, 0x507, 0x50f, 0x51f, 0x901, 0x902, 0x90f, 0x92c, 0x943

Function 23:
Private function
Entry block: 0x8af
Exit block: 0x902
Body: 0x8af, 0x8cd, 0x8dc, 0x8e8, 0x8f8, 0x901, 0x902

Function 24:
Private function
Entry block: 0x844
Exit block: 0x85a
Body: 0x844, 0x856, 0x85a

Function 25:
Private function
Entry block: 0x591
Exit block: 0x74d
Body: 0x591, 0x5b6, 0x637, 0x648, 0x6a2, 0x6e1, 0x6f2, 0x74c, 0x74d

