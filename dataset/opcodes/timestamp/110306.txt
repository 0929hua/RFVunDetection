Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb4]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb4
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb4
0xa: JUMPI 0xb4 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x1a0]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xe78501f
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x1a0
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xe78501f
0x20: V14 = EQ V12 0xe78501f
0x21: V15 = 0x1a0
0x24: JUMPI 0x1a0 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x1b8]
---
0x25 DUP1
0x26 PUSH4 0x162bc80c
0x2b EQ
0x2c PUSH2 0x1b8
0x2f JUMPI
---
0x26: V16 = 0x162bc80c
0x2b: V17 = EQ 0x162bc80c V12
0x2c: V18 = 0x1b8
0x2f: JUMPI 0x1b8 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x1d0]
---
0x30 DUP1
0x31 PUSH4 0x1ffe4cca
0x36 EQ
0x37 PUSH2 0x1d0
0x3a JUMPI
---
0x31: V19 = 0x1ffe4cca
0x36: V20 = EQ 0x1ffe4cca V12
0x37: V21 = 0x1d0
0x3a: JUMPI 0x1d0 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1f5]
---
0x3b DUP1
0x3c PUSH4 0x29a5c0f4
0x41 EQ
0x42 PUSH2 0x1f5
0x45 JUMPI
---
0x3c: V22 = 0x29a5c0f4
0x41: V23 = EQ 0x29a5c0f4 V12
0x42: V24 = 0x1f5
0x45: JUMPI 0x1f5 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x20a]
---
0x46 DUP1
0x47 PUSH4 0x29dcb0cf
0x4c EQ
0x4d PUSH2 0x20a
0x50 JUMPI
---
0x47: V25 = 0x29dcb0cf
0x4c: V26 = EQ 0x29dcb0cf V12
0x4d: V27 = 0x20a
0x50: JUMPI 0x20a V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x22f]
---
0x51 DUP1
0x52 PUSH4 0x2ae8b4a3
0x57 EQ
0x58 PUSH2 0x22f
0x5b JUMPI
---
0x52: V28 = 0x2ae8b4a3
0x57: V29 = EQ 0x2ae8b4a3 V12
0x58: V30 = 0x22f
0x5b: JUMPI 0x22f V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x260]
---
0x5c DUP1
0x5d PUSH4 0x38af3eed
0x62 EQ
0x63 PUSH2 0x260
0x66 JUMPI
---
0x5d: V31 = 0x38af3eed
0x62: V32 = EQ 0x38af3eed V12
0x63: V33 = 0x260
0x66: JUMPI 0x260 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x28f]
---
0x67 DUP1
0x68 PUSH4 0x5d268629
0x6d EQ
0x6e PUSH2 0x28f
0x71 JUMPI
---
0x68: V34 = 0x5d268629
0x6d: V35 = EQ 0x5d268629 V12
0x6e: V36 = 0x28f
0x71: JUMPI 0x28f V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x2a4]
---
0x72 DUP1
0x73 PUSH4 0x6e66f6e9
0x78 EQ
0x79 PUSH2 0x2a4
0x7c JUMPI
---
0x73: V37 = 0x6e66f6e9
0x78: V38 = EQ 0x6e66f6e9 V12
0x79: V39 = 0x2a4
0x7c: JUMPI 0x2a4 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2d3]
---
0x7d DUP1
0x7e PUSH4 0x7b3e5e7b
0x83 EQ
0x84 PUSH2 0x2d3
0x87 JUMPI
---
0x7e: V40 = 0x7b3e5e7b
0x83: V41 = EQ 0x7b3e5e7b V12
0x84: V42 = 0x2d3
0x87: JUMPI 0x2d3 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2f8]
---
0x88 DUP1
0x89 PUSH4 0xa035b1fe
0x8e EQ
0x8f PUSH2 0x2f8
0x92 JUMPI
---
0x89: V43 = 0xa035b1fe
0x8e: V44 = EQ 0xa035b1fe V12
0x8f: V45 = 0x2f8
0x92: JUMPI 0x2f8 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x31d]
---
0x93 DUP1
0x94 PUSH4 0xc47af5cf
0x99 EQ
0x9a PUSH2 0x31d
0x9d JUMPI
---
0x94: V46 = 0xc47af5cf
0x99: V47 = EQ 0xc47af5cf V12
0x9a: V48 = 0x31d
0x9d: JUMPI 0x31d V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x335]
---
0x9e DUP1
0x9f PUSH4 0xf2fde38b
0xa4 EQ
0xa5 PUSH2 0x335
0xa8 JUMPI
---
0x9f: V49 = 0xf2fde38b
0xa4: V50 = EQ 0xf2fde38b V12
0xa5: V51 = 0x335
0xa8: JUMPI 0x335 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x356]
---
0xa9 DUP1
0xaa PUSH4 0xf72f6826
0xaf EQ
0xb0 PUSH2 0x356
0xb3 JUMPI
---
0xaa: V52 = 0xf72f6826
0xaf: V53 = EQ 0xf72f6826 V12
0xb0: V54 = 0x356
0xb3: JUMPI 0x356 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xb7]
---
Predecessors: [0x0, 0xa9]
Successors: [0xb8]
---
0xb4 JUMPDEST
0xb5 PUSH2 0x19e
---
0xb4: JUMPDEST 
0xb5: V55 = 0x19e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x19e]
Exit stack: [V12, 0x19e]

================================

Block 0xb8
[0xb8:0xc6]
---
Predecessors: [0xb4]
Successors: [0xc7, 0xcb]
---
0xb8 JUMPDEST
0xb9 PUSH1 0x0
0xbb DUP1
0xbc PUSH1 0x1
0xbe SLOAD
0xbf TIMESTAMP
0xc0 GT
0xc1 ISZERO
0xc2 ISZERO
0xc3 PUSH2 0xcb
0xc6 JUMPI
---
0xb8: JUMPDEST 
0xb9: V56 = 0x0
0xbc: V57 = 0x1
0xbe: V58 = S[0x1]
0xbf: V59 = TIMESTAMP
0xc0: V60 = GT V59 V58
0xc1: V61 = ISZERO V60
0xc2: V62 = ISZERO V61
0xc3: V63 = 0xcb
0xc6: JUMPI 0xcb V62
---
Entry stack: [V12, 0x19e]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x19e, 0x0, 0x0]

================================

Block 0xc7
[0xc7:0xca]
---
Predecessors: [0xb8]
Successors: []
---
0xc7 PUSH1 0x0
0xc9 DUP1
0xca REVERT
---
0xc7: V64 = 0x0
0xca: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, 0x0, 0x0]

================================

Block 0xcb
[0xcb:0xd4]
---
Predecessors: [0xb8]
Successors: [0xd5, 0xd9]
---
0xcb JUMPDEST
0xcc PUSH1 0x2
0xce SLOAD
0xcf TIMESTAMP
0xd0 LT
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xcb: JUMPDEST 
0xcc: V65 = 0x2
0xce: V66 = S[0x2]
0xcf: V67 = TIMESTAMP
0xd0: V68 = LT V67 V66
0xd1: V69 = 0xd9
0xd4: JUMPI 0xd9 V68
---
Entry stack: [V12, 0x19e, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, 0x0, 0x0]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xcb]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V70 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, 0x0, 0x0]

================================

Block 0xd9
[0xd9:0xe6]
---
Predecessors: [0xcb]
Successors: [0xe7, 0xeb]
---
0xd9 JUMPDEST
0xda CALLVALUE
0xdb SWAP2
0xdc POP
0xdd PUSH1 0x3
0xdf SLOAD
0xe0 DUP3
0xe1 LT
0xe2 ISZERO
0xe3 PUSH2 0xeb
0xe6 JUMPI
---
0xd9: JUMPDEST 
0xda: V71 = CALLVALUE
0xdd: V72 = 0x3
0xdf: V73 = S[0x3]
0xe1: V74 = LT V71 V73
0xe2: V75 = ISZERO V74
0xe3: V76 = 0xeb
0xe6: JUMPI 0xeb V75
---
Entry stack: [V12, 0x19e, 0x0, 0x0]
Stack pops: 2
Stack additions: [V71, S0]
Exit stack: [V12, 0x19e, V71, 0x0]

================================

Block 0xe7
[0xe7:0xea]
---
Predecessors: [0xd9]
Successors: []
---
0xe7 PUSH1 0x0
0xe9 DUP1
0xea REVERT
---
0xe7: V77 = 0x0
0xea: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e, V71, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V71, 0x0]

================================

Block 0xeb
[0xeb:0xfe]
---
Predecessors: [0xd9]
Successors: [0xff, 0x100]
---
0xeb JUMPDEST
0xec PUSH1 0x4
0xee DUP1
0xef SLOAD
0xf0 DUP4
0xf1 ADD
0xf2 SWAP1
0xf3 SSTORE
0xf4 PUSH1 0x3
0xf6 SLOAD
0xf7 DUP3
0xf8 DUP2
0xf9 ISZERO
0xfa ISZERO
0xfb PUSH2 0x100
0xfe JUMPI
---
0xeb: JUMPDEST 
0xec: V78 = 0x4
0xef: V79 = S[0x4]
0xf1: V80 = ADD V71 V79
0xf3: S[0x4] = V80
0xf4: V81 = 0x3
0xf6: V82 = S[0x3]
0xf9: V83 = ISZERO V82
0xfa: V84 = ISZERO V83
0xfb: V85 = 0x100
0xfe: JUMPI 0x100 V84
---
Entry stack: [V12, 0x19e, V71, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V82, S1]
Exit stack: [V12, 0x19e, V71, 0x0, V82, V71]

================================

Block 0xff
[0xff:0xff]
---
Predecessors: [0xeb]
Successors: []
---
0xff INVALID
---
0xff: INVALID 
---
Entry stack: [V12, 0x19e, V71, 0x0, V82, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V71, 0x0, V82, V71]

================================

Block 0x100
[0x100:0x179]
---
Predecessors: [0xeb]
Successors: [0x17a, 0x17e]
---
0x100 JUMPDEST
0x101 CALLER
0x102 PUSH1 0x1
0x104 PUSH1 0xa0
0x106 PUSH1 0x2
0x108 EXP
0x109 SUB
0x10a DUP2
0x10b DUP2
0x10c AND
0x10d PUSH1 0x0
0x10f SWAP1
0x110 DUP2
0x111 MSTORE
0x112 PUSH1 0x5
0x114 PUSH1 0x20
0x116 MSTORE
0x117 PUSH1 0x40
0x119 DUP1
0x11a DUP3
0x11b SHA3
0x11c DUP1
0x11d SLOAD
0x11e DUP10
0x11f ADD
0x120 SWAP1
0x121 SSTORE
0x122 PUSH1 0x6
0x124 SLOAD
0x125 SWAP6
0x126 SWAP1
0x127 SWAP5
0x128 DIV
0x129 SWAP6
0x12a POP
0x12b SWAP4
0x12c AND
0x12d SWAP3
0x12e PUSH4 0xa9059cbb
0x133 SWAP3
0x134 DUP6
0x135 SWAP2
0x136 SWAP1
0x137 MLOAD
0x138 PUSH1 0x20
0x13a ADD
0x13b MSTORE
0x13c PUSH1 0x40
0x13e MLOAD
0x13f PUSH1 0xe0
0x141 PUSH1 0x2
0x143 EXP
0x144 PUSH4 0xffffffff
0x149 DUP6
0x14a AND
0x14b MUL
0x14c DUP2
0x14d MSTORE
0x14e PUSH1 0x1
0x150 PUSH1 0xa0
0x152 PUSH1 0x2
0x154 EXP
0x155 SUB
0x156 SWAP1
0x157 SWAP3
0x158 AND
0x159 PUSH1 0x4
0x15b DUP4
0x15c ADD
0x15d MSTORE
0x15e PUSH1 0x24
0x160 DUP3
0x161 ADD
0x162 MSTORE
0x163 PUSH1 0x44
0x165 ADD
0x166 PUSH1 0x20
0x168 PUSH1 0x40
0x16a MLOAD
0x16b DUP1
0x16c DUP4
0x16d SUB
0x16e DUP2
0x16f PUSH1 0x0
0x171 DUP8
0x172 DUP1
0x173 EXTCODESIZE
0x174 ISZERO
0x175 ISZERO
0x176 PUSH2 0x17e
0x179 JUMPI
---
0x100: JUMPDEST 
0x101: V86 = CALLER
0x102: V87 = 0x1
0x104: V88 = 0xa0
0x106: V89 = 0x2
0x108: V90 = EXP 0x2 0xa0
0x109: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10c: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x10d: V93 = 0x0
0x111: M[0x0] = V92
0x112: V94 = 0x5
0x114: V95 = 0x20
0x116: M[0x20] = 0x5
0x117: V96 = 0x40
0x11b: V97 = SHA3 0x0 0x40
0x11d: V98 = S[V97]
0x11f: V99 = ADD V71 V98
0x121: S[V97] = V99
0x122: V100 = 0x6
0x124: V101 = S[0x6]
0x128: V102 = DIV V71 V82
0x12c: V103 = AND V101 0xffffffffffffffffffffffffffffffffffffffff
0x12e: V104 = 0xa9059cbb
0x137: V105 = M[0x40]
0x138: V106 = 0x20
0x13a: V107 = ADD 0x20 V105
0x13b: M[V107] = 0x0
0x13c: V108 = 0x40
0x13e: V109 = M[0x40]
0x13f: V110 = 0xe0
0x141: V111 = 0x2
0x143: V112 = EXP 0x2 0xe0
0x144: V113 = 0xffffffff
0x14a: V114 = AND 0xa9059cbb 0xffffffff
0x14b: V115 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x14d: M[V109] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x14e: V116 = 0x1
0x150: V117 = 0xa0
0x152: V118 = 0x2
0x154: V119 = EXP 0x2 0xa0
0x155: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x158: V121 = AND V86 0xffffffffffffffffffffffffffffffffffffffff
0x159: V122 = 0x4
0x15c: V123 = ADD V109 0x4
0x15d: M[V123] = V121
0x15e: V124 = 0x24
0x161: V125 = ADD V109 0x24
0x162: M[V125] = V102
0x163: V126 = 0x44
0x165: V127 = ADD 0x44 V109
0x166: V128 = 0x20
0x168: V129 = 0x40
0x16a: V130 = M[0x40]
0x16d: V131 = SUB V127 V130
0x16f: V132 = 0x0
0x173: V133 = EXTCODESIZE V103
0x174: V134 = ISZERO V133
0x175: V135 = ISZERO V134
0x176: V136 = 0x17e
0x179: JUMPI 0x17e V135
---
Entry stack: [V12, 0x19e, V71, 0x0, V82, V71]
Stack pops: 4
Stack additions: [S3, V102, V103, 0xa9059cbb, V127, 0x20, V130, V131, V130, 0x0, V103]
Exit stack: [V12, 0x19e, V71, V102, V103, 0xa9059cbb, V127, 0x20, V130, V131, V130, 0x0, V103]

================================

Block 0x17a
[0x17a:0x17d]
---
Predecessors: [0x100]
Successors: []
---
0x17a PUSH1 0x0
0x17c DUP1
0x17d REVERT
---
0x17a: V137 = 0x0
0x17d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e, V71, V102, V103, 0xa9059cbb, V127, 0x20, V130, V131, V130, 0x0, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V71, V102, V103, 0xa9059cbb, V127, 0x20, V130, V131, V130, 0x0, V103]

================================

Block 0x17e
[0x17e:0x18a]
---
Predecessors: [0x100]
Successors: [0x18b, 0x18f]
---
0x17e JUMPDEST
0x17f PUSH2 0x2c6
0x182 GAS
0x183 SUB
0x184 CALL
0x185 ISZERO
0x186 ISZERO
0x187 PUSH2 0x18f
0x18a JUMPI
---
0x17e: JUMPDEST 
0x17f: V138 = 0x2c6
0x182: V139 = GAS
0x183: V140 = SUB V139 0x2c6
0x184: V141 = CALL V140 V103 0x0 V130 V131 V130 0x20
0x185: V142 = ISZERO V141
0x186: V143 = ISZERO V142
0x187: V144 = 0x18f
0x18a: JUMPI 0x18f V143
---
Entry stack: [V12, 0x19e, V71, V102, V103, 0xa9059cbb, V127, 0x20, V130, V131, V130, 0x0, V103]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x19e, V71, V102, V103, 0xa9059cbb, V127]

================================

Block 0x18b
[0x18b:0x18e]
---
Predecessors: [0x17e]
Successors: []
---
0x18b PUSH1 0x0
0x18d DUP1
0x18e REVERT
---
0x18b: V145 = 0x0
0x18e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e, V71, V102, V103, 0xa9059cbb, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V71, V102, V103, 0xa9059cbb, V127]

================================

Block 0x18f
[0x18f:0x199]
---
Predecessors: [0x17e]
Successors: [0x19a]
---
0x18f JUMPDEST
0x190 POP
0x191 POP
0x192 POP
0x193 PUSH1 0x40
0x195 MLOAD
0x196 DUP1
0x197 MLOAD
0x198 POP
0x199 POP
---
0x18f: JUMPDEST 
0x193: V146 = 0x40
0x195: V147 = M[0x40]
0x197: V148 = M[V147]
---
Entry stack: [V12, 0x19e, V71, V102, V103, 0xa9059cbb, V127]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x19e, V71, V102]

================================

Block 0x19a
[0x19a:0x19d]
---
Predecessors: [0x18f]
Successors: [0x19e]
---
0x19a JUMPDEST
0x19b POP
0x19c POP
0x19d JUMP
---
0x19a: JUMPDEST 
0x19d: JUMP 0x19e
---
Entry stack: [V12, 0x19e, V71, V102]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x19e
[0x19e:0x19f]
---
Predecessors: [0x19a, 0x390, 0x433, 0x490, 0x5cc, 0x624, 0x649]
Successors: []
---
0x19e JUMPDEST
0x19f STOP
---
0x19e: JUMPDEST 
0x19f: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a0
[0x1a0:0x1a6]
---
Predecessors: [0xb]
Successors: [0x1a7, 0x1ab]
---
0x1a0 JUMPDEST
0x1a1 CALLVALUE
0x1a2 ISZERO
0x1a3 PUSH2 0x1ab
0x1a6 JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V149 = CALLVALUE
0x1a2: V150 = ISZERO V149
0x1a3: V151 = 0x1ab
0x1a6: JUMPI 0x1ab V150
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a7
[0x1a7:0x1aa]
---
Predecessors: [0x1a0]
Successors: []
---
0x1a7 PUSH1 0x0
0x1a9 DUP1
0x1aa REVERT
---
0x1a7: V152 = 0x0
0x1aa: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ab
[0x1ab:0x1b5]
---
Predecessors: [0x1a0]
Successors: [0x36e]
---
0x1ab JUMPDEST
0x1ac PUSH2 0x19e
0x1af PUSH1 0x4
0x1b1 CALLDATALOAD
0x1b2 PUSH2 0x36e
0x1b5 JUMP
---
0x1ab: JUMPDEST 
0x1ac: V153 = 0x19e
0x1af: V154 = 0x4
0x1b1: V155 = CALLDATALOAD 0x4
0x1b2: V156 = 0x36e
0x1b5: JUMP 0x36e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x19e, V155]
Exit stack: [V12, 0x19e, V155]

================================

Block 0x1b6
[0x1b6:0x1b7]
---
Predecessors: []
Successors: []
---
0x1b6 JUMPDEST
0x1b7 STOP
---
0x1b6: JUMPDEST 
0x1b7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1b8
[0x1b8:0x1be]
---
Predecessors: [0x25]
Successors: [0x1bf, 0x1c3]
---
0x1b8 JUMPDEST
0x1b9 CALLVALUE
0x1ba ISZERO
0x1bb PUSH2 0x1c3
0x1be JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V157 = CALLVALUE
0x1ba: V158 = ISZERO V157
0x1bb: V159 = 0x1c3
0x1be: JUMPI 0x1c3 V158
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bf
[0x1bf:0x1c2]
---
Predecessors: [0x1b8]
Successors: []
---
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 REVERT
---
0x1bf: V160 = 0x0
0x1c2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c3
[0x1c3:0x1cd]
---
Predecessors: [0x1b8]
Successors: [0x393]
---
0x1c3 JUMPDEST
0x1c4 PUSH2 0x19e
0x1c7 PUSH1 0x4
0x1c9 CALLDATALOAD
0x1ca PUSH2 0x393
0x1cd JUMP
---
0x1c3: JUMPDEST 
0x1c4: V161 = 0x19e
0x1c7: V162 = 0x4
0x1c9: V163 = CALLDATALOAD 0x4
0x1ca: V164 = 0x393
0x1cd: JUMP 0x393
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x19e, V163]
Exit stack: [V12, 0x19e, V163]

================================

Block 0x1ce
[0x1ce:0x1cf]
---
Predecessors: []
Successors: []
---
0x1ce JUMPDEST
0x1cf STOP
---
0x1ce: JUMPDEST 
0x1cf: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d0
[0x1d0:0x1d6]
---
Predecessors: [0x30]
Successors: [0x1d7, 0x1db]
---
0x1d0 JUMPDEST
0x1d1 CALLVALUE
0x1d2 ISZERO
0x1d3 PUSH2 0x1db
0x1d6 JUMPI
---
0x1d0: JUMPDEST 
0x1d1: V165 = CALLVALUE
0x1d2: V166 = ISZERO V165
0x1d3: V167 = 0x1db
0x1d6: JUMPI 0x1db V166
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d7
[0x1d7:0x1da]
---
Predecessors: [0x1d0]
Successors: []
---
0x1d7 PUSH1 0x0
0x1d9 DUP1
0x1da REVERT
---
0x1d7: V168 = 0x0
0x1da: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1db
[0x1db:0x1e2]
---
Predecessors: [0x1d0]
Successors: [0x436]
---
0x1db JUMPDEST
0x1dc PUSH2 0x1e3
0x1df PUSH2 0x436
0x1e2 JUMP
---
0x1db: JUMPDEST 
0x1dc: V169 = 0x1e3
0x1df: V170 = 0x436
0x1e2: JUMP 0x436
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e3]
Exit stack: [V12, 0x1e3]

================================

Block 0x1e3
[0x1e3:0x1f4]
---
Predecessors: [0x436, 0x492, 0x498, 0x59e, 0x5a4]
Successors: []
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x40
0x1e6 MLOAD
0x1e7 SWAP1
0x1e8 DUP2
0x1e9 MSTORE
0x1ea PUSH1 0x20
0x1ec ADD
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 DUP1
0x1f1 SWAP2
0x1f2 SUB
0x1f3 SWAP1
0x1f4 RETURN
---
0x1e3: JUMPDEST 
0x1e4: V171 = 0x40
0x1e6: V172 = M[0x40]
0x1e9: M[V172] = S0
0x1ea: V173 = 0x20
0x1ec: V174 = ADD 0x20 V172
0x1ed: V175 = 0x40
0x1ef: V176 = M[0x40]
0x1f2: V177 = SUB V174 V176
0x1f4: RETURN V176 V177
---
Entry stack: [V12, 0x1e3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1e3]

================================

Block 0x1f5
[0x1f5:0x1fb]
---
Predecessors: [0x3b]
Successors: [0x1fc, 0x200]
---
0x1f5 JUMPDEST
0x1f6 CALLVALUE
0x1f7 ISZERO
0x1f8 PUSH2 0x200
0x1fb JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V178 = CALLVALUE
0x1f7: V179 = ISZERO V178
0x1f8: V180 = 0x200
0x1fb: JUMPI 0x200 V179
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fc
[0x1fc:0x1ff]
---
Predecessors: [0x1f5]
Successors: []
---
0x1fc PUSH1 0x0
0x1fe DUP1
0x1ff REVERT
---
0x1fc: V181 = 0x0
0x1ff: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x200
[0x200:0x207]
---
Predecessors: [0x1f5]
Successors: [0x43c]
---
0x200 JUMPDEST
0x201 PUSH2 0x19e
0x204 PUSH2 0x43c
0x207 JUMP
---
0x200: JUMPDEST 
0x201: V182 = 0x19e
0x204: V183 = 0x43c
0x207: JUMP 0x43c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x19e]
Exit stack: [V12, 0x19e]

================================

Block 0x208
[0x208:0x209]
---
Predecessors: []
Successors: []
---
0x208 JUMPDEST
0x209 STOP
---
0x208: JUMPDEST 
0x209: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x20a
[0x20a:0x210]
---
Predecessors: [0x46]
Successors: [0x211, 0x215]
---
0x20a JUMPDEST
0x20b CALLVALUE
0x20c ISZERO
0x20d PUSH2 0x215
0x210 JUMPI
---
0x20a: JUMPDEST 
0x20b: V184 = CALLVALUE
0x20c: V185 = ISZERO V184
0x20d: V186 = 0x215
0x210: JUMPI 0x215 V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x211
[0x211:0x214]
---
Predecessors: [0x20a]
Successors: []
---
0x211 PUSH1 0x0
0x213 DUP1
0x214 REVERT
---
0x211: V187 = 0x0
0x214: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x215
[0x215:0x21c]
---
Predecessors: [0x20a]
Successors: [0x492]
---
0x215 JUMPDEST
0x216 PUSH2 0x1e3
0x219 PUSH2 0x492
0x21c JUMP
---
0x215: JUMPDEST 
0x216: V188 = 0x1e3
0x219: V189 = 0x492
0x21c: JUMP 0x492
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e3]
Exit stack: [V12, 0x1e3]

================================

Block 0x21d
[0x21d:0x22e]
---
Predecessors: []
Successors: []
---
0x21d JUMPDEST
0x21e PUSH1 0x40
0x220 MLOAD
0x221 SWAP1
0x222 DUP2
0x223 MSTORE
0x224 PUSH1 0x20
0x226 ADD
0x227 PUSH1 0x40
0x229 MLOAD
0x22a DUP1
0x22b SWAP2
0x22c SUB
0x22d SWAP1
0x22e RETURN
---
0x21d: JUMPDEST 
0x21e: V190 = 0x40
0x220: V191 = M[0x40]
0x223: M[V191] = S0
0x224: V192 = 0x20
0x226: V193 = ADD 0x20 V191
0x227: V194 = 0x40
0x229: V195 = M[0x40]
0x22c: V196 = SUB V193 V195
0x22e: RETURN V195 V196
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x22f
[0x22f:0x235]
---
Predecessors: [0x51]
Successors: [0x236, 0x23a]
---
0x22f JUMPDEST
0x230 CALLVALUE
0x231 ISZERO
0x232 PUSH2 0x23a
0x235 JUMPI
---
0x22f: JUMPDEST 
0x230: V197 = CALLVALUE
0x231: V198 = ISZERO V197
0x232: V199 = 0x23a
0x235: JUMPI 0x23a V198
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x236
[0x236:0x239]
---
Predecessors: [0x22f]
Successors: []
---
0x236 PUSH1 0x0
0x238 DUP1
0x239 REVERT
---
0x236: V200 = 0x0
0x239: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23a
[0x23a:0x24d]
---
Predecessors: [0x22f]
Successors: [0x498]
---
0x23a JUMPDEST
0x23b PUSH2 0x1e3
0x23e PUSH1 0x1
0x240 PUSH1 0xa0
0x242 PUSH1 0x2
0x244 EXP
0x245 SUB
0x246 PUSH1 0x4
0x248 CALLDATALOAD
0x249 AND
0x24a PUSH2 0x498
0x24d JUMP
---
0x23a: JUMPDEST 
0x23b: V201 = 0x1e3
0x23e: V202 = 0x1
0x240: V203 = 0xa0
0x242: V204 = 0x2
0x244: V205 = EXP 0x2 0xa0
0x245: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x246: V207 = 0x4
0x248: V208 = CALLDATALOAD 0x4
0x249: V209 = AND V208 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V210 = 0x498
0x24d: JUMP 0x498
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e3, V209]
Exit stack: [V12, 0x1e3, V209]

================================

Block 0x24e
[0x24e:0x25f]
---
Predecessors: []
Successors: []
---
0x24e JUMPDEST
0x24f PUSH1 0x40
0x251 MLOAD
0x252 SWAP1
0x253 DUP2
0x254 MSTORE
0x255 PUSH1 0x20
0x257 ADD
0x258 PUSH1 0x40
0x25a MLOAD
0x25b DUP1
0x25c SWAP2
0x25d SUB
0x25e SWAP1
0x25f RETURN
---
0x24e: JUMPDEST 
0x24f: V211 = 0x40
0x251: V212 = M[0x40]
0x254: M[V212] = S0
0x255: V213 = 0x20
0x257: V214 = ADD 0x20 V212
0x258: V215 = 0x40
0x25a: V216 = M[0x40]
0x25d: V217 = SUB V214 V216
0x25f: RETURN V216 V217
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x260
[0x260:0x266]
---
Predecessors: [0x5c]
Successors: [0x267, 0x26b]
---
0x260 JUMPDEST
0x261 CALLVALUE
0x262 ISZERO
0x263 PUSH2 0x26b
0x266 JUMPI
---
0x260: JUMPDEST 
0x261: V218 = CALLVALUE
0x262: V219 = ISZERO V218
0x263: V220 = 0x26b
0x266: JUMPI 0x26b V219
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x267
[0x267:0x26a]
---
Predecessors: [0x260]
Successors: []
---
0x267 PUSH1 0x0
0x269 DUP1
0x26a REVERT
---
0x267: V221 = 0x0
0x26a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26b
[0x26b:0x272]
---
Predecessors: [0x260]
Successors: [0x4aa]
---
0x26b JUMPDEST
0x26c PUSH2 0x273
0x26f PUSH2 0x4aa
0x272 JUMP
---
0x26b: JUMPDEST 
0x26c: V222 = 0x273
0x26f: V223 = 0x4aa
0x272: JUMP 0x4aa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x273]
Exit stack: [V12, 0x273]

================================

Block 0x273
[0x273:0x28e]
---
Predecessors: [0x4aa, 0x58f]
Successors: []
---
0x273 JUMPDEST
0x274 PUSH1 0x40
0x276 MLOAD
0x277 PUSH1 0x1
0x279 PUSH1 0xa0
0x27b PUSH1 0x2
0x27d EXP
0x27e SUB
0x27f SWAP1
0x280 SWAP2
0x281 AND
0x282 DUP2
0x283 MSTORE
0x284 PUSH1 0x20
0x286 ADD
0x287 PUSH1 0x40
0x289 MLOAD
0x28a DUP1
0x28b SWAP2
0x28c SUB
0x28d SWAP1
0x28e RETURN
---
0x273: JUMPDEST 
0x274: V224 = 0x40
0x276: V225 = M[0x40]
0x277: V226 = 0x1
0x279: V227 = 0xa0
0x27b: V228 = 0x2
0x27d: V229 = EXP 0x2 0xa0
0x27e: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x281: V231 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x283: M[V225] = V231
0x284: V232 = 0x20
0x286: V233 = ADD 0x20 V225
0x287: V234 = 0x40
0x289: V235 = M[0x40]
0x28c: V236 = SUB V233 V235
0x28e: RETURN V235 V236
---
Entry stack: [V12, 0x273, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x273]

================================

Block 0x28f
[0x28f:0x295]
---
Predecessors: [0x67]
Successors: [0x296, 0x29a]
---
0x28f JUMPDEST
0x290 CALLVALUE
0x291 ISZERO
0x292 PUSH2 0x29a
0x295 JUMPI
---
0x28f: JUMPDEST 
0x290: V237 = CALLVALUE
0x291: V238 = ISZERO V237
0x292: V239 = 0x29a
0x295: JUMPI 0x29a V238
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x296
[0x296:0x299]
---
Predecessors: [0x28f]
Successors: []
---
0x296 PUSH1 0x0
0x298 DUP1
0x299 REVERT
---
0x296: V240 = 0x0
0x299: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29a
[0x29a:0x2a1]
---
Predecessors: [0x28f]
Successors: [0x4b9]
---
0x29a JUMPDEST
0x29b PUSH2 0x19e
0x29e PUSH2 0x4b9
0x2a1 JUMP
---
0x29a: JUMPDEST 
0x29b: V241 = 0x19e
0x29e: V242 = 0x4b9
0x2a1: JUMP 0x4b9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x19e]
Exit stack: [V12, 0x19e]

================================

Block 0x2a2
[0x2a2:0x2a3]
---
Predecessors: []
Successors: []
---
0x2a2 JUMPDEST
0x2a3 STOP
---
0x2a2: JUMPDEST 
0x2a3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2a4
[0x2a4:0x2aa]
---
Predecessors: [0x72]
Successors: [0x2ab, 0x2af]
---
0x2a4 JUMPDEST
0x2a5 CALLVALUE
0x2a6 ISZERO
0x2a7 PUSH2 0x2af
0x2aa JUMPI
---
0x2a4: JUMPDEST 
0x2a5: V243 = CALLVALUE
0x2a6: V244 = ISZERO V243
0x2a7: V245 = 0x2af
0x2aa: JUMPI 0x2af V244
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ab
[0x2ab:0x2ae]
---
Predecessors: [0x2a4]
Successors: []
---
0x2ab PUSH1 0x0
0x2ad DUP1
0x2ae REVERT
---
0x2ab: V246 = 0x0
0x2ae: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2af
[0x2af:0x2b6]
---
Predecessors: [0x2a4]
Successors: [0x58f]
---
0x2af JUMPDEST
0x2b0 PUSH2 0x273
0x2b3 PUSH2 0x58f
0x2b6 JUMP
---
0x2af: JUMPDEST 
0x2b0: V247 = 0x273
0x2b3: V248 = 0x58f
0x2b6: JUMP 0x58f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x273]
Exit stack: [V12, 0x273]

================================

Block 0x2b7
[0x2b7:0x2d2]
---
Predecessors: []
Successors: []
---
0x2b7 JUMPDEST
0x2b8 PUSH1 0x40
0x2ba MLOAD
0x2bb PUSH1 0x1
0x2bd PUSH1 0xa0
0x2bf PUSH1 0x2
0x2c1 EXP
0x2c2 SUB
0x2c3 SWAP1
0x2c4 SWAP2
0x2c5 AND
0x2c6 DUP2
0x2c7 MSTORE
0x2c8 PUSH1 0x20
0x2ca ADD
0x2cb PUSH1 0x40
0x2cd MLOAD
0x2ce DUP1
0x2cf SWAP2
0x2d0 SUB
0x2d1 SWAP1
0x2d2 RETURN
---
0x2b7: JUMPDEST 
0x2b8: V249 = 0x40
0x2ba: V250 = M[0x40]
0x2bb: V251 = 0x1
0x2bd: V252 = 0xa0
0x2bf: V253 = 0x2
0x2c1: V254 = EXP 0x2 0xa0
0x2c2: V255 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c5: V256 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2c7: M[V250] = V256
0x2c8: V257 = 0x20
0x2ca: V258 = ADD 0x20 V250
0x2cb: V259 = 0x40
0x2cd: V260 = M[0x40]
0x2d0: V261 = SUB V258 V260
0x2d2: RETURN V260 V261
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d3
[0x2d3:0x2d9]
---
Predecessors: [0x7d]
Successors: [0x2da, 0x2de]
---
0x2d3 JUMPDEST
0x2d4 CALLVALUE
0x2d5 ISZERO
0x2d6 PUSH2 0x2de
0x2d9 JUMPI
---
0x2d3: JUMPDEST 
0x2d4: V262 = CALLVALUE
0x2d5: V263 = ISZERO V262
0x2d6: V264 = 0x2de
0x2d9: JUMPI 0x2de V263
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2da
[0x2da:0x2dd]
---
Predecessors: [0x2d3]
Successors: []
---
0x2da PUSH1 0x0
0x2dc DUP1
0x2dd REVERT
---
0x2da: V265 = 0x0
0x2dd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2de
[0x2de:0x2e5]
---
Predecessors: [0x2d3]
Successors: [0x59e]
---
0x2de JUMPDEST
0x2df PUSH2 0x1e3
0x2e2 PUSH2 0x59e
0x2e5 JUMP
---
0x2de: JUMPDEST 
0x2df: V266 = 0x1e3
0x2e2: V267 = 0x59e
0x2e5: JUMP 0x59e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e3]
Exit stack: [V12, 0x1e3]

================================

Block 0x2e6
[0x2e6:0x2f7]
---
Predecessors: []
Successors: []
---
0x2e6 JUMPDEST
0x2e7 PUSH1 0x40
0x2e9 MLOAD
0x2ea SWAP1
0x2eb DUP2
0x2ec MSTORE
0x2ed PUSH1 0x20
0x2ef ADD
0x2f0 PUSH1 0x40
0x2f2 MLOAD
0x2f3 DUP1
0x2f4 SWAP2
0x2f5 SUB
0x2f6 SWAP1
0x2f7 RETURN
---
0x2e6: JUMPDEST 
0x2e7: V268 = 0x40
0x2e9: V269 = M[0x40]
0x2ec: M[V269] = S0
0x2ed: V270 = 0x20
0x2ef: V271 = ADD 0x20 V269
0x2f0: V272 = 0x40
0x2f2: V273 = M[0x40]
0x2f5: V274 = SUB V271 V273
0x2f7: RETURN V273 V274
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f8
[0x2f8:0x2fe]
---
Predecessors: [0x88]
Successors: [0x2ff, 0x303]
---
0x2f8 JUMPDEST
0x2f9 CALLVALUE
0x2fa ISZERO
0x2fb PUSH2 0x303
0x2fe JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V275 = CALLVALUE
0x2fa: V276 = ISZERO V275
0x2fb: V277 = 0x303
0x2fe: JUMPI 0x303 V276
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ff
[0x2ff:0x302]
---
Predecessors: [0x2f8]
Successors: []
---
0x2ff PUSH1 0x0
0x301 DUP1
0x302 REVERT
---
0x2ff: V278 = 0x0
0x302: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x303
[0x303:0x30a]
---
Predecessors: [0x2f8]
Successors: [0x5a4]
---
0x303 JUMPDEST
0x304 PUSH2 0x1e3
0x307 PUSH2 0x5a4
0x30a JUMP
---
0x303: JUMPDEST 
0x304: V279 = 0x1e3
0x307: V280 = 0x5a4
0x30a: JUMP 0x5a4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e3]
Exit stack: [V12, 0x1e3]

================================

Block 0x30b
[0x30b:0x31c]
---
Predecessors: []
Successors: []
---
0x30b JUMPDEST
0x30c PUSH1 0x40
0x30e MLOAD
0x30f SWAP1
0x310 DUP2
0x311 MSTORE
0x312 PUSH1 0x20
0x314 ADD
0x315 PUSH1 0x40
0x317 MLOAD
0x318 DUP1
0x319 SWAP2
0x31a SUB
0x31b SWAP1
0x31c RETURN
---
0x30b: JUMPDEST 
0x30c: V281 = 0x40
0x30e: V282 = M[0x40]
0x311: M[V282] = S0
0x312: V283 = 0x20
0x314: V284 = ADD 0x20 V282
0x315: V285 = 0x40
0x317: V286 = M[0x40]
0x31a: V287 = SUB V284 V286
0x31c: RETURN V286 V287
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x31d
[0x31d:0x323]
---
Predecessors: [0x93]
Successors: [0x324, 0x328]
---
0x31d JUMPDEST
0x31e CALLVALUE
0x31f ISZERO
0x320 PUSH2 0x328
0x323 JUMPI
---
0x31d: JUMPDEST 
0x31e: V288 = CALLVALUE
0x31f: V289 = ISZERO V288
0x320: V290 = 0x328
0x323: JUMPI 0x328 V289
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x324
[0x324:0x327]
---
Predecessors: [0x31d]
Successors: []
---
0x324 PUSH1 0x0
0x326 DUP1
0x327 REVERT
---
0x324: V291 = 0x0
0x327: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x328
[0x328:0x332]
---
Predecessors: [0x31d]
Successors: [0x5aa]
---
0x328 JUMPDEST
0x329 PUSH2 0x19e
0x32c PUSH1 0x4
0x32e CALLDATALOAD
0x32f PUSH2 0x5aa
0x332 JUMP
---
0x328: JUMPDEST 
0x329: V292 = 0x19e
0x32c: V293 = 0x4
0x32e: V294 = CALLDATALOAD 0x4
0x32f: V295 = 0x5aa
0x332: JUMP 0x5aa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x19e, V294]
Exit stack: [V12, 0x19e, V294]

================================

Block 0x333
[0x333:0x334]
---
Predecessors: []
Successors: []
---
0x333 JUMPDEST
0x334 STOP
---
0x333: JUMPDEST 
0x334: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x335
[0x335:0x33b]
---
Predecessors: [0x9e]
Successors: [0x33c, 0x340]
---
0x335 JUMPDEST
0x336 CALLVALUE
0x337 ISZERO
0x338 PUSH2 0x340
0x33b JUMPI
---
0x335: JUMPDEST 
0x336: V296 = CALLVALUE
0x337: V297 = ISZERO V296
0x338: V298 = 0x340
0x33b: JUMPI 0x340 V297
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33c
[0x33c:0x33f]
---
Predecessors: [0x335]
Successors: []
---
0x33c PUSH1 0x0
0x33e DUP1
0x33f REVERT
---
0x33c: V299 = 0x0
0x33f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x340
[0x340:0x353]
---
Predecessors: [0x335]
Successors: [0x5cf]
---
0x340 JUMPDEST
0x341 PUSH2 0x19e
0x344 PUSH1 0x1
0x346 PUSH1 0xa0
0x348 PUSH1 0x2
0x34a EXP
0x34b SUB
0x34c PUSH1 0x4
0x34e CALLDATALOAD
0x34f AND
0x350 PUSH2 0x5cf
0x353 JUMP
---
0x340: JUMPDEST 
0x341: V300 = 0x19e
0x344: V301 = 0x1
0x346: V302 = 0xa0
0x348: V303 = 0x2
0x34a: V304 = EXP 0x2 0xa0
0x34b: V305 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34c: V306 = 0x4
0x34e: V307 = CALLDATALOAD 0x4
0x34f: V308 = AND V307 0xffffffffffffffffffffffffffffffffffffffff
0x350: V309 = 0x5cf
0x353: JUMP 0x5cf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x19e, V308]
Exit stack: [V12, 0x19e, V308]

================================

Block 0x354
[0x354:0x355]
---
Predecessors: []
Successors: []
---
0x354 JUMPDEST
0x355 STOP
---
0x354: JUMPDEST 
0x355: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x356
[0x356:0x35c]
---
Predecessors: [0xa9]
Successors: [0x35d, 0x361]
---
0x356 JUMPDEST
0x357 CALLVALUE
0x358 ISZERO
0x359 PUSH2 0x361
0x35c JUMPI
---
0x356: JUMPDEST 
0x357: V310 = CALLVALUE
0x358: V311 = ISZERO V310
0x359: V312 = 0x361
0x35c: JUMPI 0x361 V311
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35d
[0x35d:0x360]
---
Predecessors: [0x356]
Successors: []
---
0x35d PUSH1 0x0
0x35f DUP1
0x360 REVERT
---
0x35d: V313 = 0x0
0x360: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x361
[0x361:0x36b]
---
Predecessors: [0x356]
Successors: [0x627]
---
0x361 JUMPDEST
0x362 PUSH2 0x19e
0x365 PUSH1 0x4
0x367 CALLDATALOAD
0x368 PUSH2 0x627
0x36b JUMP
---
0x361: JUMPDEST 
0x362: V314 = 0x19e
0x365: V315 = 0x4
0x367: V316 = CALLDATALOAD 0x4
0x368: V317 = 0x627
0x36b: JUMP 0x627
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x19e, V316]
Exit stack: [V12, 0x19e, V316]

================================

Block 0x36c
[0x36c:0x36d]
---
Predecessors: []
Successors: []
---
0x36c JUMPDEST
0x36d STOP
---
0x36c: JUMPDEST 
0x36d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x36e
[0x36e:0x384]
---
Predecessors: [0x1ab]
Successors: [0x385, 0x389]
---
0x36e JUMPDEST
0x36f PUSH1 0x0
0x371 SLOAD
0x372 CALLER
0x373 PUSH1 0x1
0x375 PUSH1 0xa0
0x377 PUSH1 0x2
0x379 EXP
0x37a SUB
0x37b SWAP1
0x37c DUP2
0x37d AND
0x37e SWAP2
0x37f AND
0x380 EQ
0x381 PUSH2 0x389
0x384 JUMPI
---
0x36e: JUMPDEST 
0x36f: V318 = 0x0
0x371: V319 = S[0x0]
0x372: V320 = CALLER
0x373: V321 = 0x1
0x375: V322 = 0xa0
0x377: V323 = 0x2
0x379: V324 = EXP 0x2 0xa0
0x37a: V325 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37d: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x37f: V327 = AND V319 0xffffffffffffffffffffffffffffffffffffffff
0x380: V328 = EQ V327 V326
0x381: V329 = 0x389
0x384: JUMPI 0x389 V328
---
Entry stack: [V12, 0x19e, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V155]

================================

Block 0x385
[0x385:0x388]
---
Predecessors: [0x36e]
Successors: []
---
0x385 PUSH1 0x0
0x387 DUP1
0x388 REVERT
---
0x385: V330 = 0x0
0x388: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V155]

================================

Block 0x389
[0x389:0x38e]
---
Predecessors: [0x36e]
Successors: [0x38f]
---
0x389 JUMPDEST
0x38a PUSH1 0x1
0x38c DUP2
0x38d SWAP1
0x38e SSTORE
---
0x389: JUMPDEST 
0x38a: V331 = 0x1
0x38e: S[0x1] = V155
---
Entry stack: [V12, 0x19e, V155]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x19e, V155]

================================

Block 0x38f
[0x38f:0x38f]
---
Predecessors: [0x389, 0x5ea]
Successors: [0x390]
---
0x38f JUMPDEST
---
0x38f: JUMPDEST 
---
Entry stack: [V12, 0x19e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, S0]

================================

Block 0x390
[0x390:0x392]
---
Predecessors: [0x38f]
Successors: [0x19e]
---
0x390 JUMPDEST
0x391 POP
0x392 JUMP
---
0x390: JUMPDEST 
0x392: JUMP 0x19e
---
Entry stack: [V12, 0x19e, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x393
[0x393:0x3a9]
---
Predecessors: [0x1c3]
Successors: [0x3aa, 0x3ae]
---
0x393 JUMPDEST
0x394 PUSH1 0x0
0x396 SLOAD
0x397 CALLER
0x398 PUSH1 0x1
0x39a PUSH1 0xa0
0x39c PUSH1 0x2
0x39e EXP
0x39f SUB
0x3a0 SWAP1
0x3a1 DUP2
0x3a2 AND
0x3a3 SWAP2
0x3a4 AND
0x3a5 EQ
0x3a6 PUSH2 0x3ae
0x3a9 JUMPI
---
0x393: JUMPDEST 
0x394: V332 = 0x0
0x396: V333 = S[0x0]
0x397: V334 = CALLER
0x398: V335 = 0x1
0x39a: V336 = 0xa0
0x39c: V337 = 0x2
0x39e: V338 = EXP 0x2 0xa0
0x39f: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a2: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x3a4: V341 = AND V333 0xffffffffffffffffffffffffffffffffffffffff
0x3a5: V342 = EQ V341 V340
0x3a6: V343 = 0x3ae
0x3a9: JUMPI 0x3ae V342
---
Entry stack: [V12, 0x19e, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V163]

================================

Block 0x3aa
[0x3aa:0x3ad]
---
Predecessors: [0x393]
Successors: []
---
0x3aa PUSH1 0x0
0x3ac DUP1
0x3ad REVERT
---
0x3aa: V344 = 0x0
0x3ad: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V163]

================================

Block 0x3ae
[0x3ae:0x411]
---
Predecessors: [0x393]
Successors: [0x412, 0x416]
---
0x3ae JUMPDEST
0x3af PUSH1 0x6
0x3b1 SLOAD
0x3b2 PUSH1 0x0
0x3b4 DUP1
0x3b5 SLOAD
0x3b6 PUSH1 0x1
0x3b8 PUSH1 0xa0
0x3ba PUSH1 0x2
0x3bc EXP
0x3bd SUB
0x3be SWAP3
0x3bf DUP4
0x3c0 AND
0x3c1 SWAP3
0x3c2 PUSH4 0xa9059cbb
0x3c7 SWAP3
0x3c8 SWAP2
0x3c9 AND
0x3ca SWAP1
0x3cb DUP5
0x3cc SWAP1
0x3cd PUSH1 0x40
0x3cf MLOAD
0x3d0 PUSH1 0x20
0x3d2 ADD
0x3d3 MSTORE
0x3d4 PUSH1 0x40
0x3d6 MLOAD
0x3d7 PUSH1 0xe0
0x3d9 PUSH1 0x2
0x3db EXP
0x3dc PUSH4 0xffffffff
0x3e1 DUP6
0x3e2 AND
0x3e3 MUL
0x3e4 DUP2
0x3e5 MSTORE
0x3e6 PUSH1 0x1
0x3e8 PUSH1 0xa0
0x3ea PUSH1 0x2
0x3ec EXP
0x3ed SUB
0x3ee SWAP1
0x3ef SWAP3
0x3f0 AND
0x3f1 PUSH1 0x4
0x3f3 DUP4
0x3f4 ADD
0x3f5 MSTORE
0x3f6 PUSH1 0x24
0x3f8 DUP3
0x3f9 ADD
0x3fa MSTORE
0x3fb PUSH1 0x44
0x3fd ADD
0x3fe PUSH1 0x20
0x400 PUSH1 0x40
0x402 MLOAD
0x403 DUP1
0x404 DUP4
0x405 SUB
0x406 DUP2
0x407 PUSH1 0x0
0x409 DUP8
0x40a DUP1
0x40b EXTCODESIZE
0x40c ISZERO
0x40d ISZERO
0x40e PUSH2 0x416
0x411 JUMPI
---
0x3ae: JUMPDEST 
0x3af: V345 = 0x6
0x3b1: V346 = S[0x6]
0x3b2: V347 = 0x0
0x3b5: V348 = S[0x0]
0x3b6: V349 = 0x1
0x3b8: V350 = 0xa0
0x3ba: V351 = 0x2
0x3bc: V352 = EXP 0x2 0xa0
0x3bd: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c0: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x3c2: V355 = 0xa9059cbb
0x3c9: V356 = AND V348 0xffffffffffffffffffffffffffffffffffffffff
0x3cd: V357 = 0x40
0x3cf: V358 = M[0x40]
0x3d0: V359 = 0x20
0x3d2: V360 = ADD 0x20 V358
0x3d3: M[V360] = 0x0
0x3d4: V361 = 0x40
0x3d6: V362 = M[0x40]
0x3d7: V363 = 0xe0
0x3d9: V364 = 0x2
0x3db: V365 = EXP 0x2 0xe0
0x3dc: V366 = 0xffffffff
0x3e2: V367 = AND 0xa9059cbb 0xffffffff
0x3e3: V368 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x3e5: M[V362] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3e6: V369 = 0x1
0x3e8: V370 = 0xa0
0x3ea: V371 = 0x2
0x3ec: V372 = EXP 0x2 0xa0
0x3ed: V373 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f0: V374 = AND V356 0xffffffffffffffffffffffffffffffffffffffff
0x3f1: V375 = 0x4
0x3f4: V376 = ADD V362 0x4
0x3f5: M[V376] = V374
0x3f6: V377 = 0x24
0x3f9: V378 = ADD V362 0x24
0x3fa: M[V378] = V163
0x3fb: V379 = 0x44
0x3fd: V380 = ADD 0x44 V362
0x3fe: V381 = 0x20
0x400: V382 = 0x40
0x402: V383 = M[0x40]
0x405: V384 = SUB V380 V383
0x407: V385 = 0x0
0x40b: V386 = EXTCODESIZE V354
0x40c: V387 = ISZERO V386
0x40d: V388 = ISZERO V387
0x40e: V389 = 0x416
0x411: JUMPI 0x416 V388
---
Entry stack: [V12, 0x19e, V163]
Stack pops: 1
Stack additions: [S0, V354, 0xa9059cbb, V380, 0x20, V383, V384, V383, 0x0, V354]
Exit stack: [V12, 0x19e, V163, V354, 0xa9059cbb, V380, 0x20, V383, V384, V383, 0x0, V354]

================================

Block 0x412
[0x412:0x415]
---
Predecessors: [0x3ae]
Successors: []
---
0x412 PUSH1 0x0
0x414 DUP1
0x415 REVERT
---
0x412: V390 = 0x0
0x415: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e, V163, V354, 0xa9059cbb, V380, 0x20, V383, V384, V383, 0x0, V354]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V163, V354, 0xa9059cbb, V380, 0x20, V383, V384, V383, 0x0, V354]

================================

Block 0x416
[0x416:0x422]
---
Predecessors: [0x3ae]
Successors: [0x423, 0x427]
---
0x416 JUMPDEST
0x417 PUSH2 0x2c6
0x41a GAS
0x41b SUB
0x41c CALL
0x41d ISZERO
0x41e ISZERO
0x41f PUSH2 0x427
0x422 JUMPI
---
0x416: JUMPDEST 
0x417: V391 = 0x2c6
0x41a: V392 = GAS
0x41b: V393 = SUB V392 0x2c6
0x41c: V394 = CALL V393 V354 0x0 V383 V384 V383 0x20
0x41d: V395 = ISZERO V394
0x41e: V396 = ISZERO V395
0x41f: V397 = 0x427
0x422: JUMPI 0x427 V396
---
Entry stack: [V12, 0x19e, V163, V354, 0xa9059cbb, V380, 0x20, V383, V384, V383, 0x0, V354]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x19e, V163, V354, 0xa9059cbb, V380]

================================

Block 0x423
[0x423:0x426]
---
Predecessors: [0x416]
Successors: []
---
0x423 PUSH1 0x0
0x425 DUP1
0x426 REVERT
---
0x423: V398 = 0x0
0x426: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e, V163, V354, 0xa9059cbb, V380]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V163, V354, 0xa9059cbb, V380]

================================

Block 0x427
[0x427:0x431]
---
Predecessors: [0x416]
Successors: [0x432]
---
0x427 JUMPDEST
0x428 POP
0x429 POP
0x42a POP
0x42b PUSH1 0x40
0x42d MLOAD
0x42e DUP1
0x42f MLOAD
0x430 POP
0x431 POP
---
0x427: JUMPDEST 
0x42b: V399 = 0x40
0x42d: V400 = M[0x40]
0x42f: V401 = M[V400]
---
Entry stack: [V12, 0x19e, V163, V354, 0xa9059cbb, V380]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x19e, V163]

================================

Block 0x432
[0x432:0x432]
---
Predecessors: [0x427]
Successors: [0x433]
---
0x432 JUMPDEST
---
0x432: JUMPDEST 
---
Entry stack: [V12, 0x19e, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V163]

================================

Block 0x433
[0x433:0x435]
---
Predecessors: [0x432]
Successors: [0x19e]
---
0x433 JUMPDEST
0x434 POP
0x435 JUMP
---
0x433: JUMPDEST 
0x435: JUMP 0x19e
---
Entry stack: [V12, 0x19e, V163]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x436
[0x436:0x43b]
---
Predecessors: [0x1db]
Successors: [0x1e3]
---
0x436 JUMPDEST
0x437 PUSH1 0x1
0x439 SLOAD
0x43a DUP2
0x43b JUMP
---
0x436: JUMPDEST 
0x437: V402 = 0x1
0x439: V403 = S[0x1]
0x43b: JUMP 0x1e3
---
Entry stack: [V12, 0x1e3]
Stack pops: 1
Stack additions: [S0, V403]
Exit stack: [V12, 0x1e3, V403]

================================

Block 0x43c
[0x43c:0x452]
---
Predecessors: [0x200]
Successors: [0x453, 0x457]
---
0x43c JUMPDEST
0x43d PUSH1 0x0
0x43f SLOAD
0x440 CALLER
0x441 PUSH1 0x1
0x443 PUSH1 0xa0
0x445 PUSH1 0x2
0x447 EXP
0x448 SUB
0x449 SWAP1
0x44a DUP2
0x44b AND
0x44c SWAP2
0x44d AND
0x44e EQ
0x44f PUSH2 0x457
0x452 JUMPI
---
0x43c: JUMPDEST 
0x43d: V404 = 0x0
0x43f: V405 = S[0x0]
0x440: V406 = CALLER
0x441: V407 = 0x1
0x443: V408 = 0xa0
0x445: V409 = 0x2
0x447: V410 = EXP 0x2 0xa0
0x448: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44b: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x44d: V413 = AND V405 0xffffffffffffffffffffffffffffffffffffffff
0x44e: V414 = EQ V413 V412
0x44f: V415 = 0x457
0x452: JUMPI 0x457 V414
---
Entry stack: [V12, 0x19e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e]

================================

Block 0x453
[0x453:0x456]
---
Predecessors: [0x43c]
Successors: []
---
0x453 PUSH1 0x0
0x455 DUP1
0x456 REVERT
---
0x453: V416 = 0x0
0x456: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e]

================================

Block 0x457
[0x457:0x489]
---
Predecessors: [0x43c]
Successors: [0x48a, 0x48e]
---
0x457 JUMPDEST
0x458 PUSH1 0x0
0x45a PUSH1 0x4
0x45c DUP2
0x45d SWAP1
0x45e SSTORE
0x45f DUP1
0x460 SLOAD
0x461 PUSH1 0x1
0x463 PUSH1 0xa0
0x465 PUSH1 0x2
0x467 EXP
0x468 SUB
0x469 AND
0x46a SWAP1
0x46b PUSH2 0x8fc
0x46e SWAP1
0x46f PUSH1 0x40
0x471 MLOAD
0x472 PUSH1 0x0
0x474 PUSH1 0x40
0x476 MLOAD
0x477 DUP1
0x478 DUP4
0x479 SUB
0x47a DUP2
0x47b DUP6
0x47c DUP9
0x47d DUP9
0x47e CALL
0x47f SWAP4
0x480 POP
0x481 POP
0x482 POP
0x483 POP
0x484 ISZERO
0x485 ISZERO
0x486 PUSH2 0x48e
0x489 JUMPI
---
0x457: JUMPDEST 
0x458: V417 = 0x0
0x45a: V418 = 0x4
0x45e: S[0x4] = 0x0
0x460: V419 = S[0x0]
0x461: V420 = 0x1
0x463: V421 = 0xa0
0x465: V422 = 0x2
0x467: V423 = EXP 0x2 0xa0
0x468: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x469: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V419
0x46b: V426 = 0x8fc
0x46f: V427 = 0x40
0x471: V428 = M[0x40]
0x472: V429 = 0x0
0x474: V430 = 0x40
0x476: V431 = M[0x40]
0x479: V432 = SUB V428 V431
0x47e: V433 = CALL 0x8fc V425 0x0 V431 V432 V431 0x0
0x484: V434 = ISZERO V433
0x485: V435 = ISZERO V434
0x486: V436 = 0x48e
0x489: JUMPI 0x48e V435
---
Entry stack: [V12, 0x19e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e]

================================

Block 0x48a
[0x48a:0x48d]
---
Predecessors: [0x457]
Successors: []
---
0x48a PUSH1 0x0
0x48c DUP1
0x48d REVERT
---
0x48a: V437 = 0x0
0x48d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e]

================================

Block 0x48e
[0x48e:0x48e]
---
Predecessors: [0x457, 0x54a]
Successors: [0x48f]
---
0x48e JUMPDEST
---
0x48e: JUMPDEST 
---
Entry stack: [V12, 0x19e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e]

================================

Block 0x48f
[0x48f:0x48f]
---
Predecessors: [0x48e]
Successors: [0x490]
---
0x48f JUMPDEST
---
0x48f: JUMPDEST 
---
Entry stack: [V12, 0x19e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e]

================================

Block 0x490
[0x490:0x491]
---
Predecessors: [0x48f]
Successors: [0x19e]
---
0x490 JUMPDEST
0x491 JUMP
---
0x490: JUMPDEST 
0x491: JUMP 0x19e
---
Entry stack: [V12, 0x19e]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x492
[0x492:0x497]
---
Predecessors: [0x215]
Successors: [0x1e3]
---
0x492 JUMPDEST
0x493 PUSH1 0x2
0x495 SLOAD
0x496 DUP2
0x497 JUMP
---
0x492: JUMPDEST 
0x493: V438 = 0x2
0x495: V439 = S[0x2]
0x497: JUMP 0x1e3
---
Entry stack: [V12, 0x1e3]
Stack pops: 1
Stack additions: [S0, V439]
Exit stack: [V12, 0x1e3, V439]

================================

Block 0x498
[0x498:0x4a9]
---
Predecessors: [0x23a]
Successors: [0x1e3]
---
0x498 JUMPDEST
0x499 PUSH1 0x5
0x49b PUSH1 0x20
0x49d MSTORE
0x49e PUSH1 0x0
0x4a0 SWAP1
0x4a1 DUP2
0x4a2 MSTORE
0x4a3 PUSH1 0x40
0x4a5 SWAP1
0x4a6 SHA3
0x4a7 SLOAD
0x4a8 DUP2
0x4a9 JUMP
---
0x498: JUMPDEST 
0x499: V440 = 0x5
0x49b: V441 = 0x20
0x49d: M[0x20] = 0x5
0x49e: V442 = 0x0
0x4a2: M[0x0] = V209
0x4a3: V443 = 0x40
0x4a6: V444 = SHA3 0x0 0x40
0x4a7: V445 = S[V444]
0x4a9: JUMP 0x1e3
---
Entry stack: [V12, 0x1e3, V209]
Stack pops: 2
Stack additions: [S1, V445]
Exit stack: [V12, 0x1e3, V445]

================================

Block 0x4aa
[0x4aa:0x4b8]
---
Predecessors: [0x26b]
Successors: [0x273]
---
0x4aa JUMPDEST
0x4ab PUSH1 0x0
0x4ad SLOAD
0x4ae PUSH1 0x1
0x4b0 PUSH1 0xa0
0x4b2 PUSH1 0x2
0x4b4 EXP
0x4b5 SUB
0x4b6 AND
0x4b7 DUP2
0x4b8 JUMP
---
0x4aa: JUMPDEST 
0x4ab: V446 = 0x0
0x4ad: V447 = S[0x0]
0x4ae: V448 = 0x1
0x4b0: V449 = 0xa0
0x4b2: V450 = 0x2
0x4b4: V451 = EXP 0x2 0xa0
0x4b5: V452 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b6: V453 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x4b8: JUMP 0x273
---
Entry stack: [V12, 0x273]
Stack pops: 1
Stack additions: [S0, V453]
Exit stack: [V12, 0x273, V453]

================================

Block 0x4b9
[0x4b9:0x50f]
---
Predecessors: [0x29a]
Successors: [0x510, 0x514]
---
0x4b9 JUMPDEST
0x4ba PUSH1 0x6
0x4bc SLOAD
0x4bd PUSH1 0x0
0x4bf SWAP1
0x4c0 PUSH1 0x1
0x4c2 PUSH1 0xa0
0x4c4 PUSH1 0x2
0x4c6 EXP
0x4c7 SUB
0x4c8 AND
0x4c9 PUSH4 0x70a08231
0x4ce ADDRESS
0x4cf DUP4
0x4d0 PUSH1 0x40
0x4d2 MLOAD
0x4d3 PUSH1 0x20
0x4d5 ADD
0x4d6 MSTORE
0x4d7 PUSH1 0x40
0x4d9 MLOAD
0x4da PUSH1 0xe0
0x4dc PUSH1 0x2
0x4de EXP
0x4df PUSH4 0xffffffff
0x4e4 DUP5
0x4e5 AND
0x4e6 MUL
0x4e7 DUP2
0x4e8 MSTORE
0x4e9 PUSH1 0x1
0x4eb PUSH1 0xa0
0x4ed PUSH1 0x2
0x4ef EXP
0x4f0 SUB
0x4f1 SWAP1
0x4f2 SWAP2
0x4f3 AND
0x4f4 PUSH1 0x4
0x4f6 DUP3
0x4f7 ADD
0x4f8 MSTORE
0x4f9 PUSH1 0x24
0x4fb ADD
0x4fc PUSH1 0x20
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 DUP1
0x502 DUP4
0x503 SUB
0x504 DUP2
0x505 PUSH1 0x0
0x507 DUP8
0x508 DUP1
0x509 EXTCODESIZE
0x50a ISZERO
0x50b ISZERO
0x50c PUSH2 0x514
0x50f JUMPI
---
0x4b9: JUMPDEST 
0x4ba: V454 = 0x6
0x4bc: V455 = S[0x6]
0x4bd: V456 = 0x0
0x4c0: V457 = 0x1
0x4c2: V458 = 0xa0
0x4c4: V459 = 0x2
0x4c6: V460 = EXP 0x2 0xa0
0x4c7: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c8: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x4c9: V463 = 0x70a08231
0x4ce: V464 = ADDRESS
0x4d0: V465 = 0x40
0x4d2: V466 = M[0x40]
0x4d3: V467 = 0x20
0x4d5: V468 = ADD 0x20 V466
0x4d6: M[V468] = 0x0
0x4d7: V469 = 0x40
0x4d9: V470 = M[0x40]
0x4da: V471 = 0xe0
0x4dc: V472 = 0x2
0x4de: V473 = EXP 0x2 0xe0
0x4df: V474 = 0xffffffff
0x4e5: V475 = AND 0x70a08231 0xffffffff
0x4e6: V476 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x4e8: M[V470] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4e9: V477 = 0x1
0x4eb: V478 = 0xa0
0x4ed: V479 = 0x2
0x4ef: V480 = EXP 0x2 0xa0
0x4f0: V481 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f3: V482 = AND V464 0xffffffffffffffffffffffffffffffffffffffff
0x4f4: V483 = 0x4
0x4f7: V484 = ADD V470 0x4
0x4f8: M[V484] = V482
0x4f9: V485 = 0x24
0x4fb: V486 = ADD 0x24 V470
0x4fc: V487 = 0x20
0x4fe: V488 = 0x40
0x500: V489 = M[0x40]
0x503: V490 = SUB V486 V489
0x505: V491 = 0x0
0x509: V492 = EXTCODESIZE V462
0x50a: V493 = ISZERO V492
0x50b: V494 = ISZERO V493
0x50c: V495 = 0x514
0x50f: JUMPI 0x514 V494
---
Entry stack: [V12, 0x19e]
Stack pops: 0
Stack additions: [0x0, V462, 0x70a08231, V486, 0x20, V489, V490, V489, 0x0, V462]
Exit stack: [V12, 0x19e, 0x0, V462, 0x70a08231, V486, 0x20, V489, V490, V489, 0x0, V462]

================================

Block 0x510
[0x510:0x513]
---
Predecessors: [0x4b9]
Successors: []
---
0x510 PUSH1 0x0
0x512 DUP1
0x513 REVERT
---
0x510: V496 = 0x0
0x513: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e, 0x0, V462, 0x70a08231, V486, 0x20, V489, V490, V489, 0x0, V462]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, 0x0, V462, 0x70a08231, V486, 0x20, V489, V490, V489, 0x0, V462]

================================

Block 0x514
[0x514:0x520]
---
Predecessors: [0x4b9]
Successors: [0x521, 0x525]
---
0x514 JUMPDEST
0x515 PUSH2 0x2c6
0x518 GAS
0x519 SUB
0x51a CALL
0x51b ISZERO
0x51c ISZERO
0x51d PUSH2 0x525
0x520 JUMPI
---
0x514: JUMPDEST 
0x515: V497 = 0x2c6
0x518: V498 = GAS
0x519: V499 = SUB V498 0x2c6
0x51a: V500 = CALL V499 V462 0x0 V489 V490 V489 0x20
0x51b: V501 = ISZERO V500
0x51c: V502 = ISZERO V501
0x51d: V503 = 0x525
0x520: JUMPI 0x525 V502
---
Entry stack: [V12, 0x19e, 0x0, V462, 0x70a08231, V486, 0x20, V489, V490, V489, 0x0, V462]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x19e, 0x0, V462, 0x70a08231, V486]

================================

Block 0x521
[0x521:0x524]
---
Predecessors: [0x514]
Successors: []
---
0x521 PUSH1 0x0
0x523 DUP1
0x524 REVERT
---
0x521: V504 = 0x0
0x524: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e, 0x0, V462, 0x70a08231, V486]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, 0x0, V462, 0x70a08231, V486]

================================

Block 0x525
[0x525:0x536]
---
Predecessors: [0x514]
Successors: [0x537, 0x53b]
---
0x525 JUMPDEST
0x526 POP
0x527 POP
0x528 POP
0x529 PUSH1 0x40
0x52b MLOAD
0x52c DUP1
0x52d MLOAD
0x52e SWAP1
0x52f POP
0x530 GT
0x531 ISZERO
0x532 ISZERO
0x533 PUSH2 0x53b
0x536 JUMPI
---
0x525: JUMPDEST 
0x529: V505 = 0x40
0x52b: V506 = M[0x40]
0x52d: V507 = M[V506]
0x530: V508 = GT V507 0x0
0x531: V509 = ISZERO V508
0x532: V510 = ISZERO V509
0x533: V511 = 0x53b
0x536: JUMPI 0x53b V510
---
Entry stack: [V12, 0x19e, 0x0, V462, 0x70a08231, V486]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x19e]

================================

Block 0x537
[0x537:0x53a]
---
Predecessors: [0x525]
Successors: []
---
0x537 PUSH1 0x0
0x539 DUP1
0x53a REVERT
---
0x537: V512 = 0x0
0x53a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e]

================================

Block 0x53b
[0x53b:0x545]
---
Predecessors: [0x525]
Successors: [0x546, 0x54a]
---
0x53b JUMPDEST
0x53c PUSH1 0x2
0x53e SLOAD
0x53f TIMESTAMP
0x540 LT
0x541 ISZERO
0x542 PUSH2 0x54a
0x545 JUMPI
---
0x53b: JUMPDEST 
0x53c: V513 = 0x2
0x53e: V514 = S[0x2]
0x53f: V515 = TIMESTAMP
0x540: V516 = LT V515 V514
0x541: V517 = ISZERO V516
0x542: V518 = 0x54a
0x545: JUMPI 0x54a V517
---
Entry stack: [V12, 0x19e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e]

================================

Block 0x546
[0x546:0x549]
---
Predecessors: [0x53b]
Successors: []
---
0x546 PUSH1 0x0
0x548 DUP1
0x549 REVERT
---
0x546: V519 = 0x0
0x549: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e]

================================

Block 0x54a
[0x54a:0x585]
---
Predecessors: [0x53b]
Successors: [0x48e, 0x586]
---
0x54a JUMPDEST
0x54b PUSH1 0x1
0x54d PUSH1 0xa0
0x54f PUSH1 0x2
0x551 EXP
0x552 SUB
0x553 CALLER
0x554 AND
0x555 PUSH1 0x0
0x557 DUP2
0x558 DUP2
0x559 MSTORE
0x55a PUSH1 0x5
0x55c PUSH1 0x20
0x55e MSTORE
0x55f PUSH1 0x40
0x561 SWAP1
0x562 DUP2
0x563 SWAP1
0x564 SHA3
0x565 SLOAD
0x566 DUP1
0x567 ISZERO
0x568 PUSH2 0x8fc
0x56b MUL
0x56c SWAP2
0x56d MLOAD
0x56e PUSH1 0x0
0x570 PUSH1 0x40
0x572 MLOAD
0x573 DUP1
0x574 DUP4
0x575 SUB
0x576 DUP2
0x577 DUP6
0x578 DUP9
0x579 DUP9
0x57a CALL
0x57b SWAP4
0x57c POP
0x57d POP
0x57e POP
0x57f POP
0x580 ISZERO
0x581 ISZERO
0x582 PUSH2 0x48e
0x585 JUMPI
---
0x54a: JUMPDEST 
0x54b: V520 = 0x1
0x54d: V521 = 0xa0
0x54f: V522 = 0x2
0x551: V523 = EXP 0x2 0xa0
0x552: V524 = SUB 0x10000000000000000000000000000000000000000 0x1
0x553: V525 = CALLER
0x554: V526 = AND V525 0xffffffffffffffffffffffffffffffffffffffff
0x555: V527 = 0x0
0x559: M[0x0] = V526
0x55a: V528 = 0x5
0x55c: V529 = 0x20
0x55e: M[0x20] = 0x5
0x55f: V530 = 0x40
0x564: V531 = SHA3 0x0 0x40
0x565: V532 = S[V531]
0x567: V533 = ISZERO V532
0x568: V534 = 0x8fc
0x56b: V535 = MUL 0x8fc V533
0x56d: V536 = M[0x40]
0x56e: V537 = 0x0
0x570: V538 = 0x40
0x572: V539 = M[0x40]
0x575: V540 = SUB V536 V539
0x57a: V541 = CALL V535 V526 V532 V539 V540 V539 0x0
0x580: V542 = ISZERO V541
0x581: V543 = ISZERO V542
0x582: V544 = 0x48e
0x585: JUMPI 0x48e V543
---
Entry stack: [V12, 0x19e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e]

================================

Block 0x586
[0x586:0x589]
---
Predecessors: [0x54a]
Successors: []
---
0x586 PUSH1 0x0
0x588 DUP1
0x589 REVERT
---
0x586: V545 = 0x0
0x589: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e]

================================

Block 0x58a
[0x58a:0x58a]
---
Predecessors: []
Successors: [0x58b]
---
0x58a JUMPDEST
---
0x58a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x58b
[0x58b:0x58b]
---
Predecessors: [0x58a]
Successors: [0x58c]
---
0x58b JUMPDEST
---
0x58b: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x58c
[0x58c:0x58c]
---
Predecessors: [0x58b]
Successors: [0x58d]
---
0x58c JUMPDEST
---
0x58c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x58d
[0x58d:0x58e]
---
Predecessors: [0x58c]
Successors: []
Has unresolved jump.
---
0x58d JUMPDEST
0x58e JUMP
---
0x58d: JUMPDEST 
0x58e: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x58f
[0x58f:0x59d]
---
Predecessors: [0x2af]
Successors: [0x273]
---
0x58f JUMPDEST
0x590 PUSH1 0x6
0x592 SLOAD
0x593 PUSH1 0x1
0x595 PUSH1 0xa0
0x597 PUSH1 0x2
0x599 EXP
0x59a SUB
0x59b AND
0x59c DUP2
0x59d JUMP
---
0x58f: JUMPDEST 
0x590: V546 = 0x6
0x592: V547 = S[0x6]
0x593: V548 = 0x1
0x595: V549 = 0xa0
0x597: V550 = 0x2
0x599: V551 = EXP 0x2 0xa0
0x59a: V552 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59b: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x59d: JUMP 0x273
---
Entry stack: [V12, 0x273]
Stack pops: 1
Stack additions: [S0, V553]
Exit stack: [V12, 0x273, V553]

================================

Block 0x59e
[0x59e:0x5a3]
---
Predecessors: [0x2de]
Successors: [0x1e3]
---
0x59e JUMPDEST
0x59f PUSH1 0x4
0x5a1 SLOAD
0x5a2 DUP2
0x5a3 JUMP
---
0x59e: JUMPDEST 
0x59f: V554 = 0x4
0x5a1: V555 = S[0x4]
0x5a3: JUMP 0x1e3
---
Entry stack: [V12, 0x1e3]
Stack pops: 1
Stack additions: [S0, V555]
Exit stack: [V12, 0x1e3, V555]

================================

Block 0x5a4
[0x5a4:0x5a9]
---
Predecessors: [0x303]
Successors: [0x1e3]
---
0x5a4 JUMPDEST
0x5a5 PUSH1 0x3
0x5a7 SLOAD
0x5a8 DUP2
0x5a9 JUMP
---
0x5a4: JUMPDEST 
0x5a5: V556 = 0x3
0x5a7: V557 = S[0x3]
0x5a9: JUMP 0x1e3
---
Entry stack: [V12, 0x1e3]
Stack pops: 1
Stack additions: [S0, V557]
Exit stack: [V12, 0x1e3, V557]

================================

Block 0x5aa
[0x5aa:0x5c0]
---
Predecessors: [0x328]
Successors: [0x5c1, 0x5c5]
---
0x5aa JUMPDEST
0x5ab PUSH1 0x0
0x5ad SLOAD
0x5ae CALLER
0x5af PUSH1 0x1
0x5b1 PUSH1 0xa0
0x5b3 PUSH1 0x2
0x5b5 EXP
0x5b6 SUB
0x5b7 SWAP1
0x5b8 DUP2
0x5b9 AND
0x5ba SWAP2
0x5bb AND
0x5bc EQ
0x5bd PUSH2 0x5c5
0x5c0 JUMPI
---
0x5aa: JUMPDEST 
0x5ab: V558 = 0x0
0x5ad: V559 = S[0x0]
0x5ae: V560 = CALLER
0x5af: V561 = 0x1
0x5b1: V562 = 0xa0
0x5b3: V563 = 0x2
0x5b5: V564 = EXP 0x2 0xa0
0x5b6: V565 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b9: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V560
0x5bb: V567 = AND V559 0xffffffffffffffffffffffffffffffffffffffff
0x5bc: V568 = EQ V567 V566
0x5bd: V569 = 0x5c5
0x5c0: JUMPI 0x5c5 V568
---
Entry stack: [V12, 0x19e, V294]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V294]

================================

Block 0x5c1
[0x5c1:0x5c4]
---
Predecessors: [0x5aa]
Successors: []
---
0x5c1 PUSH1 0x0
0x5c3 DUP1
0x5c4 REVERT
---
0x5c1: V570 = 0x0
0x5c4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e, V294]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V294]

================================

Block 0x5c5
[0x5c5:0x5ca]
---
Predecessors: [0x5aa]
Successors: [0x5cb]
---
0x5c5 JUMPDEST
0x5c6 PUSH1 0x3
0x5c8 DUP2
0x5c9 SWAP1
0x5ca SSTORE
---
0x5c5: JUMPDEST 
0x5c6: V571 = 0x3
0x5ca: S[0x3] = V294
---
Entry stack: [V12, 0x19e, V294]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x19e, V294]

================================

Block 0x5cb
[0x5cb:0x5cb]
---
Predecessors: [0x5c5]
Successors: [0x5cc]
---
0x5cb JUMPDEST
---
0x5cb: JUMPDEST 
---
Entry stack: [V12, 0x19e, V294]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V294]

================================

Block 0x5cc
[0x5cc:0x5ce]
---
Predecessors: [0x5cb]
Successors: [0x19e]
---
0x5cc JUMPDEST
0x5cd POP
0x5ce JUMP
---
0x5cc: JUMPDEST 
0x5ce: JUMP 0x19e
---
Entry stack: [V12, 0x19e, V294]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x5cf
[0x5cf:0x5e5]
---
Predecessors: [0x340]
Successors: [0x5e6, 0x5ea]
---
0x5cf JUMPDEST
0x5d0 PUSH1 0x0
0x5d2 SLOAD
0x5d3 CALLER
0x5d4 PUSH1 0x1
0x5d6 PUSH1 0xa0
0x5d8 PUSH1 0x2
0x5da EXP
0x5db SUB
0x5dc SWAP1
0x5dd DUP2
0x5de AND
0x5df SWAP2
0x5e0 AND
0x5e1 EQ
0x5e2 PUSH2 0x5ea
0x5e5 JUMPI
---
0x5cf: JUMPDEST 
0x5d0: V572 = 0x0
0x5d2: V573 = S[0x0]
0x5d3: V574 = CALLER
0x5d4: V575 = 0x1
0x5d6: V576 = 0xa0
0x5d8: V577 = 0x2
0x5da: V578 = EXP 0x2 0xa0
0x5db: V579 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5de: V580 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0x5e0: V581 = AND V573 0xffffffffffffffffffffffffffffffffffffffff
0x5e1: V582 = EQ V581 V580
0x5e2: V583 = 0x5ea
0x5e5: JUMPI 0x5ea V582
---
Entry stack: [V12, 0x19e, V308]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V308]

================================

Block 0x5e6
[0x5e6:0x5e9]
---
Predecessors: [0x5cf]
Successors: []
---
0x5e6 PUSH1 0x0
0x5e8 DUP1
0x5e9 REVERT
---
0x5e6: V584 = 0x0
0x5e9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e, V308]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V308]

================================

Block 0x5ea
[0x5ea:0x5f9]
---
Predecessors: [0x5cf]
Successors: [0x38f, 0x5fa]
---
0x5ea JUMPDEST
0x5eb PUSH1 0x1
0x5ed PUSH1 0xa0
0x5ef PUSH1 0x2
0x5f1 EXP
0x5f2 SUB
0x5f3 DUP2
0x5f4 AND
0x5f5 ISZERO
0x5f6 PUSH2 0x38f
0x5f9 JUMPI
---
0x5ea: JUMPDEST 
0x5eb: V585 = 0x1
0x5ed: V586 = 0xa0
0x5ef: V587 = 0x2
0x5f1: V588 = EXP 0x2 0xa0
0x5f2: V589 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f4: V590 = AND V308 0xffffffffffffffffffffffffffffffffffffffff
0x5f5: V591 = ISZERO V590
0x5f6: V592 = 0x38f
0x5f9: JUMPI 0x38f V591
---
Entry stack: [V12, 0x19e, V308]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x19e, V308]

================================

Block 0x5fa
[0x5fa:0x621]
---
Predecessors: [0x5ea]
Successors: [0x622]
---
0x5fa PUSH1 0x0
0x5fc DUP1
0x5fd SLOAD
0x5fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x613 NOT
0x614 AND
0x615 PUSH1 0x1
0x617 PUSH1 0xa0
0x619 PUSH1 0x2
0x61b EXP
0x61c SUB
0x61d DUP4
0x61e AND
0x61f OR
0x620 SWAP1
0x621 SSTORE
---
0x5fa: V593 = 0x0
0x5fd: V594 = S[0x0]
0x5fe: V595 = 0xffffffffffffffffffffffffffffffffffffffff
0x613: V596 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x614: V597 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V594
0x615: V598 = 0x1
0x617: V599 = 0xa0
0x619: V600 = 0x2
0x61b: V601 = EXP 0x2 0xa0
0x61c: V602 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61e: V603 = AND V308 0xffffffffffffffffffffffffffffffffffffffff
0x61f: V604 = OR V603 V597
0x621: S[0x0] = V604
---
Entry stack: [V12, 0x19e, V308]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x19e, V308]

================================

Block 0x622
[0x622:0x622]
---
Predecessors: [0x5fa]
Successors: [0x623]
---
0x622 JUMPDEST
---
0x622: JUMPDEST 
---
Entry stack: [V12, 0x19e, V308]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V308]

================================

Block 0x623
[0x623:0x623]
---
Predecessors: [0x622]
Successors: [0x624]
---
0x623 JUMPDEST
---
0x623: JUMPDEST 
---
Entry stack: [V12, 0x19e, V308]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V308]

================================

Block 0x624
[0x624:0x626]
---
Predecessors: [0x623]
Successors: [0x19e]
---
0x624 JUMPDEST
0x625 POP
0x626 JUMP
---
0x624: JUMPDEST 
0x626: JUMP 0x19e
---
Entry stack: [V12, 0x19e, V308]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x627
[0x627:0x63d]
---
Predecessors: [0x361]
Successors: [0x63e, 0x642]
---
0x627 JUMPDEST
0x628 PUSH1 0x0
0x62a SLOAD
0x62b CALLER
0x62c PUSH1 0x1
0x62e PUSH1 0xa0
0x630 PUSH1 0x2
0x632 EXP
0x633 SUB
0x634 SWAP1
0x635 DUP2
0x636 AND
0x637 SWAP2
0x638 AND
0x639 EQ
0x63a PUSH2 0x642
0x63d JUMPI
---
0x627: JUMPDEST 
0x628: V605 = 0x0
0x62a: V606 = S[0x0]
0x62b: V607 = CALLER
0x62c: V608 = 0x1
0x62e: V609 = 0xa0
0x630: V610 = 0x2
0x632: V611 = EXP 0x2 0xa0
0x633: V612 = SUB 0x10000000000000000000000000000000000000000 0x1
0x636: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0x638: V614 = AND V606 0xffffffffffffffffffffffffffffffffffffffff
0x639: V615 = EQ V614 V613
0x63a: V616 = 0x642
0x63d: JUMPI 0x642 V615
---
Entry stack: [V12, 0x19e, V316]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V316]

================================

Block 0x63e
[0x63e:0x641]
---
Predecessors: [0x627]
Successors: []
---
0x63e PUSH1 0x0
0x640 DUP1
0x641 REVERT
---
0x63e: V617 = 0x0
0x641: REVERT 0x0 0x0
---
Entry stack: [V12, 0x19e, V316]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V316]

================================

Block 0x642
[0x642:0x647]
---
Predecessors: [0x627]
Successors: [0x648]
---
0x642 JUMPDEST
0x643 PUSH1 0x2
0x645 DUP2
0x646 SWAP1
0x647 SSTORE
---
0x642: JUMPDEST 
0x643: V618 = 0x2
0x647: S[0x2] = V316
---
Entry stack: [V12, 0x19e, V316]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x19e, V316]

================================

Block 0x648
[0x648:0x648]
---
Predecessors: [0x642]
Successors: [0x649]
---
0x648 JUMPDEST
---
0x648: JUMPDEST 
---
Entry stack: [V12, 0x19e, V316]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x19e, V316]

================================

Block 0x649
[0x649:0x64b]
---
Predecessors: [0x648]
Successors: [0x19e]
---
0x649 JUMPDEST
0x64a POP
0x64b JUMP
---
0x649: JUMPDEST 
0x64b: JUMP 0x19e
---
Entry stack: [V12, 0x19e, V316]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x64c
[0x64c:0x685]
---
Predecessors: []
Successors: []
---
0x64c STOP
0x64d LOG1
0x64e PUSH6 0x627a7a723058
0x655 SHA3
0x656 MISSING 0xfb
0x657 SLOAD
0x658 MSTORE
0x659 EXTCODEHASH
0x65a MISSING 0xd2
0x65b MOD
0x65c SIGNEXTEND
0x65d BYTE
0x65e MISSING 0x24
0x65f CALLVALUE
0x660 MISSING 0x28
0x661 SWAP5
0x662 DUP13
0x663 SWAP7
0x664 BYTE
0x665 MISSING 0xd8
0x666 MISSING 0xb4
0x667 MISSING 0xe3
0x668 MISSING 0xcc
0x669 PUSH6 0x8c6f118c3510
0x670 PUSH21 0xae08a47b1d0029
---
0x64c: STOP 
0x64d: LOG S0 S1 S2
0x64e: V619 = 0x627a7a723058
0x655: V620 = SHA3 0x627a7a723058 S3
0x656: MISSING 0xfb
0x657: V621 = S[S0]
0x658: M[V621] = S1
0x659: V622 = EXTCODEHASH S2
0x65a: MISSING 0xd2
0x65b: V623 = MOD S0 S1
0x65c: V624 = SIGNEXTEND V623 S2
0x65d: V625 = BYTE V624 S3
0x65e: MISSING 0x24
0x65f: V626 = CALLVALUE
0x660: MISSING 0x28
0x664: V627 = BYTE S6 S5
0x665: MISSING 0xd8
0x666: MISSING 0xb4
0x667: MISSING 0xe3
0x668: MISSING 0xcc
0x669: V628 = 0x8c6f118c3510
0x670: V629 = 0xae08a47b1d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V620, V622, V625, V626, V627, S1, S2, S3, S4, S0, S12, S7, S8, S9, S10, S11, S12, 0xae08a47b1d0029, 0x8c6f118c3510]
Exit stack: []

================================

Function 0:
Public function signature: 0xe78501f
Entry block: 0x1a0
Exit block: 0x19e
Body: 0x19e, 0x1a0, 0x1a7, 0x1ab, 0x36e, 0x385, 0x389, 0x38f, 0x390

Function 1:
Public function signature: 0x162bc80c
Entry block: 0x1b8
Exit block: 0x19e
Body: 0x19e, 0x1b8, 0x1bf, 0x1c3, 0x393, 0x3aa, 0x3ae, 0x412, 0x416, 0x423, 0x427, 0x432, 0x433

Function 2:
Public function signature: 0x1ffe4cca
Entry block: 0x1d0
Exit block: 0x1e3
Body: 0x1d0, 0x1d7, 0x1db, 0x1e3, 0x436

Function 3:
Public function signature: 0x29a5c0f4
Entry block: 0x1f5
Exit block: 0x19e
Body: 0x19e, 0x1f5, 0x1fc, 0x200, 0x43c, 0x453, 0x457, 0x48a, 0x48e, 0x48f, 0x490

Function 4:
Public function signature: 0x29dcb0cf
Entry block: 0x20a
Exit block: 0x1e3
Body: 0x1e3, 0x20a, 0x211, 0x215, 0x492

Function 5:
Public function signature: 0x2ae8b4a3
Entry block: 0x22f
Exit block: 0x1e3
Body: 0x1e3, 0x22f, 0x236, 0x23a, 0x498

Function 6:
Public function signature: 0x38af3eed
Entry block: 0x260
Exit block: 0x273
Body: 0x260, 0x267, 0x26b, 0x273, 0x4aa

Function 7:
Public function signature: 0x5d268629
Entry block: 0x28f
Exit block: 0x19e
Body: 0x19e, 0x28f, 0x296, 0x29a, 0x48e, 0x48f, 0x490, 0x4b9, 0x510, 0x514, 0x521, 0x525, 0x537, 0x53b, 0x546, 0x54a, 0x586

Function 8:
Public function signature: 0x6e66f6e9
Entry block: 0x2a4
Exit block: 0x273
Body: 0x273, 0x2a4, 0x2ab, 0x2af, 0x58f

Function 9:
Public function signature: 0x7b3e5e7b
Entry block: 0x2d3
Exit block: 0x1e3
Body: 0x1e3, 0x2d3, 0x2da, 0x2de, 0x59e

Function 10:
Public function signature: 0xa035b1fe
Entry block: 0x2f8
Exit block: 0x1e3
Body: 0x1e3, 0x2f8, 0x2ff, 0x303, 0x5a4

Function 11:
Public function signature: 0xc47af5cf
Entry block: 0x31d
Exit block: 0x19e
Body: 0x19e, 0x31d, 0x324, 0x328, 0x5aa, 0x5c1, 0x5c5, 0x5cb, 0x5cc

Function 12:
Public function signature: 0xf2fde38b
Entry block: 0x335
Exit block: 0x19e
Body: 0x19e, 0x335, 0x33c, 0x340, 0x38f, 0x390, 0x5cf, 0x5e6, 0x5ea, 0x5fa, 0x622, 0x623, 0x624

Function 13:
Public function signature: 0xf72f6826
Entry block: 0x356
Exit block: 0x19e
Body: 0x19e, 0x356, 0x35d, 0x361, 0x627, 0x63e, 0x642, 0x648, 0x649

Function 14:
Public fallback function
Entry block: 0xb4
Exit block: 0x19e
Body: 0xb4, 0xb8, 0xc7, 0xcb, 0xd5, 0xd9, 0xe7, 0xeb, 0xff, 0x100, 0x17a, 0x17e, 0x18b, 0x18f, 0x19a, 0x19e

