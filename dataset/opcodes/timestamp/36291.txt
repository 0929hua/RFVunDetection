Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6c
0xa: JUMPI 0x6c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x82]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x1cb3b20
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x82
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x1cb3b20
0x1a: V12 = EQ V10 0x1cb3b20
0x1b: V13 = 0x82
0x1e: JUMPI 0x82 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x131]
---
0x1f DUP1
0x20 PUSH4 0x29dcb0cf
0x25 EQ
0x26 PUSH2 0x131
0x29 JUMPI
---
0x20: V14 = 0x29dcb0cf
0x25: V15 = EQ 0x29dcb0cf V10
0x26: V16 = 0x131
0x29: JUMPI 0x131 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x13a]
---
0x2a DUP1
0x2b PUSH4 0x38af3eed
0x30 EQ
0x31 PUSH2 0x13a
0x34 JUMPI
---
0x2b: V17 = 0x38af3eed
0x30: V18 = EQ 0x38af3eed V10
0x31: V19 = 0x13a
0x34: JUMPI 0x13a V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x14c]
---
0x35 DUP1
0x36 PUSH4 0x6e66f6e9
0x3b EQ
0x3c PUSH2 0x14c
0x3f JUMPI
---
0x36: V20 = 0x6e66f6e9
0x3b: V21 = EQ 0x6e66f6e9 V10
0x3c: V22 = 0x14c
0x3f: JUMPI 0x14c V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x15e]
---
0x40 DUP1
0x41 PUSH4 0x7a3a0e84
0x46 EQ
0x47 PUSH2 0x15e
0x4a JUMPI
---
0x41: V23 = 0x7a3a0e84
0x46: V24 = EQ 0x7a3a0e84 V10
0x47: V25 = 0x15e
0x4a: JUMPI 0x15e V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x167]
---
0x4b DUP1
0x4c PUSH4 0x7b3e5e7b
0x51 EQ
0x52 PUSH2 0x167
0x55 JUMPI
---
0x4c: V26 = 0x7b3e5e7b
0x51: V27 = EQ 0x7b3e5e7b V10
0x52: V28 = 0x167
0x55: JUMPI 0x167 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x170]
---
0x56 DUP1
0x57 PUSH4 0xa035b1fe
0x5c EQ
0x5d PUSH2 0x170
0x60 JUMPI
---
0x57: V29 = 0xa035b1fe
0x5c: V30 = EQ 0xa035b1fe V10
0x5d: V31 = 0x170
0x60: JUMPI 0x170 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x179]
---
0x61 DUP1
0x62 PUSH4 0xdc0d3dff
0x67 EQ
0x68 PUSH2 0x179
0x6b JUMPI
---
0x62: V32 = 0xdc0d3dff
0x67: V33 = EQ 0xdc0d3dff V10
0x68: V34 = 0x179
0x6b: JUMPI 0x179 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x7d]
---
Predecessors: [0x0, 0x61]
Successors: [0x7e, 0x310]
---
0x6c JUMPDEST
0x6d PUSH2 0x1ed
0x70 PUSH1 0x7
0x72 SLOAD
0x73 PUSH1 0x0
0x75 SWAP1
0x76 PUSH1 0xff
0x78 AND
0x79 ISZERO
0x7a PUSH2 0x310
0x7d JUMPI
---
0x6c: JUMPDEST 
0x6d: V35 = 0x1ed
0x70: V36 = 0x7
0x72: V37 = S[0x7]
0x73: V38 = 0x0
0x76: V39 = 0xff
0x78: V40 = AND 0xff V37
0x79: V41 = ISZERO V40
0x7a: V42 = 0x310
0x7d: JUMPI 0x310 V41
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ed, 0x0]
Exit stack: [V10, 0x1ed, 0x0]

================================

Block 0x7e
[0x7e:0x81]
---
Predecessors: [0x6c]
Successors: []
---
0x7e PUSH2 0x2
0x81 JUMP
---
0x7e: V43 = 0x2
0x81: THROW 
---
Entry stack: [V10, 0x1ed, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ed, 0x0]

================================

Block 0x82
[0x82:0x91]
---
Predecessors: [0xb]
Successors: [0x92, 0x30d]
---
0x82 JUMPDEST
0x83 PUSH2 0x1ed
0x86 PUSH1 0x3
0x88 SLOAD
0x89 PUSH1 0x0
0x8b SWAP1
0x8c TIMESTAMP
0x8d LT
0x8e PUSH2 0x30d
0x91 JUMPI
---
0x82: JUMPDEST 
0x83: V44 = 0x1ed
0x86: V45 = 0x3
0x88: V46 = S[0x3]
0x89: V47 = 0x0
0x8c: V48 = TIMESTAMP
0x8d: V49 = LT V48 V46
0x8e: V50 = 0x30d
0x91: JUMPI 0x30d V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ed, 0x0]
Exit stack: [V10, 0x1ed, 0x0]

================================

Block 0x92
[0x92:0x9d]
---
Predecessors: [0x82]
Successors: [0x9e, 0x3b8]
---
0x92 PUSH1 0x2
0x94 SLOAD
0x95 PUSH1 0x1
0x97 SLOAD
0x98 SWAP1
0x99 LT
0x9a PUSH2 0x3b8
0x9d JUMPI
---
0x92: V51 = 0x2
0x94: V52 = S[0x2]
0x95: V53 = 0x1
0x97: V54 = S[0x1]
0x99: V55 = LT V52 V54
0x9a: V56 = 0x3b8
0x9d: JUMPI 0x3b8 V55
---
Entry stack: [V10, 0x1ed, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ed, 0x0]

================================

Block 0x9e
[0x9e:0xfa]
---
Predecessors: [0x92]
Successors: [0xfb]
---
0x9e PUSH1 0x2
0xa0 SLOAD
0xa1 DUP2
0xa2 SLOAD
0xa3 PUSH1 0x1
0xa5 PUSH1 0xa0
0xa7 PUSH1 0x2
0xa9 EXP
0xaa SUB
0xab AND
0xac SWAP1
0xad DUP3
0xae SWAP1
0xaf PUSH1 0x60
0xb1 DUP3
0xb2 DUP2
0xb3 DUP2
0xb4 DUP2
0xb5 DUP6
0xb6 DUP9
0xb7 DUP4
0xb8 CALL
0xb9 POP
0xba PUSH1 0x40
0xbc DUP1
0xbd MLOAD
0xbe SWAP5
0xbf DUP6
0xc0 MSTORE
0xc1 PUSH1 0x20
0xc3 DUP6
0xc4 ADD
0xc5 SWAP3
0xc6 SWAP1
0xc7 SWAP3
0xc8 MSTORE
0xc9 DUP4
0xca DUP3
0xcb ADD
0xcc SWAP3
0xcd SWAP1
0xce SWAP3
0xcf MSTORE
0xd0 MLOAD
0xd1 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0xf2 SWAP3
0xf3 DUP2
0xf4 SWAP1
0xf5 SUB
0xf6 SWAP1
0xf7 SWAP2
0xf8 ADD
0xf9 SWAP1
0xfa LOG1
---
0x9e: V57 = 0x2
0xa0: V58 = S[0x2]
0xa2: V59 = S[0x0]
0xa3: V60 = 0x1
0xa5: V61 = 0xa0
0xa7: V62 = 0x2
0xa9: V63 = EXP 0x2 0xa0
0xaa: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xaf: V66 = 0x60
0xb8: V67 = CALL 0x0 V65 V58 0x60 0x0 0x60 0x0
0xba: V68 = 0x40
0xbd: V69 = M[0x40]
0xc0: M[V69] = V65
0xc1: V70 = 0x20
0xc4: V71 = ADD V69 0x20
0xc8: M[V71] = V58
0xcb: V72 = ADD 0x40 V69
0xcf: M[V72] = 0x0
0xd0: V73 = M[0x40]
0xd1: V74 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0xf5: V75 = SUB V69 V73
0xf8: V76 = ADD 0x60 V75
0xfa: LOG V73 V76 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, 0x1ed, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1ed, 0x0]

================================

Block 0xfb
[0xfb:0x130]
---
Predecessors: [0x9e, 0x3b9]
Successors: [0x1ed]
---
0xfb JUMPDEST
0xfc PUSH1 0x40
0xfe MLOAD
0xff PUSH1 0x0
0x101 DUP1
0x102 SLOAD
0x103 PUSH1 0x1
0x105 PUSH1 0xa0
0x107 PUSH1 0x2
0x109 EXP
0x10a SUB
0x10b SWAP1
0x10c DUP2
0x10d AND
0x10e SWAP3
0x10f ADDRESS
0x110 SWAP1
0x111 SWAP2
0x112 AND
0x113 BALANCE
0x114 SWAP1
0x115 DUP3
0x116 DUP2
0x117 DUP2
0x118 DUP2
0x119 DUP6
0x11a DUP9
0x11b DUP4
0x11c CALL
0x11d POP
0x11e POP
0x11f PUSH1 0x7
0x121 DUP1
0x122 SLOAD
0x123 PUSH1 0xff
0x125 NOT
0x126 AND
0x127 PUSH1 0x1
0x129 OR
0x12a SWAP1
0x12b SSTORE
0x12c POP
0x12d POP
0x12e POP
0x12f POP
0x130 JUMP
---
0xfb: JUMPDEST 
0xfc: V77 = 0x40
0xfe: V78 = M[0x40]
0xff: V79 = 0x0
0x102: V80 = S[0x0]
0x103: V81 = 0x1
0x105: V82 = 0xa0
0x107: V83 = 0x2
0x109: V84 = EXP 0x2 0xa0
0x10a: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10d: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x10f: V87 = ADDRESS
0x112: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x113: V89 = BALANCE V88
0x11c: V90 = CALL 0x0 V86 V89 V78 0x0 V78 0x0
0x11f: V91 = 0x7
0x122: V92 = S[0x7]
0x123: V93 = 0xff
0x125: V94 = NOT 0xff
0x126: V95 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V92
0x127: V96 = 0x1
0x129: V97 = OR 0x1 V95
0x12b: S[0x7] = V97
0x130: JUMP 0x1ed
---
Entry stack: [V10, 0x1ed, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x131
[0x131:0x139]
---
Predecessors: [0x1f]
Successors: [0x38e]
---
0x131 JUMPDEST
0x132 PUSH2 0x38e
0x135 PUSH1 0x3
0x137 SLOAD
0x138 DUP2
0x139 JUMP
---
0x131: JUMPDEST 
0x132: V98 = 0x38e
0x135: V99 = 0x3
0x137: V100 = S[0x3]
0x139: JUMP 0x38e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x38e, V100]
Exit stack: [V10, 0x38e, V100]

================================

Block 0x13a
[0x13a:0x14b]
---
Predecessors: [0x2a]
Successors: [0x398]
---
0x13a JUMPDEST
0x13b PUSH2 0x398
0x13e PUSH1 0x0
0x140 SLOAD
0x141 PUSH1 0x1
0x143 PUSH1 0xa0
0x145 PUSH1 0x2
0x147 EXP
0x148 SUB
0x149 AND
0x14a DUP2
0x14b JUMP
---
0x13a: JUMPDEST 
0x13b: V101 = 0x398
0x13e: V102 = 0x0
0x140: V103 = S[0x0]
0x141: V104 = 0x1
0x143: V105 = 0xa0
0x145: V106 = 0x2
0x147: V107 = EXP 0x2 0xa0
0x148: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x149: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x14b: JUMP 0x398
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x398, V109]
Exit stack: [V10, 0x398, V109]

================================

Block 0x14c
[0x14c:0x15d]
---
Predecessors: [0x35]
Successors: [0x398]
---
0x14c JUMPDEST
0x14d PUSH2 0x398
0x150 PUSH1 0x5
0x152 SLOAD
0x153 PUSH1 0x1
0x155 PUSH1 0xa0
0x157 PUSH1 0x2
0x159 EXP
0x15a SUB
0x15b AND
0x15c DUP2
0x15d JUMP
---
0x14c: JUMPDEST 
0x14d: V110 = 0x398
0x150: V111 = 0x5
0x152: V112 = S[0x5]
0x153: V113 = 0x1
0x155: V114 = 0xa0
0x157: V115 = 0x2
0x159: V116 = EXP 0x2 0xa0
0x15a: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15b: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x15d: JUMP 0x398
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x398, V118]
Exit stack: [V10, 0x398, V118]

================================

Block 0x15e
[0x15e:0x166]
---
Predecessors: [0x40]
Successors: [0x38e]
---
0x15e JUMPDEST
0x15f PUSH2 0x38e
0x162 PUSH1 0x1
0x164 SLOAD
0x165 DUP2
0x166 JUMP
---
0x15e: JUMPDEST 
0x15f: V119 = 0x38e
0x162: V120 = 0x1
0x164: V121 = S[0x1]
0x166: JUMP 0x38e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x38e, V121]
Exit stack: [V10, 0x38e, V121]

================================

Block 0x167
[0x167:0x16f]
---
Predecessors: [0x4b]
Successors: [0x38e]
---
0x167 JUMPDEST
0x168 PUSH2 0x38e
0x16b PUSH1 0x2
0x16d SLOAD
0x16e DUP2
0x16f JUMP
---
0x167: JUMPDEST 
0x168: V122 = 0x38e
0x16b: V123 = 0x2
0x16d: V124 = S[0x2]
0x16f: JUMP 0x38e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x38e, V124]
Exit stack: [V10, 0x38e, V124]

================================

Block 0x170
[0x170:0x178]
---
Predecessors: [0x56]
Successors: [0x38e]
---
0x170 JUMPDEST
0x171 PUSH2 0x38e
0x174 PUSH1 0x4
0x176 SLOAD
0x177 DUP2
0x178 JUMP
---
0x170: JUMPDEST 
0x171: V125 = 0x38e
0x174: V126 = 0x4
0x176: V127 = S[0x4]
0x178: JUMP 0x38e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x38e, V127]
Exit stack: [V10, 0x38e, V127]

================================

Block 0x179
[0x179:0x18c]
---
Predecessors: [0x61]
Successors: [0x18d]
---
0x179 JUMPDEST
0x17a PUSH2 0x3ab
0x17d PUSH1 0x4
0x17f CALLDATALOAD
0x180 PUSH1 0x6
0x182 DUP1
0x183 SLOAD
0x184 DUP3
0x185 SWAP1
0x186 DUP2
0x187 LT
0x188 ISZERO
0x189 PUSH2 0x2
0x18c JUMPI
---
0x179: JUMPDEST 
0x17a: V128 = 0x3ab
0x17d: V129 = 0x4
0x17f: V130 = CALLDATALOAD 0x4
0x180: V131 = 0x6
0x183: V132 = S[0x6]
0x187: V133 = LT V130 V132
0x188: V134 = ISZERO V133
0x189: V135 = 0x2
0x18c: THROWI V134
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3ab, V130, 0x6, V130]
Exit stack: [V10, 0x3ab, V130, 0x6, V130]

================================

Block 0x18d
[0x18d:0x1ec]
---
Predecessors: [0x179]
Successors: [0x3ab]
---
0x18d POP
0x18e PUSH1 0x0
0x190 MSTORE
0x191 PUSH1 0x2
0x193 MUL
0x194 PUSH32 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f
0x1b5 DUP2
0x1b6 ADD
0x1b7 SLOAD
0x1b8 PUSH32 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40
0x1d9 SWAP2
0x1da SWAP1
0x1db SWAP2
0x1dc ADD
0x1dd SLOAD
0x1de PUSH1 0x1
0x1e0 PUSH1 0xa0
0x1e2 PUSH1 0x2
0x1e4 EXP
0x1e5 SUB
0x1e6 SWAP2
0x1e7 SWAP1
0x1e8 SWAP2
0x1e9 AND
0x1ea SWAP1
0x1eb DUP3
0x1ec JUMP
---
0x18e: V136 = 0x0
0x190: M[0x0] = 0x6
0x191: V137 = 0x2
0x193: V138 = MUL 0x2 V130
0x194: V139 = 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f
0x1b6: V140 = ADD V138 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f
0x1b7: V141 = S[V140]
0x1b8: V142 = 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40
0x1dc: V143 = ADD 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40 V138
0x1dd: V144 = S[V143]
0x1de: V145 = 0x1
0x1e0: V146 = 0xa0
0x1e2: V147 = 0x2
0x1e4: V148 = EXP 0x2 0xa0
0x1e5: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e9: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x1ec: JUMP 0x3ab
---
Entry stack: [V10, 0x3ab, V130, 0x6, V130]
Stack pops: 4
Stack additions: [S3, V150, V144]
Exit stack: [V10, 0x3ab, V150, V144]

================================

Block 0x1ed
[0x1ed:0x1ee]
---
Predecessors: [0xfb, 0x30d]
Successors: []
---
0x1ed JUMPDEST
0x1ee STOP
---
0x1ed: JUMPDEST 
0x1ee: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ef
[0x1ef:0x1fb]
---
Predecessors: [0x310, 0x38a]
Successors: [0x1fc]
---
0x1ef JUMPDEST
0x1f0 POP
0x1f1 POP
0x1f2 POP
0x1f3 DUP2
0x1f4 SLOAD
0x1f5 DUP2
0x1f6 LT
0x1f7 ISZERO
0x1f8 PUSH2 0x2
0x1fb JUMPI
---
0x1ef: JUMPDEST 
0x1f4: V151 = S[0x6]
0x1f6: V152 = LT V270 V151
0x1f7: V153 = ISZERO V152
0x1f8: V154 = 0x2
0x1fb: THROWI V153
---
Entry stack: [V10, 0x1ed, V267, 0x60, 0x6, V270, 0x6, V272, S0]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V10, 0x1ed, V267, 0x60, 0x6, V270]

================================

Block 0x1fc
[0x1fc:0x2bf]
---
Predecessors: [0x1ef]
Successors: [0x2c0]
---
0x1fc SWAP1
0x1fd PUSH1 0x0
0x1ff MSTORE
0x200 PUSH1 0x20
0x202 PUSH1 0x0
0x204 SHA3
0x205 SWAP1
0x206 PUSH1 0x2
0x208 MUL
0x209 ADD
0x20a PUSH1 0x0
0x20c POP
0x20d PUSH1 0x0
0x20f DUP3
0x210 ADD
0x211 MLOAD
0x212 DUP2
0x213 PUSH1 0x0
0x215 ADD
0x216 PUSH1 0x0
0x218 PUSH2 0x100
0x21b EXP
0x21c DUP2
0x21d SLOAD
0x21e DUP2
0x21f PUSH1 0x1
0x221 PUSH1 0xa0
0x223 PUSH1 0x2
0x225 EXP
0x226 SUB
0x227 MUL
0x228 NOT
0x229 AND
0x22a SWAP1
0x22b DUP4
0x22c MUL
0x22d OR
0x22e SWAP1
0x22f SSTORE
0x230 POP
0x231 PUSH1 0x20
0x233 DUP3
0x234 ADD
0x235 MLOAD
0x236 DUP2
0x237 PUSH1 0x1
0x239 ADD
0x23a PUSH1 0x0
0x23c POP
0x23d SSTORE
0x23e SWAP1
0x23f POP
0x240 POP
0x241 DUP1
0x242 PUSH1 0x2
0x244 PUSH1 0x0
0x246 DUP3
0x247 DUP3
0x248 DUP3
0x249 POP
0x24a SLOAD
0x24b ADD
0x24c SWAP3
0x24d POP
0x24e POP
0x24f DUP2
0x250 SWAP1
0x251 SSTORE
0x252 POP
0x253 PUSH1 0x5
0x255 PUSH1 0x0
0x257 SWAP1
0x258 SLOAD
0x259 SWAP1
0x25a PUSH2 0x100
0x25d EXP
0x25e SWAP1
0x25f DIV
0x260 PUSH1 0x1
0x262 PUSH1 0xa0
0x264 PUSH1 0x2
0x266 EXP
0x267 SUB
0x268 AND
0x269 PUSH1 0x1
0x26b PUSH1 0xa0
0x26d PUSH1 0x2
0x26f EXP
0x270 SUB
0x271 AND
0x272 PUSH4 0xa9059cbb
0x277 CALLER
0x278 PUSH1 0x4
0x27a PUSH1 0x0
0x27c POP
0x27d SLOAD
0x27e DUP5
0x27f DIV
0x280 PUSH1 0x40
0x282 MLOAD
0x283 DUP4
0x284 PUSH1 0xe0
0x286 PUSH1 0x2
0x288 EXP
0x289 MUL
0x28a DUP2
0x28b MSTORE
0x28c PUSH1 0x4
0x28e ADD
0x28f DUP1
0x290 DUP4
0x291 PUSH1 0x1
0x293 PUSH1 0xa0
0x295 PUSH1 0x2
0x297 EXP
0x298 SUB
0x299 AND
0x29a DUP2
0x29b MSTORE
0x29c PUSH1 0x20
0x29e ADD
0x29f DUP3
0x2a0 DUP2
0x2a1 MSTORE
0x2a2 PUSH1 0x20
0x2a4 ADD
0x2a5 SWAP3
0x2a6 POP
0x2a7 POP
0x2a8 POP
0x2a9 PUSH1 0x0
0x2ab PUSH1 0x40
0x2ad MLOAD
0x2ae DUP1
0x2af DUP4
0x2b0 SUB
0x2b1 DUP2
0x2b2 PUSH1 0x0
0x2b4 DUP8
0x2b5 PUSH2 0x61da
0x2b8 GAS
0x2b9 SUB
0x2ba CALL
0x2bb ISZERO
0x2bc PUSH2 0x2
0x2bf JUMPI
---
0x1fd: V155 = 0x0
0x1ff: M[0x0] = 0x6
0x200: V156 = 0x20
0x202: V157 = 0x0
0x204: V158 = SHA3 0x0 0x20
0x206: V159 = 0x2
0x208: V160 = MUL 0x2 V270
0x209: V161 = ADD V160 V158
0x20a: V162 = 0x0
0x20d: V163 = 0x0
0x210: V164 = ADD 0x60 0x0
0x211: V165 = M[0x60]
0x213: V166 = 0x0
0x215: V167 = ADD 0x0 V161
0x216: V168 = 0x0
0x218: V169 = 0x100
0x21b: V170 = EXP 0x100 0x0
0x21d: V171 = S[V167]
0x21f: V172 = 0x1
0x221: V173 = 0xa0
0x223: V174 = 0x2
0x225: V175 = EXP 0x2 0xa0
0x226: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x227: V177 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x228: V178 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x229: V179 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V171
0x22c: V180 = MUL V165 0x1
0x22d: V181 = OR V180 V179
0x22f: S[V167] = V181
0x231: V182 = 0x20
0x234: V183 = ADD 0x60 0x20
0x235: V184 = M[0x80]
0x237: V185 = 0x1
0x239: V186 = ADD 0x1 V161
0x23a: V187 = 0x0
0x23d: S[V186] = V184
0x242: V188 = 0x2
0x244: V189 = 0x0
0x24a: V190 = S[0x2]
0x24b: V191 = ADD V190 V267
0x251: S[0x2] = V191
0x253: V192 = 0x5
0x255: V193 = 0x0
0x258: V194 = S[0x5]
0x25a: V195 = 0x100
0x25d: V196 = EXP 0x100 0x0
0x25f: V197 = DIV V194 0x1
0x260: V198 = 0x1
0x262: V199 = 0xa0
0x264: V200 = 0x2
0x266: V201 = EXP 0x2 0xa0
0x267: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x268: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x269: V204 = 0x1
0x26b: V205 = 0xa0
0x26d: V206 = 0x2
0x26f: V207 = EXP 0x2 0xa0
0x270: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x271: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x272: V210 = 0xa9059cbb
0x277: V211 = CALLER
0x278: V212 = 0x4
0x27a: V213 = 0x0
0x27d: V214 = S[0x4]
0x27f: V215 = DIV V267 V214
0x280: V216 = 0x40
0x282: V217 = M[0x40]
0x284: V218 = 0xe0
0x286: V219 = 0x2
0x288: V220 = EXP 0x2 0xe0
0x289: V221 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x28b: M[V217] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x28c: V222 = 0x4
0x28e: V223 = ADD 0x4 V217
0x291: V224 = 0x1
0x293: V225 = 0xa0
0x295: V226 = 0x2
0x297: V227 = EXP 0x2 0xa0
0x298: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x299: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x29b: M[V223] = V229
0x29c: V230 = 0x20
0x29e: V231 = ADD 0x20 V223
0x2a1: M[V231] = V215
0x2a2: V232 = 0x20
0x2a4: V233 = ADD 0x20 V231
0x2a9: V234 = 0x0
0x2ab: V235 = 0x40
0x2ad: V236 = M[0x40]
0x2b0: V237 = SUB V233 V236
0x2b2: V238 = 0x0
0x2b5: V239 = 0x61da
0x2b8: V240 = GAS
0x2b9: V241 = SUB V240 0x61da
0x2ba: V242 = CALL V241 V209 0x0 V236 V237 V236 0x0
0x2bb: V243 = ISZERO V242
0x2bc: V244 = 0x2
0x2bf: THROWI V243
---
Entry stack: [V10, 0x1ed, V267, 0x60, 0x6, V270]
Stack pops: 4
Stack additions: [S3, V209, 0xa9059cbb, V233]
Exit stack: [V10, 0x1ed, V267, V209, 0xa9059cbb, V233]

================================

Block 0x2c0
[0x2c0:0x30c]
---
Predecessors: [0x1fc]
Successors: [0x30d]
---
0x2c0 POP
0x2c1 POP
0x2c2 PUSH1 0x40
0x2c4 DUP1
0x2c5 MLOAD
0x2c6 PUSH1 0x1
0x2c8 PUSH1 0xa0
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd SUB
0x2ce CALLER
0x2cf AND
0x2d0 DUP2
0x2d1 MSTORE
0x2d2 PUSH1 0x20
0x2d4 DUP2
0x2d5 ADD
0x2d6 DUP5
0x2d7 SWAP1
0x2d8 MSTORE
0x2d9 PUSH1 0x1
0x2db DUP2
0x2dc DUP4
0x2dd ADD
0x2de MSTORE
0x2df SWAP1
0x2e0 MLOAD
0x2e1 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x302 SWAP3
0x303 POP
0x304 SWAP1
0x305 DUP2
0x306 SWAP1
0x307 SUB
0x308 PUSH1 0x60
0x30a ADD
0x30b SWAP1
0x30c LOG1
---
0x2c2: V245 = 0x40
0x2c5: V246 = M[0x40]
0x2c6: V247 = 0x1
0x2c8: V248 = 0xa0
0x2ca: V249 = 0x2
0x2cc: V250 = EXP 0x2 0xa0
0x2cd: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ce: V252 = CALLER
0x2cf: V253 = AND V252 0xffffffffffffffffffffffffffffffffffffffff
0x2d1: M[V246] = V253
0x2d2: V254 = 0x20
0x2d5: V255 = ADD V246 0x20
0x2d8: M[V255] = V267
0x2d9: V256 = 0x1
0x2dd: V257 = ADD 0x40 V246
0x2de: M[V257] = 0x1
0x2e0: V258 = M[0x40]
0x2e1: V259 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x307: V260 = SUB V246 V258
0x308: V261 = 0x60
0x30a: V262 = ADD 0x60 V260
0x30c: LOG V258 V262 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, 0x1ed, V267, V209, 0xa9059cbb, V233]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x1ed, V267]

================================

Block 0x30d
[0x30d:0x30f]
---
Predecessors: [0x82, 0x2c0]
Successors: [0x1ed]
---
0x30d JUMPDEST
0x30e POP
0x30f JUMP
---
0x30d: JUMPDEST 
0x30f: JUMP 0x1ed
---
Entry stack: [V10, 0x1ed, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x310
[0x310:0x33c]
---
Predecessors: [0x6c]
Successors: [0x1ef, 0x33d]
---
0x310 JUMPDEST
0x311 POP
0x312 PUSH1 0xa0
0x314 PUSH1 0x40
0x316 MSTORE
0x317 CALLER
0x318 PUSH1 0x60
0x31a SWAP1
0x31b DUP2
0x31c MSTORE
0x31d CALLVALUE
0x31e PUSH1 0x80
0x320 DUP2
0x321 SWAP1
0x322 MSTORE
0x323 PUSH1 0x6
0x325 DUP1
0x326 SLOAD
0x327 PUSH1 0x1
0x329 DUP2
0x32a ADD
0x32b DUP1
0x32c DUP4
0x32d SSTORE
0x32e SWAP3
0x32f SWAP4
0x330 SWAP3
0x331 DUP3
0x332 SWAP1
0x333 DUP3
0x334 DUP1
0x335 ISZERO
0x336 DUP3
0x337 SWAP1
0x338 GT
0x339 PUSH2 0x1ef
0x33c JUMPI
---
0x310: JUMPDEST 
0x312: V263 = 0xa0
0x314: V264 = 0x40
0x316: M[0x40] = 0xa0
0x317: V265 = CALLER
0x318: V266 = 0x60
0x31c: M[0x60] = V265
0x31d: V267 = CALLVALUE
0x31e: V268 = 0x80
0x322: M[0x80] = V267
0x323: V269 = 0x6
0x326: V270 = S[0x6]
0x327: V271 = 0x1
0x32a: V272 = ADD V270 0x1
0x32d: S[0x6] = V272
0x335: V273 = ISZERO V270
0x338: V274 = GT V273 V272
0x339: V275 = 0x1ef
0x33c: JUMPI 0x1ef V274
---
Entry stack: [V10, 0x1ed, 0x0]
Stack pops: 1
Stack additions: [V267, 0x60, 0x6, V270, 0x6, V272, V270]
Exit stack: [V10, 0x1ed, V267, 0x60, 0x6, V270, 0x6, V272, V270]

================================

Block 0x33d
[0x33d:0x356]
---
Predecessors: [0x310]
Successors: [0x357]
---
0x33d PUSH1 0x2
0x33f MUL
0x340 DUP2
0x341 PUSH1 0x2
0x343 MUL
0x344 DUP4
0x345 PUSH1 0x0
0x347 MSTORE
0x348 PUSH1 0x20
0x34a PUSH1 0x0
0x34c SHA3
0x34d SWAP2
0x34e DUP3
0x34f ADD
0x350 SWAP2
0x351 ADD
0x352 PUSH2 0x1ef
0x355 SWAP2
0x356 SWAP1
---
0x33d: V276 = 0x2
0x33f: V277 = MUL 0x2 V270
0x341: V278 = 0x2
0x343: V279 = MUL 0x2 V272
0x345: V280 = 0x0
0x347: M[0x0] = 0x6
0x348: V281 = 0x20
0x34a: V282 = 0x0
0x34c: V283 = SHA3 0x0 0x20
0x34f: V284 = ADD V283 V277
0x351: V285 = ADD V283 V279
0x352: V286 = 0x1ef
---
Entry stack: [V10, 0x1ed, V267, 0x60, 0x6, V270, 0x6, V272, V270]
Stack pops: 3
Stack additions: [S2, S1, 0x1ef, V284, V285]
Exit stack: [V10, 0x1ed, V267, 0x60, 0x6, V270, 0x6, V272, 0x1ef, V284, V285]

================================

Block 0x357
[0x357:0x35f]
---
Predecessors: [0x33d, 0x360]
Successors: [0x360, 0x38a]
---
0x357 JUMPDEST
0x358 DUP1
0x359 DUP3
0x35a GT
0x35b ISZERO
0x35c PUSH2 0x38a
0x35f JUMPI
---
0x357: JUMPDEST 
0x35a: V287 = GT V284 S0
0x35b: V288 = ISZERO V287
0x35c: V289 = 0x38a
0x35f: JUMPI 0x38a V288
---
Entry stack: [V10, 0x1ed, V267, 0x60, 0x6, V270, 0x6, V272, 0x1ef, V284, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x1ed, V267, 0x60, 0x6, V270, 0x6, V272, 0x1ef, V284, S0]

================================

Block 0x360
[0x360:0x389]
---
Predecessors: [0x357]
Successors: [0x357]
---
0x360 DUP1
0x361 SLOAD
0x362 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x377 NOT
0x378 AND
0x379 DUP2
0x37a SSTORE
0x37b PUSH1 0x0
0x37d PUSH1 0x1
0x37f SWAP2
0x380 SWAP1
0x381 SWAP2
0x382 ADD
0x383 SWAP1
0x384 DUP2
0x385 SSTORE
0x386 PUSH2 0x357
0x389 JUMP
---
0x361: V290 = S[S0]
0x362: V291 = 0xffffffffffffffffffffffffffffffffffffffff
0x377: V292 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x378: V293 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V290
0x37a: S[S0] = V293
0x37b: V294 = 0x0
0x37d: V295 = 0x1
0x382: V296 = ADD 0x1 S0
0x385: S[V296] = 0x0
0x386: V297 = 0x357
0x389: JUMP 0x357
---
Entry stack: [V10, 0x1ed, V267, 0x60, 0x6, V270, 0x6, V272, 0x1ef, V284, S0]
Stack pops: 1
Stack additions: [V296]
Exit stack: [V10, 0x1ed, V267, 0x60, 0x6, V270, 0x6, V272, 0x1ef, V284, V296]

================================

Block 0x38a
[0x38a:0x38d]
---
Predecessors: [0x357]
Successors: [0x1ef]
---
0x38a JUMPDEST
0x38b POP
0x38c SWAP1
0x38d JUMP
---
0x38a: JUMPDEST 
0x38d: JUMP 0x1ef
---
Entry stack: [V10, 0x1ed, V267, 0x60, 0x6, V270, 0x6, V272, 0x1ef, V284, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x1ed, V267, 0x60, 0x6, V270, 0x6, V272, V284]

================================

Block 0x38e
[0x38e:0x397]
---
Predecessors: [0x131, 0x15e, 0x167, 0x170]
Successors: []
---
0x38e JUMPDEST
0x38f PUSH1 0x60
0x391 SWAP1
0x392 DUP2
0x393 MSTORE
0x394 PUSH1 0x20
0x396 SWAP1
0x397 RETURN
---
0x38e: JUMPDEST 
0x38f: V298 = 0x60
0x393: M[0x60] = S0
0x394: V299 = 0x20
0x397: RETURN 0x60 0x20
---
Entry stack: [V10, 0x38e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x38e]

================================

Block 0x398
[0x398:0x3aa]
---
Predecessors: [0x13a, 0x14c]
Successors: []
---
0x398 JUMPDEST
0x399 PUSH1 0x1
0x39b PUSH1 0xa0
0x39d PUSH1 0x2
0x39f EXP
0x3a0 SUB
0x3a1 AND
0x3a2 PUSH1 0x60
0x3a4 SWAP1
0x3a5 DUP2
0x3a6 MSTORE
0x3a7 PUSH1 0x20
0x3a9 SWAP1
0x3aa RETURN
---
0x398: JUMPDEST 
0x399: V300 = 0x1
0x39b: V301 = 0xa0
0x39d: V302 = 0x2
0x39f: V303 = EXP 0x2 0xa0
0x3a0: V304 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a1: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3a2: V306 = 0x60
0x3a6: M[0x60] = V305
0x3a7: V307 = 0x20
0x3aa: RETURN 0x60 0x20
---
Entry stack: [V10, 0x398, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x398]

================================

Block 0x3ab
[0x3ab:0x3b7]
---
Predecessors: [0x18d]
Successors: []
---
0x3ab JUMPDEST
0x3ac PUSH1 0x60
0x3ae SWAP2
0x3af DUP3
0x3b0 MSTORE
0x3b1 PUSH1 0x80
0x3b3 MSTORE
0x3b4 PUSH1 0x40
0x3b6 SWAP1
0x3b7 RETURN
---
0x3ab: JUMPDEST 
0x3ac: V308 = 0x60
0x3b0: M[0x60] = V150
0x3b1: V309 = 0x80
0x3b3: M[0x80] = V144
0x3b4: V310 = 0x40
0x3b7: RETURN 0x60 0x40
---
Entry stack: [V10, 0x3ab, V150, V144]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x3ab]

================================

Block 0x3b8
[0x3b8:0x3b8]
---
Predecessors: [0x92]
Successors: [0x3b9]
---
0x3b8 JUMPDEST
---
0x3b8: JUMPDEST 
---
Entry stack: [V10, 0x1ed, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ed, 0x0]

================================

Block 0x3b9
[0x3b9:0x3c3]
---
Predecessors: [0x3b8, 0x4c8]
Successors: [0xfb, 0x3c4]
---
0x3b9 JUMPDEST
0x3ba PUSH1 0x6
0x3bc SLOAD
0x3bd DUP2
0x3be LT
0x3bf ISZERO
0x3c0 PUSH2 0xfb
0x3c3 JUMPI
---
0x3b9: JUMPDEST 
0x3ba: V311 = 0x6
0x3bc: V312 = S[0x6]
0x3be: V313 = LT S0 V312
0x3bf: V314 = ISZERO V313
0x3c0: V315 = 0xfb
0x3c3: JUMPI 0xfb V314
---
Entry stack: [V10, 0x1ed, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1ed, S0]

================================

Block 0x3c4
[0x3c4:0x3d0]
---
Predecessors: [0x3b9]
Successors: [0x3d1]
---
0x3c4 PUSH1 0x6
0x3c6 DUP1
0x3c7 SLOAD
0x3c8 DUP3
0x3c9 SWAP1
0x3ca DUP2
0x3cb LT
0x3cc ISZERO
0x3cd PUSH2 0x2
0x3d0 JUMPI
---
0x3c4: V316 = 0x6
0x3c7: V317 = S[0x6]
0x3cb: V318 = LT S0 V317
0x3cc: V319 = ISZERO V318
0x3cd: V320 = 0x2
0x3d0: THROWI V319
---
Entry stack: [V10, 0x1ed, S0]
Stack pops: 1
Stack additions: [S0, 0x6, S0]
Exit stack: [V10, 0x1ed, S0, 0x6, S0]

================================

Block 0x3d1
[0x3d1:0x418]
---
Predecessors: [0x3c4]
Successors: [0x419]
---
0x3d1 PUSH1 0x0
0x3d3 SWAP2
0x3d4 DUP3
0x3d5 MSTORE
0x3d6 PUSH1 0x2
0x3d8 MUL
0x3d9 PUSH32 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f
0x3fa ADD
0x3fb SWAP1
0x3fc SWAP1
0x3fd SLOAD
0x3fe PUSH1 0x6
0x400 DUP1
0x401 SLOAD
0x402 PUSH1 0x1
0x404 PUSH1 0xa0
0x406 PUSH1 0x2
0x408 EXP
0x409 SUB
0x40a SWAP3
0x40b SWAP1
0x40c SWAP3
0x40d AND
0x40e SWAP3
0x40f SWAP2
0x410 DUP5
0x411 SWAP1
0x412 DUP2
0x413 LT
0x414 ISZERO
0x415 PUSH2 0x2
0x418 JUMPI
---
0x3d1: V321 = 0x0
0x3d5: M[0x0] = 0x6
0x3d6: V322 = 0x2
0x3d8: V323 = MUL 0x2 S0
0x3d9: V324 = 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f
0x3fa: V325 = ADD 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f V323
0x3fd: V326 = S[V325]
0x3fe: V327 = 0x6
0x401: V328 = S[0x6]
0x402: V329 = 0x1
0x404: V330 = 0xa0
0x406: V331 = 0x2
0x408: V332 = EXP 0x2 0xa0
0x409: V333 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40d: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x413: V335 = LT S2 V328
0x414: V336 = ISZERO V335
0x415: V337 = 0x2
0x418: THROWI V336
---
Entry stack: [V10, 0x1ed, S2, 0x6, S0]
Stack pops: 3
Stack additions: [S2, V334, 0x0, 0x6, S2]
Exit stack: [V10, 0x1ed, S2, V334, 0x0, 0x6, S2]

================================

Block 0x419
[0x419:0x482]
---
Predecessors: [0x3d1]
Successors: [0x483]
---
0x419 PUSH1 0x2
0x41b MUL
0x41c PUSH32 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40
0x43d ADD
0x43e SLOAD
0x43f PUSH1 0x40
0x441 MLOAD
0x442 SWAP1
0x443 SWAP2
0x444 POP
0x445 DUP3
0x446 DUP2
0x447 DUP2
0x448 DUP2
0x449 DUP6
0x44a DUP9
0x44b DUP4
0x44c CALL
0x44d SWAP4
0x44e POP
0x44f POP
0x450 POP
0x451 POP
0x452 POP
0x453 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x474 PUSH1 0x6
0x476 PUSH1 0x0
0x478 POP
0x479 DUP3
0x47a DUP2
0x47b SLOAD
0x47c DUP2
0x47d LT
0x47e ISZERO
0x47f PUSH2 0x2
0x482 JUMPI
---
0x419: V338 = 0x2
0x41b: V339 = MUL 0x2 S0
0x41c: V340 = 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40
0x43d: V341 = ADD 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40 V339
0x43e: V342 = S[V341]
0x43f: V343 = 0x40
0x441: V344 = M[0x40]
0x44c: V345 = CALL 0x0 V334 V342 V344 0x0 V344 0x0
0x453: V346 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x474: V347 = 0x6
0x476: V348 = 0x0
0x47b: V349 = S[0x6]
0x47d: V350 = LT S4 V349
0x47e: V351 = ISZERO V350
0x47f: V352 = 0x2
0x482: THROWI V351
---
Entry stack: [V10, 0x1ed, S4, V334, 0x0, 0x6, S0]
Stack pops: 5
Stack additions: [S4, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, 0x6, S4]
Exit stack: [V10, 0x1ed, S4, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, 0x6, S4]

================================

Block 0x483
[0x483:0x4c7]
---
Predecessors: [0x419]
Successors: [0x4c8]
---
0x483 PUSH1 0x0
0x485 SWAP2
0x486 DUP3
0x487 MSTORE
0x488 PUSH1 0x2
0x48a MUL
0x48b PUSH32 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f
0x4ac ADD
0x4ad SWAP1
0x4ae POP
0x4af PUSH1 0x6
0x4b1 DUP1
0x4b2 SLOAD
0x4b3 SWAP2
0x4b4 SLOAD
0x4b5 PUSH1 0x1
0x4b7 PUSH1 0xa0
0x4b9 PUSH1 0x2
0x4bb EXP
0x4bc SUB
0x4bd AND
0x4be SWAP2
0x4bf DUP5
0x4c0 SWAP1
0x4c1 DUP2
0x4c2 LT
0x4c3 ISZERO
0x4c4 PUSH2 0x2
0x4c7 JUMPI
---
0x483: V353 = 0x0
0x487: M[0x0] = 0x6
0x488: V354 = 0x2
0x48a: V355 = MUL 0x2 S0
0x48b: V356 = 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f
0x4ac: V357 = ADD 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f V355
0x4af: V358 = 0x6
0x4b2: V359 = S[0x6]
0x4b4: V360 = S[V357]
0x4b5: V361 = 0x1
0x4b7: V362 = 0xa0
0x4b9: V363 = 0x2
0x4bb: V364 = EXP 0x2 0xa0
0x4bc: V365 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bd: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x4c2: V367 = LT S3 V359
0x4c3: V368 = ISZERO V367
0x4c4: V369 = 0x2
0x4c7: THROWI V368
---
Entry stack: [V10, 0x1ed, S3, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, 0x6, S0]
Stack pops: 4
Stack additions: [S3, S2, V366, 0x6, S3]
Exit stack: [V10, 0x1ed, S3, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, V366, 0x6, S3]

================================

Block 0x4c8
[0x4c8:0x520]
---
Predecessors: [0x483]
Successors: [0x3b9]
---
0x4c8 PUSH1 0x2
0x4ca MUL
0x4cb PUSH32 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40
0x4ec ADD
0x4ed SLOAD
0x4ee PUSH1 0x40
0x4f0 DUP1
0x4f1 MLOAD
0x4f2 PUSH1 0x1
0x4f4 PUSH1 0xa0
0x4f6 PUSH1 0x2
0x4f8 EXP
0x4f9 SUB
0x4fa SWAP5
0x4fb SWAP1
0x4fc SWAP5
0x4fd AND
0x4fe DUP5
0x4ff MSTORE
0x500 PUSH1 0x20
0x502 DUP5
0x503 ADD
0x504 SWAP2
0x505 SWAP1
0x506 SWAP2
0x507 MSTORE
0x508 PUSH1 0x0
0x50a DUP4
0x50b DUP3
0x50c ADD
0x50d MSTORE
0x50e MLOAD
0x50f SWAP2
0x510 DUP3
0x511 SWAP1
0x512 SUB
0x513 PUSH1 0x60
0x515 ADD
0x516 SWAP2
0x517 SWAP1
0x518 POP
0x519 LOG1
0x51a PUSH1 0x1
0x51c ADD
0x51d PUSH2 0x3b9
0x520 JUMP
---
0x4c8: V370 = 0x2
0x4ca: V371 = MUL 0x2 S0
0x4cb: V372 = 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40
0x4ec: V373 = ADD 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40 V371
0x4ed: V374 = S[V373]
0x4ee: V375 = 0x40
0x4f1: V376 = M[0x40]
0x4f2: V377 = 0x1
0x4f4: V378 = 0xa0
0x4f6: V379 = 0x2
0x4f8: V380 = EXP 0x2 0xa0
0x4f9: V381 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fd: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x4ff: M[V376] = V382
0x500: V383 = 0x20
0x503: V384 = ADD V376 0x20
0x507: M[V384] = V374
0x508: V385 = 0x0
0x50c: V386 = ADD 0x40 V376
0x50d: M[V386] = 0x0
0x50e: V387 = M[0x40]
0x512: V388 = SUB V376 V387
0x513: V389 = 0x60
0x515: V390 = ADD 0x60 V388
0x519: LOG V387 V390 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x51a: V391 = 0x1
0x51c: V392 = ADD 0x1 S4
0x51d: V393 = 0x3b9
0x520: JUMP 0x3b9
---
Entry stack: [V10, 0x1ed, S4, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, V366, 0x6, S0]
Stack pops: 5
Stack additions: [V392]
Exit stack: [V10, 0x1ed, V392]

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x82
Exit block: 0x1ed
Body: 0x82, 0x92, 0x9e, 0xfb, 0x1ed, 0x30d, 0x3b8, 0x3b9, 0x3c4, 0x3d1, 0x419, 0x483, 0x4c8

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x131
Exit block: 0x38e
Body: 0x131, 0x38e

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x13a
Exit block: 0x398
Body: 0x13a, 0x398

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x14c
Exit block: 0x398
Body: 0x14c, 0x398

Function 4:
Public function signature: 0x7a3a0e84
Entry block: 0x15e
Exit block: 0x38e
Body: 0x15e, 0x38e

Function 5:
Public function signature: 0x7b3e5e7b
Entry block: 0x167
Exit block: 0x38e
Body: 0x167, 0x38e

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x170
Exit block: 0x38e
Body: 0x170, 0x38e

Function 7:
Public function signature: 0xdc0d3dff
Entry block: 0x179
Exit block: 0x3ab
Body: 0x179, 0x18d, 0x3ab

Function 8:
Public fallback function
Entry block: 0x6c
Exit block: 0x1ed
Body: 0x6c, 0x7e, 0x1ed, 0x1ef, 0x1fc, 0x2c0, 0x30d, 0x310, 0x33d, 0x357, 0x360, 0x38a

