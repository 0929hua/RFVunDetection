Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xac]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xac
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xac
0xa: JUMPI 0xac V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xb4]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0xf2e5b6c
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xb4
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0xf2e5b6c
0x39: V12 = EQ V10 0xf2e5b6c
0x3a: V13 = 0xb4
0x3d: JUMPI 0xb4 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xdb]
---
0x3e DUP1
0x3f PUSH4 0x1352faec
0x44 EQ
0x45 PUSH2 0xdb
0x48 JUMPI
---
0x3f: V14 = 0x1352faec
0x44: V15 = EQ 0x1352faec V10
0x45: V16 = 0xdb
0x48: JUMPI 0xdb V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xe8]
---
0x49 DUP1
0x4a PUSH4 0x205c2878
0x4f EQ
0x50 PUSH2 0xe8
0x53 JUMPI
---
0x4a: V17 = 0x205c2878
0x4f: V18 = EQ 0x205c2878 V10
0x50: V19 = 0xe8
0x53: JUMPI 0xe8 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x101]
---
0x54 DUP1
0x55 PUSH4 0x2e1a7d4d
0x5a EQ
0x5b PUSH2 0x101
0x5e JUMPI
---
0x55: V20 = 0x2e1a7d4d
0x5a: V21 = EQ 0x2e1a7d4d V10
0x5b: V22 = 0x101
0x5e: JUMPI 0x101 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x10e]
---
0x5f DUP1
0x60 PUSH4 0x8129fc1c
0x65 EQ
0x66 PUSH2 0x10e
0x69 JUMPI
---
0x60: V23 = 0x8129fc1c
0x65: V24 = EQ 0x8129fc1c V10
0x66: V25 = 0x10e
0x69: JUMPI 0x10e V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x118]
---
0x6a DUP1
0x6b PUSH4 0x8cf49cad
0x70 EQ
0x71 PUSH2 0x118
0x74 JUMPI
---
0x6b: V26 = 0x8cf49cad
0x70: V27 = EQ 0x8cf49cad V10
0x71: V28 = 0x118
0x74: JUMPI 0x118 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x13d]
---
0x75 DUP1
0x76 PUSH4 0x8f32d59b
0x7b EQ
0x7c PUSH2 0x13d
0x7f JUMPI
---
0x76: V29 = 0x8f32d59b
0x7b: V30 = EQ 0x8f32d59b V10
0x7c: V31 = 0x13d
0x7f: JUMPI 0x13d V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x164]
---
0x80 DUP1
0x81 PUSH4 0xad9bdebb
0x86 EQ
0x87 PUSH2 0x164
0x8a JUMPI
---
0x81: V32 = 0xad9bdebb
0x86: V33 = EQ 0xad9bdebb V10
0x87: V34 = 0x164
0x8a: JUMPI 0x164 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x18b]
---
0x8b DUP1
0x8c PUSH4 0xb4a99a4e
0x91 EQ
0x92 PUSH2 0x18b
0x95 JUMPI
---
0x8c: V35 = 0xb4a99a4e
0x91: V36 = EQ 0xb4a99a4e V10
0x92: V37 = 0x18b
0x95: JUMPI 0x18b V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x1ba]
---
0x96 DUP1
0x97 PUSH4 0xd0e30db0
0x9c EQ
0x9d PUSH2 0x1ba
0xa0 JUMPI
---
0x97: V38 = 0xd0e30db0
0x9c: V39 = EQ 0xd0e30db0 V10
0x9d: V40 = 0x1ba
0xa0: JUMPI 0x1ba V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x1c4]
---
0xa1 DUP1
0xa2 PUSH4 0xfc7e286d
0xa7 EQ
0xa8 PUSH2 0x1c4
0xab JUMPI
---
0xa2: V41 = 0xfc7e286d
0xa7: V42 = EQ 0xfc7e286d V10
0xa8: V43 = 0x1c4
0xab: JUMPI 0x1c4 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xac]
---
Predecessors: [0x0, 0xa1]
Successors: [0xad]
---
0xac JUMPDEST
---
0xac: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb1]
---
Predecessors: [0xac]
Successors: []
---
0xad JUMPDEST
0xae PUSH1 0x0
0xb0 DUP1
0xb1 REVERT
---
0xad: JUMPDEST 
0xae: V44 = 0x0
0xb1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb2
[0xb2:0xb3]
---
Predecessors: [0x261, 0x318, 0x38d, 0x429]
Successors: []
---
0xb2 JUMPDEST
0xb3 STOP
---
0xb2: JUMPDEST 
0xb3: STOP 
---
Entry stack: [V10, 0xb2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2, S0]

================================

Block 0xb4
[0xb4:0xba]
---
Predecessors: [0xb]
Successors: [0xbb, 0xbf]
---
0xb4 JUMPDEST
0xb5 CALLVALUE
0xb6 ISZERO
0xb7 PUSH2 0xbf
0xba JUMPI
---
0xb4: JUMPDEST 
0xb5: V45 = CALLVALUE
0xb6: V46 = ISZERO V45
0xb7: V47 = 0xbf
0xba: JUMPI 0xbf V46
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbb
[0xbb:0xbe]
---
Predecessors: [0xb4]
Successors: []
---
0xbb PUSH1 0x0
0xbd DUP1
0xbe REVERT
---
0xbb: V48 = 0x0
0xbe: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbf
[0xbf:0xc6]
---
Predecessors: [0xb4]
Successors: [0x1f5]
---
0xbf JUMPDEST
0xc0 PUSH2 0xc7
0xc3 PUSH2 0x1f5
0xc6 JUMP
---
0xbf: JUMPDEST 
0xc0: V49 = 0xc7
0xc3: V50 = 0x1f5
0xc6: JUMP 0x1f5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc7]
Exit stack: [V10, 0xc7]

================================

Block 0xc7
[0xc7:0xda]
---
Predecessors: [0x1f5, 0x3a8, 0x3b2]
Successors: []
---
0xc7 JUMPDEST
0xc8 PUSH1 0x40
0xca MLOAD
0xcb SWAP1
0xcc ISZERO
0xcd ISZERO
0xce DUP2
0xcf MSTORE
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 PUSH1 0x40
0xd5 MLOAD
0xd6 DUP1
0xd7 SWAP2
0xd8 SUB
0xd9 SWAP1
0xda RETURN
---
0xc7: JUMPDEST 
0xc8: V51 = 0x40
0xca: V52 = M[0x40]
0xcc: V53 = ISZERO S0
0xcd: V54 = ISZERO V53
0xcf: M[V52] = V54
0xd0: V55 = 0x20
0xd2: V56 = ADD 0x20 V52
0xd3: V57 = 0x40
0xd5: V58 = M[0x40]
0xd8: V59 = SUB V56 V58
0xda: RETURN V58 V59
---
Entry stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1]

================================

Block 0xdb
[0xdb:0xe5]
---
Predecessors: [0x3e]
Successors: [0x1fe]
---
0xdb JUMPDEST
0xdc PUSH2 0xb2
0xdf PUSH1 0x4
0xe1 CALLDATALOAD
0xe2 PUSH2 0x1fe
0xe5 JUMP
---
0xdb: JUMPDEST 
0xdc: V60 = 0xb2
0xdf: V61 = 0x4
0xe1: V62 = CALLDATALOAD 0x4
0xe2: V63 = 0x1fe
0xe5: JUMP 0x1fe
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb2, V62]
Exit stack: [V10, 0xb2, V62]

================================

Block 0xe6
[0xe6:0xe7]
---
Predecessors: []
Successors: []
---
0xe6 JUMPDEST
0xe7 STOP
---
0xe6: JUMPDEST 
0xe7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe8
[0xe8:0xfe]
---
Predecessors: [0x49]
Successors: [0x264]
---
0xe8 JUMPDEST
0xe9 PUSH2 0xb2
0xec PUSH1 0x1
0xee PUSH1 0xa0
0xf0 PUSH1 0x2
0xf2 EXP
0xf3 SUB
0xf4 PUSH1 0x4
0xf6 CALLDATALOAD
0xf7 AND
0xf8 PUSH1 0x24
0xfa CALLDATALOAD
0xfb PUSH2 0x264
0xfe JUMP
---
0xe8: JUMPDEST 
0xe9: V64 = 0xb2
0xec: V65 = 0x1
0xee: V66 = 0xa0
0xf0: V67 = 0x2
0xf2: V68 = EXP 0x2 0xa0
0xf3: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf4: V70 = 0x4
0xf6: V71 = CALLDATALOAD 0x4
0xf7: V72 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0xf8: V73 = 0x24
0xfa: V74 = CALLDATALOAD 0x24
0xfb: V75 = 0x264
0xfe: JUMP 0x264
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb2, V72, V74]
Exit stack: [V10, 0xb2, V72, V74]

================================

Block 0xff
[0xff:0x100]
---
Predecessors: []
Successors: []
---
0xff JUMPDEST
0x100 STOP
---
0xff: JUMPDEST 
0x100: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0x54]
Successors: [0x31d]
---
0x101 JUMPDEST
0x102 PUSH2 0xb2
0x105 PUSH1 0x4
0x107 CALLDATALOAD
0x108 PUSH2 0x31d
0x10b JUMP
---
0x101: JUMPDEST 
0x102: V76 = 0xb2
0x105: V77 = 0x4
0x107: V78 = CALLDATALOAD 0x4
0x108: V79 = 0x31d
0x10b: JUMP 0x31d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb2, V78]
Exit stack: [V10, 0xb2, V78]

================================

Block 0x10c
[0x10c:0x10d]
---
Predecessors: []
Successors: []
---
0x10c JUMPDEST
0x10d STOP
---
0x10c: JUMPDEST 
0x10d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x10e
[0x10e:0x115]
---
Predecessors: [0x5f]
Successors: [0x32b]
---
0x10e JUMPDEST
0x10f PUSH2 0xb2
0x112 PUSH2 0x32b
0x115 JUMP
---
0x10e: JUMPDEST 
0x10f: V80 = 0xb2
0x112: V81 = 0x32b
0x115: JUMP 0x32b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb2]
Exit stack: [V10, 0xb2]

================================

Block 0x116
[0x116:0x117]
---
Predecessors: []
Successors: []
---
0x116 JUMPDEST
0x117 STOP
---
0x116: JUMPDEST 
0x117: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x118
[0x118:0x11e]
---
Predecessors: [0x6a]
Successors: [0x11f, 0x123]
---
0x118 JUMPDEST
0x119 CALLVALUE
0x11a ISZERO
0x11b PUSH2 0x123
0x11e JUMPI
---
0x118: JUMPDEST 
0x119: V82 = CALLVALUE
0x11a: V83 = ISZERO V82
0x11b: V84 = 0x123
0x11e: JUMPI 0x123 V83
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11f
[0x11f:0x122]
---
Predecessors: [0x118]
Successors: []
---
0x11f PUSH1 0x0
0x121 DUP1
0x122 REVERT
---
0x11f: V85 = 0x0
0x122: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x123
[0x123:0x12a]
---
Predecessors: [0x118]
Successors: [0x38f]
---
0x123 JUMPDEST
0x124 PUSH2 0x12b
0x127 PUSH2 0x38f
0x12a JUMP
---
0x123: JUMPDEST 
0x124: V86 = 0x12b
0x127: V87 = 0x38f
0x12a: JUMP 0x38f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x12b]
Exit stack: [V10, 0x12b]

================================

Block 0x12b
[0x12b:0x13c]
---
Predecessors: [0x38f, 0x42b]
Successors: []
---
0x12b JUMPDEST
0x12c PUSH1 0x40
0x12e MLOAD
0x12f SWAP1
0x130 DUP2
0x131 MSTORE
0x132 PUSH1 0x20
0x134 ADD
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 SWAP2
0x13a SUB
0x13b SWAP1
0x13c RETURN
---
0x12b: JUMPDEST 
0x12c: V88 = 0x40
0x12e: V89 = M[0x40]
0x131: M[V89] = S0
0x132: V90 = 0x20
0x134: V91 = ADD 0x20 V89
0x135: V92 = 0x40
0x137: V93 = M[0x40]
0x13a: V94 = SUB V91 V93
0x13c: RETURN V93 V94
---
Entry stack: [V10, 0x12b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x12b]

================================

Block 0x13d
[0x13d:0x143]
---
Predecessors: [0x75]
Successors: [0x144, 0x148]
---
0x13d JUMPDEST
0x13e CALLVALUE
0x13f ISZERO
0x140 PUSH2 0x148
0x143 JUMPI
---
0x13d: JUMPDEST 
0x13e: V95 = CALLVALUE
0x13f: V96 = ISZERO V95
0x140: V97 = 0x148
0x143: JUMPI 0x148 V96
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x144
[0x144:0x147]
---
Predecessors: [0x13d]
Successors: []
---
0x144 PUSH1 0x0
0x146 DUP1
0x147 REVERT
---
0x144: V98 = 0x0
0x147: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x148
[0x148:0x14f]
---
Predecessors: [0x13d]
Successors: [0x395]
---
0x148 JUMPDEST
0x149 PUSH2 0xc7
0x14c PUSH2 0x395
0x14f JUMP
---
0x148: JUMPDEST 
0x149: V99 = 0xc7
0x14c: V100 = 0x395
0x14f: JUMP 0x395
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc7]
Exit stack: [V10, 0xc7]

================================

Block 0x150
[0x150:0x163]
---
Predecessors: []
Successors: []
---
0x150 JUMPDEST
0x151 PUSH1 0x40
0x153 MLOAD
0x154 SWAP1
0x155 ISZERO
0x156 ISZERO
0x157 DUP2
0x158 MSTORE
0x159 PUSH1 0x20
0x15b ADD
0x15c PUSH1 0x40
0x15e MLOAD
0x15f DUP1
0x160 SWAP2
0x161 SUB
0x162 SWAP1
0x163 RETURN
---
0x150: JUMPDEST 
0x151: V101 = 0x40
0x153: V102 = M[0x40]
0x155: V103 = ISZERO S0
0x156: V104 = ISZERO V103
0x158: M[V102] = V104
0x159: V105 = 0x20
0x15b: V106 = ADD 0x20 V102
0x15c: V107 = 0x40
0x15e: V108 = M[0x40]
0x161: V109 = SUB V106 V108
0x163: RETURN V108 V109
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x164
[0x164:0x16a]
---
Predecessors: [0x80]
Successors: [0x16b, 0x16f]
---
0x164 JUMPDEST
0x165 CALLVALUE
0x166 ISZERO
0x167 PUSH2 0x16f
0x16a JUMPI
---
0x164: JUMPDEST 
0x165: V110 = CALLVALUE
0x166: V111 = ISZERO V110
0x167: V112 = 0x16f
0x16a: JUMPI 0x16f V111
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16b
[0x16b:0x16e]
---
Predecessors: [0x164]
Successors: []
---
0x16b PUSH1 0x0
0x16d DUP1
0x16e REVERT
---
0x16b: V113 = 0x0
0x16e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16f
[0x16f:0x176]
---
Predecessors: [0x164]
Successors: [0x3ab]
---
0x16f JUMPDEST
0x170 PUSH2 0xc7
0x173 PUSH2 0x3ab
0x176 JUMP
---
0x16f: JUMPDEST 
0x170: V114 = 0xc7
0x173: V115 = 0x3ab
0x176: JUMP 0x3ab
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc7]
Exit stack: [V10, 0xc7]

================================

Block 0x177
[0x177:0x18a]
---
Predecessors: []
Successors: []
---
0x177 JUMPDEST
0x178 PUSH1 0x40
0x17a MLOAD
0x17b SWAP1
0x17c ISZERO
0x17d ISZERO
0x17e DUP2
0x17f MSTORE
0x180 PUSH1 0x20
0x182 ADD
0x183 PUSH1 0x40
0x185 MLOAD
0x186 DUP1
0x187 SWAP2
0x188 SUB
0x189 SWAP1
0x18a RETURN
---
0x177: JUMPDEST 
0x178: V116 = 0x40
0x17a: V117 = M[0x40]
0x17c: V118 = ISZERO S0
0x17d: V119 = ISZERO V118
0x17f: M[V117] = V119
0x180: V120 = 0x20
0x182: V121 = ADD 0x20 V117
0x183: V122 = 0x40
0x185: V123 = M[0x40]
0x188: V124 = SUB V121 V123
0x18a: RETURN V123 V124
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x18b
[0x18b:0x191]
---
Predecessors: [0x8b]
Successors: [0x192, 0x196]
---
0x18b JUMPDEST
0x18c CALLVALUE
0x18d ISZERO
0x18e PUSH2 0x196
0x191 JUMPI
---
0x18b: JUMPDEST 
0x18c: V125 = CALLVALUE
0x18d: V126 = ISZERO V125
0x18e: V127 = 0x196
0x191: JUMPI 0x196 V126
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x192
[0x192:0x195]
---
Predecessors: [0x18b]
Successors: []
---
0x192 PUSH1 0x0
0x194 DUP1
0x195 REVERT
---
0x192: V128 = 0x0
0x195: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x196
[0x196:0x19d]
---
Predecessors: [0x18b]
Successors: [0x3b5]
---
0x196 JUMPDEST
0x197 PUSH2 0x19e
0x19a PUSH2 0x3b5
0x19d JUMP
---
0x196: JUMPDEST 
0x197: V129 = 0x19e
0x19a: V130 = 0x3b5
0x19d: JUMP 0x3b5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x19e]
Exit stack: [V10, 0x19e]

================================

Block 0x19e
[0x19e:0x1b9]
---
Predecessors: [0x3b5]
Successors: []
---
0x19e JUMPDEST
0x19f PUSH1 0x40
0x1a1 MLOAD
0x1a2 PUSH1 0x1
0x1a4 PUSH1 0xa0
0x1a6 PUSH1 0x2
0x1a8 EXP
0x1a9 SUB
0x1aa SWAP1
0x1ab SWAP2
0x1ac AND
0x1ad DUP2
0x1ae MSTORE
0x1af PUSH1 0x20
0x1b1 ADD
0x1b2 PUSH1 0x40
0x1b4 MLOAD
0x1b5 DUP1
0x1b6 SWAP2
0x1b7 SUB
0x1b8 SWAP1
0x1b9 RETURN
---
0x19e: JUMPDEST 
0x19f: V131 = 0x40
0x1a1: V132 = M[0x40]
0x1a2: V133 = 0x1
0x1a4: V134 = 0xa0
0x1a6: V135 = 0x2
0x1a8: V136 = EXP 0x2 0xa0
0x1a9: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ac: V138 = AND V308 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: M[V132] = V138
0x1af: V139 = 0x20
0x1b1: V140 = ADD 0x20 V132
0x1b2: V141 = 0x40
0x1b4: V142 = M[0x40]
0x1b7: V143 = SUB V140 V142
0x1b9: RETURN V142 V143
---
Entry stack: [V10, 0x19e, V308]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x19e]

================================

Block 0x1ba
[0x1ba:0x1c1]
---
Predecessors: [0x96]
Successors: [0x3c4]
---
0x1ba JUMPDEST
0x1bb PUSH2 0xb2
0x1be PUSH2 0x3c4
0x1c1 JUMP
---
0x1ba: JUMPDEST 
0x1bb: V144 = 0xb2
0x1be: V145 = 0x3c4
0x1c1: JUMP 0x3c4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb2]
Exit stack: [V10, 0xb2]

================================

Block 0x1c2
[0x1c2:0x1c3]
---
Predecessors: []
Successors: []
---
0x1c2 JUMPDEST
0x1c3 STOP
---
0x1c2: JUMPDEST 
0x1c3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1c4
[0x1c4:0x1ca]
---
Predecessors: [0xa1]
Successors: [0x1cb, 0x1cf]
---
0x1c4 JUMPDEST
0x1c5 CALLVALUE
0x1c6 ISZERO
0x1c7 PUSH2 0x1cf
0x1ca JUMPI
---
0x1c4: JUMPDEST 
0x1c5: V146 = CALLVALUE
0x1c6: V147 = ISZERO V146
0x1c7: V148 = 0x1cf
0x1ca: JUMPI 0x1cf V147
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cb
[0x1cb:0x1ce]
---
Predecessors: [0x1c4]
Successors: []
---
0x1cb PUSH1 0x0
0x1cd DUP1
0x1ce REVERT
---
0x1cb: V149 = 0x0
0x1ce: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cf
[0x1cf:0x1e2]
---
Predecessors: [0x1c4]
Successors: [0x42b]
---
0x1cf JUMPDEST
0x1d0 PUSH2 0x12b
0x1d3 PUSH1 0x1
0x1d5 PUSH1 0xa0
0x1d7 PUSH1 0x2
0x1d9 EXP
0x1da SUB
0x1db PUSH1 0x4
0x1dd CALLDATALOAD
0x1de AND
0x1df PUSH2 0x42b
0x1e2 JUMP
---
0x1cf: JUMPDEST 
0x1d0: V150 = 0x12b
0x1d3: V151 = 0x1
0x1d5: V152 = 0xa0
0x1d7: V153 = 0x2
0x1d9: V154 = EXP 0x2 0xa0
0x1da: V155 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1db: V156 = 0x4
0x1dd: V157 = CALLDATALOAD 0x4
0x1de: V158 = AND V157 0xffffffffffffffffffffffffffffffffffffffff
0x1df: V159 = 0x42b
0x1e2: JUMP 0x42b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x12b, V158]
Exit stack: [V10, 0x12b, V158]

================================

Block 0x1e3
[0x1e3:0x1f4]
---
Predecessors: []
Successors: []
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x40
0x1e6 MLOAD
0x1e7 SWAP1
0x1e8 DUP2
0x1e9 MSTORE
0x1ea PUSH1 0x20
0x1ec ADD
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 DUP1
0x1f1 SWAP2
0x1f2 SUB
0x1f3 SWAP1
0x1f4 RETURN
---
0x1e3: JUMPDEST 
0x1e4: V160 = 0x40
0x1e6: V161 = M[0x40]
0x1e9: M[V161] = S0
0x1ea: V162 = 0x20
0x1ec: V163 = ADD 0x20 V161
0x1ed: V164 = 0x40
0x1ef: V165 = M[0x40]
0x1f2: V166 = SUB V163 V165
0x1f4: RETURN V165 V166
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1f5
[0x1f5:0x1fd]
---
Predecessors: [0xbf]
Successors: [0xc7]
---
0x1f5 JUMPDEST
0x1f6 PUSH1 0x3
0x1f8 SLOAD
0x1f9 PUSH1 0xff
0x1fb AND
0x1fc DUP2
0x1fd JUMP
---
0x1f5: JUMPDEST 
0x1f6: V167 = 0x3
0x1f8: V168 = S[0x3]
0x1f9: V169 = 0xff
0x1fb: V170 = AND 0xff V168
0x1fd: JUMP 0xc7
---
Entry stack: [V10, 0xc7]
Stack pops: 1
Stack additions: [S0, V170]
Exit stack: [V10, 0xc7, V170]

================================

Block 0x1fe
[0x1fe:0x205]
---
Predecessors: [0xdb]
Successors: [0x395]
---
0x1fe JUMPDEST
0x1ff PUSH2 0x206
0x202 PUSH2 0x395
0x205 JUMP
---
0x1fe: JUMPDEST 
0x1ff: V171 = 0x206
0x202: V172 = 0x395
0x205: JUMP 0x395
---
Entry stack: [V10, 0xb2, V62]
Stack pops: 0
Stack additions: [0x206]
Exit stack: [V10, 0xb2, V62, 0x206]

================================

Block 0x206
[0x206:0x20c]
---
Predecessors: [0x3a8]
Successors: [0x20d, 0x215]
---
0x206 JUMPDEST
0x207 DUP1
0x208 ISZERO
0x209 PUSH2 0x215
0x20c JUMPI
---
0x206: JUMPDEST 
0x208: V173 = ISZERO S0
0x209: V174 = 0x215
0x20c: JUMPI 0x215 V173
---
Entry stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, S0]

================================

Block 0x20d
[0x20d:0x214]
---
Predecessors: [0x206]
Successors: [0x215]
---
0x20d POP
0x20e PUSH1 0x3
0x210 SLOAD
0x211 PUSH1 0xff
0x213 AND
0x214 ISZERO
---
0x20e: V175 = 0x3
0x210: V176 = S[0x3]
0x211: V177 = 0xff
0x213: V178 = AND 0xff V176
0x214: V179 = ISZERO V178
---
Entry stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V179]
Exit stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, V179]

================================

Block 0x215
[0x215:0x21a]
---
Predecessors: [0x206, 0x20d]
Successors: [0x21b, 0x260]
---
0x215 JUMPDEST
0x216 ISZERO
0x217 PUSH2 0x260
0x21a JUMPI
---
0x215: JUMPDEST 
0x216: V180 = ISZERO S0
0x217: V181 = 0x260
0x21a: JUMPI 0x260 V180
---
Entry stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1]

================================

Block 0x21b
[0x21b:0x25f]
---
Predecessors: [0x215]
Successors: [0x260]
---
0x21b PUSH1 0x2
0x21d DUP2
0x21e SWAP1
0x21f SSTORE
0x220 PUSH1 0x3
0x222 DUP1
0x223 SLOAD
0x224 PUSH1 0xff
0x226 NOT
0x227 AND
0x228 PUSH1 0x1
0x22a OR
0x22b SWAP1
0x22c SSTORE
0x22d PUSH32 0xcdf71e4359108e4aa28be4d96f624fbd743133907f1b0e4ced0b317c26060d11
0x24e DUP2
0x24f PUSH1 0x40
0x251 MLOAD
0x252 SWAP1
0x253 DUP2
0x254 MSTORE
0x255 PUSH1 0x20
0x257 ADD
0x258 PUSH1 0x40
0x25a MLOAD
0x25b DUP1
0x25c SWAP2
0x25d SUB
0x25e SWAP1
0x25f LOG1
---
0x21b: V182 = 0x2
0x21f: S[0x2] = S0
0x220: V183 = 0x3
0x223: V184 = S[0x3]
0x224: V185 = 0xff
0x226: V186 = NOT 0xff
0x227: V187 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V184
0x228: V188 = 0x1
0x22a: V189 = OR 0x1 V187
0x22c: S[0x3] = V189
0x22d: V190 = 0xcdf71e4359108e4aa28be4d96f624fbd743133907f1b0e4ced0b317c26060d11
0x24f: V191 = 0x40
0x251: V192 = M[0x40]
0x254: M[V192] = S0
0x255: V193 = 0x20
0x257: V194 = ADD 0x20 V192
0x258: V195 = 0x40
0x25a: V196 = M[0x40]
0x25d: V197 = SUB V194 V196
0x25f: LOG V196 V197 0xcdf71e4359108e4aa28be4d96f624fbd743133907f1b0e4ced0b317c26060d11
---
Entry stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, S0]

================================

Block 0x260
[0x260:0x260]
---
Predecessors: [0x215, 0x21b, 0x318]
Successors: [0x261]
---
0x260 JUMPDEST
---
0x260: JUMPDEST 
---
Entry stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, S0]

================================

Block 0x261
[0x261:0x263]
---
Predecessors: [0x260]
Successors: [0xb2]
---
0x261 JUMPDEST
0x262 POP
0x263 JUMP
---
0x261: JUMPDEST 
0x263: JUMP S1
---
Entry stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2]

================================

Block 0x264
[0x264:0x26d]
---
Predecessors: [0xe8, 0x31d]
Successors: [0x395]
---
0x264 JUMPDEST
0x265 PUSH1 0x0
0x267 PUSH2 0x26e
0x26a PUSH2 0x395
0x26d JUMP
---
0x264: JUMPDEST 
0x265: V198 = 0x0
0x267: V199 = 0x26e
0x26a: V200 = 0x395
0x26d: JUMP 0x395
---
Entry stack: [V10, 0xb2, S3, {0xb2, 0x260}, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x26e]
Exit stack: [V10, 0xb2, S3, {0xb2, 0x260}, S1, S0, 0x0, 0x26e]

================================

Block 0x26e
[0x26e:0x274]
---
Predecessors: [0x3a8]
Successors: [0x275, 0x27d]
---
0x26e JUMPDEST
0x26f DUP1
0x270 ISZERO
0x271 PUSH2 0x27d
0x274 JUMPI
---
0x26e: JUMPDEST 
0x270: V201 = ISZERO S0
0x271: V202 = 0x27d
0x274: JUMPI 0x27d V201
---
Entry stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, S0]

================================

Block 0x275
[0x275:0x27c]
---
Predecessors: [0x26e]
Successors: [0x3ab]
---
0x275 POP
0x276 PUSH2 0x27d
0x279 PUSH2 0x3ab
0x27c JUMP
---
0x276: V203 = 0x27d
0x279: V204 = 0x3ab
0x27c: JUMP 0x3ab
---
Entry stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x27d]
Exit stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, 0x27d]

================================

Block 0x27d
[0x27d:0x27d]
---
Predecessors: [0x26e, 0x3b2]
Successors: [0x27e]
---
0x27d JUMPDEST
---
0x27d: JUMPDEST 
---
Entry stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, S0]

================================

Block 0x27e
[0x27e:0x283]
---
Predecessors: [0x27d]
Successors: [0x284, 0x316]
---
0x27e JUMPDEST
0x27f ISZERO
0x280 PUSH2 0x316
0x283 JUMPI
---
0x27e: JUMPDEST 
0x27f: V205 = ISZERO S0
0x280: V206 = 0x316
0x283: JUMPI 0x316 V205
---
Entry stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1]

================================

Block 0x284
[0x284:0x2a6]
---
Predecessors: [0x27e]
Successors: [0x2a7, 0x2ac]
---
0x284 POP
0x285 PUSH1 0x1
0x287 PUSH1 0xa0
0x289 PUSH1 0x2
0x28b EXP
0x28c SUB
0x28d CALLER
0x28e AND
0x28f PUSH1 0x0
0x291 SWAP1
0x292 DUP2
0x293 MSTORE
0x294 PUSH1 0x1
0x296 PUSH1 0x20
0x298 MSTORE
0x299 PUSH1 0x40
0x29b DUP2
0x29c SHA3
0x29d SLOAD
0x29e SWAP1
0x29f DUP2
0x2a0 GT
0x2a1 DUP1
0x2a2 ISZERO
0x2a3 PUSH2 0x2ac
0x2a6 JUMPI
---
0x285: V207 = 0x1
0x287: V208 = 0xa0
0x289: V209 = 0x2
0x28b: V210 = EXP 0x2 0xa0
0x28c: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28d: V212 = CALLER
0x28e: V213 = AND V212 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V214 = 0x0
0x293: M[0x0] = V213
0x294: V215 = 0x1
0x296: V216 = 0x20
0x298: M[0x20] = 0x1
0x299: V217 = 0x40
0x29c: V218 = SHA3 0x0 0x40
0x29d: V219 = S[V218]
0x2a0: V220 = GT V219 0x0
0x2a2: V221 = ISZERO V220
0x2a3: V222 = 0x2ac
0x2a6: JUMPI 0x2ac V221
---
Entry stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, S0]
Stack pops: 1
Stack additions: [V219, V220]
Exit stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, V219, V220]

================================

Block 0x2a7
[0x2a7:0x2ab]
---
Predecessors: [0x284]
Successors: [0x2ac]
---
0x2a7 POP
0x2a8 DUP1
0x2a9 DUP3
0x2aa GT
0x2ab ISZERO
---
0x2aa: V223 = GT S2 V219
0x2ab: V224 = ISZERO V223
---
Entry stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, V219, V220]
Stack pops: 3
Stack additions: [S2, S1, V224]
Exit stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, V219, V224]

================================

Block 0x2ac
[0x2ac:0x2b1]
---
Predecessors: [0x284, 0x2a7]
Successors: [0x2b2, 0x316]
---
0x2ac JUMPDEST
0x2ad ISZERO
0x2ae PUSH2 0x316
0x2b1 JUMPI
---
0x2ac: JUMPDEST 
0x2ad: V225 = ISZERO S0
0x2ae: V226 = 0x316
0x2b1: JUMPI 0x316 V225
---
Entry stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, V219, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, V219]

================================

Block 0x2b2
[0x2b2:0x2dd]
---
Predecessors: [0x2ac]
Successors: [0x2de, 0x2e2]
---
0x2b2 PUSH1 0x1
0x2b4 PUSH1 0xa0
0x2b6 PUSH1 0x2
0x2b8 EXP
0x2b9 SUB
0x2ba DUP4
0x2bb AND
0x2bc DUP3
0x2bd ISZERO
0x2be PUSH2 0x8fc
0x2c1 MUL
0x2c2 DUP4
0x2c3 PUSH1 0x40
0x2c5 MLOAD
0x2c6 PUSH1 0x0
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb DUP1
0x2cc DUP4
0x2cd SUB
0x2ce DUP2
0x2cf DUP6
0x2d0 DUP9
0x2d1 DUP9
0x2d2 CALL
0x2d3 SWAP4
0x2d4 POP
0x2d5 POP
0x2d6 POP
0x2d7 POP
0x2d8 ISZERO
0x2d9 ISZERO
0x2da PUSH2 0x2e2
0x2dd JUMPI
---
0x2b2: V227 = 0x1
0x2b4: V228 = 0xa0
0x2b6: V229 = 0x2
0x2b8: V230 = EXP 0x2 0xa0
0x2b9: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bb: V232 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V233 = ISZERO S1
0x2be: V234 = 0x8fc
0x2c1: V235 = MUL 0x8fc V233
0x2c3: V236 = 0x40
0x2c5: V237 = M[0x40]
0x2c6: V238 = 0x0
0x2c8: V239 = 0x40
0x2ca: V240 = M[0x40]
0x2cd: V241 = SUB V237 V240
0x2d2: V242 = CALL V235 V232 S1 V240 V241 V240 0x0
0x2d8: V243 = ISZERO V242
0x2d9: V244 = ISZERO V243
0x2da: V245 = 0x2e2
0x2dd: JUMPI 0x2e2 V244
---
Entry stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, V219]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, V219]

================================

Block 0x2de
[0x2de:0x2e1]
---
Predecessors: [0x2b2]
Successors: []
---
0x2de PUSH1 0x0
0x2e0 DUP1
0x2e1 REVERT
---
0x2de: V246 = 0x0
0x2e1: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, V219]

================================

Block 0x2e2
[0x2e2:0x315]
---
Predecessors: [0x2b2]
Successors: [0x316]
---
0x2e2 JUMPDEST
0x2e3 PUSH32 0x4e70a604b23a8edee2b1d0a656e9b9c00b73ad8bb1afc2c59381ee9f69197de7
0x304 DUP3
0x305 PUSH1 0x40
0x307 MLOAD
0x308 SWAP1
0x309 DUP2
0x30a MSTORE
0x30b PUSH1 0x20
0x30d ADD
0x30e PUSH1 0x40
0x310 MLOAD
0x311 DUP1
0x312 SWAP2
0x313 SUB
0x314 SWAP1
0x315 LOG1
---
0x2e2: JUMPDEST 
0x2e3: V247 = 0x4e70a604b23a8edee2b1d0a656e9b9c00b73ad8bb1afc2c59381ee9f69197de7
0x305: V248 = 0x40
0x307: V249 = M[0x40]
0x30a: M[V249] = S1
0x30b: V250 = 0x20
0x30d: V251 = ADD 0x20 V249
0x30e: V252 = 0x40
0x310: V253 = M[0x40]
0x313: V254 = SUB V251 V253
0x315: LOG V253 V254 0x4e70a604b23a8edee2b1d0a656e9b9c00b73ad8bb1afc2c59381ee9f69197de7
---
Entry stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, V219]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, V219]

================================

Block 0x316
[0x316:0x316]
---
Predecessors: [0x27e, 0x2ac, 0x2e2]
Successors: [0x317]
---
0x316 JUMPDEST
---
0x316: JUMPDEST 
---
Entry stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, S0]

================================

Block 0x317
[0x317:0x317]
---
Predecessors: [0x316]
Successors: [0x318]
---
0x317 JUMPDEST
---
0x317: JUMPDEST 
---
Entry stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, S0]

================================

Block 0x318
[0x318:0x31c]
---
Predecessors: [0x317]
Successors: [0xb2, 0x260]
---
0x318 JUMPDEST
0x319 POP
0x31a POP
0x31b POP
0x31c JUMP
---
0x318: JUMPDEST 
0x31c: JUMP {0xb2, 0x260}
---
Entry stack: [V10, 0xb2, S4, {0xb2, 0x260}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0xb2, S4]

================================

Block 0x31d
[0x31d:0x326]
---
Predecessors: [0x101]
Successors: [0x264]
---
0x31d JUMPDEST
0x31e PUSH2 0x260
0x321 CALLER
0x322 DUP3
0x323 PUSH2 0x264
0x326 JUMP
---
0x31d: JUMPDEST 
0x31e: V255 = 0x260
0x321: V256 = CALLER
0x323: V257 = 0x264
0x326: JUMP 0x264
---
Entry stack: [V10, 0xb2, V78]
Stack pops: 1
Stack additions: [S0, 0x260, V256, S0]
Exit stack: [V10, 0xb2, V78, 0x260, V256, V78]

================================

Block 0x327
[0x327:0x327]
---
Predecessors: []
Successors: [0x328]
---
0x327 JUMPDEST
---
0x327: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x328
[0x328:0x32a]
---
Predecessors: [0x327]
Successors: []
Has unresolved jump.
---
0x328 JUMPDEST
0x329 POP
0x32a JUMP
---
0x328: JUMPDEST 
0x32a: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x32b
[0x32b:0x38c]
---
Predecessors: [0x10e]
Successors: [0x38d]
---
0x32b JUMPDEST
0x32c PUSH1 0x0
0x32e DUP1
0x32f SLOAD
0x330 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x345 NOT
0x346 AND
0x347 CALLER
0x348 PUSH1 0x1
0x34a PUSH1 0xa0
0x34c PUSH1 0x2
0x34e EXP
0x34f SUB
0x350 AND
0x351 OR
0x352 DUP2
0x353 SSTORE
0x354 PUSH1 0x2
0x356 SSTORE
0x357 PUSH1 0x3
0x359 DUP1
0x35a SLOAD
0x35b PUSH1 0xff
0x35d NOT
0x35e AND
0x35f SWAP1
0x360 SSTORE
0x361 PUSH32 0x5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c8
0x382 PUSH1 0x40
0x384 MLOAD
0x385 PUSH1 0x40
0x387 MLOAD
0x388 DUP1
0x389 SWAP2
0x38a SUB
0x38b SWAP1
0x38c LOG1
---
0x32b: JUMPDEST 
0x32c: V258 = 0x0
0x32f: V259 = S[0x0]
0x330: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x345: V261 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x346: V262 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V259
0x347: V263 = CALLER
0x348: V264 = 0x1
0x34a: V265 = 0xa0
0x34c: V266 = 0x2
0x34e: V267 = EXP 0x2 0xa0
0x34f: V268 = SUB 0x10000000000000000000000000000000000000000 0x1
0x350: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x351: V270 = OR V269 V262
0x353: S[0x0] = V270
0x354: V271 = 0x2
0x356: S[0x2] = 0x0
0x357: V272 = 0x3
0x35a: V273 = S[0x3]
0x35b: V274 = 0xff
0x35d: V275 = NOT 0xff
0x35e: V276 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V273
0x360: S[0x3] = V276
0x361: V277 = 0x5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c8
0x382: V278 = 0x40
0x384: V279 = M[0x40]
0x385: V280 = 0x40
0x387: V281 = M[0x40]
0x38a: V282 = SUB V279 V281
0x38c: LOG V281 V282 0x5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c8
---
Entry stack: [V10, 0xb2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2]

================================

Block 0x38d
[0x38d:0x38e]
---
Predecessors: [0x32b, 0x3c4]
Successors: [0xb2]
---
0x38d JUMPDEST
0x38e JUMP
---
0x38d: JUMPDEST 
0x38e: JUMP 0xb2
---
Entry stack: [V10, 0xb2]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x38f
[0x38f:0x394]
---
Predecessors: [0x123]
Successors: [0x12b]
---
0x38f JUMPDEST
0x390 PUSH1 0x2
0x392 SLOAD
0x393 DUP2
0x394 JUMP
---
0x38f: JUMPDEST 
0x390: V283 = 0x2
0x392: V284 = S[0x2]
0x394: JUMP 0x12b
---
Entry stack: [V10, 0x12b]
Stack pops: 1
Stack additions: [S0, V284]
Exit stack: [V10, 0x12b, V284]

================================

Block 0x395
[0x395:0x3a7]
---
Predecessors: [0x148, 0x1fe, 0x264]
Successors: [0x3a8]
---
0x395 JUMPDEST
0x396 PUSH1 0x0
0x398 SLOAD
0x399 CALLER
0x39a PUSH1 0x1
0x39c PUSH1 0xa0
0x39e PUSH1 0x2
0x3a0 EXP
0x3a1 SUB
0x3a2 SWAP1
0x3a3 DUP2
0x3a4 AND
0x3a5 SWAP2
0x3a6 AND
0x3a7 EQ
---
0x395: JUMPDEST 
0x396: V285 = 0x0
0x398: V286 = S[0x0]
0x399: V287 = CALLER
0x39a: V288 = 0x1
0x39c: V289 = 0xa0
0x39e: V290 = 0x2
0x3a0: V291 = EXP 0x2 0xa0
0x3a1: V292 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a4: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x3a6: V294 = AND V286 0xffffffffffffffffffffffffffffffffffffffff
0x3a7: V295 = EQ V294 V293
---
Entry stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, {0xc7, 0x206, 0x26e}]
Stack pops: 0
Stack additions: [V295]
Exit stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, {0xc7, 0x206, 0x26e}, V295]

================================

Block 0x3a8
[0x3a8:0x3aa]
---
Predecessors: [0x395]
Successors: [0xc7, 0x206, 0x26e]
---
0x3a8 JUMPDEST
0x3a9 SWAP1
0x3aa JUMP
---
0x3a8: JUMPDEST 
0x3aa: JUMP {0xc7, 0x206, 0x26e}
---
Entry stack: [V10, 0xb2, S6, {0xb2, 0x260}, S4, S3, S2, {0xc7, 0x206, 0x26e}, V295]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0xb2, S6, {0xb2, 0x260}, S4, S3, S2, V295]

================================

Block 0x3ab
[0x3ab:0x3b1]
---
Predecessors: [0x16f, 0x275]
Successors: [0x3b2]
---
0x3ab JUMPDEST
0x3ac PUSH1 0x2
0x3ae SLOAD
0x3af TIMESTAMP
0x3b0 LT
0x3b1 ISZERO
---
0x3ab: JUMPDEST 
0x3ac: V296 = 0x2
0x3ae: V297 = S[0x2]
0x3af: V298 = TIMESTAMP
0x3b0: V299 = LT V298 V297
0x3b1: V300 = ISZERO V299
---
Entry stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, {0xc7, 0x27d}]
Stack pops: 0
Stack additions: [V300]
Exit stack: [V10, 0xb2, S5, {0xb2, 0x260}, S3, S2, S1, {0xc7, 0x27d}, V300]

================================

Block 0x3b2
[0x3b2:0x3b4]
---
Predecessors: [0x3ab]
Successors: [0xc7, 0x27d]
---
0x3b2 JUMPDEST
0x3b3 SWAP1
0x3b4 JUMP
---
0x3b2: JUMPDEST 
0x3b4: JUMP {0xc7, 0x27d}
---
Entry stack: [V10, 0xb2, S6, {0xb2, 0x260}, S4, S3, S2, {0xc7, 0x27d}, V300]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0xb2, S6, {0xb2, 0x260}, S4, S3, S2, V300]

================================

Block 0x3b5
[0x3b5:0x3c3]
---
Predecessors: [0x196]
Successors: [0x19e]
---
0x3b5 JUMPDEST
0x3b6 PUSH1 0x0
0x3b8 SLOAD
0x3b9 PUSH1 0x1
0x3bb PUSH1 0xa0
0x3bd PUSH1 0x2
0x3bf EXP
0x3c0 SUB
0x3c1 AND
0x3c2 DUP2
0x3c3 JUMP
---
0x3b5: JUMPDEST 
0x3b6: V301 = 0x0
0x3b8: V302 = S[0x0]
0x3b9: V303 = 0x1
0x3bb: V304 = 0xa0
0x3bd: V305 = 0x2
0x3bf: V306 = EXP 0x2 0xa0
0x3c0: V307 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c1: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0x3c3: JUMP 0x19e
---
Entry stack: [V10, 0x19e]
Stack pops: 1
Stack additions: [S0, V308]
Exit stack: [V10, 0x19e, V308]

================================

Block 0x3c4
[0x3c4:0x3d3]
---
Predecessors: [0x1ba]
Successors: [0x38d, 0x3d4]
---
0x3c4 JUMPDEST
0x3c5 PUSH8 0x3782dace9d90000
0x3ce CALLVALUE
0x3cf LT
0x3d0 PUSH2 0x38d
0x3d3 JUMPI
---
0x3c4: JUMPDEST 
0x3c5: V309 = 0x3782dace9d90000
0x3ce: V310 = CALLVALUE
0x3cf: V311 = LT V310 0x3782dace9d90000
0x3d0: V312 = 0x38d
0x3d3: JUMPI 0x38d V311
---
Entry stack: [V10, 0xb2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2]

================================

Block 0x3d4
[0x3d4:0x427]
---
Predecessors: [0x3c4]
Successors: [0x428]
---
0x3d4 PUSH1 0x1
0x3d6 PUSH1 0xa0
0x3d8 PUSH1 0x2
0x3da EXP
0x3db SUB
0x3dc CALLER
0x3dd AND
0x3de PUSH1 0x0
0x3e0 SWAP1
0x3e1 DUP2
0x3e2 MSTORE
0x3e3 PUSH1 0x1
0x3e5 PUSH1 0x20
0x3e7 MSTORE
0x3e8 PUSH1 0x40
0x3ea SWAP1
0x3eb DUP2
0x3ec SWAP1
0x3ed SHA3
0x3ee DUP1
0x3ef SLOAD
0x3f0 CALLVALUE
0x3f1 SWAP1
0x3f2 DUP2
0x3f3 ADD
0x3f4 SWAP1
0x3f5 SWAP2
0x3f6 SSTORE
0x3f7 PUSH32 0x4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e38426
0x418 SWAP2
0x419 MLOAD
0x41a SWAP1
0x41b DUP2
0x41c MSTORE
0x41d PUSH1 0x20
0x41f ADD
0x420 PUSH1 0x40
0x422 MLOAD
0x423 DUP1
0x424 SWAP2
0x425 SUB
0x426 SWAP1
0x427 LOG1
---
0x3d4: V313 = 0x1
0x3d6: V314 = 0xa0
0x3d8: V315 = 0x2
0x3da: V316 = EXP 0x2 0xa0
0x3db: V317 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3dc: V318 = CALLER
0x3dd: V319 = AND V318 0xffffffffffffffffffffffffffffffffffffffff
0x3de: V320 = 0x0
0x3e2: M[0x0] = V319
0x3e3: V321 = 0x1
0x3e5: V322 = 0x20
0x3e7: M[0x20] = 0x1
0x3e8: V323 = 0x40
0x3ed: V324 = SHA3 0x0 0x40
0x3ef: V325 = S[V324]
0x3f0: V326 = CALLVALUE
0x3f3: V327 = ADD V326 V325
0x3f6: S[V324] = V327
0x3f7: V328 = 0x4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e38426
0x419: V329 = M[0x40]
0x41c: M[V329] = V326
0x41d: V330 = 0x20
0x41f: V331 = ADD 0x20 V329
0x420: V332 = 0x40
0x422: V333 = M[0x40]
0x425: V334 = SUB V331 V333
0x427: LOG V333 V334 0x4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e38426
---
Entry stack: [V10, 0xb2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2]

================================

Block 0x428
[0x428:0x428]
---
Predecessors: [0x3d4]
Successors: [0x429]
---
0x428 JUMPDEST
---
0x428: JUMPDEST 
---
Entry stack: [V10, 0xb2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2]

================================

Block 0x429
[0x429:0x42a]
---
Predecessors: [0x428]
Successors: [0xb2]
---
0x429 JUMPDEST
0x42a JUMP
---
0x429: JUMPDEST 
0x42a: JUMP 0xb2
---
Entry stack: [V10, 0xb2]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x42b
[0x42b:0x43c]
---
Predecessors: [0x1cf]
Successors: [0x12b]
---
0x42b JUMPDEST
0x42c PUSH1 0x1
0x42e PUSH1 0x20
0x430 MSTORE
0x431 PUSH1 0x0
0x433 SWAP1
0x434 DUP2
0x435 MSTORE
0x436 PUSH1 0x40
0x438 SWAP1
0x439 SHA3
0x43a SLOAD
0x43b DUP2
0x43c JUMP
---
0x42b: JUMPDEST 
0x42c: V335 = 0x1
0x42e: V336 = 0x20
0x430: M[0x20] = 0x1
0x431: V337 = 0x0
0x435: M[0x0] = V158
0x436: V338 = 0x40
0x439: V339 = SHA3 0x0 0x40
0x43a: V340 = S[V339]
0x43c: JUMP 0x12b
---
Entry stack: [V10, 0x12b, V158]
Stack pops: 2
Stack additions: [S1, V340]
Exit stack: [V10, 0x12b, V340]

================================

Block 0x43d
[0x43d:0x46f]
---
Predecessors: []
Successors: []
---
0x43d STOP
0x43e LOG1
0x43f PUSH6 0x627a7a723058
0x446 SHA3
0x447 PUSH3 0x381be7
0x44b CODESIZE
0x44c MISSING 0x22
0x44d MISSING 0xec
0x44e SELFDESTRUCT
0x44f PUSH32 0xf3e2b50557d1b30d4b7f1272397ca9a8bd4853c6af8ca90029
---
0x43d: STOP 
0x43e: LOG S0 S1 S2
0x43f: V341 = 0x627a7a723058
0x446: V342 = SHA3 0x627a7a723058 S3
0x447: V343 = 0x381be7
0x44b: V344 = CODESIZE
0x44c: MISSING 0x22
0x44d: MISSING 0xec
0x44e: SELFDESTRUCT S0
0x44f: V345 = 0xf3e2b50557d1b30d4b7f1272397ca9a8bd4853c6af8ca90029
---
Entry stack: []
Stack pops: 0
Stack additions: [V344, 0x381be7, V342, 0xf3e2b50557d1b30d4b7f1272397ca9a8bd4853c6af8ca90029]
Exit stack: []

================================

Function 0:
Public function signature: 0xf2e5b6c
Entry block: 0xb4
Exit block: 0xc7
Body: 0xb4, 0xbb, 0xbf, 0xc7, 0x1f5

Function 1:
Public function signature: 0x1352faec
Entry block: 0xdb
Exit block: 0xb2
Body: 0xb2, 0xdb, 0x1fe, 0x206, 0x20d, 0x215, 0x21b, 0x260, 0x261

Function 2:
Public function signature: 0x205c2878
Entry block: 0xe8
Exit block: 0xb2
Body: 0xb2, 0xe8

Function 3:
Public function signature: 0x2e1a7d4d
Entry block: 0x101
Exit block: 0xb2
Body: 0xb2, 0x101, 0x260, 0x261, 0x31d

Function 4:
Public function signature: 0x8129fc1c
Entry block: 0x10e
Exit block: 0xb2
Body: 0xb2, 0x10e, 0x32b, 0x38d

Function 5:
Public function signature: 0x8cf49cad
Entry block: 0x118
Exit block: 0x12b
Body: 0x118, 0x11f, 0x123, 0x12b, 0x38f

Function 6:
Public function signature: 0x8f32d59b
Entry block: 0x13d
Exit block: 0x144
Body: 0xc7, 0x13d, 0x144, 0x148

Function 7:
Public function signature: 0xad9bdebb
Entry block: 0x164
Exit block: 0xc7
Body: 0xc7, 0x164, 0x16b, 0x16f

Function 8:
Public function signature: 0xb4a99a4e
Entry block: 0x18b
Exit block: 0x19e
Body: 0x18b, 0x192, 0x196, 0x19e, 0x3b5

Function 9:
Public function signature: 0xd0e30db0
Entry block: 0x1ba
Exit block: 0xb2
Body: 0xb2, 0x1ba, 0x38d, 0x3c4, 0x3d4, 0x428, 0x429

Function 10:
Public function signature: 0xfc7e286d
Entry block: 0x1c4
Exit block: 0x12b
Body: 0x12b, 0x1c4, 0x1cb, 0x1cf, 0x42b

Function 11:
Public fallback function
Entry block: 0xac
Exit block: 0xad
Body: 0xac, 0xad

Function 12:
Private function
Entry block: 0x3ab
Exit block: 0x3b2
Body: 0x3ab, 0x3b2

Function 13:
Private function
Entry block: 0x395
Exit block: 0x3a8
Body: 0x395, 0x3a8

Function 14:
Private function
Entry block: 0x264
Exit block: 0x318
Body: 0x264, 0x26e, 0x275, 0x27d, 0x27e, 0x284, 0x2a7, 0x2ac, 0x2b2, 0x2e2, 0x316, 0x317, 0x318

