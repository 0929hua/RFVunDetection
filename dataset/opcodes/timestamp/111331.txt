Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8b
0xa: JUMPI 0x8b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x97]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x2e1a7d4d
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x97
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x2e1a7d4d
0x39: V12 = EQ V10 0x2e1a7d4d
0x3a: V13 = 0x97
0x3d: JUMPI 0x97 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xaf]
---
0x3e DUP1
0x3f PUSH4 0x41c0e1b5
0x44 EQ
0x45 PUSH2 0xaf
0x48 JUMPI
---
0x3f: V14 = 0x41c0e1b5
0x44: V15 = EQ 0x41c0e1b5 V10
0x45: V16 = 0xaf
0x48: JUMPI 0xaf V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xc4]
---
0x49 DUP1
0x4a PUSH4 0x4fb2e45d
0x4f EQ
0x50 PUSH2 0xc4
0x53 JUMPI
---
0x4a: V17 = 0x4fb2e45d
0x4f: V18 = EQ 0x4fb2e45d V10
0x50: V19 = 0xc4
0x53: JUMPI 0xc4 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0xe5]
---
0x54 DUP1
0x55 PUSH4 0xb4a99a4e
0x5a EQ
0x5b PUSH2 0xe5
0x5e JUMPI
---
0x55: V20 = 0xb4a99a4e
0x5a: V21 = EQ 0xb4a99a4e V10
0x5b: V22 = 0xe5
0x5e: JUMPI 0xe5 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x114]
---
0x5f DUP1
0x60 PUSH4 0xb7f9c4f6
0x65 EQ
0x66 PUSH2 0x114
0x69 JUMPI
---
0x60: V23 = 0xb7f9c4f6
0x65: V24 = EQ 0xb7f9c4f6 V10
0x66: V25 = 0x114
0x69: JUMPI 0x114 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x8b]
---
0x6a DUP1
0x6b PUSH4 0xd0e30db0
0x70 EQ
0x71 PUSH2 0x8b
0x74 JUMPI
---
0x6b: V26 = 0xd0e30db0
0x70: V27 = EQ 0xd0e30db0 V10
0x71: V28 = 0x8b
0x74: JUMPI 0x8b V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x136]
---
0x75 DUP1
0x76 PUSH4 0xec8cb281
0x7b EQ
0x7c PUSH2 0x136
0x7f JUMPI
---
0x76: V29 = 0xec8cb281
0x7b: V30 = EQ 0xec8cb281 V10
0x7c: V31 = 0x136
0x7f: JUMPI 0x136 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x15b]
---
0x80 DUP1
0x81 PUSH4 0xfc7e286d
0x86 EQ
0x87 PUSH2 0x15b
0x8a JUMPI
---
0x81: V32 = 0xfc7e286d
0x86: V33 = EQ 0xfc7e286d V10
0x87: V34 = 0x15b
0x8a: JUMPI 0x15b V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x8b]
---
Predecessors: [0x0, 0x6a, 0x80]
Successors: [0x8c]
---
0x8b JUMPDEST
---
0x8b: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x93]
---
Predecessors: [0x8b]
Successors: [0x18c]
---
0x8c JUMPDEST
0x8d PUSH2 0x94
0x90 PUSH2 0x18c
0x93 JUMP
---
0x8c: JUMPDEST 
0x8d: V35 = 0x94
0x90: V36 = 0x18c
0x93: JUMP 0x18c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x94]
Exit stack: [V10, 0x94]

================================

Block 0x94
[0x94:0x94]
---
Predecessors: [0x1fa, 0x2b5, 0x346, 0x3c1]
Successors: [0x95]
---
0x94 JUMPDEST
---
0x94: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x95
[0x95:0x96]
---
Predecessors: [0x94]
Successors: []
---
0x95 JUMPDEST
0x96 STOP
---
0x95: JUMPDEST 
0x96: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x97
[0x97:0x9d]
---
Predecessors: [0xb]
Successors: [0x9e, 0xa2]
---
0x97 JUMPDEST
0x98 CALLVALUE
0x99 ISZERO
0x9a PUSH2 0xa2
0x9d JUMPI
---
0x97: JUMPDEST 
0x98: V37 = CALLVALUE
0x99: V38 = ISZERO V37
0x9a: V39 = 0xa2
0x9d: JUMPI 0xa2 V38
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9e
[0x9e:0xa1]
---
Predecessors: [0x97]
Successors: []
---
0x9e PUSH1 0x0
0xa0 DUP1
0xa1 REVERT
---
0x9e: V40 = 0x0
0xa1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0x1fc]
---
0xa2 JUMPDEST
0xa3 PUSH2 0x94
0xa6 PUSH1 0x4
0xa8 CALLDATALOAD
0xa9 PUSH2 0x1fc
0xac JUMP
---
0xa2: JUMPDEST 
0xa3: V41 = 0x94
0xa6: V42 = 0x4
0xa8: V43 = CALLDATALOAD 0x4
0xa9: V44 = 0x1fc
0xac: JUMP 0x1fc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x94, V43]
Exit stack: [V10, 0x94, V43]

================================

Block 0xad
[0xad:0xae]
---
Predecessors: []
Successors: []
---
0xad JUMPDEST
0xae STOP
---
0xad: JUMPDEST 
0xae: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaf
[0xaf:0xb5]
---
Predecessors: [0x3e]
Successors: [0xb6, 0xba]
---
0xaf JUMPDEST
0xb0 CALLVALUE
0xb1 ISZERO
0xb2 PUSH2 0xba
0xb5 JUMPI
---
0xaf: JUMPDEST 
0xb0: V45 = CALLVALUE
0xb1: V46 = ISZERO V45
0xb2: V47 = 0xba
0xb5: JUMPI 0xba V46
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb6
[0xb6:0xb9]
---
Predecessors: [0xaf]
Successors: []
---
0xb6 PUSH1 0x0
0xb8 DUP1
0xb9 REVERT
---
0xb6: V48 = 0x0
0xb9: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xba
[0xba:0xc1]
---
Predecessors: [0xaf]
Successors: [0x2b9]
---
0xba JUMPDEST
0xbb PUSH2 0x94
0xbe PUSH2 0x2b9
0xc1 JUMP
---
0xba: JUMPDEST 
0xbb: V49 = 0x94
0xbe: V50 = 0x2b9
0xc1: JUMP 0x2b9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x94]
Exit stack: [V10, 0x94]

================================

Block 0xc2
[0xc2:0xc3]
---
Predecessors: []
Successors: []
---
0xc2 JUMPDEST
0xc3 STOP
---
0xc2: JUMPDEST 
0xc3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc4
[0xc4:0xca]
---
Predecessors: [0x49]
Successors: [0xcb, 0xcf]
---
0xc4 JUMPDEST
0xc5 CALLVALUE
0xc6 ISZERO
0xc7 PUSH2 0xcf
0xca JUMPI
---
0xc4: JUMPDEST 
0xc5: V51 = CALLVALUE
0xc6: V52 = ISZERO V51
0xc7: V53 = 0xcf
0xca: JUMPI 0xcf V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcb
[0xcb:0xce]
---
Predecessors: [0xc4]
Successors: []
---
0xcb PUSH1 0x0
0xcd DUP1
0xce REVERT
---
0xcb: V54 = 0x0
0xce: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcf
[0xcf:0xe2]
---
Predecessors: [0xc4]
Successors: [0x2f2]
---
0xcf JUMPDEST
0xd0 PUSH2 0x94
0xd3 PUSH1 0x1
0xd5 PUSH1 0xa0
0xd7 PUSH1 0x2
0xd9 EXP
0xda SUB
0xdb PUSH1 0x4
0xdd CALLDATALOAD
0xde AND
0xdf PUSH2 0x2f2
0xe2 JUMP
---
0xcf: JUMPDEST 
0xd0: V55 = 0x94
0xd3: V56 = 0x1
0xd5: V57 = 0xa0
0xd7: V58 = 0x2
0xd9: V59 = EXP 0x2 0xa0
0xda: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdb: V61 = 0x4
0xdd: V62 = CALLDATALOAD 0x4
0xde: V63 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0xdf: V64 = 0x2f2
0xe2: JUMP 0x2f2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x94, V63]
Exit stack: [V10, 0x94, V63]

================================

Block 0xe3
[0xe3:0xe4]
---
Predecessors: []
Successors: []
---
0xe3 JUMPDEST
0xe4 STOP
---
0xe3: JUMPDEST 
0xe4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe5
[0xe5:0xeb]
---
Predecessors: [0x54]
Successors: [0xec, 0xf0]
---
0xe5 JUMPDEST
0xe6 CALLVALUE
0xe7 ISZERO
0xe8 PUSH2 0xf0
0xeb JUMPI
---
0xe5: JUMPDEST 
0xe6: V65 = CALLVALUE
0xe7: V66 = ISZERO V65
0xe8: V67 = 0xf0
0xeb: JUMPI 0xf0 V66
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xec
[0xec:0xef]
---
Predecessors: [0xe5]
Successors: []
---
0xec PUSH1 0x0
0xee DUP1
0xef REVERT
---
0xec: V68 = 0x0
0xef: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf0
[0xf0:0xf7]
---
Predecessors: [0xe5]
Successors: [0x349]
---
0xf0 JUMPDEST
0xf1 PUSH2 0xf8
0xf4 PUSH2 0x349
0xf7 JUMP
---
0xf0: JUMPDEST 
0xf1: V69 = 0xf8
0xf4: V70 = 0x349
0xf7: JUMP 0x349
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf8]
Exit stack: [V10, 0xf8]

================================

Block 0xf8
[0xf8:0x113]
---
Predecessors: [0x349]
Successors: []
---
0xf8 JUMPDEST
0xf9 PUSH1 0x40
0xfb MLOAD
0xfc PUSH1 0x1
0xfe PUSH1 0xa0
0x100 PUSH1 0x2
0x102 EXP
0x103 SUB
0x104 SWAP1
0x105 SWAP2
0x106 AND
0x107 DUP2
0x108 MSTORE
0x109 PUSH1 0x20
0x10b ADD
0x10c PUSH1 0x40
0x10e MLOAD
0x10f DUP1
0x110 SWAP2
0x111 SUB
0x112 SWAP1
0x113 RETURN
---
0xf8: JUMPDEST 
0xf9: V71 = 0x40
0xfb: V72 = M[0x40]
0xfc: V73 = 0x1
0xfe: V74 = 0xa0
0x100: V75 = 0x2
0x102: V76 = EXP 0x2 0xa0
0x103: V77 = SUB 0x10000000000000000000000000000000000000000 0x1
0x106: V78 = AND V300 0xffffffffffffffffffffffffffffffffffffffff
0x108: M[V72] = V78
0x109: V79 = 0x20
0x10b: V80 = ADD 0x20 V72
0x10c: V81 = 0x40
0x10e: V82 = M[0x40]
0x111: V83 = SUB V80 V82
0x113: RETURN V82 V83
---
Entry stack: [V10, 0xf8, V300]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xf8]

================================

Block 0x114
[0x114:0x11a]
---
Predecessors: [0x5f]
Successors: [0x11b, 0x11f]
---
0x114 JUMPDEST
0x115 CALLVALUE
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x114: JUMPDEST 
0x115: V84 = CALLVALUE
0x116: V85 = ISZERO V84
0x117: V86 = 0x11f
0x11a: JUMPI 0x11f V85
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x114]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V87 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11f
[0x11f:0x129]
---
Predecessors: [0x114]
Successors: [0x358]
---
0x11f JUMPDEST
0x120 PUSH2 0x94
0x123 PUSH1 0x4
0x125 CALLDATALOAD
0x126 PUSH2 0x358
0x129 JUMP
---
0x11f: JUMPDEST 
0x120: V88 = 0x94
0x123: V89 = 0x4
0x125: V90 = CALLDATALOAD 0x4
0x126: V91 = 0x358
0x129: JUMP 0x358
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x94, V90]
Exit stack: [V10, 0x94, V90]

================================

Block 0x12a
[0x12a:0x133]
---
Predecessors: []
Successors: [0x18c]
---
0x12a JUMPDEST
0x12b STOP
0x12c JUMPDEST
0x12d PUSH2 0x94
0x130 PUSH2 0x18c
0x133 JUMP
---
0x12a: JUMPDEST 
0x12b: STOP 
0x12c: JUMPDEST 
0x12d: V92 = 0x94
0x130: V93 = 0x18c
0x133: JUMP 0x18c
---
Entry stack: []
Stack pops: 0
Stack additions: [0x94]
Exit stack: []

================================

Block 0x134
[0x134:0x135]
---
Predecessors: []
Successors: []
---
0x134 JUMPDEST
0x135 STOP
---
0x134: JUMPDEST 
0x135: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x136
[0x136:0x13c]
---
Predecessors: [0x75]
Successors: [0x13d, 0x141]
---
0x136 JUMPDEST
0x137 CALLVALUE
0x138 ISZERO
0x139 PUSH2 0x141
0x13c JUMPI
---
0x136: JUMPDEST 
0x137: V94 = CALLVALUE
0x138: V95 = ISZERO V94
0x139: V96 = 0x141
0x13c: JUMPI 0x141 V95
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13d
[0x13d:0x140]
---
Predecessors: [0x136]
Successors: []
---
0x13d PUSH1 0x0
0x13f DUP1
0x140 REVERT
---
0x13d: V97 = 0x0
0x140: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x141
[0x141:0x148]
---
Predecessors: [0x136]
Successors: [0x3c4]
---
0x141 JUMPDEST
0x142 PUSH2 0x149
0x145 PUSH2 0x3c4
0x148 JUMP
---
0x141: JUMPDEST 
0x142: V98 = 0x149
0x145: V99 = 0x3c4
0x148: JUMP 0x3c4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x149]
Exit stack: [V10, 0x149]

================================

Block 0x149
[0x149:0x15a]
---
Predecessors: [0x3c4, 0x3ca]
Successors: []
---
0x149 JUMPDEST
0x14a PUSH1 0x40
0x14c MLOAD
0x14d SWAP1
0x14e DUP2
0x14f MSTORE
0x150 PUSH1 0x20
0x152 ADD
0x153 PUSH1 0x40
0x155 MLOAD
0x156 DUP1
0x157 SWAP2
0x158 SUB
0x159 SWAP1
0x15a RETURN
---
0x149: JUMPDEST 
0x14a: V100 = 0x40
0x14c: V101 = M[0x40]
0x14f: M[V101] = S0
0x150: V102 = 0x20
0x152: V103 = ADD 0x20 V101
0x153: V104 = 0x40
0x155: V105 = M[0x40]
0x158: V106 = SUB V103 V105
0x15a: RETURN V105 V106
---
Entry stack: [V10, 0x149, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x149]

================================

Block 0x15b
[0x15b:0x161]
---
Predecessors: [0x80]
Successors: [0x162, 0x166]
---
0x15b JUMPDEST
0x15c CALLVALUE
0x15d ISZERO
0x15e PUSH2 0x166
0x161 JUMPI
---
0x15b: JUMPDEST 
0x15c: V107 = CALLVALUE
0x15d: V108 = ISZERO V107
0x15e: V109 = 0x166
0x161: JUMPI 0x166 V108
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x162
[0x162:0x165]
---
Predecessors: [0x15b]
Successors: []
---
0x162 PUSH1 0x0
0x164 DUP1
0x165 REVERT
---
0x162: V110 = 0x0
0x165: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x166
[0x166:0x179]
---
Predecessors: [0x15b]
Successors: [0x3ca]
---
0x166 JUMPDEST
0x167 PUSH2 0x149
0x16a PUSH1 0x1
0x16c PUSH1 0xa0
0x16e PUSH1 0x2
0x170 EXP
0x171 SUB
0x172 PUSH1 0x4
0x174 CALLDATALOAD
0x175 AND
0x176 PUSH2 0x3ca
0x179 JUMP
---
0x166: JUMPDEST 
0x167: V111 = 0x149
0x16a: V112 = 0x1
0x16c: V113 = 0xa0
0x16e: V114 = 0x2
0x170: V115 = EXP 0x2 0xa0
0x171: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x172: V117 = 0x4
0x174: V118 = CALLDATALOAD 0x4
0x175: V119 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x176: V120 = 0x3ca
0x179: JUMP 0x3ca
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x149, V119]
Exit stack: [V10, 0x149, V119]

================================

Block 0x17a
[0x17a:0x18b]
---
Predecessors: []
Successors: []
---
0x17a JUMPDEST
0x17b PUSH1 0x40
0x17d MLOAD
0x17e SWAP1
0x17f DUP2
0x180 MSTORE
0x181 PUSH1 0x20
0x183 ADD
0x184 PUSH1 0x40
0x186 MLOAD
0x187 DUP1
0x188 SWAP2
0x189 SUB
0x18a SWAP1
0x18b RETURN
---
0x17a: JUMPDEST 
0x17b: V121 = 0x40
0x17d: V122 = M[0x40]
0x180: M[V122] = S0
0x181: V123 = 0x20
0x183: V124 = ADD 0x20 V122
0x184: V125 = 0x40
0x186: V126 = M[0x40]
0x189: V127 = SUB V124 V126
0x18b: RETURN V126 V127
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x18c
[0x18c:0x19b]
---
Predecessors: [0x8c, 0x12a]
Successors: [0x19c, 0x1f4]
---
0x18c JUMPDEST
0x18d PUSH8 0x16345785d8a0000
0x196 CALLVALUE
0x197 LT
0x198 PUSH2 0x1f4
0x19b JUMPI
---
0x18c: JUMPDEST 
0x18d: V128 = 0x16345785d8a0000
0x196: V129 = CALLVALUE
0x197: V130 = LT V129 0x16345785d8a0000
0x198: V131 = 0x1f4
0x19b: JUMPI 0x1f4 V130
---
Entry stack: [V10, 0x94]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94]

================================

Block 0x19c
[0x19c:0x1f3]
---
Predecessors: [0x18c]
Successors: [0x1f9]
---
0x19c PUSH1 0x1
0x19e PUSH1 0xa0
0x1a0 PUSH1 0x2
0x1a2 EXP
0x1a3 SUB
0x1a4 CALLER
0x1a5 AND
0x1a6 PUSH1 0x0
0x1a8 DUP2
0x1a9 DUP2
0x1aa MSTORE
0x1ab PUSH1 0x2
0x1ad PUSH1 0x20
0x1af MSTORE
0x1b0 PUSH1 0x40
0x1b2 SWAP1
0x1b3 DUP2
0x1b4 SWAP1
0x1b5 SHA3
0x1b6 DUP1
0x1b7 SLOAD
0x1b8 CALLVALUE
0x1b9 SWAP1
0x1ba DUP2
0x1bb ADD
0x1bc SWAP1
0x1bd SWAP2
0x1be SSTORE
0x1bf PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x1e0 SWAP2
0x1e1 MLOAD
0x1e2 SWAP1
0x1e3 DUP2
0x1e4 MSTORE
0x1e5 PUSH1 0x20
0x1e7 ADD
0x1e8 PUSH1 0x40
0x1ea MLOAD
0x1eb DUP1
0x1ec SWAP2
0x1ed SUB
0x1ee SWAP1
0x1ef LOG2
0x1f0 PUSH2 0x1f9
0x1f3 JUMP
---
0x19c: V132 = 0x1
0x19e: V133 = 0xa0
0x1a0: V134 = 0x2
0x1a2: V135 = EXP 0x2 0xa0
0x1a3: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a4: V137 = CALLER
0x1a5: V138 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x1a6: V139 = 0x0
0x1aa: M[0x0] = V138
0x1ab: V140 = 0x2
0x1ad: V141 = 0x20
0x1af: M[0x20] = 0x2
0x1b0: V142 = 0x40
0x1b5: V143 = SHA3 0x0 0x40
0x1b7: V144 = S[V143]
0x1b8: V145 = CALLVALUE
0x1bb: V146 = ADD V145 V144
0x1be: S[V143] = V146
0x1bf: V147 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x1e1: V148 = M[0x40]
0x1e4: M[V148] = V145
0x1e5: V149 = 0x20
0x1e7: V150 = ADD 0x20 V148
0x1e8: V151 = 0x40
0x1ea: V152 = M[0x40]
0x1ed: V153 = SUB V150 V152
0x1ef: LOG V152 V153 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V138
0x1f0: V154 = 0x1f9
0x1f3: JUMP 0x1f9
---
Entry stack: [V10, 0x94]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94]

================================

Block 0x1f4
[0x1f4:0x1f8]
---
Predecessors: [0x18c]
Successors: []
---
0x1f4 JUMPDEST
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 REVERT
---
0x1f4: JUMPDEST 
0x1f5: V155 = 0x0
0x1f8: REVERT 0x0 0x0
---
Entry stack: [V10, 0x94]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94]

================================

Block 0x1f9
[0x1f9:0x1f9]
---
Predecessors: [0x19c, 0x2b9, 0x2d1]
Successors: [0x1fa]
---
0x1f9 JUMPDEST
---
0x1f9: JUMPDEST 
---
Entry stack: [V10, 0x94]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94]

================================

Block 0x1fa
[0x1fa:0x1fb]
---
Predecessors: [0x1f9]
Successors: [0x94]
---
0x1fa JUMPDEST
0x1fb JUMP
---
0x1fa: JUMPDEST 
0x1fb: JUMP 0x94
---
Entry stack: [V10, 0x94]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fc
[0x1fc:0x214]
---
Predecessors: [0xa2]
Successors: [0x215, 0x2b1]
---
0x1fc JUMPDEST
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 SLOAD
0x201 CALLER
0x202 PUSH1 0x1
0x204 PUSH1 0xa0
0x206 PUSH1 0x2
0x208 EXP
0x209 SUB
0x20a SWAP1
0x20b DUP2
0x20c AND
0x20d SWAP2
0x20e AND
0x20f EQ
0x210 ISZERO
0x211 PUSH2 0x2b1
0x214 JUMPI
---
0x1fc: JUMPDEST 
0x1fd: V156 = 0x0
0x200: V157 = S[0x0]
0x201: V158 = CALLER
0x202: V159 = 0x1
0x204: V160 = 0xa0
0x206: V161 = 0x2
0x208: V162 = EXP 0x2 0xa0
0x209: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20c: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x20e: V165 = AND V157 0xffffffffffffffffffffffffffffffffffffffff
0x20f: V166 = EQ V165 V164
0x210: V167 = ISZERO V166
0x211: V168 = 0x2b1
0x214: JUMPI 0x2b1 V167
---
Entry stack: [V10, 0x94, V43]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x94, V43, 0x0]

================================

Block 0x215
[0x215:0x21d]
---
Predecessors: [0x1fc]
Successors: [0x21e, 0x2b1]
---
0x215 PUSH1 0x3
0x217 SLOAD
0x218 TIMESTAMP
0x219 LT
0x21a PUSH2 0x2b1
0x21d JUMPI
---
0x215: V169 = 0x3
0x217: V170 = S[0x3]
0x218: V171 = TIMESTAMP
0x219: V172 = LT V171 V170
0x21a: V173 = 0x2b1
0x21d: JUMPI 0x2b1 V172
---
Entry stack: [V10, 0x94, V43, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94, V43, 0x0]

================================

Block 0x21e
[0x21e:0x241]
---
Predecessors: [0x215]
Successors: [0x242, 0x247]
---
0x21e POP
0x21f PUSH1 0x1
0x221 PUSH1 0xa0
0x223 PUSH1 0x2
0x225 EXP
0x226 SUB
0x227 CALLER
0x228 AND
0x229 PUSH1 0x0
0x22b SWAP1
0x22c DUP2
0x22d MSTORE
0x22e PUSH1 0x2
0x230 PUSH1 0x20
0x232 MSTORE
0x233 PUSH1 0x40
0x235 SWAP1
0x236 SHA3
0x237 SLOAD
0x238 DUP1
0x239 DUP3
0x23a GT
0x23b DUP1
0x23c ISZERO
0x23d SWAP1
0x23e PUSH2 0x247
0x241 JUMPI
---
0x21f: V174 = 0x1
0x221: V175 = 0xa0
0x223: V176 = 0x2
0x225: V177 = EXP 0x2 0xa0
0x226: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x227: V179 = CALLER
0x228: V180 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0x229: V181 = 0x0
0x22d: M[0x0] = V180
0x22e: V182 = 0x2
0x230: V183 = 0x20
0x232: M[0x20] = 0x2
0x233: V184 = 0x40
0x236: V185 = SHA3 0x0 0x40
0x237: V186 = S[V185]
0x23a: V187 = GT V43 V186
0x23c: V188 = ISZERO V187
0x23e: V189 = 0x247
0x241: JUMPI 0x247 V187
---
Entry stack: [V10, 0x94, V43, 0x0]
Stack pops: 2
Stack additions: [S1, V186, V188]
Exit stack: [V10, 0x94, V43, V186, V188]

================================

Block 0x242
[0x242:0x246]
---
Predecessors: [0x21e]
Successors: [0x247]
---
0x242 POP
0x243 PUSH1 0x0
0x245 DUP2
0x246 GT
---
0x243: V190 = 0x0
0x246: V191 = GT V186 0x0
---
Entry stack: [V10, 0x94, V43, V186, V188]
Stack pops: 2
Stack additions: [S1, V191]
Exit stack: [V10, 0x94, V43, V186, V191]

================================

Block 0x247
[0x247:0x24c]
---
Predecessors: [0x21e, 0x242]
Successors: [0x24d, 0x2b1]
---
0x247 JUMPDEST
0x248 ISZERO
0x249 PUSH2 0x2b1
0x24c JUMPI
---
0x247: JUMPDEST 
0x248: V192 = ISZERO S0
0x249: V193 = 0x2b1
0x24c: JUMPI 0x2b1 V192
---
Entry stack: [V10, 0x94, V43, V186, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x94, V43, V186]

================================

Block 0x24d
[0x24d:0x2b0]
---
Predecessors: [0x247]
Successors: [0x2b1]
---
0x24d PUSH1 0x1
0x24f PUSH1 0xa0
0x251 PUSH1 0x2
0x253 EXP
0x254 SUB
0x255 CALLER
0x256 AND
0x257 DUP3
0x258 ISZERO
0x259 PUSH2 0x8fc
0x25c MUL
0x25d DUP4
0x25e PUSH1 0x40
0x260 MLOAD
0x261 PUSH1 0x0
0x263 PUSH1 0x40
0x265 MLOAD
0x266 DUP1
0x267 DUP4
0x268 SUB
0x269 DUP2
0x26a DUP6
0x26b DUP9
0x26c DUP9
0x26d CALL
0x26e SWAP4
0x26f POP
0x270 POP
0x271 POP
0x272 POP
0x273 POP
0x274 CALLER
0x275 PUSH1 0x1
0x277 PUSH1 0xa0
0x279 PUSH1 0x2
0x27b EXP
0x27c SUB
0x27d AND
0x27e PUSH32 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x29f DUP4
0x2a0 PUSH1 0x40
0x2a2 MLOAD
0x2a3 SWAP1
0x2a4 DUP2
0x2a5 MSTORE
0x2a6 PUSH1 0x20
0x2a8 ADD
0x2a9 PUSH1 0x40
0x2ab MLOAD
0x2ac DUP1
0x2ad SWAP2
0x2ae SUB
0x2af SWAP1
0x2b0 LOG2
---
0x24d: V194 = 0x1
0x24f: V195 = 0xa0
0x251: V196 = 0x2
0x253: V197 = EXP 0x2 0xa0
0x254: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x255: V199 = CALLER
0x256: V200 = AND V199 0xffffffffffffffffffffffffffffffffffffffff
0x258: V201 = ISZERO V43
0x259: V202 = 0x8fc
0x25c: V203 = MUL 0x8fc V201
0x25e: V204 = 0x40
0x260: V205 = M[0x40]
0x261: V206 = 0x0
0x263: V207 = 0x40
0x265: V208 = M[0x40]
0x268: V209 = SUB V205 V208
0x26d: V210 = CALL V203 V200 V43 V208 V209 V208 0x0
0x274: V211 = CALLER
0x275: V212 = 0x1
0x277: V213 = 0xa0
0x279: V214 = 0x2
0x27b: V215 = EXP 0x2 0xa0
0x27c: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27d: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x27e: V218 = 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x2a0: V219 = 0x40
0x2a2: V220 = M[0x40]
0x2a5: M[V220] = V43
0x2a6: V221 = 0x20
0x2a8: V222 = ADD 0x20 V220
0x2a9: V223 = 0x40
0x2ab: V224 = M[0x40]
0x2ae: V225 = SUB V222 V224
0x2b0: LOG V224 V225 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65 V217
---
Entry stack: [V10, 0x94, V43, V186]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x94, V43, V186]

================================

Block 0x2b1
[0x2b1:0x2b1]
---
Predecessors: [0x1fc, 0x215, 0x247, 0x24d]
Successors: [0x2b2]
---
0x2b1 JUMPDEST
---
0x2b1: JUMPDEST 
---
Entry stack: [V10, 0x94, V43, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94, V43, S0]

================================

Block 0x2b2
[0x2b2:0x2b2]
---
Predecessors: [0x2b1]
Successors: [0x2b3]
---
0x2b2 JUMPDEST
---
0x2b2: JUMPDEST 
---
Entry stack: [V10, 0x94, V43, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94, V43, S0]

================================

Block 0x2b3
[0x2b3:0x2b3]
---
Predecessors: [0x2b2]
Successors: [0x2b4]
---
0x2b3 JUMPDEST
---
0x2b3: JUMPDEST 
---
Entry stack: [V10, 0x94, V43, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94, V43, S0]

================================

Block 0x2b4
[0x2b4:0x2b4]
---
Predecessors: [0x2b3]
Successors: [0x2b5]
---
0x2b4 JUMPDEST
---
0x2b4: JUMPDEST 
---
Entry stack: [V10, 0x94, V43, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94, V43, S0]

================================

Block 0x2b5
[0x2b5:0x2b8]
---
Predecessors: [0x2b4]
Successors: [0x94]
---
0x2b5 JUMPDEST
0x2b6 POP
0x2b7 POP
0x2b8 JUMP
---
0x2b5: JUMPDEST 
0x2b8: JUMP 0x94
---
Entry stack: [V10, 0x94, V43, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b9
[0x2b9:0x2d0]
---
Predecessors: [0xba]
Successors: [0x1f9, 0x2d1]
---
0x2b9 JUMPDEST
0x2ba PUSH1 0x0
0x2bc SLOAD
0x2bd CALLER
0x2be PUSH1 0x1
0x2c0 PUSH1 0xa0
0x2c2 PUSH1 0x2
0x2c4 EXP
0x2c5 SUB
0x2c6 SWAP1
0x2c7 DUP2
0x2c8 AND
0x2c9 SWAP2
0x2ca AND
0x2cb EQ
0x2cc ISZERO
0x2cd PUSH2 0x1f9
0x2d0 JUMPI
---
0x2b9: JUMPDEST 
0x2ba: V226 = 0x0
0x2bc: V227 = S[0x0]
0x2bd: V228 = CALLER
0x2be: V229 = 0x1
0x2c0: V230 = 0xa0
0x2c2: V231 = 0x2
0x2c4: V232 = EXP 0x2 0xa0
0x2c5: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c8: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x2ca: V235 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x2cb: V236 = EQ V235 V234
0x2cc: V237 = ISZERO V236
0x2cd: V238 = 0x1f9
0x2d0: JUMPI 0x1f9 V237
---
Entry stack: [V10, 0x94]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94]

================================

Block 0x2d1
[0x2d1:0x2e1]
---
Predecessors: [0x2b9]
Successors: [0x1f9, 0x2e2]
---
0x2d1 PUSH1 0x1
0x2d3 PUSH1 0xa0
0x2d5 PUSH1 0x2
0x2d7 EXP
0x2d8 SUB
0x2d9 ADDRESS
0x2da AND
0x2db BALANCE
0x2dc ISZERO
0x2dd ISZERO
0x2de PUSH2 0x1f9
0x2e1 JUMPI
---
0x2d1: V239 = 0x1
0x2d3: V240 = 0xa0
0x2d5: V241 = 0x2
0x2d7: V242 = EXP 0x2 0xa0
0x2d8: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d9: V244 = ADDRESS
0x2da: V245 = AND V244 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V246 = BALANCE V245
0x2dc: V247 = ISZERO V246
0x2dd: V248 = ISZERO V247
0x2de: V249 = 0x1f9
0x2e1: JUMPI 0x1f9 V248
---
Entry stack: [V10, 0x94]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94]

================================

Block 0x2e2
[0x2e2:0x2ec]
---
Predecessors: [0x2d1]
Successors: []
---
0x2e2 CALLER
0x2e3 PUSH1 0x1
0x2e5 PUSH1 0xa0
0x2e7 PUSH1 0x2
0x2e9 EXP
0x2ea SUB
0x2eb AND
0x2ec SELFDESTRUCT
---
0x2e2: V250 = CALLER
0x2e3: V251 = 0x1
0x2e5: V252 = 0xa0
0x2e7: V253 = 0x2
0x2e9: V254 = EXP 0x2 0xa0
0x2ea: V255 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2eb: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x2ec: SELFDESTRUCT V256
---
Entry stack: [V10, 0x94]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94]

================================

Block 0x2ed
[0x2ed:0x2ed]
---
Predecessors: []
Successors: [0x2ee]
---
0x2ed JUMPDEST
---
0x2ed: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ee
[0x2ee:0x2ee]
---
Predecessors: [0x2ed]
Successors: [0x2ef]
---
0x2ee JUMPDEST
---
0x2ee: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ef
[0x2ef:0x2ef]
---
Predecessors: [0x2ee]
Successors: [0x2f0]
---
0x2ef JUMPDEST
---
0x2ef: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2f0
[0x2f0:0x2f1]
---
Predecessors: [0x2ef]
Successors: []
Has unresolved jump.
---
0x2f0 JUMPDEST
0x2f1 JUMP
---
0x2f0: JUMPDEST 
0x2f1: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f2
[0x2f2:0x309]
---
Predecessors: [0xcf]
Successors: [0x30a, 0x343]
---
0x2f2 JUMPDEST
0x2f3 PUSH1 0x0
0x2f5 SLOAD
0x2f6 CALLER
0x2f7 PUSH1 0x1
0x2f9 PUSH1 0xa0
0x2fb PUSH1 0x2
0x2fd EXP
0x2fe SUB
0x2ff SWAP1
0x300 DUP2
0x301 AND
0x302 SWAP2
0x303 AND
0x304 EQ
0x305 ISZERO
0x306 PUSH2 0x343
0x309 JUMPI
---
0x2f2: JUMPDEST 
0x2f3: V257 = 0x0
0x2f5: V258 = S[0x0]
0x2f6: V259 = CALLER
0x2f7: V260 = 0x1
0x2f9: V261 = 0xa0
0x2fb: V262 = 0x2
0x2fd: V263 = EXP 0x2 0xa0
0x2fe: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x301: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x303: V266 = AND V258 0xffffffffffffffffffffffffffffffffffffffff
0x304: V267 = EQ V266 V265
0x305: V268 = ISZERO V267
0x306: V269 = 0x343
0x309: JUMPI 0x343 V268
---
Entry stack: [V10, 0x94, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94, V63]

================================

Block 0x30a
[0x30a:0x31a]
---
Predecessors: [0x2f2]
Successors: [0x31b, 0x343]
---
0x30a PUSH1 0x1
0x30c PUSH1 0xa0
0x30e PUSH1 0x2
0x310 EXP
0x311 SUB
0x312 ADDRESS
0x313 AND
0x314 BALANCE
0x315 ISZERO
0x316 ISZERO
0x317 PUSH2 0x343
0x31a JUMPI
---
0x30a: V270 = 0x1
0x30c: V271 = 0xa0
0x30e: V272 = 0x2
0x310: V273 = EXP 0x2 0xa0
0x311: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x312: V275 = ADDRESS
0x313: V276 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0x314: V277 = BALANCE V276
0x315: V278 = ISZERO V277
0x316: V279 = ISZERO V278
0x317: V280 = 0x343
0x31a: JUMPI 0x343 V279
---
Entry stack: [V10, 0x94, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94, V63]

================================

Block 0x31b
[0x31b:0x342]
---
Predecessors: [0x30a]
Successors: [0x343]
---
0x31b PUSH1 0x0
0x31d DUP1
0x31e SLOAD
0x31f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x334 NOT
0x335 AND
0x336 PUSH1 0x1
0x338 PUSH1 0xa0
0x33a PUSH1 0x2
0x33c EXP
0x33d SUB
0x33e DUP4
0x33f AND
0x340 OR
0x341 SWAP1
0x342 SSTORE
---
0x31b: V281 = 0x0
0x31e: V282 = S[0x0]
0x31f: V283 = 0xffffffffffffffffffffffffffffffffffffffff
0x334: V284 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x335: V285 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V282
0x336: V286 = 0x1
0x338: V287 = 0xa0
0x33a: V288 = 0x2
0x33c: V289 = EXP 0x2 0xa0
0x33d: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33f: V291 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0x340: V292 = OR V291 V285
0x342: S[0x0] = V292
---
Entry stack: [V10, 0x94, V63]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x94, V63]

================================

Block 0x343
[0x343:0x343]
---
Predecessors: [0x2f2, 0x30a, 0x31b]
Successors: [0x344]
---
0x343 JUMPDEST
---
0x343: JUMPDEST 
---
Entry stack: [V10, 0x94, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94, V63]

================================

Block 0x344
[0x344:0x344]
---
Predecessors: [0x343]
Successors: [0x345]
---
0x344 JUMPDEST
---
0x344: JUMPDEST 
---
Entry stack: [V10, 0x94, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94, V63]

================================

Block 0x345
[0x345:0x345]
---
Predecessors: [0x344]
Successors: [0x346]
---
0x345 JUMPDEST
---
0x345: JUMPDEST 
---
Entry stack: [V10, 0x94, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94, V63]

================================

Block 0x346
[0x346:0x348]
---
Predecessors: [0x345]
Successors: [0x94]
---
0x346 JUMPDEST
0x347 POP
0x348 JUMP
---
0x346: JUMPDEST 
0x348: JUMP 0x94
---
Entry stack: [V10, 0x94, V63]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x349
[0x349:0x357]
---
Predecessors: [0xf0]
Successors: [0xf8]
---
0x349 JUMPDEST
0x34a PUSH1 0x1
0x34c SLOAD
0x34d PUSH1 0x1
0x34f PUSH1 0xa0
0x351 PUSH1 0x2
0x353 EXP
0x354 SUB
0x355 AND
0x356 DUP2
0x357 JUMP
---
0x349: JUMPDEST 
0x34a: V293 = 0x1
0x34c: V294 = S[0x1]
0x34d: V295 = 0x1
0x34f: V296 = 0xa0
0x351: V297 = 0x2
0x353: V298 = EXP 0x2 0xa0
0x354: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x355: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x357: JUMP 0xf8
---
Entry stack: [V10, 0xf8]
Stack pops: 1
Stack additions: [S0, V300]
Exit stack: [V10, 0xf8, V300]

================================

Block 0x358
[0x358:0x3c0]
---
Predecessors: [0x11f]
Successors: [0x3c1]
---
0x358 JUMPDEST
0x359 PUSH1 0x1
0x35b DUP1
0x35c SLOAD
0x35d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x372 NOT
0x373 AND
0x374 CALLER
0x375 PUSH1 0x1
0x377 PUSH1 0xa0
0x379 PUSH1 0x2
0x37b EXP
0x37c SUB
0x37d SWAP1
0x37e DUP2
0x37f AND
0x380 SWAP2
0x381 SWAP1
0x382 SWAP2
0x383 OR
0x384 SWAP2
0x385 DUP3
0x386 SWAP1
0x387 SSTORE
0x388 PUSH1 0x3
0x38a DUP4
0x38b SWAP1
0x38c SSTORE
0x38d AND
0x38e PUSH32 0x25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79
0x3af DUP3
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 SWAP1
0x3b4 DUP2
0x3b5 MSTORE
0x3b6 PUSH1 0x20
0x3b8 ADD
0x3b9 PUSH1 0x40
0x3bb MLOAD
0x3bc DUP1
0x3bd SWAP2
0x3be SUB
0x3bf SWAP1
0x3c0 LOG2
---
0x358: JUMPDEST 
0x359: V301 = 0x1
0x35c: V302 = S[0x1]
0x35d: V303 = 0xffffffffffffffffffffffffffffffffffffffff
0x372: V304 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x373: V305 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V302
0x374: V306 = CALLER
0x375: V307 = 0x1
0x377: V308 = 0xa0
0x379: V309 = 0x2
0x37b: V310 = EXP 0x2 0xa0
0x37c: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37f: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x383: V313 = OR V312 V305
0x387: S[0x1] = V313
0x388: V314 = 0x3
0x38c: S[0x3] = V90
0x38d: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x38e: V316 = 0x25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79
0x3b0: V317 = 0x40
0x3b2: V318 = M[0x40]
0x3b5: M[V318] = V90
0x3b6: V319 = 0x20
0x3b8: V320 = ADD 0x20 V318
0x3b9: V321 = 0x40
0x3bb: V322 = M[0x40]
0x3be: V323 = SUB V320 V322
0x3c0: LOG V322 V323 0x25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79 V315
---
Entry stack: [V10, 0x94, V90]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x94, V90]

================================

Block 0x3c1
[0x3c1:0x3c3]
---
Predecessors: [0x358]
Successors: [0x94]
---
0x3c1 JUMPDEST
0x3c2 POP
0x3c3 JUMP
---
0x3c1: JUMPDEST 
0x3c3: JUMP 0x94
---
Entry stack: [V10, 0x94, V90]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c4
[0x3c4:0x3c9]
---
Predecessors: [0x141]
Successors: [0x149]
---
0x3c4 JUMPDEST
0x3c5 PUSH1 0x3
0x3c7 SLOAD
0x3c8 DUP2
0x3c9 JUMP
---
0x3c4: JUMPDEST 
0x3c5: V324 = 0x3
0x3c7: V325 = S[0x3]
0x3c9: JUMP 0x149
---
Entry stack: [V10, 0x149]
Stack pops: 1
Stack additions: [S0, V325]
Exit stack: [V10, 0x149, V325]

================================

Block 0x3ca
[0x3ca:0x3db]
---
Predecessors: [0x166]
Successors: [0x149]
---
0x3ca JUMPDEST
0x3cb PUSH1 0x2
0x3cd PUSH1 0x20
0x3cf MSTORE
0x3d0 PUSH1 0x0
0x3d2 SWAP1
0x3d3 DUP2
0x3d4 MSTORE
0x3d5 PUSH1 0x40
0x3d7 SWAP1
0x3d8 SHA3
0x3d9 SLOAD
0x3da DUP2
0x3db JUMP
---
0x3ca: JUMPDEST 
0x3cb: V326 = 0x2
0x3cd: V327 = 0x20
0x3cf: M[0x20] = 0x2
0x3d0: V328 = 0x0
0x3d4: M[0x0] = V119
0x3d5: V329 = 0x40
0x3d8: V330 = SHA3 0x0 0x40
0x3d9: V331 = S[V330]
0x3db: JUMP 0x149
---
Entry stack: [V10, 0x149, V119]
Stack pops: 2
Stack additions: [S1, V331]
Exit stack: [V10, 0x149, V331]

================================

Block 0x3dc
[0x3dc:0x407]
---
Predecessors: []
Successors: []
---
0x3dc STOP
0x3dd LOG1
0x3de PUSH6 0x627a7a723058
0x3e5 SHA3
0x3e6 MISSING 0xb0
0x3e7 MISSING 0xc8
0x3e8 SWAP1
0x3e9 MISSING 0x5e
0x3ea CODESIZE
0x3eb PUSH27 0x7a0e338bc1e3814fb3123ba9ecb6bfa6638dd909dcb74f6cac0000
0x407 MISSING 0x29
---
0x3dc: STOP 
0x3dd: LOG S0 S1 S2
0x3de: V332 = 0x627a7a723058
0x3e5: V333 = SHA3 0x627a7a723058 S3
0x3e6: MISSING 0xb0
0x3e7: MISSING 0xc8
0x3e9: MISSING 0x5e
0x3ea: V334 = CODESIZE
0x3eb: V335 = 0x7a0e338bc1e3814fb3123ba9ecb6bfa6638dd909dcb74f6cac0000
0x407: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V333, S1, S0, 0x7a0e338bc1e3814fb3123ba9ecb6bfa6638dd909dcb74f6cac0000, V334]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x97
Exit block: 0x95
Body: 0x94, 0x95, 0x97, 0x9e, 0xa2, 0x1fc, 0x215, 0x21e, 0x242, 0x247, 0x24d, 0x2b1, 0x2b2, 0x2b3, 0x2b4, 0x2b5

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xaf
Exit block: 0x2e2
Body: 0x94, 0x95, 0xaf, 0xb6, 0xba, 0x2b9, 0x2d1, 0x2e2

Function 2:
Public function signature: 0x4fb2e45d
Entry block: 0xc4
Exit block: 0x95
Body: 0x94, 0x95, 0xc4, 0xcb, 0xcf, 0x2f2, 0x30a, 0x31b, 0x343, 0x344, 0x345, 0x346

Function 3:
Public function signature: 0xb4a99a4e
Entry block: 0xe5
Exit block: 0xf8
Body: 0xe5, 0xec, 0xf0, 0xf8, 0x349

Function 4:
Public function signature: 0xb7f9c4f6
Entry block: 0x114
Exit block: 0x95
Body: 0x94, 0x95, 0x114, 0x11b, 0x11f, 0x358, 0x3c1

Function 5:
Public function signature: 0xd0e30db0
Entry block: 0x8b
Exit block: 0x95
Body: 0x8b, 0x8c, 0x94, 0x95

Function 6:
Public function signature: 0xec8cb281
Entry block: 0x136
Exit block: 0x149
Body: 0x136, 0x13d, 0x141, 0x149, 0x3c4

Function 7:
Public function signature: 0xfc7e286d
Entry block: 0x15b
Exit block: 0x149
Body: 0x149, 0x15b, 0x162, 0x166, 0x3ca

Function 8:
Public fallback function
Entry block: 0x8b
Exit block: 0x95
Body: 0x8b, 0x8c, 0x94, 0x95

Function 9:
Private function
Entry block: 0x18c
Exit block: 0x3c1
Body: 0x18c, 0x19c, 0x1f9, 0x1fa

