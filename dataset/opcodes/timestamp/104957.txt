args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/5/104957.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa9
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa9
0xa: JUMPI 0xa9 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xd6]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2f58015
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xd6
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2f58015
0x20: V14 = EQ V12 0x2f58015
0x21: V15 = 0xd6
0x24: JUMPI 0xd6 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xeb]
---
0x25 DUP1
0x26 PUSH4 0x27e235e3
0x2b EQ
0x2c PUSH2 0xeb
0x2f JUMPI
---
0x26: V16 = 0x27e235e3
0x2b: V17 = EQ 0x27e235e3 V12
0x2c: V18 = 0xeb
0x2f: JUMPI 0xeb V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x11c]
---
0x30 DUP1
0x31 PUSH4 0x5259347d
0x36 EQ
0x37 PUSH2 0x11c
0x3a JUMPI
---
0x31: V19 = 0x5259347d
0x36: V20 = EQ 0x5259347d V12
0x37: V21 = 0x11c
0x3a: JUMPI 0x11c V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x126]
---
0x3b DUP1
0x3c PUSH4 0x62f5ed61
0x41 EQ
0x42 PUSH2 0x126
0x45 JUMPI
---
0x3c: V22 = 0x62f5ed61
0x41: V23 = EQ 0x62f5ed61 V12
0x42: V24 = 0x126
0x45: JUMPI 0x126 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x130]
---
0x46 DUP1
0x47 PUSH4 0x6360fc3f
0x4c EQ
0x4d PUSH2 0x130
0x50 JUMPI
---
0x47: V25 = 0x6360fc3f
0x4c: V26 = EQ 0x6360fc3f V12
0x4d: V27 = 0x130
0x50: JUMPI 0x130 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x157]
---
0x51 DUP1
0x52 PUSH4 0x6ad1fe02
0x57 EQ
0x58 PUSH2 0x157
0x5b JUMPI
---
0x52: V28 = 0x6ad1fe02
0x57: V29 = EQ 0x6ad1fe02 V12
0x58: V30 = 0x157
0x5b: JUMPI 0x157 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x186]
---
0x5c DUP1
0x5d PUSH4 0x943dfef1
0x62 EQ
0x63 PUSH2 0x186
0x66 JUMPI
---
0x5d: V31 = 0x943dfef1
0x62: V32 = EQ 0x943dfef1 V12
0x63: V33 = 0x186
0x66: JUMPI 0x186 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1ab]
---
0x67 DUP1
0x68 PUSH4 0xa089feea
0x6d EQ
0x6e PUSH2 0x1ab
0x71 JUMPI
---
0x68: V34 = 0xa089feea
0x6d: V35 = EQ 0xa089feea V12
0x6e: V36 = 0x1ab
0x71: JUMPI 0x1ab V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1d2]
---
0x72 DUP1
0x73 PUSH4 0xc3dac9a1
0x78 EQ
0x79 PUSH2 0x1d2
0x7c JUMPI
---
0x73: V37 = 0xc3dac9a1
0x78: V38 = EQ 0xc3dac9a1 V12
0x79: V39 = 0x1d2
0x7c: JUMPI 0x1d2 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x1f7]
---
0x7d DUP1
0x7e PUSH4 0xc42bb1e4
0x83 EQ
0x84 PUSH2 0x1f7
0x87 JUMPI
---
0x7e: V40 = 0xc42bb1e4
0x83: V41 = EQ 0xc42bb1e4 V12
0x84: V42 = 0x1f7
0x87: JUMPI 0x1f7 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x21c]
---
0x88 DUP1
0x89 PUSH4 0xd2c03c01
0x8e EQ
0x8f PUSH2 0x21c
0x92 JUMPI
---
0x89: V43 = 0xd2c03c01
0x8e: V44 = EQ 0xd2c03c01 V12
0x8f: V45 = 0x21c
0x92: JUMPI 0x21c V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x23d]
---
0x93 DUP1
0x94 PUSH4 0xd4701c35
0x99 EQ
0x9a PUSH2 0x23d
0x9d JUMPI
---
0x94: V46 = 0xd4701c35
0x99: V47 = EQ 0xd4701c35 V12
0x9a: V48 = 0x23d
0x9d: JUMPI 0x23d V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x290]
---
0x9e DUP1
0x9f PUSH4 0xfc0c546a
0xa4 EQ
0xa5 PUSH2 0x290
0xa8 JUMPI
---
0x9f: V49 = 0xfc0c546a
0xa4: V50 = EQ 0xfc0c546a V12
0xa5: V51 = 0x290
0xa8: JUMPI 0x290 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xac]
---
Predecessors: [0x0, 0x9e]
Successors: [0xad]
---
0xa9 JUMPDEST
0xaa PUSH2 0xd4
---
0xa9: JUMPDEST 
0xaa: V52 = 0xd4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0xad
[0xad:0xc4]
---
Predecessors: [0xa9]
Successors: [0xc5, 0xc9]
---
0xad JUMPDEST
0xae PUSH1 0x9
0xb0 SLOAD
0xb1 CALLER
0xb2 PUSH1 0x1
0xb4 PUSH1 0xa0
0xb6 PUSH1 0x2
0xb8 EXP
0xb9 SUB
0xba SWAP1
0xbb DUP2
0xbc AND
0xbd SWAP2
0xbe AND
0xbf EQ
0xc0 ISZERO
0xc1 PUSH2 0xc9
0xc4 JUMPI
---
0xad: JUMPDEST 
0xae: V53 = 0x9
0xb0: V54 = S[0x9]
0xb1: V55 = CALLER
0xb2: V56 = 0x1
0xb4: V57 = 0xa0
0xb6: V58 = 0x2
0xb8: V59 = EXP 0x2 0xa0
0xb9: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbc: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xbe: V62 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0xbf: V63 = EQ V62 V61
0xc0: V64 = ISZERO V63
0xc1: V65 = 0xc9
0xc4: JUMPI 0xc9 V64
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0xc5
[0xc5:0xc8]
---
Predecessors: [0xad]
Successors: []
---
0xc5 PUSH1 0x0
0xc7 DUP1
0xc8 REVERT
---
0xc5: V66 = 0x0
0xc8: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0xad]
Successors: [0x2bf]
---
0xc9 JUMPDEST
0xca PUSH2 0xd1
0xcd PUSH2 0x2bf
0xd0 JUMP
---
0xc9: JUMPDEST 
0xca: V67 = 0xd1
0xcd: V68 = 0x2bf
0xd0: JUMP 0x2bf
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V12, 0xd4, 0xd1]

================================

Block 0xd1
[0xd1:0xd1]
---
Predecessors: [0xd2, 0x2d8, 0x31d]
Successors: [0xd2]
---
0xd1 JUMPDEST
---
0xd1: JUMPDEST 
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0xd2
[0xd2:0xd3]
---
Predecessors: [0xd1]
Successors: [0xd1, 0xd4]
---
0xd2 JUMPDEST
0xd3 JUMP
---
0xd2: JUMPDEST 
0xd3: JUMP S0
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0xd4
[0xd4:0xd5]
---
Predecessors: [0xd2, 0x31d, 0x3dd, 0x436, 0x56f]
Successors: []
---
0xd4 JUMPDEST
0xd5 STOP
---
0xd4: JUMPDEST 
0xd5: STOP 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0xd6
[0xd6:0xdc]
---
Predecessors: [0xb]
Successors: [0xdd, 0xe1]
---
0xd6 JUMPDEST
0xd7 CALLVALUE
0xd8 ISZERO
0xd9 PUSH2 0xe1
0xdc JUMPI
---
0xd6: JUMPDEST 
0xd7: V69 = CALLVALUE
0xd8: V70 = ISZERO V69
0xd9: V71 = 0xe1
0xdc: JUMPI 0xe1 V70
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdd
[0xdd:0xe0]
---
Predecessors: [0xd6]
Successors: []
---
0xdd PUSH1 0x0
0xdf DUP1
0xe0 REVERT
---
0xdd: V72 = 0x0
0xe0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe1
[0xe1:0xe8]
---
Predecessors: [0xd6]
Successors: [0x31f]
---
0xe1 JUMPDEST
0xe2 PUSH2 0xd4
0xe5 PUSH2 0x31f
0xe8 JUMP
---
0xe1: JUMPDEST 
0xe2: V73 = 0xd4
0xe5: V74 = 0x31f
0xe8: JUMP 0x31f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0xe9
[0xe9:0xea]
---
Predecessors: []
Successors: []
---
0xe9 JUMPDEST
0xea STOP
---
0xe9: JUMPDEST 
0xea: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xeb
[0xeb:0xf1]
---
Predecessors: [0x25]
Successors: [0xf2, 0xf6]
---
0xeb JUMPDEST
0xec CALLVALUE
0xed ISZERO
0xee PUSH2 0xf6
0xf1 JUMPI
---
0xeb: JUMPDEST 
0xec: V75 = CALLVALUE
0xed: V76 = ISZERO V75
0xee: V77 = 0xf6
0xf1: JUMPI 0xf6 V76
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf2
[0xf2:0xf5]
---
Predecessors: [0xeb]
Successors: []
---
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 REVERT
---
0xf2: V78 = 0x0
0xf5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x109]
---
Predecessors: [0xeb]
Successors: [0x3e0]
---
0xf6 JUMPDEST
0xf7 PUSH2 0x10a
0xfa PUSH1 0x1
0xfc PUSH1 0xa0
0xfe PUSH1 0x2
0x100 EXP
0x101 SUB
0x102 PUSH1 0x4
0x104 CALLDATALOAD
0x105 AND
0x106 PUSH2 0x3e0
0x109 JUMP
---
0xf6: JUMPDEST 
0xf7: V79 = 0x10a
0xfa: V80 = 0x1
0xfc: V81 = 0xa0
0xfe: V82 = 0x2
0x100: V83 = EXP 0x2 0xa0
0x101: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0x102: V85 = 0x4
0x104: V86 = CALLDATALOAD 0x4
0x105: V87 = AND V86 0xffffffffffffffffffffffffffffffffffffffff
0x106: V88 = 0x3e0
0x109: JUMP 0x3e0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10a, V87]
Exit stack: [V12, 0x10a, V87]

================================

Block 0x10a
[0x10a:0x11b]
---
Predecessors: [0x3e0, 0x450, 0x45f, 0x465]
Successors: []
---
0x10a JUMPDEST
0x10b PUSH1 0x40
0x10d MLOAD
0x10e SWAP1
0x10f DUP2
0x110 MSTORE
0x111 PUSH1 0x20
0x113 ADD
0x114 PUSH1 0x40
0x116 MLOAD
0x117 DUP1
0x118 SWAP2
0x119 SUB
0x11a SWAP1
0x11b RETURN
---
0x10a: JUMPDEST 
0x10b: V89 = 0x40
0x10d: V90 = M[0x40]
0x110: M[V90] = S0
0x111: V91 = 0x20
0x113: V92 = ADD 0x20 V90
0x114: V93 = 0x40
0x116: V94 = M[0x40]
0x119: V95 = SUB V92 V94
0x11b: RETURN V94 V95
---
Entry stack: [V12, 0x10a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x10a]

================================

Block 0x11c
[0x11c:0x123]
---
Predecessors: [0x30]
Successors: [0x2bf]
---
0x11c JUMPDEST
0x11d PUSH2 0xd4
0x120 PUSH2 0x2bf
0x123 JUMP
---
0x11c: JUMPDEST 
0x11d: V96 = 0xd4
0x120: V97 = 0x2bf
0x123: JUMP 0x2bf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0x124
[0x124:0x125]
---
Predecessors: []
Successors: []
---
0x124 JUMPDEST
0x125 STOP
---
0x124: JUMPDEST 
0x125: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x126
[0x126:0x12d]
---
Predecessors: [0x3b]
Successors: [0x3f2]
---
0x126 JUMPDEST
0x127 PUSH2 0xd4
0x12a PUSH2 0x3f2
0x12d JUMP
---
0x126: JUMPDEST 
0x127: V98 = 0xd4
0x12a: V99 = 0x3f2
0x12d: JUMP 0x3f2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0x12e
[0x12e:0x12f]
---
Predecessors: []
Successors: []
---
0x12e JUMPDEST
0x12f STOP
---
0x12e: JUMPDEST 
0x12f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x130
[0x130:0x136]
---
Predecessors: [0x46]
Successors: [0x137, 0x13b]
---
0x130 JUMPDEST
0x131 CALLVALUE
0x132 ISZERO
0x133 PUSH2 0x13b
0x136 JUMPI
---
0x130: JUMPDEST 
0x131: V100 = CALLVALUE
0x132: V101 = ISZERO V100
0x133: V102 = 0x13b
0x136: JUMPI 0x13b V101
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x137
[0x137:0x13a]
---
Predecessors: [0x130]
Successors: []
---
0x137 PUSH1 0x0
0x139 DUP1
0x13a REVERT
---
0x137: V103 = 0x0
0x13a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13b
[0x13b:0x142]
---
Predecessors: [0x130]
Successors: [0x438]
---
0x13b JUMPDEST
0x13c PUSH2 0x143
0x13f PUSH2 0x438
0x142 JUMP
---
0x13b: JUMPDEST 
0x13c: V104 = 0x143
0x13f: V105 = 0x438
0x142: JUMP 0x438
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x143]
Exit stack: [V12, 0x143]

================================

Block 0x143
[0x143:0x156]
---
Predecessors: [0x438, 0x456]
Successors: []
---
0x143 JUMPDEST
0x144 PUSH1 0x40
0x146 MLOAD
0x147 SWAP1
0x148 ISZERO
0x149 ISZERO
0x14a DUP2
0x14b MSTORE
0x14c PUSH1 0x20
0x14e ADD
0x14f PUSH1 0x40
0x151 MLOAD
0x152 DUP1
0x153 SWAP2
0x154 SUB
0x155 SWAP1
0x156 RETURN
---
0x143: JUMPDEST 
0x144: V106 = 0x40
0x146: V107 = M[0x40]
0x148: V108 = ISZERO S0
0x149: V109 = ISZERO V108
0x14b: M[V107] = V109
0x14c: V110 = 0x20
0x14e: V111 = ADD 0x20 V107
0x14f: V112 = 0x40
0x151: V113 = M[0x40]
0x154: V114 = SUB V111 V113
0x156: RETURN V113 V114
---
Entry stack: [V12, 0x143, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x143]

================================

Block 0x157
[0x157:0x15d]
---
Predecessors: [0x51]
Successors: [0x15e, 0x162]
---
0x157 JUMPDEST
0x158 CALLVALUE
0x159 ISZERO
0x15a PUSH2 0x162
0x15d JUMPI
---
0x157: JUMPDEST 
0x158: V115 = CALLVALUE
0x159: V116 = ISZERO V115
0x15a: V117 = 0x162
0x15d: JUMPI 0x162 V116
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15e
[0x15e:0x161]
---
Predecessors: [0x157]
Successors: []
---
0x15e PUSH1 0x0
0x160 DUP1
0x161 REVERT
---
0x15e: V118 = 0x0
0x161: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x162
[0x162:0x169]
---
Predecessors: [0x157]
Successors: [0x441]
---
0x162 JUMPDEST
0x163 PUSH2 0x16a
0x166 PUSH2 0x441
0x169 JUMP
---
0x162: JUMPDEST 
0x163: V119 = 0x16a
0x166: V120 = 0x441
0x169: JUMP 0x441
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x16a]
Exit stack: [V12, 0x16a]

================================

Block 0x16a
[0x16a:0x185]
---
Predecessors: [0x441, 0x573]
Successors: []
---
0x16a JUMPDEST
0x16b PUSH1 0x40
0x16d MLOAD
0x16e PUSH1 0x1
0x170 PUSH1 0xa0
0x172 PUSH1 0x2
0x174 EXP
0x175 SUB
0x176 SWAP1
0x177 SWAP2
0x178 AND
0x179 DUP2
0x17a MSTORE
0x17b PUSH1 0x20
0x17d ADD
0x17e PUSH1 0x40
0x180 MLOAD
0x181 DUP1
0x182 SWAP2
0x183 SUB
0x184 SWAP1
0x185 RETURN
---
0x16a: JUMPDEST 
0x16b: V121 = 0x40
0x16d: V122 = M[0x40]
0x16e: V123 = 0x1
0x170: V124 = 0xa0
0x172: V125 = 0x2
0x174: V126 = EXP 0x2 0xa0
0x175: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x178: V128 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x17a: M[V122] = V128
0x17b: V129 = 0x20
0x17d: V130 = ADD 0x20 V122
0x17e: V131 = 0x40
0x180: V132 = M[0x40]
0x183: V133 = SUB V130 V132
0x185: RETURN V132 V133
---
Entry stack: [V12, 0x16a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x16a]

================================

Block 0x186
[0x186:0x18c]
---
Predecessors: [0x5c]
Successors: [0x18d, 0x191]
---
0x186 JUMPDEST
0x187 CALLVALUE
0x188 ISZERO
0x189 PUSH2 0x191
0x18c JUMPI
---
0x186: JUMPDEST 
0x187: V134 = CALLVALUE
0x188: V135 = ISZERO V134
0x189: V136 = 0x191
0x18c: JUMPI 0x191 V135
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18d
[0x18d:0x190]
---
Predecessors: [0x186]
Successors: []
---
0x18d PUSH1 0x0
0x18f DUP1
0x190 REVERT
---
0x18d: V137 = 0x0
0x190: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x191
[0x191:0x198]
---
Predecessors: [0x186]
Successors: [0x450]
---
0x191 JUMPDEST
0x192 PUSH2 0x10a
0x195 PUSH2 0x450
0x198 JUMP
---
0x191: JUMPDEST 
0x192: V138 = 0x10a
0x195: V139 = 0x450
0x198: JUMP 0x450
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10a]
Exit stack: [V12, 0x10a]

================================

Block 0x199
[0x199:0x1aa]
---
Predecessors: []
Successors: []
---
0x199 JUMPDEST
0x19a PUSH1 0x40
0x19c MLOAD
0x19d SWAP1
0x19e DUP2
0x19f MSTORE
0x1a0 PUSH1 0x20
0x1a2 ADD
0x1a3 PUSH1 0x40
0x1a5 MLOAD
0x1a6 DUP1
0x1a7 SWAP2
0x1a8 SUB
0x1a9 SWAP1
0x1aa RETURN
---
0x199: JUMPDEST 
0x19a: V140 = 0x40
0x19c: V141 = M[0x40]
0x19f: M[V141] = S0
0x1a0: V142 = 0x20
0x1a2: V143 = ADD 0x20 V141
0x1a3: V144 = 0x40
0x1a5: V145 = M[0x40]
0x1a8: V146 = SUB V143 V145
0x1aa: RETURN V145 V146
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1ab
[0x1ab:0x1b1]
---
Predecessors: [0x67]
Successors: [0x1b2, 0x1b6]
---
0x1ab JUMPDEST
0x1ac CALLVALUE
0x1ad ISZERO
0x1ae PUSH2 0x1b6
0x1b1 JUMPI
---
0x1ab: JUMPDEST 
0x1ac: V147 = CALLVALUE
0x1ad: V148 = ISZERO V147
0x1ae: V149 = 0x1b6
0x1b1: JUMPI 0x1b6 V148
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b2
[0x1b2:0x1b5]
---
Predecessors: [0x1ab]
Successors: []
---
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 REVERT
---
0x1b2: V150 = 0x0
0x1b5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b6
[0x1b6:0x1bd]
---
Predecessors: [0x1ab]
Successors: [0x456]
---
0x1b6 JUMPDEST
0x1b7 PUSH2 0x143
0x1ba PUSH2 0x456
0x1bd JUMP
---
0x1b6: JUMPDEST 
0x1b7: V151 = 0x143
0x1ba: V152 = 0x456
0x1bd: JUMP 0x456
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x143]
Exit stack: [V12, 0x143]

================================

Block 0x1be
[0x1be:0x1d1]
---
Predecessors: []
Successors: []
---
0x1be JUMPDEST
0x1bf PUSH1 0x40
0x1c1 MLOAD
0x1c2 SWAP1
0x1c3 ISZERO
0x1c4 ISZERO
0x1c5 DUP2
0x1c6 MSTORE
0x1c7 PUSH1 0x20
0x1c9 ADD
0x1ca PUSH1 0x40
0x1cc MLOAD
0x1cd DUP1
0x1ce SWAP2
0x1cf SUB
0x1d0 SWAP1
0x1d1 RETURN
---
0x1be: JUMPDEST 
0x1bf: V153 = 0x40
0x1c1: V154 = M[0x40]
0x1c3: V155 = ISZERO S0
0x1c4: V156 = ISZERO V155
0x1c6: M[V154] = V156
0x1c7: V157 = 0x20
0x1c9: V158 = ADD 0x20 V154
0x1ca: V159 = 0x40
0x1cc: V160 = M[0x40]
0x1cf: V161 = SUB V158 V160
0x1d1: RETURN V160 V161
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d2
[0x1d2:0x1d8]
---
Predecessors: [0x72]
Successors: [0x1d9, 0x1dd]
---
0x1d2 JUMPDEST
0x1d3 CALLVALUE
0x1d4 ISZERO
0x1d5 PUSH2 0x1dd
0x1d8 JUMPI
---
0x1d2: JUMPDEST 
0x1d3: V162 = CALLVALUE
0x1d4: V163 = ISZERO V162
0x1d5: V164 = 0x1dd
0x1d8: JUMPI 0x1dd V163
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d9
[0x1d9:0x1dc]
---
Predecessors: [0x1d2]
Successors: []
---
0x1d9 PUSH1 0x0
0x1db DUP1
0x1dc REVERT
---
0x1d9: V165 = 0x0
0x1dc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1dd
[0x1dd:0x1e4]
---
Predecessors: [0x1d2]
Successors: [0x45f]
---
0x1dd JUMPDEST
0x1de PUSH2 0x10a
0x1e1 PUSH2 0x45f
0x1e4 JUMP
---
0x1dd: JUMPDEST 
0x1de: V166 = 0x10a
0x1e1: V167 = 0x45f
0x1e4: JUMP 0x45f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10a]
Exit stack: [V12, 0x10a]

================================

Block 0x1e5
[0x1e5:0x1f6]
---
Predecessors: []
Successors: []
---
0x1e5 JUMPDEST
0x1e6 PUSH1 0x40
0x1e8 MLOAD
0x1e9 SWAP1
0x1ea DUP2
0x1eb MSTORE
0x1ec PUSH1 0x20
0x1ee ADD
0x1ef PUSH1 0x40
0x1f1 MLOAD
0x1f2 DUP1
0x1f3 SWAP2
0x1f4 SUB
0x1f5 SWAP1
0x1f6 RETURN
---
0x1e5: JUMPDEST 
0x1e6: V168 = 0x40
0x1e8: V169 = M[0x40]
0x1eb: M[V169] = S0
0x1ec: V170 = 0x20
0x1ee: V171 = ADD 0x20 V169
0x1ef: V172 = 0x40
0x1f1: V173 = M[0x40]
0x1f4: V174 = SUB V171 V173
0x1f6: RETURN V173 V174
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1f7
[0x1f7:0x1fd]
---
Predecessors: [0x7d]
Successors: [0x1fe, 0x202]
---
0x1f7 JUMPDEST
0x1f8 CALLVALUE
0x1f9 ISZERO
0x1fa PUSH2 0x202
0x1fd JUMPI
---
0x1f7: JUMPDEST 
0x1f8: V175 = CALLVALUE
0x1f9: V176 = ISZERO V175
0x1fa: V177 = 0x202
0x1fd: JUMPI 0x202 V176
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fe
[0x1fe:0x201]
---
Predecessors: [0x1f7]
Successors: []
---
0x1fe PUSH1 0x0
0x200 DUP1
0x201 REVERT
---
0x1fe: V178 = 0x0
0x201: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x202
[0x202:0x209]
---
Predecessors: [0x1f7]
Successors: [0x465]
---
0x202 JUMPDEST
0x203 PUSH2 0x10a
0x206 PUSH2 0x465
0x209 JUMP
---
0x202: JUMPDEST 
0x203: V179 = 0x10a
0x206: V180 = 0x465
0x209: JUMP 0x465
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10a]
Exit stack: [V12, 0x10a]

================================

Block 0x20a
[0x20a:0x21b]
---
Predecessors: []
Successors: []
---
0x20a JUMPDEST
0x20b PUSH1 0x40
0x20d MLOAD
0x20e SWAP1
0x20f DUP2
0x210 MSTORE
0x211 PUSH1 0x20
0x213 ADD
0x214 PUSH1 0x40
0x216 MLOAD
0x217 DUP1
0x218 SWAP2
0x219 SUB
0x21a SWAP1
0x21b RETURN
---
0x20a: JUMPDEST 
0x20b: V181 = 0x40
0x20d: V182 = M[0x40]
0x210: M[V182] = S0
0x211: V183 = 0x20
0x213: V184 = ADD 0x20 V182
0x214: V185 = 0x40
0x216: V186 = M[0x40]
0x219: V187 = SUB V184 V186
0x21b: RETURN V186 V187
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x21c
[0x21c:0x222]
---
Predecessors: [0x88]
Successors: [0x223, 0x227]
---
0x21c JUMPDEST
0x21d CALLVALUE
0x21e ISZERO
0x21f PUSH2 0x227
0x222 JUMPI
---
0x21c: JUMPDEST 
0x21d: V188 = CALLVALUE
0x21e: V189 = ISZERO V188
0x21f: V190 = 0x227
0x222: JUMPI 0x227 V189
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x223
[0x223:0x226]
---
Predecessors: [0x21c]
Successors: []
---
0x223 PUSH1 0x0
0x225 DUP1
0x226 REVERT
---
0x223: V191 = 0x0
0x226: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x227
[0x227:0x23a]
---
Predecessors: [0x21c]
Successors: [0x46b]
---
0x227 JUMPDEST
0x228 PUSH2 0xd4
0x22b PUSH1 0x1
0x22d PUSH1 0xa0
0x22f PUSH1 0x2
0x231 EXP
0x232 SUB
0x233 PUSH1 0x4
0x235 CALLDATALOAD
0x236 AND
0x237 PUSH2 0x46b
0x23a JUMP
---
0x227: JUMPDEST 
0x228: V192 = 0xd4
0x22b: V193 = 0x1
0x22d: V194 = 0xa0
0x22f: V195 = 0x2
0x231: V196 = EXP 0x2 0xa0
0x232: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x233: V198 = 0x4
0x235: V199 = CALLDATALOAD 0x4
0x236: V200 = AND V199 0xffffffffffffffffffffffffffffffffffffffff
0x237: V201 = 0x46b
0x23a: JUMP 0x46b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4, V200]
Exit stack: [V12, 0xd4, V200]

================================

Block 0x23b
[0x23b:0x23c]
---
Predecessors: []
Successors: []
---
0x23b JUMPDEST
0x23c STOP
---
0x23b: JUMPDEST 
0x23c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x23d
[0x23d:0x243]
---
Predecessors: [0x93]
Successors: [0x244, 0x248]
---
0x23d JUMPDEST
0x23e CALLVALUE
0x23f ISZERO
0x240 PUSH2 0x248
0x243 JUMPI
---
0x23d: JUMPDEST 
0x23e: V202 = CALLVALUE
0x23f: V203 = ISZERO V202
0x240: V204 = 0x248
0x243: JUMPI 0x248 V203
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x244
[0x244:0x247]
---
Predecessors: [0x23d]
Successors: []
---
0x244 PUSH1 0x0
0x246 DUP1
0x247 REVERT
---
0x244: V205 = 0x0
0x247: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x248
[0x248:0x28d]
---
Predecessors: [0x23d]
Successors: [0x49b]
---
0x248 JUMPDEST
0x249 PUSH2 0xd4
0x24c PUSH1 0x4
0x24e PUSH1 0x24
0x250 DUP2
0x251 CALLDATALOAD
0x252 DUP2
0x253 DUP2
0x254 ADD
0x255 SWAP1
0x256 DUP4
0x257 ADD
0x258 CALLDATALOAD
0x259 DUP1
0x25a PUSH1 0x20
0x25c PUSH1 0x1f
0x25e DUP3
0x25f ADD
0x260 DUP2
0x261 SWAP1
0x262 DIV
0x263 DUP2
0x264 MUL
0x265 ADD
0x266 PUSH1 0x40
0x268 MLOAD
0x269 SWAP1
0x26a DUP2
0x26b ADD
0x26c PUSH1 0x40
0x26e MSTORE
0x26f DUP2
0x270 DUP2
0x271 MSTORE
0x272 SWAP3
0x273 SWAP2
0x274 SWAP1
0x275 PUSH1 0x20
0x277 DUP5
0x278 ADD
0x279 DUP4
0x27a DUP4
0x27b DUP1
0x27c DUP3
0x27d DUP5
0x27e CALLDATACOPY
0x27f POP
0x280 SWAP5
0x281 SWAP7
0x282 POP
0x283 PUSH2 0x49b
0x286 SWAP6
0x287 POP
0x288 POP
0x289 POP
0x28a POP
0x28b POP
0x28c POP
0x28d JUMP
---
0x248: JUMPDEST 
0x249: V206 = 0xd4
0x24c: V207 = 0x4
0x24e: V208 = 0x24
0x251: V209 = CALLDATALOAD 0x4
0x254: V210 = ADD V209 0x24
0x257: V211 = ADD 0x4 V209
0x258: V212 = CALLDATALOAD V211
0x25a: V213 = 0x20
0x25c: V214 = 0x1f
0x25f: V215 = ADD V212 0x1f
0x262: V216 = DIV V215 0x20
0x264: V217 = MUL 0x20 V216
0x265: V218 = ADD V217 0x20
0x266: V219 = 0x40
0x268: V220 = M[0x40]
0x26b: V221 = ADD V220 V218
0x26c: V222 = 0x40
0x26e: M[0x40] = V221
0x271: M[V220] = V212
0x275: V223 = 0x20
0x278: V224 = ADD V220 0x20
0x27e: CALLDATACOPY V224 V210 V212
0x283: V225 = 0x49b
0x28d: JUMP 0x49b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4, V220]
Exit stack: [V12, 0xd4, V220]

================================

Block 0x28e
[0x28e:0x28f]
---
Predecessors: []
Successors: []
---
0x28e JUMPDEST
0x28f STOP
---
0x28e: JUMPDEST 
0x28f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x290
[0x290:0x296]
---
Predecessors: [0x9e]
Successors: [0x297, 0x29b]
---
0x290 JUMPDEST
0x291 CALLVALUE
0x292 ISZERO
0x293 PUSH2 0x29b
0x296 JUMPI
---
0x290: JUMPDEST 
0x291: V226 = CALLVALUE
0x292: V227 = ISZERO V226
0x293: V228 = 0x29b
0x296: JUMPI 0x29b V227
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x297
[0x297:0x29a]
---
Predecessors: [0x290]
Successors: []
---
0x297 PUSH1 0x0
0x299 DUP1
0x29a REVERT
---
0x297: V229 = 0x0
0x29a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29b
[0x29b:0x2a2]
---
Predecessors: [0x290]
Successors: [0x573]
---
0x29b JUMPDEST
0x29c PUSH2 0x16a
0x29f PUSH2 0x573
0x2a2 JUMP
---
0x29b: JUMPDEST 
0x29c: V230 = 0x16a
0x29f: V231 = 0x573
0x2a2: JUMP 0x573
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x16a]
Exit stack: [V12, 0x16a]

================================

Block 0x2a3
[0x2a3:0x2be]
---
Predecessors: []
Successors: []
---
0x2a3 JUMPDEST
0x2a4 PUSH1 0x40
0x2a6 MLOAD
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0xa0
0x2ab PUSH1 0x2
0x2ad EXP
0x2ae SUB
0x2af SWAP1
0x2b0 SWAP2
0x2b1 AND
0x2b2 DUP2
0x2b3 MSTORE
0x2b4 PUSH1 0x20
0x2b6 ADD
0x2b7 PUSH1 0x40
0x2b9 MLOAD
0x2ba DUP1
0x2bb SWAP2
0x2bc SUB
0x2bd SWAP1
0x2be RETURN
---
0x2a3: JUMPDEST 
0x2a4: V232 = 0x40
0x2a6: V233 = M[0x40]
0x2a7: V234 = 0x1
0x2a9: V235 = 0xa0
0x2ab: V236 = 0x2
0x2ad: V237 = EXP 0x2 0xa0
0x2ae: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b1: V239 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: M[V233] = V239
0x2b4: V240 = 0x20
0x2b6: V241 = ADD 0x20 V233
0x2b7: V242 = 0x40
0x2b9: V243 = M[0x40]
0x2bc: V244 = SUB V241 V243
0x2be: RETURN V243 V244
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2bf
[0x2bf:0x2cd]
---
Predecessors: [0xc9, 0x11c]
Successors: [0x2ce, 0x2dd]
---
0x2bf JUMPDEST
0x2c0 PUSH7 0x38d7ea4c68000
0x2c8 CALLVALUE
0x2c9 GT
0x2ca PUSH2 0x2dd
0x2cd JUMPI
---
0x2bf: JUMPDEST 
0x2c0: V245 = 0x38d7ea4c68000
0x2c8: V246 = CALLVALUE
0x2c9: V247 = GT V246 0x38d7ea4c68000
0x2ca: V248 = 0x2dd
0x2cd: JUMPI 0x2dd V247
---
Entry stack: [V12, S1, {0xd1, 0xd4}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0xd1, 0xd4}]

================================

Block 0x2ce
[0x2ce:0x2d7]
---
Predecessors: [0x2bf]
Successors: [0x582]
---
0x2ce PUSH2 0x2d8
0x2d1 CALLER
0x2d2 PUSH1 0x0
0x2d4 PUSH2 0x582
0x2d7 JUMP
---
0x2ce: V249 = 0x2d8
0x2d1: V250 = CALLER
0x2d2: V251 = 0x0
0x2d4: V252 = 0x582
0x2d7: JUMP 0x582
---
Entry stack: [V12, S1, {0xd1, 0xd4}]
Stack pops: 0
Stack additions: [0x2d8, V250, 0x0]
Exit stack: [V12, S1, {0xd1, 0xd4}, 0x2d8, V250, 0x0]

================================

Block 0x2d8
[0x2d8:0x2dc]
---
Predecessors: [0x7e0]
Successors: [0xd1]
---
0x2d8 JUMPDEST
0x2d9 PUSH2 0xd1
0x2dc JUMP
---
0x2d8: JUMPDEST 
0x2d9: V253 = 0xd1
0x2dc: JUMP 0xd1
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x2dd
[0x2dd:0x2e8]
---
Predecessors: [0x2bf]
Successors: [0x2e9, 0x2ed]
---
0x2dd JUMPDEST
0x2de PUSH1 0x5
0x2e0 SLOAD
0x2e1 PUSH1 0xff
0x2e3 AND
0x2e4 ISZERO
0x2e5 PUSH2 0x2ed
0x2e8 JUMPI
---
0x2dd: JUMPDEST 
0x2de: V254 = 0x5
0x2e0: V255 = S[0x5]
0x2e1: V256 = 0xff
0x2e3: V257 = AND 0xff V255
0x2e4: V258 = ISZERO V257
0x2e5: V259 = 0x2ed
0x2e8: JUMPI 0x2ed V258
---
Entry stack: [V12, S1, {0xd1, 0xd4}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0xd1, 0xd4}]

================================

Block 0x2e9
[0x2e9:0x2ec]
---
Predecessors: [0x2dd]
Successors: []
---
0x2e9 PUSH1 0x0
0x2eb DUP1
0x2ec REVERT
---
0x2e9: V260 = 0x0
0x2ec: REVERT 0x0 0x0
---
Entry stack: [V12, S1, {0xd1, 0xd4}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0xd1, 0xd4}]

================================

Block 0x2ed
[0x2ed:0x2f8]
---
Predecessors: [0x2dd]
Successors: [0x2f9, 0x2fd]
---
0x2ed JUMPDEST
0x2ee PUSH1 0x2
0x2f0 SLOAD
0x2f1 PUSH1 0xff
0x2f3 AND
0x2f4 ISZERO
0x2f5 PUSH2 0x2fd
0x2f8 JUMPI
---
0x2ed: JUMPDEST 
0x2ee: V261 = 0x2
0x2f0: V262 = S[0x2]
0x2f1: V263 = 0xff
0x2f3: V264 = AND 0xff V262
0x2f4: V265 = ISZERO V264
0x2f5: V266 = 0x2fd
0x2f8: JUMPI 0x2fd V265
---
Entry stack: [V12, S1, {0xd1, 0xd4}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0xd1, 0xd4}]

================================

Block 0x2f9
[0x2f9:0x2fc]
---
Predecessors: [0x2ed]
Successors: []
---
0x2f9 PUSH1 0x0
0x2fb DUP1
0x2fc REVERT
---
0x2f9: V267 = 0x0
0x2fc: REVERT 0x0 0x0
---
Entry stack: [V12, S1, {0xd1, 0xd4}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0xd1, 0xd4}]

================================

Block 0x2fd
[0x2fd:0x31b]
---
Predecessors: [0x2ed]
Successors: [0x31c]
---
0x2fd JUMPDEST
0x2fe PUSH1 0x1
0x300 PUSH1 0xa0
0x302 PUSH1 0x2
0x304 EXP
0x305 SUB
0x306 CALLER
0x307 AND
0x308 PUSH1 0x0
0x30a SWAP1
0x30b DUP2
0x30c MSTORE
0x30d PUSH1 0x20
0x30f DUP2
0x310 SWAP1
0x311 MSTORE
0x312 PUSH1 0x40
0x314 SWAP1
0x315 SHA3
0x316 DUP1
0x317 SLOAD
0x318 CALLVALUE
0x319 ADD
0x31a SWAP1
0x31b SSTORE
---
0x2fd: JUMPDEST 
0x2fe: V268 = 0x1
0x300: V269 = 0xa0
0x302: V270 = 0x2
0x304: V271 = EXP 0x2 0xa0
0x305: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x306: V273 = CALLER
0x307: V274 = AND V273 0xffffffffffffffffffffffffffffffffffffffff
0x308: V275 = 0x0
0x30c: M[0x0] = V274
0x30d: V276 = 0x20
0x311: M[0x20] = 0x0
0x312: V277 = 0x40
0x315: V278 = SHA3 0x0 0x40
0x317: V279 = S[V278]
0x318: V280 = CALLVALUE
0x319: V281 = ADD V280 V279
0x31b: S[V278] = V281
---
Entry stack: [V12, S1, {0xd1, 0xd4}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0xd1, 0xd4}]

================================

Block 0x31c
[0x31c:0x31c]
---
Predecessors: [0x2fd]
Successors: [0x31d]
---
0x31c JUMPDEST
---
0x31c: JUMPDEST 
---
Entry stack: [V12, S1, {0xd1, 0xd4}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0xd1, 0xd4}]

================================

Block 0x31d
[0x31d:0x31e]
---
Predecessors: [0x31c]
Successors: [0xd1, 0xd4]
---
0x31d JUMPDEST
0x31e JUMP
---
0x31d: JUMPDEST 
0x31e: JUMP {0xd1, 0xd4}
---
Entry stack: [V12, S1, {0xd1, 0xd4}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x31f
[0x31f:0x32d]
---
Predecessors: [0xe1]
Successors: [0x32e, 0x332]
---
0x31f JUMPDEST
0x320 PUSH1 0x2
0x322 SLOAD
0x323 PUSH1 0x0
0x325 SWAP1
0x326 PUSH1 0xff
0x328 AND
0x329 ISZERO
0x32a PUSH2 0x332
0x32d JUMPI
---
0x31f: JUMPDEST 
0x320: V282 = 0x2
0x322: V283 = S[0x2]
0x323: V284 = 0x0
0x326: V285 = 0xff
0x328: V286 = AND 0xff V283
0x329: V287 = ISZERO V286
0x32a: V288 = 0x332
0x32d: JUMPI 0x332 V287
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xd4, 0x0]

================================

Block 0x32e
[0x32e:0x331]
---
Predecessors: [0x31f]
Successors: [0x3dc]
---
0x32e PUSH2 0x3dc
0x331 JUMP
---
0x32e: V289 = 0x3dc
0x331: JUMP 0x3dc
---
Entry stack: [V12, 0xd4, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, 0x0]

================================

Block 0x332
[0x332:0x33c]
---
Predecessors: [0x31f]
Successors: [0x33d, 0x341]
---
0x332 JUMPDEST
0x333 PUSH1 0x7
0x335 SLOAD
0x336 TIMESTAMP
0x337 LT
0x338 ISZERO
0x339 PUSH2 0x341
0x33c JUMPI
---
0x332: JUMPDEST 
0x333: V290 = 0x7
0x335: V291 = S[0x7]
0x336: V292 = TIMESTAMP
0x337: V293 = LT V292 V291
0x338: V294 = ISZERO V293
0x339: V295 = 0x341
0x33c: JUMPI 0x341 V294
---
Entry stack: [V12, 0xd4, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, 0x0]

================================

Block 0x33d
[0x33d:0x340]
---
Predecessors: [0x332]
Successors: [0x3dc]
---
0x33d PUSH2 0x3dc
0x340 JUMP
---
0x33d: V296 = 0x3dc
0x340: JUMP 0x3dc
---
Entry stack: [V12, 0xd4, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, 0x0]

================================

Block 0x341
[0x341:0x34c]
---
Predecessors: [0x332]
Successors: [0x34d, 0x351]
---
0x341 JUMPDEST
0x342 PUSH1 0x5
0x344 SLOAD
0x345 PUSH1 0xff
0x347 AND
0x348 ISZERO
0x349 PUSH2 0x351
0x34c JUMPI
---
0x341: JUMPDEST 
0x342: V297 = 0x5
0x344: V298 = S[0x5]
0x345: V299 = 0xff
0x347: V300 = AND 0xff V298
0x348: V301 = ISZERO V300
0x349: V302 = 0x351
0x34c: JUMPI 0x351 V301
---
Entry stack: [V12, 0xd4, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, 0x0]

================================

Block 0x34d
[0x34d:0x350]
---
Predecessors: [0x341]
Successors: [0x3dc]
---
0x34d PUSH2 0x3dc
0x350 JUMP
---
0x34d: V303 = 0x3dc
0x350: JUMP 0x3dc
---
Entry stack: [V12, 0xd4, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, 0x0]

================================

Block 0x351
[0x351:0x3a6]
---
Predecessors: [0x341]
Successors: [0x3a7, 0x3ab]
---
0x351 JUMPDEST
0x352 POP
0x353 PUSH1 0x2
0x355 DUP1
0x356 SLOAD
0x357 PUSH1 0xff
0x359 NOT
0x35a AND
0x35b PUSH1 0x1
0x35d SWAP1
0x35e DUP2
0x35f OR
0x360 SWAP1
0x361 SWAP2
0x362 SSTORE
0x363 TIMESTAMP
0x364 PUSH1 0x3
0x366 SSTORE
0x367 DUP1
0x368 SLOAD
0x369 PUSH1 0x0
0x36b SWAP1
0x36c SWAP2
0x36d SSTORE
0x36e PUSH1 0x1
0x370 PUSH1 0xa0
0x372 PUSH1 0x2
0x374 EXP
0x375 SUB
0x376 ADDRESS
0x377 DUP2
0x378 AND
0x379 BALANCE
0x37a DUP3
0x37b SWAP1
0x37c SUB
0x37d PUSH1 0x4
0x37f DUP2
0x380 SWAP1
0x381 SSTORE
0x382 PUSH1 0x9
0x384 SLOAD
0x385 SWAP1
0x386 SWAP2
0x387 AND
0x388 SWAP1
0x389 PUSH1 0x40
0x38b MLOAD
0x38c PUSH1 0x0
0x38e PUSH1 0x40
0x390 MLOAD
0x391 DUP1
0x392 DUP4
0x393 SUB
0x394 DUP2
0x395 DUP6
0x396 DUP8
0x397 PUSH2 0x8796
0x39a GAS
0x39b SUB
0x39c CALL
0x39d SWAP3
0x39e POP
0x39f POP
0x3a0 POP
0x3a1 ISZERO
0x3a2 ISZERO
0x3a3 PUSH2 0x3ab
0x3a6 JUMPI
---
0x351: JUMPDEST 
0x353: V304 = 0x2
0x356: V305 = S[0x2]
0x357: V306 = 0xff
0x359: V307 = NOT 0xff
0x35a: V308 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V305
0x35b: V309 = 0x1
0x35f: V310 = OR 0x1 V308
0x362: S[0x2] = V310
0x363: V311 = TIMESTAMP
0x364: V312 = 0x3
0x366: S[0x3] = V311
0x368: V313 = S[0x1]
0x369: V314 = 0x0
0x36d: S[0x1] = 0x0
0x36e: V315 = 0x1
0x370: V316 = 0xa0
0x372: V317 = 0x2
0x374: V318 = EXP 0x2 0xa0
0x375: V319 = SUB 0x10000000000000000000000000000000000000000 0x1
0x376: V320 = ADDRESS
0x378: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x379: V322 = BALANCE V321
0x37c: V323 = SUB V322 V313
0x37d: V324 = 0x4
0x381: S[0x4] = V323
0x382: V325 = 0x9
0x384: V326 = S[0x9]
0x387: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x389: V328 = 0x40
0x38b: V329 = M[0x40]
0x38c: V330 = 0x0
0x38e: V331 = 0x40
0x390: V332 = M[0x40]
0x393: V333 = SUB V329 V332
0x397: V334 = 0x8796
0x39a: V335 = GAS
0x39b: V336 = SUB V335 0x8796
0x39c: V337 = CALL V336 V327 V323 V332 V333 V332 0x0
0x3a1: V338 = ISZERO V337
0x3a2: V339 = ISZERO V338
0x3a3: V340 = 0x3ab
0x3a6: JUMPI 0x3ab V339
---
Entry stack: [V12, 0xd4, 0x0]
Stack pops: 1
Stack additions: [V313]
Exit stack: [V12, 0xd4, V313]

================================

Block 0x3a7
[0x3a7:0x3aa]
---
Predecessors: [0x351]
Successors: []
---
0x3a7 PUSH1 0x0
0x3a9 DUP1
0x3aa REVERT
---
0x3a7: V341 = 0x0
0x3aa: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, V313]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V313]

================================

Block 0x3ab
[0x3ab:0x3d7]
---
Predecessors: [0x351]
Successors: [0x3d8, 0x3dc]
---
0x3ab JUMPDEST
0x3ac PUSH1 0x1
0x3ae PUSH1 0xa0
0x3b0 PUSH1 0x2
0x3b2 EXP
0x3b3 SUB
0x3b4 CALLER
0x3b5 AND
0x3b6 DUP2
0x3b7 ISZERO
0x3b8 PUSH2 0x8fc
0x3bb MUL
0x3bc DUP3
0x3bd PUSH1 0x40
0x3bf MLOAD
0x3c0 PUSH1 0x0
0x3c2 PUSH1 0x40
0x3c4 MLOAD
0x3c5 DUP1
0x3c6 DUP4
0x3c7 SUB
0x3c8 DUP2
0x3c9 DUP6
0x3ca DUP9
0x3cb DUP9
0x3cc CALL
0x3cd SWAP4
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 ISZERO
0x3d3 ISZERO
0x3d4 PUSH2 0x3dc
0x3d7 JUMPI
---
0x3ab: JUMPDEST 
0x3ac: V342 = 0x1
0x3ae: V343 = 0xa0
0x3b0: V344 = 0x2
0x3b2: V345 = EXP 0x2 0xa0
0x3b3: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b4: V347 = CALLER
0x3b5: V348 = AND V347 0xffffffffffffffffffffffffffffffffffffffff
0x3b7: V349 = ISZERO V313
0x3b8: V350 = 0x8fc
0x3bb: V351 = MUL 0x8fc V349
0x3bd: V352 = 0x40
0x3bf: V353 = M[0x40]
0x3c0: V354 = 0x0
0x3c2: V355 = 0x40
0x3c4: V356 = M[0x40]
0x3c7: V357 = SUB V353 V356
0x3cc: V358 = CALL V351 V348 V313 V356 V357 V356 0x0
0x3d2: V359 = ISZERO V358
0x3d3: V360 = ISZERO V359
0x3d4: V361 = 0x3dc
0x3d7: JUMPI 0x3dc V360
---
Entry stack: [V12, 0xd4, V313]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xd4, V313]

================================

Block 0x3d8
[0x3d8:0x3db]
---
Predecessors: [0x3ab]
Successors: []
---
0x3d8 PUSH1 0x0
0x3da DUP1
0x3db REVERT
---
0x3d8: V362 = 0x0
0x3db: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, V313]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V313]

================================

Block 0x3dc
[0x3dc:0x3dc]
---
Predecessors: [0x32e, 0x33d, 0x34d, 0x3ab, 0x7e0]
Successors: [0x3dd]
---
0x3dc JUMPDEST
---
0x3dc: JUMPDEST 
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x3dd
[0x3dd:0x3df]
---
Predecessors: [0x3dc]
Successors: [0xd4]
---
0x3dd JUMPDEST
0x3de POP
0x3df JUMP
---
0x3dd: JUMPDEST 
0x3df: JUMP S1
---
Entry stack: [V12, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e0
[0x3e0:0x3f1]
---
Predecessors: [0xf6]
Successors: [0x10a]
---
0x3e0 JUMPDEST
0x3e1 PUSH1 0x0
0x3e3 PUSH1 0x20
0x3e5 DUP2
0x3e6 SWAP1
0x3e7 MSTORE
0x3e8 SWAP1
0x3e9 DUP2
0x3ea MSTORE
0x3eb PUSH1 0x40
0x3ed SWAP1
0x3ee SHA3
0x3ef SLOAD
0x3f0 DUP2
0x3f1 JUMP
---
0x3e0: JUMPDEST 
0x3e1: V363 = 0x0
0x3e3: V364 = 0x20
0x3e7: M[0x20] = 0x0
0x3ea: M[0x0] = V87
0x3eb: V365 = 0x40
0x3ee: V366 = SHA3 0x0 0x40
0x3ef: V367 = S[V366]
0x3f1: JUMP 0x10a
---
Entry stack: [V12, 0x10a, V87]
Stack pops: 2
Stack additions: [S1, V367]
Exit stack: [V12, 0x10a, V367]

================================

Block 0x3f2
[0x3f2:0x408]
---
Predecessors: [0x126]
Successors: [0x409, 0x40d]
---
0x3f2 JUMPDEST
0x3f3 PUSH1 0x8
0x3f5 SLOAD
0x3f6 CALLER
0x3f7 PUSH1 0x1
0x3f9 PUSH1 0xa0
0x3fb PUSH1 0x2
0x3fd EXP
0x3fe SUB
0x3ff SWAP1
0x400 DUP2
0x401 AND
0x402 SWAP2
0x403 AND
0x404 EQ
0x405 PUSH2 0x40d
0x408 JUMPI
---
0x3f2: JUMPDEST 
0x3f3: V368 = 0x8
0x3f5: V369 = S[0x8]
0x3f6: V370 = CALLER
0x3f7: V371 = 0x1
0x3f9: V372 = 0xa0
0x3fb: V373 = 0x2
0x3fd: V374 = EXP 0x2 0xa0
0x3fe: V375 = SUB 0x10000000000000000000000000000000000000000 0x1
0x401: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x403: V377 = AND V369 0xffffffffffffffffffffffffffffffffffffffff
0x404: V378 = EQ V377 V376
0x405: V379 = 0x40d
0x408: JUMPI 0x40d V378
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x409
[0x409:0x40c]
---
Predecessors: [0x3f2]
Successors: []
---
0x409 PUSH1 0x0
0x40b DUP1
0x40c REVERT
---
0x409: V380 = 0x0
0x40c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x40d
[0x40d:0x418]
---
Predecessors: [0x3f2]
Successors: [0x419, 0x41d]
---
0x40d JUMPDEST
0x40e PUSH1 0x5
0x410 SLOAD
0x411 PUSH1 0xff
0x413 AND
0x414 ISZERO
0x415 PUSH2 0x41d
0x418 JUMPI
---
0x40d: JUMPDEST 
0x40e: V381 = 0x5
0x410: V382 = S[0x5]
0x411: V383 = 0xff
0x413: V384 = AND 0xff V382
0x414: V385 = ISZERO V384
0x415: V386 = 0x41d
0x418: JUMPI 0x41d V385
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x419
[0x419:0x41c]
---
Predecessors: [0x40d]
Successors: []
---
0x419 PUSH1 0x0
0x41b DUP1
0x41c REVERT
---
0x419: V387 = 0x0
0x41c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x41d
[0x41d:0x428]
---
Predecessors: [0x40d]
Successors: [0x429, 0x42d]
---
0x41d JUMPDEST
0x41e PUSH1 0x2
0x420 SLOAD
0x421 PUSH1 0xff
0x423 AND
0x424 ISZERO
0x425 PUSH2 0x42d
0x428 JUMPI
---
0x41d: JUMPDEST 
0x41e: V388 = 0x2
0x420: V389 = S[0x2]
0x421: V390 = 0xff
0x423: V391 = AND 0xff V389
0x424: V392 = ISZERO V391
0x425: V393 = 0x42d
0x428: JUMPI 0x42d V392
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x429
[0x429:0x42c]
---
Predecessors: [0x41d]
Successors: []
---
0x429 PUSH1 0x0
0x42b DUP1
0x42c REVERT
---
0x429: V394 = 0x0
0x42c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x42d
[0x42d:0x435]
---
Predecessors: [0x41d]
Successors: [0x436]
---
0x42d JUMPDEST
0x42e PUSH1 0x1
0x430 DUP1
0x431 SLOAD
0x432 CALLVALUE
0x433 ADD
0x434 SWAP1
0x435 SSTORE
---
0x42d: JUMPDEST 
0x42e: V395 = 0x1
0x431: V396 = S[0x1]
0x432: V397 = CALLVALUE
0x433: V398 = ADD V397 V396
0x435: S[0x1] = V398
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x436
[0x436:0x437]
---
Predecessors: [0x42d]
Successors: [0xd4]
---
0x436 JUMPDEST
0x437 JUMP
---
0x436: JUMPDEST 
0x437: JUMP 0xd4
---
Entry stack: [V12, 0xd4]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x438
[0x438:0x440]
---
Predecessors: [0x13b]
Successors: [0x143]
---
0x438 JUMPDEST
0x439 PUSH1 0x2
0x43b SLOAD
0x43c PUSH1 0xff
0x43e AND
0x43f DUP2
0x440 JUMP
---
0x438: JUMPDEST 
0x439: V399 = 0x2
0x43b: V400 = S[0x2]
0x43c: V401 = 0xff
0x43e: V402 = AND 0xff V400
0x440: JUMP 0x143
---
Entry stack: [V12, 0x143]
Stack pops: 1
Stack additions: [S0, V402]
Exit stack: [V12, 0x143, V402]

================================

Block 0x441
[0x441:0x44f]
---
Predecessors: [0x162]
Successors: [0x16a]
---
0x441 JUMPDEST
0x442 PUSH1 0x9
0x444 SLOAD
0x445 PUSH1 0x1
0x447 PUSH1 0xa0
0x449 PUSH1 0x2
0x44b EXP
0x44c SUB
0x44d AND
0x44e DUP2
0x44f JUMP
---
0x441: JUMPDEST 
0x442: V403 = 0x9
0x444: V404 = S[0x9]
0x445: V405 = 0x1
0x447: V406 = 0xa0
0x449: V407 = 0x2
0x44b: V408 = EXP 0x2 0xa0
0x44c: V409 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44d: V410 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x44f: JUMP 0x16a
---
Entry stack: [V12, 0x16a]
Stack pops: 1
Stack additions: [S0, V410]
Exit stack: [V12, 0x16a, V410]

================================

Block 0x450
[0x450:0x455]
---
Predecessors: [0x191]
Successors: [0x10a]
---
0x450 JUMPDEST
0x451 PUSH1 0x1
0x453 SLOAD
0x454 DUP2
0x455 JUMP
---
0x450: JUMPDEST 
0x451: V411 = 0x1
0x453: V412 = S[0x1]
0x455: JUMP 0x10a
---
Entry stack: [V12, 0x10a]
Stack pops: 1
Stack additions: [S0, V412]
Exit stack: [V12, 0x10a, V412]

================================

Block 0x456
[0x456:0x45e]
---
Predecessors: [0x1b6]
Successors: [0x143]
---
0x456 JUMPDEST
0x457 PUSH1 0x5
0x459 SLOAD
0x45a PUSH1 0xff
0x45c AND
0x45d DUP2
0x45e JUMP
---
0x456: JUMPDEST 
0x457: V413 = 0x5
0x459: V414 = S[0x5]
0x45a: V415 = 0xff
0x45c: V416 = AND 0xff V414
0x45e: JUMP 0x143
---
Entry stack: [V12, 0x143]
Stack pops: 1
Stack additions: [S0, V416]
Exit stack: [V12, 0x143, V416]

================================

Block 0x45f
[0x45f:0x464]
---
Predecessors: [0x1dd]
Successors: [0x10a]
---
0x45f JUMPDEST
0x460 PUSH1 0x3
0x462 SLOAD
0x463 DUP2
0x464 JUMP
---
0x45f: JUMPDEST 
0x460: V417 = 0x3
0x462: V418 = S[0x3]
0x464: JUMP 0x10a
---
Entry stack: [V12, 0x10a]
Stack pops: 1
Stack additions: [S0, V418]
Exit stack: [V12, 0x10a, V418]

================================

Block 0x465
[0x465:0x46a]
---
Predecessors: [0x202]
Successors: [0x10a]
---
0x465 JUMPDEST
0x466 PUSH1 0x4
0x468 SLOAD
0x469 DUP2
0x46a JUMP
---
0x465: JUMPDEST 
0x466: V419 = 0x4
0x468: V420 = S[0x4]
0x46a: JUMP 0x10a
---
Entry stack: [V12, 0x10a]
Stack pops: 1
Stack additions: [S0, V420]
Exit stack: [V12, 0x10a, V420]

================================

Block 0x46b
[0x46b:0x477]
---
Predecessors: [0x227]
Successors: [0x478, 0x482]
---
0x46b JUMPDEST
0x46c PUSH1 0x2
0x46e SLOAD
0x46f PUSH1 0xff
0x471 AND
0x472 ISZERO
0x473 DUP1
0x474 PUSH2 0x482
0x477 JUMPI
---
0x46b: JUMPDEST 
0x46c: V421 = 0x2
0x46e: V422 = S[0x2]
0x46f: V423 = 0xff
0x471: V424 = AND 0xff V422
0x472: V425 = ISZERO V424
0x474: V426 = 0x482
0x477: JUMPI 0x482 V425
---
Entry stack: [V12, 0xd4, V200]
Stack pops: 0
Stack additions: [V425]
Exit stack: [V12, 0xd4, V200, V425]

================================

Block 0x478
[0x478:0x481]
---
Predecessors: [0x46b]
Successors: [0x482]
---
0x478 POP
0x479 PUSH1 0x3
0x47b SLOAD
0x47c PUSH2 0xe10
0x47f ADD
0x480 TIMESTAMP
0x481 LT
---
0x479: V427 = 0x3
0x47b: V428 = S[0x3]
0x47c: V429 = 0xe10
0x47f: V430 = ADD 0xe10 V428
0x480: V431 = TIMESTAMP
0x481: V432 = LT V431 V430
---
Entry stack: [V12, 0xd4, V200, V425]
Stack pops: 1
Stack additions: [V432]
Exit stack: [V12, 0xd4, V200, V432]

================================

Block 0x482
[0x482:0x487]
---
Predecessors: [0x46b, 0x478]
Successors: [0x488, 0x48c]
---
0x482 JUMPDEST
0x483 ISZERO
0x484 PUSH2 0x48c
0x487 JUMPI
---
0x482: JUMPDEST 
0x483: V433 = ISZERO S0
0x484: V434 = 0x48c
0x487: JUMPI 0x48c V433
---
Entry stack: [V12, 0xd4, V200, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xd4, V200]

================================

Block 0x488
[0x488:0x48b]
---
Predecessors: [0x482]
Successors: []
---
0x488 PUSH1 0x0
0x48a DUP1
0x48b REVERT
---
0x488: V435 = 0x0
0x48b: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V200]

================================

Block 0x48c
[0x48c:0x496]
---
Predecessors: [0x482]
Successors: [0x582]
---
0x48c JUMPDEST
0x48d PUSH2 0x3dc
0x490 DUP2
0x491 PUSH1 0x1
0x493 PUSH2 0x582
0x496 JUMP
---
0x48c: JUMPDEST 
0x48d: V436 = 0x3dc
0x491: V437 = 0x1
0x493: V438 = 0x582
0x496: JUMP 0x582
---
Entry stack: [V12, 0xd4, V200]
Stack pops: 1
Stack additions: [S0, 0x3dc, S0, 0x1]
Exit stack: [V12, 0xd4, V200, 0x3dc, V200, 0x1]

================================

Block 0x497
[0x497:0x497]
---
Predecessors: []
Successors: [0x498]
---
0x497 JUMPDEST
---
0x497: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x498
[0x498:0x49a]
---
Predecessors: [0x497]
Successors: []
Has unresolved jump.
---
0x498 JUMPDEST
0x499 POP
0x49a JUMP
---
0x498: JUMPDEST 
0x49a: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x49b
[0x49b:0x4b7]
---
Predecessors: [0x248]
Successors: [0x4b8, 0x51c]
---
0x49b JUMPDEST
0x49c PUSH1 0x8
0x49e SLOAD
0x49f PUSH1 0x0
0x4a1 SWAP1
0x4a2 CALLER
0x4a3 PUSH1 0x1
0x4a5 PUSH1 0xa0
0x4a7 PUSH1 0x2
0x4a9 EXP
0x4aa SUB
0x4ab SWAP1
0x4ac DUP2
0x4ad AND
0x4ae SWAP2
0x4af AND
0x4b0 EQ
0x4b1 DUP1
0x4b2 ISZERO
0x4b3 SWAP1
0x4b4 PUSH2 0x51c
0x4b7 JUMPI
---
0x49b: JUMPDEST 
0x49c: V439 = 0x8
0x49e: V440 = S[0x8]
0x49f: V441 = 0x0
0x4a2: V442 = CALLER
0x4a3: V443 = 0x1
0x4a5: V444 = 0xa0
0x4a7: V445 = 0x2
0x4a9: V446 = EXP 0x2 0xa0
0x4aa: V447 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ad: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x4af: V449 = AND V440 0xffffffffffffffffffffffffffffffffffffffff
0x4b0: V450 = EQ V449 V448
0x4b2: V451 = ISZERO V450
0x4b4: V452 = 0x51c
0x4b7: JUMPI 0x51c V450
---
Entry stack: [V12, 0xd4, V220]
Stack pops: 0
Stack additions: [0x0, V451]
Exit stack: [V12, 0xd4, V220, 0x0, V451]

================================

Block 0x4b8
[0x4b8:0x4cb]
---
Predecessors: [0x49b]
Successors: [0x4cc]
---
0x4b8 POP
0x4b9 PUSH1 0x6
0x4bb SLOAD
0x4bc DUP3
0x4bd PUSH1 0x40
0x4bf MLOAD
0x4c0 DUP1
0x4c1 DUP3
0x4c2 DUP1
0x4c3 MLOAD
0x4c4 SWAP1
0x4c5 PUSH1 0x20
0x4c7 ADD
0x4c8 SWAP1
0x4c9 DUP1
0x4ca DUP4
0x4cb DUP4
---
0x4b9: V453 = 0x6
0x4bb: V454 = S[0x6]
0x4bd: V455 = 0x40
0x4bf: V456 = M[0x40]
0x4c3: V457 = M[V220]
0x4c5: V458 = 0x20
0x4c7: V459 = ADD 0x20 V220
---
Entry stack: [V12, 0xd4, V220, 0x0, V451]
Stack pops: 3
Stack additions: [S2, S1, V454, S2, V456, V456, V459, V457, V457, V456, V459]
Exit stack: [V12, 0xd4, V220, 0x0, V454, V220, V456, V456, V459, V457, V457, V456, V459]

================================

Block 0x4cc
[0x4cc:0x4d4]
---
Predecessors: [0x4b8, 0x4d9]
Successors: [0x4d5, 0x4ec]
---
0x4cc JUMPDEST
0x4cd PUSH1 0x20
0x4cf DUP4
0x4d0 LT
0x4d1 PUSH2 0x4ec
0x4d4 JUMPI
---
0x4cc: JUMPDEST 
0x4cd: V460 = 0x20
0x4d0: V461 = LT S2 0x20
0x4d1: V462 = 0x4ec
0x4d4: JUMPI 0x4ec V461
---
Entry stack: [V12, 0xd4, V220, 0x0, V454, V220, V456, V456, V459, V457, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xd4, V220, 0x0, V454, V220, V456, V456, V459, V457, S2, S1, S0]

================================

Block 0x4d5
[0x4d5:0x4d8]
---
Predecessors: [0x4cc]
Successors: [0x4d9]
---
0x4d5 DUP1
0x4d6 MLOAD
0x4d7 DUP3
0x4d8 MSTORE
---
0x4d6: V463 = M[S0]
0x4d8: M[S1] = V463
---
Entry stack: [V12, 0xd4, V220, 0x0, V454, V220, V456, V456, V459, V457, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xd4, V220, 0x0, V454, V220, V456, V456, V459, V457, S2, S1, S0]

================================

Block 0x4d9
[0x4d9:0x4eb]
---
Predecessors: [0x4d5]
Successors: [0x4cc]
---
0x4d9 JUMPDEST
0x4da PUSH1 0x1f
0x4dc NOT
0x4dd SWAP1
0x4de SWAP3
0x4df ADD
0x4e0 SWAP2
0x4e1 PUSH1 0x20
0x4e3 SWAP2
0x4e4 DUP3
0x4e5 ADD
0x4e6 SWAP2
0x4e7 ADD
0x4e8 PUSH2 0x4cc
0x4eb JUMP
---
0x4d9: JUMPDEST 
0x4da: V464 = 0x1f
0x4dc: V465 = NOT 0x1f
0x4df: V466 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x4e1: V467 = 0x20
0x4e5: V468 = ADD 0x20 S1
0x4e7: V469 = ADD 0x20 S0
0x4e8: V470 = 0x4cc
0x4eb: JUMP 0x4cc
---
Entry stack: [V12, 0xd4, V220, 0x0, V454, V220, V456, V456, V459, V457, S2, S1, S0]
Stack pops: 3
Stack additions: [V466, V468, V469]
Exit stack: [V12, 0xd4, V220, 0x0, V454, V220, V456, V456, V459, V457, V466, V468, V469]

================================

Block 0x4ec
[0x4ec:0x51b]
---
Predecessors: [0x4cc]
Successors: [0x51c]
---
0x4ec JUMPDEST
0x4ed PUSH1 0x1
0x4ef DUP4
0x4f0 PUSH1 0x20
0x4f2 SUB
0x4f3 PUSH2 0x100
0x4f6 EXP
0x4f7 SUB
0x4f8 DUP1
0x4f9 NOT
0x4fa DUP3
0x4fb MLOAD
0x4fc AND
0x4fd DUP2
0x4fe DUP5
0x4ff MLOAD
0x500 AND
0x501 OR
0x502 SWAP1
0x503 SWAP3
0x504 MSTORE
0x505 POP
0x506 POP
0x507 POP
0x508 SWAP2
0x509 SWAP1
0x50a SWAP2
0x50b ADD
0x50c SWAP3
0x50d POP
0x50e PUSH1 0x40
0x510 SWAP2
0x511 POP
0x512 POP
0x513 MLOAD
0x514 SWAP1
0x515 DUP2
0x516 SWAP1
0x517 SUB
0x518 SWAP1
0x519 SHA3
0x51a EQ
0x51b ISZERO
---
0x4ec: JUMPDEST 
0x4ed: V471 = 0x1
0x4f0: V472 = 0x20
0x4f2: V473 = SUB 0x20 S2
0x4f3: V474 = 0x100
0x4f6: V475 = EXP 0x100 V473
0x4f7: V476 = SUB V475 0x1
0x4f9: V477 = NOT V476
0x4fb: V478 = M[S0]
0x4fc: V479 = AND V478 V477
0x4ff: V480 = M[S1]
0x500: V481 = AND V480 V476
0x501: V482 = OR V481 V479
0x504: M[S1] = V482
0x50b: V483 = ADD V457 V456
0x50e: V484 = 0x40
0x513: V485 = M[0x40]
0x517: V486 = SUB V483 V485
0x519: V487 = SHA3 V485 V486
0x51a: V488 = EQ V487 V454
0x51b: V489 = ISZERO V488
---
Entry stack: [V12, 0xd4, V220, 0x0, V454, V220, V456, V456, V459, V457, S2, S1, S0]
Stack pops: 9
Stack additions: [V489]
Exit stack: [V12, 0xd4, V220, 0x0, V489]

================================

Block 0x51c
[0x51c:0x521]
---
Predecessors: [0x49b, 0x4ec]
Successors: [0x522, 0x526]
---
0x51c JUMPDEST
0x51d ISZERO
0x51e PUSH2 0x526
0x521 JUMPI
---
0x51c: JUMPDEST 
0x51d: V490 = ISZERO S0
0x51e: V491 = 0x526
0x521: JUMPI 0x526 V490
---
Entry stack: [V12, 0xd4, V220, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xd4, V220, 0x0]

================================

Block 0x522
[0x522:0x525]
---
Predecessors: [0x51c]
Successors: []
---
0x522 PUSH1 0x0
0x524 DUP1
0x525 REVERT
---
0x522: V492 = 0x0
0x525: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, V220, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V220, 0x0]

================================

Block 0x526
[0x526:0x569]
---
Predecessors: [0x51c]
Successors: [0x56a, 0x56e]
---
0x526 JUMPDEST
0x527 POP
0x528 PUSH1 0x1
0x52a DUP1
0x52b SLOAD
0x52c PUSH1 0x0
0x52e DUP3
0x52f SSTORE
0x530 PUSH1 0x5
0x532 DUP1
0x533 SLOAD
0x534 PUSH1 0xff
0x536 NOT
0x537 AND
0x538 SWAP1
0x539 SWAP3
0x53a OR
0x53b SWAP1
0x53c SWAP2
0x53d SSTORE
0x53e PUSH1 0x1
0x540 PUSH1 0xa0
0x542 PUSH1 0x2
0x544 EXP
0x545 SUB
0x546 CALLER
0x547 AND
0x548 DUP2
0x549 ISZERO
0x54a PUSH2 0x8fc
0x54d MUL
0x54e DUP3
0x54f PUSH1 0x40
0x551 MLOAD
0x552 PUSH1 0x0
0x554 PUSH1 0x40
0x556 MLOAD
0x557 DUP1
0x558 DUP4
0x559 SUB
0x55a DUP2
0x55b DUP6
0x55c DUP9
0x55d DUP9
0x55e CALL
0x55f SWAP4
0x560 POP
0x561 POP
0x562 POP
0x563 POP
0x564 ISZERO
0x565 ISZERO
0x566 PUSH2 0x56e
0x569 JUMPI
---
0x526: JUMPDEST 
0x528: V493 = 0x1
0x52b: V494 = S[0x1]
0x52c: V495 = 0x0
0x52f: S[0x1] = 0x0
0x530: V496 = 0x5
0x533: V497 = S[0x5]
0x534: V498 = 0xff
0x536: V499 = NOT 0xff
0x537: V500 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V497
0x53a: V501 = OR 0x1 V500
0x53d: S[0x5] = V501
0x53e: V502 = 0x1
0x540: V503 = 0xa0
0x542: V504 = 0x2
0x544: V505 = EXP 0x2 0xa0
0x545: V506 = SUB 0x10000000000000000000000000000000000000000 0x1
0x546: V507 = CALLER
0x547: V508 = AND V507 0xffffffffffffffffffffffffffffffffffffffff
0x549: V509 = ISZERO V494
0x54a: V510 = 0x8fc
0x54d: V511 = MUL 0x8fc V509
0x54f: V512 = 0x40
0x551: V513 = M[0x40]
0x552: V514 = 0x0
0x554: V515 = 0x40
0x556: V516 = M[0x40]
0x559: V517 = SUB V513 V516
0x55e: V518 = CALL V511 V508 V494 V516 V517 V516 0x0
0x564: V519 = ISZERO V518
0x565: V520 = ISZERO V519
0x566: V521 = 0x56e
0x569: JUMPI 0x56e V520
---
Entry stack: [V12, 0xd4, V220, 0x0]
Stack pops: 1
Stack additions: [V494]
Exit stack: [V12, 0xd4, V220, V494]

================================

Block 0x56a
[0x56a:0x56d]
---
Predecessors: [0x526]
Successors: []
---
0x56a PUSH1 0x0
0x56c DUP1
0x56d REVERT
---
0x56a: V522 = 0x0
0x56d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, V220, V494]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V220, V494]

================================

Block 0x56e
[0x56e:0x56e]
---
Predecessors: [0x526]
Successors: [0x56f]
---
0x56e JUMPDEST
---
0x56e: JUMPDEST 
---
Entry stack: [V12, 0xd4, V220, V494]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V220, V494]

================================

Block 0x56f
[0x56f:0x572]
---
Predecessors: [0x56e]
Successors: [0xd4]
---
0x56f JUMPDEST
0x570 POP
0x571 POP
0x572 JUMP
---
0x56f: JUMPDEST 
0x572: JUMP 0xd4
---
Entry stack: [V12, 0xd4, V220, V494]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x573
[0x573:0x581]
---
Predecessors: [0x29b]
Successors: [0x16a]
---
0x573 JUMPDEST
0x574 PUSH1 0xa
0x576 SLOAD
0x577 PUSH1 0x1
0x579 PUSH1 0xa0
0x57b PUSH1 0x2
0x57d EXP
0x57e SUB
0x57f AND
0x580 DUP2
0x581 JUMP
---
0x573: JUMPDEST 
0x574: V523 = 0xa
0x576: V524 = S[0xa]
0x577: V525 = 0x1
0x579: V526 = 0xa0
0x57b: V527 = 0x2
0x57d: V528 = EXP 0x2 0xa0
0x57e: V529 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57f: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff V524
0x581: JUMP 0x16a
---
Entry stack: [V12, 0x16a]
Stack pops: 1
Stack additions: [S0, V530]
Exit stack: [V12, 0x16a, V530]

================================

Block 0x582
[0x582:0x597]
---
Predecessors: [0x2ce, 0x48c]
Successors: [0x598, 0x5e4]
---
0x582 JUMPDEST
0x583 PUSH1 0x2
0x585 SLOAD
0x586 PUSH1 0x0
0x588 SWAP1
0x589 DUP2
0x58a SWAP1
0x58b DUP2
0x58c SWAP1
0x58d DUP2
0x58e SWAP1
0x58f PUSH1 0xff
0x591 AND
0x592 ISZERO
0x593 ISZERO
0x594 PUSH2 0x5e4
0x597 JUMPI
---
0x582: JUMPDEST 
0x583: V531 = 0x2
0x585: V532 = S[0x2]
0x586: V533 = 0x0
0x58f: V534 = 0xff
0x591: V535 = AND 0xff V532
0x592: V536 = ISZERO V535
0x593: V537 = ISZERO V536
0x594: V538 = 0x5e4
0x597: JUMPI 0x5e4 V537
---
Entry stack: [V12, S4, S3, {0x2d8, 0x3dc}, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, S4, S3, {0x2d8, 0x3dc}, S1, {0x0, 0x1}, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x598
[0x598:0x5da]
---
Predecessors: [0x582]
Successors: [0x5db, 0x5df]
---
0x598 PUSH1 0x1
0x59a PUSH1 0xa0
0x59c PUSH1 0x2
0x59e EXP
0x59f SUB
0x5a0 DUP7
0x5a1 AND
0x5a2 PUSH1 0x0
0x5a4 DUP2
0x5a5 DUP2
0x5a6 MSTORE
0x5a7 PUSH1 0x20
0x5a9 DUP2
0x5aa SWAP1
0x5ab MSTORE
0x5ac PUSH1 0x40
0x5ae DUP1
0x5af DUP3
0x5b0 SHA3
0x5b1 DUP1
0x5b2 SLOAD
0x5b3 SWAP3
0x5b4 SWAP1
0x5b5 SSTORE
0x5b6 SWAP1
0x5b7 SWAP6
0x5b8 POP
0x5b9 DUP6
0x5ba ISZERO
0x5bb PUSH2 0x8fc
0x5be MUL
0x5bf SWAP1
0x5c0 DUP7
0x5c1 SWAP1
0x5c2 MLOAD
0x5c3 PUSH1 0x0
0x5c5 PUSH1 0x40
0x5c7 MLOAD
0x5c8 DUP1
0x5c9 DUP4
0x5ca SUB
0x5cb DUP2
0x5cc DUP6
0x5cd DUP9
0x5ce DUP9
0x5cf CALL
0x5d0 SWAP4
0x5d1 POP
0x5d2 POP
0x5d3 POP
0x5d4 POP
0x5d5 ISZERO
0x5d6 ISZERO
0x5d7 PUSH2 0x5df
0x5da JUMPI
---
0x598: V539 = 0x1
0x59a: V540 = 0xa0
0x59c: V541 = 0x2
0x59e: V542 = EXP 0x2 0xa0
0x59f: V543 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a1: V544 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x5a2: V545 = 0x0
0x5a6: M[0x0] = V544
0x5a7: V546 = 0x20
0x5ab: M[0x20] = 0x0
0x5ac: V547 = 0x40
0x5b0: V548 = SHA3 0x0 0x40
0x5b2: V549 = S[V548]
0x5b5: S[V548] = 0x0
0x5ba: V550 = ISZERO V549
0x5bb: V551 = 0x8fc
0x5be: V552 = MUL 0x8fc V550
0x5c2: V553 = M[0x40]
0x5c3: V554 = 0x0
0x5c5: V555 = 0x40
0x5c7: V556 = M[0x40]
0x5ca: V557 = SUB V553 V556
0x5cf: V558 = CALL V552 V544 V549 V556 V557 V556 0x0
0x5d5: V559 = ISZERO V558
0x5d6: V560 = ISZERO V559
0x5d7: V561 = 0x5df
0x5da: JUMPI 0x5df V560
---
Entry stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, V549, S2, S1, S0]
Exit stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, V549, 0x0, 0x0, 0x0]

================================

Block 0x5db
[0x5db:0x5de]
---
Predecessors: [0x598]
Successors: []
---
0x5db PUSH1 0x0
0x5dd DUP1
0x5de REVERT
---
0x5db: V562 = 0x0
0x5de: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, V549, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, V549, 0x0, 0x0, 0x0]

================================

Block 0x5df
[0x5df:0x5e3]
---
Predecessors: [0x598]
Successors: [0x7de]
---
0x5df JUMPDEST
0x5e0 PUSH2 0x7de
0x5e3 JUMP
---
0x5df: JUMPDEST 
0x5e0: V563 = 0x7de
0x5e3: JUMP 0x7de
---
Entry stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, V549, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, V549, 0x0, 0x0, 0x0]

================================

Block 0x5e4
[0x5e4:0x638]
---
Predecessors: [0x582]
Successors: [0x639, 0x63d]
---
0x5e4 JUMPDEST
0x5e5 PUSH1 0xa
0x5e7 SLOAD
0x5e8 PUSH1 0x1
0x5ea PUSH1 0xa0
0x5ec PUSH1 0x2
0x5ee EXP
0x5ef SUB
0x5f0 AND
0x5f1 PUSH4 0x70a08231
0x5f6 ADDRESS
0x5f7 PUSH1 0x0
0x5f9 PUSH1 0x40
0x5fb MLOAD
0x5fc PUSH1 0x20
0x5fe ADD
0x5ff MSTORE
0x600 PUSH1 0x40
0x602 MLOAD
0x603 PUSH1 0xe0
0x605 PUSH1 0x2
0x607 EXP
0x608 PUSH4 0xffffffff
0x60d DUP5
0x60e AND
0x60f MUL
0x610 DUP2
0x611 MSTORE
0x612 PUSH1 0x1
0x614 PUSH1 0xa0
0x616 PUSH1 0x2
0x618 EXP
0x619 SUB
0x61a SWAP1
0x61b SWAP2
0x61c AND
0x61d PUSH1 0x4
0x61f DUP3
0x620 ADD
0x621 MSTORE
0x622 PUSH1 0x24
0x624 ADD
0x625 PUSH1 0x20
0x627 PUSH1 0x40
0x629 MLOAD
0x62a DUP1
0x62b DUP4
0x62c SUB
0x62d DUP2
0x62e PUSH1 0x0
0x630 DUP8
0x631 DUP1
0x632 EXTCODESIZE
0x633 ISZERO
0x634 ISZERO
0x635 PUSH2 0x63d
0x638 JUMPI
---
0x5e4: JUMPDEST 
0x5e5: V564 = 0xa
0x5e7: V565 = S[0xa]
0x5e8: V566 = 0x1
0x5ea: V567 = 0xa0
0x5ec: V568 = 0x2
0x5ee: V569 = EXP 0x2 0xa0
0x5ef: V570 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f0: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x5f1: V572 = 0x70a08231
0x5f6: V573 = ADDRESS
0x5f7: V574 = 0x0
0x5f9: V575 = 0x40
0x5fb: V576 = M[0x40]
0x5fc: V577 = 0x20
0x5fe: V578 = ADD 0x20 V576
0x5ff: M[V578] = 0x0
0x600: V579 = 0x40
0x602: V580 = M[0x40]
0x603: V581 = 0xe0
0x605: V582 = 0x2
0x607: V583 = EXP 0x2 0xe0
0x608: V584 = 0xffffffff
0x60e: V585 = AND 0x70a08231 0xffffffff
0x60f: V586 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x611: M[V580] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x612: V587 = 0x1
0x614: V588 = 0xa0
0x616: V589 = 0x2
0x618: V590 = EXP 0x2 0xa0
0x619: V591 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61c: V592 = AND V573 0xffffffffffffffffffffffffffffffffffffffff
0x61d: V593 = 0x4
0x620: V594 = ADD V580 0x4
0x621: M[V594] = V592
0x622: V595 = 0x24
0x624: V596 = ADD 0x24 V580
0x625: V597 = 0x20
0x627: V598 = 0x40
0x629: V599 = M[0x40]
0x62c: V600 = SUB V596 V599
0x62e: V601 = 0x0
0x632: V602 = EXTCODESIZE V571
0x633: V603 = ISZERO V602
0x634: V604 = ISZERO V603
0x635: V605 = 0x63d
0x638: JUMPI 0x63d V604
---
Entry stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V571, 0x70a08231, V596, 0x20, V599, V600, V599, 0x0, V571]
Exit stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, 0x0, 0x0, 0x0, V571, 0x70a08231, V596, 0x20, V599, V600, V599, 0x0, V571]

================================

Block 0x639
[0x639:0x63c]
---
Predecessors: [0x5e4]
Successors: []
---
0x639 PUSH1 0x0
0x63b DUP1
0x63c REVERT
---
0x639: V606 = 0x0
0x63c: REVERT 0x0 0x0
---
Entry stack: [V12, S17, S16, {0x2d8, 0x3dc}, S14, {0x0, 0x1}, 0x0, 0x0, 0x0, 0x0, V571, 0x70a08231, V596, 0x20, V599, V600, V599, 0x0, V571]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, {0x2d8, 0x3dc}, S14, {0x0, 0x1}, 0x0, 0x0, 0x0, 0x0, V571, 0x70a08231, V596, 0x20, V599, V600, V599, 0x0, V571]

================================

Block 0x63d
[0x63d:0x649]
---
Predecessors: [0x5e4]
Successors: [0x64a, 0x64e]
---
0x63d JUMPDEST
0x63e PUSH2 0x2c6
0x641 GAS
0x642 SUB
0x643 CALL
0x644 ISZERO
0x645 ISZERO
0x646 PUSH2 0x64e
0x649 JUMPI
---
0x63d: JUMPDEST 
0x63e: V607 = 0x2c6
0x641: V608 = GAS
0x642: V609 = SUB V608 0x2c6
0x643: V610 = CALL V609 V571 0x0 V599 V600 V599 0x20
0x644: V611 = ISZERO V610
0x645: V612 = ISZERO V611
0x646: V613 = 0x64e
0x649: JUMPI 0x64e V612
---
Entry stack: [V12, S17, S16, {0x2d8, 0x3dc}, S14, {0x0, 0x1}, 0x0, 0x0, 0x0, 0x0, V571, 0x70a08231, V596, 0x20, V599, V600, V599, 0x0, V571]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S17, S16, {0x2d8, 0x3dc}, S14, {0x0, 0x1}, 0x0, 0x0, 0x0, 0x0, V571, 0x70a08231, V596]

================================

Block 0x64a
[0x64a:0x64d]
---
Predecessors: [0x63d]
Successors: []
---
0x64a PUSH1 0x0
0x64c DUP1
0x64d REVERT
---
0x64a: V614 = 0x0
0x64d: REVERT 0x0 0x0
---
Entry stack: [V12, S11, S10, {0x2d8, 0x3dc}, S8, {0x0, 0x1}, 0x0, 0x0, 0x0, 0x0, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, {0x2d8, 0x3dc}, S8, {0x0, 0x1}, 0x0, 0x0, 0x0, 0x0, S2, 0x70a08231, S0]

================================

Block 0x64e
[0x64e:0x660]
---
Predecessors: [0x63d]
Successors: [0x661, 0x665]
---
0x64e JUMPDEST
0x64f POP
0x650 POP
0x651 POP
0x652 PUSH1 0x40
0x654 MLOAD
0x655 DUP1
0x656 MLOAD
0x657 SWAP4
0x658 POP
0x659 POP
0x65a DUP3
0x65b ISZERO
0x65c ISZERO
0x65d PUSH2 0x665
0x660 JUMPI
---
0x64e: JUMPDEST 
0x652: V615 = 0x40
0x654: V616 = M[0x40]
0x656: V617 = M[V616]
0x65b: V618 = ISZERO V617
0x65c: V619 = ISZERO V618
0x65d: V620 = 0x665
0x660: JUMPI 0x665 V619
---
Entry stack: [V12, S11, S10, {0x2d8, 0x3dc}, S8, {0x0, 0x1}, 0x0, 0x0, 0x0, 0x0, S2, 0x70a08231, S0]
Stack pops: 6
Stack additions: [V617, S4, S3]
Exit stack: [V12, S11, S10, {0x2d8, 0x3dc}, S8, {0x0, 0x1}, 0x0, V617, 0x0, 0x0]

================================

Block 0x661
[0x661:0x664]
---
Predecessors: [0x64e]
Successors: []
---
0x661 PUSH1 0x0
0x663 DUP1
0x664 REVERT
---
0x661: V621 = 0x0
0x664: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, V617, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, V617, 0x0, 0x0]

================================

Block 0x665
[0x665:0x68a]
---
Predecessors: [0x64e]
Successors: [0x68b, 0x68c]
---
0x665 JUMPDEST
0x666 PUSH1 0x4
0x668 SLOAD
0x669 PUSH1 0x1
0x66b PUSH1 0xa0
0x66d PUSH1 0x2
0x66f EXP
0x670 SUB
0x671 DUP8
0x672 AND
0x673 PUSH1 0x0
0x675 SWAP1
0x676 DUP2
0x677 MSTORE
0x678 PUSH1 0x20
0x67a DUP2
0x67b SWAP1
0x67c MSTORE
0x67d PUSH1 0x40
0x67f SWAP1
0x680 SHA3
0x681 SLOAD
0x682 DUP5
0x683 MUL
0x684 DUP2
0x685 ISZERO
0x686 ISZERO
0x687 PUSH2 0x68c
0x68a JUMPI
---
0x665: JUMPDEST 
0x666: V622 = 0x4
0x668: V623 = S[0x4]
0x669: V624 = 0x1
0x66b: V625 = 0xa0
0x66d: V626 = 0x2
0x66f: V627 = EXP 0x2 0xa0
0x670: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x672: V629 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x673: V630 = 0x0
0x677: M[0x0] = V629
0x678: V631 = 0x20
0x67c: M[0x20] = 0x0
0x67d: V632 = 0x40
0x680: V633 = SHA3 0x0 0x40
0x681: V634 = S[V633]
0x683: V635 = MUL V617 V634
0x685: V636 = ISZERO V623
0x686: V637 = ISZERO V636
0x687: V638 = 0x68c
0x68a: JUMPI 0x68c V637
---
Entry stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, V617, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V623, V635]
Exit stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, V617, 0x0, 0x0, V623, V635]

================================

Block 0x68b
[0x68b:0x68b]
---
Predecessors: [0x665]
Successors: []
---
0x68b INVALID
---
0x68b: INVALID 
---
Entry stack: [V12, S10, S9, {0x2d8, 0x3dc}, S7, {0x0, 0x1}, 0x0, S4, 0x0, 0x0, V623, V635]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, {0x2d8, 0x3dc}, S7, {0x0, 0x1}, 0x0, S4, 0x0, 0x0, V623, V635]

================================

Block 0x68c
[0x68c:0x6c0]
---
Predecessors: [0x665]
Successors: [0x6c1, 0x756]
---
0x68c JUMPDEST
0x68d PUSH1 0x1
0x68f PUSH1 0xa0
0x691 PUSH1 0x2
0x693 EXP
0x694 SUB
0x695 DUP9
0x696 AND
0x697 PUSH1 0x0
0x699 SWAP1
0x69a DUP2
0x69b MSTORE
0x69c PUSH1 0x20
0x69e DUP2
0x69f SWAP1
0x6a0 MSTORE
0x6a1 PUSH1 0x40
0x6a3 DUP2
0x6a4 SHA3
0x6a5 DUP1
0x6a6 SLOAD
0x6a7 PUSH1 0x4
0x6a9 DUP1
0x6aa SLOAD
0x6ab SWAP2
0x6ac SWAP1
0x6ad SWAP2
0x6ae SUB
0x6af SWAP1
0x6b0 SSTORE
0x6b1 DUP2
0x6b2 SWAP1
0x6b3 SSTORE
0x6b4 SWAP2
0x6b5 SWAP1
0x6b6 DIV
0x6b7 SWAP3
0x6b8 POP
0x6b9 SWAP1
0x6ba POP
0x6bb DUP5
0x6bc ISZERO
0x6bd PUSH2 0x756
0x6c0 JUMPI
---
0x68c: JUMPDEST 
0x68d: V639 = 0x1
0x68f: V640 = 0xa0
0x691: V641 = 0x2
0x693: V642 = EXP 0x2 0xa0
0x694: V643 = SUB 0x10000000000000000000000000000000000000000 0x1
0x696: V644 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0x697: V645 = 0x0
0x69b: M[0x0] = V644
0x69c: V646 = 0x20
0x6a0: M[0x20] = 0x0
0x6a1: V647 = 0x40
0x6a4: V648 = SHA3 0x0 0x40
0x6a6: V649 = S[V648]
0x6a7: V650 = 0x4
0x6aa: V651 = S[0x4]
0x6ae: V652 = SUB V651 V649
0x6b0: S[0x4] = V652
0x6b3: S[V648] = 0x0
0x6b6: V653 = DIV V635 V623
0x6bc: V654 = ISZERO {0x0, 0x1}
0x6bd: V655 = 0x756
0x6c0: JUMPI 0x756 V654
---
Entry stack: [V12, S10, S9, {0x2d8, 0x3dc}, S7, {0x0, 0x1}, 0x0, S4, 0x0, 0x0, V623, V635]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, V653, 0x0]
Exit stack: [V12, S10, S9, {0x2d8, 0x3dc}, S7, {0x0, 0x1}, 0x0, S4, V653, 0x0]

================================

Block 0x6c1
[0x6c1:0x6c3]
---
Predecessors: [0x68c]
Successors: [0x6c4]
---
0x6c1 PUSH1 0x64
0x6c3 DUP3
---
0x6c1: V656 = 0x64
---
Entry stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, S2, V653, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x64, S1]
Exit stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, S2, V653, 0x0, 0x64, V653]

================================

Block 0x6c4
[0x6c4:0x72b]
---
Predecessors: [0x6c1]
Successors: [0x72c, 0x730]
---
0x6c4 JUMPDEST
0x6c5 PUSH1 0xa
0x6c7 SLOAD
0x6c8 PUSH1 0x8
0x6ca SLOAD
0x6cb SWAP3
0x6cc SWAP1
0x6cd SWAP2
0x6ce DIV
0x6cf SWAP3
0x6d0 POP
0x6d1 PUSH1 0x1
0x6d3 PUSH1 0xa0
0x6d5 PUSH1 0x2
0x6d7 EXP
0x6d8 SUB
0x6d9 SWAP1
0x6da DUP2
0x6db AND
0x6dc SWAP2
0x6dd PUSH4 0xa9059cbb
0x6e2 SWAP2
0x6e3 AND
0x6e4 DUP4
0x6e5 PUSH1 0x0
0x6e7 PUSH1 0x40
0x6e9 MLOAD
0x6ea PUSH1 0x20
0x6ec ADD
0x6ed MSTORE
0x6ee PUSH1 0x40
0x6f0 MLOAD
0x6f1 PUSH1 0xe0
0x6f3 PUSH1 0x2
0x6f5 EXP
0x6f6 PUSH4 0xffffffff
0x6fb DUP6
0x6fc AND
0x6fd MUL
0x6fe DUP2
0x6ff MSTORE
0x700 PUSH1 0x1
0x702 PUSH1 0xa0
0x704 PUSH1 0x2
0x706 EXP
0x707 SUB
0x708 SWAP1
0x709 SWAP3
0x70a AND
0x70b PUSH1 0x4
0x70d DUP4
0x70e ADD
0x70f MSTORE
0x710 PUSH1 0x24
0x712 DUP3
0x713 ADD
0x714 MSTORE
0x715 PUSH1 0x44
0x717 ADD
0x718 PUSH1 0x20
0x71a PUSH1 0x40
0x71c MLOAD
0x71d DUP1
0x71e DUP4
0x71f SUB
0x720 DUP2
0x721 PUSH1 0x0
0x723 DUP8
0x724 DUP1
0x725 EXTCODESIZE
0x726 ISZERO
0x727 ISZERO
0x728 PUSH2 0x730
0x72b JUMPI
---
0x6c4: JUMPDEST 
0x6c5: V657 = 0xa
0x6c7: V658 = S[0xa]
0x6c8: V659 = 0x8
0x6ca: V660 = S[0x8]
0x6ce: V661 = DIV S0 0x64
0x6d1: V662 = 0x1
0x6d3: V663 = 0xa0
0x6d5: V664 = 0x2
0x6d7: V665 = EXP 0x2 0xa0
0x6d8: V666 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6db: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V658
0x6dd: V668 = 0xa9059cbb
0x6e3: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff V660
0x6e5: V670 = 0x0
0x6e7: V671 = 0x40
0x6e9: V672 = M[0x40]
0x6ea: V673 = 0x20
0x6ec: V674 = ADD 0x20 V672
0x6ed: M[V674] = 0x0
0x6ee: V675 = 0x40
0x6f0: V676 = M[0x40]
0x6f1: V677 = 0xe0
0x6f3: V678 = 0x2
0x6f5: V679 = EXP 0x2 0xe0
0x6f6: V680 = 0xffffffff
0x6fc: V681 = AND 0xa9059cbb 0xffffffff
0x6fd: V682 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x6ff: M[V676] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x700: V683 = 0x1
0x702: V684 = 0xa0
0x704: V685 = 0x2
0x706: V686 = EXP 0x2 0xa0
0x707: V687 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70a: V688 = AND V669 0xffffffffffffffffffffffffffffffffffffffff
0x70b: V689 = 0x4
0x70e: V690 = ADD V676 0x4
0x70f: M[V690] = V688
0x710: V691 = 0x24
0x713: V692 = ADD V676 0x24
0x714: M[V692] = V661
0x715: V693 = 0x44
0x717: V694 = ADD 0x44 V676
0x718: V695 = 0x20
0x71a: V696 = 0x40
0x71c: V697 = M[0x40]
0x71f: V698 = SUB V694 V697
0x721: V699 = 0x0
0x725: V700 = EXTCODESIZE V667
0x726: V701 = ISZERO V700
0x727: V702 = ISZERO V701
0x728: V703 = 0x730
0x72b: JUMPI 0x730 V702
---
Entry stack: [V12, S10, S9, {0x2d8, 0x3dc}, S7, {0x0, 0x1}, 0x0, S4, S3, 0x0, 0x64, S0]
Stack pops: 3
Stack additions: [V661, V667, 0xa9059cbb, V694, 0x20, V697, V698, V697, 0x0, V667]
Exit stack: [V12, S10, S9, {0x2d8, 0x3dc}, S7, {0x0, 0x1}, 0x0, S4, S3, V661, V667, 0xa9059cbb, V694, 0x20, V697, V698, V697, 0x0, V667]

================================

Block 0x72c
[0x72c:0x72f]
---
Predecessors: [0x6c4]
Successors: []
---
0x72c PUSH1 0x0
0x72e DUP1
0x72f REVERT
---
0x72c: V704 = 0x0
0x72f: REVERT 0x0 0x0
---
Entry stack: [V12, S17, S16, {0x2d8, 0x3dc}, S14, {0x0, 0x1}, 0x0, S11, S10, V661, V667, 0xa9059cbb, V694, 0x20, V697, V698, V697, 0x0, V667]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, {0x2d8, 0x3dc}, S14, {0x0, 0x1}, 0x0, S11, S10, V661, V667, 0xa9059cbb, V694, 0x20, V697, V698, V697, 0x0, V667]

================================

Block 0x730
[0x730:0x73c]
---
Predecessors: [0x6c4]
Successors: [0x73d, 0x741]
---
0x730 JUMPDEST
0x731 PUSH2 0x2c6
0x734 GAS
0x735 SUB
0x736 CALL
0x737 ISZERO
0x738 ISZERO
0x739 PUSH2 0x741
0x73c JUMPI
---
0x730: JUMPDEST 
0x731: V705 = 0x2c6
0x734: V706 = GAS
0x735: V707 = SUB V706 0x2c6
0x736: V708 = CALL V707 V667 0x0 V697 V698 V697 0x20
0x737: V709 = ISZERO V708
0x738: V710 = ISZERO V709
0x739: V711 = 0x741
0x73c: JUMPI 0x741 V710
---
Entry stack: [V12, S17, S16, {0x2d8, 0x3dc}, S14, {0x0, 0x1}, 0x0, S11, S10, V661, V667, 0xa9059cbb, V694, 0x20, V697, V698, V697, 0x0, V667]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S17, S16, {0x2d8, 0x3dc}, S14, {0x0, 0x1}, 0x0, S11, S10, V661, V667, 0xa9059cbb, V694]

================================

Block 0x73d
[0x73d:0x740]
---
Predecessors: [0x730]
Successors: []
---
0x73d PUSH1 0x0
0x73f DUP1
0x740 REVERT
---
0x73d: V712 = 0x0
0x740: REVERT 0x0 0x0
---
Entry stack: [V12, S11, S10, {0x2d8, 0x3dc}, S8, {0x0, 0x1}, 0x0, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, {0x2d8, 0x3dc}, S8, {0x0, 0x1}, 0x0, S5, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0x741
[0x741:0x751]
---
Predecessors: [0x730]
Successors: [0x752, 0x756]
---
0x741 JUMPDEST
0x742 POP
0x743 POP
0x744 POP
0x745 PUSH1 0x40
0x747 MLOAD
0x748 DUP1
0x749 MLOAD
0x74a SWAP1
0x74b POP
0x74c ISZERO
0x74d ISZERO
0x74e PUSH2 0x756
0x751 JUMPI
---
0x741: JUMPDEST 
0x745: V713 = 0x40
0x747: V714 = M[0x40]
0x749: V715 = M[V714]
0x74c: V716 = ISZERO V715
0x74d: V717 = ISZERO V716
0x74e: V718 = 0x756
0x751: JUMPI 0x756 V717
---
Entry stack: [V12, S11, S10, {0x2d8, 0x3dc}, S8, {0x0, 0x1}, 0x0, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S11, S10, {0x2d8, 0x3dc}, S8, {0x0, 0x1}, 0x0, S5, S4, S3]

================================

Block 0x752
[0x752:0x755]
---
Predecessors: [0x741]
Successors: []
---
0x752 PUSH1 0x0
0x754 DUP1
0x755 REVERT
---
0x752: V719 = 0x0
0x755: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, S2, S1, S0]

================================

Block 0x756
[0x756:0x756]
---
Predecessors: [0x68c, 0x741]
Successors: [0x757]
---
0x756 JUMPDEST
---
0x756: JUMPDEST 
---
Entry stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, S2, S1, S0]

================================

Block 0x757
[0x757:0x7b3]
---
Predecessors: [0x756]
Successors: [0x7b4, 0x7b8]
---
0x757 JUMPDEST
0x758 PUSH1 0xa
0x75a SLOAD
0x75b PUSH1 0x1
0x75d PUSH1 0xa0
0x75f PUSH1 0x2
0x761 EXP
0x762 SUB
0x763 AND
0x764 PUSH4 0xa9059cbb
0x769 DUP8
0x76a DUP4
0x76b DUP6
0x76c SUB
0x76d PUSH1 0x0
0x76f PUSH1 0x40
0x771 MLOAD
0x772 PUSH1 0x20
0x774 ADD
0x775 MSTORE
0x776 PUSH1 0x40
0x778 MLOAD
0x779 PUSH1 0xe0
0x77b PUSH1 0x2
0x77d EXP
0x77e PUSH4 0xffffffff
0x783 DUP6
0x784 AND
0x785 MUL
0x786 DUP2
0x787 MSTORE
0x788 PUSH1 0x1
0x78a PUSH1 0xa0
0x78c PUSH1 0x2
0x78e EXP
0x78f SUB
0x790 SWAP1
0x791 SWAP3
0x792 AND
0x793 PUSH1 0x4
0x795 DUP4
0x796 ADD
0x797 MSTORE
0x798 PUSH1 0x24
0x79a DUP3
0x79b ADD
0x79c MSTORE
0x79d PUSH1 0x44
0x79f ADD
0x7a0 PUSH1 0x20
0x7a2 PUSH1 0x40
0x7a4 MLOAD
0x7a5 DUP1
0x7a6 DUP4
0x7a7 SUB
0x7a8 DUP2
0x7a9 PUSH1 0x0
0x7ab DUP8
0x7ac DUP1
0x7ad EXTCODESIZE
0x7ae ISZERO
0x7af ISZERO
0x7b0 PUSH2 0x7b8
0x7b3 JUMPI
---
0x757: JUMPDEST 
0x758: V720 = 0xa
0x75a: V721 = S[0xa]
0x75b: V722 = 0x1
0x75d: V723 = 0xa0
0x75f: V724 = 0x2
0x761: V725 = EXP 0x2 0xa0
0x762: V726 = SUB 0x10000000000000000000000000000000000000000 0x1
0x763: V727 = AND 0xffffffffffffffffffffffffffffffffffffffff V721
0x764: V728 = 0xa9059cbb
0x76c: V729 = SUB S1 S0
0x76d: V730 = 0x0
0x76f: V731 = 0x40
0x771: V732 = M[0x40]
0x772: V733 = 0x20
0x774: V734 = ADD 0x20 V732
0x775: M[V734] = 0x0
0x776: V735 = 0x40
0x778: V736 = M[0x40]
0x779: V737 = 0xe0
0x77b: V738 = 0x2
0x77d: V739 = EXP 0x2 0xe0
0x77e: V740 = 0xffffffff
0x784: V741 = AND 0xa9059cbb 0xffffffff
0x785: V742 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x787: M[V736] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x788: V743 = 0x1
0x78a: V744 = 0xa0
0x78c: V745 = 0x2
0x78e: V746 = EXP 0x2 0xa0
0x78f: V747 = SUB 0x10000000000000000000000000000000000000000 0x1
0x792: V748 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x793: V749 = 0x4
0x796: V750 = ADD V736 0x4
0x797: M[V750] = V748
0x798: V751 = 0x24
0x79b: V752 = ADD V736 0x24
0x79c: M[V752] = V729
0x79d: V753 = 0x44
0x79f: V754 = ADD 0x44 V736
0x7a0: V755 = 0x20
0x7a2: V756 = 0x40
0x7a4: V757 = M[0x40]
0x7a7: V758 = SUB V754 V757
0x7a9: V759 = 0x0
0x7ad: V760 = EXTCODESIZE V727
0x7ae: V761 = ISZERO V760
0x7af: V762 = ISZERO V761
0x7b0: V763 = 0x7b8
0x7b3: JUMPI 0x7b8 V762
---
Entry stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V727, 0xa9059cbb, V754, 0x20, V757, V758, V757, 0x0, V727]
Exit stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, S2, S1, S0, V727, 0xa9059cbb, V754, 0x20, V757, V758, V757, 0x0, V727]

================================

Block 0x7b4
[0x7b4:0x7b7]
---
Predecessors: [0x757]
Successors: []
---
0x7b4 PUSH1 0x0
0x7b6 DUP1
0x7b7 REVERT
---
0x7b4: V764 = 0x0
0x7b7: REVERT 0x0 0x0
---
Entry stack: [V12, S17, S16, {0x2d8, 0x3dc}, S14, {0x0, 0x1}, 0x0, S11, S10, S9, V727, 0xa9059cbb, V754, 0x20, V757, V758, V757, 0x0, V727]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, {0x2d8, 0x3dc}, S14, {0x0, 0x1}, 0x0, S11, S10, S9, V727, 0xa9059cbb, V754, 0x20, V757, V758, V757, 0x0, V727]

================================

Block 0x7b8
[0x7b8:0x7c4]
---
Predecessors: [0x757]
Successors: [0x7c5, 0x7c9]
---
0x7b8 JUMPDEST
0x7b9 PUSH2 0x2c6
0x7bc GAS
0x7bd SUB
0x7be CALL
0x7bf ISZERO
0x7c0 ISZERO
0x7c1 PUSH2 0x7c9
0x7c4 JUMPI
---
0x7b8: JUMPDEST 
0x7b9: V765 = 0x2c6
0x7bc: V766 = GAS
0x7bd: V767 = SUB V766 0x2c6
0x7be: V768 = CALL V767 V727 0x0 V757 V758 V757 0x20
0x7bf: V769 = ISZERO V768
0x7c0: V770 = ISZERO V769
0x7c1: V771 = 0x7c9
0x7c4: JUMPI 0x7c9 V770
---
Entry stack: [V12, S17, S16, {0x2d8, 0x3dc}, S14, {0x0, 0x1}, 0x0, S11, S10, S9, V727, 0xa9059cbb, V754, 0x20, V757, V758, V757, 0x0, V727]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S17, S16, {0x2d8, 0x3dc}, S14, {0x0, 0x1}, 0x0, S11, S10, S9, V727, 0xa9059cbb, V754]

================================

Block 0x7c5
[0x7c5:0x7c8]
---
Predecessors: [0x7b8]
Successors: []
---
0x7c5 PUSH1 0x0
0x7c7 DUP1
0x7c8 REVERT
---
0x7c5: V772 = 0x0
0x7c8: REVERT 0x0 0x0
---
Entry stack: [V12, S11, S10, {0x2d8, 0x3dc}, S8, {0x0, 0x1}, 0x0, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, {0x2d8, 0x3dc}, S8, {0x0, 0x1}, 0x0, S5, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0x7c9
[0x7c9:0x7d9]
---
Predecessors: [0x7b8]
Successors: [0x7da, 0x7de]
---
0x7c9 JUMPDEST
0x7ca POP
0x7cb POP
0x7cc POP
0x7cd PUSH1 0x40
0x7cf MLOAD
0x7d0 DUP1
0x7d1 MLOAD
0x7d2 SWAP1
0x7d3 POP
0x7d4 ISZERO
0x7d5 ISZERO
0x7d6 PUSH2 0x7de
0x7d9 JUMPI
---
0x7c9: JUMPDEST 
0x7cd: V773 = 0x40
0x7cf: V774 = M[0x40]
0x7d1: V775 = M[V774]
0x7d4: V776 = ISZERO V775
0x7d5: V777 = ISZERO V776
0x7d6: V778 = 0x7de
0x7d9: JUMPI 0x7de V777
---
Entry stack: [V12, S11, S10, {0x2d8, 0x3dc}, S8, {0x0, 0x1}, 0x0, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S11, S10, {0x2d8, 0x3dc}, S8, {0x0, 0x1}, 0x0, S5, S4, S3]

================================

Block 0x7da
[0x7da:0x7dd]
---
Predecessors: [0x7c9]
Successors: []
---
0x7da PUSH1 0x0
0x7dc DUP1
0x7dd REVERT
---
0x7da: V779 = 0x0
0x7dd: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, 0x0, S2, S1, S0]

================================

Block 0x7de
[0x7de:0x7de]
---
Predecessors: [0x5df, 0x7c9]
Successors: [0x7df]
---
0x7de JUMPDEST
---
0x7de: JUMPDEST 
---
Entry stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, S3, S2, S1, S0]

================================

Block 0x7df
[0x7df:0x7df]
---
Predecessors: [0x7de]
Successors: [0x7e0]
---
0x7df JUMPDEST
---
0x7df: JUMPDEST 
---
Entry stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, S3, S2, S1, S0]

================================

Block 0x7e0
[0x7e0:0x7e7]
---
Predecessors: [0x7df]
Successors: [0x2d8, 0x3dc]
---
0x7e0 JUMPDEST
0x7e1 POP
0x7e2 POP
0x7e3 POP
0x7e4 POP
0x7e5 POP
0x7e6 POP
0x7e7 JUMP
---
0x7e0: JUMPDEST 
0x7e7: JUMP {0x2d8, 0x3dc}
---
Entry stack: [V12, S8, S7, {0x2d8, 0x3dc}, S5, {0x0, 0x1}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V12, S8, S7]

================================

Block 0x7e8
[0x7e8:0x819]
---
Predecessors: []
Successors: []
---
0x7e8 STOP
0x7e9 LOG1
0x7ea PUSH6 0x627a7a723058
0x7f1 SHA3
0x7f2 PUSH18 0xa1f473b4f2089715440331b40344eb08da0e
0x805 MISSING 0xfb
0x806 CREATE
0x807 MISSING 0x46
0x808 MISSING 0x1f
0x809 LOG4
0x80a ADDRESS
0x80b GASPRICE
0x80c PUSH13 0x4332b852240029
---
0x7e8: STOP 
0x7e9: LOG S0 S1 S2
0x7ea: V780 = 0x627a7a723058
0x7f1: V781 = SHA3 0x627a7a723058 S3
0x7f2: V782 = 0xa1f473b4f2089715440331b40344eb08da0e
0x805: MISSING 0xfb
0x806: V783 = CREATE S0 S1 S2
0x807: MISSING 0x46
0x808: MISSING 0x1f
0x809: LOG S0 S1 S2 S3 S4 S5
0x80a: V784 = ADDRESS
0x80b: V785 = GASPRICE
0x80c: V786 = 0x4332b852240029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xa1f473b4f2089715440331b40344eb08da0e, V781, V783, 0x4332b852240029, V785, V784]
Exit stack: []

================================

Function 0:
Public function signature: 0x2f58015
Entry block: 0xd6
Exit block: 0x3d8
Body: 0xd4, 0xd6, 0xdd, 0xe1, 0x31f, 0x32e, 0x332, 0x33d, 0x341, 0x34d, 0x351, 0x3a7, 0x3ab, 0x3d8, 0x3dc, 0x3dd

Function 1:
Public function signature: 0x27e235e3
Entry block: 0xeb
Exit block: 0x10a
Body: 0xeb, 0xf2, 0xf6, 0x10a, 0x3e0

Function 2:
Public function signature: 0x5259347d
Entry block: 0x11c
Exit block: 0xd4
Body: 0xd4, 0x11c

Function 3:
Public function signature: 0x62f5ed61
Entry block: 0x126
Exit block: 0xd4
Body: 0xd4, 0x126, 0x3f2, 0x409, 0x40d, 0x419, 0x41d, 0x429, 0x42d, 0x436

Function 4:
Public function signature: 0x6360fc3f
Entry block: 0x130
Exit block: 0x143
Body: 0x130, 0x137, 0x13b, 0x143, 0x438

Function 5:
Public function signature: 0x6ad1fe02
Entry block: 0x157
Exit block: 0x16a
Body: 0x157, 0x15e, 0x162, 0x16a, 0x441

Function 6:
Public function signature: 0x943dfef1
Entry block: 0x186
Exit block: 0x10a
Body: 0x10a, 0x186, 0x18d, 0x191, 0x450

Function 7:
Public function signature: 0xa089feea
Entry block: 0x1ab
Exit block: 0x143
Body: 0x143, 0x1ab, 0x1b2, 0x1b6, 0x456

Function 8:
Public function signature: 0xc3dac9a1
Entry block: 0x1d2
Exit block: 0x10a
Body: 0x10a, 0x1d2, 0x1d9, 0x1dd, 0x45f

Function 9:
Public function signature: 0xc42bb1e4
Entry block: 0x1f7
Exit block: 0x10a
Body: 0x10a, 0x1f7, 0x1fe, 0x202, 0x465

Function 10:
Public function signature: 0xd2c03c01
Entry block: 0x21c
Exit block: 0xd4
Body: 0xd4, 0x21c, 0x223, 0x227, 0x3dc, 0x3dd, 0x46b, 0x478, 0x482, 0x488, 0x48c

Function 11:
Public function signature: 0xd4701c35
Entry block: 0x23d
Exit block: 0xd4
Body: 0xd4, 0x23d, 0x244, 0x248, 0x49b, 0x4b8, 0x4cc, 0x4d5, 0x4d9, 0x4ec, 0x51c, 0x522, 0x526, 0x56a, 0x56e, 0x56f

Function 12:
Public function signature: 0xfc0c546a
Entry block: 0x290
Exit block: 0x16a
Body: 0x16a, 0x290, 0x297, 0x29b, 0x573

Function 13:
Public fallback function
Entry block: 0xa9
Exit block: 0xd4
Body: 0xa9, 0xad, 0xc5, 0xc9, 0xd1, 0xd2, 0xd4

Function 14:
Private function
Entry block: 0x582
Exit block: 0x7e0
Body: 0x582, 0x598, 0x5df, 0x5e4, 0x63d, 0x64e, 0x665, 0x68c, 0x6c1, 0x6c4, 0x730, 0x741, 0x756, 0x757, 0x7b8, 0x7c9, 0x7de, 0x7df, 0x7e0

Function 15:
Private function
Entry block: 0x2bf
Exit block: 0x31d
Body: 0x2bf, 0x2ce, 0x2d8, 0x2dd, 0x2ed, 0x2fd, 0x31c, 0x31d

