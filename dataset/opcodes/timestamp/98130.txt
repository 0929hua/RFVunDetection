Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xed]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xed
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xed
0xa: JUMPI 0xed V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3c]
---
Predecessors: [0x0]
Successors: [0x3d, 0x3f6]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH3 0xe5fc5f
0x37 DUP2
0x38 EQ
0x39 PUSH2 0x3f6
0x3c JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0xe5fc5f
0x38: V12 = EQ V10 0xe5fc5f
0x39: V13 = 0x3f6
0x3c: JUMPI 0x3f6 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0xb]
Successors: [0x48, 0x424]
---
0x3d DUP1
0x3e PUSH4 0x13af4035
0x43 EQ
0x44 PUSH2 0x424
0x47 JUMPI
---
0x3e: V14 = 0x13af4035
0x43: V15 = EQ 0x13af4035 V10
0x44: V16 = 0x424
0x47: JUMPI 0x424 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x442]
---
0x48 DUP1
0x49 PUSH4 0x2d2fe9d4
0x4e EQ
0x4f PUSH2 0x442
0x52 JUMPI
---
0x49: V17 = 0x2d2fe9d4
0x4e: V18 = EQ 0x2d2fe9d4 V10
0x4f: V19 = 0x442
0x52: JUMPI 0x442 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x469]
---
0x53 DUP1
0x54 PUSH4 0x6113611f
0x59 EQ
0x5a PUSH2 0x469
0x5d JUMPI
---
0x54: V20 = 0x6113611f
0x59: V21 = EQ 0x6113611f V10
0x5a: V22 = 0x469
0x5d: JUMPI 0x469 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x490]
---
0x5e DUP1
0x5f PUSH4 0x64e08644
0x64 EQ
0x65 PUSH2 0x490
0x68 JUMPI
---
0x5f: V23 = 0x64e08644
0x64: V24 = EQ 0x64e08644 V10
0x65: V25 = 0x490
0x68: JUMPI 0x490 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x4b7]
---
0x69 DUP1
0x6a PUSH4 0x8da5cb5b
0x6f EQ
0x70 PUSH2 0x4b7
0x73 JUMPI
---
0x6a: V26 = 0x8da5cb5b
0x6f: V27 = EQ 0x8da5cb5b V10
0x70: V28 = 0x4b7
0x73: JUMPI 0x4b7 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x4e3]
---
0x74 DUP1
0x75 PUSH4 0x8fe92aed
0x7a EQ
0x7b PUSH2 0x4e3
0x7e JUMPI
---
0x75: V29 = 0x8fe92aed
0x7a: V30 = EQ 0x8fe92aed V10
0x7b: V31 = 0x4e3
0x7e: JUMPI 0x4e3 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x511]
---
0x7f DUP1
0x80 PUSH4 0x90fe5609
0x85 EQ
0x86 PUSH2 0x511
0x89 JUMPI
---
0x80: V32 = 0x90fe5609
0x85: V33 = EQ 0x90fe5609 V10
0x86: V34 = 0x511
0x89: JUMPI 0x511 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x529]
---
0x8a DUP1
0x8b PUSH4 0xa201d102
0x90 EQ
0x91 PUSH2 0x529
0x94 JUMPI
---
0x8b: V35 = 0xa201d102
0x90: V36 = EQ 0xa201d102 V10
0x91: V37 = 0x529
0x94: JUMPI 0x529 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x54b]
---
0x95 DUP1
0x96 PUSH4 0xa4659ba2
0x9b EQ
0x9c PUSH2 0x54b
0x9f JUMPI
---
0x96: V38 = 0xa4659ba2
0x9b: V39 = EQ 0xa4659ba2 V10
0x9c: V40 = 0x54b
0x9f: JUMPI 0x54b V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x572]
---
0xa0 DUP1
0xa1 PUSH4 0xc19d93fb
0xa6 EQ
0xa7 PUSH2 0x572
0xaa JUMPI
---
0xa1: V41 = 0xc19d93fb
0xa6: V42 = EQ 0xc19d93fb V10
0xa7: V43 = 0x572
0xaa: JUMPI 0x572 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x602]
---
0xab DUP1
0xac PUSH4 0xc2a15e7e
0xb1 EQ
0xb2 PUSH2 0x602
0xb5 JUMPI
---
0xac: V44 = 0xc2a15e7e
0xb1: V45 = EQ 0xc2a15e7e V10
0xb2: V46 = 0x602
0xb5: JUMPI 0x602 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x632]
---
0xb6 DUP1
0xb7 PUSH4 0xc8dda301
0xbc EQ
0xbd PUSH2 0x632
0xc0 JUMPI
---
0xb7: V47 = 0xc8dda301
0xbc: V48 = EQ 0xc8dda301 V10
0xbd: V49 = 0x632
0xc0: JUMPI 0x632 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x654]
---
0xc1 DUP1
0xc2 PUSH4 0xcfd94b01
0xc7 EQ
0xc8 PUSH2 0x654
0xcb JUMPI
---
0xc2: V50 = 0xcfd94b01
0xc7: V51 = EQ 0xcfd94b01 V10
0xc8: V52 = 0x654
0xcb: JUMPI 0x654 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x676]
---
0xcc DUP1
0xcd PUSH4 0xda58c7d9
0xd2 EQ
0xd3 PUSH2 0x676
0xd6 JUMPI
---
0xcd: V53 = 0xda58c7d9
0xd2: V54 = EQ 0xda58c7d9 V10
0xd3: V55 = 0x676
0xd6: JUMPI 0x676 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd7
[0xd7:0xe1]
---
Predecessors: [0xcc]
Successors: [0xe2, 0x6a5]
---
0xd7 DUP1
0xd8 PUSH4 0xfc34b908
0xdd EQ
0xde PUSH2 0x6a5
0xe1 JUMPI
---
0xd8: V56 = 0xfc34b908
0xdd: V57 = EQ 0xfc34b908 V10
0xde: V58 = 0x6a5
0xe1: JUMPI 0x6a5 V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe2
[0xe2:0xec]
---
Predecessors: [0xd7]
Successors: [0xed, 0x6c7]
---
0xe2 DUP1
0xe3 PUSH4 0xffa1ad74
0xe8 EQ
0xe9 PUSH2 0x6c7
0xec JUMPI
---
0xe3: V59 = 0xffa1ad74
0xe8: V60 = EQ 0xffa1ad74 V10
0xe9: V61 = 0x6c7
0xec: JUMPI 0x6c7 V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0x0, 0xe2]
Successors: [0xf1]
---
0xed JUMPDEST
0xee PUSH2 0x3f4
---
0xed: JUMPDEST 
0xee: V62 = 0x3f4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3f4]
Exit stack: [V10, 0x3f4]

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0xed]
Successors: [0xf8]
---
0xf1 JUMPDEST
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 PUSH1 0x1
0xf7 DUP1
---
0xf1: JUMPDEST 
0xf2: V63 = 0x0
0xf5: V64 = 0x1
---
Entry stack: [V10, 0x3f4]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x1, 0x1]
Exit stack: [V10, 0x3f4, 0x0, 0x0, 0x1, 0x1]

================================

Block 0xf8
[0xf8:0xff]
---
Predecessors: [0xf1]
Successors: [0x757]
---
0xf8 JUMPDEST
0xf9 PUSH2 0x100
0xfc PUSH2 0x757
0xff JUMP
---
0xf8: JUMPDEST 
0xf9: V65 = 0x100
0xfc: V66 = 0x757
0xff: JUMP 0x757
---
Entry stack: [V10, 0x3f4, 0x0, 0x0, 0x1, 0x1]
Stack pops: 0
Stack additions: [0x100]
Exit stack: [V10, 0x3f4, 0x0, 0x0, 0x1, 0x1, 0x100]

================================

Block 0x100
[0x100:0x109]
---
Predecessors: [0x78c]
Successors: [0x10a, 0x10b]
---
0x100 JUMPDEST
0x101 PUSH1 0x2
0x103 DUP2
0x104 GT
0x105 ISZERO
0x106 PUSH2 0x10b
0x109 JUMPI
---
0x100: JUMPDEST 
0x101: V67 = 0x2
0x104: V68 = GT S0 0x2
0x105: V69 = ISZERO V68
0x106: V70 = 0x10b
0x109: JUMPI 0x10b V69
---
Entry stack: [V10, 0x3f4, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x582}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3f4, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x582}, S2, S1, S0]

================================

Block 0x10a
[0x10a:0x10a]
---
Predecessors: [0x100]
Successors: []
---
0x10a INVALID
---
0x10a: INVALID 
---
Entry stack: [V10, 0x3f4, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x582}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x582}, S2, S1, S0]

================================

Block 0x10b
[0x10b:0x110]
---
Predecessors: [0x100]
Successors: [0x111, 0x116]
---
0x10b JUMPDEST
0x10c EQ
0x10d PUSH2 0x116
0x110 JUMPI
---
0x10b: JUMPDEST 
0x10c: V71 = EQ S0 S1
0x10d: V72 = 0x116
0x110: JUMPI 0x116 V71
---
Entry stack: [V10, 0x3f4, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x582}, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x3f4, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x582}, S2]

================================

Block 0x111
[0x111:0x115]
---
Predecessors: [0x10b]
Successors: []
---
0x111 PUSH1 0x0
0x113 PUSH1 0x0
0x115 REVERT
---
0x111: V73 = 0x0
0x113: V74 = 0x0
0x115: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3f4, S7, V113, S5, S4, S3, S2, {0x0, 0x218, 0x582}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S7, V113, S5, S4, S3, S2, {0x0, 0x218, 0x582}, S0]

================================

Block 0x116
[0x116:0x182]
---
Predecessors: [0x10b]
Successors: [0x183, 0x184]
---
0x116 JUMPDEST
0x117 PUSH1 0x2
0x119 SLOAD
0x11a PUSH1 0x40
0x11c DUP1
0x11d MLOAD
0x11e PUSH1 0x0
0x120 PUSH1 0x20
0x122 SWAP2
0x123 DUP3
0x124 ADD
0x125 DUP2
0x126 SWAP1
0x127 MSTORE
0x128 DUP3
0x129 MLOAD
0x12a PUSH32 0x27e235e300000000000000000000000000000000000000000000000000000000
0x14b DUP2
0x14c MSTORE
0x14d PUSH1 0x1
0x14f PUSH1 0xa0
0x151 PUSH1 0x2
0x153 EXP
0x154 SUB
0x155 CALLER
0x156 DUP2
0x157 AND
0x158 PUSH1 0x4
0x15a DUP4
0x15b ADD
0x15c MSTORE
0x15d SWAP4
0x15e MLOAD
0x15f SWAP4
0x160 SWAP1
0x161 SWAP5
0x162 AND
0x163 SWAP4
0x164 PUSH4 0x27e235e3
0x169 SWAP4
0x16a PUSH1 0x24
0x16c DUP1
0x16d DUP4
0x16e ADD
0x16f SWAP5
0x170 SWAP4
0x171 SWAP2
0x172 SWAP3
0x173 DUP4
0x174 SWAP1
0x175 SUB
0x176 ADD
0x177 SWAP1
0x178 DUP3
0x179 SWAP1
0x17a DUP8
0x17b DUP1
0x17c EXTCODESIZE
0x17d ISZERO
0x17e ISZERO
0x17f PUSH2 0x184
0x182 JUMPI
---
0x116: JUMPDEST 
0x117: V75 = 0x2
0x119: V76 = S[0x2]
0x11a: V77 = 0x40
0x11d: V78 = M[0x40]
0x11e: V79 = 0x0
0x120: V80 = 0x20
0x124: V81 = ADD 0x20 V78
0x127: M[V81] = 0x0
0x129: V82 = M[0x40]
0x12a: V83 = 0x27e235e300000000000000000000000000000000000000000000000000000000
0x14c: M[V82] = 0x27e235e300000000000000000000000000000000000000000000000000000000
0x14d: V84 = 0x1
0x14f: V85 = 0xa0
0x151: V86 = 0x2
0x153: V87 = EXP 0x2 0xa0
0x154: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V89 = CALLER
0x157: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x158: V91 = 0x4
0x15b: V92 = ADD V82 0x4
0x15c: M[V92] = V90
0x15e: V93 = M[0x40]
0x162: V94 = AND V76 0xffffffffffffffffffffffffffffffffffffffff
0x164: V95 = 0x27e235e3
0x16a: V96 = 0x24
0x16e: V97 = ADD V82 0x24
0x175: V98 = SUB V82 V93
0x176: V99 = ADD V98 0x24
0x17c: V100 = EXTCODESIZE V94
0x17d: V101 = ISZERO V100
0x17e: V102 = ISZERO V101
0x17f: V103 = 0x184
0x182: JUMPI 0x184 V102
---
Entry stack: [V10, 0x3f4, S7, V113, S5, S4, S3, S2, {0x0, 0x218, 0x582}, S0]
Stack pops: 0
Stack additions: [V94, 0x27e235e3, V97, 0x20, V93, V99, V93, 0x0, V94]
Exit stack: [V10, 0x3f4, S7, V113, S5, S4, S3, S2, {0x0, 0x218, 0x582}, S0, V94, 0x27e235e3, V97, 0x20, V93, V99, V93, 0x0, V94]

================================

Block 0x183
[0x183:0x183]
---
Predecessors: [0x116]
Successors: []
---
0x183 INVALID
---
0x183: INVALID 
---
Entry stack: [V10, 0x3f4, S16, V113, S14, S13, S12, S11, {0x0, 0x218, 0x582}, S9, V94, 0x27e235e3, V97, 0x20, V93, V99, V93, 0x0, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S16, V113, S14, S13, S12, S11, {0x0, 0x218, 0x582}, S9, V94, 0x27e235e3, V97, 0x20, V93, V99, V93, 0x0, V94]

================================

Block 0x184
[0x184:0x190]
---
Predecessors: [0x116]
Successors: [0x191, 0x192]
---
0x184 JUMPDEST
0x185 PUSH2 0x2c6
0x188 GAS
0x189 SUB
0x18a CALL
0x18b ISZERO
0x18c ISZERO
0x18d PUSH2 0x192
0x190 JUMPI
---
0x184: JUMPDEST 
0x185: V104 = 0x2c6
0x188: V105 = GAS
0x189: V106 = SUB V105 0x2c6
0x18a: V107 = CALL V106 V94 0x0 V93 V99 V93 0x20
0x18b: V108 = ISZERO V107
0x18c: V109 = ISZERO V108
0x18d: V110 = 0x192
0x190: JUMPI 0x192 V109
---
Entry stack: [V10, 0x3f4, S16, V113, S14, S13, S12, S11, {0x0, 0x218, 0x582}, S9, V94, 0x27e235e3, V97, 0x20, V93, V99, V93, 0x0, V94]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x3f4, S16, V113, S14, S13, S12, S11, {0x0, 0x218, 0x582}, S9, V94, 0x27e235e3, V97]

================================

Block 0x191
[0x191:0x191]
---
Predecessors: [0x184]
Successors: []
---
0x191 INVALID
---
0x191: INVALID 
---
Entry stack: [V10, 0x3f4, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x582}, S3, V94, 0x27e235e3, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x582}, S3, V94, 0x27e235e3, V97]

================================

Block 0x192
[0x192:0x1a3]
---
Predecessors: [0x184]
Successors: [0x1a4, 0x1a5]
---
0x192 JUMPDEST
0x193 POP
0x194 POP
0x195 PUSH1 0x40
0x197 MLOAD
0x198 MLOAD
0x199 SWAP3
0x19a POP
0x19b POP
0x19c PUSH1 0x0
0x19e DUP3
0x19f GT
0x1a0 PUSH2 0x1a5
0x1a3 JUMPI
---
0x192: JUMPDEST 
0x195: V111 = 0x40
0x197: V112 = M[0x40]
0x198: V113 = M[V112]
0x19c: V114 = 0x0
0x19f: V115 = GT V113 0x0
0x1a0: V116 = 0x1a5
0x1a3: JUMPI 0x1a5 V115
---
Entry stack: [V10, 0x3f4, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x582}, S3, V94, 0x27e235e3, V97]
Stack pops: 5
Stack additions: [V113, S3]
Exit stack: [V10, 0x3f4, S10, V113, S8, S7, S6, S5, V113, S3]

================================

Block 0x1a4
[0x1a4:0x1a4]
---
Predecessors: [0x192]
Successors: []
---
0x1a4 INVALID
---
0x1a4: INVALID 
---
Entry stack: [V10, 0x3f4, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S7, V113, S5, S4, S3, S2, V113, S0]

================================

Block 0x1a5
[0x1a5:0x1b5]
---
Predecessors: [0x192]
Successors: [0x1b6, 0x1dc]
---
0x1a5 JUMPDEST
0x1a6 PUSH8 0xde0b6b3a7640000
0x1af CALLVALUE
0x1b0 GT
0x1b1 DUP1
0x1b2 PUSH2 0x1dc
0x1b5 JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V117 = 0xde0b6b3a7640000
0x1af: V118 = CALLVALUE
0x1b0: V119 = GT V118 0xde0b6b3a7640000
0x1b2: V120 = 0x1dc
0x1b5: JUMPI 0x1dc V119
---
Entry stack: [V10, 0x3f4, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 0
Stack additions: [V119]
Exit stack: [V10, 0x3f4, S7, V113, S5, S4, S3, S2, V113, S0, V119]

================================

Block 0x1b6
[0x1b6:0x1db]
---
Predecessors: [0x1a5]
Successors: [0x1dc]
---
0x1b6 POP
0x1b7 PUSH1 0x40
0x1b9 MLOAD
0x1ba PUSH1 0x1
0x1bc PUSH1 0xa0
0x1be PUSH1 0x2
0x1c0 EXP
0x1c1 SUB
0x1c2 CALLER
0x1c3 AND
0x1c4 SWAP1
0x1c5 CALLVALUE
0x1c6 DUP1
0x1c7 ISZERO
0x1c8 PUSH2 0x8fc
0x1cb MUL
0x1cc SWAP2
0x1cd PUSH1 0x0
0x1cf DUP2
0x1d0 DUP2
0x1d1 DUP2
0x1d2 DUP6
0x1d3 DUP9
0x1d4 DUP9
0x1d5 CALL
0x1d6 SWAP4
0x1d7 POP
0x1d8 POP
0x1d9 POP
0x1da POP
0x1db ISZERO
---
0x1b7: V121 = 0x40
0x1b9: V122 = M[0x40]
0x1ba: V123 = 0x1
0x1bc: V124 = 0xa0
0x1be: V125 = 0x2
0x1c0: V126 = EXP 0x2 0xa0
0x1c1: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c2: V128 = CALLER
0x1c3: V129 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V130 = CALLVALUE
0x1c7: V131 = ISZERO V130
0x1c8: V132 = 0x8fc
0x1cb: V133 = MUL 0x8fc V131
0x1cd: V134 = 0x0
0x1d5: V135 = CALL V133 V129 V130 V122 0x0 V122 0x0
0x1db: V136 = ISZERO V135
---
Entry stack: [V10, 0x3f4, S8, V113, S6, S5, S4, S3, V113, S1, V119]
Stack pops: 1
Stack additions: [V136]
Exit stack: [V10, 0x3f4, S8, V113, S6, S5, S4, S3, V113, S1, V136]

================================

Block 0x1dc
[0x1dc:0x1e1]
---
Predecessors: [0x1a5, 0x1b6]
Successors: [0x1e2, 0x1e7]
---
0x1dc JUMPDEST
0x1dd ISZERO
0x1de PUSH2 0x1e7
0x1e1 JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V137 = ISZERO S0
0x1de: V138 = 0x1e7
0x1e1: JUMPI 0x1e7 V137
---
Entry stack: [V10, 0x3f4, S8, V113, S6, S5, S4, S3, V113, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3f4, S8, V113, S6, S5, S4, S3, V113, S1]

================================

Block 0x1e2
[0x1e2:0x1e6]
---
Predecessors: [0x1dc]
Successors: []
---
0x1e2 PUSH1 0x0
0x1e4 PUSH1 0x0
0x1e6 REVERT
---
0x1e2: V139 = 0x0
0x1e4: V140 = 0x0
0x1e6: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3f4, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S7, V113, S5, S4, S3, S2, V113, S0]

================================

Block 0x1e7
[0x1e7:0x206]
---
Predecessors: [0x1dc]
Successors: [0x207, 0x273]
---
0x1e7 JUMPDEST
0x1e8 PUSH1 0x1
0x1ea PUSH1 0xa0
0x1ec PUSH1 0x2
0x1ee EXP
0x1ef SUB
0x1f0 CALLER
0x1f1 AND
0x1f2 PUSH1 0x0
0x1f4 SWAP1
0x1f5 DUP2
0x1f6 MSTORE
0x1f7 PUSH1 0x6
0x1f9 PUSH1 0x20
0x1fb MSTORE
0x1fc PUSH1 0x40
0x1fe SWAP1
0x1ff SHA3
0x200 SLOAD
0x201 ISZERO
0x202 ISZERO
0x203 PUSH2 0x273
0x206 JUMPI
---
0x1e7: JUMPDEST 
0x1e8: V141 = 0x1
0x1ea: V142 = 0xa0
0x1ec: V143 = 0x2
0x1ee: V144 = EXP 0x2 0xa0
0x1ef: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f0: V146 = CALLER
0x1f1: V147 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x1f2: V148 = 0x0
0x1f6: M[0x0] = V147
0x1f7: V149 = 0x6
0x1f9: V150 = 0x20
0x1fb: M[0x20] = 0x6
0x1fc: V151 = 0x40
0x1ff: V152 = SHA3 0x0 0x40
0x200: V153 = S[V152]
0x201: V154 = ISZERO V153
0x202: V155 = ISZERO V154
0x203: V156 = 0x273
0x206: JUMPI 0x273 V155
---
Entry stack: [V10, 0x3f4, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S7, V113, S5, S4, S3, S2, V113, S0]

================================

Block 0x207
[0x207:0x217]
---
Predecessors: [0x1e7]
Successors: [0xa75]
---
0x207 PUSH1 0x8
0x209 DUP1
0x20a SLOAD
0x20b PUSH1 0x1
0x20d DUP2
0x20e ADD
0x20f PUSH2 0x218
0x212 DUP4
0x213 DUP3
0x214 PUSH2 0xa75
0x217 JUMP
---
0x207: V157 = 0x8
0x20a: V158 = S[0x8]
0x20b: V159 = 0x1
0x20e: V160 = ADD V158 0x1
0x20f: V161 = 0x218
0x214: V162 = 0xa75
0x217: JUMP 0xa75
---
Entry stack: [V10, 0x3f4, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 0
Stack additions: [0x8, V158, V160, 0x218, 0x8, V160]
Exit stack: [V10, 0x3f4, S7, V113, S5, S4, S3, S2, V113, S0, 0x8, V158, V160, 0x218, 0x8, V160]

================================

Block 0x218
[0x218:0x225]
---
Predecessors: [0x3ef, 0x9a0]
Successors: [0x226]
---
0x218 JUMPDEST
0x219 SWAP2
0x21a PUSH1 0x0
0x21c MSTORE
0x21d PUSH1 0x20
0x21f PUSH1 0x0
0x221 SHA3
0x222 SWAP1
0x223 ADD
0x224 PUSH1 0x0
---
0x218: JUMPDEST 
0x21a: V163 = 0x0
0x21c: M[0x0] = {0x8, 0x3f4}
0x21d: V164 = 0x20
0x21f: V165 = 0x0
0x221: V166 = SHA3 0x0 0x20
0x223: V167 = ADD S1 V166
0x224: V168 = 0x0
---
Entry stack: [V10, 0x3f4, S5, V113, S3, {0x8, 0x3f4}, S1, S0]
Stack pops: 3
Stack additions: [S0, V167, 0x0]
Exit stack: [V10, 0x3f4, S5, V113, S3, S0, V167, 0x0]

================================

Block 0x226
[0x226:0x24f]
---
Predecessors: [0x218]
Successors: [0x250]
---
0x226 JUMPDEST
0x227 DUP2
0x228 SLOAD
0x229 PUSH1 0x1
0x22b PUSH1 0xa0
0x22d PUSH1 0x2
0x22f EXP
0x230 SUB
0x231 CALLER
0x232 DUP2
0x233 AND
0x234 PUSH2 0x100
0x237 SWAP4
0x238 SWAP1
0x239 SWAP4
0x23a EXP
0x23b SWAP3
0x23c DUP4
0x23d MUL
0x23e SWAP3
0x23f MUL
0x240 NOT
0x241 AND
0x242 OR
0x243 SWAP1
0x244 SSTORE
0x245 POP
0x246 PUSH8 0xde0b6b3a7640000
0x24f DUP3
---
0x226: JUMPDEST 
0x228: V169 = S[V167]
0x229: V170 = 0x1
0x22b: V171 = 0xa0
0x22d: V172 = 0x2
0x22f: V173 = EXP 0x2 0xa0
0x230: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x231: V175 = CALLER
0x233: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x234: V177 = 0x100
0x23a: V178 = EXP 0x100 0x0
0x23d: V179 = MUL 0x1 V176
0x23f: V180 = MUL 0x1 0xffffffffffffffffffffffffffffffffffffffff
0x240: V181 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x241: V182 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V169
0x242: V183 = OR V182 V179
0x244: S[V167] = V183
0x246: V184 = 0xde0b6b3a7640000
---
Entry stack: [V10, 0x3f4, S5, V113, S3, S2, V167, 0x0]
Stack pops: 5
Stack additions: [S4, S3, 0xde0b6b3a7640000, S4]
Exit stack: [V10, 0x3f4, S5, V113, S3, 0xde0b6b3a7640000, V113]

================================

Block 0x250
[0x250:0x272]
---
Predecessors: [0x226]
Successors: [0x303]
---
0x250 JUMPDEST
0x251 PUSH1 0x9
0x253 DUP1
0x254 SLOAD
0x255 PUSH2 0xffff
0x258 NOT
0x259 DUP2
0x25a AND
0x25b SWAP4
0x25c SWAP1
0x25d SWAP3
0x25e DIV
0x25f PUSH2 0xffff
0x262 SWAP3
0x263 DUP4
0x264 AND
0x265 ADD
0x266 SWAP1
0x267 SWAP2
0x268 AND
0x269 SWAP2
0x26a SWAP1
0x26b SWAP2
0x26c OR
0x26d SWAP1
0x26e SSTORE
0x26f PUSH2 0x303
0x272 JUMP
---
0x250: JUMPDEST 
0x251: V185 = 0x9
0x254: V186 = S[0x9]
0x255: V187 = 0xffff
0x258: V188 = NOT 0xffff
0x25a: V189 = AND V186 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000
0x25e: V190 = DIV V113 0xde0b6b3a7640000
0x25f: V191 = 0xffff
0x264: V192 = AND 0xffff V186
0x265: V193 = ADD V192 V190
0x268: V194 = AND 0xffff V193
0x26c: V195 = OR V194 V189
0x26e: S[0x9] = V195
0x26f: V196 = 0x303
0x272: JUMP 0x303
---
Entry stack: [V10, 0x3f4, S4, V113, S2, 0xde0b6b3a7640000, V113]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x3f4, S4, V113, S2]

================================

Block 0x273
[0x273:0x27e]
---
Predecessors: [0x1e7]
Successors: [0x78f]
---
0x273 JUMPDEST
0x274 PUSH1 0x64
0x276 DUP3
0x277 PUSH2 0x27f
0x27a CALLER
0x27b PUSH2 0x78f
0x27e JUMP
---
0x273: JUMPDEST 
0x274: V197 = 0x64
0x277: V198 = 0x27f
0x27a: V199 = CALLER
0x27b: V200 = 0x78f
0x27e: JUMP 0x78f
---
Entry stack: [V10, 0x3f4, S7, V113, S5, S4, S3, S2, V113, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x64, S1, 0x27f, V199]
Exit stack: [V10, 0x3f4, S7, V113, S5, S4, S3, S2, V113, S0, 0x64, V113, 0x27f, V199]

================================

Block 0x27f
[0x27f:0x287]
---
Predecessors: [0x7ec]
Successors: [0x288, 0x289]
---
0x27f JUMPDEST
0x280 MUL
0x281 DUP2
0x282 ISZERO
0x283 ISZERO
0x284 PUSH2 0x289
0x287 JUMPI
---
0x27f: JUMPDEST 
0x280: V201 = MUL S0 S1
0x282: V202 = ISZERO 0x64
0x283: V203 = ISZERO 0x0
0x284: V204 = 0x289
0x287: JUMPI 0x289 0x1
---
Entry stack: [V10, 0x3f4, S5, V113, S3, 0x64, S1, S0]
Stack pops: 3
Stack additions: [S2, V201]
Exit stack: [V10, 0x3f4, S5, V113, S3, 0x64, V201]

================================

Block 0x288
[0x288:0x288]
---
Predecessors: [0x27f]
Successors: []
---
0x288 INVALID
---
0x288: INVALID 
---
Entry stack: [V10, 0x3f4, S4, V113, S2, 0x64, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S4, V113, S2, 0x64, V201]

================================

Block 0x289
[0x289:0x298]
---
Predecessors: [0x27f]
Successors: [0x299]
---
0x289 JUMPDEST
0x28a DIV
0x28b SWAP3
0x28c POP
0x28d PUSH8 0xde0b6b3a7640000
0x296 DUP4
0x297 DUP4
0x298 SUB
---
0x289: JUMPDEST 
0x28a: V205 = DIV V201 0x64
0x28d: V206 = 0xde0b6b3a7640000
0x298: V207 = SUB V113 V205
---
Entry stack: [V10, 0x3f4, S4, V113, S2, 0x64, V201]
Stack pops: 5
Stack additions: [V205, S3, S2, 0xde0b6b3a7640000, V207]
Exit stack: [V10, 0x3f4, V205, V113, S2, 0xde0b6b3a7640000, V207]

================================

Block 0x299
[0x299:0x2d0]
---
Predecessors: [0x289]
Successors: [0x2d1]
---
0x299 JUMPDEST
0x29a PUSH1 0x9
0x29c DUP1
0x29d SLOAD
0x29e SWAP3
0x29f SWAP1
0x2a0 SWAP2
0x2a1 DIV
0x2a2 PUSH2 0xffff
0x2a5 PUSH5 0x100000000
0x2ab DUP1
0x2ac DUP6
0x2ad DIV
0x2ae DUP3
0x2af AND
0x2b0 SWAP3
0x2b1 SWAP1
0x2b2 SWAP3
0x2b3 SUB
0x2b4 AND
0x2b5 MUL
0x2b6 PUSH6 0xffff00000000
0x2bd NOT
0x2be SWAP1
0x2bf SWAP3
0x2c0 AND
0x2c1 SWAP2
0x2c2 SWAP1
0x2c3 SWAP2
0x2c4 OR
0x2c5 SWAP1
0x2c6 SSTORE
0x2c7 PUSH8 0xde0b6b3a7640000
0x2d0 DUP4
---
0x299: JUMPDEST 
0x29a: V208 = 0x9
0x29d: V209 = S[0x9]
0x2a1: V210 = DIV V207 0xde0b6b3a7640000
0x2a2: V211 = 0xffff
0x2a5: V212 = 0x100000000
0x2ad: V213 = DIV V209 0x100000000
0x2af: V214 = AND 0xffff V213
0x2b3: V215 = SUB V214 V210
0x2b4: V216 = AND V215 0xffff
0x2b5: V217 = MUL V216 0x100000000
0x2b6: V218 = 0xffff00000000
0x2bd: V219 = NOT 0xffff00000000
0x2c0: V220 = AND V209 0xffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff
0x2c4: V221 = OR V220 V217
0x2c6: S[0x9] = V221
0x2c7: V222 = 0xde0b6b3a7640000
---
Entry stack: [V10, 0x3f4, V205, V113, S2, 0xde0b6b3a7640000, V207]
Stack pops: 5
Stack additions: [S4, S3, S2, 0xde0b6b3a7640000, S4]
Exit stack: [V10, 0x3f4, V205, V113, S2, 0xde0b6b3a7640000, V205]

================================

Block 0x2d1
[0x2d1:0x302]
---
Predecessors: [0x299]
Successors: [0x303]
---
0x2d1 JUMPDEST
0x2d2 PUSH1 0x9
0x2d4 DUP1
0x2d5 SLOAD
0x2d6 SWAP3
0x2d7 SWAP1
0x2d8 SWAP2
0x2d9 DIV
0x2da PUSH2 0xffff
0x2dd PUSH7 0x1000000000000
0x2e5 DUP1
0x2e6 DUP6
0x2e7 DIV
0x2e8 DUP3
0x2e9 AND
0x2ea SWAP3
0x2eb SWAP1
0x2ec SWAP3
0x2ed SUB
0x2ee AND
0x2ef MUL
0x2f0 PUSH8 0xffff000000000000
0x2f9 NOT
0x2fa SWAP1
0x2fb SWAP3
0x2fc AND
0x2fd SWAP2
0x2fe SWAP1
0x2ff SWAP2
0x300 OR
0x301 SWAP1
0x302 SSTORE
---
0x2d1: JUMPDEST 
0x2d2: V223 = 0x9
0x2d5: V224 = S[0x9]
0x2d9: V225 = DIV V205 0xde0b6b3a7640000
0x2da: V226 = 0xffff
0x2dd: V227 = 0x1000000000000
0x2e7: V228 = DIV V224 0x1000000000000
0x2e9: V229 = AND 0xffff V228
0x2ed: V230 = SUB V229 V225
0x2ee: V231 = AND V230 0xffff
0x2ef: V232 = MUL V231 0x1000000000000
0x2f0: V233 = 0xffff000000000000
0x2f9: V234 = NOT 0xffff000000000000
0x2fc: V235 = AND V224 0xffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff
0x300: V236 = OR V235 V232
0x302: S[0x9] = V236
---
Entry stack: [V10, 0x3f4, V205, V113, S2, 0xde0b6b3a7640000, V205]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x3f4, V205, V113, S2]

================================

Block 0x303
[0x303:0x30b]
---
Predecessors: [0x250, 0x2d1]
Successors: [0x30c, 0x312]
---
0x303 JUMPDEST
0x304 PUSH1 0x0
0x306 CALLVALUE
0x307 GT
0x308 PUSH2 0x312
0x30b JUMPI
---
0x303: JUMPDEST 
0x304: V237 = 0x0
0x306: V238 = CALLVALUE
0x307: V239 = GT V238 0x0
0x308: V240 = 0x312
0x30b: JUMPI 0x312 V239
---
Entry stack: [V10, 0x3f4, S2, V113, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S2, V113, S0]

================================

Block 0x30c
[0x30c:0x311]
---
Predecessors: [0x303]
Successors: [0x314]
---
0x30c PUSH1 0x1
0x30e PUSH2 0x314
0x311 JUMP
---
0x30c: V241 = 0x1
0x30e: V242 = 0x314
0x311: JUMP 0x314
---
Entry stack: [V10, 0x3f4, S2, V113, S0]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V10, 0x3f4, S2, V113, S0, 0x1]

================================

Block 0x312
[0x312:0x313]
---
Predecessors: [0x303]
Successors: [0x314]
---
0x312 JUMPDEST
0x313 CALLVALUE
---
0x312: JUMPDEST 
0x313: V243 = CALLVALUE
---
Entry stack: [V10, 0x3f4, S2, V113, S0]
Stack pops: 0
Stack additions: [V243]
Exit stack: [V10, 0x3f4, S2, V113, S0, V243]

================================

Block 0x314
[0x314:0x33e]
---
Predecessors: [0x30c, 0x312]
Successors: [0x78f]
---
0x314 JUMPDEST
0x315 CALLER
0x316 PUSH1 0x1
0x318 PUSH1 0xa0
0x31a PUSH1 0x2
0x31c EXP
0x31d SUB
0x31e DUP2
0x31f AND
0x320 PUSH1 0x0
0x322 SWAP1
0x323 DUP2
0x324 MSTORE
0x325 PUSH1 0x6
0x327 PUSH1 0x20
0x329 MSTORE
0x32a PUSH1 0x40
0x32c SWAP1
0x32d SHA3
0x32e SWAP2
0x32f SWAP1
0x330 SWAP2
0x331 SSTORE
0x332 PUSH1 0x64
0x334 SWAP1
0x335 DUP4
0x336 SWAP1
0x337 PUSH2 0x33f
0x33a SWAP1
0x33b PUSH2 0x78f
0x33e JUMP
---
0x314: JUMPDEST 
0x315: V244 = CALLER
0x316: V245 = 0x1
0x318: V246 = 0xa0
0x31a: V247 = 0x2
0x31c: V248 = EXP 0x2 0xa0
0x31d: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31f: V250 = AND V244 0xffffffffffffffffffffffffffffffffffffffff
0x320: V251 = 0x0
0x324: M[0x0] = V250
0x325: V252 = 0x6
0x327: V253 = 0x20
0x329: M[0x20] = 0x6
0x32a: V254 = 0x40
0x32d: V255 = SHA3 0x0 0x40
0x331: S[V255] = S0
0x332: V256 = 0x64
0x337: V257 = 0x33f
0x33b: V258 = 0x78f
0x33e: JUMP 0x78f
---
Entry stack: [V10, 0x3f4, S3, V113, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x64, S2, 0x33f, V244]
Exit stack: [V10, 0x3f4, S3, V113, S1, 0x64, V113, 0x33f, V244]

================================

Block 0x33f
[0x33f:0x347]
---
Predecessors: [0x7ec]
Successors: [0x348, 0x349]
---
0x33f JUMPDEST
0x340 MUL
0x341 DUP2
0x342 ISZERO
0x343 ISZERO
0x344 PUSH2 0x349
0x347 JUMPI
---
0x33f: JUMPDEST 
0x340: V259 = MUL S0 S1
0x342: V260 = ISZERO 0x64
0x343: V261 = ISZERO 0x0
0x344: V262 = 0x349
0x347: JUMPI 0x349 0x1
---
Entry stack: [V10, 0x3f4, S5, V113, S3, 0x64, S1, S0]
Stack pops: 3
Stack additions: [S2, V259]
Exit stack: [V10, 0x3f4, S5, V113, S3, 0x64, V259]

================================

Block 0x348
[0x348:0x348]
---
Predecessors: [0x33f]
Successors: []
---
0x348 INVALID
---
0x348: INVALID 
---
Entry stack: [V10, 0x3f4, S4, V113, S2, 0x64, V259]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S4, V113, S2, 0x64, V259]

================================

Block 0x349
[0x349:0x358]
---
Predecessors: [0x33f]
Successors: [0x359]
---
0x349 JUMPDEST
0x34a DIV
0x34b SWAP3
0x34c POP
0x34d PUSH8 0xde0b6b3a7640000
0x356 DUP4
0x357 DUP4
0x358 SUB
---
0x349: JUMPDEST 
0x34a: V263 = DIV V259 0x64
0x34d: V264 = 0xde0b6b3a7640000
0x358: V265 = SUB V113 V263
---
Entry stack: [V10, 0x3f4, S4, V113, S2, 0x64, V259]
Stack pops: 5
Stack additions: [V263, S3, S2, 0xde0b6b3a7640000, V265]
Exit stack: [V10, 0x3f4, V263, V113, S2, 0xde0b6b3a7640000, V265]

================================

Block 0x359
[0x359:0x393]
---
Predecessors: [0x349]
Successors: [0x394]
---
0x359 JUMPDEST
0x35a PUSH1 0x9
0x35c DUP1
0x35d SLOAD
0x35e PUSH6 0xffff00000000
0x365 NOT
0x366 DUP2
0x367 AND
0x368 SWAP4
0x369 SWAP1
0x36a SWAP3
0x36b DIV
0x36c PUSH5 0x100000000
0x372 SWAP3
0x373 DUP4
0x374 SWAP1
0x375 DIV
0x376 PUSH2 0xffff
0x379 SWAP1
0x37a DUP2
0x37b AND
0x37c SWAP2
0x37d SWAP1
0x37e SWAP2
0x37f ADD
0x380 AND
0x381 SWAP1
0x382 SWAP2
0x383 MUL
0x384 SWAP2
0x385 SWAP1
0x386 SWAP2
0x387 OR
0x388 SWAP1
0x389 SSTORE
0x38a PUSH8 0xde0b6b3a7640000
0x393 DUP4
---
0x359: JUMPDEST 
0x35a: V266 = 0x9
0x35d: V267 = S[0x9]
0x35e: V268 = 0xffff00000000
0x365: V269 = NOT 0xffff00000000
0x367: V270 = AND V267 0xffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff
0x36b: V271 = DIV V265 0xde0b6b3a7640000
0x36c: V272 = 0x100000000
0x375: V273 = DIV V267 0x100000000
0x376: V274 = 0xffff
0x37b: V275 = AND 0xffff V273
0x37f: V276 = ADD V275 V271
0x380: V277 = AND V276 0xffff
0x383: V278 = MUL 0x100000000 V277
0x387: V279 = OR V278 V270
0x389: S[0x9] = V279
0x38a: V280 = 0xde0b6b3a7640000
---
Entry stack: [V10, 0x3f4, V263, V113, S2, 0xde0b6b3a7640000, V265]
Stack pops: 5
Stack additions: [S4, S3, S2, 0xde0b6b3a7640000, S4]
Exit stack: [V10, 0x3f4, V263, V113, S2, 0xde0b6b3a7640000, V263]

================================

Block 0x394
[0x394:0x3ed]
---
Predecessors: [0x359]
Successors: [0x3ee]
---
0x394 JUMPDEST
0x395 PUSH1 0x9
0x397 DUP1
0x398 SLOAD
0x399 PUSH7 0x1000000000000
0x3a1 PUSH2 0xffff
0x3a4 DUP2
0x3a5 DUP4
0x3a6 DIV
0x3a7 DUP2
0x3a8 AND
0x3a9 SWAP6
0x3aa SWAP1
0x3ab SWAP5
0x3ac DIV
0x3ad SWAP5
0x3ae SWAP1
0x3af SWAP5
0x3b0 ADD
0x3b1 DUP4
0x3b2 AND
0x3b3 DUP5
0x3b4 MUL
0x3b5 PUSH8 0xffff000000000000
0x3be NOT
0x3bf SWAP1
0x3c0 SWAP2
0x3c1 AND
0x3c2 OR
0x3c3 SWAP3
0x3c4 DUP4
0x3c5 DIV
0x3c6 DUP3
0x3c7 AND
0x3c8 PUSH2 0x2ee0
0x3cb SUB
0x3cc PUSH3 0x10000
0x3d0 DUP1
0x3d1 DUP6
0x3d2 DIV
0x3d3 DUP5
0x3d4 AND
0x3d5 SWAP2
0x3d6 SWAP1
0x3d7 SWAP2
0x3d8 SUB
0x3d9 SWAP1
0x3da SWAP3
0x3db AND
0x3dc SWAP1
0x3dd SWAP2
0x3de MUL
0x3df PUSH4 0xffff0000
0x3e4 NOT
0x3e5 SWAP1
0x3e6 SWAP3
0x3e7 AND
0x3e8 SWAP2
0x3e9 SWAP1
0x3ea SWAP2
0x3eb OR
0x3ec SWAP1
0x3ed SSTORE
---
0x394: JUMPDEST 
0x395: V281 = 0x9
0x398: V282 = S[0x9]
0x399: V283 = 0x1000000000000
0x3a1: V284 = 0xffff
0x3a6: V285 = DIV V282 0x1000000000000
0x3a8: V286 = AND 0xffff V285
0x3ac: V287 = DIV V263 0xde0b6b3a7640000
0x3b0: V288 = ADD V287 V286
0x3b2: V289 = AND 0xffff V288
0x3b4: V290 = MUL 0x1000000000000 V289
0x3b5: V291 = 0xffff000000000000
0x3be: V292 = NOT 0xffff000000000000
0x3c1: V293 = AND V282 0xffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff
0x3c2: V294 = OR V293 V290
0x3c5: V295 = DIV V294 0x1000000000000
0x3c7: V296 = AND 0xffff V295
0x3c8: V297 = 0x2ee0
0x3cb: V298 = SUB 0x2ee0 V296
0x3cc: V299 = 0x10000
0x3d2: V300 = DIV V294 0x10000
0x3d4: V301 = AND 0xffff V300
0x3d8: V302 = SUB V301 V298
0x3db: V303 = AND 0xffff V302
0x3de: V304 = MUL 0x10000 V303
0x3df: V305 = 0xffff0000
0x3e4: V306 = NOT 0xffff0000
0x3e7: V307 = AND V294 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff
0x3eb: V308 = OR V307 V304
0x3ed: S[0x9] = V308
---
Entry stack: [V10, 0x3f4, V263, V113, S2, 0xde0b6b3a7640000, V263]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x3f4, V263, V113, S2]

================================

Block 0x3ee
[0x3ee:0x3ee]
---
Predecessors: [0x394, 0x78c, 0xa75]
Successors: [0x3ef]
---
0x3ee JUMPDEST
---
0x3ee: JUMPDEST 
---
Entry stack: [V10, 0x3f4, S14, V113, S12, S11, S10, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x3f4, 0x582}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S14, V113, S12, S11, S10, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x3f4, 0x582}, S2, S1, S0]

================================

Block 0x3ef
[0x3ef:0x3f3]
---
Predecessors: [0x3ee]
Successors: [0x218, 0x3f4, 0x582]
---
0x3ef JUMPDEST
0x3f0 POP
0x3f1 POP
0x3f2 POP
0x3f3 JUMP
---
0x3ef: JUMPDEST 
0x3f3: JUMP {0x0, 0x218, 0x3f4, 0x582}
---
Entry stack: [V10, 0x3f4, S14, V113, S12, S11, S10, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x3f4, 0x582}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x3f4, S14, V113, S12, S11, S10, S9, V113, S7, S6, S5, S4]

================================

Block 0x3f4
[0x3f4:0x3f5]
---
Predecessors: [0x3ef, 0x84a, 0x8ca]
Successors: []
---
0x3f4 JUMPDEST
0x3f5 STOP
---
0x3f4: JUMPDEST 
0x3f5: STOP 
---
Entry stack: [V10, 0x3f4, S5, V113, S3, 0x8, V158, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S5, V113, S3, 0x8, V158, S0]

================================

Block 0x3f6
[0x3f6:0x3fc]
---
Predecessors: [0xb]
Successors: [0x3fd, 0x3fe]
---
0x3f6 JUMPDEST
0x3f7 CALLVALUE
0x3f8 ISZERO
0x3f9 PUSH2 0x3fe
0x3fc JUMPI
---
0x3f6: JUMPDEST 
0x3f7: V309 = CALLVALUE
0x3f8: V310 = ISZERO V309
0x3f9: V311 = 0x3fe
0x3fc: JUMPI 0x3fe V310
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3fd
[0x3fd:0x3fd]
---
Predecessors: [0x3f6]
Successors: []
---
0x3fd INVALID
---
0x3fd: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3fe
[0x3fe:0x411]
---
Predecessors: [0x3f6]
Successors: [0x7f2]
---
0x3fe JUMPDEST
0x3ff PUSH2 0x412
0x402 PUSH1 0x1
0x404 PUSH1 0xa0
0x406 PUSH1 0x2
0x408 EXP
0x409 SUB
0x40a PUSH1 0x4
0x40c CALLDATALOAD
0x40d AND
0x40e PUSH2 0x7f2
0x411 JUMP
---
0x3fe: JUMPDEST 
0x3ff: V312 = 0x412
0x402: V313 = 0x1
0x404: V314 = 0xa0
0x406: V315 = 0x2
0x408: V316 = EXP 0x2 0xa0
0x409: V317 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40a: V318 = 0x4
0x40c: V319 = CALLDATALOAD 0x4
0x40d: V320 = AND V319 0xffffffffffffffffffffffffffffffffffffffff
0x40e: V321 = 0x7f2
0x411: JUMP 0x7f2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x412, V320]
Exit stack: [V10, 0x412, V320]

================================

Block 0x412
[0x412:0x423]
---
Predecessors: [0x7ec, 0x7f2, 0x8ce, 0x9df, 0x9e9, 0xa1e]
Successors: []
---
0x412 JUMPDEST
0x413 PUSH1 0x40
0x415 DUP1
0x416 MLOAD
0x417 SWAP2
0x418 DUP3
0x419 MSTORE
0x41a MLOAD
0x41b SWAP1
0x41c DUP2
0x41d SWAP1
0x41e SUB
0x41f PUSH1 0x20
0x421 ADD
0x422 SWAP1
0x423 RETURN
---
0x412: JUMPDEST 
0x413: V322 = 0x40
0x416: V323 = M[0x40]
0x419: M[V323] = S0
0x41a: V324 = M[0x40]
0x41e: V325 = SUB V323 V324
0x41f: V326 = 0x20
0x421: V327 = ADD 0x20 V325
0x423: RETURN V324 V327
---
Entry stack: [V10, 0x3f4, S5, V113, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3f4, S5, V113, S3, S2, S1]

================================

Block 0x424
[0x424:0x42a]
---
Predecessors: [0x3d]
Successors: [0x42b, 0x42c]
---
0x424 JUMPDEST
0x425 CALLVALUE
0x426 ISZERO
0x427 PUSH2 0x42c
0x42a JUMPI
---
0x424: JUMPDEST 
0x425: V328 = CALLVALUE
0x426: V329 = ISZERO V328
0x427: V330 = 0x42c
0x42a: JUMPI 0x42c V329
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x42b
[0x42b:0x42b]
---
Predecessors: [0x424]
Successors: []
---
0x42b INVALID
---
0x42b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x42c
[0x42c:0x43f]
---
Predecessors: [0x424]
Successors: [0x804]
---
0x42c JUMPDEST
0x42d PUSH2 0x3f4
0x430 PUSH1 0x1
0x432 PUSH1 0xa0
0x434 PUSH1 0x2
0x436 EXP
0x437 SUB
0x438 PUSH1 0x4
0x43a CALLDATALOAD
0x43b AND
0x43c PUSH2 0x804
0x43f JUMP
---
0x42c: JUMPDEST 
0x42d: V331 = 0x3f4
0x430: V332 = 0x1
0x432: V333 = 0xa0
0x434: V334 = 0x2
0x436: V335 = EXP 0x2 0xa0
0x437: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x438: V337 = 0x4
0x43a: V338 = CALLDATALOAD 0x4
0x43b: V339 = AND V338 0xffffffffffffffffffffffffffffffffffffffff
0x43c: V340 = 0x804
0x43f: JUMP 0x804
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3f4, V339]
Exit stack: [V10, 0x3f4, V339]

================================

Block 0x440
[0x440:0x441]
---
Predecessors: []
Successors: []
---
0x440 JUMPDEST
0x441 STOP
---
0x440: JUMPDEST 
0x441: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x442
[0x442:0x448]
---
Predecessors: [0x48]
Successors: [0x449, 0x44a]
---
0x442 JUMPDEST
0x443 CALLVALUE
0x444 ISZERO
0x445 PUSH2 0x44a
0x448 JUMPI
---
0x442: JUMPDEST 
0x443: V341 = CALLVALUE
0x444: V342 = ISZERO V341
0x445: V343 = 0x44a
0x448: JUMPI 0x44a V342
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x449
[0x449:0x449]
---
Predecessors: [0x442]
Successors: []
---
0x449 INVALID
---
0x449: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x44a
[0x44a:0x451]
---
Predecessors: [0x442]
Successors: [0x84d]
---
0x44a JUMPDEST
0x44b PUSH2 0x452
0x44e PUSH2 0x84d
0x451 JUMP
---
0x44a: JUMPDEST 
0x44b: V344 = 0x452
0x44e: V345 = 0x84d
0x451: JUMP 0x84d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x452]
Exit stack: [V10, 0x452]

================================

Block 0x452
[0x452:0x468]
---
Predecessors: [0x84d, 0x85f, 0x869, 0x8d4]
Successors: []
---
0x452 JUMPDEST
0x453 PUSH1 0x40
0x455 DUP1
0x456 MLOAD
0x457 PUSH2 0xffff
0x45a SWAP1
0x45b SWAP3
0x45c AND
0x45d DUP3
0x45e MSTORE
0x45f MLOAD
0x460 SWAP1
0x461 DUP2
0x462 SWAP1
0x463 SUB
0x464 PUSH1 0x20
0x466 ADD
0x467 SWAP1
0x468 RETURN
---
0x452: JUMPDEST 
0x453: V346 = 0x40
0x456: V347 = M[0x40]
0x457: V348 = 0xffff
0x45c: V349 = AND S0 0xffff
0x45e: M[V347] = V349
0x45f: V350 = M[0x40]
0x463: V351 = SUB V347 V350
0x464: V352 = 0x20
0x466: V353 = ADD 0x20 V351
0x468: RETURN V350 V353
---
Entry stack: [V10, 0x452, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x452]

================================

Block 0x469
[0x469:0x46f]
---
Predecessors: [0x53]
Successors: [0x470, 0x471]
---
0x469 JUMPDEST
0x46a CALLVALUE
0x46b ISZERO
0x46c PUSH2 0x471
0x46f JUMPI
---
0x469: JUMPDEST 
0x46a: V354 = CALLVALUE
0x46b: V355 = ISZERO V354
0x46c: V356 = 0x471
0x46f: JUMPI 0x471 V355
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x470
[0x470:0x470]
---
Predecessors: [0x469]
Successors: []
---
0x470 INVALID
---
0x470: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x471
[0x471:0x478]
---
Predecessors: [0x469]
Successors: [0x85f]
---
0x471 JUMPDEST
0x472 PUSH2 0x452
0x475 PUSH2 0x85f
0x478 JUMP
---
0x471: JUMPDEST 
0x472: V357 = 0x452
0x475: V358 = 0x85f
0x478: JUMP 0x85f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x452]
Exit stack: [V10, 0x452]

================================

Block 0x479
[0x479:0x48f]
---
Predecessors: []
Successors: []
---
0x479 JUMPDEST
0x47a PUSH1 0x40
0x47c DUP1
0x47d MLOAD
0x47e PUSH2 0xffff
0x481 SWAP1
0x482 SWAP3
0x483 AND
0x484 DUP3
0x485 MSTORE
0x486 MLOAD
0x487 SWAP1
0x488 DUP2
0x489 SWAP1
0x48a SUB
0x48b PUSH1 0x20
0x48d ADD
0x48e SWAP1
0x48f RETURN
---
0x479: JUMPDEST 
0x47a: V359 = 0x40
0x47d: V360 = M[0x40]
0x47e: V361 = 0xffff
0x483: V362 = AND S0 0xffff
0x485: M[V360] = V362
0x486: V363 = M[0x40]
0x48a: V364 = SUB V360 V363
0x48b: V365 = 0x20
0x48d: V366 = ADD 0x20 V364
0x48f: RETURN V363 V366
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x490
[0x490:0x496]
---
Predecessors: [0x5e]
Successors: [0x497, 0x498]
---
0x490 JUMPDEST
0x491 CALLVALUE
0x492 ISZERO
0x493 PUSH2 0x498
0x496 JUMPI
---
0x490: JUMPDEST 
0x491: V367 = CALLVALUE
0x492: V368 = ISZERO V367
0x493: V369 = 0x498
0x496: JUMPI 0x498 V368
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x497
[0x497:0x497]
---
Predecessors: [0x490]
Successors: []
---
0x497 INVALID
---
0x497: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x498
[0x498:0x49f]
---
Predecessors: [0x490]
Successors: [0x869]
---
0x498 JUMPDEST
0x499 PUSH2 0x452
0x49c PUSH2 0x869
0x49f JUMP
---
0x498: JUMPDEST 
0x499: V370 = 0x452
0x49c: V371 = 0x869
0x49f: JUMP 0x869
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x452]
Exit stack: [V10, 0x452]

================================

Block 0x4a0
[0x4a0:0x4b6]
---
Predecessors: []
Successors: []
---
0x4a0 JUMPDEST
0x4a1 PUSH1 0x40
0x4a3 DUP1
0x4a4 MLOAD
0x4a5 PUSH2 0xffff
0x4a8 SWAP1
0x4a9 SWAP3
0x4aa AND
0x4ab DUP3
0x4ac MSTORE
0x4ad MLOAD
0x4ae SWAP1
0x4af DUP2
0x4b0 SWAP1
0x4b1 SUB
0x4b2 PUSH1 0x20
0x4b4 ADD
0x4b5 SWAP1
0x4b6 RETURN
---
0x4a0: JUMPDEST 
0x4a1: V372 = 0x40
0x4a4: V373 = M[0x40]
0x4a5: V374 = 0xffff
0x4aa: V375 = AND S0 0xffff
0x4ac: M[V373] = V375
0x4ad: V376 = M[0x40]
0x4b1: V377 = SUB V373 V376
0x4b2: V378 = 0x20
0x4b4: V379 = ADD 0x20 V377
0x4b6: RETURN V376 V379
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4b7
[0x4b7:0x4bd]
---
Predecessors: [0x69]
Successors: [0x4be, 0x4bf]
---
0x4b7 JUMPDEST
0x4b8 CALLVALUE
0x4b9 ISZERO
0x4ba PUSH2 0x4bf
0x4bd JUMPI
---
0x4b7: JUMPDEST 
0x4b8: V380 = CALLVALUE
0x4b9: V381 = ISZERO V380
0x4ba: V382 = 0x4bf
0x4bd: JUMPI 0x4bf V381
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4be
[0x4be:0x4be]
---
Predecessors: [0x4b7]
Successors: []
---
0x4be INVALID
---
0x4be: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4bf
[0x4bf:0x4c6]
---
Predecessors: [0x4b7]
Successors: [0x879]
---
0x4bf JUMPDEST
0x4c0 PUSH2 0x4c7
0x4c3 PUSH2 0x879
0x4c6 JUMP
---
0x4bf: JUMPDEST 
0x4c0: V383 = 0x4c7
0x4c3: V384 = 0x879
0x4c6: JUMP 0x879
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4c7]
Exit stack: [V10, 0x4c7]

================================

Block 0x4c7
[0x4c7:0x4e2]
---
Predecessors: [0x879, 0xa08]
Successors: []
---
0x4c7 JUMPDEST
0x4c8 PUSH1 0x40
0x4ca DUP1
0x4cb MLOAD
0x4cc PUSH1 0x1
0x4ce PUSH1 0xa0
0x4d0 PUSH1 0x2
0x4d2 EXP
0x4d3 SUB
0x4d4 SWAP1
0x4d5 SWAP3
0x4d6 AND
0x4d7 DUP3
0x4d8 MSTORE
0x4d9 MLOAD
0x4da SWAP1
0x4db DUP2
0x4dc SWAP1
0x4dd SUB
0x4de PUSH1 0x20
0x4e0 ADD
0x4e1 SWAP1
0x4e2 RETURN
---
0x4c7: JUMPDEST 
0x4c8: V385 = 0x40
0x4cb: V386 = M[0x40]
0x4cc: V387 = 0x1
0x4ce: V388 = 0xa0
0x4d0: V389 = 0x2
0x4d2: V390 = EXP 0x2 0xa0
0x4d3: V391 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d6: V392 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x4d8: M[V386] = V392
0x4d9: V393 = M[0x40]
0x4dd: V394 = SUB V386 V393
0x4de: V395 = 0x20
0x4e0: V396 = ADD 0x20 V394
0x4e2: RETURN V393 V396
---
Entry stack: [V10, 0x4c7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x4c7]

================================

Block 0x4e3
[0x4e3:0x4e9]
---
Predecessors: [0x74]
Successors: [0x4ea, 0x4eb]
---
0x4e3 JUMPDEST
0x4e4 CALLVALUE
0x4e5 ISZERO
0x4e6 PUSH2 0x4eb
0x4e9 JUMPI
---
0x4e3: JUMPDEST 
0x4e4: V397 = CALLVALUE
0x4e5: V398 = ISZERO V397
0x4e6: V399 = 0x4eb
0x4e9: JUMPI 0x4eb V398
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4ea
[0x4ea:0x4ea]
---
Predecessors: [0x4e3]
Successors: []
---
0x4ea INVALID
---
0x4ea: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4eb
[0x4eb:0x4fe]
---
Predecessors: [0x4e3]
Successors: [0x78f]
---
0x4eb JUMPDEST
0x4ec PUSH2 0x412
0x4ef PUSH1 0x1
0x4f1 PUSH1 0xa0
0x4f3 PUSH1 0x2
0x4f5 EXP
0x4f6 SUB
0x4f7 PUSH1 0x4
0x4f9 CALLDATALOAD
0x4fa AND
0x4fb PUSH2 0x78f
0x4fe JUMP
---
0x4eb: JUMPDEST 
0x4ec: V400 = 0x412
0x4ef: V401 = 0x1
0x4f1: V402 = 0xa0
0x4f3: V403 = 0x2
0x4f5: V404 = EXP 0x2 0xa0
0x4f6: V405 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f7: V406 = 0x4
0x4f9: V407 = CALLDATALOAD 0x4
0x4fa: V408 = AND V407 0xffffffffffffffffffffffffffffffffffffffff
0x4fb: V409 = 0x78f
0x4fe: JUMP 0x78f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x412, V408]
Exit stack: [V10, 0x412, V408]

================================

Block 0x4ff
[0x4ff:0x510]
---
Predecessors: []
Successors: []
---
0x4ff JUMPDEST
0x500 PUSH1 0x40
0x502 DUP1
0x503 MLOAD
0x504 SWAP2
0x505 DUP3
0x506 MSTORE
0x507 MLOAD
0x508 SWAP1
0x509 DUP2
0x50a SWAP1
0x50b SUB
0x50c PUSH1 0x20
0x50e ADD
0x50f SWAP1
0x510 RETURN
---
0x4ff: JUMPDEST 
0x500: V410 = 0x40
0x503: V411 = M[0x40]
0x506: M[V411] = S0
0x507: V412 = M[0x40]
0x50b: V413 = SUB V411 V412
0x50c: V414 = 0x20
0x50e: V415 = ADD 0x20 V413
0x510: RETURN V412 V415
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x511
[0x511:0x517]
---
Predecessors: [0x7f]
Successors: [0x518, 0x519]
---
0x511 JUMPDEST
0x512 CALLVALUE
0x513 ISZERO
0x514 PUSH2 0x519
0x517 JUMPI
---
0x511: JUMPDEST 
0x512: V416 = CALLVALUE
0x513: V417 = ISZERO V416
0x514: V418 = 0x519
0x517: JUMPI 0x519 V417
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x518
[0x518:0x518]
---
Predecessors: [0x511]
Successors: []
---
0x518 INVALID
---
0x518: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x519
[0x519:0x526]
---
Predecessors: [0x511]
Successors: [0x888]
---
0x519 JUMPDEST
0x51a PUSH2 0x3f4
0x51d PUSH1 0x4
0x51f CALLDATALOAD
0x520 PUSH1 0x24
0x522 CALLDATALOAD
0x523 PUSH2 0x888
0x526 JUMP
---
0x519: JUMPDEST 
0x51a: V419 = 0x3f4
0x51d: V420 = 0x4
0x51f: V421 = CALLDATALOAD 0x4
0x520: V422 = 0x24
0x522: V423 = CALLDATALOAD 0x24
0x523: V424 = 0x888
0x526: JUMP 0x888
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3f4, V421, V423]
Exit stack: [V10, 0x3f4, V421, V423]

================================

Block 0x527
[0x527:0x528]
---
Predecessors: []
Successors: []
---
0x527 JUMPDEST
0x528 STOP
---
0x527: JUMPDEST 
0x528: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x529
[0x529:0x52f]
---
Predecessors: [0x8a]
Successors: [0x530, 0x531]
---
0x529 JUMPDEST
0x52a CALLVALUE
0x52b ISZERO
0x52c PUSH2 0x531
0x52f JUMPI
---
0x529: JUMPDEST 
0x52a: V425 = CALLVALUE
0x52b: V426 = ISZERO V425
0x52c: V427 = 0x531
0x52f: JUMPI 0x531 V426
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x530
[0x530:0x530]
---
Predecessors: [0x529]
Successors: []
---
0x530 INVALID
---
0x530: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x531
[0x531:0x538]
---
Predecessors: [0x529]
Successors: [0x8ce]
---
0x531 JUMPDEST
0x532 PUSH2 0x412
0x535 PUSH2 0x8ce
0x538 JUMP
---
0x531: JUMPDEST 
0x532: V428 = 0x412
0x535: V429 = 0x8ce
0x538: JUMP 0x8ce
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x412]
Exit stack: [V10, 0x412]

================================

Block 0x539
[0x539:0x54a]
---
Predecessors: []
Successors: []
---
0x539 JUMPDEST
0x53a PUSH1 0x40
0x53c DUP1
0x53d MLOAD
0x53e SWAP2
0x53f DUP3
0x540 MSTORE
0x541 MLOAD
0x542 SWAP1
0x543 DUP2
0x544 SWAP1
0x545 SUB
0x546 PUSH1 0x20
0x548 ADD
0x549 SWAP1
0x54a RETURN
---
0x539: JUMPDEST 
0x53a: V430 = 0x40
0x53d: V431 = M[0x40]
0x540: M[V431] = S0
0x541: V432 = M[0x40]
0x545: V433 = SUB V431 V432
0x546: V434 = 0x20
0x548: V435 = ADD 0x20 V433
0x54a: RETURN V432 V435
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x54b
[0x54b:0x551]
---
Predecessors: [0x95]
Successors: [0x552, 0x553]
---
0x54b JUMPDEST
0x54c CALLVALUE
0x54d ISZERO
0x54e PUSH2 0x553
0x551 JUMPI
---
0x54b: JUMPDEST 
0x54c: V436 = CALLVALUE
0x54d: V437 = ISZERO V436
0x54e: V438 = 0x553
0x551: JUMPI 0x553 V437
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x552
[0x552:0x552]
---
Predecessors: [0x54b]
Successors: []
---
0x552 INVALID
---
0x552: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x553
[0x553:0x55a]
---
Predecessors: [0x54b]
Successors: [0x8d4]
---
0x553 JUMPDEST
0x554 PUSH2 0x452
0x557 PUSH2 0x8d4
0x55a JUMP
---
0x553: JUMPDEST 
0x554: V439 = 0x452
0x557: V440 = 0x8d4
0x55a: JUMP 0x8d4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x452]
Exit stack: [V10, 0x452]

================================

Block 0x55b
[0x55b:0x571]
---
Predecessors: []
Successors: []
---
0x55b JUMPDEST
0x55c PUSH1 0x40
0x55e DUP1
0x55f MLOAD
0x560 PUSH2 0xffff
0x563 SWAP1
0x564 SWAP3
0x565 AND
0x566 DUP3
0x567 MSTORE
0x568 MLOAD
0x569 SWAP1
0x56a DUP2
0x56b SWAP1
0x56c SUB
0x56d PUSH1 0x20
0x56f ADD
0x570 SWAP1
0x571 RETURN
---
0x55b: JUMPDEST 
0x55c: V441 = 0x40
0x55f: V442 = M[0x40]
0x560: V443 = 0xffff
0x565: V444 = AND S0 0xffff
0x567: M[V442] = V444
0x568: V445 = M[0x40]
0x56c: V446 = SUB V442 V445
0x56d: V447 = 0x20
0x56f: V448 = ADD 0x20 V446
0x571: RETURN V445 V448
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x572
[0x572:0x578]
---
Predecessors: [0xa0]
Successors: [0x579, 0x57a]
---
0x572 JUMPDEST
0x573 CALLVALUE
0x574 ISZERO
0x575 PUSH2 0x57a
0x578 JUMPI
---
0x572: JUMPDEST 
0x573: V449 = CALLVALUE
0x574: V450 = ISZERO V449
0x575: V451 = 0x57a
0x578: JUMPI 0x57a V450
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x579
[0x579:0x579]
---
Predecessors: [0x572]
Successors: []
---
0x579 INVALID
---
0x579: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x57a
[0x57a:0x581]
---
Predecessors: [0x572]
Successors: [0x8e8]
---
0x57a JUMPDEST
0x57b PUSH2 0x582
0x57e PUSH2 0x8e8
0x581 JUMP
---
0x57a: JUMPDEST 
0x57b: V452 = 0x582
0x57e: V453 = 0x8e8
0x581: JUMP 0x8e8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x582]
Exit stack: [V10, 0x582]

================================

Block 0x582
[0x582:0x5a7]
---
Predecessors: [0x3ef, 0x9a0, 0xa24]
Successors: [0x5a8, 0x5c8]
---
0x582 JUMPDEST
0x583 PUSH1 0x40
0x585 DUP1
0x586 MLOAD
0x587 PUSH1 0x20
0x589 DUP1
0x58a DUP3
0x58b MSTORE
0x58c DUP4
0x58d MLOAD
0x58e DUP2
0x58f DUP4
0x590 ADD
0x591 MSTORE
0x592 DUP4
0x593 MLOAD
0x594 SWAP2
0x595 SWAP3
0x596 DUP4
0x597 SWAP3
0x598 SWAP1
0x599 DUP4
0x59a ADD
0x59b SWAP2
0x59c DUP6
0x59d ADD
0x59e SWAP1
0x59f DUP1
0x5a0 DUP4
0x5a1 DUP4
0x5a2 DUP3
0x5a3 ISZERO
0x5a4 PUSH2 0x5c8
0x5a7 JUMPI
---
0x582: JUMPDEST 
0x583: V454 = 0x40
0x586: V455 = M[0x40]
0x587: V456 = 0x20
0x58b: M[V455] = 0x20
0x58d: V457 = M[S0]
0x590: V458 = ADD V455 0x20
0x591: M[V458] = V457
0x593: V459 = M[S0]
0x59a: V460 = ADD V455 0x40
0x59d: V461 = ADD S0 0x20
0x5a3: V462 = ISZERO V459
0x5a4: V463 = 0x5c8
0x5a7: JUMPI 0x5c8 V462
---
Entry stack: [V10, 0x3f4, S5, V113, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V455, V455, V460, V461, V459, V459, V460, V461]
Exit stack: [V10, 0x3f4, S5, V113, S3, S2, S1, S0, V455, V455, V460, V461, V459, V459, V460, V461]

================================

Block 0x5a8
[0x5a8:0x5b5]
---
Predecessors: [0x582, 0x5b6, 0x70b]
Successors: [0x5b6, 0x5c8]
---
0x5a8 JUMPDEST
0x5a9 DUP1
0x5aa MLOAD
0x5ab DUP3
0x5ac MSTORE
0x5ad PUSH1 0x20
0x5af DUP4
0x5b0 GT
0x5b1 ISZERO
0x5b2 PUSH2 0x5c8
0x5b5 JUMPI
---
0x5a8: JUMPDEST 
0x5aa: V464 = M[S0]
0x5ac: M[S1] = V464
0x5ad: V465 = 0x20
0x5b0: V466 = GT S2 0x20
0x5b1: V467 = ISZERO V466
0x5b2: V468 = 0x5c8
0x5b5: JUMPI 0x5c8 V467
---
Entry stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5b6
[0x5b6:0x5c7]
---
Predecessors: [0x5a8]
Successors: [0x5a8]
---
0x5b6 PUSH1 0x1f
0x5b8 NOT
0x5b9 SWAP1
0x5ba SWAP3
0x5bb ADD
0x5bc SWAP2
0x5bd PUSH1 0x20
0x5bf SWAP2
0x5c0 DUP3
0x5c1 ADD
0x5c2 SWAP2
0x5c3 ADD
0x5c4 PUSH2 0x5a8
0x5c7 JUMP
---
0x5b6: V469 = 0x1f
0x5b8: V470 = NOT 0x1f
0x5bb: V471 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x5bd: V472 = 0x20
0x5c1: V473 = ADD 0x20 S1
0x5c3: V474 = ADD 0x20 S0
0x5c4: V475 = 0x5a8
0x5c7: JUMP 0x5a8
---
Entry stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V471, V473, V474]
Exit stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, S7, S6, S5, S4, S3, V471, V473, V474]

================================

Block 0x5c8
[0x5c8:0x5da]
---
Predecessors: [0x582, 0x5a8, 0x6d7, 0x6fd]
Successors: [0x5db, 0x5f4]
---
0x5c8 JUMPDEST
0x5c9 POP
0x5ca POP
0x5cb POP
0x5cc SWAP1
0x5cd POP
0x5ce SWAP1
0x5cf DUP2
0x5d0 ADD
0x5d1 SWAP1
0x5d2 PUSH1 0x1f
0x5d4 AND
0x5d5 DUP1
0x5d6 ISZERO
0x5d7 PUSH2 0x5f4
0x5da JUMPI
---
0x5c8: JUMPDEST 
0x5d0: V476 = ADD S3 S5
0x5d2: V477 = 0x1f
0x5d4: V478 = AND 0x1f S3
0x5d6: V479 = ISZERO V478
0x5d7: V480 = 0x5f4
0x5da: JUMPI 0x5f4 V479
---
Entry stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V476, V478]
Exit stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, S7, S6, V476, V478]

================================

Block 0x5db
[0x5db:0x5f3]
---
Predecessors: [0x5c8]
Successors: [0x5f4]
---
0x5db DUP1
0x5dc DUP3
0x5dd SUB
0x5de DUP1
0x5df MLOAD
0x5e0 PUSH1 0x1
0x5e2 DUP4
0x5e3 PUSH1 0x20
0x5e5 SUB
0x5e6 PUSH2 0x100
0x5e9 EXP
0x5ea SUB
0x5eb NOT
0x5ec AND
0x5ed DUP2
0x5ee MSTORE
0x5ef PUSH1 0x20
0x5f1 ADD
0x5f2 SWAP2
0x5f3 POP
---
0x5dd: V481 = SUB V476 V478
0x5df: V482 = M[V481]
0x5e0: V483 = 0x1
0x5e3: V484 = 0x20
0x5e5: V485 = SUB 0x20 V478
0x5e6: V486 = 0x100
0x5e9: V487 = EXP 0x100 V485
0x5ea: V488 = SUB V487 0x1
0x5eb: V489 = NOT V488
0x5ec: V490 = AND V489 V482
0x5ee: M[V481] = V490
0x5ef: V491 = 0x20
0x5f1: V492 = ADD 0x20 V481
---
Entry stack: [V10, 0x3f4, S9, V113, S7, S6, S5, S4, S3, S2, V476, V478]
Stack pops: 2
Stack additions: [V492, S0]
Exit stack: [V10, 0x3f4, S9, V113, S7, S6, S5, S4, S3, S2, V492, V478]

================================

Block 0x5f4
[0x5f4:0x601]
---
Predecessors: [0x5c8, 0x5db, 0x71d]
Successors: []
---
0x5f4 JUMPDEST
0x5f5 POP
0x5f6 SWAP3
0x5f7 POP
0x5f8 POP
0x5f9 POP
0x5fa PUSH1 0x40
0x5fc MLOAD
0x5fd DUP1
0x5fe SWAP2
0x5ff SUB
0x600 SWAP1
0x601 RETURN
---
0x5f4: JUMPDEST 
0x5fa: V493 = 0x40
0x5fc: V494 = M[0x40]
0x5ff: V495 = SUB S1 V494
0x601: RETURN V494 V495
---
Entry stack: [V10, 0x3f4, S9, V113, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x3f4, S9, V113, S7, S6, S5]

================================

Block 0x602
[0x602:0x608]
---
Predecessors: [0xab]
Successors: [0x609, 0x60a]
---
0x602 JUMPDEST
0x603 CALLVALUE
0x604 ISZERO
0x605 PUSH2 0x60a
0x608 JUMPI
---
0x602: JUMPDEST 
0x603: V496 = CALLVALUE
0x604: V497 = ISZERO V496
0x605: V498 = 0x60a
0x608: JUMPI 0x60a V497
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x609
[0x609:0x609]
---
Predecessors: [0x602]
Successors: []
---
0x609 INVALID
---
0x609: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x60a
[0x60a:0x611]
---
Predecessors: [0x602]
Successors: [0x9a3]
---
0x60a JUMPDEST
0x60b PUSH2 0x612
0x60e PUSH2 0x9a3
0x611 JUMP
---
0x60a: JUMPDEST 
0x60b: V499 = 0x612
0x60e: V500 = 0x9a3
0x611: JUMP 0x9a3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x612]
Exit stack: [V10, 0x612]

================================

Block 0x612
[0x612:0x631]
---
Predecessors: [0x9da]
Successors: []
---
0x612 JUMPDEST
0x613 PUSH1 0x40
0x615 DUP1
0x616 MLOAD
0x617 PUSH1 0xff
0x619 SWAP4
0x61a DUP5
0x61b AND
0x61c DUP2
0x61d MSTORE
0x61e SWAP2
0x61f SWAP1
0x620 SWAP3
0x621 AND
0x622 PUSH1 0x20
0x624 DUP3
0x625 ADD
0x626 MSTORE
0x627 DUP2
0x628 MLOAD
0x629 SWAP1
0x62a DUP2
0x62b SWAP1
0x62c SUB
0x62d SWAP1
0x62e SWAP2
0x62f ADD
0x630 SWAP1
0x631 RETURN
---
0x612: JUMPDEST 
0x613: V501 = 0x40
0x616: V502 = M[0x40]
0x617: V503 = 0xff
0x61b: V504 = AND 0xff S1
0x61d: M[V502] = V504
0x621: V505 = AND 0xff S0
0x622: V506 = 0x20
0x625: V507 = ADD V502 0x20
0x626: M[V507] = V505
0x628: V508 = M[0x40]
0x62c: V509 = SUB V502 V508
0x62f: V510 = ADD 0x40 V509
0x631: RETURN V508 V510
---
Entry stack: [V10, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x632
[0x632:0x638]
---
Predecessors: [0xb6]
Successors: [0x639, 0x63a]
---
0x632 JUMPDEST
0x633 CALLVALUE
0x634 ISZERO
0x635 PUSH2 0x63a
0x638 JUMPI
---
0x632: JUMPDEST 
0x633: V511 = CALLVALUE
0x634: V512 = ISZERO V511
0x635: V513 = 0x63a
0x638: JUMPI 0x63a V512
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x639
[0x639:0x639]
---
Predecessors: [0x632]
Successors: []
---
0x639 INVALID
---
0x639: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x63a
[0x63a:0x641]
---
Predecessors: [0x632]
Successors: [0x9df]
---
0x63a JUMPDEST
0x63b PUSH2 0x412
0x63e PUSH2 0x9df
0x641 JUMP
---
0x63a: JUMPDEST 
0x63b: V514 = 0x412
0x63e: V515 = 0x9df
0x641: JUMP 0x9df
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x412]
Exit stack: [V10, 0x412]

================================

Block 0x642
[0x642:0x653]
---
Predecessors: []
Successors: []
---
0x642 JUMPDEST
0x643 PUSH1 0x40
0x645 DUP1
0x646 MLOAD
0x647 SWAP2
0x648 DUP3
0x649 MSTORE
0x64a MLOAD
0x64b SWAP1
0x64c DUP2
0x64d SWAP1
0x64e SUB
0x64f PUSH1 0x20
0x651 ADD
0x652 SWAP1
0x653 RETURN
---
0x642: JUMPDEST 
0x643: V516 = 0x40
0x646: V517 = M[0x40]
0x649: M[V517] = S0
0x64a: V518 = M[0x40]
0x64e: V519 = SUB V517 V518
0x64f: V520 = 0x20
0x651: V521 = ADD 0x20 V519
0x653: RETURN V518 V521
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x654
[0x654:0x65a]
---
Predecessors: [0xc1]
Successors: [0x65b, 0x65c]
---
0x654 JUMPDEST
0x655 CALLVALUE
0x656 ISZERO
0x657 PUSH2 0x65c
0x65a JUMPI
---
0x654: JUMPDEST 
0x655: V522 = CALLVALUE
0x656: V523 = ISZERO V522
0x657: V524 = 0x65c
0x65a: JUMPI 0x65c V523
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x65b
[0x65b:0x65b]
---
Predecessors: [0x654]
Successors: []
---
0x65b INVALID
---
0x65b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x65c
[0x65c:0x663]
---
Predecessors: [0x654]
Successors: [0x9e5]
---
0x65c JUMPDEST
0x65d PUSH2 0x412
0x660 PUSH2 0x9e5
0x663 JUMP
---
0x65c: JUMPDEST 
0x65d: V525 = 0x412
0x660: V526 = 0x9e5
0x663: JUMP 0x9e5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x412]
Exit stack: [V10, 0x412]

================================

Block 0x664
[0x664:0x675]
---
Predecessors: []
Successors: []
---
0x664 JUMPDEST
0x665 PUSH1 0x40
0x667 DUP1
0x668 MLOAD
0x669 SWAP2
0x66a DUP3
0x66b MSTORE
0x66c MLOAD
0x66d SWAP1
0x66e DUP2
0x66f SWAP1
0x670 SUB
0x671 PUSH1 0x20
0x673 ADD
0x674 SWAP1
0x675 RETURN
---
0x664: JUMPDEST 
0x665: V527 = 0x40
0x668: V528 = M[0x40]
0x66b: M[V528] = S0
0x66c: V529 = M[0x40]
0x670: V530 = SUB V528 V529
0x671: V531 = 0x20
0x673: V532 = ADD 0x20 V530
0x675: RETURN V529 V532
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x676
[0x676:0x67c]
---
Predecessors: [0xcc]
Successors: [0x67d, 0x67e]
---
0x676 JUMPDEST
0x677 CALLVALUE
0x678 ISZERO
0x679 PUSH2 0x67e
0x67c JUMPI
---
0x676: JUMPDEST 
0x677: V533 = CALLVALUE
0x678: V534 = ISZERO V533
0x679: V535 = 0x67e
0x67c: JUMPI 0x67e V534
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x67d
[0x67d:0x67d]
---
Predecessors: [0x676]
Successors: []
---
0x67d INVALID
---
0x67d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x67e
[0x67e:0x688]
---
Predecessors: [0x676]
Successors: [0x9ec]
---
0x67e JUMPDEST
0x67f PUSH2 0x4c7
0x682 PUSH1 0x4
0x684 CALLDATALOAD
0x685 PUSH2 0x9ec
0x688 JUMP
---
0x67e: JUMPDEST 
0x67f: V536 = 0x4c7
0x682: V537 = 0x4
0x684: V538 = CALLDATALOAD 0x4
0x685: V539 = 0x9ec
0x688: JUMP 0x9ec
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4c7, V538]
Exit stack: [V10, 0x4c7, V538]

================================

Block 0x689
[0x689:0x6a4]
---
Predecessors: []
Successors: []
---
0x689 JUMPDEST
0x68a PUSH1 0x40
0x68c DUP1
0x68d MLOAD
0x68e PUSH1 0x1
0x690 PUSH1 0xa0
0x692 PUSH1 0x2
0x694 EXP
0x695 SUB
0x696 SWAP1
0x697 SWAP3
0x698 AND
0x699 DUP3
0x69a MSTORE
0x69b MLOAD
0x69c SWAP1
0x69d DUP2
0x69e SWAP1
0x69f SUB
0x6a0 PUSH1 0x20
0x6a2 ADD
0x6a3 SWAP1
0x6a4 RETURN
---
0x689: JUMPDEST 
0x68a: V540 = 0x40
0x68d: V541 = M[0x40]
0x68e: V542 = 0x1
0x690: V543 = 0xa0
0x692: V544 = 0x2
0x694: V545 = EXP 0x2 0xa0
0x695: V546 = SUB 0x10000000000000000000000000000000000000000 0x1
0x698: V547 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x69a: M[V541] = V547
0x69b: V548 = M[0x40]
0x69f: V549 = SUB V541 V548
0x6a0: V550 = 0x20
0x6a2: V551 = ADD 0x20 V549
0x6a4: RETURN V548 V551
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6a5
[0x6a5:0x6ab]
---
Predecessors: [0xd7]
Successors: [0x6ac, 0x6ad]
---
0x6a5 JUMPDEST
0x6a6 CALLVALUE
0x6a7 ISZERO
0x6a8 PUSH2 0x6ad
0x6ab JUMPI
---
0x6a5: JUMPDEST 
0x6a6: V552 = CALLVALUE
0x6a7: V553 = ISZERO V552
0x6a8: V554 = 0x6ad
0x6ab: JUMPI 0x6ad V553
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6ac
[0x6ac:0x6ac]
---
Predecessors: [0x6a5]
Successors: []
---
0x6ac INVALID
---
0x6ac: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6ad
[0x6ad:0x6b4]
---
Predecessors: [0x6a5]
Successors: [0xa1e]
---
0x6ad JUMPDEST
0x6ae PUSH2 0x412
0x6b1 PUSH2 0xa1e
0x6b4 JUMP
---
0x6ad: JUMPDEST 
0x6ae: V555 = 0x412
0x6b1: V556 = 0xa1e
0x6b4: JUMP 0xa1e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x412]
Exit stack: [V10, 0x412]

================================

Block 0x6b5
[0x6b5:0x6c6]
---
Predecessors: []
Successors: []
---
0x6b5 JUMPDEST
0x6b6 PUSH1 0x40
0x6b8 DUP1
0x6b9 MLOAD
0x6ba SWAP2
0x6bb DUP3
0x6bc MSTORE
0x6bd MLOAD
0x6be SWAP1
0x6bf DUP2
0x6c0 SWAP1
0x6c1 SUB
0x6c2 PUSH1 0x20
0x6c4 ADD
0x6c5 SWAP1
0x6c6 RETURN
---
0x6b5: JUMPDEST 
0x6b6: V557 = 0x40
0x6b9: V558 = M[0x40]
0x6bc: M[V558] = S0
0x6bd: V559 = M[0x40]
0x6c1: V560 = SUB V558 V559
0x6c2: V561 = 0x20
0x6c4: V562 = ADD 0x20 V560
0x6c6: RETURN V559 V562
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6c7
[0x6c7:0x6cd]
---
Predecessors: [0xe2]
Successors: [0x6ce, 0x6cf]
---
0x6c7 JUMPDEST
0x6c8 CALLVALUE
0x6c9 ISZERO
0x6ca PUSH2 0x6cf
0x6cd JUMPI
---
0x6c7: JUMPDEST 
0x6c8: V563 = CALLVALUE
0x6c9: V564 = ISZERO V563
0x6ca: V565 = 0x6cf
0x6cd: JUMPI 0x6cf V564
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6ce
[0x6ce:0x6ce]
---
Predecessors: [0x6c7]
Successors: []
---
0x6ce INVALID
---
0x6ce: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6cf
[0x6cf:0x6d6]
---
Predecessors: [0x6c7]
Successors: [0xa24]
---
0x6cf JUMPDEST
0x6d0 PUSH2 0x582
0x6d3 PUSH2 0xa24
0x6d6 JUMP
---
0x6cf: JUMPDEST 
0x6d0: V566 = 0x582
0x6d3: V567 = 0xa24
0x6d6: JUMP 0xa24
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x582]
Exit stack: [V10, 0x582]

================================

Block 0x6d7
[0x6d7:0x6fc]
---
Predecessors: []
Successors: [0x5c8, 0x6fd]
---
0x6d7 JUMPDEST
0x6d8 PUSH1 0x40
0x6da DUP1
0x6db MLOAD
0x6dc PUSH1 0x20
0x6de DUP1
0x6df DUP3
0x6e0 MSTORE
0x6e1 DUP4
0x6e2 MLOAD
0x6e3 DUP2
0x6e4 DUP4
0x6e5 ADD
0x6e6 MSTORE
0x6e7 DUP4
0x6e8 MLOAD
0x6e9 SWAP2
0x6ea SWAP3
0x6eb DUP4
0x6ec SWAP3
0x6ed SWAP1
0x6ee DUP4
0x6ef ADD
0x6f0 SWAP2
0x6f1 DUP6
0x6f2 ADD
0x6f3 SWAP1
0x6f4 DUP1
0x6f5 DUP4
0x6f6 DUP4
0x6f7 DUP3
0x6f8 ISZERO
0x6f9 PUSH2 0x5c8
0x6fc JUMPI
---
0x6d7: JUMPDEST 
0x6d8: V568 = 0x40
0x6db: V569 = M[0x40]
0x6dc: V570 = 0x20
0x6e0: M[V569] = 0x20
0x6e2: V571 = M[S0]
0x6e5: V572 = ADD V569 0x20
0x6e6: M[V572] = V571
0x6e8: V573 = M[S0]
0x6ef: V574 = ADD V569 0x40
0x6f2: V575 = ADD S0 0x20
0x6f8: V576 = ISZERO V573
0x6f9: V577 = 0x5c8
0x6fc: JUMPI 0x5c8 V576
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V569, V569, V574, V575, V573, V573, V574, V575]
Exit stack: [S0, V569, V569, V574, V575, V573, V573, V574, V575]

================================

Block 0x6fd
[0x6fd:0x70a]
---
Predecessors: [0x6d7]
Successors: [0x5c8, 0x70b]
---
0x6fd JUMPDEST
0x6fe DUP1
0x6ff MLOAD
0x700 DUP3
0x701 MSTORE
0x702 PUSH1 0x20
0x704 DUP4
0x705 GT
0x706 ISZERO
0x707 PUSH2 0x5c8
0x70a JUMPI
---
0x6fd: JUMPDEST 
0x6ff: V578 = M[V575]
0x701: M[V574] = V578
0x702: V579 = 0x20
0x705: V580 = GT V573 0x20
0x706: V581 = ISZERO V580
0x707: V582 = 0x5c8
0x70a: JUMPI 0x5c8 V581
---
Entry stack: [S8, V569, V569, V574, V575, V573, V573, V574, V575]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V569, V569, V574, V575, V573, V573, V574, V575]

================================

Block 0x70b
[0x70b:0x71c]
---
Predecessors: [0x6fd]
Successors: [0x5a8]
---
0x70b PUSH1 0x1f
0x70d NOT
0x70e SWAP1
0x70f SWAP3
0x710 ADD
0x711 SWAP2
0x712 PUSH1 0x20
0x714 SWAP2
0x715 DUP3
0x716 ADD
0x717 SWAP2
0x718 ADD
0x719 PUSH2 0x5a8
0x71c JUMP
---
0x70b: V583 = 0x1f
0x70d: V584 = NOT 0x1f
0x710: V585 = ADD V573 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x712: V586 = 0x20
0x716: V587 = ADD 0x20 V574
0x718: V588 = ADD 0x20 V575
0x719: V589 = 0x5a8
0x71c: JUMP 0x5a8
---
Entry stack: [S8, V569, V569, V574, V575, V573, V573, V574, V575]
Stack pops: 3
Stack additions: [V585, V587, V588]
Exit stack: [S8, V569, V569, V574, V575, V573, V585, V587, V588]

================================

Block 0x71d
[0x71d:0x72f]
---
Predecessors: []
Successors: [0x5f4, 0x730]
---
0x71d JUMPDEST
0x71e POP
0x71f POP
0x720 POP
0x721 SWAP1
0x722 POP
0x723 SWAP1
0x724 DUP2
0x725 ADD
0x726 SWAP1
0x727 PUSH1 0x1f
0x729 AND
0x72a DUP1
0x72b ISZERO
0x72c PUSH2 0x5f4
0x72f JUMPI
---
0x71d: JUMPDEST 
0x725: V590 = ADD S3 S5
0x727: V591 = 0x1f
0x729: V592 = AND 0x1f S3
0x72b: V593 = ISZERO V592
0x72c: V594 = 0x5f4
0x72f: JUMPI 0x5f4 V593
---
Entry stack: []
Stack pops: 6
Stack additions: [V590, V592]
Exit stack: [V590, V592]

================================

Block 0x730
[0x730:0x748]
---
Predecessors: [0x71d]
Successors: [0x749]
---
0x730 DUP1
0x731 DUP3
0x732 SUB
0x733 DUP1
0x734 MLOAD
0x735 PUSH1 0x1
0x737 DUP4
0x738 PUSH1 0x20
0x73a SUB
0x73b PUSH2 0x100
0x73e EXP
0x73f SUB
0x740 NOT
0x741 AND
0x742 DUP2
0x743 MSTORE
0x744 PUSH1 0x20
0x746 ADD
0x747 SWAP2
0x748 POP
---
0x732: V595 = SUB V590 V592
0x734: V596 = M[V595]
0x735: V597 = 0x1
0x738: V598 = 0x20
0x73a: V599 = SUB 0x20 V592
0x73b: V600 = 0x100
0x73e: V601 = EXP 0x100 V599
0x73f: V602 = SUB V601 0x1
0x740: V603 = NOT V602
0x741: V604 = AND V603 V596
0x743: M[V595] = V604
0x744: V605 = 0x20
0x746: V606 = ADD 0x20 V595
---
Entry stack: [V590, V592]
Stack pops: 2
Stack additions: [V606, S0]
Exit stack: [V606, V592]

================================

Block 0x749
[0x749:0x756]
---
Predecessors: [0x730]
Successors: []
---
0x749 JUMPDEST
0x74a POP
0x74b SWAP3
0x74c POP
0x74d POP
0x74e POP
0x74f PUSH1 0x40
0x751 MLOAD
0x752 DUP1
0x753 SWAP2
0x754 SUB
0x755 SWAP1
0x756 RETURN
---
0x749: JUMPDEST 
0x74f: V607 = 0x40
0x751: V608 = M[0x40]
0x754: V609 = SUB V606 V608
0x756: RETURN V608 V609
---
Entry stack: [V606, V592]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x757
[0x757:0x761]
---
Predecessors: [0xf8, 0x8f0]
Successors: [0x762, 0x768]
---
0x757 JUMPDEST
0x758 PUSH1 0x0
0x75a DUP1
0x75b SLOAD
0x75c ISZERO
0x75d DUP1
0x75e PUSH2 0x768
0x761 JUMPI
---
0x757: JUMPDEST 
0x758: V610 = 0x0
0x75b: V611 = S[0x0]
0x75c: V612 = ISZERO V611
0x75e: V613 = 0x768
0x761: JUMPI 0x768 V612
---
Entry stack: [V10, 0x3f4, S4, {0x0, 0x582}, S2, {0x1, 0x3}, {0x100, 0x8fa}]
Stack pops: 0
Stack additions: [0x0, V612]
Exit stack: [V10, 0x3f4, S4, {0x0, 0x582}, S2, {0x1, 0x3}, {0x100, 0x8fa}, 0x0, V612]

================================

Block 0x762
[0x762:0x767]
---
Predecessors: [0x757]
Successors: [0x768]
---
0x762 POP
0x763 PUSH1 0x0
0x765 SLOAD
0x766 NUMBER
0x767 LT
---
0x763: V614 = 0x0
0x765: V615 = S[0x0]
0x766: V616 = NUMBER
0x767: V617 = LT V616 V615
---
Entry stack: [V10, 0x3f4, S6, {0x0, 0x582}, S4, {0x1, 0x3}, {0x100, 0x8fa}, 0x0, V612]
Stack pops: 1
Stack additions: [V617]
Exit stack: [V10, 0x3f4, S6, {0x0, 0x582}, S4, {0x1, 0x3}, {0x100, 0x8fa}, 0x0, V617]

================================

Block 0x768
[0x768:0x76d]
---
Predecessors: [0x757, 0x762]
Successors: [0x76e, 0x775]
---
0x768 JUMPDEST
0x769 ISZERO
0x76a PUSH2 0x775
0x76d JUMPI
---
0x768: JUMPDEST 
0x769: V618 = ISZERO S0
0x76a: V619 = 0x775
0x76d: JUMPI 0x775 V618
---
Entry stack: [V10, 0x3f4, S6, {0x0, 0x582}, S4, {0x1, 0x3}, {0x100, 0x8fa}, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3f4, S6, {0x0, 0x582}, S4, {0x1, 0x3}, {0x100, 0x8fa}, 0x0]

================================

Block 0x76e
[0x76e:0x774]
---
Predecessors: [0x768]
Successors: [0x78a]
---
0x76e POP
0x76f PUSH1 0x0
0x771 PUSH2 0x78a
0x774 JUMP
---
0x76f: V620 = 0x0
0x771: V621 = 0x78a
0x774: JUMP 0x78a
---
Entry stack: [V10, 0x3f4, S5, {0x0, 0x582}, S3, {0x1, 0x3}, {0x100, 0x8fa}, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x3f4, S5, {0x0, 0x582}, S3, {0x1, 0x3}, {0x100, 0x8fa}, 0x0]

================================

Block 0x775
[0x775:0x77e]
---
Predecessors: [0x768]
Successors: [0x77f, 0x786]
---
0x775 JUMPDEST
0x776 PUSH1 0x1
0x778 SLOAD
0x779 TIMESTAMP
0x77a GT
0x77b PUSH2 0x786
0x77e JUMPI
---
0x775: JUMPDEST 
0x776: V622 = 0x1
0x778: V623 = S[0x1]
0x779: V624 = TIMESTAMP
0x77a: V625 = GT V624 V623
0x77b: V626 = 0x786
0x77e: JUMPI 0x786 V625
---
Entry stack: [V10, 0x3f4, S5, {0x0, 0x582}, S3, {0x1, 0x3}, {0x100, 0x8fa}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S5, {0x0, 0x582}, S3, {0x1, 0x3}, {0x100, 0x8fa}, 0x0]

================================

Block 0x77f
[0x77f:0x785]
---
Predecessors: [0x775]
Successors: [0x78a]
---
0x77f POP
0x780 PUSH1 0x1
0x782 PUSH2 0x78a
0x785 JUMP
---
0x780: V627 = 0x1
0x782: V628 = 0x78a
0x785: JUMP 0x78a
---
Entry stack: [V10, 0x3f4, S5, {0x0, 0x582}, S3, {0x1, 0x3}, {0x100, 0x8fa}, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x3f4, S5, {0x0, 0x582}, S3, {0x1, 0x3}, {0x100, 0x8fa}, 0x1]

================================

Block 0x786
[0x786:0x789]
---
Predecessors: [0x775]
Successors: [0x78a]
---
0x786 JUMPDEST
0x787 POP
0x788 PUSH1 0x2
---
0x786: JUMPDEST 
0x788: V629 = 0x2
---
Entry stack: [V10, 0x3f4, S5, {0x0, 0x582}, S3, {0x1, 0x3}, {0x100, 0x8fa}, 0x0]
Stack pops: 1
Stack additions: [0x2]
Exit stack: [V10, 0x3f4, S5, {0x0, 0x582}, S3, {0x1, 0x3}, {0x100, 0x8fa}, 0x2]

================================

Block 0x78a
[0x78a:0x78a]
---
Predecessors: [0x76e, 0x77f, 0x786, 0xacb]
Successors: [0x78b]
---
0x78a JUMPDEST
---
0x78a: JUMPDEST 
---
Entry stack: [V10, 0x3f4, S15, V113, S13, S12, S11, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x582}, S3, S2, {0x100, 0x3ee, 0x8fa}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S15, V113, S13, S12, S11, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x582}, S3, S2, {0x100, 0x3ee, 0x8fa}, S0]

================================

Block 0x78b
[0x78b:0x78b]
---
Predecessors: [0x78a]
Successors: [0x78c]
---
0x78b JUMPDEST
---
0x78b: JUMPDEST 
---
Entry stack: [V10, 0x3f4, S15, V113, S13, S12, S11, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x582}, S3, S2, {0x100, 0x3ee, 0x8fa}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S15, V113, S13, S12, S11, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x582}, S3, S2, {0x100, 0x3ee, 0x8fa}, S0]

================================

Block 0x78c
[0x78c:0x78e]
---
Predecessors: [0x78b]
Successors: [0x100, 0x3ee, 0x8fa]
---
0x78c JUMPDEST
0x78d SWAP1
0x78e JUMP
---
0x78c: JUMPDEST 
0x78e: JUMP {0x100, 0x3ee, 0x8fa}
---
Entry stack: [V10, 0x3f4, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x582}, S3, S2, {0x100, 0x3ee, 0x8fa}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x3f4, S10, V113, S8, S7, S6, S5, {0x0, 0x218, 0x582}, S3, S2, S0]

================================

Block 0x78f
[0x78f:0x7b7]
---
Predecessors: [0x273, 0x314, 0x4eb]
Successors: [0x7b8, 0x7c0]
---
0x78f JUMPDEST
0x790 PUSH1 0x1
0x792 PUSH1 0xa0
0x794 PUSH1 0x2
0x796 EXP
0x797 SUB
0x798 DUP2
0x799 AND
0x79a PUSH1 0x0
0x79c SWAP1
0x79d DUP2
0x79e MSTORE
0x79f PUSH1 0x6
0x7a1 PUSH1 0x20
0x7a3 MSTORE
0x7a4 PUSH1 0x40
0x7a6 DUP2
0x7a7 SHA3
0x7a8 SLOAD
0x7a9 PUSH7 0x2386f26fc10000
0x7b1 DUP2
0x7b2 LT
0x7b3 ISZERO
0x7b4 PUSH2 0x7c0
0x7b7 JUMPI
---
0x78f: JUMPDEST 
0x790: V630 = 0x1
0x792: V631 = 0xa0
0x794: V632 = 0x2
0x796: V633 = EXP 0x2 0xa0
0x797: V634 = SUB 0x10000000000000000000000000000000000000000 0x1
0x799: V635 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x79a: V636 = 0x0
0x79e: M[0x0] = V635
0x79f: V637 = 0x6
0x7a1: V638 = 0x20
0x7a3: M[0x20] = 0x6
0x7a4: V639 = 0x40
0x7a7: V640 = SHA3 0x0 0x40
0x7a8: V641 = S[V640]
0x7a9: V642 = 0x2386f26fc10000
0x7b2: V643 = LT V641 0x2386f26fc10000
0x7b3: V644 = ISZERO V643
0x7b4: V645 = 0x7c0
0x7b7: JUMPI 0x7c0 V644
---
Entry stack: [V10, 0x3f4, S11, V113, S9, S8, S7, S6, V113, S4, 0x64, S2, {0x27f, 0x33f, 0x412}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V641]
Exit stack: [V10, 0x3f4, S11, V113, S9, S8, S7, S6, V113, S4, 0x64, S2, {0x27f, 0x33f, 0x412}, S0, 0x0, V641]

================================

Block 0x7b8
[0x7b8:0x7bf]
---
Predecessors: [0x78f]
Successors: [0x7ea]
---
0x7b8 PUSH1 0x0
0x7ba SWAP2
0x7bb POP
0x7bc PUSH2 0x7ea
0x7bf JUMP
---
0x7b8: V646 = 0x0
0x7bc: V647 = 0x7ea
0x7bf: JUMP 0x7ea
---
Entry stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x412}, S2, 0x0, V641]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x412}, S2, 0x0, V641]

================================

Block 0x7c0
[0x7c0:0x7cf]
---
Predecessors: [0x78f]
Successors: [0x7d0, 0x7d8]
---
0x7c0 JUMPDEST
0x7c1 PUSH8 0xde0b6b3a7640000
0x7ca DUP2
0x7cb LT
0x7cc PUSH2 0x7d8
0x7cf JUMPI
---
0x7c0: JUMPDEST 
0x7c1: V648 = 0xde0b6b3a7640000
0x7cb: V649 = LT V641 0xde0b6b3a7640000
0x7cc: V650 = 0x7d8
0x7cf: JUMPI 0x7d8 V649
---
Entry stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x412}, S2, 0x0, V641]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x412}, S2, 0x0, V641]

================================

Block 0x7d0
[0x7d0:0x7d7]
---
Predecessors: [0x7c0]
Successors: [0x7ea]
---
0x7d0 PUSH1 0x64
0x7d2 SWAP2
0x7d3 POP
0x7d4 PUSH2 0x7ea
0x7d7 JUMP
---
0x7d0: V651 = 0x64
0x7d4: V652 = 0x7ea
0x7d7: JUMP 0x7ea
---
Entry stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x412}, S2, 0x0, V641]
Stack pops: 2
Stack additions: [0x64, S0]
Exit stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x412}, S2, 0x64, V641]

================================

Block 0x7d8
[0x7d8:0x7e5]
---
Predecessors: [0x7c0]
Successors: [0x7e6]
---
0x7d8 JUMPDEST
0x7d9 PUSH8 0xde0b6b3a7640000
0x7e2 PUSH1 0x64
0x7e4 DUP3
0x7e5 MUL
---
0x7d8: JUMPDEST 
0x7d9: V653 = 0xde0b6b3a7640000
0x7e2: V654 = 0x64
0x7e5: V655 = MUL V641 0x64
---
Entry stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x412}, S2, 0x0, V641]
Stack pops: 1
Stack additions: [S0, 0xde0b6b3a7640000, V655]
Exit stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x412}, S2, 0x0, V641, 0xde0b6b3a7640000, V655]

================================

Block 0x7e6
[0x7e6:0x7e9]
---
Predecessors: [0x7d8]
Successors: [0x7ea]
---
0x7e6 JUMPDEST
0x7e7 DIV
0x7e8 SWAP2
0x7e9 POP
---
0x7e6: JUMPDEST 
0x7e7: V656 = DIV V655 0xde0b6b3a7640000
---
Entry stack: [V10, 0x3f4, S15, V113, S13, S12, S11, S10, V113, S8, 0x64, S6, {0x27f, 0x33f, 0x412}, S4, 0x0, V641, 0xde0b6b3a7640000, V655]
Stack pops: 4
Stack additions: [V656, S2]
Exit stack: [V10, 0x3f4, S15, V113, S13, S12, S11, S10, V113, S8, 0x64, S6, {0x27f, 0x33f, 0x412}, S4, V656, V641]

================================

Block 0x7ea
[0x7ea:0x7ea]
---
Predecessors: [0x7b8, 0x7d0, 0x7e6]
Successors: [0x7eb]
---
0x7ea JUMPDEST
---
0x7ea: JUMPDEST 
---
Entry stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x412}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x412}, S2, S1, S0]

================================

Block 0x7eb
[0x7eb:0x7eb]
---
Predecessors: [0x7ea]
Successors: [0x7ec]
---
0x7eb JUMPDEST
---
0x7eb: JUMPDEST 
---
Entry stack: [V10, 0x3f4, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x412}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x412}, S2, S1, S0]

================================

Block 0x7ec
[0x7ec:0x7f1]
---
Predecessors: [0x7eb]
Successors: [0x27f, 0x33f, 0x412]
---
0x7ec JUMPDEST
0x7ed POP
0x7ee SWAP2
0x7ef SWAP1
0x7f0 POP
0x7f1 JUMP
---
0x7ec: JUMPDEST 
0x7f1: JUMP {0x27f, 0x33f, 0x412}
---
Entry stack: [V10, 0x3f4, S8, V113, S6, 0x64, S4, {0x27f, 0x33f, 0x412}, S2, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V10, 0x3f4, S8, V113, S6, 0x64, S4, S1]

================================

Block 0x7f2
[0x7f2:0x803]
---
Predecessors: [0x3fe]
Successors: [0x412]
---
0x7f2 JUMPDEST
0x7f3 PUSH1 0x6
0x7f5 PUSH1 0x20
0x7f7 MSTORE
0x7f8 PUSH1 0x0
0x7fa SWAP1
0x7fb DUP2
0x7fc MSTORE
0x7fd PUSH1 0x40
0x7ff SWAP1
0x800 SHA3
0x801 SLOAD
0x802 DUP2
0x803 JUMP
---
0x7f2: JUMPDEST 
0x7f3: V657 = 0x6
0x7f5: V658 = 0x20
0x7f7: M[0x20] = 0x6
0x7f8: V659 = 0x0
0x7fc: M[0x0] = V320
0x7fd: V660 = 0x40
0x800: V661 = SHA3 0x0 0x40
0x801: V662 = S[V661]
0x803: JUMP 0x412
---
Entry stack: [V10, 0x412, V320]
Stack pops: 2
Stack additions: [S1, V662]
Exit stack: [V10, 0x412, V662]

================================

Block 0x804
[0x804:0x81a]
---
Predecessors: [0x42c]
Successors: [0x81b, 0x820]
---
0x804 JUMPDEST
0x805 PUSH1 0x7
0x807 SLOAD
0x808 CALLER
0x809 PUSH1 0x1
0x80b PUSH1 0xa0
0x80d PUSH1 0x2
0x80f EXP
0x810 SUB
0x811 SWAP1
0x812 DUP2
0x813 AND
0x814 SWAP2
0x815 AND
0x816 EQ
0x817 PUSH2 0x820
0x81a JUMPI
---
0x804: JUMPDEST 
0x805: V663 = 0x7
0x807: V664 = S[0x7]
0x808: V665 = CALLER
0x809: V666 = 0x1
0x80b: V667 = 0xa0
0x80d: V668 = 0x2
0x80f: V669 = EXP 0x2 0xa0
0x810: V670 = SUB 0x10000000000000000000000000000000000000000 0x1
0x813: V671 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0x815: V672 = AND V664 0xffffffffffffffffffffffffffffffffffffffff
0x816: V673 = EQ V672 V671
0x817: V674 = 0x820
0x81a: JUMPI 0x820 V673
---
Entry stack: [V10, 0x3f4, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, V339]

================================

Block 0x81b
[0x81b:0x81f]
---
Predecessors: [0x804]
Successors: []
---
0x81b PUSH1 0x0
0x81d PUSH1 0x0
0x81f REVERT
---
0x81b: V675 = 0x0
0x81d: V676 = 0x0
0x81f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3f4, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, V339]

================================

Block 0x820
[0x820:0x848]
---
Predecessors: [0x804]
Successors: [0x849]
---
0x820 JUMPDEST
0x821 PUSH1 0x7
0x823 DUP1
0x824 SLOAD
0x825 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83a NOT
0x83b AND
0x83c PUSH1 0x1
0x83e PUSH1 0xa0
0x840 PUSH1 0x2
0x842 EXP
0x843 SUB
0x844 DUP4
0x845 AND
0x846 OR
0x847 SWAP1
0x848 SSTORE
---
0x820: JUMPDEST 
0x821: V677 = 0x7
0x824: V678 = S[0x7]
0x825: V679 = 0xffffffffffffffffffffffffffffffffffffffff
0x83a: V680 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x83b: V681 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V678
0x83c: V682 = 0x1
0x83e: V683 = 0xa0
0x840: V684 = 0x2
0x842: V685 = EXP 0x2 0xa0
0x843: V686 = SUB 0x10000000000000000000000000000000000000000 0x1
0x845: V687 = AND V339 0xffffffffffffffffffffffffffffffffffffffff
0x846: V688 = OR V687 V681
0x848: S[0x7] = V688
---
Entry stack: [V10, 0x3f4, V339]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3f4, V339]

================================

Block 0x849
[0x849:0x849]
---
Predecessors: [0x820]
Successors: [0x84a]
---
0x849 JUMPDEST
---
0x849: JUMPDEST 
---
Entry stack: [V10, 0x3f4, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, V339]

================================

Block 0x84a
[0x84a:0x84c]
---
Predecessors: [0x849]
Successors: [0x3f4]
---
0x84a JUMPDEST
0x84b POP
0x84c JUMP
---
0x84a: JUMPDEST 
0x84c: JUMP 0x3f4
---
Entry stack: [V10, 0x3f4, V339]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x84d
[0x84d:0x85e]
---
Predecessors: [0x44a]
Successors: [0x452]
---
0x84d JUMPDEST
0x84e PUSH1 0x9
0x850 SLOAD
0x851 PUSH5 0x100000000
0x857 SWAP1
0x858 DIV
0x859 PUSH2 0xffff
0x85c AND
0x85d DUP2
0x85e JUMP
---
0x84d: JUMPDEST 
0x84e: V689 = 0x9
0x850: V690 = S[0x9]
0x851: V691 = 0x100000000
0x858: V692 = DIV V690 0x100000000
0x859: V693 = 0xffff
0x85c: V694 = AND 0xffff V692
0x85e: JUMP 0x452
---
Entry stack: [V10, 0x452]
Stack pops: 1
Stack additions: [S0, V694]
Exit stack: [V10, 0x452, V694]

================================

Block 0x85f
[0x85f:0x868]
---
Predecessors: [0x471]
Successors: [0x452]
---
0x85f JUMPDEST
0x860 PUSH1 0x9
0x862 SLOAD
0x863 PUSH2 0xffff
0x866 AND
0x867 DUP2
0x868 JUMP
---
0x85f: JUMPDEST 
0x860: V695 = 0x9
0x862: V696 = S[0x9]
0x863: V697 = 0xffff
0x866: V698 = AND 0xffff V696
0x868: JUMP 0x452
---
Entry stack: [V10, 0x452]
Stack pops: 1
Stack additions: [S0, V698]
Exit stack: [V10, 0x452, V698]

================================

Block 0x869
[0x869:0x878]
---
Predecessors: [0x498]
Successors: [0x452]
---
0x869 JUMPDEST
0x86a PUSH1 0x9
0x86c SLOAD
0x86d PUSH3 0x10000
0x871 SWAP1
0x872 DIV
0x873 PUSH2 0xffff
0x876 AND
0x877 DUP2
0x878 JUMP
---
0x869: JUMPDEST 
0x86a: V699 = 0x9
0x86c: V700 = S[0x9]
0x86d: V701 = 0x10000
0x872: V702 = DIV V700 0x10000
0x873: V703 = 0xffff
0x876: V704 = AND 0xffff V702
0x878: JUMP 0x452
---
Entry stack: [V10, 0x452]
Stack pops: 1
Stack additions: [S0, V704]
Exit stack: [V10, 0x452, V704]

================================

Block 0x879
[0x879:0x887]
---
Predecessors: [0x4bf]
Successors: [0x4c7]
---
0x879 JUMPDEST
0x87a PUSH1 0x7
0x87c SLOAD
0x87d PUSH1 0x1
0x87f PUSH1 0xa0
0x881 PUSH1 0x2
0x883 EXP
0x884 SUB
0x885 AND
0x886 DUP2
0x887 JUMP
---
0x879: JUMPDEST 
0x87a: V705 = 0x7
0x87c: V706 = S[0x7]
0x87d: V707 = 0x1
0x87f: V708 = 0xa0
0x881: V709 = 0x2
0x883: V710 = EXP 0x2 0xa0
0x884: V711 = SUB 0x10000000000000000000000000000000000000000 0x1
0x885: V712 = AND 0xffffffffffffffffffffffffffffffffffffffff V706
0x887: JUMP 0x4c7
---
Entry stack: [V10, 0x4c7]
Stack pops: 1
Stack additions: [S0, V712]
Exit stack: [V10, 0x4c7, V712]

================================

Block 0x888
[0x888:0x89e]
---
Predecessors: [0x519]
Successors: [0x89f, 0x8a4]
---
0x888 JUMPDEST
0x889 PUSH1 0x7
0x88b SLOAD
0x88c CALLER
0x88d PUSH1 0x1
0x88f PUSH1 0xa0
0x891 PUSH1 0x2
0x893 EXP
0x894 SUB
0x895 SWAP1
0x896 DUP2
0x897 AND
0x898 SWAP2
0x899 AND
0x89a EQ
0x89b PUSH2 0x8a4
0x89e JUMPI
---
0x888: JUMPDEST 
0x889: V713 = 0x7
0x88b: V714 = S[0x7]
0x88c: V715 = CALLER
0x88d: V716 = 0x1
0x88f: V717 = 0xa0
0x891: V718 = 0x2
0x893: V719 = EXP 0x2 0xa0
0x894: V720 = SUB 0x10000000000000000000000000000000000000000 0x1
0x897: V721 = AND 0xffffffffffffffffffffffffffffffffffffffff V715
0x899: V722 = AND V714 0xffffffffffffffffffffffffffffffffffffffff
0x89a: V723 = EQ V722 V721
0x89b: V724 = 0x8a4
0x89e: JUMPI 0x8a4 V723
---
Entry stack: [V10, 0x3f4, V421, V423]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, V421, V423]

================================

Block 0x89f
[0x89f:0x8a3]
---
Predecessors: [0x888]
Successors: []
---
0x89f PUSH1 0x0
0x8a1 PUSH1 0x0
0x8a3 REVERT
---
0x89f: V725 = 0x0
0x8a1: V726 = 0x0
0x8a3: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3f4, V421, V423]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, V421, V423]

================================

Block 0x8a4
[0x8a4:0x8ad]
---
Predecessors: [0x888]
Successors: [0xa5b]
---
0x8a4 JUMPDEST
0x8a5 PUSH2 0x8ae
0x8a8 NUMBER
0x8a9 DUP4
0x8aa PUSH2 0xa5b
0x8ad JUMP
---
0x8a4: JUMPDEST 
0x8a5: V727 = 0x8ae
0x8a8: V728 = NUMBER
0x8aa: V729 = 0xa5b
0x8ad: JUMP 0xa5b
---
Entry stack: [V10, 0x3f4, V421, V423]
Stack pops: 2
Stack additions: [S1, S0, 0x8ae, V728, S1]
Exit stack: [V10, 0x3f4, V421, V423, 0x8ae, V728, V421]

================================

Block 0x8ae
[0x8ae:0x8bb]
---
Predecessors: [0xa6f]
Successors: [0xa5b]
---
0x8ae JUMPDEST
0x8af PUSH1 0x0
0x8b1 SSTORE
0x8b2 PUSH2 0x8bc
0x8b5 DUP2
0x8b6 PUSH1 0x1
0x8b8 PUSH2 0xa5b
0x8bb JUMP
---
0x8ae: JUMPDEST 
0x8af: V730 = 0x0
0x8b1: S[0x0] = S0
0x8b2: V731 = 0x8bc
0x8b6: V732 = 0x1
0x8b8: V733 = 0xa5b
0x8bb: JUMP 0xa5b
---
Entry stack: [V10, 0x3f4, V421, V423, S0]
Stack pops: 2
Stack additions: [S1, 0x8bc, S1, 0x1]
Exit stack: [V10, 0x3f4, V421, V423, 0x8bc, V423, 0x1]

================================

Block 0x8bc
[0x8bc:0x8c8]
---
Predecessors: [0xa6f]
Successors: [0x8c9]
---
0x8bc JUMPDEST
0x8bd PUSH2 0xe10
0x8c0 MUL
0x8c1 TIMESTAMP
0x8c2 ADD
0x8c3 PUSH1 0x1
0x8c5 DUP2
0x8c6 SWAP1
0x8c7 SSTORE
0x8c8 POP
---
0x8bc: JUMPDEST 
0x8bd: V734 = 0xe10
0x8c0: V735 = MUL 0xe10 S0
0x8c1: V736 = TIMESTAMP
0x8c2: V737 = ADD V736 V735
0x8c3: V738 = 0x1
0x8c7: S[0x1] = V737
---
Entry stack: [V10, 0x3f4, V421, V423, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3f4, V421, V423]

================================

Block 0x8c9
[0x8c9:0x8c9]
---
Predecessors: [0x8bc]
Successors: [0x8ca]
---
0x8c9 JUMPDEST
---
0x8c9: JUMPDEST 
---
Entry stack: [V10, 0x3f4, V421, V423]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, V421, V423]

================================

Block 0x8ca
[0x8ca:0x8cd]
---
Predecessors: [0x8c9]
Successors: [0x3f4]
---
0x8ca JUMPDEST
0x8cb POP
0x8cc POP
0x8cd JUMP
---
0x8ca: JUMPDEST 
0x8cd: JUMP 0x3f4
---
Entry stack: [V10, 0x3f4, V421, V423]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x8ce
[0x8ce:0x8d3]
---
Predecessors: [0x531]
Successors: [0x412]
---
0x8ce JUMPDEST
0x8cf PUSH1 0x1
0x8d1 SLOAD
0x8d2 DUP2
0x8d3 JUMP
---
0x8ce: JUMPDEST 
0x8cf: V739 = 0x1
0x8d1: V740 = S[0x1]
0x8d3: JUMP 0x412
---
Entry stack: [V10, 0x412]
Stack pops: 1
Stack additions: [S0, V740]
Exit stack: [V10, 0x412, V740]

================================

Block 0x8d4
[0x8d4:0x8e7]
---
Predecessors: [0x553]
Successors: [0x452]
---
0x8d4 JUMPDEST
0x8d5 PUSH1 0x9
0x8d7 SLOAD
0x8d8 PUSH7 0x1000000000000
0x8e0 SWAP1
0x8e1 DIV
0x8e2 PUSH2 0xffff
0x8e5 AND
0x8e6 DUP2
0x8e7 JUMP
---
0x8d4: JUMPDEST 
0x8d5: V741 = 0x9
0x8d7: V742 = S[0x9]
0x8d8: V743 = 0x1000000000000
0x8e1: V744 = DIV V742 0x1000000000000
0x8e2: V745 = 0xffff
0x8e5: V746 = AND 0xffff V744
0x8e7: JUMP 0x452
---
Entry stack: [V10, 0x452]
Stack pops: 1
Stack additions: [S0, V746]
Exit stack: [V10, 0x452, V746]

================================

Block 0x8e8
[0x8e8:0x8ef]
---
Predecessors: [0x57a]
Successors: [0xa9f]
---
0x8e8 JUMPDEST
0x8e9 PUSH2 0x8f0
0x8ec PUSH2 0xa9f
0x8ef JUMP
---
0x8e8: JUMPDEST 
0x8e9: V747 = 0x8f0
0x8ec: V748 = 0xa9f
0x8ef: JUMP 0xa9f
---
Entry stack: [V10, 0x582]
Stack pops: 0
Stack additions: [0x8f0]
Exit stack: [V10, 0x582, 0x8f0]

================================

Block 0x8f0
[0x8f0:0x8f9]
---
Predecessors: [0xa9f]
Successors: [0x757]
---
0x8f0 JUMPDEST
0x8f1 PUSH1 0x3
0x8f3 PUSH2 0x8fa
0x8f6 PUSH2 0x757
0x8f9 JUMP
---
0x8f0: JUMPDEST 
0x8f1: V749 = 0x3
0x8f3: V750 = 0x8fa
0x8f6: V751 = 0x757
0x8f9: JUMP 0x757
---
Entry stack: [V10, 0x582, V877]
Stack pops: 0
Stack additions: [0x3, 0x8fa]
Exit stack: [V10, 0x582, V877, 0x3, 0x8fa]

================================

Block 0x8fa
[0x8fa:0x903]
---
Predecessors: [0x78c]
Successors: [0x904, 0x905]
---
0x8fa JUMPDEST
0x8fb PUSH1 0x2
0x8fd DUP2
0x8fe GT
0x8ff ISZERO
0x900 PUSH2 0x905
0x903 JUMPI
---
0x8fa: JUMPDEST 
0x8fb: V752 = 0x2
0x8fe: V753 = GT S0 0x2
0x8ff: V754 = ISZERO V753
0x900: V755 = 0x905
0x903: JUMPI 0x905 V754
---
Entry stack: [V10, 0x3f4, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x582}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3f4, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x582}, S2, S1, S0]

================================

Block 0x904
[0x904:0x904]
---
Predecessors: [0x8fa]
Successors: []
---
0x904 INVALID
---
0x904: INVALID 
---
Entry stack: [V10, 0x3f4, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x582}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x582}, S2, S1, S0]

================================

Block 0x905
[0x905:0x90d]
---
Predecessors: [0x8fa]
Successors: [0x90e, 0x90f]
---
0x905 JUMPDEST
0x906 PUSH1 0x3
0x908 DUP2
0x909 LT
0x90a PUSH2 0x90f
0x90d JUMPI
---
0x905: JUMPDEST 
0x906: V756 = 0x3
0x909: V757 = LT S0 0x3
0x90a: V758 = 0x90f
0x90d: JUMPI 0x90f V757
---
Entry stack: [V10, 0x3f4, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x582}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3f4, S9, V113, S7, S6, S5, S4, {0x0, 0x218, 0x582}, S2, S1, S0]

================================

Block 0x90e
[0x90e:0x90e]
---
Predecessors: [0x905]
Successors: []
---
0x90e INVALID
---
0x90e: INVALID 
---
Entry stack: [V10, 0x3f4, S4, {0x0, 0x582}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f4, S4, {0x0, 0x582}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]

================================

Block 0x90f
[0x90f:0x912]
---
Predecessors: [0x905]
Successors: [0x913]
---
0x90f JUMPDEST
0x910 ADD
0x911 PUSH1 0x0
---
0x90f: JUMPDEST 
0x910: V759 = ADD {0x0, 0x1, 0x2} {0x1, 0x3}
0x911: V760 = 0x0
---
Entry stack: [V10, 0x3f4, S4, {0x0, 0x582}, S2, {0x1, 0x3}, {0x0, 0x1, 0x2}]
Stack pops: 2
Stack additions: [V759, 0x0]
Exit stack: [V10, 0x3f4, S4, {0x0, 0x582}, S2, V759, 0x0]

================================

Block 0x913
[0x913:0x951]
---
Predecessors: [0x90f]
Successors: [0x952, 0x998]
---
0x913 JUMPDEST
0x914 POP
0x915 DUP1
0x916 SLOAD
0x917 PUSH1 0x40
0x919 DUP1
0x91a MLOAD
0x91b PUSH1 0x20
0x91d PUSH1 0x2
0x91f PUSH1 0x1
0x921 DUP6
0x922 AND
0x923 ISZERO
0x924 PUSH2 0x100
0x927 MUL
0x928 PUSH1 0x0
0x92a NOT
0x92b ADD
0x92c SWAP1
0x92d SWAP5
0x92e AND
0x92f SWAP4
0x930 SWAP1
0x931 SWAP4
0x932 DIV
0x933 PUSH1 0x1f
0x935 DUP2
0x936 ADD
0x937 DUP5
0x938 SWAP1
0x939 DIV
0x93a DUP5
0x93b MUL
0x93c DUP3
0x93d ADD
0x93e DUP5
0x93f ADD
0x940 SWAP1
0x941 SWAP3
0x942 MSTORE
0x943 DUP2
0x944 DUP2
0x945 MSTORE
0x946 SWAP3
0x947 SWAP2
0x948 DUP4
0x949 ADD
0x94a DUP3
0x94b DUP3
0x94c DUP1
0x94d ISZERO
0x94e PUSH2 0x998
0x951 JUMPI
---
0x913: JUMPDEST 
0x916: V761 = S[V759]
0x917: V762 = 0x40
0x91a: V763 = M[0x40]
0x91b: V764 = 0x20
0x91d: V765 = 0x2
0x91f: V766 = 0x1
0x922: V767 = AND V761 0x1
0x923: V768 = ISZERO V767
0x924: V769 = 0x100
0x927: V770 = MUL 0x100 V768
0x928: V771 = 0x0
0x92a: V772 = NOT 0x0
0x92b: V773 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V770
0x92e: V774 = AND V761 V773
0x932: V775 = DIV V774 0x2
0x933: V776 = 0x1f
0x936: V777 = ADD V775 0x1f
0x939: V778 = DIV V777 0x20
0x93b: V779 = MUL 0x20 V778
0x93d: V780 = ADD V763 V779
0x93f: V781 = ADD 0x20 V780
0x942: M[0x40] = V781
0x945: M[V763] = V775
0x949: V782 = ADD V763 0x20
0x94d: V783 = ISZERO V775
0x94e: V784 = 0x998
0x951: JUMPI 0x998 V783
---
Entry stack: [V10, 0x3f4, S4, {0x0, 0x582}, S2, V759, 0x0]
Stack pops: 2
Stack additions: [V763, S1, V775, V782, S1, V775]
Exit stack: [V10, 0x3f4, S4, {0x0, 0x582}, S2, V763, V759, V775, V782, V759, V775]

================================

Block 0x952
[0x952:0x959]
---
Predecessors: [0x913]
Successors: [0x95a, 0x96d]
---
0x952 DUP1
0x953 PUSH1 0x1f
0x955 LT
0x956 PUSH2 0x96d
0x959 JUMPI
---
0x953: V785 = 0x1f
0x955: V786 = LT 0x1f V775
0x956: V787 = 0x96d
0x959: JUMPI 0x96d V786
---
Entry stack: [V10, 0x3f4, S8, {0x0, 0x582}, S6, V763, V759, V775, V782, V759, V775]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3f4, S8, {0x0, 0x582}, S6, V763, V759, V775, V782, V759, V775]

================================

Block 0x95a
[0x95a:0x96c]
---
Predecessors: [0x952]
Successors: [0x998]
---
0x95a PUSH2 0x100
0x95d DUP1
0x95e DUP4
0x95f SLOAD
0x960 DIV
0x961 MUL
0x962 DUP4
0x963 MSTORE
0x964 SWAP2
0x965 PUSH1 0x20
0x967 ADD
0x968 SWAP2
0x969 PUSH2 0x998
0x96c JUMP
---
0x95a: V788 = 0x100
0x95f: V789 = S[S1]
0x960: V790 = DIV V789 0x100
0x961: V791 = MUL V790 0x100
0x963: M[V782] = V791
0x965: V792 = 0x20
0x967: V793 = ADD 0x20 V782
0x969: V794 = 0x998
0x96c: JUMP 0x998
---
Entry stack: [V10, 0x3f4, S8, {0x0, 0x582}, S6, V763, S4, V775, V782, S1, V775]
Stack pops: 3
Stack additions: [V793, S1, S0]
Exit stack: [V10, 0x3f4, S8, {0x0, 0x582}, S6, V763, S4, V775, V793, S1, V775]

================================

Block 0x96d
[0x96d:0x97a]
---
Predecessors: [0x952]
Successors: [0x97b]
---
0x96d JUMPDEST
0x96e DUP3
0x96f ADD
0x970 SWAP2
0x971 SWAP1
0x972 PUSH1 0x0
0x974 MSTORE
0x975 PUSH1 0x20
0x977 PUSH1 0x0
0x979 SHA3
0x97a SWAP1
---
0x96d: JUMPDEST 
0x96f: V795 = ADD V782 V775
0x972: V796 = 0x0
0x974: M[0x0] = S1
0x975: V797 = 0x20
0x977: V798 = 0x0
0x979: V799 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x3f4, S8, {0x0, 0x582}, S6, V763, S4, V775, V782, S1, V775]
Stack pops: 3
Stack additions: [V795, V799, S2]
Exit stack: [V10, 0x3f4, S8, {0x0, 0x582}, S6, V763, S4, V775, V795, V799, V782]

================================

Block 0x97b
[0x97b:0x98e]
---
Predecessors: [0x96d, 0x97b]
Successors: [0x97b, 0x98f]
---
0x97b JUMPDEST
0x97c DUP2
0x97d SLOAD
0x97e DUP2
0x97f MSTORE
0x980 SWAP1
0x981 PUSH1 0x1
0x983 ADD
0x984 SWAP1
0x985 PUSH1 0x20
0x987 ADD
0x988 DUP1
0x989 DUP4
0x98a GT
0x98b PUSH2 0x97b
0x98e JUMPI
---
0x97b: JUMPDEST 
0x97d: V800 = S[S1]
0x97f: M[S0] = V800
0x981: V801 = 0x1
0x983: V802 = ADD 0x1 S1
0x985: V803 = 0x20
0x987: V804 = ADD 0x20 S0
0x98a: V805 = GT V795 V804
0x98b: V806 = 0x97b
0x98e: JUMPI 0x97b V805
---
Entry stack: [V10, 0x3f4, S8, {0x0, 0x582}, S6, S5, S4, S3, V795, S1, S0]
Stack pops: 3
Stack additions: [S2, V802, V804]
Exit stack: [V10, 0x3f4, S8, {0x0, 0x582}, S6, S5, S4, S3, V795, V802, V804]

================================

Block 0x98f
[0x98f:0x997]
---
Predecessors: [0x97b]
Successors: [0x998]
---
0x98f DUP3
0x990 SWAP1
0x991 SUB
0x992 PUSH1 0x1f
0x994 AND
0x995 DUP3
0x996 ADD
0x997 SWAP2
---
0x991: V807 = SUB V804 V795
0x992: V808 = 0x1f
0x994: V809 = AND 0x1f V807
0x996: V810 = ADD V795 V809
---
Entry stack: [V10, 0x3f4, S8, {0x0, 0x582}, S6, S5, S4, S3, V795, V802, V804]
Stack pops: 3
Stack additions: [V810, S1, S2]
Exit stack: [V10, 0x3f4, S8, {0x0, 0x582}, S6, S5, S4, S3, V810, V802, V795]

================================

Block 0x998
[0x998:0x99f]
---
Predecessors: [0x913, 0x95a, 0x98f]
Successors: [0x9a0]
---
0x998 JUMPDEST
0x999 POP
0x99a POP
0x99b POP
0x99c POP
0x99d POP
0x99e SWAP1
0x99f POP
---
0x998: JUMPDEST 
---
Entry stack: [V10, 0x3f4, S8, {0x0, 0x582}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S5]
Exit stack: [V10, 0x3f4, S8, {0x0, 0x582}, S5]

================================

Block 0x9a0
[0x9a0:0x9a2]
---
Predecessors: [0x998]
Successors: [0x218, 0x582]
---
0x9a0 JUMPDEST
0x9a1 SWAP1
0x9a2 JUMP
---
0x9a0: JUMPDEST 
0x9a2: JUMP {0x0, 0x582}
---
Entry stack: [V10, 0x3f4, S2, {0x0, 0x582}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x3f4, S2, S0]

================================

Block 0x9a3
[0x9a3:0x9b4]
---
Predecessors: [0x60a]
Successors: [0x9b5, 0x9d1]
---
0x9a3 JUMPDEST
0x9a4 PUSH1 0x1
0x9a6 SLOAD
0x9a7 PUSH1 0x0
0x9a9 SWAP1
0x9aa DUP2
0x9ab SWAP1
0x9ac TIMESTAMP
0x9ad DUP2
0x9ae SUB
0x9af SWAP1
0x9b0 ISZERO
0x9b1 PUSH2 0x9d1
0x9b4 JUMPI
---
0x9a3: JUMPDEST 
0x9a4: V811 = 0x1
0x9a6: V812 = S[0x1]
0x9a7: V813 = 0x0
0x9ac: V814 = TIMESTAMP
0x9ae: V815 = SUB V812 V814
0x9b0: V816 = ISZERO V812
0x9b1: V817 = 0x9d1
0x9b4: JUMPI 0x9d1 V816
---
Entry stack: [V10, 0x612]
Stack pops: 0
Stack additions: [0x0, 0x0, V815]
Exit stack: [V10, 0x612, 0x0, 0x0, V815]

================================

Block 0x9b5
[0x9b5:0x9b8]
---
Predecessors: [0x9a3]
Successors: [0x9b9]
---
0x9b5 PUSH2 0xe10
0x9b8 DUP2
---
0x9b5: V818 = 0xe10
---
Entry stack: [V10, 0x612, 0x0, 0x0, V815]
Stack pops: 1
Stack additions: [S0, 0xe10, S0]
Exit stack: [V10, 0x612, 0x0, 0x0, V815, 0xe10, V815]

================================

Block 0x9b9
[0x9b9:0x9c0]
---
Predecessors: [0x9b5]
Successors: [0x9c1]
---
0x9b9 JUMPDEST
0x9ba DIV
0x9bb PUSH1 0x3c
0x9bd PUSH2 0xe10
0x9c0 DUP4
---
0x9b9: JUMPDEST 
0x9ba: V819 = DIV V815 0xe10
0x9bb: V820 = 0x3c
0x9bd: V821 = 0xe10
---
Entry stack: [V10, 0x612, 0x0, 0x0, V815, 0xe10, V815]
Stack pops: 3
Stack additions: [S2, V819, 0x3c, 0xe10, S2]
Exit stack: [V10, 0x612, 0x0, 0x0, V815, V819, 0x3c, 0xe10, V815]

================================

Block 0x9c1
[0x9c1:0x9c9]
---
Predecessors: [0x9b9]
Successors: [0x9ca, 0x9cb]
---
0x9c1 JUMPDEST
0x9c2 MOD
0x9c3 DUP2
0x9c4 ISZERO
0x9c5 ISZERO
0x9c6 PUSH2 0x9cb
0x9c9 JUMPI
---
0x9c1: JUMPDEST 
0x9c2: V822 = MOD V815 0xe10
0x9c4: V823 = ISZERO 0x3c
0x9c5: V824 = ISZERO 0x0
0x9c6: V825 = 0x9cb
0x9c9: JUMPI 0x9cb 0x1
---
Entry stack: [V10, 0x612, 0x0, 0x0, V815, V819, 0x3c, 0xe10, V815]
Stack pops: 3
Stack additions: [S2, V822]
Exit stack: [V10, 0x612, 0x0, 0x0, V815, V819, 0x3c, V822]

================================

Block 0x9ca
[0x9ca:0x9ca]
---
Predecessors: [0x9c1]
Successors: []
---
0x9ca INVALID
---
0x9ca: INVALID 
---
Entry stack: [V10, 0x612, 0x0, 0x0, V815, V819, 0x3c, V822]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x612, 0x0, 0x0, V815, V819, 0x3c, V822]

================================

Block 0x9cb
[0x9cb:0x9d0]
---
Predecessors: [0x9c1]
Successors: [0x9d5]
---
0x9cb JUMPDEST
0x9cc DIV
0x9cd PUSH2 0x9d5
0x9d0 JUMP
---
0x9cb: JUMPDEST 
0x9cc: V826 = DIV V822 0x3c
0x9cd: V827 = 0x9d5
0x9d0: JUMP 0x9d5
---
Entry stack: [V10, 0x612, 0x0, 0x0, V815, V819, 0x3c, V822]
Stack pops: 2
Stack additions: [V826]
Exit stack: [V10, 0x612, 0x0, 0x0, V815, V819, V826]

================================

Block 0x9d1
[0x9d1:0x9d4]
---
Predecessors: [0x9a3]
Successors: [0x9d5]
---
0x9d1 JUMPDEST
0x9d2 PUSH1 0x0
0x9d4 DUP1
---
0x9d1: JUMPDEST 
0x9d2: V828 = 0x0
---
Entry stack: [V10, 0x612, 0x0, 0x0, V815]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x612, 0x0, 0x0, V815, 0x0, 0x0]

================================

Block 0x9d5
[0x9d5:0x9d9]
---
Predecessors: [0x9cb, 0x9d1]
Successors: [0x9da]
---
0x9d5 JUMPDEST
0x9d6 SWAP3
0x9d7 POP
0x9d8 SWAP3
0x9d9 POP
---
0x9d5: JUMPDEST 
---
Entry stack: [V10, 0x612, 0x0, 0x0, V815, S1, S0]
Stack pops: 5
Stack additions: [S1, S0, S2]
Exit stack: [V10, 0x612, S1, S0, V815]

================================

Block 0x9da
[0x9da:0x9de]
---
Predecessors: [0x9d5]
Successors: [0x612]
---
0x9da JUMPDEST
0x9db POP
0x9dc SWAP1
0x9dd SWAP2
0x9de JUMP
---
0x9da: JUMPDEST 
0x9de: JUMP 0x612
---
Entry stack: [V10, 0x612, S2, S1, V815]
Stack pops: 4
Stack additions: [S2, S1]
Exit stack: [V10, S2, S1]

================================

Block 0x9df
[0x9df:0x9e4]
---
Predecessors: [0x63a]
Successors: [0x412]
---
0x9df JUMPDEST
0x9e0 PUSH1 0x0
0x9e2 SLOAD
0x9e3 DUP2
0x9e4 JUMP
---
0x9df: JUMPDEST 
0x9e0: V829 = 0x0
0x9e2: V830 = S[0x0]
0x9e4: JUMP 0x412
---
Entry stack: [V10, 0x412]
Stack pops: 1
Stack additions: [S0, V830]
Exit stack: [V10, 0x412, V830]

================================

Block 0x9e5
[0x9e5:0x9e8]
---
Predecessors: [0x65c]
Successors: [0x9e9]
---
0x9e5 JUMPDEST
0x9e6 PUSH1 0x8
0x9e8 SLOAD
---
0x9e5: JUMPDEST 
0x9e6: V831 = 0x8
0x9e8: V832 = S[0x8]
---
Entry stack: [V10, 0x412]
Stack pops: 0
Stack additions: [V832]
Exit stack: [V10, 0x412, V832]

================================

Block 0x9e9
[0x9e9:0x9eb]
---
Predecessors: [0x9e5]
Successors: [0x412]
---
0x9e9 JUMPDEST
0x9ea SWAP1
0x9eb JUMP
---
0x9e9: JUMPDEST 
0x9eb: JUMP 0x412
---
Entry stack: [V10, 0x412, V832]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V832]

================================

Block 0x9ec
[0x9ec:0x9f8]
---
Predecessors: [0x67e]
Successors: [0x9f9, 0x9fa]
---
0x9ec JUMPDEST
0x9ed PUSH1 0x8
0x9ef DUP1
0x9f0 SLOAD
0x9f1 DUP3
0x9f2 SWAP1
0x9f3 DUP2
0x9f4 LT
0x9f5 PUSH2 0x9fa
0x9f8 JUMPI
---
0x9ec: JUMPDEST 
0x9ed: V833 = 0x8
0x9f0: V834 = S[0x8]
0x9f4: V835 = LT V538 V834
0x9f5: V836 = 0x9fa
0x9f8: JUMPI 0x9fa V835
---
Entry stack: [V10, 0x4c7, V538]
Stack pops: 1
Stack additions: [S0, 0x8, S0]
Exit stack: [V10, 0x4c7, V538, 0x8, V538]

================================

Block 0x9f9
[0x9f9:0x9f9]
---
Predecessors: [0x9ec]
Successors: []
---
0x9f9 INVALID
---
0x9f9: INVALID 
---
Entry stack: [V10, 0x4c7, V538, 0x8, V538]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4c7, V538, 0x8, V538]

================================

Block 0x9fa
[0x9fa:0xa07]
---
Predecessors: [0x9ec]
Successors: [0xa08]
---
0x9fa JUMPDEST
0x9fb SWAP1
0x9fc PUSH1 0x0
0x9fe MSTORE
0x9ff PUSH1 0x20
0xa01 PUSH1 0x0
0xa03 SHA3
0xa04 SWAP1
0xa05 ADD
0xa06 PUSH1 0x0
---
0x9fa: JUMPDEST 
0x9fc: V837 = 0x0
0x9fe: M[0x0] = 0x8
0x9ff: V838 = 0x20
0xa01: V839 = 0x0
0xa03: V840 = SHA3 0x0 0x20
0xa05: V841 = ADD V538 V840
0xa06: V842 = 0x0
---
Entry stack: [V10, 0x4c7, V538, 0x8, V538]
Stack pops: 2
Stack additions: [V841, 0x0]
Exit stack: [V10, 0x4c7, V538, V841, 0x0]

================================

Block 0xa08
[0xa08:0xa1d]
---
Predecessors: [0x9fa]
Successors: [0x4c7]
---
0xa08 JUMPDEST
0xa09 SWAP2
0xa0a POP
0xa0b SLOAD
0xa0c SWAP1
0xa0d PUSH2 0x100
0xa10 EXP
0xa11 SWAP1
0xa12 DIV
0xa13 PUSH1 0x1
0xa15 PUSH1 0xa0
0xa17 PUSH1 0x2
0xa19 EXP
0xa1a SUB
0xa1b AND
0xa1c DUP2
0xa1d JUMP
---
0xa08: JUMPDEST 
0xa0b: V843 = S[V841]
0xa0d: V844 = 0x100
0xa10: V845 = EXP 0x100 0x0
0xa12: V846 = DIV V843 0x1
0xa13: V847 = 0x1
0xa15: V848 = 0xa0
0xa17: V849 = 0x2
0xa19: V850 = EXP 0x2 0xa0
0xa1a: V851 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1b: V852 = AND 0xffffffffffffffffffffffffffffffffffffffff V846
0xa1d: JUMP 0x4c7
---
Entry stack: [V10, 0x4c7, V538, V841, 0x0]
Stack pops: 4
Stack additions: [S3, V852]
Exit stack: [V10, 0x4c7, V852]

================================

Block 0xa1e
[0xa1e:0xa23]
---
Predecessors: [0x6ad]
Successors: [0x412]
---
0xa1e JUMPDEST
0xa1f PUSH2 0x2ee0
0xa22 DUP2
0xa23 JUMP
---
0xa1e: JUMPDEST 
0xa1f: V853 = 0x2ee0
0xa23: JUMP 0x412
---
Entry stack: [V10, 0x412]
Stack pops: 1
Stack additions: [S0, 0x2ee0]
Exit stack: [V10, 0x412, 0x2ee0]

================================

Block 0xa24
[0xa24:0xa5a]
---
Predecessors: [0x6cf]
Successors: [0x582]
---
0xa24 JUMPDEST
0xa25 PUSH1 0x40
0xa27 DUP1
0xa28 MLOAD
0xa29 DUP1
0xa2a DUP3
0xa2b ADD
0xa2c SWAP1
0xa2d SWAP2
0xa2e MSTORE
0xa2f PUSH1 0x5
0xa31 DUP2
0xa32 MSTORE
0xa33 PUSH32 0x302e302e37000000000000000000000000000000000000000000000000000000
0xa54 PUSH1 0x20
0xa56 DUP3
0xa57 ADD
0xa58 MSTORE
0xa59 DUP2
0xa5a JUMP
---
0xa24: JUMPDEST 
0xa25: V854 = 0x40
0xa28: V855 = M[0x40]
0xa2b: V856 = ADD 0x40 V855
0xa2e: M[0x40] = V856
0xa2f: V857 = 0x5
0xa32: M[V855] = 0x5
0xa33: V858 = 0x302e302e37000000000000000000000000000000000000000000000000000000
0xa54: V859 = 0x20
0xa57: V860 = ADD V855 0x20
0xa58: M[V860] = 0x302e302e37000000000000000000000000000000000000000000000000000000
0xa5a: JUMP 0x582
---
Entry stack: [V10, 0x582]
Stack pops: 1
Stack additions: [S0, V855]
Exit stack: [V10, 0x582, V855]

================================

Block 0xa5b
[0xa5b:0xa64]
---
Predecessors: [0x8a4, 0x8ae]
Successors: [0xa65, 0xa6a]
---
0xa5b JUMPDEST
0xa5c PUSH1 0x0
0xa5e DUP2
0xa5f DUP4
0xa60 GT
0xa61 PUSH2 0xa6a
0xa64 JUMPI
---
0xa5b: JUMPDEST 
0xa5c: V861 = 0x0
0xa60: V862 = GT S1 S0
0xa61: V863 = 0xa6a
0xa64: JUMPI 0xa6a V862
---
Entry stack: [V10, 0x3f4, V421, V423, {0x8ae, 0x8bc}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x3f4, V421, V423, {0x8ae, 0x8bc}, S1, S0, 0x0]

================================

Block 0xa65
[0xa65:0xa69]
---
Predecessors: [0xa5b]
Successors: [0xa6c]
---
0xa65 DUP2
0xa66 PUSH2 0xa6c
0xa69 JUMP
---
0xa66: V864 = 0xa6c
0xa69: JUMP 0xa6c
---
Entry stack: [V10, 0x3f4, V421, V423, {0x8ae, 0x8bc}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V10, 0x3f4, V421, V423, {0x8ae, 0x8bc}, S2, S1, 0x0, S1]

================================

Block 0xa6a
[0xa6a:0xa6b]
---
Predecessors: [0xa5b]
Successors: [0xa6c]
---
0xa6a JUMPDEST
0xa6b DUP3
---
0xa6a: JUMPDEST 
---
Entry stack: [V10, 0x3f4, V421, V423, {0x8ae, 0x8bc}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V10, 0x3f4, V421, V423, {0x8ae, 0x8bc}, S2, S1, 0x0, S2]

================================

Block 0xa6c
[0xa6c:0xa6e]
---
Predecessors: [0xa65, 0xa6a]
Successors: [0xa6f]
---
0xa6c JUMPDEST
0xa6d SWAP1
0xa6e POP
---
0xa6c: JUMPDEST 
---
Entry stack: [V10, 0x3f4, V421, V423, {0x8ae, 0x8bc}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x3f4, V421, V423, {0x8ae, 0x8bc}, S3, S2, S0]

================================

Block 0xa6f
[0xa6f:0xa74]
---
Predecessors: [0xa6c]
Successors: [0x8ae, 0x8bc]
---
0xa6f JUMPDEST
0xa70 SWAP3
0xa71 SWAP2
0xa72 POP
0xa73 POP
0xa74 JUMP
---
0xa6f: JUMPDEST 
0xa74: JUMP {0x8ae, 0x8bc}
---
Entry stack: [V10, 0x3f4, V421, V423, {0x8ae, 0x8bc}, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x3f4, V421, V423, S0]

================================

Block 0xa75
[0xa75:0xa82]
---
Predecessors: [0x207]
Successors: [0x3ee, 0xa83]
---
0xa75 JUMPDEST
0xa76 DUP2
0xa77 SLOAD
0xa78 DUP2
0xa79 DUP4
0xa7a SSTORE
0xa7b DUP2
0xa7c DUP2
0xa7d ISZERO
0xa7e GT
0xa7f PUSH2 0x3ee
0xa82 JUMPI
---
0xa75: JUMPDEST 
0xa77: V865 = S[0x8]
0xa7a: S[0x8] = V160
0xa7d: V866 = ISZERO V865
0xa7e: V867 = GT V866 V160
0xa7f: V868 = 0x3ee
0xa82: JUMPI 0x3ee V867
---
Entry stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, V113, S6, 0x8, V158, V160, 0x218, 0x8, V160]
Stack pops: 2
Stack additions: [S1, S0, V865]
Exit stack: [V10, 0x3f4, S13, V113, S11, S10, S9, S8, V113, S6, 0x8, V158, V160, 0x218, 0x8, V160, V865]

================================

Block 0xa83
[0xa83:0xa98]
---
Predecessors: [0xa75]
Successors: [0xab1]
---
0xa83 PUSH1 0x0
0xa85 DUP4
0xa86 DUP2
0xa87 MSTORE
0xa88 PUSH1 0x20
0xa8a SWAP1
0xa8b SHA3
0xa8c PUSH2 0x3ee
0xa8f SWAP2
0xa90 DUP2
0xa91 ADD
0xa92 SWAP1
0xa93 DUP4
0xa94 ADD
0xa95 PUSH2 0xab1
0xa98 JUMP
---
0xa83: V869 = 0x0
0xa87: M[0x0] = 0x8
0xa88: V870 = 0x20
0xa8b: V871 = SHA3 0x0 0x20
0xa8c: V872 = 0x3ee
0xa91: V873 = ADD V871 V865
0xa94: V874 = ADD V160 V871
0xa95: V875 = 0xab1
0xa98: JUMP 0xab1
---
Entry stack: [V10, 0x3f4, S14, V113, S12, S11, S10, S9, V113, S7, 0x8, V158, V160, 0x218, 0x8, V160, V865]
Stack pops: 3
Stack additions: [S2, S1, 0x3ee, V873, V874]
Exit stack: [V10, 0x3f4, S14, V113, S12, S11, S10, S9, V113, S7, 0x8, V158, V160, 0x218, 0x8, V160, 0x3ee, V873, V874]

================================

Block 0xa99
[0xa99:0xa99]
---
Predecessors: []
Successors: [0xa9a]
---
0xa99 JUMPDEST
---
0xa99: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa9a
[0xa9a:0xa9e]
---
Predecessors: [0xa99]
Successors: []
Has unresolved jump.
---
0xa9a JUMPDEST
0xa9b POP
0xa9c POP
0xa9d POP
0xa9e JUMP
---
0xa9a: JUMPDEST 
0xa9e: JUMP S3
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0xa9f
[0xa9f:0xab0]
---
Predecessors: [0x8e8]
Successors: [0x8f0]
---
0xa9f JUMPDEST
0xaa0 PUSH1 0x40
0xaa2 DUP1
0xaa3 MLOAD
0xaa4 PUSH1 0x20
0xaa6 DUP2
0xaa7 ADD
0xaa8 SWAP1
0xaa9 SWAP2
0xaaa MSTORE
0xaab PUSH1 0x0
0xaad DUP2
0xaae MSTORE
0xaaf SWAP1
0xab0 JUMP
---
0xa9f: JUMPDEST 
0xaa0: V876 = 0x40
0xaa3: V877 = M[0x40]
0xaa4: V878 = 0x20
0xaa7: V879 = ADD V877 0x20
0xaaa: M[0x40] = V879
0xaab: V880 = 0x0
0xaae: M[V877] = 0x0
0xab0: JUMP 0x8f0
---
Entry stack: [V10, 0x582, 0x8f0]
Stack pops: 1
Stack additions: [V877]
Exit stack: [V10, 0x582, V877]

================================

Block 0xab1
[0xab1:0xab6]
---
Predecessors: [0xa83]
Successors: [0xab7]
---
0xab1 JUMPDEST
0xab2 PUSH2 0x78a
0xab5 SWAP2
0xab6 SWAP1
---
0xab1: JUMPDEST 
0xab2: V881 = 0x78a
---
Entry stack: [V10, 0x3f4, S16, V113, S14, S13, S12, S11, V113, S9, 0x8, V158, V160, 0x218, 0x8, V160, 0x3ee, V873, V874]
Stack pops: 2
Stack additions: [0x78a, S1, S0]
Exit stack: [V10, 0x3f4, S16, V113, S14, S13, S12, S11, V113, S9, 0x8, V158, V160, 0x218, 0x8, V160, 0x3ee, 0x78a, V873, V874]

================================

Block 0xab7
[0xab7:0xabf]
---
Predecessors: [0xab1, 0xac0]
Successors: [0xac0, 0xacb]
---
0xab7 JUMPDEST
0xab8 DUP1
0xab9 DUP3
0xaba GT
0xabb ISZERO
0xabc PUSH2 0xacb
0xabf JUMPI
---
0xab7: JUMPDEST 
0xaba: V882 = GT V873 S0
0xabb: V883 = ISZERO V882
0xabc: V884 = 0xacb
0xabf: JUMPI 0xacb V883
---
Entry stack: [V10, 0x3f4, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3ee, 0x78a, V873, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x3f4, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3ee, 0x78a, V873, S0]

================================

Block 0xac0
[0xac0:0xaca]
---
Predecessors: [0xab7]
Successors: [0xab7]
---
0xac0 PUSH1 0x0
0xac2 DUP2
0xac3 SSTORE
0xac4 PUSH1 0x1
0xac6 ADD
0xac7 PUSH2 0xab7
0xaca JUMP
---
0xac0: V885 = 0x0
0xac3: S[S0] = 0x0
0xac4: V886 = 0x1
0xac6: V887 = ADD 0x1 S0
0xac7: V888 = 0xab7
0xaca: JUMP 0xab7
---
Entry stack: [V10, 0x3f4, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3ee, 0x78a, V873, S0]
Stack pops: 1
Stack additions: [V887]
Exit stack: [V10, 0x3f4, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3ee, 0x78a, V873, V887]

================================

Block 0xacb
[0xacb:0xace]
---
Predecessors: [0xab7]
Successors: [0x78a]
---
0xacb JUMPDEST
0xacc POP
0xacd SWAP1
0xace JUMP
---
0xacb: JUMPDEST 
0xace: JUMP 0x78a
---
Entry stack: [V10, 0x3f4, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3ee, 0x78a, V873, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x3f4, S17, V113, S15, S14, S13, S12, V113, S10, 0x8, V158, V160, 0x218, 0x8, V160, 0x3ee, V873]

================================

Block 0xacf
[0xacf:0xafd]
---
Predecessors: []
Successors: []
---
0xacf JUMPDEST
0xad0 SWAP1
0xad1 JUMP
0xad2 STOP
0xad3 LOG1
0xad4 PUSH6 0x627a7a723058
0xadb SHA3
0xadc MSTORE
0xadd SMOD
0xade MISSING 0xe
0xadf SWAP16
0xae0 MISSING 0xd
0xae1 MISSING 0xb6
0xae2 MISSING 0x4c
0xae3 STATICCALL
0xae4 PUSH13 0x625ae18a0e2e9b2437c0c5cb0f
0xaf2 MISSING 0xec
0xaf3 MISSING 0xfc
0xaf4 MISSING 0xd
0xaf5 MISSING 0xcc
0xaf6 MISSING 0xd0
0xaf7 DUP1
0xaf8 MISSING 0xec
0xaf9 MISSING 0x2d
0xafa MISSING 0xd2
0xafb MOD
0xafc STOP
0xafd MISSING 0x29
---
0xacf: JUMPDEST 
0xad1: JUMP S1
0xad2: STOP 
0xad3: LOG S0 S1 S2
0xad4: V889 = 0x627a7a723058
0xadb: V890 = SHA3 0x627a7a723058 S3
0xadc: M[V890] = S4
0xadd: V891 = SMOD S5 S6
0xade: MISSING 0xe
0xae0: MISSING 0xd
0xae1: MISSING 0xb6
0xae2: MISSING 0x4c
0xae3: V892 = STATICCALL S0 S1 S2 S3 S4 S5
0xae4: V893 = 0x625ae18a0e2e9b2437c0c5cb0f
0xaf2: MISSING 0xec
0xaf3: MISSING 0xfc
0xaf4: MISSING 0xd
0xaf5: MISSING 0xcc
0xaf6: MISSING 0xd0
0xaf8: MISSING 0xec
0xaf9: MISSING 0x2d
0xafa: MISSING 0xd2
0xafb: V894 = MOD S0 S1
0xafc: STOP 
0xafd: MISSING 0x29
---
Entry stack: []
Stack pops: 15855
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0xe5fc5f
Entry block: 0x3f6
Exit block: 0x412
Body: 0x3f6, 0x3fd, 0x3fe, 0x412, 0x7f2

Function 1:
Public function signature: 0x13af4035
Entry block: 0x424
Exit block: 0x3f4
Body: 0x3f4, 0x424, 0x42b, 0x42c, 0x804, 0x81b, 0x820, 0x849, 0x84a

Function 2:
Public function signature: 0x2d2fe9d4
Entry block: 0x442
Exit block: 0x452
Body: 0x442, 0x449, 0x44a, 0x452, 0x84d

Function 3:
Public function signature: 0x6113611f
Entry block: 0x469
Exit block: 0x452
Body: 0x452, 0x469, 0x470, 0x471, 0x85f

Function 4:
Public function signature: 0x64e08644
Entry block: 0x490
Exit block: 0x452
Body: 0x452, 0x490, 0x497, 0x498, 0x869

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x4b7
Exit block: 0x4c7
Body: 0x4b7, 0x4be, 0x4bf, 0x4c7, 0x879

Function 6:
Public function signature: 0x8fe92aed
Entry block: 0x4e3
Exit block: 0x4ea
Body: 0x412, 0x4e3, 0x4ea, 0x4eb

Function 7:
Public function signature: 0x90fe5609
Entry block: 0x511
Exit block: 0x3f4
Body: 0x3f4, 0x511, 0x518, 0x519, 0x888, 0x89f, 0x8a4, 0x8ae

Function 8:
Public function signature: 0xa201d102
Entry block: 0x529
Exit block: 0x412
Body: 0x412, 0x529, 0x530, 0x531, 0x8ce

Function 9:
Public function signature: 0xa4659ba2
Entry block: 0x54b
Exit block: 0x452
Body: 0x452, 0x54b, 0x552, 0x553, 0x8d4

Function 10:
Public function signature: 0xc19d93fb
Entry block: 0x572
Exit block: 0x3f4
Body: 0x218, 0x226, 0x250, 0x303, 0x30c, 0x312, 0x314, 0x33f, 0x348, 0x349, 0x359, 0x394, 0x3ee, 0x3ef, 0x3f4, 0x572, 0x579, 0x57a, 0x582, 0x5a8, 0x5b6, 0x5c8, 0x5db, 0x5f4, 0x8e8, 0x8f0, 0x8fa, 0x904, 0x905, 0x90e, 0x90f, 0x913, 0x952, 0x95a, 0x96d, 0x97b, 0x98f, 0x998, 0x9a0, 0xa9f

Function 11:
Public function signature: 0xc2a15e7e
Entry block: 0x602
Exit block: 0x612
Body: 0x602, 0x609, 0x60a, 0x612, 0x9a3, 0x9b5, 0x9b9, 0x9c1, 0x9ca, 0x9cb, 0x9d1, 0x9d5, 0x9da

Function 12:
Public function signature: 0xc8dda301
Entry block: 0x632
Exit block: 0x412
Body: 0x412, 0x632, 0x639, 0x63a, 0x9df

Function 13:
Public function signature: 0xcfd94b01
Entry block: 0x654
Exit block: 0x412
Body: 0x412, 0x654, 0x65b, 0x65c, 0x9e5, 0x9e9

Function 14:
Public function signature: 0xda58c7d9
Entry block: 0x676
Exit block: 0x4c7
Body: 0x4c7, 0x676, 0x67d, 0x67e, 0x9ec, 0x9f9, 0x9fa, 0xa08

Function 15:
Public function signature: 0xfc34b908
Entry block: 0x6a5
Exit block: 0x412
Body: 0x412, 0x6a5, 0x6ac, 0x6ad, 0xa1e

Function 16:
Public function signature: 0xffa1ad74
Entry block: 0x6c7
Exit block: 0x5f4
Body: 0x582, 0x5a8, 0x5b6, 0x5c8, 0x5db, 0x5f4, 0x6c7, 0x6ce, 0x6cf, 0xa24

Function 17:
Public fallback function
Entry block: 0xed
Exit block: 0x348
Body: 0xed, 0xf1, 0xf8, 0x100, 0x10a, 0x10b, 0x111, 0x116, 0x183, 0x184, 0x191, 0x192, 0x1a4, 0x1a5, 0x1b6, 0x1dc, 0x1e2, 0x1e7, 0x207, 0x218, 0x226, 0x250, 0x273, 0x27f, 0x288, 0x289, 0x299, 0x2d1, 0x303, 0x30c, 0x312, 0x314, 0x33f, 0x348, 0x349, 0x359, 0x394, 0x3ee, 0x3ef, 0x3f4, 0x582, 0x5a8, 0x5b6, 0x5c8, 0x5db, 0x5f4, 0xa75, 0xa83, 0xab1, 0xab7, 0xac0, 0xacb

Function 18:
Private function
Entry block: 0x757
Exit block: 0x78c
Body: 0x757, 0x762, 0x768, 0x76e, 0x775, 0x77f, 0x786, 0x78a, 0x78b, 0x78c

Function 19:
Private function
Entry block: 0xa5b
Exit block: 0xa6f
Body: 0xa5b, 0xa65, 0xa6a, 0xa6c, 0xa6f

Function 20:
Private function
Entry block: 0x78f
Exit block: 0x7ec
Body: 0x78f, 0x7b8, 0x7c0, 0x7d0, 0x7d8, 0x7e6, 0x7ea, 0x7eb, 0x7ec

