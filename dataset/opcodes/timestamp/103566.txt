args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/4/103566.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x93]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x93
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x93
0xa: JUMPI 0x93 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x21d]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x21d
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x21d
0x24: JUMPI 0x21d V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x232]
---
0x25 DUP1
0x26 PUSH4 0x92e1df6
0x2b EQ
0x2c PUSH2 0x232
0x2f JUMPI
---
0x26: V16 = 0x92e1df6
0x2b: V17 = EQ 0x92e1df6 V12
0x2c: V18 = 0x232
0x2f: JUMPI 0x232 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x248]
---
0x30 DUP1
0x31 PUSH4 0x8da5cb5b
0x36 EQ
0x37 PUSH2 0x248
0x3a JUMPI
---
0x31: V19 = 0x8da5cb5b
0x36: V20 = EQ 0x8da5cb5b V12
0x37: V21 = 0x248
0x3a: JUMPI 0x248 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x277]
---
0x3b DUP1
0x3c PUSH4 0x8e911839
0x41 EQ
0x42 PUSH2 0x277
0x45 JUMPI
---
0x3c: V22 = 0x8e911839
0x41: V23 = EQ 0x8e911839 V12
0x42: V24 = 0x277
0x45: JUMPI 0x277 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x29c]
---
0x46 DUP1
0x47 PUSH4 0xa48a1b41
0x4c EQ
0x4d PUSH2 0x29c
0x50 JUMPI
---
0x47: V25 = 0xa48a1b41
0x4c: V26 = EQ 0xa48a1b41 V12
0x4d: V27 = 0x29c
0x50: JUMPI 0x29c V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x2bb]
---
0x51 DUP1
0x52 PUSH4 0xaad7c2ea
0x57 EQ
0x58 PUSH2 0x2bb
0x5b JUMPI
---
0x52: V28 = 0xaad7c2ea
0x57: V29 = EQ 0xaad7c2ea V12
0x58: V30 = 0x2bb
0x5b: JUMPI 0x2bb V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x2ce]
---
0x5c DUP1
0x5d PUSH4 0xad2f7ebb
0x62 EQ
0x63 PUSH2 0x2ce
0x66 JUMPI
---
0x5d: V31 = 0xad2f7ebb
0x62: V32 = EQ 0xad2f7ebb V12
0x63: V33 = 0x2ce
0x66: JUMPI 0x2ce V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x2f5]
---
0x67 DUP1
0x68 PUSH4 0xb308b512
0x6d EQ
0x6e PUSH2 0x2f5
0x71 JUMPI
---
0x68: V34 = 0xb308b512
0x6d: V35 = EQ 0xb308b512 V12
0x6e: V36 = 0x2f5
0x71: JUMPI 0x2f5 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x308]
---
0x72 DUP1
0x73 PUSH4 0xc6f221aa
0x78 EQ
0x79 PUSH2 0x308
0x7c JUMPI
---
0x73: V37 = 0xc6f221aa
0x78: V38 = EQ 0xc6f221aa V12
0x79: V39 = 0x308
0x7c: JUMPI 0x308 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x31b]
---
0x7d DUP1
0x7e PUSH4 0xd424f628
0x83 EQ
0x84 PUSH2 0x31b
0x87 JUMPI
---
0x7e: V40 = 0xd424f628
0x83: V41 = EQ 0xd424f628 V12
0x84: V42 = 0x31b
0x87: JUMPI 0x31b V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x32e]
---
0x88 DUP1
0x89 PUSH4 0xee3b09ca
0x8e EQ
0x8f PUSH2 0x32e
0x92 JUMPI
---
0x89: V43 = 0xee3b09ca
0x8e: V44 = EQ 0xee3b09ca V12
0x8f: V45 = 0x32e
0x92: JUMPI 0x32e V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0xa8]
---
Predecessors: [0x0, 0x88]
Successors: [0xa9, 0xad]
---
0x93 JUMPDEST
0x94 PUSH1 0x8
0x96 SLOAD
0x97 PUSH1 0x0
0x99 SWAP1
0x9a DUP2
0x9b SWAP1
0x9c PUSH2 0x100
0x9f SWAP1
0xa0 DIV
0xa1 PUSH1 0xff
0xa3 AND
0xa4 ISZERO
0xa5 PUSH2 0xad
0xa8 JUMPI
---
0x93: JUMPDEST 
0x94: V46 = 0x8
0x96: V47 = S[0x8]
0x97: V48 = 0x0
0x9c: V49 = 0x100
0xa0: V50 = DIV V47 0x100
0xa1: V51 = 0xff
0xa3: V52 = AND 0xff V50
0xa4: V53 = ISZERO V52
0xa5: V54 = 0xad
0xa8: JUMPI 0xad V53
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x0, 0x0]

================================

Block 0xa9
[0xa9:0xac]
---
Predecessors: [0x93]
Successors: []
---
0xa9 PUSH1 0x0
0xab DUP1
0xac REVERT
---
0xa9: V55 = 0x0
0xac: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0]

================================

Block 0xad
[0xad:0xbb]
---
Predecessors: [0x93]
Successors: [0xbc, 0xbd]
---
0xad JUMPDEST
0xae CALLVALUE
0xaf SWAP2
0xb0 POP
0xb1 PUSH1 0x4
0xb3 SLOAD
0xb4 DUP3
0xb5 DUP2
0xb6 ISZERO
0xb7 ISZERO
0xb8 PUSH2 0xbd
0xbb JUMPI
---
0xad: JUMPDEST 
0xae: V56 = CALLVALUE
0xb1: V57 = 0x4
0xb3: V58 = S[0x4]
0xb6: V59 = ISZERO V58
0xb7: V60 = ISZERO V59
0xb8: V61 = 0xbd
0xbb: JUMPI 0xbd V60
---
Entry stack: [V12, 0x0, 0x0]
Stack pops: 2
Stack additions: [V56, S0, V58, V56]
Exit stack: [V12, V56, 0x0, V58, V56]

================================

Block 0xbc
[0xbc:0xbc]
---
Predecessors: [0xad]
Successors: []
---
0xbc INVALID
---
0xbc: INVALID 
---
Entry stack: [V12, V56, 0x0, V58, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V56, 0x0, V58, V56]

================================

Block 0xbd
[0xbd:0xc0]
---
Predecessors: [0xad]
Successors: [0xc1]
---
0xbd JUMPDEST
0xbe DIV
0xbf SWAP1
0xc0 POP
---
0xbd: JUMPDEST 
0xbe: V62 = DIV V56 V58
---
Entry stack: [V12, V56, 0x0, V58, V56]
Stack pops: 3
Stack additions: [V62]
Exit stack: [V12, V56, V62]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xbd, 0x11b]
Successors: [0xcc, 0x12e]
---
0xc1 JUMPDEST
0xc2 PUSH1 0x5
0xc4 SLOAD
0xc5 DUP2
0xc6 GT
0xc7 ISZERO
0xc8 PUSH2 0x12e
0xcb JUMPI
---
0xc1: JUMPDEST 
0xc2: V63 = 0x5
0xc4: V64 = S[0x5]
0xc6: V65 = GT V62 V64
0xc7: V66 = ISZERO V65
0xc8: V67 = 0x12e
0xcb: JUMPI 0x12e V66
---
Entry stack: [V12, V56, V62]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V56, V62]

================================

Block 0xcc
[0xcc:0x105]
---
Predecessors: [0xc1]
Successors: [0x106, 0x10a]
---
0xcc PUSH1 0x6
0xce SLOAD
0xcf PUSH1 0x1
0xd1 PUSH1 0xa0
0xd3 PUSH1 0x2
0xd5 EXP
0xd6 SUB
0xd7 AND
0xd8 PUSH4 0x134d22a8
0xdd PUSH1 0x40
0xdf MLOAD
0xe0 DUP2
0xe1 PUSH4 0xffffffff
0xe6 AND
0xe7 PUSH1 0xe0
0xe9 PUSH1 0x2
0xeb EXP
0xec MUL
0xed DUP2
0xee MSTORE
0xef PUSH1 0x4
0xf1 ADD
0xf2 PUSH1 0x0
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP1
0xf8 DUP4
0xf9 SUB
0xfa DUP2
0xfb PUSH1 0x0
0xfd DUP8
0xfe DUP1
0xff EXTCODESIZE
0x100 ISZERO
0x101 ISZERO
0x102 PUSH2 0x10a
0x105 JUMPI
---
0xcc: V68 = 0x6
0xce: V69 = S[0x6]
0xcf: V70 = 0x1
0xd1: V71 = 0xa0
0xd3: V72 = 0x2
0xd5: V73 = EXP 0x2 0xa0
0xd6: V74 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd7: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0xd8: V76 = 0x134d22a8
0xdd: V77 = 0x40
0xdf: V78 = M[0x40]
0xe1: V79 = 0xffffffff
0xe6: V80 = AND 0xffffffff 0x134d22a8
0xe7: V81 = 0xe0
0xe9: V82 = 0x2
0xeb: V83 = EXP 0x2 0xe0
0xec: V84 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x134d22a8
0xee: M[V78] = 0x134d22a800000000000000000000000000000000000000000000000000000000
0xef: V85 = 0x4
0xf1: V86 = ADD 0x4 V78
0xf2: V87 = 0x0
0xf4: V88 = 0x40
0xf6: V89 = M[0x40]
0xf9: V90 = SUB V86 V89
0xfb: V91 = 0x0
0xff: V92 = EXTCODESIZE V75
0x100: V93 = ISZERO V92
0x101: V94 = ISZERO V93
0x102: V95 = 0x10a
0x105: JUMPI 0x10a V94
---
Entry stack: [V12, V56, V62]
Stack pops: 0
Stack additions: [V75, 0x134d22a8, V86, 0x0, V89, V90, V89, 0x0, V75]
Exit stack: [V12, V56, V62, V75, 0x134d22a8, V86, 0x0, V89, V90, V89, 0x0, V75]

================================

Block 0x106
[0x106:0x109]
---
Predecessors: [0xcc]
Successors: []
---
0x106 PUSH1 0x0
0x108 DUP1
0x109 REVERT
---
0x106: V96 = 0x0
0x109: REVERT 0x0 0x0
---
Entry stack: [V12, V56, V62, V75, 0x134d22a8, V86, 0x0, V89, V90, V89, 0x0, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V56, V62, V75, 0x134d22a8, V86, 0x0, V89, V90, V89, 0x0, V75]

================================

Block 0x10a
[0x10a:0x116]
---
Predecessors: [0xcc]
Successors: [0x117, 0x11b]
---
0x10a JUMPDEST
0x10b PUSH2 0x2c6
0x10e GAS
0x10f SUB
0x110 CALL
0x111 ISZERO
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0x10a: JUMPDEST 
0x10b: V97 = 0x2c6
0x10e: V98 = GAS
0x10f: V99 = SUB V98 0x2c6
0x110: V100 = CALL V99 V75 0x0 V89 V90 V89 0x0
0x111: V101 = ISZERO V100
0x112: V102 = ISZERO V101
0x113: V103 = 0x11b
0x116: JUMPI 0x11b V102
---
Entry stack: [V12, V56, V62, V75, 0x134d22a8, V86, 0x0, V89, V90, V89, 0x0, V75]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V56, V62, V75, 0x134d22a8, V86]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x10a]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V104 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V12, V56, V62, V75, 0x134d22a8, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V56, V62, V75, 0x134d22a8, V86]

================================

Block 0x11b
[0x11b:0x12d]
---
Predecessors: [0x10a]
Successors: [0xc1]
---
0x11b JUMPDEST
0x11c POP
0x11d POP
0x11e PUSH1 0x5
0x120 DUP1
0x121 SLOAD
0x122 PUSH3 0xbde31
0x126 ADD
0x127 SWAP1
0x128 SSTORE
0x129 POP
0x12a PUSH2 0xc1
0x12d JUMP
---
0x11b: JUMPDEST 
0x11e: V105 = 0x5
0x121: V106 = S[0x5]
0x122: V107 = 0xbde31
0x126: V108 = ADD 0xbde31 V106
0x128: S[0x5] = V108
0x12a: V109 = 0xc1
0x12d: JUMP 0xc1
---
Entry stack: [V12, V56, V62, V75, 0x134d22a8, V86]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V56, V62]

================================

Block 0x12e
[0x12e:0x1ac]
---
Predecessors: [0xc1]
Successors: [0x1ad, 0x1b1]
---
0x12e JUMPDEST
0x12f CALLER
0x130 PUSH1 0x1
0x132 PUSH1 0xa0
0x134 PUSH1 0x2
0x136 EXP
0x137 SUB
0x138 DUP2
0x139 DUP2
0x13a AND
0x13b PUSH1 0x0
0x13d SWAP1
0x13e DUP2
0x13f MSTORE
0x140 PUSH1 0x7
0x142 PUSH1 0x20
0x144 MSTORE
0x145 PUSH1 0x40
0x147 SWAP1
0x148 DUP2
0x149 SWAP1
0x14a SHA3
0x14b DUP1
0x14c SLOAD
0x14d DUP7
0x14e ADD
0x14f SWAP1
0x150 SSTORE
0x151 PUSH1 0x2
0x153 DUP1
0x154 SLOAD
0x155 DUP7
0x156 ADD
0x157 SWAP1
0x158 SSTORE
0x159 PUSH1 0x5
0x15b DUP1
0x15c SLOAD
0x15d DUP6
0x15e SWAP1
0x15f SUB
0x160 SWAP1
0x161 SSTORE
0x162 PUSH1 0x6
0x164 SLOAD
0x165 SWAP1
0x166 SWAP2
0x167 AND
0x168 SWAP2
0x169 PUSH4 0xa9059cbb
0x16e SWAP2
0x16f DUP5
0x170 SWAP1
0x171 MLOAD
0x172 PUSH1 0xe0
0x174 PUSH1 0x2
0x176 EXP
0x177 PUSH4 0xffffffff
0x17c DUP6
0x17d AND
0x17e MUL
0x17f DUP2
0x180 MSTORE
0x181 PUSH1 0x1
0x183 PUSH1 0xa0
0x185 PUSH1 0x2
0x187 EXP
0x188 SUB
0x189 SWAP1
0x18a SWAP3
0x18b AND
0x18c PUSH1 0x4
0x18e DUP4
0x18f ADD
0x190 MSTORE
0x191 PUSH1 0x24
0x193 DUP3
0x194 ADD
0x195 MSTORE
0x196 PUSH1 0x44
0x198 ADD
0x199 PUSH1 0x0
0x19b PUSH1 0x40
0x19d MLOAD
0x19e DUP1
0x19f DUP4
0x1a0 SUB
0x1a1 DUP2
0x1a2 PUSH1 0x0
0x1a4 DUP8
0x1a5 DUP1
0x1a6 EXTCODESIZE
0x1a7 ISZERO
0x1a8 ISZERO
0x1a9 PUSH2 0x1b1
0x1ac JUMPI
---
0x12e: JUMPDEST 
0x12f: V110 = CALLER
0x130: V111 = 0x1
0x132: V112 = 0xa0
0x134: V113 = 0x2
0x136: V114 = EXP 0x2 0xa0
0x137: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13a: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x13b: V117 = 0x0
0x13f: M[0x0] = V116
0x140: V118 = 0x7
0x142: V119 = 0x20
0x144: M[0x20] = 0x7
0x145: V120 = 0x40
0x14a: V121 = SHA3 0x0 0x40
0x14c: V122 = S[V121]
0x14e: V123 = ADD V56 V122
0x150: S[V121] = V123
0x151: V124 = 0x2
0x154: V125 = S[0x2]
0x156: V126 = ADD V56 V125
0x158: S[0x2] = V126
0x159: V127 = 0x5
0x15c: V128 = S[0x5]
0x15f: V129 = SUB V128 V62
0x161: S[0x5] = V129
0x162: V130 = 0x6
0x164: V131 = S[0x6]
0x167: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x169: V133 = 0xa9059cbb
0x171: V134 = M[0x40]
0x172: V135 = 0xe0
0x174: V136 = 0x2
0x176: V137 = EXP 0x2 0xe0
0x177: V138 = 0xffffffff
0x17d: V139 = AND 0xa9059cbb 0xffffffff
0x17e: V140 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x180: M[V134] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x181: V141 = 0x1
0x183: V142 = 0xa0
0x185: V143 = 0x2
0x187: V144 = EXP 0x2 0xa0
0x188: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18b: V146 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V147 = 0x4
0x18f: V148 = ADD V134 0x4
0x190: M[V148] = V146
0x191: V149 = 0x24
0x194: V150 = ADD V134 0x24
0x195: M[V150] = V62
0x196: V151 = 0x44
0x198: V152 = ADD 0x44 V134
0x199: V153 = 0x0
0x19b: V154 = 0x40
0x19d: V155 = M[0x40]
0x1a0: V156 = SUB V152 V155
0x1a2: V157 = 0x0
0x1a6: V158 = EXTCODESIZE V132
0x1a7: V159 = ISZERO V158
0x1a8: V160 = ISZERO V159
0x1a9: V161 = 0x1b1
0x1ac: JUMPI 0x1b1 V160
---
Entry stack: [V12, V56, V62]
Stack pops: 2
Stack additions: [S1, S0, V132, 0xa9059cbb, V152, 0x0, V155, V156, V155, 0x0, V132]
Exit stack: [V12, V56, V62, V132, 0xa9059cbb, V152, 0x0, V155, V156, V155, 0x0, V132]

================================

Block 0x1ad
[0x1ad:0x1b0]
---
Predecessors: [0x12e]
Successors: []
---
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 REVERT
---
0x1ad: V162 = 0x0
0x1b0: REVERT 0x0 0x0
---
Entry stack: [V12, V56, V62, V132, 0xa9059cbb, V152, 0x0, V155, V156, V155, 0x0, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V56, V62, V132, 0xa9059cbb, V152, 0x0, V155, V156, V155, 0x0, V132]

================================

Block 0x1b1
[0x1b1:0x1bd]
---
Predecessors: [0x12e]
Successors: [0x1be, 0x1c2]
---
0x1b1 JUMPDEST
0x1b2 PUSH2 0x2c6
0x1b5 GAS
0x1b6 SUB
0x1b7 CALL
0x1b8 ISZERO
0x1b9 ISZERO
0x1ba PUSH2 0x1c2
0x1bd JUMPI
---
0x1b1: JUMPDEST 
0x1b2: V163 = 0x2c6
0x1b5: V164 = GAS
0x1b6: V165 = SUB V164 0x2c6
0x1b7: V166 = CALL V165 V132 0x0 V155 V156 V155 0x0
0x1b8: V167 = ISZERO V166
0x1b9: V168 = ISZERO V167
0x1ba: V169 = 0x1c2
0x1bd: JUMPI 0x1c2 V168
---
Entry stack: [V12, V56, V62, V132, 0xa9059cbb, V152, 0x0, V155, V156, V155, 0x0, V132]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V56, V62, V132, 0xa9059cbb, V152]

================================

Block 0x1be
[0x1be:0x1c1]
---
Predecessors: [0x1b1]
Successors: []
---
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 REVERT
---
0x1be: V170 = 0x0
0x1c1: REVERT 0x0 0x0
---
Entry stack: [V12, V56, V62, V132, 0xa9059cbb, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V56, V62, V132, 0xa9059cbb, V152]

================================

Block 0x1c2
[0x1c2:0x21c]
---
Predecessors: [0x1b1]
Successors: []
---
0x1c2 JUMPDEST
0x1c3 POP
0x1c4 POP
0x1c5 POP
0x1c6 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1e7 CALLER
0x1e8 DUP4
0x1e9 PUSH1 0x1
0x1eb PUSH1 0x40
0x1ed MLOAD
0x1ee PUSH1 0x1
0x1f0 PUSH1 0xa0
0x1f2 PUSH1 0x2
0x1f4 EXP
0x1f5 SUB
0x1f6 SWAP1
0x1f7 SWAP4
0x1f8 AND
0x1f9 DUP4
0x1fa MSTORE
0x1fb PUSH1 0x20
0x1fd DUP4
0x1fe ADD
0x1ff SWAP2
0x200 SWAP1
0x201 SWAP2
0x202 MSTORE
0x203 ISZERO
0x204 ISZERO
0x205 PUSH1 0x40
0x207 DUP1
0x208 DUP4
0x209 ADD
0x20a SWAP2
0x20b SWAP1
0x20c SWAP2
0x20d MSTORE
0x20e PUSH1 0x60
0x210 SWAP1
0x211 SWAP2
0x212 ADD
0x213 SWAP1
0x214 MLOAD
0x215 DUP1
0x216 SWAP2
0x217 SUB
0x218 SWAP1
0x219 LOG1
0x21a POP
0x21b POP
0x21c STOP
---
0x1c2: JUMPDEST 
0x1c6: V171 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1e7: V172 = CALLER
0x1e9: V173 = 0x1
0x1eb: V174 = 0x40
0x1ed: V175 = M[0x40]
0x1ee: V176 = 0x1
0x1f0: V177 = 0xa0
0x1f2: V178 = 0x2
0x1f4: V179 = EXP 0x2 0xa0
0x1f5: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f8: V181 = AND V172 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: M[V175] = V181
0x1fb: V182 = 0x20
0x1fe: V183 = ADD V175 0x20
0x202: M[V183] = V56
0x203: V184 = ISZERO 0x1
0x204: V185 = ISZERO 0x0
0x205: V186 = 0x40
0x209: V187 = ADD V175 0x40
0x20d: M[V187] = 0x1
0x20e: V188 = 0x60
0x212: V189 = ADD V175 0x60
0x214: V190 = M[0x40]
0x217: V191 = SUB V189 V190
0x219: LOG V190 V191 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x21c: STOP 
---
Entry stack: [V12, V56, V62, V132, 0xa9059cbb, V152]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x21d
[0x21d:0x223]
---
Predecessors: [0xb]
Successors: [0x224, 0x228]
---
0x21d JUMPDEST
0x21e CALLVALUE
0x21f ISZERO
0x220 PUSH2 0x228
0x223 JUMPI
---
0x21d: JUMPDEST 
0x21e: V192 = CALLVALUE
0x21f: V193 = ISZERO V192
0x220: V194 = 0x228
0x223: JUMPI 0x228 V193
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x224
[0x224:0x227]
---
Predecessors: [0x21d]
Successors: []
---
0x224 PUSH1 0x0
0x226 DUP1
0x227 REVERT
---
0x224: V195 = 0x0
0x227: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x228
[0x228:0x22f]
---
Predecessors: [0x21d]
Successors: [0x341]
---
0x228 JUMPDEST
0x229 PUSH2 0x230
0x22c PUSH2 0x341
0x22f JUMP
---
0x228: JUMPDEST 
0x229: V196 = 0x230
0x22c: V197 = 0x341
0x22f: JUMP 0x341
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x230]
Exit stack: [V12, 0x230]

================================

Block 0x230
[0x230:0x231]
---
Predecessors: [0x3e9, 0x406]
Successors: []
---
0x230 JUMPDEST
0x231 STOP
---
0x230: JUMPDEST 
0x231: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x232
[0x232:0x238]
---
Predecessors: [0x25]
Successors: [0x239, 0x23d]
---
0x232 JUMPDEST
0x233 CALLVALUE
0x234 ISZERO
0x235 PUSH2 0x23d
0x238 JUMPI
---
0x232: JUMPDEST 
0x233: V198 = CALLVALUE
0x234: V199 = ISZERO V198
0x235: V200 = 0x23d
0x238: JUMPI 0x23d V199
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x239
[0x239:0x23c]
---
Predecessors: [0x232]
Successors: []
---
0x239 PUSH1 0x0
0x23b DUP1
0x23c REVERT
---
0x239: V201 = 0x0
0x23c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23d
[0x23d:0x247]
---
Predecessors: [0x232]
Successors: [0x3eb]
---
0x23d JUMPDEST
0x23e PUSH2 0x230
0x241 PUSH1 0x4
0x243 CALLDATALOAD
0x244 PUSH2 0x3eb
0x247 JUMP
---
0x23d: JUMPDEST 
0x23e: V202 = 0x230
0x241: V203 = 0x4
0x243: V204 = CALLDATALOAD 0x4
0x244: V205 = 0x3eb
0x247: JUMP 0x3eb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x230, V204]
Exit stack: [V12, 0x230, V204]

================================

Block 0x248
[0x248:0x24e]
---
Predecessors: [0x30]
Successors: [0x24f, 0x253]
---
0x248 JUMPDEST
0x249 CALLVALUE
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x248: JUMPDEST 
0x249: V206 = CALLVALUE
0x24a: V207 = ISZERO V206
0x24b: V208 = 0x253
0x24e: JUMPI 0x253 V207
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x248]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V209 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x253
[0x253:0x25a]
---
Predecessors: [0x248]
Successors: [0x40b]
---
0x253 JUMPDEST
0x254 PUSH2 0x25b
0x257 PUSH2 0x40b
0x25a JUMP
---
0x253: JUMPDEST 
0x254: V210 = 0x25b
0x257: V211 = 0x40b
0x25a: JUMP 0x40b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x25b]
Exit stack: [V12, 0x25b]

================================

Block 0x25b
[0x25b:0x276]
---
Predecessors: [0x40b, 0x432]
Successors: []
---
0x25b JUMPDEST
0x25c PUSH1 0x40
0x25e MLOAD
0x25f PUSH1 0x1
0x261 PUSH1 0xa0
0x263 PUSH1 0x2
0x265 EXP
0x266 SUB
0x267 SWAP1
0x268 SWAP2
0x269 AND
0x26a DUP2
0x26b MSTORE
0x26c PUSH1 0x20
0x26e ADD
0x26f PUSH1 0x40
0x271 MLOAD
0x272 DUP1
0x273 SWAP2
0x274 SUB
0x275 SWAP1
0x276 RETURN
---
0x25b: JUMPDEST 
0x25c: V212 = 0x40
0x25e: V213 = M[0x40]
0x25f: V214 = 0x1
0x261: V215 = 0xa0
0x263: V216 = 0x2
0x265: V217 = EXP 0x2 0xa0
0x266: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x269: V219 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x26b: M[V213] = V219
0x26c: V220 = 0x20
0x26e: V221 = ADD 0x20 V213
0x26f: V222 = 0x40
0x271: V223 = M[0x40]
0x274: V224 = SUB V221 V223
0x276: RETURN V223 V224
---
Entry stack: [V12, 0x25b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x25b]

================================

Block 0x277
[0x277:0x27d]
---
Predecessors: [0x3b]
Successors: [0x27e, 0x282]
---
0x277 JUMPDEST
0x278 CALLVALUE
0x279 ISZERO
0x27a PUSH2 0x282
0x27d JUMPI
---
0x277: JUMPDEST 
0x278: V225 = CALLVALUE
0x279: V226 = ISZERO V225
0x27a: V227 = 0x282
0x27d: JUMPI 0x282 V226
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27e
[0x27e:0x281]
---
Predecessors: [0x277]
Successors: []
---
0x27e PUSH1 0x0
0x280 DUP1
0x281 REVERT
---
0x27e: V228 = 0x0
0x281: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x282
[0x282:0x289]
---
Predecessors: [0x277]
Successors: [0x41a]
---
0x282 JUMPDEST
0x283 PUSH2 0x28a
0x286 PUSH2 0x41a
0x289 JUMP
---
0x282: JUMPDEST 
0x283: V229 = 0x28a
0x286: V230 = 0x41a
0x289: JUMP 0x41a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28a]
Exit stack: [V12, 0x28a]

================================

Block 0x28a
[0x28a:0x29b]
---
Predecessors: [0x41a, 0x420, 0x44f, 0x455, 0x464]
Successors: []
---
0x28a JUMPDEST
0x28b PUSH1 0x40
0x28d MLOAD
0x28e SWAP1
0x28f DUP2
0x290 MSTORE
0x291 PUSH1 0x20
0x293 ADD
0x294 PUSH1 0x40
0x296 MLOAD
0x297 DUP1
0x298 SWAP2
0x299 SUB
0x29a SWAP1
0x29b RETURN
---
0x28a: JUMPDEST 
0x28b: V231 = 0x40
0x28d: V232 = M[0x40]
0x290: M[V232] = S0
0x291: V233 = 0x20
0x293: V234 = ADD 0x20 V232
0x294: V235 = 0x40
0x296: V236 = M[0x40]
0x299: V237 = SUB V234 V236
0x29b: RETURN V236 V237
---
Entry stack: [V12, 0x28a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x28a]

================================

Block 0x29c
[0x29c:0x2a2]
---
Predecessors: [0x46]
Successors: [0x2a3, 0x2a7]
---
0x29c JUMPDEST
0x29d CALLVALUE
0x29e ISZERO
0x29f PUSH2 0x2a7
0x2a2 JUMPI
---
0x29c: JUMPDEST 
0x29d: V238 = CALLVALUE
0x29e: V239 = ISZERO V238
0x29f: V240 = 0x2a7
0x2a2: JUMPI 0x2a7 V239
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a3
[0x2a3:0x2a6]
---
Predecessors: [0x29c]
Successors: []
---
0x2a3 PUSH1 0x0
0x2a5 DUP1
0x2a6 REVERT
---
0x2a3: V241 = 0x0
0x2a6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a7
[0x2a7:0x2ba]
---
Predecessors: [0x29c]
Successors: [0x420]
---
0x2a7 JUMPDEST
0x2a8 PUSH2 0x28a
0x2ab PUSH1 0x1
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SUB
0x2b3 PUSH1 0x4
0x2b5 CALLDATALOAD
0x2b6 AND
0x2b7 PUSH2 0x420
0x2ba JUMP
---
0x2a7: JUMPDEST 
0x2a8: V242 = 0x28a
0x2ab: V243 = 0x1
0x2ad: V244 = 0xa0
0x2af: V245 = 0x2
0x2b1: V246 = EXP 0x2 0xa0
0x2b2: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b3: V248 = 0x4
0x2b5: V249 = CALLDATALOAD 0x4
0x2b6: V250 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V251 = 0x420
0x2ba: JUMP 0x420
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28a, V250]
Exit stack: [V12, 0x28a, V250]

================================

Block 0x2bb
[0x2bb:0x2c1]
---
Predecessors: [0x51]
Successors: [0x2c2, 0x2c6]
---
0x2bb JUMPDEST
0x2bc CALLVALUE
0x2bd ISZERO
0x2be PUSH2 0x2c6
0x2c1 JUMPI
---
0x2bb: JUMPDEST 
0x2bc: V252 = CALLVALUE
0x2bd: V253 = ISZERO V252
0x2be: V254 = 0x2c6
0x2c1: JUMPI 0x2c6 V253
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c2
[0x2c2:0x2c5]
---
Predecessors: [0x2bb]
Successors: []
---
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 REVERT
---
0x2c2: V255 = 0x0
0x2c5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c6
[0x2c6:0x2cd]
---
Predecessors: [0x2bb]
Successors: [0x432]
---
0x2c6 JUMPDEST
0x2c7 PUSH2 0x25b
0x2ca PUSH2 0x432
0x2cd JUMP
---
0x2c6: JUMPDEST 
0x2c7: V256 = 0x25b
0x2ca: V257 = 0x432
0x2cd: JUMP 0x432
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x25b]
Exit stack: [V12, 0x25b]

================================

Block 0x2ce
[0x2ce:0x2d4]
---
Predecessors: [0x5c]
Successors: [0x2d5, 0x2d9]
---
0x2ce JUMPDEST
0x2cf CALLVALUE
0x2d0 ISZERO
0x2d1 PUSH2 0x2d9
0x2d4 JUMPI
---
0x2ce: JUMPDEST 
0x2cf: V258 = CALLVALUE
0x2d0: V259 = ISZERO V258
0x2d1: V260 = 0x2d9
0x2d4: JUMPI 0x2d9 V259
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d5
[0x2d5:0x2d8]
---
Predecessors: [0x2ce]
Successors: []
---
0x2d5 PUSH1 0x0
0x2d7 DUP1
0x2d8 REVERT
---
0x2d5: V261 = 0x0
0x2d8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d9
[0x2d9:0x2e0]
---
Predecessors: [0x2ce]
Successors: [0x441]
---
0x2d9 JUMPDEST
0x2da PUSH2 0x2e1
0x2dd PUSH2 0x441
0x2e0 JUMP
---
0x2d9: JUMPDEST 
0x2da: V262 = 0x2e1
0x2dd: V263 = 0x441
0x2e0: JUMP 0x441
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2e1]
Exit stack: [V12, 0x2e1]

================================

Block 0x2e1
[0x2e1:0x2f4]
---
Predecessors: [0x441, 0x45b]
Successors: []
---
0x2e1 JUMPDEST
0x2e2 PUSH1 0x40
0x2e4 MLOAD
0x2e5 SWAP1
0x2e6 ISZERO
0x2e7 ISZERO
0x2e8 DUP2
0x2e9 MSTORE
0x2ea PUSH1 0x20
0x2ec ADD
0x2ed PUSH1 0x40
0x2ef MLOAD
0x2f0 DUP1
0x2f1 SWAP2
0x2f2 SUB
0x2f3 SWAP1
0x2f4 RETURN
---
0x2e1: JUMPDEST 
0x2e2: V264 = 0x40
0x2e4: V265 = M[0x40]
0x2e6: V266 = ISZERO S0
0x2e7: V267 = ISZERO V266
0x2e9: M[V265] = V267
0x2ea: V268 = 0x20
0x2ec: V269 = ADD 0x20 V265
0x2ed: V270 = 0x40
0x2ef: V271 = M[0x40]
0x2f2: V272 = SUB V269 V271
0x2f4: RETURN V271 V272
---
Entry stack: [V12, 0x2e1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2e1]

================================

Block 0x2f5
[0x2f5:0x2fb]
---
Predecessors: [0x67]
Successors: [0x2fc, 0x300]
---
0x2f5 JUMPDEST
0x2f6 CALLVALUE
0x2f7 ISZERO
0x2f8 PUSH2 0x300
0x2fb JUMPI
---
0x2f5: JUMPDEST 
0x2f6: V273 = CALLVALUE
0x2f7: V274 = ISZERO V273
0x2f8: V275 = 0x300
0x2fb: JUMPI 0x300 V274
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fc
[0x2fc:0x2ff]
---
Predecessors: [0x2f5]
Successors: []
---
0x2fc PUSH1 0x0
0x2fe DUP1
0x2ff REVERT
---
0x2fc: V276 = 0x0
0x2ff: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x300
[0x300:0x307]
---
Predecessors: [0x2f5]
Successors: [0x44f]
---
0x300 JUMPDEST
0x301 PUSH2 0x28a
0x304 PUSH2 0x44f
0x307 JUMP
---
0x300: JUMPDEST 
0x301: V277 = 0x28a
0x304: V278 = 0x44f
0x307: JUMP 0x44f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28a]
Exit stack: [V12, 0x28a]

================================

Block 0x308
[0x308:0x30e]
---
Predecessors: [0x72]
Successors: [0x30f, 0x313]
---
0x308 JUMPDEST
0x309 CALLVALUE
0x30a ISZERO
0x30b PUSH2 0x313
0x30e JUMPI
---
0x308: JUMPDEST 
0x309: V279 = CALLVALUE
0x30a: V280 = ISZERO V279
0x30b: V281 = 0x313
0x30e: JUMPI 0x313 V280
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x30f
[0x30f:0x312]
---
Predecessors: [0x308]
Successors: []
---
0x30f PUSH1 0x0
0x311 DUP1
0x312 REVERT
---
0x30f: V282 = 0x0
0x312: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x313
[0x313:0x31a]
---
Predecessors: [0x308]
Successors: [0x455]
---
0x313 JUMPDEST
0x314 PUSH2 0x28a
0x317 PUSH2 0x455
0x31a JUMP
---
0x313: JUMPDEST 
0x314: V283 = 0x28a
0x317: V284 = 0x455
0x31a: JUMP 0x455
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28a]
Exit stack: [V12, 0x28a]

================================

Block 0x31b
[0x31b:0x321]
---
Predecessors: [0x7d]
Successors: [0x322, 0x326]
---
0x31b JUMPDEST
0x31c CALLVALUE
0x31d ISZERO
0x31e PUSH2 0x326
0x321 JUMPI
---
0x31b: JUMPDEST 
0x31c: V285 = CALLVALUE
0x31d: V286 = ISZERO V285
0x31e: V287 = 0x326
0x321: JUMPI 0x326 V286
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x322
[0x322:0x325]
---
Predecessors: [0x31b]
Successors: []
---
0x322 PUSH1 0x0
0x324 DUP1
0x325 REVERT
---
0x322: V288 = 0x0
0x325: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x326
[0x326:0x32d]
---
Predecessors: [0x31b]
Successors: [0x45b]
---
0x326 JUMPDEST
0x327 PUSH2 0x2e1
0x32a PUSH2 0x45b
0x32d JUMP
---
0x326: JUMPDEST 
0x327: V289 = 0x2e1
0x32a: V290 = 0x45b
0x32d: JUMP 0x45b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2e1]
Exit stack: [V12, 0x2e1]

================================

Block 0x32e
[0x32e:0x334]
---
Predecessors: [0x88]
Successors: [0x335, 0x339]
---
0x32e JUMPDEST
0x32f CALLVALUE
0x330 ISZERO
0x331 PUSH2 0x339
0x334 JUMPI
---
0x32e: JUMPDEST 
0x32f: V291 = CALLVALUE
0x330: V292 = ISZERO V291
0x331: V293 = 0x339
0x334: JUMPI 0x339 V292
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x335
[0x335:0x338]
---
Predecessors: [0x32e]
Successors: []
---
0x335 PUSH1 0x0
0x337 DUP1
0x338 REVERT
---
0x335: V294 = 0x0
0x338: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x339
[0x339:0x340]
---
Predecessors: [0x32e]
Successors: [0x464]
---
0x339 JUMPDEST
0x33a PUSH2 0x28a
0x33d PUSH2 0x464
0x340 JUMP
---
0x339: JUMPDEST 
0x33a: V295 = 0x28a
0x33d: V296 = 0x464
0x340: JUMP 0x464
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28a]
Exit stack: [V12, 0x28a]

================================

Block 0x341
[0x341:0x357]
---
Predecessors: [0x228]
Successors: [0x358, 0x35c]
---
0x341 JUMPDEST
0x342 PUSH1 0x0
0x344 SLOAD
0x345 CALLER
0x346 PUSH1 0x1
0x348 PUSH1 0xa0
0x34a PUSH1 0x2
0x34c EXP
0x34d SUB
0x34e SWAP1
0x34f DUP2
0x350 AND
0x351 SWAP2
0x352 AND
0x353 EQ
0x354 PUSH2 0x35c
0x357 JUMPI
---
0x341: JUMPDEST 
0x342: V297 = 0x0
0x344: V298 = S[0x0]
0x345: V299 = CALLER
0x346: V300 = 0x1
0x348: V301 = 0xa0
0x34a: V302 = 0x2
0x34c: V303 = EXP 0x2 0xa0
0x34d: V304 = SUB 0x10000000000000000000000000000000000000000 0x1
0x350: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x352: V306 = AND V298 0xffffffffffffffffffffffffffffffffffffffff
0x353: V307 = EQ V306 V305
0x354: V308 = 0x35c
0x357: JUMPI 0x35c V307
---
Entry stack: [V12, 0x230]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230]

================================

Block 0x358
[0x358:0x35b]
---
Predecessors: [0x341]
Successors: []
---
0x358 PUSH1 0x0
0x35a DUP1
0x35b REVERT
---
0x358: V309 = 0x0
0x35b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x230]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230]

================================

Block 0x35c
[0x35c:0x365]
---
Predecessors: [0x341]
Successors: [0x366, 0x3e9]
---
0x35c JUMPDEST
0x35d PUSH1 0x3
0x35f SLOAD
0x360 TIMESTAMP
0x361 LT
0x362 PUSH2 0x3e9
0x365 JUMPI
---
0x35c: JUMPDEST 
0x35d: V310 = 0x3
0x35f: V311 = S[0x3]
0x360: V312 = TIMESTAMP
0x361: V313 = LT V312 V311
0x362: V314 = 0x3e9
0x365: JUMPI 0x3e9 V313
---
Entry stack: [V12, 0x230]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230]

================================

Block 0x366
[0x366:0x370]
---
Predecessors: [0x35c]
Successors: [0x371, 0x3d1]
---
0x366 PUSH1 0x1
0x368 SLOAD
0x369 PUSH1 0x2
0x36b SLOAD
0x36c LT
0x36d PUSH2 0x3d1
0x370 JUMPI
---
0x366: V315 = 0x1
0x368: V316 = S[0x1]
0x369: V317 = 0x2
0x36b: V318 = S[0x2]
0x36c: V319 = LT V318 V316
0x36d: V320 = 0x3d1
0x370: JUMPI 0x3d1 V319
---
Entry stack: [V12, 0x230]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230]

================================

Block 0x371
[0x371:0x3d0]
---
Predecessors: [0x366]
Successors: [0x3d1]
---
0x371 PUSH1 0x8
0x373 DUP1
0x374 SLOAD
0x375 PUSH1 0xff
0x377 NOT
0x378 AND
0x379 PUSH1 0x1
0x37b OR
0x37c SWAP1
0x37d SSTORE
0x37e PUSH1 0x0
0x380 SLOAD
0x381 PUSH1 0x2
0x383 SLOAD
0x384 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x3a5 SWAP2
0x3a6 PUSH1 0x1
0x3a8 PUSH1 0xa0
0x3aa PUSH1 0x2
0x3ac EXP
0x3ad SUB
0x3ae AND
0x3af SWAP1
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 PUSH1 0x1
0x3b5 PUSH1 0xa0
0x3b7 PUSH1 0x2
0x3b9 EXP
0x3ba SUB
0x3bb SWAP1
0x3bc SWAP3
0x3bd AND
0x3be DUP3
0x3bf MSTORE
0x3c0 PUSH1 0x20
0x3c2 DUP3
0x3c3 ADD
0x3c4 MSTORE
0x3c5 PUSH1 0x40
0x3c7 SWAP1
0x3c8 DUP2
0x3c9 ADD
0x3ca SWAP1
0x3cb MLOAD
0x3cc DUP1
0x3cd SWAP2
0x3ce SUB
0x3cf SWAP1
0x3d0 LOG1
---
0x371: V321 = 0x8
0x374: V322 = S[0x8]
0x375: V323 = 0xff
0x377: V324 = NOT 0xff
0x378: V325 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V322
0x379: V326 = 0x1
0x37b: V327 = OR 0x1 V325
0x37d: S[0x8] = V327
0x37e: V328 = 0x0
0x380: V329 = S[0x0]
0x381: V330 = 0x2
0x383: V331 = S[0x2]
0x384: V332 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x3a6: V333 = 0x1
0x3a8: V334 = 0xa0
0x3aa: V335 = 0x2
0x3ac: V336 = EXP 0x2 0xa0
0x3ad: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ae: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x3b0: V339 = 0x40
0x3b2: V340 = M[0x40]
0x3b3: V341 = 0x1
0x3b5: V342 = 0xa0
0x3b7: V343 = 0x2
0x3b9: V344 = EXP 0x2 0xa0
0x3ba: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bd: V346 = AND V338 0xffffffffffffffffffffffffffffffffffffffff
0x3bf: M[V340] = V346
0x3c0: V347 = 0x20
0x3c3: V348 = ADD V340 0x20
0x3c4: M[V348] = V331
0x3c5: V349 = 0x40
0x3c9: V350 = ADD 0x40 V340
0x3cb: V351 = M[0x40]
0x3ce: V352 = SUB V350 V351
0x3d0: LOG V351 V352 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V12, 0x230]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230]

================================

Block 0x3d1
[0x3d1:0x3d8]
---
Predecessors: [0x366, 0x371]
Successors: [0x46a]
---
0x3d1 JUMPDEST
0x3d2 PUSH2 0x3d9
0x3d5 PUSH2 0x46a
0x3d8 JUMP
---
0x3d1: JUMPDEST 
0x3d2: V353 = 0x3d9
0x3d5: V354 = 0x46a
0x3d8: JUMP 0x46a
---
Entry stack: [V12, 0x230]
Stack pops: 0
Stack additions: [0x3d9]
Exit stack: [V12, 0x230, 0x3d9]

================================

Block 0x3d9
[0x3d9:0x3e8]
---
Predecessors: [0x615]
Successors: [0x3e9]
---
0x3d9 JUMPDEST
0x3da PUSH1 0x8
0x3dc DUP1
0x3dd SLOAD
0x3de PUSH2 0xff00
0x3e1 NOT
0x3e2 AND
0x3e3 PUSH2 0x100
0x3e6 OR
0x3e7 SWAP1
0x3e8 SSTORE
---
0x3d9: JUMPDEST 
0x3da: V355 = 0x8
0x3dd: V356 = S[0x8]
0x3de: V357 = 0xff00
0x3e1: V358 = NOT 0xff00
0x3e2: V359 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V356
0x3e3: V360 = 0x100
0x3e6: V361 = OR 0x100 V359
0x3e8: S[0x8] = V361
---
Entry stack: [V12, 0x230]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230]

================================

Block 0x3e9
[0x3e9:0x3ea]
---
Predecessors: [0x35c, 0x3d9]
Successors: [0x230]
---
0x3e9 JUMPDEST
0x3ea JUMP
---
0x3e9: JUMPDEST 
0x3ea: JUMP 0x230
---
Entry stack: [V12, 0x230]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x3eb
[0x3eb:0x401]
---
Predecessors: [0x23d]
Successors: [0x402, 0x406]
---
0x3eb JUMPDEST
0x3ec PUSH1 0x0
0x3ee SLOAD
0x3ef CALLER
0x3f0 PUSH1 0x1
0x3f2 PUSH1 0xa0
0x3f4 PUSH1 0x2
0x3f6 EXP
0x3f7 SUB
0x3f8 SWAP1
0x3f9 DUP2
0x3fa AND
0x3fb SWAP2
0x3fc AND
0x3fd EQ
0x3fe PUSH2 0x406
0x401 JUMPI
---
0x3eb: JUMPDEST 
0x3ec: V362 = 0x0
0x3ee: V363 = S[0x0]
0x3ef: V364 = CALLER
0x3f0: V365 = 0x1
0x3f2: V366 = 0xa0
0x3f4: V367 = 0x2
0x3f6: V368 = EXP 0x2 0xa0
0x3f7: V369 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fa: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x3fc: V371 = AND V363 0xffffffffffffffffffffffffffffffffffffffff
0x3fd: V372 = EQ V371 V370
0x3fe: V373 = 0x406
0x401: JUMPI 0x406 V372
---
Entry stack: [V12, 0x230, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230, V204]

================================

Block 0x402
[0x402:0x405]
---
Predecessors: [0x3eb]
Successors: []
---
0x402 PUSH1 0x0
0x404 DUP1
0x405 REVERT
---
0x402: V374 = 0x0
0x405: REVERT 0x0 0x0
---
Entry stack: [V12, 0x230, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230, V204]

================================

Block 0x406
[0x406:0x40a]
---
Predecessors: [0x3eb]
Successors: [0x230]
---
0x406 JUMPDEST
0x407 PUSH1 0x4
0x409 SSTORE
0x40a JUMP
---
0x406: JUMPDEST 
0x407: V375 = 0x4
0x409: S[0x4] = V204
0x40a: JUMP 0x230
---
Entry stack: [V12, 0x230, V204]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x40b
[0x40b:0x419]
---
Predecessors: [0x253]
Successors: [0x25b]
---
0x40b JUMPDEST
0x40c PUSH1 0x0
0x40e SLOAD
0x40f PUSH1 0x1
0x411 PUSH1 0xa0
0x413 PUSH1 0x2
0x415 EXP
0x416 SUB
0x417 AND
0x418 DUP2
0x419 JUMP
---
0x40b: JUMPDEST 
0x40c: V376 = 0x0
0x40e: V377 = S[0x0]
0x40f: V378 = 0x1
0x411: V379 = 0xa0
0x413: V380 = 0x2
0x415: V381 = EXP 0x2 0xa0
0x416: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x417: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x419: JUMP 0x25b
---
Entry stack: [V12, 0x25b]
Stack pops: 1
Stack additions: [S0, V383]
Exit stack: [V12, 0x25b, V383]

================================

Block 0x41a
[0x41a:0x41f]
---
Predecessors: [0x282]
Successors: [0x28a]
---
0x41a JUMPDEST
0x41b PUSH1 0x2
0x41d SLOAD
0x41e DUP2
0x41f JUMP
---
0x41a: JUMPDEST 
0x41b: V384 = 0x2
0x41d: V385 = S[0x2]
0x41f: JUMP 0x28a
---
Entry stack: [V12, 0x28a]
Stack pops: 1
Stack additions: [S0, V385]
Exit stack: [V12, 0x28a, V385]

================================

Block 0x420
[0x420:0x431]
---
Predecessors: [0x2a7]
Successors: [0x28a]
---
0x420 JUMPDEST
0x421 PUSH1 0x7
0x423 PUSH1 0x20
0x425 MSTORE
0x426 PUSH1 0x0
0x428 SWAP1
0x429 DUP2
0x42a MSTORE
0x42b PUSH1 0x40
0x42d SWAP1
0x42e SHA3
0x42f SLOAD
0x430 DUP2
0x431 JUMP
---
0x420: JUMPDEST 
0x421: V386 = 0x7
0x423: V387 = 0x20
0x425: M[0x20] = 0x7
0x426: V388 = 0x0
0x42a: M[0x0] = V250
0x42b: V389 = 0x40
0x42e: V390 = SHA3 0x0 0x40
0x42f: V391 = S[V390]
0x431: JUMP 0x28a
---
Entry stack: [V12, 0x28a, V250]
Stack pops: 2
Stack additions: [S1, V391]
Exit stack: [V12, 0x28a, V391]

================================

Block 0x432
[0x432:0x440]
---
Predecessors: [0x2c6]
Successors: [0x25b]
---
0x432 JUMPDEST
0x433 PUSH1 0x6
0x435 SLOAD
0x436 PUSH1 0x1
0x438 PUSH1 0xa0
0x43a PUSH1 0x2
0x43c EXP
0x43d SUB
0x43e AND
0x43f DUP2
0x440 JUMP
---
0x432: JUMPDEST 
0x433: V392 = 0x6
0x435: V393 = S[0x6]
0x436: V394 = 0x1
0x438: V395 = 0xa0
0x43a: V396 = 0x2
0x43c: V397 = EXP 0x2 0xa0
0x43d: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43e: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x440: JUMP 0x25b
---
Entry stack: [V12, 0x25b]
Stack pops: 1
Stack additions: [S0, V399]
Exit stack: [V12, 0x25b, V399]

================================

Block 0x441
[0x441:0x44e]
---
Predecessors: [0x2d9]
Successors: [0x2e1]
---
0x441 JUMPDEST
0x442 PUSH1 0x8
0x444 SLOAD
0x445 PUSH2 0x100
0x448 SWAP1
0x449 DIV
0x44a PUSH1 0xff
0x44c AND
0x44d DUP2
0x44e JUMP
---
0x441: JUMPDEST 
0x442: V400 = 0x8
0x444: V401 = S[0x8]
0x445: V402 = 0x100
0x449: V403 = DIV V401 0x100
0x44a: V404 = 0xff
0x44c: V405 = AND 0xff V403
0x44e: JUMP 0x2e1
---
Entry stack: [V12, 0x2e1]
Stack pops: 1
Stack additions: [S0, V405]
Exit stack: [V12, 0x2e1, V405]

================================

Block 0x44f
[0x44f:0x454]
---
Predecessors: [0x300]
Successors: [0x28a]
---
0x44f JUMPDEST
0x450 PUSH1 0x1
0x452 SLOAD
0x453 DUP2
0x454 JUMP
---
0x44f: JUMPDEST 
0x450: V406 = 0x1
0x452: V407 = S[0x1]
0x454: JUMP 0x28a
---
Entry stack: [V12, 0x28a]
Stack pops: 1
Stack additions: [S0, V407]
Exit stack: [V12, 0x28a, V407]

================================

Block 0x455
[0x455:0x45a]
---
Predecessors: [0x313]
Successors: [0x28a]
---
0x455 JUMPDEST
0x456 PUSH1 0x3
0x458 SLOAD
0x459 DUP2
0x45a JUMP
---
0x455: JUMPDEST 
0x456: V408 = 0x3
0x458: V409 = S[0x3]
0x45a: JUMP 0x28a
---
Entry stack: [V12, 0x28a]
Stack pops: 1
Stack additions: [S0, V409]
Exit stack: [V12, 0x28a, V409]

================================

Block 0x45b
[0x45b:0x463]
---
Predecessors: [0x326]
Successors: [0x2e1]
---
0x45b JUMPDEST
0x45c PUSH1 0x8
0x45e SLOAD
0x45f PUSH1 0xff
0x461 AND
0x462 DUP2
0x463 JUMP
---
0x45b: JUMPDEST 
0x45c: V410 = 0x8
0x45e: V411 = S[0x8]
0x45f: V412 = 0xff
0x461: V413 = AND 0xff V411
0x463: JUMP 0x2e1
---
Entry stack: [V12, 0x2e1]
Stack pops: 1
Stack additions: [S0, V413]
Exit stack: [V12, 0x2e1, V413]

================================

Block 0x464
[0x464:0x469]
---
Predecessors: [0x339]
Successors: [0x28a]
---
0x464 JUMPDEST
0x465 PUSH1 0x4
0x467 SLOAD
0x468 DUP2
0x469 JUMP
---
0x464: JUMPDEST 
0x465: V414 = 0x4
0x467: V415 = S[0x4]
0x469: JUMP 0x28a
---
Entry stack: [V12, 0x28a]
Stack pops: 1
Stack additions: [S0, V415]
Exit stack: [V12, 0x28a, V415]

================================

Block 0x46a
[0x46a:0x476]
---
Predecessors: [0x3d1]
Successors: [0x477, 0x615]
---
0x46a JUMPDEST
0x46b PUSH1 0x3
0x46d SLOAD
0x46e PUSH1 0x0
0x470 SWAP1
0x471 TIMESTAMP
0x472 LT
0x473 PUSH2 0x615
0x476 JUMPI
---
0x46a: JUMPDEST 
0x46b: V416 = 0x3
0x46d: V417 = S[0x3]
0x46e: V418 = 0x0
0x471: V419 = TIMESTAMP
0x472: V420 = LT V419 V417
0x473: V421 = 0x615
0x476: JUMPI 0x615 V420
---
Entry stack: [V12, 0x230, 0x3d9]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x230, 0x3d9, 0x0]

================================

Block 0x477
[0x477:0x482]
---
Predecessors: [0x46a]
Successors: [0x483, 0x549]
---
0x477 PUSH1 0x8
0x479 SLOAD
0x47a PUSH1 0xff
0x47c AND
0x47d ISZERO
0x47e ISZERO
0x47f PUSH2 0x549
0x482 JUMPI
---
0x477: V422 = 0x8
0x479: V423 = S[0x8]
0x47a: V424 = 0xff
0x47c: V425 = AND 0xff V423
0x47d: V426 = ISZERO V425
0x47e: V427 = ISZERO V426
0x47f: V428 = 0x549
0x482: JUMPI 0x549 V427
---
Entry stack: [V12, 0x230, 0x3d9, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230, 0x3d9, 0x0]

================================

Block 0x483
[0x483:0x4a9]
---
Predecessors: [0x477]
Successors: [0x4aa, 0x549]
---
0x483 POP
0x484 PUSH1 0x1
0x486 PUSH1 0xa0
0x488 PUSH1 0x2
0x48a EXP
0x48b SUB
0x48c CALLER
0x48d AND
0x48e PUSH1 0x0
0x490 SWAP1
0x491 DUP2
0x492 MSTORE
0x493 PUSH1 0x7
0x495 PUSH1 0x20
0x497 MSTORE
0x498 PUSH1 0x40
0x49a DUP2
0x49b SHA3
0x49c DUP1
0x49d SLOAD
0x49e SWAP1
0x49f DUP3
0x4a0 SWAP1
0x4a1 SSTORE
0x4a2 SWAP1
0x4a3 DUP2
0x4a4 GT
0x4a5 ISZERO
0x4a6 PUSH2 0x549
0x4a9 JUMPI
---
0x484: V429 = 0x1
0x486: V430 = 0xa0
0x488: V431 = 0x2
0x48a: V432 = EXP 0x2 0xa0
0x48b: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48c: V434 = CALLER
0x48d: V435 = AND V434 0xffffffffffffffffffffffffffffffffffffffff
0x48e: V436 = 0x0
0x492: M[0x0] = V435
0x493: V437 = 0x7
0x495: V438 = 0x20
0x497: M[0x20] = 0x7
0x498: V439 = 0x40
0x49b: V440 = SHA3 0x0 0x40
0x49d: V441 = S[V440]
0x4a1: S[V440] = 0x0
0x4a4: V442 = GT V441 0x0
0x4a5: V443 = ISZERO V442
0x4a6: V444 = 0x549
0x4a9: JUMPI 0x549 V443
---
Entry stack: [V12, 0x230, 0x3d9, 0x0]
Stack pops: 1
Stack additions: [V441]
Exit stack: [V12, 0x230, 0x3d9, V441]

================================

Block 0x4aa
[0x4aa:0x4d4]
---
Predecessors: [0x483]
Successors: [0x4d5, 0x52d]
---
0x4aa PUSH1 0x1
0x4ac PUSH1 0xa0
0x4ae PUSH1 0x2
0x4b0 EXP
0x4b1 SUB
0x4b2 CALLER
0x4b3 AND
0x4b4 DUP2
0x4b5 ISZERO
0x4b6 PUSH2 0x8fc
0x4b9 MUL
0x4ba DUP3
0x4bb PUSH1 0x40
0x4bd MLOAD
0x4be PUSH1 0x0
0x4c0 PUSH1 0x40
0x4c2 MLOAD
0x4c3 DUP1
0x4c4 DUP4
0x4c5 SUB
0x4c6 DUP2
0x4c7 DUP6
0x4c8 DUP9
0x4c9 DUP9
0x4ca CALL
0x4cb SWAP4
0x4cc POP
0x4cd POP
0x4ce POP
0x4cf POP
0x4d0 ISZERO
0x4d1 PUSH2 0x52d
0x4d4 JUMPI
---
0x4aa: V445 = 0x1
0x4ac: V446 = 0xa0
0x4ae: V447 = 0x2
0x4b0: V448 = EXP 0x2 0xa0
0x4b1: V449 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b2: V450 = CALLER
0x4b3: V451 = AND V450 0xffffffffffffffffffffffffffffffffffffffff
0x4b5: V452 = ISZERO V441
0x4b6: V453 = 0x8fc
0x4b9: V454 = MUL 0x8fc V452
0x4bb: V455 = 0x40
0x4bd: V456 = M[0x40]
0x4be: V457 = 0x0
0x4c0: V458 = 0x40
0x4c2: V459 = M[0x40]
0x4c5: V460 = SUB V456 V459
0x4ca: V461 = CALL V454 V451 V441 V459 V460 V459 0x0
0x4d0: V462 = ISZERO V461
0x4d1: V463 = 0x52d
0x4d4: JUMPI 0x52d V462
---
Entry stack: [V12, 0x230, 0x3d9, V441]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x230, 0x3d9, V441]

================================

Block 0x4d5
[0x4d5:0x52c]
---
Predecessors: [0x4aa]
Successors: [0x549]
---
0x4d5 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4f6 CALLER
0x4f7 DUP3
0x4f8 PUSH1 0x0
0x4fa PUSH1 0x40
0x4fc MLOAD
0x4fd PUSH1 0x1
0x4ff PUSH1 0xa0
0x501 PUSH1 0x2
0x503 EXP
0x504 SUB
0x505 SWAP1
0x506 SWAP4
0x507 AND
0x508 DUP4
0x509 MSTORE
0x50a PUSH1 0x20
0x50c DUP4
0x50d ADD
0x50e SWAP2
0x50f SWAP1
0x510 SWAP2
0x511 MSTORE
0x512 ISZERO
0x513 ISZERO
0x514 PUSH1 0x40
0x516 DUP1
0x517 DUP4
0x518 ADD
0x519 SWAP2
0x51a SWAP1
0x51b SWAP2
0x51c MSTORE
0x51d PUSH1 0x60
0x51f SWAP1
0x520 SWAP2
0x521 ADD
0x522 SWAP1
0x523 MLOAD
0x524 DUP1
0x525 SWAP2
0x526 SUB
0x527 SWAP1
0x528 LOG1
0x529 PUSH2 0x549
0x52c JUMP
---
0x4d5: V464 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4f6: V465 = CALLER
0x4f8: V466 = 0x0
0x4fa: V467 = 0x40
0x4fc: V468 = M[0x40]
0x4fd: V469 = 0x1
0x4ff: V470 = 0xa0
0x501: V471 = 0x2
0x503: V472 = EXP 0x2 0xa0
0x504: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x507: V474 = AND V465 0xffffffffffffffffffffffffffffffffffffffff
0x509: M[V468] = V474
0x50a: V475 = 0x20
0x50d: V476 = ADD V468 0x20
0x511: M[V476] = V441
0x512: V477 = ISZERO 0x0
0x513: V478 = ISZERO 0x1
0x514: V479 = 0x40
0x518: V480 = ADD V468 0x40
0x51c: M[V480] = 0x0
0x51d: V481 = 0x60
0x521: V482 = ADD V468 0x60
0x523: V483 = M[0x40]
0x526: V484 = SUB V482 V483
0x528: LOG V483 V484 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x529: V485 = 0x549
0x52c: JUMP 0x549
---
Entry stack: [V12, 0x230, 0x3d9, V441]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x230, 0x3d9, V441]

================================

Block 0x52d
[0x52d:0x548]
---
Predecessors: [0x4aa]
Successors: [0x549]
---
0x52d JUMPDEST
0x52e PUSH1 0x1
0x530 PUSH1 0xa0
0x532 PUSH1 0x2
0x534 EXP
0x535 SUB
0x536 CALLER
0x537 AND
0x538 PUSH1 0x0
0x53a SWAP1
0x53b DUP2
0x53c MSTORE
0x53d PUSH1 0x7
0x53f PUSH1 0x20
0x541 MSTORE
0x542 PUSH1 0x40
0x544 SWAP1
0x545 SHA3
0x546 DUP2
0x547 SWAP1
0x548 SSTORE
---
0x52d: JUMPDEST 
0x52e: V486 = 0x1
0x530: V487 = 0xa0
0x532: V488 = 0x2
0x534: V489 = EXP 0x2 0xa0
0x535: V490 = SUB 0x10000000000000000000000000000000000000000 0x1
0x536: V491 = CALLER
0x537: V492 = AND V491 0xffffffffffffffffffffffffffffffffffffffff
0x538: V493 = 0x0
0x53c: M[0x0] = V492
0x53d: V494 = 0x7
0x53f: V495 = 0x20
0x541: M[0x20] = 0x7
0x542: V496 = 0x40
0x545: V497 = SHA3 0x0 0x40
0x548: S[V497] = V441
---
Entry stack: [V12, 0x230, 0x3d9, V441]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x230, 0x3d9, V441]

================================

Block 0x549
[0x549:0x555]
---
Predecessors: [0x477, 0x483, 0x4d5, 0x52d]
Successors: [0x556, 0x569]
---
0x549 JUMPDEST
0x54a PUSH1 0x8
0x54c SLOAD
0x54d PUSH1 0xff
0x54f AND
0x550 DUP1
0x551 ISZERO
0x552 PUSH2 0x569
0x555 JUMPI
---
0x549: JUMPDEST 
0x54a: V498 = 0x8
0x54c: V499 = S[0x8]
0x54d: V500 = 0xff
0x54f: V501 = AND 0xff V499
0x551: V502 = ISZERO V501
0x552: V503 = 0x569
0x555: JUMPI 0x569 V502
---
Entry stack: [V12, 0x230, 0x3d9, S0]
Stack pops: 0
Stack additions: [V501]
Exit stack: [V12, 0x230, 0x3d9, S0, V501]

================================

Block 0x556
[0x556:0x568]
---
Predecessors: [0x549]
Successors: [0x569]
---
0x556 POP
0x557 PUSH1 0x0
0x559 SLOAD
0x55a CALLER
0x55b PUSH1 0x1
0x55d PUSH1 0xa0
0x55f PUSH1 0x2
0x561 EXP
0x562 SUB
0x563 SWAP1
0x564 DUP2
0x565 AND
0x566 SWAP2
0x567 AND
0x568 EQ
---
0x557: V504 = 0x0
0x559: V505 = S[0x0]
0x55a: V506 = CALLER
0x55b: V507 = 0x1
0x55d: V508 = 0xa0
0x55f: V509 = 0x2
0x561: V510 = EXP 0x2 0xa0
0x562: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x565: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x567: V513 = AND V505 0xffffffffffffffffffffffffffffffffffffffff
0x568: V514 = EQ V513 V512
---
Entry stack: [V12, 0x230, 0x3d9, S1, V501]
Stack pops: 1
Stack additions: [V514]
Exit stack: [V12, 0x230, 0x3d9, S1, V514]

================================

Block 0x569
[0x569:0x56e]
---
Predecessors: [0x549, 0x556]
Successors: [0x56f, 0x615]
---
0x569 JUMPDEST
0x56a ISZERO
0x56b PUSH2 0x615
0x56e JUMPI
---
0x569: JUMPDEST 
0x56a: V515 = ISZERO S0
0x56b: V516 = 0x615
0x56e: JUMPI 0x615 V515
---
Entry stack: [V12, 0x230, 0x3d9, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x230, 0x3d9, S1]

================================

Block 0x56f
[0x56f:0x5a1]
---
Predecessors: [0x569]
Successors: [0x5a2, 0x60a]
---
0x56f PUSH1 0x0
0x571 SLOAD
0x572 PUSH1 0x2
0x574 SLOAD
0x575 PUSH1 0x1
0x577 PUSH1 0xa0
0x579 PUSH1 0x2
0x57b EXP
0x57c SUB
0x57d SWAP1
0x57e SWAP2
0x57f AND
0x580 SWAP1
0x581 DUP1
0x582 ISZERO
0x583 PUSH2 0x8fc
0x586 MUL
0x587 SWAP1
0x588 PUSH1 0x40
0x58a MLOAD
0x58b PUSH1 0x0
0x58d PUSH1 0x40
0x58f MLOAD
0x590 DUP1
0x591 DUP4
0x592 SUB
0x593 DUP2
0x594 DUP6
0x595 DUP9
0x596 DUP9
0x597 CALL
0x598 SWAP4
0x599 POP
0x59a POP
0x59b POP
0x59c POP
0x59d ISZERO
0x59e PUSH2 0x60a
0x5a1 JUMPI
---
0x56f: V517 = 0x0
0x571: V518 = S[0x0]
0x572: V519 = 0x2
0x574: V520 = S[0x2]
0x575: V521 = 0x1
0x577: V522 = 0xa0
0x579: V523 = 0x2
0x57b: V524 = EXP 0x2 0xa0
0x57c: V525 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57f: V526 = AND V518 0xffffffffffffffffffffffffffffffffffffffff
0x582: V527 = ISZERO V520
0x583: V528 = 0x8fc
0x586: V529 = MUL 0x8fc V527
0x588: V530 = 0x40
0x58a: V531 = M[0x40]
0x58b: V532 = 0x0
0x58d: V533 = 0x40
0x58f: V534 = M[0x40]
0x592: V535 = SUB V531 V534
0x597: V536 = CALL V529 V526 V520 V534 V535 V534 0x0
0x59d: V537 = ISZERO V536
0x59e: V538 = 0x60a
0x5a1: JUMPI 0x60a V537
---
Entry stack: [V12, 0x230, 0x3d9, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230, 0x3d9, S0]

================================

Block 0x5a2
[0x5a2:0x609]
---
Predecessors: [0x56f]
Successors: [0x615]
---
0x5a2 PUSH1 0x0
0x5a4 DUP1
0x5a5 SLOAD
0x5a6 PUSH1 0x2
0x5a8 SLOAD
0x5a9 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x5ca SWAP3
0x5cb PUSH1 0x1
0x5cd PUSH1 0xa0
0x5cf PUSH1 0x2
0x5d1 EXP
0x5d2 SUB
0x5d3 SWAP1
0x5d4 SWAP3
0x5d5 AND
0x5d6 SWAP2
0x5d7 PUSH1 0x40
0x5d9 MLOAD
0x5da PUSH1 0x1
0x5dc PUSH1 0xa0
0x5de PUSH1 0x2
0x5e0 EXP
0x5e1 SUB
0x5e2 SWAP1
0x5e3 SWAP4
0x5e4 AND
0x5e5 DUP4
0x5e6 MSTORE
0x5e7 PUSH1 0x20
0x5e9 DUP4
0x5ea ADD
0x5eb SWAP2
0x5ec SWAP1
0x5ed SWAP2
0x5ee MSTORE
0x5ef ISZERO
0x5f0 ISZERO
0x5f1 PUSH1 0x40
0x5f3 DUP1
0x5f4 DUP4
0x5f5 ADD
0x5f6 SWAP2
0x5f7 SWAP1
0x5f8 SWAP2
0x5f9 MSTORE
0x5fa PUSH1 0x60
0x5fc SWAP1
0x5fd SWAP2
0x5fe ADD
0x5ff SWAP1
0x600 MLOAD
0x601 DUP1
0x602 SWAP2
0x603 SUB
0x604 SWAP1
0x605 LOG1
0x606 PUSH2 0x615
0x609 JUMP
---
0x5a2: V539 = 0x0
0x5a5: V540 = S[0x0]
0x5a6: V541 = 0x2
0x5a8: V542 = S[0x2]
0x5a9: V543 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x5cb: V544 = 0x1
0x5cd: V545 = 0xa0
0x5cf: V546 = 0x2
0x5d1: V547 = EXP 0x2 0xa0
0x5d2: V548 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d5: V549 = AND V540 0xffffffffffffffffffffffffffffffffffffffff
0x5d7: V550 = 0x40
0x5d9: V551 = M[0x40]
0x5da: V552 = 0x1
0x5dc: V553 = 0xa0
0x5de: V554 = 0x2
0x5e0: V555 = EXP 0x2 0xa0
0x5e1: V556 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e4: V557 = AND V549 0xffffffffffffffffffffffffffffffffffffffff
0x5e6: M[V551] = V557
0x5e7: V558 = 0x20
0x5ea: V559 = ADD V551 0x20
0x5ee: M[V559] = V542
0x5ef: V560 = ISZERO 0x0
0x5f0: V561 = ISZERO 0x1
0x5f1: V562 = 0x40
0x5f5: V563 = ADD V551 0x40
0x5f9: M[V563] = 0x0
0x5fa: V564 = 0x60
0x5fe: V565 = ADD V551 0x60
0x600: V566 = M[0x40]
0x603: V567 = SUB V565 V566
0x605: LOG V566 V567 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x606: V568 = 0x615
0x609: JUMP 0x615
---
Entry stack: [V12, 0x230, 0x3d9, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230, 0x3d9, S0]

================================

Block 0x60a
[0x60a:0x614]
---
Predecessors: [0x56f]
Successors: [0x615]
---
0x60a JUMPDEST
0x60b PUSH1 0x8
0x60d DUP1
0x60e SLOAD
0x60f PUSH1 0xff
0x611 NOT
0x612 AND
0x613 SWAP1
0x614 SSTORE
---
0x60a: JUMPDEST 
0x60b: V569 = 0x8
0x60e: V570 = S[0x8]
0x60f: V571 = 0xff
0x611: V572 = NOT 0xff
0x612: V573 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V570
0x614: S[0x8] = V573
---
Entry stack: [V12, 0x230, 0x3d9, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x230, 0x3d9, S0]

================================

Block 0x615
[0x615:0x617]
---
Predecessors: [0x46a, 0x569, 0x5a2, 0x60a]
Successors: [0x3d9]
---
0x615 JUMPDEST
0x616 POP
0x617 JUMP
---
0x615: JUMPDEST 
0x617: JUMP 0x3d9
---
Entry stack: [V12, 0x230, 0x3d9, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x230]

================================

Block 0x618
[0x618:0x64a]
---
Predecessors: []
Successors: []
---
0x618 STOP
0x619 LOG1
0x61a PUSH6 0x627a7a723058
0x621 SHA3
0x622 MISSING 0xcd
0x623 CALL
0x624 EXP
0x625 CODESIZE
0x626 CODECOPY
0x627 DUP11
0x628 EXP
0x629 MISSING 0xe2
0x62a MISSING 0xc6
0x62b SAR
0x62c PUSH2 0xdb96
0x62f STOP
0x630 PUSH26 0x6f957efca27d55bc5e76e155d7722c1ecc0029
---
0x618: STOP 
0x619: LOG S0 S1 S2
0x61a: V574 = 0x627a7a723058
0x621: V575 = SHA3 0x627a7a723058 S3
0x622: MISSING 0xcd
0x623: V576 = CALL S0 S1 S2 S3 S4 S5 S6
0x624: V577 = EXP V576 S7
0x625: V578 = CODESIZE
0x626: CODECOPY V578 V577 S8
0x628: V579 = EXP S19 S9
0x629: MISSING 0xe2
0x62a: MISSING 0xc6
0x62b: V580 = SAR S0 S1
0x62c: V581 = 0xdb96
0x62f: STOP 
0x630: V582 = 0x6f957efca27d55bc5e76e155d7722c1ecc0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V575, V579, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, 0xdb96, V580, 0x6f957efca27d55bc5e76e155d7722c1ecc0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x21d
Exit block: 0x230
Body: 0x21d, 0x224, 0x228, 0x230, 0x341, 0x358, 0x35c, 0x366, 0x371, 0x3d1, 0x3d9, 0x3e9, 0x46a, 0x477, 0x483, 0x4aa, 0x4d5, 0x52d, 0x549, 0x556, 0x569, 0x56f, 0x5a2, 0x60a, 0x615

Function 1:
Public function signature: 0x92e1df6
Entry block: 0x232
Exit block: 0x230
Body: 0x230, 0x232, 0x239, 0x23d, 0x3eb, 0x402, 0x406

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x248
Exit block: 0x25b
Body: 0x248, 0x24f, 0x253, 0x25b, 0x40b

Function 3:
Public function signature: 0x8e911839
Entry block: 0x277
Exit block: 0x28a
Body: 0x277, 0x27e, 0x282, 0x28a, 0x41a

Function 4:
Public function signature: 0xa48a1b41
Entry block: 0x29c
Exit block: 0x28a
Body: 0x28a, 0x29c, 0x2a3, 0x2a7, 0x420

Function 5:
Public function signature: 0xaad7c2ea
Entry block: 0x2bb
Exit block: 0x25b
Body: 0x25b, 0x2bb, 0x2c2, 0x2c6, 0x432

Function 6:
Public function signature: 0xad2f7ebb
Entry block: 0x2ce
Exit block: 0x2e1
Body: 0x2ce, 0x2d5, 0x2d9, 0x2e1, 0x441

Function 7:
Public function signature: 0xb308b512
Entry block: 0x2f5
Exit block: 0x28a
Body: 0x28a, 0x2f5, 0x2fc, 0x300, 0x44f

Function 8:
Public function signature: 0xc6f221aa
Entry block: 0x308
Exit block: 0x28a
Body: 0x28a, 0x308, 0x30f, 0x313, 0x455

Function 9:
Public function signature: 0xd424f628
Entry block: 0x31b
Exit block: 0x2e1
Body: 0x2e1, 0x31b, 0x322, 0x326, 0x45b

Function 10:
Public function signature: 0xee3b09ca
Entry block: 0x32e
Exit block: 0x28a
Body: 0x28a, 0x32e, 0x335, 0x339, 0x464

Function 11:
Public fallback function
Entry block: 0x93
Exit block: 0x117
Body: 0x93, 0xa9, 0xad, 0xbc, 0xbd, 0xc1, 0xcc, 0x106, 0x10a, 0x117, 0x11b, 0x12e, 0x1ad, 0x1b1, 0x1be, 0x1c2

