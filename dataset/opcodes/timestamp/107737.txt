args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/8/107737.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0x32]
---
Predecessors: []
Successors: [0x33, 0x4f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 DUP1
0x29 PUSH4 0x590e1ae3
0x2e EQ
0x2f PUSH2 0x4f
0x32 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x29: V6 = 0x590e1ae3
0x2e: V7 = EQ 0x590e1ae3 V5
0x2f: V8 = 0x4f
0x32: JUMPI 0x4f V7
---
Entry stack: []
Stack pops: 0
Stack additions: [V5]
Exit stack: [V5]

================================

Block 0x33
[0x33:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x5e]
---
0x33 DUP1
0x34 PUSH4 0xd7bb99ba
0x39 EQ
0x3a PUSH2 0x5e
0x3d JUMPI
---
0x34: V9 = 0xd7bb99ba
0x39: V10 = EQ 0xd7bb99ba V5
0x3a: V11 = 0x5e
0x3d: JUMPI 0x5e V10
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0x33]
Successors: [0x49, 0x6d]
---
0x3e DUP1
0x3f PUSH4 0xe5225381
0x44 EQ
0x45 PUSH2 0x6d
0x48 JUMPI
---
0x3f: V12 = 0xe5225381
0x44: V13 = EQ 0xe5225381 V5
0x45: V14 = 0x6d
0x48: JUMPI 0x6d V13
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x49
[0x49:0x4c]
---
Predecessors: [0x3e]
Successors: [0x4d]
---
0x49 PUSH2 0x4d
0x4c JUMP
---
0x49: V15 = 0x4d
0x4c: JUMP 0x4d
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x4d
[0x4d:0x4e]
---
Predecessors: [0x49]
Successors: []
---
0x4d JUMPDEST
0x4e STOP
---
0x4d: JUMPDEST 
0x4e: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x4f
[0x4f:0x5b]
---
Predecessors: [0x0]
Successors: [0x7c]
---
0x4f JUMPDEST
0x50 PUSH2 0x5c
0x53 PUSH1 0x4
0x55 DUP1
0x56 POP
0x57 POP
0x58 PUSH2 0x7c
0x5b JUMP
---
0x4f: JUMPDEST 
0x50: V16 = 0x5c
0x53: V17 = 0x4
0x58: V18 = 0x7c
0x5b: JUMP 0x7c
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x5c]
Exit stack: [V5, 0x5c]

================================

Block 0x5c
[0x5c:0x5d]
---
Predecessors: [0x190]
Successors: []
---
0x5c JUMPDEST
0x5d STOP
---
0x5c: JUMPDEST 
0x5d: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x5e
[0x5e:0x6a]
---
Predecessors: [0x33]
Successors: [0x193]
---
0x5e JUMPDEST
0x5f PUSH2 0x6b
0x62 PUSH1 0x4
0x64 DUP1
0x65 POP
0x66 POP
0x67 PUSH2 0x193
0x6a JUMP
---
0x5e: JUMPDEST 
0x5f: V19 = 0x6b
0x62: V20 = 0x4
0x67: V21 = 0x193
0x6a: JUMP 0x193
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x6b]
Exit stack: [V5, 0x6b]

================================

Block 0x6b
[0x6b:0x6c]
---
Predecessors: [0x2a4]
Successors: []
---
0x6b JUMPDEST
0x6c STOP
---
0x6b: JUMPDEST 
0x6c: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x6d
[0x6d:0x79]
---
Predecessors: [0x3e]
Successors: [0x2a6]
---
0x6d JUMPDEST
0x6e PUSH2 0x7a
0x71 PUSH1 0x4
0x73 DUP1
0x74 POP
0x75 POP
0x76 PUSH2 0x2a6
0x79 JUMP
---
0x6d: JUMPDEST 
0x6e: V22 = 0x7a
0x71: V23 = 0x4
0x76: V24 = 0x2a6
0x79: JUMP 0x2a6
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x7a]
Exit stack: [V5, 0x7a]

================================

Block 0x7a
[0x7a:0x7b]
---
Predecessors: [0x349]
Successors: []
---
0x7a JUMPDEST
0x7b STOP
---
0x7a: JUMPDEST 
0x7b: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x7c
[0x7c:0x8c]
---
Predecessors: [0x4f]
Successors: [0x8d, 0xad]
---
0x7c JUMPDEST
0x7d PUSH1 0x0
0x7f PUSH1 0x1
0x81 PUSH1 0x0
0x83 POP
0x84 SLOAD
0x85 TIMESTAMP
0x86 GT
0x87 DUP1
0x88 ISZERO
0x89 PUSH2 0xad
0x8c JUMPI
---
0x7c: JUMPDEST 
0x7d: V25 = 0x0
0x7f: V26 = 0x1
0x81: V27 = 0x0
0x84: V28 = S[0x1]
0x85: V29 = TIMESTAMP
0x86: V30 = GT V29 V28
0x88: V31 = ISZERO V30
0x89: V32 = 0xad
0x8c: JUMPI 0xad V31
---
Entry stack: [V5, 0x5c]
Stack pops: 0
Stack additions: [0x0, V30]
Exit stack: [V5, 0x5c, 0x0, V30]

================================

Block 0x8d
[0x8d:0xac]
---
Predecessors: [0x7c]
Successors: [0xad]
---
0x8d POP
0x8e PUSH1 0x2
0x90 PUSH1 0x0
0x92 POP
0x93 SLOAD
0x94 ADDRESS
0x95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa AND
0xab BALANCE
0xac LT
---
0x8e: V33 = 0x2
0x90: V34 = 0x0
0x93: V35 = S[0x2]
0x94: V36 = ADDRESS
0x95: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xab: V39 = BALANCE V38
0xac: V40 = LT V39 V35
---
Entry stack: [V5, 0x5c, 0x0, V30]
Stack pops: 1
Stack additions: [V40]
Exit stack: [V5, 0x5c, 0x0, V40]

================================

Block 0xad
[0xad:0xb2]
---
Predecessors: [0x7c, 0x8d]
Successors: [0xb3, 0x18f]
---
0xad JUMPDEST
0xae ISZERO
0xaf PUSH2 0x18f
0xb2 JUMPI
---
0xad: JUMPDEST 
0xae: V41 = ISZERO S0
0xaf: V42 = 0x18f
0xb2: JUMPI 0x18f V41
---
Entry stack: [V5, 0x5c, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0x5c, 0x0]

================================

Block 0xb3
[0xb3:0xba]
---
Predecessors: [0xad]
Successors: [0xbb]
---
0xb3 PUSH1 0x3
0xb5 PUSH1 0x0
0xb7 POP
0xb8 SLOAD
0xb9 SWAP1
0xba POP
---
0xb3: V43 = 0x3
0xb5: V44 = 0x0
0xb8: V45 = S[0x3]
---
Entry stack: [V5, 0x5c, 0x0]
Stack pops: 1
Stack additions: [V45]
Exit stack: [V5, 0x5c, V45]

================================

Block 0xbb
[0xbb:0xcc]
---
Predecessors: [0xb3, 0x156]
Successors: [0xcd, 0xd4]
---
0xbb JUMPDEST
0xbc PUSH1 0x4
0xbe PUSH1 0x0
0xc0 POP
0xc1 DUP1
0xc2 SLOAD
0xc3 SWAP1
0xc4 POP
0xc5 DUP2
0xc6 LT
0xc7 DUP1
0xc8 ISZERO
0xc9 PUSH2 0xd4
0xcc JUMPI
---
0xbb: JUMPDEST 
0xbc: V46 = 0x4
0xbe: V47 = 0x0
0xc2: V48 = S[0x4]
0xc6: V49 = LT S0 V48
0xc8: V50 = ISZERO V49
0xc9: V51 = 0xd4
0xcc: JUMPI 0xd4 V50
---
Entry stack: [V5, 0x5c, S0]
Stack pops: 1
Stack additions: [S0, V49]
Exit stack: [V5, 0x5c, S0, V49]

================================

Block 0xcd
[0xcd:0xd3]
---
Predecessors: [0xbb]
Successors: [0xd4]
---
0xcd POP
0xce PUSH3 0x186a0
0xd2 GAS
0xd3 GT
---
0xce: V52 = 0x186a0
0xd2: V53 = GAS
0xd3: V54 = GT V53 0x186a0
---
Entry stack: [V5, 0x5c, S1, V49]
Stack pops: 1
Stack additions: [V54]
Exit stack: [V5, 0x5c, S1, V54]

================================

Block 0xd4
[0xd4:0xd9]
---
Predecessors: [0xbb, 0xcd]
Successors: [0xda, 0x184]
---
0xd4 JUMPDEST
0xd5 ISZERO
0xd6 PUSH2 0x184
0xd9 JUMPI
---
0xd4: JUMPDEST 
0xd5: V55 = ISZERO S0
0xd6: V56 = 0x184
0xd9: JUMPI 0x184 V55
---
Entry stack: [V5, 0x5c, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0x5c, S1]

================================

Block 0xda
[0xda:0xe8]
---
Predecessors: [0xd4]
Successors: [0xe9]
---
0xda PUSH1 0x4
0xdc PUSH1 0x0
0xde POP
0xdf DUP2
0xe0 DUP2
0xe1 SLOAD
0xe2 DUP2
0xe3 LT
0xe4 ISZERO
0xe5 PUSH2 0x2
0xe8 JUMPI
---
0xda: V57 = 0x4
0xdc: V58 = 0x0
0xe1: V59 = S[0x4]
0xe3: V60 = LT S0 V59
0xe4: V61 = ISZERO V60
0xe5: V62 = 0x2
0xe8: THROWI V61
---
Entry stack: [V5, 0x5c, S0]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V5, 0x5c, S0, 0x4, S0]

================================

Block 0xe9
[0xe9:0xf8]
---
Predecessors: [0xda]
Successors: [0xf9]
---
0xe9 SWAP1
0xea PUSH1 0x0
0xec MSTORE
0xed PUSH1 0x20
0xef PUSH1 0x0
0xf1 SHA3
0xf2 SWAP1
0xf3 PUSH1 0x2
0xf5 MUL
0xf6 ADD
0xf7 PUSH1 0x0
---
0xea: V63 = 0x0
0xec: M[0x0] = 0x4
0xed: V64 = 0x20
0xef: V65 = 0x0
0xf1: V66 = SHA3 0x0 0x20
0xf3: V67 = 0x2
0xf5: V68 = MUL 0x2 S0
0xf6: V69 = ADD V68 V66
0xf7: V70 = 0x0
---
Entry stack: [V5, 0x5c, S2, 0x4, S0]
Stack pops: 2
Stack additions: [V69, 0x0]
Exit stack: [V5, 0x5c, S2, V69, 0x0]

================================

Block 0xf9
[0xf9:0x145]
---
Predecessors: [0xe9]
Successors: [0x146]
---
0xf9 JUMPDEST
0xfa POP
0xfb PUSH1 0x0
0xfd ADD
0xfe PUSH1 0x0
0x100 SWAP1
0x101 SLOAD
0x102 SWAP1
0x103 PUSH2 0x100
0x106 EXP
0x107 SWAP1
0x108 DIV
0x109 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11e AND
0x11f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x134 AND
0x135 PUSH1 0x0
0x137 PUSH1 0x4
0x139 PUSH1 0x0
0x13b POP
0x13c DUP4
0x13d DUP2
0x13e SLOAD
0x13f DUP2
0x140 LT
0x141 ISZERO
0x142 PUSH2 0x2
0x145 JUMPI
---
0xf9: JUMPDEST 
0xfb: V71 = 0x0
0xfd: V72 = ADD 0x0 V69
0xfe: V73 = 0x0
0x101: V74 = S[V72]
0x103: V75 = 0x100
0x106: V76 = EXP 0x100 0x0
0x108: V77 = DIV V74 0x1
0x109: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x11e: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x11f: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x134: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x135: V82 = 0x0
0x137: V83 = 0x4
0x139: V84 = 0x0
0x13e: V85 = S[0x4]
0x140: V86 = LT S2 V85
0x141: V87 = ISZERO V86
0x142: V88 = 0x2
0x145: THROWI V87
---
Entry stack: [V5, 0x5c, S2, V69, 0x0]
Stack pops: 3
Stack additions: [S2, V81, 0x0, 0x4, S2]
Exit stack: [V5, 0x5c, S2, V81, 0x0, 0x4, S2]

================================

Block 0x146
[0x146:0x155]
---
Predecessors: [0xf9]
Successors: [0x156]
---
0x146 SWAP1
0x147 PUSH1 0x0
0x149 MSTORE
0x14a PUSH1 0x20
0x14c PUSH1 0x0
0x14e SHA3
0x14f SWAP1
0x150 PUSH1 0x2
0x152 MUL
0x153 ADD
0x154 PUSH1 0x0
---
0x147: V89 = 0x0
0x149: M[0x0] = 0x4
0x14a: V90 = 0x20
0x14c: V91 = 0x0
0x14e: V92 = SHA3 0x0 0x20
0x150: V93 = 0x2
0x152: V94 = MUL 0x2 S0
0x153: V95 = ADD V94 V92
0x154: V96 = 0x0
---
Entry stack: [V5, 0x5c, S4, V81, 0x0, 0x4, S0]
Stack pops: 2
Stack additions: [V95, 0x0]
Exit stack: [V5, 0x5c, S4, V81, 0x0, V95, 0x0]

================================

Block 0x156
[0x156:0x183]
---
Predecessors: [0x146]
Successors: [0xbb]
---
0x156 JUMPDEST
0x157 POP
0x158 PUSH1 0x1
0x15a ADD
0x15b PUSH1 0x0
0x15d POP
0x15e SLOAD
0x15f PUSH1 0x40
0x161 MLOAD
0x162 DUP1
0x163 SWAP1
0x164 POP
0x165 PUSH1 0x0
0x167 PUSH1 0x40
0x169 MLOAD
0x16a DUP1
0x16b DUP4
0x16c SUB
0x16d DUP2
0x16e DUP6
0x16f DUP9
0x170 DUP9
0x171 CALL
0x172 SWAP4
0x173 POP
0x174 POP
0x175 POP
0x176 POP
0x177 POP
0x178 DUP1
0x179 DUP1
0x17a PUSH1 0x1
0x17c ADD
0x17d SWAP2
0x17e POP
0x17f POP
0x180 PUSH2 0xbb
0x183 JUMP
---
0x156: JUMPDEST 
0x158: V97 = 0x1
0x15a: V98 = ADD 0x1 V95
0x15b: V99 = 0x0
0x15e: V100 = S[V98]
0x15f: V101 = 0x40
0x161: V102 = M[0x40]
0x165: V103 = 0x0
0x167: V104 = 0x40
0x169: V105 = M[0x40]
0x16c: V106 = SUB V102 V105
0x171: V107 = CALL 0x0 V81 V100 V105 V106 V105 0x0
0x17a: V108 = 0x1
0x17c: V109 = ADD 0x1 S4
0x180: V110 = 0xbb
0x183: JUMP 0xbb
---
Entry stack: [V5, 0x5c, S4, V81, 0x0, V95, 0x0]
Stack pops: 5
Stack additions: [V109]
Exit stack: [V5, 0x5c, V109]

================================

Block 0x184
[0x184:0x18e]
---
Predecessors: [0xd4]
Successors: [0x18f]
---
0x184 JUMPDEST
0x185 DUP1
0x186 PUSH1 0x3
0x188 PUSH1 0x0
0x18a POP
0x18b DUP2
0x18c SWAP1
0x18d SSTORE
0x18e POP
---
0x184: JUMPDEST 
0x186: V111 = 0x3
0x188: V112 = 0x0
0x18d: S[0x3] = S0
---
Entry stack: [V5, 0x5c, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5, 0x5c, S0]

================================

Block 0x18f
[0x18f:0x18f]
---
Predecessors: [0xad, 0x184]
Successors: [0x190]
---
0x18f JUMPDEST
---
0x18f: JUMPDEST 
---
Entry stack: [V5, 0x5c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x5c, S0]

================================

Block 0x190
[0x190:0x192]
---
Predecessors: [0x18f]
Successors: [0x5c]
---
0x190 JUMPDEST
0x191 POP
0x192 JUMP
---
0x190: JUMPDEST 
0x192: JUMP 0x5c
---
Entry stack: [V5, 0x5c, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V5]

================================

Block 0x193
[0x193:0x1a1]
---
Predecessors: [0x5e]
Successors: [0x1a2, 0x29e]
---
0x193 JUMPDEST
0x194 PUSH1 0x1
0x196 PUSH1 0x0
0x198 POP
0x199 SLOAD
0x19a TIMESTAMP
0x19b GT
0x19c ISZERO
0x19d ISZERO
0x19e PUSH2 0x29e
0x1a1 JUMPI
---
0x193: JUMPDEST 
0x194: V113 = 0x1
0x196: V114 = 0x0
0x199: V115 = S[0x1]
0x19a: V116 = TIMESTAMP
0x19b: V117 = GT V116 V115
0x19c: V118 = ISZERO V117
0x19d: V119 = ISZERO V118
0x19e: V120 = 0x29e
0x1a1: JUMPI 0x29e V119
---
Entry stack: [V5, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x6b]

================================

Block 0x1a2
[0x1a2:0x1bb]
---
Predecessors: [0x193]
Successors: [0x1bc, 0x224]
---
0x1a2 PUSH1 0x4
0x1a4 PUSH1 0x0
0x1a6 POP
0x1a7 DUP1
0x1a8 SLOAD
0x1a9 DUP1
0x1aa PUSH1 0x1
0x1ac ADD
0x1ad DUP3
0x1ae DUP2
0x1af DUP2
0x1b0 SLOAD
0x1b1 DUP2
0x1b2 DUP4
0x1b3 SSTORE
0x1b4 DUP2
0x1b5 DUP2
0x1b6 ISZERO
0x1b7 GT
0x1b8 PUSH2 0x224
0x1bb JUMPI
---
0x1a2: V121 = 0x4
0x1a4: V122 = 0x0
0x1a8: V123 = S[0x4]
0x1aa: V124 = 0x1
0x1ac: V125 = ADD 0x1 V123
0x1b0: V126 = S[0x4]
0x1b3: S[0x4] = V125
0x1b6: V127 = ISZERO V126
0x1b7: V128 = GT V127 V125
0x1b8: V129 = 0x224
0x1bb: JUMPI 0x224 V128
---
Entry stack: [V5, 0x6b]
Stack pops: 0
Stack additions: [0x4, V123, V125, 0x4, V125, V126]
Exit stack: [V5, 0x6b, 0x4, V123, V125, 0x4, V125, V126]

================================

Block 0x1bc
[0x1bc:0x1d9]
---
Predecessors: [0x1a2]
Successors: [0x1da]
---
0x1bc PUSH1 0x2
0x1be MUL
0x1bf DUP2
0x1c0 PUSH1 0x2
0x1c2 MUL
0x1c3 DUP4
0x1c4 PUSH1 0x0
0x1c6 MSTORE
0x1c7 PUSH1 0x20
0x1c9 PUSH1 0x0
0x1cb SHA3
0x1cc SWAP2
0x1cd DUP3
0x1ce ADD
0x1cf SWAP2
0x1d0 ADD
0x1d1 PUSH2 0x223
0x1d4 SWAP2
0x1d5 SWAP1
0x1d6 PUSH2 0x1da
0x1d9 JUMP
---
0x1bc: V130 = 0x2
0x1be: V131 = MUL 0x2 V126
0x1c0: V132 = 0x2
0x1c2: V133 = MUL 0x2 V125
0x1c4: V134 = 0x0
0x1c6: M[0x0] = 0x4
0x1c7: V135 = 0x20
0x1c9: V136 = 0x0
0x1cb: V137 = SHA3 0x0 0x20
0x1ce: V138 = ADD V137 V131
0x1d0: V139 = ADD V137 V133
0x1d1: V140 = 0x223
0x1d6: V141 = 0x1da
0x1d9: JUMP 0x1da
---
Entry stack: [V5, 0x6b, 0x4, V123, V125, 0x4, V125, V126]
Stack pops: 3
Stack additions: [S2, S1, 0x223, V138, V139]
Exit stack: [V5, 0x6b, 0x4, V123, V125, 0x4, V125, 0x223, V138, V139]

================================

Block 0x1da
[0x1da:0x1e2]
---
Predecessors: [0x1bc, 0x1e3]
Successors: [0x1e3, 0x21f]
---
0x1da JUMPDEST
0x1db DUP1
0x1dc DUP3
0x1dd GT
0x1de ISZERO
0x1df PUSH2 0x21f
0x1e2 JUMPI
---
0x1da: JUMPDEST 
0x1dd: V142 = GT V138 S0
0x1de: V143 = ISZERO V142
0x1df: V144 = 0x21f
0x1e2: JUMPI 0x21f V143
---
Entry stack: [V5, 0x6b, 0x4, V123, V125, 0x4, V125, 0x223, V138, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V5, 0x6b, 0x4, V123, V125, 0x4, V125, 0x223, V138, S0]

================================

Block 0x1e3
[0x1e3:0x21e]
---
Predecessors: [0x1da]
Successors: [0x1da]
---
0x1e3 PUSH1 0x0
0x1e5 PUSH1 0x0
0x1e7 DUP3
0x1e8 ADD
0x1e9 PUSH1 0x0
0x1eb PUSH2 0x100
0x1ee EXP
0x1ef DUP2
0x1f0 SLOAD
0x1f1 SWAP1
0x1f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x207 MUL
0x208 NOT
0x209 AND
0x20a SWAP1
0x20b SSTORE
0x20c PUSH1 0x1
0x20e DUP3
0x20f ADD
0x210 PUSH1 0x0
0x212 POP
0x213 PUSH1 0x0
0x215 SWAP1
0x216 SSTORE
0x217 POP
0x218 PUSH1 0x2
0x21a ADD
0x21b PUSH2 0x1da
0x21e JUMP
---
0x1e3: V145 = 0x0
0x1e5: V146 = 0x0
0x1e8: V147 = ADD S0 0x0
0x1e9: V148 = 0x0
0x1eb: V149 = 0x100
0x1ee: V150 = EXP 0x100 0x0
0x1f0: V151 = S[V147]
0x1f2: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x207: V153 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x208: V154 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x209: V155 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V151
0x20b: S[V147] = V155
0x20c: V156 = 0x1
0x20f: V157 = ADD S0 0x1
0x210: V158 = 0x0
0x213: V159 = 0x0
0x216: S[V157] = 0x0
0x218: V160 = 0x2
0x21a: V161 = ADD 0x2 S0
0x21b: V162 = 0x1da
0x21e: JUMP 0x1da
---
Entry stack: [V5, 0x6b, 0x4, V123, V125, 0x4, V125, 0x223, V138, S0]
Stack pops: 1
Stack additions: [V161]
Exit stack: [V5, 0x6b, 0x4, V123, V125, 0x4, V125, 0x223, V138, V161]

================================

Block 0x21f
[0x21f:0x222]
---
Predecessors: [0x1da]
Successors: [0x223]
---
0x21f JUMPDEST
0x220 POP
0x221 SWAP1
0x222 JUMP
---
0x21f: JUMPDEST 
0x222: JUMP 0x223
---
Entry stack: [V5, 0x6b, 0x4, V123, V125, 0x4, V125, 0x223, V138, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V5, 0x6b, 0x4, V123, V125, 0x4, V125, V138]

================================

Block 0x223
[0x223:0x223]
---
Predecessors: [0x21f]
Successors: [0x224]
---
0x223 JUMPDEST
---
0x223: JUMPDEST 
---
Entry stack: [V5, 0x6b, 0x4, V123, V125, 0x4, V125, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x6b, 0x4, V123, V125, 0x4, V125, V138]

================================

Block 0x224
[0x224:0x239]
---
Predecessors: [0x1a2, 0x223]
Successors: [0x23a]
---
0x224 JUMPDEST
0x225 POP
0x226 POP
0x227 POP
0x228 SWAP2
0x229 SWAP1
0x22a SWAP1
0x22b PUSH1 0x0
0x22d MSTORE
0x22e PUSH1 0x20
0x230 PUSH1 0x0
0x232 SHA3
0x233 SWAP1
0x234 PUSH1 0x2
0x236 MUL
0x237 ADD
0x238 PUSH1 0x0
---
0x224: JUMPDEST 
0x22b: V163 = 0x0
0x22d: M[0x0] = 0x4
0x22e: V164 = 0x20
0x230: V165 = 0x0
0x232: V166 = SHA3 0x0 0x20
0x234: V167 = 0x2
0x236: V168 = MUL 0x2 V123
0x237: V169 = ADD V168 V166
0x238: V170 = 0x0
---
Entry stack: [V5, 0x6b, 0x4, V123, V125, 0x4, V125, S0]
Stack pops: 6
Stack additions: [S3, V169, 0x0]
Exit stack: [V5, 0x6b, V125, V169, 0x0]

================================

Block 0x23a
[0x23a:0x29d]
---
Predecessors: [0x224]
Successors: [0x2a3]
---
0x23a JUMPDEST
0x23b PUSH1 0x40
0x23d PUSH1 0x40
0x23f MLOAD
0x240 SWAP1
0x241 DUP2
0x242 ADD
0x243 PUSH1 0x40
0x245 MSTORE
0x246 DUP1
0x247 CALLER
0x248 DUP2
0x249 MSTORE
0x24a PUSH1 0x20
0x24c ADD
0x24d CALLVALUE
0x24e DUP2
0x24f MSTORE
0x250 PUSH1 0x20
0x252 ADD
0x253 POP
0x254 SWAP1
0x255 SWAP2
0x256 SWAP1
0x257 SWAP2
0x258 POP
0x259 PUSH1 0x0
0x25b DUP3
0x25c ADD
0x25d MLOAD
0x25e DUP2
0x25f PUSH1 0x0
0x261 ADD
0x262 PUSH1 0x0
0x264 PUSH2 0x100
0x267 EXP
0x268 DUP2
0x269 SLOAD
0x26a DUP2
0x26b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x280 MUL
0x281 NOT
0x282 AND
0x283 SWAP1
0x284 DUP4
0x285 MUL
0x286 OR
0x287 SWAP1
0x288 SSTORE
0x289 POP
0x28a PUSH1 0x20
0x28c DUP3
0x28d ADD
0x28e MLOAD
0x28f DUP2
0x290 PUSH1 0x1
0x292 ADD
0x293 PUSH1 0x0
0x295 POP
0x296 SSTORE
0x297 POP
0x298 POP
0x299 POP
0x29a PUSH2 0x2a3
0x29d JUMP
---
0x23a: JUMPDEST 
0x23b: V171 = 0x40
0x23d: V172 = 0x40
0x23f: V173 = M[0x40]
0x242: V174 = ADD V173 0x40
0x243: V175 = 0x40
0x245: M[0x40] = V174
0x247: V176 = CALLER
0x249: M[V173] = V176
0x24a: V177 = 0x20
0x24c: V178 = ADD 0x20 V173
0x24d: V179 = CALLVALUE
0x24f: M[V178] = V179
0x250: V180 = 0x20
0x252: V181 = ADD 0x20 V178
0x259: V182 = 0x0
0x25c: V183 = ADD V173 0x0
0x25d: V184 = M[V183]
0x25f: V185 = 0x0
0x261: V186 = ADD 0x0 V169
0x262: V187 = 0x0
0x264: V188 = 0x100
0x267: V189 = EXP 0x100 0x0
0x269: V190 = S[V186]
0x26b: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x280: V192 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x281: V193 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x282: V194 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V190
0x285: V195 = MUL V184 0x1
0x286: V196 = OR V195 V194
0x288: S[V186] = V196
0x28a: V197 = 0x20
0x28d: V198 = ADD V173 0x20
0x28e: V199 = M[V198]
0x290: V200 = 0x1
0x292: V201 = ADD 0x1 V169
0x293: V202 = 0x0
0x296: S[V201] = V199
0x29a: V203 = 0x2a3
0x29d: JUMP 0x2a3
---
Entry stack: [V5, 0x6b, V125, V169, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V5, 0x6b]

================================

Block 0x29e
[0x29e:0x2a2]
---
Predecessors: [0x193]
Successors: []
---
0x29e JUMPDEST
0x29f PUSH2 0x2
0x2a2 JUMP
---
0x29e: JUMPDEST 
0x29f: V204 = 0x2
0x2a2: THROW 
---
Entry stack: [V5, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x6b]

================================

Block 0x2a3
[0x2a3:0x2a3]
---
Predecessors: [0x23a]
Successors: [0x2a4]
---
0x2a3 JUMPDEST
---
0x2a3: JUMPDEST 
---
Entry stack: [V5, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x6b]

================================

Block 0x2a4
[0x2a4:0x2a5]
---
Predecessors: [0x2a3]
Successors: [0x6b]
---
0x2a4 JUMPDEST
0x2a5 JUMP
---
0x2a4: JUMPDEST 
0x2a5: JUMP 0x6b
---
Entry stack: [V5, 0x6b]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0x2a6
[0x2a6:0x2b4]
---
Predecessors: [0x6d]
Successors: [0x2b5, 0x2d6]
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0x0
0x2ab POP
0x2ac SLOAD
0x2ad TIMESTAMP
0x2ae GT
0x2af DUP1
0x2b0 ISZERO
0x2b1 PUSH2 0x2d6
0x2b4 JUMPI
---
0x2a6: JUMPDEST 
0x2a7: V205 = 0x1
0x2a9: V206 = 0x0
0x2ac: V207 = S[0x1]
0x2ad: V208 = TIMESTAMP
0x2ae: V209 = GT V208 V207
0x2b0: V210 = ISZERO V209
0x2b1: V211 = 0x2d6
0x2b4: JUMPI 0x2d6 V210
---
Entry stack: [V5, 0x7a]
Stack pops: 0
Stack additions: [V209]
Exit stack: [V5, 0x7a, V209]

================================

Block 0x2b5
[0x2b5:0x2d5]
---
Predecessors: [0x2a6]
Successors: [0x2d6]
---
0x2b5 POP
0x2b6 PUSH1 0x2
0x2b8 PUSH1 0x0
0x2ba POP
0x2bb SLOAD
0x2bc ADDRESS
0x2bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d2 AND
0x2d3 BALANCE
0x2d4 LT
0x2d5 ISZERO
---
0x2b6: V212 = 0x2
0x2b8: V213 = 0x0
0x2bb: V214 = S[0x2]
0x2bc: V215 = ADDRESS
0x2bd: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x2d3: V218 = BALANCE V217
0x2d4: V219 = LT V218 V214
0x2d5: V220 = ISZERO V219
---
Entry stack: [V5, 0x7a, V209]
Stack pops: 1
Stack additions: [V220]
Exit stack: [V5, 0x7a, V220]

================================

Block 0x2d6
[0x2d6:0x2db]
---
Predecessors: [0x2a6, 0x2b5]
Successors: [0x2dc, 0x348]
---
0x2d6 JUMPDEST
0x2d7 ISZERO
0x2d8 PUSH2 0x348
0x2db JUMPI
---
0x2d6: JUMPDEST 
0x2d7: V221 = ISZERO S0
0x2d8: V222 = 0x348
0x2db: JUMPI 0x348 V221
---
Entry stack: [V5, 0x7a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0x7a]

================================

Block 0x2dc
[0x2dc:0x347]
---
Predecessors: [0x2d6]
Successors: [0x348]
---
0x2dc PUSH1 0x0
0x2de PUSH1 0x0
0x2e0 SWAP1
0x2e1 SLOAD
0x2e2 SWAP1
0x2e3 PUSH2 0x100
0x2e6 EXP
0x2e7 SWAP1
0x2e8 DIV
0x2e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fe AND
0x2ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x314 AND
0x315 PUSH1 0x0
0x317 ADDRESS
0x318 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32d AND
0x32e BALANCE
0x32f PUSH1 0x40
0x331 MLOAD
0x332 DUP1
0x333 SWAP1
0x334 POP
0x335 PUSH1 0x0
0x337 PUSH1 0x40
0x339 MLOAD
0x33a DUP1
0x33b DUP4
0x33c SUB
0x33d DUP2
0x33e DUP6
0x33f DUP9
0x340 DUP9
0x341 CALL
0x342 SWAP4
0x343 POP
0x344 POP
0x345 POP
0x346 POP
0x347 POP
---
0x2dc: V223 = 0x0
0x2de: V224 = 0x0
0x2e1: V225 = S[0x0]
0x2e3: V226 = 0x100
0x2e6: V227 = EXP 0x100 0x0
0x2e8: V228 = DIV V225 0x1
0x2e9: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fe: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x2ff: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x314: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x315: V233 = 0x0
0x317: V234 = ADDRESS
0x318: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x32d: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x32e: V237 = BALANCE V236
0x32f: V238 = 0x40
0x331: V239 = M[0x40]
0x335: V240 = 0x0
0x337: V241 = 0x40
0x339: V242 = M[0x40]
0x33c: V243 = SUB V239 V242
0x341: V244 = CALL 0x0 V232 V237 V242 V243 V242 0x0
---
Entry stack: [V5, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x7a]

================================

Block 0x348
[0x348:0x348]
---
Predecessors: [0x2d6, 0x2dc]
Successors: [0x349]
---
0x348 JUMPDEST
---
0x348: JUMPDEST 
---
Entry stack: [V5, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x7a]

================================

Block 0x349
[0x349:0x34a]
---
Predecessors: [0x348]
Successors: [0x7a]
---
0x349 JUMPDEST
0x34a JUMP
---
0x349: JUMPDEST 
0x34a: JUMP 0x7a
---
Entry stack: [V5, 0x7a]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Function 0:
Public function signature: 0x590e1ae3
Entry block: 0x4f
Exit block: 0x5c
Body: 0x4f, 0x5c, 0x7c, 0x8d, 0xad, 0xb3, 0xbb, 0xcd, 0xd4, 0xda, 0xe9, 0xf9, 0x146, 0x156, 0x184, 0x18f, 0x190

Function 1:
Public function signature: 0xd7bb99ba
Entry block: 0x5e
Exit block: 0x6b
Body: 0x5e, 0x6b, 0x193, 0x1a2, 0x1bc, 0x1da, 0x1e3, 0x21f, 0x223, 0x224, 0x23a, 0x29e, 0x2a3, 0x2a4

Function 2:
Public function signature: 0xe5225381
Entry block: 0x6d
Exit block: 0x7a
Body: 0x6d, 0x7a, 0x2a6, 0x2b5, 0x2d6, 0x2dc, 0x348, 0x349

Function 3:
Public fallback function
Entry block: 0x49
Exit block: 0x4d
Body: 0x49, 0x4d

