Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xd7]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xd7
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xd7
0xc: JUMPI 0xd7 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xe2]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0xc424284
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xe2
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0xc424284
0x22: V15 = EQ V13 0xc424284
0x23: V16 = 0xe2
0x26: JUMPI 0xe2 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x106]
---
0x27 DUP1
0x28 PUSH4 0x2863f9f3
0x2d EQ
0x2e PUSH2 0x106
0x31 JUMPI
---
0x28: V17 = 0x2863f9f3
0x2d: V18 = EQ 0x2863f9f3 V13
0x2e: V19 = 0x106
0x31: JUMPI 0x106 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x119]
---
0x32 DUP1
0x33 PUSH4 0x3197cbb6
0x38 EQ
0x39 PUSH2 0x119
0x3c JUMPI
---
0x33: V20 = 0x3197cbb6
0x38: V21 = EQ 0x3197cbb6 V13
0x39: V22 = 0x119
0x3c: JUMPI 0x119 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x13e]
---
0x3d DUP1
0x3e PUSH4 0x456c8cac
0x43 EQ
0x44 PUSH2 0x13e
0x47 JUMPI
---
0x3e: V23 = 0x456c8cac
0x43: V24 = EQ 0x456c8cac V13
0x44: V25 = 0x13e
0x47: JUMPI 0x13e V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x165]
---
0x48 DUP1
0x49 PUSH4 0x58a687ec
0x4e EQ
0x4f PUSH2 0x165
0x52 JUMPI
---
0x49: V26 = 0x58a687ec
0x4e: V27 = EQ 0x58a687ec V13
0x4f: V28 = 0x165
0x52: JUMPI 0x165 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x178]
---
0x53 DUP1
0x54 PUSH4 0x679aefce
0x59 EQ
0x5a PUSH2 0x178
0x5d JUMPI
---
0x54: V29 = 0x679aefce
0x59: V30 = EQ 0x679aefce V13
0x5a: V31 = 0x178
0x5d: JUMPI 0x178 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x18b]
---
0x5e DUP1
0x5f PUSH4 0x74711285
0x64 EQ
0x65 PUSH2 0x18b
0x68 JUMPI
---
0x5f: V32 = 0x74711285
0x64: V33 = EQ 0x74711285 V13
0x65: V34 = 0x18b
0x68: JUMPI 0x18b V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x19e]
---
0x69 DUP1
0x6a PUSH4 0x78e97925
0x6f EQ
0x70 PUSH2 0x19e
0x73 JUMPI
---
0x6a: V35 = 0x78e97925
0x6f: V36 = EQ 0x78e97925 V13
0x70: V37 = 0x19e
0x73: JUMPI 0x19e V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x1b1]
---
0x74 DUP1
0x75 PUSH4 0x8ac2c680
0x7a EQ
0x7b PUSH2 0x1b1
0x7e JUMPI
---
0x75: V38 = 0x8ac2c680
0x7a: V39 = EQ 0x8ac2c680 V13
0x7b: V40 = 0x1b1
0x7e: JUMPI 0x1b1 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x1c4]
---
0x7f DUP1
0x80 PUSH4 0x8da5cb5b
0x85 EQ
0x86 PUSH2 0x1c4
0x89 JUMPI
---
0x80: V41 = 0x8da5cb5b
0x85: V42 = EQ 0x8da5cb5b V13
0x86: V43 = 0x1c4
0x89: JUMPI 0x1c4 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x1f3]
---
0x8a DUP1
0x8b PUSH4 0x9b19251a
0x90 EQ
0x91 PUSH2 0x1f3
0x94 JUMPI
---
0x8b: V44 = 0x9b19251a
0x90: V45 = EQ 0x9b19251a V13
0x91: V46 = 0x1f3
0x94: JUMPI 0x1f3 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x212]
---
0x95 DUP1
0x96 PUSH4 0xa5f0dea2
0x9b EQ
0x9c PUSH2 0x212
0x9f JUMPI
---
0x96: V47 = 0xa5f0dea2
0x9b: V48 = EQ 0xa5f0dea2 V13
0x9c: V49 = 0x212
0x9f: JUMPI 0x212 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x225]
---
0xa0 DUP1
0xa1 PUSH4 0xde5f9866
0xa6 EQ
0xa7 PUSH2 0x225
0xaa JUMPI
---
0xa1: V50 = 0xde5f9866
0xa6: V51 = EQ 0xde5f9866 V13
0xa7: V52 = 0x225
0xaa: JUMPI 0x225 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x238]
---
0xab DUP1
0xac PUSH4 0xe29eb836
0xb1 EQ
0xb2 PUSH2 0x238
0xb5 JUMPI
---
0xac: V53 = 0xe29eb836
0xb1: V54 = EQ 0xe29eb836 V13
0xb2: V55 = 0x238
0xb5: JUMPI 0x238 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x24b]
---
0xb6 DUP1
0xb7 PUSH4 0xe481c884
0xbc EQ
0xbd PUSH2 0x24b
0xc0 JUMPI
---
0xb7: V56 = 0xe481c884
0xbc: V57 = EQ 0xe481c884 V13
0xbd: V58 = 0x24b
0xc0: JUMPI 0x24b V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x25e]
---
0xc1 DUP1
0xc2 PUSH4 0xf2fde38b
0xc7 EQ
0xc8 PUSH2 0x25e
0xcb JUMPI
---
0xc2: V59 = 0xf2fde38b
0xc7: V60 = EQ 0xf2fde38b V13
0xc8: V61 = 0x25e
0xcb: JUMPI 0x25e V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x27d]
---
0xcc DUP1
0xcd PUSH4 0xfc0c546a
0xd2 EQ
0xd3 PUSH2 0x27d
0xd6 JUMPI
---
0xcd: V62 = 0xfc0c546a
0xd2: V63 = EQ 0xfc0c546a V13
0xd3: V64 = 0x27d
0xd6: JUMPI 0x27d V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xd7
[0xd7:0xdf]
---
Predecessors: [0x0, 0xcc]
Successors: [0x290]
---
0xd7 JUMPDEST
0xd8 PUSH2 0xe0
0xdb CALLER
0xdc PUSH2 0x290
0xdf JUMP
---
0xd7: JUMPDEST 
0xd8: V65 = 0xe0
0xdb: V66 = CALLER
0xdc: V67 = 0x290
0xdf: JUMP 0x290
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xe0, V66]
Exit stack: [V13, 0xe0, V66]

================================

Block 0xe0
[0xe0:0xe1]
---
Predecessors: [0x407, 0x471, 0x50d, 0x564, 0x5c2, 0x6fa]
Successors: []
---
0xe0 JUMPDEST
0xe1 STOP
---
0xe0: JUMPDEST 
0xe1: STOP 
---
Entry stack: [V13, 0xe0, S2, {0x0, 0xe0}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, S2, {0x0, 0xe0}, S0]

================================

Block 0xe2
[0xe2:0xe8]
---
Predecessors: [0xd]
Successors: [0xe9, 0xed]
---
0xe2 JUMPDEST
0xe3 CALLVALUE
0xe4 ISZERO
0xe5 PUSH2 0xed
0xe8 JUMPI
---
0xe2: JUMPDEST 
0xe3: V68 = CALLVALUE
0xe4: V69 = ISZERO V68
0xe5: V70 = 0xed
0xe8: JUMPI 0xed V69
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xe9
[0xe9:0xec]
---
Predecessors: [0xe2]
Successors: []
---
0xe9 PUSH1 0x0
0xeb DUP1
0xec REVERT
---
0xe9: V71 = 0x0
0xec: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xed
[0xed:0x105]
---
Predecessors: [0xe2]
Successors: [0x456]
---
0xed JUMPDEST
0xee PUSH2 0xe0
0xf1 PUSH1 0x1
0xf3 PUSH1 0xa0
0xf5 PUSH1 0x2
0xf7 EXP
0xf8 SUB
0xf9 PUSH1 0x4
0xfb CALLDATALOAD
0xfc AND
0xfd PUSH1 0x24
0xff CALLDATALOAD
0x100 ISZERO
0x101 ISZERO
0x102 PUSH2 0x456
0x105 JUMP
---
0xed: JUMPDEST 
0xee: V72 = 0xe0
0xf1: V73 = 0x1
0xf3: V74 = 0xa0
0xf5: V75 = 0x2
0xf7: V76 = EXP 0x2 0xa0
0xf8: V77 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf9: V78 = 0x4
0xfb: V79 = CALLDATALOAD 0x4
0xfc: V80 = AND V79 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V81 = 0x24
0xff: V82 = CALLDATALOAD 0x24
0x100: V83 = ISZERO V82
0x101: V84 = ISZERO V83
0x102: V85 = 0x456
0x105: JUMP 0x456
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xe0, V80, V84]
Exit stack: [V13, 0xe0, V80, V84]

================================

Block 0x106
[0x106:0x10c]
---
Predecessors: [0x27]
Successors: [0x10d, 0x111]
---
0x106 JUMPDEST
0x107 CALLVALUE
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x106: JUMPDEST 
0x107: V86 = CALLVALUE
0x108: V87 = ISZERO V86
0x109: V88 = 0x111
0x10c: JUMPI 0x111 V87
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x106]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V89 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x111
[0x111:0x118]
---
Predecessors: [0x106]
Successors: [0x4e2]
---
0x111 JUMPDEST
0x112 PUSH2 0xe0
0x115 PUSH2 0x4e2
0x118 JUMP
---
0x111: JUMPDEST 
0x112: V90 = 0xe0
0x115: V91 = 0x4e2
0x118: JUMP 0x4e2
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xe0]
Exit stack: [V13, 0xe0]

================================

Block 0x119
[0x119:0x11f]
---
Predecessors: [0x32]
Successors: [0x120, 0x124]
---
0x119 JUMPDEST
0x11a CALLVALUE
0x11b ISZERO
0x11c PUSH2 0x124
0x11f JUMPI
---
0x119: JUMPDEST 
0x11a: V92 = CALLVALUE
0x11b: V93 = ISZERO V92
0x11c: V94 = 0x124
0x11f: JUMPI 0x124 V93
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x120
[0x120:0x123]
---
Predecessors: [0x119]
Successors: []
---
0x120 PUSH1 0x0
0x122 DUP1
0x123 REVERT
---
0x120: V95 = 0x0
0x123: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x124
[0x124:0x12b]
---
Predecessors: [0x119]
Successors: [0x51c]
---
0x124 JUMPDEST
0x125 PUSH2 0x12c
0x128 PUSH2 0x51c
0x12b JUMP
---
0x124: JUMPDEST 
0x125: V96 = 0x12c
0x128: V97 = 0x51c
0x12b: JUMP 0x51c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12c]
Exit stack: [V13, 0x12c]

================================

Block 0x12c
[0x12c:0x13d]
---
Predecessors: [0x51c, 0x566, 0x5ce, 0x5d4, 0x684, 0x692]
Successors: []
---
0x12c JUMPDEST
0x12d PUSH1 0x40
0x12f MLOAD
0x130 SWAP1
0x131 DUP2
0x132 MSTORE
0x133 PUSH1 0x20
0x135 ADD
0x136 PUSH1 0x40
0x138 MLOAD
0x139 DUP1
0x13a SWAP2
0x13b SUB
0x13c SWAP1
0x13d RETURN
---
0x12c: JUMPDEST 
0x12d: V98 = 0x40
0x12f: V99 = M[0x40]
0x132: M[V99] = S0
0x133: V100 = 0x20
0x135: V101 = ADD 0x20 V99
0x136: V102 = 0x40
0x138: V103 = M[0x40]
0x13b: V104 = SUB V101 V103
0x13d: RETURN V103 V104
---
Entry stack: [V13, 0xe0, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xe0, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x13e
[0x13e:0x144]
---
Predecessors: [0x3d]
Successors: [0x145, 0x149]
---
0x13e JUMPDEST
0x13f CALLVALUE
0x140 ISZERO
0x141 PUSH2 0x149
0x144 JUMPI
---
0x13e: JUMPDEST 
0x13f: V105 = CALLVALUE
0x140: V106 = ISZERO V105
0x141: V107 = 0x149
0x144: JUMPI 0x149 V106
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x145
[0x145:0x148]
---
Predecessors: [0x13e]
Successors: []
---
0x145 PUSH1 0x0
0x147 DUP1
0x148 REVERT
---
0x145: V108 = 0x0
0x148: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x149
[0x149:0x150]
---
Predecessors: [0x13e]
Successors: [0x522]
---
0x149 JUMPDEST
0x14a PUSH2 0x151
0x14d PUSH2 0x522
0x150 JUMP
---
0x149: JUMPDEST 
0x14a: V109 = 0x151
0x14d: V110 = 0x522
0x150: JUMP 0x522
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x151]
Exit stack: [V13, 0x151]

================================

Block 0x151
[0x151:0x164]
---
Predecessors: [0x522, 0x5ef, 0x604]
Successors: []
---
0x151 JUMPDEST
0x152 PUSH1 0x40
0x154 MLOAD
0x155 SWAP1
0x156 ISZERO
0x157 ISZERO
0x158 DUP2
0x159 MSTORE
0x15a PUSH1 0x20
0x15c ADD
0x15d PUSH1 0x40
0x15f MLOAD
0x160 DUP1
0x161 SWAP2
0x162 SUB
0x163 SWAP1
0x164 RETURN
---
0x151: JUMPDEST 
0x152: V111 = 0x40
0x154: V112 = M[0x40]
0x156: V113 = ISZERO S0
0x157: V114 = ISZERO V113
0x159: M[V112] = V114
0x15a: V115 = 0x20
0x15c: V116 = ADD 0x20 V112
0x15d: V117 = 0x40
0x15f: V118 = M[0x40]
0x162: V119 = SUB V116 V118
0x164: RETURN V118 V119
---
Entry stack: [V13, 0x151, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x151]

================================

Block 0x165
[0x165:0x16b]
---
Predecessors: [0x48]
Successors: [0x16c, 0x170]
---
0x165 JUMPDEST
0x166 CALLVALUE
0x167 ISZERO
0x168 PUSH2 0x170
0x16b JUMPI
---
0x165: JUMPDEST 
0x166: V120 = CALLVALUE
0x167: V121 = ISZERO V120
0x168: V122 = 0x170
0x16b: JUMPI 0x170 V121
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x16c
[0x16c:0x16f]
---
Predecessors: [0x165]
Successors: []
---
0x16c PUSH1 0x0
0x16e DUP1
0x16f REVERT
---
0x16c: V123 = 0x0
0x16f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x170
[0x170:0x177]
---
Predecessors: [0x165]
Successors: [0x52b]
---
0x170 JUMPDEST
0x171 PUSH2 0xe0
0x174 PUSH2 0x52b
0x177 JUMP
---
0x170: JUMPDEST 
0x171: V124 = 0xe0
0x174: V125 = 0x52b
0x177: JUMP 0x52b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xe0]
Exit stack: [V13, 0xe0]

================================

Block 0x178
[0x178:0x17e]
---
Predecessors: [0x53]
Successors: [0x17f, 0x183]
---
0x178 JUMPDEST
0x179 CALLVALUE
0x17a ISZERO
0x17b PUSH2 0x183
0x17e JUMPI
---
0x178: JUMPDEST 
0x179: V126 = CALLVALUE
0x17a: V127 = ISZERO V126
0x17b: V128 = 0x183
0x17e: JUMPI 0x183 V127
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x17f
[0x17f:0x182]
---
Predecessors: [0x178]
Successors: []
---
0x17f PUSH1 0x0
0x181 DUP1
0x182 REVERT
---
0x17f: V129 = 0x0
0x182: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x183
[0x183:0x18a]
---
Predecessors: [0x178]
Successors: [0x566]
---
0x183 JUMPDEST
0x184 PUSH2 0x12c
0x187 PUSH2 0x566
0x18a JUMP
---
0x183: JUMPDEST 
0x184: V130 = 0x12c
0x187: V131 = 0x566
0x18a: JUMP 0x566
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12c]
Exit stack: [V13, 0x12c]

================================

Block 0x18b
[0x18b:0x191]
---
Predecessors: [0x5e]
Successors: [0x192, 0x196]
---
0x18b JUMPDEST
0x18c CALLVALUE
0x18d ISZERO
0x18e PUSH2 0x196
0x191 JUMPI
---
0x18b: JUMPDEST 
0x18c: V132 = CALLVALUE
0x18d: V133 = ISZERO V132
0x18e: V134 = 0x196
0x191: JUMPI 0x196 V133
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x192
[0x192:0x195]
---
Predecessors: [0x18b]
Successors: []
---
0x192 PUSH1 0x0
0x194 DUP1
0x195 REVERT
---
0x192: V135 = 0x0
0x195: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x196
[0x196:0x19d]
---
Predecessors: [0x18b]
Successors: [0x56b]
---
0x196 JUMPDEST
0x197 PUSH2 0xe0
0x19a PUSH2 0x56b
0x19d JUMP
---
0x196: JUMPDEST 
0x197: V136 = 0xe0
0x19a: V137 = 0x56b
0x19d: JUMP 0x56b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xe0]
Exit stack: [V13, 0xe0]

================================

Block 0x19e
[0x19e:0x1a4]
---
Predecessors: [0x69]
Successors: [0x1a5, 0x1a9]
---
0x19e JUMPDEST
0x19f CALLVALUE
0x1a0 ISZERO
0x1a1 PUSH2 0x1a9
0x1a4 JUMPI
---
0x19e: JUMPDEST 
0x19f: V138 = CALLVALUE
0x1a0: V139 = ISZERO V138
0x1a1: V140 = 0x1a9
0x1a4: JUMPI 0x1a9 V139
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a5
[0x1a5:0x1a8]
---
Predecessors: [0x19e]
Successors: []
---
0x1a5 PUSH1 0x0
0x1a7 DUP1
0x1a8 REVERT
---
0x1a5: V141 = 0x0
0x1a8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a9
[0x1a9:0x1b0]
---
Predecessors: [0x19e]
Successors: [0x5ce]
---
0x1a9 JUMPDEST
0x1aa PUSH2 0x12c
0x1ad PUSH2 0x5ce
0x1b0 JUMP
---
0x1a9: JUMPDEST 
0x1aa: V142 = 0x12c
0x1ad: V143 = 0x5ce
0x1b0: JUMP 0x5ce
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12c]
Exit stack: [V13, 0x12c]

================================

Block 0x1b1
[0x1b1:0x1b7]
---
Predecessors: [0x74]
Successors: [0x1b8, 0x1bc]
---
0x1b1 JUMPDEST
0x1b2 CALLVALUE
0x1b3 ISZERO
0x1b4 PUSH2 0x1bc
0x1b7 JUMPI
---
0x1b1: JUMPDEST 
0x1b2: V144 = CALLVALUE
0x1b3: V145 = ISZERO V144
0x1b4: V146 = 0x1bc
0x1b7: JUMPI 0x1bc V145
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1b8
[0x1b8:0x1bb]
---
Predecessors: [0x1b1]
Successors: []
---
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb REVERT
---
0x1b8: V147 = 0x0
0x1bb: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1bc
[0x1bc:0x1c3]
---
Predecessors: [0x1b1]
Successors: [0x5d4]
---
0x1bc JUMPDEST
0x1bd PUSH2 0x12c
0x1c0 PUSH2 0x5d4
0x1c3 JUMP
---
0x1bc: JUMPDEST 
0x1bd: V148 = 0x12c
0x1c0: V149 = 0x5d4
0x1c3: JUMP 0x5d4
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12c]
Exit stack: [V13, 0x12c]

================================

Block 0x1c4
[0x1c4:0x1ca]
---
Predecessors: [0x7f]
Successors: [0x1cb, 0x1cf]
---
0x1c4 JUMPDEST
0x1c5 CALLVALUE
0x1c6 ISZERO
0x1c7 PUSH2 0x1cf
0x1ca JUMPI
---
0x1c4: JUMPDEST 
0x1c5: V150 = CALLVALUE
0x1c6: V151 = ISZERO V150
0x1c7: V152 = 0x1cf
0x1ca: JUMPI 0x1cf V151
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1cb
[0x1cb:0x1ce]
---
Predecessors: [0x1c4]
Successors: []
---
0x1cb PUSH1 0x0
0x1cd DUP1
0x1ce REVERT
---
0x1cb: V153 = 0x0
0x1ce: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1cf
[0x1cf:0x1d6]
---
Predecessors: [0x1c4]
Successors: [0x5e0]
---
0x1cf JUMPDEST
0x1d0 PUSH2 0x1d7
0x1d3 PUSH2 0x5e0
0x1d6 JUMP
---
0x1cf: JUMPDEST 
0x1d0: V154 = 0x1d7
0x1d3: V155 = 0x5e0
0x1d6: JUMP 0x5e0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1d7]
Exit stack: [V13, 0x1d7]

================================

Block 0x1d7
[0x1d7:0x1f2]
---
Predecessors: [0x5e0, 0x698, 0x6fd]
Successors: []
---
0x1d7 JUMPDEST
0x1d8 PUSH1 0x40
0x1da MLOAD
0x1db PUSH1 0x1
0x1dd PUSH1 0xa0
0x1df PUSH1 0x2
0x1e1 EXP
0x1e2 SUB
0x1e3 SWAP1
0x1e4 SWAP2
0x1e5 AND
0x1e6 DUP2
0x1e7 MSTORE
0x1e8 PUSH1 0x20
0x1ea ADD
0x1eb PUSH1 0x40
0x1ed MLOAD
0x1ee DUP1
0x1ef SWAP2
0x1f0 SUB
0x1f1 SWAP1
0x1f2 RETURN
---
0x1d7: JUMPDEST 
0x1d8: V156 = 0x40
0x1da: V157 = M[0x40]
0x1db: V158 = 0x1
0x1dd: V159 = 0xa0
0x1df: V160 = 0x2
0x1e1: V161 = EXP 0x2 0xa0
0x1e2: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e5: V163 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1e7: M[V157] = V163
0x1e8: V164 = 0x20
0x1ea: V165 = ADD 0x20 V157
0x1eb: V166 = 0x40
0x1ed: V167 = M[0x40]
0x1f0: V168 = SUB V165 V167
0x1f2: RETURN V167 V168
---
Entry stack: [V13, 0x1d7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1d7]

================================

Block 0x1f3
[0x1f3:0x1f9]
---
Predecessors: [0x8a]
Successors: [0x1fa, 0x1fe]
---
0x1f3 JUMPDEST
0x1f4 CALLVALUE
0x1f5 ISZERO
0x1f6 PUSH2 0x1fe
0x1f9 JUMPI
---
0x1f3: JUMPDEST 
0x1f4: V169 = CALLVALUE
0x1f5: V170 = ISZERO V169
0x1f6: V171 = 0x1fe
0x1f9: JUMPI 0x1fe V170
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1fa
[0x1fa:0x1fd]
---
Predecessors: [0x1f3]
Successors: []
---
0x1fa PUSH1 0x0
0x1fc DUP1
0x1fd REVERT
---
0x1fa: V172 = 0x0
0x1fd: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1fe
[0x1fe:0x211]
---
Predecessors: [0x1f3]
Successors: [0x5ef]
---
0x1fe JUMPDEST
0x1ff PUSH2 0x151
0x202 PUSH1 0x1
0x204 PUSH1 0xa0
0x206 PUSH1 0x2
0x208 EXP
0x209 SUB
0x20a PUSH1 0x4
0x20c CALLDATALOAD
0x20d AND
0x20e PUSH2 0x5ef
0x211 JUMP
---
0x1fe: JUMPDEST 
0x1ff: V173 = 0x151
0x202: V174 = 0x1
0x204: V175 = 0xa0
0x206: V176 = 0x2
0x208: V177 = EXP 0x2 0xa0
0x209: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20a: V179 = 0x4
0x20c: V180 = CALLDATALOAD 0x4
0x20d: V181 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x20e: V182 = 0x5ef
0x211: JUMP 0x5ef
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x151, V181]
Exit stack: [V13, 0x151, V181]

================================

Block 0x212
[0x212:0x218]
---
Predecessors: [0x95]
Successors: [0x219, 0x21d]
---
0x212 JUMPDEST
0x213 CALLVALUE
0x214 ISZERO
0x215 PUSH2 0x21d
0x218 JUMPI
---
0x212: JUMPDEST 
0x213: V183 = CALLVALUE
0x214: V184 = ISZERO V183
0x215: V185 = 0x21d
0x218: JUMPI 0x21d V184
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x219
[0x219:0x21c]
---
Predecessors: [0x212]
Successors: []
---
0x219 PUSH1 0x0
0x21b DUP1
0x21c REVERT
---
0x219: V186 = 0x0
0x21c: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x21d
[0x21d:0x224]
---
Predecessors: [0x212]
Successors: [0x604]
---
0x21d JUMPDEST
0x21e PUSH2 0x151
0x221 PUSH2 0x604
0x224 JUMP
---
0x21d: JUMPDEST 
0x21e: V187 = 0x151
0x221: V188 = 0x604
0x224: JUMP 0x604
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x151]
Exit stack: [V13, 0x151]

================================

Block 0x225
[0x225:0x22b]
---
Predecessors: [0xa0]
Successors: [0x22c, 0x230]
---
0x225 JUMPDEST
0x226 CALLVALUE
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x225: JUMPDEST 
0x226: V189 = CALLVALUE
0x227: V190 = ISZERO V189
0x228: V191 = 0x230
0x22b: JUMPI 0x230 V190
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x225]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V192 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x230
[0x230:0x237]
---
Predecessors: [0x225]
Successors: [0x612]
---
0x230 JUMPDEST
0x231 PUSH2 0x12c
0x234 PUSH2 0x612
0x237 JUMP
---
0x230: JUMPDEST 
0x231: V193 = 0x12c
0x234: V194 = 0x612
0x237: JUMP 0x612
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12c]
Exit stack: [V13, 0x12c]

================================

Block 0x238
[0x238:0x23e]
---
Predecessors: [0xab]
Successors: [0x23f, 0x243]
---
0x238 JUMPDEST
0x239 CALLVALUE
0x23a ISZERO
0x23b PUSH2 0x243
0x23e JUMPI
---
0x238: JUMPDEST 
0x239: V195 = CALLVALUE
0x23a: V196 = ISZERO V195
0x23b: V197 = 0x243
0x23e: JUMPI 0x243 V196
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x23f
[0x23f:0x242]
---
Predecessors: [0x238]
Successors: []
---
0x23f PUSH1 0x0
0x241 DUP1
0x242 REVERT
---
0x23f: V198 = 0x0
0x242: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x243
[0x243:0x24a]
---
Predecessors: [0x238]
Successors: [0x692]
---
0x243 JUMPDEST
0x244 PUSH2 0x12c
0x247 PUSH2 0x692
0x24a JUMP
---
0x243: JUMPDEST 
0x244: V199 = 0x12c
0x247: V200 = 0x692
0x24a: JUMP 0x692
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12c]
Exit stack: [V13, 0x12c]

================================

Block 0x24b
[0x24b:0x251]
---
Predecessors: [0xb6]
Successors: [0x252, 0x256]
---
0x24b JUMPDEST
0x24c CALLVALUE
0x24d ISZERO
0x24e PUSH2 0x256
0x251 JUMPI
---
0x24b: JUMPDEST 
0x24c: V201 = CALLVALUE
0x24d: V202 = ISZERO V201
0x24e: V203 = 0x256
0x251: JUMPI 0x256 V202
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x252
[0x252:0x255]
---
Predecessors: [0x24b]
Successors: []
---
0x252 PUSH1 0x0
0x254 DUP1
0x255 REVERT
---
0x252: V204 = 0x0
0x255: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x256
[0x256:0x25d]
---
Predecessors: [0x24b]
Successors: [0x698]
---
0x256 JUMPDEST
0x257 PUSH2 0x1d7
0x25a PUSH2 0x698
0x25d JUMP
---
0x256: JUMPDEST 
0x257: V205 = 0x1d7
0x25a: V206 = 0x698
0x25d: JUMP 0x698
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1d7]
Exit stack: [V13, 0x1d7]

================================

Block 0x25e
[0x25e:0x264]
---
Predecessors: [0xc1]
Successors: [0x265, 0x269]
---
0x25e JUMPDEST
0x25f CALLVALUE
0x260 ISZERO
0x261 PUSH2 0x269
0x264 JUMPI
---
0x25e: JUMPDEST 
0x25f: V207 = CALLVALUE
0x260: V208 = ISZERO V207
0x261: V209 = 0x269
0x264: JUMPI 0x269 V208
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x265
[0x265:0x268]
---
Predecessors: [0x25e]
Successors: []
---
0x265 PUSH1 0x0
0x267 DUP1
0x268 REVERT
---
0x265: V210 = 0x0
0x268: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x269
[0x269:0x27c]
---
Predecessors: [0x25e]
Successors: [0x6a7]
---
0x269 JUMPDEST
0x26a PUSH2 0xe0
0x26d PUSH1 0x1
0x26f PUSH1 0xa0
0x271 PUSH1 0x2
0x273 EXP
0x274 SUB
0x275 PUSH1 0x4
0x277 CALLDATALOAD
0x278 AND
0x279 PUSH2 0x6a7
0x27c JUMP
---
0x269: JUMPDEST 
0x26a: V211 = 0xe0
0x26d: V212 = 0x1
0x26f: V213 = 0xa0
0x271: V214 = 0x2
0x273: V215 = EXP 0x2 0xa0
0x274: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x275: V217 = 0x4
0x277: V218 = CALLDATALOAD 0x4
0x278: V219 = AND V218 0xffffffffffffffffffffffffffffffffffffffff
0x279: V220 = 0x6a7
0x27c: JUMP 0x6a7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xe0, V219]
Exit stack: [V13, 0xe0, V219]

================================

Block 0x27d
[0x27d:0x283]
---
Predecessors: [0xcc]
Successors: [0x284, 0x288]
---
0x27d JUMPDEST
0x27e CALLVALUE
0x27f ISZERO
0x280 PUSH2 0x288
0x283 JUMPI
---
0x27d: JUMPDEST 
0x27e: V221 = CALLVALUE
0x27f: V222 = ISZERO V221
0x280: V223 = 0x288
0x283: JUMPI 0x288 V222
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x284
[0x284:0x287]
---
Predecessors: [0x27d]
Successors: []
---
0x284 PUSH1 0x0
0x286 DUP1
0x287 REVERT
---
0x284: V224 = 0x0
0x287: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x288
[0x288:0x28f]
---
Predecessors: [0x27d]
Successors: [0x6fd]
---
0x288 JUMPDEST
0x289 PUSH2 0x1d7
0x28c PUSH2 0x6fd
0x28f JUMP
---
0x288: JUMPDEST 
0x289: V225 = 0x1d7
0x28c: V226 = 0x6fd
0x28f: JUMP 0x6fd
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1d7]
Exit stack: [V13, 0x1d7]

================================

Block 0x290
[0x290:0x29e]
---
Predecessors: [0xd7]
Successors: [0x712]
---
0x290 JUMPDEST
0x291 PUSH1 0x0
0x293 DUP1
0x294 DUP3
0x295 PUSH1 0x1
0x297 SLOAD
0x298 PUSH2 0x29f
0x29b PUSH2 0x712
0x29e JUMP
---
0x290: JUMPDEST 
0x291: V227 = 0x0
0x295: V228 = 0x1
0x297: V229 = S[0x1]
0x298: V230 = 0x29f
0x29b: V231 = 0x712
0x29e: JUMP 0x712
---
Entry stack: [V13, 0xe0, V66]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, S0, V229, 0x29f]
Exit stack: [V13, 0xe0, V66, 0x0, 0x0, V66, V229, 0x29f]

================================

Block 0x29f
[0x29f:0x2a6]
---
Predecessors: [0x712]
Successors: [0x2a7, 0x2c5]
---
0x29f JUMPDEST
0x2a0 LT
0x2a1 DUP1
0x2a2 ISZERO
0x2a3 PUSH2 0x2c5
0x2a6 JUMPI
---
0x29f: JUMPDEST 
0x2a0: V232 = LT V671 S1
0x2a2: V233 = ISZERO V232
0x2a3: V234 = 0x2c5
0x2a6: JUMPI 0x2c5 V233
---
Entry stack: [V13, 0xe0, V66, 0x0, S3, S2, S1, V671]
Stack pops: 2
Stack additions: [V232]
Exit stack: [V13, 0xe0, V66, 0x0, S3, S2, V232]

================================

Block 0x2a7
[0x2a7:0x2c4]
---
Predecessors: [0x29f]
Successors: [0x2c5]
---
0x2a7 POP
0x2a8 PUSH1 0x1
0x2aa PUSH1 0xa0
0x2ac PUSH1 0x2
0x2ae EXP
0x2af SUB
0x2b0 DUP2
0x2b1 AND
0x2b2 PUSH1 0x0
0x2b4 SWAP1
0x2b5 DUP2
0x2b6 MSTORE
0x2b7 PUSH1 0x6
0x2b9 PUSH1 0x20
0x2bb MSTORE
0x2bc PUSH1 0x40
0x2be SWAP1
0x2bf SHA3
0x2c0 SLOAD
0x2c1 PUSH1 0xff
0x2c3 AND
0x2c4 ISZERO
---
0x2a8: V235 = 0x1
0x2aa: V236 = 0xa0
0x2ac: V237 = 0x2
0x2ae: V238 = EXP 0x2 0xa0
0x2af: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b1: V240 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x2b2: V241 = 0x0
0x2b6: M[0x0] = V240
0x2b7: V242 = 0x6
0x2b9: V243 = 0x20
0x2bb: M[0x20] = 0x6
0x2bc: V244 = 0x40
0x2bf: V245 = SHA3 0x0 0x40
0x2c0: V246 = S[V245]
0x2c1: V247 = 0xff
0x2c3: V248 = AND 0xff V246
0x2c4: V249 = ISZERO V248
---
Entry stack: [V13, 0xe0, V66, 0x0, S2, S1, V232]
Stack pops: 2
Stack additions: [S1, V249]
Exit stack: [V13, 0xe0, V66, 0x0, S2, S1, V249]

================================

Block 0x2c5
[0x2c5:0x2ca]
---
Predecessors: [0x29f, 0x2a7]
Successors: [0x2cb, 0x2cf]
---
0x2c5 JUMPDEST
0x2c6 ISZERO
0x2c7 PUSH2 0x2cf
0x2ca JUMPI
---
0x2c5: JUMPDEST 
0x2c6: V250 = ISZERO S0
0x2c7: V251 = 0x2cf
0x2ca: JUMPI 0x2cf V250
---
Entry stack: [V13, 0xe0, V66, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S2, S1]

================================

Block 0x2cb
[0x2cb:0x2ce]
---
Predecessors: [0x2c5]
Successors: []
---
0x2cb PUSH1 0x0
0x2cd DUP1
0x2ce REVERT
---
0x2cb: V252 = 0x0
0x2ce: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0]

================================

Block 0x2cf
[0x2cf:0x2d9]
---
Predecessors: [0x2c5]
Successors: [0x712]
---
0x2cf JUMPDEST
0x2d0 PUSH1 0x2
0x2d2 SLOAD
0x2d3 PUSH2 0x2da
0x2d6 PUSH2 0x712
0x2d9 JUMP
---
0x2cf: JUMPDEST 
0x2d0: V253 = 0x2
0x2d2: V254 = S[0x2]
0x2d3: V255 = 0x2da
0x2d6: V256 = 0x712
0x2d9: JUMP 0x712
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 0
Stack additions: [V254, 0x2da]
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0, V254, 0x2da]

================================

Block 0x2da
[0x2da:0x2df]
---
Predecessors: [0x712]
Successors: [0x2e0, 0x2e4]
---
0x2da JUMPDEST
0x2db LT
0x2dc PUSH2 0x2e4
0x2df JUMPI
---
0x2da: JUMPDEST 
0x2db: V257 = LT V671 S1
0x2dc: V258 = 0x2e4
0x2df: JUMPI 0x2e4 V257
---
Entry stack: [V13, 0xe0, V66, 0x0, S3, S2, S1, V671]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S3, S2]

================================

Block 0x2e0
[0x2e0:0x2e3]
---
Predecessors: [0x2da]
Successors: []
---
0x2e0 PUSH1 0x0
0x2e2 DUP1
0x2e3 REVERT
---
0x2e0: V259 = 0x0
0x2e3: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0]

================================

Block 0x2e4
[0x2e4:0x2ef]
---
Predecessors: [0x2da]
Successors: [0x2f0, 0x2f4]
---
0x2e4 JUMPDEST
0x2e5 PUSH1 0x5
0x2e7 SLOAD
0x2e8 PUSH1 0xff
0x2ea AND
0x2eb ISZERO
0x2ec PUSH2 0x2f4
0x2ef JUMPI
---
0x2e4: JUMPDEST 
0x2e5: V260 = 0x5
0x2e7: V261 = S[0x5]
0x2e8: V262 = 0xff
0x2ea: V263 = AND 0xff V261
0x2eb: V264 = ISZERO V263
0x2ec: V265 = 0x2f4
0x2ef: JUMPI 0x2f4 V264
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0]

================================

Block 0x2f0
[0x2f0:0x2f3]
---
Predecessors: [0x2e4]
Successors: []
---
0x2f0 PUSH1 0x0
0x2f2 DUP1
0x2f3 REVERT
---
0x2f0: V266 = 0x0
0x2f3: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0]

================================

Block 0x2f4
[0x2f4:0x305]
---
Predecessors: [0x2e4]
Successors: [0x306, 0x30a]
---
0x2f4 JUMPDEST
0x2f5 DUP4
0x2f6 PUSH1 0x1
0x2f8 PUSH1 0xa0
0x2fa PUSH1 0x2
0x2fc EXP
0x2fd SUB
0x2fe DUP2
0x2ff AND
0x300 ISZERO
0x301 ISZERO
0x302 PUSH2 0x30a
0x305 JUMPI
---
0x2f4: JUMPDEST 
0x2f6: V267 = 0x1
0x2f8: V268 = 0xa0
0x2fa: V269 = 0x2
0x2fc: V270 = EXP 0x2 0xa0
0x2fd: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ff: V272 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0x300: V273 = ISZERO V272
0x301: V274 = ISZERO V273
0x302: V275 = 0x30a
0x305: JUMPI 0x30a V274
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3]
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0, V66]

================================

Block 0x306
[0x306:0x309]
---
Predecessors: [0x2f4]
Successors: []
---
0x306 PUSH1 0x0
0x308 DUP1
0x309 REVERT
---
0x306: V276 = 0x0
0x309: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V66, 0x0, S2, S1, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S2, S1, V66]

================================

Block 0x30a
[0x30a:0x31b]
---
Predecessors: [0x2f4]
Successors: [0x31c, 0x320]
---
0x30a JUMPDEST
0x30b PUSH8 0x16345785d8a0000
0x314 DUP1
0x315 CALLVALUE
0x316 LT
0x317 ISZERO
0x318 PUSH2 0x320
0x31b JUMPI
---
0x30a: JUMPDEST 
0x30b: V277 = 0x16345785d8a0000
0x315: V278 = CALLVALUE
0x316: V279 = LT V278 0x16345785d8a0000
0x317: V280 = ISZERO V279
0x318: V281 = 0x320
0x31b: JUMPI 0x320 V280
---
Entry stack: [V13, 0xe0, V66, 0x0, S2, S1, V66]
Stack pops: 0
Stack additions: [0x16345785d8a0000]
Exit stack: [V13, 0xe0, V66, 0x0, S2, S1, V66, 0x16345785d8a0000]

================================

Block 0x31c
[0x31c:0x31f]
---
Predecessors: [0x30a]
Successors: []
---
0x31c PUSH1 0x0
0x31e DUP1
0x31f REVERT
---
0x31c: V282 = 0x0
0x31f: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V66, 0x0, S3, S2, V66, 0x16345785d8a0000]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S3, S2, V66, 0x16345785d8a0000]

================================

Block 0x320
[0x320:0x327]
---
Predecessors: [0x30a]
Successors: [0x612]
---
0x320 JUMPDEST
0x321 PUSH2 0x328
0x324 PUSH2 0x612
0x327 JUMP
---
0x320: JUMPDEST 
0x321: V283 = 0x328
0x324: V284 = 0x612
0x327: JUMP 0x612
---
Entry stack: [V13, 0xe0, V66, 0x0, S3, S2, V66, 0x16345785d8a0000]
Stack pops: 0
Stack additions: [0x328]
Exit stack: [V13, 0xe0, V66, 0x0, S3, S2, V66, 0x16345785d8a0000, 0x328]

================================

Block 0x328
[0x328:0x332]
---
Predecessors: [0x684]
Successors: [0x333, 0x337]
---
0x328 JUMPDEST
0x329 SWAP5
0x32a POP
0x32b PUSH1 0x0
0x32d DUP6
0x32e GT
0x32f PUSH2 0x337
0x332 JUMPI
---
0x328: JUMPDEST 
0x32b: V285 = 0x0
0x32e: V286 = GT V617 0x0
0x32f: V287 = 0x337
0x332: JUMPI 0x337 V286
---
Entry stack: [V13, 0xe0, S6, {0x0, 0xe0}, {0x0, 0x564}, S3, S2, S1, V617]
Stack pops: 6
Stack additions: [S0, S4, S3, S2, S1]
Exit stack: [V13, 0xe0, S6, V617, {0x0, 0x564}, S3, S2, S1]

================================

Block 0x333
[0x333:0x336]
---
Predecessors: [0x328]
Successors: []
---
0x333 PUSH1 0x0
0x335 DUP1
0x336 REVERT
---
0x333: V288 = 0x0
0x336: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, S5, V617, {0x0, 0x564}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, S5, V617, {0x0, 0x564}, S2, S1, S0]

================================

Block 0x337
[0x337:0x342]
---
Predecessors: [0x328]
Successors: [0x566]
---
0x337 JUMPDEST
0x338 PUSH2 0x348
0x33b CALLVALUE
0x33c PUSH2 0x343
0x33f PUSH2 0x566
0x342 JUMP
---
0x337: JUMPDEST 
0x338: V289 = 0x348
0x33b: V290 = CALLVALUE
0x33c: V291 = 0x343
0x33f: V292 = 0x566
0x342: JUMP 0x566
---
Entry stack: [V13, 0xe0, S5, V617, {0x0, 0x564}, S2, S1, S0]
Stack pops: 0
Stack additions: [0x348, V290, 0x343]
Exit stack: [V13, 0xe0, S5, V617, {0x0, 0x564}, S2, S1, S0, 0x348, V290, 0x343]

================================

Block 0x343
[0x343:0x347]
---
Predecessors: [0x566]
Successors: [0x716]
---
0x343 JUMPDEST
0x344 PUSH2 0x716
0x347 JUMP
---
0x343: JUMPDEST 
0x344: V293 = 0x716
0x347: JUMP 0x716
---
Entry stack: [V13, 0xe0, S8, S7, {0x0, 0x564}, S5, S4, S3, 0x348, S1, 0xa]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, S8, S7, {0x0, 0x564}, S5, S4, S3, 0x348, S1, 0xa]

================================

Block 0x348
[0x348:0x352]
---
Predecessors: [0x73a]
Successors: [0x353, 0x357]
---
0x348 JUMPDEST
0x349 SWAP4
0x34a POP
0x34b DUP5
0x34c DUP5
0x34d GT
0x34e ISZERO
0x34f PUSH2 0x357
0x352 JUMPI
---
0x348: JUMPDEST 
0x34d: V294 = GT S0 V617
0x34e: V295 = ISZERO V294
0x34f: V296 = 0x357
0x352: JUMPI 0x357 V295
---
Entry stack: [V13, 0xe0, V66, V617, S4, V66, V66, 0x16345785d8a0000, S0]
Stack pops: 6
Stack additions: [S5, S0, S3, S2, S1]
Exit stack: [V13, 0xe0, V66, V617, S0, V66, V66, 0x16345785d8a0000]

================================

Block 0x353
[0x353:0x356]
---
Predecessors: [0x348]
Successors: []
---
0x353 PUSH1 0x0
0x355 DUP1
0x356 REVERT
---
0x353: V297 = 0x0
0x356: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V66, V617, S3, V66, V66, 0x16345785d8a0000]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, V617, S3, V66, V66, 0x16345785d8a0000]

================================

Block 0x357
[0x357:0x386]
---
Predecessors: [0x348]
Successors: [0x387, 0x38b]
---
0x357 JUMPDEST
0x358 PUSH1 0x3
0x35a SLOAD
0x35b PUSH1 0x1
0x35d PUSH1 0xa0
0x35f PUSH1 0x2
0x361 EXP
0x362 SUB
0x363 AND
0x364 CALLVALUE
0x365 DUP1
0x366 ISZERO
0x367 PUSH2 0x8fc
0x36a MUL
0x36b SWAP1
0x36c PUSH1 0x40
0x36e MLOAD
0x36f PUSH1 0x0
0x371 PUSH1 0x40
0x373 MLOAD
0x374 DUP1
0x375 DUP4
0x376 SUB
0x377 DUP2
0x378 DUP6
0x379 DUP9
0x37a DUP9
0x37b CALL
0x37c SWAP4
0x37d POP
0x37e POP
0x37f POP
0x380 POP
0x381 ISZERO
0x382 ISZERO
0x383 PUSH2 0x38b
0x386 JUMPI
---
0x357: JUMPDEST 
0x358: V298 = 0x3
0x35a: V299 = S[0x3]
0x35b: V300 = 0x1
0x35d: V301 = 0xa0
0x35f: V302 = 0x2
0x361: V303 = EXP 0x2 0xa0
0x362: V304 = SUB 0x10000000000000000000000000000000000000000 0x1
0x363: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x364: V306 = CALLVALUE
0x366: V307 = ISZERO V306
0x367: V308 = 0x8fc
0x36a: V309 = MUL 0x8fc V307
0x36c: V310 = 0x40
0x36e: V311 = M[0x40]
0x36f: V312 = 0x0
0x371: V313 = 0x40
0x373: V314 = M[0x40]
0x376: V315 = SUB V311 V314
0x37b: V316 = CALL V309 V305 V306 V314 V315 V314 0x0
0x381: V317 = ISZERO V316
0x382: V318 = ISZERO V317
0x383: V319 = 0x38b
0x386: JUMPI 0x38b V318
---
Entry stack: [V13, 0xe0, V66, V617, S3, V66, V66, 0x16345785d8a0000]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, V617, S3, V66, V66, 0x16345785d8a0000]

================================

Block 0x387
[0x387:0x38a]
---
Predecessors: [0x357]
Successors: []
---
0x387 PUSH1 0x0
0x389 DUP1
0x38a REVERT
---
0x387: V320 = 0x0
0x38a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V66, V617, S3, V66, V66, 0x16345785d8a0000]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, V617, S3, V66, V66, 0x16345785d8a0000]

================================

Block 0x38b
[0x38b:0x3e2]
---
Predecessors: [0x357]
Successors: [0x3e3, 0x3e7]
---
0x38b JUMPDEST
0x38c PUSH1 0x5
0x38e SLOAD
0x38f PUSH3 0x10000
0x393 SWAP1
0x394 DIV
0x395 PUSH1 0x1
0x397 PUSH1 0xa0
0x399 PUSH1 0x2
0x39b EXP
0x39c SUB
0x39d AND
0x39e PUSH4 0xa9059cbb
0x3a3 DUP8
0x3a4 DUP7
0x3a5 PUSH1 0x40
0x3a7 MLOAD
0x3a8 PUSH1 0xe0
0x3aa PUSH1 0x2
0x3ac EXP
0x3ad PUSH4 0xffffffff
0x3b2 DUP6
0x3b3 AND
0x3b4 MUL
0x3b5 DUP2
0x3b6 MSTORE
0x3b7 PUSH1 0x1
0x3b9 PUSH1 0xa0
0x3bb PUSH1 0x2
0x3bd EXP
0x3be SUB
0x3bf SWAP1
0x3c0 SWAP3
0x3c1 AND
0x3c2 PUSH1 0x4
0x3c4 DUP4
0x3c5 ADD
0x3c6 MSTORE
0x3c7 PUSH1 0x24
0x3c9 DUP3
0x3ca ADD
0x3cb MSTORE
0x3cc PUSH1 0x44
0x3ce ADD
0x3cf PUSH1 0x0
0x3d1 PUSH1 0x40
0x3d3 MLOAD
0x3d4 DUP1
0x3d5 DUP4
0x3d6 SUB
0x3d7 DUP2
0x3d8 PUSH1 0x0
0x3da DUP8
0x3db DUP1
0x3dc EXTCODESIZE
0x3dd ISZERO
0x3de ISZERO
0x3df PUSH2 0x3e7
0x3e2 JUMPI
---
0x38b: JUMPDEST 
0x38c: V321 = 0x5
0x38e: V322 = S[0x5]
0x38f: V323 = 0x10000
0x394: V324 = DIV V322 0x10000
0x395: V325 = 0x1
0x397: V326 = 0xa0
0x399: V327 = 0x2
0x39b: V328 = EXP 0x2 0xa0
0x39c: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39d: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x39e: V331 = 0xa9059cbb
0x3a5: V332 = 0x40
0x3a7: V333 = M[0x40]
0x3a8: V334 = 0xe0
0x3aa: V335 = 0x2
0x3ac: V336 = EXP 0x2 0xe0
0x3ad: V337 = 0xffffffff
0x3b3: V338 = AND 0xa9059cbb 0xffffffff
0x3b4: V339 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x3b6: M[V333] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3b7: V340 = 0x1
0x3b9: V341 = 0xa0
0x3bb: V342 = 0x2
0x3bd: V343 = EXP 0x2 0xa0
0x3be: V344 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c1: V345 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0x3c2: V346 = 0x4
0x3c5: V347 = ADD V333 0x4
0x3c6: M[V347] = V345
0x3c7: V348 = 0x24
0x3ca: V349 = ADD V333 0x24
0x3cb: M[V349] = S3
0x3cc: V350 = 0x44
0x3ce: V351 = ADD 0x44 V333
0x3cf: V352 = 0x0
0x3d1: V353 = 0x40
0x3d3: V354 = M[0x40]
0x3d6: V355 = SUB V351 V354
0x3d8: V356 = 0x0
0x3dc: V357 = EXTCODESIZE V330
0x3dd: V358 = ISZERO V357
0x3de: V359 = ISZERO V358
0x3df: V360 = 0x3e7
0x3e2: JUMPI 0x3e7 V359
---
Entry stack: [V13, 0xe0, V66, V617, S3, V66, V66, 0x16345785d8a0000]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V330, 0xa9059cbb, V351, 0x0, V354, V355, V354, 0x0, V330]
Exit stack: [V13, 0xe0, V66, V617, S3, V66, V66, 0x16345785d8a0000, V330, 0xa9059cbb, V351, 0x0, V354, V355, V354, 0x0, V330]

================================

Block 0x3e3
[0x3e3:0x3e6]
---
Predecessors: [0x38b]
Successors: []
---
0x3e3 PUSH1 0x0
0x3e5 DUP1
0x3e6 REVERT
---
0x3e3: V361 = 0x0
0x3e6: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V66, V617, S12, V66, V66, 0x16345785d8a0000, V330, 0xa9059cbb, V351, 0x0, V354, V355, V354, 0x0, V330]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, V617, S12, V66, V66, 0x16345785d8a0000, V330, 0xa9059cbb, V351, 0x0, V354, V355, V354, 0x0, V330]

================================

Block 0x3e7
[0x3e7:0x3f3]
---
Predecessors: [0x38b]
Successors: [0x3f4, 0x3f8]
---
0x3e7 JUMPDEST
0x3e8 PUSH2 0x2c6
0x3eb GAS
0x3ec SUB
0x3ed CALL
0x3ee ISZERO
0x3ef ISZERO
0x3f0 PUSH2 0x3f8
0x3f3 JUMPI
---
0x3e7: JUMPDEST 
0x3e8: V362 = 0x2c6
0x3eb: V363 = GAS
0x3ec: V364 = SUB V363 0x2c6
0x3ed: V365 = CALL V364 V330 0x0 V354 V355 V354 0x0
0x3ee: V366 = ISZERO V365
0x3ef: V367 = ISZERO V366
0x3f0: V368 = 0x3f8
0x3f3: JUMPI 0x3f8 V367
---
Entry stack: [V13, 0xe0, V66, V617, S12, V66, V66, 0x16345785d8a0000, V330, 0xa9059cbb, V351, 0x0, V354, V355, V354, 0x0, V330]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xe0, V66, V617, S12, V66, V66, 0x16345785d8a0000, V330, 0xa9059cbb, V351]

================================

Block 0x3f4
[0x3f4:0x3f7]
---
Predecessors: [0x3e7]
Successors: []
---
0x3f4 PUSH1 0x0
0x3f6 DUP1
0x3f7 REVERT
---
0x3f4: V369 = 0x0
0x3f7: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V66, V617, S6, V66, V66, 0x16345785d8a0000, V330, 0xa9059cbb, V351]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, V617, S6, V66, V66, 0x16345785d8a0000, V330, 0xa9059cbb, V351]

================================

Block 0x3f8
[0x3f8:0x406]
---
Predecessors: [0x3e7]
Successors: [0x741]
---
0x3f8 JUMPDEST
0x3f9 POP
0x3fa POP
0x3fb POP
0x3fc PUSH2 0x407
0x3ff PUSH1 0x4
0x401 SLOAD
0x402 CALLVALUE
0x403 PUSH2 0x741
0x406 JUMP
---
0x3f8: JUMPDEST 
0x3fc: V370 = 0x407
0x3ff: V371 = 0x4
0x401: V372 = S[0x4]
0x402: V373 = CALLVALUE
0x403: V374 = 0x741
0x406: JUMP 0x741
---
Entry stack: [V13, 0xe0, V66, V617, S6, V66, V66, 0x16345785d8a0000, V330, 0xa9059cbb, V351]
Stack pops: 3
Stack additions: [0x407, V372, V373]
Exit stack: [V13, 0xe0, V66, V617, S6, V66, V66, 0x16345785d8a0000, 0x407, V372, V373]

================================

Block 0x407
[0x407:0x455]
---
Predecessors: [0x73a]
Successors: [0xe0]
---
0x407 JUMPDEST
0x408 PUSH1 0x4
0x40a SSTORE
0x40b PUSH1 0x1
0x40d PUSH1 0xa0
0x40f PUSH1 0x2
0x411 EXP
0x412 SUB
0x413 DUP7
0x414 AND
0x415 PUSH32 0x7d92561d9486854d24999c3a9e1999d946c2b7405d61e070567286a98e174c3a
0x436 DUP6
0x437 CALLVALUE
0x438 PUSH1 0x40
0x43a MLOAD
0x43b SWAP2
0x43c DUP3
0x43d MSTORE
0x43e PUSH1 0x20
0x440 DUP3
0x441 ADD
0x442 MSTORE
0x443 PUSH1 0x40
0x445 SWAP1
0x446 DUP2
0x447 ADD
0x448 SWAP1
0x449 MLOAD
0x44a DUP1
0x44b SWAP2
0x44c SUB
0x44d SWAP1
0x44e LOG2
0x44f POP
0x450 POP
0x451 POP
0x452 POP
0x453 POP
0x454 POP
0x455 JUMP
---
0x407: JUMPDEST 
0x408: V375 = 0x4
0x40a: S[0x4] = S0
0x40b: V376 = 0x1
0x40d: V377 = 0xa0
0x40f: V378 = 0x2
0x411: V379 = EXP 0x2 0xa0
0x412: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x414: V381 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0x415: V382 = 0x7d92561d9486854d24999c3a9e1999d946c2b7405d61e070567286a98e174c3a
0x437: V383 = CALLVALUE
0x438: V384 = 0x40
0x43a: V385 = M[0x40]
0x43d: M[V385] = S4
0x43e: V386 = 0x20
0x441: V387 = ADD V385 0x20
0x442: M[V387] = V383
0x443: V388 = 0x40
0x447: V389 = ADD 0x40 V385
0x449: V390 = M[0x40]
0x44c: V391 = SUB V389 V390
0x44e: LOG V390 V391 0x7d92561d9486854d24999c3a9e1999d946c2b7405d61e070567286a98e174c3a V381
0x455: JUMP 0xe0
---
Entry stack: [V13, 0xe0, V66, V617, S4, V66, V66, 0x16345785d8a0000, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V13]

================================

Block 0x456
[0x456:0x46c]
---
Predecessors: [0xed]
Successors: [0x46d, 0x471]
---
0x456 JUMPDEST
0x457 PUSH1 0x0
0x459 SLOAD
0x45a CALLER
0x45b PUSH1 0x1
0x45d PUSH1 0xa0
0x45f PUSH1 0x2
0x461 EXP
0x462 SUB
0x463 SWAP1
0x464 DUP2
0x465 AND
0x466 SWAP2
0x467 AND
0x468 EQ
0x469 PUSH2 0x471
0x46c JUMPI
---
0x456: JUMPDEST 
0x457: V392 = 0x0
0x459: V393 = S[0x0]
0x45a: V394 = CALLER
0x45b: V395 = 0x1
0x45d: V396 = 0xa0
0x45f: V397 = 0x2
0x461: V398 = EXP 0x2 0xa0
0x462: V399 = SUB 0x10000000000000000000000000000000000000000 0x1
0x465: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x467: V401 = AND V393 0xffffffffffffffffffffffffffffffffffffffff
0x468: V402 = EQ V401 V400
0x469: V403 = 0x471
0x46c: JUMPI 0x471 V402
---
Entry stack: [V13, 0xe0, V80, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V80, V84]

================================

Block 0x46d
[0x46d:0x470]
---
Predecessors: [0x456]
Successors: []
---
0x46d PUSH1 0x0
0x46f DUP1
0x470 REVERT
---
0x46d: V404 = 0x0
0x470: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V80, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V80, V84]

================================

Block 0x471
[0x471:0x4e1]
---
Predecessors: [0x456]
Successors: [0xe0]
---
0x471 JUMPDEST
0x472 PUSH1 0x1
0x474 PUSH1 0xa0
0x476 PUSH1 0x2
0x478 EXP
0x479 SUB
0x47a DUP3
0x47b AND
0x47c PUSH1 0x0
0x47e SWAP1
0x47f DUP2
0x480 MSTORE
0x481 PUSH1 0x6
0x483 PUSH1 0x20
0x485 MSTORE
0x486 PUSH1 0x40
0x488 SWAP1
0x489 DUP2
0x48a SWAP1
0x48b SHA3
0x48c DUP1
0x48d SLOAD
0x48e PUSH1 0xff
0x490 NOT
0x491 AND
0x492 DUP4
0x493 ISZERO
0x494 ISZERO
0x495 OR
0x496 SWAP1
0x497 SSTORE
0x498 PUSH32 0xa54714518c5d275fdcd3d2a461e4858e4e8cb04fb93cd0bca9d6d34115f26440
0x4b9 SWAP1
0x4ba DUP4
0x4bb SWAP1
0x4bc DUP4
0x4bd SWAP1
0x4be MLOAD
0x4bf PUSH1 0x1
0x4c1 PUSH1 0xa0
0x4c3 PUSH1 0x2
0x4c5 EXP
0x4c6 SUB
0x4c7 SWAP1
0x4c8 SWAP3
0x4c9 AND
0x4ca DUP3
0x4cb MSTORE
0x4cc ISZERO
0x4cd ISZERO
0x4ce PUSH1 0x20
0x4d0 DUP3
0x4d1 ADD
0x4d2 MSTORE
0x4d3 PUSH1 0x40
0x4d5 SWAP1
0x4d6 DUP2
0x4d7 ADD
0x4d8 SWAP1
0x4d9 MLOAD
0x4da DUP1
0x4db SWAP2
0x4dc SUB
0x4dd SWAP1
0x4de LOG1
0x4df POP
0x4e0 POP
0x4e1 JUMP
---
0x471: JUMPDEST 
0x472: V405 = 0x1
0x474: V406 = 0xa0
0x476: V407 = 0x2
0x478: V408 = EXP 0x2 0xa0
0x479: V409 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47b: V410 = AND V80 0xffffffffffffffffffffffffffffffffffffffff
0x47c: V411 = 0x0
0x480: M[0x0] = V410
0x481: V412 = 0x6
0x483: V413 = 0x20
0x485: M[0x20] = 0x6
0x486: V414 = 0x40
0x48b: V415 = SHA3 0x0 0x40
0x48d: V416 = S[V415]
0x48e: V417 = 0xff
0x490: V418 = NOT 0xff
0x491: V419 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V416
0x493: V420 = ISZERO V84
0x494: V421 = ISZERO V420
0x495: V422 = OR V421 V419
0x497: S[V415] = V422
0x498: V423 = 0xa54714518c5d275fdcd3d2a461e4858e4e8cb04fb93cd0bca9d6d34115f26440
0x4be: V424 = M[0x40]
0x4bf: V425 = 0x1
0x4c1: V426 = 0xa0
0x4c3: V427 = 0x2
0x4c5: V428 = EXP 0x2 0xa0
0x4c6: V429 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c9: V430 = AND V80 0xffffffffffffffffffffffffffffffffffffffff
0x4cb: M[V424] = V430
0x4cc: V431 = ISZERO V84
0x4cd: V432 = ISZERO V431
0x4ce: V433 = 0x20
0x4d1: V434 = ADD V424 0x20
0x4d2: M[V434] = V432
0x4d3: V435 = 0x40
0x4d7: V436 = ADD 0x40 V424
0x4d9: V437 = M[0x40]
0x4dc: V438 = SUB V436 V437
0x4de: LOG V437 V438 0xa54714518c5d275fdcd3d2a461e4858e4e8cb04fb93cd0bca9d6d34115f26440
0x4e1: JUMP 0xe0
---
Entry stack: [V13, 0xe0, V80, V84]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x4e2
[0x4e2:0x4ed]
---
Predecessors: [0x111]
Successors: [0x4ee, 0x4f2]
---
0x4e2 JUMPDEST
0x4e3 PUSH1 0x5
0x4e5 SLOAD
0x4e6 PUSH1 0xff
0x4e8 AND
0x4e9 ISZERO
0x4ea PUSH2 0x4f2
0x4ed JUMPI
---
0x4e2: JUMPDEST 
0x4e3: V439 = 0x5
0x4e5: V440 = S[0x5]
0x4e6: V441 = 0xff
0x4e8: V442 = AND 0xff V440
0x4e9: V443 = ISZERO V442
0x4ea: V444 = 0x4f2
0x4ed: JUMPI 0x4f2 V443
---
Entry stack: [V13, 0xe0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0]

================================

Block 0x4ee
[0x4ee:0x4f1]
---
Predecessors: [0x4e2]
Successors: []
---
0x4ee PUSH1 0x0
0x4f0 DUP1
0x4f1 REVERT
---
0x4ee: V445 = 0x0
0x4f1: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0]

================================

Block 0x4f2
[0x4f2:0x508]
---
Predecessors: [0x4e2]
Successors: [0x509, 0x50d]
---
0x4f2 JUMPDEST
0x4f3 PUSH1 0x0
0x4f5 SLOAD
0x4f6 CALLER
0x4f7 PUSH1 0x1
0x4f9 PUSH1 0xa0
0x4fb PUSH1 0x2
0x4fd EXP
0x4fe SUB
0x4ff SWAP1
0x500 DUP2
0x501 AND
0x502 SWAP2
0x503 AND
0x504 EQ
0x505 PUSH2 0x50d
0x508 JUMPI
---
0x4f2: JUMPDEST 
0x4f3: V446 = 0x0
0x4f5: V447 = S[0x0]
0x4f6: V448 = CALLER
0x4f7: V449 = 0x1
0x4f9: V450 = 0xa0
0x4fb: V451 = 0x2
0x4fd: V452 = EXP 0x2 0xa0
0x4fe: V453 = SUB 0x10000000000000000000000000000000000000000 0x1
0x501: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x503: V455 = AND V447 0xffffffffffffffffffffffffffffffffffffffff
0x504: V456 = EQ V455 V454
0x505: V457 = 0x50d
0x508: JUMPI 0x50d V456
---
Entry stack: [V13, 0xe0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0]

================================

Block 0x509
[0x509:0x50c]
---
Predecessors: [0x4f2]
Successors: []
---
0x509 PUSH1 0x0
0x50b DUP1
0x50c REVERT
---
0x509: V458 = 0x0
0x50c: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0]

================================

Block 0x50d
[0x50d:0x51b]
---
Predecessors: [0x4f2]
Successors: [0xe0]
---
0x50d JUMPDEST
0x50e PUSH1 0x5
0x510 DUP1
0x511 SLOAD
0x512 PUSH1 0xff
0x514 NOT
0x515 AND
0x516 PUSH1 0x1
0x518 OR
0x519 SWAP1
0x51a SSTORE
0x51b JUMP
---
0x50d: JUMPDEST 
0x50e: V459 = 0x5
0x511: V460 = S[0x5]
0x512: V461 = 0xff
0x514: V462 = NOT 0xff
0x515: V463 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V460
0x516: V464 = 0x1
0x518: V465 = OR 0x1 V463
0x51a: S[0x5] = V465
0x51b: JUMP 0xe0
---
Entry stack: [V13, 0xe0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x51c
[0x51c:0x521]
---
Predecessors: [0x124]
Successors: [0x12c]
---
0x51c JUMPDEST
0x51d PUSH1 0x2
0x51f SLOAD
0x520 DUP2
0x521 JUMP
---
0x51c: JUMPDEST 
0x51d: V466 = 0x2
0x51f: V467 = S[0x2]
0x521: JUMP 0x12c
---
Entry stack: [V13, 0x12c]
Stack pops: 1
Stack additions: [S0, V467]
Exit stack: [V13, 0x12c, V467]

================================

Block 0x522
[0x522:0x52a]
---
Predecessors: [0x149]
Successors: [0x151]
---
0x522 JUMPDEST
0x523 PUSH1 0x5
0x525 SLOAD
0x526 PUSH1 0xff
0x528 AND
0x529 DUP2
0x52a JUMP
---
0x522: JUMPDEST 
0x523: V468 = 0x5
0x525: V469 = S[0x5]
0x526: V470 = 0xff
0x528: V471 = AND 0xff V469
0x52a: JUMP 0x151
---
Entry stack: [V13, 0x151]
Stack pops: 1
Stack additions: [S0, V471]
Exit stack: [V13, 0x151, V471]

================================

Block 0x52b
[0x52b:0x535]
---
Predecessors: [0x170]
Successors: [0x712]
---
0x52b JUMPDEST
0x52c PUSH1 0x2
0x52e SLOAD
0x52f PUSH2 0x536
0x532 PUSH2 0x712
0x535 JUMP
---
0x52b: JUMPDEST 
0x52c: V472 = 0x2
0x52e: V473 = S[0x2]
0x52f: V474 = 0x536
0x532: V475 = 0x712
0x535: JUMP 0x712
---
Entry stack: [V13, 0xe0]
Stack pops: 0
Stack additions: [V473, 0x536]
Exit stack: [V13, 0xe0, V473, 0x536]

================================

Block 0x536
[0x536:0x53c]
---
Predecessors: [0x712]
Successors: [0x53d, 0x541]
---
0x536 JUMPDEST
0x537 LT
0x538 ISZERO
0x539 PUSH2 0x541
0x53c JUMPI
---
0x536: JUMPDEST 
0x537: V476 = LT V671 S1
0x538: V477 = ISZERO V476
0x539: V478 = 0x541
0x53c: JUMPI 0x541 V477
---
Entry stack: [V13, 0xe0, V66, 0x0, S3, S2, S1, V671]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S3, S2]

================================

Block 0x53d
[0x53d:0x540]
---
Predecessors: [0x536]
Successors: []
---
0x53d PUSH1 0x0
0x53f DUP1
0x540 REVERT
---
0x53d: V479 = 0x0
0x540: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0]

================================

Block 0x541
[0x541:0x557]
---
Predecessors: [0x536]
Successors: [0x558, 0x55c]
---
0x541 JUMPDEST
0x542 PUSH1 0x0
0x544 SLOAD
0x545 CALLER
0x546 PUSH1 0x1
0x548 PUSH1 0xa0
0x54a PUSH1 0x2
0x54c EXP
0x54d SUB
0x54e SWAP1
0x54f DUP2
0x550 AND
0x551 SWAP2
0x552 AND
0x553 EQ
0x554 PUSH2 0x55c
0x557 JUMPI
---
0x541: JUMPDEST 
0x542: V480 = 0x0
0x544: V481 = S[0x0]
0x545: V482 = CALLER
0x546: V483 = 0x1
0x548: V484 = 0xa0
0x54a: V485 = 0x2
0x54c: V486 = EXP 0x2 0xa0
0x54d: V487 = SUB 0x10000000000000000000000000000000000000000 0x1
0x550: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x552: V489 = AND V481 0xffffffffffffffffffffffffffffffffffffffff
0x553: V490 = EQ V489 V488
0x554: V491 = 0x55c
0x557: JUMPI 0x55c V490
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0]

================================

Block 0x558
[0x558:0x55b]
---
Predecessors: [0x541]
Successors: []
---
0x558 PUSH1 0x0
0x55a DUP1
0x55b REVERT
---
0x558: V492 = 0x0
0x55b: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0]

================================

Block 0x55c
[0x55c:0x563]
---
Predecessors: [0x541]
Successors: [0x750]
---
0x55c JUMPDEST
0x55d PUSH2 0x564
0x560 PUSH2 0x750
0x563 JUMP
---
0x55c: JUMPDEST 
0x55d: V493 = 0x564
0x560: V494 = 0x750
0x563: JUMP 0x750
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 0
Stack additions: [0x564]
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0, 0x564]

================================

Block 0x564
[0x564:0x565]
---
Predecessors: [0x804]
Successors: [0xe0]
---
0x564 JUMPDEST
0x565 JUMP
---
0x564: JUMPDEST 
0x565: JUMP {0x0, 0xe0}
---
Entry stack: [V13, 0xe0, S1, {0x0, 0xe0}]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xe0, S1]

================================

Block 0x566
[0x566:0x56a]
---
Predecessors: [0x183, 0x337]
Successors: [0x12c, 0x343]
---
0x566 JUMPDEST
0x567 PUSH1 0xa
0x569 SWAP1
0x56a JUMP
---
0x566: JUMPDEST 
0x567: V495 = 0xa
0x56a: JUMP {0x12c, 0x343}
---
Entry stack: [V13, 0xe0, S8, V617, {0x0, 0x564}, S5, S4, S3, 0x348, S1, {0x12c, 0x343}]
Stack pops: 1
Stack additions: [0xa]
Exit stack: [V13, 0xe0, S8, V617, {0x0, 0x564}, S5, S4, S3, 0x348, S1, 0xa]

================================

Block 0x56b
[0x56b:0x575]
---
Predecessors: [0x196]
Successors: [0x712]
---
0x56b JUMPDEST
0x56c PUSH1 0x1
0x56e SLOAD
0x56f PUSH2 0x576
0x572 PUSH2 0x712
0x575 JUMP
---
0x56b: JUMPDEST 
0x56c: V496 = 0x1
0x56e: V497 = S[0x1]
0x56f: V498 = 0x576
0x572: V499 = 0x712
0x575: JUMP 0x712
---
Entry stack: [V13, 0xe0]
Stack pops: 0
Stack additions: [V497, 0x576]
Exit stack: [V13, 0xe0, V497, 0x576]

================================

Block 0x576
[0x576:0x57c]
---
Predecessors: [0x712]
Successors: [0x57d, 0x581]
---
0x576 JUMPDEST
0x577 LT
0x578 ISZERO
0x579 PUSH2 0x581
0x57c JUMPI
---
0x576: JUMPDEST 
0x577: V500 = LT V671 S1
0x578: V501 = ISZERO V500
0x579: V502 = 0x581
0x57c: JUMPI 0x581 V501
---
Entry stack: [V13, 0xe0, V66, 0x0, S3, S2, S1, V671]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S3, S2]

================================

Block 0x57d
[0x57d:0x580]
---
Predecessors: [0x576]
Successors: []
---
0x57d PUSH1 0x0
0x57f DUP1
0x580 REVERT
---
0x57d: V503 = 0x0
0x580: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0]

================================

Block 0x581
[0x581:0x58b]
---
Predecessors: [0x576]
Successors: [0x712]
---
0x581 JUMPDEST
0x582 PUSH1 0x2
0x584 SLOAD
0x585 PUSH2 0x58c
0x588 PUSH2 0x712
0x58b JUMP
---
0x581: JUMPDEST 
0x582: V504 = 0x2
0x584: V505 = S[0x2]
0x585: V506 = 0x58c
0x588: V507 = 0x712
0x58b: JUMP 0x712
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 0
Stack additions: [V505, 0x58c]
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0, V505, 0x58c]

================================

Block 0x58c
[0x58c:0x591]
---
Predecessors: [0x712]
Successors: [0x592, 0x596]
---
0x58c JUMPDEST
0x58d LT
0x58e PUSH2 0x596
0x591 JUMPI
---
0x58c: JUMPDEST 
0x58d: V508 = LT V671 S1
0x58e: V509 = 0x596
0x591: JUMPI 0x596 V508
---
Entry stack: [V13, 0xe0, V66, 0x0, S3, S2, S1, V671]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S3, S2]

================================

Block 0x592
[0x592:0x595]
---
Predecessors: [0x58c]
Successors: []
---
0x592 PUSH1 0x0
0x594 DUP1
0x595 REVERT
---
0x592: V510 = 0x0
0x595: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0]

================================

Block 0x596
[0x596:0x5a2]
---
Predecessors: [0x58c]
Successors: [0x5a3, 0x5a7]
---
0x596 JUMPDEST
0x597 PUSH1 0x5
0x599 SLOAD
0x59a PUSH1 0xff
0x59c AND
0x59d ISZERO
0x59e ISZERO
0x59f PUSH2 0x5a7
0x5a2 JUMPI
---
0x596: JUMPDEST 
0x597: V511 = 0x5
0x599: V512 = S[0x5]
0x59a: V513 = 0xff
0x59c: V514 = AND 0xff V512
0x59d: V515 = ISZERO V514
0x59e: V516 = ISZERO V515
0x59f: V517 = 0x5a7
0x5a2: JUMPI 0x5a7 V516
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0]

================================

Block 0x5a3
[0x5a3:0x5a6]
---
Predecessors: [0x596]
Successors: []
---
0x5a3 PUSH1 0x0
0x5a5 DUP1
0x5a6 REVERT
---
0x5a3: V518 = 0x0
0x5a6: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0]

================================

Block 0x5a7
[0x5a7:0x5bd]
---
Predecessors: [0x596]
Successors: [0x5be, 0x5c2]
---
0x5a7 JUMPDEST
0x5a8 PUSH1 0x0
0x5aa SLOAD
0x5ab CALLER
0x5ac PUSH1 0x1
0x5ae PUSH1 0xa0
0x5b0 PUSH1 0x2
0x5b2 EXP
0x5b3 SUB
0x5b4 SWAP1
0x5b5 DUP2
0x5b6 AND
0x5b7 SWAP2
0x5b8 AND
0x5b9 EQ
0x5ba PUSH2 0x5c2
0x5bd JUMPI
---
0x5a7: JUMPDEST 
0x5a8: V519 = 0x0
0x5aa: V520 = S[0x0]
0x5ab: V521 = CALLER
0x5ac: V522 = 0x1
0x5ae: V523 = 0xa0
0x5b0: V524 = 0x2
0x5b2: V525 = EXP 0x2 0xa0
0x5b3: V526 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b6: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x5b8: V528 = AND V520 0xffffffffffffffffffffffffffffffffffffffff
0x5b9: V529 = EQ V528 V527
0x5ba: V530 = 0x5c2
0x5bd: JUMPI 0x5c2 V529
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0]

================================

Block 0x5be
[0x5be:0x5c1]
---
Predecessors: [0x5a7]
Successors: []
---
0x5be PUSH1 0x0
0x5c0 DUP1
0x5c1 REVERT
---
0x5be: V531 = 0x0
0x5c1: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S1, S0]

================================

Block 0x5c2
[0x5c2:0x5cd]
---
Predecessors: [0x5a7]
Successors: [0xe0]
---
0x5c2 JUMPDEST
0x5c3 PUSH1 0x5
0x5c5 DUP1
0x5c6 SLOAD
0x5c7 PUSH1 0xff
0x5c9 NOT
0x5ca AND
0x5cb SWAP1
0x5cc SSTORE
0x5cd JUMP
---
0x5c2: JUMPDEST 
0x5c3: V532 = 0x5
0x5c6: V533 = S[0x5]
0x5c7: V534 = 0xff
0x5c9: V535 = NOT 0xff
0x5ca: V536 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V533
0x5cc: S[0x5] = V536
0x5cd: JUMP S0
---
Entry stack: [V13, 0xe0, V66, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S1]

================================

Block 0x5ce
[0x5ce:0x5d3]
---
Predecessors: [0x1a9]
Successors: [0x12c]
---
0x5ce JUMPDEST
0x5cf PUSH1 0x1
0x5d1 SLOAD
0x5d2 DUP2
0x5d3 JUMP
---
0x5ce: JUMPDEST 
0x5cf: V537 = 0x1
0x5d1: V538 = S[0x1]
0x5d3: JUMP 0x12c
---
Entry stack: [V13, 0x12c]
Stack pops: 1
Stack additions: [S0, V538]
Exit stack: [V13, 0x12c, V538]

================================

Block 0x5d4
[0x5d4:0x5df]
---
Predecessors: [0x1bc]
Successors: [0x12c]
---
0x5d4 JUMPDEST
0x5d5 PUSH8 0x16345785d8a0000
0x5de DUP2
0x5df JUMP
---
0x5d4: JUMPDEST 
0x5d5: V539 = 0x16345785d8a0000
0x5df: JUMP 0x12c
---
Entry stack: [V13, 0x12c]
Stack pops: 1
Stack additions: [S0, 0x16345785d8a0000]
Exit stack: [V13, 0x12c, 0x16345785d8a0000]

================================

Block 0x5e0
[0x5e0:0x5ee]
---
Predecessors: [0x1cf]
Successors: [0x1d7]
---
0x5e0 JUMPDEST
0x5e1 PUSH1 0x0
0x5e3 SLOAD
0x5e4 PUSH1 0x1
0x5e6 PUSH1 0xa0
0x5e8 PUSH1 0x2
0x5ea EXP
0x5eb SUB
0x5ec AND
0x5ed DUP2
0x5ee JUMP
---
0x5e0: JUMPDEST 
0x5e1: V540 = 0x0
0x5e3: V541 = S[0x0]
0x5e4: V542 = 0x1
0x5e6: V543 = 0xa0
0x5e8: V544 = 0x2
0x5ea: V545 = EXP 0x2 0xa0
0x5eb: V546 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ec: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V541
0x5ee: JUMP 0x1d7
---
Entry stack: [V13, 0x1d7]
Stack pops: 1
Stack additions: [S0, V547]
Exit stack: [V13, 0x1d7, V547]

================================

Block 0x5ef
[0x5ef:0x603]
---
Predecessors: [0x1fe]
Successors: [0x151]
---
0x5ef JUMPDEST
0x5f0 PUSH1 0x6
0x5f2 PUSH1 0x20
0x5f4 MSTORE
0x5f5 PUSH1 0x0
0x5f7 SWAP1
0x5f8 DUP2
0x5f9 MSTORE
0x5fa PUSH1 0x40
0x5fc SWAP1
0x5fd SHA3
0x5fe SLOAD
0x5ff PUSH1 0xff
0x601 AND
0x602 DUP2
0x603 JUMP
---
0x5ef: JUMPDEST 
0x5f0: V548 = 0x6
0x5f2: V549 = 0x20
0x5f4: M[0x20] = 0x6
0x5f5: V550 = 0x0
0x5f9: M[0x0] = V181
0x5fa: V551 = 0x40
0x5fd: V552 = SHA3 0x0 0x40
0x5fe: V553 = S[V552]
0x5ff: V554 = 0xff
0x601: V555 = AND 0xff V553
0x603: JUMP 0x151
---
Entry stack: [V13, 0x151, V181]
Stack pops: 2
Stack additions: [S1, V555]
Exit stack: [V13, 0x151, V555]

================================

Block 0x604
[0x604:0x611]
---
Predecessors: [0x21d]
Successors: [0x151]
---
0x604 JUMPDEST
0x605 PUSH1 0x5
0x607 SLOAD
0x608 PUSH2 0x100
0x60b SWAP1
0x60c DIV
0x60d PUSH1 0xff
0x60f AND
0x610 DUP2
0x611 JUMP
---
0x604: JUMPDEST 
0x605: V556 = 0x5
0x607: V557 = S[0x5]
0x608: V558 = 0x100
0x60c: V559 = DIV V557 0x100
0x60d: V560 = 0xff
0x60f: V561 = AND 0xff V559
0x611: JUMP 0x151
---
Entry stack: [V13, 0x151]
Stack pops: 1
Stack additions: [S0, V561]
Exit stack: [V13, 0x151, V561]

================================

Block 0x612
[0x612:0x66e]
---
Predecessors: [0x230, 0x320, 0x789]
Successors: [0x66f, 0x673]
---
0x612 JUMPDEST
0x613 PUSH1 0x5
0x615 SLOAD
0x616 PUSH1 0x0
0x618 SWAP1
0x619 PUSH3 0x10000
0x61d SWAP1
0x61e DIV
0x61f PUSH1 0x1
0x621 PUSH1 0xa0
0x623 PUSH1 0x2
0x625 EXP
0x626 SUB
0x627 AND
0x628 PUSH4 0x70a08231
0x62d ADDRESS
0x62e DUP4
0x62f PUSH1 0x40
0x631 MLOAD
0x632 PUSH1 0x20
0x634 ADD
0x635 MSTORE
0x636 PUSH1 0x40
0x638 MLOAD
0x639 PUSH1 0xe0
0x63b PUSH1 0x2
0x63d EXP
0x63e PUSH4 0xffffffff
0x643 DUP5
0x644 AND
0x645 MUL
0x646 DUP2
0x647 MSTORE
0x648 PUSH1 0x1
0x64a PUSH1 0xa0
0x64c PUSH1 0x2
0x64e EXP
0x64f SUB
0x650 SWAP1
0x651 SWAP2
0x652 AND
0x653 PUSH1 0x4
0x655 DUP3
0x656 ADD
0x657 MSTORE
0x658 PUSH1 0x24
0x65a ADD
0x65b PUSH1 0x20
0x65d PUSH1 0x40
0x65f MLOAD
0x660 DUP1
0x661 DUP4
0x662 SUB
0x663 DUP2
0x664 PUSH1 0x0
0x666 DUP8
0x667 DUP1
0x668 EXTCODESIZE
0x669 ISZERO
0x66a ISZERO
0x66b PUSH2 0x673
0x66e JUMPI
---
0x612: JUMPDEST 
0x613: V562 = 0x5
0x615: V563 = S[0x5]
0x616: V564 = 0x0
0x619: V565 = 0x10000
0x61e: V566 = DIV V563 0x10000
0x61f: V567 = 0x1
0x621: V568 = 0xa0
0x623: V569 = 0x2
0x625: V570 = EXP 0x2 0xa0
0x626: V571 = SUB 0x10000000000000000000000000000000000000000 0x1
0x627: V572 = AND 0xffffffffffffffffffffffffffffffffffffffff V566
0x628: V573 = 0x70a08231
0x62d: V574 = ADDRESS
0x62f: V575 = 0x40
0x631: V576 = M[0x40]
0x632: V577 = 0x20
0x634: V578 = ADD 0x20 V576
0x635: M[V578] = 0x0
0x636: V579 = 0x40
0x638: V580 = M[0x40]
0x639: V581 = 0xe0
0x63b: V582 = 0x2
0x63d: V583 = EXP 0x2 0xe0
0x63e: V584 = 0xffffffff
0x644: V585 = AND 0x70a08231 0xffffffff
0x645: V586 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x647: M[V580] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x648: V587 = 0x1
0x64a: V588 = 0xa0
0x64c: V589 = 0x2
0x64e: V590 = EXP 0x2 0xa0
0x64f: V591 = SUB 0x10000000000000000000000000000000000000000 0x1
0x652: V592 = AND V574 0xffffffffffffffffffffffffffffffffffffffff
0x653: V593 = 0x4
0x656: V594 = ADD V580 0x4
0x657: M[V594] = V592
0x658: V595 = 0x24
0x65a: V596 = ADD 0x24 V580
0x65b: V597 = 0x20
0x65d: V598 = 0x40
0x65f: V599 = M[0x40]
0x662: V600 = SUB V596 V599
0x664: V601 = 0x0
0x668: V602 = EXTCODESIZE V572
0x669: V603 = ISZERO V602
0x66a: V604 = ISZERO V603
0x66b: V605 = 0x673
0x66e: JUMPI 0x673 V604
---
Entry stack: [V13, 0xe0, S8, {0x0, 0xe0}, S6, S5, S4, S3, S2, S1, {0x12c, 0x328, 0x7b0}]
Stack pops: 0
Stack additions: [0x0, V572, 0x70a08231, V596, 0x20, V599, V600, V599, 0x0, V572]
Exit stack: [V13, 0xe0, S8, {0x0, 0xe0}, S6, S5, S4, S3, S2, S1, {0x12c, 0x328, 0x7b0}, 0x0, V572, 0x70a08231, V596, 0x20, V599, V600, V599, 0x0, V572]

================================

Block 0x66f
[0x66f:0x672]
---
Predecessors: [0x612]
Successors: []
---
0x66f PUSH1 0x0
0x671 DUP1
0x672 REVERT
---
0x66f: V606 = 0x0
0x672: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, S18, {0x0, 0xe0}, S16, S15, S14, S13, S12, S11, {0x12c, 0x328, 0x7b0}, 0x0, V572, 0x70a08231, V596, 0x20, V599, V600, V599, 0x0, V572]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, S18, {0x0, 0xe0}, S16, S15, S14, S13, S12, S11, {0x12c, 0x328, 0x7b0}, 0x0, V572, 0x70a08231, V596, 0x20, V599, V600, V599, 0x0, V572]

================================

Block 0x673
[0x673:0x67f]
---
Predecessors: [0x612]
Successors: [0x680, 0x684]
---
0x673 JUMPDEST
0x674 PUSH2 0x2c6
0x677 GAS
0x678 SUB
0x679 CALL
0x67a ISZERO
0x67b ISZERO
0x67c PUSH2 0x684
0x67f JUMPI
---
0x673: JUMPDEST 
0x674: V607 = 0x2c6
0x677: V608 = GAS
0x678: V609 = SUB V608 0x2c6
0x679: V610 = CALL V609 V572 0x0 V599 V600 V599 0x20
0x67a: V611 = ISZERO V610
0x67b: V612 = ISZERO V611
0x67c: V613 = 0x684
0x67f: JUMPI 0x684 V612
---
Entry stack: [V13, 0xe0, S18, {0x0, 0xe0}, S16, S15, S14, S13, S12, S11, {0x12c, 0x328, 0x7b0}, 0x0, V572, 0x70a08231, V596, 0x20, V599, V600, V599, 0x0, V572]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xe0, S18, {0x0, 0xe0}, S16, S15, S14, S13, S12, S11, {0x12c, 0x328, 0x7b0}, 0x0, V572, 0x70a08231, V596]

================================

Block 0x680
[0x680:0x683]
---
Predecessors: [0x673]
Successors: []
---
0x680 PUSH1 0x0
0x682 DUP1
0x683 REVERT
---
0x680: V614 = 0x0
0x683: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, S10, {0x0, 0xe0}, {0x0, 0x564}, S7, S6, S5, {0x12c, 0x328, 0x7b0}, 0x0, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, S10, {0x0, 0xe0}, {0x0, 0x564}, S7, S6, S5, {0x12c, 0x328, 0x7b0}, 0x0, S2, 0x70a08231, S0]

================================

Block 0x684
[0x684:0x691]
---
Predecessors: [0x673]
Successors: [0x12c, 0x328, 0x7b0]
---
0x684 JUMPDEST
0x685 POP
0x686 POP
0x687 POP
0x688 PUSH1 0x40
0x68a MLOAD
0x68b DUP1
0x68c MLOAD
0x68d SWAP2
0x68e POP
0x68f POP
0x690 SWAP1
0x691 JUMP
---
0x684: JUMPDEST 
0x688: V615 = 0x40
0x68a: V616 = M[0x40]
0x68c: V617 = M[V616]
0x691: JUMP {0x12c, 0x328, 0x7b0}
---
Entry stack: [V13, 0xe0, S10, {0x0, 0xe0}, {0x0, 0x564}, S7, S6, S5, {0x12c, 0x328, 0x7b0}, 0x0, S2, 0x70a08231, S0]
Stack pops: 5
Stack additions: [V617]
Exit stack: [V13, 0xe0, S10, {0x0, 0xe0}, {0x0, 0x564}, S7, S6, S5, V617]

================================

Block 0x692
[0x692:0x697]
---
Predecessors: [0x243]
Successors: [0x12c]
---
0x692 JUMPDEST
0x693 PUSH1 0x4
0x695 SLOAD
0x696 DUP2
0x697 JUMP
---
0x692: JUMPDEST 
0x693: V618 = 0x4
0x695: V619 = S[0x4]
0x697: JUMP 0x12c
---
Entry stack: [V13, 0x12c]
Stack pops: 1
Stack additions: [S0, V619]
Exit stack: [V13, 0x12c, V619]

================================

Block 0x698
[0x698:0x6a6]
---
Predecessors: [0x256]
Successors: [0x1d7]
---
0x698 JUMPDEST
0x699 PUSH1 0x3
0x69b SLOAD
0x69c PUSH1 0x1
0x69e PUSH1 0xa0
0x6a0 PUSH1 0x2
0x6a2 EXP
0x6a3 SUB
0x6a4 AND
0x6a5 DUP2
0x6a6 JUMP
---
0x698: JUMPDEST 
0x699: V620 = 0x3
0x69b: V621 = S[0x3]
0x69c: V622 = 0x1
0x69e: V623 = 0xa0
0x6a0: V624 = 0x2
0x6a2: V625 = EXP 0x2 0xa0
0x6a3: V626 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a4: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V621
0x6a6: JUMP 0x1d7
---
Entry stack: [V13, 0x1d7]
Stack pops: 1
Stack additions: [S0, V627]
Exit stack: [V13, 0x1d7, V627]

================================

Block 0x6a7
[0x6a7:0x6bd]
---
Predecessors: [0x269]
Successors: [0x6be, 0x6c2]
---
0x6a7 JUMPDEST
0x6a8 PUSH1 0x0
0x6aa SLOAD
0x6ab CALLER
0x6ac PUSH1 0x1
0x6ae PUSH1 0xa0
0x6b0 PUSH1 0x2
0x6b2 EXP
0x6b3 SUB
0x6b4 SWAP1
0x6b5 DUP2
0x6b6 AND
0x6b7 SWAP2
0x6b8 AND
0x6b9 EQ
0x6ba PUSH2 0x6c2
0x6bd JUMPI
---
0x6a7: JUMPDEST 
0x6a8: V628 = 0x0
0x6aa: V629 = S[0x0]
0x6ab: V630 = CALLER
0x6ac: V631 = 0x1
0x6ae: V632 = 0xa0
0x6b0: V633 = 0x2
0x6b2: V634 = EXP 0x2 0xa0
0x6b3: V635 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b6: V636 = AND 0xffffffffffffffffffffffffffffffffffffffff V630
0x6b8: V637 = AND V629 0xffffffffffffffffffffffffffffffffffffffff
0x6b9: V638 = EQ V637 V636
0x6ba: V639 = 0x6c2
0x6bd: JUMPI 0x6c2 V638
---
Entry stack: [V13, 0xe0, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V219]

================================

Block 0x6be
[0x6be:0x6c1]
---
Predecessors: [0x6a7]
Successors: []
---
0x6be PUSH1 0x0
0x6c0 DUP1
0x6c1 REVERT
---
0x6be: V640 = 0x0
0x6c1: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V219]

================================

Block 0x6c2
[0x6c2:0x6d1]
---
Predecessors: [0x6a7]
Successors: [0x6d2, 0x6fa]
---
0x6c2 JUMPDEST
0x6c3 PUSH1 0x1
0x6c5 PUSH1 0xa0
0x6c7 PUSH1 0x2
0x6c9 EXP
0x6ca SUB
0x6cb DUP2
0x6cc AND
0x6cd ISZERO
0x6ce PUSH2 0x6fa
0x6d1 JUMPI
---
0x6c2: JUMPDEST 
0x6c3: V641 = 0x1
0x6c5: V642 = 0xa0
0x6c7: V643 = 0x2
0x6c9: V644 = EXP 0x2 0xa0
0x6ca: V645 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cc: V646 = AND V219 0xffffffffffffffffffffffffffffffffffffffff
0x6cd: V647 = ISZERO V646
0x6ce: V648 = 0x6fa
0x6d1: JUMPI 0x6fa V647
---
Entry stack: [V13, 0xe0, V219]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xe0, V219]

================================

Block 0x6d2
[0x6d2:0x6f9]
---
Predecessors: [0x6c2]
Successors: [0x6fa]
---
0x6d2 PUSH1 0x0
0x6d4 DUP1
0x6d5 SLOAD
0x6d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6eb NOT
0x6ec AND
0x6ed PUSH1 0x1
0x6ef PUSH1 0xa0
0x6f1 PUSH1 0x2
0x6f3 EXP
0x6f4 SUB
0x6f5 DUP4
0x6f6 AND
0x6f7 OR
0x6f8 SWAP1
0x6f9 SSTORE
---
0x6d2: V649 = 0x0
0x6d5: V650 = S[0x0]
0x6d6: V651 = 0xffffffffffffffffffffffffffffffffffffffff
0x6eb: V652 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6ec: V653 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V650
0x6ed: V654 = 0x1
0x6ef: V655 = 0xa0
0x6f1: V656 = 0x2
0x6f3: V657 = EXP 0x2 0xa0
0x6f4: V658 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f6: V659 = AND V219 0xffffffffffffffffffffffffffffffffffffffff
0x6f7: V660 = OR V659 V653
0x6f9: S[0x0] = V660
---
Entry stack: [V13, 0xe0, V219]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xe0, V219]

================================

Block 0x6fa
[0x6fa:0x6fc]
---
Predecessors: [0x6c2, 0x6d2]
Successors: [0xe0]
---
0x6fa JUMPDEST
0x6fb POP
0x6fc JUMP
---
0x6fa: JUMPDEST 
0x6fc: JUMP 0xe0
---
Entry stack: [V13, 0xe0, V219]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x6fd
[0x6fd:0x711]
---
Predecessors: [0x288]
Successors: [0x1d7]
---
0x6fd JUMPDEST
0x6fe PUSH1 0x5
0x700 SLOAD
0x701 PUSH3 0x10000
0x705 SWAP1
0x706 DIV
0x707 PUSH1 0x1
0x709 PUSH1 0xa0
0x70b PUSH1 0x2
0x70d EXP
0x70e SUB
0x70f AND
0x710 DUP2
0x711 JUMP
---
0x6fd: JUMPDEST 
0x6fe: V661 = 0x5
0x700: V662 = S[0x5]
0x701: V663 = 0x10000
0x706: V664 = DIV V662 0x10000
0x707: V665 = 0x1
0x709: V666 = 0xa0
0x70b: V667 = 0x2
0x70d: V668 = EXP 0x2 0xa0
0x70e: V669 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70f: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V664
0x711: JUMP 0x1d7
---
Entry stack: [V13, 0x1d7]
Stack pops: 1
Stack additions: [S0, V670]
Exit stack: [V13, 0x1d7, V670]

================================

Block 0x712
[0x712:0x715]
---
Predecessors: [0x290, 0x2cf, 0x52b, 0x56b, 0x581]
Successors: [0x29f, 0x2da, 0x536, 0x576, 0x58c]
---
0x712 JUMPDEST
0x713 TIMESTAMP
0x714 SWAP1
0x715 JUMP
---
0x712: JUMPDEST 
0x713: V671 = TIMESTAMP
0x715: JUMP {0x29f, 0x2da, 0x536, 0x576, 0x58c}
---
Entry stack: [V13, 0xe0, V66, 0x0, S3, S2, S1, {0x29f, 0x2da, 0x536, 0x576, 0x58c}]
Stack pops: 1
Stack additions: [V671]
Exit stack: [V13, 0xe0, V66, 0x0, S3, S2, S1, V671]

================================

Block 0x716
[0x716:0x722]
---
Predecessors: [0x343]
Successors: [0x723, 0x732]
---
0x716 JUMPDEST
0x717 PUSH1 0x0
0x719 DUP3
0x71a DUP3
0x71b MUL
0x71c DUP4
0x71d ISZERO
0x71e DUP1
0x71f PUSH2 0x732
0x722 JUMPI
---
0x716: JUMPDEST 
0x717: V672 = 0x0
0x71b: V673 = MUL 0xa S1
0x71d: V674 = ISZERO S1
0x71f: V675 = 0x732
0x722: JUMPI 0x732 V674
---
Entry stack: [V13, 0xe0, S8, S7, {0x0, 0x564}, S5, S4, S3, 0x348, S1, 0xa]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V673, V674]
Exit stack: [V13, 0xe0, S8, S7, {0x0, 0x564}, S5, S4, S3, 0x348, S1, 0xa, 0x0, V673, V674]

================================

Block 0x723
[0x723:0x72d]
---
Predecessors: [0x716]
Successors: [0x72e, 0x72f]
---
0x723 POP
0x724 DUP3
0x725 DUP5
0x726 DUP3
0x727 DUP2
0x728 ISZERO
0x729 ISZERO
0x72a PUSH2 0x72f
0x72d JUMPI
---
0x728: V676 = ISZERO S4
0x729: V677 = ISZERO V676
0x72a: V678 = 0x72f
0x72d: JUMPI 0x72f V677
---
Entry stack: [V13, 0xe0, S11, S10, {0x0, 0x564}, S8, S7, S6, 0x348, S4, 0xa, 0x0, V673, V674]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V13, 0xe0, S11, S10, {0x0, 0x564}, S8, S7, S6, 0x348, S4, 0xa, 0x0, V673, 0xa, S4, V673]

================================

Block 0x72e
[0x72e:0x72e]
---
Predecessors: [0x723]
Successors: []
---
0x72e INVALID
---
0x72e: INVALID 
---
Entry stack: [V13, 0xe0, S13, S12, {0x0, 0x564}, S10, S9, S8, 0x348, S6, 0xa, 0x0, V673, 0xa, S1, V673]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, S13, S12, {0x0, 0x564}, S10, S9, S8, 0x348, S6, 0xa, 0x0, V673, 0xa, S1, V673]

================================

Block 0x72f
[0x72f:0x731]
---
Predecessors: [0x723]
Successors: [0x732]
---
0x72f JUMPDEST
0x730 DIV
0x731 EQ
---
0x72f: JUMPDEST 
0x730: V679 = DIV V673 S1
0x731: V680 = EQ V679 0xa
---
Entry stack: [V13, 0xe0, S13, S12, {0x0, 0x564}, S10, S9, S8, 0x348, S6, 0xa, 0x0, V673, 0xa, S1, V673]
Stack pops: 3
Stack additions: [V680]
Exit stack: [V13, 0xe0, S13, S12, {0x0, 0x564}, S10, S9, S8, 0x348, S6, 0xa, 0x0, V673, V680]

================================

Block 0x732
[0x732:0x738]
---
Predecessors: [0x716, 0x72f]
Successors: [0x739, 0x73a]
---
0x732 JUMPDEST
0x733 ISZERO
0x734 ISZERO
0x735 PUSH2 0x73a
0x738 JUMPI
---
0x732: JUMPDEST 
0x733: V681 = ISZERO S0
0x734: V682 = ISZERO V681
0x735: V683 = 0x73a
0x738: JUMPI 0x73a V682
---
Entry stack: [V13, 0xe0, S11, S10, {0x0, 0x564}, S8, S7, S6, 0x348, S4, 0xa, 0x0, V673, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xe0, S11, S10, {0x0, 0x564}, S8, S7, S6, 0x348, S4, 0xa, 0x0, V673]

================================

Block 0x739
[0x739:0x739]
---
Predecessors: [0x732]
Successors: []
---
0x739 INVALID
---
0x739: INVALID 
---
Entry stack: [V13, 0xe0, S10, S9, {0x0, 0x564}, S7, S6, S5, 0x348, S3, 0xa, 0x0, V673]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, S10, S9, {0x0, 0x564}, S7, S6, S5, 0x348, S3, 0xa, 0x0, V673]

================================

Block 0x73a
[0x73a:0x740]
---
Predecessors: [0x732, 0x741]
Successors: [0x348, 0x407]
---
0x73a JUMPDEST
0x73b SWAP4
0x73c SWAP3
0x73d POP
0x73e POP
0x73f POP
0x740 JUMP
---
0x73a: JUMPDEST 
0x740: JUMP {0x348, 0x407}
---
Entry stack: [V13, 0xe0, S10, S9, S8, S7, S6, S5, {0x348, 0x407}, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, 0xe0, S10, S9, S8, S7, S6, S5, S0]

================================

Block 0x741
[0x741:0x74e]
---
Predecessors: [0x3f8]
Successors: [0x73a, 0x74f]
---
0x741 JUMPDEST
0x742 PUSH1 0x0
0x744 DUP3
0x745 DUP3
0x746 ADD
0x747 DUP4
0x748 DUP2
0x749 LT
0x74a ISZERO
0x74b PUSH2 0x73a
0x74e JUMPI
---
0x741: JUMPDEST 
0x742: V684 = 0x0
0x746: V685 = ADD V373 V372
0x749: V686 = LT V685 V372
0x74a: V687 = ISZERO V686
0x74b: V688 = 0x73a
0x74e: JUMPI 0x73a V687
---
Entry stack: [V13, 0xe0, V66, V617, S6, V66, V66, 0x16345785d8a0000, 0x407, V372, V373]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V685]
Exit stack: [V13, 0xe0, V66, V617, S6, V66, V66, 0x16345785d8a0000, 0x407, V372, V373, 0x0, V685]

================================

Block 0x74f
[0x74f:0x74f]
---
Predecessors: [0x741]
Successors: []
---
0x74f INVALID
---
0x74f: INVALID 
---
Entry stack: [V13, 0xe0, V66, V617, S8, V66, V66, 0x16345785d8a0000, 0x407, V372, V373, 0x0, V685]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, V617, S8, V66, V66, 0x16345785d8a0000, 0x407, V372, V373, 0x0, V685]

================================

Block 0x750
[0x750:0x784]
---
Predecessors: [0x55c]
Successors: [0x785, 0x789]
---
0x750 JUMPDEST
0x751 PUSH1 0x3
0x753 SLOAD
0x754 PUSH1 0x1
0x756 PUSH1 0xa0
0x758 PUSH1 0x2
0x75a EXP
0x75b SUB
0x75c SWAP1
0x75d DUP2
0x75e AND
0x75f SWAP1
0x760 ADDRESS
0x761 AND
0x762 BALANCE
0x763 DUP1
0x764 ISZERO
0x765 PUSH2 0x8fc
0x768 MUL
0x769 SWAP1
0x76a PUSH1 0x40
0x76c MLOAD
0x76d PUSH1 0x0
0x76f PUSH1 0x40
0x771 MLOAD
0x772 DUP1
0x773 DUP4
0x774 SUB
0x775 DUP2
0x776 DUP6
0x777 DUP9
0x778 DUP9
0x779 CALL
0x77a SWAP4
0x77b POP
0x77c POP
0x77d POP
0x77e POP
0x77f ISZERO
0x780 ISZERO
0x781 PUSH2 0x789
0x784 JUMPI
---
0x750: JUMPDEST 
0x751: V689 = 0x3
0x753: V690 = S[0x3]
0x754: V691 = 0x1
0x756: V692 = 0xa0
0x758: V693 = 0x2
0x75a: V694 = EXP 0x2 0xa0
0x75b: V695 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75e: V696 = AND 0xffffffffffffffffffffffffffffffffffffffff V690
0x760: V697 = ADDRESS
0x761: V698 = AND V697 0xffffffffffffffffffffffffffffffffffffffff
0x762: V699 = BALANCE V698
0x764: V700 = ISZERO V699
0x765: V701 = 0x8fc
0x768: V702 = MUL 0x8fc V700
0x76a: V703 = 0x40
0x76c: V704 = M[0x40]
0x76d: V705 = 0x0
0x76f: V706 = 0x40
0x771: V707 = M[0x40]
0x774: V708 = SUB V704 V707
0x779: V709 = CALL V702 V696 V699 V707 V708 V707 0x0
0x77f: V710 = ISZERO V709
0x780: V711 = ISZERO V710
0x781: V712 = 0x789
0x784: JUMPI 0x789 V711
---
Entry stack: [V13, 0xe0, V66, 0x0, S2, S1, 0x564]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S2, S1, 0x564]

================================

Block 0x785
[0x785:0x788]
---
Predecessors: [0x750]
Successors: []
---
0x785 PUSH1 0x0
0x787 DUP1
0x788 REVERT
---
0x785: V713 = 0x0
0x788: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, V66, 0x0, S2, S1, 0x564]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, V66, 0x0, S2, S1, 0x564]

================================

Block 0x789
[0x789:0x7af]
---
Predecessors: [0x750]
Successors: [0x612]
---
0x789 JUMPDEST
0x78a PUSH1 0x5
0x78c SLOAD
0x78d PUSH1 0x3
0x78f SLOAD
0x790 PUSH1 0x1
0x792 PUSH1 0xa0
0x794 PUSH1 0x2
0x796 EXP
0x797 SUB
0x798 PUSH3 0x10000
0x79c SWAP1
0x79d SWAP3
0x79e DIV
0x79f DUP3
0x7a0 AND
0x7a1 SWAP2
0x7a2 PUSH4 0xa9059cbb
0x7a7 SWAP2
0x7a8 AND
0x7a9 PUSH2 0x7b0
0x7ac PUSH2 0x612
0x7af JUMP
---
0x789: JUMPDEST 
0x78a: V714 = 0x5
0x78c: V715 = S[0x5]
0x78d: V716 = 0x3
0x78f: V717 = S[0x3]
0x790: V718 = 0x1
0x792: V719 = 0xa0
0x794: V720 = 0x2
0x796: V721 = EXP 0x2 0xa0
0x797: V722 = SUB 0x10000000000000000000000000000000000000000 0x1
0x798: V723 = 0x10000
0x79e: V724 = DIV V715 0x10000
0x7a0: V725 = AND 0xffffffffffffffffffffffffffffffffffffffff V724
0x7a2: V726 = 0xa9059cbb
0x7a8: V727 = AND V717 0xffffffffffffffffffffffffffffffffffffffff
0x7a9: V728 = 0x7b0
0x7ac: V729 = 0x612
0x7af: JUMP 0x612
---
Entry stack: [V13, 0xe0, V66, 0x0, S2, S1, 0x564]
Stack pops: 0
Stack additions: [V725, 0xa9059cbb, V727, 0x7b0]
Exit stack: [V13, 0xe0, V66, 0x0, S2, S1, 0x564, V725, 0xa9059cbb, V727, 0x7b0]

================================

Block 0x7b0
[0x7b0:0x7ee]
---
Predecessors: [0x684]
Successors: [0x7ef, 0x7f3]
---
0x7b0 JUMPDEST
0x7b1 PUSH1 0x40
0x7b3 MLOAD
0x7b4 PUSH1 0xe0
0x7b6 PUSH1 0x2
0x7b8 EXP
0x7b9 PUSH4 0xffffffff
0x7be DUP6
0x7bf AND
0x7c0 MUL
0x7c1 DUP2
0x7c2 MSTORE
0x7c3 PUSH1 0x1
0x7c5 PUSH1 0xa0
0x7c7 PUSH1 0x2
0x7c9 EXP
0x7ca SUB
0x7cb SWAP1
0x7cc SWAP3
0x7cd AND
0x7ce PUSH1 0x4
0x7d0 DUP4
0x7d1 ADD
0x7d2 MSTORE
0x7d3 PUSH1 0x24
0x7d5 DUP3
0x7d6 ADD
0x7d7 MSTORE
0x7d8 PUSH1 0x44
0x7da ADD
0x7db PUSH1 0x0
0x7dd PUSH1 0x40
0x7df MLOAD
0x7e0 DUP1
0x7e1 DUP4
0x7e2 SUB
0x7e3 DUP2
0x7e4 PUSH1 0x0
0x7e6 DUP8
0x7e7 DUP1
0x7e8 EXTCODESIZE
0x7e9 ISZERO
0x7ea ISZERO
0x7eb PUSH2 0x7f3
0x7ee JUMPI
---
0x7b0: JUMPDEST 
0x7b1: V730 = 0x40
0x7b3: V731 = M[0x40]
0x7b4: V732 = 0xe0
0x7b6: V733 = 0x2
0x7b8: V734 = EXP 0x2 0xe0
0x7b9: V735 = 0xffffffff
0x7bf: V736 = AND S2 0xffffffff
0x7c0: V737 = MUL V736 0x100000000000000000000000000000000000000000000000000000000
0x7c2: M[V731] = V737
0x7c3: V738 = 0x1
0x7c5: V739 = 0xa0
0x7c7: V740 = 0x2
0x7c9: V741 = EXP 0x2 0xa0
0x7ca: V742 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7cd: V743 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x7ce: V744 = 0x4
0x7d1: V745 = ADD V731 0x4
0x7d2: M[V745] = V743
0x7d3: V746 = 0x24
0x7d6: V747 = ADD V731 0x24
0x7d7: M[V747] = V617
0x7d8: V748 = 0x44
0x7da: V749 = ADD 0x44 V731
0x7db: V750 = 0x0
0x7dd: V751 = 0x40
0x7df: V752 = M[0x40]
0x7e2: V753 = SUB V749 V752
0x7e4: V754 = 0x0
0x7e8: V755 = EXTCODESIZE S3
0x7e9: V756 = ISZERO V755
0x7ea: V757 = ISZERO V756
0x7eb: V758 = 0x7f3
0x7ee: JUMPI 0x7f3 V757
---
Entry stack: [V13, 0xe0, S6, {0x0, 0xe0}, {0x0, 0x564}, S3, S2, S1, V617]
Stack pops: 4
Stack additions: [S3, S2, V749, 0x0, V752, V753, V752, 0x0, S3]
Exit stack: [V13, 0xe0, S6, {0x0, 0xe0}, {0x0, 0x564}, S3, S2, V749, 0x0, V752, V753, V752, 0x0, S3]

================================

Block 0x7ef
[0x7ef:0x7f2]
---
Predecessors: [0x7b0]
Successors: []
---
0x7ef PUSH1 0x0
0x7f1 DUP1
0x7f2 REVERT
---
0x7ef: V759 = 0x0
0x7f2: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, S11, {0x0, 0xe0}, {0x0, 0x564}, S8, S7, V749, 0x0, V752, V753, V752, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, S11, {0x0, 0xe0}, {0x0, 0x564}, S8, S7, V749, 0x0, V752, V753, V752, 0x0, S0]

================================

Block 0x7f3
[0x7f3:0x7ff]
---
Predecessors: [0x7b0]
Successors: [0x800, 0x804]
---
0x7f3 JUMPDEST
0x7f4 PUSH2 0x2c6
0x7f7 GAS
0x7f8 SUB
0x7f9 CALL
0x7fa ISZERO
0x7fb ISZERO
0x7fc PUSH2 0x804
0x7ff JUMPI
---
0x7f3: JUMPDEST 
0x7f4: V760 = 0x2c6
0x7f7: V761 = GAS
0x7f8: V762 = SUB V761 0x2c6
0x7f9: V763 = CALL V762 S0 0x0 V752 V753 V752 0x0
0x7fa: V764 = ISZERO V763
0x7fb: V765 = ISZERO V764
0x7fc: V766 = 0x804
0x7ff: JUMPI 0x804 V765
---
Entry stack: [V13, 0xe0, S11, {0x0, 0xe0}, {0x0, 0x564}, S8, S7, V749, 0x0, V752, V753, V752, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xe0, S11, {0x0, 0xe0}, {0x0, 0x564}, S8, S7, V749]

================================

Block 0x800
[0x800:0x803]
---
Predecessors: [0x7f3]
Successors: []
---
0x800 PUSH1 0x0
0x802 DUP1
0x803 REVERT
---
0x800: V767 = 0x0
0x803: REVERT 0x0 0x0
---
Entry stack: [V13, 0xe0, S5, {0x0, 0xe0}, {0x0, 0x564}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xe0, S5, {0x0, 0xe0}, {0x0, 0x564}, S2, S1, S0]

================================

Block 0x804
[0x804:0x820]
---
Predecessors: [0x7f3]
Successors: [0x564]
---
0x804 JUMPDEST
0x805 POP
0x806 POP
0x807 PUSH1 0x5
0x809 DUP1
0x80a SLOAD
0x80b PUSH1 0xff
0x80d NOT
0x80e PUSH2 0xff00
0x811 NOT
0x812 SWAP1
0x813 SWAP2
0x814 AND
0x815 PUSH2 0x100
0x818 OR
0x819 AND
0x81a PUSH1 0x1
0x81c OR
0x81d SWAP1
0x81e SSTORE
0x81f POP
0x820 JUMP
---
0x804: JUMPDEST 
0x807: V768 = 0x5
0x80a: V769 = S[0x5]
0x80b: V770 = 0xff
0x80d: V771 = NOT 0xff
0x80e: V772 = 0xff00
0x811: V773 = NOT 0xff00
0x814: V774 = AND V769 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff
0x815: V775 = 0x100
0x818: V776 = OR 0x100 V774
0x819: V777 = AND V776 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x81a: V778 = 0x1
0x81c: V779 = OR 0x1 V777
0x81e: S[0x5] = V779
0x820: JUMP {0x0, 0x564}
---
Entry stack: [V13, 0xe0, S5, {0x0, 0xe0}, {0x0, 0x564}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0xe0, S5, {0x0, 0xe0}]

================================

Block 0x821
[0x821:0x851]
---
Predecessors: []
Successors: []
---
0x821 STOP
0x822 LOG1
0x823 PUSH6 0x627a7a723058
0x82a SHA3
0x82b MISSING 0xd7
0x82c PUSH10 0x379fd8729f2d0d7812d3
0x837 PUSH9 0xb7c17e26a6faac2716
0x841 MISSING 0xdf
0x842 MISSING 0x27
0x843 PUSH14 0xc7a8a73d6a61f30029
---
0x821: STOP 
0x822: LOG S0 S1 S2
0x823: V780 = 0x627a7a723058
0x82a: V781 = SHA3 0x627a7a723058 S3
0x82b: MISSING 0xd7
0x82c: V782 = 0x379fd8729f2d0d7812d3
0x837: V783 = 0xb7c17e26a6faac2716
0x841: MISSING 0xdf
0x842: MISSING 0x27
0x843: V784 = 0xc7a8a73d6a61f30029
---
Entry stack: []
Stack pops: 0
Stack additions: [V781, 0xb7c17e26a6faac2716, 0x379fd8729f2d0d7812d3, 0xc7a8a73d6a61f30029]
Exit stack: []

================================

Function 0:
Public function signature: 0xc424284
Entry block: 0xe2
Exit block: 0xe0
Body: 0xe0, 0xe2, 0xe9, 0xed, 0x456, 0x46d, 0x471

Function 1:
Public function signature: 0x2863f9f3
Entry block: 0x106
Exit block: 0xe0
Body: 0xe0, 0x106, 0x10d, 0x111, 0x4e2, 0x4ee, 0x4f2, 0x509, 0x50d

Function 2:
Public function signature: 0x3197cbb6
Entry block: 0x119
Exit block: 0x12c
Body: 0x119, 0x120, 0x124, 0x12c, 0x51c

Function 3:
Public function signature: 0x456c8cac
Entry block: 0x13e
Exit block: 0x151
Body: 0x13e, 0x145, 0x149, 0x151, 0x522

Function 4:
Public function signature: 0x58a687ec
Entry block: 0x165
Exit block: 0xe0
Body: 0xe0, 0x165, 0x16c, 0x170, 0x52b, 0x536, 0x53d, 0x541, 0x558, 0x55c, 0x564, 0x750, 0x785, 0x789, 0x7b0, 0x7ef, 0x7f3, 0x800, 0x804

Function 5:
Public function signature: 0x679aefce
Entry block: 0x178
Exit block: 0x17f
Body: 0x12c, 0x178, 0x17f, 0x183

Function 6:
Public function signature: 0x74711285
Entry block: 0x18b
Exit block: 0xe0
Body: 0xe0, 0x18b, 0x192, 0x196, 0x56b, 0x576, 0x57d, 0x581, 0x58c, 0x592, 0x596, 0x5a3, 0x5a7, 0x5be, 0x5c2

Function 7:
Public function signature: 0x78e97925
Entry block: 0x19e
Exit block: 0x12c
Body: 0x12c, 0x19e, 0x1a5, 0x1a9, 0x5ce

Function 8:
Public function signature: 0x8ac2c680
Entry block: 0x1b1
Exit block: 0x12c
Body: 0x12c, 0x1b1, 0x1b8, 0x1bc, 0x5d4

Function 9:
Public function signature: 0x8da5cb5b
Entry block: 0x1c4
Exit block: 0x1d7
Body: 0x1c4, 0x1cb, 0x1cf, 0x1d7, 0x5e0

Function 10:
Public function signature: 0x9b19251a
Entry block: 0x1f3
Exit block: 0x151
Body: 0x151, 0x1f3, 0x1fa, 0x1fe, 0x5ef

Function 11:
Public function signature: 0xa5f0dea2
Entry block: 0x212
Exit block: 0x151
Body: 0x151, 0x212, 0x219, 0x21d, 0x604

Function 12:
Public function signature: 0xde5f9866
Entry block: 0x225
Exit block: 0x22c
Body: 0x12c, 0x225, 0x22c, 0x230

Function 13:
Public function signature: 0xe29eb836
Entry block: 0x238
Exit block: 0x12c
Body: 0x12c, 0x238, 0x23f, 0x243, 0x692

Function 14:
Public function signature: 0xe481c884
Entry block: 0x24b
Exit block: 0x1d7
Body: 0x1d7, 0x24b, 0x252, 0x256, 0x698

Function 15:
Public function signature: 0xf2fde38b
Entry block: 0x25e
Exit block: 0xe0
Body: 0xe0, 0x25e, 0x265, 0x269, 0x6a7, 0x6be, 0x6c2, 0x6d2, 0x6fa

Function 16:
Public function signature: 0xfc0c546a
Entry block: 0x27d
Exit block: 0x1d7
Body: 0x1d7, 0x27d, 0x284, 0x288, 0x6fd

Function 17:
Public fallback function
Entry block: 0xd7
Exit block: 0x74f
Body: 0xd7, 0xe0, 0x290, 0x29f, 0x2a7, 0x2c5, 0x2cb, 0x2cf, 0x2da, 0x2e0, 0x2e4, 0x2f0, 0x2f4, 0x306, 0x30a, 0x31c, 0x320, 0x328, 0x333, 0x337, 0x343, 0x348, 0x353, 0x357, 0x387, 0x38b, 0x3e3, 0x3e7, 0x3f4, 0x3f8, 0x407, 0x716, 0x723, 0x72e, 0x72f, 0x732, 0x739, 0x73a, 0x741, 0x74f

Function 18:
Private function
Entry block: 0x612
Exit block: 0x684
Body: 0x612, 0x673, 0x684

