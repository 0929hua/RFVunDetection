Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa4]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa4
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa4
0xc: JUMPI 0xa4 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xf4]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x11610c25
0x3c EQ
0x3d PUSH2 0xf4
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x11610c25
0x3c: V13 = EQ 0x11610c25 V11
0x3d: V14 = 0xf4
0x40: JUMPI 0xf4 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x11f]
---
0x41 DUP1
0x42 PUSH4 0x16ada547
0x47 EQ
0x48 PUSH2 0x11f
0x4b JUMPI
---
0x42: V15 = 0x16ada547
0x47: V16 = EQ 0x16ada547 V11
0x48: V17 = 0x11f
0x4b: JUMPI 0x11f V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x14a]
---
0x4c DUP1
0x4d PUSH4 0x30d86a7d
0x52 EQ
0x53 PUSH2 0x14a
0x56 JUMPI
---
0x4d: V18 = 0x30d86a7d
0x52: V19 = EQ 0x30d86a7d V11
0x53: V20 = 0x14a
0x56: JUMPI 0x14a V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x175]
---
0x57 DUP1
0x58 PUSH4 0x3c89a6b9
0x5d EQ
0x5e PUSH2 0x175
0x61 JUMPI
---
0x58: V21 = 0x3c89a6b9
0x5d: V22 = EQ 0x3c89a6b9 V11
0x5e: V23 = 0x175
0x61: JUMPI 0x175 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1a0]
---
0x62 DUP1
0x63 PUSH4 0x3df4ddf4
0x68 EQ
0x69 PUSH2 0x1a0
0x6c JUMPI
---
0x63: V24 = 0x3df4ddf4
0x68: V25 = EQ 0x3df4ddf4 V11
0x69: V26 = 0x1a0
0x6c: JUMPI 0x1a0 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x1cf]
---
0x6d DUP1
0x6e PUSH4 0x40d5ff58
0x73 EQ
0x74 PUSH2 0x1cf
0x77 JUMPI
---
0x6e: V27 = 0x40d5ff58
0x73: V28 = EQ 0x40d5ff58 V11
0x74: V29 = 0x1cf
0x77: JUMPI 0x1cf V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x1fa]
---
0x78 DUP1
0x79 PUSH4 0x48db5f89
0x7e EQ
0x7f PUSH2 0x1fa
0x82 JUMPI
---
0x79: V30 = 0x48db5f89
0x7e: V31 = EQ 0x48db5f89 V11
0x7f: V32 = 0x1fa
0x82: JUMPI 0x1fa V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x251]
---
0x83 DUP1
0x84 PUSH4 0x803397c4
0x89 EQ
0x8a PUSH2 0x251
0x8d JUMPI
---
0x84: V33 = 0x803397c4
0x89: V34 = EQ 0x803397c4 V11
0x8a: V35 = 0x251
0x8d: JUMPI 0x251 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x27c]
---
0x8e DUP1
0x8f PUSH4 0xccca123b
0x94 EQ
0x95 PUSH2 0x27c
0x98 JUMPI
---
0x8f: V36 = 0xccca123b
0x94: V37 = EQ 0xccca123b V11
0x95: V38 = 0x27c
0x98: JUMPI 0x27c V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x2a7]
---
0x99 DUP1
0x9a PUSH4 0xe7f3074c
0x9f EQ
0xa0 PUSH2 0x2a7
0xa3 JUMPI
---
0x9a: V39 = 0xe7f3074c
0x9f: V40 = EQ 0xe7f3074c V11
0xa0: V41 = 0x2a7
0xa3: JUMPI 0x2a7 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xc0]
---
Predecessors: [0x0, 0x99]
Successors: [0xc1, 0xcd]
---
0xa4 JUMPDEST
0xa5 PUSH1 0x1
0xa7 ISZERO
0xa8 ISZERO
0xa9 PUSH1 0x8
0xab PUSH1 0x0
0xad SWAP1
0xae SLOAD
0xaf SWAP1
0xb0 PUSH2 0x100
0xb3 EXP
0xb4 SWAP1
0xb5 DIV
0xb6 PUSH1 0xff
0xb8 AND
0xb9 ISZERO
0xba ISZERO
0xbb EQ
0xbc ISZERO
0xbd PUSH2 0xcd
0xc0 JUMPI
---
0xa4: JUMPDEST 
0xa5: V42 = 0x1
0xa7: V43 = ISZERO 0x1
0xa8: V44 = ISZERO 0x0
0xa9: V45 = 0x8
0xab: V46 = 0x0
0xae: V47 = S[0x8]
0xb0: V48 = 0x100
0xb3: V49 = EXP 0x100 0x0
0xb5: V50 = DIV V47 0x1
0xb6: V51 = 0xff
0xb8: V52 = AND 0xff V50
0xb9: V53 = ISZERO V52
0xba: V54 = ISZERO V53
0xbb: V55 = EQ V54 0x1
0xbc: V56 = ISZERO V55
0xbd: V57 = 0xcd
0xc0: JUMPI 0xcd V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc1
[0xc1:0xc7]
---
Predecessors: [0xa4]
Successors: [0x2d2]
---
0xc1 PUSH2 0xc8
0xc4 PUSH2 0x2d2
0xc7 JUMP
---
0xc1: V58 = 0xc8
0xc4: V59 = 0x2d2
0xc7: JUMP 0x2d2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc8]
Exit stack: [V11, 0xc8]

================================

Block 0xc8
[0xc8:0xcc]
---
Predecessors: [0x402]
Successors: [0xf2]
---
0xc8 JUMPDEST
0xc9 PUSH2 0xf2
0xcc JUMP
---
0xc8: JUMPDEST 
0xc9: V60 = 0xf2
0xcc: JUMP 0xf2
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xcd
[0xcd:0xdb]
---
Predecessors: [0xa4]
Successors: [0xdc, 0xe8]
---
0xcd JUMPDEST
0xce PUSH1 0xa
0xd0 SLOAD
0xd1 PUSH1 0x9
0xd3 SLOAD
0xd4 ADD
0xd5 TIMESTAMP
0xd6 LT
0xd7 ISZERO
0xd8 PUSH2 0xe8
0xdb JUMPI
---
0xcd: JUMPDEST 
0xce: V61 = 0xa
0xd0: V62 = S[0xa]
0xd1: V63 = 0x9
0xd3: V64 = S[0x9]
0xd4: V65 = ADD V64 V62
0xd5: V66 = TIMESTAMP
0xd6: V67 = LT V66 V65
0xd7: V68 = ISZERO V67
0xd8: V69 = 0xe8
0xdb: JUMPI 0xe8 V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdc
[0xdc:0xe2]
---
Predecessors: [0xcd]
Successors: [0x4be]
---
0xdc PUSH2 0xe3
0xdf PUSH2 0x4be
0xe2 JUMP
---
0xdc: V70 = 0xe3
0xdf: V71 = 0x4be
0xe2: JUMP 0x4be
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe3]
Exit stack: [V11, 0xe3]

================================

Block 0xe3
[0xe3:0xe7]
---
Predecessors: [0x402, 0x7e9]
Successors: [0xf1]
---
0xe3 JUMPDEST
0xe4 PUSH2 0xf1
0xe7 JUMP
---
0xe3: JUMPDEST 
0xe4: V72 = 0xf1
0xe7: JUMP 0xf1
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe8
[0xe8:0xef]
---
Predecessors: [0xcd]
Successors: [0x88b]
---
0xe8 JUMPDEST
0xe9 PUSH2 0xf0
0xec PUSH2 0x88b
0xef JUMP
---
0xe8: JUMPDEST 
0xe9: V73 = 0xf0
0xec: V74 = 0x88b
0xef: JUMP 0x88b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xf0]
Exit stack: [V11, 0xf0]

================================

Block 0xf0
[0xf0:0xf0]
---
Predecessors: [0x7e9, 0xcca]
Successors: [0xf1]
---
0xf0 JUMPDEST
---
0xf0: JUMPDEST 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf1
[0xf1:0xf1]
---
Predecessors: [0xe3, 0xf0]
Successors: [0xf2]
---
0xf1 JUMPDEST
---
0xf1: JUMPDEST 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf2
[0xf2:0xf3]
---
Predecessors: [0xc8, 0xf1]
Successors: []
---
0xf2 JUMPDEST
0xf3 STOP
---
0xf2: JUMPDEST 
0xf3: STOP 
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xf4
[0xf4:0xfb]
---
Predecessors: [0xd]
Successors: [0xfc, 0x100]
---
0xf4 JUMPDEST
0xf5 CALLVALUE
0xf6 DUP1
0xf7 ISZERO
0xf8 PUSH2 0x100
0xfb JUMPI
---
0xf4: JUMPDEST 
0xf5: V75 = CALLVALUE
0xf7: V76 = ISZERO V75
0xf8: V77 = 0x100
0xfb: JUMPI 0x100 V76
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V75]
Exit stack: [V11, V75]

================================

Block 0xfc
[0xfc:0xff]
---
Predecessors: [0xf4]
Successors: []
---
0xfc PUSH1 0x0
0xfe DUP1
0xff REVERT
---
0xfc: V78 = 0x0
0xff: REVERT 0x0 0x0
---
Entry stack: [V11, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V75]

================================

Block 0x100
[0x100:0x108]
---
Predecessors: [0xf4]
Successors: [0xccc]
---
0x100 JUMPDEST
0x101 POP
0x102 PUSH2 0x109
0x105 PUSH2 0xccc
0x108 JUMP
---
0x100: JUMPDEST 
0x102: V79 = 0x109
0x105: V80 = 0xccc
0x108: JUMP 0xccc
---
Entry stack: [V11, V75]
Stack pops: 1
Stack additions: [0x109]
Exit stack: [V11, 0x109]

================================

Block 0x109
[0x109:0x11e]
---
Predecessors: [0xccc]
Successors: []
---
0x109 JUMPDEST
0x10a PUSH1 0x40
0x10c MLOAD
0x10d DUP1
0x10e DUP3
0x10f DUP2
0x110 MSTORE
0x111 PUSH1 0x20
0x113 ADD
0x114 SWAP2
0x115 POP
0x116 POP
0x117 PUSH1 0x40
0x119 MLOAD
0x11a DUP1
0x11b SWAP2
0x11c SUB
0x11d SWAP1
0x11e RETURN
---
0x109: JUMPDEST 
0x10a: V81 = 0x40
0x10c: V82 = M[0x40]
0x110: M[V82] = V809
0x111: V83 = 0x20
0x113: V84 = ADD 0x20 V82
0x117: V85 = 0x40
0x119: V86 = M[0x40]
0x11c: V87 = SUB V84 V86
0x11e: RETURN V86 V87
---
Entry stack: [V11, 0x109, V809]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x109]

================================

Block 0x11f
[0x11f:0x126]
---
Predecessors: [0x41]
Successors: [0x127, 0x12b]
---
0x11f JUMPDEST
0x120 CALLVALUE
0x121 DUP1
0x122 ISZERO
0x123 PUSH2 0x12b
0x126 JUMPI
---
0x11f: JUMPDEST 
0x120: V88 = CALLVALUE
0x122: V89 = ISZERO V88
0x123: V90 = 0x12b
0x126: JUMPI 0x12b V89
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V88]
Exit stack: [V11, V88]

================================

Block 0x127
[0x127:0x12a]
---
Predecessors: [0x11f]
Successors: []
---
0x127 PUSH1 0x0
0x129 DUP1
0x12a REVERT
---
0x127: V91 = 0x0
0x12a: REVERT 0x0 0x0
---
Entry stack: [V11, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V88]

================================

Block 0x12b
[0x12b:0x133]
---
Predecessors: [0x11f]
Successors: [0xcd2]
---
0x12b JUMPDEST
0x12c POP
0x12d PUSH2 0x134
0x130 PUSH2 0xcd2
0x133 JUMP
---
0x12b: JUMPDEST 
0x12d: V92 = 0x134
0x130: V93 = 0xcd2
0x133: JUMP 0xcd2
---
Entry stack: [V11, V88]
Stack pops: 1
Stack additions: [0x134]
Exit stack: [V11, 0x134]

================================

Block 0x134
[0x134:0x149]
---
Predecessors: [0xcd2]
Successors: []
---
0x134 JUMPDEST
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 DUP3
0x13a DUP2
0x13b MSTORE
0x13c PUSH1 0x20
0x13e ADD
0x13f SWAP2
0x140 POP
0x141 POP
0x142 PUSH1 0x40
0x144 MLOAD
0x145 DUP1
0x146 SWAP2
0x147 SUB
0x148 SWAP1
0x149 RETURN
---
0x134: JUMPDEST 
0x135: V94 = 0x40
0x137: V95 = M[0x40]
0x13b: M[V95] = V811
0x13c: V96 = 0x20
0x13e: V97 = ADD 0x20 V95
0x142: V98 = 0x40
0x144: V99 = M[0x40]
0x147: V100 = SUB V97 V99
0x149: RETURN V99 V100
---
Entry stack: [V11, 0x134, V811]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x134]

================================

Block 0x14a
[0x14a:0x151]
---
Predecessors: [0x4c]
Successors: [0x152, 0x156]
---
0x14a JUMPDEST
0x14b CALLVALUE
0x14c DUP1
0x14d ISZERO
0x14e PUSH2 0x156
0x151 JUMPI
---
0x14a: JUMPDEST 
0x14b: V101 = CALLVALUE
0x14d: V102 = ISZERO V101
0x14e: V103 = 0x156
0x151: JUMPI 0x156 V102
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V101]
Exit stack: [V11, V101]

================================

Block 0x152
[0x152:0x155]
---
Predecessors: [0x14a]
Successors: []
---
0x152 PUSH1 0x0
0x154 DUP1
0x155 REVERT
---
0x152: V104 = 0x0
0x155: REVERT 0x0 0x0
---
Entry stack: [V11, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V101]

================================

Block 0x156
[0x156:0x15e]
---
Predecessors: [0x14a]
Successors: [0xcd8]
---
0x156 JUMPDEST
0x157 POP
0x158 PUSH2 0x15f
0x15b PUSH2 0xcd8
0x15e JUMP
---
0x156: JUMPDEST 
0x158: V105 = 0x15f
0x15b: V106 = 0xcd8
0x15e: JUMP 0xcd8
---
Entry stack: [V11, V101]
Stack pops: 1
Stack additions: [0x15f]
Exit stack: [V11, 0x15f]

================================

Block 0x15f
[0x15f:0x174]
---
Predecessors: [0xcd8]
Successors: []
---
0x15f JUMPDEST
0x160 PUSH1 0x40
0x162 MLOAD
0x163 DUP1
0x164 DUP3
0x165 DUP2
0x166 MSTORE
0x167 PUSH1 0x20
0x169 ADD
0x16a SWAP2
0x16b POP
0x16c POP
0x16d PUSH1 0x40
0x16f MLOAD
0x170 DUP1
0x171 SWAP2
0x172 SUB
0x173 SWAP1
0x174 RETURN
---
0x15f: JUMPDEST 
0x160: V107 = 0x40
0x162: V108 = M[0x40]
0x166: M[V108] = V813
0x167: V109 = 0x20
0x169: V110 = ADD 0x20 V108
0x16d: V111 = 0x40
0x16f: V112 = M[0x40]
0x172: V113 = SUB V110 V112
0x174: RETURN V112 V113
---
Entry stack: [V11, 0x15f, V813]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x15f]

================================

Block 0x175
[0x175:0x17c]
---
Predecessors: [0x57]
Successors: [0x17d, 0x181]
---
0x175 JUMPDEST
0x176 CALLVALUE
0x177 DUP1
0x178 ISZERO
0x179 PUSH2 0x181
0x17c JUMPI
---
0x175: JUMPDEST 
0x176: V114 = CALLVALUE
0x178: V115 = ISZERO V114
0x179: V116 = 0x181
0x17c: JUMPI 0x181 V115
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V114]
Exit stack: [V11, V114]

================================

Block 0x17d
[0x17d:0x180]
---
Predecessors: [0x175]
Successors: []
---
0x17d PUSH1 0x0
0x17f DUP1
0x180 REVERT
---
0x17d: V117 = 0x0
0x180: REVERT 0x0 0x0
---
Entry stack: [V11, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V114]

================================

Block 0x181
[0x181:0x189]
---
Predecessors: [0x175]
Successors: [0xcde]
---
0x181 JUMPDEST
0x182 POP
0x183 PUSH2 0x18a
0x186 PUSH2 0xcde
0x189 JUMP
---
0x181: JUMPDEST 
0x183: V118 = 0x18a
0x186: V119 = 0xcde
0x189: JUMP 0xcde
---
Entry stack: [V11, V114]
Stack pops: 1
Stack additions: [0x18a]
Exit stack: [V11, 0x18a]

================================

Block 0x18a
[0x18a:0x19f]
---
Predecessors: [0xcde]
Successors: []
---
0x18a JUMPDEST
0x18b PUSH1 0x40
0x18d MLOAD
0x18e DUP1
0x18f DUP3
0x190 DUP2
0x191 MSTORE
0x192 PUSH1 0x20
0x194 ADD
0x195 SWAP2
0x196 POP
0x197 POP
0x198 PUSH1 0x40
0x19a MLOAD
0x19b DUP1
0x19c SWAP2
0x19d SUB
0x19e SWAP1
0x19f RETURN
---
0x18a: JUMPDEST 
0x18b: V120 = 0x40
0x18d: V121 = M[0x40]
0x191: M[V121] = V815
0x192: V122 = 0x20
0x194: V123 = ADD 0x20 V121
0x198: V124 = 0x40
0x19a: V125 = M[0x40]
0x19d: V126 = SUB V123 V125
0x19f: RETURN V125 V126
---
Entry stack: [V11, 0x18a, V815]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x18a]

================================

Block 0x1a0
[0x1a0:0x1a7]
---
Predecessors: [0x62]
Successors: [0x1a8, 0x1ac]
---
0x1a0 JUMPDEST
0x1a1 CALLVALUE
0x1a2 DUP1
0x1a3 ISZERO
0x1a4 PUSH2 0x1ac
0x1a7 JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V127 = CALLVALUE
0x1a3: V128 = ISZERO V127
0x1a4: V129 = 0x1ac
0x1a7: JUMPI 0x1ac V128
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V127]
Exit stack: [V11, V127]

================================

Block 0x1a8
[0x1a8:0x1ab]
---
Predecessors: [0x1a0]
Successors: []
---
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab REVERT
---
0x1a8: V130 = 0x0
0x1ab: REVERT 0x0 0x0
---
Entry stack: [V11, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V127]

================================

Block 0x1ac
[0x1ac:0x1b4]
---
Predecessors: [0x1a0]
Successors: [0xce4]
---
0x1ac JUMPDEST
0x1ad POP
0x1ae PUSH2 0x1b5
0x1b1 PUSH2 0xce4
0x1b4 JUMP
---
0x1ac: JUMPDEST 
0x1ae: V131 = 0x1b5
0x1b1: V132 = 0xce4
0x1b4: JUMP 0xce4
---
Entry stack: [V11, V127]
Stack pops: 1
Stack additions: [0x1b5]
Exit stack: [V11, 0x1b5]

================================

Block 0x1b5
[0x1b5:0x1ce]
---
Predecessors: [0xce4]
Successors: []
---
0x1b5 JUMPDEST
0x1b6 PUSH1 0x40
0x1b8 MLOAD
0x1b9 DUP1
0x1ba DUP3
0x1bb ISZERO
0x1bc ISZERO
0x1bd ISZERO
0x1be ISZERO
0x1bf DUP2
0x1c0 MSTORE
0x1c1 PUSH1 0x20
0x1c3 ADD
0x1c4 SWAP2
0x1c5 POP
0x1c6 POP
0x1c7 PUSH1 0x40
0x1c9 MLOAD
0x1ca DUP1
0x1cb SWAP2
0x1cc SUB
0x1cd SWAP1
0x1ce RETURN
---
0x1b5: JUMPDEST 
0x1b6: V133 = 0x40
0x1b8: V134 = M[0x40]
0x1bb: V135 = ISZERO V823
0x1bc: V136 = ISZERO V135
0x1bd: V137 = ISZERO V136
0x1be: V138 = ISZERO V137
0x1c0: M[V134] = V138
0x1c1: V139 = 0x20
0x1c3: V140 = ADD 0x20 V134
0x1c7: V141 = 0x40
0x1c9: V142 = M[0x40]
0x1cc: V143 = SUB V140 V142
0x1ce: RETURN V142 V143
---
Entry stack: [V11, 0x1b5, V823]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1b5]

================================

Block 0x1cf
[0x1cf:0x1d6]
---
Predecessors: [0x6d]
Successors: [0x1d7, 0x1db]
---
0x1cf JUMPDEST
0x1d0 CALLVALUE
0x1d1 DUP1
0x1d2 ISZERO
0x1d3 PUSH2 0x1db
0x1d6 JUMPI
---
0x1cf: JUMPDEST 
0x1d0: V144 = CALLVALUE
0x1d2: V145 = ISZERO V144
0x1d3: V146 = 0x1db
0x1d6: JUMPI 0x1db V145
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V144]
Exit stack: [V11, V144]

================================

Block 0x1d7
[0x1d7:0x1da]
---
Predecessors: [0x1cf]
Successors: []
---
0x1d7 PUSH1 0x0
0x1d9 DUP1
0x1da REVERT
---
0x1d7: V147 = 0x0
0x1da: REVERT 0x0 0x0
---
Entry stack: [V11, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V144]

================================

Block 0x1db
[0x1db:0x1e3]
---
Predecessors: [0x1cf]
Successors: [0xcf7]
---
0x1db JUMPDEST
0x1dc POP
0x1dd PUSH2 0x1e4
0x1e0 PUSH2 0xcf7
0x1e3 JUMP
---
0x1db: JUMPDEST 
0x1dd: V148 = 0x1e4
0x1e0: V149 = 0xcf7
0x1e3: JUMP 0xcf7
---
Entry stack: [V11, V144]
Stack pops: 1
Stack additions: [0x1e4]
Exit stack: [V11, 0x1e4]

================================

Block 0x1e4
[0x1e4:0x1f9]
---
Predecessors: [0xcf7]
Successors: []
---
0x1e4 JUMPDEST
0x1e5 PUSH1 0x40
0x1e7 MLOAD
0x1e8 DUP1
0x1e9 DUP3
0x1ea DUP2
0x1eb MSTORE
0x1ec PUSH1 0x20
0x1ee ADD
0x1ef SWAP2
0x1f0 POP
0x1f1 POP
0x1f2 PUSH1 0x40
0x1f4 MLOAD
0x1f5 DUP1
0x1f6 SWAP2
0x1f7 SUB
0x1f8 SWAP1
0x1f9 RETURN
---
0x1e4: JUMPDEST 
0x1e5: V150 = 0x40
0x1e7: V151 = M[0x40]
0x1eb: M[V151] = V825
0x1ec: V152 = 0x20
0x1ee: V153 = ADD 0x20 V151
0x1f2: V154 = 0x40
0x1f4: V155 = M[0x40]
0x1f7: V156 = SUB V153 V155
0x1f9: RETURN V155 V156
---
Entry stack: [V11, 0x1e4, V825]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1e4]

================================

Block 0x1fa
[0x1fa:0x201]
---
Predecessors: [0x78]
Successors: [0x202, 0x206]
---
0x1fa JUMPDEST
0x1fb CALLVALUE
0x1fc DUP1
0x1fd ISZERO
0x1fe PUSH2 0x206
0x201 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V157 = CALLVALUE
0x1fd: V158 = ISZERO V157
0x1fe: V159 = 0x206
0x201: JUMPI 0x206 V158
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V157]
Exit stack: [V11, V157]

================================

Block 0x202
[0x202:0x205]
---
Predecessors: [0x1fa]
Successors: []
---
0x202 PUSH1 0x0
0x204 DUP1
0x205 REVERT
---
0x202: V160 = 0x0
0x205: REVERT 0x0 0x0
---
Entry stack: [V11, V157]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V157]

================================

Block 0x206
[0x206:0x20e]
---
Predecessors: [0x1fa]
Successors: [0xcfd]
---
0x206 JUMPDEST
0x207 POP
0x208 PUSH2 0x20f
0x20b PUSH2 0xcfd
0x20e JUMP
---
0x206: JUMPDEST 
0x208: V161 = 0x20f
0x20b: V162 = 0xcfd
0x20e: JUMP 0xcfd
---
Entry stack: [V11, V157]
Stack pops: 1
Stack additions: [0x20f]
Exit stack: [V11, 0x20f]

================================

Block 0x20f
[0x20f:0x250]
---
Predecessors: [0xcfd]
Successors: []
---
0x20f JUMPDEST
0x210 PUSH1 0x40
0x212 MLOAD
0x213 DUP1
0x214 DUP3
0x215 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22a AND
0x22b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x240 AND
0x241 DUP2
0x242 MSTORE
0x243 PUSH1 0x20
0x245 ADD
0x246 SWAP2
0x247 POP
0x248 POP
0x249 PUSH1 0x40
0x24b MLOAD
0x24c DUP1
0x24d SWAP2
0x24e SUB
0x24f SWAP1
0x250 RETURN
---
0x20f: JUMPDEST 
0x210: V163 = 0x40
0x212: V164 = M[0x40]
0x215: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V833
0x22b: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x240: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x242: M[V164] = V168
0x243: V169 = 0x20
0x245: V170 = ADD 0x20 V164
0x249: V171 = 0x40
0x24b: V172 = M[0x40]
0x24e: V173 = SUB V170 V172
0x250: RETURN V172 V173
---
Entry stack: [V11, 0x20f, V833]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x20f]

================================

Block 0x251
[0x251:0x258]
---
Predecessors: [0x83]
Successors: [0x259, 0x25d]
---
0x251 JUMPDEST
0x252 CALLVALUE
0x253 DUP1
0x254 ISZERO
0x255 PUSH2 0x25d
0x258 JUMPI
---
0x251: JUMPDEST 
0x252: V174 = CALLVALUE
0x254: V175 = ISZERO V174
0x255: V176 = 0x25d
0x258: JUMPI 0x25d V175
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V174]
Exit stack: [V11, V174]

================================

Block 0x259
[0x259:0x25c]
---
Predecessors: [0x251]
Successors: []
---
0x259 PUSH1 0x0
0x25b DUP1
0x25c REVERT
---
0x259: V177 = 0x0
0x25c: REVERT 0x0 0x0
---
Entry stack: [V11, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V174]

================================

Block 0x25d
[0x25d:0x265]
---
Predecessors: [0x251]
Successors: [0xd23]
---
0x25d JUMPDEST
0x25e POP
0x25f PUSH2 0x266
0x262 PUSH2 0xd23
0x265 JUMP
---
0x25d: JUMPDEST 
0x25f: V178 = 0x266
0x262: V179 = 0xd23
0x265: JUMP 0xd23
---
Entry stack: [V11, V174]
Stack pops: 1
Stack additions: [0x266]
Exit stack: [V11, 0x266]

================================

Block 0x266
[0x266:0x27b]
---
Predecessors: [0xd23]
Successors: []
---
0x266 JUMPDEST
0x267 PUSH1 0x40
0x269 MLOAD
0x26a DUP1
0x26b DUP3
0x26c DUP2
0x26d MSTORE
0x26e PUSH1 0x20
0x270 ADD
0x271 SWAP2
0x272 POP
0x273 POP
0x274 PUSH1 0x40
0x276 MLOAD
0x277 DUP1
0x278 SWAP2
0x279 SUB
0x27a SWAP1
0x27b RETURN
---
0x266: JUMPDEST 
0x267: V180 = 0x40
0x269: V181 = M[0x40]
0x26d: M[V181] = V835
0x26e: V182 = 0x20
0x270: V183 = ADD 0x20 V181
0x274: V184 = 0x40
0x276: V185 = M[0x40]
0x279: V186 = SUB V183 V185
0x27b: RETURN V185 V186
---
Entry stack: [V11, 0x266, V835]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x266]

================================

Block 0x27c
[0x27c:0x283]
---
Predecessors: [0x8e]
Successors: [0x284, 0x288]
---
0x27c JUMPDEST
0x27d CALLVALUE
0x27e DUP1
0x27f ISZERO
0x280 PUSH2 0x288
0x283 JUMPI
---
0x27c: JUMPDEST 
0x27d: V187 = CALLVALUE
0x27f: V188 = ISZERO V187
0x280: V189 = 0x288
0x283: JUMPI 0x288 V188
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V187]
Exit stack: [V11, V187]

================================

Block 0x284
[0x284:0x287]
---
Predecessors: [0x27c]
Successors: []
---
0x284 PUSH1 0x0
0x286 DUP1
0x287 REVERT
---
0x284: V190 = 0x0
0x287: REVERT 0x0 0x0
---
Entry stack: [V11, V187]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V187]

================================

Block 0x288
[0x288:0x290]
---
Predecessors: [0x27c]
Successors: [0xd29]
---
0x288 JUMPDEST
0x289 POP
0x28a PUSH2 0x291
0x28d PUSH2 0xd29
0x290 JUMP
---
0x288: JUMPDEST 
0x28a: V191 = 0x291
0x28d: V192 = 0xd29
0x290: JUMP 0xd29
---
Entry stack: [V11, V187]
Stack pops: 1
Stack additions: [0x291]
Exit stack: [V11, 0x291]

================================

Block 0x291
[0x291:0x2a6]
---
Predecessors: [0xd29]
Successors: []
---
0x291 JUMPDEST
0x292 PUSH1 0x40
0x294 MLOAD
0x295 DUP1
0x296 DUP3
0x297 DUP2
0x298 MSTORE
0x299 PUSH1 0x20
0x29b ADD
0x29c SWAP2
0x29d POP
0x29e POP
0x29f PUSH1 0x40
0x2a1 MLOAD
0x2a2 DUP1
0x2a3 SWAP2
0x2a4 SUB
0x2a5 SWAP1
0x2a6 RETURN
---
0x291: JUMPDEST 
0x292: V193 = 0x40
0x294: V194 = M[0x40]
0x298: M[V194] = V837
0x299: V195 = 0x20
0x29b: V196 = ADD 0x20 V194
0x29f: V197 = 0x40
0x2a1: V198 = M[0x40]
0x2a4: V199 = SUB V196 V198
0x2a6: RETURN V198 V199
---
Entry stack: [V11, 0x291, V837]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x291]

================================

Block 0x2a7
[0x2a7:0x2ae]
---
Predecessors: [0x99]
Successors: [0x2af, 0x2b3]
---
0x2a7 JUMPDEST
0x2a8 CALLVALUE
0x2a9 DUP1
0x2aa ISZERO
0x2ab PUSH2 0x2b3
0x2ae JUMPI
---
0x2a7: JUMPDEST 
0x2a8: V200 = CALLVALUE
0x2aa: V201 = ISZERO V200
0x2ab: V202 = 0x2b3
0x2ae: JUMPI 0x2b3 V201
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V200]
Exit stack: [V11, V200]

================================

Block 0x2af
[0x2af:0x2b2]
---
Predecessors: [0x2a7]
Successors: []
---
0x2af PUSH1 0x0
0x2b1 DUP1
0x2b2 REVERT
---
0x2af: V203 = 0x0
0x2b2: REVERT 0x0 0x0
---
Entry stack: [V11, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V200]

================================

Block 0x2b3
[0x2b3:0x2bb]
---
Predecessors: [0x2a7]
Successors: [0xd2f]
---
0x2b3 JUMPDEST
0x2b4 POP
0x2b5 PUSH2 0x2bc
0x2b8 PUSH2 0xd2f
0x2bb JUMP
---
0x2b3: JUMPDEST 
0x2b5: V204 = 0x2bc
0x2b8: V205 = 0xd2f
0x2bb: JUMP 0xd2f
---
Entry stack: [V11, V200]
Stack pops: 1
Stack additions: [0x2bc]
Exit stack: [V11, 0x2bc]

================================

Block 0x2bc
[0x2bc:0x2d1]
---
Predecessors: [0xd2f]
Successors: []
---
0x2bc JUMPDEST
0x2bd PUSH1 0x40
0x2bf MLOAD
0x2c0 DUP1
0x2c1 DUP3
0x2c2 DUP2
0x2c3 MSTORE
0x2c4 PUSH1 0x20
0x2c6 ADD
0x2c7 SWAP2
0x2c8 POP
0x2c9 POP
0x2ca PUSH1 0x40
0x2cc MLOAD
0x2cd DUP1
0x2ce SWAP2
0x2cf SUB
0x2d0 SWAP1
0x2d1 RETURN
---
0x2bc: JUMPDEST 
0x2bd: V206 = 0x40
0x2bf: V207 = M[0x40]
0x2c3: M[V207] = V839
0x2c4: V208 = 0x20
0x2c6: V209 = ADD 0x20 V207
0x2ca: V210 = 0x40
0x2cc: V211 = M[0x40]
0x2cf: V212 = SUB V209 V211
0x2d1: RETURN V211 V212
---
Entry stack: [V11, 0x2bc, V839]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2bc]

================================

Block 0x2d2
[0x2d2:0x2de]
---
Predecessors: [0xc1, 0xa3e]
Successors: [0x2df, 0x2e6]
---
0x2d2 JUMPDEST
0x2d3 PUSH1 0x0
0x2d5 SLOAD
0x2d6 CALLVALUE
0x2d7 LT
0x2d8 ISZERO
0x2d9 DUP1
0x2da ISZERO
0x2db PUSH2 0x2e6
0x2de JUMPI
---
0x2d2: JUMPDEST 
0x2d3: V213 = 0x0
0x2d5: V214 = S[0x0]
0x2d6: V215 = CALLVALUE
0x2d7: V216 = LT V215 V214
0x2d8: V217 = ISZERO V216
0x2da: V218 = ISZERO V217
0x2db: V219 = 0x2e6
0x2de: JUMPI 0x2e6 V218
---
Entry stack: [V11, S1, {0xc8, 0xaa7}]
Stack pops: 0
Stack additions: [V217]
Exit stack: [V11, S1, {0xc8, 0xaa7}, V217]

================================

Block 0x2df
[0x2df:0x2e5]
---
Predecessors: [0x2d2]
Successors: [0x2e6]
---
0x2df POP
0x2e0 PUSH1 0x1
0x2e2 SLOAD
0x2e3 CALLVALUE
0x2e4 GT
0x2e5 ISZERO
---
0x2e0: V220 = 0x1
0x2e2: V221 = S[0x1]
0x2e3: V222 = CALLVALUE
0x2e4: V223 = GT V222 V221
0x2e5: V224 = ISZERO V223
---
Entry stack: [V11, S2, {0xc8, 0xaa7}, V217]
Stack pops: 1
Stack additions: [V224]
Exit stack: [V11, S2, {0xc8, 0xaa7}, V224]

================================

Block 0x2e6
[0x2e6:0x2ec]
---
Predecessors: [0x2d2, 0x2df]
Successors: [0x2ed, 0x35a]
---
0x2e6 JUMPDEST
0x2e7 ISZERO
0x2e8 ISZERO
0x2e9 PUSH2 0x35a
0x2ec JUMPI
---
0x2e6: JUMPDEST 
0x2e7: V225 = ISZERO S0
0x2e8: V226 = ISZERO V225
0x2e9: V227 = 0x35a
0x2ec: JUMPI 0x35a V226
---
Entry stack: [V11, S2, {0xc8, 0xaa7}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S2, {0xc8, 0xaa7}]

================================

Block 0x2ed
[0x2ed:0x359]
---
Predecessors: [0x2e6]
Successors: []
---
0x2ed PUSH1 0x40
0x2ef MLOAD
0x2f0 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x311 DUP2
0x312 MSTORE
0x313 PUSH1 0x4
0x315 ADD
0x316 DUP1
0x317 DUP1
0x318 PUSH1 0x20
0x31a ADD
0x31b DUP3
0x31c DUP2
0x31d SUB
0x31e DUP3
0x31f MSTORE
0x320 PUSH1 0xf
0x322 DUP2
0x323 MSTORE
0x324 PUSH1 0x20
0x326 ADD
0x327 DUP1
0x328 PUSH32 0x57726f6e67204554482076616c75650000000000000000000000000000000000
0x349 DUP2
0x34a MSTORE
0x34b POP
0x34c PUSH1 0x20
0x34e ADD
0x34f SWAP2
0x350 POP
0x351 POP
0x352 PUSH1 0x40
0x354 MLOAD
0x355 DUP1
0x356 SWAP2
0x357 SUB
0x358 SWAP1
0x359 REVERT
---
0x2ed: V228 = 0x40
0x2ef: V229 = M[0x40]
0x2f0: V230 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x312: M[V229] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x313: V231 = 0x4
0x315: V232 = ADD 0x4 V229
0x318: V233 = 0x20
0x31a: V234 = ADD 0x20 V232
0x31d: V235 = SUB V234 V232
0x31f: M[V232] = V235
0x320: V236 = 0xf
0x323: M[V234] = 0xf
0x324: V237 = 0x20
0x326: V238 = ADD 0x20 V234
0x328: V239 = 0x57726f6e67204554482076616c75650000000000000000000000000000000000
0x34a: M[V238] = 0x57726f6e67204554482076616c75650000000000000000000000000000000000
0x34c: V240 = 0x20
0x34e: V241 = ADD 0x20 V238
0x352: V242 = 0x40
0x354: V243 = M[0x40]
0x357: V244 = SUB V241 V243
0x359: REVERT V243 V244
---
Entry stack: [V11, S1, {0xc8, 0xaa7}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, {0xc8, 0xaa7}]

================================

Block 0x35a
[0x35a:0x36e]
---
Predecessors: [0x2e6]
Successors: [0xd35]
---
0x35a JUMPDEST
0x35b PUSH2 0x36f
0x35e CALLVALUE
0x35f PUSH1 0x7
0x361 SLOAD
0x362 PUSH2 0xd35
0x365 SWAP1
0x366 SWAP2
0x367 SWAP1
0x368 PUSH4 0xffffffff
0x36d AND
0x36e JUMP
---
0x35a: JUMPDEST 
0x35b: V245 = 0x36f
0x35e: V246 = CALLVALUE
0x35f: V247 = 0x7
0x361: V248 = S[0x7]
0x362: V249 = 0xd35
0x368: V250 = 0xffffffff
0x36d: V251 = AND 0xffffffff 0xd35
0x36e: JUMP 0xd35
---
Entry stack: [V11, S1, {0xc8, 0xaa7}]
Stack pops: 0
Stack additions: [0x36f, V248, V246]
Exit stack: [V11, S1, {0xc8, 0xaa7}, 0x36f, V248, V246]

================================

Block 0x36f
[0x36f:0x3e5]
---
Predecessors: [0xd49]
Successors: [0xd53]
---
0x36f JUMPDEST
0x370 PUSH1 0x7
0x372 DUP2
0x373 SWAP1
0x374 SSTORE
0x375 POP
0x376 CALLER
0x377 PUSH1 0x6
0x379 PUSH1 0x0
0x37b PUSH2 0x100
0x37e EXP
0x37f DUP2
0x380 SLOAD
0x381 DUP2
0x382 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x397 MUL
0x398 NOT
0x399 AND
0x39a SWAP1
0x39b DUP4
0x39c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b1 AND
0x3b2 MUL
0x3b3 OR
0x3b4 SWAP1
0x3b5 SSTORE
0x3b6 POP
0x3b7 TIMESTAMP
0x3b8 PUSH1 0x9
0x3ba DUP2
0x3bb SWAP1
0x3bc SSTORE
0x3bd POP
0x3be CALLVALUE
0x3bf PUSH1 0x2
0x3c1 DUP2
0x3c2 SWAP1
0x3c3 SSTORE
0x3c4 POP
0x3c5 PUSH2 0x402
0x3c8 PUSH1 0x2
0x3ca SLOAD
0x3cb PUSH2 0x3f4
0x3ce PUSH1 0x64
0x3d0 PUSH2 0x3e6
0x3d3 PUSH1 0x4
0x3d5 SLOAD
0x3d6 PUSH1 0x2
0x3d8 SLOAD
0x3d9 PUSH2 0xd53
0x3dc SWAP1
0x3dd SWAP2
0x3de SWAP1
0x3df PUSH4 0xffffffff
0x3e4 AND
0x3e5 JUMP
---
0x36f: JUMPDEST 
0x370: V252 = 0x7
0x374: S[0x7] = V841
0x376: V253 = CALLER
0x377: V254 = 0x6
0x379: V255 = 0x0
0x37b: V256 = 0x100
0x37e: V257 = EXP 0x100 0x0
0x380: V258 = S[0x6]
0x382: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x397: V260 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x398: V261 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x399: V262 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V258
0x39c: V263 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b1: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x3b2: V265 = MUL V264 0x1
0x3b3: V266 = OR V265 V262
0x3b5: S[0x6] = V266
0x3b7: V267 = TIMESTAMP
0x3b8: V268 = 0x9
0x3bc: S[0x9] = V267
0x3be: V269 = CALLVALUE
0x3bf: V270 = 0x2
0x3c3: S[0x2] = V269
0x3c5: V271 = 0x402
0x3c8: V272 = 0x2
0x3ca: V273 = S[0x2]
0x3cb: V274 = 0x3f4
0x3ce: V275 = 0x64
0x3d0: V276 = 0x3e6
0x3d3: V277 = 0x4
0x3d5: V278 = S[0x4]
0x3d6: V279 = 0x2
0x3d8: V280 = S[0x2]
0x3d9: V281 = 0xd53
0x3df: V282 = 0xffffffff
0x3e4: V283 = AND 0xffffffff 0xd53
0x3e5: JUMP 0xd53
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V841]
Stack pops: 1
Stack additions: [0x402, V273, 0x3f4, 0x64, 0x3e6, V280, V278]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x402, V273, 0x3f4, 0x64, 0x3e6, V280, V278]

================================

Block 0x3e6
[0x3e6:0x3f3]
---
Predecessors: [0xd87]
Successors: [0xd8e]
---
0x3e6 JUMPDEST
0x3e7 PUSH2 0xd8e
0x3ea SWAP1
0x3eb SWAP2
0x3ec SWAP1
0x3ed PUSH4 0xffffffff
0x3f2 AND
0x3f3 JUMP
---
0x3e6: JUMPDEST 
0x3e7: V284 = 0xd8e
0x3ed: V285 = 0xffffffff
0x3f2: V286 = AND 0xffffffff 0xd8e
0x3f3: JUMP 0xd8e
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, S0, {0xb, 0x64}]

================================

Block 0x3f4
[0x3f4:0x401]
---
Predecessors: [0xdab]
Successors: [0xd35]
---
0x3f4 JUMPDEST
0x3f5 PUSH2 0xd35
0x3f8 SWAP1
0x3f9 SWAP2
0x3fa SWAP1
0x3fb PUSH4 0xffffffff
0x400 AND
0x401 JUMP
---
0x3f4: JUMPDEST 
0x3f5: V287 = 0xd35
0x3fb: V288 = 0xffffffff
0x400: V289 = AND 0xffffffff 0xd35
0x401: JUMP 0xd35
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V873]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V873, S1]

================================

Block 0x402
[0x402:0x4bd]
---
Predecessors: [0xd49]
Successors: [0xc8, 0xe3, 0xaa7]
---
0x402 JUMPDEST
0x403 PUSH1 0x3
0x405 DUP2
0x406 SWAP1
0x407 SSTORE
0x408 POP
0x409 PUSH1 0x0
0x40b PUSH1 0x8
0x40d PUSH1 0x0
0x40f PUSH2 0x100
0x412 EXP
0x413 DUP2
0x414 SLOAD
0x415 DUP2
0x416 PUSH1 0xff
0x418 MUL
0x419 NOT
0x41a AND
0x41b SWAP1
0x41c DUP4
0x41d ISZERO
0x41e ISZERO
0x41f MUL
0x420 OR
0x421 SWAP1
0x422 SSTORE
0x423 POP
0x424 PUSH32 0xf41b7910e085d0992d604fd470931728fd77cc8eb504d99e50e51a0a30fcfd1a
0x445 PUSH1 0x6
0x447 PUSH1 0x0
0x449 SWAP1
0x44a SLOAD
0x44b SWAP1
0x44c PUSH2 0x100
0x44f EXP
0x450 SWAP1
0x451 DIV
0x452 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x467 AND
0x468 PUSH1 0x9
0x46a SLOAD
0x46b PUSH1 0x2
0x46d SLOAD
0x46e PUSH1 0x40
0x470 MLOAD
0x471 DUP1
0x472 DUP5
0x473 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x488 AND
0x489 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49e AND
0x49f DUP2
0x4a0 MSTORE
0x4a1 PUSH1 0x20
0x4a3 ADD
0x4a4 DUP4
0x4a5 DUP2
0x4a6 MSTORE
0x4a7 PUSH1 0x20
0x4a9 ADD
0x4aa DUP3
0x4ab DUP2
0x4ac MSTORE
0x4ad PUSH1 0x20
0x4af ADD
0x4b0 SWAP4
0x4b1 POP
0x4b2 POP
0x4b3 POP
0x4b4 POP
0x4b5 PUSH1 0x40
0x4b7 MLOAD
0x4b8 DUP1
0x4b9 SWAP2
0x4ba SUB
0x4bb SWAP1
0x4bc LOG1
0x4bd JUMP
---
0x402: JUMPDEST 
0x403: V290 = 0x3
0x407: S[0x3] = S0
0x409: V291 = 0x0
0x40b: V292 = 0x8
0x40d: V293 = 0x0
0x40f: V294 = 0x100
0x412: V295 = EXP 0x100 0x0
0x414: V296 = S[0x8]
0x416: V297 = 0xff
0x418: V298 = MUL 0xff 0x1
0x419: V299 = NOT 0xff
0x41a: V300 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V296
0x41d: V301 = ISZERO 0x0
0x41e: V302 = ISZERO 0x1
0x41f: V303 = MUL 0x0 0x1
0x420: V304 = OR 0x0 V300
0x422: S[0x8] = V304
0x424: V305 = 0xf41b7910e085d0992d604fd470931728fd77cc8eb504d99e50e51a0a30fcfd1a
0x445: V306 = 0x6
0x447: V307 = 0x0
0x44a: V308 = S[0x6]
0x44c: V309 = 0x100
0x44f: V310 = EXP 0x100 0x0
0x451: V311 = DIV V308 0x1
0x452: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x467: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x468: V314 = 0x9
0x46a: V315 = S[0x9]
0x46b: V316 = 0x2
0x46d: V317 = S[0x2]
0x46e: V318 = 0x40
0x470: V319 = M[0x40]
0x473: V320 = 0xffffffffffffffffffffffffffffffffffffffff
0x488: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x489: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x49e: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x4a0: M[V319] = V323
0x4a1: V324 = 0x20
0x4a3: V325 = ADD 0x20 V319
0x4a6: M[V325] = V315
0x4a7: V326 = 0x20
0x4a9: V327 = ADD 0x20 V325
0x4ac: M[V327] = V317
0x4ad: V328 = 0x20
0x4af: V329 = ADD 0x20 V327
0x4b5: V330 = 0x40
0x4b7: V331 = M[0x40]
0x4ba: V332 = SUB V329 V331
0x4bc: LOG V331 V332 0xf41b7910e085d0992d604fd470931728fd77cc8eb504d99e50e51a0a30fcfd1a
0x4bd: JUMP S1
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x4be
[0x4be:0x4cc]
---
Predecessors: [0xdc]
Successors: [0x4cd, 0x53a]
---
0x4be JUMPDEST
0x4bf PUSH1 0x0
0x4c1 PUSH1 0x3
0x4c3 SLOAD
0x4c4 CALLVALUE
0x4c5 LT
0x4c6 ISZERO
0x4c7 ISZERO
0x4c8 ISZERO
0x4c9 PUSH2 0x53a
0x4cc JUMPI
---
0x4be: JUMPDEST 
0x4bf: V333 = 0x0
0x4c1: V334 = 0x3
0x4c3: V335 = S[0x3]
0x4c4: V336 = CALLVALUE
0x4c5: V337 = LT V336 V335
0x4c6: V338 = ISZERO V337
0x4c7: V339 = ISZERO V338
0x4c8: V340 = ISZERO V339
0x4c9: V341 = 0x53a
0x4cc: JUMPI 0x53a V340
---
Entry stack: [V11, 0xe3]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xe3, 0x0]

================================

Block 0x4cd
[0x4cd:0x539]
---
Predecessors: [0x4be]
Successors: []
---
0x4cd PUSH1 0x40
0x4cf MLOAD
0x4d0 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4f1 DUP2
0x4f2 MSTORE
0x4f3 PUSH1 0x4
0x4f5 ADD
0x4f6 DUP1
0x4f7 DUP1
0x4f8 PUSH1 0x20
0x4fa ADD
0x4fb DUP3
0x4fc DUP2
0x4fd SUB
0x4fe DUP3
0x4ff MSTORE
0x500 PUSH1 0xf
0x502 DUP2
0x503 MSTORE
0x504 PUSH1 0x20
0x506 ADD
0x507 DUP1
0x508 PUSH32 0x57726f6e67204554482076616c75650000000000000000000000000000000000
0x529 DUP2
0x52a MSTORE
0x52b POP
0x52c PUSH1 0x20
0x52e ADD
0x52f SWAP2
0x530 POP
0x531 POP
0x532 PUSH1 0x40
0x534 MLOAD
0x535 DUP1
0x536 SWAP2
0x537 SUB
0x538 SWAP1
0x539 REVERT
---
0x4cd: V342 = 0x40
0x4cf: V343 = M[0x40]
0x4d0: V344 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4f2: M[V343] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4f3: V345 = 0x4
0x4f5: V346 = ADD 0x4 V343
0x4f8: V347 = 0x20
0x4fa: V348 = ADD 0x20 V346
0x4fd: V349 = SUB V348 V346
0x4ff: M[V346] = V349
0x500: V350 = 0xf
0x503: M[V348] = 0xf
0x504: V351 = 0x20
0x506: V352 = ADD 0x20 V348
0x508: V353 = 0x57726f6e67204554482076616c75650000000000000000000000000000000000
0x52a: M[V352] = 0x57726f6e67204554482076616c75650000000000000000000000000000000000
0x52c: V354 = 0x20
0x52e: V355 = ADD 0x20 V352
0x532: V356 = 0x40
0x534: V357 = M[0x40]
0x537: V358 = SUB V355 V357
0x539: REVERT V357 V358
---
Entry stack: [V11, 0xe3, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe3, 0x0]

================================

Block 0x53a
[0x53a:0x54e]
---
Predecessors: [0x4be]
Successors: [0xdb8]
---
0x53a JUMPDEST
0x53b PUSH2 0x54f
0x53e PUSH1 0x2
0x540 SLOAD
0x541 CALLVALUE
0x542 PUSH2 0xdb8
0x545 SWAP1
0x546 SWAP2
0x547 SWAP1
0x548 PUSH4 0xffffffff
0x54d AND
0x54e JUMP
---
0x53a: JUMPDEST 
0x53b: V359 = 0x54f
0x53e: V360 = 0x2
0x540: V361 = S[0x2]
0x541: V362 = CALLVALUE
0x542: V363 = 0xdb8
0x548: V364 = 0xffffffff
0x54d: V365 = AND 0xffffffff 0xdb8
0x54e: JUMP 0xdb8
---
Entry stack: [V11, 0xe3, 0x0]
Stack pops: 0
Stack additions: [0x54f, V362, V361]
Exit stack: [V11, 0xe3, 0x0, 0x54f, V362, V361]

================================

Block 0x54f
[0x54f:0x5ab]
---
Predecessors: [0xdc6]
Successors: [0xd53]
---
0x54f JUMPDEST
0x550 SWAP1
0x551 POP
0x552 PUSH1 0x6
0x554 PUSH1 0x0
0x556 SWAP1
0x557 SLOAD
0x558 SWAP1
0x559 PUSH2 0x100
0x55c EXP
0x55d SWAP1
0x55e DIV
0x55f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x574 AND
0x575 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58a AND
0x58b PUSH2 0x8fc
0x58e PUSH2 0x5c8
0x591 PUSH1 0x2
0x593 SLOAD
0x594 PUSH2 0x5ba
0x597 PUSH1 0xb
0x599 PUSH2 0x5ac
0x59c PUSH1 0xa
0x59e DUP9
0x59f PUSH2 0xd53
0x5a2 SWAP1
0x5a3 SWAP2
0x5a4 SWAP1
0x5a5 PUSH4 0xffffffff
0x5aa AND
0x5ab JUMP
---
0x54f: JUMPDEST 
0x552: V366 = 0x6
0x554: V367 = 0x0
0x557: V368 = S[0x6]
0x559: V369 = 0x100
0x55c: V370 = EXP 0x100 0x0
0x55e: V371 = DIV V368 0x1
0x55f: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x574: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x575: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x58a: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x58b: V376 = 0x8fc
0x58e: V377 = 0x5c8
0x591: V378 = 0x2
0x593: V379 = S[0x2]
0x594: V380 = 0x5ba
0x597: V381 = 0xb
0x599: V382 = 0x5ac
0x59c: V383 = 0xa
0x59f: V384 = 0xd53
0x5a5: V385 = 0xffffffff
0x5aa: V386 = AND 0xffffffff 0xd53
0x5ab: JUMP 0xd53
---
Entry stack: [V11, S5, S4, S3, S2, S1, V880]
Stack pops: 2
Stack additions: [S0, V375, 0x8fc, 0x5c8, V379, 0x5ba, 0xb, 0x5ac, S0, 0xa]
Exit stack: [V11, S5, S4, S3, S2, V880, V375, 0x8fc, 0x5c8, V379, 0x5ba, 0xb, 0x5ac, V880, 0xa]

================================

Block 0x5ac
[0x5ac:0x5b9]
---
Predecessors: [0xd87]
Successors: [0xd8e]
---
0x5ac JUMPDEST
0x5ad PUSH2 0xd8e
0x5b0 SWAP1
0x5b1 SWAP2
0x5b2 SWAP1
0x5b3 PUSH4 0xffffffff
0x5b8 AND
0x5b9 JUMP
---
0x5ac: JUMPDEST 
0x5ad: V387 = 0xd8e
0x5b3: V388 = 0xffffffff
0x5b8: V389 = AND 0xffffffff 0xd8e
0x5b9: JUMP 0xd8e
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, S0, {0xb, 0x64}]

================================

Block 0x5ba
[0x5ba:0x5c7]
---
Predecessors: [0xdab]
Successors: [0xd35]
---
0x5ba JUMPDEST
0x5bb PUSH2 0xd35
0x5be SWAP1
0x5bf SWAP2
0x5c0 SWAP1
0x5c1 PUSH4 0xffffffff
0x5c6 AND
0x5c7 JUMP
---
0x5ba: JUMPDEST 
0x5bb: V390 = 0xd35
0x5c1: V391 = 0xffffffff
0x5c6: V392 = AND 0xffffffff 0xd35
0x5c7: JUMP 0xd35
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V873]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V873, S1]

================================

Block 0x5c8
[0x5c8:0x5e9]
---
Predecessors: [0xd49]
Successors: [0x5ea, 0x5f3]
---
0x5c8 JUMPDEST
0x5c9 SWAP1
0x5ca DUP2
0x5cb ISZERO
0x5cc MUL
0x5cd SWAP1
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 PUSH1 0x0
0x5d3 PUSH1 0x40
0x5d5 MLOAD
0x5d6 DUP1
0x5d7 DUP4
0x5d8 SUB
0x5d9 DUP2
0x5da DUP6
0x5db DUP9
0x5dc DUP9
0x5dd CALL
0x5de SWAP4
0x5df POP
0x5e0 POP
0x5e1 POP
0x5e2 POP
0x5e3 ISZERO
0x5e4 DUP1
0x5e5 ISZERO
0x5e6 PUSH2 0x5f3
0x5e9 JUMPI
---
0x5c8: JUMPDEST 
0x5cb: V393 = ISZERO S0
0x5cc: V394 = MUL V393 S1
0x5ce: V395 = 0x40
0x5d0: V396 = M[0x40]
0x5d1: V397 = 0x0
0x5d3: V398 = 0x40
0x5d5: V399 = M[0x40]
0x5d8: V400 = SUB V396 V399
0x5dd: V401 = CALL V394 S2 S0 V399 V400 V399 0x0
0x5e3: V402 = ISZERO V401
0x5e5: V403 = ISZERO V402
0x5e6: V404 = 0x5f3
0x5e9: JUMPI 0x5f3 V403
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V402]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, V402]

================================

Block 0x5ea
[0x5ea:0x5f2]
---
Predecessors: [0x5c8]
Successors: []
---
0x5ea RETURNDATASIZE
0x5eb PUSH1 0x0
0x5ed DUP1
0x5ee RETURNDATACOPY
0x5ef RETURNDATASIZE
0x5f0 PUSH1 0x0
0x5f2 REVERT
---
0x5ea: V405 = RETURNDATASIZE
0x5eb: V406 = 0x0
0x5ee: RETURNDATACOPY 0x0 0x0 V405
0x5ef: V407 = RETURNDATASIZE
0x5f0: V408 = 0x0
0x5f2: REVERT 0x0 V407
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, V402]
Stack pops: 0
Stack additions: []
Exit stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, V402]

================================

Block 0x5f3
[0x5f3:0x657]
---
Predecessors: [0x5c8]
Successors: [0xd53]
---
0x5f3 JUMPDEST
0x5f4 POP
0x5f5 PUSH32 0x650fdf669e93aa6c8ff3defe2da9c12b64f1548e5e1e54e803f4c1beb6466c8e
0x616 PUSH1 0x6
0x618 PUSH1 0x0
0x61a SWAP1
0x61b SLOAD
0x61c SWAP1
0x61d PUSH2 0x100
0x620 EXP
0x621 SWAP1
0x622 DIV
0x623 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x638 AND
0x639 TIMESTAMP
0x63a PUSH2 0x674
0x63d PUSH1 0x2
0x63f SLOAD
0x640 PUSH2 0x666
0x643 PUSH1 0xb
0x645 PUSH2 0x658
0x648 PUSH1 0xa
0x64a DUP10
0x64b PUSH2 0xd53
0x64e SWAP1
0x64f SWAP2
0x650 SWAP1
0x651 PUSH4 0xffffffff
0x656 AND
0x657 JUMP
---
0x5f3: JUMPDEST 
0x5f5: V409 = 0x650fdf669e93aa6c8ff3defe2da9c12b64f1548e5e1e54e803f4c1beb6466c8e
0x616: V410 = 0x6
0x618: V411 = 0x0
0x61b: V412 = S[0x6]
0x61d: V413 = 0x100
0x620: V414 = EXP 0x100 0x0
0x622: V415 = DIV V412 0x1
0x623: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x638: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x639: V418 = TIMESTAMP
0x63a: V419 = 0x674
0x63d: V420 = 0x2
0x63f: V421 = S[0x2]
0x640: V422 = 0x666
0x643: V423 = 0xb
0x645: V424 = 0x658
0x648: V425 = 0xa
0x64b: V426 = 0xd53
0x651: V427 = 0xffffffff
0x656: V428 = AND 0xffffffff 0xd53
0x657: JUMP 0xd53
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, V402]
Stack pops: 2
Stack additions: [S1, 0x650fdf669e93aa6c8ff3defe2da9c12b64f1548e5e1e54e803f4c1beb6466c8e, V417, V418, 0x674, V421, 0x666, 0xb, 0x658, S1, 0xa]
Exit stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x650fdf669e93aa6c8ff3defe2da9c12b64f1548e5e1e54e803f4c1beb6466c8e, V417, V418, 0x674, V421, 0x666, 0xb, 0x658, S1, 0xa]

================================

Block 0x658
[0x658:0x665]
---
Predecessors: [0xd87]
Successors: [0xd8e]
---
0x658 JUMPDEST
0x659 PUSH2 0xd8e
0x65c SWAP1
0x65d SWAP2
0x65e SWAP1
0x65f PUSH4 0xffffffff
0x664 AND
0x665 JUMP
---
0x658: JUMPDEST 
0x659: V429 = 0xd8e
0x65f: V430 = 0xffffffff
0x664: V431 = AND 0xffffffff 0xd8e
0x665: JUMP 0xd8e
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, S0, {0xb, 0x64}]

================================

Block 0x666
[0x666:0x673]
---
Predecessors: [0xdab]
Successors: [0xd35]
---
0x666 JUMPDEST
0x667 PUSH2 0xd35
0x66a SWAP1
0x66b SWAP2
0x66c SWAP1
0x66d PUSH4 0xffffffff
0x672 AND
0x673 JUMP
---
0x666: JUMPDEST 
0x667: V432 = 0xd35
0x66d: V433 = 0xffffffff
0x672: V434 = AND 0xffffffff 0xd35
0x673: JUMP 0xd35
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V873]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V873, S1]

================================

Block 0x674
[0x674:0x721]
---
Predecessors: [0xd49]
Successors: [0xd53]
---
0x674 JUMPDEST
0x675 PUSH1 0x2
0x677 SLOAD
0x678 PUSH1 0x40
0x67a MLOAD
0x67b DUP1
0x67c DUP6
0x67d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x692 AND
0x693 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a8 AND
0x6a9 DUP2
0x6aa MSTORE
0x6ab PUSH1 0x20
0x6ad ADD
0x6ae DUP5
0x6af DUP2
0x6b0 MSTORE
0x6b1 PUSH1 0x20
0x6b3 ADD
0x6b4 DUP4
0x6b5 DUP2
0x6b6 MSTORE
0x6b7 PUSH1 0x20
0x6b9 ADD
0x6ba DUP3
0x6bb DUP2
0x6bc MSTORE
0x6bd PUSH1 0x20
0x6bf ADD
0x6c0 SWAP5
0x6c1 POP
0x6c2 POP
0x6c3 POP
0x6c4 POP
0x6c5 POP
0x6c6 PUSH1 0x40
0x6c8 MLOAD
0x6c9 DUP1
0x6ca SWAP2
0x6cb SUB
0x6cc SWAP1
0x6cd LOG1
0x6ce PUSH1 0x5
0x6d0 PUSH1 0x0
0x6d2 SWAP1
0x6d3 SLOAD
0x6d4 SWAP1
0x6d5 PUSH2 0x100
0x6d8 EXP
0x6d9 SWAP1
0x6da DIV
0x6db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f0 AND
0x6f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x706 AND
0x707 PUSH2 0x8fc
0x70a PUSH2 0x730
0x70d PUSH1 0xb
0x70f PUSH2 0x722
0x712 PUSH1 0x1
0x714 DUP7
0x715 PUSH2 0xd53
0x718 SWAP1
0x719 SWAP2
0x71a SWAP1
0x71b PUSH4 0xffffffff
0x720 AND
0x721 JUMP
---
0x674: JUMPDEST 
0x675: V435 = 0x2
0x677: V436 = S[0x2]
0x678: V437 = 0x40
0x67a: V438 = M[0x40]
0x67d: V439 = 0xffffffffffffffffffffffffffffffffffffffff
0x692: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x693: V441 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a8: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V440
0x6aa: M[V438] = V442
0x6ab: V443 = 0x20
0x6ad: V444 = ADD 0x20 V438
0x6b0: M[V444] = S1
0x6b1: V445 = 0x20
0x6b3: V446 = ADD 0x20 V444
0x6b6: M[V446] = V841
0x6b7: V447 = 0x20
0x6b9: V448 = ADD 0x20 V446
0x6bc: M[V448] = V436
0x6bd: V449 = 0x20
0x6bf: V450 = ADD 0x20 V448
0x6c6: V451 = 0x40
0x6c8: V452 = M[0x40]
0x6cb: V453 = SUB V450 V452
0x6cd: LOG V452 V453 S3
0x6ce: V454 = 0x5
0x6d0: V455 = 0x0
0x6d3: V456 = S[0x5]
0x6d5: V457 = 0x100
0x6d8: V458 = EXP 0x100 0x0
0x6da: V459 = DIV V456 0x1
0x6db: V460 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f0: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V459
0x6f1: V462 = 0xffffffffffffffffffffffffffffffffffffffff
0x706: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V461
0x707: V464 = 0x8fc
0x70a: V465 = 0x730
0x70d: V466 = 0xb
0x70f: V467 = 0x722
0x712: V468 = 0x1
0x715: V469 = 0xd53
0x71b: V470 = 0xffffffff
0x720: V471 = AND 0xffffffff 0xd53
0x721: JUMP 0xd53
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V841]
Stack pops: 5
Stack additions: [S4, V463, 0x8fc, 0x730, 0xb, 0x722, S4, 0x1]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, V463, 0x8fc, 0x730, 0xb, 0x722, S4, 0x1]

================================

Block 0x722
[0x722:0x72f]
---
Predecessors: [0xd87]
Successors: [0xd8e]
---
0x722 JUMPDEST
0x723 PUSH2 0xd8e
0x726 SWAP1
0x727 SWAP2
0x728 SWAP1
0x729 PUSH4 0xffffffff
0x72e AND
0x72f JUMP
---
0x722: JUMPDEST 
0x723: V472 = 0xd8e
0x729: V473 = 0xffffffff
0x72e: V474 = AND 0xffffffff 0xd8e
0x72f: JUMP 0xd8e
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, S0, {0xb, 0x64}]

================================

Block 0x730
[0x730:0x751]
---
Predecessors: [0xdab]
Successors: [0x752, 0x75b]
---
0x730 JUMPDEST
0x731 SWAP1
0x732 DUP2
0x733 ISZERO
0x734 MUL
0x735 SWAP1
0x736 PUSH1 0x40
0x738 MLOAD
0x739 PUSH1 0x0
0x73b PUSH1 0x40
0x73d MLOAD
0x73e DUP1
0x73f DUP4
0x740 SUB
0x741 DUP2
0x742 DUP6
0x743 DUP9
0x744 DUP9
0x745 CALL
0x746 SWAP4
0x747 POP
0x748 POP
0x749 POP
0x74a POP
0x74b ISZERO
0x74c DUP1
0x74d ISZERO
0x74e PUSH2 0x75b
0x751 JUMPI
---
0x730: JUMPDEST 
0x733: V475 = ISZERO V873
0x734: V476 = MUL V475 S1
0x736: V477 = 0x40
0x738: V478 = M[0x40]
0x739: V479 = 0x0
0x73b: V480 = 0x40
0x73d: V481 = M[0x40]
0x740: V482 = SUB V478 V481
0x745: V483 = CALL V476 S2 V873 V481 V482 V481 0x0
0x74b: V484 = ISZERO V483
0x74d: V485 = ISZERO V484
0x74e: V486 = 0x75b
0x751: JUMPI 0x75b V485
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V873]
Stack pops: 3
Stack additions: [V484]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V484]

================================

Block 0x752
[0x752:0x75a]
---
Predecessors: [0x730]
Successors: []
---
0x752 RETURNDATASIZE
0x753 PUSH1 0x0
0x755 DUP1
0x756 RETURNDATACOPY
0x757 RETURNDATASIZE
0x758 PUSH1 0x0
0x75a REVERT
---
0x752: V487 = RETURNDATASIZE
0x753: V488 = 0x0
0x756: RETURNDATACOPY 0x0 0x0 V487
0x757: V489 = RETURNDATASIZE
0x758: V490 = 0x0
0x75a: REVERT 0x0 V489
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V484]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V484]

================================

Block 0x75b
[0x75b:0x7cc]
---
Predecessors: [0x730]
Successors: [0xd53]
---
0x75b JUMPDEST
0x75c POP
0x75d CALLER
0x75e PUSH1 0x6
0x760 PUSH1 0x0
0x762 PUSH2 0x100
0x765 EXP
0x766 DUP2
0x767 SLOAD
0x768 DUP2
0x769 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77e MUL
0x77f NOT
0x780 AND
0x781 SWAP1
0x782 DUP4
0x783 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x798 AND
0x799 MUL
0x79a OR
0x79b SWAP1
0x79c SSTORE
0x79d POP
0x79e TIMESTAMP
0x79f PUSH1 0x9
0x7a1 DUP2
0x7a2 SWAP1
0x7a3 SSTORE
0x7a4 POP
0x7a5 CALLVALUE
0x7a6 PUSH1 0x2
0x7a8 DUP2
0x7a9 SWAP1
0x7aa SSTORE
0x7ab POP
0x7ac PUSH2 0x7e9
0x7af PUSH1 0x2
0x7b1 SLOAD
0x7b2 PUSH2 0x7db
0x7b5 PUSH1 0x64
0x7b7 PUSH2 0x7cd
0x7ba PUSH1 0x4
0x7bc SLOAD
0x7bd PUSH1 0x2
0x7bf SLOAD
0x7c0 PUSH2 0xd53
0x7c3 SWAP1
0x7c4 SWAP2
0x7c5 SWAP1
0x7c6 PUSH4 0xffffffff
0x7cb AND
0x7cc JUMP
---
0x75b: JUMPDEST 
0x75d: V491 = CALLER
0x75e: V492 = 0x6
0x760: V493 = 0x0
0x762: V494 = 0x100
0x765: V495 = EXP 0x100 0x0
0x767: V496 = S[0x6]
0x769: V497 = 0xffffffffffffffffffffffffffffffffffffffff
0x77e: V498 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x77f: V499 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x780: V500 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V496
0x783: V501 = 0xffffffffffffffffffffffffffffffffffffffff
0x798: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x799: V503 = MUL V502 0x1
0x79a: V504 = OR V503 V500
0x79c: S[0x6] = V504
0x79e: V505 = TIMESTAMP
0x79f: V506 = 0x9
0x7a3: S[0x9] = V505
0x7a5: V507 = CALLVALUE
0x7a6: V508 = 0x2
0x7aa: S[0x2] = V507
0x7ac: V509 = 0x7e9
0x7af: V510 = 0x2
0x7b1: V511 = S[0x2]
0x7b2: V512 = 0x7db
0x7b5: V513 = 0x64
0x7b7: V514 = 0x7cd
0x7ba: V515 = 0x4
0x7bc: V516 = S[0x4]
0x7bd: V517 = 0x2
0x7bf: V518 = S[0x2]
0x7c0: V519 = 0xd53
0x7c6: V520 = 0xffffffff
0x7cb: V521 = AND 0xffffffff 0xd53
0x7cc: JUMP 0xd53
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V484]
Stack pops: 1
Stack additions: [0x7e9, V511, 0x7db, 0x64, 0x7cd, V518, V516]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x7e9, V511, 0x7db, 0x64, 0x7cd, V518, V516]

================================

Block 0x7cd
[0x7cd:0x7da]
---
Predecessors: [0xd87]
Successors: [0xd8e]
---
0x7cd JUMPDEST
0x7ce PUSH2 0xd8e
0x7d1 SWAP1
0x7d2 SWAP2
0x7d3 SWAP1
0x7d4 PUSH4 0xffffffff
0x7d9 AND
0x7da JUMP
---
0x7cd: JUMPDEST 
0x7ce: V522 = 0xd8e
0x7d4: V523 = 0xffffffff
0x7d9: V524 = AND 0xffffffff 0xd8e
0x7da: JUMP 0xd8e
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, S0, {0xb, 0x64}]

================================

Block 0x7db
[0x7db:0x7e8]
---
Predecessors: [0xdab]
Successors: [0xd35]
---
0x7db JUMPDEST
0x7dc PUSH2 0xd35
0x7df SWAP1
0x7e0 SWAP2
0x7e1 SWAP1
0x7e2 PUSH4 0xffffffff
0x7e7 AND
0x7e8 JUMP
---
0x7db: JUMPDEST 
0x7dc: V525 = 0xd35
0x7e2: V526 = 0xffffffff
0x7e7: V527 = AND 0xffffffff 0xd35
0x7e8: JUMP 0xd35
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V873]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V873, S1]

================================

Block 0x7e9
[0x7e9:0x88a]
---
Predecessors: [0xd49]
Successors: [0xe3, 0xf0]
---
0x7e9 JUMPDEST
0x7ea PUSH1 0x3
0x7ec DUP2
0x7ed SWAP1
0x7ee SSTORE
0x7ef POP
0x7f0 PUSH32 0xf41b7910e085d0992d604fd470931728fd77cc8eb504d99e50e51a0a30fcfd1a
0x811 PUSH1 0x6
0x813 PUSH1 0x0
0x815 SWAP1
0x816 SLOAD
0x817 SWAP1
0x818 PUSH2 0x100
0x81b EXP
0x81c SWAP1
0x81d DIV
0x81e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x833 AND
0x834 PUSH1 0x9
0x836 SLOAD
0x837 PUSH1 0x2
0x839 SLOAD
0x83a PUSH1 0x40
0x83c MLOAD
0x83d DUP1
0x83e DUP5
0x83f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x854 AND
0x855 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x86a AND
0x86b DUP2
0x86c MSTORE
0x86d PUSH1 0x20
0x86f ADD
0x870 DUP4
0x871 DUP2
0x872 MSTORE
0x873 PUSH1 0x20
0x875 ADD
0x876 DUP3
0x877 DUP2
0x878 MSTORE
0x879 PUSH1 0x20
0x87b ADD
0x87c SWAP4
0x87d POP
0x87e POP
0x87f POP
0x880 POP
0x881 PUSH1 0x40
0x883 MLOAD
0x884 DUP1
0x885 SWAP2
0x886 SUB
0x887 SWAP1
0x888 LOG1
0x889 POP
0x88a JUMP
---
0x7e9: JUMPDEST 
0x7ea: V528 = 0x3
0x7ee: S[0x3] = S0
0x7f0: V529 = 0xf41b7910e085d0992d604fd470931728fd77cc8eb504d99e50e51a0a30fcfd1a
0x811: V530 = 0x6
0x813: V531 = 0x0
0x816: V532 = S[0x6]
0x818: V533 = 0x100
0x81b: V534 = EXP 0x100 0x0
0x81d: V535 = DIV V532 0x1
0x81e: V536 = 0xffffffffffffffffffffffffffffffffffffffff
0x833: V537 = AND 0xffffffffffffffffffffffffffffffffffffffff V535
0x834: V538 = 0x9
0x836: V539 = S[0x9]
0x837: V540 = 0x2
0x839: V541 = S[0x2]
0x83a: V542 = 0x40
0x83c: V543 = M[0x40]
0x83f: V544 = 0xffffffffffffffffffffffffffffffffffffffff
0x854: V545 = AND 0xffffffffffffffffffffffffffffffffffffffff V537
0x855: V546 = 0xffffffffffffffffffffffffffffffffffffffff
0x86a: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V545
0x86c: M[V543] = V547
0x86d: V548 = 0x20
0x86f: V549 = ADD 0x20 V543
0x872: M[V549] = V539
0x873: V550 = 0x20
0x875: V551 = ADD 0x20 V549
0x878: M[V551] = V541
0x879: V552 = 0x20
0x87b: V553 = ADD 0x20 V551
0x881: V554 = 0x40
0x883: V555 = M[0x40]
0x886: V556 = SUB V553 V555
0x888: LOG V555 V556 0xf41b7910e085d0992d604fd470931728fd77cc8eb504d99e50e51a0a30fcfd1a
0x88a: JUMP S2
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x88b
[0x88b:0x930]
---
Predecessors: [0xe8]
Successors: [0x931, 0x938]
---
0x88b JUMPDEST
0x88c PUSH32 0xfb16972160a5f384470a4019e95223247a51c98da103e8d732674f365c35ea0
0x8ad PUSH1 0x6
0x8af PUSH1 0x0
0x8b1 SWAP1
0x8b2 SLOAD
0x8b3 SWAP1
0x8b4 PUSH2 0x100
0x8b7 EXP
0x8b8 SWAP1
0x8b9 DIV
0x8ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8cf AND
0x8d0 PUSH1 0x9
0x8d2 SLOAD
0x8d3 PUSH1 0x2
0x8d5 SLOAD
0x8d6 PUSH1 0x40
0x8d8 MLOAD
0x8d9 DUP1
0x8da DUP5
0x8db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f0 AND
0x8f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x906 AND
0x907 DUP2
0x908 MSTORE
0x909 PUSH1 0x20
0x90b ADD
0x90c DUP4
0x90d DUP2
0x90e MSTORE
0x90f PUSH1 0x20
0x911 ADD
0x912 DUP3
0x913 DUP2
0x914 MSTORE
0x915 PUSH1 0x20
0x917 ADD
0x918 SWAP4
0x919 POP
0x91a POP
0x91b POP
0x91c POP
0x91d PUSH1 0x40
0x91f MLOAD
0x920 DUP1
0x921 SWAP2
0x922 SUB
0x923 SWAP1
0x924 LOG1
0x925 PUSH1 0x0
0x927 SLOAD
0x928 CALLVALUE
0x929 LT
0x92a ISZERO
0x92b DUP1
0x92c ISZERO
0x92d PUSH2 0x938
0x930 JUMPI
---
0x88b: JUMPDEST 
0x88c: V557 = 0xfb16972160a5f384470a4019e95223247a51c98da103e8d732674f365c35ea0
0x8ad: V558 = 0x6
0x8af: V559 = 0x0
0x8b2: V560 = S[0x6]
0x8b4: V561 = 0x100
0x8b7: V562 = EXP 0x100 0x0
0x8b9: V563 = DIV V560 0x1
0x8ba: V564 = 0xffffffffffffffffffffffffffffffffffffffff
0x8cf: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V563
0x8d0: V566 = 0x9
0x8d2: V567 = S[0x9]
0x8d3: V568 = 0x2
0x8d5: V569 = S[0x2]
0x8d6: V570 = 0x40
0x8d8: V571 = M[0x40]
0x8db: V572 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f0: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x8f1: V574 = 0xffffffffffffffffffffffffffffffffffffffff
0x906: V575 = AND 0xffffffffffffffffffffffffffffffffffffffff V573
0x908: M[V571] = V575
0x909: V576 = 0x20
0x90b: V577 = ADD 0x20 V571
0x90e: M[V577] = V567
0x90f: V578 = 0x20
0x911: V579 = ADD 0x20 V577
0x914: M[V579] = V569
0x915: V580 = 0x20
0x917: V581 = ADD 0x20 V579
0x91d: V582 = 0x40
0x91f: V583 = M[0x40]
0x922: V584 = SUB V581 V583
0x924: LOG V583 V584 0xfb16972160a5f384470a4019e95223247a51c98da103e8d732674f365c35ea0
0x925: V585 = 0x0
0x927: V586 = S[0x0]
0x928: V587 = CALLVALUE
0x929: V588 = LT V587 V586
0x92a: V589 = ISZERO V588
0x92c: V590 = ISZERO V589
0x92d: V591 = 0x938
0x930: JUMPI 0x938 V590
---
Entry stack: [V11, 0xf0]
Stack pops: 0
Stack additions: [V589]
Exit stack: [V11, 0xf0, V589]

================================

Block 0x931
[0x931:0x937]
---
Predecessors: [0x88b]
Successors: [0x938]
---
0x931 POP
0x932 PUSH1 0x1
0x934 SLOAD
0x935 CALLVALUE
0x936 GT
0x937 ISZERO
---
0x932: V592 = 0x1
0x934: V593 = S[0x1]
0x935: V594 = CALLVALUE
0x936: V595 = GT V594 V593
0x937: V596 = ISZERO V595
---
Entry stack: [V11, 0xf0, V589]
Stack pops: 1
Stack additions: [V596]
Exit stack: [V11, 0xf0, V596]

================================

Block 0x938
[0x938:0x93d]
---
Predecessors: [0x88b, 0x931]
Successors: [0x93e, 0xaac]
---
0x938 JUMPDEST
0x939 ISZERO
0x93a PUSH2 0xaac
0x93d JUMPI
---
0x938: JUMPDEST 
0x939: V597 = ISZERO S0
0x93a: V598 = 0xaac
0x93d: JUMPI 0xaac V597
---
Entry stack: [V11, 0xf0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf0]

================================

Block 0x93e
[0x93e:0x9a2]
---
Predecessors: [0x938]
Successors: [0xdb8]
---
0x93e PUSH1 0x6
0x940 PUSH1 0x0
0x942 SWAP1
0x943 SLOAD
0x944 SWAP1
0x945 PUSH2 0x100
0x948 EXP
0x949 SWAP1
0x94a DIV
0x94b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x960 AND
0x961 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x976 AND
0x977 PUSH2 0x8fc
0x97a PUSH2 0x9a3
0x97d CALLVALUE
0x97e ADDRESS
0x97f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x994 AND
0x995 BALANCE
0x996 PUSH2 0xdb8
0x999 SWAP1
0x99a SWAP2
0x99b SWAP1
0x99c PUSH4 0xffffffff
0x9a1 AND
0x9a2 JUMP
---
0x93e: V599 = 0x6
0x940: V600 = 0x0
0x943: V601 = S[0x6]
0x945: V602 = 0x100
0x948: V603 = EXP 0x100 0x0
0x94a: V604 = DIV V601 0x1
0x94b: V605 = 0xffffffffffffffffffffffffffffffffffffffff
0x960: V606 = AND 0xffffffffffffffffffffffffffffffffffffffff V604
0x961: V607 = 0xffffffffffffffffffffffffffffffffffffffff
0x976: V608 = AND 0xffffffffffffffffffffffffffffffffffffffff V606
0x977: V609 = 0x8fc
0x97a: V610 = 0x9a3
0x97d: V611 = CALLVALUE
0x97e: V612 = ADDRESS
0x97f: V613 = 0xffffffffffffffffffffffffffffffffffffffff
0x994: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0x995: V615 = BALANCE V614
0x996: V616 = 0xdb8
0x99c: V617 = 0xffffffff
0x9a1: V618 = AND 0xffffffff 0xdb8
0x9a2: JUMP 0xdb8
---
Entry stack: [V11, 0xf0]
Stack pops: 0
Stack additions: [V608, 0x8fc, 0x9a3, V615, V611]
Exit stack: [V11, 0xf0, V608, 0x8fc, 0x9a3, V615, V611]

================================

Block 0x9a3
[0x9a3:0x9c4]
---
Predecessors: [0xdc6]
Successors: [0x9c5, 0x9ce]
---
0x9a3 JUMPDEST
0x9a4 SWAP1
0x9a5 DUP2
0x9a6 ISZERO
0x9a7 MUL
0x9a8 SWAP1
0x9a9 PUSH1 0x40
0x9ab MLOAD
0x9ac PUSH1 0x0
0x9ae PUSH1 0x40
0x9b0 MLOAD
0x9b1 DUP1
0x9b2 DUP4
0x9b3 SUB
0x9b4 DUP2
0x9b5 DUP6
0x9b6 DUP9
0x9b7 DUP9
0x9b8 CALL
0x9b9 SWAP4
0x9ba POP
0x9bb POP
0x9bc POP
0x9bd POP
0x9be ISZERO
0x9bf DUP1
0x9c0 ISZERO
0x9c1 PUSH2 0x9ce
0x9c4 JUMPI
---
0x9a3: JUMPDEST 
0x9a6: V619 = ISZERO V880
0x9a7: V620 = MUL V619 S1
0x9a9: V621 = 0x40
0x9ab: V622 = M[0x40]
0x9ac: V623 = 0x0
0x9ae: V624 = 0x40
0x9b0: V625 = M[0x40]
0x9b3: V626 = SUB V622 V625
0x9b8: V627 = CALL V620 S2 V880 V625 V626 V625 0x0
0x9be: V628 = ISZERO V627
0x9c0: V629 = ISZERO V628
0x9c1: V630 = 0x9ce
0x9c4: JUMPI 0x9ce V629
---
Entry stack: [V11, S4, S3, S2, S1, V880]
Stack pops: 3
Stack additions: [V628]
Exit stack: [V11, S4, S3, V628]

================================

Block 0x9c5
[0x9c5:0x9cd]
---
Predecessors: [0x9a3]
Successors: []
---
0x9c5 RETURNDATASIZE
0x9c6 PUSH1 0x0
0x9c8 DUP1
0x9c9 RETURNDATACOPY
0x9ca RETURNDATASIZE
0x9cb PUSH1 0x0
0x9cd REVERT
---
0x9c5: V631 = RETURNDATASIZE
0x9c6: V632 = 0x0
0x9c9: RETURNDATACOPY 0x0 0x0 V631
0x9ca: V633 = RETURNDATASIZE
0x9cb: V634 = 0x0
0x9cd: REVERT 0x0 V633
---
Entry stack: [V11, S2, S1, V628]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, S1, V628]

================================

Block 0x9ce
[0x9ce:0xa3d]
---
Predecessors: [0x9a3]
Successors: [0xdb8]
---
0x9ce JUMPDEST
0x9cf POP
0x9d0 PUSH32 0x650fdf669e93aa6c8ff3defe2da9c12b64f1548e5e1e54e803f4c1beb6466c8e
0x9f1 PUSH1 0x6
0x9f3 PUSH1 0x0
0x9f5 SWAP1
0x9f6 SLOAD
0x9f7 SWAP1
0x9f8 PUSH2 0x100
0x9fb EXP
0x9fc SWAP1
0x9fd DIV
0x9fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa13 AND
0xa14 TIMESTAMP
0xa15 PUSH2 0xa3e
0xa18 CALLVALUE
0xa19 ADDRESS
0xa1a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2f AND
0xa30 BALANCE
0xa31 PUSH2 0xdb8
0xa34 SWAP1
0xa35 SWAP2
0xa36 SWAP1
0xa37 PUSH4 0xffffffff
0xa3c AND
0xa3d JUMP
---
0x9ce: JUMPDEST 
0x9d0: V635 = 0x650fdf669e93aa6c8ff3defe2da9c12b64f1548e5e1e54e803f4c1beb6466c8e
0x9f1: V636 = 0x6
0x9f3: V637 = 0x0
0x9f6: V638 = S[0x6]
0x9f8: V639 = 0x100
0x9fb: V640 = EXP 0x100 0x0
0x9fd: V641 = DIV V638 0x1
0x9fe: V642 = 0xffffffffffffffffffffffffffffffffffffffff
0xa13: V643 = AND 0xffffffffffffffffffffffffffffffffffffffff V641
0xa14: V644 = TIMESTAMP
0xa15: V645 = 0xa3e
0xa18: V646 = CALLVALUE
0xa19: V647 = ADDRESS
0xa1a: V648 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2f: V649 = AND 0xffffffffffffffffffffffffffffffffffffffff V647
0xa30: V650 = BALANCE V649
0xa31: V651 = 0xdb8
0xa37: V652 = 0xffffffff
0xa3c: V653 = AND 0xffffffff 0xdb8
0xa3d: JUMP 0xdb8
---
Entry stack: [V11, S2, S1, V628]
Stack pops: 1
Stack additions: [0x650fdf669e93aa6c8ff3defe2da9c12b64f1548e5e1e54e803f4c1beb6466c8e, V643, V644, 0xa3e, V650, V646]
Exit stack: [V11, S2, S1, 0x650fdf669e93aa6c8ff3defe2da9c12b64f1548e5e1e54e803f4c1beb6466c8e, V643, V644, 0xa3e, V650, V646]

================================

Block 0xa3e
[0xa3e:0xaa6]
---
Predecessors: [0xdc6]
Successors: [0x2d2]
---
0xa3e JUMPDEST
0xa3f PUSH1 0x2
0xa41 SLOAD
0xa42 PUSH1 0x40
0xa44 MLOAD
0xa45 DUP1
0xa46 DUP6
0xa47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa5c AND
0xa5d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa72 AND
0xa73 DUP2
0xa74 MSTORE
0xa75 PUSH1 0x20
0xa77 ADD
0xa78 DUP5
0xa79 DUP2
0xa7a MSTORE
0xa7b PUSH1 0x20
0xa7d ADD
0xa7e DUP4
0xa7f DUP2
0xa80 MSTORE
0xa81 PUSH1 0x20
0xa83 ADD
0xa84 DUP3
0xa85 DUP2
0xa86 MSTORE
0xa87 PUSH1 0x20
0xa89 ADD
0xa8a SWAP5
0xa8b POP
0xa8c POP
0xa8d POP
0xa8e POP
0xa8f POP
0xa90 PUSH1 0x40
0xa92 MLOAD
0xa93 DUP1
0xa94 SWAP2
0xa95 SUB
0xa96 SWAP1
0xa97 LOG1
0xa98 PUSH1 0x0
0xa9a PUSH1 0x7
0xa9c DUP2
0xa9d SWAP1
0xa9e SSTORE
0xa9f POP
0xaa0 PUSH2 0xaa7
0xaa3 PUSH2 0x2d2
0xaa6 JUMP
---
0xa3e: JUMPDEST 
0xa3f: V654 = 0x2
0xa41: V655 = S[0x2]
0xa42: V656 = 0x40
0xa44: V657 = M[0x40]
0xa47: V658 = 0xffffffffffffffffffffffffffffffffffffffff
0xa5c: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa5d: V660 = 0xffffffffffffffffffffffffffffffffffffffff
0xa72: V661 = AND 0xffffffffffffffffffffffffffffffffffffffff V659
0xa74: M[V657] = V661
0xa75: V662 = 0x20
0xa77: V663 = ADD 0x20 V657
0xa7a: M[V663] = S1
0xa7b: V664 = 0x20
0xa7d: V665 = ADD 0x20 V663
0xa80: M[V665] = V880
0xa81: V666 = 0x20
0xa83: V667 = ADD 0x20 V665
0xa86: M[V667] = V655
0xa87: V668 = 0x20
0xa89: V669 = ADD 0x20 V667
0xa90: V670 = 0x40
0xa92: V671 = M[0x40]
0xa95: V672 = SUB V669 V671
0xa97: LOG V671 V672 S3
0xa98: V673 = 0x0
0xa9a: V674 = 0x7
0xa9e: S[0x7] = 0x0
0xaa0: V675 = 0xaa7
0xaa3: V676 = 0x2d2
0xaa6: JUMP 0x2d2
---
Entry stack: [V11, S4, S3, S2, S1, V880]
Stack pops: 4
Stack additions: [0xaa7]
Exit stack: [V11, S4, 0xaa7]

================================

Block 0xaa7
[0xaa7:0xaab]
---
Predecessors: [0x402]
Successors: [0xcca]
---
0xaa7 JUMPDEST
0xaa8 PUSH2 0xcca
0xaab JUMP
---
0xaa7: JUMPDEST 
0xaa8: V677 = 0xcca
0xaab: JUMP 0xcca
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaac
[0xaac:0xae8]
---
Predecessors: [0x938]
Successors: [0xae9, 0xaf2]
---
0xaac JUMPDEST
0xaad CALLER
0xaae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac3 AND
0xac4 PUSH2 0x8fc
0xac7 CALLVALUE
0xac8 SWAP1
0xac9 DUP2
0xaca ISZERO
0xacb MUL
0xacc SWAP1
0xacd PUSH1 0x40
0xacf MLOAD
0xad0 PUSH1 0x0
0xad2 PUSH1 0x40
0xad4 MLOAD
0xad5 DUP1
0xad6 DUP4
0xad7 SUB
0xad8 DUP2
0xad9 DUP6
0xada DUP9
0xadb DUP9
0xadc CALL
0xadd SWAP4
0xade POP
0xadf POP
0xae0 POP
0xae1 POP
0xae2 ISZERO
0xae3 DUP1
0xae4 ISZERO
0xae5 PUSH2 0xaf2
0xae8 JUMPI
---
0xaac: JUMPDEST 
0xaad: V678 = CALLER
0xaae: V679 = 0xffffffffffffffffffffffffffffffffffffffff
0xac3: V680 = AND 0xffffffffffffffffffffffffffffffffffffffff V678
0xac4: V681 = 0x8fc
0xac7: V682 = CALLVALUE
0xaca: V683 = ISZERO V682
0xacb: V684 = MUL V683 0x8fc
0xacd: V685 = 0x40
0xacf: V686 = M[0x40]
0xad0: V687 = 0x0
0xad2: V688 = 0x40
0xad4: V689 = M[0x40]
0xad7: V690 = SUB V686 V689
0xadc: V691 = CALL V684 V680 V682 V689 V690 V689 0x0
0xae2: V692 = ISZERO V691
0xae4: V693 = ISZERO V692
0xae5: V694 = 0xaf2
0xae8: JUMPI 0xaf2 V693
---
Entry stack: [V11, 0xf0]
Stack pops: 0
Stack additions: [V692]
Exit stack: [V11, 0xf0, V692]

================================

Block 0xae9
[0xae9:0xaf1]
---
Predecessors: [0xaac]
Successors: []
---
0xae9 RETURNDATASIZE
0xaea PUSH1 0x0
0xaec DUP1
0xaed RETURNDATACOPY
0xaee RETURNDATASIZE
0xaef PUSH1 0x0
0xaf1 REVERT
---
0xae9: V695 = RETURNDATASIZE
0xaea: V696 = 0x0
0xaed: RETURNDATACOPY 0x0 0x0 V695
0xaee: V697 = RETURNDATASIZE
0xaef: V698 = 0x0
0xaf1: REVERT 0x0 V697
---
Entry stack: [V11, 0xf0, V692]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf0, V692]

================================

Block 0xaf2
[0xaf2:0xb68]
---
Predecessors: [0xaac]
Successors: [0xb69, 0xb72]
---
0xaf2 JUMPDEST
0xaf3 POP
0xaf4 PUSH1 0x6
0xaf6 PUSH1 0x0
0xaf8 SWAP1
0xaf9 SLOAD
0xafa SWAP1
0xafb PUSH2 0x100
0xafe EXP
0xaff SWAP1
0xb00 DIV
0xb01 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb16 AND
0xb17 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2c AND
0xb2d PUSH2 0x8fc
0xb30 ADDRESS
0xb31 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb46 AND
0xb47 BALANCE
0xb48 SWAP1
0xb49 DUP2
0xb4a ISZERO
0xb4b MUL
0xb4c SWAP1
0xb4d PUSH1 0x40
0xb4f MLOAD
0xb50 PUSH1 0x0
0xb52 PUSH1 0x40
0xb54 MLOAD
0xb55 DUP1
0xb56 DUP4
0xb57 SUB
0xb58 DUP2
0xb59 DUP6
0xb5a DUP9
0xb5b DUP9
0xb5c CALL
0xb5d SWAP4
0xb5e POP
0xb5f POP
0xb60 POP
0xb61 POP
0xb62 ISZERO
0xb63 DUP1
0xb64 ISZERO
0xb65 PUSH2 0xb72
0xb68 JUMPI
---
0xaf2: JUMPDEST 
0xaf4: V699 = 0x6
0xaf6: V700 = 0x0
0xaf9: V701 = S[0x6]
0xafb: V702 = 0x100
0xafe: V703 = EXP 0x100 0x0
0xb00: V704 = DIV V701 0x1
0xb01: V705 = 0xffffffffffffffffffffffffffffffffffffffff
0xb16: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0xb17: V707 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2c: V708 = AND 0xffffffffffffffffffffffffffffffffffffffff V706
0xb2d: V709 = 0x8fc
0xb30: V710 = ADDRESS
0xb31: V711 = 0xffffffffffffffffffffffffffffffffffffffff
0xb46: V712 = AND 0xffffffffffffffffffffffffffffffffffffffff V710
0xb47: V713 = BALANCE V712
0xb4a: V714 = ISZERO V713
0xb4b: V715 = MUL V714 0x8fc
0xb4d: V716 = 0x40
0xb4f: V717 = M[0x40]
0xb50: V718 = 0x0
0xb52: V719 = 0x40
0xb54: V720 = M[0x40]
0xb57: V721 = SUB V717 V720
0xb5c: V722 = CALL V715 V708 V713 V720 V721 V720 0x0
0xb62: V723 = ISZERO V722
0xb64: V724 = ISZERO V723
0xb65: V725 = 0xb72
0xb68: JUMPI 0xb72 V724
---
Entry stack: [V11, 0xf0, V692]
Stack pops: 1
Stack additions: [V723]
Exit stack: [V11, 0xf0, V723]

================================

Block 0xb69
[0xb69:0xb71]
---
Predecessors: [0xaf2]
Successors: []
---
0xb69 RETURNDATASIZE
0xb6a PUSH1 0x0
0xb6c DUP1
0xb6d RETURNDATACOPY
0xb6e RETURNDATASIZE
0xb6f PUSH1 0x0
0xb71 REVERT
---
0xb69: V726 = RETURNDATASIZE
0xb6a: V727 = 0x0
0xb6d: RETURNDATACOPY 0x0 0x0 V726
0xb6e: V728 = RETURNDATASIZE
0xb6f: V729 = 0x0
0xb71: REVERT 0x0 V728
---
Entry stack: [V11, 0xf0, V723]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf0, V723]

================================

Block 0xb72
[0xb72:0xcc9]
---
Predecessors: [0xaf2]
Successors: [0xcca]
---
0xb72 JUMPDEST
0xb73 POP
0xb74 PUSH32 0x650fdf669e93aa6c8ff3defe2da9c12b64f1548e5e1e54e803f4c1beb6466c8e
0xb95 PUSH1 0x6
0xb97 PUSH1 0x0
0xb99 SWAP1
0xb9a SLOAD
0xb9b SWAP1
0xb9c PUSH2 0x100
0xb9f EXP
0xba0 SWAP1
0xba1 DIV
0xba2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb7 AND
0xbb8 TIMESTAMP
0xbb9 ADDRESS
0xbba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbcf AND
0xbd0 BALANCE
0xbd1 PUSH1 0x2
0xbd3 SLOAD
0xbd4 PUSH1 0x40
0xbd6 MLOAD
0xbd7 DUP1
0xbd8 DUP6
0xbd9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbee AND
0xbef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc04 AND
0xc05 DUP2
0xc06 MSTORE
0xc07 PUSH1 0x20
0xc09 ADD
0xc0a DUP5
0xc0b DUP2
0xc0c MSTORE
0xc0d PUSH1 0x20
0xc0f ADD
0xc10 DUP4
0xc11 DUP2
0xc12 MSTORE
0xc13 PUSH1 0x20
0xc15 ADD
0xc16 DUP3
0xc17 DUP2
0xc18 MSTORE
0xc19 PUSH1 0x20
0xc1b ADD
0xc1c SWAP5
0xc1d POP
0xc1e POP
0xc1f POP
0xc20 POP
0xc21 POP
0xc22 PUSH1 0x40
0xc24 MLOAD
0xc25 DUP1
0xc26 SWAP2
0xc27 SUB
0xc28 SWAP1
0xc29 LOG1
0xc2a PUSH1 0x0
0xc2c PUSH1 0x7
0xc2e DUP2
0xc2f SWAP1
0xc30 SSTORE
0xc31 POP
0xc32 PUSH1 0x5
0xc34 PUSH1 0x0
0xc36 SWAP1
0xc37 SLOAD
0xc38 SWAP1
0xc39 PUSH2 0x100
0xc3c EXP
0xc3d SWAP1
0xc3e DIV
0xc3f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc54 AND
0xc55 PUSH1 0x6
0xc57 PUSH1 0x0
0xc59 PUSH2 0x100
0xc5c EXP
0xc5d DUP2
0xc5e SLOAD
0xc5f DUP2
0xc60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc75 MUL
0xc76 NOT
0xc77 AND
0xc78 SWAP1
0xc79 DUP4
0xc7a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc8f AND
0xc90 MUL
0xc91 OR
0xc92 SWAP1
0xc93 SSTORE
0xc94 POP
0xc95 PUSH1 0x0
0xc97 SLOAD
0xc98 PUSH1 0x2
0xc9a DUP2
0xc9b SWAP1
0xc9c SSTORE
0xc9d POP
0xc9e PUSH1 0x2
0xca0 SLOAD
0xca1 PUSH1 0x3
0xca3 DUP2
0xca4 SWAP1
0xca5 SSTORE
0xca6 POP
0xca7 PUSH1 0x0
0xca9 PUSH1 0x9
0xcab DUP2
0xcac SWAP1
0xcad SSTORE
0xcae POP
0xcaf PUSH1 0x1
0xcb1 PUSH1 0x8
0xcb3 PUSH1 0x0
0xcb5 PUSH2 0x100
0xcb8 EXP
0xcb9 DUP2
0xcba SLOAD
0xcbb DUP2
0xcbc PUSH1 0xff
0xcbe MUL
0xcbf NOT
0xcc0 AND
0xcc1 SWAP1
0xcc2 DUP4
0xcc3 ISZERO
0xcc4 ISZERO
0xcc5 MUL
0xcc6 OR
0xcc7 SWAP1
0xcc8 SSTORE
0xcc9 POP
---
0xb72: JUMPDEST 
0xb74: V730 = 0x650fdf669e93aa6c8ff3defe2da9c12b64f1548e5e1e54e803f4c1beb6466c8e
0xb95: V731 = 0x6
0xb97: V732 = 0x0
0xb9a: V733 = S[0x6]
0xb9c: V734 = 0x100
0xb9f: V735 = EXP 0x100 0x0
0xba1: V736 = DIV V733 0x1
0xba2: V737 = 0xffffffffffffffffffffffffffffffffffffffff
0xbb7: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0xbb8: V739 = TIMESTAMP
0xbb9: V740 = ADDRESS
0xbba: V741 = 0xffffffffffffffffffffffffffffffffffffffff
0xbcf: V742 = AND 0xffffffffffffffffffffffffffffffffffffffff V740
0xbd0: V743 = BALANCE V742
0xbd1: V744 = 0x2
0xbd3: V745 = S[0x2]
0xbd4: V746 = 0x40
0xbd6: V747 = M[0x40]
0xbd9: V748 = 0xffffffffffffffffffffffffffffffffffffffff
0xbee: V749 = AND 0xffffffffffffffffffffffffffffffffffffffff V738
0xbef: V750 = 0xffffffffffffffffffffffffffffffffffffffff
0xc04: V751 = AND 0xffffffffffffffffffffffffffffffffffffffff V749
0xc06: M[V747] = V751
0xc07: V752 = 0x20
0xc09: V753 = ADD 0x20 V747
0xc0c: M[V753] = V739
0xc0d: V754 = 0x20
0xc0f: V755 = ADD 0x20 V753
0xc12: M[V755] = V743
0xc13: V756 = 0x20
0xc15: V757 = ADD 0x20 V755
0xc18: M[V757] = V745
0xc19: V758 = 0x20
0xc1b: V759 = ADD 0x20 V757
0xc22: V760 = 0x40
0xc24: V761 = M[0x40]
0xc27: V762 = SUB V759 V761
0xc29: LOG V761 V762 0x650fdf669e93aa6c8ff3defe2da9c12b64f1548e5e1e54e803f4c1beb6466c8e
0xc2a: V763 = 0x0
0xc2c: V764 = 0x7
0xc30: S[0x7] = 0x0
0xc32: V765 = 0x5
0xc34: V766 = 0x0
0xc37: V767 = S[0x5]
0xc39: V768 = 0x100
0xc3c: V769 = EXP 0x100 0x0
0xc3e: V770 = DIV V767 0x1
0xc3f: V771 = 0xffffffffffffffffffffffffffffffffffffffff
0xc54: V772 = AND 0xffffffffffffffffffffffffffffffffffffffff V770
0xc55: V773 = 0x6
0xc57: V774 = 0x0
0xc59: V775 = 0x100
0xc5c: V776 = EXP 0x100 0x0
0xc5e: V777 = S[0x6]
0xc60: V778 = 0xffffffffffffffffffffffffffffffffffffffff
0xc75: V779 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xc76: V780 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc77: V781 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V777
0xc7a: V782 = 0xffffffffffffffffffffffffffffffffffffffff
0xc8f: V783 = AND 0xffffffffffffffffffffffffffffffffffffffff V772
0xc90: V784 = MUL V783 0x1
0xc91: V785 = OR V784 V781
0xc93: S[0x6] = V785
0xc95: V786 = 0x0
0xc97: V787 = S[0x0]
0xc98: V788 = 0x2
0xc9c: S[0x2] = V787
0xc9e: V789 = 0x2
0xca0: V790 = S[0x2]
0xca1: V791 = 0x3
0xca5: S[0x3] = V790
0xca7: V792 = 0x0
0xca9: V793 = 0x9
0xcad: S[0x9] = 0x0
0xcaf: V794 = 0x1
0xcb1: V795 = 0x8
0xcb3: V796 = 0x0
0xcb5: V797 = 0x100
0xcb8: V798 = EXP 0x100 0x0
0xcba: V799 = S[0x8]
0xcbc: V800 = 0xff
0xcbe: V801 = MUL 0xff 0x1
0xcbf: V802 = NOT 0xff
0xcc0: V803 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V799
0xcc3: V804 = ISZERO 0x1
0xcc4: V805 = ISZERO 0x0
0xcc5: V806 = MUL 0x1 0x1
0xcc6: V807 = OR 0x1 V803
0xcc8: S[0x8] = V807
---
Entry stack: [V11, 0xf0, V723]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf0]

================================

Block 0xcca
[0xcca:0xccb]
---
Predecessors: [0xaa7, 0xb72]
Successors: [0xf0]
---
0xcca JUMPDEST
0xccb JUMP
---
0xcca: JUMPDEST 
0xccb: JUMP 0xf0
---
Entry stack: [V11, 0xf0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xccc
[0xccc:0xcd1]
---
Predecessors: [0x100]
Successors: [0x109]
---
0xccc JUMPDEST
0xccd PUSH1 0x2
0xccf SLOAD
0xcd0 DUP2
0xcd1 JUMP
---
0xccc: JUMPDEST 
0xccd: V808 = 0x2
0xccf: V809 = S[0x2]
0xcd1: JUMP 0x109
---
Entry stack: [V11, 0x109]
Stack pops: 1
Stack additions: [S0, V809]
Exit stack: [V11, 0x109, V809]

================================

Block 0xcd2
[0xcd2:0xcd7]
---
Predecessors: [0x12b]
Successors: [0x134]
---
0xcd2 JUMPDEST
0xcd3 PUSH1 0x9
0xcd5 SLOAD
0xcd6 DUP2
0xcd7 JUMP
---
0xcd2: JUMPDEST 
0xcd3: V810 = 0x9
0xcd5: V811 = S[0x9]
0xcd7: JUMP 0x134
---
Entry stack: [V11, 0x134]
Stack pops: 1
Stack additions: [S0, V811]
Exit stack: [V11, 0x134, V811]

================================

Block 0xcd8
[0xcd8:0xcdd]
---
Predecessors: [0x156]
Successors: [0x15f]
---
0xcd8 JUMPDEST
0xcd9 PUSH1 0x3
0xcdb SLOAD
0xcdc DUP2
0xcdd JUMP
---
0xcd8: JUMPDEST 
0xcd9: V812 = 0x3
0xcdb: V813 = S[0x3]
0xcdd: JUMP 0x15f
---
Entry stack: [V11, 0x15f]
Stack pops: 1
Stack additions: [S0, V813]
Exit stack: [V11, 0x15f, V813]

================================

Block 0xcde
[0xcde:0xce3]
---
Predecessors: [0x181]
Successors: [0x18a]
---
0xcde JUMPDEST
0xcdf PUSH1 0x4
0xce1 SLOAD
0xce2 DUP2
0xce3 JUMP
---
0xcde: JUMPDEST 
0xcdf: V814 = 0x4
0xce1: V815 = S[0x4]
0xce3: JUMP 0x18a
---
Entry stack: [V11, 0x18a]
Stack pops: 1
Stack additions: [S0, V815]
Exit stack: [V11, 0x18a, V815]

================================

Block 0xce4
[0xce4:0xcf6]
---
Predecessors: [0x1ac]
Successors: [0x1b5]
---
0xce4 JUMPDEST
0xce5 PUSH1 0x8
0xce7 PUSH1 0x0
0xce9 SWAP1
0xcea SLOAD
0xceb SWAP1
0xcec PUSH2 0x100
0xcef EXP
0xcf0 SWAP1
0xcf1 DIV
0xcf2 PUSH1 0xff
0xcf4 AND
0xcf5 DUP2
0xcf6 JUMP
---
0xce4: JUMPDEST 
0xce5: V816 = 0x8
0xce7: V817 = 0x0
0xcea: V818 = S[0x8]
0xcec: V819 = 0x100
0xcef: V820 = EXP 0x100 0x0
0xcf1: V821 = DIV V818 0x1
0xcf2: V822 = 0xff
0xcf4: V823 = AND 0xff V821
0xcf6: JUMP 0x1b5
---
Entry stack: [V11, 0x1b5]
Stack pops: 1
Stack additions: [S0, V823]
Exit stack: [V11, 0x1b5, V823]

================================

Block 0xcf7
[0xcf7:0xcfc]
---
Predecessors: [0x1db]
Successors: [0x1e4]
---
0xcf7 JUMPDEST
0xcf8 PUSH1 0x7
0xcfa SLOAD
0xcfb DUP2
0xcfc JUMP
---
0xcf7: JUMPDEST 
0xcf8: V824 = 0x7
0xcfa: V825 = S[0x7]
0xcfc: JUMP 0x1e4
---
Entry stack: [V11, 0x1e4]
Stack pops: 1
Stack additions: [S0, V825]
Exit stack: [V11, 0x1e4, V825]

================================

Block 0xcfd
[0xcfd:0xd22]
---
Predecessors: [0x206]
Successors: [0x20f]
---
0xcfd JUMPDEST
0xcfe PUSH1 0x6
0xd00 PUSH1 0x0
0xd02 SWAP1
0xd03 SLOAD
0xd04 SWAP1
0xd05 PUSH2 0x100
0xd08 EXP
0xd09 SWAP1
0xd0a DIV
0xd0b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd20 AND
0xd21 DUP2
0xd22 JUMP
---
0xcfd: JUMPDEST 
0xcfe: V826 = 0x6
0xd00: V827 = 0x0
0xd03: V828 = S[0x6]
0xd05: V829 = 0x100
0xd08: V830 = EXP 0x100 0x0
0xd0a: V831 = DIV V828 0x1
0xd0b: V832 = 0xffffffffffffffffffffffffffffffffffffffff
0xd20: V833 = AND 0xffffffffffffffffffffffffffffffffffffffff V831
0xd22: JUMP 0x20f
---
Entry stack: [V11, 0x20f]
Stack pops: 1
Stack additions: [S0, V833]
Exit stack: [V11, 0x20f, V833]

================================

Block 0xd23
[0xd23:0xd28]
---
Predecessors: [0x25d]
Successors: [0x266]
---
0xd23 JUMPDEST
0xd24 PUSH1 0x0
0xd26 SLOAD
0xd27 DUP2
0xd28 JUMP
---
0xd23: JUMPDEST 
0xd24: V834 = 0x0
0xd26: V835 = S[0x0]
0xd28: JUMP 0x266
---
Entry stack: [V11, 0x266]
Stack pops: 1
Stack additions: [S0, V835]
Exit stack: [V11, 0x266, V835]

================================

Block 0xd29
[0xd29:0xd2e]
---
Predecessors: [0x288]
Successors: [0x291]
---
0xd29 JUMPDEST
0xd2a PUSH1 0xa
0xd2c SLOAD
0xd2d DUP2
0xd2e JUMP
---
0xd29: JUMPDEST 
0xd2a: V836 = 0xa
0xd2c: V837 = S[0xa]
0xd2e: JUMP 0x291
---
Entry stack: [V11, 0x291]
Stack pops: 1
Stack additions: [S0, V837]
Exit stack: [V11, 0x291, V837]

================================

Block 0xd2f
[0xd2f:0xd34]
---
Predecessors: [0x2b3]
Successors: [0x2bc]
---
0xd2f JUMPDEST
0xd30 PUSH1 0x1
0xd32 SLOAD
0xd33 DUP2
0xd34 JUMP
---
0xd2f: JUMPDEST 
0xd30: V838 = 0x1
0xd32: V839 = S[0x1]
0xd34: JUMP 0x2bc
---
Entry stack: [V11, 0x2bc]
Stack pops: 1
Stack additions: [S0, V839]
Exit stack: [V11, 0x2bc, V839]

================================

Block 0xd35
[0xd35:0xd47]
---
Predecessors: [0x35a, 0x3f4, 0x5ba, 0x666, 0x7db]
Successors: [0xd48, 0xd49]
---
0xd35 JUMPDEST
0xd36 PUSH1 0x0
0xd38 DUP1
0xd39 DUP3
0xd3a DUP5
0xd3b ADD
0xd3c SWAP1
0xd3d POP
0xd3e DUP4
0xd3f DUP2
0xd40 LT
0xd41 ISZERO
0xd42 ISZERO
0xd43 ISZERO
0xd44 PUSH2 0xd49
0xd47 JUMPI
---
0xd35: JUMPDEST 
0xd36: V840 = 0x0
0xd3b: V841 = ADD S1 S0
0xd40: V842 = LT V841 S1
0xd41: V843 = ISZERO V842
0xd42: V844 = ISZERO V843
0xd43: V845 = ISZERO V844
0xd44: V846 = 0xd49
0xd47: JUMPI 0xd49 V845
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V841]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V841]

================================

Block 0xd48
[0xd48:0xd48]
---
Predecessors: [0xd35]
Successors: []
---
0xd48 INVALID
---
0xd48: INVALID 
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V841]
Stack pops: 0
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V841]

================================

Block 0xd49
[0xd49:0xd52]
---
Predecessors: [0xd35]
Successors: [0x36f, 0x402, 0x5c8, 0x674, 0x7e9]
---
0xd49 JUMPDEST
0xd4a DUP1
0xd4b SWAP2
0xd4c POP
0xd4d POP
0xd4e SWAP3
0xd4f SWAP2
0xd50 POP
0xd51 POP
0xd52 JUMP
---
0xd49: JUMPDEST 
0xd52: JUMP S4
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V841]
Stack pops: 5
Stack additions: [S0]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V841]

================================

Block 0xd53
[0xd53:0xd5f]
---
Predecessors: [0x36f, 0x54f, 0x5f3, 0x674, 0x75b]
Successors: [0xd60, 0xd68]
---
0xd53 JUMPDEST
0xd54 PUSH1 0x0
0xd56 DUP1
0xd57 PUSH1 0x0
0xd59 DUP5
0xd5a EQ
0xd5b ISZERO
0xd5c PUSH2 0xd68
0xd5f JUMPI
---
0xd53: JUMPDEST 
0xd54: V847 = 0x0
0xd57: V848 = 0x0
0xd5a: V849 = EQ S1 0x0
0xd5b: V850 = ISZERO V849
0xd5c: V851 = 0xd68
0xd5f: JUMPI 0xd68 V850
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, {0x3e6, 0x5ac, 0x658, 0x722, 0x7cd}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, {0x3e6, 0x5ac, 0x658, 0x722, 0x7cd}, S1, S0, 0x0, 0x0]

================================

Block 0xd60
[0xd60:0xd67]
---
Predecessors: [0xd53]
Successors: [0xd87]
---
0xd60 PUSH1 0x0
0xd62 SWAP2
0xd63 POP
0xd64 PUSH2 0xd87
0xd67 JUMP
---
0xd60: V852 = 0x0
0xd64: V853 = 0xd87
0xd67: JUMP 0xd87
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, {0x3e6, 0x5ac, 0x658, 0x722, 0x7cd}, S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, {0x3e6, 0x5ac, 0x658, 0x722, 0x7cd}, S3, S2, 0x0, 0x0]

================================

Block 0xd68
[0xd68:0xd77]
---
Predecessors: [0xd53]
Successors: [0xd78, 0xd79]
---
0xd68 JUMPDEST
0xd69 DUP3
0xd6a DUP5
0xd6b MUL
0xd6c SWAP1
0xd6d POP
0xd6e DUP3
0xd6f DUP5
0xd70 DUP3
0xd71 DUP2
0xd72 ISZERO
0xd73 ISZERO
0xd74 PUSH2 0xd79
0xd77 JUMPI
---
0xd68: JUMPDEST 
0xd6b: V854 = MUL S3 S2
0xd72: V855 = ISZERO S3
0xd73: V856 = ISZERO V855
0xd74: V857 = 0xd79
0xd77: JUMPI 0xd79 V856
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, {0x3e6, 0x5ac, 0x658, 0x722, 0x7cd}, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V854, S2, S3, V854]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, {0x3e6, 0x5ac, 0x658, 0x722, 0x7cd}, S3, S2, 0x0, V854, S2, S3, V854]

================================

Block 0xd78
[0xd78:0xd78]
---
Predecessors: [0xd68]
Successors: []
---
0xd78 INVALID
---
0xd78: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, {0x3e6, 0x5ac, 0x658, 0x722, 0x7cd}, S6, S5, 0x0, V854, S2, S1, V854]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, {0x3e6, 0x5ac, 0x658, 0x722, 0x7cd}, S6, S5, 0x0, V854, S2, S1, V854]

================================

Block 0xd79
[0xd79:0xd81]
---
Predecessors: [0xd68]
Successors: [0xd82, 0xd83]
---
0xd79 JUMPDEST
0xd7a DIV
0xd7b EQ
0xd7c ISZERO
0xd7d ISZERO
0xd7e PUSH2 0xd83
0xd81 JUMPI
---
0xd79: JUMPDEST 
0xd7a: V858 = DIV V854 S1
0xd7b: V859 = EQ V858 S2
0xd7c: V860 = ISZERO V859
0xd7d: V861 = ISZERO V860
0xd7e: V862 = 0xd83
0xd81: JUMPI 0xd83 V861
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, {0x3e6, 0x5ac, 0x658, 0x722, 0x7cd}, S6, S5, 0x0, V854, S2, S1, V854]
Stack pops: 3
Stack additions: []
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, {0x3e6, 0x5ac, 0x658, 0x722, 0x7cd}, S6, S5, 0x0, V854]

================================

Block 0xd82
[0xd82:0xd82]
---
Predecessors: [0xd79]
Successors: []
---
0xd82 INVALID
---
0xd82: INVALID 
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, {0x3e6, 0x5ac, 0x658, 0x722, 0x7cd}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, {0x3e6, 0x5ac, 0x658, 0x722, 0x7cd}, S3, S2, 0x0, S0]

================================

Block 0xd83
[0xd83:0xd86]
---
Predecessors: [0xd79]
Successors: [0xd87]
---
0xd83 JUMPDEST
0xd84 DUP1
0xd85 SWAP2
0xd86 POP
---
0xd83: JUMPDEST 
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, {0x3e6, 0x5ac, 0x658, 0x722, 0x7cd}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, {0x3e6, 0x5ac, 0x658, 0x722, 0x7cd}, S3, S2, S0, S0]

================================

Block 0xd87
[0xd87:0xd8d]
---
Predecessors: [0xd60, 0xd83]
Successors: [0x3e6, 0x5ac, 0x658, 0x722, 0x7cd]
---
0xd87 JUMPDEST
0xd88 POP
0xd89 SWAP3
0xd8a SWAP2
0xd8b POP
0xd8c POP
0xd8d JUMP
---
0xd87: JUMPDEST 
0xd8d: JUMP {0x3e6, 0x5ac, 0x658, 0x722, 0x7cd}
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, {0x3e6, 0x5ac, 0x658, 0x722, 0x7cd}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, {0xb, 0x64}, S1]

================================

Block 0xd8e
[0xd8e:0xd9b]
---
Predecessors: [0x3e6, 0x5ac, 0x658, 0x722, 0x7cd]
Successors: [0xd9c, 0xda0]
---
0xd8e JUMPDEST
0xd8f PUSH1 0x0
0xd91 DUP1
0xd92 PUSH1 0x0
0xd94 DUP4
0xd95 GT
0xd96 ISZERO
0xd97 ISZERO
0xd98 PUSH2 0xda0
0xd9b JUMPI
---
0xd8e: JUMPDEST 
0xd8f: V863 = 0x0
0xd92: V864 = 0x0
0xd95: V865 = GT {0xb, 0x64} 0x0
0xd96: V866 = ISZERO V865
0xd97: V867 = ISZERO V866
0xd98: V868 = 0xda0
0xd9b: JUMPI 0xda0 V867
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, S1, {0xb, 0x64}]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, S1, {0xb, 0x64}, 0x0, 0x0]

================================

Block 0xd9c
[0xd9c:0xd9f]
---
Predecessors: [0xd8e]
Successors: []
---
0xd9c PUSH1 0x0
0xd9e DUP1
0xd9f REVERT
---
0xd9c: V869 = 0x0
0xd9f: REVERT 0x0 0x0
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, S3, {0xb, 0x64}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, S3, {0xb, 0x64}, 0x0, 0x0]

================================

Block 0xda0
[0xda0:0xda9]
---
Predecessors: [0xd8e]
Successors: [0xdaa, 0xdab]
---
0xda0 JUMPDEST
0xda1 DUP3
0xda2 DUP5
0xda3 DUP2
0xda4 ISZERO
0xda5 ISZERO
0xda6 PUSH2 0xdab
0xda9 JUMPI
---
0xda0: JUMPDEST 
0xda4: V870 = ISZERO {0xb, 0x64}
0xda5: V871 = ISZERO V870
0xda6: V872 = 0xdab
0xda9: JUMPI 0xdab V871
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, S3, {0xb, 0x64}, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S2, S3]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, S3, {0xb, 0x64}, 0x0, 0x0, {0xb, 0x64}, S3]

================================

Block 0xdaa
[0xdaa:0xdaa]
---
Predecessors: [0xda0]
Successors: []
---
0xdaa INVALID
---
0xdaa: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, S5, {0xb, 0x64}, 0x0, 0x0, {0xb, 0x64}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, S5, {0xb, 0x64}, 0x0, 0x0, {0xb, 0x64}, S0]

================================

Block 0xdab
[0xdab:0xdb7]
---
Predecessors: [0xda0]
Successors: [0x3f4, 0x5ba, 0x666, 0x730, 0x7db]
---
0xdab JUMPDEST
0xdac DIV
0xdad SWAP1
0xdae POP
0xdaf DUP1
0xdb0 SWAP2
0xdb1 POP
0xdb2 POP
0xdb3 SWAP3
0xdb4 SWAP2
0xdb5 POP
0xdb6 POP
0xdb7 JUMP
---
0xdab: JUMPDEST 
0xdac: V873 = DIV S0 {0xb, 0x64}
0xdb7: JUMP {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x3f4, 0x5ba, 0x666, 0x730, 0x7db}, S5, {0xb, 0x64}, 0x0, 0x0, {0xb, 0x64}, S0]
Stack pops: 7
Stack additions: [V873]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V873]

================================

Block 0xdb8
[0xdb8:0xdc4]
---
Predecessors: [0x53a, 0x93e, 0x9ce]
Successors: [0xdc5, 0xdc6]
---
0xdb8 JUMPDEST
0xdb9 PUSH1 0x0
0xdbb DUP3
0xdbc DUP3
0xdbd GT
0xdbe ISZERO
0xdbf ISZERO
0xdc0 ISZERO
0xdc1 PUSH2 0xdc6
0xdc4 JUMPI
---
0xdb8: JUMPDEST 
0xdb9: V874 = 0x0
0xdbd: V875 = GT S0 S1
0xdbe: V876 = ISZERO V875
0xdbf: V877 = ISZERO V876
0xdc0: V878 = ISZERO V877
0xdc1: V879 = 0xdc6
0xdc4: JUMPI 0xdc6 V878
---
Entry stack: [V11, S7, S6, S5, S4, S3, {0x54f, 0x9a3, 0xa3e}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, S7, S6, S5, S4, S3, {0x54f, 0x9a3, 0xa3e}, S1, S0, 0x0]

================================

Block 0xdc5
[0xdc5:0xdc5]
---
Predecessors: [0xdb8]
Successors: []
---
0xdc5 INVALID
---
0xdc5: INVALID 
---
Entry stack: [V11, S8, S7, S6, S5, S4, {0x54f, 0x9a3, 0xa3e}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, S4, {0x54f, 0x9a3, 0xa3e}, S2, S1, 0x0]

================================

Block 0xdc6
[0xdc6:0xdd0]
---
Predecessors: [0xdb8]
Successors: [0x54f, 0x9a3, 0xa3e]
---
0xdc6 JUMPDEST
0xdc7 DUP2
0xdc8 DUP4
0xdc9 SUB
0xdca SWAP1
0xdcb POP
0xdcc SWAP3
0xdcd SWAP2
0xdce POP
0xdcf POP
0xdd0 JUMP
---
0xdc6: JUMPDEST 
0xdc9: V880 = SUB S2 S1
0xdd0: JUMP {0x54f, 0x9a3, 0xa3e}
---
Entry stack: [V11, S8, S7, S6, S5, S4, {0x54f, 0x9a3, 0xa3e}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V880]
Exit stack: [V11, S8, S7, S6, S5, S4, V880]

================================

Block 0xdd1
[0xdd1:0xdfa]
---
Predecessors: []
Successors: [0xdfb]
Has unresolved jump.
---
0xdd1 STOP
0xdd2 LOG1
0xdd3 PUSH6 0x627a7a723058
0xdda SHA3
0xddb ADDRESS
0xddc MISSING 0xed
0xddd PUSH4 0x3f9ee8bd
0xde2 SWAP16
0xde3 MISSING 0xbb
0xde4 LOG3
0xde5 MISSING 0xe0
0xde6 GASPRICE
0xde7 MISSING 0xd9
0xde8 PUSH8 0x8b548e353cc9eeb6
0xdf1 MISSING 0xce
0xdf2 MISSING 0xc7
0xdf3 MISSING 0xb6
0xdf4 MSIZE
0xdf5 MISSING 0xd6
0xdf6 MISSING 0xc7
0xdf7 DELEGATECALL
0xdf8 SWAP11
0xdf9 MISSING 0xef
0xdfa JUMPI
---
0xdd1: STOP 
0xdd2: LOG S0 S1 S2
0xdd3: V881 = 0x627a7a723058
0xdda: V882 = SHA3 0x627a7a723058 S3
0xddb: V883 = ADDRESS
0xddc: MISSING 0xed
0xddd: V884 = 0x3f9ee8bd
0xde3: MISSING 0xbb
0xde4: LOG S0 S1 S2 S3 S4
0xde5: MISSING 0xe0
0xde6: V885 = GASPRICE
0xde7: MISSING 0xd9
0xde8: V886 = 0x8b548e353cc9eeb6
0xdf1: MISSING 0xce
0xdf2: MISSING 0xc7
0xdf3: MISSING 0xb6
0xdf4: V887 = MSIZE
0xdf5: MISSING 0xd6
0xdf6: MISSING 0xc7
0xdf7: V888 = DELEGATECALL S0 S1 S2 S3 S4 S5
0xdf9: MISSING 0xef
0xdfa: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V883, V882, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, 0x3f9ee8bd, V885, 0x8b548e353cc9eeb6, V887, S16, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V888]
Exit stack: []

================================

Block 0xdfb
[0xdfb:0xdfc]
---
Predecessors: [0xdd1]
Successors: []
---
0xdfb STOP
0xdfc MISSING 0x29
---
0xdfb: STOP 
0xdfc: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x11610c25
Entry block: 0xf4
Exit block: 0x109
Body: 0xf4, 0xfc, 0x100, 0x109, 0xccc

Function 1:
Public function signature: 0x16ada547
Entry block: 0x11f
Exit block: 0x134
Body: 0x11f, 0x127, 0x12b, 0x134, 0xcd2

Function 2:
Public function signature: 0x30d86a7d
Entry block: 0x14a
Exit block: 0x15f
Body: 0x14a, 0x152, 0x156, 0x15f, 0xcd8

Function 3:
Public function signature: 0x3c89a6b9
Entry block: 0x175
Exit block: 0x18a
Body: 0x175, 0x17d, 0x181, 0x18a, 0xcde

Function 4:
Public function signature: 0x3df4ddf4
Entry block: 0x1a0
Exit block: 0x1b5
Body: 0x1a0, 0x1a8, 0x1ac, 0x1b5, 0xce4

Function 5:
Public function signature: 0x40d5ff58
Entry block: 0x1cf
Exit block: 0x1e4
Body: 0x1cf, 0x1d7, 0x1db, 0x1e4, 0xcf7

Function 6:
Public function signature: 0x48db5f89
Entry block: 0x1fa
Exit block: 0x20f
Body: 0x1fa, 0x202, 0x206, 0x20f, 0xcfd

Function 7:
Public function signature: 0x803397c4
Entry block: 0x251
Exit block: 0x266
Body: 0x251, 0x259, 0x25d, 0x266, 0xd23

Function 8:
Public function signature: 0xccca123b
Entry block: 0x27c
Exit block: 0x291
Body: 0x27c, 0x284, 0x288, 0x291, 0xd29

Function 9:
Public function signature: 0xe7f3074c
Entry block: 0x2a7
Exit block: 0x2bc
Body: 0x2a7, 0x2af, 0x2b3, 0x2bc, 0xd2f

Function 10:
Public fallback function
Entry block: 0xa4
Exit block: 0xb69
Body: 0xa4, 0xc1, 0xc8, 0xcd, 0xdc, 0xe3, 0xe8, 0xf0, 0xf1, 0xf2, 0x4be, 0x4cd, 0x53a, 0x54f, 0x752, 0x88b, 0x931, 0x938, 0x93e, 0x9a3, 0x9c5, 0x9ce, 0xa3e, 0xaac, 0xae9, 0xaf2, 0xb69, 0xb72, 0xcca

Function 11:
Private function
Entry block: 0xd53
Exit block: 0xd87
Body: 0xd53, 0xd60, 0xd68, 0xd79, 0xd83, 0xd87

Function 12:
Private function
Entry block: 0xdb8
Exit block: 0xdc6
Body: 0xdb8, 0xdc6

Function 13:
Private function
Entry block: 0x2d2
Exit block: 0x402
Body: 0x2d2, 0x2df, 0x2e6, 0x35a, 0x36f, 0x3e6, 0x3f4, 0x402, 0x5ba, 0x5c8, 0x5f3, 0x658, 0x666, 0x674, 0x722, 0x730, 0x75b, 0x7cd, 0x7db, 0xd35, 0xd49, 0xd8e, 0xda0, 0xdab

