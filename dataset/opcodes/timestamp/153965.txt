Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x10c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x10c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x10c
0xa: JUMPI 0x10c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x11a]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x3ff20a1
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x11a
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x3ff20a1
0x20: V14 = EQ V12 0x3ff20a1
0x21: V15 = 0x11a
0x24: JUMPI 0x11a V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x13f]
---
0x25 DUP1
0x26 PUSH4 0x1865c57d
0x2b EQ
0x2c PUSH2 0x13f
0x2f JUMPI
---
0x26: V16 = 0x1865c57d
0x2b: V17 = EQ 0x1865c57d V12
0x2c: V18 = 0x13f
0x2f: JUMPI 0x13f V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x176]
---
0x30 DUP1
0x31 PUSH4 0x1d3f6f1b
0x36 EQ
0x37 PUSH2 0x176
0x3a JUMPI
---
0x31: V19 = 0x1d3f6f1b
0x36: V20 = EQ 0x1d3f6f1b V12
0x37: V21 = 0x176
0x3a: JUMPI 0x176 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x197]
---
0x3b DUP1
0x3c PUSH4 0x26a4e8d2
0x41 EQ
0x42 PUSH2 0x197
0x45 JUMPI
---
0x3c: V22 = 0x26a4e8d2
0x41: V23 = EQ 0x26a4e8d2 V12
0x42: V24 = 0x197
0x45: JUMPI 0x197 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1b8]
---
0x46 DUP1
0x47 PUSH4 0x28b2105c
0x4c EQ
0x4d PUSH2 0x1b8
0x50 JUMPI
---
0x47: V25 = 0x28b2105c
0x4c: V26 = EQ 0x28b2105c V12
0x4d: V27 = 0x1b8
0x50: JUMPI 0x1b8 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1df]
---
0x51 DUP1
0x52 PUSH4 0x2edefc26
0x57 EQ
0x58 PUSH2 0x1df
0x5b JUMPI
---
0x52: V28 = 0x2edefc26
0x57: V29 = EQ 0x2edefc26 V12
0x58: V30 = 0x1df
0x5b: JUMPI 0x1df V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x20e]
---
0x5c DUP1
0x5d PUSH4 0x317c1291
0x62 EQ
0x63 PUSH2 0x20e
0x66 JUMPI
---
0x5d: V31 = 0x317c1291
0x62: V32 = EQ 0x317c1291 V12
0x63: V33 = 0x20e
0x66: JUMPI 0x20e V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x235]
---
0x67 DUP1
0x68 PUSH4 0x3af74940
0x6d EQ
0x6e PUSH2 0x235
0x71 JUMPI
---
0x68: V34 = 0x3af74940
0x6d: V35 = EQ 0x3af74940 V12
0x6e: V36 = 0x235
0x71: JUMPI 0x235 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x256]
---
0x72 DUP1
0x73 PUSH4 0x3ba0b9a9
0x78 EQ
0x79 PUSH2 0x256
0x7c JUMPI
---
0x73: V37 = 0x3ba0b9a9
0x78: V38 = EQ 0x3ba0b9a9 V12
0x79: V39 = 0x256
0x7c: JUMPI 0x256 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x27b]
---
0x7d DUP1
0x7e PUSH4 0x4129b8ed
0x83 EQ
0x84 PUSH2 0x27b
0x87 JUMPI
---
0x7e: V40 = 0x4129b8ed
0x83: V41 = EQ 0x4129b8ed V12
0x84: V42 = 0x27b
0x87: JUMPI 0x27b V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2aa]
---
0x88 DUP1
0x89 PUSH4 0x4abad407
0x8e EQ
0x8f PUSH2 0x2aa
0x92 JUMPI
---
0x89: V43 = 0x4abad407
0x8e: V44 = EQ 0x4abad407 V12
0x8f: V45 = 0x2aa
0x92: JUMPI 0x2aa V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2c2]
---
0x93 DUP1
0x94 PUSH4 0x53f4db01
0x99 EQ
0x9a PUSH2 0x2c2
0x9d JUMPI
---
0x94: V46 = 0x53f4db01
0x99: V47 = EQ 0x53f4db01 V12
0x9a: V48 = 0x2c2
0x9d: JUMPI 0x2c2 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2e7]
---
0x9e DUP1
0x9f PUSH4 0x76c3b445
0xa4 EQ
0xa5 PUSH2 0x2e7
0xa8 JUMPI
---
0x9f: V49 = 0x76c3b445
0xa4: V50 = EQ 0x76c3b445 V12
0xa5: V51 = 0x2e7
0xa8: JUMPI 0x2e7 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x30f]
---
0xa9 DUP1
0xaa PUSH4 0x8a6083d2
0xaf EQ
0xb0 PUSH2 0x30f
0xb3 JUMPI
---
0xaa: V52 = 0x8a6083d2
0xaf: V53 = EQ 0x8a6083d2 V12
0xb0: V54 = 0x30f
0xb3: JUMPI 0x30f V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x324]
---
0xb4 DUP1
0xb5 PUSH4 0x92670dc8
0xba EQ
0xbb PUSH2 0x324
0xbe JUMPI
---
0xb5: V55 = 0x92670dc8
0xba: V56 = EQ 0x92670dc8 V12
0xbb: V57 = 0x324
0xbe: JUMPI 0x324 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x350]
---
0xbf DUP1
0xc0 PUSH4 0xa03435d1
0xc5 EQ
0xc6 PUSH2 0x350
0xc9 JUMPI
---
0xc0: V58 = 0xa03435d1
0xc5: V59 = EQ 0xa03435d1 V12
0xc6: V60 = 0x350
0xc9: JUMPI 0x350 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x37f]
---
0xca DUP1
0xcb PUSH4 0xaea09e6e
0xd0 EQ
0xd1 PUSH2 0x37f
0xd4 JUMPI
---
0xcb: V61 = 0xaea09e6e
0xd0: V62 = EQ 0xaea09e6e V12
0xd1: V63 = 0x37f
0xd4: JUMPI 0x37f V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x3a4]
---
0xd5 DUP1
0xd6 PUSH4 0xc1dbd9b2
0xdb EQ
0xdc PUSH2 0x3a4
0xdf JUMPI
---
0xd6: V64 = 0xc1dbd9b2
0xdb: V65 = EQ 0xc1dbd9b2 V12
0xdc: V66 = 0x3a4
0xdf: JUMPI 0x3a4 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x3c8]
---
0xe0 DUP1
0xe1 PUSH4 0xc69fa8a9
0xe6 EQ
0xe7 PUSH2 0x3c8
0xea JUMPI
---
0xe1: V67 = 0xc69fa8a9
0xe6: V68 = EQ 0xc69fa8a9 V12
0xe7: V69 = 0x3c8
0xea: JUMPI 0x3c8 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x3e9]
---
0xeb DUP1
0xec PUSH4 0xcd152c0a
0xf1 EQ
0xf2 PUSH2 0x3e9
0xf5 JUMPI
---
0xec: V70 = 0xcd152c0a
0xf1: V71 = EQ 0xcd152c0a V12
0xf2: V72 = 0x3e9
0xf5: JUMPI 0x3e9 V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x41a]
---
0xf6 DUP1
0xf7 PUSH4 0xec8ac4d8
0xfc EQ
0xfd PUSH2 0x41a
0x100 JUMPI
---
0xf7: V73 = 0xec8ac4d8
0xfc: V74 = EQ 0xec8ac4d8 V12
0xfd: V75 = 0x41a
0x100: JUMPI 0x41a V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0x442]
---
0x101 DUP1
0x102 PUSH4 0xfc0c546a
0x107 EQ
0x108 PUSH2 0x442
0x10b JUMPI
---
0x102: V76 = 0xfc0c546a
0x107: V77 = EQ 0xfc0c546a V12
0x108: V78 = 0x442
0x10b: JUMPI 0x442 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x10c]
---
Predecessors: [0x0, 0x101]
Successors: [0x10d]
---
0x10c JUMPDEST
---
0x10c: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10d
[0x10d:0x115]
---
Predecessors: [0x10c]
Successors: [0x471]
---
0x10d JUMPDEST
0x10e PUSH2 0x116
0x111 CALLER
0x112 PUSH2 0x471
0x115 JUMP
---
0x10d: JUMPDEST 
0x10e: V79 = 0x116
0x111: V80 = CALLER
0x112: V81 = 0x471
0x115: JUMP 0x471
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x116, V80]
Exit stack: [V12, 0x116, V80]

================================

Block 0x116
[0x116:0x117]
---
Predecessors: [0x6f9, 0xbc7, 0xf8a, 0x1009]
Successors: [0x118]
---
0x116 JUMPDEST
0x117 POP
---
0x116: JUMPDEST 
---
Entry stack: [S19, S18, 0xbb1, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S19, S18, 0xbb1, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x118
[0x118:0x119]
---
Predecessors: [0x116, 0x6f9, 0x7e3, 0x870, 0xa81, 0xbc7, 0xc40, 0xce0, 0xd48, 0xf8a, 0x1009]
Successors: []
---
0x118 JUMPDEST
0x119 STOP
---
0x118: JUMPDEST 
0x119: STOP 
---
Entry stack: [S19, S18, 0xbb1, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, 0xbb1, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x11a
[0x11a:0x120]
---
Predecessors: [0xb]
Successors: [0x121, 0x125]
---
0x11a JUMPDEST
0x11b CALLVALUE
0x11c ISZERO
0x11d PUSH2 0x125
0x120 JUMPI
---
0x11a: JUMPDEST 
0x11b: V82 = CALLVALUE
0x11c: V83 = ISZERO V82
0x11d: V84 = 0x125
0x120: JUMPI 0x125 V83
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x121
[0x121:0x124]
---
Predecessors: [0x11a]
Successors: []
---
0x121 PUSH1 0x0
0x123 DUP1
0x124 REVERT
---
0x121: V85 = 0x0
0x124: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x125
[0x125:0x12c]
---
Predecessors: [0x11a]
Successors: [0x6ff]
---
0x125 JUMPDEST
0x126 PUSH2 0x12d
0x129 PUSH2 0x6ff
0x12c JUMP
---
0x125: JUMPDEST 
0x126: V86 = 0x12d
0x129: V87 = 0x6ff
0x12c: JUMP 0x6ff
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d]
Exit stack: [V12, 0x12d]

================================

Block 0x12d
[0x12d:0x13e]
---
Predecessors: [0x6f9, 0x6ff, 0x7e3, 0xa84, 0xb60, 0xbc7, 0xc98, 0xd65, 0xf8a, 0x1009]
Successors: []
---
0x12d JUMPDEST
0x12e PUSH1 0x40
0x130 MLOAD
0x131 SWAP1
0x132 DUP2
0x133 MSTORE
0x134 PUSH1 0x20
0x136 ADD
0x137 PUSH1 0x40
0x139 MLOAD
0x13a DUP1
0x13b SWAP2
0x13c SUB
0x13d SWAP1
0x13e RETURN
---
0x12d: JUMPDEST 
0x12e: V88 = 0x40
0x130: V89 = M[0x40]
0x133: M[V89] = S0
0x134: V90 = 0x20
0x136: V91 = ADD 0x20 V89
0x137: V92 = 0x40
0x139: V93 = M[0x40]
0x13c: V94 = SUB V91 V93
0x13e: RETURN V93 V94
---
Entry stack: [S19, S18, 0xbb1, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S19, S18, 0xbb1, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x13f
[0x13f:0x145]
---
Predecessors: [0x25]
Successors: [0x146, 0x14a]
---
0x13f JUMPDEST
0x140 CALLVALUE
0x141 ISZERO
0x142 PUSH2 0x14a
0x145 JUMPI
---
0x13f: JUMPDEST 
0x140: V95 = CALLVALUE
0x141: V96 = ISZERO V95
0x142: V97 = 0x14a
0x145: JUMPI 0x14a V96
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x146
[0x146:0x149]
---
Predecessors: [0x13f]
Successors: []
---
0x146 PUSH1 0x0
0x148 DUP1
0x149 REVERT
---
0x146: V98 = 0x0
0x149: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14a
[0x14a:0x151]
---
Predecessors: [0x13f]
Successors: [0x705]
---
0x14a JUMPDEST
0x14b PUSH2 0x152
0x14e PUSH2 0x705
0x151 JUMP
---
0x14a: JUMPDEST 
0x14b: V99 = 0x152
0x14e: V100 = 0x705
0x151: JUMP 0x705
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x152]
Exit stack: [V12, 0x152]

================================

Block 0x152
[0x152:0x160]
---
Predecessors: [0x735]
Successors: [0x161, 0x162]
---
0x152 JUMPDEST
0x153 PUSH1 0x40
0x155 MLOAD
0x156 DUP1
0x157 DUP3
0x158 PUSH1 0x1
0x15a DUP2
0x15b GT
0x15c ISZERO
0x15d PUSH2 0x162
0x160 JUMPI
---
0x152: JUMPDEST 
0x153: V101 = 0x40
0x155: V102 = M[0x40]
0x158: V103 = 0x1
0x15b: V104 = GT {0x0, 0x1, 0x5, 0xa, 0xf, 0x14} 0x1
0x15c: V105 = ISZERO V104
0x15d: V106 = 0x162
0x160: JUMPI 0x162 V105
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 1
Stack additions: [S0, V102, V102, S0]
Exit stack: [S7, {0x116, 0x1cb}, S5, S4, S3, S2, S1, {0x0, 0x1}, V102, V102, {0x0, 0x1}]

================================

Block 0x161
[0x161:0x161]
---
Predecessors: [0x152]
Successors: []
---
0x161 INVALID
---
0x161: INVALID 
---
Entry stack: [V12, {0x116, 0x1cb}, S8, S7, S6, S5, S4, {0x0, 0x1}, V102, V102, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S8, S7, S6, S5, S4, {0x0, 0x1}, V102, V102, {0x0, 0x1}]

================================

Block 0x162
[0x162:0x175]
---
Predecessors: [0x152]
Successors: []
---
0x162 JUMPDEST
0x163 PUSH1 0xff
0x165 AND
0x166 DUP2
0x167 MSTORE
0x168 PUSH1 0x20
0x16a ADD
0x16b SWAP2
0x16c POP
0x16d POP
0x16e PUSH1 0x40
0x170 MLOAD
0x171 DUP1
0x172 SWAP2
0x173 SUB
0x174 SWAP1
0x175 RETURN
---
0x162: JUMPDEST 
0x163: V107 = 0xff
0x165: V108 = AND 0xff {0x0, 0x1}
0x167: M[V102] = V108
0x168: V109 = 0x20
0x16a: V110 = ADD 0x20 V102
0x16e: V111 = 0x40
0x170: V112 = M[0x40]
0x173: V113 = SUB V110 V112
0x175: RETURN V112 V113
---
Entry stack: [V12, {0x116, 0x1cb}, S8, S7, S6, S5, S4, {0x0, 0x1}, V102, V102, {0x0, 0x1}]
Stack pops: 4
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S8, S7, S6, S5, S4]

================================

Block 0x176
[0x176:0x17c]
---
Predecessors: [0x30]
Successors: [0x17d, 0x181]
---
0x176 JUMPDEST
0x177 CALLVALUE
0x178 ISZERO
0x179 PUSH2 0x181
0x17c JUMPI
---
0x176: JUMPDEST 
0x177: V114 = CALLVALUE
0x178: V115 = ISZERO V114
0x179: V116 = 0x181
0x17c: JUMPI 0x181 V115
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17d
[0x17d:0x180]
---
Predecessors: [0x176]
Successors: []
---
0x17d PUSH1 0x0
0x17f DUP1
0x180 REVERT
---
0x17d: V117 = 0x0
0x180: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x181
[0x181:0x194]
---
Predecessors: [0x176]
Successors: [0x738]
---
0x181 JUMPDEST
0x182 PUSH2 0x118
0x185 PUSH1 0x1
0x187 PUSH1 0xa0
0x189 PUSH1 0x2
0x18b EXP
0x18c SUB
0x18d PUSH1 0x4
0x18f CALLDATALOAD
0x190 AND
0x191 PUSH2 0x738
0x194 JUMP
---
0x181: JUMPDEST 
0x182: V118 = 0x118
0x185: V119 = 0x1
0x187: V120 = 0xa0
0x189: V121 = 0x2
0x18b: V122 = EXP 0x2 0xa0
0x18c: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18d: V124 = 0x4
0x18f: V125 = CALLDATALOAD 0x4
0x190: V126 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x191: V127 = 0x738
0x194: JUMP 0x738
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x118, V126]
Exit stack: [V12, 0x118, V126]

================================

Block 0x195
[0x195:0x196]
---
Predecessors: []
Successors: []
---
0x195 JUMPDEST
0x196 STOP
---
0x195: JUMPDEST 
0x196: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x197
[0x197:0x19d]
---
Predecessors: [0x3b]
Successors: [0x19e, 0x1a2]
---
0x197 JUMPDEST
0x198 CALLVALUE
0x199 ISZERO
0x19a PUSH2 0x1a2
0x19d JUMPI
---
0x197: JUMPDEST 
0x198: V128 = CALLVALUE
0x199: V129 = ISZERO V128
0x19a: V130 = 0x1a2
0x19d: JUMPI 0x1a2 V129
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19e
[0x19e:0x1a1]
---
Predecessors: [0x197]
Successors: []
---
0x19e PUSH1 0x0
0x1a0 DUP1
0x1a1 REVERT
---
0x19e: V131 = 0x0
0x1a1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a2
[0x1a2:0x1b5]
---
Predecessors: [0x197]
Successors: [0x7e6]
---
0x1a2 JUMPDEST
0x1a3 PUSH2 0x118
0x1a6 PUSH1 0x1
0x1a8 PUSH1 0xa0
0x1aa PUSH1 0x2
0x1ac EXP
0x1ad SUB
0x1ae PUSH1 0x4
0x1b0 CALLDATALOAD
0x1b1 AND
0x1b2 PUSH2 0x7e6
0x1b5 JUMP
---
0x1a2: JUMPDEST 
0x1a3: V132 = 0x118
0x1a6: V133 = 0x1
0x1a8: V134 = 0xa0
0x1aa: V135 = 0x2
0x1ac: V136 = EXP 0x2 0xa0
0x1ad: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ae: V138 = 0x4
0x1b0: V139 = CALLDATALOAD 0x4
0x1b1: V140 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V141 = 0x7e6
0x1b5: JUMP 0x7e6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x118, V140]
Exit stack: [V12, 0x118, V140]

================================

Block 0x1b6
[0x1b6:0x1b7]
---
Predecessors: []
Successors: []
---
0x1b6 JUMPDEST
0x1b7 STOP
---
0x1b6: JUMPDEST 
0x1b7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1b8
[0x1b8:0x1be]
---
Predecessors: [0x46]
Successors: [0x1bf, 0x1c3]
---
0x1b8 JUMPDEST
0x1b9 CALLVALUE
0x1ba ISZERO
0x1bb PUSH2 0x1c3
0x1be JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V142 = CALLVALUE
0x1ba: V143 = ISZERO V142
0x1bb: V144 = 0x1c3
0x1be: JUMPI 0x1c3 V143
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bf
[0x1bf:0x1c2]
---
Predecessors: [0x1b8]
Successors: []
---
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 REVERT
---
0x1bf: V145 = 0x0
0x1c2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c3
[0x1c3:0x1ca]
---
Predecessors: [0x1b8]
Successors: [0x873]
---
0x1c3 JUMPDEST
0x1c4 PUSH2 0x1cb
0x1c7 PUSH2 0x873
0x1ca JUMP
---
0x1c3: JUMPDEST 
0x1c4: V146 = 0x1cb
0x1c7: V147 = 0x873
0x1ca: JUMP 0x873
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1cb]
Exit stack: [V12, 0x1cb]

================================

Block 0x1cb
[0x1cb:0x1de]
---
Predecessors: [0x9fa, 0xa14, 0x1009]
Successors: []
---
0x1cb JUMPDEST
0x1cc PUSH1 0x40
0x1ce MLOAD
0x1cf SWAP1
0x1d0 ISZERO
0x1d1 ISZERO
0x1d2 DUP2
0x1d3 MSTORE
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 PUSH1 0x40
0x1d9 MLOAD
0x1da DUP1
0x1db SWAP2
0x1dc SUB
0x1dd SWAP1
0x1de RETURN
---
0x1cb: JUMPDEST 
0x1cc: V148 = 0x40
0x1ce: V149 = M[0x40]
0x1d0: V150 = ISZERO S0
0x1d1: V151 = ISZERO V150
0x1d3: M[V149] = V151
0x1d4: V152 = 0x20
0x1d6: V153 = ADD 0x20 V149
0x1d7: V154 = 0x40
0x1d9: V155 = M[0x40]
0x1dc: V156 = SUB V153 V155
0x1de: RETURN V155 V156
---
Entry stack: [S16, S15, 0xbb1, 0xde0b6b3a7640000, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S16, S15, 0xbb1, 0xde0b6b3a7640000, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1df
[0x1df:0x1e5]
---
Predecessors: [0x51]
Successors: [0x1e6, 0x1ea]
---
0x1df JUMPDEST
0x1e0 CALLVALUE
0x1e1 ISZERO
0x1e2 PUSH2 0x1ea
0x1e5 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V157 = CALLVALUE
0x1e1: V158 = ISZERO V157
0x1e2: V159 = 0x1ea
0x1e5: JUMPI 0x1ea V158
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e6
[0x1e6:0x1e9]
---
Predecessors: [0x1df]
Successors: []
---
0x1e6 PUSH1 0x0
0x1e8 DUP1
0x1e9 REVERT
---
0x1e6: V160 = 0x0
0x1e9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ea
[0x1ea:0x1f1]
---
Predecessors: [0x1df]
Successors: [0x9fe]
---
0x1ea JUMPDEST
0x1eb PUSH2 0x1f2
0x1ee PUSH2 0x9fe
0x1f1 JUMP
---
0x1ea: JUMPDEST 
0x1eb: V161 = 0x1f2
0x1ee: V162 = 0x9fe
0x1f1: JUMP 0x9fe
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f2]
Exit stack: [V12, 0x1f2]

================================

Block 0x1f2
[0x1f2:0x20d]
---
Predecessors: [0x9fe, 0xa8a, 0xc89, 0xd6a]
Successors: []
---
0x1f2 JUMPDEST
0x1f3 PUSH1 0x40
0x1f5 MLOAD
0x1f6 PUSH1 0x1
0x1f8 PUSH1 0xa0
0x1fa PUSH1 0x2
0x1fc EXP
0x1fd SUB
0x1fe SWAP1
0x1ff SWAP2
0x200 AND
0x201 DUP2
0x202 MSTORE
0x203 PUSH1 0x20
0x205 ADD
0x206 PUSH1 0x40
0x208 MLOAD
0x209 DUP1
0x20a SWAP2
0x20b SUB
0x20c SWAP1
0x20d RETURN
---
0x1f2: JUMPDEST 
0x1f3: V163 = 0x40
0x1f5: V164 = M[0x40]
0x1f6: V165 = 0x1
0x1f8: V166 = 0xa0
0x1fa: V167 = 0x2
0x1fc: V168 = EXP 0x2 0xa0
0x1fd: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x200: V170 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x202: M[V164] = V170
0x203: V171 = 0x20
0x205: V172 = ADD 0x20 V164
0x206: V173 = 0x40
0x208: V174 = M[0x40]
0x20b: V175 = SUB V172 V174
0x20d: RETURN V174 V175
---
Entry stack: [V12, 0x1f2, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1f2]

================================

Block 0x20e
[0x20e:0x214]
---
Predecessors: [0x5c]
Successors: [0x215, 0x219]
---
0x20e JUMPDEST
0x20f CALLVALUE
0x210 ISZERO
0x211 PUSH2 0x219
0x214 JUMPI
---
0x20e: JUMPDEST 
0x20f: V176 = CALLVALUE
0x210: V177 = ISZERO V176
0x211: V178 = 0x219
0x214: JUMPI 0x219 V177
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x215
[0x215:0x218]
---
Predecessors: [0x20e]
Successors: []
---
0x215 PUSH1 0x0
0x217 DUP1
0x218 REVERT
---
0x215: V179 = 0x0
0x218: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x219
[0x219:0x220]
---
Predecessors: [0x20e]
Successors: [0xa14]
---
0x219 JUMPDEST
0x21a PUSH2 0x1cb
0x21d PUSH2 0xa14
0x220 JUMP
---
0x219: JUMPDEST 
0x21a: V180 = 0x1cb
0x21d: V181 = 0xa14
0x220: JUMP 0xa14
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1cb]
Exit stack: [V12, 0x1cb]

================================

Block 0x221
[0x221:0x234]
---
Predecessors: []
Successors: []
---
0x221 JUMPDEST
0x222 PUSH1 0x40
0x224 MLOAD
0x225 SWAP1
0x226 ISZERO
0x227 ISZERO
0x228 DUP2
0x229 MSTORE
0x22a PUSH1 0x20
0x22c ADD
0x22d PUSH1 0x40
0x22f MLOAD
0x230 DUP1
0x231 SWAP2
0x232 SUB
0x233 SWAP1
0x234 RETURN
---
0x221: JUMPDEST 
0x222: V182 = 0x40
0x224: V183 = M[0x40]
0x226: V184 = ISZERO S0
0x227: V185 = ISZERO V184
0x229: M[V183] = V185
0x22a: V186 = 0x20
0x22c: V187 = ADD 0x20 V183
0x22d: V188 = 0x40
0x22f: V189 = M[0x40]
0x232: V190 = SUB V187 V189
0x234: RETURN V189 V190
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x235
[0x235:0x23b]
---
Predecessors: [0x67]
Successors: [0x23c, 0x240]
---
0x235 JUMPDEST
0x236 CALLVALUE
0x237 ISZERO
0x238 PUSH2 0x240
0x23b JUMPI
---
0x235: JUMPDEST 
0x236: V191 = CALLVALUE
0x237: V192 = ISZERO V191
0x238: V193 = 0x240
0x23b: JUMPI 0x240 V192
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23c
[0x23c:0x23f]
---
Predecessors: [0x235]
Successors: []
---
0x23c PUSH1 0x0
0x23e DUP1
0x23f REVERT
---
0x23c: V194 = 0x0
0x23f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x240
[0x240:0x253]
---
Predecessors: [0x235]
Successors: [0xa1d]
---
0x240 JUMPDEST
0x241 PUSH2 0x118
0x244 PUSH1 0x1
0x246 PUSH1 0xa0
0x248 PUSH1 0x2
0x24a EXP
0x24b SUB
0x24c PUSH1 0x4
0x24e CALLDATALOAD
0x24f AND
0x250 PUSH2 0xa1d
0x253 JUMP
---
0x240: JUMPDEST 
0x241: V195 = 0x118
0x244: V196 = 0x1
0x246: V197 = 0xa0
0x248: V198 = 0x2
0x24a: V199 = EXP 0x2 0xa0
0x24b: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24c: V201 = 0x4
0x24e: V202 = CALLDATALOAD 0x4
0x24f: V203 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x250: V204 = 0xa1d
0x253: JUMP 0xa1d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x118, V203]
Exit stack: [V12, 0x118, V203]

================================

Block 0x254
[0x254:0x255]
---
Predecessors: []
Successors: []
---
0x254 JUMPDEST
0x255 STOP
---
0x254: JUMPDEST 
0x255: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x256
[0x256:0x25c]
---
Predecessors: [0x72]
Successors: [0x25d, 0x261]
---
0x256 JUMPDEST
0x257 CALLVALUE
0x258 ISZERO
0x259 PUSH2 0x261
0x25c JUMPI
---
0x256: JUMPDEST 
0x257: V205 = CALLVALUE
0x258: V206 = ISZERO V205
0x259: V207 = 0x261
0x25c: JUMPI 0x261 V206
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25d
[0x25d:0x260]
---
Predecessors: [0x256]
Successors: []
---
0x25d PUSH1 0x0
0x25f DUP1
0x260 REVERT
---
0x25d: V208 = 0x0
0x260: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x261
[0x261:0x268]
---
Predecessors: [0x256]
Successors: [0xa84]
---
0x261 JUMPDEST
0x262 PUSH2 0x12d
0x265 PUSH2 0xa84
0x268 JUMP
---
0x261: JUMPDEST 
0x262: V209 = 0x12d
0x265: V210 = 0xa84
0x268: JUMP 0xa84
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d]
Exit stack: [V12, 0x12d]

================================

Block 0x269
[0x269:0x27a]
---
Predecessors: []
Successors: []
---
0x269 JUMPDEST
0x26a PUSH1 0x40
0x26c MLOAD
0x26d SWAP1
0x26e DUP2
0x26f MSTORE
0x270 PUSH1 0x20
0x272 ADD
0x273 PUSH1 0x40
0x275 MLOAD
0x276 DUP1
0x277 SWAP2
0x278 SUB
0x279 SWAP1
0x27a RETURN
---
0x269: JUMPDEST 
0x26a: V211 = 0x40
0x26c: V212 = M[0x40]
0x26f: M[V212] = S0
0x270: V213 = 0x20
0x272: V214 = ADD 0x20 V212
0x273: V215 = 0x40
0x275: V216 = M[0x40]
0x278: V217 = SUB V214 V216
0x27a: RETURN V216 V217
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x27b
[0x27b:0x281]
---
Predecessors: [0x7d]
Successors: [0x282, 0x286]
---
0x27b JUMPDEST
0x27c CALLVALUE
0x27d ISZERO
0x27e PUSH2 0x286
0x281 JUMPI
---
0x27b: JUMPDEST 
0x27c: V218 = CALLVALUE
0x27d: V219 = ISZERO V218
0x27e: V220 = 0x286
0x281: JUMPI 0x286 V219
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x282
[0x282:0x285]
---
Predecessors: [0x27b]
Successors: []
---
0x282 PUSH1 0x0
0x284 DUP1
0x285 REVERT
---
0x282: V221 = 0x0
0x285: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x286
[0x286:0x28d]
---
Predecessors: [0x27b]
Successors: [0xa8a]
---
0x286 JUMPDEST
0x287 PUSH2 0x1f2
0x28a PUSH2 0xa8a
0x28d JUMP
---
0x286: JUMPDEST 
0x287: V222 = 0x1f2
0x28a: V223 = 0xa8a
0x28d: JUMP 0xa8a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f2]
Exit stack: [V12, 0x1f2]

================================

Block 0x28e
[0x28e:0x2a9]
---
Predecessors: []
Successors: []
---
0x28e JUMPDEST
0x28f PUSH1 0x40
0x291 MLOAD
0x292 PUSH1 0x1
0x294 PUSH1 0xa0
0x296 PUSH1 0x2
0x298 EXP
0x299 SUB
0x29a SWAP1
0x29b SWAP2
0x29c AND
0x29d DUP2
0x29e MSTORE
0x29f PUSH1 0x20
0x2a1 ADD
0x2a2 PUSH1 0x40
0x2a4 MLOAD
0x2a5 DUP1
0x2a6 SWAP2
0x2a7 SUB
0x2a8 SWAP1
0x2a9 RETURN
---
0x28e: JUMPDEST 
0x28f: V224 = 0x40
0x291: V225 = M[0x40]
0x292: V226 = 0x1
0x294: V227 = 0xa0
0x296: V228 = 0x2
0x298: V229 = EXP 0x2 0xa0
0x299: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29c: V231 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x29e: M[V225] = V231
0x29f: V232 = 0x20
0x2a1: V233 = ADD 0x20 V225
0x2a2: V234 = 0x40
0x2a4: V235 = M[0x40]
0x2a7: V236 = SUB V233 V235
0x2a9: RETURN V235 V236
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2aa
[0x2aa:0x2b0]
---
Predecessors: [0x88]
Successors: [0x2b1, 0x2b5]
---
0x2aa JUMPDEST
0x2ab CALLVALUE
0x2ac ISZERO
0x2ad PUSH2 0x2b5
0x2b0 JUMPI
---
0x2aa: JUMPDEST 
0x2ab: V237 = CALLVALUE
0x2ac: V238 = ISZERO V237
0x2ad: V239 = 0x2b5
0x2b0: JUMPI 0x2b5 V238
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b1
[0x2b1:0x2b4]
---
Predecessors: [0x2aa]
Successors: []
---
0x2b1 PUSH1 0x0
0x2b3 DUP1
0x2b4 REVERT
---
0x2b1: V240 = 0x0
0x2b4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b5
[0x2b5:0x2bf]
---
Predecessors: [0x2aa]
Successors: [0xa99]
---
0x2b5 JUMPDEST
0x2b6 PUSH2 0x118
0x2b9 PUSH1 0x4
0x2bb CALLDATALOAD
0x2bc PUSH2 0xa99
0x2bf JUMP
---
0x2b5: JUMPDEST 
0x2b6: V241 = 0x118
0x2b9: V242 = 0x4
0x2bb: V243 = CALLDATALOAD 0x4
0x2bc: V244 = 0xa99
0x2bf: JUMP 0xa99
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x118, V243]
Exit stack: [V12, 0x118, V243]

================================

Block 0x2c0
[0x2c0:0x2c1]
---
Predecessors: []
Successors: []
---
0x2c0 JUMPDEST
0x2c1 STOP
---
0x2c0: JUMPDEST 
0x2c1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2c2
[0x2c2:0x2c8]
---
Predecessors: [0x93]
Successors: [0x2c9, 0x2cd]
---
0x2c2 JUMPDEST
0x2c3 CALLVALUE
0x2c4 ISZERO
0x2c5 PUSH2 0x2cd
0x2c8 JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V245 = CALLVALUE
0x2c4: V246 = ISZERO V245
0x2c5: V247 = 0x2cd
0x2c8: JUMPI 0x2cd V246
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c9
[0x2c9:0x2cc]
---
Predecessors: [0x2c2]
Successors: []
---
0x2c9 PUSH1 0x0
0x2cb DUP1
0x2cc REVERT
---
0x2c9: V248 = 0x0
0x2cc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2cd
[0x2cd:0x2d4]
---
Predecessors: [0x2c2]
Successors: [0xb60]
---
0x2cd JUMPDEST
0x2ce PUSH2 0x12d
0x2d1 PUSH2 0xb60
0x2d4 JUMP
---
0x2cd: JUMPDEST 
0x2ce: V249 = 0x12d
0x2d1: V250 = 0xb60
0x2d4: JUMP 0xb60
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d]
Exit stack: [V12, 0x12d]

================================

Block 0x2d5
[0x2d5:0x2e6]
---
Predecessors: []
Successors: []
---
0x2d5 JUMPDEST
0x2d6 PUSH1 0x40
0x2d8 MLOAD
0x2d9 SWAP1
0x2da DUP2
0x2db MSTORE
0x2dc PUSH1 0x20
0x2de ADD
0x2df PUSH1 0x40
0x2e1 MLOAD
0x2e2 DUP1
0x2e3 SWAP2
0x2e4 SUB
0x2e5 SWAP1
0x2e6 RETURN
---
0x2d5: JUMPDEST 
0x2d6: V251 = 0x40
0x2d8: V252 = M[0x40]
0x2db: M[V252] = S0
0x2dc: V253 = 0x20
0x2de: V254 = ADD 0x20 V252
0x2df: V255 = 0x40
0x2e1: V256 = M[0x40]
0x2e4: V257 = SUB V254 V256
0x2e6: RETURN V256 V257
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e7
[0x2e7:0x2ed]
---
Predecessors: [0x9e]
Successors: [0x2ee, 0x2f2]
---
0x2e7 JUMPDEST
0x2e8 CALLVALUE
0x2e9 ISZERO
0x2ea PUSH2 0x2f2
0x2ed JUMPI
---
0x2e7: JUMPDEST 
0x2e8: V258 = CALLVALUE
0x2e9: V259 = ISZERO V258
0x2ea: V260 = 0x2f2
0x2ed: JUMPI 0x2f2 V259
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ee
[0x2ee:0x2f1]
---
Predecessors: [0x2e7]
Successors: []
---
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 REVERT
---
0x2ee: V261 = 0x0
0x2f1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f2
[0x2f2:0x2fc]
---
Predecessors: [0x2e7]
Successors: [0xb66]
---
0x2f2 JUMPDEST
0x2f3 PUSH2 0x12d
0x2f6 PUSH1 0x4
0x2f8 CALLDATALOAD
0x2f9 PUSH2 0xb66
0x2fc JUMP
---
0x2f2: JUMPDEST 
0x2f3: V262 = 0x12d
0x2f6: V263 = 0x4
0x2f8: V264 = CALLDATALOAD 0x4
0x2f9: V265 = 0xb66
0x2fc: JUMP 0xb66
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d, V264]
Exit stack: [V12, 0x12d, V264]

================================

Block 0x2fd
[0x2fd:0x30e]
---
Predecessors: []
Successors: []
---
0x2fd JUMPDEST
0x2fe PUSH1 0x40
0x300 MLOAD
0x301 SWAP1
0x302 DUP2
0x303 MSTORE
0x304 PUSH1 0x20
0x306 ADD
0x307 PUSH1 0x40
0x309 MLOAD
0x30a DUP1
0x30b SWAP2
0x30c SUB
0x30d SWAP1
0x30e RETURN
---
0x2fd: JUMPDEST 
0x2fe: V266 = 0x40
0x300: V267 = M[0x40]
0x303: M[V267] = S0
0x304: V268 = 0x20
0x306: V269 = ADD 0x20 V267
0x307: V270 = 0x40
0x309: V271 = M[0x40]
0x30c: V272 = SUB V269 V271
0x30e: RETURN V271 V272
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x30f
[0x30f:0x315]
---
Predecessors: [0xa9]
Successors: [0x316, 0x31a]
---
0x30f JUMPDEST
0x310 CALLVALUE
0x311 ISZERO
0x312 PUSH2 0x31a
0x315 JUMPI
---
0x30f: JUMPDEST 
0x310: V273 = CALLVALUE
0x311: V274 = ISZERO V273
0x312: V275 = 0x31a
0x315: JUMPI 0x31a V274
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x316
[0x316:0x319]
---
Predecessors: [0x30f]
Successors: []
---
0x316 PUSH1 0x0
0x318 DUP1
0x319 REVERT
---
0x316: V276 = 0x0
0x319: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31a
[0x31a:0x321]
---
Predecessors: [0x30f]
Successors: [0xbcc]
---
0x31a JUMPDEST
0x31b PUSH2 0x118
0x31e PUSH2 0xbcc
0x321 JUMP
---
0x31a: JUMPDEST 
0x31b: V277 = 0x118
0x31e: V278 = 0xbcc
0x321: JUMP 0xbcc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x118]
Exit stack: [V12, 0x118]

================================

Block 0x322
[0x322:0x323]
---
Predecessors: []
Successors: []
---
0x322 JUMPDEST
0x323 STOP
---
0x322: JUMPDEST 
0x323: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x324
[0x324:0x32a]
---
Predecessors: [0xb4]
Successors: [0x32b, 0x32f]
---
0x324 JUMPDEST
0x325 CALLVALUE
0x326 ISZERO
0x327 PUSH2 0x32f
0x32a JUMPI
---
0x324: JUMPDEST 
0x325: V279 = CALLVALUE
0x326: V280 = ISZERO V279
0x327: V281 = 0x32f
0x32a: JUMPI 0x32f V280
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32b
[0x32b:0x32e]
---
Predecessors: [0x324]
Successors: []
---
0x32b PUSH1 0x0
0x32d DUP1
0x32e REVERT
---
0x32b: V282 = 0x0
0x32e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32f
[0x32f:0x339]
---
Predecessors: [0x324]
Successors: [0xc42]
---
0x32f JUMPDEST
0x330 PUSH2 0x33a
0x333 PUSH1 0x4
0x335 CALLDATALOAD
0x336 PUSH2 0xc42
0x339 JUMP
---
0x32f: JUMPDEST 
0x330: V283 = 0x33a
0x333: V284 = 0x4
0x335: V285 = CALLDATALOAD 0x4
0x336: V286 = 0xc42
0x339: JUMP 0xc42
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x33a, V285]
Exit stack: [V12, 0x33a, V285]

================================

Block 0x33a
[0x33a:0x34f]
---
Predecessors: [0x6f9, 0x7e3, 0xbc7, 0xf8a, 0x1009]
Successors: []
---
0x33a JUMPDEST
0x33b PUSH1 0x40
0x33d MLOAD
0x33e PUSH1 0xff
0x340 SWAP1
0x341 SWAP2
0x342 AND
0x343 DUP2
0x344 MSTORE
0x345 PUSH1 0x20
0x347 ADD
0x348 PUSH1 0x40
0x34a MLOAD
0x34b DUP1
0x34c SWAP2
0x34d SUB
0x34e SWAP1
0x34f RETURN
---
0x33a: JUMPDEST 
0x33b: V287 = 0x40
0x33d: V288 = M[0x40]
0x33e: V289 = 0xff
0x342: V290 = AND S0 0xff
0x344: M[V288] = V290
0x345: V291 = 0x20
0x347: V292 = ADD 0x20 V288
0x348: V293 = 0x40
0x34a: V294 = M[0x40]
0x34d: V295 = SUB V292 V294
0x34f: RETURN V294 V295
---
Entry stack: [S19, S18, 0xbb1, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S19, S18, 0xbb1, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x350
[0x350:0x356]
---
Predecessors: [0xbf]
Successors: [0x357, 0x35b]
---
0x350 JUMPDEST
0x351 CALLVALUE
0x352 ISZERO
0x353 PUSH2 0x35b
0x356 JUMPI
---
0x350: JUMPDEST 
0x351: V296 = CALLVALUE
0x352: V297 = ISZERO V296
0x353: V298 = 0x35b
0x356: JUMPI 0x35b V297
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x357
[0x357:0x35a]
---
Predecessors: [0x350]
Successors: []
---
0x357 PUSH1 0x0
0x359 DUP1
0x35a REVERT
---
0x357: V299 = 0x0
0x35a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35b
[0x35b:0x362]
---
Predecessors: [0x350]
Successors: [0xc89]
---
0x35b JUMPDEST
0x35c PUSH2 0x1f2
0x35f PUSH2 0xc89
0x362 JUMP
---
0x35b: JUMPDEST 
0x35c: V300 = 0x1f2
0x35f: V301 = 0xc89
0x362: JUMP 0xc89
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f2]
Exit stack: [V12, 0x1f2]

================================

Block 0x363
[0x363:0x37e]
---
Predecessors: []
Successors: []
---
0x363 JUMPDEST
0x364 PUSH1 0x40
0x366 MLOAD
0x367 PUSH1 0x1
0x369 PUSH1 0xa0
0x36b PUSH1 0x2
0x36d EXP
0x36e SUB
0x36f SWAP1
0x370 SWAP2
0x371 AND
0x372 DUP2
0x373 MSTORE
0x374 PUSH1 0x20
0x376 ADD
0x377 PUSH1 0x40
0x379 MLOAD
0x37a DUP1
0x37b SWAP2
0x37c SUB
0x37d SWAP1
0x37e RETURN
---
0x363: JUMPDEST 
0x364: V302 = 0x40
0x366: V303 = M[0x40]
0x367: V304 = 0x1
0x369: V305 = 0xa0
0x36b: V306 = 0x2
0x36d: V307 = EXP 0x2 0xa0
0x36e: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x371: V309 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x373: M[V303] = V309
0x374: V310 = 0x20
0x376: V311 = ADD 0x20 V303
0x377: V312 = 0x40
0x379: V313 = M[0x40]
0x37c: V314 = SUB V311 V313
0x37e: RETURN V313 V314
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x37f
[0x37f:0x385]
---
Predecessors: [0xca]
Successors: [0x386, 0x38a]
---
0x37f JUMPDEST
0x380 CALLVALUE
0x381 ISZERO
0x382 PUSH2 0x38a
0x385 JUMPI
---
0x37f: JUMPDEST 
0x380: V315 = CALLVALUE
0x381: V316 = ISZERO V315
0x382: V317 = 0x38a
0x385: JUMPI 0x38a V316
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x386
[0x386:0x389]
---
Predecessors: [0x37f]
Successors: []
---
0x386 PUSH1 0x0
0x388 DUP1
0x389 REVERT
---
0x386: V318 = 0x0
0x389: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x38a
[0x38a:0x391]
---
Predecessors: [0x37f]
Successors: [0xc98]
---
0x38a JUMPDEST
0x38b PUSH2 0x12d
0x38e PUSH2 0xc98
0x391 JUMP
---
0x38a: JUMPDEST 
0x38b: V319 = 0x12d
0x38e: V320 = 0xc98
0x391: JUMP 0xc98
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d]
Exit stack: [V12, 0x12d]

================================

Block 0x392
[0x392:0x3a3]
---
Predecessors: []
Successors: []
---
0x392 JUMPDEST
0x393 PUSH1 0x40
0x395 MLOAD
0x396 SWAP1
0x397 DUP2
0x398 MSTORE
0x399 PUSH1 0x20
0x39b ADD
0x39c PUSH1 0x40
0x39e MLOAD
0x39f DUP1
0x3a0 SWAP2
0x3a1 SUB
0x3a2 SWAP1
0x3a3 RETURN
---
0x392: JUMPDEST 
0x393: V321 = 0x40
0x395: V322 = M[0x40]
0x398: M[V322] = S0
0x399: V323 = 0x20
0x39b: V324 = ADD 0x20 V322
0x39c: V325 = 0x40
0x39e: V326 = M[0x40]
0x3a1: V327 = SUB V324 V326
0x3a3: RETURN V326 V327
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3a4
[0x3a4:0x3aa]
---
Predecessors: [0xd5]
Successors: [0x3ab, 0x3af]
---
0x3a4 JUMPDEST
0x3a5 CALLVALUE
0x3a6 ISZERO
0x3a7 PUSH2 0x3af
0x3aa JUMPI
---
0x3a4: JUMPDEST 
0x3a5: V328 = CALLVALUE
0x3a6: V329 = ISZERO V328
0x3a7: V330 = 0x3af
0x3aa: JUMPI 0x3af V329
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ab
[0x3ab:0x3ae]
---
Predecessors: [0x3a4]
Successors: []
---
0x3ab PUSH1 0x0
0x3ad DUP1
0x3ae REVERT
---
0x3ab: V331 = 0x0
0x3ae: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3af
[0x3af:0x3c5]
---
Predecessors: [0x3a4]
Successors: [0xc9e]
---
0x3af JUMPDEST
0x3b0 PUSH2 0x118
0x3b3 PUSH1 0x1
0x3b5 PUSH1 0xa0
0x3b7 PUSH1 0x2
0x3b9 EXP
0x3ba SUB
0x3bb PUSH1 0x4
0x3bd CALLDATALOAD
0x3be AND
0x3bf PUSH1 0x24
0x3c1 CALLDATALOAD
0x3c2 PUSH2 0xc9e
0x3c5 JUMP
---
0x3af: JUMPDEST 
0x3b0: V332 = 0x118
0x3b3: V333 = 0x1
0x3b5: V334 = 0xa0
0x3b7: V335 = 0x2
0x3b9: V336 = EXP 0x2 0xa0
0x3ba: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bb: V338 = 0x4
0x3bd: V339 = CALLDATALOAD 0x4
0x3be: V340 = AND V339 0xffffffffffffffffffffffffffffffffffffffff
0x3bf: V341 = 0x24
0x3c1: V342 = CALLDATALOAD 0x24
0x3c2: V343 = 0xc9e
0x3c5: JUMP 0xc9e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x118, V340, V342]
Exit stack: [V12, 0x118, V340, V342]

================================

Block 0x3c6
[0x3c6:0x3c7]
---
Predecessors: []
Successors: []
---
0x3c6 JUMPDEST
0x3c7 STOP
---
0x3c6: JUMPDEST 
0x3c7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3c8
[0x3c8:0x3ce]
---
Predecessors: [0xe0]
Successors: [0x3cf, 0x3d3]
---
0x3c8 JUMPDEST
0x3c9 CALLVALUE
0x3ca ISZERO
0x3cb PUSH2 0x3d3
0x3ce JUMPI
---
0x3c8: JUMPDEST 
0x3c9: V344 = CALLVALUE
0x3ca: V345 = ISZERO V344
0x3cb: V346 = 0x3d3
0x3ce: JUMPI 0x3d3 V345
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3cf
[0x3cf:0x3d2]
---
Predecessors: [0x3c8]
Successors: []
---
0x3cf PUSH1 0x0
0x3d1 DUP1
0x3d2 REVERT
---
0x3cf: V347 = 0x0
0x3d2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d3
[0x3d3:0x3e6]
---
Predecessors: [0x3c8]
Successors: [0xce4]
---
0x3d3 JUMPDEST
0x3d4 PUSH2 0x118
0x3d7 PUSH1 0x1
0x3d9 PUSH1 0xa0
0x3db PUSH1 0x2
0x3dd EXP
0x3de SUB
0x3df PUSH1 0x4
0x3e1 CALLDATALOAD
0x3e2 AND
0x3e3 PUSH2 0xce4
0x3e6 JUMP
---
0x3d3: JUMPDEST 
0x3d4: V348 = 0x118
0x3d7: V349 = 0x1
0x3d9: V350 = 0xa0
0x3db: V351 = 0x2
0x3dd: V352 = EXP 0x2 0xa0
0x3de: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3df: V354 = 0x4
0x3e1: V355 = CALLDATALOAD 0x4
0x3e2: V356 = AND V355 0xffffffffffffffffffffffffffffffffffffffff
0x3e3: V357 = 0xce4
0x3e6: JUMP 0xce4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x118, V356]
Exit stack: [V12, 0x118, V356]

================================

Block 0x3e7
[0x3e7:0x3e8]
---
Predecessors: []
Successors: []
---
0x3e7 JUMPDEST
0x3e8 STOP
---
0x3e7: JUMPDEST 
0x3e8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3e9
[0x3e9:0x3ef]
---
Predecessors: [0xeb]
Successors: [0x3f0, 0x3f4]
---
0x3e9 JUMPDEST
0x3ea CALLVALUE
0x3eb ISZERO
0x3ec PUSH2 0x3f4
0x3ef JUMPI
---
0x3e9: JUMPDEST 
0x3ea: V358 = CALLVALUE
0x3eb: V359 = ISZERO V358
0x3ec: V360 = 0x3f4
0x3ef: JUMPI 0x3f4 V359
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f0
[0x3f0:0x3f3]
---
Predecessors: [0x3e9]
Successors: []
---
0x3f0 PUSH1 0x0
0x3f2 DUP1
0x3f3 REVERT
---
0x3f0: V361 = 0x0
0x3f3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f4
[0x3f4:0x407]
---
Predecessors: [0x3e9]
Successors: [0xd4b]
---
0x3f4 JUMPDEST
0x3f5 PUSH2 0x12d
0x3f8 PUSH1 0x1
0x3fa PUSH1 0xa0
0x3fc PUSH1 0x2
0x3fe EXP
0x3ff SUB
0x400 PUSH1 0x4
0x402 CALLDATALOAD
0x403 AND
0x404 PUSH2 0xd4b
0x407 JUMP
---
0x3f4: JUMPDEST 
0x3f5: V362 = 0x12d
0x3f8: V363 = 0x1
0x3fa: V364 = 0xa0
0x3fc: V365 = 0x2
0x3fe: V366 = EXP 0x2 0xa0
0x3ff: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x400: V368 = 0x4
0x402: V369 = CALLDATALOAD 0x4
0x403: V370 = AND V369 0xffffffffffffffffffffffffffffffffffffffff
0x404: V371 = 0xd4b
0x407: JUMP 0xd4b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d, V370]
Exit stack: [V12, 0x12d, V370]

================================

Block 0x408
[0x408:0x419]
---
Predecessors: []
Successors: []
---
0x408 JUMPDEST
0x409 PUSH1 0x40
0x40b MLOAD
0x40c SWAP1
0x40d DUP2
0x40e MSTORE
0x40f PUSH1 0x20
0x411 ADD
0x412 PUSH1 0x40
0x414 MLOAD
0x415 DUP1
0x416 SWAP2
0x417 SUB
0x418 SWAP1
0x419 RETURN
---
0x408: JUMPDEST 
0x409: V372 = 0x40
0x40b: V373 = M[0x40]
0x40e: M[V373] = S0
0x40f: V374 = 0x20
0x411: V375 = ADD 0x20 V373
0x412: V376 = 0x40
0x414: V377 = M[0x40]
0x417: V378 = SUB V375 V377
0x419: RETURN V377 V378
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x41a
[0x41a:0x42d]
---
Predecessors: [0xf6]
Successors: [0x471]
---
0x41a JUMPDEST
0x41b PUSH2 0x1cb
0x41e PUSH1 0x1
0x420 PUSH1 0xa0
0x422 PUSH1 0x2
0x424 EXP
0x425 SUB
0x426 PUSH1 0x4
0x428 CALLDATALOAD
0x429 AND
0x42a PUSH2 0x471
0x42d JUMP
---
0x41a: JUMPDEST 
0x41b: V379 = 0x1cb
0x41e: V380 = 0x1
0x420: V381 = 0xa0
0x422: V382 = 0x2
0x424: V383 = EXP 0x2 0xa0
0x425: V384 = SUB 0x10000000000000000000000000000000000000000 0x1
0x426: V385 = 0x4
0x428: V386 = CALLDATALOAD 0x4
0x429: V387 = AND V386 0xffffffffffffffffffffffffffffffffffffffff
0x42a: V388 = 0x471
0x42d: JUMP 0x471
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1cb, V387]
Exit stack: [V12, 0x1cb, V387]

================================

Block 0x42e
[0x42e:0x441]
---
Predecessors: []
Successors: []
---
0x42e JUMPDEST
0x42f PUSH1 0x40
0x431 MLOAD
0x432 SWAP1
0x433 ISZERO
0x434 ISZERO
0x435 DUP2
0x436 MSTORE
0x437 PUSH1 0x20
0x439 ADD
0x43a PUSH1 0x40
0x43c MLOAD
0x43d DUP1
0x43e SWAP2
0x43f SUB
0x440 SWAP1
0x441 RETURN
---
0x42e: JUMPDEST 
0x42f: V389 = 0x40
0x431: V390 = M[0x40]
0x433: V391 = ISZERO S0
0x434: V392 = ISZERO V391
0x436: M[V390] = V392
0x437: V393 = 0x20
0x439: V394 = ADD 0x20 V390
0x43a: V395 = 0x40
0x43c: V396 = M[0x40]
0x43f: V397 = SUB V394 V396
0x441: RETURN V396 V397
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x442
[0x442:0x448]
---
Predecessors: [0x101]
Successors: [0x449, 0x44d]
---
0x442 JUMPDEST
0x443 CALLVALUE
0x444 ISZERO
0x445 PUSH2 0x44d
0x448 JUMPI
---
0x442: JUMPDEST 
0x443: V398 = CALLVALUE
0x444: V399 = ISZERO V398
0x445: V400 = 0x44d
0x448: JUMPI 0x44d V399
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x449
[0x449:0x44c]
---
Predecessors: [0x442]
Successors: []
---
0x449 PUSH1 0x0
0x44b DUP1
0x44c REVERT
---
0x449: V401 = 0x0
0x44c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x44d
[0x44d:0x454]
---
Predecessors: [0x442]
Successors: [0xd6a]
---
0x44d JUMPDEST
0x44e PUSH2 0x1f2
0x451 PUSH2 0xd6a
0x454 JUMP
---
0x44d: JUMPDEST 
0x44e: V402 = 0x1f2
0x451: V403 = 0xd6a
0x454: JUMP 0xd6a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f2]
Exit stack: [V12, 0x1f2]

================================

Block 0x455
[0x455:0x470]
---
Predecessors: []
Successors: []
---
0x455 JUMPDEST
0x456 PUSH1 0x40
0x458 MLOAD
0x459 PUSH1 0x1
0x45b PUSH1 0xa0
0x45d PUSH1 0x2
0x45f EXP
0x460 SUB
0x461 SWAP1
0x462 SWAP2
0x463 AND
0x464 DUP2
0x465 MSTORE
0x466 PUSH1 0x20
0x468 ADD
0x469 PUSH1 0x40
0x46b MLOAD
0x46c DUP1
0x46d SWAP2
0x46e SUB
0x46f SWAP1
0x470 RETURN
---
0x455: JUMPDEST 
0x456: V404 = 0x40
0x458: V405 = M[0x40]
0x459: V406 = 0x1
0x45b: V407 = 0xa0
0x45d: V408 = 0x2
0x45f: V409 = EXP 0x2 0xa0
0x460: V410 = SUB 0x10000000000000000000000000000000000000000 0x1
0x463: V411 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x465: M[V405] = V411
0x466: V412 = 0x20
0x468: V413 = ADD 0x20 V405
0x469: V414 = 0x40
0x46b: V415 = M[0x40]
0x46e: V416 = SUB V413 V415
0x470: RETURN V415 V416
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x471
[0x471:0x47c]
---
Predecessors: [0x10d, 0x41a]
Successors: [0x47d, 0x481]
---
0x471 JUMPDEST
0x472 PUSH1 0x0
0x474 DUP1
0x475 CALLVALUE
0x476 DUP2
0x477 SWAP1
0x478 GT
0x479 PUSH2 0x481
0x47c JUMPI
---
0x471: JUMPDEST 
0x472: V417 = 0x0
0x475: V418 = CALLVALUE
0x478: V419 = GT V418 0x0
0x479: V420 = 0x481
0x47c: JUMPI 0x481 V419
---
Entry stack: [V12, {0x116, 0x1cb}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, {0x116, 0x1cb}, S0, 0x0, 0x0]

================================

Block 0x47d
[0x47d:0x480]
---
Predecessors: [0x471]
Successors: []
---
0x47d PUSH1 0x0
0x47f DUP1
0x480 REVERT
---
0x47d: V421 = 0x0
0x480: REVERT 0x0 0x0
---
Entry stack: [V12, {0x116, 0x1cb}, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S2, 0x0, 0x0]

================================

Block 0x481
[0x481:0x496]
---
Predecessors: [0x471]
Successors: [0x497, 0x49b]
---
0x481 JUMPDEST
0x482 PUSH1 0x6
0x484 SLOAD
0x485 PUSH1 0xff
0x487 PUSH2 0x100
0x48a SWAP1
0x48b SWAP2
0x48c DIV
0x48d AND
0x48e ISZERO
0x48f ISZERO
0x490 PUSH1 0x1
0x492 EQ
0x493 PUSH2 0x49b
0x496 JUMPI
---
0x481: JUMPDEST 
0x482: V422 = 0x6
0x484: V423 = S[0x6]
0x485: V424 = 0xff
0x487: V425 = 0x100
0x48c: V426 = DIV V423 0x100
0x48d: V427 = AND V426 0xff
0x48e: V428 = ISZERO V427
0x48f: V429 = ISZERO V428
0x490: V430 = 0x1
0x492: V431 = EQ 0x1 V429
0x493: V432 = 0x49b
0x496: JUMPI 0x49b V431
---
Entry stack: [V12, {0x116, 0x1cb}, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S2, 0x0, 0x0]

================================

Block 0x497
[0x497:0x49a]
---
Predecessors: [0x481]
Successors: []
---
0x497 PUSH1 0x0
0x499 DUP1
0x49a REVERT
---
0x497: V433 = 0x0
0x49a: REVERT 0x0 0x0
---
Entry stack: [V12, {0x116, 0x1cb}, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S2, 0x0, 0x0]

================================

Block 0x49b
[0x49b:0x4b9]
---
Predecessors: [0x481]
Successors: [0x4ba, 0x4be]
---
0x49b JUMPDEST
0x49c PUSH1 0x6
0x49e SLOAD
0x49f CALLER
0x4a0 PUSH1 0x1
0x4a2 PUSH1 0xa0
0x4a4 PUSH1 0x2
0x4a6 EXP
0x4a7 SUB
0x4a8 SWAP1
0x4a9 DUP2
0x4aa AND
0x4ab PUSH4 0x1000000
0x4b0 SWAP1
0x4b1 SWAP3
0x4b2 DIV
0x4b3 AND
0x4b4 EQ
0x4b5 ISZERO
0x4b6 PUSH2 0x4be
0x4b9 JUMPI
---
0x49b: JUMPDEST 
0x49c: V434 = 0x6
0x49e: V435 = S[0x6]
0x49f: V436 = CALLER
0x4a0: V437 = 0x1
0x4a2: V438 = 0xa0
0x4a4: V439 = 0x2
0x4a6: V440 = EXP 0x2 0xa0
0x4a7: V441 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4aa: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x4ab: V443 = 0x1000000
0x4b2: V444 = DIV V435 0x1000000
0x4b3: V445 = AND V444 0xffffffffffffffffffffffffffffffffffffffff
0x4b4: V446 = EQ V445 V442
0x4b5: V447 = ISZERO V446
0x4b6: V448 = 0x4be
0x4b9: JUMPI 0x4be V447
---
Entry stack: [V12, {0x116, 0x1cb}, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S2, 0x0, 0x0]

================================

Block 0x4ba
[0x4ba:0x4bd]
---
Predecessors: [0x49b]
Successors: []
---
0x4ba PUSH1 0x0
0x4bc DUP1
0x4bd REVERT
---
0x4ba: V449 = 0x0
0x4bd: REVERT 0x0 0x0
---
Entry stack: [V12, {0x116, 0x1cb}, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S2, 0x0, 0x0]

================================

Block 0x4be
[0x4be:0x4cf]
---
Predecessors: [0x49b]
Successors: [0x4d0, 0x4d4]
---
0x4be JUMPDEST
0x4bf DUP3
0x4c0 PUSH1 0x1
0x4c2 PUSH1 0xa0
0x4c4 PUSH1 0x2
0x4c6 EXP
0x4c7 SUB
0x4c8 DUP2
0x4c9 AND
0x4ca ISZERO
0x4cb ISZERO
0x4cc PUSH2 0x4d4
0x4cf JUMPI
---
0x4be: JUMPDEST 
0x4c0: V450 = 0x1
0x4c2: V451 = 0xa0
0x4c4: V452 = 0x2
0x4c6: V453 = EXP 0x2 0xa0
0x4c7: V454 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c9: V455 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x4ca: V456 = ISZERO V455
0x4cb: V457 = ISZERO V456
0x4cc: V458 = 0x4d4
0x4cf: JUMPI 0x4d4 V457
---
Entry stack: [V12, {0x116, 0x1cb}, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V12, {0x116, 0x1cb}, S2, 0x0, 0x0, S2]

================================

Block 0x4d0
[0x4d0:0x4d3]
---
Predecessors: [0x4be]
Successors: []
---
0x4d0 PUSH1 0x0
0x4d2 DUP1
0x4d3 REVERT
---
0x4d0: V459 = 0x0
0x4d3: REVERT 0x0 0x0
---
Entry stack: [V12, {0x116, 0x1cb}, S3, 0x0, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S3, 0x0, 0x0, S0]

================================

Block 0x4d4
[0x4d4:0x4f5]
---
Predecessors: [0x4be]
Successors: [0x4f6, 0x4fa]
---
0x4d4 JUMPDEST
0x4d5 PUSH1 0x1
0x4d7 PUSH1 0xa0
0x4d9 PUSH1 0x2
0x4db EXP
0x4dc SUB
0x4dd DUP5
0x4de AND
0x4df PUSH1 0x0
0x4e1 SWAP1
0x4e2 DUP2
0x4e3 MSTORE
0x4e4 PUSH1 0x9
0x4e6 PUSH1 0x20
0x4e8 MSTORE
0x4e9 PUSH1 0x40
0x4eb SWAP1
0x4ec SHA3
0x4ed SLOAD
0x4ee CALLVALUE
0x4ef SWAP1
0x4f0 LT
0x4f1 ISZERO
0x4f2 PUSH2 0x4fa
0x4f5 JUMPI
---
0x4d4: JUMPDEST 
0x4d5: V460 = 0x1
0x4d7: V461 = 0xa0
0x4d9: V462 = 0x2
0x4db: V463 = EXP 0x2 0xa0
0x4dc: V464 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4de: V465 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x4df: V466 = 0x0
0x4e3: M[0x0] = V465
0x4e4: V467 = 0x9
0x4e6: V468 = 0x20
0x4e8: M[0x20] = 0x9
0x4e9: V469 = 0x40
0x4ec: V470 = SHA3 0x0 0x40
0x4ed: V471 = S[V470]
0x4ee: V472 = CALLVALUE
0x4f0: V473 = LT V471 V472
0x4f1: V474 = ISZERO V473
0x4f2: V475 = 0x4fa
0x4f5: JUMPI 0x4fa V474
---
Entry stack: [V12, {0x116, 0x1cb}, S3, 0x0, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, {0x116, 0x1cb}, S3, 0x0, 0x0, S0]

================================

Block 0x4f6
[0x4f6:0x4f9]
---
Predecessors: [0x4d4]
Successors: []
---
0x4f6 PUSH1 0x0
0x4f8 DUP1
0x4f9 REVERT
---
0x4f6: V476 = 0x0
0x4f9: REVERT 0x0 0x0
---
Entry stack: [V12, {0x116, 0x1cb}, S3, 0x0, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S3, 0x0, 0x0, S0]

================================

Block 0x4fa
[0x4fa:0x522]
---
Predecessors: [0x4d4]
Successors: [0xd79]
---
0x4fa JUMPDEST
0x4fb PUSH1 0x1
0x4fd PUSH1 0xa0
0x4ff PUSH1 0x2
0x501 EXP
0x502 SUB
0x503 DUP5
0x504 AND
0x505 PUSH1 0x0
0x507 SWAP1
0x508 DUP2
0x509 MSTORE
0x50a PUSH1 0x9
0x50c PUSH1 0x20
0x50e MSTORE
0x50f PUSH1 0x40
0x511 SWAP1
0x512 SHA3
0x513 SLOAD
0x514 PUSH2 0x523
0x517 SWAP1
0x518 CALLVALUE
0x519 PUSH4 0xffffffff
0x51e PUSH2 0xd79
0x521 AND
0x522 JUMP
---
0x4fa: JUMPDEST 
0x4fb: V477 = 0x1
0x4fd: V478 = 0xa0
0x4ff: V479 = 0x2
0x501: V480 = EXP 0x2 0xa0
0x502: V481 = SUB 0x10000000000000000000000000000000000000000 0x1
0x504: V482 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x505: V483 = 0x0
0x509: M[0x0] = V482
0x50a: V484 = 0x9
0x50c: V485 = 0x20
0x50e: M[0x20] = 0x9
0x50f: V486 = 0x40
0x512: V487 = SHA3 0x0 0x40
0x513: V488 = S[V487]
0x514: V489 = 0x523
0x518: V490 = CALLVALUE
0x519: V491 = 0xffffffff
0x51e: V492 = 0xd79
0x521: V493 = AND 0xd79 0xffffffff
0x522: JUMP 0xd79
---
Entry stack: [V12, {0x116, 0x1cb}, S3, 0x0, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x523, V488, V490]
Exit stack: [V12, {0x116, 0x1cb}, S3, 0x0, 0x0, S0, 0x523, V488, V490]

================================

Block 0x523
[0x523:0x53f]
---
Predecessors: [0xd8a]
Successors: [0x540]
---
0x523 JUMPDEST
0x524 PUSH1 0x1
0x526 PUSH1 0xa0
0x528 PUSH1 0x2
0x52a EXP
0x52b SUB
0x52c DUP6
0x52d AND
0x52e PUSH1 0x0
0x530 SWAP1
0x531 DUP2
0x532 MSTORE
0x533 PUSH1 0x9
0x535 PUSH1 0x20
0x537 MSTORE
0x538 PUSH1 0x40
0x53a DUP2
0x53b SHA3
0x53c SWAP2
0x53d SWAP1
0x53e SWAP2
0x53f SSTORE
---
0x523: JUMPDEST 
0x524: V494 = 0x1
0x526: V495 = 0xa0
0x528: V496 = 0x2
0x52a: V497 = EXP 0x2 0xa0
0x52b: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52d: V499 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x52e: V500 = 0x0
0x532: M[0x0] = V499
0x533: V501 = 0x9
0x535: V502 = 0x20
0x537: M[0x20] = 0x9
0x538: V503 = 0x40
0x53b: V504 = SHA3 0x0 0x40
0x53f: S[V504] = V1265
---
Entry stack: [V12, {0x116, 0x1cb}, S4, 0x0, 0x0, S1, V1265]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x0]
Exit stack: [V12, {0x116, 0x1cb}, S4, 0x0, 0x0, S1, 0x0]

================================

Block 0x540
[0x540:0x547]
---
Predecessors: [0x523]
Successors: [0x705]
---
0x540 JUMPDEST
0x541 PUSH2 0x548
0x544 PUSH2 0x705
0x547 JUMP
---
0x540: JUMPDEST 
0x541: V505 = 0x548
0x544: V506 = 0x705
0x547: JUMP 0x705
---
Entry stack: [V12, {0x116, 0x1cb}, S4, 0x0, 0x0, S1, 0x0]
Stack pops: 0
Stack additions: [0x548]
Exit stack: [V12, {0x116, 0x1cb}, S4, 0x0, 0x0, S1, 0x0, 0x548]

================================

Block 0x548
[0x548:0x551]
---
Predecessors: [0x735]
Successors: [0x552, 0x553]
---
0x548 JUMPDEST
0x549 PUSH1 0x1
0x54b DUP2
0x54c GT
0x54d ISZERO
0x54e PUSH2 0x553
0x551 JUMPI
---
0x548: JUMPDEST 
0x549: V507 = 0x1
0x54c: V508 = GT {0x0, 0x1, 0x5, 0xa, 0xf, 0x14} 0x1
0x54d: V509 = ISZERO V508
0x54e: V510 = 0x553
0x551: JUMPI 0x553 V509
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]

================================

Block 0x552
[0x552:0x552]
---
Predecessors: [0x548]
Successors: []
---
0x552 INVALID
---
0x552: INVALID 
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 0
Stack additions: []
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]

================================

Block 0x553
[0x553:0x559]
---
Predecessors: [0x548]
Successors: [0x55a, 0x575]
---
0x553 JUMPDEST
0x554 EQ
0x555 ISZERO
0x556 PUSH2 0x575
0x559 JUMPI
---
0x553: JUMPDEST 
0x554: V511 = EQ {0x0, 0x1, 0x5, 0xa, 0xf, 0x14} S1
0x555: V512 = ISZERO V511
0x556: V513 = 0x575
0x559: JUMPI 0x575 V512
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 2
Stack additions: []
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x55a
[0x55a:0x561]
---
Predecessors: [0x553]
Successors: [0xd90]
---
0x55a PUSH2 0x562
0x55d DUP5
0x55e PUSH2 0xd90
0x561 JUMP
---
0x55a: V514 = 0x562
0x55e: V515 = 0xd90
0x561: JUMP 0xd90
---
Entry stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x562, S3]
Exit stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x562, S3]

================================

Block 0x562
[0x562:0x567]
---
Predecessors: [0x6f9, 0xbc7, 0x1009]
Successors: [0x568, 0x570]
---
0x562 JUMPDEST
0x563 ISZERO
0x564 PUSH2 0x570
0x567 JUMPI
---
0x562: JUMPDEST 
0x563: V516 = ISZERO S0
0x564: V517 = 0x570
0x567: JUMPI 0x570 V516
---
Entry stack: [S20, S19, S18, 0xbb1, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S20, S19, S18, 0xbb1, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x568
[0x568:0x56f]
---
Predecessors: [0x562]
Successors: [0x6f3]
---
0x568 PUSH1 0x1
0x56a SWAP3
0x56b POP
0x56c PUSH2 0x6f3
0x56f JUMP
---
0x568: V518 = 0x1
0x56c: V519 = 0x6f3
0x56f: JUMP 0x6f3
---
Entry stack: [S19, S18, S17, 0xbb1, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [0x1, S1, S0]
Exit stack: [S19, S18, S17, 0xbb1, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1, S1, S0]

================================

Block 0x570
[0x570:0x574]
---
Predecessors: [0x562, 0x620, 0xb0f]
Successors: []
---
0x570 JUMPDEST
0x571 PUSH1 0x0
0x573 DUP1
0x574 REVERT
---
0x570: JUMPDEST 
0x571: V520 = 0x0
0x574: REVERT 0x0 0x0
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x575
[0x575:0x580]
---
Predecessors: [0x553]
Successors: [0x581, 0x588]
---
0x575 JUMPDEST
0x576 PUSH1 0x2
0x578 SLOAD
0x579 TIMESTAMP
0x57a LT
0x57b DUP1
0x57c ISZERO
0x57d PUSH2 0x588
0x580 JUMPI
---
0x575: JUMPDEST 
0x576: V521 = 0x2
0x578: V522 = S[0x2]
0x579: V523 = TIMESTAMP
0x57a: V524 = LT V523 V522
0x57c: V525 = ISZERO V524
0x57d: V526 = 0x588
0x580: JUMPI 0x588 V525
---
Entry stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V524]
Exit stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V524]

================================

Block 0x581
[0x581:0x587]
---
Predecessors: [0x575]
Successors: [0x588]
---
0x581 POP
0x582 PUSH1 0x6
0x584 SLOAD
0x585 PUSH1 0xff
0x587 AND
---
0x582: V527 = 0x6
0x584: V528 = S[0x6]
0x585: V529 = 0xff
0x587: V530 = AND 0xff V528
---
Entry stack: [S24, S23, 0xbb1, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V524]
Stack pops: 1
Stack additions: [V530]
Exit stack: [S24, S23, 0xbb1, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V530]

================================

Block 0x588
[0x588:0x58e]
---
Predecessors: [0x575, 0x581]
Successors: [0x58f, 0x593]
---
0x588 JUMPDEST
0x589 ISZERO
0x58a ISZERO
0x58b PUSH2 0x593
0x58e JUMPI
---
0x588: JUMPDEST 
0x589: V531 = ISZERO S0
0x58a: V532 = ISZERO V531
0x58b: V533 = 0x593
0x58e: JUMPI 0x593 V532
---
Entry stack: [S24, S23, 0xbb1, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S24, S23, 0xbb1, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x58f
[0x58f:0x592]
---
Predecessors: [0x588]
Successors: []
---
0x58f PUSH1 0x0
0x591 DUP1
0x592 REVERT
---
0x58f: V534 = 0x0
0x592: REVERT 0x0 0x0
---
Entry stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x593
[0x593:0x59b]
---
Predecessors: [0x588]
Successors: [0xf0d]
---
0x593 JUMPDEST
0x594 PUSH2 0x59c
0x597 CALLVALUE
0x598 PUSH2 0xf0d
0x59b JUMP
---
0x593: JUMPDEST 
0x594: V535 = 0x59c
0x597: V536 = CALLVALUE
0x598: V537 = 0xf0d
0x59b: JUMP 0xf0d
---
Entry stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x59c, V536]
Exit stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x59c, V536]

================================

Block 0x59c
[0x59c:0x5a7]
---
Predecessors: [0x7e3]
Successors: [0xf4b]
---
0x59c JUMPDEST
0x59d PUSH2 0x5a8
0x5a0 PUSH1 0x4
0x5a2 SLOAD
0x5a3 CALLVALUE
0x5a4 PUSH2 0xf4b
0x5a7 JUMP
---
0x59c: JUMPDEST 
0x59d: V538 = 0x5a8
0x5a0: V539 = 0x4
0x5a2: V540 = S[0x4]
0x5a3: V541 = CALLVALUE
0x5a4: V542 = 0xf4b
0x5a7: JUMP 0xf4b
---
Entry stack: [V12, {0x116, 0x1cb}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x5a8, V540, V541]
Exit stack: [V12, {0x116, 0x1cb}, S7, S6, S5, S4, S3, S2, S1, S0, 0x5a8, V540, V541]

================================

Block 0x5a8
[0x5a8:0x60a]
---
Predecessors: [0xbc7, 0xf8a, 0x1009]
Successors: [0x60b, 0x60f]
---
0x5a8 JUMPDEST
0x5a9 PUSH1 0x0
0x5ab DUP1
0x5ac SLOAD
0x5ad SWAP2
0x5ae SWAP4
0x5af POP
0x5b0 PUSH1 0x1
0x5b2 PUSH1 0xa0
0x5b4 PUSH1 0x2
0x5b6 EXP
0x5b7 SUB
0x5b8 SWAP1
0x5b9 SWAP2
0x5ba AND
0x5bb SWAP1
0x5bc PUSH4 0xa9059cbb
0x5c1 SWAP1
0x5c2 DUP7
0x5c3 SWAP1
0x5c4 DUP6
0x5c5 SWAP1
0x5c6 PUSH1 0x40
0x5c8 MLOAD
0x5c9 PUSH1 0x20
0x5cb ADD
0x5cc MSTORE
0x5cd PUSH1 0x40
0x5cf MLOAD
0x5d0 PUSH1 0xe0
0x5d2 PUSH1 0x2
0x5d4 EXP
0x5d5 PUSH4 0xffffffff
0x5da DUP6
0x5db AND
0x5dc MUL
0x5dd DUP2
0x5de MSTORE
0x5df PUSH1 0x1
0x5e1 PUSH1 0xa0
0x5e3 PUSH1 0x2
0x5e5 EXP
0x5e6 SUB
0x5e7 SWAP1
0x5e8 SWAP3
0x5e9 AND
0x5ea PUSH1 0x4
0x5ec DUP4
0x5ed ADD
0x5ee MSTORE
0x5ef PUSH1 0x24
0x5f1 DUP3
0x5f2 ADD
0x5f3 MSTORE
0x5f4 PUSH1 0x44
0x5f6 ADD
0x5f7 PUSH1 0x20
0x5f9 PUSH1 0x40
0x5fb MLOAD
0x5fc DUP1
0x5fd DUP4
0x5fe SUB
0x5ff DUP2
0x600 PUSH1 0x0
0x602 DUP8
0x603 DUP1
0x604 EXTCODESIZE
0x605 ISZERO
0x606 ISZERO
0x607 PUSH2 0x60f
0x60a JUMPI
---
0x5a8: JUMPDEST 
0x5a9: V543 = 0x0
0x5ac: V544 = S[0x0]
0x5b0: V545 = 0x1
0x5b2: V546 = 0xa0
0x5b4: V547 = 0x2
0x5b6: V548 = EXP 0x2 0xa0
0x5b7: V549 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ba: V550 = AND V544 0xffffffffffffffffffffffffffffffffffffffff
0x5bc: V551 = 0xa9059cbb
0x5c6: V552 = 0x40
0x5c8: V553 = M[0x40]
0x5c9: V554 = 0x20
0x5cb: V555 = ADD 0x20 V553
0x5cc: M[V555] = 0x0
0x5cd: V556 = 0x40
0x5cf: V557 = M[0x40]
0x5d0: V558 = 0xe0
0x5d2: V559 = 0x2
0x5d4: V560 = EXP 0x2 0xe0
0x5d5: V561 = 0xffffffff
0x5db: V562 = AND 0xa9059cbb 0xffffffff
0x5dc: V563 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x5de: M[V557] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5df: V564 = 0x1
0x5e1: V565 = 0xa0
0x5e3: V566 = 0x2
0x5e5: V567 = EXP 0x2 0xa0
0x5e6: V568 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e9: V569 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x5ea: V570 = 0x4
0x5ed: V571 = ADD V557 0x4
0x5ee: M[V571] = V569
0x5ef: V572 = 0x24
0x5f2: V573 = ADD V557 0x24
0x5f3: M[V573] = S0
0x5f4: V574 = 0x44
0x5f6: V575 = ADD 0x44 V557
0x5f7: V576 = 0x20
0x5f9: V577 = 0x40
0x5fb: V578 = M[0x40]
0x5fe: V579 = SUB V575 V578
0x600: V580 = 0x0
0x604: V581 = EXTCODESIZE V550
0x605: V582 = ISZERO V581
0x606: V583 = ISZERO V582
0x607: V584 = 0x60f
0x60a: JUMPI 0x60f V583
---
Entry stack: [S20, S19, S18, 0xbb1, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S0, S1, V550, 0xa9059cbb, V575, 0x20, V578, V579, V578, 0x0, V550]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, S1, V550, 0xa9059cbb, V575, 0x20, V578, V579, V578, 0x0, V550]

================================

Block 0x60b
[0x60b:0x60e]
---
Predecessors: [0x5a8]
Successors: []
---
0x60b PUSH1 0x0
0x60d DUP1
0x60e REVERT
---
0x60b: V585 = 0x0
0x60e: REVERT 0x0 0x0
---
Entry stack: [S24, S23, 0xbb1, 0xde0b6b3a7640000, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V550, 0xa9059cbb, V575, 0x20, V578, V579, V578, 0x0, V550]
Stack pops: 0
Stack additions: []
Exit stack: [S24, S23, 0xbb1, 0xde0b6b3a7640000, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V550, 0xa9059cbb, V575, 0x20, V578, V579, V578, 0x0, V550]

================================

Block 0x60f
[0x60f:0x61b]
---
Predecessors: [0x5a8]
Successors: [0x61c, 0x620]
---
0x60f JUMPDEST
0x610 PUSH2 0x2c6
0x613 GAS
0x614 SUB
0x615 CALL
0x616 ISZERO
0x617 ISZERO
0x618 PUSH2 0x620
0x61b JUMPI
---
0x60f: JUMPDEST 
0x610: V586 = 0x2c6
0x613: V587 = GAS
0x614: V588 = SUB V587 0x2c6
0x615: V589 = CALL V588 V550 0x0 V578 V579 V578 0x20
0x616: V590 = ISZERO V589
0x617: V591 = ISZERO V590
0x618: V592 = 0x620
0x61b: JUMPI 0x620 V591
---
Entry stack: [S24, S23, 0xbb1, 0xde0b6b3a7640000, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V550, 0xa9059cbb, V575, 0x20, V578, V579, V578, 0x0, V550]
Stack pops: 6
Stack additions: []
Exit stack: [S24, S23, 0xbb1, 0xde0b6b3a7640000, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V550, 0xa9059cbb, V575]

================================

Block 0x61c
[0x61c:0x61f]
---
Predecessors: [0x60f]
Successors: []
---
0x61c PUSH1 0x0
0x61e DUP1
0x61f REVERT
---
0x61c: V593 = 0x0
0x61f: REVERT 0x0 0x0
---
Entry stack: [S18, S17, 0xbb1, 0xde0b6b3a7640000, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V550, 0xa9059cbb, V575]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, 0xbb1, 0xde0b6b3a7640000, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V550, 0xa9059cbb, V575]

================================

Block 0x620
[0x620:0x62f]
---
Predecessors: [0x60f]
Successors: [0x570, 0x630]
---
0x620 JUMPDEST
0x621 POP
0x622 POP
0x623 POP
0x624 PUSH1 0x40
0x626 MLOAD
0x627 DUP1
0x628 MLOAD
0x629 SWAP1
0x62a POP
0x62b ISZERO
0x62c PUSH2 0x570
0x62f JUMPI
---
0x620: JUMPDEST 
0x624: V594 = 0x40
0x626: V595 = M[0x40]
0x628: V596 = M[V595]
0x62b: V597 = ISZERO V596
0x62c: V598 = 0x570
0x62f: JUMPI 0x570 V597
---
Entry stack: [S18, S17, 0xbb1, 0xde0b6b3a7640000, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V550, 0xa9059cbb, V575]
Stack pops: 3
Stack additions: []
Exit stack: [S18, S17, 0xbb1, 0xde0b6b3a7640000, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x630
[0x630:0x672]
---
Predecessors: [0x620]
Successors: [0x673, 0x677]
---
0x630 PUSH1 0x0
0x632 SLOAD
0x633 PUSH1 0x1
0x635 PUSH1 0xa0
0x637 PUSH1 0x2
0x639 EXP
0x63a SUB
0x63b AND
0x63c PUSH4 0x52e97326
0x641 DUP4
0x642 PUSH1 0x40
0x644 MLOAD
0x645 PUSH1 0xe0
0x647 PUSH1 0x2
0x649 EXP
0x64a PUSH4 0xffffffff
0x64f DUP5
0x650 AND
0x651 MUL
0x652 DUP2
0x653 MSTORE
0x654 PUSH1 0x4
0x656 DUP2
0x657 ADD
0x658 SWAP2
0x659 SWAP1
0x65a SWAP2
0x65b MSTORE
0x65c PUSH1 0x24
0x65e ADD
0x65f PUSH1 0x0
0x661 PUSH1 0x40
0x663 MLOAD
0x664 DUP1
0x665 DUP4
0x666 SUB
0x667 DUP2
0x668 PUSH1 0x0
0x66a DUP8
0x66b DUP1
0x66c EXTCODESIZE
0x66d ISZERO
0x66e ISZERO
0x66f PUSH2 0x677
0x672 JUMPI
---
0x630: V599 = 0x0
0x632: V600 = S[0x0]
0x633: V601 = 0x1
0x635: V602 = 0xa0
0x637: V603 = 0x2
0x639: V604 = EXP 0x2 0xa0
0x63a: V605 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63b: V606 = AND 0xffffffffffffffffffffffffffffffffffffffff V600
0x63c: V607 = 0x52e97326
0x642: V608 = 0x40
0x644: V609 = M[0x40]
0x645: V610 = 0xe0
0x647: V611 = 0x2
0x649: V612 = EXP 0x2 0xe0
0x64a: V613 = 0xffffffff
0x650: V614 = AND 0x52e97326 0xffffffff
0x651: V615 = MUL 0x52e97326 0x100000000000000000000000000000000000000000000000000000000
0x653: M[V609] = 0x52e9732600000000000000000000000000000000000000000000000000000000
0x654: V616 = 0x4
0x657: V617 = ADD V609 0x4
0x65b: M[V617] = S1
0x65c: V618 = 0x24
0x65e: V619 = ADD 0x24 V609
0x65f: V620 = 0x0
0x661: V621 = 0x40
0x663: V622 = M[0x40]
0x666: V623 = SUB V619 V622
0x668: V624 = 0x0
0x66c: V625 = EXTCODESIZE V606
0x66d: V626 = ISZERO V625
0x66e: V627 = ISZERO V626
0x66f: V628 = 0x677
0x672: JUMPI 0x677 V627
---
Entry stack: [S15, S14, 0xbb1, 0xde0b6b3a7640000, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V606, 0x52e97326, V619, 0x0, V622, V623, V622, 0x0, V606]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V606, 0x52e97326, V619, 0x0, V622, V623, V622, 0x0, V606]

================================

Block 0x673
[0x673:0x676]
---
Predecessors: [0x630]
Successors: []
---
0x673 PUSH1 0x0
0x675 DUP1
0x676 REVERT
---
0x673: V629 = 0x0
0x676: REVERT 0x0 0x0
---
Entry stack: [S22, S21, S20, S19, 0x562, S17, S16, S15, S14, S13, S12, S11, S10, S9, V606, 0x52e97326, V619, 0x0, V622, V623, V622, 0x0, V606]
Stack pops: 0
Stack additions: []
Exit stack: [S22, S21, S20, S19, 0x562, S17, S16, S15, S14, S13, S12, S11, S10, S9, V606, 0x52e97326, V619, 0x0, V622, V623, V622, 0x0, V606]

================================

Block 0x677
[0x677:0x683]
---
Predecessors: [0x630]
Successors: [0x684, 0x688]
---
0x677 JUMPDEST
0x678 PUSH2 0x2c6
0x67b GAS
0x67c SUB
0x67d CALL
0x67e ISZERO
0x67f ISZERO
0x680 PUSH2 0x688
0x683 JUMPI
---
0x677: JUMPDEST 
0x678: V630 = 0x2c6
0x67b: V631 = GAS
0x67c: V632 = SUB V631 0x2c6
0x67d: V633 = CALL V632 V606 0x0 V622 V623 V622 0x0
0x67e: V634 = ISZERO V633
0x67f: V635 = ISZERO V634
0x680: V636 = 0x688
0x683: JUMPI 0x688 V635
---
Entry stack: [S19, 0x562, S17, S16, S15, S14, S13, S12, S11, S10, S9, V606, 0x52e97326, V619, 0x0, V622, V623, V622, 0x0, V606]
Stack pops: 6
Stack additions: []
Exit stack: [S19, 0x562, S17, S16, S15, S14, S13, S12, S11, S10, S9, V606, 0x52e97326, V619]

================================

Block 0x684
[0x684:0x687]
---
Predecessors: [0x677]
Successors: []
---
0x684 PUSH1 0x0
0x686 DUP1
0x687 REVERT
---
0x684: V637 = 0x0
0x687: REVERT 0x0 0x0
---
Entry stack: [S13, 0x562, S11, S10, S9, S8, S7, S6, S5, S4, S3, V606, 0x52e97326, V619]
Stack pops: 0
Stack additions: []
Exit stack: [S13, 0x562, S11, S10, S9, S8, S7, S6, S5, S4, S3, V606, 0x52e97326, V619]

================================

Block 0x688
[0x688:0x69d]
---
Predecessors: [0x677]
Successors: [0xf92]
---
0x688 JUMPDEST
0x689 POP
0x68a POP
0x68b PUSH1 0x3
0x68d SLOAD
0x68e PUSH2 0x69e
0x691 SWAP2
0x692 POP
0x693 CALLVALUE
0x694 PUSH4 0xffffffff
0x699 PUSH2 0xf92
0x69c AND
0x69d JUMP
---
0x688: JUMPDEST 
0x68b: V638 = 0x3
0x68d: V639 = S[0x3]
0x68e: V640 = 0x69e
0x693: V641 = CALLVALUE
0x694: V642 = 0xffffffff
0x699: V643 = 0xf92
0x69c: V644 = AND 0xf92 0xffffffff
0x69d: JUMP 0xf92
---
Entry stack: [S13, 0x562, S11, S10, S9, S8, S7, S6, S5, S4, S3, V606, 0x52e97326, V619]
Stack pops: 3
Stack additions: [0x69e, V639, V641]
Exit stack: [S13, 0x562, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x69e, V639, V641]

================================

Block 0x69e
[0x69e:0x6ed]
---
Predecessors: [0xfa5]
Successors: [0x6f3]
---
0x69e JUMPDEST
0x69f PUSH1 0x3
0x6a1 SSTORE
0x6a2 PUSH1 0x1
0x6a4 PUSH1 0xa0
0x6a6 PUSH1 0x2
0x6a8 EXP
0x6a9 SUB
0x6aa DUP5
0x6ab AND
0x6ac PUSH32 0xcd60aa75dea3072fbc07ae6d7d856b5dc5f4eee88854f5b4abf7b680ef8bc50f
0x6cd CALLVALUE
0x6ce DUP5
0x6cf PUSH1 0x40
0x6d1 MLOAD
0x6d2 SWAP2
0x6d3 DUP3
0x6d4 MSTORE
0x6d5 PUSH1 0x20
0x6d7 DUP3
0x6d8 ADD
0x6d9 MSTORE
0x6da PUSH1 0x40
0x6dc SWAP1
0x6dd DUP2
0x6de ADD
0x6df SWAP1
0x6e0 MLOAD
0x6e1 DUP1
0x6e2 SWAP2
0x6e3 SUB
0x6e4 SWAP1
0x6e5 LOG2
0x6e6 PUSH1 0x1
0x6e8 SWAP3
0x6e9 POP
0x6ea PUSH2 0x6f3
0x6ed JUMP
---
0x69e: JUMPDEST 
0x69f: V645 = 0x3
0x6a1: S[0x3] = S0
0x6a2: V646 = 0x1
0x6a4: V647 = 0xa0
0x6a6: V648 = 0x2
0x6a8: V649 = EXP 0x2 0xa0
0x6a9: V650 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ab: V651 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x6ac: V652 = 0xcd60aa75dea3072fbc07ae6d7d856b5dc5f4eee88854f5b4abf7b680ef8bc50f
0x6cd: V653 = CALLVALUE
0x6cf: V654 = 0x40
0x6d1: V655 = M[0x40]
0x6d4: M[V655] = V653
0x6d5: V656 = 0x20
0x6d8: V657 = ADD V655 0x20
0x6d9: M[V657] = S2
0x6da: V658 = 0x40
0x6de: V659 = ADD 0x40 V655
0x6e0: V660 = M[0x40]
0x6e3: V661 = SUB V659 V660
0x6e5: LOG V660 V661 0xcd60aa75dea3072fbc07ae6d7d856b5dc5f4eee88854f5b4abf7b680ef8bc50f V651
0x6e6: V662 = 0x1
0x6ea: V663 = 0x6f3
0x6ed: JUMP 0x6f3
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, 0x1, S2, S1]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x1, S2, S1]

================================

Block 0x6ee
[0x6ee:0x6f2]
---
Predecessors: []
Successors: []
---
0x6ee JUMPDEST
0x6ef PUSH1 0x0
0x6f1 DUP1
0x6f2 REVERT
---
0x6ee: JUMPDEST 
0x6ef: V664 = 0x0
0x6f2: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6f3
[0x6f3:0x6f3]
---
Predecessors: [0x568, 0x69e]
Successors: [0x6f4]
---
0x6f3 JUMPDEST
---
0x6f3: JUMPDEST 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1, S1, S0]

================================

Block 0x6f4
[0x6f4:0x6f4]
---
Predecessors: [0x6f3]
Successors: [0x6f5]
---
0x6f4 JUMPDEST
---
0x6f4: JUMPDEST 
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1, S1, S0]

================================

Block 0x6f5
[0x6f5:0x6f6]
---
Predecessors: [0x6f4]
Successors: [0x6f7]
---
0x6f5 JUMPDEST
0x6f6 POP
---
0x6f5: JUMPDEST 
---
Entry stack: [S11, S10, S9, 0xde0b6b3a7640000, S7, S6, S5, S4, S3, 0x1, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S11, S10, S9, 0xde0b6b3a7640000, S7, S6, S5, S4, S3, 0x1, S1]

================================

Block 0x6f7
[0x6f7:0x6f7]
---
Predecessors: [0x6f5, 0xead, 0xefd]
Successors: [0x6f8]
---
0x6f7 JUMPDEST
---
0x6f7: JUMPDEST 
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x1}, S0]

================================

Block 0x6f8
[0x6f8:0x6f8]
---
Predecessors: [0x6f7]
Successors: [0x6f9]
---
0x6f8 JUMPDEST
---
0x6f8: JUMPDEST 
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x1}, S0]

================================

Block 0x6f9
[0x6f9:0x6fe]
---
Predecessors: [0x6f8]
Successors: [0x116, 0x118, 0x12d, 0x33a, 0x562, 0xbb1]
---
0x6f9 JUMPDEST
0x6fa POP
0x6fb SWAP2
0x6fc SWAP1
0x6fd POP
0x6fe JUMP
---
0x6f9: JUMPDEST 
0x6fe: JUMP S3
---
Entry stack: [S15, S14, 0xbb1, 0xde0b6b3a7640000, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [S15, S14, 0xbb1, 0xde0b6b3a7640000, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x1}]

================================

Block 0x6ff
[0x6ff:0x704]
---
Predecessors: [0x125]
Successors: [0x12d]
---
0x6ff JUMPDEST
0x700 PUSH1 0x2
0x702 SLOAD
0x703 DUP2
0x704 JUMP
---
0x6ff: JUMPDEST 
0x700: V665 = 0x2
0x702: V666 = S[0x2]
0x704: JUMP 0x12d
---
Entry stack: [V12, 0x12d]
Stack pops: 1
Stack additions: [S0, V666]
Exit stack: [V12, 0x12d, V666]

================================

Block 0x705
[0x705:0x715]
---
Predecessors: [0x14a, 0x540, 0xad9, 0xb6a, 0xc0c, 0xc46]
Successors: [0x716, 0x724]
---
0x705 JUMPDEST
0x706 PUSH1 0x6
0x708 SLOAD
0x709 PUSH1 0x0
0x70b SWAP1
0x70c PUSH1 0xff
0x70e AND
0x70f ISZERO
0x710 DUP1
0x711 ISZERO
0x712 PUSH2 0x724
0x715 JUMPI
---
0x705: JUMPDEST 
0x706: V667 = 0x6
0x708: V668 = S[0x6]
0x709: V669 = 0x0
0x70c: V670 = 0xff
0x70e: V671 = AND 0xff V668
0x70f: V672 = ISZERO V671
0x711: V673 = ISZERO V672
0x712: V674 = 0x724
0x715: JUMPI 0x724 V673
---
Entry stack: [V12, {0x116, 0x1cb}, S5, S4, S3, S2, S1, {0x152, 0x548, 0xae1, 0xb72, 0xc14, 0xc4e}]
Stack pops: 0
Stack additions: [0x0, V672]
Exit stack: [V12, {0x116, 0x1cb}, S5, S4, S3, S2, S1, {0x152, 0x548, 0xae1, 0xb72, 0xc14, 0xc4e}, 0x0, V672]

================================

Block 0x716
[0x716:0x723]
---
Predecessors: [0x705]
Successors: [0x724]
---
0x716 POP
0x717 PUSH1 0x6
0x719 SLOAD
0x71a PUSH3 0x10000
0x71e SWAP1
0x71f DIV
0x720 PUSH1 0xff
0x722 AND
0x723 ISZERO
---
0x717: V675 = 0x6
0x719: V676 = S[0x6]
0x71a: V677 = 0x10000
0x71f: V678 = DIV V676 0x10000
0x720: V679 = 0xff
0x722: V680 = AND 0xff V678
0x723: V681 = ISZERO V680
---
Entry stack: [V12, {0x116, 0x1cb}, S7, S6, S5, S4, S3, {0x152, 0x548, 0xae1, 0xb72, 0xc14, 0xc4e}, 0x0, V672]
Stack pops: 1
Stack additions: [V681]
Exit stack: [V12, {0x116, 0x1cb}, S7, S6, S5, S4, S3, {0x152, 0x548, 0xae1, 0xb72, 0xc14, 0xc4e}, 0x0, V681]

================================

Block 0x724
[0x724:0x729]
---
Predecessors: [0x705, 0x716]
Successors: [0x72a, 0x731]
---
0x724 JUMPDEST
0x725 ISZERO
0x726 PUSH2 0x731
0x729 JUMPI
---
0x724: JUMPDEST 
0x725: V682 = ISZERO S0
0x726: V683 = 0x731
0x729: JUMPI 0x731 V682
---
Entry stack: [V12, {0x116, 0x1cb}, S7, S6, S5, S4, S3, {0x152, 0x548, 0xae1, 0xb72, 0xc14, 0xc4e}, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S7, S6, S5, S4, S3, {0x152, 0x548, 0xae1, 0xb72, 0xc14, 0xc4e}, 0x0]

================================

Block 0x72a
[0x72a:0x730]
---
Predecessors: [0x724]
Successors: [0x735]
---
0x72a POP
0x72b PUSH1 0x0
0x72d PUSH2 0x735
0x730 JUMP
---
0x72b: V684 = 0x0
0x72d: V685 = 0x735
0x730: JUMP 0x735
---
Entry stack: [V12, {0x116, 0x1cb}, S6, S5, S4, S3, S2, {0x152, 0x548, 0xae1, 0xb72, 0xc14, 0xc4e}, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, {0x116, 0x1cb}, S6, S5, S4, S3, S2, {0x152, 0x548, 0xae1, 0xb72, 0xc14, 0xc4e}, 0x0]

================================

Block 0x731
[0x731:0x734]
---
Predecessors: [0x724]
Successors: [0x735]
---
0x731 JUMPDEST
0x732 POP
0x733 PUSH1 0x1
---
0x731: JUMPDEST 
0x733: V686 = 0x1
---
Entry stack: [V12, {0x116, 0x1cb}, S6, S5, S4, S3, S2, {0x152, 0x548, 0xae1, 0xb72, 0xc14, 0xc4e}, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, {0x116, 0x1cb}, S6, S5, S4, S3, S2, {0x152, 0x548, 0xae1, 0xb72, 0xc14, 0xc4e}, 0x1]

================================

Block 0x735
[0x735:0x737]
---
Predecessors: [0x72a, 0x731, 0x10a0, 0x10b7, 0x10ce, 0x10e5, 0x10ec, 0x10f7]
Successors: [0x152, 0x548, 0xae1, 0xb72, 0xbc4, 0xc14, 0xc4e, 0xf6f]
---
0x735 JUMPDEST
0x736 SWAP1
0x737 JUMP
---
0x735: JUMPDEST 
0x737: JUMP {0x152, 0x548, 0xae1, 0xb72, 0xbc4, 0xc14, 0xc4e, 0xf6f}
---
Entry stack: [S26, S25, 0xbb1, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x152, 0x548, 0xae1, 0xb72, 0xbc4, 0xc14, 0xc4e, 0xf6f}, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [S26, S25, 0xbb1, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]

================================

Block 0x738
[0x738:0x755]
---
Predecessors: [0x181]
Successors: [0x756, 0x75a]
---
0x738 JUMPDEST
0x739 PUSH1 0x6
0x73b SLOAD
0x73c CALLER
0x73d PUSH1 0x1
0x73f PUSH1 0xa0
0x741 PUSH1 0x2
0x743 EXP
0x744 SUB
0x745 SWAP1
0x746 DUP2
0x747 AND
0x748 PUSH4 0x1000000
0x74d SWAP1
0x74e SWAP3
0x74f DIV
0x750 AND
0x751 EQ
0x752 PUSH2 0x75a
0x755 JUMPI
---
0x738: JUMPDEST 
0x739: V687 = 0x6
0x73b: V688 = S[0x6]
0x73c: V689 = CALLER
0x73d: V690 = 0x1
0x73f: V691 = 0xa0
0x741: V692 = 0x2
0x743: V693 = EXP 0x2 0xa0
0x744: V694 = SUB 0x10000000000000000000000000000000000000000 0x1
0x747: V695 = AND 0xffffffffffffffffffffffffffffffffffffffff V689
0x748: V696 = 0x1000000
0x74f: V697 = DIV V688 0x1000000
0x750: V698 = AND V697 0xffffffffffffffffffffffffffffffffffffffff
0x751: V699 = EQ V698 V695
0x752: V700 = 0x75a
0x755: JUMPI 0x75a V699
---
Entry stack: [V12, 0x118, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V126]

================================

Block 0x756
[0x756:0x759]
---
Predecessors: [0x738]
Successors: []
---
0x756 PUSH1 0x0
0x758 DUP1
0x759 REVERT
---
0x756: V701 = 0x0
0x759: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V126]

================================

Block 0x75a
[0x75a:0x76b]
---
Predecessors: [0x738]
Successors: [0x76c, 0x770]
---
0x75a JUMPDEST
0x75b DUP1
0x75c PUSH1 0x1
0x75e PUSH1 0xa0
0x760 PUSH1 0x2
0x762 EXP
0x763 SUB
0x764 DUP2
0x765 AND
0x766 ISZERO
0x767 ISZERO
0x768 PUSH2 0x770
0x76b JUMPI
---
0x75a: JUMPDEST 
0x75c: V702 = 0x1
0x75e: V703 = 0xa0
0x760: V704 = 0x2
0x762: V705 = EXP 0x2 0xa0
0x763: V706 = SUB 0x10000000000000000000000000000000000000000 0x1
0x765: V707 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x766: V708 = ISZERO V707
0x767: V709 = ISZERO V708
0x768: V710 = 0x770
0x76b: JUMPI 0x770 V709
---
Entry stack: [V12, 0x118, V126]
Stack pops: 1
Stack additions: [S0, S0]
Exit stack: [V12, 0x118, V126, V126]

================================

Block 0x76c
[0x76c:0x76f]
---
Predecessors: [0x75a]
Successors: []
---
0x76c PUSH1 0x0
0x76e DUP1
0x76f REVERT
---
0x76c: V711 = 0x0
0x76f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118, V126, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V126, V126]

================================

Block 0x770
[0x770:0x7df]
---
Predecessors: [0x75a]
Successors: [0x7e0]
---
0x770 JUMPDEST
0x771 PUSH1 0x6
0x773 DUP1
0x774 SLOAD
0x775 PUSH23 0xffffffffffffffffffffffffffffffffffffffff000000
0x78d NOT
0x78e AND
0x78f PUSH4 0x1000000
0x794 PUSH1 0x1
0x796 PUSH1 0xa0
0x798 PUSH1 0x2
0x79a EXP
0x79b SUB
0x79c DUP6
0x79d DUP2
0x79e AND
0x79f DUP3
0x7a0 MUL
0x7a1 SWAP3
0x7a2 SWAP1
0x7a3 SWAP3
0x7a4 OR
0x7a5 SWAP3
0x7a6 DUP4
0x7a7 SWAP1
0x7a8 SSTORE
0x7a9 SWAP1
0x7aa SWAP2
0x7ab DIV
0x7ac AND
0x7ad PUSH32 0xbff2c41344315dcbe5a27ad589343e3446f755cda0e577f9415fd535a10796e7
0x7ce TIMESTAMP
0x7cf PUSH1 0x40
0x7d1 MLOAD
0x7d2 SWAP1
0x7d3 DUP2
0x7d4 MSTORE
0x7d5 PUSH1 0x20
0x7d7 ADD
0x7d8 PUSH1 0x40
0x7da MLOAD
0x7db DUP1
0x7dc SWAP2
0x7dd SUB
0x7de SWAP1
0x7df LOG2
---
0x770: JUMPDEST 
0x771: V712 = 0x6
0x774: V713 = S[0x6]
0x775: V714 = 0xffffffffffffffffffffffffffffffffffffffff000000
0x78d: V715 = NOT 0xffffffffffffffffffffffffffffffffffffffff000000
0x78e: V716 = AND 0xffffffffffffffffff0000000000000000000000000000000000000000ffffff V713
0x78f: V717 = 0x1000000
0x794: V718 = 0x1
0x796: V719 = 0xa0
0x798: V720 = 0x2
0x79a: V721 = EXP 0x2 0xa0
0x79b: V722 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79e: V723 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x7a0: V724 = MUL 0x1000000 V723
0x7a4: V725 = OR V724 V716
0x7a8: S[0x6] = V725
0x7ab: V726 = DIV V725 0x1000000
0x7ac: V727 = AND V726 0xffffffffffffffffffffffffffffffffffffffff
0x7ad: V728 = 0xbff2c41344315dcbe5a27ad589343e3446f755cda0e577f9415fd535a10796e7
0x7ce: V729 = TIMESTAMP
0x7cf: V730 = 0x40
0x7d1: V731 = M[0x40]
0x7d4: M[V731] = V729
0x7d5: V732 = 0x20
0x7d7: V733 = ADD 0x20 V731
0x7d8: V734 = 0x40
0x7da: V735 = M[0x40]
0x7dd: V736 = SUB V733 V735
0x7df: LOG V735 V736 0xbff2c41344315dcbe5a27ad589343e3446f755cda0e577f9415fd535a10796e7 V727
---
Entry stack: [V12, 0x118, V126, V126]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x118, V126, V126]

================================

Block 0x7e0
[0x7e0:0x7e0]
---
Predecessors: [0x770, 0xb15]
Successors: [0x7e1]
---
0x7e0 JUMPDEST
---
0x7e0: JUMPDEST 
---
Entry stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x7e1
[0x7e1:0x7e2]
---
Predecessors: [0x7e0]
Successors: [0x7e3]
---
0x7e1 JUMPDEST
0x7e2 POP
---
0x7e1: JUMPDEST 
---
Entry stack: [0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x7e3
[0x7e3:0x7e5]
---
Predecessors: [0x7e1, 0xf0d]
Successors: [0x118, 0x12d, 0x33a, 0x59c, 0xdab]
---
0x7e3 JUMPDEST
0x7e4 POP
0x7e5 JUMP
---
0x7e3: JUMPDEST 
0x7e5: JUMP S1
---
Entry stack: [0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x7e6
[0x7e6:0x803]
---
Predecessors: [0x1a2]
Successors: [0x804, 0x808]
---
0x7e6 JUMPDEST
0x7e7 PUSH1 0x6
0x7e9 SLOAD
0x7ea CALLER
0x7eb PUSH1 0x1
0x7ed PUSH1 0xa0
0x7ef PUSH1 0x2
0x7f1 EXP
0x7f2 SUB
0x7f3 SWAP1
0x7f4 DUP2
0x7f5 AND
0x7f6 PUSH4 0x1000000
0x7fb SWAP1
0x7fc SWAP3
0x7fd DIV
0x7fe AND
0x7ff EQ
0x800 PUSH2 0x808
0x803 JUMPI
---
0x7e6: JUMPDEST 
0x7e7: V737 = 0x6
0x7e9: V738 = S[0x6]
0x7ea: V739 = CALLER
0x7eb: V740 = 0x1
0x7ed: V741 = 0xa0
0x7ef: V742 = 0x2
0x7f1: V743 = EXP 0x2 0xa0
0x7f2: V744 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f5: V745 = AND 0xffffffffffffffffffffffffffffffffffffffff V739
0x7f6: V746 = 0x1000000
0x7fd: V747 = DIV V738 0x1000000
0x7fe: V748 = AND V747 0xffffffffffffffffffffffffffffffffffffffff
0x7ff: V749 = EQ V748 V745
0x800: V750 = 0x808
0x803: JUMPI 0x808 V749
---
Entry stack: [V12, 0x118, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V140]

================================

Block 0x804
[0x804:0x807]
---
Predecessors: [0x7e6]
Successors: []
---
0x804 PUSH1 0x0
0x806 DUP1
0x807 REVERT
---
0x804: V751 = 0x0
0x807: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V140]

================================

Block 0x808
[0x808:0x819]
---
Predecessors: [0x7e6]
Successors: [0x81a, 0x81e]
---
0x808 JUMPDEST
0x809 DUP1
0x80a PUSH1 0x1
0x80c PUSH1 0xa0
0x80e PUSH1 0x2
0x810 EXP
0x811 SUB
0x812 DUP2
0x813 AND
0x814 ISZERO
0x815 ISZERO
0x816 PUSH2 0x81e
0x819 JUMPI
---
0x808: JUMPDEST 
0x80a: V752 = 0x1
0x80c: V753 = 0xa0
0x80e: V754 = 0x2
0x810: V755 = EXP 0x2 0xa0
0x811: V756 = SUB 0x10000000000000000000000000000000000000000 0x1
0x813: V757 = AND V140 0xffffffffffffffffffffffffffffffffffffffff
0x814: V758 = ISZERO V757
0x815: V759 = ISZERO V758
0x816: V760 = 0x81e
0x819: JUMPI 0x81e V759
---
Entry stack: [V12, 0x118, V140]
Stack pops: 1
Stack additions: [S0, S0]
Exit stack: [V12, 0x118, V140, V140]

================================

Block 0x81a
[0x81a:0x81d]
---
Predecessors: [0x808]
Successors: []
---
0x81a PUSH1 0x0
0x81c DUP1
0x81d REVERT
---
0x81a: V761 = 0x0
0x81d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118, V140, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V140, V140]

================================

Block 0x81e
[0x81e:0x82e]
---
Predecessors: [0x808]
Successors: [0x82f, 0x833]
---
0x81e JUMPDEST
0x81f PUSH1 0x6
0x821 SLOAD
0x822 PUSH2 0x100
0x825 SWAP1
0x826 DIV
0x827 PUSH1 0xff
0x829 AND
0x82a ISZERO
0x82b PUSH2 0x833
0x82e JUMPI
---
0x81e: JUMPDEST 
0x81f: V762 = 0x6
0x821: V763 = S[0x6]
0x822: V764 = 0x100
0x826: V765 = DIV V763 0x100
0x827: V766 = 0xff
0x829: V767 = AND 0xff V765
0x82a: V768 = ISZERO V767
0x82b: V769 = 0x833
0x82e: JUMPI 0x833 V768
---
Entry stack: [V12, 0x118, V140, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V140, V140]

================================

Block 0x82f
[0x82f:0x832]
---
Predecessors: [0x81e]
Successors: []
---
0x82f PUSH1 0x0
0x831 DUP1
0x832 REVERT
---
0x82f: V770 = 0x0
0x832: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118, V140, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V140, V140]

================================

Block 0x833
[0x833:0x86c]
---
Predecessors: [0x81e]
Successors: [0x86d]
---
0x833 JUMPDEST
0x834 PUSH1 0x0
0x836 DUP1
0x837 SLOAD
0x838 PUSH1 0x1
0x83a PUSH1 0xa0
0x83c PUSH1 0x2
0x83e EXP
0x83f SUB
0x840 DUP5
0x841 AND
0x842 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x857 NOT
0x858 SWAP1
0x859 SWAP2
0x85a AND
0x85b OR
0x85c SWAP1
0x85d SSTORE
0x85e PUSH1 0x6
0x860 DUP1
0x861 SLOAD
0x862 PUSH2 0xff00
0x865 NOT
0x866 AND
0x867 PUSH2 0x100
0x86a OR
0x86b SWAP1
0x86c SSTORE
---
0x833: JUMPDEST 
0x834: V771 = 0x0
0x837: V772 = S[0x0]
0x838: V773 = 0x1
0x83a: V774 = 0xa0
0x83c: V775 = 0x2
0x83e: V776 = EXP 0x2 0xa0
0x83f: V777 = SUB 0x10000000000000000000000000000000000000000 0x1
0x841: V778 = AND V140 0xffffffffffffffffffffffffffffffffffffffff
0x842: V779 = 0xffffffffffffffffffffffffffffffffffffffff
0x857: V780 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x85a: V781 = AND V772 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x85b: V782 = OR V781 V778
0x85d: S[0x0] = V782
0x85e: V783 = 0x6
0x861: V784 = S[0x6]
0x862: V785 = 0xff00
0x865: V786 = NOT 0xff00
0x866: V787 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V784
0x867: V788 = 0x100
0x86a: V789 = OR 0x100 V787
0x86c: S[0x6] = V789
---
Entry stack: [V12, 0x118, V140, V140]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x118, V140, V140]

================================

Block 0x86d
[0x86d:0x86d]
---
Predecessors: [0x833]
Successors: [0x86e]
---
0x86d JUMPDEST
---
0x86d: JUMPDEST 
---
Entry stack: [V12, 0x118, V140, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V140, V140]

================================

Block 0x86e
[0x86e:0x86f]
---
Predecessors: [0x86d]
Successors: [0x870]
---
0x86e JUMPDEST
0x86f POP
---
0x86e: JUMPDEST 
---
Entry stack: [V12, 0x118, V140, V140]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x118, V140]

================================

Block 0x870
[0x870:0x872]
---
Predecessors: [0x86e]
Successors: [0x118]
---
0x870 JUMPDEST
0x871 POP
0x872 JUMP
---
0x870: JUMPDEST 
0x872: JUMP 0x118
---
Entry stack: [V12, 0x118, V140]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x873
[0x873:0x895]
---
Predecessors: [0x1c3]
Successors: [0x896, 0x89a]
---
0x873 JUMPDEST
0x874 PUSH1 0x6
0x876 SLOAD
0x877 PUSH1 0x0
0x879 SWAP1
0x87a DUP2
0x87b SWAP1
0x87c CALLER
0x87d PUSH1 0x1
0x87f PUSH1 0xa0
0x881 PUSH1 0x2
0x883 EXP
0x884 SUB
0x885 SWAP1
0x886 DUP2
0x887 AND
0x888 PUSH4 0x1000000
0x88d SWAP1
0x88e SWAP3
0x88f DIV
0x890 AND
0x891 EQ
0x892 PUSH2 0x89a
0x895 JUMPI
---
0x873: JUMPDEST 
0x874: V790 = 0x6
0x876: V791 = S[0x6]
0x877: V792 = 0x0
0x87c: V793 = CALLER
0x87d: V794 = 0x1
0x87f: V795 = 0xa0
0x881: V796 = 0x2
0x883: V797 = EXP 0x2 0xa0
0x884: V798 = SUB 0x10000000000000000000000000000000000000000 0x1
0x887: V799 = AND 0xffffffffffffffffffffffffffffffffffffffff V793
0x888: V800 = 0x1000000
0x88f: V801 = DIV V791 0x1000000
0x890: V802 = AND V801 0xffffffffffffffffffffffffffffffffffffffff
0x891: V803 = EQ V802 V799
0x892: V804 = 0x89a
0x895: JUMPI 0x89a V803
---
Entry stack: [V12, 0x1cb]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x1cb, 0x0, 0x0]

================================

Block 0x896
[0x896:0x899]
---
Predecessors: [0x873]
Successors: []
---
0x896 PUSH1 0x0
0x898 DUP1
0x899 REVERT
---
0x896: V805 = 0x0
0x899: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cb, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cb, 0x0, 0x0]

================================

Block 0x89a
[0x89a:0x8a3]
---
Predecessors: [0x873]
Successors: [0x8a4, 0x8a8]
---
0x89a JUMPDEST
0x89b PUSH1 0x2
0x89d SLOAD
0x89e TIMESTAMP
0x89f GT
0x8a0 PUSH2 0x8a8
0x8a3 JUMPI
---
0x89a: JUMPDEST 
0x89b: V806 = 0x2
0x89d: V807 = S[0x2]
0x89e: V808 = TIMESTAMP
0x89f: V809 = GT V808 V807
0x8a0: V810 = 0x8a8
0x8a3: JUMPI 0x8a8 V809
---
Entry stack: [V12, 0x1cb, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cb, 0x0, 0x0]

================================

Block 0x8a4
[0x8a4:0x8a7]
---
Predecessors: [0x89a]
Successors: []
---
0x8a4 PUSH1 0x0
0x8a6 DUP1
0x8a7 REVERT
---
0x8a4: V811 = 0x0
0x8a7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cb, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cb, 0x0, 0x0]

================================

Block 0x8a8
[0x8a8:0x8fe]
---
Predecessors: [0x89a]
Successors: [0x8ff, 0x903]
---
0x8a8 JUMPDEST
0x8a9 PUSH1 0x0
0x8ab DUP1
0x8ac SLOAD
0x8ad PUSH1 0x1
0x8af PUSH1 0xa0
0x8b1 PUSH1 0x2
0x8b3 EXP
0x8b4 SUB
0x8b5 AND
0x8b6 SWAP1
0x8b7 PUSH4 0x70a08231
0x8bc SWAP1
0x8bd ADDRESS
0x8be SWAP1
0x8bf PUSH1 0x40
0x8c1 MLOAD
0x8c2 PUSH1 0x20
0x8c4 ADD
0x8c5 MSTORE
0x8c6 PUSH1 0x40
0x8c8 MLOAD
0x8c9 PUSH1 0xe0
0x8cb PUSH1 0x2
0x8cd EXP
0x8ce PUSH4 0xffffffff
0x8d3 DUP5
0x8d4 AND
0x8d5 MUL
0x8d6 DUP2
0x8d7 MSTORE
0x8d8 PUSH1 0x1
0x8da PUSH1 0xa0
0x8dc PUSH1 0x2
0x8de EXP
0x8df SUB
0x8e0 SWAP1
0x8e1 SWAP2
0x8e2 AND
0x8e3 PUSH1 0x4
0x8e5 DUP3
0x8e6 ADD
0x8e7 MSTORE
0x8e8 PUSH1 0x24
0x8ea ADD
0x8eb PUSH1 0x20
0x8ed PUSH1 0x40
0x8ef MLOAD
0x8f0 DUP1
0x8f1 DUP4
0x8f2 SUB
0x8f3 DUP2
0x8f4 PUSH1 0x0
0x8f6 DUP8
0x8f7 DUP1
0x8f8 EXTCODESIZE
0x8f9 ISZERO
0x8fa ISZERO
0x8fb PUSH2 0x903
0x8fe JUMPI
---
0x8a8: JUMPDEST 
0x8a9: V812 = 0x0
0x8ac: V813 = S[0x0]
0x8ad: V814 = 0x1
0x8af: V815 = 0xa0
0x8b1: V816 = 0x2
0x8b3: V817 = EXP 0x2 0xa0
0x8b4: V818 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b5: V819 = AND 0xffffffffffffffffffffffffffffffffffffffff V813
0x8b7: V820 = 0x70a08231
0x8bd: V821 = ADDRESS
0x8bf: V822 = 0x40
0x8c1: V823 = M[0x40]
0x8c2: V824 = 0x20
0x8c4: V825 = ADD 0x20 V823
0x8c5: M[V825] = 0x0
0x8c6: V826 = 0x40
0x8c8: V827 = M[0x40]
0x8c9: V828 = 0xe0
0x8cb: V829 = 0x2
0x8cd: V830 = EXP 0x2 0xe0
0x8ce: V831 = 0xffffffff
0x8d4: V832 = AND 0x70a08231 0xffffffff
0x8d5: V833 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x8d7: M[V827] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x8d8: V834 = 0x1
0x8da: V835 = 0xa0
0x8dc: V836 = 0x2
0x8de: V837 = EXP 0x2 0xa0
0x8df: V838 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e2: V839 = AND V821 0xffffffffffffffffffffffffffffffffffffffff
0x8e3: V840 = 0x4
0x8e6: V841 = ADD V827 0x4
0x8e7: M[V841] = V839
0x8e8: V842 = 0x24
0x8ea: V843 = ADD 0x24 V827
0x8eb: V844 = 0x20
0x8ed: V845 = 0x40
0x8ef: V846 = M[0x40]
0x8f2: V847 = SUB V843 V846
0x8f4: V848 = 0x0
0x8f8: V849 = EXTCODESIZE V819
0x8f9: V850 = ISZERO V849
0x8fa: V851 = ISZERO V850
0x8fb: V852 = 0x903
0x8fe: JUMPI 0x903 V851
---
Entry stack: [V12, 0x1cb, 0x0, 0x0]
Stack pops: 0
Stack additions: [V819, 0x70a08231, V843, 0x20, V846, V847, V846, 0x0, V819]
Exit stack: [V12, 0x1cb, 0x0, 0x0, V819, 0x70a08231, V843, 0x20, V846, V847, V846, 0x0, V819]

================================

Block 0x8ff
[0x8ff:0x902]
---
Predecessors: [0x8a8]
Successors: []
---
0x8ff PUSH1 0x0
0x901 DUP1
0x902 REVERT
---
0x8ff: V853 = 0x0
0x902: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cb, 0x0, 0x0, V819, 0x70a08231, V843, 0x20, V846, V847, V846, 0x0, V819]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cb, 0x0, 0x0, V819, 0x70a08231, V843, 0x20, V846, V847, V846, 0x0, V819]

================================

Block 0x903
[0x903:0x90f]
---
Predecessors: [0x8a8]
Successors: [0x910, 0x914]
---
0x903 JUMPDEST
0x904 PUSH2 0x2c6
0x907 GAS
0x908 SUB
0x909 CALL
0x90a ISZERO
0x90b ISZERO
0x90c PUSH2 0x914
0x90f JUMPI
---
0x903: JUMPDEST 
0x904: V854 = 0x2c6
0x907: V855 = GAS
0x908: V856 = SUB V855 0x2c6
0x909: V857 = CALL V856 V819 0x0 V846 V847 V846 0x20
0x90a: V858 = ISZERO V857
0x90b: V859 = ISZERO V858
0x90c: V860 = 0x914
0x90f: JUMPI 0x914 V859
---
Entry stack: [V12, 0x1cb, 0x0, 0x0, V819, 0x70a08231, V843, 0x20, V846, V847, V846, 0x0, V819]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1cb, 0x0, 0x0, V819, 0x70a08231, V843]

================================

Block 0x910
[0x910:0x913]
---
Predecessors: [0x903]
Successors: []
---
0x910 PUSH1 0x0
0x912 DUP1
0x913 REVERT
---
0x910: V861 = 0x0
0x913: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cb, 0x0, 0x0, V819, 0x70a08231, V843]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cb, 0x0, 0x0, V819, 0x70a08231, V843]

================================

Block 0x914
[0x914:0x928]
---
Predecessors: [0x903]
Successors: [0x929, 0x9ae]
---
0x914 JUMPDEST
0x915 POP
0x916 POP
0x917 POP
0x918 PUSH1 0x40
0x91a MLOAD
0x91b DUP1
0x91c MLOAD
0x91d SWAP2
0x91e POP
0x91f POP
0x920 DUP1
0x921 ISZERO
0x922 DUP1
0x923 ISZERO
0x924 SWAP1
0x925 PUSH2 0x9ae
0x928 JUMPI
---
0x914: JUMPDEST 
0x918: V862 = 0x40
0x91a: V863 = M[0x40]
0x91c: V864 = M[V863]
0x921: V865 = ISZERO V864
0x923: V866 = ISZERO V865
0x925: V867 = 0x9ae
0x928: JUMPI 0x9ae V865
---
Entry stack: [V12, 0x1cb, 0x0, 0x0, V819, 0x70a08231, V843]
Stack pops: 4
Stack additions: [V864, V866]
Exit stack: [V12, 0x1cb, 0x0, V864, V866]

================================

Block 0x929
[0x929:0x98d]
---
Predecessors: [0x914]
Successors: [0x98e, 0x992]
---
0x929 POP
0x92a PUSH1 0x0
0x92c DUP1
0x92d SLOAD
0x92e PUSH1 0x7
0x930 SLOAD
0x931 PUSH1 0x1
0x933 PUSH1 0xa0
0x935 PUSH1 0x2
0x937 EXP
0x938 SUB
0x939 SWAP2
0x93a DUP3
0x93b AND
0x93c SWAP3
0x93d PUSH4 0xa9059cbb
0x942 SWAP3
0x943 SWAP1
0x944 SWAP2
0x945 AND
0x946 SWAP1
0x947 DUP5
0x948 SWAP1
0x949 PUSH1 0x40
0x94b MLOAD
0x94c PUSH1 0x20
0x94e ADD
0x94f MSTORE
0x950 PUSH1 0x40
0x952 MLOAD
0x953 PUSH1 0xe0
0x955 PUSH1 0x2
0x957 EXP
0x958 PUSH4 0xffffffff
0x95d DUP6
0x95e AND
0x95f MUL
0x960 DUP2
0x961 MSTORE
0x962 PUSH1 0x1
0x964 PUSH1 0xa0
0x966 PUSH1 0x2
0x968 EXP
0x969 SUB
0x96a SWAP1
0x96b SWAP3
0x96c AND
0x96d PUSH1 0x4
0x96f DUP4
0x970 ADD
0x971 MSTORE
0x972 PUSH1 0x24
0x974 DUP3
0x975 ADD
0x976 MSTORE
0x977 PUSH1 0x44
0x979 ADD
0x97a PUSH1 0x20
0x97c PUSH1 0x40
0x97e MLOAD
0x97f DUP1
0x980 DUP4
0x981 SUB
0x982 DUP2
0x983 PUSH1 0x0
0x985 DUP8
0x986 DUP1
0x987 EXTCODESIZE
0x988 ISZERO
0x989 ISZERO
0x98a PUSH2 0x992
0x98d JUMPI
---
0x92a: V868 = 0x0
0x92d: V869 = S[0x0]
0x92e: V870 = 0x7
0x930: V871 = S[0x7]
0x931: V872 = 0x1
0x933: V873 = 0xa0
0x935: V874 = 0x2
0x937: V875 = EXP 0x2 0xa0
0x938: V876 = SUB 0x10000000000000000000000000000000000000000 0x1
0x93b: V877 = AND 0xffffffffffffffffffffffffffffffffffffffff V869
0x93d: V878 = 0xa9059cbb
0x945: V879 = AND V871 0xffffffffffffffffffffffffffffffffffffffff
0x949: V880 = 0x40
0x94b: V881 = M[0x40]
0x94c: V882 = 0x20
0x94e: V883 = ADD 0x20 V881
0x94f: M[V883] = 0x0
0x950: V884 = 0x40
0x952: V885 = M[0x40]
0x953: V886 = 0xe0
0x955: V887 = 0x2
0x957: V888 = EXP 0x2 0xe0
0x958: V889 = 0xffffffff
0x95e: V890 = AND 0xa9059cbb 0xffffffff
0x95f: V891 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x961: M[V885] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x962: V892 = 0x1
0x964: V893 = 0xa0
0x966: V894 = 0x2
0x968: V895 = EXP 0x2 0xa0
0x969: V896 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96c: V897 = AND V879 0xffffffffffffffffffffffffffffffffffffffff
0x96d: V898 = 0x4
0x970: V899 = ADD V885 0x4
0x971: M[V899] = V897
0x972: V900 = 0x24
0x975: V901 = ADD V885 0x24
0x976: M[V901] = V864
0x977: V902 = 0x44
0x979: V903 = ADD 0x44 V885
0x97a: V904 = 0x20
0x97c: V905 = 0x40
0x97e: V906 = M[0x40]
0x981: V907 = SUB V903 V906
0x983: V908 = 0x0
0x987: V909 = EXTCODESIZE V877
0x988: V910 = ISZERO V909
0x989: V911 = ISZERO V910
0x98a: V912 = 0x992
0x98d: JUMPI 0x992 V911
---
Entry stack: [V12, 0x1cb, 0x0, V864, V866]
Stack pops: 2
Stack additions: [S1, V877, 0xa9059cbb, V903, 0x20, V906, V907, V906, 0x0, V877]
Exit stack: [V12, 0x1cb, 0x0, V864, V877, 0xa9059cbb, V903, 0x20, V906, V907, V906, 0x0, V877]

================================

Block 0x98e
[0x98e:0x991]
---
Predecessors: [0x929]
Successors: []
---
0x98e PUSH1 0x0
0x990 DUP1
0x991 REVERT
---
0x98e: V913 = 0x0
0x991: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cb, 0x0, V864, V877, 0xa9059cbb, V903, 0x20, V906, V907, V906, 0x0, V877]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cb, 0x0, V864, V877, 0xa9059cbb, V903, 0x20, V906, V907, V906, 0x0, V877]

================================

Block 0x992
[0x992:0x99e]
---
Predecessors: [0x929]
Successors: [0x99f, 0x9a3]
---
0x992 JUMPDEST
0x993 PUSH2 0x2c6
0x996 GAS
0x997 SUB
0x998 CALL
0x999 ISZERO
0x99a ISZERO
0x99b PUSH2 0x9a3
0x99e JUMPI
---
0x992: JUMPDEST 
0x993: V914 = 0x2c6
0x996: V915 = GAS
0x997: V916 = SUB V915 0x2c6
0x998: V917 = CALL V916 V877 0x0 V906 V907 V906 0x20
0x999: V918 = ISZERO V917
0x99a: V919 = ISZERO V918
0x99b: V920 = 0x9a3
0x99e: JUMPI 0x9a3 V919
---
Entry stack: [V12, 0x1cb, 0x0, V864, V877, 0xa9059cbb, V903, 0x20, V906, V907, V906, 0x0, V877]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1cb, 0x0, V864, V877, 0xa9059cbb, V903]

================================

Block 0x99f
[0x99f:0x9a2]
---
Predecessors: [0x992]
Successors: []
---
0x99f PUSH1 0x0
0x9a1 DUP1
0x9a2 REVERT
---
0x99f: V921 = 0x0
0x9a2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cb, 0x0, V864, V877, 0xa9059cbb, V903]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cb, 0x0, V864, V877, 0xa9059cbb, V903]

================================

Block 0x9a3
[0x9a3:0x9ad]
---
Predecessors: [0x992]
Successors: [0x9ae]
---
0x9a3 JUMPDEST
0x9a4 POP
0x9a5 POP
0x9a6 POP
0x9a7 PUSH1 0x40
0x9a9 MLOAD
0x9aa DUP1
0x9ab MLOAD
0x9ac SWAP1
0x9ad POP
---
0x9a3: JUMPDEST 
0x9a7: V922 = 0x40
0x9a9: V923 = M[0x40]
0x9ab: V924 = M[V923]
---
Entry stack: [V12, 0x1cb, 0x0, V864, V877, 0xa9059cbb, V903]
Stack pops: 3
Stack additions: [V924]
Exit stack: [V12, 0x1cb, 0x0, V864, V924]

================================

Block 0x9ae
[0x9ae:0x9b3]
---
Predecessors: [0x914, 0x9a3]
Successors: [0x9b4, 0x9bc]
---
0x9ae JUMPDEST
0x9af ISZERO
0x9b0 PUSH2 0x9bc
0x9b3 JUMPI
---
0x9ae: JUMPDEST 
0x9af: V925 = ISZERO S0
0x9b0: V926 = 0x9bc
0x9b3: JUMPI 0x9bc V925
---
Entry stack: [V12, 0x1cb, 0x0, V864, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1cb, 0x0, V864]

================================

Block 0x9b4
[0x9b4:0x9bb]
---
Predecessors: [0x9ae]
Successors: [0x9f9]
---
0x9b4 PUSH1 0x1
0x9b6 SWAP2
0x9b7 POP
0x9b8 PUSH2 0x9f9
0x9bb JUMP
---
0x9b4: V927 = 0x1
0x9b8: V928 = 0x9f9
0x9bb: JUMP 0x9f9
---
Entry stack: [V12, 0x1cb, 0x0, V864]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V12, 0x1cb, 0x1, V864]

================================

Block 0x9bc
[0x9bc:0x9c4]
---
Predecessors: [0x9ae]
Successors: [0x9f9]
---
0x9bc JUMPDEST
0x9bd PUSH1 0x0
0x9bf SWAP2
0x9c0 POP
0x9c1 PUSH2 0x9f9
0x9c4 JUMP
---
0x9bc: JUMPDEST 
0x9bd: V929 = 0x0
0x9c1: V930 = 0x9f9
0x9c4: JUMP 0x9f9
---
Entry stack: [V12, 0x1cb, 0x0, V864]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0x1cb, 0x0, V864]

================================

Block 0x9c5
[0x9c5:0x9f8]
---
Predecessors: []
Successors: [0x9f9]
---
0x9c5 JUMPDEST
0x9c6 PUSH32 0x4cd5af9194f802cc544698f1c243b8f5b64021ac0e1c9bf334db769f07041ec4
0x9e7 TIMESTAMP
0x9e8 PUSH1 0x40
0x9ea MLOAD
0x9eb SWAP1
0x9ec DUP2
0x9ed MSTORE
0x9ee PUSH1 0x20
0x9f0 ADD
0x9f1 PUSH1 0x40
0x9f3 MLOAD
0x9f4 DUP1
0x9f5 SWAP2
0x9f6 SUB
0x9f7 SWAP1
0x9f8 LOG1
---
0x9c5: JUMPDEST 
0x9c6: V931 = 0x4cd5af9194f802cc544698f1c243b8f5b64021ac0e1c9bf334db769f07041ec4
0x9e7: V932 = TIMESTAMP
0x9e8: V933 = 0x40
0x9ea: V934 = M[0x40]
0x9ed: M[V934] = V932
0x9ee: V935 = 0x20
0x9f0: V936 = ADD 0x20 V934
0x9f1: V937 = 0x40
0x9f3: V938 = M[0x40]
0x9f6: V939 = SUB V936 V938
0x9f8: LOG V938 V939 0x4cd5af9194f802cc544698f1c243b8f5b64021ac0e1c9bf334db769f07041ec4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9f9
[0x9f9:0x9f9]
---
Predecessors: [0x9b4, 0x9bc, 0x9c5]
Successors: [0x9fa]
---
0x9f9 JUMPDEST
---
0x9f9: JUMPDEST 
---
Entry stack: [V12, 0x1cb, {0x0, 0x1}, V864]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cb, {0x0, 0x1}, V864]

================================

Block 0x9fa
[0x9fa:0x9fd]
---
Predecessors: [0x9f9]
Successors: [0x1cb]
---
0x9fa JUMPDEST
0x9fb POP
0x9fc SWAP1
0x9fd JUMP
---
0x9fa: JUMPDEST 
0x9fd: JUMP 0x1cb
---
Entry stack: [V12, 0x1cb, {0x0, 0x1}, V864]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x9fe
[0x9fe:0xa13]
---
Predecessors: [0x1ea]
Successors: [0x1f2]
---
0x9fe JUMPDEST
0x9ff PUSH1 0x6
0xa01 SLOAD
0xa02 PUSH4 0x1000000
0xa07 SWAP1
0xa08 DIV
0xa09 PUSH1 0x1
0xa0b PUSH1 0xa0
0xa0d PUSH1 0x2
0xa0f EXP
0xa10 SUB
0xa11 AND
0xa12 DUP2
0xa13 JUMP
---
0x9fe: JUMPDEST 
0x9ff: V940 = 0x6
0xa01: V941 = S[0x6]
0xa02: V942 = 0x1000000
0xa08: V943 = DIV V941 0x1000000
0xa09: V944 = 0x1
0xa0b: V945 = 0xa0
0xa0d: V946 = 0x2
0xa0f: V947 = EXP 0x2 0xa0
0xa10: V948 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa11: V949 = AND 0xffffffffffffffffffffffffffffffffffffffff V943
0xa13: JUMP 0x1f2
---
Entry stack: [V12, 0x1f2]
Stack pops: 1
Stack additions: [S0, V949]
Exit stack: [V12, 0x1f2, V949]

================================

Block 0xa14
[0xa14:0xa1c]
---
Predecessors: [0x219]
Successors: [0x1cb]
---
0xa14 JUMPDEST
0xa15 PUSH1 0x6
0xa17 SLOAD
0xa18 PUSH1 0xff
0xa1a AND
0xa1b DUP2
0xa1c JUMP
---
0xa14: JUMPDEST 
0xa15: V950 = 0x6
0xa17: V951 = S[0x6]
0xa18: V952 = 0xff
0xa1a: V953 = AND 0xff V951
0xa1c: JUMP 0x1cb
---
Entry stack: [V12, 0x1cb]
Stack pops: 1
Stack additions: [S0, V953]
Exit stack: [V12, 0x1cb, V953]

================================

Block 0xa1d
[0xa1d:0xa3a]
---
Predecessors: [0x240]
Successors: [0xa3b, 0xa3f]
---
0xa1d JUMPDEST
0xa1e PUSH1 0x6
0xa20 SLOAD
0xa21 CALLER
0xa22 PUSH1 0x1
0xa24 PUSH1 0xa0
0xa26 PUSH1 0x2
0xa28 EXP
0xa29 SUB
0xa2a SWAP1
0xa2b DUP2
0xa2c AND
0xa2d PUSH4 0x1000000
0xa32 SWAP1
0xa33 SWAP3
0xa34 DIV
0xa35 AND
0xa36 EQ
0xa37 PUSH2 0xa3f
0xa3a JUMPI
---
0xa1d: JUMPDEST 
0xa1e: V954 = 0x6
0xa20: V955 = S[0x6]
0xa21: V956 = CALLER
0xa22: V957 = 0x1
0xa24: V958 = 0xa0
0xa26: V959 = 0x2
0xa28: V960 = EXP 0x2 0xa0
0xa29: V961 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2c: V962 = AND 0xffffffffffffffffffffffffffffffffffffffff V956
0xa2d: V963 = 0x1000000
0xa34: V964 = DIV V955 0x1000000
0xa35: V965 = AND V964 0xffffffffffffffffffffffffffffffffffffffff
0xa36: V966 = EQ V965 V962
0xa37: V967 = 0xa3f
0xa3a: JUMPI 0xa3f V966
---
Entry stack: [V12, 0x118, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V203]

================================

Block 0xa3b
[0xa3b:0xa3e]
---
Predecessors: [0xa1d]
Successors: []
---
0xa3b PUSH1 0x0
0xa3d DUP1
0xa3e REVERT
---
0xa3b: V968 = 0x0
0xa3e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V203]

================================

Block 0xa3f
[0xa3f:0xa50]
---
Predecessors: [0xa1d]
Successors: [0xa51, 0xa55]
---
0xa3f JUMPDEST
0xa40 DUP1
0xa41 PUSH1 0x1
0xa43 PUSH1 0xa0
0xa45 PUSH1 0x2
0xa47 EXP
0xa48 SUB
0xa49 DUP2
0xa4a AND
0xa4b ISZERO
0xa4c ISZERO
0xa4d PUSH2 0xa55
0xa50 JUMPI
---
0xa3f: JUMPDEST 
0xa41: V969 = 0x1
0xa43: V970 = 0xa0
0xa45: V971 = 0x2
0xa47: V972 = EXP 0x2 0xa0
0xa48: V973 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4a: V974 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0xa4b: V975 = ISZERO V974
0xa4c: V976 = ISZERO V975
0xa4d: V977 = 0xa55
0xa50: JUMPI 0xa55 V976
---
Entry stack: [V12, 0x118, V203]
Stack pops: 1
Stack additions: [S0, S0]
Exit stack: [V12, 0x118, V203, V203]

================================

Block 0xa51
[0xa51:0xa54]
---
Predecessors: [0xa3f]
Successors: []
---
0xa51 PUSH1 0x0
0xa53 DUP1
0xa54 REVERT
---
0xa51: V978 = 0x0
0xa54: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118, V203, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V203, V203]

================================

Block 0xa55
[0xa55:0xa7d]
---
Predecessors: [0xa3f]
Successors: [0xa7e]
---
0xa55 JUMPDEST
0xa56 PUSH1 0x7
0xa58 DUP1
0xa59 SLOAD
0xa5a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6f NOT
0xa70 AND
0xa71 PUSH1 0x1
0xa73 PUSH1 0xa0
0xa75 PUSH1 0x2
0xa77 EXP
0xa78 SUB
0xa79 DUP5
0xa7a AND
0xa7b OR
0xa7c SWAP1
0xa7d SSTORE
---
0xa55: JUMPDEST 
0xa56: V979 = 0x7
0xa59: V980 = S[0x7]
0xa5a: V981 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6f: V982 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa70: V983 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V980
0xa71: V984 = 0x1
0xa73: V985 = 0xa0
0xa75: V986 = 0x2
0xa77: V987 = EXP 0x2 0xa0
0xa78: V988 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7a: V989 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0xa7b: V990 = OR V989 V983
0xa7d: S[0x7] = V990
---
Entry stack: [V12, 0x118, V203, V203]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x118, V203, V203]

================================

Block 0xa7e
[0xa7e:0xa7e]
---
Predecessors: [0xa55]
Successors: [0xa7f]
---
0xa7e JUMPDEST
---
0xa7e: JUMPDEST 
---
Entry stack: [V12, 0x118, V203, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V203, V203]

================================

Block 0xa7f
[0xa7f:0xa80]
---
Predecessors: [0xa7e]
Successors: [0xa81]
---
0xa7f JUMPDEST
0xa80 POP
---
0xa7f: JUMPDEST 
---
Entry stack: [V12, 0x118, V203, V203]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x118, V203]

================================

Block 0xa81
[0xa81:0xa83]
---
Predecessors: [0xa7f]
Successors: [0x118]
---
0xa81 JUMPDEST
0xa82 POP
0xa83 JUMP
---
0xa81: JUMPDEST 
0xa83: JUMP 0x118
---
Entry stack: [V12, 0x118, V203]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xa84
[0xa84:0xa89]
---
Predecessors: [0x261]
Successors: [0x12d]
---
0xa84 JUMPDEST
0xa85 PUSH1 0x4
0xa87 SLOAD
0xa88 DUP2
0xa89 JUMP
---
0xa84: JUMPDEST 
0xa85: V991 = 0x4
0xa87: V992 = S[0x4]
0xa89: JUMP 0x12d
---
Entry stack: [V12, 0x12d]
Stack pops: 1
Stack additions: [S0, V992]
Exit stack: [V12, 0x12d, V992]

================================

Block 0xa8a
[0xa8a:0xa98]
---
Predecessors: [0x286]
Successors: [0x1f2]
---
0xa8a JUMPDEST
0xa8b PUSH1 0x7
0xa8d SLOAD
0xa8e PUSH1 0x1
0xa90 PUSH1 0xa0
0xa92 PUSH1 0x2
0xa94 EXP
0xa95 SUB
0xa96 AND
0xa97 DUP2
0xa98 JUMP
---
0xa8a: JUMPDEST 
0xa8b: V993 = 0x7
0xa8d: V994 = S[0x7]
0xa8e: V995 = 0x1
0xa90: V996 = 0xa0
0xa92: V997 = 0x2
0xa94: V998 = EXP 0x2 0xa0
0xa95: V999 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa96: V1000 = AND 0xffffffffffffffffffffffffffffffffffffffff V994
0xa98: JUMP 0x1f2
---
Entry stack: [V12, 0x1f2]
Stack pops: 1
Stack additions: [S0, V1000]
Exit stack: [V12, 0x1f2, V1000]

================================

Block 0xa99
[0xa99:0xab6]
---
Predecessors: [0x2b5]
Successors: [0xab7, 0xabb]
---
0xa99 JUMPDEST
0xa9a PUSH1 0x6
0xa9c SLOAD
0xa9d CALLER
0xa9e PUSH1 0x1
0xaa0 PUSH1 0xa0
0xaa2 PUSH1 0x2
0xaa4 EXP
0xaa5 SUB
0xaa6 SWAP1
0xaa7 DUP2
0xaa8 AND
0xaa9 PUSH4 0x1000000
0xaae SWAP1
0xaaf SWAP3
0xab0 DIV
0xab1 AND
0xab2 EQ
0xab3 PUSH2 0xabb
0xab6 JUMPI
---
0xa99: JUMPDEST 
0xa9a: V1001 = 0x6
0xa9c: V1002 = S[0x6]
0xa9d: V1003 = CALLER
0xa9e: V1004 = 0x1
0xaa0: V1005 = 0xa0
0xaa2: V1006 = 0x2
0xaa4: V1007 = EXP 0x2 0xa0
0xaa5: V1008 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa8: V1009 = AND 0xffffffffffffffffffffffffffffffffffffffff V1003
0xaa9: V1010 = 0x1000000
0xab0: V1011 = DIV V1002 0x1000000
0xab1: V1012 = AND V1011 0xffffffffffffffffffffffffffffffffffffffff
0xab2: V1013 = EQ V1012 V1009
0xab3: V1014 = 0xabb
0xab6: JUMPI 0xabb V1013
---
Entry stack: [V12, 0x118, V243]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V243]

================================

Block 0xab7
[0xab7:0xaba]
---
Predecessors: [0xa99]
Successors: []
---
0xab7 PUSH1 0x0
0xab9 DUP1
0xaba REVERT
---
0xab7: V1015 = 0x0
0xaba: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118, V243]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V243]

================================

Block 0xabb
[0xabb:0xad0]
---
Predecessors: [0xa99]
Successors: [0xad1, 0xad5]
---
0xabb JUMPDEST
0xabc PUSH1 0x6
0xabe SLOAD
0xabf PUSH1 0xff
0xac1 PUSH2 0x100
0xac4 SWAP1
0xac5 SWAP2
0xac6 DIV
0xac7 AND
0xac8 ISZERO
0xac9 ISZERO
0xaca PUSH1 0x1
0xacc EQ
0xacd PUSH2 0xad5
0xad0 JUMPI
---
0xabb: JUMPDEST 
0xabc: V1016 = 0x6
0xabe: V1017 = S[0x6]
0xabf: V1018 = 0xff
0xac1: V1019 = 0x100
0xac6: V1020 = DIV V1017 0x100
0xac7: V1021 = AND V1020 0xff
0xac8: V1022 = ISZERO V1021
0xac9: V1023 = ISZERO V1022
0xaca: V1024 = 0x1
0xacc: V1025 = EQ 0x1 V1023
0xacd: V1026 = 0xad5
0xad0: JUMPI 0xad5 V1025
---
Entry stack: [V12, 0x118, V243]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V243]

================================

Block 0xad1
[0xad1:0xad4]
---
Predecessors: [0xabb]
Successors: []
---
0xad1 PUSH1 0x0
0xad3 DUP1
0xad4 REVERT
---
0xad1: V1027 = 0x0
0xad4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118, V243]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V243]

================================

Block 0xad5
[0xad5:0xad8]
---
Predecessors: [0xabb]
Successors: [0xad9]
---
0xad5 JUMPDEST
0xad6 PUSH1 0x0
0xad8 DUP1
---
0xad5: JUMPDEST 
0xad6: V1028 = 0x0
---
Entry stack: [V12, 0x118, V243]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x118, V243, 0x0, 0x0]

================================

Block 0xad9
[0xad9:0xae0]
---
Predecessors: [0xad5]
Successors: [0x705]
---
0xad9 JUMPDEST
0xada PUSH2 0xae1
0xadd PUSH2 0x705
0xae0 JUMP
---
0xad9: JUMPDEST 
0xada: V1029 = 0xae1
0xadd: V1030 = 0x705
0xae0: JUMP 0x705
---
Entry stack: [V12, 0x118, V243, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xae1]
Exit stack: [V12, 0x118, V243, 0x0, 0x0, 0xae1]

================================

Block 0xae1
[0xae1:0xaea]
---
Predecessors: [0x735]
Successors: [0xaeb, 0xaec]
---
0xae1 JUMPDEST
0xae2 PUSH1 0x1
0xae4 DUP2
0xae5 GT
0xae6 ISZERO
0xae7 PUSH2 0xaec
0xaea JUMPI
---
0xae1: JUMPDEST 
0xae2: V1031 = 0x1
0xae5: V1032 = GT {0x0, 0x1, 0x5, 0xa, 0xf, 0x14} 0x1
0xae6: V1033 = ISZERO V1032
0xae7: V1034 = 0xaec
0xaea: JUMPI 0xaec V1033
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]

================================

Block 0xaeb
[0xaeb:0xaeb]
---
Predecessors: [0xae1]
Successors: []
---
0xaeb INVALID
---
0xaeb: INVALID 
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 0
Stack additions: []
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]

================================

Block 0xaec
[0xaec:0xaf1]
---
Predecessors: [0xae1]
Successors: [0xaf2, 0xaf6]
---
0xaec JUMPDEST
0xaed EQ
0xaee PUSH2 0xaf6
0xaf1 JUMPI
---
0xaec: JUMPDEST 
0xaed: V1035 = EQ {0x0, 0x1, 0x5, 0xa, 0xf, 0x14} S1
0xaee: V1036 = 0xaf6
0xaf1: JUMPI 0xaf6 V1035
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 2
Stack additions: []
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0xaf2
[0xaf2:0xaf5]
---
Predecessors: [0xaec]
Successors: []
---
0xaf2 PUSH1 0x0
0xaf4 DUP1
0xaf5 REVERT
---
0xaf2: V1037 = 0x0
0xaf5: REVERT 0x0 0x0
---
Entry stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xaf6
[0xaf6:0xb00]
---
Predecessors: [0xaec]
Successors: [0xb01, 0xb0f]
---
0xaf6 JUMPDEST
0xaf7 PUSH1 0x0
0xaf9 DUP3
0xafa GT
0xafb DUP1
0xafc ISZERO
0xafd PUSH2 0xb0f
0xb00 JUMPI
---
0xaf6: JUMPDEST 
0xaf7: V1038 = 0x0
0xafa: V1039 = GT S1 0x0
0xafc: V1040 = ISZERO V1039
0xafd: V1041 = 0xb0f
0xb00: JUMPI 0xb0f V1040
---
Entry stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V1039]
Exit stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V1039]

================================

Block 0xb01
[0xb01:0xb0e]
---
Predecessors: [0xaf6]
Successors: [0xb0f]
---
0xb01 POP
0xb02 PUSH1 0x6
0xb04 SLOAD
0xb05 PUSH3 0x10000
0xb09 SWAP1
0xb0a DIV
0xb0b PUSH1 0xff
0xb0d AND
0xb0e ISZERO
---
0xb02: V1042 = 0x6
0xb04: V1043 = S[0x6]
0xb05: V1044 = 0x10000
0xb0a: V1045 = DIV V1043 0x10000
0xb0b: V1046 = 0xff
0xb0d: V1047 = AND 0xff V1045
0xb0e: V1048 = ISZERO V1047
---
Entry stack: [S24, S23, 0xbb1, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1039]
Stack pops: 1
Stack additions: [V1048]
Exit stack: [S24, S23, 0xbb1, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1048]

================================

Block 0xb0f
[0xb0f:0xb14]
---
Predecessors: [0xaf6, 0xb01]
Successors: [0x570, 0xb15]
---
0xb0f JUMPDEST
0xb10 ISZERO
0xb11 PUSH2 0x570
0xb14 JUMPI
---
0xb0f: JUMPDEST 
0xb10: V1049 = ISZERO S0
0xb11: V1050 = 0x570
0xb14: JUMPI 0x570 V1049
---
Entry stack: [S24, S23, 0xbb1, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S24, S23, 0xbb1, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xb15
[0xb15:0xb52]
---
Predecessors: [0xb0f]
Successors: [0x7e0]
---
0xb15 PUSH1 0x4
0xb17 DUP3
0xb18 SWAP1
0xb19 SSTORE
0xb1a TIMESTAMP
0xb1b PUSH1 0x1
0xb1d DUP2
0xb1e SWAP1
0xb1f SSTORE
0xb20 PUSH3 0x2e2480
0xb24 ADD
0xb25 PUSH1 0x2
0xb27 SSTORE
0xb28 PUSH1 0x6
0xb2a DUP1
0xb2b SLOAD
0xb2c PUSH3 0x10000
0xb30 PUSH1 0xff
0xb32 NOT
0xb33 DUP3
0xb34 AND
0xb35 PUSH1 0xff
0xb37 SWAP3
0xb38 DUP4
0xb39 AND
0xb3a ISZERO
0xb3b OR
0xb3c DUP2
0xb3d DUP2
0xb3e DIV
0xb3f SWAP1
0xb40 SWAP3
0xb41 AND
0xb42 ISZERO
0xb43 MUL
0xb44 PUSH3 0xff0000
0xb48 NOT
0xb49 SWAP1
0xb4a SWAP2
0xb4b AND
0xb4c OR
0xb4d SWAP1
0xb4e SSTORE
0xb4f PUSH2 0x7e0
0xb52 JUMP
---
0xb15: V1051 = 0x4
0xb19: S[0x4] = S1
0xb1a: V1052 = TIMESTAMP
0xb1b: V1053 = 0x1
0xb1f: S[0x1] = V1052
0xb20: V1054 = 0x2e2480
0xb24: V1055 = ADD 0x2e2480 V1052
0xb25: V1056 = 0x2
0xb27: S[0x2] = V1055
0xb28: V1057 = 0x6
0xb2b: V1058 = S[0x6]
0xb2c: V1059 = 0x10000
0xb30: V1060 = 0xff
0xb32: V1061 = NOT 0xff
0xb34: V1062 = AND V1058 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0xb35: V1063 = 0xff
0xb39: V1064 = AND 0xff V1058
0xb3a: V1065 = ISZERO V1064
0xb3b: V1066 = OR V1065 V1062
0xb3e: V1067 = DIV V1066 0x10000
0xb41: V1068 = AND 0xff V1067
0xb42: V1069 = ISZERO V1068
0xb43: V1070 = MUL V1069 0x10000
0xb44: V1071 = 0xff0000
0xb48: V1072 = NOT 0xff0000
0xb4b: V1073 = AND V1066 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff
0xb4c: V1074 = OR V1073 V1070
0xb4e: S[0x6] = V1074
0xb4f: V1075 = 0x7e0
0xb52: JUMP 0x7e0
---
Entry stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xb53
[0xb53:0xb58]
---
Predecessors: []
Successors: [0xb59]
---
0xb53 JUMPDEST
0xb54 PUSH1 0x0
0xb56 DUP1
0xb57 REVERT
0xb58 JUMPDEST
---
0xb53: JUMPDEST 
0xb54: V1076 = 0x0
0xb57: REVERT 0x0 0x0
0xb58: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb59
[0xb59:0xb59]
---
Predecessors: [0xb53]
Successors: [0xb5a]
---
0xb59 JUMPDEST
---
0xb59: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb5a
[0xb5a:0xb5b]
---
Predecessors: [0xb59]
Successors: [0xb5c]
---
0xb5a JUMPDEST
0xb5b POP
---
0xb5a: JUMPDEST 
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb5c
[0xb5c:0xb5c]
---
Predecessors: [0xb5a]
Successors: [0xb5d]
---
0xb5c JUMPDEST
---
0xb5c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb5d
[0xb5d:0xb5f]
---
Predecessors: [0xb5c]
Successors: []
Has unresolved jump.
---
0xb5d JUMPDEST
0xb5e POP
0xb5f JUMP
---
0xb5d: JUMPDEST 
0xb5f: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xb60
[0xb60:0xb65]
---
Predecessors: [0x2cd]
Successors: [0x12d]
---
0xb60 JUMPDEST
0xb61 PUSH1 0x3
0xb63 SLOAD
0xb64 DUP2
0xb65 JUMP
---
0xb60: JUMPDEST 
0xb61: V1077 = 0x3
0xb63: V1078 = S[0x3]
0xb65: JUMP 0x12d
---
Entry stack: [V12, 0x12d]
Stack pops: 1
Stack additions: [S0, V1078]
Exit stack: [V12, 0x12d, V1078]

================================

Block 0xb66
[0xb66:0xb69]
---
Predecessors: [0x2f2]
Successors: [0xb6a]
---
0xb66 JUMPDEST
0xb67 PUSH1 0x0
0xb69 DUP1
---
0xb66: JUMPDEST 
0xb67: V1079 = 0x0
---
Entry stack: [V12, 0x12d, V264]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x12d, V264, 0x0, 0x0]

================================

Block 0xb6a
[0xb6a:0xb71]
---
Predecessors: [0xb66]
Successors: [0x705]
---
0xb6a JUMPDEST
0xb6b PUSH2 0xb72
0xb6e PUSH2 0x705
0xb71 JUMP
---
0xb6a: JUMPDEST 
0xb6b: V1080 = 0xb72
0xb6e: V1081 = 0x705
0xb71: JUMP 0x705
---
Entry stack: [V12, 0x12d, V264, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xb72]
Exit stack: [V12, 0x12d, V264, 0x0, 0x0, 0xb72]

================================

Block 0xb72
[0xb72:0xb7b]
---
Predecessors: [0x735]
Successors: [0xb7c, 0xb7d]
---
0xb72 JUMPDEST
0xb73 PUSH1 0x1
0xb75 DUP2
0xb76 GT
0xb77 ISZERO
0xb78 PUSH2 0xb7d
0xb7b JUMPI
---
0xb72: JUMPDEST 
0xb73: V1082 = 0x1
0xb76: V1083 = GT {0x0, 0x1, 0x5, 0xa, 0xf, 0x14} 0x1
0xb77: V1084 = ISZERO V1083
0xb78: V1085 = 0xb7d
0xb7b: JUMPI 0xb7d V1084
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]

================================

Block 0xb7c
[0xb7c:0xb7c]
---
Predecessors: [0xb72]
Successors: []
---
0xb7c INVALID
---
0xb7c: INVALID 
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 0
Stack additions: []
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]

================================

Block 0xb7d
[0xb7d:0xb83]
---
Predecessors: [0xb72]
Successors: [0xb84, 0xbb8]
---
0xb7d JUMPDEST
0xb7e EQ
0xb7f ISZERO
0xb80 PUSH2 0xbb8
0xb83 JUMPI
---
0xb7d: JUMPDEST 
0xb7e: V1086 = EQ {0x0, 0x1, 0x5, 0xa, 0xf, 0x14} S1
0xb7f: V1087 = ISZERO V1086
0xb80: V1088 = 0xbb8
0xb83: JUMPI 0xbb8 V1087
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 2
Stack additions: []
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0xb84
[0xb84:0xba4]
---
Predecessors: [0xb7d]
Successors: [0xfac]
---
0xb84 PUSH2 0xbb1
0xb87 PUSH8 0xde0b6b3a7640000
0xb90 PUSH2 0xba5
0xb93 PUSH1 0x4
0xb95 SLOAD
0xb96 DUP6
0xb97 PUSH8 0xde0b6b3a7640000
0xba0 MUL
0xba1 PUSH2 0xfac
0xba4 JUMP
---
0xb84: V1089 = 0xbb1
0xb87: V1090 = 0xde0b6b3a7640000
0xb90: V1091 = 0xba5
0xb93: V1092 = 0x4
0xb95: V1093 = S[0x4]
0xb97: V1094 = 0xde0b6b3a7640000
0xba0: V1095 = MUL 0xde0b6b3a7640000 S1
0xba1: V1096 = 0xfac
0xba4: JUMP 0xfac
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xbb1, 0xde0b6b3a7640000, 0xba5, V1093, V1095]
Exit stack: [S5, {0x116, 0x1cb}, S3, S2, S1, S0, 0xbb1, 0xde0b6b3a7640000, 0xba5, V1093, V1095]

================================

Block 0xba5
[0xba5:0xbb0]
---
Predecessors: [0xbc7, 0xf8a, 0x1009]
Successors: [0xff4]
---
0xba5 JUMPDEST
0xba6 SWAP1
0xba7 PUSH4 0xffffffff
0xbac PUSH2 0xff4
0xbaf AND
0xbb0 JUMP
---
0xba5: JUMPDEST 
0xba7: V1097 = 0xffffffff
0xbac: V1098 = 0xff4
0xbaf: V1099 = AND 0xff4 0xffffffff
0xbb0: JUMP 0xff4
---
Entry stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0xbb1
[0xbb1:0xbb7]
---
Predecessors: [0x6f9, 0xbc7, 0xf8a, 0x1009]
Successors: [0xbc7]
---
0xbb1 JUMPDEST
0xbb2 SWAP1
0xbb3 POP
0xbb4 PUSH2 0xbc7
0xbb7 JUMP
---
0xbb1: JUMPDEST 
0xbb4: V1100 = 0xbc7
0xbb7: JUMP 0xbc7
---
Entry stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0xbb8
[0xbb8:0xbc3]
---
Predecessors: [0xb7d]
Successors: [0xf4b]
---
0xbb8 JUMPDEST
0xbb9 PUSH2 0xbc4
0xbbc PUSH1 0x4
0xbbe SLOAD
0xbbf DUP4
0xbc0 PUSH2 0xf4b
0xbc3 JUMP
---
0xbb8: JUMPDEST 
0xbb9: V1101 = 0xbc4
0xbbc: V1102 = 0x4
0xbbe: V1103 = S[0x4]
0xbc0: V1104 = 0xf4b
0xbc3: JUMP 0xf4b
---
Entry stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xbc4, V1103, S1]
Exit stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xbc4, V1103, S1]

================================

Block 0xbc4
[0xbc4:0xbc6]
---
Predecessors: [0x735, 0xbc7, 0xf8a, 0x1009]
Successors: [0xbc7]
---
0xbc4 JUMPDEST
0xbc5 SWAP1
0xbc6 POP
---
0xbc4: JUMPDEST 
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0xbc7
[0xbc7:0xbcb]
---
Predecessors: [0xbb1, 0xbc4, 0xc72, 0x104e, 0x1070, 0x1077, 0x1081]
Successors: [0x116, 0x118, 0x12d, 0x33a, 0x562, 0x5a8, 0xba5, 0xbb1, 0xbc4, 0xdb7, 0xf6f, 0xf84]
---
0xbc7 JUMPDEST
0xbc8 SWAP2
0xbc9 SWAP1
0xbca POP
0xbcb JUMP
---
0xbc7: JUMPDEST 
0xbcb: JUMP S2
---
Entry stack: [S24, S23, 0xbb1, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [S24, S23, 0xbb1, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0]

================================

Block 0xbcc
[0xbcc:0xbe1]
---
Predecessors: [0x31a]
Successors: [0xbe2, 0xbe6]
---
0xbcc JUMPDEST
0xbcd PUSH1 0x6
0xbcf SLOAD
0xbd0 PUSH1 0xff
0xbd2 PUSH2 0x100
0xbd5 SWAP1
0xbd6 SWAP2
0xbd7 DIV
0xbd8 AND
0xbd9 ISZERO
0xbda ISZERO
0xbdb PUSH1 0x1
0xbdd EQ
0xbde PUSH2 0xbe6
0xbe1 JUMPI
---
0xbcc: JUMPDEST 
0xbcd: V1105 = 0x6
0xbcf: V1106 = S[0x6]
0xbd0: V1107 = 0xff
0xbd2: V1108 = 0x100
0xbd7: V1109 = DIV V1106 0x100
0xbd8: V1110 = AND V1109 0xff
0xbd9: V1111 = ISZERO V1110
0xbda: V1112 = ISZERO V1111
0xbdb: V1113 = 0x1
0xbdd: V1114 = EQ 0x1 V1112
0xbde: V1115 = 0xbe6
0xbe1: JUMPI 0xbe6 V1114
---
Entry stack: [V12, 0x118]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118]

================================

Block 0xbe2
[0xbe2:0xbe5]
---
Predecessors: [0xbcc]
Successors: []
---
0xbe2 PUSH1 0x0
0xbe4 DUP1
0xbe5 REVERT
---
0xbe2: V1116 = 0x0
0xbe5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118]

================================

Block 0xbe6
[0xbe6:0xc03]
---
Predecessors: [0xbcc]
Successors: [0xc04, 0xc08]
---
0xbe6 JUMPDEST
0xbe7 PUSH1 0x6
0xbe9 SLOAD
0xbea CALLER
0xbeb PUSH1 0x1
0xbed PUSH1 0xa0
0xbef PUSH1 0x2
0xbf1 EXP
0xbf2 SUB
0xbf3 SWAP1
0xbf4 DUP2
0xbf5 AND
0xbf6 PUSH4 0x1000000
0xbfb SWAP1
0xbfc SWAP3
0xbfd DIV
0xbfe AND
0xbff EQ
0xc00 PUSH2 0xc08
0xc03 JUMPI
---
0xbe6: JUMPDEST 
0xbe7: V1117 = 0x6
0xbe9: V1118 = S[0x6]
0xbea: V1119 = CALLER
0xbeb: V1120 = 0x1
0xbed: V1121 = 0xa0
0xbef: V1122 = 0x2
0xbf1: V1123 = EXP 0x2 0xa0
0xbf2: V1124 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf5: V1125 = AND 0xffffffffffffffffffffffffffffffffffffffff V1119
0xbf6: V1126 = 0x1000000
0xbfd: V1127 = DIV V1118 0x1000000
0xbfe: V1128 = AND V1127 0xffffffffffffffffffffffffffffffffffffffff
0xbff: V1129 = EQ V1128 V1125
0xc00: V1130 = 0xc08
0xc03: JUMPI 0xc08 V1129
---
Entry stack: [V12, 0x118]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118]

================================

Block 0xc04
[0xc04:0xc07]
---
Predecessors: [0xbe6]
Successors: []
---
0xc04 PUSH1 0x0
0xc06 DUP1
0xc07 REVERT
---
0xc04: V1131 = 0x0
0xc07: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118]

================================

Block 0xc08
[0xc08:0xc0b]
---
Predecessors: [0xbe6]
Successors: [0xc0c]
---
0xc08 JUMPDEST
0xc09 PUSH1 0x1
0xc0b DUP1
---
0xc08: JUMPDEST 
0xc09: V1132 = 0x1
---
Entry stack: [V12, 0x118]
Stack pops: 0
Stack additions: [0x1, 0x1]
Exit stack: [V12, 0x118, 0x1, 0x1]

================================

Block 0xc0c
[0xc0c:0xc13]
---
Predecessors: [0xc08]
Successors: [0x705]
---
0xc0c JUMPDEST
0xc0d PUSH2 0xc14
0xc10 PUSH2 0x705
0xc13 JUMP
---
0xc0c: JUMPDEST 
0xc0d: V1133 = 0xc14
0xc10: V1134 = 0x705
0xc13: JUMP 0x705
---
Entry stack: [V12, 0x118, 0x1, 0x1]
Stack pops: 0
Stack additions: [0xc14]
Exit stack: [V12, 0x118, 0x1, 0x1, 0xc14]

================================

Block 0xc14
[0xc14:0xc1d]
---
Predecessors: [0x735]
Successors: [0xc1e, 0xc1f]
---
0xc14 JUMPDEST
0xc15 PUSH1 0x1
0xc17 DUP2
0xc18 GT
0xc19 ISZERO
0xc1a PUSH2 0xc1f
0xc1d JUMPI
---
0xc14: JUMPDEST 
0xc15: V1135 = 0x1
0xc18: V1136 = GT {0x0, 0x1, 0x5, 0xa, 0xf, 0x14} 0x1
0xc19: V1137 = ISZERO V1136
0xc1a: V1138 = 0xc1f
0xc1d: JUMPI 0xc1f V1137
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]

================================

Block 0xc1e
[0xc1e:0xc1e]
---
Predecessors: [0xc14]
Successors: []
---
0xc1e INVALID
---
0xc1e: INVALID 
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 0
Stack additions: []
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]

================================

Block 0xc1f
[0xc1f:0xc24]
---
Predecessors: [0xc14]
Successors: [0xc25, 0xc29]
---
0xc1f JUMPDEST
0xc20 EQ
0xc21 PUSH2 0xc29
0xc24 JUMPI
---
0xc1f: JUMPDEST 
0xc20: V1139 = EQ {0x0, 0x1, 0x5, 0xa, 0xf, 0x14} S1
0xc21: V1140 = 0xc29
0xc24: JUMPI 0xc29 V1139
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 2
Stack additions: []
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0xc25
[0xc25:0xc28]
---
Predecessors: [0xc1f]
Successors: []
---
0xc25 PUSH1 0x0
0xc27 DUP1
0xc28 REVERT
---
0xc25: V1141 = 0x0
0xc28: REVERT 0x0 0x0
---
Entry stack: [V12, {0x116, 0x1cb}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S3, S2, S1, S0]

================================

Block 0xc29
[0xc29:0xc3b]
---
Predecessors: [0xc1f]
Successors: [0xc3c]
---
0xc29 JUMPDEST
0xc2a PUSH1 0x6
0xc2c DUP1
0xc2d SLOAD
0xc2e PUSH1 0xff
0xc30 NOT
0xc31 DUP2
0xc32 AND
0xc33 PUSH1 0xff
0xc35 SWAP1
0xc36 SWAP2
0xc37 AND
0xc38 ISZERO
0xc39 OR
0xc3a SWAP1
0xc3b SSTORE
---
0xc29: JUMPDEST 
0xc2a: V1142 = 0x6
0xc2d: V1143 = S[0x6]
0xc2e: V1144 = 0xff
0xc30: V1145 = NOT 0xff
0xc32: V1146 = AND V1143 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0xc33: V1147 = 0xff
0xc37: V1148 = AND V1143 0xff
0xc38: V1149 = ISZERO V1148
0xc39: V1150 = OR V1149 V1146
0xc3b: S[0x6] = V1150
---
Entry stack: [V12, {0x116, 0x1cb}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S3, S2, S1, S0]

================================

Block 0xc3c
[0xc3c:0xc3c]
---
Predecessors: [0xc29]
Successors: [0xc3d]
---
0xc3c JUMPDEST
---
0xc3c: JUMPDEST 
---
Entry stack: [V12, {0x116, 0x1cb}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S3, S2, S1, S0]

================================

Block 0xc3d
[0xc3d:0xc3e]
---
Predecessors: [0xc3c]
Successors: [0xc3f]
---
0xc3d JUMPDEST
0xc3e POP
---
0xc3d: JUMPDEST 
---
Entry stack: [V12, {0x116, 0x1cb}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S3, S2, S1]

================================

Block 0xc3f
[0xc3f:0xc3f]
---
Predecessors: [0xc3d]
Successors: [0xc40]
---
0xc3f JUMPDEST
---
0xc3f: JUMPDEST 
---
Entry stack: [V12, {0x116, 0x1cb}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S2, S1, S0]

================================

Block 0xc40
[0xc40:0xc41]
---
Predecessors: [0xc3f]
Successors: [0x118]
---
0xc40 JUMPDEST
0xc41 JUMP
---
0xc40: JUMPDEST 
0xc41: JUMP S0
---
Entry stack: [V12, {0x116, 0x1cb}, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S2, S1]

================================

Block 0xc42
[0xc42:0xc45]
---
Predecessors: [0x32f]
Successors: [0xc46]
---
0xc42 JUMPDEST
0xc43 PUSH1 0x0
0xc45 DUP1
---
0xc42: JUMPDEST 
0xc43: V1151 = 0x0
---
Entry stack: [V12, 0x33a, V285]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x33a, V285, 0x0, 0x0]

================================

Block 0xc46
[0xc46:0xc4d]
---
Predecessors: [0xc42]
Successors: [0x705]
---
0xc46 JUMPDEST
0xc47 PUSH2 0xc4e
0xc4a PUSH2 0x705
0xc4d JUMP
---
0xc46: JUMPDEST 
0xc47: V1152 = 0xc4e
0xc4a: V1153 = 0x705
0xc4d: JUMP 0x705
---
Entry stack: [V12, 0x33a, V285, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xc4e]
Exit stack: [V12, 0x33a, V285, 0x0, 0x0, 0xc4e]

================================

Block 0xc4e
[0xc4e:0xc57]
---
Predecessors: [0x735]
Successors: [0xc58, 0xc59]
---
0xc4e JUMPDEST
0xc4f PUSH1 0x1
0xc51 DUP2
0xc52 GT
0xc53 ISZERO
0xc54 PUSH2 0xc59
0xc57 JUMPI
---
0xc4e: JUMPDEST 
0xc4f: V1154 = 0x1
0xc52: V1155 = GT {0x0, 0x1, 0x5, 0xa, 0xf, 0x14} 0x1
0xc53: V1156 = ISZERO V1155
0xc54: V1157 = 0xc59
0xc57: JUMPI 0xc59 V1156
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]

================================

Block 0xc58
[0xc58:0xc58]
---
Predecessors: [0xc4e]
Successors: []
---
0xc58 INVALID
---
0xc58: INVALID 
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 0
Stack additions: []
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]

================================

Block 0xc59
[0xc59:0xc5f]
---
Predecessors: [0xc4e]
Successors: [0xc60, 0xc79]
---
0xc59 JUMPDEST
0xc5a EQ
0xc5b ISZERO
0xc5c PUSH2 0xc79
0xc5f JUMPI
---
0xc59: JUMPDEST 
0xc5a: V1158 = EQ {0x0, 0x1, 0x5, 0xa, 0xf, 0x14} S1
0xc5b: V1159 = ISZERO V1158
0xc5c: V1160 = 0xc79
0xc5f: JUMPI 0xc79 V1159
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x5, 0xa, 0xf, 0x14}]
Stack pops: 2
Stack additions: []
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0xc60
[0xc60:0xc71]
---
Predecessors: [0xc59]
Successors: [0x1010]
---
0xc60 PUSH2 0xbb1
0xc63 DUP3
0xc64 PUSH8 0xde0b6b3a7640000
0xc6d MUL
0xc6e PUSH2 0x1010
0xc71 JUMP
---
0xc60: V1161 = 0xbb1
0xc64: V1162 = 0xde0b6b3a7640000
0xc6d: V1163 = MUL 0xde0b6b3a7640000 S1
0xc6e: V1164 = 0x1010
0xc71: JUMP 0x1010
---
Entry stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xbb1, V1163]
Exit stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xbb1, V1163]

================================

Block 0xc72
[0xc72:0xc78]
---
Predecessors: []
Successors: [0xbc7]
---
0xc72 JUMPDEST
0xc73 SWAP1
0xc74 POP
0xc75 PUSH2 0xbc7
0xc78 JUMP
---
0xc72: JUMPDEST 
0xc75: V1165 = 0xbc7
0xc78: JUMP 0xbc7
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xc79
[0xc79:0xc80]
---
Predecessors: [0xc59]
Successors: [0x108e]
---
0xc79 JUMPDEST
0xc7a PUSH2 0xbc4
0xc7d PUSH2 0x108e
0xc80 JUMP
---
0xc79: JUMPDEST 
0xc7a: V1166 = 0xbc4
0xc7d: V1167 = 0x108e
0xc80: JUMP 0x108e
---
Entry stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0xbc4]
Exit stack: [S23, S22, 0xbb1, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xbc4]

================================

Block 0xc81
[0xc81:0xc83]
---
Predecessors: []
Successors: [0xc84]
---
0xc81 JUMPDEST
0xc82 SWAP1
0xc83 POP
---
0xc81: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xc84
[0xc84:0xc88]
---
Predecessors: [0xc81]
Successors: []
Has unresolved jump.
---
0xc84 JUMPDEST
0xc85 SWAP2
0xc86 SWAP1
0xc87 POP
0xc88 JUMP
---
0xc84: JUMPDEST 
0xc88: JUMP S2
---
Entry stack: [S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xc89
[0xc89:0xc97]
---
Predecessors: [0x35b]
Successors: [0x1f2]
---
0xc89 JUMPDEST
0xc8a PUSH1 0x8
0xc8c SLOAD
0xc8d PUSH1 0x1
0xc8f PUSH1 0xa0
0xc91 PUSH1 0x2
0xc93 EXP
0xc94 SUB
0xc95 AND
0xc96 DUP2
0xc97 JUMP
---
0xc89: JUMPDEST 
0xc8a: V1168 = 0x8
0xc8c: V1169 = S[0x8]
0xc8d: V1170 = 0x1
0xc8f: V1171 = 0xa0
0xc91: V1172 = 0x2
0xc93: V1173 = EXP 0x2 0xa0
0xc94: V1174 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc95: V1175 = AND 0xffffffffffffffffffffffffffffffffffffffff V1169
0xc97: JUMP 0x1f2
---
Entry stack: [V12, 0x1f2]
Stack pops: 1
Stack additions: [S0, V1175]
Exit stack: [V12, 0x1f2, V1175]

================================

Block 0xc98
[0xc98:0xc9d]
---
Predecessors: [0x38a]
Successors: [0x12d]
---
0xc98 JUMPDEST
0xc99 PUSH1 0x1
0xc9b SLOAD
0xc9c DUP2
0xc9d JUMP
---
0xc98: JUMPDEST 
0xc99: V1176 = 0x1
0xc9b: V1177 = S[0x1]
0xc9d: JUMP 0x12d
---
Entry stack: [V12, 0x12d]
Stack pops: 1
Stack additions: [S0, V1177]
Exit stack: [V12, 0x12d, V1177]

================================

Block 0xc9e
[0xc9e:0xcb4]
---
Predecessors: [0x3af]
Successors: [0xcb5, 0xcb9]
---
0xc9e JUMPDEST
0xc9f PUSH1 0x8
0xca1 SLOAD
0xca2 CALLER
0xca3 PUSH1 0x1
0xca5 PUSH1 0xa0
0xca7 PUSH1 0x2
0xca9 EXP
0xcaa SUB
0xcab SWAP1
0xcac DUP2
0xcad AND
0xcae SWAP2
0xcaf AND
0xcb0 EQ
0xcb1 PUSH2 0xcb9
0xcb4 JUMPI
---
0xc9e: JUMPDEST 
0xc9f: V1178 = 0x8
0xca1: V1179 = S[0x8]
0xca2: V1180 = CALLER
0xca3: V1181 = 0x1
0xca5: V1182 = 0xa0
0xca7: V1183 = 0x2
0xca9: V1184 = EXP 0x2 0xa0
0xcaa: V1185 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcad: V1186 = AND 0xffffffffffffffffffffffffffffffffffffffff V1180
0xcaf: V1187 = AND V1179 0xffffffffffffffffffffffffffffffffffffffff
0xcb0: V1188 = EQ V1187 V1186
0xcb1: V1189 = 0xcb9
0xcb4: JUMPI 0xcb9 V1188
---
Entry stack: [V12, 0x118, V340, V342]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V340, V342]

================================

Block 0xcb5
[0xcb5:0xcb8]
---
Predecessors: [0xc9e]
Successors: []
---
0xcb5 PUSH1 0x0
0xcb7 DUP1
0xcb8 REVERT
---
0xcb5: V1190 = 0x0
0xcb8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118, V340, V342]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V340, V342]

================================

Block 0xcb9
[0xcb9:0xcde]
---
Predecessors: [0xc9e]
Successors: [0xcdf]
---
0xcb9 JUMPDEST
0xcba PUSH1 0x1
0xcbc PUSH1 0xa0
0xcbe PUSH1 0x2
0xcc0 EXP
0xcc1 SUB
0xcc2 DUP3
0xcc3 AND
0xcc4 PUSH1 0x0
0xcc6 SWAP1
0xcc7 DUP2
0xcc8 MSTORE
0xcc9 PUSH1 0x9
0xccb PUSH1 0x20
0xccd MSTORE
0xcce PUSH1 0x40
0xcd0 SWAP1
0xcd1 SHA3
0xcd2 PUSH8 0xde0b6b3a7640000
0xcdb DUP3
0xcdc MUL
0xcdd SWAP1
0xcde SSTORE
---
0xcb9: JUMPDEST 
0xcba: V1191 = 0x1
0xcbc: V1192 = 0xa0
0xcbe: V1193 = 0x2
0xcc0: V1194 = EXP 0x2 0xa0
0xcc1: V1195 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc3: V1196 = AND V340 0xffffffffffffffffffffffffffffffffffffffff
0xcc4: V1197 = 0x0
0xcc8: M[0x0] = V1196
0xcc9: V1198 = 0x9
0xccb: V1199 = 0x20
0xccd: M[0x20] = 0x9
0xcce: V1200 = 0x40
0xcd1: V1201 = SHA3 0x0 0x40
0xcd2: V1202 = 0xde0b6b3a7640000
0xcdc: V1203 = MUL V342 0xde0b6b3a7640000
0xcde: S[V1201] = V1203
---
Entry stack: [V12, 0x118, V340, V342]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x118, V340, V342]

================================

Block 0xcdf
[0xcdf:0xcdf]
---
Predecessors: [0xcb9]
Successors: [0xce0]
---
0xcdf JUMPDEST
---
0xcdf: JUMPDEST 
---
Entry stack: [V12, 0x118, V340, V342]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V340, V342]

================================

Block 0xce0
[0xce0:0xce3]
---
Predecessors: [0xcdf]
Successors: [0x118]
---
0xce0 JUMPDEST
0xce1 POP
0xce2 POP
0xce3 JUMP
---
0xce0: JUMPDEST 
0xce3: JUMP 0x118
---
Entry stack: [V12, 0x118, V340, V342]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0xce4
[0xce4:0xd01]
---
Predecessors: [0x3d3]
Successors: [0xd02, 0xd06]
---
0xce4 JUMPDEST
0xce5 PUSH1 0x6
0xce7 SLOAD
0xce8 CALLER
0xce9 PUSH1 0x1
0xceb PUSH1 0xa0
0xced PUSH1 0x2
0xcef EXP
0xcf0 SUB
0xcf1 SWAP1
0xcf2 DUP2
0xcf3 AND
0xcf4 PUSH4 0x1000000
0xcf9 SWAP1
0xcfa SWAP3
0xcfb DIV
0xcfc AND
0xcfd EQ
0xcfe PUSH2 0xd06
0xd01 JUMPI
---
0xce4: JUMPDEST 
0xce5: V1204 = 0x6
0xce7: V1205 = S[0x6]
0xce8: V1206 = CALLER
0xce9: V1207 = 0x1
0xceb: V1208 = 0xa0
0xced: V1209 = 0x2
0xcef: V1210 = EXP 0x2 0xa0
0xcf0: V1211 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf3: V1212 = AND 0xffffffffffffffffffffffffffffffffffffffff V1206
0xcf4: V1213 = 0x1000000
0xcfb: V1214 = DIV V1205 0x1000000
0xcfc: V1215 = AND V1214 0xffffffffffffffffffffffffffffffffffffffff
0xcfd: V1216 = EQ V1215 V1212
0xcfe: V1217 = 0xd06
0xd01: JUMPI 0xd06 V1216
---
Entry stack: [V12, 0x118, V356]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V356]

================================

Block 0xd02
[0xd02:0xd05]
---
Predecessors: [0xce4]
Successors: []
---
0xd02 PUSH1 0x0
0xd04 DUP1
0xd05 REVERT
---
0xd02: V1218 = 0x0
0xd05: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118, V356]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V356]

================================

Block 0xd06
[0xd06:0xd17]
---
Predecessors: [0xce4]
Successors: [0xd18, 0xd1c]
---
0xd06 JUMPDEST
0xd07 DUP1
0xd08 PUSH1 0x1
0xd0a PUSH1 0xa0
0xd0c PUSH1 0x2
0xd0e EXP
0xd0f SUB
0xd10 DUP2
0xd11 AND
0xd12 ISZERO
0xd13 ISZERO
0xd14 PUSH2 0xd1c
0xd17 JUMPI
---
0xd06: JUMPDEST 
0xd08: V1219 = 0x1
0xd0a: V1220 = 0xa0
0xd0c: V1221 = 0x2
0xd0e: V1222 = EXP 0x2 0xa0
0xd0f: V1223 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd11: V1224 = AND V356 0xffffffffffffffffffffffffffffffffffffffff
0xd12: V1225 = ISZERO V1224
0xd13: V1226 = ISZERO V1225
0xd14: V1227 = 0xd1c
0xd17: JUMPI 0xd1c V1226
---
Entry stack: [V12, 0x118, V356]
Stack pops: 1
Stack additions: [S0, S0]
Exit stack: [V12, 0x118, V356, V356]

================================

Block 0xd18
[0xd18:0xd1b]
---
Predecessors: [0xd06]
Successors: []
---
0xd18 PUSH1 0x0
0xd1a DUP1
0xd1b REVERT
---
0xd18: V1228 = 0x0
0xd1b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x118, V356, V356]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V356, V356]

================================

Block 0xd1c
[0xd1c:0xd44]
---
Predecessors: [0xd06]
Successors: [0xd45]
---
0xd1c JUMPDEST
0xd1d PUSH1 0x8
0xd1f DUP1
0xd20 SLOAD
0xd21 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd36 NOT
0xd37 AND
0xd38 PUSH1 0x1
0xd3a PUSH1 0xa0
0xd3c PUSH1 0x2
0xd3e EXP
0xd3f SUB
0xd40 DUP5
0xd41 AND
0xd42 OR
0xd43 SWAP1
0xd44 SSTORE
---
0xd1c: JUMPDEST 
0xd1d: V1229 = 0x8
0xd20: V1230 = S[0x8]
0xd21: V1231 = 0xffffffffffffffffffffffffffffffffffffffff
0xd36: V1232 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd37: V1233 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1230
0xd38: V1234 = 0x1
0xd3a: V1235 = 0xa0
0xd3c: V1236 = 0x2
0xd3e: V1237 = EXP 0x2 0xa0
0xd3f: V1238 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd41: V1239 = AND V356 0xffffffffffffffffffffffffffffffffffffffff
0xd42: V1240 = OR V1239 V1233
0xd44: S[0x8] = V1240
---
Entry stack: [V12, 0x118, V356, V356]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x118, V356, V356]

================================

Block 0xd45
[0xd45:0xd45]
---
Predecessors: [0xd1c]
Successors: [0xd46]
---
0xd45 JUMPDEST
---
0xd45: JUMPDEST 
---
Entry stack: [V12, 0x118, V356, V356]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x118, V356, V356]

================================

Block 0xd46
[0xd46:0xd47]
---
Predecessors: [0xd45]
Successors: [0xd48]
---
0xd46 JUMPDEST
0xd47 POP
---
0xd46: JUMPDEST 
---
Entry stack: [V12, 0x118, V356, V356]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x118, V356]

================================

Block 0xd48
[0xd48:0xd4a]
---
Predecessors: [0xd46]
Successors: [0x118]
---
0xd48 JUMPDEST
0xd49 POP
0xd4a JUMP
---
0xd48: JUMPDEST 
0xd4a: JUMP 0x118
---
Entry stack: [V12, 0x118, V356]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xd4b
[0xd4b:0xd64]
---
Predecessors: [0x3f4]
Successors: [0xd65]
---
0xd4b JUMPDEST
0xd4c PUSH1 0x1
0xd4e PUSH1 0xa0
0xd50 PUSH1 0x2
0xd52 EXP
0xd53 SUB
0xd54 DUP2
0xd55 AND
0xd56 PUSH1 0x0
0xd58 SWAP1
0xd59 DUP2
0xd5a MSTORE
0xd5b PUSH1 0x9
0xd5d PUSH1 0x20
0xd5f MSTORE
0xd60 PUSH1 0x40
0xd62 SWAP1
0xd63 SHA3
0xd64 SLOAD
---
0xd4b: JUMPDEST 
0xd4c: V1241 = 0x1
0xd4e: V1242 = 0xa0
0xd50: V1243 = 0x2
0xd52: V1244 = EXP 0x2 0xa0
0xd53: V1245 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd55: V1246 = AND V370 0xffffffffffffffffffffffffffffffffffffffff
0xd56: V1247 = 0x0
0xd5a: M[0x0] = V1246
0xd5b: V1248 = 0x9
0xd5d: V1249 = 0x20
0xd5f: M[0x20] = 0x9
0xd60: V1250 = 0x40
0xd63: V1251 = SHA3 0x0 0x40
0xd64: V1252 = S[V1251]
---
Entry stack: [V12, 0x12d, V370]
Stack pops: 1
Stack additions: [S0, V1252]
Exit stack: [V12, 0x12d, V370, V1252]

================================

Block 0xd65
[0xd65:0xd69]
---
Predecessors: [0xd4b]
Successors: [0x12d]
---
0xd65 JUMPDEST
0xd66 SWAP2
0xd67 SWAP1
0xd68 POP
0xd69 JUMP
---
0xd65: JUMPDEST 
0xd69: JUMP 0x12d
---
Entry stack: [V12, 0x12d, V370, V1252]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V1252]

================================

Block 0xd6a
[0xd6a:0xd78]
---
Predecessors: [0x44d]
Successors: [0x1f2]
---
0xd6a JUMPDEST
0xd6b PUSH1 0x0
0xd6d SLOAD
0xd6e PUSH1 0x1
0xd70 PUSH1 0xa0
0xd72 PUSH1 0x2
0xd74 EXP
0xd75 SUB
0xd76 AND
0xd77 DUP2
0xd78 JUMP
---
0xd6a: JUMPDEST 
0xd6b: V1253 = 0x0
0xd6d: V1254 = S[0x0]
0xd6e: V1255 = 0x1
0xd70: V1256 = 0xa0
0xd72: V1257 = 0x2
0xd74: V1258 = EXP 0x2 0xa0
0xd75: V1259 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd76: V1260 = AND 0xffffffffffffffffffffffffffffffffffffffff V1254
0xd78: JUMP 0x1f2
---
Entry stack: [V12, 0x1f2]
Stack pops: 1
Stack additions: [S0, V1260]
Exit stack: [V12, 0x1f2, V1260]

================================

Block 0xd79
[0xd79:0xd83]
---
Predecessors: [0x4fa]
Successors: [0xd84, 0xd85]
---
0xd79 JUMPDEST
0xd7a PUSH1 0x0
0xd7c DUP3
0xd7d DUP3
0xd7e GT
0xd7f ISZERO
0xd80 PUSH2 0xd85
0xd83 JUMPI
---
0xd79: JUMPDEST 
0xd7a: V1261 = 0x0
0xd7e: V1262 = GT V490 V488
0xd7f: V1263 = ISZERO V1262
0xd80: V1264 = 0xd85
0xd83: JUMPI 0xd85 V1263
---
Entry stack: [V12, {0x116, 0x1cb}, S6, 0x0, 0x0, S3, 0x523, V488, V490]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, {0x116, 0x1cb}, S6, 0x0, 0x0, S3, 0x523, V488, V490, 0x0]

================================

Block 0xd84
[0xd84:0xd84]
---
Predecessors: [0xd79]
Successors: []
---
0xd84 INVALID
---
0xd84: INVALID 
---
Entry stack: [V12, {0x116, 0x1cb}, S7, 0x0, 0x0, S4, 0x523, V488, V490, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x116, 0x1cb}, S7, 0x0, 0x0, S4, 0x523, V488, V490, 0x0]

================================

Block 0xd85
[0xd85:0xd89]
---
Predecessors: [0xd79]
Successors: [0xd8a]
---
0xd85 JUMPDEST
0xd86 POP
0xd87 DUP1
0xd88 DUP3
0xd89 SUB
---
0xd85: JUMPDEST 
0xd89: V1265 = SUB V488 V490
---
Entry stack: [V12, {0x116, 0x1cb}, S7, 0x0, 0x0, S4, 0x523, V488, V490, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V1265]
Exit stack: [V12, {0x116, 0x1cb}, S7, 0x0, 0x0, S4, 0x523, V488, V490, V1265]

================================

Block 0xd8a
[0xd8a:0xd8f]
---
Predecessors: [0xd85]
Successors: [0x523]
---
0xd8a JUMPDEST
0xd8b SWAP3
0xd8c SWAP2
0xd8d POP
0xd8e POP
0xd8f JUMP
---
0xd8a: JUMPDEST 
0xd8f: JUMP 0x523
---
Entry stack: [V12, {0x116, 0x1cb}, S7, 0x0, 0x0, S4, 0x523, V488, V490, V1265]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, {0x116, 0x1cb}, S7, 0x0, 0x0, S4, V1265]

================================

Block 0xd90
[0xd90:0xd9d]
---
Predecessors: [0x55a]
Successors: [0xd9e, 0xda2]
---
0xd90 JUMPDEST
0xd91 PUSH1 0x0
0xd93 DUP1
0xd94 PUSH1 0x5
0xd96 SLOAD
0xd97 CALLVALUE
0xd98 LT
0xd99 ISZERO
0xd9a PUSH2 0xda2
0xd9d JUMPI
---
0xd90: JUMPDEST 
0xd91: V1266 = 0x0
0xd94: V1267 = 0x5
0xd96: V1268 = S[0x5]
0xd97: V1269 = CALLVALUE
0xd98: V1270 = LT V1269 V1268
0xd99: V1271 = ISZERO V1270
0xd9a: V1272 = 0xda2
0xd9d: JUMPI 0xda2 V1271
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x562, S0]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x562, S0, 0x0, 0x0]

================================

Block 0xd9e
[0xd9e:0xda1]
---
Predecessors: [0xd90]
Successors: []
---
0xd9e PUSH1 0x0
0xda0 DUP1
0xda1 REVERT
---
0xd9e: V1273 = 0x0
0xda1: REVERT 0x0 0x0
---
Entry stack: [S27, S26, 0xbb1, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x562, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S27, S26, 0xbb1, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x562, S2, 0x0, 0x0]

================================

Block 0xda2
[0xda2:0xdaa]
---
Predecessors: [0xd90]
Successors: [0xf0d]
---
0xda2 JUMPDEST
0xda3 PUSH2 0xdab
0xda6 CALLVALUE
0xda7 PUSH2 0xf0d
0xdaa JUMP
---
0xda2: JUMPDEST 
0xda3: V1274 = 0xdab
0xda6: V1275 = CALLVALUE
0xda7: V1276 = 0xf0d
0xdaa: JUMP 0xf0d
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x562, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xdab, V1275]
Exit stack: [S9, {0x116, 0x1cb}, S7, S6, S5, S4, 0x562, S2, 0x0, 0x0, 0xdab, V1275]

================================

Block 0xdab
[0xdab:0xdb6]
---
Predecessors: [0x7e3]
Successors: [0xfac]
---
0xdab JUMPDEST
0xdac PUSH2 0xdb7
0xdaf PUSH1 0x4
0xdb1 SLOAD
0xdb2 CALLVALUE
0xdb3 PUSH2 0xfac
0xdb6 JUMP
---
0xdab: JUMPDEST 
0xdac: V1277 = 0xdb7
0xdaf: V1278 = 0x4
0xdb1: V1279 = S[0x4]
0xdb2: V1280 = CALLVALUE
0xdb3: V1281 = 0xfac
0xdb6: JUMP 0xfac
---
Entry stack: [V12, {0x116, 0x1cb}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0xdb7, V1279, V1280]
Exit stack: [V12, {0x116, 0x1cb}, S7, S6, S5, S4, S3, S2, S1, S0, 0xdb7, V1279, V1280]

================================

Block 0xdb7
[0xdb7:0xe19]
---
Predecessors: [0xbc7, 0xf8a, 0x1009]
Successors: [0xe1a, 0xe1e]
---
0xdb7 JUMPDEST
0xdb8 PUSH1 0x0
0xdba DUP1
0xdbb SLOAD
0xdbc SWAP2
0xdbd SWAP3
0xdbe POP
0xdbf PUSH1 0x1
0xdc1 PUSH1 0xa0
0xdc3 PUSH1 0x2
0xdc5 EXP
0xdc6 SUB
0xdc7 SWAP1
0xdc8 SWAP2
0xdc9 AND
0xdca SWAP1
0xdcb PUSH4 0xa9059cbb
0xdd0 SWAP1
0xdd1 DUP6
0xdd2 SWAP1
0xdd3 DUP5
0xdd4 SWAP1
0xdd5 PUSH1 0x40
0xdd7 MLOAD
0xdd8 PUSH1 0x20
0xdda ADD
0xddb MSTORE
0xddc PUSH1 0x40
0xdde MLOAD
0xddf PUSH1 0xe0
0xde1 PUSH1 0x2
0xde3 EXP
0xde4 PUSH4 0xffffffff
0xde9 DUP6
0xdea AND
0xdeb MUL
0xdec DUP2
0xded MSTORE
0xdee PUSH1 0x1
0xdf0 PUSH1 0xa0
0xdf2 PUSH1 0x2
0xdf4 EXP
0xdf5 SUB
0xdf6 SWAP1
0xdf7 SWAP3
0xdf8 AND
0xdf9 PUSH1 0x4
0xdfb DUP4
0xdfc ADD
0xdfd MSTORE
0xdfe PUSH1 0x24
0xe00 DUP3
0xe01 ADD
0xe02 MSTORE
0xe03 PUSH1 0x44
0xe05 ADD
0xe06 PUSH1 0x20
0xe08 PUSH1 0x40
0xe0a MLOAD
0xe0b DUP1
0xe0c DUP4
0xe0d SUB
0xe0e DUP2
0xe0f PUSH1 0x0
0xe11 DUP8
0xe12 DUP1
0xe13 EXTCODESIZE
0xe14 ISZERO
0xe15 ISZERO
0xe16 PUSH2 0xe1e
0xe19 JUMPI
---
0xdb7: JUMPDEST 
0xdb8: V1282 = 0x0
0xdbb: V1283 = S[0x0]
0xdbf: V1284 = 0x1
0xdc1: V1285 = 0xa0
0xdc3: V1286 = 0x2
0xdc5: V1287 = EXP 0x2 0xa0
0xdc6: V1288 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdc9: V1289 = AND V1283 0xffffffffffffffffffffffffffffffffffffffff
0xdcb: V1290 = 0xa9059cbb
0xdd5: V1291 = 0x40
0xdd7: V1292 = M[0x40]
0xdd8: V1293 = 0x20
0xdda: V1294 = ADD 0x20 V1292
0xddb: M[V1294] = 0x0
0xddc: V1295 = 0x40
0xdde: V1296 = M[0x40]
0xddf: V1297 = 0xe0
0xde1: V1298 = 0x2
0xde3: V1299 = EXP 0x2 0xe0
0xde4: V1300 = 0xffffffff
0xdea: V1301 = AND 0xa9059cbb 0xffffffff
0xdeb: V1302 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xded: M[V1296] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xdee: V1303 = 0x1
0xdf0: V1304 = 0xa0
0xdf2: V1305 = 0x2
0xdf4: V1306 = EXP 0x2 0xa0
0xdf5: V1307 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf8: V1308 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xdf9: V1309 = 0x4
0xdfc: V1310 = ADD V1296 0x4
0xdfd: M[V1310] = V1308
0xdfe: V1311 = 0x24
0xe01: V1312 = ADD V1296 0x24
0xe02: M[V1312] = S0
0xe03: V1313 = 0x44
0xe05: V1314 = ADD 0x44 V1296
0xe06: V1315 = 0x20
0xe08: V1316 = 0x40
0xe0a: V1317 = M[0x40]
0xe0d: V1318 = SUB V1314 V1317
0xe0f: V1319 = 0x0
0xe13: V1320 = EXTCODESIZE V1289
0xe14: V1321 = ISZERO V1320
0xe15: V1322 = ISZERO V1321
0xe16: V1323 = 0xe1e
0xe19: JUMPI 0xe1e V1322
---
Entry stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S0, V1289, 0xa9059cbb, V1314, 0x20, V1317, V1318, V1317, 0x0, V1289]
Exit stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, V1289, 0xa9059cbb, V1314, 0x20, V1317, V1318, V1317, 0x0, V1289]

================================

Block 0xe1a
[0xe1a:0xe1d]
---
Predecessors: [0xdb7]
Successors: []
---
0xe1a PUSH1 0x0
0xe1c DUP1
0xe1d REVERT
---
0xe1a: V1324 = 0x0
0xe1d: REVERT 0x0 0x0
---
Entry stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1289, 0xa9059cbb, V1314, 0x20, V1317, V1318, V1317, 0x0, V1289]
Stack pops: 0
Stack additions: []
Exit stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1289, 0xa9059cbb, V1314, 0x20, V1317, V1318, V1317, 0x0, V1289]

================================

Block 0xe1e
[0xe1e:0xe2a]
---
Predecessors: [0xdb7]
Successors: [0xe2b, 0xe2f]
---
0xe1e JUMPDEST
0xe1f PUSH2 0x2c6
0xe22 GAS
0xe23 SUB
0xe24 CALL
0xe25 ISZERO
0xe26 ISZERO
0xe27 PUSH2 0xe2f
0xe2a JUMPI
---
0xe1e: JUMPDEST 
0xe1f: V1325 = 0x2c6
0xe22: V1326 = GAS
0xe23: V1327 = SUB V1326 0x2c6
0xe24: V1328 = CALL V1327 V1289 0x0 V1317 V1318 V1317 0x20
0xe25: V1329 = ISZERO V1328
0xe26: V1330 = ISZERO V1329
0xe27: V1331 = 0xe2f
0xe2a: JUMPI 0xe2f V1330
---
Entry stack: [S28, S27, S26, 0xbb1, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1289, 0xa9059cbb, V1314, 0x20, V1317, V1318, V1317, 0x0, V1289]
Stack pops: 6
Stack additions: []
Exit stack: [S28, S27, S26, 0xbb1, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1289, 0xa9059cbb, V1314]

================================

Block 0xe2b
[0xe2b:0xe2e]
---
Predecessors: [0xe1e]
Successors: []
---
0xe2b PUSH1 0x0
0xe2d DUP1
0xe2e REVERT
---
0xe2b: V1332 = 0x0
0xe2e: REVERT 0x0 0x0
---
Entry stack: [S18, S17, 0xbb1, 0xde0b6b3a7640000, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, 0xbb1, 0xde0b6b3a7640000, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0xe2f
[0xe2f:0xe3e]
---
Predecessors: [0xe1e]
Successors: [0xe3f, 0xefd]
---
0xe2f JUMPDEST
0xe30 POP
0xe31 POP
0xe32 POP
0xe33 PUSH1 0x40
0xe35 MLOAD
0xe36 DUP1
0xe37 MLOAD
0xe38 SWAP1
0xe39 POP
0xe3a ISZERO
0xe3b PUSH2 0xefd
0xe3e JUMPI
---
0xe2f: JUMPDEST 
0xe33: V1333 = 0x40
0xe35: V1334 = M[0x40]
0xe37: V1335 = M[V1334]
0xe3a: V1336 = ISZERO V1335
0xe3b: V1337 = 0xefd
0xe3e: JUMPI 0xefd V1336
---
Entry stack: [S18, S17, 0xbb1, 0xde0b6b3a7640000, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [S18, S17, 0xbb1, 0xde0b6b3a7640000, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0xe3f
[0xe3f:0xe81]
---
Predecessors: [0xe2f]
Successors: [0xe82, 0xe86]
---
0xe3f PUSH1 0x0
0xe41 SLOAD
0xe42 PUSH1 0x1
0xe44 PUSH1 0xa0
0xe46 PUSH1 0x2
0xe48 EXP
0xe49 SUB
0xe4a AND
0xe4b PUSH4 0x52e97326
0xe50 DUP3
0xe51 PUSH1 0x40
0xe53 MLOAD
0xe54 PUSH1 0xe0
0xe56 PUSH1 0x2
0xe58 EXP
0xe59 PUSH4 0xffffffff
0xe5e DUP5
0xe5f AND
0xe60 MUL
0xe61 DUP2
0xe62 MSTORE
0xe63 PUSH1 0x4
0xe65 DUP2
0xe66 ADD
0xe67 SWAP2
0xe68 SWAP1
0xe69 SWAP2
0xe6a MSTORE
0xe6b PUSH1 0x24
0xe6d ADD
0xe6e PUSH1 0x0
0xe70 PUSH1 0x40
0xe72 MLOAD
0xe73 DUP1
0xe74 DUP4
0xe75 SUB
0xe76 DUP2
0xe77 PUSH1 0x0
0xe79 DUP8
0xe7a DUP1
0xe7b EXTCODESIZE
0xe7c ISZERO
0xe7d ISZERO
0xe7e PUSH2 0xe86
0xe81 JUMPI
---
0xe3f: V1338 = 0x0
0xe41: V1339 = S[0x0]
0xe42: V1340 = 0x1
0xe44: V1341 = 0xa0
0xe46: V1342 = 0x2
0xe48: V1343 = EXP 0x2 0xa0
0xe49: V1344 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe4a: V1345 = AND 0xffffffffffffffffffffffffffffffffffffffff V1339
0xe4b: V1346 = 0x52e97326
0xe51: V1347 = 0x40
0xe53: V1348 = M[0x40]
0xe54: V1349 = 0xe0
0xe56: V1350 = 0x2
0xe58: V1351 = EXP 0x2 0xe0
0xe59: V1352 = 0xffffffff
0xe5f: V1353 = AND 0x52e97326 0xffffffff
0xe60: V1354 = MUL 0x52e97326 0x100000000000000000000000000000000000000000000000000000000
0xe62: M[V1348] = 0x52e9732600000000000000000000000000000000000000000000000000000000
0xe63: V1355 = 0x4
0xe66: V1356 = ADD V1348 0x4
0xe6a: M[V1356] = S0
0xe6b: V1357 = 0x24
0xe6d: V1358 = ADD 0x24 V1348
0xe6e: V1359 = 0x0
0xe70: V1360 = 0x40
0xe72: V1361 = M[0x40]
0xe75: V1362 = SUB V1358 V1361
0xe77: V1363 = 0x0
0xe7b: V1364 = EXTCODESIZE V1345
0xe7c: V1365 = ISZERO V1364
0xe7d: V1366 = ISZERO V1365
0xe7e: V1367 = 0xe86
0xe81: JUMPI 0xe86 V1366
---
Entry stack: [S15, S14, 0xbb1, 0xde0b6b3a7640000, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V1345, 0x52e97326, V1358, 0x0, V1361, V1362, V1361, 0x0, V1345]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V1345, 0x52e97326, V1358, 0x0, V1361, V1362, V1361, 0x0, V1345]

================================

Block 0xe82
[0xe82:0xe85]
---
Predecessors: [0xe3f]
Successors: []
---
0xe82 PUSH1 0x0
0xe84 DUP1
0xe85 REVERT
---
0xe82: V1368 = 0x0
0xe85: REVERT 0x0 0x0
---
Entry stack: [S19, 0x562, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1345, 0x52e97326, V1358, 0x0, V1361, V1362, V1361, 0x0, V1345]
Stack pops: 0
Stack additions: []
Exit stack: [S19, 0x562, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1345, 0x52e97326, V1358, 0x0, V1361, V1362, V1361, 0x0, V1345]

================================

Block 0xe86
[0xe86:0xe92]
---
Predecessors: [0xe3f]
Successors: [0xe93, 0xe97]
---
0xe86 JUMPDEST
0xe87 PUSH2 0x2c6
0xe8a GAS
0xe8b SUB
0xe8c CALL
0xe8d ISZERO
0xe8e ISZERO
0xe8f PUSH2 0xe97
0xe92 JUMPI
---
0xe86: JUMPDEST 
0xe87: V1369 = 0x2c6
0xe8a: V1370 = GAS
0xe8b: V1371 = SUB V1370 0x2c6
0xe8c: V1372 = CALL V1371 V1345 0x0 V1361 V1362 V1361 0x0
0xe8d: V1373 = ISZERO V1372
0xe8e: V1374 = ISZERO V1373
0xe8f: V1375 = 0xe97
0xe92: JUMPI 0xe97 V1374
---
Entry stack: [S19, 0x562, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1345, 0x52e97326, V1358, 0x0, V1361, V1362, V1361, 0x0, V1345]
Stack pops: 6
Stack additions: []
Exit stack: [S19, 0x562, S17, S16, S15, S14, S13, S12, S11, S10, S9, V1345, 0x52e97326, V1358]

================================

Block 0xe93
[0xe93:0xe96]
---
Predecessors: [0xe86]
Successors: []
---
0xe93 PUSH1 0x0
0xe95 DUP1
0xe96 REVERT
---
0xe93: V1376 = 0x0
0xe96: REVERT 0x0 0x0
---
Entry stack: [S13, 0x562, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1345, 0x52e97326, V1358]
Stack pops: 0
Stack additions: []
Exit stack: [S13, 0x562, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1345, 0x52e97326, V1358]

================================

Block 0xe97
[0xe97:0xeac]
---
Predecessors: [0xe86]
Successors: [0xf92]
---
0xe97 JUMPDEST
0xe98 POP
0xe99 POP
0xe9a PUSH1 0x3
0xe9c SLOAD
0xe9d PUSH2 0xead
0xea0 SWAP2
0xea1 POP
0xea2 CALLVALUE
0xea3 PUSH4 0xffffffff
0xea8 PUSH2 0xf92
0xeab AND
0xeac JUMP
---
0xe97: JUMPDEST 
0xe9a: V1377 = 0x3
0xe9c: V1378 = S[0x3]
0xe9d: V1379 = 0xead
0xea2: V1380 = CALLVALUE
0xea3: V1381 = 0xffffffff
0xea8: V1382 = 0xf92
0xeab: V1383 = AND 0xf92 0xffffffff
0xeac: JUMP 0xf92
---
Entry stack: [S13, 0x562, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1345, 0x52e97326, V1358]
Stack pops: 3
Stack additions: [0xead, V1378, V1380]
Exit stack: [S13, 0x562, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0xead, V1378, V1380]

================================

Block 0xead
[0xead:0xefc]
---
Predecessors: [0xfa5]
Successors: [0x6f7]
---
0xead JUMPDEST
0xeae PUSH1 0x3
0xeb0 SSTORE
0xeb1 PUSH1 0x1
0xeb3 PUSH1 0xa0
0xeb5 PUSH1 0x2
0xeb7 EXP
0xeb8 SUB
0xeb9 DUP4
0xeba AND
0xebb PUSH32 0xcd60aa75dea3072fbc07ae6d7d856b5dc5f4eee88854f5b4abf7b680ef8bc50f
0xedc CALLVALUE
0xedd DUP4
0xede PUSH1 0x40
0xee0 MLOAD
0xee1 SWAP2
0xee2 DUP3
0xee3 MSTORE
0xee4 PUSH1 0x20
0xee6 DUP3
0xee7 ADD
0xee8 MSTORE
0xee9 PUSH1 0x40
0xeeb SWAP1
0xeec DUP2
0xeed ADD
0xeee SWAP1
0xeef MLOAD
0xef0 DUP1
0xef1 SWAP2
0xef2 SUB
0xef3 SWAP1
0xef4 LOG2
0xef5 PUSH1 0x1
0xef7 SWAP2
0xef8 POP
0xef9 PUSH2 0x6f7
0xefc JUMP
---
0xead: JUMPDEST 
0xeae: V1384 = 0x3
0xeb0: S[0x3] = S0
0xeb1: V1385 = 0x1
0xeb3: V1386 = 0xa0
0xeb5: V1387 = 0x2
0xeb7: V1388 = EXP 0x2 0xa0
0xeb8: V1389 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeba: V1390 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xebb: V1391 = 0xcd60aa75dea3072fbc07ae6d7d856b5dc5f4eee88854f5b4abf7b680ef8bc50f
0xedc: V1392 = CALLVALUE
0xede: V1393 = 0x40
0xee0: V1394 = M[0x40]
0xee3: M[V1394] = V1392
0xee4: V1395 = 0x20
0xee7: V1396 = ADD V1394 0x20
0xee8: M[V1396] = S1
0xee9: V1397 = 0x40
0xeed: V1398 = ADD 0x40 V1394
0xeef: V1399 = M[0x40]
0xef2: V1400 = SUB V1398 V1399
0xef4: LOG V1399 V1400 0xcd60aa75dea3072fbc07ae6d7d856b5dc5f4eee88854f5b4abf7b680ef8bc50f V1390
0xef5: V1401 = 0x1
0xef9: V1402 = 0x6f7
0xefc: JUMP 0x6f7
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, 0x1, S1]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1, S1]

================================

Block 0xefd
[0xefd:0xf05]
---
Predecessors: [0xe2f]
Successors: [0x6f7]
---
0xefd JUMPDEST
0xefe PUSH1 0x0
0xf00 SWAP2
0xf01 POP
0xf02 PUSH2 0x6f7
0xf05 JUMP
---
0xefd: JUMPDEST 
0xefe: V1403 = 0x0
0xf02: V1404 = 0x6f7
0xf05: JUMP 0x6f7
---
Entry stack: [S15, S14, 0xbb1, 0xde0b6b3a7640000, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [S15, S14, 0xbb1, 0xde0b6b3a7640000, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]

================================

Block 0xf06
[0xf06:0xf06]
---
Predecessors: []
Successors: [0xf07]
---
0xf06 JUMPDEST
---
0xf06: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf07
[0xf07:0xf0c]
---
Predecessors: [0xf06]
Successors: []
Has unresolved jump.
---
0xf07 JUMPDEST
0xf08 POP
0xf09 SWAP2
0xf0a SWAP1
0xf0b POP
0xf0c JUMP
---
0xf07: JUMPDEST 
0xf0c: JUMP S3
---
Entry stack: []
Stack pops: 4
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xf0d
[0xf0d:0xf42]
---
Predecessors: [0x593, 0xda2]
Successors: [0x7e3, 0xf43]
---
0xf0d JUMPDEST
0xf0e PUSH1 0x6
0xf10 SLOAD
0xf11 PUSH4 0x1000000
0xf16 SWAP1
0xf17 DIV
0xf18 PUSH1 0x1
0xf1a PUSH1 0xa0
0xf1c PUSH1 0x2
0xf1e EXP
0xf1f SUB
0xf20 AND
0xf21 PUSH2 0x8fc
0xf24 DUP3
0xf25 ISZERO
0xf26 MUL
0xf27 DUP3
0xf28 PUSH1 0x40
0xf2a MLOAD
0xf2b PUSH1 0x0
0xf2d PUSH1 0x40
0xf2f MLOAD
0xf30 DUP1
0xf31 DUP4
0xf32 SUB
0xf33 DUP2
0xf34 DUP6
0xf35 DUP9
0xf36 DUP9
0xf37 CALL
0xf38 SWAP4
0xf39 POP
0xf3a POP
0xf3b POP
0xf3c POP
0xf3d ISZERO
0xf3e ISZERO
0xf3f PUSH2 0x7e3
0xf42 JUMPI
---
0xf0d: JUMPDEST 
0xf0e: V1405 = 0x6
0xf10: V1406 = S[0x6]
0xf11: V1407 = 0x1000000
0xf17: V1408 = DIV V1406 0x1000000
0xf18: V1409 = 0x1
0xf1a: V1410 = 0xa0
0xf1c: V1411 = 0x2
0xf1e: V1412 = EXP 0x2 0xa0
0xf1f: V1413 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf20: V1414 = AND 0xffffffffffffffffffffffffffffffffffffffff V1408
0xf21: V1415 = 0x8fc
0xf25: V1416 = ISZERO S0
0xf26: V1417 = MUL V1416 0x8fc
0xf28: V1418 = 0x40
0xf2a: V1419 = M[0x40]
0xf2b: V1420 = 0x0
0xf2d: V1421 = 0x40
0xf2f: V1422 = M[0x40]
0xf32: V1423 = SUB V1419 V1422
0xf37: V1424 = CALL V1417 V1414 S0 V1422 V1423 V1422 0x0
0xf3d: V1425 = ISZERO V1424
0xf3e: V1426 = ISZERO V1425
0xf3f: V1427 = 0x7e3
0xf42: JUMPI 0x7e3 V1426
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x59c, 0xdab}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x59c, 0xdab}, S0]

================================

Block 0xf43
[0xf43:0xf46]
---
Predecessors: [0xf0d]
Successors: []
---
0xf43 PUSH1 0x0
0xf45 DUP1
0xf46 REVERT
---
0xf43: V1428 = 0x0
0xf46: REVERT 0x0 0x0
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x59c, 0xdab}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x59c, 0xdab}, S0]

================================

Block 0xf47
[0xf47:0xf47]
---
Predecessors: []
Successors: [0xf48]
---
0xf47 JUMPDEST
---
0xf47: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf48
[0xf48:0xf4a]
---
Predecessors: [0xf47]
Successors: []
Has unresolved jump.
---
0xf48 JUMPDEST
0xf49 POP
0xf4a JUMP
---
0xf48: JUMPDEST 
0xf4a: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xf4b
[0xf4b:0xf5e]
---
Predecessors: [0x59c, 0xbb8]
Successors: [0x1102]
---
0xf4b JUMPDEST
0xf4c PUSH1 0x0
0xf4e DUP1
0xf4f DUP1
0xf50 PUSH2 0xf5f
0xf53 DUP5
0xf54 DUP7
0xf55 PUSH4 0xffffffff
0xf5a PUSH2 0x1102
0xf5d AND
0xf5e JUMP
---
0xf4b: JUMPDEST 
0xf4c: V1429 = 0x0
0xf50: V1430 = 0xf5f
0xf55: V1431 = 0xffffffff
0xf5a: V1432 = 0x1102
0xf5d: V1433 = AND 0x1102 0xffffffff
0xf5e: JUMP 0x1102
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x5a8, 0xbc4}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x0, 0xf5f, S0, S1]
Exit stack: [S12, {0x116, 0x1cb}, S10, S9, S8, S7, S6, S5, S4, S3, {0x5a8, 0xbc4}, S1, S0, 0x0, 0x0, 0x0, 0xf5f, S0, S1]

================================

Block 0xf5f
[0xf5f:0xf6e]
---
Predecessors: [0xfa5]
Successors: [0x108e]
---
0xf5f JUMPDEST
0xf60 SWAP2
0xf61 POP
0xf62 PUSH2 0xf84
0xf65 PUSH1 0x64
0xf67 DUP4
0xf68 PUSH2 0xf6f
0xf6b PUSH2 0x108e
0xf6e JUMP
---
0xf5f: JUMPDEST 
0xf62: V1434 = 0xf84
0xf65: V1435 = 0x64
0xf68: V1436 = 0xf6f
0xf6b: V1437 = 0x108e
0xf6e: JUMP 0x108e
---
Entry stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, 0xf84, 0x64, S0, 0xf6f]
Exit stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, S1, 0xf84, 0x64, S0, 0xf6f]

================================

Block 0xf6f
[0xf6f:0xf83]
---
Predecessors: [0x735, 0xbc7, 0xf8a, 0x1009]
Successors: [0xff4]
---
0xf6f JUMPDEST
0xf70 PUSH1 0x64
0xf72 ADD
0xf73 PUSH1 0xff
0xf75 AND
0xf76 MUL
0xf77 PUSH2 0xff4
0xf7a SWAP1
0xf7b SWAP2
0xf7c SWAP1
0xf7d PUSH4 0xffffffff
0xf82 AND
0xf83 JUMP
---
0xf6f: JUMPDEST 
0xf70: V1438 = 0x64
0xf72: V1439 = ADD 0x64 S0
0xf73: V1440 = 0xff
0xf75: V1441 = AND 0xff V1439
0xf76: V1442 = MUL V1441 S1
0xf77: V1443 = 0xff4
0xf7d: V1444 = 0xffffffff
0xf82: V1445 = AND 0xffffffff 0xff4
0xf83: JUMP 0xff4
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V1442, S2]
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1442, S2]

================================

Block 0xf84
[0xf84:0xf89]
---
Predecessors: [0xbc7, 0xf8a, 0x1009]
Successors: [0xf8a]
---
0xf84 JUMPDEST
0xf85 SWAP1
0xf86 POP
0xf87 DUP1
0xf88 SWAP3
0xf89 POP
---
0xf84: JUMPDEST 
---
Entry stack: [S19, S18, 0xbb1, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0, S2, S0]
Exit stack: [S19, S18, 0xbb1, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S0, S2, S0]

================================

Block 0xf8a
[0xf8a:0xf91]
---
Predecessors: [0xf84]
Successors: [0x116, 0x118, 0x12d, 0x33a, 0x5a8, 0xba5, 0xbb1, 0xbc4, 0xdb7, 0xf6f, 0xf84]
---
0xf8a JUMPDEST
0xf8b POP
0xf8c POP
0xf8d SWAP3
0xf8e SWAP2
0xf8f POP
0xf90 POP
0xf91 JUMP
---
0xf8a: JUMPDEST 
0xf91: JUMP S5
---
Entry stack: [S18, S17, 0xbb1, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S2]
Exit stack: [S18, S17, 0xbb1, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S2]

================================

Block 0xf92
[0xf92:0xf9f]
---
Predecessors: [0x688, 0xe97]
Successors: [0xfa0, 0xfa1]
---
0xf92 JUMPDEST
0xf93 PUSH1 0x0
0xf95 DUP3
0xf96 DUP3
0xf97 ADD
0xf98 DUP4
0xf99 DUP2
0xf9a LT
0xf9b ISZERO
0xf9c PUSH2 0xfa1
0xf9f JUMPI
---
0xf92: JUMPDEST 
0xf93: V1446 = 0x0
0xf97: V1447 = ADD S0 S1
0xf9a: V1448 = LT V1447 S1
0xf9b: V1449 = ISZERO V1448
0xf9c: V1450 = 0xfa1
0xf9f: JUMPI 0xfa1 V1449
---
Entry stack: [S13, 0x562, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x69e, 0xead}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1447]
Exit stack: [S13, 0x562, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x69e, 0xead}, S1, S0, 0x0, V1447]

================================

Block 0xfa0
[0xfa0:0xfa0]
---
Predecessors: [0xf92]
Successors: []
---
0xfa0 INVALID
---
0xfa0: INVALID 
---
Entry stack: [S15, 0x562, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x69e, 0xead}, S3, S2, 0x0, V1447]
Stack pops: 0
Stack additions: []
Exit stack: [S15, 0x562, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x69e, 0xead}, S3, S2, 0x0, V1447]

================================

Block 0xfa1
[0xfa1:0xfa4]
---
Predecessors: [0xf92, 0x111e]
Successors: [0xfa5]
---
0xfa1 JUMPDEST
0xfa2 DUP1
0xfa3 SWAP2
0xfa4 POP
---
0xfa1: JUMPDEST 
---
Entry stack: [S32, S31, 0xbb1, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x69e, 0xead, 0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S32, S31, 0xbb1, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x69e, 0xead, 0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069}, S3, S2, S0, S0]

================================

Block 0xfa5
[0xfa5:0xfab]
---
Predecessors: [0xfa1]
Successors: [0x69e, 0xead, 0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069]
---
0xfa5 JUMPDEST
0xfa6 POP
0xfa7 SWAP3
0xfa8 SWAP2
0xfa9 POP
0xfaa POP
0xfab JUMP
---
0xfa5: JUMPDEST 
0xfab: JUMP {0x69e, 0xead, 0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069}
---
Entry stack: [S30, S29, S28, S27, 0x562, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x69e, 0xead, 0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S30, S29, S28, S27, 0x562, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0xfac
[0xfac:0xfbf]
---
Predecessors: [0xb84, 0xdab]
Successors: [0x1102]
---
0xfac JUMPDEST
0xfad PUSH1 0x0
0xfaf DUP1
0xfb0 DUP1
0xfb1 PUSH2 0xfc0
0xfb4 DUP5
0xfb5 DUP7
0xfb6 PUSH4 0xffffffff
0xfbb PUSH2 0x1102
0xfbe AND
0xfbf JUMP
---
0xfac: JUMPDEST 
0xfad: V1451 = 0x0
0xfb1: V1452 = 0xfc0
0xfb6: V1453 = 0xffffffff
0xfbb: V1454 = 0x1102
0xfbe: V1455 = AND 0x1102 0xffffffff
0xfbf: JUMP 0x1102
---
Entry stack: [V12, {0x116, 0x1cb}, S10, S9, S8, S7, S6, S5, S4, S3, {0xba5, 0xdb7}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x0, 0xfc0, S0, S1]
Exit stack: [V12, {0x116, 0x1cb}, S10, S9, S8, S7, S6, S5, S4, S3, {0xba5, 0xdb7}, S1, S0, 0x0, 0x0, 0x0, 0xfc0, S0, S1]

================================

Block 0xfc0
[0xfc0:0xfd0]
---
Predecessors: [0xfa5]
Successors: [0x1010]
---
0xfc0 JUMPDEST
0xfc1 SWAP2
0xfc2 POP
0xfc3 PUSH2 0xf84
0xfc6 PUSH1 0x64
0xfc8 DUP4
0xfc9 PUSH2 0xf6f
0xfcc DUP8
0xfcd PUSH2 0x1010
0xfd0 JUMP
---
0xfc0: JUMPDEST 
0xfc3: V1456 = 0xf84
0xfc6: V1457 = 0x64
0xfc9: V1458 = 0xf6f
0xfcd: V1459 = 0x1010
0xfd0: JUMP 0x1010
---
Entry stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S0, S1, 0xf84, 0x64, S0, 0xf6f, S4]
Exit stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, S1, 0xf84, 0x64, S0, 0xf6f, S4]

================================

Block 0xfd1
[0xfd1:0xfe5]
---
Predecessors: []
Successors: [0xff4]
---
0xfd1 JUMPDEST
0xfd2 PUSH1 0x64
0xfd4 ADD
0xfd5 PUSH1 0xff
0xfd7 AND
0xfd8 MUL
0xfd9 PUSH2 0xff4
0xfdc SWAP1
0xfdd SWAP2
0xfde SWAP1
0xfdf PUSH4 0xffffffff
0xfe4 AND
0xfe5 JUMP
---
0xfd1: JUMPDEST 
0xfd2: V1460 = 0x64
0xfd4: V1461 = ADD 0x64 S0
0xfd5: V1462 = 0xff
0xfd7: V1463 = AND 0xff V1461
0xfd8: V1464 = MUL V1463 S1
0xfd9: V1465 = 0xff4
0xfdf: V1466 = 0xffffffff
0xfe4: V1467 = AND 0xffffffff 0xff4
0xfe5: JUMP 0xff4
---
Entry stack: []
Stack pops: 3
Stack additions: [V1464, S2]
Exit stack: [V1464, S2]

================================

Block 0xfe6
[0xfe6:0xfeb]
---
Predecessors: []
Successors: [0xfec]
---
0xfe6 JUMPDEST
0xfe7 SWAP1
0xfe8 POP
0xfe9 DUP1
0xfea SWAP3
0xfeb POP
---
0xfe6: JUMPDEST 
---
Entry stack: []
Stack pops: 4
Stack additions: [S0, S2, S0]
Exit stack: [S0, S2, S0]

================================

Block 0xfec
[0xfec:0xff3]
---
Predecessors: [0xfe6]
Successors: []
Has unresolved jump.
---
0xfec JUMPDEST
0xfed POP
0xfee POP
0xfef SWAP3
0xff0 SWAP2
0xff1 POP
0xff2 POP
0xff3 JUMP
---
0xfec: JUMPDEST 
0xff3: JUMP S5
---
Entry stack: [S2, S1, S0]
Stack pops: 6
Stack additions: [S2]
Exit stack: [S2]

================================

Block 0xff4
[0xff4:0x1000]
---
Predecessors: [0xba5, 0xf6f, 0xfd1]
Successors: [0x1001, 0x1002]
---
0xff4 JUMPDEST
0xff5 PUSH1 0x0
0xff7 DUP1
0xff8 DUP3
0xff9 DUP5
0xffa DUP2
0xffb ISZERO
0xffc ISZERO
0xffd PUSH2 0x1002
0x1000 JUMPI
---
0xff4: JUMPDEST 
0xff5: V1468 = 0x0
0xffb: V1469 = ISZERO S0
0xffc: V1470 = ISZERO V1469
0xffd: V1471 = 0x1002
0x1000: JUMPI 0x1002 V1470
---
Entry stack: [S24, S23, 0xbb1, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [S24, S23, 0xbb1, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0x1001
[0x1001:0x1001]
---
Predecessors: [0xff4]
Successors: []
---
0x1001 INVALID
---
0x1001: INVALID 
---
Entry stack: [S22, S21, S20, 0xde0b6b3a7640000, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S22, S21, S20, 0xde0b6b3a7640000, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x1002
[0x1002:0x1008]
---
Predecessors: [0xff4]
Successors: [0x1009]
---
0x1002 JUMPDEST
0x1003 DIV
0x1004 SWAP1
0x1005 POP
0x1006 DUP1
0x1007 SWAP2
0x1008 POP
---
0x1002: JUMPDEST 
0x1003: V1472 = DIV S0 S1
---
Entry stack: [S22, S21, S20, 0xde0b6b3a7640000, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 4
Stack additions: [V1472, V1472]
Exit stack: [S22, S21, S20, 0xde0b6b3a7640000, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1472, V1472]

================================

Block 0x1009
[0x1009:0x100f]
---
Predecessors: [0x1002]
Successors: [0x116, 0x118, 0x12d, 0x1cb, 0x33a, 0x562, 0x5a8, 0xba5, 0xbb1, 0xbc4, 0xdb7, 0xf6f, 0xf84]
---
0x1009 JUMPDEST
0x100a POP
0x100b SWAP3
0x100c SWAP2
0x100d POP
0x100e POP
0x100f JUMP
---
0x1009: JUMPDEST 
0x100f: JUMP S4
---
Entry stack: [S20, S19, 0xbb1, 0xde0b6b3a7640000, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1472, V1472]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S20, S19, 0xbb1, 0xde0b6b3a7640000, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V1472]

================================

Block 0x1010
[0x1010:0x1026]
---
Predecessors: [0xc60, 0xfc0]
Successors: [0x1102]
---
0x1010 JUMPDEST
0x1011 PUSH1 0x0
0x1013 PUSH2 0x1027
0x1016 PUSH1 0x5
0x1018 DUP1
0x1019 SLOAD
0x101a PUSH2 0x1102
0x101d SWAP1
0x101e SWAP2
0x101f SWAP1
0x1020 PUSH4 0xffffffff
0x1025 AND
0x1026 JUMP
---
0x1010: JUMPDEST 
0x1011: V1473 = 0x0
0x1013: V1474 = 0x1027
0x1016: V1475 = 0x5
0x1019: V1476 = S[0x5]
0x101a: V1477 = 0x1102
0x1020: V1478 = 0xffffffff
0x1025: V1479 = AND 0xffffffff 0x1102
0x1026: JUMP 0x1102
---
Entry stack: [S26, S25, 0xbb1, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbb1, 0xf6f}, S0]
Stack pops: 0
Stack additions: [0x0, 0x1027, V1476, 0x5]
Exit stack: [S26, S25, 0xbb1, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbb1, 0xf6f}, S0, 0x0, 0x1027, V1476, 0x5]

================================

Block 0x1027
[0x1027:0x1030]
---
Predecessors: [0xfa5]
Successors: [0x1031, 0x1048]
---
0x1027 JUMPDEST
0x1028 DUP3
0x1029 LT
0x102a ISZERO
0x102b DUP1
0x102c ISZERO
0x102d PUSH2 0x1048
0x1030 JUMPI
---
0x1027: JUMPDEST 
0x1029: V1480 = LT S2 S0
0x102a: V1481 = ISZERO V1480
0x102c: V1482 = ISZERO V1481
0x102d: V1483 = 0x1048
0x1030: JUMPI 0x1048 V1482
---
Entry stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, V1481]
Exit stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1481]

================================

Block 0x1031
[0x1031:0x1044]
---
Predecessors: [0x1027]
Successors: [0x1102]
---
0x1031 POP
0x1032 PUSH1 0x5
0x1034 SLOAD
0x1035 PUSH2 0x1045
0x1038 SWAP1
0x1039 PUSH1 0xa
0x103b PUSH4 0xffffffff
0x1040 PUSH2 0x1102
0x1043 AND
0x1044 JUMP
---
0x1032: V1484 = 0x5
0x1034: V1485 = S[0x5]
0x1035: V1486 = 0x1045
0x1039: V1487 = 0xa
0x103b: V1488 = 0xffffffff
0x1040: V1489 = 0x1102
0x1043: V1490 = AND 0x1102 0xffffffff
0x1044: JUMP 0x1102
---
Entry stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1481]
Stack pops: 1
Stack additions: [0x1045, V1485, 0xa]
Exit stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1045, V1485, 0xa]

================================

Block 0x1045
[0x1045:0x1047]
---
Predecessors: [0xfa5]
Successors: [0x1048]
---
0x1045 JUMPDEST
0x1046 DUP3
0x1047 LT
---
0x1045: JUMPDEST 
0x1047: V1491 = LT S2 S0
---
Entry stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, V1491]
Exit stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1491]

================================

Block 0x1048
[0x1048:0x104d]
---
Predecessors: [0x1027, 0x1045]
Successors: [0x104e, 0x1055]
---
0x1048 JUMPDEST
0x1049 ISZERO
0x104a PUSH2 0x1055
0x104d JUMPI
---
0x1048: JUMPDEST 
0x1049: V1492 = ISZERO S0
0x104a: V1493 = 0x1055
0x104d: JUMPI 0x1055 V1492
---
Entry stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S22, S21, 0xbb1, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x104e
[0x104e:0x1054]
---
Predecessors: [0x1048]
Successors: [0xbc7]
---
0x104e POP
0x104f PUSH1 0x1e
0x1051 PUSH2 0xbc7
0x1054 JUMP
---
0x104f: V1494 = 0x1e
0x1051: V1495 = 0xbc7
0x1054: JUMP 0xbc7
---
Entry stack: [S21, S20, 0xbb1, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x1e]
Exit stack: [S21, S20, 0xbb1, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1e]

================================

Block 0x1055
[0x1055:0x1068]
---
Predecessors: [0x1048]
Successors: [0x1102]
---
0x1055 JUMPDEST
0x1056 PUSH1 0x5
0x1058 SLOAD
0x1059 PUSH2 0x1069
0x105c SWAP1
0x105d PUSH1 0xa
0x105f PUSH4 0xffffffff
0x1064 PUSH2 0x1102
0x1067 AND
0x1068 JUMP
---
0x1055: JUMPDEST 
0x1056: V1496 = 0x5
0x1058: V1497 = S[0x5]
0x1059: V1498 = 0x1069
0x105d: V1499 = 0xa
0x105f: V1500 = 0xffffffff
0x1064: V1501 = 0x1102
0x1067: V1502 = AND 0x1102 0xffffffff
0x1068: JUMP 0x1102
---
Entry stack: [S21, S20, 0xbb1, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x1069, V1497, 0xa]
Exit stack: [S21, S20, 0xbb1, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x1069, V1497, 0xa]

================================

Block 0x1069
[0x1069:0x106f]
---
Predecessors: [0xfa5]
Successors: [0x1070, 0x1077]
---
0x1069 JUMPDEST
0x106a DUP3
0x106b LT
0x106c PUSH2 0x1077
0x106f JUMPI
---
0x1069: JUMPDEST 
0x106b: V1503 = LT S2 S0
0x106c: V1504 = 0x1077
0x106f: JUMPI 0x1077 V1503
---
Entry stack: [S26, S25, S24, S23, 0x562, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [S26, S25, S24, S23, 0x562, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1070
[0x1070:0x1076]
---
Predecessors: [0x1069]
Successors: [0xbc7]
---
0x1070 POP
0x1071 PUSH1 0x23
0x1073 PUSH2 0xbc7
0x1076 JUMP
---
0x1071: V1505 = 0x23
0x1073: V1506 = 0xbc7
0x1076: JUMP 0xbc7
---
Entry stack: [S21, S20, 0xbb1, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x23]
Exit stack: [S21, S20, 0xbb1, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x23]

================================

Block 0x1077
[0x1077:0x1080]
---
Predecessors: [0x1069]
Successors: [0xbc7, 0x1081]
---
0x1077 JUMPDEST
0x1078 PUSH1 0x5
0x107a SLOAD
0x107b DUP3
0x107c LT
0x107d PUSH2 0xbc7
0x1080 JUMPI
---
0x1077: JUMPDEST 
0x1078: V1507 = 0x5
0x107a: V1508 = S[0x5]
0x107c: V1509 = LT S1 V1508
0x107d: V1510 = 0xbc7
0x1080: JUMPI 0xbc7 V1509
---
Entry stack: [S21, S20, 0xbb1, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S21, S20, 0xbb1, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1081
[0x1081:0x1087]
---
Predecessors: [0x1077]
Successors: [0xbc7]
---
0x1081 POP
0x1082 PUSH1 0x19
0x1084 PUSH2 0xbc7
0x1087 JUMP
---
0x1082: V1511 = 0x19
0x1084: V1512 = 0xbc7
0x1087: JUMP 0xbc7
---
Entry stack: [S21, S20, 0xbb1, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x19]
Exit stack: [S21, S20, 0xbb1, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x19]

================================

Block 0x1088
[0x1088:0x1088]
---
Predecessors: []
Successors: [0x1089]
---
0x1088 JUMPDEST
---
0x1088: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1089
[0x1089:0x108d]
---
Predecessors: [0x1088]
Successors: []
Has unresolved jump.
---
0x1089 JUMPDEST
0x108a SWAP2
0x108b SWAP1
0x108c POP
0x108d JUMP
---
0x1089: JUMPDEST 
0x108d: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x108e
[0x108e:0x109f]
---
Predecessors: [0xc79, 0xf5f]
Successors: [0x10a0, 0x10a7]
---
0x108e JUMPDEST
0x108f PUSH1 0x0
0x1091 PUSH1 0x1
0x1093 SLOAD
0x1094 PUSH3 0x24ea00
0x1098 ADD
0x1099 TIMESTAMP
0x109a GT
0x109b ISZERO
0x109c PUSH2 0x10a7
0x109f JUMPI
---
0x108e: JUMPDEST 
0x108f: V1513 = 0x0
0x1091: V1514 = 0x1
0x1093: V1515 = S[0x1]
0x1094: V1516 = 0x24ea00
0x1098: V1517 = ADD 0x24ea00 V1515
0x1099: V1518 = TIMESTAMP
0x109a: V1519 = GT V1518 V1517
0x109b: V1520 = ISZERO V1519
0x109c: V1521 = 0x10a7
0x109f: JUMPI 0x10a7 V1520
---
Entry stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0xbc4, 0xf6f}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [S25, S24, 0xbb1, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0xbc4, 0xf6f}, 0x0]

================================

Block 0x10a0
[0x10a0:0x10a6]
---
Predecessors: [0x108e]
Successors: [0x735]
---
0x10a0 POP
0x10a1 PUSH1 0x0
0x10a3 PUSH2 0x735
0x10a6 JUMP
---
0x10a1: V1522 = 0x0
0x10a3: V1523 = 0x735
0x10a6: JUMP 0x735
---
Entry stack: [S26, S25, 0xbb1, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [S26, S25, 0xbb1, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0x0]

================================

Block 0x10a7
[0x10a7:0x10b6]
---
Predecessors: [0x108e]
Successors: [0x10b7, 0x10be]
---
0x10a7 JUMPDEST
0x10a8 PUSH1 0x1
0x10aa SLOAD
0x10ab PUSH3 0x1baf80
0x10af ADD
0x10b0 TIMESTAMP
0x10b1 GT
0x10b2 ISZERO
0x10b3 PUSH2 0x10be
0x10b6 JUMPI
---
0x10a7: JUMPDEST 
0x10a8: V1524 = 0x1
0x10aa: V1525 = S[0x1]
0x10ab: V1526 = 0x1baf80
0x10af: V1527 = ADD 0x1baf80 V1525
0x10b0: V1528 = TIMESTAMP
0x10b1: V1529 = GT V1528 V1527
0x10b2: V1530 = ISZERO V1529
0x10b3: V1531 = 0x10be
0x10b6: JUMPI 0x10be V1530
---
Entry stack: [S26, S25, 0xbb1, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S26, S25, 0xbb1, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0x0]

================================

Block 0x10b7
[0x10b7:0x10bd]
---
Predecessors: [0x10a7]
Successors: [0x735]
---
0x10b7 POP
0x10b8 PUSH1 0x5
0x10ba PUSH2 0x735
0x10bd JUMP
---
0x10b8: V1532 = 0x5
0x10ba: V1533 = 0x735
0x10bd: JUMP 0x735
---
Entry stack: [0xbb1, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0x0]
Stack pops: 1
Stack additions: [0x5]
Exit stack: [0xbb1, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0x5]

================================

Block 0x10be
[0x10be:0x10cd]
---
Predecessors: [0x10a7]
Successors: [0x10ce, 0x10d5]
---
0x10be JUMPDEST
0x10bf PUSH1 0x1
0x10c1 SLOAD
0x10c2 PUSH3 0x127500
0x10c6 ADD
0x10c7 TIMESTAMP
0x10c8 GT
0x10c9 ISZERO
0x10ca PUSH2 0x10d5
0x10cd JUMPI
---
0x10be: JUMPDEST 
0x10bf: V1534 = 0x1
0x10c1: V1535 = S[0x1]
0x10c2: V1536 = 0x127500
0x10c6: V1537 = ADD 0x127500 V1535
0x10c7: V1538 = TIMESTAMP
0x10c8: V1539 = GT V1538 V1537
0x10c9: V1540 = ISZERO V1539
0x10ca: V1541 = 0x10d5
0x10cd: JUMPI 0x10d5 V1540
---
Entry stack: [S26, S25, 0xbb1, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S26, S25, 0xbb1, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0x0]

================================

Block 0x10ce
[0x10ce:0x10d4]
---
Predecessors: [0x10be]
Successors: [0x735]
---
0x10ce POP
0x10cf PUSH1 0xa
0x10d1 PUSH2 0x735
0x10d4 JUMP
---
0x10cf: V1542 = 0xa
0x10d1: V1543 = 0x735
0x10d4: JUMP 0x735
---
Entry stack: [S26, S25, 0xbb1, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0x0]
Stack pops: 1
Stack additions: [0xa]
Exit stack: [S26, S25, 0xbb1, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0xa]

================================

Block 0x10d5
[0x10d5:0x10e4]
---
Predecessors: [0x10be]
Successors: [0x10e5, 0x10ec]
---
0x10d5 JUMPDEST
0x10d6 PUSH1 0x1
0x10d8 SLOAD
0x10d9 PUSH3 0x93a80
0x10dd ADD
0x10de TIMESTAMP
0x10df GT
0x10e0 ISZERO
0x10e1 PUSH2 0x10ec
0x10e4 JUMPI
---
0x10d5: JUMPDEST 
0x10d6: V1544 = 0x1
0x10d8: V1545 = S[0x1]
0x10d9: V1546 = 0x93a80
0x10dd: V1547 = ADD 0x93a80 V1545
0x10de: V1548 = TIMESTAMP
0x10df: V1549 = GT V1548 V1547
0x10e0: V1550 = ISZERO V1549
0x10e1: V1551 = 0x10ec
0x10e4: JUMPI 0x10ec V1550
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0x0]

================================

Block 0x10e5
[0x10e5:0x10eb]
---
Predecessors: [0x10d5]
Successors: [0x735]
---
0x10e5 POP
0x10e6 PUSH1 0xf
0x10e8 PUSH2 0x735
0x10eb JUMP
---
0x10e6: V1552 = 0xf
0x10e8: V1553 = 0x735
0x10eb: JUMP 0x735
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0x0]
Stack pops: 1
Stack additions: [0xf]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0xf]

================================

Block 0x10ec
[0x10ec:0x10f6]
---
Predecessors: [0x10d5]
Successors: [0x735, 0x10f7]
---
0x10ec JUMPDEST
0x10ed PUSH1 0x1
0x10ef SLOAD
0x10f0 TIMESTAMP
0x10f1 GT
0x10f2 ISZERO
0x10f3 PUSH2 0x735
0x10f6 JUMPI
---
0x10ec: JUMPDEST 
0x10ed: V1554 = 0x1
0x10ef: V1555 = S[0x1]
0x10f0: V1556 = TIMESTAMP
0x10f1: V1557 = GT V1556 V1555
0x10f2: V1558 = ISZERO V1557
0x10f3: V1559 = 0x735
0x10f6: JUMPI 0x735 V1558
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0x0]

================================

Block 0x10f7
[0x10f7:0x10fd]
---
Predecessors: [0x10ec]
Successors: [0x735]
---
0x10f7 POP
0x10f8 PUSH1 0x14
0x10fa PUSH2 0x735
0x10fd JUMP
---
0x10f8: V1560 = 0x14
0x10fa: V1561 = 0x735
0x10fd: JUMP 0x735
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0x0]
Stack pops: 1
Stack additions: [0x14]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xbc4, 0xf6f}, 0x14]

================================

Block 0x10fe
[0x10fe:0x10fe]
---
Predecessors: []
Successors: [0x10ff]
---
0x10fe JUMPDEST
---
0x10fe: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x10ff
[0x10ff:0x1101]
---
Predecessors: [0x10fe]
Successors: []
Has unresolved jump.
---
0x10ff JUMPDEST
0x1100 SWAP1
0x1101 JUMP
---
0x10ff: JUMPDEST 
0x1101: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x1102
[0x1102:0x110e]
---
Predecessors: [0xf4b, 0xfac, 0x1010, 0x1031, 0x1055]
Successors: [0x110f, 0x111e]
---
0x1102 JUMPDEST
0x1103 PUSH1 0x0
0x1105 DUP3
0x1106 DUP3
0x1107 MUL
0x1108 DUP4
0x1109 ISZERO
0x110a DUP1
0x110b PUSH2 0x111e
0x110e JUMPI
---
0x1102: JUMPDEST 
0x1103: V1562 = 0x0
0x1107: V1563 = MUL S0 S1
0x1109: V1564 = ISZERO S1
0x110b: V1565 = 0x111e
0x110e: JUMPI 0x111e V1564
---
Entry stack: [S30, S29, 0xbb1, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1563, V1564]
Exit stack: [S30, S29, 0xbb1, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069}, S1, S0, 0x0, V1563, V1564]

================================

Block 0x110f
[0x110f:0x1119]
---
Predecessors: [0x1102]
Successors: [0x111a, 0x111b]
---
0x110f POP
0x1110 DUP3
0x1111 DUP5
0x1112 DUP3
0x1113 DUP2
0x1114 ISZERO
0x1115 ISZERO
0x1116 PUSH2 0x111b
0x1119 JUMPI
---
0x1114: V1566 = ISZERO S4
0x1115: V1567 = ISZERO V1566
0x1116: V1568 = 0x111b
0x1119: JUMPI 0x111b V1567
---
Entry stack: [S33, S32, 0xbb1, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069}, S4, S3, 0x0, V1563, V1564]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0xbb1, 0xf6f}, S7, 0x0, {0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069}, S4, S3, 0x0, S1, S3, S4, S1]

================================

Block 0x111a
[0x111a:0x111a]
---
Predecessors: [0x110f]
Successors: []
---
0x111a INVALID
---
0x111a: INVALID 
---
Entry stack: [0x562, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, {0x0, 0xbb1, 0xf6f}, S9, 0x0, {0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069}, S6, S5, 0x0, V1563, S2, S1, V1563]
Stack pops: 0
Stack additions: []
Exit stack: [0x562, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, {0x0, 0xbb1, 0xf6f}, S9, 0x0, {0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069}, S6, S5, 0x0, V1563, S2, S1, V1563]

================================

Block 0x111b
[0x111b:0x111d]
---
Predecessors: [0x110f]
Successors: [0x111e]
---
0x111b JUMPDEST
0x111c DIV
0x111d EQ
---
0x111b: JUMPDEST 
0x111c: V1569 = DIV V1563 S1
0x111d: V1570 = EQ V1569 S2
---
Entry stack: [0x562, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, {0x0, 0xbb1, 0xf6f}, S9, 0x0, {0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069}, S6, S5, 0x0, V1563, S2, S1, V1563]
Stack pops: 3
Stack additions: [V1570]
Exit stack: [0x562, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, {0x0, 0xbb1, 0xf6f}, S9, 0x0, {0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069}, S6, S5, 0x0, V1563, V1570]

================================

Block 0x111e
[0x111e:0x1124]
---
Predecessors: [0x1102, 0x111b]
Successors: [0xfa1, 0x1125]
---
0x111e JUMPDEST
0x111f ISZERO
0x1120 ISZERO
0x1121 PUSH2 0xfa1
0x1124 JUMPI
---
0x111e: JUMPDEST 
0x111f: V1571 = ISZERO S0
0x1120: V1572 = ISZERO V1571
0x1121: V1573 = 0xfa1
0x1124: JUMPI 0xfa1 V1572
---
Entry stack: [S33, S32, 0xbb1, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069}, S4, S3, 0x0, V1563, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S33, S32, 0xbb1, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069}, S4, S3, 0x0, V1563]

================================

Block 0x1125
[0x1125:0x1125]
---
Predecessors: [0x111e]
Successors: []
---
0x1125 INVALID
---
0x1125: INVALID 
---
Entry stack: [S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069}, S3, S2, 0x0, V1563]
Stack pops: 0
Stack additions: []
Exit stack: [S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0xf5f, 0xfc0, 0x1027, 0x1045, 0x1069}, S3, S2, 0x0, V1563]

================================

Block 0x1126
[0x1126:0x1129]
---
Predecessors: []
Successors: [0x112a]
---
0x1126 JUMPDEST
0x1127 DUP1
0x1128 SWAP2
0x1129 POP
---
0x1126: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0x112a
[0x112a:0x1164]
---
Predecessors: [0x1126]
Successors: []
---
0x112a JUMPDEST
0x112b POP
0x112c SWAP3
0x112d SWAP2
0x112e POP
0x112f POP
0x1130 JUMP
0x1131 STOP
0x1132 LOG1
0x1133 PUSH6 0x627a7a723058
0x113a SHA3
0x113b MOD
0x113c DUP16
0x113d PUSH6 0x1ee43d8045d3
0x1144 MISSING 0xdd
0x1145 SWAP2
0x1146 MISSING 0xef
0x1147 MISSING 0x1f
0x1148 PUSH28 0xbf6fbc84df4281de5cb676a7c226770a383a0029
---
0x112a: JUMPDEST 
0x1130: JUMP S4
0x1131: STOP 
0x1132: LOG S0 S1 S2
0x1133: V1574 = 0x627a7a723058
0x113a: V1575 = SHA3 0x627a7a723058 S3
0x113b: V1576 = MOD V1575 S4
0x113d: V1577 = 0x1ee43d8045d3
0x1144: MISSING 0xdd
0x1146: MISSING 0xef
0x1147: MISSING 0x1f
0x1148: V1578 = 0xbf6fbc84df4281de5cb676a7c226770a383a0029
---
Entry stack: [S1, S0]
Stack pops: 66
Stack additions: [0xbf6fbc84df4281de5cb676a7c226770a383a0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ff20a1
Entry block: 0x11a
Exit block: 0x12d
Body: 0x11a, 0x121, 0x125, 0x12d, 0x6ff

Function 1:
Public function signature: 0x1865c57d
Entry block: 0x13f
Exit block: 0x161
Body: 0x13f, 0x146, 0x14a, 0x152, 0x161, 0x162

Function 2:
Public function signature: 0x1d3f6f1b
Entry block: 0x176
Exit block: 0x1125
Body: 0x176, 0x17d, 0x181, 0x738, 0x756, 0x75a, 0x76c, 0x770, 0x1125

Function 3:
Public function signature: 0x26a4e8d2
Entry block: 0x197
Exit block: 0x118
Body: 0x118, 0x197, 0x19e, 0x1a2, 0x7e6, 0x804, 0x808, 0x81a, 0x81e, 0x82f, 0x833, 0x86d, 0x86e, 0x870

Function 4:
Public function signature: 0x28b2105c
Entry block: 0x1b8
Exit block: 0x1cb
Body: 0x1b8, 0x1bf, 0x1c3, 0x1cb, 0x873, 0x896, 0x89a, 0x8a4, 0x8a8, 0x8ff, 0x903, 0x910, 0x914, 0x929, 0x98e, 0x992, 0x99f, 0x9a3, 0x9ae, 0x9b4, 0x9bc, 0x9f9, 0x9fa

Function 5:
Public function signature: 0x2edefc26
Entry block: 0x1df
Exit block: 0x1f2
Body: 0x1df, 0x1e6, 0x1ea, 0x1f2, 0x9fe

Function 6:
Public function signature: 0x317c1291
Entry block: 0x20e
Exit block: 0x1cb
Body: 0x1cb, 0x20e, 0x215, 0x219, 0xa14

Function 7:
Public function signature: 0x3af74940
Entry block: 0x235
Exit block: 0x118
Body: 0x118, 0x235, 0x23c, 0x240, 0xa1d, 0xa3b, 0xa3f, 0xa51, 0xa55, 0xa7e, 0xa7f, 0xa81

Function 8:
Public function signature: 0x3ba0b9a9
Entry block: 0x256
Exit block: 0x12d
Body: 0x12d, 0x256, 0x25d, 0x261, 0xa84

Function 9:
Public function signature: 0x4129b8ed
Entry block: 0x27b
Exit block: 0x1f2
Body: 0x1f2, 0x27b, 0x282, 0x286, 0xa8a

Function 10:
Public function signature: 0x4abad407
Entry block: 0x2aa
Exit block: 0xaf2
Body: 0x2aa, 0x2b1, 0x2b5, 0xa99, 0xab7, 0xabb, 0xad1, 0xad5, 0xad9, 0xae1, 0xaeb, 0xaf2

Function 11:
Public function signature: 0x53f4db01
Entry block: 0x2c2
Exit block: 0x12d
Body: 0x12d, 0x2c2, 0x2c9, 0x2cd, 0xb60

Function 12:
Public function signature: 0x76c3b445
Entry block: 0x2e7
Exit block: 0xb7c
Body: 0x2e7, 0x2ee, 0x2f2, 0xb66, 0xb6a, 0xb72, 0xb7c, 0x1125

Function 13:
Public function signature: 0x8a6083d2
Entry block: 0x30f
Exit block: 0x118
Body: 0x118, 0x30f, 0x316, 0x31a, 0xbcc, 0xbe2, 0xbe6, 0xc04, 0xc08, 0xc0c, 0xc14, 0xc1e, 0xc1f, 0xc25, 0xc29, 0xc3c, 0xc3d, 0xc3f, 0xc40

Function 14:
Public function signature: 0x92670dc8
Entry block: 0x324
Exit block: 0x570
Body: 0x324, 0x32b, 0x32f, 0x570, 0xc42, 0xc46, 0xc4e, 0xc58

Function 15:
Public function signature: 0xa03435d1
Entry block: 0x350
Exit block: 0x1f2
Body: 0x1f2, 0x350, 0x357, 0x35b, 0xc89

Function 16:
Public function signature: 0xaea09e6e
Entry block: 0x37f
Exit block: 0x12d
Body: 0x12d, 0x37f, 0x386, 0x38a, 0xc98

Function 17:
Public function signature: 0xc1dbd9b2
Entry block: 0x3a4
Exit block: 0x118
Body: 0x118, 0x3a4, 0x3ab, 0x3af, 0xc9e, 0xcb5, 0xcb9, 0xcdf, 0xce0

Function 18:
Public function signature: 0xc69fa8a9
Entry block: 0x3c8
Exit block: 0x118
Body: 0x118, 0x3c8, 0x3cf, 0x3d3, 0xce4, 0xd02, 0xd06, 0xd18, 0xd1c, 0xd45, 0xd46, 0xd48

Function 19:
Public function signature: 0xcd152c0a
Entry block: 0x3e9
Exit block: 0x12d
Body: 0x12d, 0x3e9, 0x3f0, 0x3f4, 0xd4b, 0xd65

Function 20:
Public function signature: 0xec8ac4d8
Entry block: 0x41a
Exit block: 0x1cb
Body: 0x1cb, 0x41a

Function 21:
Public function signature: 0xfc0c546a
Entry block: 0x442
Exit block: 0x1f2
Body: 0x1f2, 0x442, 0x449, 0x44d, 0xd6a

Function 22:
Public fallback function
Entry block: 0x10c
Exit block: 0x118
Body: 0x10c, 0x10d, 0x116, 0x118

Function 23:
Private function
Entry block: 0xf0d
Exit block: 0x7e3
Body: 0x7e3, 0xf0d

Function 24:
Private function
Entry block: 0xf92
Exit block: 0xfa5
Body: 0x562, 0x568, 0x5a8, 0x60f, 0x620, 0x630, 0x677, 0x688, 0x69e, 0x6f3, 0x6f4, 0x6f5, 0x6f7, 0x6f8, 0x6f9, 0xba5, 0xbb1, 0xbc4, 0xbc7, 0xdb7, 0xe1e, 0xe2f, 0xe3f, 0xe86, 0xe97, 0xead, 0xefd, 0xf5f, 0xf6f, 0xf84, 0xf8a, 0xf92, 0xfa1, 0xfa5, 0xfc0, 0xff4, 0x1002, 0x1009, 0x1027, 0x1031, 0x1045, 0x1048, 0x104e, 0x1055, 0x1069, 0x1070, 0x1077, 0x1081

Function 25:
Private function
Entry block: 0x108e
Exit block: 0x1009
Body: 0x548, 0x553, 0x55a, 0x562, 0x568, 0x575, 0x581, 0x588, 0x593, 0x59c, 0x59c, 0x5a8, 0x60f, 0x620, 0x630, 0x677, 0x688, 0x69e, 0x6f3, 0x6f4, 0x6f5, 0x6f7, 0x6f8, 0x6f9, 0x735, 0x7e0, 0x7e1, 0x7e3, 0xae1, 0xaec, 0xaf6, 0xb01, 0xb0f, 0xb15, 0xb72, 0xb7d, 0xb84, 0xba5, 0xbb1, 0xbb8, 0xbc4, 0xbc7, 0xc4e, 0xc59, 0xc60, 0xc79, 0xd90, 0xda2, 0xdab, 0xdab, 0xdb7, 0xe1e, 0xe2f, 0xe3f, 0xe86, 0xe97, 0xead, 0xefd, 0xf84, 0xf8a, 0xff4, 0x1002, 0x1009, 0x108e, 0x10a0, 0x10a7, 0x10b7, 0x10be, 0x10ce, 0x10d5, 0x10e5, 0x10ec, 0x10f7

Function 26:
Private function
Entry block: 0x1102
Exit block: 0xfa5
Body: 0x562, 0x568, 0x5a8, 0x60f, 0x620, 0x630, 0x677, 0x688, 0x69e, 0x6f3, 0x6f4, 0x6f5, 0x6f7, 0x6f8, 0x6f9, 0xba5, 0xbb1, 0xbc4, 0xbc7, 0xdb7, 0xe1e, 0xe2f, 0xe3f, 0xe86, 0xe97, 0xead, 0xefd, 0xf6f, 0xf84, 0xf8a, 0xfa1, 0xfa5, 0xff4, 0x1002, 0x1009, 0x1102, 0x110f, 0x111b, 0x111e

Function 27:
Private function
Entry block: 0x1010
Exit block: 0x1009
Body: 0x562, 0x568, 0x5a8, 0x60f, 0x620, 0x630, 0x677, 0x688, 0x69e, 0x6f3, 0x6f4, 0x6f5, 0x6f7, 0x6f8, 0x6f9, 0xba5, 0xbc4, 0xbc7, 0xdb7, 0xe1e, 0xe2f, 0xe3f, 0xe86, 0xe97, 0xead, 0xefd, 0xf84, 0xf8a, 0xff4, 0x1002, 0x1009, 0x1010, 0x1027, 0x1031, 0x1045, 0x1048, 0x104e, 0x1055, 0x1069, 0x1070, 0x1077, 0x1081

Function 28:
Private function
Entry block: 0xfac
Exit block: 0x1009
Body: 0x562, 0x568, 0x5a8, 0x60f, 0x620, 0x630, 0x677, 0x688, 0x69e, 0x6f3, 0x6f4, 0x6f5, 0x6f7, 0x6f8, 0x6f9, 0xbb1, 0xbc4, 0xbc7, 0xf6f, 0xf84, 0xf8a, 0xfac, 0xfc0, 0xff4, 0x1002, 0x1009

Function 29:
Private function
Entry block: 0xf4b
Exit block: 0x1009
Body: 0x548, 0x553, 0x55a, 0x562, 0x568, 0x575, 0x581, 0x588, 0x593, 0x59c, 0x59c, 0x5a8, 0x60f, 0x620, 0x630, 0x677, 0x688, 0x69e, 0x6f3, 0x6f4, 0x6f5, 0x6f7, 0x6f8, 0x6f9, 0x735, 0x7e0, 0x7e1, 0x7e3, 0xae1, 0xaec, 0xaf6, 0xb01, 0xb0f, 0xb15, 0xb72, 0xb7d, 0xb84, 0xba5, 0xbb1, 0xbb8, 0xbc4, 0xbc7, 0xc4e, 0xc59, 0xc60, 0xc79, 0xd90, 0xda2, 0xdab, 0xdab, 0xdb7, 0xe1e, 0xe2f, 0xe3f, 0xe86, 0xe97, 0xead, 0xefd, 0xf4b, 0xf5f, 0xf6f, 0xf84, 0xf8a, 0xff4, 0x1002, 0x1009, 0x108e, 0x10a0, 0x10a7, 0x10b7, 0x10be, 0x10ce, 0x10d5, 0x10e5, 0x10ec, 0x10f7

Function 30:
Private function
Entry block: 0x705
Exit block: 0x735
Body: 0x562, 0x568, 0x5a8, 0x60f, 0x620, 0x630, 0x677, 0x688, 0x69e, 0x6f3, 0x6f4, 0x6f5, 0x6f7, 0x6f8, 0x6f9, 0x705, 0x716, 0x724, 0x72a, 0x731, 0x735, 0xba5, 0xbb1, 0xbc4, 0xbc7, 0xdb7, 0xe1e, 0xe2f, 0xe3f, 0xe86, 0xe97, 0xead, 0xefd, 0xf6f, 0xf84, 0xf8a, 0xff4, 0x1002, 0x1009

Function 31:
Private function
Entry block: 0x471
Exit block: 0x1009
Body: 0x471, 0x481, 0x49b, 0x4be, 0x4d4, 0x4fa, 0x523, 0x540, 0x548, 0x553, 0x55a, 0x562, 0x568, 0x575, 0x581, 0x588, 0x593, 0x59c, 0x5a8, 0x60f, 0x620, 0x630, 0x677, 0x688, 0x69e, 0x6f3, 0x6f4, 0x6f5, 0x6f7, 0x6f8, 0x6f9, 0xba5, 0xbb1, 0xbc4, 0xbc7, 0xd79, 0xd85, 0xd8a, 0xd90, 0xda2, 0xdab, 0xdb7, 0xe1e, 0xe2f, 0xe3f, 0xe86, 0xe97, 0xead, 0xefd, 0xf6f, 0xf84, 0xf8a, 0xff4, 0x1002, 0x1009

