args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/9/108785.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x101]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x101
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x101
0xa: JUMPI 0x101 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x14e]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x8889218
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x14e
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x8889218
0x20: V14 = EQ V12 0x8889218
0x21: V15 = 0x14e
0x24: JUMPI 0x14e V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x16c]
---
0x25 DUP1
0x26 PUSH4 0x29dcb0cf
0x2b EQ
0x2c PUSH2 0x16c
0x2f JUMPI
---
0x26: V16 = 0x29dcb0cf
0x2b: V17 = EQ 0x29dcb0cf V12
0x2c: V18 = 0x16c
0x2f: JUMPI 0x16c V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x18b]
---
0x30 DUP1
0x31 PUSH4 0x38af3eed
0x36 EQ
0x37 PUSH2 0x18b
0x3a JUMPI
---
0x31: V19 = 0x38af3eed
0x36: V20 = EQ 0x38af3eed V12
0x37: V21 = 0x18b
0x3a: JUMPI 0x18b V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1b4]
---
0x3b DUP1
0x3c PUSH4 0x411b007e
0x41 EQ
0x42 PUSH2 0x1b4
0x45 JUMPI
---
0x3c: V22 = 0x411b007e
0x41: V23 = EQ 0x411b007e V12
0x42: V24 = 0x1b4
0x45: JUMPI 0x1b4 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1dd]
---
0x46 DUP1
0x47 PUSH4 0x45f0a44f
0x4c EQ
0x4d PUSH2 0x1dd
0x50 JUMPI
---
0x47: V25 = 0x45f0a44f
0x4c: V26 = EQ 0x45f0a44f V12
0x4d: V27 = 0x1dd
0x50: JUMPI 0x1dd V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1ff]
---
0x51 DUP1
0x52 PUSH4 0x5bf5d54c
0x57 EQ
0x58 PUSH2 0x1ff
0x5b JUMPI
---
0x52: V28 = 0x5bf5d54c
0x57: V29 = EQ 0x5bf5d54c V12
0x58: V30 = 0x1ff
0x5b: JUMPI 0x1ff V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x21e]
---
0x5c DUP1
0x5d PUSH4 0x680b0c5c
0x62 EQ
0x63 PUSH2 0x21e
0x66 JUMPI
---
0x5d: V31 = 0x680b0c5c
0x62: V32 = EQ 0x680b0c5c V12
0x63: V33 = 0x21e
0x66: JUMPI 0x21e V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x240]
---
0x67 DUP1
0x68 PUSH4 0x6e66f6e9
0x6d EQ
0x6e PUSH2 0x240
0x71 JUMPI
---
0x68: V34 = 0x6e66f6e9
0x6d: V35 = EQ 0x6e66f6e9 V12
0x6e: V36 = 0x240
0x71: JUMPI 0x240 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x269]
---
0x72 DUP1
0x73 PUSH4 0x6ea6b71b
0x78 EQ
0x79 PUSH2 0x269
0x7c JUMPI
---
0x73: V37 = 0x6ea6b71b
0x78: V38 = EQ 0x6ea6b71b V12
0x79: V39 = 0x269
0x7c: JUMPI 0x269 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x288]
---
0x7d DUP1
0x7e PUSH4 0x70a08231
0x83 EQ
0x84 PUSH2 0x288
0x87 JUMPI
---
0x7e: V40 = 0x70a08231
0x83: V41 = EQ 0x70a08231 V12
0x84: V42 = 0x288
0x87: JUMPI 0x288 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2b3]
---
0x88 DUP1
0x89 PUSH4 0x7b3e5e7b
0x8e EQ
0x8f PUSH2 0x2b3
0x92 JUMPI
---
0x89: V43 = 0x7b3e5e7b
0x8e: V44 = EQ 0x7b3e5e7b V12
0x8f: V45 = 0x2b3
0x92: JUMPI 0x2b3 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2d2]
---
0x93 DUP1
0x94 PUSH4 0x7dbfb36d
0x99 EQ
0x9a PUSH2 0x2d2
0x9d JUMPI
---
0x94: V46 = 0x7dbfb36d
0x99: V47 = EQ 0x7dbfb36d V12
0x9a: V48 = 0x2d2
0x9d: JUMPI 0x2d2 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2fe]
---
0x9e DUP1
0x9f PUSH4 0x8da5cb5b
0xa4 EQ
0xa5 PUSH2 0x2fe
0xa8 JUMPI
---
0x9f: V49 = 0x8da5cb5b
0xa4: V50 = EQ 0x8da5cb5b V12
0xa5: V51 = 0x2fe
0xa8: JUMPI 0x2fe V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x327]
---
0xa9 DUP1
0xaa PUSH4 0x935955bc
0xaf EQ
0xb0 PUSH2 0x327
0xb3 JUMPI
---
0xaa: V52 = 0x935955bc
0xaf: V53 = EQ 0x935955bc V12
0xb0: V54 = 0x327
0xb3: JUMPI 0x327 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x352]
---
0xb4 DUP1
0xb5 PUSH4 0xa6f9dae1
0xba EQ
0xbb PUSH2 0x352
0xbe JUMPI
---
0xb5: V55 = 0xa6f9dae1
0xba: V56 = EQ 0xa6f9dae1 V12
0xbb: V57 = 0x352
0xbe: JUMPI 0x352 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x36d]
---
0xbf DUP1
0xc0 PUSH4 0xa8b78ed0
0xc5 EQ
0xc6 PUSH2 0x36d
0xc9 JUMPI
---
0xc0: V58 = 0xa8b78ed0
0xc5: V59 = EQ 0xa8b78ed0 V12
0xc6: V60 = 0x36d
0xc9: JUMPI 0x36d V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x37c]
---
0xca DUP1
0xcb PUSH4 0xbc31c1c1
0xd0 EQ
0xd1 PUSH2 0x37c
0xd4 JUMPI
---
0xcb: V61 = 0xbc31c1c1
0xd0: V62 = EQ 0xbc31c1c1 V12
0xd1: V63 = 0x37c
0xd4: JUMPI 0x37c V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x39e]
---
0xd5 DUP1
0xd6 PUSH4 0xbd22a977
0xdb EQ
0xdc PUSH2 0x39e
0xdf JUMPI
---
0xd6: V64 = 0xbd22a977
0xdb: V65 = EQ 0xbd22a977 V12
0xdc: V66 = 0x39e
0xdf: JUMPI 0x39e V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x3d3]
---
0xe0 DUP1
0xe1 PUSH4 0xd7ed8ece
0xe6 EQ
0xe7 PUSH2 0x3d3
0xea JUMPI
---
0xe1: V67 = 0xd7ed8ece
0xe6: V68 = EQ 0xd7ed8ece V12
0xe7: V69 = 0x3d3
0xea: JUMPI 0x3d3 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x408]
---
0xeb DUP1
0xec PUSH4 0xed185562
0xf1 EQ
0xf2 PUSH2 0x408
0xf5 JUMPI
---
0xec: V70 = 0xed185562
0xf1: V71 = EQ 0xed185562 V12
0xf2: V72 = 0x408
0xf5: JUMPI 0x408 V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x427]
---
0xf6 DUP1
0xf7 PUSH4 0xfd6b7ef8
0xfc EQ
0xfd PUSH2 0x427
0x100 JUMPI
---
0xf7: V73 = 0xfd6b7ef8
0xfc: V74 = EQ 0xfd6b7ef8 V12
0xfd: V75 = 0x427
0x100: JUMPI 0x427 V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x104]
---
Predecessors: [0x0, 0xf6]
Successors: [0x105]
---
0x101 JUMPDEST
0x102 PUSH2 0x14c
---
0x101: JUMPDEST 
0x102: V76 = 0x14c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14c]
Exit stack: [V12, 0x14c]

================================

Block 0x105
[0x105:0x10e]
---
Predecessors: [0x101]
Successors: [0x10f, 0x12f]
---
0x105 JUMPDEST
0x106 PUSH1 0x1
0x108 SLOAD
0x109 ISZERO
0x10a ISZERO
0x10b PUSH2 0x12f
0x10e JUMPI
---
0x105: JUMPDEST 
0x106: V77 = 0x1
0x108: V78 = S[0x1]
0x109: V79 = ISZERO V78
0x10a: V80 = ISZERO V79
0x10b: V81 = 0x12f
0x10e: JUMPI 0x12f V80
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c]

================================

Block 0x10f
[0x10f:0x125]
---
Predecessors: [0x105]
Successors: [0x126, 0x12a]
---
0x10f PUSH1 0x11
0x111 SLOAD
0x112 CALLER
0x113 PUSH1 0x1
0x115 PUSH1 0xa0
0x117 PUSH1 0x2
0x119 EXP
0x11a SUB
0x11b SWAP1
0x11c DUP2
0x11d AND
0x11e SWAP2
0x11f AND
0x120 EQ
0x121 ISZERO
0x122 PUSH2 0x12a
0x125 JUMPI
---
0x10f: V82 = 0x11
0x111: V83 = S[0x11]
0x112: V84 = CALLER
0x113: V85 = 0x1
0x115: V86 = 0xa0
0x117: V87 = 0x2
0x119: V88 = EXP 0x2 0xa0
0x11a: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11d: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x11f: V91 = AND V83 0xffffffffffffffffffffffffffffffffffffffff
0x120: V92 = EQ V91 V90
0x121: V93 = ISZERO V92
0x122: V94 = 0x12a
0x125: JUMPI 0x12a V93
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c]

================================

Block 0x126
[0x126:0x129]
---
Predecessors: [0x10f]
Successors: [0x149]
---
0x126 PUSH2 0x149
0x129 JUMP
---
0x126: V95 = 0x149
0x129: JUMP 0x149
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c]

================================

Block 0x12a
[0x12a:0x12e]
---
Predecessors: [0x10f]
Successors: []
---
0x12a JUMPDEST
0x12b PUSH2 0x0
0x12e JUMP
---
0x12a: JUMPDEST 
0x12b: V96 = 0x0
0x12e: THROW 
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c]

================================

Block 0x12f
[0x12f:0x12f]
---
Predecessors: [0x105]
Successors: [0x130]
---
0x12f JUMPDEST
---
0x12f: JUMPDEST 
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c]

================================

Block 0x130
[0x130:0x13a]
---
Predecessors: [0x12f]
Successors: [0x13b, 0x13f]
---
0x130 JUMPDEST
0x131 PUSH1 0x9
0x133 SLOAD
0x134 TIMESTAMP
0x135 GT
0x136 ISZERO
0x137 PUSH2 0x13f
0x13a JUMPI
---
0x130: JUMPDEST 
0x131: V97 = 0x9
0x133: V98 = S[0x9]
0x134: V99 = TIMESTAMP
0x135: V100 = GT V99 V98
0x136: V101 = ISZERO V100
0x137: V102 = 0x13f
0x13a: JUMPI 0x13f V101
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c]

================================

Block 0x13b
[0x13b:0x13e]
---
Predecessors: [0x130]
Successors: []
---
0x13b PUSH2 0x0
0x13e JUMP
---
0x13b: V103 = 0x0
0x13e: THROW 
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c]

================================

Block 0x13f
[0x13f:0x148]
---
Predecessors: [0x130]
Successors: [0x436]
---
0x13f JUMPDEST
0x140 PUSH2 0x149
0x143 CALLER
0x144 CALLVALUE
0x145 PUSH2 0x436
0x148 JUMP
---
0x13f: JUMPDEST 
0x140: V104 = 0x149
0x143: V105 = CALLER
0x144: V106 = CALLVALUE
0x145: V107 = 0x436
0x148: JUMP 0x436
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: [0x149, V105, V106]
Exit stack: [V12, 0x14c, 0x149, V105, V106]

================================

Block 0x149
[0x149:0x149]
---
Predecessors: [0x126, 0x96e, 0xf88, 0xf92, 0xfa9]
Successors: [0x14a]
---
0x149 JUMPDEST
---
0x149: JUMPDEST 
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x14a
[0x14a:0x14b]
---
Predecessors: [0x149]
Successors: [0x14c]
---
0x14a JUMPDEST
0x14b JUMP
---
0x14a: JUMPDEST 
0x14b: JUMP S0
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1]

================================

Block 0x14c
[0x14c:0x14d]
---
Predecessors: [0x14a, 0xb77, 0xc9c, 0xe67, 0x101b]
Successors: []
---
0x14c JUMPDEST
0x14d STOP
---
0x14c: JUMPDEST 
0x14d: STOP 
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S5, S4, S3, S2, S1, S0]

================================

Block 0x14e
[0x14e:0x153]
---
Predecessors: [0xb]
Successors: [0x154]
---
0x14e JUMPDEST
0x14f CALLVALUE
0x150 PUSH2 0x0
0x153 JUMPI
---
0x14e: JUMPDEST 
0x14f: V108 = CALLVALUE
0x150: V109 = 0x0
0x153: THROWI V108
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x154
[0x154:0x169]
---
Predecessors: [0x14e]
Successors: [0x977]
---
0x154 PUSH2 0x14c
0x157 PUSH1 0x1
0x159 PUSH1 0xa0
0x15b PUSH1 0x2
0x15d EXP
0x15e SUB
0x15f PUSH1 0x4
0x161 CALLDATALOAD
0x162 AND
0x163 PUSH1 0x24
0x165 CALLDATALOAD
0x166 PUSH2 0x977
0x169 JUMP
---
0x154: V110 = 0x14c
0x157: V111 = 0x1
0x159: V112 = 0xa0
0x15b: V113 = 0x2
0x15d: V114 = EXP 0x2 0xa0
0x15e: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15f: V116 = 0x4
0x161: V117 = CALLDATALOAD 0x4
0x162: V118 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x163: V119 = 0x24
0x165: V120 = CALLDATALOAD 0x24
0x166: V121 = 0x977
0x169: JUMP 0x977
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14c, V118, V120]
Exit stack: [V12, 0x14c, V118, V120]

================================

Block 0x16a
[0x16a:0x16b]
---
Predecessors: []
Successors: []
---
0x16a JUMPDEST
0x16b STOP
---
0x16a: JUMPDEST 
0x16b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x16c
[0x16c:0x171]
---
Predecessors: [0x25]
Successors: [0x172]
---
0x16c JUMPDEST
0x16d CALLVALUE
0x16e PUSH2 0x0
0x171 JUMPI
---
0x16c: JUMPDEST 
0x16d: V122 = CALLVALUE
0x16e: V123 = 0x0
0x171: THROWI V122
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x172
[0x172:0x178]
---
Predecessors: [0x16c]
Successors: [0xb7d]
---
0x172 PUSH2 0x179
0x175 PUSH2 0xb7d
0x178 JUMP
---
0x172: V124 = 0x179
0x175: V125 = 0xb7d
0x178: JUMP 0xb7d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x179]
Exit stack: [V12, 0x179]

================================

Block 0x179
[0x179:0x18a]
---
Predecessors: [0xb7d, 0xbbb, 0xbc2, 0xbe2, 0xbf8, 0xbfe, 0xc10, 0xc55, 0xe85, 0xf82, 0x1190]
Successors: []
---
0x179 JUMPDEST
0x17a PUSH1 0x40
0x17c DUP1
0x17d MLOAD
0x17e SWAP2
0x17f DUP3
0x180 MSTORE
0x181 MLOAD
0x182 SWAP1
0x183 DUP2
0x184 SWAP1
0x185 SUB
0x186 PUSH1 0x20
0x188 ADD
0x189 SWAP1
0x18a RETURN
---
0x179: JUMPDEST 
0x17a: V126 = 0x40
0x17d: V127 = M[0x40]
0x180: M[V127] = S0
0x181: V128 = M[0x40]
0x185: V129 = SUB V127 V128
0x186: V130 = 0x20
0x188: V131 = ADD 0x20 V129
0x18a: RETURN V128 V131
---
Entry stack: [V12, 0x179, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x179]

================================

Block 0x18b
[0x18b:0x190]
---
Predecessors: [0x30]
Successors: [0x191]
---
0x18b JUMPDEST
0x18c CALLVALUE
0x18d PUSH2 0x0
0x190 JUMPI
---
0x18b: JUMPDEST 
0x18c: V132 = CALLVALUE
0x18d: V133 = 0x0
0x190: THROWI V132
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x191
[0x191:0x197]
---
Predecessors: [0x18b]
Successors: [0xb83]
---
0x191 PUSH2 0x198
0x194 PUSH2 0xb83
0x197 JUMP
---
0x191: V134 = 0x198
0x194: V135 = 0xb83
0x197: JUMP 0xb83
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x198]
Exit stack: [V12, 0x198]

================================

Block 0x198
[0x198:0x1b3]
---
Predecessors: [0xb83, 0xb92, 0xbe9, 0xc30, 0xc46, 0xe8c, 0xf7c]
Successors: []
---
0x198 JUMPDEST
0x199 PUSH1 0x40
0x19b DUP1
0x19c MLOAD
0x19d PUSH1 0x1
0x19f PUSH1 0xa0
0x1a1 PUSH1 0x2
0x1a3 EXP
0x1a4 SUB
0x1a5 SWAP1
0x1a6 SWAP3
0x1a7 AND
0x1a8 DUP3
0x1a9 MSTORE
0x1aa MLOAD
0x1ab SWAP1
0x1ac DUP2
0x1ad SWAP1
0x1ae SUB
0x1af PUSH1 0x20
0x1b1 ADD
0x1b2 SWAP1
0x1b3 RETURN
---
0x198: JUMPDEST 
0x199: V136 = 0x40
0x19c: V137 = M[0x40]
0x19d: V138 = 0x1
0x19f: V139 = 0xa0
0x1a1: V140 = 0x2
0x1a3: V141 = EXP 0x2 0xa0
0x1a4: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a7: V143 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1a9: M[V137] = V143
0x1aa: V144 = M[0x40]
0x1ae: V145 = SUB V137 V144
0x1af: V146 = 0x20
0x1b1: V147 = ADD 0x20 V145
0x1b3: RETURN V144 V147
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x1b4
[0x1b4:0x1b9]
---
Predecessors: [0x3b]
Successors: [0x1ba]
---
0x1b4 JUMPDEST
0x1b5 CALLVALUE
0x1b6 PUSH2 0x0
0x1b9 JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V148 = CALLVALUE
0x1b6: V149 = 0x0
0x1b9: THROWI V148
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ba
[0x1ba:0x1c0]
---
Predecessors: [0x1b4]
Successors: [0xb92]
---
0x1ba PUSH2 0x198
0x1bd PUSH2 0xb92
0x1c0 JUMP
---
0x1ba: V150 = 0x198
0x1bd: V151 = 0xb92
0x1c0: JUMP 0xb92
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x198]
Exit stack: [V12, 0x198]

================================

Block 0x1c1
[0x1c1:0x1dc]
---
Predecessors: []
Successors: []
---
0x1c1 JUMPDEST
0x1c2 PUSH1 0x40
0x1c4 DUP1
0x1c5 MLOAD
0x1c6 PUSH1 0x1
0x1c8 PUSH1 0xa0
0x1ca PUSH1 0x2
0x1cc EXP
0x1cd SUB
0x1ce SWAP1
0x1cf SWAP3
0x1d0 AND
0x1d1 DUP3
0x1d2 MSTORE
0x1d3 MLOAD
0x1d4 SWAP1
0x1d5 DUP2
0x1d6 SWAP1
0x1d7 SUB
0x1d8 PUSH1 0x20
0x1da ADD
0x1db SWAP1
0x1dc RETURN
---
0x1c1: JUMPDEST 
0x1c2: V152 = 0x40
0x1c5: V153 = M[0x40]
0x1c6: V154 = 0x1
0x1c8: V155 = 0xa0
0x1ca: V156 = 0x2
0x1cc: V157 = EXP 0x2 0xa0
0x1cd: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d0: V159 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1d2: M[V153] = V159
0x1d3: V160 = M[0x40]
0x1d7: V161 = SUB V153 V160
0x1d8: V162 = 0x20
0x1da: V163 = ADD 0x20 V161
0x1dc: RETURN V160 V163
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1dd
[0x1dd:0x1e2]
---
Predecessors: [0x46]
Successors: [0x1e3]
---
0x1dd JUMPDEST
0x1de CALLVALUE
0x1df PUSH2 0x0
0x1e2 JUMPI
---
0x1dd: JUMPDEST 
0x1de: V164 = CALLVALUE
0x1df: V165 = 0x0
0x1e2: THROWI V164
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e3
[0x1e3:0x1ec]
---
Predecessors: [0x1dd]
Successors: [0xba1]
---
0x1e3 PUSH2 0x179
0x1e6 PUSH1 0x4
0x1e8 CALLDATALOAD
0x1e9 PUSH2 0xba1
0x1ec JUMP
---
0x1e3: V166 = 0x179
0x1e6: V167 = 0x4
0x1e8: V168 = CALLDATALOAD 0x4
0x1e9: V169 = 0xba1
0x1ec: JUMP 0xba1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x179, V168]
Exit stack: [V12, 0x179, V168]

================================

Block 0x1ed
[0x1ed:0x1fe]
---
Predecessors: []
Successors: []
---
0x1ed JUMPDEST
0x1ee PUSH1 0x40
0x1f0 DUP1
0x1f1 MLOAD
0x1f2 SWAP2
0x1f3 DUP3
0x1f4 MSTORE
0x1f5 MLOAD
0x1f6 SWAP1
0x1f7 DUP2
0x1f8 SWAP1
0x1f9 SUB
0x1fa PUSH1 0x20
0x1fc ADD
0x1fd SWAP1
0x1fe RETURN
---
0x1ed: JUMPDEST 
0x1ee: V170 = 0x40
0x1f1: V171 = M[0x40]
0x1f4: M[V171] = S0
0x1f5: V172 = M[0x40]
0x1f9: V173 = SUB V171 V172
0x1fa: V174 = 0x20
0x1fc: V175 = ADD 0x20 V173
0x1fe: RETURN V172 V175
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1ff
[0x1ff:0x204]
---
Predecessors: [0x51]
Successors: [0x205]
---
0x1ff JUMPDEST
0x200 CALLVALUE
0x201 PUSH2 0x0
0x204 JUMPI
---
0x1ff: JUMPDEST 
0x200: V176 = CALLVALUE
0x201: V177 = 0x0
0x204: THROWI V176
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x205
[0x205:0x20b]
---
Predecessors: [0x1ff]
Successors: [0xbc2]
---
0x205 PUSH2 0x179
0x208 PUSH2 0xbc2
0x20b JUMP
---
0x205: V178 = 0x179
0x208: V179 = 0xbc2
0x20b: JUMP 0xbc2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x179]
Exit stack: [V12, 0x179]

================================

Block 0x20c
[0x20c:0x21d]
---
Predecessors: []
Successors: []
---
0x20c JUMPDEST
0x20d PUSH1 0x40
0x20f DUP1
0x210 MLOAD
0x211 SWAP2
0x212 DUP3
0x213 MSTORE
0x214 MLOAD
0x215 SWAP1
0x216 DUP2
0x217 SWAP1
0x218 SUB
0x219 PUSH1 0x20
0x21b ADD
0x21c SWAP1
0x21d RETURN
---
0x20c: JUMPDEST 
0x20d: V180 = 0x40
0x210: V181 = M[0x40]
0x213: M[V181] = S0
0x214: V182 = M[0x40]
0x218: V183 = SUB V181 V182
0x219: V184 = 0x20
0x21b: V185 = ADD 0x20 V183
0x21d: RETURN V182 V185
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x21e
[0x21e:0x223]
---
Predecessors: [0x5c]
Successors: [0x224]
---
0x21e JUMPDEST
0x21f CALLVALUE
0x220 PUSH2 0x0
0x223 JUMPI
---
0x21e: JUMPDEST 
0x21f: V186 = CALLVALUE
0x220: V187 = 0x0
0x223: THROWI V186
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x224
[0x224:0x22d]
---
Predecessors: [0x21e]
Successors: [0xbc8]
---
0x224 PUSH2 0x179
0x227 PUSH1 0x4
0x229 CALLDATALOAD
0x22a PUSH2 0xbc8
0x22d JUMP
---
0x224: V188 = 0x179
0x227: V189 = 0x4
0x229: V190 = CALLDATALOAD 0x4
0x22a: V191 = 0xbc8
0x22d: JUMP 0xbc8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x179, V190]
Exit stack: [V12, 0x179, V190]

================================

Block 0x22e
[0x22e:0x23f]
---
Predecessors: []
Successors: []
---
0x22e JUMPDEST
0x22f PUSH1 0x40
0x231 DUP1
0x232 MLOAD
0x233 SWAP2
0x234 DUP3
0x235 MSTORE
0x236 MLOAD
0x237 SWAP1
0x238 DUP2
0x239 SWAP1
0x23a SUB
0x23b PUSH1 0x20
0x23d ADD
0x23e SWAP1
0x23f RETURN
---
0x22e: JUMPDEST 
0x22f: V192 = 0x40
0x232: V193 = M[0x40]
0x235: M[V193] = S0
0x236: V194 = M[0x40]
0x23a: V195 = SUB V193 V194
0x23b: V196 = 0x20
0x23d: V197 = ADD 0x20 V195
0x23f: RETURN V194 V197
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x240
[0x240:0x245]
---
Predecessors: [0x67]
Successors: [0x246]
---
0x240 JUMPDEST
0x241 CALLVALUE
0x242 PUSH2 0x0
0x245 JUMPI
---
0x240: JUMPDEST 
0x241: V198 = CALLVALUE
0x242: V199 = 0x0
0x245: THROWI V198
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x246
[0x246:0x24c]
---
Predecessors: [0x240]
Successors: [0xbe9]
---
0x246 PUSH2 0x198
0x249 PUSH2 0xbe9
0x24c JUMP
---
0x246: V200 = 0x198
0x249: V201 = 0xbe9
0x24c: JUMP 0xbe9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x198]
Exit stack: [V12, 0x198]

================================

Block 0x24d
[0x24d:0x268]
---
Predecessors: []
Successors: []
---
0x24d JUMPDEST
0x24e PUSH1 0x40
0x250 DUP1
0x251 MLOAD
0x252 PUSH1 0x1
0x254 PUSH1 0xa0
0x256 PUSH1 0x2
0x258 EXP
0x259 SUB
0x25a SWAP1
0x25b SWAP3
0x25c AND
0x25d DUP3
0x25e MSTORE
0x25f MLOAD
0x260 SWAP1
0x261 DUP2
0x262 SWAP1
0x263 SUB
0x264 PUSH1 0x20
0x266 ADD
0x267 SWAP1
0x268 RETURN
---
0x24d: JUMPDEST 
0x24e: V202 = 0x40
0x251: V203 = M[0x40]
0x252: V204 = 0x1
0x254: V205 = 0xa0
0x256: V206 = 0x2
0x258: V207 = EXP 0x2 0xa0
0x259: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25c: V209 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x25e: M[V203] = V209
0x25f: V210 = M[0x40]
0x263: V211 = SUB V203 V210
0x264: V212 = 0x20
0x266: V213 = ADD 0x20 V211
0x268: RETURN V210 V213
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x269
[0x269:0x26e]
---
Predecessors: [0x72]
Successors: [0x26f]
---
0x269 JUMPDEST
0x26a CALLVALUE
0x26b PUSH2 0x0
0x26e JUMPI
---
0x269: JUMPDEST 
0x26a: V214 = CALLVALUE
0x26b: V215 = 0x0
0x26e: THROWI V214
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26f
[0x26f:0x275]
---
Predecessors: [0x269]
Successors: [0xbf8]
---
0x26f PUSH2 0x179
0x272 PUSH2 0xbf8
0x275 JUMP
---
0x26f: V216 = 0x179
0x272: V217 = 0xbf8
0x275: JUMP 0xbf8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x179]
Exit stack: [V12, 0x179]

================================

Block 0x276
[0x276:0x287]
---
Predecessors: []
Successors: []
---
0x276 JUMPDEST
0x277 PUSH1 0x40
0x279 DUP1
0x27a MLOAD
0x27b SWAP2
0x27c DUP3
0x27d MSTORE
0x27e MLOAD
0x27f SWAP1
0x280 DUP2
0x281 SWAP1
0x282 SUB
0x283 PUSH1 0x20
0x285 ADD
0x286 SWAP1
0x287 RETURN
---
0x276: JUMPDEST 
0x277: V218 = 0x40
0x27a: V219 = M[0x40]
0x27d: M[V219] = S0
0x27e: V220 = M[0x40]
0x282: V221 = SUB V219 V220
0x283: V222 = 0x20
0x285: V223 = ADD 0x20 V221
0x287: RETURN V220 V223
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x288
[0x288:0x28d]
---
Predecessors: [0x7d]
Successors: [0x28e]
---
0x288 JUMPDEST
0x289 CALLVALUE
0x28a PUSH2 0x0
0x28d JUMPI
---
0x288: JUMPDEST 
0x289: V224 = CALLVALUE
0x28a: V225 = 0x0
0x28d: THROWI V224
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28e
[0x28e:0x2a0]
---
Predecessors: [0x288]
Successors: [0xbfe]
---
0x28e PUSH2 0x179
0x291 PUSH1 0x1
0x293 PUSH1 0xa0
0x295 PUSH1 0x2
0x297 EXP
0x298 SUB
0x299 PUSH1 0x4
0x29b CALLDATALOAD
0x29c AND
0x29d PUSH2 0xbfe
0x2a0 JUMP
---
0x28e: V226 = 0x179
0x291: V227 = 0x1
0x293: V228 = 0xa0
0x295: V229 = 0x2
0x297: V230 = EXP 0x2 0xa0
0x298: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x299: V232 = 0x4
0x29b: V233 = CALLDATALOAD 0x4
0x29c: V234 = AND V233 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V235 = 0xbfe
0x2a0: JUMP 0xbfe
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x179, V234]
Exit stack: [V12, 0x179, V234]

================================

Block 0x2a1
[0x2a1:0x2b2]
---
Predecessors: []
Successors: []
---
0x2a1 JUMPDEST
0x2a2 PUSH1 0x40
0x2a4 DUP1
0x2a5 MLOAD
0x2a6 SWAP2
0x2a7 DUP3
0x2a8 MSTORE
0x2a9 MLOAD
0x2aa SWAP1
0x2ab DUP2
0x2ac SWAP1
0x2ad SUB
0x2ae PUSH1 0x20
0x2b0 ADD
0x2b1 SWAP1
0x2b2 RETURN
---
0x2a1: JUMPDEST 
0x2a2: V236 = 0x40
0x2a5: V237 = M[0x40]
0x2a8: M[V237] = S0
0x2a9: V238 = M[0x40]
0x2ad: V239 = SUB V237 V238
0x2ae: V240 = 0x20
0x2b0: V241 = ADD 0x20 V239
0x2b2: RETURN V238 V241
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b3
[0x2b3:0x2b8]
---
Predecessors: [0x88]
Successors: [0x2b9]
---
0x2b3 JUMPDEST
0x2b4 CALLVALUE
0x2b5 PUSH2 0x0
0x2b8 JUMPI
---
0x2b3: JUMPDEST 
0x2b4: V242 = CALLVALUE
0x2b5: V243 = 0x0
0x2b8: THROWI V242
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b9
[0x2b9:0x2bf]
---
Predecessors: [0x2b3]
Successors: [0xc10]
---
0x2b9 PUSH2 0x179
0x2bc PUSH2 0xc10
0x2bf JUMP
---
0x2b9: V244 = 0x179
0x2bc: V245 = 0xc10
0x2bf: JUMP 0xc10
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x179]
Exit stack: [V12, 0x179]

================================

Block 0x2c0
[0x2c0:0x2d1]
---
Predecessors: []
Successors: []
---
0x2c0 JUMPDEST
0x2c1 PUSH1 0x40
0x2c3 DUP1
0x2c4 MLOAD
0x2c5 SWAP2
0x2c6 DUP3
0x2c7 MSTORE
0x2c8 MLOAD
0x2c9 SWAP1
0x2ca DUP2
0x2cb SWAP1
0x2cc SUB
0x2cd PUSH1 0x20
0x2cf ADD
0x2d0 SWAP1
0x2d1 RETURN
---
0x2c0: JUMPDEST 
0x2c1: V246 = 0x40
0x2c4: V247 = M[0x40]
0x2c7: M[V247] = S0
0x2c8: V248 = M[0x40]
0x2cc: V249 = SUB V247 V248
0x2cd: V250 = 0x20
0x2cf: V251 = ADD 0x20 V249
0x2d1: RETURN V248 V251
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d2
[0x2d2:0x2d7]
---
Predecessors: [0x93]
Successors: [0x2d8]
---
0x2d2 JUMPDEST
0x2d3 CALLVALUE
0x2d4 PUSH2 0x0
0x2d7 JUMPI
---
0x2d2: JUMPDEST 
0x2d3: V252 = CALLVALUE
0x2d4: V253 = 0x0
0x2d7: THROWI V252
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d8
[0x2d8:0x2e1]
---
Predecessors: [0x2d2]
Successors: [0xc16]
---
0x2d8 PUSH2 0x198
0x2db PUSH1 0x4
0x2dd CALLDATALOAD
0x2de PUSH2 0xc16
0x2e1 JUMP
---
0x2d8: V254 = 0x198
0x2db: V255 = 0x4
0x2dd: V256 = CALLDATALOAD 0x4
0x2de: V257 = 0xc16
0x2e1: JUMP 0xc16
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x198, V256]
Exit stack: [V12, 0x198, V256]

================================

Block 0x2e2
[0x2e2:0x2fd]
---
Predecessors: []
Successors: []
---
0x2e2 JUMPDEST
0x2e3 PUSH1 0x40
0x2e5 DUP1
0x2e6 MLOAD
0x2e7 PUSH1 0x1
0x2e9 PUSH1 0xa0
0x2eb PUSH1 0x2
0x2ed EXP
0x2ee SUB
0x2ef SWAP1
0x2f0 SWAP3
0x2f1 AND
0x2f2 DUP3
0x2f3 MSTORE
0x2f4 MLOAD
0x2f5 SWAP1
0x2f6 DUP2
0x2f7 SWAP1
0x2f8 SUB
0x2f9 PUSH1 0x20
0x2fb ADD
0x2fc SWAP1
0x2fd RETURN
---
0x2e2: JUMPDEST 
0x2e3: V258 = 0x40
0x2e6: V259 = M[0x40]
0x2e7: V260 = 0x1
0x2e9: V261 = 0xa0
0x2eb: V262 = 0x2
0x2ed: V263 = EXP 0x2 0xa0
0x2ee: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f1: V265 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2f3: M[V259] = V265
0x2f4: V266 = M[0x40]
0x2f8: V267 = SUB V259 V266
0x2f9: V268 = 0x20
0x2fb: V269 = ADD 0x20 V267
0x2fd: RETURN V266 V269
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2fe
[0x2fe:0x303]
---
Predecessors: [0x9e]
Successors: [0x304]
---
0x2fe JUMPDEST
0x2ff CALLVALUE
0x300 PUSH2 0x0
0x303 JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V270 = CALLVALUE
0x300: V271 = 0x0
0x303: THROWI V270
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x304
[0x304:0x30a]
---
Predecessors: [0x2fe]
Successors: [0xc46]
---
0x304 PUSH2 0x198
0x307 PUSH2 0xc46
0x30a JUMP
---
0x304: V272 = 0x198
0x307: V273 = 0xc46
0x30a: JUMP 0xc46
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x198]
Exit stack: [V12, 0x198]

================================

Block 0x30b
[0x30b:0x326]
---
Predecessors: []
Successors: []
---
0x30b JUMPDEST
0x30c PUSH1 0x40
0x30e DUP1
0x30f MLOAD
0x310 PUSH1 0x1
0x312 PUSH1 0xa0
0x314 PUSH1 0x2
0x316 EXP
0x317 SUB
0x318 SWAP1
0x319 SWAP3
0x31a AND
0x31b DUP3
0x31c MSTORE
0x31d MLOAD
0x31e SWAP1
0x31f DUP2
0x320 SWAP1
0x321 SUB
0x322 PUSH1 0x20
0x324 ADD
0x325 SWAP1
0x326 RETURN
---
0x30b: JUMPDEST 
0x30c: V274 = 0x40
0x30f: V275 = M[0x40]
0x310: V276 = 0x1
0x312: V277 = 0xa0
0x314: V278 = 0x2
0x316: V279 = EXP 0x2 0xa0
0x317: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31a: V281 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x31c: M[V275] = V281
0x31d: V282 = M[0x40]
0x321: V283 = SUB V275 V282
0x322: V284 = 0x20
0x324: V285 = ADD 0x20 V283
0x326: RETURN V282 V285
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x327
[0x327:0x32c]
---
Predecessors: [0xa9]
Successors: [0x32d]
---
0x327 JUMPDEST
0x328 CALLVALUE
0x329 PUSH2 0x0
0x32c JUMPI
---
0x327: JUMPDEST 
0x328: V286 = CALLVALUE
0x329: V287 = 0x0
0x32c: THROWI V286
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32d
[0x32d:0x33f]
---
Predecessors: [0x327]
Successors: [0xc55]
---
0x32d PUSH2 0x179
0x330 PUSH1 0x1
0x332 PUSH1 0xa0
0x334 PUSH1 0x2
0x336 EXP
0x337 SUB
0x338 PUSH1 0x4
0x33a CALLDATALOAD
0x33b AND
0x33c PUSH2 0xc55
0x33f JUMP
---
0x32d: V288 = 0x179
0x330: V289 = 0x1
0x332: V290 = 0xa0
0x334: V291 = 0x2
0x336: V292 = EXP 0x2 0xa0
0x337: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x338: V294 = 0x4
0x33a: V295 = CALLDATALOAD 0x4
0x33b: V296 = AND V295 0xffffffffffffffffffffffffffffffffffffffff
0x33c: V297 = 0xc55
0x33f: JUMP 0xc55
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x179, V296]
Exit stack: [V12, 0x179, V296]

================================

Block 0x340
[0x340:0x351]
---
Predecessors: []
Successors: []
---
0x340 JUMPDEST
0x341 PUSH1 0x40
0x343 DUP1
0x344 MLOAD
0x345 SWAP2
0x346 DUP3
0x347 MSTORE
0x348 MLOAD
0x349 SWAP1
0x34a DUP2
0x34b SWAP1
0x34c SUB
0x34d PUSH1 0x20
0x34f ADD
0x350 SWAP1
0x351 RETURN
---
0x340: JUMPDEST 
0x341: V298 = 0x40
0x344: V299 = M[0x40]
0x347: M[V299] = S0
0x348: V300 = M[0x40]
0x34c: V301 = SUB V299 V300
0x34d: V302 = 0x20
0x34f: V303 = ADD 0x20 V301
0x351: RETURN V300 V303
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x352
[0x352:0x357]
---
Predecessors: [0xb4]
Successors: [0x358]
---
0x352 JUMPDEST
0x353 CALLVALUE
0x354 PUSH2 0x0
0x357 JUMPI
---
0x352: JUMPDEST 
0x353: V304 = CALLVALUE
0x354: V305 = 0x0
0x357: THROWI V304
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x358
[0x358:0x36a]
---
Predecessors: [0x352]
Successors: [0xc67]
---
0x358 PUSH2 0x14c
0x35b PUSH1 0x1
0x35d PUSH1 0xa0
0x35f PUSH1 0x2
0x361 EXP
0x362 SUB
0x363 PUSH1 0x4
0x365 CALLDATALOAD
0x366 AND
0x367 PUSH2 0xc67
0x36a JUMP
---
0x358: V306 = 0x14c
0x35b: V307 = 0x1
0x35d: V308 = 0xa0
0x35f: V309 = 0x2
0x361: V310 = EXP 0x2 0xa0
0x362: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x363: V312 = 0x4
0x365: V313 = CALLDATALOAD 0x4
0x366: V314 = AND V313 0xffffffffffffffffffffffffffffffffffffffff
0x367: V315 = 0xc67
0x36a: JUMP 0xc67
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14c, V314]
Exit stack: [V12, 0x14c, V314]

================================

Block 0x36b
[0x36b:0x36c]
---
Predecessors: []
Successors: []
---
0x36b JUMPDEST
0x36c STOP
---
0x36b: JUMPDEST 
0x36c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x36d
[0x36d:0x372]
---
Predecessors: [0xbf]
Successors: [0x373]
---
0x36d JUMPDEST
0x36e CALLVALUE
0x36f PUSH2 0x0
0x372 JUMPI
---
0x36d: JUMPDEST 
0x36e: V316 = CALLVALUE
0x36f: V317 = 0x0
0x372: THROWI V316
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x373
[0x373:0x379]
---
Predecessors: [0x36d]
Successors: [0xc9f]
---
0x373 PUSH2 0x14c
0x376 PUSH2 0xc9f
0x379 JUMP
---
0x373: V318 = 0x14c
0x376: V319 = 0xc9f
0x379: JUMP 0xc9f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14c]
Exit stack: [V12, 0x14c]

================================

Block 0x37a
[0x37a:0x37b]
---
Predecessors: []
Successors: []
---
0x37a JUMPDEST
0x37b STOP
---
0x37a: JUMPDEST 
0x37b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x37c
[0x37c:0x381]
---
Predecessors: [0xca]
Successors: [0x382]
---
0x37c JUMPDEST
0x37d CALLVALUE
0x37e PUSH2 0x0
0x381 JUMPI
---
0x37c: JUMPDEST 
0x37d: V320 = CALLVALUE
0x37e: V321 = 0x0
0x381: THROWI V320
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x382
[0x382:0x38b]
---
Predecessors: [0x37c]
Successors: [0xe6b]
---
0x382 PUSH2 0x179
0x385 PUSH1 0x4
0x387 CALLDATALOAD
0x388 PUSH2 0xe6b
0x38b JUMP
---
0x382: V322 = 0x179
0x385: V323 = 0x4
0x387: V324 = CALLDATALOAD 0x4
0x388: V325 = 0xe6b
0x38b: JUMP 0xe6b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x179, V324]
Exit stack: [V12, 0x179, V324]

================================

Block 0x38c
[0x38c:0x39d]
---
Predecessors: []
Successors: []
---
0x38c JUMPDEST
0x38d PUSH1 0x40
0x38f DUP1
0x390 MLOAD
0x391 SWAP2
0x392 DUP3
0x393 MSTORE
0x394 MLOAD
0x395 SWAP1
0x396 DUP2
0x397 SWAP1
0x398 SUB
0x399 PUSH1 0x20
0x39b ADD
0x39c SWAP1
0x39d RETURN
---
0x38c: JUMPDEST 
0x38d: V326 = 0x40
0x390: V327 = M[0x40]
0x393: M[V327] = S0
0x394: V328 = M[0x40]
0x398: V329 = SUB V327 V328
0x399: V330 = 0x20
0x39b: V331 = ADD 0x20 V329
0x39d: RETURN V328 V331
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x39e
[0x39e:0x3a3]
---
Predecessors: [0xd5]
Successors: [0x3a4]
---
0x39e JUMPDEST
0x39f CALLVALUE
0x3a0 PUSH2 0x0
0x3a3 JUMPI
---
0x39e: JUMPDEST 
0x39f: V332 = CALLVALUE
0x3a0: V333 = 0x0
0x3a3: THROWI V332
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a4
[0x3a4:0x3b6]
---
Predecessors: [0x39e]
Successors: [0xe8c]
---
0x3a4 PUSH2 0x198
0x3a7 PUSH1 0x1
0x3a9 PUSH1 0xa0
0x3ab PUSH1 0x2
0x3ad EXP
0x3ae SUB
0x3af PUSH1 0x4
0x3b1 CALLDATALOAD
0x3b2 AND
0x3b3 PUSH2 0xe8c
0x3b6 JUMP
---
0x3a4: V334 = 0x198
0x3a7: V335 = 0x1
0x3a9: V336 = 0xa0
0x3ab: V337 = 0x2
0x3ad: V338 = EXP 0x2 0xa0
0x3ae: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3af: V340 = 0x4
0x3b1: V341 = CALLDATALOAD 0x4
0x3b2: V342 = AND V341 0xffffffffffffffffffffffffffffffffffffffff
0x3b3: V343 = 0xe8c
0x3b6: JUMP 0xe8c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x198, V342]
Exit stack: [V12, 0x198, V342]

================================

Block 0x3b7
[0x3b7:0x3d2]
---
Predecessors: []
Successors: []
---
0x3b7 JUMPDEST
0x3b8 PUSH1 0x40
0x3ba DUP1
0x3bb MLOAD
0x3bc PUSH1 0x1
0x3be PUSH1 0xa0
0x3c0 PUSH1 0x2
0x3c2 EXP
0x3c3 SUB
0x3c4 SWAP1
0x3c5 SWAP3
0x3c6 AND
0x3c7 DUP3
0x3c8 MSTORE
0x3c9 MLOAD
0x3ca SWAP1
0x3cb DUP2
0x3cc SWAP1
0x3cd SUB
0x3ce PUSH1 0x20
0x3d0 ADD
0x3d1 SWAP1
0x3d2 RETURN
---
0x3b7: JUMPDEST 
0x3b8: V344 = 0x40
0x3bb: V345 = M[0x40]
0x3bc: V346 = 0x1
0x3be: V347 = 0xa0
0x3c0: V348 = 0x2
0x3c2: V349 = EXP 0x2 0xa0
0x3c3: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c6: V351 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3c8: M[V345] = V351
0x3c9: V352 = M[0x40]
0x3cd: V353 = SUB V345 V352
0x3ce: V354 = 0x20
0x3d0: V355 = ADD 0x20 V353
0x3d2: RETURN V352 V355
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3d3
[0x3d3:0x3d8]
---
Predecessors: [0xe0]
Successors: [0x3d9]
---
0x3d3 JUMPDEST
0x3d4 CALLVALUE
0x3d5 PUSH2 0x0
0x3d8 JUMPI
---
0x3d3: JUMPDEST 
0x3d4: V356 = CALLVALUE
0x3d5: V357 = 0x0
0x3d8: THROWI V356
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d9
[0x3d9:0x3eb]
---
Predecessors: [0x3d3]
Successors: [0xea7]
---
0x3d9 PUSH2 0x198
0x3dc PUSH1 0x1
0x3de PUSH1 0xa0
0x3e0 PUSH1 0x2
0x3e2 EXP
0x3e3 SUB
0x3e4 PUSH1 0x4
0x3e6 CALLDATALOAD
0x3e7 AND
0x3e8 PUSH2 0xea7
0x3eb JUMP
---
0x3d9: V358 = 0x198
0x3dc: V359 = 0x1
0x3de: V360 = 0xa0
0x3e0: V361 = 0x2
0x3e2: V362 = EXP 0x2 0xa0
0x3e3: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e4: V364 = 0x4
0x3e6: V365 = CALLDATALOAD 0x4
0x3e7: V366 = AND V365 0xffffffffffffffffffffffffffffffffffffffff
0x3e8: V367 = 0xea7
0x3eb: JUMP 0xea7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x198, V366]
Exit stack: [V12, 0x198, V366]

================================

Block 0x3ec
[0x3ec:0x407]
---
Predecessors: []
Successors: []
---
0x3ec JUMPDEST
0x3ed PUSH1 0x40
0x3ef DUP1
0x3f0 MLOAD
0x3f1 PUSH1 0x1
0x3f3 PUSH1 0xa0
0x3f5 PUSH1 0x2
0x3f7 EXP
0x3f8 SUB
0x3f9 SWAP1
0x3fa SWAP3
0x3fb AND
0x3fc DUP3
0x3fd MSTORE
0x3fe MLOAD
0x3ff SWAP1
0x400 DUP2
0x401 SWAP1
0x402 SUB
0x403 PUSH1 0x20
0x405 ADD
0x406 SWAP1
0x407 RETURN
---
0x3ec: JUMPDEST 
0x3ed: V368 = 0x40
0x3f0: V369 = M[0x40]
0x3f1: V370 = 0x1
0x3f3: V371 = 0xa0
0x3f5: V372 = 0x2
0x3f7: V373 = EXP 0x2 0xa0
0x3f8: V374 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fb: V375 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3fd: M[V369] = V375
0x3fe: V376 = M[0x40]
0x402: V377 = SUB V369 V376
0x403: V378 = 0x20
0x405: V379 = ADD 0x20 V377
0x407: RETURN V376 V379
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x408
[0x408:0x40d]
---
Predecessors: [0xeb]
Successors: [0x40e]
---
0x408 JUMPDEST
0x409 CALLVALUE
0x40a PUSH2 0x0
0x40d JUMPI
---
0x408: JUMPDEST 
0x409: V380 = CALLVALUE
0x40a: V381 = 0x0
0x40d: THROWI V380
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x40e
[0x40e:0x414]
---
Predecessors: [0x408]
Successors: [0xf82]
---
0x40e PUSH2 0x179
0x411 PUSH2 0xf82
0x414 JUMP
---
0x40e: V382 = 0x179
0x411: V383 = 0xf82
0x414: JUMP 0xf82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x179]
Exit stack: [V12, 0x179]

================================

Block 0x415
[0x415:0x426]
---
Predecessors: []
Successors: []
---
0x415 JUMPDEST
0x416 PUSH1 0x40
0x418 DUP1
0x419 MLOAD
0x41a SWAP2
0x41b DUP3
0x41c MSTORE
0x41d MLOAD
0x41e SWAP1
0x41f DUP2
0x420 SWAP1
0x421 SUB
0x422 PUSH1 0x20
0x424 ADD
0x425 SWAP1
0x426 RETURN
---
0x415: JUMPDEST 
0x416: V384 = 0x40
0x419: V385 = M[0x40]
0x41c: M[V385] = S0
0x41d: V386 = M[0x40]
0x421: V387 = SUB V385 V386
0x422: V388 = 0x20
0x424: V389 = ADD 0x20 V387
0x426: RETURN V386 V389
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x427
[0x427:0x42c]
---
Predecessors: [0xf6]
Successors: [0x42d]
---
0x427 JUMPDEST
0x428 CALLVALUE
0x429 PUSH2 0x0
0x42c JUMPI
---
0x427: JUMPDEST 
0x428: V390 = CALLVALUE
0x429: V391 = 0x0
0x42c: THROWI V390
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x42d
[0x42d:0x433]
---
Predecessors: [0x427]
Successors: [0xf88]
---
0x42d PUSH2 0x14c
0x430 PUSH2 0xf88
0x433 JUMP
---
0x42d: V392 = 0x14c
0x430: V393 = 0xf88
0x433: JUMP 0xf88
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14c]
Exit stack: [V12, 0x14c]

================================

Block 0x434
[0x434:0x435]
---
Predecessors: []
Successors: []
---
0x434 JUMPDEST
0x435 STOP
---
0x434: JUMPDEST 
0x435: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x436
[0x436:0x485]
---
Predecessors: [0x13f, 0x6ca, 0xe3d]
Successors: [0x486]
---
0x436 JUMPDEST
0x437 PUSH1 0x40
0x439 DUP1
0x43a MLOAD
0x43b PUSH1 0x1
0x43d PUSH1 0xa0
0x43f PUSH1 0x2
0x441 EXP
0x442 SUB
0x443 DUP5
0x444 AND
0x445 DUP2
0x446 MSTORE
0x447 PUSH1 0x20
0x449 DUP2
0x44a ADD
0x44b DUP4
0x44c SWAP1
0x44d MSTORE
0x44e PUSH1 0x0
0x450 DUP2
0x451 DUP4
0x452 ADD
0x453 DUP2
0x454 SWAP1
0x455 MSTORE
0x456 SWAP2
0x457 MLOAD
0x458 DUP3
0x459 SWAP2
0x45a DUP3
0x45b SWAP2
0x45c DUP3
0x45d SWAP2
0x45e DUP3
0x45f SWAP2
0x460 PUSH1 0x0
0x462 DUP1
0x463 MLOAD
0x464 PUSH1 0x20
0x466 PUSH2 0x127e
0x469 DUP4
0x46a CODECOPY
0x46b DUP2
0x46c MLOAD
0x46d SWAP2
0x46e MSTORE
0x46f SWAP2
0x470 DUP2
0x471 SWAP1
0x472 SUB
0x473 PUSH1 0x60
0x475 ADD
0x476 SWAP1
0x477 LOG1
0x478 PUSH1 0x3
0x47a PUSH1 0x1
0x47c SLOAD
0x47d DUP2
0x47e SLOAD
0x47f DUP2
0x480 LT
0x481 ISZERO
0x482 PUSH2 0x0
0x485 JUMPI
---
0x436: JUMPDEST 
0x437: V394 = 0x40
0x43a: V395 = M[0x40]
0x43b: V396 = 0x1
0x43d: V397 = 0xa0
0x43f: V398 = 0x2
0x441: V399 = EXP 0x2 0xa0
0x442: V400 = SUB 0x10000000000000000000000000000000000000000 0x1
0x444: V401 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x446: M[V395] = V401
0x447: V402 = 0x20
0x44a: V403 = ADD V395 0x20
0x44d: M[V403] = S0
0x44e: V404 = 0x0
0x452: V405 = ADD 0x40 V395
0x455: M[V405] = 0x0
0x457: V406 = M[0x40]
0x460: V407 = 0x0
0x463: V408 = M[0x0]
0x464: V409 = 0x20
0x466: V410 = 0x127e
0x46a: CODECOPY 0x0 0x127e 0x20
0x46c: V411 = M[0x0]
0x46e: M[0x0] = V408
0x472: V412 = SUB V395 V406
0x473: V413 = 0x60
0x475: V414 = ADD 0x60 V412
0x477: LOG V406 V414 V411
0x478: V415 = 0x3
0x47a: V416 = 0x1
0x47c: V417 = S[0x1]
0x47e: V418 = S[0x3]
0x480: V419 = LT V417 V418
0x481: V420 = ISZERO V419
0x482: V421 = 0x0
0x485: THROWI V420
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, S5, S4, S3, {0x149, 0x718, 0xe49}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, V417]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, S5, S4, S3, {0x149, 0x718, 0xe49}, S1, S0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, V417]

================================

Block 0x486
[0x486:0x492]
---
Predecessors: [0x436]
Successors: [0x493]
---
0x486 SWAP1
0x487 PUSH1 0x0
0x489 MSTORE
0x48a PUSH1 0x20
0x48c PUSH1 0x0
0x48e SHA3
0x48f SWAP1
0x490 ADD
0x491 PUSH1 0x0
---
0x487: V422 = 0x0
0x489: M[0x0] = 0x3
0x48a: V423 = 0x20
0x48c: V424 = 0x0
0x48e: V425 = SHA3 0x0 0x20
0x490: V426 = ADD V417 V425
0x491: V427 = 0x0
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S24, S23, S22, S21, S20, S19, S18, {0x149, 0x718, 0xe49}, S16, S15, S14, S13, S12, S11, S10, {0x149, 0x718, 0xe49}, S8, S7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, V417]
Stack pops: 2
Stack additions: [V426, 0x0]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S24, S23, S22, S21, S20, S19, S18, {0x149, 0x718, 0xe49}, S16, S15, S14, S13, S12, S11, S10, {0x149, 0x718, 0xe49}, S8, S7, 0x0, 0x0, 0x0, 0x0, 0x0, V426, 0x0]

================================

Block 0x493
[0x493:0x4a3]
---
Predecessors: [0x486]
Successors: [0x4a4, 0x4b0]
---
0x493 JUMPDEST
0x494 POP
0x495 SLOAD
0x496 SWAP5
0x497 POP
0x498 PUSH1 0x1
0x49a SLOAD
0x49b PUSH1 0x0
0x49d EQ
0x49e DUP1
0x49f ISZERO
0x4a0 PUSH2 0x4b0
0x4a3 JUMPI
---
0x493: JUMPDEST 
0x495: V428 = S[V426]
0x498: V429 = 0x1
0x49a: V430 = S[0x1]
0x49b: V431 = 0x0
0x49d: V432 = EQ 0x0 V430
0x49f: V433 = ISZERO V432
0x4a0: V434 = 0x4b0
0x4a3: JUMPI 0x4b0 V433
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S24, S23, S22, S21, S20, S19, S18, {0x149, 0x718, 0xe49}, S16, S15, S14, S13, S12, S11, S10, {0x149, 0x718, 0xe49}, S8, S7, 0x0, 0x0, 0x0, 0x0, 0x0, V426, 0x0]
Stack pops: 7
Stack additions: [V428, S5, S4, S3, S2, V432]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S24, S23, S22, S21, S20, S19, S18, {0x149, 0x718, 0xe49}, S16, S15, S14, S13, S12, S11, S10, {0x149, 0x718, 0xe49}, S8, S7, V428, 0x0, 0x0, 0x0, 0x0, V432]

================================

Block 0x4a4
[0x4a4:0x4af]
---
Predecessors: [0x493]
Successors: [0x4b0]
---
0x4a4 POP
0x4a5 PUSH8 0xde0b6b3a7640000
0x4ae DUP7
0x4af LT
---
0x4a5: V435 = 0xde0b6b3a7640000
0x4af: V436 = LT S6 0xde0b6b3a7640000
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S23, S22, S21, S20, S19, S18, S17, {0x149, 0x718, 0xe49}, S15, S14, S13, S12, S11, S10, S9, {0x149, 0x718, 0xe49}, S7, S6, V428, 0x0, 0x0, 0x0, 0x0, V432]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, V436]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S23, S22, S21, S20, S19, S18, S17, {0x149, 0x718, 0xe49}, S15, S14, S13, S12, S11, S10, S9, {0x149, 0x718, 0xe49}, S7, S6, V428, 0x0, 0x0, 0x0, 0x0, V436]

================================

Block 0x4b0
[0x4b0:0x4b5]
---
Predecessors: [0x493, 0x4a4]
Successors: [0x4b6, 0x4d9]
---
0x4b0 JUMPDEST
0x4b1 ISZERO
0x4b2 PUSH2 0x4d9
0x4b5 JUMPI
---
0x4b0: JUMPDEST 
0x4b1: V437 = ISZERO S0
0x4b2: V438 = 0x4d9
0x4b5: JUMPI 0x4d9 V437
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S23, S22, S21, S20, S19, S18, S17, {0x149, 0x718, 0xe49}, S15, S14, S13, S12, S11, S10, S9, {0x149, 0x718, 0xe49}, S7, S6, V428, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S23, S22, S21, S20, S19, S18, S17, {0x149, 0x718, 0xe49}, S15, S14, S13, S12, S11, S10, S9, {0x149, 0x718, 0xe49}, S7, S6, V428, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x4b6
[0x4b6:0x4c6]
---
Predecessors: [0x4b0]
Successors: [0x4c7]
---
0x4b6 PUSH1 0x3
0x4b8 PUSH1 0x1
0x4ba SLOAD
0x4bb PUSH1 0x1
0x4bd ADD
0x4be DUP2
0x4bf SLOAD
0x4c0 DUP2
0x4c1 LT
0x4c2 ISZERO
0x4c3 PUSH2 0x0
0x4c6 JUMPI
---
0x4b6: V439 = 0x3
0x4b8: V440 = 0x1
0x4ba: V441 = S[0x1]
0x4bb: V442 = 0x1
0x4bd: V443 = ADD 0x1 V441
0x4bf: V444 = S[0x3]
0x4c1: V445 = LT V443 V444
0x4c2: V446 = ISZERO V445
0x4c3: V447 = 0x0
0x4c6: THROWI V446
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S22, S21, S20, S19, S18, S17, S16, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, V428, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, V443]
Exit stack: [S22, S21, S20, S19, S18, S17, S16, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, S4, 0x0, 0x0, 0x0, 0x0, 0x3, V443]

================================

Block 0x4c7
[0x4c7:0x4d3]
---
Predecessors: [0x4b6]
Successors: [0x4d4]
---
0x4c7 SWAP1
0x4c8 PUSH1 0x0
0x4ca MSTORE
0x4cb PUSH1 0x20
0x4cd PUSH1 0x0
0x4cf SHA3
0x4d0 SWAP1
0x4d1 ADD
0x4d2 PUSH1 0x0
---
0x4c8: V448 = 0x0
0x4ca: M[0x0] = 0x3
0x4cb: V449 = 0x20
0x4cd: V450 = 0x0
0x4cf: V451 = SHA3 0x0 0x20
0x4d1: V452 = ADD V443 V451
0x4d2: V453 = 0x0
---
Entry stack: [S24, S23, S22, S21, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S16, S15, S14, S13, S12, S11, S10, {0x149, 0x718, 0xe49}, S8, S7, V428, 0x0, 0x0, 0x0, 0x0, 0x3, V443]
Stack pops: 2
Stack additions: [V452, 0x0]
Exit stack: [S24, S23, S22, S21, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S16, S15, S14, S13, S12, S11, S10, {0x149, 0x718, 0xe49}, S8, S7, V428, 0x0, 0x0, 0x0, 0x0, V452, 0x0]

================================

Block 0x4d4
[0x4d4:0x4d8]
---
Predecessors: [0x4c7]
Successors: [0x4d9]
---
0x4d4 JUMPDEST
0x4d5 POP
0x4d6 SLOAD
0x4d7 SWAP5
0x4d8 POP
---
0x4d4: JUMPDEST 
0x4d6: V454 = S[V452]
---
Entry stack: [S24, S23, S22, S21, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S16, S15, S14, S13, S12, S11, S10, {0x149, 0x718, 0xe49}, S8, S7, V428, 0x0, 0x0, 0x0, 0x0, V452, 0x0]
Stack pops: 7
Stack additions: [V454, S5, S4, S3, S2]
Exit stack: [S24, S23, S22, S21, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S16, S15, S14, S13, S12, S11, S10, {0x149, 0x718, 0xe49}, S8, S7, V454, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x4d9
[0x4d9:0x4e1]
---
Predecessors: [0x4b0, 0x4d4]
Successors: [0x4e2]
---
0x4d9 JUMPDEST
0x4da DUP5
0x4db DUP7
0x4dc DUP2
0x4dd ISZERO
0x4de PUSH2 0x0
0x4e1 JUMPI
---
0x4d9: JUMPDEST 
0x4dd: V455 = ISZERO S4
0x4de: V456 = 0x0
0x4e1: THROWI V455
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S22, S21, S20, S19, S18, S17, S16, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S4, S5]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S22, S21, S20, S19, S18, S17, S16, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, S4, 0x0, 0x0, 0x0, 0x0, S4, S5]

================================

Block 0x4e2
[0x4e2:0x4f2]
---
Predecessors: [0x4d9]
Successors: [0x4f3]
---
0x4e2 DIV
0x4e3 SWAP4
0x4e4 POP
0x4e5 PUSH1 0x2
0x4e7 PUSH1 0x1
0x4e9 SLOAD
0x4ea DUP2
0x4eb SLOAD
0x4ec DUP2
0x4ed LT
0x4ee ISZERO
0x4ef PUSH2 0x0
0x4f2 JUMPI
---
0x4e2: V457 = DIV S0 S1
0x4e5: V458 = 0x2
0x4e7: V459 = 0x1
0x4e9: V460 = S[0x1]
0x4eb: V461 = S[0x2]
0x4ed: V462 = LT V460 V461
0x4ee: V463 = ISZERO V462
0x4ef: V464 = 0x0
0x4f2: THROWI V463
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S24, S23, S22, S21, S20, S19, S18, {0x149, 0x718, 0xe49}, S16, S15, S14, S13, S12, S11, S10, {0x149, 0x718, 0xe49}, S8, S7, S6, 0x0, 0x0, 0x0, 0x0, S1, S0]
Stack pops: 6
Stack additions: [V457, S4, S3, S2, 0x2, V460]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S24, S23, S22, S21, S20, S19, S18, {0x149, 0x718, 0xe49}, S16, S15, S14, S13, S12, S11, S10, {0x149, 0x718, 0xe49}, S8, S7, S6, V457, 0x0, 0x0, 0x0, 0x2, V460]

================================

Block 0x4f3
[0x4f3:0x4ff]
---
Predecessors: [0x4e2]
Successors: [0x500]
---
0x4f3 SWAP1
0x4f4 PUSH1 0x0
0x4f6 MSTORE
0x4f7 PUSH1 0x20
0x4f9 PUSH1 0x0
0x4fb SHA3
0x4fc SWAP1
0x4fd ADD
0x4fe PUSH1 0x0
---
0x4f4: V465 = 0x0
0x4f6: M[0x0] = 0x2
0x4f7: V466 = 0x20
0x4f9: V467 = 0x0
0x4fb: V468 = SHA3 0x0 0x20
0x4fd: V469 = ADD V460 V468
0x4fe: V470 = 0x0
---
Entry stack: [S24, S23, S22, S21, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S16, S15, S14, S13, S12, S11, S10, {0x149, 0x718, 0xe49}, S8, S7, S6, V457, 0x0, 0x0, 0x0, 0x2, V460]
Stack pops: 2
Stack additions: [V469, 0x0]
Exit stack: [S24, S23, S22, S21, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S16, S15, S14, S13, S12, S11, S10, {0x149, 0x718, 0xe49}, S8, S7, S6, V457, 0x0, 0x0, 0x0, V469, 0x0]

================================

Block 0x500
[0x500:0x50d]
---
Predecessors: [0x4f3]
Successors: [0x50e, 0x71d]
---
0x500 JUMPDEST
0x501 POP
0x502 SLOAD
0x503 DUP5
0x504 PUSH1 0xb
0x506 SLOAD
0x507 ADD
0x508 GT
0x509 ISZERO
0x50a PUSH2 0x71d
0x50d JUMPI
---
0x500: JUMPDEST 
0x502: V471 = S[V469]
0x504: V472 = 0xb
0x506: V473 = S[0xb]
0x507: V474 = ADD V473 S5
0x508: V475 = GT V474 V471
0x509: V476 = ISZERO V475
0x50a: V477 = 0x71d
0x50d: JUMPI 0x71d V476
---
Entry stack: [S24, S23, S22, S21, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S16, S15, S14, S13, S12, S11, S10, {0x149, 0x718, 0xe49}, S8, S7, S6, S5, 0x0, 0x0, 0x0, V469, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2]
Exit stack: [S24, S23, S22, S21, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S16, S15, S14, S13, S12, S11, S10, {0x149, 0x718, 0xe49}, S8, S7, S6, S5, 0x0, 0x0, 0x0]

================================

Block 0x50e
[0x50e:0x51e]
---
Predecessors: [0x500]
Successors: [0x51f]
---
0x50e PUSH1 0xb
0x510 SLOAD
0x511 PUSH1 0x2
0x513 PUSH1 0x1
0x515 SLOAD
0x516 DUP2
0x517 SLOAD
0x518 DUP2
0x519 LT
0x51a ISZERO
0x51b PUSH2 0x0
0x51e JUMPI
---
0x50e: V478 = 0xb
0x510: V479 = S[0xb]
0x511: V480 = 0x2
0x513: V481 = 0x1
0x515: V482 = S[0x1]
0x517: V483 = S[0x2]
0x519: V484 = LT V482 V483
0x51a: V485 = ISZERO V484
0x51b: V486 = 0x0
0x51e: THROWI V485
---
Entry stack: [S22, S21, S20, S19, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V479, 0x2, V482]
Exit stack: [S22, S21, S20, S19, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, 0x0, 0x0, 0x0, V479, 0x2, V482]

================================

Block 0x51f
[0x51f:0x52b]
---
Predecessors: [0x50e]
Successors: [0x52c]
---
0x51f SWAP1
0x520 PUSH1 0x0
0x522 MSTORE
0x523 PUSH1 0x20
0x525 PUSH1 0x0
0x527 SHA3
0x528 SWAP1
0x529 ADD
0x52a PUSH1 0x0
---
0x520: V487 = 0x0
0x522: M[0x0] = 0x2
0x523: V488 = 0x20
0x525: V489 = 0x0
0x527: V490 = SHA3 0x0 0x20
0x529: V491 = ADD V482 V490
0x52a: V492 = 0x0
---
Entry stack: [S25, S24, S23, S22, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, 0x0, 0x0, 0x0, V479, 0x2, V482]
Stack pops: 2
Stack additions: [V491, 0x0]
Exit stack: [S25, S24, S23, S22, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, 0x0, 0x0, 0x0, V479, V491, 0x0]

================================

Block 0x52c
[0x52c:0x5b3]
---
Predecessors: [0x51f]
Successors: [0x5b4]
---
0x52c JUMPDEST
0x52d POP
0x52e SLOAD
0x52f PUSH1 0x1
0x531 PUSH1 0xa0
0x533 PUSH1 0x2
0x535 EXP
0x536 SUB
0x537 DUP1
0x538 DUP11
0x539 AND
0x53a PUSH1 0x0
0x53c DUP2
0x53d DUP2
0x53e MSTORE
0x53f PUSH1 0xd
0x541 PUSH1 0x20
0x543 MSTORE
0x544 PUSH1 0x40
0x546 DUP1
0x547 DUP3
0x548 SHA3
0x549 DUP1
0x54a SLOAD
0x54b DUP14
0x54c ADD
0x54d SWAP1
0x54e SSTORE
0x54f PUSH1 0xb
0x551 DUP1
0x552 SLOAD
0x553 SWAP7
0x554 SWAP1
0x555 SWAP6
0x556 SUB
0x557 SWAP6
0x558 DUP7
0x559 ADD
0x55a SWAP1
0x55b SWAP5
0x55c SSTORE
0x55d PUSH1 0x8
0x55f DUP1
0x560 SLOAD
0x561 DUP12
0x562 DUP8
0x563 MUL
0x564 SWAP1
0x565 DUP2
0x566 ADD
0x567 SWAP1
0x568 SWAP2
0x569 SSTORE
0x56a PUSH1 0xc
0x56c SLOAD
0x56d DUP6
0x56e MLOAD
0x56f PUSH1 0xe3
0x571 PUSH1 0x2
0x573 EXP
0x574 PUSH4 0xf38ca0d
0x579 MUL
0x57a DUP2
0x57b MSTORE
0x57c PUSH1 0x4
0x57e DUP2
0x57f ADD
0x580 SWAP5
0x581 SWAP1
0x582 SWAP5
0x583 MSTORE
0x584 PUSH1 0x24
0x586 DUP5
0x587 ADD
0x588 DUP8
0x589 SWAP1
0x58a MSTORE
0x58b SWAP5
0x58c MLOAD
0x58d SWAP6
0x58e SWAP9
0x58f POP
0x590 SWAP7
0x591 POP
0x592 SWAP3
0x593 SWAP1
0x594 SWAP2
0x595 AND
0x596 SWAP3
0x597 PUSH4 0x79c65068
0x59c SWAP3
0x59d PUSH1 0x44
0x59f DUP1
0x5a0 DUP5
0x5a1 ADD
0x5a2 SWAP4
0x5a3 SWAP2
0x5a4 SWAP3
0x5a5 SWAP2
0x5a6 DUP3
0x5a7 SWAP1
0x5a8 SUB
0x5a9 ADD
0x5aa DUP2
0x5ab DUP4
0x5ac DUP8
0x5ad DUP1
0x5ae EXTCODESIZE
0x5af ISZERO
0x5b0 PUSH2 0x0
0x5b3 JUMPI
---
0x52c: JUMPDEST 
0x52e: V493 = S[V491]
0x52f: V494 = 0x1
0x531: V495 = 0xa0
0x533: V496 = 0x2
0x535: V497 = EXP 0x2 0xa0
0x536: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x539: V499 = AND S9 0xffffffffffffffffffffffffffffffffffffffff
0x53a: V500 = 0x0
0x53e: M[0x0] = V499
0x53f: V501 = 0xd
0x541: V502 = 0x20
0x543: M[0x20] = 0xd
0x544: V503 = 0x40
0x548: V504 = SHA3 0x0 0x40
0x54a: V505 = S[V504]
0x54c: V506 = ADD S8 V505
0x54e: S[V504] = V506
0x54f: V507 = 0xb
0x552: V508 = S[0xb]
0x556: V509 = SUB V493 V479
0x559: V510 = ADD V509 V508
0x55c: S[0xb] = V510
0x55d: V511 = 0x8
0x560: V512 = S[0x8]
0x563: V513 = MUL V509 S7
0x566: V514 = ADD V513 V512
0x569: S[0x8] = V514
0x56a: V515 = 0xc
0x56c: V516 = S[0xc]
0x56e: V517 = M[0x40]
0x56f: V518 = 0xe3
0x571: V519 = 0x2
0x573: V520 = EXP 0x2 0xe3
0x574: V521 = 0xf38ca0d
0x579: V522 = MUL 0xf38ca0d 0x800000000000000000000000000000000000000000000000000000000
0x57b: M[V517] = 0x79c6506800000000000000000000000000000000000000000000000000000000
0x57c: V523 = 0x4
0x57f: V524 = ADD V517 0x4
0x583: M[V524] = V499
0x584: V525 = 0x24
0x587: V526 = ADD V517 0x24
0x58a: M[V526] = V509
0x58c: V527 = M[0x40]
0x595: V528 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x597: V529 = 0x79c65068
0x59d: V530 = 0x44
0x5a1: V531 = ADD V517 0x44
0x5a8: V532 = SUB V517 V527
0x5a9: V533 = ADD V532 0x44
0x5ae: V534 = EXTCODESIZE V528
0x5af: V535 = ISZERO V534
0x5b0: V536 = 0x0
0x5b3: THROWI V535
---
Entry stack: [S25, S24, S23, S22, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, 0x0, 0x0, 0x0, V479, V491, 0x0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, V509, V513, S3, V528, 0x79c65068, V531, 0x0, V527, V533, V527, 0x0, V528]
Exit stack: [S25, S24, S23, S22, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, V509, V513, 0x0, V528, 0x79c65068, V531, 0x0, V527, V533, V527, 0x0, V528]

================================

Block 0x5b4
[0x5b4:0x5bd]
---
Predecessors: [0x52c]
Successors: [0x5be]
---
0x5b4 PUSH1 0x32
0x5b6 GAS
0x5b7 SUB
0x5b8 CALL
0x5b9 ISZERO
0x5ba PUSH2 0x0
0x5bd JUMPI
---
0x5b4: V537 = 0x32
0x5b6: V538 = GAS
0x5b7: V539 = SUB V538 0x32
0x5b8: V540 = CALL V539 V528 0x0 V527 V533 V527 0x0
0x5b9: V541 = ISZERO V540
0x5ba: V542 = 0x0
0x5bd: THROWI V541
---
Entry stack: [S31, S30, S29, S28, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S23, S22, S21, S20, S19, S18, S17, {0x149, 0x718, 0xe49}, S15, S14, S13, S12, V509, V513, 0x0, V528, 0x79c65068, V531, 0x0, V527, V533, V527, 0x0, V528]
Stack pops: 6
Stack additions: []
Exit stack: [S31, S30, S29, S28, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S23, S22, S21, S20, S19, S18, S17, {0x149, 0x718, 0xe49}, S15, S14, S13, S12, V509, V513, 0x0, V528, 0x79c65068, V531]

================================

Block 0x5be
[0x5be:0x5e3]
---
Predecessors: [0x5b4]
Successors: [0x5e4]
---
0x5be POP
0x5bf POP
0x5c0 PUSH1 0xc
0x5c2 SLOAD
0x5c3 PUSH1 0x6
0x5c5 SLOAD
0x5c6 PUSH1 0x1
0x5c8 PUSH1 0xa0
0x5ca PUSH1 0x2
0x5cc EXP
0x5cd SUB
0x5ce SWAP2
0x5cf DUP3
0x5d0 AND
0x5d1 SWAP3
0x5d2 POP
0x5d3 PUSH4 0x79c65068
0x5d8 SWAP2
0x5d9 AND
0x5da PUSH1 0x64
0x5dc DUP9
0x5dd DUP11
0x5de DUP2
0x5df ISZERO
0x5e0 PUSH2 0x0
0x5e3 JUMPI
---
0x5c0: V543 = 0xc
0x5c2: V544 = S[0xc]
0x5c3: V545 = 0x6
0x5c5: V546 = S[0x6]
0x5c6: V547 = 0x1
0x5c8: V548 = 0xa0
0x5ca: V549 = 0x2
0x5cc: V550 = EXP 0x2 0xa0
0x5cd: V551 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d0: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V544
0x5d3: V553 = 0x79c65068
0x5d9: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x5da: V555 = 0x64
0x5df: V556 = ISZERO S7
0x5e0: V557 = 0x0
0x5e3: THROWI V556
---
Entry stack: [S25, S24, S23, S22, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, V509, V513, 0x0, V528, 0x79c65068, V531]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, V552, 0x79c65068, V554, 0x64, S7, S8]
Exit stack: [S25, S24, S23, S22, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, V509, V513, 0x0, V552, 0x79c65068, V554, 0x64, S7, S8]

================================

Block 0x5e4
[0x5e4:0x5ed]
---
Predecessors: [0x5be]
Successors: [0x5ee]
---
0x5e4 DIV
0x5e5 PUSH1 0x1d
0x5e7 MUL
0x5e8 DUP2
0x5e9 ISZERO
0x5ea PUSH2 0x0
0x5ed JUMPI
---
0x5e4: V558 = DIV S0 S1
0x5e5: V559 = 0x1d
0x5e7: V560 = MUL 0x1d V558
0x5e9: V561 = ISZERO 0x64
0x5ea: V562 = 0x0
0x5ed: THROWI 0x0
---
Entry stack: [S28, S27, S26, S25, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S20, S19, S18, S17, S16, S15, S14, {0x149, 0x718, 0xe49}, S12, S11, S10, S9, V509, V513, 0x0, V552, 0x79c65068, V554, 0x64, S1, S0]
Stack pops: 3
Stack additions: [S2, V560]
Exit stack: [S28, S27, S26, S25, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S20, S19, S18, S17, S16, S15, S14, {0x149, 0x718, 0xe49}, S12, S11, S10, S9, V509, V513, 0x0, V552, 0x79c65068, V554, 0x64, V560]

================================

Block 0x5ee
[0x5ee:0x639]
---
Predecessors: [0x5e4]
Successors: [0x63a]
---
0x5ee DIV
0x5ef PUSH1 0x40
0x5f1 MLOAD
0x5f2 DUP4
0x5f3 PUSH4 0xffffffff
0x5f8 AND
0x5f9 PUSH1 0xe0
0x5fb PUSH1 0x2
0x5fd EXP
0x5fe MUL
0x5ff DUP2
0x600 MSTORE
0x601 PUSH1 0x4
0x603 ADD
0x604 DUP1
0x605 DUP4
0x606 PUSH1 0x1
0x608 PUSH1 0xa0
0x60a PUSH1 0x2
0x60c EXP
0x60d SUB
0x60e AND
0x60f PUSH1 0x1
0x611 PUSH1 0xa0
0x613 PUSH1 0x2
0x615 EXP
0x616 SUB
0x617 AND
0x618 DUP2
0x619 MSTORE
0x61a PUSH1 0x20
0x61c ADD
0x61d DUP3
0x61e DUP2
0x61f MSTORE
0x620 PUSH1 0x20
0x622 ADD
0x623 SWAP3
0x624 POP
0x625 POP
0x626 POP
0x627 PUSH1 0x0
0x629 PUSH1 0x40
0x62b MLOAD
0x62c DUP1
0x62d DUP4
0x62e SUB
0x62f DUP2
0x630 PUSH1 0x0
0x632 DUP8
0x633 DUP1
0x634 EXTCODESIZE
0x635 ISZERO
0x636 PUSH2 0x0
0x639 JUMPI
---
0x5ee: V563 = DIV V560 0x64
0x5ef: V564 = 0x40
0x5f1: V565 = M[0x40]
0x5f3: V566 = 0xffffffff
0x5f8: V567 = AND 0xffffffff 0x79c65068
0x5f9: V568 = 0xe0
0x5fb: V569 = 0x2
0x5fd: V570 = EXP 0x2 0xe0
0x5fe: V571 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x79c65068
0x600: M[V565] = 0x79c6506800000000000000000000000000000000000000000000000000000000
0x601: V572 = 0x4
0x603: V573 = ADD 0x4 V565
0x606: V574 = 0x1
0x608: V575 = 0xa0
0x60a: V576 = 0x2
0x60c: V577 = EXP 0x2 0xa0
0x60d: V578 = SUB 0x10000000000000000000000000000000000000000 0x1
0x60e: V579 = AND 0xffffffffffffffffffffffffffffffffffffffff V554
0x60f: V580 = 0x1
0x611: V581 = 0xa0
0x613: V582 = 0x2
0x615: V583 = EXP 0x2 0xa0
0x616: V584 = SUB 0x10000000000000000000000000000000000000000 0x1
0x617: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V579
0x619: M[V573] = V585
0x61a: V586 = 0x20
0x61c: V587 = ADD 0x20 V573
0x61f: M[V587] = V563
0x620: V588 = 0x20
0x622: V589 = ADD 0x20 V587
0x627: V590 = 0x0
0x629: V591 = 0x40
0x62b: V592 = M[0x40]
0x62e: V593 = SUB V589 V592
0x630: V594 = 0x0
0x634: V595 = EXTCODESIZE V552
0x635: V596 = ISZERO V595
0x636: V597 = 0x0
0x639: THROWI V596
---
Entry stack: [S27, S26, S25, S24, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S19, S18, S17, S16, S15, S14, S13, {0x149, 0x718, 0xe49}, S11, S10, S9, S8, V509, V513, 0x0, V552, 0x79c65068, V554, 0x64, V560]
Stack pops: 5
Stack additions: [S4, S3, V589, 0x0, V592, V593, V592, 0x0, S4]
Exit stack: [S27, S26, S25, S24, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S19, S18, S17, S16, S15, S14, S13, {0x149, 0x718, 0xe49}, S11, S10, S9, S8, V509, V513, 0x0, V552, 0x79c65068, V589, 0x0, V592, V593, V592, 0x0, V552]

================================

Block 0x63a
[0x63a:0x643]
---
Predecessors: [0x5ee]
Successors: [0x644]
---
0x63a PUSH1 0x32
0x63c GAS
0x63d SUB
0x63e CALL
0x63f ISZERO
0x640 PUSH2 0x0
0x643 JUMPI
---
0x63a: V598 = 0x32
0x63c: V599 = GAS
0x63d: V600 = SUB V599 0x32
0x63e: V601 = CALL V600 V552 0x0 V592 V593 V592 0x0
0x63f: V602 = ISZERO V601
0x640: V603 = 0x0
0x643: THROWI V602
---
Entry stack: [S31, S30, S29, S28, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S23, S22, S21, S20, S19, S18, S17, {0x149, 0x718, 0xe49}, S15, S14, S13, S12, V509, V513, 0x0, V552, 0x79c65068, V589, 0x0, V592, V593, V592, 0x0, V552]
Stack pops: 6
Stack additions: []
Exit stack: [S31, S30, S29, S28, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S23, S22, S21, S20, S19, S18, S17, {0x149, 0x718, 0xe49}, S15, S14, S13, S12, V509, V513, 0x0, V552, 0x79c65068, V589]

================================

Block 0x644
[0x644:0x669]
---
Predecessors: [0x63a]
Successors: [0x66a]
---
0x644 POP
0x645 POP
0x646 PUSH1 0xc
0x648 SLOAD
0x649 PUSH1 0x7
0x64b SLOAD
0x64c PUSH1 0x1
0x64e PUSH1 0xa0
0x650 PUSH1 0x2
0x652 EXP
0x653 SUB
0x654 SWAP2
0x655 DUP3
0x656 AND
0x657 SWAP3
0x658 POP
0x659 PUSH4 0x79c65068
0x65e SWAP2
0x65f AND
0x660 PUSH1 0x64
0x662 DUP9
0x663 DUP11
0x664 DUP2
0x665 ISZERO
0x666 PUSH2 0x0
0x669 JUMPI
---
0x646: V604 = 0xc
0x648: V605 = S[0xc]
0x649: V606 = 0x7
0x64b: V607 = S[0x7]
0x64c: V608 = 0x1
0x64e: V609 = 0xa0
0x650: V610 = 0x2
0x652: V611 = EXP 0x2 0xa0
0x653: V612 = SUB 0x10000000000000000000000000000000000000000 0x1
0x656: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x659: V614 = 0x79c65068
0x65f: V615 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0x660: V616 = 0x64
0x665: V617 = ISZERO S7
0x666: V618 = 0x0
0x669: THROWI V617
---
Entry stack: [S25, S24, S23, S22, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, V509, V513, 0x0, V552, 0x79c65068, V589]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, V613, 0x79c65068, V615, 0x64, S7, S8]
Exit stack: [S25, S24, S23, S22, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, V509, V513, 0x0, V613, 0x79c65068, V615, 0x64, S7, S8]

================================

Block 0x66a
[0x66a:0x673]
---
Predecessors: [0x644]
Successors: [0x674]
---
0x66a DIV
0x66b PUSH1 0xe
0x66d MUL
0x66e DUP2
0x66f ISZERO
0x670 PUSH2 0x0
0x673 JUMPI
---
0x66a: V619 = DIV S0 S1
0x66b: V620 = 0xe
0x66d: V621 = MUL 0xe V619
0x66f: V622 = ISZERO 0x64
0x670: V623 = 0x0
0x673: THROWI 0x0
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S20, S19, S18, S17, S16, S15, S14, {0x149, 0x718, 0xe49}, S12, S11, S10, S9, V509, V513, 0x0, V613, 0x79c65068, V615, 0x64, S1, S0]
Stack pops: 3
Stack additions: [S2, V621]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S20, S19, S18, S17, S16, S15, S14, {0x149, 0x718, 0xe49}, S12, S11, S10, S9, V509, V513, 0x0, V613, 0x79c65068, V615, 0x64, V621]

================================

Block 0x674
[0x674:0x6bf]
---
Predecessors: [0x66a]
Successors: [0x6c0]
---
0x674 DIV
0x675 PUSH1 0x40
0x677 MLOAD
0x678 DUP4
0x679 PUSH4 0xffffffff
0x67e AND
0x67f PUSH1 0xe0
0x681 PUSH1 0x2
0x683 EXP
0x684 MUL
0x685 DUP2
0x686 MSTORE
0x687 PUSH1 0x4
0x689 ADD
0x68a DUP1
0x68b DUP4
0x68c PUSH1 0x1
0x68e PUSH1 0xa0
0x690 PUSH1 0x2
0x692 EXP
0x693 SUB
0x694 AND
0x695 PUSH1 0x1
0x697 PUSH1 0xa0
0x699 PUSH1 0x2
0x69b EXP
0x69c SUB
0x69d AND
0x69e DUP2
0x69f MSTORE
0x6a0 PUSH1 0x20
0x6a2 ADD
0x6a3 DUP3
0x6a4 DUP2
0x6a5 MSTORE
0x6a6 PUSH1 0x20
0x6a8 ADD
0x6a9 SWAP3
0x6aa POP
0x6ab POP
0x6ac POP
0x6ad PUSH1 0x0
0x6af PUSH1 0x40
0x6b1 MLOAD
0x6b2 DUP1
0x6b3 DUP4
0x6b4 SUB
0x6b5 DUP2
0x6b6 PUSH1 0x0
0x6b8 DUP8
0x6b9 DUP1
0x6ba EXTCODESIZE
0x6bb ISZERO
0x6bc PUSH2 0x0
0x6bf JUMPI
---
0x674: V624 = DIV V621 0x64
0x675: V625 = 0x40
0x677: V626 = M[0x40]
0x679: V627 = 0xffffffff
0x67e: V628 = AND 0xffffffff 0x79c65068
0x67f: V629 = 0xe0
0x681: V630 = 0x2
0x683: V631 = EXP 0x2 0xe0
0x684: V632 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x79c65068
0x686: M[V626] = 0x79c6506800000000000000000000000000000000000000000000000000000000
0x687: V633 = 0x4
0x689: V634 = ADD 0x4 V626
0x68c: V635 = 0x1
0x68e: V636 = 0xa0
0x690: V637 = 0x2
0x692: V638 = EXP 0x2 0xa0
0x693: V639 = SUB 0x10000000000000000000000000000000000000000 0x1
0x694: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff V615
0x695: V641 = 0x1
0x697: V642 = 0xa0
0x699: V643 = 0x2
0x69b: V644 = EXP 0x2 0xa0
0x69c: V645 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69d: V646 = AND 0xffffffffffffffffffffffffffffffffffffffff V640
0x69f: M[V634] = V646
0x6a0: V647 = 0x20
0x6a2: V648 = ADD 0x20 V634
0x6a5: M[V648] = V624
0x6a6: V649 = 0x20
0x6a8: V650 = ADD 0x20 V648
0x6ad: V651 = 0x0
0x6af: V652 = 0x40
0x6b1: V653 = M[0x40]
0x6b4: V654 = SUB V650 V653
0x6b6: V655 = 0x0
0x6ba: V656 = EXTCODESIZE V613
0x6bb: V657 = ISZERO V656
0x6bc: V658 = 0x0
0x6bf: THROWI V657
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S19, S18, S17, S16, S15, S14, S13, {0x149, 0x718, 0xe49}, S11, S10, S9, S8, V509, V513, 0x0, V613, 0x79c65068, V615, 0x64, V621]
Stack pops: 5
Stack additions: [S4, S3, V650, 0x0, V653, V654, V653, 0x0, S4]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S19, S18, S17, S16, S15, S14, S13, {0x149, 0x718, 0xe49}, S11, S10, S9, S8, V509, V513, 0x0, V613, 0x79c65068, V650, 0x0, V653, V654, V653, 0x0, V613]

================================

Block 0x6c0
[0x6c0:0x6c9]
---
Predecessors: [0x674]
Successors: [0x6ca]
---
0x6c0 PUSH1 0x32
0x6c2 GAS
0x6c3 SUB
0x6c4 CALL
0x6c5 ISZERO
0x6c6 PUSH2 0x0
0x6c9 JUMPI
---
0x6c0: V659 = 0x32
0x6c2: V660 = GAS
0x6c3: V661 = SUB V660 0x32
0x6c4: V662 = CALL V661 V613 0x0 V653 V654 V653 0x0
0x6c5: V663 = ISZERO V662
0x6c6: V664 = 0x0
0x6c9: THROWI V663
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S23, S22, S21, S20, S19, S18, S17, {0x149, 0x718, 0xe49}, S15, S14, S13, S12, V509, V513, 0x0, V613, 0x79c65068, V650, 0x0, V653, V654, V653, 0x0, V613]
Stack pops: 6
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S23, S22, S21, S20, S19, S18, S17, {0x149, 0x718, 0xe49}, S15, S14, S13, S12, V509, V513, 0x0, V613, 0x79c65068, V650]

================================

Block 0x6ca
[0x6ca:0x717]
---
Predecessors: [0x6c0]
Successors: [0x436]
---
0x6ca POP
0x6cb POP
0x6cc PUSH1 0x40
0x6ce DUP1
0x6cf MLOAD
0x6d0 PUSH1 0x1
0x6d2 PUSH1 0xa0
0x6d4 PUSH1 0x2
0x6d6 EXP
0x6d7 SUB
0x6d8 DUP11
0x6d9 AND
0x6da DUP2
0x6db MSTORE
0x6dc PUSH1 0x20
0x6de DUP2
0x6df ADD
0x6e0 DUP10
0x6e1 SWAP1
0x6e2 MSTORE
0x6e3 PUSH1 0x1
0x6e5 DUP2
0x6e6 DUP4
0x6e7 ADD
0x6e8 MSTORE
0x6e9 SWAP1
0x6ea MLOAD
0x6eb PUSH1 0x0
0x6ed DUP1
0x6ee MLOAD
0x6ef PUSH1 0x20
0x6f1 PUSH2 0x127e
0x6f4 DUP4
0x6f5 CODECOPY
0x6f6 DUP2
0x6f7 MLOAD
0x6f8 SWAP2
0x6f9 MSTORE
0x6fa SWAP3
0x6fb POP
0x6fc SWAP1
0x6fd DUP2
0x6fe SWAP1
0x6ff SUB
0x700 PUSH1 0x60
0x702 ADD
0x703 SWAP1
0x704 LOG1
0x705 PUSH1 0x1
0x707 DUP1
0x708 SLOAD
0x709 DUP2
0x70a ADD
0x70b SWAP1
0x70c SSTORE
0x70d PUSH2 0x718
0x710 DUP8
0x711 DUP4
0x712 DUP9
0x713 SUB
0x714 PUSH2 0x436
0x717 JUMP
---
0x6cc: V665 = 0x40
0x6cf: V666 = M[0x40]
0x6d0: V667 = 0x1
0x6d2: V668 = 0xa0
0x6d4: V669 = 0x2
0x6d6: V670 = EXP 0x2 0xa0
0x6d7: V671 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d9: V672 = AND S9 0xffffffffffffffffffffffffffffffffffffffff
0x6db: M[V666] = V672
0x6dc: V673 = 0x20
0x6df: V674 = ADD V666 0x20
0x6e2: M[V674] = S8
0x6e3: V675 = 0x1
0x6e7: V676 = ADD 0x40 V666
0x6e8: M[V676] = 0x1
0x6ea: V677 = M[0x40]
0x6eb: V678 = 0x0
0x6ee: V679 = M[0x0]
0x6ef: V680 = 0x20
0x6f1: V681 = 0x127e
0x6f5: CODECOPY 0x0 0x127e 0x20
0x6f7: V682 = M[0x0]
0x6f9: M[0x0] = V679
0x6ff: V683 = SUB V666 V677
0x700: V684 = 0x60
0x702: V685 = ADD 0x60 V683
0x704: LOG V677 V685 V682
0x705: V686 = 0x1
0x708: V687 = S[0x1]
0x70a: V688 = ADD 0x1 V687
0x70c: S[0x1] = V688
0x70d: V689 = 0x718
0x713: V690 = SUB S8 V513
0x714: V691 = 0x436
0x717: JUMP 0x436
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, V509, V513, 0x0, V613, 0x79c65068, V650]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, 0x718, S9, V690]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, V509, V513, 0x0, 0x718, S9, V690]

================================

Block 0x718
[0x718:0x71c]
---
Predecessors: [0x96e]
Successors: [0x96c]
---
0x718 JUMPDEST
0x719 PUSH2 0x96c
0x71c JUMP
---
0x718: JUMPDEST 
0x719: V692 = 0x96c
0x71c: JUMP 0x96c
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x71d
[0x71d:0x78f]
---
Predecessors: [0x500]
Successors: [0x790]
---
0x71d JUMPDEST
0x71e PUSH1 0x1
0x720 PUSH1 0xa0
0x722 PUSH1 0x2
0x724 EXP
0x725 SUB
0x726 DUP1
0x727 DUP9
0x728 AND
0x729 PUSH1 0x0
0x72b DUP2
0x72c DUP2
0x72d MSTORE
0x72e PUSH1 0xd
0x730 PUSH1 0x20
0x732 MSTORE
0x733 PUSH1 0x40
0x735 DUP1
0x736 DUP3
0x737 SHA3
0x738 DUP1
0x739 SLOAD
0x73a DUP12
0x73b ADD
0x73c SWAP1
0x73d SSTORE
0x73e PUSH1 0x8
0x740 DUP1
0x741 SLOAD
0x742 DUP12
0x743 ADD
0x744 SWAP1
0x745 SSTORE
0x746 PUSH1 0xb
0x748 DUP1
0x749 SLOAD
0x74a DUP10
0x74b ADD
0x74c SWAP1
0x74d SSTORE
0x74e PUSH1 0xc
0x750 SLOAD
0x751 DUP2
0x752 MLOAD
0x753 PUSH1 0xe3
0x755 PUSH1 0x2
0x757 EXP
0x758 PUSH4 0xf38ca0d
0x75d MUL
0x75e DUP2
0x75f MSTORE
0x760 PUSH1 0x4
0x762 DUP2
0x763 ADD
0x764 SWAP5
0x765 SWAP1
0x766 SWAP5
0x767 MSTORE
0x768 PUSH1 0x24
0x76a DUP5
0x76b ADD
0x76c DUP10
0x76d SWAP1
0x76e MSTORE
0x76f SWAP1
0x770 MLOAD
0x771 SWAP4
0x772 AND
0x773 SWAP3
0x774 PUSH4 0x79c65068
0x779 SWAP3
0x77a PUSH1 0x44
0x77c DUP1
0x77d DUP3
0x77e ADD
0x77f SWAP4
0x780 SWAP3
0x781 SWAP2
0x782 DUP3
0x783 SWAP1
0x784 SUB
0x785 ADD
0x786 DUP2
0x787 DUP4
0x788 DUP8
0x789 DUP1
0x78a EXTCODESIZE
0x78b ISZERO
0x78c PUSH2 0x0
0x78f JUMPI
---
0x71d: JUMPDEST 
0x71e: V693 = 0x1
0x720: V694 = 0xa0
0x722: V695 = 0x2
0x724: V696 = EXP 0x2 0xa0
0x725: V697 = SUB 0x10000000000000000000000000000000000000000 0x1
0x728: V698 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x729: V699 = 0x0
0x72d: M[0x0] = V698
0x72e: V700 = 0xd
0x730: V701 = 0x20
0x732: M[0x20] = 0xd
0x733: V702 = 0x40
0x737: V703 = SHA3 0x0 0x40
0x739: V704 = S[V703]
0x73b: V705 = ADD S5 V704
0x73d: S[V703] = V705
0x73e: V706 = 0x8
0x741: V707 = S[0x8]
0x743: V708 = ADD S5 V707
0x745: S[0x8] = V708
0x746: V709 = 0xb
0x749: V710 = S[0xb]
0x74b: V711 = ADD S3 V710
0x74d: S[0xb] = V711
0x74e: V712 = 0xc
0x750: V713 = S[0xc]
0x752: V714 = M[0x40]
0x753: V715 = 0xe3
0x755: V716 = 0x2
0x757: V717 = EXP 0x2 0xe3
0x758: V718 = 0xf38ca0d
0x75d: V719 = MUL 0xf38ca0d 0x800000000000000000000000000000000000000000000000000000000
0x75f: M[V714] = 0x79c6506800000000000000000000000000000000000000000000000000000000
0x760: V720 = 0x4
0x763: V721 = ADD V714 0x4
0x767: M[V721] = V698
0x768: V722 = 0x24
0x76b: V723 = ADD V714 0x24
0x76e: M[V723] = S3
0x770: V724 = M[0x40]
0x772: V725 = AND 0xffffffffffffffffffffffffffffffffffffffff V713
0x774: V726 = 0x79c65068
0x77a: V727 = 0x44
0x77e: V728 = ADD V714 0x44
0x784: V729 = SUB V714 V724
0x785: V730 = ADD V729 0x44
0x78a: V731 = EXTCODESIZE V725
0x78b: V732 = ISZERO V731
0x78c: V733 = 0x0
0x78f: THROWI V732
---
Entry stack: [S22, S21, S20, S19, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V725, 0x79c65068, V728, 0x0, V724, V730, V724, 0x0, V725]
Exit stack: [S22, S21, S20, S19, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, 0x0, 0x0, 0x0, V725, 0x79c65068, V728, 0x0, V724, V730, V724, 0x0, V725]

================================

Block 0x790
[0x790:0x799]
---
Predecessors: [0x71d]
Successors: [0x79a]
---
0x790 PUSH1 0x32
0x792 GAS
0x793 SUB
0x794 CALL
0x795 ISZERO
0x796 PUSH2 0x0
0x799 JUMPI
---
0x790: V734 = 0x32
0x792: V735 = GAS
0x793: V736 = SUB V735 0x32
0x794: V737 = CALL V736 V725 0x0 V724 V730 V724 0x0
0x795: V738 = ISZERO V737
0x796: V739 = 0x0
0x799: THROWI V738
---
Entry stack: [S31, S30, S29, S28, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S23, S22, S21, S20, S19, S18, S17, {0x149, 0x718, 0xe49}, S15, S14, S13, S12, 0x0, 0x0, 0x0, V725, 0x79c65068, V728, 0x0, V724, V730, V724, 0x0, V725]
Stack pops: 6
Stack additions: []
Exit stack: [S31, S30, S29, S28, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S23, S22, S21, S20, S19, S18, S17, {0x149, 0x718, 0xe49}, S15, S14, S13, S12, 0x0, 0x0, 0x0, V725, 0x79c65068, V728]

================================

Block 0x79a
[0x79a:0x7bf]
---
Predecessors: [0x790]
Successors: [0x7c0]
---
0x79a POP
0x79b POP
0x79c PUSH1 0xc
0x79e SLOAD
0x79f PUSH1 0x6
0x7a1 SLOAD
0x7a2 PUSH1 0x1
0x7a4 PUSH1 0xa0
0x7a6 PUSH1 0x2
0x7a8 EXP
0x7a9 SUB
0x7aa SWAP2
0x7ab DUP3
0x7ac AND
0x7ad SWAP3
0x7ae POP
0x7af PUSH4 0x79c65068
0x7b4 SWAP2
0x7b5 AND
0x7b6 PUSH1 0x64
0x7b8 DUP9
0x7b9 DUP11
0x7ba DUP2
0x7bb ISZERO
0x7bc PUSH2 0x0
0x7bf JUMPI
---
0x79c: V740 = 0xc
0x79e: V741 = S[0xc]
0x79f: V742 = 0x6
0x7a1: V743 = S[0x6]
0x7a2: V744 = 0x1
0x7a4: V745 = 0xa0
0x7a6: V746 = 0x2
0x7a8: V747 = EXP 0x2 0xa0
0x7a9: V748 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ac: V749 = AND 0xffffffffffffffffffffffffffffffffffffffff V741
0x7af: V750 = 0x79c65068
0x7b5: V751 = AND 0xffffffffffffffffffffffffffffffffffffffff V743
0x7b6: V752 = 0x64
0x7bb: V753 = ISZERO S7
0x7bc: V754 = 0x0
0x7bf: THROWI V753
---
Entry stack: [S25, S24, S23, S22, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, 0x0, 0x0, 0x0, S2, 0x79c65068, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, V749, 0x79c65068, V751, 0x64, S7, S8]
Exit stack: [S25, S24, S23, S22, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, 0x0, 0x0, 0x0, V749, 0x79c65068, V751, 0x64, S7, S8]

================================

Block 0x7c0
[0x7c0:0x7c9]
---
Predecessors: [0x79a]
Successors: [0x7ca]
---
0x7c0 DIV
0x7c1 PUSH1 0x1d
0x7c3 MUL
0x7c4 DUP2
0x7c5 ISZERO
0x7c6 PUSH2 0x0
0x7c9 JUMPI
---
0x7c0: V755 = DIV S0 S1
0x7c1: V756 = 0x1d
0x7c3: V757 = MUL 0x1d V755
0x7c5: V758 = ISZERO 0x64
0x7c6: V759 = 0x0
0x7c9: THROWI 0x0
---
Entry stack: [S28, S27, S26, S25, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S20, S19, S18, S17, S16, S15, S14, {0x149, 0x718, 0xe49}, S12, S11, S10, S9, 0x0, 0x0, 0x0, V749, 0x79c65068, V751, 0x64, S1, S0]
Stack pops: 3
Stack additions: [S2, V757]
Exit stack: [S28, S27, S26, S25, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S20, S19, S18, S17, S16, S15, S14, {0x149, 0x718, 0xe49}, S12, S11, S10, S9, 0x0, 0x0, 0x0, V749, 0x79c65068, V751, 0x64, V757]

================================

Block 0x7ca
[0x7ca:0x815]
---
Predecessors: [0x7c0]
Successors: [0x816]
---
0x7ca DIV
0x7cb PUSH1 0x40
0x7cd MLOAD
0x7ce DUP4
0x7cf PUSH4 0xffffffff
0x7d4 AND
0x7d5 PUSH1 0xe0
0x7d7 PUSH1 0x2
0x7d9 EXP
0x7da MUL
0x7db DUP2
0x7dc MSTORE
0x7dd PUSH1 0x4
0x7df ADD
0x7e0 DUP1
0x7e1 DUP4
0x7e2 PUSH1 0x1
0x7e4 PUSH1 0xa0
0x7e6 PUSH1 0x2
0x7e8 EXP
0x7e9 SUB
0x7ea AND
0x7eb PUSH1 0x1
0x7ed PUSH1 0xa0
0x7ef PUSH1 0x2
0x7f1 EXP
0x7f2 SUB
0x7f3 AND
0x7f4 DUP2
0x7f5 MSTORE
0x7f6 PUSH1 0x20
0x7f8 ADD
0x7f9 DUP3
0x7fa DUP2
0x7fb MSTORE
0x7fc PUSH1 0x20
0x7fe ADD
0x7ff SWAP3
0x800 POP
0x801 POP
0x802 POP
0x803 PUSH1 0x0
0x805 PUSH1 0x40
0x807 MLOAD
0x808 DUP1
0x809 DUP4
0x80a SUB
0x80b DUP2
0x80c PUSH1 0x0
0x80e DUP8
0x80f DUP1
0x810 EXTCODESIZE
0x811 ISZERO
0x812 PUSH2 0x0
0x815 JUMPI
---
0x7ca: V760 = DIV V757 0x64
0x7cb: V761 = 0x40
0x7cd: V762 = M[0x40]
0x7cf: V763 = 0xffffffff
0x7d4: V764 = AND 0xffffffff 0x79c65068
0x7d5: V765 = 0xe0
0x7d7: V766 = 0x2
0x7d9: V767 = EXP 0x2 0xe0
0x7da: V768 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x79c65068
0x7dc: M[V762] = 0x79c6506800000000000000000000000000000000000000000000000000000000
0x7dd: V769 = 0x4
0x7df: V770 = ADD 0x4 V762
0x7e2: V771 = 0x1
0x7e4: V772 = 0xa0
0x7e6: V773 = 0x2
0x7e8: V774 = EXP 0x2 0xa0
0x7e9: V775 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ea: V776 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x7eb: V777 = 0x1
0x7ed: V778 = 0xa0
0x7ef: V779 = 0x2
0x7f1: V780 = EXP 0x2 0xa0
0x7f2: V781 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f3: V782 = AND 0xffffffffffffffffffffffffffffffffffffffff V776
0x7f5: M[V770] = V782
0x7f6: V783 = 0x20
0x7f8: V784 = ADD 0x20 V770
0x7fb: M[V784] = V760
0x7fc: V785 = 0x20
0x7fe: V786 = ADD 0x20 V784
0x803: V787 = 0x0
0x805: V788 = 0x40
0x807: V789 = M[0x40]
0x80a: V790 = SUB V786 V789
0x80c: V791 = 0x0
0x810: V792 = EXTCODESIZE S4
0x811: V793 = ISZERO V792
0x812: V794 = 0x0
0x815: THROWI V793
---
Entry stack: [S27, S26, S25, S24, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S19, S18, S17, S16, S15, S14, S13, {0x149, 0x718, 0xe49}, S11, S10, S9, S8, 0x0, 0x0, 0x0, S4, 0x79c65068, S2, 0x64, V757]
Stack pops: 5
Stack additions: [S4, S3, V786, 0x0, V789, V790, V789, 0x0, S4]
Exit stack: [S27, S26, S25, S24, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S19, S18, S17, S16, S15, S14, S13, {0x149, 0x718, 0xe49}, S11, S10, S9, S8, 0x0, 0x0, 0x0, S4, 0x79c65068, V786, 0x0, V789, V790, V789, 0x0, S4]

================================

Block 0x816
[0x816:0x81f]
---
Predecessors: [0x7ca]
Successors: [0x820]
---
0x816 PUSH1 0x32
0x818 GAS
0x819 SUB
0x81a CALL
0x81b ISZERO
0x81c PUSH2 0x0
0x81f JUMPI
---
0x816: V795 = 0x32
0x818: V796 = GAS
0x819: V797 = SUB V796 0x32
0x81a: V798 = CALL V797 S0 0x0 V789 V790 V789 0x0
0x81b: V799 = ISZERO V798
0x81c: V800 = 0x0
0x81f: THROWI V799
---
Entry stack: [S31, S30, S29, S28, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S23, S22, S21, S20, S19, S18, S17, {0x149, 0x718, 0xe49}, S15, S14, S13, S12, 0x0, 0x0, 0x0, S8, 0x79c65068, V786, 0x0, V789, V790, V789, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [S31, S30, S29, S28, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S23, S22, S21, S20, S19, S18, S17, {0x149, 0x718, 0xe49}, S15, S14, S13, S12, 0x0, 0x0, 0x0, S8, 0x79c65068, V786]

================================

Block 0x820
[0x820:0x845]
---
Predecessors: [0x816]
Successors: [0x846]
---
0x820 POP
0x821 POP
0x822 PUSH1 0xc
0x824 SLOAD
0x825 PUSH1 0x7
0x827 SLOAD
0x828 PUSH1 0x1
0x82a PUSH1 0xa0
0x82c PUSH1 0x2
0x82e EXP
0x82f SUB
0x830 SWAP2
0x831 DUP3
0x832 AND
0x833 SWAP3
0x834 POP
0x835 PUSH4 0x79c65068
0x83a SWAP2
0x83b AND
0x83c PUSH1 0x64
0x83e DUP9
0x83f DUP11
0x840 DUP2
0x841 ISZERO
0x842 PUSH2 0x0
0x845 JUMPI
---
0x822: V801 = 0xc
0x824: V802 = S[0xc]
0x825: V803 = 0x7
0x827: V804 = S[0x7]
0x828: V805 = 0x1
0x82a: V806 = 0xa0
0x82c: V807 = 0x2
0x82e: V808 = EXP 0x2 0xa0
0x82f: V809 = SUB 0x10000000000000000000000000000000000000000 0x1
0x832: V810 = AND 0xffffffffffffffffffffffffffffffffffffffff V802
0x835: V811 = 0x79c65068
0x83b: V812 = AND 0xffffffffffffffffffffffffffffffffffffffff V804
0x83c: V813 = 0x64
0x841: V814 = ISZERO S7
0x842: V815 = 0x0
0x845: THROWI V814
---
Entry stack: [S25, S24, S23, S22, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, 0x0, 0x0, 0x0, S2, 0x79c65068, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, V810, 0x79c65068, V812, 0x64, S7, S8]
Exit stack: [S25, S24, S23, S22, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, 0x0, 0x0, 0x0, V810, 0x79c65068, V812, 0x64, S7, S8]

================================

Block 0x846
[0x846:0x84f]
---
Predecessors: [0x820]
Successors: [0x850]
---
0x846 DIV
0x847 PUSH1 0xe
0x849 MUL
0x84a DUP2
0x84b ISZERO
0x84c PUSH2 0x0
0x84f JUMPI
---
0x846: V816 = DIV S0 S1
0x847: V817 = 0xe
0x849: V818 = MUL 0xe V816
0x84b: V819 = ISZERO 0x64
0x84c: V820 = 0x0
0x84f: THROWI 0x0
---
Entry stack: [S28, S27, S26, S25, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S20, S19, S18, S17, S16, S15, S14, {0x149, 0x718, 0xe49}, S12, S11, S10, S9, 0x0, 0x0, 0x0, V810, 0x79c65068, V812, 0x64, S1, S0]
Stack pops: 3
Stack additions: [S2, V818]
Exit stack: [S28, S27, S26, S25, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S20, S19, S18, S17, S16, S15, S14, {0x149, 0x718, 0xe49}, S12, S11, S10, S9, 0x0, 0x0, 0x0, V810, 0x79c65068, V812, 0x64, V818]

================================

Block 0x850
[0x850:0x89b]
---
Predecessors: [0x846]
Successors: [0x89c]
---
0x850 DIV
0x851 PUSH1 0x40
0x853 MLOAD
0x854 DUP4
0x855 PUSH4 0xffffffff
0x85a AND
0x85b PUSH1 0xe0
0x85d PUSH1 0x2
0x85f EXP
0x860 MUL
0x861 DUP2
0x862 MSTORE
0x863 PUSH1 0x4
0x865 ADD
0x866 DUP1
0x867 DUP4
0x868 PUSH1 0x1
0x86a PUSH1 0xa0
0x86c PUSH1 0x2
0x86e EXP
0x86f SUB
0x870 AND
0x871 PUSH1 0x1
0x873 PUSH1 0xa0
0x875 PUSH1 0x2
0x877 EXP
0x878 SUB
0x879 AND
0x87a DUP2
0x87b MSTORE
0x87c PUSH1 0x20
0x87e ADD
0x87f DUP3
0x880 DUP2
0x881 MSTORE
0x882 PUSH1 0x20
0x884 ADD
0x885 SWAP3
0x886 POP
0x887 POP
0x888 POP
0x889 PUSH1 0x0
0x88b PUSH1 0x40
0x88d MLOAD
0x88e DUP1
0x88f DUP4
0x890 SUB
0x891 DUP2
0x892 PUSH1 0x0
0x894 DUP8
0x895 DUP1
0x896 EXTCODESIZE
0x897 ISZERO
0x898 PUSH2 0x0
0x89b JUMPI
---
0x850: V821 = DIV V818 0x64
0x851: V822 = 0x40
0x853: V823 = M[0x40]
0x855: V824 = 0xffffffff
0x85a: V825 = AND 0xffffffff 0x79c65068
0x85b: V826 = 0xe0
0x85d: V827 = 0x2
0x85f: V828 = EXP 0x2 0xe0
0x860: V829 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x79c65068
0x862: M[V823] = 0x79c6506800000000000000000000000000000000000000000000000000000000
0x863: V830 = 0x4
0x865: V831 = ADD 0x4 V823
0x868: V832 = 0x1
0x86a: V833 = 0xa0
0x86c: V834 = 0x2
0x86e: V835 = EXP 0x2 0xa0
0x86f: V836 = SUB 0x10000000000000000000000000000000000000000 0x1
0x870: V837 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x871: V838 = 0x1
0x873: V839 = 0xa0
0x875: V840 = 0x2
0x877: V841 = EXP 0x2 0xa0
0x878: V842 = SUB 0x10000000000000000000000000000000000000000 0x1
0x879: V843 = AND 0xffffffffffffffffffffffffffffffffffffffff V837
0x87b: M[V831] = V843
0x87c: V844 = 0x20
0x87e: V845 = ADD 0x20 V831
0x881: M[V845] = V821
0x882: V846 = 0x20
0x884: V847 = ADD 0x20 V845
0x889: V848 = 0x0
0x88b: V849 = 0x40
0x88d: V850 = M[0x40]
0x890: V851 = SUB V847 V850
0x892: V852 = 0x0
0x896: V853 = EXTCODESIZE S4
0x897: V854 = ISZERO V853
0x898: V855 = 0x0
0x89b: THROWI V854
---
Entry stack: [S27, S26, S25, S24, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S19, S18, S17, S16, S15, S14, S13, {0x149, 0x718, 0xe49}, S11, S10, S9, S8, 0x0, 0x0, 0x0, S4, 0x79c65068, S2, 0x64, V818]
Stack pops: 5
Stack additions: [S4, S3, V847, 0x0, V850, V851, V850, 0x0, S4]
Exit stack: [S27, S26, S25, S24, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S19, S18, S17, S16, S15, S14, S13, {0x149, 0x718, 0xe49}, S11, S10, S9, S8, 0x0, 0x0, 0x0, S4, 0x79c65068, V847, 0x0, V850, V851, V850, 0x0, S4]

================================

Block 0x89c
[0x89c:0x8a5]
---
Predecessors: [0x850]
Successors: [0x8a6]
---
0x89c PUSH1 0x32
0x89e GAS
0x89f SUB
0x8a0 CALL
0x8a1 ISZERO
0x8a2 PUSH2 0x0
0x8a5 JUMPI
---
0x89c: V856 = 0x32
0x89e: V857 = GAS
0x89f: V858 = SUB V857 0x32
0x8a0: V859 = CALL V858 S0 0x0 V850 V851 V850 0x0
0x8a1: V860 = ISZERO V859
0x8a2: V861 = 0x0
0x8a5: THROWI V860
---
Entry stack: [S31, S30, S29, S28, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S23, S22, S21, S20, S19, S18, S17, {0x149, 0x718, 0xe49}, S15, S14, S13, S12, 0x0, 0x0, 0x0, S8, 0x79c65068, V847, 0x0, V850, V851, V850, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [S31, S30, S29, S28, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S23, S22, S21, S20, S19, S18, S17, {0x149, 0x718, 0xe49}, S15, S14, S13, S12, 0x0, 0x0, 0x0, S8, 0x79c65068, V847]

================================

Block 0x8a6
[0x8a6:0x8ef]
---
Predecessors: [0x89c]
Successors: [0x8f0, 0x96c]
---
0x8a6 POP
0x8a7 POP
0x8a8 PUSH1 0x40
0x8aa DUP1
0x8ab MLOAD
0x8ac PUSH1 0x1
0x8ae PUSH1 0xa0
0x8b0 PUSH1 0x2
0x8b2 EXP
0x8b3 SUB
0x8b4 DUP11
0x8b5 AND
0x8b6 DUP2
0x8b7 MSTORE
0x8b8 PUSH1 0x20
0x8ba DUP2
0x8bb ADD
0x8bc DUP10
0x8bd SWAP1
0x8be MSTORE
0x8bf PUSH1 0x1
0x8c1 DUP2
0x8c2 DUP4
0x8c3 ADD
0x8c4 MSTORE
0x8c5 SWAP1
0x8c6 MLOAD
0x8c7 PUSH1 0x0
0x8c9 DUP1
0x8ca MLOAD
0x8cb PUSH1 0x20
0x8cd PUSH2 0x127e
0x8d0 DUP4
0x8d1 CODECOPY
0x8d2 DUP2
0x8d3 MLOAD
0x8d4 SWAP2
0x8d5 MSTORE
0x8d6 SWAP3
0x8d7 POP
0x8d8 SWAP1
0x8d9 DUP2
0x8da SWAP1
0x8db SUB
0x8dc PUSH1 0x60
0x8de ADD
0x8df SWAP1
0x8e0 LOG1
0x8e1 POP
0x8e2 DUP3
0x8e3 DUP5
0x8e4 MUL
0x8e5 DUP6
0x8e6 SUB
0x8e7 PUSH1 0x0
0x8e9 DUP2
0x8ea GT
0x8eb ISZERO
0x8ec PUSH2 0x96c
0x8ef JUMPI
---
0x8a8: V862 = 0x40
0x8ab: V863 = M[0x40]
0x8ac: V864 = 0x1
0x8ae: V865 = 0xa0
0x8b0: V866 = 0x2
0x8b2: V867 = EXP 0x2 0xa0
0x8b3: V868 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b5: V869 = AND S9 0xffffffffffffffffffffffffffffffffffffffff
0x8b7: M[V863] = V869
0x8b8: V870 = 0x20
0x8bb: V871 = ADD V863 0x20
0x8be: M[V871] = S8
0x8bf: V872 = 0x1
0x8c3: V873 = ADD 0x40 V863
0x8c4: M[V873] = 0x1
0x8c6: V874 = M[0x40]
0x8c7: V875 = 0x0
0x8ca: V876 = M[0x0]
0x8cb: V877 = 0x20
0x8cd: V878 = 0x127e
0x8d1: CODECOPY 0x0 0x127e 0x20
0x8d3: V879 = M[0x0]
0x8d5: M[0x0] = V876
0x8db: V880 = SUB V863 V874
0x8dc: V881 = 0x60
0x8de: V882 = ADD 0x60 V880
0x8e0: LOG V874 V882 V879
0x8e4: V883 = MUL S7 S6
0x8e6: V884 = SUB S8 V883
0x8e7: V885 = 0x0
0x8ea: V886 = GT V884 0x0
0x8eb: V887 = ISZERO V886
0x8ec: V888 = 0x96c
0x8ef: JUMPI 0x96c V887
---
Entry stack: [S25, S24, S23, S22, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, 0x0, 0x0, 0x0, S2, 0x79c65068, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, V884]
Exit stack: [S25, S24, S23, S22, V509, V513, 0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, 0x0, 0x0, V884]

================================

Block 0x8f0
[0x8f0:0x934]
---
Predecessors: [0x8a6]
Successors: [0x935, 0x96c]
---
0x8f0 PUSH1 0x8
0x8f2 DUP1
0x8f3 SLOAD
0x8f4 DUP3
0x8f5 SWAP1
0x8f6 SUB
0x8f7 SWAP1
0x8f8 SSTORE
0x8f9 PUSH1 0x1
0x8fb PUSH1 0xa0
0x8fd PUSH1 0x2
0x8ff EXP
0x900 SUB
0x901 DUP8
0x902 AND
0x903 PUSH1 0x0
0x905 DUP2
0x906 DUP2
0x907 MSTORE
0x908 PUSH1 0xd
0x90a PUSH1 0x20
0x90c MSTORE
0x90d PUSH1 0x40
0x90f DUP1
0x910 DUP3
0x911 SHA3
0x912 DUP1
0x913 SLOAD
0x914 DUP6
0x915 SWAP1
0x916 SUB
0x917 SWAP1
0x918 SSTORE
0x919 MLOAD
0x91a DUP4
0x91b ISZERO
0x91c PUSH2 0x8fc
0x91f MUL
0x920 SWAP2
0x921 DUP5
0x922 SWAP2
0x923 SWAP1
0x924 DUP2
0x925 DUP2
0x926 DUP2
0x927 DUP6
0x928 DUP9
0x929 DUP9
0x92a CALL
0x92b SWAP4
0x92c POP
0x92d POP
0x92e POP
0x92f POP
0x930 ISZERO
0x931 PUSH2 0x96c
0x934 JUMPI
---
0x8f0: V889 = 0x8
0x8f3: V890 = S[0x8]
0x8f6: V891 = SUB V890 V884
0x8f8: S[0x8] = V891
0x8f9: V892 = 0x1
0x8fb: V893 = 0xa0
0x8fd: V894 = 0x2
0x8ff: V895 = EXP 0x2 0xa0
0x900: V896 = SUB 0x10000000000000000000000000000000000000000 0x1
0x902: V897 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x903: V898 = 0x0
0x907: M[0x0] = V897
0x908: V899 = 0xd
0x90a: V900 = 0x20
0x90c: M[0x20] = 0xd
0x90d: V901 = 0x40
0x911: V902 = SHA3 0x0 0x40
0x913: V903 = S[V902]
0x916: V904 = SUB V903 V884
0x918: S[V902] = V904
0x919: V905 = M[0x40]
0x91b: V906 = ISZERO V884
0x91c: V907 = 0x8fc
0x91f: V908 = MUL 0x8fc V906
0x92a: V909 = CALL V908 V897 V884 V905 0x0 V905 0x0
0x930: V910 = ISZERO V909
0x931: V911 = 0x96c
0x934: JUMPI 0x96c V910
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, 0x0, 0x0, V884]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, 0x0, 0x0, V884]

================================

Block 0x935
[0x935:0x96b]
---
Predecessors: [0x8f0]
Successors: [0x96c]
---
0x935 PUSH1 0x40
0x937 DUP1
0x938 MLOAD
0x939 PUSH1 0x1
0x93b PUSH1 0xa0
0x93d PUSH1 0x2
0x93f EXP
0x940 SUB
0x941 DUP10
0x942 AND
0x943 DUP2
0x944 MSTORE
0x945 PUSH1 0x20
0x947 DUP2
0x948 ADD
0x949 DUP4
0x94a SWAP1
0x94b MSTORE
0x94c PUSH1 0x0
0x94e DUP2
0x94f DUP4
0x950 ADD
0x951 MSTORE
0x952 SWAP1
0x953 MLOAD
0x954 PUSH1 0x0
0x956 DUP1
0x957 MLOAD
0x958 PUSH1 0x20
0x95a PUSH2 0x127e
0x95d DUP4
0x95e CODECOPY
0x95f DUP2
0x960 MLOAD
0x961 SWAP2
0x962 MSTORE
0x963 SWAP2
0x964 DUP2
0x965 SWAP1
0x966 SUB
0x967 PUSH1 0x60
0x969 ADD
0x96a SWAP1
0x96b LOG1
---
0x935: V912 = 0x40
0x938: V913 = M[0x40]
0x939: V914 = 0x1
0x93b: V915 = 0xa0
0x93d: V916 = 0x2
0x93f: V917 = EXP 0x2 0xa0
0x940: V918 = SUB 0x10000000000000000000000000000000000000000 0x1
0x942: V919 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x944: M[V913] = V919
0x945: V920 = 0x20
0x948: V921 = ADD V913 0x20
0x94b: M[V921] = V884
0x94c: V922 = 0x0
0x950: V923 = ADD 0x40 V913
0x951: M[V923] = 0x0
0x953: V924 = M[0x40]
0x954: V925 = 0x0
0x957: V926 = M[0x0]
0x958: V927 = 0x20
0x95a: V928 = 0x127e
0x95e: CODECOPY 0x0 0x127e 0x20
0x960: V929 = M[0x0]
0x962: M[0x0] = V926
0x966: V930 = SUB V913 V924
0x967: V931 = 0x60
0x969: V932 = ADD 0x60 V930
0x96b: LOG V924 V932 V929
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, 0x0, 0x0, V884]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, 0x0, 0x0, V884]

================================

Block 0x96c
[0x96c:0x96c]
---
Predecessors: [0x718, 0x8a6, 0x8f0, 0x935]
Successors: [0x96d]
---
0x96c JUMPDEST
---
0x96c: JUMPDEST 
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x96d
[0x96d:0x96d]
---
Predecessors: [0x96c]
Successors: [0x96e]
---
0x96d JUMPDEST
---
0x96d: JUMPDEST 
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x96e
[0x96e:0x976]
---
Predecessors: [0x96d]
Successors: [0x149, 0x718, 0xe49]
---
0x96e JUMPDEST
0x96f POP
0x970 POP
0x971 POP
0x972 POP
0x973 POP
0x974 POP
0x975 POP
0x976 JUMP
---
0x96e: JUMPDEST 
0x976: JUMP {0x149, 0x718, 0xe49}
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S14, S13, S12, S11, S10, S9, S8]

================================

Block 0x977
[0x977:0x985]
---
Predecessors: [0x154]
Successors: [0x986, 0xb74]
---
0x977 JUMPDEST
0x978 PUSH1 0x0
0x97a PUSH1 0x0
0x97c PUSH1 0xa
0x97e SLOAD
0x97f TIMESTAMP
0x980 LT
0x981 ISZERO
0x982 PUSH2 0xb74
0x985 JUMPI
---
0x977: JUMPDEST 
0x978: V933 = 0x0
0x97a: V934 = 0x0
0x97c: V935 = 0xa
0x97e: V936 = S[0xa]
0x97f: V937 = TIMESTAMP
0x980: V938 = LT V937 V936
0x981: V939 = ISZERO V938
0x982: V940 = 0xb74
0x985: JUMPI 0xb74 V939
---
Entry stack: [V12, 0x14c, V118, V120]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x14c, V118, V120, 0x0, 0x0]

================================

Block 0x986
[0x986:0x98b]
---
Predecessors: [0x977]
Successors: [0x98c]
---
0x986 POP
0x987 PUSH1 0x0
0x989 SWAP1
0x98a POP
0x98b DUP1
---
0x987: V941 = 0x0
---
Entry stack: [V12, 0x14c, V118, V120, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x14c, V118, V120, 0x0, 0x0]

================================

Block 0x98c
[0x98c:0x996]
---
Predecessors: [0x986, 0x9e5]
Successors: [0x997, 0x9ed]
---
0x98c JUMPDEST
0x98d PUSH1 0x10
0x98f SLOAD
0x990 DUP2
0x991 LT
0x992 ISZERO
0x993 PUSH2 0x9ed
0x996 JUMPI
---
0x98c: JUMPDEST 
0x98d: V942 = 0x10
0x98f: V943 = S[0x10]
0x991: V944 = LT S0 V943
0x992: V945 = ISZERO V944
0x993: V946 = 0x9ed
0x996: JUMPI 0x9ed V945
---
Entry stack: [V12, 0x14c, V118, V120, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x14c, V118, V120, 0x0, S0]

================================

Block 0x997
[0x997:0x9ac]
---
Predecessors: [0x98c]
Successors: [0x9ad]
---
0x997 CALLER
0x998 PUSH1 0x1
0x99a PUSH1 0xa0
0x99c PUSH1 0x2
0x99e EXP
0x99f SUB
0x9a0 AND
0x9a1 PUSH1 0x10
0x9a3 DUP3
0x9a4 DUP2
0x9a5 SLOAD
0x9a6 DUP2
0x9a7 LT
0x9a8 ISZERO
0x9a9 PUSH2 0x0
0x9ac JUMPI
---
0x997: V947 = CALLER
0x998: V948 = 0x1
0x99a: V949 = 0xa0
0x99c: V950 = 0x2
0x99e: V951 = EXP 0x2 0xa0
0x99f: V952 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a0: V953 = AND 0xffffffffffffffffffffffffffffffffffffffff V947
0x9a1: V954 = 0x10
0x9a5: V955 = S[0x10]
0x9a7: V956 = LT S0 V955
0x9a8: V957 = ISZERO V956
0x9a9: V958 = 0x0
0x9ac: THROWI V957
---
Entry stack: [V12, 0x14c, V118, V120, 0x0, S0]
Stack pops: 1
Stack additions: [S0, V953, 0x10, S0]
Exit stack: [V12, 0x14c, V118, V120, 0x0, S0, V953, 0x10, S0]

================================

Block 0x9ad
[0x9ad:0x9b9]
---
Predecessors: [0x997]
Successors: [0x9ba]
---
0x9ad SWAP1
0x9ae PUSH1 0x0
0x9b0 MSTORE
0x9b1 PUSH1 0x20
0x9b3 PUSH1 0x0
0x9b5 SHA3
0x9b6 SWAP1
0x9b7 ADD
0x9b8 PUSH1 0x0
---
0x9ae: V959 = 0x0
0x9b0: M[0x0] = 0x10
0x9b1: V960 = 0x20
0x9b3: V961 = 0x0
0x9b5: V962 = SHA3 0x0 0x20
0x9b7: V963 = ADD S0 V962
0x9b8: V964 = 0x0
---
Entry stack: [V12, 0x14c, V118, V120, 0x0, S3, V953, 0x10, S0]
Stack pops: 2
Stack additions: [V963, 0x0]
Exit stack: [V12, 0x14c, V118, V120, 0x0, S3, V953, V963, 0x0]

================================

Block 0x9ba
[0x9ba:0x9db]
---
Predecessors: [0x9ad]
Successors: [0x9dc, 0x9e4]
---
0x9ba JUMPDEST
0x9bb SWAP1
0x9bc SLOAD
0x9bd SWAP1
0x9be PUSH2 0x100
0x9c1 EXP
0x9c2 SWAP1
0x9c3 DIV
0x9c4 PUSH1 0x1
0x9c6 PUSH1 0xa0
0x9c8 PUSH1 0x2
0x9ca EXP
0x9cb SUB
0x9cc AND
0x9cd PUSH1 0x1
0x9cf PUSH1 0xa0
0x9d1 PUSH1 0x2
0x9d3 EXP
0x9d4 SUB
0x9d5 AND
0x9d6 EQ
0x9d7 ISZERO
0x9d8 PUSH2 0x9e4
0x9db JUMPI
---
0x9ba: JUMPDEST 
0x9bc: V965 = S[V963]
0x9be: V966 = 0x100
0x9c1: V967 = EXP 0x100 0x0
0x9c3: V968 = DIV V965 0x1
0x9c4: V969 = 0x1
0x9c6: V970 = 0xa0
0x9c8: V971 = 0x2
0x9ca: V972 = EXP 0x2 0xa0
0x9cb: V973 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9cc: V974 = AND 0xffffffffffffffffffffffffffffffffffffffff V968
0x9cd: V975 = 0x1
0x9cf: V976 = 0xa0
0x9d1: V977 = 0x2
0x9d3: V978 = EXP 0x2 0xa0
0x9d4: V979 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d5: V980 = AND 0xffffffffffffffffffffffffffffffffffffffff V974
0x9d6: V981 = EQ V980 V953
0x9d7: V982 = ISZERO V981
0x9d8: V983 = 0x9e4
0x9db: JUMPI 0x9e4 V982
---
Entry stack: [V12, 0x14c, V118, V120, 0x0, S3, V953, V963, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x14c, V118, V120, 0x0, S3]

================================

Block 0x9dc
[0x9dc:0x9e3]
---
Predecessors: [0x9ba]
Successors: [0x9ed]
---
0x9dc PUSH1 0x1
0x9de SWAP2
0x9df POP
0x9e0 PUSH2 0x9ed
0x9e3 JUMP
---
0x9dc: V984 = 0x1
0x9e0: V985 = 0x9ed
0x9e3: JUMP 0x9ed
---
Entry stack: [V12, 0x14c, V118, V120, 0x0, S0]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V12, 0x14c, V118, V120, 0x1, S0]

================================

Block 0x9e4
[0x9e4:0x9e4]
---
Predecessors: [0x9ba]
Successors: [0x9e5]
---
0x9e4 JUMPDEST
---
0x9e4: JUMPDEST 
---
Entry stack: [V12, 0x14c, V118, V120, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c, V118, V120, 0x0, S0]

================================

Block 0x9e5
[0x9e5:0x9ec]
---
Predecessors: [0x9e4]
Successors: [0x98c]
---
0x9e5 JUMPDEST
0x9e6 PUSH1 0x1
0x9e8 ADD
0x9e9 PUSH2 0x98c
0x9ec JUMP
---
0x9e5: JUMPDEST 
0x9e6: V986 = 0x1
0x9e8: V987 = ADD 0x1 S0
0x9e9: V988 = 0x98c
0x9ec: JUMP 0x98c
---
Entry stack: [V12, 0x14c, V118, V120, 0x0, S0]
Stack pops: 1
Stack additions: [V987]
Exit stack: [V12, 0x14c, V118, V120, 0x0, V987]

================================

Block 0x9ed
[0x9ed:0x9f4]
---
Predecessors: [0x98c, 0x9dc]
Successors: [0x9f5, 0x9f9]
---
0x9ed JUMPDEST
0x9ee DUP2
0x9ef ISZERO
0x9f0 ISZERO
0x9f1 PUSH2 0x9f9
0x9f4 JUMPI
---
0x9ed: JUMPDEST 
0x9ef: V989 = ISZERO {0x0, 0x1}
0x9f0: V990 = ISZERO V989
0x9f1: V991 = 0x9f9
0x9f4: JUMPI 0x9f9 V990
---
Entry stack: [V12, 0x14c, V118, V120, {0x0, 0x1}, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x14c, V118, V120, {0x0, 0x1}, S0]

================================

Block 0x9f5
[0x9f5:0x9f8]
---
Predecessors: [0x9ed]
Successors: []
---
0x9f5 PUSH2 0x0
0x9f8 JUMP
---
0x9f5: V992 = 0x0
0x9f8: THROW 
---
Entry stack: [V12, 0x14c, V118, V120, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c, V118, V120, {0x0, 0x1}, S0]

================================

Block 0x9f9
[0x9f9:0xa18]
---
Predecessors: [0x9ed]
Successors: [0xa19, 0xb18]
---
0x9f9 JUMPDEST
0x9fa PUSH1 0x1
0x9fc PUSH1 0xa0
0x9fe PUSH1 0x2
0xa00 EXP
0xa01 SUB
0xa02 DUP5
0xa03 AND
0xa04 PUSH1 0x0
0xa06 SWAP1
0xa07 DUP2
0xa08 MSTORE
0xa09 PUSH1 0xf
0xa0b PUSH1 0x20
0xa0d MSTORE
0xa0e PUSH1 0x40
0xa10 SWAP1
0xa11 SHA3
0xa12 SLOAD
0xa13 ISZERO
0xa14 ISZERO
0xa15 PUSH2 0xb18
0xa18 JUMPI
---
0x9f9: JUMPDEST 
0x9fa: V993 = 0x1
0x9fc: V994 = 0xa0
0x9fe: V995 = 0x2
0xa00: V996 = EXP 0x2 0xa0
0xa01: V997 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa03: V998 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0xa04: V999 = 0x0
0xa08: M[0x0] = V998
0xa09: V1000 = 0xf
0xa0b: V1001 = 0x20
0xa0d: M[0x20] = 0xf
0xa0e: V1002 = 0x40
0xa11: V1003 = SHA3 0x0 0x40
0xa12: V1004 = S[V1003]
0xa13: V1005 = ISZERO V1004
0xa14: V1006 = ISZERO V1005
0xa15: V1007 = 0xb18
0xa18: JUMPI 0xb18 V1006
---
Entry stack: [V12, 0x14c, V118, V120, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x14c, V118, V120, {0x0, 0x1}, S0]

================================

Block 0xa19
[0xa19:0xa2f]
---
Predecessors: [0x9f9]
Successors: [0xa30, 0xa5a]
---
0xa19 PUSH1 0x4
0xa1b DUP1
0xa1c SLOAD
0xa1d DUP1
0xa1e PUSH1 0x1
0xa20 ADD
0xa21 DUP3
0xa22 DUP2
0xa23 DUP2
0xa24 SLOAD
0xa25 DUP2
0xa26 DUP4
0xa27 SSTORE
0xa28 DUP2
0xa29 DUP2
0xa2a ISZERO
0xa2b GT
0xa2c PUSH2 0xa5a
0xa2f JUMPI
---
0xa19: V1008 = 0x4
0xa1c: V1009 = S[0x4]
0xa1e: V1010 = 0x1
0xa20: V1011 = ADD 0x1 V1009
0xa24: V1012 = S[0x4]
0xa27: S[0x4] = V1011
0xa2a: V1013 = ISZERO V1012
0xa2b: V1014 = GT V1013 V1011
0xa2c: V1015 = 0xa5a
0xa2f: JUMPI 0xa5a V1014
---
Entry stack: [V12, 0x14c, V118, V120, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: [0x4, V1009, V1011, 0x4, V1011, V1012]
Exit stack: [V12, 0x14c, V118, V120, {0x0, 0x1}, S0, 0x4, V1009, V1011, 0x4, V1011, V1012]

================================

Block 0xa30
[0xa30:0xa41]
---
Predecessors: [0xa19]
Successors: [0xa42]
---
0xa30 PUSH1 0x0
0xa32 DUP4
0xa33 DUP2
0xa34 MSTORE
0xa35 PUSH1 0x20
0xa37 SWAP1
0xa38 SHA3
0xa39 PUSH2 0xa5a
0xa3c SWAP2
0xa3d DUP2
0xa3e ADD
0xa3f SWAP1
0xa40 DUP4
0xa41 ADD
---
0xa30: V1016 = 0x0
0xa34: M[0x0] = 0x4
0xa35: V1017 = 0x20
0xa38: V1018 = SHA3 0x0 0x20
0xa39: V1019 = 0xa5a
0xa3e: V1020 = ADD V1018 V1012
0xa41: V1021 = ADD V1011 V1018
---
Entry stack: [V12, 0x14c, V118, V120, {0x0, 0x1}, S6, 0x4, V1009, V1011, 0x4, V1011, V1012]
Stack pops: 3
Stack additions: [S2, S1, 0xa5a, V1020, V1021]
Exit stack: [V12, 0x14c, V118, V120, {0x0, 0x1}, S6, 0x4, V1009, V1011, 0x4, V1011, 0xa5a, V1020, V1021]

================================

Block 0xa42
[0xa42:0xa4a]
---
Predecessors: [0xa30, 0xa4b, 0xabe, 0xf11]
Successors: [0xa4b, 0xa56]
---
0xa42 JUMPDEST
0xa43 DUP1
0xa44 DUP3
0xa45 GT
0xa46 ISZERO
0xa47 PUSH2 0xa56
0xa4a JUMPI
---
0xa42: JUMPDEST 
0xa45: V1022 = GT S1 S0
0xa46: V1023 = ISZERO V1022
0xa47: V1024 = 0xa56
0xa4a: JUMPI 0xa56 V1023
---
Entry stack: [V12, S12, S11, S10, S9, S8, {0x4, 0x5, 0x10}, S6, S5, {0x4, 0x5, 0x10}, S3, {0xa5a, 0xacd, 0xf20}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S12, S11, S10, S9, S8, {0x4, 0x5, 0x10}, S6, S5, {0x4, 0x5, 0x10}, S3, {0xa5a, 0xacd, 0xf20}, S1, S0]

================================

Block 0xa4b
[0xa4b:0xa55]
---
Predecessors: [0xa42]
Successors: [0xa42]
---
0xa4b PUSH1 0x0
0xa4d DUP2
0xa4e SSTORE
0xa4f PUSH1 0x1
0xa51 ADD
0xa52 PUSH2 0xa42
0xa55 JUMP
---
0xa4b: V1025 = 0x0
0xa4e: S[S0] = 0x0
0xa4f: V1026 = 0x1
0xa51: V1027 = ADD 0x1 S0
0xa52: V1028 = 0xa42
0xa55: JUMP 0xa42
---
Entry stack: [V12, S12, S11, S10, S9, S8, {0x4, 0x5, 0x10}, S6, S5, {0x4, 0x5, 0x10}, S3, {0xa5a, 0xacd, 0xf20}, S1, S0]
Stack pops: 1
Stack additions: [V1027]
Exit stack: [V12, S12, S11, S10, S9, S8, {0x4, 0x5, 0x10}, S6, S5, {0x4, 0x5, 0x10}, S3, {0xa5a, 0xacd, 0xf20}, S1, V1027]

================================

Block 0xa56
[0xa56:0xa59]
---
Predecessors: [0xa42, 0xab5, 0xf08]
Successors: [0xa5a, 0xacd, 0xf20]
---
0xa56 JUMPDEST
0xa57 POP
0xa58 SWAP1
0xa59 JUMP
---
0xa56: JUMPDEST 
0xa59: JUMP {0xa5a, 0xacd, 0xf20}
---
Entry stack: [V12, S12, S11, S10, S9, S8, {0x4, 0x5, 0x10}, S6, S5, {0x4, 0x5, 0x10}, S3, {0xa5a, 0xacd, 0xf20}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, S12, S11, S10, S9, S8, {0x4, 0x5, 0x10}, S6, S5, {0x4, 0x5, 0x10}, S3, S1]

================================

Block 0xa5a
[0xa5a:0xa5a]
---
Predecessors: [0xa19, 0xa56]
Successors: [0xa5b]
---
0xa5a JUMPDEST
---
0xa5a: JUMPDEST 
---
Entry stack: [V12, S10, S9, S8, S7, S6, {0x4, 0x5, 0x10}, S4, S3, {0x4, 0x5, 0x10}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, {0x4, 0x5, 0x10}, S4, S3, {0x4, 0x5, 0x10}, S1, S0]

================================

Block 0xa5b
[0xa5b:0xa6b]
---
Predecessors: [0xa5a]
Successors: [0xa6c]
---
0xa5b JUMPDEST
0xa5c POP
0xa5d POP
0xa5e POP
0xa5f SWAP2
0xa60 PUSH1 0x0
0xa62 MSTORE
0xa63 PUSH1 0x20
0xa65 PUSH1 0x0
0xa67 SHA3
0xa68 SWAP1
0xa69 ADD
0xa6a PUSH1 0x0
---
0xa5b: JUMPDEST 
0xa60: V1029 = 0x0
0xa62: M[0x0] = {0x4, 0x5, 0x10}
0xa63: V1030 = 0x20
0xa65: V1031 = 0x0
0xa67: V1032 = SHA3 0x0 0x20
0xa69: V1033 = ADD S4 V1032
0xa6a: V1034 = 0x0
---
Entry stack: [V12, S10, S9, S8, S7, S6, {0x4, 0x5, 0x10}, S4, S3, {0x4, 0x5, 0x10}, S1, S0]
Stack pops: 6
Stack additions: [S3, V1033, 0x0]
Exit stack: [V12, S10, S9, S8, S7, S6, S3, V1033, 0x0]

================================

Block 0xa6c
[0xa6c:0xaa2]
---
Predecessors: [0xa5b]
Successors: [0xaa3, 0xacd]
---
0xa6c JUMPDEST
0xa6d DUP2
0xa6e SLOAD
0xa6f PUSH1 0x1
0xa71 PUSH1 0xa0
0xa73 PUSH1 0x2
0xa75 EXP
0xa76 SUB
0xa77 DUP1
0xa78 DUP10
0xa79 AND
0xa7a PUSH2 0x100
0xa7d SWAP4
0xa7e SWAP1
0xa7f SWAP4
0xa80 EXP
0xa81 SWAP3
0xa82 DUP4
0xa83 MUL
0xa84 SWAP3
0xa85 MUL
0xa86 NOT
0xa87 AND
0xa88 OR
0xa89 SWAP1
0xa8a SSTORE
0xa8b POP
0xa8c PUSH1 0x5
0xa8e DUP1
0xa8f SLOAD
0xa90 PUSH1 0x1
0xa92 DUP2
0xa93 ADD
0xa94 DUP1
0xa95 DUP4
0xa96 SSTORE
0xa97 DUP3
0xa98 DUP2
0xa99 DUP4
0xa9a DUP1
0xa9b ISZERO
0xa9c DUP3
0xa9d SWAP1
0xa9e GT
0xa9f PUSH2 0xacd
0xaa2 JUMPI
---
0xa6c: JUMPDEST 
0xa6e: V1035 = S[V1033]
0xa6f: V1036 = 0x1
0xa71: V1037 = 0xa0
0xa73: V1038 = 0x2
0xa75: V1039 = EXP 0x2 0xa0
0xa76: V1040 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa79: V1041 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0xa7a: V1042 = 0x100
0xa80: V1043 = EXP 0x100 0x0
0xa83: V1044 = MUL 0x1 V1041
0xa85: V1045 = MUL 0x1 0xffffffffffffffffffffffffffffffffffffffff
0xa86: V1046 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa87: V1047 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1035
0xa88: V1048 = OR V1047 V1044
0xa8a: S[V1033] = V1048
0xa8c: V1049 = 0x5
0xa8f: V1050 = S[0x5]
0xa90: V1051 = 0x1
0xa93: V1052 = ADD V1050 0x1
0xa96: S[0x5] = V1052
0xa9b: V1053 = ISZERO V1050
0xa9e: V1054 = GT V1053 V1052
0xa9f: V1055 = 0xacd
0xaa2: JUMPI 0xacd V1054
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, V1033, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, 0x5, V1050, V1052, 0x5, V1052, V1050]
Exit stack: [V12, S7, S6, S5, S4, S3, 0x5, V1050, V1052, 0x5, V1052, V1050]

================================

Block 0xaa3
[0xaa3:0xab4]
---
Predecessors: [0xa6c]
Successors: [0xab5]
---
0xaa3 PUSH1 0x0
0xaa5 DUP4
0xaa6 DUP2
0xaa7 MSTORE
0xaa8 PUSH1 0x20
0xaaa SWAP1
0xaab SHA3
0xaac PUSH2 0xacd
0xaaf SWAP2
0xab0 DUP2
0xab1 ADD
0xab2 SWAP1
0xab3 DUP4
0xab4 ADD
---
0xaa3: V1056 = 0x0
0xaa7: M[0x0] = 0x5
0xaa8: V1057 = 0x20
0xaab: V1058 = SHA3 0x0 0x20
0xaac: V1059 = 0xacd
0xab1: V1060 = ADD V1058 V1050
0xab4: V1061 = ADD V1052 V1058
---
Entry stack: [V12, S10, S9, S8, S7, S6, 0x5, V1050, V1052, 0x5, V1052, V1050]
Stack pops: 3
Stack additions: [S2, S1, 0xacd, V1060, V1061]
Exit stack: [V12, S10, S9, S8, S7, S6, 0x5, V1050, V1052, 0x5, V1052, 0xacd, V1060, V1061]

================================

Block 0xab5
[0xab5:0xabd]
---
Predecessors: [0xaa3]
Successors: [0xa56, 0xabe]
---
0xab5 JUMPDEST
0xab6 DUP1
0xab7 DUP3
0xab8 GT
0xab9 ISZERO
0xaba PUSH2 0xa56
0xabd JUMPI
---
0xab5: JUMPDEST 
0xab8: V1062 = GT V1060 V1061
0xab9: V1063 = ISZERO V1062
0xaba: V1064 = 0xa56
0xabd: JUMPI 0xa56 V1063
---
Entry stack: [V12, S12, S11, S10, S9, S8, 0x5, V1050, V1052, 0x5, V1052, 0xacd, V1060, V1061]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S12, S11, S10, S9, S8, 0x5, V1050, V1052, 0x5, V1052, 0xacd, V1060, V1061]

================================

Block 0xabe
[0xabe:0xac8]
---
Predecessors: [0xab5]
Successors: [0xa42]
---
0xabe PUSH1 0x0
0xac0 DUP2
0xac1 SSTORE
0xac2 PUSH1 0x1
0xac4 ADD
0xac5 PUSH2 0xa42
0xac8 JUMP
---
0xabe: V1065 = 0x0
0xac1: S[V1061] = 0x0
0xac2: V1066 = 0x1
0xac4: V1067 = ADD 0x1 V1061
0xac5: V1068 = 0xa42
0xac8: JUMP 0xa42
---
Entry stack: [V12, S12, S11, S10, S9, S8, 0x5, V1050, V1052, 0x5, V1052, 0xacd, V1060, V1061]
Stack pops: 1
Stack additions: [V1067]
Exit stack: [V12, S12, S11, S10, S9, S8, 0x5, V1050, V1052, 0x5, V1052, 0xacd, V1060, V1067]

================================

Block 0xac9
[0xac9:0xacc]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0xac9 JUMPDEST
0xaca POP
0xacb SWAP1
0xacc JUMP
---
0xac9: JUMPDEST 
0xacc: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xacd
[0xacd:0xacd]
---
Predecessors: [0xa56, 0xa6c]
Successors: [0xace]
---
0xacd JUMPDEST
---
0xacd: JUMPDEST 
---
Entry stack: [V12, S10, S9, S8, S7, S6, {0x4, 0x5, 0x10}, S4, S3, {0x4, 0x5, 0x10}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, {0x4, 0x5, 0x10}, S4, S3, {0x4, 0x5, 0x10}, S1, S0]

================================

Block 0xace
[0xace:0xade]
---
Predecessors: [0xacd]
Successors: [0xadf]
---
0xace JUMPDEST
0xacf POP
0xad0 POP
0xad1 POP
0xad2 SWAP2
0xad3 PUSH1 0x0
0xad5 MSTORE
0xad6 PUSH1 0x20
0xad8 PUSH1 0x0
0xada SHA3
0xadb SWAP1
0xadc ADD
0xadd PUSH1 0x0
---
0xace: JUMPDEST 
0xad3: V1069 = 0x0
0xad5: M[0x0] = {0x4, 0x5, 0x10}
0xad6: V1070 = 0x20
0xad8: V1071 = 0x0
0xada: V1072 = SHA3 0x0 0x20
0xadc: V1073 = ADD S4 V1072
0xadd: V1074 = 0x0
---
Entry stack: [V12, S10, S9, S8, S7, S6, {0x4, 0x5, 0x10}, S4, S3, {0x4, 0x5, 0x10}, S1, S0]
Stack pops: 6
Stack additions: [S3, V1073, 0x0]
Exit stack: [V12, S10, S9, S8, S7, S6, S3, V1073, 0x0]

================================

Block 0xadf
[0xadf:0xb17]
---
Predecessors: [0xace]
Successors: [0xb74]
---
0xadf JUMPDEST
0xae0 POP
0xae1 DUP5
0xae2 SWAP1
0xae3 SSTORE
0xae4 POP
0xae5 PUSH1 0x5
0xae7 SLOAD
0xae8 PUSH1 0x1
0xaea PUSH1 0xa0
0xaec PUSH1 0x2
0xaee EXP
0xaef SUB
0xaf0 DUP6
0xaf1 AND
0xaf2 PUSH1 0x0
0xaf4 SWAP1
0xaf5 DUP2
0xaf6 MSTORE
0xaf7 PUSH1 0x12
0xaf9 PUSH1 0x20
0xafb SWAP1
0xafc DUP2
0xafd MSTORE
0xafe PUSH1 0x40
0xb00 DUP1
0xb01 DUP4
0xb02 SHA3
0xb03 PUSH1 0x0
0xb05 NOT
0xb06 SWAP1
0xb07 SWAP5
0xb08 ADD
0xb09 SWAP1
0xb0a SWAP4
0xb0b SSTORE
0xb0c PUSH1 0xf
0xb0e SWAP1
0xb0f MSTORE
0xb10 SHA3
0xb11 DUP4
0xb12 SWAP1
0xb13 SSTORE
0xb14 PUSH2 0xb74
0xb17 JUMP
---
0xadf: JUMPDEST 
0xae3: S[V1073] = S5
0xae5: V1075 = 0x5
0xae7: V1076 = S[0x5]
0xae8: V1077 = 0x1
0xaea: V1078 = 0xa0
0xaec: V1079 = 0x2
0xaee: V1080 = EXP 0x2 0xa0
0xaef: V1081 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaf1: V1082 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0xaf2: V1083 = 0x0
0xaf6: M[0x0] = V1082
0xaf7: V1084 = 0x12
0xaf9: V1085 = 0x20
0xafd: M[0x20] = 0x12
0xafe: V1086 = 0x40
0xb02: V1087 = SHA3 0x0 0x40
0xb03: V1088 = 0x0
0xb05: V1089 = NOT 0x0
0xb08: V1090 = ADD V1076 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xb0b: S[V1087] = V1090
0xb0c: V1091 = 0xf
0xb0f: M[0x20] = 0xf
0xb10: V1092 = SHA3 0x0 0x40
0xb13: S[V1092] = S5
0xb14: V1093 = 0xb74
0xb17: JUMP 0xb74
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, V1073, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3]
Exit stack: [V12, S7, S6, S5, S4, S3]

================================

Block 0xb18
[0xb18:0xb3f]
---
Predecessors: [0x9f9]
Successors: [0xb40]
---
0xb18 JUMPDEST
0xb19 PUSH1 0x1
0xb1b PUSH1 0xa0
0xb1d PUSH1 0x2
0xb1f EXP
0xb20 SUB
0xb21 DUP5
0xb22 AND
0xb23 PUSH1 0x0
0xb25 SWAP1
0xb26 DUP2
0xb27 MSTORE
0xb28 PUSH1 0x12
0xb2a PUSH1 0x20
0xb2c MSTORE
0xb2d PUSH1 0x40
0xb2f SWAP1
0xb30 SHA3
0xb31 SLOAD
0xb32 PUSH1 0x5
0xb34 DUP1
0xb35 SLOAD
0xb36 DUP6
0xb37 SWAP3
0xb38 SWAP1
0xb39 DUP2
0xb3a LT
0xb3b ISZERO
0xb3c PUSH2 0x0
0xb3f JUMPI
---
0xb18: JUMPDEST 
0xb19: V1094 = 0x1
0xb1b: V1095 = 0xa0
0xb1d: V1096 = 0x2
0xb1f: V1097 = EXP 0x2 0xa0
0xb20: V1098 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb22: V1099 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0xb23: V1100 = 0x0
0xb27: M[0x0] = V1099
0xb28: V1101 = 0x12
0xb2a: V1102 = 0x20
0xb2c: M[0x20] = 0x12
0xb2d: V1103 = 0x40
0xb30: V1104 = SHA3 0x0 0x40
0xb31: V1105 = S[V1104]
0xb32: V1106 = 0x5
0xb35: V1107 = S[0x5]
0xb3a: V1108 = LT V1105 V1107
0xb3b: V1109 = ISZERO V1108
0xb3c: V1110 = 0x0
0xb3f: THROWI V1109
---
Entry stack: [V12, 0x14c, V118, V120, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S2, 0x5, V1105]
Exit stack: [V12, 0x14c, V118, V120, {0x0, 0x1}, S0, V120, 0x5, V1105]

================================

Block 0xb40
[0xb40:0xb4c]
---
Predecessors: [0xb18]
Successors: [0xb4d]
---
0xb40 SWAP1
0xb41 PUSH1 0x0
0xb43 MSTORE
0xb44 PUSH1 0x20
0xb46 PUSH1 0x0
0xb48 SHA3
0xb49 SWAP1
0xb4a ADD
0xb4b PUSH1 0x0
---
0xb41: V1111 = 0x0
0xb43: M[0x0] = 0x5
0xb44: V1112 = 0x20
0xb46: V1113 = 0x0
0xb48: V1114 = SHA3 0x0 0x20
0xb4a: V1115 = ADD V1105 V1114
0xb4b: V1116 = 0x0
---
Entry stack: [V12, 0x14c, V118, V120, {0x0, 0x1}, S3, V120, 0x5, V1105]
Stack pops: 2
Stack additions: [V1115, 0x0]
Exit stack: [V12, 0x14c, V118, V120, {0x0, 0x1}, S3, V120, V1115, 0x0]

================================

Block 0xb4d
[0xb4d:0xb73]
---
Predecessors: [0xb40]
Successors: [0xb74]
---
0xb4d JUMPDEST
0xb4e POP
0xb4f DUP1
0xb50 SLOAD
0xb51 SWAP1
0xb52 SWAP2
0xb53 ADD
0xb54 SWAP1
0xb55 SSTORE
0xb56 PUSH1 0x1
0xb58 PUSH1 0xa0
0xb5a PUSH1 0x2
0xb5c EXP
0xb5d SUB
0xb5e DUP5
0xb5f AND
0xb60 PUSH1 0x0
0xb62 SWAP1
0xb63 DUP2
0xb64 MSTORE
0xb65 PUSH1 0xf
0xb67 PUSH1 0x20
0xb69 MSTORE
0xb6a PUSH1 0x40
0xb6c SWAP1
0xb6d SHA3
0xb6e DUP1
0xb6f SLOAD
0xb70 DUP5
0xb71 ADD
0xb72 SWAP1
0xb73 SSTORE
---
0xb4d: JUMPDEST 
0xb50: V1117 = S[V1115]
0xb53: V1118 = ADD V120 V1117
0xb55: S[V1115] = V1118
0xb56: V1119 = 0x1
0xb58: V1120 = 0xa0
0xb5a: V1121 = 0x2
0xb5c: V1122 = EXP 0x2 0xa0
0xb5d: V1123 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb5f: V1124 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0xb60: V1125 = 0x0
0xb64: M[0x0] = V1124
0xb65: V1126 = 0xf
0xb67: V1127 = 0x20
0xb69: M[0x20] = 0xf
0xb6a: V1128 = 0x40
0xb6d: V1129 = SHA3 0x0 0x40
0xb6f: V1130 = S[V1129]
0xb71: V1131 = ADD V120 V1130
0xb73: S[V1129] = V1131
---
Entry stack: [V12, 0x14c, V118, V120, {0x0, 0x1}, S3, V120, V1115, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3]
Exit stack: [V12, 0x14c, V118, V120, {0x0, 0x1}, S3]

================================

Block 0xb74
[0xb74:0xb74]
---
Predecessors: [0x977, 0xadf, 0xb4d]
Successors: [0xb75]
---
0xb74 JUMPDEST
---
0xb74: JUMPDEST 
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0xb75
[0xb75:0xb75]
---
Predecessors: [0xb74]
Successors: [0xb76]
---
0xb75 JUMPDEST
---
0xb75: JUMPDEST 
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0xb76
[0xb76:0xb76]
---
Predecessors: [0xb75]
Successors: [0xb77]
---
0xb76 JUMPDEST
---
0xb76: JUMPDEST 
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0xb77
[0xb77:0xb7c]
---
Predecessors: [0xb76]
Successors: [0x14c]
---
0xb77 JUMPDEST
0xb78 POP
0xb79 POP
0xb7a POP
0xb7b POP
0xb7c JUMP
---
0xb77: JUMPDEST 
0xb7c: JUMP S4
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0xb7d
[0xb7d:0xb82]
---
Predecessors: [0x172]
Successors: [0x179]
---
0xb7d JUMPDEST
0xb7e PUSH1 0x9
0xb80 SLOAD
0xb81 DUP2
0xb82 JUMP
---
0xb7d: JUMPDEST 
0xb7e: V1132 = 0x9
0xb80: V1133 = S[0x9]
0xb82: JUMP 0x179
---
Entry stack: [V12, 0x179]
Stack pops: 1
Stack additions: [S0, V1133]
Exit stack: [V12, 0x179, V1133]

================================

Block 0xb83
[0xb83:0xb91]
---
Predecessors: [0x191]
Successors: [0x198]
---
0xb83 JUMPDEST
0xb84 PUSH1 0x6
0xb86 SLOAD
0xb87 PUSH1 0x1
0xb89 PUSH1 0xa0
0xb8b PUSH1 0x2
0xb8d EXP
0xb8e SUB
0xb8f AND
0xb90 DUP2
0xb91 JUMP
---
0xb83: JUMPDEST 
0xb84: V1134 = 0x6
0xb86: V1135 = S[0x6]
0xb87: V1136 = 0x1
0xb89: V1137 = 0xa0
0xb8b: V1138 = 0x2
0xb8d: V1139 = EXP 0x2 0xa0
0xb8e: V1140 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb8f: V1141 = AND 0xffffffffffffffffffffffffffffffffffffffff V1135
0xb91: JUMP 0x198
---
Entry stack: [V12, 0x198]
Stack pops: 1
Stack additions: [S0, V1141]
Exit stack: [V12, 0x198, V1141]

================================

Block 0xb92
[0xb92:0xba0]
---
Predecessors: [0x1ba]
Successors: [0x198]
---
0xb92 JUMPDEST
0xb93 PUSH1 0x7
0xb95 SLOAD
0xb96 PUSH1 0x1
0xb98 PUSH1 0xa0
0xb9a PUSH1 0x2
0xb9c EXP
0xb9d SUB
0xb9e AND
0xb9f DUP2
0xba0 JUMP
---
0xb92: JUMPDEST 
0xb93: V1142 = 0x7
0xb95: V1143 = S[0x7]
0xb96: V1144 = 0x1
0xb98: V1145 = 0xa0
0xb9a: V1146 = 0x2
0xb9c: V1147 = EXP 0x2 0xa0
0xb9d: V1148 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9e: V1149 = AND 0xffffffffffffffffffffffffffffffffffffffff V1143
0xba0: JUMP 0x198
---
Entry stack: [V12, 0x198]
Stack pops: 1
Stack additions: [S0, V1149]
Exit stack: [V12, 0x198, V1149]

================================

Block 0xba1
[0xba1:0xbad]
---
Predecessors: [0x1e3]
Successors: [0xbae]
---
0xba1 JUMPDEST
0xba2 PUSH1 0x5
0xba4 DUP2
0xba5 DUP2
0xba6 SLOAD
0xba7 DUP2
0xba8 LT
0xba9 ISZERO
0xbaa PUSH2 0x0
0xbad JUMPI
---
0xba1: JUMPDEST 
0xba2: V1150 = 0x5
0xba6: V1151 = S[0x5]
0xba8: V1152 = LT V168 V1151
0xba9: V1153 = ISZERO V1152
0xbaa: V1154 = 0x0
0xbad: THROWI V1153
---
Entry stack: [V12, 0x179, V168]
Stack pops: 1
Stack additions: [S0, 0x5, S0]
Exit stack: [V12, 0x179, V168, 0x5, V168]

================================

Block 0xbae
[0xbae:0xbba]
---
Predecessors: [0xba1]
Successors: [0xbbb]
---
0xbae SWAP1
0xbaf PUSH1 0x0
0xbb1 MSTORE
0xbb2 PUSH1 0x20
0xbb4 PUSH1 0x0
0xbb6 SHA3
0xbb7 SWAP1
0xbb8 ADD
0xbb9 PUSH1 0x0
---
0xbaf: V1155 = 0x0
0xbb1: M[0x0] = 0x5
0xbb2: V1156 = 0x20
0xbb4: V1157 = 0x0
0xbb6: V1158 = SHA3 0x0 0x20
0xbb8: V1159 = ADD V168 V1158
0xbb9: V1160 = 0x0
---
Entry stack: [V12, 0x179, V168, 0x5, V168]
Stack pops: 2
Stack additions: [V1159, 0x0]
Exit stack: [V12, 0x179, V168, V1159, 0x0]

================================

Block 0xbbb
[0xbbb:0xbc1]
---
Predecessors: [0xbae]
Successors: [0x179]
---
0xbbb JUMPDEST
0xbbc POP
0xbbd SLOAD
0xbbe SWAP1
0xbbf POP
0xbc0 DUP2
0xbc1 JUMP
---
0xbbb: JUMPDEST 
0xbbd: V1161 = S[V1159]
0xbc1: JUMP 0x179
---
Entry stack: [V12, 0x179, V168, V1159, 0x0]
Stack pops: 4
Stack additions: [S3, V1161]
Exit stack: [V12, 0x179, V1161]

================================

Block 0xbc2
[0xbc2:0xbc7]
---
Predecessors: [0x205]
Successors: [0x179]
---
0xbc2 JUMPDEST
0xbc3 PUSH1 0x1
0xbc5 SLOAD
0xbc6 DUP2
0xbc7 JUMP
---
0xbc2: JUMPDEST 
0xbc3: V1162 = 0x1
0xbc5: V1163 = S[0x1]
0xbc7: JUMP 0x179
---
Entry stack: [V12, 0x179]
Stack pops: 1
Stack additions: [S0, V1163]
Exit stack: [V12, 0x179, V1163]

================================

Block 0xbc8
[0xbc8:0xbd4]
---
Predecessors: [0x224]
Successors: [0xbd5]
---
0xbc8 JUMPDEST
0xbc9 PUSH1 0x2
0xbcb DUP2
0xbcc DUP2
0xbcd SLOAD
0xbce DUP2
0xbcf LT
0xbd0 ISZERO
0xbd1 PUSH2 0x0
0xbd4 JUMPI
---
0xbc8: JUMPDEST 
0xbc9: V1164 = 0x2
0xbcd: V1165 = S[0x2]
0xbcf: V1166 = LT V190 V1165
0xbd0: V1167 = ISZERO V1166
0xbd1: V1168 = 0x0
0xbd4: THROWI V1167
---
Entry stack: [V12, 0x179, V190]
Stack pops: 1
Stack additions: [S0, 0x2, S0]
Exit stack: [V12, 0x179, V190, 0x2, V190]

================================

Block 0xbd5
[0xbd5:0xbe1]
---
Predecessors: [0xbc8]
Successors: [0xbe2]
---
0xbd5 SWAP1
0xbd6 PUSH1 0x0
0xbd8 MSTORE
0xbd9 PUSH1 0x20
0xbdb PUSH1 0x0
0xbdd SHA3
0xbde SWAP1
0xbdf ADD
0xbe0 PUSH1 0x0
---
0xbd6: V1169 = 0x0
0xbd8: M[0x0] = 0x2
0xbd9: V1170 = 0x20
0xbdb: V1171 = 0x0
0xbdd: V1172 = SHA3 0x0 0x20
0xbdf: V1173 = ADD V190 V1172
0xbe0: V1174 = 0x0
---
Entry stack: [V12, 0x179, V190, 0x2, V190]
Stack pops: 2
Stack additions: [V1173, 0x0]
Exit stack: [V12, 0x179, V190, V1173, 0x0]

================================

Block 0xbe2
[0xbe2:0xbe8]
---
Predecessors: [0xbd5]
Successors: [0x179]
---
0xbe2 JUMPDEST
0xbe3 POP
0xbe4 SLOAD
0xbe5 SWAP1
0xbe6 POP
0xbe7 DUP2
0xbe8 JUMP
---
0xbe2: JUMPDEST 
0xbe4: V1175 = S[V1173]
0xbe8: JUMP 0x179
---
Entry stack: [V12, 0x179, V190, V1173, 0x0]
Stack pops: 4
Stack additions: [S3, V1175]
Exit stack: [V12, 0x179, V1175]

================================

Block 0xbe9
[0xbe9:0xbf7]
---
Predecessors: [0x246]
Successors: [0x198]
---
0xbe9 JUMPDEST
0xbea PUSH1 0xc
0xbec SLOAD
0xbed PUSH1 0x1
0xbef PUSH1 0xa0
0xbf1 PUSH1 0x2
0xbf3 EXP
0xbf4 SUB
0xbf5 AND
0xbf6 DUP2
0xbf7 JUMP
---
0xbe9: JUMPDEST 
0xbea: V1176 = 0xc
0xbec: V1177 = S[0xc]
0xbed: V1178 = 0x1
0xbef: V1179 = 0xa0
0xbf1: V1180 = 0x2
0xbf3: V1181 = EXP 0x2 0xa0
0xbf4: V1182 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf5: V1183 = AND 0xffffffffffffffffffffffffffffffffffffffff V1177
0xbf7: JUMP 0x198
---
Entry stack: [V12, 0x198]
Stack pops: 1
Stack additions: [S0, V1183]
Exit stack: [V12, 0x198, V1183]

================================

Block 0xbf8
[0xbf8:0xbfd]
---
Predecessors: [0x26f]
Successors: [0x179]
---
0xbf8 JUMPDEST
0xbf9 PUSH1 0xb
0xbfb SLOAD
0xbfc DUP2
0xbfd JUMP
---
0xbf8: JUMPDEST 
0xbf9: V1184 = 0xb
0xbfb: V1185 = S[0xb]
0xbfd: JUMP 0x179
---
Entry stack: [V12, 0x179]
Stack pops: 1
Stack additions: [S0, V1185]
Exit stack: [V12, 0x179, V1185]

================================

Block 0xbfe
[0xbfe:0xc0f]
---
Predecessors: [0x28e]
Successors: [0x179]
---
0xbfe JUMPDEST
0xbff PUSH1 0xd
0xc01 PUSH1 0x20
0xc03 MSTORE
0xc04 PUSH1 0x0
0xc06 SWAP1
0xc07 DUP2
0xc08 MSTORE
0xc09 PUSH1 0x40
0xc0b SWAP1
0xc0c SHA3
0xc0d SLOAD
0xc0e DUP2
0xc0f JUMP
---
0xbfe: JUMPDEST 
0xbff: V1186 = 0xd
0xc01: V1187 = 0x20
0xc03: M[0x20] = 0xd
0xc04: V1188 = 0x0
0xc08: M[0x0] = V234
0xc09: V1189 = 0x40
0xc0c: V1190 = SHA3 0x0 0x40
0xc0d: V1191 = S[V1190]
0xc0f: JUMP 0x179
---
Entry stack: [V12, 0x179, V234]
Stack pops: 2
Stack additions: [S1, V1191]
Exit stack: [V12, 0x179, V1191]

================================

Block 0xc10
[0xc10:0xc15]
---
Predecessors: [0x2b9]
Successors: [0x179]
---
0xc10 JUMPDEST
0xc11 PUSH1 0x8
0xc13 SLOAD
0xc14 DUP2
0xc15 JUMP
---
0xc10: JUMPDEST 
0xc11: V1192 = 0x8
0xc13: V1193 = S[0x8]
0xc15: JUMP 0x179
---
Entry stack: [V12, 0x179]
Stack pops: 1
Stack additions: [S0, V1193]
Exit stack: [V12, 0x179, V1193]

================================

Block 0xc16
[0xc16:0xc22]
---
Predecessors: [0x2d8]
Successors: [0xc23]
---
0xc16 JUMPDEST
0xc17 PUSH1 0x10
0xc19 DUP2
0xc1a DUP2
0xc1b SLOAD
0xc1c DUP2
0xc1d LT
0xc1e ISZERO
0xc1f PUSH2 0x0
0xc22 JUMPI
---
0xc16: JUMPDEST 
0xc17: V1194 = 0x10
0xc1b: V1195 = S[0x10]
0xc1d: V1196 = LT V256 V1195
0xc1e: V1197 = ISZERO V1196
0xc1f: V1198 = 0x0
0xc22: THROWI V1197
---
Entry stack: [V12, 0x198, V256]
Stack pops: 1
Stack additions: [S0, 0x10, S0]
Exit stack: [V12, 0x198, V256, 0x10, V256]

================================

Block 0xc23
[0xc23:0xc2f]
---
Predecessors: [0xc16]
Successors: [0xc30]
---
0xc23 SWAP1
0xc24 PUSH1 0x0
0xc26 MSTORE
0xc27 PUSH1 0x20
0xc29 PUSH1 0x0
0xc2b SHA3
0xc2c SWAP1
0xc2d ADD
0xc2e PUSH1 0x0
---
0xc24: V1199 = 0x0
0xc26: M[0x0] = 0x10
0xc27: V1200 = 0x20
0xc29: V1201 = 0x0
0xc2b: V1202 = SHA3 0x0 0x20
0xc2d: V1203 = ADD V256 V1202
0xc2e: V1204 = 0x0
---
Entry stack: [V12, 0x198, V256, 0x10, V256]
Stack pops: 2
Stack additions: [V1203, 0x0]
Exit stack: [V12, 0x198, V256, V1203, 0x0]

================================

Block 0xc30
[0xc30:0xc45]
---
Predecessors: [0xc23]
Successors: [0x198]
---
0xc30 JUMPDEST
0xc31 SWAP2
0xc32 POP
0xc33 SLOAD
0xc34 SWAP1
0xc35 PUSH2 0x100
0xc38 EXP
0xc39 SWAP1
0xc3a DIV
0xc3b PUSH1 0x1
0xc3d PUSH1 0xa0
0xc3f PUSH1 0x2
0xc41 EXP
0xc42 SUB
0xc43 AND
0xc44 DUP2
0xc45 JUMP
---
0xc30: JUMPDEST 
0xc33: V1205 = S[V1203]
0xc35: V1206 = 0x100
0xc38: V1207 = EXP 0x100 0x0
0xc3a: V1208 = DIV V1205 0x1
0xc3b: V1209 = 0x1
0xc3d: V1210 = 0xa0
0xc3f: V1211 = 0x2
0xc41: V1212 = EXP 0x2 0xa0
0xc42: V1213 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc43: V1214 = AND 0xffffffffffffffffffffffffffffffffffffffff V1208
0xc45: JUMP 0x198
---
Entry stack: [V12, 0x198, V256, V1203, 0x0]
Stack pops: 4
Stack additions: [S3, V1214]
Exit stack: [V12, 0x198, V1214]

================================

Block 0xc46
[0xc46:0xc54]
---
Predecessors: [0x304]
Successors: [0x198]
---
0xc46 JUMPDEST
0xc47 PUSH1 0x0
0xc49 SLOAD
0xc4a PUSH1 0x1
0xc4c PUSH1 0xa0
0xc4e PUSH1 0x2
0xc50 EXP
0xc51 SUB
0xc52 AND
0xc53 DUP2
0xc54 JUMP
---
0xc46: JUMPDEST 
0xc47: V1215 = 0x0
0xc49: V1216 = S[0x0]
0xc4a: V1217 = 0x1
0xc4c: V1218 = 0xa0
0xc4e: V1219 = 0x2
0xc50: V1220 = EXP 0x2 0xa0
0xc51: V1221 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc52: V1222 = AND 0xffffffffffffffffffffffffffffffffffffffff V1216
0xc54: JUMP 0x198
---
Entry stack: [V12, 0x198]
Stack pops: 1
Stack additions: [S0, V1222]
Exit stack: [V12, 0x198, V1222]

================================

Block 0xc55
[0xc55:0xc66]
---
Predecessors: [0x32d]
Successors: [0x179]
---
0xc55 JUMPDEST
0xc56 PUSH1 0xf
0xc58 PUSH1 0x20
0xc5a MSTORE
0xc5b PUSH1 0x0
0xc5d SWAP1
0xc5e DUP2
0xc5f MSTORE
0xc60 PUSH1 0x40
0xc62 SWAP1
0xc63 SHA3
0xc64 SLOAD
0xc65 DUP2
0xc66 JUMP
---
0xc55: JUMPDEST 
0xc56: V1223 = 0xf
0xc58: V1224 = 0x20
0xc5a: M[0x20] = 0xf
0xc5b: V1225 = 0x0
0xc5f: M[0x0] = V296
0xc60: V1226 = 0x40
0xc63: V1227 = SHA3 0x0 0x40
0xc64: V1228 = S[V1227]
0xc66: JUMP 0x179
---
Entry stack: [V12, 0x179, V296]
Stack pops: 2
Stack additions: [S1, V1228]
Exit stack: [V12, 0x179, V1228]

================================

Block 0xc67
[0xc67:0xc7e]
---
Predecessors: [0x358]
Successors: [0xc7f, 0xc9a]
---
0xc67 JUMPDEST
0xc68 PUSH1 0x0
0xc6a SLOAD
0xc6b CALLER
0xc6c PUSH1 0x1
0xc6e PUSH1 0xa0
0xc70 PUSH1 0x2
0xc72 EXP
0xc73 SUB
0xc74 SWAP1
0xc75 DUP2
0xc76 AND
0xc77 SWAP2
0xc78 AND
0xc79 EQ
0xc7a ISZERO
0xc7b PUSH2 0xc9a
0xc7e JUMPI
---
0xc67: JUMPDEST 
0xc68: V1229 = 0x0
0xc6a: V1230 = S[0x0]
0xc6b: V1231 = CALLER
0xc6c: V1232 = 0x1
0xc6e: V1233 = 0xa0
0xc70: V1234 = 0x2
0xc72: V1235 = EXP 0x2 0xa0
0xc73: V1236 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc76: V1237 = AND 0xffffffffffffffffffffffffffffffffffffffff V1231
0xc78: V1238 = AND V1230 0xffffffffffffffffffffffffffffffffffffffff
0xc79: V1239 = EQ V1238 V1237
0xc7a: V1240 = ISZERO V1239
0xc7b: V1241 = 0xc9a
0xc7e: JUMPI 0xc9a V1240
---
Entry stack: [V12, 0x14c, V314]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c, V314]

================================

Block 0xc7f
[0xc7f:0xc99]
---
Predecessors: [0xc67]
Successors: [0xc9a]
---
0xc7f PUSH1 0x0
0xc81 DUP1
0xc82 SLOAD
0xc83 PUSH1 0x1
0xc85 PUSH1 0xa0
0xc87 PUSH1 0x2
0xc89 EXP
0xc8a SUB
0xc8b NOT
0xc8c AND
0xc8d PUSH1 0x1
0xc8f PUSH1 0xa0
0xc91 PUSH1 0x2
0xc93 EXP
0xc94 SUB
0xc95 DUP4
0xc96 AND
0xc97 OR
0xc98 SWAP1
0xc99 SSTORE
---
0xc7f: V1242 = 0x0
0xc82: V1243 = S[0x0]
0xc83: V1244 = 0x1
0xc85: V1245 = 0xa0
0xc87: V1246 = 0x2
0xc89: V1247 = EXP 0x2 0xa0
0xc8a: V1248 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc8b: V1249 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc8c: V1250 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1243
0xc8d: V1251 = 0x1
0xc8f: V1252 = 0xa0
0xc91: V1253 = 0x2
0xc93: V1254 = EXP 0x2 0xa0
0xc94: V1255 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc96: V1256 = AND V314 0xffffffffffffffffffffffffffffffffffffffff
0xc97: V1257 = OR V1256 V1250
0xc99: S[0x0] = V1257
---
Entry stack: [V12, 0x14c, V314]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x14c, V314]

================================

Block 0xc9a
[0xc9a:0xc9a]
---
Predecessors: [0xc67, 0xc7f]
Successors: [0xc9b]
---
0xc9a JUMPDEST
---
0xc9a: JUMPDEST 
---
Entry stack: [V12, 0x14c, V314]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c, V314]

================================

Block 0xc9b
[0xc9b:0xc9b]
---
Predecessors: [0xc9a]
Successors: [0xc9c]
---
0xc9b JUMPDEST
---
0xc9b: JUMPDEST 
---
Entry stack: [V12, 0x14c, V314]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c, V314]

================================

Block 0xc9c
[0xc9c:0xc9e]
---
Predecessors: [0xc9b]
Successors: [0x14c]
---
0xc9c JUMPDEST
0xc9d POP
0xc9e JUMP
---
0xc9c: JUMPDEST 
0xc9e: JUMP 0x14c
---
Entry stack: [V12, 0x14c, V314]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xc9f
[0xc9f:0xcb9]
---
Predecessors: [0x373]
Successors: [0xcba, 0xe64]
---
0xc9f JUMPDEST
0xca0 PUSH1 0x0
0xca2 DUP1
0xca3 SLOAD
0xca4 DUP2
0xca5 SWAP1
0xca6 CALLER
0xca7 PUSH1 0x1
0xca9 PUSH1 0xa0
0xcab PUSH1 0x2
0xcad EXP
0xcae SUB
0xcaf SWAP1
0xcb0 DUP2
0xcb1 AND
0xcb2 SWAP2
0xcb3 AND
0xcb4 EQ
0xcb5 ISZERO
0xcb6 PUSH2 0xe64
0xcb9 JUMPI
---
0xc9f: JUMPDEST 
0xca0: V1258 = 0x0
0xca3: V1259 = S[0x0]
0xca6: V1260 = CALLER
0xca7: V1261 = 0x1
0xca9: V1262 = 0xa0
0xcab: V1263 = 0x2
0xcad: V1264 = EXP 0x2 0xa0
0xcae: V1265 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcb1: V1266 = AND 0xffffffffffffffffffffffffffffffffffffffff V1260
0xcb3: V1267 = AND V1259 0xffffffffffffffffffffffffffffffffffffffff
0xcb4: V1268 = EQ V1267 V1266
0xcb5: V1269 = ISZERO V1268
0xcb6: V1270 = 0xe64
0xcb9: JUMPI 0xe64 V1269
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x14c, 0x0, 0x0]

================================

Block 0xcba
[0xcba:0xcc4]
---
Predecessors: [0xc9f]
Successors: [0xcc5, 0xcc9]
---
0xcba PUSH1 0x0
0xcbc PUSH1 0x1
0xcbe SLOAD
0xcbf GT
0xcc0 ISZERO
0xcc1 PUSH2 0xcc9
0xcc4 JUMPI
---
0xcba: V1271 = 0x0
0xcbc: V1272 = 0x1
0xcbe: V1273 = S[0x1]
0xcbf: V1274 = GT V1273 0x0
0xcc0: V1275 = ISZERO V1274
0xcc1: V1276 = 0xcc9
0xcc4: JUMPI 0xcc9 V1275
---
Entry stack: [V12, 0x14c, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c, 0x0, 0x0]

================================

Block 0xcc5
[0xcc5:0xcc8]
---
Predecessors: [0xcba]
Successors: []
---
0xcc5 PUSH2 0x0
0xcc8 JUMP
---
0xcc5: V1277 = 0x0
0xcc8: THROW 
---
Entry stack: [V12, 0x14c, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c, 0x0, 0x0]

================================

Block 0xcc9
[0xcc9:0xccd]
---
Predecessors: [0xcba]
Successors: [0xcce]
---
0xcc9 JUMPDEST
0xcca PUSH1 0x0
0xccc SWAP2
0xccd POP
---
0xcc9: JUMPDEST 
0xcca: V1278 = 0x0
---
Entry stack: [V12, 0x14c, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0x14c, 0x0, 0x0]

================================

Block 0xcce
[0xcce:0xcd8]
---
Predecessors: [0xcc9, 0xd9f]
Successors: [0xcd9, 0xdaa]
---
0xcce JUMPDEST
0xccf PUSH1 0x10
0xcd1 SLOAD
0xcd2 DUP3
0xcd3 LT
0xcd4 ISZERO
0xcd5 PUSH2 0xdaa
0xcd8 JUMPI
---
0xcce: JUMPDEST 
0xccf: V1279 = 0x10
0xcd1: V1280 = S[0x10]
0xcd3: V1281 = LT S1 V1280
0xcd4: V1282 = ISZERO V1281
0xcd5: V1283 = 0xdaa
0xcd8: JUMPI 0xdaa V1282
---
Entry stack: [V12, 0x14c, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x14c, S1, 0x0]

================================

Block 0xcd9
[0xcd9:0xce4]
---
Predecessors: [0xcce]
Successors: [0xce5]
---
0xcd9 PUSH1 0x10
0xcdb DUP3
0xcdc DUP2
0xcdd SLOAD
0xcde DUP2
0xcdf LT
0xce0 ISZERO
0xce1 PUSH2 0x0
0xce4 JUMPI
---
0xcd9: V1284 = 0x10
0xcdd: V1285 = S[0x10]
0xcdf: V1286 = LT S1 V1285
0xce0: V1287 = ISZERO V1286
0xce1: V1288 = 0x0
0xce4: THROWI V1287
---
Entry stack: [V12, 0x14c, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x10, S1]
Exit stack: [V12, 0x14c, S1, 0x0, 0x10, S1]

================================

Block 0xce5
[0xce5:0xcf1]
---
Predecessors: [0xcd9]
Successors: [0xcf2]
---
0xce5 SWAP1
0xce6 PUSH1 0x0
0xce8 MSTORE
0xce9 PUSH1 0x20
0xceb PUSH1 0x0
0xced SHA3
0xcee SWAP1
0xcef ADD
0xcf0 PUSH1 0x0
---
0xce6: V1289 = 0x0
0xce8: M[0x0] = 0x10
0xce9: V1290 = 0x20
0xceb: V1291 = 0x0
0xced: V1292 = SHA3 0x0 0x20
0xcef: V1293 = ADD S0 V1292
0xcf0: V1294 = 0x0
---
Entry stack: [V12, 0x14c, S3, 0x0, 0x10, S0]
Stack pops: 2
Stack additions: [V1293, 0x0]
Exit stack: [V12, 0x14c, S3, 0x0, V1293, 0x0]

================================

Block 0xcf2
[0xcf2:0xd28]
---
Predecessors: [0xce5]
Successors: [0xd29]
---
0xcf2 JUMPDEST
0xcf3 SWAP1
0xcf4 SLOAD
0xcf5 PUSH1 0x11
0xcf7 DUP1
0xcf8 SLOAD
0xcf9 PUSH1 0x1
0xcfb PUSH1 0xa0
0xcfd PUSH1 0x2
0xcff EXP
0xd00 SUB
0xd01 NOT
0xd02 AND
0xd03 PUSH1 0x1
0xd05 PUSH1 0xa0
0xd07 PUSH1 0x2
0xd09 EXP
0xd0a SUB
0xd0b PUSH2 0x100
0xd0e SWAP5
0xd0f SWAP1
0xd10 SWAP5
0xd11 EXP
0xd12 SWAP1
0xd13 SWAP3
0xd14 DIV
0xd15 SWAP3
0xd16 SWAP1
0xd17 SWAP3
0xd18 AND
0xd19 OR
0xd1a SWAP1
0xd1b SSTORE
0xd1c PUSH1 0x10
0xd1e DUP1
0xd1f SLOAD
0xd20 DUP4
0xd21 SWAP1
0xd22 DUP2
0xd23 LT
0xd24 ISZERO
0xd25 PUSH2 0x0
0xd28 JUMPI
---
0xcf2: JUMPDEST 
0xcf4: V1295 = S[V1293]
0xcf5: V1296 = 0x11
0xcf8: V1297 = S[0x11]
0xcf9: V1298 = 0x1
0xcfb: V1299 = 0xa0
0xcfd: V1300 = 0x2
0xcff: V1301 = EXP 0x2 0xa0
0xd00: V1302 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd01: V1303 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd02: V1304 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1297
0xd03: V1305 = 0x1
0xd05: V1306 = 0xa0
0xd07: V1307 = 0x2
0xd09: V1308 = EXP 0x2 0xa0
0xd0a: V1309 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd0b: V1310 = 0x100
0xd11: V1311 = EXP 0x100 0x0
0xd14: V1312 = DIV V1295 0x1
0xd18: V1313 = AND V1312 0xffffffffffffffffffffffffffffffffffffffff
0xd19: V1314 = OR V1313 V1304
0xd1b: S[0x11] = V1314
0xd1c: V1315 = 0x10
0xd1f: V1316 = S[0x10]
0xd23: V1317 = LT S3 V1316
0xd24: V1318 = ISZERO V1317
0xd25: V1319 = 0x0
0xd28: THROWI V1318
---
Entry stack: [V12, 0x14c, S3, 0x0, V1293, 0x0]
Stack pops: 4
Stack additions: [S3, S2, 0x10, S3]
Exit stack: [V12, 0x14c, S3, 0x0, 0x10, S3]

================================

Block 0xd29
[0xd29:0xd35]
---
Predecessors: [0xcf2]
Successors: [0xd36]
---
0xd29 SWAP1
0xd2a PUSH1 0x0
0xd2c MSTORE
0xd2d PUSH1 0x20
0xd2f PUSH1 0x0
0xd31 SHA3
0xd32 SWAP1
0xd33 ADD
0xd34 PUSH1 0x0
---
0xd2a: V1320 = 0x0
0xd2c: M[0x0] = 0x10
0xd2d: V1321 = 0x20
0xd2f: V1322 = 0x0
0xd31: V1323 = SHA3 0x0 0x20
0xd33: V1324 = ADD S0 V1323
0xd34: V1325 = 0x0
---
Entry stack: [V12, 0x14c, S3, 0x0, 0x10, S0]
Stack pops: 2
Stack additions: [V1324, 0x0]
Exit stack: [V12, 0x14c, S3, 0x0, V1324, 0x0]

================================

Block 0xd36
[0xd36:0xd81]
---
Predecessors: [0xd29]
Successors: [0xd82]
---
0xd36 JUMPDEST
0xd37 SWAP1
0xd38 SLOAD
0xd39 SWAP1
0xd3a PUSH2 0x100
0xd3d EXP
0xd3e SWAP1
0xd3f DIV
0xd40 PUSH1 0x1
0xd42 PUSH1 0xa0
0xd44 PUSH1 0x2
0xd46 EXP
0xd47 SUB
0xd48 AND
0xd49 PUSH1 0x1
0xd4b PUSH1 0xa0
0xd4d PUSH1 0x2
0xd4f EXP
0xd50 SUB
0xd51 AND
0xd52 PUSH4 0xb808b43d
0xd57 PUSH1 0x40
0xd59 MLOAD
0xd5a DUP2
0xd5b PUSH4 0xffffffff
0xd60 AND
0xd61 PUSH1 0xe0
0xd63 PUSH1 0x2
0xd65 EXP
0xd66 MUL
0xd67 DUP2
0xd68 MSTORE
0xd69 PUSH1 0x4
0xd6b ADD
0xd6c DUP1
0xd6d SWAP1
0xd6e POP
0xd6f PUSH1 0x0
0xd71 PUSH1 0x40
0xd73 MLOAD
0xd74 DUP1
0xd75 DUP4
0xd76 SUB
0xd77 DUP2
0xd78 PUSH1 0x0
0xd7a DUP8
0xd7b DUP1
0xd7c EXTCODESIZE
0xd7d ISZERO
0xd7e PUSH2 0x0
0xd81 JUMPI
---
0xd36: JUMPDEST 
0xd38: V1326 = S[V1324]
0xd3a: V1327 = 0x100
0xd3d: V1328 = EXP 0x100 0x0
0xd3f: V1329 = DIV V1326 0x1
0xd40: V1330 = 0x1
0xd42: V1331 = 0xa0
0xd44: V1332 = 0x2
0xd46: V1333 = EXP 0x2 0xa0
0xd47: V1334 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd48: V1335 = AND 0xffffffffffffffffffffffffffffffffffffffff V1329
0xd49: V1336 = 0x1
0xd4b: V1337 = 0xa0
0xd4d: V1338 = 0x2
0xd4f: V1339 = EXP 0x2 0xa0
0xd50: V1340 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd51: V1341 = AND 0xffffffffffffffffffffffffffffffffffffffff V1335
0xd52: V1342 = 0xb808b43d
0xd57: V1343 = 0x40
0xd59: V1344 = M[0x40]
0xd5b: V1345 = 0xffffffff
0xd60: V1346 = AND 0xffffffff 0xb808b43d
0xd61: V1347 = 0xe0
0xd63: V1348 = 0x2
0xd65: V1349 = EXP 0x2 0xe0
0xd66: V1350 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb808b43d
0xd68: M[V1344] = 0xb808b43d00000000000000000000000000000000000000000000000000000000
0xd69: V1351 = 0x4
0xd6b: V1352 = ADD 0x4 V1344
0xd6f: V1353 = 0x0
0xd71: V1354 = 0x40
0xd73: V1355 = M[0x40]
0xd76: V1356 = SUB V1352 V1355
0xd78: V1357 = 0x0
0xd7c: V1358 = EXTCODESIZE V1341
0xd7d: V1359 = ISZERO V1358
0xd7e: V1360 = 0x0
0xd81: THROWI V1359
---
Entry stack: [V12, 0x14c, S3, 0x0, V1324, 0x0]
Stack pops: 2
Stack additions: [V1341, 0xb808b43d, V1352, 0x0, V1355, V1356, V1355, 0x0, V1341]
Exit stack: [V12, 0x14c, S3, 0x0, V1341, 0xb808b43d, V1352, 0x0, V1355, V1356, V1355, 0x0, V1341]

================================

Block 0xd82
[0xd82:0xd8b]
---
Predecessors: [0xd36]
Successors: [0xd8c]
---
0xd82 PUSH1 0x32
0xd84 GAS
0xd85 SUB
0xd86 CALL
0xd87 ISZERO
0xd88 PUSH2 0x0
0xd8b JUMPI
---
0xd82: V1361 = 0x32
0xd84: V1362 = GAS
0xd85: V1363 = SUB V1362 0x32
0xd86: V1364 = CALL V1363 V1341 0x0 V1355 V1356 V1355 0x0
0xd87: V1365 = ISZERO V1364
0xd88: V1366 = 0x0
0xd8b: THROWI V1365
---
Entry stack: [V12, 0x14c, S10, 0x0, V1341, 0xb808b43d, V1352, 0x0, V1355, V1356, V1355, 0x0, V1341]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x14c, S10, 0x0, V1341, 0xb808b43d, V1352]

================================

Block 0xd8c
[0xd8c:0xd9e]
---
Predecessors: [0xd82]
Successors: [0xd9f]
---
0xd8c POP
0xd8d POP
0xd8e PUSH1 0x11
0xd90 DUP1
0xd91 SLOAD
0xd92 PUSH1 0x1
0xd94 PUSH1 0xa0
0xd96 PUSH1 0x2
0xd98 EXP
0xd99 SUB
0xd9a NOT
0xd9b AND
0xd9c SWAP1
0xd9d SSTORE
0xd9e POP
---
0xd8e: V1367 = 0x11
0xd91: V1368 = S[0x11]
0xd92: V1369 = 0x1
0xd94: V1370 = 0xa0
0xd96: V1371 = 0x2
0xd98: V1372 = EXP 0x2 0xa0
0xd99: V1373 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd9a: V1374 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd9b: V1375 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1368
0xd9d: S[0x11] = V1375
---
Entry stack: [V12, 0x14c, S4, 0x0, V1341, 0xb808b43d, V1352]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x14c, S4, 0x0]

================================

Block 0xd9f
[0xd9f:0xda9]
---
Predecessors: [0xd8c]
Successors: [0xcce]
---
0xd9f JUMPDEST
0xda0 PUSH1 0x1
0xda2 SWAP1
0xda3 SWAP2
0xda4 ADD
0xda5 SWAP1
0xda6 PUSH2 0xcce
0xda9 JUMP
---
0xd9f: JUMPDEST 
0xda0: V1376 = 0x1
0xda4: V1377 = ADD S1 0x1
0xda6: V1378 = 0xcce
0xda9: JUMP 0xcce
---
Entry stack: [V12, 0x14c, S1, 0x0]
Stack pops: 2
Stack additions: [V1377, S0]
Exit stack: [V12, 0x14c, V1377, 0x0]

================================

Block 0xdaa
[0xdaa:0xdad]
---
Predecessors: [0xcce]
Successors: [0xdae]
---
0xdaa JUMPDEST
0xdab POP
0xdac PUSH1 0x0
---
0xdaa: JUMPDEST 
0xdac: V1379 = 0x0
---
Entry stack: [V12, 0x14c, S1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x14c, S1, 0x0]

================================

Block 0xdae
[0xdae:0xdb8]
---
Predecessors: [0xdaa, 0xe4a]
Successors: [0xdb9, 0xe52]
---
0xdae JUMPDEST
0xdaf PUSH1 0x4
0xdb1 SLOAD
0xdb2 DUP2
0xdb3 LT
0xdb4 ISZERO
0xdb5 PUSH2 0xe52
0xdb8 JUMPI
---
0xdae: JUMPDEST 
0xdaf: V1380 = 0x4
0xdb1: V1381 = S[0x4]
0xdb3: V1382 = LT S0 V1381
0xdb4: V1383 = ISZERO V1382
0xdb5: V1384 = 0xe52
0xdb8: JUMPI 0xe52 V1383
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xdb9
[0xdb9:0xdc7]
---
Predecessors: [0xdae]
Successors: [0xdc8]
---
0xdb9 PUSH2 0xe49
0xdbc PUSH1 0x4
0xdbe DUP3
0xdbf DUP2
0xdc0 SLOAD
0xdc1 DUP2
0xdc2 LT
0xdc3 ISZERO
0xdc4 PUSH2 0x0
0xdc7 JUMPI
---
0xdb9: V1385 = 0xe49
0xdbc: V1386 = 0x4
0xdc0: V1387 = S[0x4]
0xdc2: V1388 = LT S0 V1387
0xdc3: V1389 = ISZERO V1388
0xdc4: V1390 = 0x0
0xdc7: THROWI V1389
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0xe49, 0x4, S0]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0, 0xe49, 0x4, S0]

================================

Block 0xdc8
[0xdc8:0xdd4]
---
Predecessors: [0xdb9]
Successors: [0xdd5]
---
0xdc8 SWAP1
0xdc9 PUSH1 0x0
0xdcb MSTORE
0xdcc PUSH1 0x20
0xdce PUSH1 0x0
0xdd0 SHA3
0xdd1 SWAP1
0xdd2 ADD
0xdd3 PUSH1 0x0
---
0xdc9: V1391 = 0x0
0xdcb: M[0x0] = 0x4
0xdcc: V1392 = 0x20
0xdce: V1393 = 0x0
0xdd0: V1394 = SHA3 0x0 0x20
0xdd2: V1395 = ADD S0 V1394
0xdd3: V1396 = 0x0
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, S5, S4, S3, 0xe49, 0x4, S0]
Stack pops: 2
Stack additions: [V1395, 0x0]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, S5, S4, S3, 0xe49, V1395, 0x0]

================================

Block 0xdd5
[0xdd5:0xe32]
---
Predecessors: [0xdc8]
Successors: [0xe33]
---
0xdd5 JUMPDEST
0xdd6 SWAP1
0xdd7 SLOAD
0xdd8 SWAP1
0xdd9 PUSH2 0x100
0xddc EXP
0xddd SWAP1
0xdde DIV
0xddf PUSH1 0x1
0xde1 PUSH1 0xa0
0xde3 PUSH1 0x2
0xde5 EXP
0xde6 SUB
0xde7 AND
0xde8 ADDRESS
0xde9 PUSH1 0x1
0xdeb PUSH1 0xa0
0xded PUSH1 0x2
0xdef EXP
0xdf0 SUB
0xdf1 AND
0xdf2 PUSH4 0x45f0a44f
0xdf7 DUP5
0xdf8 PUSH1 0x0
0xdfa PUSH1 0x40
0xdfc MLOAD
0xdfd PUSH1 0x20
0xdff ADD
0xe00 MSTORE
0xe01 PUSH1 0x40
0xe03 MLOAD
0xe04 DUP3
0xe05 PUSH4 0xffffffff
0xe0a AND
0xe0b PUSH1 0xe0
0xe0d PUSH1 0x2
0xe0f EXP
0xe10 MUL
0xe11 DUP2
0xe12 MSTORE
0xe13 PUSH1 0x4
0xe15 ADD
0xe16 DUP1
0xe17 DUP3
0xe18 DUP2
0xe19 MSTORE
0xe1a PUSH1 0x20
0xe1c ADD
0xe1d SWAP2
0xe1e POP
0xe1f POP
0xe20 PUSH1 0x20
0xe22 PUSH1 0x40
0xe24 MLOAD
0xe25 DUP1
0xe26 DUP4
0xe27 SUB
0xe28 DUP2
0xe29 PUSH1 0x0
0xe2b DUP8
0xe2c DUP1
0xe2d EXTCODESIZE
0xe2e ISZERO
0xe2f PUSH2 0x0
0xe32 JUMPI
---
0xdd5: JUMPDEST 
0xdd7: V1397 = S[V1395]
0xdd9: V1398 = 0x100
0xddc: V1399 = EXP 0x100 0x0
0xdde: V1400 = DIV V1397 0x1
0xddf: V1401 = 0x1
0xde1: V1402 = 0xa0
0xde3: V1403 = 0x2
0xde5: V1404 = EXP 0x2 0xa0
0xde6: V1405 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde7: V1406 = AND 0xffffffffffffffffffffffffffffffffffffffff V1400
0xde8: V1407 = ADDRESS
0xde9: V1408 = 0x1
0xdeb: V1409 = 0xa0
0xded: V1410 = 0x2
0xdef: V1411 = EXP 0x2 0xa0
0xdf0: V1412 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf1: V1413 = AND 0xffffffffffffffffffffffffffffffffffffffff V1407
0xdf2: V1414 = 0x45f0a44f
0xdf8: V1415 = 0x0
0xdfa: V1416 = 0x40
0xdfc: V1417 = M[0x40]
0xdfd: V1418 = 0x20
0xdff: V1419 = ADD 0x20 V1417
0xe00: M[V1419] = 0x0
0xe01: V1420 = 0x40
0xe03: V1421 = M[0x40]
0xe05: V1422 = 0xffffffff
0xe0a: V1423 = AND 0xffffffff 0x45f0a44f
0xe0b: V1424 = 0xe0
0xe0d: V1425 = 0x2
0xe0f: V1426 = EXP 0x2 0xe0
0xe10: V1427 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x45f0a44f
0xe12: M[V1421] = 0x45f0a44f00000000000000000000000000000000000000000000000000000000
0xe13: V1428 = 0x4
0xe15: V1429 = ADD 0x4 V1421
0xe19: M[V1429] = S3
0xe1a: V1430 = 0x20
0xe1c: V1431 = ADD 0x20 V1429
0xe20: V1432 = 0x20
0xe22: V1433 = 0x40
0xe24: V1434 = M[0x40]
0xe27: V1435 = SUB V1431 V1434
0xe29: V1436 = 0x0
0xe2d: V1437 = EXTCODESIZE V1413
0xe2e: V1438 = ISZERO V1437
0xe2f: V1439 = 0x0
0xe32: THROWI V1438
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, S5, S4, S3, 0xe49, V1395, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V1406, V1413, 0x45f0a44f, V1431, 0x20, V1434, V1435, V1434, 0x0, V1413]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S9, S8, S7, S6, S5, S4, S3, 0xe49, V1406, V1413, 0x45f0a44f, V1431, 0x20, V1434, V1435, V1434, 0x0, V1413]

================================

Block 0xe33
[0xe33:0xe3c]
---
Predecessors: [0xdd5]
Successors: [0xe3d]
---
0xe33 PUSH1 0x32
0xe35 GAS
0xe36 SUB
0xe37 CALL
0xe38 ISZERO
0xe39 PUSH2 0x0
0xe3c JUMPI
---
0xe33: V1440 = 0x32
0xe35: V1441 = GAS
0xe36: V1442 = SUB V1441 0x32
0xe37: V1443 = CALL V1442 V1413 0x0 V1434 V1435 V1434 0x20
0xe38: V1444 = ISZERO V1443
0xe39: V1445 = 0x0
0xe3c: THROWI V1444
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, 0xe49, V1406, V1413, 0x45f0a44f, V1431, 0x20, V1434, V1435, V1434, 0x0, V1413]
Stack pops: 6
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S17, S16, S15, S14, S13, S12, S11, 0xe49, V1406, V1413, 0x45f0a44f, V1431]

================================

Block 0xe3d
[0xe3d:0xe48]
---
Predecessors: [0xe33]
Successors: [0x436]
---
0xe3d POP
0xe3e POP
0xe3f PUSH1 0x40
0xe41 MLOAD
0xe42 MLOAD
0xe43 SWAP1
0xe44 POP
0xe45 PUSH2 0x436
0xe48 JUMP
---
0xe3f: V1446 = 0x40
0xe41: V1447 = M[0x40]
0xe42: V1448 = M[V1447]
0xe45: V1449 = 0x436
0xe48: JUMP 0x436
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S11, S10, S9, S8, S7, S6, S5, 0xe49, V1406, V1413, 0x45f0a44f, V1431]
Stack pops: 3
Stack additions: [V1448]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S11, S10, S9, S8, S7, S6, S5, 0xe49, V1406, V1448]

================================

Block 0xe49
[0xe49:0xe49]
---
Predecessors: [0x96e]
Successors: [0xe4a]
---
0xe49 JUMPDEST
---
0xe49: JUMPDEST 
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe4a
[0xe4a:0xe51]
---
Predecessors: [0xe49]
Successors: [0xdae]
---
0xe4a JUMPDEST
0xe4b PUSH1 0x1
0xe4d ADD
0xe4e PUSH2 0xdae
0xe51 JUMP
---
0xe4a: JUMPDEST 
0xe4b: V1450 = 0x1
0xe4d: V1451 = ADD 0x1 S0
0xe4e: V1452 = 0xdae
0xe51: JUMP 0xdae
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V1451]
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, V1451]

================================

Block 0xe52
[0xe52:0xe5b]
---
Predecessors: [0xdae]
Successors: [0xe5c, 0xe64]
---
0xe52 JUMPDEST
0xe53 PUSH1 0x1
0xe55 SLOAD
0xe56 ISZERO
0xe57 ISZERO
0xe58 PUSH2 0xe64
0xe5b JUMPI
---
0xe52: JUMPDEST 
0xe53: V1453 = 0x1
0xe55: V1454 = S[0x1]
0xe56: V1455 = ISZERO V1454
0xe57: V1456 = ISZERO V1455
0xe58: V1457 = 0xe64
0xe5b: JUMPI 0xe64 V1456
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe5c
[0xe5c:0xe63]
---
Predecessors: [0xe52]
Successors: [0xe64]
---
0xe5c PUSH1 0x1
0xe5e DUP1
0xe5f SLOAD
0xe60 DUP2
0xe61 ADD
0xe62 SWAP1
0xe63 SSTORE
---
0xe5c: V1458 = 0x1
0xe5f: V1459 = S[0x1]
0xe61: V1460 = ADD 0x1 V1459
0xe63: S[0x1] = V1460
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe64
[0xe64:0xe64]
---
Predecessors: [0xc9f, 0xe52, 0xe5c]
Successors: [0xe65]
---
0xe64 JUMPDEST
---
0xe64: JUMPDEST 
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe65
[0xe65:0xe65]
---
Predecessors: [0xe64]
Successors: [0xe66]
---
0xe65 JUMPDEST
---
0xe65: JUMPDEST 
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe66
[0xe66:0xe66]
---
Predecessors: [0xe65]
Successors: [0xe67]
---
0xe66 JUMPDEST
---
0xe66: JUMPDEST 
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe67
[0xe67:0xe6a]
---
Predecessors: [0xe66]
Successors: [0x14c]
---
0xe67 JUMPDEST
0xe68 POP
0xe69 POP
0xe6a JUMP
---
0xe67: JUMPDEST 
0xe6a: JUMP S2
---
Entry stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [0x14c, {0x149, 0x718, 0xe49}, S6, S5, S4, S3]

================================

Block 0xe6b
[0xe6b:0xe77]
---
Predecessors: [0x382]
Successors: [0xe78]
---
0xe6b JUMPDEST
0xe6c PUSH1 0x3
0xe6e DUP2
0xe6f DUP2
0xe70 SLOAD
0xe71 DUP2
0xe72 LT
0xe73 ISZERO
0xe74 PUSH2 0x0
0xe77 JUMPI
---
0xe6b: JUMPDEST 
0xe6c: V1461 = 0x3
0xe70: V1462 = S[0x3]
0xe72: V1463 = LT V324 V1462
0xe73: V1464 = ISZERO V1463
0xe74: V1465 = 0x0
0xe77: THROWI V1464
---
Entry stack: [V12, 0x179, V324]
Stack pops: 1
Stack additions: [S0, 0x3, S0]
Exit stack: [V12, 0x179, V324, 0x3, V324]

================================

Block 0xe78
[0xe78:0xe84]
---
Predecessors: [0xe6b]
Successors: [0xe85]
---
0xe78 SWAP1
0xe79 PUSH1 0x0
0xe7b MSTORE
0xe7c PUSH1 0x20
0xe7e PUSH1 0x0
0xe80 SHA3
0xe81 SWAP1
0xe82 ADD
0xe83 PUSH1 0x0
---
0xe79: V1466 = 0x0
0xe7b: M[0x0] = 0x3
0xe7c: V1467 = 0x20
0xe7e: V1468 = 0x0
0xe80: V1469 = SHA3 0x0 0x20
0xe82: V1470 = ADD V324 V1469
0xe83: V1471 = 0x0
---
Entry stack: [V12, 0x179, V324, 0x3, V324]
Stack pops: 2
Stack additions: [V1470, 0x0]
Exit stack: [V12, 0x179, V324, V1470, 0x0]

================================

Block 0xe85
[0xe85:0xe8b]
---
Predecessors: [0xe78]
Successors: [0x179]
---
0xe85 JUMPDEST
0xe86 POP
0xe87 SLOAD
0xe88 SWAP1
0xe89 POP
0xe8a DUP2
0xe8b JUMP
---
0xe85: JUMPDEST 
0xe87: V1472 = S[V1470]
0xe8b: JUMP 0x179
---
Entry stack: [V12, 0x179, V324, V1470, 0x0]
Stack pops: 4
Stack additions: [S3, V1472]
Exit stack: [V12, 0x179, V1472]

================================

Block 0xe8c
[0xe8c:0xea6]
---
Predecessors: [0x3a4]
Successors: [0x198]
---
0xe8c JUMPDEST
0xe8d PUSH1 0xe
0xe8f PUSH1 0x20
0xe91 MSTORE
0xe92 PUSH1 0x0
0xe94 SWAP1
0xe95 DUP2
0xe96 MSTORE
0xe97 PUSH1 0x40
0xe99 SWAP1
0xe9a SHA3
0xe9b SLOAD
0xe9c PUSH1 0x1
0xe9e PUSH1 0xa0
0xea0 PUSH1 0x2
0xea2 EXP
0xea3 SUB
0xea4 AND
0xea5 DUP2
0xea6 JUMP
---
0xe8c: JUMPDEST 
0xe8d: V1473 = 0xe
0xe8f: V1474 = 0x20
0xe91: M[0x20] = 0xe
0xe92: V1475 = 0x0
0xe96: M[0x0] = V342
0xe97: V1476 = 0x40
0xe9a: V1477 = SHA3 0x0 0x40
0xe9b: V1478 = S[V1477]
0xe9c: V1479 = 0x1
0xe9e: V1480 = 0xa0
0xea0: V1481 = 0x2
0xea2: V1482 = EXP 0x2 0xa0
0xea3: V1483 = SUB 0x10000000000000000000000000000000000000000 0x1
0xea4: V1484 = AND 0xffffffffffffffffffffffffffffffffffffffff V1478
0xea6: JUMP 0x198
---
Entry stack: [V12, 0x198, V342]
Stack pops: 2
Stack additions: [S1, V1484]
Exit stack: [V12, 0x198, V1484]

================================

Block 0xea7
[0xea7:0xeb5]
---
Predecessors: [0x3d9]
Successors: [0xeb6, 0xf7a]
---
0xea7 JUMPDEST
0xea8 PUSH1 0x0
0xeaa PUSH1 0x0
0xeac PUSH1 0xa
0xeae SLOAD
0xeaf TIMESTAMP
0xeb0 LT
0xeb1 ISZERO
0xeb2 PUSH2 0xf7a
0xeb5 JUMPI
---
0xea7: JUMPDEST 
0xea8: V1485 = 0x0
0xeaa: V1486 = 0x0
0xeac: V1487 = 0xa
0xeae: V1488 = S[0xa]
0xeaf: V1489 = TIMESTAMP
0xeb0: V1490 = LT V1489 V1488
0xeb1: V1491 = ISZERO V1490
0xeb2: V1492 = 0xf7a
0xeb5: JUMPI 0xf7a V1491
---
Entry stack: [V12, 0x198, V366]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x198, V366, 0x0, 0x0]

================================

Block 0xeb6
[0xeb6:0xedc]
---
Predecessors: [0xea7]
Successors: [0xedd]
---
0xeb6 PUSH1 0xa
0xeb8 SLOAD
0xeb9 PUSH1 0x40
0xebb MLOAD
0xebc PUSH2 0x260
0xebf DUP1
0xec0 PUSH2 0x101e
0xec3 DUP4
0xec4 CODECOPY
0xec5 ADD
0xec6 SWAP1
0xec7 DUP2
0xec8 MSTORE
0xec9 PUSH1 0x40
0xecb MLOAD
0xecc SWAP1
0xecd DUP2
0xece SWAP1
0xecf SUB
0xed0 PUSH1 0x20
0xed2 ADD
0xed3 SWAP1
0xed4 PUSH1 0x0
0xed6 CREATE
0xed7 DUP1
0xed8 ISZERO
0xed9 PUSH2 0x0
0xedc JUMPI
---
0xeb6: V1493 = 0xa
0xeb8: V1494 = S[0xa]
0xeb9: V1495 = 0x40
0xebb: V1496 = M[0x40]
0xebc: V1497 = 0x260
0xec0: V1498 = 0x101e
0xec4: CODECOPY V1496 0x101e 0x260
0xec5: V1499 = ADD 0x260 V1496
0xec8: M[V1499] = V1494
0xec9: V1500 = 0x40
0xecb: V1501 = M[0x40]
0xecf: V1502 = SUB V1499 V1501
0xed0: V1503 = 0x20
0xed2: V1504 = ADD 0x20 V1502
0xed4: V1505 = 0x0
0xed6: V1506 = CREATE 0x0 V1501 V1504
0xed8: V1507 = ISZERO V1506
0xed9: V1508 = 0x0
0xedc: THROWI V1507
---
Entry stack: [V12, 0x198, V366, 0x0, 0x0]
Stack pops: 0
Stack additions: [V1506]
Exit stack: [V12, 0x198, V366, 0x0, 0x0, V1506]

================================

Block 0xedd
[0xedd:0xef5]
---
Predecessors: [0xeb6]
Successors: [0xef6, 0xf20]
---
0xedd SWAP1
0xede POP
0xedf PUSH1 0x10
0xee1 DUP1
0xee2 SLOAD
0xee3 DUP1
0xee4 PUSH1 0x1
0xee6 ADD
0xee7 DUP3
0xee8 DUP2
0xee9 DUP2
0xeea SLOAD
0xeeb DUP2
0xeec DUP4
0xeed SSTORE
0xeee DUP2
0xeef DUP2
0xef0 ISZERO
0xef1 GT
0xef2 PUSH2 0xf20
0xef5 JUMPI
---
0xedf: V1509 = 0x10
0xee2: V1510 = S[0x10]
0xee4: V1511 = 0x1
0xee6: V1512 = ADD 0x1 V1510
0xeea: V1513 = S[0x10]
0xeed: S[0x10] = V1512
0xef0: V1514 = ISZERO V1513
0xef1: V1515 = GT V1514 V1512
0xef2: V1516 = 0xf20
0xef5: JUMPI 0xf20 V1515
---
Entry stack: [V12, 0x198, V366, 0x0, 0x0, V1506]
Stack pops: 2
Stack additions: [S0, 0x10, V1510, V1512, 0x10, V1512, V1513]
Exit stack: [V12, 0x198, V366, 0x0, V1506, 0x10, V1510, V1512, 0x10, V1512, V1513]

================================

Block 0xef6
[0xef6:0xf07]
---
Predecessors: [0xedd]
Successors: [0xf08]
---
0xef6 PUSH1 0x0
0xef8 DUP4
0xef9 DUP2
0xefa MSTORE
0xefb PUSH1 0x20
0xefd SWAP1
0xefe SHA3
0xeff PUSH2 0xf20
0xf02 SWAP2
0xf03 DUP2
0xf04 ADD
0xf05 SWAP1
0xf06 DUP4
0xf07 ADD
---
0xef6: V1517 = 0x0
0xefa: M[0x0] = 0x10
0xefb: V1518 = 0x20
0xefe: V1519 = SHA3 0x0 0x20
0xeff: V1520 = 0xf20
0xf04: V1521 = ADD V1519 V1513
0xf07: V1522 = ADD V1512 V1519
---
Entry stack: [V12, 0x198, V366, 0x0, V1506, 0x10, V1510, V1512, 0x10, V1512, V1513]
Stack pops: 3
Stack additions: [S2, S1, 0xf20, V1521, V1522]
Exit stack: [V12, 0x198, V366, 0x0, V1506, 0x10, V1510, V1512, 0x10, V1512, 0xf20, V1521, V1522]

================================

Block 0xf08
[0xf08:0xf10]
---
Predecessors: [0xef6]
Successors: [0xa56, 0xf11]
---
0xf08 JUMPDEST
0xf09 DUP1
0xf0a DUP3
0xf0b GT
0xf0c ISZERO
0xf0d PUSH2 0xa56
0xf10 JUMPI
---
0xf08: JUMPDEST 
0xf0b: V1523 = GT V1521 V1522
0xf0c: V1524 = ISZERO V1523
0xf0d: V1525 = 0xa56
0xf10: JUMPI 0xa56 V1524
---
Entry stack: [V12, 0x198, V366, 0x0, V1506, 0x10, V1510, V1512, 0x10, V1512, 0xf20, V1521, V1522]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x198, V366, 0x0, V1506, 0x10, V1510, V1512, 0x10, V1512, 0xf20, V1521, V1522]

================================

Block 0xf11
[0xf11:0xf1b]
---
Predecessors: [0xf08]
Successors: [0xa42]
---
0xf11 PUSH1 0x0
0xf13 DUP2
0xf14 SSTORE
0xf15 PUSH1 0x1
0xf17 ADD
0xf18 PUSH2 0xa42
0xf1b JUMP
---
0xf11: V1526 = 0x0
0xf14: S[V1522] = 0x0
0xf15: V1527 = 0x1
0xf17: V1528 = ADD 0x1 V1522
0xf18: V1529 = 0xa42
0xf1b: JUMP 0xa42
---
Entry stack: [V12, 0x198, V366, 0x0, V1506, 0x10, V1510, V1512, 0x10, V1512, 0xf20, V1521, V1522]
Stack pops: 1
Stack additions: [V1528]
Exit stack: [V12, 0x198, V366, 0x0, V1506, 0x10, V1510, V1512, 0x10, V1512, 0xf20, V1521, V1528]

================================

Block 0xf1c
[0xf1c:0xf1f]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0xf1c JUMPDEST
0xf1d POP
0xf1e SWAP1
0xf1f JUMP
---
0xf1c: JUMPDEST 
0xf1f: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xf20
[0xf20:0xf20]
---
Predecessors: [0xa56, 0xedd]
Successors: [0xf21]
---
0xf20 JUMPDEST
---
0xf20: JUMPDEST 
---
Entry stack: [V12, S10, S9, S8, S7, S6, {0x4, 0x5, 0x10}, S4, S3, {0x4, 0x5, 0x10}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, {0x4, 0x5, 0x10}, S4, S3, {0x4, 0x5, 0x10}, S1, S0]

================================

Block 0xf21
[0xf21:0xf31]
---
Predecessors: [0xf20]
Successors: [0xf32]
---
0xf21 JUMPDEST
0xf22 POP
0xf23 POP
0xf24 POP
0xf25 SWAP2
0xf26 PUSH1 0x0
0xf28 MSTORE
0xf29 PUSH1 0x20
0xf2b PUSH1 0x0
0xf2d SHA3
0xf2e SWAP1
0xf2f ADD
0xf30 PUSH1 0x0
---
0xf21: JUMPDEST 
0xf26: V1530 = 0x0
0xf28: M[0x0] = {0x4, 0x5, 0x10}
0xf29: V1531 = 0x20
0xf2b: V1532 = 0x0
0xf2d: V1533 = SHA3 0x0 0x20
0xf2f: V1534 = ADD S4 V1533
0xf30: V1535 = 0x0
---
Entry stack: [V12, S10, S9, S8, S7, S6, {0x4, 0x5, 0x10}, S4, S3, {0x4, 0x5, 0x10}, S1, S0]
Stack pops: 6
Stack additions: [S3, V1534, 0x0]
Exit stack: [V12, S10, S9, S8, S7, S6, S3, V1534, 0x0]

================================

Block 0xf32
[0xf32:0xf79]
---
Predecessors: [0xf21]
Successors: [0xf7a]
---
0xf32 JUMPDEST
0xf33 DUP2
0xf34 SLOAD
0xf35 PUSH2 0x100
0xf38 SWAP2
0xf39 SWAP1
0xf3a SWAP2
0xf3b EXP
0xf3c PUSH1 0x1
0xf3e PUSH1 0xa0
0xf40 PUSH1 0x2
0xf42 EXP
0xf43 SUB
0xf44 DUP2
0xf45 DUP2
0xf46 MUL
0xf47 NOT
0xf48 SWAP1
0xf49 SWAP3
0xf4a AND
0xf4b DUP6
0xf4c DUP4
0xf4d AND
0xf4e SWAP2
0xf4f DUP3
0xf50 MUL
0xf51 OR
0xf52 SWAP1
0xf53 SWAP3
0xf54 SSTORE
0xf55 DUP6
0xf56 AND
0xf57 PUSH1 0x0
0xf59 SWAP1
0xf5a DUP2
0xf5b MSTORE
0xf5c PUSH1 0xe
0xf5e PUSH1 0x20
0xf60 MSTORE
0xf61 PUSH1 0x40
0xf63 SWAP1
0xf64 SHA3
0xf65 DUP1
0xf66 SLOAD
0xf67 PUSH1 0x1
0xf69 PUSH1 0xa0
0xf6b PUSH1 0x2
0xf6d EXP
0xf6e SUB
0xf6f NOT
0xf70 AND
0xf71 SWAP1
0xf72 SWAP2
0xf73 OR
0xf74 SWAP1
0xf75 SSTORE
0xf76 POP
0xf77 SWAP1
0xf78 POP
0xf79 DUP1
---
0xf32: JUMPDEST 
0xf34: V1536 = S[V1534]
0xf35: V1537 = 0x100
0xf3b: V1538 = EXP 0x100 0x0
0xf3c: V1539 = 0x1
0xf3e: V1540 = 0xa0
0xf40: V1541 = 0x2
0xf42: V1542 = EXP 0x2 0xa0
0xf43: V1543 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf46: V1544 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xf47: V1545 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf4a: V1546 = AND V1536 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xf4d: V1547 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xf50: V1548 = MUL V1547 0x1
0xf51: V1549 = OR V1548 V1546
0xf54: S[V1534] = V1549
0xf56: V1550 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0xf57: V1551 = 0x0
0xf5b: M[0x0] = V1550
0xf5c: V1552 = 0xe
0xf5e: V1553 = 0x20
0xf60: M[0x20] = 0xe
0xf61: V1554 = 0x40
0xf64: V1555 = SHA3 0x0 0x40
0xf66: V1556 = S[V1555]
0xf67: V1557 = 0x1
0xf69: V1558 = 0xa0
0xf6b: V1559 = 0x2
0xf6d: V1560 = EXP 0x2 0xa0
0xf6e: V1561 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf6f: V1562 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf70: V1563 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1556
0xf73: V1564 = OR V1547 V1563
0xf75: S[V1555] = V1564
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, V1534, 0x0]
Stack pops: 6
Stack additions: [S5, S3, S3]
Exit stack: [V12, S7, S6, S5, S3, S3]

================================

Block 0xf7a
[0xf7a:0xf7a]
---
Predecessors: [0xea7, 0xf32]
Successors: [0xf7b]
---
0xf7a JUMPDEST
---
0xf7a: JUMPDEST 
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0xf7b
[0xf7b:0xf7b]
---
Predecessors: [0xf7a]
Successors: [0xf7c]
---
0xf7b JUMPDEST
---
0xf7b: JUMPDEST 
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0xf7c
[0xf7c:0xf81]
---
Predecessors: [0xf7b]
Successors: [0x198]
---
0xf7c JUMPDEST
0xf7d POP
0xf7e SWAP2
0xf7f SWAP1
0xf80 POP
0xf81 JUMP
---
0xf7c: JUMPDEST 
0xf81: JUMP S3
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, S4, S1]

================================

Block 0xf82
[0xf82:0xf87]
---
Predecessors: [0x40e]
Successors: [0x179]
---
0xf82 JUMPDEST
0xf83 PUSH1 0xa
0xf85 SLOAD
0xf86 DUP2
0xf87 JUMP
---
0xf82: JUMPDEST 
0xf83: V1565 = 0xa
0xf85: V1566 = S[0xa]
0xf87: JUMP 0x179
---
Entry stack: [V12, 0x179]
Stack pops: 1
Stack additions: [S0, V1566]
Exit stack: [V12, 0x179, V1566]

================================

Block 0xf88
[0xf88:0xf91]
---
Predecessors: [0x42d]
Successors: [0x149, 0xf92]
---
0xf88 JUMPDEST
0xf89 PUSH1 0x9
0xf8b SLOAD
0xf8c TIMESTAMP
0xf8d LT
0xf8e PUSH2 0x149
0xf91 JUMPI
---
0xf88: JUMPDEST 
0xf89: V1567 = 0x9
0xf8b: V1568 = S[0x9]
0xf8c: V1569 = TIMESTAMP
0xf8d: V1570 = LT V1569 V1568
0xf8e: V1571 = 0x149
0xf91: JUMPI 0x149 V1570
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c]

================================

Block 0xf92
[0xf92:0xfa8]
---
Predecessors: [0xf88]
Successors: [0x149, 0xfa9]
---
0xf92 PUSH1 0x6
0xf94 SLOAD
0xf95 CALLER
0xf96 PUSH1 0x1
0xf98 PUSH1 0xa0
0xf9a PUSH1 0x2
0xf9c EXP
0xf9d SUB
0xf9e SWAP1
0xf9f DUP2
0xfa0 AND
0xfa1 SWAP2
0xfa2 AND
0xfa3 EQ
0xfa4 ISZERO
0xfa5 PUSH2 0x149
0xfa8 JUMPI
---
0xf92: V1572 = 0x6
0xf94: V1573 = S[0x6]
0xf95: V1574 = CALLER
0xf96: V1575 = 0x1
0xf98: V1576 = 0xa0
0xf9a: V1577 = 0x2
0xf9c: V1578 = EXP 0x2 0xa0
0xf9d: V1579 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfa0: V1580 = AND 0xffffffffffffffffffffffffffffffffffffffff V1574
0xfa2: V1581 = AND V1573 0xffffffffffffffffffffffffffffffffffffffff
0xfa3: V1582 = EQ V1581 V1580
0xfa4: V1583 = ISZERO V1582
0xfa5: V1584 = 0x149
0xfa8: JUMPI 0x149 V1583
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c]

================================

Block 0xfa9
[0xfa9:0xfd8]
---
Predecessors: [0xf92]
Successors: [0x149, 0xfd9]
---
0xfa9 PUSH1 0x6
0xfab SLOAD
0xfac PUSH1 0x8
0xfae SLOAD
0xfaf PUSH1 0x40
0xfb1 MLOAD
0xfb2 PUSH1 0x1
0xfb4 PUSH1 0xa0
0xfb6 PUSH1 0x2
0xfb8 EXP
0xfb9 SUB
0xfba SWAP1
0xfbb SWAP3
0xfbc AND
0xfbd SWAP2
0xfbe DUP2
0xfbf ISZERO
0xfc0 PUSH2 0x8fc
0xfc3 MUL
0xfc4 SWAP2
0xfc5 SWAP1
0xfc6 PUSH1 0x0
0xfc8 DUP2
0xfc9 DUP2
0xfca DUP2
0xfcb DUP6
0xfcc DUP9
0xfcd DUP9
0xfce CALL
0xfcf SWAP4
0xfd0 POP
0xfd1 POP
0xfd2 POP
0xfd3 POP
0xfd4 ISZERO
0xfd5 PUSH2 0x149
0xfd8 JUMPI
---
0xfa9: V1585 = 0x6
0xfab: V1586 = S[0x6]
0xfac: V1587 = 0x8
0xfae: V1588 = S[0x8]
0xfaf: V1589 = 0x40
0xfb1: V1590 = M[0x40]
0xfb2: V1591 = 0x1
0xfb4: V1592 = 0xa0
0xfb6: V1593 = 0x2
0xfb8: V1594 = EXP 0x2 0xa0
0xfb9: V1595 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfbc: V1596 = AND V1586 0xffffffffffffffffffffffffffffffffffffffff
0xfbf: V1597 = ISZERO V1588
0xfc0: V1598 = 0x8fc
0xfc3: V1599 = MUL 0x8fc V1597
0xfc6: V1600 = 0x0
0xfce: V1601 = CALL V1599 V1596 V1588 V1590 0x0 V1590 0x0
0xfd4: V1602 = ISZERO V1601
0xfd5: V1603 = 0x149
0xfd8: JUMPI 0x149 V1602
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c]

================================

Block 0xfd9
[0xfd9:0x1016]
---
Predecessors: [0xfa9]
Successors: [0x1017]
---
0xfd9 PUSH1 0x6
0xfdb SLOAD
0xfdc PUSH1 0x8
0xfde SLOAD
0xfdf PUSH1 0x40
0xfe1 DUP1
0xfe2 MLOAD
0xfe3 PUSH1 0x1
0xfe5 PUSH1 0xa0
0xfe7 PUSH1 0x2
0xfe9 EXP
0xfea SUB
0xfeb SWAP1
0xfec SWAP4
0xfed AND
0xfee DUP4
0xfef MSTORE
0xff0 PUSH1 0x20
0xff2 DUP4
0xff3 ADD
0xff4 SWAP2
0xff5 SWAP1
0xff6 SWAP2
0xff7 MSTORE
0xff8 PUSH1 0x0
0xffa DUP3
0xffb DUP3
0xffc ADD
0xffd MSTORE
0xffe MLOAD
0xfff PUSH1 0x0
0x1001 DUP1
0x1002 MLOAD
0x1003 PUSH1 0x20
0x1005 PUSH2 0x127e
0x1008 DUP4
0x1009 CODECOPY
0x100a DUP2
0x100b MLOAD
0x100c SWAP2
0x100d MSTORE
0x100e SWAP2
0x100f DUP2
0x1010 SWAP1
0x1011 SUB
0x1012 PUSH1 0x60
0x1014 ADD
0x1015 SWAP1
0x1016 LOG1
---
0xfd9: V1604 = 0x6
0xfdb: V1605 = S[0x6]
0xfdc: V1606 = 0x8
0xfde: V1607 = S[0x8]
0xfdf: V1608 = 0x40
0xfe2: V1609 = M[0x40]
0xfe3: V1610 = 0x1
0xfe5: V1611 = 0xa0
0xfe7: V1612 = 0x2
0xfe9: V1613 = EXP 0x2 0xa0
0xfea: V1614 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfed: V1615 = AND V1605 0xffffffffffffffffffffffffffffffffffffffff
0xfef: M[V1609] = V1615
0xff0: V1616 = 0x20
0xff3: V1617 = ADD V1609 0x20
0xff7: M[V1617] = V1607
0xff8: V1618 = 0x0
0xffc: V1619 = ADD 0x40 V1609
0xffd: M[V1619] = 0x0
0xffe: V1620 = M[0x40]
0xfff: V1621 = 0x0
0x1002: V1622 = M[0x0]
0x1003: V1623 = 0x20
0x1005: V1624 = 0x127e
0x1009: CODECOPY 0x0 0x127e 0x20
0x100b: V1625 = M[0x0]
0x100d: M[0x0] = V1622
0x1011: V1626 = SUB V1609 V1620
0x1012: V1627 = 0x60
0x1014: V1628 = ADD 0x60 V1626
0x1016: LOG V1620 V1628 V1625
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c]

================================

Block 0x1017
[0x1017:0x1017]
---
Predecessors: [0xfd9]
Successors: [0x1018]
---
0x1017 JUMPDEST
---
0x1017: JUMPDEST 
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c]

================================

Block 0x1018
[0x1018:0x1018]
---
Predecessors: [0x1017]
Successors: [0x1019]
---
0x1018 JUMPDEST
---
0x1018: JUMPDEST 
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c]

================================

Block 0x1019
[0x1019:0x1019]
---
Predecessors: [0x1018]
Successors: [0x101a]
---
0x1019 JUMPDEST
---
0x1019: JUMPDEST 
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c]

================================

Block 0x101a
[0x101a:0x101a]
---
Predecessors: [0x1019]
Successors: [0x101b]
---
0x101a JUMPDEST
---
0x101a: JUMPDEST 
---
Entry stack: [V12, 0x14c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14c]

================================

Block 0x101b
[0x101b:0x101c]
---
Predecessors: [0x101a]
Successors: [0x14c]
---
0x101b JUMPDEST
0x101c JUMP
---
0x101b: JUMPDEST 
0x101c: JUMP 0x14c
---
Entry stack: [V12, 0x14c]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x101d
[0x101d:0x103f]
---
Predecessors: []
Successors: [0x1040]
---
0x101d STOP
0x101e PUSH1 0x60
0x1020 PUSH1 0x40
0x1022 MSTORE
0x1023 PUSH8 0x10a741a46278000
0x102c PUSH1 0x2
0x102e SSTORE
0x102f PUSH1 0x40
0x1031 MLOAD
0x1032 PUSH1 0x20
0x1034 DUP1
0x1035 PUSH2 0x260
0x1038 DUP4
0x1039 CODECOPY
0x103a DUP2
0x103b ADD
0x103c PUSH1 0x40
0x103e MSTORE
0x103f MLOAD
---
0x101d: STOP 
0x101e: V1629 = 0x60
0x1020: V1630 = 0x40
0x1022: M[0x40] = 0x60
0x1023: V1631 = 0x10a741a46278000
0x102c: V1632 = 0x2
0x102e: S[0x2] = 0x10a741a46278000
0x102f: V1633 = 0x40
0x1031: V1634 = M[0x40]
0x1032: V1635 = 0x20
0x1035: V1636 = 0x260
0x1039: CODECOPY V1634 0x260 0x20
0x103b: V1637 = ADD V1634 0x20
0x103c: V1638 = 0x40
0x103e: M[0x40] = V1637
0x103f: V1639 = M[V1634]
---
Entry stack: []
Stack pops: 0
Stack additions: [V1639]
Exit stack: []

================================

Block 0x1040
[0x1040:0x1040]
---
Predecessors: [0x101d]
Successors: [0x1041]
---
0x1040 JUMPDEST
---
0x1040: JUMPDEST 
---
Entry stack: [V1639]
Stack pops: 0
Stack additions: []
Exit stack: [V1639]

================================

Block 0x1041
[0x1041:0x105c]
---
Predecessors: [0x1040]
Successors: [0x105d]
---
0x1041 JUMPDEST
0x1042 PUSH1 0x0
0x1044 DUP1
0x1045 SLOAD
0x1046 PUSH1 0x1
0x1048 PUSH1 0xa0
0x104a PUSH1 0x2
0x104c EXP
0x104d SUB
0x104e NOT
0x104f AND
0x1050 CALLER
0x1051 PUSH1 0x1
0x1053 PUSH1 0xa0
0x1055 PUSH1 0x2
0x1057 EXP
0x1058 SUB
0x1059 AND
0x105a OR
0x105b SWAP1
0x105c SSTORE
---
0x1041: JUMPDEST 
0x1042: V1640 = 0x0
0x1045: V1641 = S[0x0]
0x1046: V1642 = 0x1
0x1048: V1643 = 0xa0
0x104a: V1644 = 0x2
0x104c: V1645 = EXP 0x2 0xa0
0x104d: V1646 = SUB 0x10000000000000000000000000000000000000000 0x1
0x104e: V1647 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x104f: V1648 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1641
0x1050: V1649 = CALLER
0x1051: V1650 = 0x1
0x1053: V1651 = 0xa0
0x1055: V1652 = 0x2
0x1057: V1653 = EXP 0x2 0xa0
0x1058: V1654 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1059: V1655 = AND 0xffffffffffffffffffffffffffffffffffffffff V1649
0x105a: V1656 = OR V1655 V1648
0x105c: S[0x0] = V1656
---
Entry stack: [V1639]
Stack pops: 0
Stack additions: []
Exit stack: [V1639]

================================

Block 0x105d
[0x105d:0x1062]
---
Predecessors: [0x1041]
Successors: [0x1063]
---
0x105d JUMPDEST
0x105e PUSH1 0x1
0x1060 DUP2
0x1061 SWAP1
0x1062 SSTORE
---
0x105d: JUMPDEST 
0x105e: V1657 = 0x1
0x1062: S[0x1] = V1639
---
Entry stack: [V1639]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1639]

================================

Block 0x1063
[0x1063:0x1064]
---
Predecessors: [0x105d]
Successors: [0x1065]
---
0x1063 JUMPDEST
0x1064 POP
---
0x1063: JUMPDEST 
---
Entry stack: [V1639]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1065
[0x1065:0x107e]
---
Predecessors: [0x1063]
Successors: [0x107f]
---
0x1065 JUMPDEST
0x1066 PUSH2 0x20a
0x1069 DUP1
0x106a PUSH2 0x56
0x106d PUSH1 0x0
0x106f CODECOPY
0x1070 PUSH1 0x0
0x1072 RETURN
0x1073 STOP
0x1074 PUSH1 0x60
0x1076 PUSH1 0x40
0x1078 MSTORE
0x1079 CALLDATASIZE
0x107a ISZERO
0x107b PUSH2 0x3b
0x107e JUMPI
---
0x1065: JUMPDEST 
0x1066: V1658 = 0x20a
0x106a: V1659 = 0x56
0x106d: V1660 = 0x0
0x106f: CODECOPY 0x0 0x56 0x20a
0x1070: V1661 = 0x0
0x1072: RETURN 0x0 0x20a
0x1073: STOP 
0x1074: V1662 = 0x60
0x1076: V1663 = 0x40
0x1078: M[0x40] = 0x60
0x1079: V1664 = CALLDATASIZE
0x107a: V1665 = ISZERO V1664
0x107b: V1666 = 0x3b
0x107e: THROWI V1665
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x107f
[0x107f:0x1098]
---
Predecessors: [0x1065]
Successors: [0x1099]
---
0x107f PUSH4 0xffffffff
0x1084 PUSH1 0xe0
0x1086 PUSH1 0x2
0x1088 EXP
0x1089 PUSH1 0x0
0x108b CALLDATALOAD
0x108c DIV
0x108d AND
0x108e PUSH4 0x8da5cb5b
0x1093 DUP2
0x1094 EQ
0x1095 PUSH2 0xd2
0x1098 JUMPI
---
0x107f: V1667 = 0xffffffff
0x1084: V1668 = 0xe0
0x1086: V1669 = 0x2
0x1088: V1670 = EXP 0x2 0xe0
0x1089: V1671 = 0x0
0x108b: V1672 = CALLDATALOAD 0x0
0x108c: V1673 = DIV V1672 0x100000000000000000000000000000000000000000000000000000000
0x108d: V1674 = AND V1673 0xffffffff
0x108e: V1675 = 0x8da5cb5b
0x1094: V1676 = EQ V1674 0x8da5cb5b
0x1095: V1677 = 0xd2
0x1098: THROWI V1676
---
Entry stack: []
Stack pops: 0
Stack additions: [V1674]
Exit stack: [V1674]

================================

Block 0x1099
[0x1099:0x10a3]
---
Predecessors: [0x107f]
Successors: [0x10a4]
---
0x1099 DUP1
0x109a PUSH4 0xa6f9dae1
0x109f EQ
0x10a0 PUSH2 0xfb
0x10a3 JUMPI
---
0x109a: V1678 = 0xa6f9dae1
0x109f: V1679 = EQ 0xa6f9dae1 V1674
0x10a0: V1680 = 0xfb
0x10a3: THROWI V1679
---
Entry stack: [V1674]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1674]

================================

Block 0x10a4
[0x10a4:0x10ae]
---
Predecessors: [0x1099]
Successors: [0x10af]
---
0x10a4 DUP1
0x10a5 PUSH4 0xb808b43d
0x10aa EQ
0x10ab PUSH2 0x116
0x10ae JUMPI
---
0x10a5: V1681 = 0xb808b43d
0x10aa: V1682 = EQ 0xb808b43d V1674
0x10ab: V1683 = 0x116
0x10ae: THROWI V1682
---
Entry stack: [V1674]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1674]

================================

Block 0x10af
[0x10af:0x10b2]
---
Predecessors: [0x10a4]
Successors: [0x10b3]
---
0x10af JUMPDEST
0x10b0 PUSH2 0xd0
---
0x10af: JUMPDEST 
0x10b0: V1684 = 0xd0
---
Entry stack: [V1674]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V1674, 0xd0]

================================

Block 0x10b3
[0x10b3:0x10bc]
---
Predecessors: [0x10af]
Successors: [0x10bd]
---
0x10b3 JUMPDEST
0x10b4 PUSH1 0x1
0x10b6 SLOAD
0x10b7 TIMESTAMP
0x10b8 LT
0x10b9 PUSH2 0x4d
0x10bc JUMPI
---
0x10b3: JUMPDEST 
0x10b4: V1685 = 0x1
0x10b6: V1686 = S[0x1]
0x10b7: V1687 = TIMESTAMP
0x10b8: V1688 = LT V1687 V1686
0x10b9: V1689 = 0x4d
0x10bc: THROWI V1688
---
Entry stack: [V1674, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V1674, 0xd0]

================================

Block 0x10bd
[0x10bd:0x10cb]
---
Predecessors: [0x10b3]
Successors: [0x10cc]
---
0x10bd PUSH2 0x0
0x10c0 JUMP
0x10c1 JUMPDEST
0x10c2 PUSH1 0x2
0x10c4 SLOAD
0x10c5 CALLVALUE
0x10c6 LT
0x10c7 ISZERO
0x10c8 PUSH2 0x5c
0x10cb JUMPI
---
0x10bd: V1690 = 0x0
0x10c0: THROW 
0x10c1: JUMPDEST 
0x10c2: V1691 = 0x2
0x10c4: V1692 = S[0x2]
0x10c5: V1693 = CALLVALUE
0x10c6: V1694 = LT V1693 V1692
0x10c7: V1695 = ISZERO V1694
0x10c8: V1696 = 0x5c
0x10cb: THROWI V1695
---
Entry stack: [V1674, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x10cc
[0x10cc:0x1133]
---
Predecessors: [0x10bd]
Successors: [0x1134]
---
0x10cc PUSH2 0x0
0x10cf JUMP
0x10d0 JUMPDEST
0x10d1 PUSH1 0x0
0x10d3 DUP1
0x10d4 SLOAD
0x10d5 PUSH1 0x40
0x10d7 DUP1
0x10d8 MLOAD
0x10d9 PUSH32 0x888921800000000000000000000000000000000000000000000000000000000
0x10fa DUP2
0x10fb MSTORE
0x10fc PUSH1 0x1
0x10fe PUSH1 0xa0
0x1100 PUSH1 0x2
0x1102 EXP
0x1103 SUB
0x1104 CALLER
0x1105 DUP2
0x1106 AND
0x1107 PUSH1 0x4
0x1109 DUP4
0x110a ADD
0x110b MSTORE
0x110c CALLVALUE
0x110d PUSH1 0x24
0x110f DUP4
0x1110 ADD
0x1111 MSTORE
0x1112 SWAP2
0x1113 MLOAD
0x1114 SWAP2
0x1115 SWAP1
0x1116 SWAP3
0x1117 AND
0x1118 SWAP3
0x1119 PUSH4 0x8889218
0x111e SWAP3
0x111f PUSH1 0x44
0x1121 DUP1
0x1122 DUP3
0x1123 ADD
0x1124 SWAP4
0x1125 SWAP2
0x1126 DUP3
0x1127 SWAP1
0x1128 SUB
0x1129 ADD
0x112a DUP2
0x112b DUP4
0x112c DUP8
0x112d DUP1
0x112e EXTCODESIZE
0x112f ISZERO
0x1130 PUSH2 0x0
0x1133 JUMPI
---
0x10cc: V1697 = 0x0
0x10cf: THROW 
0x10d0: JUMPDEST 
0x10d1: V1698 = 0x0
0x10d4: V1699 = S[0x0]
0x10d5: V1700 = 0x40
0x10d8: V1701 = M[0x40]
0x10d9: V1702 = 0x888921800000000000000000000000000000000000000000000000000000000
0x10fb: M[V1701] = 0x888921800000000000000000000000000000000000000000000000000000000
0x10fc: V1703 = 0x1
0x10fe: V1704 = 0xa0
0x1100: V1705 = 0x2
0x1102: V1706 = EXP 0x2 0xa0
0x1103: V1707 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1104: V1708 = CALLER
0x1106: V1709 = AND 0xffffffffffffffffffffffffffffffffffffffff V1708
0x1107: V1710 = 0x4
0x110a: V1711 = ADD V1701 0x4
0x110b: M[V1711] = V1709
0x110c: V1712 = CALLVALUE
0x110d: V1713 = 0x24
0x1110: V1714 = ADD V1701 0x24
0x1111: M[V1714] = V1712
0x1113: V1715 = M[0x40]
0x1117: V1716 = AND V1699 0xffffffffffffffffffffffffffffffffffffffff
0x1119: V1717 = 0x8889218
0x111f: V1718 = 0x44
0x1123: V1719 = ADD V1701 0x44
0x1128: V1720 = SUB V1701 V1715
0x1129: V1721 = ADD V1720 0x44
0x112e: V1722 = EXTCODESIZE V1716
0x112f: V1723 = ISZERO V1722
0x1130: V1724 = 0x0
0x1133: THROWI V1723
---
Entry stack: []
Stack pops: 0
Stack additions: [V1716, 0x0, V1715, V1721, V1715, 0x0, V1719, 0x8889218, V1716]
Exit stack: []

================================

Block 0x1134
[0x1134:0x113d]
---
Predecessors: [0x10cc]
Successors: [0x113e]
---
0x1134 PUSH1 0x32
0x1136 GAS
0x1137 SUB
0x1138 CALL
0x1139 ISZERO
0x113a PUSH2 0x0
0x113d JUMPI
---
0x1134: V1725 = 0x32
0x1136: V1726 = GAS
0x1137: V1727 = SUB V1726 0x32
0x1138: V1728 = CALL V1727 V1716 0x0 V1715 V1721 V1715 0x0
0x1139: V1729 = ISZERO V1728
0x113a: V1730 = 0x0
0x113d: THROWI V1729
---
Entry stack: [V1716, 0x8889218, V1719, 0x0, V1715, V1721, V1715, 0x0, V1716]
Stack pops: 6
Stack additions: []
Exit stack: [V1716, 0x8889218, V1719]

================================

Block 0x113e
[0x113e:0x1140]
---
Predecessors: [0x1134]
Successors: [0x1141]
---
0x113e POP
0x113f POP
0x1140 POP
---
0x113e: NOP 
---
Entry stack: [V1716, 0x8889218, V1719]
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x1141
[0x1141:0x1141]
---
Predecessors: [0x113e]
Successors: [0x1142]
---
0x1141 JUMPDEST
---
0x1141: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1142
[0x1142:0x114b]
---
Predecessors: [0x1141]
Successors: [0x114c]
---
0x1142 JUMPDEST
0x1143 JUMP
0x1144 JUMPDEST
0x1145 STOP
0x1146 JUMPDEST
0x1147 CALLVALUE
0x1148 PUSH2 0x0
0x114b JUMPI
---
0x1142: JUMPDEST 
0x1143: JUMP S0
0x1144: JUMPDEST 
0x1145: STOP 
0x1146: JUMPDEST 
0x1147: V1731 = CALLVALUE
0x1148: V1732 = 0x0
0x114b: THROWI V1731
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x114c
[0x114c:0x1174]
---
Predecessors: [0x1142]
Successors: [0x1175]
---
0x114c PUSH2 0xdf
0x114f PUSH2 0x125
0x1152 JUMP
0x1153 JUMPDEST
0x1154 PUSH1 0x40
0x1156 DUP1
0x1157 MLOAD
0x1158 PUSH1 0x1
0x115a PUSH1 0xa0
0x115c PUSH1 0x2
0x115e EXP
0x115f SUB
0x1160 SWAP1
0x1161 SWAP3
0x1162 AND
0x1163 DUP3
0x1164 MSTORE
0x1165 MLOAD
0x1166 SWAP1
0x1167 DUP2
0x1168 SWAP1
0x1169 SUB
0x116a PUSH1 0x20
0x116c ADD
0x116d SWAP1
0x116e RETURN
0x116f JUMPDEST
0x1170 CALLVALUE
0x1171 PUSH2 0x0
0x1174 JUMPI
---
0x114c: V1733 = 0xdf
0x114f: V1734 = 0x125
0x1152: THROW 
0x1153: JUMPDEST 
0x1154: V1735 = 0x40
0x1157: V1736 = M[0x40]
0x1158: V1737 = 0x1
0x115a: V1738 = 0xa0
0x115c: V1739 = 0x2
0x115e: V1740 = EXP 0x2 0xa0
0x115f: V1741 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1162: V1742 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1164: M[V1736] = V1742
0x1165: V1743 = M[0x40]
0x1169: V1744 = SUB V1736 V1743
0x116a: V1745 = 0x20
0x116c: V1746 = ADD 0x20 V1744
0x116e: RETURN V1743 V1746
0x116f: JUMPDEST 
0x1170: V1747 = CALLVALUE
0x1171: V1748 = 0x0
0x1174: THROWI V1747
---
Entry stack: []
Stack pops: 0
Stack additions: [0xdf]
Exit stack: []

================================

Block 0x1175
[0x1175:0x118f]
---
Predecessors: [0x114c]
Successors: [0x1190]
---
0x1175 PUSH2 0xd0
0x1178 PUSH1 0x1
0x117a PUSH1 0xa0
0x117c PUSH1 0x2
0x117e EXP
0x117f SUB
0x1180 PUSH1 0x4
0x1182 CALLDATALOAD
0x1183 AND
0x1184 PUSH2 0x134
0x1187 JUMP
0x1188 JUMPDEST
0x1189 STOP
0x118a JUMPDEST
0x118b CALLVALUE
0x118c PUSH2 0x0
0x118f JUMPI
---
0x1175: V1749 = 0xd0
0x1178: V1750 = 0x1
0x117a: V1751 = 0xa0
0x117c: V1752 = 0x2
0x117e: V1753 = EXP 0x2 0xa0
0x117f: V1754 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1180: V1755 = 0x4
0x1182: V1756 = CALLDATALOAD 0x4
0x1183: V1757 = AND V1756 0xffffffffffffffffffffffffffffffffffffffff
0x1184: V1758 = 0x134
0x1187: THROW 
0x1188: JUMPDEST 
0x1189: STOP 
0x118a: JUMPDEST 
0x118b: V1759 = CALLVALUE
0x118c: V1760 = 0x0
0x118f: THROWI V1759
---
Entry stack: []
Stack pops: 0
Stack additions: [0xd0, V1757]
Exit stack: []

================================

Block 0x1190
[0x1190:0x1196]
---
Predecessors: [0x1175]
Successors: [0x179]
---
0x1190 PUSH2 0xd0
0x1193 PUSH2 0x179
0x1196 JUMP
---
0x1190: V1761 = 0xd0
0x1193: V1762 = 0x179
0x1196: JUMP 0x179
---
Entry stack: []
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [0xd0]

================================

Block 0x1197
[0x1197:0x11bf]
---
Predecessors: []
Successors: [0x11c0]
---
0x1197 JUMPDEST
0x1198 STOP
0x1199 JUMPDEST
0x119a PUSH1 0x0
0x119c SLOAD
0x119d PUSH1 0x1
0x119f PUSH1 0xa0
0x11a1 PUSH1 0x2
0x11a3 EXP
0x11a4 SUB
0x11a5 AND
0x11a6 DUP2
0x11a7 JUMP
0x11a8 JUMPDEST
0x11a9 PUSH1 0x0
0x11ab SLOAD
0x11ac CALLER
0x11ad PUSH1 0x1
0x11af PUSH1 0xa0
0x11b1 PUSH1 0x2
0x11b3 EXP
0x11b4 SUB
0x11b5 SWAP1
0x11b6 DUP2
0x11b7 AND
0x11b8 SWAP2
0x11b9 AND
0x11ba EQ
0x11bb ISZERO
0x11bc PUSH2 0x174
0x11bf JUMPI
---
0x1197: JUMPDEST 
0x1198: STOP 
0x1199: JUMPDEST 
0x119a: V1763 = 0x0
0x119c: V1764 = S[0x0]
0x119d: V1765 = 0x1
0x119f: V1766 = 0xa0
0x11a1: V1767 = 0x2
0x11a3: V1768 = EXP 0x2 0xa0
0x11a4: V1769 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11a5: V1770 = AND 0xffffffffffffffffffffffffffffffffffffffff V1764
0x11a7: JUMP S0
0x11a8: JUMPDEST 
0x11a9: V1771 = 0x0
0x11ab: V1772 = S[0x0]
0x11ac: V1773 = CALLER
0x11ad: V1774 = 0x1
0x11af: V1775 = 0xa0
0x11b1: V1776 = 0x2
0x11b3: V1777 = EXP 0x2 0xa0
0x11b4: V1778 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11b7: V1779 = AND 0xffffffffffffffffffffffffffffffffffffffff V1773
0x11b9: V1780 = AND V1772 0xffffffffffffffffffffffffffffffffffffffff
0x11ba: V1781 = EQ V1780 V1779
0x11bb: V1782 = ISZERO V1781
0x11bc: V1783 = 0x174
0x11bf: THROWI V1782
---
Entry stack: []
Stack pops: 0
Stack additions: [V1770, S0]
Exit stack: []

================================

Block 0x11c0
[0x11c0:0x11e7]
---
Predecessors: [0x1197]
Successors: [0x11e8]
---
0x11c0 PUSH1 0x0
0x11c2 DUP1
0x11c3 SLOAD
0x11c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11d9 NOT
0x11da AND
0x11db PUSH1 0x1
0x11dd PUSH1 0xa0
0x11df PUSH1 0x2
0x11e1 EXP
0x11e2 SUB
0x11e3 DUP4
0x11e4 AND
0x11e5 OR
0x11e6 SWAP1
0x11e7 SSTORE
---
0x11c0: V1784 = 0x0
0x11c3: V1785 = S[0x0]
0x11c4: V1786 = 0xffffffffffffffffffffffffffffffffffffffff
0x11d9: V1787 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x11da: V1788 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1785
0x11db: V1789 = 0x1
0x11dd: V1790 = 0xa0
0x11df: V1791 = 0x2
0x11e1: V1792 = EXP 0x2 0xa0
0x11e2: V1793 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11e4: V1794 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x11e5: V1795 = OR V1794 V1788
0x11e7: S[0x0] = V1795
---
Entry stack: []
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x11e8
[0x11e8:0x11e8]
---
Predecessors: [0x11c0]
Successors: [0x11e9]
---
0x11e8 JUMPDEST
---
0x11e8: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x11e9
[0x11e9:0x11e9]
---
Predecessors: [0x11e8]
Successors: [0x11ea]
---
0x11e9 JUMPDEST
---
0x11e9: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x11ea
[0x11ea:0x1204]
---
Predecessors: [0x11e9]
Successors: [0x1205]
---
0x11ea JUMPDEST
0x11eb POP
0x11ec JUMP
0x11ed JUMPDEST
0x11ee PUSH1 0x0
0x11f0 SLOAD
0x11f1 CALLER
0x11f2 PUSH1 0x1
0x11f4 PUSH1 0xa0
0x11f6 PUSH1 0x2
0x11f8 EXP
0x11f9 SUB
0x11fa SWAP1
0x11fb DUP2
0x11fc AND
0x11fd SWAP2
0x11fe AND
0x11ff EQ
0x1200 ISZERO
0x1201 PUSH2 0xcd
0x1204 JUMPI
---
0x11ea: JUMPDEST 
0x11ec: JUMP S1
0x11ed: JUMPDEST 
0x11ee: V1796 = 0x0
0x11f0: V1797 = S[0x0]
0x11f1: V1798 = CALLER
0x11f2: V1799 = 0x1
0x11f4: V1800 = 0xa0
0x11f6: V1801 = 0x2
0x11f8: V1802 = EXP 0x2 0xa0
0x11f9: V1803 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11fc: V1804 = AND 0xffffffffffffffffffffffffffffffffffffffff V1798
0x11fe: V1805 = AND V1797 0xffffffffffffffffffffffffffffffffffffffff
0x11ff: V1806 = EQ V1805 V1804
0x1200: V1807 = ISZERO V1806
0x1201: V1808 = 0xcd
0x1204: THROWI V1807
---
Entry stack: [S0]
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x1205
[0x1205:0x120e]
---
Predecessors: [0x11ea]
Successors: [0x120f]
---
0x1205 PUSH1 0x1
0x1207 SLOAD
0x1208 TIMESTAMP
0x1209 LT
0x120a ISZERO
0x120b PUSH2 0x19f
0x120e JUMPI
---
0x1205: V1809 = 0x1
0x1207: V1810 = S[0x1]
0x1208: V1811 = TIMESTAMP
0x1209: V1812 = LT V1811 V1810
0x120a: V1813 = ISZERO V1812
0x120b: V1814 = 0x19f
0x120e: THROWI V1813
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x120f
[0x120f:0x1247]
---
Predecessors: [0x1205]
Successors: [0x1248]
---
0x120f PUSH2 0x0
0x1212 JUMP
0x1213 JUMPDEST
0x1214 PUSH1 0x0
0x1216 DUP1
0x1217 SLOAD
0x1218 PUSH1 0x40
0x121a MLOAD
0x121b PUSH1 0x1
0x121d PUSH1 0xa0
0x121f PUSH1 0x2
0x1221 EXP
0x1222 SUB
0x1223 SWAP2
0x1224 DUP3
0x1225 AND
0x1226 SWAP3
0x1227 ADDRESS
0x1228 SWAP1
0x1229 SWAP3
0x122a AND
0x122b BALANCE
0x122c DUP1
0x122d ISZERO
0x122e PUSH2 0x8fc
0x1231 MUL
0x1232 SWAP3
0x1233 SWAP1
0x1234 SWAP2
0x1235 SWAP1
0x1236 DUP2
0x1237 DUP2
0x1238 DUP2
0x1239 DUP6
0x123a DUP9
0x123b DUP9
0x123c CALL
0x123d SWAP4
0x123e POP
0x123f POP
0x1240 POP
0x1241 POP
0x1242 ISZERO
0x1243 ISZERO
0x1244 PUSH2 0xcd
0x1247 JUMPI
---
0x120f: V1815 = 0x0
0x1212: THROW 
0x1213: JUMPDEST 
0x1214: V1816 = 0x0
0x1217: V1817 = S[0x0]
0x1218: V1818 = 0x40
0x121a: V1819 = M[0x40]
0x121b: V1820 = 0x1
0x121d: V1821 = 0xa0
0x121f: V1822 = 0x2
0x1221: V1823 = EXP 0x2 0xa0
0x1222: V1824 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1225: V1825 = AND 0xffffffffffffffffffffffffffffffffffffffff V1817
0x1227: V1826 = ADDRESS
0x122a: V1827 = AND 0xffffffffffffffffffffffffffffffffffffffff V1826
0x122b: V1828 = BALANCE V1827
0x122d: V1829 = ISZERO V1828
0x122e: V1830 = 0x8fc
0x1231: V1831 = MUL 0x8fc V1829
0x123c: V1832 = CALL V1831 V1825 V1828 V1819 0x0 V1819 0x0
0x1242: V1833 = ISZERO V1832
0x1243: V1834 = ISZERO V1833
0x1244: V1835 = 0xcd
0x1247: THROWI V1834
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1248
[0x1248:0x124c]
---
Predecessors: [0x120f]
Successors: [0x124d]
---
0x1248 PUSH2 0x0
0x124b JUMP
0x124c JUMPDEST
---
0x1248: V1836 = 0x0
0x124b: THROW 
0x124c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x124d
[0x124d:0x124d]
---
Predecessors: [0x1248]
Successors: [0x124e]
---
0x124d JUMPDEST
---
0x124d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x124e
[0x124e:0x124e]
---
Predecessors: [0x124d]
Successors: [0x124f]
---
0x124e JUMPDEST
---
0x124e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x124f
[0x124f:0x124f]
---
Predecessors: [0x124e]
Successors: [0x1250]
---
0x124f JUMPDEST
---
0x124f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1250
[0x1250:0x12c8]
---
Predecessors: [0x124f]
Successors: []
---
0x1250 JUMPDEST
0x1251 JUMP
0x1252 STOP
0x1253 LOG1
0x1254 PUSH6 0x627a7a723058
0x125b SHA3
0x125c CREATE2
0x125d SLT
0x125e DUP3
0x125f SWAP9
0x1260 MISSING 0xd0
0x1261 JUMPDEST
0x1262 MISSING 0xdf
0x1263 SLOAD
0x1264 SWAP15
0x1265 SWAP2
0x1266 MISSING 0xd5
0x1267 MISSING 0xce
0x1268 PUSH27 0x89b243c351d161e102298ed58e1079bb0b5dd60029e842aea7a5f1
0x1284 MISSING 0xb0
0x1285 LT
0x1286 MISSING 0x49
0x1287 MISSING 0xd7
0x1288 MSTORE
0x1289 STOP
0x128a DUP13
0x128b MSTORE8
0x128c MISSING 0xc5
0x128d MISSING 0x28
0x128e SWAP1
0x128f MISSING 0xb1
0x1290 MISSING 0xa6
0x1291 MISSING 0xda
0x1292 MISSING 0xf6
0x1293 PUSH1 0xcf
0x1295 CODECOPY
0x1296 MISSING 0xe8
0x1297 MISSING 0xee
0x1298 MISSING 0xc5
0x1299 MOD
0x129a GT
0x129b MISSING 0x2b
0x129c MISSING 0xbd
0x129d MISSING 0xf6
0x129e LOG1
0x129f PUSH6 0x627a7a723058
0x12a6 SHA3
0x12a7 MISSING 0xdf
0x12a8 SMOD
0x12a9 PUSH24 0x9d895f6a203356050eb7f691d5c2d4390802ebf9d1b4d385
0x12c2 MISSING 0xcb
0x12c3 MISSING 0xc2
0x12c4 STOP
0x12c5 MISSING 0xde
0x12c6 MISSING 0xda
0x12c7 STOP
0x12c8 MISSING 0x29
---
0x1250: JUMPDEST 
0x1251: JUMP S0
0x1252: STOP 
0x1253: LOG S0 S1 S2
0x1254: V1837 = 0x627a7a723058
0x125b: V1838 = SHA3 0x627a7a723058 S3
0x125c: V1839 = CREATE2 V1838 S4 S5 S6
0x125d: V1840 = SLT V1839 S7
0x1260: MISSING 0xd0
0x1261: JUMPDEST 
0x1262: MISSING 0xdf
0x1263: V1841 = S[S0]
0x1266: MISSING 0xd5
0x1267: MISSING 0xce
0x1268: V1842 = 0x89b243c351d161e102298ed58e1079bb0b5dd60029e842aea7a5f1
0x1284: MISSING 0xb0
0x1285: V1843 = LT S0 S1
0x1286: MISSING 0x49
0x1287: MISSING 0xd7
0x1288: M[S0] = S1
0x1289: STOP 
0x128b: M8[S12] = S0
0x128c: MISSING 0xc5
0x128d: MISSING 0x28
0x128f: MISSING 0xb1
0x1290: MISSING 0xa6
0x1291: MISSING 0xda
0x1292: MISSING 0xf6
0x1293: V1844 = 0xcf
0x1295: CODECOPY 0xcf S0 S1
0x1296: MISSING 0xe8
0x1297: MISSING 0xee
0x1298: MISSING 0xc5
0x1299: V1845 = MOD S0 S1
0x129a: V1846 = GT V1845 S2
0x129b: MISSING 0x2b
0x129c: MISSING 0xbd
0x129d: MISSING 0xf6
0x129e: LOG S0 S1 S2
0x129f: V1847 = 0x627a7a723058
0x12a6: V1848 = SHA3 0x627a7a723058 S3
0x12a7: MISSING 0xdf
0x12a8: V1849 = SMOD S0 S1
0x12a9: V1850 = 0x9d895f6a203356050eb7f691d5c2d4390802ebf9d1b4d385
0x12c2: MISSING 0xcb
0x12c3: MISSING 0xc2
0x12c4: STOP 
0x12c5: MISSING 0xde
0x12c6: MISSING 0xda
0x12c7: STOP 
0x12c8: MISSING 0x29
---
Entry stack: []
Stack pops: 1441152
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x8889218
Entry block: 0x14e
Exit block: 0x198
Body: 0x14c, 0x14e, 0x154, 0x198, 0x977, 0x986, 0x98c, 0x997, 0x9ad, 0x9ba, 0x9dc, 0x9e4, 0x9e5, 0x9ed, 0x9f5, 0x9f9, 0xa19, 0xa30, 0xa42, 0xa4b, 0xa56, 0xa5a, 0xa5b, 0xa6c, 0xaa3, 0xab5, 0xabe, 0xacd, 0xace, 0xadf, 0xb18, 0xb40, 0xb4d, 0xb74, 0xb75, 0xb76, 0xb77, 0xf20, 0xf21, 0xf32, 0xf7a, 0xf7b, 0xf7c

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x16c
Exit block: 0x179
Body: 0x16c, 0x172, 0x179, 0xb7d

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x18b
Exit block: 0x198
Body: 0x18b, 0x191, 0x198, 0xb83

Function 3:
Public function signature: 0x411b007e
Entry block: 0x1b4
Exit block: 0x198
Body: 0x198, 0x1b4, 0x1ba, 0xb92

Function 4:
Public function signature: 0x45f0a44f
Entry block: 0x1dd
Exit block: 0x179
Body: 0x179, 0x1dd, 0x1e3, 0xba1, 0xbae, 0xbbb

Function 5:
Public function signature: 0x5bf5d54c
Entry block: 0x1ff
Exit block: 0x179
Body: 0x179, 0x1ff, 0x205, 0xbc2

Function 6:
Public function signature: 0x680b0c5c
Entry block: 0x21e
Exit block: 0x179
Body: 0x179, 0x21e, 0x224, 0xbc8, 0xbd5, 0xbe2

Function 7:
Public function signature: 0x6e66f6e9
Entry block: 0x240
Exit block: 0x198
Body: 0x198, 0x240, 0x246, 0xbe9

Function 8:
Public function signature: 0x6ea6b71b
Entry block: 0x269
Exit block: 0x179
Body: 0x179, 0x269, 0x26f, 0xbf8

Function 9:
Public function signature: 0x70a08231
Entry block: 0x288
Exit block: 0x179
Body: 0x179, 0x288, 0x28e, 0xbfe

Function 10:
Public function signature: 0x7b3e5e7b
Entry block: 0x2b3
Exit block: 0x179
Body: 0x179, 0x2b3, 0x2b9, 0xc10

Function 11:
Public function signature: 0x7dbfb36d
Entry block: 0x2d2
Exit block: 0x198
Body: 0x198, 0x2d2, 0x2d8, 0xc16, 0xc23, 0xc30

Function 12:
Public function signature: 0x8da5cb5b
Entry block: 0x2fe
Exit block: 0x198
Body: 0x198, 0x2fe, 0x304, 0xc46

Function 13:
Public function signature: 0x935955bc
Entry block: 0x327
Exit block: 0x179
Body: 0x179, 0x327, 0x32d, 0xc55

Function 14:
Public function signature: 0xa6f9dae1
Entry block: 0x352
Exit block: 0x14c
Body: 0x14c, 0x352, 0x358, 0xc67, 0xc7f, 0xc9a, 0xc9b, 0xc9c

Function 15:
Public function signature: 0xa8b78ed0
Entry block: 0x36d
Exit block: 0x14c
Body: 0x14c, 0x36d, 0x373, 0xc9f, 0xcba, 0xcc5, 0xcc9, 0xcce, 0xcd9, 0xce5, 0xcf2, 0xd29, 0xd36, 0xd82, 0xd8c, 0xd9f, 0xdaa, 0xe64, 0xe65, 0xe66, 0xe67

Function 16:
Public function signature: 0xbc31c1c1
Entry block: 0x37c
Exit block: 0x179
Body: 0x179, 0x37c, 0x382, 0xe6b, 0xe78, 0xe85

Function 17:
Public function signature: 0xbd22a977
Entry block: 0x39e
Exit block: 0x198
Body: 0x198, 0x39e, 0x3a4, 0xe8c

Function 18:
Public function signature: 0xd7ed8ece
Entry block: 0x3d3
Exit block: 0x14c
Body: 0x14c, 0x198, 0x3d3, 0x3d9, 0xa42, 0xa4b, 0xa56, 0xa5a, 0xa5b, 0xa6c, 0xaa3, 0xab5, 0xabe, 0xacd, 0xace, 0xadf, 0xb74, 0xb75, 0xb76, 0xb77, 0xea7, 0xeb6, 0xedd, 0xef6, 0xf08, 0xf11, 0xf20, 0xf21, 0xf32, 0xf7a, 0xf7b, 0xf7c

Function 19:
Public function signature: 0xed185562
Entry block: 0x408
Exit block: 0x179
Body: 0x179, 0x408, 0x40e, 0xf82

Function 20:
Public function signature: 0xfd6b7ef8
Entry block: 0x427
Exit block: 0x14c
Body: 0x149, 0x14a, 0x14c, 0x427, 0x42d, 0xf88, 0xf92, 0xfa9, 0xfd9, 0x1017, 0x1018, 0x1019, 0x101a, 0x101b

Function 21:
Public fallback function
Entry block: 0x101
Exit block: 0x14c
Body: 0x101, 0x105, 0x10f, 0x126, 0x12a, 0x12f, 0x130, 0x13b, 0x13f, 0x149, 0x14a, 0x14c

Function 22:
Private function
Entry block: 0x436
Exit block: 0x96e
Body: 0x436, 0x486, 0x493, 0x4a4, 0x4b0, 0x4b6, 0x4c7, 0x4d4, 0x4d9, 0x4e2, 0x4f3, 0x500, 0x50e, 0x51f, 0x52c, 0x5b4, 0x5be, 0x5e4, 0x5ee, 0x63a, 0x644, 0x66a, 0x674, 0x6c0, 0x6ca, 0x718, 0x71d, 0x790, 0x79a, 0x7c0, 0x7ca, 0x816, 0x820, 0x846, 0x850, 0x89c, 0x8a6, 0x8f0, 0x935, 0x96c, 0x96d, 0x96e, 0xdae, 0xdb9, 0xdc8, 0xdd5, 0xe33, 0xe3d, 0xe49, 0xe4a

