Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x53]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x53
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x53
0xa: JUMPI 0x53 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x6f]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x5f9f4734
0x34 EQ
0x35 PUSH2 0x6f
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x5f9f4734
0x34: V10 = EQ 0x5f9f4734 V8
0x35: V11 = 0x6f
0x38: JUMPI 0x6f V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x92]
---
0x39 DUP1
0x3a PUSH4 0x66d003ac
0x3f EQ
0x40 PUSH2 0x92
0x43 JUMPI
---
0x3a: V12 = 0x66d003ac
0x3f: V13 = EQ 0x66d003ac V8
0x40: V14 = 0x92
0x43: JUMPI 0x92 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xcb]
---
0x44 DUP1
0x45 PUSH4 0xac110d8e
0x4a EQ
0x4b PUSH2 0xcb
0x4e JUMPI
---
0x45: V15 = 0xac110d8e
0x4a: V16 = EQ 0xac110d8e V8
0x4b: V17 = 0xcb
0x4e: JUMPI 0xcb V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x52]
---
Predecessors: [0x44]
Successors: [0x53]
---
0x4f PUSH2 0x53
0x52 JUMP
---
0x4f: V18 = 0x53
0x52: JUMP 0x53
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x53
[0x53:0x56]
---
Predecessors: [0x0, 0x4f]
Successors: [0x57]
---
0x53 JUMPDEST
0x54 PUSH2 0x6d
---
0x53: JUMPDEST 
0x54: V19 = 0x6d
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x6d]
Exit stack: [V8, 0x6d]

================================

Block 0x57
[0x57:0x65]
---
Predecessors: [0x53]
Successors: [0x66, 0x6a]
---
0x57 JUMPDEST
0x58 PUSH1 0x1
0x5a PUSH1 0x0
0x5c POP
0x5d SLOAD
0x5e TIMESTAMP
0x5f LT
0x60 ISZERO
0x61 ISZERO
0x62 PUSH2 0x6a
0x65 JUMPI
---
0x57: JUMPDEST 
0x58: V20 = 0x1
0x5a: V21 = 0x0
0x5d: V22 = S[0x1]
0x5e: V23 = TIMESTAMP
0x5f: V24 = LT V23 V22
0x60: V25 = ISZERO V24
0x61: V26 = ISZERO V25
0x62: V27 = 0x6a
0x65: JUMPI 0x6a V26
---
Entry stack: [V8, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x6d]

================================

Block 0x66
[0x66:0x69]
---
Predecessors: [0x57]
Successors: []
---
0x66 PUSH2 0x2
0x69 JUMP
---
0x66: V28 = 0x2
0x69: THROW 
---
Entry stack: [V8, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x6d]

================================

Block 0x6a
[0x6a:0x6a]
---
Predecessors: [0x57]
Successors: [0x6b]
---
0x6a JUMPDEST
---
0x6a: JUMPDEST 
---
Entry stack: [V8, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x6d]

================================

Block 0x6b
[0x6b:0x6c]
---
Predecessors: [0x6a]
Successors: [0x6d]
---
0x6b JUMPDEST
0x6c JUMP
---
0x6b: JUMPDEST 
0x6c: JUMP 0x6d
---
Entry stack: [V8, 0x6d]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x6b]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x6f
[0x6f:0x7b]
---
Predecessors: [0xb]
Successors: [0xda]
---
0x6f JUMPDEST
0x70 PUSH2 0x7c
0x73 PUSH1 0x4
0x75 DUP1
0x76 POP
0x77 POP
0x78 PUSH2 0xda
0x7b JUMP
---
0x6f: JUMPDEST 
0x70: V29 = 0x7c
0x73: V30 = 0x4
0x78: V31 = 0xda
0x7b: JUMP 0xda
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x7c]
Exit stack: [V8, 0x7c]

================================

Block 0x7c
[0x7c:0x91]
---
Predecessors: [0xda]
Successors: []
---
0x7c JUMPDEST
0x7d PUSH1 0x40
0x7f MLOAD
0x80 DUP1
0x81 DUP3
0x82 DUP2
0x83 MSTORE
0x84 PUSH1 0x20
0x86 ADD
0x87 SWAP2
0x88 POP
0x89 POP
0x8a PUSH1 0x40
0x8c MLOAD
0x8d DUP1
0x8e SWAP2
0x8f SUB
0x90 SWAP1
0x91 RETURN
---
0x7c: JUMPDEST 
0x7d: V32 = 0x40
0x7f: V33 = M[0x40]
0x83: M[V33] = V56
0x84: V34 = 0x20
0x86: V35 = ADD 0x20 V33
0x8a: V36 = 0x40
0x8c: V37 = M[0x40]
0x8f: V38 = SUB V35 V37
0x91: RETURN V37 V38
---
Entry stack: [V8, 0x7c, V56]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x7c]

================================

Block 0x92
[0x92:0x9e]
---
Predecessors: [0x39]
Successors: [0xe3]
---
0x92 JUMPDEST
0x93 PUSH2 0x9f
0x96 PUSH1 0x4
0x98 DUP1
0x99 POP
0x9a POP
0x9b PUSH2 0xe3
0x9e JUMP
---
0x92: JUMPDEST 
0x93: V39 = 0x9f
0x96: V40 = 0x4
0x9b: V41 = 0xe3
0x9e: JUMP 0xe3
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x9f]
Exit stack: [V8, 0x9f]

================================

Block 0x9f
[0x9f:0xca]
---
Predecessors: [0xe3]
Successors: []
---
0x9f JUMPDEST
0xa0 PUSH1 0x40
0xa2 MLOAD
0xa3 DUP1
0xa4 DUP3
0xa5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba AND
0xbb DUP2
0xbc MSTORE
0xbd PUSH1 0x20
0xbf ADD
0xc0 SWAP2
0xc1 POP
0xc2 POP
0xc3 PUSH1 0x40
0xc5 MLOAD
0xc6 DUP1
0xc7 SWAP2
0xc8 SUB
0xc9 SWAP1
0xca RETURN
---
0x9f: JUMPDEST 
0xa0: V42 = 0x40
0xa2: V43 = M[0x40]
0xa5: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xba: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0xbc: M[V43] = V45
0xbd: V46 = 0x20
0xbf: V47 = ADD 0x20 V43
0xc3: V48 = 0x40
0xc5: V49 = M[0x40]
0xc8: V50 = SUB V47 V49
0xca: RETURN V49 V50
---
Entry stack: [V8, 0x9f, V64]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x9f]

================================

Block 0xcb
[0xcb:0xd7]
---
Predecessors: [0x44]
Successors: [0x109]
---
0xcb JUMPDEST
0xcc PUSH2 0xd8
0xcf PUSH1 0x4
0xd1 DUP1
0xd2 POP
0xd3 POP
0xd4 PUSH2 0x109
0xd7 JUMP
---
0xcb: JUMPDEST 
0xcc: V51 = 0xd8
0xcf: V52 = 0x4
0xd4: V53 = 0x109
0xd7: JUMP 0x109
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xd8]
Exit stack: [V8, 0xd8]

================================

Block 0xd8
[0xd8:0xd9]
---
Predecessors: [0x27c]
Successors: []
---
0xd8 JUMPDEST
0xd9 STOP
---
0xd8: JUMPDEST 
0xd9: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xda
[0xda:0xe2]
---
Predecessors: [0x6f]
Successors: [0x7c]
---
0xda JUMPDEST
0xdb PUSH1 0x1
0xdd PUSH1 0x0
0xdf POP
0xe0 SLOAD
0xe1 DUP2
0xe2 JUMP
---
0xda: JUMPDEST 
0xdb: V54 = 0x1
0xdd: V55 = 0x0
0xe0: V56 = S[0x1]
0xe2: JUMP 0x7c
---
Entry stack: [V8, 0x7c]
Stack pops: 1
Stack additions: [S0, V56]
Exit stack: [V8, 0x7c, V56]

================================

Block 0xe3
[0xe3:0x108]
---
Predecessors: [0x92]
Successors: [0x9f]
---
0xe3 JUMPDEST
0xe4 PUSH1 0x0
0xe6 PUSH1 0x0
0xe8 SWAP1
0xe9 SLOAD
0xea SWAP1
0xeb PUSH2 0x100
0xee EXP
0xef SWAP1
0xf0 DIV
0xf1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x106 AND
0x107 DUP2
0x108 JUMP
---
0xe3: JUMPDEST 
0xe4: V57 = 0x0
0xe6: V58 = 0x0
0xe9: V59 = S[0x0]
0xeb: V60 = 0x100
0xee: V61 = EXP 0x100 0x0
0xf0: V62 = DIV V59 0x1
0xf1: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x106: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x108: JUMP 0x9f
---
Entry stack: [V8, 0x9f]
Stack pops: 1
Stack additions: [S0, V64]
Exit stack: [V8, 0x9f, V64]

================================

Block 0x109
[0x109:0x160]
---
Predecessors: [0xcb]
Successors: [0x161, 0x165]
---
0x109 JUMPDEST
0x10a PUSH1 0x0
0x10c PUSH1 0x0
0x10e SWAP1
0x10f SLOAD
0x110 SWAP1
0x111 PUSH2 0x100
0x114 EXP
0x115 SWAP1
0x116 DIV
0x117 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12c AND
0x12d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x142 AND
0x143 CALLER
0x144 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x159 AND
0x15a EQ
0x15b ISZERO
0x15c ISZERO
0x15d PUSH2 0x165
0x160 JUMPI
---
0x109: JUMPDEST 
0x10a: V65 = 0x0
0x10c: V66 = 0x0
0x10f: V67 = S[0x0]
0x111: V68 = 0x100
0x114: V69 = EXP 0x100 0x0
0x116: V70 = DIV V67 0x1
0x117: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x12d: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x142: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x143: V75 = CALLER
0x144: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x159: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x15a: V78 = EQ V77 V74
0x15b: V79 = ISZERO V78
0x15c: V80 = ISZERO V79
0x15d: V81 = 0x165
0x160: JUMPI 0x165 V80
---
Entry stack: [V8, 0xd8]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xd8]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x109]
Successors: []
---
0x161 PUSH2 0x2
0x164 JUMP
---
0x161: V82 = 0x2
0x164: THROW 
---
Entry stack: [V8, 0xd8]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xd8]

================================

Block 0x165
[0x165:0x172]
---
Predecessors: [0x109]
Successors: [0x173, 0x177]
---
0x165 JUMPDEST
0x166 PUSH1 0x1
0x168 PUSH1 0x0
0x16a POP
0x16b SLOAD
0x16c TIMESTAMP
0x16d LT
0x16e ISZERO
0x16f PUSH2 0x177
0x172 JUMPI
---
0x165: JUMPDEST 
0x166: V83 = 0x1
0x168: V84 = 0x0
0x16b: V85 = S[0x1]
0x16c: V86 = TIMESTAMP
0x16d: V87 = LT V86 V85
0x16e: V88 = ISZERO V87
0x16f: V89 = 0x177
0x172: JUMPI 0x177 V88
---
Entry stack: [V8, 0xd8]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xd8]

================================

Block 0x173
[0x173:0x176]
---
Predecessors: [0x165]
Successors: []
---
0x173 PUSH2 0x2
0x176 JUMP
---
0x173: V90 = 0x2
0x176: THROW 
---
Entry stack: [V8, 0xd8]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xd8]

================================

Block 0x177
[0x177:0x276]
---
Predecessors: [0x165]
Successors: [0x277, 0x27b]
---
0x177 JUMPDEST
0x178 PUSH32 0x7ff86a3550c489de55163d2ee165a3420b682f6daff6a7392e1b720405e6feb0
0x199 PUSH1 0x0
0x19b PUSH1 0x0
0x19d SWAP1
0x19e SLOAD
0x19f SWAP1
0x1a0 PUSH2 0x100
0x1a3 EXP
0x1a4 SWAP1
0x1a5 DIV
0x1a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bb AND
0x1bc ADDRESS
0x1bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d2 AND
0x1d3 BALANCE
0x1d4 PUSH1 0x40
0x1d6 MLOAD
0x1d7 DUP1
0x1d8 DUP4
0x1d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ee AND
0x1ef DUP2
0x1f0 MSTORE
0x1f1 PUSH1 0x20
0x1f3 ADD
0x1f4 DUP3
0x1f5 DUP2
0x1f6 MSTORE
0x1f7 PUSH1 0x20
0x1f9 ADD
0x1fa SWAP3
0x1fb POP
0x1fc POP
0x1fd POP
0x1fe PUSH1 0x40
0x200 MLOAD
0x201 DUP1
0x202 SWAP2
0x203 SUB
0x204 SWAP1
0x205 LOG1
0x206 PUSH1 0x0
0x208 PUSH1 0x0
0x20a SWAP1
0x20b SLOAD
0x20c SWAP1
0x20d PUSH2 0x100
0x210 EXP
0x211 SWAP1
0x212 DIV
0x213 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x228 AND
0x229 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23e AND
0x23f PUSH1 0x0
0x241 ADDRESS
0x242 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x257 AND
0x258 BALANCE
0x259 PUSH1 0x40
0x25b MLOAD
0x25c DUP1
0x25d SWAP1
0x25e POP
0x25f PUSH1 0x0
0x261 PUSH1 0x40
0x263 MLOAD
0x264 DUP1
0x265 DUP4
0x266 SUB
0x267 DUP2
0x268 DUP6
0x269 DUP9
0x26a DUP9
0x26b CALL
0x26c SWAP4
0x26d POP
0x26e POP
0x26f POP
0x270 POP
0x271 ISZERO
0x272 ISZERO
0x273 PUSH2 0x27b
0x276 JUMPI
---
0x177: JUMPDEST 
0x178: V91 = 0x7ff86a3550c489de55163d2ee165a3420b682f6daff6a7392e1b720405e6feb0
0x199: V92 = 0x0
0x19b: V93 = 0x0
0x19e: V94 = S[0x0]
0x1a0: V95 = 0x100
0x1a3: V96 = EXP 0x100 0x0
0x1a5: V97 = DIV V94 0x1
0x1a6: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1bc: V100 = ADDRESS
0x1bd: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d2: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1d3: V103 = BALANCE V102
0x1d4: V104 = 0x40
0x1d6: V105 = M[0x40]
0x1d9: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x1f0: M[V105] = V107
0x1f1: V108 = 0x20
0x1f3: V109 = ADD 0x20 V105
0x1f6: M[V109] = V103
0x1f7: V110 = 0x20
0x1f9: V111 = ADD 0x20 V109
0x1fe: V112 = 0x40
0x200: V113 = M[0x40]
0x203: V114 = SUB V111 V113
0x205: LOG V113 V114 0x7ff86a3550c489de55163d2ee165a3420b682f6daff6a7392e1b720405e6feb0
0x206: V115 = 0x0
0x208: V116 = 0x0
0x20b: V117 = S[0x0]
0x20d: V118 = 0x100
0x210: V119 = EXP 0x100 0x0
0x212: V120 = DIV V117 0x1
0x213: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x228: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x229: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x23e: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x23f: V125 = 0x0
0x241: V126 = ADDRESS
0x242: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x257: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x258: V129 = BALANCE V128
0x259: V130 = 0x40
0x25b: V131 = M[0x40]
0x25f: V132 = 0x0
0x261: V133 = 0x40
0x263: V134 = M[0x40]
0x266: V135 = SUB V131 V134
0x26b: V136 = CALL 0x0 V124 V129 V134 V135 V134 0x0
0x271: V137 = ISZERO V136
0x272: V138 = ISZERO V137
0x273: V139 = 0x27b
0x276: JUMPI 0x27b V138
---
Entry stack: [V8, 0xd8]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xd8]

================================

Block 0x277
[0x277:0x27a]
---
Predecessors: [0x177]
Successors: []
---
0x277 PUSH2 0x2
0x27a JUMP
---
0x277: V140 = 0x2
0x27a: THROW 
---
Entry stack: [V8, 0xd8]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xd8]

================================

Block 0x27b
[0x27b:0x27b]
---
Predecessors: [0x177]
Successors: [0x27c]
---
0x27b JUMPDEST
---
0x27b: JUMPDEST 
---
Entry stack: [V8, 0xd8]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xd8]

================================

Block 0x27c
[0x27c:0x27d]
---
Predecessors: [0x27b]
Successors: [0xd8]
---
0x27c JUMPDEST
0x27d JUMP
---
0x27c: JUMPDEST 
0x27d: JUMP 0xd8
---
Entry stack: [V8, 0xd8]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Function 0:
Public function signature: 0x5f9f4734
Entry block: 0x6f
Exit block: 0x7c
Body: 0x6f, 0x7c, 0xda

Function 1:
Public function signature: 0x66d003ac
Entry block: 0x92
Exit block: 0x9f
Body: 0x92, 0x9f, 0xe3

Function 2:
Public function signature: 0xac110d8e
Entry block: 0xcb
Exit block: 0xd8
Body: 0xcb, 0xd8, 0x109, 0x161, 0x165, 0x173, 0x177, 0x277, 0x27b, 0x27c

Function 3:
Public fallback function
Entry block: 0x4f
Exit block: 0x6d
Body: 0x4f, 0x53, 0x57, 0x66, 0x6a, 0x6b, 0x6d

