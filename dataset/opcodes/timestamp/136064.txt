Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x7f]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x7f
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x7f
0xc: JUMPI 0x7f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x84]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x12f53950
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x84
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x12f53950
0x22: V15 = EQ V13 0x12f53950
0x23: V16 = 0x84
0x26: JUMPI 0x84 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xad]
---
0x27 DUP1
0x28 PUSH4 0x2d2295ad
0x2d EQ
0x2e PUSH2 0xad
0x31 JUMPI
---
0x28: V17 = 0x2d2295ad
0x2d: V18 = EQ 0x2d2295ad V13
0x2e: V19 = 0xad
0x31: JUMPI 0xad V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xb7]
---
0x32 DUP1
0x33 PUSH4 0x733fd8c7
0x38 EQ
0x39 PUSH2 0xb7
0x3c JUMPI
---
0x33: V20 = 0x733fd8c7
0x38: V21 = EQ 0x733fd8c7 V13
0x39: V22 = 0xb7
0x3c: JUMPI 0xb7 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xe8]
---
0x3d DUP1
0x3e PUSH4 0x7803af8c
0x43 EQ
0x44 PUSH2 0xe8
0x47 JUMPI
---
0x3e: V23 = 0x7803af8c
0x43: V24 = EQ 0x7803af8c V13
0x44: V25 = 0xe8
0x47: JUMPI 0xe8 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0xf0]
---
0x48 DUP1
0x49 PUSH4 0x7d85facd
0x4e EQ
0x4f PUSH2 0xf0
0x52 JUMPI
---
0x49: V26 = 0x7d85facd
0x4e: V27 = EQ 0x7d85facd V13
0x4f: V28 = 0xf0
0x52: JUMPI 0xf0 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x105]
---
0x53 DUP1
0x54 PUSH4 0x8da5cb5b
0x59 EQ
0x5a PUSH2 0x105
0x5d JUMPI
---
0x54: V29 = 0x8da5cb5b
0x59: V30 = EQ 0x8da5cb5b V13
0x5a: V31 = 0x105
0x5d: JUMPI 0x105 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x11a]
---
0x5e DUP1
0x5f PUSH4 0x904d4a73
0x64 EQ
0x65 PUSH2 0x11a
0x68 JUMPI
---
0x5f: V32 = 0x904d4a73
0x64: V33 = EQ 0x904d4a73 V13
0x65: V34 = 0x11a
0x68: JUMPI 0x11a V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1a4]
---
0x69 DUP1
0x6a PUSH4 0xda284dcc
0x6f EQ
0x70 PUSH2 0x1a4
0x73 JUMPI
---
0x6a: V35 = 0xda284dcc
0x6f: V36 = EQ 0xda284dcc V13
0x70: V37 = 0x1a4
0x73: JUMPI 0x1a4 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x1cb]
---
0x74 DUP1
0x75 PUSH4 0xf6954379
0x7a EQ
0x7b PUSH2 0x1cb
0x7e JUMPI
---
0x75: V38 = 0xf6954379
0x7a: V39 = EQ 0xf6954379 V13
0x7b: V40 = 0x1cb
0x7e: JUMPI 0x1cb V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x83]
---
Predecessors: [0x0, 0x74]
Successors: []
---
0x7f JUMPDEST
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x7f: JUMPDEST 
0x80: V41 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x84
[0x84:0x8b]
---
Predecessors: [0xd]
Successors: [0x8c, 0x90]
---
0x84 JUMPDEST
0x85 CALLVALUE
0x86 DUP1
0x87 ISZERO
0x88 PUSH2 0x90
0x8b JUMPI
---
0x84: JUMPDEST 
0x85: V42 = CALLVALUE
0x87: V43 = ISZERO V42
0x88: V44 = 0x90
0x8b: JUMPI 0x90 V43
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V42]
Exit stack: [V13, V42]

================================

Block 0x8c
[0x8c:0x8f]
---
Predecessors: [0x84]
Successors: []
---
0x8c PUSH1 0x0
0x8e DUP1
0x8f REVERT
---
0x8c: V45 = 0x0
0x8f: REVERT 0x0 0x0
---
Entry stack: [V13, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V42]

================================

Block 0x90
[0x90:0x98]
---
Predecessors: [0x84]
Successors: [0x1e0]
---
0x90 JUMPDEST
0x91 POP
0x92 PUSH2 0x99
0x95 PUSH2 0x1e0
0x98 JUMP
---
0x90: JUMPDEST 
0x92: V46 = 0x99
0x95: V47 = 0x1e0
0x98: JUMP 0x1e0
---
Entry stack: [V13, V42]
Stack pops: 1
Stack additions: [0x99]
Exit stack: [V13, 0x99]

================================

Block 0x99
[0x99:0xac]
---
Predecessors: [0x1e0, 0x35d]
Successors: []
---
0x99 JUMPDEST
0x9a PUSH1 0x40
0x9c DUP1
0x9d MLOAD
0x9e SWAP2
0x9f ISZERO
0xa0 ISZERO
0xa1 DUP3
0xa2 MSTORE
0xa3 MLOAD
0xa4 SWAP1
0xa5 DUP2
0xa6 SWAP1
0xa7 SUB
0xa8 PUSH1 0x20
0xaa ADD
0xab SWAP1
0xac RETURN
---
0x99: JUMPDEST 
0x9a: V48 = 0x40
0x9d: V49 = M[0x40]
0x9f: V50 = ISZERO S0
0xa0: V51 = ISZERO V50
0xa2: M[V49] = V51
0xa3: V52 = M[0x40]
0xa7: V53 = SUB V49 V52
0xa8: V54 = 0x20
0xaa: V55 = ADD 0x20 V53
0xac: RETURN V52 V55
---
Entry stack: [V13, 0x99, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x99]

================================

Block 0xad
[0xad:0xb4]
---
Predecessors: [0x27]
Successors: [0x1ee]
---
0xad JUMPDEST
0xae PUSH2 0xb5
0xb1 PUSH2 0x1ee
0xb4 JUMP
---
0xad: JUMPDEST 
0xae: V56 = 0xb5
0xb1: V57 = 0x1ee
0xb4: JUMP 0x1ee
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xb5]
Exit stack: [V13, 0xb5]

================================

Block 0xb5
[0xb5:0xb6]
---
Predecessors: [0x23f, 0x306]
Successors: []
---
0xb5 JUMPDEST
0xb6 STOP
---
0xb5: JUMPDEST 
0xb6: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xb7
[0xb7:0xbe]
---
Predecessors: [0x32]
Successors: [0xbf, 0xc3]
---
0xb7 JUMPDEST
0xb8 CALLVALUE
0xb9 DUP1
0xba ISZERO
0xbb PUSH2 0xc3
0xbe JUMPI
---
0xb7: JUMPDEST 
0xb8: V58 = CALLVALUE
0xba: V59 = ISZERO V58
0xbb: V60 = 0xc3
0xbe: JUMPI 0xc3 V59
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V13, V58]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0xb7]
Successors: []
---
0xbf PUSH1 0x0
0xc1 DUP1
0xc2 REVERT
---
0xbf: V61 = 0x0
0xc2: REVERT 0x0 0x0
---
Entry stack: [V13, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V58]

================================

Block 0xc3
[0xc3:0xcb]
---
Predecessors: [0xb7]
Successors: [0x298]
---
0xc3 JUMPDEST
0xc4 POP
0xc5 PUSH2 0xcc
0xc8 PUSH2 0x298
0xcb JUMP
---
0xc3: JUMPDEST 
0xc5: V62 = 0xcc
0xc8: V63 = 0x298
0xcb: JUMP 0x298
---
Entry stack: [V13, V58]
Stack pops: 1
Stack additions: [0xcc]
Exit stack: [V13, 0xcc]

================================

Block 0xcc
[0xcc:0xe7]
---
Predecessors: [0x298, 0x366, 0x409]
Successors: []
---
0xcc JUMPDEST
0xcd PUSH1 0x40
0xcf DUP1
0xd0 MLOAD
0xd1 PUSH1 0x1
0xd3 PUSH1 0xa0
0xd5 PUSH1 0x2
0xd7 EXP
0xd8 SUB
0xd9 SWAP1
0xda SWAP3
0xdb AND
0xdc DUP3
0xdd MSTORE
0xde MLOAD
0xdf SWAP1
0xe0 DUP2
0xe1 SWAP1
0xe2 SUB
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 SWAP1
0xe7 RETURN
---
0xcc: JUMPDEST 
0xcd: V64 = 0x40
0xd0: V65 = M[0x40]
0xd1: V66 = 0x1
0xd3: V67 = 0xa0
0xd5: V68 = 0x2
0xd7: V69 = EXP 0x2 0xa0
0xd8: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdb: V71 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xdd: M[V65] = V71
0xde: V72 = M[0x40]
0xe2: V73 = SUB V65 V72
0xe3: V74 = 0x20
0xe5: V75 = ADD 0x20 V73
0xe7: RETURN V72 V75
---
Entry stack: [V13, 0xcc, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xcc]

================================

Block 0xe8
[0xe8:0xef]
---
Predecessors: [0x3d]
Successors: [0x2a7]
---
0xe8 JUMPDEST
0xe9 PUSH2 0xb5
0xec PUSH2 0x2a7
0xef JUMP
---
0xe8: JUMPDEST 
0xe9: V76 = 0xb5
0xec: V77 = 0x2a7
0xef: JUMP 0x2a7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xb5]
Exit stack: [V13, 0xb5]

================================

Block 0xf0
[0xf0:0xf7]
---
Predecessors: [0x48]
Successors: [0xf8, 0xfc]
---
0xf0 JUMPDEST
0xf1 CALLVALUE
0xf2 DUP1
0xf3 ISZERO
0xf4 PUSH2 0xfc
0xf7 JUMPI
---
0xf0: JUMPDEST 
0xf1: V78 = CALLVALUE
0xf3: V79 = ISZERO V78
0xf4: V80 = 0xfc
0xf7: JUMPI 0xfc V79
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V78]
Exit stack: [V13, V78]

================================

Block 0xf8
[0xf8:0xfb]
---
Predecessors: [0xf0]
Successors: []
---
0xf8 PUSH1 0x0
0xfa DUP1
0xfb REVERT
---
0xf8: V81 = 0x0
0xfb: REVERT 0x0 0x0
---
Entry stack: [V13, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V78]

================================

Block 0xfc
[0xfc:0x104]
---
Predecessors: [0xf0]
Successors: [0x35d]
---
0xfc JUMPDEST
0xfd POP
0xfe PUSH2 0x99
0x101 PUSH2 0x35d
0x104 JUMP
---
0xfc: JUMPDEST 
0xfe: V82 = 0x99
0x101: V83 = 0x35d
0x104: JUMP 0x35d
---
Entry stack: [V13, V78]
Stack pops: 1
Stack additions: [0x99]
Exit stack: [V13, 0x99]

================================

Block 0x105
[0x105:0x10c]
---
Predecessors: [0x53]
Successors: [0x10d, 0x111]
---
0x105 JUMPDEST
0x106 CALLVALUE
0x107 DUP1
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x105: JUMPDEST 
0x106: V84 = CALLVALUE
0x108: V85 = ISZERO V84
0x109: V86 = 0x111
0x10c: JUMPI 0x111 V85
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V84]
Exit stack: [V13, V84]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x105]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V87 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V13, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V84]

================================

Block 0x111
[0x111:0x119]
---
Predecessors: [0x105]
Successors: [0x366]
---
0x111 JUMPDEST
0x112 POP
0x113 PUSH2 0xcc
0x116 PUSH2 0x366
0x119 JUMP
---
0x111: JUMPDEST 
0x113: V88 = 0xcc
0x116: V89 = 0x366
0x119: JUMP 0x366
---
Entry stack: [V13, V84]
Stack pops: 1
Stack additions: [0xcc]
Exit stack: [V13, 0xcc]

================================

Block 0x11a
[0x11a:0x121]
---
Predecessors: [0x5e]
Successors: [0x122, 0x126]
---
0x11a JUMPDEST
0x11b CALLVALUE
0x11c DUP1
0x11d ISZERO
0x11e PUSH2 0x126
0x121 JUMPI
---
0x11a: JUMPDEST 
0x11b: V90 = CALLVALUE
0x11d: V91 = ISZERO V90
0x11e: V92 = 0x126
0x121: JUMPI 0x126 V91
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V90]
Exit stack: [V13, V90]

================================

Block 0x122
[0x122:0x125]
---
Predecessors: [0x11a]
Successors: []
---
0x122 PUSH1 0x0
0x124 DUP1
0x125 REVERT
---
0x122: V93 = 0x0
0x125: REVERT 0x0 0x0
---
Entry stack: [V13, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V90]

================================

Block 0x126
[0x126:0x12e]
---
Predecessors: [0x11a]
Successors: [0x375]
---
0x126 JUMPDEST
0x127 POP
0x128 PUSH2 0x12f
0x12b PUSH2 0x375
0x12e JUMP
---
0x126: JUMPDEST 
0x128: V94 = 0x12f
0x12b: V95 = 0x375
0x12e: JUMP 0x375
---
Entry stack: [V13, V90]
Stack pops: 1
Stack additions: [0x12f]
Exit stack: [V13, 0x12f]

================================

Block 0x12f
[0x12f:0x150]
---
Predecessors: [0x3fb]
Successors: [0x151]
---
0x12f JUMPDEST
0x130 PUSH1 0x40
0x132 DUP1
0x133 MLOAD
0x134 PUSH1 0x20
0x136 DUP1
0x137 DUP3
0x138 MSTORE
0x139 DUP4
0x13a MLOAD
0x13b DUP2
0x13c DUP4
0x13d ADD
0x13e MSTORE
0x13f DUP4
0x140 MLOAD
0x141 SWAP2
0x142 SWAP3
0x143 DUP4
0x144 SWAP3
0x145 SWAP1
0x146 DUP4
0x147 ADD
0x148 SWAP2
0x149 DUP6
0x14a ADD
0x14b SWAP1
0x14c DUP1
0x14d DUP4
0x14e DUP4
0x14f PUSH1 0x0
---
0x12f: JUMPDEST 
0x130: V96 = 0x40
0x133: V97 = M[0x40]
0x134: V98 = 0x20
0x138: M[V97] = 0x20
0x13a: V99 = M[V309]
0x13d: V100 = ADD V97 0x20
0x13e: M[V100] = V99
0x140: V101 = M[V309]
0x147: V102 = ADD V97 0x40
0x14a: V103 = ADD V309 0x20
0x14f: V104 = 0x0
---
Entry stack: [V13, 0x12f, V309]
Stack pops: 1
Stack additions: [S0, V97, V97, V102, V103, V101, V101, V102, V103, 0x0]
Exit stack: [V13, 0x12f, V309, V97, V97, V102, V103, V101, V101, V102, V103, 0x0]

================================

Block 0x151
[0x151:0x159]
---
Predecessors: [0x12f, 0x15a]
Successors: [0x15a, 0x169]
---
0x151 JUMPDEST
0x152 DUP4
0x153 DUP2
0x154 LT
0x155 ISZERO
0x156 PUSH2 0x169
0x159 JUMPI
---
0x151: JUMPDEST 
0x154: V105 = LT S0 V101
0x155: V106 = ISZERO V105
0x156: V107 = 0x169
0x159: JUMPI 0x169 V106
---
Entry stack: [V13, 0x12f, V309, V97, V97, V102, V103, V101, V101, V102, V103, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x12f, V309, V97, V97, V102, V103, V101, V101, V102, V103, S0]

================================

Block 0x15a
[0x15a:0x168]
---
Predecessors: [0x151]
Successors: [0x151]
---
0x15a DUP2
0x15b DUP2
0x15c ADD
0x15d MLOAD
0x15e DUP4
0x15f DUP3
0x160 ADD
0x161 MSTORE
0x162 PUSH1 0x20
0x164 ADD
0x165 PUSH2 0x151
0x168 JUMP
---
0x15c: V108 = ADD S0 V103
0x15d: V109 = M[V108]
0x160: V110 = ADD S0 V102
0x161: M[V110] = V109
0x162: V111 = 0x20
0x164: V112 = ADD 0x20 S0
0x165: V113 = 0x151
0x168: JUMP 0x151
---
Entry stack: [V13, 0x12f, V309, V97, V97, V102, V103, V101, V101, V102, V103, S0]
Stack pops: 3
Stack additions: [S2, S1, V112]
Exit stack: [V13, 0x12f, V309, V97, V97, V102, V103, V101, V101, V102, V103, V112]

================================

Block 0x169
[0x169:0x17c]
---
Predecessors: [0x151]
Successors: [0x17d, 0x196]
---
0x169 JUMPDEST
0x16a POP
0x16b POP
0x16c POP
0x16d POP
0x16e SWAP1
0x16f POP
0x170 SWAP1
0x171 DUP2
0x172 ADD
0x173 SWAP1
0x174 PUSH1 0x1f
0x176 AND
0x177 DUP1
0x178 ISZERO
0x179 PUSH2 0x196
0x17c JUMPI
---
0x169: JUMPDEST 
0x172: V114 = ADD V101 V102
0x174: V115 = 0x1f
0x176: V116 = AND 0x1f V101
0x178: V117 = ISZERO V116
0x179: V118 = 0x196
0x17c: JUMPI 0x196 V117
---
Entry stack: [V13, 0x12f, V309, V97, V97, V102, V103, V101, V101, V102, V103, S0]
Stack pops: 7
Stack additions: [V114, V116]
Exit stack: [V13, 0x12f, V309, V97, V97, V114, V116]

================================

Block 0x17d
[0x17d:0x195]
---
Predecessors: [0x169]
Successors: [0x196]
---
0x17d DUP1
0x17e DUP3
0x17f SUB
0x180 DUP1
0x181 MLOAD
0x182 PUSH1 0x1
0x184 DUP4
0x185 PUSH1 0x20
0x187 SUB
0x188 PUSH2 0x100
0x18b EXP
0x18c SUB
0x18d NOT
0x18e AND
0x18f DUP2
0x190 MSTORE
0x191 PUSH1 0x20
0x193 ADD
0x194 SWAP2
0x195 POP
---
0x17f: V119 = SUB V114 V116
0x181: V120 = M[V119]
0x182: V121 = 0x1
0x185: V122 = 0x20
0x187: V123 = SUB 0x20 V116
0x188: V124 = 0x100
0x18b: V125 = EXP 0x100 V123
0x18c: V126 = SUB V125 0x1
0x18d: V127 = NOT V126
0x18e: V128 = AND V127 V120
0x190: M[V119] = V128
0x191: V129 = 0x20
0x193: V130 = ADD 0x20 V119
---
Entry stack: [V13, 0x12f, V309, V97, V97, V114, V116]
Stack pops: 2
Stack additions: [V130, S0]
Exit stack: [V13, 0x12f, V309, V97, V97, V130, V116]

================================

Block 0x196
[0x196:0x1a3]
---
Predecessors: [0x169, 0x17d]
Successors: []
---
0x196 JUMPDEST
0x197 POP
0x198 SWAP3
0x199 POP
0x19a POP
0x19b POP
0x19c PUSH1 0x40
0x19e MLOAD
0x19f DUP1
0x1a0 SWAP2
0x1a1 SUB
0x1a2 SWAP1
0x1a3 RETURN
---
0x196: JUMPDEST 
0x19c: V131 = 0x40
0x19e: V132 = M[0x40]
0x1a1: V133 = SUB S1 V132
0x1a3: RETURN V132 V133
---
Entry stack: [V13, 0x12f, V309, V97, V97, S1, V116]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x12f]

================================

Block 0x1a4
[0x1a4:0x1ab]
---
Predecessors: [0x69]
Successors: [0x1ac, 0x1b0]
---
0x1a4 JUMPDEST
0x1a5 CALLVALUE
0x1a6 DUP1
0x1a7 ISZERO
0x1a8 PUSH2 0x1b0
0x1ab JUMPI
---
0x1a4: JUMPDEST 
0x1a5: V134 = CALLVALUE
0x1a7: V135 = ISZERO V134
0x1a8: V136 = 0x1b0
0x1ab: JUMPI 0x1b0 V135
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V134]
Exit stack: [V13, V134]

================================

Block 0x1ac
[0x1ac:0x1af]
---
Predecessors: [0x1a4]
Successors: []
---
0x1ac PUSH1 0x0
0x1ae DUP1
0x1af REVERT
---
0x1ac: V137 = 0x0
0x1af: REVERT 0x0 0x0
---
Entry stack: [V13, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V134]

================================

Block 0x1b0
[0x1b0:0x1b8]
---
Predecessors: [0x1a4]
Successors: [0x403]
---
0x1b0 JUMPDEST
0x1b1 POP
0x1b2 PUSH2 0x1b9
0x1b5 PUSH2 0x403
0x1b8 JUMP
---
0x1b0: JUMPDEST 
0x1b2: V138 = 0x1b9
0x1b5: V139 = 0x403
0x1b8: JUMP 0x403
---
Entry stack: [V13, V134]
Stack pops: 1
Stack additions: [0x1b9]
Exit stack: [V13, 0x1b9]

================================

Block 0x1b9
[0x1b9:0x1ca]
---
Predecessors: [0x403]
Successors: []
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x40
0x1bc DUP1
0x1bd MLOAD
0x1be SWAP2
0x1bf DUP3
0x1c0 MSTORE
0x1c1 MLOAD
0x1c2 SWAP1
0x1c3 DUP2
0x1c4 SWAP1
0x1c5 SUB
0x1c6 PUSH1 0x20
0x1c8 ADD
0x1c9 SWAP1
0x1ca RETURN
---
0x1b9: JUMPDEST 
0x1ba: V140 = 0x40
0x1bd: V141 = M[0x40]
0x1c0: M[V141] = V358
0x1c1: V142 = M[0x40]
0x1c5: V143 = SUB V141 V142
0x1c6: V144 = 0x20
0x1c8: V145 = ADD 0x20 V143
0x1ca: RETURN V142 V145
---
Entry stack: [V13, 0x1b9, V358]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1b9]

================================

Block 0x1cb
[0x1cb:0x1d2]
---
Predecessors: [0x74]
Successors: [0x1d3, 0x1d7]
---
0x1cb JUMPDEST
0x1cc CALLVALUE
0x1cd DUP1
0x1ce ISZERO
0x1cf PUSH2 0x1d7
0x1d2 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V146 = CALLVALUE
0x1ce: V147 = ISZERO V146
0x1cf: V148 = 0x1d7
0x1d2: JUMPI 0x1d7 V147
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V146]
Exit stack: [V13, V146]

================================

Block 0x1d3
[0x1d3:0x1d6]
---
Predecessors: [0x1cb]
Successors: []
---
0x1d3 PUSH1 0x0
0x1d5 DUP1
0x1d6 REVERT
---
0x1d3: V149 = 0x0
0x1d6: REVERT 0x0 0x0
---
Entry stack: [V13, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V146]

================================

Block 0x1d7
[0x1d7:0x1df]
---
Predecessors: [0x1cb]
Successors: [0x409]
---
0x1d7 JUMPDEST
0x1d8 POP
0x1d9 PUSH2 0xcc
0x1dc PUSH2 0x409
0x1df JUMP
---
0x1d7: JUMPDEST 
0x1d9: V150 = 0xcc
0x1dc: V151 = 0x409
0x1df: JUMP 0x409
---
Entry stack: [V13, V146]
Stack pops: 1
Stack additions: [0xcc]
Exit stack: [V13, 0xcc]

================================

Block 0x1e0
[0x1e0:0x1ed]
---
Predecessors: [0x90]
Successors: [0x99]
---
0x1e0 JUMPDEST
0x1e1 PUSH1 0x5
0x1e3 SLOAD
0x1e4 PUSH2 0x100
0x1e7 SWAP1
0x1e8 DIV
0x1e9 PUSH1 0xff
0x1eb AND
0x1ec DUP2
0x1ed JUMP
---
0x1e0: JUMPDEST 
0x1e1: V152 = 0x5
0x1e3: V153 = S[0x5]
0x1e4: V154 = 0x100
0x1e8: V155 = DIV V153 0x100
0x1e9: V156 = 0xff
0x1eb: V157 = AND 0xff V155
0x1ed: JUMP 0x99
---
Entry stack: [V13, 0x99]
Stack pops: 1
Stack additions: [S0, V157]
Exit stack: [V13, 0x99, V157]

================================

Block 0x1ee
[0x1ee:0x200]
---
Predecessors: [0xad]
Successors: [0x201, 0x205]
---
0x1ee JUMPDEST
0x1ef PUSH1 0x0
0x1f1 SLOAD
0x1f2 PUSH1 0x1
0x1f4 PUSH1 0xa0
0x1f6 PUSH1 0x2
0x1f8 EXP
0x1f9 SUB
0x1fa AND
0x1fb CALLER
0x1fc EQ
0x1fd PUSH2 0x205
0x200 JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V158 = 0x0
0x1f1: V159 = S[0x0]
0x1f2: V160 = 0x1
0x1f4: V161 = 0xa0
0x1f6: V162 = 0x2
0x1f8: V163 = EXP 0x2 0xa0
0x1f9: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fa: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x1fb: V166 = CALLER
0x1fc: V167 = EQ V166 V165
0x1fd: V168 = 0x205
0x200: JUMPI 0x205 V167
---
Entry stack: [V13, 0xb5]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5]

================================

Block 0x201
[0x201:0x204]
---
Predecessors: [0x1ee]
Successors: []
---
0x201 PUSH1 0x0
0x203 DUP1
0x204 REVERT
---
0x201: V169 = 0x0
0x204: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb5]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5]

================================

Block 0x205
[0x205:0x235]
---
Predecessors: [0x1ee]
Successors: [0x236, 0x23f]
---
0x205 JUMPDEST
0x206 PUSH1 0x2
0x208 SLOAD
0x209 PUSH1 0x40
0x20b MLOAD
0x20c PUSH1 0x1
0x20e PUSH1 0xa0
0x210 PUSH1 0x2
0x212 EXP
0x213 SUB
0x214 SWAP1
0x215 SWAP2
0x216 AND
0x217 SWAP1
0x218 ADDRESS
0x219 BALANCE
0x21a DUP1
0x21b ISZERO
0x21c PUSH2 0x8fc
0x21f MUL
0x220 SWAP2
0x221 PUSH1 0x0
0x223 DUP2
0x224 DUP2
0x225 DUP2
0x226 DUP6
0x227 DUP9
0x228 DUP9
0x229 CALL
0x22a SWAP4
0x22b POP
0x22c POP
0x22d POP
0x22e POP
0x22f ISZERO
0x230 DUP1
0x231 ISZERO
0x232 PUSH2 0x23f
0x235 JUMPI
---
0x205: JUMPDEST 
0x206: V170 = 0x2
0x208: V171 = S[0x2]
0x209: V172 = 0x40
0x20b: V173 = M[0x40]
0x20c: V174 = 0x1
0x20e: V175 = 0xa0
0x210: V176 = 0x2
0x212: V177 = EXP 0x2 0xa0
0x213: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x216: V179 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0x218: V180 = ADDRESS
0x219: V181 = BALANCE V180
0x21b: V182 = ISZERO V181
0x21c: V183 = 0x8fc
0x21f: V184 = MUL 0x8fc V182
0x221: V185 = 0x0
0x229: V186 = CALL V184 V179 V181 V173 0x0 V173 0x0
0x22f: V187 = ISZERO V186
0x231: V188 = ISZERO V187
0x232: V189 = 0x23f
0x235: JUMPI 0x23f V188
---
Entry stack: [V13, 0xb5]
Stack pops: 0
Stack additions: [V187]
Exit stack: [V13, 0xb5, V187]

================================

Block 0x236
[0x236:0x23e]
---
Predecessors: [0x205]
Successors: []
---
0x236 RETURNDATASIZE
0x237 PUSH1 0x0
0x239 DUP1
0x23a RETURNDATACOPY
0x23b RETURNDATASIZE
0x23c PUSH1 0x0
0x23e REVERT
---
0x236: V190 = RETURNDATASIZE
0x237: V191 = 0x0
0x23a: RETURNDATACOPY 0x0 0x0 V190
0x23b: V192 = RETURNDATASIZE
0x23c: V193 = 0x0
0x23e: REVERT 0x0 V192
---
Entry stack: [V13, 0xb5, V187]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V187]

================================

Block 0x23f
[0x23f:0x297]
---
Predecessors: [0x205]
Successors: [0xb5]
---
0x23f JUMPDEST
0x240 POP
0x241 PUSH1 0x5
0x243 DUP1
0x244 SLOAD
0x245 PUSH2 0xff00
0x248 NOT
0x249 AND
0x24a PUSH2 0x100
0x24d OR
0x24e SWAP1
0x24f SSTORE
0x250 PUSH1 0x2
0x252 SLOAD
0x253 PUSH1 0x40
0x255 DUP1
0x256 MLOAD
0x257 PUSH1 0x1
0x259 PUSH1 0xa0
0x25b PUSH1 0x2
0x25d EXP
0x25e SUB
0x25f SWAP1
0x260 SWAP3
0x261 AND
0x262 DUP3
0x263 MSTORE
0x264 ADDRESS
0x265 BALANCE
0x266 PUSH1 0x20
0x268 DUP4
0x269 ADD
0x26a MSTORE
0x26b DUP1
0x26c MLOAD
0x26d PUSH32 0xa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76
0x28e SWAP3
0x28f DUP2
0x290 SWAP1
0x291 SUB
0x292 SWAP1
0x293 SWAP2
0x294 ADD
0x295 SWAP1
0x296 LOG1
0x297 JUMP
---
0x23f: JUMPDEST 
0x241: V194 = 0x5
0x244: V195 = S[0x5]
0x245: V196 = 0xff00
0x248: V197 = NOT 0xff00
0x249: V198 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V195
0x24a: V199 = 0x100
0x24d: V200 = OR 0x100 V198
0x24f: S[0x5] = V200
0x250: V201 = 0x2
0x252: V202 = S[0x2]
0x253: V203 = 0x40
0x256: V204 = M[0x40]
0x257: V205 = 0x1
0x259: V206 = 0xa0
0x25b: V207 = 0x2
0x25d: V208 = EXP 0x2 0xa0
0x25e: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x261: V210 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x263: M[V204] = V210
0x264: V211 = ADDRESS
0x265: V212 = BALANCE V211
0x266: V213 = 0x20
0x269: V214 = ADD V204 0x20
0x26a: M[V214] = V212
0x26c: V215 = M[0x40]
0x26d: V216 = 0xa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76
0x291: V217 = SUB V204 V215
0x294: V218 = ADD 0x40 V217
0x296: LOG V215 V218 0xa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76
0x297: JUMP 0xb5
---
Entry stack: [V13, 0xb5, V187]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x298
[0x298:0x2a6]
---
Predecessors: [0xc3]
Successors: [0xcc]
---
0x298 JUMPDEST
0x299 PUSH1 0x2
0x29b SLOAD
0x29c PUSH1 0x1
0x29e PUSH1 0xa0
0x2a0 PUSH1 0x2
0x2a2 EXP
0x2a3 SUB
0x2a4 AND
0x2a5 DUP2
0x2a6 JUMP
---
0x298: JUMPDEST 
0x299: V219 = 0x2
0x29b: V220 = S[0x2]
0x29c: V221 = 0x1
0x29e: V222 = 0xa0
0x2a0: V223 = 0x2
0x2a2: V224 = EXP 0x2 0xa0
0x2a3: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a4: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x2a6: JUMP 0xcc
---
Entry stack: [V13, 0xcc]
Stack pops: 1
Stack additions: [S0, V226]
Exit stack: [V13, 0xcc, V226]

================================

Block 0x2a7
[0x2a7:0x2b9]
---
Predecessors: [0xe8]
Successors: [0x2ba, 0x2be]
---
0x2a7 JUMPDEST
0x2a8 PUSH1 0x0
0x2aa SLOAD
0x2ab PUSH1 0x1
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SUB
0x2b3 AND
0x2b4 CALLER
0x2b5 EQ
0x2b6 PUSH2 0x2be
0x2b9 JUMPI
---
0x2a7: JUMPDEST 
0x2a8: V227 = 0x0
0x2aa: V228 = S[0x0]
0x2ab: V229 = 0x1
0x2ad: V230 = 0xa0
0x2af: V231 = 0x2
0x2b1: V232 = EXP 0x2 0xa0
0x2b2: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b3: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x2b4: V235 = CALLER
0x2b5: V236 = EQ V235 V234
0x2b6: V237 = 0x2be
0x2b9: JUMPI 0x2be V236
---
Entry stack: [V13, 0xb5]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5]

================================

Block 0x2ba
[0x2ba:0x2bd]
---
Predecessors: [0x2a7]
Successors: []
---
0x2ba PUSH1 0x0
0x2bc DUP1
0x2bd REVERT
---
0x2ba: V238 = 0x0
0x2bd: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb5]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5]

================================

Block 0x2be
[0x2be:0x2c7]
---
Predecessors: [0x2a7]
Successors: [0x2c8, 0x2cc]
---
0x2be JUMPDEST
0x2bf PUSH1 0x3
0x2c1 SLOAD
0x2c2 TIMESTAMP
0x2c3 LT
0x2c4 PUSH2 0x2cc
0x2c7 JUMPI
---
0x2be: JUMPDEST 
0x2bf: V239 = 0x3
0x2c1: V240 = S[0x3]
0x2c2: V241 = TIMESTAMP
0x2c3: V242 = LT V241 V240
0x2c4: V243 = 0x2cc
0x2c7: JUMPI 0x2cc V242
---
Entry stack: [V13, 0xb5]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5]

================================

Block 0x2c8
[0x2c8:0x2cb]
---
Predecessors: [0x2be]
Successors: []
---
0x2c8 PUSH1 0x0
0x2ca DUP1
0x2cb REVERT
---
0x2c8: V244 = 0x0
0x2cb: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb5]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5]

================================

Block 0x2cc
[0x2cc:0x2fc]
---
Predecessors: [0x2be]
Successors: [0x2fd, 0x306]
---
0x2cc JUMPDEST
0x2cd PUSH1 0x1
0x2cf SLOAD
0x2d0 PUSH1 0x40
0x2d2 MLOAD
0x2d3 PUSH1 0x1
0x2d5 PUSH1 0xa0
0x2d7 PUSH1 0x2
0x2d9 EXP
0x2da SUB
0x2db SWAP1
0x2dc SWAP2
0x2dd AND
0x2de SWAP1
0x2df ADDRESS
0x2e0 BALANCE
0x2e1 DUP1
0x2e2 ISZERO
0x2e3 PUSH2 0x8fc
0x2e6 MUL
0x2e7 SWAP2
0x2e8 PUSH1 0x0
0x2ea DUP2
0x2eb DUP2
0x2ec DUP2
0x2ed DUP6
0x2ee DUP9
0x2ef DUP9
0x2f0 CALL
0x2f1 SWAP4
0x2f2 POP
0x2f3 POP
0x2f4 POP
0x2f5 POP
0x2f6 ISZERO
0x2f7 DUP1
0x2f8 ISZERO
0x2f9 PUSH2 0x306
0x2fc JUMPI
---
0x2cc: JUMPDEST 
0x2cd: V245 = 0x1
0x2cf: V246 = S[0x1]
0x2d0: V247 = 0x40
0x2d2: V248 = M[0x40]
0x2d3: V249 = 0x1
0x2d5: V250 = 0xa0
0x2d7: V251 = 0x2
0x2d9: V252 = EXP 0x2 0xa0
0x2da: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2dd: V254 = AND V246 0xffffffffffffffffffffffffffffffffffffffff
0x2df: V255 = ADDRESS
0x2e0: V256 = BALANCE V255
0x2e2: V257 = ISZERO V256
0x2e3: V258 = 0x8fc
0x2e6: V259 = MUL 0x8fc V257
0x2e8: V260 = 0x0
0x2f0: V261 = CALL V259 V254 V256 V248 0x0 V248 0x0
0x2f6: V262 = ISZERO V261
0x2f8: V263 = ISZERO V262
0x2f9: V264 = 0x306
0x2fc: JUMPI 0x306 V263
---
Entry stack: [V13, 0xb5]
Stack pops: 0
Stack additions: [V262]
Exit stack: [V13, 0xb5, V262]

================================

Block 0x2fd
[0x2fd:0x305]
---
Predecessors: [0x2cc]
Successors: []
---
0x2fd RETURNDATASIZE
0x2fe PUSH1 0x0
0x300 DUP1
0x301 RETURNDATACOPY
0x302 RETURNDATASIZE
0x303 PUSH1 0x0
0x305 REVERT
---
0x2fd: V265 = RETURNDATASIZE
0x2fe: V266 = 0x0
0x301: RETURNDATACOPY 0x0 0x0 V265
0x302: V267 = RETURNDATASIZE
0x303: V268 = 0x0
0x305: REVERT 0x0 V267
---
Entry stack: [V13, 0xb5, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb5, V262]

================================

Block 0x306
[0x306:0x35c]
---
Predecessors: [0x2cc]
Successors: [0xb5]
---
0x306 JUMPDEST
0x307 POP
0x308 PUSH1 0x5
0x30a DUP1
0x30b SLOAD
0x30c PUSH1 0xff
0x30e NOT
0x30f AND
0x310 PUSH1 0x1
0x312 OR
0x313 SWAP1
0x314 SSTORE
0x315 PUSH1 0x2
0x317 SLOAD
0x318 PUSH1 0x40
0x31a DUP1
0x31b MLOAD
0x31c PUSH1 0x1
0x31e PUSH1 0xa0
0x320 PUSH1 0x2
0x322 EXP
0x323 SUB
0x324 SWAP1
0x325 SWAP3
0x326 AND
0x327 DUP3
0x328 MSTORE
0x329 ADDRESS
0x32a BALANCE
0x32b PUSH1 0x20
0x32d DUP4
0x32e ADD
0x32f MSTORE
0x330 DUP1
0x331 MLOAD
0x332 PUSH32 0x32f9105f1f75b5b33eb364ef7cbcc315a3ab271871d72edcdd802b851df2c322
0x353 SWAP3
0x354 DUP2
0x355 SWAP1
0x356 SUB
0x357 SWAP1
0x358 SWAP2
0x359 ADD
0x35a SWAP1
0x35b LOG1
0x35c JUMP
---
0x306: JUMPDEST 
0x308: V269 = 0x5
0x30b: V270 = S[0x5]
0x30c: V271 = 0xff
0x30e: V272 = NOT 0xff
0x30f: V273 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V270
0x310: V274 = 0x1
0x312: V275 = OR 0x1 V273
0x314: S[0x5] = V275
0x315: V276 = 0x2
0x317: V277 = S[0x2]
0x318: V278 = 0x40
0x31b: V279 = M[0x40]
0x31c: V280 = 0x1
0x31e: V281 = 0xa0
0x320: V282 = 0x2
0x322: V283 = EXP 0x2 0xa0
0x323: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x326: V285 = AND V277 0xffffffffffffffffffffffffffffffffffffffff
0x328: M[V279] = V285
0x329: V286 = ADDRESS
0x32a: V287 = BALANCE V286
0x32b: V288 = 0x20
0x32e: V289 = ADD V279 0x20
0x32f: M[V289] = V287
0x331: V290 = M[0x40]
0x332: V291 = 0x32f9105f1f75b5b33eb364ef7cbcc315a3ab271871d72edcdd802b851df2c322
0x356: V292 = SUB V279 V290
0x359: V293 = ADD 0x40 V292
0x35b: LOG V290 V293 0x32f9105f1f75b5b33eb364ef7cbcc315a3ab271871d72edcdd802b851df2c322
0x35c: JUMP 0xb5
---
Entry stack: [V13, 0xb5, V262]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x35d
[0x35d:0x365]
---
Predecessors: [0xfc]
Successors: [0x99]
---
0x35d JUMPDEST
0x35e PUSH1 0x5
0x360 SLOAD
0x361 PUSH1 0xff
0x363 AND
0x364 DUP2
0x365 JUMP
---
0x35d: JUMPDEST 
0x35e: V294 = 0x5
0x360: V295 = S[0x5]
0x361: V296 = 0xff
0x363: V297 = AND 0xff V295
0x365: JUMP 0x99
---
Entry stack: [V13, 0x99]
Stack pops: 1
Stack additions: [S0, V297]
Exit stack: [V13, 0x99, V297]

================================

Block 0x366
[0x366:0x374]
---
Predecessors: [0x111]
Successors: [0xcc]
---
0x366 JUMPDEST
0x367 PUSH1 0x0
0x369 SLOAD
0x36a PUSH1 0x1
0x36c PUSH1 0xa0
0x36e PUSH1 0x2
0x370 EXP
0x371 SUB
0x372 AND
0x373 DUP2
0x374 JUMP
---
0x366: JUMPDEST 
0x367: V298 = 0x0
0x369: V299 = S[0x0]
0x36a: V300 = 0x1
0x36c: V301 = 0xa0
0x36e: V302 = 0x2
0x370: V303 = EXP 0x2 0xa0
0x371: V304 = SUB 0x10000000000000000000000000000000000000000 0x1
0x372: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x374: JUMP 0xcc
---
Entry stack: [V13, 0xcc]
Stack pops: 1
Stack additions: [S0, V305]
Exit stack: [V13, 0xcc, V305]

================================

Block 0x375
[0x375:0x3b4]
---
Predecessors: [0x126]
Successors: [0x3b5, 0x3fb]
---
0x375 JUMPDEST
0x376 PUSH1 0x4
0x378 DUP1
0x379 SLOAD
0x37a PUSH1 0x40
0x37c DUP1
0x37d MLOAD
0x37e PUSH1 0x20
0x380 PUSH1 0x2
0x382 PUSH1 0x1
0x384 DUP6
0x385 AND
0x386 ISZERO
0x387 PUSH2 0x100
0x38a MUL
0x38b PUSH1 0x0
0x38d NOT
0x38e ADD
0x38f SWAP1
0x390 SWAP5
0x391 AND
0x392 SWAP4
0x393 SWAP1
0x394 SWAP4
0x395 DIV
0x396 PUSH1 0x1f
0x398 DUP2
0x399 ADD
0x39a DUP5
0x39b SWAP1
0x39c DIV
0x39d DUP5
0x39e MUL
0x39f DUP3
0x3a0 ADD
0x3a1 DUP5
0x3a2 ADD
0x3a3 SWAP1
0x3a4 SWAP3
0x3a5 MSTORE
0x3a6 DUP2
0x3a7 DUP2
0x3a8 MSTORE
0x3a9 SWAP3
0x3aa SWAP2
0x3ab DUP4
0x3ac ADD
0x3ad DUP3
0x3ae DUP3
0x3af DUP1
0x3b0 ISZERO
0x3b1 PUSH2 0x3fb
0x3b4 JUMPI
---
0x375: JUMPDEST 
0x376: V306 = 0x4
0x379: V307 = S[0x4]
0x37a: V308 = 0x40
0x37d: V309 = M[0x40]
0x37e: V310 = 0x20
0x380: V311 = 0x2
0x382: V312 = 0x1
0x385: V313 = AND V307 0x1
0x386: V314 = ISZERO V313
0x387: V315 = 0x100
0x38a: V316 = MUL 0x100 V314
0x38b: V317 = 0x0
0x38d: V318 = NOT 0x0
0x38e: V319 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V316
0x391: V320 = AND V307 V319
0x395: V321 = DIV V320 0x2
0x396: V322 = 0x1f
0x399: V323 = ADD V321 0x1f
0x39c: V324 = DIV V323 0x20
0x39e: V325 = MUL 0x20 V324
0x3a0: V326 = ADD V309 V325
0x3a2: V327 = ADD 0x20 V326
0x3a5: M[0x40] = V327
0x3a8: M[V309] = V321
0x3ac: V328 = ADD V309 0x20
0x3b0: V329 = ISZERO V321
0x3b1: V330 = 0x3fb
0x3b4: JUMPI 0x3fb V329
---
Entry stack: [V13, 0x12f]
Stack pops: 0
Stack additions: [V309, 0x4, V321, V328, 0x4, V321]
Exit stack: [V13, 0x12f, V309, 0x4, V321, V328, 0x4, V321]

================================

Block 0x3b5
[0x3b5:0x3bc]
---
Predecessors: [0x375]
Successors: [0x3bd, 0x3d0]
---
0x3b5 DUP1
0x3b6 PUSH1 0x1f
0x3b8 LT
0x3b9 PUSH2 0x3d0
0x3bc JUMPI
---
0x3b6: V331 = 0x1f
0x3b8: V332 = LT 0x1f V321
0x3b9: V333 = 0x3d0
0x3bc: JUMPI 0x3d0 V332
---
Entry stack: [V13, 0x12f, V309, 0x4, V321, V328, 0x4, V321]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x12f, V309, 0x4, V321, V328, 0x4, V321]

================================

Block 0x3bd
[0x3bd:0x3cf]
---
Predecessors: [0x3b5]
Successors: [0x3fb]
---
0x3bd PUSH2 0x100
0x3c0 DUP1
0x3c1 DUP4
0x3c2 SLOAD
0x3c3 DIV
0x3c4 MUL
0x3c5 DUP4
0x3c6 MSTORE
0x3c7 SWAP2
0x3c8 PUSH1 0x20
0x3ca ADD
0x3cb SWAP2
0x3cc PUSH2 0x3fb
0x3cf JUMP
---
0x3bd: V334 = 0x100
0x3c2: V335 = S[0x4]
0x3c3: V336 = DIV V335 0x100
0x3c4: V337 = MUL V336 0x100
0x3c6: M[V328] = V337
0x3c8: V338 = 0x20
0x3ca: V339 = ADD 0x20 V328
0x3cc: V340 = 0x3fb
0x3cf: JUMP 0x3fb
---
Entry stack: [V13, 0x12f, V309, 0x4, V321, V328, 0x4, V321]
Stack pops: 3
Stack additions: [V339, S1, S0]
Exit stack: [V13, 0x12f, V309, 0x4, V321, V339, 0x4, V321]

================================

Block 0x3d0
[0x3d0:0x3dd]
---
Predecessors: [0x3b5]
Successors: [0x3de]
---
0x3d0 JUMPDEST
0x3d1 DUP3
0x3d2 ADD
0x3d3 SWAP2
0x3d4 SWAP1
0x3d5 PUSH1 0x0
0x3d7 MSTORE
0x3d8 PUSH1 0x20
0x3da PUSH1 0x0
0x3dc SHA3
0x3dd SWAP1
---
0x3d0: JUMPDEST 
0x3d2: V341 = ADD V328 V321
0x3d5: V342 = 0x0
0x3d7: M[0x0] = 0x4
0x3d8: V343 = 0x20
0x3da: V344 = 0x0
0x3dc: V345 = SHA3 0x0 0x20
---
Entry stack: [V13, 0x12f, V309, 0x4, V321, V328, 0x4, V321]
Stack pops: 3
Stack additions: [V341, V345, S2]
Exit stack: [V13, 0x12f, V309, 0x4, V321, V341, V345, V328]

================================

Block 0x3de
[0x3de:0x3f1]
---
Predecessors: [0x3d0, 0x3de]
Successors: [0x3de, 0x3f2]
---
0x3de JUMPDEST
0x3df DUP2
0x3e0 SLOAD
0x3e1 DUP2
0x3e2 MSTORE
0x3e3 SWAP1
0x3e4 PUSH1 0x1
0x3e6 ADD
0x3e7 SWAP1
0x3e8 PUSH1 0x20
0x3ea ADD
0x3eb DUP1
0x3ec DUP4
0x3ed GT
0x3ee PUSH2 0x3de
0x3f1 JUMPI
---
0x3de: JUMPDEST 
0x3e0: V346 = S[S1]
0x3e2: M[S0] = V346
0x3e4: V347 = 0x1
0x3e6: V348 = ADD 0x1 S1
0x3e8: V349 = 0x20
0x3ea: V350 = ADD 0x20 S0
0x3ed: V351 = GT V341 V350
0x3ee: V352 = 0x3de
0x3f1: JUMPI 0x3de V351
---
Entry stack: [V13, 0x12f, V309, 0x4, V321, V341, S1, S0]
Stack pops: 3
Stack additions: [S2, V348, V350]
Exit stack: [V13, 0x12f, V309, 0x4, V321, V341, V348, V350]

================================

Block 0x3f2
[0x3f2:0x3fa]
---
Predecessors: [0x3de]
Successors: [0x3fb]
---
0x3f2 DUP3
0x3f3 SWAP1
0x3f4 SUB
0x3f5 PUSH1 0x1f
0x3f7 AND
0x3f8 DUP3
0x3f9 ADD
0x3fa SWAP2
---
0x3f4: V353 = SUB V350 V341
0x3f5: V354 = 0x1f
0x3f7: V355 = AND 0x1f V353
0x3f9: V356 = ADD V341 V355
---
Entry stack: [V13, 0x12f, V309, 0x4, V321, V341, V348, V350]
Stack pops: 3
Stack additions: [V356, S1, S2]
Exit stack: [V13, 0x12f, V309, 0x4, V321, V356, V348, V341]

================================

Block 0x3fb
[0x3fb:0x402]
---
Predecessors: [0x375, 0x3bd, 0x3f2]
Successors: [0x12f]
---
0x3fb JUMPDEST
0x3fc POP
0x3fd POP
0x3fe POP
0x3ff POP
0x400 POP
0x401 DUP2
0x402 JUMP
---
0x3fb: JUMPDEST 
0x402: JUMP 0x12f
---
Entry stack: [V13, 0x12f, V309, 0x4, V321, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V13, 0x12f, V309]

================================

Block 0x403
[0x403:0x408]
---
Predecessors: [0x1b0]
Successors: [0x1b9]
---
0x403 JUMPDEST
0x404 PUSH1 0x3
0x406 SLOAD
0x407 DUP2
0x408 JUMP
---
0x403: JUMPDEST 
0x404: V357 = 0x3
0x406: V358 = S[0x3]
0x408: JUMP 0x1b9
---
Entry stack: [V13, 0x1b9]
Stack pops: 1
Stack additions: [S0, V358]
Exit stack: [V13, 0x1b9, V358]

================================

Block 0x409
[0x409:0x417]
---
Predecessors: [0x1d7]
Successors: [0xcc]
---
0x409 JUMPDEST
0x40a PUSH1 0x1
0x40c SLOAD
0x40d PUSH1 0x1
0x40f PUSH1 0xa0
0x411 PUSH1 0x2
0x413 EXP
0x414 SUB
0x415 AND
0x416 DUP2
0x417 JUMP
---
0x409: JUMPDEST 
0x40a: V359 = 0x1
0x40c: V360 = S[0x1]
0x40d: V361 = 0x1
0x40f: V362 = 0xa0
0x411: V363 = 0x2
0x413: V364 = EXP 0x2 0xa0
0x414: V365 = SUB 0x10000000000000000000000000000000000000000 0x1
0x415: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x417: JUMP 0xcc
---
Entry stack: [V13, 0xcc]
Stack pops: 1
Stack additions: [S0, V366]
Exit stack: [V13, 0xcc, V366]

================================

Block 0x418
[0x418:0x445]
---
Predecessors: []
Successors: []
---
0x418 STOP
0x419 LOG1
0x41a PUSH6 0x627a7a723058
0x421 SHA3
0x422 MISSING 0xb2
0x423 SWAP5
0x424 MISSING 0xef
0x425 MISSING 0xd8
0x426 GASLIMIT
0x427 MISSING 0x4a
0x428 MISSING 0x21
0x429 MISSING 0xd4
0x42a ADD
0x42b PUSH14 0xa5e3d319648c65b6641d7ea6fd26
0x43a MISSING 0x4e
0x43b CREATE
0x43c RETURNDATASIZE
0x43d SWAP8
0x43e MISSING 0xb9
0x43f PUSH6 0xd2670029
---
0x418: STOP 
0x419: LOG S0 S1 S2
0x41a: V367 = 0x627a7a723058
0x421: V368 = SHA3 0x627a7a723058 S3
0x422: MISSING 0xb2
0x424: MISSING 0xef
0x425: MISSING 0xd8
0x426: V369 = GASLIMIT
0x427: MISSING 0x4a
0x428: MISSING 0x21
0x429: MISSING 0xd4
0x42a: V370 = ADD S0 S1
0x42b: V371 = 0xa5e3d319648c65b6641d7ea6fd26
0x43a: MISSING 0x4e
0x43b: V372 = CREATE S0 S1 S2
0x43c: V373 = RETURNDATASIZE
0x43e: MISSING 0xb9
0x43f: V374 = 0xd2670029
---
Entry stack: []
Stack pops: 0
Stack additions: [V368, S5, S1, S2, S3, S4, S0, V369, 0xa5e3d319648c65b6641d7ea6fd26, V370, S9, V372, S3, S4, S5, S6, S7, S8, V373, 0xd2670029]
Exit stack: []

================================

Function 0:
Public function signature: 0x12f53950
Entry block: 0x84
Exit block: 0x99
Body: 0x84, 0x8c, 0x90, 0x99, 0x1e0

Function 1:
Public function signature: 0x2d2295ad
Entry block: 0xad
Exit block: 0xb5
Body: 0xad, 0xb5, 0x1ee, 0x201, 0x205, 0x236, 0x23f

Function 2:
Public function signature: 0x733fd8c7
Entry block: 0xb7
Exit block: 0xcc
Body: 0xb7, 0xbf, 0xc3, 0xcc, 0x298

Function 3:
Public function signature: 0x7803af8c
Entry block: 0xe8
Exit block: 0xb5
Body: 0xb5, 0xe8, 0x2a7, 0x2ba, 0x2be, 0x2c8, 0x2cc, 0x2fd, 0x306

Function 4:
Public function signature: 0x7d85facd
Entry block: 0xf0
Exit block: 0x99
Body: 0x99, 0xf0, 0xf8, 0xfc, 0x35d

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x105
Exit block: 0xcc
Body: 0xcc, 0x105, 0x10d, 0x111, 0x366

Function 6:
Public function signature: 0x904d4a73
Entry block: 0x11a
Exit block: 0x196
Body: 0x11a, 0x122, 0x126, 0x12f, 0x151, 0x15a, 0x169, 0x17d, 0x196, 0x375, 0x3b5, 0x3bd, 0x3d0, 0x3de, 0x3f2, 0x3fb

Function 7:
Public function signature: 0xda284dcc
Entry block: 0x1a4
Exit block: 0x1b9
Body: 0x1a4, 0x1ac, 0x1b0, 0x1b9, 0x403

Function 8:
Public function signature: 0xf6954379
Entry block: 0x1cb
Exit block: 0xcc
Body: 0xcc, 0x1cb, 0x1d3, 0x1d7, 0x409

Function 9:
Public fallback function
Entry block: 0x7f
Exit block: 0x7f
Body: 0x7f

