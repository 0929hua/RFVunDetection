Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x81]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x81
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x81
0xa: JUMPI 0x81 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x2c4]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x29dcb0cf
0x3a EQ
0x3b PUSH2 0x2c4
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x29dcb0cf
0x3a: V12 = EQ 0x29dcb0cf V10
0x3b: V13 = 0x2c4
0x3e: JUMPI 0x2c4 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x2ed]
---
0x3f DUP1
0x40 PUSH4 0x38af3eed
0x45 EQ
0x46 PUSH2 0x2ed
0x49 JUMPI
---
0x40: V14 = 0x38af3eed
0x45: V15 = EQ 0x38af3eed V10
0x46: V16 = 0x2ed
0x49: JUMPI 0x2ed V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x342]
---
0x4a DUP1
0x4b PUSH4 0x6e66f6e9
0x50 EQ
0x51 PUSH2 0x342
0x54 JUMPI
---
0x4b: V17 = 0x6e66f6e9
0x50: V18 = EQ 0x6e66f6e9 V10
0x51: V19 = 0x342
0x54: JUMPI 0x342 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x397]
---
0x55 DUP1
0x56 PUSH4 0x70a08231
0x5b EQ
0x5c PUSH2 0x397
0x5f JUMPI
---
0x56: V20 = 0x70a08231
0x5b: V21 = EQ 0x70a08231 V10
0x5c: V22 = 0x397
0x5f: JUMPI 0x397 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x3e4]
---
0x60 DUP1
0x61 PUSH4 0x7b3e5e7b
0x66 EQ
0x67 PUSH2 0x3e4
0x6a JUMPI
---
0x61: V23 = 0x7b3e5e7b
0x66: V24 = EQ 0x7b3e5e7b V10
0x67: V25 = 0x3e4
0x6a: JUMPI 0x3e4 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x40d]
---
0x6b DUP1
0x6c PUSH4 0x9e1a4d19
0x71 EQ
0x72 PUSH2 0x40d
0x75 JUMPI
---
0x6c: V26 = 0x9e1a4d19
0x71: V27 = EQ 0x9e1a4d19 V10
0x72: V28 = 0x40d
0x75: JUMPI 0x40d V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x436]
---
0x76 DUP1
0x77 PUSH4 0xfd6b7ef8
0x7c EQ
0x7d PUSH2 0x436
0x80 JUMPI
---
0x77: V29 = 0xfd6b7ef8
0x7c: V30 = EQ 0xfd6b7ef8 V10
0x7d: V31 = 0x436
0x80: JUMPI 0x436 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8f]
---
Predecessors: [0x0, 0x76]
Successors: [0x90, 0x2c0]
---
0x81 JUMPDEST
0x82 PUSH1 0x0
0x84 DUP1
0x85 PUSH1 0x3
0x87 SLOAD
0x88 TIMESTAMP
0x89 GT
0x8a ISZERO
0x8b ISZERO
0x8c PUSH2 0x2c0
0x8f JUMPI
---
0x81: JUMPDEST 
0x82: V32 = 0x0
0x85: V33 = 0x3
0x87: V34 = S[0x3]
0x88: V35 = TIMESTAMP
0x89: V36 = GT V35 V34
0x8a: V37 = ISZERO V36
0x8b: V38 = ISZERO V37
0x8c: V39 = 0x2c0
0x8f: JUMPI 0x2c0 V38
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x0, 0x0]

================================

Block 0x90
[0x90:0xff]
---
Predecessors: [0x81]
Successors: [0x100, 0x11a]
---
0x90 CALLVALUE
0x91 SWAP2
0x92 POP
0x93 DUP2
0x94 PUSH1 0x8
0x96 PUSH1 0x0
0x98 CALLER
0x99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae AND
0xaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4 AND
0xc5 DUP2
0xc6 MSTORE
0xc7 PUSH1 0x20
0xc9 ADD
0xca SWAP1
0xcb DUP2
0xcc MSTORE
0xcd PUSH1 0x20
0xcf ADD
0xd0 PUSH1 0x0
0xd2 SHA3
0xd3 PUSH1 0x0
0xd5 DUP3
0xd6 DUP3
0xd7 SLOAD
0xd8 ADD
0xd9 SWAP3
0xda POP
0xdb POP
0xdc DUP2
0xdd SWAP1
0xde SSTORE
0xdf POP
0xe0 DUP2
0xe1 PUSH1 0x2
0xe3 PUSH1 0x0
0xe5 DUP3
0xe6 DUP3
0xe7 SLOAD
0xe8 ADD
0xe9 SWAP3
0xea POP
0xeb POP
0xec DUP2
0xed SWAP1
0xee SSTORE
0xef POP
0xf0 PUSH3 0x93a80
0xf4 PUSH1 0x6
0xf6 SLOAD
0xf7 ADD
0xf8 TIMESTAMP
0xf9 GT
0xfa ISZERO
0xfb ISZERO
0xfc PUSH2 0x11a
0xff JUMPI
---
0x90: V40 = CALLVALUE
0x94: V41 = 0x8
0x96: V42 = 0x0
0x98: V43 = CALLER
0x99: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xae: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xaf: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xc6: M[0x0] = V47
0xc7: V48 = 0x20
0xc9: V49 = ADD 0x20 0x0
0xcc: M[0x20] = 0x8
0xcd: V50 = 0x20
0xcf: V51 = ADD 0x20 0x20
0xd0: V52 = 0x0
0xd2: V53 = SHA3 0x0 0x40
0xd3: V54 = 0x0
0xd7: V55 = S[V53]
0xd8: V56 = ADD V55 V40
0xde: S[V53] = V56
0xe1: V57 = 0x2
0xe3: V58 = 0x0
0xe7: V59 = S[0x2]
0xe8: V60 = ADD V59 V40
0xee: S[0x2] = V60
0xf0: V61 = 0x93a80
0xf4: V62 = 0x6
0xf6: V63 = S[0x6]
0xf7: V64 = ADD V63 0x93a80
0xf8: V65 = TIMESTAMP
0xf9: V66 = GT V65 V64
0xfa: V67 = ISZERO V66
0xfb: V68 = ISZERO V67
0xfc: V69 = 0x11a
0xff: JUMPI 0x11a V68
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 2
Stack additions: [V40, S0]
Exit stack: [V10, V40, 0x0]

================================

Block 0x100
[0x100:0x112]
---
Predecessors: [0x90]
Successors: [0x44b]
---
0x100 PUSH2 0x113
0x103 PUSH8 0x1bc16d674ec80000
0x10c PUSH1 0x4
0x10e SLOAD
0x10f PUSH2 0x44b
0x112 JUMP
---
0x100: V70 = 0x113
0x103: V71 = 0x1bc16d674ec80000
0x10c: V72 = 0x4
0x10e: V73 = S[0x4]
0x10f: V74 = 0x44b
0x112: JUMP 0x44b
---
Entry stack: [V10, V40, 0x0]
Stack pops: 0
Stack additions: [0x113, 0x1bc16d674ec80000, V73]
Exit stack: [V10, V40, 0x0, 0x113, 0x1bc16d674ec80000, V73]

================================

Block 0x113
[0x113:0x119]
---
Predecessors: [0x459]
Successors: [0x131]
---
0x113 JUMPDEST
0x114 SWAP1
0x115 POP
0x116 PUSH2 0x131
0x119 JUMP
---
0x113: JUMPDEST 
0x116: V75 = 0x131
0x119: JUMP 0x131
---
Entry stack: [V10, S5, S4, S3, S2, S1, V269]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S5, S4, S3, S2, V269]

================================

Block 0x11a
[0x11a:0x12d]
---
Predecessors: [0x90]
Successors: [0x44b]
---
0x11a JUMPDEST
0x11b PUSH2 0x12e
0x11e PUSH8 0x29a2241af62c0000
0x127 PUSH1 0x4
0x129 SLOAD
0x12a PUSH2 0x44b
0x12d JUMP
---
0x11a: JUMPDEST 
0x11b: V76 = 0x12e
0x11e: V77 = 0x29a2241af62c0000
0x127: V78 = 0x4
0x129: V79 = S[0x4]
0x12a: V80 = 0x44b
0x12d: JUMP 0x44b
---
Entry stack: [V10, V40, 0x0]
Stack pops: 0
Stack additions: [0x12e, 0x29a2241af62c0000, V79]
Exit stack: [V10, V40, 0x0, 0x12e, 0x29a2241af62c0000, V79]

================================

Block 0x12e
[0x12e:0x130]
---
Predecessors: [0x459]
Successors: [0x131]
---
0x12e JUMPDEST
0x12f SWAP1
0x130 POP
---
0x12e: JUMPDEST 
---
Entry stack: [V10, S5, S4, S3, S2, S1, V269]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S5, S4, S3, S2, V269]

================================

Block 0x131
[0x131:0x140]
---
Predecessors: [0x113, 0x12e]
Successors: [0x44b]
---
0x131 JUMPDEST
0x132 PUSH2 0x146
0x135 PUSH1 0x1
0x137 SLOAD
0x138 PUSH2 0x141
0x13b DUP5
0x13c DUP5
0x13d PUSH2 0x44b
0x140 JUMP
---
0x131: JUMPDEST 
0x132: V81 = 0x146
0x135: V82 = 0x1
0x137: V83 = S[0x1]
0x138: V84 = 0x141
0x13d: V85 = 0x44b
0x140: JUMP 0x44b
---
Entry stack: [V10, S4, S3, S2, S1, V269]
Stack pops: 2
Stack additions: [S1, S0, 0x146, V83, 0x141, S1, S0]
Exit stack: [V10, S4, S3, S2, S1, V269, 0x146, V83, 0x141, S1, V269]

================================

Block 0x141
[0x141:0x145]
---
Predecessors: [0x459]
Successors: [0x466]
---
0x141 JUMPDEST
0x142 PUSH2 0x466
0x145 JUMP
---
0x141: JUMPDEST 
0x142: V86 = 0x466
0x145: JUMP 0x466
---
Entry stack: [V10, S5, S4, S3, S2, S1, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, S3, S2, S1, V269]

================================

Block 0x146
[0x146:0x157]
---
Predecessors: [0x474]
Successors: [0x158, 0x15c]
---
0x146 JUMPDEST
0x147 PUSH1 0x1
0x149 DUP2
0x14a SWAP1
0x14b SSTORE
0x14c POP
0x14d PUSH1 0x0
0x14f PUSH1 0x1
0x151 SLOAD
0x152 LT
0x153 ISZERO
0x154 PUSH2 0x15c
0x157 JUMPI
---
0x146: JUMPDEST 
0x147: V87 = 0x1
0x14b: S[0x1] = V276
0x14d: V88 = 0x0
0x14f: V89 = 0x1
0x151: V90 = S[0x1]
0x152: V91 = LT V90 0x0
0x153: V92 = ISZERO V91
0x154: V93 = 0x15c
0x157: JUMPI 0x15c V92
---
Entry stack: [V10, S3, S2, S1, V276]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S3, S2, S1]

================================

Block 0x158
[0x158:0x15b]
---
Predecessors: [0x146]
Successors: []
---
0x158 PUSH1 0x0
0x15a DUP1
0x15b REVERT
---
0x158: V94 = 0x0
0x15b: REVERT 0x0 0x0
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, S0]

================================

Block 0x15c
[0x15c:0x1ae]
---
Predecessors: [0x146]
Successors: [0x44b]
---
0x15c JUMPDEST
0x15d PUSH1 0x7
0x15f PUSH1 0x0
0x161 SWAP1
0x162 SLOAD
0x163 SWAP1
0x164 PUSH2 0x100
0x167 EXP
0x168 SWAP1
0x169 DIV
0x16a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17f AND
0x180 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x195 AND
0x196 PUSH4 0xa9059cbb
0x19b CALLER
0x19c PUSH2 0x1af
0x19f PUSH8 0xde0b6b3a7640000
0x1a8 DUP7
0x1a9 MUL
0x1aa DUP6
0x1ab PUSH2 0x44b
0x1ae JUMP
---
0x15c: JUMPDEST 
0x15d: V95 = 0x7
0x15f: V96 = 0x0
0x162: V97 = S[0x7]
0x164: V98 = 0x100
0x167: V99 = EXP 0x100 0x0
0x169: V100 = DIV V97 0x1
0x16a: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x17f: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x180: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x195: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x196: V105 = 0xa9059cbb
0x19b: V106 = CALLER
0x19c: V107 = 0x1af
0x19f: V108 = 0xde0b6b3a7640000
0x1a9: V109 = MUL S1 0xde0b6b3a7640000
0x1ab: V110 = 0x44b
0x1ae: JUMP 0x44b
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V104, 0xa9059cbb, V106, 0x1af, V109, S0]
Exit stack: [V10, S2, S1, S0, V104, 0xa9059cbb, V106, 0x1af, V109, S0]

================================

Block 0x1af
[0x1af:0x22e]
---
Predecessors: [0x459]
Successors: [0x22f, 0x233]
---
0x1af JUMPDEST
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP4
0x1b4 PUSH4 0xffffffff
0x1b9 AND
0x1ba PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1d8 MUL
0x1d9 DUP2
0x1da MSTORE
0x1db PUSH1 0x4
0x1dd ADD
0x1de DUP1
0x1df DUP4
0x1e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f5 AND
0x1f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20b AND
0x20c DUP2
0x20d MSTORE
0x20e PUSH1 0x20
0x210 ADD
0x211 DUP3
0x212 DUP2
0x213 MSTORE
0x214 PUSH1 0x20
0x216 ADD
0x217 SWAP3
0x218 POP
0x219 POP
0x21a POP
0x21b PUSH1 0x0
0x21d PUSH1 0x40
0x21f MLOAD
0x220 DUP1
0x221 DUP4
0x222 SUB
0x223 DUP2
0x224 PUSH1 0x0
0x226 DUP8
0x227 DUP1
0x228 EXTCODESIZE
0x229 ISZERO
0x22a ISZERO
0x22b PUSH2 0x233
0x22e JUMPI
---
0x1af: JUMPDEST 
0x1b0: V111 = 0x40
0x1b2: V112 = M[0x40]
0x1b4: V113 = 0xffffffff
0x1b9: V114 = AND 0xffffffff S2
0x1ba: V115 = 0x100000000000000000000000000000000000000000000000000000000
0x1d8: V116 = MUL 0x100000000000000000000000000000000000000000000000000000000 V114
0x1da: M[V112] = V116
0x1db: V117 = 0x4
0x1dd: V118 = ADD 0x4 V112
0x1e0: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f5: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x1f6: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x20d: M[V118] = V122
0x20e: V123 = 0x20
0x210: V124 = ADD 0x20 V118
0x213: M[V124] = V269
0x214: V125 = 0x20
0x216: V126 = ADD 0x20 V124
0x21b: V127 = 0x0
0x21d: V128 = 0x40
0x21f: V129 = M[0x40]
0x222: V130 = SUB V126 V129
0x224: V131 = 0x0
0x228: V132 = EXTCODESIZE S3
0x229: V133 = ISZERO V132
0x22a: V134 = ISZERO V133
0x22b: V135 = 0x233
0x22e: JUMPI 0x233 V134
---
Entry stack: [V10, S5, S4, S3, S2, S1, V269]
Stack pops: 4
Stack additions: [S3, S2, V126, 0x0, V129, V130, V129, 0x0, S3]
Exit stack: [V10, S5, S4, S3, S2, V126, 0x0, V129, V130, V129, 0x0, S3]

================================

Block 0x22f
[0x22f:0x232]
---
Predecessors: [0x1af]
Successors: []
---
0x22f PUSH1 0x0
0x231 DUP1
0x232 REVERT
---
0x22f: V136 = 0x0
0x232: REVERT 0x0 0x0
---
Entry stack: [V10, S10, S9, S8, S7, V126, 0x0, V129, V130, V129, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, S9, S8, S7, V126, 0x0, V129, V130, V129, 0x0, S0]

================================

Block 0x233
[0x233:0x23f]
---
Predecessors: [0x1af]
Successors: [0x240, 0x244]
---
0x233 JUMPDEST
0x234 PUSH2 0x2c6
0x237 GAS
0x238 SUB
0x239 CALL
0x23a ISZERO
0x23b ISZERO
0x23c PUSH2 0x244
0x23f JUMPI
---
0x233: JUMPDEST 
0x234: V137 = 0x2c6
0x237: V138 = GAS
0x238: V139 = SUB V138 0x2c6
0x239: V140 = CALL V139 S0 0x0 V129 V130 V129 0x0
0x23a: V141 = ISZERO V140
0x23b: V142 = ISZERO V141
0x23c: V143 = 0x244
0x23f: JUMPI 0x244 V142
---
Entry stack: [V10, S10, S9, S8, S7, V126, 0x0, V129, V130, V129, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S10, S9, S8, S7, V126]

================================

Block 0x240
[0x240:0x243]
---
Predecessors: [0x233]
Successors: []
---
0x240 PUSH1 0x0
0x242 DUP1
0x243 REVERT
---
0x240: V144 = 0x0
0x243: REVERT 0x0 0x0
---
Entry stack: [V10, S4, S3, S2, S1, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, S3, S2, S1, V126]

================================

Block 0x244
[0x244:0x2bf]
---
Predecessors: [0x233]
Successors: [0x2c0]
---
0x244 JUMPDEST
0x245 POP
0x246 POP
0x247 POP
0x248 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x269 CALLER
0x26a DUP4
0x26b PUSH1 0x1
0x26d PUSH1 0x40
0x26f MLOAD
0x270 DUP1
0x271 DUP5
0x272 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x287 AND
0x288 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29d AND
0x29e DUP2
0x29f MSTORE
0x2a0 PUSH1 0x20
0x2a2 ADD
0x2a3 DUP4
0x2a4 DUP2
0x2a5 MSTORE
0x2a6 PUSH1 0x20
0x2a8 ADD
0x2a9 DUP3
0x2aa ISZERO
0x2ab ISZERO
0x2ac ISZERO
0x2ad ISZERO
0x2ae DUP2
0x2af MSTORE
0x2b0 PUSH1 0x20
0x2b2 ADD
0x2b3 SWAP4
0x2b4 POP
0x2b5 POP
0x2b6 POP
0x2b7 POP
0x2b8 PUSH1 0x40
0x2ba MLOAD
0x2bb DUP1
0x2bc SWAP2
0x2bd SUB
0x2be SWAP1
0x2bf LOG1
---
0x244: JUMPDEST 
0x248: V145 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x269: V146 = CALLER
0x26b: V147 = 0x1
0x26d: V148 = 0x40
0x26f: V149 = M[0x40]
0x272: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x287: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x288: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x29f: M[V149] = V153
0x2a0: V154 = 0x20
0x2a2: V155 = ADD 0x20 V149
0x2a5: M[V155] = S4
0x2a6: V156 = 0x20
0x2a8: V157 = ADD 0x20 V155
0x2aa: V158 = ISZERO 0x1
0x2ab: V159 = ISZERO 0x0
0x2ac: V160 = ISZERO 0x1
0x2ad: V161 = ISZERO 0x0
0x2af: M[V157] = 0x1
0x2b0: V162 = 0x20
0x2b2: V163 = ADD 0x20 V157
0x2b8: V164 = 0x40
0x2ba: V165 = M[0x40]
0x2bd: V166 = SUB V163 V165
0x2bf: LOG V165 V166 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, S4, S3, S2, S1, V126]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V10, S4, S3]

================================

Block 0x2c0
[0x2c0:0x2c3]
---
Predecessors: [0x81, 0x244]
Successors: []
---
0x2c0 JUMPDEST
0x2c1 POP
0x2c2 POP
0x2c3 STOP
---
0x2c0: JUMPDEST 
0x2c3: STOP 
---
Entry stack: [V10, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c4
[0x2c4:0x2ca]
---
Predecessors: [0xb]
Successors: [0x2cb, 0x2cf]
---
0x2c4 JUMPDEST
0x2c5 CALLVALUE
0x2c6 ISZERO
0x2c7 PUSH2 0x2cf
0x2ca JUMPI
---
0x2c4: JUMPDEST 
0x2c5: V167 = CALLVALUE
0x2c6: V168 = ISZERO V167
0x2c7: V169 = 0x2cf
0x2ca: JUMPI 0x2cf V168
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cb
[0x2cb:0x2ce]
---
Predecessors: [0x2c4]
Successors: []
---
0x2cb PUSH1 0x0
0x2cd DUP1
0x2ce REVERT
---
0x2cb: V170 = 0x0
0x2ce: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cf
[0x2cf:0x2d6]
---
Predecessors: [0x2c4]
Successors: [0x47f]
---
0x2cf JUMPDEST
0x2d0 PUSH2 0x2d7
0x2d3 PUSH2 0x47f
0x2d6 JUMP
---
0x2cf: JUMPDEST 
0x2d0: V171 = 0x2d7
0x2d3: V172 = 0x47f
0x2d6: JUMP 0x47f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2d7]
Exit stack: [V10, 0x2d7]

================================

Block 0x2d7
[0x2d7:0x2ec]
---
Predecessors: [0x47f]
Successors: []
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x40
0x2da MLOAD
0x2db DUP1
0x2dc DUP3
0x2dd DUP2
0x2de MSTORE
0x2df PUSH1 0x20
0x2e1 ADD
0x2e2 SWAP2
0x2e3 POP
0x2e4 POP
0x2e5 PUSH1 0x40
0x2e7 MLOAD
0x2e8 DUP1
0x2e9 SWAP2
0x2ea SUB
0x2eb SWAP1
0x2ec RETURN
---
0x2d7: JUMPDEST 
0x2d8: V173 = 0x40
0x2da: V174 = M[0x40]
0x2de: M[V174] = V278
0x2df: V175 = 0x20
0x2e1: V176 = ADD 0x20 V174
0x2e5: V177 = 0x40
0x2e7: V178 = M[0x40]
0x2ea: V179 = SUB V176 V178
0x2ec: RETURN V178 V179
---
Entry stack: [V10, 0x2d7, V278]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2d7]

================================

Block 0x2ed
[0x2ed:0x2f3]
---
Predecessors: [0x3f]
Successors: [0x2f4, 0x2f8]
---
0x2ed JUMPDEST
0x2ee CALLVALUE
0x2ef ISZERO
0x2f0 PUSH2 0x2f8
0x2f3 JUMPI
---
0x2ed: JUMPDEST 
0x2ee: V180 = CALLVALUE
0x2ef: V181 = ISZERO V180
0x2f0: V182 = 0x2f8
0x2f3: JUMPI 0x2f8 V181
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f4
[0x2f4:0x2f7]
---
Predecessors: [0x2ed]
Successors: []
---
0x2f4 PUSH1 0x0
0x2f6 DUP1
0x2f7 REVERT
---
0x2f4: V183 = 0x0
0x2f7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f8
[0x2f8:0x2ff]
---
Predecessors: [0x2ed]
Successors: [0x485]
---
0x2f8 JUMPDEST
0x2f9 PUSH2 0x300
0x2fc PUSH2 0x485
0x2ff JUMP
---
0x2f8: JUMPDEST 
0x2f9: V184 = 0x300
0x2fc: V185 = 0x485
0x2ff: JUMP 0x485
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x300]
Exit stack: [V10, 0x300]

================================

Block 0x300
[0x300:0x341]
---
Predecessors: [0x485]
Successors: []
---
0x300 JUMPDEST
0x301 PUSH1 0x40
0x303 MLOAD
0x304 DUP1
0x305 DUP3
0x306 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31b AND
0x31c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x331 AND
0x332 DUP2
0x333 MSTORE
0x334 PUSH1 0x20
0x336 ADD
0x337 SWAP2
0x338 POP
0x339 POP
0x33a PUSH1 0x40
0x33c MLOAD
0x33d DUP1
0x33e SWAP2
0x33f SUB
0x340 SWAP1
0x341 RETURN
---
0x300: JUMPDEST 
0x301: V186 = 0x40
0x303: V187 = M[0x40]
0x306: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x31c: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x331: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x333: M[V187] = V191
0x334: V192 = 0x20
0x336: V193 = ADD 0x20 V187
0x33a: V194 = 0x40
0x33c: V195 = M[0x40]
0x33f: V196 = SUB V193 V195
0x341: RETURN V195 V196
---
Entry stack: [V10, 0x300, V285]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x300]

================================

Block 0x342
[0x342:0x348]
---
Predecessors: [0x4a]
Successors: [0x349, 0x34d]
---
0x342 JUMPDEST
0x343 CALLVALUE
0x344 ISZERO
0x345 PUSH2 0x34d
0x348 JUMPI
---
0x342: JUMPDEST 
0x343: V197 = CALLVALUE
0x344: V198 = ISZERO V197
0x345: V199 = 0x34d
0x348: JUMPI 0x34d V198
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x349
[0x349:0x34c]
---
Predecessors: [0x342]
Successors: []
---
0x349 PUSH1 0x0
0x34b DUP1
0x34c REVERT
---
0x349: V200 = 0x0
0x34c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x34d
[0x34d:0x354]
---
Predecessors: [0x342]
Successors: [0x4aa]
---
0x34d JUMPDEST
0x34e PUSH2 0x355
0x351 PUSH2 0x4aa
0x354 JUMP
---
0x34d: JUMPDEST 
0x34e: V201 = 0x355
0x351: V202 = 0x4aa
0x354: JUMP 0x4aa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x355]
Exit stack: [V10, 0x355]

================================

Block 0x355
[0x355:0x396]
---
Predecessors: [0x4aa]
Successors: []
---
0x355 JUMPDEST
0x356 PUSH1 0x40
0x358 MLOAD
0x359 DUP1
0x35a DUP3
0x35b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x370 AND
0x371 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x386 AND
0x387 DUP2
0x388 MSTORE
0x389 PUSH1 0x20
0x38b ADD
0x38c SWAP2
0x38d POP
0x38e POP
0x38f PUSH1 0x40
0x391 MLOAD
0x392 DUP1
0x393 SWAP2
0x394 SUB
0x395 SWAP1
0x396 RETURN
---
0x355: JUMPDEST 
0x356: V203 = 0x40
0x358: V204 = M[0x40]
0x35b: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x370: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x371: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x386: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x388: M[V204] = V208
0x389: V209 = 0x20
0x38b: V210 = ADD 0x20 V204
0x38f: V211 = 0x40
0x391: V212 = M[0x40]
0x394: V213 = SUB V210 V212
0x396: RETURN V212 V213
---
Entry stack: [V10, 0x355, V293]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x355]

================================

Block 0x397
[0x397:0x39d]
---
Predecessors: [0x55]
Successors: [0x39e, 0x3a2]
---
0x397 JUMPDEST
0x398 CALLVALUE
0x399 ISZERO
0x39a PUSH2 0x3a2
0x39d JUMPI
---
0x397: JUMPDEST 
0x398: V214 = CALLVALUE
0x399: V215 = ISZERO V214
0x39a: V216 = 0x3a2
0x39d: JUMPI 0x3a2 V215
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x39e
[0x39e:0x3a1]
---
Predecessors: [0x397]
Successors: []
---
0x39e PUSH1 0x0
0x3a0 DUP1
0x3a1 REVERT
---
0x39e: V217 = 0x0
0x3a1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a2
[0x3a2:0x3cd]
---
Predecessors: [0x397]
Successors: [0x4d0]
---
0x3a2 JUMPDEST
0x3a3 PUSH2 0x3ce
0x3a6 PUSH1 0x4
0x3a8 DUP1
0x3a9 DUP1
0x3aa CALLDATALOAD
0x3ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c0 AND
0x3c1 SWAP1
0x3c2 PUSH1 0x20
0x3c4 ADD
0x3c5 SWAP1
0x3c6 SWAP2
0x3c7 SWAP1
0x3c8 POP
0x3c9 POP
0x3ca PUSH2 0x4d0
0x3cd JUMP
---
0x3a2: JUMPDEST 
0x3a3: V218 = 0x3ce
0x3a6: V219 = 0x4
0x3aa: V220 = CALLDATALOAD 0x4
0x3ab: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c0: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x3c2: V223 = 0x20
0x3c4: V224 = ADD 0x20 0x4
0x3ca: V225 = 0x4d0
0x3cd: JUMP 0x4d0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3ce, V222]
Exit stack: [V10, 0x3ce, V222]

================================

Block 0x3ce
[0x3ce:0x3e3]
---
Predecessors: [0x4d0]
Successors: []
---
0x3ce JUMPDEST
0x3cf PUSH1 0x40
0x3d1 MLOAD
0x3d2 DUP1
0x3d3 DUP3
0x3d4 DUP2
0x3d5 MSTORE
0x3d6 PUSH1 0x20
0x3d8 ADD
0x3d9 SWAP2
0x3da POP
0x3db POP
0x3dc PUSH1 0x40
0x3de MLOAD
0x3df DUP1
0x3e0 SWAP2
0x3e1 SUB
0x3e2 SWAP1
0x3e3 RETURN
---
0x3ce: JUMPDEST 
0x3cf: V226 = 0x40
0x3d1: V227 = M[0x40]
0x3d5: M[V227] = V301
0x3d6: V228 = 0x20
0x3d8: V229 = ADD 0x20 V227
0x3dc: V230 = 0x40
0x3de: V231 = M[0x40]
0x3e1: V232 = SUB V229 V231
0x3e3: RETURN V231 V232
---
Entry stack: [V10, 0x3ce, V301]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3ce]

================================

Block 0x3e4
[0x3e4:0x3ea]
---
Predecessors: [0x60]
Successors: [0x3eb, 0x3ef]
---
0x3e4 JUMPDEST
0x3e5 CALLVALUE
0x3e6 ISZERO
0x3e7 PUSH2 0x3ef
0x3ea JUMPI
---
0x3e4: JUMPDEST 
0x3e5: V233 = CALLVALUE
0x3e6: V234 = ISZERO V233
0x3e7: V235 = 0x3ef
0x3ea: JUMPI 0x3ef V234
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3eb
[0x3eb:0x3ee]
---
Predecessors: [0x3e4]
Successors: []
---
0x3eb PUSH1 0x0
0x3ed DUP1
0x3ee REVERT
---
0x3eb: V236 = 0x0
0x3ee: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ef
[0x3ef:0x3f6]
---
Predecessors: [0x3e4]
Successors: [0x4e8]
---
0x3ef JUMPDEST
0x3f0 PUSH2 0x3f7
0x3f3 PUSH2 0x4e8
0x3f6 JUMP
---
0x3ef: JUMPDEST 
0x3f0: V237 = 0x3f7
0x3f3: V238 = 0x4e8
0x3f6: JUMP 0x4e8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3f7]
Exit stack: [V10, 0x3f7]

================================

Block 0x3f7
[0x3f7:0x40c]
---
Predecessors: [0x4e8]
Successors: []
---
0x3f7 JUMPDEST
0x3f8 PUSH1 0x40
0x3fa MLOAD
0x3fb DUP1
0x3fc DUP3
0x3fd DUP2
0x3fe MSTORE
0x3ff PUSH1 0x20
0x401 ADD
0x402 SWAP2
0x403 POP
0x404 POP
0x405 PUSH1 0x40
0x407 MLOAD
0x408 DUP1
0x409 SWAP2
0x40a SUB
0x40b SWAP1
0x40c RETURN
---
0x3f7: JUMPDEST 
0x3f8: V239 = 0x40
0x3fa: V240 = M[0x40]
0x3fe: M[V240] = V303
0x3ff: V241 = 0x20
0x401: V242 = ADD 0x20 V240
0x405: V243 = 0x40
0x407: V244 = M[0x40]
0x40a: V245 = SUB V242 V244
0x40c: RETURN V244 V245
---
Entry stack: [V10, 0x3f7, V303]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3f7]

================================

Block 0x40d
[0x40d:0x413]
---
Predecessors: [0x6b]
Successors: [0x414, 0x418]
---
0x40d JUMPDEST
0x40e CALLVALUE
0x40f ISZERO
0x410 PUSH2 0x418
0x413 JUMPI
---
0x40d: JUMPDEST 
0x40e: V246 = CALLVALUE
0x40f: V247 = ISZERO V246
0x410: V248 = 0x418
0x413: JUMPI 0x418 V247
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x414
[0x414:0x417]
---
Predecessors: [0x40d]
Successors: []
---
0x414 PUSH1 0x0
0x416 DUP1
0x417 REVERT
---
0x414: V249 = 0x0
0x417: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x418
[0x418:0x41f]
---
Predecessors: [0x40d]
Successors: [0x4ee]
---
0x418 JUMPDEST
0x419 PUSH2 0x420
0x41c PUSH2 0x4ee
0x41f JUMP
---
0x418: JUMPDEST 
0x419: V250 = 0x420
0x41c: V251 = 0x4ee
0x41f: JUMP 0x4ee
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x420]
Exit stack: [V10, 0x420]

================================

Block 0x420
[0x420:0x435]
---
Predecessors: [0x4ee]
Successors: []
---
0x420 JUMPDEST
0x421 PUSH1 0x40
0x423 MLOAD
0x424 DUP1
0x425 DUP3
0x426 DUP2
0x427 MSTORE
0x428 PUSH1 0x20
0x42a ADD
0x42b SWAP2
0x42c POP
0x42d POP
0x42e PUSH1 0x40
0x430 MLOAD
0x431 DUP1
0x432 SWAP2
0x433 SUB
0x434 SWAP1
0x435 RETURN
---
0x420: JUMPDEST 
0x421: V252 = 0x40
0x423: V253 = M[0x40]
0x427: M[V253] = V305
0x428: V254 = 0x20
0x42a: V255 = ADD 0x20 V253
0x42e: V256 = 0x40
0x430: V257 = M[0x40]
0x433: V258 = SUB V255 V257
0x435: RETURN V257 V258
---
Entry stack: [V10, 0x420, V305]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x420]

================================

Block 0x436
[0x436:0x43c]
---
Predecessors: [0x76]
Successors: [0x43d, 0x441]
---
0x436 JUMPDEST
0x437 CALLVALUE
0x438 ISZERO
0x439 PUSH2 0x441
0x43c JUMPI
---
0x436: JUMPDEST 
0x437: V259 = CALLVALUE
0x438: V260 = ISZERO V259
0x439: V261 = 0x441
0x43c: JUMPI 0x441 V260
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x43d
[0x43d:0x440]
---
Predecessors: [0x436]
Successors: []
---
0x43d PUSH1 0x0
0x43f DUP1
0x440 REVERT
---
0x43d: V262 = 0x0
0x440: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x441
[0x441:0x448]
---
Predecessors: [0x436]
Successors: [0x4f4]
---
0x441 JUMPDEST
0x442 PUSH2 0x449
0x445 PUSH2 0x4f4
0x448 JUMP
---
0x441: JUMPDEST 
0x442: V263 = 0x449
0x445: V264 = 0x4f4
0x448: JUMP 0x4f4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x449]
Exit stack: [V10, 0x449]

================================

Block 0x449
[0x449:0x44a]
---
Predecessors: [0x5f9]
Successors: []
---
0x449 JUMPDEST
0x44a STOP
---
0x449: JUMPDEST 
0x44a: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x44b
[0x44b:0x457]
---
Predecessors: [0x100, 0x11a, 0x131, 0x15c]
Successors: [0x458, 0x459]
---
0x44b JUMPDEST
0x44c PUSH1 0x0
0x44e DUP1
0x44f DUP3
0x450 DUP5
0x451 DUP2
0x452 ISZERO
0x453 ISZERO
0x454 PUSH2 0x459
0x457 JUMPI
---
0x44b: JUMPDEST 
0x44c: V265 = 0x0
0x452: V266 = ISZERO S0
0x453: V267 = ISZERO V266
0x454: V268 = 0x459
0x457: JUMPI 0x459 V267
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, {0x113, 0x12e, 0x141, 0x1af}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, S3, {0x113, 0x12e, 0x141, 0x1af}, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0x458
[0x458:0x458]
---
Predecessors: [0x44b]
Successors: []
---
0x458 INVALID
---
0x458: INVALID 
---
Entry stack: [V10, S13, S12, S11, S10, S9, S8, S7, {0x113, 0x12e, 0x141, 0x1af}, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S13, S12, S11, S10, S9, S8, S7, {0x113, 0x12e, 0x141, 0x1af}, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x459
[0x459:0x465]
---
Predecessors: [0x44b]
Successors: [0x113, 0x12e, 0x141, 0x1af]
---
0x459 JUMPDEST
0x45a DIV
0x45b SWAP1
0x45c POP
0x45d DUP1
0x45e SWAP2
0x45f POP
0x460 POP
0x461 SWAP3
0x462 SWAP2
0x463 POP
0x464 POP
0x465 JUMP
---
0x459: JUMPDEST 
0x45a: V269 = DIV S0 S1
0x465: JUMP {0x113, 0x12e, 0x141, 0x1af}
---
Entry stack: [V10, S13, S12, S11, S10, S9, S8, S7, {0x113, 0x12e, 0x141, 0x1af}, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 7
Stack additions: [V269]
Exit stack: [V10, S13, S12, S11, S10, S9, S8, S7, V269]

================================

Block 0x466
[0x466:0x472]
---
Predecessors: [0x141]
Successors: [0x473, 0x474]
---
0x466 JUMPDEST
0x467 PUSH1 0x0
0x469 DUP3
0x46a DUP3
0x46b GT
0x46c ISZERO
0x46d ISZERO
0x46e ISZERO
0x46f PUSH2 0x474
0x472 JUMPI
---
0x466: JUMPDEST 
0x467: V270 = 0x0
0x46b: V271 = GT V269 S1
0x46c: V272 = ISZERO V271
0x46d: V273 = ISZERO V272
0x46e: V274 = ISZERO V273
0x46f: V275 = 0x474
0x472: JUMPI 0x474 V274
---
Entry stack: [V10, S5, S4, S3, S2, S1, V269]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, S5, S4, S3, S2, S1, V269, 0x0]

================================

Block 0x473
[0x473:0x473]
---
Predecessors: [0x466]
Successors: []
---
0x473 INVALID
---
0x473: INVALID 
---
Entry stack: [V10, S6, S5, S4, S3, S2, V269, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S6, S5, S4, S3, S2, V269, 0x0]

================================

Block 0x474
[0x474:0x47e]
---
Predecessors: [0x466]
Successors: [0x146]
---
0x474 JUMPDEST
0x475 DUP2
0x476 DUP4
0x477 SUB
0x478 SWAP1
0x479 POP
0x47a SWAP3
0x47b SWAP2
0x47c POP
0x47d POP
0x47e JUMP
---
0x474: JUMPDEST 
0x477: V276 = SUB S2 V269
0x47e: JUMP S3
---
Entry stack: [V10, S6, S5, S4, S3, S2, V269, 0x0]
Stack pops: 4
Stack additions: [V276]
Exit stack: [V10, S6, S5, S4, V276]

================================

Block 0x47f
[0x47f:0x484]
---
Predecessors: [0x2cf]
Successors: [0x2d7]
---
0x47f JUMPDEST
0x480 PUSH1 0x3
0x482 SLOAD
0x483 DUP2
0x484 JUMP
---
0x47f: JUMPDEST 
0x480: V277 = 0x3
0x482: V278 = S[0x3]
0x484: JUMP 0x2d7
---
Entry stack: [V10, 0x2d7]
Stack pops: 1
Stack additions: [S0, V278]
Exit stack: [V10, 0x2d7, V278]

================================

Block 0x485
[0x485:0x4a9]
---
Predecessors: [0x2f8]
Successors: [0x300]
---
0x485 JUMPDEST
0x486 PUSH1 0x0
0x488 DUP1
0x489 SWAP1
0x48a SLOAD
0x48b SWAP1
0x48c PUSH2 0x100
0x48f EXP
0x490 SWAP1
0x491 DIV
0x492 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a7 AND
0x4a8 DUP2
0x4a9 JUMP
---
0x485: JUMPDEST 
0x486: V279 = 0x0
0x48a: V280 = S[0x0]
0x48c: V281 = 0x100
0x48f: V282 = EXP 0x100 0x0
0x491: V283 = DIV V280 0x1
0x492: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a7: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x4a9: JUMP 0x300
---
Entry stack: [V10, 0x300]
Stack pops: 1
Stack additions: [S0, V285]
Exit stack: [V10, 0x300, V285]

================================

Block 0x4aa
[0x4aa:0x4cf]
---
Predecessors: [0x34d]
Successors: [0x355]
---
0x4aa JUMPDEST
0x4ab PUSH1 0x7
0x4ad PUSH1 0x0
0x4af SWAP1
0x4b0 SLOAD
0x4b1 SWAP1
0x4b2 PUSH2 0x100
0x4b5 EXP
0x4b6 SWAP1
0x4b7 DIV
0x4b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cd AND
0x4ce DUP2
0x4cf JUMP
---
0x4aa: JUMPDEST 
0x4ab: V286 = 0x7
0x4ad: V287 = 0x0
0x4b0: V288 = S[0x7]
0x4b2: V289 = 0x100
0x4b5: V290 = EXP 0x100 0x0
0x4b7: V291 = DIV V288 0x1
0x4b8: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cd: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x4cf: JUMP 0x355
---
Entry stack: [V10, 0x355]
Stack pops: 1
Stack additions: [S0, V293]
Exit stack: [V10, 0x355, V293]

================================

Block 0x4d0
[0x4d0:0x4e7]
---
Predecessors: [0x3a2]
Successors: [0x3ce]
---
0x4d0 JUMPDEST
0x4d1 PUSH1 0x8
0x4d3 PUSH1 0x20
0x4d5 MSTORE
0x4d6 DUP1
0x4d7 PUSH1 0x0
0x4d9 MSTORE
0x4da PUSH1 0x40
0x4dc PUSH1 0x0
0x4de SHA3
0x4df PUSH1 0x0
0x4e1 SWAP2
0x4e2 POP
0x4e3 SWAP1
0x4e4 POP
0x4e5 SLOAD
0x4e6 DUP2
0x4e7 JUMP
---
0x4d0: JUMPDEST 
0x4d1: V294 = 0x8
0x4d3: V295 = 0x20
0x4d5: M[0x20] = 0x8
0x4d7: V296 = 0x0
0x4d9: M[0x0] = V222
0x4da: V297 = 0x40
0x4dc: V298 = 0x0
0x4de: V299 = SHA3 0x0 0x40
0x4df: V300 = 0x0
0x4e5: V301 = S[V299]
0x4e7: JUMP 0x3ce
---
Entry stack: [V10, 0x3ce, V222]
Stack pops: 2
Stack additions: [S1, V301]
Exit stack: [V10, 0x3ce, V301]

================================

Block 0x4e8
[0x4e8:0x4ed]
---
Predecessors: [0x3ef]
Successors: [0x3f7]
---
0x4e8 JUMPDEST
0x4e9 PUSH1 0x2
0x4eb SLOAD
0x4ec DUP2
0x4ed JUMP
---
0x4e8: JUMPDEST 
0x4e9: V302 = 0x2
0x4eb: V303 = S[0x2]
0x4ed: JUMP 0x3f7
---
Entry stack: [V10, 0x3f7]
Stack pops: 1
Stack additions: [S0, V303]
Exit stack: [V10, 0x3f7, V303]

================================

Block 0x4ee
[0x4ee:0x4f3]
---
Predecessors: [0x418]
Successors: [0x420]
---
0x4ee JUMPDEST
0x4ef PUSH1 0x1
0x4f1 SLOAD
0x4f2 DUP2
0x4f3 JUMP
---
0x4ee: JUMPDEST 
0x4ef: V304 = 0x1
0x4f1: V305 = S[0x1]
0x4f3: JUMP 0x420
---
Entry stack: [V10, 0x420]
Stack pops: 1
Stack additions: [S0, V305]
Exit stack: [V10, 0x420, V305]

================================

Block 0x4f4
[0x4f4:0x4ff]
---
Predecessors: [0x441]
Successors: [0x500, 0x5f9]
---
0x4f4 JUMPDEST
0x4f5 PUSH1 0x3
0x4f7 SLOAD
0x4f8 TIMESTAMP
0x4f9 LT
0x4fa ISZERO
0x4fb ISZERO
0x4fc PUSH2 0x5f9
0x4ff JUMPI
---
0x4f4: JUMPDEST 
0x4f5: V306 = 0x3
0x4f7: V307 = S[0x3]
0x4f8: V308 = TIMESTAMP
0x4f9: V309 = LT V308 V307
0x4fa: V310 = ISZERO V309
0x4fb: V311 = ISZERO V310
0x4fc: V312 = 0x5f9
0x4ff: JUMPI 0x5f9 V311
---
Entry stack: [V10, 0x449]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x449]

================================

Block 0x500
[0x500:0x55c]
---
Predecessors: [0x4f4]
Successors: [0x55d, 0x5f8]
---
0x500 PUSH1 0x0
0x502 DUP1
0x503 SWAP1
0x504 SLOAD
0x505 SWAP1
0x506 PUSH2 0x100
0x509 EXP
0x50a SWAP1
0x50b DIV
0x50c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x521 AND
0x522 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x537 AND
0x538 PUSH2 0x8fc
0x53b PUSH1 0x2
0x53d SLOAD
0x53e SWAP1
0x53f DUP2
0x540 ISZERO
0x541 MUL
0x542 SWAP1
0x543 PUSH1 0x40
0x545 MLOAD
0x546 PUSH1 0x0
0x548 PUSH1 0x40
0x54a MLOAD
0x54b DUP1
0x54c DUP4
0x54d SUB
0x54e DUP2
0x54f DUP6
0x550 DUP9
0x551 DUP9
0x552 CALL
0x553 SWAP4
0x554 POP
0x555 POP
0x556 POP
0x557 POP
0x558 ISZERO
0x559 PUSH2 0x5f8
0x55c JUMPI
---
0x500: V313 = 0x0
0x504: V314 = S[0x0]
0x506: V315 = 0x100
0x509: V316 = EXP 0x100 0x0
0x50b: V317 = DIV V314 0x1
0x50c: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x521: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x522: V320 = 0xffffffffffffffffffffffffffffffffffffffff
0x537: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V319
0x538: V322 = 0x8fc
0x53b: V323 = 0x2
0x53d: V324 = S[0x2]
0x540: V325 = ISZERO V324
0x541: V326 = MUL V325 0x8fc
0x543: V327 = 0x40
0x545: V328 = M[0x40]
0x546: V329 = 0x0
0x548: V330 = 0x40
0x54a: V331 = M[0x40]
0x54d: V332 = SUB V328 V331
0x552: V333 = CALL V326 V321 V324 V331 V332 V331 0x0
0x558: V334 = ISZERO V333
0x559: V335 = 0x5f8
0x55c: JUMPI 0x5f8 V334
---
Entry stack: [V10, 0x449]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x449]

================================

Block 0x55d
[0x55d:0x5f7]
---
Predecessors: [0x500]
Successors: [0x5f8]
---
0x55d PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x57e PUSH1 0x0
0x580 DUP1
0x581 SWAP1
0x582 SLOAD
0x583 SWAP1
0x584 PUSH2 0x100
0x587 EXP
0x588 SWAP1
0x589 DIV
0x58a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59f AND
0x5a0 PUSH1 0x2
0x5a2 SLOAD
0x5a3 PUSH1 0x0
0x5a5 PUSH1 0x40
0x5a7 MLOAD
0x5a8 DUP1
0x5a9 DUP5
0x5aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bf AND
0x5c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d5 AND
0x5d6 DUP2
0x5d7 MSTORE
0x5d8 PUSH1 0x20
0x5da ADD
0x5db DUP4
0x5dc DUP2
0x5dd MSTORE
0x5de PUSH1 0x20
0x5e0 ADD
0x5e1 DUP3
0x5e2 ISZERO
0x5e3 ISZERO
0x5e4 ISZERO
0x5e5 ISZERO
0x5e6 DUP2
0x5e7 MSTORE
0x5e8 PUSH1 0x20
0x5ea ADD
0x5eb SWAP4
0x5ec POP
0x5ed POP
0x5ee POP
0x5ef POP
0x5f0 PUSH1 0x40
0x5f2 MLOAD
0x5f3 DUP1
0x5f4 SWAP2
0x5f5 SUB
0x5f6 SWAP1
0x5f7 LOG1
---
0x55d: V336 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x57e: V337 = 0x0
0x582: V338 = S[0x0]
0x584: V339 = 0x100
0x587: V340 = EXP 0x100 0x0
0x589: V341 = DIV V338 0x1
0x58a: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x59f: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x5a0: V344 = 0x2
0x5a2: V345 = S[0x2]
0x5a3: V346 = 0x0
0x5a5: V347 = 0x40
0x5a7: V348 = M[0x40]
0x5aa: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bf: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V343
0x5c0: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d5: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x5d7: M[V348] = V352
0x5d8: V353 = 0x20
0x5da: V354 = ADD 0x20 V348
0x5dd: M[V354] = V345
0x5de: V355 = 0x20
0x5e0: V356 = ADD 0x20 V354
0x5e2: V357 = ISZERO 0x0
0x5e3: V358 = ISZERO 0x1
0x5e4: V359 = ISZERO 0x0
0x5e5: V360 = ISZERO 0x1
0x5e7: M[V356] = 0x0
0x5e8: V361 = 0x20
0x5ea: V362 = ADD 0x20 V356
0x5f0: V363 = 0x40
0x5f2: V364 = M[0x40]
0x5f5: V365 = SUB V362 V364
0x5f7: LOG V364 V365 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, 0x449]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x449]

================================

Block 0x5f8
[0x5f8:0x5f8]
---
Predecessors: [0x500, 0x55d]
Successors: [0x5f9]
---
0x5f8 JUMPDEST
---
0x5f8: JUMPDEST 
---
Entry stack: [V10, 0x449]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x449]

================================

Block 0x5f9
[0x5f9:0x5fa]
---
Predecessors: [0x4f4, 0x5f8]
Successors: [0x449]
---
0x5f9 JUMPDEST
0x5fa JUMP
---
0x5f9: JUMPDEST 
0x5fa: JUMP 0x449
---
Entry stack: [V10, 0x449]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x5fb
[0x5fb:0x629]
---
Predecessors: []
Successors: []
---
0x5fb STOP
0x5fc LOG1
0x5fd PUSH6 0x627a7a723058
0x604 SHA3
0x605 EXTCODECOPY
0x606 MISSING 0x4d
0x607 MISSING 0xb9
0x608 MISSING 0xdb
0x609 MISSING 0x2e
0x60a MISSING 0xac
0x60b MISSING 0x4e
0x60c SDIV
0x60d DUP11
0x60e ISZERO
0x60f SWAP3
0x610 SWAP1
0x611 DIV
0x612 RETURNDATASIZE
0x613 SWAP15
0x614 MISSING 0x4a
0x615 ADD
0x616 MISSING 0x1f
0x617 DUP6
0x618 MISSING 0x27
0x619 PUSH2 0x89bc
0x61c MISSING 0x2a
0x61d PUSH2 0x46d7
0x620 SIGNEXTEND
0x621 MISSING 0x23
0x622 PUSH7 0x374a0029
---
0x5fb: STOP 
0x5fc: LOG S0 S1 S2
0x5fd: V366 = 0x627a7a723058
0x604: V367 = SHA3 0x627a7a723058 S3
0x605: EXTCODECOPY V367 S4 S5 S6
0x606: MISSING 0x4d
0x607: MISSING 0xb9
0x608: MISSING 0xdb
0x609: MISSING 0x2e
0x60a: MISSING 0xac
0x60b: MISSING 0x4e
0x60c: V368 = SDIV S0 S1
0x60e: V369 = ISZERO S11
0x611: V370 = DIV V368 S3
0x612: V371 = RETURNDATASIZE
0x614: MISSING 0x4a
0x615: V372 = ADD S0 S1
0x616: MISSING 0x1f
0x618: MISSING 0x27
0x619: V373 = 0x89bc
0x61c: MISSING 0x2a
0x61d: V374 = 0x46d7
0x620: V375 = SIGNEXTEND 0x46d7 S0
0x621: MISSING 0x23
0x622: V376 = 0x374a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S15, V370, S2, V369, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V371, V372, S5, S0, S1, S2, S3, S4, S5, 0x89bc, V375, 0x374a0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x29dcb0cf
Entry block: 0x2c4
Exit block: 0x2d7
Body: 0x2c4, 0x2cb, 0x2cf, 0x2d7, 0x47f

Function 1:
Public function signature: 0x38af3eed
Entry block: 0x2ed
Exit block: 0x300
Body: 0x2ed, 0x2f4, 0x2f8, 0x300, 0x485

Function 2:
Public function signature: 0x6e66f6e9
Entry block: 0x342
Exit block: 0x355
Body: 0x342, 0x349, 0x34d, 0x355, 0x4aa

Function 3:
Public function signature: 0x70a08231
Entry block: 0x397
Exit block: 0x3ce
Body: 0x397, 0x39e, 0x3a2, 0x3ce, 0x4d0

Function 4:
Public function signature: 0x7b3e5e7b
Entry block: 0x3e4
Exit block: 0x3f7
Body: 0x3e4, 0x3eb, 0x3ef, 0x3f7, 0x4e8

Function 5:
Public function signature: 0x9e1a4d19
Entry block: 0x40d
Exit block: 0x420
Body: 0x40d, 0x414, 0x418, 0x420, 0x4ee

Function 6:
Public function signature: 0xfd6b7ef8
Entry block: 0x436
Exit block: 0x449
Body: 0x436, 0x43d, 0x441, 0x449, 0x4f4, 0x500, 0x55d, 0x5f8, 0x5f9

Function 7:
Public fallback function
Entry block: 0x81
Exit block: 0x2c0
Body: 0x81, 0x90, 0x100, 0x113, 0x11a, 0x12e, 0x131, 0x141, 0x146, 0x158, 0x15c, 0x1af, 0x22f, 0x233, 0x240, 0x244, 0x2c0, 0x466, 0x473, 0x474

Function 8:
Private function
Entry block: 0x44b
Exit block: 0x459
Body: 0x44b, 0x459

