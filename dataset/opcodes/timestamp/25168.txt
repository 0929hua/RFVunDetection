Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6c
0xa: JUMPI 0x6c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x88]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x29dcb0cf
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x88
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x29dcb0cf
0x1a: V12 = EQ V10 0x29dcb0cf
0x1b: V13 = 0x88
0x1e: JUMPI 0x88 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x91]
---
0x1f DUP1
0x20 PUSH4 0x38af3eed
0x25 EQ
0x26 PUSH2 0x91
0x29 JUMPI
---
0x20: V14 = 0x38af3eed
0x25: V15 = EQ 0x38af3eed V10
0x26: V16 = 0x91
0x29: JUMPI 0x91 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xa3]
---
0x2a DUP1
0x2b PUSH4 0x6e66f6e9
0x30 EQ
0x31 PUSH2 0xa3
0x34 JUMPI
---
0x2b: V17 = 0x6e66f6e9
0x30: V18 = EQ 0x6e66f6e9 V10
0x31: V19 = 0xa3
0x34: JUMPI 0xa3 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xb5]
---
0x35 DUP1
0x36 PUSH4 0x70a08231
0x3b EQ
0x3c PUSH2 0xb5
0x3f JUMPI
---
0x36: V20 = 0x70a08231
0x3b: V21 = EQ 0x70a08231 V10
0x3c: V22 = 0xb5
0x3f: JUMPI 0xb5 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0xcd]
---
0x40 DUP1
0x41 PUSH4 0x7a3a0e84
0x46 EQ
0x47 PUSH2 0xcd
0x4a JUMPI
---
0x41: V23 = 0x7a3a0e84
0x46: V24 = EQ 0x7a3a0e84 V10
0x47: V25 = 0xcd
0x4a: JUMPI 0xcd V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xd6]
---
0x4b DUP1
0x4c PUSH4 0x7b3e5e7b
0x51 EQ
0x52 PUSH2 0xd6
0x55 JUMPI
---
0x4c: V26 = 0x7b3e5e7b
0x51: V27 = EQ 0x7b3e5e7b V10
0x52: V28 = 0xd6
0x55: JUMPI 0xd6 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xdf]
---
0x56 DUP1
0x57 PUSH4 0xa035b1fe
0x5c EQ
0x5d PUSH2 0xdf
0x60 JUMPI
---
0x57: V29 = 0xa035b1fe
0x5c: V30 = EQ 0xa035b1fe V10
0x5d: V31 = 0xdf
0x60: JUMPI 0xdf V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xe8]
---
0x61 DUP1
0x62 PUSH4 0xfd6b7ef8
0x67 EQ
0x68 PUSH2 0xe8
0x6b JUMPI
---
0x62: V32 = 0xfd6b7ef8
0x67: V33 = EQ 0xfd6b7ef8 V10
0x68: V34 = 0xe8
0x6b: JUMPI 0xe8 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x83]
---
Predecessors: [0x0, 0x61]
Successors: [0x84, 0x20a]
---
0x6c JUMPDEST
0x6d PUSH2 0x208
0x70 PUSH1 0x7
0x72 SLOAD
0x73 PUSH1 0x0
0x75 SWAP1
0x76 PUSH1 0xff
0x78 PUSH2 0x100
0x7b SWAP1
0x7c SWAP2
0x7d DIV
0x7e AND
0x7f ISZERO
0x80 PUSH2 0x20a
0x83 JUMPI
---
0x6c: JUMPDEST 
0x6d: V35 = 0x208
0x70: V36 = 0x7
0x72: V37 = S[0x7]
0x73: V38 = 0x0
0x76: V39 = 0xff
0x78: V40 = 0x100
0x7d: V41 = DIV V37 0x100
0x7e: V42 = AND V41 0xff
0x7f: V43 = ISZERO V42
0x80: V44 = 0x20a
0x83: JUMPI 0x20a V43
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x208, 0x0]
Exit stack: [V10, 0x208, 0x0]

================================

Block 0x84
[0x84:0x87]
---
Predecessors: [0x6c]
Successors: []
---
0x84 PUSH2 0x2
0x87 JUMP
---
0x84: V45 = 0x2
0x87: THROW 
---
Entry stack: [V10, 0x208, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x208, 0x0]

================================

Block 0x88
[0x88:0x90]
---
Predecessors: [0xb]
Successors: [0x2d5]
---
0x88 JUMPDEST
0x89 PUSH2 0x2d5
0x8c PUSH1 0x3
0x8e SLOAD
0x8f DUP2
0x90 JUMP
---
0x88: JUMPDEST 
0x89: V46 = 0x2d5
0x8c: V47 = 0x3
0x8e: V48 = S[0x3]
0x90: JUMP 0x2d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2d5, V48]
Exit stack: [V10, 0x2d5, V48]

================================

Block 0x91
[0x91:0xa2]
---
Predecessors: [0x1f]
Successors: [0x2df]
---
0x91 JUMPDEST
0x92 PUSH2 0x2df
0x95 PUSH1 0x0
0x97 SLOAD
0x98 PUSH1 0x1
0x9a PUSH1 0xa0
0x9c PUSH1 0x2
0x9e EXP
0x9f SUB
0xa0 AND
0xa1 DUP2
0xa2 JUMP
---
0x91: JUMPDEST 
0x92: V49 = 0x2df
0x95: V50 = 0x0
0x97: V51 = S[0x0]
0x98: V52 = 0x1
0x9a: V53 = 0xa0
0x9c: V54 = 0x2
0x9e: V55 = EXP 0x2 0xa0
0x9f: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xa2: JUMP 0x2df
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2df, V57]
Exit stack: [V10, 0x2df, V57]

================================

Block 0xa3
[0xa3:0xb4]
---
Predecessors: [0x2a]
Successors: [0x2df]
---
0xa3 JUMPDEST
0xa4 PUSH2 0x2df
0xa7 PUSH1 0x5
0xa9 SLOAD
0xaa PUSH1 0x1
0xac PUSH1 0xa0
0xae PUSH1 0x2
0xb0 EXP
0xb1 SUB
0xb2 AND
0xb3 DUP2
0xb4 JUMP
---
0xa3: JUMPDEST 
0xa4: V58 = 0x2df
0xa7: V59 = 0x5
0xa9: V60 = S[0x5]
0xaa: V61 = 0x1
0xac: V62 = 0xa0
0xae: V63 = 0x2
0xb0: V64 = EXP 0x2 0xa0
0xb1: V65 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0xb4: JUMP 0x2df
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2df, V66]
Exit stack: [V10, 0x2df, V66]

================================

Block 0xb5
[0xb5:0xcc]
---
Predecessors: [0x35]
Successors: [0x2d5]
---
0xb5 JUMPDEST
0xb6 PUSH2 0x2d5
0xb9 PUSH1 0x4
0xbb CALLDATALOAD
0xbc PUSH1 0x6
0xbe PUSH1 0x20
0xc0 MSTORE
0xc1 PUSH1 0x0
0xc3 SWAP1
0xc4 DUP2
0xc5 MSTORE
0xc6 PUSH1 0x40
0xc8 SWAP1
0xc9 SHA3
0xca SLOAD
0xcb DUP2
0xcc JUMP
---
0xb5: JUMPDEST 
0xb6: V67 = 0x2d5
0xb9: V68 = 0x4
0xbb: V69 = CALLDATALOAD 0x4
0xbc: V70 = 0x6
0xbe: V71 = 0x20
0xc0: M[0x20] = 0x6
0xc1: V72 = 0x0
0xc5: M[0x0] = V69
0xc6: V73 = 0x40
0xc9: V74 = SHA3 0x0 0x40
0xca: V75 = S[V74]
0xcc: JUMP 0x2d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2d5, V75]
Exit stack: [V10, 0x2d5, V75]

================================

Block 0xcd
[0xcd:0xd5]
---
Predecessors: [0x40]
Successors: [0x2d5]
---
0xcd JUMPDEST
0xce PUSH2 0x2d5
0xd1 PUSH1 0x1
0xd3 SLOAD
0xd4 DUP2
0xd5 JUMP
---
0xcd: JUMPDEST 
0xce: V76 = 0x2d5
0xd1: V77 = 0x1
0xd3: V78 = S[0x1]
0xd5: JUMP 0x2d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2d5, V78]
Exit stack: [V10, 0x2d5, V78]

================================

Block 0xd6
[0xd6:0xde]
---
Predecessors: [0x4b]
Successors: [0x2d5]
---
0xd6 JUMPDEST
0xd7 PUSH2 0x2d5
0xda PUSH1 0x2
0xdc SLOAD
0xdd DUP2
0xde JUMP
---
0xd6: JUMPDEST 
0xd7: V79 = 0x2d5
0xda: V80 = 0x2
0xdc: V81 = S[0x2]
0xde: JUMP 0x2d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2d5, V81]
Exit stack: [V10, 0x2d5, V81]

================================

Block 0xdf
[0xdf:0xe7]
---
Predecessors: [0x56]
Successors: [0x2d5]
---
0xdf JUMPDEST
0xe0 PUSH2 0x2d5
0xe3 PUSH1 0x4
0xe5 SLOAD
0xe6 DUP2
0xe7 JUMP
---
0xdf: JUMPDEST 
0xe0: V82 = 0x2d5
0xe3: V83 = 0x4
0xe5: V84 = S[0x4]
0xe7: JUMP 0x2d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2d5, V84]
Exit stack: [V10, 0x2d5, V84]

================================

Block 0xe8
[0xe8:0xf7]
---
Predecessors: [0x61]
Successors: [0xf8, 0x2d2]
---
0xe8 JUMPDEST
0xe9 PUSH2 0x208
0xec PUSH1 0x3
0xee SLOAD
0xef PUSH1 0x0
0xf1 SWAP1
0xf2 TIMESTAMP
0xf3 LT
0xf4 PUSH2 0x2d2
0xf7 JUMPI
---
0xe8: JUMPDEST 
0xe9: V85 = 0x208
0xec: V86 = 0x3
0xee: V87 = S[0x3]
0xef: V88 = 0x0
0xf2: V89 = TIMESTAMP
0xf3: V90 = LT V89 V87
0xf4: V91 = 0x2d2
0xf7: JUMPI 0x2d2 V90
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x208, 0x0]
Exit stack: [V10, 0x208, 0x0]

================================

Block 0xf8
[0xf8:0x102]
---
Predecessors: [0xe8]
Successors: [0x103, 0x152]
---
0xf8 PUSH1 0x1
0xfa SLOAD
0xfb PUSH1 0x2
0xfd SLOAD
0xfe LT
0xff PUSH2 0x152
0x102 JUMPI
---
0xf8: V92 = 0x1
0xfa: V93 = S[0x1]
0xfb: V94 = 0x2
0xfd: V95 = S[0x2]
0xfe: V96 = LT V95 V93
0xff: V97 = 0x152
0x102: JUMPI 0x152 V96
---
Entry stack: [V10, 0x208, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x208, 0x0]

================================

Block 0x103
[0x103:0x151]
---
Predecessors: [0xf8]
Successors: [0x152]
---
0x103 PUSH1 0x7
0x105 DUP1
0x106 SLOAD
0x107 PUSH1 0x2
0x109 SLOAD
0x10a PUSH1 0xff
0x10c NOT
0x10d SWAP1
0x10e SWAP2
0x10f AND
0x110 PUSH1 0x1
0x112 OR
0x113 SWAP1
0x114 SWAP2
0x115 SSTORE
0x116 DUP2
0x117 SLOAD
0x118 PUSH1 0x1
0x11a PUSH1 0xa0
0x11c PUSH1 0x2
0x11e EXP
0x11f SUB
0x120 AND
0x121 PUSH1 0x60
0x123 SWAP1
0x124 DUP2
0x125 MSTORE
0x126 PUSH1 0x80
0x128 SWAP2
0x129 SWAP1
0x12a SWAP2
0x12b MSTORE
0x12c PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x14d SWAP1
0x14e PUSH1 0x40
0x150 SWAP1
0x151 LOG1
---
0x103: V98 = 0x7
0x106: V99 = S[0x7]
0x107: V100 = 0x2
0x109: V101 = S[0x2]
0x10a: V102 = 0xff
0x10c: V103 = NOT 0xff
0x10f: V104 = AND V99 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x110: V105 = 0x1
0x112: V106 = OR 0x1 V104
0x115: S[0x7] = V106
0x117: V107 = S[0x0]
0x118: V108 = 0x1
0x11a: V109 = 0xa0
0x11c: V110 = 0x2
0x11e: V111 = EXP 0x2 0xa0
0x11f: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x120: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x121: V114 = 0x60
0x125: M[0x60] = V113
0x126: V115 = 0x80
0x12b: M[0x80] = V101
0x12c: V116 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x14e: V117 = 0x40
0x151: LOG 0x60 0x40 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V10, 0x208, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x208, 0x0]

================================

Block 0x152
[0x152:0x16c]
---
Predecessors: [0xf8, 0x103]
Successors: [0x16d, 0x31a]
---
0x152 JUMPDEST
0x153 PUSH1 0x7
0x155 DUP1
0x156 SLOAD
0x157 PUSH2 0xff00
0x15a NOT
0x15b AND
0x15c PUSH2 0x100
0x15f OR
0x160 SWAP1
0x161 DUP2
0x162 SWAP1
0x163 SSTORE
0x164 PUSH1 0xff
0x166 AND
0x167 ISZERO
0x168 ISZERO
0x169 PUSH2 0x31a
0x16c JUMPI
---
0x152: JUMPDEST 
0x153: V118 = 0x7
0x156: V119 = S[0x7]
0x157: V120 = 0xff00
0x15a: V121 = NOT 0xff00
0x15b: V122 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V119
0x15c: V123 = 0x100
0x15f: V124 = OR 0x100 V122
0x163: S[0x7] = V124
0x164: V125 = 0xff
0x166: V126 = AND 0xff V124
0x167: V127 = ISZERO V126
0x168: V128 = ISZERO V127
0x169: V129 = 0x31a
0x16c: JUMPI 0x31a V128
---
Entry stack: [V10, 0x208, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x208, 0x0]

================================

Block 0x16d
[0x16d:0x18f]
---
Predecessors: [0x152]
Successors: [0x190, 0x31a]
---
0x16d PUSH1 0x1
0x16f PUSH1 0xa0
0x171 PUSH1 0x2
0x173 EXP
0x174 SUB
0x175 CALLER
0x176 AND
0x177 DUP2
0x178 MSTORE
0x179 PUSH1 0x6
0x17b PUSH1 0x20
0x17d MSTORE
0x17e PUSH1 0x40
0x180 DUP2
0x181 SHA3
0x182 DUP1
0x183 SLOAD
0x184 SWAP1
0x185 DUP3
0x186 SWAP1
0x187 SSTORE
0x188 SWAP1
0x189 DUP2
0x18a GT
0x18b ISZERO
0x18c PUSH2 0x31a
0x18f JUMPI
---
0x16d: V130 = 0x1
0x16f: V131 = 0xa0
0x171: V132 = 0x2
0x173: V133 = EXP 0x2 0xa0
0x174: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x175: V135 = CALLER
0x176: V136 = AND V135 0xffffffffffffffffffffffffffffffffffffffff
0x178: M[0x0] = V136
0x179: V137 = 0x6
0x17b: V138 = 0x20
0x17d: M[0x20] = 0x6
0x17e: V139 = 0x40
0x181: V140 = SHA3 0x0 0x40
0x183: V141 = S[V140]
0x187: S[V140] = 0x0
0x18a: V142 = GT V141 0x0
0x18b: V143 = ISZERO V142
0x18c: V144 = 0x31a
0x18f: JUMPI 0x31a V143
---
Entry stack: [V10, 0x208, 0x0]
Stack pops: 1
Stack additions: [V141]
Exit stack: [V10, 0x208, V141]

================================

Block 0x190
[0x190:0x1b0]
---
Predecessors: [0x16d]
Successors: [0x1b1, 0x2f2]
---
0x190 PUSH1 0x1
0x192 PUSH1 0xa0
0x194 PUSH1 0x2
0x196 EXP
0x197 SUB
0x198 CALLER
0x199 AND
0x19a PUSH1 0x0
0x19c DUP3
0x19d PUSH1 0x60
0x19f DUP3
0x1a0 DUP2
0x1a1 DUP2
0x1a2 DUP2
0x1a3 DUP6
0x1a4 DUP9
0x1a5 DUP4
0x1a6 CALL
0x1a7 SWAP4
0x1a8 POP
0x1a9 POP
0x1aa POP
0x1ab POP
0x1ac ISZERO
0x1ad PUSH2 0x2f2
0x1b0 JUMPI
---
0x190: V145 = 0x1
0x192: V146 = 0xa0
0x194: V147 = 0x2
0x196: V148 = EXP 0x2 0xa0
0x197: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x198: V150 = CALLER
0x199: V151 = AND V150 0xffffffffffffffffffffffffffffffffffffffff
0x19a: V152 = 0x0
0x19d: V153 = 0x60
0x1a6: V154 = CALL 0x0 V151 V141 0x60 0x0 0x60 0x0
0x1ac: V155 = ISZERO V154
0x1ad: V156 = 0x2f2
0x1b0: JUMPI 0x2f2 V155
---
Entry stack: [V10, 0x208, V141]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x208, V141]

================================

Block 0x1b1
[0x1b1:0x207]
---
Predecessors: [0x190]
Successors: [0x31a]
---
0x1b1 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1d2 CALLER
0x1d3 DUP3
0x1d4 PUSH1 0x0
0x1d6 PUSH1 0x40
0x1d8 MLOAD
0x1d9 DUP1
0x1da DUP5
0x1db PUSH1 0x1
0x1dd PUSH1 0xa0
0x1df PUSH1 0x2
0x1e1 EXP
0x1e2 SUB
0x1e3 AND
0x1e4 DUP2
0x1e5 MSTORE
0x1e6 PUSH1 0x20
0x1e8 ADD
0x1e9 DUP4
0x1ea DUP2
0x1eb MSTORE
0x1ec PUSH1 0x20
0x1ee ADD
0x1ef DUP3
0x1f0 ISZERO
0x1f1 ISZERO
0x1f2 DUP2
0x1f3 MSTORE
0x1f4 PUSH1 0x20
0x1f6 ADD
0x1f7 SWAP4
0x1f8 POP
0x1f9 POP
0x1fa POP
0x1fb POP
0x1fc PUSH1 0x40
0x1fe MLOAD
0x1ff DUP1
0x200 SWAP2
0x201 SUB
0x202 SWAP1
0x203 LOG1
0x204 PUSH2 0x31a
0x207 JUMP
---
0x1b1: V157 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1d2: V158 = CALLER
0x1d4: V159 = 0x0
0x1d6: V160 = 0x40
0x1d8: V161 = M[0x40]
0x1db: V162 = 0x1
0x1dd: V163 = 0xa0
0x1df: V164 = 0x2
0x1e1: V165 = EXP 0x2 0xa0
0x1e2: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e3: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x1e5: M[V161] = V167
0x1e6: V168 = 0x20
0x1e8: V169 = ADD 0x20 V161
0x1eb: M[V169] = V141
0x1ec: V170 = 0x20
0x1ee: V171 = ADD 0x20 V169
0x1f0: V172 = ISZERO 0x0
0x1f1: V173 = ISZERO 0x1
0x1f3: M[V171] = 0x0
0x1f4: V174 = 0x20
0x1f6: V175 = ADD 0x20 V171
0x1fc: V176 = 0x40
0x1fe: V177 = M[0x40]
0x201: V178 = SUB V175 V177
0x203: LOG V177 V178 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x204: V179 = 0x31a
0x207: JUMP 0x31a
---
Entry stack: [V10, 0x208, V141]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x208, V141]

================================

Block 0x208
[0x208:0x209]
---
Predecessors: [0x2d2, 0x3c2]
Successors: []
---
0x208 JUMPDEST
0x209 STOP
---
0x208: JUMPDEST 
0x209: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x20a
[0x20a:0x284]
---
Predecessors: [0x6c]
Successors: [0x285]
---
0x20a JUMPDEST
0x20b PUSH1 0x1
0x20d PUSH1 0xa0
0x20f PUSH1 0x2
0x211 EXP
0x212 SUB
0x213 CALLER
0x214 DUP2
0x215 AND
0x216 DUP1
0x217 DUP4
0x218 MSTORE
0x219 PUSH1 0x6
0x21b PUSH1 0x20
0x21d MSTORE
0x21e PUSH1 0x40
0x220 DUP4
0x221 SHA3
0x222 CALLVALUE
0x223 SWAP1
0x224 DUP2
0x225 SWAP1
0x226 SSTORE
0x227 PUSH1 0x2
0x229 DUP1
0x22a SLOAD
0x22b DUP3
0x22c ADD
0x22d SWAP1
0x22e SSTORE
0x22f PUSH1 0x5
0x231 SLOAD
0x232 PUSH1 0x4
0x234 SLOAD
0x235 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x256 PUSH1 0x60
0x258 SWAP1
0x259 DUP2
0x25a MSTORE
0x25b PUSH1 0x64
0x25d SWAP5
0x25e SWAP1
0x25f SWAP5
0x260 MSTORE
0x261 DUP3
0x262 DIV
0x263 PUSH1 0x84
0x265 MSTORE
0x266 SWAP1
0x267 SWAP4
0x268 SWAP3
0x269 AND
0x26a SWAP2
0x26b PUSH4 0xa9059cbb
0x270 SWAP2
0x271 PUSH1 0xa4
0x273 SWAP2
0x274 SWAP1
0x275 PUSH1 0x44
0x277 DUP2
0x278 DUP4
0x279 DUP8
0x27a PUSH2 0x61da
0x27d GAS
0x27e SUB
0x27f CALL
0x280 ISZERO
0x281 PUSH2 0x2
0x284 JUMPI
---
0x20a: JUMPDEST 
0x20b: V180 = 0x1
0x20d: V181 = 0xa0
0x20f: V182 = 0x2
0x211: V183 = EXP 0x2 0xa0
0x212: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x213: V185 = CALLER
0x215: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x218: M[0x0] = V186
0x219: V187 = 0x6
0x21b: V188 = 0x20
0x21d: M[0x20] = 0x6
0x21e: V189 = 0x40
0x221: V190 = SHA3 0x0 0x40
0x222: V191 = CALLVALUE
0x226: S[V190] = V191
0x227: V192 = 0x2
0x22a: V193 = S[0x2]
0x22c: V194 = ADD V191 V193
0x22e: S[0x2] = V194
0x22f: V195 = 0x5
0x231: V196 = S[0x5]
0x232: V197 = 0x4
0x234: V198 = S[0x4]
0x235: V199 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x256: V200 = 0x60
0x25a: M[0x60] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x25b: V201 = 0x64
0x260: M[0x64] = V186
0x262: V202 = DIV V191 V198
0x263: V203 = 0x84
0x265: M[0x84] = V202
0x269: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x26b: V205 = 0xa9059cbb
0x271: V206 = 0xa4
0x275: V207 = 0x44
0x27a: V208 = 0x61da
0x27d: V209 = GAS
0x27e: V210 = SUB V209 0x61da
0x27f: V211 = CALL V210 V204 0x0 0x60 0x44 0x60 0x0
0x280: V212 = ISZERO V211
0x281: V213 = 0x2
0x284: THROWI V212
---
Entry stack: [V10, 0x208, 0x0]
Stack pops: 1
Stack additions: [V191, V204, 0xa9059cbb, 0xa4]
Exit stack: [V10, 0x208, V191, V204, 0xa9059cbb, 0xa4]

================================

Block 0x285
[0x285:0x2d1]
---
Predecessors: [0x20a]
Successors: [0x2d2]
---
0x285 POP
0x286 POP
0x287 PUSH1 0x40
0x289 DUP1
0x28a MLOAD
0x28b PUSH1 0x1
0x28d PUSH1 0xa0
0x28f PUSH1 0x2
0x291 EXP
0x292 SUB
0x293 CALLER
0x294 AND
0x295 DUP2
0x296 MSTORE
0x297 PUSH1 0x20
0x299 DUP2
0x29a ADD
0x29b DUP5
0x29c SWAP1
0x29d MSTORE
0x29e PUSH1 0x1
0x2a0 DUP2
0x2a1 DUP4
0x2a2 ADD
0x2a3 MSTORE
0x2a4 SWAP1
0x2a5 MLOAD
0x2a6 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2c7 SWAP3
0x2c8 POP
0x2c9 SWAP1
0x2ca DUP2
0x2cb SWAP1
0x2cc SUB
0x2cd PUSH1 0x60
0x2cf ADD
0x2d0 SWAP1
0x2d1 LOG1
---
0x287: V214 = 0x40
0x28a: V215 = M[0x40]
0x28b: V216 = 0x1
0x28d: V217 = 0xa0
0x28f: V218 = 0x2
0x291: V219 = EXP 0x2 0xa0
0x292: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x293: V221 = CALLER
0x294: V222 = AND V221 0xffffffffffffffffffffffffffffffffffffffff
0x296: M[V215] = V222
0x297: V223 = 0x20
0x29a: V224 = ADD V215 0x20
0x29d: M[V224] = V191
0x29e: V225 = 0x1
0x2a2: V226 = ADD 0x40 V215
0x2a3: M[V226] = 0x1
0x2a5: V227 = M[0x40]
0x2a6: V228 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2cc: V229 = SUB V215 V227
0x2cd: V230 = 0x60
0x2cf: V231 = ADD 0x60 V229
0x2d1: LOG V227 V231 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, 0x208, V191, V204, 0xa9059cbb, 0xa4]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x208, V191]

================================

Block 0x2d2
[0x2d2:0x2d4]
---
Predecessors: [0xe8, 0x285, 0x33b, 0x36a]
Successors: [0x208]
---
0x2d2 JUMPDEST
0x2d3 POP
0x2d4 JUMP
---
0x2d2: JUMPDEST 
0x2d4: JUMP 0x208
---
Entry stack: [V10, 0x208, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d5
[0x2d5:0x2de]
---
Predecessors: [0x88, 0xb5, 0xcd, 0xd6, 0xdf]
Successors: []
---
0x2d5 JUMPDEST
0x2d6 PUSH1 0x60
0x2d8 SWAP1
0x2d9 DUP2
0x2da MSTORE
0x2db PUSH1 0x20
0x2dd SWAP1
0x2de RETURN
---
0x2d5: JUMPDEST 
0x2d6: V232 = 0x60
0x2da: M[0x60] = S0
0x2db: V233 = 0x20
0x2de: RETURN 0x60 0x20
---
Entry stack: [V10, 0x2d5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2d5]

================================

Block 0x2df
[0x2df:0x2f1]
---
Predecessors: [0x91, 0xa3]
Successors: []
---
0x2df JUMPDEST
0x2e0 PUSH1 0x1
0x2e2 PUSH1 0xa0
0x2e4 PUSH1 0x2
0x2e6 EXP
0x2e7 SUB
0x2e8 AND
0x2e9 PUSH1 0x60
0x2eb SWAP1
0x2ec DUP2
0x2ed MSTORE
0x2ee PUSH1 0x20
0x2f0 SWAP1
0x2f1 RETURN
---
0x2df: JUMPDEST 
0x2e0: V234 = 0x1
0x2e2: V235 = 0xa0
0x2e4: V236 = 0x2
0x2e6: V237 = EXP 0x2 0xa0
0x2e7: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e8: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x2e9: V240 = 0x60
0x2ed: M[0x60] = V239
0x2ee: V241 = 0x20
0x2f1: RETURN 0x60 0x20
---
Entry stack: [V10, 0x2df, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2df]

================================

Block 0x2f2
[0x2f2:0x319]
---
Predecessors: [0x190]
Successors: [0x31a]
---
0x2f2 JUMPDEST
0x2f3 DUP1
0x2f4 PUSH1 0x6
0x2f6 PUSH1 0x0
0x2f8 POP
0x2f9 PUSH1 0x0
0x2fb CALLER
0x2fc PUSH1 0x1
0x2fe PUSH1 0xa0
0x300 PUSH1 0x2
0x302 EXP
0x303 SUB
0x304 AND
0x305 DUP2
0x306 MSTORE
0x307 PUSH1 0x20
0x309 ADD
0x30a SWAP1
0x30b DUP2
0x30c MSTORE
0x30d PUSH1 0x20
0x30f ADD
0x310 PUSH1 0x0
0x312 SHA3
0x313 PUSH1 0x0
0x315 POP
0x316 DUP2
0x317 SWAP1
0x318 SSTORE
0x319 POP
---
0x2f2: JUMPDEST 
0x2f4: V242 = 0x6
0x2f6: V243 = 0x0
0x2f9: V244 = 0x0
0x2fb: V245 = CALLER
0x2fc: V246 = 0x1
0x2fe: V247 = 0xa0
0x300: V248 = 0x2
0x302: V249 = EXP 0x2 0xa0
0x303: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x304: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x306: M[0x0] = V251
0x307: V252 = 0x20
0x309: V253 = ADD 0x20 0x0
0x30c: M[0x20] = 0x6
0x30d: V254 = 0x20
0x30f: V255 = ADD 0x20 0x20
0x310: V256 = 0x0
0x312: V257 = SHA3 0x0 0x40
0x313: V258 = 0x0
0x318: S[V257] = V141
---
Entry stack: [V10, 0x208, V141]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x208, V141]

================================

Block 0x31a
[0x31a:0x326]
---
Predecessors: [0x152, 0x16d, 0x1b1, 0x2f2]
Successors: [0x327, 0x33b]
---
0x31a JUMPDEST
0x31b PUSH1 0x7
0x31d SLOAD
0x31e PUSH1 0xff
0x320 AND
0x321 DUP1
0x322 ISZERO
0x323 PUSH2 0x33b
0x326 JUMPI
---
0x31a: JUMPDEST 
0x31b: V259 = 0x7
0x31d: V260 = S[0x7]
0x31e: V261 = 0xff
0x320: V262 = AND 0xff V260
0x322: V263 = ISZERO V262
0x323: V264 = 0x33b
0x326: JUMPI 0x33b V263
---
Entry stack: [V10, 0x208, S0]
Stack pops: 0
Stack additions: [V262]
Exit stack: [V10, 0x208, S0, V262]

================================

Block 0x327
[0x327:0x33a]
---
Predecessors: [0x31a]
Successors: [0x33b]
---
0x327 POP
0x328 PUSH1 0x0
0x32a SLOAD
0x32b PUSH1 0x1
0x32d PUSH1 0xa0
0x32f PUSH1 0x2
0x331 EXP
0x332 SUB
0x333 SWAP1
0x334 DUP2
0x335 AND
0x336 CALLER
0x337 SWAP1
0x338 SWAP2
0x339 AND
0x33a EQ
---
0x328: V265 = 0x0
0x32a: V266 = S[0x0]
0x32b: V267 = 0x1
0x32d: V268 = 0xa0
0x32f: V269 = 0x2
0x331: V270 = EXP 0x2 0xa0
0x332: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x335: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x336: V273 = CALLER
0x339: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x33a: V275 = EQ V274 V272
---
Entry stack: [V10, 0x208, S1, V262]
Stack pops: 1
Stack additions: [V275]
Exit stack: [V10, 0x208, S1, V275]

================================

Block 0x33b
[0x33b:0x340]
---
Predecessors: [0x31a, 0x327]
Successors: [0x2d2, 0x341]
---
0x33b JUMPDEST
0x33c ISZERO
0x33d PUSH2 0x2d2
0x340 JUMPI
---
0x33b: JUMPDEST 
0x33c: V276 = ISZERO S0
0x33d: V277 = 0x2d2
0x340: JUMPI 0x2d2 V276
---
Entry stack: [V10, 0x208, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x208, S1]

================================

Block 0x341
[0x341:0x369]
---
Predecessors: [0x33b]
Successors: [0x36a, 0x3c2]
---
0x341 PUSH1 0x40
0x343 MLOAD
0x344 PUSH1 0x0
0x346 DUP1
0x347 SLOAD
0x348 PUSH1 0x2
0x34a SLOAD
0x34b PUSH1 0x1
0x34d PUSH1 0xa0
0x34f PUSH1 0x2
0x351 EXP
0x352 SUB
0x353 SWAP2
0x354 SWAP1
0x355 SWAP2
0x356 AND
0x357 SWAP3
0x358 DUP3
0x359 DUP2
0x35a DUP2
0x35b DUP2
0x35c DUP6
0x35d DUP9
0x35e DUP4
0x35f CALL
0x360 SWAP4
0x361 POP
0x362 POP
0x363 POP
0x364 POP
0x365 ISZERO
0x366 PUSH2 0x3c2
0x369 JUMPI
---
0x341: V278 = 0x40
0x343: V279 = M[0x40]
0x344: V280 = 0x0
0x347: V281 = S[0x0]
0x348: V282 = 0x2
0x34a: V283 = S[0x2]
0x34b: V284 = 0x1
0x34d: V285 = 0xa0
0x34f: V286 = 0x2
0x351: V287 = EXP 0x2 0xa0
0x352: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x356: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x35f: V290 = CALL 0x0 V289 V283 V279 0x0 V279 0x0
0x365: V291 = ISZERO V290
0x366: V292 = 0x3c2
0x369: JUMPI 0x3c2 V291
---
Entry stack: [V10, 0x208, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x208, S0]

================================

Block 0x36a
[0x36a:0x3c1]
---
Predecessors: [0x341]
Successors: [0x2d2]
---
0x36a PUSH1 0x0
0x36c DUP1
0x36d SLOAD
0x36e PUSH1 0x2
0x370 SLOAD
0x371 PUSH1 0x40
0x373 DUP1
0x374 MLOAD
0x375 PUSH1 0x1
0x377 PUSH1 0xa0
0x379 PUSH1 0x2
0x37b EXP
0x37c SUB
0x37d SWAP4
0x37e SWAP1
0x37f SWAP4
0x380 AND
0x381 DUP4
0x382 MSTORE
0x383 PUSH1 0x20
0x385 DUP4
0x386 ADD
0x387 SWAP2
0x388 SWAP1
0x389 SWAP2
0x38a MSTORE
0x38b DUP2
0x38c DUP2
0x38d ADD
0x38e SWAP3
0x38f SWAP1
0x390 SWAP3
0x391 MSTORE
0x392 SWAP1
0x393 MLOAD
0x394 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x3b5 SWAP2
0x3b6 DUP2
0x3b7 SWAP1
0x3b8 SUB
0x3b9 PUSH1 0x60
0x3bb ADD
0x3bc SWAP1
0x3bd LOG1
0x3be PUSH2 0x2d2
0x3c1 JUMP
---
0x36a: V293 = 0x0
0x36d: V294 = S[0x0]
0x36e: V295 = 0x2
0x370: V296 = S[0x2]
0x371: V297 = 0x40
0x374: V298 = M[0x40]
0x375: V299 = 0x1
0x377: V300 = 0xa0
0x379: V301 = 0x2
0x37b: V302 = EXP 0x2 0xa0
0x37c: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x380: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x382: M[V298] = V304
0x383: V305 = 0x20
0x386: V306 = ADD V298 0x20
0x38a: M[V306] = V296
0x38d: V307 = ADD 0x40 V298
0x391: M[V307] = 0x0
0x393: V308 = M[0x40]
0x394: V309 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x3b8: V310 = SUB V298 V308
0x3b9: V311 = 0x60
0x3bb: V312 = ADD 0x60 V310
0x3bd: LOG V308 V312 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x3be: V313 = 0x2d2
0x3c1: JUMP 0x2d2
---
Entry stack: [V10, 0x208, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x208, S0]

================================

Block 0x3c2
[0x3c2:0x3ce]
---
Predecessors: [0x341]
Successors: [0x208]
---
0x3c2 JUMPDEST
0x3c3 PUSH1 0x7
0x3c5 DUP1
0x3c6 SLOAD
0x3c7 PUSH1 0xff
0x3c9 NOT
0x3ca AND
0x3cb SWAP1
0x3cc SSTORE
0x3cd POP
0x3ce JUMP
---
0x3c2: JUMPDEST 
0x3c3: V314 = 0x7
0x3c6: V315 = S[0x7]
0x3c7: V316 = 0xff
0x3c9: V317 = NOT 0xff
0x3ca: V318 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V315
0x3cc: S[0x7] = V318
0x3ce: JUMP 0x208
---
Entry stack: [V10, 0x208, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x29dcb0cf
Entry block: 0x88
Exit block: 0x2d5
Body: 0x88, 0x2d5

Function 1:
Public function signature: 0x38af3eed
Entry block: 0x91
Exit block: 0x2df
Body: 0x91, 0x2df

Function 2:
Public function signature: 0x6e66f6e9
Entry block: 0xa3
Exit block: 0x2df
Body: 0xa3, 0x2df

Function 3:
Public function signature: 0x70a08231
Entry block: 0xb5
Exit block: 0x2d5
Body: 0xb5, 0x2d5

Function 4:
Public function signature: 0x7a3a0e84
Entry block: 0xcd
Exit block: 0x2d5
Body: 0xcd, 0x2d5

Function 5:
Public function signature: 0x7b3e5e7b
Entry block: 0xd6
Exit block: 0x2d5
Body: 0xd6, 0x2d5

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0xdf
Exit block: 0x2d5
Body: 0xdf, 0x2d5

Function 7:
Public function signature: 0xfd6b7ef8
Entry block: 0xe8
Exit block: 0x208
Body: 0xe8, 0xf8, 0x103, 0x152, 0x16d, 0x190, 0x1b1, 0x208, 0x2d2, 0x2f2, 0x31a, 0x327, 0x33b, 0x341, 0x36a, 0x3c2

Function 8:
Public fallback function
Entry block: 0x6c
Exit block: 0x208
Body: 0x6c, 0x84, 0x208, 0x20a, 0x285, 0x2d2

