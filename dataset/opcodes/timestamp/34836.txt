Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6c
0xa: JUMPI 0x6c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x71]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x497d5dd
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x71
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x497d5dd
0x1a: V12 = EQ V10 0x497d5dd
0x1b: V13 = 0x71
0x1e: JUMPI 0x71 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xa3]
---
0x1f DUP1
0x20 PUSH4 0x2529f6cd
0x25 EQ
0x26 PUSH2 0xa3
0x29 JUMPI
---
0x20: V14 = 0x2529f6cd
0x25: V15 = EQ 0x2529f6cd V10
0x26: V16 = 0xa3
0x29: JUMPI 0xa3 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xb1]
---
0x2a DUP1
0x2b PUSH4 0x41c0e1b5
0x30 EQ
0x31 PUSH2 0xb1
0x34 JUMPI
---
0x2b: V17 = 0x41c0e1b5
0x30: V18 = EQ 0x41c0e1b5 V10
0x31: V19 = 0xb1
0x34: JUMPI 0xb1 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xdf]
---
0x35 DUP1
0x36 PUSH4 0x7fd8d157
0x3b EQ
0x3c PUSH2 0xdf
0x3f JUMPI
---
0x36: V20 = 0x7fd8d157
0x3b: V21 = EQ 0x7fd8d157 V10
0x3c: V22 = 0xdf
0x3f: JUMPI 0xdf V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0xed]
---
0x40 DUP1
0x41 PUSH4 0x901e4229
0x46 EQ
0x47 PUSH2 0xed
0x4a JUMPI
---
0x41: V23 = 0x901e4229
0x46: V24 = EQ 0x901e4229 V10
0x47: V25 = 0xed
0x4a: JUMPI 0xed V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x104]
---
0x4b DUP1
0x4c PUSH4 0x99e98e00
0x51 EQ
0x52 PUSH2 0x104
0x55 JUMPI
---
0x4c: V26 = 0x99e98e00
0x51: V27 = EQ 0x99e98e00 V10
0x52: V28 = 0x104
0x55: JUMPI 0x104 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x112]
---
0x56 DUP1
0x57 PUSH4 0xaa928b5b
0x5c EQ
0x5d PUSH2 0x112
0x60 JUMPI
---
0x57: V29 = 0xaa928b5b
0x5c: V30 = EQ 0xaa928b5b V10
0x5d: V31 = 0x112
0x60: JUMPI 0x112 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x136]
---
0x61 DUP1
0x62 PUSH4 0xcc804242
0x67 EQ
0x68 PUSH2 0x136
0x6b JUMPI
---
0x62: V32 = 0xcc804242
0x67: V33 = EQ 0xcc804242 V10
0x68: V34 = 0x136
0x6b: JUMPI 0x136 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x70]
---
Predecessors: [0x0, 0x61]
Successors: []
---
0x6c JUMPDEST
0x6d PUSH2 0x2
0x70 JUMP
---
0x6c: JUMPDEST 
0x6d: V35 = 0x2
0x70: THROW 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x71
[0x71:0x76]
---
Predecessors: [0xb]
Successors: [0x77]
---
0x71 JUMPDEST
0x72 CALLVALUE
0x73 PUSH2 0x2
0x76 JUMPI
---
0x71: JUMPDEST 
0x72: V36 = CALLVALUE
0x73: V37 = 0x2
0x76: THROWI V36
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x77
[0x77:0x98]
---
Predecessors: [0x71]
Successors: [0x99, 0x206]
---
0x77 PUSH2 0x1a6
0x7a PUSH1 0x0
0x7c SLOAD
0x7d TIMESTAMP
0x7e SWAP1
0x7f PUSH3 0x2a300
0x83 SWAP1
0x84 PUSH1 0x1
0x86 PUSH1 0xa0
0x88 PUSH1 0x2
0x8a EXP
0x8b SUB
0x8c SWAP1
0x8d DUP2
0x8e AND
0x8f CALLER
0x90 SWAP1
0x91 SWAP2
0x92 AND
0x93 EQ
0x94 ISZERO
0x95 PUSH2 0x206
0x98 JUMPI
---
0x77: V38 = 0x1a6
0x7a: V39 = 0x0
0x7c: V40 = S[0x0]
0x7d: V41 = TIMESTAMP
0x7f: V42 = 0x2a300
0x84: V43 = 0x1
0x86: V44 = 0xa0
0x88: V45 = 0x2
0x8a: V46 = EXP 0x2 0xa0
0x8b: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0x8f: V49 = CALLER
0x92: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x93: V51 = EQ V50 V48
0x94: V52 = ISZERO V51
0x95: V53 = 0x206
0x98: JUMPI 0x206 V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a6, V41, 0x2a300]
Exit stack: [V10, 0x1a6, V41, 0x2a300]

================================

Block 0x99
[0x99:0xa2]
---
Predecessors: [0x77]
Successors: [0x225]
---
0x99 POP
0x9a PUSH1 0x3
0x9c SLOAD
0x9d DUP2
0x9e SUB
0x9f PUSH2 0x225
0xa2 JUMP
---
0x9a: V54 = 0x3
0x9c: V55 = S[0x3]
0x9e: V56 = SUB V41 V55
0x9f: V57 = 0x225
0xa2: JUMP 0x225
---
Entry stack: [V10, 0x1a6, V41, 0x2a300]
Stack pops: 2
Stack additions: [S1, V56]
Exit stack: [V10, 0x1a6, V41, V56]

================================

Block 0xa3
[0xa3:0xa8]
---
Predecessors: [0x1f]
Successors: [0xa9]
---
0xa3 JUMPDEST
0xa4 CALLVALUE
0xa5 PUSH2 0x2
0xa8 JUMPI
---
0xa3: JUMPDEST 
0xa4: V58 = CALLVALUE
0xa5: V59 = 0x2
0xa8: THROWI V58
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa9
[0xa9:0xb0]
---
Predecessors: [0xa3]
Successors: [0x1a8]
---
0xa9 PUSH2 0x1a8
0xac PUSH1 0x3
0xae SLOAD
0xaf DUP2
0xb0 JUMP
---
0xa9: V60 = 0x1a8
0xac: V61 = 0x3
0xae: V62 = S[0x3]
0xb0: JUMP 0x1a8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a8, V62]
Exit stack: [V10, 0x1a8, V62]

================================

Block 0xb1
[0xb1:0xb6]
---
Predecessors: [0x2a]
Successors: [0xb7]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 PUSH2 0x2
0xb6 JUMPI
---
0xb1: JUMPDEST 
0xb2: V63 = CALLVALUE
0xb3: V64 = 0x2
0xb6: THROWI V63
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xd1]
---
Predecessors: [0xb1]
Successors: [0xd2, 0x272]
---
0xb7 PUSH2 0x1a6
0xba PUSH1 0x0
0xbc SLOAD
0xbd PUSH1 0x1
0xbf PUSH1 0xa0
0xc1 PUSH1 0x2
0xc3 EXP
0xc4 SUB
0xc5 SWAP1
0xc6 DUP2
0xc7 AND
0xc8 CALLER
0xc9 SWAP1
0xca SWAP2
0xcb AND
0xcc EQ
0xcd ISZERO
0xce PUSH2 0x272
0xd1 JUMPI
---
0xb7: V65 = 0x1a6
0xba: V66 = 0x0
0xbc: V67 = S[0x0]
0xbd: V68 = 0x1
0xbf: V69 = 0xa0
0xc1: V70 = 0x2
0xc3: V71 = EXP 0x2 0xa0
0xc4: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0xc8: V74 = CALLER
0xcb: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0xcc: V76 = EQ V75 V73
0xcd: V77 = ISZERO V76
0xce: V78 = 0x272
0xd1: JUMPI 0x272 V77
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a6]
Exit stack: [V10, 0x1a6]

================================

Block 0xd2
[0xd2:0xde]
---
Predecessors: [0xb7]
Successors: []
---
0xd2 PUSH1 0x0
0xd4 SLOAD
0xd5 PUSH1 0x1
0xd7 PUSH1 0xa0
0xd9 PUSH1 0x2
0xdb EXP
0xdc SUB
0xdd AND
0xde SELFDESTRUCT
---
0xd2: V79 = 0x0
0xd4: V80 = S[0x0]
0xd5: V81 = 0x1
0xd7: V82 = 0xa0
0xd9: V83 = 0x2
0xdb: V84 = EXP 0x2 0xa0
0xdc: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0xde: SELFDESTRUCT V86
---
Entry stack: [V10, 0x1a6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6]

================================

Block 0xdf
[0xdf:0xe4]
---
Predecessors: [0x35]
Successors: [0xe5]
---
0xdf JUMPDEST
0xe0 CALLVALUE
0xe1 PUSH2 0x2
0xe4 JUMPI
---
0xdf: JUMPDEST 
0xe0: V87 = CALLVALUE
0xe1: V88 = 0x2
0xe4: THROWI V87
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe5
[0xe5:0xec]
---
Predecessors: [0xdf]
Successors: [0x1a8]
---
0xe5 PUSH2 0x1a8
0xe8 PUSH1 0x4
0xea SLOAD
0xeb DUP2
0xec JUMP
---
0xe5: V89 = 0x1a8
0xe8: V90 = 0x4
0xea: V91 = S[0x4]
0xec: JUMP 0x1a8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a8, V91]
Exit stack: [V10, 0x1a8, V91]

================================

Block 0xed
[0xed:0xf2]
---
Predecessors: [0x40]
Successors: [0xf3]
---
0xed JUMPDEST
0xee CALLVALUE
0xef PUSH2 0x2
0xf2 JUMPI
---
0xed: JUMPDEST 
0xee: V92 = CALLVALUE
0xef: V93 = 0x2
0xf2: THROWI V92
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf3
[0xf3:0x103]
---
Predecessors: [0xed]
Successors: [0x1ba]
---
0xf3 PUSH2 0x1ba
0xf6 PUSH1 0x1
0xf8 SLOAD
0xf9 PUSH1 0x1
0xfb PUSH1 0xa0
0xfd PUSH1 0x2
0xff EXP
0x100 SUB
0x101 AND
0x102 DUP2
0x103 JUMP
---
0xf3: V94 = 0x1ba
0xf6: V95 = 0x1
0xf8: V96 = S[0x1]
0xf9: V97 = 0x1
0xfb: V98 = 0xa0
0xfd: V99 = 0x2
0xff: V100 = EXP 0x2 0xa0
0x100: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x101: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x103: JUMP 0x1ba
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ba, V102]
Exit stack: [V10, 0x1ba, V102]

================================

Block 0x104
[0x104:0x109]
---
Predecessors: [0x4b]
Successors: [0x10a]
---
0x104 JUMPDEST
0x105 CALLVALUE
0x106 PUSH2 0x2
0x109 JUMPI
---
0x104: JUMPDEST 
0x105: V103 = CALLVALUE
0x106: V104 = 0x2
0x109: THROWI V103
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10a
[0x10a:0x111]
---
Predecessors: [0x104]
Successors: [0x1a8]
---
0x10a PUSH2 0x1a8
0x10d PUSH1 0x2
0x10f SLOAD
0x110 DUP2
0x111 JUMP
---
0x10a: V105 = 0x1a8
0x10d: V106 = 0x2
0x10f: V107 = S[0x2]
0x111: JUMP 0x1a8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a8, V107]
Exit stack: [V10, 0x1a8, V107]

================================

Block 0x112
[0x112:0x117]
---
Predecessors: [0x56]
Successors: [0x118]
---
0x112 JUMPDEST
0x113 CALLVALUE
0x114 PUSH2 0x2
0x117 JUMPI
---
0x112: JUMPDEST 
0x113: V108 = CALLVALUE
0x114: V109 = 0x2
0x117: THROWI V108
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x118
[0x118:0x131]
---
Predecessors: [0x112]
Successors: [0x132, 0x296]
---
0x118 PUSH2 0x1a6
0x11b PUSH1 0x4
0x11d CALLDATALOAD
0x11e PUSH1 0x1
0x120 SLOAD
0x121 PUSH1 0x1
0x123 PUSH1 0xa0
0x125 PUSH1 0x2
0x127 EXP
0x128 SUB
0x129 AND
0x12a PUSH1 0x0
0x12c EQ
0x12d ISZERO
0x12e PUSH2 0x296
0x131 JUMPI
---
0x118: V110 = 0x1a6
0x11b: V111 = 0x4
0x11d: V112 = CALLDATALOAD 0x4
0x11e: V113 = 0x1
0x120: V114 = S[0x1]
0x121: V115 = 0x1
0x123: V116 = 0xa0
0x125: V117 = 0x2
0x127: V118 = EXP 0x2 0xa0
0x128: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x129: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x12a: V121 = 0x0
0x12c: V122 = EQ 0x0 V120
0x12d: V123 = ISZERO V122
0x12e: V124 = 0x296
0x131: JUMPI 0x296 V123
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a6, V112]
Exit stack: [V10, 0x1a6, V112]

================================

Block 0x132
[0x132:0x135]
---
Predecessors: [0x118]
Successors: []
---
0x132 PUSH2 0x2
0x135 JUMP
---
0x132: V125 = 0x2
0x135: THROW 
---
Entry stack: [V10, 0x1a6, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V112]

================================

Block 0x136
[0x136:0x13b]
---
Predecessors: [0x61]
Successors: [0x13c]
---
0x136 JUMPDEST
0x137 CALLVALUE
0x138 PUSH2 0x2
0x13b JUMPI
---
0x136: JUMPDEST 
0x137: V126 = CALLVALUE
0x138: V127 = 0x2
0x13b: THROWI V126
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13c
[0x13c:0x158]
---
Predecessors: [0x136]
Successors: [0x159, 0x2b2]
---
0x13c PUSH2 0x1a6
0x13f PUSH1 0x0
0x141 DUP1
0x142 SLOAD
0x143 DUP2
0x144 SWAP1
0x145 CALLER
0x146 PUSH1 0x1
0x148 PUSH1 0xa0
0x14a PUSH1 0x2
0x14c EXP
0x14d SUB
0x14e SWAP1
0x14f DUP2
0x150 AND
0x151 SWAP2
0x152 AND
0x153 EQ
0x154 ISZERO
0x155 PUSH2 0x2b2
0x158 JUMPI
---
0x13c: V128 = 0x1a6
0x13f: V129 = 0x0
0x142: V130 = S[0x0]
0x145: V131 = CALLER
0x146: V132 = 0x1
0x148: V133 = 0xa0
0x14a: V134 = 0x2
0x14c: V135 = EXP 0x2 0xa0
0x14d: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x150: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x152: V138 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x153: V139 = EQ V138 V137
0x154: V140 = ISZERO V139
0x155: V141 = 0x2b2
0x158: JUMPI 0x2b2 V140
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a6, 0x0, 0x0]
Exit stack: [V10, 0x1a6, 0x0, 0x0]

================================

Block 0x159
[0x159:0x16a]
---
Predecessors: [0x13c]
Successors: [0x16b, 0x319]
---
0x159 TIMESTAMP
0x15a PUSH1 0x2
0x15c PUSH1 0x0
0x15e POP
0x15f SLOAD
0x160 PUSH3 0x2a300
0x164 ADD
0x165 LT
0x166 ISZERO
0x167 PUSH2 0x319
0x16a JUMPI
---
0x159: V142 = TIMESTAMP
0x15a: V143 = 0x2
0x15c: V144 = 0x0
0x15f: V145 = S[0x2]
0x160: V146 = 0x2a300
0x164: V147 = ADD 0x2a300 V145
0x165: V148 = LT V147 V142
0x166: V149 = ISZERO V148
0x167: V150 = 0x319
0x16a: JUMPI 0x319 V149
---
Entry stack: [V10, 0x1a6, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, 0x0, 0x0]

================================

Block 0x16b
[0x16b:0x1a1]
---
Predecessors: [0x159]
Successors: [0x1a2, 0x319]
---
0x16b PUSH1 0x4
0x16d DUP1
0x16e SLOAD
0x16f PUSH1 0x0
0x171 SWAP2
0x172 DUP3
0x173 SWAP1
0x174 SSTORE
0x175 DUP2
0x176 SLOAD
0x177 PUSH1 0x40
0x179 MLOAD
0x17a SWAP2
0x17b SWAP5
0x17c POP
0x17d PUSH1 0x1
0x17f PUSH1 0xa0
0x181 PUSH1 0x2
0x183 EXP
0x184 SUB
0x185 AND
0x186 SWAP2
0x187 DUP5
0x188 ISZERO
0x189 PUSH2 0x8fc
0x18c MUL
0x18d SWAP2
0x18e DUP6
0x18f SWAP2
0x190 DUP2
0x191 DUP2
0x192 DUP2
0x193 DUP6
0x194 DUP9
0x195 DUP9
0x196 CALL
0x197 SWAP4
0x198 POP
0x199 POP
0x19a POP
0x19b POP
0x19c ISZERO
0x19d ISZERO
0x19e PUSH2 0x319
0x1a1 JUMPI
---
0x16b: V151 = 0x4
0x16e: V152 = S[0x4]
0x16f: V153 = 0x0
0x174: S[0x4] = 0x0
0x176: V154 = S[0x0]
0x177: V155 = 0x40
0x179: V156 = M[0x40]
0x17d: V157 = 0x1
0x17f: V158 = 0xa0
0x181: V159 = 0x2
0x183: V160 = EXP 0x2 0xa0
0x184: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x185: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x188: V163 = ISZERO V152
0x189: V164 = 0x8fc
0x18c: V165 = MUL 0x8fc V163
0x196: V166 = CALL V165 V162 V152 V156 0x0 V156 0x0
0x19c: V167 = ISZERO V166
0x19d: V168 = ISZERO V167
0x19e: V169 = 0x319
0x1a1: JUMPI 0x319 V168
---
Entry stack: [V10, 0x1a6, 0x0, 0x0]
Stack pops: 2
Stack additions: [V152, S0]
Exit stack: [V10, 0x1a6, V152, 0x0]

================================

Block 0x1a2
[0x1a2:0x1a5]
---
Predecessors: [0x16b]
Successors: []
---
0x1a2 PUSH2 0x2
0x1a5 JUMP
---
0x1a2: V170 = 0x2
0x1a5: THROW 
---
Entry stack: [V10, 0x1a6, V152, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V152, 0x0]

================================

Block 0x1a6
[0x1a6:0x1a7]
---
Predecessors: [0x202, 0x272, 0x274]
Successors: []
---
0x1a6 JUMPDEST
0x1a7 STOP
---
0x1a6: JUMPDEST 
0x1a7: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a8
[0x1a8:0x1b9]
---
Predecessors: [0xa9, 0xe5, 0x10a]
Successors: []
---
0x1a8 JUMPDEST
0x1a9 PUSH1 0x40
0x1ab DUP1
0x1ac MLOAD
0x1ad SWAP2
0x1ae DUP3
0x1af MSTORE
0x1b0 MLOAD
0x1b1 SWAP1
0x1b2 DUP2
0x1b3 SWAP1
0x1b4 SUB
0x1b5 PUSH1 0x20
0x1b7 ADD
0x1b8 SWAP1
0x1b9 RETURN
---
0x1a8: JUMPDEST 
0x1a9: V171 = 0x40
0x1ac: V172 = M[0x40]
0x1af: M[V172] = S0
0x1b0: V173 = M[0x40]
0x1b4: V174 = SUB V172 V173
0x1b5: V175 = 0x20
0x1b7: V176 = ADD 0x20 V174
0x1b9: RETURN V173 V176
---
Entry stack: [V10, 0x1a8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1a8]

================================

Block 0x1ba
[0x1ba:0x1d6]
---
Predecessors: [0xf3]
Successors: []
---
0x1ba JUMPDEST
0x1bb PUSH1 0x40
0x1bd DUP1
0x1be MLOAD
0x1bf PUSH1 0x1
0x1c1 PUSH1 0xa0
0x1c3 PUSH1 0x2
0x1c5 EXP
0x1c6 SUB
0x1c7 SWAP3
0x1c8 SWAP1
0x1c9 SWAP3
0x1ca AND
0x1cb DUP3
0x1cc MSTORE
0x1cd MLOAD
0x1ce SWAP1
0x1cf DUP2
0x1d0 SWAP1
0x1d1 SUB
0x1d2 PUSH1 0x20
0x1d4 ADD
0x1d5 SWAP1
0x1d6 RETURN
---
0x1ba: JUMPDEST 
0x1bb: V177 = 0x40
0x1be: V178 = M[0x40]
0x1bf: V179 = 0x1
0x1c1: V180 = 0xa0
0x1c3: V181 = 0x2
0x1c5: V182 = EXP 0x2 0xa0
0x1c6: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ca: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1cc: M[V178] = V184
0x1cd: V185 = M[0x40]
0x1d1: V186 = SUB V178 V185
0x1d2: V187 = 0x20
0x1d4: V188 = ADD 0x20 V186
0x1d6: RETURN V185 V188
---
Entry stack: [V10, 0x1ba, V102]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1ba]

================================

Block 0x1d7
[0x1d7:0x1ef]
---
Predecessors: [0x243]
Successors: [0x1f0, 0x202]
---
0x1d7 JUMPDEST
0x1d8 PUSH1 0x1
0x1da SLOAD
0x1db PUSH1 0x1
0x1dd PUSH1 0xa0
0x1df PUSH1 0x2
0x1e1 EXP
0x1e2 SUB
0x1e3 SWAP1
0x1e4 DUP2
0x1e5 AND
0x1e6 CALLER
0x1e7 SWAP1
0x1e8 SWAP2
0x1e9 AND
0x1ea EQ
0x1eb ISZERO
0x1ec PUSH2 0x202
0x1ef JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V189 = 0x1
0x1da: V190 = S[0x1]
0x1db: V191 = 0x1
0x1dd: V192 = 0xa0
0x1df: V193 = 0x2
0x1e1: V194 = EXP 0x2 0xa0
0x1e2: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e5: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x1e6: V197 = CALLER
0x1e9: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x1ea: V199 = EQ V198 V196
0x1eb: V200 = ISZERO V199
0x1ec: V201 = 0x202
0x1ef: JUMPI 0x202 V200
---
Entry stack: [V10, 0x1a6, V41, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V41, S0]

================================

Block 0x1f0
[0x1f0:0x201]
---
Predecessors: [0x1d7]
Successors: [0x202]
---
0x1f0 PUSH4 0x1e13380
0x1f5 TIMESTAMP
0x1f6 ADD
0x1f7 PUSH1 0x2
0x1f9 SSTORE
0x1fa PUSH1 0x4
0x1fc DUP1
0x1fd SLOAD
0x1fe CALLVALUE
0x1ff ADD
0x200 SWAP1
0x201 SSTORE
---
0x1f0: V202 = 0x1e13380
0x1f5: V203 = TIMESTAMP
0x1f6: V204 = ADD V203 0x1e13380
0x1f7: V205 = 0x2
0x1f9: S[0x2] = V204
0x1fa: V206 = 0x4
0x1fd: V207 = S[0x4]
0x1fe: V208 = CALLVALUE
0x1ff: V209 = ADD V208 V207
0x201: S[0x4] = V209
---
Entry stack: [V10, 0x1a6, V41, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V41, S0]

================================

Block 0x202
[0x202:0x205]
---
Predecessors: [0x1d7, 0x1f0, 0x25c, 0x2b2, 0x2cb, 0x2dd, 0x319]
Successors: [0x1a6]
---
0x202 JUMPDEST
0x203 POP
0x204 POP
0x205 JUMP
---
0x202: JUMPDEST 
0x205: JUMP 0x1a6
---
Entry stack: [V10, 0x1a6, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x206
[0x206:0x21e]
---
Predecessors: [0x77]
Successors: [0x21f, 0x225]
---
0x206 JUMPDEST
0x207 PUSH1 0x1
0x209 SLOAD
0x20a PUSH1 0x1
0x20c PUSH1 0xa0
0x20e PUSH1 0x2
0x210 EXP
0x211 SUB
0x212 SWAP1
0x213 DUP2
0x214 AND
0x215 CALLER
0x216 SWAP1
0x217 SWAP2
0x218 AND
0x219 EQ
0x21a ISZERO
0x21b PUSH2 0x225
0x21e JUMPI
---
0x206: JUMPDEST 
0x207: V210 = 0x1
0x209: V211 = S[0x1]
0x20a: V212 = 0x1
0x20c: V213 = 0xa0
0x20e: V214 = 0x2
0x210: V215 = EXP 0x2 0xa0
0x211: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x214: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x215: V218 = CALLER
0x218: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x219: V220 = EQ V219 V217
0x21a: V221 = ISZERO V220
0x21b: V222 = 0x225
0x21e: JUMPI 0x225 V221
---
Entry stack: [V10, 0x1a6, V41, 0x2a300]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V41, 0x2a300]

================================

Block 0x21f
[0x21f:0x224]
---
Predecessors: [0x206]
Successors: [0x225]
---
0x21f POP
0x220 PUSH1 0x2
0x222 SLOAD
0x223 DUP2
0x224 SUB
---
0x220: V223 = 0x2
0x222: V224 = S[0x2]
0x224: V225 = SUB V41 V224
---
Entry stack: [V10, 0x1a6, V41, 0x2a300]
Stack pops: 2
Stack additions: [S1, V225]
Exit stack: [V10, 0x1a6, V41, V225]

================================

Block 0x225
[0x225:0x230]
---
Predecessors: [0x99, 0x206, 0x21f]
Successors: [0x231, 0x239]
---
0x225 JUMPDEST
0x226 PUSH3 0x15180
0x22a DUP2
0x22b SGT
0x22c DUP1
0x22d PUSH2 0x239
0x230 JUMPI
---
0x225: JUMPDEST 
0x226: V226 = 0x15180
0x22b: V227 = SGT S0 0x15180
0x22d: V228 = 0x239
0x230: JUMPI 0x239 V227
---
Entry stack: [V10, 0x1a6, V41, S0]
Stack pops: 1
Stack additions: [S0, V227]
Exit stack: [V10, 0x1a6, V41, S0, V227]

================================

Block 0x231
[0x231:0x238]
---
Predecessors: [0x225]
Successors: [0x239]
---
0x231 POP
0x232 PUSH3 0x1517f
0x236 NOT
0x237 DUP2
0x238 SGT
---
0x232: V229 = 0x1517f
0x236: V230 = NOT 0x1517f
0x238: V231 = SGT S1 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeae80
---
Entry stack: [V10, 0x1a6, V41, S1, V227]
Stack pops: 2
Stack additions: [S1, V231]
Exit stack: [V10, 0x1a6, V41, S1, V231]

================================

Block 0x239
[0x239:0x23e]
---
Predecessors: [0x225, 0x231]
Successors: [0x23f, 0x243]
---
0x239 JUMPDEST
0x23a ISZERO
0x23b PUSH2 0x243
0x23e JUMPI
---
0x239: JUMPDEST 
0x23a: V232 = ISZERO S0
0x23b: V233 = 0x243
0x23e: JUMPI 0x243 V232
---
Entry stack: [V10, 0x1a6, V41, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1a6, V41, S1]

================================

Block 0x23f
[0x23f:0x242]
---
Predecessors: [0x239]
Successors: []
---
0x23f PUSH2 0x2
0x242 JUMP
---
0x23f: V234 = 0x2
0x242: THROW 
---
Entry stack: [V10, 0x1a6, V41, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V41, S0]

================================

Block 0x243
[0x243:0x25b]
---
Predecessors: [0x239]
Successors: [0x1d7, 0x25c]
---
0x243 JUMPDEST
0x244 PUSH1 0x0
0x246 SLOAD
0x247 PUSH1 0x1
0x249 PUSH1 0xa0
0x24b PUSH1 0x2
0x24d EXP
0x24e SUB
0x24f SWAP1
0x250 DUP2
0x251 AND
0x252 CALLER
0x253 SWAP1
0x254 SWAP2
0x255 AND
0x256 EQ
0x257 ISZERO
0x258 PUSH2 0x1d7
0x25b JUMPI
---
0x243: JUMPDEST 
0x244: V235 = 0x0
0x246: V236 = S[0x0]
0x247: V237 = 0x1
0x249: V238 = 0xa0
0x24b: V239 = 0x2
0x24d: V240 = EXP 0x2 0xa0
0x24e: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x251: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x252: V243 = CALLER
0x255: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x256: V245 = EQ V244 V242
0x257: V246 = ISZERO V245
0x258: V247 = 0x1d7
0x25b: JUMPI 0x1d7 V246
---
Entry stack: [V10, 0x1a6, V41, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V41, S0]

================================

Block 0x25c
[0x25c:0x271]
---
Predecessors: [0x243]
Successors: [0x202]
---
0x25c PUSH4 0x1e13380
0x261 TIMESTAMP
0x262 ADD
0x263 PUSH1 0x3
0x265 SSTORE
0x266 PUSH1 0x4
0x268 DUP1
0x269 SLOAD
0x26a CALLVALUE
0x26b ADD
0x26c SWAP1
0x26d SSTORE
0x26e PUSH2 0x202
0x271 JUMP
---
0x25c: V248 = 0x1e13380
0x261: V249 = TIMESTAMP
0x262: V250 = ADD V249 0x1e13380
0x263: V251 = 0x3
0x265: S[0x3] = V250
0x266: V252 = 0x4
0x269: V253 = S[0x4]
0x26a: V254 = CALLVALUE
0x26b: V255 = ADD V254 V253
0x26d: S[0x4] = V255
0x26e: V256 = 0x202
0x271: JUMP 0x202
---
Entry stack: [V10, 0x1a6, V41, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V41, S0]

================================

Block 0x272
[0x272:0x273]
---
Predecessors: [0xb7]
Successors: [0x1a6]
---
0x272 JUMPDEST
0x273 JUMP
---
0x272: JUMPDEST 
0x273: JUMP 0x1a6
---
Entry stack: [V10, 0x1a6]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x274
[0x274:0x295]
---
Predecessors: [0x296]
Successors: [0x1a6]
---
0x274 JUMPDEST
0x275 PUSH1 0x1
0x277 DUP1
0x278 SLOAD
0x279 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28e NOT
0x28f AND
0x290 DUP3
0x291 OR
0x292 SWAP1
0x293 SSTORE
0x294 POP
0x295 JUMP
---
0x274: JUMPDEST 
0x275: V257 = 0x1
0x278: V258 = S[0x1]
0x279: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x28e: V260 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V261 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V258
0x291: V262 = OR V112 V261
0x293: S[0x1] = V262
0x295: JUMP 0x1a6
---
Entry stack: [V10, 0x1a6, V112]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x296
[0x296:0x2ad]
---
Predecessors: [0x118]
Successors: [0x274, 0x2ae]
---
0x296 JUMPDEST
0x297 PUSH1 0x0
0x299 SLOAD
0x29a PUSH1 0x1
0x29c PUSH1 0xa0
0x29e PUSH1 0x2
0x2a0 EXP
0x2a1 SUB
0x2a2 SWAP1
0x2a3 DUP2
0x2a4 AND
0x2a5 CALLER
0x2a6 SWAP1
0x2a7 SWAP2
0x2a8 AND
0x2a9 EQ
0x2aa PUSH2 0x274
0x2ad JUMPI
---
0x296: JUMPDEST 
0x297: V263 = 0x0
0x299: V264 = S[0x0]
0x29a: V265 = 0x1
0x29c: V266 = 0xa0
0x29e: V267 = 0x2
0x2a0: V268 = EXP 0x2 0xa0
0x2a1: V269 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a4: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x2a5: V271 = CALLER
0x2a8: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x2a9: V273 = EQ V272 V270
0x2aa: V274 = 0x274
0x2ad: JUMPI 0x274 V273
---
Entry stack: [V10, 0x1a6, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V112]

================================

Block 0x2ae
[0x2ae:0x2b1]
---
Predecessors: [0x296]
Successors: []
---
0x2ae PUSH2 0x2
0x2b1 JUMP
---
0x2ae: V275 = 0x2
0x2b1: THROW 
---
Entry stack: [V10, 0x1a6, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V112]

================================

Block 0x2b2
[0x2b2:0x2ca]
---
Predecessors: [0x13c]
Successors: [0x202, 0x2cb]
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x1
0x2b5 SLOAD
0x2b6 PUSH1 0x1
0x2b8 PUSH1 0xa0
0x2ba PUSH1 0x2
0x2bc EXP
0x2bd SUB
0x2be SWAP1
0x2bf DUP2
0x2c0 AND
0x2c1 CALLER
0x2c2 SWAP1
0x2c3 SWAP2
0x2c4 AND
0x2c5 EQ
0x2c6 ISZERO
0x2c7 PUSH2 0x202
0x2ca JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V276 = 0x1
0x2b5: V277 = S[0x1]
0x2b6: V278 = 0x1
0x2b8: V279 = 0xa0
0x2ba: V280 = 0x2
0x2bc: V281 = EXP 0x2 0xa0
0x2bd: V282 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c0: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x2c1: V284 = CALLER
0x2c4: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x2c5: V286 = EQ V285 V283
0x2c6: V287 = ISZERO V286
0x2c7: V288 = 0x202
0x2ca: JUMPI 0x202 V287
---
Entry stack: [V10, 0x1a6, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, 0x0, 0x0]

================================

Block 0x2cb
[0x2cb:0x2dc]
---
Predecessors: [0x2b2]
Successors: [0x202, 0x2dd]
---
0x2cb TIMESTAMP
0x2cc PUSH1 0x3
0x2ce PUSH1 0x0
0x2d0 POP
0x2d1 SLOAD
0x2d2 PUSH3 0x2a300
0x2d6 ADD
0x2d7 LT
0x2d8 ISZERO
0x2d9 PUSH2 0x202
0x2dc JUMPI
---
0x2cb: V289 = TIMESTAMP
0x2cc: V290 = 0x3
0x2ce: V291 = 0x0
0x2d1: V292 = S[0x3]
0x2d2: V293 = 0x2a300
0x2d6: V294 = ADD 0x2a300 V292
0x2d7: V295 = LT V294 V289
0x2d8: V296 = ISZERO V295
0x2d9: V297 = 0x202
0x2dc: JUMPI 0x202 V296
---
Entry stack: [V10, 0x1a6, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, 0x0, 0x0]

================================

Block 0x2dd
[0x2dd:0x314]
---
Predecessors: [0x2cb]
Successors: [0x202, 0x315]
---
0x2dd POP
0x2de PUSH1 0x1
0x2e0 SLOAD
0x2e1 PUSH1 0x4
0x2e3 DUP1
0x2e4 SLOAD
0x2e5 PUSH1 0x0
0x2e7 SWAP2
0x2e8 DUP3
0x2e9 SWAP1
0x2ea SSTORE
0x2eb PUSH1 0x40
0x2ed MLOAD
0x2ee SWAP1
0x2ef SWAP3
0x2f0 PUSH1 0x1
0x2f2 PUSH1 0xa0
0x2f4 PUSH1 0x2
0x2f6 EXP
0x2f7 SUB
0x2f8 AND
0x2f9 SWAP2
0x2fa DUP4
0x2fb ISZERO
0x2fc PUSH2 0x8fc
0x2ff MUL
0x300 SWAP2
0x301 DUP5
0x302 SWAP2
0x303 DUP2
0x304 DUP2
0x305 DUP2
0x306 DUP6
0x307 DUP9
0x308 DUP9
0x309 CALL
0x30a SWAP4
0x30b POP
0x30c POP
0x30d POP
0x30e POP
0x30f ISZERO
0x310 ISZERO
0x311 PUSH2 0x202
0x314 JUMPI
---
0x2de: V298 = 0x1
0x2e0: V299 = S[0x1]
0x2e1: V300 = 0x4
0x2e4: V301 = S[0x4]
0x2e5: V302 = 0x0
0x2ea: S[0x4] = 0x0
0x2eb: V303 = 0x40
0x2ed: V304 = M[0x40]
0x2f0: V305 = 0x1
0x2f2: V306 = 0xa0
0x2f4: V307 = 0x2
0x2f6: V308 = EXP 0x2 0xa0
0x2f7: V309 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f8: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x2fb: V311 = ISZERO V301
0x2fc: V312 = 0x8fc
0x2ff: V313 = MUL 0x8fc V311
0x309: V314 = CALL V313 V310 V301 V304 0x0 V304 0x0
0x30f: V315 = ISZERO V314
0x310: V316 = ISZERO V315
0x311: V317 = 0x202
0x314: JUMPI 0x202 V316
---
Entry stack: [V10, 0x1a6, 0x0, 0x0]
Stack pops: 1
Stack additions: [V301]
Exit stack: [V10, 0x1a6, 0x0, V301]

================================

Block 0x315
[0x315:0x318]
---
Predecessors: [0x2dd]
Successors: []
---
0x315 PUSH2 0x2
0x318 JUMP
---
0x315: V318 = 0x2
0x318: THROW 
---
Entry stack: [V10, 0x1a6, 0x0, V301]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, 0x0, V301]

================================

Block 0x319
[0x319:0x31d]
---
Predecessors: [0x159, 0x16b]
Successors: [0x202]
---
0x319 JUMPDEST
0x31a PUSH2 0x202
0x31d JUMP
---
0x319: JUMPDEST 
0x31a: V319 = 0x202
0x31d: JUMP 0x202
---
Entry stack: [V10, 0x1a6, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, S1, 0x0]

================================

Function 0:
Public function signature: 0x497d5dd
Entry block: 0x71
Exit block: 0x1a6
Body: 0x71, 0x77, 0x99, 0x1a6, 0x1d7, 0x1f0, 0x202, 0x206, 0x21f, 0x225, 0x231, 0x239, 0x23f, 0x243, 0x25c

Function 1:
Public function signature: 0x2529f6cd
Entry block: 0xa3
Exit block: 0x1a8
Body: 0xa3, 0xa9, 0x1a8

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xb1
Exit block: 0x1a6
Body: 0xb1, 0xb7, 0xd2, 0x1a6, 0x272

Function 3:
Public function signature: 0x7fd8d157
Entry block: 0xdf
Exit block: 0x1a8
Body: 0xdf, 0xe5, 0x1a8

Function 4:
Public function signature: 0x901e4229
Entry block: 0xed
Exit block: 0x1ba
Body: 0xed, 0xf3, 0x1ba

Function 5:
Public function signature: 0x99e98e00
Entry block: 0x104
Exit block: 0x1a8
Body: 0x104, 0x10a, 0x1a8

Function 6:
Public function signature: 0xaa928b5b
Entry block: 0x112
Exit block: 0x1a6
Body: 0x112, 0x118, 0x132, 0x1a6, 0x274, 0x296, 0x2ae

Function 7:
Public function signature: 0xcc804242
Entry block: 0x136
Exit block: 0x315
Body: 0x136, 0x13c, 0x159, 0x16b, 0x1a2, 0x1a6, 0x202, 0x2b2, 0x2cb, 0x2dd, 0x315, 0x319

Function 8:
Public fallback function
Entry block: 0x6c
Exit block: 0x6c
Body: 0x6c

