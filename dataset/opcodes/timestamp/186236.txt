Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x153]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x715018a6
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x153
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x715018a6
0x3b: V13 = EQ V11 0x715018a6
0x3c: V14 = 0x153
0x3f: JUMPI 0x153 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x16a]
---
0x40 DUP1
0x41 PUSH4 0x8da5cb5b
0x46 EQ
0x47 PUSH2 0x16a
0x4a JUMPI
---
0x41: V15 = 0x8da5cb5b
0x46: V16 = EQ 0x8da5cb5b V11
0x47: V17 = 0x16a
0x4a: JUMPI 0x16a V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x19b]
---
0x4b DUP1
0x4c PUSH4 0xf2fde38b
0x51 EQ
0x52 PUSH2 0x19b
0x55 JUMPI
---
0x4c: V18 = 0xf2fde38b
0x51: V19 = EQ 0xf2fde38b V11
0x52: V20 = 0x19b
0x55: JUMPI 0x19b V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x63]
---
Predecessors: [0x0, 0x4b]
Successors: [0x64, 0xca]
---
0x56 JUMPDEST
0x57 PUSH1 0x0
0x59 PUSH4 0x5be70080
0x5e TIMESTAMP
0x5f GT
0x60 PUSH2 0xca
0x63 JUMPI
---
0x56: JUMPDEST 
0x57: V21 = 0x0
0x59: V22 = 0x5be70080
0x5e: V23 = TIMESTAMP
0x5f: V24 = GT V23 0x5be70080
0x60: V25 = 0xca
0x63: JUMPI 0xca V24
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0x64
[0x64:0xc9]
---
Predecessors: [0x56]
Successors: []
---
0x64 PUSH1 0x40
0x66 DUP1
0x67 MLOAD
0x68 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x89 DUP2
0x8a MSTORE
0x8b PUSH1 0x20
0x8d PUSH1 0x4
0x8f DUP3
0x90 ADD
0x91 MSTORE
0x92 PUSH1 0x15
0x94 PUSH1 0x24
0x96 DUP3
0x97 ADD
0x98 MSTORE
0x99 PUSH32 0x4461746520686173206e6f7420636f6d65207965740000000000000000000000
0xba PUSH1 0x44
0xbc DUP3
0xbd ADD
0xbe MSTORE
0xbf SWAP1
0xc0 MLOAD
0xc1 SWAP1
0xc2 DUP2
0xc3 SWAP1
0xc4 SUB
0xc5 PUSH1 0x64
0xc7 ADD
0xc8 SWAP1
0xc9 REVERT
---
0x64: V26 = 0x40
0x67: V27 = M[0x40]
0x68: V28 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8a: M[V27] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8b: V29 = 0x20
0x8d: V30 = 0x4
0x90: V31 = ADD V27 0x4
0x91: M[V31] = 0x20
0x92: V32 = 0x15
0x94: V33 = 0x24
0x97: V34 = ADD V27 0x24
0x98: M[V34] = 0x15
0x99: V35 = 0x4461746520686173206e6f7420636f6d65207965740000000000000000000000
0xba: V36 = 0x44
0xbd: V37 = ADD V27 0x44
0xbe: M[V37] = 0x4461746520686173206e6f7420636f6d65207965740000000000000000000000
0xc0: V38 = M[0x40]
0xc4: V39 = SUB V27 V38
0xc5: V40 = 0x64
0xc7: V41 = ADD 0x64 V39
0xc9: REVERT V38 V41
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xca
[0xca:0xde]
---
Predecessors: [0x56]
Successors: [0xdf, 0xe2]
---
0xca JUMPDEST
0xcb PUSH1 0x0
0xcd SLOAD
0xce PUSH1 0x1
0xd0 PUSH1 0xa0
0xd2 PUSH1 0x2
0xd4 EXP
0xd5 SUB
0xd6 AND
0xd7 CALLER
0xd8 EQ
0xd9 DUP1
0xda ISZERO
0xdb PUSH2 0xe2
0xde JUMPI
---
0xca: JUMPDEST 
0xcb: V42 = 0x0
0xcd: V43 = S[0x0]
0xce: V44 = 0x1
0xd0: V45 = 0xa0
0xd2: V46 = 0x2
0xd4: V47 = EXP 0x2 0xa0
0xd5: V48 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd6: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xd7: V50 = CALLER
0xd8: V51 = EQ V50 V49
0xda: V52 = ISZERO V51
0xdb: V53 = 0xe2
0xde: JUMPI 0xe2 V52
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: [V51]
Exit stack: [V11, 0x0, V51]

================================

Block 0xdf
[0xdf:0xe1]
---
Predecessors: [0xca]
Successors: [0xe2]
---
0xdf POP
0xe0 CALLVALUE
0xe1 ISZERO
---
0xe0: V54 = CALLVALUE
0xe1: V55 = ISZERO V54
---
Entry stack: [V11, 0x0, V51]
Stack pops: 1
Stack additions: [V55]
Exit stack: [V11, 0x0, V55]

================================

Block 0xe2
[0xe2:0xe7]
---
Predecessors: [0xca, 0xdf]
Successors: [0xe8, 0x150]
---
0xe2 JUMPDEST
0xe3 ISZERO
0xe4 PUSH2 0x150
0xe7 JUMPI
---
0xe2: JUMPDEST 
0xe3: V56 = ISZERO S0
0xe4: V57 = 0x150
0xe7: JUMPI 0x150 V56
---
Entry stack: [V11, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xe8
[0xe8:0x10e]
---
Predecessors: [0xe2]
Successors: [0x10f, 0x118]
---
0xe8 POP
0xe9 PUSH1 0x40
0xeb MLOAD
0xec ADDRESS
0xed BALANCE
0xee SWAP1
0xef CALLER
0xf0 SWAP1
0xf1 DUP3
0xf2 ISZERO
0xf3 PUSH2 0x8fc
0xf6 MUL
0xf7 SWAP1
0xf8 DUP4
0xf9 SWAP1
0xfa PUSH1 0x0
0xfc DUP2
0xfd DUP2
0xfe DUP2
0xff DUP6
0x100 DUP9
0x101 DUP9
0x102 CALL
0x103 SWAP4
0x104 POP
0x105 POP
0x106 POP
0x107 POP
0x108 ISZERO
0x109 DUP1
0x10a ISZERO
0x10b PUSH2 0x118
0x10e JUMPI
---
0xe9: V58 = 0x40
0xeb: V59 = M[0x40]
0xec: V60 = ADDRESS
0xed: V61 = BALANCE V60
0xef: V62 = CALLER
0xf2: V63 = ISZERO V61
0xf3: V64 = 0x8fc
0xf6: V65 = MUL 0x8fc V63
0xfa: V66 = 0x0
0x102: V67 = CALL V65 V62 V61 V59 0x0 V59 0x0
0x108: V68 = ISZERO V67
0x10a: V69 = ISZERO V68
0x10b: V70 = 0x118
0x10e: JUMPI 0x118 V69
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V61, V68]
Exit stack: [V11, V61, V68]

================================

Block 0x10f
[0x10f:0x117]
---
Predecessors: [0xe8]
Successors: []
---
0x10f RETURNDATASIZE
0x110 PUSH1 0x0
0x112 DUP1
0x113 RETURNDATACOPY
0x114 RETURNDATASIZE
0x115 PUSH1 0x0
0x117 REVERT
---
0x10f: V71 = RETURNDATASIZE
0x110: V72 = 0x0
0x113: RETURNDATACOPY 0x0 0x0 V71
0x114: V73 = RETURNDATASIZE
0x115: V74 = 0x0
0x117: REVERT 0x0 V73
---
Entry stack: [V11, V61, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V61, V68]

================================

Block 0x118
[0x118:0x14f]
---
Predecessors: [0xe8]
Successors: [0x150]
---
0x118 JUMPDEST
0x119 POP
0x11a PUSH1 0x40
0x11c DUP1
0x11d MLOAD
0x11e DUP3
0x11f DUP2
0x120 MSTORE
0x121 SWAP1
0x122 MLOAD
0x123 CALLER
0x124 SWAP2
0x125 PUSH32 0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364
0x146 SWAP2
0x147 SWAP1
0x148 DUP2
0x149 SWAP1
0x14a SUB
0x14b PUSH1 0x20
0x14d ADD
0x14e SWAP1
0x14f LOG2
---
0x118: JUMPDEST 
0x11a: V75 = 0x40
0x11d: V76 = M[0x40]
0x120: M[V76] = V61
0x122: V77 = M[0x40]
0x123: V78 = CALLER
0x125: V79 = 0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364
0x14a: V80 = SUB V76 V77
0x14b: V81 = 0x20
0x14d: V82 = ADD 0x20 V80
0x14f: LOG V77 V82 0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364 V78
---
Entry stack: [V11, V61, V68]
Stack pops: 2
Stack additions: [S1]
Exit stack: [V11, V61]

================================

Block 0x150
[0x150:0x152]
---
Predecessors: [0xe2, 0x118]
Successors: []
---
0x150 JUMPDEST
0x151 POP
0x152 STOP
---
0x150: JUMPDEST 
0x152: STOP 
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x153
[0x153:0x15a]
---
Predecessors: [0xd]
Successors: [0x15b, 0x15f]
---
0x153 JUMPDEST
0x154 CALLVALUE
0x155 DUP1
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0x153: JUMPDEST 
0x154: V83 = CALLVALUE
0x156: V84 = ISZERO V83
0x157: V85 = 0x15f
0x15a: JUMPI 0x15f V84
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V83]
Exit stack: [V11, V83]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0x153]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V86 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V11, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V83]

================================

Block 0x15f
[0x15f:0x167]
---
Predecessors: [0x153]
Successors: [0x1bc]
---
0x15f JUMPDEST
0x160 POP
0x161 PUSH2 0x168
0x164 PUSH2 0x1bc
0x167 JUMP
---
0x15f: JUMPDEST 
0x161: V87 = 0x168
0x164: V88 = 0x1bc
0x167: JUMP 0x1bc
---
Entry stack: [V11, V83]
Stack pops: 1
Stack additions: [0x168]
Exit stack: [V11, 0x168]

================================

Block 0x168
[0x168:0x169]
---
Predecessors: [0x1d3, 0x257]
Successors: []
---
0x168 JUMPDEST
0x169 STOP
---
0x168: JUMPDEST 
0x169: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16a
[0x16a:0x171]
---
Predecessors: [0x40]
Successors: [0x172, 0x176]
---
0x16a JUMPDEST
0x16b CALLVALUE
0x16c DUP1
0x16d ISZERO
0x16e PUSH2 0x176
0x171 JUMPI
---
0x16a: JUMPDEST 
0x16b: V89 = CALLVALUE
0x16d: V90 = ISZERO V89
0x16e: V91 = 0x176
0x171: JUMPI 0x176 V90
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V89]
Exit stack: [V11, V89]

================================

Block 0x172
[0x172:0x175]
---
Predecessors: [0x16a]
Successors: []
---
0x172 PUSH1 0x0
0x174 DUP1
0x175 REVERT
---
0x172: V92 = 0x0
0x175: REVERT 0x0 0x0
---
Entry stack: [V11, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V89]

================================

Block 0x176
[0x176:0x17e]
---
Predecessors: [0x16a]
Successors: [0x228]
---
0x176 JUMPDEST
0x177 POP
0x178 PUSH2 0x17f
0x17b PUSH2 0x228
0x17e JUMP
---
0x176: JUMPDEST 
0x178: V93 = 0x17f
0x17b: V94 = 0x228
0x17e: JUMP 0x228
---
Entry stack: [V11, V89]
Stack pops: 1
Stack additions: [0x17f]
Exit stack: [V11, 0x17f]

================================

Block 0x17f
[0x17f:0x19a]
---
Predecessors: [0x228]
Successors: []
---
0x17f JUMPDEST
0x180 PUSH1 0x40
0x182 DUP1
0x183 MLOAD
0x184 PUSH1 0x1
0x186 PUSH1 0xa0
0x188 PUSH1 0x2
0x18a EXP
0x18b SUB
0x18c SWAP1
0x18d SWAP3
0x18e AND
0x18f DUP3
0x190 MSTORE
0x191 MLOAD
0x192 SWAP1
0x193 DUP2
0x194 SWAP1
0x195 SUB
0x196 PUSH1 0x20
0x198 ADD
0x199 SWAP1
0x19a RETURN
---
0x17f: JUMPDEST 
0x180: V95 = 0x40
0x183: V96 = M[0x40]
0x184: V97 = 0x1
0x186: V98 = 0xa0
0x188: V99 = 0x2
0x18a: V100 = EXP 0x2 0xa0
0x18b: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18e: V102 = AND V156 0xffffffffffffffffffffffffffffffffffffffff
0x190: M[V96] = V102
0x191: V103 = M[0x40]
0x195: V104 = SUB V96 V103
0x196: V105 = 0x20
0x198: V106 = ADD 0x20 V104
0x19a: RETURN V103 V106
---
Entry stack: [V11, 0x17f, V156]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x17f]

================================

Block 0x19b
[0x19b:0x1a2]
---
Predecessors: [0x4b]
Successors: [0x1a3, 0x1a7]
---
0x19b JUMPDEST
0x19c CALLVALUE
0x19d DUP1
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x19b: JUMPDEST 
0x19c: V107 = CALLVALUE
0x19e: V108 = ISZERO V107
0x19f: V109 = 0x1a7
0x1a2: JUMPI 0x1a7 V108
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V107]
Exit stack: [V11, V107]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x19b]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V110 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V11, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V107]

================================

Block 0x1a7
[0x1a7:0x1bb]
---
Predecessors: [0x19b]
Successors: [0x237]
---
0x1a7 JUMPDEST
0x1a8 POP
0x1a9 PUSH2 0x168
0x1ac PUSH1 0x1
0x1ae PUSH1 0xa0
0x1b0 PUSH1 0x2
0x1b2 EXP
0x1b3 SUB
0x1b4 PUSH1 0x4
0x1b6 CALLDATALOAD
0x1b7 AND
0x1b8 PUSH2 0x237
0x1bb JUMP
---
0x1a7: JUMPDEST 
0x1a9: V111 = 0x168
0x1ac: V112 = 0x1
0x1ae: V113 = 0xa0
0x1b0: V114 = 0x2
0x1b2: V115 = EXP 0x2 0xa0
0x1b3: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b4: V117 = 0x4
0x1b6: V118 = CALLDATALOAD 0x4
0x1b7: V119 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x1b8: V120 = 0x237
0x1bb: JUMP 0x237
---
Entry stack: [V11, V107]
Stack pops: 1
Stack additions: [0x168, V119]
Exit stack: [V11, 0x168, V119]

================================

Block 0x1bc
[0x1bc:0x1ce]
---
Predecessors: [0x15f]
Successors: [0x1cf, 0x1d3]
---
0x1bc JUMPDEST
0x1bd PUSH1 0x0
0x1bf SLOAD
0x1c0 PUSH1 0x1
0x1c2 PUSH1 0xa0
0x1c4 PUSH1 0x2
0x1c6 EXP
0x1c7 SUB
0x1c8 AND
0x1c9 CALLER
0x1ca EQ
0x1cb PUSH2 0x1d3
0x1ce JUMPI
---
0x1bc: JUMPDEST 
0x1bd: V121 = 0x0
0x1bf: V122 = S[0x0]
0x1c0: V123 = 0x1
0x1c2: V124 = 0xa0
0x1c4: V125 = 0x2
0x1c6: V126 = EXP 0x2 0xa0
0x1c7: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c8: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x1c9: V129 = CALLER
0x1ca: V130 = EQ V129 V128
0x1cb: V131 = 0x1d3
0x1ce: JUMPI 0x1d3 V130
---
Entry stack: [V11, 0x168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168]

================================

Block 0x1cf
[0x1cf:0x1d2]
---
Predecessors: [0x1bc]
Successors: []
---
0x1cf PUSH1 0x0
0x1d1 DUP1
0x1d2 REVERT
---
0x1cf: V132 = 0x0
0x1d2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168]

================================

Block 0x1d3
[0x1d3:0x227]
---
Predecessors: [0x1bc]
Successors: [0x168]
---
0x1d3 JUMPDEST
0x1d4 PUSH1 0x0
0x1d6 DUP1
0x1d7 SLOAD
0x1d8 PUSH1 0x40
0x1da MLOAD
0x1db PUSH1 0x1
0x1dd PUSH1 0xa0
0x1df PUSH1 0x2
0x1e1 EXP
0x1e2 SUB
0x1e3 SWAP1
0x1e4 SWAP2
0x1e5 AND
0x1e6 SWAP2
0x1e7 PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x208 SWAP2
0x209 LOG2
0x20a PUSH1 0x0
0x20c DUP1
0x20d SLOAD
0x20e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x223 NOT
0x224 AND
0x225 SWAP1
0x226 SSTORE
0x227 JUMP
---
0x1d3: JUMPDEST 
0x1d4: V133 = 0x0
0x1d7: V134 = S[0x0]
0x1d8: V135 = 0x40
0x1da: V136 = M[0x40]
0x1db: V137 = 0x1
0x1dd: V138 = 0xa0
0x1df: V139 = 0x2
0x1e1: V140 = EXP 0x2 0xa0
0x1e2: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e5: V142 = AND V134 0xffffffffffffffffffffffffffffffffffffffff
0x1e7: V143 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x209: LOG V136 0x0 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V142
0x20a: V144 = 0x0
0x20d: V145 = S[0x0]
0x20e: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x223: V147 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x224: V148 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V145
0x226: S[0x0] = V148
0x227: JUMP 0x168
---
Entry stack: [V11, 0x168]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x228
[0x228:0x236]
---
Predecessors: [0x176]
Successors: [0x17f]
---
0x228 JUMPDEST
0x229 PUSH1 0x0
0x22b SLOAD
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 PUSH1 0x2
0x232 EXP
0x233 SUB
0x234 AND
0x235 DUP2
0x236 JUMP
---
0x228: JUMPDEST 
0x229: V149 = 0x0
0x22b: V150 = S[0x0]
0x22c: V151 = 0x1
0x22e: V152 = 0xa0
0x230: V153 = 0x2
0x232: V154 = EXP 0x2 0xa0
0x233: V155 = SUB 0x10000000000000000000000000000000000000000 0x1
0x234: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x236: JUMP 0x17f
---
Entry stack: [V11, 0x17f]
Stack pops: 1
Stack additions: [S0, V156]
Exit stack: [V11, 0x17f, V156]

================================

Block 0x237
[0x237:0x249]
---
Predecessors: [0x1a7]
Successors: [0x24a, 0x24e]
---
0x237 JUMPDEST
0x238 PUSH1 0x0
0x23a SLOAD
0x23b PUSH1 0x1
0x23d PUSH1 0xa0
0x23f PUSH1 0x2
0x241 EXP
0x242 SUB
0x243 AND
0x244 CALLER
0x245 EQ
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x237: JUMPDEST 
0x238: V157 = 0x0
0x23a: V158 = S[0x0]
0x23b: V159 = 0x1
0x23d: V160 = 0xa0
0x23f: V161 = 0x2
0x241: V162 = EXP 0x2 0xa0
0x242: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x243: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x244: V165 = CALLER
0x245: V166 = EQ V165 V164
0x246: V167 = 0x24e
0x249: JUMPI 0x24e V166
---
Entry stack: [V11, 0x168, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V119]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x237]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V168 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V119]

================================

Block 0x24e
[0x24e:0x256]
---
Predecessors: [0x237]
Successors: [0x25a]
---
0x24e JUMPDEST
0x24f PUSH2 0x257
0x252 DUP2
0x253 PUSH2 0x25a
0x256 JUMP
---
0x24e: JUMPDEST 
0x24f: V169 = 0x257
0x253: V170 = 0x25a
0x256: JUMP 0x25a
---
Entry stack: [V11, 0x168, V119]
Stack pops: 1
Stack additions: [S0, 0x257, S0]
Exit stack: [V11, 0x168, V119, 0x257, V119]

================================

Block 0x257
[0x257:0x259]
---
Predecessors: [0x26f]
Successors: [0x168]
---
0x257 JUMPDEST
0x258 POP
0x259 JUMP
---
0x257: JUMPDEST 
0x259: JUMP 0x168
---
Entry stack: [V11, 0x168, V119]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x25a
[0x25a:0x26a]
---
Predecessors: [0x24e]
Successors: [0x26b, 0x26f]
---
0x25a JUMPDEST
0x25b PUSH1 0x1
0x25d PUSH1 0xa0
0x25f PUSH1 0x2
0x261 EXP
0x262 SUB
0x263 DUP2
0x264 AND
0x265 ISZERO
0x266 ISZERO
0x267 PUSH2 0x26f
0x26a JUMPI
---
0x25a: JUMPDEST 
0x25b: V171 = 0x1
0x25d: V172 = 0xa0
0x25f: V173 = 0x2
0x261: V174 = EXP 0x2 0xa0
0x262: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x264: V176 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x265: V177 = ISZERO V176
0x266: V178 = ISZERO V177
0x267: V179 = 0x26f
0x26a: JUMPI 0x26f V178
---
Entry stack: [V11, 0x168, V119, 0x257, V119]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x168, V119, 0x257, V119]

================================

Block 0x26b
[0x26b:0x26e]
---
Predecessors: [0x25a]
Successors: []
---
0x26b PUSH1 0x0
0x26d DUP1
0x26e REVERT
---
0x26b: V180 = 0x0
0x26e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V119, 0x257, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V119, 0x257, V119]

================================

Block 0x26f
[0x26f:0x2d6]
---
Predecessors: [0x25a]
Successors: [0x257]
---
0x26f JUMPDEST
0x270 PUSH1 0x0
0x272 DUP1
0x273 SLOAD
0x274 PUSH1 0x40
0x276 MLOAD
0x277 PUSH1 0x1
0x279 PUSH1 0xa0
0x27b PUSH1 0x2
0x27d EXP
0x27e SUB
0x27f DUP1
0x280 DUP6
0x281 AND
0x282 SWAP4
0x283 SWAP3
0x284 AND
0x285 SWAP2
0x286 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x2a7 SWAP2
0x2a8 LOG3
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac SLOAD
0x2ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c2 NOT
0x2c3 AND
0x2c4 PUSH1 0x1
0x2c6 PUSH1 0xa0
0x2c8 PUSH1 0x2
0x2ca EXP
0x2cb SUB
0x2cc SWAP3
0x2cd SWAP1
0x2ce SWAP3
0x2cf AND
0x2d0 SWAP2
0x2d1 SWAP1
0x2d2 SWAP2
0x2d3 OR
0x2d4 SWAP1
0x2d5 SSTORE
0x2d6 JUMP
---
0x26f: JUMPDEST 
0x270: V181 = 0x0
0x273: V182 = S[0x0]
0x274: V183 = 0x40
0x276: V184 = M[0x40]
0x277: V185 = 0x1
0x279: V186 = 0xa0
0x27b: V187 = 0x2
0x27d: V188 = EXP 0x2 0xa0
0x27e: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x281: V190 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x284: V191 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x286: V192 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x2a8: LOG V184 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V191 V190
0x2a9: V193 = 0x0
0x2ac: V194 = S[0x0]
0x2ad: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c2: V196 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2c3: V197 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V194
0x2c4: V198 = 0x1
0x2c6: V199 = 0xa0
0x2c8: V200 = 0x2
0x2ca: V201 = EXP 0x2 0xa0
0x2cb: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cf: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x2d3: V204 = OR V203 V197
0x2d5: S[0x0] = V204
0x2d6: JUMP 0x257
---
Entry stack: [V11, 0x168, V119, 0x257, V119]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x168, V119]

================================

Block 0x2d7
[0x2d7:0x305]
---
Predecessors: []
Successors: []
---
0x2d7 STOP
0x2d8 LOG1
0x2d9 PUSH6 0x627a7a723058
0x2e0 SHA3
0x2e1 SWAP3
0x2e2 MISSING 0xd8
0x2e3 ADDMOD
0x2e4 XOR
0x2e5 MISSING 0xe0
0x2e6 SWAP13
0x2e7 PUSH1 0xd1
0x2e9 POP
0x2ea GASLIMIT
0x2eb SWAP11
0x2ec MISSING 0xed
0x2ed MISSING 0xd8
0x2ee MISSING 0xe1
0x2ef SUB
0x2f0 MISSING 0xe6
0x2f1 MISSING 0xfc
0x2f2 MISSING 0xa7
0x2f3 MISSING 0xf
0x2f4 SWAP16
0x2f5 PUSH16 0x99847971b912dcb2651f8e0029
---
0x2d7: STOP 
0x2d8: LOG S0 S1 S2
0x2d9: V205 = 0x627a7a723058
0x2e0: V206 = SHA3 0x627a7a723058 S3
0x2e2: MISSING 0xd8
0x2e3: V207 = ADDMOD S0 S1 S2
0x2e4: V208 = XOR V207 S3
0x2e5: MISSING 0xe0
0x2e7: V209 = 0xd1
0x2ea: V210 = GASLIMIT
0x2ec: MISSING 0xed
0x2ed: MISSING 0xd8
0x2ee: MISSING 0xe1
0x2ef: V211 = SUB S0 S1
0x2f0: MISSING 0xe6
0x2f1: MISSING 0xfc
0x2f2: MISSING 0xa7
0x2f3: MISSING 0xf
0x2f5: V212 = 0x99847971b912dcb2651f8e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S6, S4, S5, V206, V208, S10, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, V210, S11, S12, S0, V211, 0x99847971b912dcb2651f8e0029, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x715018a6
Entry block: 0x153
Exit block: 0x168
Body: 0x153, 0x15b, 0x15f, 0x168, 0x1bc, 0x1cf, 0x1d3

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x16a
Exit block: 0x17f
Body: 0x16a, 0x172, 0x176, 0x17f, 0x228

Function 2:
Public function signature: 0xf2fde38b
Entry block: 0x19b
Exit block: 0x168
Body: 0x168, 0x19b, 0x1a3, 0x1a7, 0x237, 0x24a, 0x24e, 0x257, 0x25a, 0x26b, 0x26f

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x150
Body: 0x56, 0x64, 0xca, 0xdf, 0xe2, 0xe8, 0x10f, 0x118, 0x150

