Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x95]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x95
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x95
0xa: JUMPI 0x95 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0xfd]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x288a39c
0x34 EQ
0x35 PUSH2 0xfd
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x288a39c
0x34: V10 = EQ 0x288a39c V8
0x35: V11 = 0xfd
0x38: JUMPI 0xfd V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x125]
---
0x39 DUP1
0x3a PUSH4 0xcd865ec
0x3f EQ
0x40 PUSH2 0x125
0x43 JUMPI
---
0x3a: V12 = 0xcd865ec
0x3f: V13 = EQ 0xcd865ec V8
0x40: V14 = 0x125
0x43: JUMPI 0x125 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x142]
---
0x44 DUP1
0x45 PUSH4 0xe38901a
0x4a EQ
0x4b PUSH2 0x142
0x4e JUMPI
---
0x45: V15 = 0xe38901a
0x4a: V16 = EQ 0xe38901a V8
0x4b: V17 = 0x142
0x4e: JUMPI 0x142 V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x15f]
---
0x4f DUP1
0x50 PUSH4 0x3ccfd60b
0x55 EQ
0x56 PUSH2 0x15f
0x59 JUMPI
---
0x50: V18 = 0x3ccfd60b
0x55: V19 = EQ 0x3ccfd60b V8
0x56: V20 = 0x15f
0x59: JUMPI 0x15f V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0x173]
---
0x5a DUP1
0x5b PUSH4 0x45cb3dde
0x60 EQ
0x61 PUSH2 0x173
0x64 JUMPI
---
0x5b: V21 = 0x45cb3dde
0x60: V22 = EQ 0x45cb3dde V8
0x61: V23 = 0x173
0x64: JUMPI 0x173 V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x6f]
---
Predecessors: [0x5a]
Successors: [0x70, 0x19b]
---
0x65 DUP1
0x66 PUSH4 0x534844a2
0x6b EQ
0x6c PUSH2 0x19b
0x6f JUMPI
---
0x66: V24 = 0x534844a2
0x6b: V25 = EQ 0x534844a2 V8
0x6c: V26 = 0x19b
0x6f: JUMPI 0x19b V25
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x70
[0x70:0x7a]
---
Predecessors: [0x65]
Successors: [0x7b, 0x1c3]
---
0x70 DUP1
0x71 PUSH4 0x8da5cb5b
0x76 EQ
0x77 PUSH2 0x1c3
0x7a JUMPI
---
0x71: V27 = 0x8da5cb5b
0x76: V28 = EQ 0x8da5cb5b V8
0x77: V29 = 0x1c3
0x7a: JUMPI 0x1c3 V28
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x7b
[0x7b:0x85]
---
Predecessors: [0x70]
Successors: [0x86, 0x201]
---
0x7b DUP1
0x7c PUSH4 0xdd467064
0x81 EQ
0x82 PUSH2 0x201
0x85 JUMPI
---
0x7c: V30 = 0xdd467064
0x81: V31 = EQ 0xdd467064 V8
0x82: V32 = 0x201
0x85: JUMPI 0x201 V31
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x86
[0x86:0x90]
---
Predecessors: [0x7b]
Successors: [0x91, 0x21e]
---
0x86 DUP1
0x87 PUSH4 0xddceafa9
0x8c EQ
0x8d PUSH2 0x21e
0x90 JUMPI
---
0x87: V33 = 0xddceafa9
0x8c: V34 = EQ 0xddceafa9 V8
0x8d: V35 = 0x21e
0x90: JUMPI 0x21e V34
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x91
[0x91:0x94]
---
Predecessors: [0x86]
Successors: [0x95]
---
0x91 PUSH2 0x95
0x94 JUMP
---
0x91: V36 = 0x95
0x94: JUMP 0x95
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x95
[0x95:0x98]
---
Predecessors: [0x0, 0x91]
Successors: [0x99]
---
0x95 JUMPDEST
0x96 PUSH2 0xfb
---
0x95: JUMPDEST 
0x96: V37 = 0xfb
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xfb]
Exit stack: [V8, 0xfb]

================================

Block 0x99
[0x99:0xa2]
---
Predecessors: [0x95]
Successors: [0xa3, 0xf8]
---
0x99 JUMPDEST
0x9a PUSH1 0x0
0x9c CALLVALUE
0x9d GT
0x9e ISZERO
0x9f PUSH2 0xf8
0xa2 JUMPI
---
0x99: JUMPDEST 
0x9a: V38 = 0x0
0x9c: V39 = CALLVALUE
0x9d: V40 = GT V39 0x0
0x9e: V41 = ISZERO V40
0x9f: V42 = 0xf8
0xa2: JUMPI 0xf8 V41
---
Entry stack: [V8, 0xfb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xfb]

================================

Block 0xa3
[0xa3:0xf7]
---
Predecessors: [0x99]
Successors: [0xf8]
---
0xa3 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xc4 CALLER
0xc5 CALLVALUE
0xc6 PUSH1 0x40
0xc8 MLOAD
0xc9 DUP1
0xca DUP4
0xcb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0 AND
0xe1 DUP2
0xe2 MSTORE
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 DUP3
0xe7 DUP2
0xe8 MSTORE
0xe9 PUSH1 0x20
0xeb ADD
0xec SWAP3
0xed POP
0xee POP
0xef POP
0xf0 PUSH1 0x40
0xf2 MLOAD
0xf3 DUP1
0xf4 SWAP2
0xf5 SUB
0xf6 SWAP1
0xf7 LOG1
---
0xa3: V43 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xc4: V44 = CALLER
0xc5: V45 = CALLVALUE
0xc6: V46 = 0x40
0xc8: V47 = M[0x40]
0xcb: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xe2: M[V47] = V49
0xe3: V50 = 0x20
0xe5: V51 = ADD 0x20 V47
0xe8: M[V51] = V45
0xe9: V52 = 0x20
0xeb: V53 = ADD 0x20 V51
0xf0: V54 = 0x40
0xf2: V55 = M[0x40]
0xf5: V56 = SUB V53 V55
0xf7: LOG V55 V56 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
---
Entry stack: [V8, 0xfb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xfb]

================================

Block 0xf8
[0xf8:0xf8]
---
Predecessors: [0x99, 0xa3]
Successors: [0xf9]
---
0xf8 JUMPDEST
---
0xf8: JUMPDEST 
---
Entry stack: [V8, 0xfb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xfb]

================================

Block 0xf9
[0xf9:0xfa]
---
Predecessors: [0xf8]
Successors: [0xfb]
---
0xf9 JUMPDEST
0xfa JUMP
---
0xf9: JUMPDEST 
0xfa: JUMP 0xfb
---
Entry stack: [V8, 0xfb]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xfb
[0xfb:0xfc]
---
Predecessors: [0xf9]
Successors: []
---
0xfb JUMPDEST
0xfc STOP
---
0xfb: JUMPDEST 
0xfc: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xfd
[0xfd:0x102]
---
Predecessors: [0xb]
Successors: [0x103]
---
0xfd JUMPDEST
0xfe CALLVALUE
0xff PUSH2 0x2
0x102 JUMPI
---
0xfd: JUMPDEST 
0xfe: V57 = CALLVALUE
0xff: V58 = 0x2
0x102: THROWI V57
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x103
[0x103:0x10e]
---
Predecessors: [0xfd]
Successors: [0x25c]
---
0x103 PUSH2 0x10f
0x106 PUSH1 0x4
0x108 DUP1
0x109 POP
0x10a POP
0x10b PUSH2 0x25c
0x10e JUMP
---
0x103: V59 = 0x10f
0x106: V60 = 0x4
0x10b: V61 = 0x25c
0x10e: JUMP 0x25c
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x10f]
Exit stack: [V8, 0x10f]

================================

Block 0x10f
[0x10f:0x124]
---
Predecessors: [0x25c]
Successors: []
---
0x10f JUMPDEST
0x110 PUSH1 0x40
0x112 MLOAD
0x113 DUP1
0x114 DUP3
0x115 DUP2
0x116 MSTORE
0x117 PUSH1 0x20
0x119 ADD
0x11a SWAP2
0x11b POP
0x11c POP
0x11d PUSH1 0x40
0x11f MLOAD
0x120 DUP1
0x121 SWAP2
0x122 SUB
0x123 SWAP1
0x124 RETURN
---
0x10f: JUMPDEST 
0x110: V62 = 0x40
0x112: V63 = M[0x40]
0x116: M[V63] = V152
0x117: V64 = 0x20
0x119: V65 = ADD 0x20 V63
0x11d: V66 = 0x40
0x11f: V67 = M[0x40]
0x122: V68 = SUB V65 V67
0x124: RETURN V67 V68
---
Entry stack: [V8, 0x10f, V152]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x10f]

================================

Block 0x125
[0x125:0x12a]
---
Predecessors: [0x39]
Successors: [0x12b]
---
0x125 JUMPDEST
0x126 CALLVALUE
0x127 PUSH2 0x2
0x12a JUMPI
---
0x125: JUMPDEST 
0x126: V69 = CALLVALUE
0x127: V70 = 0x2
0x12a: THROWI V69
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x12b
[0x12b:0x13f]
---
Predecessors: [0x125]
Successors: [0x265]
---
0x12b PUSH2 0x140
0x12e PUSH1 0x4
0x130 DUP1
0x131 DUP1
0x132 CALLDATALOAD
0x133 SWAP1
0x134 PUSH1 0x20
0x136 ADD
0x137 SWAP1
0x138 SWAP2
0x139 SWAP1
0x13a POP
0x13b POP
0x13c PUSH2 0x265
0x13f JUMP
---
0x12b: V71 = 0x140
0x12e: V72 = 0x4
0x132: V73 = CALLDATALOAD 0x4
0x134: V74 = 0x20
0x136: V75 = ADD 0x20 0x4
0x13c: V76 = 0x265
0x13f: JUMP 0x265
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x140, V73]
Exit stack: [V8, 0x140, V73]

================================

Block 0x140
[0x140:0x141]
---
Predecessors: []
Successors: []
---
0x140 JUMPDEST
0x141 STOP
---
0x140: JUMPDEST 
0x141: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x142
[0x142:0x147]
---
Predecessors: [0x44]
Successors: [0x148]
---
0x142 JUMPDEST
0x143 CALLVALUE
0x144 PUSH2 0x2
0x147 JUMPI
---
0x142: JUMPDEST 
0x143: V77 = CALLVALUE
0x144: V78 = 0x2
0x147: THROWI V77
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x148
[0x148:0x15c]
---
Predecessors: [0x142]
Successors: [0x34a]
---
0x148 PUSH2 0x15d
0x14b PUSH1 0x4
0x14d DUP1
0x14e DUP1
0x14f CALLDATALOAD
0x150 SWAP1
0x151 PUSH1 0x20
0x153 ADD
0x154 SWAP1
0x155 SWAP2
0x156 SWAP1
0x157 POP
0x158 POP
0x159 PUSH2 0x34a
0x15c JUMP
---
0x148: V79 = 0x15d
0x14b: V80 = 0x4
0x14f: V81 = CALLDATALOAD 0x4
0x151: V82 = 0x20
0x153: V83 = ADD 0x20 0x4
0x159: V84 = 0x34a
0x15c: JUMP 0x34a
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x15d, V81]
Exit stack: [V8, 0x15d, V81]

================================

Block 0x15d
[0x15d:0x15e]
---
Predecessors: [0x447, 0x66e]
Successors: []
---
0x15d JUMPDEST
0x15e STOP
---
0x15d: JUMPDEST 
0x15e: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x15f
[0x15f:0x164]
---
Predecessors: [0x4f]
Successors: [0x165]
---
0x15f JUMPDEST
0x160 CALLVALUE
0x161 PUSH2 0x2
0x164 JUMPI
---
0x15f: JUMPDEST 
0x160: V85 = CALLVALUE
0x161: V86 = 0x2
0x164: THROWI V85
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x165
[0x165:0x170]
---
Predecessors: [0x15f]
Successors: [0x44a]
---
0x165 PUSH2 0x171
0x168 PUSH1 0x4
0x16a DUP1
0x16b POP
0x16c POP
0x16d PUSH2 0x44a
0x170 JUMP
---
0x165: V87 = 0x171
0x168: V88 = 0x4
0x16d: V89 = 0x44a
0x170: JUMP 0x44a
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x171]
Exit stack: [V8, 0x171]

================================

Block 0x171
[0x171:0x172]
---
Predecessors: [0x5bb]
Successors: []
---
0x171 JUMPDEST
0x172 STOP
---
0x171: JUMPDEST 
0x172: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x173
[0x173:0x178]
---
Predecessors: [0x5a]
Successors: [0x179]
---
0x173 JUMPDEST
0x174 CALLVALUE
0x175 PUSH2 0x2
0x178 JUMPI
---
0x173: JUMPDEST 
0x174: V90 = CALLVALUE
0x175: V91 = 0x2
0x178: THROWI V90
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x179
[0x179:0x184]
---
Predecessors: [0x173]
Successors: [0x5be]
---
0x179 PUSH2 0x185
0x17c PUSH1 0x4
0x17e DUP1
0x17f POP
0x180 POP
0x181 PUSH2 0x5be
0x184 JUMP
---
0x179: V92 = 0x185
0x17c: V93 = 0x4
0x181: V94 = 0x5be
0x184: JUMP 0x5be
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x185]
Exit stack: [V8, 0x185]

================================

Block 0x185
[0x185:0x19a]
---
Predecessors: [0x5be]
Successors: []
---
0x185 JUMPDEST
0x186 PUSH1 0x40
0x188 MLOAD
0x189 DUP1
0x18a DUP3
0x18b DUP2
0x18c MSTORE
0x18d PUSH1 0x20
0x18f ADD
0x190 SWAP2
0x191 POP
0x192 POP
0x193 PUSH1 0x40
0x195 MLOAD
0x196 DUP1
0x197 SWAP2
0x198 SUB
0x199 SWAP1
0x19a RETURN
---
0x185: JUMPDEST 
0x186: V95 = 0x40
0x188: V96 = M[0x40]
0x18c: M[V96] = V333
0x18d: V97 = 0x20
0x18f: V98 = ADD 0x20 V96
0x193: V99 = 0x40
0x195: V100 = M[0x40]
0x198: V101 = SUB V98 V100
0x19a: RETURN V100 V101
---
Entry stack: [V8, 0x185, V333]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x185]

================================

Block 0x19b
[0x19b:0x1a0]
---
Predecessors: [0x65]
Successors: [0x1a1]
---
0x19b JUMPDEST
0x19c CALLVALUE
0x19d PUSH2 0x2
0x1a0 JUMPI
---
0x19b: JUMPDEST 
0x19c: V102 = CALLVALUE
0x19d: V103 = 0x2
0x1a0: THROWI V102
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x1a1
[0x1a1:0x1ac]
---
Predecessors: [0x19b]
Successors: [0x5c7]
---
0x1a1 PUSH2 0x1ad
0x1a4 PUSH1 0x4
0x1a6 DUP1
0x1a7 POP
0x1a8 POP
0x1a9 PUSH2 0x5c7
0x1ac JUMP
---
0x1a1: V104 = 0x1ad
0x1a4: V105 = 0x4
0x1a9: V106 = 0x5c7
0x1ac: JUMP 0x5c7
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x1ad]
Exit stack: [V8, 0x1ad]

================================

Block 0x1ad
[0x1ad:0x1c2]
---
Predecessors: [0x5c7]
Successors: []
---
0x1ad JUMPDEST
0x1ae PUSH1 0x40
0x1b0 MLOAD
0x1b1 DUP1
0x1b2 DUP3
0x1b3 DUP2
0x1b4 MSTORE
0x1b5 PUSH1 0x20
0x1b7 ADD
0x1b8 SWAP2
0x1b9 POP
0x1ba POP
0x1bb PUSH1 0x40
0x1bd MLOAD
0x1be DUP1
0x1bf SWAP2
0x1c0 SUB
0x1c1 SWAP1
0x1c2 RETURN
---
0x1ad: JUMPDEST 
0x1ae: V107 = 0x40
0x1b0: V108 = M[0x40]
0x1b4: M[V108] = V336
0x1b5: V109 = 0x20
0x1b7: V110 = ADD 0x20 V108
0x1bb: V111 = 0x40
0x1bd: V112 = M[0x40]
0x1c0: V113 = SUB V110 V112
0x1c2: RETURN V112 V113
---
Entry stack: [V8, 0x1ad, V336]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x1ad]

================================

Block 0x1c3
[0x1c3:0x1c8]
---
Predecessors: [0x70]
Successors: [0x1c9]
---
0x1c3 JUMPDEST
0x1c4 CALLVALUE
0x1c5 PUSH2 0x2
0x1c8 JUMPI
---
0x1c3: JUMPDEST 
0x1c4: V114 = CALLVALUE
0x1c5: V115 = 0x2
0x1c8: THROWI V114
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x1c9
[0x1c9:0x1d4]
---
Predecessors: [0x1c3]
Successors: [0x5d0]
---
0x1c9 PUSH2 0x1d5
0x1cc PUSH1 0x4
0x1ce DUP1
0x1cf POP
0x1d0 POP
0x1d1 PUSH2 0x5d0
0x1d4 JUMP
---
0x1c9: V116 = 0x1d5
0x1cc: V117 = 0x4
0x1d1: V118 = 0x5d0
0x1d4: JUMP 0x5d0
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x1d5]
Exit stack: [V8, 0x1d5]

================================

Block 0x1d5
[0x1d5:0x200]
---
Predecessors: [0x5d0]
Successors: []
---
0x1d5 JUMPDEST
0x1d6 PUSH1 0x40
0x1d8 MLOAD
0x1d9 DUP1
0x1da DUP3
0x1db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f0 AND
0x1f1 DUP2
0x1f2 MSTORE
0x1f3 PUSH1 0x20
0x1f5 ADD
0x1f6 SWAP2
0x1f7 POP
0x1f8 POP
0x1f9 PUSH1 0x40
0x1fb MLOAD
0x1fc DUP1
0x1fd SWAP2
0x1fe SUB
0x1ff SWAP1
0x200 RETURN
---
0x1d5: JUMPDEST 
0x1d6: V119 = 0x40
0x1d8: V120 = M[0x40]
0x1db: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x1f2: M[V120] = V122
0x1f3: V123 = 0x20
0x1f5: V124 = ADD 0x20 V120
0x1f9: V125 = 0x40
0x1fb: V126 = M[0x40]
0x1fe: V127 = SUB V124 V126
0x200: RETURN V126 V127
---
Entry stack: [V8, 0x1d5, V344]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x1d5]

================================

Block 0x201
[0x201:0x206]
---
Predecessors: [0x7b]
Successors: [0x207]
---
0x201 JUMPDEST
0x202 CALLVALUE
0x203 PUSH2 0x2
0x206 JUMPI
---
0x201: JUMPDEST 
0x202: V128 = CALLVALUE
0x203: V129 = 0x2
0x206: THROWI V128
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x207
[0x207:0x21b]
---
Predecessors: [0x201]
Successors: [0x5f6]
---
0x207 PUSH2 0x21c
0x20a PUSH1 0x4
0x20c DUP1
0x20d DUP1
0x20e CALLDATALOAD
0x20f SWAP1
0x210 PUSH1 0x20
0x212 ADD
0x213 SWAP1
0x214 SWAP2
0x215 SWAP1
0x216 POP
0x217 POP
0x218 PUSH2 0x5f6
0x21b JUMP
---
0x207: V130 = 0x21c
0x20a: V131 = 0x4
0x20e: V132 = CALLDATALOAD 0x4
0x210: V133 = 0x20
0x212: V134 = ADD 0x20 0x4
0x218: V135 = 0x5f6
0x21b: JUMP 0x5f6
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x21c, V132]
Exit stack: [V8, 0x21c, V132]

================================

Block 0x21c
[0x21c:0x21d]
---
Predecessors: [0x447, 0x66e]
Successors: []
---
0x21c JUMPDEST
0x21d STOP
---
0x21c: JUMPDEST 
0x21d: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x21e
[0x21e:0x223]
---
Predecessors: [0x86]
Successors: [0x224]
---
0x21e JUMPDEST
0x21f CALLVALUE
0x220 PUSH2 0x2
0x223 JUMPI
---
0x21e: JUMPDEST 
0x21f: V136 = CALLVALUE
0x220: V137 = 0x2
0x223: THROWI V136
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x224
[0x224:0x22f]
---
Predecessors: [0x21e]
Successors: [0x671]
---
0x224 PUSH2 0x230
0x227 PUSH1 0x4
0x229 DUP1
0x22a POP
0x22b POP
0x22c PUSH2 0x671
0x22f JUMP
---
0x224: V138 = 0x230
0x227: V139 = 0x4
0x22c: V140 = 0x671
0x22f: JUMP 0x671
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x230]
Exit stack: [V8, 0x230]

================================

Block 0x230
[0x230:0x25b]
---
Predecessors: [0x671]
Successors: []
---
0x230 JUMPDEST
0x231 PUSH1 0x40
0x233 MLOAD
0x234 DUP1
0x235 DUP3
0x236 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24b AND
0x24c DUP2
0x24d MSTORE
0x24e PUSH1 0x20
0x250 ADD
0x251 SWAP2
0x252 POP
0x253 POP
0x254 PUSH1 0x40
0x256 MLOAD
0x257 DUP1
0x258 SWAP2
0x259 SUB
0x25a SWAP1
0x25b RETURN
---
0x230: JUMPDEST 
0x231: V141 = 0x40
0x233: V142 = M[0x40]
0x236: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x24b: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x24d: M[V142] = V144
0x24e: V145 = 0x20
0x250: V146 = ADD 0x20 V142
0x254: V147 = 0x40
0x256: V148 = M[0x40]
0x259: V149 = SUB V146 V148
0x25b: RETURN V148 V149
---
Entry stack: [V8, 0x230, V379]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x230]

================================

Block 0x25c
[0x25c:0x264]
---
Predecessors: [0x103]
Successors: [0x10f]
---
0x25c JUMPDEST
0x25d PUSH1 0x2
0x25f PUSH1 0x0
0x261 POP
0x262 SLOAD
0x263 DUP2
0x264 JUMP
---
0x25c: JUMPDEST 
0x25d: V150 = 0x2
0x25f: V151 = 0x0
0x262: V152 = S[0x2]
0x264: JUMP 0x10f
---
Entry stack: [V8, 0x10f]
Stack pops: 1
Stack additions: [S0, V152]
Exit stack: [V8, 0x10f, V152]

================================

Block 0x265
[0x265:0x2bc]
---
Predecessors: [0x12b]
Successors: [0x2bd, 0x2c1]
---
0x265 JUMPDEST
0x266 PUSH1 0x1
0x268 PUSH1 0x0
0x26a SWAP1
0x26b SLOAD
0x26c SWAP1
0x26d PUSH2 0x100
0x270 EXP
0x271 SWAP1
0x272 DIV
0x273 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x288 AND
0x289 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29e AND
0x29f CALLER
0x2a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b5 AND
0x2b6 EQ
0x2b7 ISZERO
0x2b8 ISZERO
0x2b9 PUSH2 0x2c1
0x2bc JUMPI
---
0x265: JUMPDEST 
0x266: V153 = 0x1
0x268: V154 = 0x0
0x26b: V155 = S[0x1]
0x26d: V156 = 0x100
0x270: V157 = EXP 0x100 0x0
0x272: V158 = DIV V155 0x1
0x273: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x288: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x289: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x29e: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x29f: V163 = CALLER
0x2a0: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b5: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2b6: V166 = EQ V165 V162
0x2b7: V167 = ISZERO V166
0x2b8: V168 = ISZERO V167
0x2b9: V169 = 0x2c1
0x2bc: JUMPI 0x2c1 V168
---
Entry stack: [V8, 0x140, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x140, V73]

================================

Block 0x2bd
[0x2bd:0x2c0]
---
Predecessors: [0x265]
Successors: []
---
0x2bd PUSH2 0x2
0x2c0 JUMP
---
0x2bd: V170 = 0x2
0x2c0: THROW 
---
Entry stack: [V8, 0x140, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x140, V73]

================================

Block 0x2c1
[0x2c1:0x345]
---
Predecessors: [0x265]
Successors: []
---
0x2c1 JUMPDEST
0x2c2 PUSH32 0x817c5912299b2d8eea4d9429e557c7b42c96a31499b4229932d1f070f068e37a
0x2e3 DUP2
0x2e4 ADDRESS
0x2e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fa AND
0x2fb BALANCE
0x2fc PUSH1 0x40
0x2fe MLOAD
0x2ff DUP1
0x300 DUP4
0x301 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x316 AND
0x317 DUP2
0x318 MSTORE
0x319 PUSH1 0x20
0x31b ADD
0x31c DUP3
0x31d DUP2
0x31e MSTORE
0x31f PUSH1 0x20
0x321 ADD
0x322 SWAP3
0x323 POP
0x324 POP
0x325 POP
0x326 PUSH1 0x40
0x328 MLOAD
0x329 DUP1
0x32a SWAP2
0x32b SUB
0x32c SWAP1
0x32d LOG1
0x32e DUP1
0x32f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x344 AND
0x345 SELFDESTRUCT
---
0x2c1: JUMPDEST 
0x2c2: V171 = 0x817c5912299b2d8eea4d9429e557c7b42c96a31499b4229932d1f070f068e37a
0x2e4: V172 = ADDRESS
0x2e5: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fa: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x2fb: V175 = BALANCE V174
0x2fc: V176 = 0x40
0x2fe: V177 = M[0x40]
0x301: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x316: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x318: M[V177] = V179
0x319: V180 = 0x20
0x31b: V181 = ADD 0x20 V177
0x31e: M[V181] = V175
0x31f: V182 = 0x20
0x321: V183 = ADD 0x20 V181
0x326: V184 = 0x40
0x328: V185 = M[0x40]
0x32b: V186 = SUB V183 V185
0x32d: LOG V185 V186 0x817c5912299b2d8eea4d9429e557c7b42c96a31499b4229932d1f070f068e37a
0x32f: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x344: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x345: SELFDESTRUCT V188
---
Entry stack: [V8, 0x140, V73]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x140, V73]

================================

Block 0x346
[0x346:0x346]
---
Predecessors: []
Successors: [0x347]
---
0x346 JUMPDEST
---
0x346: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x347
[0x347:0x349]
---
Predecessors: [0x346]
Successors: []
Has unresolved jump.
---
0x347 JUMPDEST
0x348 POP
0x349 JUMP
---
0x347: JUMPDEST 
0x349: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x34a
[0x34a:0x3a1]
---
Predecessors: [0x148]
Successors: [0x3a2, 0x3a6]
---
0x34a JUMPDEST
0x34b PUSH1 0x0
0x34d PUSH1 0x0
0x34f SWAP1
0x350 SLOAD
0x351 SWAP1
0x352 PUSH2 0x100
0x355 EXP
0x356 SWAP1
0x357 DIV
0x358 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36d AND
0x36e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x383 AND
0x384 CALLER
0x385 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39a AND
0x39b EQ
0x39c ISZERO
0x39d ISZERO
0x39e PUSH2 0x3a6
0x3a1 JUMPI
---
0x34a: JUMPDEST 
0x34b: V189 = 0x0
0x34d: V190 = 0x0
0x350: V191 = S[0x0]
0x352: V192 = 0x100
0x355: V193 = EXP 0x100 0x0
0x357: V194 = DIV V191 0x1
0x358: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x36d: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x36e: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x383: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x384: V199 = CALLER
0x385: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x39a: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x39b: V202 = EQ V201 V198
0x39c: V203 = ISZERO V202
0x39d: V204 = ISZERO V203
0x39e: V205 = 0x3a6
0x3a1: JUMPI 0x3a6 V204
---
Entry stack: [V8, 0x15d, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x15d, V81]

================================

Block 0x3a2
[0x3a2:0x3a5]
---
Predecessors: [0x34a]
Successors: []
---
0x3a2 PUSH2 0x2
0x3a5 JUMP
---
0x3a2: V206 = 0x2
0x3a5: THROW 
---
Entry stack: [V8, 0x15d, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x15d, V81]

================================

Block 0x3a6
[0x3a6:0x3c5]
---
Predecessors: [0x34a]
Successors: [0x3c6, 0x3ca]
---
0x3a6 JUMPDEST
0x3a7 ADDRESS
0x3a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bd AND
0x3be BALANCE
0x3bf DUP2
0x3c0 GT
0x3c1 ISZERO
0x3c2 PUSH2 0x3ca
0x3c5 JUMPI
---
0x3a6: JUMPDEST 
0x3a7: V207 = ADDRESS
0x3a8: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bd: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x3be: V210 = BALANCE V209
0x3c0: V211 = GT V81 V210
0x3c1: V212 = ISZERO V211
0x3c2: V213 = 0x3ca
0x3c5: JUMPI 0x3ca V212
---
Entry stack: [V8, 0x15d, V81]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x15d, V81]

================================

Block 0x3c6
[0x3c6:0x3c9]
---
Predecessors: [0x3a6]
Successors: []
---
0x3c6 PUSH2 0x2
0x3c9 JUMP
---
0x3c6: V214 = 0x2
0x3c9: THROW 
---
Entry stack: [V8, 0x15d, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x15d, V81]

================================

Block 0x3ca
[0x3ca:0x3d7]
---
Predecessors: [0x3a6]
Successors: [0x3d8, 0x3f7]
---
0x3ca JUMPDEST
0x3cb PUSH1 0x4
0x3cd PUSH1 0x0
0x3cf POP
0x3d0 SLOAD
0x3d1 DUP2
0x3d2 GT
0x3d3 ISZERO
0x3d4 PUSH2 0x3f7
0x3d7 JUMPI
---
0x3ca: JUMPDEST 
0x3cb: V215 = 0x4
0x3cd: V216 = 0x0
0x3d0: V217 = S[0x4]
0x3d2: V218 = GT V81 V217
0x3d3: V219 = ISZERO V218
0x3d4: V220 = 0x3f7
0x3d7: JUMPI 0x3f7 V219
---
Entry stack: [V8, 0x15d, V81]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x15d, V81]

================================

Block 0x3d8
[0x3d8:0x3ec]
---
Predecessors: [0x3ca]
Successors: [0x697]
---
0x3d8 PUSH2 0x3ed
0x3db PUSH1 0x3
0x3dd PUSH1 0x0
0x3df POP
0x3e0 SLOAD
0x3e1 PUSH1 0x2
0x3e3 PUSH1 0x0
0x3e5 POP
0x3e6 SLOAD
0x3e7 TIMESTAMP
0x3e8 ADD
0x3e9 PUSH2 0x697
0x3ec JUMP
---
0x3d8: V221 = 0x3ed
0x3db: V222 = 0x3
0x3dd: V223 = 0x0
0x3e0: V224 = S[0x3]
0x3e1: V225 = 0x2
0x3e3: V226 = 0x0
0x3e6: V227 = S[0x2]
0x3e7: V228 = TIMESTAMP
0x3e8: V229 = ADD V228 V227
0x3e9: V230 = 0x697
0x3ec: JUMP 0x697
---
Entry stack: [V8, 0x15d, V81]
Stack pops: 0
Stack additions: [0x3ed, V224, V229]
Exit stack: [V8, 0x15d, V81, 0x3ed, V224, V229]

================================

Block 0x3ed
[0x3ed:0x3f6]
---
Predecessors: [0x6b1]
Successors: [0x3f7]
---
0x3ed JUMPDEST
0x3ee PUSH1 0x3
0x3f0 PUSH1 0x0
0x3f2 POP
0x3f3 DUP2
0x3f4 SWAP1
0x3f5 SSTORE
0x3f6 POP
---
0x3ed: JUMPDEST 
0x3ee: V231 = 0x3
0x3f0: V232 = 0x0
0x3f5: S[0x3] = S0
---
Entry stack: [V8, {0x15d, 0x21c}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, {0x15d, 0x21c}, S1]

================================

Block 0x3f7
[0x3f7:0x445]
---
Predecessors: [0x3ca, 0x3ed]
Successors: [0x446]
---
0x3f7 JUMPDEST
0x3f8 DUP1
0x3f9 PUSH1 0x4
0x3fb PUSH1 0x0
0x3fd POP
0x3fe DUP2
0x3ff SWAP1
0x400 SSTORE
0x401 POP
0x402 PUSH32 0xec51431f5697ee0a7a7a9fd175f7989f4b700d33f634e7291598e60b48cd4b99
0x423 DUP2
0x424 PUSH1 0x3
0x426 PUSH1 0x0
0x428 POP
0x429 SLOAD
0x42a PUSH1 0x40
0x42c MLOAD
0x42d DUP1
0x42e DUP4
0x42f DUP2
0x430 MSTORE
0x431 PUSH1 0x20
0x433 ADD
0x434 DUP3
0x435 DUP2
0x436 MSTORE
0x437 PUSH1 0x20
0x439 ADD
0x43a SWAP3
0x43b POP
0x43c POP
0x43d POP
0x43e PUSH1 0x40
0x440 MLOAD
0x441 DUP1
0x442 SWAP2
0x443 SUB
0x444 SWAP1
0x445 LOG1
---
0x3f7: JUMPDEST 
0x3f9: V233 = 0x4
0x3fb: V234 = 0x0
0x400: S[0x4] = S0
0x402: V235 = 0xec51431f5697ee0a7a7a9fd175f7989f4b700d33f634e7291598e60b48cd4b99
0x424: V236 = 0x3
0x426: V237 = 0x0
0x429: V238 = S[0x3]
0x42a: V239 = 0x40
0x42c: V240 = M[0x40]
0x430: M[V240] = S0
0x431: V241 = 0x20
0x433: V242 = ADD 0x20 V240
0x436: M[V242] = V238
0x437: V243 = 0x20
0x439: V244 = ADD 0x20 V242
0x43e: V245 = 0x40
0x440: V246 = M[0x40]
0x443: V247 = SUB V244 V246
0x445: LOG V246 V247 0xec51431f5697ee0a7a7a9fd175f7989f4b700d33f634e7291598e60b48cd4b99
---
Entry stack: [V8, {0x15d, 0x21c}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, {0x15d, 0x21c}, S0]

================================

Block 0x446
[0x446:0x446]
---
Predecessors: [0x3f7]
Successors: [0x447]
---
0x446 JUMPDEST
---
0x446: JUMPDEST 
---
Entry stack: [V8, {0x15d, 0x21c}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, {0x15d, 0x21c}, S0]

================================

Block 0x447
[0x447:0x449]
---
Predecessors: [0x446]
Successors: [0x15d, 0x21c]
---
0x447 JUMPDEST
0x448 POP
0x449 JUMP
---
0x447: JUMPDEST 
0x449: JUMP {0x15d, 0x21c}
---
Entry stack: [V8, {0x15d, 0x21c}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x44a
[0x44a:0x4a3]
---
Predecessors: [0x165]
Successors: [0x4a4, 0x4a8]
---
0x44a JUMPDEST
0x44b PUSH1 0x0
0x44d PUSH1 0x0
0x44f PUSH1 0x0
0x451 SWAP1
0x452 SLOAD
0x453 SWAP1
0x454 PUSH2 0x100
0x457 EXP
0x458 SWAP1
0x459 DIV
0x45a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46f AND
0x470 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x485 AND
0x486 CALLER
0x487 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49c AND
0x49d EQ
0x49e ISZERO
0x49f ISZERO
0x4a0 PUSH2 0x4a8
0x4a3 JUMPI
---
0x44a: JUMPDEST 
0x44b: V248 = 0x0
0x44d: V249 = 0x0
0x44f: V250 = 0x0
0x452: V251 = S[0x0]
0x454: V252 = 0x100
0x457: V253 = EXP 0x100 0x0
0x459: V254 = DIV V251 0x1
0x45a: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x46f: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x470: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x485: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x486: V259 = CALLER
0x487: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x49c: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x49d: V262 = EQ V261 V258
0x49e: V263 = ISZERO V262
0x49f: V264 = ISZERO V263
0x4a0: V265 = 0x4a8
0x4a3: JUMPI 0x4a8 V264
---
Entry stack: [V8, 0x171]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V8, 0x171, 0x0]

================================

Block 0x4a4
[0x4a4:0x4a7]
---
Predecessors: [0x44a]
Successors: []
---
0x4a4 PUSH2 0x2
0x4a7 JUMP
---
0x4a4: V266 = 0x2
0x4a7: THROW 
---
Entry stack: [V8, 0x171, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x171, 0x0]

================================

Block 0x4a8
[0x4a8:0x4b5]
---
Predecessors: [0x44a]
Successors: [0x4b6, 0x4c0]
---
0x4a8 JUMPDEST
0x4a9 PUSH1 0x3
0x4ab PUSH1 0x0
0x4ad POP
0x4ae SLOAD
0x4af TIMESTAMP
0x4b0 LT
0x4b1 DUP1
0x4b2 PUSH2 0x4c0
0x4b5 JUMPI
---
0x4a8: JUMPDEST 
0x4a9: V267 = 0x3
0x4ab: V268 = 0x0
0x4ae: V269 = S[0x3]
0x4af: V270 = TIMESTAMP
0x4b0: V271 = LT V270 V269
0x4b2: V272 = 0x4c0
0x4b5: JUMPI 0x4c0 V271
---
Entry stack: [V8, 0x171, 0x0]
Stack pops: 0
Stack additions: [V271]
Exit stack: [V8, 0x171, 0x0, V271]

================================

Block 0x4b6
[0x4b6:0x4bf]
---
Predecessors: [0x4a8]
Successors: [0x4c0]
---
0x4b6 POP
0x4b7 PUSH1 0x0
0x4b9 PUSH1 0x4
0x4bb PUSH1 0x0
0x4bd POP
0x4be SLOAD
0x4bf EQ
---
0x4b7: V273 = 0x0
0x4b9: V274 = 0x4
0x4bb: V275 = 0x0
0x4be: V276 = S[0x4]
0x4bf: V277 = EQ V276 0x0
---
Entry stack: [V8, 0x171, 0x0, V271]
Stack pops: 1
Stack additions: [V277]
Exit stack: [V8, 0x171, 0x0, V277]

================================

Block 0x4c0
[0x4c0:0x4c5]
---
Predecessors: [0x4a8, 0x4b6]
Successors: [0x4c6, 0x4ca]
---
0x4c0 JUMPDEST
0x4c1 ISZERO
0x4c2 PUSH2 0x4ca
0x4c5 JUMPI
---
0x4c0: JUMPDEST 
0x4c1: V278 = ISZERO S0
0x4c2: V279 = 0x4ca
0x4c5: JUMPI 0x4ca V278
---
Entry stack: [V8, 0x171, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x171, 0x0]

================================

Block 0x4c6
[0x4c6:0x4c9]
---
Predecessors: [0x4c0]
Successors: []
---
0x4c6 PUSH2 0x2
0x4c9 JUMP
---
0x4c6: V280 = 0x2
0x4c9: THROW 
---
Entry stack: [V8, 0x171, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x171, 0x0]

================================

Block 0x4ca
[0x4ca:0x53d]
---
Predecessors: [0x4c0]
Successors: [0x53e, 0x542]
---
0x4ca JUMPDEST
0x4cb PUSH1 0x4
0x4cd PUSH1 0x0
0x4cf POP
0x4d0 SLOAD
0x4d1 SWAP1
0x4d2 POP
0x4d3 PUSH1 0x0
0x4d5 PUSH1 0x4
0x4d7 PUSH1 0x0
0x4d9 POP
0x4da DUP2
0x4db SWAP1
0x4dc SSTORE
0x4dd POP
0x4de PUSH1 0x0
0x4e0 PUSH1 0x0
0x4e2 SWAP1
0x4e3 SLOAD
0x4e4 SWAP1
0x4e5 PUSH2 0x100
0x4e8 EXP
0x4e9 SWAP1
0x4ea DIV
0x4eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x500 AND
0x501 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x516 AND
0x517 PUSH2 0x8fc
0x51a DUP3
0x51b SWAP1
0x51c DUP2
0x51d ISZERO
0x51e MUL
0x51f SWAP1
0x520 PUSH1 0x40
0x522 MLOAD
0x523 DUP1
0x524 SWAP1
0x525 POP
0x526 PUSH1 0x0
0x528 PUSH1 0x40
0x52a MLOAD
0x52b DUP1
0x52c DUP4
0x52d SUB
0x52e DUP2
0x52f DUP6
0x530 DUP9
0x531 DUP9
0x532 CALL
0x533 SWAP4
0x534 POP
0x535 POP
0x536 POP
0x537 POP
0x538 ISZERO
0x539 ISZERO
0x53a PUSH2 0x542
0x53d JUMPI
---
0x4ca: JUMPDEST 
0x4cb: V281 = 0x4
0x4cd: V282 = 0x0
0x4d0: V283 = S[0x4]
0x4d3: V284 = 0x0
0x4d5: V285 = 0x4
0x4d7: V286 = 0x0
0x4dc: S[0x4] = 0x0
0x4de: V287 = 0x0
0x4e0: V288 = 0x0
0x4e3: V289 = S[0x0]
0x4e5: V290 = 0x100
0x4e8: V291 = EXP 0x100 0x0
0x4ea: V292 = DIV V289 0x1
0x4eb: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x500: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x501: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x516: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x517: V297 = 0x8fc
0x51d: V298 = ISZERO V283
0x51e: V299 = MUL V298 0x8fc
0x520: V300 = 0x40
0x522: V301 = M[0x40]
0x526: V302 = 0x0
0x528: V303 = 0x40
0x52a: V304 = M[0x40]
0x52d: V305 = SUB V301 V304
0x532: V306 = CALL V299 V296 V283 V304 V305 V304 0x0
0x538: V307 = ISZERO V306
0x539: V308 = ISZERO V307
0x53a: V309 = 0x542
0x53d: JUMPI 0x542 V308
---
Entry stack: [V8, 0x171, 0x0]
Stack pops: 1
Stack additions: [V283]
Exit stack: [V8, 0x171, V283]

================================

Block 0x53e
[0x53e:0x541]
---
Predecessors: [0x4ca]
Successors: []
---
0x53e PUSH2 0x2
0x541 JUMP
---
0x53e: V310 = 0x2
0x541: THROW 
---
Entry stack: [V8, 0x171, V283]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x171, V283]

================================

Block 0x542
[0x542:0x5b9]
---
Predecessors: [0x4ca]
Successors: [0x5ba]
---
0x542 JUMPDEST
0x543 PUSH32 0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364
0x564 PUSH1 0x0
0x566 PUSH1 0x0
0x568 SWAP1
0x569 SLOAD
0x56a SWAP1
0x56b PUSH2 0x100
0x56e EXP
0x56f SWAP1
0x570 DIV
0x571 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x586 AND
0x587 DUP3
0x588 PUSH1 0x40
0x58a MLOAD
0x58b DUP1
0x58c DUP4
0x58d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a2 AND
0x5a3 DUP2
0x5a4 MSTORE
0x5a5 PUSH1 0x20
0x5a7 ADD
0x5a8 DUP3
0x5a9 DUP2
0x5aa MSTORE
0x5ab PUSH1 0x20
0x5ad ADD
0x5ae SWAP3
0x5af POP
0x5b0 POP
0x5b1 POP
0x5b2 PUSH1 0x40
0x5b4 MLOAD
0x5b5 DUP1
0x5b6 SWAP2
0x5b7 SUB
0x5b8 SWAP1
0x5b9 LOG1
---
0x542: JUMPDEST 
0x543: V311 = 0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364
0x564: V312 = 0x0
0x566: V313 = 0x0
0x569: V314 = S[0x0]
0x56b: V315 = 0x100
0x56e: V316 = EXP 0x100 0x0
0x570: V317 = DIV V314 0x1
0x571: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x586: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x588: V320 = 0x40
0x58a: V321 = M[0x40]
0x58d: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a2: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V319
0x5a4: M[V321] = V323
0x5a5: V324 = 0x20
0x5a7: V325 = ADD 0x20 V321
0x5aa: M[V325] = V283
0x5ab: V326 = 0x20
0x5ad: V327 = ADD 0x20 V325
0x5b2: V328 = 0x40
0x5b4: V329 = M[0x40]
0x5b7: V330 = SUB V327 V329
0x5b9: LOG V329 V330 0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364
---
Entry stack: [V8, 0x171, V283]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x171, V283]

================================

Block 0x5ba
[0x5ba:0x5ba]
---
Predecessors: [0x542]
Successors: [0x5bb]
---
0x5ba JUMPDEST
---
0x5ba: JUMPDEST 
---
Entry stack: [V8, 0x171, V283]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x171, V283]

================================

Block 0x5bb
[0x5bb:0x5bd]
---
Predecessors: [0x5ba]
Successors: [0x171]
---
0x5bb JUMPDEST
0x5bc POP
0x5bd JUMP
---
0x5bb: JUMPDEST 
0x5bd: JUMP 0x171
---
Entry stack: [V8, 0x171, V283]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x5be
[0x5be:0x5c6]
---
Predecessors: [0x179]
Successors: [0x185]
---
0x5be JUMPDEST
0x5bf PUSH1 0x3
0x5c1 PUSH1 0x0
0x5c3 POP
0x5c4 SLOAD
0x5c5 DUP2
0x5c6 JUMP
---
0x5be: JUMPDEST 
0x5bf: V331 = 0x3
0x5c1: V332 = 0x0
0x5c4: V333 = S[0x3]
0x5c6: JUMP 0x185
---
Entry stack: [V8, 0x185]
Stack pops: 1
Stack additions: [S0, V333]
Exit stack: [V8, 0x185, V333]

================================

Block 0x5c7
[0x5c7:0x5cf]
---
Predecessors: [0x1a1]
Successors: [0x1ad]
---
0x5c7 JUMPDEST
0x5c8 PUSH1 0x4
0x5ca PUSH1 0x0
0x5cc POP
0x5cd SLOAD
0x5ce DUP2
0x5cf JUMP
---
0x5c7: JUMPDEST 
0x5c8: V334 = 0x4
0x5ca: V335 = 0x0
0x5cd: V336 = S[0x4]
0x5cf: JUMP 0x1ad
---
Entry stack: [V8, 0x1ad]
Stack pops: 1
Stack additions: [S0, V336]
Exit stack: [V8, 0x1ad, V336]

================================

Block 0x5d0
[0x5d0:0x5f5]
---
Predecessors: [0x1c9]
Successors: [0x1d5]
---
0x5d0 JUMPDEST
0x5d1 PUSH1 0x0
0x5d3 PUSH1 0x0
0x5d5 SWAP1
0x5d6 SLOAD
0x5d7 SWAP1
0x5d8 PUSH2 0x100
0x5db EXP
0x5dc SWAP1
0x5dd DIV
0x5de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f3 AND
0x5f4 DUP2
0x5f5 JUMP
---
0x5d0: JUMPDEST 
0x5d1: V337 = 0x0
0x5d3: V338 = 0x0
0x5d6: V339 = S[0x0]
0x5d8: V340 = 0x100
0x5db: V341 = EXP 0x100 0x0
0x5dd: V342 = DIV V339 0x1
0x5de: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f3: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x5f5: JUMP 0x1d5
---
Entry stack: [V8, 0x1d5]
Stack pops: 1
Stack additions: [S0, V344]
Exit stack: [V8, 0x1d5, V344]

================================

Block 0x5f6
[0x5f6:0x64d]
---
Predecessors: [0x207]
Successors: [0x64e, 0x652]
---
0x5f6 JUMPDEST
0x5f7 PUSH1 0x0
0x5f9 PUSH1 0x0
0x5fb SWAP1
0x5fc SLOAD
0x5fd SWAP1
0x5fe PUSH2 0x100
0x601 EXP
0x602 SWAP1
0x603 DIV
0x604 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x619 AND
0x61a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62f AND
0x630 CALLER
0x631 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x646 AND
0x647 EQ
0x648 ISZERO
0x649 ISZERO
0x64a PUSH2 0x652
0x64d JUMPI
---
0x5f6: JUMPDEST 
0x5f7: V345 = 0x0
0x5f9: V346 = 0x0
0x5fc: V347 = S[0x0]
0x5fe: V348 = 0x100
0x601: V349 = EXP 0x100 0x0
0x603: V350 = DIV V347 0x1
0x604: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x619: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x61a: V353 = 0xffffffffffffffffffffffffffffffffffffffff
0x62f: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0x630: V355 = CALLER
0x631: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x646: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x647: V358 = EQ V357 V354
0x648: V359 = ISZERO V358
0x649: V360 = ISZERO V359
0x64a: V361 = 0x652
0x64d: JUMPI 0x652 V360
---
Entry stack: [V8, 0x21c, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x21c, V132]

================================

Block 0x64e
[0x64e:0x651]
---
Predecessors: [0x5f6]
Successors: []
---
0x64e PUSH2 0x2
0x651 JUMP
---
0x64e: V362 = 0x2
0x651: THROW 
---
Entry stack: [V8, 0x21c, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x21c, V132]

================================

Block 0x652
[0x652:0x662]
---
Predecessors: [0x5f6]
Successors: [0x697]
---
0x652 JUMPDEST
0x653 PUSH2 0x663
0x656 PUSH1 0x3
0x658 PUSH1 0x0
0x65a POP
0x65b SLOAD
0x65c DUP3
0x65d TIMESTAMP
0x65e ADD
0x65f PUSH2 0x697
0x662 JUMP
---
0x652: JUMPDEST 
0x653: V363 = 0x663
0x656: V364 = 0x3
0x658: V365 = 0x0
0x65b: V366 = S[0x3]
0x65d: V367 = TIMESTAMP
0x65e: V368 = ADD V367 V132
0x65f: V369 = 0x697
0x662: JUMP 0x697
---
Entry stack: [V8, 0x21c, V132]
Stack pops: 1
Stack additions: [S0, 0x663, V366, V368]
Exit stack: [V8, 0x21c, V132, 0x663, V366, V368]

================================

Block 0x663
[0x663:0x66c]
---
Predecessors: [0x6b1]
Successors: [0x66d]
---
0x663 JUMPDEST
0x664 PUSH1 0x3
0x666 PUSH1 0x0
0x668 POP
0x669 DUP2
0x66a SWAP1
0x66b SSTORE
0x66c POP
---
0x663: JUMPDEST 
0x664: V370 = 0x3
0x666: V371 = 0x0
0x66b: S[0x3] = S0
---
Entry stack: [V8, {0x15d, 0x21c}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, {0x15d, 0x21c}, S1]

================================

Block 0x66d
[0x66d:0x66d]
---
Predecessors: [0x663]
Successors: [0x66e]
---
0x66d JUMPDEST
---
0x66d: JUMPDEST 
---
Entry stack: [V8, {0x15d, 0x21c}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, {0x15d, 0x21c}, S0]

================================

Block 0x66e
[0x66e:0x670]
---
Predecessors: [0x66d]
Successors: [0x15d, 0x21c]
---
0x66e JUMPDEST
0x66f POP
0x670 JUMP
---
0x66e: JUMPDEST 
0x670: JUMP {0x15d, 0x21c}
---
Entry stack: [V8, {0x15d, 0x21c}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x671
[0x671:0x696]
---
Predecessors: [0x224]
Successors: [0x230]
---
0x671 JUMPDEST
0x672 PUSH1 0x1
0x674 PUSH1 0x0
0x676 SWAP1
0x677 SLOAD
0x678 SWAP1
0x679 PUSH2 0x100
0x67c EXP
0x67d SWAP1
0x67e DIV
0x67f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x694 AND
0x695 DUP2
0x696 JUMP
---
0x671: JUMPDEST 
0x672: V372 = 0x1
0x674: V373 = 0x0
0x677: V374 = S[0x1]
0x679: V375 = 0x100
0x67c: V376 = EXP 0x100 0x0
0x67e: V377 = DIV V374 0x1
0x67f: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x694: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x696: JUMP 0x230
---
Entry stack: [V8, 0x230]
Stack pops: 1
Stack additions: [S0, V379]
Exit stack: [V8, 0x230, V379]

================================

Block 0x697
[0x697:0x6a1]
---
Predecessors: [0x3d8, 0x652]
Successors: [0x6a2, 0x6a9]
---
0x697 JUMPDEST
0x698 PUSH1 0x0
0x69a DUP2
0x69b DUP4
0x69c GT
0x69d ISZERO
0x69e PUSH2 0x6a9
0x6a1 JUMPI
---
0x697: JUMPDEST 
0x698: V380 = 0x0
0x69c: V381 = GT S1 S0
0x69d: V382 = ISZERO V381
0x69e: V383 = 0x6a9
0x6a1: JUMPI 0x6a9 V382
---
Entry stack: [V8, {0x15d, 0x21c}, S3, {0x3ed, 0x663}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V8, {0x15d, 0x21c}, S3, {0x3ed, 0x663}, S1, S0, 0x0]

================================

Block 0x6a2
[0x6a2:0x6a8]
---
Predecessors: [0x697]
Successors: [0x6b1]
---
0x6a2 DUP3
0x6a3 SWAP1
0x6a4 POP
0x6a5 PUSH2 0x6b1
0x6a8 JUMP
---
0x6a5: V384 = 0x6b1
0x6a8: JUMP 0x6b1
---
Entry stack: [V8, {0x15d, 0x21c}, S4, {0x3ed, 0x663}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V8, {0x15d, 0x21c}, S4, {0x3ed, 0x663}, S2, S1, S2]

================================

Block 0x6a9
[0x6a9:0x6b0]
---
Predecessors: [0x697]
Successors: [0x6b1]
---
0x6a9 JUMPDEST
0x6aa DUP2
0x6ab SWAP1
0x6ac POP
0x6ad PUSH2 0x6b1
0x6b0 JUMP
---
0x6a9: JUMPDEST 
0x6ad: V385 = 0x6b1
0x6b0: JUMP 0x6b1
---
Entry stack: [V8, {0x15d, 0x21c}, S4, {0x3ed, 0x663}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V8, {0x15d, 0x21c}, S4, {0x3ed, 0x663}, S2, S1, S1]

================================

Block 0x6b1
[0x6b1:0x6b6]
---
Predecessors: [0x6a2, 0x6a9]
Successors: [0x3ed, 0x663]
---
0x6b1 JUMPDEST
0x6b2 SWAP3
0x6b3 SWAP2
0x6b4 POP
0x6b5 POP
0x6b6 JUMP
---
0x6b1: JUMPDEST 
0x6b6: JUMP {0x3ed, 0x663}
---
Entry stack: [V8, {0x15d, 0x21c}, S4, {0x3ed, 0x663}, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V8, {0x15d, 0x21c}, S4, S0]

================================

Function 0:
Public function signature: 0x288a39c
Entry block: 0xfd
Exit block: 0x10f
Body: 0xfd, 0x103, 0x10f, 0x25c

Function 1:
Public function signature: 0xcd865ec
Entry block: 0x125
Exit block: 0x2bd
Body: 0x125, 0x12b, 0x265, 0x2bd, 0x2c1

Function 2:
Public function signature: 0xe38901a
Entry block: 0x142
Exit block: 0x21c
Body: 0x142, 0x148, 0x15d, 0x21c, 0x34a, 0x3a2, 0x3a6, 0x3c6, 0x3ca, 0x3d8, 0x3ed, 0x3f7, 0x446, 0x447

Function 3:
Public function signature: 0x3ccfd60b
Entry block: 0x15f
Exit block: 0x171
Body: 0x15f, 0x165, 0x171, 0x44a, 0x4a4, 0x4a8, 0x4b6, 0x4c0, 0x4c6, 0x4ca, 0x53e, 0x542, 0x5ba, 0x5bb

Function 4:
Public function signature: 0x45cb3dde
Entry block: 0x173
Exit block: 0x185
Body: 0x173, 0x179, 0x185, 0x5be

Function 5:
Public function signature: 0x534844a2
Entry block: 0x19b
Exit block: 0x1ad
Body: 0x19b, 0x1a1, 0x1ad, 0x5c7

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x1c3
Exit block: 0x1d5
Body: 0x1c3, 0x1c9, 0x1d5, 0x5d0

Function 7:
Public function signature: 0xdd467064
Entry block: 0x201
Exit block: 0x21c
Body: 0x15d, 0x201, 0x207, 0x21c, 0x5f6, 0x64e, 0x652, 0x663, 0x66d, 0x66e

Function 8:
Public function signature: 0xddceafa9
Entry block: 0x21e
Exit block: 0x230
Body: 0x21e, 0x224, 0x230, 0x671

Function 9:
Public fallback function
Entry block: 0x91
Exit block: 0xfb
Body: 0x91, 0x95, 0x99, 0xa3, 0xf8, 0xf9, 0xfb

Function 10:
Private function
Entry block: 0x697
Exit block: 0x6b1
Body: 0x697, 0x6a2, 0x6a9, 0x6b1

