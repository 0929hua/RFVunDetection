Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xe0]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xe0
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xe0
0xa: JUMPI 0xe0 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x305]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x6fdde03
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x305
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x6fdde03
0x20: V14 = EQ V12 0x6fdde03
0x21: V15 = 0x305
0x24: JUMPI 0x305 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x390]
---
0x25 DUP1
0x26 PUSH4 0x18160ddd
0x2b EQ
0x2c PUSH2 0x390
0x2f JUMPI
---
0x26: V16 = 0x18160ddd
0x2b: V17 = EQ 0x18160ddd V12
0x2c: V18 = 0x390
0x2f: JUMPI 0x390 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x3b5]
---
0x30 DUP1
0x31 PUSH4 0x27ea06b8
0x36 EQ
0x37 PUSH2 0x3b5
0x3a JUMPI
---
0x31: V19 = 0x27ea06b8
0x36: V20 = EQ 0x27ea06b8 V12
0x37: V21 = 0x3b5
0x3a: JUMPI 0x3b5 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x3da]
---
0x3b DUP1
0x3c PUSH4 0x3328d3f0
0x41 EQ
0x42 PUSH2 0x3da
0x45 JUMPI
---
0x3c: V22 = 0x3328d3f0
0x41: V23 = EQ 0x3328d3f0 V12
0x42: V24 = 0x3da
0x45: JUMPI 0x3da V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x3ff]
---
0x46 DUP1
0x47 PUSH4 0x34686b73
0x4c EQ
0x4d PUSH2 0x3ff
0x50 JUMPI
---
0x47: V25 = 0x34686b73
0x4c: V26 = EQ 0x34686b73 V12
0x4d: V27 = 0x3ff
0x50: JUMPI 0x3ff V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x424]
---
0x51 DUP1
0x52 PUSH4 0x3c745371
0x57 EQ
0x58 PUSH2 0x424
0x5b JUMPI
---
0x52: V28 = 0x3c745371
0x57: V29 = EQ 0x3c745371 V12
0x58: V30 = 0x424
0x5b: JUMPI 0x424 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x453]
---
0x5c DUP1
0x5d PUSH4 0x5133ae24
0x62 EQ
0x63 PUSH2 0x453
0x66 JUMPI
---
0x5d: V31 = 0x5133ae24
0x62: V32 = EQ 0x5133ae24 V12
0x63: V33 = 0x453
0x66: JUMPI 0x453 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x47b]
---
0x67 DUP1
0x68 PUSH4 0x70a08231
0x6d EQ
0x6e PUSH2 0x47b
0x71 JUMPI
---
0x68: V34 = 0x70a08231
0x6d: V35 = EQ 0x70a08231 V12
0x6e: V36 = 0x47b
0x71: JUMPI 0x47b V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x4ac]
---
0x72 DUP1
0x73 PUSH4 0x7b1b1de6
0x78 EQ
0x79 PUSH2 0x4ac
0x7c JUMPI
---
0x73: V37 = 0x7b1b1de6
0x78: V38 = EQ 0x7b1b1de6 V12
0x79: V39 = 0x4ac
0x7c: JUMPI 0x4ac V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x4d1]
---
0x7d DUP1
0x7e PUSH4 0x8da5cb5b
0x83 EQ
0x84 PUSH2 0x4d1
0x87 JUMPI
---
0x7e: V40 = 0x8da5cb5b
0x83: V41 = EQ 0x8da5cb5b V12
0x84: V42 = 0x4d1
0x87: JUMPI 0x4d1 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x500]
---
0x88 DUP1
0x89 PUSH4 0x8db1342d
0x8e EQ
0x8f PUSH2 0x500
0x92 JUMPI
---
0x89: V43 = 0x8db1342d
0x8e: V44 = EQ 0x8db1342d V12
0x8f: V45 = 0x500
0x92: JUMPI 0x500 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x528]
---
0x93 DUP1
0x94 PUSH4 0x935c1fb1
0x99 EQ
0x9a PUSH2 0x528
0x9d JUMPI
---
0x94: V46 = 0x935c1fb1
0x99: V47 = EQ 0x935c1fb1 V12
0x9a: V48 = 0x528
0x9d: JUMPI 0x528 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x559]
---
0x9e DUP1
0x9f PUSH4 0x95d89b41
0xa4 EQ
0xa5 PUSH2 0x559
0xa8 JUMPI
---
0x9f: V49 = 0x95d89b41
0xa4: V50 = EQ 0x95d89b41 V12
0xa5: V51 = 0x559
0xa8: JUMPI 0x559 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x5e4]
---
0xa9 DUP1
0xaa PUSH4 0xa43be57b
0xaf EQ
0xb0 PUSH2 0x5e4
0xb3 JUMPI
---
0xaa: V52 = 0xa43be57b
0xaf: V53 = EQ 0xa43be57b V12
0xb0: V54 = 0x5e4
0xb3: JUMPI 0x5e4 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x5f9]
---
0xb4 DUP1
0xb5 PUSH4 0xa5025222
0xba EQ
0xbb PUSH2 0x5f9
0xbe JUMPI
---
0xb5: V55 = 0xa5025222
0xba: V56 = EQ 0xa5025222 V12
0xbb: V57 = 0x5f9
0xbe: JUMPI 0x5f9 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x62c]
---
0xbf DUP1
0xc0 PUSH4 0xedf26d9b
0xc5 EQ
0xc6 PUSH2 0x62c
0xc9 JUMPI
---
0xc0: V58 = 0xedf26d9b
0xc5: V59 = EQ 0xedf26d9b V12
0xc6: V60 = 0x62c
0xc9: JUMPI 0x62c V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x65e]
---
0xca DUP1
0xcb PUSH4 0xf9f16ef2
0xd0 EQ
0xd1 PUSH2 0x65e
0xd4 JUMPI
---
0xcb: V61 = 0xf9f16ef2
0xd0: V62 = EQ 0xf9f16ef2 V12
0xd1: V63 = 0x65e
0xd4: JUMPI 0x65e V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x683]
---
0xd5 DUP1
0xd6 PUSH4 0xfc0c546a
0xdb EQ
0xdc PUSH2 0x683
0xdf JUMPI
---
0xd6: V64 = 0xfc0c546a
0xdb: V65 = EQ 0xfc0c546a V12
0xdc: V66 = 0x683
0xdf: JUMPI 0x683 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xe0]
---
Predecessors: [0x0, 0xd5]
Successors: [0xe1]
---
0xe0 JUMPDEST
---
0xe0: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe1
[0xe1:0xfc]
---
Predecessors: [0xe0]
Successors: [0xfd, 0x12b]
---
0xe1 JUMPDEST
0xe2 PUSH1 0x0
0xe4 DUP1
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 PUSH1 0x0
0xea CALLVALUE
0xeb SWAP5
0xec POP
0xed PUSH1 0x0
0xef SWAP4
0xf0 POP
0xf1 PUSH1 0x0
0xf3 PUSH1 0x3
0xf5 SLOAD
0xf6 GT
0xf7 ISZERO
0xf8 DUP1
0xf9 PUSH2 0x12b
0xfc JUMPI
---
0xe1: JUMPDEST 
0xe2: V67 = 0x0
0xe5: V68 = 0x0
0xe8: V69 = 0x0
0xea: V70 = CALLVALUE
0xed: V71 = 0x0
0xf1: V72 = 0x0
0xf3: V73 = 0x3
0xf5: V74 = S[0x3]
0xf6: V75 = GT V74 0x0
0xf7: V76 = ISZERO V75
0xf9: V77 = 0x12b
0xfc: JUMPI 0x12b V76
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [V70, 0x0, 0x0, 0x0, 0x0, V76]
Exit stack: [V12, V70, 0x0, 0x0, 0x0, 0x0, V76]

================================

Block 0xfd
[0xfd:0x12a]
---
Predecessors: [0xe1]
Successors: [0x12b]
---
0xfd POP
0xfe PUSH1 0x0
0x100 DUP1
0x101 MSTORE
0x102 PUSH1 0xe
0x104 PUSH1 0x20
0x106 MSTORE
0x107 PUSH32 0xe710864318d4a32f37d6ce54cb3fadbef648dd12d8dbdf53973564d56b7f881c
0x128 SLOAD
0x129 TIMESTAMP
0x12a LT
---
0xfe: V78 = 0x0
0x101: M[0x0] = 0x0
0x102: V79 = 0xe
0x104: V80 = 0x20
0x106: M[0x20] = 0xe
0x107: V81 = 0xe710864318d4a32f37d6ce54cb3fadbef648dd12d8dbdf53973564d56b7f881c
0x128: V82 = S[0xe710864318d4a32f37d6ce54cb3fadbef648dd12d8dbdf53973564d56b7f881c]
0x129: V83 = TIMESTAMP
0x12a: V84 = LT V83 V82
---
Entry stack: [V12, V70, 0x0, 0x0, 0x0, 0x0, V76]
Stack pops: 1
Stack additions: [V84]
Exit stack: [V12, V70, 0x0, 0x0, 0x0, 0x0, V84]

================================

Block 0x12b
[0x12b:0x130]
---
Predecessors: [0xe1, 0xfd]
Successors: [0x131, 0x14a]
---
0x12b JUMPDEST
0x12c DUP1
0x12d PUSH2 0x14a
0x130 JUMPI
---
0x12b: JUMPDEST 
0x12d: V85 = 0x14a
0x130: JUMPI 0x14a S0
---
Entry stack: [V12, V70, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V70, 0x0, 0x0, 0x0, 0x0, S0]

================================

Block 0x131
[0x131:0x149]
---
Predecessors: [0x12b]
Successors: [0x14a]
---
0x131 POP
0x132 PUSH1 0x10
0x134 SLOAD
0x135 PUSH1 0x0
0x137 NOT
0x138 ADD
0x139 PUSH1 0x0
0x13b SWAP1
0x13c DUP2
0x13d MSTORE
0x13e PUSH1 0xe
0x140 PUSH1 0x20
0x142 MSTORE
0x143 PUSH1 0x40
0x145 SWAP1
0x146 SHA3
0x147 SLOAD
0x148 TIMESTAMP
0x149 GT
---
0x132: V86 = 0x10
0x134: V87 = S[0x10]
0x135: V88 = 0x0
0x137: V89 = NOT 0x0
0x138: V90 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V87
0x139: V91 = 0x0
0x13d: M[0x0] = V90
0x13e: V92 = 0xe
0x140: V93 = 0x20
0x142: M[0x20] = 0xe
0x143: V94 = 0x40
0x146: V95 = SHA3 0x0 0x40
0x147: V96 = S[V95]
0x148: V97 = TIMESTAMP
0x149: V98 = GT V97 V96
---
Entry stack: [V12, V70, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [V98]
Exit stack: [V12, V70, 0x0, 0x0, 0x0, 0x0, V98]

================================

Block 0x14a
[0x14a:0x14f]
---
Predecessors: [0x12b, 0x131]
Successors: [0x150, 0x154]
---
0x14a JUMPDEST
0x14b ISZERO
0x14c PUSH2 0x154
0x14f JUMPI
---
0x14a: JUMPDEST 
0x14b: V99 = ISZERO S0
0x14c: V100 = 0x154
0x14f: JUMPI 0x154 V99
---
Entry stack: [V12, V70, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, V70, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x150
[0x150:0x153]
---
Predecessors: [0x14a]
Successors: []
---
0x150 PUSH1 0x0
0x152 DUP1
0x153 REVERT
---
0x150: V101 = 0x0
0x153: REVERT 0x0 0x0
---
Entry stack: [V12, V70, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V70, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x154
[0x154:0x15d]
---
Predecessors: [0x14a]
Successors: [0x15e]
---
0x154 JUMPDEST
0x155 PUSH2 0x2329
0x158 SWAP3
0x159 POP
0x15a PUSH1 0x0
0x15c SWAP2
0x15d POP
---
0x154: JUMPDEST 
0x155: V102 = 0x2329
0x15a: V103 = 0x0
---
Entry stack: [V12, V70, 0x0, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x2329, 0x0, S0]
Exit stack: [V12, V70, 0x0, 0x2329, 0x0, 0x0]

================================

Block 0x15e
[0x15e:0x16b]
---
Predecessors: [0x154, 0x1bd]
Successors: [0x16c, 0x1c8]
---
0x15e JUMPDEST
0x15f PUSH1 0x1
0x161 PUSH1 0x10
0x163 SLOAD
0x164 SUB
0x165 DUP3
0x166 LT
0x167 ISZERO
0x168 PUSH2 0x1c8
0x16b JUMPI
---
0x15e: JUMPDEST 
0x15f: V104 = 0x1
0x161: V105 = 0x10
0x163: V106 = S[0x10]
0x164: V107 = SUB V106 0x1
0x166: V108 = LT S1 V107
0x167: V109 = ISZERO V108
0x168: V110 = 0x1c8
0x16b: JUMPI 0x1c8 V109
---
Entry stack: [V12, V70, 0x0, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V70, 0x0, S2, S1, 0x0]

================================

Block 0x16c
[0x16c:0x183]
---
Predecessors: [0x15e]
Successors: [0x184, 0x19b]
---
0x16c PUSH1 0x0
0x16e DUP3
0x16f DUP2
0x170 MSTORE
0x171 PUSH1 0xe
0x173 PUSH1 0x20
0x175 MSTORE
0x176 PUSH1 0x40
0x178 SWAP1
0x179 SHA3
0x17a SLOAD
0x17b TIMESTAMP
0x17c LT
0x17d DUP1
0x17e ISZERO
0x17f SWAP1
0x180 PUSH2 0x19b
0x183 JUMPI
---
0x16c: V111 = 0x0
0x170: M[0x0] = S1
0x171: V112 = 0xe
0x173: V113 = 0x20
0x175: M[0x20] = 0xe
0x176: V114 = 0x40
0x179: V115 = SHA3 0x0 0x40
0x17a: V116 = S[V115]
0x17b: V117 = TIMESTAMP
0x17c: V118 = LT V117 V116
0x17e: V119 = ISZERO V118
0x180: V120 = 0x19b
0x183: JUMPI 0x19b V118
---
Entry stack: [V12, V70, 0x0, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V119]
Exit stack: [V12, V70, 0x0, S2, S1, 0x0, V119]

================================

Block 0x184
[0x184:0x19a]
---
Predecessors: [0x16c]
Successors: [0x19b]
---
0x184 POP
0x185 PUSH1 0x1
0x187 DUP3
0x188 ADD
0x189 PUSH1 0x0
0x18b SWAP1
0x18c DUP2
0x18d MSTORE
0x18e PUSH1 0xe
0x190 PUSH1 0x20
0x192 MSTORE
0x193 PUSH1 0x40
0x195 SWAP1
0x196 SHA3
0x197 SLOAD
0x198 TIMESTAMP
0x199 GT
0x19a ISZERO
---
0x185: V121 = 0x1
0x188: V122 = ADD S2 0x1
0x189: V123 = 0x0
0x18d: M[0x0] = V122
0x18e: V124 = 0xe
0x190: V125 = 0x20
0x192: M[0x20] = 0xe
0x193: V126 = 0x40
0x196: V127 = SHA3 0x0 0x40
0x197: V128 = S[V127]
0x198: V129 = TIMESTAMP
0x199: V130 = GT V129 V128
0x19a: V131 = ISZERO V130
---
Entry stack: [V12, V70, 0x0, S3, S2, 0x0, V119]
Stack pops: 3
Stack additions: [S2, S1, V131]
Exit stack: [V12, V70, 0x0, S3, S2, 0x0, V131]

================================

Block 0x19b
[0x19b:0x1a0]
---
Predecessors: [0x16c, 0x184]
Successors: [0x1a1, 0x1bc]
---
0x19b JUMPDEST
0x19c ISZERO
0x19d PUSH2 0x1bc
0x1a0 JUMPI
---
0x19b: JUMPDEST 
0x19c: V132 = ISZERO S0
0x19d: V133 = 0x1bc
0x1a0: JUMPI 0x1bc V132
---
Entry stack: [V12, V70, 0x0, S3, S2, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, V70, 0x0, S3, S2, 0x0]

================================

Block 0x1a1
[0x1a1:0x1bb]
---
Predecessors: [0x19b]
Successors: [0x1bc]
---
0x1a1 PUSH1 0x0
0x1a3 SWAP2
0x1a4 DUP3
0x1a5 MSTORE
0x1a6 PUSH1 0xf
0x1a8 PUSH1 0x20
0x1aa MSTORE
0x1ab PUSH1 0x40
0x1ad SWAP1
0x1ae SWAP2
0x1af SHA3
0x1b0 SLOAD
0x1b1 PUSH1 0x10
0x1b3 SLOAD
0x1b4 SWAP1
0x1b5 SWAP3
0x1b6 POP
0x1b7 PUSH1 0x0
0x1b9 NOT
0x1ba ADD
0x1bb SWAP1
---
0x1a1: V134 = 0x0
0x1a5: M[0x0] = S1
0x1a6: V135 = 0xf
0x1a8: V136 = 0x20
0x1aa: M[0x20] = 0xf
0x1ab: V137 = 0x40
0x1af: V138 = SHA3 0x0 0x40
0x1b0: V139 = S[V138]
0x1b1: V140 = 0x10
0x1b3: V141 = S[0x10]
0x1b7: V142 = 0x0
0x1b9: V143 = NOT 0x0
0x1ba: V144 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V141
---
Entry stack: [V12, V70, 0x0, S2, S1, 0x0]
Stack pops: 3
Stack additions: [V139, V144, S0]
Exit stack: [V12, V70, 0x0, V139, V144, 0x0]

================================

Block 0x1bc
[0x1bc:0x1bc]
---
Predecessors: [0x19b, 0x1a1]
Successors: [0x1bd]
---
0x1bc JUMPDEST
---
0x1bc: JUMPDEST 
---
Entry stack: [V12, V70, 0x0, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V70, 0x0, S2, S1, 0x0]

================================

Block 0x1bd
[0x1bd:0x1c7]
---
Predecessors: [0x1bc]
Successors: [0x15e]
---
0x1bd JUMPDEST
0x1be PUSH1 0x1
0x1c0 SWAP1
0x1c1 SWAP2
0x1c2 ADD
0x1c3 SWAP1
0x1c4 PUSH2 0x15e
0x1c7 JUMP
---
0x1bd: JUMPDEST 
0x1be: V145 = 0x1
0x1c2: V146 = ADD S1 0x1
0x1c4: V147 = 0x15e
0x1c7: JUMP 0x15e
---
Entry stack: [V12, V70, 0x0, S2, S1, 0x0]
Stack pops: 2
Stack additions: [V146, S0]
Exit stack: [V12, V70, 0x0, S2, V146, 0x0]

================================

Block 0x1c8
[0x1c8:0x1d2]
---
Predecessors: [0x15e]
Successors: [0x1d3, 0x1d7]
---
0x1c8 JUMPDEST
0x1c9 DUP3
0x1ca PUSH2 0x2329
0x1cd EQ
0x1ce ISZERO
0x1cf PUSH2 0x1d7
0x1d2 JUMPI
---
0x1c8: JUMPDEST 
0x1ca: V148 = 0x2329
0x1cd: V149 = EQ 0x2329 S2
0x1ce: V150 = ISZERO V149
0x1cf: V151 = 0x1d7
0x1d2: JUMPI 0x1d7 V150
---
Entry stack: [V12, V70, 0x0, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, V70, 0x0, S2, S1, 0x0]

================================

Block 0x1d3
[0x1d3:0x1d6]
---
Predecessors: [0x1c8]
Successors: []
---
0x1d3 PUSH1 0x0
0x1d5 DUP1
0x1d6 REVERT
---
0x1d3: V152 = 0x0
0x1d6: REVERT 0x0 0x0
---
Entry stack: [V12, V70, 0x0, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V70, 0x0, S2, S1, 0x0]

================================

Block 0x1d7
[0x1d7:0x1e2]
---
Predecessors: [0x1c8]
Successors: [0x1e3, 0x1e4]
---
0x1d7 JUMPDEST
0x1d8 PUSH1 0x4
0x1da SLOAD
0x1db DUP6
0x1dc DUP2
0x1dd ISZERO
0x1de ISZERO
0x1df PUSH2 0x1e4
0x1e2 JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V153 = 0x4
0x1da: V154 = S[0x4]
0x1dd: V155 = ISZERO V154
0x1de: V156 = ISZERO V155
0x1df: V157 = 0x1e4
0x1e2: JUMPI 0x1e4 V156
---
Entry stack: [V12, V70, 0x0, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V154, S4]
Exit stack: [V12, V70, 0x0, S2, S1, 0x0, V154, V70]

================================

Block 0x1e3
[0x1e3:0x1e3]
---
Predecessors: [0x1d7]
Successors: []
---
0x1e3 INVALID
---
0x1e3: INVALID 
---
Entry stack: [V12, V70, 0x0, S4, S3, 0x0, V154, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V70, 0x0, S4, S3, 0x0, V154, V70]

================================

Block 0x1e4
[0x1e4:0x1f3]
---
Predecessors: [0x1d7]
Successors: [0x1f4, 0x1f8]
---
0x1e4 JUMPDEST
0x1e5 DIV
0x1e6 SWAP1
0x1e7 POP
0x1e8 DUP5
0x1e9 PUSH1 0x4
0x1eb SLOAD
0x1ec DUP3
0x1ed MUL
0x1ee GT
0x1ef ISZERO
0x1f0 PUSH2 0x1f8
0x1f3 JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V158 = DIV V70 V154
0x1e9: V159 = 0x4
0x1eb: V160 = S[0x4]
0x1ed: V161 = MUL V158 V160
0x1ee: V162 = GT V161 V70
0x1ef: V163 = ISZERO V162
0x1f0: V164 = 0x1f8
0x1f3: JUMPI 0x1f8 V163
---
Entry stack: [V12, V70, 0x0, S4, S3, 0x0, V154, V70]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V158]
Exit stack: [V12, V70, 0x0, S4, S3, V158]

================================

Block 0x1f4
[0x1f4:0x1f7]
---
Predecessors: [0x1e4]
Successors: [0x1f8]
---
0x1f4 PUSH1 0x0
0x1f6 NOT
0x1f7 ADD
---
0x1f4: V165 = 0x0
0x1f6: V166 = NOT 0x0
0x1f7: V167 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V158
---
Entry stack: [V12, V70, 0x0, S2, S1, V158]
Stack pops: 1
Stack additions: [V167]
Exit stack: [V12, V70, 0x0, S2, S1, V167]

================================

Block 0x1f8
[0x1f8:0x200]
---
Predecessors: [0x1e4, 0x1f4]
Successors: [0x201]
---
0x1f8 JUMPDEST
0x1f9 PUSH2 0x3e8
0x1fc DUP4
0x1fd DUP2
0x1fe ADD
0x1ff DUP3
0x200 MUL
---
0x1f8: JUMPDEST 
0x1f9: V168 = 0x3e8
0x1fe: V169 = ADD 0x3e8 S2
0x200: V170 = MUL S0 V169
---
Entry stack: [V12, V70, 0x0, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x3e8, V170]
Exit stack: [V12, V70, 0x0, S2, S1, S0, 0x3e8, V170]

================================

Block 0x201
[0x201:0x20e]
---
Predecessors: [0x1f8]
Successors: [0x20f, 0x21c]
---
0x201 JUMPDEST
0x202 DIV
0x203 SWAP1
0x204 POP
0x205 PUSH1 0x3
0x207 SLOAD
0x208 DUP2
0x209 GT
0x20a ISZERO
0x20b PUSH2 0x21c
0x20e JUMPI
---
0x201: JUMPDEST 
0x202: V171 = DIV V170 0x3e8
0x205: V172 = 0x3
0x207: V173 = S[0x3]
0x209: V174 = GT V171 V173
0x20a: V175 = ISZERO V174
0x20b: V176 = 0x21c
0x20e: JUMPI 0x21c V175
---
Entry stack: [V12, V70, 0x0, S4, S3, S2, 0x3e8, V170]
Stack pops: 3
Stack additions: [V171]
Exit stack: [V12, V70, 0x0, S4, S3, V171]

================================

Block 0x20f
[0x20f:0x21b]
---
Predecessors: [0x201]
Successors: [0x21c]
---
0x20f PUSH1 0x4
0x211 SLOAD
0x212 PUSH1 0x3
0x214 SLOAD
0x215 SWAP2
0x216 DUP3
0x217 SWAP1
0x218 SUB
0x219 MUL
0x21a SWAP4
0x21b POP
---
0x20f: V177 = 0x4
0x211: V178 = S[0x4]
0x212: V179 = 0x3
0x214: V180 = S[0x3]
0x218: V181 = SUB V171 V180
0x219: V182 = MUL V181 V178
---
Entry stack: [V12, V70, 0x0, S2, S1, V171]
Stack pops: 4
Stack additions: [V182, S2, S1, V180]
Exit stack: [V12, V70, V182, S2, S1, V180]

================================

Block 0x21c
[0x21c:0x246]
---
Predecessors: [0x201, 0x20f]
Successors: [0x247, 0x269]
---
0x21c JUMPDEST
0x21d PUSH1 0x3
0x21f DUP1
0x220 SLOAD
0x221 DUP3
0x222 SWAP1
0x223 SUB
0x224 SWAP1
0x225 SSTORE
0x226 PUSH1 0x1
0x228 PUSH1 0xa0
0x22a PUSH1 0x2
0x22c EXP
0x22d SUB
0x22e CALLER
0x22f AND
0x230 PUSH1 0x0
0x232 SWAP1
0x233 DUP2
0x234 MSTORE
0x235 PUSH1 0xa
0x237 PUSH1 0x20
0x239 MSTORE
0x23a PUSH1 0x40
0x23c SWAP1
0x23d SHA3
0x23e SLOAD
0x23f PUSH1 0xff
0x241 AND
0x242 ISZERO
0x243 PUSH2 0x269
0x246 JUMPI
---
0x21c: JUMPDEST 
0x21d: V183 = 0x3
0x220: V184 = S[0x3]
0x223: V185 = SUB V184 S0
0x225: S[0x3] = V185
0x226: V186 = 0x1
0x228: V187 = 0xa0
0x22a: V188 = 0x2
0x22c: V189 = EXP 0x2 0xa0
0x22d: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22e: V191 = CALLER
0x22f: V192 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x230: V193 = 0x0
0x234: M[0x0] = V192
0x235: V194 = 0xa
0x237: V195 = 0x20
0x239: M[0x20] = 0xa
0x23a: V196 = 0x40
0x23d: V197 = SHA3 0x0 0x40
0x23e: V198 = S[V197]
0x23f: V199 = 0xff
0x241: V200 = AND 0xff V198
0x242: V201 = ISZERO V200
0x243: V202 = 0x269
0x246: JUMPI 0x269 V201
---
Entry stack: [V12, V70, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V70, S3, S2, S1, S0]

================================

Block 0x247
[0x247:0x268]
---
Predecessors: [0x21c]
Successors: [0x28e]
---
0x247 PUSH1 0x1
0x249 PUSH1 0xa0
0x24b PUSH1 0x2
0x24d EXP
0x24e SUB
0x24f CALLER
0x250 AND
0x251 PUSH1 0x0
0x253 SWAP1
0x254 DUP2
0x255 MSTORE
0x256 PUSH1 0x9
0x258 PUSH1 0x20
0x25a MSTORE
0x25b PUSH1 0x40
0x25d SWAP1
0x25e SHA3
0x25f DUP1
0x260 SLOAD
0x261 DUP3
0x262 ADD
0x263 SWAP1
0x264 SSTORE
0x265 PUSH2 0x28e
0x268 JUMP
---
0x247: V203 = 0x1
0x249: V204 = 0xa0
0x24b: V205 = 0x2
0x24d: V206 = EXP 0x2 0xa0
0x24e: V207 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24f: V208 = CALLER
0x250: V209 = AND V208 0xffffffffffffffffffffffffffffffffffffffff
0x251: V210 = 0x0
0x255: M[0x0] = V209
0x256: V211 = 0x9
0x258: V212 = 0x20
0x25a: M[0x20] = 0x9
0x25b: V213 = 0x40
0x25e: V214 = SHA3 0x0 0x40
0x260: V215 = S[V214]
0x262: V216 = ADD S0 V215
0x264: S[V214] = V216
0x265: V217 = 0x28e
0x268: JUMP 0x28e
---
Entry stack: [V12, V70, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V70, S3, S2, S1, S0]

================================

Block 0x269
[0x269:0x271]
---
Predecessors: [0x21c]
Successors: [0x6b2]
---
0x269 JUMPDEST
0x26a PUSH2 0x272
0x26d CALLER
0x26e PUSH2 0x6b2
0x271 JUMP
---
0x269: JUMPDEST 
0x26a: V218 = 0x272
0x26d: V219 = CALLER
0x26e: V220 = 0x6b2
0x271: JUMP 0x6b2
---
Entry stack: [V12, V70, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x272, V219]
Exit stack: [V12, V70, S3, S2, S1, S0, 0x272, V219]

================================

Block 0x272
[0x272:0x28d]
---
Predecessors: [0x73b]
Successors: [0x28e]
---
0x272 JUMPDEST
0x273 PUSH1 0x1
0x275 PUSH1 0xa0
0x277 PUSH1 0x2
0x279 EXP
0x27a SUB
0x27b CALLER
0x27c AND
0x27d PUSH1 0x0
0x27f SWAP1
0x280 DUP2
0x281 MSTORE
0x282 PUSH1 0x9
0x284 PUSH1 0x20
0x286 MSTORE
0x287 PUSH1 0x40
0x289 SWAP1
0x28a SHA3
0x28b DUP2
0x28c SWAP1
0x28d SSTORE
---
0x272: JUMPDEST 
0x273: V221 = 0x1
0x275: V222 = 0xa0
0x277: V223 = 0x2
0x279: V224 = EXP 0x2 0xa0
0x27a: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27b: V226 = CALLER
0x27c: V227 = AND V226 0xffffffffffffffffffffffffffffffffffffffff
0x27d: V228 = 0x0
0x281: M[0x0] = V227
0x282: V229 = 0x9
0x284: V230 = 0x20
0x286: M[0x20] = 0x9
0x287: V231 = 0x40
0x28a: V232 = SHA3 0x0 0x40
0x28d: S[V232] = S0
---
Entry stack: [V12, V70, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V70, S3, S2, S1, S0]

================================

Block 0x28e
[0x28e:0x2d6]
---
Predecessors: [0x247, 0x272]
Successors: [0x2d7, 0x2fd]
---
0x28e JUMPDEST
0x28f CALLER
0x290 PUSH1 0x1
0x292 PUSH1 0xa0
0x294 PUSH1 0x2
0x296 EXP
0x297 SUB
0x298 AND
0x299 PUSH1 0x0
0x29b PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x2bc DUP4
0x2bd PUSH1 0x40
0x2bf MLOAD
0x2c0 SWAP1
0x2c1 DUP2
0x2c2 MSTORE
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 PUSH1 0x40
0x2c8 MLOAD
0x2c9 DUP1
0x2ca SWAP2
0x2cb SUB
0x2cc SWAP1
0x2cd LOG3
0x2ce PUSH1 0x0
0x2d0 DUP5
0x2d1 GT
0x2d2 ISZERO
0x2d3 PUSH2 0x2fd
0x2d6 JUMPI
---
0x28e: JUMPDEST 
0x28f: V233 = CALLER
0x290: V234 = 0x1
0x292: V235 = 0xa0
0x294: V236 = 0x2
0x296: V237 = EXP 0x2 0xa0
0x297: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x298: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x299: V240 = 0x0
0x29b: V241 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x2bd: V242 = 0x40
0x2bf: V243 = M[0x40]
0x2c2: M[V243] = S0
0x2c3: V244 = 0x20
0x2c5: V245 = ADD 0x20 V243
0x2c6: V246 = 0x40
0x2c8: V247 = M[0x40]
0x2cb: V248 = SUB V245 V247
0x2cd: LOG V247 V248 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef 0x0 V239
0x2ce: V249 = 0x0
0x2d1: V250 = GT S3 0x0
0x2d2: V251 = ISZERO V250
0x2d3: V252 = 0x2fd
0x2d6: JUMPI 0x2fd V251
---
Entry stack: [V12, V70, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, V70, S3, S2, S1, S0]

================================

Block 0x2d7
[0x2d7:0x2fc]
---
Predecessors: [0x28e]
Successors: [0x2fd]
---
0x2d7 PUSH1 0x1
0x2d9 PUSH1 0xa0
0x2db PUSH1 0x2
0x2dd EXP
0x2de SUB
0x2df CALLER
0x2e0 AND
0x2e1 DUP5
0x2e2 ISZERO
0x2e3 PUSH2 0x8fc
0x2e6 MUL
0x2e7 DUP6
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb PUSH1 0x0
0x2ed PUSH1 0x40
0x2ef MLOAD
0x2f0 DUP1
0x2f1 DUP4
0x2f2 SUB
0x2f3 DUP2
0x2f4 DUP6
0x2f5 DUP9
0x2f6 DUP9
0x2f7 CALL
0x2f8 POP
0x2f9 POP
0x2fa POP
0x2fb POP
0x2fc POP
---
0x2d7: V253 = 0x1
0x2d9: V254 = 0xa0
0x2db: V255 = 0x2
0x2dd: V256 = EXP 0x2 0xa0
0x2de: V257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2df: V258 = CALLER
0x2e0: V259 = AND V258 0xffffffffffffffffffffffffffffffffffffffff
0x2e2: V260 = ISZERO S3
0x2e3: V261 = 0x8fc
0x2e6: V262 = MUL 0x8fc V260
0x2e8: V263 = 0x40
0x2ea: V264 = M[0x40]
0x2eb: V265 = 0x0
0x2ed: V266 = 0x40
0x2ef: V267 = M[0x40]
0x2f2: V268 = SUB V264 V267
0x2f7: V269 = CALL V262 V259 S3 V267 V268 V267 0x0
---
Entry stack: [V12, V70, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, V70, S3, S2, S1, S0]

================================

Block 0x2fd
[0x2fd:0x2fd]
---
Predecessors: [0x28e, 0x2d7]
Successors: [0x2fe]
---
0x2fd JUMPDEST
---
0x2fd: JUMPDEST 
---
Entry stack: [V12, V70, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V70, S3, S2, S1, S0]

================================

Block 0x2fe
[0x2fe:0x304]
---
Predecessors: [0x2fd]
Successors: []
---
0x2fe JUMPDEST
0x2ff POP
0x300 POP
0x301 POP
0x302 POP
0x303 POP
0x304 STOP
---
0x2fe: JUMPDEST 
0x304: STOP 
---
Entry stack: [V12, V70, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x305
[0x305:0x30b]
---
Predecessors: [0xb]
Successors: [0x30c, 0x310]
---
0x305 JUMPDEST
0x306 CALLVALUE
0x307 ISZERO
0x308 PUSH2 0x310
0x30b JUMPI
---
0x305: JUMPDEST 
0x306: V270 = CALLVALUE
0x307: V271 = ISZERO V270
0x308: V272 = 0x310
0x30b: JUMPI 0x310 V271
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x30c
[0x30c:0x30f]
---
Predecessors: [0x305]
Successors: []
---
0x30c PUSH1 0x0
0x30e DUP1
0x30f REVERT
---
0x30c: V273 = 0x0
0x30f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x310
[0x310:0x317]
---
Predecessors: [0x305]
Successors: [0x73e]
---
0x310 JUMPDEST
0x311 PUSH2 0x318
0x314 PUSH2 0x73e
0x317 JUMP
---
0x310: JUMPDEST 
0x311: V274 = 0x318
0x314: V275 = 0x73e
0x317: JUMP 0x73e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x318]
Exit stack: [V12, 0x318]

================================

Block 0x318
[0x318:0x33b]
---
Predecessors: [0x7d4]
Successors: [0x33c]
---
0x318 JUMPDEST
0x319 PUSH1 0x40
0x31b MLOAD
0x31c PUSH1 0x20
0x31e DUP1
0x31f DUP3
0x320 MSTORE
0x321 DUP2
0x322 SWAP1
0x323 DUP2
0x324 ADD
0x325 DUP4
0x326 DUP2
0x327 DUP2
0x328 MLOAD
0x329 DUP2
0x32a MSTORE
0x32b PUSH1 0x20
0x32d ADD
0x32e SWAP2
0x32f POP
0x330 DUP1
0x331 MLOAD
0x332 SWAP1
0x333 PUSH1 0x20
0x335 ADD
0x336 SWAP1
0x337 DUP1
0x338 DUP4
0x339 DUP4
0x33a PUSH1 0x0
---
0x318: JUMPDEST 
0x319: V276 = 0x40
0x31b: V277 = M[0x40]
0x31c: V278 = 0x20
0x320: M[V277] = 0x20
0x324: V279 = ADD V277 0x20
0x328: V280 = M[S0]
0x32a: M[V279] = V280
0x32b: V281 = 0x20
0x32d: V282 = ADD 0x20 V279
0x331: V283 = M[S0]
0x333: V284 = 0x20
0x335: V285 = ADD 0x20 S0
0x33a: V286 = 0x0
---
Entry stack: [V12, 0x318, S0]
Stack pops: 1
Stack additions: [S0, V277, V277, V282, V285, V283, V283, V282, V285, 0x0]
Exit stack: [V12, 0x318, S0, V277, V277, V282, V285, V283, V283, V282, V285, 0x0]

================================

Block 0x33c
[0x33c:0x344]
---
Predecessors: [0x318, 0x34d, 0x5a1]
Successors: [0x345, 0x355]
---
0x33c JUMPDEST
0x33d DUP4
0x33e DUP2
0x33f LT
0x340 ISZERO
0x341 PUSH2 0x355
0x344 JUMPI
---
0x33c: JUMPDEST 
0x33f: V287 = LT S0 S3
0x340: V288 = ISZERO V287
0x341: V289 = 0x355
0x344: JUMPI 0x355 V288
---
Entry stack: [V12, 0x318, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x318, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x345
[0x345:0x34c]
---
Predecessors: [0x33c]
Successors: [0x34d]
---
0x345 DUP1
0x346 DUP3
0x347 ADD
0x348 MLOAD
0x349 DUP2
0x34a DUP5
0x34b ADD
0x34c MSTORE
---
0x347: V290 = ADD S1 S0
0x348: V291 = M[V290]
0x34b: V292 = ADD S2 S0
0x34c: M[V292] = V291
---
Entry stack: [V12, 0x318, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x318, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x34d
[0x34d:0x354]
---
Predecessors: [0x345]
Successors: [0x33c]
---
0x34d JUMPDEST
0x34e PUSH1 0x20
0x350 ADD
0x351 PUSH2 0x33c
0x354 JUMP
---
0x34d: JUMPDEST 
0x34e: V293 = 0x20
0x350: V294 = ADD 0x20 S0
0x351: V295 = 0x33c
0x354: JUMP 0x33c
---
Entry stack: [V12, 0x318, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V294]
Exit stack: [V12, 0x318, S9, S8, S7, S6, S5, S4, S3, S2, S1, V294]

================================

Block 0x355
[0x355:0x368]
---
Predecessors: [0x33c, 0x590]
Successors: [0x369, 0x382]
---
0x355 JUMPDEST
0x356 POP
0x357 POP
0x358 POP
0x359 POP
0x35a SWAP1
0x35b POP
0x35c SWAP1
0x35d DUP2
0x35e ADD
0x35f SWAP1
0x360 PUSH1 0x1f
0x362 AND
0x363 DUP1
0x364 ISZERO
0x365 PUSH2 0x382
0x368 JUMPI
---
0x355: JUMPDEST 
0x35e: V296 = ADD S4 S6
0x360: V297 = 0x1f
0x362: V298 = AND 0x1f S4
0x364: V299 = ISZERO V298
0x365: V300 = 0x382
0x368: JUMPI 0x382 V299
---
Entry stack: [V12, 0x318, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V296, V298]
Exit stack: [V12, 0x318, S9, S8, S7, V296, V298]

================================

Block 0x369
[0x369:0x381]
---
Predecessors: [0x355]
Successors: [0x382]
---
0x369 DUP1
0x36a DUP3
0x36b SUB
0x36c DUP1
0x36d MLOAD
0x36e PUSH1 0x1
0x370 DUP4
0x371 PUSH1 0x20
0x373 SUB
0x374 PUSH2 0x100
0x377 EXP
0x378 SUB
0x379 NOT
0x37a AND
0x37b DUP2
0x37c MSTORE
0x37d PUSH1 0x20
0x37f ADD
0x380 SWAP2
0x381 POP
---
0x36b: V301 = SUB V296 V298
0x36d: V302 = M[V301]
0x36e: V303 = 0x1
0x371: V304 = 0x20
0x373: V305 = SUB 0x20 V298
0x374: V306 = 0x100
0x377: V307 = EXP 0x100 V305
0x378: V308 = SUB V307 0x1
0x379: V309 = NOT V308
0x37a: V310 = AND V309 V302
0x37c: M[V301] = V310
0x37d: V311 = 0x20
0x37f: V312 = ADD 0x20 V301
---
Entry stack: [V12, 0x318, S4, S3, S2, V296, V298]
Stack pops: 2
Stack additions: [V312, S0]
Exit stack: [V12, 0x318, S4, S3, S2, V312, V298]

================================

Block 0x382
[0x382:0x38f]
---
Predecessors: [0x355, 0x369, 0x5a9]
Successors: []
---
0x382 JUMPDEST
0x383 POP
0x384 SWAP3
0x385 POP
0x386 POP
0x387 POP
0x388 PUSH1 0x40
0x38a MLOAD
0x38b DUP1
0x38c SWAP2
0x38d SUB
0x38e SWAP1
0x38f RETURN
---
0x382: JUMPDEST 
0x388: V313 = 0x40
0x38a: V314 = M[0x40]
0x38d: V315 = SUB S1 V314
0x38f: RETURN V314 V315
---
Entry stack: [V12, 0x318, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x318]

================================

Block 0x390
[0x390:0x396]
---
Predecessors: [0x25]
Successors: [0x397, 0x39b]
---
0x390 JUMPDEST
0x391 CALLVALUE
0x392 ISZERO
0x393 PUSH2 0x39b
0x396 JUMPI
---
0x390: JUMPDEST 
0x391: V316 = CALLVALUE
0x392: V317 = ISZERO V316
0x393: V318 = 0x39b
0x396: JUMPI 0x39b V317
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x397
[0x397:0x39a]
---
Predecessors: [0x390]
Successors: []
---
0x397 PUSH1 0x0
0x399 DUP1
0x39a REVERT
---
0x397: V319 = 0x0
0x39a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39b
[0x39b:0x3a2]
---
Predecessors: [0x390]
Successors: [0x7dc]
---
0x39b JUMPDEST
0x39c PUSH2 0x3a3
0x39f PUSH2 0x7dc
0x3a2 JUMP
---
0x39b: JUMPDEST 
0x39c: V320 = 0x3a3
0x39f: V321 = 0x7dc
0x3a2: JUMP 0x7dc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3a3]
Exit stack: [V12, 0x3a3]

================================

Block 0x3a3
[0x3a3:0x3b4]
---
Predecessors: [0x7dc, 0x7e2, 0x7e8, 0x7ee, 0x803, 0x815, 0x827, 0x83c, 0x84e, 0x998]
Successors: []
---
0x3a3 JUMPDEST
0x3a4 PUSH1 0x40
0x3a6 MLOAD
0x3a7 SWAP1
0x3a8 DUP2
0x3a9 MSTORE
0x3aa PUSH1 0x20
0x3ac ADD
0x3ad PUSH1 0x40
0x3af MLOAD
0x3b0 DUP1
0x3b1 SWAP2
0x3b2 SUB
0x3b3 SWAP1
0x3b4 RETURN
---
0x3a3: JUMPDEST 
0x3a4: V322 = 0x40
0x3a6: V323 = M[0x40]
0x3a9: M[V323] = S0
0x3aa: V324 = 0x20
0x3ac: V325 = ADD 0x20 V323
0x3ad: V326 = 0x40
0x3af: V327 = M[0x40]
0x3b2: V328 = SUB V325 V327
0x3b4: RETURN V327 V328
---
Entry stack: [V12, 0x3a3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x3a3]

================================

Block 0x3b5
[0x3b5:0x3bb]
---
Predecessors: [0x30]
Successors: [0x3bc, 0x3c0]
---
0x3b5 JUMPDEST
0x3b6 CALLVALUE
0x3b7 ISZERO
0x3b8 PUSH2 0x3c0
0x3bb JUMPI
---
0x3b5: JUMPDEST 
0x3b6: V329 = CALLVALUE
0x3b7: V330 = ISZERO V329
0x3b8: V331 = 0x3c0
0x3bb: JUMPI 0x3c0 V330
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3bc
[0x3bc:0x3bf]
---
Predecessors: [0x3b5]
Successors: []
---
0x3bc PUSH1 0x0
0x3be DUP1
0x3bf REVERT
---
0x3bc: V332 = 0x0
0x3bf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c0
[0x3c0:0x3c7]
---
Predecessors: [0x3b5]
Successors: [0x7e2]
---
0x3c0 JUMPDEST
0x3c1 PUSH2 0x3a3
0x3c4 PUSH2 0x7e2
0x3c7 JUMP
---
0x3c0: JUMPDEST 
0x3c1: V333 = 0x3a3
0x3c4: V334 = 0x7e2
0x3c7: JUMP 0x7e2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3a3]
Exit stack: [V12, 0x3a3]

================================

Block 0x3c8
[0x3c8:0x3d9]
---
Predecessors: []
Successors: []
---
0x3c8 JUMPDEST
0x3c9 PUSH1 0x40
0x3cb MLOAD
0x3cc SWAP1
0x3cd DUP2
0x3ce MSTORE
0x3cf PUSH1 0x20
0x3d1 ADD
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 DUP1
0x3d6 SWAP2
0x3d7 SUB
0x3d8 SWAP1
0x3d9 RETURN
---
0x3c8: JUMPDEST 
0x3c9: V335 = 0x40
0x3cb: V336 = M[0x40]
0x3ce: M[V336] = S0
0x3cf: V337 = 0x20
0x3d1: V338 = ADD 0x20 V336
0x3d2: V339 = 0x40
0x3d4: V340 = M[0x40]
0x3d7: V341 = SUB V338 V340
0x3d9: RETURN V340 V341
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3da
[0x3da:0x3e0]
---
Predecessors: [0x3b]
Successors: [0x3e1, 0x3e5]
---
0x3da JUMPDEST
0x3db CALLVALUE
0x3dc ISZERO
0x3dd PUSH2 0x3e5
0x3e0 JUMPI
---
0x3da: JUMPDEST 
0x3db: V342 = CALLVALUE
0x3dc: V343 = ISZERO V342
0x3dd: V344 = 0x3e5
0x3e0: JUMPI 0x3e5 V343
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e1
[0x3e1:0x3e4]
---
Predecessors: [0x3da]
Successors: []
---
0x3e1 PUSH1 0x0
0x3e3 DUP1
0x3e4 REVERT
---
0x3e1: V345 = 0x0
0x3e4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e5
[0x3e5:0x3ec]
---
Predecessors: [0x3da]
Successors: [0x7e8]
---
0x3e5 JUMPDEST
0x3e6 PUSH2 0x3a3
0x3e9 PUSH2 0x7e8
0x3ec JUMP
---
0x3e5: JUMPDEST 
0x3e6: V346 = 0x3a3
0x3e9: V347 = 0x7e8
0x3ec: JUMP 0x7e8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3a3]
Exit stack: [V12, 0x3a3]

================================

Block 0x3ed
[0x3ed:0x3fe]
---
Predecessors: []
Successors: []
---
0x3ed JUMPDEST
0x3ee PUSH1 0x40
0x3f0 MLOAD
0x3f1 SWAP1
0x3f2 DUP2
0x3f3 MSTORE
0x3f4 PUSH1 0x20
0x3f6 ADD
0x3f7 PUSH1 0x40
0x3f9 MLOAD
0x3fa DUP1
0x3fb SWAP2
0x3fc SUB
0x3fd SWAP1
0x3fe RETURN
---
0x3ed: JUMPDEST 
0x3ee: V348 = 0x40
0x3f0: V349 = M[0x40]
0x3f3: M[V349] = S0
0x3f4: V350 = 0x20
0x3f6: V351 = ADD 0x20 V349
0x3f7: V352 = 0x40
0x3f9: V353 = M[0x40]
0x3fc: V354 = SUB V351 V353
0x3fe: RETURN V353 V354
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3ff
[0x3ff:0x405]
---
Predecessors: [0x46]
Successors: [0x406, 0x40a]
---
0x3ff JUMPDEST
0x400 CALLVALUE
0x401 ISZERO
0x402 PUSH2 0x40a
0x405 JUMPI
---
0x3ff: JUMPDEST 
0x400: V355 = CALLVALUE
0x401: V356 = ISZERO V355
0x402: V357 = 0x40a
0x405: JUMPI 0x40a V356
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x406
[0x406:0x409]
---
Predecessors: [0x3ff]
Successors: []
---
0x406 PUSH1 0x0
0x408 DUP1
0x409 REVERT
---
0x406: V358 = 0x0
0x409: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x40a
[0x40a:0x411]
---
Predecessors: [0x3ff]
Successors: [0x7ee]
---
0x40a JUMPDEST
0x40b PUSH2 0x3a3
0x40e PUSH2 0x7ee
0x411 JUMP
---
0x40a: JUMPDEST 
0x40b: V359 = 0x3a3
0x40e: V360 = 0x7ee
0x411: JUMP 0x7ee
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3a3]
Exit stack: [V12, 0x3a3]

================================

Block 0x412
[0x412:0x423]
---
Predecessors: []
Successors: []
---
0x412 JUMPDEST
0x413 PUSH1 0x40
0x415 MLOAD
0x416 SWAP1
0x417 DUP2
0x418 MSTORE
0x419 PUSH1 0x20
0x41b ADD
0x41c PUSH1 0x40
0x41e MLOAD
0x41f DUP1
0x420 SWAP2
0x421 SUB
0x422 SWAP1
0x423 RETURN
---
0x412: JUMPDEST 
0x413: V361 = 0x40
0x415: V362 = M[0x40]
0x418: M[V362] = S0
0x419: V363 = 0x20
0x41b: V364 = ADD 0x20 V362
0x41c: V365 = 0x40
0x41e: V366 = M[0x40]
0x421: V367 = SUB V364 V366
0x423: RETURN V366 V367
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x424
[0x424:0x42a]
---
Predecessors: [0x51]
Successors: [0x42b, 0x42f]
---
0x424 JUMPDEST
0x425 CALLVALUE
0x426 ISZERO
0x427 PUSH2 0x42f
0x42a JUMPI
---
0x424: JUMPDEST 
0x425: V368 = CALLVALUE
0x426: V369 = ISZERO V368
0x427: V370 = 0x42f
0x42a: JUMPI 0x42f V369
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x42b
[0x42b:0x42e]
---
Predecessors: [0x424]
Successors: []
---
0x42b PUSH1 0x0
0x42d DUP1
0x42e REVERT
---
0x42b: V371 = 0x0
0x42e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x42f
[0x42f:0x436]
---
Predecessors: [0x424]
Successors: [0x7f4]
---
0x42f JUMPDEST
0x430 PUSH2 0x437
0x433 PUSH2 0x7f4
0x436 JUMP
---
0x42f: JUMPDEST 
0x430: V372 = 0x437
0x433: V373 = 0x7f4
0x436: JUMP 0x7f4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x437]
Exit stack: [V12, 0x437]

================================

Block 0x437
[0x437:0x452]
---
Predecessors: [0x7f4, 0x82d, 0x97d, 0x99e]
Successors: []
---
0x437 JUMPDEST
0x438 PUSH1 0x40
0x43a MLOAD
0x43b PUSH1 0x1
0x43d PUSH1 0xa0
0x43f PUSH1 0x2
0x441 EXP
0x442 SUB
0x443 SWAP1
0x444 SWAP2
0x445 AND
0x446 DUP2
0x447 MSTORE
0x448 PUSH1 0x20
0x44a ADD
0x44b PUSH1 0x40
0x44d MLOAD
0x44e DUP1
0x44f SWAP2
0x450 SUB
0x451 SWAP1
0x452 RETURN
---
0x437: JUMPDEST 
0x438: V374 = 0x40
0x43a: V375 = M[0x40]
0x43b: V376 = 0x1
0x43d: V377 = 0xa0
0x43f: V378 = 0x2
0x441: V379 = EXP 0x2 0xa0
0x442: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x445: V381 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x447: M[V375] = V381
0x448: V382 = 0x20
0x44a: V383 = ADD 0x20 V375
0x44b: V384 = 0x40
0x44d: V385 = M[0x40]
0x450: V386 = SUB V383 V385
0x452: RETURN V385 V386
---
Entry stack: [V12, 0x437, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x437]

================================

Block 0x453
[0x453:0x459]
---
Predecessors: [0x5c]
Successors: [0x45a, 0x45e]
---
0x453 JUMPDEST
0x454 CALLVALUE
0x455 ISZERO
0x456 PUSH2 0x45e
0x459 JUMPI
---
0x453: JUMPDEST 
0x454: V387 = CALLVALUE
0x455: V388 = ISZERO V387
0x456: V389 = 0x45e
0x459: JUMPI 0x45e V388
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x45a
[0x45a:0x45d]
---
Predecessors: [0x453]
Successors: []
---
0x45a PUSH1 0x0
0x45c DUP1
0x45d REVERT
---
0x45a: V390 = 0x0
0x45d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x45e
[0x45e:0x468]
---
Predecessors: [0x453]
Successors: [0x803]
---
0x45e JUMPDEST
0x45f PUSH2 0x3a3
0x462 PUSH1 0x4
0x464 CALLDATALOAD
0x465 PUSH2 0x803
0x468 JUMP
---
0x45e: JUMPDEST 
0x45f: V391 = 0x3a3
0x462: V392 = 0x4
0x464: V393 = CALLDATALOAD 0x4
0x465: V394 = 0x803
0x468: JUMP 0x803
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3a3, V393]
Exit stack: [V12, 0x3a3, V393]

================================

Block 0x469
[0x469:0x47a]
---
Predecessors: []
Successors: []
---
0x469 JUMPDEST
0x46a PUSH1 0x40
0x46c MLOAD
0x46d SWAP1
0x46e DUP2
0x46f MSTORE
0x470 PUSH1 0x20
0x472 ADD
0x473 PUSH1 0x40
0x475 MLOAD
0x476 DUP1
0x477 SWAP2
0x478 SUB
0x479 SWAP1
0x47a RETURN
---
0x469: JUMPDEST 
0x46a: V395 = 0x40
0x46c: V396 = M[0x40]
0x46f: M[V396] = S0
0x470: V397 = 0x20
0x472: V398 = ADD 0x20 V396
0x473: V399 = 0x40
0x475: V400 = M[0x40]
0x478: V401 = SUB V398 V400
0x47a: RETURN V400 V401
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x47b
[0x47b:0x481]
---
Predecessors: [0x67]
Successors: [0x482, 0x486]
---
0x47b JUMPDEST
0x47c CALLVALUE
0x47d ISZERO
0x47e PUSH2 0x486
0x481 JUMPI
---
0x47b: JUMPDEST 
0x47c: V402 = CALLVALUE
0x47d: V403 = ISZERO V402
0x47e: V404 = 0x486
0x481: JUMPI 0x486 V403
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x482
[0x482:0x485]
---
Predecessors: [0x47b]
Successors: []
---
0x482 PUSH1 0x0
0x484 DUP1
0x485 REVERT
---
0x482: V405 = 0x0
0x485: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x486
[0x486:0x499]
---
Predecessors: [0x47b]
Successors: [0x815]
---
0x486 JUMPDEST
0x487 PUSH2 0x3a3
0x48a PUSH1 0x1
0x48c PUSH1 0xa0
0x48e PUSH1 0x2
0x490 EXP
0x491 SUB
0x492 PUSH1 0x4
0x494 CALLDATALOAD
0x495 AND
0x496 PUSH2 0x815
0x499 JUMP
---
0x486: JUMPDEST 
0x487: V406 = 0x3a3
0x48a: V407 = 0x1
0x48c: V408 = 0xa0
0x48e: V409 = 0x2
0x490: V410 = EXP 0x2 0xa0
0x491: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x492: V412 = 0x4
0x494: V413 = CALLDATALOAD 0x4
0x495: V414 = AND V413 0xffffffffffffffffffffffffffffffffffffffff
0x496: V415 = 0x815
0x499: JUMP 0x815
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3a3, V414]
Exit stack: [V12, 0x3a3, V414]

================================

Block 0x49a
[0x49a:0x4ab]
---
Predecessors: []
Successors: []
---
0x49a JUMPDEST
0x49b PUSH1 0x40
0x49d MLOAD
0x49e SWAP1
0x49f DUP2
0x4a0 MSTORE
0x4a1 PUSH1 0x20
0x4a3 ADD
0x4a4 PUSH1 0x40
0x4a6 MLOAD
0x4a7 DUP1
0x4a8 SWAP2
0x4a9 SUB
0x4aa SWAP1
0x4ab RETURN
---
0x49a: JUMPDEST 
0x49b: V416 = 0x40
0x49d: V417 = M[0x40]
0x4a0: M[V417] = S0
0x4a1: V418 = 0x20
0x4a3: V419 = ADD 0x20 V417
0x4a4: V420 = 0x40
0x4a6: V421 = M[0x40]
0x4a9: V422 = SUB V419 V421
0x4ab: RETURN V421 V422
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4ac
[0x4ac:0x4b2]
---
Predecessors: [0x72]
Successors: [0x4b3, 0x4b7]
---
0x4ac JUMPDEST
0x4ad CALLVALUE
0x4ae ISZERO
0x4af PUSH2 0x4b7
0x4b2 JUMPI
---
0x4ac: JUMPDEST 
0x4ad: V423 = CALLVALUE
0x4ae: V424 = ISZERO V423
0x4af: V425 = 0x4b7
0x4b2: JUMPI 0x4b7 V424
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b3
[0x4b3:0x4b6]
---
Predecessors: [0x4ac]
Successors: []
---
0x4b3 PUSH1 0x0
0x4b5 DUP1
0x4b6 REVERT
---
0x4b3: V426 = 0x0
0x4b6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b7
[0x4b7:0x4be]
---
Predecessors: [0x4ac]
Successors: [0x827]
---
0x4b7 JUMPDEST
0x4b8 PUSH2 0x3a3
0x4bb PUSH2 0x827
0x4be JUMP
---
0x4b7: JUMPDEST 
0x4b8: V427 = 0x3a3
0x4bb: V428 = 0x827
0x4be: JUMP 0x827
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3a3]
Exit stack: [V12, 0x3a3]

================================

Block 0x4bf
[0x4bf:0x4d0]
---
Predecessors: []
Successors: []
---
0x4bf JUMPDEST
0x4c0 PUSH1 0x40
0x4c2 MLOAD
0x4c3 SWAP1
0x4c4 DUP2
0x4c5 MSTORE
0x4c6 PUSH1 0x20
0x4c8 ADD
0x4c9 PUSH1 0x40
0x4cb MLOAD
0x4cc DUP1
0x4cd SWAP2
0x4ce SUB
0x4cf SWAP1
0x4d0 RETURN
---
0x4bf: JUMPDEST 
0x4c0: V429 = 0x40
0x4c2: V430 = M[0x40]
0x4c5: M[V430] = S0
0x4c6: V431 = 0x20
0x4c8: V432 = ADD 0x20 V430
0x4c9: V433 = 0x40
0x4cb: V434 = M[0x40]
0x4ce: V435 = SUB V432 V434
0x4d0: RETURN V434 V435
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4d1
[0x4d1:0x4d7]
---
Predecessors: [0x7d]
Successors: [0x4d8, 0x4dc]
---
0x4d1 JUMPDEST
0x4d2 CALLVALUE
0x4d3 ISZERO
0x4d4 PUSH2 0x4dc
0x4d7 JUMPI
---
0x4d1: JUMPDEST 
0x4d2: V436 = CALLVALUE
0x4d3: V437 = ISZERO V436
0x4d4: V438 = 0x4dc
0x4d7: JUMPI 0x4dc V437
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d8
[0x4d8:0x4db]
---
Predecessors: [0x4d1]
Successors: []
---
0x4d8 PUSH1 0x0
0x4da DUP1
0x4db REVERT
---
0x4d8: V439 = 0x0
0x4db: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4dc
[0x4dc:0x4e3]
---
Predecessors: [0x4d1]
Successors: [0x82d]
---
0x4dc JUMPDEST
0x4dd PUSH2 0x437
0x4e0 PUSH2 0x82d
0x4e3 JUMP
---
0x4dc: JUMPDEST 
0x4dd: V440 = 0x437
0x4e0: V441 = 0x82d
0x4e3: JUMP 0x82d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x437]
Exit stack: [V12, 0x437]

================================

Block 0x4e4
[0x4e4:0x4ff]
---
Predecessors: []
Successors: []
---
0x4e4 JUMPDEST
0x4e5 PUSH1 0x40
0x4e7 MLOAD
0x4e8 PUSH1 0x1
0x4ea PUSH1 0xa0
0x4ec PUSH1 0x2
0x4ee EXP
0x4ef SUB
0x4f0 SWAP1
0x4f1 SWAP2
0x4f2 AND
0x4f3 DUP2
0x4f4 MSTORE
0x4f5 PUSH1 0x20
0x4f7 ADD
0x4f8 PUSH1 0x40
0x4fa MLOAD
0x4fb DUP1
0x4fc SWAP2
0x4fd SUB
0x4fe SWAP1
0x4ff RETURN
---
0x4e4: JUMPDEST 
0x4e5: V442 = 0x40
0x4e7: V443 = M[0x40]
0x4e8: V444 = 0x1
0x4ea: V445 = 0xa0
0x4ec: V446 = 0x2
0x4ee: V447 = EXP 0x2 0xa0
0x4ef: V448 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f2: V449 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x4f4: M[V443] = V449
0x4f5: V450 = 0x20
0x4f7: V451 = ADD 0x20 V443
0x4f8: V452 = 0x40
0x4fa: V453 = M[0x40]
0x4fd: V454 = SUB V451 V453
0x4ff: RETURN V453 V454
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x500
[0x500:0x506]
---
Predecessors: [0x88]
Successors: [0x507, 0x50b]
---
0x500 JUMPDEST
0x501 CALLVALUE
0x502 ISZERO
0x503 PUSH2 0x50b
0x506 JUMPI
---
0x500: JUMPDEST 
0x501: V455 = CALLVALUE
0x502: V456 = ISZERO V455
0x503: V457 = 0x50b
0x506: JUMPI 0x50b V456
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x507
[0x507:0x50a]
---
Predecessors: [0x500]
Successors: []
---
0x507 PUSH1 0x0
0x509 DUP1
0x50a REVERT
---
0x507: V458 = 0x0
0x50a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x50b
[0x50b:0x515]
---
Predecessors: [0x500]
Successors: [0x83c]
---
0x50b JUMPDEST
0x50c PUSH2 0x3a3
0x50f PUSH1 0x4
0x511 CALLDATALOAD
0x512 PUSH2 0x83c
0x515 JUMP
---
0x50b: JUMPDEST 
0x50c: V459 = 0x3a3
0x50f: V460 = 0x4
0x511: V461 = CALLDATALOAD 0x4
0x512: V462 = 0x83c
0x515: JUMP 0x83c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3a3, V461]
Exit stack: [V12, 0x3a3, V461]

================================

Block 0x516
[0x516:0x527]
---
Predecessors: []
Successors: []
---
0x516 JUMPDEST
0x517 PUSH1 0x40
0x519 MLOAD
0x51a SWAP1
0x51b DUP2
0x51c MSTORE
0x51d PUSH1 0x20
0x51f ADD
0x520 PUSH1 0x40
0x522 MLOAD
0x523 DUP1
0x524 SWAP2
0x525 SUB
0x526 SWAP1
0x527 RETURN
---
0x516: JUMPDEST 
0x517: V463 = 0x40
0x519: V464 = M[0x40]
0x51c: M[V464] = S0
0x51d: V465 = 0x20
0x51f: V466 = ADD 0x20 V464
0x520: V467 = 0x40
0x522: V468 = M[0x40]
0x525: V469 = SUB V466 V468
0x527: RETURN V468 V469
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x528
[0x528:0x52e]
---
Predecessors: [0x93]
Successors: [0x52f, 0x533]
---
0x528 JUMPDEST
0x529 CALLVALUE
0x52a ISZERO
0x52b PUSH2 0x533
0x52e JUMPI
---
0x528: JUMPDEST 
0x529: V470 = CALLVALUE
0x52a: V471 = ISZERO V470
0x52b: V472 = 0x533
0x52e: JUMPI 0x533 V471
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x52f
[0x52f:0x532]
---
Predecessors: [0x528]
Successors: []
---
0x52f PUSH1 0x0
0x531 DUP1
0x532 REVERT
---
0x52f: V473 = 0x0
0x532: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x533
[0x533:0x546]
---
Predecessors: [0x528]
Successors: [0x84e]
---
0x533 JUMPDEST
0x534 PUSH2 0x3a3
0x537 PUSH1 0x1
0x539 PUSH1 0xa0
0x53b PUSH1 0x2
0x53d EXP
0x53e SUB
0x53f PUSH1 0x4
0x541 CALLDATALOAD
0x542 AND
0x543 PUSH2 0x84e
0x546 JUMP
---
0x533: JUMPDEST 
0x534: V474 = 0x3a3
0x537: V475 = 0x1
0x539: V476 = 0xa0
0x53b: V477 = 0x2
0x53d: V478 = EXP 0x2 0xa0
0x53e: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53f: V480 = 0x4
0x541: V481 = CALLDATALOAD 0x4
0x542: V482 = AND V481 0xffffffffffffffffffffffffffffffffffffffff
0x543: V483 = 0x84e
0x546: JUMP 0x84e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3a3, V482]
Exit stack: [V12, 0x3a3, V482]

================================

Block 0x547
[0x547:0x558]
---
Predecessors: []
Successors: []
---
0x547 JUMPDEST
0x548 PUSH1 0x40
0x54a MLOAD
0x54b SWAP1
0x54c DUP2
0x54d MSTORE
0x54e PUSH1 0x20
0x550 ADD
0x551 PUSH1 0x40
0x553 MLOAD
0x554 DUP1
0x555 SWAP2
0x556 SUB
0x557 SWAP1
0x558 RETURN
---
0x547: JUMPDEST 
0x548: V484 = 0x40
0x54a: V485 = M[0x40]
0x54d: M[V485] = S0
0x54e: V486 = 0x20
0x550: V487 = ADD 0x20 V485
0x551: V488 = 0x40
0x553: V489 = M[0x40]
0x556: V490 = SUB V487 V489
0x558: RETURN V489 V490
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x559
[0x559:0x55f]
---
Predecessors: [0x9e]
Successors: [0x560, 0x564]
---
0x559 JUMPDEST
0x55a CALLVALUE
0x55b ISZERO
0x55c PUSH2 0x564
0x55f JUMPI
---
0x559: JUMPDEST 
0x55a: V491 = CALLVALUE
0x55b: V492 = ISZERO V491
0x55c: V493 = 0x564
0x55f: JUMPI 0x564 V492
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x560
[0x560:0x563]
---
Predecessors: [0x559]
Successors: []
---
0x560 PUSH1 0x0
0x562 DUP1
0x563 REVERT
---
0x560: V494 = 0x0
0x563: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x564
[0x564:0x56b]
---
Predecessors: [0x559]
Successors: [0x860]
---
0x564 JUMPDEST
0x565 PUSH2 0x318
0x568 PUSH2 0x860
0x56b JUMP
---
0x564: JUMPDEST 
0x565: V495 = 0x318
0x568: V496 = 0x860
0x56b: JUMP 0x860
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x318]
Exit stack: [V12, 0x318]

================================

Block 0x56c
[0x56c:0x58f]
---
Predecessors: []
Successors: [0x590]
---
0x56c JUMPDEST
0x56d PUSH1 0x40
0x56f MLOAD
0x570 PUSH1 0x20
0x572 DUP1
0x573 DUP3
0x574 MSTORE
0x575 DUP2
0x576 SWAP1
0x577 DUP2
0x578 ADD
0x579 DUP4
0x57a DUP2
0x57b DUP2
0x57c MLOAD
0x57d DUP2
0x57e MSTORE
0x57f PUSH1 0x20
0x581 ADD
0x582 SWAP2
0x583 POP
0x584 DUP1
0x585 MLOAD
0x586 SWAP1
0x587 PUSH1 0x20
0x589 ADD
0x58a SWAP1
0x58b DUP1
0x58c DUP4
0x58d DUP4
0x58e PUSH1 0x0
---
0x56c: JUMPDEST 
0x56d: V497 = 0x40
0x56f: V498 = M[0x40]
0x570: V499 = 0x20
0x574: M[V498] = 0x20
0x578: V500 = ADD V498 0x20
0x57c: V501 = M[S0]
0x57e: M[V500] = V501
0x57f: V502 = 0x20
0x581: V503 = ADD 0x20 V500
0x585: V504 = M[S0]
0x587: V505 = 0x20
0x589: V506 = ADD 0x20 S0
0x58e: V507 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V498, V498, V503, V506, V504, V504, V503, V506, 0x0]
Exit stack: [S0, V498, V498, V503, V506, V504, V504, V503, V506, 0x0]

================================

Block 0x590
[0x590:0x598]
---
Predecessors: [0x56c]
Successors: [0x355, 0x599]
---
0x590 JUMPDEST
0x591 DUP4
0x592 DUP2
0x593 LT
0x594 ISZERO
0x595 PUSH2 0x355
0x598 JUMPI
---
0x590: JUMPDEST 
0x593: V508 = LT 0x0 V504
0x594: V509 = ISZERO V508
0x595: V510 = 0x355
0x598: JUMPI 0x355 V509
---
Entry stack: [S9, V498, V498, V503, V506, V504, V504, V503, V506, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V498, V498, V503, V506, V504, V504, V503, V506, 0x0]

================================

Block 0x599
[0x599:0x5a0]
---
Predecessors: [0x590]
Successors: [0x5a1]
---
0x599 DUP1
0x59a DUP3
0x59b ADD
0x59c MLOAD
0x59d DUP2
0x59e DUP5
0x59f ADD
0x5a0 MSTORE
---
0x59b: V511 = ADD V506 0x0
0x59c: V512 = M[V511]
0x59f: V513 = ADD V503 0x0
0x5a0: M[V513] = V512
---
Entry stack: [S9, V498, V498, V503, V506, V504, V504, V503, V506, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V498, V498, V503, V506, V504, V504, V503, V506, 0x0]

================================

Block 0x5a1
[0x5a1:0x5a8]
---
Predecessors: [0x599]
Successors: [0x33c]
---
0x5a1 JUMPDEST
0x5a2 PUSH1 0x20
0x5a4 ADD
0x5a5 PUSH2 0x33c
0x5a8 JUMP
---
0x5a1: JUMPDEST 
0x5a2: V514 = 0x20
0x5a4: V515 = ADD 0x20 0x0
0x5a5: V516 = 0x33c
0x5a8: JUMP 0x33c
---
Entry stack: [S9, V498, V498, V503, V506, V504, V504, V503, V506, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V498, V498, V503, V506, V504, V504, V503, V506, 0x20]

================================

Block 0x5a9
[0x5a9:0x5bc]
---
Predecessors: []
Successors: [0x382, 0x5bd]
---
0x5a9 JUMPDEST
0x5aa POP
0x5ab POP
0x5ac POP
0x5ad POP
0x5ae SWAP1
0x5af POP
0x5b0 SWAP1
0x5b1 DUP2
0x5b2 ADD
0x5b3 SWAP1
0x5b4 PUSH1 0x1f
0x5b6 AND
0x5b7 DUP1
0x5b8 ISZERO
0x5b9 PUSH2 0x382
0x5bc JUMPI
---
0x5a9: JUMPDEST 
0x5b2: V517 = ADD S4 S6
0x5b4: V518 = 0x1f
0x5b6: V519 = AND 0x1f S4
0x5b8: V520 = ISZERO V519
0x5b9: V521 = 0x382
0x5bc: JUMPI 0x382 V520
---
Entry stack: []
Stack pops: 7
Stack additions: [V517, V519]
Exit stack: [V517, V519]

================================

Block 0x5bd
[0x5bd:0x5d5]
---
Predecessors: [0x5a9]
Successors: [0x5d6]
---
0x5bd DUP1
0x5be DUP3
0x5bf SUB
0x5c0 DUP1
0x5c1 MLOAD
0x5c2 PUSH1 0x1
0x5c4 DUP4
0x5c5 PUSH1 0x20
0x5c7 SUB
0x5c8 PUSH2 0x100
0x5cb EXP
0x5cc SUB
0x5cd NOT
0x5ce AND
0x5cf DUP2
0x5d0 MSTORE
0x5d1 PUSH1 0x20
0x5d3 ADD
0x5d4 SWAP2
0x5d5 POP
---
0x5bf: V522 = SUB V517 V519
0x5c1: V523 = M[V522]
0x5c2: V524 = 0x1
0x5c5: V525 = 0x20
0x5c7: V526 = SUB 0x20 V519
0x5c8: V527 = 0x100
0x5cb: V528 = EXP 0x100 V526
0x5cc: V529 = SUB V528 0x1
0x5cd: V530 = NOT V529
0x5ce: V531 = AND V530 V523
0x5d0: M[V522] = V531
0x5d1: V532 = 0x20
0x5d3: V533 = ADD 0x20 V522
---
Entry stack: [V517, V519]
Stack pops: 2
Stack additions: [V533, S0]
Exit stack: [V533, V519]

================================

Block 0x5d6
[0x5d6:0x5e3]
---
Predecessors: [0x5bd]
Successors: []
---
0x5d6 JUMPDEST
0x5d7 POP
0x5d8 SWAP3
0x5d9 POP
0x5da POP
0x5db POP
0x5dc PUSH1 0x40
0x5de MLOAD
0x5df DUP1
0x5e0 SWAP2
0x5e1 SUB
0x5e2 SWAP1
0x5e3 RETURN
---
0x5d6: JUMPDEST 
0x5dc: V534 = 0x40
0x5de: V535 = M[0x40]
0x5e1: V536 = SUB V533 V535
0x5e3: RETURN V535 V536
---
Entry stack: [V533, V519]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x5e4
[0x5e4:0x5ea]
---
Predecessors: [0xa9]
Successors: [0x5eb, 0x5ef]
---
0x5e4 JUMPDEST
0x5e5 CALLVALUE
0x5e6 ISZERO
0x5e7 PUSH2 0x5ef
0x5ea JUMPI
---
0x5e4: JUMPDEST 
0x5e5: V537 = CALLVALUE
0x5e6: V538 = ISZERO V537
0x5e7: V539 = 0x5ef
0x5ea: JUMPI 0x5ef V538
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5eb
[0x5eb:0x5ee]
---
Predecessors: [0x5e4]
Successors: []
---
0x5eb PUSH1 0x0
0x5ed DUP1
0x5ee REVERT
---
0x5eb: V540 = 0x0
0x5ee: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5ef
[0x5ef:0x5f6]
---
Predecessors: [0x5e4]
Successors: [0x8fe]
---
0x5ef JUMPDEST
0x5f0 PUSH2 0x5f7
0x5f3 PUSH2 0x8fe
0x5f6 JUMP
---
0x5ef: JUMPDEST 
0x5f0: V541 = 0x5f7
0x5f3: V542 = 0x8fe
0x5f6: JUMP 0x8fe
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x5f7]
Exit stack: [V12, 0x5f7]

================================

Block 0x5f7
[0x5f7:0x5f8]
---
Predecessors: [0x966]
Successors: []
---
0x5f7 JUMPDEST
0x5f8 STOP
---
0x5f7: JUMPDEST 
0x5f8: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5f9
[0x5f9:0x5ff]
---
Predecessors: [0xb4]
Successors: [0x600, 0x604]
---
0x5f9 JUMPDEST
0x5fa CALLVALUE
0x5fb ISZERO
0x5fc PUSH2 0x604
0x5ff JUMPI
---
0x5f9: JUMPDEST 
0x5fa: V543 = CALLVALUE
0x5fb: V544 = ISZERO V543
0x5fc: V545 = 0x604
0x5ff: JUMPI 0x604 V544
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x600
[0x600:0x603]
---
Predecessors: [0x5f9]
Successors: []
---
0x600 PUSH1 0x0
0x602 DUP1
0x603 REVERT
---
0x600: V546 = 0x0
0x603: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x604
[0x604:0x617]
---
Predecessors: [0x5f9]
Successors: [0x968]
---
0x604 JUMPDEST
0x605 PUSH2 0x618
0x608 PUSH1 0x1
0x60a PUSH1 0xa0
0x60c PUSH1 0x2
0x60e EXP
0x60f SUB
0x610 PUSH1 0x4
0x612 CALLDATALOAD
0x613 AND
0x614 PUSH2 0x968
0x617 JUMP
---
0x604: JUMPDEST 
0x605: V547 = 0x618
0x608: V548 = 0x1
0x60a: V549 = 0xa0
0x60c: V550 = 0x2
0x60e: V551 = EXP 0x2 0xa0
0x60f: V552 = SUB 0x10000000000000000000000000000000000000000 0x1
0x610: V553 = 0x4
0x612: V554 = CALLDATALOAD 0x4
0x613: V555 = AND V554 0xffffffffffffffffffffffffffffffffffffffff
0x614: V556 = 0x968
0x617: JUMP 0x968
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x618, V555]
Exit stack: [V12, 0x618, V555]

================================

Block 0x618
[0x618:0x62b]
---
Predecessors: [0x968]
Successors: []
---
0x618 JUMPDEST
0x619 PUSH1 0x40
0x61b MLOAD
0x61c SWAP1
0x61d ISZERO
0x61e ISZERO
0x61f DUP2
0x620 MSTORE
0x621 PUSH1 0x20
0x623 ADD
0x624 PUSH1 0x40
0x626 MLOAD
0x627 DUP1
0x628 SWAP2
0x629 SUB
0x62a SWAP1
0x62b RETURN
---
0x618: JUMPDEST 
0x619: V557 = 0x40
0x61b: V558 = M[0x40]
0x61d: V559 = ISZERO V892
0x61e: V560 = ISZERO V559
0x620: M[V558] = V560
0x621: V561 = 0x20
0x623: V562 = ADD 0x20 V558
0x624: V563 = 0x40
0x626: V564 = M[0x40]
0x629: V565 = SUB V562 V564
0x62b: RETURN V564 V565
---
Entry stack: [V12, 0x618, V892]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x618]

================================

Block 0x62c
[0x62c:0x632]
---
Predecessors: [0xbf]
Successors: [0x633, 0x637]
---
0x62c JUMPDEST
0x62d CALLVALUE
0x62e ISZERO
0x62f PUSH2 0x637
0x632 JUMPI
---
0x62c: JUMPDEST 
0x62d: V566 = CALLVALUE
0x62e: V567 = ISZERO V566
0x62f: V568 = 0x637
0x632: JUMPI 0x637 V567
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x633
[0x633:0x636]
---
Predecessors: [0x62c]
Successors: []
---
0x633 PUSH1 0x0
0x635 DUP1
0x636 REVERT
---
0x633: V569 = 0x0
0x636: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x637
[0x637:0x641]
---
Predecessors: [0x62c]
Successors: [0x97d]
---
0x637 JUMPDEST
0x638 PUSH2 0x437
0x63b PUSH1 0x4
0x63d CALLDATALOAD
0x63e PUSH2 0x97d
0x641 JUMP
---
0x637: JUMPDEST 
0x638: V570 = 0x437
0x63b: V571 = 0x4
0x63d: V572 = CALLDATALOAD 0x4
0x63e: V573 = 0x97d
0x641: JUMP 0x97d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x437, V572]
Exit stack: [V12, 0x437, V572]

================================

Block 0x642
[0x642:0x65d]
---
Predecessors: []
Successors: []
---
0x642 JUMPDEST
0x643 PUSH1 0x40
0x645 MLOAD
0x646 PUSH1 0x1
0x648 PUSH1 0xa0
0x64a PUSH1 0x2
0x64c EXP
0x64d SUB
0x64e SWAP1
0x64f SWAP2
0x650 AND
0x651 DUP2
0x652 MSTORE
0x653 PUSH1 0x20
0x655 ADD
0x656 PUSH1 0x40
0x658 MLOAD
0x659 DUP1
0x65a SWAP2
0x65b SUB
0x65c SWAP1
0x65d RETURN
---
0x642: JUMPDEST 
0x643: V574 = 0x40
0x645: V575 = M[0x40]
0x646: V576 = 0x1
0x648: V577 = 0xa0
0x64a: V578 = 0x2
0x64c: V579 = EXP 0x2 0xa0
0x64d: V580 = SUB 0x10000000000000000000000000000000000000000 0x1
0x650: V581 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x652: M[V575] = V581
0x653: V582 = 0x20
0x655: V583 = ADD 0x20 V575
0x656: V584 = 0x40
0x658: V585 = M[0x40]
0x65b: V586 = SUB V583 V585
0x65d: RETURN V585 V586
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x65e
[0x65e:0x664]
---
Predecessors: [0xca]
Successors: [0x665, 0x669]
---
0x65e JUMPDEST
0x65f CALLVALUE
0x660 ISZERO
0x661 PUSH2 0x669
0x664 JUMPI
---
0x65e: JUMPDEST 
0x65f: V587 = CALLVALUE
0x660: V588 = ISZERO V587
0x661: V589 = 0x669
0x664: JUMPI 0x669 V588
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x665
[0x665:0x668]
---
Predecessors: [0x65e]
Successors: []
---
0x665 PUSH1 0x0
0x667 DUP1
0x668 REVERT
---
0x665: V590 = 0x0
0x668: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x669
[0x669:0x670]
---
Predecessors: [0x65e]
Successors: [0x998]
---
0x669 JUMPDEST
0x66a PUSH2 0x3a3
0x66d PUSH2 0x998
0x670 JUMP
---
0x669: JUMPDEST 
0x66a: V591 = 0x3a3
0x66d: V592 = 0x998
0x670: JUMP 0x998
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3a3]
Exit stack: [V12, 0x3a3]

================================

Block 0x671
[0x671:0x682]
---
Predecessors: []
Successors: []
---
0x671 JUMPDEST
0x672 PUSH1 0x40
0x674 MLOAD
0x675 SWAP1
0x676 DUP2
0x677 MSTORE
0x678 PUSH1 0x20
0x67a ADD
0x67b PUSH1 0x40
0x67d MLOAD
0x67e DUP1
0x67f SWAP2
0x680 SUB
0x681 SWAP1
0x682 RETURN
---
0x671: JUMPDEST 
0x672: V593 = 0x40
0x674: V594 = M[0x40]
0x677: M[V594] = S0
0x678: V595 = 0x20
0x67a: V596 = ADD 0x20 V594
0x67b: V597 = 0x40
0x67d: V598 = M[0x40]
0x680: V599 = SUB V596 V598
0x682: RETURN V598 V599
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x683
[0x683:0x689]
---
Predecessors: [0xd5]
Successors: [0x68a, 0x68e]
---
0x683 JUMPDEST
0x684 CALLVALUE
0x685 ISZERO
0x686 PUSH2 0x68e
0x689 JUMPI
---
0x683: JUMPDEST 
0x684: V600 = CALLVALUE
0x685: V601 = ISZERO V600
0x686: V602 = 0x68e
0x689: JUMPI 0x68e V601
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x68a
[0x68a:0x68d]
---
Predecessors: [0x683]
Successors: []
---
0x68a PUSH1 0x0
0x68c DUP1
0x68d REVERT
---
0x68a: V603 = 0x0
0x68d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x68e
[0x68e:0x695]
---
Predecessors: [0x683]
Successors: [0x99e]
---
0x68e JUMPDEST
0x68f PUSH2 0x437
0x692 PUSH2 0x99e
0x695 JUMP
---
0x68e: JUMPDEST 
0x68f: V604 = 0x437
0x692: V605 = 0x99e
0x695: JUMP 0x99e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x437]
Exit stack: [V12, 0x437]

================================

Block 0x696
[0x696:0x6b1]
---
Predecessors: []
Successors: []
---
0x696 JUMPDEST
0x697 PUSH1 0x40
0x699 MLOAD
0x69a PUSH1 0x1
0x69c PUSH1 0xa0
0x69e PUSH1 0x2
0x6a0 EXP
0x6a1 SUB
0x6a2 SWAP1
0x6a3 SWAP2
0x6a4 AND
0x6a5 DUP2
0x6a6 MSTORE
0x6a7 PUSH1 0x20
0x6a9 ADD
0x6aa PUSH1 0x40
0x6ac MLOAD
0x6ad DUP1
0x6ae SWAP2
0x6af SUB
0x6b0 SWAP1
0x6b1 RETURN
---
0x696: JUMPDEST 
0x697: V606 = 0x40
0x699: V607 = M[0x40]
0x69a: V608 = 0x1
0x69c: V609 = 0xa0
0x69e: V610 = 0x2
0x6a0: V611 = EXP 0x2 0xa0
0x6a1: V612 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a4: V613 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x6a6: M[V607] = V613
0x6a7: V614 = 0x20
0x6a9: V615 = ADD 0x20 V607
0x6aa: V616 = 0x40
0x6ac: V617 = M[0x40]
0x6af: V618 = SUB V615 V617
0x6b1: RETURN V617 V618
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6b2
[0x6b2:0x6d4]
---
Predecessors: [0x269]
Successors: [0x6d5, 0x73a]
---
0x6b2 JUMPDEST
0x6b3 PUSH1 0x1
0x6b5 PUSH1 0xa0
0x6b7 PUSH1 0x2
0x6b9 EXP
0x6ba SUB
0x6bb DUP2
0x6bc AND
0x6bd PUSH1 0x0
0x6bf SWAP1
0x6c0 DUP2
0x6c1 MSTORE
0x6c2 PUSH1 0xa
0x6c4 PUSH1 0x20
0x6c6 MSTORE
0x6c7 PUSH1 0x40
0x6c9 SWAP1
0x6ca SHA3
0x6cb SLOAD
0x6cc PUSH1 0xff
0x6ce AND
0x6cf ISZERO
0x6d0 ISZERO
0x6d1 PUSH2 0x73a
0x6d4 JUMPI
---
0x6b2: JUMPDEST 
0x6b3: V619 = 0x1
0x6b5: V620 = 0xa0
0x6b7: V621 = 0x2
0x6b9: V622 = EXP 0x2 0xa0
0x6ba: V623 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6bc: V624 = AND V219 0xffffffffffffffffffffffffffffffffffffffff
0x6bd: V625 = 0x0
0x6c1: M[0x0] = V624
0x6c2: V626 = 0xa
0x6c4: V627 = 0x20
0x6c6: M[0x20] = 0xa
0x6c7: V628 = 0x40
0x6ca: V629 = SHA3 0x0 0x40
0x6cb: V630 = S[V629]
0x6cc: V631 = 0xff
0x6ce: V632 = AND 0xff V630
0x6cf: V633 = ISZERO V632
0x6d0: V634 = ISZERO V633
0x6d1: V635 = 0x73a
0x6d4: JUMPI 0x73a V634
---
Entry stack: [V12, V70, S5, S4, S3, S2, 0x272, V219]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V70, S5, S4, S3, S2, 0x272, V219]

================================

Block 0x6d5
[0x6d5:0x739]
---
Predecessors: [0x6b2]
Successors: [0x73a]
---
0x6d5 PUSH1 0xd
0x6d7 DUP1
0x6d8 SLOAD
0x6d9 PUSH1 0x1
0x6db PUSH1 0xa0
0x6dd PUSH1 0x2
0x6df EXP
0x6e0 SUB
0x6e1 DUP4
0x6e2 AND
0x6e3 PUSH1 0x0
0x6e5 DUP2
0x6e6 DUP2
0x6e7 MSTORE
0x6e8 PUSH1 0xc
0x6ea PUSH1 0x20
0x6ec SWAP1
0x6ed DUP2
0x6ee MSTORE
0x6ef PUSH1 0x40
0x6f1 DUP1
0x6f2 DUP4
0x6f3 SHA3
0x6f4 DUP6
0x6f5 SWAP1
0x6f6 SSTORE
0x6f7 PUSH1 0x1
0x6f9 DUP1
0x6fa DUP7
0x6fb ADD
0x6fc SWAP1
0x6fd SWAP7
0x6fe SSTORE
0x6ff SWAP4
0x700 DUP3
0x701 MSTORE
0x702 PUSH1 0xb
0x704 DUP2
0x705 MSTORE
0x706 DUP4
0x707 DUP3
0x708 SHA3
0x709 DUP1
0x70a SLOAD
0x70b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x720 NOT
0x721 AND
0x722 DUP5
0x723 OR
0x724 SWAP1
0x725 SSTORE
0x726 SWAP2
0x727 DUP2
0x728 MSTORE
0x729 PUSH1 0xa
0x72b SWAP1
0x72c SWAP2
0x72d MSTORE
0x72e SHA3
0x72f DUP1
0x730 SLOAD
0x731 PUSH1 0xff
0x733 NOT
0x734 AND
0x735 SWAP1
0x736 SWAP2
0x737 OR
0x738 SWAP1
0x739 SSTORE
---
0x6d5: V636 = 0xd
0x6d8: V637 = S[0xd]
0x6d9: V638 = 0x1
0x6db: V639 = 0xa0
0x6dd: V640 = 0x2
0x6df: V641 = EXP 0x2 0xa0
0x6e0: V642 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e2: V643 = AND V219 0xffffffffffffffffffffffffffffffffffffffff
0x6e3: V644 = 0x0
0x6e7: M[0x0] = V643
0x6e8: V645 = 0xc
0x6ea: V646 = 0x20
0x6ee: M[0x20] = 0xc
0x6ef: V647 = 0x40
0x6f3: V648 = SHA3 0x0 0x40
0x6f6: S[V648] = V637
0x6f7: V649 = 0x1
0x6fb: V650 = ADD V637 0x1
0x6fe: S[0xd] = V650
0x701: M[0x0] = V637
0x702: V651 = 0xb
0x705: M[0x20] = 0xb
0x708: V652 = SHA3 0x0 0x40
0x70a: V653 = S[V652]
0x70b: V654 = 0xffffffffffffffffffffffffffffffffffffffff
0x720: V655 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x721: V656 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V653
0x723: V657 = OR V643 V656
0x725: S[V652] = V657
0x728: M[0x0] = V643
0x729: V658 = 0xa
0x72d: M[0x20] = 0xa
0x72e: V659 = SHA3 0x0 0x40
0x730: V660 = S[V659]
0x731: V661 = 0xff
0x733: V662 = NOT 0xff
0x734: V663 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V660
0x737: V664 = OR 0x1 V663
0x739: S[V659] = V664
---
Entry stack: [V12, V70, S5, S4, S3, S2, 0x272, V219]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V70, S5, S4, S3, S2, 0x272, V219]

================================

Block 0x73a
[0x73a:0x73a]
---
Predecessors: [0x6b2, 0x6d5, 0xb8b]
Successors: [0x73b]
---
0x73a JUMPDEST
---
0x73a: JUMPDEST 
---
Entry stack: [V12, V70, S5, S4, S3, S2, {0x272, 0x93a}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V70, S5, S4, S3, S2, {0x272, 0x93a}, S0]

================================

Block 0x73b
[0x73b:0x73d]
---
Predecessors: [0x73a]
Successors: [0x272, 0x93a]
---
0x73b JUMPDEST
0x73c POP
0x73d JUMP
---
0x73b: JUMPDEST 
0x73d: JUMP {0x272, 0x93a}
---
Entry stack: [V12, V70, S5, S4, S3, S2, {0x272, 0x93a}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, V70, S5, S4, S3, S2]

================================

Block 0x73e
[0x73e:0x78d]
---
Predecessors: [0x310]
Successors: [0x78e, 0x7d4]
---
0x73e JUMPDEST
0x73f PUSH1 0x6
0x741 DUP1
0x742 SLOAD
0x743 PUSH1 0x1
0x745 DUP2
0x746 PUSH1 0x1
0x748 AND
0x749 ISZERO
0x74a PUSH2 0x100
0x74d MUL
0x74e SUB
0x74f AND
0x750 PUSH1 0x2
0x752 SWAP1
0x753 DIV
0x754 DUP1
0x755 PUSH1 0x1f
0x757 ADD
0x758 PUSH1 0x20
0x75a DUP1
0x75b SWAP2
0x75c DIV
0x75d MUL
0x75e PUSH1 0x20
0x760 ADD
0x761 PUSH1 0x40
0x763 MLOAD
0x764 SWAP1
0x765 DUP2
0x766 ADD
0x767 PUSH1 0x40
0x769 MSTORE
0x76a DUP1
0x76b SWAP3
0x76c SWAP2
0x76d SWAP1
0x76e DUP2
0x76f DUP2
0x770 MSTORE
0x771 PUSH1 0x20
0x773 ADD
0x774 DUP3
0x775 DUP1
0x776 SLOAD
0x777 PUSH1 0x1
0x779 DUP2
0x77a PUSH1 0x1
0x77c AND
0x77d ISZERO
0x77e PUSH2 0x100
0x781 MUL
0x782 SUB
0x783 AND
0x784 PUSH1 0x2
0x786 SWAP1
0x787 DIV
0x788 DUP1
0x789 ISZERO
0x78a PUSH2 0x7d4
0x78d JUMPI
---
0x73e: JUMPDEST 
0x73f: V665 = 0x6
0x742: V666 = S[0x6]
0x743: V667 = 0x1
0x746: V668 = 0x1
0x748: V669 = AND 0x1 V666
0x749: V670 = ISZERO V669
0x74a: V671 = 0x100
0x74d: V672 = MUL 0x100 V670
0x74e: V673 = SUB V672 0x1
0x74f: V674 = AND V673 V666
0x750: V675 = 0x2
0x753: V676 = DIV V674 0x2
0x755: V677 = 0x1f
0x757: V678 = ADD 0x1f V676
0x758: V679 = 0x20
0x75c: V680 = DIV V678 0x20
0x75d: V681 = MUL V680 0x20
0x75e: V682 = 0x20
0x760: V683 = ADD 0x20 V681
0x761: V684 = 0x40
0x763: V685 = M[0x40]
0x766: V686 = ADD V685 V683
0x767: V687 = 0x40
0x769: M[0x40] = V686
0x770: M[V685] = V676
0x771: V688 = 0x20
0x773: V689 = ADD 0x20 V685
0x776: V690 = S[0x6]
0x777: V691 = 0x1
0x77a: V692 = 0x1
0x77c: V693 = AND 0x1 V690
0x77d: V694 = ISZERO V693
0x77e: V695 = 0x100
0x781: V696 = MUL 0x100 V694
0x782: V697 = SUB V696 0x1
0x783: V698 = AND V697 V690
0x784: V699 = 0x2
0x787: V700 = DIV V698 0x2
0x789: V701 = ISZERO V700
0x78a: V702 = 0x7d4
0x78d: JUMPI 0x7d4 V701
---
Entry stack: [V12, 0x318]
Stack pops: 0
Stack additions: [V685, 0x6, V676, V689, 0x6, V700]
Exit stack: [V12, 0x318, V685, 0x6, V676, V689, 0x6, V700]

================================

Block 0x78e
[0x78e:0x795]
---
Predecessors: [0x73e]
Successors: [0x796, 0x7a9]
---
0x78e DUP1
0x78f PUSH1 0x1f
0x791 LT
0x792 PUSH2 0x7a9
0x795 JUMPI
---
0x78f: V703 = 0x1f
0x791: V704 = LT 0x1f V700
0x792: V705 = 0x7a9
0x795: JUMPI 0x7a9 V704
---
Entry stack: [V12, 0x318, V685, 0x6, V676, V689, 0x6, V700]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x318, V685, 0x6, V676, V689, 0x6, V700]

================================

Block 0x796
[0x796:0x7a8]
---
Predecessors: [0x78e]
Successors: [0x7d4]
---
0x796 PUSH2 0x100
0x799 DUP1
0x79a DUP4
0x79b SLOAD
0x79c DIV
0x79d MUL
0x79e DUP4
0x79f MSTORE
0x7a0 SWAP2
0x7a1 PUSH1 0x20
0x7a3 ADD
0x7a4 SWAP2
0x7a5 PUSH2 0x7d4
0x7a8 JUMP
---
0x796: V706 = 0x100
0x79b: V707 = S[0x6]
0x79c: V708 = DIV V707 0x100
0x79d: V709 = MUL V708 0x100
0x79f: M[V689] = V709
0x7a1: V710 = 0x20
0x7a3: V711 = ADD 0x20 V689
0x7a5: V712 = 0x7d4
0x7a8: JUMP 0x7d4
---
Entry stack: [V12, 0x318, V685, 0x6, V676, V689, 0x6, V700]
Stack pops: 3
Stack additions: [V711, S1, S0]
Exit stack: [V12, 0x318, V685, 0x6, V676, V711, 0x6, V700]

================================

Block 0x7a9
[0x7a9:0x7b6]
---
Predecessors: [0x78e, 0x8b0]
Successors: [0x7b7]
---
0x7a9 JUMPDEST
0x7aa DUP3
0x7ab ADD
0x7ac SWAP2
0x7ad SWAP1
0x7ae PUSH1 0x0
0x7b0 MSTORE
0x7b1 PUSH1 0x20
0x7b3 PUSH1 0x0
0x7b5 SHA3
0x7b6 SWAP1
---
0x7a9: JUMPDEST 
0x7ab: V713 = ADD S2 S0
0x7ae: V714 = 0x0
0x7b0: M[0x0] = {0x6, 0x7}
0x7b1: V715 = 0x20
0x7b3: V716 = 0x0
0x7b5: V717 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x318, S5, {0x6, 0x7}, S3, S2, {0x6, 0x7}, S0]
Stack pops: 3
Stack additions: [V713, V717, S2]
Exit stack: [V12, 0x318, S5, {0x6, 0x7}, S3, V713, V717, S2]

================================

Block 0x7b7
[0x7b7:0x7ca]
---
Predecessors: [0x7a9, 0x7b7, 0x8d9]
Successors: [0x7b7, 0x7cb]
---
0x7b7 JUMPDEST
0x7b8 DUP2
0x7b9 SLOAD
0x7ba DUP2
0x7bb MSTORE
0x7bc SWAP1
0x7bd PUSH1 0x1
0x7bf ADD
0x7c0 SWAP1
0x7c1 PUSH1 0x20
0x7c3 ADD
0x7c4 DUP1
0x7c5 DUP4
0x7c6 GT
0x7c7 PUSH2 0x7b7
0x7ca JUMPI
---
0x7b7: JUMPDEST 
0x7b9: V718 = S[S1]
0x7bb: M[S0] = V718
0x7bd: V719 = 0x1
0x7bf: V720 = ADD 0x1 S1
0x7c1: V721 = 0x20
0x7c3: V722 = ADD 0x20 S0
0x7c6: V723 = GT S2 V722
0x7c7: V724 = 0x7b7
0x7ca: JUMPI 0x7b7 V723
---
Entry stack: [V12, 0x318, S5, {0x6, 0x7}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, V720, V722]
Exit stack: [V12, 0x318, S5, {0x6, 0x7}, S3, S2, V720, V722]

================================

Block 0x7cb
[0x7cb:0x7d3]
---
Predecessors: [0x7b7]
Successors: [0x7d4]
---
0x7cb DUP3
0x7cc SWAP1
0x7cd SUB
0x7ce PUSH1 0x1f
0x7d0 AND
0x7d1 DUP3
0x7d2 ADD
0x7d3 SWAP2
---
0x7cd: V725 = SUB V722 S2
0x7ce: V726 = 0x1f
0x7d0: V727 = AND 0x1f V725
0x7d2: V728 = ADD S2 V727
---
Entry stack: [V12, 0x318, S5, {0x6, 0x7}, S3, S2, V720, V722]
Stack pops: 3
Stack additions: [V728, S1, S2]
Exit stack: [V12, 0x318, S5, {0x6, 0x7}, S3, V728, V720, S2]

================================

Block 0x7d4
[0x7d4:0x7db]
---
Predecessors: [0x73e, 0x796, 0x7cb, 0x860, 0x8b8]
Successors: [0x318]
---
0x7d4 JUMPDEST
0x7d5 POP
0x7d6 POP
0x7d7 POP
0x7d8 POP
0x7d9 POP
0x7da DUP2
0x7db JUMP
---
0x7d4: JUMPDEST 
0x7db: JUMP 0x318
---
Entry stack: [V12, 0x318, S5, {0x6, 0x7}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0x318, S5]

================================

Block 0x7dc
[0x7dc:0x7e1]
---
Predecessors: [0x39b]
Successors: [0x3a3]
---
0x7dc JUMPDEST
0x7dd PUSH1 0x1
0x7df SLOAD
0x7e0 DUP2
0x7e1 JUMP
---
0x7dc: JUMPDEST 
0x7dd: V729 = 0x1
0x7df: V730 = S[0x1]
0x7e1: JUMP 0x3a3
---
Entry stack: [V12, 0x3a3]
Stack pops: 1
Stack additions: [S0, V730]
Exit stack: [V12, 0x3a3, V730]

================================

Block 0x7e2
[0x7e2:0x7e7]
---
Predecessors: [0x3c0]
Successors: [0x3a3]
---
0x7e2 JUMPDEST
0x7e3 PUSH1 0x3
0x7e5 SLOAD
0x7e6 DUP2
0x7e7 JUMP
---
0x7e2: JUMPDEST 
0x7e3: V731 = 0x3
0x7e5: V732 = S[0x3]
0x7e7: JUMP 0x3a3
---
Entry stack: [V12, 0x3a3]
Stack pops: 1
Stack additions: [S0, V732]
Exit stack: [V12, 0x3a3, V732]

================================

Block 0x7e8
[0x7e8:0x7ed]
---
Predecessors: [0x3e5]
Successors: [0x3a3]
---
0x7e8 JUMPDEST
0x7e9 PUSH1 0x10
0x7eb SLOAD
0x7ec DUP2
0x7ed JUMP
---
0x7e8: JUMPDEST 
0x7e9: V733 = 0x10
0x7eb: V734 = S[0x10]
0x7ed: JUMP 0x3a3
---
Entry stack: [V12, 0x3a3]
Stack pops: 1
Stack additions: [S0, V734]
Exit stack: [V12, 0x3a3, V734]

================================

Block 0x7ee
[0x7ee:0x7f3]
---
Predecessors: [0x40a]
Successors: [0x3a3]
---
0x7ee JUMPDEST
0x7ef PUSH1 0xd
0x7f1 SLOAD
0x7f2 DUP2
0x7f3 JUMP
---
0x7ee: JUMPDEST 
0x7ef: V735 = 0xd
0x7f1: V736 = S[0xd]
0x7f3: JUMP 0x3a3
---
Entry stack: [V12, 0x3a3]
Stack pops: 1
Stack additions: [S0, V736]
Exit stack: [V12, 0x3a3, V736]

================================

Block 0x7f4
[0x7f4:0x802]
---
Predecessors: [0x42f]
Successors: [0x437]
---
0x7f4 JUMPDEST
0x7f5 PUSH1 0x8
0x7f7 SLOAD
0x7f8 PUSH1 0x1
0x7fa PUSH1 0xa0
0x7fc PUSH1 0x2
0x7fe EXP
0x7ff SUB
0x800 AND
0x801 DUP2
0x802 JUMP
---
0x7f4: JUMPDEST 
0x7f5: V737 = 0x8
0x7f7: V738 = S[0x8]
0x7f8: V739 = 0x1
0x7fa: V740 = 0xa0
0x7fc: V741 = 0x2
0x7fe: V742 = EXP 0x2 0xa0
0x7ff: V743 = SUB 0x10000000000000000000000000000000000000000 0x1
0x800: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff V738
0x802: JUMP 0x437
---
Entry stack: [V12, 0x437]
Stack pops: 1
Stack additions: [S0, V744]
Exit stack: [V12, 0x437, V744]

================================

Block 0x803
[0x803:0x814]
---
Predecessors: [0x45e]
Successors: [0x3a3]
---
0x803 JUMPDEST
0x804 PUSH1 0xe
0x806 PUSH1 0x20
0x808 MSTORE
0x809 PUSH1 0x0
0x80b SWAP1
0x80c DUP2
0x80d MSTORE
0x80e PUSH1 0x40
0x810 SWAP1
0x811 SHA3
0x812 SLOAD
0x813 DUP2
0x814 JUMP
---
0x803: JUMPDEST 
0x804: V745 = 0xe
0x806: V746 = 0x20
0x808: M[0x20] = 0xe
0x809: V747 = 0x0
0x80d: M[0x0] = V393
0x80e: V748 = 0x40
0x811: V749 = SHA3 0x0 0x40
0x812: V750 = S[V749]
0x814: JUMP 0x3a3
---
Entry stack: [V12, 0x3a3, V393]
Stack pops: 2
Stack additions: [S1, V750]
Exit stack: [V12, 0x3a3, V750]

================================

Block 0x815
[0x815:0x826]
---
Predecessors: [0x486]
Successors: [0x3a3]
---
0x815 JUMPDEST
0x816 PUSH1 0x9
0x818 PUSH1 0x20
0x81a MSTORE
0x81b PUSH1 0x0
0x81d SWAP1
0x81e DUP2
0x81f MSTORE
0x820 PUSH1 0x40
0x822 SWAP1
0x823 SHA3
0x824 SLOAD
0x825 DUP2
0x826 JUMP
---
0x815: JUMPDEST 
0x816: V751 = 0x9
0x818: V752 = 0x20
0x81a: M[0x20] = 0x9
0x81b: V753 = 0x0
0x81f: M[0x0] = V414
0x820: V754 = 0x40
0x823: V755 = SHA3 0x0 0x40
0x824: V756 = S[V755]
0x826: JUMP 0x3a3
---
Entry stack: [V12, 0x3a3, V414]
Stack pops: 2
Stack additions: [S1, V756]
Exit stack: [V12, 0x3a3, V756]

================================

Block 0x827
[0x827:0x82c]
---
Predecessors: [0x4b7]
Successors: [0x3a3]
---
0x827 JUMPDEST
0x828 PUSH1 0x4
0x82a SLOAD
0x82b DUP2
0x82c JUMP
---
0x827: JUMPDEST 
0x828: V757 = 0x4
0x82a: V758 = S[0x4]
0x82c: JUMP 0x3a3
---
Entry stack: [V12, 0x3a3]
Stack pops: 1
Stack additions: [S0, V758]
Exit stack: [V12, 0x3a3, V758]

================================

Block 0x82d
[0x82d:0x83b]
---
Predecessors: [0x4dc]
Successors: [0x437]
---
0x82d JUMPDEST
0x82e PUSH1 0x5
0x830 SLOAD
0x831 PUSH1 0x1
0x833 PUSH1 0xa0
0x835 PUSH1 0x2
0x837 EXP
0x838 SUB
0x839 AND
0x83a DUP2
0x83b JUMP
---
0x82d: JUMPDEST 
0x82e: V759 = 0x5
0x830: V760 = S[0x5]
0x831: V761 = 0x1
0x833: V762 = 0xa0
0x835: V763 = 0x2
0x837: V764 = EXP 0x2 0xa0
0x838: V765 = SUB 0x10000000000000000000000000000000000000000 0x1
0x839: V766 = AND 0xffffffffffffffffffffffffffffffffffffffff V760
0x83b: JUMP 0x437
---
Entry stack: [V12, 0x437]
Stack pops: 1
Stack additions: [S0, V766]
Exit stack: [V12, 0x437, V766]

================================

Block 0x83c
[0x83c:0x84d]
---
Predecessors: [0x50b]
Successors: [0x3a3]
---
0x83c JUMPDEST
0x83d PUSH1 0xf
0x83f PUSH1 0x20
0x841 MSTORE
0x842 PUSH1 0x0
0x844 SWAP1
0x845 DUP2
0x846 MSTORE
0x847 PUSH1 0x40
0x849 SWAP1
0x84a SHA3
0x84b SLOAD
0x84c DUP2
0x84d JUMP
---
0x83c: JUMPDEST 
0x83d: V767 = 0xf
0x83f: V768 = 0x20
0x841: M[0x20] = 0xf
0x842: V769 = 0x0
0x846: M[0x0] = V461
0x847: V770 = 0x40
0x84a: V771 = SHA3 0x0 0x40
0x84b: V772 = S[V771]
0x84d: JUMP 0x3a3
---
Entry stack: [V12, 0x3a3, V461]
Stack pops: 2
Stack additions: [S1, V772]
Exit stack: [V12, 0x3a3, V772]

================================

Block 0x84e
[0x84e:0x85f]
---
Predecessors: [0x533]
Successors: [0x3a3]
---
0x84e JUMPDEST
0x84f PUSH1 0xc
0x851 PUSH1 0x20
0x853 MSTORE
0x854 PUSH1 0x0
0x856 SWAP1
0x857 DUP2
0x858 MSTORE
0x859 PUSH1 0x40
0x85b SWAP1
0x85c SHA3
0x85d SLOAD
0x85e DUP2
0x85f JUMP
---
0x84e: JUMPDEST 
0x84f: V773 = 0xc
0x851: V774 = 0x20
0x853: M[0x20] = 0xc
0x854: V775 = 0x0
0x858: M[0x0] = V482
0x859: V776 = 0x40
0x85c: V777 = SHA3 0x0 0x40
0x85d: V778 = S[V777]
0x85f: JUMP 0x3a3
---
Entry stack: [V12, 0x3a3, V482]
Stack pops: 2
Stack additions: [S1, V778]
Exit stack: [V12, 0x3a3, V778]

================================

Block 0x860
[0x860:0x8af]
---
Predecessors: [0x564]
Successors: [0x7d4, 0x8b0]
---
0x860 JUMPDEST
0x861 PUSH1 0x7
0x863 DUP1
0x864 SLOAD
0x865 PUSH1 0x1
0x867 DUP2
0x868 PUSH1 0x1
0x86a AND
0x86b ISZERO
0x86c PUSH2 0x100
0x86f MUL
0x870 SUB
0x871 AND
0x872 PUSH1 0x2
0x874 SWAP1
0x875 DIV
0x876 DUP1
0x877 PUSH1 0x1f
0x879 ADD
0x87a PUSH1 0x20
0x87c DUP1
0x87d SWAP2
0x87e DIV
0x87f MUL
0x880 PUSH1 0x20
0x882 ADD
0x883 PUSH1 0x40
0x885 MLOAD
0x886 SWAP1
0x887 DUP2
0x888 ADD
0x889 PUSH1 0x40
0x88b MSTORE
0x88c DUP1
0x88d SWAP3
0x88e SWAP2
0x88f SWAP1
0x890 DUP2
0x891 DUP2
0x892 MSTORE
0x893 PUSH1 0x20
0x895 ADD
0x896 DUP3
0x897 DUP1
0x898 SLOAD
0x899 PUSH1 0x1
0x89b DUP2
0x89c PUSH1 0x1
0x89e AND
0x89f ISZERO
0x8a0 PUSH2 0x100
0x8a3 MUL
0x8a4 SUB
0x8a5 AND
0x8a6 PUSH1 0x2
0x8a8 SWAP1
0x8a9 DIV
0x8aa DUP1
0x8ab ISZERO
0x8ac PUSH2 0x7d4
0x8af JUMPI
---
0x860: JUMPDEST 
0x861: V779 = 0x7
0x864: V780 = S[0x7]
0x865: V781 = 0x1
0x868: V782 = 0x1
0x86a: V783 = AND 0x1 V780
0x86b: V784 = ISZERO V783
0x86c: V785 = 0x100
0x86f: V786 = MUL 0x100 V784
0x870: V787 = SUB V786 0x1
0x871: V788 = AND V787 V780
0x872: V789 = 0x2
0x875: V790 = DIV V788 0x2
0x877: V791 = 0x1f
0x879: V792 = ADD 0x1f V790
0x87a: V793 = 0x20
0x87e: V794 = DIV V792 0x20
0x87f: V795 = MUL V794 0x20
0x880: V796 = 0x20
0x882: V797 = ADD 0x20 V795
0x883: V798 = 0x40
0x885: V799 = M[0x40]
0x888: V800 = ADD V799 V797
0x889: V801 = 0x40
0x88b: M[0x40] = V800
0x892: M[V799] = V790
0x893: V802 = 0x20
0x895: V803 = ADD 0x20 V799
0x898: V804 = S[0x7]
0x899: V805 = 0x1
0x89c: V806 = 0x1
0x89e: V807 = AND 0x1 V804
0x89f: V808 = ISZERO V807
0x8a0: V809 = 0x100
0x8a3: V810 = MUL 0x100 V808
0x8a4: V811 = SUB V810 0x1
0x8a5: V812 = AND V811 V804
0x8a6: V813 = 0x2
0x8a9: V814 = DIV V812 0x2
0x8ab: V815 = ISZERO V814
0x8ac: V816 = 0x7d4
0x8af: JUMPI 0x7d4 V815
---
Entry stack: [V12, 0x318]
Stack pops: 0
Stack additions: [V799, 0x7, V790, V803, 0x7, V814]
Exit stack: [V12, 0x318, V799, 0x7, V790, V803, 0x7, V814]

================================

Block 0x8b0
[0x8b0:0x8b7]
---
Predecessors: [0x860]
Successors: [0x7a9, 0x8b8]
---
0x8b0 DUP1
0x8b1 PUSH1 0x1f
0x8b3 LT
0x8b4 PUSH2 0x7a9
0x8b7 JUMPI
---
0x8b1: V817 = 0x1f
0x8b3: V818 = LT 0x1f V814
0x8b4: V819 = 0x7a9
0x8b7: JUMPI 0x7a9 V818
---
Entry stack: [V12, 0x318, V799, 0x7, V790, V803, 0x7, V814]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x318, V799, 0x7, V790, V803, 0x7, V814]

================================

Block 0x8b8
[0x8b8:0x8ca]
---
Predecessors: [0x8b0]
Successors: [0x7d4]
---
0x8b8 PUSH2 0x100
0x8bb DUP1
0x8bc DUP4
0x8bd SLOAD
0x8be DIV
0x8bf MUL
0x8c0 DUP4
0x8c1 MSTORE
0x8c2 SWAP2
0x8c3 PUSH1 0x20
0x8c5 ADD
0x8c6 SWAP2
0x8c7 PUSH2 0x7d4
0x8ca JUMP
---
0x8b8: V820 = 0x100
0x8bd: V821 = S[0x7]
0x8be: V822 = DIV V821 0x100
0x8bf: V823 = MUL V822 0x100
0x8c1: M[V803] = V823
0x8c3: V824 = 0x20
0x8c5: V825 = ADD 0x20 V803
0x8c7: V826 = 0x7d4
0x8ca: JUMP 0x7d4
---
Entry stack: [V12, 0x318, V799, 0x7, V790, V803, 0x7, V814]
Stack pops: 3
Stack additions: [V825, S1, S0]
Exit stack: [V12, 0x318, V799, 0x7, V790, V825, 0x7, V814]

================================

Block 0x8cb
[0x8cb:0x8d8]
---
Predecessors: []
Successors: [0x8d9]
---
0x8cb JUMPDEST
0x8cc DUP3
0x8cd ADD
0x8ce SWAP2
0x8cf SWAP1
0x8d0 PUSH1 0x0
0x8d2 MSTORE
0x8d3 PUSH1 0x20
0x8d5 PUSH1 0x0
0x8d7 SHA3
0x8d8 SWAP1
---
0x8cb: JUMPDEST 
0x8cd: V827 = ADD S2 S0
0x8d0: V828 = 0x0
0x8d2: M[0x0] = S1
0x8d3: V829 = 0x20
0x8d5: V830 = 0x0
0x8d7: V831 = SHA3 0x0 0x20
---
Entry stack: []
Stack pops: 3
Stack additions: [V827, V831, S2]
Exit stack: [V827, V831, S2]

================================

Block 0x8d9
[0x8d9:0x8ec]
---
Predecessors: [0x8cb]
Successors: [0x7b7, 0x8ed]
---
0x8d9 JUMPDEST
0x8da DUP2
0x8db SLOAD
0x8dc DUP2
0x8dd MSTORE
0x8de SWAP1
0x8df PUSH1 0x1
0x8e1 ADD
0x8e2 SWAP1
0x8e3 PUSH1 0x20
0x8e5 ADD
0x8e6 DUP1
0x8e7 DUP4
0x8e8 GT
0x8e9 PUSH2 0x7b7
0x8ec JUMPI
---
0x8d9: JUMPDEST 
0x8db: V832 = S[V831]
0x8dd: M[S0] = V832
0x8df: V833 = 0x1
0x8e1: V834 = ADD 0x1 V831
0x8e3: V835 = 0x20
0x8e5: V836 = ADD 0x20 S0
0x8e8: V837 = GT V827 V836
0x8e9: V838 = 0x7b7
0x8ec: JUMPI 0x7b7 V837
---
Entry stack: [V827, V831, S0]
Stack pops: 3
Stack additions: [S2, V834, V836]
Exit stack: [V827, V834, V836]

================================

Block 0x8ed
[0x8ed:0x8f5]
---
Predecessors: [0x8d9]
Successors: [0x8f6]
---
0x8ed DUP3
0x8ee SWAP1
0x8ef SUB
0x8f0 PUSH1 0x1f
0x8f2 AND
0x8f3 DUP3
0x8f4 ADD
0x8f5 SWAP2
---
0x8ef: V839 = SUB V836 V827
0x8f0: V840 = 0x1f
0x8f2: V841 = AND 0x1f V839
0x8f4: V842 = ADD V827 V841
---
Entry stack: [V827, V834, V836]
Stack pops: 3
Stack additions: [V842, S1, S2]
Exit stack: [V842, V834, V827]

================================

Block 0x8f6
[0x8f6:0x8fd]
---
Predecessors: [0x8ed]
Successors: []
Has unresolved jump.
---
0x8f6 JUMPDEST
0x8f7 POP
0x8f8 POP
0x8f9 POP
0x8fa POP
0x8fb POP
0x8fc DUP2
0x8fd JUMP
---
0x8f6: JUMPDEST 
0x8fd: JUMP S6
---
Entry stack: [V842, V834, V827]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [S3, S2]

================================

Block 0x8fe
[0x8fe:0x915]
---
Predecessors: [0x5ef]
Successors: [0x916, 0x955]
---
0x8fe JUMPDEST
0x8ff PUSH1 0x5
0x901 SLOAD
0x902 CALLER
0x903 PUSH1 0x1
0x905 PUSH1 0xa0
0x907 PUSH1 0x2
0x909 EXP
0x90a SUB
0x90b SWAP1
0x90c DUP2
0x90d AND
0x90e SWAP2
0x90f AND
0x910 EQ
0x911 ISZERO
0x912 PUSH2 0x955
0x915 JUMPI
---
0x8fe: JUMPDEST 
0x8ff: V843 = 0x5
0x901: V844 = S[0x5]
0x902: V845 = CALLER
0x903: V846 = 0x1
0x905: V847 = 0xa0
0x907: V848 = 0x2
0x909: V849 = EXP 0x2 0xa0
0x90a: V850 = SUB 0x10000000000000000000000000000000000000000 0x1
0x90d: V851 = AND 0xffffffffffffffffffffffffffffffffffffffff V845
0x90f: V852 = AND V844 0xffffffffffffffffffffffffffffffffffffffff
0x910: V853 = EQ V852 V851
0x911: V854 = ISZERO V853
0x912: V855 = 0x955
0x915: JUMPI 0x955 V854
---
Entry stack: [V12, 0x5f7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5f7]

================================

Block 0x916
[0x916:0x932]
---
Predecessors: [0x8fe]
Successors: [0x933, 0x93f]
---
0x916 PUSH1 0x10
0x918 SLOAD
0x919 PUSH1 0x0
0x91b NOT
0x91c ADD
0x91d PUSH1 0x0
0x91f SWAP1
0x920 DUP2
0x921 MSTORE
0x922 PUSH1 0xe
0x924 PUSH1 0x20
0x926 MSTORE
0x927 PUSH1 0x40
0x929 SWAP1
0x92a SHA3
0x92b SLOAD
0x92c TIMESTAMP
0x92d GT
0x92e ISZERO
0x92f PUSH2 0x93f
0x932 JUMPI
---
0x916: V856 = 0x10
0x918: V857 = S[0x10]
0x919: V858 = 0x0
0x91b: V859 = NOT 0x0
0x91c: V860 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V857
0x91d: V861 = 0x0
0x921: M[0x0] = V860
0x922: V862 = 0xe
0x924: V863 = 0x20
0x926: M[0x20] = 0xe
0x927: V864 = 0x40
0x92a: V865 = SHA3 0x0 0x40
0x92b: V866 = S[V865]
0x92c: V867 = TIMESTAMP
0x92d: V868 = GT V867 V866
0x92e: V869 = ISZERO V868
0x92f: V870 = 0x93f
0x932: JUMPI 0x93f V869
---
Entry stack: [V12, 0x5f7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5f7]

================================

Block 0x933
[0x933:0x939]
---
Predecessors: [0x916]
Successors: [0x9ad]
---
0x933 PUSH2 0x93a
0x936 PUSH2 0x9ad
0x939 JUMP
---
0x933: V871 = 0x93a
0x936: V872 = 0x9ad
0x939: JUMP 0x9ad
---
Entry stack: [V12, 0x5f7]
Stack pops: 0
Stack additions: [0x93a]
Exit stack: [V12, 0x5f7, 0x93a]

================================

Block 0x93a
[0x93a:0x93e]
---
Predecessors: [0x73b]
Successors: [0x95a]
---
0x93a JUMPDEST
0x93b PUSH2 0x95a
0x93e JUMP
---
0x93a: JUMPDEST 
0x93b: V873 = 0x95a
0x93e: JUMP 0x95a
---
Entry stack: [V12, V70, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V70, S3, S2, S1, S0]

================================

Block 0x93f
[0x93f:0x948]
---
Predecessors: [0x916]
Successors: [0x949, 0x955]
---
0x93f JUMPDEST
0x940 PUSH1 0x3
0x942 SLOAD
0x943 ISZERO
0x944 ISZERO
0x945 PUSH2 0x955
0x948 JUMPI
---
0x93f: JUMPDEST 
0x940: V874 = 0x3
0x942: V875 = S[0x3]
0x943: V876 = ISZERO V875
0x944: V877 = ISZERO V876
0x945: V878 = 0x955
0x948: JUMPI 0x955 V877
---
Entry stack: [V12, 0x5f7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5f7]

================================

Block 0x949
[0x949:0x94f]
---
Predecessors: [0x93f]
Successors: [0x9ad]
---
0x949 PUSH2 0x93a
0x94c PUSH2 0x9ad
0x94f JUMP
---
0x949: V879 = 0x93a
0x94c: V880 = 0x9ad
0x94f: JUMP 0x9ad
---
Entry stack: [V12, 0x5f7]
Stack pops: 0
Stack additions: [0x93a]
Exit stack: [V12, 0x5f7, 0x93a]

================================

Block 0x950
[0x950:0x954]
---
Predecessors: []
Successors: [0x95a]
---
0x950 JUMPDEST
0x951 PUSH2 0x95a
0x954 JUMP
---
0x950: JUMPDEST 
0x951: V881 = 0x95a
0x954: JUMP 0x95a
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x955
[0x955:0x959]
---
Predecessors: [0x8fe, 0x93f, 0xa1d, 0xa2f]
Successors: []
---
0x955 JUMPDEST
0x956 PUSH1 0x0
0x958 DUP1
0x959 REVERT
---
0x955: JUMPDEST 
0x956: V882 = 0x0
0x959: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5f7, S1, {0x0, 0x5f7}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5f7, S1, {0x0, 0x5f7}]

================================

Block 0x95a
[0x95a:0x95a]
---
Predecessors: [0x93a, 0x950]
Successors: [0x95b]
---
0x95a JUMPDEST
---
0x95a: JUMPDEST 
---
Entry stack: [V12, V70, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V70, S3, S2, S1, S0]

================================

Block 0x95b
[0x95b:0x95f]
---
Predecessors: [0x95a]
Successors: [0x965]
---
0x95b JUMPDEST
0x95c PUSH2 0x965
0x95f JUMP
---
0x95b: JUMPDEST 
0x95c: V883 = 0x965
0x95f: JUMP 0x965
---
Entry stack: [V12, V70, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V70, S3, S2, S1, S0]

================================

Block 0x960
[0x960:0x964]
---
Predecessors: []
Successors: []
---
0x960 JUMPDEST
0x961 PUSH1 0x0
0x963 DUP1
0x964 REVERT
---
0x960: JUMPDEST 
0x961: V884 = 0x0
0x964: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x965
[0x965:0x965]
---
Predecessors: [0x95b]
Successors: [0x966]
---
0x965 JUMPDEST
---
0x965: JUMPDEST 
---
Entry stack: [V12, 0x5f7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5f7]

================================

Block 0x966
[0x966:0x967]
---
Predecessors: [0x965]
Successors: [0x5f7]
---
0x966 JUMPDEST
0x967 JUMP
---
0x966: JUMPDEST 
0x967: JUMP 0x5f7
---
Entry stack: [V12, 0x5f7]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x968
[0x968:0x97c]
---
Predecessors: [0x604]
Successors: [0x618]
---
0x968 JUMPDEST
0x969 PUSH1 0xa
0x96b PUSH1 0x20
0x96d MSTORE
0x96e PUSH1 0x0
0x970 SWAP1
0x971 DUP2
0x972 MSTORE
0x973 PUSH1 0x40
0x975 SWAP1
0x976 SHA3
0x977 SLOAD
0x978 PUSH1 0xff
0x97a AND
0x97b DUP2
0x97c JUMP
---
0x968: JUMPDEST 
0x969: V885 = 0xa
0x96b: V886 = 0x20
0x96d: M[0x20] = 0xa
0x96e: V887 = 0x0
0x972: M[0x0] = V555
0x973: V888 = 0x40
0x976: V889 = SHA3 0x0 0x40
0x977: V890 = S[V889]
0x978: V891 = 0xff
0x97a: V892 = AND 0xff V890
0x97c: JUMP 0x618
---
Entry stack: [V12, 0x618, V555]
Stack pops: 2
Stack additions: [S1, V892]
Exit stack: [V12, 0x618, V892]

================================

Block 0x97d
[0x97d:0x997]
---
Predecessors: [0x637]
Successors: [0x437]
---
0x97d JUMPDEST
0x97e PUSH1 0xb
0x980 PUSH1 0x20
0x982 MSTORE
0x983 PUSH1 0x0
0x985 SWAP1
0x986 DUP2
0x987 MSTORE
0x988 PUSH1 0x40
0x98a SWAP1
0x98b SHA3
0x98c SLOAD
0x98d PUSH1 0x1
0x98f PUSH1 0xa0
0x991 PUSH1 0x2
0x993 EXP
0x994 SUB
0x995 AND
0x996 DUP2
0x997 JUMP
---
0x97d: JUMPDEST 
0x97e: V893 = 0xb
0x980: V894 = 0x20
0x982: M[0x20] = 0xb
0x983: V895 = 0x0
0x987: M[0x0] = V572
0x988: V896 = 0x40
0x98b: V897 = SHA3 0x0 0x40
0x98c: V898 = S[V897]
0x98d: V899 = 0x1
0x98f: V900 = 0xa0
0x991: V901 = 0x2
0x993: V902 = EXP 0x2 0xa0
0x994: V903 = SUB 0x10000000000000000000000000000000000000000 0x1
0x995: V904 = AND 0xffffffffffffffffffffffffffffffffffffffff V898
0x997: JUMP 0x437
---
Entry stack: [V12, 0x437, V572]
Stack pops: 2
Stack additions: [S1, V904]
Exit stack: [V12, 0x437, V904]

================================

Block 0x998
[0x998:0x99d]
---
Predecessors: [0x669]
Successors: [0x3a3]
---
0x998 JUMPDEST
0x999 PUSH1 0x2
0x99b SLOAD
0x99c DUP2
0x99d JUMP
---
0x998: JUMPDEST 
0x999: V905 = 0x2
0x99b: V906 = S[0x2]
0x99d: JUMP 0x3a3
---
Entry stack: [V12, 0x3a3]
Stack pops: 1
Stack additions: [S0, V906]
Exit stack: [V12, 0x3a3, V906]

================================

Block 0x99e
[0x99e:0x9ac]
---
Predecessors: [0x68e]
Successors: [0x437]
---
0x99e JUMPDEST
0x99f PUSH1 0x0
0x9a1 SLOAD
0x9a2 PUSH1 0x1
0x9a4 PUSH1 0xa0
0x9a6 PUSH1 0x2
0x9a8 EXP
0x9a9 SUB
0x9aa AND
0x9ab DUP2
0x9ac JUMP
---
0x99e: JUMPDEST 
0x99f: V907 = 0x0
0x9a1: V908 = S[0x0]
0x9a2: V909 = 0x1
0x9a4: V910 = 0xa0
0x9a6: V911 = 0x2
0x9a8: V912 = EXP 0x2 0xa0
0x9a9: V913 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9aa: V914 = AND 0xffffffffffffffffffffffffffffffffffffffff V908
0x9ac: JUMP 0x437
---
Entry stack: [V12, 0x437]
Stack pops: 1
Stack additions: [S0, V914]
Exit stack: [V12, 0x437, V914]

================================

Block 0x9ad
[0x9ad:0xa07]
---
Predecessors: [0x933, 0x949]
Successors: [0xa08, 0xa0c]
---
0x9ad JUMPDEST
0x9ae PUSH1 0x2
0x9b0 SLOAD
0x9b1 PUSH1 0x0
0x9b3 DUP1
0x9b4 SLOAD
0x9b5 SWAP1
0x9b6 SWAP2
0x9b7 SWAP1
0x9b8 PUSH1 0x1
0x9ba PUSH1 0xa0
0x9bc PUSH1 0x2
0x9be EXP
0x9bf SUB
0x9c0 AND
0x9c1 PUSH4 0x70a08231
0x9c6 ADDRESS
0x9c7 DUP5
0x9c8 PUSH1 0x40
0x9ca MLOAD
0x9cb PUSH1 0x20
0x9cd ADD
0x9ce MSTORE
0x9cf PUSH1 0x40
0x9d1 MLOAD
0x9d2 PUSH1 0xe0
0x9d4 PUSH1 0x2
0x9d6 EXP
0x9d7 PUSH4 0xffffffff
0x9dc DUP5
0x9dd AND
0x9de MUL
0x9df DUP2
0x9e0 MSTORE
0x9e1 PUSH1 0x1
0x9e3 PUSH1 0xa0
0x9e5 PUSH1 0x2
0x9e7 EXP
0x9e8 SUB
0x9e9 SWAP1
0x9ea SWAP2
0x9eb AND
0x9ec PUSH1 0x4
0x9ee DUP3
0x9ef ADD
0x9f0 MSTORE
0x9f1 PUSH1 0x24
0x9f3 ADD
0x9f4 PUSH1 0x20
0x9f6 PUSH1 0x40
0x9f8 MLOAD
0x9f9 DUP1
0x9fa DUP4
0x9fb SUB
0x9fc DUP2
0x9fd PUSH1 0x0
0x9ff DUP8
0xa00 DUP1
0xa01 EXTCODESIZE
0xa02 ISZERO
0xa03 ISZERO
0xa04 PUSH2 0xa0c
0xa07 JUMPI
---
0x9ad: JUMPDEST 
0x9ae: V915 = 0x2
0x9b0: V916 = S[0x2]
0x9b1: V917 = 0x0
0x9b4: V918 = S[0x0]
0x9b8: V919 = 0x1
0x9ba: V920 = 0xa0
0x9bc: V921 = 0x2
0x9be: V922 = EXP 0x2 0xa0
0x9bf: V923 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c0: V924 = AND 0xffffffffffffffffffffffffffffffffffffffff V918
0x9c1: V925 = 0x70a08231
0x9c6: V926 = ADDRESS
0x9c8: V927 = 0x40
0x9ca: V928 = M[0x40]
0x9cb: V929 = 0x20
0x9cd: V930 = ADD 0x20 V928
0x9ce: M[V930] = 0x0
0x9cf: V931 = 0x40
0x9d1: V932 = M[0x40]
0x9d2: V933 = 0xe0
0x9d4: V934 = 0x2
0x9d6: V935 = EXP 0x2 0xe0
0x9d7: V936 = 0xffffffff
0x9dd: V937 = AND 0x70a08231 0xffffffff
0x9de: V938 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x9e0: M[V932] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x9e1: V939 = 0x1
0x9e3: V940 = 0xa0
0x9e5: V941 = 0x2
0x9e7: V942 = EXP 0x2 0xa0
0x9e8: V943 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9eb: V944 = AND V926 0xffffffffffffffffffffffffffffffffffffffff
0x9ec: V945 = 0x4
0x9ef: V946 = ADD V932 0x4
0x9f0: M[V946] = V944
0x9f1: V947 = 0x24
0x9f3: V948 = ADD 0x24 V932
0x9f4: V949 = 0x20
0x9f6: V950 = 0x40
0x9f8: V951 = M[0x40]
0x9fb: V952 = SUB V948 V951
0x9fd: V953 = 0x0
0xa01: V954 = EXTCODESIZE V924
0xa02: V955 = ISZERO V954
0xa03: V956 = ISZERO V955
0xa04: V957 = 0xa0c
0xa07: JUMPI 0xa0c V956
---
Entry stack: [V12, 0x5f7, 0x93a]
Stack pops: 0
Stack additions: [0x0, V916, V924, 0x70a08231, V948, 0x20, V951, V952, V951, 0x0, V924]
Exit stack: [V12, 0x5f7, 0x93a, 0x0, V916, V924, 0x70a08231, V948, 0x20, V951, V952, V951, 0x0, V924]

================================

Block 0xa08
[0xa08:0xa0b]
---
Predecessors: [0x9ad]
Successors: []
---
0xa08 PUSH1 0x0
0xa0a DUP1
0xa0b REVERT
---
0xa08: V958 = 0x0
0xa0b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5f7, 0x93a, 0x0, V916, V924, 0x70a08231, V948, 0x20, V951, V952, V951, 0x0, V924]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5f7, 0x93a, 0x0, V916, V924, 0x70a08231, V948, 0x20, V951, V952, V951, 0x0, V924]

================================

Block 0xa0c
[0xa0c:0xa18]
---
Predecessors: [0x9ad]
Successors: [0xa19, 0xa1d]
---
0xa0c JUMPDEST
0xa0d PUSH2 0x2c6
0xa10 GAS
0xa11 SUB
0xa12 CALL
0xa13 ISZERO
0xa14 ISZERO
0xa15 PUSH2 0xa1d
0xa18 JUMPI
---
0xa0c: JUMPDEST 
0xa0d: V959 = 0x2c6
0xa10: V960 = GAS
0xa11: V961 = SUB V960 0x2c6
0xa12: V962 = CALL V961 V924 0x0 V951 V952 V951 0x20
0xa13: V963 = ISZERO V962
0xa14: V964 = ISZERO V963
0xa15: V965 = 0xa1d
0xa18: JUMPI 0xa1d V964
---
Entry stack: [V12, 0x5f7, 0x93a, 0x0, V916, V924, 0x70a08231, V948, 0x20, V951, V952, V951, 0x0, V924]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x5f7, 0x93a, 0x0, V916, V924, 0x70a08231, V948]

================================

Block 0xa19
[0xa19:0xa1c]
---
Predecessors: [0xa0c]
Successors: []
---
0xa19 PUSH1 0x0
0xa1b DUP1
0xa1c REVERT
---
0xa19: V966 = 0x0
0xa1c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5f7, 0x93a, 0x0, V916, V924, 0x70a08231, V948]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5f7, 0x93a, 0x0, V916, V924, 0x70a08231, V948]

================================

Block 0xa1d
[0xa1d:0xa2e]
---
Predecessors: [0xa0c]
Successors: [0x955, 0xa2f]
---
0xa1d JUMPDEST
0xa1e POP
0xa1f POP
0xa20 POP
0xa21 PUSH1 0x40
0xa23 MLOAD
0xa24 DUP1
0xa25 MLOAD
0xa26 SWAP1
0xa27 POP
0xa28 LT
0xa29 ISZERO
0xa2a ISZERO
0xa2b PUSH2 0x955
0xa2e JUMPI
---
0xa1d: JUMPDEST 
0xa21: V967 = 0x40
0xa23: V968 = M[0x40]
0xa25: V969 = M[V968]
0xa28: V970 = LT V969 V916
0xa29: V971 = ISZERO V970
0xa2a: V972 = ISZERO V971
0xa2b: V973 = 0x955
0xa2e: JUMPI 0x955 V972
---
Entry stack: [V12, 0x5f7, 0x93a, 0x0, V916, V924, 0x70a08231, V948]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x5f7, 0x93a, 0x0]

================================

Block 0xa2f
[0xa2f:0xa61]
---
Predecessors: [0xa1d]
Successors: [0x955, 0xa62]
---
0xa2f PUSH1 0x8
0xa31 SLOAD
0xa32 PUSH1 0x1
0xa34 PUSH1 0xa0
0xa36 PUSH1 0x2
0xa38 EXP
0xa39 SUB
0xa3a SWAP1
0xa3b DUP2
0xa3c AND
0xa3d SWAP1
0xa3e ADDRESS
0xa3f AND
0xa40 BALANCE
0xa41 DUP1
0xa42 ISZERO
0xa43 PUSH2 0x8fc
0xa46 MUL
0xa47 SWAP1
0xa48 PUSH1 0x40
0xa4a MLOAD
0xa4b PUSH1 0x0
0xa4d PUSH1 0x40
0xa4f MLOAD
0xa50 DUP1
0xa51 DUP4
0xa52 SUB
0xa53 DUP2
0xa54 DUP6
0xa55 DUP9
0xa56 DUP9
0xa57 CALL
0xa58 SWAP4
0xa59 POP
0xa5a POP
0xa5b POP
0xa5c POP
0xa5d ISZERO
0xa5e PUSH2 0x955
0xa61 JUMPI
---
0xa2f: V974 = 0x8
0xa31: V975 = S[0x8]
0xa32: V976 = 0x1
0xa34: V977 = 0xa0
0xa36: V978 = 0x2
0xa38: V979 = EXP 0x2 0xa0
0xa39: V980 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa3c: V981 = AND 0xffffffffffffffffffffffffffffffffffffffff V975
0xa3e: V982 = ADDRESS
0xa3f: V983 = AND V982 0xffffffffffffffffffffffffffffffffffffffff
0xa40: V984 = BALANCE V983
0xa42: V985 = ISZERO V984
0xa43: V986 = 0x8fc
0xa46: V987 = MUL 0x8fc V985
0xa48: V988 = 0x40
0xa4a: V989 = M[0x40]
0xa4b: V990 = 0x0
0xa4d: V991 = 0x40
0xa4f: V992 = M[0x40]
0xa52: V993 = SUB V989 V992
0xa57: V994 = CALL V987 V981 V984 V992 V993 V992 0x0
0xa5d: V995 = ISZERO V994
0xa5e: V996 = 0x955
0xa61: JUMPI 0x955 V995
---
Entry stack: [V12, 0x5f7, 0x93a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5f7, 0x93a, 0x0]

================================

Block 0xa62
[0xa62:0xa64]
---
Predecessors: [0xa2f]
Successors: [0xa65]
---
0xa62 POP
0xa63 PUSH1 0x0
---
0xa63: V997 = 0x0
---
Entry stack: [V12, 0x5f7, 0x93a, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x5f7, 0x93a, 0x0]

================================

Block 0xa65
[0xa65:0xa6f]
---
Predecessors: [0xa62, 0xafc]
Successors: [0xa70, 0xb04]
---
0xa65 JUMPDEST
0xa66 PUSH1 0xd
0xa68 SLOAD
0xa69 DUP2
0xa6a LT
0xa6b ISZERO
0xa6c PUSH2 0xb04
0xa6f JUMPI
---
0xa65: JUMPDEST 
0xa66: V998 = 0xd
0xa68: V999 = S[0xd]
0xa6a: V1000 = LT S0 V999
0xa6b: V1001 = ISZERO V1000
0xa6c: V1002 = 0xb04
0xa6f: JUMPI 0xb04 V1001
---
Entry stack: [V12, 0x5f7, 0x93a, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x5f7, 0x93a, S0]

================================

Block 0xa70
[0xa70:0xae2]
---
Predecessors: [0xa65]
Successors: [0xae3, 0xae7]
---
0xa70 PUSH1 0x0
0xa72 DUP1
0xa73 SLOAD
0xa74 DUP3
0xa75 DUP3
0xa76 MSTORE
0xa77 PUSH1 0xb
0xa79 PUSH1 0x20
0xa7b SWAP1
0xa7c DUP2
0xa7d MSTORE
0xa7e PUSH1 0x40
0xa80 DUP1
0xa81 DUP5
0xa82 SHA3
0xa83 SLOAD
0xa84 PUSH1 0x1
0xa86 PUSH1 0xa0
0xa88 PUSH1 0x2
0xa8a EXP
0xa8b SUB
0xa8c SWAP1
0xa8d DUP2
0xa8e AND
0xa8f DUP1
0xa90 DUP7
0xa91 MSTORE
0xa92 PUSH1 0x9
0xa94 SWAP1
0xa95 SWAP4
0xa96 MSTORE
0xa97 SWAP4
0xa98 DUP2
0xa99 SWAP1
0xa9a SHA3
0xa9b SLOAD
0xa9c SWAP4
0xa9d SWAP1
0xa9e SWAP3
0xa9f AND
0xaa0 SWAP3
0xaa1 PUSH4 0xa9059cbb
0xaa6 SWAP3
0xaa7 MLOAD
0xaa8 PUSH1 0xe0
0xaaa PUSH1 0x2
0xaac EXP
0xaad PUSH4 0xffffffff
0xab2 DUP6
0xab3 AND
0xab4 MUL
0xab5 DUP2
0xab6 MSTORE
0xab7 PUSH1 0x1
0xab9 PUSH1 0xa0
0xabb PUSH1 0x2
0xabd EXP
0xabe SUB
0xabf SWAP1
0xac0 SWAP3
0xac1 AND
0xac2 PUSH1 0x4
0xac4 DUP4
0xac5 ADD
0xac6 MSTORE
0xac7 PUSH1 0x24
0xac9 DUP3
0xaca ADD
0xacb MSTORE
0xacc PUSH1 0x44
0xace ADD
0xacf PUSH1 0x0
0xad1 PUSH1 0x40
0xad3 MLOAD
0xad4 DUP1
0xad5 DUP4
0xad6 SUB
0xad7 DUP2
0xad8 PUSH1 0x0
0xada DUP8
0xadb DUP1
0xadc EXTCODESIZE
0xadd ISZERO
0xade ISZERO
0xadf PUSH2 0xae7
0xae2 JUMPI
---
0xa70: V1003 = 0x0
0xa73: V1004 = S[0x0]
0xa76: M[0x0] = S0
0xa77: V1005 = 0xb
0xa79: V1006 = 0x20
0xa7d: M[0x20] = 0xb
0xa7e: V1007 = 0x40
0xa82: V1008 = SHA3 0x0 0x40
0xa83: V1009 = S[V1008]
0xa84: V1010 = 0x1
0xa86: V1011 = 0xa0
0xa88: V1012 = 0x2
0xa8a: V1013 = EXP 0x2 0xa0
0xa8b: V1014 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8e: V1015 = AND 0xffffffffffffffffffffffffffffffffffffffff V1009
0xa91: M[0x0] = V1015
0xa92: V1016 = 0x9
0xa96: M[0x20] = 0x9
0xa9a: V1017 = SHA3 0x0 0x40
0xa9b: V1018 = S[V1017]
0xa9f: V1019 = AND V1004 0xffffffffffffffffffffffffffffffffffffffff
0xaa1: V1020 = 0xa9059cbb
0xaa7: V1021 = M[0x40]
0xaa8: V1022 = 0xe0
0xaaa: V1023 = 0x2
0xaac: V1024 = EXP 0x2 0xe0
0xaad: V1025 = 0xffffffff
0xab3: V1026 = AND 0xa9059cbb 0xffffffff
0xab4: V1027 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xab6: M[V1021] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xab7: V1028 = 0x1
0xab9: V1029 = 0xa0
0xabb: V1030 = 0x2
0xabd: V1031 = EXP 0x2 0xa0
0xabe: V1032 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac1: V1033 = AND V1015 0xffffffffffffffffffffffffffffffffffffffff
0xac2: V1034 = 0x4
0xac5: V1035 = ADD V1021 0x4
0xac6: M[V1035] = V1033
0xac7: V1036 = 0x24
0xaca: V1037 = ADD V1021 0x24
0xacb: M[V1037] = V1018
0xacc: V1038 = 0x44
0xace: V1039 = ADD 0x44 V1021
0xacf: V1040 = 0x0
0xad1: V1041 = 0x40
0xad3: V1042 = M[0x40]
0xad6: V1043 = SUB V1039 V1042
0xad8: V1044 = 0x0
0xadc: V1045 = EXTCODESIZE V1019
0xadd: V1046 = ISZERO V1045
0xade: V1047 = ISZERO V1046
0xadf: V1048 = 0xae7
0xae2: JUMPI 0xae7 V1047
---
Entry stack: [V12, 0x5f7, 0x93a, S0]
Stack pops: 1
Stack additions: [S0, V1019, 0xa9059cbb, V1039, 0x0, V1042, V1043, V1042, 0x0, V1019]
Exit stack: [V12, 0x5f7, 0x93a, S0, V1019, 0xa9059cbb, V1039, 0x0, V1042, V1043, V1042, 0x0, V1019]

================================

Block 0xae3
[0xae3:0xae6]
---
Predecessors: [0xa70]
Successors: []
---
0xae3 PUSH1 0x0
0xae5 DUP1
0xae6 REVERT
---
0xae3: V1049 = 0x0
0xae6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5f7, 0x93a, S9, V1019, 0xa9059cbb, V1039, 0x0, V1042, V1043, V1042, 0x0, V1019]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5f7, 0x93a, S9, V1019, 0xa9059cbb, V1039, 0x0, V1042, V1043, V1042, 0x0, V1019]

================================

Block 0xae7
[0xae7:0xaf3]
---
Predecessors: [0xa70]
Successors: [0xaf4, 0xaf8]
---
0xae7 JUMPDEST
0xae8 PUSH2 0x2c6
0xaeb GAS
0xaec SUB
0xaed CALL
0xaee ISZERO
0xaef ISZERO
0xaf0 PUSH2 0xaf8
0xaf3 JUMPI
---
0xae7: JUMPDEST 
0xae8: V1050 = 0x2c6
0xaeb: V1051 = GAS
0xaec: V1052 = SUB V1051 0x2c6
0xaed: V1053 = CALL V1052 V1019 0x0 V1042 V1043 V1042 0x0
0xaee: V1054 = ISZERO V1053
0xaef: V1055 = ISZERO V1054
0xaf0: V1056 = 0xaf8
0xaf3: JUMPI 0xaf8 V1055
---
Entry stack: [V12, 0x5f7, 0x93a, S9, V1019, 0xa9059cbb, V1039, 0x0, V1042, V1043, V1042, 0x0, V1019]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x5f7, 0x93a, S9, V1019, 0xa9059cbb, V1039]

================================

Block 0xaf4
[0xaf4:0xaf7]
---
Predecessors: [0xae7]
Successors: []
---
0xaf4 PUSH1 0x0
0xaf6 DUP1
0xaf7 REVERT
---
0xaf4: V1057 = 0x0
0xaf7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5f7, 0x93a, S3, V1019, 0xa9059cbb, V1039]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5f7, 0x93a, S3, V1019, 0xa9059cbb, V1039]

================================

Block 0xaf8
[0xaf8:0xafb]
---
Predecessors: [0xae7]
Successors: [0xafc]
---
0xaf8 JUMPDEST
0xaf9 POP
0xafa POP
0xafb POP
---
0xaf8: JUMPDEST 
---
Entry stack: [V12, 0x5f7, 0x93a, S3, V1019, 0xa9059cbb, V1039]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x5f7, 0x93a, S3]

================================

Block 0xafc
[0xafc:0xb03]
---
Predecessors: [0xaf8]
Successors: [0xa65]
---
0xafc JUMPDEST
0xafd PUSH1 0x1
0xaff ADD
0xb00 PUSH2 0xa65
0xb03 JUMP
---
0xafc: JUMPDEST 
0xafd: V1058 = 0x1
0xaff: V1059 = ADD 0x1 S0
0xb00: V1060 = 0xa65
0xb03: JUMP 0xa65
---
Entry stack: [V12, 0x5f7, 0x93a, S0]
Stack pops: 1
Stack additions: [V1059]
Exit stack: [V12, 0x5f7, 0x93a, V1059]

================================

Block 0xb04
[0xb04:0xb0c]
---
Predecessors: [0xa65]
Successors: [0xb0d, 0xb81]
---
0xb04 JUMPDEST
0xb05 PUSH1 0x3
0xb07 SLOAD
0xb08 ISZERO
0xb09 PUSH2 0xb81
0xb0c JUMPI
---
0xb04: JUMPDEST 
0xb05: V1061 = 0x3
0xb07: V1062 = S[0x3]
0xb08: V1063 = ISZERO V1062
0xb09: V1064 = 0xb81
0xb0c: JUMPI 0xb81 V1063
---
Entry stack: [V12, 0x5f7, 0x93a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5f7, 0x93a, S0]

================================

Block 0xb0d
[0xb0d:0xb67]
---
Predecessors: [0xb04]
Successors: [0xb68, 0xb6c]
---
0xb0d PUSH1 0x0
0xb0f SLOAD
0xb10 PUSH1 0x5
0xb12 SLOAD
0xb13 PUSH1 0x3
0xb15 SLOAD
0xb16 PUSH1 0x1
0xb18 PUSH1 0xa0
0xb1a PUSH1 0x2
0xb1c EXP
0xb1d SUB
0xb1e SWAP3
0xb1f DUP4
0xb20 AND
0xb21 SWAP3
0xb22 PUSH4 0xa9059cbb
0xb27 SWAP3
0xb28 AND
0xb29 SWAP1
0xb2a PUSH1 0x40
0xb2c MLOAD
0xb2d PUSH1 0xe0
0xb2f PUSH1 0x2
0xb31 EXP
0xb32 PUSH4 0xffffffff
0xb37 DUP6
0xb38 AND
0xb39 MUL
0xb3a DUP2
0xb3b MSTORE
0xb3c PUSH1 0x1
0xb3e PUSH1 0xa0
0xb40 PUSH1 0x2
0xb42 EXP
0xb43 SUB
0xb44 SWAP1
0xb45 SWAP3
0xb46 AND
0xb47 PUSH1 0x4
0xb49 DUP4
0xb4a ADD
0xb4b MSTORE
0xb4c PUSH1 0x24
0xb4e DUP3
0xb4f ADD
0xb50 MSTORE
0xb51 PUSH1 0x44
0xb53 ADD
0xb54 PUSH1 0x0
0xb56 PUSH1 0x40
0xb58 MLOAD
0xb59 DUP1
0xb5a DUP4
0xb5b SUB
0xb5c DUP2
0xb5d PUSH1 0x0
0xb5f DUP8
0xb60 DUP1
0xb61 EXTCODESIZE
0xb62 ISZERO
0xb63 ISZERO
0xb64 PUSH2 0xb6c
0xb67 JUMPI
---
0xb0d: V1065 = 0x0
0xb0f: V1066 = S[0x0]
0xb10: V1067 = 0x5
0xb12: V1068 = S[0x5]
0xb13: V1069 = 0x3
0xb15: V1070 = S[0x3]
0xb16: V1071 = 0x1
0xb18: V1072 = 0xa0
0xb1a: V1073 = 0x2
0xb1c: V1074 = EXP 0x2 0xa0
0xb1d: V1075 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb20: V1076 = AND 0xffffffffffffffffffffffffffffffffffffffff V1066
0xb22: V1077 = 0xa9059cbb
0xb28: V1078 = AND V1068 0xffffffffffffffffffffffffffffffffffffffff
0xb2a: V1079 = 0x40
0xb2c: V1080 = M[0x40]
0xb2d: V1081 = 0xe0
0xb2f: V1082 = 0x2
0xb31: V1083 = EXP 0x2 0xe0
0xb32: V1084 = 0xffffffff
0xb38: V1085 = AND 0xa9059cbb 0xffffffff
0xb39: V1086 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xb3b: M[V1080] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xb3c: V1087 = 0x1
0xb3e: V1088 = 0xa0
0xb40: V1089 = 0x2
0xb42: V1090 = EXP 0x2 0xa0
0xb43: V1091 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb46: V1092 = AND V1078 0xffffffffffffffffffffffffffffffffffffffff
0xb47: V1093 = 0x4
0xb4a: V1094 = ADD V1080 0x4
0xb4b: M[V1094] = V1092
0xb4c: V1095 = 0x24
0xb4f: V1096 = ADD V1080 0x24
0xb50: M[V1096] = V1070
0xb51: V1097 = 0x44
0xb53: V1098 = ADD 0x44 V1080
0xb54: V1099 = 0x0
0xb56: V1100 = 0x40
0xb58: V1101 = M[0x40]
0xb5b: V1102 = SUB V1098 V1101
0xb5d: V1103 = 0x0
0xb61: V1104 = EXTCODESIZE V1076
0xb62: V1105 = ISZERO V1104
0xb63: V1106 = ISZERO V1105
0xb64: V1107 = 0xb6c
0xb67: JUMPI 0xb6c V1106
---
Entry stack: [V12, 0x5f7, 0x93a, S0]
Stack pops: 0
Stack additions: [V1076, 0xa9059cbb, V1098, 0x0, V1101, V1102, V1101, 0x0, V1076]
Exit stack: [V12, 0x5f7, 0x93a, S0, V1076, 0xa9059cbb, V1098, 0x0, V1101, V1102, V1101, 0x0, V1076]

================================

Block 0xb68
[0xb68:0xb6b]
---
Predecessors: [0xb0d]
Successors: []
---
0xb68 PUSH1 0x0
0xb6a DUP1
0xb6b REVERT
---
0xb68: V1108 = 0x0
0xb6b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5f7, 0x93a, S9, V1076, 0xa9059cbb, V1098, 0x0, V1101, V1102, V1101, 0x0, V1076]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5f7, 0x93a, S9, V1076, 0xa9059cbb, V1098, 0x0, V1101, V1102, V1101, 0x0, V1076]

================================

Block 0xb6c
[0xb6c:0xb78]
---
Predecessors: [0xb0d]
Successors: [0xb79, 0xb7d]
---
0xb6c JUMPDEST
0xb6d PUSH2 0x2c6
0xb70 GAS
0xb71 SUB
0xb72 CALL
0xb73 ISZERO
0xb74 ISZERO
0xb75 PUSH2 0xb7d
0xb78 JUMPI
---
0xb6c: JUMPDEST 
0xb6d: V1109 = 0x2c6
0xb70: V1110 = GAS
0xb71: V1111 = SUB V1110 0x2c6
0xb72: V1112 = CALL V1111 V1076 0x0 V1101 V1102 V1101 0x0
0xb73: V1113 = ISZERO V1112
0xb74: V1114 = ISZERO V1113
0xb75: V1115 = 0xb7d
0xb78: JUMPI 0xb7d V1114
---
Entry stack: [V12, 0x5f7, 0x93a, S9, V1076, 0xa9059cbb, V1098, 0x0, V1101, V1102, V1101, 0x0, V1076]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x5f7, 0x93a, S9, V1076, 0xa9059cbb, V1098]

================================

Block 0xb79
[0xb79:0xb7c]
---
Predecessors: [0xb6c]
Successors: []
---
0xb79 PUSH1 0x0
0xb7b DUP1
0xb7c REVERT
---
0xb79: V1116 = 0x0
0xb7c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x5f7, 0x93a, S3, V1076, 0xa9059cbb, V1098]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5f7, 0x93a, S3, V1076, 0xa9059cbb, V1098]

================================

Block 0xb7d
[0xb7d:0xb80]
---
Predecessors: [0xb6c]
Successors: [0xb81]
---
0xb7d JUMPDEST
0xb7e POP
0xb7f POP
0xb80 POP
---
0xb7d: JUMPDEST 
---
Entry stack: [V12, 0x5f7, 0x93a, S3, V1076, 0xa9059cbb, V1098]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x5f7, 0x93a, S3]

================================

Block 0xb81
[0xb81:0xb85]
---
Predecessors: [0xb04, 0xb7d]
Successors: [0xb8b]
---
0xb81 JUMPDEST
0xb82 PUSH2 0xb8b
0xb85 JUMP
---
0xb81: JUMPDEST 
0xb82: V1117 = 0xb8b
0xb85: JUMP 0xb8b
---
Entry stack: [V12, 0x5f7, 0x93a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5f7, 0x93a, S0]

================================

Block 0xb86
[0xb86:0xb8a]
---
Predecessors: []
Successors: []
---
0xb86 JUMPDEST
0xb87 PUSH1 0x0
0xb89 DUP1
0xb8a REVERT
---
0xb86: JUMPDEST 
0xb87: V1118 = 0x0
0xb8a: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb8b
[0xb8b:0xb8f]
---
Predecessors: [0xb81]
Successors: [0x73a]
---
0xb8b JUMPDEST
0xb8c PUSH2 0x73a
0xb8f JUMP
---
0xb8b: JUMPDEST 
0xb8c: V1119 = 0x73a
0xb8f: JUMP 0x73a
---
Entry stack: [V12, 0x5f7, 0x93a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x5f7, 0x93a, S0]

================================

Block 0xb90
[0xb90:0xb95]
---
Predecessors: []
Successors: [0xb96]
---
0xb90 JUMPDEST
0xb91 PUSH1 0x0
0xb93 DUP1
0xb94 REVERT
0xb95 JUMPDEST
---
0xb90: JUMPDEST 
0xb91: V1120 = 0x0
0xb94: REVERT 0x0 0x0
0xb95: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb96
[0xb96:0xba4]
---
Predecessors: [0xb90]
Successors: [0xba5]
Has unresolved jump.
---
0xb96 JUMPDEST
0xb97 POP
0xb98 JUMP
0xb99 STOP
0xb9a LOG1
0xb9b PUSH6 0x627a7a723058
0xba2 SHA3
0xba3 MISSING 0xbf
0xba4 JUMPI
---
0xb96: JUMPDEST 
0xb98: JUMP S1
0xb99: STOP 
0xb9a: LOG S0 S1 S2
0xb9b: V1121 = 0x627a7a723058
0xba2: V1122 = SHA3 0x627a7a723058 S3
0xba3: MISSING 0xbf
0xba4: JUMPI S0 S1
---
Entry stack: []
Stack pops: 15
Stack additions: []
Exit stack: []

================================

Block 0xba5
[0xba5:0xbc6]
---
Predecessors: [0xb96]
Successors: []
---
0xba5 PUSH25 0x907795328bc273ea0566807309ec3eb8da1200faf48fd83e52
0xbbf MISSING 0x49
0xbc0 MISSING 0xdc
0xbc1 MISSING 0xc3
0xbc2 PUSH4 0x29
---
0xba5: V1123 = 0x907795328bc273ea0566807309ec3eb8da1200faf48fd83e52
0xbbf: MISSING 0x49
0xbc0: MISSING 0xdc
0xbc1: MISSING 0xc3
0xbc2: V1124 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x907795328bc273ea0566807309ec3eb8da1200faf48fd83e52, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x305
Exit block: 0x382
Body: 0x305, 0x30c, 0x310, 0x318, 0x33c, 0x345, 0x34d, 0x355, 0x369, 0x382, 0x73e, 0x78e, 0x796, 0x7a9, 0x7b7, 0x7cb, 0x7d4

Function 1:
Public function signature: 0x18160ddd
Entry block: 0x390
Exit block: 0x3a3
Body: 0x390, 0x397, 0x39b, 0x3a3, 0x7dc

Function 2:
Public function signature: 0x27ea06b8
Entry block: 0x3b5
Exit block: 0x3a3
Body: 0x3a3, 0x3b5, 0x3bc, 0x3c0, 0x7e2

Function 3:
Public function signature: 0x3328d3f0
Entry block: 0x3da
Exit block: 0x3a3
Body: 0x3a3, 0x3da, 0x3e1, 0x3e5, 0x7e8

Function 4:
Public function signature: 0x34686b73
Entry block: 0x3ff
Exit block: 0x3a3
Body: 0x3a3, 0x3ff, 0x406, 0x40a, 0x7ee

Function 5:
Public function signature: 0x3c745371
Entry block: 0x424
Exit block: 0x437
Body: 0x424, 0x42b, 0x42f, 0x437, 0x7f4

Function 6:
Public function signature: 0x5133ae24
Entry block: 0x453
Exit block: 0x3a3
Body: 0x3a3, 0x453, 0x45a, 0x45e, 0x803

Function 7:
Public function signature: 0x70a08231
Entry block: 0x47b
Exit block: 0x3a3
Body: 0x3a3, 0x47b, 0x482, 0x486, 0x815

Function 8:
Public function signature: 0x7b1b1de6
Entry block: 0x4ac
Exit block: 0x3a3
Body: 0x3a3, 0x4ac, 0x4b3, 0x4b7, 0x827

Function 9:
Public function signature: 0x8da5cb5b
Entry block: 0x4d1
Exit block: 0x437
Body: 0x437, 0x4d1, 0x4d8, 0x4dc, 0x82d

Function 10:
Public function signature: 0x8db1342d
Entry block: 0x500
Exit block: 0x3a3
Body: 0x3a3, 0x500, 0x507, 0x50b, 0x83c

Function 11:
Public function signature: 0x935c1fb1
Entry block: 0x528
Exit block: 0x3a3
Body: 0x3a3, 0x528, 0x52f, 0x533, 0x84e

Function 12:
Public function signature: 0x95d89b41
Entry block: 0x559
Exit block: 0x382
Body: 0x318, 0x33c, 0x345, 0x34d, 0x355, 0x369, 0x382, 0x559, 0x560, 0x564, 0x7a9, 0x7b7, 0x7cb, 0x7d4, 0x860, 0x8b0, 0x8b8

Function 13:
Public function signature: 0xa43be57b
Entry block: 0x5e4
Exit block: 0x5f7
Body: 0x5e4, 0x5eb, 0x5ef, 0x5f7, 0x8fe, 0x916, 0x933, 0x93a, 0x93f, 0x949, 0x955, 0x95a, 0x95b, 0x965, 0x966

Function 14:
Public function signature: 0xa5025222
Entry block: 0x5f9
Exit block: 0x618
Body: 0x5f9, 0x600, 0x604, 0x618, 0x968

Function 15:
Public function signature: 0xedf26d9b
Entry block: 0x62c
Exit block: 0x437
Body: 0x437, 0x62c, 0x633, 0x637, 0x97d

Function 16:
Public function signature: 0xf9f16ef2
Entry block: 0x65e
Exit block: 0x3a3
Body: 0x3a3, 0x65e, 0x665, 0x669, 0x998

Function 17:
Public function signature: 0xfc0c546a
Entry block: 0x683
Exit block: 0x437
Body: 0x437, 0x683, 0x68a, 0x68e, 0x99e

Function 18:
Public fallback function
Entry block: 0xe0
Exit block: 0x2fe
Body: 0xe0, 0xe1, 0xfd, 0x12b, 0x131, 0x14a, 0x150, 0x154, 0x15e, 0x16c, 0x184, 0x19b, 0x1a1, 0x1bc, 0x1bd, 0x1c8, 0x1d3, 0x1d7, 0x1e3, 0x1e4, 0x1f4, 0x1f8, 0x201, 0x20f, 0x21c, 0x247, 0x269, 0x28e, 0x2d7, 0x2fd, 0x2fe, 0x5f7, 0x6b2, 0x6d5

Function 19:
Private function
Entry block: 0x9ad
Exit block: 0x73b
Body: 0x73a, 0x73b, 0x9ad, 0xa0c, 0xa1d, 0xa2f, 0xa62, 0xa65, 0xa70, 0xae7, 0xaf8, 0xafc, 0xb04, 0xb0d, 0xb6c, 0xb7d, 0xb81, 0xb8b

