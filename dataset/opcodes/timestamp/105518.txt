args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/6/105518.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8a
0xa: JUMPI 0x8a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x2d3]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x1cb3b20
0x34 EQ
0x35 PUSH2 0x2d3
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x1cb3b20
0x34: V10 = EQ 0x1cb3b20 V8
0x35: V11 = 0x2d3
0x38: JUMPI 0x2d3 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x2e0]
---
0x39 DUP1
0x3a PUSH4 0x29dcb0cf
0x3f EQ
0x40 PUSH2 0x2e0
0x43 JUMPI
---
0x3a: V12 = 0x29dcb0cf
0x3f: V13 = EQ 0x29dcb0cf V8
0x40: V14 = 0x2e0
0x43: JUMPI 0x2e0 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x301]
---
0x44 DUP1
0x45 PUSH4 0x38af3eed
0x4a EQ
0x4b PUSH2 0x301
0x4e JUMPI
---
0x45: V15 = 0x38af3eed
0x4a: V16 = EQ 0x38af3eed V8
0x4b: V17 = 0x301
0x4e: JUMPI 0x301 V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x338]
---
0x4f DUP1
0x50 PUSH4 0x6e66f6e9
0x55 EQ
0x56 PUSH2 0x338
0x59 JUMPI
---
0x50: V18 = 0x6e66f6e9
0x55: V19 = EQ 0x6e66f6e9 V8
0x56: V20 = 0x338
0x59: JUMPI 0x338 V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0x36f]
---
0x5a DUP1
0x5b PUSH4 0x7a3a0e84
0x60 EQ
0x61 PUSH2 0x36f
0x64 JUMPI
---
0x5b: V21 = 0x7a3a0e84
0x60: V22 = EQ 0x7a3a0e84 V8
0x61: V23 = 0x36f
0x64: JUMPI 0x36f V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x6f]
---
Predecessors: [0x5a]
Successors: [0x70, 0x390]
---
0x65 DUP1
0x66 PUSH4 0x7b3e5e7b
0x6b EQ
0x6c PUSH2 0x390
0x6f JUMPI
---
0x66: V24 = 0x7b3e5e7b
0x6b: V25 = EQ 0x7b3e5e7b V8
0x6c: V26 = 0x390
0x6f: JUMPI 0x390 V25
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x70
[0x70:0x7a]
---
Predecessors: [0x65]
Successors: [0x7b, 0x3b1]
---
0x70 DUP1
0x71 PUSH4 0xa035b1fe
0x76 EQ
0x77 PUSH2 0x3b1
0x7a JUMPI
---
0x71: V27 = 0xa035b1fe
0x76: V28 = EQ 0xa035b1fe V8
0x77: V29 = 0x3b1
0x7a: JUMPI 0x3b1 V28
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x7b
[0x7b:0x85]
---
Predecessors: [0x70]
Successors: [0x86, 0x3d2]
---
0x7b DUP1
0x7c PUSH4 0xdc0d3dff
0x81 EQ
0x82 PUSH2 0x3d2
0x85 JUMPI
---
0x7c: V30 = 0xdc0d3dff
0x81: V31 = EQ 0xdc0d3dff V8
0x82: V32 = 0x3d2
0x85: JUMPI 0x3d2 V31
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x86
[0x86:0x89]
---
Predecessors: [0x7b]
Successors: [0x8a]
---
0x86 PUSH2 0x8a
0x89 JUMP
---
0x86: V33 = 0x8a
0x89: JUMP 0x8a
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x8a
[0x8a:0x8d]
---
Predecessors: [0x0, 0x86]
Successors: [0x8e]
---
0x8a JUMPDEST
0x8b PUSH2 0x2d1
---
0x8a: JUMPDEST 
0x8b: V34 = 0x2d1
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x2d1]
Exit stack: [V8, 0x2d1]

================================

Block 0x8e
[0x8e:0xae]
---
Predecessors: [0x8a]
Successors: [0xaf, 0x117]
---
0x8e JUMPDEST
0x8f PUSH1 0x0
0x91 PUSH1 0x6
0x93 PUSH1 0x0
0x95 POP
0x96 PUSH1 0x6
0x98 PUSH1 0x0
0x9a POP
0x9b DUP1
0x9c SLOAD
0x9d PUSH1 0x1
0x9f ADD
0xa0 SWAP1
0xa1 DUP2
0xa2 DUP2
0xa3 SLOAD
0xa4 DUP2
0xa5 DUP4
0xa6 SSTORE
0xa7 DUP2
0xa8 DUP2
0xa9 ISZERO
0xaa GT
0xab PUSH2 0x117
0xae JUMPI
---
0x8e: JUMPDEST 
0x8f: V35 = 0x0
0x91: V36 = 0x6
0x93: V37 = 0x0
0x96: V38 = 0x6
0x98: V39 = 0x0
0x9c: V40 = S[0x6]
0x9d: V41 = 0x1
0x9f: V42 = ADD 0x1 V40
0xa3: V43 = S[0x6]
0xa6: S[0x6] = V42
0xa9: V44 = ISZERO V43
0xaa: V45 = GT V44 V42
0xab: V46 = 0x117
0xae: JUMPI 0x117 V45
---
Entry stack: [V8, 0x2d1]
Stack pops: 0
Stack additions: [0x0, 0x6, V42, 0x6, V42, V43]
Exit stack: [V8, 0x2d1, 0x0, 0x6, V42, 0x6, V42, V43]

================================

Block 0xaf
[0xaf:0xcc]
---
Predecessors: [0x8e]
Successors: [0xcd]
---
0xaf PUSH1 0x2
0xb1 MUL
0xb2 DUP2
0xb3 PUSH1 0x2
0xb5 MUL
0xb6 DUP4
0xb7 PUSH1 0x0
0xb9 MSTORE
0xba PUSH1 0x20
0xbc PUSH1 0x0
0xbe SHA3
0xbf SWAP2
0xc0 DUP3
0xc1 ADD
0xc2 SWAP2
0xc3 ADD
0xc4 PUSH2 0x116
0xc7 SWAP2
0xc8 SWAP1
0xc9 PUSH2 0xcd
0xcc JUMP
---
0xaf: V47 = 0x2
0xb1: V48 = MUL 0x2 V43
0xb3: V49 = 0x2
0xb5: V50 = MUL 0x2 V42
0xb7: V51 = 0x0
0xb9: M[0x0] = 0x6
0xba: V52 = 0x20
0xbc: V53 = 0x0
0xbe: V54 = SHA3 0x0 0x20
0xc1: V55 = ADD V54 V48
0xc3: V56 = ADD V54 V50
0xc4: V57 = 0x116
0xc9: V58 = 0xcd
0xcc: JUMP 0xcd
---
Entry stack: [V8, 0x2d1, 0x0, 0x6, V42, 0x6, V42, V43]
Stack pops: 3
Stack additions: [S2, S1, 0x116, V55, V56]
Exit stack: [V8, 0x2d1, 0x0, 0x6, V42, 0x6, V42, 0x116, V55, V56]

================================

Block 0xcd
[0xcd:0xd5]
---
Predecessors: [0xaf, 0xd6]
Successors: [0xd6, 0x112]
---
0xcd JUMPDEST
0xce DUP1
0xcf DUP3
0xd0 GT
0xd1 ISZERO
0xd2 PUSH2 0x112
0xd5 JUMPI
---
0xcd: JUMPDEST 
0xd0: V59 = GT V55 S0
0xd1: V60 = ISZERO V59
0xd2: V61 = 0x112
0xd5: JUMPI 0x112 V60
---
Entry stack: [V8, 0x2d1, 0x0, 0x6, V42, 0x6, V42, 0x116, V55, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0x2d1, 0x0, 0x6, V42, 0x6, V42, 0x116, V55, S0]

================================

Block 0xd6
[0xd6:0x111]
---
Predecessors: [0xcd]
Successors: [0xcd]
---
0xd6 PUSH1 0x0
0xd8 PUSH1 0x0
0xda DUP3
0xdb ADD
0xdc PUSH1 0x0
0xde PUSH2 0x100
0xe1 EXP
0xe2 DUP2
0xe3 SLOAD
0xe4 SWAP1
0xe5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa MUL
0xfb NOT
0xfc AND
0xfd SWAP1
0xfe SSTORE
0xff PUSH1 0x1
0x101 DUP3
0x102 ADD
0x103 PUSH1 0x0
0x105 POP
0x106 PUSH1 0x0
0x108 SWAP1
0x109 SSTORE
0x10a POP
0x10b PUSH1 0x1
0x10d ADD
0x10e PUSH2 0xcd
0x111 JUMP
---
0xd6: V62 = 0x0
0xd8: V63 = 0x0
0xdb: V64 = ADD S0 0x0
0xdc: V65 = 0x0
0xde: V66 = 0x100
0xe1: V67 = EXP 0x100 0x0
0xe3: V68 = S[V64]
0xe5: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa: V70 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xfb: V71 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xfc: V72 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V68
0xfe: S[V64] = V72
0xff: V73 = 0x1
0x102: V74 = ADD S0 0x1
0x103: V75 = 0x0
0x106: V76 = 0x0
0x109: S[V74] = 0x0
0x10b: V77 = 0x1
0x10d: V78 = ADD 0x1 S0
0x10e: V79 = 0xcd
0x111: JUMP 0xcd
---
Entry stack: [V8, 0x2d1, 0x0, 0x6, V42, 0x6, V42, 0x116, V55, S0]
Stack pops: 1
Stack additions: [V78]
Exit stack: [V8, 0x2d1, 0x0, 0x6, V42, 0x6, V42, 0x116, V55, V78]

================================

Block 0x112
[0x112:0x115]
---
Predecessors: [0xcd]
Successors: [0x116]
---
0x112 JUMPDEST
0x113 POP
0x114 SWAP1
0x115 JUMP
---
0x112: JUMPDEST 
0x115: JUMP 0x116
---
Entry stack: [V8, 0x2d1, 0x0, 0x6, V42, 0x6, V42, 0x116, V55, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0x2d1, 0x0, 0x6, V42, 0x6, V42, V55]

================================

Block 0x116
[0x116:0x116]
---
Predecessors: [0x112]
Successors: [0x117]
---
0x116 JUMPDEST
---
0x116: JUMPDEST 
---
Entry stack: [V8, 0x2d1, 0x0, 0x6, V42, 0x6, V42, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2d1, 0x0, 0x6, V42, 0x6, V42, V55]

================================

Block 0x117
[0x117:0x123]
---
Predecessors: [0x8e, 0x116]
Successors: [0x124]
---
0x117 JUMPDEST
0x118 POP
0x119 POP
0x11a POP
0x11b DUP2
0x11c SLOAD
0x11d DUP2
0x11e LT
0x11f ISZERO
0x120 PUSH2 0x2
0x123 JUMPI
---
0x117: JUMPDEST 
0x11c: V80 = S[0x6]
0x11e: V81 = LT V42 V80
0x11f: V82 = ISZERO V81
0x120: V83 = 0x2
0x123: THROWI V82
---
Entry stack: [V8, 0x2d1, 0x0, 0x6, V42, 0x6, V42, S0]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V8, 0x2d1, 0x0, 0x6, V42]

================================

Block 0x124
[0x124:0x23c]
---
Predecessors: [0x117]
Successors: [0x23d]
---
0x124 SWAP1
0x125 PUSH1 0x0
0x127 MSTORE
0x128 PUSH1 0x20
0x12a PUSH1 0x0
0x12c SHA3
0x12d SWAP1
0x12e PUSH1 0x2
0x130 MUL
0x131 ADD
0x132 PUSH1 0x0
0x134 POP
0x135 SWAP1
0x136 POP
0x137 CALLER
0x138 DUP2
0x139 PUSH1 0x0
0x13b ADD
0x13c PUSH1 0x0
0x13e PUSH2 0x100
0x141 EXP
0x142 DUP2
0x143 SLOAD
0x144 DUP2
0x145 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15a MUL
0x15b NOT
0x15c AND
0x15d SWAP1
0x15e DUP4
0x15f MUL
0x160 OR
0x161 SWAP1
0x162 SSTORE
0x163 POP
0x164 CALLVALUE
0x165 DUP2
0x166 PUSH1 0x1
0x168 ADD
0x169 PUSH1 0x0
0x16b POP
0x16c DUP2
0x16d SWAP1
0x16e SSTORE
0x16f POP
0x170 DUP1
0x171 PUSH1 0x1
0x173 ADD
0x174 PUSH1 0x0
0x176 POP
0x177 SLOAD
0x178 PUSH1 0x2
0x17a PUSH1 0x0
0x17c DUP3
0x17d DUP3
0x17e DUP3
0x17f POP
0x180 SLOAD
0x181 ADD
0x182 SWAP3
0x183 POP
0x184 POP
0x185 DUP2
0x186 SWAP1
0x187 SSTORE
0x188 POP
0x189 PUSH1 0x5
0x18b PUSH1 0x0
0x18d SWAP1
0x18e SLOAD
0x18f SWAP1
0x190 PUSH2 0x100
0x193 EXP
0x194 SWAP1
0x195 DIV
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c1 AND
0x1c2 PUSH4 0x90b98a11
0x1c7 CALLER
0x1c8 PUSH1 0x4
0x1ca PUSH1 0x0
0x1cc POP
0x1cd SLOAD
0x1ce DUP5
0x1cf PUSH1 0x1
0x1d1 ADD
0x1d2 PUSH1 0x0
0x1d4 POP
0x1d5 SLOAD
0x1d6 DIV
0x1d7 PUSH1 0x40
0x1d9 MLOAD
0x1da DUP4
0x1db PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1f9 MUL
0x1fa DUP2
0x1fb MSTORE
0x1fc PUSH1 0x4
0x1fe ADD
0x1ff DUP1
0x200 DUP4
0x201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x216 AND
0x217 DUP2
0x218 MSTORE
0x219 PUSH1 0x20
0x21b ADD
0x21c DUP3
0x21d DUP2
0x21e MSTORE
0x21f PUSH1 0x20
0x221 ADD
0x222 SWAP3
0x223 POP
0x224 POP
0x225 POP
0x226 PUSH1 0x20
0x228 PUSH1 0x40
0x22a MLOAD
0x22b DUP1
0x22c DUP4
0x22d SUB
0x22e DUP2
0x22f PUSH1 0x0
0x231 DUP8
0x232 PUSH2 0x61da
0x235 GAS
0x236 SUB
0x237 CALL
0x238 ISZERO
0x239 PUSH2 0x2
0x23c JUMPI
---
0x125: V84 = 0x0
0x127: M[0x0] = 0x6
0x128: V85 = 0x20
0x12a: V86 = 0x0
0x12c: V87 = SHA3 0x0 0x20
0x12e: V88 = 0x2
0x130: V89 = MUL 0x2 V42
0x131: V90 = ADD V89 V87
0x132: V91 = 0x0
0x137: V92 = CALLER
0x139: V93 = 0x0
0x13b: V94 = ADD 0x0 V90
0x13c: V95 = 0x0
0x13e: V96 = 0x100
0x141: V97 = EXP 0x100 0x0
0x143: V98 = S[V94]
0x145: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x15a: V100 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x15b: V101 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V102 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V98
0x15f: V103 = MUL V92 0x1
0x160: V104 = OR V103 V102
0x162: S[V94] = V104
0x164: V105 = CALLVALUE
0x166: V106 = 0x1
0x168: V107 = ADD 0x1 V90
0x169: V108 = 0x0
0x16e: S[V107] = V105
0x171: V109 = 0x1
0x173: V110 = ADD 0x1 V90
0x174: V111 = 0x0
0x177: V112 = S[V110]
0x178: V113 = 0x2
0x17a: V114 = 0x0
0x180: V115 = S[0x2]
0x181: V116 = ADD V115 V112
0x187: S[0x2] = V116
0x189: V117 = 0x5
0x18b: V118 = 0x0
0x18e: V119 = S[0x5]
0x190: V120 = 0x100
0x193: V121 = EXP 0x100 0x0
0x195: V122 = DIV V119 0x1
0x196: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x1ac: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x1c2: V127 = 0x90b98a11
0x1c7: V128 = CALLER
0x1c8: V129 = 0x4
0x1ca: V130 = 0x0
0x1cd: V131 = S[0x4]
0x1cf: V132 = 0x1
0x1d1: V133 = ADD 0x1 V90
0x1d2: V134 = 0x0
0x1d5: V135 = S[V133]
0x1d6: V136 = DIV V135 V131
0x1d7: V137 = 0x40
0x1d9: V138 = M[0x40]
0x1db: V139 = 0x100000000000000000000000000000000000000000000000000000000
0x1f9: V140 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x90b98a11
0x1fb: M[V138] = 0x90b98a1100000000000000000000000000000000000000000000000000000000
0x1fc: V141 = 0x4
0x1fe: V142 = ADD 0x4 V138
0x201: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x216: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x218: M[V142] = V144
0x219: V145 = 0x20
0x21b: V146 = ADD 0x20 V142
0x21e: M[V146] = V136
0x21f: V147 = 0x20
0x221: V148 = ADD 0x20 V146
0x226: V149 = 0x20
0x228: V150 = 0x40
0x22a: V151 = M[0x40]
0x22d: V152 = SUB V148 V151
0x22f: V153 = 0x0
0x232: V154 = 0x61da
0x235: V155 = GAS
0x236: V156 = SUB V155 0x61da
0x237: V157 = CALL V156 V126 0x0 V151 V152 V151 0x20
0x238: V158 = ISZERO V157
0x239: V159 = 0x2
0x23c: THROWI V158
---
Entry stack: [V8, 0x2d1, 0x0, 0x6, V42]
Stack pops: 3
Stack additions: [V90, V126, 0x90b98a11, V148]
Exit stack: [V8, 0x2d1, V90, V126, 0x90b98a11, V148]

================================

Block 0x23d
[0x23d:0x2cd]
---
Predecessors: [0x124]
Successors: [0x2ce]
---
0x23d POP
0x23e POP
0x23f POP
0x240 PUSH1 0x40
0x242 MLOAD
0x243 MLOAD
0x244 POP
0x245 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x266 DUP2
0x267 PUSH1 0x0
0x269 ADD
0x26a PUSH1 0x0
0x26c SWAP1
0x26d SLOAD
0x26e SWAP1
0x26f PUSH2 0x100
0x272 EXP
0x273 SWAP1
0x274 DIV
0x275 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28a AND
0x28b DUP3
0x28c PUSH1 0x1
0x28e ADD
0x28f PUSH1 0x0
0x291 POP
0x292 SLOAD
0x293 PUSH1 0x1
0x295 PUSH1 0x40
0x297 MLOAD
0x298 DUP1
0x299 DUP5
0x29a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2af AND
0x2b0 DUP2
0x2b1 MSTORE
0x2b2 PUSH1 0x20
0x2b4 ADD
0x2b5 DUP4
0x2b6 DUP2
0x2b7 MSTORE
0x2b8 PUSH1 0x20
0x2ba ADD
0x2bb DUP3
0x2bc DUP2
0x2bd MSTORE
0x2be PUSH1 0x20
0x2c0 ADD
0x2c1 SWAP4
0x2c2 POP
0x2c3 POP
0x2c4 POP
0x2c5 POP
0x2c6 PUSH1 0x40
0x2c8 MLOAD
0x2c9 DUP1
0x2ca SWAP2
0x2cb SUB
0x2cc SWAP1
0x2cd LOG1
---
0x240: V160 = 0x40
0x242: V161 = M[0x40]
0x243: V162 = M[V161]
0x245: V163 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x267: V164 = 0x0
0x269: V165 = ADD 0x0 V90
0x26a: V166 = 0x0
0x26d: V167 = S[V165]
0x26f: V168 = 0x100
0x272: V169 = EXP 0x100 0x0
0x274: V170 = DIV V167 0x1
0x275: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x28a: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x28c: V173 = 0x1
0x28e: V174 = ADD 0x1 V90
0x28f: V175 = 0x0
0x292: V176 = S[V174]
0x293: V177 = 0x1
0x295: V178 = 0x40
0x297: V179 = M[0x40]
0x29a: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x2af: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x2b1: M[V179] = V181
0x2b2: V182 = 0x20
0x2b4: V183 = ADD 0x20 V179
0x2b7: M[V183] = V176
0x2b8: V184 = 0x20
0x2ba: V185 = ADD 0x20 V183
0x2bd: M[V185] = 0x1
0x2be: V186 = 0x20
0x2c0: V187 = ADD 0x20 V185
0x2c6: V188 = 0x40
0x2c8: V189 = M[0x40]
0x2cb: V190 = SUB V187 V189
0x2cd: LOG V189 V190 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V8, 0x2d1, V90, V126, 0x90b98a11, V148]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V8, 0x2d1, V90]

================================

Block 0x2ce
[0x2ce:0x2d0]
---
Predecessors: [0x23d]
Successors: [0x2d1]
---
0x2ce JUMPDEST
0x2cf POP
0x2d0 JUMP
---
0x2ce: JUMPDEST 
0x2d0: JUMP 0x2d1
---
Entry stack: [V8, 0x2d1, V90]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x2d1
[0x2d1:0x2d2]
---
Predecessors: [0x2ce]
Successors: []
---
0x2d1 JUMPDEST
0x2d2 STOP
---
0x2d1: JUMPDEST 
0x2d2: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x2d3
[0x2d3:0x2dd]
---
Predecessors: [0xb]
Successors: [0x416]
---
0x2d3 JUMPDEST
0x2d4 PUSH2 0x2de
0x2d7 PUSH1 0x4
0x2d9 POP
0x2da PUSH2 0x416
0x2dd JUMP
---
0x2d3: JUMPDEST 
0x2d4: V191 = 0x2de
0x2d7: V192 = 0x4
0x2da: V193 = 0x416
0x2dd: JUMP 0x416
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x2de]
Exit stack: [V8, 0x2de]

================================

Block 0x2de
[0x2de:0x2df]
---
Predecessors: [0x727]
Successors: []
---
0x2de JUMPDEST
0x2df STOP
---
0x2de: JUMPDEST 
0x2df: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x2e0
[0x2e0:0x2ea]
---
Predecessors: [0x39]
Successors: [0x762]
---
0x2e0 JUMPDEST
0x2e1 PUSH2 0x2eb
0x2e4 PUSH1 0x4
0x2e6 POP
0x2e7 PUSH2 0x762
0x2ea JUMP
---
0x2e0: JUMPDEST 
0x2e1: V194 = 0x2eb
0x2e4: V195 = 0x4
0x2e7: V196 = 0x762
0x2ea: JUMP 0x762
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x2eb]
Exit stack: [V8, 0x2eb]

================================

Block 0x2eb
[0x2eb:0x300]
---
Predecessors: [0x762]
Successors: []
---
0x2eb JUMPDEST
0x2ec PUSH1 0x40
0x2ee MLOAD
0x2ef DUP1
0x2f0 DUP3
0x2f1 DUP2
0x2f2 MSTORE
0x2f3 PUSH1 0x20
0x2f5 ADD
0x2f6 SWAP2
0x2f7 POP
0x2f8 POP
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc DUP1
0x2fd SWAP2
0x2fe SUB
0x2ff SWAP1
0x300 RETURN
---
0x2eb: JUMPDEST 
0x2ec: V197 = 0x40
0x2ee: V198 = M[0x40]
0x2f2: M[V198] = V500
0x2f3: V199 = 0x20
0x2f5: V200 = ADD 0x20 V198
0x2f9: V201 = 0x40
0x2fb: V202 = M[0x40]
0x2fe: V203 = SUB V200 V202
0x300: RETURN V202 V203
---
Entry stack: [V8, 0x2eb, V500]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x2eb]

================================

Block 0x301
[0x301:0x30b]
---
Predecessors: [0x44]
Successors: [0x72a]
---
0x301 JUMPDEST
0x302 PUSH2 0x30c
0x305 PUSH1 0x4
0x307 POP
0x308 PUSH2 0x72a
0x30b JUMP
---
0x301: JUMPDEST 
0x302: V204 = 0x30c
0x305: V205 = 0x4
0x308: V206 = 0x72a
0x30b: JUMP 0x72a
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x30c]
Exit stack: [V8, 0x30c]

================================

Block 0x30c
[0x30c:0x337]
---
Predecessors: [0x72a]
Successors: []
---
0x30c JUMPDEST
0x30d PUSH1 0x40
0x30f MLOAD
0x310 DUP1
0x311 DUP3
0x312 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x327 AND
0x328 DUP2
0x329 MSTORE
0x32a PUSH1 0x20
0x32c ADD
0x32d SWAP2
0x32e POP
0x32f POP
0x330 PUSH1 0x40
0x332 MLOAD
0x333 DUP1
0x334 SWAP2
0x335 SUB
0x336 SWAP1
0x337 RETURN
---
0x30c: JUMPDEST 
0x30d: V207 = 0x40
0x30f: V208 = M[0x40]
0x312: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x327: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x329: M[V208] = V210
0x32a: V211 = 0x20
0x32c: V212 = ADD 0x20 V208
0x330: V213 = 0x40
0x332: V214 = M[0x40]
0x335: V215 = SUB V212 V214
0x337: RETURN V214 V215
---
Entry stack: [V8, 0x30c, V491]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x30c]

================================

Block 0x338
[0x338:0x342]
---
Predecessors: [0x4f]
Successors: [0x774]
---
0x338 JUMPDEST
0x339 PUSH2 0x343
0x33c PUSH1 0x4
0x33e POP
0x33f PUSH2 0x774
0x342 JUMP
---
0x338: JUMPDEST 
0x339: V216 = 0x343
0x33c: V217 = 0x4
0x33f: V218 = 0x774
0x342: JUMP 0x774
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x343]
Exit stack: [V8, 0x343]

================================

Block 0x343
[0x343:0x36e]
---
Predecessors: [0x774]
Successors: []
---
0x343 JUMPDEST
0x344 PUSH1 0x40
0x346 MLOAD
0x347 DUP1
0x348 DUP3
0x349 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35e AND
0x35f DUP2
0x360 MSTORE
0x361 PUSH1 0x20
0x363 ADD
0x364 SWAP2
0x365 POP
0x366 POP
0x367 PUSH1 0x40
0x369 MLOAD
0x36a DUP1
0x36b SWAP2
0x36c SUB
0x36d SWAP1
0x36e RETURN
---
0x343: JUMPDEST 
0x344: V219 = 0x40
0x346: V220 = M[0x40]
0x349: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x35e: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x360: M[V220] = V222
0x361: V223 = 0x20
0x363: V224 = ADD 0x20 V220
0x367: V225 = 0x40
0x369: V226 = M[0x40]
0x36c: V227 = SUB V224 V226
0x36e: RETURN V226 V227
---
Entry stack: [V8, 0x343, V511]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x343]

================================

Block 0x36f
[0x36f:0x379]
---
Predecessors: [0x5a]
Successors: [0x750]
---
0x36f JUMPDEST
0x370 PUSH2 0x37a
0x373 PUSH1 0x4
0x375 POP
0x376 PUSH2 0x750
0x379 JUMP
---
0x36f: JUMPDEST 
0x370: V228 = 0x37a
0x373: V229 = 0x4
0x376: V230 = 0x750
0x379: JUMP 0x750
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x37a]
Exit stack: [V8, 0x37a]

================================

Block 0x37a
[0x37a:0x38f]
---
Predecessors: [0x750]
Successors: []
---
0x37a JUMPDEST
0x37b PUSH1 0x40
0x37d MLOAD
0x37e DUP1
0x37f DUP3
0x380 DUP2
0x381 MSTORE
0x382 PUSH1 0x20
0x384 ADD
0x385 SWAP2
0x386 POP
0x387 POP
0x388 PUSH1 0x40
0x38a MLOAD
0x38b DUP1
0x38c SWAP2
0x38d SUB
0x38e SWAP1
0x38f RETURN
---
0x37a: JUMPDEST 
0x37b: V231 = 0x40
0x37d: V232 = M[0x40]
0x381: M[V232] = V494
0x382: V233 = 0x20
0x384: V234 = ADD 0x20 V232
0x388: V235 = 0x40
0x38a: V236 = M[0x40]
0x38d: V237 = SUB V234 V236
0x38f: RETURN V236 V237
---
Entry stack: [V8, 0x37a, V494]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x37a]

================================

Block 0x390
[0x390:0x39a]
---
Predecessors: [0x65]
Successors: [0x759]
---
0x390 JUMPDEST
0x391 PUSH2 0x39b
0x394 PUSH1 0x4
0x396 POP
0x397 PUSH2 0x759
0x39a JUMP
---
0x390: JUMPDEST 
0x391: V238 = 0x39b
0x394: V239 = 0x4
0x397: V240 = 0x759
0x39a: JUMP 0x759
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x39b]
Exit stack: [V8, 0x39b]

================================

Block 0x39b
[0x39b:0x3b0]
---
Predecessors: [0x759]
Successors: []
---
0x39b JUMPDEST
0x39c PUSH1 0x40
0x39e MLOAD
0x39f DUP1
0x3a0 DUP3
0x3a1 DUP2
0x3a2 MSTORE
0x3a3 PUSH1 0x20
0x3a5 ADD
0x3a6 SWAP2
0x3a7 POP
0x3a8 POP
0x3a9 PUSH1 0x40
0x3ab MLOAD
0x3ac DUP1
0x3ad SWAP2
0x3ae SUB
0x3af SWAP1
0x3b0 RETURN
---
0x39b: JUMPDEST 
0x39c: V241 = 0x40
0x39e: V242 = M[0x40]
0x3a2: M[V242] = V497
0x3a3: V243 = 0x20
0x3a5: V244 = ADD 0x20 V242
0x3a9: V245 = 0x40
0x3ab: V246 = M[0x40]
0x3ae: V247 = SUB V244 V246
0x3b0: RETURN V246 V247
---
Entry stack: [V8, 0x39b, V497]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x39b]

================================

Block 0x3b1
[0x3b1:0x3bb]
---
Predecessors: [0x70]
Successors: [0x76b]
---
0x3b1 JUMPDEST
0x3b2 PUSH2 0x3bc
0x3b5 PUSH1 0x4
0x3b7 POP
0x3b8 PUSH2 0x76b
0x3bb JUMP
---
0x3b1: JUMPDEST 
0x3b2: V248 = 0x3bc
0x3b5: V249 = 0x4
0x3b8: V250 = 0x76b
0x3bb: JUMP 0x76b
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x3bc]
Exit stack: [V8, 0x3bc]

================================

Block 0x3bc
[0x3bc:0x3d1]
---
Predecessors: [0x76b]
Successors: []
---
0x3bc JUMPDEST
0x3bd PUSH1 0x40
0x3bf MLOAD
0x3c0 DUP1
0x3c1 DUP3
0x3c2 DUP2
0x3c3 MSTORE
0x3c4 PUSH1 0x20
0x3c6 ADD
0x3c7 SWAP2
0x3c8 POP
0x3c9 POP
0x3ca PUSH1 0x40
0x3cc MLOAD
0x3cd DUP1
0x3ce SWAP2
0x3cf SUB
0x3d0 SWAP1
0x3d1 RETURN
---
0x3bc: JUMPDEST 
0x3bd: V251 = 0x40
0x3bf: V252 = M[0x40]
0x3c3: M[V252] = V503
0x3c4: V253 = 0x20
0x3c6: V254 = ADD 0x20 V252
0x3ca: V255 = 0x40
0x3cc: V256 = M[0x40]
0x3cf: V257 = SUB V254 V256
0x3d1: RETURN V256 V257
---
Entry stack: [V8, 0x3bc, V503]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x3bc]

================================

Block 0x3d2
[0x3d2:0x3e2]
---
Predecessors: [0x7b]
Successors: [0x79a]
---
0x3d2 JUMPDEST
0x3d3 PUSH2 0x3e3
0x3d6 PUSH1 0x4
0x3d8 DUP1
0x3d9 CALLDATALOAD
0x3da SWAP1
0x3db PUSH1 0x20
0x3dd ADD
0x3de POP
0x3df PUSH2 0x79a
0x3e2 JUMP
---
0x3d2: JUMPDEST 
0x3d3: V258 = 0x3e3
0x3d6: V259 = 0x4
0x3d9: V260 = CALLDATALOAD 0x4
0x3db: V261 = 0x20
0x3dd: V262 = ADD 0x20 0x4
0x3df: V263 = 0x79a
0x3e2: JUMP 0x79a
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x3e3, V260]
Exit stack: [V8, 0x3e3, V260]

================================

Block 0x3e3
[0x3e3:0x415]
---
Predecessors: [0x7aa]
Successors: []
---
0x3e3 JUMPDEST
0x3e4 PUSH1 0x40
0x3e6 MLOAD
0x3e7 DUP1
0x3e8 DUP4
0x3e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fe AND
0x3ff DUP2
0x400 MSTORE
0x401 PUSH1 0x20
0x403 ADD
0x404 DUP3
0x405 DUP2
0x406 MSTORE
0x407 PUSH1 0x20
0x409 ADD
0x40a SWAP3
0x40b POP
0x40c POP
0x40d POP
0x40e PUSH1 0x40
0x410 MLOAD
0x411 DUP1
0x412 SWAP2
0x413 SUB
0x414 SWAP1
0x415 RETURN
---
0x3e3: JUMPDEST 
0x3e4: V264 = 0x40
0x3e6: V265 = M[0x40]
0x3e9: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fe: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x400: M[V265] = V267
0x401: V268 = 0x20
0x403: V269 = ADD 0x20 V265
0x406: M[V269] = V538
0x407: V270 = 0x20
0x409: V271 = ADD 0x20 V269
0x40e: V272 = 0x40
0x410: V273 = M[0x40]
0x413: V274 = SUB V271 V273
0x415: RETURN V273 V274
---
Entry stack: [V8, 0x3e3, V534, V538]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0x3e3]

================================

Block 0x416
[0x416:0x426]
---
Predecessors: [0x2d3]
Successors: [0x427, 0x726]
---
0x416 JUMPDEST
0x417 PUSH1 0x0
0x419 PUSH1 0x3
0x41b PUSH1 0x0
0x41d POP
0x41e SLOAD
0x41f TIMESTAMP
0x420 LT
0x421 ISZERO
0x422 ISZERO
0x423 PUSH2 0x726
0x426 JUMPI
---
0x416: JUMPDEST 
0x417: V275 = 0x0
0x419: V276 = 0x3
0x41b: V277 = 0x0
0x41e: V278 = S[0x3]
0x41f: V279 = TIMESTAMP
0x420: V280 = LT V279 V278
0x421: V281 = ISZERO V280
0x422: V282 = ISZERO V281
0x423: V283 = 0x726
0x426: JUMPI 0x726 V282
---
Entry stack: [V8, 0x2de]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V8, 0x2de, 0x0]

================================

Block 0x427
[0x427:0x439]
---
Predecessors: [0x416]
Successors: [0x43a, 0x51d]
---
0x427 PUSH1 0x1
0x429 PUSH1 0x0
0x42b POP
0x42c SLOAD
0x42d PUSH1 0x2
0x42f PUSH1 0x0
0x431 POP
0x432 SLOAD
0x433 LT
0x434 ISZERO
0x435 ISZERO
0x436 PUSH2 0x51d
0x439 JUMPI
---
0x427: V284 = 0x1
0x429: V285 = 0x0
0x42c: V286 = S[0x1]
0x42d: V287 = 0x2
0x42f: V288 = 0x0
0x432: V289 = S[0x2]
0x433: V290 = LT V289 V286
0x434: V291 = ISZERO V290
0x435: V292 = ISZERO V291
0x436: V293 = 0x51d
0x439: JUMPI 0x51d V292
---
Entry stack: [V8, 0x2de, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2de, 0x0]

================================

Block 0x43a
[0x43a:0x51c]
---
Predecessors: [0x427]
Successors: [0x6eb]
---
0x43a PUSH1 0x0
0x43c PUSH1 0x0
0x43e SWAP1
0x43f SLOAD
0x440 SWAP1
0x441 PUSH2 0x100
0x444 EXP
0x445 SWAP1
0x446 DIV
0x447 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45c AND
0x45d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x472 AND
0x473 PUSH1 0x0
0x475 PUSH1 0x2
0x477 PUSH1 0x0
0x479 POP
0x47a SLOAD
0x47b PUSH1 0x40
0x47d MLOAD
0x47e DUP1
0x47f SWAP1
0x480 POP
0x481 PUSH1 0x0
0x483 PUSH1 0x40
0x485 MLOAD
0x486 DUP1
0x487 DUP4
0x488 SUB
0x489 DUP2
0x48a DUP6
0x48b DUP9
0x48c DUP9
0x48d CALL
0x48e SWAP4
0x48f POP
0x490 POP
0x491 POP
0x492 POP
0x493 POP
0x494 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4b5 PUSH1 0x0
0x4b7 PUSH1 0x0
0x4b9 SWAP1
0x4ba SLOAD
0x4bb SWAP1
0x4bc PUSH2 0x100
0x4bf EXP
0x4c0 SWAP1
0x4c1 DIV
0x4c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d7 AND
0x4d8 PUSH1 0x2
0x4da PUSH1 0x0
0x4dc POP
0x4dd SLOAD
0x4de PUSH1 0x0
0x4e0 PUSH1 0x40
0x4e2 MLOAD
0x4e3 DUP1
0x4e4 DUP5
0x4e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fa AND
0x4fb DUP2
0x4fc MSTORE
0x4fd PUSH1 0x20
0x4ff ADD
0x500 DUP4
0x501 DUP2
0x502 MSTORE
0x503 PUSH1 0x20
0x505 ADD
0x506 DUP3
0x507 DUP2
0x508 MSTORE
0x509 PUSH1 0x20
0x50b ADD
0x50c SWAP4
0x50d POP
0x50e POP
0x50f POP
0x510 POP
0x511 PUSH1 0x40
0x513 MLOAD
0x514 DUP1
0x515 SWAP2
0x516 SUB
0x517 SWAP1
0x518 LOG1
0x519 PUSH2 0x6eb
0x51c JUMP
---
0x43a: V294 = 0x0
0x43c: V295 = 0x0
0x43f: V296 = S[0x0]
0x441: V297 = 0x100
0x444: V298 = EXP 0x100 0x0
0x446: V299 = DIV V296 0x1
0x447: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x45c: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x45d: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x472: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x473: V304 = 0x0
0x475: V305 = 0x2
0x477: V306 = 0x0
0x47a: V307 = S[0x2]
0x47b: V308 = 0x40
0x47d: V309 = M[0x40]
0x481: V310 = 0x0
0x483: V311 = 0x40
0x485: V312 = M[0x40]
0x488: V313 = SUB V309 V312
0x48d: V314 = CALL 0x0 V303 V307 V312 V313 V312 0x0
0x494: V315 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4b5: V316 = 0x0
0x4b7: V317 = 0x0
0x4ba: V318 = S[0x0]
0x4bc: V319 = 0x100
0x4bf: V320 = EXP 0x100 0x0
0x4c1: V321 = DIV V318 0x1
0x4c2: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d7: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x4d8: V324 = 0x2
0x4da: V325 = 0x0
0x4dd: V326 = S[0x2]
0x4de: V327 = 0x0
0x4e0: V328 = 0x40
0x4e2: V329 = M[0x40]
0x4e5: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fa: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x4fc: M[V329] = V331
0x4fd: V332 = 0x20
0x4ff: V333 = ADD 0x20 V329
0x502: M[V333] = V326
0x503: V334 = 0x20
0x505: V335 = ADD 0x20 V333
0x508: M[V335] = 0x0
0x509: V336 = 0x20
0x50b: V337 = ADD 0x20 V335
0x511: V338 = 0x40
0x513: V339 = M[0x40]
0x516: V340 = SUB V337 V339
0x518: LOG V339 V340 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x519: V341 = 0x6eb
0x51c: JUMP 0x6eb
---
Entry stack: [V8, 0x2de, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2de, 0x0]

================================

Block 0x51d
[0x51d:0x56b]
---
Predecessors: [0x427]
Successors: [0x56c]
---
0x51d JUMPDEST
0x51e PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x53f PUSH1 0x0
0x541 PUSH1 0xb
0x543 PUSH1 0x0
0x545 PUSH1 0x40
0x547 MLOAD
0x548 DUP1
0x549 DUP5
0x54a DUP2
0x54b MSTORE
0x54c PUSH1 0x20
0x54e ADD
0x54f DUP4
0x550 DUP2
0x551 MSTORE
0x552 PUSH1 0x20
0x554 ADD
0x555 DUP3
0x556 DUP2
0x557 MSTORE
0x558 PUSH1 0x20
0x55a ADD
0x55b SWAP4
0x55c POP
0x55d POP
0x55e POP
0x55f POP
0x560 PUSH1 0x40
0x562 MLOAD
0x563 DUP1
0x564 SWAP2
0x565 SUB
0x566 SWAP1
0x567 LOG1
0x568 PUSH1 0x0
0x56a SWAP1
0x56b POP
---
0x51d: JUMPDEST 
0x51e: V342 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x53f: V343 = 0x0
0x541: V344 = 0xb
0x543: V345 = 0x0
0x545: V346 = 0x40
0x547: V347 = M[0x40]
0x54b: M[V347] = 0x0
0x54c: V348 = 0x20
0x54e: V349 = ADD 0x20 V347
0x551: M[V349] = 0xb
0x552: V350 = 0x20
0x554: V351 = ADD 0x20 V349
0x557: M[V351] = 0x0
0x558: V352 = 0x20
0x55a: V353 = ADD 0x20 V351
0x560: V354 = 0x40
0x562: V355 = M[0x40]
0x565: V356 = SUB V353 V355
0x567: LOG V355 V356 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x568: V357 = 0x0
---
Entry stack: [V8, 0x2de, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V8, 0x2de, 0x0]

================================

Block 0x56c
[0x56c:0x579]
---
Predecessors: [0x51d, 0x6dd]
Successors: [0x57a, 0x6ea]
---
0x56c JUMPDEST
0x56d PUSH1 0x6
0x56f PUSH1 0x0
0x571 POP
0x572 SLOAD
0x573 DUP2
0x574 LT
0x575 ISZERO
0x576 PUSH2 0x6ea
0x579 JUMPI
---
0x56c: JUMPDEST 
0x56d: V358 = 0x6
0x56f: V359 = 0x0
0x572: V360 = S[0x6]
0x574: V361 = LT S0 V360
0x575: V362 = ISZERO V361
0x576: V363 = 0x6ea
0x579: JUMPI 0x6ea V362
---
Entry stack: [V8, 0x2de, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x2de, S0]

================================

Block 0x57a
[0x57a:0x588]
---
Predecessors: [0x56c]
Successors: [0x589]
---
0x57a PUSH1 0x6
0x57c PUSH1 0x0
0x57e POP
0x57f DUP2
0x580 DUP2
0x581 SLOAD
0x582 DUP2
0x583 LT
0x584 ISZERO
0x585 PUSH2 0x2
0x588 JUMPI
---
0x57a: V364 = 0x6
0x57c: V365 = 0x0
0x581: V366 = S[0x6]
0x583: V367 = LT S0 V366
0x584: V368 = ISZERO V367
0x585: V369 = 0x2
0x588: THROWI V368
---
Entry stack: [V8, 0x2de, S0]
Stack pops: 1
Stack additions: [S0, 0x6, S0]
Exit stack: [V8, 0x2de, S0, 0x6, S0]

================================

Block 0x589
[0x589:0x5e4]
---
Predecessors: [0x57a]
Successors: [0x5e5]
---
0x589 SWAP1
0x58a PUSH1 0x0
0x58c MSTORE
0x58d PUSH1 0x20
0x58f PUSH1 0x0
0x591 SHA3
0x592 SWAP1
0x593 PUSH1 0x2
0x595 MUL
0x596 ADD
0x597 PUSH1 0x0
0x599 POP
0x59a PUSH1 0x0
0x59c ADD
0x59d PUSH1 0x0
0x59f SWAP1
0x5a0 SLOAD
0x5a1 SWAP1
0x5a2 PUSH2 0x100
0x5a5 EXP
0x5a6 SWAP1
0x5a7 DIV
0x5a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bd AND
0x5be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d3 AND
0x5d4 PUSH1 0x0
0x5d6 PUSH1 0x6
0x5d8 PUSH1 0x0
0x5da POP
0x5db DUP4
0x5dc DUP2
0x5dd SLOAD
0x5de DUP2
0x5df LT
0x5e0 ISZERO
0x5e1 PUSH2 0x2
0x5e4 JUMPI
---
0x58a: V370 = 0x0
0x58c: M[0x0] = 0x6
0x58d: V371 = 0x20
0x58f: V372 = 0x0
0x591: V373 = SHA3 0x0 0x20
0x593: V374 = 0x2
0x595: V375 = MUL 0x2 S0
0x596: V376 = ADD V375 V373
0x597: V377 = 0x0
0x59a: V378 = 0x0
0x59c: V379 = ADD 0x0 V376
0x59d: V380 = 0x0
0x5a0: V381 = S[V379]
0x5a2: V382 = 0x100
0x5a5: V383 = EXP 0x100 0x0
0x5a7: V384 = DIV V381 0x1
0x5a8: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bd: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x5be: V387 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d3: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V386
0x5d4: V389 = 0x0
0x5d6: V390 = 0x6
0x5d8: V391 = 0x0
0x5dd: V392 = S[0x6]
0x5df: V393 = LT S2 V392
0x5e0: V394 = ISZERO V393
0x5e1: V395 = 0x2
0x5e4: THROWI V394
---
Entry stack: [V8, 0x2de, S2, 0x6, S0]
Stack pops: 3
Stack additions: [S2, V388, 0x0, 0x6, S2]
Exit stack: [V8, 0x2de, S2, V388, 0x0, 0x6, S2]

================================

Block 0x5e5
[0x5e5:0x645]
---
Predecessors: [0x589]
Successors: [0x646]
---
0x5e5 SWAP1
0x5e6 PUSH1 0x0
0x5e8 MSTORE
0x5e9 PUSH1 0x20
0x5eb PUSH1 0x0
0x5ed SHA3
0x5ee SWAP1
0x5ef PUSH1 0x2
0x5f1 MUL
0x5f2 ADD
0x5f3 PUSH1 0x0
0x5f5 POP
0x5f6 PUSH1 0x1
0x5f8 ADD
0x5f9 PUSH1 0x0
0x5fb POP
0x5fc SLOAD
0x5fd PUSH1 0x40
0x5ff MLOAD
0x600 DUP1
0x601 SWAP1
0x602 POP
0x603 PUSH1 0x0
0x605 PUSH1 0x40
0x607 MLOAD
0x608 DUP1
0x609 DUP4
0x60a SUB
0x60b DUP2
0x60c DUP6
0x60d DUP9
0x60e DUP9
0x60f CALL
0x610 SWAP4
0x611 POP
0x612 POP
0x613 POP
0x614 POP
0x615 POP
0x616 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x637 PUSH1 0x6
0x639 PUSH1 0x0
0x63b POP
0x63c DUP3
0x63d DUP2
0x63e SLOAD
0x63f DUP2
0x640 LT
0x641 ISZERO
0x642 PUSH2 0x2
0x645 JUMPI
---
0x5e6: V396 = 0x0
0x5e8: M[0x0] = 0x6
0x5e9: V397 = 0x20
0x5eb: V398 = 0x0
0x5ed: V399 = SHA3 0x0 0x20
0x5ef: V400 = 0x2
0x5f1: V401 = MUL 0x2 S0
0x5f2: V402 = ADD V401 V399
0x5f3: V403 = 0x0
0x5f6: V404 = 0x1
0x5f8: V405 = ADD 0x1 V402
0x5f9: V406 = 0x0
0x5fc: V407 = S[V405]
0x5fd: V408 = 0x40
0x5ff: V409 = M[0x40]
0x603: V410 = 0x0
0x605: V411 = 0x40
0x607: V412 = M[0x40]
0x60a: V413 = SUB V409 V412
0x60f: V414 = CALL 0x0 V388 V407 V412 V413 V412 0x0
0x616: V415 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x637: V416 = 0x6
0x639: V417 = 0x0
0x63e: V418 = S[0x6]
0x640: V419 = LT S4 V418
0x641: V420 = ISZERO V419
0x642: V421 = 0x2
0x645: THROWI V420
---
Entry stack: [V8, 0x2de, S4, V388, 0x0, 0x6, S0]
Stack pops: 5
Stack additions: [S4, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, 0x6, S4]
Exit stack: [V8, 0x2de, S4, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, 0x6, S4]

================================

Block 0x646
[0x646:0x689]
---
Predecessors: [0x5e5]
Successors: [0x68a]
---
0x646 SWAP1
0x647 PUSH1 0x0
0x649 MSTORE
0x64a PUSH1 0x20
0x64c PUSH1 0x0
0x64e SHA3
0x64f SWAP1
0x650 PUSH1 0x2
0x652 MUL
0x653 ADD
0x654 PUSH1 0x0
0x656 POP
0x657 PUSH1 0x0
0x659 ADD
0x65a PUSH1 0x0
0x65c SWAP1
0x65d SLOAD
0x65e SWAP1
0x65f PUSH2 0x100
0x662 EXP
0x663 SWAP1
0x664 DIV
0x665 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67a AND
0x67b PUSH1 0x6
0x67d PUSH1 0x0
0x67f POP
0x680 DUP4
0x681 DUP2
0x682 SLOAD
0x683 DUP2
0x684 LT
0x685 ISZERO
0x686 PUSH2 0x2
0x689 JUMPI
---
0x647: V422 = 0x0
0x649: M[0x0] = 0x6
0x64a: V423 = 0x20
0x64c: V424 = 0x0
0x64e: V425 = SHA3 0x0 0x20
0x650: V426 = 0x2
0x652: V427 = MUL 0x2 S0
0x653: V428 = ADD V427 V425
0x654: V429 = 0x0
0x657: V430 = 0x0
0x659: V431 = ADD 0x0 V428
0x65a: V432 = 0x0
0x65d: V433 = S[V431]
0x65f: V434 = 0x100
0x662: V435 = EXP 0x100 0x0
0x664: V436 = DIV V433 0x1
0x665: V437 = 0xffffffffffffffffffffffffffffffffffffffff
0x67a: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x67b: V439 = 0x6
0x67d: V440 = 0x0
0x682: V441 = S[0x6]
0x684: V442 = LT S3 V441
0x685: V443 = ISZERO V442
0x686: V444 = 0x2
0x689: THROWI V443
---
Entry stack: [V8, 0x2de, S3, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, 0x6, S0]
Stack pops: 4
Stack additions: [S3, S2, V438, 0x6, S3]
Exit stack: [V8, 0x2de, S3, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, V438, 0x6, S3]

================================

Block 0x68a
[0x68a:0x6dc]
---
Predecessors: [0x646]
Successors: [0x6dd]
---
0x68a SWAP1
0x68b PUSH1 0x0
0x68d MSTORE
0x68e PUSH1 0x20
0x690 PUSH1 0x0
0x692 SHA3
0x693 SWAP1
0x694 PUSH1 0x2
0x696 MUL
0x697 ADD
0x698 PUSH1 0x0
0x69a POP
0x69b PUSH1 0x1
0x69d ADD
0x69e PUSH1 0x0
0x6a0 POP
0x6a1 SLOAD
0x6a2 PUSH1 0x0
0x6a4 PUSH1 0x40
0x6a6 MLOAD
0x6a7 DUP1
0x6a8 DUP5
0x6a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6be AND
0x6bf DUP2
0x6c0 MSTORE
0x6c1 PUSH1 0x20
0x6c3 ADD
0x6c4 DUP4
0x6c5 DUP2
0x6c6 MSTORE
0x6c7 PUSH1 0x20
0x6c9 ADD
0x6ca DUP3
0x6cb DUP2
0x6cc MSTORE
0x6cd PUSH1 0x20
0x6cf ADD
0x6d0 SWAP4
0x6d1 POP
0x6d2 POP
0x6d3 POP
0x6d4 POP
0x6d5 PUSH1 0x40
0x6d7 MLOAD
0x6d8 DUP1
0x6d9 SWAP2
0x6da SUB
0x6db SWAP1
0x6dc LOG1
---
0x68b: V445 = 0x0
0x68d: M[0x0] = 0x6
0x68e: V446 = 0x20
0x690: V447 = 0x0
0x692: V448 = SHA3 0x0 0x20
0x694: V449 = 0x2
0x696: V450 = MUL 0x2 S0
0x697: V451 = ADD V450 V448
0x698: V452 = 0x0
0x69b: V453 = 0x1
0x69d: V454 = ADD 0x1 V451
0x69e: V455 = 0x0
0x6a1: V456 = S[V454]
0x6a2: V457 = 0x0
0x6a4: V458 = 0x40
0x6a6: V459 = M[0x40]
0x6a9: V460 = 0xffffffffffffffffffffffffffffffffffffffff
0x6be: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V438
0x6c0: M[V459] = V461
0x6c1: V462 = 0x20
0x6c3: V463 = ADD 0x20 V459
0x6c6: M[V463] = V456
0x6c7: V464 = 0x20
0x6c9: V465 = ADD 0x20 V463
0x6cc: M[V465] = 0x0
0x6cd: V466 = 0x20
0x6cf: V467 = ADD 0x20 V465
0x6d5: V468 = 0x40
0x6d7: V469 = M[0x40]
0x6da: V470 = SUB V467 V469
0x6dc: LOG V469 V470 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V8, 0x2de, S4, 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6, V438, 0x6, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V8, 0x2de, S4]

================================

Block 0x6dd
[0x6dd:0x6e9]
---
Predecessors: [0x68a]
Successors: [0x56c]
---
0x6dd JUMPDEST
0x6de DUP1
0x6df PUSH1 0x1
0x6e1 ADD
0x6e2 SWAP1
0x6e3 POP
0x6e4 DUP1
0x6e5 POP
0x6e6 PUSH2 0x56c
0x6e9 JUMP
---
0x6dd: JUMPDEST 
0x6df: V471 = 0x1
0x6e1: V472 = ADD 0x1 S0
0x6e6: V473 = 0x56c
0x6e9: JUMP 0x56c
---
Entry stack: [V8, 0x2de, S0]
Stack pops: 1
Stack additions: [V472]
Exit stack: [V8, 0x2de, V472]

================================

Block 0x6ea
[0x6ea:0x6ea]
---
Predecessors: [0x56c]
Successors: [0x6eb]
---
0x6ea JUMPDEST
---
0x6ea: JUMPDEST 
---
Entry stack: [V8, 0x2de, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2de, S0]

================================

Block 0x6eb
[0x6eb:0x725]
---
Predecessors: [0x43a, 0x6ea]
Successors: []
---
0x6eb JUMPDEST
0x6ec PUSH1 0x0
0x6ee PUSH1 0x0
0x6f0 SWAP1
0x6f1 SLOAD
0x6f2 SWAP1
0x6f3 PUSH2 0x100
0x6f6 EXP
0x6f7 SWAP1
0x6f8 DIV
0x6f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70e AND
0x70f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x724 AND
0x725 SELFDESTRUCT
---
0x6eb: JUMPDEST 
0x6ec: V474 = 0x0
0x6ee: V475 = 0x0
0x6f1: V476 = S[0x0]
0x6f3: V477 = 0x100
0x6f6: V478 = EXP 0x100 0x0
0x6f8: V479 = DIV V476 0x1
0x6f9: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x70e: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x70f: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x724: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x725: SELFDESTRUCT V483
---
Entry stack: [V8, 0x2de, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2de, S0]

================================

Block 0x726
[0x726:0x726]
---
Predecessors: [0x416]
Successors: [0x727]
---
0x726 JUMPDEST
---
0x726: JUMPDEST 
---
Entry stack: [V8, 0x2de, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2de, 0x0]

================================

Block 0x727
[0x727:0x729]
---
Predecessors: [0x726]
Successors: [0x2de]
---
0x727 JUMPDEST
0x728 POP
0x729 JUMP
---
0x727: JUMPDEST 
0x729: JUMP 0x2de
---
Entry stack: [V8, 0x2de, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x72a
[0x72a:0x74f]
---
Predecessors: [0x301]
Successors: [0x30c]
---
0x72a JUMPDEST
0x72b PUSH1 0x0
0x72d PUSH1 0x0
0x72f SWAP1
0x730 SLOAD
0x731 SWAP1
0x732 PUSH2 0x100
0x735 EXP
0x736 SWAP1
0x737 DIV
0x738 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74d AND
0x74e DUP2
0x74f JUMP
---
0x72a: JUMPDEST 
0x72b: V484 = 0x0
0x72d: V485 = 0x0
0x730: V486 = S[0x0]
0x732: V487 = 0x100
0x735: V488 = EXP 0x100 0x0
0x737: V489 = DIV V486 0x1
0x738: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x74d: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V489
0x74f: JUMP 0x30c
---
Entry stack: [V8, 0x30c]
Stack pops: 1
Stack additions: [S0, V491]
Exit stack: [V8, 0x30c, V491]

================================

Block 0x750
[0x750:0x758]
---
Predecessors: [0x36f]
Successors: [0x37a]
---
0x750 JUMPDEST
0x751 PUSH1 0x1
0x753 PUSH1 0x0
0x755 POP
0x756 SLOAD
0x757 DUP2
0x758 JUMP
---
0x750: JUMPDEST 
0x751: V492 = 0x1
0x753: V493 = 0x0
0x756: V494 = S[0x1]
0x758: JUMP 0x37a
---
Entry stack: [V8, 0x37a]
Stack pops: 1
Stack additions: [S0, V494]
Exit stack: [V8, 0x37a, V494]

================================

Block 0x759
[0x759:0x761]
---
Predecessors: [0x390]
Successors: [0x39b]
---
0x759 JUMPDEST
0x75a PUSH1 0x2
0x75c PUSH1 0x0
0x75e POP
0x75f SLOAD
0x760 DUP2
0x761 JUMP
---
0x759: JUMPDEST 
0x75a: V495 = 0x2
0x75c: V496 = 0x0
0x75f: V497 = S[0x2]
0x761: JUMP 0x39b
---
Entry stack: [V8, 0x39b]
Stack pops: 1
Stack additions: [S0, V497]
Exit stack: [V8, 0x39b, V497]

================================

Block 0x762
[0x762:0x76a]
---
Predecessors: [0x2e0]
Successors: [0x2eb]
---
0x762 JUMPDEST
0x763 PUSH1 0x3
0x765 PUSH1 0x0
0x767 POP
0x768 SLOAD
0x769 DUP2
0x76a JUMP
---
0x762: JUMPDEST 
0x763: V498 = 0x3
0x765: V499 = 0x0
0x768: V500 = S[0x3]
0x76a: JUMP 0x2eb
---
Entry stack: [V8, 0x2eb]
Stack pops: 1
Stack additions: [S0, V500]
Exit stack: [V8, 0x2eb, V500]

================================

Block 0x76b
[0x76b:0x773]
---
Predecessors: [0x3b1]
Successors: [0x3bc]
---
0x76b JUMPDEST
0x76c PUSH1 0x4
0x76e PUSH1 0x0
0x770 POP
0x771 SLOAD
0x772 DUP2
0x773 JUMP
---
0x76b: JUMPDEST 
0x76c: V501 = 0x4
0x76e: V502 = 0x0
0x771: V503 = S[0x4]
0x773: JUMP 0x3bc
---
Entry stack: [V8, 0x3bc]
Stack pops: 1
Stack additions: [S0, V503]
Exit stack: [V8, 0x3bc, V503]

================================

Block 0x774
[0x774:0x799]
---
Predecessors: [0x338]
Successors: [0x343]
---
0x774 JUMPDEST
0x775 PUSH1 0x5
0x777 PUSH1 0x0
0x779 SWAP1
0x77a SLOAD
0x77b SWAP1
0x77c PUSH2 0x100
0x77f EXP
0x780 SWAP1
0x781 DIV
0x782 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x797 AND
0x798 DUP2
0x799 JUMP
---
0x774: JUMPDEST 
0x775: V504 = 0x5
0x777: V505 = 0x0
0x77a: V506 = S[0x5]
0x77c: V507 = 0x100
0x77f: V508 = EXP 0x100 0x0
0x781: V509 = DIV V506 0x1
0x782: V510 = 0xffffffffffffffffffffffffffffffffffffffff
0x797: V511 = AND 0xffffffffffffffffffffffffffffffffffffffff V509
0x799: JUMP 0x343
---
Entry stack: [V8, 0x343]
Stack pops: 1
Stack additions: [S0, V511]
Exit stack: [V8, 0x343, V511]

================================

Block 0x79a
[0x79a:0x7a9]
---
Predecessors: [0x3d2]
Successors: [0x7aa]
---
0x79a JUMPDEST
0x79b PUSH1 0x6
0x79d PUSH1 0x0
0x79f POP
0x7a0 DUP2
0x7a1 DUP2
0x7a2 SLOAD
0x7a3 DUP2
0x7a4 LT
0x7a5 ISZERO
0x7a6 PUSH2 0x2
0x7a9 JUMPI
---
0x79a: JUMPDEST 
0x79b: V512 = 0x6
0x79d: V513 = 0x0
0x7a2: V514 = S[0x6]
0x7a4: V515 = LT V260 V514
0x7a5: V516 = ISZERO V515
0x7a6: V517 = 0x2
0x7a9: THROWI V516
---
Entry stack: [V8, 0x3e3, V260]
Stack pops: 1
Stack additions: [S0, 0x6, S0]
Exit stack: [V8, 0x3e3, V260, 0x6, V260]

================================

Block 0x7aa
[0x7aa:0x7ef]
---
Predecessors: [0x79a]
Successors: [0x3e3]
---
0x7aa SWAP1
0x7ab PUSH1 0x0
0x7ad MSTORE
0x7ae PUSH1 0x20
0x7b0 PUSH1 0x0
0x7b2 SHA3
0x7b3 SWAP1
0x7b4 PUSH1 0x2
0x7b6 MUL
0x7b7 ADD
0x7b8 PUSH1 0x0
0x7ba SWAP2
0x7bb POP
0x7bc SWAP1
0x7bd POP
0x7be DUP1
0x7bf PUSH1 0x0
0x7c1 ADD
0x7c2 PUSH1 0x0
0x7c4 SWAP1
0x7c5 SLOAD
0x7c6 SWAP1
0x7c7 PUSH2 0x100
0x7ca EXP
0x7cb SWAP1
0x7cc DIV
0x7cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e2 AND
0x7e3 SWAP1
0x7e4 DUP1
0x7e5 PUSH1 0x1
0x7e7 ADD
0x7e8 PUSH1 0x0
0x7ea POP
0x7eb SLOAD
0x7ec SWAP1
0x7ed POP
0x7ee DUP3
0x7ef JUMP
---
0x7ab: V518 = 0x0
0x7ad: M[0x0] = 0x6
0x7ae: V519 = 0x20
0x7b0: V520 = 0x0
0x7b2: V521 = SHA3 0x0 0x20
0x7b4: V522 = 0x2
0x7b6: V523 = MUL 0x2 V260
0x7b7: V524 = ADD V523 V521
0x7b8: V525 = 0x0
0x7bf: V526 = 0x0
0x7c1: V527 = ADD 0x0 V524
0x7c2: V528 = 0x0
0x7c5: V529 = S[V527]
0x7c7: V530 = 0x100
0x7ca: V531 = EXP 0x100 0x0
0x7cc: V532 = DIV V529 0x1
0x7cd: V533 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e2: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x7e5: V535 = 0x1
0x7e7: V536 = ADD 0x1 V524
0x7e8: V537 = 0x0
0x7eb: V538 = S[V536]
0x7ef: JUMP 0x3e3
---
Entry stack: [V8, 0x3e3, V260, 0x6, V260]
Stack pops: 4
Stack additions: [S3, V534, V538]
Exit stack: [V8, 0x3e3, V534, V538]

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x2d3
Exit block: 0x6eb
Body: 0x2d3, 0x2de, 0x416, 0x427, 0x43a, 0x51d, 0x56c, 0x57a, 0x589, 0x5e5, 0x646, 0x68a, 0x6dd, 0x6ea, 0x6eb, 0x726, 0x727

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x2e0
Exit block: 0x2eb
Body: 0x2e0, 0x2eb, 0x762

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x301
Exit block: 0x30c
Body: 0x301, 0x30c, 0x72a

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x338
Exit block: 0x343
Body: 0x338, 0x343, 0x774

Function 4:
Public function signature: 0x7a3a0e84
Entry block: 0x36f
Exit block: 0x37a
Body: 0x36f, 0x37a, 0x750

Function 5:
Public function signature: 0x7b3e5e7b
Entry block: 0x390
Exit block: 0x39b
Body: 0x390, 0x39b, 0x759

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x3b1
Exit block: 0x3bc
Body: 0x3b1, 0x3bc, 0x76b

Function 7:
Public function signature: 0xdc0d3dff
Entry block: 0x3d2
Exit block: 0x3e3
Body: 0x3d2, 0x3e3, 0x79a, 0x7aa

Function 8:
Public fallback function
Entry block: 0x86
Exit block: 0x2d1
Body: 0x86, 0x8a, 0x8e, 0xaf, 0xcd, 0xd6, 0x112, 0x116, 0x117, 0x124, 0x23d, 0x2ce, 0x2d1

