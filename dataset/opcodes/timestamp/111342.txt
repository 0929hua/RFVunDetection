Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x122]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x122
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x122
0xa: JUMPI 0x122 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x12f]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x18ad9260
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x12f
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x18ad9260
0x20: V14 = EQ V12 0x18ad9260
0x21: V15 = 0x12f
0x24: JUMPI 0x12f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x15e]
---
0x25 DUP1
0x26 PUSH4 0x1d85de4f
0x2b EQ
0x2c PUSH2 0x15e
0x2f JUMPI
---
0x26: V16 = 0x1d85de4f
0x2b: V17 = EQ 0x1d85de4f V12
0x2c: V18 = 0x15e
0x2f: JUMPI 0x15e V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x183]
---
0x30 DUP1
0x31 PUSH4 0x28d1226a
0x36 EQ
0x37 PUSH2 0x183
0x3a JUMPI
---
0x31: V19 = 0x28d1226a
0x36: V20 = EQ 0x28d1226a V12
0x37: V21 = 0x183
0x3a: JUMPI 0x183 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1a8]
---
0x3b DUP1
0x3c PUSH4 0x3197cbb6
0x41 EQ
0x42 PUSH2 0x1a8
0x45 JUMPI
---
0x3c: V22 = 0x3197cbb6
0x41: V23 = EQ 0x3197cbb6 V12
0x42: V24 = 0x1a8
0x45: JUMPI 0x1a8 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1cd]
---
0x46 DUP1
0x47 PUSH4 0x361c3308
0x4c EQ
0x4d PUSH2 0x1cd
0x50 JUMPI
---
0x47: V25 = 0x361c3308
0x4c: V26 = EQ 0x361c3308 V12
0x4d: V27 = 0x1cd
0x50: JUMPI 0x1cd V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1f2]
---
0x51 DUP1
0x52 PUSH4 0x41c0e1b5
0x57 EQ
0x58 PUSH2 0x1f2
0x5b JUMPI
---
0x52: V28 = 0x41c0e1b5
0x57: V29 = EQ 0x41c0e1b5 V12
0x58: V30 = 0x1f2
0x5b: JUMPI 0x1f2 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x207]
---
0x5c DUP1
0x5d PUSH4 0x45e05f43
0x62 EQ
0x63 PUSH2 0x207
0x66 JUMPI
---
0x5d: V31 = 0x45e05f43
0x62: V32 = EQ 0x45e05f43 V12
0x63: V33 = 0x207
0x66: JUMPI 0x207 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x236]
---
0x67 DUP1
0x68 PUSH4 0x4bb278f3
0x6d EQ
0x6e PUSH2 0x236
0x71 JUMPI
---
0x68: V34 = 0x4bb278f3
0x6d: V35 = EQ 0x4bb278f3 V12
0x6e: V36 = 0x236
0x71: JUMPI 0x236 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x25d]
---
0x72 DUP1
0x73 PUSH4 0x63b20117
0x78 EQ
0x79 PUSH2 0x25d
0x7c JUMPI
---
0x73: V37 = 0x63b20117
0x78: V38 = EQ 0x63b20117 V12
0x79: V39 = 0x25d
0x7c: JUMPI 0x25d V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x282]
---
0x7d DUP1
0x7e PUSH4 0x63bd1d4a
0x83 EQ
0x84 PUSH2 0x282
0x87 JUMPI
---
0x7e: V40 = 0x63bd1d4a
0x83: V41 = EQ 0x63bd1d4a V12
0x84: V42 = 0x282
0x87: JUMPI 0x282 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2b1]
---
0x88 DUP1
0x89 PUSH4 0x78e97925
0x8e EQ
0x8f PUSH2 0x2b1
0x92 JUMPI
---
0x89: V43 = 0x78e97925
0x8e: V44 = EQ 0x78e97925 V12
0x8f: V45 = 0x2b1
0x92: JUMPI 0x2b1 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2d6]
---
0x93 DUP1
0x94 PUSH4 0x7a9d5e11
0x99 EQ
0x9a PUSH2 0x2d6
0x9d JUMPI
---
0x94: V46 = 0x7a9d5e11
0x99: V47 = EQ 0x7a9d5e11 V12
0x9a: V48 = 0x2d6
0x9d: JUMPI 0x2d6 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2fd]
---
0x9e DUP1
0x9f PUSH4 0x7bb98a68
0xa4 EQ
0xa5 PUSH2 0x2fd
0xa8 JUMPI
---
0x9f: V49 = 0x7bb98a68
0xa4: V50 = EQ 0x7bb98a68 V12
0xa5: V51 = 0x2fd
0xa8: JUMPI 0x2fd V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x32c]
---
0xa9 DUP1
0xaa PUSH4 0x8ba47bdd
0xaf EQ
0xb0 PUSH2 0x32c
0xb3 JUMPI
---
0xaa: V52 = 0x8ba47bdd
0xaf: V53 = EQ 0x8ba47bdd V12
0xb0: V54 = 0x32c
0xb3: JUMPI 0x32c V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x3b7]
---
0xb4 DUP1
0xb5 PUSH4 0x8d4e4083
0xba EQ
0xbb PUSH2 0x3b7
0xbe JUMPI
---
0xb5: V55 = 0x8d4e4083
0xba: V56 = EQ 0x8d4e4083 V12
0xbb: V57 = 0x3b7
0xbe: JUMPI 0x3b7 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x3de]
---
0xbf DUP1
0xc0 PUSH4 0x9ec8ca2c
0xc5 EQ
0xc6 PUSH2 0x3de
0xc9 JUMPI
---
0xc0: V58 = 0x9ec8ca2c
0xc5: V59 = EQ 0x9ec8ca2c V12
0xc6: V60 = 0x3de
0xc9: JUMPI 0x3de V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x3f6]
---
0xca DUP1
0xcb PUSH4 0xa4d66daf
0xd0 EQ
0xd1 PUSH2 0x3f6
0xd4 JUMPI
---
0xcb: V61 = 0xa4d66daf
0xd0: V62 = EQ 0xa4d66daf V12
0xd1: V63 = 0x3f6
0xd4: JUMPI 0x3f6 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x41b]
---
0xd5 DUP1
0xd6 PUSH4 0xb4427263
0xdb EQ
0xdc PUSH2 0x41b
0xdf JUMPI
---
0xd6: V64 = 0xb4427263
0xdb: V65 = EQ 0xb4427263 V12
0xdc: V66 = 0x41b
0xdf: JUMPI 0x41b V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x437]
---
0xe0 DUP1
0xe1 PUSH4 0xc296302a
0xe6 EQ
0xe7 PUSH2 0x437
0xea JUMPI
---
0xe1: V67 = 0xc296302a
0xe6: V68 = EQ 0xc296302a V12
0xe7: V69 = 0x437
0xea: JUMPI 0x437 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x458]
---
0xeb DUP1
0xec PUSH4 0xccb98ffc
0xf1 EQ
0xf2 PUSH2 0x458
0xf5 JUMPI
---
0xec: V70 = 0xccb98ffc
0xf1: V71 = EQ 0xccb98ffc V12
0xf2: V72 = 0x458
0xf5: JUMPI 0x458 V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x470]
---
0xf6 DUP1
0xf7 PUSH4 0xccd4df82
0xfc EQ
0xfd PUSH2 0x470
0x100 JUMPI
---
0xf7: V73 = 0xccd4df82
0xfc: V74 = EQ 0xccd4df82 V12
0xfd: V75 = 0x470
0x100: JUMPI 0x470 V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0x48a]
---
0x101 DUP1
0x102 PUSH4 0xd3419bf3
0x107 EQ
0x108 PUSH2 0x48a
0x10b JUMPI
---
0x102: V76 = 0xd3419bf3
0x107: V77 = EQ 0xd3419bf3 V12
0x108: V78 = 0x48a
0x10b: JUMPI 0x48a V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x116]
---
Predecessors: [0x101]
Successors: [0x117, 0x4b9]
---
0x10c DUP1
0x10d PUSH4 0xebf0c717
0x112 EQ
0x113 PUSH2 0x4b9
0x116 JUMPI
---
0x10d: V79 = 0xebf0c717
0x112: V80 = EQ 0xebf0c717 V12
0x113: V81 = 0x4b9
0x116: JUMPI 0x4b9 V80
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x117
[0x117:0x121]
---
Predecessors: [0x10c]
Successors: [0x122, 0x4e8]
---
0x117 DUP1
0x118 PUSH4 0xf2a75fe4
0x11d EQ
0x11e PUSH2 0x4e8
0x121 JUMPI
---
0x118: V82 = 0xf2a75fe4
0x11d: V83 = EQ 0xf2a75fe4 V12
0x11e: V84 = 0x4e8
0x121: JUMPI 0x4e8 V83
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x122
[0x122:0x122]
---
Predecessors: [0x0, 0x117]
Successors: [0x123]
---
0x122 JUMPDEST
---
0x122: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x123
[0x123:0x12a]
---
Predecessors: [0x122]
Successors: [0x4fd]
---
0x123 JUMPDEST
0x124 PUSH2 0x12b
0x127 PUSH2 0x4fd
0x12a JUMP
---
0x123: JUMPDEST 
0x124: V85 = 0x12b
0x127: V86 = 0x4fd
0x12a: JUMP 0x4fd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12b]
Exit stack: [V12, 0x12b]

================================

Block 0x12b
[0x12b:0x12c]
---
Predecessors: [0x7e5]
Successors: [0x12d]
---
0x12b JUMPDEST
0x12c POP
---
0x12b: JUMPDEST 
---
Entry stack: [V12, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x12d
[0x12d:0x12e]
---
Predecessors: [0x12b, 0x83b, 0x993, 0x9e1, 0xa06, 0xa39]
Successors: []
---
0x12d JUMPDEST
0x12e STOP
---
0x12d: JUMPDEST 
0x12e: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12f
[0x12f:0x135]
---
Predecessors: [0xb]
Successors: [0x136, 0x13a]
---
0x12f JUMPDEST
0x130 CALLVALUE
0x131 ISZERO
0x132 PUSH2 0x13a
0x135 JUMPI
---
0x12f: JUMPDEST 
0x130: V87 = CALLVALUE
0x131: V88 = ISZERO V87
0x132: V89 = 0x13a
0x135: JUMPI 0x13a V88
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x136
[0x136:0x139]
---
Predecessors: [0x12f]
Successors: []
---
0x136 PUSH1 0x0
0x138 DUP1
0x139 REVERT
---
0x136: V90 = 0x0
0x139: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13a
[0x13a:0x141]
---
Predecessors: [0x12f]
Successors: [0x7ea]
---
0x13a JUMPDEST
0x13b PUSH2 0x142
0x13e PUSH2 0x7ea
0x141 JUMP
---
0x13a: JUMPDEST 
0x13b: V91 = 0x142
0x13e: V92 = 0x7ea
0x141: JUMP 0x7ea
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x142]
Exit stack: [V12, 0x142]

================================

Block 0x142
[0x142:0x15d]
---
Predecessors: [0x7ea, 0x83d, 0x898, 0x8bb, 0xa3c, 0xa4b]
Successors: []
---
0x142 JUMPDEST
0x143 PUSH1 0x40
0x145 MLOAD
0x146 PUSH1 0x1
0x148 PUSH1 0xa0
0x14a PUSH1 0x2
0x14c EXP
0x14d SUB
0x14e SWAP1
0x14f SWAP2
0x150 AND
0x151 DUP2
0x152 MSTORE
0x153 PUSH1 0x20
0x155 ADD
0x156 PUSH1 0x40
0x158 MLOAD
0x159 DUP1
0x15a SWAP2
0x15b SUB
0x15c SWAP1
0x15d RETURN
---
0x142: JUMPDEST 
0x143: V93 = 0x40
0x145: V94 = M[0x40]
0x146: V95 = 0x1
0x148: V96 = 0xa0
0x14a: V97 = 0x2
0x14c: V98 = EXP 0x2 0xa0
0x14d: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0x150: V100 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x152: M[V94] = V100
0x153: V101 = 0x20
0x155: V102 = ADD 0x20 V94
0x156: V103 = 0x40
0x158: V104 = M[0x40]
0x15b: V105 = SUB V102 V104
0x15d: RETURN V104 V105
---
Entry stack: [V12, 0x142, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x142]

================================

Block 0x15e
[0x15e:0x164]
---
Predecessors: [0x25]
Successors: [0x165, 0x169]
---
0x15e JUMPDEST
0x15f CALLVALUE
0x160 ISZERO
0x161 PUSH2 0x169
0x164 JUMPI
---
0x15e: JUMPDEST 
0x15f: V106 = CALLVALUE
0x160: V107 = ISZERO V106
0x161: V108 = 0x169
0x164: JUMPI 0x169 V107
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x165
[0x165:0x168]
---
Predecessors: [0x15e]
Successors: []
---
0x165 PUSH1 0x0
0x167 DUP1
0x168 REVERT
---
0x165: V109 = 0x0
0x168: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x169
[0x169:0x170]
---
Predecessors: [0x15e]
Successors: [0x7f9]
---
0x169 JUMPDEST
0x16a PUSH2 0x171
0x16d PUSH2 0x7f9
0x170 JUMP
---
0x169: JUMPDEST 
0x16a: V110 = 0x171
0x16d: V111 = 0x7f9
0x170: JUMP 0x7f9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x171]
Exit stack: [V12, 0x171]

================================

Block 0x171
[0x171:0x182]
---
Predecessors: [0x7f9, 0x7ff, 0x805, 0x80b, 0x892, 0x8a7, 0x996]
Successors: []
---
0x171 JUMPDEST
0x172 PUSH1 0x40
0x174 MLOAD
0x175 SWAP1
0x176 DUP2
0x177 MSTORE
0x178 PUSH1 0x20
0x17a ADD
0x17b PUSH1 0x40
0x17d MLOAD
0x17e DUP1
0x17f SWAP2
0x180 SUB
0x181 SWAP1
0x182 RETURN
---
0x171: JUMPDEST 
0x172: V112 = 0x40
0x174: V113 = M[0x40]
0x177: M[V113] = S0
0x178: V114 = 0x20
0x17a: V115 = ADD 0x20 V113
0x17b: V116 = 0x40
0x17d: V117 = M[0x40]
0x180: V118 = SUB V115 V117
0x182: RETURN V117 V118
---
Entry stack: [V12, 0x171, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x171]

================================

Block 0x183
[0x183:0x189]
---
Predecessors: [0x30]
Successors: [0x18a, 0x18e]
---
0x183 JUMPDEST
0x184 CALLVALUE
0x185 ISZERO
0x186 PUSH2 0x18e
0x189 JUMPI
---
0x183: JUMPDEST 
0x184: V119 = CALLVALUE
0x185: V120 = ISZERO V119
0x186: V121 = 0x18e
0x189: JUMPI 0x18e V120
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18a
[0x18a:0x18d]
---
Predecessors: [0x183]
Successors: []
---
0x18a PUSH1 0x0
0x18c DUP1
0x18d REVERT
---
0x18a: V122 = 0x0
0x18d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18e
[0x18e:0x195]
---
Predecessors: [0x183]
Successors: [0x7ff]
---
0x18e JUMPDEST
0x18f PUSH2 0x171
0x192 PUSH2 0x7ff
0x195 JUMP
---
0x18e: JUMPDEST 
0x18f: V123 = 0x171
0x192: V124 = 0x7ff
0x195: JUMP 0x7ff
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x171]
Exit stack: [V12, 0x171]

================================

Block 0x196
[0x196:0x1a7]
---
Predecessors: []
Successors: []
---
0x196 JUMPDEST
0x197 PUSH1 0x40
0x199 MLOAD
0x19a SWAP1
0x19b DUP2
0x19c MSTORE
0x19d PUSH1 0x20
0x19f ADD
0x1a0 PUSH1 0x40
0x1a2 MLOAD
0x1a3 DUP1
0x1a4 SWAP2
0x1a5 SUB
0x1a6 SWAP1
0x1a7 RETURN
---
0x196: JUMPDEST 
0x197: V125 = 0x40
0x199: V126 = M[0x40]
0x19c: M[V126] = S0
0x19d: V127 = 0x20
0x19f: V128 = ADD 0x20 V126
0x1a0: V129 = 0x40
0x1a2: V130 = M[0x40]
0x1a5: V131 = SUB V128 V130
0x1a7: RETURN V130 V131
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a8
[0x1a8:0x1ae]
---
Predecessors: [0x3b]
Successors: [0x1af, 0x1b3]
---
0x1a8 JUMPDEST
0x1a9 CALLVALUE
0x1aa ISZERO
0x1ab PUSH2 0x1b3
0x1ae JUMPI
---
0x1a8: JUMPDEST 
0x1a9: V132 = CALLVALUE
0x1aa: V133 = ISZERO V132
0x1ab: V134 = 0x1b3
0x1ae: JUMPI 0x1b3 V133
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1af
[0x1af:0x1b2]
---
Predecessors: [0x1a8]
Successors: []
---
0x1af PUSH1 0x0
0x1b1 DUP1
0x1b2 REVERT
---
0x1af: V135 = 0x0
0x1b2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b3
[0x1b3:0x1ba]
---
Predecessors: [0x1a8]
Successors: [0x805]
---
0x1b3 JUMPDEST
0x1b4 PUSH2 0x171
0x1b7 PUSH2 0x805
0x1ba JUMP
---
0x1b3: JUMPDEST 
0x1b4: V136 = 0x171
0x1b7: V137 = 0x805
0x1ba: JUMP 0x805
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x171]
Exit stack: [V12, 0x171]

================================

Block 0x1bb
[0x1bb:0x1cc]
---
Predecessors: []
Successors: []
---
0x1bb JUMPDEST
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf SWAP1
0x1c0 DUP2
0x1c1 MSTORE
0x1c2 PUSH1 0x20
0x1c4 ADD
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 DUP1
0x1c9 SWAP2
0x1ca SUB
0x1cb SWAP1
0x1cc RETURN
---
0x1bb: JUMPDEST 
0x1bc: V138 = 0x40
0x1be: V139 = M[0x40]
0x1c1: M[V139] = S0
0x1c2: V140 = 0x20
0x1c4: V141 = ADD 0x20 V139
0x1c5: V142 = 0x40
0x1c7: V143 = M[0x40]
0x1ca: V144 = SUB V141 V143
0x1cc: RETURN V143 V144
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1cd
[0x1cd:0x1d3]
---
Predecessors: [0x46]
Successors: [0x1d4, 0x1d8]
---
0x1cd JUMPDEST
0x1ce CALLVALUE
0x1cf ISZERO
0x1d0 PUSH2 0x1d8
0x1d3 JUMPI
---
0x1cd: JUMPDEST 
0x1ce: V145 = CALLVALUE
0x1cf: V146 = ISZERO V145
0x1d0: V147 = 0x1d8
0x1d3: JUMPI 0x1d8 V146
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d4
[0x1d4:0x1d7]
---
Predecessors: [0x1cd]
Successors: []
---
0x1d4 PUSH1 0x0
0x1d6 DUP1
0x1d7 REVERT
---
0x1d4: V148 = 0x0
0x1d7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d8
[0x1d8:0x1df]
---
Predecessors: [0x1cd]
Successors: [0x80b]
---
0x1d8 JUMPDEST
0x1d9 PUSH2 0x171
0x1dc PUSH2 0x80b
0x1df JUMP
---
0x1d8: JUMPDEST 
0x1d9: V149 = 0x171
0x1dc: V150 = 0x80b
0x1df: JUMP 0x80b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x171]
Exit stack: [V12, 0x171]

================================

Block 0x1e0
[0x1e0:0x1f1]
---
Predecessors: []
Successors: []
---
0x1e0 JUMPDEST
0x1e1 PUSH1 0x40
0x1e3 MLOAD
0x1e4 SWAP1
0x1e5 DUP2
0x1e6 MSTORE
0x1e7 PUSH1 0x20
0x1e9 ADD
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed DUP1
0x1ee SWAP2
0x1ef SUB
0x1f0 SWAP1
0x1f1 RETURN
---
0x1e0: JUMPDEST 
0x1e1: V151 = 0x40
0x1e3: V152 = M[0x40]
0x1e6: M[V152] = S0
0x1e7: V153 = 0x20
0x1e9: V154 = ADD 0x20 V152
0x1ea: V155 = 0x40
0x1ec: V156 = M[0x40]
0x1ef: V157 = SUB V154 V156
0x1f1: RETURN V156 V157
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1f2
[0x1f2:0x1f8]
---
Predecessors: [0x51]
Successors: [0x1f9, 0x1fd]
---
0x1f2 JUMPDEST
0x1f3 CALLVALUE
0x1f4 ISZERO
0x1f5 PUSH2 0x1fd
0x1f8 JUMPI
---
0x1f2: JUMPDEST 
0x1f3: V158 = CALLVALUE
0x1f4: V159 = ISZERO V158
0x1f5: V160 = 0x1fd
0x1f8: JUMPI 0x1fd V159
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f9
[0x1f9:0x1fc]
---
Predecessors: [0x1f2]
Successors: []
---
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc REVERT
---
0x1f9: V161 = 0x0
0x1fc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fd
[0x1fd:0x204]
---
Predecessors: [0x1f2]
Successors: [0x811]
---
0x1fd JUMPDEST
0x1fe PUSH2 0x12d
0x201 PUSH2 0x811
0x204 JUMP
---
0x1fd: JUMPDEST 
0x1fe: V162 = 0x12d
0x201: V163 = 0x811
0x204: JUMP 0x811
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d]
Exit stack: [V12, 0x12d]

================================

Block 0x205
[0x205:0x206]
---
Predecessors: []
Successors: []
---
0x205 JUMPDEST
0x206 STOP
---
0x205: JUMPDEST 
0x206: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x207
[0x207:0x20d]
---
Predecessors: [0x5c]
Successors: [0x20e, 0x212]
---
0x207 JUMPDEST
0x208 CALLVALUE
0x209 ISZERO
0x20a PUSH2 0x212
0x20d JUMPI
---
0x207: JUMPDEST 
0x208: V164 = CALLVALUE
0x209: V165 = ISZERO V164
0x20a: V166 = 0x212
0x20d: JUMPI 0x212 V165
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: [0x207]
Successors: []
---
0x20e PUSH1 0x0
0x210 DUP1
0x211 REVERT
---
0x20e: V167 = 0x0
0x211: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x212
[0x212:0x219]
---
Predecessors: [0x207]
Successors: [0x83d]
---
0x212 JUMPDEST
0x213 PUSH2 0x142
0x216 PUSH2 0x83d
0x219 JUMP
---
0x212: JUMPDEST 
0x213: V168 = 0x142
0x216: V169 = 0x83d
0x219: JUMP 0x83d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x142]
Exit stack: [V12, 0x142]

================================

Block 0x21a
[0x21a:0x235]
---
Predecessors: []
Successors: []
---
0x21a JUMPDEST
0x21b PUSH1 0x40
0x21d MLOAD
0x21e PUSH1 0x1
0x220 PUSH1 0xa0
0x222 PUSH1 0x2
0x224 EXP
0x225 SUB
0x226 SWAP1
0x227 SWAP2
0x228 AND
0x229 DUP2
0x22a MSTORE
0x22b PUSH1 0x20
0x22d ADD
0x22e PUSH1 0x40
0x230 MLOAD
0x231 DUP1
0x232 SWAP2
0x233 SUB
0x234 SWAP1
0x235 RETURN
---
0x21a: JUMPDEST 
0x21b: V170 = 0x40
0x21d: V171 = M[0x40]
0x21e: V172 = 0x1
0x220: V173 = 0xa0
0x222: V174 = 0x2
0x224: V175 = EXP 0x2 0xa0
0x225: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x228: V177 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x22a: M[V171] = V177
0x22b: V178 = 0x20
0x22d: V179 = ADD 0x20 V171
0x22e: V180 = 0x40
0x230: V181 = M[0x40]
0x233: V182 = SUB V179 V181
0x235: RETURN V181 V182
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x236
[0x236:0x23c]
---
Predecessors: [0x67]
Successors: [0x23d, 0x241]
---
0x236 JUMPDEST
0x237 CALLVALUE
0x238 ISZERO
0x239 PUSH2 0x241
0x23c JUMPI
---
0x236: JUMPDEST 
0x237: V183 = CALLVALUE
0x238: V184 = ISZERO V183
0x239: V185 = 0x241
0x23c: JUMPI 0x241 V184
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23d
[0x23d:0x240]
---
Predecessors: [0x236]
Successors: []
---
0x23d PUSH1 0x0
0x23f DUP1
0x240 REVERT
---
0x23d: V186 = 0x0
0x240: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x241
[0x241:0x248]
---
Predecessors: [0x236]
Successors: [0x84c]
---
0x241 JUMPDEST
0x242 PUSH2 0x249
0x245 PUSH2 0x84c
0x248 JUMP
---
0x241: JUMPDEST 
0x242: V187 = 0x249
0x245: V188 = 0x84c
0x248: JUMP 0x84c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249]
Exit stack: [V12, 0x249]

================================

Block 0x249
[0x249:0x25c]
---
Predecessors: [0x7e5, 0x88f, 0x8ad, 0x968]
Successors: []
---
0x249 JUMPDEST
0x24a PUSH1 0x40
0x24c MLOAD
0x24d SWAP1
0x24e ISZERO
0x24f ISZERO
0x250 DUP2
0x251 MSTORE
0x252 PUSH1 0x20
0x254 ADD
0x255 PUSH1 0x40
0x257 MLOAD
0x258 DUP1
0x259 SWAP2
0x25a SUB
0x25b SWAP1
0x25c RETURN
---
0x249: JUMPDEST 
0x24a: V189 = 0x40
0x24c: V190 = M[0x40]
0x24e: V191 = ISZERO S0
0x24f: V192 = ISZERO V191
0x251: M[V190] = V192
0x252: V193 = 0x20
0x254: V194 = ADD 0x20 V190
0x255: V195 = 0x40
0x257: V196 = M[0x40]
0x25a: V197 = SUB V194 V196
0x25c: RETURN V196 V197
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S2, S1]

================================

Block 0x25d
[0x25d:0x263]
---
Predecessors: [0x72]
Successors: [0x264, 0x268]
---
0x25d JUMPDEST
0x25e CALLVALUE
0x25f ISZERO
0x260 PUSH2 0x268
0x263 JUMPI
---
0x25d: JUMPDEST 
0x25e: V198 = CALLVALUE
0x25f: V199 = ISZERO V198
0x260: V200 = 0x268
0x263: JUMPI 0x268 V199
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x264
[0x264:0x267]
---
Predecessors: [0x25d]
Successors: []
---
0x264 PUSH1 0x0
0x266 DUP1
0x267 REVERT
---
0x264: V201 = 0x0
0x267: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x268
[0x268:0x26f]
---
Predecessors: [0x25d]
Successors: [0x892]
---
0x268 JUMPDEST
0x269 PUSH2 0x171
0x26c PUSH2 0x892
0x26f JUMP
---
0x268: JUMPDEST 
0x269: V202 = 0x171
0x26c: V203 = 0x892
0x26f: JUMP 0x892
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x171]
Exit stack: [V12, 0x171]

================================

Block 0x270
[0x270:0x281]
---
Predecessors: []
Successors: []
---
0x270 JUMPDEST
0x271 PUSH1 0x40
0x273 MLOAD
0x274 SWAP1
0x275 DUP2
0x276 MSTORE
0x277 PUSH1 0x20
0x279 ADD
0x27a PUSH1 0x40
0x27c MLOAD
0x27d DUP1
0x27e SWAP2
0x27f SUB
0x280 SWAP1
0x281 RETURN
---
0x270: JUMPDEST 
0x271: V204 = 0x40
0x273: V205 = M[0x40]
0x276: M[V205] = S0
0x277: V206 = 0x20
0x279: V207 = ADD 0x20 V205
0x27a: V208 = 0x40
0x27c: V209 = M[0x40]
0x27f: V210 = SUB V207 V209
0x281: RETURN V209 V210
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x282
[0x282:0x288]
---
Predecessors: [0x7d]
Successors: [0x289, 0x28d]
---
0x282 JUMPDEST
0x283 CALLVALUE
0x284 ISZERO
0x285 PUSH2 0x28d
0x288 JUMPI
---
0x282: JUMPDEST 
0x283: V211 = CALLVALUE
0x284: V212 = ISZERO V211
0x285: V213 = 0x28d
0x288: JUMPI 0x28d V212
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x289
[0x289:0x28c]
---
Predecessors: [0x282]
Successors: []
---
0x289 PUSH1 0x0
0x28b DUP1
0x28c REVERT
---
0x289: V214 = 0x0
0x28c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28d
[0x28d:0x294]
---
Predecessors: [0x282]
Successors: [0x898]
---
0x28d JUMPDEST
0x28e PUSH2 0x142
0x291 PUSH2 0x898
0x294 JUMP
---
0x28d: JUMPDEST 
0x28e: V215 = 0x142
0x291: V216 = 0x898
0x294: JUMP 0x898
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x142]
Exit stack: [V12, 0x142]

================================

Block 0x295
[0x295:0x2b0]
---
Predecessors: []
Successors: []
---
0x295 JUMPDEST
0x296 PUSH1 0x40
0x298 MLOAD
0x299 PUSH1 0x1
0x29b PUSH1 0xa0
0x29d PUSH1 0x2
0x29f EXP
0x2a0 SUB
0x2a1 SWAP1
0x2a2 SWAP2
0x2a3 AND
0x2a4 DUP2
0x2a5 MSTORE
0x2a6 PUSH1 0x20
0x2a8 ADD
0x2a9 PUSH1 0x40
0x2ab MLOAD
0x2ac DUP1
0x2ad SWAP2
0x2ae SUB
0x2af SWAP1
0x2b0 RETURN
---
0x295: JUMPDEST 
0x296: V217 = 0x40
0x298: V218 = M[0x40]
0x299: V219 = 0x1
0x29b: V220 = 0xa0
0x29d: V221 = 0x2
0x29f: V222 = EXP 0x2 0xa0
0x2a0: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a3: V224 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: M[V218] = V224
0x2a6: V225 = 0x20
0x2a8: V226 = ADD 0x20 V218
0x2a9: V227 = 0x40
0x2ab: V228 = M[0x40]
0x2ae: V229 = SUB V226 V228
0x2b0: RETURN V228 V229
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b1
[0x2b1:0x2b7]
---
Predecessors: [0x88]
Successors: [0x2b8, 0x2bc]
---
0x2b1 JUMPDEST
0x2b2 CALLVALUE
0x2b3 ISZERO
0x2b4 PUSH2 0x2bc
0x2b7 JUMPI
---
0x2b1: JUMPDEST 
0x2b2: V230 = CALLVALUE
0x2b3: V231 = ISZERO V230
0x2b4: V232 = 0x2bc
0x2b7: JUMPI 0x2bc V231
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b8
[0x2b8:0x2bb]
---
Predecessors: [0x2b1]
Successors: []
---
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb REVERT
---
0x2b8: V233 = 0x0
0x2bb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bc
[0x2bc:0x2c3]
---
Predecessors: [0x2b1]
Successors: [0x8a7]
---
0x2bc JUMPDEST
0x2bd PUSH2 0x171
0x2c0 PUSH2 0x8a7
0x2c3 JUMP
---
0x2bc: JUMPDEST 
0x2bd: V234 = 0x171
0x2c0: V235 = 0x8a7
0x2c3: JUMP 0x8a7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x171]
Exit stack: [V12, 0x171]

================================

Block 0x2c4
[0x2c4:0x2d5]
---
Predecessors: []
Successors: []
---
0x2c4 JUMPDEST
0x2c5 PUSH1 0x40
0x2c7 MLOAD
0x2c8 SWAP1
0x2c9 DUP2
0x2ca MSTORE
0x2cb PUSH1 0x20
0x2cd ADD
0x2ce PUSH1 0x40
0x2d0 MLOAD
0x2d1 DUP1
0x2d2 SWAP2
0x2d3 SUB
0x2d4 SWAP1
0x2d5 RETURN
---
0x2c4: JUMPDEST 
0x2c5: V236 = 0x40
0x2c7: V237 = M[0x40]
0x2ca: M[V237] = S0
0x2cb: V238 = 0x20
0x2cd: V239 = ADD 0x20 V237
0x2ce: V240 = 0x40
0x2d0: V241 = M[0x40]
0x2d3: V242 = SUB V239 V241
0x2d5: RETURN V241 V242
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d6
[0x2d6:0x2dc]
---
Predecessors: [0x93]
Successors: [0x2dd, 0x2e1]
---
0x2d6 JUMPDEST
0x2d7 CALLVALUE
0x2d8 ISZERO
0x2d9 PUSH2 0x2e1
0x2dc JUMPI
---
0x2d6: JUMPDEST 
0x2d7: V243 = CALLVALUE
0x2d8: V244 = ISZERO V243
0x2d9: V245 = 0x2e1
0x2dc: JUMPI 0x2e1 V244
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2dd
[0x2dd:0x2e0]
---
Predecessors: [0x2d6]
Successors: []
---
0x2dd PUSH1 0x0
0x2df DUP1
0x2e0 REVERT
---
0x2dd: V246 = 0x0
0x2e0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e1
[0x2e1:0x2e8]
---
Predecessors: [0x2d6]
Successors: [0x8ad]
---
0x2e1 JUMPDEST
0x2e2 PUSH2 0x249
0x2e5 PUSH2 0x8ad
0x2e8 JUMP
---
0x2e1: JUMPDEST 
0x2e2: V247 = 0x249
0x2e5: V248 = 0x8ad
0x2e8: JUMP 0x8ad
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249]
Exit stack: [V12, 0x249]

================================

Block 0x2e9
[0x2e9:0x2fc]
---
Predecessors: []
Successors: []
---
0x2e9 JUMPDEST
0x2ea PUSH1 0x40
0x2ec MLOAD
0x2ed SWAP1
0x2ee ISZERO
0x2ef ISZERO
0x2f0 DUP2
0x2f1 MSTORE
0x2f2 PUSH1 0x20
0x2f4 ADD
0x2f5 PUSH1 0x40
0x2f7 MLOAD
0x2f8 DUP1
0x2f9 SWAP2
0x2fa SUB
0x2fb SWAP1
0x2fc RETURN
---
0x2e9: JUMPDEST 
0x2ea: V249 = 0x40
0x2ec: V250 = M[0x40]
0x2ee: V251 = ISZERO S0
0x2ef: V252 = ISZERO V251
0x2f1: M[V250] = V252
0x2f2: V253 = 0x20
0x2f4: V254 = ADD 0x20 V250
0x2f5: V255 = 0x40
0x2f7: V256 = M[0x40]
0x2fa: V257 = SUB V254 V256
0x2fc: RETURN V256 V257
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2fd
[0x2fd:0x303]
---
Predecessors: [0x9e]
Successors: [0x304, 0x308]
---
0x2fd JUMPDEST
0x2fe CALLVALUE
0x2ff ISZERO
0x300 PUSH2 0x308
0x303 JUMPI
---
0x2fd: JUMPDEST 
0x2fe: V258 = CALLVALUE
0x2ff: V259 = ISZERO V258
0x300: V260 = 0x308
0x303: JUMPI 0x308 V259
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x304
[0x304:0x307]
---
Predecessors: [0x2fd]
Successors: []
---
0x304 PUSH1 0x0
0x306 DUP1
0x307 REVERT
---
0x304: V261 = 0x0
0x307: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x308
[0x308:0x30f]
---
Predecessors: [0x2fd]
Successors: [0x8bb]
---
0x308 JUMPDEST
0x309 PUSH2 0x142
0x30c PUSH2 0x8bb
0x30f JUMP
---
0x308: JUMPDEST 
0x309: V262 = 0x142
0x30c: V263 = 0x8bb
0x30f: JUMP 0x8bb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x142]
Exit stack: [V12, 0x142]

================================

Block 0x310
[0x310:0x32b]
---
Predecessors: []
Successors: []
---
0x310 JUMPDEST
0x311 PUSH1 0x40
0x313 MLOAD
0x314 PUSH1 0x1
0x316 PUSH1 0xa0
0x318 PUSH1 0x2
0x31a EXP
0x31b SUB
0x31c SWAP1
0x31d SWAP2
0x31e AND
0x31f DUP2
0x320 MSTORE
0x321 PUSH1 0x20
0x323 ADD
0x324 PUSH1 0x40
0x326 MLOAD
0x327 DUP1
0x328 SWAP2
0x329 SUB
0x32a SWAP1
0x32b RETURN
---
0x310: JUMPDEST 
0x311: V264 = 0x40
0x313: V265 = M[0x40]
0x314: V266 = 0x1
0x316: V267 = 0xa0
0x318: V268 = 0x2
0x31a: V269 = EXP 0x2 0xa0
0x31b: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31e: V271 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x320: M[V265] = V271
0x321: V272 = 0x20
0x323: V273 = ADD 0x20 V265
0x324: V274 = 0x40
0x326: V275 = M[0x40]
0x329: V276 = SUB V273 V275
0x32b: RETURN V275 V276
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x32c
[0x32c:0x332]
---
Predecessors: [0xa9]
Successors: [0x333, 0x337]
---
0x32c JUMPDEST
0x32d CALLVALUE
0x32e ISZERO
0x32f PUSH2 0x337
0x332 JUMPI
---
0x32c: JUMPDEST 
0x32d: V277 = CALLVALUE
0x32e: V278 = ISZERO V277
0x32f: V279 = 0x337
0x332: JUMPI 0x337 V278
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x333
[0x333:0x336]
---
Predecessors: [0x32c]
Successors: []
---
0x333 PUSH1 0x0
0x335 DUP1
0x336 REVERT
---
0x333: V280 = 0x0
0x336: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x337
[0x337:0x33e]
---
Predecessors: [0x32c]
Successors: [0x8ca]
---
0x337 JUMPDEST
0x338 PUSH2 0x33f
0x33b PUSH2 0x8ca
0x33e JUMP
---
0x337: JUMPDEST 
0x338: V281 = 0x33f
0x33b: V282 = 0x8ca
0x33e: JUMP 0x8ca
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x33f]
Exit stack: [V12, 0x33f]

================================

Block 0x33f
[0x33f:0x362]
---
Predecessors: [0x960]
Successors: [0x363]
---
0x33f JUMPDEST
0x340 PUSH1 0x40
0x342 MLOAD
0x343 PUSH1 0x20
0x345 DUP1
0x346 DUP3
0x347 MSTORE
0x348 DUP2
0x349 SWAP1
0x34a DUP2
0x34b ADD
0x34c DUP4
0x34d DUP2
0x34e DUP2
0x34f MLOAD
0x350 DUP2
0x351 MSTORE
0x352 PUSH1 0x20
0x354 ADD
0x355 SWAP2
0x356 POP
0x357 DUP1
0x358 MLOAD
0x359 SWAP1
0x35a PUSH1 0x20
0x35c ADD
0x35d SWAP1
0x35e DUP1
0x35f DUP4
0x360 DUP4
0x361 PUSH1 0x0
---
0x33f: JUMPDEST 
0x340: V283 = 0x40
0x342: V284 = M[0x40]
0x343: V285 = 0x20
0x347: M[V284] = 0x20
0x34b: V286 = ADD V284 0x20
0x34f: V287 = M[V847]
0x351: M[V286] = V287
0x352: V288 = 0x20
0x354: V289 = ADD 0x20 V286
0x358: V290 = M[V847]
0x35a: V291 = 0x20
0x35c: V292 = ADD 0x20 V847
0x361: V293 = 0x0
---
Entry stack: [V12, 0x33f, V847]
Stack pops: 1
Stack additions: [S0, V284, V284, V289, V292, V290, V290, V289, V292, 0x0]
Exit stack: [V12, 0x33f, V847, V284, V284, V289, V292, V290, V290, V289, V292, 0x0]

================================

Block 0x363
[0x363:0x36b]
---
Predecessors: [0x33f, 0x374]
Successors: [0x36c, 0x37c]
---
0x363 JUMPDEST
0x364 DUP4
0x365 DUP2
0x366 LT
0x367 ISZERO
0x368 PUSH2 0x37c
0x36b JUMPI
---
0x363: JUMPDEST 
0x366: V294 = LT S0 V290
0x367: V295 = ISZERO V294
0x368: V296 = 0x37c
0x36b: JUMPI 0x37c V295
---
Entry stack: [V12, 0x33f, V847, V284, V284, V289, V292, V290, V290, V289, V292, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x33f, V847, V284, V284, V289, V292, V290, V290, V289, V292, S0]

================================

Block 0x36c
[0x36c:0x373]
---
Predecessors: [0x363]
Successors: [0x374]
---
0x36c DUP1
0x36d DUP3
0x36e ADD
0x36f MLOAD
0x370 DUP2
0x371 DUP5
0x372 ADD
0x373 MSTORE
---
0x36e: V297 = ADD V292 S0
0x36f: V298 = M[V297]
0x372: V299 = ADD V289 S0
0x373: M[V299] = V298
---
Entry stack: [V12, 0x33f, V847, V284, V284, V289, V292, V290, V290, V289, V292, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x33f, V847, V284, V284, V289, V292, V290, V290, V289, V292, S0]

================================

Block 0x374
[0x374:0x37b]
---
Predecessors: [0x36c]
Successors: [0x363]
---
0x374 JUMPDEST
0x375 PUSH1 0x20
0x377 ADD
0x378 PUSH2 0x363
0x37b JUMP
---
0x374: JUMPDEST 
0x375: V300 = 0x20
0x377: V301 = ADD 0x20 S0
0x378: V302 = 0x363
0x37b: JUMP 0x363
---
Entry stack: [V12, 0x33f, V847, V284, V284, V289, V292, V290, V290, V289, V292, S0]
Stack pops: 1
Stack additions: [V301]
Exit stack: [V12, 0x33f, V847, V284, V284, V289, V292, V290, V290, V289, V292, V301]

================================

Block 0x37c
[0x37c:0x38f]
---
Predecessors: [0x363]
Successors: [0x390, 0x3a9]
---
0x37c JUMPDEST
0x37d POP
0x37e POP
0x37f POP
0x380 POP
0x381 SWAP1
0x382 POP
0x383 SWAP1
0x384 DUP2
0x385 ADD
0x386 SWAP1
0x387 PUSH1 0x1f
0x389 AND
0x38a DUP1
0x38b ISZERO
0x38c PUSH2 0x3a9
0x38f JUMPI
---
0x37c: JUMPDEST 
0x385: V303 = ADD V290 V289
0x387: V304 = 0x1f
0x389: V305 = AND 0x1f V290
0x38b: V306 = ISZERO V305
0x38c: V307 = 0x3a9
0x38f: JUMPI 0x3a9 V306
---
Entry stack: [V12, 0x33f, V847, V284, V284, V289, V292, V290, V290, V289, V292, S0]
Stack pops: 7
Stack additions: [V303, V305]
Exit stack: [V12, 0x33f, V847, V284, V284, V303, V305]

================================

Block 0x390
[0x390:0x3a8]
---
Predecessors: [0x37c]
Successors: [0x3a9]
---
0x390 DUP1
0x391 DUP3
0x392 SUB
0x393 DUP1
0x394 MLOAD
0x395 PUSH1 0x1
0x397 DUP4
0x398 PUSH1 0x20
0x39a SUB
0x39b PUSH2 0x100
0x39e EXP
0x39f SUB
0x3a0 NOT
0x3a1 AND
0x3a2 DUP2
0x3a3 MSTORE
0x3a4 PUSH1 0x20
0x3a6 ADD
0x3a7 SWAP2
0x3a8 POP
---
0x392: V308 = SUB V303 V305
0x394: V309 = M[V308]
0x395: V310 = 0x1
0x398: V311 = 0x20
0x39a: V312 = SUB 0x20 V305
0x39b: V313 = 0x100
0x39e: V314 = EXP 0x100 V312
0x39f: V315 = SUB V314 0x1
0x3a0: V316 = NOT V315
0x3a1: V317 = AND V316 V309
0x3a3: M[V308] = V317
0x3a4: V318 = 0x20
0x3a6: V319 = ADD 0x20 V308
---
Entry stack: [V12, 0x33f, V847, V284, V284, V303, V305]
Stack pops: 2
Stack additions: [V319, S0]
Exit stack: [V12, 0x33f, V847, V284, V284, V319, V305]

================================

Block 0x3a9
[0x3a9:0x3b6]
---
Predecessors: [0x37c, 0x390]
Successors: []
---
0x3a9 JUMPDEST
0x3aa POP
0x3ab SWAP3
0x3ac POP
0x3ad POP
0x3ae POP
0x3af PUSH1 0x40
0x3b1 MLOAD
0x3b2 DUP1
0x3b3 SWAP2
0x3b4 SUB
0x3b5 SWAP1
0x3b6 RETURN
---
0x3a9: JUMPDEST 
0x3af: V320 = 0x40
0x3b1: V321 = M[0x40]
0x3b4: V322 = SUB S1 V321
0x3b6: RETURN V321 V322
---
Entry stack: [V12, 0x33f, V847, V284, V284, S1, V305]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x33f]

================================

Block 0x3b7
[0x3b7:0x3bd]
---
Predecessors: [0xb4]
Successors: [0x3be, 0x3c2]
---
0x3b7 JUMPDEST
0x3b8 CALLVALUE
0x3b9 ISZERO
0x3ba PUSH2 0x3c2
0x3bd JUMPI
---
0x3b7: JUMPDEST 
0x3b8: V323 = CALLVALUE
0x3b9: V324 = ISZERO V323
0x3ba: V325 = 0x3c2
0x3bd: JUMPI 0x3c2 V324
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3be
[0x3be:0x3c1]
---
Predecessors: [0x3b7]
Successors: []
---
0x3be PUSH1 0x0
0x3c0 DUP1
0x3c1 REVERT
---
0x3be: V326 = 0x0
0x3c1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c2
[0x3c2:0x3c9]
---
Predecessors: [0x3b7]
Successors: [0x968]
---
0x3c2 JUMPDEST
0x3c3 PUSH2 0x249
0x3c6 PUSH2 0x968
0x3c9 JUMP
---
0x3c2: JUMPDEST 
0x3c3: V327 = 0x249
0x3c6: V328 = 0x968
0x3c9: JUMP 0x968
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249]
Exit stack: [V12, 0x249]

================================

Block 0x3ca
[0x3ca:0x3dd]
---
Predecessors: []
Successors: []
---
0x3ca JUMPDEST
0x3cb PUSH1 0x40
0x3cd MLOAD
0x3ce SWAP1
0x3cf ISZERO
0x3d0 ISZERO
0x3d1 DUP2
0x3d2 MSTORE
0x3d3 PUSH1 0x20
0x3d5 ADD
0x3d6 PUSH1 0x40
0x3d8 MLOAD
0x3d9 DUP1
0x3da SWAP2
0x3db SUB
0x3dc SWAP1
0x3dd RETURN
---
0x3ca: JUMPDEST 
0x3cb: V329 = 0x40
0x3cd: V330 = M[0x40]
0x3cf: V331 = ISZERO S0
0x3d0: V332 = ISZERO V331
0x3d2: M[V330] = V332
0x3d3: V333 = 0x20
0x3d5: V334 = ADD 0x20 V330
0x3d6: V335 = 0x40
0x3d8: V336 = M[0x40]
0x3db: V337 = SUB V334 V336
0x3dd: RETURN V336 V337
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3de
[0x3de:0x3e4]
---
Predecessors: [0xbf]
Successors: [0x3e5, 0x3e9]
---
0x3de JUMPDEST
0x3df CALLVALUE
0x3e0 ISZERO
0x3e1 PUSH2 0x3e9
0x3e4 JUMPI
---
0x3de: JUMPDEST 
0x3df: V338 = CALLVALUE
0x3e0: V339 = ISZERO V338
0x3e1: V340 = 0x3e9
0x3e4: JUMPI 0x3e9 V339
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e5
[0x3e5:0x3e8]
---
Predecessors: [0x3de]
Successors: []
---
0x3e5 PUSH1 0x0
0x3e7 DUP1
0x3e8 REVERT
---
0x3e5: V341 = 0x0
0x3e8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e9
[0x3e9:0x3f3]
---
Predecessors: [0x3de]
Successors: [0x971]
---
0x3e9 JUMPDEST
0x3ea PUSH2 0x12d
0x3ed PUSH1 0x4
0x3ef CALLDATALOAD
0x3f0 PUSH2 0x971
0x3f3 JUMP
---
0x3e9: JUMPDEST 
0x3ea: V342 = 0x12d
0x3ed: V343 = 0x4
0x3ef: V344 = CALLDATALOAD 0x4
0x3f0: V345 = 0x971
0x3f3: JUMP 0x971
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d, V344]
Exit stack: [V12, 0x12d, V344]

================================

Block 0x3f4
[0x3f4:0x3f5]
---
Predecessors: []
Successors: []
---
0x3f4 JUMPDEST
0x3f5 STOP
---
0x3f4: JUMPDEST 
0x3f5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3f6
[0x3f6:0x3fc]
---
Predecessors: [0xca]
Successors: [0x3fd, 0x401]
---
0x3f6 JUMPDEST
0x3f7 CALLVALUE
0x3f8 ISZERO
0x3f9 PUSH2 0x401
0x3fc JUMPI
---
0x3f6: JUMPDEST 
0x3f7: V346 = CALLVALUE
0x3f8: V347 = ISZERO V346
0x3f9: V348 = 0x401
0x3fc: JUMPI 0x401 V347
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3fd
[0x3fd:0x400]
---
Predecessors: [0x3f6]
Successors: []
---
0x3fd PUSH1 0x0
0x3ff DUP1
0x400 REVERT
---
0x3fd: V349 = 0x0
0x400: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x401
[0x401:0x408]
---
Predecessors: [0x3f6]
Successors: [0x996]
---
0x401 JUMPDEST
0x402 PUSH2 0x171
0x405 PUSH2 0x996
0x408 JUMP
---
0x401: JUMPDEST 
0x402: V350 = 0x171
0x405: V351 = 0x996
0x408: JUMP 0x996
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x171]
Exit stack: [V12, 0x171]

================================

Block 0x409
[0x409:0x41a]
---
Predecessors: []
Successors: []
---
0x409 JUMPDEST
0x40a PUSH1 0x40
0x40c MLOAD
0x40d SWAP1
0x40e DUP2
0x40f MSTORE
0x410 PUSH1 0x20
0x412 ADD
0x413 PUSH1 0x40
0x415 MLOAD
0x416 DUP1
0x417 SWAP2
0x418 SUB
0x419 SWAP1
0x41a RETURN
---
0x409: JUMPDEST 
0x40a: V352 = 0x40
0x40c: V353 = M[0x40]
0x40f: M[V353] = S0
0x410: V354 = 0x20
0x412: V355 = ADD 0x20 V353
0x413: V356 = 0x40
0x415: V357 = M[0x40]
0x418: V358 = SUB V355 V357
0x41a: RETURN V357 V358
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x41b
[0x41b:0x422]
---
Predecessors: [0xd5]
Successors: [0x4fd]
---
0x41b JUMPDEST
0x41c PUSH2 0x249
0x41f PUSH2 0x4fd
0x422 JUMP
---
0x41b: JUMPDEST 
0x41c: V359 = 0x249
0x41f: V360 = 0x4fd
0x422: JUMP 0x4fd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249]
Exit stack: [V12, 0x249]

================================

Block 0x423
[0x423:0x436]
---
Predecessors: []
Successors: []
---
0x423 JUMPDEST
0x424 PUSH1 0x40
0x426 MLOAD
0x427 SWAP1
0x428 ISZERO
0x429 ISZERO
0x42a DUP2
0x42b MSTORE
0x42c PUSH1 0x20
0x42e ADD
0x42f PUSH1 0x40
0x431 MLOAD
0x432 DUP1
0x433 SWAP2
0x434 SUB
0x435 SWAP1
0x436 RETURN
---
0x423: JUMPDEST 
0x424: V361 = 0x40
0x426: V362 = M[0x40]
0x428: V363 = ISZERO S0
0x429: V364 = ISZERO V363
0x42b: M[V362] = V364
0x42c: V365 = 0x20
0x42e: V366 = ADD 0x20 V362
0x42f: V367 = 0x40
0x431: V368 = M[0x40]
0x434: V369 = SUB V366 V368
0x436: RETURN V368 V369
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x437
[0x437:0x43d]
---
Predecessors: [0xe0]
Successors: [0x43e, 0x442]
---
0x437 JUMPDEST
0x438 CALLVALUE
0x439 ISZERO
0x43a PUSH2 0x442
0x43d JUMPI
---
0x437: JUMPDEST 
0x438: V370 = CALLVALUE
0x439: V371 = ISZERO V370
0x43a: V372 = 0x442
0x43d: JUMPI 0x442 V371
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x43e
[0x43e:0x441]
---
Predecessors: [0x437]
Successors: []
---
0x43e PUSH1 0x0
0x440 DUP1
0x441 REVERT
---
0x43e: V373 = 0x0
0x441: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x442
[0x442:0x455]
---
Predecessors: [0x437]
Successors: [0x99c]
---
0x442 JUMPDEST
0x443 PUSH2 0x12d
0x446 PUSH1 0x1
0x448 PUSH1 0xa0
0x44a PUSH1 0x2
0x44c EXP
0x44d SUB
0x44e PUSH1 0x4
0x450 CALLDATALOAD
0x451 AND
0x452 PUSH2 0x99c
0x455 JUMP
---
0x442: JUMPDEST 
0x443: V374 = 0x12d
0x446: V375 = 0x1
0x448: V376 = 0xa0
0x44a: V377 = 0x2
0x44c: V378 = EXP 0x2 0xa0
0x44d: V379 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44e: V380 = 0x4
0x450: V381 = CALLDATALOAD 0x4
0x451: V382 = AND V381 0xffffffffffffffffffffffffffffffffffffffff
0x452: V383 = 0x99c
0x455: JUMP 0x99c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d, V382]
Exit stack: [V12, 0x12d, V382]

================================

Block 0x456
[0x456:0x457]
---
Predecessors: []
Successors: []
---
0x456 JUMPDEST
0x457 STOP
---
0x456: JUMPDEST 
0x457: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x458
[0x458:0x45e]
---
Predecessors: [0xeb]
Successors: [0x45f, 0x463]
---
0x458 JUMPDEST
0x459 CALLVALUE
0x45a ISZERO
0x45b PUSH2 0x463
0x45e JUMPI
---
0x458: JUMPDEST 
0x459: V384 = CALLVALUE
0x45a: V385 = ISZERO V384
0x45b: V386 = 0x463
0x45e: JUMPI 0x463 V385
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x45f
[0x45f:0x462]
---
Predecessors: [0x458]
Successors: []
---
0x45f PUSH1 0x0
0x461 DUP1
0x462 REVERT
---
0x45f: V387 = 0x0
0x462: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x463
[0x463:0x46d]
---
Predecessors: [0x458]
Successors: [0x9e4]
---
0x463 JUMPDEST
0x464 PUSH2 0x12d
0x467 PUSH1 0x4
0x469 CALLDATALOAD
0x46a PUSH2 0x9e4
0x46d JUMP
---
0x463: JUMPDEST 
0x464: V388 = 0x12d
0x467: V389 = 0x4
0x469: V390 = CALLDATALOAD 0x4
0x46a: V391 = 0x9e4
0x46d: JUMP 0x9e4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d, V390]
Exit stack: [V12, 0x12d, V390]

================================

Block 0x46e
[0x46e:0x46f]
---
Predecessors: []
Successors: []
---
0x46e JUMPDEST
0x46f STOP
---
0x46e: JUMPDEST 
0x46f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x470
[0x470:0x476]
---
Predecessors: [0xf6]
Successors: [0x477, 0x47b]
---
0x470 JUMPDEST
0x471 CALLVALUE
0x472 ISZERO
0x473 PUSH2 0x47b
0x476 JUMPI
---
0x470: JUMPDEST 
0x471: V392 = CALLVALUE
0x472: V393 = ISZERO V392
0x473: V394 = 0x47b
0x476: JUMPI 0x47b V393
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x477
[0x477:0x47a]
---
Predecessors: [0x470]
Successors: []
---
0x477 PUSH1 0x0
0x479 DUP1
0x47a REVERT
---
0x477: V395 = 0x0
0x47a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x47b
[0x47b:0x487]
---
Predecessors: [0x470]
Successors: [0xa09]
---
0x47b JUMPDEST
0x47c PUSH2 0x12d
0x47f PUSH1 0x4
0x481 CALLDATALOAD
0x482 ISZERO
0x483 ISZERO
0x484 PUSH2 0xa09
0x487 JUMP
---
0x47b: JUMPDEST 
0x47c: V396 = 0x12d
0x47f: V397 = 0x4
0x481: V398 = CALLDATALOAD 0x4
0x482: V399 = ISZERO V398
0x483: V400 = ISZERO V399
0x484: V401 = 0xa09
0x487: JUMP 0xa09
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d, V400]
Exit stack: [V12, 0x12d, V400]

================================

Block 0x488
[0x488:0x489]
---
Predecessors: []
Successors: []
---
0x488 JUMPDEST
0x489 STOP
---
0x488: JUMPDEST 
0x489: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x48a
[0x48a:0x490]
---
Predecessors: [0x101]
Successors: [0x491, 0x495]
---
0x48a JUMPDEST
0x48b CALLVALUE
0x48c ISZERO
0x48d PUSH2 0x495
0x490 JUMPI
---
0x48a: JUMPDEST 
0x48b: V402 = CALLVALUE
0x48c: V403 = ISZERO V402
0x48d: V404 = 0x495
0x490: JUMPI 0x495 V403
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x491
[0x491:0x494]
---
Predecessors: [0x48a]
Successors: []
---
0x491 PUSH1 0x0
0x493 DUP1
0x494 REVERT
---
0x491: V405 = 0x0
0x494: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x495
[0x495:0x49c]
---
Predecessors: [0x48a]
Successors: [0xa3c]
---
0x495 JUMPDEST
0x496 PUSH2 0x142
0x499 PUSH2 0xa3c
0x49c JUMP
---
0x495: JUMPDEST 
0x496: V406 = 0x142
0x499: V407 = 0xa3c
0x49c: JUMP 0xa3c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x142]
Exit stack: [V12, 0x142]

================================

Block 0x49d
[0x49d:0x4b8]
---
Predecessors: []
Successors: []
---
0x49d JUMPDEST
0x49e PUSH1 0x40
0x4a0 MLOAD
0x4a1 PUSH1 0x1
0x4a3 PUSH1 0xa0
0x4a5 PUSH1 0x2
0x4a7 EXP
0x4a8 SUB
0x4a9 SWAP1
0x4aa SWAP2
0x4ab AND
0x4ac DUP2
0x4ad MSTORE
0x4ae PUSH1 0x20
0x4b0 ADD
0x4b1 PUSH1 0x40
0x4b3 MLOAD
0x4b4 DUP1
0x4b5 SWAP2
0x4b6 SUB
0x4b7 SWAP1
0x4b8 RETURN
---
0x49d: JUMPDEST 
0x49e: V408 = 0x40
0x4a0: V409 = M[0x40]
0x4a1: V410 = 0x1
0x4a3: V411 = 0xa0
0x4a5: V412 = 0x2
0x4a7: V413 = EXP 0x2 0xa0
0x4a8: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ab: V415 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x4ad: M[V409] = V415
0x4ae: V416 = 0x20
0x4b0: V417 = ADD 0x20 V409
0x4b1: V418 = 0x40
0x4b3: V419 = M[0x40]
0x4b6: V420 = SUB V417 V419
0x4b8: RETURN V419 V420
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4b9
[0x4b9:0x4bf]
---
Predecessors: [0x10c]
Successors: [0x4c0, 0x4c4]
---
0x4b9 JUMPDEST
0x4ba CALLVALUE
0x4bb ISZERO
0x4bc PUSH2 0x4c4
0x4bf JUMPI
---
0x4b9: JUMPDEST 
0x4ba: V421 = CALLVALUE
0x4bb: V422 = ISZERO V421
0x4bc: V423 = 0x4c4
0x4bf: JUMPI 0x4c4 V422
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c0
[0x4c0:0x4c3]
---
Predecessors: [0x4b9]
Successors: []
---
0x4c0 PUSH1 0x0
0x4c2 DUP1
0x4c3 REVERT
---
0x4c0: V424 = 0x0
0x4c3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c4
[0x4c4:0x4cb]
---
Predecessors: [0x4b9]
Successors: [0xa4b]
---
0x4c4 JUMPDEST
0x4c5 PUSH2 0x142
0x4c8 PUSH2 0xa4b
0x4cb JUMP
---
0x4c4: JUMPDEST 
0x4c5: V425 = 0x142
0x4c8: V426 = 0xa4b
0x4cb: JUMP 0xa4b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x142]
Exit stack: [V12, 0x142]

================================

Block 0x4cc
[0x4cc:0x4e7]
---
Predecessors: []
Successors: []
---
0x4cc JUMPDEST
0x4cd PUSH1 0x40
0x4cf MLOAD
0x4d0 PUSH1 0x1
0x4d2 PUSH1 0xa0
0x4d4 PUSH1 0x2
0x4d6 EXP
0x4d7 SUB
0x4d8 SWAP1
0x4d9 SWAP2
0x4da AND
0x4db DUP2
0x4dc MSTORE
0x4dd PUSH1 0x20
0x4df ADD
0x4e0 PUSH1 0x40
0x4e2 MLOAD
0x4e3 DUP1
0x4e4 SWAP2
0x4e5 SUB
0x4e6 SWAP1
0x4e7 RETURN
---
0x4cc: JUMPDEST 
0x4cd: V427 = 0x40
0x4cf: V428 = M[0x40]
0x4d0: V429 = 0x1
0x4d2: V430 = 0xa0
0x4d4: V431 = 0x2
0x4d6: V432 = EXP 0x2 0xa0
0x4d7: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4da: V434 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x4dc: M[V428] = V434
0x4dd: V435 = 0x20
0x4df: V436 = ADD 0x20 V428
0x4e0: V437 = 0x40
0x4e2: V438 = M[0x40]
0x4e5: V439 = SUB V436 V438
0x4e7: RETURN V438 V439
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4e8
[0x4e8:0x4ee]
---
Predecessors: [0x117]
Successors: [0x4ef, 0x4f3]
---
0x4e8 JUMPDEST
0x4e9 CALLVALUE
0x4ea ISZERO
0x4eb PUSH2 0x4f3
0x4ee JUMPI
---
0x4e8: JUMPDEST 
0x4e9: V440 = CALLVALUE
0x4ea: V441 = ISZERO V440
0x4eb: V442 = 0x4f3
0x4ee: JUMPI 0x4f3 V441
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ef
[0x4ef:0x4f2]
---
Predecessors: [0x4e8]
Successors: []
---
0x4ef PUSH1 0x0
0x4f1 DUP1
0x4f2 REVERT
---
0x4ef: V443 = 0x0
0x4f2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4f3
[0x4f3:0x4fa]
---
Predecessors: [0x4e8]
Successors: [0xa5a]
---
0x4f3 JUMPDEST
0x4f4 PUSH2 0x12d
0x4f7 PUSH2 0xa5a
0x4fa JUMP
---
0x4f3: JUMPDEST 
0x4f4: V444 = 0x12d
0x4f7: V445 = 0xa5a
0x4fa: JUMP 0xa5a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d]
Exit stack: [V12, 0x12d]

================================

Block 0x4fb
[0x4fb:0x4fc]
---
Predecessors: []
Successors: []
---
0x4fb JUMPDEST
0x4fc STOP
---
0x4fb: JUMPDEST 
0x4fc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4fd
[0x4fd:0x509]
---
Predecessors: [0x123, 0x41b]
Successors: [0x50a, 0x50e]
---
0x4fd JUMPDEST
0x4fe PUSH1 0x0
0x500 DUP1
0x501 DUP1
0x502 CALLVALUE
0x503 DUP2
0x504 SWAP1
0x505 GT
0x506 PUSH2 0x50e
0x509 JUMPI
---
0x4fd: JUMPDEST 
0x4fe: V446 = 0x0
0x502: V447 = CALLVALUE
0x505: V448 = GT V447 0x0
0x506: V449 = 0x50e
0x509: JUMPI 0x50e V448
---
Entry stack: [V12, {0x12b, 0x249}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0]

================================

Block 0x50a
[0x50a:0x50d]
---
Predecessors: [0x4fd]
Successors: []
---
0x50a PUSH1 0x0
0x50c DUP1
0x50d REVERT
---
0x50a: V450 = 0x0
0x50d: REVERT 0x0 0x0
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0]

================================

Block 0x50e
[0x50e:0x51a]
---
Predecessors: [0x4fd]
Successors: [0x51b, 0x522]
---
0x50e JUMPDEST
0x50f PUSH1 0x7
0x511 SLOAD
0x512 TIMESTAMP
0x513 LT
0x514 ISZERO
0x515 DUP1
0x516 ISZERO
0x517 PUSH2 0x522
0x51a JUMPI
---
0x50e: JUMPDEST 
0x50f: V451 = 0x7
0x511: V452 = S[0x7]
0x512: V453 = TIMESTAMP
0x513: V454 = LT V453 V452
0x514: V455 = ISZERO V454
0x516: V456 = ISZERO V455
0x517: V457 = 0x522
0x51a: JUMPI 0x522 V456
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V455]
Exit stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0, V455]

================================

Block 0x51b
[0x51b:0x521]
---
Predecessors: [0x50e]
Successors: [0x522]
---
0x51b POP
0x51c PUSH1 0x8
0x51e SLOAD
0x51f TIMESTAMP
0x520 GT
0x521 ISZERO
---
0x51c: V458 = 0x8
0x51e: V459 = S[0x8]
0x51f: V460 = TIMESTAMP
0x520: V461 = GT V460 V459
0x521: V462 = ISZERO V461
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0, V455]
Stack pops: 1
Stack additions: [V462]
Exit stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0, V462]

================================

Block 0x522
[0x522:0x528]
---
Predecessors: [0x50e, 0x51b]
Successors: [0x529, 0x52d]
---
0x522 JUMPDEST
0x523 ISZERO
0x524 ISZERO
0x525 PUSH2 0x52d
0x528 JUMPI
---
0x522: JUMPDEST 
0x523: V463 = ISZERO S0
0x524: V464 = ISZERO V463
0x525: V465 = 0x52d
0x528: JUMPI 0x52d V464
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0]

================================

Block 0x529
[0x529:0x52c]
---
Predecessors: [0x522]
Successors: []
---
0x529 PUSH1 0x0
0x52b DUP1
0x52c REVERT
---
0x529: V466 = 0x0
0x52c: REVERT 0x0 0x0
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0]

================================

Block 0x52d
[0x52d:0x57a]
---
Predecessors: [0x522]
Successors: [0x57b, 0x57f]
---
0x52d JUMPDEST
0x52e PUSH1 0xe
0x530 SLOAD
0x531 PUSH8 0xde0b6b3a7640000
0x53a SWAP1
0x53b PUSH1 0x1
0x53d PUSH1 0xa0
0x53f PUSH1 0x2
0x541 EXP
0x542 SUB
0x543 AND
0x544 PUSH4 0x98d5fdca
0x549 PUSH1 0x0
0x54b PUSH1 0x40
0x54d MLOAD
0x54e PUSH1 0x20
0x550 ADD
0x551 MSTORE
0x552 PUSH1 0x40
0x554 MLOAD
0x555 DUP2
0x556 PUSH4 0xffffffff
0x55b AND
0x55c PUSH1 0xe0
0x55e PUSH1 0x2
0x560 EXP
0x561 MUL
0x562 DUP2
0x563 MSTORE
0x564 PUSH1 0x4
0x566 ADD
0x567 PUSH1 0x20
0x569 PUSH1 0x40
0x56b MLOAD
0x56c DUP1
0x56d DUP4
0x56e SUB
0x56f DUP2
0x570 PUSH1 0x0
0x572 DUP8
0x573 DUP1
0x574 EXTCODESIZE
0x575 ISZERO
0x576 ISZERO
0x577 PUSH2 0x57f
0x57a JUMPI
---
0x52d: JUMPDEST 
0x52e: V467 = 0xe
0x530: V468 = S[0xe]
0x531: V469 = 0xde0b6b3a7640000
0x53b: V470 = 0x1
0x53d: V471 = 0xa0
0x53f: V472 = 0x2
0x541: V473 = EXP 0x2 0xa0
0x542: V474 = SUB 0x10000000000000000000000000000000000000000 0x1
0x543: V475 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x544: V476 = 0x98d5fdca
0x549: V477 = 0x0
0x54b: V478 = 0x40
0x54d: V479 = M[0x40]
0x54e: V480 = 0x20
0x550: V481 = ADD 0x20 V479
0x551: M[V481] = 0x0
0x552: V482 = 0x40
0x554: V483 = M[0x40]
0x556: V484 = 0xffffffff
0x55b: V485 = AND 0xffffffff 0x98d5fdca
0x55c: V486 = 0xe0
0x55e: V487 = 0x2
0x560: V488 = EXP 0x2 0xe0
0x561: V489 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x98d5fdca
0x563: M[V483] = 0x98d5fdca00000000000000000000000000000000000000000000000000000000
0x564: V490 = 0x4
0x566: V491 = ADD 0x4 V483
0x567: V492 = 0x20
0x569: V493 = 0x40
0x56b: V494 = M[0x40]
0x56e: V495 = SUB V491 V494
0x570: V496 = 0x0
0x574: V497 = EXTCODESIZE V475
0x575: V498 = ISZERO V497
0x576: V499 = ISZERO V498
0x577: V500 = 0x57f
0x57a: JUMPI 0x57f V499
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xde0b6b3a7640000, V475, 0x98d5fdca, V491, 0x20, V494, V495, V494, 0x0, V475]
Exit stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V475, 0x98d5fdca, V491, 0x20, V494, V495, V494, 0x0, V475]

================================

Block 0x57b
[0x57b:0x57e]
---
Predecessors: [0x52d]
Successors: []
---
0x57b PUSH1 0x0
0x57d DUP1
0x57e REVERT
---
0x57b: V501 = 0x0
0x57e: REVERT 0x0 0x0
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V475, 0x98d5fdca, V491, 0x20, V494, V495, V494, 0x0, V475]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V475, 0x98d5fdca, V491, 0x20, V494, V495, V494, 0x0, V475]

================================

Block 0x57f
[0x57f:0x58b]
---
Predecessors: [0x52d]
Successors: [0x58c, 0x590]
---
0x57f JUMPDEST
0x580 PUSH2 0x2c6
0x583 GAS
0x584 SUB
0x585 CALL
0x586 ISZERO
0x587 ISZERO
0x588 PUSH2 0x590
0x58b JUMPI
---
0x57f: JUMPDEST 
0x580: V502 = 0x2c6
0x583: V503 = GAS
0x584: V504 = SUB V503 0x2c6
0x585: V505 = CALL V504 V475 0x0 V494 V495 V494 0x20
0x586: V506 = ISZERO V505
0x587: V507 = ISZERO V506
0x588: V508 = 0x590
0x58b: JUMPI 0x590 V507
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V475, 0x98d5fdca, V491, 0x20, V494, V495, V494, 0x0, V475]
Stack pops: 6
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V475, 0x98d5fdca, V491]

================================

Block 0x58c
[0x58c:0x58f]
---
Predecessors: [0x57f]
Successors: []
---
0x58c PUSH1 0x0
0x58e DUP1
0x58f REVERT
---
0x58c: V509 = 0x0
0x58f: REVERT 0x0 0x0
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V475, 0x98d5fdca, V491]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V475, 0x98d5fdca, V491]

================================

Block 0x590
[0x590:0x5a1]
---
Predecessors: [0x57f]
Successors: [0x5a2, 0x5a3]
---
0x590 JUMPDEST
0x591 POP
0x592 POP
0x593 POP
0x594 PUSH1 0x40
0x596 MLOAD
0x597 DUP1
0x598 MLOAD
0x599 SWAP1
0x59a POP
0x59b DUP2
0x59c ISZERO
0x59d ISZERO
0x59e PUSH2 0x5a3
0x5a1 JUMPI
---
0x590: JUMPDEST 
0x594: V510 = 0x40
0x596: V511 = M[0x40]
0x598: V512 = M[V511]
0x59c: V513 = ISZERO 0xde0b6b3a7640000
0x59d: V514 = ISZERO 0x0
0x59e: V515 = 0x5a3
0x5a1: JUMPI 0x5a3 0x1
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V475, 0x98d5fdca, V491]
Stack pops: 4
Stack additions: [S3, V512]
Exit stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V512]

================================

Block 0x5a2
[0x5a2:0x5a2]
---
Predecessors: [0x590]
Successors: []
---
0x5a2 INVALID
---
0x5a2: INVALID 
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V512]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V512]

================================

Block 0x5a3
[0x5a3:0x5ba]
---
Predecessors: [0x590]
Successors: [0xab2]
---
0x5a3 JUMPDEST
0x5a4 PUSH1 0x9
0x5a6 SLOAD
0x5a7 SWAP2
0x5a8 SWAP1
0x5a9 DIV
0x5aa SWAP3
0x5ab POP
0x5ac PUSH2 0x5bb
0x5af CALLVALUE
0x5b0 DUP5
0x5b1 PUSH4 0xffffffff
0x5b6 PUSH2 0xab2
0x5b9 AND
0x5ba JUMP
---
0x5a3: JUMPDEST 
0x5a4: V516 = 0x9
0x5a6: V517 = S[0x9]
0x5a9: V518 = DIV V512 0xde0b6b3a7640000
0x5ac: V519 = 0x5bb
0x5af: V520 = CALLVALUE
0x5b1: V521 = 0xffffffff
0x5b6: V522 = 0xab2
0x5b9: V523 = AND 0xab2 0xffffffff
0x5ba: JUMP 0xab2
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V512]
Stack pops: 4
Stack additions: [V518, S2, V517, 0x5bb, V520, V518]
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, 0x0, V517, 0x5bb, V520, V518]

================================

Block 0x5bb
[0x5bb:0x5c2]
---
Predecessors: [0xada]
Successors: [0x5c3, 0x5c4]
---
0x5bb JUMPDEST
0x5bc DUP2
0x5bd ISZERO
0x5be ISZERO
0x5bf PUSH2 0x5c4
0x5c2 JUMPI
---
0x5bb: JUMPDEST 
0x5bd: V524 = ISZERO S1
0x5be: V525 = ISZERO V524
0x5bf: V526 = 0x5c4
0x5c2: JUMPI 0x5c4 V525
---
Entry stack: [V12, S5, {0x0, 0x12b, 0x249}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S5, {0x0, 0x12b, 0x249}, S3, S2, S1, S0]

================================

Block 0x5c3
[0x5c3:0x5c3]
---
Predecessors: [0x5bb]
Successors: []
---
0x5c3 INVALID
---
0x5c3: INVALID 
---
Entry stack: [V12, S5, {0x0, 0x12b, 0x249}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, {0x0, 0x12b, 0x249}, S3, S2, S1, S0]

================================

Block 0x5c4
[0x5c4:0x615]
---
Predecessors: [0x5bb]
Successors: [0x616, 0x61a]
---
0x5c4 JUMPDEST
0x5c5 PUSH1 0xa
0x5c7 SLOAD
0x5c8 PUSH1 0xd
0x5ca SLOAD
0x5cb SWAP3
0x5cc SWAP1
0x5cd SWAP2
0x5ce DIV
0x5cf SWAP3
0x5d0 POP
0x5d1 SWAP1
0x5d2 PUSH2 0x641
0x5d5 SWAP1
0x5d6 PUSH1 0x1
0x5d8 PUSH1 0xa0
0x5da PUSH1 0x2
0x5dc EXP
0x5dd SUB
0x5de AND
0x5df PUSH4 0xc4e41b22
0x5e4 PUSH1 0x0
0x5e6 PUSH1 0x40
0x5e8 MLOAD
0x5e9 PUSH1 0x20
0x5eb ADD
0x5ec MSTORE
0x5ed PUSH1 0x40
0x5ef MLOAD
0x5f0 DUP2
0x5f1 PUSH4 0xffffffff
0x5f6 AND
0x5f7 PUSH1 0xe0
0x5f9 PUSH1 0x2
0x5fb EXP
0x5fc MUL
0x5fd DUP2
0x5fe MSTORE
0x5ff PUSH1 0x4
0x601 ADD
0x602 PUSH1 0x20
0x604 PUSH1 0x40
0x606 MLOAD
0x607 DUP1
0x608 DUP4
0x609 SUB
0x60a DUP2
0x60b PUSH1 0x0
0x60d DUP8
0x60e DUP1
0x60f EXTCODESIZE
0x610 ISZERO
0x611 ISZERO
0x612 PUSH2 0x61a
0x615 JUMPI
---
0x5c4: JUMPDEST 
0x5c5: V527 = 0xa
0x5c7: V528 = S[0xa]
0x5c8: V529 = 0xd
0x5ca: V530 = S[0xd]
0x5ce: V531 = DIV S0 S1
0x5d2: V532 = 0x641
0x5d6: V533 = 0x1
0x5d8: V534 = 0xa0
0x5da: V535 = 0x2
0x5dc: V536 = EXP 0x2 0xa0
0x5dd: V537 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5de: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x5df: V539 = 0xc4e41b22
0x5e4: V540 = 0x0
0x5e6: V541 = 0x40
0x5e8: V542 = M[0x40]
0x5e9: V543 = 0x20
0x5eb: V544 = ADD 0x20 V542
0x5ec: M[V544] = 0x0
0x5ed: V545 = 0x40
0x5ef: V546 = M[0x40]
0x5f1: V547 = 0xffffffff
0x5f6: V548 = AND 0xffffffff 0xc4e41b22
0x5f7: V549 = 0xe0
0x5f9: V550 = 0x2
0x5fb: V551 = EXP 0x2 0xe0
0x5fc: V552 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xc4e41b22
0x5fe: M[V546] = 0xc4e41b2200000000000000000000000000000000000000000000000000000000
0x5ff: V553 = 0x4
0x601: V554 = ADD 0x4 V546
0x602: V555 = 0x20
0x604: V556 = 0x40
0x606: V557 = M[0x40]
0x609: V558 = SUB V554 V557
0x60b: V559 = 0x0
0x60f: V560 = EXTCODESIZE V538
0x610: V561 = ISZERO V560
0x611: V562 = ISZERO V561
0x612: V563 = 0x61a
0x615: JUMPI 0x61a V562
---
Entry stack: [V12, S5, {0x0, 0x12b, 0x249}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V531, V528, 0x641, V538, 0xc4e41b22, V554, 0x20, V557, V558, V557, 0x0, V538]
Exit stack: [V12, S5, {0x0, 0x12b, 0x249}, S3, V531, V528, 0x641, V538, 0xc4e41b22, V554, 0x20, V557, V558, V557, 0x0, V538]

================================

Block 0x616
[0x616:0x619]
---
Predecessors: [0x5c4]
Successors: []
---
0x616 PUSH1 0x0
0x618 DUP1
0x619 REVERT
---
0x616: V564 = 0x0
0x619: REVERT 0x0 0x0
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, V531, V528, 0x641, V538, 0xc4e41b22, V554, 0x20, V557, V558, V557, 0x0, V538]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, V531, V528, 0x641, V538, 0xc4e41b22, V554, 0x20, V557, V558, V557, 0x0, V538]

================================

Block 0x61a
[0x61a:0x626]
---
Predecessors: [0x5c4]
Successors: [0x627, 0x62b]
---
0x61a JUMPDEST
0x61b PUSH2 0x2c6
0x61e GAS
0x61f SUB
0x620 CALL
0x621 ISZERO
0x622 ISZERO
0x623 PUSH2 0x62b
0x626 JUMPI
---
0x61a: JUMPDEST 
0x61b: V565 = 0x2c6
0x61e: V566 = GAS
0x61f: V567 = SUB V566 0x2c6
0x620: V568 = CALL V567 V538 0x0 V557 V558 V557 0x20
0x621: V569 = ISZERO V568
0x622: V570 = ISZERO V569
0x623: V571 = 0x62b
0x626: JUMPI 0x62b V570
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, V531, V528, 0x641, V538, 0xc4e41b22, V554, 0x20, V557, V558, V557, 0x0, V538]
Stack pops: 6
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, V531, V528, 0x641, V538, 0xc4e41b22, V554]

================================

Block 0x627
[0x627:0x62a]
---
Predecessors: [0x61a]
Successors: []
---
0x627 PUSH1 0x0
0x629 DUP1
0x62a REVERT
---
0x627: V572 = 0x0
0x62a: REVERT 0x0 0x0
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, S5, S4, 0x641, S2, 0xc4e41b22, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, S5, S4, 0x641, S2, 0xc4e41b22, S0]

================================

Block 0x62b
[0x62b:0x640]
---
Predecessors: [0x61a]
Successors: [0xae1]
---
0x62b JUMPDEST
0x62c POP
0x62d POP
0x62e POP
0x62f PUSH1 0x40
0x631 MLOAD
0x632 DUP1
0x633 MLOAD
0x634 DUP5
0x635 SWAP2
0x636 POP
0x637 PUSH4 0xffffffff
0x63c PUSH2 0xae1
0x63f AND
0x640 JUMP
---
0x62b: JUMPDEST 
0x62f: V573 = 0x40
0x631: V574 = M[0x40]
0x633: V575 = M[V574]
0x637: V576 = 0xffffffff
0x63c: V577 = 0xae1
0x63f: V578 = AND 0xae1 0xffffffff
0x640: JUMP 0xae1
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, S5, S4, 0x641, S2, 0xc4e41b22, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S5, V575]
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, S5, S4, 0x641, S5, V575]

================================

Block 0x641
[0x641:0x647]
---
Predecessors: [0xada]
Successors: [0x648, 0x64c]
---
0x641 JUMPDEST
0x642 GT
0x643 ISZERO
0x644 PUSH2 0x64c
0x647 JUMPI
---
0x641: JUMPDEST 
0x642: V579 = GT S0 S1
0x643: V580 = ISZERO V579
0x644: V581 = 0x64c
0x647: JUMPI 0x64c V580
---
Entry stack: [V12, S5, {0x0, 0x12b, 0x249}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S5, {0x0, 0x12b, 0x249}, S3, S2]

================================

Block 0x648
[0x648:0x64b]
---
Predecessors: [0x641]
Successors: []
---
0x648 PUSH1 0x0
0x64a DUP1
0x64b REVERT
---
0x648: V582 = 0x0
0x64b: REVERT 0x0 0x0
---
Entry stack: [V12, S3, {0x0, 0x12b, 0x249}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0x0, 0x12b, 0x249}, S1, S0]

================================

Block 0x64c
[0x64c:0x65e]
---
Predecessors: [0x641]
Successors: [0xae1]
---
0x64c JUMPDEST
0x64d PUSH1 0x4
0x64f SLOAD
0x650 PUSH2 0x65f
0x653 SWAP1
0x654 DUP3
0x655 PUSH4 0xffffffff
0x65a PUSH2 0xae1
0x65d AND
0x65e JUMP
---
0x64c: JUMPDEST 
0x64d: V583 = 0x4
0x64f: V584 = S[0x4]
0x650: V585 = 0x65f
0x655: V586 = 0xffffffff
0x65a: V587 = 0xae1
0x65d: V588 = AND 0xae1 0xffffffff
0x65e: JUMP 0xae1
---
Entry stack: [V12, S3, {0x0, 0x12b, 0x249}, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x65f, V584, S0]
Exit stack: [V12, S3, {0x0, 0x12b, 0x249}, S1, S0, 0x65f, V584, S0]

================================

Block 0x65f
[0x65f:0x6bc]
---
Predecessors: [0xada]
Successors: [0x6bd, 0x6c1]
---
0x65f JUMPDEST
0x660 PUSH1 0x4
0x662 SSTORE
0x663 PUSH1 0xd
0x665 SLOAD
0x666 PUSH1 0x1
0x668 PUSH1 0xa0
0x66a PUSH1 0x2
0x66c EXP
0x66d SUB
0x66e AND
0x66f PUSH4 0x66e7ea0f
0x674 CALLER
0x675 DUP4
0x676 PUSH1 0x0
0x678 PUSH1 0x40
0x67a MLOAD
0x67b PUSH1 0x20
0x67d ADD
0x67e MSTORE
0x67f PUSH1 0x40
0x681 MLOAD
0x682 PUSH1 0xe0
0x684 PUSH1 0x2
0x686 EXP
0x687 PUSH4 0xffffffff
0x68c DUP6
0x68d AND
0x68e MUL
0x68f DUP2
0x690 MSTORE
0x691 PUSH1 0x1
0x693 PUSH1 0xa0
0x695 PUSH1 0x2
0x697 EXP
0x698 SUB
0x699 SWAP1
0x69a SWAP3
0x69b AND
0x69c PUSH1 0x4
0x69e DUP4
0x69f ADD
0x6a0 MSTORE
0x6a1 PUSH1 0x24
0x6a3 DUP3
0x6a4 ADD
0x6a5 MSTORE
0x6a6 PUSH1 0x44
0x6a8 ADD
0x6a9 PUSH1 0x20
0x6ab PUSH1 0x40
0x6ad MLOAD
0x6ae DUP1
0x6af DUP4
0x6b0 SUB
0x6b1 DUP2
0x6b2 PUSH1 0x0
0x6b4 DUP8
0x6b5 DUP1
0x6b6 EXTCODESIZE
0x6b7 ISZERO
0x6b8 ISZERO
0x6b9 PUSH2 0x6c1
0x6bc JUMPI
---
0x65f: JUMPDEST 
0x660: V589 = 0x4
0x662: S[0x4] = S0
0x663: V590 = 0xd
0x665: V591 = S[0xd]
0x666: V592 = 0x1
0x668: V593 = 0xa0
0x66a: V594 = 0x2
0x66c: V595 = EXP 0x2 0xa0
0x66d: V596 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66e: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff V591
0x66f: V598 = 0x66e7ea0f
0x674: V599 = CALLER
0x676: V600 = 0x0
0x678: V601 = 0x40
0x67a: V602 = M[0x40]
0x67b: V603 = 0x20
0x67d: V604 = ADD 0x20 V602
0x67e: M[V604] = 0x0
0x67f: V605 = 0x40
0x681: V606 = M[0x40]
0x682: V607 = 0xe0
0x684: V608 = 0x2
0x686: V609 = EXP 0x2 0xe0
0x687: V610 = 0xffffffff
0x68d: V611 = AND 0x66e7ea0f 0xffffffff
0x68e: V612 = MUL 0x66e7ea0f 0x100000000000000000000000000000000000000000000000000000000
0x690: M[V606] = 0x66e7ea0f00000000000000000000000000000000000000000000000000000000
0x691: V613 = 0x1
0x693: V614 = 0xa0
0x695: V615 = 0x2
0x697: V616 = EXP 0x2 0xa0
0x698: V617 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69b: V618 = AND V599 0xffffffffffffffffffffffffffffffffffffffff
0x69c: V619 = 0x4
0x69f: V620 = ADD V606 0x4
0x6a0: M[V620] = V618
0x6a1: V621 = 0x24
0x6a4: V622 = ADD V606 0x24
0x6a5: M[V622] = S1
0x6a6: V623 = 0x44
0x6a8: V624 = ADD 0x44 V606
0x6a9: V625 = 0x20
0x6ab: V626 = 0x40
0x6ad: V627 = M[0x40]
0x6b0: V628 = SUB V624 V627
0x6b2: V629 = 0x0
0x6b6: V630 = EXTCODESIZE V597
0x6b7: V631 = ISZERO V630
0x6b8: V632 = ISZERO V631
0x6b9: V633 = 0x6c1
0x6bc: JUMPI 0x6c1 V632
---
Entry stack: [V12, S5, {0x0, 0x12b, 0x249}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V597, 0x66e7ea0f, V624, 0x20, V627, V628, V627, 0x0, V597]
Exit stack: [V12, S5, {0x0, 0x12b, 0x249}, S3, S2, S1, V597, 0x66e7ea0f, V624, 0x20, V627, V628, V627, 0x0, V597]

================================

Block 0x6bd
[0x6bd:0x6c0]
---
Predecessors: [0x65f]
Successors: []
---
0x6bd PUSH1 0x0
0x6bf DUP1
0x6c0 REVERT
---
0x6bd: V634 = 0x0
0x6c0: REVERT 0x0 0x0
---
Entry stack: [V12, S13, {0x0, 0x12b, 0x249}, S11, S10, S9, V597, 0x66e7ea0f, V624, 0x20, V627, V628, V627, 0x0, V597]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, {0x0, 0x12b, 0x249}, S11, S10, S9, V597, 0x66e7ea0f, V624, 0x20, V627, V628, V627, 0x0, V597]

================================

Block 0x6c1
[0x6c1:0x6cd]
---
Predecessors: [0x65f]
Successors: [0x6ce, 0x6d2]
---
0x6c1 JUMPDEST
0x6c2 PUSH2 0x2c6
0x6c5 GAS
0x6c6 SUB
0x6c7 CALL
0x6c8 ISZERO
0x6c9 ISZERO
0x6ca PUSH2 0x6d2
0x6cd JUMPI
---
0x6c1: JUMPDEST 
0x6c2: V635 = 0x2c6
0x6c5: V636 = GAS
0x6c6: V637 = SUB V636 0x2c6
0x6c7: V638 = CALL V637 V597 0x0 V627 V628 V627 0x20
0x6c8: V639 = ISZERO V638
0x6c9: V640 = ISZERO V639
0x6ca: V641 = 0x6d2
0x6cd: JUMPI 0x6d2 V640
---
Entry stack: [V12, S13, {0x0, 0x12b, 0x249}, S11, S10, S9, V597, 0x66e7ea0f, V624, 0x20, V627, V628, V627, 0x0, V597]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S13, {0x0, 0x12b, 0x249}, S11, S10, S9, V597, 0x66e7ea0f, V624]

================================

Block 0x6ce
[0x6ce:0x6d1]
---
Predecessors: [0x6c1]
Successors: []
---
0x6ce PUSH1 0x0
0x6d0 DUP1
0x6d1 REVERT
---
0x6ce: V642 = 0x0
0x6d1: REVERT 0x0 0x0
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, S3, S2, 0x66e7ea0f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, S3, S2, 0x66e7ea0f, S0]

================================

Block 0x6d2
[0x6d2:0x728]
---
Predecessors: [0x6c1]
Successors: [0x729, 0x72d]
---
0x6d2 JUMPDEST
0x6d3 POP
0x6d4 POP
0x6d5 POP
0x6d6 PUSH1 0x40
0x6d8 MLOAD
0x6d9 DUP1
0x6da MLOAD
0x6db POP
0x6dc POP
0x6dd PUSH1 0xd
0x6df SLOAD
0x6e0 PUSH1 0x1
0x6e2 PUSH1 0xa0
0x6e4 PUSH1 0x2
0x6e6 EXP
0x6e7 SUB
0x6e8 AND
0x6e9 PUSH4 0xecfc5964
0x6ee DUP3
0x6ef PUSH1 0x0
0x6f1 PUSH1 0x40
0x6f3 MLOAD
0x6f4 PUSH1 0x20
0x6f6 ADD
0x6f7 MSTORE
0x6f8 PUSH1 0x40
0x6fa MLOAD
0x6fb PUSH1 0xe0
0x6fd PUSH1 0x2
0x6ff EXP
0x700 PUSH4 0xffffffff
0x705 DUP5
0x706 AND
0x707 MUL
0x708 DUP2
0x709 MSTORE
0x70a PUSH1 0x4
0x70c DUP2
0x70d ADD
0x70e SWAP2
0x70f SWAP1
0x710 SWAP2
0x711 MSTORE
0x712 PUSH1 0x24
0x714 ADD
0x715 PUSH1 0x20
0x717 PUSH1 0x40
0x719 MLOAD
0x71a DUP1
0x71b DUP4
0x71c SUB
0x71d DUP2
0x71e PUSH1 0x0
0x720 DUP8
0x721 DUP1
0x722 EXTCODESIZE
0x723 ISZERO
0x724 ISZERO
0x725 PUSH2 0x72d
0x728 JUMPI
---
0x6d2: JUMPDEST 
0x6d6: V643 = 0x40
0x6d8: V644 = M[0x40]
0x6da: V645 = M[V644]
0x6dd: V646 = 0xd
0x6df: V647 = S[0xd]
0x6e0: V648 = 0x1
0x6e2: V649 = 0xa0
0x6e4: V650 = 0x2
0x6e6: V651 = EXP 0x2 0xa0
0x6e7: V652 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e8: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff V647
0x6e9: V654 = 0xecfc5964
0x6ef: V655 = 0x0
0x6f1: V656 = 0x40
0x6f3: V657 = M[0x40]
0x6f4: V658 = 0x20
0x6f6: V659 = ADD 0x20 V657
0x6f7: M[V659] = 0x0
0x6f8: V660 = 0x40
0x6fa: V661 = M[0x40]
0x6fb: V662 = 0xe0
0x6fd: V663 = 0x2
0x6ff: V664 = EXP 0x2 0xe0
0x700: V665 = 0xffffffff
0x706: V666 = AND 0xecfc5964 0xffffffff
0x707: V667 = MUL 0xecfc5964 0x100000000000000000000000000000000000000000000000000000000
0x709: M[V661] = 0xecfc596400000000000000000000000000000000000000000000000000000000
0x70a: V668 = 0x4
0x70d: V669 = ADD V661 0x4
0x711: M[V669] = S3
0x712: V670 = 0x24
0x714: V671 = ADD 0x24 V661
0x715: V672 = 0x20
0x717: V673 = 0x40
0x719: V674 = M[0x40]
0x71c: V675 = SUB V671 V674
0x71e: V676 = 0x0
0x722: V677 = EXTCODESIZE V653
0x723: V678 = ISZERO V677
0x724: V679 = ISZERO V678
0x725: V680 = 0x72d
0x728: JUMPI 0x72d V679
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, S3, S2, 0x66e7ea0f, S0]
Stack pops: 4
Stack additions: [S3, V653, 0xecfc5964, V671, 0x20, V674, V675, V674, 0x0, V653]
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, S3, V653, 0xecfc5964, V671, 0x20, V674, V675, V674, 0x0, V653]

================================

Block 0x729
[0x729:0x72c]
---
Predecessors: [0x6d2]
Successors: []
---
0x729 PUSH1 0x0
0x72b DUP1
0x72c REVERT
---
0x729: V681 = 0x0
0x72c: REVERT 0x0 0x0
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, S9, V653, 0xecfc5964, V671, 0x20, V674, V675, V674, 0x0, V653]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, S9, V653, 0xecfc5964, V671, 0x20, V674, V675, V674, 0x0, V653]

================================

Block 0x72d
[0x72d:0x739]
---
Predecessors: [0x6d2]
Successors: [0x73a, 0x73e]
---
0x72d JUMPDEST
0x72e PUSH2 0x2c6
0x731 GAS
0x732 SUB
0x733 CALL
0x734 ISZERO
0x735 ISZERO
0x736 PUSH2 0x73e
0x739 JUMPI
---
0x72d: JUMPDEST 
0x72e: V682 = 0x2c6
0x731: V683 = GAS
0x732: V684 = SUB V683 0x2c6
0x733: V685 = CALL V684 V653 0x0 V674 V675 V674 0x20
0x734: V686 = ISZERO V685
0x735: V687 = ISZERO V686
0x736: V688 = 0x73e
0x739: JUMPI 0x73e V687
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, S9, V653, 0xecfc5964, V671, 0x20, V674, V675, V674, 0x0, V653]
Stack pops: 6
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, S9, V653, 0xecfc5964, V671]

================================

Block 0x73a
[0x73a:0x73d]
---
Predecessors: [0x72d]
Successors: []
---
0x73a PUSH1 0x0
0x73c DUP1
0x73d REVERT
---
0x73a: V689 = 0x0
0x73d: REVERT 0x0 0x0
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, S3, S2, 0xecfc5964, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, S3, S2, 0xecfc5964, S0]

================================

Block 0x73e
[0x73e:0x758]
---
Predecessors: [0x72d]
Successors: [0x759, 0x762]
---
0x73e JUMPDEST
0x73f POP
0x740 POP
0x741 POP
0x742 PUSH1 0x40
0x744 MLOAD
0x745 DUP1
0x746 MLOAD
0x747 POP
0x748 POP
0x749 PUSH1 0xb
0x74b SLOAD
0x74c PUSH2 0x100
0x74f SWAP1
0x750 DIV
0x751 PUSH1 0xff
0x753 AND
0x754 ISZERO
0x755 PUSH2 0x762
0x758 JUMPI
---
0x73e: JUMPDEST 
0x742: V690 = 0x40
0x744: V691 = M[0x40]
0x746: V692 = M[V691]
0x749: V693 = 0xb
0x74b: V694 = S[0xb]
0x74c: V695 = 0x100
0x750: V696 = DIV V694 0x100
0x751: V697 = 0xff
0x753: V698 = AND 0xff V696
0x754: V699 = ISZERO V698
0x755: V700 = 0x762
0x758: JUMPI 0x762 V699
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, S3, S2, 0xecfc5964, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, S3]

================================

Block 0x759
[0x759:0x75f]
---
Predecessors: [0x73e]
Successors: [0xafb]
---
0x759 PUSH2 0x760
0x75c PUSH2 0xafb
0x75f JUMP
---
0x759: V701 = 0x760
0x75c: V702 = 0xafb
0x75f: JUMP 0xafb
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, S0]
Stack pops: 0
Stack additions: [0x760]
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, S0, 0x760]

================================

Block 0x760
[0x760:0x761]
---
Predecessors: [0xc22]
Successors: [0x762]
---
0x760 JUMPDEST
0x761 POP
---
0x760: JUMPDEST 
---
Entry stack: [V12, {0x12b, 0x249}, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, S3, S2, S1]

================================

Block 0x762
[0x762:0x7e4]
---
Predecessors: [0x73e, 0x760]
Successors: [0x7e5]
---
0x762 JUMPDEST
0x763 CALLER
0x764 PUSH1 0x1
0x766 PUSH1 0xa0
0x768 PUSH1 0x2
0x76a EXP
0x76b SUB
0x76c AND
0x76d PUSH32 0xc4b201a5eb8ab63e539f373c349eafada81e6c7bc25c071fe334c289f17ed7d
0x78e DUP3
0x78f DUP5
0x790 PUSH1 0x40
0x792 MLOAD
0x793 PUSH1 0x20
0x795 DUP2
0x796 ADD
0x797 SWAP3
0x798 SWAP1
0x799 SWAP3
0x79a MSTORE
0x79b PUSH1 0x40
0x79d DUP1
0x79e DUP4
0x79f ADD
0x7a0 SWAP2
0x7a1 SWAP1
0x7a2 SWAP2
0x7a3 MSTORE
0x7a4 PUSH1 0x60
0x7a6 DUP1
0x7a7 DUP4
0x7a8 MSTORE
0x7a9 PUSH1 0x4
0x7ab SWAP1
0x7ac DUP4
0x7ad ADD
0x7ae MSTORE
0x7af PUSH32 0x6d696e7400000000000000000000000000000000000000000000000000000000
0x7d0 PUSH1 0x80
0x7d2 DUP4
0x7d3 ADD
0x7d4 MSTORE
0x7d5 PUSH1 0xa0
0x7d7 SWAP1
0x7d8 SWAP2
0x7d9 ADD
0x7da SWAP1
0x7db MLOAD
0x7dc DUP1
0x7dd SWAP2
0x7de SUB
0x7df SWAP1
0x7e0 LOG2
0x7e1 PUSH1 0x1
0x7e3 SWAP3
0x7e4 POP
---
0x762: JUMPDEST 
0x763: V703 = CALLER
0x764: V704 = 0x1
0x766: V705 = 0xa0
0x768: V706 = 0x2
0x76a: V707 = EXP 0x2 0xa0
0x76b: V708 = SUB 0x10000000000000000000000000000000000000000 0x1
0x76c: V709 = AND 0xffffffffffffffffffffffffffffffffffffffff V703
0x76d: V710 = 0xc4b201a5eb8ab63e539f373c349eafada81e6c7bc25c071fe334c289f17ed7d
0x790: V711 = 0x40
0x792: V712 = M[0x40]
0x793: V713 = 0x20
0x796: V714 = ADD V712 0x20
0x79a: M[V714] = S0
0x79b: V715 = 0x40
0x79f: V716 = ADD V712 0x40
0x7a3: M[V716] = S1
0x7a4: V717 = 0x60
0x7a8: M[V712] = 0x60
0x7a9: V718 = 0x4
0x7ad: V719 = ADD V712 0x60
0x7ae: M[V719] = 0x4
0x7af: V720 = 0x6d696e7400000000000000000000000000000000000000000000000000000000
0x7d0: V721 = 0x80
0x7d3: V722 = ADD V712 0x80
0x7d4: M[V722] = 0x6d696e7400000000000000000000000000000000000000000000000000000000
0x7d5: V723 = 0xa0
0x7d9: V724 = ADD V712 0xa0
0x7db: V725 = M[0x40]
0x7de: V726 = SUB V724 V725
0x7e0: LOG V725 V726 0xc4b201a5eb8ab63e539f373c349eafada81e6c7bc25c071fe334c289f17ed7d V709
0x7e1: V727 = 0x1
---
Entry stack: [V12, {0x12b, 0x249}, S2, S1, S0]
Stack pops: 3
Stack additions: [0x1, S1, S0]
Exit stack: [V12, {0x12b, 0x249}, 0x1, S1, S0]

================================

Block 0x7e5
[0x7e5:0x7e9]
---
Predecessors: [0x762]
Successors: [0x12b, 0x249]
---
0x7e5 JUMPDEST
0x7e6 POP
0x7e7 POP
0x7e8 SWAP1
0x7e9 JUMP
---
0x7e5: JUMPDEST 
0x7e9: THROW 
---
Entry stack: [V12, {0x12b, 0x249}, 0x1, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, 0x1]

================================

Block 0x7ea
[0x7ea:0x7f8]
---
Predecessors: [0x13a]
Successors: [0x142]
---
0x7ea JUMPDEST
0x7eb PUSH1 0x2
0x7ed SLOAD
0x7ee PUSH1 0x1
0x7f0 PUSH1 0xa0
0x7f2 PUSH1 0x2
0x7f4 EXP
0x7f5 SUB
0x7f6 AND
0x7f7 DUP2
0x7f8 JUMP
---
0x7ea: JUMPDEST 
0x7eb: V728 = 0x2
0x7ed: V729 = S[0x2]
0x7ee: V730 = 0x1
0x7f0: V731 = 0xa0
0x7f2: V732 = 0x2
0x7f4: V733 = EXP 0x2 0xa0
0x7f5: V734 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f6: V735 = AND 0xffffffffffffffffffffffffffffffffffffffff V729
0x7f8: JUMP 0x142
---
Entry stack: [V12, 0x142]
Stack pops: 1
Stack additions: [S0, V735]
Exit stack: [V12, 0x142, V735]

================================

Block 0x7f9
[0x7f9:0x7fe]
---
Predecessors: [0x169]
Successors: [0x171]
---
0x7f9 JUMPDEST
0x7fa PUSH1 0x9
0x7fc SLOAD
0x7fd DUP2
0x7fe JUMP
---
0x7f9: JUMPDEST 
0x7fa: V736 = 0x9
0x7fc: V737 = S[0x9]
0x7fe: JUMP 0x171
---
Entry stack: [V12, 0x171]
Stack pops: 1
Stack additions: [S0, V737]
Exit stack: [V12, 0x171, V737]

================================

Block 0x7ff
[0x7ff:0x804]
---
Predecessors: [0x18e]
Successors: [0x171]
---
0x7ff JUMPDEST
0x800 PUSH1 0x6
0x802 SLOAD
0x803 DUP2
0x804 JUMP
---
0x7ff: JUMPDEST 
0x800: V738 = 0x6
0x802: V739 = S[0x6]
0x804: JUMP 0x171
---
Entry stack: [V12, 0x171]
Stack pops: 1
Stack additions: [S0, V739]
Exit stack: [V12, 0x171, V739]

================================

Block 0x805
[0x805:0x80a]
---
Predecessors: [0x1b3]
Successors: [0x171]
---
0x805 JUMPDEST
0x806 PUSH1 0x8
0x808 SLOAD
0x809 DUP2
0x80a JUMP
---
0x805: JUMPDEST 
0x806: V740 = 0x8
0x808: V741 = S[0x8]
0x80a: JUMP 0x171
---
Entry stack: [V12, 0x171]
Stack pops: 1
Stack additions: [S0, V741]
Exit stack: [V12, 0x171, V741]

================================

Block 0x80b
[0x80b:0x810]
---
Predecessors: [0x1d8]
Successors: [0x171]
---
0x80b JUMPDEST
0x80c PUSH1 0x5
0x80e SLOAD
0x80f DUP2
0x810 JUMP
---
0x80b: JUMPDEST 
0x80c: V742 = 0x5
0x80e: V743 = S[0x5]
0x810: JUMP 0x171
---
Entry stack: [V12, 0x171]
Stack pops: 1
Stack additions: [S0, V743]
Exit stack: [V12, 0x171, V743]

================================

Block 0x811
[0x811:0x827]
---
Predecessors: [0x1fd]
Successors: [0x828, 0x82c]
---
0x811 JUMPDEST
0x812 PUSH1 0x0
0x814 SLOAD
0x815 CALLER
0x816 PUSH1 0x1
0x818 PUSH1 0xa0
0x81a PUSH1 0x2
0x81c EXP
0x81d SUB
0x81e SWAP1
0x81f DUP2
0x820 AND
0x821 SWAP2
0x822 AND
0x823 EQ
0x824 PUSH2 0x82c
0x827 JUMPI
---
0x811: JUMPDEST 
0x812: V744 = 0x0
0x814: V745 = S[0x0]
0x815: V746 = CALLER
0x816: V747 = 0x1
0x818: V748 = 0xa0
0x81a: V749 = 0x2
0x81c: V750 = EXP 0x2 0xa0
0x81d: V751 = SUB 0x10000000000000000000000000000000000000000 0x1
0x820: V752 = AND 0xffffffffffffffffffffffffffffffffffffffff V746
0x822: V753 = AND V745 0xffffffffffffffffffffffffffffffffffffffff
0x823: V754 = EQ V753 V752
0x824: V755 = 0x82c
0x827: JUMPI 0x82c V754
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0x828
[0x828:0x82b]
---
Predecessors: [0x811]
Successors: []
---
0x828 PUSH1 0x0
0x82a DUP1
0x82b REVERT
---
0x828: V756 = 0x0
0x82b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0x82c
[0x82c:0x839]
---
Predecessors: [0x811]
Successors: []
---
0x82c JUMPDEST
0x82d PUSH1 0x2
0x82f SLOAD
0x830 PUSH1 0x1
0x832 PUSH1 0xa0
0x834 PUSH1 0x2
0x836 EXP
0x837 SUB
0x838 AND
0x839 SELFDESTRUCT
---
0x82c: JUMPDEST 
0x82d: V757 = 0x2
0x82f: V758 = S[0x2]
0x830: V759 = 0x1
0x832: V760 = 0xa0
0x834: V761 = 0x2
0x836: V762 = EXP 0x2 0xa0
0x837: V763 = SUB 0x10000000000000000000000000000000000000000 0x1
0x838: V764 = AND 0xffffffffffffffffffffffffffffffffffffffff V758
0x839: SELFDESTRUCT V764
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0x83a
[0x83a:0x83a]
---
Predecessors: [0xa75]
Successors: [0x83b]
---
0x83a JUMPDEST
---
0x83a: JUMPDEST 
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0x83b
[0x83b:0x83c]
---
Predecessors: [0x83a]
Successors: [0x12d]
---
0x83b JUMPDEST
0x83c JUMP
---
0x83b: JUMPDEST 
0x83c: JUMP 0x12d
---
Entry stack: [V12, 0x12d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x83d
[0x83d:0x84b]
---
Predecessors: [0x212]
Successors: [0x142]
---
0x83d JUMPDEST
0x83e PUSH1 0x3
0x840 SLOAD
0x841 PUSH1 0x1
0x843 PUSH1 0xa0
0x845 PUSH1 0x2
0x847 EXP
0x848 SUB
0x849 AND
0x84a DUP2
0x84b JUMP
---
0x83d: JUMPDEST 
0x83e: V765 = 0x3
0x840: V766 = S[0x3]
0x841: V767 = 0x1
0x843: V768 = 0xa0
0x845: V769 = 0x2
0x847: V770 = EXP 0x2 0xa0
0x848: V771 = SUB 0x10000000000000000000000000000000000000000 0x1
0x849: V772 = AND 0xffffffffffffffffffffffffffffffffffffffff V766
0x84b: JUMP 0x142
---
Entry stack: [V12, 0x142]
Stack pops: 1
Stack additions: [S0, V772]
Exit stack: [V12, 0x142, V772]

================================

Block 0x84c
[0x84c:0x863]
---
Predecessors: [0x241]
Successors: [0x864, 0x868]
---
0x84c JUMPDEST
0x84d PUSH1 0x0
0x84f DUP1
0x850 SLOAD
0x851 CALLER
0x852 PUSH1 0x1
0x854 PUSH1 0xa0
0x856 PUSH1 0x2
0x858 EXP
0x859 SUB
0x85a SWAP1
0x85b DUP2
0x85c AND
0x85d SWAP2
0x85e AND
0x85f EQ
0x860 PUSH2 0x868
0x863 JUMPI
---
0x84c: JUMPDEST 
0x84d: V773 = 0x0
0x850: V774 = S[0x0]
0x851: V775 = CALLER
0x852: V776 = 0x1
0x854: V777 = 0xa0
0x856: V778 = 0x2
0x858: V779 = EXP 0x2 0xa0
0x859: V780 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85c: V781 = AND 0xffffffffffffffffffffffffffffffffffffffff V775
0x85e: V782 = AND V774 0xffffffffffffffffffffffffffffffffffffffff
0x85f: V783 = EQ V782 V781
0x860: V784 = 0x868
0x863: JUMPI 0x868 V783
---
Entry stack: [V12, 0x249]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x249, 0x0]

================================

Block 0x864
[0x864:0x867]
---
Predecessors: [0x84c]
Successors: []
---
0x864 PUSH1 0x0
0x866 DUP1
0x867 REVERT
---
0x864: V785 = 0x0
0x867: REVERT 0x0 0x0
---
Entry stack: [V12, 0x249, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x249, 0x0]

================================

Block 0x868
[0x868:0x871]
---
Predecessors: [0x84c]
Successors: [0x872, 0x876]
---
0x868 JUMPDEST
0x869 PUSH1 0x8
0x86b SLOAD
0x86c TIMESTAMP
0x86d GT
0x86e PUSH2 0x876
0x871 JUMPI
---
0x868: JUMPDEST 
0x869: V786 = 0x8
0x86b: V787 = S[0x8]
0x86c: V788 = TIMESTAMP
0x86d: V789 = GT V788 V787
0x86e: V790 = 0x876
0x871: JUMPI 0x876 V789
---
Entry stack: [V12, 0x249, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x249, 0x0]

================================

Block 0x872
[0x872:0x875]
---
Predecessors: [0x868]
Successors: []
---
0x872 PUSH1 0x0
0x874 DUP1
0x875 REVERT
---
0x872: V791 = 0x0
0x875: REVERT 0x0 0x0
---
Entry stack: [V12, 0x249, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x249, 0x0]

================================

Block 0x876
[0x876:0x88a]
---
Predecessors: [0x868]
Successors: [0xafb]
---
0x876 JUMPDEST
0x877 PUSH1 0xb
0x879 DUP1
0x87a SLOAD
0x87b PUSH1 0xff
0x87d NOT
0x87e AND
0x87f PUSH1 0x1
0x881 OR
0x882 SWAP1
0x883 SSTORE
0x884 PUSH2 0x88b
0x887 PUSH2 0xafb
0x88a JUMP
---
0x876: JUMPDEST 
0x877: V792 = 0xb
0x87a: V793 = S[0xb]
0x87b: V794 = 0xff
0x87d: V795 = NOT 0xff
0x87e: V796 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V793
0x87f: V797 = 0x1
0x881: V798 = OR 0x1 V796
0x883: S[0xb] = V798
0x884: V799 = 0x88b
0x887: V800 = 0xafb
0x88a: JUMP 0xafb
---
Entry stack: [V12, 0x249, 0x0]
Stack pops: 0
Stack additions: [0x88b]
Exit stack: [V12, 0x249, 0x0, 0x88b]

================================

Block 0x88b
[0x88b:0x88d]
---
Predecessors: [0xc22]
Successors: [0x88e]
---
0x88b JUMPDEST
0x88c SWAP1
0x88d POP
---
0x88b: JUMPDEST 
---
Entry stack: [V12, {0x12b, 0x249}, S3, S2, S1, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, {0x12b, 0x249}, S3, S2, 0x1]

================================

Block 0x88e
[0x88e:0x88e]
---
Predecessors: [0x88b]
Successors: [0x88f]
---
0x88e JUMPDEST
---
0x88e: JUMPDEST 
---
Entry stack: [V12, {0x12b, 0x249}, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, S2, S1, 0x1]

================================

Block 0x88f
[0x88f:0x891]
---
Predecessors: [0x88e]
Successors: [0x249]
---
0x88f JUMPDEST
0x890 SWAP1
0x891 JUMP
---
0x88f: JUMPDEST 
0x891: JUMP S1
---
Entry stack: [V12, {0x12b, 0x249}, S2, S1, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, {0x12b, 0x249}, S2, 0x1]

================================

Block 0x892
[0x892:0x897]
---
Predecessors: [0x268]
Successors: [0x171]
---
0x892 JUMPDEST
0x893 PUSH1 0x4
0x895 SLOAD
0x896 DUP2
0x897 JUMP
---
0x892: JUMPDEST 
0x893: V801 = 0x4
0x895: V802 = S[0x4]
0x897: JUMP 0x171
---
Entry stack: [V12, 0x171]
Stack pops: 1
Stack additions: [S0, V802]
Exit stack: [V12, 0x171, V802]

================================

Block 0x898
[0x898:0x8a6]
---
Predecessors: [0x28d]
Successors: [0x142]
---
0x898 JUMPDEST
0x899 PUSH1 0x1
0x89b SLOAD
0x89c PUSH1 0x1
0x89e PUSH1 0xa0
0x8a0 PUSH1 0x2
0x8a2 EXP
0x8a3 SUB
0x8a4 AND
0x8a5 DUP2
0x8a6 JUMP
---
0x898: JUMPDEST 
0x899: V803 = 0x1
0x89b: V804 = S[0x1]
0x89c: V805 = 0x1
0x89e: V806 = 0xa0
0x8a0: V807 = 0x2
0x8a2: V808 = EXP 0x2 0xa0
0x8a3: V809 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a4: V810 = AND 0xffffffffffffffffffffffffffffffffffffffff V804
0x8a6: JUMP 0x142
---
Entry stack: [V12, 0x142]
Stack pops: 1
Stack additions: [S0, V810]
Exit stack: [V12, 0x142, V810]

================================

Block 0x8a7
[0x8a7:0x8ac]
---
Predecessors: [0x2bc]
Successors: [0x171]
---
0x8a7 JUMPDEST
0x8a8 PUSH1 0x7
0x8aa SLOAD
0x8ab DUP2
0x8ac JUMP
---
0x8a7: JUMPDEST 
0x8a8: V811 = 0x7
0x8aa: V812 = S[0x7]
0x8ac: JUMP 0x171
---
Entry stack: [V12, 0x171]
Stack pops: 1
Stack additions: [S0, V812]
Exit stack: [V12, 0x171, V812]

================================

Block 0x8ad
[0x8ad:0x8ba]
---
Predecessors: [0x2e1]
Successors: [0x249]
---
0x8ad JUMPDEST
0x8ae PUSH1 0xb
0x8b0 SLOAD
0x8b1 PUSH2 0x100
0x8b4 SWAP1
0x8b5 DIV
0x8b6 PUSH1 0xff
0x8b8 AND
0x8b9 DUP2
0x8ba JUMP
---
0x8ad: JUMPDEST 
0x8ae: V813 = 0xb
0x8b0: V814 = S[0xb]
0x8b1: V815 = 0x100
0x8b5: V816 = DIV V814 0x100
0x8b6: V817 = 0xff
0x8b8: V818 = AND 0xff V816
0x8ba: JUMP 0x249
---
Entry stack: [V12, 0x249]
Stack pops: 1
Stack additions: [S0, V818]
Exit stack: [V12, 0x249, V818]

================================

Block 0x8bb
[0x8bb:0x8c9]
---
Predecessors: [0x308]
Successors: [0x142]
---
0x8bb JUMPDEST
0x8bc PUSH1 0xd
0x8be SLOAD
0x8bf PUSH1 0x1
0x8c1 PUSH1 0xa0
0x8c3 PUSH1 0x2
0x8c5 EXP
0x8c6 SUB
0x8c7 AND
0x8c8 DUP2
0x8c9 JUMP
---
0x8bb: JUMPDEST 
0x8bc: V819 = 0xd
0x8be: V820 = S[0xd]
0x8bf: V821 = 0x1
0x8c1: V822 = 0xa0
0x8c3: V823 = 0x2
0x8c5: V824 = EXP 0x2 0xa0
0x8c6: V825 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c7: V826 = AND 0xffffffffffffffffffffffffffffffffffffffff V820
0x8c9: JUMP 0x142
---
Entry stack: [V12, 0x142]
Stack pops: 1
Stack additions: [S0, V826]
Exit stack: [V12, 0x142, V826]

================================

Block 0x8ca
[0x8ca:0x919]
---
Predecessors: [0x337]
Successors: [0x91a, 0x960]
---
0x8ca JUMPDEST
0x8cb PUSH1 0xc
0x8cd DUP1
0x8ce SLOAD
0x8cf PUSH1 0x1
0x8d1 DUP2
0x8d2 PUSH1 0x1
0x8d4 AND
0x8d5 ISZERO
0x8d6 PUSH2 0x100
0x8d9 MUL
0x8da SUB
0x8db AND
0x8dc PUSH1 0x2
0x8de SWAP1
0x8df DIV
0x8e0 DUP1
0x8e1 PUSH1 0x1f
0x8e3 ADD
0x8e4 PUSH1 0x20
0x8e6 DUP1
0x8e7 SWAP2
0x8e8 DIV
0x8e9 MUL
0x8ea PUSH1 0x20
0x8ec ADD
0x8ed PUSH1 0x40
0x8ef MLOAD
0x8f0 SWAP1
0x8f1 DUP2
0x8f2 ADD
0x8f3 PUSH1 0x40
0x8f5 MSTORE
0x8f6 DUP1
0x8f7 SWAP3
0x8f8 SWAP2
0x8f9 SWAP1
0x8fa DUP2
0x8fb DUP2
0x8fc MSTORE
0x8fd PUSH1 0x20
0x8ff ADD
0x900 DUP3
0x901 DUP1
0x902 SLOAD
0x903 PUSH1 0x1
0x905 DUP2
0x906 PUSH1 0x1
0x908 AND
0x909 ISZERO
0x90a PUSH2 0x100
0x90d MUL
0x90e SUB
0x90f AND
0x910 PUSH1 0x2
0x912 SWAP1
0x913 DIV
0x914 DUP1
0x915 ISZERO
0x916 PUSH2 0x960
0x919 JUMPI
---
0x8ca: JUMPDEST 
0x8cb: V827 = 0xc
0x8ce: V828 = S[0xc]
0x8cf: V829 = 0x1
0x8d2: V830 = 0x1
0x8d4: V831 = AND 0x1 V828
0x8d5: V832 = ISZERO V831
0x8d6: V833 = 0x100
0x8d9: V834 = MUL 0x100 V832
0x8da: V835 = SUB V834 0x1
0x8db: V836 = AND V835 V828
0x8dc: V837 = 0x2
0x8df: V838 = DIV V836 0x2
0x8e1: V839 = 0x1f
0x8e3: V840 = ADD 0x1f V838
0x8e4: V841 = 0x20
0x8e8: V842 = DIV V840 0x20
0x8e9: V843 = MUL V842 0x20
0x8ea: V844 = 0x20
0x8ec: V845 = ADD 0x20 V843
0x8ed: V846 = 0x40
0x8ef: V847 = M[0x40]
0x8f2: V848 = ADD V847 V845
0x8f3: V849 = 0x40
0x8f5: M[0x40] = V848
0x8fc: M[V847] = V838
0x8fd: V850 = 0x20
0x8ff: V851 = ADD 0x20 V847
0x902: V852 = S[0xc]
0x903: V853 = 0x1
0x906: V854 = 0x1
0x908: V855 = AND 0x1 V852
0x909: V856 = ISZERO V855
0x90a: V857 = 0x100
0x90d: V858 = MUL 0x100 V856
0x90e: V859 = SUB V858 0x1
0x90f: V860 = AND V859 V852
0x910: V861 = 0x2
0x913: V862 = DIV V860 0x2
0x915: V863 = ISZERO V862
0x916: V864 = 0x960
0x919: JUMPI 0x960 V863
---
Entry stack: [V12, 0x33f]
Stack pops: 0
Stack additions: [V847, 0xc, V838, V851, 0xc, V862]
Exit stack: [V12, 0x33f, V847, 0xc, V838, V851, 0xc, V862]

================================

Block 0x91a
[0x91a:0x921]
---
Predecessors: [0x8ca]
Successors: [0x922, 0x935]
---
0x91a DUP1
0x91b PUSH1 0x1f
0x91d LT
0x91e PUSH2 0x935
0x921 JUMPI
---
0x91b: V865 = 0x1f
0x91d: V866 = LT 0x1f V862
0x91e: V867 = 0x935
0x921: JUMPI 0x935 V866
---
Entry stack: [V12, 0x33f, V847, 0xc, V838, V851, 0xc, V862]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x33f, V847, 0xc, V838, V851, 0xc, V862]

================================

Block 0x922
[0x922:0x934]
---
Predecessors: [0x91a]
Successors: [0x960]
---
0x922 PUSH2 0x100
0x925 DUP1
0x926 DUP4
0x927 SLOAD
0x928 DIV
0x929 MUL
0x92a DUP4
0x92b MSTORE
0x92c SWAP2
0x92d PUSH1 0x20
0x92f ADD
0x930 SWAP2
0x931 PUSH2 0x960
0x934 JUMP
---
0x922: V868 = 0x100
0x927: V869 = S[0xc]
0x928: V870 = DIV V869 0x100
0x929: V871 = MUL V870 0x100
0x92b: M[V851] = V871
0x92d: V872 = 0x20
0x92f: V873 = ADD 0x20 V851
0x931: V874 = 0x960
0x934: JUMP 0x960
---
Entry stack: [V12, 0x33f, V847, 0xc, V838, V851, 0xc, V862]
Stack pops: 3
Stack additions: [V873, S1, S0]
Exit stack: [V12, 0x33f, V847, 0xc, V838, V873, 0xc, V862]

================================

Block 0x935
[0x935:0x942]
---
Predecessors: [0x91a]
Successors: [0x943]
---
0x935 JUMPDEST
0x936 DUP3
0x937 ADD
0x938 SWAP2
0x939 SWAP1
0x93a PUSH1 0x0
0x93c MSTORE
0x93d PUSH1 0x20
0x93f PUSH1 0x0
0x941 SHA3
0x942 SWAP1
---
0x935: JUMPDEST 
0x937: V875 = ADD V851 V862
0x93a: V876 = 0x0
0x93c: M[0x0] = 0xc
0x93d: V877 = 0x20
0x93f: V878 = 0x0
0x941: V879 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x33f, V847, 0xc, V838, V851, 0xc, V862]
Stack pops: 3
Stack additions: [V875, V879, S2]
Exit stack: [V12, 0x33f, V847, 0xc, V838, V875, V879, V851]

================================

Block 0x943
[0x943:0x956]
---
Predecessors: [0x935, 0x943]
Successors: [0x943, 0x957]
---
0x943 JUMPDEST
0x944 DUP2
0x945 SLOAD
0x946 DUP2
0x947 MSTORE
0x948 SWAP1
0x949 PUSH1 0x1
0x94b ADD
0x94c SWAP1
0x94d PUSH1 0x20
0x94f ADD
0x950 DUP1
0x951 DUP4
0x952 GT
0x953 PUSH2 0x943
0x956 JUMPI
---
0x943: JUMPDEST 
0x945: V880 = S[S1]
0x947: M[S0] = V880
0x949: V881 = 0x1
0x94b: V882 = ADD 0x1 S1
0x94d: V883 = 0x20
0x94f: V884 = ADD 0x20 S0
0x952: V885 = GT V875 V884
0x953: V886 = 0x943
0x956: JUMPI 0x943 V885
---
Entry stack: [V12, 0x33f, V847, 0xc, V838, V875, S1, S0]
Stack pops: 3
Stack additions: [S2, V882, V884]
Exit stack: [V12, 0x33f, V847, 0xc, V838, V875, V882, V884]

================================

Block 0x957
[0x957:0x95f]
---
Predecessors: [0x943]
Successors: [0x960]
---
0x957 DUP3
0x958 SWAP1
0x959 SUB
0x95a PUSH1 0x1f
0x95c AND
0x95d DUP3
0x95e ADD
0x95f SWAP2
---
0x959: V887 = SUB V884 V875
0x95a: V888 = 0x1f
0x95c: V889 = AND 0x1f V887
0x95e: V890 = ADD V875 V889
---
Entry stack: [V12, 0x33f, V847, 0xc, V838, V875, V882, V884]
Stack pops: 3
Stack additions: [V890, S1, S2]
Exit stack: [V12, 0x33f, V847, 0xc, V838, V890, V882, V875]

================================

Block 0x960
[0x960:0x967]
---
Predecessors: [0x8ca, 0x922, 0x957]
Successors: [0x33f]
---
0x960 JUMPDEST
0x961 POP
0x962 POP
0x963 POP
0x964 POP
0x965 POP
0x966 DUP2
0x967 JUMP
---
0x960: JUMPDEST 
0x967: JUMP 0x33f
---
Entry stack: [V12, 0x33f, V847, 0xc, V838, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0x33f, V847]

================================

Block 0x968
[0x968:0x970]
---
Predecessors: [0x3c2]
Successors: [0x249]
---
0x968 JUMPDEST
0x969 PUSH1 0xb
0x96b SLOAD
0x96c PUSH1 0xff
0x96e AND
0x96f DUP2
0x970 JUMP
---
0x968: JUMPDEST 
0x969: V891 = 0xb
0x96b: V892 = S[0xb]
0x96c: V893 = 0xff
0x96e: V894 = AND 0xff V892
0x970: JUMP 0x249
---
Entry stack: [V12, 0x249]
Stack pops: 1
Stack additions: [S0, V894]
Exit stack: [V12, 0x249, V894]

================================

Block 0x971
[0x971:0x987]
---
Predecessors: [0x3e9]
Successors: [0x988, 0x98c]
---
0x971 JUMPDEST
0x972 PUSH1 0x0
0x974 SLOAD
0x975 CALLER
0x976 PUSH1 0x1
0x978 PUSH1 0xa0
0x97a PUSH1 0x2
0x97c EXP
0x97d SUB
0x97e SWAP1
0x97f DUP2
0x980 AND
0x981 SWAP2
0x982 AND
0x983 EQ
0x984 PUSH2 0x98c
0x987 JUMPI
---
0x971: JUMPDEST 
0x972: V895 = 0x0
0x974: V896 = S[0x0]
0x975: V897 = CALLER
0x976: V898 = 0x1
0x978: V899 = 0xa0
0x97a: V900 = 0x2
0x97c: V901 = EXP 0x2 0xa0
0x97d: V902 = SUB 0x10000000000000000000000000000000000000000 0x1
0x980: V903 = AND 0xffffffffffffffffffffffffffffffffffffffff V897
0x982: V904 = AND V896 0xffffffffffffffffffffffffffffffffffffffff
0x983: V905 = EQ V904 V903
0x984: V906 = 0x98c
0x987: JUMPI 0x98c V905
---
Entry stack: [V12, 0x12d, V344]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V344]

================================

Block 0x988
[0x988:0x98b]
---
Predecessors: [0x971]
Successors: []
---
0x988 PUSH1 0x0
0x98a DUP1
0x98b REVERT
---
0x988: V907 = 0x0
0x98b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d, V344]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V344]

================================

Block 0x98c
[0x98c:0x991]
---
Predecessors: [0x971]
Successors: [0x992]
---
0x98c JUMPDEST
0x98d PUSH1 0x9
0x98f DUP2
0x990 SWAP1
0x991 SSTORE
---
0x98c: JUMPDEST 
0x98d: V908 = 0x9
0x991: S[0x9] = V344
---
Entry stack: [V12, 0x12d, V344]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x12d, V344]

================================

Block 0x992
[0x992:0x992]
---
Predecessors: [0x98c]
Successors: [0x993]
---
0x992 JUMPDEST
---
0x992: JUMPDEST 
---
Entry stack: [V12, 0x12d, V344]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V344]

================================

Block 0x993
[0x993:0x995]
---
Predecessors: [0x992]
Successors: [0x12d]
---
0x993 JUMPDEST
0x994 POP
0x995 JUMP
---
0x993: JUMPDEST 
0x995: JUMP 0x12d
---
Entry stack: [V12, 0x12d, V344]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x996
[0x996:0x99b]
---
Predecessors: [0x401]
Successors: [0x171]
---
0x996 JUMPDEST
0x997 PUSH1 0xa
0x999 SLOAD
0x99a DUP2
0x99b JUMP
---
0x996: JUMPDEST 
0x997: V909 = 0xa
0x999: V910 = S[0xa]
0x99b: JUMP 0x171
---
Entry stack: [V12, 0x171]
Stack pops: 1
Stack additions: [S0, V910]
Exit stack: [V12, 0x171, V910]

================================

Block 0x99c
[0x99c:0x9b2]
---
Predecessors: [0x442]
Successors: [0x9b3, 0x9b7]
---
0x99c JUMPDEST
0x99d PUSH1 0x0
0x99f SLOAD
0x9a0 CALLER
0x9a1 PUSH1 0x1
0x9a3 PUSH1 0xa0
0x9a5 PUSH1 0x2
0x9a7 EXP
0x9a8 SUB
0x9a9 SWAP1
0x9aa DUP2
0x9ab AND
0x9ac SWAP2
0x9ad AND
0x9ae EQ
0x9af PUSH2 0x9b7
0x9b2 JUMPI
---
0x99c: JUMPDEST 
0x99d: V911 = 0x0
0x99f: V912 = S[0x0]
0x9a0: V913 = CALLER
0x9a1: V914 = 0x1
0x9a3: V915 = 0xa0
0x9a5: V916 = 0x2
0x9a7: V917 = EXP 0x2 0xa0
0x9a8: V918 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ab: V919 = AND 0xffffffffffffffffffffffffffffffffffffffff V913
0x9ad: V920 = AND V912 0xffffffffffffffffffffffffffffffffffffffff
0x9ae: V921 = EQ V920 V919
0x9af: V922 = 0x9b7
0x9b2: JUMPI 0x9b7 V921
---
Entry stack: [V12, 0x12d, V382]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V382]

================================

Block 0x9b3
[0x9b3:0x9b6]
---
Predecessors: [0x99c]
Successors: []
---
0x9b3 PUSH1 0x0
0x9b5 DUP1
0x9b6 REVERT
---
0x9b3: V923 = 0x0
0x9b6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d, V382]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V382]

================================

Block 0x9b7
[0x9b7:0x9df]
---
Predecessors: [0x99c]
Successors: [0x9e0]
---
0x9b7 JUMPDEST
0x9b8 PUSH1 0x0
0x9ba DUP1
0x9bb SLOAD
0x9bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d1 NOT
0x9d2 AND
0x9d3 PUSH1 0x1
0x9d5 PUSH1 0xa0
0x9d7 PUSH1 0x2
0x9d9 EXP
0x9da SUB
0x9db DUP4
0x9dc AND
0x9dd OR
0x9de SWAP1
0x9df SSTORE
---
0x9b7: JUMPDEST 
0x9b8: V924 = 0x0
0x9bb: V925 = S[0x0]
0x9bc: V926 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d1: V927 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9d2: V928 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V925
0x9d3: V929 = 0x1
0x9d5: V930 = 0xa0
0x9d7: V931 = 0x2
0x9d9: V932 = EXP 0x2 0xa0
0x9da: V933 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9dc: V934 = AND V382 0xffffffffffffffffffffffffffffffffffffffff
0x9dd: V935 = OR V934 V928
0x9df: S[0x0] = V935
---
Entry stack: [V12, 0x12d, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x12d, V382]

================================

Block 0x9e0
[0x9e0:0x9e0]
---
Predecessors: [0x9b7]
Successors: [0x9e1]
---
0x9e0 JUMPDEST
---
0x9e0: JUMPDEST 
---
Entry stack: [V12, 0x12d, V382]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V382]

================================

Block 0x9e1
[0x9e1:0x9e3]
---
Predecessors: [0x9e0]
Successors: [0x12d]
---
0x9e1 JUMPDEST
0x9e2 POP
0x9e3 JUMP
---
0x9e1: JUMPDEST 
0x9e3: JUMP 0x12d
---
Entry stack: [V12, 0x12d, V382]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x9e4
[0x9e4:0x9fa]
---
Predecessors: [0x463]
Successors: [0x9fb, 0x9ff]
---
0x9e4 JUMPDEST
0x9e5 PUSH1 0x0
0x9e7 SLOAD
0x9e8 CALLER
0x9e9 PUSH1 0x1
0x9eb PUSH1 0xa0
0x9ed PUSH1 0x2
0x9ef EXP
0x9f0 SUB
0x9f1 SWAP1
0x9f2 DUP2
0x9f3 AND
0x9f4 SWAP2
0x9f5 AND
0x9f6 EQ
0x9f7 PUSH2 0x9ff
0x9fa JUMPI
---
0x9e4: JUMPDEST 
0x9e5: V936 = 0x0
0x9e7: V937 = S[0x0]
0x9e8: V938 = CALLER
0x9e9: V939 = 0x1
0x9eb: V940 = 0xa0
0x9ed: V941 = 0x2
0x9ef: V942 = EXP 0x2 0xa0
0x9f0: V943 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f3: V944 = AND 0xffffffffffffffffffffffffffffffffffffffff V938
0x9f5: V945 = AND V937 0xffffffffffffffffffffffffffffffffffffffff
0x9f6: V946 = EQ V945 V944
0x9f7: V947 = 0x9ff
0x9fa: JUMPI 0x9ff V946
---
Entry stack: [V12, 0x12d, V390]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V390]

================================

Block 0x9fb
[0x9fb:0x9fe]
---
Predecessors: [0x9e4]
Successors: []
---
0x9fb PUSH1 0x0
0x9fd DUP1
0x9fe REVERT
---
0x9fb: V948 = 0x0
0x9fe: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d, V390]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V390]

================================

Block 0x9ff
[0x9ff:0xa04]
---
Predecessors: [0x9e4]
Successors: [0xa05]
---
0x9ff JUMPDEST
0xa00 PUSH1 0x8
0xa02 DUP2
0xa03 SWAP1
0xa04 SSTORE
---
0x9ff: JUMPDEST 
0xa00: V949 = 0x8
0xa04: S[0x8] = V390
---
Entry stack: [V12, 0x12d, V390]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x12d, V390]

================================

Block 0xa05
[0xa05:0xa05]
---
Predecessors: [0x9ff]
Successors: [0xa06]
---
0xa05 JUMPDEST
---
0xa05: JUMPDEST 
---
Entry stack: [V12, 0x12d, V390]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V390]

================================

Block 0xa06
[0xa06:0xa08]
---
Predecessors: [0xa05]
Successors: [0x12d]
---
0xa06 JUMPDEST
0xa07 POP
0xa08 JUMP
---
0xa06: JUMPDEST 
0xa08: JUMP 0x12d
---
Entry stack: [V12, 0x12d, V390]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xa09
[0xa09:0xa1f]
---
Predecessors: [0x47b]
Successors: [0xa20, 0xa24]
---
0xa09 JUMPDEST
0xa0a PUSH1 0x0
0xa0c SLOAD
0xa0d CALLER
0xa0e PUSH1 0x1
0xa10 PUSH1 0xa0
0xa12 PUSH1 0x2
0xa14 EXP
0xa15 SUB
0xa16 SWAP1
0xa17 DUP2
0xa18 AND
0xa19 SWAP2
0xa1a AND
0xa1b EQ
0xa1c PUSH2 0xa24
0xa1f JUMPI
---
0xa09: JUMPDEST 
0xa0a: V950 = 0x0
0xa0c: V951 = S[0x0]
0xa0d: V952 = CALLER
0xa0e: V953 = 0x1
0xa10: V954 = 0xa0
0xa12: V955 = 0x2
0xa14: V956 = EXP 0x2 0xa0
0xa15: V957 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa18: V958 = AND 0xffffffffffffffffffffffffffffffffffffffff V952
0xa1a: V959 = AND V951 0xffffffffffffffffffffffffffffffffffffffff
0xa1b: V960 = EQ V959 V958
0xa1c: V961 = 0xa24
0xa1f: JUMPI 0xa24 V960
---
Entry stack: [V12, 0x12d, V400]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V400]

================================

Block 0xa20
[0xa20:0xa23]
---
Predecessors: [0xa09]
Successors: []
---
0xa20 PUSH1 0x0
0xa22 DUP1
0xa23 REVERT
---
0xa20: V962 = 0x0
0xa23: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d, V400]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V400]

================================

Block 0xa24
[0xa24:0xa37]
---
Predecessors: [0xa09]
Successors: [0xa38]
---
0xa24 JUMPDEST
0xa25 PUSH1 0xb
0xa27 DUP1
0xa28 SLOAD
0xa29 PUSH2 0xff00
0xa2c NOT
0xa2d AND
0xa2e PUSH2 0x100
0xa31 DUP4
0xa32 ISZERO
0xa33 ISZERO
0xa34 MUL
0xa35 OR
0xa36 SWAP1
0xa37 SSTORE
---
0xa24: JUMPDEST 
0xa25: V963 = 0xb
0xa28: V964 = S[0xb]
0xa29: V965 = 0xff00
0xa2c: V966 = NOT 0xff00
0xa2d: V967 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V964
0xa2e: V968 = 0x100
0xa32: V969 = ISZERO V400
0xa33: V970 = ISZERO V969
0xa34: V971 = MUL V970 0x100
0xa35: V972 = OR V971 V967
0xa37: S[0xb] = V972
---
Entry stack: [V12, 0x12d, V400]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x12d, V400]

================================

Block 0xa38
[0xa38:0xa38]
---
Predecessors: [0xa24]
Successors: [0xa39]
---
0xa38 JUMPDEST
---
0xa38: JUMPDEST 
---
Entry stack: [V12, 0x12d, V400]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V400]

================================

Block 0xa39
[0xa39:0xa3b]
---
Predecessors: [0xa38]
Successors: [0x12d]
---
0xa39 JUMPDEST
0xa3a POP
0xa3b JUMP
---
0xa39: JUMPDEST 
0xa3b: JUMP 0x12d
---
Entry stack: [V12, 0x12d, V400]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xa3c
[0xa3c:0xa4a]
---
Predecessors: [0x495]
Successors: [0x142]
---
0xa3c JUMPDEST
0xa3d PUSH1 0xe
0xa3f SLOAD
0xa40 PUSH1 0x1
0xa42 PUSH1 0xa0
0xa44 PUSH1 0x2
0xa46 EXP
0xa47 SUB
0xa48 AND
0xa49 DUP2
0xa4a JUMP
---
0xa3c: JUMPDEST 
0xa3d: V973 = 0xe
0xa3f: V974 = S[0xe]
0xa40: V975 = 0x1
0xa42: V976 = 0xa0
0xa44: V977 = 0x2
0xa46: V978 = EXP 0x2 0xa0
0xa47: V979 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa48: V980 = AND 0xffffffffffffffffffffffffffffffffffffffff V974
0xa4a: JUMP 0x142
---
Entry stack: [V12, 0x142]
Stack pops: 1
Stack additions: [S0, V980]
Exit stack: [V12, 0x142, V980]

================================

Block 0xa4b
[0xa4b:0xa59]
---
Predecessors: [0x4c4]
Successors: [0x142]
---
0xa4b JUMPDEST
0xa4c PUSH1 0x0
0xa4e SLOAD
0xa4f PUSH1 0x1
0xa51 PUSH1 0xa0
0xa53 PUSH1 0x2
0xa55 EXP
0xa56 SUB
0xa57 AND
0xa58 DUP2
0xa59 JUMP
---
0xa4b: JUMPDEST 
0xa4c: V981 = 0x0
0xa4e: V982 = S[0x0]
0xa4f: V983 = 0x1
0xa51: V984 = 0xa0
0xa53: V985 = 0x2
0xa55: V986 = EXP 0x2 0xa0
0xa56: V987 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa57: V988 = AND 0xffffffffffffffffffffffffffffffffffffffff V982
0xa59: JUMP 0x142
---
Entry stack: [V12, 0x142]
Stack pops: 1
Stack additions: [S0, V988]
Exit stack: [V12, 0x142, V988]

================================

Block 0xa5a
[0xa5a:0xa70]
---
Predecessors: [0x4f3]
Successors: [0xa71, 0xa75]
---
0xa5a JUMPDEST
0xa5b PUSH1 0x0
0xa5d SLOAD
0xa5e CALLER
0xa5f PUSH1 0x1
0xa61 PUSH1 0xa0
0xa63 PUSH1 0x2
0xa65 EXP
0xa66 SUB
0xa67 SWAP1
0xa68 DUP2
0xa69 AND
0xa6a SWAP2
0xa6b AND
0xa6c EQ
0xa6d PUSH2 0xa75
0xa70 JUMPI
---
0xa5a: JUMPDEST 
0xa5b: V989 = 0x0
0xa5d: V990 = S[0x0]
0xa5e: V991 = CALLER
0xa5f: V992 = 0x1
0xa61: V993 = 0xa0
0xa63: V994 = 0x2
0xa65: V995 = EXP 0x2 0xa0
0xa66: V996 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa69: V997 = AND 0xffffffffffffffffffffffffffffffffffffffff V991
0xa6b: V998 = AND V990 0xffffffffffffffffffffffffffffffffffffffff
0xa6c: V999 = EQ V998 V997
0xa6d: V1000 = 0xa75
0xa70: JUMPI 0xa75 V999
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0xa71
[0xa71:0xa74]
---
Predecessors: [0xa5a]
Successors: []
---
0xa71 PUSH1 0x0
0xa73 DUP1
0xa74 REVERT
---
0xa71: V1001 = 0x0
0xa74: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0xa75
[0xa75:0xaa9]
---
Predecessors: [0xa5a]
Successors: [0x83a, 0xaaa]
---
0xa75 JUMPDEST
0xa76 PUSH1 0x2
0xa78 SLOAD
0xa79 PUSH1 0x1
0xa7b PUSH1 0xa0
0xa7d PUSH1 0x2
0xa7f EXP
0xa80 SUB
0xa81 SWAP1
0xa82 DUP2
0xa83 AND
0xa84 SWAP1
0xa85 ADDRESS
0xa86 AND
0xa87 BALANCE
0xa88 DUP1
0xa89 ISZERO
0xa8a PUSH2 0x8fc
0xa8d MUL
0xa8e SWAP1
0xa8f PUSH1 0x40
0xa91 MLOAD
0xa92 PUSH1 0x0
0xa94 PUSH1 0x40
0xa96 MLOAD
0xa97 DUP1
0xa98 DUP4
0xa99 SUB
0xa9a DUP2
0xa9b DUP6
0xa9c DUP9
0xa9d DUP9
0xa9e CALL
0xa9f SWAP4
0xaa0 POP
0xaa1 POP
0xaa2 POP
0xaa3 POP
0xaa4 ISZERO
0xaa5 ISZERO
0xaa6 PUSH2 0x83a
0xaa9 JUMPI
---
0xa75: JUMPDEST 
0xa76: V1002 = 0x2
0xa78: V1003 = S[0x2]
0xa79: V1004 = 0x1
0xa7b: V1005 = 0xa0
0xa7d: V1006 = 0x2
0xa7f: V1007 = EXP 0x2 0xa0
0xa80: V1008 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa83: V1009 = AND 0xffffffffffffffffffffffffffffffffffffffff V1003
0xa85: V1010 = ADDRESS
0xa86: V1011 = AND V1010 0xffffffffffffffffffffffffffffffffffffffff
0xa87: V1012 = BALANCE V1011
0xa89: V1013 = ISZERO V1012
0xa8a: V1014 = 0x8fc
0xa8d: V1015 = MUL 0x8fc V1013
0xa8f: V1016 = 0x40
0xa91: V1017 = M[0x40]
0xa92: V1018 = 0x0
0xa94: V1019 = 0x40
0xa96: V1020 = M[0x40]
0xa99: V1021 = SUB V1017 V1020
0xa9e: V1022 = CALL V1015 V1009 V1012 V1020 V1021 V1020 0x0
0xaa4: V1023 = ISZERO V1022
0xaa5: V1024 = ISZERO V1023
0xaa6: V1025 = 0x83a
0xaa9: JUMPI 0x83a V1024
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0xaaa
[0xaaa:0xaad]
---
Predecessors: [0xa75]
Successors: []
---
0xaaa PUSH1 0x0
0xaac DUP1
0xaad REVERT
---
0xaaa: V1026 = 0x0
0xaad: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0xaae
[0xaae:0xaae]
---
Predecessors: []
Successors: [0xaaf]
---
0xaae JUMPDEST
---
0xaae: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaaf
[0xaaf:0xaaf]
---
Predecessors: [0xaae]
Successors: [0xab0]
---
0xaaf JUMPDEST
---
0xaaf: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xab0
[0xab0:0xab1]
---
Predecessors: [0xaaf]
Successors: []
Has unresolved jump.
---
0xab0 JUMPDEST
0xab1 JUMP
---
0xab0: JUMPDEST 
0xab1: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xab2
[0xab2:0xabe]
---
Predecessors: [0x5a3]
Successors: [0xabf, 0xace]
---
0xab2 JUMPDEST
0xab3 PUSH1 0x0
0xab5 DUP3
0xab6 DUP3
0xab7 MUL
0xab8 DUP4
0xab9 ISZERO
0xaba DUP1
0xabb PUSH2 0xace
0xabe JUMPI
---
0xab2: JUMPDEST 
0xab3: V1027 = 0x0
0xab7: V1028 = MUL V518 V520
0xab9: V1029 = ISZERO V520
0xabb: V1030 = 0xace
0xabe: JUMPI 0xace V1029
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, 0x0, V517, 0x5bb, V520, V518]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1028, V1029]
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, 0x0, V517, 0x5bb, V520, V518, 0x0, V1028, V1029]

================================

Block 0xabf
[0xabf:0xac9]
---
Predecessors: [0xab2]
Successors: [0xaca, 0xacb]
---
0xabf POP
0xac0 DUP3
0xac1 DUP5
0xac2 DUP3
0xac3 DUP2
0xac4 ISZERO
0xac5 ISZERO
0xac6 PUSH2 0xacb
0xac9 JUMPI
---
0xac4: V1031 = ISZERO V520
0xac5: V1032 = ISZERO V1031
0xac6: V1033 = 0xacb
0xac9: JUMPI 0xacb V1032
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, 0x0, V517, 0x5bb, V520, V518, 0x0, V1028, V1029]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, 0x0, V517, 0x5bb, V520, V518, 0x0, V1028, V518, V520, V1028]

================================

Block 0xaca
[0xaca:0xaca]
---
Predecessors: [0xabf]
Successors: []
---
0xaca INVALID
---
0xaca: INVALID 
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, 0x0, V517, 0x5bb, V520, V518, 0x0, V1028, V518, V520, V1028]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, 0x0, V517, 0x5bb, V520, V518, 0x0, V1028, V518, V520, V1028]

================================

Block 0xacb
[0xacb:0xacd]
---
Predecessors: [0xabf]
Successors: [0xace]
---
0xacb JUMPDEST
0xacc DIV
0xacd EQ
---
0xacb: JUMPDEST 
0xacc: V1034 = DIV V1028 V520
0xacd: V1035 = EQ V1034 V518
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, 0x0, V517, 0x5bb, V520, V518, 0x0, V1028, V518, V520, V1028]
Stack pops: 3
Stack additions: [V1035]
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, 0x0, V517, 0x5bb, V520, V518, 0x0, V1028, V1035]

================================

Block 0xace
[0xace:0xad4]
---
Predecessors: [0xab2, 0xacb]
Successors: [0xad5, 0xad6]
---
0xace JUMPDEST
0xacf ISZERO
0xad0 ISZERO
0xad1 PUSH2 0xad6
0xad4 JUMPI
---
0xace: JUMPDEST 
0xacf: V1036 = ISZERO S0
0xad0: V1037 = ISZERO V1036
0xad1: V1038 = 0xad6
0xad4: JUMPI 0xad6 V1037
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, 0x0, V517, 0x5bb, V520, V518, 0x0, V1028, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, 0x0, V517, 0x5bb, V520, V518, 0x0, V1028]

================================

Block 0xad5
[0xad5:0xad5]
---
Predecessors: [0xace]
Successors: []
---
0xad5 INVALID
---
0xad5: INVALID 
---
Entry stack: [V12, {0x12b, 0x249}, 0x0, V518, 0x0, V517, 0x5bb, V520, V518, 0x0, V1028]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, 0x0, V518, 0x0, V517, 0x5bb, V520, V518, 0x0, V1028]

================================

Block 0xad6
[0xad6:0xad9]
---
Predecessors: [0xace, 0xae1]
Successors: [0xada]
---
0xad6 JUMPDEST
0xad7 DUP1
0xad8 SWAP2
0xad9 POP
---
0xad6: JUMPDEST 
---
Entry stack: [V12, S9, {0x0, 0x12b, 0x249}, S7, S6, S5, {0x5bb, 0x641, 0x65f}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, S9, {0x0, 0x12b, 0x249}, S7, S6, S5, {0x5bb, 0x641, 0x65f}, S3, S2, S0, S0]

================================

Block 0xada
[0xada:0xae0]
---
Predecessors: [0xad6]
Successors: [0x5bb, 0x641, 0x65f]
---
0xada JUMPDEST
0xadb POP
0xadc SWAP3
0xadd SWAP2
0xade POP
0xadf POP
0xae0 JUMP
---
0xada: JUMPDEST 
0xae0: JUMP {0x5bb, 0x641, 0x65f}
---
Entry stack: [V12, S9, {0x0, 0x12b, 0x249}, S7, S6, S5, {0x5bb, 0x641, 0x65f}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, S9, {0x0, 0x12b, 0x249}, S7, S6, S5, S1]

================================

Block 0xae1
[0xae1:0xaee]
---
Predecessors: [0x62b, 0x64c]
Successors: [0xad6, 0xaef]
---
0xae1 JUMPDEST
0xae2 PUSH1 0x0
0xae4 DUP3
0xae5 DUP3
0xae6 ADD
0xae7 DUP4
0xae8 DUP2
0xae9 LT
0xaea ISZERO
0xaeb PUSH2 0xad6
0xaee JUMPI
---
0xae1: JUMPDEST 
0xae2: V1039 = 0x0
0xae6: V1040 = ADD S0 S1
0xae9: V1041 = LT V1040 S1
0xaea: V1042 = ISZERO V1041
0xaeb: V1043 = 0xad6
0xaee: JUMPI 0xad6 V1042
---
Entry stack: [V12, S7, {0x0, 0x12b, 0x249}, S5, S4, S3, {0x641, 0x65f}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1040]
Exit stack: [V12, S7, {0x0, 0x12b, 0x249}, S5, S4, S3, {0x641, 0x65f}, S1, S0, 0x0, V1040]

================================

Block 0xaef
[0xaef:0xaef]
---
Predecessors: [0xae1]
Successors: []
---
0xaef INVALID
---
0xaef: INVALID 
---
Entry stack: [V12, S9, {0x0, 0x12b, 0x249}, S7, S6, S5, {0x641, 0x65f}, S3, S2, 0x0, V1040]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, {0x0, 0x12b, 0x249}, S7, S6, S5, {0x641, 0x65f}, S3, S2, 0x0, V1040]

================================

Block 0xaf0
[0xaf0:0xaf3]
---
Predecessors: []
Successors: [0xaf4]
---
0xaf0 JUMPDEST
0xaf1 DUP1
0xaf2 SWAP2
0xaf3 POP
---
0xaf0: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0xaf4
[0xaf4:0xafa]
---
Predecessors: [0xaf0]
Successors: []
Has unresolved jump.
---
0xaf4 JUMPDEST
0xaf5 POP
0xaf6 SWAP3
0xaf7 SWAP2
0xaf8 POP
0xaf9 POP
0xafa JUMP
---
0xaf4: JUMPDEST 
0xafa: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xafb
[0xafb:0xb19]
---
Predecessors: [0x759, 0x876]
Successors: [0xb1a, 0xb1b]
---
0xafb JUMPDEST
0xafc PUSH1 0x0
0xafe DUP1
0xaff PUSH1 0x0
0xb01 PUSH2 0x3e8
0xb04 PUSH1 0x5
0xb06 SLOAD
0xb07 ADDRESS
0xb08 PUSH1 0x1
0xb0a PUSH1 0xa0
0xb0c PUSH1 0x2
0xb0e EXP
0xb0f SUB
0xb10 AND
0xb11 BALANCE
0xb12 MUL
0xb13 DUP2
0xb14 ISZERO
0xb15 ISZERO
0xb16 PUSH2 0xb1b
0xb19 JUMPI
---
0xafb: JUMPDEST 
0xafc: V1044 = 0x0
0xaff: V1045 = 0x0
0xb01: V1046 = 0x3e8
0xb04: V1047 = 0x5
0xb06: V1048 = S[0x5]
0xb07: V1049 = ADDRESS
0xb08: V1050 = 0x1
0xb0a: V1051 = 0xa0
0xb0c: V1052 = 0x2
0xb0e: V1053 = EXP 0x2 0xa0
0xb0f: V1054 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb10: V1055 = AND 0xffffffffffffffffffffffffffffffffffffffff V1049
0xb11: V1056 = BALANCE V1055
0xb12: V1057 = MUL V1056 V1048
0xb14: V1058 = ISZERO 0x3e8
0xb15: V1059 = ISZERO 0x0
0xb16: V1060 = 0xb1b
0xb19: JUMPI 0xb1b 0x1
---
Entry stack: [V12, {0x12b, 0x249}, S3, S2, S1, {0x760, 0x88b}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x3e8, V1057]
Exit stack: [V12, {0x12b, 0x249}, S3, S2, S1, {0x760, 0x88b}, 0x0, 0x0, 0x0, 0x3e8, V1057]

================================

Block 0xb1a
[0xb1a:0xb1a]
---
Predecessors: [0xafb]
Successors: []
---
0xb1a INVALID
---
0xb1a: INVALID 
---
Entry stack: [V12, {0x12b, 0x249}, S8, S7, S6, {0x760, 0x88b}, 0x0, 0x0, 0x0, 0x3e8, V1057]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, S8, S7, S6, {0x760, 0x88b}, 0x0, 0x0, 0x0, 0x3e8, V1057]

================================

Block 0xb1b
[0xb1b:0xb37]
---
Predecessors: [0xafb]
Successors: [0xb38, 0xb39]
---
0xb1b JUMPDEST
0xb1c DIV
0xb1d SWAP2
0xb1e POP
0xb1f PUSH2 0x3e8
0xb22 PUSH1 0x6
0xb24 SLOAD
0xb25 ADDRESS
0xb26 PUSH1 0x1
0xb28 PUSH1 0xa0
0xb2a PUSH1 0x2
0xb2c EXP
0xb2d SUB
0xb2e AND
0xb2f BALANCE
0xb30 MUL
0xb31 DUP2
0xb32 ISZERO
0xb33 ISZERO
0xb34 PUSH2 0xb39
0xb37 JUMPI
---
0xb1b: JUMPDEST 
0xb1c: V1061 = DIV V1057 0x3e8
0xb1f: V1062 = 0x3e8
0xb22: V1063 = 0x6
0xb24: V1064 = S[0x6]
0xb25: V1065 = ADDRESS
0xb26: V1066 = 0x1
0xb28: V1067 = 0xa0
0xb2a: V1068 = 0x2
0xb2c: V1069 = EXP 0x2 0xa0
0xb2d: V1070 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2e: V1071 = AND 0xffffffffffffffffffffffffffffffffffffffff V1065
0xb2f: V1072 = BALANCE V1071
0xb30: V1073 = MUL V1072 V1064
0xb32: V1074 = ISZERO 0x3e8
0xb33: V1075 = ISZERO 0x0
0xb34: V1076 = 0xb39
0xb37: JUMPI 0xb39 0x1
---
Entry stack: [V12, {0x12b, 0x249}, S8, S7, S6, {0x760, 0x88b}, 0x0, 0x0, 0x0, 0x3e8, V1057]
Stack pops: 4
Stack additions: [V1061, S2, 0x3e8, V1073]
Exit stack: [V12, {0x12b, 0x249}, S8, S7, S6, {0x760, 0x88b}, 0x0, V1061, 0x0, 0x3e8, V1073]

================================

Block 0xb38
[0xb38:0xb38]
---
Predecessors: [0xb1b]
Successors: []
---
0xb38 INVALID
---
0xb38: INVALID 
---
Entry stack: [V12, {0x12b, 0x249}, S8, S7, S6, {0x760, 0x88b}, 0x0, V1061, 0x0, 0x3e8, V1073]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, S8, S7, S6, {0x760, 0x88b}, 0x0, V1061, 0x0, 0x3e8, V1073]

================================

Block 0xb39
[0xb39:0xb52]
---
Predecessors: [0xb1b]
Successors: [0xb53, 0xb58]
---
0xb39 JUMPDEST
0xb3a PUSH1 0x2
0xb3c SLOAD
0xb3d SWAP2
0xb3e SWAP1
0xb3f DIV
0xb40 SWAP2
0xb41 POP
0xb42 PUSH1 0x1
0xb44 PUSH1 0xa0
0xb46 PUSH1 0x2
0xb48 EXP
0xb49 SUB
0xb4a AND
0xb4b ISZERO
0xb4c DUP1
0xb4d ISZERO
0xb4e SWAP1
0xb4f PUSH2 0xb58
0xb52 JUMPI
---
0xb39: JUMPDEST 
0xb3a: V1077 = 0x2
0xb3c: V1078 = S[0x2]
0xb3f: V1079 = DIV V1073 0x3e8
0xb42: V1080 = 0x1
0xb44: V1081 = 0xa0
0xb46: V1082 = 0x2
0xb48: V1083 = EXP 0x2 0xa0
0xb49: V1084 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4a: V1085 = AND 0xffffffffffffffffffffffffffffffffffffffff V1078
0xb4b: V1086 = ISZERO V1085
0xb4d: V1087 = ISZERO V1086
0xb4f: V1088 = 0xb58
0xb52: JUMPI 0xb58 V1086
---
Entry stack: [V12, {0x12b, 0x249}, S8, S7, S6, {0x760, 0x88b}, 0x0, V1061, 0x0, 0x3e8, V1073]
Stack pops: 3
Stack additions: [V1079, V1087]
Exit stack: [V12, {0x12b, 0x249}, S8, S7, S6, {0x760, 0x88b}, 0x0, V1061, V1079, V1087]

================================

Block 0xb53
[0xb53:0xb57]
---
Predecessors: [0xb39]
Successors: [0xb58]
---
0xb53 POP
0xb54 PUSH1 0x0
0xb56 DUP3
0xb57 GT
---
0xb54: V1089 = 0x0
0xb57: V1090 = GT V1061 0x0
---
Entry stack: [V12, {0x12b, 0x249}, S7, S6, S5, {0x760, 0x88b}, 0x0, V1061, V1079, V1087]
Stack pops: 3
Stack additions: [S2, S1, V1090]
Exit stack: [V12, {0x12b, 0x249}, S7, S6, S5, {0x760, 0x88b}, 0x0, V1061, V1079, V1090]

================================

Block 0xb58
[0xb58:0xb5d]
---
Predecessors: [0xb39, 0xb53]
Successors: [0xb5e, 0xb90]
---
0xb58 JUMPDEST
0xb59 ISZERO
0xb5a PUSH2 0xb90
0xb5d JUMPI
---
0xb58: JUMPDEST 
0xb59: V1091 = ISZERO S0
0xb5a: V1092 = 0xb90
0xb5d: JUMPI 0xb90 V1091
---
Entry stack: [V12, {0x12b, 0x249}, S7, S6, S5, {0x760, 0x88b}, 0x0, V1061, V1079, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, S7, S6, S5, {0x760, 0x88b}, 0x0, V1061, V1079]

================================

Block 0xb5e
[0xb5e:0xb8b]
---
Predecessors: [0xb58]
Successors: [0xb8c, 0xb90]
---
0xb5e PUSH1 0x2
0xb60 SLOAD
0xb61 PUSH1 0x1
0xb63 PUSH1 0xa0
0xb65 PUSH1 0x2
0xb67 EXP
0xb68 SUB
0xb69 AND
0xb6a DUP3
0xb6b ISZERO
0xb6c PUSH2 0x8fc
0xb6f MUL
0xb70 DUP4
0xb71 PUSH1 0x40
0xb73 MLOAD
0xb74 PUSH1 0x0
0xb76 PUSH1 0x40
0xb78 MLOAD
0xb79 DUP1
0xb7a DUP4
0xb7b SUB
0xb7c DUP2
0xb7d DUP6
0xb7e DUP9
0xb7f DUP9
0xb80 CALL
0xb81 SWAP4
0xb82 POP
0xb83 POP
0xb84 POP
0xb85 POP
0xb86 ISZERO
0xb87 ISZERO
0xb88 PUSH2 0xb90
0xb8b JUMPI
---
0xb5e: V1093 = 0x2
0xb60: V1094 = S[0x2]
0xb61: V1095 = 0x1
0xb63: V1096 = 0xa0
0xb65: V1097 = 0x2
0xb67: V1098 = EXP 0x2 0xa0
0xb68: V1099 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb69: V1100 = AND 0xffffffffffffffffffffffffffffffffffffffff V1094
0xb6b: V1101 = ISZERO V1061
0xb6c: V1102 = 0x8fc
0xb6f: V1103 = MUL 0x8fc V1101
0xb71: V1104 = 0x40
0xb73: V1105 = M[0x40]
0xb74: V1106 = 0x0
0xb76: V1107 = 0x40
0xb78: V1108 = M[0x40]
0xb7b: V1109 = SUB V1105 V1108
0xb80: V1110 = CALL V1103 V1100 V1061 V1108 V1109 V1108 0x0
0xb86: V1111 = ISZERO V1110
0xb87: V1112 = ISZERO V1111
0xb88: V1113 = 0xb90
0xb8b: JUMPI 0xb90 V1112
---
Entry stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]

================================

Block 0xb8c
[0xb8c:0xb8f]
---
Predecessors: [0xb5e]
Successors: []
---
0xb8c PUSH1 0x0
0xb8e DUP1
0xb8f REVERT
---
0xb8c: V1114 = 0x0
0xb8f: REVERT 0x0 0x0
---
Entry stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]

================================

Block 0xb90
[0xb90:0xb90]
---
Predecessors: [0xb58, 0xb5e]
Successors: [0xb91]
---
0xb90 JUMPDEST
---
0xb90: JUMPDEST 
---
Entry stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]

================================

Block 0xb91
[0xb91:0xba5]
---
Predecessors: [0xb90]
Successors: [0xba6, 0xbab]
---
0xb91 JUMPDEST
0xb92 PUSH1 0x3
0xb94 SLOAD
0xb95 PUSH1 0x1
0xb97 PUSH1 0xa0
0xb99 PUSH1 0x2
0xb9b EXP
0xb9c SUB
0xb9d AND
0xb9e ISZERO
0xb9f DUP1
0xba0 ISZERO
0xba1 SWAP1
0xba2 PUSH2 0xbab
0xba5 JUMPI
---
0xb91: JUMPDEST 
0xb92: V1115 = 0x3
0xb94: V1116 = S[0x3]
0xb95: V1117 = 0x1
0xb97: V1118 = 0xa0
0xb99: V1119 = 0x2
0xb9b: V1120 = EXP 0x2 0xa0
0xb9c: V1121 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9d: V1122 = AND 0xffffffffffffffffffffffffffffffffffffffff V1116
0xb9e: V1123 = ISZERO V1122
0xba0: V1124 = ISZERO V1123
0xba2: V1125 = 0xbab
0xba5: JUMPI 0xbab V1123
---
Entry stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]
Stack pops: 0
Stack additions: [V1124]
Exit stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079, V1124]

================================

Block 0xba6
[0xba6:0xbaa]
---
Predecessors: [0xb91]
Successors: [0xbab]
---
0xba6 POP
0xba7 PUSH1 0x0
0xba9 DUP2
0xbaa GT
---
0xba7: V1126 = 0x0
0xbaa: V1127 = GT V1079 0x0
---
Entry stack: [V12, {0x12b, 0x249}, S7, S6, S5, {0x760, 0x88b}, 0x0, V1061, V1079, V1124]
Stack pops: 2
Stack additions: [S1, V1127]
Exit stack: [V12, {0x12b, 0x249}, S7, S6, S5, {0x760, 0x88b}, 0x0, V1061, V1079, V1127]

================================

Block 0xbab
[0xbab:0xbb0]
---
Predecessors: [0xb91, 0xba6]
Successors: [0xbb1, 0xbe3]
---
0xbab JUMPDEST
0xbac ISZERO
0xbad PUSH2 0xbe3
0xbb0 JUMPI
---
0xbab: JUMPDEST 
0xbac: V1128 = ISZERO S0
0xbad: V1129 = 0xbe3
0xbb0: JUMPI 0xbe3 V1128
---
Entry stack: [V12, {0x12b, 0x249}, S7, S6, S5, {0x760, 0x88b}, 0x0, V1061, V1079, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, S7, S6, S5, {0x760, 0x88b}, 0x0, V1061, V1079]

================================

Block 0xbb1
[0xbb1:0xbde]
---
Predecessors: [0xbab]
Successors: [0xbdf, 0xbe3]
---
0xbb1 PUSH1 0x3
0xbb3 SLOAD
0xbb4 PUSH1 0x1
0xbb6 PUSH1 0xa0
0xbb8 PUSH1 0x2
0xbba EXP
0xbbb SUB
0xbbc AND
0xbbd DUP2
0xbbe ISZERO
0xbbf PUSH2 0x8fc
0xbc2 MUL
0xbc3 DUP3
0xbc4 PUSH1 0x40
0xbc6 MLOAD
0xbc7 PUSH1 0x0
0xbc9 PUSH1 0x40
0xbcb MLOAD
0xbcc DUP1
0xbcd DUP4
0xbce SUB
0xbcf DUP2
0xbd0 DUP6
0xbd1 DUP9
0xbd2 DUP9
0xbd3 CALL
0xbd4 SWAP4
0xbd5 POP
0xbd6 POP
0xbd7 POP
0xbd8 POP
0xbd9 ISZERO
0xbda ISZERO
0xbdb PUSH2 0xbe3
0xbde JUMPI
---
0xbb1: V1130 = 0x3
0xbb3: V1131 = S[0x3]
0xbb4: V1132 = 0x1
0xbb6: V1133 = 0xa0
0xbb8: V1134 = 0x2
0xbba: V1135 = EXP 0x2 0xa0
0xbbb: V1136 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbbc: V1137 = AND 0xffffffffffffffffffffffffffffffffffffffff V1131
0xbbe: V1138 = ISZERO V1079
0xbbf: V1139 = 0x8fc
0xbc2: V1140 = MUL 0x8fc V1138
0xbc4: V1141 = 0x40
0xbc6: V1142 = M[0x40]
0xbc7: V1143 = 0x0
0xbc9: V1144 = 0x40
0xbcb: V1145 = M[0x40]
0xbce: V1146 = SUB V1142 V1145
0xbd3: V1147 = CALL V1140 V1137 V1079 V1145 V1146 V1145 0x0
0xbd9: V1148 = ISZERO V1147
0xbda: V1149 = ISZERO V1148
0xbdb: V1150 = 0xbe3
0xbde: JUMPI 0xbe3 V1149
---
Entry stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]

================================

Block 0xbdf
[0xbdf:0xbe2]
---
Predecessors: [0xbb1]
Successors: []
---
0xbdf PUSH1 0x0
0xbe1 DUP1
0xbe2 REVERT
---
0xbdf: V1151 = 0x0
0xbe2: REVERT 0x0 0x0
---
Entry stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]

================================

Block 0xbe3
[0xbe3:0xbe3]
---
Predecessors: [0xbab, 0xbb1]
Successors: [0xbe4]
---
0xbe3 JUMPDEST
---
0xbe3: JUMPDEST 
---
Entry stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]

================================

Block 0xbe4
[0xbe4:0xc18]
---
Predecessors: [0xbe3]
Successors: [0xc19, 0xc1d]
---
0xbe4 JUMPDEST
0xbe5 PUSH1 0x1
0xbe7 SLOAD
0xbe8 PUSH1 0x1
0xbea PUSH1 0xa0
0xbec PUSH1 0x2
0xbee EXP
0xbef SUB
0xbf0 SWAP1
0xbf1 DUP2
0xbf2 AND
0xbf3 SWAP1
0xbf4 ADDRESS
0xbf5 AND
0xbf6 BALANCE
0xbf7 DUP1
0xbf8 ISZERO
0xbf9 PUSH2 0x8fc
0xbfc MUL
0xbfd SWAP1
0xbfe PUSH1 0x40
0xc00 MLOAD
0xc01 PUSH1 0x0
0xc03 PUSH1 0x40
0xc05 MLOAD
0xc06 DUP1
0xc07 DUP4
0xc08 SUB
0xc09 DUP2
0xc0a DUP6
0xc0b DUP9
0xc0c DUP9
0xc0d CALL
0xc0e SWAP4
0xc0f POP
0xc10 POP
0xc11 POP
0xc12 POP
0xc13 ISZERO
0xc14 ISZERO
0xc15 PUSH2 0xc1d
0xc18 JUMPI
---
0xbe4: JUMPDEST 
0xbe5: V1152 = 0x1
0xbe7: V1153 = S[0x1]
0xbe8: V1154 = 0x1
0xbea: V1155 = 0xa0
0xbec: V1156 = 0x2
0xbee: V1157 = EXP 0x2 0xa0
0xbef: V1158 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf2: V1159 = AND 0xffffffffffffffffffffffffffffffffffffffff V1153
0xbf4: V1160 = ADDRESS
0xbf5: V1161 = AND V1160 0xffffffffffffffffffffffffffffffffffffffff
0xbf6: V1162 = BALANCE V1161
0xbf8: V1163 = ISZERO V1162
0xbf9: V1164 = 0x8fc
0xbfc: V1165 = MUL 0x8fc V1163
0xbfe: V1166 = 0x40
0xc00: V1167 = M[0x40]
0xc01: V1168 = 0x0
0xc03: V1169 = 0x40
0xc05: V1170 = M[0x40]
0xc08: V1171 = SUB V1167 V1170
0xc0d: V1172 = CALL V1165 V1159 V1162 V1170 V1171 V1170 0x0
0xc13: V1173 = ISZERO V1172
0xc14: V1174 = ISZERO V1173
0xc15: V1175 = 0xc1d
0xc18: JUMPI 0xc1d V1174
---
Entry stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]

================================

Block 0xc19
[0xc19:0xc1c]
---
Predecessors: [0xbe4]
Successors: []
---
0xc19 PUSH1 0x0
0xc1b DUP1
0xc1c REVERT
---
0xc19: V1176 = 0x0
0xc1c: REVERT 0x0 0x0
---
Entry stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]

================================

Block 0xc1d
[0xc1d:0xc21]
---
Predecessors: [0xbe4]
Successors: [0xc22]
---
0xc1d JUMPDEST
0xc1e PUSH1 0x1
0xc20 SWAP3
0xc21 POP
---
0xc1d: JUMPDEST 
0xc1e: V1177 = 0x1
---
Entry stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x0, V1061, V1079]
Stack pops: 3
Stack additions: [0x1, S1, S0]
Exit stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x1, V1061, V1079]

================================

Block 0xc22
[0xc22:0xc26]
---
Predecessors: [0xc1d]
Successors: [0x760, 0x88b]
---
0xc22 JUMPDEST
0xc23 POP
0xc24 POP
0xc25 SWAP1
0xc26 JUMP
---
0xc22: JUMPDEST 
0xc26: JUMP {0x760, 0x88b}
---
Entry stack: [V12, {0x12b, 0x249}, S6, S5, S4, {0x760, 0x88b}, 0x1, V1061, V1079]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, {0x12b, 0x249}, S6, S5, S4, 0x1]

================================

Block 0xc27
[0xc27:0xc68]
---
Predecessors: []
Successors: []
---
0xc27 STOP
0xc28 LOG1
0xc29 PUSH6 0x627a7a723058
0xc30 SHA3
0xc31 STOP
0xc32 MISSING 0xc3
0xc33 MISSING 0xbb
0xc34 MISSING 0x4d
0xc35 MISSING 0x4f
0xc36 DUP7
0xc37 MISSING 0xe0
0xc38 MISSING 0xdb
0xc39 DUP12
0xc3a PUSH9 0x9a335f320c4d793b49
0xc44 MISSING 0xba
0xc45 MISSING 0xe7
0xc46 MISSING 0xeb
0xc47 SIGNEXTEND
0xc48 MISSING 0xdc
0xc49 MISSING 0xcc
0xc4a AND
0xc4b PUSH29 0x572986971f0029
---
0xc27: STOP 
0xc28: LOG S0 S1 S2
0xc29: V1178 = 0x627a7a723058
0xc30: V1179 = SHA3 0x627a7a723058 S3
0xc31: STOP 
0xc32: MISSING 0xc3
0xc33: MISSING 0xbb
0xc34: MISSING 0x4d
0xc35: MISSING 0x4f
0xc37: MISSING 0xe0
0xc38: MISSING 0xdb
0xc3a: V1180 = 0x9a335f320c4d793b49
0xc44: MISSING 0xba
0xc45: MISSING 0xe7
0xc46: MISSING 0xeb
0xc47: V1181 = SIGNEXTEND S0 S1
0xc48: MISSING 0xdc
0xc49: MISSING 0xcc
0xc4a: V1182 = AND S0 S1
0xc4b: V1183 = 0x572986971f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1179, S6, S0, S1, S2, S3, S4, S5, S6, 0x9a335f320c4d793b49, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V1181, 0x572986971f0029, V1182]
Exit stack: []

================================

Function 0:
Public function signature: 0x18ad9260
Entry block: 0x12f
Exit block: 0x142
Body: 0x12f, 0x136, 0x13a, 0x142, 0x7ea

Function 1:
Public function signature: 0x1d85de4f
Entry block: 0x15e
Exit block: 0x171
Body: 0x15e, 0x165, 0x169, 0x171, 0x7f9

Function 2:
Public function signature: 0x28d1226a
Entry block: 0x183
Exit block: 0x171
Body: 0x171, 0x183, 0x18a, 0x18e, 0x7ff

Function 3:
Public function signature: 0x3197cbb6
Entry block: 0x1a8
Exit block: 0x171
Body: 0x171, 0x1a8, 0x1af, 0x1b3, 0x805

Function 4:
Public function signature: 0x361c3308
Entry block: 0x1cd
Exit block: 0x171
Body: 0x171, 0x1cd, 0x1d4, 0x1d8, 0x80b

Function 5:
Public function signature: 0x41c0e1b5
Entry block: 0x1f2
Exit block: 0x828
Body: 0x1f2, 0x1f9, 0x1fd, 0x811, 0x828, 0x82c

Function 6:
Public function signature: 0x45e05f43
Entry block: 0x207
Exit block: 0x142
Body: 0x142, 0x207, 0x20e, 0x212, 0x83d

Function 7:
Public function signature: 0x4bb278f3
Entry block: 0x236
Exit block: 0x249
Body: 0x236, 0x23d, 0x241, 0x249, 0x84c, 0x864, 0x868, 0x872, 0x876, 0x88b, 0x88e, 0x88f

Function 8:
Public function signature: 0x63b20117
Entry block: 0x25d
Exit block: 0x171
Body: 0x171, 0x25d, 0x264, 0x268, 0x892

Function 9:
Public function signature: 0x63bd1d4a
Entry block: 0x282
Exit block: 0x142
Body: 0x142, 0x282, 0x289, 0x28d, 0x898

Function 10:
Public function signature: 0x78e97925
Entry block: 0x2b1
Exit block: 0x171
Body: 0x171, 0x2b1, 0x2b8, 0x2bc, 0x8a7

Function 11:
Public function signature: 0x7a9d5e11
Entry block: 0x2d6
Exit block: 0x249
Body: 0x249, 0x2d6, 0x2dd, 0x2e1, 0x8ad

Function 12:
Public function signature: 0x7bb98a68
Entry block: 0x2fd
Exit block: 0x142
Body: 0x142, 0x2fd, 0x304, 0x308, 0x8bb

Function 13:
Public function signature: 0x8ba47bdd
Entry block: 0x32c
Exit block: 0x3a9
Body: 0x32c, 0x333, 0x337, 0x33f, 0x363, 0x36c, 0x374, 0x37c, 0x390, 0x3a9, 0x8ca, 0x91a, 0x922, 0x935, 0x943, 0x957, 0x960

Function 14:
Public function signature: 0x8d4e4083
Entry block: 0x3b7
Exit block: 0x249
Body: 0x249, 0x3b7, 0x3be, 0x3c2, 0x968

Function 15:
Public function signature: 0x9ec8ca2c
Entry block: 0x3de
Exit block: 0x12d
Body: 0x12d, 0x3de, 0x3e5, 0x3e9, 0x971, 0x988, 0x98c, 0x992, 0x993

Function 16:
Public function signature: 0xa4d66daf
Entry block: 0x3f6
Exit block: 0x171
Body: 0x171, 0x3f6, 0x3fd, 0x401, 0x996

Function 17:
Public function signature: 0xb4427263
Entry block: 0x41b
Exit block: 0x249
Body: 0x249, 0x41b

Function 18:
Public function signature: 0xc296302a
Entry block: 0x437
Exit block: 0x12d
Body: 0x12d, 0x437, 0x43e, 0x442, 0x99c, 0x9b3, 0x9b7, 0x9e0, 0x9e1

Function 19:
Public function signature: 0xccb98ffc
Entry block: 0x458
Exit block: 0x12d
Body: 0x12d, 0x458, 0x45f, 0x463, 0x9e4, 0x9fb, 0x9ff, 0xa05, 0xa06

Function 20:
Public function signature: 0xccd4df82
Entry block: 0x470
Exit block: 0x12d
Body: 0x12d, 0x470, 0x477, 0x47b, 0xa09, 0xa20, 0xa24, 0xa38, 0xa39

Function 21:
Public function signature: 0xd3419bf3
Entry block: 0x48a
Exit block: 0x142
Body: 0x142, 0x48a, 0x491, 0x495, 0xa3c

Function 22:
Public function signature: 0xebf0c717
Entry block: 0x4b9
Exit block: 0x142
Body: 0x142, 0x4b9, 0x4c0, 0x4c4, 0xa4b

Function 23:
Public function signature: 0xf2a75fe4
Entry block: 0x4e8
Exit block: 0x12d
Body: 0x12d, 0x4e8, 0x4ef, 0x4f3, 0x83a, 0x83b, 0xa5a, 0xa71, 0xa75, 0xaaa

Function 24:
Public fallback function
Entry block: 0x122
Exit block: 0x12d
Body: 0x122, 0x123, 0x12b, 0x12d

Function 25:
Private function
Entry block: 0xafb
Exit block: 0xc22
Body: 0xafb, 0xb1b, 0xb39, 0xb53, 0xb58, 0xb5e, 0xb90, 0xb91, 0xba6, 0xbab, 0xbb1, 0xbe3, 0xbe4, 0xc1d, 0xc22

Function 26:
Private function
Entry block: 0x4fd
Exit block: 0x7e5
Body: 0x4fd, 0x50e, 0x51b, 0x522, 0x52d, 0x57f, 0x590, 0x5a3, 0x5bb, 0x5c4, 0x61a, 0x62b, 0x641, 0x64c, 0x65f, 0x6c1, 0x6d2, 0x72d, 0x73e, 0x759, 0x760, 0x762, 0x7e5, 0xab2, 0xabf, 0xacb, 0xace, 0xad6, 0xada, 0xae1

