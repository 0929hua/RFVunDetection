Block 0x0
[0x0:0x32]
---
Predecessors: []
Successors: [0x33, 0x52]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 DUP1
0x29 PUSH4 0x590e1ae3
0x2e EQ
0x2f PUSH2 0x52
0x32 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x29: V6 = 0x590e1ae3
0x2e: V7 = EQ 0x590e1ae3 V5
0x2f: V8 = 0x52
0x32: JUMPI 0x52 V7
---
Entry stack: []
Stack pops: 0
Stack additions: [V5]
Exit stack: [V5]

================================

Block 0x33
[0x33:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x66]
---
0x33 DUP1
0x34 PUSH4 0x63bd1d4a
0x39 EQ
0x3a PUSH2 0x66
0x3d JUMPI
---
0x34: V9 = 0x63bd1d4a
0x39: V10 = EQ 0x63bd1d4a V5
0x3a: V11 = 0x66
0x3d: JUMPI 0x66 V10
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0x33]
Successors: [0x49, 0x7a]
---
0x3e DUP1
0x3f PUSH4 0xd7bb99ba
0x44 EQ
0x45 PUSH2 0x7a
0x48 JUMPI
---
0x3f: V12 = 0xd7bb99ba
0x44: V13 = EQ 0xd7bb99ba V5
0x45: V14 = 0x7a
0x48: JUMPI 0x7a V13
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x49
[0x49:0x4c]
---
Predecessors: [0x3e]
Successors: [0x4d]
---
0x49 PUSH2 0x4d
0x4c JUMP
---
0x49: V15 = 0x4d
0x4c: JUMP 0x4d
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x4d
[0x4d:0x51]
---
Predecessors: [0x49]
Successors: []
---
0x4d JUMPDEST
0x4e PUSH2 0x2
0x51 JUMP
---
0x4d: JUMPDEST 
0x4e: V16 = 0x2
0x51: THROW 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x52
[0x52:0x57]
---
Predecessors: [0x0]
Successors: [0x58]
---
0x52 JUMPDEST
0x53 CALLVALUE
0x54 PUSH2 0x2
0x57 JUMPI
---
0x52: JUMPDEST 
0x53: V17 = CALLVALUE
0x54: V18 = 0x2
0x57: THROWI V17
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x58
[0x58:0x63]
---
Predecessors: [0x52]
Successors: [0x8e]
---
0x58 PUSH2 0x64
0x5b PUSH1 0x4
0x5d DUP1
0x5e POP
0x5f POP
0x60 PUSH2 0x8e
0x63 JUMP
---
0x58: V19 = 0x64
0x5b: V20 = 0x4
0x60: V21 = 0x8e
0x63: JUMP 0x8e
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x64]
Exit stack: [V5, 0x64]

================================

Block 0x64
[0x64:0x65]
---
Predecessors: [0x1a8]
Successors: []
---
0x64 JUMPDEST
0x65 STOP
---
0x64: JUMPDEST 
0x65: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x66
[0x66:0x6b]
---
Predecessors: [0x33]
Successors: [0x6c]
---
0x66 JUMPDEST
0x67 CALLVALUE
0x68 PUSH2 0x2
0x6b JUMPI
---
0x66: JUMPDEST 
0x67: V22 = CALLVALUE
0x68: V23 = 0x2
0x6b: THROWI V22
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x6c
[0x6c:0x77]
---
Predecessors: [0x66]
Successors: [0x1ab]
---
0x6c PUSH2 0x78
0x6f PUSH1 0x4
0x71 DUP1
0x72 POP
0x73 POP
0x74 PUSH2 0x1ab
0x77 JUMP
---
0x6c: V24 = 0x78
0x6f: V25 = 0x4
0x74: V26 = 0x1ab
0x77: JUMP 0x1ab
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x78]
Exit stack: [V5, 0x78]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x254]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x7a
[0x7a:0x7f]
---
Predecessors: [0x3e]
Successors: [0x80]
---
0x7a JUMPDEST
0x7b CALLVALUE
0x7c PUSH2 0x2
0x7f JUMPI
---
0x7a: JUMPDEST 
0x7b: V27 = CALLVALUE
0x7c: V28 = 0x2
0x7f: THROWI V27
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x80
[0x80:0x8b]
---
Predecessors: [0x7a]
Successors: [0x256]
---
0x80 PUSH2 0x8c
0x83 PUSH1 0x4
0x85 DUP1
0x86 POP
0x87 POP
0x88 PUSH2 0x256
0x8b JUMP
---
0x80: V29 = 0x8c
0x83: V30 = 0x4
0x88: V31 = 0x256
0x8b: JUMP 0x256
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x8c]
Exit stack: [V5, 0x8c]

================================

Block 0x8c
[0x8c:0x8d]
---
Predecessors: [0x361]
Successors: []
---
0x8c JUMPDEST
0x8d STOP
---
0x8c: JUMPDEST 
0x8d: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x8e
[0x8e:0x9e]
---
Predecessors: [0x58]
Successors: [0x9f, 0xbf]
---
0x8e JUMPDEST
0x8f PUSH1 0x0
0x91 PUSH1 0x2
0x93 PUSH1 0x0
0x95 POP
0x96 SLOAD
0x97 TIMESTAMP
0x98 GT
0x99 DUP1
0x9a ISZERO
0x9b PUSH2 0xbf
0x9e JUMPI
---
0x8e: JUMPDEST 
0x8f: V32 = 0x0
0x91: V33 = 0x2
0x93: V34 = 0x0
0x96: V35 = S[0x2]
0x97: V36 = TIMESTAMP
0x98: V37 = GT V36 V35
0x9a: V38 = ISZERO V37
0x9b: V39 = 0xbf
0x9e: JUMPI 0xbf V38
---
Entry stack: [V5, 0x64]
Stack pops: 0
Stack additions: [0x0, V37]
Exit stack: [V5, 0x64, 0x0, V37]

================================

Block 0x9f
[0x9f:0xbe]
---
Predecessors: [0x8e]
Successors: [0xbf]
---
0x9f POP
0xa0 PUSH1 0x1
0xa2 PUSH1 0x0
0xa4 POP
0xa5 SLOAD
0xa6 ADDRESS
0xa7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc AND
0xbd BALANCE
0xbe LT
---
0xa0: V40 = 0x1
0xa2: V41 = 0x0
0xa5: V42 = S[0x1]
0xa6: V43 = ADDRESS
0xa7: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xbd: V46 = BALANCE V45
0xbe: V47 = LT V46 V42
---
Entry stack: [V5, 0x64, 0x0, V37]
Stack pops: 1
Stack additions: [V47]
Exit stack: [V5, 0x64, 0x0, V47]

================================

Block 0xbf
[0xbf:0xc4]
---
Predecessors: [0x8e, 0x9f]
Successors: [0xc5, 0x1a7]
---
0xbf JUMPDEST
0xc0 ISZERO
0xc1 PUSH2 0x1a7
0xc4 JUMPI
---
0xbf: JUMPDEST 
0xc0: V48 = ISZERO S0
0xc1: V49 = 0x1a7
0xc4: JUMPI 0x1a7 V48
---
Entry stack: [V5, 0x64, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0x64, 0x0]

================================

Block 0xc5
[0xc5:0xcc]
---
Predecessors: [0xbf]
Successors: [0xcd]
---
0xc5 PUSH1 0x3
0xc7 PUSH1 0x0
0xc9 POP
0xca SLOAD
0xcb SWAP1
0xcc POP
---
0xc5: V50 = 0x3
0xc7: V51 = 0x0
0xca: V52 = S[0x3]
---
Entry stack: [V5, 0x64, 0x0]
Stack pops: 1
Stack additions: [V52]
Exit stack: [V5, 0x64, V52]

================================

Block 0xcd
[0xcd:0xde]
---
Predecessors: [0xc5, 0x169]
Successors: [0xdf, 0xe6]
---
0xcd JUMPDEST
0xce PUSH1 0x4
0xd0 PUSH1 0x0
0xd2 POP
0xd3 DUP1
0xd4 SLOAD
0xd5 SWAP1
0xd6 POP
0xd7 DUP2
0xd8 LT
0xd9 DUP1
0xda ISZERO
0xdb PUSH2 0xe6
0xde JUMPI
---
0xcd: JUMPDEST 
0xce: V53 = 0x4
0xd0: V54 = 0x0
0xd4: V55 = S[0x4]
0xd8: V56 = LT S0 V55
0xda: V57 = ISZERO V56
0xdb: V58 = 0xe6
0xde: JUMPI 0xe6 V57
---
Entry stack: [V5, 0x64, S0]
Stack pops: 1
Stack additions: [S0, V56]
Exit stack: [V5, 0x64, S0, V56]

================================

Block 0xdf
[0xdf:0xe5]
---
Predecessors: [0xcd]
Successors: [0xe6]
---
0xdf POP
0xe0 PUSH3 0x186a0
0xe4 GAS
0xe5 GT
---
0xe0: V59 = 0x186a0
0xe4: V60 = GAS
0xe5: V61 = GT V60 0x186a0
---
Entry stack: [V5, 0x64, S1, V56]
Stack pops: 1
Stack additions: [V61]
Exit stack: [V5, 0x64, S1, V61]

================================

Block 0xe6
[0xe6:0xeb]
---
Predecessors: [0xcd, 0xdf]
Successors: [0xec, 0x19c]
---
0xe6 JUMPDEST
0xe7 ISZERO
0xe8 PUSH2 0x19c
0xeb JUMPI
---
0xe6: JUMPDEST 
0xe7: V62 = ISZERO S0
0xe8: V63 = 0x19c
0xeb: JUMPI 0x19c V62
---
Entry stack: [V5, 0x64, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0x64, S1]

================================

Block 0xec
[0xec:0xfa]
---
Predecessors: [0xe6]
Successors: [0xfb]
---
0xec PUSH1 0x4
0xee PUSH1 0x0
0xf0 POP
0xf1 DUP2
0xf2 DUP2
0xf3 SLOAD
0xf4 DUP2
0xf5 LT
0xf6 ISZERO
0xf7 PUSH2 0x2
0xfa JUMPI
---
0xec: V64 = 0x4
0xee: V65 = 0x0
0xf3: V66 = S[0x4]
0xf5: V67 = LT S0 V66
0xf6: V68 = ISZERO V67
0xf7: V69 = 0x2
0xfa: THROWI V68
---
Entry stack: [V5, 0x64, S0]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V5, 0x64, S0, 0x4, S0]

================================

Block 0xfb
[0xfb:0x10a]
---
Predecessors: [0xec]
Successors: [0x10b]
---
0xfb SWAP1
0xfc PUSH1 0x0
0xfe MSTORE
0xff PUSH1 0x20
0x101 PUSH1 0x0
0x103 SHA3
0x104 SWAP1
0x105 PUSH1 0x2
0x107 MUL
0x108 ADD
0x109 PUSH1 0x0
---
0xfc: V70 = 0x0
0xfe: M[0x0] = 0x4
0xff: V71 = 0x20
0x101: V72 = 0x0
0x103: V73 = SHA3 0x0 0x20
0x105: V74 = 0x2
0x107: V75 = MUL 0x2 S0
0x108: V76 = ADD V75 V73
0x109: V77 = 0x0
---
Entry stack: [V5, 0x64, S2, 0x4, S0]
Stack pops: 2
Stack additions: [V76, 0x0]
Exit stack: [V5, 0x64, S2, V76, 0x0]

================================

Block 0x10b
[0x10b:0x158]
---
Predecessors: [0xfb]
Successors: [0x159]
---
0x10b JUMPDEST
0x10c POP
0x10d PUSH1 0x0
0x10f ADD
0x110 PUSH1 0x0
0x112 SWAP1
0x113 SLOAD
0x114 SWAP1
0x115 PUSH2 0x100
0x118 EXP
0x119 SWAP1
0x11a DIV
0x11b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x130 AND
0x131 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x146 AND
0x147 PUSH2 0x8fc
0x14a PUSH1 0x4
0x14c PUSH1 0x0
0x14e POP
0x14f DUP4
0x150 DUP2
0x151 SLOAD
0x152 DUP2
0x153 LT
0x154 ISZERO
0x155 PUSH2 0x2
0x158 JUMPI
---
0x10b: JUMPDEST 
0x10d: V78 = 0x0
0x10f: V79 = ADD 0x0 V76
0x110: V80 = 0x0
0x113: V81 = S[V79]
0x115: V82 = 0x100
0x118: V83 = EXP 0x100 0x0
0x11a: V84 = DIV V81 0x1
0x11b: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x130: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x131: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x146: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x147: V89 = 0x8fc
0x14a: V90 = 0x4
0x14c: V91 = 0x0
0x151: V92 = S[0x4]
0x153: V93 = LT S2 V92
0x154: V94 = ISZERO V93
0x155: V95 = 0x2
0x158: THROWI V94
---
Entry stack: [V5, 0x64, S2, V76, 0x0]
Stack pops: 3
Stack additions: [S2, V88, 0x8fc, 0x4, S2]
Exit stack: [V5, 0x64, S2, V88, 0x8fc, 0x4, S2]

================================

Block 0x159
[0x159:0x168]
---
Predecessors: [0x10b]
Successors: [0x169]
---
0x159 SWAP1
0x15a PUSH1 0x0
0x15c MSTORE
0x15d PUSH1 0x20
0x15f PUSH1 0x0
0x161 SHA3
0x162 SWAP1
0x163 PUSH1 0x2
0x165 MUL
0x166 ADD
0x167 PUSH1 0x0
---
0x15a: V96 = 0x0
0x15c: M[0x0] = 0x4
0x15d: V97 = 0x20
0x15f: V98 = 0x0
0x161: V99 = SHA3 0x0 0x20
0x163: V100 = 0x2
0x165: V101 = MUL 0x2 S0
0x166: V102 = ADD V101 V99
0x167: V103 = 0x0
---
Entry stack: [V5, 0x64, S4, V88, 0x8fc, 0x4, S0]
Stack pops: 2
Stack additions: [V102, 0x0]
Exit stack: [V5, 0x64, S4, V88, 0x8fc, V102, 0x0]

================================

Block 0x169
[0x169:0x19b]
---
Predecessors: [0x159]
Successors: [0xcd]
---
0x169 JUMPDEST
0x16a POP
0x16b PUSH1 0x1
0x16d ADD
0x16e PUSH1 0x0
0x170 POP
0x171 SLOAD
0x172 SWAP1
0x173 DUP2
0x174 ISZERO
0x175 MUL
0x176 SWAP1
0x177 PUSH1 0x40
0x179 MLOAD
0x17a DUP1
0x17b SWAP1
0x17c POP
0x17d PUSH1 0x0
0x17f PUSH1 0x40
0x181 MLOAD
0x182 DUP1
0x183 DUP4
0x184 SUB
0x185 DUP2
0x186 DUP6
0x187 DUP9
0x188 DUP9
0x189 CALL
0x18a SWAP4
0x18b POP
0x18c POP
0x18d POP
0x18e POP
0x18f POP
0x190 DUP1
0x191 DUP1
0x192 PUSH1 0x1
0x194 ADD
0x195 SWAP2
0x196 POP
0x197 POP
0x198 PUSH2 0xcd
0x19b JUMP
---
0x169: JUMPDEST 
0x16b: V104 = 0x1
0x16d: V105 = ADD 0x1 V102
0x16e: V106 = 0x0
0x171: V107 = S[V105]
0x174: V108 = ISZERO V107
0x175: V109 = MUL V108 0x8fc
0x177: V110 = 0x40
0x179: V111 = M[0x40]
0x17d: V112 = 0x0
0x17f: V113 = 0x40
0x181: V114 = M[0x40]
0x184: V115 = SUB V111 V114
0x189: V116 = CALL V109 V88 V107 V114 V115 V114 0x0
0x192: V117 = 0x1
0x194: V118 = ADD 0x1 S4
0x198: V119 = 0xcd
0x19b: JUMP 0xcd
---
Entry stack: [V5, 0x64, S4, V88, 0x8fc, V102, 0x0]
Stack pops: 5
Stack additions: [V118]
Exit stack: [V5, 0x64, V118]

================================

Block 0x19c
[0x19c:0x1a6]
---
Predecessors: [0xe6]
Successors: [0x1a7]
---
0x19c JUMPDEST
0x19d DUP1
0x19e PUSH1 0x3
0x1a0 PUSH1 0x0
0x1a2 POP
0x1a3 DUP2
0x1a4 SWAP1
0x1a5 SSTORE
0x1a6 POP
---
0x19c: JUMPDEST 
0x19e: V120 = 0x3
0x1a0: V121 = 0x0
0x1a5: S[0x3] = S0
---
Entry stack: [V5, 0x64, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5, 0x64, S0]

================================

Block 0x1a7
[0x1a7:0x1a7]
---
Predecessors: [0xbf, 0x19c]
Successors: [0x1a8]
---
0x1a7 JUMPDEST
---
0x1a7: JUMPDEST 
---
Entry stack: [V5, 0x64, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x64, S0]

================================

Block 0x1a8
[0x1a8:0x1aa]
---
Predecessors: [0x1a7]
Successors: [0x64]
---
0x1a8 JUMPDEST
0x1a9 POP
0x1aa JUMP
---
0x1a8: JUMPDEST 
0x1aa: JUMP 0x64
---
Entry stack: [V5, 0x64, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V5]

================================

Block 0x1ab
[0x1ab:0x1b9]
---
Predecessors: [0x6c]
Successors: [0x1ba, 0x1db]
---
0x1ab JUMPDEST
0x1ac PUSH1 0x2
0x1ae PUSH1 0x0
0x1b0 POP
0x1b1 SLOAD
0x1b2 TIMESTAMP
0x1b3 GT
0x1b4 DUP1
0x1b5 ISZERO
0x1b6 PUSH2 0x1db
0x1b9 JUMPI
---
0x1ab: JUMPDEST 
0x1ac: V122 = 0x2
0x1ae: V123 = 0x0
0x1b1: V124 = S[0x2]
0x1b2: V125 = TIMESTAMP
0x1b3: V126 = GT V125 V124
0x1b5: V127 = ISZERO V126
0x1b6: V128 = 0x1db
0x1b9: JUMPI 0x1db V127
---
Entry stack: [V5, 0x78]
Stack pops: 0
Stack additions: [V126]
Exit stack: [V5, 0x78, V126]

================================

Block 0x1ba
[0x1ba:0x1da]
---
Predecessors: [0x1ab]
Successors: [0x1db]
---
0x1ba POP
0x1bb PUSH1 0x1
0x1bd PUSH1 0x0
0x1bf POP
0x1c0 SLOAD
0x1c1 ADDRESS
0x1c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d7 AND
0x1d8 BALANCE
0x1d9 LT
0x1da ISZERO
---
0x1bb: V129 = 0x1
0x1bd: V130 = 0x0
0x1c0: V131 = S[0x1]
0x1c1: V132 = ADDRESS
0x1c2: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d7: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x1d8: V135 = BALANCE V134
0x1d9: V136 = LT V135 V131
0x1da: V137 = ISZERO V136
---
Entry stack: [V5, 0x78, V126]
Stack pops: 1
Stack additions: [V137]
Exit stack: [V5, 0x78, V137]

================================

Block 0x1db
[0x1db:0x1e0]
---
Predecessors: [0x1ab, 0x1ba]
Successors: [0x1e1, 0x253]
---
0x1db JUMPDEST
0x1dc ISZERO
0x1dd PUSH2 0x253
0x1e0 JUMPI
---
0x1db: JUMPDEST 
0x1dc: V138 = ISZERO S0
0x1dd: V139 = 0x253
0x1e0: JUMPI 0x253 V138
---
Entry stack: [V5, 0x78, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0x78]

================================

Block 0x1e1
[0x1e1:0x252]
---
Predecessors: [0x1db]
Successors: [0x253]
---
0x1e1 PUSH1 0x0
0x1e3 PUSH1 0x0
0x1e5 SWAP1
0x1e6 SLOAD
0x1e7 SWAP1
0x1e8 PUSH2 0x100
0x1eb EXP
0x1ec SWAP1
0x1ed DIV
0x1ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x203 AND
0x204 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x219 AND
0x21a PUSH2 0x8fc
0x21d ADDRESS
0x21e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x233 AND
0x234 BALANCE
0x235 SWAP1
0x236 DUP2
0x237 ISZERO
0x238 MUL
0x239 SWAP1
0x23a PUSH1 0x40
0x23c MLOAD
0x23d DUP1
0x23e SWAP1
0x23f POP
0x240 PUSH1 0x0
0x242 PUSH1 0x40
0x244 MLOAD
0x245 DUP1
0x246 DUP4
0x247 SUB
0x248 DUP2
0x249 DUP6
0x24a DUP9
0x24b DUP9
0x24c CALL
0x24d SWAP4
0x24e POP
0x24f POP
0x250 POP
0x251 POP
0x252 POP
---
0x1e1: V140 = 0x0
0x1e3: V141 = 0x0
0x1e6: V142 = S[0x0]
0x1e8: V143 = 0x100
0x1eb: V144 = EXP 0x100 0x0
0x1ed: V145 = DIV V142 0x1
0x1ee: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x203: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x204: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x219: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x21a: V150 = 0x8fc
0x21d: V151 = ADDRESS
0x21e: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x233: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x234: V154 = BALANCE V153
0x237: V155 = ISZERO V154
0x238: V156 = MUL V155 0x8fc
0x23a: V157 = 0x40
0x23c: V158 = M[0x40]
0x240: V159 = 0x0
0x242: V160 = 0x40
0x244: V161 = M[0x40]
0x247: V162 = SUB V158 V161
0x24c: V163 = CALL V156 V149 V154 V161 V162 V161 0x0
---
Entry stack: [V5, 0x78]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x78]

================================

Block 0x253
[0x253:0x253]
---
Predecessors: [0x1db, 0x1e1]
Successors: [0x254]
---
0x253 JUMPDEST
---
0x253: JUMPDEST 
---
Entry stack: [V5, 0x78]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x78]

================================

Block 0x254
[0x254:0x255]
---
Predecessors: [0x253]
Successors: [0x78]
---
0x254 JUMPDEST
0x255 JUMP
---
0x254: JUMPDEST 
0x255: JUMP 0x78
---
Entry stack: [V5, 0x78]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0x256
[0x256:0x263]
---
Predecessors: [0x80]
Successors: [0x264, 0x268]
---
0x256 JUMPDEST
0x257 PUSH1 0x2
0x259 PUSH1 0x0
0x25b POP
0x25c SLOAD
0x25d TIMESTAMP
0x25e GT
0x25f ISZERO
0x260 PUSH2 0x268
0x263 JUMPI
---
0x256: JUMPDEST 
0x257: V164 = 0x2
0x259: V165 = 0x0
0x25c: V166 = S[0x2]
0x25d: V167 = TIMESTAMP
0x25e: V168 = GT V167 V166
0x25f: V169 = ISZERO V168
0x260: V170 = 0x268
0x263: JUMPI 0x268 V169
---
Entry stack: [V5, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x8c]

================================

Block 0x264
[0x264:0x267]
---
Predecessors: [0x256]
Successors: []
---
0x264 PUSH2 0x2
0x267 JUMP
---
0x264: V171 = 0x2
0x267: THROW 
---
Entry stack: [V5, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x8c]

================================

Block 0x268
[0x268:0x282]
---
Predecessors: [0x256]
Successors: [0x283, 0x2eb]
---
0x268 JUMPDEST
0x269 PUSH1 0x4
0x26b PUSH1 0x0
0x26d POP
0x26e DUP1
0x26f SLOAD
0x270 DUP1
0x271 PUSH1 0x1
0x273 ADD
0x274 DUP3
0x275 DUP2
0x276 DUP2
0x277 SLOAD
0x278 DUP2
0x279 DUP4
0x27a SSTORE
0x27b DUP2
0x27c DUP2
0x27d ISZERO
0x27e GT
0x27f PUSH2 0x2eb
0x282 JUMPI
---
0x268: JUMPDEST 
0x269: V172 = 0x4
0x26b: V173 = 0x0
0x26f: V174 = S[0x4]
0x271: V175 = 0x1
0x273: V176 = ADD 0x1 V174
0x277: V177 = S[0x4]
0x27a: S[0x4] = V176
0x27d: V178 = ISZERO V177
0x27e: V179 = GT V178 V176
0x27f: V180 = 0x2eb
0x282: JUMPI 0x2eb V179
---
Entry stack: [V5, 0x8c]
Stack pops: 0
Stack additions: [0x4, V174, V176, 0x4, V176, V177]
Exit stack: [V5, 0x8c, 0x4, V174, V176, 0x4, V176, V177]

================================

Block 0x283
[0x283:0x2a0]
---
Predecessors: [0x268]
Successors: [0x2a1]
---
0x283 PUSH1 0x2
0x285 MUL
0x286 DUP2
0x287 PUSH1 0x2
0x289 MUL
0x28a DUP4
0x28b PUSH1 0x0
0x28d MSTORE
0x28e PUSH1 0x20
0x290 PUSH1 0x0
0x292 SHA3
0x293 SWAP2
0x294 DUP3
0x295 ADD
0x296 SWAP2
0x297 ADD
0x298 PUSH2 0x2ea
0x29b SWAP2
0x29c SWAP1
0x29d PUSH2 0x2a1
0x2a0 JUMP
---
0x283: V181 = 0x2
0x285: V182 = MUL 0x2 V177
0x287: V183 = 0x2
0x289: V184 = MUL 0x2 V176
0x28b: V185 = 0x0
0x28d: M[0x0] = 0x4
0x28e: V186 = 0x20
0x290: V187 = 0x0
0x292: V188 = SHA3 0x0 0x20
0x295: V189 = ADD V188 V182
0x297: V190 = ADD V188 V184
0x298: V191 = 0x2ea
0x29d: V192 = 0x2a1
0x2a0: JUMP 0x2a1
---
Entry stack: [V5, 0x8c, 0x4, V174, V176, 0x4, V176, V177]
Stack pops: 3
Stack additions: [S2, S1, 0x2ea, V189, V190]
Exit stack: [V5, 0x8c, 0x4, V174, V176, 0x4, V176, 0x2ea, V189, V190]

================================

Block 0x2a1
[0x2a1:0x2a9]
---
Predecessors: [0x283, 0x2aa]
Successors: [0x2aa, 0x2e6]
---
0x2a1 JUMPDEST
0x2a2 DUP1
0x2a3 DUP3
0x2a4 GT
0x2a5 ISZERO
0x2a6 PUSH2 0x2e6
0x2a9 JUMPI
---
0x2a1: JUMPDEST 
0x2a4: V193 = GT V189 S0
0x2a5: V194 = ISZERO V193
0x2a6: V195 = 0x2e6
0x2a9: JUMPI 0x2e6 V194
---
Entry stack: [V5, 0x8c, 0x4, V174, V176, 0x4, V176, 0x2ea, V189, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V5, 0x8c, 0x4, V174, V176, 0x4, V176, 0x2ea, V189, S0]

================================

Block 0x2aa
[0x2aa:0x2e5]
---
Predecessors: [0x2a1]
Successors: [0x2a1]
---
0x2aa PUSH1 0x0
0x2ac PUSH1 0x0
0x2ae DUP3
0x2af ADD
0x2b0 PUSH1 0x0
0x2b2 PUSH2 0x100
0x2b5 EXP
0x2b6 DUP2
0x2b7 SLOAD
0x2b8 SWAP1
0x2b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ce MUL
0x2cf NOT
0x2d0 AND
0x2d1 SWAP1
0x2d2 SSTORE
0x2d3 PUSH1 0x1
0x2d5 DUP3
0x2d6 ADD
0x2d7 PUSH1 0x0
0x2d9 POP
0x2da PUSH1 0x0
0x2dc SWAP1
0x2dd SSTORE
0x2de POP
0x2df PUSH1 0x2
0x2e1 ADD
0x2e2 PUSH2 0x2a1
0x2e5 JUMP
---
0x2aa: V196 = 0x0
0x2ac: V197 = 0x0
0x2af: V198 = ADD S0 0x0
0x2b0: V199 = 0x0
0x2b2: V200 = 0x100
0x2b5: V201 = EXP 0x100 0x0
0x2b7: V202 = S[V198]
0x2b9: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ce: V204 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2cf: V205 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2d0: V206 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V202
0x2d2: S[V198] = V206
0x2d3: V207 = 0x1
0x2d6: V208 = ADD S0 0x1
0x2d7: V209 = 0x0
0x2da: V210 = 0x0
0x2dd: S[V208] = 0x0
0x2df: V211 = 0x2
0x2e1: V212 = ADD 0x2 S0
0x2e2: V213 = 0x2a1
0x2e5: JUMP 0x2a1
---
Entry stack: [V5, 0x8c, 0x4, V174, V176, 0x4, V176, 0x2ea, V189, S0]
Stack pops: 1
Stack additions: [V212]
Exit stack: [V5, 0x8c, 0x4, V174, V176, 0x4, V176, 0x2ea, V189, V212]

================================

Block 0x2e6
[0x2e6:0x2e9]
---
Predecessors: [0x2a1]
Successors: [0x2ea]
---
0x2e6 JUMPDEST
0x2e7 POP
0x2e8 SWAP1
0x2e9 JUMP
---
0x2e6: JUMPDEST 
0x2e9: JUMP 0x2ea
---
Entry stack: [V5, 0x8c, 0x4, V174, V176, 0x4, V176, 0x2ea, V189, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V5, 0x8c, 0x4, V174, V176, 0x4, V176, V189]

================================

Block 0x2ea
[0x2ea:0x2ea]
---
Predecessors: [0x2e6]
Successors: [0x2eb]
---
0x2ea JUMPDEST
---
0x2ea: JUMPDEST 
---
Entry stack: [V5, 0x8c, 0x4, V174, V176, 0x4, V176, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x8c, 0x4, V174, V176, 0x4, V176, V189]

================================

Block 0x2eb
[0x2eb:0x300]
---
Predecessors: [0x268, 0x2ea]
Successors: [0x301]
---
0x2eb JUMPDEST
0x2ec POP
0x2ed POP
0x2ee POP
0x2ef SWAP2
0x2f0 SWAP1
0x2f1 SWAP1
0x2f2 PUSH1 0x0
0x2f4 MSTORE
0x2f5 PUSH1 0x20
0x2f7 PUSH1 0x0
0x2f9 SHA3
0x2fa SWAP1
0x2fb PUSH1 0x2
0x2fd MUL
0x2fe ADD
0x2ff PUSH1 0x0
---
0x2eb: JUMPDEST 
0x2f2: V214 = 0x0
0x2f4: M[0x0] = 0x4
0x2f5: V215 = 0x20
0x2f7: V216 = 0x0
0x2f9: V217 = SHA3 0x0 0x20
0x2fb: V218 = 0x2
0x2fd: V219 = MUL 0x2 V174
0x2fe: V220 = ADD V219 V217
0x2ff: V221 = 0x0
---
Entry stack: [V5, 0x8c, 0x4, V174, V176, 0x4, V176, S0]
Stack pops: 6
Stack additions: [S3, V220, 0x0]
Exit stack: [V5, 0x8c, V176, V220, 0x0]

================================

Block 0x301
[0x301:0x360]
---
Predecessors: [0x2eb]
Successors: [0x361]
---
0x301 JUMPDEST
0x302 PUSH1 0x40
0x304 PUSH1 0x40
0x306 MLOAD
0x307 SWAP1
0x308 DUP2
0x309 ADD
0x30a PUSH1 0x40
0x30c MSTORE
0x30d DUP1
0x30e CALLER
0x30f DUP2
0x310 MSTORE
0x311 PUSH1 0x20
0x313 ADD
0x314 CALLVALUE
0x315 DUP2
0x316 MSTORE
0x317 PUSH1 0x20
0x319 ADD
0x31a POP
0x31b SWAP1
0x31c SWAP2
0x31d SWAP1
0x31e SWAP2
0x31f POP
0x320 PUSH1 0x0
0x322 DUP3
0x323 ADD
0x324 MLOAD
0x325 DUP2
0x326 PUSH1 0x0
0x328 ADD
0x329 PUSH1 0x0
0x32b PUSH2 0x100
0x32e EXP
0x32f DUP2
0x330 SLOAD
0x331 DUP2
0x332 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x347 MUL
0x348 NOT
0x349 AND
0x34a SWAP1
0x34b DUP4
0x34c MUL
0x34d OR
0x34e SWAP1
0x34f SSTORE
0x350 POP
0x351 PUSH1 0x20
0x353 DUP3
0x354 ADD
0x355 MLOAD
0x356 DUP2
0x357 PUSH1 0x1
0x359 ADD
0x35a PUSH1 0x0
0x35c POP
0x35d SSTORE
0x35e POP
0x35f POP
0x360 POP
---
0x301: JUMPDEST 
0x302: V222 = 0x40
0x304: V223 = 0x40
0x306: V224 = M[0x40]
0x309: V225 = ADD V224 0x40
0x30a: V226 = 0x40
0x30c: M[0x40] = V225
0x30e: V227 = CALLER
0x310: M[V224] = V227
0x311: V228 = 0x20
0x313: V229 = ADD 0x20 V224
0x314: V230 = CALLVALUE
0x316: M[V229] = V230
0x317: V231 = 0x20
0x319: V232 = ADD 0x20 V229
0x320: V233 = 0x0
0x323: V234 = ADD V224 0x0
0x324: V235 = M[V234]
0x326: V236 = 0x0
0x328: V237 = ADD 0x0 V220
0x329: V238 = 0x0
0x32b: V239 = 0x100
0x32e: V240 = EXP 0x100 0x0
0x330: V241 = S[V237]
0x332: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x347: V243 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x348: V244 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x349: V245 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V241
0x34c: V246 = MUL V235 0x1
0x34d: V247 = OR V246 V245
0x34f: S[V237] = V247
0x351: V248 = 0x20
0x354: V249 = ADD V224 0x20
0x355: V250 = M[V249]
0x357: V251 = 0x1
0x359: V252 = ADD 0x1 V220
0x35a: V253 = 0x0
0x35d: S[V252] = V250
---
Entry stack: [V5, 0x8c, V176, V220, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V5, 0x8c]

================================

Block 0x361
[0x361:0x362]
---
Predecessors: [0x301]
Successors: [0x8c]
---
0x361 JUMPDEST
0x362 JUMP
---
0x361: JUMPDEST 
0x362: JUMP 0x8c
---
Entry stack: [V5, 0x8c]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Function 0:
Public function signature: 0x590e1ae3
Entry block: 0x52
Exit block: 0x64
Body: 0x52, 0x58, 0x64, 0x8e, 0x9f, 0xbf, 0xc5, 0xcd, 0xdf, 0xe6, 0xec, 0xfb, 0x10b, 0x159, 0x169, 0x19c, 0x1a7, 0x1a8

Function 1:
Public function signature: 0x63bd1d4a
Entry block: 0x66
Exit block: 0x78
Body: 0x66, 0x6c, 0x78, 0x1ab, 0x1ba, 0x1db, 0x1e1, 0x253, 0x254

Function 2:
Public function signature: 0xd7bb99ba
Entry block: 0x7a
Exit block: 0x8c
Body: 0x7a, 0x80, 0x8c, 0x256, 0x264, 0x268, 0x283, 0x2a1, 0x2aa, 0x2e6, 0x2ea, 0x2eb, 0x301, 0x361

Function 3:
Public fallback function
Entry block: 0x49
Exit block: 0x4d
Body: 0x49, 0x4d

