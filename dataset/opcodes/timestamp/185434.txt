Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xaf]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xaf
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xaf
0xc: JUMPI 0xaf V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x289]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1cb3b20
0x3c EQ
0x3d PUSH2 0x289
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1cb3b20
0x3c: V13 = EQ 0x1cb3b20 V11
0x3d: V14 = 0x289
0x40: JUMPI 0x289 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x2a0]
---
0x41 DUP1
0x42 PUSH4 0x2d05d3f
0x47 EQ
0x48 PUSH2 0x2a0
0x4b JUMPI
---
0x42: V15 = 0x2d05d3f
0x47: V16 = EQ 0x2d05d3f V11
0x48: V17 = 0x2a0
0x4b: JUMPI 0x2a0 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x2f7]
---
0x4c DUP1
0x4d PUSH4 0x1072cbea
0x52 EQ
0x53 PUSH2 0x2f7
0x56 JUMPI
---
0x4d: V18 = 0x1072cbea
0x52: V19 = EQ 0x1072cbea V11
0x53: V20 = 0x2f7
0x56: JUMPI 0x2f7 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x344]
---
0x57 DUP1
0x58 PUSH4 0x29dcb0cf
0x5d EQ
0x5e PUSH2 0x344
0x61 JUMPI
---
0x58: V21 = 0x29dcb0cf
0x5d: V22 = EQ 0x29dcb0cf V11
0x5e: V23 = 0x344
0x61: JUMPI 0x344 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x36f]
---
0x62 DUP1
0x63 PUSH4 0x38af3eed
0x68 EQ
0x69 PUSH2 0x36f
0x6c JUMPI
---
0x63: V24 = 0x38af3eed
0x68: V25 = EQ 0x38af3eed V11
0x69: V26 = 0x36f
0x6c: JUMPI 0x36f V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x3c6]
---
0x6d DUP1
0x6e PUSH4 0x6e66f6e9
0x73 EQ
0x74 PUSH2 0x3c6
0x77 JUMPI
---
0x6e: V27 = 0x6e66f6e9
0x73: V28 = EQ 0x6e66f6e9 V11
0x74: V29 = 0x3c6
0x77: JUMPI 0x3c6 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x41d]
---
0x78 DUP1
0x79 PUSH4 0x70a08231
0x7e EQ
0x7f PUSH2 0x41d
0x82 JUMPI
---
0x79: V30 = 0x70a08231
0x7e: V31 = EQ 0x70a08231 V11
0x7f: V32 = 0x41d
0x82: JUMPI 0x41d V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x474]
---
0x83 DUP1
0x84 PUSH4 0x7a3a0e84
0x89 EQ
0x8a PUSH2 0x474
0x8d JUMPI
---
0x84: V33 = 0x7a3a0e84
0x89: V34 = EQ 0x7a3a0e84 V11
0x8a: V35 = 0x474
0x8d: JUMPI 0x474 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x49f]
---
0x8e DUP1
0x8f PUSH4 0x7b3e5e7b
0x94 EQ
0x95 PUSH2 0x49f
0x98 JUMPI
---
0x8f: V36 = 0x7b3e5e7b
0x94: V37 = EQ 0x7b3e5e7b V11
0x95: V38 = 0x49f
0x98: JUMPI 0x49f V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x4ca]
---
0x99 DUP1
0x9a PUSH4 0xa035b1fe
0x9f EQ
0xa0 PUSH2 0x4ca
0xa3 JUMPI
---
0x9a: V39 = 0xa035b1fe
0x9f: V40 = EQ 0xa035b1fe V11
0xa0: V41 = 0x4ca
0xa3: JUMPI 0x4ca V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x4f5]
---
0xa4 DUP1
0xa5 PUSH4 0xfd6b7ef8
0xaa EQ
0xab PUSH2 0x4f5
0xae JUMPI
---
0xa5: V42 = 0xfd6b7ef8
0xaa: V43 = EQ 0xfd6b7ef8 V11
0xab: V44 = 0x4f5
0xae: JUMPI 0x4f5 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xc4]
---
Predecessors: [0x0, 0xa4]
Successors: [0xc5, 0xc9]
---
0xaf JUMPDEST
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 PUSH8 0x16345785d8a0000
0xbc CALLVALUE
0xbd LT
0xbe ISZERO
0xbf ISZERO
0xc0 ISZERO
0xc1 PUSH2 0xc9
0xc4 JUMPI
---
0xaf: JUMPDEST 
0xb0: V45 = 0x0
0xb3: V46 = 0x16345785d8a0000
0xbc: V47 = CALLVALUE
0xbd: V48 = LT V47 0x16345785d8a0000
0xbe: V49 = ISZERO V48
0xbf: V50 = ISZERO V49
0xc0: V51 = ISZERO V50
0xc1: V52 = 0xc9
0xc4: JUMPI 0xc9 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xc5
[0xc5:0xc8]
---
Predecessors: [0xaf]
Successors: []
---
0xc5 PUSH1 0x0
0xc7 DUP1
0xc8 REVERT
---
0xc5: V53 = 0x0
0xc8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xc9
[0xc9:0x1f0]
---
Predecessors: [0xaf]
Successors: [0x1f1, 0x1f5]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb SWAP2
0xcc POP
0xcd DUP2
0xce PUSH1 0x7
0xd0 PUSH1 0x0
0xd2 CALLER
0xd3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe8 AND
0xe9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe AND
0xff DUP2
0x100 MSTORE
0x101 PUSH1 0x20
0x103 ADD
0x104 SWAP1
0x105 DUP2
0x106 MSTORE
0x107 PUSH1 0x20
0x109 ADD
0x10a PUSH1 0x0
0x10c SHA3
0x10d PUSH1 0x0
0x10f DUP3
0x110 DUP3
0x111 SLOAD
0x112 ADD
0x113 SWAP3
0x114 POP
0x115 POP
0x116 DUP2
0x117 SWAP1
0x118 SSTORE
0x119 POP
0x11a DUP2
0x11b PUSH1 0x3
0x11d PUSH1 0x0
0x11f DUP3
0x120 DUP3
0x121 SLOAD
0x122 ADD
0x123 SWAP3
0x124 POP
0x125 POP
0x126 DUP2
0x127 SWAP1
0x128 SSTORE
0x129 POP
0x12a PUSH1 0x5
0x12c SLOAD
0x12d CALLVALUE
0x12e MUL
0x12f SWAP1
0x130 POP
0x131 PUSH1 0x6
0x133 PUSH1 0x0
0x135 SWAP1
0x136 SLOAD
0x137 SWAP1
0x138 PUSH2 0x100
0x13b EXP
0x13c SWAP1
0x13d DIV
0x13e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x153 AND
0x154 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x169 AND
0x16a PUSH4 0xa9059cbb
0x16f CALLER
0x170 DUP4
0x171 PUSH1 0x40
0x173 MLOAD
0x174 DUP4
0x175 PUSH4 0xffffffff
0x17a AND
0x17b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x199 MUL
0x19a DUP2
0x19b MSTORE
0x19c PUSH1 0x4
0x19e ADD
0x19f DUP1
0x1a0 DUP4
0x1a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b6 AND
0x1b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cc AND
0x1cd DUP2
0x1ce MSTORE
0x1cf PUSH1 0x20
0x1d1 ADD
0x1d2 DUP3
0x1d3 DUP2
0x1d4 MSTORE
0x1d5 PUSH1 0x20
0x1d7 ADD
0x1d8 SWAP3
0x1d9 POP
0x1da POP
0x1db POP
0x1dc PUSH1 0x0
0x1de PUSH1 0x40
0x1e0 MLOAD
0x1e1 DUP1
0x1e2 DUP4
0x1e3 SUB
0x1e4 DUP2
0x1e5 PUSH1 0x0
0x1e7 DUP8
0x1e8 DUP1
0x1e9 EXTCODESIZE
0x1ea ISZERO
0x1eb DUP1
0x1ec ISZERO
0x1ed PUSH2 0x1f5
0x1f0 JUMPI
---
0xc9: JUMPDEST 
0xca: V54 = CALLVALUE
0xce: V55 = 0x7
0xd0: V56 = 0x0
0xd2: V57 = CALLER
0xd3: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0xe8: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xe9: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x100: M[0x0] = V61
0x101: V62 = 0x20
0x103: V63 = ADD 0x20 0x0
0x106: M[0x20] = 0x7
0x107: V64 = 0x20
0x109: V65 = ADD 0x20 0x20
0x10a: V66 = 0x0
0x10c: V67 = SHA3 0x0 0x40
0x10d: V68 = 0x0
0x111: V69 = S[V67]
0x112: V70 = ADD V69 V54
0x118: S[V67] = V70
0x11b: V71 = 0x3
0x11d: V72 = 0x0
0x121: V73 = S[0x3]
0x122: V74 = ADD V73 V54
0x128: S[0x3] = V74
0x12a: V75 = 0x5
0x12c: V76 = S[0x5]
0x12d: V77 = CALLVALUE
0x12e: V78 = MUL V77 V76
0x131: V79 = 0x6
0x133: V80 = 0x0
0x136: V81 = S[0x6]
0x138: V82 = 0x100
0x13b: V83 = EXP 0x100 0x0
0x13d: V84 = DIV V81 0x1
0x13e: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x153: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x154: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x169: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x16a: V89 = 0xa9059cbb
0x16f: V90 = CALLER
0x171: V91 = 0x40
0x173: V92 = M[0x40]
0x175: V93 = 0xffffffff
0x17a: V94 = AND 0xffffffff 0xa9059cbb
0x17b: V95 = 0x100000000000000000000000000000000000000000000000000000000
0x199: V96 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x19b: M[V92] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x19c: V97 = 0x4
0x19e: V98 = ADD 0x4 V92
0x1a1: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x1b7: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1ce: M[V98] = V102
0x1cf: V103 = 0x20
0x1d1: V104 = ADD 0x20 V98
0x1d4: M[V104] = V78
0x1d5: V105 = 0x20
0x1d7: V106 = ADD 0x20 V104
0x1dc: V107 = 0x0
0x1de: V108 = 0x40
0x1e0: V109 = M[0x40]
0x1e3: V110 = SUB V106 V109
0x1e5: V111 = 0x0
0x1e9: V112 = EXTCODESIZE V88
0x1ea: V113 = ISZERO V112
0x1ec: V114 = ISZERO V113
0x1ed: V115 = 0x1f5
0x1f0: JUMPI 0x1f5 V114
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 2
Stack additions: [V54, V78, V88, 0xa9059cbb, V106, 0x0, V109, V110, V109, 0x0, V88, V113]
Exit stack: [V11, V54, V78, V88, 0xa9059cbb, V106, 0x0, V109, V110, V109, 0x0, V88, V113]

================================

Block 0x1f1
[0x1f1:0x1f4]
---
Predecessors: [0xc9]
Successors: []
---
0x1f1 PUSH1 0x0
0x1f3 DUP1
0x1f4 REVERT
---
0x1f1: V116 = 0x0
0x1f4: REVERT 0x0 0x0
---
Entry stack: [V11, V54, V78, V88, 0xa9059cbb, V106, 0x0, V109, V110, V109, 0x0, V88, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V54, V78, V88, 0xa9059cbb, V106, 0x0, V109, V110, V109, 0x0, V88, V113]

================================

Block 0x1f5
[0x1f5:0x1ff]
---
Predecessors: [0xc9]
Successors: [0x200, 0x209]
---
0x1f5 JUMPDEST
0x1f6 POP
0x1f7 GAS
0x1f8 CALL
0x1f9 ISZERO
0x1fa DUP1
0x1fb ISZERO
0x1fc PUSH2 0x209
0x1ff JUMPI
---
0x1f5: JUMPDEST 
0x1f7: V117 = GAS
0x1f8: V118 = CALL V117 V88 0x0 V109 V110 V109 0x0
0x1f9: V119 = ISZERO V118
0x1fb: V120 = ISZERO V119
0x1fc: V121 = 0x209
0x1ff: JUMPI 0x209 V120
---
Entry stack: [V11, V54, V78, V88, 0xa9059cbb, V106, 0x0, V109, V110, V109, 0x0, V88, V113]
Stack pops: 7
Stack additions: [V119]
Exit stack: [V11, V54, V78, V88, 0xa9059cbb, V106, V119]

================================

Block 0x200
[0x200:0x208]
---
Predecessors: [0x1f5]
Successors: []
---
0x200 RETURNDATASIZE
0x201 PUSH1 0x0
0x203 DUP1
0x204 RETURNDATACOPY
0x205 RETURNDATASIZE
0x206 PUSH1 0x0
0x208 REVERT
---
0x200: V122 = RETURNDATASIZE
0x201: V123 = 0x0
0x204: RETURNDATACOPY 0x0 0x0 V122
0x205: V124 = RETURNDATASIZE
0x206: V125 = 0x0
0x208: REVERT 0x0 V124
---
Entry stack: [V11, V54, V78, V88, 0xa9059cbb, V106, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V54, V78, V88, 0xa9059cbb, V106, V119]

================================

Block 0x209
[0x209:0x288]
---
Predecessors: [0x1f5]
Successors: []
---
0x209 JUMPDEST
0x20a POP
0x20b POP
0x20c POP
0x20d POP
0x20e PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x22f CALLER
0x230 DUP4
0x231 PUSH1 0x1
0x233 PUSH1 0x40
0x235 MLOAD
0x236 DUP1
0x237 DUP5
0x238 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24d AND
0x24e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x263 AND
0x264 DUP2
0x265 MSTORE
0x266 PUSH1 0x20
0x268 ADD
0x269 DUP4
0x26a DUP2
0x26b MSTORE
0x26c PUSH1 0x20
0x26e ADD
0x26f DUP3
0x270 ISZERO
0x271 ISZERO
0x272 ISZERO
0x273 ISZERO
0x274 DUP2
0x275 MSTORE
0x276 PUSH1 0x20
0x278 ADD
0x279 SWAP4
0x27a POP
0x27b POP
0x27c POP
0x27d POP
0x27e PUSH1 0x40
0x280 MLOAD
0x281 DUP1
0x282 SWAP2
0x283 SUB
0x284 SWAP1
0x285 LOG1
0x286 POP
0x287 POP
0x288 STOP
---
0x209: JUMPDEST 
0x20e: V126 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x22f: V127 = CALLER
0x231: V128 = 0x1
0x233: V129 = 0x40
0x235: V130 = M[0x40]
0x238: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x24e: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x263: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x265: M[V130] = V134
0x266: V135 = 0x20
0x268: V136 = ADD 0x20 V130
0x26b: M[V136] = V54
0x26c: V137 = 0x20
0x26e: V138 = ADD 0x20 V136
0x270: V139 = ISZERO 0x1
0x271: V140 = ISZERO 0x0
0x272: V141 = ISZERO 0x1
0x273: V142 = ISZERO 0x0
0x275: M[V138] = 0x1
0x276: V143 = 0x20
0x278: V144 = ADD 0x20 V138
0x27e: V145 = 0x40
0x280: V146 = M[0x40]
0x283: V147 = SUB V144 V146
0x285: LOG V146 V147 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x288: STOP 
---
Entry stack: [V11, V54, V78, V88, 0xa9059cbb, V106, V119]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x289
[0x289:0x290]
---
Predecessors: [0xd]
Successors: [0x291, 0x295]
---
0x289 JUMPDEST
0x28a CALLVALUE
0x28b DUP1
0x28c ISZERO
0x28d PUSH2 0x295
0x290 JUMPI
---
0x289: JUMPDEST 
0x28a: V148 = CALLVALUE
0x28c: V149 = ISZERO V148
0x28d: V150 = 0x295
0x290: JUMPI 0x295 V149
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V148]
Exit stack: [V11, V148]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x289]
Successors: []
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
---
0x291: V151 = 0x0
0x294: REVERT 0x0 0x0
---
Entry stack: [V11, V148]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V148]

================================

Block 0x295
[0x295:0x29d]
---
Predecessors: [0x289]
Successors: [0x50c]
---
0x295 JUMPDEST
0x296 POP
0x297 PUSH2 0x29e
0x29a PUSH2 0x50c
0x29d JUMP
---
0x295: JUMPDEST 
0x297: V152 = 0x29e
0x29a: V153 = 0x50c
0x29d: JUMP 0x50c
---
Entry stack: [V11, V148]
Stack pops: 1
Stack additions: [0x29e]
Exit stack: [V11, 0x29e]

================================

Block 0x29e
[0x29e:0x29f]
---
Predecessors: [0x5eb]
Successors: []
---
0x29e JUMPDEST
0x29f STOP
---
0x29e: JUMPDEST 
0x29f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a0
[0x2a0:0x2a7]
---
Predecessors: [0x41]
Successors: [0x2a8, 0x2ac]
---
0x2a0 JUMPDEST
0x2a1 CALLVALUE
0x2a2 DUP1
0x2a3 ISZERO
0x2a4 PUSH2 0x2ac
0x2a7 JUMPI
---
0x2a0: JUMPDEST 
0x2a1: V154 = CALLVALUE
0x2a3: V155 = ISZERO V154
0x2a4: V156 = 0x2ac
0x2a7: JUMPI 0x2ac V155
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V154]
Exit stack: [V11, V154]

================================

Block 0x2a8
[0x2a8:0x2ab]
---
Predecessors: [0x2a0]
Successors: []
---
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab REVERT
---
0x2a8: V157 = 0x0
0x2ab: REVERT 0x0 0x0
---
Entry stack: [V11, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V154]

================================

Block 0x2ac
[0x2ac:0x2b4]
---
Predecessors: [0x2a0]
Successors: [0x5ed]
---
0x2ac JUMPDEST
0x2ad POP
0x2ae PUSH2 0x2b5
0x2b1 PUSH2 0x5ed
0x2b4 JUMP
---
0x2ac: JUMPDEST 
0x2ae: V158 = 0x2b5
0x2b1: V159 = 0x5ed
0x2b4: JUMP 0x5ed
---
Entry stack: [V11, V154]
Stack pops: 1
Stack additions: [0x2b5]
Exit stack: [V11, 0x2b5]

================================

Block 0x2b5
[0x2b5:0x2f6]
---
Predecessors: [0x5ed]
Successors: []
---
0x2b5 JUMPDEST
0x2b6 PUSH1 0x40
0x2b8 MLOAD
0x2b9 DUP1
0x2ba DUP3
0x2bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d0 AND
0x2d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e6 AND
0x2e7 DUP2
0x2e8 MSTORE
0x2e9 PUSH1 0x20
0x2eb ADD
0x2ec SWAP2
0x2ed POP
0x2ee POP
0x2ef PUSH1 0x40
0x2f1 MLOAD
0x2f2 DUP1
0x2f3 SWAP2
0x2f4 SUB
0x2f5 SWAP1
0x2f6 RETURN
---
0x2b5: JUMPDEST 
0x2b6: V160 = 0x40
0x2b8: V161 = M[0x40]
0x2bb: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d0: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V376
0x2d1: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e6: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2e8: M[V161] = V165
0x2e9: V166 = 0x20
0x2eb: V167 = ADD 0x20 V161
0x2ef: V168 = 0x40
0x2f1: V169 = M[0x40]
0x2f4: V170 = SUB V167 V169
0x2f6: RETURN V169 V170
---
Entry stack: [V11, 0x2b5, V376]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2b5]

================================

Block 0x2f7
[0x2f7:0x2fe]
---
Predecessors: [0x4c]
Successors: [0x2ff, 0x303]
---
0x2f7 JUMPDEST
0x2f8 CALLVALUE
0x2f9 DUP1
0x2fa ISZERO
0x2fb PUSH2 0x303
0x2fe JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V171 = CALLVALUE
0x2fa: V172 = ISZERO V171
0x2fb: V173 = 0x303
0x2fe: JUMPI 0x303 V172
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V171]
Exit stack: [V11, V171]

================================

Block 0x2ff
[0x2ff:0x302]
---
Predecessors: [0x2f7]
Successors: []
---
0x2ff PUSH1 0x0
0x301 DUP1
0x302 REVERT
---
0x2ff: V174 = 0x0
0x302: REVERT 0x0 0x0
---
Entry stack: [V11, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V171]

================================

Block 0x303
[0x303:0x341]
---
Predecessors: [0x2f7]
Successors: [0x612]
---
0x303 JUMPDEST
0x304 POP
0x305 PUSH2 0x342
0x308 PUSH1 0x4
0x30a DUP1
0x30b CALLDATASIZE
0x30c SUB
0x30d DUP2
0x30e ADD
0x30f SWAP1
0x310 DUP1
0x311 DUP1
0x312 CALLDATALOAD
0x313 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x328 AND
0x329 SWAP1
0x32a PUSH1 0x20
0x32c ADD
0x32d SWAP1
0x32e SWAP3
0x32f SWAP2
0x330 SWAP1
0x331 DUP1
0x332 CALLDATALOAD
0x333 SWAP1
0x334 PUSH1 0x20
0x336 ADD
0x337 SWAP1
0x338 SWAP3
0x339 SWAP2
0x33a SWAP1
0x33b POP
0x33c POP
0x33d POP
0x33e PUSH2 0x612
0x341 JUMP
---
0x303: JUMPDEST 
0x305: V175 = 0x342
0x308: V176 = 0x4
0x30b: V177 = CALLDATASIZE
0x30c: V178 = SUB V177 0x4
0x30e: V179 = ADD 0x4 V178
0x312: V180 = CALLDATALOAD 0x4
0x313: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x328: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x32a: V183 = 0x20
0x32c: V184 = ADD 0x20 0x4
0x332: V185 = CALLDATALOAD 0x24
0x334: V186 = 0x20
0x336: V187 = ADD 0x20 0x24
0x33e: V188 = 0x612
0x341: JUMP 0x612
---
Entry stack: [V11, V171]
Stack pops: 1
Stack additions: [0x342, V182, V185]
Exit stack: [V11, 0x342, V182, V185]

================================

Block 0x342
[0x342:0x343]
---
Predecessors: [0x756]
Successors: []
---
0x342 JUMPDEST
0x343 STOP
---
0x342: JUMPDEST 
0x343: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x344
[0x344:0x34b]
---
Predecessors: [0x57]
Successors: [0x34c, 0x350]
---
0x344 JUMPDEST
0x345 CALLVALUE
0x346 DUP1
0x347 ISZERO
0x348 PUSH2 0x350
0x34b JUMPI
---
0x344: JUMPDEST 
0x345: V189 = CALLVALUE
0x347: V190 = ISZERO V189
0x348: V191 = 0x350
0x34b: JUMPI 0x350 V190
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V189]
Exit stack: [V11, V189]

================================

Block 0x34c
[0x34c:0x34f]
---
Predecessors: [0x344]
Successors: []
---
0x34c PUSH1 0x0
0x34e DUP1
0x34f REVERT
---
0x34c: V192 = 0x0
0x34f: REVERT 0x0 0x0
---
Entry stack: [V11, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V189]

================================

Block 0x350
[0x350:0x358]
---
Predecessors: [0x344]
Successors: [0x75e]
---
0x350 JUMPDEST
0x351 POP
0x352 PUSH2 0x359
0x355 PUSH2 0x75e
0x358 JUMP
---
0x350: JUMPDEST 
0x352: V193 = 0x359
0x355: V194 = 0x75e
0x358: JUMP 0x75e
---
Entry stack: [V11, V189]
Stack pops: 1
Stack additions: [0x359]
Exit stack: [V11, 0x359]

================================

Block 0x359
[0x359:0x36e]
---
Predecessors: [0x75e]
Successors: []
---
0x359 JUMPDEST
0x35a PUSH1 0x40
0x35c MLOAD
0x35d DUP1
0x35e DUP3
0x35f DUP2
0x360 MSTORE
0x361 PUSH1 0x20
0x363 ADD
0x364 SWAP2
0x365 POP
0x366 POP
0x367 PUSH1 0x40
0x369 MLOAD
0x36a DUP1
0x36b SWAP2
0x36c SUB
0x36d SWAP1
0x36e RETURN
---
0x359: JUMPDEST 
0x35a: V195 = 0x40
0x35c: V196 = M[0x40]
0x360: M[V196] = V449
0x361: V197 = 0x20
0x363: V198 = ADD 0x20 V196
0x367: V199 = 0x40
0x369: V200 = M[0x40]
0x36c: V201 = SUB V198 V200
0x36e: RETURN V200 V201
---
Entry stack: [V11, 0x359, V449]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x359]

================================

Block 0x36f
[0x36f:0x376]
---
Predecessors: [0x62]
Successors: [0x377, 0x37b]
---
0x36f JUMPDEST
0x370 CALLVALUE
0x371 DUP1
0x372 ISZERO
0x373 PUSH2 0x37b
0x376 JUMPI
---
0x36f: JUMPDEST 
0x370: V202 = CALLVALUE
0x372: V203 = ISZERO V202
0x373: V204 = 0x37b
0x376: JUMPI 0x37b V203
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V202]
Exit stack: [V11, V202]

================================

Block 0x377
[0x377:0x37a]
---
Predecessors: [0x36f]
Successors: []
---
0x377 PUSH1 0x0
0x379 DUP1
0x37a REVERT
---
0x377: V205 = 0x0
0x37a: REVERT 0x0 0x0
---
Entry stack: [V11, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V202]

================================

Block 0x37b
[0x37b:0x383]
---
Predecessors: [0x36f]
Successors: [0x764]
---
0x37b JUMPDEST
0x37c POP
0x37d PUSH2 0x384
0x380 PUSH2 0x764
0x383 JUMP
---
0x37b: JUMPDEST 
0x37d: V206 = 0x384
0x380: V207 = 0x764
0x383: JUMP 0x764
---
Entry stack: [V11, V202]
Stack pops: 1
Stack additions: [0x384]
Exit stack: [V11, 0x384]

================================

Block 0x384
[0x384:0x3c5]
---
Predecessors: [0x764]
Successors: []
---
0x384 JUMPDEST
0x385 PUSH1 0x40
0x387 MLOAD
0x388 DUP1
0x389 DUP3
0x38a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39f AND
0x3a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b5 AND
0x3b6 DUP2
0x3b7 MSTORE
0x3b8 PUSH1 0x20
0x3ba ADD
0x3bb SWAP2
0x3bc POP
0x3bd POP
0x3be PUSH1 0x40
0x3c0 MLOAD
0x3c1 DUP1
0x3c2 SWAP2
0x3c3 SUB
0x3c4 SWAP1
0x3c5 RETURN
---
0x384: JUMPDEST 
0x385: V208 = 0x40
0x387: V209 = M[0x40]
0x38a: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x39f: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x3a0: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b5: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x3b7: M[V209] = V213
0x3b8: V214 = 0x20
0x3ba: V215 = ADD 0x20 V209
0x3be: V216 = 0x40
0x3c0: V217 = M[0x40]
0x3c3: V218 = SUB V215 V217
0x3c5: RETURN V217 V218
---
Entry stack: [V11, 0x384, V457]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x384]

================================

Block 0x3c6
[0x3c6:0x3cd]
---
Predecessors: [0x6d]
Successors: [0x3ce, 0x3d2]
---
0x3c6 JUMPDEST
0x3c7 CALLVALUE
0x3c8 DUP1
0x3c9 ISZERO
0x3ca PUSH2 0x3d2
0x3cd JUMPI
---
0x3c6: JUMPDEST 
0x3c7: V219 = CALLVALUE
0x3c9: V220 = ISZERO V219
0x3ca: V221 = 0x3d2
0x3cd: JUMPI 0x3d2 V220
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V219]
Exit stack: [V11, V219]

================================

Block 0x3ce
[0x3ce:0x3d1]
---
Predecessors: [0x3c6]
Successors: []
---
0x3ce PUSH1 0x0
0x3d0 DUP1
0x3d1 REVERT
---
0x3ce: V222 = 0x0
0x3d1: REVERT 0x0 0x0
---
Entry stack: [V11, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V219]

================================

Block 0x3d2
[0x3d2:0x3da]
---
Predecessors: [0x3c6]
Successors: [0x78a]
---
0x3d2 JUMPDEST
0x3d3 POP
0x3d4 PUSH2 0x3db
0x3d7 PUSH2 0x78a
0x3da JUMP
---
0x3d2: JUMPDEST 
0x3d4: V223 = 0x3db
0x3d7: V224 = 0x78a
0x3da: JUMP 0x78a
---
Entry stack: [V11, V219]
Stack pops: 1
Stack additions: [0x3db]
Exit stack: [V11, 0x3db]

================================

Block 0x3db
[0x3db:0x41c]
---
Predecessors: [0x78a]
Successors: []
---
0x3db JUMPDEST
0x3dc PUSH1 0x40
0x3de MLOAD
0x3df DUP1
0x3e0 DUP3
0x3e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f6 AND
0x3f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40c AND
0x40d DUP2
0x40e MSTORE
0x40f PUSH1 0x20
0x411 ADD
0x412 SWAP2
0x413 POP
0x414 POP
0x415 PUSH1 0x40
0x417 MLOAD
0x418 DUP1
0x419 SWAP2
0x41a SUB
0x41b SWAP1
0x41c RETURN
---
0x3db: JUMPDEST 
0x3dc: V225 = 0x40
0x3de: V226 = M[0x40]
0x3e1: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f6: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V465
0x3f7: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x40c: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x40e: M[V226] = V230
0x40f: V231 = 0x20
0x411: V232 = ADD 0x20 V226
0x415: V233 = 0x40
0x417: V234 = M[0x40]
0x41a: V235 = SUB V232 V234
0x41c: RETURN V234 V235
---
Entry stack: [V11, 0x3db, V465]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3db]

================================

Block 0x41d
[0x41d:0x424]
---
Predecessors: [0x78]
Successors: [0x425, 0x429]
---
0x41d JUMPDEST
0x41e CALLVALUE
0x41f DUP1
0x420 ISZERO
0x421 PUSH2 0x429
0x424 JUMPI
---
0x41d: JUMPDEST 
0x41e: V236 = CALLVALUE
0x420: V237 = ISZERO V236
0x421: V238 = 0x429
0x424: JUMPI 0x429 V237
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V236]
Exit stack: [V11, V236]

================================

Block 0x425
[0x425:0x428]
---
Predecessors: [0x41d]
Successors: []
---
0x425 PUSH1 0x0
0x427 DUP1
0x428 REVERT
---
0x425: V239 = 0x0
0x428: REVERT 0x0 0x0
---
Entry stack: [V11, V236]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V236]

================================

Block 0x429
[0x429:0x45d]
---
Predecessors: [0x41d]
Successors: [0x7b0]
---
0x429 JUMPDEST
0x42a POP
0x42b PUSH2 0x45e
0x42e PUSH1 0x4
0x430 DUP1
0x431 CALLDATASIZE
0x432 SUB
0x433 DUP2
0x434 ADD
0x435 SWAP1
0x436 DUP1
0x437 DUP1
0x438 CALLDATALOAD
0x439 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44e AND
0x44f SWAP1
0x450 PUSH1 0x20
0x452 ADD
0x453 SWAP1
0x454 SWAP3
0x455 SWAP2
0x456 SWAP1
0x457 POP
0x458 POP
0x459 POP
0x45a PUSH2 0x7b0
0x45d JUMP
---
0x429: JUMPDEST 
0x42b: V240 = 0x45e
0x42e: V241 = 0x4
0x431: V242 = CALLDATASIZE
0x432: V243 = SUB V242 0x4
0x434: V244 = ADD 0x4 V243
0x438: V245 = CALLDATALOAD 0x4
0x439: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x44e: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x450: V248 = 0x20
0x452: V249 = ADD 0x20 0x4
0x45a: V250 = 0x7b0
0x45d: JUMP 0x7b0
---
Entry stack: [V11, V236]
Stack pops: 1
Stack additions: [0x45e, V247]
Exit stack: [V11, 0x45e, V247]

================================

Block 0x45e
[0x45e:0x473]
---
Predecessors: [0x7b0]
Successors: []
---
0x45e JUMPDEST
0x45f PUSH1 0x40
0x461 MLOAD
0x462 DUP1
0x463 DUP3
0x464 DUP2
0x465 MSTORE
0x466 PUSH1 0x20
0x468 ADD
0x469 SWAP2
0x46a POP
0x46b POP
0x46c PUSH1 0x40
0x46e MLOAD
0x46f DUP1
0x470 SWAP2
0x471 SUB
0x472 SWAP1
0x473 RETURN
---
0x45e: JUMPDEST 
0x45f: V251 = 0x40
0x461: V252 = M[0x40]
0x465: M[V252] = V473
0x466: V253 = 0x20
0x468: V254 = ADD 0x20 V252
0x46c: V255 = 0x40
0x46e: V256 = M[0x40]
0x471: V257 = SUB V254 V256
0x473: RETURN V256 V257
---
Entry stack: [V11, 0x45e, V473]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x45e]

================================

Block 0x474
[0x474:0x47b]
---
Predecessors: [0x83]
Successors: [0x47c, 0x480]
---
0x474 JUMPDEST
0x475 CALLVALUE
0x476 DUP1
0x477 ISZERO
0x478 PUSH2 0x480
0x47b JUMPI
---
0x474: JUMPDEST 
0x475: V258 = CALLVALUE
0x477: V259 = ISZERO V258
0x478: V260 = 0x480
0x47b: JUMPI 0x480 V259
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V258]
Exit stack: [V11, V258]

================================

Block 0x47c
[0x47c:0x47f]
---
Predecessors: [0x474]
Successors: []
---
0x47c PUSH1 0x0
0x47e DUP1
0x47f REVERT
---
0x47c: V261 = 0x0
0x47f: REVERT 0x0 0x0
---
Entry stack: [V11, V258]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V258]

================================

Block 0x480
[0x480:0x488]
---
Predecessors: [0x474]
Successors: [0x7c8]
---
0x480 JUMPDEST
0x481 POP
0x482 PUSH2 0x489
0x485 PUSH2 0x7c8
0x488 JUMP
---
0x480: JUMPDEST 
0x482: V262 = 0x489
0x485: V263 = 0x7c8
0x488: JUMP 0x7c8
---
Entry stack: [V11, V258]
Stack pops: 1
Stack additions: [0x489]
Exit stack: [V11, 0x489]

================================

Block 0x489
[0x489:0x49e]
---
Predecessors: [0x7c8]
Successors: []
---
0x489 JUMPDEST
0x48a PUSH1 0x40
0x48c MLOAD
0x48d DUP1
0x48e DUP3
0x48f DUP2
0x490 MSTORE
0x491 PUSH1 0x20
0x493 ADD
0x494 SWAP2
0x495 POP
0x496 POP
0x497 PUSH1 0x40
0x499 MLOAD
0x49a DUP1
0x49b SWAP2
0x49c SUB
0x49d SWAP1
0x49e RETURN
---
0x489: JUMPDEST 
0x48a: V264 = 0x40
0x48c: V265 = M[0x40]
0x490: M[V265] = V475
0x491: V266 = 0x20
0x493: V267 = ADD 0x20 V265
0x497: V268 = 0x40
0x499: V269 = M[0x40]
0x49c: V270 = SUB V267 V269
0x49e: RETURN V269 V270
---
Entry stack: [V11, 0x489, V475]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x489]

================================

Block 0x49f
[0x49f:0x4a6]
---
Predecessors: [0x8e]
Successors: [0x4a7, 0x4ab]
---
0x49f JUMPDEST
0x4a0 CALLVALUE
0x4a1 DUP1
0x4a2 ISZERO
0x4a3 PUSH2 0x4ab
0x4a6 JUMPI
---
0x49f: JUMPDEST 
0x4a0: V271 = CALLVALUE
0x4a2: V272 = ISZERO V271
0x4a3: V273 = 0x4ab
0x4a6: JUMPI 0x4ab V272
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V271]
Exit stack: [V11, V271]

================================

Block 0x4a7
[0x4a7:0x4aa]
---
Predecessors: [0x49f]
Successors: []
---
0x4a7 PUSH1 0x0
0x4a9 DUP1
0x4aa REVERT
---
0x4a7: V274 = 0x0
0x4aa: REVERT 0x0 0x0
---
Entry stack: [V11, V271]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V271]

================================

Block 0x4ab
[0x4ab:0x4b3]
---
Predecessors: [0x49f]
Successors: [0x7ce]
---
0x4ab JUMPDEST
0x4ac POP
0x4ad PUSH2 0x4b4
0x4b0 PUSH2 0x7ce
0x4b3 JUMP
---
0x4ab: JUMPDEST 
0x4ad: V275 = 0x4b4
0x4b0: V276 = 0x7ce
0x4b3: JUMP 0x7ce
---
Entry stack: [V11, V271]
Stack pops: 1
Stack additions: [0x4b4]
Exit stack: [V11, 0x4b4]

================================

Block 0x4b4
[0x4b4:0x4c9]
---
Predecessors: [0x7ce]
Successors: []
---
0x4b4 JUMPDEST
0x4b5 PUSH1 0x40
0x4b7 MLOAD
0x4b8 DUP1
0x4b9 DUP3
0x4ba DUP2
0x4bb MSTORE
0x4bc PUSH1 0x20
0x4be ADD
0x4bf SWAP2
0x4c0 POP
0x4c1 POP
0x4c2 PUSH1 0x40
0x4c4 MLOAD
0x4c5 DUP1
0x4c6 SWAP2
0x4c7 SUB
0x4c8 SWAP1
0x4c9 RETURN
---
0x4b4: JUMPDEST 
0x4b5: V277 = 0x40
0x4b7: V278 = M[0x40]
0x4bb: M[V278] = V477
0x4bc: V279 = 0x20
0x4be: V280 = ADD 0x20 V278
0x4c2: V281 = 0x40
0x4c4: V282 = M[0x40]
0x4c7: V283 = SUB V280 V282
0x4c9: RETURN V282 V283
---
Entry stack: [V11, 0x4b4, V477]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4b4]

================================

Block 0x4ca
[0x4ca:0x4d1]
---
Predecessors: [0x99]
Successors: [0x4d2, 0x4d6]
---
0x4ca JUMPDEST
0x4cb CALLVALUE
0x4cc DUP1
0x4cd ISZERO
0x4ce PUSH2 0x4d6
0x4d1 JUMPI
---
0x4ca: JUMPDEST 
0x4cb: V284 = CALLVALUE
0x4cd: V285 = ISZERO V284
0x4ce: V286 = 0x4d6
0x4d1: JUMPI 0x4d6 V285
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V284]
Exit stack: [V11, V284]

================================

Block 0x4d2
[0x4d2:0x4d5]
---
Predecessors: [0x4ca]
Successors: []
---
0x4d2 PUSH1 0x0
0x4d4 DUP1
0x4d5 REVERT
---
0x4d2: V287 = 0x0
0x4d5: REVERT 0x0 0x0
---
Entry stack: [V11, V284]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V284]

================================

Block 0x4d6
[0x4d6:0x4de]
---
Predecessors: [0x4ca]
Successors: [0x7d4]
---
0x4d6 JUMPDEST
0x4d7 POP
0x4d8 PUSH2 0x4df
0x4db PUSH2 0x7d4
0x4de JUMP
---
0x4d6: JUMPDEST 
0x4d8: V288 = 0x4df
0x4db: V289 = 0x7d4
0x4de: JUMP 0x7d4
---
Entry stack: [V11, V284]
Stack pops: 1
Stack additions: [0x4df]
Exit stack: [V11, 0x4df]

================================

Block 0x4df
[0x4df:0x4f4]
---
Predecessors: [0x7d4]
Successors: []
---
0x4df JUMPDEST
0x4e0 PUSH1 0x40
0x4e2 MLOAD
0x4e3 DUP1
0x4e4 DUP3
0x4e5 DUP2
0x4e6 MSTORE
0x4e7 PUSH1 0x20
0x4e9 ADD
0x4ea SWAP2
0x4eb POP
0x4ec POP
0x4ed PUSH1 0x40
0x4ef MLOAD
0x4f0 DUP1
0x4f1 SWAP2
0x4f2 SUB
0x4f3 SWAP1
0x4f4 RETURN
---
0x4df: JUMPDEST 
0x4e0: V290 = 0x40
0x4e2: V291 = M[0x40]
0x4e6: M[V291] = V479
0x4e7: V292 = 0x20
0x4e9: V293 = ADD 0x20 V291
0x4ed: V294 = 0x40
0x4ef: V295 = M[0x40]
0x4f2: V296 = SUB V293 V295
0x4f4: RETURN V295 V296
---
Entry stack: [V11, 0x4df, V479]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4df]

================================

Block 0x4f5
[0x4f5:0x4fc]
---
Predecessors: [0xa4]
Successors: [0x4fd, 0x501]
---
0x4f5 JUMPDEST
0x4f6 CALLVALUE
0x4f7 DUP1
0x4f8 ISZERO
0x4f9 PUSH2 0x501
0x4fc JUMPI
---
0x4f5: JUMPDEST 
0x4f6: V297 = CALLVALUE
0x4f8: V298 = ISZERO V297
0x4f9: V299 = 0x501
0x4fc: JUMPI 0x501 V298
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V297]
Exit stack: [V11, V297]

================================

Block 0x4fd
[0x4fd:0x500]
---
Predecessors: [0x4f5]
Successors: []
---
0x4fd PUSH1 0x0
0x4ff DUP1
0x500 REVERT
---
0x4fd: V300 = 0x0
0x500: REVERT 0x0 0x0
---
Entry stack: [V11, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V297]

================================

Block 0x501
[0x501:0x509]
---
Predecessors: [0x4f5]
Successors: [0x7da]
---
0x501 JUMPDEST
0x502 POP
0x503 PUSH2 0x50a
0x506 PUSH2 0x7da
0x509 JUMP
---
0x501: JUMPDEST 
0x503: V301 = 0x50a
0x506: V302 = 0x7da
0x509: JUMP 0x7da
---
Entry stack: [V11, V297]
Stack pops: 1
Stack additions: [0x50a]
Exit stack: [V11, 0x50a]

================================

Block 0x50a
[0x50a:0x50b]
---
Predecessors: [0xb16]
Successors: []
---
0x50a JUMPDEST
0x50b STOP
---
0x50a: JUMPDEST 
0x50b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x50c
[0x50c:0x517]
---
Predecessors: [0x295]
Successors: [0x518, 0x5eb]
---
0x50c JUMPDEST
0x50d PUSH1 0x4
0x50f SLOAD
0x510 TIMESTAMP
0x511 LT
0x512 ISZERO
0x513 ISZERO
0x514 PUSH2 0x5eb
0x517 JUMPI
---
0x50c: JUMPDEST 
0x50d: V303 = 0x4
0x50f: V304 = S[0x4]
0x510: V305 = TIMESTAMP
0x511: V306 = LT V305 V304
0x512: V307 = ISZERO V306
0x513: V308 = ISZERO V307
0x514: V309 = 0x5eb
0x517: JUMPI 0x5eb V308
---
Entry stack: [V11, 0x29e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x29e]

================================

Block 0x518
[0x518:0x524]
---
Predecessors: [0x50c]
Successors: [0x525, 0x5cf]
---
0x518 PUSH1 0x2
0x51a SLOAD
0x51b PUSH1 0x3
0x51d SLOAD
0x51e LT
0x51f ISZERO
0x520 ISZERO
0x521 PUSH2 0x5cf
0x524 JUMPI
---
0x518: V310 = 0x2
0x51a: V311 = S[0x2]
0x51b: V312 = 0x3
0x51d: V313 = S[0x3]
0x51e: V314 = LT V313 V311
0x51f: V315 = ISZERO V314
0x520: V316 = ISZERO V315
0x521: V317 = 0x5cf
0x524: JUMPI 0x5cf V316
---
Entry stack: [V11, 0x29e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x29e]

================================

Block 0x525
[0x525:0x5ce]
---
Predecessors: [0x518]
Successors: [0x5cf]
---
0x525 PUSH1 0x1
0x527 PUSH1 0x8
0x529 PUSH1 0x0
0x52b PUSH2 0x100
0x52e EXP
0x52f DUP2
0x530 SLOAD
0x531 DUP2
0x532 PUSH1 0xff
0x534 MUL
0x535 NOT
0x536 AND
0x537 SWAP1
0x538 DUP4
0x539 ISZERO
0x53a ISZERO
0x53b MUL
0x53c OR
0x53d SWAP1
0x53e SSTORE
0x53f POP
0x540 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x561 PUSH1 0x1
0x563 PUSH1 0x0
0x565 SWAP1
0x566 SLOAD
0x567 SWAP1
0x568 PUSH2 0x100
0x56b EXP
0x56c SWAP1
0x56d DIV
0x56e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x583 AND
0x584 PUSH1 0x3
0x586 SLOAD
0x587 PUSH1 0x40
0x589 MLOAD
0x58a DUP1
0x58b DUP4
0x58c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a1 AND
0x5a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b7 AND
0x5b8 DUP2
0x5b9 MSTORE
0x5ba PUSH1 0x20
0x5bc ADD
0x5bd DUP3
0x5be DUP2
0x5bf MSTORE
0x5c0 PUSH1 0x20
0x5c2 ADD
0x5c3 SWAP3
0x5c4 POP
0x5c5 POP
0x5c6 POP
0x5c7 PUSH1 0x40
0x5c9 MLOAD
0x5ca DUP1
0x5cb SWAP2
0x5cc SUB
0x5cd SWAP1
0x5ce LOG1
---
0x525: V318 = 0x1
0x527: V319 = 0x8
0x529: V320 = 0x0
0x52b: V321 = 0x100
0x52e: V322 = EXP 0x100 0x0
0x530: V323 = S[0x8]
0x532: V324 = 0xff
0x534: V325 = MUL 0xff 0x1
0x535: V326 = NOT 0xff
0x536: V327 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V323
0x539: V328 = ISZERO 0x1
0x53a: V329 = ISZERO 0x0
0x53b: V330 = MUL 0x1 0x1
0x53c: V331 = OR 0x1 V327
0x53e: S[0x8] = V331
0x540: V332 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x561: V333 = 0x1
0x563: V334 = 0x0
0x566: V335 = S[0x1]
0x568: V336 = 0x100
0x56b: V337 = EXP 0x100 0x0
0x56d: V338 = DIV V335 0x1
0x56e: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x583: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x584: V341 = 0x3
0x586: V342 = S[0x3]
0x587: V343 = 0x40
0x589: V344 = M[0x40]
0x58c: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a1: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x5a2: V347 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b7: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x5b9: M[V344] = V348
0x5ba: V349 = 0x20
0x5bc: V350 = ADD 0x20 V344
0x5bf: M[V350] = V342
0x5c0: V351 = 0x20
0x5c2: V352 = ADD 0x20 V350
0x5c7: V353 = 0x40
0x5c9: V354 = M[0x40]
0x5cc: V355 = SUB V352 V354
0x5ce: LOG V354 V355 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V11, 0x29e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x29e]

================================

Block 0x5cf
[0x5cf:0x5ea]
---
Predecessors: [0x518, 0x525]
Successors: [0x5eb]
---
0x5cf JUMPDEST
0x5d0 PUSH1 0x1
0x5d2 PUSH1 0x8
0x5d4 PUSH1 0x1
0x5d6 PUSH2 0x100
0x5d9 EXP
0x5da DUP2
0x5db SLOAD
0x5dc DUP2
0x5dd PUSH1 0xff
0x5df MUL
0x5e0 NOT
0x5e1 AND
0x5e2 SWAP1
0x5e3 DUP4
0x5e4 ISZERO
0x5e5 ISZERO
0x5e6 MUL
0x5e7 OR
0x5e8 SWAP1
0x5e9 SSTORE
0x5ea POP
---
0x5cf: JUMPDEST 
0x5d0: V356 = 0x1
0x5d2: V357 = 0x8
0x5d4: V358 = 0x1
0x5d6: V359 = 0x100
0x5d9: V360 = EXP 0x100 0x1
0x5db: V361 = S[0x8]
0x5dd: V362 = 0xff
0x5df: V363 = MUL 0xff 0x100
0x5e0: V364 = NOT 0xff00
0x5e1: V365 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V361
0x5e4: V366 = ISZERO 0x1
0x5e5: V367 = ISZERO 0x0
0x5e6: V368 = MUL 0x1 0x100
0x5e7: V369 = OR 0x100 V365
0x5e9: S[0x8] = V369
---
Entry stack: [V11, 0x29e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x29e]

================================

Block 0x5eb
[0x5eb:0x5ec]
---
Predecessors: [0x50c, 0x5cf]
Successors: [0x29e]
---
0x5eb JUMPDEST
0x5ec JUMP
---
0x5eb: JUMPDEST 
0x5ec: JUMP 0x29e
---
Entry stack: [V11, 0x29e]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x5ed
[0x5ed:0x611]
---
Predecessors: [0x2ac]
Successors: [0x2b5]
---
0x5ed JUMPDEST
0x5ee PUSH1 0x0
0x5f0 DUP1
0x5f1 SWAP1
0x5f2 SLOAD
0x5f3 SWAP1
0x5f4 PUSH2 0x100
0x5f7 EXP
0x5f8 SWAP1
0x5f9 DIV
0x5fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60f AND
0x610 DUP2
0x611 JUMP
---
0x5ed: JUMPDEST 
0x5ee: V370 = 0x0
0x5f2: V371 = S[0x0]
0x5f4: V372 = 0x100
0x5f7: V373 = EXP 0x100 0x0
0x5f9: V374 = DIV V371 0x1
0x5fa: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x60f: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x611: JUMP 0x2b5
---
Entry stack: [V11, 0x2b5]
Stack pops: 1
Stack additions: [S0, V376]
Exit stack: [V11, 0x2b5, V376]

================================

Block 0x612
[0x612:0x668]
---
Predecessors: [0x303]
Successors: [0x669, 0x66d]
---
0x612 JUMPDEST
0x613 PUSH1 0x0
0x615 DUP1
0x616 SWAP1
0x617 SLOAD
0x618 SWAP1
0x619 PUSH2 0x100
0x61c EXP
0x61d SWAP1
0x61e DIV
0x61f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x634 AND
0x635 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64a AND
0x64b CALLER
0x64c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x661 AND
0x662 EQ
0x663 ISZERO
0x664 ISZERO
0x665 PUSH2 0x66d
0x668 JUMPI
---
0x612: JUMPDEST 
0x613: V377 = 0x0
0x617: V378 = S[0x0]
0x619: V379 = 0x100
0x61c: V380 = EXP 0x100 0x0
0x61e: V381 = DIV V378 0x1
0x61f: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x634: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x635: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x64a: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x64b: V386 = CALLER
0x64c: V387 = 0xffffffffffffffffffffffffffffffffffffffff
0x661: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V386
0x662: V389 = EQ V388 V385
0x663: V390 = ISZERO V389
0x664: V391 = ISZERO V390
0x665: V392 = 0x66d
0x668: JUMPI 0x66d V391
---
Entry stack: [V11, 0x342, V182, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x342, V182, V185]

================================

Block 0x669
[0x669:0x66c]
---
Predecessors: [0x612]
Successors: []
---
0x669 PUSH1 0x0
0x66b DUP1
0x66c REVERT
---
0x669: V393 = 0x0
0x66c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x342, V182, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x342, V182, V185]

================================

Block 0x66d
[0x66d:0x678]
---
Predecessors: [0x612]
Successors: [0x679, 0x67d]
---
0x66d JUMPDEST
0x66e PUSH1 0x4
0x670 SLOAD
0x671 TIMESTAMP
0x672 GT
0x673 ISZERO
0x674 ISZERO
0x675 PUSH2 0x67d
0x678 JUMPI
---
0x66d: JUMPDEST 
0x66e: V394 = 0x4
0x670: V395 = S[0x4]
0x671: V396 = TIMESTAMP
0x672: V397 = GT V396 V395
0x673: V398 = ISZERO V397
0x674: V399 = ISZERO V398
0x675: V400 = 0x67d
0x678: JUMPI 0x67d V399
---
Entry stack: [V11, 0x342, V182, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x342, V182, V185]

================================

Block 0x679
[0x679:0x67c]
---
Predecessors: [0x66d]
Successors: []
---
0x679 PUSH1 0x0
0x67b DUP1
0x67c REVERT
---
0x679: V401 = 0x0
0x67c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x342, V182, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x342, V182, V185]

================================

Block 0x67d
[0x67d:0x73d]
---
Predecessors: [0x66d]
Successors: [0x73e, 0x742]
---
0x67d JUMPDEST
0x67e PUSH1 0x6
0x680 PUSH1 0x0
0x682 SWAP1
0x683 SLOAD
0x684 SWAP1
0x685 PUSH2 0x100
0x688 EXP
0x689 SWAP1
0x68a DIV
0x68b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a0 AND
0x6a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b6 AND
0x6b7 PUSH4 0xa9059cbb
0x6bc DUP4
0x6bd DUP4
0x6be PUSH1 0x40
0x6c0 MLOAD
0x6c1 DUP4
0x6c2 PUSH4 0xffffffff
0x6c7 AND
0x6c8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6e6 MUL
0x6e7 DUP2
0x6e8 MSTORE
0x6e9 PUSH1 0x4
0x6eb ADD
0x6ec DUP1
0x6ed DUP4
0x6ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x703 AND
0x704 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x719 AND
0x71a DUP2
0x71b MSTORE
0x71c PUSH1 0x20
0x71e ADD
0x71f DUP3
0x720 DUP2
0x721 MSTORE
0x722 PUSH1 0x20
0x724 ADD
0x725 SWAP3
0x726 POP
0x727 POP
0x728 POP
0x729 PUSH1 0x0
0x72b PUSH1 0x40
0x72d MLOAD
0x72e DUP1
0x72f DUP4
0x730 SUB
0x731 DUP2
0x732 PUSH1 0x0
0x734 DUP8
0x735 DUP1
0x736 EXTCODESIZE
0x737 ISZERO
0x738 DUP1
0x739 ISZERO
0x73a PUSH2 0x742
0x73d JUMPI
---
0x67d: JUMPDEST 
0x67e: V402 = 0x6
0x680: V403 = 0x0
0x683: V404 = S[0x6]
0x685: V405 = 0x100
0x688: V406 = EXP 0x100 0x0
0x68a: V407 = DIV V404 0x1
0x68b: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a0: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x6a1: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b6: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x6b7: V412 = 0xa9059cbb
0x6be: V413 = 0x40
0x6c0: V414 = M[0x40]
0x6c2: V415 = 0xffffffff
0x6c7: V416 = AND 0xffffffff 0xa9059cbb
0x6c8: V417 = 0x100000000000000000000000000000000000000000000000000000000
0x6e6: V418 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x6e8: M[V414] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6e9: V419 = 0x4
0x6eb: V420 = ADD 0x4 V414
0x6ee: V421 = 0xffffffffffffffffffffffffffffffffffffffff
0x703: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x704: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x719: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x71b: M[V420] = V424
0x71c: V425 = 0x20
0x71e: V426 = ADD 0x20 V420
0x721: M[V426] = V185
0x722: V427 = 0x20
0x724: V428 = ADD 0x20 V426
0x729: V429 = 0x0
0x72b: V430 = 0x40
0x72d: V431 = M[0x40]
0x730: V432 = SUB V428 V431
0x732: V433 = 0x0
0x736: V434 = EXTCODESIZE V411
0x737: V435 = ISZERO V434
0x739: V436 = ISZERO V435
0x73a: V437 = 0x742
0x73d: JUMPI 0x742 V436
---
Entry stack: [V11, 0x342, V182, V185]
Stack pops: 2
Stack additions: [S1, S0, V411, 0xa9059cbb, V428, 0x0, V431, V432, V431, 0x0, V411, V435]
Exit stack: [V11, 0x342, V182, V185, V411, 0xa9059cbb, V428, 0x0, V431, V432, V431, 0x0, V411, V435]

================================

Block 0x73e
[0x73e:0x741]
---
Predecessors: [0x67d]
Successors: []
---
0x73e PUSH1 0x0
0x740 DUP1
0x741 REVERT
---
0x73e: V438 = 0x0
0x741: REVERT 0x0 0x0
---
Entry stack: [V11, 0x342, V182, V185, V411, 0xa9059cbb, V428, 0x0, V431, V432, V431, 0x0, V411, V435]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x342, V182, V185, V411, 0xa9059cbb, V428, 0x0, V431, V432, V431, 0x0, V411, V435]

================================

Block 0x742
[0x742:0x74c]
---
Predecessors: [0x67d]
Successors: [0x74d, 0x756]
---
0x742 JUMPDEST
0x743 POP
0x744 GAS
0x745 CALL
0x746 ISZERO
0x747 DUP1
0x748 ISZERO
0x749 PUSH2 0x756
0x74c JUMPI
---
0x742: JUMPDEST 
0x744: V439 = GAS
0x745: V440 = CALL V439 V411 0x0 V431 V432 V431 0x0
0x746: V441 = ISZERO V440
0x748: V442 = ISZERO V441
0x749: V443 = 0x756
0x74c: JUMPI 0x756 V442
---
Entry stack: [V11, 0x342, V182, V185, V411, 0xa9059cbb, V428, 0x0, V431, V432, V431, 0x0, V411, V435]
Stack pops: 7
Stack additions: [V441]
Exit stack: [V11, 0x342, V182, V185, V411, 0xa9059cbb, V428, V441]

================================

Block 0x74d
[0x74d:0x755]
---
Predecessors: [0x742]
Successors: []
---
0x74d RETURNDATASIZE
0x74e PUSH1 0x0
0x750 DUP1
0x751 RETURNDATACOPY
0x752 RETURNDATASIZE
0x753 PUSH1 0x0
0x755 REVERT
---
0x74d: V444 = RETURNDATASIZE
0x74e: V445 = 0x0
0x751: RETURNDATACOPY 0x0 0x0 V444
0x752: V446 = RETURNDATASIZE
0x753: V447 = 0x0
0x755: REVERT 0x0 V446
---
Entry stack: [V11, 0x342, V182, V185, V411, 0xa9059cbb, V428, V441]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x342, V182, V185, V411, 0xa9059cbb, V428, V441]

================================

Block 0x756
[0x756:0x75d]
---
Predecessors: [0x742]
Successors: [0x342]
---
0x756 JUMPDEST
0x757 POP
0x758 POP
0x759 POP
0x75a POP
0x75b POP
0x75c POP
0x75d JUMP
---
0x756: JUMPDEST 
0x75d: JUMP 0x342
---
Entry stack: [V11, 0x342, V182, V185, V411, 0xa9059cbb, V428, V441]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x75e
[0x75e:0x763]
---
Predecessors: [0x350]
Successors: [0x359]
---
0x75e JUMPDEST
0x75f PUSH1 0x4
0x761 SLOAD
0x762 DUP2
0x763 JUMP
---
0x75e: JUMPDEST 
0x75f: V448 = 0x4
0x761: V449 = S[0x4]
0x763: JUMP 0x359
---
Entry stack: [V11, 0x359]
Stack pops: 1
Stack additions: [S0, V449]
Exit stack: [V11, 0x359, V449]

================================

Block 0x764
[0x764:0x789]
---
Predecessors: [0x37b]
Successors: [0x384]
---
0x764 JUMPDEST
0x765 PUSH1 0x1
0x767 PUSH1 0x0
0x769 SWAP1
0x76a SLOAD
0x76b SWAP1
0x76c PUSH2 0x100
0x76f EXP
0x770 SWAP1
0x771 DIV
0x772 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x787 AND
0x788 DUP2
0x789 JUMP
---
0x764: JUMPDEST 
0x765: V450 = 0x1
0x767: V451 = 0x0
0x76a: V452 = S[0x1]
0x76c: V453 = 0x100
0x76f: V454 = EXP 0x100 0x0
0x771: V455 = DIV V452 0x1
0x772: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x787: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x789: JUMP 0x384
---
Entry stack: [V11, 0x384]
Stack pops: 1
Stack additions: [S0, V457]
Exit stack: [V11, 0x384, V457]

================================

Block 0x78a
[0x78a:0x7af]
---
Predecessors: [0x3d2]
Successors: [0x3db]
---
0x78a JUMPDEST
0x78b PUSH1 0x6
0x78d PUSH1 0x0
0x78f SWAP1
0x790 SLOAD
0x791 SWAP1
0x792 PUSH2 0x100
0x795 EXP
0x796 SWAP1
0x797 DIV
0x798 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ad AND
0x7ae DUP2
0x7af JUMP
---
0x78a: JUMPDEST 
0x78b: V458 = 0x6
0x78d: V459 = 0x0
0x790: V460 = S[0x6]
0x792: V461 = 0x100
0x795: V462 = EXP 0x100 0x0
0x797: V463 = DIV V460 0x1
0x798: V464 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ad: V465 = AND 0xffffffffffffffffffffffffffffffffffffffff V463
0x7af: JUMP 0x3db
---
Entry stack: [V11, 0x3db]
Stack pops: 1
Stack additions: [S0, V465]
Exit stack: [V11, 0x3db, V465]

================================

Block 0x7b0
[0x7b0:0x7c7]
---
Predecessors: [0x429]
Successors: [0x45e]
---
0x7b0 JUMPDEST
0x7b1 PUSH1 0x7
0x7b3 PUSH1 0x20
0x7b5 MSTORE
0x7b6 DUP1
0x7b7 PUSH1 0x0
0x7b9 MSTORE
0x7ba PUSH1 0x40
0x7bc PUSH1 0x0
0x7be SHA3
0x7bf PUSH1 0x0
0x7c1 SWAP2
0x7c2 POP
0x7c3 SWAP1
0x7c4 POP
0x7c5 SLOAD
0x7c6 DUP2
0x7c7 JUMP
---
0x7b0: JUMPDEST 
0x7b1: V466 = 0x7
0x7b3: V467 = 0x20
0x7b5: M[0x20] = 0x7
0x7b7: V468 = 0x0
0x7b9: M[0x0] = V247
0x7ba: V469 = 0x40
0x7bc: V470 = 0x0
0x7be: V471 = SHA3 0x0 0x40
0x7bf: V472 = 0x0
0x7c5: V473 = S[V471]
0x7c7: JUMP 0x45e
---
Entry stack: [V11, 0x45e, V247]
Stack pops: 2
Stack additions: [S1, V473]
Exit stack: [V11, 0x45e, V473]

================================

Block 0x7c8
[0x7c8:0x7cd]
---
Predecessors: [0x480]
Successors: [0x489]
---
0x7c8 JUMPDEST
0x7c9 PUSH1 0x2
0x7cb SLOAD
0x7cc DUP2
0x7cd JUMP
---
0x7c8: JUMPDEST 
0x7c9: V474 = 0x2
0x7cb: V475 = S[0x2]
0x7cd: JUMP 0x489
---
Entry stack: [V11, 0x489]
Stack pops: 1
Stack additions: [S0, V475]
Exit stack: [V11, 0x489, V475]

================================

Block 0x7ce
[0x7ce:0x7d3]
---
Predecessors: [0x4ab]
Successors: [0x4b4]
---
0x7ce JUMPDEST
0x7cf PUSH1 0x3
0x7d1 SLOAD
0x7d2 DUP2
0x7d3 JUMP
---
0x7ce: JUMPDEST 
0x7cf: V476 = 0x3
0x7d1: V477 = S[0x3]
0x7d3: JUMP 0x4b4
---
Entry stack: [V11, 0x4b4]
Stack pops: 1
Stack additions: [S0, V477]
Exit stack: [V11, 0x4b4, V477]

================================

Block 0x7d4
[0x7d4:0x7d9]
---
Predecessors: [0x4d6]
Successors: [0x4df]
---
0x7d4 JUMPDEST
0x7d5 PUSH1 0x5
0x7d7 SLOAD
0x7d8 DUP2
0x7d9 JUMP
---
0x7d4: JUMPDEST 
0x7d5: V478 = 0x5
0x7d7: V479 = S[0x5]
0x7d9: JUMP 0x4df
---
Entry stack: [V11, 0x4df]
Stack pops: 1
Stack additions: [S0, V479]
Exit stack: [V11, 0x4df, V479]

================================

Block 0x7da
[0x7da:0x7e7]
---
Predecessors: [0x501]
Successors: [0x7e8, 0xb16]
---
0x7da JUMPDEST
0x7db PUSH1 0x0
0x7dd PUSH1 0x4
0x7df SLOAD
0x7e0 TIMESTAMP
0x7e1 LT
0x7e2 ISZERO
0x7e3 ISZERO
0x7e4 PUSH2 0xb16
0x7e7 JUMPI
---
0x7da: JUMPDEST 
0x7db: V480 = 0x0
0x7dd: V481 = 0x4
0x7df: V482 = S[0x4]
0x7e0: V483 = TIMESTAMP
0x7e1: V484 = LT V483 V482
0x7e2: V485 = ISZERO V484
0x7e3: V486 = ISZERO V485
0x7e4: V487 = 0xb16
0x7e7: JUMPI 0xb16 V486
---
Entry stack: [V11, 0x50a]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x50a, 0x0]

================================

Block 0x7e8
[0x7e8:0x7fd]
---
Predecessors: [0x7da]
Successors: [0x7fe, 0x98b]
---
0x7e8 PUSH1 0x8
0x7ea PUSH1 0x0
0x7ec SWAP1
0x7ed SLOAD
0x7ee SWAP1
0x7ef PUSH2 0x100
0x7f2 EXP
0x7f3 SWAP1
0x7f4 DIV
0x7f5 PUSH1 0xff
0x7f7 AND
0x7f8 ISZERO
0x7f9 ISZERO
0x7fa PUSH2 0x98b
0x7fd JUMPI
---
0x7e8: V488 = 0x8
0x7ea: V489 = 0x0
0x7ed: V490 = S[0x8]
0x7ef: V491 = 0x100
0x7f2: V492 = EXP 0x100 0x0
0x7f4: V493 = DIV V490 0x1
0x7f5: V494 = 0xff
0x7f7: V495 = AND 0xff V493
0x7f8: V496 = ISZERO V495
0x7f9: V497 = ISZERO V496
0x7fa: V498 = 0x98b
0x7fd: JUMPI 0x98b V497
---
Entry stack: [V11, 0x50a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x50a, 0x0]

================================

Block 0x7fe
[0x7fe:0x88d]
---
Predecessors: [0x7e8]
Successors: [0x88e, 0x98a]
---
0x7fe PUSH1 0x7
0x800 PUSH1 0x0
0x802 CALLER
0x803 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x818 AND
0x819 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82e AND
0x82f DUP2
0x830 MSTORE
0x831 PUSH1 0x20
0x833 ADD
0x834 SWAP1
0x835 DUP2
0x836 MSTORE
0x837 PUSH1 0x20
0x839 ADD
0x83a PUSH1 0x0
0x83c SHA3
0x83d SLOAD
0x83e SWAP1
0x83f POP
0x840 PUSH1 0x0
0x842 PUSH1 0x7
0x844 PUSH1 0x0
0x846 CALLER
0x847 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85c AND
0x85d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x872 AND
0x873 DUP2
0x874 MSTORE
0x875 PUSH1 0x20
0x877 ADD
0x878 SWAP1
0x879 DUP2
0x87a MSTORE
0x87b PUSH1 0x20
0x87d ADD
0x87e PUSH1 0x0
0x880 SHA3
0x881 DUP2
0x882 SWAP1
0x883 SSTORE
0x884 POP
0x885 PUSH1 0x0
0x887 DUP2
0x888 GT
0x889 ISZERO
0x88a PUSH2 0x98a
0x88d JUMPI
---
0x7fe: V499 = 0x7
0x800: V500 = 0x0
0x802: V501 = CALLER
0x803: V502 = 0xffffffffffffffffffffffffffffffffffffffff
0x818: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V501
0x819: V504 = 0xffffffffffffffffffffffffffffffffffffffff
0x82e: V505 = AND 0xffffffffffffffffffffffffffffffffffffffff V503
0x830: M[0x0] = V505
0x831: V506 = 0x20
0x833: V507 = ADD 0x20 0x0
0x836: M[0x20] = 0x7
0x837: V508 = 0x20
0x839: V509 = ADD 0x20 0x20
0x83a: V510 = 0x0
0x83c: V511 = SHA3 0x0 0x40
0x83d: V512 = S[V511]
0x840: V513 = 0x0
0x842: V514 = 0x7
0x844: V515 = 0x0
0x846: V516 = CALLER
0x847: V517 = 0xffffffffffffffffffffffffffffffffffffffff
0x85c: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x85d: V519 = 0xffffffffffffffffffffffffffffffffffffffff
0x872: V520 = AND 0xffffffffffffffffffffffffffffffffffffffff V518
0x874: M[0x0] = V520
0x875: V521 = 0x20
0x877: V522 = ADD 0x20 0x0
0x87a: M[0x20] = 0x7
0x87b: V523 = 0x20
0x87d: V524 = ADD 0x20 0x20
0x87e: V525 = 0x0
0x880: V526 = SHA3 0x0 0x40
0x883: S[V526] = 0x0
0x885: V527 = 0x0
0x888: V528 = GT V512 0x0
0x889: V529 = ISZERO V528
0x88a: V530 = 0x98a
0x88d: JUMPI 0x98a V529
---
Entry stack: [V11, 0x50a, 0x0]
Stack pops: 1
Stack additions: [V512]
Exit stack: [V11, 0x50a, V512]

================================

Block 0x88e
[0x88e:0x8c7]
---
Predecessors: [0x7fe]
Successors: [0x8c8, 0x944]
---
0x88e CALLER
0x88f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a4 AND
0x8a5 PUSH2 0x8fc
0x8a8 DUP3
0x8a9 SWAP1
0x8aa DUP2
0x8ab ISZERO
0x8ac MUL
0x8ad SWAP1
0x8ae PUSH1 0x40
0x8b0 MLOAD
0x8b1 PUSH1 0x0
0x8b3 PUSH1 0x40
0x8b5 MLOAD
0x8b6 DUP1
0x8b7 DUP4
0x8b8 SUB
0x8b9 DUP2
0x8ba DUP6
0x8bb DUP9
0x8bc DUP9
0x8bd CALL
0x8be SWAP4
0x8bf POP
0x8c0 POP
0x8c1 POP
0x8c2 POP
0x8c3 ISZERO
0x8c4 PUSH2 0x944
0x8c7 JUMPI
---
0x88e: V531 = CALLER
0x88f: V532 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a4: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff V531
0x8a5: V534 = 0x8fc
0x8ab: V535 = ISZERO V512
0x8ac: V536 = MUL V535 0x8fc
0x8ae: V537 = 0x40
0x8b0: V538 = M[0x40]
0x8b1: V539 = 0x0
0x8b3: V540 = 0x40
0x8b5: V541 = M[0x40]
0x8b8: V542 = SUB V538 V541
0x8bd: V543 = CALL V536 V533 V512 V541 V542 V541 0x0
0x8c3: V544 = ISZERO V543
0x8c4: V545 = 0x944
0x8c7: JUMPI 0x944 V544
---
Entry stack: [V11, 0x50a, V512]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x50a, V512]

================================

Block 0x8c8
[0x8c8:0x943]
---
Predecessors: [0x88e]
Successors: [0x989]
---
0x8c8 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x8e9 CALLER
0x8ea DUP3
0x8eb PUSH1 0x0
0x8ed PUSH1 0x40
0x8ef MLOAD
0x8f0 DUP1
0x8f1 DUP5
0x8f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x907 AND
0x908 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91d AND
0x91e DUP2
0x91f MSTORE
0x920 PUSH1 0x20
0x922 ADD
0x923 DUP4
0x924 DUP2
0x925 MSTORE
0x926 PUSH1 0x20
0x928 ADD
0x929 DUP3
0x92a ISZERO
0x92b ISZERO
0x92c ISZERO
0x92d ISZERO
0x92e DUP2
0x92f MSTORE
0x930 PUSH1 0x20
0x932 ADD
0x933 SWAP4
0x934 POP
0x935 POP
0x936 POP
0x937 POP
0x938 PUSH1 0x40
0x93a MLOAD
0x93b DUP1
0x93c SWAP2
0x93d SUB
0x93e SWAP1
0x93f LOG1
0x940 PUSH2 0x989
0x943 JUMP
---
0x8c8: V546 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x8e9: V547 = CALLER
0x8eb: V548 = 0x0
0x8ed: V549 = 0x40
0x8ef: V550 = M[0x40]
0x8f2: V551 = 0xffffffffffffffffffffffffffffffffffffffff
0x907: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x908: V553 = 0xffffffffffffffffffffffffffffffffffffffff
0x91d: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V552
0x91f: M[V550] = V554
0x920: V555 = 0x20
0x922: V556 = ADD 0x20 V550
0x925: M[V556] = V512
0x926: V557 = 0x20
0x928: V558 = ADD 0x20 V556
0x92a: V559 = ISZERO 0x0
0x92b: V560 = ISZERO 0x1
0x92c: V561 = ISZERO 0x0
0x92d: V562 = ISZERO 0x1
0x92f: M[V558] = 0x0
0x930: V563 = 0x20
0x932: V564 = ADD 0x20 V558
0x938: V565 = 0x40
0x93a: V566 = M[0x40]
0x93d: V567 = SUB V564 V566
0x93f: LOG V566 V567 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x940: V568 = 0x989
0x943: JUMP 0x989
---
Entry stack: [V11, 0x50a, V512]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x50a, V512]

================================

Block 0x944
[0x944:0x988]
---
Predecessors: [0x88e]
Successors: [0x989]
---
0x944 JUMPDEST
0x945 DUP1
0x946 PUSH1 0x7
0x948 PUSH1 0x0
0x94a CALLER
0x94b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x960 AND
0x961 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x976 AND
0x977 DUP2
0x978 MSTORE
0x979 PUSH1 0x20
0x97b ADD
0x97c SWAP1
0x97d DUP2
0x97e MSTORE
0x97f PUSH1 0x20
0x981 ADD
0x982 PUSH1 0x0
0x984 SHA3
0x985 DUP2
0x986 SWAP1
0x987 SSTORE
0x988 POP
---
0x944: JUMPDEST 
0x946: V569 = 0x7
0x948: V570 = 0x0
0x94a: V571 = CALLER
0x94b: V572 = 0xffffffffffffffffffffffffffffffffffffffff
0x960: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0x961: V574 = 0xffffffffffffffffffffffffffffffffffffffff
0x976: V575 = AND 0xffffffffffffffffffffffffffffffffffffffff V573
0x978: M[0x0] = V575
0x979: V576 = 0x20
0x97b: V577 = ADD 0x20 0x0
0x97e: M[0x20] = 0x7
0x97f: V578 = 0x20
0x981: V579 = ADD 0x20 0x20
0x982: V580 = 0x0
0x984: V581 = SHA3 0x0 0x40
0x987: S[V581] = V512
---
Entry stack: [V11, 0x50a, V512]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x50a, V512]

================================

Block 0x989
[0x989:0x989]
---
Predecessors: [0x8c8, 0x944]
Successors: [0x98a]
---
0x989 JUMPDEST
---
0x989: JUMPDEST 
---
Entry stack: [V11, 0x50a, V512]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x50a, V512]

================================

Block 0x98a
[0x98a:0x98a]
---
Predecessors: [0x7fe, 0x989]
Successors: [0x98b]
---
0x98a JUMPDEST
---
0x98a: JUMPDEST 
---
Entry stack: [V11, 0x50a, V512]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x50a, V512]

================================

Block 0x98b
[0x98b:0x9a1]
---
Predecessors: [0x7e8, 0x98a]
Successors: [0x9a2, 0x9f4]
---
0x98b JUMPDEST
0x98c PUSH1 0x8
0x98e PUSH1 0x0
0x990 SWAP1
0x991 SLOAD
0x992 SWAP1
0x993 PUSH2 0x100
0x996 EXP
0x997 SWAP1
0x998 DIV
0x999 PUSH1 0xff
0x99b AND
0x99c DUP1
0x99d ISZERO
0x99e PUSH2 0x9f4
0x9a1 JUMPI
---
0x98b: JUMPDEST 
0x98c: V582 = 0x8
0x98e: V583 = 0x0
0x991: V584 = S[0x8]
0x993: V585 = 0x100
0x996: V586 = EXP 0x100 0x0
0x998: V587 = DIV V584 0x1
0x999: V588 = 0xff
0x99b: V589 = AND 0xff V587
0x99d: V590 = ISZERO V589
0x99e: V591 = 0x9f4
0x9a1: JUMPI 0x9f4 V590
---
Entry stack: [V11, 0x50a, S0]
Stack pops: 0
Stack additions: [V589]
Exit stack: [V11, 0x50a, S0, V589]

================================

Block 0x9a2
[0x9a2:0x9f3]
---
Predecessors: [0x98b]
Successors: [0x9f4]
---
0x9a2 POP
0x9a3 CALLER
0x9a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b9 AND
0x9ba PUSH1 0x1
0x9bc PUSH1 0x0
0x9be SWAP1
0x9bf SLOAD
0x9c0 SWAP1
0x9c1 PUSH2 0x100
0x9c4 EXP
0x9c5 SWAP1
0x9c6 DIV
0x9c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9dc AND
0x9dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f2 AND
0x9f3 EQ
---
0x9a3: V592 = CALLER
0x9a4: V593 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b9: V594 = AND 0xffffffffffffffffffffffffffffffffffffffff V592
0x9ba: V595 = 0x1
0x9bc: V596 = 0x0
0x9bf: V597 = S[0x1]
0x9c1: V598 = 0x100
0x9c4: V599 = EXP 0x100 0x0
0x9c6: V600 = DIV V597 0x1
0x9c7: V601 = 0xffffffffffffffffffffffffffffffffffffffff
0x9dc: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff V600
0x9dd: V603 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f2: V604 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0x9f3: V605 = EQ V604 V594
---
Entry stack: [V11, 0x50a, S1, V589]
Stack pops: 1
Stack additions: [V605]
Exit stack: [V11, 0x50a, S1, V605]

================================

Block 0x9f4
[0x9f4:0x9f9]
---
Predecessors: [0x98b, 0x9a2]
Successors: [0x9fa, 0xb15]
---
0x9f4 JUMPDEST
0x9f5 ISZERO
0x9f6 PUSH2 0xb15
0x9f9 JUMPI
---
0x9f4: JUMPDEST 
0x9f5: V606 = ISZERO S0
0x9f6: V607 = 0xb15
0x9f9: JUMPI 0xb15 V606
---
Entry stack: [V11, 0x50a, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x50a, S1]

================================

Block 0x9fa
[0x9fa:0xa57]
---
Predecessors: [0x9f4]
Successors: [0xa58, 0xaf8]
---
0x9fa PUSH1 0x1
0x9fc PUSH1 0x0
0x9fe SWAP1
0x9ff SLOAD
0xa00 SWAP1
0xa01 PUSH2 0x100
0xa04 EXP
0xa05 SWAP1
0xa06 DIV
0xa07 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1c AND
0xa1d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa32 AND
0xa33 PUSH2 0x8fc
0xa36 PUSH1 0x3
0xa38 SLOAD
0xa39 SWAP1
0xa3a DUP2
0xa3b ISZERO
0xa3c MUL
0xa3d SWAP1
0xa3e PUSH1 0x40
0xa40 MLOAD
0xa41 PUSH1 0x0
0xa43 PUSH1 0x40
0xa45 MLOAD
0xa46 DUP1
0xa47 DUP4
0xa48 SUB
0xa49 DUP2
0xa4a DUP6
0xa4b DUP9
0xa4c DUP9
0xa4d CALL
0xa4e SWAP4
0xa4f POP
0xa50 POP
0xa51 POP
0xa52 POP
0xa53 ISZERO
0xa54 PUSH2 0xaf8
0xa57 JUMPI
---
0x9fa: V608 = 0x1
0x9fc: V609 = 0x0
0x9ff: V610 = S[0x1]
0xa01: V611 = 0x100
0xa04: V612 = EXP 0x100 0x0
0xa06: V613 = DIV V610 0x1
0xa07: V614 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1c: V615 = AND 0xffffffffffffffffffffffffffffffffffffffff V613
0xa1d: V616 = 0xffffffffffffffffffffffffffffffffffffffff
0xa32: V617 = AND 0xffffffffffffffffffffffffffffffffffffffff V615
0xa33: V618 = 0x8fc
0xa36: V619 = 0x3
0xa38: V620 = S[0x3]
0xa3b: V621 = ISZERO V620
0xa3c: V622 = MUL V621 0x8fc
0xa3e: V623 = 0x40
0xa40: V624 = M[0x40]
0xa41: V625 = 0x0
0xa43: V626 = 0x40
0xa45: V627 = M[0x40]
0xa48: V628 = SUB V624 V627
0xa4d: V629 = CALL V622 V617 V620 V627 V628 V627 0x0
0xa53: V630 = ISZERO V629
0xa54: V631 = 0xaf8
0xa57: JUMPI 0xaf8 V630
---
Entry stack: [V11, 0x50a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x50a, S0]

================================

Block 0xa58
[0xa58:0xaf7]
---
Predecessors: [0x9fa]
Successors: [0xb14]
---
0xa58 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0xa79 PUSH1 0x1
0xa7b PUSH1 0x0
0xa7d SWAP1
0xa7e SLOAD
0xa7f SWAP1
0xa80 PUSH2 0x100
0xa83 EXP
0xa84 SWAP1
0xa85 DIV
0xa86 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9b AND
0xa9c PUSH1 0x3
0xa9e SLOAD
0xa9f PUSH1 0x0
0xaa1 PUSH1 0x40
0xaa3 MLOAD
0xaa4 DUP1
0xaa5 DUP5
0xaa6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xabb AND
0xabc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad1 AND
0xad2 DUP2
0xad3 MSTORE
0xad4 PUSH1 0x20
0xad6 ADD
0xad7 DUP4
0xad8 DUP2
0xad9 MSTORE
0xada PUSH1 0x20
0xadc ADD
0xadd DUP3
0xade ISZERO
0xadf ISZERO
0xae0 ISZERO
0xae1 ISZERO
0xae2 DUP2
0xae3 MSTORE
0xae4 PUSH1 0x20
0xae6 ADD
0xae7 SWAP4
0xae8 POP
0xae9 POP
0xaea POP
0xaeb POP
0xaec PUSH1 0x40
0xaee MLOAD
0xaef DUP1
0xaf0 SWAP2
0xaf1 SUB
0xaf2 SWAP1
0xaf3 LOG1
0xaf4 PUSH2 0xb14
0xaf7 JUMP
---
0xa58: V632 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0xa79: V633 = 0x1
0xa7b: V634 = 0x0
0xa7e: V635 = S[0x1]
0xa80: V636 = 0x100
0xa83: V637 = EXP 0x100 0x0
0xa85: V638 = DIV V635 0x1
0xa86: V639 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9b: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff V638
0xa9c: V641 = 0x3
0xa9e: V642 = S[0x3]
0xa9f: V643 = 0x0
0xaa1: V644 = 0x40
0xaa3: V645 = M[0x40]
0xaa6: V646 = 0xffffffffffffffffffffffffffffffffffffffff
0xabb: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff V640
0xabc: V648 = 0xffffffffffffffffffffffffffffffffffffffff
0xad1: V649 = AND 0xffffffffffffffffffffffffffffffffffffffff V647
0xad3: M[V645] = V649
0xad4: V650 = 0x20
0xad6: V651 = ADD 0x20 V645
0xad9: M[V651] = V642
0xada: V652 = 0x20
0xadc: V653 = ADD 0x20 V651
0xade: V654 = ISZERO 0x0
0xadf: V655 = ISZERO 0x1
0xae0: V656 = ISZERO 0x0
0xae1: V657 = ISZERO 0x1
0xae3: M[V653] = 0x0
0xae4: V658 = 0x20
0xae6: V659 = ADD 0x20 V653
0xaec: V660 = 0x40
0xaee: V661 = M[0x40]
0xaf1: V662 = SUB V659 V661
0xaf3: LOG V661 V662 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0xaf4: V663 = 0xb14
0xaf7: JUMP 0xb14
---
Entry stack: [V11, 0x50a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x50a, S0]

================================

Block 0xaf8
[0xaf8:0xb13]
---
Predecessors: [0x9fa]
Successors: [0xb14]
---
0xaf8 JUMPDEST
0xaf9 PUSH1 0x0
0xafb PUSH1 0x8
0xafd PUSH1 0x0
0xaff PUSH2 0x100
0xb02 EXP
0xb03 DUP2
0xb04 SLOAD
0xb05 DUP2
0xb06 PUSH1 0xff
0xb08 MUL
0xb09 NOT
0xb0a AND
0xb0b SWAP1
0xb0c DUP4
0xb0d ISZERO
0xb0e ISZERO
0xb0f MUL
0xb10 OR
0xb11 SWAP1
0xb12 SSTORE
0xb13 POP
---
0xaf8: JUMPDEST 
0xaf9: V664 = 0x0
0xafb: V665 = 0x8
0xafd: V666 = 0x0
0xaff: V667 = 0x100
0xb02: V668 = EXP 0x100 0x0
0xb04: V669 = S[0x8]
0xb06: V670 = 0xff
0xb08: V671 = MUL 0xff 0x1
0xb09: V672 = NOT 0xff
0xb0a: V673 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V669
0xb0d: V674 = ISZERO 0x0
0xb0e: V675 = ISZERO 0x1
0xb0f: V676 = MUL 0x0 0x1
0xb10: V677 = OR 0x0 V673
0xb12: S[0x8] = V677
---
Entry stack: [V11, 0x50a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x50a, S0]

================================

Block 0xb14
[0xb14:0xb14]
---
Predecessors: [0xa58, 0xaf8]
Successors: [0xb15]
---
0xb14 JUMPDEST
---
0xb14: JUMPDEST 
---
Entry stack: [V11, 0x50a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x50a, S0]

================================

Block 0xb15
[0xb15:0xb15]
---
Predecessors: [0x9f4, 0xb14]
Successors: [0xb16]
---
0xb15 JUMPDEST
---
0xb15: JUMPDEST 
---
Entry stack: [V11, 0x50a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x50a, S0]

================================

Block 0xb16
[0xb16:0xb18]
---
Predecessors: [0x7da, 0xb15]
Successors: [0x50a]
---
0xb16 JUMPDEST
0xb17 POP
0xb18 JUMP
---
0xb16: JUMPDEST 
0xb18: JUMP 0x50a
---
Entry stack: [V11, 0x50a, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xb19
[0xb19:0xb5b]
---
Predecessors: []
Successors: []
---
0xb19 STOP
0xb1a LOG1
0xb1b PUSH6 0x627a7a723058
0xb22 SHA3
0xb23 LT
0xb24 LT
0xb25 DUP4
0xb26 MISSING 0xeb
0xb27 CREATE
0xb28 MISSING 0xec
0xb29 PUSH19 0x44c88b9258836d63957960ef2af510dc4ef6a0
0xb3d PUSH30 0x477840d4e80029
---
0xb19: STOP 
0xb1a: LOG S0 S1 S2
0xb1b: V678 = 0x627a7a723058
0xb22: V679 = SHA3 0x627a7a723058 S3
0xb23: V680 = LT V679 S4
0xb24: V681 = LT V680 S5
0xb26: MISSING 0xeb
0xb27: V682 = CREATE S0 S1 S2
0xb28: MISSING 0xec
0xb29: V683 = 0x44c88b9258836d63957960ef2af510dc4ef6a0
0xb3d: V684 = 0x477840d4e80029
---
Entry stack: []
Stack pops: 0
Stack additions: [S8, V681, S6, S7, S8, V682, 0x477840d4e80029, 0x44c88b9258836d63957960ef2af510dc4ef6a0]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x289
Exit block: 0x29e
Body: 0x289, 0x291, 0x295, 0x29e, 0x50c, 0x518, 0x525, 0x5cf, 0x5eb

Function 1:
Public function signature: 0x2d05d3f
Entry block: 0x2a0
Exit block: 0x2b5
Body: 0x2a0, 0x2a8, 0x2ac, 0x2b5, 0x5ed

Function 2:
Public function signature: 0x1072cbea
Entry block: 0x2f7
Exit block: 0x342
Body: 0x2f7, 0x2ff, 0x303, 0x342, 0x612, 0x669, 0x66d, 0x679, 0x67d, 0x73e, 0x742, 0x74d, 0x756

Function 3:
Public function signature: 0x29dcb0cf
Entry block: 0x344
Exit block: 0x359
Body: 0x344, 0x34c, 0x350, 0x359, 0x75e

Function 4:
Public function signature: 0x38af3eed
Entry block: 0x36f
Exit block: 0x384
Body: 0x36f, 0x377, 0x37b, 0x384, 0x764

Function 5:
Public function signature: 0x6e66f6e9
Entry block: 0x3c6
Exit block: 0x3db
Body: 0x3c6, 0x3ce, 0x3d2, 0x3db, 0x78a

Function 6:
Public function signature: 0x70a08231
Entry block: 0x41d
Exit block: 0x45e
Body: 0x41d, 0x425, 0x429, 0x45e, 0x7b0

Function 7:
Public function signature: 0x7a3a0e84
Entry block: 0x474
Exit block: 0x489
Body: 0x474, 0x47c, 0x480, 0x489, 0x7c8

Function 8:
Public function signature: 0x7b3e5e7b
Entry block: 0x49f
Exit block: 0x4b4
Body: 0x49f, 0x4a7, 0x4ab, 0x4b4, 0x7ce

Function 9:
Public function signature: 0xa035b1fe
Entry block: 0x4ca
Exit block: 0x4df
Body: 0x4ca, 0x4d2, 0x4d6, 0x4df, 0x7d4

Function 10:
Public function signature: 0xfd6b7ef8
Entry block: 0x4f5
Exit block: 0x50a
Body: 0x4f5, 0x4fd, 0x501, 0x50a, 0x7da, 0x7e8, 0x7fe, 0x88e, 0x8c8, 0x944, 0x989, 0x98a, 0x98b, 0x9a2, 0x9f4, 0x9fa, 0xa58, 0xaf8, 0xb14, 0xb15, 0xb16

Function 11:
Public fallback function
Entry block: 0xaf
Exit block: 0x200
Body: 0xaf, 0xc5, 0xc9, 0x1f1, 0x1f5, 0x200, 0x209

