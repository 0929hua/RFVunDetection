Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x257]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2458b87
0x3c EQ
0x3d PUSH2 0x257
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2458b87
0x3c: V13 = EQ 0x2458b87 V11
0x3d: V14 = 0x257
0x40: JUMPI 0x257 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x27a]
---
0x41 DUP1
0x42 PUSH4 0xb97bc86
0x47 EQ
0x48 PUSH2 0x27a
0x4b JUMPI
---
0x42: V15 = 0xb97bc86
0x47: V16 = EQ 0xb97bc86 V11
0x48: V17 = 0x27a
0x4b: JUMPI 0x27a V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x2a3]
---
0x4c DUP1
0x4d PUSH4 0x6e66f6e9
0x52 EQ
0x53 PUSH2 0x2a3
0x56 JUMPI
---
0x4d: V18 = 0x6e66f6e9
0x52: V19 = EQ 0x6e66f6e9 V11
0x53: V20 = 0x2a3
0x56: JUMPI 0x2a3 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x2f8]
---
0x57 DUP1
0x58 PUSH4 0xb7678174
0x5d EQ
0x5e PUSH2 0x2f8
0x61 JUMPI
---
0x58: V21 = 0xb7678174
0x5d: V22 = EQ 0xb7678174 V11
0x5e: V23 = 0x2f8
0x61: JUMPI 0x2f8 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x31b]
---
0x62 DUP1
0x63 PUSH4 0xc24a0f8b
0x68 EQ
0x69 PUSH2 0x31b
0x6c JUMPI
---
0x63: V24 = 0xc24a0f8b
0x68: V25 = EQ 0xc24a0f8b V11
0x69: V26 = 0x31b
0x6c: JUMPI 0x31b V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x78]
---
Predecessors: [0x0, 0x62]
Successors: [0x79, 0x7d]
---
0x6d JUMPDEST
0x6e PUSH1 0x0
0x70 DUP1
0x71 CALLVALUE
0x72 GT
0x73 ISZERO
0x74 ISZERO
0x75 PUSH2 0x7d
0x78 JUMPI
---
0x6d: JUMPDEST 
0x6e: V27 = 0x0
0x71: V28 = CALLVALUE
0x72: V29 = GT V28 0x0
0x73: V30 = ISZERO V29
0x74: V31 = ISZERO V30
0x75: V32 = 0x7d
0x78: JUMPI 0x7d V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0x79
[0x79:0x7c]
---
Predecessors: [0x6d]
Successors: []
---
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x79: V33 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x7d
[0x7d:0x88]
---
Predecessors: [0x6d]
Successors: [0x89, 0x8d]
---
0x7d JUMPDEST
0x7e PUSH1 0x3
0x80 SLOAD
0x81 TIMESTAMP
0x82 GT
0x83 ISZERO
0x84 ISZERO
0x85 PUSH2 0x8d
0x88 JUMPI
---
0x7d: JUMPDEST 
0x7e: V34 = 0x3
0x80: V35 = S[0x3]
0x81: V36 = TIMESTAMP
0x82: V37 = GT V36 V35
0x83: V38 = ISZERO V37
0x84: V39 = ISZERO V38
0x85: V40 = 0x8d
0x88: JUMPI 0x8d V39
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x89
[0x89:0x8c]
---
Predecessors: [0x7d]
Successors: []
---
0x89 PUSH1 0x0
0x8b DUP1
0x8c REVERT
---
0x89: V41 = 0x0
0x8c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x8d
[0x8d:0x98]
---
Predecessors: [0x7d]
Successors: [0x99, 0x9d]
---
0x8d JUMPDEST
0x8e PUSH1 0x4
0x90 SLOAD
0x91 TIMESTAMP
0x92 LT
0x93 ISZERO
0x94 ISZERO
0x95 PUSH2 0x9d
0x98 JUMPI
---
0x8d: JUMPDEST 
0x8e: V42 = 0x4
0x90: V43 = S[0x4]
0x91: V44 = TIMESTAMP
0x92: V45 = LT V44 V43
0x93: V46 = ISZERO V45
0x94: V47 = ISZERO V46
0x95: V48 = 0x9d
0x98: JUMPI 0x9d V47
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x99
[0x99:0x9c]
---
Predecessors: [0x8d]
Successors: []
---
0x99 PUSH1 0x0
0x9b DUP1
0x9c REVERT
---
0x99: V49 = 0x0
0x9c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x9d
[0x9d:0x161]
---
Predecessors: [0x8d]
Successors: [0x162, 0x166]
---
0x9d JUMPDEST
0x9e PUSH1 0x64
0xa0 CALLVALUE
0xa1 MUL
0xa2 SWAP1
0xa3 POP
0xa4 PUSH1 0x0
0xa6 DUP1
0xa7 SWAP1
0xa8 SLOAD
0xa9 SWAP1
0xaa PUSH2 0x100
0xad EXP
0xae SWAP1
0xaf DIV
0xb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5 AND
0xc6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb AND
0xdc PUSH4 0xa9059cbb
0xe1 CALLER
0xe2 DUP4
0xe3 PUSH1 0x40
0xe5 MLOAD
0xe6 DUP4
0xe7 PUSH4 0xffffffff
0xec AND
0xed PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x10b MUL
0x10c DUP2
0x10d MSTORE
0x10e PUSH1 0x4
0x110 ADD
0x111 DUP1
0x112 DUP4
0x113 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x128 AND
0x129 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13e AND
0x13f DUP2
0x140 MSTORE
0x141 PUSH1 0x20
0x143 ADD
0x144 DUP3
0x145 DUP2
0x146 MSTORE
0x147 PUSH1 0x20
0x149 ADD
0x14a SWAP3
0x14b POP
0x14c POP
0x14d POP
0x14e PUSH1 0x0
0x150 PUSH1 0x40
0x152 MLOAD
0x153 DUP1
0x154 DUP4
0x155 SUB
0x156 DUP2
0x157 PUSH1 0x0
0x159 DUP8
0x15a DUP1
0x15b EXTCODESIZE
0x15c ISZERO
0x15d ISZERO
0x15e PUSH2 0x166
0x161 JUMPI
---
0x9d: JUMPDEST 
0x9e: V50 = 0x64
0xa0: V51 = CALLVALUE
0xa1: V52 = MUL V51 0x64
0xa4: V53 = 0x0
0xa8: V54 = S[0x0]
0xaa: V55 = 0x100
0xad: V56 = EXP 0x100 0x0
0xaf: V57 = DIV V54 0x1
0xb0: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xc6: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xdc: V62 = 0xa9059cbb
0xe1: V63 = CALLER
0xe3: V64 = 0x40
0xe5: V65 = M[0x40]
0xe7: V66 = 0xffffffff
0xec: V67 = AND 0xffffffff 0xa9059cbb
0xed: V68 = 0x100000000000000000000000000000000000000000000000000000000
0x10b: V69 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x10d: M[V65] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x10e: V70 = 0x4
0x110: V71 = ADD 0x4 V65
0x113: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x128: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x129: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x13e: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x140: M[V71] = V75
0x141: V76 = 0x20
0x143: V77 = ADD 0x20 V71
0x146: M[V77] = V52
0x147: V78 = 0x20
0x149: V79 = ADD 0x20 V77
0x14e: V80 = 0x0
0x150: V81 = 0x40
0x152: V82 = M[0x40]
0x155: V83 = SUB V79 V82
0x157: V84 = 0x0
0x15b: V85 = EXTCODESIZE V61
0x15c: V86 = ISZERO V85
0x15d: V87 = ISZERO V86
0x15e: V88 = 0x166
0x161: JUMPI 0x166 V87
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V52, V61, 0xa9059cbb, V79, 0x0, V82, V83, V82, 0x0, V61]
Exit stack: [V11, V52, V61, 0xa9059cbb, V79, 0x0, V82, V83, V82, 0x0, V61]

================================

Block 0x162
[0x162:0x165]
---
Predecessors: [0x9d]
Successors: []
---
0x162 PUSH1 0x0
0x164 DUP1
0x165 REVERT
---
0x162: V89 = 0x0
0x165: REVERT 0x0 0x0
---
Entry stack: [V11, V52, V61, 0xa9059cbb, V79, 0x0, V82, V83, V82, 0x0, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V52, V61, 0xa9059cbb, V79, 0x0, V82, V83, V82, 0x0, V61]

================================

Block 0x166
[0x166:0x172]
---
Predecessors: [0x9d]
Successors: [0x173, 0x177]
---
0x166 JUMPDEST
0x167 PUSH2 0x2c6
0x16a GAS
0x16b SUB
0x16c CALL
0x16d ISZERO
0x16e ISZERO
0x16f PUSH2 0x177
0x172 JUMPI
---
0x166: JUMPDEST 
0x167: V90 = 0x2c6
0x16a: V91 = GAS
0x16b: V92 = SUB V91 0x2c6
0x16c: V93 = CALL V92 V61 0x0 V82 V83 V82 0x0
0x16d: V94 = ISZERO V93
0x16e: V95 = ISZERO V94
0x16f: V96 = 0x177
0x172: JUMPI 0x177 V95
---
Entry stack: [V11, V52, V61, 0xa9059cbb, V79, 0x0, V82, V83, V82, 0x0, V61]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V52, V61, 0xa9059cbb, V79]

================================

Block 0x173
[0x173:0x176]
---
Predecessors: [0x166]
Successors: []
---
0x173 PUSH1 0x0
0x175 DUP1
0x176 REVERT
---
0x173: V97 = 0x0
0x176: REVERT 0x0 0x0
---
Entry stack: [V11, V52, V61, 0xa9059cbb, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V52, V61, 0xa9059cbb, V79]

================================

Block 0x177
[0x177:0x24f]
---
Predecessors: [0x166]
Successors: [0x250, 0x254]
---
0x177 JUMPDEST
0x178 POP
0x179 POP
0x17a POP
0x17b PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x19c CALLER
0x19d DUP3
0x19e PUSH1 0x1
0x1a0 PUSH1 0x40
0x1a2 MLOAD
0x1a3 DUP1
0x1a4 DUP5
0x1a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ba AND
0x1bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d0 AND
0x1d1 DUP2
0x1d2 MSTORE
0x1d3 PUSH1 0x20
0x1d5 ADD
0x1d6 DUP4
0x1d7 DUP2
0x1d8 MSTORE
0x1d9 PUSH1 0x20
0x1db ADD
0x1dc DUP3
0x1dd ISZERO
0x1de ISZERO
0x1df ISZERO
0x1e0 ISZERO
0x1e1 DUP2
0x1e2 MSTORE
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 SWAP4
0x1e7 POP
0x1e8 POP
0x1e9 POP
0x1ea POP
0x1eb PUSH1 0x40
0x1ed MLOAD
0x1ee DUP1
0x1ef SWAP2
0x1f0 SUB
0x1f1 SWAP1
0x1f2 LOG1
0x1f3 PUSH1 0x1
0x1f5 PUSH1 0x0
0x1f7 SWAP1
0x1f8 SLOAD
0x1f9 SWAP1
0x1fa PUSH2 0x100
0x1fd EXP
0x1fe SWAP1
0x1ff DIV
0x200 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x215 AND
0x216 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22b AND
0x22c PUSH2 0x8fc
0x22f CALLVALUE
0x230 SWAP1
0x231 DUP2
0x232 ISZERO
0x233 MUL
0x234 SWAP1
0x235 PUSH1 0x40
0x237 MLOAD
0x238 PUSH1 0x0
0x23a PUSH1 0x40
0x23c MLOAD
0x23d DUP1
0x23e DUP4
0x23f SUB
0x240 DUP2
0x241 DUP6
0x242 DUP9
0x243 DUP9
0x244 CALL
0x245 SWAP4
0x246 POP
0x247 POP
0x248 POP
0x249 POP
0x24a ISZERO
0x24b ISZERO
0x24c PUSH2 0x254
0x24f JUMPI
---
0x177: JUMPDEST 
0x17b: V98 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x19c: V99 = CALLER
0x19e: V100 = 0x1
0x1a0: V101 = 0x40
0x1a2: V102 = M[0x40]
0x1a5: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x1bb: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d0: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1d2: M[V102] = V106
0x1d3: V107 = 0x20
0x1d5: V108 = ADD 0x20 V102
0x1d8: M[V108] = V52
0x1d9: V109 = 0x20
0x1db: V110 = ADD 0x20 V108
0x1dd: V111 = ISZERO 0x1
0x1de: V112 = ISZERO 0x0
0x1df: V113 = ISZERO 0x1
0x1e0: V114 = ISZERO 0x0
0x1e2: M[V110] = 0x1
0x1e3: V115 = 0x20
0x1e5: V116 = ADD 0x20 V110
0x1eb: V117 = 0x40
0x1ed: V118 = M[0x40]
0x1f0: V119 = SUB V116 V118
0x1f2: LOG V118 V119 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1f3: V120 = 0x1
0x1f5: V121 = 0x0
0x1f8: V122 = S[0x1]
0x1fa: V123 = 0x100
0x1fd: V124 = EXP 0x100 0x0
0x1ff: V125 = DIV V122 0x1
0x200: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x215: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x216: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x22b: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x22c: V130 = 0x8fc
0x22f: V131 = CALLVALUE
0x232: V132 = ISZERO V131
0x233: V133 = MUL V132 0x8fc
0x235: V134 = 0x40
0x237: V135 = M[0x40]
0x238: V136 = 0x0
0x23a: V137 = 0x40
0x23c: V138 = M[0x40]
0x23f: V139 = SUB V135 V138
0x244: V140 = CALL V133 V129 V131 V138 V139 V138 0x0
0x24a: V141 = ISZERO V140
0x24b: V142 = ISZERO V141
0x24c: V143 = 0x254
0x24f: JUMPI 0x254 V142
---
Entry stack: [V11, V52, V61, 0xa9059cbb, V79]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V11, V52]

================================

Block 0x250
[0x250:0x253]
---
Predecessors: [0x177]
Successors: []
---
0x250 PUSH1 0x0
0x252 DUP1
0x253 REVERT
---
0x250: V144 = 0x0
0x253: REVERT 0x0 0x0
---
Entry stack: [V11, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V52]

================================

Block 0x254
[0x254:0x256]
---
Predecessors: [0x177]
Successors: []
---
0x254 JUMPDEST
0x255 POP
0x256 STOP
---
0x254: JUMPDEST 
0x256: STOP 
---
Entry stack: [V11, V52]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x257
[0x257:0x25d]
---
Predecessors: [0xd]
Successors: [0x25e, 0x262]
---
0x257 JUMPDEST
0x258 CALLVALUE
0x259 ISZERO
0x25a PUSH2 0x262
0x25d JUMPI
---
0x257: JUMPDEST 
0x258: V145 = CALLVALUE
0x259: V146 = ISZERO V145
0x25a: V147 = 0x262
0x25d: JUMPI 0x262 V146
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x25e
[0x25e:0x261]
---
Predecessors: [0x257]
Successors: []
---
0x25e PUSH1 0x0
0x260 DUP1
0x261 REVERT
---
0x25e: V148 = 0x0
0x261: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x262
[0x262:0x277]
---
Predecessors: [0x257]
Successors: [0x344]
---
0x262 JUMPDEST
0x263 PUSH2 0x278
0x266 PUSH1 0x4
0x268 DUP1
0x269 DUP1
0x26a CALLDATALOAD
0x26b SWAP1
0x26c PUSH1 0x20
0x26e ADD
0x26f SWAP1
0x270 SWAP2
0x271 SWAP1
0x272 POP
0x273 POP
0x274 PUSH2 0x344
0x277 JUMP
---
0x262: JUMPDEST 
0x263: V149 = 0x278
0x266: V150 = 0x4
0x26a: V151 = CALLDATALOAD 0x4
0x26c: V152 = 0x20
0x26e: V153 = ADD 0x20 0x4
0x274: V154 = 0x344
0x277: JUMP 0x344
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x278, V151]
Exit stack: [V11, 0x278, V151]

================================

Block 0x278
[0x278:0x279]
---
Predecessors: [0x3a0]
Successors: []
---
0x278 JUMPDEST
0x279 STOP
---
0x278: JUMPDEST 
0x279: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x27a
[0x27a:0x280]
---
Predecessors: [0x41]
Successors: [0x281, 0x285]
---
0x27a JUMPDEST
0x27b CALLVALUE
0x27c ISZERO
0x27d PUSH2 0x285
0x280 JUMPI
---
0x27a: JUMPDEST 
0x27b: V155 = CALLVALUE
0x27c: V156 = ISZERO V155
0x27d: V157 = 0x285
0x280: JUMPI 0x285 V156
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x281
[0x281:0x284]
---
Predecessors: [0x27a]
Successors: []
---
0x281 PUSH1 0x0
0x283 DUP1
0x284 REVERT
---
0x281: V158 = 0x0
0x284: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x285
[0x285:0x28c]
---
Predecessors: [0x27a]
Successors: [0x3aa]
---
0x285 JUMPDEST
0x286 PUSH2 0x28d
0x289 PUSH2 0x3aa
0x28c JUMP
---
0x285: JUMPDEST 
0x286: V159 = 0x28d
0x289: V160 = 0x3aa
0x28c: JUMP 0x3aa
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x28d]
Exit stack: [V11, 0x28d]

================================

Block 0x28d
[0x28d:0x2a2]
---
Predecessors: [0x3aa]
Successors: []
---
0x28d JUMPDEST
0x28e PUSH1 0x40
0x290 MLOAD
0x291 DUP1
0x292 DUP3
0x293 DUP2
0x294 MSTORE
0x295 PUSH1 0x20
0x297 ADD
0x298 SWAP2
0x299 POP
0x29a POP
0x29b PUSH1 0x40
0x29d MLOAD
0x29e DUP1
0x29f SWAP2
0x2a0 SUB
0x2a1 SWAP1
0x2a2 RETURN
---
0x28d: JUMPDEST 
0x28e: V161 = 0x40
0x290: V162 = M[0x40]
0x294: M[V162] = V228
0x295: V163 = 0x20
0x297: V164 = ADD 0x20 V162
0x29b: V165 = 0x40
0x29d: V166 = M[0x40]
0x2a0: V167 = SUB V164 V166
0x2a2: RETURN V166 V167
---
Entry stack: [V11, 0x28d, V228]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x28d]

================================

Block 0x2a3
[0x2a3:0x2a9]
---
Predecessors: [0x4c]
Successors: [0x2aa, 0x2ae]
---
0x2a3 JUMPDEST
0x2a4 CALLVALUE
0x2a5 ISZERO
0x2a6 PUSH2 0x2ae
0x2a9 JUMPI
---
0x2a3: JUMPDEST 
0x2a4: V168 = CALLVALUE
0x2a5: V169 = ISZERO V168
0x2a6: V170 = 0x2ae
0x2a9: JUMPI 0x2ae V169
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2aa
[0x2aa:0x2ad]
---
Predecessors: [0x2a3]
Successors: []
---
0x2aa PUSH1 0x0
0x2ac DUP1
0x2ad REVERT
---
0x2aa: V171 = 0x0
0x2ad: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ae
[0x2ae:0x2b5]
---
Predecessors: [0x2a3]
Successors: [0x3b0]
---
0x2ae JUMPDEST
0x2af PUSH2 0x2b6
0x2b2 PUSH2 0x3b0
0x2b5 JUMP
---
0x2ae: JUMPDEST 
0x2af: V172 = 0x2b6
0x2b2: V173 = 0x3b0
0x2b5: JUMP 0x3b0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2b6]
Exit stack: [V11, 0x2b6]

================================

Block 0x2b6
[0x2b6:0x2f7]
---
Predecessors: [0x3b0]
Successors: []
---
0x2b6 JUMPDEST
0x2b7 PUSH1 0x40
0x2b9 MLOAD
0x2ba DUP1
0x2bb DUP3
0x2bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d1 AND
0x2d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e7 AND
0x2e8 DUP2
0x2e9 MSTORE
0x2ea PUSH1 0x20
0x2ec ADD
0x2ed SWAP2
0x2ee POP
0x2ef POP
0x2f0 PUSH1 0x40
0x2f2 MLOAD
0x2f3 DUP1
0x2f4 SWAP2
0x2f5 SUB
0x2f6 SWAP1
0x2f7 RETURN
---
0x2b6: JUMPDEST 
0x2b7: V174 = 0x40
0x2b9: V175 = M[0x40]
0x2bc: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d1: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x2d2: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e7: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x2e9: M[V175] = V179
0x2ea: V180 = 0x20
0x2ec: V181 = ADD 0x20 V175
0x2f0: V182 = 0x40
0x2f2: V183 = M[0x40]
0x2f5: V184 = SUB V181 V183
0x2f7: RETURN V183 V184
---
Entry stack: [V11, 0x2b6, V235]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2b6]

================================

Block 0x2f8
[0x2f8:0x2fe]
---
Predecessors: [0x57]
Successors: [0x2ff, 0x303]
---
0x2f8 JUMPDEST
0x2f9 CALLVALUE
0x2fa ISZERO
0x2fb PUSH2 0x303
0x2fe JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V185 = CALLVALUE
0x2fa: V186 = ISZERO V185
0x2fb: V187 = 0x303
0x2fe: JUMPI 0x303 V186
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ff
[0x2ff:0x302]
---
Predecessors: [0x2f8]
Successors: []
---
0x2ff PUSH1 0x0
0x301 DUP1
0x302 REVERT
---
0x2ff: V188 = 0x0
0x302: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x303
[0x303:0x318]
---
Predecessors: [0x2f8]
Successors: [0x3d5]
---
0x303 JUMPDEST
0x304 PUSH2 0x319
0x307 PUSH1 0x4
0x309 DUP1
0x30a DUP1
0x30b CALLDATALOAD
0x30c SWAP1
0x30d PUSH1 0x20
0x30f ADD
0x310 SWAP1
0x311 SWAP2
0x312 SWAP1
0x313 POP
0x314 POP
0x315 PUSH2 0x3d5
0x318 JUMP
---
0x303: JUMPDEST 
0x304: V189 = 0x319
0x307: V190 = 0x4
0x30b: V191 = CALLDATALOAD 0x4
0x30d: V192 = 0x20
0x30f: V193 = ADD 0x20 0x4
0x315: V194 = 0x3d5
0x318: JUMP 0x3d5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x319, V191]
Exit stack: [V11, 0x319, V191]

================================

Block 0x319
[0x319:0x31a]
---
Predecessors: [0x431]
Successors: []
---
0x319 JUMPDEST
0x31a STOP
---
0x319: JUMPDEST 
0x31a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x31b
[0x31b:0x321]
---
Predecessors: [0x62]
Successors: [0x322, 0x326]
---
0x31b JUMPDEST
0x31c CALLVALUE
0x31d ISZERO
0x31e PUSH2 0x326
0x321 JUMPI
---
0x31b: JUMPDEST 
0x31c: V195 = CALLVALUE
0x31d: V196 = ISZERO V195
0x31e: V197 = 0x326
0x321: JUMPI 0x326 V196
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x322
[0x322:0x325]
---
Predecessors: [0x31b]
Successors: []
---
0x322 PUSH1 0x0
0x324 DUP1
0x325 REVERT
---
0x322: V198 = 0x0
0x325: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x326
[0x326:0x32d]
---
Predecessors: [0x31b]
Successors: [0x43b]
---
0x326 JUMPDEST
0x327 PUSH2 0x32e
0x32a PUSH2 0x43b
0x32d JUMP
---
0x326: JUMPDEST 
0x327: V199 = 0x32e
0x32a: V200 = 0x43b
0x32d: JUMP 0x43b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x32e]
Exit stack: [V11, 0x32e]

================================

Block 0x32e
[0x32e:0x343]
---
Predecessors: [0x43b]
Successors: []
---
0x32e JUMPDEST
0x32f PUSH1 0x40
0x331 MLOAD
0x332 DUP1
0x333 DUP3
0x334 DUP2
0x335 MSTORE
0x336 PUSH1 0x20
0x338 ADD
0x339 SWAP2
0x33a POP
0x33b POP
0x33c PUSH1 0x40
0x33e MLOAD
0x33f DUP1
0x340 SWAP2
0x341 SUB
0x342 SWAP1
0x343 RETURN
---
0x32e: JUMPDEST 
0x32f: V201 = 0x40
0x331: V202 = M[0x40]
0x335: M[V202] = V256
0x336: V203 = 0x20
0x338: V204 = ADD 0x20 V202
0x33c: V205 = 0x40
0x33e: V206 = M[0x40]
0x341: V207 = SUB V204 V206
0x343: RETURN V206 V207
---
Entry stack: [V11, 0x32e, V256]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x32e]

================================

Block 0x344
[0x344:0x39b]
---
Predecessors: [0x262]
Successors: [0x39c, 0x3a0]
---
0x344 JUMPDEST
0x345 PUSH1 0x2
0x347 PUSH1 0x0
0x349 SWAP1
0x34a SLOAD
0x34b SWAP1
0x34c PUSH2 0x100
0x34f EXP
0x350 SWAP1
0x351 DIV
0x352 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x367 AND
0x368 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37d AND
0x37e CALLER
0x37f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x394 AND
0x395 EQ
0x396 ISZERO
0x397 ISZERO
0x398 PUSH2 0x3a0
0x39b JUMPI
---
0x344: JUMPDEST 
0x345: V208 = 0x2
0x347: V209 = 0x0
0x34a: V210 = S[0x2]
0x34c: V211 = 0x100
0x34f: V212 = EXP 0x100 0x0
0x351: V213 = DIV V210 0x1
0x352: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x367: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x368: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x37d: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x37e: V218 = CALLER
0x37f: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x394: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x395: V221 = EQ V220 V217
0x396: V222 = ISZERO V221
0x397: V223 = ISZERO V222
0x398: V224 = 0x3a0
0x39b: JUMPI 0x3a0 V223
---
Entry stack: [V11, 0x278, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x278, V151]

================================

Block 0x39c
[0x39c:0x39f]
---
Predecessors: [0x344]
Successors: []
---
0x39c PUSH1 0x0
0x39e DUP1
0x39f REVERT
---
0x39c: V225 = 0x0
0x39f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x278, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x278, V151]

================================

Block 0x3a0
[0x3a0:0x3a9]
---
Predecessors: [0x344]
Successors: [0x278]
---
0x3a0 JUMPDEST
0x3a1 DUP1
0x3a2 PUSH1 0x4
0x3a4 DUP2
0x3a5 SWAP1
0x3a6 SSTORE
0x3a7 POP
0x3a8 POP
0x3a9 JUMP
---
0x3a0: JUMPDEST 
0x3a2: V226 = 0x4
0x3a6: S[0x4] = V151
0x3a9: JUMP 0x278
---
Entry stack: [V11, 0x278, V151]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3aa
[0x3aa:0x3af]
---
Predecessors: [0x285]
Successors: [0x28d]
---
0x3aa JUMPDEST
0x3ab PUSH1 0x3
0x3ad SLOAD
0x3ae DUP2
0x3af JUMP
---
0x3aa: JUMPDEST 
0x3ab: V227 = 0x3
0x3ad: V228 = S[0x3]
0x3af: JUMP 0x28d
---
Entry stack: [V11, 0x28d]
Stack pops: 1
Stack additions: [S0, V228]
Exit stack: [V11, 0x28d, V228]

================================

Block 0x3b0
[0x3b0:0x3d4]
---
Predecessors: [0x2ae]
Successors: [0x2b6]
---
0x3b0 JUMPDEST
0x3b1 PUSH1 0x0
0x3b3 DUP1
0x3b4 SWAP1
0x3b5 SLOAD
0x3b6 SWAP1
0x3b7 PUSH2 0x100
0x3ba EXP
0x3bb SWAP1
0x3bc DIV
0x3bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d2 AND
0x3d3 DUP2
0x3d4 JUMP
---
0x3b0: JUMPDEST 
0x3b1: V229 = 0x0
0x3b5: V230 = S[0x0]
0x3b7: V231 = 0x100
0x3ba: V232 = EXP 0x100 0x0
0x3bc: V233 = DIV V230 0x1
0x3bd: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d2: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x3d4: JUMP 0x2b6
---
Entry stack: [V11, 0x2b6]
Stack pops: 1
Stack additions: [S0, V235]
Exit stack: [V11, 0x2b6, V235]

================================

Block 0x3d5
[0x3d5:0x42c]
---
Predecessors: [0x303]
Successors: [0x42d, 0x431]
---
0x3d5 JUMPDEST
0x3d6 PUSH1 0x2
0x3d8 PUSH1 0x0
0x3da SWAP1
0x3db SLOAD
0x3dc SWAP1
0x3dd PUSH2 0x100
0x3e0 EXP
0x3e1 SWAP1
0x3e2 DIV
0x3e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f8 AND
0x3f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40e AND
0x40f CALLER
0x410 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x425 AND
0x426 EQ
0x427 ISZERO
0x428 ISZERO
0x429 PUSH2 0x431
0x42c JUMPI
---
0x3d5: JUMPDEST 
0x3d6: V236 = 0x2
0x3d8: V237 = 0x0
0x3db: V238 = S[0x2]
0x3dd: V239 = 0x100
0x3e0: V240 = EXP 0x100 0x0
0x3e2: V241 = DIV V238 0x1
0x3e3: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x3f9: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x40e: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x40f: V246 = CALLER
0x410: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x425: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x426: V249 = EQ V248 V245
0x427: V250 = ISZERO V249
0x428: V251 = ISZERO V250
0x429: V252 = 0x431
0x42c: JUMPI 0x431 V251
---
Entry stack: [V11, 0x319, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x319, V191]

================================

Block 0x42d
[0x42d:0x430]
---
Predecessors: [0x3d5]
Successors: []
---
0x42d PUSH1 0x0
0x42f DUP1
0x430 REVERT
---
0x42d: V253 = 0x0
0x430: REVERT 0x0 0x0
---
Entry stack: [V11, 0x319, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x319, V191]

================================

Block 0x431
[0x431:0x43a]
---
Predecessors: [0x3d5]
Successors: [0x319]
---
0x431 JUMPDEST
0x432 DUP1
0x433 PUSH1 0x3
0x435 DUP2
0x436 SWAP1
0x437 SSTORE
0x438 POP
0x439 POP
0x43a JUMP
---
0x431: JUMPDEST 
0x433: V254 = 0x3
0x437: S[0x3] = V191
0x43a: JUMP 0x319
---
Entry stack: [V11, 0x319, V191]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x43b
[0x43b:0x440]
---
Predecessors: [0x326]
Successors: [0x32e]
---
0x43b JUMPDEST
0x43c PUSH1 0x4
0x43e SLOAD
0x43f DUP2
0x440 JUMP
---
0x43b: JUMPDEST 
0x43c: V255 = 0x4
0x43e: V256 = S[0x4]
0x440: JUMP 0x32e
---
Entry stack: [V11, 0x32e]
Stack pops: 1
Stack additions: [S0, V256]
Exit stack: [V11, 0x32e, V256]

================================

Block 0x441
[0x441:0x46d]
---
Predecessors: []
Successors: []
---
0x441 STOP
0x442 LOG1
0x443 PUSH6 0x627a7a723058
0x44a SHA3
0x44b MISSING 0xe7
0x44c MULMOD
0x44d PUSH32 0x4f16762ee571eeaf987c93df88b5a62e88a3082f378166665244dc20480029
---
0x441: STOP 
0x442: LOG S0 S1 S2
0x443: V257 = 0x627a7a723058
0x44a: V258 = SHA3 0x627a7a723058 S3
0x44b: MISSING 0xe7
0x44c: V259 = MULMOD S0 S1 S2
0x44d: V260 = 0x4f16762ee571eeaf987c93df88b5a62e88a3082f378166665244dc20480029
---
Entry stack: []
Stack pops: 0
Stack additions: [V258, 0x4f16762ee571eeaf987c93df88b5a62e88a3082f378166665244dc20480029, V259]
Exit stack: []

================================

Function 0:
Public function signature: 0x2458b87
Entry block: 0x257
Exit block: 0x278
Body: 0x257, 0x25e, 0x262, 0x278, 0x344, 0x39c, 0x3a0

Function 1:
Public function signature: 0xb97bc86
Entry block: 0x27a
Exit block: 0x28d
Body: 0x27a, 0x281, 0x285, 0x28d, 0x3aa

Function 2:
Public function signature: 0x6e66f6e9
Entry block: 0x2a3
Exit block: 0x2b6
Body: 0x2a3, 0x2aa, 0x2ae, 0x2b6, 0x3b0

Function 3:
Public function signature: 0xb7678174
Entry block: 0x2f8
Exit block: 0x319
Body: 0x2f8, 0x2ff, 0x303, 0x319, 0x3d5, 0x42d, 0x431

Function 4:
Public function signature: 0xc24a0f8b
Entry block: 0x31b
Exit block: 0x32e
Body: 0x31b, 0x322, 0x326, 0x32e, 0x43b

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x254
Body: 0x6d, 0x79, 0x7d, 0x89, 0x8d, 0x99, 0x9d, 0x162, 0x166, 0x173, 0x177, 0x250, 0x254

