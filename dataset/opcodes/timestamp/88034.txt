Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x106]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x106
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x106
0xc: JUMPI 0x106 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x113]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2d05d3f
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x113
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2d05d3f
0x3b: V13 = EQ V11 0x2d05d3f
0x3c: V14 = 0x113
0x3f: JUMPI 0x113 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x144]
---
0x40 DUP1
0x41 PUSH4 0x36c28ea4
0x46 EQ
0x47 PUSH2 0x144
0x4a JUMPI
---
0x41: V15 = 0x36c28ea4
0x46: V16 = EQ 0x36c28ea4 V11
0x47: V17 = 0x144
0x4a: JUMPI 0x144 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x159]
---
0x4b DUP1
0x4c PUSH4 0x38771242
0x51 EQ
0x52 PUSH2 0x159
0x55 JUMPI
---
0x4c: V18 = 0x38771242
0x51: V19 = EQ 0x38771242 V11
0x52: V20 = 0x159
0x55: JUMPI 0x159 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x180]
---
0x56 DUP1
0x57 PUSH4 0x4c801cee
0x5c EQ
0x5d PUSH2 0x180
0x60 JUMPI
---
0x57: V21 = 0x4c801cee
0x5c: V22 = EQ 0x4c801cee V11
0x5d: V23 = 0x180
0x60: JUMPI 0x180 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1a1]
---
0x61 DUP1
0x62 PUSH4 0x54fd4d50
0x67 EQ
0x68 PUSH2 0x1a1
0x6b JUMPI
---
0x62: V24 = 0x54fd4d50
0x67: V25 = EQ 0x54fd4d50 V11
0x68: V26 = 0x1a1
0x6b: JUMPI 0x1a1 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x22b]
---
0x6c DUP1
0x6d PUSH4 0x6e66f6e9
0x72 EQ
0x73 PUSH2 0x22b
0x76 JUMPI
---
0x6d: V27 = 0x6e66f6e9
0x72: V28 = EQ 0x6e66f6e9 V11
0x73: V29 = 0x22b
0x76: JUMPI 0x22b V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x240]
---
0x77 DUP1
0x78 PUSH4 0x8418cd99
0x7d EQ
0x7e PUSH2 0x240
0x81 JUMPI
---
0x78: V30 = 0x8418cd99
0x7d: V31 = EQ 0x8418cd99 V11
0x7e: V32 = 0x240
0x81: JUMPI 0x240 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x257]
---
0x82 DUP1
0x83 PUSH4 0x86f32586
0x88 EQ
0x89 PUSH2 0x257
0x8c JUMPI
---
0x83: V33 = 0x86f32586
0x88: V34 = EQ 0x86f32586 V11
0x89: V35 = 0x257
0x8c: JUMPI 0x257 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x26c]
---
0x8d DUP1
0x8e PUSH4 0x91b7f5ed
0x93 EQ
0x94 PUSH2 0x26c
0x97 JUMPI
---
0x8e: V36 = 0x91b7f5ed
0x93: V37 = EQ 0x91b7f5ed V11
0x94: V38 = 0x26c
0x97: JUMPI 0x26c V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x284]
---
0x98 DUP1
0x99 PUSH4 0x9a9e3fd8
0x9e EQ
0x9f PUSH2 0x284
0xa2 JUMPI
---
0x99: V39 = 0x9a9e3fd8
0x9e: V40 = EQ 0x9a9e3fd8 V11
0x9f: V41 = 0x284
0xa2: JUMPI 0x284 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x299]
---
0xa3 DUP1
0xa4 PUSH4 0xbc05529b
0xa9 EQ
0xaa PUSH2 0x299
0xad JUMPI
---
0xa4: V42 = 0xbc05529b
0xa9: V43 = EQ 0xbc05529b V11
0xaa: V44 = 0x299
0xad: JUMPI 0x299 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x2ae]
---
0xae DUP1
0xaf PUSH4 0xc19d93fb
0xb4 EQ
0xb5 PUSH2 0x2ae
0xb8 JUMPI
---
0xaf: V45 = 0xc19d93fb
0xb4: V46 = EQ 0xc19d93fb V11
0xb5: V47 = 0x2ae
0xb8: JUMPI 0x2ae V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x2e7]
---
0xb9 DUP1
0xba PUSH4 0xc1a4a4f8
0xbf EQ
0xc0 PUSH2 0x2e7
0xc3 JUMPI
---
0xba: V48 = 0xc1a4a4f8
0xbf: V49 = EQ 0xc1a4a4f8 V11
0xc0: V50 = 0x2e7
0xc3: JUMPI 0x2e7 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x2fc]
---
0xc4 DUP1
0xc5 PUSH4 0xc5c4744c
0xca EQ
0xcb PUSH2 0x2fc
0xce JUMPI
---
0xc5: V51 = 0xc5c4744c
0xca: V52 = EQ 0xc5c4744c V11
0xcb: V53 = 0x2fc
0xce: JUMPI 0x2fc V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x311]
---
0xcf DUP1
0xd0 PUSH4 0xc9c80a56
0xd5 EQ
0xd6 PUSH2 0x311
0xd9 JUMPI
---
0xd0: V54 = 0xc9c80a56
0xd5: V55 = EQ 0xc9c80a56 V11
0xd6: V56 = 0x311
0xd9: JUMPI 0x311 V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0xcf]
Successors: [0xe5, 0x338]
---
0xda DUP1
0xdb PUSH4 0xcad107c0
0xe0 EQ
0xe1 PUSH2 0x338
0xe4 JUMPI
---
0xdb: V57 = 0xcad107c0
0xe0: V58 = EQ 0xcad107c0 V11
0xe1: V59 = 0x338
0xe4: JUMPI 0x338 V58
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xef]
---
Predecessors: [0xda]
Successors: [0xf0, 0x34d]
---
0xe5 DUP1
0xe6 PUSH4 0xd41b6db6
0xeb EQ
0xec PUSH2 0x34d
0xef JUMPI
---
0xe6: V60 = 0xd41b6db6
0xeb: V61 = EQ 0xd41b6db6 V11
0xec: V62 = 0x34d
0xef: JUMPI 0x34d V61
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xf0
[0xf0:0xfa]
---
Predecessors: [0xe5]
Successors: [0xfb, 0x384]
---
0xf0 DUP1
0xf1 PUSH4 0xd979f5aa
0xf6 EQ
0xf7 PUSH2 0x384
0xfa JUMPI
---
0xf1: V63 = 0xd979f5aa
0xf6: V64 = EQ 0xd979f5aa V11
0xf7: V65 = 0x384
0xfa: JUMPI 0x384 V64
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xfb
[0xfb:0x105]
---
Predecessors: [0xf0]
Successors: [0x106, 0x3a5]
---
0xfb DUP1
0xfc PUSH4 0xefca2eed
0x101 EQ
0x102 PUSH2 0x3a5
0x105 JUMPI
---
0xfc: V66 = 0xefca2eed
0x101: V67 = EQ 0xefca2eed V11
0x102: V68 = 0x3a5
0x105: JUMPI 0x3a5 V67
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x106
[0x106:0x110]
---
Predecessors: [0x0, 0xfb]
Successors: [0x3ba]
---
0x106 JUMPDEST
0x107 PUSH2 0x111
0x10a PUSH1 0x0
0x10c DUP1
0x10d PUSH2 0x3ba
0x110 JUMP
---
0x106: JUMPDEST 
0x107: V69 = 0x111
0x10a: V70 = 0x0
0x10d: V71 = 0x3ba
0x110: JUMP 0x3ba
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x111, 0x0, 0x0]
Exit stack: [V11, 0x111, 0x0, 0x0]

================================

Block 0x111
[0x111:0x112]
---
Predecessors: [0x61a, 0x78f, 0x8a7, 0x8cb, 0xa88, 0xb16, 0xbb7]
Successors: []
---
0x111 JUMPDEST
0x112 STOP
---
0x111: JUMPDEST 
0x112: STOP 
---
Entry stack: [S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x113
[0x113:0x11a]
---
Predecessors: [0xd]
Successors: [0x11b, 0x11f]
---
0x113 JUMPDEST
0x114 CALLVALUE
0x115 DUP1
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x113: JUMPDEST 
0x114: V72 = CALLVALUE
0x116: V73 = ISZERO V72
0x117: V74 = 0x11f
0x11a: JUMPI 0x11f V73
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V72]
Exit stack: [V11, V72]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x113]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V75 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V11, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V72]

================================

Block 0x11f
[0x11f:0x127]
---
Predecessors: [0x113]
Successors: [0x622]
---
0x11f JUMPDEST
0x120 POP
0x121 PUSH2 0x128
0x124 PUSH2 0x622
0x127 JUMP
---
0x11f: JUMPDEST 
0x121: V76 = 0x128
0x124: V77 = 0x622
0x127: JUMP 0x622
---
Entry stack: [V11, V72]
Stack pops: 1
Stack additions: [0x128]
Exit stack: [V11, 0x128]

================================

Block 0x128
[0x128:0x143]
---
Predecessors: [0x622, 0x631, 0x826]
Successors: []
---
0x128 JUMPDEST
0x129 PUSH1 0x40
0x12b DUP1
0x12c MLOAD
0x12d PUSH1 0x1
0x12f PUSH1 0xa0
0x131 PUSH1 0x2
0x133 EXP
0x134 SUB
0x135 SWAP1
0x136 SWAP3
0x137 AND
0x138 DUP3
0x139 MSTORE
0x13a MLOAD
0x13b SWAP1
0x13c DUP2
0x13d SWAP1
0x13e SUB
0x13f PUSH1 0x20
0x141 ADD
0x142 SWAP1
0x143 RETURN
---
0x128: JUMPDEST 
0x129: V78 = 0x40
0x12c: V79 = M[0x40]
0x12d: V80 = 0x1
0x12f: V81 = 0xa0
0x131: V82 = 0x2
0x133: V83 = EXP 0x2 0xa0
0x134: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0x137: V85 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x139: M[V79] = V85
0x13a: V86 = M[0x40]
0x13e: V87 = SUB V79 V86
0x13f: V88 = 0x20
0x141: V89 = ADD 0x20 V87
0x143: RETURN V86 V89
---
Entry stack: [V11, 0x128, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x128]

================================

Block 0x144
[0x144:0x14b]
---
Predecessors: [0x40]
Successors: [0x14c, 0x150]
---
0x144 JUMPDEST
0x145 CALLVALUE
0x146 DUP1
0x147 ISZERO
0x148 PUSH2 0x150
0x14b JUMPI
---
0x144: JUMPDEST 
0x145: V90 = CALLVALUE
0x147: V91 = ISZERO V90
0x148: V92 = 0x150
0x14b: JUMPI 0x150 V91
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V90]
Exit stack: [V11, V90]

================================

Block 0x14c
[0x14c:0x14f]
---
Predecessors: [0x144]
Successors: []
---
0x14c PUSH1 0x0
0x14e DUP1
0x14f REVERT
---
0x14c: V93 = 0x0
0x14f: REVERT 0x0 0x0
---
Entry stack: [V11, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V90]

================================

Block 0x150
[0x150:0x158]
---
Predecessors: [0x144]
Successors: [0x631]
---
0x150 JUMPDEST
0x151 POP
0x152 PUSH2 0x128
0x155 PUSH2 0x631
0x158 JUMP
---
0x150: JUMPDEST 
0x152: V94 = 0x128
0x155: V95 = 0x631
0x158: JUMP 0x631
---
Entry stack: [V11, V90]
Stack pops: 1
Stack additions: [0x128]
Exit stack: [V11, 0x128]

================================

Block 0x159
[0x159:0x160]
---
Predecessors: [0x4b]
Successors: [0x161, 0x165]
---
0x159 JUMPDEST
0x15a CALLVALUE
0x15b DUP1
0x15c ISZERO
0x15d PUSH2 0x165
0x160 JUMPI
---
0x159: JUMPDEST 
0x15a: V96 = CALLVALUE
0x15c: V97 = ISZERO V96
0x15d: V98 = 0x165
0x160: JUMPI 0x165 V97
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V96]
Exit stack: [V11, V96]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x159]
Successors: []
---
0x161 PUSH1 0x0
0x163 DUP1
0x164 REVERT
---
0x161: V99 = 0x0
0x164: REVERT 0x0 0x0
---
Entry stack: [V11, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V96]

================================

Block 0x165
[0x165:0x16d]
---
Predecessors: [0x159]
Successors: [0x640]
---
0x165 JUMPDEST
0x166 POP
0x167 PUSH2 0x16e
0x16a PUSH2 0x640
0x16d JUMP
---
0x165: JUMPDEST 
0x167: V100 = 0x16e
0x16a: V101 = 0x640
0x16d: JUMP 0x640
---
Entry stack: [V11, V96]
Stack pops: 1
Stack additions: [0x16e]
Exit stack: [V11, 0x16e]

================================

Block 0x16e
[0x16e:0x17f]
---
Predecessors: [0x640, 0xac4, 0xad3, 0xad9, 0xb7a, 0xbe7]
Successors: []
---
0x16e JUMPDEST
0x16f PUSH1 0x40
0x171 DUP1
0x172 MLOAD
0x173 SWAP2
0x174 DUP3
0x175 MSTORE
0x176 MLOAD
0x177 SWAP1
0x178 DUP2
0x179 SWAP1
0x17a SUB
0x17b PUSH1 0x20
0x17d ADD
0x17e SWAP1
0x17f RETURN
---
0x16e: JUMPDEST 
0x16f: V102 = 0x40
0x172: V103 = M[0x40]
0x175: M[V103] = S0
0x176: V104 = M[0x40]
0x17a: V105 = SUB V103 V104
0x17b: V106 = 0x20
0x17d: V107 = ADD 0x20 V105
0x17f: RETURN V104 V107
---
Entry stack: [V11, 0x16e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x16e]

================================

Block 0x180
[0x180:0x187]
---
Predecessors: [0x56]
Successors: [0x188, 0x18c]
---
0x180 JUMPDEST
0x181 CALLVALUE
0x182 DUP1
0x183 ISZERO
0x184 PUSH2 0x18c
0x187 JUMPI
---
0x180: JUMPDEST 
0x181: V108 = CALLVALUE
0x183: V109 = ISZERO V108
0x184: V110 = 0x18c
0x187: JUMPI 0x18c V109
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V108]
Exit stack: [V11, V108]

================================

Block 0x188
[0x188:0x18b]
---
Predecessors: [0x180]
Successors: []
---
0x188 PUSH1 0x0
0x18a DUP1
0x18b REVERT
---
0x188: V111 = 0x0
0x18b: REVERT 0x0 0x0
---
Entry stack: [V11, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V108]

================================

Block 0x18c
[0x18c:0x1a0]
---
Predecessors: [0x180]
Successors: [0x646]
---
0x18c JUMPDEST
0x18d POP
0x18e PUSH2 0x111
0x191 PUSH1 0x1
0x193 PUSH1 0xa0
0x195 PUSH1 0x2
0x197 EXP
0x198 SUB
0x199 PUSH1 0x4
0x19b CALLDATALOAD
0x19c AND
0x19d PUSH2 0x646
0x1a0 JUMP
---
0x18c: JUMPDEST 
0x18e: V112 = 0x111
0x191: V113 = 0x1
0x193: V114 = 0xa0
0x195: V115 = 0x2
0x197: V116 = EXP 0x2 0xa0
0x198: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x199: V118 = 0x4
0x19b: V119 = CALLDATALOAD 0x4
0x19c: V120 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x19d: V121 = 0x646
0x1a0: JUMP 0x646
---
Entry stack: [V11, V108]
Stack pops: 1
Stack additions: [0x111, V120]
Exit stack: [V11, 0x111, V120]

================================

Block 0x1a1
[0x1a1:0x1a8]
---
Predecessors: [0x61]
Successors: [0x1a9, 0x1ad]
---
0x1a1 JUMPDEST
0x1a2 CALLVALUE
0x1a3 DUP1
0x1a4 ISZERO
0x1a5 PUSH2 0x1ad
0x1a8 JUMPI
---
0x1a1: JUMPDEST 
0x1a2: V122 = CALLVALUE
0x1a4: V123 = ISZERO V122
0x1a5: V124 = 0x1ad
0x1a8: JUMPI 0x1ad V123
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V122]
Exit stack: [V11, V122]

================================

Block 0x1a9
[0x1a9:0x1ac]
---
Predecessors: [0x1a1]
Successors: []
---
0x1a9 PUSH1 0x0
0x1ab DUP1
0x1ac REVERT
---
0x1a9: V125 = 0x0
0x1ac: REVERT 0x0 0x0
---
Entry stack: [V11, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V122]

================================

Block 0x1ad
[0x1ad:0x1b5]
---
Predecessors: [0x1a1]
Successors: [0x798]
---
0x1ad JUMPDEST
0x1ae POP
0x1af PUSH2 0x1b6
0x1b2 PUSH2 0x798
0x1b5 JUMP
---
0x1ad: JUMPDEST 
0x1af: V126 = 0x1b6
0x1b2: V127 = 0x798
0x1b5: JUMP 0x798
---
Entry stack: [V11, V122]
Stack pops: 1
Stack additions: [0x1b6]
Exit stack: [V11, 0x1b6]

================================

Block 0x1b6
[0x1b6:0x1d7]
---
Predecessors: [0x81e]
Successors: [0x1d8]
---
0x1b6 JUMPDEST
0x1b7 PUSH1 0x40
0x1b9 DUP1
0x1ba MLOAD
0x1bb PUSH1 0x20
0x1bd DUP1
0x1be DUP3
0x1bf MSTORE
0x1c0 DUP4
0x1c1 MLOAD
0x1c2 DUP2
0x1c3 DUP4
0x1c4 ADD
0x1c5 MSTORE
0x1c6 DUP4
0x1c7 MLOAD
0x1c8 SWAP2
0x1c9 SWAP3
0x1ca DUP4
0x1cb SWAP3
0x1cc SWAP1
0x1cd DUP4
0x1ce ADD
0x1cf SWAP2
0x1d0 DUP6
0x1d1 ADD
0x1d2 SWAP1
0x1d3 DUP1
0x1d4 DUP4
0x1d5 DUP4
0x1d6 PUSH1 0x0
---
0x1b6: JUMPDEST 
0x1b7: V128 = 0x40
0x1ba: V129 = M[0x40]
0x1bb: V130 = 0x20
0x1bf: M[V129] = 0x20
0x1c1: V131 = M[V605]
0x1c4: V132 = ADD V129 0x20
0x1c5: M[V132] = V131
0x1c7: V133 = M[V605]
0x1ce: V134 = ADD V129 0x40
0x1d1: V135 = ADD V605 0x20
0x1d6: V136 = 0x0
---
Entry stack: [V11, 0x1b6, V605]
Stack pops: 1
Stack additions: [S0, V129, V129, V134, V135, V133, V133, V134, V135, 0x0]
Exit stack: [V11, 0x1b6, V605, V129, V129, V134, V135, V133, V133, V134, V135, 0x0]

================================

Block 0x1d8
[0x1d8:0x1e0]
---
Predecessors: [0x1b6, 0x1e1]
Successors: [0x1e1, 0x1f0]
---
0x1d8 JUMPDEST
0x1d9 DUP4
0x1da DUP2
0x1db LT
0x1dc ISZERO
0x1dd PUSH2 0x1f0
0x1e0 JUMPI
---
0x1d8: JUMPDEST 
0x1db: V137 = LT S0 V133
0x1dc: V138 = ISZERO V137
0x1dd: V139 = 0x1f0
0x1e0: JUMPI 0x1f0 V138
---
Entry stack: [V11, 0x1b6, V605, V129, V129, V134, V135, V133, V133, V134, V135, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x1b6, V605, V129, V129, V134, V135, V133, V133, V134, V135, S0]

================================

Block 0x1e1
[0x1e1:0x1ef]
---
Predecessors: [0x1d8]
Successors: [0x1d8]
---
0x1e1 DUP2
0x1e2 DUP2
0x1e3 ADD
0x1e4 MLOAD
0x1e5 DUP4
0x1e6 DUP3
0x1e7 ADD
0x1e8 MSTORE
0x1e9 PUSH1 0x20
0x1eb ADD
0x1ec PUSH2 0x1d8
0x1ef JUMP
---
0x1e3: V140 = ADD S0 V135
0x1e4: V141 = M[V140]
0x1e7: V142 = ADD S0 V134
0x1e8: M[V142] = V141
0x1e9: V143 = 0x20
0x1eb: V144 = ADD 0x20 S0
0x1ec: V145 = 0x1d8
0x1ef: JUMP 0x1d8
---
Entry stack: [V11, 0x1b6, V605, V129, V129, V134, V135, V133, V133, V134, V135, S0]
Stack pops: 3
Stack additions: [S2, S1, V144]
Exit stack: [V11, 0x1b6, V605, V129, V129, V134, V135, V133, V133, V134, V135, V144]

================================

Block 0x1f0
[0x1f0:0x203]
---
Predecessors: [0x1d8]
Successors: [0x204, 0x21d]
---
0x1f0 JUMPDEST
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 SWAP1
0x1f6 POP
0x1f7 SWAP1
0x1f8 DUP2
0x1f9 ADD
0x1fa SWAP1
0x1fb PUSH1 0x1f
0x1fd AND
0x1fe DUP1
0x1ff ISZERO
0x200 PUSH2 0x21d
0x203 JUMPI
---
0x1f0: JUMPDEST 
0x1f9: V146 = ADD V133 V134
0x1fb: V147 = 0x1f
0x1fd: V148 = AND 0x1f V133
0x1ff: V149 = ISZERO V148
0x200: V150 = 0x21d
0x203: JUMPI 0x21d V149
---
Entry stack: [V11, 0x1b6, V605, V129, V129, V134, V135, V133, V133, V134, V135, S0]
Stack pops: 7
Stack additions: [V146, V148]
Exit stack: [V11, 0x1b6, V605, V129, V129, V146, V148]

================================

Block 0x204
[0x204:0x21c]
---
Predecessors: [0x1f0]
Successors: [0x21d]
---
0x204 DUP1
0x205 DUP3
0x206 SUB
0x207 DUP1
0x208 MLOAD
0x209 PUSH1 0x1
0x20b DUP4
0x20c PUSH1 0x20
0x20e SUB
0x20f PUSH2 0x100
0x212 EXP
0x213 SUB
0x214 NOT
0x215 AND
0x216 DUP2
0x217 MSTORE
0x218 PUSH1 0x20
0x21a ADD
0x21b SWAP2
0x21c POP
---
0x206: V151 = SUB V146 V148
0x208: V152 = M[V151]
0x209: V153 = 0x1
0x20c: V154 = 0x20
0x20e: V155 = SUB 0x20 V148
0x20f: V156 = 0x100
0x212: V157 = EXP 0x100 V155
0x213: V158 = SUB V157 0x1
0x214: V159 = NOT V158
0x215: V160 = AND V159 V152
0x217: M[V151] = V160
0x218: V161 = 0x20
0x21a: V162 = ADD 0x20 V151
---
Entry stack: [V11, 0x1b6, V605, V129, V129, V146, V148]
Stack pops: 2
Stack additions: [V162, S0]
Exit stack: [V11, 0x1b6, V605, V129, V129, V162, V148]

================================

Block 0x21d
[0x21d:0x22a]
---
Predecessors: [0x1f0, 0x204]
Successors: []
---
0x21d JUMPDEST
0x21e POP
0x21f SWAP3
0x220 POP
0x221 POP
0x222 POP
0x223 PUSH1 0x40
0x225 MLOAD
0x226 DUP1
0x227 SWAP2
0x228 SUB
0x229 SWAP1
0x22a RETURN
---
0x21d: JUMPDEST 
0x223: V163 = 0x40
0x225: V164 = M[0x40]
0x228: V165 = SUB S1 V164
0x22a: RETURN V164 V165
---
Entry stack: [V11, 0x1b6, V605, V129, V129, S1, V148]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x1b6]

================================

Block 0x22b
[0x22b:0x232]
---
Predecessors: [0x6c]
Successors: [0x233, 0x237]
---
0x22b JUMPDEST
0x22c CALLVALUE
0x22d DUP1
0x22e ISZERO
0x22f PUSH2 0x237
0x232 JUMPI
---
0x22b: JUMPDEST 
0x22c: V166 = CALLVALUE
0x22e: V167 = ISZERO V166
0x22f: V168 = 0x237
0x232: JUMPI 0x237 V167
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V166]
Exit stack: [V11, V166]

================================

Block 0x233
[0x233:0x236]
---
Predecessors: [0x22b]
Successors: []
---
0x233 PUSH1 0x0
0x235 DUP1
0x236 REVERT
---
0x233: V169 = 0x0
0x236: REVERT 0x0 0x0
---
Entry stack: [V11, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V166]

================================

Block 0x237
[0x237:0x23f]
---
Predecessors: [0x22b]
Successors: [0x826]
---
0x237 JUMPDEST
0x238 POP
0x239 PUSH2 0x128
0x23c PUSH2 0x826
0x23f JUMP
---
0x237: JUMPDEST 
0x239: V170 = 0x128
0x23c: V171 = 0x826
0x23f: JUMP 0x826
---
Entry stack: [V11, V166]
Stack pops: 1
Stack additions: [0x128]
Exit stack: [V11, 0x128]

================================

Block 0x240
[0x240:0x256]
---
Predecessors: [0x77]
Successors: [0x3ba]
---
0x240 JUMPDEST
0x241 PUSH2 0x111
0x244 PUSH1 0x1
0x246 PUSH1 0xa0
0x248 PUSH1 0x2
0x24a EXP
0x24b SUB
0x24c PUSH1 0x4
0x24e CALLDATALOAD
0x24f AND
0x250 PUSH1 0x24
0x252 CALLDATALOAD
0x253 PUSH2 0x3ba
0x256 JUMP
---
0x240: JUMPDEST 
0x241: V172 = 0x111
0x244: V173 = 0x1
0x246: V174 = 0xa0
0x248: V175 = 0x2
0x24a: V176 = EXP 0x2 0xa0
0x24b: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24c: V178 = 0x4
0x24e: V179 = CALLDATALOAD 0x4
0x24f: V180 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0x250: V181 = 0x24
0x252: V182 = CALLDATALOAD 0x24
0x253: V183 = 0x3ba
0x256: JUMP 0x3ba
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x111, V180, V182]
Exit stack: [V11, 0x111, V180, V182]

================================

Block 0x257
[0x257:0x25e]
---
Predecessors: [0x82]
Successors: [0x25f, 0x263]
---
0x257 JUMPDEST
0x258 CALLVALUE
0x259 DUP1
0x25a ISZERO
0x25b PUSH2 0x263
0x25e JUMPI
---
0x257: JUMPDEST 
0x258: V184 = CALLVALUE
0x25a: V185 = ISZERO V184
0x25b: V186 = 0x263
0x25e: JUMPI 0x263 V185
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V184]
Exit stack: [V11, V184]

================================

Block 0x25f
[0x25f:0x262]
---
Predecessors: [0x257]
Successors: []
---
0x25f PUSH1 0x0
0x261 DUP1
0x262 REVERT
---
0x25f: V187 = 0x0
0x262: REVERT 0x0 0x0
---
Entry stack: [V11, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V184]

================================

Block 0x263
[0x263:0x26b]
---
Predecessors: [0x257]
Successors: [0x835]
---
0x263 JUMPDEST
0x264 POP
0x265 PUSH2 0x111
0x268 PUSH2 0x835
0x26b JUMP
---
0x263: JUMPDEST 
0x265: V188 = 0x111
0x268: V189 = 0x835
0x26b: JUMP 0x835
---
Entry stack: [V11, V184]
Stack pops: 1
Stack additions: [0x111]
Exit stack: [V11, 0x111]

================================

Block 0x26c
[0x26c:0x273]
---
Predecessors: [0x8d]
Successors: [0x274, 0x278]
---
0x26c JUMPDEST
0x26d CALLVALUE
0x26e DUP1
0x26f ISZERO
0x270 PUSH2 0x278
0x273 JUMPI
---
0x26c: JUMPDEST 
0x26d: V190 = CALLVALUE
0x26f: V191 = ISZERO V190
0x270: V192 = 0x278
0x273: JUMPI 0x278 V191
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V190]
Exit stack: [V11, V190]

================================

Block 0x274
[0x274:0x277]
---
Predecessors: [0x26c]
Successors: []
---
0x274 PUSH1 0x0
0x276 DUP1
0x277 REVERT
---
0x274: V193 = 0x0
0x277: REVERT 0x0 0x0
---
Entry stack: [V11, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V190]

================================

Block 0x278
[0x278:0x283]
---
Predecessors: [0x26c]
Successors: [0x8a9]
---
0x278 JUMPDEST
0x279 POP
0x27a PUSH2 0x111
0x27d PUSH1 0x4
0x27f CALLDATALOAD
0x280 PUSH2 0x8a9
0x283 JUMP
---
0x278: JUMPDEST 
0x27a: V194 = 0x111
0x27d: V195 = 0x4
0x27f: V196 = CALLDATALOAD 0x4
0x280: V197 = 0x8a9
0x283: JUMP 0x8a9
---
Entry stack: [V11, V190]
Stack pops: 1
Stack additions: [0x111, V196]
Exit stack: [V11, 0x111, V196]

================================

Block 0x284
[0x284:0x28b]
---
Predecessors: [0x98]
Successors: [0x28c, 0x290]
---
0x284 JUMPDEST
0x285 CALLVALUE
0x286 DUP1
0x287 ISZERO
0x288 PUSH2 0x290
0x28b JUMPI
---
0x284: JUMPDEST 
0x285: V198 = CALLVALUE
0x287: V199 = ISZERO V198
0x288: V200 = 0x290
0x28b: JUMPI 0x290 V199
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V198]
Exit stack: [V11, V198]

================================

Block 0x28c
[0x28c:0x28f]
---
Predecessors: [0x284]
Successors: []
---
0x28c PUSH1 0x0
0x28e DUP1
0x28f REVERT
---
0x28c: V201 = 0x0
0x28f: REVERT 0x0 0x0
---
Entry stack: [V11, V198]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V198]

================================

Block 0x290
[0x290:0x298]
---
Predecessors: [0x284]
Successors: [0x8d1]
---
0x290 JUMPDEST
0x291 POP
0x292 PUSH2 0x111
0x295 PUSH2 0x8d1
0x298 JUMP
---
0x290: JUMPDEST 
0x292: V202 = 0x111
0x295: V203 = 0x8d1
0x298: JUMP 0x8d1
---
Entry stack: [V11, V198]
Stack pops: 1
Stack additions: [0x111]
Exit stack: [V11, 0x111]

================================

Block 0x299
[0x299:0x2a0]
---
Predecessors: [0xa3]
Successors: [0x2a1, 0x2a5]
---
0x299 JUMPDEST
0x29a CALLVALUE
0x29b DUP1
0x29c ISZERO
0x29d PUSH2 0x2a5
0x2a0 JUMPI
---
0x299: JUMPDEST 
0x29a: V204 = CALLVALUE
0x29c: V205 = ISZERO V204
0x29d: V206 = 0x2a5
0x2a0: JUMPI 0x2a5 V205
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V204]
Exit stack: [V11, V204]

================================

Block 0x2a1
[0x2a1:0x2a4]
---
Predecessors: [0x299]
Successors: []
---
0x2a1 PUSH1 0x0
0x2a3 DUP1
0x2a4 REVERT
---
0x2a1: V207 = 0x0
0x2a4: REVERT 0x0 0x0
---
Entry stack: [V11, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V204]

================================

Block 0x2a5
[0x2a5:0x2ad]
---
Predecessors: [0x299]
Successors: [0xac4]
---
0x2a5 JUMPDEST
0x2a6 POP
0x2a7 PUSH2 0x16e
0x2aa PUSH2 0xac4
0x2ad JUMP
---
0x2a5: JUMPDEST 
0x2a7: V208 = 0x16e
0x2aa: V209 = 0xac4
0x2ad: JUMP 0xac4
---
Entry stack: [V11, V204]
Stack pops: 1
Stack additions: [0x16e]
Exit stack: [V11, 0x16e]

================================

Block 0x2ae
[0x2ae:0x2b5]
---
Predecessors: [0xae]
Successors: [0x2b6, 0x2ba]
---
0x2ae JUMPDEST
0x2af CALLVALUE
0x2b0 DUP1
0x2b1 ISZERO
0x2b2 PUSH2 0x2ba
0x2b5 JUMPI
---
0x2ae: JUMPDEST 
0x2af: V210 = CALLVALUE
0x2b1: V211 = ISZERO V210
0x2b2: V212 = 0x2ba
0x2b5: JUMPI 0x2ba V211
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V210]
Exit stack: [V11, V210]

================================

Block 0x2b6
[0x2b6:0x2b9]
---
Predecessors: [0x2ae]
Successors: []
---
0x2b6 PUSH1 0x0
0x2b8 DUP1
0x2b9 REVERT
---
0x2b6: V213 = 0x0
0x2b9: REVERT 0x0 0x0
---
Entry stack: [V11, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V210]

================================

Block 0x2ba
[0x2ba:0x2c2]
---
Predecessors: [0x2ae]
Successors: [0xaca]
---
0x2ba JUMPDEST
0x2bb POP
0x2bc PUSH2 0x2c3
0x2bf PUSH2 0xaca
0x2c2 JUMP
---
0x2ba: JUMPDEST 
0x2bc: V214 = 0x2c3
0x2bf: V215 = 0xaca
0x2c2: JUMP 0xaca
---
Entry stack: [V11, V210]
Stack pops: 1
Stack additions: [0x2c3]
Exit stack: [V11, 0x2c3]

================================

Block 0x2c3
[0x2c3:0x2d1]
---
Predecessors: [0xaca]
Successors: [0x2d2, 0x2d3]
---
0x2c3 JUMPDEST
0x2c4 PUSH1 0x40
0x2c6 MLOAD
0x2c7 DUP1
0x2c8 DUP3
0x2c9 PUSH1 0x1
0x2cb DUP2
0x2cc GT
0x2cd ISZERO
0x2ce PUSH2 0x2d3
0x2d1 JUMPI
---
0x2c3: JUMPDEST 
0x2c4: V216 = 0x40
0x2c6: V217 = M[0x40]
0x2c9: V218 = 0x1
0x2cc: V219 = GT V862 0x1
0x2cd: V220 = ISZERO V219
0x2ce: V221 = 0x2d3
0x2d1: JUMPI 0x2d3 V220
---
Entry stack: [V11, 0x2c3, V862]
Stack pops: 1
Stack additions: [S0, V217, V217, S0]
Exit stack: [V11, 0x2c3, V862, V217, V217, V862]

================================

Block 0x2d2
[0x2d2:0x2d2]
---
Predecessors: [0x2c3]
Successors: []
---
0x2d2 INVALID
---
0x2d2: INVALID 
---
Entry stack: [V11, 0x2c3, V862, V217, V217, V862]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2c3, V862, V217, V217, V862]

================================

Block 0x2d3
[0x2d3:0x2e6]
---
Predecessors: [0x2c3]
Successors: []
---
0x2d3 JUMPDEST
0x2d4 PUSH1 0xff
0x2d6 AND
0x2d7 DUP2
0x2d8 MSTORE
0x2d9 PUSH1 0x20
0x2db ADD
0x2dc SWAP2
0x2dd POP
0x2de POP
0x2df PUSH1 0x40
0x2e1 MLOAD
0x2e2 DUP1
0x2e3 SWAP2
0x2e4 SUB
0x2e5 SWAP1
0x2e6 RETURN
---
0x2d3: JUMPDEST 
0x2d4: V222 = 0xff
0x2d6: V223 = AND 0xff V862
0x2d8: M[V217] = V223
0x2d9: V224 = 0x20
0x2db: V225 = ADD 0x20 V217
0x2df: V226 = 0x40
0x2e1: V227 = M[0x40]
0x2e4: V228 = SUB V225 V227
0x2e6: RETURN V227 V228
---
Entry stack: [V11, 0x2c3, V862, V217, V217, V862]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x2c3]

================================

Block 0x2e7
[0x2e7:0x2ee]
---
Predecessors: [0xb9]
Successors: [0x2ef, 0x2f3]
---
0x2e7 JUMPDEST
0x2e8 CALLVALUE
0x2e9 DUP1
0x2ea ISZERO
0x2eb PUSH2 0x2f3
0x2ee JUMPI
---
0x2e7: JUMPDEST 
0x2e8: V229 = CALLVALUE
0x2ea: V230 = ISZERO V229
0x2eb: V231 = 0x2f3
0x2ee: JUMPI 0x2f3 V230
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V229]
Exit stack: [V11, V229]

================================

Block 0x2ef
[0x2ef:0x2f2]
---
Predecessors: [0x2e7]
Successors: []
---
0x2ef PUSH1 0x0
0x2f1 DUP1
0x2f2 REVERT
---
0x2ef: V232 = 0x0
0x2f2: REVERT 0x0 0x0
---
Entry stack: [V11, V229]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V229]

================================

Block 0x2f3
[0x2f3:0x2fb]
---
Predecessors: [0x2e7]
Successors: [0xad3]
---
0x2f3 JUMPDEST
0x2f4 POP
0x2f5 PUSH2 0x16e
0x2f8 PUSH2 0xad3
0x2fb JUMP
---
0x2f3: JUMPDEST 
0x2f5: V233 = 0x16e
0x2f8: V234 = 0xad3
0x2fb: JUMP 0xad3
---
Entry stack: [V11, V229]
Stack pops: 1
Stack additions: [0x16e]
Exit stack: [V11, 0x16e]

================================

Block 0x2fc
[0x2fc:0x303]
---
Predecessors: [0xc4]
Successors: [0x304, 0x308]
---
0x2fc JUMPDEST
0x2fd CALLVALUE
0x2fe DUP1
0x2ff ISZERO
0x300 PUSH2 0x308
0x303 JUMPI
---
0x2fc: JUMPDEST 
0x2fd: V235 = CALLVALUE
0x2ff: V236 = ISZERO V235
0x300: V237 = 0x308
0x303: JUMPI 0x308 V236
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V235]
Exit stack: [V11, V235]

================================

Block 0x304
[0x304:0x307]
---
Predecessors: [0x2fc]
Successors: []
---
0x304 PUSH1 0x0
0x306 DUP1
0x307 REVERT
---
0x304: V238 = 0x0
0x307: REVERT 0x0 0x0
---
Entry stack: [V11, V235]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V235]

================================

Block 0x308
[0x308:0x310]
---
Predecessors: [0x2fc]
Successors: [0xad9]
---
0x308 JUMPDEST
0x309 POP
0x30a PUSH2 0x16e
0x30d PUSH2 0xad9
0x310 JUMP
---
0x308: JUMPDEST 
0x30a: V239 = 0x16e
0x30d: V240 = 0xad9
0x310: JUMP 0xad9
---
Entry stack: [V11, V235]
Stack pops: 1
Stack additions: [0x16e]
Exit stack: [V11, 0x16e]

================================

Block 0x311
[0x311:0x318]
---
Predecessors: [0xcf]
Successors: [0x319, 0x31d]
---
0x311 JUMPDEST
0x312 CALLVALUE
0x313 DUP1
0x314 ISZERO
0x315 PUSH2 0x31d
0x318 JUMPI
---
0x311: JUMPDEST 
0x312: V241 = CALLVALUE
0x314: V242 = ISZERO V241
0x315: V243 = 0x31d
0x318: JUMPI 0x31d V242
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V241]
Exit stack: [V11, V241]

================================

Block 0x319
[0x319:0x31c]
---
Predecessors: [0x311]
Successors: []
---
0x319 PUSH1 0x0
0x31b DUP1
0x31c REVERT
---
0x319: V244 = 0x0
0x31c: REVERT 0x0 0x0
---
Entry stack: [V11, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V241]

================================

Block 0x31d
[0x31d:0x337]
---
Predecessors: [0x311]
Successors: [0xadf]
---
0x31d JUMPDEST
0x31e POP
0x31f PUSH2 0x111
0x322 PUSH1 0x1
0x324 PUSH1 0xa0
0x326 PUSH1 0x2
0x328 EXP
0x329 SUB
0x32a PUSH1 0x4
0x32c CALLDATALOAD
0x32d AND
0x32e PUSH1 0xff
0x330 PUSH1 0x24
0x332 CALLDATALOAD
0x333 AND
0x334 PUSH2 0xadf
0x337 JUMP
---
0x31d: JUMPDEST 
0x31f: V245 = 0x111
0x322: V246 = 0x1
0x324: V247 = 0xa0
0x326: V248 = 0x2
0x328: V249 = EXP 0x2 0xa0
0x329: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32a: V251 = 0x4
0x32c: V252 = CALLDATALOAD 0x4
0x32d: V253 = AND V252 0xffffffffffffffffffffffffffffffffffffffff
0x32e: V254 = 0xff
0x330: V255 = 0x24
0x332: V256 = CALLDATALOAD 0x24
0x333: V257 = AND V256 0xff
0x334: V258 = 0xadf
0x337: JUMP 0xadf
---
Entry stack: [V11, V241]
Stack pops: 1
Stack additions: [0x111, V253, V257]
Exit stack: [V11, 0x111, V253, V257]

================================

Block 0x338
[0x338:0x33f]
---
Predecessors: [0xda]
Successors: [0x340, 0x344]
---
0x338 JUMPDEST
0x339 CALLVALUE
0x33a DUP1
0x33b ISZERO
0x33c PUSH2 0x344
0x33f JUMPI
---
0x338: JUMPDEST 
0x339: V259 = CALLVALUE
0x33b: V260 = ISZERO V259
0x33c: V261 = 0x344
0x33f: JUMPI 0x344 V260
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V259]
Exit stack: [V11, V259]

================================

Block 0x340
[0x340:0x343]
---
Predecessors: [0x338]
Successors: []
---
0x340 PUSH1 0x0
0x342 DUP1
0x343 REVERT
---
0x340: V262 = 0x0
0x343: REVERT 0x0 0x0
---
Entry stack: [V11, V259]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V259]

================================

Block 0x344
[0x344:0x34c]
---
Predecessors: [0x338]
Successors: [0xb7a]
---
0x344 JUMPDEST
0x345 POP
0x346 PUSH2 0x16e
0x349 PUSH2 0xb7a
0x34c JUMP
---
0x344: JUMPDEST 
0x346: V263 = 0x16e
0x349: V264 = 0xb7a
0x34c: JUMP 0xb7a
---
Entry stack: [V11, V259]
Stack pops: 1
Stack additions: [0x16e]
Exit stack: [V11, 0x16e]

================================

Block 0x34d
[0x34d:0x354]
---
Predecessors: [0xe5]
Successors: [0x355, 0x359]
---
0x34d JUMPDEST
0x34e CALLVALUE
0x34f DUP1
0x350 ISZERO
0x351 PUSH2 0x359
0x354 JUMPI
---
0x34d: JUMPDEST 
0x34e: V265 = CALLVALUE
0x350: V266 = ISZERO V265
0x351: V267 = 0x359
0x354: JUMPI 0x359 V266
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V265]
Exit stack: [V11, V265]

================================

Block 0x355
[0x355:0x358]
---
Predecessors: [0x34d]
Successors: []
---
0x355 PUSH1 0x0
0x357 DUP1
0x358 REVERT
---
0x355: V268 = 0x0
0x358: REVERT 0x0 0x0
---
Entry stack: [V11, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V265]

================================

Block 0x359
[0x359:0x36d]
---
Predecessors: [0x34d]
Successors: [0xb80]
---
0x359 JUMPDEST
0x35a POP
0x35b PUSH2 0x36e
0x35e PUSH1 0x1
0x360 PUSH1 0xa0
0x362 PUSH1 0x2
0x364 EXP
0x365 SUB
0x366 PUSH1 0x4
0x368 CALLDATALOAD
0x369 AND
0x36a PUSH2 0xb80
0x36d JUMP
---
0x359: JUMPDEST 
0x35b: V269 = 0x36e
0x35e: V270 = 0x1
0x360: V271 = 0xa0
0x362: V272 = 0x2
0x364: V273 = EXP 0x2 0xa0
0x365: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x366: V275 = 0x4
0x368: V276 = CALLDATALOAD 0x4
0x369: V277 = AND V276 0xffffffffffffffffffffffffffffffffffffffff
0x36a: V278 = 0xb80
0x36d: JUMP 0xb80
---
Entry stack: [V11, V265]
Stack pops: 1
Stack additions: [0x36e, V277]
Exit stack: [V11, 0x36e, V277]

================================

Block 0x36e
[0x36e:0x383]
---
Predecessors: [0xb80]
Successors: []
---
0x36e JUMPDEST
0x36f PUSH1 0x40
0x371 DUP1
0x372 MLOAD
0x373 PUSH1 0xff
0x375 SWAP1
0x376 SWAP3
0x377 AND
0x378 DUP3
0x379 MSTORE
0x37a MLOAD
0x37b SWAP1
0x37c DUP2
0x37d SWAP1
0x37e SUB
0x37f PUSH1 0x20
0x381 ADD
0x382 SWAP1
0x383 RETURN
---
0x36e: JUMPDEST 
0x36f: V279 = 0x40
0x372: V280 = M[0x40]
0x373: V281 = 0xff
0x377: V282 = AND V921 0xff
0x379: M[V280] = V282
0x37a: V283 = M[0x40]
0x37e: V284 = SUB V280 V283
0x37f: V285 = 0x20
0x381: V286 = ADD 0x20 V284
0x383: RETURN V283 V286
---
Entry stack: [V11, 0x36e, V921]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x36e]

================================

Block 0x384
[0x384:0x38b]
---
Predecessors: [0xf0]
Successors: [0x38c, 0x390]
---
0x384 JUMPDEST
0x385 CALLVALUE
0x386 DUP1
0x387 ISZERO
0x388 PUSH2 0x390
0x38b JUMPI
---
0x384: JUMPDEST 
0x385: V287 = CALLVALUE
0x387: V288 = ISZERO V287
0x388: V289 = 0x390
0x38b: JUMPI 0x390 V288
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V287]
Exit stack: [V11, V287]

================================

Block 0x38c
[0x38c:0x38f]
---
Predecessors: [0x384]
Successors: []
---
0x38c PUSH1 0x0
0x38e DUP1
0x38f REVERT
---
0x38c: V290 = 0x0
0x38f: REVERT 0x0 0x0
---
Entry stack: [V11, V287]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V287]

================================

Block 0x390
[0x390:0x3a4]
---
Predecessors: [0x384]
Successors: [0xb95]
---
0x390 JUMPDEST
0x391 POP
0x392 PUSH2 0x111
0x395 PUSH1 0x1
0x397 PUSH1 0xa0
0x399 PUSH1 0x2
0x39b EXP
0x39c SUB
0x39d PUSH1 0x4
0x39f CALLDATALOAD
0x3a0 AND
0x3a1 PUSH2 0xb95
0x3a4 JUMP
---
0x390: JUMPDEST 
0x392: V291 = 0x111
0x395: V292 = 0x1
0x397: V293 = 0xa0
0x399: V294 = 0x2
0x39b: V295 = EXP 0x2 0xa0
0x39c: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39d: V297 = 0x4
0x39f: V298 = CALLDATALOAD 0x4
0x3a0: V299 = AND V298 0xffffffffffffffffffffffffffffffffffffffff
0x3a1: V300 = 0xb95
0x3a4: JUMP 0xb95
---
Entry stack: [V11, V287]
Stack pops: 1
Stack additions: [0x111, V299]
Exit stack: [V11, 0x111, V299]

================================

Block 0x3a5
[0x3a5:0x3ac]
---
Predecessors: [0xfb]
Successors: [0x3ad, 0x3b1]
---
0x3a5 JUMPDEST
0x3a6 CALLVALUE
0x3a7 DUP1
0x3a8 ISZERO
0x3a9 PUSH2 0x3b1
0x3ac JUMPI
---
0x3a5: JUMPDEST 
0x3a6: V301 = CALLVALUE
0x3a8: V302 = ISZERO V301
0x3a9: V303 = 0x3b1
0x3ac: JUMPI 0x3b1 V302
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V301]
Exit stack: [V11, V301]

================================

Block 0x3ad
[0x3ad:0x3b0]
---
Predecessors: [0x3a5]
Successors: []
---
0x3ad PUSH1 0x0
0x3af DUP1
0x3b0 REVERT
---
0x3ad: V304 = 0x0
0x3b0: REVERT 0x0 0x0
---
Entry stack: [V11, V301]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V301]

================================

Block 0x3b1
[0x3b1:0x3b9]
---
Predecessors: [0x3a5]
Successors: [0xbe7]
---
0x3b1 JUMPDEST
0x3b2 POP
0x3b3 PUSH2 0x16e
0x3b6 PUSH2 0xbe7
0x3b9 JUMP
---
0x3b1: JUMPDEST 
0x3b3: V305 = 0x16e
0x3b6: V306 = 0xbe7
0x3b9: JUMP 0xbe7
---
Entry stack: [V11, V301]
Stack pops: 1
Stack additions: [0x16e]
Exit stack: [V11, 0x16e]

================================

Block 0x3ba
[0x3ba:0x3cf]
---
Predecessors: [0x106, 0x240]
Successors: [0x3d0, 0x3d1]
---
0x3ba JUMPDEST
0x3bb PUSH1 0x0
0x3bd DUP1
0x3be DUP1
0x3bf DUP1
0x3c0 PUSH1 0x1
0x3c2 DUP1
0x3c3 DUP1
0x3c4 SLOAD
0x3c5 PUSH1 0xff
0x3c7 AND
0x3c8 SWAP1
0x3c9 DUP2
0x3ca GT
0x3cb ISZERO
0x3cc PUSH2 0x3d1
0x3cf JUMPI
---
0x3ba: JUMPDEST 
0x3bb: V307 = 0x0
0x3c0: V308 = 0x1
0x3c4: V309 = S[0x1]
0x3c5: V310 = 0xff
0x3c7: V311 = AND 0xff V309
0x3ca: V312 = GT V311 0x1
0x3cb: V313 = ISZERO V312
0x3cc: V314 = 0x3d1
0x3cf: JUMPI 0x3d1 V313
---
Entry stack: [V11, 0x111, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x1, V311]
Exit stack: [V11, 0x111, S1, S0, 0x0, 0x0, 0x0, 0x0, 0x1, V311]

================================

Block 0x3d0
[0x3d0:0x3d0]
---
Predecessors: [0x3ba]
Successors: []
---
0x3d0 INVALID
---
0x3d0: INVALID 
---
Entry stack: [V11, 0x111, S7, S6, 0x0, 0x0, 0x0, 0x0, 0x1, V311]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, S7, S6, 0x0, 0x0, 0x0, 0x0, 0x1, V311]

================================

Block 0x3d1
[0x3d1:0x3d7]
---
Predecessors: [0x3ba]
Successors: [0x3d8, 0x3dc]
---
0x3d1 JUMPDEST
0x3d2 EQ
0x3d3 ISZERO
0x3d4 PUSH2 0x3dc
0x3d7 JUMPI
---
0x3d1: JUMPDEST 
0x3d2: V315 = EQ V311 0x1
0x3d3: V316 = ISZERO V315
0x3d4: V317 = 0x3dc
0x3d7: JUMPI 0x3dc V316
---
Entry stack: [V11, 0x111, S7, S6, 0x0, 0x0, 0x0, 0x0, 0x1, V311]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x111, S7, S6, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x3d8
[0x3d8:0x3db]
---
Predecessors: [0x3d1]
Successors: []
---
0x3d8 PUSH1 0x0
0x3da DUP1
0x3db REVERT
---
0x3d8: V318 = 0x0
0x3db: REVERT 0x0 0x0
---
Entry stack: [V11, 0x111, S5, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, S5, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x3dc
[0x3dc:0x3e5]
---
Predecessors: [0x3d1]
Successors: [0x3e6, 0x3ea]
---
0x3dc JUMPDEST
0x3dd PUSH1 0x2
0x3df SLOAD
0x3e0 TIMESTAMP
0x3e1 GT
0x3e2 PUSH2 0x3ea
0x3e5 JUMPI
---
0x3dc: JUMPDEST 
0x3dd: V319 = 0x2
0x3df: V320 = S[0x2]
0x3e0: V321 = TIMESTAMP
0x3e1: V322 = GT V321 V320
0x3e2: V323 = 0x3ea
0x3e5: JUMPI 0x3ea V322
---
Entry stack: [V11, 0x111, S5, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, S5, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x3e6
[0x3e6:0x3e9]
---
Predecessors: [0x3dc]
Successors: []
---
0x3e6 PUSH1 0x0
0x3e8 DUP1
0x3e9 REVERT
---
0x3e6: V324 = 0x0
0x3e9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x111, S5, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, S5, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x3ea
[0x3ea:0x3fc]
---
Predecessors: [0x3dc]
Successors: [0x3fd, 0x417]
---
0x3ea JUMPDEST
0x3eb PUSH1 0x1
0x3ed PUSH1 0xa0
0x3ef PUSH1 0x2
0x3f1 EXP
0x3f2 SUB
0x3f3 DUP7
0x3f4 AND
0x3f5 ISZERO
0x3f6 DUP1
0x3f7 ISZERO
0x3f8 SWAP1
0x3f9 PUSH2 0x417
0x3fc JUMPI
---
0x3ea: JUMPDEST 
0x3eb: V325 = 0x1
0x3ed: V326 = 0xa0
0x3ef: V327 = 0x2
0x3f1: V328 = EXP 0x2 0xa0
0x3f2: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f4: V330 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x3f5: V331 = ISZERO V330
0x3f7: V332 = ISZERO V331
0x3f9: V333 = 0x417
0x3fc: JUMPI 0x417 V331
---
Entry stack: [V11, 0x111, S5, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V332]
Exit stack: [V11, 0x111, S5, S4, 0x0, 0x0, 0x0, 0x0, V332]

================================

Block 0x3fd
[0x3fd:0x416]
---
Predecessors: [0x3ea]
Successors: [0x417]
---
0x3fd POP
0x3fe CALLER
0x3ff PUSH1 0x0
0x401 SWAP1
0x402 DUP2
0x403 MSTORE
0x404 PUSH1 0x20
0x406 DUP2
0x407 SWAP1
0x408 MSTORE
0x409 PUSH1 0x40
0x40b SWAP1
0x40c SHA3
0x40d SLOAD
0x40e PUSH1 0x1
0x410 PUSH1 0xff
0x412 SWAP1
0x413 SWAP2
0x414 AND
0x415 LT
0x416 ISZERO
---
0x3fe: V334 = CALLER
0x3ff: V335 = 0x0
0x403: M[0x0] = V334
0x404: V336 = 0x20
0x408: M[0x20] = 0x0
0x409: V337 = 0x40
0x40c: V338 = SHA3 0x0 0x40
0x40d: V339 = S[V338]
0x40e: V340 = 0x1
0x410: V341 = 0xff
0x414: V342 = AND V339 0xff
0x415: V343 = LT V342 0x1
0x416: V344 = ISZERO V343
---
Entry stack: [V11, 0x111, S6, S5, 0x0, 0x0, 0x0, 0x0, V332]
Stack pops: 1
Stack additions: [V344]
Exit stack: [V11, 0x111, S6, S5, 0x0, 0x0, 0x0, 0x0, V344]

================================

Block 0x417
[0x417:0x41c]
---
Predecessors: [0x3ea, 0x3fd]
Successors: [0x41d, 0x43e]
---
0x417 JUMPDEST
0x418 ISZERO
0x419 PUSH2 0x43e
0x41c JUMPI
---
0x417: JUMPDEST 
0x418: V345 = ISZERO S0
0x419: V346 = 0x43e
0x41c: JUMPI 0x43e V345
---
Entry stack: [V11, 0x111, S6, S5, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x111, S6, S5, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x41d
[0x41d:0x436]
---
Predecessors: [0x417]
Successors: [0xbed]
---
0x41d DUP6
0x41e SWAP4
0x41f POP
0x420 PUSH2 0x437
0x423 DUP6
0x424 PUSH8 0xde0b6b3a7640000
0x42d PUSH4 0xffffffff
0x432 PUSH2 0xbed
0x435 AND
0x436 JUMP
---
0x420: V347 = 0x437
0x424: V348 = 0xde0b6b3a7640000
0x42d: V349 = 0xffffffff
0x432: V350 = 0xbed
0x435: V351 = AND 0xbed 0xffffffff
0x436: JUMP 0xbed
---
Entry stack: [V11, 0x111, S5, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S5, S2, S1, S0, 0x437, S4, 0xde0b6b3a7640000]
Exit stack: [V11, 0x111, S5, S4, S5, 0x0, 0x0, 0x0, 0x437, S4, 0xde0b6b3a7640000]

================================

Block 0x437
[0x437:0x43d]
---
Predecessors: [0xc11]
Successors: [0x45c]
---
0x437 JUMPDEST
0x438 SWAP3
0x439 POP
0x43a PUSH2 0x45c
0x43d JUMP
---
0x437: JUMPDEST 
0x43a: V352 = 0x45c
0x43d: JUMP 0x45c
---
Entry stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S0, S2, S1]

================================

Block 0x43e
[0x43e:0x458]
---
Predecessors: [0x417]
Successors: [0xbed]
---
0x43e JUMPDEST
0x43f CALLER
0x440 SWAP4
0x441 POP
0x442 PUSH2 0x459
0x445 CALLVALUE
0x446 PUSH8 0xde0b6b3a7640000
0x44f PUSH4 0xffffffff
0x454 PUSH2 0xbed
0x457 AND
0x458 JUMP
---
0x43e: JUMPDEST 
0x43f: V353 = CALLER
0x442: V354 = 0x459
0x445: V355 = CALLVALUE
0x446: V356 = 0xde0b6b3a7640000
0x44f: V357 = 0xffffffff
0x454: V358 = 0xbed
0x457: V359 = AND 0xbed 0xffffffff
0x458: JUMP 0xbed
---
Entry stack: [V11, 0x111, S5, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V353, S2, S1, S0, 0x459, V355, 0xde0b6b3a7640000]
Exit stack: [V11, 0x111, S5, S4, V353, 0x0, 0x0, 0x0, 0x459, V355, 0xde0b6b3a7640000]

================================

Block 0x459
[0x459:0x45b]
---
Predecessors: [0xc11]
Successors: [0x45c]
---
0x459 JUMPDEST
0x45a SWAP3
0x45b POP
---
0x459: JUMPDEST 
---
Entry stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S0, S2, S1]

================================

Block 0x45c
[0x45c:0x476]
---
Predecessors: [0x437, 0x459]
Successors: [0xc18]
---
0x45c JUMPDEST
0x45d PUSH2 0x486
0x460 PUSH2 0x477
0x463 DUP5
0x464 PUSH8 0xde0b6b3a7640000
0x46d PUSH4 0xffffffff
0x472 PUSH2 0xc18
0x475 AND
0x476 JUMP
---
0x45c: JUMPDEST 
0x45d: V360 = 0x486
0x460: V361 = 0x477
0x464: V362 = 0xde0b6b3a7640000
0x46d: V363 = 0xffffffff
0x472: V364 = 0xc18
0x475: V365 = AND 0xc18 0xffffffff
0x476: JUMP 0xc18
---
Entry stack: [0x111, 0x0, 0x0, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x486, 0x477, S2, 0xde0b6b3a7640000]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0, 0x486, 0x477, S2, 0xde0b6b3a7640000]

================================

Block 0x477
[0x477:0x485]
---
Predecessors: [0xc26]
Successors: [0xc2f]
---
0x477 JUMPDEST
0x478 PUSH1 0x5
0x47a SLOAD
0x47b SWAP1
0x47c PUSH4 0xffffffff
0x481 PUSH2 0xc2f
0x484 AND
0x485 JUMP
---
0x477: JUMPDEST 
0x478: V366 = 0x5
0x47a: V367 = S[0x5]
0x47c: V368 = 0xffffffff
0x481: V369 = 0xc2f
0x484: V370 = AND 0xc2f 0xffffffff
0x485: JUMP 0xc2f
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, S1, V965]
Stack pops: 1
Stack additions: [V367, S0]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, S1, V367, V965]

================================

Block 0x486
[0x486:0x489]
---
Predecessors: [0xc11]
Successors: [0x48a]
---
0x486 JUMPDEST
0x487 PUSH1 0x5
0x489 SSTORE
---
0x486: JUMPDEST 
0x487: V371 = 0x5
0x489: S[0x5] = S0
---
Entry stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x48a
[0x48a:0x493]
---
Predecessors: [0x486, 0x4b0]
Successors: [0x494, 0x4b7]
---
0x48a JUMPDEST
0x48b PUSH1 0x0
0x48d DUP4
0x48e GT
0x48f ISZERO
0x490 PUSH2 0x4b7
0x493 JUMPI
---
0x48a: JUMPDEST 
0x48b: V372 = 0x0
0x48e: V373 = GT S2 0x0
0x48f: V374 = ISZERO V373
0x490: V375 = 0x4b7
0x493: JUMPI 0x4b7 V374
---
Entry stack: [0x111, 0x0, 0x0, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [0x111, 0x0, 0x0, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x494
[0x494:0x49b]
---
Predecessors: [0x48a]
Successors: [0xc3e]
---
0x494 PUSH2 0x49c
0x497 DUP4
0x498 PUSH2 0xc3e
0x49b JUMP
---
0x494: V376 = 0x49c
0x498: V377 = 0xc3e
0x49b: JUMP 0xc3e
---
Entry stack: [0x111, 0x0, 0x0, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x49c, S2]
Exit stack: [0x111, 0x0, 0x0, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x49c, S2]

================================

Block 0x49c
[0x49c:0x4af]
---
Predecessors: [0xc6a]
Successors: [0xc2f]
---
0x49c JUMPDEST
0x49d SWAP4
0x49e POP
0x49f SWAP1
0x4a0 POP
0x4a1 PUSH2 0x4b0
0x4a4 DUP3
0x4a5 DUP3
0x4a6 PUSH4 0xffffffff
0x4ab PUSH2 0xc2f
0x4ae AND
0x4af JUMP
---
0x49c: JUMPDEST 
0x4a1: V378 = 0x4b0
0x4a6: V379 = 0xffffffff
0x4ab: V380 = 0xc2f
0x4ae: V381 = AND 0xc2f 0xffffffff
0x4af: JUMP 0xc2f
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V965, 0x0]
Stack pops: 5
Stack additions: [S0, S3, S1, 0x4b0, S3, S1]
Exit stack: [S10, S9, S8, S7, S6, S5, 0x0, S3, V965, 0x4b0, S3, V965]

================================

Block 0x4b0
[0x4b0:0x4b6]
---
Predecessors: [0xc11]
Successors: [0x48a]
---
0x4b0 JUMPDEST
0x4b1 SWAP2
0x4b2 POP
0x4b3 PUSH2 0x48a
0x4b6 JUMP
---
0x4b0: JUMPDEST 
0x4b3: V382 = 0x48a
0x4b6: JUMP 0x48a
---
Entry stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, S1]

================================

Block 0x4b7
[0x4b7:0x4cd]
---
Predecessors: [0x48a]
Successors: [0xc2f]
---
0x4b7 JUMPDEST
0x4b8 POP
0x4b9 PUSH1 0x6
0x4bb SLOAD
0x4bc PUSH1 0x0
0x4be SWAP1
0x4bf PUSH2 0x4ce
0x4c2 SWAP1
0x4c3 DUP4
0x4c4 PUSH4 0xffffffff
0x4c9 PUSH2 0xc2f
0x4cc AND
0x4cd JUMP
---
0x4b7: JUMPDEST 
0x4b9: V383 = 0x6
0x4bb: V384 = S[0x6]
0x4bc: V385 = 0x0
0x4bf: V386 = 0x4ce
0x4c4: V387 = 0xffffffff
0x4c9: V388 = 0xc2f
0x4cc: V389 = AND 0xc2f 0xffffffff
0x4cd: JUMP 0xc2f
---
Entry stack: [0x111, 0x0, 0x0, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, 0x0, 0x4ce, V384, S1]
Exit stack: [0x111, 0x0, 0x0, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0, 0x4ce, V384, S1]

================================

Block 0x4ce
[0x4ce:0x501]
---
Predecessors: [0xc11]
Successors: [0x502, 0x50b]
---
0x4ce JUMPDEST
0x4cf PUSH1 0x6
0x4d1 SSTORE
0x4d2 PUSH1 0x9
0x4d4 SLOAD
0x4d5 PUSH1 0x40
0x4d7 MLOAD
0x4d8 PUSH1 0x1
0x4da PUSH1 0xa0
0x4dc PUSH1 0x2
0x4de EXP
0x4df SUB
0x4e0 SWAP1
0x4e1 SWAP2
0x4e2 AND
0x4e3 SWAP1
0x4e4 ADDRESS
0x4e5 BALANCE
0x4e6 DUP1
0x4e7 ISZERO
0x4e8 PUSH2 0x8fc
0x4eb MUL
0x4ec SWAP2
0x4ed PUSH1 0x0
0x4ef DUP2
0x4f0 DUP2
0x4f1 DUP2
0x4f2 DUP6
0x4f3 DUP9
0x4f4 DUP9
0x4f5 CALL
0x4f6 SWAP4
0x4f7 POP
0x4f8 POP
0x4f9 POP
0x4fa POP
0x4fb ISZERO
0x4fc DUP1
0x4fd ISZERO
0x4fe PUSH2 0x50b
0x501 JUMPI
---
0x4ce: JUMPDEST 
0x4cf: V390 = 0x6
0x4d1: S[0x6] = S0
0x4d2: V391 = 0x9
0x4d4: V392 = S[0x9]
0x4d5: V393 = 0x40
0x4d7: V394 = M[0x40]
0x4d8: V395 = 0x1
0x4da: V396 = 0xa0
0x4dc: V397 = 0x2
0x4de: V398 = EXP 0x2 0xa0
0x4df: V399 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e2: V400 = AND V392 0xffffffffffffffffffffffffffffffffffffffff
0x4e4: V401 = ADDRESS
0x4e5: V402 = BALANCE V401
0x4e7: V403 = ISZERO V402
0x4e8: V404 = 0x8fc
0x4eb: V405 = MUL 0x8fc V403
0x4ed: V406 = 0x0
0x4f5: V407 = CALL V405 V400 V402 V394 0x0 V394 0x0
0x4fb: V408 = ISZERO V407
0x4fd: V409 = ISZERO V408
0x4fe: V410 = 0x50b
0x501: JUMPI 0x50b V409
---
Entry stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V408]
Exit stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V408]

================================

Block 0x502
[0x502:0x50a]
---
Predecessors: [0x4ce]
Successors: []
---
0x502 RETURNDATASIZE
0x503 PUSH1 0x0
0x505 DUP1
0x506 RETURNDATACOPY
0x507 RETURNDATASIZE
0x508 PUSH1 0x0
0x50a REVERT
---
0x502: V411 = RETURNDATASIZE
0x503: V412 = 0x0
0x506: RETURNDATACOPY 0x0 0x0 V411
0x507: V413 = RETURNDATASIZE
0x508: V414 = 0x0
0x50a: REVERT 0x0 V413
---
Entry stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V408]
Stack pops: 0
Stack additions: []
Exit stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V408]

================================

Block 0x50b
[0x50b:0x5ad]
---
Predecessors: [0x4ce]
Successors: [0x5ae, 0x5b2]
---
0x50b JUMPDEST
0x50c POP
0x50d PUSH1 0x9
0x50f SLOAD
0x510 PUSH1 0x40
0x512 MLOAD
0x513 PUSH1 0x1
0x515 PUSH1 0xa0
0x517 PUSH1 0x2
0x519 EXP
0x51a SUB
0x51b SWAP1
0x51c SWAP2
0x51d AND
0x51e SWAP1
0x51f PUSH32 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb
0x540 SWAP1
0x541 PUSH1 0x0
0x543 SWAP1
0x544 LOG2
0x545 PUSH1 0x7
0x547 SLOAD
0x548 PUSH1 0x40
0x54a DUP1
0x54b MLOAD
0x54c PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x56d DUP2
0x56e MSTORE
0x56f PUSH1 0x1
0x571 PUSH1 0xa0
0x573 PUSH1 0x2
0x575 EXP
0x576 SUB
0x577 DUP8
0x578 DUP2
0x579 AND
0x57a PUSH1 0x4
0x57c DUP4
0x57d ADD
0x57e MSTORE
0x57f PUSH1 0x24
0x581 DUP3
0x582 ADD
0x583 DUP7
0x584 SWAP1
0x585 MSTORE
0x586 SWAP2
0x587 MLOAD
0x588 SWAP2
0x589 SWAP1
0x58a SWAP3
0x58b AND
0x58c SWAP2
0x58d PUSH4 0xa9059cbb
0x592 SWAP2
0x593 PUSH1 0x44
0x595 DUP1
0x596 DUP4
0x597 ADD
0x598 SWAP3
0x599 PUSH1 0x0
0x59b SWAP3
0x59c SWAP2
0x59d SWAP1
0x59e DUP3
0x59f SWAP1
0x5a0 SUB
0x5a1 ADD
0x5a2 DUP2
0x5a3 DUP4
0x5a4 DUP8
0x5a5 DUP1
0x5a6 EXTCODESIZE
0x5a7 ISZERO
0x5a8 DUP1
0x5a9 ISZERO
0x5aa PUSH2 0x5b2
0x5ad JUMPI
---
0x50b: JUMPDEST 
0x50d: V415 = 0x9
0x50f: V416 = S[0x9]
0x510: V417 = 0x40
0x512: V418 = M[0x40]
0x513: V419 = 0x1
0x515: V420 = 0xa0
0x517: V421 = 0x2
0x519: V422 = EXP 0x2 0xa0
0x51a: V423 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51d: V424 = AND V416 0xffffffffffffffffffffffffffffffffffffffff
0x51f: V425 = 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb
0x541: V426 = 0x0
0x544: LOG V418 0x0 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb V424
0x545: V427 = 0x7
0x547: V428 = S[0x7]
0x548: V429 = 0x40
0x54b: V430 = M[0x40]
0x54c: V431 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x56e: M[V430] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x56f: V432 = 0x1
0x571: V433 = 0xa0
0x573: V434 = 0x2
0x575: V435 = EXP 0x2 0xa0
0x576: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x579: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x57a: V438 = 0x4
0x57d: V439 = ADD V430 0x4
0x57e: M[V439] = V437
0x57f: V440 = 0x24
0x582: V441 = ADD V430 0x24
0x585: M[V441] = S2
0x587: V442 = M[0x40]
0x58b: V443 = AND V428 0xffffffffffffffffffffffffffffffffffffffff
0x58d: V444 = 0xa9059cbb
0x593: V445 = 0x44
0x597: V446 = ADD V430 0x44
0x599: V447 = 0x0
0x5a0: V448 = SUB V430 V442
0x5a1: V449 = ADD V448 0x44
0x5a6: V450 = EXTCODESIZE V443
0x5a7: V451 = ISZERO V450
0x5a9: V452 = ISZERO V451
0x5aa: V453 = 0x5b2
0x5ad: JUMPI 0x5b2 V452
---
Entry stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V408]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V443, 0xa9059cbb, V446, 0x0, V442, V449, V442, 0x0, V443, V451]
Exit stack: [S8, S7, S6, S5, S4, S3, S2, 0x0, V443, 0xa9059cbb, V446, 0x0, V442, V449, V442, 0x0, V443, V451]

================================

Block 0x5ae
[0x5ae:0x5b1]
---
Predecessors: [0x50b]
Successors: []
---
0x5ae PUSH1 0x0
0x5b0 DUP1
0x5b1 REVERT
---
0x5ae: V454 = 0x0
0x5b1: REVERT 0x0 0x0
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, 0x0, V443, 0xa9059cbb, V446, 0x0, V442, V449, V442, 0x0, V443, V451]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, 0x0, V443, 0xa9059cbb, V446, 0x0, V442, V449, V442, 0x0, V443, V451]

================================

Block 0x5b2
[0x5b2:0x5bc]
---
Predecessors: [0x50b]
Successors: [0x5bd, 0x5c6]
---
0x5b2 JUMPDEST
0x5b3 POP
0x5b4 GAS
0x5b5 CALL
0x5b6 ISZERO
0x5b7 DUP1
0x5b8 ISZERO
0x5b9 PUSH2 0x5c6
0x5bc JUMPI
---
0x5b2: JUMPDEST 
0x5b4: V455 = GAS
0x5b5: V456 = CALL V455 V443 0x0 V442 V449 V442 0x0
0x5b6: V457 = ISZERO V456
0x5b8: V458 = ISZERO V457
0x5b9: V459 = 0x5c6
0x5bc: JUMPI 0x5c6 V458
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, 0x0, V443, 0xa9059cbb, V446, 0x0, V442, V449, V442, 0x0, V443, V451]
Stack pops: 7
Stack additions: [V457]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, 0x0, V443, 0xa9059cbb, V446, V457]

================================

Block 0x5bd
[0x5bd:0x5c5]
---
Predecessors: [0x5b2]
Successors: []
---
0x5bd RETURNDATASIZE
0x5be PUSH1 0x0
0x5c0 DUP1
0x5c1 RETURNDATACOPY
0x5c2 RETURNDATASIZE
0x5c3 PUSH1 0x0
0x5c5 REVERT
---
0x5bd: V460 = RETURNDATASIZE
0x5be: V461 = 0x0
0x5c1: RETURNDATACOPY 0x0 0x0 V460
0x5c2: V462 = RETURNDATASIZE
0x5c3: V463 = 0x0
0x5c5: REVERT 0x0 V462
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, 0x0, V443, 0xa9059cbb, V446, V457]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, 0x0, V443, 0xa9059cbb, V446, V457]

================================

Block 0x5c6
[0x5c6:0x619]
---
Predecessors: [0x5b2]
Successors: [0x835]
---
0x5c6 JUMPDEST
0x5c7 POP
0x5c8 POP
0x5c9 PUSH1 0x5
0x5cb SLOAD
0x5cc PUSH1 0x40
0x5ce DUP1
0x5cf MLOAD
0x5d0 CALLVALUE
0x5d1 DUP2
0x5d2 MSTORE
0x5d3 PUSH1 0x20
0x5d5 DUP2
0x5d6 ADD
0x5d7 SWAP3
0x5d8 SWAP1
0x5d9 SWAP3
0x5da MSTORE
0x5db DUP1
0x5dc MLOAD
0x5dd PUSH1 0x1
0x5df PUSH1 0xa0
0x5e1 PUSH1 0x2
0x5e3 EXP
0x5e4 SUB
0x5e5 DUP10
0x5e6 AND
0x5e7 SWAP5
0x5e8 POP
0x5e9 PUSH32 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x60a SWAP4
0x60b POP
0x60c SWAP2
0x60d DUP3
0x60e SWAP1
0x60f SUB
0x610 ADD
0x611 SWAP1
0x612 LOG2
0x613 PUSH2 0x61a
0x616 PUSH2 0x835
0x619 JUMP
---
0x5c6: JUMPDEST 
0x5c9: V464 = 0x5
0x5cb: V465 = S[0x5]
0x5cc: V466 = 0x40
0x5cf: V467 = M[0x40]
0x5d0: V468 = CALLVALUE
0x5d2: M[V467] = V468
0x5d3: V469 = 0x20
0x5d6: V470 = ADD V467 0x20
0x5da: M[V470] = V465
0x5dc: V471 = M[0x40]
0x5dd: V472 = 0x1
0x5df: V473 = 0xa0
0x5e1: V474 = 0x2
0x5e3: V475 = EXP 0x2 0xa0
0x5e4: V476 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e6: V477 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0x5e9: V478 = 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x60f: V479 = SUB V467 V471
0x610: V480 = ADD V479 0x40
0x612: LOG V471 V480 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e V477
0x613: V481 = 0x61a
0x616: V482 = 0x835
0x619: JUMP 0x835
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, 0x0, V443, 0xa9059cbb, V446, V457]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, 0x61a]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, 0x0, 0x61a]

================================

Block 0x61a
[0x61a:0x621]
---
Predecessors: [0x8a7]
Successors: [0x111]
---
0x61a JUMPDEST
0x61b POP
0x61c POP
0x61d POP
0x61e POP
0x61f POP
0x620 POP
0x621 JUMP
---
0x61a: JUMPDEST 
0x621: JUMP S6
---
Entry stack: [S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [S7]

================================

Block 0x622
[0x622:0x630]
---
Predecessors: [0x11f]
Successors: [0x128]
---
0x622 JUMPDEST
0x623 PUSH1 0x8
0x625 SLOAD
0x626 PUSH1 0x1
0x628 PUSH1 0xa0
0x62a PUSH1 0x2
0x62c EXP
0x62d SUB
0x62e AND
0x62f DUP2
0x630 JUMP
---
0x622: JUMPDEST 
0x623: V483 = 0x8
0x625: V484 = S[0x8]
0x626: V485 = 0x1
0x628: V486 = 0xa0
0x62a: V487 = 0x2
0x62c: V488 = EXP 0x2 0xa0
0x62d: V489 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62e: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0x630: JUMP 0x128
---
Entry stack: [V11, 0x128]
Stack pops: 1
Stack additions: [S0, V490]
Exit stack: [V11, 0x128, V490]

================================

Block 0x631
[0x631:0x63f]
---
Predecessors: [0x150]
Successors: [0x128]
---
0x631 JUMPDEST
0x632 PUSH1 0x9
0x634 SLOAD
0x635 PUSH1 0x1
0x637 PUSH1 0xa0
0x639 PUSH1 0x2
0x63b EXP
0x63c SUB
0x63d AND
0x63e DUP2
0x63f JUMP
---
0x631: JUMPDEST 
0x632: V491 = 0x9
0x634: V492 = S[0x9]
0x635: V493 = 0x1
0x637: V494 = 0xa0
0x639: V495 = 0x2
0x63b: V496 = EXP 0x2 0xa0
0x63c: V497 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63d: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x63f: JUMP 0x128
---
Entry stack: [V11, 0x128]
Stack pops: 1
Stack additions: [S0, V498]
Exit stack: [V11, 0x128, V498]

================================

Block 0x640
[0x640:0x645]
---
Predecessors: [0x165]
Successors: [0x16e]
---
0x640 JUMPDEST
0x641 PUSH1 0x4
0x643 SLOAD
0x644 DUP2
0x645 JUMP
---
0x640: JUMPDEST 
0x641: V499 = 0x4
0x643: V500 = S[0x4]
0x645: JUMP 0x16e
---
Entry stack: [V11, 0x16e]
Stack pops: 1
Stack additions: [S0, V500]
Exit stack: [V11, 0x16e, V500]

================================

Block 0x646
[0x646:0x663]
---
Predecessors: [0x18c]
Successors: [0x664, 0x668]
---
0x646 JUMPDEST
0x647 CALLER
0x648 PUSH1 0x0
0x64a SWAP1
0x64b DUP2
0x64c MSTORE
0x64d PUSH1 0x20
0x64f DUP2
0x650 SWAP1
0x651 MSTORE
0x652 PUSH1 0x40
0x654 DUP2
0x655 SHA3
0x656 SLOAD
0x657 PUSH1 0x2
0x659 SWAP1
0x65a PUSH1 0xff
0x65c AND
0x65d DUP2
0x65e GT
0x65f ISZERO
0x660 PUSH2 0x668
0x663 JUMPI
---
0x646: JUMPDEST 
0x647: V501 = CALLER
0x648: V502 = 0x0
0x64c: M[0x0] = V501
0x64d: V503 = 0x20
0x651: M[0x20] = 0x0
0x652: V504 = 0x40
0x655: V505 = SHA3 0x0 0x40
0x656: V506 = S[V505]
0x657: V507 = 0x2
0x65a: V508 = 0xff
0x65c: V509 = AND 0xff V506
0x65e: V510 = GT 0x2 V509
0x65f: V511 = ISZERO V510
0x660: V512 = 0x668
0x663: JUMPI 0x668 V511
---
Entry stack: [V11, 0x111, V120]
Stack pops: 0
Stack additions: [0x0, 0x2]
Exit stack: [V11, 0x111, V120, 0x0, 0x2]

================================

Block 0x664
[0x664:0x667]
---
Predecessors: [0x646]
Successors: []
---
0x664 PUSH1 0x0
0x666 DUP1
0x667 REVERT
---
0x664: V513 = 0x0
0x667: REVERT 0x0 0x0
---
Entry stack: [V11, 0x111, V120, 0x0, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, V120, 0x0, 0x2]

================================

Block 0x668
[0x668:0x677]
---
Predecessors: [0x646]
Successors: [0x678, 0x679]
---
0x668 JUMPDEST
0x669 PUSH1 0x1
0x66b DUP1
0x66c SLOAD
0x66d PUSH1 0xff
0x66f AND
0x670 DUP2
0x671 DUP2
0x672 GT
0x673 ISZERO
0x674 PUSH2 0x679
0x677 JUMPI
---
0x668: JUMPDEST 
0x669: V514 = 0x1
0x66c: V515 = S[0x1]
0x66d: V516 = 0xff
0x66f: V517 = AND 0xff V515
0x672: V518 = GT V517 0x1
0x673: V519 = ISZERO V518
0x674: V520 = 0x679
0x677: JUMPI 0x679 V519
---
Entry stack: [V11, 0x111, V120, 0x0, 0x2]
Stack pops: 0
Stack additions: [0x1, V517]
Exit stack: [V11, 0x111, V120, 0x0, 0x2, 0x1, V517]

================================

Block 0x678
[0x678:0x678]
---
Predecessors: [0x668]
Successors: []
---
0x678 INVALID
---
0x678: INVALID 
---
Entry stack: [V11, 0x111, V120, 0x0, 0x2, 0x1, V517]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, V120, 0x0, 0x2, 0x1, V517]

================================

Block 0x679
[0x679:0x67e]
---
Predecessors: [0x668]
Successors: [0x67f, 0x683]
---
0x679 JUMPDEST
0x67a EQ
0x67b PUSH2 0x683
0x67e JUMPI
---
0x679: JUMPDEST 
0x67a: V521 = EQ V517 0x1
0x67b: V522 = 0x683
0x67e: JUMPI 0x683 V521
---
Entry stack: [V11, 0x111, V120, 0x0, 0x2, 0x1, V517]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x111, V120, 0x0, 0x2]

================================

Block 0x67f
[0x67f:0x682]
---
Predecessors: [0x679]
Successors: []
---
0x67f PUSH1 0x0
0x681 DUP1
0x682 REVERT
---
0x67f: V523 = 0x0
0x682: REVERT 0x0 0x0
---
Entry stack: [V11, 0x111, V120, 0x0, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, V120, 0x0, 0x2]

================================

Block 0x683
[0x683:0x6df]
---
Predecessors: [0x679]
Successors: [0x6e0, 0x6e4]
---
0x683 JUMPDEST
0x684 PUSH1 0x40
0x686 DUP1
0x687 MLOAD
0x688 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6a9 DUP2
0x6aa MSTORE
0x6ab ADDRESS
0x6ac PUSH1 0x4
0x6ae DUP3
0x6af ADD
0x6b0 MSTORE
0x6b1 SWAP1
0x6b2 MLOAD
0x6b3 PUSH1 0x1
0x6b5 PUSH1 0xa0
0x6b7 PUSH1 0x2
0x6b9 EXP
0x6ba SUB
0x6bb DUP6
0x6bc AND
0x6bd SWAP2
0x6be PUSH4 0x70a08231
0x6c3 SWAP2
0x6c4 PUSH1 0x24
0x6c6 DUP1
0x6c7 DUP4
0x6c8 ADD
0x6c9 SWAP3
0x6ca PUSH1 0x20
0x6cc SWAP3
0x6cd SWAP2
0x6ce SWAP1
0x6cf DUP3
0x6d0 SWAP1
0x6d1 SUB
0x6d2 ADD
0x6d3 DUP2
0x6d4 PUSH1 0x0
0x6d6 DUP8
0x6d7 DUP1
0x6d8 EXTCODESIZE
0x6d9 ISZERO
0x6da DUP1
0x6db ISZERO
0x6dc PUSH2 0x6e4
0x6df JUMPI
---
0x683: JUMPDEST 
0x684: V524 = 0x40
0x687: V525 = M[0x40]
0x688: V526 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6aa: M[V525] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6ab: V527 = ADDRESS
0x6ac: V528 = 0x4
0x6af: V529 = ADD V525 0x4
0x6b0: M[V529] = V527
0x6b2: V530 = M[0x40]
0x6b3: V531 = 0x1
0x6b5: V532 = 0xa0
0x6b7: V533 = 0x2
0x6b9: V534 = EXP 0x2 0xa0
0x6ba: V535 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6bc: V536 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x6be: V537 = 0x70a08231
0x6c4: V538 = 0x24
0x6c8: V539 = ADD V525 0x24
0x6ca: V540 = 0x20
0x6d1: V541 = SUB V525 V530
0x6d2: V542 = ADD V541 0x24
0x6d4: V543 = 0x0
0x6d8: V544 = EXTCODESIZE V536
0x6d9: V545 = ISZERO V544
0x6db: V546 = ISZERO V545
0x6dc: V547 = 0x6e4
0x6df: JUMPI 0x6e4 V546
---
Entry stack: [V11, 0x111, V120, 0x0, 0x2]
Stack pops: 3
Stack additions: [S2, S1, S0, V536, 0x70a08231, V539, 0x20, V530, V542, V530, 0x0, V536, V545]
Exit stack: [V11, 0x111, V120, 0x0, 0x2, V536, 0x70a08231, V539, 0x20, V530, V542, V530, 0x0, V536, V545]

================================

Block 0x6e0
[0x6e0:0x6e3]
---
Predecessors: [0x683]
Successors: []
---
0x6e0 PUSH1 0x0
0x6e2 DUP1
0x6e3 REVERT
---
0x6e0: V548 = 0x0
0x6e3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x111, V120, 0x0, 0x2, V536, 0x70a08231, V539, 0x20, V530, V542, V530, 0x0, V536, V545]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, V120, 0x0, 0x2, V536, 0x70a08231, V539, 0x20, V530, V542, V530, 0x0, V536, V545]

================================

Block 0x6e4
[0x6e4:0x6ee]
---
Predecessors: [0x683]
Successors: [0x6ef, 0x6f8]
---
0x6e4 JUMPDEST
0x6e5 POP
0x6e6 GAS
0x6e7 CALL
0x6e8 ISZERO
0x6e9 DUP1
0x6ea ISZERO
0x6eb PUSH2 0x6f8
0x6ee JUMPI
---
0x6e4: JUMPDEST 
0x6e6: V549 = GAS
0x6e7: V550 = CALL V549 V536 0x0 V530 V542 V530 0x20
0x6e8: V551 = ISZERO V550
0x6ea: V552 = ISZERO V551
0x6eb: V553 = 0x6f8
0x6ee: JUMPI 0x6f8 V552
---
Entry stack: [V11, 0x111, V120, 0x0, 0x2, V536, 0x70a08231, V539, 0x20, V530, V542, V530, 0x0, V536, V545]
Stack pops: 7
Stack additions: [V551]
Exit stack: [V11, 0x111, V120, 0x0, 0x2, V536, 0x70a08231, V539, V551]

================================

Block 0x6ef
[0x6ef:0x6f7]
---
Predecessors: [0x6e4]
Successors: []
---
0x6ef RETURNDATASIZE
0x6f0 PUSH1 0x0
0x6f2 DUP1
0x6f3 RETURNDATACOPY
0x6f4 RETURNDATASIZE
0x6f5 PUSH1 0x0
0x6f7 REVERT
---
0x6ef: V554 = RETURNDATASIZE
0x6f0: V555 = 0x0
0x6f3: RETURNDATACOPY 0x0 0x0 V554
0x6f4: V556 = RETURNDATASIZE
0x6f5: V557 = 0x0
0x6f7: REVERT 0x0 V556
---
Entry stack: [V11, 0x111, V120, 0x0, 0x2, V536, 0x70a08231, V539, V551]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, V120, 0x0, 0x2, V536, 0x70a08231, V539, V551]

================================

Block 0x6f8
[0x6f8:0x709]
---
Predecessors: [0x6e4]
Successors: [0x70a, 0x70e]
---
0x6f8 JUMPDEST
0x6f9 POP
0x6fa POP
0x6fb POP
0x6fc POP
0x6fd PUSH1 0x40
0x6ff MLOAD
0x700 RETURNDATASIZE
0x701 PUSH1 0x20
0x703 DUP2
0x704 LT
0x705 ISZERO
0x706 PUSH2 0x70e
0x709 JUMPI
---
0x6f8: JUMPDEST 
0x6fd: V558 = 0x40
0x6ff: V559 = M[0x40]
0x700: V560 = RETURNDATASIZE
0x701: V561 = 0x20
0x704: V562 = LT V560 0x20
0x705: V563 = ISZERO V562
0x706: V564 = 0x70e
0x709: JUMPI 0x70e V563
---
Entry stack: [V11, 0x111, V120, 0x0, 0x2, V536, 0x70a08231, V539, V551]
Stack pops: 4
Stack additions: [V559, V560]
Exit stack: [V11, 0x111, V120, 0x0, 0x2, V559, V560]

================================

Block 0x70a
[0x70a:0x70d]
---
Predecessors: [0x6f8]
Successors: []
---
0x70a PUSH1 0x0
0x70c DUP1
0x70d REVERT
---
0x70a: V565 = 0x0
0x70d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x111, V120, 0x0, 0x2, V559, V560]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, V120, 0x0, 0x2, V559, V560]

================================

Block 0x70e
[0x70e:0x776]
---
Predecessors: [0x6f8]
Successors: [0x777, 0x77b]
---
0x70e JUMPDEST
0x70f POP
0x710 MLOAD
0x711 PUSH1 0x40
0x713 DUP1
0x714 MLOAD
0x715 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x736 DUP2
0x737 MSTORE
0x738 CALLER
0x739 PUSH1 0x4
0x73b DUP3
0x73c ADD
0x73d MSTORE
0x73e PUSH1 0x24
0x740 DUP2
0x741 ADD
0x742 DUP4
0x743 SWAP1
0x744 MSTORE
0x745 SWAP1
0x746 MLOAD
0x747 SWAP2
0x748 SWAP4
0x749 POP
0x74a PUSH1 0x1
0x74c PUSH1 0xa0
0x74e PUSH1 0x2
0x750 EXP
0x751 SUB
0x752 DUP6
0x753 AND
0x754 SWAP2
0x755 PUSH4 0xa9059cbb
0x75a SWAP2
0x75b PUSH1 0x44
0x75d DUP1
0x75e DUP3
0x75f ADD
0x760 SWAP3
0x761 PUSH1 0x0
0x763 SWAP3
0x764 SWAP1
0x765 SWAP2
0x766 SWAP1
0x767 DUP3
0x768 SWAP1
0x769 SUB
0x76a ADD
0x76b DUP2
0x76c DUP4
0x76d DUP8
0x76e DUP1
0x76f EXTCODESIZE
0x770 ISZERO
0x771 DUP1
0x772 ISZERO
0x773 PUSH2 0x77b
0x776 JUMPI
---
0x70e: JUMPDEST 
0x710: V566 = M[V559]
0x711: V567 = 0x40
0x714: V568 = M[0x40]
0x715: V569 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x737: M[V568] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x738: V570 = CALLER
0x739: V571 = 0x4
0x73c: V572 = ADD V568 0x4
0x73d: M[V572] = V570
0x73e: V573 = 0x24
0x741: V574 = ADD V568 0x24
0x744: M[V574] = V566
0x746: V575 = M[0x40]
0x74a: V576 = 0x1
0x74c: V577 = 0xa0
0x74e: V578 = 0x2
0x750: V579 = EXP 0x2 0xa0
0x751: V580 = SUB 0x10000000000000000000000000000000000000000 0x1
0x753: V581 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x755: V582 = 0xa9059cbb
0x75b: V583 = 0x44
0x75f: V584 = ADD V568 0x44
0x761: V585 = 0x0
0x769: V586 = SUB V568 V575
0x76a: V587 = ADD V586 0x44
0x76f: V588 = EXTCODESIZE V581
0x770: V589 = ISZERO V588
0x772: V590 = ISZERO V589
0x773: V591 = 0x77b
0x776: JUMPI 0x77b V590
---
Entry stack: [V11, 0x111, V120, 0x0, 0x2, V559, V560]
Stack pops: 5
Stack additions: [S4, V566, S2, V581, 0xa9059cbb, V584, 0x0, V575, V587, V575, 0x0, V581, V589]
Exit stack: [V11, 0x111, V120, V566, 0x2, V581, 0xa9059cbb, V584, 0x0, V575, V587, V575, 0x0, V581, V589]

================================

Block 0x777
[0x777:0x77a]
---
Predecessors: [0x70e]
Successors: []
---
0x777 PUSH1 0x0
0x779 DUP1
0x77a REVERT
---
0x777: V592 = 0x0
0x77a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x111, V120, V566, 0x2, V581, 0xa9059cbb, V584, 0x0, V575, V587, V575, 0x0, V581, V589]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, V120, V566, 0x2, V581, 0xa9059cbb, V584, 0x0, V575, V587, V575, 0x0, V581, V589]

================================

Block 0x77b
[0x77b:0x785]
---
Predecessors: [0x70e]
Successors: [0x786, 0x78f]
---
0x77b JUMPDEST
0x77c POP
0x77d GAS
0x77e CALL
0x77f ISZERO
0x780 DUP1
0x781 ISZERO
0x782 PUSH2 0x78f
0x785 JUMPI
---
0x77b: JUMPDEST 
0x77d: V593 = GAS
0x77e: V594 = CALL V593 V581 0x0 V575 V587 V575 0x0
0x77f: V595 = ISZERO V594
0x781: V596 = ISZERO V595
0x782: V597 = 0x78f
0x785: JUMPI 0x78f V596
---
Entry stack: [V11, 0x111, V120, V566, 0x2, V581, 0xa9059cbb, V584, 0x0, V575, V587, V575, 0x0, V581, V589]
Stack pops: 7
Stack additions: [V595]
Exit stack: [V11, 0x111, V120, V566, 0x2, V581, 0xa9059cbb, V584, V595]

================================

Block 0x786
[0x786:0x78e]
---
Predecessors: [0x77b]
Successors: []
---
0x786 RETURNDATASIZE
0x787 PUSH1 0x0
0x789 DUP1
0x78a RETURNDATACOPY
0x78b RETURNDATASIZE
0x78c PUSH1 0x0
0x78e REVERT
---
0x786: V598 = RETURNDATASIZE
0x787: V599 = 0x0
0x78a: RETURNDATACOPY 0x0 0x0 V598
0x78b: V600 = RETURNDATASIZE
0x78c: V601 = 0x0
0x78e: REVERT 0x0 V600
---
Entry stack: [V11, 0x111, V120, V566, 0x2, V581, 0xa9059cbb, V584, V595]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, V120, V566, 0x2, V581, 0xa9059cbb, V584, V595]

================================

Block 0x78f
[0x78f:0x797]
---
Predecessors: [0x77b]
Successors: [0x111]
---
0x78f JUMPDEST
0x790 POP
0x791 POP
0x792 POP
0x793 POP
0x794 POP
0x795 POP
0x796 POP
0x797 JUMP
---
0x78f: JUMPDEST 
0x797: JUMP 0x111
---
Entry stack: [V11, 0x111, V120, V566, 0x2, V581, 0xa9059cbb, V584, V595]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0x798
[0x798:0x7d7]
---
Predecessors: [0x1ad]
Successors: [0x7d8, 0x81e]
---
0x798 JUMPDEST
0x799 PUSH1 0xa
0x79b DUP1
0x79c SLOAD
0x79d PUSH1 0x40
0x79f DUP1
0x7a0 MLOAD
0x7a1 PUSH1 0x20
0x7a3 PUSH1 0x2
0x7a5 PUSH1 0x1
0x7a7 DUP6
0x7a8 AND
0x7a9 ISZERO
0x7aa PUSH2 0x100
0x7ad MUL
0x7ae PUSH1 0x0
0x7b0 NOT
0x7b1 ADD
0x7b2 SWAP1
0x7b3 SWAP5
0x7b4 AND
0x7b5 SWAP4
0x7b6 SWAP1
0x7b7 SWAP4
0x7b8 DIV
0x7b9 PUSH1 0x1f
0x7bb DUP2
0x7bc ADD
0x7bd DUP5
0x7be SWAP1
0x7bf DIV
0x7c0 DUP5
0x7c1 MUL
0x7c2 DUP3
0x7c3 ADD
0x7c4 DUP5
0x7c5 ADD
0x7c6 SWAP1
0x7c7 SWAP3
0x7c8 MSTORE
0x7c9 DUP2
0x7ca DUP2
0x7cb MSTORE
0x7cc SWAP3
0x7cd SWAP2
0x7ce DUP4
0x7cf ADD
0x7d0 DUP3
0x7d1 DUP3
0x7d2 DUP1
0x7d3 ISZERO
0x7d4 PUSH2 0x81e
0x7d7 JUMPI
---
0x798: JUMPDEST 
0x799: V602 = 0xa
0x79c: V603 = S[0xa]
0x79d: V604 = 0x40
0x7a0: V605 = M[0x40]
0x7a1: V606 = 0x20
0x7a3: V607 = 0x2
0x7a5: V608 = 0x1
0x7a8: V609 = AND V603 0x1
0x7a9: V610 = ISZERO V609
0x7aa: V611 = 0x100
0x7ad: V612 = MUL 0x100 V610
0x7ae: V613 = 0x0
0x7b0: V614 = NOT 0x0
0x7b1: V615 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V612
0x7b4: V616 = AND V603 V615
0x7b8: V617 = DIV V616 0x2
0x7b9: V618 = 0x1f
0x7bc: V619 = ADD V617 0x1f
0x7bf: V620 = DIV V619 0x20
0x7c1: V621 = MUL 0x20 V620
0x7c3: V622 = ADD V605 V621
0x7c5: V623 = ADD 0x20 V622
0x7c8: M[0x40] = V623
0x7cb: M[V605] = V617
0x7cf: V624 = ADD V605 0x20
0x7d3: V625 = ISZERO V617
0x7d4: V626 = 0x81e
0x7d7: JUMPI 0x81e V625
---
Entry stack: [V11, 0x1b6]
Stack pops: 0
Stack additions: [V605, 0xa, V617, V624, 0xa, V617]
Exit stack: [V11, 0x1b6, V605, 0xa, V617, V624, 0xa, V617]

================================

Block 0x7d8
[0x7d8:0x7df]
---
Predecessors: [0x798]
Successors: [0x7e0, 0x7f3]
---
0x7d8 DUP1
0x7d9 PUSH1 0x1f
0x7db LT
0x7dc PUSH2 0x7f3
0x7df JUMPI
---
0x7d9: V627 = 0x1f
0x7db: V628 = LT 0x1f V617
0x7dc: V629 = 0x7f3
0x7df: JUMPI 0x7f3 V628
---
Entry stack: [V11, 0x1b6, V605, 0xa, V617, V624, 0xa, V617]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1b6, V605, 0xa, V617, V624, 0xa, V617]

================================

Block 0x7e0
[0x7e0:0x7f2]
---
Predecessors: [0x7d8]
Successors: [0x81e]
---
0x7e0 PUSH2 0x100
0x7e3 DUP1
0x7e4 DUP4
0x7e5 SLOAD
0x7e6 DIV
0x7e7 MUL
0x7e8 DUP4
0x7e9 MSTORE
0x7ea SWAP2
0x7eb PUSH1 0x20
0x7ed ADD
0x7ee SWAP2
0x7ef PUSH2 0x81e
0x7f2 JUMP
---
0x7e0: V630 = 0x100
0x7e5: V631 = S[0xa]
0x7e6: V632 = DIV V631 0x100
0x7e7: V633 = MUL V632 0x100
0x7e9: M[V624] = V633
0x7eb: V634 = 0x20
0x7ed: V635 = ADD 0x20 V624
0x7ef: V636 = 0x81e
0x7f2: JUMP 0x81e
---
Entry stack: [V11, 0x1b6, V605, 0xa, V617, V624, 0xa, V617]
Stack pops: 3
Stack additions: [V635, S1, S0]
Exit stack: [V11, 0x1b6, V605, 0xa, V617, V635, 0xa, V617]

================================

Block 0x7f3
[0x7f3:0x800]
---
Predecessors: [0x7d8]
Successors: [0x801]
---
0x7f3 JUMPDEST
0x7f4 DUP3
0x7f5 ADD
0x7f6 SWAP2
0x7f7 SWAP1
0x7f8 PUSH1 0x0
0x7fa MSTORE
0x7fb PUSH1 0x20
0x7fd PUSH1 0x0
0x7ff SHA3
0x800 SWAP1
---
0x7f3: JUMPDEST 
0x7f5: V637 = ADD V624 V617
0x7f8: V638 = 0x0
0x7fa: M[0x0] = 0xa
0x7fb: V639 = 0x20
0x7fd: V640 = 0x0
0x7ff: V641 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x1b6, V605, 0xa, V617, V624, 0xa, V617]
Stack pops: 3
Stack additions: [V637, V641, S2]
Exit stack: [V11, 0x1b6, V605, 0xa, V617, V637, V641, V624]

================================

Block 0x801
[0x801:0x814]
---
Predecessors: [0x7f3, 0x801]
Successors: [0x801, 0x815]
---
0x801 JUMPDEST
0x802 DUP2
0x803 SLOAD
0x804 DUP2
0x805 MSTORE
0x806 SWAP1
0x807 PUSH1 0x1
0x809 ADD
0x80a SWAP1
0x80b PUSH1 0x20
0x80d ADD
0x80e DUP1
0x80f DUP4
0x810 GT
0x811 PUSH2 0x801
0x814 JUMPI
---
0x801: JUMPDEST 
0x803: V642 = S[S1]
0x805: M[S0] = V642
0x807: V643 = 0x1
0x809: V644 = ADD 0x1 S1
0x80b: V645 = 0x20
0x80d: V646 = ADD 0x20 S0
0x810: V647 = GT V637 V646
0x811: V648 = 0x801
0x814: JUMPI 0x801 V647
---
Entry stack: [V11, 0x1b6, V605, 0xa, V617, V637, S1, S0]
Stack pops: 3
Stack additions: [S2, V644, V646]
Exit stack: [V11, 0x1b6, V605, 0xa, V617, V637, V644, V646]

================================

Block 0x815
[0x815:0x81d]
---
Predecessors: [0x801]
Successors: [0x81e]
---
0x815 DUP3
0x816 SWAP1
0x817 SUB
0x818 PUSH1 0x1f
0x81a AND
0x81b DUP3
0x81c ADD
0x81d SWAP2
---
0x817: V649 = SUB V646 V637
0x818: V650 = 0x1f
0x81a: V651 = AND 0x1f V649
0x81c: V652 = ADD V637 V651
---
Entry stack: [V11, 0x1b6, V605, 0xa, V617, V637, V644, V646]
Stack pops: 3
Stack additions: [V652, S1, S2]
Exit stack: [V11, 0x1b6, V605, 0xa, V617, V652, V644, V637]

================================

Block 0x81e
[0x81e:0x825]
---
Predecessors: [0x798, 0x7e0, 0x815]
Successors: [0x1b6]
---
0x81e JUMPDEST
0x81f POP
0x820 POP
0x821 POP
0x822 POP
0x823 POP
0x824 DUP2
0x825 JUMP
---
0x81e: JUMPDEST 
0x825: JUMP 0x1b6
---
Entry stack: [V11, 0x1b6, V605, 0xa, V617, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x1b6, V605]

================================

Block 0x826
[0x826:0x834]
---
Predecessors: [0x237]
Successors: [0x128]
---
0x826 JUMPDEST
0x827 PUSH1 0x7
0x829 SLOAD
0x82a PUSH1 0x1
0x82c PUSH1 0xa0
0x82e PUSH1 0x2
0x830 EXP
0x831 SUB
0x832 AND
0x833 DUP2
0x834 JUMP
---
0x826: JUMPDEST 
0x827: V653 = 0x7
0x829: V654 = S[0x7]
0x82a: V655 = 0x1
0x82c: V656 = 0xa0
0x82e: V657 = 0x2
0x830: V658 = EXP 0x2 0xa0
0x831: V659 = SUB 0x10000000000000000000000000000000000000000 0x1
0x832: V660 = AND 0xffffffffffffffffffffffffffffffffffffffff V654
0x834: JUMP 0x128
---
Entry stack: [V11, 0x128]
Stack pops: 1
Stack additions: [S0, V660]
Exit stack: [V11, 0x128, V660]

================================

Block 0x835
[0x835:0x840]
---
Predecessors: [0x263, 0x5c6]
Successors: [0x841, 0x855]
---
0x835 JUMPDEST
0x836 PUSH1 0x3
0x838 SLOAD
0x839 TIMESTAMP
0x83a GT
0x83b DUP1
0x83c ISZERO
0x83d PUSH2 0x855
0x840 JUMPI
---
0x835: JUMPDEST 
0x836: V661 = 0x3
0x838: V662 = S[0x3]
0x839: V663 = TIMESTAMP
0x83a: V664 = GT V663 V662
0x83c: V665 = ISZERO V664
0x83d: V666 = 0x855
0x840: JUMPI 0x855 V665
---
Entry stack: [S8, S7, S6, S5, S4, S3, S2, S1, {0x111, 0x61a}]
Stack pops: 0
Stack additions: [V664]
Exit stack: [S8, S7, S6, S5, S4, S3, S2, S1, {0x111, 0x61a}, V664]

================================

Block 0x841
[0x841:0x850]
---
Predecessors: [0x835]
Successors: [0x851, 0x852]
---
0x841 POP
0x842 PUSH1 0x1
0x844 DUP1
0x845 SLOAD
0x846 PUSH1 0xff
0x848 AND
0x849 DUP2
0x84a DUP2
0x84b GT
0x84c ISZERO
0x84d PUSH2 0x852
0x850 JUMPI
---
0x842: V667 = 0x1
0x845: V668 = S[0x1]
0x846: V669 = 0xff
0x848: V670 = AND 0xff V668
0x84b: V671 = GT V670 0x1
0x84c: V672 = ISZERO V671
0x84d: V673 = 0x852
0x850: JUMPI 0x852 V672
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, S2, {0x111, 0x61a}, V664]
Stack pops: 1
Stack additions: [0x1, V670]
Exit stack: [S9, S8, S7, S6, S5, S4, S3, S2, {0x111, 0x61a}, 0x1, V670]

================================

Block 0x851
[0x851:0x851]
---
Predecessors: [0x841]
Successors: []
---
0x851 INVALID
---
0x851: INVALID 
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, {0x111, 0x61a}, 0x1, V670]
Stack pops: 0
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, {0x111, 0x61a}, 0x1, V670]

================================

Block 0x852
[0x852:0x854]
---
Predecessors: [0x841]
Successors: [0x855]
---
0x852 JUMPDEST
0x853 EQ
0x854 ISZERO
---
0x852: JUMPDEST 
0x853: V674 = EQ V670 0x1
0x854: V675 = ISZERO V674
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, {0x111, 0x61a}, 0x1, V670]
Stack pops: 2
Stack additions: [V675]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, {0x111, 0x61a}, V675]

================================

Block 0x855
[0x855:0x85a]
---
Predecessors: [0x835, 0x852]
Successors: [0x85b, 0x8a7]
---
0x855 JUMPDEST
0x856 ISZERO
0x857 PUSH2 0x8a7
0x85a JUMPI
---
0x855: JUMPDEST 
0x856: V676 = ISZERO S0
0x857: V677 = 0x8a7
0x85a: JUMPI 0x8a7 V676
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, S2, {0x111, 0x61a}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S9, S8, S7, S6, S5, S4, S3, S2, {0x111, 0x61a}]

================================

Block 0x85b
[0x85b:0x8a6]
---
Predecessors: [0x855]
Successors: [0x8d1]
---
0x85b PUSH1 0x1
0x85d DUP1
0x85e SLOAD
0x85f PUSH1 0xff
0x861 NOT
0x862 AND
0x863 DUP2
0x864 OR
0x865 SWAP1
0x866 SSTORE
0x867 TIMESTAMP
0x868 PUSH1 0x4
0x86a SSTORE
0x86b PUSH1 0x5
0x86d SLOAD
0x86e PUSH1 0x40
0x870 DUP1
0x871 MLOAD
0x872 SWAP2
0x873 DUP3
0x874 MSTORE
0x875 MLOAD
0x876 PUSH32 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x897 SWAP2
0x898 DUP2
0x899 SWAP1
0x89a SUB
0x89b PUSH1 0x20
0x89d ADD
0x89e SWAP1
0x89f LOG1
0x8a0 PUSH2 0x8a7
0x8a3 PUSH2 0x8d1
0x8a6 JUMP
---
0x85b: V678 = 0x1
0x85e: V679 = S[0x1]
0x85f: V680 = 0xff
0x861: V681 = NOT 0xff
0x862: V682 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V679
0x864: V683 = OR 0x1 V682
0x866: S[0x1] = V683
0x867: V684 = TIMESTAMP
0x868: V685 = 0x4
0x86a: S[0x4] = V684
0x86b: V686 = 0x5
0x86d: V687 = S[0x5]
0x86e: V688 = 0x40
0x871: V689 = M[0x40]
0x874: M[V689] = V687
0x875: V690 = M[0x40]
0x876: V691 = 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x89a: V692 = SUB V689 V690
0x89b: V693 = 0x20
0x89d: V694 = ADD 0x20 V692
0x89f: LOG V690 V694 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x8a0: V695 = 0x8a7
0x8a3: V696 = 0x8d1
0x8a6: JUMP 0x8d1
---
Entry stack: [S8, S7, S6, S5, S4, S3, S2, S1, {0x111, 0x61a}]
Stack pops: 0
Stack additions: [0x8a7]
Exit stack: [S8, S7, S6, S5, S4, S3, S2, S1, {0x111, 0x61a}, 0x8a7]

================================

Block 0x8a7
[0x8a7:0x8a8]
---
Predecessors: [0x855, 0xa88]
Successors: [0x111, 0x61a]
---
0x8a7 JUMPDEST
0x8a8 JUMP
---
0x8a7: JUMPDEST 
0x8a8: JUMP S0
---
Entry stack: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x8a9
[0x8a9:0x8c6]
---
Predecessors: [0x278]
Successors: [0x8c7, 0x8cb]
---
0x8a9 JUMPDEST
0x8aa CALLER
0x8ab PUSH1 0x0
0x8ad SWAP1
0x8ae DUP2
0x8af MSTORE
0x8b0 PUSH1 0x20
0x8b2 DUP2
0x8b3 SWAP1
0x8b4 MSTORE
0x8b5 PUSH1 0x40
0x8b7 SWAP1
0x8b8 SHA3
0x8b9 SLOAD
0x8ba PUSH1 0x2
0x8bc SWAP1
0x8bd PUSH1 0xff
0x8bf AND
0x8c0 DUP2
0x8c1 GT
0x8c2 ISZERO
0x8c3 PUSH2 0x8cb
0x8c6 JUMPI
---
0x8a9: JUMPDEST 
0x8aa: V697 = CALLER
0x8ab: V698 = 0x0
0x8af: M[0x0] = V697
0x8b0: V699 = 0x20
0x8b4: M[0x20] = 0x0
0x8b5: V700 = 0x40
0x8b8: V701 = SHA3 0x0 0x40
0x8b9: V702 = S[V701]
0x8ba: V703 = 0x2
0x8bd: V704 = 0xff
0x8bf: V705 = AND 0xff V702
0x8c1: V706 = GT 0x2 V705
0x8c2: V707 = ISZERO V706
0x8c3: V708 = 0x8cb
0x8c6: JUMPI 0x8cb V707
---
Entry stack: [V11, 0x111, V196]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V11, 0x111, V196, 0x2]

================================

Block 0x8c7
[0x8c7:0x8ca]
---
Predecessors: [0x8a9]
Successors: []
---
0x8c7 PUSH1 0x0
0x8c9 DUP1
0x8ca REVERT
---
0x8c7: V709 = 0x0
0x8ca: REVERT 0x0 0x0
---
Entry stack: [V11, 0x111, V196, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, V196, 0x2]

================================

Block 0x8cb
[0x8cb:0x8d0]
---
Predecessors: [0x8a9]
Successors: [0x111]
---
0x8cb JUMPDEST
0x8cc POP
0x8cd PUSH1 0xb
0x8cf SSTORE
0x8d0 JUMP
---
0x8cb: JUMPDEST 
0x8cd: V710 = 0xb
0x8cf: S[0xb] = V196
0x8d0: JUMP 0x111
---
Entry stack: [V11, 0x111, V196, 0x2]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x8d1
[0x8d1:0x8e3]
---
Predecessors: [0x290, 0x85b]
Successors: [0x8e4, 0x8e5]
---
0x8d1 JUMPDEST
0x8d2 PUSH1 0x0
0x8d4 PUSH1 0x1
0x8d6 DUP1
0x8d7 DUP1
0x8d8 SLOAD
0x8d9 PUSH1 0xff
0x8db AND
0x8dc SWAP1
0x8dd DUP2
0x8de GT
0x8df ISZERO
0x8e0 PUSH2 0x8e5
0x8e3 JUMPI
---
0x8d1: JUMPDEST 
0x8d2: V711 = 0x0
0x8d4: V712 = 0x1
0x8d8: V713 = S[0x1]
0x8d9: V714 = 0xff
0x8db: V715 = AND 0xff V713
0x8de: V716 = GT V715 0x1
0x8df: V717 = ISZERO V716
0x8e0: V718 = 0x8e5
0x8e3: JUMPI 0x8e5 V717
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x111, 0x8a7}]
Stack pops: 0
Stack additions: [0x0, 0x1, V715]
Exit stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x111, 0x8a7}, 0x0, 0x1, V715]

================================

Block 0x8e4
[0x8e4:0x8e4]
---
Predecessors: [0x8d1]
Successors: []
---
0x8e4 INVALID
---
0x8e4: INVALID 
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x111, 0x8a7}, 0x0, 0x1, V715]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x111, 0x8a7}, 0x0, 0x1, V715]

================================

Block 0x8e5
[0x8e5:0x8ea]
---
Predecessors: [0x8d1]
Successors: [0x8eb, 0x8ef]
---
0x8e5 JUMPDEST
0x8e6 EQ
0x8e7 PUSH2 0x8ef
0x8ea JUMPI
---
0x8e5: JUMPDEST 
0x8e6: V719 = EQ V715 0x1
0x8e7: V720 = 0x8ef
0x8ea: JUMPI 0x8ef V719
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x111, 0x8a7}, 0x0, 0x1, V715]
Stack pops: 2
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x111, 0x8a7}, 0x0]

================================

Block 0x8eb
[0x8eb:0x8ee]
---
Predecessors: [0x8e5]
Successors: []
---
0x8eb PUSH1 0x0
0x8ed DUP1
0x8ee REVERT
---
0x8eb: V721 = 0x0
0x8ee: REVERT 0x0 0x0
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x111, 0x8a7}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x111, 0x8a7}, 0x0]

================================

Block 0x8ef
[0x8ef:0x950]
---
Predecessors: [0x8e5]
Successors: [0x951, 0x955]
---
0x8ef JUMPDEST
0x8f0 PUSH1 0x7
0x8f2 SLOAD
0x8f3 PUSH1 0x40
0x8f5 DUP1
0x8f6 MLOAD
0x8f7 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x918 DUP2
0x919 MSTORE
0x91a ADDRESS
0x91b PUSH1 0x4
0x91d DUP3
0x91e ADD
0x91f MSTORE
0x920 SWAP1
0x921 MLOAD
0x922 PUSH1 0x1
0x924 PUSH1 0xa0
0x926 PUSH1 0x2
0x928 EXP
0x929 SUB
0x92a SWAP1
0x92b SWAP3
0x92c AND
0x92d SWAP2
0x92e PUSH4 0x70a08231
0x933 SWAP2
0x934 PUSH1 0x24
0x936 DUP1
0x937 DUP3
0x938 ADD
0x939 SWAP3
0x93a PUSH1 0x20
0x93c SWAP3
0x93d SWAP1
0x93e SWAP2
0x93f SWAP1
0x940 DUP3
0x941 SWAP1
0x942 SUB
0x943 ADD
0x944 DUP2
0x945 PUSH1 0x0
0x947 DUP8
0x948 DUP1
0x949 EXTCODESIZE
0x94a ISZERO
0x94b DUP1
0x94c ISZERO
0x94d PUSH2 0x955
0x950 JUMPI
---
0x8ef: JUMPDEST 
0x8f0: V722 = 0x7
0x8f2: V723 = S[0x7]
0x8f3: V724 = 0x40
0x8f6: V725 = M[0x40]
0x8f7: V726 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x919: M[V725] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x91a: V727 = ADDRESS
0x91b: V728 = 0x4
0x91e: V729 = ADD V725 0x4
0x91f: M[V729] = V727
0x921: V730 = M[0x40]
0x922: V731 = 0x1
0x924: V732 = 0xa0
0x926: V733 = 0x2
0x928: V734 = EXP 0x2 0xa0
0x929: V735 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92c: V736 = AND V723 0xffffffffffffffffffffffffffffffffffffffff
0x92e: V737 = 0x70a08231
0x934: V738 = 0x24
0x938: V739 = ADD V725 0x24
0x93a: V740 = 0x20
0x942: V741 = SUB V725 V730
0x943: V742 = ADD V741 0x24
0x945: V743 = 0x0
0x949: V744 = EXTCODESIZE V736
0x94a: V745 = ISZERO V744
0x94c: V746 = ISZERO V745
0x94d: V747 = 0x955
0x950: JUMPI 0x955 V746
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x111, 0x8a7}, 0x0]
Stack pops: 0
Stack additions: [V736, 0x70a08231, V739, 0x20, V730, V742, V730, 0x0, V736, V745]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x111, 0x8a7}, 0x0, V736, 0x70a08231, V739, 0x20, V730, V742, V730, 0x0, V736, V745]

================================

Block 0x951
[0x951:0x954]
---
Predecessors: [0x8ef]
Successors: []
---
0x951 PUSH1 0x0
0x953 DUP1
0x954 REVERT
---
0x951: V748 = 0x0
0x954: REVERT 0x0 0x0
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, {0x111, 0x8a7}, 0x0, V736, 0x70a08231, V739, 0x20, V730, V742, V730, 0x0, V736, V745]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, {0x111, 0x8a7}, 0x0, V736, 0x70a08231, V739, 0x20, V730, V742, V730, 0x0, V736, V745]

================================

Block 0x955
[0x955:0x95f]
---
Predecessors: [0x8ef]
Successors: [0x960, 0x969]
---
0x955 JUMPDEST
0x956 POP
0x957 GAS
0x958 CALL
0x959 ISZERO
0x95a DUP1
0x95b ISZERO
0x95c PUSH2 0x969
0x95f JUMPI
---
0x955: JUMPDEST 
0x957: V749 = GAS
0x958: V750 = CALL V749 V736 0x0 V730 V742 V730 0x20
0x959: V751 = ISZERO V750
0x95b: V752 = ISZERO V751
0x95c: V753 = 0x969
0x95f: JUMPI 0x969 V752
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, {0x111, 0x8a7}, 0x0, V736, 0x70a08231, V739, 0x20, V730, V742, V730, 0x0, V736, V745]
Stack pops: 7
Stack additions: [V751]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, {0x111, 0x8a7}, 0x0, V736, 0x70a08231, V739, V751]

================================

Block 0x960
[0x960:0x968]
---
Predecessors: [0x955]
Successors: []
---
0x960 RETURNDATASIZE
0x961 PUSH1 0x0
0x963 DUP1
0x964 RETURNDATACOPY
0x965 RETURNDATASIZE
0x966 PUSH1 0x0
0x968 REVERT
---
0x960: V754 = RETURNDATASIZE
0x961: V755 = 0x0
0x964: RETURNDATACOPY 0x0 0x0 V754
0x965: V756 = RETURNDATASIZE
0x966: V757 = 0x0
0x968: REVERT 0x0 V756
---
Entry stack: [0x111, 0x0, 0x0, S10, S9, S8, S7, S6, {0x111, 0x8a7}, 0x0, S3, 0x70a08231, S1, V751]
Stack pops: 0
Stack additions: []
Exit stack: [0x111, 0x0, 0x0, S10, S9, S8, S7, S6, {0x111, 0x8a7}, 0x0, S3, 0x70a08231, S1, V751]

================================

Block 0x969
[0x969:0x97a]
---
Predecessors: [0x955]
Successors: [0x97b, 0x97f]
---
0x969 JUMPDEST
0x96a POP
0x96b POP
0x96c POP
0x96d POP
0x96e PUSH1 0x40
0x970 MLOAD
0x971 RETURNDATASIZE
0x972 PUSH1 0x20
0x974 DUP2
0x975 LT
0x976 ISZERO
0x977 PUSH2 0x97f
0x97a JUMPI
---
0x969: JUMPDEST 
0x96e: V758 = 0x40
0x970: V759 = M[0x40]
0x971: V760 = RETURNDATASIZE
0x972: V761 = 0x20
0x975: V762 = LT V760 0x20
0x976: V763 = ISZERO V762
0x977: V764 = 0x97f
0x97a: JUMPI 0x97f V763
---
Entry stack: [0x111, 0x0, 0x0, S10, S9, S8, S7, S6, {0x111, 0x8a7}, 0x0, S3, 0x70a08231, S1, V751]
Stack pops: 4
Stack additions: [V759, V760]
Exit stack: [0x111, 0x0, 0x0, S10, S9, S8, S7, S6, {0x111, 0x8a7}, 0x0, V759, V760]

================================

Block 0x97b
[0x97b:0x97e]
---
Predecessors: [0x969]
Successors: []
---
0x97b PUSH1 0x0
0x97d DUP1
0x97e REVERT
---
0x97b: V765 = 0x0
0x97e: REVERT 0x0 0x0
---
Entry stack: [0x111, 0x0, 0x0, S8, S7, S6, S5, S4, {0x111, 0x8a7}, 0x0, V759, V760]
Stack pops: 0
Stack additions: []
Exit stack: [0x111, 0x0, 0x0, S8, S7, S6, S5, S4, {0x111, 0x8a7}, 0x0, V759, V760]

================================

Block 0x97f
[0x97f:0x9ef]
---
Predecessors: [0x969]
Successors: [0x9f0, 0x9f4]
---
0x97f JUMPDEST
0x980 POP
0x981 MLOAD
0x982 PUSH1 0x7
0x984 SLOAD
0x985 PUSH1 0x8
0x987 SLOAD
0x988 PUSH1 0x40
0x98a DUP1
0x98b MLOAD
0x98c PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x9ad DUP2
0x9ae MSTORE
0x9af PUSH1 0x1
0x9b1 PUSH1 0xa0
0x9b3 PUSH1 0x2
0x9b5 EXP
0x9b6 SUB
0x9b7 SWAP3
0x9b8 DUP4
0x9b9 AND
0x9ba PUSH1 0x4
0x9bc DUP3
0x9bd ADD
0x9be MSTORE
0x9bf PUSH1 0x24
0x9c1 DUP2
0x9c2 ADD
0x9c3 DUP6
0x9c4 SWAP1
0x9c5 MSTORE
0x9c6 SWAP1
0x9c7 MLOAD
0x9c8 SWAP4
0x9c9 SWAP5
0x9ca POP
0x9cb SWAP2
0x9cc AND
0x9cd SWAP2
0x9ce PUSH4 0xa9059cbb
0x9d3 SWAP2
0x9d4 PUSH1 0x44
0x9d6 DUP1
0x9d7 DUP3
0x9d8 ADD
0x9d9 SWAP3
0x9da PUSH1 0x0
0x9dc SWAP3
0x9dd SWAP1
0x9de SWAP2
0x9df SWAP1
0x9e0 DUP3
0x9e1 SWAP1
0x9e2 SUB
0x9e3 ADD
0x9e4 DUP2
0x9e5 DUP4
0x9e6 DUP8
0x9e7 DUP1
0x9e8 EXTCODESIZE
0x9e9 ISZERO
0x9ea DUP1
0x9eb ISZERO
0x9ec PUSH2 0x9f4
0x9ef JUMPI
---
0x97f: JUMPDEST 
0x981: V766 = M[V759]
0x982: V767 = 0x7
0x984: V768 = S[0x7]
0x985: V769 = 0x8
0x987: V770 = S[0x8]
0x988: V771 = 0x40
0x98b: V772 = M[0x40]
0x98c: V773 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x9ae: M[V772] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x9af: V774 = 0x1
0x9b1: V775 = 0xa0
0x9b3: V776 = 0x2
0x9b5: V777 = EXP 0x2 0xa0
0x9b6: V778 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b9: V779 = AND 0xffffffffffffffffffffffffffffffffffffffff V770
0x9ba: V780 = 0x4
0x9bd: V781 = ADD V772 0x4
0x9be: M[V781] = V779
0x9bf: V782 = 0x24
0x9c2: V783 = ADD V772 0x24
0x9c5: M[V783] = V766
0x9c7: V784 = M[0x40]
0x9cc: V785 = AND V768 0xffffffffffffffffffffffffffffffffffffffff
0x9ce: V786 = 0xa9059cbb
0x9d4: V787 = 0x44
0x9d8: V788 = ADD V772 0x44
0x9da: V789 = 0x0
0x9e2: V790 = SUB V772 V784
0x9e3: V791 = ADD V790 0x44
0x9e8: V792 = EXTCODESIZE V785
0x9e9: V793 = ISZERO V792
0x9eb: V794 = ISZERO V793
0x9ec: V795 = 0x9f4
0x9ef: JUMPI 0x9f4 V794
---
Entry stack: [0x111, 0x0, 0x0, S8, S7, S6, S5, S4, {0x111, 0x8a7}, 0x0, V759, V760]
Stack pops: 3
Stack additions: [V766, V785, 0xa9059cbb, V788, 0x0, V784, V791, V784, 0x0, V785, V793]
Exit stack: [0x111, 0x0, 0x0, S8, S7, S6, S5, S4, {0x111, 0x8a7}, V766, V785, 0xa9059cbb, V788, 0x0, V784, V791, V784, 0x0, V785, V793]

================================

Block 0x9f0
[0x9f0:0x9f3]
---
Predecessors: [0x97f]
Successors: []
---
0x9f0 PUSH1 0x0
0x9f2 DUP1
0x9f3 REVERT
---
0x9f0: V796 = 0x0
0x9f3: REVERT 0x0 0x0
---
Entry stack: [0x111, 0x0, 0x0, S16, S15, S14, S13, S12, {0x111, 0x8a7}, V766, V785, 0xa9059cbb, V788, 0x0, V784, V791, V784, 0x0, V785, V793]
Stack pops: 0
Stack additions: []
Exit stack: [0x111, 0x0, 0x0, S16, S15, S14, S13, S12, {0x111, 0x8a7}, V766, V785, 0xa9059cbb, V788, 0x0, V784, V791, V784, 0x0, V785, V793]

================================

Block 0x9f4
[0x9f4:0x9fe]
---
Predecessors: [0x97f]
Successors: [0x9ff, 0xa08]
---
0x9f4 JUMPDEST
0x9f5 POP
0x9f6 GAS
0x9f7 CALL
0x9f8 ISZERO
0x9f9 DUP1
0x9fa ISZERO
0x9fb PUSH2 0xa08
0x9fe JUMPI
---
0x9f4: JUMPDEST 
0x9f6: V797 = GAS
0x9f7: V798 = CALL V797 V785 0x0 V784 V791 V784 0x0
0x9f8: V799 = ISZERO V798
0x9fa: V800 = ISZERO V799
0x9fb: V801 = 0xa08
0x9fe: JUMPI 0xa08 V800
---
Entry stack: [0x111, 0x0, 0x0, S16, S15, S14, S13, S12, {0x111, 0x8a7}, V766, V785, 0xa9059cbb, V788, 0x0, V784, V791, V784, 0x0, V785, V793]
Stack pops: 7
Stack additions: [V799]
Exit stack: [0x111, 0x0, 0x0, S16, S15, S14, S13, S12, {0x111, 0x8a7}, V766, V785, 0xa9059cbb, V788, V799]

================================

Block 0x9ff
[0x9ff:0xa07]
---
Predecessors: [0x9f4]
Successors: []
---
0x9ff RETURNDATASIZE
0xa00 PUSH1 0x0
0xa02 DUP1
0xa03 RETURNDATACOPY
0xa04 RETURNDATASIZE
0xa05 PUSH1 0x0
0xa07 REVERT
---
0x9ff: V802 = RETURNDATASIZE
0xa00: V803 = 0x0
0xa03: RETURNDATACOPY 0x0 0x0 V802
0xa04: V804 = RETURNDATASIZE
0xa05: V805 = 0x0
0xa07: REVERT 0x0 V804
---
Entry stack: [0x111, 0x0, 0x0, S10, S9, S8, S7, S6, {0x111, 0x8a7}, S4, S3, 0xa9059cbb, S1, V799]
Stack pops: 0
Stack additions: []
Exit stack: [0x111, 0x0, 0x0, S10, S9, S8, S7, S6, {0x111, 0x8a7}, S4, S3, 0xa9059cbb, S1, V799]

================================

Block 0xa08
[0xa08:0xa7e]
---
Predecessors: [0x9f4]
Successors: [0xa7f, 0xa88]
---
0xa08 JUMPDEST
0xa09 POP
0xa0a POP
0xa0b PUSH1 0x8
0xa0d SLOAD
0xa0e PUSH1 0x40
0xa10 DUP1
0xa11 MLOAD
0xa12 DUP6
0xa13 DUP2
0xa14 MSTORE
0xa15 SWAP1
0xa16 MLOAD
0xa17 PUSH1 0x1
0xa19 PUSH1 0xa0
0xa1b PUSH1 0x2
0xa1d EXP
0xa1e SUB
0xa1f SWAP1
0xa20 SWAP3
0xa21 AND
0xa22 SWAP4
0xa23 POP
0xa24 PUSH32 0xaeb3ebd09ef847781ae7d846d2c9afbbb08cfbcad76e92d3206303aa30d24226
0xa45 SWAP3
0xa46 POP
0xa47 DUP2
0xa48 SWAP1
0xa49 SUB
0xa4a PUSH1 0x20
0xa4c ADD
0xa4d SWAP1
0xa4e LOG2
0xa4f PUSH1 0x9
0xa51 SLOAD
0xa52 PUSH1 0x40
0xa54 MLOAD
0xa55 PUSH1 0x1
0xa57 PUSH1 0xa0
0xa59 PUSH1 0x2
0xa5b EXP
0xa5c SUB
0xa5d SWAP1
0xa5e SWAP2
0xa5f AND
0xa60 SWAP1
0xa61 ADDRESS
0xa62 BALANCE
0xa63 DUP1
0xa64 ISZERO
0xa65 PUSH2 0x8fc
0xa68 MUL
0xa69 SWAP2
0xa6a PUSH1 0x0
0xa6c DUP2
0xa6d DUP2
0xa6e DUP2
0xa6f DUP6
0xa70 DUP9
0xa71 DUP9
0xa72 CALL
0xa73 SWAP4
0xa74 POP
0xa75 POP
0xa76 POP
0xa77 POP
0xa78 ISZERO
0xa79 DUP1
0xa7a ISZERO
0xa7b PUSH2 0xa88
0xa7e JUMPI
---
0xa08: JUMPDEST 
0xa0b: V806 = 0x8
0xa0d: V807 = S[0x8]
0xa0e: V808 = 0x40
0xa11: V809 = M[0x40]
0xa14: M[V809] = S4
0xa16: V810 = M[0x40]
0xa17: V811 = 0x1
0xa19: V812 = 0xa0
0xa1b: V813 = 0x2
0xa1d: V814 = EXP 0x2 0xa0
0xa1e: V815 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa21: V816 = AND V807 0xffffffffffffffffffffffffffffffffffffffff
0xa24: V817 = 0xaeb3ebd09ef847781ae7d846d2c9afbbb08cfbcad76e92d3206303aa30d24226
0xa49: V818 = SUB V809 V810
0xa4a: V819 = 0x20
0xa4c: V820 = ADD 0x20 V818
0xa4e: LOG V810 V820 0xaeb3ebd09ef847781ae7d846d2c9afbbb08cfbcad76e92d3206303aa30d24226 V816
0xa4f: V821 = 0x9
0xa51: V822 = S[0x9]
0xa52: V823 = 0x40
0xa54: V824 = M[0x40]
0xa55: V825 = 0x1
0xa57: V826 = 0xa0
0xa59: V827 = 0x2
0xa5b: V828 = EXP 0x2 0xa0
0xa5c: V829 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5f: V830 = AND V822 0xffffffffffffffffffffffffffffffffffffffff
0xa61: V831 = ADDRESS
0xa62: V832 = BALANCE V831
0xa64: V833 = ISZERO V832
0xa65: V834 = 0x8fc
0xa68: V835 = MUL 0x8fc V833
0xa6a: V836 = 0x0
0xa72: V837 = CALL V835 V830 V832 V824 0x0 V824 0x0
0xa78: V838 = ISZERO V837
0xa7a: V839 = ISZERO V838
0xa7b: V840 = 0xa88
0xa7e: JUMPI 0xa88 V839
---
Entry stack: [0x111, 0x0, 0x0, S10, S9, S8, S7, S6, {0x111, 0x8a7}, S4, S3, 0xa9059cbb, S1, V799]
Stack pops: 5
Stack additions: [S4, V838]
Exit stack: [0x111, 0x0, 0x0, S10, S9, S8, S7, S6, {0x111, 0x8a7}, S4, V838]

================================

Block 0xa7f
[0xa7f:0xa87]
---
Predecessors: [0xa08]
Successors: []
---
0xa7f RETURNDATASIZE
0xa80 PUSH1 0x0
0xa82 DUP1
0xa83 RETURNDATACOPY
0xa84 RETURNDATASIZE
0xa85 PUSH1 0x0
0xa87 REVERT
---
0xa7f: V841 = RETURNDATASIZE
0xa80: V842 = 0x0
0xa83: RETURNDATACOPY 0x0 0x0 V841
0xa84: V843 = RETURNDATASIZE
0xa85: V844 = 0x0
0xa87: REVERT 0x0 V843
---
Entry stack: [0x111, 0x0, 0x0, S7, S6, S5, S4, S3, {0x111, 0x8a7}, S1, V838]
Stack pops: 0
Stack additions: []
Exit stack: [0x111, 0x0, 0x0, S7, S6, S5, S4, S3, {0x111, 0x8a7}, S1, V838]

================================

Block 0xa88
[0xa88:0xac3]
---
Predecessors: [0xa08]
Successors: [0x111, 0x8a7]
---
0xa88 JUMPDEST
0xa89 POP
0xa8a PUSH1 0x9
0xa8c SLOAD
0xa8d PUSH1 0x40
0xa8f MLOAD
0xa90 PUSH1 0x1
0xa92 PUSH1 0xa0
0xa94 PUSH1 0x2
0xa96 EXP
0xa97 SUB
0xa98 SWAP1
0xa99 SWAP2
0xa9a AND
0xa9b SWAP1
0xa9c PUSH32 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb
0xabd SWAP1
0xabe PUSH1 0x0
0xac0 SWAP1
0xac1 LOG2
0xac2 POP
0xac3 JUMP
---
0xa88: JUMPDEST 
0xa8a: V845 = 0x9
0xa8c: V846 = S[0x9]
0xa8d: V847 = 0x40
0xa8f: V848 = M[0x40]
0xa90: V849 = 0x1
0xa92: V850 = 0xa0
0xa94: V851 = 0x2
0xa96: V852 = EXP 0x2 0xa0
0xa97: V853 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa9a: V854 = AND V846 0xffffffffffffffffffffffffffffffffffffffff
0xa9c: V855 = 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb
0xabe: V856 = 0x0
0xac1: LOG V848 0x0 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb V854
0xac3: JUMP {0x111, 0x8a7}
---
Entry stack: [0x111, 0x0, 0x0, S7, S6, S5, S4, S3, {0x111, 0x8a7}, S1, V838]
Stack pops: 3
Stack additions: []
Exit stack: [0x111, 0x0, 0x0, S7, S6, S5, S4, S3]

================================

Block 0xac4
[0xac4:0xac9]
---
Predecessors: [0x2a5]
Successors: [0x16e]
---
0xac4 JUMPDEST
0xac5 PUSH1 0x3
0xac7 SLOAD
0xac8 DUP2
0xac9 JUMP
---
0xac4: JUMPDEST 
0xac5: V857 = 0x3
0xac7: V858 = S[0x3]
0xac9: JUMP 0x16e
---
Entry stack: [V11, 0x16e]
Stack pops: 1
Stack additions: [S0, V858]
Exit stack: [V11, 0x16e, V858]

================================

Block 0xaca
[0xaca:0xad2]
---
Predecessors: [0x2ba]
Successors: [0x2c3]
---
0xaca JUMPDEST
0xacb PUSH1 0x1
0xacd SLOAD
0xace PUSH1 0xff
0xad0 AND
0xad1 DUP2
0xad2 JUMP
---
0xaca: JUMPDEST 
0xacb: V859 = 0x1
0xacd: V860 = S[0x1]
0xace: V861 = 0xff
0xad0: V862 = AND 0xff V860
0xad2: JUMP 0x2c3
---
Entry stack: [V11, 0x2c3]
Stack pops: 1
Stack additions: [S0, V862]
Exit stack: [V11, 0x2c3, V862]

================================

Block 0xad3
[0xad3:0xad8]
---
Predecessors: [0x2f3]
Successors: [0x16e]
---
0xad3 JUMPDEST
0xad4 PUSH1 0xb
0xad6 SLOAD
0xad7 DUP2
0xad8 JUMP
---
0xad3: JUMPDEST 
0xad4: V863 = 0xb
0xad6: V864 = S[0xb]
0xad8: JUMP 0x16e
---
Entry stack: [V11, 0x16e]
Stack pops: 1
Stack additions: [S0, V864]
Exit stack: [V11, 0x16e, V864]

================================

Block 0xad9
[0xad9:0xade]
---
Predecessors: [0x308]
Successors: [0x16e]
---
0xad9 JUMPDEST
0xada PUSH1 0x5
0xadc SLOAD
0xadd DUP2
0xade JUMP
---
0xad9: JUMPDEST 
0xada: V865 = 0x5
0xadc: V866 = S[0x5]
0xade: JUMP 0x16e
---
Entry stack: [V11, 0x16e]
Stack pops: 1
Stack additions: [S0, V866]
Exit stack: [V11, 0x16e, V866]

================================

Block 0xadf
[0xadf:0xafc]
---
Predecessors: [0x31d]
Successors: [0xafd, 0xb01]
---
0xadf JUMPDEST
0xae0 CALLER
0xae1 PUSH1 0x0
0xae3 SWAP1
0xae4 DUP2
0xae5 MSTORE
0xae6 PUSH1 0x20
0xae8 DUP2
0xae9 SWAP1
0xaea MSTORE
0xaeb PUSH1 0x40
0xaed SWAP1
0xaee SHA3
0xaef SLOAD
0xaf0 PUSH1 0x2
0xaf2 SWAP1
0xaf3 PUSH1 0xff
0xaf5 AND
0xaf6 DUP2
0xaf7 GT
0xaf8 ISZERO
0xaf9 PUSH2 0xb01
0xafc JUMPI
---
0xadf: JUMPDEST 
0xae0: V867 = CALLER
0xae1: V868 = 0x0
0xae5: M[0x0] = V867
0xae6: V869 = 0x20
0xaea: M[0x20] = 0x0
0xaeb: V870 = 0x40
0xaee: V871 = SHA3 0x0 0x40
0xaef: V872 = S[V871]
0xaf0: V873 = 0x2
0xaf3: V874 = 0xff
0xaf5: V875 = AND 0xff V872
0xaf7: V876 = GT 0x2 V875
0xaf8: V877 = ISZERO V876
0xaf9: V878 = 0xb01
0xafc: JUMPI 0xb01 V877
---
Entry stack: [V11, 0x111, V253, V257]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V11, 0x111, V253, V257, 0x2]

================================

Block 0xafd
[0xafd:0xb00]
---
Predecessors: [0xadf]
Successors: []
---
0xafd PUSH1 0x0
0xaff DUP1
0xb00 REVERT
---
0xafd: V879 = 0x0
0xb00: REVERT 0x0 0x0
---
Entry stack: [V11, 0x111, V253, V257, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, V253, V257, 0x2]

================================

Block 0xb01
[0xb01:0xb11]
---
Predecessors: [0xadf]
Successors: [0xb12, 0xb16]
---
0xb01 JUMPDEST
0xb02 PUSH1 0x1
0xb04 PUSH1 0xa0
0xb06 PUSH1 0x2
0xb08 EXP
0xb09 SUB
0xb0a DUP4
0xb0b AND
0xb0c ISZERO
0xb0d ISZERO
0xb0e PUSH2 0xb16
0xb11 JUMPI
---
0xb01: JUMPDEST 
0xb02: V880 = 0x1
0xb04: V881 = 0xa0
0xb06: V882 = 0x2
0xb08: V883 = EXP 0x2 0xa0
0xb09: V884 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0b: V885 = AND V253 0xffffffffffffffffffffffffffffffffffffffff
0xb0c: V886 = ISZERO V885
0xb0d: V887 = ISZERO V886
0xb0e: V888 = 0xb16
0xb11: JUMPI 0xb16 V887
---
Entry stack: [V11, 0x111, V253, V257, 0x2]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x111, V253, V257, 0x2]

================================

Block 0xb12
[0xb12:0xb15]
---
Predecessors: [0xb01]
Successors: []
---
0xb12 PUSH1 0x0
0xb14 DUP1
0xb15 REVERT
---
0xb12: V889 = 0x0
0xb15: REVERT 0x0 0x0
---
Entry stack: [V11, 0x111, V253, V257, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, V253, V257, 0x2]

================================

Block 0xb16
[0xb16:0xb79]
---
Predecessors: [0xb01]
Successors: [0x111]
---
0xb16 JUMPDEST
0xb17 PUSH1 0x1
0xb19 PUSH1 0xa0
0xb1b PUSH1 0x2
0xb1d EXP
0xb1e SUB
0xb1f DUP4
0xb20 AND
0xb21 PUSH1 0x0
0xb23 DUP2
0xb24 DUP2
0xb25 MSTORE
0xb26 PUSH1 0x20
0xb28 DUP2
0xb29 DUP2
0xb2a MSTORE
0xb2b PUSH1 0x40
0xb2d SWAP2
0xb2e DUP3
0xb2f SWAP1
0xb30 SHA3
0xb31 DUP1
0xb32 SLOAD
0xb33 PUSH1 0xff
0xb35 NOT
0xb36 AND
0xb37 PUSH1 0xff
0xb39 DUP8
0xb3a AND
0xb3b SWAP1
0xb3c DUP2
0xb3d OR
0xb3e SWAP1
0xb3f SWAP2
0xb40 SSTORE
0xb41 DUP3
0xb42 MLOAD
0xb43 SWAP4
0xb44 DUP5
0xb45 MSTORE
0xb46 SWAP1
0xb47 DUP4
0xb48 ADD
0xb49 MSTORE
0xb4a DUP1
0xb4b MLOAD
0xb4c PUSH32 0x9b810ace296ded7f98c91fe8d22aa69c4ef152d64f1fbf1cfa9d6bb10627b300
0xb6d SWAP3
0xb6e DUP2
0xb6f SWAP1
0xb70 SUB
0xb71 SWAP1
0xb72 SWAP2
0xb73 ADD
0xb74 SWAP1
0xb75 LOG1
0xb76 POP
0xb77 POP
0xb78 POP
0xb79 JUMP
---
0xb16: JUMPDEST 
0xb17: V890 = 0x1
0xb19: V891 = 0xa0
0xb1b: V892 = 0x2
0xb1d: V893 = EXP 0x2 0xa0
0xb1e: V894 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb20: V895 = AND V253 0xffffffffffffffffffffffffffffffffffffffff
0xb21: V896 = 0x0
0xb25: M[0x0] = V895
0xb26: V897 = 0x20
0xb2a: M[0x20] = 0x0
0xb2b: V898 = 0x40
0xb30: V899 = SHA3 0x0 0x40
0xb32: V900 = S[V899]
0xb33: V901 = 0xff
0xb35: V902 = NOT 0xff
0xb36: V903 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V900
0xb37: V904 = 0xff
0xb3a: V905 = AND V257 0xff
0xb3d: V906 = OR V905 V903
0xb40: S[V899] = V906
0xb42: V907 = M[0x40]
0xb45: M[V907] = V895
0xb48: V908 = ADD V907 0x20
0xb49: M[V908] = V905
0xb4b: V909 = M[0x40]
0xb4c: V910 = 0x9b810ace296ded7f98c91fe8d22aa69c4ef152d64f1fbf1cfa9d6bb10627b300
0xb70: V911 = SUB V907 V909
0xb73: V912 = ADD 0x40 V911
0xb75: LOG V909 V912 0x9b810ace296ded7f98c91fe8d22aa69c4ef152d64f1fbf1cfa9d6bb10627b300
0xb79: JUMP 0x111
---
Entry stack: [V11, 0x111, V253, V257, 0x2]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0xb7a
[0xb7a:0xb7f]
---
Predecessors: [0x344]
Successors: [0x16e]
---
0xb7a JUMPDEST
0xb7b PUSH1 0x2
0xb7d SLOAD
0xb7e DUP2
0xb7f JUMP
---
0xb7a: JUMPDEST 
0xb7b: V913 = 0x2
0xb7d: V914 = S[0x2]
0xb7f: JUMP 0x16e
---
Entry stack: [V11, 0x16e]
Stack pops: 1
Stack additions: [S0, V914]
Exit stack: [V11, 0x16e, V914]

================================

Block 0xb80
[0xb80:0xb94]
---
Predecessors: [0x359]
Successors: [0x36e]
---
0xb80 JUMPDEST
0xb81 PUSH1 0x0
0xb83 PUSH1 0x20
0xb85 DUP2
0xb86 SWAP1
0xb87 MSTORE
0xb88 SWAP1
0xb89 DUP2
0xb8a MSTORE
0xb8b PUSH1 0x40
0xb8d SWAP1
0xb8e SHA3
0xb8f SLOAD
0xb90 PUSH1 0xff
0xb92 AND
0xb93 DUP2
0xb94 JUMP
---
0xb80: JUMPDEST 
0xb81: V915 = 0x0
0xb83: V916 = 0x20
0xb87: M[0x20] = 0x0
0xb8a: M[0x0] = V277
0xb8b: V917 = 0x40
0xb8e: V918 = SHA3 0x0 0x40
0xb8f: V919 = S[V918]
0xb90: V920 = 0xff
0xb92: V921 = AND 0xff V919
0xb94: JUMP 0x36e
---
Entry stack: [V11, 0x36e, V277]
Stack pops: 2
Stack additions: [S1, V921]
Exit stack: [V11, 0x36e, V921]

================================

Block 0xb95
[0xb95:0xbb2]
---
Predecessors: [0x390]
Successors: [0xbb3, 0xbb7]
---
0xb95 JUMPDEST
0xb96 CALLER
0xb97 PUSH1 0x0
0xb99 SWAP1
0xb9a DUP2
0xb9b MSTORE
0xb9c PUSH1 0x20
0xb9e DUP2
0xb9f SWAP1
0xba0 MSTORE
0xba1 PUSH1 0x40
0xba3 SWAP1
0xba4 SHA3
0xba5 SLOAD
0xba6 PUSH1 0x2
0xba8 SWAP1
0xba9 PUSH1 0xff
0xbab AND
0xbac DUP2
0xbad GT
0xbae ISZERO
0xbaf PUSH2 0xbb7
0xbb2 JUMPI
---
0xb95: JUMPDEST 
0xb96: V922 = CALLER
0xb97: V923 = 0x0
0xb9b: M[0x0] = V922
0xb9c: V924 = 0x20
0xba0: M[0x20] = 0x0
0xba1: V925 = 0x40
0xba4: V926 = SHA3 0x0 0x40
0xba5: V927 = S[V926]
0xba6: V928 = 0x2
0xba9: V929 = 0xff
0xbab: V930 = AND 0xff V927
0xbad: V931 = GT 0x2 V930
0xbae: V932 = ISZERO V931
0xbaf: V933 = 0xbb7
0xbb2: JUMPI 0xbb7 V932
---
Entry stack: [V11, 0x111, V299]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V11, 0x111, V299, 0x2]

================================

Block 0xbb3
[0xbb3:0xbb6]
---
Predecessors: [0xb95]
Successors: []
---
0xbb3 PUSH1 0x0
0xbb5 DUP1
0xbb6 REVERT
---
0xbb3: V934 = 0x0
0xbb6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x111, V299, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x111, V299, 0x2]

================================

Block 0xbb7
[0xbb7:0xbe6]
---
Predecessors: [0xb95]
Successors: [0x111]
---
0xbb7 JUMPDEST
0xbb8 POP
0xbb9 PUSH1 0x9
0xbbb DUP1
0xbbc SLOAD
0xbbd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd2 NOT
0xbd3 AND
0xbd4 PUSH1 0x1
0xbd6 PUSH1 0xa0
0xbd8 PUSH1 0x2
0xbda EXP
0xbdb SUB
0xbdc SWAP3
0xbdd SWAP1
0xbde SWAP3
0xbdf AND
0xbe0 SWAP2
0xbe1 SWAP1
0xbe2 SWAP2
0xbe3 OR
0xbe4 SWAP1
0xbe5 SSTORE
0xbe6 JUMP
---
0xbb7: JUMPDEST 
0xbb9: V935 = 0x9
0xbbc: V936 = S[0x9]
0xbbd: V937 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd2: V938 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xbd3: V939 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V936
0xbd4: V940 = 0x1
0xbd6: V941 = 0xa0
0xbd8: V942 = 0x2
0xbda: V943 = EXP 0x2 0xa0
0xbdb: V944 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbdf: V945 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0xbe3: V946 = OR V945 V939
0xbe5: S[0x9] = V946
0xbe6: JUMP 0x111
---
Entry stack: [V11, 0x111, V299, 0x2]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0xbe7
[0xbe7:0xbec]
---
Predecessors: [0x3b1]
Successors: [0x16e]
---
0xbe7 JUMPDEST
0xbe8 PUSH1 0x6
0xbea SLOAD
0xbeb DUP2
0xbec JUMP
---
0xbe7: JUMPDEST 
0xbe8: V947 = 0x6
0xbea: V948 = S[0x6]
0xbec: JUMP 0x16e
---
Entry stack: [V11, 0x16e]
Stack pops: 1
Stack additions: [S0, V948]
Exit stack: [V11, 0x16e, V948]

================================

Block 0xbed
[0xbed:0xbf9]
---
Predecessors: [0x41d, 0x43e, 0xc3e]
Successors: [0xbfa, 0xc09]
---
0xbed JUMPDEST
0xbee PUSH1 0x0
0xbf0 DUP3
0xbf1 DUP3
0xbf2 MUL
0xbf3 DUP4
0xbf4 ISZERO
0xbf5 DUP1
0xbf6 PUSH2 0xc09
0xbf9 JUMPI
---
0xbed: JUMPDEST 
0xbee: V949 = 0x0
0xbf2: V950 = MUL {0x3e8, 0xde0b6b3a7640000} S1
0xbf4: V951 = ISZERO S1
0xbf6: V952 = 0xc09
0xbf9: JUMPI 0xc09 V951
---
Entry stack: [0x111, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0x0, S3, {0x437, 0x459, 0xc58}, S1, {0x3e8, 0xde0b6b3a7640000}]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V950, V951]
Exit stack: [0x111, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0x0, S3, {0x437, 0x459, 0xc58}, S1, {0x3e8, 0xde0b6b3a7640000}, 0x0, V950, V951]

================================

Block 0xbfa
[0xbfa:0xc04]
---
Predecessors: [0xbed]
Successors: [0xc05, 0xc06]
---
0xbfa POP
0xbfb DUP3
0xbfc DUP5
0xbfd DUP3
0xbfe DUP2
0xbff ISZERO
0xc00 ISZERO
0xc01 PUSH2 0xc06
0xc04 JUMPI
---
0xbff: V953 = ISZERO S4
0xc00: V954 = ISZERO V953
0xc01: V955 = 0xc06
0xc04: JUMPI 0xc06 V954
---
Entry stack: [0x111, 0x0, 0x0, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x0, 0x0, S6, {0x437, 0x459, 0xc58}, S4, {0x3e8, 0xde0b6b3a7640000}, 0x0, V950, V951]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [0x111, 0x0, 0x0, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x0, 0x0, S6, {0x437, 0x459, 0xc58}, S4, {0x3e8, 0xde0b6b3a7640000}, 0x0, V950, {0x3e8, 0xde0b6b3a7640000}, S4, V950]

================================

Block 0xc05
[0xc05:0xc05]
---
Predecessors: [0xbfa]
Successors: []
---
0xc05 INVALID
---
0xc05: INVALID 
---
Entry stack: [0x111, 0x0, 0x0, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x0, S8, {0x437, 0x459, 0xc58}, S6, {0x3e8, 0xde0b6b3a7640000}, 0x0, V950, {0x3e8, 0xde0b6b3a7640000}, S1, V950]
Stack pops: 0
Stack additions: []
Exit stack: [0x111, 0x0, 0x0, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x0, S8, {0x437, 0x459, 0xc58}, S6, {0x3e8, 0xde0b6b3a7640000}, 0x0, V950, {0x3e8, 0xde0b6b3a7640000}, S1, V950]

================================

Block 0xc06
[0xc06:0xc08]
---
Predecessors: [0xbfa]
Successors: [0xc09]
---
0xc06 JUMPDEST
0xc07 DIV
0xc08 EQ
---
0xc06: JUMPDEST 
0xc07: V956 = DIV V950 S1
0xc08: V957 = EQ V956 {0x3e8, 0xde0b6b3a7640000}
---
Entry stack: [0x111, 0x0, 0x0, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x0, S8, {0x437, 0x459, 0xc58}, S6, {0x3e8, 0xde0b6b3a7640000}, 0x0, V950, {0x3e8, 0xde0b6b3a7640000}, S1, V950]
Stack pops: 3
Stack additions: [V957]
Exit stack: [0x111, 0x0, 0x0, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x0, S8, {0x437, 0x459, 0xc58}, S6, {0x3e8, 0xde0b6b3a7640000}, 0x0, V950, V957]

================================

Block 0xc09
[0xc09:0xc0f]
---
Predecessors: [0xbed, 0xc06]
Successors: [0xc10, 0xc11]
---
0xc09 JUMPDEST
0xc0a ISZERO
0xc0b ISZERO
0xc0c PUSH2 0xc11
0xc0f JUMPI
---
0xc09: JUMPDEST 
0xc0a: V958 = ISZERO S0
0xc0b: V959 = ISZERO V958
0xc0c: V960 = 0xc11
0xc0f: JUMPI 0xc11 V959
---
Entry stack: [0x111, 0x0, 0x0, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x0, 0x0, S6, {0x437, 0x459, 0xc58}, S4, {0x3e8, 0xde0b6b3a7640000}, 0x0, V950, S0]
Stack pops: 1
Stack additions: []
Exit stack: [0x111, 0x0, 0x0, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x0, 0x0, S6, {0x437, 0x459, 0xc58}, S4, {0x3e8, 0xde0b6b3a7640000}, 0x0, V950]

================================

Block 0xc10
[0xc10:0xc10]
---
Predecessors: [0xc09]
Successors: []
---
0xc10 INVALID
---
0xc10: INVALID 
---
Entry stack: [0x111, 0x0, 0x0, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, 0x0, S5, {0x437, 0x459, 0xc58}, S3, {0x3e8, 0xde0b6b3a7640000}, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x111, 0x0, 0x0, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, 0x0, S5, {0x437, 0x459, 0xc58}, S3, {0x3e8, 0xde0b6b3a7640000}, 0x0, S0]

================================

Block 0xc11
[0xc11:0xc17]
---
Predecessors: [0xc09, 0xc2f]
Successors: [0x437, 0x459, 0x486, 0x4b0, 0x4ce, 0xc58]
---
0xc11 JUMPDEST
0xc12 SWAP4
0xc13 SWAP3
0xc14 POP
0xc15 POP
0xc16 POP
0xc17 JUMP
---
0xc11: JUMPDEST 
0xc17: JUMP S4
---
Entry stack: [0x111, 0x0, 0x0, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [0x111, 0x0, 0x0, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S0]

================================

Block 0xc18
[0xc18:0xc24]
---
Predecessors: [0x45c, 0xc58]
Successors: [0xc25, 0xc26]
---
0xc18 JUMPDEST
0xc19 PUSH1 0x0
0xc1b DUP1
0xc1c DUP3
0xc1d DUP5
0xc1e DUP2
0xc1f ISZERO
0xc20 ISZERO
0xc21 PUSH2 0xc26
0xc24 JUMPI
---
0xc18: JUMPDEST 
0xc19: V961 = 0x0
0xc1f: V962 = ISZERO S0
0xc20: V963 = ISZERO V962
0xc21: V964 = 0xc26
0xc24: JUMPI 0xc26 V963
---
Entry stack: [0x111, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x477, 0xc6a}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [0x111, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x477, 0xc6a}, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0xc25
[0xc25:0xc25]
---
Predecessors: [0xc18]
Successors: []
---
0xc25 INVALID
---
0xc25: INVALID 
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x0, S8, S7, {0x477, 0xc6a}, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x0, S8, S7, {0x477, 0xc6a}, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0xc26
[0xc26:0xc2e]
---
Predecessors: [0xc18]
Successors: [0x477, 0xc6a]
---
0xc26 JUMPDEST
0xc27 DIV
0xc28 SWAP5
0xc29 SWAP4
0xc2a POP
0xc2b POP
0xc2c POP
0xc2d POP
0xc2e JUMP
---
0xc26: JUMPDEST 
0xc27: V965 = DIV S0 S1
0xc2e: JUMP {0x477, 0xc6a}
---
Entry stack: [0x111, 0x0, 0x0, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x0, S8, S7, {0x477, 0xc6a}, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 7
Stack additions: [V965]
Exit stack: [0x111, 0x0, 0x0, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x0, S8, S7, V965]

================================

Block 0xc2f
[0xc2f:0xc3c]
---
Predecessors: [0x477, 0x49c, 0x4b7]
Successors: [0xc11, 0xc3d]
---
0xc2f JUMPDEST
0xc30 PUSH1 0x0
0xc32 DUP3
0xc33 DUP3
0xc34 ADD
0xc35 DUP4
0xc36 DUP2
0xc37 LT
0xc38 ISZERO
0xc39 PUSH2 0xc11
0xc3c JUMPI
---
0xc2f: JUMPDEST 
0xc30: V966 = 0x0
0xc34: V967 = ADD S0 S1
0xc37: V968 = LT V967 S1
0xc38: V969 = ISZERO V968
0xc39: V970 = 0xc11
0xc3c: JUMPI 0xc11 V969
---
Entry stack: [0x111, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V967]
Exit stack: [0x111, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V967]

================================

Block 0xc3d
[0xc3d:0xc3d]
---
Predecessors: [0xc2f]
Successors: []
---
0xc3d INVALID
---
0xc3d: INVALID 
---
Entry stack: [0x0, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V967]
Stack pops: 0
Stack additions: []
Exit stack: [0x0, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V967]

================================

Block 0xc3e
[0xc3e:0xc57]
---
Predecessors: [0x494]
Successors: [0xbed]
---
0xc3e JUMPDEST
0xc3f PUSH1 0xb
0xc41 SLOAD
0xc42 PUSH1 0x0
0xc44 SWAP1
0xc45 DUP2
0xc46 SWAP1
0xc47 PUSH2 0xc58
0xc4a DUP2
0xc4b PUSH2 0x3e8
0xc4e PUSH4 0xffffffff
0xc53 PUSH2 0xbed
0xc56 AND
0xc57 JUMP
---
0xc3e: JUMPDEST 
0xc3f: V971 = 0xb
0xc41: V972 = S[0xb]
0xc42: V973 = 0x0
0xc47: V974 = 0xc58
0xc4b: V975 = 0x3e8
0xc4e: V976 = 0xffffffff
0xc53: V977 = 0xbed
0xc56: V978 = AND 0xbed 0xffffffff
0xc57: JUMP 0xbed
---
Entry stack: [0x111, 0x0, 0x0, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x49c, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, V972, 0xc58, V972, 0x3e8]
Exit stack: [0x111, 0x0, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x49c, S0, 0x0, 0x0, V972, 0xc58, V972, 0x3e8]

================================

Block 0xc58
[0xc58:0xc69]
---
Predecessors: [0xc11]
Successors: [0xc18]
---
0xc58 JUMPDEST
0xc59 SWAP1
0xc5a POP
0xc5b PUSH2 0xc6a
0xc5e DUP5
0xc5f DUP3
0xc60 PUSH4 0xffffffff
0xc65 PUSH2 0xc18
0xc68 AND
0xc69 JUMP
---
0xc58: JUMPDEST 
0xc5b: V979 = 0xc6a
0xc60: V980 = 0xffffffff
0xc65: V981 = 0xc18
0xc68: V982 = AND 0xc18 0xffffffff
0xc69: JUMP 0xc18
---
Entry stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S0, 0xc6a, S4, S0]
Exit stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, 0xc6a, S4, S0]

================================

Block 0xc6a
[0xc6a:0xc74]
---
Predecessors: [0xc26]
Successors: [0x49c]
---
0xc6a JUMPDEST
0xc6b SWAP5
0xc6c PUSH1 0x0
0xc6e SWAP5
0xc6f POP
0xc70 SWAP3
0xc71 POP
0xc72 POP
0xc73 POP
0xc74 JUMP
---
0xc6a: JUMPDEST 
0xc6c: V983 = 0x0
0xc74: JUMP S5
---
Entry stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, S1, V965]
Stack pops: 6
Stack additions: [S0, 0x0]
Exit stack: [0x111, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, S7, S6, V965, 0x0]

================================

Block 0xc75
[0xc75:0xca0]
---
Predecessors: []
Successors: []
---
0xc75 STOP
0xc76 LOG1
0xc77 PUSH6 0x627a7a723058
0xc7e SHA3
0xc7f MISSING 0xeb
0xc80 MOD
0xc81 PUSH25 0x78094324ffc11362aa0ec46601c5a936600bda7622791935b7
0xc9b SWAP4
0xc9c GASLIMIT
0xc9d MISSING 0x26
0xc9e MISSING 0xbc
0xc9f STOP
0xca0 MISSING 0x29
---
0xc75: STOP 
0xc76: LOG S0 S1 S2
0xc77: V984 = 0x627a7a723058
0xc7e: V985 = SHA3 0x627a7a723058 S3
0xc7f: MISSING 0xeb
0xc80: V986 = MOD S0 S1
0xc81: V987 = 0x78094324ffc11362aa0ec46601c5a936600bda7622791935b7
0xc9c: V988 = GASLIMIT
0xc9d: MISSING 0x26
0xc9e: MISSING 0xbc
0xc9f: STOP 
0xca0: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V985, V988, S4, V986, S2, S3, 0x78094324ffc11362aa0ec46601c5a936600bda7622791935b7]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x113
Exit block: 0x128
Body: 0x113, 0x11b, 0x11f, 0x128, 0x622

Function 1:
Public function signature: 0x36c28ea4
Entry block: 0x144
Exit block: 0x128
Body: 0x128, 0x144, 0x14c, 0x150, 0x631

Function 2:
Public function signature: 0x38771242
Entry block: 0x159
Exit block: 0x16e
Body: 0x159, 0x161, 0x165, 0x16e, 0x640

Function 3:
Public function signature: 0x4c801cee
Entry block: 0x180
Exit block: 0x111
Body: 0x111, 0x180, 0x188, 0x18c, 0x646, 0x664, 0x668, 0x678, 0x679, 0x67f, 0x683, 0x6e0, 0x6e4, 0x6ef, 0x6f8, 0x70a, 0x70e, 0x777, 0x77b, 0x786, 0x78f

Function 4:
Public function signature: 0x54fd4d50
Entry block: 0x1a1
Exit block: 0x21d
Body: 0x1a1, 0x1a9, 0x1ad, 0x1b6, 0x1d8, 0x1e1, 0x1f0, 0x204, 0x21d, 0x798, 0x7d8, 0x7e0, 0x7f3, 0x801, 0x815, 0x81e

Function 5:
Public function signature: 0x6e66f6e9
Entry block: 0x22b
Exit block: 0x128
Body: 0x128, 0x22b, 0x233, 0x237, 0x826

Function 6:
Public function signature: 0x8418cd99
Entry block: 0x240
Exit block: 0x111
Body: 0x111, 0x240

Function 7:
Public function signature: 0x86f32586
Entry block: 0x257
Exit block: 0x25f
Body: 0x111, 0x257, 0x25f, 0x263

Function 8:
Public function signature: 0x91b7f5ed
Entry block: 0x26c
Exit block: 0x111
Body: 0x111, 0x26c, 0x274, 0x278, 0x8a9, 0x8c7, 0x8cb

Function 9:
Public function signature: 0x9a9e3fd8
Entry block: 0x284
Exit block: 0x28c
Body: 0x111, 0x284, 0x28c, 0x290

Function 10:
Public function signature: 0xbc05529b
Entry block: 0x299
Exit block: 0x16e
Body: 0x16e, 0x299, 0x2a1, 0x2a5, 0xac4

Function 11:
Public function signature: 0xc19d93fb
Entry block: 0x2ae
Exit block: 0x2d3
Body: 0x2ae, 0x2b6, 0x2ba, 0x2c3, 0x2d2, 0x2d3, 0xaca

Function 12:
Public function signature: 0xc1a4a4f8
Entry block: 0x2e7
Exit block: 0x16e
Body: 0x16e, 0x2e7, 0x2ef, 0x2f3, 0xad3

Function 13:
Public function signature: 0xc5c4744c
Entry block: 0x2fc
Exit block: 0x16e
Body: 0x16e, 0x2fc, 0x304, 0x308, 0xad9

Function 14:
Public function signature: 0xc9c80a56
Entry block: 0x311
Exit block: 0x111
Body: 0x111, 0x311, 0x319, 0x31d, 0xadf, 0xafd, 0xb01, 0xb12, 0xb16

Function 15:
Public function signature: 0xcad107c0
Entry block: 0x338
Exit block: 0x16e
Body: 0x16e, 0x338, 0x340, 0x344, 0xb7a

Function 16:
Public function signature: 0xd41b6db6
Entry block: 0x34d
Exit block: 0x36e
Body: 0x34d, 0x355, 0x359, 0x36e, 0xb80

Function 17:
Public function signature: 0xd979f5aa
Entry block: 0x384
Exit block: 0x111
Body: 0x111, 0x384, 0x38c, 0x390, 0xb95, 0xbb3, 0xbb7

Function 18:
Public function signature: 0xefca2eed
Entry block: 0x3a5
Exit block: 0x16e
Body: 0x16e, 0x3a5, 0x3ad, 0x3b1, 0xbe7

Function 19:
Public fallback function
Entry block: 0x106
Exit block: 0x111
Body: 0x106, 0x111

Function 20:
Private function
Entry block: 0xbed
Exit block: 0xc11
Body: 0x486, 0x48a, 0x494, 0x49c, 0x4b0, 0x4b7, 0xbed, 0xbfa, 0xc06, 0xc09, 0xc11, 0xc3e, 0xc58, 0xc6a

Function 21:
Private function
Entry block: 0xc2f
Exit block: 0xc11
Body: 0x437, 0x459, 0x45c, 0x45c, 0x477, 0x486, 0x48a, 0x494, 0x49c, 0x4b0, 0x4b7, 0x4ce, 0xc11, 0xc2f, 0xc3e, 0xc58, 0xc58, 0xc6a

Function 22:
Private function
Entry block: 0xc18
Exit block: 0xc26
Body: 0xc18, 0xc26

Function 23:
Private function
Entry block: 0x8d1
Exit block: 0xa88
Body: 0x8d1, 0x8e5, 0x8ef, 0x955, 0x969, 0x97f, 0x9f4, 0xa08, 0xa88

Function 24:
Private function
Entry block: 0x835
Exit block: 0x8a7
Body: 0x835, 0x841, 0x852, 0x855, 0x85b, 0x8a7

Function 25:
Private function
Entry block: 0x3ba
Exit block: 0xbb7
Body: 0x3ba, 0x3d1, 0x3dc, 0x3ea, 0x3fd, 0x417, 0x41d, 0x437, 0x43e, 0x459, 0x45c, 0x45c, 0x477, 0x486, 0x48a, 0x494, 0x49c, 0x4b0, 0x4b7, 0x4ce, 0x50b, 0x5b2, 0x5c6, 0x61a, 0xc11, 0xc2f, 0xc3e, 0xc58, 0xc58, 0xc6a

