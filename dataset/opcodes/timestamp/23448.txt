Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x35]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x35
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x35
0xa: JUMPI 0x35 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x46]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x5f9f4734
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x46
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x5f9f4734
0x1a: V12 = EQ V10 0x5f9f4734
0x1b: V13 = 0x46
0x1e: JUMPI 0x46 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x4f]
---
0x1f DUP1
0x20 PUSH4 0x66d003ac
0x25 EQ
0x26 PUSH2 0x4f
0x29 JUMPI
---
0x20: V14 = 0x66d003ac
0x25: V15 = EQ 0x66d003ac V10
0x26: V16 = 0x4f
0x29: JUMPI 0x4f V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x61]
---
0x2a DUP1
0x2b PUSH4 0xac110d8e
0x30 EQ
0x31 PUSH2 0x61
0x34 JUMPI
---
0x2b: V17 = 0xac110d8e
0x30: V18 = EQ 0xac110d8e V10
0x31: V19 = 0x61
0x34: JUMPI 0x61 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x41]
---
Predecessors: [0x0, 0x2a]
Successors: [0x42, 0x81]
---
0x35 JUMPDEST
0x36 PUSH2 0x7f
0x39 PUSH1 0x1
0x3b SLOAD
0x3c TIMESTAMP
0x3d LT
0x3e PUSH2 0x81
0x41 JUMPI
---
0x35: JUMPDEST 
0x36: V20 = 0x7f
0x39: V21 = 0x1
0x3b: V22 = S[0x1]
0x3c: V23 = TIMESTAMP
0x3d: V24 = LT V23 V22
0x3e: V25 = 0x81
0x41: JUMPI 0x81 V24
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7f]
Exit stack: [V10, 0x7f]

================================

Block 0x42
[0x42:0x45]
---
Predecessors: [0x35]
Successors: []
---
0x42 PUSH2 0x2
0x45 JUMP
---
0x42: V26 = 0x2
0x45: THROW 
---
Entry stack: [V10, 0x7f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7f]

================================

Block 0x46
[0x46:0x4e]
---
Predecessors: [0xb]
Successors: [0x83]
---
0x46 JUMPDEST
0x47 PUSH2 0x83
0x4a PUSH1 0x1
0x4c SLOAD
0x4d DUP2
0x4e JUMP
---
0x46: JUMPDEST 
0x47: V27 = 0x83
0x4a: V28 = 0x1
0x4c: V29 = S[0x1]
0x4e: JUMP 0x83
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x83, V29]
Exit stack: [V10, 0x83, V29]

================================

Block 0x4f
[0x4f:0x60]
---
Predecessors: [0x1f]
Successors: [0x83]
---
0x4f JUMPDEST
0x50 PUSH2 0x83
0x53 PUSH1 0x0
0x55 SLOAD
0x56 PUSH1 0x1
0x58 PUSH1 0xa0
0x5a PUSH1 0x2
0x5c EXP
0x5d SUB
0x5e AND
0x5f DUP2
0x60 JUMP
---
0x4f: JUMPDEST 
0x50: V30 = 0x83
0x53: V31 = 0x0
0x55: V32 = S[0x0]
0x56: V33 = 0x1
0x58: V34 = 0xa0
0x5a: V35 = 0x2
0x5c: V36 = EXP 0x2 0xa0
0x5d: V37 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x60: JUMP 0x83
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x83, V38]
Exit stack: [V10, 0x83, V38]

================================

Block 0x61
[0x61:0x7a]
---
Predecessors: [0x2a]
Successors: [0x7b, 0x8d]
---
0x61 JUMPDEST
0x62 PUSH2 0x7f
0x65 PUSH1 0x0
0x67 SLOAD
0x68 CALLER
0x69 PUSH1 0x1
0x6b PUSH1 0xa0
0x6d PUSH1 0x2
0x6f EXP
0x70 SUB
0x71 SWAP1
0x72 DUP2
0x73 AND
0x74 SWAP2
0x75 AND
0x76 EQ
0x77 PUSH2 0x8d
0x7a JUMPI
---
0x61: JUMPDEST 
0x62: V39 = 0x7f
0x65: V40 = 0x0
0x67: V41 = S[0x0]
0x68: V42 = CALLER
0x69: V43 = 0x1
0x6b: V44 = 0xa0
0x6d: V45 = 0x2
0x6f: V46 = EXP 0x2 0xa0
0x70: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x75: V49 = AND V41 0xffffffffffffffffffffffffffffffffffffffff
0x76: V50 = EQ V49 V48
0x77: V51 = 0x8d
0x7a: JUMPI 0x8d V50
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7f]
Exit stack: [V10, 0x7f]

================================

Block 0x7b
[0x7b:0x7e]
---
Predecessors: [0x61]
Successors: []
---
0x7b PUSH2 0x2
0x7e JUMP
---
0x7b: V52 = 0x2
0x7e: THROW 
---
Entry stack: [V10, 0x7f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7f]

================================

Block 0x7f
[0x7f:0x80]
---
Predecessors: [0x81]
Successors: []
---
0x7f JUMPDEST
0x80 STOP
---
0x7f: JUMPDEST 
0x80: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x81
[0x81:0x82]
---
Predecessors: [0x35, 0x9c]
Successors: [0x7f]
---
0x81 JUMPDEST
0x82 JUMP
---
0x81: JUMPDEST 
0x82: JUMP 0x7f
---
Entry stack: [V10, 0x7f]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x83
[0x83:0x8c]
---
Predecessors: [0x46, 0x4f]
Successors: []
---
0x83 JUMPDEST
0x84 PUSH1 0x60
0x86 SWAP1
0x87 DUP2
0x88 MSTORE
0x89 PUSH1 0x20
0x8b SWAP1
0x8c RETURN
---
0x83: JUMPDEST 
0x84: V53 = 0x60
0x88: M[0x60] = S0
0x89: V54 = 0x20
0x8c: RETURN 0x60 0x20
---
Entry stack: [V10, 0x83, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x83]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x61]
Successors: [0x98, 0x9c]
---
0x8d JUMPDEST
0x8e PUSH1 0x1
0x90 SLOAD
0x91 TIMESTAMP
0x92 LT
0x93 ISZERO
0x94 PUSH2 0x9c
0x97 JUMPI
---
0x8d: JUMPDEST 
0x8e: V55 = 0x1
0x90: V56 = S[0x1]
0x91: V57 = TIMESTAMP
0x92: V58 = LT V57 V56
0x93: V59 = ISZERO V58
0x94: V60 = 0x9c
0x97: JUMPI 0x9c V59
---
Entry stack: [V10, 0x7f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7f]

================================

Block 0x98
[0x98:0x9b]
---
Predecessors: [0x8d]
Successors: []
---
0x98 PUSH2 0x2
0x9b JUMP
---
0x98: V61 = 0x2
0x9b: THROW 
---
Entry stack: [V10, 0x7f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7f]

================================

Block 0x9c
[0x9c:0x127]
---
Predecessors: [0x8d]
Successors: [0x81, 0x128]
---
0x9c JUMPDEST
0x9d PUSH1 0x0
0x9f SLOAD
0xa0 PUSH1 0x1
0xa2 PUSH1 0xa0
0xa4 PUSH1 0x2
0xa6 EXP
0xa7 SUB
0xa8 SWAP1
0xa9 DUP2
0xaa AND
0xab PUSH1 0x60
0xad SWAP1
0xae DUP2
0xaf MSTORE
0xb0 ADDRESS
0xb1 SWAP1
0xb2 SWAP2
0xb3 AND
0xb4 BALANCE
0xb5 PUSH1 0x80
0xb7 MSTORE
0xb8 PUSH32 0x7ff86a3550c489de55163d2ee165a3420b682f6daff6a7392e1b720405e6feb0
0xd9 SWAP1
0xda PUSH1 0x40
0xdc SWAP1
0xdd LOG1
0xde PUSH1 0x0
0xe0 PUSH1 0x0
0xe2 SWAP1
0xe3 SLOAD
0xe4 SWAP1
0xe5 PUSH2 0x100
0xe8 EXP
0xe9 SWAP1
0xea DIV
0xeb PUSH1 0x1
0xed PUSH1 0xa0
0xef PUSH1 0x2
0xf1 EXP
0xf2 SUB
0xf3 AND
0xf4 PUSH1 0x1
0xf6 PUSH1 0xa0
0xf8 PUSH1 0x2
0xfa EXP
0xfb SUB
0xfc AND
0xfd PUSH1 0x0
0xff ADDRESS
0x100 PUSH1 0x1
0x102 PUSH1 0xa0
0x104 PUSH1 0x2
0x106 EXP
0x107 SUB
0x108 AND
0x109 BALANCE
0x10a PUSH1 0x40
0x10c MLOAD
0x10d DUP1
0x10e SWAP1
0x10f POP
0x110 PUSH1 0x0
0x112 PUSH1 0x40
0x114 MLOAD
0x115 DUP1
0x116 DUP4
0x117 SUB
0x118 DUP2
0x119 DUP6
0x11a DUP9
0x11b DUP9
0x11c CALL
0x11d SWAP4
0x11e POP
0x11f POP
0x120 POP
0x121 POP
0x122 ISZERO
0x123 ISZERO
0x124 PUSH2 0x81
0x127 JUMPI
---
0x9c: JUMPDEST 
0x9d: V62 = 0x0
0x9f: V63 = S[0x0]
0xa0: V64 = 0x1
0xa2: V65 = 0xa0
0xa4: V66 = 0x2
0xa6: V67 = EXP 0x2 0xa0
0xa7: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xab: V70 = 0x60
0xaf: M[0x60] = V69
0xb0: V71 = ADDRESS
0xb3: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0xb4: V73 = BALANCE V72
0xb5: V74 = 0x80
0xb7: M[0x80] = V73
0xb8: V75 = 0x7ff86a3550c489de55163d2ee165a3420b682f6daff6a7392e1b720405e6feb0
0xda: V76 = 0x40
0xdd: LOG 0x60 0x40 0x7ff86a3550c489de55163d2ee165a3420b682f6daff6a7392e1b720405e6feb0
0xde: V77 = 0x0
0xe0: V78 = 0x0
0xe3: V79 = S[0x0]
0xe5: V80 = 0x100
0xe8: V81 = EXP 0x100 0x0
0xea: V82 = DIV V79 0x1
0xeb: V83 = 0x1
0xed: V84 = 0xa0
0xef: V85 = 0x2
0xf1: V86 = EXP 0x2 0xa0
0xf2: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf3: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0xf4: V89 = 0x1
0xf6: V90 = 0xa0
0xf8: V91 = 0x2
0xfa: V92 = EXP 0x2 0xa0
0xfb: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfc: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0xfd: V95 = 0x0
0xff: V96 = ADDRESS
0x100: V97 = 0x1
0x102: V98 = 0xa0
0x104: V99 = 0x2
0x106: V100 = EXP 0x2 0xa0
0x107: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x108: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x109: V103 = BALANCE V102
0x10a: V104 = 0x40
0x10c: V105 = M[0x40]
0x110: V106 = 0x0
0x112: V107 = 0x40
0x114: V108 = M[0x40]
0x117: V109 = SUB V105 V108
0x11c: V110 = CALL 0x0 V94 V103 V108 V109 V108 0x0
0x122: V111 = ISZERO V110
0x123: V112 = ISZERO V111
0x124: V113 = 0x81
0x127: JUMPI 0x81 V112
---
Entry stack: [V10, 0x7f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7f]

================================

Block 0x128
[0x128:0x12b]
---
Predecessors: [0x9c]
Successors: []
---
0x128 PUSH2 0x2
0x12b JUMP
---
0x128: V114 = 0x2
0x12b: THROW 
---
Entry stack: [V10, 0x7f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7f]

================================

Function 0:
Public function signature: 0x5f9f4734
Entry block: 0x46
Exit block: 0x83
Body: 0x46, 0x83

Function 1:
Public function signature: 0x66d003ac
Entry block: 0x4f
Exit block: 0x83
Body: 0x4f, 0x83

Function 2:
Public function signature: 0xac110d8e
Entry block: 0x61
Exit block: 0x7f
Body: 0x61, 0x7b, 0x7f, 0x81, 0x8d, 0x98, 0x9c, 0x128

Function 3:
Public fallback function
Entry block: 0x35
Exit block: 0x7f
Body: 0x35, 0x42, 0x7f, 0x81

