Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x72]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x72
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x72
0xa: JUMPI 0x72 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x153]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x29dcb0cf
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x153
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x29dcb0cf
0x20: V14 = EQ V12 0x29dcb0cf
0x21: V15 = 0x153
0x24: JUMPI 0x153 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x178]
---
0x25 DUP1
0x26 PUSH4 0x38af3eed
0x2b EQ
0x2c PUSH2 0x178
0x2f JUMPI
---
0x26: V16 = 0x38af3eed
0x2b: V17 = EQ 0x38af3eed V12
0x2c: V18 = 0x178
0x2f: JUMPI 0x178 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x1a7]
---
0x30 DUP1
0x31 PUSH4 0x6e66f6e9
0x36 EQ
0x37 PUSH2 0x1a7
0x3a JUMPI
---
0x31: V19 = 0x6e66f6e9
0x36: V20 = EQ 0x6e66f6e9 V12
0x37: V21 = 0x1a7
0x3a: JUMPI 0x1a7 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1d6]
---
0x3b DUP1
0x3c PUSH4 0x94effa14
0x41 EQ
0x42 PUSH2 0x1d6
0x45 JUMPI
---
0x3c: V22 = 0x94effa14
0x41: V23 = EQ 0x94effa14 V12
0x42: V24 = 0x1d6
0x45: JUMPI 0x1d6 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1ee]
---
0x46 DUP1
0x47 PUSH4 0xa035b1fe
0x4c EQ
0x4d PUSH2 0x1ee
0x50 JUMPI
---
0x47: V25 = 0xa035b1fe
0x4c: V26 = EQ 0xa035b1fe V12
0x4d: V27 = 0x1ee
0x50: JUMPI 0x1ee V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x213]
---
0x51 DUP1
0x52 PUSH4 0xc47af5cf
0x57 EQ
0x58 PUSH2 0x213
0x5b JUMPI
---
0x52: V28 = 0xc47af5cf
0x57: V29 = EQ 0xc47af5cf V12
0x58: V30 = 0x213
0x5b: JUMPI 0x213 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x22b]
---
0x5c DUP1
0x5d PUSH4 0xdc43677d
0x62 EQ
0x63 PUSH2 0x22b
0x66 JUMPI
---
0x5d: V31 = 0xdc43677d
0x62: V32 = EQ 0xdc43677d V12
0x63: V33 = 0x22b
0x66: JUMPI 0x22b V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x243]
---
0x67 DUP1
0x68 PUSH4 0xf72f6826
0x6d EQ
0x6e PUSH2 0x243
0x71 JUMPI
---
0x68: V34 = 0xf72f6826
0x6d: V35 = EQ 0xf72f6826 V12
0x6e: V36 = 0x243
0x71: JUMPI 0x243 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x72]
---
Predecessors: [0x0, 0x67]
Successors: [0x73]
---
0x72 JUMPDEST
---
0x72: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x73
[0x73:0x80]
---
Predecessors: [0x72]
Successors: [0x81, 0x85]
---
0x73 JUMPDEST
0x74 PUSH1 0x1
0x76 SLOAD
0x77 PUSH1 0x0
0x79 SWAP1
0x7a TIMESTAMP
0x7b GT
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x73: JUMPDEST 
0x74: V37 = 0x1
0x76: V38 = S[0x1]
0x77: V39 = 0x0
0x7a: V40 = TIMESTAMP
0x7b: V41 = GT V40 V38
0x7c: V42 = ISZERO V41
0x7d: V43 = 0x85
0x80: JUMPI 0x85 V42
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x0]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x73]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V44 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0x85
[0x85:0x91]
---
Predecessors: [0x73]
Successors: [0x92, 0x96]
---
0x85 JUMPDEST
0x86 POP
0x87 PUSH1 0x2
0x89 SLOAD
0x8a CALLVALUE
0x8b SWAP1
0x8c DUP2
0x8d GT
0x8e PUSH2 0x96
0x91 JUMPI
---
0x85: JUMPDEST 
0x87: V45 = 0x2
0x89: V46 = S[0x2]
0x8a: V47 = CALLVALUE
0x8d: V48 = GT V47 V46
0x8e: V49 = 0x96
0x91: JUMPI 0x96 V48
---
Entry stack: [V12, 0x0]
Stack pops: 1
Stack additions: [V47]
Exit stack: [V12, V47]

================================

Block 0x92
[0x92:0x95]
---
Predecessors: [0x85]
Successors: []
---
0x92 PUSH1 0x0
0x94 DUP1
0x95 REVERT
---
0x92: V50 = 0x0
0x95: REVERT 0x0 0x0
---
Entry stack: [V12, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V47]

================================

Block 0x96
[0x96:0xb8]
---
Predecessors: [0x85]
Successors: [0xb9, 0xba]
---
0x96 JUMPDEST
0x97 PUSH1 0x3
0x99 SLOAD
0x9a PUSH1 0x2
0x9c SLOAD
0x9d PUSH1 0x1
0x9f PUSH1 0xa0
0xa1 PUSH1 0x2
0xa3 EXP
0xa4 SUB
0xa5 SWAP1
0xa6 SWAP2
0xa7 AND
0xa8 SWAP1
0xa9 PUSH4 0xa9059cbb
0xae SWAP1
0xaf CALLER
0xb0 SWAP1
0xb1 DUP5
0xb2 DUP2
0xb3 ISZERO
0xb4 ISZERO
0xb5 PUSH2 0xba
0xb8 JUMPI
---
0x96: JUMPDEST 
0x97: V51 = 0x3
0x99: V52 = S[0x3]
0x9a: V53 = 0x2
0x9c: V54 = S[0x2]
0x9d: V55 = 0x1
0x9f: V56 = 0xa0
0xa1: V57 = 0x2
0xa3: V58 = EXP 0x2 0xa0
0xa4: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7: V60 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0xa9: V61 = 0xa9059cbb
0xaf: V62 = CALLER
0xb3: V63 = ISZERO V54
0xb4: V64 = ISZERO V63
0xb5: V65 = 0xba
0xb8: JUMPI 0xba V64
---
Entry stack: [V12, V47]
Stack pops: 1
Stack additions: [S0, V60, 0xa9059cbb, V62, V54, S0]
Exit stack: [V12, V47, V60, 0xa9059cbb, V62, V54, V47]

================================

Block 0xb9
[0xb9:0xb9]
---
Predecessors: [0x96]
Successors: []
---
0xb9 INVALID
---
0xb9: INVALID 
---
Entry stack: [V12, V47, V60, 0xa9059cbb, V62, V54, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V47, V60, 0xa9059cbb, V62, V54, V47]

================================

Block 0xba
[0xba:0x102]
---
Predecessors: [0x96]
Successors: [0x103, 0x107]
---
0xba JUMPDEST
0xbb DIV
0xbc PUSH7 0x38d7ea4c68000
0xc4 MUL
0xc5 PUSH1 0x40
0xc7 MLOAD
0xc8 PUSH1 0xe0
0xca PUSH1 0x2
0xcc EXP
0xcd PUSH4 0xffffffff
0xd2 DUP6
0xd3 AND
0xd4 MUL
0xd5 DUP2
0xd6 MSTORE
0xd7 PUSH1 0x1
0xd9 PUSH1 0xa0
0xdb PUSH1 0x2
0xdd EXP
0xde SUB
0xdf SWAP1
0xe0 SWAP3
0xe1 AND
0xe2 PUSH1 0x4
0xe4 DUP4
0xe5 ADD
0xe6 MSTORE
0xe7 PUSH1 0x24
0xe9 DUP3
0xea ADD
0xeb MSTORE
0xec PUSH1 0x44
0xee ADD
0xef PUSH1 0x0
0xf1 PUSH1 0x40
0xf3 MLOAD
0xf4 DUP1
0xf5 DUP4
0xf6 SUB
0xf7 DUP2
0xf8 PUSH1 0x0
0xfa DUP8
0xfb DUP1
0xfc EXTCODESIZE
0xfd ISZERO
0xfe ISZERO
0xff PUSH2 0x107
0x102 JUMPI
---
0xba: JUMPDEST 
0xbb: V66 = DIV V47 V54
0xbc: V67 = 0x38d7ea4c68000
0xc4: V68 = MUL 0x38d7ea4c68000 V66
0xc5: V69 = 0x40
0xc7: V70 = M[0x40]
0xc8: V71 = 0xe0
0xca: V72 = 0x2
0xcc: V73 = EXP 0x2 0xe0
0xcd: V74 = 0xffffffff
0xd3: V75 = AND 0xa9059cbb 0xffffffff
0xd4: V76 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xd6: M[V70] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xd7: V77 = 0x1
0xd9: V78 = 0xa0
0xdb: V79 = 0x2
0xdd: V80 = EXP 0x2 0xa0
0xde: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe1: V82 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0xe2: V83 = 0x4
0xe5: V84 = ADD V70 0x4
0xe6: M[V84] = V82
0xe7: V85 = 0x24
0xea: V86 = ADD V70 0x24
0xeb: M[V86] = V68
0xec: V87 = 0x44
0xee: V88 = ADD 0x44 V70
0xef: V89 = 0x0
0xf1: V90 = 0x40
0xf3: V91 = M[0x40]
0xf6: V92 = SUB V88 V91
0xf8: V93 = 0x0
0xfc: V94 = EXTCODESIZE V60
0xfd: V95 = ISZERO V94
0xfe: V96 = ISZERO V95
0xff: V97 = 0x107
0x102: JUMPI 0x107 V96
---
Entry stack: [V12, V47, V60, 0xa9059cbb, V62, V54, V47]
Stack pops: 5
Stack additions: [S4, S3, V88, 0x0, V91, V92, V91, 0x0, S4]
Exit stack: [V12, V47, V60, 0xa9059cbb, V88, 0x0, V91, V92, V91, 0x0, V60]

================================

Block 0x103
[0x103:0x106]
---
Predecessors: [0xba]
Successors: []
---
0x103 PUSH1 0x0
0x105 DUP1
0x106 REVERT
---
0x103: V98 = 0x0
0x106: REVERT 0x0 0x0
---
Entry stack: [V12, V47, V60, 0xa9059cbb, V88, 0x0, V91, V92, V91, 0x0, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V47, V60, 0xa9059cbb, V88, 0x0, V91, V92, V91, 0x0, V60]

================================

Block 0x107
[0x107:0x113]
---
Predecessors: [0xba]
Successors: [0x114, 0x118]
---
0x107 JUMPDEST
0x108 PUSH2 0x2c6
0x10b GAS
0x10c SUB
0x10d CALL
0x10e ISZERO
0x10f ISZERO
0x110 PUSH2 0x118
0x113 JUMPI
---
0x107: JUMPDEST 
0x108: V99 = 0x2c6
0x10b: V100 = GAS
0x10c: V101 = SUB V100 0x2c6
0x10d: V102 = CALL V101 V60 0x0 V91 V92 V91 0x0
0x10e: V103 = ISZERO V102
0x10f: V104 = ISZERO V103
0x110: V105 = 0x118
0x113: JUMPI 0x118 V104
---
Entry stack: [V12, V47, V60, 0xa9059cbb, V88, 0x0, V91, V92, V91, 0x0, V60]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V47, V60, 0xa9059cbb, V88]

================================

Block 0x114
[0x114:0x117]
---
Predecessors: [0x107]
Successors: []
---
0x114 PUSH1 0x0
0x116 DUP1
0x117 REVERT
---
0x114: V106 = 0x0
0x117: REVERT 0x0 0x0
---
Entry stack: [V12, V47, V60, 0xa9059cbb, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V47, V60, 0xa9059cbb, V88]

================================

Block 0x118
[0x118:0x14a]
---
Predecessors: [0x107]
Successors: [0x14b, 0x14f]
---
0x118 JUMPDEST
0x119 POP
0x11a POP
0x11b PUSH1 0x0
0x11d SLOAD
0x11e PUSH1 0x1
0x120 PUSH1 0xa0
0x122 PUSH1 0x2
0x124 EXP
0x125 SUB
0x126 AND
0x127 SWAP1
0x128 POP
0x129 DUP2
0x12a ISZERO
0x12b PUSH2 0x8fc
0x12e MUL
0x12f DUP3
0x130 PUSH1 0x40
0x132 MLOAD
0x133 PUSH1 0x0
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 DUP4
0x13a SUB
0x13b DUP2
0x13c DUP6
0x13d DUP9
0x13e DUP9
0x13f CALL
0x140 SWAP4
0x141 POP
0x142 POP
0x143 POP
0x144 POP
0x145 ISZERO
0x146 ISZERO
0x147 PUSH2 0x14f
0x14a JUMPI
---
0x118: JUMPDEST 
0x11b: V107 = 0x0
0x11d: V108 = S[0x0]
0x11e: V109 = 0x1
0x120: V110 = 0xa0
0x122: V111 = 0x2
0x124: V112 = EXP 0x2 0xa0
0x125: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x126: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x12a: V115 = ISZERO V47
0x12b: V116 = 0x8fc
0x12e: V117 = MUL 0x8fc V115
0x130: V118 = 0x40
0x132: V119 = M[0x40]
0x133: V120 = 0x0
0x135: V121 = 0x40
0x137: V122 = M[0x40]
0x13a: V123 = SUB V119 V122
0x13f: V124 = CALL V117 V114 V47 V122 V123 V122 0x0
0x145: V125 = ISZERO V124
0x146: V126 = ISZERO V125
0x147: V127 = 0x14f
0x14a: JUMPI 0x14f V126
---
Entry stack: [V12, V47, V60, 0xa9059cbb, V88]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V47]

================================

Block 0x14b
[0x14b:0x14e]
---
Predecessors: [0x118]
Successors: []
---
0x14b PUSH1 0x0
0x14d DUP1
0x14e REVERT
---
0x14b: V128 = 0x0
0x14e: REVERT 0x0 0x0
---
Entry stack: [V12, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V47]

================================

Block 0x14f
[0x14f:0x14f]
---
Predecessors: [0x118]
Successors: [0x150]
---
0x14f JUMPDEST
---
0x14f: JUMPDEST 
---
Entry stack: [V12, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V47]

================================

Block 0x150
[0x150:0x152]
---
Predecessors: [0x14f]
Successors: []
---
0x150 JUMPDEST
0x151 POP
0x152 STOP
---
0x150: JUMPDEST 
0x152: STOP 
---
Entry stack: [V12, V47]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x153
[0x153:0x159]
---
Predecessors: [0xb]
Successors: [0x15a, 0x15e]
---
0x153 JUMPDEST
0x154 CALLVALUE
0x155 ISZERO
0x156 PUSH2 0x15e
0x159 JUMPI
---
0x153: JUMPDEST 
0x154: V129 = CALLVALUE
0x155: V130 = ISZERO V129
0x156: V131 = 0x15e
0x159: JUMPI 0x15e V130
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15a
[0x15a:0x15d]
---
Predecessors: [0x153]
Successors: []
---
0x15a PUSH1 0x0
0x15c DUP1
0x15d REVERT
---
0x15a: V132 = 0x0
0x15d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15e
[0x15e:0x165]
---
Predecessors: [0x153]
Successors: [0x25b]
---
0x15e JUMPDEST
0x15f PUSH2 0x166
0x162 PUSH2 0x25b
0x165 JUMP
---
0x15e: JUMPDEST 
0x15f: V133 = 0x166
0x162: V134 = 0x25b
0x165: JUMP 0x25b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x166]
Exit stack: [V12, 0x166]

================================

Block 0x166
[0x166:0x177]
---
Predecessors: [0x25b, 0x2d1]
Successors: []
---
0x166 JUMPDEST
0x167 PUSH1 0x40
0x169 MLOAD
0x16a SWAP1
0x16b DUP2
0x16c MSTORE
0x16d PUSH1 0x20
0x16f ADD
0x170 PUSH1 0x40
0x172 MLOAD
0x173 DUP1
0x174 SWAP2
0x175 SUB
0x176 SWAP1
0x177 RETURN
---
0x166: JUMPDEST 
0x167: V135 = 0x40
0x169: V136 = M[0x40]
0x16c: M[V136] = S0
0x16d: V137 = 0x20
0x16f: V138 = ADD 0x20 V136
0x170: V139 = 0x40
0x172: V140 = M[0x40]
0x175: V141 = SUB V138 V140
0x177: RETURN V140 V141
---
Entry stack: [V12, 0x166, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x166]

================================

Block 0x178
[0x178:0x17e]
---
Predecessors: [0x25]
Successors: [0x17f, 0x183]
---
0x178 JUMPDEST
0x179 CALLVALUE
0x17a ISZERO
0x17b PUSH2 0x183
0x17e JUMPI
---
0x178: JUMPDEST 
0x179: V142 = CALLVALUE
0x17a: V143 = ISZERO V142
0x17b: V144 = 0x183
0x17e: JUMPI 0x183 V143
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17f
[0x17f:0x182]
---
Predecessors: [0x178]
Successors: []
---
0x17f PUSH1 0x0
0x181 DUP1
0x182 REVERT
---
0x17f: V145 = 0x0
0x182: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x183
[0x183:0x18a]
---
Predecessors: [0x178]
Successors: [0x261]
---
0x183 JUMPDEST
0x184 PUSH2 0x18b
0x187 PUSH2 0x261
0x18a JUMP
---
0x183: JUMPDEST 
0x184: V146 = 0x18b
0x187: V147 = 0x261
0x18a: JUMP 0x261
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18b]
Exit stack: [V12, 0x18b]

================================

Block 0x18b
[0x18b:0x1a6]
---
Predecessors: [0x261, 0x270]
Successors: []
---
0x18b JUMPDEST
0x18c PUSH1 0x40
0x18e MLOAD
0x18f PUSH1 0x1
0x191 PUSH1 0xa0
0x193 PUSH1 0x2
0x195 EXP
0x196 SUB
0x197 SWAP1
0x198 SWAP2
0x199 AND
0x19a DUP2
0x19b MSTORE
0x19c PUSH1 0x20
0x19e ADD
0x19f PUSH1 0x40
0x1a1 MLOAD
0x1a2 DUP1
0x1a3 SWAP2
0x1a4 SUB
0x1a5 SWAP1
0x1a6 RETURN
---
0x18b: JUMPDEST 
0x18c: V148 = 0x40
0x18e: V149 = M[0x40]
0x18f: V150 = 0x1
0x191: V151 = 0xa0
0x193: V152 = 0x2
0x195: V153 = EXP 0x2 0xa0
0x196: V154 = SUB 0x10000000000000000000000000000000000000000 0x1
0x199: V155 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x19b: M[V149] = V155
0x19c: V156 = 0x20
0x19e: V157 = ADD 0x20 V149
0x19f: V158 = 0x40
0x1a1: V159 = M[0x40]
0x1a4: V160 = SUB V157 V159
0x1a6: RETURN V159 V160
---
Entry stack: [V12, 0x18b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x18b]

================================

Block 0x1a7
[0x1a7:0x1ad]
---
Predecessors: [0x30]
Successors: [0x1ae, 0x1b2]
---
0x1a7 JUMPDEST
0x1a8 CALLVALUE
0x1a9 ISZERO
0x1aa PUSH2 0x1b2
0x1ad JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V161 = CALLVALUE
0x1a9: V162 = ISZERO V161
0x1aa: V163 = 0x1b2
0x1ad: JUMPI 0x1b2 V162
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ae
[0x1ae:0x1b1]
---
Predecessors: [0x1a7]
Successors: []
---
0x1ae PUSH1 0x0
0x1b0 DUP1
0x1b1 REVERT
---
0x1ae: V164 = 0x0
0x1b1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b2
[0x1b2:0x1b9]
---
Predecessors: [0x1a7]
Successors: [0x270]
---
0x1b2 JUMPDEST
0x1b3 PUSH2 0x18b
0x1b6 PUSH2 0x270
0x1b9 JUMP
---
0x1b2: JUMPDEST 
0x1b3: V165 = 0x18b
0x1b6: V166 = 0x270
0x1b9: JUMP 0x270
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18b]
Exit stack: [V12, 0x18b]

================================

Block 0x1ba
[0x1ba:0x1d5]
---
Predecessors: []
Successors: []
---
0x1ba JUMPDEST
0x1bb PUSH1 0x40
0x1bd MLOAD
0x1be PUSH1 0x1
0x1c0 PUSH1 0xa0
0x1c2 PUSH1 0x2
0x1c4 EXP
0x1c5 SUB
0x1c6 SWAP1
0x1c7 SWAP2
0x1c8 AND
0x1c9 DUP2
0x1ca MSTORE
0x1cb PUSH1 0x20
0x1cd ADD
0x1ce PUSH1 0x40
0x1d0 MLOAD
0x1d1 DUP1
0x1d2 SWAP2
0x1d3 SUB
0x1d4 SWAP1
0x1d5 RETURN
---
0x1ba: JUMPDEST 
0x1bb: V167 = 0x40
0x1bd: V168 = M[0x40]
0x1be: V169 = 0x1
0x1c0: V170 = 0xa0
0x1c2: V171 = 0x2
0x1c4: V172 = EXP 0x2 0xa0
0x1c5: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c8: V174 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: M[V168] = V174
0x1cb: V175 = 0x20
0x1cd: V176 = ADD 0x20 V168
0x1ce: V177 = 0x40
0x1d0: V178 = M[0x40]
0x1d3: V179 = SUB V176 V178
0x1d5: RETURN V178 V179
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d6
[0x1d6:0x1dc]
---
Predecessors: [0x3b]
Successors: [0x1dd, 0x1e1]
---
0x1d6 JUMPDEST
0x1d7 CALLVALUE
0x1d8 ISZERO
0x1d9 PUSH2 0x1e1
0x1dc JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V180 = CALLVALUE
0x1d8: V181 = ISZERO V180
0x1d9: V182 = 0x1e1
0x1dc: JUMPI 0x1e1 V181
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1dd
[0x1dd:0x1e0]
---
Predecessors: [0x1d6]
Successors: []
---
0x1dd PUSH1 0x0
0x1df DUP1
0x1e0 REVERT
---
0x1dd: V183 = 0x0
0x1e0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e1
[0x1e1:0x1eb]
---
Predecessors: [0x1d6]
Successors: [0x27f]
---
0x1e1 JUMPDEST
0x1e2 PUSH2 0x1ec
0x1e5 PUSH1 0x4
0x1e7 CALLDATALOAD
0x1e8 PUSH2 0x27f
0x1eb JUMP
---
0x1e1: JUMPDEST 
0x1e2: V184 = 0x1ec
0x1e5: V185 = 0x4
0x1e7: V186 = CALLDATALOAD 0x4
0x1e8: V187 = 0x27f
0x1eb: JUMP 0x27f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ec, V186]
Exit stack: [V12, 0x1ec, V186]

================================

Block 0x1ec
[0x1ec:0x1ed]
---
Predecessors: [0x2ce, 0x2f8, 0x388, 0x3ac]
Successors: []
---
0x1ec JUMPDEST
0x1ed STOP
---
0x1ec: JUMPDEST 
0x1ed: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ee
[0x1ee:0x1f4]
---
Predecessors: [0x46]
Successors: [0x1f5, 0x1f9]
---
0x1ee JUMPDEST
0x1ef CALLVALUE
0x1f0 ISZERO
0x1f1 PUSH2 0x1f9
0x1f4 JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V188 = CALLVALUE
0x1f0: V189 = ISZERO V188
0x1f1: V190 = 0x1f9
0x1f4: JUMPI 0x1f9 V189
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f5
[0x1f5:0x1f8]
---
Predecessors: [0x1ee]
Successors: []
---
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 REVERT
---
0x1f5: V191 = 0x0
0x1f8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f9
[0x1f9:0x200]
---
Predecessors: [0x1ee]
Successors: [0x2d1]
---
0x1f9 JUMPDEST
0x1fa PUSH2 0x166
0x1fd PUSH2 0x2d1
0x200 JUMP
---
0x1f9: JUMPDEST 
0x1fa: V192 = 0x166
0x1fd: V193 = 0x2d1
0x200: JUMP 0x2d1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x166]
Exit stack: [V12, 0x166]

================================

Block 0x201
[0x201:0x212]
---
Predecessors: []
Successors: []
---
0x201 JUMPDEST
0x202 PUSH1 0x40
0x204 MLOAD
0x205 SWAP1
0x206 DUP2
0x207 MSTORE
0x208 PUSH1 0x20
0x20a ADD
0x20b PUSH1 0x40
0x20d MLOAD
0x20e DUP1
0x20f SWAP2
0x210 SUB
0x211 SWAP1
0x212 RETURN
---
0x201: JUMPDEST 
0x202: V194 = 0x40
0x204: V195 = M[0x40]
0x207: M[V195] = S0
0x208: V196 = 0x20
0x20a: V197 = ADD 0x20 V195
0x20b: V198 = 0x40
0x20d: V199 = M[0x40]
0x210: V200 = SUB V197 V199
0x212: RETURN V199 V200
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x213
[0x213:0x219]
---
Predecessors: [0x51]
Successors: [0x21a, 0x21e]
---
0x213 JUMPDEST
0x214 CALLVALUE
0x215 ISZERO
0x216 PUSH2 0x21e
0x219 JUMPI
---
0x213: JUMPDEST 
0x214: V201 = CALLVALUE
0x215: V202 = ISZERO V201
0x216: V203 = 0x21e
0x219: JUMPI 0x21e V202
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21a
[0x21a:0x21d]
---
Predecessors: [0x213]
Successors: []
---
0x21a PUSH1 0x0
0x21c DUP1
0x21d REVERT
---
0x21a: V204 = 0x0
0x21d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21e
[0x21e:0x228]
---
Predecessors: [0x213]
Successors: [0x2d7]
---
0x21e JUMPDEST
0x21f PUSH2 0x1ec
0x222 PUSH1 0x4
0x224 CALLDATALOAD
0x225 PUSH2 0x2d7
0x228 JUMP
---
0x21e: JUMPDEST 
0x21f: V205 = 0x1ec
0x222: V206 = 0x4
0x224: V207 = CALLDATALOAD 0x4
0x225: V208 = 0x2d7
0x228: JUMP 0x2d7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ec, V207]
Exit stack: [V12, 0x1ec, V207]

================================

Block 0x229
[0x229:0x22a]
---
Predecessors: []
Successors: []
---
0x229 JUMPDEST
0x22a STOP
---
0x229: JUMPDEST 
0x22a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x22b
[0x22b:0x231]
---
Predecessors: [0x5c]
Successors: [0x232, 0x236]
---
0x22b JUMPDEST
0x22c CALLVALUE
0x22d ISZERO
0x22e PUSH2 0x236
0x231 JUMPI
---
0x22b: JUMPDEST 
0x22c: V209 = CALLVALUE
0x22d: V210 = ISZERO V209
0x22e: V211 = 0x236
0x231: JUMPI 0x236 V210
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x232
[0x232:0x235]
---
Predecessors: [0x22b]
Successors: []
---
0x232 PUSH1 0x0
0x234 DUP1
0x235 REVERT
---
0x232: V212 = 0x0
0x235: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x236
[0x236:0x240]
---
Predecessors: [0x22b]
Successors: [0x2fb]
---
0x236 JUMPDEST
0x237 PUSH2 0x1ec
0x23a PUSH1 0x4
0x23c CALLDATALOAD
0x23d PUSH2 0x2fb
0x240 JUMP
---
0x236: JUMPDEST 
0x237: V213 = 0x1ec
0x23a: V214 = 0x4
0x23c: V215 = CALLDATALOAD 0x4
0x23d: V216 = 0x2fb
0x240: JUMP 0x2fb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ec, V215]
Exit stack: [V12, 0x1ec, V215]

================================

Block 0x241
[0x241:0x242]
---
Predecessors: []
Successors: []
---
0x241 JUMPDEST
0x242 STOP
---
0x241: JUMPDEST 
0x242: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x243
[0x243:0x249]
---
Predecessors: [0x67]
Successors: [0x24a, 0x24e]
---
0x243 JUMPDEST
0x244 CALLVALUE
0x245 ISZERO
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x243: JUMPDEST 
0x244: V217 = CALLVALUE
0x245: V218 = ISZERO V217
0x246: V219 = 0x24e
0x249: JUMPI 0x24e V218
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x243]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V220 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24e
[0x24e:0x258]
---
Predecessors: [0x243]
Successors: [0x38b]
---
0x24e JUMPDEST
0x24f PUSH2 0x1ec
0x252 PUSH1 0x4
0x254 CALLDATALOAD
0x255 PUSH2 0x38b
0x258 JUMP
---
0x24e: JUMPDEST 
0x24f: V221 = 0x1ec
0x252: V222 = 0x4
0x254: V223 = CALLDATALOAD 0x4
0x255: V224 = 0x38b
0x258: JUMP 0x38b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ec, V223]
Exit stack: [V12, 0x1ec, V223]

================================

Block 0x259
[0x259:0x25a]
---
Predecessors: []
Successors: []
---
0x259 JUMPDEST
0x25a STOP
---
0x259: JUMPDEST 
0x25a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x25b
[0x25b:0x260]
---
Predecessors: [0x15e]
Successors: [0x166]
---
0x25b JUMPDEST
0x25c PUSH1 0x1
0x25e SLOAD
0x25f DUP2
0x260 JUMP
---
0x25b: JUMPDEST 
0x25c: V225 = 0x1
0x25e: V226 = S[0x1]
0x260: JUMP 0x166
---
Entry stack: [V12, 0x166]
Stack pops: 1
Stack additions: [S0, V226]
Exit stack: [V12, 0x166, V226]

================================

Block 0x261
[0x261:0x26f]
---
Predecessors: [0x183]
Successors: [0x18b]
---
0x261 JUMPDEST
0x262 PUSH1 0x0
0x264 SLOAD
0x265 PUSH1 0x1
0x267 PUSH1 0xa0
0x269 PUSH1 0x2
0x26b EXP
0x26c SUB
0x26d AND
0x26e DUP2
0x26f JUMP
---
0x261: JUMPDEST 
0x262: V227 = 0x0
0x264: V228 = S[0x0]
0x265: V229 = 0x1
0x267: V230 = 0xa0
0x269: V231 = 0x2
0x26b: V232 = EXP 0x2 0xa0
0x26c: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26d: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x26f: JUMP 0x18b
---
Entry stack: [V12, 0x18b]
Stack pops: 1
Stack additions: [S0, V234]
Exit stack: [V12, 0x18b, V234]

================================

Block 0x270
[0x270:0x27e]
---
Predecessors: [0x1b2]
Successors: [0x18b]
---
0x270 JUMPDEST
0x271 PUSH1 0x3
0x273 SLOAD
0x274 PUSH1 0x1
0x276 PUSH1 0xa0
0x278 PUSH1 0x2
0x27a EXP
0x27b SUB
0x27c AND
0x27d DUP2
0x27e JUMP
---
0x270: JUMPDEST 
0x271: V235 = 0x3
0x273: V236 = S[0x3]
0x274: V237 = 0x1
0x276: V238 = 0xa0
0x278: V239 = 0x2
0x27a: V240 = EXP 0x2 0xa0
0x27b: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27c: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x27e: JUMP 0x18b
---
Entry stack: [V12, 0x18b]
Stack pops: 1
Stack additions: [S0, V242]
Exit stack: [V12, 0x18b, V242]

================================

Block 0x27f
[0x27f:0x295]
---
Predecessors: [0x1e1]
Successors: [0x296, 0x29a]
---
0x27f JUMPDEST
0x280 PUSH1 0x0
0x282 SLOAD
0x283 CALLER
0x284 PUSH1 0x1
0x286 PUSH1 0xa0
0x288 PUSH1 0x2
0x28a EXP
0x28b SUB
0x28c SWAP1
0x28d DUP2
0x28e AND
0x28f SWAP2
0x290 AND
0x291 EQ
0x292 PUSH2 0x29a
0x295 JUMPI
---
0x27f: JUMPDEST 
0x280: V243 = 0x0
0x282: V244 = S[0x0]
0x283: V245 = CALLER
0x284: V246 = 0x1
0x286: V247 = 0xa0
0x288: V248 = 0x2
0x28a: V249 = EXP 0x2 0xa0
0x28b: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28e: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x290: V252 = AND V244 0xffffffffffffffffffffffffffffffffffffffff
0x291: V253 = EQ V252 V251
0x292: V254 = 0x29a
0x295: JUMPI 0x29a V253
---
Entry stack: [V12, 0x1ec, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ec, V186]

================================

Block 0x296
[0x296:0x299]
---
Predecessors: [0x27f]
Successors: []
---
0x296 PUSH1 0x0
0x298 DUP1
0x299 REVERT
---
0x296: V255 = 0x0
0x299: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ec, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ec, V186]

================================

Block 0x29a
[0x29a:0x2c8]
---
Predecessors: [0x27f]
Successors: [0x2c9, 0x2cd]
---
0x29a JUMPDEST
0x29b PUSH1 0x0
0x29d SLOAD
0x29e PUSH1 0x1
0x2a0 PUSH1 0xa0
0x2a2 PUSH1 0x2
0x2a4 EXP
0x2a5 SUB
0x2a6 AND
0x2a7 DUP2
0x2a8 ISZERO
0x2a9 PUSH2 0x8fc
0x2ac MUL
0x2ad DUP3
0x2ae PUSH1 0x40
0x2b0 MLOAD
0x2b1 PUSH1 0x0
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 DUP1
0x2b7 DUP4
0x2b8 SUB
0x2b9 DUP2
0x2ba DUP6
0x2bb DUP9
0x2bc DUP9
0x2bd CALL
0x2be SWAP4
0x2bf POP
0x2c0 POP
0x2c1 POP
0x2c2 POP
0x2c3 ISZERO
0x2c4 ISZERO
0x2c5 PUSH2 0x2cd
0x2c8 JUMPI
---
0x29a: JUMPDEST 
0x29b: V256 = 0x0
0x29d: V257 = S[0x0]
0x29e: V258 = 0x1
0x2a0: V259 = 0xa0
0x2a2: V260 = 0x2
0x2a4: V261 = EXP 0x2 0xa0
0x2a5: V262 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a6: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x2a8: V264 = ISZERO V186
0x2a9: V265 = 0x8fc
0x2ac: V266 = MUL 0x8fc V264
0x2ae: V267 = 0x40
0x2b0: V268 = M[0x40]
0x2b1: V269 = 0x0
0x2b3: V270 = 0x40
0x2b5: V271 = M[0x40]
0x2b8: V272 = SUB V268 V271
0x2bd: V273 = CALL V266 V263 V186 V271 V272 V271 0x0
0x2c3: V274 = ISZERO V273
0x2c4: V275 = ISZERO V274
0x2c5: V276 = 0x2cd
0x2c8: JUMPI 0x2cd V275
---
Entry stack: [V12, 0x1ec, V186]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1ec, V186]

================================

Block 0x2c9
[0x2c9:0x2cc]
---
Predecessors: [0x29a]
Successors: []
---
0x2c9 PUSH1 0x0
0x2cb DUP1
0x2cc REVERT
---
0x2c9: V277 = 0x0
0x2cc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ec, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ec, V186]

================================

Block 0x2cd
[0x2cd:0x2cd]
---
Predecessors: [0x29a]
Successors: [0x2ce]
---
0x2cd JUMPDEST
---
0x2cd: JUMPDEST 
---
Entry stack: [V12, 0x1ec, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ec, V186]

================================

Block 0x2ce
[0x2ce:0x2d0]
---
Predecessors: [0x2cd]
Successors: [0x1ec]
---
0x2ce JUMPDEST
0x2cf POP
0x2d0 JUMP
---
0x2ce: JUMPDEST 
0x2d0: JUMP 0x1ec
---
Entry stack: [V12, 0x1ec, V186]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d1
[0x2d1:0x2d6]
---
Predecessors: [0x1f9]
Successors: [0x166]
---
0x2d1 JUMPDEST
0x2d2 PUSH1 0x2
0x2d4 SLOAD
0x2d5 DUP2
0x2d6 JUMP
---
0x2d1: JUMPDEST 
0x2d2: V278 = 0x2
0x2d4: V279 = S[0x2]
0x2d6: JUMP 0x166
---
Entry stack: [V12, 0x166]
Stack pops: 1
Stack additions: [S0, V279]
Exit stack: [V12, 0x166, V279]

================================

Block 0x2d7
[0x2d7:0x2ed]
---
Predecessors: [0x21e]
Successors: [0x2ee, 0x2f2]
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x0
0x2da SLOAD
0x2db CALLER
0x2dc PUSH1 0x1
0x2de PUSH1 0xa0
0x2e0 PUSH1 0x2
0x2e2 EXP
0x2e3 SUB
0x2e4 SWAP1
0x2e5 DUP2
0x2e6 AND
0x2e7 SWAP2
0x2e8 AND
0x2e9 EQ
0x2ea PUSH2 0x2f2
0x2ed JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V280 = 0x0
0x2da: V281 = S[0x0]
0x2db: V282 = CALLER
0x2dc: V283 = 0x1
0x2de: V284 = 0xa0
0x2e0: V285 = 0x2
0x2e2: V286 = EXP 0x2 0xa0
0x2e3: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e6: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x2e8: V289 = AND V281 0xffffffffffffffffffffffffffffffffffffffff
0x2e9: V290 = EQ V289 V288
0x2ea: V291 = 0x2f2
0x2ed: JUMPI 0x2f2 V290
---
Entry stack: [V12, 0x1ec, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ec, V207]

================================

Block 0x2ee
[0x2ee:0x2f1]
---
Predecessors: [0x2d7]
Successors: []
---
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 REVERT
---
0x2ee: V292 = 0x0
0x2f1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ec, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ec, V207]

================================

Block 0x2f2
[0x2f2:0x2f7]
---
Predecessors: [0x2d7]
Successors: [0x2f8]
---
0x2f2 JUMPDEST
0x2f3 PUSH1 0x2
0x2f5 DUP2
0x2f6 SWAP1
0x2f7 SSTORE
---
0x2f2: JUMPDEST 
0x2f3: V293 = 0x2
0x2f7: S[0x2] = V207
---
Entry stack: [V12, 0x1ec, V207]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1ec, V207]

================================

Block 0x2f8
[0x2f8:0x2fa]
---
Predecessors: [0x2f2]
Successors: [0x1ec]
---
0x2f8 JUMPDEST
0x2f9 POP
0x2fa JUMP
---
0x2f8: JUMPDEST 
0x2fa: JUMP 0x1ec
---
Entry stack: [V12, 0x1ec, V207]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fb
[0x2fb:0x311]
---
Predecessors: [0x236]
Successors: [0x312, 0x316]
---
0x2fb JUMPDEST
0x2fc PUSH1 0x0
0x2fe SLOAD
0x2ff CALLER
0x300 PUSH1 0x1
0x302 PUSH1 0xa0
0x304 PUSH1 0x2
0x306 EXP
0x307 SUB
0x308 SWAP1
0x309 DUP2
0x30a AND
0x30b SWAP2
0x30c AND
0x30d EQ
0x30e PUSH2 0x316
0x311 JUMPI
---
0x2fb: JUMPDEST 
0x2fc: V294 = 0x0
0x2fe: V295 = S[0x0]
0x2ff: V296 = CALLER
0x300: V297 = 0x1
0x302: V298 = 0xa0
0x304: V299 = 0x2
0x306: V300 = EXP 0x2 0xa0
0x307: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30a: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x30c: V303 = AND V295 0xffffffffffffffffffffffffffffffffffffffff
0x30d: V304 = EQ V303 V302
0x30e: V305 = 0x316
0x311: JUMPI 0x316 V304
---
Entry stack: [V12, 0x1ec, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ec, V215]

================================

Block 0x312
[0x312:0x315]
---
Predecessors: [0x2fb]
Successors: []
---
0x312 PUSH1 0x0
0x314 DUP1
0x315 REVERT
---
0x312: V306 = 0x0
0x315: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ec, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ec, V215]

================================

Block 0x316
[0x316:0x36e]
---
Predecessors: [0x2fb]
Successors: [0x36f, 0x373]
---
0x316 JUMPDEST
0x317 PUSH1 0x3
0x319 SLOAD
0x31a PUSH1 0x0
0x31c SLOAD
0x31d PUSH1 0x1
0x31f PUSH1 0xa0
0x321 PUSH1 0x2
0x323 EXP
0x324 SUB
0x325 SWAP2
0x326 DUP3
0x327 AND
0x328 SWAP2
0x329 PUSH4 0xa9059cbb
0x32e SWAP2
0x32f AND
0x330 DUP4
0x331 PUSH1 0x40
0x333 MLOAD
0x334 PUSH1 0xe0
0x336 PUSH1 0x2
0x338 EXP
0x339 PUSH4 0xffffffff
0x33e DUP6
0x33f AND
0x340 MUL
0x341 DUP2
0x342 MSTORE
0x343 PUSH1 0x1
0x345 PUSH1 0xa0
0x347 PUSH1 0x2
0x349 EXP
0x34a SUB
0x34b SWAP1
0x34c SWAP3
0x34d AND
0x34e PUSH1 0x4
0x350 DUP4
0x351 ADD
0x352 MSTORE
0x353 PUSH1 0x24
0x355 DUP3
0x356 ADD
0x357 MSTORE
0x358 PUSH1 0x44
0x35a ADD
0x35b PUSH1 0x0
0x35d PUSH1 0x40
0x35f MLOAD
0x360 DUP1
0x361 DUP4
0x362 SUB
0x363 DUP2
0x364 PUSH1 0x0
0x366 DUP8
0x367 DUP1
0x368 EXTCODESIZE
0x369 ISZERO
0x36a ISZERO
0x36b PUSH2 0x373
0x36e JUMPI
---
0x316: JUMPDEST 
0x317: V307 = 0x3
0x319: V308 = S[0x3]
0x31a: V309 = 0x0
0x31c: V310 = S[0x0]
0x31d: V311 = 0x1
0x31f: V312 = 0xa0
0x321: V313 = 0x2
0x323: V314 = EXP 0x2 0xa0
0x324: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x327: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x329: V317 = 0xa9059cbb
0x32f: V318 = AND V310 0xffffffffffffffffffffffffffffffffffffffff
0x331: V319 = 0x40
0x333: V320 = M[0x40]
0x334: V321 = 0xe0
0x336: V322 = 0x2
0x338: V323 = EXP 0x2 0xe0
0x339: V324 = 0xffffffff
0x33f: V325 = AND 0xa9059cbb 0xffffffff
0x340: V326 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x342: M[V320] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x343: V327 = 0x1
0x345: V328 = 0xa0
0x347: V329 = 0x2
0x349: V330 = EXP 0x2 0xa0
0x34a: V331 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34d: V332 = AND V318 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V333 = 0x4
0x351: V334 = ADD V320 0x4
0x352: M[V334] = V332
0x353: V335 = 0x24
0x356: V336 = ADD V320 0x24
0x357: M[V336] = V215
0x358: V337 = 0x44
0x35a: V338 = ADD 0x44 V320
0x35b: V339 = 0x0
0x35d: V340 = 0x40
0x35f: V341 = M[0x40]
0x362: V342 = SUB V338 V341
0x364: V343 = 0x0
0x368: V344 = EXTCODESIZE V316
0x369: V345 = ISZERO V344
0x36a: V346 = ISZERO V345
0x36b: V347 = 0x373
0x36e: JUMPI 0x373 V346
---
Entry stack: [V12, 0x1ec, V215]
Stack pops: 1
Stack additions: [S0, V316, 0xa9059cbb, V338, 0x0, V341, V342, V341, 0x0, V316]
Exit stack: [V12, 0x1ec, V215, V316, 0xa9059cbb, V338, 0x0, V341, V342, V341, 0x0, V316]

================================

Block 0x36f
[0x36f:0x372]
---
Predecessors: [0x316]
Successors: []
---
0x36f PUSH1 0x0
0x371 DUP1
0x372 REVERT
---
0x36f: V348 = 0x0
0x372: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ec, V215, V316, 0xa9059cbb, V338, 0x0, V341, V342, V341, 0x0, V316]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ec, V215, V316, 0xa9059cbb, V338, 0x0, V341, V342, V341, 0x0, V316]

================================

Block 0x373
[0x373:0x37f]
---
Predecessors: [0x316]
Successors: [0x380, 0x384]
---
0x373 JUMPDEST
0x374 PUSH2 0x2c6
0x377 GAS
0x378 SUB
0x379 CALL
0x37a ISZERO
0x37b ISZERO
0x37c PUSH2 0x384
0x37f JUMPI
---
0x373: JUMPDEST 
0x374: V349 = 0x2c6
0x377: V350 = GAS
0x378: V351 = SUB V350 0x2c6
0x379: V352 = CALL V351 V316 0x0 V341 V342 V341 0x0
0x37a: V353 = ISZERO V352
0x37b: V354 = ISZERO V353
0x37c: V355 = 0x384
0x37f: JUMPI 0x384 V354
---
Entry stack: [V12, 0x1ec, V215, V316, 0xa9059cbb, V338, 0x0, V341, V342, V341, 0x0, V316]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1ec, V215, V316, 0xa9059cbb, V338]

================================

Block 0x380
[0x380:0x383]
---
Predecessors: [0x373]
Successors: []
---
0x380 PUSH1 0x0
0x382 DUP1
0x383 REVERT
---
0x380: V356 = 0x0
0x383: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ec, V215, V316, 0xa9059cbb, V338]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ec, V215, V316, 0xa9059cbb, V338]

================================

Block 0x384
[0x384:0x387]
---
Predecessors: [0x373]
Successors: [0x388]
---
0x384 JUMPDEST
0x385 POP
0x386 POP
0x387 POP
---
0x384: JUMPDEST 
---
Entry stack: [V12, 0x1ec, V215, V316, 0xa9059cbb, V338]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x1ec, V215]

================================

Block 0x388
[0x388:0x38a]
---
Predecessors: [0x384]
Successors: [0x1ec]
---
0x388 JUMPDEST
0x389 POP
0x38a JUMP
---
0x388: JUMPDEST 
0x38a: JUMP 0x1ec
---
Entry stack: [V12, 0x1ec, V215]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x38b
[0x38b:0x3a1]
---
Predecessors: [0x24e]
Successors: [0x3a2, 0x3a6]
---
0x38b JUMPDEST
0x38c PUSH1 0x0
0x38e SLOAD
0x38f CALLER
0x390 PUSH1 0x1
0x392 PUSH1 0xa0
0x394 PUSH1 0x2
0x396 EXP
0x397 SUB
0x398 SWAP1
0x399 DUP2
0x39a AND
0x39b SWAP2
0x39c AND
0x39d EQ
0x39e PUSH2 0x3a6
0x3a1 JUMPI
---
0x38b: JUMPDEST 
0x38c: V357 = 0x0
0x38e: V358 = S[0x0]
0x38f: V359 = CALLER
0x390: V360 = 0x1
0x392: V361 = 0xa0
0x394: V362 = 0x2
0x396: V363 = EXP 0x2 0xa0
0x397: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39a: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x39c: V366 = AND V358 0xffffffffffffffffffffffffffffffffffffffff
0x39d: V367 = EQ V366 V365
0x39e: V368 = 0x3a6
0x3a1: JUMPI 0x3a6 V367
---
Entry stack: [V12, 0x1ec, V223]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ec, V223]

================================

Block 0x3a2
[0x3a2:0x3a5]
---
Predecessors: [0x38b]
Successors: []
---
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 REVERT
---
0x3a2: V369 = 0x0
0x3a5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ec, V223]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ec, V223]

================================

Block 0x3a6
[0x3a6:0x3ab]
---
Predecessors: [0x38b]
Successors: [0x3ac]
---
0x3a6 JUMPDEST
0x3a7 PUSH1 0x1
0x3a9 DUP2
0x3aa SWAP1
0x3ab SSTORE
---
0x3a6: JUMPDEST 
0x3a7: V370 = 0x1
0x3ab: S[0x1] = V223
---
Entry stack: [V12, 0x1ec, V223]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1ec, V223]

================================

Block 0x3ac
[0x3ac:0x3ae]
---
Predecessors: [0x3a6]
Successors: [0x1ec]
---
0x3ac JUMPDEST
0x3ad POP
0x3ae JUMP
---
0x3ac: JUMPDEST 
0x3ae: JUMP 0x1ec
---
Entry stack: [V12, 0x1ec, V223]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x3af
[0x3af:0x3da]
---
Predecessors: []
Successors: []
---
0x3af STOP
0x3b0 LOG1
0x3b1 PUSH6 0x627a7a723058
0x3b8 SHA3
0x3b9 NUMBER
0x3ba MISSING 0xbe
0x3bb MISSING 0xc2
0x3bc PUSH1 0xfe
0x3be GT
0x3bf LT
0x3c0 PUSH12 0xaba897c6bdd7821d01afcfbe
0x3cd MISSING 0x2b
0x3ce MISSING 0x46
0x3cf NOT
0x3d0 SWAP7
0x3d1 MISSING 0x1f
0x3d2 CALLDATASIZE
0x3d3 DIV
0x3d4 SWAP13
0x3d5 NOT
0x3d6 MISSING 0xdc
0x3d7 MISSING 0xd
0x3d8 DUP6
0x3d9 STOP
0x3da MISSING 0x29
---
0x3af: STOP 
0x3b0: LOG S0 S1 S2
0x3b1: V371 = 0x627a7a723058
0x3b8: V372 = SHA3 0x627a7a723058 S3
0x3b9: V373 = NUMBER
0x3ba: MISSING 0xbe
0x3bb: MISSING 0xc2
0x3bc: V374 = 0xfe
0x3be: V375 = GT 0xfe S0
0x3bf: V376 = LT V375 S1
0x3c0: V377 = 0xaba897c6bdd7821d01afcfbe
0x3cd: MISSING 0x2b
0x3ce: MISSING 0x46
0x3cf: V378 = NOT S0
0x3d1: MISSING 0x1f
0x3d2: V379 = CALLDATASIZE
0x3d3: V380 = DIV V379 S0
0x3d5: V381 = NOT S13
0x3d6: MISSING 0xdc
0x3d7: MISSING 0xd
0x3d9: STOP 
0x3da: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V373, V372, 0xaba897c6bdd7821d01afcfbe, V376, S7, S1, S2, S3, S4, S5, S6, V378, V381, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V380, S5, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0x29dcb0cf
Entry block: 0x153
Exit block: 0x166
Body: 0x153, 0x15a, 0x15e, 0x166, 0x25b

Function 1:
Public function signature: 0x38af3eed
Entry block: 0x178
Exit block: 0x18b
Body: 0x178, 0x17f, 0x183, 0x18b, 0x261

Function 2:
Public function signature: 0x6e66f6e9
Entry block: 0x1a7
Exit block: 0x18b
Body: 0x18b, 0x1a7, 0x1ae, 0x1b2, 0x270

Function 3:
Public function signature: 0x94effa14
Entry block: 0x1d6
Exit block: 0x1ec
Body: 0x1d6, 0x1dd, 0x1e1, 0x1ec, 0x27f, 0x296, 0x29a, 0x2c9, 0x2cd, 0x2ce

Function 4:
Public function signature: 0xa035b1fe
Entry block: 0x1ee
Exit block: 0x166
Body: 0x166, 0x1ee, 0x1f5, 0x1f9, 0x2d1

Function 5:
Public function signature: 0xc47af5cf
Entry block: 0x213
Exit block: 0x1ec
Body: 0x1ec, 0x213, 0x21a, 0x21e, 0x2d7, 0x2ee, 0x2f2, 0x2f8

Function 6:
Public function signature: 0xdc43677d
Entry block: 0x22b
Exit block: 0x1ec
Body: 0x1ec, 0x22b, 0x232, 0x236, 0x2fb, 0x312, 0x316, 0x36f, 0x373, 0x380, 0x384, 0x388

Function 7:
Public function signature: 0xf72f6826
Entry block: 0x243
Exit block: 0x1ec
Body: 0x1ec, 0x243, 0x24a, 0x24e, 0x38b, 0x3a2, 0x3a6, 0x3ac

Function 8:
Public fallback function
Entry block: 0x72
Exit block: 0x150
Body: 0x72, 0x73, 0x81, 0x85, 0x92, 0x96, 0xb9, 0xba, 0x103, 0x107, 0x114, 0x118, 0x14b, 0x14f, 0x150

