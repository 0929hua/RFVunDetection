Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x72]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x72
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x72
0xa: JUMPI 0x72 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x14a]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x29dcb0cf
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x14a
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x29dcb0cf
0x20: V14 = EQ V12 0x29dcb0cf
0x21: V15 = 0x14a
0x24: JUMPI 0x14a V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x16f]
---
0x25 DUP1
0x26 PUSH4 0x38af3eed
0x2b EQ
0x2c PUSH2 0x16f
0x2f JUMPI
---
0x26: V16 = 0x38af3eed
0x2b: V17 = EQ 0x38af3eed V12
0x2c: V18 = 0x16f
0x2f: JUMPI 0x16f V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x19e]
---
0x30 DUP1
0x31 PUSH4 0x6e66f6e9
0x36 EQ
0x37 PUSH2 0x19e
0x3a JUMPI
---
0x31: V19 = 0x6e66f6e9
0x36: V20 = EQ 0x6e66f6e9 V12
0x37: V21 = 0x19e
0x3a: JUMPI 0x19e V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1cd]
---
0x3b DUP1
0x3c PUSH4 0x94effa14
0x41 EQ
0x42 PUSH2 0x1cd
0x45 JUMPI
---
0x3c: V22 = 0x94effa14
0x41: V23 = EQ 0x94effa14 V12
0x42: V24 = 0x1cd
0x45: JUMPI 0x1cd V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1e5]
---
0x46 DUP1
0x47 PUSH4 0xa035b1fe
0x4c EQ
0x4d PUSH2 0x1e5
0x50 JUMPI
---
0x47: V25 = 0xa035b1fe
0x4c: V26 = EQ 0xa035b1fe V12
0x4d: V27 = 0x1e5
0x50: JUMPI 0x1e5 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x20a]
---
0x51 DUP1
0x52 PUSH4 0xc47af5cf
0x57 EQ
0x58 PUSH2 0x20a
0x5b JUMPI
---
0x52: V28 = 0xc47af5cf
0x57: V29 = EQ 0xc47af5cf V12
0x58: V30 = 0x20a
0x5b: JUMPI 0x20a V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x222]
---
0x5c DUP1
0x5d PUSH4 0xdc43677d
0x62 EQ
0x63 PUSH2 0x222
0x66 JUMPI
---
0x5d: V31 = 0xdc43677d
0x62: V32 = EQ 0xdc43677d V12
0x63: V33 = 0x222
0x66: JUMPI 0x222 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x23a]
---
0x67 DUP1
0x68 PUSH4 0xf72f6826
0x6d EQ
0x6e PUSH2 0x23a
0x71 JUMPI
---
0x68: V34 = 0xf72f6826
0x6d: V35 = EQ 0xf72f6826 V12
0x6e: V36 = 0x23a
0x71: JUMPI 0x23a V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x72]
---
Predecessors: [0x0, 0x67]
Successors: [0x73]
---
0x72 JUMPDEST
---
0x72: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x73
[0x73:0x80]
---
Predecessors: [0x72]
Successors: [0x81, 0x85]
---
0x73 JUMPDEST
0x74 PUSH1 0x1
0x76 SLOAD
0x77 PUSH1 0x0
0x79 SWAP1
0x7a TIMESTAMP
0x7b GT
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x73: JUMPDEST 
0x74: V37 = 0x1
0x76: V38 = S[0x1]
0x77: V39 = 0x0
0x7a: V40 = TIMESTAMP
0x7b: V41 = GT V40 V38
0x7c: V42 = ISZERO V41
0x7d: V43 = 0x85
0x80: JUMPI 0x85 V42
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x0]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x73]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V44 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0x85
[0x85:0x91]
---
Predecessors: [0x73]
Successors: [0x92, 0x96]
---
0x85 JUMPDEST
0x86 POP
0x87 PUSH1 0x2
0x89 SLOAD
0x8a CALLVALUE
0x8b SWAP1
0x8c DUP2
0x8d GT
0x8e PUSH2 0x96
0x91 JUMPI
---
0x85: JUMPDEST 
0x87: V45 = 0x2
0x89: V46 = S[0x2]
0x8a: V47 = CALLVALUE
0x8d: V48 = GT V47 V46
0x8e: V49 = 0x96
0x91: JUMPI 0x96 V48
---
Entry stack: [V12, 0x0]
Stack pops: 1
Stack additions: [V47]
Exit stack: [V12, V47]

================================

Block 0x92
[0x92:0x95]
---
Predecessors: [0x85]
Successors: []
---
0x92 PUSH1 0x0
0x94 DUP1
0x95 REVERT
---
0x92: V50 = 0x0
0x95: REVERT 0x0 0x0
---
Entry stack: [V12, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V47]

================================

Block 0x96
[0x96:0xb8]
---
Predecessors: [0x85]
Successors: [0xb9, 0xba]
---
0x96 JUMPDEST
0x97 PUSH1 0x3
0x99 SLOAD
0x9a PUSH1 0x2
0x9c SLOAD
0x9d PUSH1 0x1
0x9f PUSH1 0xa0
0xa1 PUSH1 0x2
0xa3 EXP
0xa4 SUB
0xa5 SWAP1
0xa6 SWAP2
0xa7 AND
0xa8 SWAP1
0xa9 PUSH4 0xa9059cbb
0xae SWAP1
0xaf CALLER
0xb0 SWAP1
0xb1 DUP5
0xb2 DUP2
0xb3 ISZERO
0xb4 ISZERO
0xb5 PUSH2 0xba
0xb8 JUMPI
---
0x96: JUMPDEST 
0x97: V51 = 0x3
0x99: V52 = S[0x3]
0x9a: V53 = 0x2
0x9c: V54 = S[0x2]
0x9d: V55 = 0x1
0x9f: V56 = 0xa0
0xa1: V57 = 0x2
0xa3: V58 = EXP 0x2 0xa0
0xa4: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7: V60 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0xa9: V61 = 0xa9059cbb
0xaf: V62 = CALLER
0xb3: V63 = ISZERO V54
0xb4: V64 = ISZERO V63
0xb5: V65 = 0xba
0xb8: JUMPI 0xba V64
---
Entry stack: [V12, V47]
Stack pops: 1
Stack additions: [S0, V60, 0xa9059cbb, V62, V54, S0]
Exit stack: [V12, V47, V60, 0xa9059cbb, V62, V54, V47]

================================

Block 0xb9
[0xb9:0xb9]
---
Predecessors: [0x96]
Successors: []
---
0xb9 INVALID
---
0xb9: INVALID 
---
Entry stack: [V12, V47, V60, 0xa9059cbb, V62, V54, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V47, V60, 0xa9059cbb, V62, V54, V47]

================================

Block 0xba
[0xba:0xf9]
---
Predecessors: [0x96]
Successors: [0xfa, 0xfe]
---
0xba JUMPDEST
0xbb DIV
0xbc PUSH1 0x40
0xbe MLOAD
0xbf PUSH1 0xe0
0xc1 PUSH1 0x2
0xc3 EXP
0xc4 PUSH4 0xffffffff
0xc9 DUP6
0xca AND
0xcb MUL
0xcc DUP2
0xcd MSTORE
0xce PUSH1 0x1
0xd0 PUSH1 0xa0
0xd2 PUSH1 0x2
0xd4 EXP
0xd5 SUB
0xd6 SWAP1
0xd7 SWAP3
0xd8 AND
0xd9 PUSH1 0x4
0xdb DUP4
0xdc ADD
0xdd MSTORE
0xde PUSH1 0x24
0xe0 DUP3
0xe1 ADD
0xe2 MSTORE
0xe3 PUSH1 0x44
0xe5 ADD
0xe6 PUSH1 0x0
0xe8 PUSH1 0x40
0xea MLOAD
0xeb DUP1
0xec DUP4
0xed SUB
0xee DUP2
0xef PUSH1 0x0
0xf1 DUP8
0xf2 DUP1
0xf3 EXTCODESIZE
0xf4 ISZERO
0xf5 ISZERO
0xf6 PUSH2 0xfe
0xf9 JUMPI
---
0xba: JUMPDEST 
0xbb: V66 = DIV V47 V54
0xbc: V67 = 0x40
0xbe: V68 = M[0x40]
0xbf: V69 = 0xe0
0xc1: V70 = 0x2
0xc3: V71 = EXP 0x2 0xe0
0xc4: V72 = 0xffffffff
0xca: V73 = AND 0xa9059cbb 0xffffffff
0xcb: V74 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xcd: M[V68] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xce: V75 = 0x1
0xd0: V76 = 0xa0
0xd2: V77 = 0x2
0xd4: V78 = EXP 0x2 0xa0
0xd5: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8: V80 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0xd9: V81 = 0x4
0xdc: V82 = ADD V68 0x4
0xdd: M[V82] = V80
0xde: V83 = 0x24
0xe1: V84 = ADD V68 0x24
0xe2: M[V84] = V66
0xe3: V85 = 0x44
0xe5: V86 = ADD 0x44 V68
0xe6: V87 = 0x0
0xe8: V88 = 0x40
0xea: V89 = M[0x40]
0xed: V90 = SUB V86 V89
0xef: V91 = 0x0
0xf3: V92 = EXTCODESIZE V60
0xf4: V93 = ISZERO V92
0xf5: V94 = ISZERO V93
0xf6: V95 = 0xfe
0xf9: JUMPI 0xfe V94
---
Entry stack: [V12, V47, V60, 0xa9059cbb, V62, V54, V47]
Stack pops: 5
Stack additions: [S4, S3, V86, 0x0, V89, V90, V89, 0x0, S4]
Exit stack: [V12, V47, V60, 0xa9059cbb, V86, 0x0, V89, V90, V89, 0x0, V60]

================================

Block 0xfa
[0xfa:0xfd]
---
Predecessors: [0xba]
Successors: []
---
0xfa PUSH1 0x0
0xfc DUP1
0xfd REVERT
---
0xfa: V96 = 0x0
0xfd: REVERT 0x0 0x0
---
Entry stack: [V12, V47, V60, 0xa9059cbb, V86, 0x0, V89, V90, V89, 0x0, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V47, V60, 0xa9059cbb, V86, 0x0, V89, V90, V89, 0x0, V60]

================================

Block 0xfe
[0xfe:0x10a]
---
Predecessors: [0xba]
Successors: [0x10b, 0x10f]
---
0xfe JUMPDEST
0xff PUSH2 0x2c6
0x102 GAS
0x103 SUB
0x104 CALL
0x105 ISZERO
0x106 ISZERO
0x107 PUSH2 0x10f
0x10a JUMPI
---
0xfe: JUMPDEST 
0xff: V97 = 0x2c6
0x102: V98 = GAS
0x103: V99 = SUB V98 0x2c6
0x104: V100 = CALL V99 V60 0x0 V89 V90 V89 0x0
0x105: V101 = ISZERO V100
0x106: V102 = ISZERO V101
0x107: V103 = 0x10f
0x10a: JUMPI 0x10f V102
---
Entry stack: [V12, V47, V60, 0xa9059cbb, V86, 0x0, V89, V90, V89, 0x0, V60]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V47, V60, 0xa9059cbb, V86]

================================

Block 0x10b
[0x10b:0x10e]
---
Predecessors: [0xfe]
Successors: []
---
0x10b PUSH1 0x0
0x10d DUP1
0x10e REVERT
---
0x10b: V104 = 0x0
0x10e: REVERT 0x0 0x0
---
Entry stack: [V12, V47, V60, 0xa9059cbb, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V47, V60, 0xa9059cbb, V86]

================================

Block 0x10f
[0x10f:0x141]
---
Predecessors: [0xfe]
Successors: [0x142, 0x146]
---
0x10f JUMPDEST
0x110 POP
0x111 POP
0x112 PUSH1 0x0
0x114 SLOAD
0x115 PUSH1 0x1
0x117 PUSH1 0xa0
0x119 PUSH1 0x2
0x11b EXP
0x11c SUB
0x11d AND
0x11e SWAP1
0x11f POP
0x120 DUP2
0x121 ISZERO
0x122 PUSH2 0x8fc
0x125 MUL
0x126 DUP3
0x127 PUSH1 0x40
0x129 MLOAD
0x12a PUSH1 0x0
0x12c PUSH1 0x40
0x12e MLOAD
0x12f DUP1
0x130 DUP4
0x131 SUB
0x132 DUP2
0x133 DUP6
0x134 DUP9
0x135 DUP9
0x136 CALL
0x137 SWAP4
0x138 POP
0x139 POP
0x13a POP
0x13b POP
0x13c ISZERO
0x13d ISZERO
0x13e PUSH2 0x146
0x141 JUMPI
---
0x10f: JUMPDEST 
0x112: V105 = 0x0
0x114: V106 = S[0x0]
0x115: V107 = 0x1
0x117: V108 = 0xa0
0x119: V109 = 0x2
0x11b: V110 = EXP 0x2 0xa0
0x11c: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11d: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x121: V113 = ISZERO V47
0x122: V114 = 0x8fc
0x125: V115 = MUL 0x8fc V113
0x127: V116 = 0x40
0x129: V117 = M[0x40]
0x12a: V118 = 0x0
0x12c: V119 = 0x40
0x12e: V120 = M[0x40]
0x131: V121 = SUB V117 V120
0x136: V122 = CALL V115 V112 V47 V120 V121 V120 0x0
0x13c: V123 = ISZERO V122
0x13d: V124 = ISZERO V123
0x13e: V125 = 0x146
0x141: JUMPI 0x146 V124
---
Entry stack: [V12, V47, V60, 0xa9059cbb, V86]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V47]

================================

Block 0x142
[0x142:0x145]
---
Predecessors: [0x10f]
Successors: []
---
0x142 PUSH1 0x0
0x144 DUP1
0x145 REVERT
---
0x142: V126 = 0x0
0x145: REVERT 0x0 0x0
---
Entry stack: [V12, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V47]

================================

Block 0x146
[0x146:0x146]
---
Predecessors: [0x10f]
Successors: [0x147]
---
0x146 JUMPDEST
---
0x146: JUMPDEST 
---
Entry stack: [V12, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V47]

================================

Block 0x147
[0x147:0x149]
---
Predecessors: [0x146]
Successors: []
---
0x147 JUMPDEST
0x148 POP
0x149 STOP
---
0x147: JUMPDEST 
0x149: STOP 
---
Entry stack: [V12, V47]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x14a
[0x14a:0x150]
---
Predecessors: [0xb]
Successors: [0x151, 0x155]
---
0x14a JUMPDEST
0x14b CALLVALUE
0x14c ISZERO
0x14d PUSH2 0x155
0x150 JUMPI
---
0x14a: JUMPDEST 
0x14b: V127 = CALLVALUE
0x14c: V128 = ISZERO V127
0x14d: V129 = 0x155
0x150: JUMPI 0x155 V128
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x151
[0x151:0x154]
---
Predecessors: [0x14a]
Successors: []
---
0x151 PUSH1 0x0
0x153 DUP1
0x154 REVERT
---
0x151: V130 = 0x0
0x154: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x155
[0x155:0x15c]
---
Predecessors: [0x14a]
Successors: [0x252]
---
0x155 JUMPDEST
0x156 PUSH2 0x15d
0x159 PUSH2 0x252
0x15c JUMP
---
0x155: JUMPDEST 
0x156: V131 = 0x15d
0x159: V132 = 0x252
0x15c: JUMP 0x252
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15d]
Exit stack: [V12, 0x15d]

================================

Block 0x15d
[0x15d:0x16e]
---
Predecessors: [0x252, 0x2c8]
Successors: []
---
0x15d JUMPDEST
0x15e PUSH1 0x40
0x160 MLOAD
0x161 SWAP1
0x162 DUP2
0x163 MSTORE
0x164 PUSH1 0x20
0x166 ADD
0x167 PUSH1 0x40
0x169 MLOAD
0x16a DUP1
0x16b SWAP2
0x16c SUB
0x16d SWAP1
0x16e RETURN
---
0x15d: JUMPDEST 
0x15e: V133 = 0x40
0x160: V134 = M[0x40]
0x163: M[V134] = S0
0x164: V135 = 0x20
0x166: V136 = ADD 0x20 V134
0x167: V137 = 0x40
0x169: V138 = M[0x40]
0x16c: V139 = SUB V136 V138
0x16e: RETURN V138 V139
---
Entry stack: [V12, 0x15d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15d]

================================

Block 0x16f
[0x16f:0x175]
---
Predecessors: [0x25]
Successors: [0x176, 0x17a]
---
0x16f JUMPDEST
0x170 CALLVALUE
0x171 ISZERO
0x172 PUSH2 0x17a
0x175 JUMPI
---
0x16f: JUMPDEST 
0x170: V140 = CALLVALUE
0x171: V141 = ISZERO V140
0x172: V142 = 0x17a
0x175: JUMPI 0x17a V141
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x176
[0x176:0x179]
---
Predecessors: [0x16f]
Successors: []
---
0x176 PUSH1 0x0
0x178 DUP1
0x179 REVERT
---
0x176: V143 = 0x0
0x179: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17a
[0x17a:0x181]
---
Predecessors: [0x16f]
Successors: [0x258]
---
0x17a JUMPDEST
0x17b PUSH2 0x182
0x17e PUSH2 0x258
0x181 JUMP
---
0x17a: JUMPDEST 
0x17b: V144 = 0x182
0x17e: V145 = 0x258
0x181: JUMP 0x258
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x182]
Exit stack: [V12, 0x182]

================================

Block 0x182
[0x182:0x19d]
---
Predecessors: [0x258, 0x267]
Successors: []
---
0x182 JUMPDEST
0x183 PUSH1 0x40
0x185 MLOAD
0x186 PUSH1 0x1
0x188 PUSH1 0xa0
0x18a PUSH1 0x2
0x18c EXP
0x18d SUB
0x18e SWAP1
0x18f SWAP2
0x190 AND
0x191 DUP2
0x192 MSTORE
0x193 PUSH1 0x20
0x195 ADD
0x196 PUSH1 0x40
0x198 MLOAD
0x199 DUP1
0x19a SWAP2
0x19b SUB
0x19c SWAP1
0x19d RETURN
---
0x182: JUMPDEST 
0x183: V146 = 0x40
0x185: V147 = M[0x40]
0x186: V148 = 0x1
0x188: V149 = 0xa0
0x18a: V150 = 0x2
0x18c: V151 = EXP 0x2 0xa0
0x18d: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x190: V153 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x192: M[V147] = V153
0x193: V154 = 0x20
0x195: V155 = ADD 0x20 V147
0x196: V156 = 0x40
0x198: V157 = M[0x40]
0x19b: V158 = SUB V155 V157
0x19d: RETURN V157 V158
---
Entry stack: [V12, 0x182, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x182]

================================

Block 0x19e
[0x19e:0x1a4]
---
Predecessors: [0x30]
Successors: [0x1a5, 0x1a9]
---
0x19e JUMPDEST
0x19f CALLVALUE
0x1a0 ISZERO
0x1a1 PUSH2 0x1a9
0x1a4 JUMPI
---
0x19e: JUMPDEST 
0x19f: V159 = CALLVALUE
0x1a0: V160 = ISZERO V159
0x1a1: V161 = 0x1a9
0x1a4: JUMPI 0x1a9 V160
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a5
[0x1a5:0x1a8]
---
Predecessors: [0x19e]
Successors: []
---
0x1a5 PUSH1 0x0
0x1a7 DUP1
0x1a8 REVERT
---
0x1a5: V162 = 0x0
0x1a8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a9
[0x1a9:0x1b0]
---
Predecessors: [0x19e]
Successors: [0x267]
---
0x1a9 JUMPDEST
0x1aa PUSH2 0x182
0x1ad PUSH2 0x267
0x1b0 JUMP
---
0x1a9: JUMPDEST 
0x1aa: V163 = 0x182
0x1ad: V164 = 0x267
0x1b0: JUMP 0x267
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x182]
Exit stack: [V12, 0x182]

================================

Block 0x1b1
[0x1b1:0x1cc]
---
Predecessors: []
Successors: []
---
0x1b1 JUMPDEST
0x1b2 PUSH1 0x40
0x1b4 MLOAD
0x1b5 PUSH1 0x1
0x1b7 PUSH1 0xa0
0x1b9 PUSH1 0x2
0x1bb EXP
0x1bc SUB
0x1bd SWAP1
0x1be SWAP2
0x1bf AND
0x1c0 DUP2
0x1c1 MSTORE
0x1c2 PUSH1 0x20
0x1c4 ADD
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 DUP1
0x1c9 SWAP2
0x1ca SUB
0x1cb SWAP1
0x1cc RETURN
---
0x1b1: JUMPDEST 
0x1b2: V165 = 0x40
0x1b4: V166 = M[0x40]
0x1b5: V167 = 0x1
0x1b7: V168 = 0xa0
0x1b9: V169 = 0x2
0x1bb: V170 = EXP 0x2 0xa0
0x1bc: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bf: V172 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: M[V166] = V172
0x1c2: V173 = 0x20
0x1c4: V174 = ADD 0x20 V166
0x1c5: V175 = 0x40
0x1c7: V176 = M[0x40]
0x1ca: V177 = SUB V174 V176
0x1cc: RETURN V176 V177
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1cd
[0x1cd:0x1d3]
---
Predecessors: [0x3b]
Successors: [0x1d4, 0x1d8]
---
0x1cd JUMPDEST
0x1ce CALLVALUE
0x1cf ISZERO
0x1d0 PUSH2 0x1d8
0x1d3 JUMPI
---
0x1cd: JUMPDEST 
0x1ce: V178 = CALLVALUE
0x1cf: V179 = ISZERO V178
0x1d0: V180 = 0x1d8
0x1d3: JUMPI 0x1d8 V179
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d4
[0x1d4:0x1d7]
---
Predecessors: [0x1cd]
Successors: []
---
0x1d4 PUSH1 0x0
0x1d6 DUP1
0x1d7 REVERT
---
0x1d4: V181 = 0x0
0x1d7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d8
[0x1d8:0x1e2]
---
Predecessors: [0x1cd]
Successors: [0x276]
---
0x1d8 JUMPDEST
0x1d9 PUSH2 0x1e3
0x1dc PUSH1 0x4
0x1de CALLDATALOAD
0x1df PUSH2 0x276
0x1e2 JUMP
---
0x1d8: JUMPDEST 
0x1d9: V182 = 0x1e3
0x1dc: V183 = 0x4
0x1de: V184 = CALLDATALOAD 0x4
0x1df: V185 = 0x276
0x1e2: JUMP 0x276
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e3, V184]
Exit stack: [V12, 0x1e3, V184]

================================

Block 0x1e3
[0x1e3:0x1e4]
---
Predecessors: [0x2c5, 0x2ef, 0x37f, 0x3a3]
Successors: []
---
0x1e3 JUMPDEST
0x1e4 STOP
---
0x1e3: JUMPDEST 
0x1e4: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e5
[0x1e5:0x1eb]
---
Predecessors: [0x46]
Successors: [0x1ec, 0x1f0]
---
0x1e5 JUMPDEST
0x1e6 CALLVALUE
0x1e7 ISZERO
0x1e8 PUSH2 0x1f0
0x1eb JUMPI
---
0x1e5: JUMPDEST 
0x1e6: V186 = CALLVALUE
0x1e7: V187 = ISZERO V186
0x1e8: V188 = 0x1f0
0x1eb: JUMPI 0x1f0 V187
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ec
[0x1ec:0x1ef]
---
Predecessors: [0x1e5]
Successors: []
---
0x1ec PUSH1 0x0
0x1ee DUP1
0x1ef REVERT
---
0x1ec: V189 = 0x0
0x1ef: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f0
[0x1f0:0x1f7]
---
Predecessors: [0x1e5]
Successors: [0x2c8]
---
0x1f0 JUMPDEST
0x1f1 PUSH2 0x15d
0x1f4 PUSH2 0x2c8
0x1f7 JUMP
---
0x1f0: JUMPDEST 
0x1f1: V190 = 0x15d
0x1f4: V191 = 0x2c8
0x1f7: JUMP 0x2c8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15d]
Exit stack: [V12, 0x15d]

================================

Block 0x1f8
[0x1f8:0x209]
---
Predecessors: []
Successors: []
---
0x1f8 JUMPDEST
0x1f9 PUSH1 0x40
0x1fb MLOAD
0x1fc SWAP1
0x1fd DUP2
0x1fe MSTORE
0x1ff PUSH1 0x20
0x201 ADD
0x202 PUSH1 0x40
0x204 MLOAD
0x205 DUP1
0x206 SWAP2
0x207 SUB
0x208 SWAP1
0x209 RETURN
---
0x1f8: JUMPDEST 
0x1f9: V192 = 0x40
0x1fb: V193 = M[0x40]
0x1fe: M[V193] = S0
0x1ff: V194 = 0x20
0x201: V195 = ADD 0x20 V193
0x202: V196 = 0x40
0x204: V197 = M[0x40]
0x207: V198 = SUB V195 V197
0x209: RETURN V197 V198
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x20a
[0x20a:0x210]
---
Predecessors: [0x51]
Successors: [0x211, 0x215]
---
0x20a JUMPDEST
0x20b CALLVALUE
0x20c ISZERO
0x20d PUSH2 0x215
0x210 JUMPI
---
0x20a: JUMPDEST 
0x20b: V199 = CALLVALUE
0x20c: V200 = ISZERO V199
0x20d: V201 = 0x215
0x210: JUMPI 0x215 V200
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x211
[0x211:0x214]
---
Predecessors: [0x20a]
Successors: []
---
0x211 PUSH1 0x0
0x213 DUP1
0x214 REVERT
---
0x211: V202 = 0x0
0x214: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x215
[0x215:0x21f]
---
Predecessors: [0x20a]
Successors: [0x2ce]
---
0x215 JUMPDEST
0x216 PUSH2 0x1e3
0x219 PUSH1 0x4
0x21b CALLDATALOAD
0x21c PUSH2 0x2ce
0x21f JUMP
---
0x215: JUMPDEST 
0x216: V203 = 0x1e3
0x219: V204 = 0x4
0x21b: V205 = CALLDATALOAD 0x4
0x21c: V206 = 0x2ce
0x21f: JUMP 0x2ce
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e3, V205]
Exit stack: [V12, 0x1e3, V205]

================================

Block 0x220
[0x220:0x221]
---
Predecessors: []
Successors: []
---
0x220 JUMPDEST
0x221 STOP
---
0x220: JUMPDEST 
0x221: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x222
[0x222:0x228]
---
Predecessors: [0x5c]
Successors: [0x229, 0x22d]
---
0x222 JUMPDEST
0x223 CALLVALUE
0x224 ISZERO
0x225 PUSH2 0x22d
0x228 JUMPI
---
0x222: JUMPDEST 
0x223: V207 = CALLVALUE
0x224: V208 = ISZERO V207
0x225: V209 = 0x22d
0x228: JUMPI 0x22d V208
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x229
[0x229:0x22c]
---
Predecessors: [0x222]
Successors: []
---
0x229 PUSH1 0x0
0x22b DUP1
0x22c REVERT
---
0x229: V210 = 0x0
0x22c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22d
[0x22d:0x237]
---
Predecessors: [0x222]
Successors: [0x2f2]
---
0x22d JUMPDEST
0x22e PUSH2 0x1e3
0x231 PUSH1 0x4
0x233 CALLDATALOAD
0x234 PUSH2 0x2f2
0x237 JUMP
---
0x22d: JUMPDEST 
0x22e: V211 = 0x1e3
0x231: V212 = 0x4
0x233: V213 = CALLDATALOAD 0x4
0x234: V214 = 0x2f2
0x237: JUMP 0x2f2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e3, V213]
Exit stack: [V12, 0x1e3, V213]

================================

Block 0x238
[0x238:0x239]
---
Predecessors: []
Successors: []
---
0x238 JUMPDEST
0x239 STOP
---
0x238: JUMPDEST 
0x239: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x23a
[0x23a:0x240]
---
Predecessors: [0x67]
Successors: [0x241, 0x245]
---
0x23a JUMPDEST
0x23b CALLVALUE
0x23c ISZERO
0x23d PUSH2 0x245
0x240 JUMPI
---
0x23a: JUMPDEST 
0x23b: V215 = CALLVALUE
0x23c: V216 = ISZERO V215
0x23d: V217 = 0x245
0x240: JUMPI 0x245 V216
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x241
[0x241:0x244]
---
Predecessors: [0x23a]
Successors: []
---
0x241 PUSH1 0x0
0x243 DUP1
0x244 REVERT
---
0x241: V218 = 0x0
0x244: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x245
[0x245:0x24f]
---
Predecessors: [0x23a]
Successors: [0x382]
---
0x245 JUMPDEST
0x246 PUSH2 0x1e3
0x249 PUSH1 0x4
0x24b CALLDATALOAD
0x24c PUSH2 0x382
0x24f JUMP
---
0x245: JUMPDEST 
0x246: V219 = 0x1e3
0x249: V220 = 0x4
0x24b: V221 = CALLDATALOAD 0x4
0x24c: V222 = 0x382
0x24f: JUMP 0x382
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e3, V221]
Exit stack: [V12, 0x1e3, V221]

================================

Block 0x250
[0x250:0x251]
---
Predecessors: []
Successors: []
---
0x250 JUMPDEST
0x251 STOP
---
0x250: JUMPDEST 
0x251: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x252
[0x252:0x257]
---
Predecessors: [0x155]
Successors: [0x15d]
---
0x252 JUMPDEST
0x253 PUSH1 0x1
0x255 SLOAD
0x256 DUP2
0x257 JUMP
---
0x252: JUMPDEST 
0x253: V223 = 0x1
0x255: V224 = S[0x1]
0x257: JUMP 0x15d
---
Entry stack: [V12, 0x15d]
Stack pops: 1
Stack additions: [S0, V224]
Exit stack: [V12, 0x15d, V224]

================================

Block 0x258
[0x258:0x266]
---
Predecessors: [0x17a]
Successors: [0x182]
---
0x258 JUMPDEST
0x259 PUSH1 0x0
0x25b SLOAD
0x25c PUSH1 0x1
0x25e PUSH1 0xa0
0x260 PUSH1 0x2
0x262 EXP
0x263 SUB
0x264 AND
0x265 DUP2
0x266 JUMP
---
0x258: JUMPDEST 
0x259: V225 = 0x0
0x25b: V226 = S[0x0]
0x25c: V227 = 0x1
0x25e: V228 = 0xa0
0x260: V229 = 0x2
0x262: V230 = EXP 0x2 0xa0
0x263: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x264: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x266: JUMP 0x182
---
Entry stack: [V12, 0x182]
Stack pops: 1
Stack additions: [S0, V232]
Exit stack: [V12, 0x182, V232]

================================

Block 0x267
[0x267:0x275]
---
Predecessors: [0x1a9]
Successors: [0x182]
---
0x267 JUMPDEST
0x268 PUSH1 0x3
0x26a SLOAD
0x26b PUSH1 0x1
0x26d PUSH1 0xa0
0x26f PUSH1 0x2
0x271 EXP
0x272 SUB
0x273 AND
0x274 DUP2
0x275 JUMP
---
0x267: JUMPDEST 
0x268: V233 = 0x3
0x26a: V234 = S[0x3]
0x26b: V235 = 0x1
0x26d: V236 = 0xa0
0x26f: V237 = 0x2
0x271: V238 = EXP 0x2 0xa0
0x272: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x273: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x275: JUMP 0x182
---
Entry stack: [V12, 0x182]
Stack pops: 1
Stack additions: [S0, V240]
Exit stack: [V12, 0x182, V240]

================================

Block 0x276
[0x276:0x28c]
---
Predecessors: [0x1d8]
Successors: [0x28d, 0x291]
---
0x276 JUMPDEST
0x277 PUSH1 0x0
0x279 SLOAD
0x27a CALLER
0x27b PUSH1 0x1
0x27d PUSH1 0xa0
0x27f PUSH1 0x2
0x281 EXP
0x282 SUB
0x283 SWAP1
0x284 DUP2
0x285 AND
0x286 SWAP2
0x287 AND
0x288 EQ
0x289 PUSH2 0x291
0x28c JUMPI
---
0x276: JUMPDEST 
0x277: V241 = 0x0
0x279: V242 = S[0x0]
0x27a: V243 = CALLER
0x27b: V244 = 0x1
0x27d: V245 = 0xa0
0x27f: V246 = 0x2
0x281: V247 = EXP 0x2 0xa0
0x282: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x285: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x287: V250 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x288: V251 = EQ V250 V249
0x289: V252 = 0x291
0x28c: JUMPI 0x291 V251
---
Entry stack: [V12, 0x1e3, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e3, V184]

================================

Block 0x28d
[0x28d:0x290]
---
Predecessors: [0x276]
Successors: []
---
0x28d PUSH1 0x0
0x28f DUP1
0x290 REVERT
---
0x28d: V253 = 0x0
0x290: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1e3, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e3, V184]

================================

Block 0x291
[0x291:0x2bf]
---
Predecessors: [0x276]
Successors: [0x2c0, 0x2c4]
---
0x291 JUMPDEST
0x292 PUSH1 0x0
0x294 SLOAD
0x295 PUSH1 0x1
0x297 PUSH1 0xa0
0x299 PUSH1 0x2
0x29b EXP
0x29c SUB
0x29d AND
0x29e DUP2
0x29f ISZERO
0x2a0 PUSH2 0x8fc
0x2a3 MUL
0x2a4 DUP3
0x2a5 PUSH1 0x40
0x2a7 MLOAD
0x2a8 PUSH1 0x0
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad DUP1
0x2ae DUP4
0x2af SUB
0x2b0 DUP2
0x2b1 DUP6
0x2b2 DUP9
0x2b3 DUP9
0x2b4 CALL
0x2b5 SWAP4
0x2b6 POP
0x2b7 POP
0x2b8 POP
0x2b9 POP
0x2ba ISZERO
0x2bb ISZERO
0x2bc PUSH2 0x2c4
0x2bf JUMPI
---
0x291: JUMPDEST 
0x292: V254 = 0x0
0x294: V255 = S[0x0]
0x295: V256 = 0x1
0x297: V257 = 0xa0
0x299: V258 = 0x2
0x29b: V259 = EXP 0x2 0xa0
0x29c: V260 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29d: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x29f: V262 = ISZERO V184
0x2a0: V263 = 0x8fc
0x2a3: V264 = MUL 0x8fc V262
0x2a5: V265 = 0x40
0x2a7: V266 = M[0x40]
0x2a8: V267 = 0x0
0x2aa: V268 = 0x40
0x2ac: V269 = M[0x40]
0x2af: V270 = SUB V266 V269
0x2b4: V271 = CALL V264 V261 V184 V269 V270 V269 0x0
0x2ba: V272 = ISZERO V271
0x2bb: V273 = ISZERO V272
0x2bc: V274 = 0x2c4
0x2bf: JUMPI 0x2c4 V273
---
Entry stack: [V12, 0x1e3, V184]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1e3, V184]

================================

Block 0x2c0
[0x2c0:0x2c3]
---
Predecessors: [0x291]
Successors: []
---
0x2c0 PUSH1 0x0
0x2c2 DUP1
0x2c3 REVERT
---
0x2c0: V275 = 0x0
0x2c3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1e3, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e3, V184]

================================

Block 0x2c4
[0x2c4:0x2c4]
---
Predecessors: [0x291]
Successors: [0x2c5]
---
0x2c4 JUMPDEST
---
0x2c4: JUMPDEST 
---
Entry stack: [V12, 0x1e3, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e3, V184]

================================

Block 0x2c5
[0x2c5:0x2c7]
---
Predecessors: [0x2c4]
Successors: [0x1e3]
---
0x2c5 JUMPDEST
0x2c6 POP
0x2c7 JUMP
---
0x2c5: JUMPDEST 
0x2c7: JUMP 0x1e3
---
Entry stack: [V12, 0x1e3, V184]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c8
[0x2c8:0x2cd]
---
Predecessors: [0x1f0]
Successors: [0x15d]
---
0x2c8 JUMPDEST
0x2c9 PUSH1 0x2
0x2cb SLOAD
0x2cc DUP2
0x2cd JUMP
---
0x2c8: JUMPDEST 
0x2c9: V276 = 0x2
0x2cb: V277 = S[0x2]
0x2cd: JUMP 0x15d
---
Entry stack: [V12, 0x15d]
Stack pops: 1
Stack additions: [S0, V277]
Exit stack: [V12, 0x15d, V277]

================================

Block 0x2ce
[0x2ce:0x2e4]
---
Predecessors: [0x215]
Successors: [0x2e5, 0x2e9]
---
0x2ce JUMPDEST
0x2cf PUSH1 0x0
0x2d1 SLOAD
0x2d2 CALLER
0x2d3 PUSH1 0x1
0x2d5 PUSH1 0xa0
0x2d7 PUSH1 0x2
0x2d9 EXP
0x2da SUB
0x2db SWAP1
0x2dc DUP2
0x2dd AND
0x2de SWAP2
0x2df AND
0x2e0 EQ
0x2e1 PUSH2 0x2e9
0x2e4 JUMPI
---
0x2ce: JUMPDEST 
0x2cf: V278 = 0x0
0x2d1: V279 = S[0x0]
0x2d2: V280 = CALLER
0x2d3: V281 = 0x1
0x2d5: V282 = 0xa0
0x2d7: V283 = 0x2
0x2d9: V284 = EXP 0x2 0xa0
0x2da: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2dd: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x2df: V287 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x2e0: V288 = EQ V287 V286
0x2e1: V289 = 0x2e9
0x2e4: JUMPI 0x2e9 V288
---
Entry stack: [V12, 0x1e3, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e3, V205]

================================

Block 0x2e5
[0x2e5:0x2e8]
---
Predecessors: [0x2ce]
Successors: []
---
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 REVERT
---
0x2e5: V290 = 0x0
0x2e8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1e3, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e3, V205]

================================

Block 0x2e9
[0x2e9:0x2ee]
---
Predecessors: [0x2ce]
Successors: [0x2ef]
---
0x2e9 JUMPDEST
0x2ea PUSH1 0x2
0x2ec DUP2
0x2ed SWAP1
0x2ee SSTORE
---
0x2e9: JUMPDEST 
0x2ea: V291 = 0x2
0x2ee: S[0x2] = V205
---
Entry stack: [V12, 0x1e3, V205]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1e3, V205]

================================

Block 0x2ef
[0x2ef:0x2f1]
---
Predecessors: [0x2e9]
Successors: [0x1e3]
---
0x2ef JUMPDEST
0x2f0 POP
0x2f1 JUMP
---
0x2ef: JUMPDEST 
0x2f1: JUMP 0x1e3
---
Entry stack: [V12, 0x1e3, V205]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f2
[0x2f2:0x308]
---
Predecessors: [0x22d]
Successors: [0x309, 0x30d]
---
0x2f2 JUMPDEST
0x2f3 PUSH1 0x0
0x2f5 SLOAD
0x2f6 CALLER
0x2f7 PUSH1 0x1
0x2f9 PUSH1 0xa0
0x2fb PUSH1 0x2
0x2fd EXP
0x2fe SUB
0x2ff SWAP1
0x300 DUP2
0x301 AND
0x302 SWAP2
0x303 AND
0x304 EQ
0x305 PUSH2 0x30d
0x308 JUMPI
---
0x2f2: JUMPDEST 
0x2f3: V292 = 0x0
0x2f5: V293 = S[0x0]
0x2f6: V294 = CALLER
0x2f7: V295 = 0x1
0x2f9: V296 = 0xa0
0x2fb: V297 = 0x2
0x2fd: V298 = EXP 0x2 0xa0
0x2fe: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x301: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x303: V301 = AND V293 0xffffffffffffffffffffffffffffffffffffffff
0x304: V302 = EQ V301 V300
0x305: V303 = 0x30d
0x308: JUMPI 0x30d V302
---
Entry stack: [V12, 0x1e3, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e3, V213]

================================

Block 0x309
[0x309:0x30c]
---
Predecessors: [0x2f2]
Successors: []
---
0x309 PUSH1 0x0
0x30b DUP1
0x30c REVERT
---
0x309: V304 = 0x0
0x30c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1e3, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e3, V213]

================================

Block 0x30d
[0x30d:0x365]
---
Predecessors: [0x2f2]
Successors: [0x366, 0x36a]
---
0x30d JUMPDEST
0x30e PUSH1 0x3
0x310 SLOAD
0x311 PUSH1 0x0
0x313 SLOAD
0x314 PUSH1 0x1
0x316 PUSH1 0xa0
0x318 PUSH1 0x2
0x31a EXP
0x31b SUB
0x31c SWAP2
0x31d DUP3
0x31e AND
0x31f SWAP2
0x320 PUSH4 0xa9059cbb
0x325 SWAP2
0x326 AND
0x327 DUP4
0x328 PUSH1 0x40
0x32a MLOAD
0x32b PUSH1 0xe0
0x32d PUSH1 0x2
0x32f EXP
0x330 PUSH4 0xffffffff
0x335 DUP6
0x336 AND
0x337 MUL
0x338 DUP2
0x339 MSTORE
0x33a PUSH1 0x1
0x33c PUSH1 0xa0
0x33e PUSH1 0x2
0x340 EXP
0x341 SUB
0x342 SWAP1
0x343 SWAP3
0x344 AND
0x345 PUSH1 0x4
0x347 DUP4
0x348 ADD
0x349 MSTORE
0x34a PUSH1 0x24
0x34c DUP3
0x34d ADD
0x34e MSTORE
0x34f PUSH1 0x44
0x351 ADD
0x352 PUSH1 0x0
0x354 PUSH1 0x40
0x356 MLOAD
0x357 DUP1
0x358 DUP4
0x359 SUB
0x35a DUP2
0x35b PUSH1 0x0
0x35d DUP8
0x35e DUP1
0x35f EXTCODESIZE
0x360 ISZERO
0x361 ISZERO
0x362 PUSH2 0x36a
0x365 JUMPI
---
0x30d: JUMPDEST 
0x30e: V305 = 0x3
0x310: V306 = S[0x3]
0x311: V307 = 0x0
0x313: V308 = S[0x0]
0x314: V309 = 0x1
0x316: V310 = 0xa0
0x318: V311 = 0x2
0x31a: V312 = EXP 0x2 0xa0
0x31b: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31e: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x320: V315 = 0xa9059cbb
0x326: V316 = AND V308 0xffffffffffffffffffffffffffffffffffffffff
0x328: V317 = 0x40
0x32a: V318 = M[0x40]
0x32b: V319 = 0xe0
0x32d: V320 = 0x2
0x32f: V321 = EXP 0x2 0xe0
0x330: V322 = 0xffffffff
0x336: V323 = AND 0xa9059cbb 0xffffffff
0x337: V324 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x339: M[V318] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x33a: V325 = 0x1
0x33c: V326 = 0xa0
0x33e: V327 = 0x2
0x340: V328 = EXP 0x2 0xa0
0x341: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x344: V330 = AND V316 0xffffffffffffffffffffffffffffffffffffffff
0x345: V331 = 0x4
0x348: V332 = ADD V318 0x4
0x349: M[V332] = V330
0x34a: V333 = 0x24
0x34d: V334 = ADD V318 0x24
0x34e: M[V334] = V213
0x34f: V335 = 0x44
0x351: V336 = ADD 0x44 V318
0x352: V337 = 0x0
0x354: V338 = 0x40
0x356: V339 = M[0x40]
0x359: V340 = SUB V336 V339
0x35b: V341 = 0x0
0x35f: V342 = EXTCODESIZE V314
0x360: V343 = ISZERO V342
0x361: V344 = ISZERO V343
0x362: V345 = 0x36a
0x365: JUMPI 0x36a V344
---
Entry stack: [V12, 0x1e3, V213]
Stack pops: 1
Stack additions: [S0, V314, 0xa9059cbb, V336, 0x0, V339, V340, V339, 0x0, V314]
Exit stack: [V12, 0x1e3, V213, V314, 0xa9059cbb, V336, 0x0, V339, V340, V339, 0x0, V314]

================================

Block 0x366
[0x366:0x369]
---
Predecessors: [0x30d]
Successors: []
---
0x366 PUSH1 0x0
0x368 DUP1
0x369 REVERT
---
0x366: V346 = 0x0
0x369: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1e3, V213, V314, 0xa9059cbb, V336, 0x0, V339, V340, V339, 0x0, V314]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e3, V213, V314, 0xa9059cbb, V336, 0x0, V339, V340, V339, 0x0, V314]

================================

Block 0x36a
[0x36a:0x376]
---
Predecessors: [0x30d]
Successors: [0x377, 0x37b]
---
0x36a JUMPDEST
0x36b PUSH2 0x2c6
0x36e GAS
0x36f SUB
0x370 CALL
0x371 ISZERO
0x372 ISZERO
0x373 PUSH2 0x37b
0x376 JUMPI
---
0x36a: JUMPDEST 
0x36b: V347 = 0x2c6
0x36e: V348 = GAS
0x36f: V349 = SUB V348 0x2c6
0x370: V350 = CALL V349 V314 0x0 V339 V340 V339 0x0
0x371: V351 = ISZERO V350
0x372: V352 = ISZERO V351
0x373: V353 = 0x37b
0x376: JUMPI 0x37b V352
---
Entry stack: [V12, 0x1e3, V213, V314, 0xa9059cbb, V336, 0x0, V339, V340, V339, 0x0, V314]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1e3, V213, V314, 0xa9059cbb, V336]

================================

Block 0x377
[0x377:0x37a]
---
Predecessors: [0x36a]
Successors: []
---
0x377 PUSH1 0x0
0x379 DUP1
0x37a REVERT
---
0x377: V354 = 0x0
0x37a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1e3, V213, V314, 0xa9059cbb, V336]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e3, V213, V314, 0xa9059cbb, V336]

================================

Block 0x37b
[0x37b:0x37e]
---
Predecessors: [0x36a]
Successors: [0x37f]
---
0x37b JUMPDEST
0x37c POP
0x37d POP
0x37e POP
---
0x37b: JUMPDEST 
---
Entry stack: [V12, 0x1e3, V213, V314, 0xa9059cbb, V336]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x1e3, V213]

================================

Block 0x37f
[0x37f:0x381]
---
Predecessors: [0x37b]
Successors: [0x1e3]
---
0x37f JUMPDEST
0x380 POP
0x381 JUMP
---
0x37f: JUMPDEST 
0x381: JUMP 0x1e3
---
Entry stack: [V12, 0x1e3, V213]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x382
[0x382:0x398]
---
Predecessors: [0x245]
Successors: [0x399, 0x39d]
---
0x382 JUMPDEST
0x383 PUSH1 0x0
0x385 SLOAD
0x386 CALLER
0x387 PUSH1 0x1
0x389 PUSH1 0xa0
0x38b PUSH1 0x2
0x38d EXP
0x38e SUB
0x38f SWAP1
0x390 DUP2
0x391 AND
0x392 SWAP2
0x393 AND
0x394 EQ
0x395 PUSH2 0x39d
0x398 JUMPI
---
0x382: JUMPDEST 
0x383: V355 = 0x0
0x385: V356 = S[0x0]
0x386: V357 = CALLER
0x387: V358 = 0x1
0x389: V359 = 0xa0
0x38b: V360 = 0x2
0x38d: V361 = EXP 0x2 0xa0
0x38e: V362 = SUB 0x10000000000000000000000000000000000000000 0x1
0x391: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x393: V364 = AND V356 0xffffffffffffffffffffffffffffffffffffffff
0x394: V365 = EQ V364 V363
0x395: V366 = 0x39d
0x398: JUMPI 0x39d V365
---
Entry stack: [V12, 0x1e3, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e3, V221]

================================

Block 0x399
[0x399:0x39c]
---
Predecessors: [0x382]
Successors: []
---
0x399 PUSH1 0x0
0x39b DUP1
0x39c REVERT
---
0x399: V367 = 0x0
0x39c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1e3, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e3, V221]

================================

Block 0x39d
[0x39d:0x3a2]
---
Predecessors: [0x382]
Successors: [0x3a3]
---
0x39d JUMPDEST
0x39e PUSH1 0x1
0x3a0 DUP2
0x3a1 SWAP1
0x3a2 SSTORE
---
0x39d: JUMPDEST 
0x39e: V368 = 0x1
0x3a2: S[0x1] = V221
---
Entry stack: [V12, 0x1e3, V221]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1e3, V221]

================================

Block 0x3a3
[0x3a3:0x3a5]
---
Predecessors: [0x39d]
Successors: [0x1e3]
---
0x3a3 JUMPDEST
0x3a4 POP
0x3a5 JUMP
---
0x3a3: JUMPDEST 
0x3a5: JUMP 0x1e3
---
Entry stack: [V12, 0x1e3, V221]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a6
[0x3a6:0x3d1]
---
Predecessors: []
Successors: []
---
0x3a6 STOP
0x3a7 LOG1
0x3a8 PUSH6 0x627a7a723058
0x3af SHA3
0x3b0 MISSING 0xab
0x3b1 MISSING 0xf7
0x3b2 DUP11
0x3b3 MISSING 0x26
0x3b4 SAR
0x3b5 COINBASE
0x3b6 MISSING 0x47
0x3b7 SAR
0x3b8 MISSING 0xc3
0x3b9 MISSING 0xab
0x3ba DUP3
0x3bb MISSING 0xb2
0x3bc MISSING 0xdb
0x3bd SWAP1
0x3be MISSING 0xa6
0x3bf MISSING 0xef
0x3c0 MISSING 0x23
0x3c1 PUSH8 0xf965e1e567d9b3fa
0x3ca MISSING 0xb8
0x3cb MISSING 0xde
0x3cc DUP16
0x3cd MISSING 0x2b
0x3ce MISSING 0x4d
0x3cf CODESIZE
0x3d0 STOP
0x3d1 MISSING 0x29
---
0x3a6: STOP 
0x3a7: LOG S0 S1 S2
0x3a8: V369 = 0x627a7a723058
0x3af: V370 = SHA3 0x627a7a723058 S3
0x3b0: MISSING 0xab
0x3b1: MISSING 0xf7
0x3b3: MISSING 0x26
0x3b4: V371 = SAR S0 S1
0x3b5: V372 = COINBASE
0x3b6: MISSING 0x47
0x3b7: V373 = SAR S0 S1
0x3b8: MISSING 0xc3
0x3b9: MISSING 0xab
0x3bb: MISSING 0xb2
0x3bc: MISSING 0xdb
0x3be: MISSING 0xa6
0x3bf: MISSING 0xef
0x3c0: MISSING 0x23
0x3c1: V374 = 0xf965e1e567d9b3fa
0x3ca: MISSING 0xb8
0x3cb: MISSING 0xde
0x3cd: MISSING 0x2b
0x3ce: MISSING 0x4d
0x3cf: V375 = CODESIZE
0x3d0: STOP 
0x3d1: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V370, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V372, V371, V373, S2, S0, S1, S2, S1, S0, 0xf965e1e567d9b3fa, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V375]
Exit stack: []

================================

Function 0:
Public function signature: 0x29dcb0cf
Entry block: 0x14a
Exit block: 0x15d
Body: 0x14a, 0x151, 0x155, 0x15d, 0x252

Function 1:
Public function signature: 0x38af3eed
Entry block: 0x16f
Exit block: 0x182
Body: 0x16f, 0x176, 0x17a, 0x182, 0x258

Function 2:
Public function signature: 0x6e66f6e9
Entry block: 0x19e
Exit block: 0x182
Body: 0x182, 0x19e, 0x1a5, 0x1a9, 0x267

Function 3:
Public function signature: 0x94effa14
Entry block: 0x1cd
Exit block: 0x1e3
Body: 0x1cd, 0x1d4, 0x1d8, 0x1e3, 0x276, 0x28d, 0x291, 0x2c0, 0x2c4, 0x2c5

Function 4:
Public function signature: 0xa035b1fe
Entry block: 0x1e5
Exit block: 0x15d
Body: 0x15d, 0x1e5, 0x1ec, 0x1f0, 0x2c8

Function 5:
Public function signature: 0xc47af5cf
Entry block: 0x20a
Exit block: 0x1e3
Body: 0x1e3, 0x20a, 0x211, 0x215, 0x2ce, 0x2e5, 0x2e9, 0x2ef

Function 6:
Public function signature: 0xdc43677d
Entry block: 0x222
Exit block: 0x1e3
Body: 0x1e3, 0x222, 0x229, 0x22d, 0x2f2, 0x309, 0x30d, 0x366, 0x36a, 0x377, 0x37b, 0x37f

Function 7:
Public function signature: 0xf72f6826
Entry block: 0x23a
Exit block: 0x1e3
Body: 0x1e3, 0x23a, 0x241, 0x245, 0x382, 0x399, 0x39d, 0x3a3

Function 8:
Public fallback function
Entry block: 0x72
Exit block: 0x147
Body: 0x72, 0x73, 0x81, 0x85, 0x92, 0x96, 0xb9, 0xba, 0xfa, 0xfe, 0x10b, 0x10f, 0x142, 0x146, 0x147

