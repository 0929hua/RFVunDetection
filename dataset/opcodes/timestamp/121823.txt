Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x96]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x96
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x96
0xa: JUMPI 0x96 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x1f6]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x1cb3b20
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x1f6
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x1cb3b20
0x39: V12 = EQ V10 0x1cb3b20
0x3a: V13 = 0x1f6
0x3d: JUMPI 0x1f6 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x20b]
---
0x3e DUP1
0x3f PUSH4 0x29dcb0cf
0x44 EQ
0x45 PUSH2 0x20b
0x48 JUMPI
---
0x3f: V14 = 0x29dcb0cf
0x44: V15 = EQ 0x29dcb0cf V10
0x45: V16 = 0x20b
0x48: JUMPI 0x20b V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x230]
---
0x49 DUP1
0x4a PUSH4 0x38af3eed
0x4f EQ
0x50 PUSH2 0x230
0x53 JUMPI
---
0x4a: V17 = 0x38af3eed
0x4f: V18 = EQ 0x38af3eed V10
0x50: V19 = 0x230
0x53: JUMPI 0x230 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x25f]
---
0x54 DUP1
0x55 PUSH4 0x6e66f6e9
0x5a EQ
0x5b PUSH2 0x25f
0x5e JUMPI
---
0x55: V20 = 0x6e66f6e9
0x5a: V21 = EQ 0x6e66f6e9 V10
0x5b: V22 = 0x25f
0x5e: JUMPI 0x25f V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x28e]
---
0x5f DUP1
0x60 PUSH4 0x70a08231
0x65 EQ
0x66 PUSH2 0x28e
0x69 JUMPI
---
0x60: V23 = 0x70a08231
0x65: V24 = EQ 0x70a08231 V10
0x66: V25 = 0x28e
0x69: JUMPI 0x28e V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x2bf]
---
0x6a DUP1
0x6b PUSH4 0x7a3a0e84
0x70 EQ
0x71 PUSH2 0x2bf
0x74 JUMPI
---
0x6b: V26 = 0x7a3a0e84
0x70: V27 = EQ 0x7a3a0e84 V10
0x71: V28 = 0x2bf
0x74: JUMPI 0x2bf V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x2e4]
---
0x75 DUP1
0x76 PUSH4 0x7b3e5e7b
0x7b EQ
0x7c PUSH2 0x2e4
0x7f JUMPI
---
0x76: V29 = 0x7b3e5e7b
0x7b: V30 = EQ 0x7b3e5e7b V10
0x7c: V31 = 0x2e4
0x7f: JUMPI 0x2e4 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x309]
---
0x80 DUP1
0x81 PUSH4 0xa035b1fe
0x86 EQ
0x87 PUSH2 0x309
0x8a JUMPI
---
0x81: V32 = 0xa035b1fe
0x86: V33 = EQ 0xa035b1fe V10
0x87: V34 = 0x309
0x8a: JUMPI 0x309 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x32e]
---
0x8b DUP1
0x8c PUSH4 0xfd6b7ef8
0x91 EQ
0x92 PUSH2 0x32e
0x95 JUMPI
---
0x8c: V35 = 0xfd6b7ef8
0x91: V36 = EQ 0xfd6b7ef8 V10
0x92: V37 = 0x32e
0x95: JUMPI 0x32e V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0x96]
---
Predecessors: [0x0, 0x8b]
Successors: [0x97]
---
0x96 JUMPDEST
---
0x96: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x97
[0x97:0xaa]
---
Predecessors: [0x96]
Successors: [0xab, 0xaf]
---
0x97 JUMPDEST
0x98 PUSH1 0x7
0x9a SLOAD
0x9b PUSH1 0x0
0x9d SWAP1
0x9e PUSH2 0x100
0xa1 SWAP1
0xa2 DIV
0xa3 PUSH1 0xff
0xa5 AND
0xa6 ISZERO
0xa7 PUSH2 0xaf
0xaa JUMPI
---
0x97: JUMPDEST 
0x98: V38 = 0x7
0x9a: V39 = S[0x7]
0x9b: V40 = 0x0
0x9e: V41 = 0x100
0xa2: V42 = DIV V39 0x100
0xa3: V43 = 0xff
0xa5: V44 = AND 0xff V42
0xa6: V45 = ISZERO V44
0xa7: V46 = 0xaf
0xaa: JUMPI 0xaf V45
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x0]

================================

Block 0xab
[0xab:0xae]
---
Predecessors: [0x97]
Successors: []
---
0xab PUSH1 0x0
0xad DUP1
0xae REVERT
---
0xab: V47 = 0x0
0xae: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xaf
[0xaf:0xbe]
---
Predecessors: [0x97]
Successors: [0xbf, 0xc3]
---
0xaf JUMPDEST
0xb0 PUSH7 0x2386f26fc10000
0xb8 CALLVALUE
0xb9 LT
0xba ISZERO
0xbb PUSH2 0xc3
0xbe JUMPI
---
0xaf: JUMPDEST 
0xb0: V48 = 0x2386f26fc10000
0xb8: V49 = CALLVALUE
0xb9: V50 = LT V49 0x2386f26fc10000
0xba: V51 = ISZERO V50
0xbb: V52 = 0xc3
0xbe: JUMPI 0xc3 V51
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0xaf]
Successors: []
---
0xbf PUSH1 0x0
0xc1 DUP1
0xc2 REVERT
---
0xbf: V53 = 0x0
0xc2: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xc3
[0xc3:0xcf]
---
Predecessors: [0xaf]
Successors: [0xd0, 0xd4]
---
0xc3 JUMPDEST
0xc4 GAS
0xc5 PUSH5 0x9502f9000
0xcb EQ
0xcc PUSH2 0xd4
0xcf JUMPI
---
0xc3: JUMPDEST 
0xc4: V54 = GAS
0xc5: V55 = 0x9502f9000
0xcb: V56 = EQ 0x9502f9000 V54
0xcc: V57 = 0xd4
0xcf: JUMPI 0xd4 V56
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xd0
[0xd0:0xd3]
---
Predecessors: [0xc3]
Successors: []
---
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
---
0xd0: V58 = 0x0
0xd3: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xd4
[0xd4:0x11a]
---
Predecessors: [0xc3]
Successors: [0x11b]
---
0xd4 JUMPDEST
0xd5 POP
0xd6 PUSH1 0x1
0xd8 PUSH1 0xa0
0xda PUSH1 0x2
0xdc EXP
0xdd SUB
0xde CALLER
0xdf DUP2
0xe0 DUP2
0xe1 AND
0xe2 PUSH1 0x0
0xe4 SWAP1
0xe5 DUP2
0xe6 MSTORE
0xe7 PUSH1 0x6
0xe9 PUSH1 0x20
0xeb MSTORE
0xec PUSH1 0x40
0xee SWAP1
0xef SHA3
0xf0 DUP1
0xf1 SLOAD
0xf2 CALLVALUE
0xf3 SWAP1
0xf4 DUP2
0xf5 ADD
0xf6 SWAP1
0xf7 SWAP2
0xf8 SSTORE
0xf9 PUSH1 0x2
0xfb DUP1
0xfc SLOAD
0xfd DUP3
0xfe ADD
0xff SWAP1
0x100 SSTORE
0x101 PUSH1 0x5
0x103 SLOAD
0x104 PUSH1 0x4
0x106 SLOAD
0x107 SWAP2
0x108 SWAP4
0x109 AND
0x10a SWAP2
0x10b PUSH4 0xa9059cbb
0x110 SWAP2
0x111 PUSH8 0xde0b6b3a7640000
0x11a DUP6
---
0xd4: JUMPDEST 
0xd6: V59 = 0x1
0xd8: V60 = 0xa0
0xda: V61 = 0x2
0xdc: V62 = EXP 0x2 0xa0
0xdd: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde: V64 = CALLER
0xe1: V65 = AND V64 0xffffffffffffffffffffffffffffffffffffffff
0xe2: V66 = 0x0
0xe6: M[0x0] = V65
0xe7: V67 = 0x6
0xe9: V68 = 0x20
0xeb: M[0x20] = 0x6
0xec: V69 = 0x40
0xef: V70 = SHA3 0x0 0x40
0xf1: V71 = S[V70]
0xf2: V72 = CALLVALUE
0xf5: V73 = ADD V72 V71
0xf8: S[V70] = V73
0xf9: V74 = 0x2
0xfc: V75 = S[0x2]
0xfe: V76 = ADD V72 V75
0x100: S[0x2] = V76
0x101: V77 = 0x5
0x103: V78 = S[0x5]
0x104: V79 = 0x4
0x106: V80 = S[0x4]
0x109: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x10b: V82 = 0xa9059cbb
0x111: V83 = 0xde0b6b3a7640000
---
Entry stack: [V10, 0x0]
Stack pops: 1
Stack additions: [V72, V81, 0xa9059cbb, V64, V80, 0xde0b6b3a7640000, V72]
Exit stack: [V10, V72, V81, 0xa9059cbb, V64, V80, 0xde0b6b3a7640000, V72]

================================

Block 0x11b
[0x11b:0x17d]
---
Predecessors: [0xd4]
Successors: [0x17e, 0x182]
---
0x11b JUMPDEST
0x11c DIV
0x11d MUL
0x11e PUSH1 0x0
0x120 PUSH1 0x40
0x122 MLOAD
0x123 PUSH1 0x20
0x125 ADD
0x126 MSTORE
0x127 PUSH1 0x40
0x129 MLOAD
0x12a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x148 PUSH4 0xffffffff
0x14d DUP6
0x14e AND
0x14f MUL
0x150 DUP2
0x151 MSTORE
0x152 PUSH1 0x1
0x154 PUSH1 0xa0
0x156 PUSH1 0x2
0x158 EXP
0x159 SUB
0x15a SWAP1
0x15b SWAP3
0x15c AND
0x15d PUSH1 0x4
0x15f DUP4
0x160 ADD
0x161 MSTORE
0x162 PUSH1 0x24
0x164 DUP3
0x165 ADD
0x166 MSTORE
0x167 PUSH1 0x44
0x169 ADD
0x16a PUSH1 0x20
0x16c PUSH1 0x40
0x16e MLOAD
0x16f DUP1
0x170 DUP4
0x171 SUB
0x172 DUP2
0x173 PUSH1 0x0
0x175 DUP8
0x176 DUP1
0x177 EXTCODESIZE
0x178 ISZERO
0x179 ISZERO
0x17a PUSH2 0x182
0x17d JUMPI
---
0x11b: JUMPDEST 
0x11c: V84 = DIV V72 0xde0b6b3a7640000
0x11d: V85 = MUL V84 V80
0x11e: V86 = 0x0
0x120: V87 = 0x40
0x122: V88 = M[0x40]
0x123: V89 = 0x20
0x125: V90 = ADD 0x20 V88
0x126: M[V90] = 0x0
0x127: V91 = 0x40
0x129: V92 = M[0x40]
0x12a: V93 = 0x100000000000000000000000000000000000000000000000000000000
0x148: V94 = 0xffffffff
0x14e: V95 = AND 0xa9059cbb 0xffffffff
0x14f: V96 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x151: M[V92] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x152: V97 = 0x1
0x154: V98 = 0xa0
0x156: V99 = 0x2
0x158: V100 = EXP 0x2 0xa0
0x159: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15c: V102 = AND V64 0xffffffffffffffffffffffffffffffffffffffff
0x15d: V103 = 0x4
0x160: V104 = ADD V92 0x4
0x161: M[V104] = V102
0x162: V105 = 0x24
0x165: V106 = ADD V92 0x24
0x166: M[V106] = V85
0x167: V107 = 0x44
0x169: V108 = ADD 0x44 V92
0x16a: V109 = 0x20
0x16c: V110 = 0x40
0x16e: V111 = M[0x40]
0x171: V112 = SUB V108 V111
0x173: V113 = 0x0
0x177: V114 = EXTCODESIZE V81
0x178: V115 = ISZERO V114
0x179: V116 = ISZERO V115
0x17a: V117 = 0x182
0x17d: JUMPI 0x182 V116
---
Entry stack: [V10, V72, V81, 0xa9059cbb, V64, V80, 0xde0b6b3a7640000, V72]
Stack pops: 6
Stack additions: [S5, S4, V108, 0x20, V111, V112, V111, 0x0, S5]
Exit stack: [V10, V72, V81, 0xa9059cbb, V108, 0x20, V111, V112, V111, 0x0, V81]

================================

Block 0x17e
[0x17e:0x181]
---
Predecessors: [0x11b]
Successors: []
---
0x17e PUSH1 0x0
0x180 DUP1
0x181 REVERT
---
0x17e: V118 = 0x0
0x181: REVERT 0x0 0x0
---
Entry stack: [V10, V72, V81, 0xa9059cbb, V108, 0x20, V111, V112, V111, 0x0, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V72, V81, 0xa9059cbb, V108, 0x20, V111, V112, V111, 0x0, V81]

================================

Block 0x182
[0x182:0x18e]
---
Predecessors: [0x11b]
Successors: [0x18f, 0x193]
---
0x182 JUMPDEST
0x183 PUSH2 0x2c6
0x186 GAS
0x187 SUB
0x188 CALL
0x189 ISZERO
0x18a ISZERO
0x18b PUSH2 0x193
0x18e JUMPI
---
0x182: JUMPDEST 
0x183: V119 = 0x2c6
0x186: V120 = GAS
0x187: V121 = SUB V120 0x2c6
0x188: V122 = CALL V121 V81 0x0 V111 V112 V111 0x20
0x189: V123 = ISZERO V122
0x18a: V124 = ISZERO V123
0x18b: V125 = 0x193
0x18e: JUMPI 0x193 V124
---
Entry stack: [V10, V72, V81, 0xa9059cbb, V108, 0x20, V111, V112, V111, 0x0, V81]
Stack pops: 6
Stack additions: []
Exit stack: [V10, V72, V81, 0xa9059cbb, V108]

================================

Block 0x18f
[0x18f:0x192]
---
Predecessors: [0x182]
Successors: []
---
0x18f PUSH1 0x0
0x191 DUP1
0x192 REVERT
---
0x18f: V126 = 0x0
0x192: REVERT 0x0 0x0
---
Entry stack: [V10, V72, V81, 0xa9059cbb, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V72, V81, 0xa9059cbb, V108]

================================

Block 0x193
[0x193:0x1f2]
---
Predecessors: [0x182]
Successors: [0x1f3]
---
0x193 JUMPDEST
0x194 POP
0x195 POP
0x196 POP
0x197 PUSH1 0x40
0x199 MLOAD
0x19a DUP1
0x19b MLOAD
0x19c SWAP1
0x19d POP
0x19e POP
0x19f PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1c0 CALLER
0x1c1 DUP3
0x1c2 PUSH1 0x1
0x1c4 PUSH1 0x40
0x1c6 MLOAD
0x1c7 PUSH1 0x1
0x1c9 PUSH1 0xa0
0x1cb PUSH1 0x2
0x1cd EXP
0x1ce SUB
0x1cf SWAP1
0x1d0 SWAP4
0x1d1 AND
0x1d2 DUP4
0x1d3 MSTORE
0x1d4 PUSH1 0x20
0x1d6 DUP4
0x1d7 ADD
0x1d8 SWAP2
0x1d9 SWAP1
0x1da SWAP2
0x1db MSTORE
0x1dc ISZERO
0x1dd ISZERO
0x1de PUSH1 0x40
0x1e0 DUP1
0x1e1 DUP4
0x1e2 ADD
0x1e3 SWAP2
0x1e4 SWAP1
0x1e5 SWAP2
0x1e6 MSTORE
0x1e7 PUSH1 0x60
0x1e9 SWAP1
0x1ea SWAP2
0x1eb ADD
0x1ec SWAP1
0x1ed MLOAD
0x1ee DUP1
0x1ef SWAP2
0x1f0 SUB
0x1f1 SWAP1
0x1f2 LOG1
---
0x193: JUMPDEST 
0x197: V127 = 0x40
0x199: V128 = M[0x40]
0x19b: V129 = M[V128]
0x19f: V130 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1c0: V131 = CALLER
0x1c2: V132 = 0x1
0x1c4: V133 = 0x40
0x1c6: V134 = M[0x40]
0x1c7: V135 = 0x1
0x1c9: V136 = 0xa0
0x1cb: V137 = 0x2
0x1cd: V138 = EXP 0x2 0xa0
0x1ce: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d1: V140 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: M[V134] = V140
0x1d4: V141 = 0x20
0x1d7: V142 = ADD V134 0x20
0x1db: M[V142] = V72
0x1dc: V143 = ISZERO 0x1
0x1dd: V144 = ISZERO 0x0
0x1de: V145 = 0x40
0x1e2: V146 = ADD V134 0x40
0x1e6: M[V146] = 0x1
0x1e7: V147 = 0x60
0x1eb: V148 = ADD V134 0x60
0x1ed: V149 = M[0x40]
0x1f0: V150 = SUB V148 V149
0x1f2: LOG V149 V150 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, V72, V81, 0xa9059cbb, V108]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, V72]

================================

Block 0x1f3
[0x1f3:0x1f5]
---
Predecessors: [0x193]
Successors: []
---
0x1f3 JUMPDEST
0x1f4 POP
0x1f5 STOP
---
0x1f3: JUMPDEST 
0x1f5: STOP 
---
Entry stack: [V10, V72]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f6
[0x1f6:0x1fc]
---
Predecessors: [0xb]
Successors: [0x1fd, 0x201]
---
0x1f6 JUMPDEST
0x1f7 CALLVALUE
0x1f8 ISZERO
0x1f9 PUSH2 0x201
0x1fc JUMPI
---
0x1f6: JUMPDEST 
0x1f7: V151 = CALLVALUE
0x1f8: V152 = ISZERO V151
0x1f9: V153 = 0x201
0x1fc: JUMPI 0x201 V152
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fd
[0x1fd:0x200]
---
Predecessors: [0x1f6]
Successors: []
---
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 REVERT
---
0x1fd: V154 = 0x0
0x200: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x201
[0x201:0x208]
---
Predecessors: [0x1f6]
Successors: [0x343]
---
0x201 JUMPDEST
0x202 PUSH2 0x209
0x205 PUSH2 0x343
0x208 JUMP
---
0x201: JUMPDEST 
0x202: V155 = 0x209
0x205: V156 = 0x343
0x208: JUMP 0x343
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x209]
Exit stack: [V10, 0x209]

================================

Block 0x209
[0x209:0x20a]
---
Predecessors: [0x377, 0x572]
Successors: []
---
0x209 JUMPDEST
0x20a STOP
---
0x209: JUMPDEST 
0x20a: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x20b
[0x20b:0x211]
---
Predecessors: [0x3e]
Successors: [0x212, 0x216]
---
0x20b JUMPDEST
0x20c CALLVALUE
0x20d ISZERO
0x20e PUSH2 0x216
0x211 JUMPI
---
0x20b: JUMPDEST 
0x20c: V157 = CALLVALUE
0x20d: V158 = ISZERO V157
0x20e: V159 = 0x216
0x211: JUMPI 0x216 V158
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x212
[0x212:0x215]
---
Predecessors: [0x20b]
Successors: []
---
0x212 PUSH1 0x0
0x214 DUP1
0x215 REVERT
---
0x212: V160 = 0x0
0x215: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x216
[0x216:0x21d]
---
Predecessors: [0x20b]
Successors: [0x379]
---
0x216 JUMPDEST
0x217 PUSH2 0x21e
0x21a PUSH2 0x379
0x21d JUMP
---
0x216: JUMPDEST 
0x217: V161 = 0x21e
0x21a: V162 = 0x379
0x21d: JUMP 0x379
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x21e]
Exit stack: [V10, 0x21e]

================================

Block 0x21e
[0x21e:0x22f]
---
Predecessors: [0x379, 0x39d, 0x3af, 0x3b5, 0x3bb]
Successors: []
---
0x21e JUMPDEST
0x21f PUSH1 0x40
0x221 MLOAD
0x222 SWAP1
0x223 DUP2
0x224 MSTORE
0x225 PUSH1 0x20
0x227 ADD
0x228 PUSH1 0x40
0x22a MLOAD
0x22b DUP1
0x22c SWAP2
0x22d SUB
0x22e SWAP1
0x22f RETURN
---
0x21e: JUMPDEST 
0x21f: V163 = 0x40
0x221: V164 = M[0x40]
0x224: M[V164] = S0
0x225: V165 = 0x20
0x227: V166 = ADD 0x20 V164
0x228: V167 = 0x40
0x22a: V168 = M[0x40]
0x22d: V169 = SUB V166 V168
0x22f: RETURN V168 V169
---
Entry stack: [V10, 0x21e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x21e]

================================

Block 0x230
[0x230:0x236]
---
Predecessors: [0x49]
Successors: [0x237, 0x23b]
---
0x230 JUMPDEST
0x231 CALLVALUE
0x232 ISZERO
0x233 PUSH2 0x23b
0x236 JUMPI
---
0x230: JUMPDEST 
0x231: V170 = CALLVALUE
0x232: V171 = ISZERO V170
0x233: V172 = 0x23b
0x236: JUMPI 0x23b V171
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x237
[0x237:0x23a]
---
Predecessors: [0x230]
Successors: []
---
0x237 PUSH1 0x0
0x239 DUP1
0x23a REVERT
---
0x237: V173 = 0x0
0x23a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x23b
[0x23b:0x242]
---
Predecessors: [0x230]
Successors: [0x37f]
---
0x23b JUMPDEST
0x23c PUSH2 0x243
0x23f PUSH2 0x37f
0x242 JUMP
---
0x23b: JUMPDEST 
0x23c: V174 = 0x243
0x23f: V175 = 0x37f
0x242: JUMP 0x37f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x243]
Exit stack: [V10, 0x243]

================================

Block 0x243
[0x243:0x25e]
---
Predecessors: [0x37f, 0x38e]
Successors: []
---
0x243 JUMPDEST
0x244 PUSH1 0x40
0x246 MLOAD
0x247 PUSH1 0x1
0x249 PUSH1 0xa0
0x24b PUSH1 0x2
0x24d EXP
0x24e SUB
0x24f SWAP1
0x250 SWAP2
0x251 AND
0x252 DUP2
0x253 MSTORE
0x254 PUSH1 0x20
0x256 ADD
0x257 PUSH1 0x40
0x259 MLOAD
0x25a DUP1
0x25b SWAP2
0x25c SUB
0x25d SWAP1
0x25e RETURN
---
0x243: JUMPDEST 
0x244: V176 = 0x40
0x246: V177 = M[0x40]
0x247: V178 = 0x1
0x249: V179 = 0xa0
0x24b: V180 = 0x2
0x24d: V181 = EXP 0x2 0xa0
0x24e: V182 = SUB 0x10000000000000000000000000000000000000000 0x1
0x251: V183 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x253: M[V177] = V183
0x254: V184 = 0x20
0x256: V185 = ADD 0x20 V177
0x257: V186 = 0x40
0x259: V187 = M[0x40]
0x25c: V188 = SUB V185 V187
0x25e: RETURN V187 V188
---
Entry stack: [V10, 0x243, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x243]

================================

Block 0x25f
[0x25f:0x265]
---
Predecessors: [0x54]
Successors: [0x266, 0x26a]
---
0x25f JUMPDEST
0x260 CALLVALUE
0x261 ISZERO
0x262 PUSH2 0x26a
0x265 JUMPI
---
0x25f: JUMPDEST 
0x260: V189 = CALLVALUE
0x261: V190 = ISZERO V189
0x262: V191 = 0x26a
0x265: JUMPI 0x26a V190
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x266
[0x266:0x269]
---
Predecessors: [0x25f]
Successors: []
---
0x266 PUSH1 0x0
0x268 DUP1
0x269 REVERT
---
0x266: V192 = 0x0
0x269: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26a
[0x26a:0x271]
---
Predecessors: [0x25f]
Successors: [0x38e]
---
0x26a JUMPDEST
0x26b PUSH2 0x243
0x26e PUSH2 0x38e
0x271 JUMP
---
0x26a: JUMPDEST 
0x26b: V193 = 0x243
0x26e: V194 = 0x38e
0x271: JUMP 0x38e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x243]
Exit stack: [V10, 0x243]

================================

Block 0x272
[0x272:0x28d]
---
Predecessors: []
Successors: []
---
0x272 JUMPDEST
0x273 PUSH1 0x40
0x275 MLOAD
0x276 PUSH1 0x1
0x278 PUSH1 0xa0
0x27a PUSH1 0x2
0x27c EXP
0x27d SUB
0x27e SWAP1
0x27f SWAP2
0x280 AND
0x281 DUP2
0x282 MSTORE
0x283 PUSH1 0x20
0x285 ADD
0x286 PUSH1 0x40
0x288 MLOAD
0x289 DUP1
0x28a SWAP2
0x28b SUB
0x28c SWAP1
0x28d RETURN
---
0x272: JUMPDEST 
0x273: V195 = 0x40
0x275: V196 = M[0x40]
0x276: V197 = 0x1
0x278: V198 = 0xa0
0x27a: V199 = 0x2
0x27c: V200 = EXP 0x2 0xa0
0x27d: V201 = SUB 0x10000000000000000000000000000000000000000 0x1
0x280: V202 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x282: M[V196] = V202
0x283: V203 = 0x20
0x285: V204 = ADD 0x20 V196
0x286: V205 = 0x40
0x288: V206 = M[0x40]
0x28b: V207 = SUB V204 V206
0x28d: RETURN V206 V207
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x28e
[0x28e:0x294]
---
Predecessors: [0x5f]
Successors: [0x295, 0x299]
---
0x28e JUMPDEST
0x28f CALLVALUE
0x290 ISZERO
0x291 PUSH2 0x299
0x294 JUMPI
---
0x28e: JUMPDEST 
0x28f: V208 = CALLVALUE
0x290: V209 = ISZERO V208
0x291: V210 = 0x299
0x294: JUMPI 0x299 V209
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x295
[0x295:0x298]
---
Predecessors: [0x28e]
Successors: []
---
0x295 PUSH1 0x0
0x297 DUP1
0x298 REVERT
---
0x295: V211 = 0x0
0x298: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x299
[0x299:0x2ac]
---
Predecessors: [0x28e]
Successors: [0x39d]
---
0x299 JUMPDEST
0x29a PUSH2 0x21e
0x29d PUSH1 0x1
0x29f PUSH1 0xa0
0x2a1 PUSH1 0x2
0x2a3 EXP
0x2a4 SUB
0x2a5 PUSH1 0x4
0x2a7 CALLDATALOAD
0x2a8 AND
0x2a9 PUSH2 0x39d
0x2ac JUMP
---
0x299: JUMPDEST 
0x29a: V212 = 0x21e
0x29d: V213 = 0x1
0x29f: V214 = 0xa0
0x2a1: V215 = 0x2
0x2a3: V216 = EXP 0x2 0xa0
0x2a4: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a5: V218 = 0x4
0x2a7: V219 = CALLDATALOAD 0x4
0x2a8: V220 = AND V219 0xffffffffffffffffffffffffffffffffffffffff
0x2a9: V221 = 0x39d
0x2ac: JUMP 0x39d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x21e, V220]
Exit stack: [V10, 0x21e, V220]

================================

Block 0x2ad
[0x2ad:0x2be]
---
Predecessors: []
Successors: []
---
0x2ad JUMPDEST
0x2ae PUSH1 0x40
0x2b0 MLOAD
0x2b1 SWAP1
0x2b2 DUP2
0x2b3 MSTORE
0x2b4 PUSH1 0x20
0x2b6 ADD
0x2b7 PUSH1 0x40
0x2b9 MLOAD
0x2ba DUP1
0x2bb SWAP2
0x2bc SUB
0x2bd SWAP1
0x2be RETURN
---
0x2ad: JUMPDEST 
0x2ae: V222 = 0x40
0x2b0: V223 = M[0x40]
0x2b3: M[V223] = S0
0x2b4: V224 = 0x20
0x2b6: V225 = ADD 0x20 V223
0x2b7: V226 = 0x40
0x2b9: V227 = M[0x40]
0x2bc: V228 = SUB V225 V227
0x2be: RETURN V227 V228
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2bf
[0x2bf:0x2c5]
---
Predecessors: [0x6a]
Successors: [0x2c6, 0x2ca]
---
0x2bf JUMPDEST
0x2c0 CALLVALUE
0x2c1 ISZERO
0x2c2 PUSH2 0x2ca
0x2c5 JUMPI
---
0x2bf: JUMPDEST 
0x2c0: V229 = CALLVALUE
0x2c1: V230 = ISZERO V229
0x2c2: V231 = 0x2ca
0x2c5: JUMPI 0x2ca V230
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c6
[0x2c6:0x2c9]
---
Predecessors: [0x2bf]
Successors: []
---
0x2c6 PUSH1 0x0
0x2c8 DUP1
0x2c9 REVERT
---
0x2c6: V232 = 0x0
0x2c9: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ca
[0x2ca:0x2d1]
---
Predecessors: [0x2bf]
Successors: [0x3af]
---
0x2ca JUMPDEST
0x2cb PUSH2 0x21e
0x2ce PUSH2 0x3af
0x2d1 JUMP
---
0x2ca: JUMPDEST 
0x2cb: V233 = 0x21e
0x2ce: V234 = 0x3af
0x2d1: JUMP 0x3af
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x21e]
Exit stack: [V10, 0x21e]

================================

Block 0x2d2
[0x2d2:0x2e3]
---
Predecessors: []
Successors: []
---
0x2d2 JUMPDEST
0x2d3 PUSH1 0x40
0x2d5 MLOAD
0x2d6 SWAP1
0x2d7 DUP2
0x2d8 MSTORE
0x2d9 PUSH1 0x20
0x2db ADD
0x2dc PUSH1 0x40
0x2de MLOAD
0x2df DUP1
0x2e0 SWAP2
0x2e1 SUB
0x2e2 SWAP1
0x2e3 RETURN
---
0x2d2: JUMPDEST 
0x2d3: V235 = 0x40
0x2d5: V236 = M[0x40]
0x2d8: M[V236] = S0
0x2d9: V237 = 0x20
0x2db: V238 = ADD 0x20 V236
0x2dc: V239 = 0x40
0x2de: V240 = M[0x40]
0x2e1: V241 = SUB V238 V240
0x2e3: RETURN V240 V241
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e4
[0x2e4:0x2ea]
---
Predecessors: [0x75]
Successors: [0x2eb, 0x2ef]
---
0x2e4 JUMPDEST
0x2e5 CALLVALUE
0x2e6 ISZERO
0x2e7 PUSH2 0x2ef
0x2ea JUMPI
---
0x2e4: JUMPDEST 
0x2e5: V242 = CALLVALUE
0x2e6: V243 = ISZERO V242
0x2e7: V244 = 0x2ef
0x2ea: JUMPI 0x2ef V243
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2eb
[0x2eb:0x2ee]
---
Predecessors: [0x2e4]
Successors: []
---
0x2eb PUSH1 0x0
0x2ed DUP1
0x2ee REVERT
---
0x2eb: V245 = 0x0
0x2ee: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ef
[0x2ef:0x2f6]
---
Predecessors: [0x2e4]
Successors: [0x3b5]
---
0x2ef JUMPDEST
0x2f0 PUSH2 0x21e
0x2f3 PUSH2 0x3b5
0x2f6 JUMP
---
0x2ef: JUMPDEST 
0x2f0: V246 = 0x21e
0x2f3: V247 = 0x3b5
0x2f6: JUMP 0x3b5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x21e]
Exit stack: [V10, 0x21e]

================================

Block 0x2f7
[0x2f7:0x308]
---
Predecessors: []
Successors: []
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0x40
0x2fa MLOAD
0x2fb SWAP1
0x2fc DUP2
0x2fd MSTORE
0x2fe PUSH1 0x20
0x300 ADD
0x301 PUSH1 0x40
0x303 MLOAD
0x304 DUP1
0x305 SWAP2
0x306 SUB
0x307 SWAP1
0x308 RETURN
---
0x2f7: JUMPDEST 
0x2f8: V248 = 0x40
0x2fa: V249 = M[0x40]
0x2fd: M[V249] = S0
0x2fe: V250 = 0x20
0x300: V251 = ADD 0x20 V249
0x301: V252 = 0x40
0x303: V253 = M[0x40]
0x306: V254 = SUB V251 V253
0x308: RETURN V253 V254
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x309
[0x309:0x30f]
---
Predecessors: [0x80]
Successors: [0x310, 0x314]
---
0x309 JUMPDEST
0x30a CALLVALUE
0x30b ISZERO
0x30c PUSH2 0x314
0x30f JUMPI
---
0x309: JUMPDEST 
0x30a: V255 = CALLVALUE
0x30b: V256 = ISZERO V255
0x30c: V257 = 0x314
0x30f: JUMPI 0x314 V256
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x310
[0x310:0x313]
---
Predecessors: [0x309]
Successors: []
---
0x310 PUSH1 0x0
0x312 DUP1
0x313 REVERT
---
0x310: V258 = 0x0
0x313: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x314
[0x314:0x31b]
---
Predecessors: [0x309]
Successors: [0x3bb]
---
0x314 JUMPDEST
0x315 PUSH2 0x21e
0x318 PUSH2 0x3bb
0x31b JUMP
---
0x314: JUMPDEST 
0x315: V259 = 0x21e
0x318: V260 = 0x3bb
0x31b: JUMP 0x3bb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x21e]
Exit stack: [V10, 0x21e]

================================

Block 0x31c
[0x31c:0x32d]
---
Predecessors: []
Successors: []
---
0x31c JUMPDEST
0x31d PUSH1 0x40
0x31f MLOAD
0x320 SWAP1
0x321 DUP2
0x322 MSTORE
0x323 PUSH1 0x20
0x325 ADD
0x326 PUSH1 0x40
0x328 MLOAD
0x329 DUP1
0x32a SWAP2
0x32b SUB
0x32c SWAP1
0x32d RETURN
---
0x31c: JUMPDEST 
0x31d: V261 = 0x40
0x31f: V262 = M[0x40]
0x322: M[V262] = S0
0x323: V263 = 0x20
0x325: V264 = ADD 0x20 V262
0x326: V265 = 0x40
0x328: V266 = M[0x40]
0x32b: V267 = SUB V264 V266
0x32d: RETURN V266 V267
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x32e
[0x32e:0x334]
---
Predecessors: [0x8b]
Successors: [0x335, 0x339]
---
0x32e JUMPDEST
0x32f CALLVALUE
0x330 ISZERO
0x331 PUSH2 0x339
0x334 JUMPI
---
0x32e: JUMPDEST 
0x32f: V268 = CALLVALUE
0x330: V269 = ISZERO V268
0x331: V270 = 0x339
0x334: JUMPI 0x339 V269
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x335
[0x335:0x338]
---
Predecessors: [0x32e]
Successors: []
---
0x335 PUSH1 0x0
0x337 DUP1
0x338 REVERT
---
0x335: V271 = 0x0
0x338: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x339
[0x339:0x340]
---
Predecessors: [0x32e]
Successors: [0x3c1]
---
0x339 JUMPDEST
0x33a PUSH2 0x209
0x33d PUSH2 0x3c1
0x340 JUMP
---
0x339: JUMPDEST 
0x33a: V272 = 0x209
0x33d: V273 = 0x3c1
0x340: JUMP 0x3c1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x209]
Exit stack: [V10, 0x209]

================================

Block 0x341
[0x341:0x342]
---
Predecessors: []
Successors: []
---
0x341 JUMPDEST
0x342 STOP
---
0x341: JUMPDEST 
0x342: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x343
[0x343:0x34c]
---
Predecessors: [0x201]
Successors: [0x34d, 0x375]
---
0x343 JUMPDEST
0x344 PUSH1 0x3
0x346 SLOAD
0x347 TIMESTAMP
0x348 LT
0x349 PUSH2 0x375
0x34c JUMPI
---
0x343: JUMPDEST 
0x344: V274 = 0x3
0x346: V275 = S[0x3]
0x347: V276 = TIMESTAMP
0x348: V277 = LT V276 V275
0x349: V278 = 0x375
0x34c: JUMPI 0x375 V277
---
Entry stack: [V10, 0x209]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x209]

================================

Block 0x34d
[0x34d:0x357]
---
Predecessors: [0x343]
Successors: [0x358, 0x365]
---
0x34d PUSH1 0x1
0x34f SLOAD
0x350 PUSH1 0x2
0x352 SLOAD
0x353 LT
0x354 PUSH2 0x365
0x357 JUMPI
---
0x34d: V279 = 0x1
0x34f: V280 = S[0x1]
0x350: V281 = 0x2
0x352: V282 = S[0x2]
0x353: V283 = LT V282 V280
0x354: V284 = 0x365
0x357: JUMPI 0x365 V283
---
Entry stack: [V10, 0x209]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x209]

================================

Block 0x358
[0x358:0x364]
---
Predecessors: [0x34d]
Successors: [0x365]
---
0x358 PUSH1 0x7
0x35a DUP1
0x35b SLOAD
0x35c PUSH1 0xff
0x35e NOT
0x35f AND
0x360 PUSH1 0x1
0x362 OR
0x363 SWAP1
0x364 SSTORE
---
0x358: V285 = 0x7
0x35b: V286 = S[0x7]
0x35c: V287 = 0xff
0x35e: V288 = NOT 0xff
0x35f: V289 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V286
0x360: V290 = 0x1
0x362: V291 = OR 0x1 V289
0x364: S[0x7] = V291
---
Entry stack: [V10, 0x209]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x209]

================================

Block 0x365
[0x365:0x374]
---
Predecessors: [0x34d, 0x358]
Successors: [0x375]
---
0x365 JUMPDEST
0x366 PUSH1 0x7
0x368 DUP1
0x369 SLOAD
0x36a PUSH2 0xff00
0x36d NOT
0x36e AND
0x36f PUSH2 0x100
0x372 OR
0x373 SWAP1
0x374 SSTORE
---
0x365: JUMPDEST 
0x366: V292 = 0x7
0x369: V293 = S[0x7]
0x36a: V294 = 0xff00
0x36d: V295 = NOT 0xff00
0x36e: V296 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V293
0x36f: V297 = 0x100
0x372: V298 = OR 0x100 V296
0x374: S[0x7] = V298
---
Entry stack: [V10, 0x209]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x209]

================================

Block 0x375
[0x375:0x375]
---
Predecessors: [0x343, 0x365]
Successors: [0x376]
---
0x375 JUMPDEST
---
0x375: JUMPDEST 
---
Entry stack: [V10, 0x209]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x209]

================================

Block 0x376
[0x376:0x376]
---
Predecessors: [0x375]
Successors: [0x377]
---
0x376 JUMPDEST
---
0x376: JUMPDEST 
---
Entry stack: [V10, 0x209]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x209]

================================

Block 0x377
[0x377:0x378]
---
Predecessors: [0x376]
Successors: [0x209]
---
0x377 JUMPDEST
0x378 JUMP
---
0x377: JUMPDEST 
0x378: JUMP 0x209
---
Entry stack: [V10, 0x209]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x379
[0x379:0x37e]
---
Predecessors: [0x216]
Successors: [0x21e]
---
0x379 JUMPDEST
0x37a PUSH1 0x3
0x37c SLOAD
0x37d DUP2
0x37e JUMP
---
0x379: JUMPDEST 
0x37a: V299 = 0x3
0x37c: V300 = S[0x3]
0x37e: JUMP 0x21e
---
Entry stack: [V10, 0x21e]
Stack pops: 1
Stack additions: [S0, V300]
Exit stack: [V10, 0x21e, V300]

================================

Block 0x37f
[0x37f:0x38d]
---
Predecessors: [0x23b]
Successors: [0x243]
---
0x37f JUMPDEST
0x380 PUSH1 0x0
0x382 SLOAD
0x383 PUSH1 0x1
0x385 PUSH1 0xa0
0x387 PUSH1 0x2
0x389 EXP
0x38a SUB
0x38b AND
0x38c DUP2
0x38d JUMP
---
0x37f: JUMPDEST 
0x380: V301 = 0x0
0x382: V302 = S[0x0]
0x383: V303 = 0x1
0x385: V304 = 0xa0
0x387: V305 = 0x2
0x389: V306 = EXP 0x2 0xa0
0x38a: V307 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38b: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0x38d: JUMP 0x243
---
Entry stack: [V10, 0x243]
Stack pops: 1
Stack additions: [S0, V308]
Exit stack: [V10, 0x243, V308]

================================

Block 0x38e
[0x38e:0x39c]
---
Predecessors: [0x26a]
Successors: [0x243]
---
0x38e JUMPDEST
0x38f PUSH1 0x5
0x391 SLOAD
0x392 PUSH1 0x1
0x394 PUSH1 0xa0
0x396 PUSH1 0x2
0x398 EXP
0x399 SUB
0x39a AND
0x39b DUP2
0x39c JUMP
---
0x38e: JUMPDEST 
0x38f: V309 = 0x5
0x391: V310 = S[0x5]
0x392: V311 = 0x1
0x394: V312 = 0xa0
0x396: V313 = 0x2
0x398: V314 = EXP 0x2 0xa0
0x399: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39a: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x39c: JUMP 0x243
---
Entry stack: [V10, 0x243]
Stack pops: 1
Stack additions: [S0, V316]
Exit stack: [V10, 0x243, V316]

================================

Block 0x39d
[0x39d:0x3ae]
---
Predecessors: [0x299]
Successors: [0x21e]
---
0x39d JUMPDEST
0x39e PUSH1 0x6
0x3a0 PUSH1 0x20
0x3a2 MSTORE
0x3a3 PUSH1 0x0
0x3a5 SWAP1
0x3a6 DUP2
0x3a7 MSTORE
0x3a8 PUSH1 0x40
0x3aa SWAP1
0x3ab SHA3
0x3ac SLOAD
0x3ad DUP2
0x3ae JUMP
---
0x39d: JUMPDEST 
0x39e: V317 = 0x6
0x3a0: V318 = 0x20
0x3a2: M[0x20] = 0x6
0x3a3: V319 = 0x0
0x3a7: M[0x0] = V220
0x3a8: V320 = 0x40
0x3ab: V321 = SHA3 0x0 0x40
0x3ac: V322 = S[V321]
0x3ae: JUMP 0x21e
---
Entry stack: [V10, 0x21e, V220]
Stack pops: 2
Stack additions: [S1, V322]
Exit stack: [V10, 0x21e, V322]

================================

Block 0x3af
[0x3af:0x3b4]
---
Predecessors: [0x2ca]
Successors: [0x21e]
---
0x3af JUMPDEST
0x3b0 PUSH1 0x1
0x3b2 SLOAD
0x3b3 DUP2
0x3b4 JUMP
---
0x3af: JUMPDEST 
0x3b0: V323 = 0x1
0x3b2: V324 = S[0x1]
0x3b4: JUMP 0x21e
---
Entry stack: [V10, 0x21e]
Stack pops: 1
Stack additions: [S0, V324]
Exit stack: [V10, 0x21e, V324]

================================

Block 0x3b5
[0x3b5:0x3ba]
---
Predecessors: [0x2ef]
Successors: [0x21e]
---
0x3b5 JUMPDEST
0x3b6 PUSH1 0x2
0x3b8 SLOAD
0x3b9 DUP2
0x3ba JUMP
---
0x3b5: JUMPDEST 
0x3b6: V325 = 0x2
0x3b8: V326 = S[0x2]
0x3ba: JUMP 0x21e
---
Entry stack: [V10, 0x21e]
Stack pops: 1
Stack additions: [S0, V326]
Exit stack: [V10, 0x21e, V326]

================================

Block 0x3bb
[0x3bb:0x3c0]
---
Predecessors: [0x314]
Successors: [0x21e]
---
0x3bb JUMPDEST
0x3bc PUSH1 0x4
0x3be SLOAD
0x3bf DUP2
0x3c0 JUMP
---
0x3bb: JUMPDEST 
0x3bc: V327 = 0x4
0x3be: V328 = S[0x4]
0x3c0: JUMP 0x21e
---
Entry stack: [V10, 0x21e]
Stack pops: 1
Stack additions: [S0, V328]
Exit stack: [V10, 0x21e, V328]

================================

Block 0x3c1
[0x3c1:0x3cd]
---
Predecessors: [0x339]
Successors: [0x3ce, 0x56e]
---
0x3c1 JUMPDEST
0x3c2 PUSH1 0x3
0x3c4 SLOAD
0x3c5 PUSH1 0x0
0x3c7 SWAP1
0x3c8 TIMESTAMP
0x3c9 LT
0x3ca PUSH2 0x56e
0x3cd JUMPI
---
0x3c1: JUMPDEST 
0x3c2: V329 = 0x3
0x3c4: V330 = S[0x3]
0x3c5: V331 = 0x0
0x3c8: V332 = TIMESTAMP
0x3c9: V333 = LT V332 V330
0x3ca: V334 = 0x56e
0x3cd: JUMPI 0x56e V333
---
Entry stack: [V10, 0x209]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x209, 0x0]

================================

Block 0x3ce
[0x3ce:0x3d9]
---
Predecessors: [0x3c1]
Successors: [0x3da, 0x4a0]
---
0x3ce PUSH1 0x7
0x3d0 SLOAD
0x3d1 PUSH1 0xff
0x3d3 AND
0x3d4 ISZERO
0x3d5 ISZERO
0x3d6 PUSH2 0x4a0
0x3d9 JUMPI
---
0x3ce: V335 = 0x7
0x3d0: V336 = S[0x7]
0x3d1: V337 = 0xff
0x3d3: V338 = AND 0xff V336
0x3d4: V339 = ISZERO V338
0x3d5: V340 = ISZERO V339
0x3d6: V341 = 0x4a0
0x3d9: JUMPI 0x4a0 V340
---
Entry stack: [V10, 0x209, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x209, 0x0]

================================

Block 0x3da
[0x3da:0x400]
---
Predecessors: [0x3ce]
Successors: [0x401, 0x4a0]
---
0x3da POP
0x3db PUSH1 0x1
0x3dd PUSH1 0xa0
0x3df PUSH1 0x2
0x3e1 EXP
0x3e2 SUB
0x3e3 CALLER
0x3e4 AND
0x3e5 PUSH1 0x0
0x3e7 SWAP1
0x3e8 DUP2
0x3e9 MSTORE
0x3ea PUSH1 0x6
0x3ec PUSH1 0x20
0x3ee MSTORE
0x3ef PUSH1 0x40
0x3f1 DUP2
0x3f2 SHA3
0x3f3 DUP1
0x3f4 SLOAD
0x3f5 SWAP1
0x3f6 DUP3
0x3f7 SWAP1
0x3f8 SSTORE
0x3f9 SWAP1
0x3fa DUP2
0x3fb GT
0x3fc ISZERO
0x3fd PUSH2 0x4a0
0x400 JUMPI
---
0x3db: V342 = 0x1
0x3dd: V343 = 0xa0
0x3df: V344 = 0x2
0x3e1: V345 = EXP 0x2 0xa0
0x3e2: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e3: V347 = CALLER
0x3e4: V348 = AND V347 0xffffffffffffffffffffffffffffffffffffffff
0x3e5: V349 = 0x0
0x3e9: M[0x0] = V348
0x3ea: V350 = 0x6
0x3ec: V351 = 0x20
0x3ee: M[0x20] = 0x6
0x3ef: V352 = 0x40
0x3f2: V353 = SHA3 0x0 0x40
0x3f4: V354 = S[V353]
0x3f8: S[V353] = 0x0
0x3fb: V355 = GT V354 0x0
0x3fc: V356 = ISZERO V355
0x3fd: V357 = 0x4a0
0x400: JUMPI 0x4a0 V356
---
Entry stack: [V10, 0x209, 0x0]
Stack pops: 1
Stack additions: [V354]
Exit stack: [V10, 0x209, V354]

================================

Block 0x401
[0x401:0x42b]
---
Predecessors: [0x3da]
Successors: [0x42c, 0x484]
---
0x401 PUSH1 0x1
0x403 PUSH1 0xa0
0x405 PUSH1 0x2
0x407 EXP
0x408 SUB
0x409 CALLER
0x40a AND
0x40b DUP2
0x40c ISZERO
0x40d PUSH2 0x8fc
0x410 MUL
0x411 DUP3
0x412 PUSH1 0x40
0x414 MLOAD
0x415 PUSH1 0x0
0x417 PUSH1 0x40
0x419 MLOAD
0x41a DUP1
0x41b DUP4
0x41c SUB
0x41d DUP2
0x41e DUP6
0x41f DUP9
0x420 DUP9
0x421 CALL
0x422 SWAP4
0x423 POP
0x424 POP
0x425 POP
0x426 POP
0x427 ISZERO
0x428 PUSH2 0x484
0x42b JUMPI
---
0x401: V358 = 0x1
0x403: V359 = 0xa0
0x405: V360 = 0x2
0x407: V361 = EXP 0x2 0xa0
0x408: V362 = SUB 0x10000000000000000000000000000000000000000 0x1
0x409: V363 = CALLER
0x40a: V364 = AND V363 0xffffffffffffffffffffffffffffffffffffffff
0x40c: V365 = ISZERO V354
0x40d: V366 = 0x8fc
0x410: V367 = MUL 0x8fc V365
0x412: V368 = 0x40
0x414: V369 = M[0x40]
0x415: V370 = 0x0
0x417: V371 = 0x40
0x419: V372 = M[0x40]
0x41c: V373 = SUB V369 V372
0x421: V374 = CALL V367 V364 V354 V372 V373 V372 0x0
0x427: V375 = ISZERO V374
0x428: V376 = 0x484
0x42b: JUMPI 0x484 V375
---
Entry stack: [V10, 0x209, V354]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x209, V354]

================================

Block 0x42c
[0x42c:0x483]
---
Predecessors: [0x401]
Successors: [0x4a0]
---
0x42c PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x44d CALLER
0x44e DUP3
0x44f PUSH1 0x0
0x451 PUSH1 0x40
0x453 MLOAD
0x454 PUSH1 0x1
0x456 PUSH1 0xa0
0x458 PUSH1 0x2
0x45a EXP
0x45b SUB
0x45c SWAP1
0x45d SWAP4
0x45e AND
0x45f DUP4
0x460 MSTORE
0x461 PUSH1 0x20
0x463 DUP4
0x464 ADD
0x465 SWAP2
0x466 SWAP1
0x467 SWAP2
0x468 MSTORE
0x469 ISZERO
0x46a ISZERO
0x46b PUSH1 0x40
0x46d DUP1
0x46e DUP4
0x46f ADD
0x470 SWAP2
0x471 SWAP1
0x472 SWAP2
0x473 MSTORE
0x474 PUSH1 0x60
0x476 SWAP1
0x477 SWAP2
0x478 ADD
0x479 SWAP1
0x47a MLOAD
0x47b DUP1
0x47c SWAP2
0x47d SUB
0x47e SWAP1
0x47f LOG1
0x480 PUSH2 0x4a0
0x483 JUMP
---
0x42c: V377 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x44d: V378 = CALLER
0x44f: V379 = 0x0
0x451: V380 = 0x40
0x453: V381 = M[0x40]
0x454: V382 = 0x1
0x456: V383 = 0xa0
0x458: V384 = 0x2
0x45a: V385 = EXP 0x2 0xa0
0x45b: V386 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45e: V387 = AND V378 0xffffffffffffffffffffffffffffffffffffffff
0x460: M[V381] = V387
0x461: V388 = 0x20
0x464: V389 = ADD V381 0x20
0x468: M[V389] = V354
0x469: V390 = ISZERO 0x0
0x46a: V391 = ISZERO 0x1
0x46b: V392 = 0x40
0x46f: V393 = ADD V381 0x40
0x473: M[V393] = 0x0
0x474: V394 = 0x60
0x478: V395 = ADD V381 0x60
0x47a: V396 = M[0x40]
0x47d: V397 = SUB V395 V396
0x47f: LOG V396 V397 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x480: V398 = 0x4a0
0x483: JUMP 0x4a0
---
Entry stack: [V10, 0x209, V354]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x209, V354]

================================

Block 0x484
[0x484:0x49f]
---
Predecessors: [0x401]
Successors: [0x4a0]
---
0x484 JUMPDEST
0x485 PUSH1 0x1
0x487 PUSH1 0xa0
0x489 PUSH1 0x2
0x48b EXP
0x48c SUB
0x48d CALLER
0x48e AND
0x48f PUSH1 0x0
0x491 SWAP1
0x492 DUP2
0x493 MSTORE
0x494 PUSH1 0x6
0x496 PUSH1 0x20
0x498 MSTORE
0x499 PUSH1 0x40
0x49b SWAP1
0x49c SHA3
0x49d DUP2
0x49e SWAP1
0x49f SSTORE
---
0x484: JUMPDEST 
0x485: V399 = 0x1
0x487: V400 = 0xa0
0x489: V401 = 0x2
0x48b: V402 = EXP 0x2 0xa0
0x48c: V403 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48d: V404 = CALLER
0x48e: V405 = AND V404 0xffffffffffffffffffffffffffffffffffffffff
0x48f: V406 = 0x0
0x493: M[0x0] = V405
0x494: V407 = 0x6
0x496: V408 = 0x20
0x498: M[0x20] = 0x6
0x499: V409 = 0x40
0x49c: V410 = SHA3 0x0 0x40
0x49f: S[V410] = V354
---
Entry stack: [V10, 0x209, V354]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x209, V354]

================================

Block 0x4a0
[0x4a0:0x4a0]
---
Predecessors: [0x3ce, 0x3da, 0x42c, 0x484]
Successors: [0x4a1]
---
0x4a0 JUMPDEST
---
0x4a0: JUMPDEST 
---
Entry stack: [V10, 0x209, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x209, S0]

================================

Block 0x4a1
[0x4a1:0x4a1]
---
Predecessors: [0x4a0]
Successors: [0x4a2]
---
0x4a1 JUMPDEST
---
0x4a1: JUMPDEST 
---
Entry stack: [V10, 0x209, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x209, S0]

================================

Block 0x4a2
[0x4a2:0x4ae]
---
Predecessors: [0x4a1]
Successors: [0x4af, 0x4c2]
---
0x4a2 JUMPDEST
0x4a3 PUSH1 0x7
0x4a5 SLOAD
0x4a6 PUSH1 0xff
0x4a8 AND
0x4a9 DUP1
0x4aa ISZERO
0x4ab PUSH2 0x4c2
0x4ae JUMPI
---
0x4a2: JUMPDEST 
0x4a3: V411 = 0x7
0x4a5: V412 = S[0x7]
0x4a6: V413 = 0xff
0x4a8: V414 = AND 0xff V412
0x4aa: V415 = ISZERO V414
0x4ab: V416 = 0x4c2
0x4ae: JUMPI 0x4c2 V415
---
Entry stack: [V10, 0x209, S0]
Stack pops: 0
Stack additions: [V414]
Exit stack: [V10, 0x209, S0, V414]

================================

Block 0x4af
[0x4af:0x4c1]
---
Predecessors: [0x4a2]
Successors: [0x4c2]
---
0x4af POP
0x4b0 PUSH1 0x0
0x4b2 SLOAD
0x4b3 CALLER
0x4b4 PUSH1 0x1
0x4b6 PUSH1 0xa0
0x4b8 PUSH1 0x2
0x4ba EXP
0x4bb SUB
0x4bc SWAP1
0x4bd DUP2
0x4be AND
0x4bf SWAP2
0x4c0 AND
0x4c1 EQ
---
0x4b0: V417 = 0x0
0x4b2: V418 = S[0x0]
0x4b3: V419 = CALLER
0x4b4: V420 = 0x1
0x4b6: V421 = 0xa0
0x4b8: V422 = 0x2
0x4ba: V423 = EXP 0x2 0xa0
0x4bb: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4be: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V419
0x4c0: V426 = AND V418 0xffffffffffffffffffffffffffffffffffffffff
0x4c1: V427 = EQ V426 V425
---
Entry stack: [V10, 0x209, S1, V414]
Stack pops: 1
Stack additions: [V427]
Exit stack: [V10, 0x209, S1, V427]

================================

Block 0x4c2
[0x4c2:0x4c7]
---
Predecessors: [0x4a2, 0x4af]
Successors: [0x4c8, 0x56e]
---
0x4c2 JUMPDEST
0x4c3 ISZERO
0x4c4 PUSH2 0x56e
0x4c7 JUMPI
---
0x4c2: JUMPDEST 
0x4c3: V428 = ISZERO S0
0x4c4: V429 = 0x56e
0x4c7: JUMPI 0x56e V428
---
Entry stack: [V10, 0x209, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x209, S1]

================================

Block 0x4c8
[0x4c8:0x4fa]
---
Predecessors: [0x4c2]
Successors: [0x4fb, 0x563]
---
0x4c8 PUSH1 0x0
0x4ca SLOAD
0x4cb PUSH1 0x2
0x4cd SLOAD
0x4ce PUSH1 0x1
0x4d0 PUSH1 0xa0
0x4d2 PUSH1 0x2
0x4d4 EXP
0x4d5 SUB
0x4d6 SWAP1
0x4d7 SWAP2
0x4d8 AND
0x4d9 SWAP1
0x4da DUP1
0x4db ISZERO
0x4dc PUSH2 0x8fc
0x4df MUL
0x4e0 SWAP1
0x4e1 PUSH1 0x40
0x4e3 MLOAD
0x4e4 PUSH1 0x0
0x4e6 PUSH1 0x40
0x4e8 MLOAD
0x4e9 DUP1
0x4ea DUP4
0x4eb SUB
0x4ec DUP2
0x4ed DUP6
0x4ee DUP9
0x4ef DUP9
0x4f0 CALL
0x4f1 SWAP4
0x4f2 POP
0x4f3 POP
0x4f4 POP
0x4f5 POP
0x4f6 ISZERO
0x4f7 PUSH2 0x563
0x4fa JUMPI
---
0x4c8: V430 = 0x0
0x4ca: V431 = S[0x0]
0x4cb: V432 = 0x2
0x4cd: V433 = S[0x2]
0x4ce: V434 = 0x1
0x4d0: V435 = 0xa0
0x4d2: V436 = 0x2
0x4d4: V437 = EXP 0x2 0xa0
0x4d5: V438 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d8: V439 = AND V431 0xffffffffffffffffffffffffffffffffffffffff
0x4db: V440 = ISZERO V433
0x4dc: V441 = 0x8fc
0x4df: V442 = MUL 0x8fc V440
0x4e1: V443 = 0x40
0x4e3: V444 = M[0x40]
0x4e4: V445 = 0x0
0x4e6: V446 = 0x40
0x4e8: V447 = M[0x40]
0x4eb: V448 = SUB V444 V447
0x4f0: V449 = CALL V442 V439 V433 V447 V448 V447 0x0
0x4f6: V450 = ISZERO V449
0x4f7: V451 = 0x563
0x4fa: JUMPI 0x563 V450
---
Entry stack: [V10, 0x209, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x209, S0]

================================

Block 0x4fb
[0x4fb:0x562]
---
Predecessors: [0x4c8]
Successors: [0x56e]
---
0x4fb PUSH1 0x0
0x4fd DUP1
0x4fe SLOAD
0x4ff PUSH1 0x2
0x501 SLOAD
0x502 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x523 SWAP3
0x524 PUSH1 0x1
0x526 PUSH1 0xa0
0x528 PUSH1 0x2
0x52a EXP
0x52b SUB
0x52c SWAP1
0x52d SWAP3
0x52e AND
0x52f SWAP2
0x530 PUSH1 0x40
0x532 MLOAD
0x533 PUSH1 0x1
0x535 PUSH1 0xa0
0x537 PUSH1 0x2
0x539 EXP
0x53a SUB
0x53b SWAP1
0x53c SWAP4
0x53d AND
0x53e DUP4
0x53f MSTORE
0x540 PUSH1 0x20
0x542 DUP4
0x543 ADD
0x544 SWAP2
0x545 SWAP1
0x546 SWAP2
0x547 MSTORE
0x548 ISZERO
0x549 ISZERO
0x54a PUSH1 0x40
0x54c DUP1
0x54d DUP4
0x54e ADD
0x54f SWAP2
0x550 SWAP1
0x551 SWAP2
0x552 MSTORE
0x553 PUSH1 0x60
0x555 SWAP1
0x556 SWAP2
0x557 ADD
0x558 SWAP1
0x559 MLOAD
0x55a DUP1
0x55b SWAP2
0x55c SUB
0x55d SWAP1
0x55e LOG1
0x55f PUSH2 0x56e
0x562 JUMP
---
0x4fb: V452 = 0x0
0x4fe: V453 = S[0x0]
0x4ff: V454 = 0x2
0x501: V455 = S[0x2]
0x502: V456 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x524: V457 = 0x1
0x526: V458 = 0xa0
0x528: V459 = 0x2
0x52a: V460 = EXP 0x2 0xa0
0x52b: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52e: V462 = AND V453 0xffffffffffffffffffffffffffffffffffffffff
0x530: V463 = 0x40
0x532: V464 = M[0x40]
0x533: V465 = 0x1
0x535: V466 = 0xa0
0x537: V467 = 0x2
0x539: V468 = EXP 0x2 0xa0
0x53a: V469 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53d: V470 = AND V462 0xffffffffffffffffffffffffffffffffffffffff
0x53f: M[V464] = V470
0x540: V471 = 0x20
0x543: V472 = ADD V464 0x20
0x547: M[V472] = V455
0x548: V473 = ISZERO 0x0
0x549: V474 = ISZERO 0x1
0x54a: V475 = 0x40
0x54e: V476 = ADD V464 0x40
0x552: M[V476] = 0x0
0x553: V477 = 0x60
0x557: V478 = ADD V464 0x60
0x559: V479 = M[0x40]
0x55c: V480 = SUB V478 V479
0x55e: LOG V479 V480 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x55f: V481 = 0x56e
0x562: JUMP 0x56e
---
Entry stack: [V10, 0x209, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x209, S0]

================================

Block 0x563
[0x563:0x56d]
---
Predecessors: [0x4c8]
Successors: [0x56e]
---
0x563 JUMPDEST
0x564 PUSH1 0x7
0x566 DUP1
0x567 SLOAD
0x568 PUSH1 0xff
0x56a NOT
0x56b AND
0x56c SWAP1
0x56d SSTORE
---
0x563: JUMPDEST 
0x564: V482 = 0x7
0x567: V483 = S[0x7]
0x568: V484 = 0xff
0x56a: V485 = NOT 0xff
0x56b: V486 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V483
0x56d: S[0x7] = V486
---
Entry stack: [V10, 0x209, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x209, S0]

================================

Block 0x56e
[0x56e:0x56e]
---
Predecessors: [0x3c1, 0x4c2, 0x4fb, 0x563]
Successors: [0x56f]
---
0x56e JUMPDEST
---
0x56e: JUMPDEST 
---
Entry stack: [V10, 0x209, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x209, S0]

================================

Block 0x56f
[0x56f:0x56f]
---
Predecessors: [0x56e]
Successors: [0x570]
---
0x56f JUMPDEST
---
0x56f: JUMPDEST 
---
Entry stack: [V10, 0x209, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x209, S0]

================================

Block 0x570
[0x570:0x570]
---
Predecessors: [0x56f]
Successors: [0x571]
---
0x570 JUMPDEST
---
0x570: JUMPDEST 
---
Entry stack: [V10, 0x209, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x209, S0]

================================

Block 0x571
[0x571:0x571]
---
Predecessors: [0x570]
Successors: [0x572]
---
0x571 JUMPDEST
---
0x571: JUMPDEST 
---
Entry stack: [V10, 0x209, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x209, S0]

================================

Block 0x572
[0x572:0x574]
---
Predecessors: [0x571]
Successors: [0x209]
---
0x572 JUMPDEST
0x573 POP
0x574 JUMP
---
0x572: JUMPDEST 
0x574: JUMP 0x209
---
Entry stack: [V10, 0x209, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x575
[0x575:0x581]
---
Predecessors: []
Successors: [0x582]
---
0x575 STOP
0x576 LOG1
0x577 PUSH6 0x627a7a723058
0x57e SHA3
0x57f MISSING 0x2e
0x580 MISSING 0xf7
0x581 DUP11
---
0x575: STOP 
0x576: LOG S0 S1 S2
0x577: V487 = 0x627a7a723058
0x57e: V488 = SHA3 0x627a7a723058 S3
0x57f: MISSING 0x2e
0x580: MISSING 0xf7
0x581: NOP 
---
Entry stack: []
Stack pops: 0
Stack additions: [V488, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10]
Exit stack: []

================================

Block 0x582
[0x582:0x5a1]
---
Predecessors: [0x575]
Successors: []
---
0x582 JUMPDEST
0x583 PUSH23 0x4700a5605c71a45a59f52bb0f6ea921624067f28268ea7
0x59b EXTCODECOPY
0x59c MISSING 0xed
0x59d PUSH4 0x2f0029
---
0x582: JUMPDEST 
0x583: V489 = 0x4700a5605c71a45a59f52bb0f6ea921624067f28268ea7
0x59b: EXTCODECOPY 0x4700a5605c71a45a59f52bb0f6ea921624067f28268ea7 S0 S1 S2
0x59c: MISSING 0xed
0x59d: V490 = 0x2f0029
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [0x2f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x1f6
Exit block: 0x209
Body: 0x1f6, 0x1fd, 0x201, 0x209, 0x343, 0x34d, 0x358, 0x365, 0x375, 0x376, 0x377

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x20b
Exit block: 0x21e
Body: 0x20b, 0x212, 0x216, 0x21e, 0x379

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x230
Exit block: 0x243
Body: 0x230, 0x237, 0x23b, 0x243, 0x37f

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x25f
Exit block: 0x243
Body: 0x243, 0x25f, 0x266, 0x26a, 0x38e

Function 4:
Public function signature: 0x70a08231
Entry block: 0x28e
Exit block: 0x21e
Body: 0x21e, 0x28e, 0x295, 0x299, 0x39d

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x2bf
Exit block: 0x21e
Body: 0x21e, 0x2bf, 0x2c6, 0x2ca, 0x3af

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x2e4
Exit block: 0x21e
Body: 0x21e, 0x2e4, 0x2eb, 0x2ef, 0x3b5

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x309
Exit block: 0x21e
Body: 0x21e, 0x309, 0x310, 0x314, 0x3bb

Function 8:
Public function signature: 0xfd6b7ef8
Entry block: 0x32e
Exit block: 0x209
Body: 0x209, 0x32e, 0x335, 0x339, 0x3c1, 0x3ce, 0x3da, 0x401, 0x42c, 0x484, 0x4a0, 0x4a1, 0x4a2, 0x4af, 0x4c2, 0x4c8, 0x4fb, 0x563, 0x56e, 0x56f, 0x570, 0x571, 0x572

Function 9:
Public fallback function
Entry block: 0x96
Exit block: 0x1f3
Body: 0x96, 0x97, 0xab, 0xaf, 0xbf, 0xc3, 0xd0, 0xd4, 0x11b, 0x17e, 0x182, 0x18f, 0x193, 0x1f3

