Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xbf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xbf
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xbf
0xa: JUMPI 0xbf V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x119]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2f58015
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x119
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2f58015
0x20: V14 = EQ V12 0x2f58015
0x21: V15 = 0x119
0x24: JUMPI 0x119 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x12e]
---
0x25 DUP1
0x26 PUSH4 0x15248362
0x2b EQ
0x2c PUSH2 0x12e
0x2f JUMPI
---
0x26: V16 = 0x15248362
0x2b: V17 = EQ 0x15248362 V12
0x2c: V18 = 0x12e
0x2f: JUMPI 0x12e V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x153]
---
0x30 DUP1
0x31 PUSH4 0x27e235e3
0x36 EQ
0x37 PUSH2 0x153
0x3a JUMPI
---
0x31: V19 = 0x27e235e3
0x36: V20 = EQ 0x27e235e3 V12
0x37: V21 = 0x153
0x3a: JUMPI 0x153 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x184]
---
0x3b DUP1
0x3c PUSH4 0x51cff8d9
0x41 EQ
0x42 PUSH2 0x184
0x45 JUMPI
---
0x3c: V22 = 0x51cff8d9
0x41: V23 = EQ 0x51cff8d9 V12
0x42: V24 = 0x184
0x45: JUMPI 0x184 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1a5]
---
0x46 DUP1
0x47 PUSH4 0x6360fc3f
0x4c EQ
0x4d PUSH2 0x1a5
0x50 JUMPI
---
0x47: V25 = 0x6360fc3f
0x4c: V26 = EQ 0x6360fc3f V12
0x4d: V27 = 0x1a5
0x50: JUMPI 0x1a5 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1cc]
---
0x51 DUP1
0x52 PUSH4 0x6ad1fe02
0x57 EQ
0x58 PUSH2 0x1cc
0x5b JUMPI
---
0x52: V28 = 0x6ad1fe02
0x57: V29 = EQ 0x6ad1fe02 V12
0x58: V30 = 0x1cc
0x5b: JUMPI 0x1cc V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1fb]
---
0x5c DUP1
0x5d PUSH4 0x88a89dd0
0x62 EQ
0x63 PUSH2 0x1fb
0x66 JUMPI
---
0x5d: V31 = 0x88a89dd0
0x62: V32 = EQ 0x88a89dd0 V12
0x63: V33 = 0x1fb
0x66: JUMPI 0x1fb V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x205]
---
0x67 DUP1
0x68 PUSH4 0xa089feea
0x6d EQ
0x6e PUSH2 0x205
0x71 JUMPI
---
0x68: V34 = 0xa089feea
0x6d: V35 = EQ 0xa089feea V12
0x6e: V36 = 0x205
0x71: JUMPI 0x205 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x22c]
---
0x72 DUP1
0x73 PUSH4 0xa9726c1e
0x78 EQ
0x79 PUSH2 0x22c
0x7c JUMPI
---
0x73: V37 = 0xa9726c1e
0x78: V38 = EQ 0xa9726c1e V12
0x79: V39 = 0x22c
0x7c: JUMPI 0x22c V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x251]
---
0x7d DUP1
0x7e PUSH4 0xc42bb1e4
0x83 EQ
0x84 PUSH2 0x251
0x87 JUMPI
---
0x7e: V40 = 0xc42bb1e4
0x83: V41 = EQ 0xc42bb1e4 V12
0x84: V42 = 0x251
0x87: JUMPI 0x251 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x276]
---
0x88 DUP1
0x89 PUSH4 0xca4b208b
0x8e EQ
0x8f PUSH2 0x276
0x92 JUMPI
---
0x89: V43 = 0xca4b208b
0x8e: V44 = EQ 0xca4b208b V12
0x8f: V45 = 0x276
0x92: JUMPI 0x276 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2a5]
---
0x93 DUP1
0x94 PUSH4 0xd4701c35
0x99 EQ
0x9a PUSH2 0x2a5
0x9d JUMPI
---
0x94: V46 = 0xd4701c35
0x99: V47 = EQ 0xd4701c35 V12
0x9a: V48 = 0x2a5
0x9d: JUMPI 0x2a5 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2f8]
---
0x9e DUP1
0x9f PUSH4 0xdbfeb17f
0xa4 EQ
0xa5 PUSH2 0x2f8
0xa8 JUMPI
---
0x9f: V49 = 0xdbfeb17f
0xa4: V50 = EQ 0xdbfeb17f V12
0xa5: V51 = 0x2f8
0xa8: JUMPI 0x2f8 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x31d]
---
0xa9 DUP1
0xaa PUSH4 0xf79dcf8d
0xaf EQ
0xb0 PUSH2 0x31d
0xb3 JUMPI
---
0xaa: V52 = 0xf79dcf8d
0xaf: V53 = EQ 0xf79dcf8d V12
0xb0: V54 = 0x31d
0xb3: JUMPI 0x31d V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x342]
---
0xb4 DUP1
0xb5 PUSH4 0xfc0c546a
0xba EQ
0xbb PUSH2 0x342
0xbe JUMPI
---
0xb5: V55 = 0xfc0c546a
0xba: V56 = EQ 0xfc0c546a V12
0xbb: V57 = 0x342
0xbe: JUMPI 0x342 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xbf]
---
Predecessors: [0x0, 0xb4]
Successors: [0xc0]
---
0xbf JUMPDEST
---
0xbf: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc0
[0xc0:0xcb]
---
Predecessors: [0xbf]
Successors: [0xcc, 0xd0]
---
0xc0 JUMPDEST
0xc1 PUSH1 0x5
0xc3 SLOAD
0xc4 PUSH1 0xff
0xc6 AND
0xc7 ISZERO
0xc8 PUSH2 0xd0
0xcb JUMPI
---
0xc0: JUMPDEST 
0xc1: V58 = 0x5
0xc3: V59 = S[0x5]
0xc4: V60 = 0xff
0xc6: V61 = AND 0xff V59
0xc7: V62 = ISZERO V61
0xc8: V63 = 0xd0
0xcb: JUMPI 0xd0 V62
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcc
[0xcc:0xcf]
---
Predecessors: [0xc0]
Successors: []
---
0xcc PUSH1 0x0
0xce DUP1
0xcf REVERT
---
0xcc: V64 = 0x0
0xcf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd0
[0xd0:0xdb]
---
Predecessors: [0xc0]
Successors: [0xdc, 0xe0]
---
0xd0 JUMPDEST
0xd1 PUSH1 0x3
0xd3 SLOAD
0xd4 PUSH1 0xff
0xd6 AND
0xd7 ISZERO
0xd8 PUSH2 0xe0
0xdb JUMPI
---
0xd0: JUMPDEST 
0xd1: V65 = 0x3
0xd3: V66 = S[0x3]
0xd4: V67 = 0xff
0xd6: V68 = AND 0xff V66
0xd7: V69 = ISZERO V68
0xd8: V70 = 0xe0
0xdb: JUMPI 0xe0 V69
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdc
[0xdc:0xdf]
---
Predecessors: [0xd0]
Successors: []
---
0xdc PUSH1 0x0
0xde DUP1
0xdf REVERT
---
0xdc: V71 = 0x0
0xdf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xf3]
---
Predecessors: [0xd0]
Successors: [0xf4, 0xf8]
---
0xe0 JUMPDEST
0xe1 PUSH1 0x8
0xe3 SLOAD
0xe4 PUSH1 0x1
0xe6 PUSH1 0xa0
0xe8 PUSH1 0x2
0xea EXP
0xeb SUB
0xec ADDRESS
0xed AND
0xee BALANCE
0xef LT
0xf0 PUSH2 0xf8
0xf3 JUMPI
---
0xe0: JUMPDEST 
0xe1: V72 = 0x8
0xe3: V73 = S[0x8]
0xe4: V74 = 0x1
0xe6: V75 = 0xa0
0xe8: V76 = 0x2
0xea: V77 = EXP 0x2 0xa0
0xeb: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec: V79 = ADDRESS
0xed: V80 = AND V79 0xffffffffffffffffffffffffffffffffffffffff
0xee: V81 = BALANCE V80
0xef: V82 = LT V81 V73
0xf0: V83 = 0xf8
0xf3: JUMPI 0xf8 V82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf4
[0xf4:0xf7]
---
Predecessors: [0xe0]
Successors: []
---
0xf4 PUSH1 0x0
0xf6 DUP1
0xf7 REVERT
---
0xf4: V84 = 0x0
0xf7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf8
[0xf8:0x116]
---
Predecessors: [0xe0]
Successors: [0x117]
---
0xf8 JUMPDEST
0xf9 PUSH1 0x1
0xfb PUSH1 0xa0
0xfd PUSH1 0x2
0xff EXP
0x100 SUB
0x101 CALLER
0x102 AND
0x103 PUSH1 0x0
0x105 SWAP1
0x106 DUP2
0x107 MSTORE
0x108 PUSH1 0x20
0x10a DUP2
0x10b SWAP1
0x10c MSTORE
0x10d PUSH1 0x40
0x10f SWAP1
0x110 SHA3
0x111 DUP1
0x112 SLOAD
0x113 CALLVALUE
0x114 ADD
0x115 SWAP1
0x116 SSTORE
---
0xf8: JUMPDEST 
0xf9: V85 = 0x1
0xfb: V86 = 0xa0
0xfd: V87 = 0x2
0xff: V88 = EXP 0x2 0xa0
0x100: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0x101: V90 = CALLER
0x102: V91 = AND V90 0xffffffffffffffffffffffffffffffffffffffff
0x103: V92 = 0x0
0x107: M[0x0] = V91
0x108: V93 = 0x20
0x10c: M[0x20] = 0x0
0x10d: V94 = 0x40
0x110: V95 = SHA3 0x0 0x40
0x112: V96 = S[V95]
0x113: V97 = CALLVALUE
0x114: V98 = ADD V97 V96
0x116: S[V95] = V98
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x117
[0x117:0x118]
---
Predecessors: [0xf8, 0x448, 0x6f9, 0x73c, 0x7f6]
Successors: []
---
0x117 JUMPDEST
0x118 STOP
---
0x117: JUMPDEST 
0x118: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x119
[0x119:0x11f]
---
Predecessors: [0xb]
Successors: [0x120, 0x124]
---
0x119 JUMPDEST
0x11a CALLVALUE
0x11b ISZERO
0x11c PUSH2 0x124
0x11f JUMPI
---
0x119: JUMPDEST 
0x11a: V99 = CALLVALUE
0x11b: V100 = ISZERO V99
0x11c: V101 = 0x124
0x11f: JUMPI 0x124 V100
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x120
[0x120:0x123]
---
Predecessors: [0x119]
Successors: []
---
0x120 PUSH1 0x0
0x122 DUP1
0x123 REVERT
---
0x120: V102 = 0x0
0x123: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x124
[0x124:0x12b]
---
Predecessors: [0x119]
Successors: [0x371]
---
0x124 JUMPDEST
0x125 PUSH2 0x117
0x128 PUSH2 0x371
0x12b JUMP
---
0x124: JUMPDEST 
0x125: V103 = 0x117
0x128: V104 = 0x371
0x12b: JUMP 0x371
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x117]
Exit stack: [V12, 0x117]

================================

Block 0x12c
[0x12c:0x12d]
---
Predecessors: []
Successors: []
---
0x12c JUMPDEST
0x12d STOP
---
0x12c: JUMPDEST 
0x12d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x12e
[0x12e:0x134]
---
Predecessors: [0x25]
Successors: [0x135, 0x139]
---
0x12e JUMPDEST
0x12f CALLVALUE
0x130 ISZERO
0x131 PUSH2 0x139
0x134 JUMPI
---
0x12e: JUMPDEST 
0x12f: V105 = CALLVALUE
0x130: V106 = ISZERO V105
0x131: V107 = 0x139
0x134: JUMPI 0x139 V106
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x135
[0x135:0x138]
---
Predecessors: [0x12e]
Successors: []
---
0x135 PUSH1 0x0
0x137 DUP1
0x138 REVERT
---
0x135: V108 = 0x0
0x138: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x139
[0x139:0x140]
---
Predecessors: [0x12e]
Successors: [0x44b]
---
0x139 JUMPDEST
0x13a PUSH2 0x141
0x13d PUSH2 0x44b
0x140 JUMP
---
0x139: JUMPDEST 
0x13a: V109 = 0x141
0x13d: V110 = 0x44b
0x140: JUMP 0x44b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141]
Exit stack: [V12, 0x141]

================================

Block 0x141
[0x141:0x152]
---
Predecessors: [0x44b, 0x451, 0x747, 0x74d, 0x7f9, 0x7ff]
Successors: []
---
0x141 JUMPDEST
0x142 PUSH1 0x40
0x144 MLOAD
0x145 SWAP1
0x146 DUP2
0x147 MSTORE
0x148 PUSH1 0x20
0x14a ADD
0x14b PUSH1 0x40
0x14d MLOAD
0x14e DUP1
0x14f SWAP2
0x150 SUB
0x151 SWAP1
0x152 RETURN
---
0x141: JUMPDEST 
0x142: V111 = 0x40
0x144: V112 = M[0x40]
0x147: M[V112] = S0
0x148: V113 = 0x20
0x14a: V114 = ADD 0x20 V112
0x14b: V115 = 0x40
0x14d: V116 = M[0x40]
0x150: V117 = SUB V114 V116
0x152: RETURN V116 V117
---
Entry stack: [V12, 0x141, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x153
[0x153:0x159]
---
Predecessors: [0x30]
Successors: [0x15a, 0x15e]
---
0x153 JUMPDEST
0x154 CALLVALUE
0x155 ISZERO
0x156 PUSH2 0x15e
0x159 JUMPI
---
0x153: JUMPDEST 
0x154: V118 = CALLVALUE
0x155: V119 = ISZERO V118
0x156: V120 = 0x15e
0x159: JUMPI 0x15e V119
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15a
[0x15a:0x15d]
---
Predecessors: [0x153]
Successors: []
---
0x15a PUSH1 0x0
0x15c DUP1
0x15d REVERT
---
0x15a: V121 = 0x0
0x15d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15e
[0x15e:0x171]
---
Predecessors: [0x153]
Successors: [0x451]
---
0x15e JUMPDEST
0x15f PUSH2 0x141
0x162 PUSH1 0x1
0x164 PUSH1 0xa0
0x166 PUSH1 0x2
0x168 EXP
0x169 SUB
0x16a PUSH1 0x4
0x16c CALLDATALOAD
0x16d AND
0x16e PUSH2 0x451
0x171 JUMP
---
0x15e: JUMPDEST 
0x15f: V122 = 0x141
0x162: V123 = 0x1
0x164: V124 = 0xa0
0x166: V125 = 0x2
0x168: V126 = EXP 0x2 0xa0
0x169: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16a: V128 = 0x4
0x16c: V129 = CALLDATALOAD 0x4
0x16d: V130 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x16e: V131 = 0x451
0x171: JUMP 0x451
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141, V130]
Exit stack: [V12, 0x141, V130]

================================

Block 0x172
[0x172:0x183]
---
Predecessors: []
Successors: []
---
0x172 JUMPDEST
0x173 PUSH1 0x40
0x175 MLOAD
0x176 SWAP1
0x177 DUP2
0x178 MSTORE
0x179 PUSH1 0x20
0x17b ADD
0x17c PUSH1 0x40
0x17e MLOAD
0x17f DUP1
0x180 SWAP2
0x181 SUB
0x182 SWAP1
0x183 RETURN
---
0x172: JUMPDEST 
0x173: V132 = 0x40
0x175: V133 = M[0x40]
0x178: M[V133] = S0
0x179: V134 = 0x20
0x17b: V135 = ADD 0x20 V133
0x17c: V136 = 0x40
0x17e: V137 = M[0x40]
0x181: V138 = SUB V135 V137
0x183: RETURN V137 V138
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x184
[0x184:0x18a]
---
Predecessors: [0x3b]
Successors: [0x18b, 0x18f]
---
0x184 JUMPDEST
0x185 CALLVALUE
0x186 ISZERO
0x187 PUSH2 0x18f
0x18a JUMPI
---
0x184: JUMPDEST 
0x185: V139 = CALLVALUE
0x186: V140 = ISZERO V139
0x187: V141 = 0x18f
0x18a: JUMPI 0x18f V140
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18b
[0x18b:0x18e]
---
Predecessors: [0x184]
Successors: []
---
0x18b PUSH1 0x0
0x18d DUP1
0x18e REVERT
---
0x18b: V142 = 0x0
0x18e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18f
[0x18f:0x1a2]
---
Predecessors: [0x184]
Successors: [0x463]
---
0x18f JUMPDEST
0x190 PUSH2 0x117
0x193 PUSH1 0x1
0x195 PUSH1 0xa0
0x197 PUSH1 0x2
0x199 EXP
0x19a SUB
0x19b PUSH1 0x4
0x19d CALLDATALOAD
0x19e AND
0x19f PUSH2 0x463
0x1a2 JUMP
---
0x18f: JUMPDEST 
0x190: V143 = 0x117
0x193: V144 = 0x1
0x195: V145 = 0xa0
0x197: V146 = 0x2
0x199: V147 = EXP 0x2 0xa0
0x19a: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19b: V149 = 0x4
0x19d: V150 = CALLDATALOAD 0x4
0x19e: V151 = AND V150 0xffffffffffffffffffffffffffffffffffffffff
0x19f: V152 = 0x463
0x1a2: JUMP 0x463
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x117, V151]
Exit stack: [V12, 0x117, V151]

================================

Block 0x1a3
[0x1a3:0x1a4]
---
Predecessors: []
Successors: []
---
0x1a3 JUMPDEST
0x1a4 STOP
---
0x1a3: JUMPDEST 
0x1a4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a5
[0x1a5:0x1ab]
---
Predecessors: [0x46]
Successors: [0x1ac, 0x1b0]
---
0x1a5 JUMPDEST
0x1a6 CALLVALUE
0x1a7 ISZERO
0x1a8 PUSH2 0x1b0
0x1ab JUMPI
---
0x1a5: JUMPDEST 
0x1a6: V153 = CALLVALUE
0x1a7: V154 = ISZERO V153
0x1a8: V155 = 0x1b0
0x1ab: JUMPI 0x1b0 V154
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ac
[0x1ac:0x1af]
---
Predecessors: [0x1a5]
Successors: []
---
0x1ac PUSH1 0x0
0x1ae DUP1
0x1af REVERT
---
0x1ac: V156 = 0x0
0x1af: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b0
[0x1b0:0x1b7]
---
Predecessors: [0x1a5]
Successors: [0x700]
---
0x1b0 JUMPDEST
0x1b1 PUSH2 0x1b8
0x1b4 PUSH2 0x700
0x1b7 JUMP
---
0x1b0: JUMPDEST 
0x1b1: V157 = 0x1b8
0x1b4: V158 = 0x700
0x1b7: JUMP 0x700
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b8]
Exit stack: [V12, 0x1b8]

================================

Block 0x1b8
[0x1b8:0x1cb]
---
Predecessors: [0x700, 0x73e]
Successors: []
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x40
0x1bb MLOAD
0x1bc SWAP1
0x1bd ISZERO
0x1be ISZERO
0x1bf DUP2
0x1c0 MSTORE
0x1c1 PUSH1 0x20
0x1c3 ADD
0x1c4 PUSH1 0x40
0x1c6 MLOAD
0x1c7 DUP1
0x1c8 SWAP2
0x1c9 SUB
0x1ca SWAP1
0x1cb RETURN
---
0x1b8: JUMPDEST 
0x1b9: V159 = 0x40
0x1bb: V160 = M[0x40]
0x1bd: V161 = ISZERO S0
0x1be: V162 = ISZERO V161
0x1c0: M[V160] = V162
0x1c1: V163 = 0x20
0x1c3: V164 = ADD 0x20 V160
0x1c4: V165 = 0x40
0x1c6: V166 = M[0x40]
0x1c9: V167 = SUB V164 V166
0x1cb: RETURN V166 V167
---
Entry stack: [V12, 0x1b8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1b8]

================================

Block 0x1cc
[0x1cc:0x1d2]
---
Predecessors: [0x51]
Successors: [0x1d3, 0x1d7]
---
0x1cc JUMPDEST
0x1cd CALLVALUE
0x1ce ISZERO
0x1cf PUSH2 0x1d7
0x1d2 JUMPI
---
0x1cc: JUMPDEST 
0x1cd: V168 = CALLVALUE
0x1ce: V169 = ISZERO V168
0x1cf: V170 = 0x1d7
0x1d2: JUMPI 0x1d7 V169
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d3
[0x1d3:0x1d6]
---
Predecessors: [0x1cc]
Successors: []
---
0x1d3 PUSH1 0x0
0x1d5 DUP1
0x1d6 REVERT
---
0x1d3: V171 = 0x0
0x1d6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d7
[0x1d7:0x1de]
---
Predecessors: [0x1cc]
Successors: [0x709]
---
0x1d7 JUMPDEST
0x1d8 PUSH2 0x1df
0x1db PUSH2 0x709
0x1de JUMP
---
0x1d7: JUMPDEST 
0x1d8: V172 = 0x1df
0x1db: V173 = 0x709
0x1de: JUMP 0x709
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1df]
Exit stack: [V12, 0x1df]

================================

Block 0x1df
[0x1df:0x1fa]
---
Predecessors: [0x709, 0x753, 0x805]
Successors: []
---
0x1df JUMPDEST
0x1e0 PUSH1 0x40
0x1e2 MLOAD
0x1e3 PUSH1 0x1
0x1e5 PUSH1 0xa0
0x1e7 PUSH1 0x2
0x1e9 EXP
0x1ea SUB
0x1eb SWAP1
0x1ec SWAP2
0x1ed AND
0x1ee DUP2
0x1ef MSTORE
0x1f0 PUSH1 0x20
0x1f2 ADD
0x1f3 PUSH1 0x40
0x1f5 MLOAD
0x1f6 DUP1
0x1f7 SWAP2
0x1f8 SUB
0x1f9 SWAP1
0x1fa RETURN
---
0x1df: JUMPDEST 
0x1e0: V174 = 0x40
0x1e2: V175 = M[0x40]
0x1e3: V176 = 0x1
0x1e5: V177 = 0xa0
0x1e7: V178 = 0x2
0x1e9: V179 = EXP 0x2 0xa0
0x1ea: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ed: V181 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1ef: M[V175] = V181
0x1f0: V182 = 0x20
0x1f2: V183 = ADD 0x20 V175
0x1f3: V184 = 0x40
0x1f5: V185 = M[0x40]
0x1f8: V186 = SUB V183 V185
0x1fa: RETURN V185 V186
---
Entry stack: [V12, 0x1df, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1df]

================================

Block 0x1fb
[0x1fb:0x202]
---
Predecessors: [0x5c]
Successors: [0x718]
---
0x1fb JUMPDEST
0x1fc PUSH2 0x117
0x1ff PUSH2 0x718
0x202 JUMP
---
0x1fb: JUMPDEST 
0x1fc: V187 = 0x117
0x1ff: V188 = 0x718
0x202: JUMP 0x718
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x117]
Exit stack: [V12, 0x117]

================================

Block 0x203
[0x203:0x204]
---
Predecessors: []
Successors: []
---
0x203 JUMPDEST
0x204 STOP
---
0x203: JUMPDEST 
0x204: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x205
[0x205:0x20b]
---
Predecessors: [0x67]
Successors: [0x20c, 0x210]
---
0x205 JUMPDEST
0x206 CALLVALUE
0x207 ISZERO
0x208 PUSH2 0x210
0x20b JUMPI
---
0x205: JUMPDEST 
0x206: V189 = CALLVALUE
0x207: V190 = ISZERO V189
0x208: V191 = 0x210
0x20b: JUMPI 0x210 V190
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20c
[0x20c:0x20f]
---
Predecessors: [0x205]
Successors: []
---
0x20c PUSH1 0x0
0x20e DUP1
0x20f REVERT
---
0x20c: V192 = 0x0
0x20f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x210
[0x210:0x217]
---
Predecessors: [0x205]
Successors: [0x73e]
---
0x210 JUMPDEST
0x211 PUSH2 0x1b8
0x214 PUSH2 0x73e
0x217 JUMP
---
0x210: JUMPDEST 
0x211: V193 = 0x1b8
0x214: V194 = 0x73e
0x217: JUMP 0x73e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b8]
Exit stack: [V12, 0x1b8]

================================

Block 0x218
[0x218:0x22b]
---
Predecessors: []
Successors: []
---
0x218 JUMPDEST
0x219 PUSH1 0x40
0x21b MLOAD
0x21c SWAP1
0x21d ISZERO
0x21e ISZERO
0x21f DUP2
0x220 MSTORE
0x221 PUSH1 0x20
0x223 ADD
0x224 PUSH1 0x40
0x226 MLOAD
0x227 DUP1
0x228 SWAP2
0x229 SUB
0x22a SWAP1
0x22b RETURN
---
0x218: JUMPDEST 
0x219: V195 = 0x40
0x21b: V196 = M[0x40]
0x21d: V197 = ISZERO S0
0x21e: V198 = ISZERO V197
0x220: M[V196] = V198
0x221: V199 = 0x20
0x223: V200 = ADD 0x20 V196
0x224: V201 = 0x40
0x226: V202 = M[0x40]
0x229: V203 = SUB V200 V202
0x22b: RETURN V202 V203
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x22c
[0x22c:0x232]
---
Predecessors: [0x72]
Successors: [0x233, 0x237]
---
0x22c JUMPDEST
0x22d CALLVALUE
0x22e ISZERO
0x22f PUSH2 0x237
0x232 JUMPI
---
0x22c: JUMPDEST 
0x22d: V204 = CALLVALUE
0x22e: V205 = ISZERO V204
0x22f: V206 = 0x237
0x232: JUMPI 0x237 V205
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x233
[0x233:0x236]
---
Predecessors: [0x22c]
Successors: []
---
0x233 PUSH1 0x0
0x235 DUP1
0x236 REVERT
---
0x233: V207 = 0x0
0x236: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x237
[0x237:0x23e]
---
Predecessors: [0x22c]
Successors: [0x747]
---
0x237 JUMPDEST
0x238 PUSH2 0x141
0x23b PUSH2 0x747
0x23e JUMP
---
0x237: JUMPDEST 
0x238: V208 = 0x141
0x23b: V209 = 0x747
0x23e: JUMP 0x747
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141]
Exit stack: [V12, 0x141]

================================

Block 0x23f
[0x23f:0x250]
---
Predecessors: []
Successors: []
---
0x23f JUMPDEST
0x240 PUSH1 0x40
0x242 MLOAD
0x243 SWAP1
0x244 DUP2
0x245 MSTORE
0x246 PUSH1 0x20
0x248 ADD
0x249 PUSH1 0x40
0x24b MLOAD
0x24c DUP1
0x24d SWAP2
0x24e SUB
0x24f SWAP1
0x250 RETURN
---
0x23f: JUMPDEST 
0x240: V210 = 0x40
0x242: V211 = M[0x40]
0x245: M[V211] = S0
0x246: V212 = 0x20
0x248: V213 = ADD 0x20 V211
0x249: V214 = 0x40
0x24b: V215 = M[0x40]
0x24e: V216 = SUB V213 V215
0x250: RETURN V215 V216
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x251
[0x251:0x257]
---
Predecessors: [0x7d]
Successors: [0x258, 0x25c]
---
0x251 JUMPDEST
0x252 CALLVALUE
0x253 ISZERO
0x254 PUSH2 0x25c
0x257 JUMPI
---
0x251: JUMPDEST 
0x252: V217 = CALLVALUE
0x253: V218 = ISZERO V217
0x254: V219 = 0x25c
0x257: JUMPI 0x25c V218
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x258
[0x258:0x25b]
---
Predecessors: [0x251]
Successors: []
---
0x258 PUSH1 0x0
0x25a DUP1
0x25b REVERT
---
0x258: V220 = 0x0
0x25b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25c
[0x25c:0x263]
---
Predecessors: [0x251]
Successors: [0x74d]
---
0x25c JUMPDEST
0x25d PUSH2 0x141
0x260 PUSH2 0x74d
0x263 JUMP
---
0x25c: JUMPDEST 
0x25d: V221 = 0x141
0x260: V222 = 0x74d
0x263: JUMP 0x74d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141]
Exit stack: [V12, 0x141]

================================

Block 0x264
[0x264:0x275]
---
Predecessors: []
Successors: []
---
0x264 JUMPDEST
0x265 PUSH1 0x40
0x267 MLOAD
0x268 SWAP1
0x269 DUP2
0x26a MSTORE
0x26b PUSH1 0x20
0x26d ADD
0x26e PUSH1 0x40
0x270 MLOAD
0x271 DUP1
0x272 SWAP2
0x273 SUB
0x274 SWAP1
0x275 RETURN
---
0x264: JUMPDEST 
0x265: V223 = 0x40
0x267: V224 = M[0x40]
0x26a: M[V224] = S0
0x26b: V225 = 0x20
0x26d: V226 = ADD 0x20 V224
0x26e: V227 = 0x40
0x270: V228 = M[0x40]
0x273: V229 = SUB V226 V228
0x275: RETURN V228 V229
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x276
[0x276:0x27c]
---
Predecessors: [0x88]
Successors: [0x27d, 0x281]
---
0x276 JUMPDEST
0x277 CALLVALUE
0x278 ISZERO
0x279 PUSH2 0x281
0x27c JUMPI
---
0x276: JUMPDEST 
0x277: V230 = CALLVALUE
0x278: V231 = ISZERO V230
0x279: V232 = 0x281
0x27c: JUMPI 0x281 V231
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27d
[0x27d:0x280]
---
Predecessors: [0x276]
Successors: []
---
0x27d PUSH1 0x0
0x27f DUP1
0x280 REVERT
---
0x27d: V233 = 0x0
0x280: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x281
[0x281:0x288]
---
Predecessors: [0x276]
Successors: [0x753]
---
0x281 JUMPDEST
0x282 PUSH2 0x1df
0x285 PUSH2 0x753
0x288 JUMP
---
0x281: JUMPDEST 
0x282: V234 = 0x1df
0x285: V235 = 0x753
0x288: JUMP 0x753
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1df]
Exit stack: [V12, 0x1df]

================================

Block 0x289
[0x289:0x2a4]
---
Predecessors: []
Successors: []
---
0x289 JUMPDEST
0x28a PUSH1 0x40
0x28c MLOAD
0x28d PUSH1 0x1
0x28f PUSH1 0xa0
0x291 PUSH1 0x2
0x293 EXP
0x294 SUB
0x295 SWAP1
0x296 SWAP2
0x297 AND
0x298 DUP2
0x299 MSTORE
0x29a PUSH1 0x20
0x29c ADD
0x29d PUSH1 0x40
0x29f MLOAD
0x2a0 DUP1
0x2a1 SWAP2
0x2a2 SUB
0x2a3 SWAP1
0x2a4 RETURN
---
0x289: JUMPDEST 
0x28a: V236 = 0x40
0x28c: V237 = M[0x40]
0x28d: V238 = 0x1
0x28f: V239 = 0xa0
0x291: V240 = 0x2
0x293: V241 = EXP 0x2 0xa0
0x294: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x297: V243 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x299: M[V237] = V243
0x29a: V244 = 0x20
0x29c: V245 = ADD 0x20 V237
0x29d: V246 = 0x40
0x29f: V247 = M[0x40]
0x2a2: V248 = SUB V245 V247
0x2a4: RETURN V247 V248
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2a5
[0x2a5:0x2ab]
---
Predecessors: [0x93]
Successors: [0x2ac, 0x2b0]
---
0x2a5 JUMPDEST
0x2a6 CALLVALUE
0x2a7 ISZERO
0x2a8 PUSH2 0x2b0
0x2ab JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V249 = CALLVALUE
0x2a7: V250 = ISZERO V249
0x2a8: V251 = 0x2b0
0x2ab: JUMPI 0x2b0 V250
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ac
[0x2ac:0x2af]
---
Predecessors: [0x2a5]
Successors: []
---
0x2ac PUSH1 0x0
0x2ae DUP1
0x2af REVERT
---
0x2ac: V252 = 0x0
0x2af: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b0
[0x2b0:0x2f5]
---
Predecessors: [0x2a5]
Successors: [0x762]
---
0x2b0 JUMPDEST
0x2b1 PUSH2 0x117
0x2b4 PUSH1 0x4
0x2b6 PUSH1 0x24
0x2b8 DUP2
0x2b9 CALLDATALOAD
0x2ba DUP2
0x2bb DUP2
0x2bc ADD
0x2bd SWAP1
0x2be DUP4
0x2bf ADD
0x2c0 CALLDATALOAD
0x2c1 DUP1
0x2c2 PUSH1 0x20
0x2c4 PUSH1 0x1f
0x2c6 DUP3
0x2c7 ADD
0x2c8 DUP2
0x2c9 SWAP1
0x2ca DIV
0x2cb DUP2
0x2cc MUL
0x2cd ADD
0x2ce PUSH1 0x40
0x2d0 MLOAD
0x2d1 SWAP1
0x2d2 DUP2
0x2d3 ADD
0x2d4 PUSH1 0x40
0x2d6 MSTORE
0x2d7 DUP2
0x2d8 DUP2
0x2d9 MSTORE
0x2da SWAP3
0x2db SWAP2
0x2dc SWAP1
0x2dd PUSH1 0x20
0x2df DUP5
0x2e0 ADD
0x2e1 DUP4
0x2e2 DUP4
0x2e3 DUP1
0x2e4 DUP3
0x2e5 DUP5
0x2e6 CALLDATACOPY
0x2e7 POP
0x2e8 SWAP5
0x2e9 SWAP7
0x2ea POP
0x2eb PUSH2 0x762
0x2ee SWAP6
0x2ef POP
0x2f0 POP
0x2f1 POP
0x2f2 POP
0x2f3 POP
0x2f4 POP
0x2f5 JUMP
---
0x2b0: JUMPDEST 
0x2b1: V253 = 0x117
0x2b4: V254 = 0x4
0x2b6: V255 = 0x24
0x2b9: V256 = CALLDATALOAD 0x4
0x2bc: V257 = ADD V256 0x24
0x2bf: V258 = ADD 0x4 V256
0x2c0: V259 = CALLDATALOAD V258
0x2c2: V260 = 0x20
0x2c4: V261 = 0x1f
0x2c7: V262 = ADD V259 0x1f
0x2ca: V263 = DIV V262 0x20
0x2cc: V264 = MUL 0x20 V263
0x2cd: V265 = ADD V264 0x20
0x2ce: V266 = 0x40
0x2d0: V267 = M[0x40]
0x2d3: V268 = ADD V267 V265
0x2d4: V269 = 0x40
0x2d6: M[0x40] = V268
0x2d9: M[V267] = V259
0x2dd: V270 = 0x20
0x2e0: V271 = ADD V267 0x20
0x2e6: CALLDATACOPY V271 V257 V259
0x2eb: V272 = 0x762
0x2f5: JUMP 0x762
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x117, V267]
Exit stack: [V12, 0x117, V267]

================================

Block 0x2f6
[0x2f6:0x2f7]
---
Predecessors: []
Successors: []
---
0x2f6 JUMPDEST
0x2f7 STOP
---
0x2f6: JUMPDEST 
0x2f7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2f8
[0x2f8:0x2fe]
---
Predecessors: [0x9e]
Successors: [0x2ff, 0x303]
---
0x2f8 JUMPDEST
0x2f9 CALLVALUE
0x2fa ISZERO
0x2fb PUSH2 0x303
0x2fe JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V273 = CALLVALUE
0x2fa: V274 = ISZERO V273
0x2fb: V275 = 0x303
0x2fe: JUMPI 0x303 V274
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ff
[0x2ff:0x302]
---
Predecessors: [0x2f8]
Successors: []
---
0x2ff PUSH1 0x0
0x301 DUP1
0x302 REVERT
---
0x2ff: V276 = 0x0
0x302: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x303
[0x303:0x30a]
---
Predecessors: [0x2f8]
Successors: [0x7f9]
---
0x303 JUMPDEST
0x304 PUSH2 0x141
0x307 PUSH2 0x7f9
0x30a JUMP
---
0x303: JUMPDEST 
0x304: V277 = 0x141
0x307: V278 = 0x7f9
0x30a: JUMP 0x7f9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141]
Exit stack: [V12, 0x141]

================================

Block 0x30b
[0x30b:0x31c]
---
Predecessors: []
Successors: []
---
0x30b JUMPDEST
0x30c PUSH1 0x40
0x30e MLOAD
0x30f SWAP1
0x310 DUP2
0x311 MSTORE
0x312 PUSH1 0x20
0x314 ADD
0x315 PUSH1 0x40
0x317 MLOAD
0x318 DUP1
0x319 SWAP2
0x31a SUB
0x31b SWAP1
0x31c RETURN
---
0x30b: JUMPDEST 
0x30c: V279 = 0x40
0x30e: V280 = M[0x40]
0x311: M[V280] = S0
0x312: V281 = 0x20
0x314: V282 = ADD 0x20 V280
0x315: V283 = 0x40
0x317: V284 = M[0x40]
0x31a: V285 = SUB V282 V284
0x31c: RETURN V284 V285
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x31d
[0x31d:0x323]
---
Predecessors: [0xa9]
Successors: [0x324, 0x328]
---
0x31d JUMPDEST
0x31e CALLVALUE
0x31f ISZERO
0x320 PUSH2 0x328
0x323 JUMPI
---
0x31d: JUMPDEST 
0x31e: V286 = CALLVALUE
0x31f: V287 = ISZERO V286
0x320: V288 = 0x328
0x323: JUMPI 0x328 V287
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x324
[0x324:0x327]
---
Predecessors: [0x31d]
Successors: []
---
0x324 PUSH1 0x0
0x326 DUP1
0x327 REVERT
---
0x324: V289 = 0x0
0x327: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x328
[0x328:0x32f]
---
Predecessors: [0x31d]
Successors: [0x7ff]
---
0x328 JUMPDEST
0x329 PUSH2 0x141
0x32c PUSH2 0x7ff
0x32f JUMP
---
0x328: JUMPDEST 
0x329: V290 = 0x141
0x32c: V291 = 0x7ff
0x32f: JUMP 0x7ff
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141]
Exit stack: [V12, 0x141]

================================

Block 0x330
[0x330:0x341]
---
Predecessors: []
Successors: []
---
0x330 JUMPDEST
0x331 PUSH1 0x40
0x333 MLOAD
0x334 SWAP1
0x335 DUP2
0x336 MSTORE
0x337 PUSH1 0x20
0x339 ADD
0x33a PUSH1 0x40
0x33c MLOAD
0x33d DUP1
0x33e SWAP2
0x33f SUB
0x340 SWAP1
0x341 RETURN
---
0x330: JUMPDEST 
0x331: V292 = 0x40
0x333: V293 = M[0x40]
0x336: M[V293] = S0
0x337: V294 = 0x20
0x339: V295 = ADD 0x20 V293
0x33a: V296 = 0x40
0x33c: V297 = M[0x40]
0x33f: V298 = SUB V295 V297
0x341: RETURN V297 V298
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x342
[0x342:0x348]
---
Predecessors: [0xb4]
Successors: [0x349, 0x34d]
---
0x342 JUMPDEST
0x343 CALLVALUE
0x344 ISZERO
0x345 PUSH2 0x34d
0x348 JUMPI
---
0x342: JUMPDEST 
0x343: V299 = CALLVALUE
0x344: V300 = ISZERO V299
0x345: V301 = 0x34d
0x348: JUMPI 0x34d V300
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x349
[0x349:0x34c]
---
Predecessors: [0x342]
Successors: []
---
0x349 PUSH1 0x0
0x34b DUP1
0x34c REVERT
---
0x349: V302 = 0x0
0x34c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x34d
[0x34d:0x354]
---
Predecessors: [0x342]
Successors: [0x805]
---
0x34d JUMPDEST
0x34e PUSH2 0x1df
0x351 PUSH2 0x805
0x354 JUMP
---
0x34d: JUMPDEST 
0x34e: V303 = 0x1df
0x351: V304 = 0x805
0x354: JUMP 0x805
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1df]
Exit stack: [V12, 0x1df]

================================

Block 0x355
[0x355:0x370]
---
Predecessors: []
Successors: []
---
0x355 JUMPDEST
0x356 PUSH1 0x40
0x358 MLOAD
0x359 PUSH1 0x1
0x35b PUSH1 0xa0
0x35d PUSH1 0x2
0x35f EXP
0x360 SUB
0x361 SWAP1
0x362 SWAP2
0x363 AND
0x364 DUP2
0x365 MSTORE
0x366 PUSH1 0x20
0x368 ADD
0x369 PUSH1 0x40
0x36b MLOAD
0x36c DUP1
0x36d SWAP2
0x36e SUB
0x36f SWAP1
0x370 RETURN
---
0x355: JUMPDEST 
0x356: V305 = 0x40
0x358: V306 = M[0x40]
0x359: V307 = 0x1
0x35b: V308 = 0xa0
0x35d: V309 = 0x2
0x35f: V310 = EXP 0x2 0xa0
0x360: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x363: V312 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x365: M[V306] = V312
0x366: V313 = 0x20
0x368: V314 = ADD 0x20 V306
0x369: V315 = 0x40
0x36b: V316 = M[0x40]
0x36e: V317 = SUB V314 V316
0x370: RETURN V316 V317
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x371
[0x371:0x37f]
---
Predecessors: [0x124]
Successors: [0x380, 0x384]
---
0x371 JUMPDEST
0x372 PUSH1 0x3
0x374 SLOAD
0x375 PUSH1 0x0
0x377 SWAP1
0x378 PUSH1 0xff
0x37a AND
0x37b ISZERO
0x37c PUSH2 0x384
0x37f JUMPI
---
0x371: JUMPDEST 
0x372: V318 = 0x3
0x374: V319 = S[0x3]
0x375: V320 = 0x0
0x378: V321 = 0xff
0x37a: V322 = AND 0xff V319
0x37b: V323 = ISZERO V322
0x37c: V324 = 0x384
0x37f: JUMPI 0x384 V323
---
Entry stack: [V12, 0x117]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x117, 0x0]

================================

Block 0x380
[0x380:0x383]
---
Predecessors: [0x371]
Successors: [0x447]
---
0x380 PUSH2 0x447
0x383 JUMP
---
0x380: V325 = 0x447
0x383: JUMP 0x447
---
Entry stack: [V12, 0x117, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, 0x0]

================================

Block 0x384
[0x384:0x38e]
---
Predecessors: [0x371]
Successors: [0x38f, 0x393]
---
0x384 JUMPDEST
0x385 PUSH1 0x7
0x387 SLOAD
0x388 TIMESTAMP
0x389 LT
0x38a ISZERO
0x38b PUSH2 0x393
0x38e JUMPI
---
0x384: JUMPDEST 
0x385: V326 = 0x7
0x387: V327 = S[0x7]
0x388: V328 = TIMESTAMP
0x389: V329 = LT V328 V327
0x38a: V330 = ISZERO V329
0x38b: V331 = 0x393
0x38e: JUMPI 0x393 V330
---
Entry stack: [V12, 0x117, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, 0x0]

================================

Block 0x38f
[0x38f:0x392]
---
Predecessors: [0x384]
Successors: [0x447]
---
0x38f PUSH2 0x447
0x392 JUMP
---
0x38f: V332 = 0x447
0x392: JUMP 0x447
---
Entry stack: [V12, 0x117, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, 0x0]

================================

Block 0x393
[0x393:0x39e]
---
Predecessors: [0x384]
Successors: [0x39f, 0x3a3]
---
0x393 JUMPDEST
0x394 PUSH1 0x5
0x396 SLOAD
0x397 PUSH1 0xff
0x399 AND
0x39a ISZERO
0x39b PUSH2 0x3a3
0x39e JUMPI
---
0x393: JUMPDEST 
0x394: V333 = 0x5
0x396: V334 = S[0x5]
0x397: V335 = 0xff
0x399: V336 = AND 0xff V334
0x39a: V337 = ISZERO V336
0x39b: V338 = 0x3a3
0x39e: JUMPI 0x3a3 V337
---
Entry stack: [V12, 0x117, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, 0x0]

================================

Block 0x39f
[0x39f:0x3a2]
---
Predecessors: [0x393]
Successors: [0x447]
---
0x39f PUSH2 0x447
0x3a2 JUMP
---
0x39f: V339 = 0x447
0x3a2: JUMP 0x447
---
Entry stack: [V12, 0x117, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, 0x0]

================================

Block 0x3a3
[0x3a3:0x3b5]
---
Predecessors: [0x393]
Successors: [0x3b6, 0x3ba]
---
0x3a3 JUMPDEST
0x3a4 PUSH1 0xa
0x3a6 SLOAD
0x3a7 PUSH1 0x1
0x3a9 PUSH1 0xa0
0x3ab PUSH1 0x2
0x3ad EXP
0x3ae SUB
0x3af AND
0x3b0 ISZERO
0x3b1 ISZERO
0x3b2 PUSH2 0x3ba
0x3b5 JUMPI
---
0x3a3: JUMPDEST 
0x3a4: V340 = 0xa
0x3a6: V341 = S[0xa]
0x3a7: V342 = 0x1
0x3a9: V343 = 0xa0
0x3ab: V344 = 0x2
0x3ad: V345 = EXP 0x2 0xa0
0x3ae: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3af: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x3b0: V348 = ISZERO V347
0x3b1: V349 = ISZERO V348
0x3b2: V350 = 0x3ba
0x3b5: JUMPI 0x3ba V349
---
Entry stack: [V12, 0x117, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, 0x0]

================================

Block 0x3b6
[0x3b6:0x3b9]
---
Predecessors: [0x3a3]
Successors: []
---
0x3b6 PUSH1 0x0
0x3b8 DUP1
0x3b9 REVERT
---
0x3b6: V351 = 0x0
0x3b9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x117, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, 0x0]

================================

Block 0x3ba
[0x3ba:0x411]
---
Predecessors: [0x3a3]
Successors: [0x412, 0x416]
---
0x3ba JUMPDEST
0x3bb POP
0x3bc PUSH1 0x3
0x3be DUP1
0x3bf SLOAD
0x3c0 PUSH1 0xff
0x3c2 NOT
0x3c3 AND
0x3c4 PUSH1 0x1
0x3c6 SWAP1
0x3c7 DUP2
0x3c8 OR
0x3c9 SWAP1
0x3ca SWAP2
0x3cb SSTORE
0x3cc DUP1
0x3cd SLOAD
0x3ce PUSH1 0x0
0x3d0 SWAP1
0x3d1 SWAP2
0x3d2 SSTORE
0x3d3 PUSH1 0x2
0x3d5 SLOAD
0x3d6 DUP2
0x3d7 ADD
0x3d8 PUSH1 0x1
0x3da PUSH1 0xa0
0x3dc PUSH1 0x2
0x3de EXP
0x3df SUB
0x3e0 ADDRESS
0x3e1 DUP2
0x3e2 AND
0x3e3 BALANCE
0x3e4 SWAP2
0x3e5 SWAP1
0x3e6 SWAP2
0x3e7 SUB
0x3e8 PUSH1 0x4
0x3ea DUP2
0x3eb SWAP1
0x3ec SSTORE
0x3ed PUSH1 0xa
0x3ef SLOAD
0x3f0 SWAP1
0x3f1 SWAP2
0x3f2 AND
0x3f3 SWAP1
0x3f4 PUSH1 0x40
0x3f6 MLOAD
0x3f7 PUSH1 0x0
0x3f9 PUSH1 0x40
0x3fb MLOAD
0x3fc DUP1
0x3fd DUP4
0x3fe SUB
0x3ff DUP2
0x400 DUP6
0x401 DUP8
0x402 PUSH2 0x8796
0x405 GAS
0x406 SUB
0x407 CALL
0x408 SWAP3
0x409 POP
0x40a POP
0x40b POP
0x40c ISZERO
0x40d ISZERO
0x40e PUSH2 0x416
0x411 JUMPI
---
0x3ba: JUMPDEST 
0x3bc: V352 = 0x3
0x3bf: V353 = S[0x3]
0x3c0: V354 = 0xff
0x3c2: V355 = NOT 0xff
0x3c3: V356 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V353
0x3c4: V357 = 0x1
0x3c8: V358 = OR 0x1 V356
0x3cb: S[0x3] = V358
0x3cd: V359 = S[0x1]
0x3ce: V360 = 0x0
0x3d2: S[0x1] = 0x0
0x3d3: V361 = 0x2
0x3d5: V362 = S[0x2]
0x3d7: V363 = ADD V359 V362
0x3d8: V364 = 0x1
0x3da: V365 = 0xa0
0x3dc: V366 = 0x2
0x3de: V367 = EXP 0x2 0xa0
0x3df: V368 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e0: V369 = ADDRESS
0x3e2: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x3e3: V371 = BALANCE V370
0x3e7: V372 = SUB V371 V363
0x3e8: V373 = 0x4
0x3ec: S[0x4] = V372
0x3ed: V374 = 0xa
0x3ef: V375 = S[0xa]
0x3f2: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x3f4: V377 = 0x40
0x3f6: V378 = M[0x40]
0x3f7: V379 = 0x0
0x3f9: V380 = 0x40
0x3fb: V381 = M[0x40]
0x3fe: V382 = SUB V378 V381
0x402: V383 = 0x8796
0x405: V384 = GAS
0x406: V385 = SUB V384 0x8796
0x407: V386 = CALL V385 V376 V372 V381 V382 V381 0x0
0x40c: V387 = ISZERO V386
0x40d: V388 = ISZERO V387
0x40e: V389 = 0x416
0x411: JUMPI 0x416 V388
---
Entry stack: [V12, 0x117, 0x0]
Stack pops: 1
Stack additions: [V359]
Exit stack: [V12, 0x117, V359]

================================

Block 0x412
[0x412:0x415]
---
Predecessors: [0x3ba]
Successors: []
---
0x412 PUSH1 0x0
0x414 DUP1
0x415 REVERT
---
0x412: V390 = 0x0
0x415: REVERT 0x0 0x0
---
Entry stack: [V12, 0x117, V359]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V359]

================================

Block 0x416
[0x416:0x442]
---
Predecessors: [0x3ba]
Successors: [0x443, 0x447]
---
0x416 JUMPDEST
0x417 PUSH1 0x1
0x419 PUSH1 0xa0
0x41b PUSH1 0x2
0x41d EXP
0x41e SUB
0x41f CALLER
0x420 AND
0x421 DUP2
0x422 ISZERO
0x423 PUSH2 0x8fc
0x426 MUL
0x427 DUP3
0x428 PUSH1 0x40
0x42a MLOAD
0x42b PUSH1 0x0
0x42d PUSH1 0x40
0x42f MLOAD
0x430 DUP1
0x431 DUP4
0x432 SUB
0x433 DUP2
0x434 DUP6
0x435 DUP9
0x436 DUP9
0x437 CALL
0x438 SWAP4
0x439 POP
0x43a POP
0x43b POP
0x43c POP
0x43d ISZERO
0x43e ISZERO
0x43f PUSH2 0x447
0x442 JUMPI
---
0x416: JUMPDEST 
0x417: V391 = 0x1
0x419: V392 = 0xa0
0x41b: V393 = 0x2
0x41d: V394 = EXP 0x2 0xa0
0x41e: V395 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41f: V396 = CALLER
0x420: V397 = AND V396 0xffffffffffffffffffffffffffffffffffffffff
0x422: V398 = ISZERO V359
0x423: V399 = 0x8fc
0x426: V400 = MUL 0x8fc V398
0x428: V401 = 0x40
0x42a: V402 = M[0x40]
0x42b: V403 = 0x0
0x42d: V404 = 0x40
0x42f: V405 = M[0x40]
0x432: V406 = SUB V402 V405
0x437: V407 = CALL V400 V397 V359 V405 V406 V405 0x0
0x43d: V408 = ISZERO V407
0x43e: V409 = ISZERO V408
0x43f: V410 = 0x447
0x442: JUMPI 0x447 V409
---
Entry stack: [V12, 0x117, V359]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x117, V359]

================================

Block 0x443
[0x443:0x446]
---
Predecessors: [0x416]
Successors: []
---
0x443 PUSH1 0x0
0x445 DUP1
0x446 REVERT
---
0x443: V411 = 0x0
0x446: REVERT 0x0 0x0
---
Entry stack: [V12, 0x117, V359]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V359]

================================

Block 0x447
[0x447:0x447]
---
Predecessors: [0x380, 0x38f, 0x39f, 0x416]
Successors: [0x448]
---
0x447 JUMPDEST
---
0x447: JUMPDEST 
---
Entry stack: [V12, 0x117, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, S0]

================================

Block 0x448
[0x448:0x44a]
---
Predecessors: [0x447]
Successors: [0x117]
---
0x448 JUMPDEST
0x449 POP
0x44a JUMP
---
0x448: JUMPDEST 
0x44a: JUMP 0x117
---
Entry stack: [V12, 0x117, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x44b
[0x44b:0x450]
---
Predecessors: [0x139]
Successors: [0x141]
---
0x44b JUMPDEST
0x44c PUSH1 0x1
0x44e SLOAD
0x44f DUP2
0x450 JUMP
---
0x44b: JUMPDEST 
0x44c: V412 = 0x1
0x44e: V413 = S[0x1]
0x450: JUMP 0x141
---
Entry stack: [V12, 0x141]
Stack pops: 1
Stack additions: [S0, V413]
Exit stack: [V12, 0x141, V413]

================================

Block 0x451
[0x451:0x462]
---
Predecessors: [0x15e]
Successors: [0x141]
---
0x451 JUMPDEST
0x452 PUSH1 0x0
0x454 PUSH1 0x20
0x456 DUP2
0x457 SWAP1
0x458 MSTORE
0x459 SWAP1
0x45a DUP2
0x45b MSTORE
0x45c PUSH1 0x40
0x45e SWAP1
0x45f SHA3
0x460 SLOAD
0x461 DUP2
0x462 JUMP
---
0x451: JUMPDEST 
0x452: V414 = 0x0
0x454: V415 = 0x20
0x458: M[0x20] = 0x0
0x45b: M[0x0] = V130
0x45c: V416 = 0x40
0x45f: V417 = SHA3 0x0 0x40
0x460: V418 = S[V417]
0x462: JUMP 0x141
---
Entry stack: [V12, 0x141, V130]
Stack pops: 2
Stack additions: [S1, V418]
Exit stack: [V12, 0x141, V418]

================================

Block 0x463
[0x463:0x477]
---
Predecessors: [0x18f]
Successors: [0x478, 0x482]
---
0x463 JUMPDEST
0x464 PUSH1 0x3
0x466 SLOAD
0x467 PUSH1 0x0
0x469 SWAP1
0x46a DUP2
0x46b SWAP1
0x46c DUP2
0x46d SWAP1
0x46e DUP2
0x46f SWAP1
0x470 PUSH1 0xff
0x472 AND
0x473 DUP1
0x474 PUSH2 0x482
0x477 JUMPI
---
0x463: JUMPDEST 
0x464: V419 = 0x3
0x466: V420 = S[0x3]
0x467: V421 = 0x0
0x470: V422 = 0xff
0x472: V423 = AND 0xff V420
0x474: V424 = 0x482
0x477: JUMPI 0x482 V423
---
Entry stack: [V12, 0x117, V151]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, V423]
Exit stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0, V423]

================================

Block 0x478
[0x478:0x481]
---
Predecessors: [0x463]
Successors: [0x482]
---
0x478 POP
0x479 PUSH1 0x7
0x47b SLOAD
0x47c PUSH2 0xe10
0x47f ADD
0x480 TIMESTAMP
0x481 GT
---
0x479: V425 = 0x7
0x47b: V426 = S[0x7]
0x47c: V427 = 0xe10
0x47f: V428 = ADD 0xe10 V426
0x480: V429 = TIMESTAMP
0x481: V430 = GT V429 V428
---
Entry stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0, V423]
Stack pops: 1
Stack additions: [V430]
Exit stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0, V430]

================================

Block 0x482
[0x482:0x488]
---
Predecessors: [0x463, 0x478]
Successors: [0x489, 0x48d]
---
0x482 JUMPDEST
0x483 ISZERO
0x484 ISZERO
0x485 PUSH2 0x48d
0x488 JUMPI
---
0x482: JUMPDEST 
0x483: V431 = ISZERO S0
0x484: V432 = ISZERO V431
0x485: V433 = 0x48d
0x488: JUMPI 0x48d V432
---
Entry stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x489
[0x489:0x48c]
---
Predecessors: [0x482]
Successors: []
---
0x489 PUSH1 0x0
0x48b DUP1
0x48c REVERT
---
0x489: V434 = 0x0
0x48c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x48d
[0x48d:0x4ac]
---
Predecessors: [0x482]
Successors: [0x4ad, 0x4b1]
---
0x48d JUMPDEST
0x48e PUSH1 0x1
0x490 PUSH1 0xa0
0x492 PUSH1 0x2
0x494 EXP
0x495 SUB
0x496 DUP6
0x497 AND
0x498 PUSH1 0x0
0x49a SWAP1
0x49b DUP2
0x49c MSTORE
0x49d PUSH1 0x20
0x49f DUP2
0x4a0 SWAP1
0x4a1 MSTORE
0x4a2 PUSH1 0x40
0x4a4 SWAP1
0x4a5 SHA3
0x4a6 SLOAD
0x4a7 ISZERO
0x4a8 ISZERO
0x4a9 PUSH2 0x4b1
0x4ac JUMPI
---
0x48d: JUMPDEST 
0x48e: V435 = 0x1
0x490: V436 = 0xa0
0x492: V437 = 0x2
0x494: V438 = EXP 0x2 0xa0
0x495: V439 = SUB 0x10000000000000000000000000000000000000000 0x1
0x497: V440 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x498: V441 = 0x0
0x49c: M[0x0] = V440
0x49d: V442 = 0x20
0x4a1: M[0x20] = 0x0
0x4a2: V443 = 0x40
0x4a5: V444 = SHA3 0x0 0x40
0x4a6: V445 = S[V444]
0x4a7: V446 = ISZERO V445
0x4a8: V447 = ISZERO V446
0x4a9: V448 = 0x4b1
0x4ac: JUMPI 0x4b1 V447
---
Entry stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x4ad
[0x4ad:0x4b0]
---
Predecessors: [0x48d]
Successors: [0x6f7]
---
0x4ad PUSH2 0x6f7
0x4b0 JUMP
---
0x4ad: V449 = 0x6f7
0x4b0: JUMP 0x6f7
---
Entry stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x4b1
[0x4b1:0x4bd]
---
Predecessors: [0x48d]
Successors: [0x4be, 0x50a]
---
0x4b1 JUMPDEST
0x4b2 PUSH1 0x3
0x4b4 SLOAD
0x4b5 PUSH1 0xff
0x4b7 AND
0x4b8 ISZERO
0x4b9 ISZERO
0x4ba PUSH2 0x50a
0x4bd JUMPI
---
0x4b1: JUMPDEST 
0x4b2: V450 = 0x3
0x4b4: V451 = S[0x3]
0x4b5: V452 = 0xff
0x4b7: V453 = AND 0xff V451
0x4b8: V454 = ISZERO V453
0x4b9: V455 = ISZERO V454
0x4ba: V456 = 0x50a
0x4bd: JUMPI 0x50a V455
---
Entry stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x4be
[0x4be:0x500]
---
Predecessors: [0x4b1]
Successors: [0x501, 0x505]
---
0x4be PUSH1 0x1
0x4c0 PUSH1 0xa0
0x4c2 PUSH1 0x2
0x4c4 EXP
0x4c5 SUB
0x4c6 DUP6
0x4c7 AND
0x4c8 PUSH1 0x0
0x4ca DUP2
0x4cb DUP2
0x4cc MSTORE
0x4cd PUSH1 0x20
0x4cf DUP2
0x4d0 SWAP1
0x4d1 MSTORE
0x4d2 PUSH1 0x40
0x4d4 DUP1
0x4d5 DUP3
0x4d6 SHA3
0x4d7 DUP1
0x4d8 SLOAD
0x4d9 SWAP3
0x4da SWAP1
0x4db SSTORE
0x4dc SWAP1
0x4dd SWAP6
0x4de POP
0x4df DUP6
0x4e0 ISZERO
0x4e1 PUSH2 0x8fc
0x4e4 MUL
0x4e5 SWAP1
0x4e6 DUP7
0x4e7 SWAP1
0x4e8 MLOAD
0x4e9 PUSH1 0x0
0x4eb PUSH1 0x40
0x4ed MLOAD
0x4ee DUP1
0x4ef DUP4
0x4f0 SUB
0x4f1 DUP2
0x4f2 DUP6
0x4f3 DUP9
0x4f4 DUP9
0x4f5 CALL
0x4f6 SWAP4
0x4f7 POP
0x4f8 POP
0x4f9 POP
0x4fa POP
0x4fb ISZERO
0x4fc ISZERO
0x4fd PUSH2 0x505
0x500 JUMPI
---
0x4be: V457 = 0x1
0x4c0: V458 = 0xa0
0x4c2: V459 = 0x2
0x4c4: V460 = EXP 0x2 0xa0
0x4c5: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c7: V462 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x4c8: V463 = 0x0
0x4cc: M[0x0] = V462
0x4cd: V464 = 0x20
0x4d1: M[0x20] = 0x0
0x4d2: V465 = 0x40
0x4d6: V466 = SHA3 0x0 0x40
0x4d8: V467 = S[V466]
0x4db: S[V466] = 0x0
0x4e0: V468 = ISZERO V467
0x4e1: V469 = 0x8fc
0x4e4: V470 = MUL 0x8fc V468
0x4e8: V471 = M[0x40]
0x4e9: V472 = 0x0
0x4eb: V473 = 0x40
0x4ed: V474 = M[0x40]
0x4f0: V475 = SUB V471 V474
0x4f5: V476 = CALL V470 V462 V467 V474 V475 V474 0x0
0x4fb: V477 = ISZERO V476
0x4fc: V478 = ISZERO V477
0x4fd: V479 = 0x505
0x500: JUMPI 0x505 V478
---
Entry stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, V467, S2, S1, S0]
Exit stack: [V12, 0x117, V151, V467, 0x0, 0x0, 0x0]

================================

Block 0x501
[0x501:0x504]
---
Predecessors: [0x4be]
Successors: []
---
0x501 PUSH1 0x0
0x503 DUP1
0x504 REVERT
---
0x501: V480 = 0x0
0x504: REVERT 0x0 0x0
---
Entry stack: [V12, 0x117, V151, V467, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, V467, 0x0, 0x0, 0x0]

================================

Block 0x505
[0x505:0x509]
---
Predecessors: [0x4be]
Successors: [0x6f7]
---
0x505 JUMPDEST
0x506 PUSH2 0x6f7
0x509 JUMP
---
0x505: JUMPDEST 
0x506: V481 = 0x6f7
0x509: JUMP 0x6f7
---
Entry stack: [V12, 0x117, V151, V467, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, V467, 0x0, 0x0, 0x0]

================================

Block 0x50a
[0x50a:0x55e]
---
Predecessors: [0x4b1]
Successors: [0x55f, 0x563]
---
0x50a JUMPDEST
0x50b PUSH1 0xb
0x50d SLOAD
0x50e PUSH1 0x1
0x510 PUSH1 0xa0
0x512 PUSH1 0x2
0x514 EXP
0x515 SUB
0x516 AND
0x517 PUSH4 0x70a08231
0x51c ADDRESS
0x51d PUSH1 0x0
0x51f PUSH1 0x40
0x521 MLOAD
0x522 PUSH1 0x20
0x524 ADD
0x525 MSTORE
0x526 PUSH1 0x40
0x528 MLOAD
0x529 PUSH1 0xe0
0x52b PUSH1 0x2
0x52d EXP
0x52e PUSH4 0xffffffff
0x533 DUP5
0x534 AND
0x535 MUL
0x536 DUP2
0x537 MSTORE
0x538 PUSH1 0x1
0x53a PUSH1 0xa0
0x53c PUSH1 0x2
0x53e EXP
0x53f SUB
0x540 SWAP1
0x541 SWAP2
0x542 AND
0x543 PUSH1 0x4
0x545 DUP3
0x546 ADD
0x547 MSTORE
0x548 PUSH1 0x24
0x54a ADD
0x54b PUSH1 0x20
0x54d PUSH1 0x40
0x54f MLOAD
0x550 DUP1
0x551 DUP4
0x552 SUB
0x553 DUP2
0x554 PUSH1 0x0
0x556 DUP8
0x557 DUP1
0x558 EXTCODESIZE
0x559 ISZERO
0x55a ISZERO
0x55b PUSH2 0x563
0x55e JUMPI
---
0x50a: JUMPDEST 
0x50b: V482 = 0xb
0x50d: V483 = S[0xb]
0x50e: V484 = 0x1
0x510: V485 = 0xa0
0x512: V486 = 0x2
0x514: V487 = EXP 0x2 0xa0
0x515: V488 = SUB 0x10000000000000000000000000000000000000000 0x1
0x516: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x517: V490 = 0x70a08231
0x51c: V491 = ADDRESS
0x51d: V492 = 0x0
0x51f: V493 = 0x40
0x521: V494 = M[0x40]
0x522: V495 = 0x20
0x524: V496 = ADD 0x20 V494
0x525: M[V496] = 0x0
0x526: V497 = 0x40
0x528: V498 = M[0x40]
0x529: V499 = 0xe0
0x52b: V500 = 0x2
0x52d: V501 = EXP 0x2 0xe0
0x52e: V502 = 0xffffffff
0x534: V503 = AND 0x70a08231 0xffffffff
0x535: V504 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x537: M[V498] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x538: V505 = 0x1
0x53a: V506 = 0xa0
0x53c: V507 = 0x2
0x53e: V508 = EXP 0x2 0xa0
0x53f: V509 = SUB 0x10000000000000000000000000000000000000000 0x1
0x542: V510 = AND V491 0xffffffffffffffffffffffffffffffffffffffff
0x543: V511 = 0x4
0x546: V512 = ADD V498 0x4
0x547: M[V512] = V510
0x548: V513 = 0x24
0x54a: V514 = ADD 0x24 V498
0x54b: V515 = 0x20
0x54d: V516 = 0x40
0x54f: V517 = M[0x40]
0x552: V518 = SUB V514 V517
0x554: V519 = 0x0
0x558: V520 = EXTCODESIZE V489
0x559: V521 = ISZERO V520
0x55a: V522 = ISZERO V521
0x55b: V523 = 0x563
0x55e: JUMPI 0x563 V522
---
Entry stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V489, 0x70a08231, V514, 0x20, V517, V518, V517, 0x0, V489]
Exit stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0, V489, 0x70a08231, V514, 0x20, V517, V518, V517, 0x0, V489]

================================

Block 0x55f
[0x55f:0x562]
---
Predecessors: [0x50a]
Successors: []
---
0x55f PUSH1 0x0
0x561 DUP1
0x562 REVERT
---
0x55f: V524 = 0x0
0x562: REVERT 0x0 0x0
---
Entry stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0, V489, 0x70a08231, V514, 0x20, V517, V518, V517, 0x0, V489]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0, V489, 0x70a08231, V514, 0x20, V517, V518, V517, 0x0, V489]

================================

Block 0x563
[0x563:0x56f]
---
Predecessors: [0x50a]
Successors: [0x570, 0x574]
---
0x563 JUMPDEST
0x564 PUSH2 0x2c6
0x567 GAS
0x568 SUB
0x569 CALL
0x56a ISZERO
0x56b ISZERO
0x56c PUSH2 0x574
0x56f JUMPI
---
0x563: JUMPDEST 
0x564: V525 = 0x2c6
0x567: V526 = GAS
0x568: V527 = SUB V526 0x2c6
0x569: V528 = CALL V527 V489 0x0 V517 V518 V517 0x20
0x56a: V529 = ISZERO V528
0x56b: V530 = ISZERO V529
0x56c: V531 = 0x574
0x56f: JUMPI 0x574 V530
---
Entry stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0, V489, 0x70a08231, V514, 0x20, V517, V518, V517, 0x0, V489]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0, V489, 0x70a08231, V514]

================================

Block 0x570
[0x570:0x573]
---
Predecessors: [0x563]
Successors: []
---
0x570 PUSH1 0x0
0x572 DUP1
0x573 REVERT
---
0x570: V532 = 0x0
0x573: REVERT 0x0 0x0
---
Entry stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0, V489, 0x70a08231, V514]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0, V489, 0x70a08231, V514]

================================

Block 0x574
[0x574:0x586]
---
Predecessors: [0x563]
Successors: [0x587, 0x58b]
---
0x574 JUMPDEST
0x575 POP
0x576 POP
0x577 POP
0x578 PUSH1 0x40
0x57a MLOAD
0x57b DUP1
0x57c MLOAD
0x57d SWAP4
0x57e POP
0x57f POP
0x580 DUP3
0x581 ISZERO
0x582 ISZERO
0x583 PUSH2 0x58b
0x586 JUMPI
---
0x574: JUMPDEST 
0x578: V533 = 0x40
0x57a: V534 = M[0x40]
0x57c: V535 = M[V534]
0x581: V536 = ISZERO V535
0x582: V537 = ISZERO V536
0x583: V538 = 0x58b
0x586: JUMPI 0x58b V537
---
Entry stack: [V12, 0x117, V151, 0x0, 0x0, 0x0, 0x0, V489, 0x70a08231, V514]
Stack pops: 6
Stack additions: [V535, S4, S3]
Exit stack: [V12, 0x117, V151, 0x0, V535, 0x0, 0x0]

================================

Block 0x587
[0x587:0x58a]
---
Predecessors: [0x574]
Successors: []
---
0x587 PUSH1 0x0
0x589 DUP1
0x58a REVERT
---
0x587: V539 = 0x0
0x58a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x117, V151, 0x0, V535, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, V535, 0x0, 0x0]

================================

Block 0x58b
[0x58b:0x5b0]
---
Predecessors: [0x574]
Successors: [0x5b1, 0x5b2]
---
0x58b JUMPDEST
0x58c PUSH1 0x4
0x58e SLOAD
0x58f PUSH1 0x1
0x591 PUSH1 0xa0
0x593 PUSH1 0x2
0x595 EXP
0x596 SUB
0x597 DUP7
0x598 AND
0x599 PUSH1 0x0
0x59b SWAP1
0x59c DUP2
0x59d MSTORE
0x59e PUSH1 0x20
0x5a0 DUP2
0x5a1 SWAP1
0x5a2 MSTORE
0x5a3 PUSH1 0x40
0x5a5 SWAP1
0x5a6 SHA3
0x5a7 SLOAD
0x5a8 DUP5
0x5a9 MUL
0x5aa DUP2
0x5ab ISZERO
0x5ac ISZERO
0x5ad PUSH2 0x5b2
0x5b0 JUMPI
---
0x58b: JUMPDEST 
0x58c: V540 = 0x4
0x58e: V541 = S[0x4]
0x58f: V542 = 0x1
0x591: V543 = 0xa0
0x593: V544 = 0x2
0x595: V545 = EXP 0x2 0xa0
0x596: V546 = SUB 0x10000000000000000000000000000000000000000 0x1
0x598: V547 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x599: V548 = 0x0
0x59d: M[0x0] = V547
0x59e: V549 = 0x20
0x5a2: M[0x20] = 0x0
0x5a3: V550 = 0x40
0x5a6: V551 = SHA3 0x0 0x40
0x5a7: V552 = S[V551]
0x5a9: V553 = MUL V535 V552
0x5ab: V554 = ISZERO V541
0x5ac: V555 = ISZERO V554
0x5ad: V556 = 0x5b2
0x5b0: JUMPI 0x5b2 V555
---
Entry stack: [V12, 0x117, V151, 0x0, V535, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V541, V553]
Exit stack: [V12, 0x117, V151, 0x0, V535, 0x0, 0x0, V541, V553]

================================

Block 0x5b1
[0x5b1:0x5b1]
---
Predecessors: [0x58b]
Successors: []
---
0x5b1 INVALID
---
0x5b1: INVALID 
---
Entry stack: [V12, 0x117, V151, 0x0, V535, 0x0, 0x0, V541, V553]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, V535, 0x0, 0x0, V541, V553]

================================

Block 0x5b2
[0x5b2:0x5dd]
---
Predecessors: [0x58b]
Successors: [0x5de]
---
0x5b2 JUMPDEST
0x5b3 PUSH1 0x1
0x5b5 PUSH1 0xa0
0x5b7 PUSH1 0x2
0x5b9 EXP
0x5ba SUB
0x5bb DUP8
0x5bc AND
0x5bd PUSH1 0x0
0x5bf SWAP1
0x5c0 DUP2
0x5c1 MSTORE
0x5c2 PUSH1 0x20
0x5c4 DUP2
0x5c5 SWAP1
0x5c6 MSTORE
0x5c7 PUSH1 0x40
0x5c9 DUP2
0x5ca SHA3
0x5cb DUP1
0x5cc SLOAD
0x5cd PUSH1 0x4
0x5cf DUP1
0x5d0 SLOAD
0x5d1 SWAP2
0x5d2 SWAP1
0x5d3 SWAP2
0x5d4 SUB
0x5d5 SWAP1
0x5d6 SSTORE
0x5d7 SSTORE
0x5d8 DIV
0x5d9 SWAP2
0x5da POP
0x5db PUSH1 0xc8
0x5dd DUP3
---
0x5b2: JUMPDEST 
0x5b3: V557 = 0x1
0x5b5: V558 = 0xa0
0x5b7: V559 = 0x2
0x5b9: V560 = EXP 0x2 0xa0
0x5ba: V561 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bc: V562 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x5bd: V563 = 0x0
0x5c1: M[0x0] = V562
0x5c2: V564 = 0x20
0x5c6: M[0x20] = 0x0
0x5c7: V565 = 0x40
0x5ca: V566 = SHA3 0x0 0x40
0x5cc: V567 = S[V566]
0x5cd: V568 = 0x4
0x5d0: V569 = S[0x4]
0x5d4: V570 = SUB V569 V567
0x5d6: S[0x4] = V570
0x5d7: S[V566] = 0x0
0x5d8: V571 = DIV V553 V541
0x5db: V572 = 0xc8
---
Entry stack: [V12, 0x117, V151, 0x0, V535, 0x0, 0x0, V541, V553]
Stack pops: 7
Stack additions: [S6, S5, S4, V571, S2, 0xc8, V571]
Exit stack: [V12, 0x117, V151, 0x0, V535, V571, 0x0, 0xc8, V571]

================================

Block 0x5de
[0x5de:0x645]
---
Predecessors: [0x5b2]
Successors: [0x646, 0x64a]
---
0x5de JUMPDEST
0x5df PUSH1 0xb
0x5e1 SLOAD
0x5e2 PUSH1 0x9
0x5e4 SLOAD
0x5e5 SWAP3
0x5e6 SWAP1
0x5e7 SWAP2
0x5e8 DIV
0x5e9 SWAP3
0x5ea POP
0x5eb PUSH1 0x1
0x5ed PUSH1 0xa0
0x5ef PUSH1 0x2
0x5f1 EXP
0x5f2 SUB
0x5f3 SWAP1
0x5f4 DUP2
0x5f5 AND
0x5f6 SWAP2
0x5f7 PUSH4 0xa9059cbb
0x5fc SWAP2
0x5fd AND
0x5fe DUP4
0x5ff PUSH1 0x0
0x601 PUSH1 0x40
0x603 MLOAD
0x604 PUSH1 0x20
0x606 ADD
0x607 MSTORE
0x608 PUSH1 0x40
0x60a MLOAD
0x60b PUSH1 0xe0
0x60d PUSH1 0x2
0x60f EXP
0x610 PUSH4 0xffffffff
0x615 DUP6
0x616 AND
0x617 MUL
0x618 DUP2
0x619 MSTORE
0x61a PUSH1 0x1
0x61c PUSH1 0xa0
0x61e PUSH1 0x2
0x620 EXP
0x621 SUB
0x622 SWAP1
0x623 SWAP3
0x624 AND
0x625 PUSH1 0x4
0x627 DUP4
0x628 ADD
0x629 MSTORE
0x62a PUSH1 0x24
0x62c DUP3
0x62d ADD
0x62e MSTORE
0x62f PUSH1 0x44
0x631 ADD
0x632 PUSH1 0x20
0x634 PUSH1 0x40
0x636 MLOAD
0x637 DUP1
0x638 DUP4
0x639 SUB
0x63a DUP2
0x63b PUSH1 0x0
0x63d DUP8
0x63e DUP1
0x63f EXTCODESIZE
0x640 ISZERO
0x641 ISZERO
0x642 PUSH2 0x64a
0x645 JUMPI
---
0x5de: JUMPDEST 
0x5df: V573 = 0xb
0x5e1: V574 = S[0xb]
0x5e2: V575 = 0x9
0x5e4: V576 = S[0x9]
0x5e8: V577 = DIV V571 0xc8
0x5eb: V578 = 0x1
0x5ed: V579 = 0xa0
0x5ef: V580 = 0x2
0x5f1: V581 = EXP 0x2 0xa0
0x5f2: V582 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f5: V583 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0x5f7: V584 = 0xa9059cbb
0x5fd: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V576
0x5ff: V586 = 0x0
0x601: V587 = 0x40
0x603: V588 = M[0x40]
0x604: V589 = 0x20
0x606: V590 = ADD 0x20 V588
0x607: M[V590] = 0x0
0x608: V591 = 0x40
0x60a: V592 = M[0x40]
0x60b: V593 = 0xe0
0x60d: V594 = 0x2
0x60f: V595 = EXP 0x2 0xe0
0x610: V596 = 0xffffffff
0x616: V597 = AND 0xa9059cbb 0xffffffff
0x617: V598 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x619: M[V592] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x61a: V599 = 0x1
0x61c: V600 = 0xa0
0x61e: V601 = 0x2
0x620: V602 = EXP 0x2 0xa0
0x621: V603 = SUB 0x10000000000000000000000000000000000000000 0x1
0x624: V604 = AND V585 0xffffffffffffffffffffffffffffffffffffffff
0x625: V605 = 0x4
0x628: V606 = ADD V592 0x4
0x629: M[V606] = V604
0x62a: V607 = 0x24
0x62d: V608 = ADD V592 0x24
0x62e: M[V608] = V577
0x62f: V609 = 0x44
0x631: V610 = ADD 0x44 V592
0x632: V611 = 0x20
0x634: V612 = 0x40
0x636: V613 = M[0x40]
0x639: V614 = SUB V610 V613
0x63b: V615 = 0x0
0x63f: V616 = EXTCODESIZE V583
0x640: V617 = ISZERO V616
0x641: V618 = ISZERO V617
0x642: V619 = 0x64a
0x645: JUMPI 0x64a V618
---
Entry stack: [V12, 0x117, V151, 0x0, V535, V571, 0x0, 0xc8, V571]
Stack pops: 3
Stack additions: [V577, V583, 0xa9059cbb, V610, 0x20, V613, V614, V613, 0x0, V583]
Exit stack: [V12, 0x117, V151, 0x0, V535, V571, V577, V583, 0xa9059cbb, V610, 0x20, V613, V614, V613, 0x0, V583]

================================

Block 0x646
[0x646:0x649]
---
Predecessors: [0x5de]
Successors: []
---
0x646 PUSH1 0x0
0x648 DUP1
0x649 REVERT
---
0x646: V620 = 0x0
0x649: REVERT 0x0 0x0
---
Entry stack: [V12, 0x117, V151, 0x0, V535, V571, V577, V583, 0xa9059cbb, V610, 0x20, V613, V614, V613, 0x0, V583]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, V535, V571, V577, V583, 0xa9059cbb, V610, 0x20, V613, V614, V613, 0x0, V583]

================================

Block 0x64a
[0x64a:0x656]
---
Predecessors: [0x5de]
Successors: [0x657, 0x65b]
---
0x64a JUMPDEST
0x64b PUSH2 0x2c6
0x64e GAS
0x64f SUB
0x650 CALL
0x651 ISZERO
0x652 ISZERO
0x653 PUSH2 0x65b
0x656 JUMPI
---
0x64a: JUMPDEST 
0x64b: V621 = 0x2c6
0x64e: V622 = GAS
0x64f: V623 = SUB V622 0x2c6
0x650: V624 = CALL V623 V583 0x0 V613 V614 V613 0x20
0x651: V625 = ISZERO V624
0x652: V626 = ISZERO V625
0x653: V627 = 0x65b
0x656: JUMPI 0x65b V626
---
Entry stack: [V12, 0x117, V151, 0x0, V535, V571, V577, V583, 0xa9059cbb, V610, 0x20, V613, V614, V613, 0x0, V583]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, V535, V571, V577, V583, 0xa9059cbb, V610]

================================

Block 0x657
[0x657:0x65a]
---
Predecessors: [0x64a]
Successors: []
---
0x657 PUSH1 0x0
0x659 DUP1
0x65a REVERT
---
0x657: V628 = 0x0
0x65a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x117, V151, 0x0, V535, V571, V577, V583, 0xa9059cbb, V610]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, V535, V571, V577, V583, 0xa9059cbb, V610]

================================

Block 0x65b
[0x65b:0x66b]
---
Predecessors: [0x64a]
Successors: [0x66c, 0x670]
---
0x65b JUMPDEST
0x65c POP
0x65d POP
0x65e POP
0x65f PUSH1 0x40
0x661 MLOAD
0x662 DUP1
0x663 MLOAD
0x664 SWAP1
0x665 POP
0x666 ISZERO
0x667 ISZERO
0x668 PUSH2 0x670
0x66b JUMPI
---
0x65b: JUMPDEST 
0x65f: V629 = 0x40
0x661: V630 = M[0x40]
0x663: V631 = M[V630]
0x666: V632 = ISZERO V631
0x667: V633 = ISZERO V632
0x668: V634 = 0x670
0x66b: JUMPI 0x670 V633
---
Entry stack: [V12, 0x117, V151, 0x0, V535, V571, V577, V583, 0xa9059cbb, V610]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, V535, V571, V577]

================================

Block 0x66c
[0x66c:0x66f]
---
Predecessors: [0x65b]
Successors: []
---
0x66c PUSH1 0x0
0x66e DUP1
0x66f REVERT
---
0x66c: V635 = 0x0
0x66f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x117, V151, 0x0, V535, V571, V577]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, V535, V571, V577]

================================

Block 0x670
[0x670:0x6cc]
---
Predecessors: [0x65b]
Successors: [0x6cd, 0x6d1]
---
0x670 JUMPDEST
0x671 PUSH1 0xb
0x673 SLOAD
0x674 PUSH1 0x1
0x676 PUSH1 0xa0
0x678 PUSH1 0x2
0x67a EXP
0x67b SUB
0x67c AND
0x67d PUSH4 0xa9059cbb
0x682 DUP7
0x683 DUP4
0x684 DUP6
0x685 SUB
0x686 PUSH1 0x0
0x688 PUSH1 0x40
0x68a MLOAD
0x68b PUSH1 0x20
0x68d ADD
0x68e MSTORE
0x68f PUSH1 0x40
0x691 MLOAD
0x692 PUSH1 0xe0
0x694 PUSH1 0x2
0x696 EXP
0x697 PUSH4 0xffffffff
0x69c DUP6
0x69d AND
0x69e MUL
0x69f DUP2
0x6a0 MSTORE
0x6a1 PUSH1 0x1
0x6a3 PUSH1 0xa0
0x6a5 PUSH1 0x2
0x6a7 EXP
0x6a8 SUB
0x6a9 SWAP1
0x6aa SWAP3
0x6ab AND
0x6ac PUSH1 0x4
0x6ae DUP4
0x6af ADD
0x6b0 MSTORE
0x6b1 PUSH1 0x24
0x6b3 DUP3
0x6b4 ADD
0x6b5 MSTORE
0x6b6 PUSH1 0x44
0x6b8 ADD
0x6b9 PUSH1 0x20
0x6bb PUSH1 0x40
0x6bd MLOAD
0x6be DUP1
0x6bf DUP4
0x6c0 SUB
0x6c1 DUP2
0x6c2 PUSH1 0x0
0x6c4 DUP8
0x6c5 DUP1
0x6c6 EXTCODESIZE
0x6c7 ISZERO
0x6c8 ISZERO
0x6c9 PUSH2 0x6d1
0x6cc JUMPI
---
0x670: JUMPDEST 
0x671: V636 = 0xb
0x673: V637 = S[0xb]
0x674: V638 = 0x1
0x676: V639 = 0xa0
0x678: V640 = 0x2
0x67a: V641 = EXP 0x2 0xa0
0x67b: V642 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67c: V643 = AND 0xffffffffffffffffffffffffffffffffffffffff V637
0x67d: V644 = 0xa9059cbb
0x685: V645 = SUB V571 V577
0x686: V646 = 0x0
0x688: V647 = 0x40
0x68a: V648 = M[0x40]
0x68b: V649 = 0x20
0x68d: V650 = ADD 0x20 V648
0x68e: M[V650] = 0x0
0x68f: V651 = 0x40
0x691: V652 = M[0x40]
0x692: V653 = 0xe0
0x694: V654 = 0x2
0x696: V655 = EXP 0x2 0xe0
0x697: V656 = 0xffffffff
0x69d: V657 = AND 0xa9059cbb 0xffffffff
0x69e: V658 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x6a0: M[V652] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6a1: V659 = 0x1
0x6a3: V660 = 0xa0
0x6a5: V661 = 0x2
0x6a7: V662 = EXP 0x2 0xa0
0x6a8: V663 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ab: V664 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x6ac: V665 = 0x4
0x6af: V666 = ADD V652 0x4
0x6b0: M[V666] = V664
0x6b1: V667 = 0x24
0x6b4: V668 = ADD V652 0x24
0x6b5: M[V668] = V645
0x6b6: V669 = 0x44
0x6b8: V670 = ADD 0x44 V652
0x6b9: V671 = 0x20
0x6bb: V672 = 0x40
0x6bd: V673 = M[0x40]
0x6c0: V674 = SUB V670 V673
0x6c2: V675 = 0x0
0x6c6: V676 = EXTCODESIZE V643
0x6c7: V677 = ISZERO V676
0x6c8: V678 = ISZERO V677
0x6c9: V679 = 0x6d1
0x6cc: JUMPI 0x6d1 V678
---
Entry stack: [V12, 0x117, V151, 0x0, V535, V571, V577]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V643, 0xa9059cbb, V670, 0x20, V673, V674, V673, 0x0, V643]
Exit stack: [V12, 0x117, V151, 0x0, V535, V571, V577, V643, 0xa9059cbb, V670, 0x20, V673, V674, V673, 0x0, V643]

================================

Block 0x6cd
[0x6cd:0x6d0]
---
Predecessors: [0x670]
Successors: []
---
0x6cd PUSH1 0x0
0x6cf DUP1
0x6d0 REVERT
---
0x6cd: V680 = 0x0
0x6d0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x117, V151, 0x0, V535, V571, V577, V643, 0xa9059cbb, V670, 0x20, V673, V674, V673, 0x0, V643]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, V535, V571, V577, V643, 0xa9059cbb, V670, 0x20, V673, V674, V673, 0x0, V643]

================================

Block 0x6d1
[0x6d1:0x6dd]
---
Predecessors: [0x670]
Successors: [0x6de, 0x6e2]
---
0x6d1 JUMPDEST
0x6d2 PUSH2 0x2c6
0x6d5 GAS
0x6d6 SUB
0x6d7 CALL
0x6d8 ISZERO
0x6d9 ISZERO
0x6da PUSH2 0x6e2
0x6dd JUMPI
---
0x6d1: JUMPDEST 
0x6d2: V681 = 0x2c6
0x6d5: V682 = GAS
0x6d6: V683 = SUB V682 0x2c6
0x6d7: V684 = CALL V683 V643 0x0 V673 V674 V673 0x20
0x6d8: V685 = ISZERO V684
0x6d9: V686 = ISZERO V685
0x6da: V687 = 0x6e2
0x6dd: JUMPI 0x6e2 V686
---
Entry stack: [V12, 0x117, V151, 0x0, V535, V571, V577, V643, 0xa9059cbb, V670, 0x20, V673, V674, V673, 0x0, V643]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, V535, V571, V577, V643, 0xa9059cbb, V670]

================================

Block 0x6de
[0x6de:0x6e1]
---
Predecessors: [0x6d1]
Successors: []
---
0x6de PUSH1 0x0
0x6e0 DUP1
0x6e1 REVERT
---
0x6de: V688 = 0x0
0x6e1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x117, V151, 0x0, V535, V571, V577, V643, 0xa9059cbb, V670]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, V535, V571, V577, V643, 0xa9059cbb, V670]

================================

Block 0x6e2
[0x6e2:0x6f2]
---
Predecessors: [0x6d1]
Successors: [0x6f3, 0x6f7]
---
0x6e2 JUMPDEST
0x6e3 POP
0x6e4 POP
0x6e5 POP
0x6e6 PUSH1 0x40
0x6e8 MLOAD
0x6e9 DUP1
0x6ea MLOAD
0x6eb SWAP1
0x6ec POP
0x6ed ISZERO
0x6ee ISZERO
0x6ef PUSH2 0x6f7
0x6f2 JUMPI
---
0x6e2: JUMPDEST 
0x6e6: V689 = 0x40
0x6e8: V690 = M[0x40]
0x6ea: V691 = M[V690]
0x6ed: V692 = ISZERO V691
0x6ee: V693 = ISZERO V692
0x6ef: V694 = 0x6f7
0x6f2: JUMPI 0x6f7 V693
---
Entry stack: [V12, 0x117, V151, 0x0, V535, V571, V577, V643, 0xa9059cbb, V670]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, V535, V571, V577]

================================

Block 0x6f3
[0x6f3:0x6f6]
---
Predecessors: [0x6e2]
Successors: []
---
0x6f3 PUSH1 0x0
0x6f5 DUP1
0x6f6 REVERT
---
0x6f3: V695 = 0x0
0x6f6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x117, V151, 0x0, V535, V571, V577]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, 0x0, V535, V571, V577]

================================

Block 0x6f7
[0x6f7:0x6f7]
---
Predecessors: [0x4ad, 0x505, 0x6e2]
Successors: [0x6f8]
---
0x6f7 JUMPDEST
---
0x6f7: JUMPDEST 
---
Entry stack: [V12, 0x117, V151, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, S3, S2, S1, S0]

================================

Block 0x6f8
[0x6f8:0x6f8]
---
Predecessors: [0x6f7]
Successors: [0x6f9]
---
0x6f8 JUMPDEST
---
0x6f8: JUMPDEST 
---
Entry stack: [V12, 0x117, V151, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V151, S3, S2, S1, S0]

================================

Block 0x6f9
[0x6f9:0x6ff]
---
Predecessors: [0x6f8]
Successors: [0x117]
---
0x6f9 JUMPDEST
0x6fa POP
0x6fb POP
0x6fc POP
0x6fd POP
0x6fe POP
0x6ff JUMP
---
0x6f9: JUMPDEST 
0x6ff: JUMP 0x117
---
Entry stack: [V12, 0x117, V151, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12]

================================

Block 0x700
[0x700:0x708]
---
Predecessors: [0x1b0]
Successors: [0x1b8]
---
0x700 JUMPDEST
0x701 PUSH1 0x3
0x703 SLOAD
0x704 PUSH1 0xff
0x706 AND
0x707 DUP2
0x708 JUMP
---
0x700: JUMPDEST 
0x701: V696 = 0x3
0x703: V697 = S[0x3]
0x704: V698 = 0xff
0x706: V699 = AND 0xff V697
0x708: JUMP 0x1b8
---
Entry stack: [V12, 0x1b8]
Stack pops: 1
Stack additions: [S0, V699]
Exit stack: [V12, 0x1b8, V699]

================================

Block 0x709
[0x709:0x717]
---
Predecessors: [0x1d7]
Successors: [0x1df]
---
0x709 JUMPDEST
0x70a PUSH1 0xa
0x70c SLOAD
0x70d PUSH1 0x1
0x70f PUSH1 0xa0
0x711 PUSH1 0x2
0x713 EXP
0x714 SUB
0x715 AND
0x716 DUP2
0x717 JUMP
---
0x709: JUMPDEST 
0x70a: V700 = 0xa
0x70c: V701 = S[0xa]
0x70d: V702 = 0x1
0x70f: V703 = 0xa0
0x711: V704 = 0x2
0x713: V705 = EXP 0x2 0xa0
0x714: V706 = SUB 0x10000000000000000000000000000000000000000 0x1
0x715: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff V701
0x717: JUMP 0x1df
---
Entry stack: [V12, 0x1df]
Stack pops: 1
Stack additions: [S0, V707]
Exit stack: [V12, 0x1df, V707]

================================

Block 0x718
[0x718:0x72e]
---
Predecessors: [0x1fb]
Successors: [0x72f, 0x733]
---
0x718 JUMPDEST
0x719 PUSH1 0x9
0x71b SLOAD
0x71c CALLER
0x71d PUSH1 0x1
0x71f PUSH1 0xa0
0x721 PUSH1 0x2
0x723 EXP
0x724 SUB
0x725 SWAP1
0x726 DUP2
0x727 AND
0x728 SWAP2
0x729 AND
0x72a EQ
0x72b PUSH2 0x733
0x72e JUMPI
---
0x718: JUMPDEST 
0x719: V708 = 0x9
0x71b: V709 = S[0x9]
0x71c: V710 = CALLER
0x71d: V711 = 0x1
0x71f: V712 = 0xa0
0x721: V713 = 0x2
0x723: V714 = EXP 0x2 0xa0
0x724: V715 = SUB 0x10000000000000000000000000000000000000000 0x1
0x727: V716 = AND 0xffffffffffffffffffffffffffffffffffffffff V710
0x729: V717 = AND V709 0xffffffffffffffffffffffffffffffffffffffff
0x72a: V718 = EQ V717 V716
0x72b: V719 = 0x733
0x72e: JUMPI 0x733 V718
---
Entry stack: [V12, 0x117]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117]

================================

Block 0x72f
[0x72f:0x732]
---
Predecessors: [0x718]
Successors: []
---
0x72f PUSH1 0x0
0x731 DUP1
0x732 REVERT
---
0x72f: V720 = 0x0
0x732: REVERT 0x0 0x0
---
Entry stack: [V12, 0x117]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117]

================================

Block 0x733
[0x733:0x73b]
---
Predecessors: [0x718]
Successors: [0x73c]
---
0x733 JUMPDEST
0x734 PUSH1 0x1
0x736 DUP1
0x737 SLOAD
0x738 CALLVALUE
0x739 ADD
0x73a SWAP1
0x73b SSTORE
---
0x733: JUMPDEST 
0x734: V721 = 0x1
0x737: V722 = S[0x1]
0x738: V723 = CALLVALUE
0x739: V724 = ADD V723 V722
0x73b: S[0x1] = V724
---
Entry stack: [V12, 0x117]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117]

================================

Block 0x73c
[0x73c:0x73d]
---
Predecessors: [0x733]
Successors: [0x117]
---
0x73c JUMPDEST
0x73d JUMP
---
0x73c: JUMPDEST 
0x73d: JUMP 0x117
---
Entry stack: [V12, 0x117]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x73e
[0x73e:0x746]
---
Predecessors: [0x210]
Successors: [0x1b8]
---
0x73e JUMPDEST
0x73f PUSH1 0x5
0x741 SLOAD
0x742 PUSH1 0xff
0x744 AND
0x745 DUP2
0x746 JUMP
---
0x73e: JUMPDEST 
0x73f: V725 = 0x5
0x741: V726 = S[0x5]
0x742: V727 = 0xff
0x744: V728 = AND 0xff V726
0x746: JUMP 0x1b8
---
Entry stack: [V12, 0x1b8]
Stack pops: 1
Stack additions: [S0, V728]
Exit stack: [V12, 0x1b8, V728]

================================

Block 0x747
[0x747:0x74c]
---
Predecessors: [0x237]
Successors: [0x141]
---
0x747 JUMPDEST
0x748 PUSH1 0x2
0x74a SLOAD
0x74b DUP2
0x74c JUMP
---
0x747: JUMPDEST 
0x748: V729 = 0x2
0x74a: V730 = S[0x2]
0x74c: JUMP 0x141
---
Entry stack: [V12, 0x141]
Stack pops: 1
Stack additions: [S0, V730]
Exit stack: [V12, 0x141, V730]

================================

Block 0x74d
[0x74d:0x752]
---
Predecessors: [0x25c]
Successors: [0x141]
---
0x74d JUMPDEST
0x74e PUSH1 0x4
0x750 SLOAD
0x751 DUP2
0x752 JUMP
---
0x74d: JUMPDEST 
0x74e: V731 = 0x4
0x750: V732 = S[0x4]
0x752: JUMP 0x141
---
Entry stack: [V12, 0x141]
Stack pops: 1
Stack additions: [S0, V732]
Exit stack: [V12, 0x141, V732]

================================

Block 0x753
[0x753:0x761]
---
Predecessors: [0x281]
Successors: [0x1df]
---
0x753 JUMPDEST
0x754 PUSH1 0x9
0x756 SLOAD
0x757 PUSH1 0x1
0x759 PUSH1 0xa0
0x75b PUSH1 0x2
0x75d EXP
0x75e SUB
0x75f AND
0x760 DUP2
0x761 JUMP
---
0x753: JUMPDEST 
0x754: V733 = 0x9
0x756: V734 = S[0x9]
0x757: V735 = 0x1
0x759: V736 = 0xa0
0x75b: V737 = 0x2
0x75d: V738 = EXP 0x2 0xa0
0x75e: V739 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75f: V740 = AND 0xffffffffffffffffffffffffffffffffffffffff V734
0x761: JUMP 0x1df
---
Entry stack: [V12, 0x1df]
Stack pops: 1
Stack additions: [S0, V740]
Exit stack: [V12, 0x1df, V740]

================================

Block 0x762
[0x762:0x779]
---
Predecessors: [0x2b0]
Successors: [0x77a, 0x7dd]
---
0x762 JUMPDEST
0x763 PUSH1 0x9
0x765 SLOAD
0x766 CALLER
0x767 PUSH1 0x1
0x769 PUSH1 0xa0
0x76b PUSH1 0x2
0x76d EXP
0x76e SUB
0x76f SWAP1
0x770 DUP2
0x771 AND
0x772 SWAP2
0x773 AND
0x774 EQ
0x775 DUP1
0x776 PUSH2 0x7dd
0x779 JUMPI
---
0x762: JUMPDEST 
0x763: V741 = 0x9
0x765: V742 = S[0x9]
0x766: V743 = CALLER
0x767: V744 = 0x1
0x769: V745 = 0xa0
0x76b: V746 = 0x2
0x76d: V747 = EXP 0x2 0xa0
0x76e: V748 = SUB 0x10000000000000000000000000000000000000000 0x1
0x771: V749 = AND 0xffffffffffffffffffffffffffffffffffffffff V743
0x773: V750 = AND V742 0xffffffffffffffffffffffffffffffffffffffff
0x774: V751 = EQ V750 V749
0x776: V752 = 0x7dd
0x779: JUMPI 0x7dd V751
---
Entry stack: [V12, 0x117, V267]
Stack pops: 0
Stack additions: [V751]
Exit stack: [V12, 0x117, V267, V751]

================================

Block 0x77a
[0x77a:0x78d]
---
Predecessors: [0x762]
Successors: [0x78e]
---
0x77a POP
0x77b PUSH1 0x6
0x77d SLOAD
0x77e DUP2
0x77f PUSH1 0x40
0x781 MLOAD
0x782 DUP1
0x783 DUP3
0x784 DUP1
0x785 MLOAD
0x786 SWAP1
0x787 PUSH1 0x20
0x789 ADD
0x78a SWAP1
0x78b DUP1
0x78c DUP4
0x78d DUP4
---
0x77b: V753 = 0x6
0x77d: V754 = S[0x6]
0x77f: V755 = 0x40
0x781: V756 = M[0x40]
0x785: V757 = M[V267]
0x787: V758 = 0x20
0x789: V759 = ADD 0x20 V267
---
Entry stack: [V12, 0x117, V267, V751]
Stack pops: 2
Stack additions: [S1, V754, S1, V756, V756, V759, V757, V757, V756, V759]
Exit stack: [V12, 0x117, V267, V754, V267, V756, V756, V759, V757, V757, V756, V759]

================================

Block 0x78e
[0x78e:0x796]
---
Predecessors: [0x77a, 0x79b]
Successors: [0x797, 0x7ae]
---
0x78e JUMPDEST
0x78f PUSH1 0x20
0x791 DUP4
0x792 LT
0x793 PUSH2 0x7ae
0x796 JUMPI
---
0x78e: JUMPDEST 
0x78f: V760 = 0x20
0x792: V761 = LT S2 0x20
0x793: V762 = 0x7ae
0x796: JUMPI 0x7ae V761
---
Entry stack: [V12, 0x117, V267, V754, V267, V756, V756, V759, V757, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x117, V267, V754, V267, V756, V756, V759, V757, S2, S1, S0]

================================

Block 0x797
[0x797:0x79a]
---
Predecessors: [0x78e]
Successors: [0x79b]
---
0x797 DUP1
0x798 MLOAD
0x799 DUP3
0x79a MSTORE
---
0x798: V763 = M[S0]
0x79a: M[S1] = V763
---
Entry stack: [V12, 0x117, V267, V754, V267, V756, V756, V759, V757, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x117, V267, V754, V267, V756, V756, V759, V757, S2, S1, S0]

================================

Block 0x79b
[0x79b:0x7ad]
---
Predecessors: [0x797]
Successors: [0x78e]
---
0x79b JUMPDEST
0x79c PUSH1 0x1f
0x79e NOT
0x79f SWAP1
0x7a0 SWAP3
0x7a1 ADD
0x7a2 SWAP2
0x7a3 PUSH1 0x20
0x7a5 SWAP2
0x7a6 DUP3
0x7a7 ADD
0x7a8 SWAP2
0x7a9 ADD
0x7aa PUSH2 0x78e
0x7ad JUMP
---
0x79b: JUMPDEST 
0x79c: V764 = 0x1f
0x79e: V765 = NOT 0x1f
0x7a1: V766 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x7a3: V767 = 0x20
0x7a7: V768 = ADD 0x20 S1
0x7a9: V769 = ADD 0x20 S0
0x7aa: V770 = 0x78e
0x7ad: JUMP 0x78e
---
Entry stack: [V12, 0x117, V267, V754, V267, V756, V756, V759, V757, S2, S1, S0]
Stack pops: 3
Stack additions: [V766, V768, V769]
Exit stack: [V12, 0x117, V267, V754, V267, V756, V756, V759, V757, V766, V768, V769]

================================

Block 0x7ae
[0x7ae:0x7dc]
---
Predecessors: [0x78e]
Successors: [0x7dd]
---
0x7ae JUMPDEST
0x7af PUSH1 0x1
0x7b1 DUP4
0x7b2 PUSH1 0x20
0x7b4 SUB
0x7b5 PUSH2 0x100
0x7b8 EXP
0x7b9 SUB
0x7ba DUP1
0x7bb NOT
0x7bc DUP3
0x7bd MLOAD
0x7be AND
0x7bf DUP2
0x7c0 DUP5
0x7c1 MLOAD
0x7c2 AND
0x7c3 OR
0x7c4 SWAP1
0x7c5 SWAP3
0x7c6 MSTORE
0x7c7 POP
0x7c8 POP
0x7c9 POP
0x7ca SWAP2
0x7cb SWAP1
0x7cc SWAP2
0x7cd ADD
0x7ce SWAP3
0x7cf POP
0x7d0 PUSH1 0x40
0x7d2 SWAP2
0x7d3 POP
0x7d4 POP
0x7d5 MLOAD
0x7d6 SWAP1
0x7d7 DUP2
0x7d8 SWAP1
0x7d9 SUB
0x7da SWAP1
0x7db SHA3
0x7dc EQ
---
0x7ae: JUMPDEST 
0x7af: V771 = 0x1
0x7b2: V772 = 0x20
0x7b4: V773 = SUB 0x20 S2
0x7b5: V774 = 0x100
0x7b8: V775 = EXP 0x100 V773
0x7b9: V776 = SUB V775 0x1
0x7bb: V777 = NOT V776
0x7bd: V778 = M[S0]
0x7be: V779 = AND V778 V777
0x7c1: V780 = M[S1]
0x7c2: V781 = AND V780 V776
0x7c3: V782 = OR V781 V779
0x7c6: M[S1] = V782
0x7cd: V783 = ADD V757 V756
0x7d0: V784 = 0x40
0x7d5: V785 = M[0x40]
0x7d9: V786 = SUB V783 V785
0x7db: V787 = SHA3 V785 V786
0x7dc: V788 = EQ V787 V754
---
Entry stack: [V12, 0x117, V267, V754, V267, V756, V756, V759, V757, S2, S1, S0]
Stack pops: 9
Stack additions: [V788]
Exit stack: [V12, 0x117, V267, V788]

================================

Block 0x7dd
[0x7dd:0x7e3]
---
Predecessors: [0x762, 0x7ae]
Successors: [0x7e4, 0x7e8]
---
0x7dd JUMPDEST
0x7de ISZERO
0x7df ISZERO
0x7e0 PUSH2 0x7e8
0x7e3 JUMPI
---
0x7dd: JUMPDEST 
0x7de: V789 = ISZERO S0
0x7df: V790 = ISZERO V789
0x7e0: V791 = 0x7e8
0x7e3: JUMPI 0x7e8 V790
---
Entry stack: [V12, 0x117, V267, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x117, V267]

================================

Block 0x7e4
[0x7e4:0x7e7]
---
Predecessors: [0x7dd]
Successors: []
---
0x7e4 PUSH1 0x0
0x7e6 DUP1
0x7e7 REVERT
---
0x7e4: V792 = 0x0
0x7e7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x117, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V267]

================================

Block 0x7e8
[0x7e8:0x7f5]
---
Predecessors: [0x7dd]
Successors: [0x7f6]
---
0x7e8 JUMPDEST
0x7e9 PUSH1 0x5
0x7eb DUP1
0x7ec SLOAD
0x7ed PUSH1 0xff
0x7ef NOT
0x7f0 AND
0x7f1 PUSH1 0x1
0x7f3 OR
0x7f4 SWAP1
0x7f5 SSTORE
---
0x7e8: JUMPDEST 
0x7e9: V793 = 0x5
0x7ec: V794 = S[0x5]
0x7ed: V795 = 0xff
0x7ef: V796 = NOT 0xff
0x7f0: V797 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V794
0x7f1: V798 = 0x1
0x7f3: V799 = OR 0x1 V797
0x7f5: S[0x5] = V799
---
Entry stack: [V12, 0x117, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x117, V267]

================================

Block 0x7f6
[0x7f6:0x7f8]
---
Predecessors: [0x7e8]
Successors: [0x117]
---
0x7f6 JUMPDEST
0x7f7 POP
0x7f8 JUMP
---
0x7f6: JUMPDEST 
0x7f8: JUMP 0x117
---
Entry stack: [V12, 0x117, V267]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f9
[0x7f9:0x7fe]
---
Predecessors: [0x303]
Successors: [0x141]
---
0x7f9 JUMPDEST
0x7fa PUSH1 0x8
0x7fc SLOAD
0x7fd DUP2
0x7fe JUMP
---
0x7f9: JUMPDEST 
0x7fa: V800 = 0x8
0x7fc: V801 = S[0x8]
0x7fe: JUMP 0x141
---
Entry stack: [V12, 0x141]
Stack pops: 1
Stack additions: [S0, V801]
Exit stack: [V12, 0x141, V801]

================================

Block 0x7ff
[0x7ff:0x804]
---
Predecessors: [0x328]
Successors: [0x141]
---
0x7ff JUMPDEST
0x800 PUSH1 0x7
0x802 SLOAD
0x803 DUP2
0x804 JUMP
---
0x7ff: JUMPDEST 
0x800: V802 = 0x7
0x802: V803 = S[0x7]
0x804: JUMP 0x141
---
Entry stack: [V12, 0x141]
Stack pops: 1
Stack additions: [S0, V803]
Exit stack: [V12, 0x141, V803]

================================

Block 0x805
[0x805:0x813]
---
Predecessors: [0x34d]
Successors: [0x1df]
---
0x805 JUMPDEST
0x806 PUSH1 0xb
0x808 SLOAD
0x809 PUSH1 0x1
0x80b PUSH1 0xa0
0x80d PUSH1 0x2
0x80f EXP
0x810 SUB
0x811 AND
0x812 DUP2
0x813 JUMP
---
0x805: JUMPDEST 
0x806: V804 = 0xb
0x808: V805 = S[0xb]
0x809: V806 = 0x1
0x80b: V807 = 0xa0
0x80d: V808 = 0x2
0x80f: V809 = EXP 0x2 0xa0
0x810: V810 = SUB 0x10000000000000000000000000000000000000000 0x1
0x811: V811 = AND 0xffffffffffffffffffffffffffffffffffffffff V805
0x813: JUMP 0x1df
---
Entry stack: [V12, 0x1df]
Stack pops: 1
Stack additions: [S0, V811]
Exit stack: [V12, 0x1df, V811]

================================

Block 0x814
[0x814:0x83f]
---
Predecessors: []
Successors: []
---
0x814 STOP
0x815 LOG1
0x816 PUSH6 0x627a7a723058
0x81d SHA3
0x81e MISSING 0xce
0x81f PUSH29 0xf25d0e24d880e67c22a9975dbde65b5deeddd8759ca0fbac14f09c182
0x83d MISSING 0xd9
0x83e STOP
0x83f MISSING 0x29
---
0x814: STOP 
0x815: LOG S0 S1 S2
0x816: V812 = 0x627a7a723058
0x81d: V813 = SHA3 0x627a7a723058 S3
0x81e: MISSING 0xce
0x81f: V814 = 0xf25d0e24d880e67c22a9975dbde65b5deeddd8759ca0fbac14f09c182
0x83d: MISSING 0xd9
0x83e: STOP 
0x83f: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V813, 0xf25d0e24d880e67c22a9975dbde65b5deeddd8759ca0fbac14f09c182]
Exit stack: []

================================

Function 0:
Public function signature: 0x2f58015
Entry block: 0x119
Exit block: 0x443
Body: 0x117, 0x119, 0x120, 0x124, 0x371, 0x380, 0x384, 0x38f, 0x393, 0x39f, 0x3a3, 0x3b6, 0x3ba, 0x412, 0x416, 0x443, 0x447, 0x448

Function 1:
Public function signature: 0x15248362
Entry block: 0x12e
Exit block: 0x141
Body: 0x12e, 0x135, 0x139, 0x141, 0x44b

Function 2:
Public function signature: 0x27e235e3
Entry block: 0x153
Exit block: 0x141
Body: 0x141, 0x153, 0x15a, 0x15e, 0x451

Function 3:
Public function signature: 0x51cff8d9
Entry block: 0x184
Exit block: 0x6f3
Body: 0x117, 0x184, 0x18b, 0x18f, 0x463, 0x478, 0x482, 0x489, 0x48d, 0x4ad, 0x4b1, 0x4be, 0x501, 0x505, 0x50a, 0x55f, 0x563, 0x570, 0x574, 0x587, 0x58b, 0x5b1, 0x5b2, 0x5de, 0x646, 0x64a, 0x657, 0x65b, 0x66c, 0x670, 0x6cd, 0x6d1, 0x6de, 0x6e2, 0x6f3, 0x6f7, 0x6f8, 0x6f9

Function 4:
Public function signature: 0x6360fc3f
Entry block: 0x1a5
Exit block: 0x1b8
Body: 0x1a5, 0x1ac, 0x1b0, 0x1b8, 0x700

Function 5:
Public function signature: 0x6ad1fe02
Entry block: 0x1cc
Exit block: 0x1df
Body: 0x1cc, 0x1d3, 0x1d7, 0x1df, 0x709

Function 6:
Public function signature: 0x88a89dd0
Entry block: 0x1fb
Exit block: 0x117
Body: 0x117, 0x1fb, 0x718, 0x72f, 0x733, 0x73c

Function 7:
Public function signature: 0xa089feea
Entry block: 0x205
Exit block: 0x1b8
Body: 0x1b8, 0x205, 0x20c, 0x210, 0x73e

Function 8:
Public function signature: 0xa9726c1e
Entry block: 0x22c
Exit block: 0x141
Body: 0x141, 0x22c, 0x233, 0x237, 0x747

Function 9:
Public function signature: 0xc42bb1e4
Entry block: 0x251
Exit block: 0x141
Body: 0x141, 0x251, 0x258, 0x25c, 0x74d

Function 10:
Public function signature: 0xca4b208b
Entry block: 0x276
Exit block: 0x1df
Body: 0x1df, 0x276, 0x27d, 0x281, 0x753

Function 11:
Public function signature: 0xd4701c35
Entry block: 0x2a5
Exit block: 0x117
Body: 0x117, 0x2a5, 0x2ac, 0x2b0, 0x762, 0x77a, 0x78e, 0x797, 0x79b, 0x7ae, 0x7dd, 0x7e4, 0x7e8, 0x7f6

Function 12:
Public function signature: 0xdbfeb17f
Entry block: 0x2f8
Exit block: 0x141
Body: 0x141, 0x2f8, 0x2ff, 0x303, 0x7f9

Function 13:
Public function signature: 0xf79dcf8d
Entry block: 0x31d
Exit block: 0x141
Body: 0x141, 0x31d, 0x324, 0x328, 0x7ff

Function 14:
Public function signature: 0xfc0c546a
Entry block: 0x342
Exit block: 0x1df
Body: 0x1df, 0x342, 0x349, 0x34d, 0x805

Function 15:
Public fallback function
Entry block: 0xbf
Exit block: 0x117
Body: 0xbf, 0xc0, 0xcc, 0xd0, 0xdc, 0xe0, 0xf4, 0xf8, 0x117

