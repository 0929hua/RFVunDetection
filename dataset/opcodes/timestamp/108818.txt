args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/9/108818.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xc5]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xc5
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xc5
0xc: JUMPI 0xc5 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x3a3]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1cb3b20
0x3c EQ
0x3d PUSH2 0x3a3
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1cb3b20
0x3c: V13 = EQ 0x1cb3b20 V11
0x3d: V14 = 0x3a3
0x40: JUMPI 0x3a3 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x3b8]
---
0x41 DUP1
0x42 PUSH4 0x12aef8c3
0x47 EQ
0x48 PUSH2 0x3b8
0x4b JUMPI
---
0x42: V15 = 0x12aef8c3
0x47: V16 = EQ 0x12aef8c3 V11
0x48: V17 = 0x3b8
0x4b: JUMPI 0x3b8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x3e1]
---
0x4c DUP1
0x4d PUSH4 0x29dcb0cf
0x52 EQ
0x53 PUSH2 0x3e1
0x56 JUMPI
---
0x4d: V18 = 0x29dcb0cf
0x52: V19 = EQ 0x29dcb0cf V11
0x53: V20 = 0x3e1
0x56: JUMPI 0x3e1 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x40a]
---
0x57 DUP1
0x58 PUSH4 0x38af3eed
0x5d EQ
0x5e PUSH2 0x40a
0x61 JUMPI
---
0x58: V21 = 0x38af3eed
0x5d: V22 = EQ 0x38af3eed V11
0x5e: V23 = 0x40a
0x61: JUMPI 0x40a V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x45f]
---
0x62 DUP1
0x63 PUSH4 0x43a5826c
0x68 EQ
0x69 PUSH2 0x45f
0x6c JUMPI
---
0x63: V24 = 0x43a5826c
0x68: V25 = EQ 0x43a5826c V11
0x69: V26 = 0x45f
0x6c: JUMPI 0x45f V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x474]
---
0x6d DUP1
0x6e PUSH4 0x6e66f6e9
0x73 EQ
0x74 PUSH2 0x474
0x77 JUMPI
---
0x6e: V27 = 0x6e66f6e9
0x73: V28 = EQ 0x6e66f6e9 V11
0x74: V29 = 0x474
0x77: JUMPI 0x474 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x4c9]
---
0x78 DUP1
0x79 PUSH4 0x70a08231
0x7e EQ
0x7f PUSH2 0x4c9
0x82 JUMPI
---
0x79: V30 = 0x70a08231
0x7e: V31 = EQ 0x70a08231 V11
0x7f: V32 = 0x4c9
0x82: JUMPI 0x4c9 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x516]
---
0x83 DUP1
0x84 PUSH4 0x7a3a0e84
0x89 EQ
0x8a PUSH2 0x516
0x8d JUMPI
---
0x84: V33 = 0x7a3a0e84
0x89: V34 = EQ 0x7a3a0e84 V11
0x8a: V35 = 0x516
0x8d: JUMPI 0x516 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x53f]
---
0x8e DUP1
0x8f PUSH4 0x7b3e5e7b
0x94 EQ
0x95 PUSH2 0x53f
0x98 JUMPI
---
0x8f: V36 = 0x7b3e5e7b
0x94: V37 = EQ 0x7b3e5e7b V11
0x95: V38 = 0x53f
0x98: JUMPI 0x53f V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x568]
---
0x99 DUP1
0x9a PUSH4 0xa035b1fe
0x9f EQ
0xa0 PUSH2 0x568
0xa3 JUMPI
---
0x9a: V39 = 0xa035b1fe
0x9f: V40 = EQ 0xa035b1fe V11
0xa0: V41 = 0x568
0xa3: JUMPI 0x568 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x591]
---
0xa4 DUP1
0xa5 PUSH4 0xccb07cef
0xaa EQ
0xab PUSH2 0x591
0xae JUMPI
---
0xa5: V42 = 0xccb07cef
0xaa: V43 = EQ 0xccb07cef V11
0xab: V44 = 0x591
0xae: JUMPI 0x591 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x5be]
---
0xaf DUP1
0xb0 PUSH4 0xe4f2dbd8
0xb5 EQ
0xb6 PUSH2 0x5be
0xb9 JUMPI
---
0xb0: V45 = 0xe4f2dbd8
0xb5: V46 = EQ 0xe4f2dbd8 V11
0xb6: V47 = 0x5be
0xb9: JUMPI 0x5be V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc4]
---
Predecessors: [0xaf]
Successors: [0xc5, 0x5e7]
---
0xba DUP1
0xbb PUSH4 0xfd6b7ef8
0xc0 EQ
0xc1 PUSH2 0x5e7
0xc4 JUMPI
---
0xbb: V48 = 0xfd6b7ef8
0xc0: V49 = EQ 0xfd6b7ef8 V11
0xc1: V50 = 0x5e7
0xc4: JUMPI 0x5e7 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xdf]
---
Predecessors: [0x0, 0xba]
Successors: [0xe0, 0xe1]
---
0xc5 JUMPDEST
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 PUSH1 0x9
0xcb PUSH1 0x1
0xcd SWAP1
0xce SLOAD
0xcf SWAP1
0xd0 PUSH2 0x100
0xd3 EXP
0xd4 SWAP1
0xd5 DIV
0xd6 PUSH1 0xff
0xd8 AND
0xd9 ISZERO
0xda ISZERO
0xdb ISZERO
0xdc PUSH2 0xe1
0xdf JUMPI
---
0xc5: JUMPDEST 
0xc6: V51 = 0x0
0xc9: V52 = 0x9
0xcb: V53 = 0x1
0xce: V54 = S[0x9]
0xd0: V55 = 0x100
0xd3: V56 = EXP 0x100 0x1
0xd5: V57 = DIV V54 0x100
0xd6: V58 = 0xff
0xd8: V59 = AND 0xff V57
0xd9: V60 = ISZERO V59
0xda: V61 = ISZERO V60
0xdb: V62 = ISZERO V61
0xdc: V63 = 0xe1
0xdf: JUMPI 0xe1 V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xe0
[0xe0:0xe0]
---
Predecessors: [0xc5]
Successors: []
---
0xe0 INVALID
---
0xe0: INVALID 
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xe1
[0xe1:0xf1]
---
Predecessors: [0xc5]
Successors: [0xf2, 0xf3]
---
0xe1 JUMPDEST
0xe2 PUSH1 0x2
0xe4 SLOAD
0xe5 PUSH1 0x1
0xe7 SLOAD
0xe8 SUB
0xe9 CALLVALUE
0xea GT
0xeb ISZERO
0xec ISZERO
0xed ISZERO
0xee PUSH2 0xf3
0xf1 JUMPI
---
0xe1: JUMPDEST 
0xe2: V64 = 0x2
0xe4: V65 = S[0x2]
0xe5: V66 = 0x1
0xe7: V67 = S[0x1]
0xe8: V68 = SUB V67 V65
0xe9: V69 = CALLVALUE
0xea: V70 = GT V69 V68
0xeb: V71 = ISZERO V70
0xec: V72 = ISZERO V71
0xed: V73 = ISZERO V72
0xee: V74 = 0xf3
0xf1: JUMPI 0xf3 V73
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xf2
[0xf2:0xf2]
---
Predecessors: [0xe1]
Successors: []
---
0xf2 INVALID
---
0xf2: INVALID 
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xf3
[0xf3:0x160]
---
Predecessors: [0xe1]
Successors: [0x161, 0x22c]
---
0xf3 JUMPDEST
0xf4 CALLVALUE
0xf5 SWAP2
0xf6 POP
0xf7 DUP2
0xf8 PUSH1 0x8
0xfa PUSH1 0x0
0xfc CALLER
0xfd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x112 AND
0x113 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x128 AND
0x129 DUP2
0x12a MSTORE
0x12b PUSH1 0x20
0x12d ADD
0x12e SWAP1
0x12f DUP2
0x130 MSTORE
0x131 PUSH1 0x20
0x133 ADD
0x134 PUSH1 0x0
0x136 SHA3
0x137 PUSH1 0x0
0x139 DUP3
0x13a DUP3
0x13b SLOAD
0x13c ADD
0x13d SWAP3
0x13e POP
0x13f POP
0x140 DUP2
0x141 SWAP1
0x142 SSTORE
0x143 POP
0x144 DUP2
0x145 PUSH1 0x2
0x147 PUSH1 0x0
0x149 DUP3
0x14a DUP3
0x14b SLOAD
0x14c ADD
0x14d SWAP3
0x14e POP
0x14f POP
0x150 DUP2
0x151 SWAP1
0x152 SSTORE
0x153 POP
0x154 PUSH1 0x1
0x156 SLOAD
0x157 PUSH1 0x2
0x159 SLOAD
0x15a LT
0x15b ISZERO
0x15c ISZERO
0x15d PUSH2 0x22c
0x160 JUMPI
---
0xf3: JUMPDEST 
0xf4: V75 = CALLVALUE
0xf8: V76 = 0x8
0xfa: V77 = 0x0
0xfc: V78 = CALLER
0xfd: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x112: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x113: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x128: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x12a: M[0x0] = V82
0x12b: V83 = 0x20
0x12d: V84 = ADD 0x20 0x0
0x130: M[0x20] = 0x8
0x131: V85 = 0x20
0x133: V86 = ADD 0x20 0x20
0x134: V87 = 0x0
0x136: V88 = SHA3 0x0 0x40
0x137: V89 = 0x0
0x13b: V90 = S[V88]
0x13c: V91 = ADD V90 V75
0x142: S[V88] = V91
0x145: V92 = 0x2
0x147: V93 = 0x0
0x14b: V94 = S[0x2]
0x14c: V95 = ADD V94 V75
0x152: S[0x2] = V95
0x154: V96 = 0x1
0x156: V97 = S[0x1]
0x157: V98 = 0x2
0x159: V99 = S[0x2]
0x15a: V100 = LT V99 V97
0x15b: V101 = ISZERO V100
0x15c: V102 = ISZERO V101
0x15d: V103 = 0x22c
0x160: JUMPI 0x22c V102
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 2
Stack additions: [V75, S0]
Exit stack: [V11, V75, 0x0]

================================

Block 0x161
[0x161:0x22b]
---
Predecessors: [0xf3]
Successors: [0x22c]
---
0x161 PUSH1 0x1
0x163 PUSH1 0x9
0x165 PUSH1 0x0
0x167 PUSH2 0x100
0x16a EXP
0x16b DUP2
0x16c SLOAD
0x16d DUP2
0x16e PUSH1 0xff
0x170 MUL
0x171 NOT
0x172 AND
0x173 SWAP1
0x174 DUP4
0x175 ISZERO
0x176 ISZERO
0x177 MUL
0x178 OR
0x179 SWAP1
0x17a SSTORE
0x17b POP
0x17c TIMESTAMP
0x17d PUSH1 0x3
0x17f DUP2
0x180 SWAP1
0x181 SSTORE
0x182 POP
0x183 PUSH1 0x1
0x185 PUSH1 0x9
0x187 PUSH1 0x1
0x189 PUSH2 0x100
0x18c EXP
0x18d DUP2
0x18e SLOAD
0x18f DUP2
0x190 PUSH1 0xff
0x192 MUL
0x193 NOT
0x194 AND
0x195 SWAP1
0x196 DUP4
0x197 ISZERO
0x198 ISZERO
0x199 MUL
0x19a OR
0x19b SWAP1
0x19c SSTORE
0x19d POP
0x19e PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 SWAP1
0x1c3 SLOAD
0x1c4 SWAP1
0x1c5 PUSH2 0x100
0x1c8 EXP
0x1c9 SWAP1
0x1ca DIV
0x1cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e0 AND
0x1e1 PUSH1 0x2
0x1e3 SLOAD
0x1e4 PUSH1 0x40
0x1e6 MLOAD
0x1e7 DUP1
0x1e8 DUP4
0x1e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fe AND
0x1ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x214 AND
0x215 DUP2
0x216 MSTORE
0x217 PUSH1 0x20
0x219 ADD
0x21a DUP3
0x21b DUP2
0x21c MSTORE
0x21d PUSH1 0x20
0x21f ADD
0x220 SWAP3
0x221 POP
0x222 POP
0x223 POP
0x224 PUSH1 0x40
0x226 MLOAD
0x227 DUP1
0x228 SWAP2
0x229 SUB
0x22a SWAP1
0x22b LOG1
---
0x161: V104 = 0x1
0x163: V105 = 0x9
0x165: V106 = 0x0
0x167: V107 = 0x100
0x16a: V108 = EXP 0x100 0x0
0x16c: V109 = S[0x9]
0x16e: V110 = 0xff
0x170: V111 = MUL 0xff 0x1
0x171: V112 = NOT 0xff
0x172: V113 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V109
0x175: V114 = ISZERO 0x1
0x176: V115 = ISZERO 0x0
0x177: V116 = MUL 0x1 0x1
0x178: V117 = OR 0x1 V113
0x17a: S[0x9] = V117
0x17c: V118 = TIMESTAMP
0x17d: V119 = 0x3
0x181: S[0x3] = V118
0x183: V120 = 0x1
0x185: V121 = 0x9
0x187: V122 = 0x1
0x189: V123 = 0x100
0x18c: V124 = EXP 0x100 0x1
0x18e: V125 = S[0x9]
0x190: V126 = 0xff
0x192: V127 = MUL 0xff 0x100
0x193: V128 = NOT 0xff00
0x194: V129 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V125
0x197: V130 = ISZERO 0x1
0x198: V131 = ISZERO 0x0
0x199: V132 = MUL 0x1 0x100
0x19a: V133 = OR 0x100 V129
0x19c: S[0x9] = V133
0x19e: V134 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x1bf: V135 = 0x0
0x1c3: V136 = S[0x0]
0x1c5: V137 = 0x100
0x1c8: V138 = EXP 0x100 0x0
0x1ca: V139 = DIV V136 0x1
0x1cb: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e0: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x1e1: V142 = 0x2
0x1e3: V143 = S[0x2]
0x1e4: V144 = 0x40
0x1e6: V145 = M[0x40]
0x1e9: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fe: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x1ff: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x214: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x216: M[V145] = V149
0x217: V150 = 0x20
0x219: V151 = ADD 0x20 V145
0x21c: M[V151] = V143
0x21d: V152 = 0x20
0x21f: V153 = ADD 0x20 V151
0x224: V154 = 0x40
0x226: V155 = M[0x40]
0x229: V156 = SUB V153 V155
0x22b: LOG V155 V156 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V11, V75, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V75, 0x0]

================================

Block 0x22c
[0x22c:0x23a]
---
Predecessors: [0xf3, 0x161]
Successors: [0x23b, 0x23c]
---
0x22c JUMPDEST
0x22d PUSH1 0x4
0x22f SLOAD
0x230 DUP3
0x231 PUSH1 0x64
0x233 MUL
0x234 DUP2
0x235 ISZERO
0x236 ISZERO
0x237 PUSH2 0x23c
0x23a JUMPI
---
0x22c: JUMPDEST 
0x22d: V157 = 0x4
0x22f: V158 = S[0x4]
0x231: V159 = 0x64
0x233: V160 = MUL 0x64 V75
0x235: V161 = ISZERO V158
0x236: V162 = ISZERO V161
0x237: V163 = 0x23c
0x23a: JUMPI 0x23c V162
---
Entry stack: [V11, V75, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V158, V160]
Exit stack: [V11, V75, 0x0, V158, V160]

================================

Block 0x23b
[0x23b:0x23b]
---
Predecessors: [0x22c]
Successors: []
---
0x23b INVALID
---
0x23b: INVALID 
---
Entry stack: [V11, V75, 0x0, V158, V160]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V75, 0x0, V158, V160]

================================

Block 0x23c
[0x23c:0x2fe]
---
Predecessors: [0x22c]
Successors: [0x2ff, 0x303]
---
0x23c JUMPDEST
0x23d DIV
0x23e SWAP1
0x23f POP
0x240 PUSH1 0x7
0x242 PUSH1 0x0
0x244 SWAP1
0x245 SLOAD
0x246 SWAP1
0x247 PUSH2 0x100
0x24a EXP
0x24b SWAP1
0x24c DIV
0x24d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x262 AND
0x263 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x278 AND
0x279 PUSH4 0xa9059cbb
0x27e CALLER
0x27f DUP4
0x280 PUSH1 0x40
0x282 MLOAD
0x283 DUP4
0x284 PUSH4 0xffffffff
0x289 AND
0x28a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2a8 MUL
0x2a9 DUP2
0x2aa MSTORE
0x2ab PUSH1 0x4
0x2ad ADD
0x2ae DUP1
0x2af DUP4
0x2b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c5 AND
0x2c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2db AND
0x2dc DUP2
0x2dd MSTORE
0x2de PUSH1 0x20
0x2e0 ADD
0x2e1 DUP3
0x2e2 DUP2
0x2e3 MSTORE
0x2e4 PUSH1 0x20
0x2e6 ADD
0x2e7 SWAP3
0x2e8 POP
0x2e9 POP
0x2ea POP
0x2eb PUSH1 0x0
0x2ed PUSH1 0x40
0x2ef MLOAD
0x2f0 DUP1
0x2f1 DUP4
0x2f2 SUB
0x2f3 DUP2
0x2f4 PUSH1 0x0
0x2f6 DUP8
0x2f7 DUP1
0x2f8 EXTCODESIZE
0x2f9 ISZERO
0x2fa ISZERO
0x2fb PUSH2 0x303
0x2fe JUMPI
---
0x23c: JUMPDEST 
0x23d: V164 = DIV V160 V158
0x240: V165 = 0x7
0x242: V166 = 0x0
0x245: V167 = S[0x7]
0x247: V168 = 0x100
0x24a: V169 = EXP 0x100 0x0
0x24c: V170 = DIV V167 0x1
0x24d: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x262: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x263: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x278: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x279: V175 = 0xa9059cbb
0x27e: V176 = CALLER
0x280: V177 = 0x40
0x282: V178 = M[0x40]
0x284: V179 = 0xffffffff
0x289: V180 = AND 0xffffffff 0xa9059cbb
0x28a: V181 = 0x100000000000000000000000000000000000000000000000000000000
0x2a8: V182 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x2aa: M[V178] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2ab: V183 = 0x4
0x2ad: V184 = ADD 0x4 V178
0x2b0: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c5: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x2c6: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x2dd: M[V184] = V188
0x2de: V189 = 0x20
0x2e0: V190 = ADD 0x20 V184
0x2e3: M[V190] = V164
0x2e4: V191 = 0x20
0x2e6: V192 = ADD 0x20 V190
0x2eb: V193 = 0x0
0x2ed: V194 = 0x40
0x2ef: V195 = M[0x40]
0x2f2: V196 = SUB V192 V195
0x2f4: V197 = 0x0
0x2f8: V198 = EXTCODESIZE V174
0x2f9: V199 = ISZERO V198
0x2fa: V200 = ISZERO V199
0x2fb: V201 = 0x303
0x2fe: JUMPI 0x303 V200
---
Entry stack: [V11, V75, 0x0, V158, V160]
Stack pops: 3
Stack additions: [V164, V174, 0xa9059cbb, V192, 0x0, V195, V196, V195, 0x0, V174]
Exit stack: [V11, V75, V164, V174, 0xa9059cbb, V192, 0x0, V195, V196, V195, 0x0, V174]

================================

Block 0x2ff
[0x2ff:0x302]
---
Predecessors: [0x23c]
Successors: []
---
0x2ff PUSH1 0x0
0x301 DUP1
0x302 REVERT
---
0x2ff: V202 = 0x0
0x302: REVERT 0x0 0x0
---
Entry stack: [V11, V75, V164, V174, 0xa9059cbb, V192, 0x0, V195, V196, V195, 0x0, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V75, V164, V174, 0xa9059cbb, V192, 0x0, V195, V196, V195, 0x0, V174]

================================

Block 0x303
[0x303:0x30f]
---
Predecessors: [0x23c]
Successors: [0x310, 0x314]
---
0x303 JUMPDEST
0x304 PUSH2 0x2c6
0x307 GAS
0x308 SUB
0x309 CALL
0x30a ISZERO
0x30b ISZERO
0x30c PUSH2 0x314
0x30f JUMPI
---
0x303: JUMPDEST 
0x304: V203 = 0x2c6
0x307: V204 = GAS
0x308: V205 = SUB V204 0x2c6
0x309: V206 = CALL V205 V174 0x0 V195 V196 V195 0x0
0x30a: V207 = ISZERO V206
0x30b: V208 = ISZERO V207
0x30c: V209 = 0x314
0x30f: JUMPI 0x314 V208
---
Entry stack: [V11, V75, V164, V174, 0xa9059cbb, V192, 0x0, V195, V196, V195, 0x0, V174]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V75, V164, V174, 0xa9059cbb, V192]

================================

Block 0x310
[0x310:0x313]
---
Predecessors: [0x303]
Successors: []
---
0x310 PUSH1 0x0
0x312 DUP1
0x313 REVERT
---
0x310: V210 = 0x0
0x313: REVERT 0x0 0x0
---
Entry stack: [V11, V75, V164, V174, 0xa9059cbb, V192]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V75, V164, V174, 0xa9059cbb, V192]

================================

Block 0x314
[0x314:0x3a2]
---
Predecessors: [0x303]
Successors: []
---
0x314 JUMPDEST
0x315 POP
0x316 POP
0x317 POP
0x318 DUP1
0x319 PUSH1 0x6
0x31b PUSH1 0x0
0x31d DUP3
0x31e DUP3
0x31f SLOAD
0x320 SUB
0x321 SWAP3
0x322 POP
0x323 POP
0x324 DUP2
0x325 SWAP1
0x326 SSTORE
0x327 POP
0x328 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x349 CALLER
0x34a DUP4
0x34b PUSH1 0x1
0x34d PUSH1 0x40
0x34f MLOAD
0x350 DUP1
0x351 DUP5
0x352 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x367 AND
0x368 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37d AND
0x37e DUP2
0x37f MSTORE
0x380 PUSH1 0x20
0x382 ADD
0x383 DUP4
0x384 DUP2
0x385 MSTORE
0x386 PUSH1 0x20
0x388 ADD
0x389 DUP3
0x38a ISZERO
0x38b ISZERO
0x38c ISZERO
0x38d ISZERO
0x38e DUP2
0x38f MSTORE
0x390 PUSH1 0x20
0x392 ADD
0x393 SWAP4
0x394 POP
0x395 POP
0x396 POP
0x397 POP
0x398 PUSH1 0x40
0x39a MLOAD
0x39b DUP1
0x39c SWAP2
0x39d SUB
0x39e SWAP1
0x39f LOG1
0x3a0 POP
0x3a1 POP
0x3a2 STOP
---
0x314: JUMPDEST 
0x319: V211 = 0x6
0x31b: V212 = 0x0
0x31f: V213 = S[0x6]
0x320: V214 = SUB V213 V164
0x326: S[0x6] = V214
0x328: V215 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x349: V216 = CALLER
0x34b: V217 = 0x1
0x34d: V218 = 0x40
0x34f: V219 = M[0x40]
0x352: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x367: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x368: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x37d: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x37f: M[V219] = V223
0x380: V224 = 0x20
0x382: V225 = ADD 0x20 V219
0x385: M[V225] = V75
0x386: V226 = 0x20
0x388: V227 = ADD 0x20 V225
0x38a: V228 = ISZERO 0x1
0x38b: V229 = ISZERO 0x0
0x38c: V230 = ISZERO 0x1
0x38d: V231 = ISZERO 0x0
0x38f: M[V227] = 0x1
0x390: V232 = 0x20
0x392: V233 = ADD 0x20 V227
0x398: V234 = 0x40
0x39a: V235 = M[0x40]
0x39d: V236 = SUB V233 V235
0x39f: LOG V235 V236 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x3a2: STOP 
---
Entry stack: [V11, V75, V164, V174, 0xa9059cbb, V192]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x3a3
[0x3a3:0x3a9]
---
Predecessors: [0xd]
Successors: [0x3aa, 0x3ae]
---
0x3a3 JUMPDEST
0x3a4 CALLVALUE
0x3a5 ISZERO
0x3a6 PUSH2 0x3ae
0x3a9 JUMPI
---
0x3a3: JUMPDEST 
0x3a4: V237 = CALLVALUE
0x3a5: V238 = ISZERO V237
0x3a6: V239 = 0x3ae
0x3a9: JUMPI 0x3ae V238
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3aa
[0x3aa:0x3ad]
---
Predecessors: [0x3a3]
Successors: []
---
0x3aa PUSH1 0x0
0x3ac DUP1
0x3ad REVERT
---
0x3aa: V240 = 0x0
0x3ad: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ae
[0x3ae:0x3b5]
---
Predecessors: [0x3a3]
Successors: [0x5fc]
---
0x3ae JUMPDEST
0x3af PUSH2 0x3b6
0x3b2 PUSH2 0x5fc
0x3b5 JUMP
---
0x3ae: JUMPDEST 
0x3af: V241 = 0x3b6
0x3b2: V242 = 0x5fc
0x3b5: JUMP 0x5fc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3b6]
Exit stack: [V11, 0x3b6]

================================

Block 0x3b6
[0x3b6:0x3b7]
---
Predecessors: [0x730]
Successors: []
---
0x3b6 JUMPDEST
0x3b7 STOP
---
0x3b6: JUMPDEST 
0x3b7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3b8
[0x3b8:0x3be]
---
Predecessors: [0x41]
Successors: [0x3bf, 0x3c3]
---
0x3b8 JUMPDEST
0x3b9 CALLVALUE
0x3ba ISZERO
0x3bb PUSH2 0x3c3
0x3be JUMPI
---
0x3b8: JUMPDEST 
0x3b9: V243 = CALLVALUE
0x3ba: V244 = ISZERO V243
0x3bb: V245 = 0x3c3
0x3be: JUMPI 0x3c3 V244
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3bf
[0x3bf:0x3c2]
---
Predecessors: [0x3b8]
Successors: []
---
0x3bf PUSH1 0x0
0x3c1 DUP1
0x3c2 REVERT
---
0x3bf: V246 = 0x0
0x3c2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c3
[0x3c3:0x3ca]
---
Predecessors: [0x3b8]
Successors: [0x732]
---
0x3c3 JUMPDEST
0x3c4 PUSH2 0x3cb
0x3c7 PUSH2 0x732
0x3ca JUMP
---
0x3c3: JUMPDEST 
0x3c4: V247 = 0x3cb
0x3c7: V248 = 0x732
0x3ca: JUMP 0x732
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3cb]
Exit stack: [V11, 0x3cb]

================================

Block 0x3cb
[0x3cb:0x3e0]
---
Predecessors: [0x732]
Successors: []
---
0x3cb JUMPDEST
0x3cc PUSH1 0x40
0x3ce MLOAD
0x3cf DUP1
0x3d0 DUP3
0x3d1 DUP2
0x3d2 MSTORE
0x3d3 PUSH1 0x20
0x3d5 ADD
0x3d6 SWAP2
0x3d7 POP
0x3d8 POP
0x3d9 PUSH1 0x40
0x3db MLOAD
0x3dc DUP1
0x3dd SWAP2
0x3de SUB
0x3df SWAP1
0x3e0 RETURN
---
0x3cb: JUMPDEST 
0x3cc: V249 = 0x40
0x3ce: V250 = M[0x40]
0x3d2: M[V250] = V485
0x3d3: V251 = 0x20
0x3d5: V252 = ADD 0x20 V250
0x3d9: V253 = 0x40
0x3db: V254 = M[0x40]
0x3de: V255 = SUB V252 V254
0x3e0: RETURN V254 V255
---
Entry stack: [V11, 0x3cb, V485]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3cb]

================================

Block 0x3e1
[0x3e1:0x3e7]
---
Predecessors: [0x4c]
Successors: [0x3e8, 0x3ec]
---
0x3e1 JUMPDEST
0x3e2 CALLVALUE
0x3e3 ISZERO
0x3e4 PUSH2 0x3ec
0x3e7 JUMPI
---
0x3e1: JUMPDEST 
0x3e2: V256 = CALLVALUE
0x3e3: V257 = ISZERO V256
0x3e4: V258 = 0x3ec
0x3e7: JUMPI 0x3ec V257
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e8
[0x3e8:0x3eb]
---
Predecessors: [0x3e1]
Successors: []
---
0x3e8 PUSH1 0x0
0x3ea DUP1
0x3eb REVERT
---
0x3e8: V259 = 0x0
0x3eb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ec
[0x3ec:0x3f3]
---
Predecessors: [0x3e1]
Successors: [0x738]
---
0x3ec JUMPDEST
0x3ed PUSH2 0x3f4
0x3f0 PUSH2 0x738
0x3f3 JUMP
---
0x3ec: JUMPDEST 
0x3ed: V260 = 0x3f4
0x3f0: V261 = 0x738
0x3f3: JUMP 0x738
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3f4]
Exit stack: [V11, 0x3f4]

================================

Block 0x3f4
[0x3f4:0x409]
---
Predecessors: [0x738]
Successors: []
---
0x3f4 JUMPDEST
0x3f5 PUSH1 0x40
0x3f7 MLOAD
0x3f8 DUP1
0x3f9 DUP3
0x3fa DUP2
0x3fb MSTORE
0x3fc PUSH1 0x20
0x3fe ADD
0x3ff SWAP2
0x400 POP
0x401 POP
0x402 PUSH1 0x40
0x404 MLOAD
0x405 DUP1
0x406 SWAP2
0x407 SUB
0x408 SWAP1
0x409 RETURN
---
0x3f4: JUMPDEST 
0x3f5: V262 = 0x40
0x3f7: V263 = M[0x40]
0x3fb: M[V263] = V487
0x3fc: V264 = 0x20
0x3fe: V265 = ADD 0x20 V263
0x402: V266 = 0x40
0x404: V267 = M[0x40]
0x407: V268 = SUB V265 V267
0x409: RETURN V267 V268
---
Entry stack: [V11, 0x3f4, V487]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3f4]

================================

Block 0x40a
[0x40a:0x410]
---
Predecessors: [0x57]
Successors: [0x411, 0x415]
---
0x40a JUMPDEST
0x40b CALLVALUE
0x40c ISZERO
0x40d PUSH2 0x415
0x410 JUMPI
---
0x40a: JUMPDEST 
0x40b: V269 = CALLVALUE
0x40c: V270 = ISZERO V269
0x40d: V271 = 0x415
0x410: JUMPI 0x415 V270
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x411
[0x411:0x414]
---
Predecessors: [0x40a]
Successors: []
---
0x411 PUSH1 0x0
0x413 DUP1
0x414 REVERT
---
0x411: V272 = 0x0
0x414: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x415
[0x415:0x41c]
---
Predecessors: [0x40a]
Successors: [0x73e]
---
0x415 JUMPDEST
0x416 PUSH2 0x41d
0x419 PUSH2 0x73e
0x41c JUMP
---
0x415: JUMPDEST 
0x416: V273 = 0x41d
0x419: V274 = 0x73e
0x41c: JUMP 0x73e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x41d]
Exit stack: [V11, 0x41d]

================================

Block 0x41d
[0x41d:0x45e]
---
Predecessors: [0x73e]
Successors: []
---
0x41d JUMPDEST
0x41e PUSH1 0x40
0x420 MLOAD
0x421 DUP1
0x422 DUP3
0x423 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x438 AND
0x439 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44e AND
0x44f DUP2
0x450 MSTORE
0x451 PUSH1 0x20
0x453 ADD
0x454 SWAP2
0x455 POP
0x456 POP
0x457 PUSH1 0x40
0x459 MLOAD
0x45a DUP1
0x45b SWAP2
0x45c SUB
0x45d SWAP1
0x45e RETURN
---
0x41d: JUMPDEST 
0x41e: V275 = 0x40
0x420: V276 = M[0x40]
0x423: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x438: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x439: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x44e: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x450: M[V276] = V280
0x451: V281 = 0x20
0x453: V282 = ADD 0x20 V276
0x457: V283 = 0x40
0x459: V284 = M[0x40]
0x45c: V285 = SUB V282 V284
0x45e: RETURN V284 V285
---
Entry stack: [V11, 0x41d, V494]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x41d]

================================

Block 0x45f
[0x45f:0x465]
---
Predecessors: [0x62]
Successors: [0x466, 0x46a]
---
0x45f JUMPDEST
0x460 CALLVALUE
0x461 ISZERO
0x462 PUSH2 0x46a
0x465 JUMPI
---
0x45f: JUMPDEST 
0x460: V286 = CALLVALUE
0x461: V287 = ISZERO V286
0x462: V288 = 0x46a
0x465: JUMPI 0x46a V287
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x466
[0x466:0x469]
---
Predecessors: [0x45f]
Successors: []
---
0x466 PUSH1 0x0
0x468 DUP1
0x469 REVERT
---
0x466: V289 = 0x0
0x469: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x46a
[0x46a:0x471]
---
Predecessors: [0x45f]
Successors: [0x763]
---
0x46a JUMPDEST
0x46b PUSH2 0x472
0x46e PUSH2 0x763
0x471 JUMP
---
0x46a: JUMPDEST 
0x46b: V290 = 0x472
0x46e: V291 = 0x763
0x471: JUMP 0x763
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x472]
Exit stack: [V11, 0x472]

================================

Block 0x472
[0x472:0x473]
---
Predecessors: [0x884]
Successors: []
---
0x472 JUMPDEST
0x473 STOP
---
0x472: JUMPDEST 
0x473: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x474
[0x474:0x47a]
---
Predecessors: [0x6d]
Successors: [0x47b, 0x47f]
---
0x474 JUMPDEST
0x475 CALLVALUE
0x476 ISZERO
0x477 PUSH2 0x47f
0x47a JUMPI
---
0x474: JUMPDEST 
0x475: V292 = CALLVALUE
0x476: V293 = ISZERO V292
0x477: V294 = 0x47f
0x47a: JUMPI 0x47f V293
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x47b
[0x47b:0x47e]
---
Predecessors: [0x474]
Successors: []
---
0x47b PUSH1 0x0
0x47d DUP1
0x47e REVERT
---
0x47b: V295 = 0x0
0x47e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x47f
[0x47f:0x486]
---
Predecessors: [0x474]
Successors: [0x886]
---
0x47f JUMPDEST
0x480 PUSH2 0x487
0x483 PUSH2 0x886
0x486 JUMP
---
0x47f: JUMPDEST 
0x480: V296 = 0x487
0x483: V297 = 0x886
0x486: JUMP 0x886
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x487]
Exit stack: [V11, 0x487]

================================

Block 0x487
[0x487:0x4c8]
---
Predecessors: [0x886]
Successors: []
---
0x487 JUMPDEST
0x488 PUSH1 0x40
0x48a MLOAD
0x48b DUP1
0x48c DUP3
0x48d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a2 AND
0x4a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b8 AND
0x4b9 DUP2
0x4ba MSTORE
0x4bb PUSH1 0x20
0x4bd ADD
0x4be SWAP2
0x4bf POP
0x4c0 POP
0x4c1 PUSH1 0x40
0x4c3 MLOAD
0x4c4 DUP1
0x4c5 SWAP2
0x4c6 SUB
0x4c7 SWAP1
0x4c8 RETURN
---
0x487: JUMPDEST 
0x488: V298 = 0x40
0x48a: V299 = M[0x40]
0x48d: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a2: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V570
0x4a3: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b8: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x4ba: M[V299] = V303
0x4bb: V304 = 0x20
0x4bd: V305 = ADD 0x20 V299
0x4c1: V306 = 0x40
0x4c3: V307 = M[0x40]
0x4c6: V308 = SUB V305 V307
0x4c8: RETURN V307 V308
---
Entry stack: [V11, 0x487, V570]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x487]

================================

Block 0x4c9
[0x4c9:0x4cf]
---
Predecessors: [0x78]
Successors: [0x4d0, 0x4d4]
---
0x4c9 JUMPDEST
0x4ca CALLVALUE
0x4cb ISZERO
0x4cc PUSH2 0x4d4
0x4cf JUMPI
---
0x4c9: JUMPDEST 
0x4ca: V309 = CALLVALUE
0x4cb: V310 = ISZERO V309
0x4cc: V311 = 0x4d4
0x4cf: JUMPI 0x4d4 V310
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4d0
[0x4d0:0x4d3]
---
Predecessors: [0x4c9]
Successors: []
---
0x4d0 PUSH1 0x0
0x4d2 DUP1
0x4d3 REVERT
---
0x4d0: V312 = 0x0
0x4d3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4d4
[0x4d4:0x4ff]
---
Predecessors: [0x4c9]
Successors: [0x8ac]
---
0x4d4 JUMPDEST
0x4d5 PUSH2 0x500
0x4d8 PUSH1 0x4
0x4da DUP1
0x4db DUP1
0x4dc CALLDATALOAD
0x4dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f2 AND
0x4f3 SWAP1
0x4f4 PUSH1 0x20
0x4f6 ADD
0x4f7 SWAP1
0x4f8 SWAP2
0x4f9 SWAP1
0x4fa POP
0x4fb POP
0x4fc PUSH2 0x8ac
0x4ff JUMP
---
0x4d4: JUMPDEST 
0x4d5: V313 = 0x500
0x4d8: V314 = 0x4
0x4dc: V315 = CALLDATALOAD 0x4
0x4dd: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f2: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x4f4: V318 = 0x20
0x4f6: V319 = ADD 0x20 0x4
0x4fc: V320 = 0x8ac
0x4ff: JUMP 0x8ac
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x500, V317]
Exit stack: [V11, 0x500, V317]

================================

Block 0x500
[0x500:0x515]
---
Predecessors: [0x8ac]
Successors: []
---
0x500 JUMPDEST
0x501 PUSH1 0x40
0x503 MLOAD
0x504 DUP1
0x505 DUP3
0x506 DUP2
0x507 MSTORE
0x508 PUSH1 0x20
0x50a ADD
0x50b SWAP2
0x50c POP
0x50d POP
0x50e PUSH1 0x40
0x510 MLOAD
0x511 DUP1
0x512 SWAP2
0x513 SUB
0x514 SWAP1
0x515 RETURN
---
0x500: JUMPDEST 
0x501: V321 = 0x40
0x503: V322 = M[0x40]
0x507: M[V322] = V578
0x508: V323 = 0x20
0x50a: V324 = ADD 0x20 V322
0x50e: V325 = 0x40
0x510: V326 = M[0x40]
0x513: V327 = SUB V324 V326
0x515: RETURN V326 V327
---
Entry stack: [V11, 0x500, V578]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x500]

================================

Block 0x516
[0x516:0x51c]
---
Predecessors: [0x83]
Successors: [0x51d, 0x521]
---
0x516 JUMPDEST
0x517 CALLVALUE
0x518 ISZERO
0x519 PUSH2 0x521
0x51c JUMPI
---
0x516: JUMPDEST 
0x517: V328 = CALLVALUE
0x518: V329 = ISZERO V328
0x519: V330 = 0x521
0x51c: JUMPI 0x521 V329
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51d
[0x51d:0x520]
---
Predecessors: [0x516]
Successors: []
---
0x51d PUSH1 0x0
0x51f DUP1
0x520 REVERT
---
0x51d: V331 = 0x0
0x520: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x521
[0x521:0x528]
---
Predecessors: [0x516]
Successors: [0x8c4]
---
0x521 JUMPDEST
0x522 PUSH2 0x529
0x525 PUSH2 0x8c4
0x528 JUMP
---
0x521: JUMPDEST 
0x522: V332 = 0x529
0x525: V333 = 0x8c4
0x528: JUMP 0x8c4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x529]
Exit stack: [V11, 0x529]

================================

Block 0x529
[0x529:0x53e]
---
Predecessors: [0x8c4]
Successors: []
---
0x529 JUMPDEST
0x52a PUSH1 0x40
0x52c MLOAD
0x52d DUP1
0x52e DUP3
0x52f DUP2
0x530 MSTORE
0x531 PUSH1 0x20
0x533 ADD
0x534 SWAP2
0x535 POP
0x536 POP
0x537 PUSH1 0x40
0x539 MLOAD
0x53a DUP1
0x53b SWAP2
0x53c SUB
0x53d SWAP1
0x53e RETURN
---
0x529: JUMPDEST 
0x52a: V334 = 0x40
0x52c: V335 = M[0x40]
0x530: M[V335] = V580
0x531: V336 = 0x20
0x533: V337 = ADD 0x20 V335
0x537: V338 = 0x40
0x539: V339 = M[0x40]
0x53c: V340 = SUB V337 V339
0x53e: RETURN V339 V340
---
Entry stack: [V11, 0x529, V580]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x529]

================================

Block 0x53f
[0x53f:0x545]
---
Predecessors: [0x8e]
Successors: [0x546, 0x54a]
---
0x53f JUMPDEST
0x540 CALLVALUE
0x541 ISZERO
0x542 PUSH2 0x54a
0x545 JUMPI
---
0x53f: JUMPDEST 
0x540: V341 = CALLVALUE
0x541: V342 = ISZERO V341
0x542: V343 = 0x54a
0x545: JUMPI 0x54a V342
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x546
[0x546:0x549]
---
Predecessors: [0x53f]
Successors: []
---
0x546 PUSH1 0x0
0x548 DUP1
0x549 REVERT
---
0x546: V344 = 0x0
0x549: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x54a
[0x54a:0x551]
---
Predecessors: [0x53f]
Successors: [0x8ca]
---
0x54a JUMPDEST
0x54b PUSH2 0x552
0x54e PUSH2 0x8ca
0x551 JUMP
---
0x54a: JUMPDEST 
0x54b: V345 = 0x552
0x54e: V346 = 0x8ca
0x551: JUMP 0x8ca
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x552]
Exit stack: [V11, 0x552]

================================

Block 0x552
[0x552:0x567]
---
Predecessors: [0x8ca]
Successors: []
---
0x552 JUMPDEST
0x553 PUSH1 0x40
0x555 MLOAD
0x556 DUP1
0x557 DUP3
0x558 DUP2
0x559 MSTORE
0x55a PUSH1 0x20
0x55c ADD
0x55d SWAP2
0x55e POP
0x55f POP
0x560 PUSH1 0x40
0x562 MLOAD
0x563 DUP1
0x564 SWAP2
0x565 SUB
0x566 SWAP1
0x567 RETURN
---
0x552: JUMPDEST 
0x553: V347 = 0x40
0x555: V348 = M[0x40]
0x559: M[V348] = V582
0x55a: V349 = 0x20
0x55c: V350 = ADD 0x20 V348
0x560: V351 = 0x40
0x562: V352 = M[0x40]
0x565: V353 = SUB V350 V352
0x567: RETURN V352 V353
---
Entry stack: [V11, 0x552, V582]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x552]

================================

Block 0x568
[0x568:0x56e]
---
Predecessors: [0x99]
Successors: [0x56f, 0x573]
---
0x568 JUMPDEST
0x569 CALLVALUE
0x56a ISZERO
0x56b PUSH2 0x573
0x56e JUMPI
---
0x568: JUMPDEST 
0x569: V354 = CALLVALUE
0x56a: V355 = ISZERO V354
0x56b: V356 = 0x573
0x56e: JUMPI 0x573 V355
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x56f
[0x56f:0x572]
---
Predecessors: [0x568]
Successors: []
---
0x56f PUSH1 0x0
0x571 DUP1
0x572 REVERT
---
0x56f: V357 = 0x0
0x572: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x573
[0x573:0x57a]
---
Predecessors: [0x568]
Successors: [0x8d0]
---
0x573 JUMPDEST
0x574 PUSH2 0x57b
0x577 PUSH2 0x8d0
0x57a JUMP
---
0x573: JUMPDEST 
0x574: V358 = 0x57b
0x577: V359 = 0x8d0
0x57a: JUMP 0x8d0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x57b]
Exit stack: [V11, 0x57b]

================================

Block 0x57b
[0x57b:0x590]
---
Predecessors: [0x8d0]
Successors: []
---
0x57b JUMPDEST
0x57c PUSH1 0x40
0x57e MLOAD
0x57f DUP1
0x580 DUP3
0x581 DUP2
0x582 MSTORE
0x583 PUSH1 0x20
0x585 ADD
0x586 SWAP2
0x587 POP
0x588 POP
0x589 PUSH1 0x40
0x58b MLOAD
0x58c DUP1
0x58d SWAP2
0x58e SUB
0x58f SWAP1
0x590 RETURN
---
0x57b: JUMPDEST 
0x57c: V360 = 0x40
0x57e: V361 = M[0x40]
0x582: M[V361] = V584
0x583: V362 = 0x20
0x585: V363 = ADD 0x20 V361
0x589: V364 = 0x40
0x58b: V365 = M[0x40]
0x58e: V366 = SUB V363 V365
0x590: RETURN V365 V366
---
Entry stack: [V11, 0x57b, V584]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x57b]

================================

Block 0x591
[0x591:0x597]
---
Predecessors: [0xa4]
Successors: [0x598, 0x59c]
---
0x591 JUMPDEST
0x592 CALLVALUE
0x593 ISZERO
0x594 PUSH2 0x59c
0x597 JUMPI
---
0x591: JUMPDEST 
0x592: V367 = CALLVALUE
0x593: V368 = ISZERO V367
0x594: V369 = 0x59c
0x597: JUMPI 0x59c V368
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x598
[0x598:0x59b]
---
Predecessors: [0x591]
Successors: []
---
0x598 PUSH1 0x0
0x59a DUP1
0x59b REVERT
---
0x598: V370 = 0x0
0x59b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x59c
[0x59c:0x5a3]
---
Predecessors: [0x591]
Successors: [0x8d6]
---
0x59c JUMPDEST
0x59d PUSH2 0x5a4
0x5a0 PUSH2 0x8d6
0x5a3 JUMP
---
0x59c: JUMPDEST 
0x59d: V371 = 0x5a4
0x5a0: V372 = 0x8d6
0x5a3: JUMP 0x8d6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x5a4]
Exit stack: [V11, 0x5a4]

================================

Block 0x5a4
[0x5a4:0x5bd]
---
Predecessors: [0x8d6]
Successors: []
---
0x5a4 JUMPDEST
0x5a5 PUSH1 0x40
0x5a7 MLOAD
0x5a8 DUP1
0x5a9 DUP3
0x5aa ISZERO
0x5ab ISZERO
0x5ac ISZERO
0x5ad ISZERO
0x5ae DUP2
0x5af MSTORE
0x5b0 PUSH1 0x20
0x5b2 ADD
0x5b3 SWAP2
0x5b4 POP
0x5b5 POP
0x5b6 PUSH1 0x40
0x5b8 MLOAD
0x5b9 DUP1
0x5ba SWAP2
0x5bb SUB
0x5bc SWAP1
0x5bd RETURN
---
0x5a4: JUMPDEST 
0x5a5: V373 = 0x40
0x5a7: V374 = M[0x40]
0x5aa: V375 = ISZERO V592
0x5ab: V376 = ISZERO V375
0x5ac: V377 = ISZERO V376
0x5ad: V378 = ISZERO V377
0x5af: M[V374] = V378
0x5b0: V379 = 0x20
0x5b2: V380 = ADD 0x20 V374
0x5b6: V381 = 0x40
0x5b8: V382 = M[0x40]
0x5bb: V383 = SUB V380 V382
0x5bd: RETURN V382 V383
---
Entry stack: [V11, 0x5a4, V592]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x5a4]

================================

Block 0x5be
[0x5be:0x5c4]
---
Predecessors: [0xaf]
Successors: [0x5c5, 0x5c9]
---
0x5be JUMPDEST
0x5bf CALLVALUE
0x5c0 ISZERO
0x5c1 PUSH2 0x5c9
0x5c4 JUMPI
---
0x5be: JUMPDEST 
0x5bf: V384 = CALLVALUE
0x5c0: V385 = ISZERO V384
0x5c1: V386 = 0x5c9
0x5c4: JUMPI 0x5c9 V385
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c5
[0x5c5:0x5c8]
---
Predecessors: [0x5be]
Successors: []
---
0x5c5 PUSH1 0x0
0x5c7 DUP1
0x5c8 REVERT
---
0x5c5: V387 = 0x0
0x5c8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c9
[0x5c9:0x5d0]
---
Predecessors: [0x5be]
Successors: [0x8e9]
---
0x5c9 JUMPDEST
0x5ca PUSH2 0x5d1
0x5cd PUSH2 0x8e9
0x5d0 JUMP
---
0x5c9: JUMPDEST 
0x5ca: V388 = 0x5d1
0x5cd: V389 = 0x8e9
0x5d0: JUMP 0x8e9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x5d1]
Exit stack: [V11, 0x5d1]

================================

Block 0x5d1
[0x5d1:0x5e6]
---
Predecessors: [0x8e9]
Successors: []
---
0x5d1 JUMPDEST
0x5d2 PUSH1 0x40
0x5d4 MLOAD
0x5d5 DUP1
0x5d6 DUP3
0x5d7 DUP2
0x5d8 MSTORE
0x5d9 PUSH1 0x20
0x5db ADD
0x5dc SWAP2
0x5dd POP
0x5de POP
0x5df PUSH1 0x40
0x5e1 MLOAD
0x5e2 DUP1
0x5e3 SWAP2
0x5e4 SUB
0x5e5 SWAP1
0x5e6 RETURN
---
0x5d1: JUMPDEST 
0x5d2: V390 = 0x40
0x5d4: V391 = M[0x40]
0x5d8: M[V391] = V594
0x5d9: V392 = 0x20
0x5db: V393 = ADD 0x20 V391
0x5df: V394 = 0x40
0x5e1: V395 = M[0x40]
0x5e4: V396 = SUB V393 V395
0x5e6: RETURN V395 V396
---
Entry stack: [V11, 0x5d1, V594]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x5d1]

================================

Block 0x5e7
[0x5e7:0x5ed]
---
Predecessors: [0xba]
Successors: [0x5ee, 0x5f2]
---
0x5e7 JUMPDEST
0x5e8 CALLVALUE
0x5e9 ISZERO
0x5ea PUSH2 0x5f2
0x5ed JUMPI
---
0x5e7: JUMPDEST 
0x5e8: V397 = CALLVALUE
0x5e9: V398 = ISZERO V397
0x5ea: V399 = 0x5f2
0x5ed: JUMPI 0x5f2 V398
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5ee
[0x5ee:0x5f1]
---
Predecessors: [0x5e7]
Successors: []
---
0x5ee PUSH1 0x0
0x5f0 DUP1
0x5f1 REVERT
---
0x5ee: V400 = 0x0
0x5f1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5f2
[0x5f2:0x5f9]
---
Predecessors: [0x5e7]
Successors: [0x8ef]
---
0x5f2 JUMPDEST
0x5f3 PUSH2 0x5fa
0x5f6 PUSH2 0x8ef
0x5f9 JUMP
---
0x5f2: JUMPDEST 
0x5f3: V401 = 0x5fa
0x5f6: V402 = 0x8ef
0x5f9: JUMP 0x8ef
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x5fa]
Exit stack: [V11, 0x5fa]

================================

Block 0x5fa
[0x5fa:0x5fb]
---
Predecessors: [0xcda]
Successors: []
---
0x5fa JUMPDEST
0x5fb STOP
---
0x5fa: JUMPDEST 
0x5fb: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5fc
[0x5fc:0x607]
---
Predecessors: [0x3ae]
Successors: [0x608, 0x730]
---
0x5fc JUMPDEST
0x5fd PUSH1 0x3
0x5ff SLOAD
0x600 TIMESTAMP
0x601 LT
0x602 ISZERO
0x603 ISZERO
0x604 PUSH2 0x730
0x607 JUMPI
---
0x5fc: JUMPDEST 
0x5fd: V403 = 0x3
0x5ff: V404 = S[0x3]
0x600: V405 = TIMESTAMP
0x601: V406 = LT V405 V404
0x602: V407 = ISZERO V406
0x603: V408 = ISZERO V407
0x604: V409 = 0x730
0x607: JUMPI 0x730 V408
---
Entry stack: [V11, 0x3b6]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3b6]

================================

Block 0x608
[0x608:0x65c]
---
Predecessors: [0x5fc]
Successors: [0x65d, 0x72f]
---
0x608 CALLER
0x609 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61e AND
0x61f PUSH1 0x0
0x621 DUP1
0x622 SWAP1
0x623 SLOAD
0x624 SWAP1
0x625 PUSH2 0x100
0x628 EXP
0x629 SWAP1
0x62a DIV
0x62b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x640 AND
0x641 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x656 AND
0x657 EQ
0x658 ISZERO
0x659 PUSH2 0x72f
0x65c JUMPI
---
0x608: V410 = CALLER
0x609: V411 = 0xffffffffffffffffffffffffffffffffffffffff
0x61e: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V410
0x61f: V413 = 0x0
0x623: V414 = S[0x0]
0x625: V415 = 0x100
0x628: V416 = EXP 0x100 0x0
0x62a: V417 = DIV V414 0x1
0x62b: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x640: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x641: V420 = 0xffffffffffffffffffffffffffffffffffffffff
0x656: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V419
0x657: V422 = EQ V421 V412
0x658: V423 = ISZERO V422
0x659: V424 = 0x72f
0x65c: JUMPI 0x72f V423
---
Entry stack: [V11, 0x3b6]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3b6]

================================

Block 0x65d
[0x65d:0x669]
---
Predecessors: [0x608]
Successors: [0x66a, 0x713]
---
0x65d PUSH1 0x1
0x65f SLOAD
0x660 PUSH1 0x2
0x662 SLOAD
0x663 LT
0x664 ISZERO
0x665 ISZERO
0x666 PUSH2 0x713
0x669 JUMPI
---
0x65d: V425 = 0x1
0x65f: V426 = S[0x1]
0x660: V427 = 0x2
0x662: V428 = S[0x2]
0x663: V429 = LT V428 V426
0x664: V430 = ISZERO V429
0x665: V431 = ISZERO V430
0x666: V432 = 0x713
0x669: JUMPI 0x713 V431
---
Entry stack: [V11, 0x3b6]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3b6]

================================

Block 0x66a
[0x66a:0x712]
---
Predecessors: [0x65d]
Successors: [0x713]
---
0x66a PUSH1 0x1
0x66c PUSH1 0x9
0x66e PUSH1 0x0
0x670 PUSH2 0x100
0x673 EXP
0x674 DUP2
0x675 SLOAD
0x676 DUP2
0x677 PUSH1 0xff
0x679 MUL
0x67a NOT
0x67b AND
0x67c SWAP1
0x67d DUP4
0x67e ISZERO
0x67f ISZERO
0x680 MUL
0x681 OR
0x682 SWAP1
0x683 SSTORE
0x684 POP
0x685 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x6a6 PUSH1 0x0
0x6a8 DUP1
0x6a9 SWAP1
0x6aa SLOAD
0x6ab SWAP1
0x6ac PUSH2 0x100
0x6af EXP
0x6b0 SWAP1
0x6b1 DIV
0x6b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c7 AND
0x6c8 PUSH1 0x2
0x6ca SLOAD
0x6cb PUSH1 0x40
0x6cd MLOAD
0x6ce DUP1
0x6cf DUP4
0x6d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e5 AND
0x6e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fb AND
0x6fc DUP2
0x6fd MSTORE
0x6fe PUSH1 0x20
0x700 ADD
0x701 DUP3
0x702 DUP2
0x703 MSTORE
0x704 PUSH1 0x20
0x706 ADD
0x707 SWAP3
0x708 POP
0x709 POP
0x70a POP
0x70b PUSH1 0x40
0x70d MLOAD
0x70e DUP1
0x70f SWAP2
0x710 SUB
0x711 SWAP1
0x712 LOG1
---
0x66a: V433 = 0x1
0x66c: V434 = 0x9
0x66e: V435 = 0x0
0x670: V436 = 0x100
0x673: V437 = EXP 0x100 0x0
0x675: V438 = S[0x9]
0x677: V439 = 0xff
0x679: V440 = MUL 0xff 0x1
0x67a: V441 = NOT 0xff
0x67b: V442 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V438
0x67e: V443 = ISZERO 0x1
0x67f: V444 = ISZERO 0x0
0x680: V445 = MUL 0x1 0x1
0x681: V446 = OR 0x1 V442
0x683: S[0x9] = V446
0x685: V447 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x6a6: V448 = 0x0
0x6aa: V449 = S[0x0]
0x6ac: V450 = 0x100
0x6af: V451 = EXP 0x100 0x0
0x6b1: V452 = DIV V449 0x1
0x6b2: V453 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c7: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V452
0x6c8: V455 = 0x2
0x6ca: V456 = S[0x2]
0x6cb: V457 = 0x40
0x6cd: V458 = M[0x40]
0x6d0: V459 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e5: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x6e6: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fb: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x6fd: M[V458] = V462
0x6fe: V463 = 0x20
0x700: V464 = ADD 0x20 V458
0x703: M[V464] = V456
0x704: V465 = 0x20
0x706: V466 = ADD 0x20 V464
0x70b: V467 = 0x40
0x70d: V468 = M[0x40]
0x710: V469 = SUB V466 V468
0x712: LOG V468 V469 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V11, 0x3b6]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3b6]

================================

Block 0x713
[0x713:0x72e]
---
Predecessors: [0x65d, 0x66a]
Successors: [0x72f]
---
0x713 JUMPDEST
0x714 PUSH1 0x1
0x716 PUSH1 0x9
0x718 PUSH1 0x1
0x71a PUSH2 0x100
0x71d EXP
0x71e DUP2
0x71f SLOAD
0x720 DUP2
0x721 PUSH1 0xff
0x723 MUL
0x724 NOT
0x725 AND
0x726 SWAP1
0x727 DUP4
0x728 ISZERO
0x729 ISZERO
0x72a MUL
0x72b OR
0x72c SWAP1
0x72d SSTORE
0x72e POP
---
0x713: JUMPDEST 
0x714: V470 = 0x1
0x716: V471 = 0x9
0x718: V472 = 0x1
0x71a: V473 = 0x100
0x71d: V474 = EXP 0x100 0x1
0x71f: V475 = S[0x9]
0x721: V476 = 0xff
0x723: V477 = MUL 0xff 0x100
0x724: V478 = NOT 0xff00
0x725: V479 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V475
0x728: V480 = ISZERO 0x1
0x729: V481 = ISZERO 0x0
0x72a: V482 = MUL 0x1 0x100
0x72b: V483 = OR 0x100 V479
0x72d: S[0x9] = V483
---
Entry stack: [V11, 0x3b6]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3b6]

================================

Block 0x72f
[0x72f:0x72f]
---
Predecessors: [0x608, 0x713]
Successors: [0x730]
---
0x72f JUMPDEST
---
0x72f: JUMPDEST 
---
Entry stack: [V11, 0x3b6]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3b6]

================================

Block 0x730
[0x730:0x731]
---
Predecessors: [0x5fc, 0x72f]
Successors: [0x3b6]
---
0x730 JUMPDEST
0x731 JUMP
---
0x730: JUMPDEST 
0x731: JUMP 0x3b6
---
Entry stack: [V11, 0x3b6]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x732
[0x732:0x737]
---
Predecessors: [0x3c3]
Successors: [0x3cb]
---
0x732 JUMPDEST
0x733 PUSH1 0x5
0x735 SLOAD
0x736 DUP2
0x737 JUMP
---
0x732: JUMPDEST 
0x733: V484 = 0x5
0x735: V485 = S[0x5]
0x737: JUMP 0x3cb
---
Entry stack: [V11, 0x3cb]
Stack pops: 1
Stack additions: [S0, V485]
Exit stack: [V11, 0x3cb, V485]

================================

Block 0x738
[0x738:0x73d]
---
Predecessors: [0x3ec]
Successors: [0x3f4]
---
0x738 JUMPDEST
0x739 PUSH1 0x3
0x73b SLOAD
0x73c DUP2
0x73d JUMP
---
0x738: JUMPDEST 
0x739: V486 = 0x3
0x73b: V487 = S[0x3]
0x73d: JUMP 0x3f4
---
Entry stack: [V11, 0x3f4]
Stack pops: 1
Stack additions: [S0, V487]
Exit stack: [V11, 0x3f4, V487]

================================

Block 0x73e
[0x73e:0x762]
---
Predecessors: [0x415]
Successors: [0x41d]
---
0x73e JUMPDEST
0x73f PUSH1 0x0
0x741 DUP1
0x742 SWAP1
0x743 SLOAD
0x744 SWAP1
0x745 PUSH2 0x100
0x748 EXP
0x749 SWAP1
0x74a DIV
0x74b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x760 AND
0x761 DUP2
0x762 JUMP
---
0x73e: JUMPDEST 
0x73f: V488 = 0x0
0x743: V489 = S[0x0]
0x745: V490 = 0x100
0x748: V491 = EXP 0x100 0x0
0x74a: V492 = DIV V489 0x1
0x74b: V493 = 0xffffffffffffffffffffffffffffffffffffffff
0x760: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x762: JUMP 0x41d
---
Entry stack: [V11, 0x41d]
Stack pops: 1
Stack additions: [S0, V494]
Exit stack: [V11, 0x41d, V494]

================================

Block 0x763
[0x763:0x7b8]
---
Predecessors: [0x46a]
Successors: [0x7b9, 0x884]
---
0x763 JUMPDEST
0x764 CALLER
0x765 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77a AND
0x77b PUSH1 0x0
0x77d DUP1
0x77e SWAP1
0x77f SLOAD
0x780 SWAP1
0x781 PUSH2 0x100
0x784 EXP
0x785 SWAP1
0x786 DIV
0x787 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79c AND
0x79d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b2 AND
0x7b3 EQ
0x7b4 ISZERO
0x7b5 PUSH2 0x884
0x7b8 JUMPI
---
0x763: JUMPDEST 
0x764: V495 = CALLER
0x765: V496 = 0xffffffffffffffffffffffffffffffffffffffff
0x77a: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V495
0x77b: V498 = 0x0
0x77f: V499 = S[0x0]
0x781: V500 = 0x100
0x784: V501 = EXP 0x100 0x0
0x786: V502 = DIV V499 0x1
0x787: V503 = 0xffffffffffffffffffffffffffffffffffffffff
0x79c: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V502
0x79d: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b2: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x7b3: V507 = EQ V506 V497
0x7b4: V508 = ISZERO V507
0x7b5: V509 = 0x884
0x7b8: JUMPI 0x884 V508
---
Entry stack: [V11, 0x472]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x472]

================================

Block 0x7b9
[0x7b9:0x883]
---
Predecessors: [0x763]
Successors: [0x884]
---
0x7b9 PUSH1 0x1
0x7bb PUSH1 0x9
0x7bd PUSH1 0x0
0x7bf PUSH2 0x100
0x7c2 EXP
0x7c3 DUP2
0x7c4 SLOAD
0x7c5 DUP2
0x7c6 PUSH1 0xff
0x7c8 MUL
0x7c9 NOT
0x7ca AND
0x7cb SWAP1
0x7cc DUP4
0x7cd ISZERO
0x7ce ISZERO
0x7cf MUL
0x7d0 OR
0x7d1 SWAP1
0x7d2 SSTORE
0x7d3 POP
0x7d4 TIMESTAMP
0x7d5 PUSH1 0x3
0x7d7 DUP2
0x7d8 SWAP1
0x7d9 SSTORE
0x7da POP
0x7db PUSH1 0x1
0x7dd PUSH1 0x9
0x7df PUSH1 0x1
0x7e1 PUSH2 0x100
0x7e4 EXP
0x7e5 DUP2
0x7e6 SLOAD
0x7e7 DUP2
0x7e8 PUSH1 0xff
0x7ea MUL
0x7eb NOT
0x7ec AND
0x7ed SWAP1
0x7ee DUP4
0x7ef ISZERO
0x7f0 ISZERO
0x7f1 MUL
0x7f2 OR
0x7f3 SWAP1
0x7f4 SSTORE
0x7f5 POP
0x7f6 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x817 PUSH1 0x0
0x819 DUP1
0x81a SWAP1
0x81b SLOAD
0x81c SWAP1
0x81d PUSH2 0x100
0x820 EXP
0x821 SWAP1
0x822 DIV
0x823 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x838 AND
0x839 PUSH1 0x2
0x83b SLOAD
0x83c PUSH1 0x40
0x83e MLOAD
0x83f DUP1
0x840 DUP4
0x841 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x856 AND
0x857 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x86c AND
0x86d DUP2
0x86e MSTORE
0x86f PUSH1 0x20
0x871 ADD
0x872 DUP3
0x873 DUP2
0x874 MSTORE
0x875 PUSH1 0x20
0x877 ADD
0x878 SWAP3
0x879 POP
0x87a POP
0x87b POP
0x87c PUSH1 0x40
0x87e MLOAD
0x87f DUP1
0x880 SWAP2
0x881 SUB
0x882 SWAP1
0x883 LOG1
---
0x7b9: V510 = 0x1
0x7bb: V511 = 0x9
0x7bd: V512 = 0x0
0x7bf: V513 = 0x100
0x7c2: V514 = EXP 0x100 0x0
0x7c4: V515 = S[0x9]
0x7c6: V516 = 0xff
0x7c8: V517 = MUL 0xff 0x1
0x7c9: V518 = NOT 0xff
0x7ca: V519 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V515
0x7cd: V520 = ISZERO 0x1
0x7ce: V521 = ISZERO 0x0
0x7cf: V522 = MUL 0x1 0x1
0x7d0: V523 = OR 0x1 V519
0x7d2: S[0x9] = V523
0x7d4: V524 = TIMESTAMP
0x7d5: V525 = 0x3
0x7d9: S[0x3] = V524
0x7db: V526 = 0x1
0x7dd: V527 = 0x9
0x7df: V528 = 0x1
0x7e1: V529 = 0x100
0x7e4: V530 = EXP 0x100 0x1
0x7e6: V531 = S[0x9]
0x7e8: V532 = 0xff
0x7ea: V533 = MUL 0xff 0x100
0x7eb: V534 = NOT 0xff00
0x7ec: V535 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V531
0x7ef: V536 = ISZERO 0x1
0x7f0: V537 = ISZERO 0x0
0x7f1: V538 = MUL 0x1 0x100
0x7f2: V539 = OR 0x100 V535
0x7f4: S[0x9] = V539
0x7f6: V540 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x817: V541 = 0x0
0x81b: V542 = S[0x0]
0x81d: V543 = 0x100
0x820: V544 = EXP 0x100 0x0
0x822: V545 = DIV V542 0x1
0x823: V546 = 0xffffffffffffffffffffffffffffffffffffffff
0x838: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V545
0x839: V548 = 0x2
0x83b: V549 = S[0x2]
0x83c: V550 = 0x40
0x83e: V551 = M[0x40]
0x841: V552 = 0xffffffffffffffffffffffffffffffffffffffff
0x856: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x857: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x86c: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V553
0x86e: M[V551] = V555
0x86f: V556 = 0x20
0x871: V557 = ADD 0x20 V551
0x874: M[V557] = V549
0x875: V558 = 0x20
0x877: V559 = ADD 0x20 V557
0x87c: V560 = 0x40
0x87e: V561 = M[0x40]
0x881: V562 = SUB V559 V561
0x883: LOG V561 V562 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V11, 0x472]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x472]

================================

Block 0x884
[0x884:0x885]
---
Predecessors: [0x763, 0x7b9]
Successors: [0x472]
---
0x884 JUMPDEST
0x885 JUMP
---
0x884: JUMPDEST 
0x885: JUMP 0x472
---
Entry stack: [V11, 0x472]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x886
[0x886:0x8ab]
---
Predecessors: [0x47f]
Successors: [0x487]
---
0x886 JUMPDEST
0x887 PUSH1 0x7
0x889 PUSH1 0x0
0x88b SWAP1
0x88c SLOAD
0x88d SWAP1
0x88e PUSH2 0x100
0x891 EXP
0x892 SWAP1
0x893 DIV
0x894 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a9 AND
0x8aa DUP2
0x8ab JUMP
---
0x886: JUMPDEST 
0x887: V563 = 0x7
0x889: V564 = 0x0
0x88c: V565 = S[0x7]
0x88e: V566 = 0x100
0x891: V567 = EXP 0x100 0x0
0x893: V568 = DIV V565 0x1
0x894: V569 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a9: V570 = AND 0xffffffffffffffffffffffffffffffffffffffff V568
0x8ab: JUMP 0x487
---
Entry stack: [V11, 0x487]
Stack pops: 1
Stack additions: [S0, V570]
Exit stack: [V11, 0x487, V570]

================================

Block 0x8ac
[0x8ac:0x8c3]
---
Predecessors: [0x4d4]
Successors: [0x500]
---
0x8ac JUMPDEST
0x8ad PUSH1 0x8
0x8af PUSH1 0x20
0x8b1 MSTORE
0x8b2 DUP1
0x8b3 PUSH1 0x0
0x8b5 MSTORE
0x8b6 PUSH1 0x40
0x8b8 PUSH1 0x0
0x8ba SHA3
0x8bb PUSH1 0x0
0x8bd SWAP2
0x8be POP
0x8bf SWAP1
0x8c0 POP
0x8c1 SLOAD
0x8c2 DUP2
0x8c3 JUMP
---
0x8ac: JUMPDEST 
0x8ad: V571 = 0x8
0x8af: V572 = 0x20
0x8b1: M[0x20] = 0x8
0x8b3: V573 = 0x0
0x8b5: M[0x0] = V317
0x8b6: V574 = 0x40
0x8b8: V575 = 0x0
0x8ba: V576 = SHA3 0x0 0x40
0x8bb: V577 = 0x0
0x8c1: V578 = S[V576]
0x8c3: JUMP 0x500
---
Entry stack: [V11, 0x500, V317]
Stack pops: 2
Stack additions: [S1, V578]
Exit stack: [V11, 0x500, V578]

================================

Block 0x8c4
[0x8c4:0x8c9]
---
Predecessors: [0x521]
Successors: [0x529]
---
0x8c4 JUMPDEST
0x8c5 PUSH1 0x1
0x8c7 SLOAD
0x8c8 DUP2
0x8c9 JUMP
---
0x8c4: JUMPDEST 
0x8c5: V579 = 0x1
0x8c7: V580 = S[0x1]
0x8c9: JUMP 0x529
---
Entry stack: [V11, 0x529]
Stack pops: 1
Stack additions: [S0, V580]
Exit stack: [V11, 0x529, V580]

================================

Block 0x8ca
[0x8ca:0x8cf]
---
Predecessors: [0x54a]
Successors: [0x552]
---
0x8ca JUMPDEST
0x8cb PUSH1 0x2
0x8cd SLOAD
0x8ce DUP2
0x8cf JUMP
---
0x8ca: JUMPDEST 
0x8cb: V581 = 0x2
0x8cd: V582 = S[0x2]
0x8cf: JUMP 0x552
---
Entry stack: [V11, 0x552]
Stack pops: 1
Stack additions: [S0, V582]
Exit stack: [V11, 0x552, V582]

================================

Block 0x8d0
[0x8d0:0x8d5]
---
Predecessors: [0x573]
Successors: [0x57b]
---
0x8d0 JUMPDEST
0x8d1 PUSH1 0x4
0x8d3 SLOAD
0x8d4 DUP2
0x8d5 JUMP
---
0x8d0: JUMPDEST 
0x8d1: V583 = 0x4
0x8d3: V584 = S[0x4]
0x8d5: JUMP 0x57b
---
Entry stack: [V11, 0x57b]
Stack pops: 1
Stack additions: [S0, V584]
Exit stack: [V11, 0x57b, V584]

================================

Block 0x8d6
[0x8d6:0x8e8]
---
Predecessors: [0x59c]
Successors: [0x5a4]
---
0x8d6 JUMPDEST
0x8d7 PUSH1 0x9
0x8d9 PUSH1 0x1
0x8db SWAP1
0x8dc SLOAD
0x8dd SWAP1
0x8de PUSH2 0x100
0x8e1 EXP
0x8e2 SWAP1
0x8e3 DIV
0x8e4 PUSH1 0xff
0x8e6 AND
0x8e7 DUP2
0x8e8 JUMP
---
0x8d6: JUMPDEST 
0x8d7: V585 = 0x9
0x8d9: V586 = 0x1
0x8dc: V587 = S[0x9]
0x8de: V588 = 0x100
0x8e1: V589 = EXP 0x100 0x1
0x8e3: V590 = DIV V587 0x100
0x8e4: V591 = 0xff
0x8e6: V592 = AND 0xff V590
0x8e8: JUMP 0x5a4
---
Entry stack: [V11, 0x5a4]
Stack pops: 1
Stack additions: [S0, V592]
Exit stack: [V11, 0x5a4, V592]

================================

Block 0x8e9
[0x8e9:0x8ee]
---
Predecessors: [0x5c9]
Successors: [0x5d1]
---
0x8e9 JUMPDEST
0x8ea PUSH1 0x6
0x8ec SLOAD
0x8ed DUP2
0x8ee JUMP
---
0x8e9: JUMPDEST 
0x8ea: V593 = 0x6
0x8ec: V594 = S[0x6]
0x8ee: JUMP 0x5d1
---
Entry stack: [V11, 0x5d1]
Stack pops: 1
Stack additions: [S0, V594]
Exit stack: [V11, 0x5d1, V594]

================================

Block 0x8ef
[0x8ef:0x8fc]
---
Predecessors: [0x5f2]
Successors: [0x8fd, 0xcda]
---
0x8ef JUMPDEST
0x8f0 PUSH1 0x0
0x8f2 PUSH1 0x3
0x8f4 SLOAD
0x8f5 TIMESTAMP
0x8f6 LT
0x8f7 ISZERO
0x8f8 ISZERO
0x8f9 PUSH2 0xcda
0x8fc JUMPI
---
0x8ef: JUMPDEST 
0x8f0: V595 = 0x0
0x8f2: V596 = 0x3
0x8f4: V597 = S[0x3]
0x8f5: V598 = TIMESTAMP
0x8f6: V599 = LT V598 V597
0x8f7: V600 = ISZERO V599
0x8f8: V601 = ISZERO V600
0x8f9: V602 = 0xcda
0x8fc: JUMPI 0xcda V601
---
Entry stack: [V11, 0x5fa]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x5fa, 0x0]

================================

Block 0x8fd
[0x8fd:0x912]
---
Predecessors: [0x8ef]
Successors: [0x913, 0xaa0]
---
0x8fd PUSH1 0x9
0x8ff PUSH1 0x0
0x901 SWAP1
0x902 SLOAD
0x903 SWAP1
0x904 PUSH2 0x100
0x907 EXP
0x908 SWAP1
0x909 DIV
0x90a PUSH1 0xff
0x90c AND
0x90d ISZERO
0x90e ISZERO
0x90f PUSH2 0xaa0
0x912 JUMPI
---
0x8fd: V603 = 0x9
0x8ff: V604 = 0x0
0x902: V605 = S[0x9]
0x904: V606 = 0x100
0x907: V607 = EXP 0x100 0x0
0x909: V608 = DIV V605 0x1
0x90a: V609 = 0xff
0x90c: V610 = AND 0xff V608
0x90d: V611 = ISZERO V610
0x90e: V612 = ISZERO V611
0x90f: V613 = 0xaa0
0x912: JUMPI 0xaa0 V612
---
Entry stack: [V11, 0x5fa, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5fa, 0x0]

================================

Block 0x913
[0x913:0x9a2]
---
Predecessors: [0x8fd]
Successors: [0x9a3, 0xa9f]
---
0x913 PUSH1 0x8
0x915 PUSH1 0x0
0x917 CALLER
0x918 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92d AND
0x92e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x943 AND
0x944 DUP2
0x945 MSTORE
0x946 PUSH1 0x20
0x948 ADD
0x949 SWAP1
0x94a DUP2
0x94b MSTORE
0x94c PUSH1 0x20
0x94e ADD
0x94f PUSH1 0x0
0x951 SHA3
0x952 SLOAD
0x953 SWAP1
0x954 POP
0x955 PUSH1 0x0
0x957 PUSH1 0x8
0x959 PUSH1 0x0
0x95b CALLER
0x95c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x971 AND
0x972 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x987 AND
0x988 DUP2
0x989 MSTORE
0x98a PUSH1 0x20
0x98c ADD
0x98d SWAP1
0x98e DUP2
0x98f MSTORE
0x990 PUSH1 0x20
0x992 ADD
0x993 PUSH1 0x0
0x995 SHA3
0x996 DUP2
0x997 SWAP1
0x998 SSTORE
0x999 POP
0x99a PUSH1 0x0
0x99c DUP2
0x99d GT
0x99e ISZERO
0x99f PUSH2 0xa9f
0x9a2 JUMPI
---
0x913: V614 = 0x8
0x915: V615 = 0x0
0x917: V616 = CALLER
0x918: V617 = 0xffffffffffffffffffffffffffffffffffffffff
0x92d: V618 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0x92e: V619 = 0xffffffffffffffffffffffffffffffffffffffff
0x943: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V618
0x945: M[0x0] = V620
0x946: V621 = 0x20
0x948: V622 = ADD 0x20 0x0
0x94b: M[0x20] = 0x8
0x94c: V623 = 0x20
0x94e: V624 = ADD 0x20 0x20
0x94f: V625 = 0x0
0x951: V626 = SHA3 0x0 0x40
0x952: V627 = S[V626]
0x955: V628 = 0x0
0x957: V629 = 0x8
0x959: V630 = 0x0
0x95b: V631 = CALLER
0x95c: V632 = 0xffffffffffffffffffffffffffffffffffffffff
0x971: V633 = AND 0xffffffffffffffffffffffffffffffffffffffff V631
0x972: V634 = 0xffffffffffffffffffffffffffffffffffffffff
0x987: V635 = AND 0xffffffffffffffffffffffffffffffffffffffff V633
0x989: M[0x0] = V635
0x98a: V636 = 0x20
0x98c: V637 = ADD 0x20 0x0
0x98f: M[0x20] = 0x8
0x990: V638 = 0x20
0x992: V639 = ADD 0x20 0x20
0x993: V640 = 0x0
0x995: V641 = SHA3 0x0 0x40
0x998: S[V641] = 0x0
0x99a: V642 = 0x0
0x99d: V643 = GT V627 0x0
0x99e: V644 = ISZERO V643
0x99f: V645 = 0xa9f
0x9a2: JUMPI 0xa9f V644
---
Entry stack: [V11, 0x5fa, 0x0]
Stack pops: 1
Stack additions: [V627]
Exit stack: [V11, 0x5fa, V627]

================================

Block 0x9a3
[0x9a3:0x9dc]
---
Predecessors: [0x913]
Successors: [0x9dd, 0xa59]
---
0x9a3 CALLER
0x9a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b9 AND
0x9ba PUSH2 0x8fc
0x9bd DUP3
0x9be SWAP1
0x9bf DUP2
0x9c0 ISZERO
0x9c1 MUL
0x9c2 SWAP1
0x9c3 PUSH1 0x40
0x9c5 MLOAD
0x9c6 PUSH1 0x0
0x9c8 PUSH1 0x40
0x9ca MLOAD
0x9cb DUP1
0x9cc DUP4
0x9cd SUB
0x9ce DUP2
0x9cf DUP6
0x9d0 DUP9
0x9d1 DUP9
0x9d2 CALL
0x9d3 SWAP4
0x9d4 POP
0x9d5 POP
0x9d6 POP
0x9d7 POP
0x9d8 ISZERO
0x9d9 PUSH2 0xa59
0x9dc JUMPI
---
0x9a3: V646 = CALLER
0x9a4: V647 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b9: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff V646
0x9ba: V649 = 0x8fc
0x9c0: V650 = ISZERO V627
0x9c1: V651 = MUL V650 0x8fc
0x9c3: V652 = 0x40
0x9c5: V653 = M[0x40]
0x9c6: V654 = 0x0
0x9c8: V655 = 0x40
0x9ca: V656 = M[0x40]
0x9cd: V657 = SUB V653 V656
0x9d2: V658 = CALL V651 V648 V627 V656 V657 V656 0x0
0x9d8: V659 = ISZERO V658
0x9d9: V660 = 0xa59
0x9dc: JUMPI 0xa59 V659
---
Entry stack: [V11, 0x5fa, V627]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x5fa, V627]

================================

Block 0x9dd
[0x9dd:0xa58]
---
Predecessors: [0x9a3]
Successors: [0xa9e]
---
0x9dd PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x9fe CALLER
0x9ff DUP3
0xa00 PUSH1 0x0
0xa02 PUSH1 0x40
0xa04 MLOAD
0xa05 DUP1
0xa06 DUP5
0xa07 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1c AND
0xa1d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa32 AND
0xa33 DUP2
0xa34 MSTORE
0xa35 PUSH1 0x20
0xa37 ADD
0xa38 DUP4
0xa39 DUP2
0xa3a MSTORE
0xa3b PUSH1 0x20
0xa3d ADD
0xa3e DUP3
0xa3f ISZERO
0xa40 ISZERO
0xa41 ISZERO
0xa42 ISZERO
0xa43 DUP2
0xa44 MSTORE
0xa45 PUSH1 0x20
0xa47 ADD
0xa48 SWAP4
0xa49 POP
0xa4a POP
0xa4b POP
0xa4c POP
0xa4d PUSH1 0x40
0xa4f MLOAD
0xa50 DUP1
0xa51 SWAP2
0xa52 SUB
0xa53 SWAP1
0xa54 LOG1
0xa55 PUSH2 0xa9e
0xa58 JUMP
---
0x9dd: V661 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x9fe: V662 = CALLER
0xa00: V663 = 0x0
0xa02: V664 = 0x40
0xa04: V665 = M[0x40]
0xa07: V666 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1c: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V662
0xa1d: V668 = 0xffffffffffffffffffffffffffffffffffffffff
0xa32: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff V667
0xa34: M[V665] = V669
0xa35: V670 = 0x20
0xa37: V671 = ADD 0x20 V665
0xa3a: M[V671] = V627
0xa3b: V672 = 0x20
0xa3d: V673 = ADD 0x20 V671
0xa3f: V674 = ISZERO 0x0
0xa40: V675 = ISZERO 0x1
0xa41: V676 = ISZERO 0x0
0xa42: V677 = ISZERO 0x1
0xa44: M[V673] = 0x0
0xa45: V678 = 0x20
0xa47: V679 = ADD 0x20 V673
0xa4d: V680 = 0x40
0xa4f: V681 = M[0x40]
0xa52: V682 = SUB V679 V681
0xa54: LOG V681 V682 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0xa55: V683 = 0xa9e
0xa58: JUMP 0xa9e
---
Entry stack: [V11, 0x5fa, V627]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x5fa, V627]

================================

Block 0xa59
[0xa59:0xa9d]
---
Predecessors: [0x9a3]
Successors: [0xa9e]
---
0xa59 JUMPDEST
0xa5a DUP1
0xa5b PUSH1 0x8
0xa5d PUSH1 0x0
0xa5f CALLER
0xa60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa75 AND
0xa76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8b AND
0xa8c DUP2
0xa8d MSTORE
0xa8e PUSH1 0x20
0xa90 ADD
0xa91 SWAP1
0xa92 DUP2
0xa93 MSTORE
0xa94 PUSH1 0x20
0xa96 ADD
0xa97 PUSH1 0x0
0xa99 SHA3
0xa9a DUP2
0xa9b SWAP1
0xa9c SSTORE
0xa9d POP
---
0xa59: JUMPDEST 
0xa5b: V684 = 0x8
0xa5d: V685 = 0x0
0xa5f: V686 = CALLER
0xa60: V687 = 0xffffffffffffffffffffffffffffffffffffffff
0xa75: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff V686
0xa76: V689 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8b: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff V688
0xa8d: M[0x0] = V690
0xa8e: V691 = 0x20
0xa90: V692 = ADD 0x20 0x0
0xa93: M[0x20] = 0x8
0xa94: V693 = 0x20
0xa96: V694 = ADD 0x20 0x20
0xa97: V695 = 0x0
0xa99: V696 = SHA3 0x0 0x40
0xa9c: S[V696] = V627
---
Entry stack: [V11, 0x5fa, V627]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x5fa, V627]

================================

Block 0xa9e
[0xa9e:0xa9e]
---
Predecessors: [0x9dd, 0xa59]
Successors: [0xa9f]
---
0xa9e JUMPDEST
---
0xa9e: JUMPDEST 
---
Entry stack: [V11, 0x5fa, V627]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5fa, V627]

================================

Block 0xa9f
[0xa9f:0xa9f]
---
Predecessors: [0x913, 0xa9e]
Successors: [0xaa0]
---
0xa9f JUMPDEST
---
0xa9f: JUMPDEST 
---
Entry stack: [V11, 0x5fa, V627]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5fa, V627]

================================

Block 0xaa0
[0xaa0:0xab6]
---
Predecessors: [0x8fd, 0xa9f]
Successors: [0xab7, 0xb08]
---
0xaa0 JUMPDEST
0xaa1 PUSH1 0x9
0xaa3 PUSH1 0x0
0xaa5 SWAP1
0xaa6 SLOAD
0xaa7 SWAP1
0xaa8 PUSH2 0x100
0xaab EXP
0xaac SWAP1
0xaad DIV
0xaae PUSH1 0xff
0xab0 AND
0xab1 DUP1
0xab2 ISZERO
0xab3 PUSH2 0xb08
0xab6 JUMPI
---
0xaa0: JUMPDEST 
0xaa1: V697 = 0x9
0xaa3: V698 = 0x0
0xaa6: V699 = S[0x9]
0xaa8: V700 = 0x100
0xaab: V701 = EXP 0x100 0x0
0xaad: V702 = DIV V699 0x1
0xaae: V703 = 0xff
0xab0: V704 = AND 0xff V702
0xab2: V705 = ISZERO V704
0xab3: V706 = 0xb08
0xab6: JUMPI 0xb08 V705
---
Entry stack: [V11, 0x5fa, S0]
Stack pops: 0
Stack additions: [V704]
Exit stack: [V11, 0x5fa, S0, V704]

================================

Block 0xab7
[0xab7:0xb07]
---
Predecessors: [0xaa0]
Successors: [0xb08]
---
0xab7 POP
0xab8 CALLER
0xab9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xace AND
0xacf PUSH1 0x0
0xad1 DUP1
0xad2 SWAP1
0xad3 SLOAD
0xad4 SWAP1
0xad5 PUSH2 0x100
0xad8 EXP
0xad9 SWAP1
0xada DIV
0xadb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf0 AND
0xaf1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb06 AND
0xb07 EQ
---
0xab8: V707 = CALLER
0xab9: V708 = 0xffffffffffffffffffffffffffffffffffffffff
0xace: V709 = AND 0xffffffffffffffffffffffffffffffffffffffff V707
0xacf: V710 = 0x0
0xad3: V711 = S[0x0]
0xad5: V712 = 0x100
0xad8: V713 = EXP 0x100 0x0
0xada: V714 = DIV V711 0x1
0xadb: V715 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf0: V716 = AND 0xffffffffffffffffffffffffffffffffffffffff V714
0xaf1: V717 = 0xffffffffffffffffffffffffffffffffffffffff
0xb06: V718 = AND 0xffffffffffffffffffffffffffffffffffffffff V716
0xb07: V719 = EQ V718 V709
---
Entry stack: [V11, 0x5fa, S1, V704]
Stack pops: 1
Stack additions: [V719]
Exit stack: [V11, 0x5fa, S1, V719]

================================

Block 0xb08
[0xb08:0xb0d]
---
Predecessors: [0xaa0, 0xab7]
Successors: [0xb0e, 0xcd9]
---
0xb08 JUMPDEST
0xb09 ISZERO
0xb0a PUSH2 0xcd9
0xb0d JUMPI
---
0xb08: JUMPDEST 
0xb09: V720 = ISZERO S0
0xb0a: V721 = 0xcd9
0xb0d: JUMPI 0xcd9 V720
---
Entry stack: [V11, 0x5fa, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x5fa, S1]

================================

Block 0xb0e
[0xb0e:0xb6a]
---
Predecessors: [0xb08]
Successors: [0xb6b, 0xcbc]
---
0xb0e PUSH1 0x0
0xb10 DUP1
0xb11 SWAP1
0xb12 SLOAD
0xb13 SWAP1
0xb14 PUSH2 0x100
0xb17 EXP
0xb18 SWAP1
0xb19 DIV
0xb1a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2f AND
0xb30 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb45 AND
0xb46 PUSH2 0x8fc
0xb49 PUSH1 0x2
0xb4b SLOAD
0xb4c SWAP1
0xb4d DUP2
0xb4e ISZERO
0xb4f MUL
0xb50 SWAP1
0xb51 PUSH1 0x40
0xb53 MLOAD
0xb54 PUSH1 0x0
0xb56 PUSH1 0x40
0xb58 MLOAD
0xb59 DUP1
0xb5a DUP4
0xb5b SUB
0xb5c DUP2
0xb5d DUP6
0xb5e DUP9
0xb5f DUP9
0xb60 CALL
0xb61 SWAP4
0xb62 POP
0xb63 POP
0xb64 POP
0xb65 POP
0xb66 ISZERO
0xb67 PUSH2 0xcbc
0xb6a JUMPI
---
0xb0e: V722 = 0x0
0xb12: V723 = S[0x0]
0xb14: V724 = 0x100
0xb17: V725 = EXP 0x100 0x0
0xb19: V726 = DIV V723 0x1
0xb1a: V727 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2f: V728 = AND 0xffffffffffffffffffffffffffffffffffffffff V726
0xb30: V729 = 0xffffffffffffffffffffffffffffffffffffffff
0xb45: V730 = AND 0xffffffffffffffffffffffffffffffffffffffff V728
0xb46: V731 = 0x8fc
0xb49: V732 = 0x2
0xb4b: V733 = S[0x2]
0xb4e: V734 = ISZERO V733
0xb4f: V735 = MUL V734 0x8fc
0xb51: V736 = 0x40
0xb53: V737 = M[0x40]
0xb54: V738 = 0x0
0xb56: V739 = 0x40
0xb58: V740 = M[0x40]
0xb5b: V741 = SUB V737 V740
0xb60: V742 = CALL V735 V730 V733 V740 V741 V740 0x0
0xb66: V743 = ISZERO V742
0xb67: V744 = 0xcbc
0xb6a: JUMPI 0xcbc V743
---
Entry stack: [V11, 0x5fa, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5fa, S0]

================================

Block 0xb6b
[0xb6b:0xb75]
---
Predecessors: [0xb0e]
Successors: [0xb76, 0xc1c]
---
0xb6b PUSH1 0x0
0xb6d PUSH1 0x6
0xb6f SLOAD
0xb70 GT
0xb71 ISZERO
0xb72 PUSH2 0xc1c
0xb75 JUMPI
---
0xb6b: V745 = 0x0
0xb6d: V746 = 0x6
0xb6f: V747 = S[0x6]
0xb70: V748 = GT V747 0x0
0xb71: V749 = ISZERO V748
0xb72: V750 = 0xc1c
0xb75: JUMPI 0xc1c V749
---
Entry stack: [V11, 0x5fa, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5fa, S0]

================================

Block 0xb76
[0xb76:0xc02]
---
Predecessors: [0xb6b]
Successors: [0xc03, 0xc07]
---
0xb76 PUSH1 0x7
0xb78 PUSH1 0x0
0xb7a SWAP1
0xb7b SLOAD
0xb7c SWAP1
0xb7d PUSH2 0x100
0xb80 EXP
0xb81 SWAP1
0xb82 DIV
0xb83 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb98 AND
0xb99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbae AND
0xbaf PUSH4 0x42966c68
0xbb4 PUSH1 0x6
0xbb6 SLOAD
0xbb7 PUSH1 0x40
0xbb9 MLOAD
0xbba DUP3
0xbbb PUSH4 0xffffffff
0xbc0 AND
0xbc1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xbdf MUL
0xbe0 DUP2
0xbe1 MSTORE
0xbe2 PUSH1 0x4
0xbe4 ADD
0xbe5 DUP1
0xbe6 DUP3
0xbe7 DUP2
0xbe8 MSTORE
0xbe9 PUSH1 0x20
0xbeb ADD
0xbec SWAP2
0xbed POP
0xbee POP
0xbef PUSH1 0x0
0xbf1 PUSH1 0x40
0xbf3 MLOAD
0xbf4 DUP1
0xbf5 DUP4
0xbf6 SUB
0xbf7 DUP2
0xbf8 PUSH1 0x0
0xbfa DUP8
0xbfb DUP1
0xbfc EXTCODESIZE
0xbfd ISZERO
0xbfe ISZERO
0xbff PUSH2 0xc07
0xc02 JUMPI
---
0xb76: V751 = 0x7
0xb78: V752 = 0x0
0xb7b: V753 = S[0x7]
0xb7d: V754 = 0x100
0xb80: V755 = EXP 0x100 0x0
0xb82: V756 = DIV V753 0x1
0xb83: V757 = 0xffffffffffffffffffffffffffffffffffffffff
0xb98: V758 = AND 0xffffffffffffffffffffffffffffffffffffffff V756
0xb99: V759 = 0xffffffffffffffffffffffffffffffffffffffff
0xbae: V760 = AND 0xffffffffffffffffffffffffffffffffffffffff V758
0xbaf: V761 = 0x42966c68
0xbb4: V762 = 0x6
0xbb6: V763 = S[0x6]
0xbb7: V764 = 0x40
0xbb9: V765 = M[0x40]
0xbbb: V766 = 0xffffffff
0xbc0: V767 = AND 0xffffffff 0x42966c68
0xbc1: V768 = 0x100000000000000000000000000000000000000000000000000000000
0xbdf: V769 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x42966c68
0xbe1: M[V765] = 0x42966c6800000000000000000000000000000000000000000000000000000000
0xbe2: V770 = 0x4
0xbe4: V771 = ADD 0x4 V765
0xbe8: M[V771] = V763
0xbe9: V772 = 0x20
0xbeb: V773 = ADD 0x20 V771
0xbef: V774 = 0x0
0xbf1: V775 = 0x40
0xbf3: V776 = M[0x40]
0xbf6: V777 = SUB V773 V776
0xbf8: V778 = 0x0
0xbfc: V779 = EXTCODESIZE V760
0xbfd: V780 = ISZERO V779
0xbfe: V781 = ISZERO V780
0xbff: V782 = 0xc07
0xc02: JUMPI 0xc07 V781
---
Entry stack: [V11, 0x5fa, S0]
Stack pops: 0
Stack additions: [V760, 0x42966c68, V773, 0x0, V776, V777, V776, 0x0, V760]
Exit stack: [V11, 0x5fa, S0, V760, 0x42966c68, V773, 0x0, V776, V777, V776, 0x0, V760]

================================

Block 0xc03
[0xc03:0xc06]
---
Predecessors: [0xb76]
Successors: []
---
0xc03 PUSH1 0x0
0xc05 DUP1
0xc06 REVERT
---
0xc03: V783 = 0x0
0xc06: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5fa, S9, V760, 0x42966c68, V773, 0x0, V776, V777, V776, 0x0, V760]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5fa, S9, V760, 0x42966c68, V773, 0x0, V776, V777, V776, 0x0, V760]

================================

Block 0xc07
[0xc07:0xc13]
---
Predecessors: [0xb76]
Successors: [0xc14, 0xc18]
---
0xc07 JUMPDEST
0xc08 PUSH2 0x2c6
0xc0b GAS
0xc0c SUB
0xc0d CALL
0xc0e ISZERO
0xc0f ISZERO
0xc10 PUSH2 0xc18
0xc13 JUMPI
---
0xc07: JUMPDEST 
0xc08: V784 = 0x2c6
0xc0b: V785 = GAS
0xc0c: V786 = SUB V785 0x2c6
0xc0d: V787 = CALL V786 V760 0x0 V776 V777 V776 0x0
0xc0e: V788 = ISZERO V787
0xc0f: V789 = ISZERO V788
0xc10: V790 = 0xc18
0xc13: JUMPI 0xc18 V789
---
Entry stack: [V11, 0x5fa, S9, V760, 0x42966c68, V773, 0x0, V776, V777, V776, 0x0, V760]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x5fa, S9, V760, 0x42966c68, V773]

================================

Block 0xc14
[0xc14:0xc17]
---
Predecessors: [0xc07]
Successors: []
---
0xc14 PUSH1 0x0
0xc16 DUP1
0xc17 REVERT
---
0xc14: V791 = 0x0
0xc17: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5fa, S3, V760, 0x42966c68, V773]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5fa, S3, V760, 0x42966c68, V773]

================================

Block 0xc18
[0xc18:0xc1b]
---
Predecessors: [0xc07]
Successors: [0xc1c]
---
0xc18 JUMPDEST
0xc19 POP
0xc1a POP
0xc1b POP
---
0xc18: JUMPDEST 
---
Entry stack: [V11, 0x5fa, S3, V760, 0x42966c68, V773]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x5fa, S3]

================================

Block 0xc1c
[0xc1c:0xcbb]
---
Predecessors: [0xb6b, 0xc18]
Successors: [0xcd8]
---
0xc1c JUMPDEST
0xc1d PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0xc3e PUSH1 0x0
0xc40 DUP1
0xc41 SWAP1
0xc42 SLOAD
0xc43 SWAP1
0xc44 PUSH2 0x100
0xc47 EXP
0xc48 SWAP1
0xc49 DIV
0xc4a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5f AND
0xc60 PUSH1 0x2
0xc62 SLOAD
0xc63 PUSH1 0x0
0xc65 PUSH1 0x40
0xc67 MLOAD
0xc68 DUP1
0xc69 DUP5
0xc6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7f AND
0xc80 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc95 AND
0xc96 DUP2
0xc97 MSTORE
0xc98 PUSH1 0x20
0xc9a ADD
0xc9b DUP4
0xc9c DUP2
0xc9d MSTORE
0xc9e PUSH1 0x20
0xca0 ADD
0xca1 DUP3
0xca2 ISZERO
0xca3 ISZERO
0xca4 ISZERO
0xca5 ISZERO
0xca6 DUP2
0xca7 MSTORE
0xca8 PUSH1 0x20
0xcaa ADD
0xcab SWAP4
0xcac POP
0xcad POP
0xcae POP
0xcaf POP
0xcb0 PUSH1 0x40
0xcb2 MLOAD
0xcb3 DUP1
0xcb4 SWAP2
0xcb5 SUB
0xcb6 SWAP1
0xcb7 LOG1
0xcb8 PUSH2 0xcd8
0xcbb JUMP
---
0xc1c: JUMPDEST 
0xc1d: V792 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0xc3e: V793 = 0x0
0xc42: V794 = S[0x0]
0xc44: V795 = 0x100
0xc47: V796 = EXP 0x100 0x0
0xc49: V797 = DIV V794 0x1
0xc4a: V798 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5f: V799 = AND 0xffffffffffffffffffffffffffffffffffffffff V797
0xc60: V800 = 0x2
0xc62: V801 = S[0x2]
0xc63: V802 = 0x0
0xc65: V803 = 0x40
0xc67: V804 = M[0x40]
0xc6a: V805 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7f: V806 = AND 0xffffffffffffffffffffffffffffffffffffffff V799
0xc80: V807 = 0xffffffffffffffffffffffffffffffffffffffff
0xc95: V808 = AND 0xffffffffffffffffffffffffffffffffffffffff V806
0xc97: M[V804] = V808
0xc98: V809 = 0x20
0xc9a: V810 = ADD 0x20 V804
0xc9d: M[V810] = V801
0xc9e: V811 = 0x20
0xca0: V812 = ADD 0x20 V810
0xca2: V813 = ISZERO 0x0
0xca3: V814 = ISZERO 0x1
0xca4: V815 = ISZERO 0x0
0xca5: V816 = ISZERO 0x1
0xca7: M[V812] = 0x0
0xca8: V817 = 0x20
0xcaa: V818 = ADD 0x20 V812
0xcb0: V819 = 0x40
0xcb2: V820 = M[0x40]
0xcb5: V821 = SUB V818 V820
0xcb7: LOG V820 V821 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0xcb8: V822 = 0xcd8
0xcbb: JUMP 0xcd8
---
Entry stack: [V11, 0x5fa, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5fa, S0]

================================

Block 0xcbc
[0xcbc:0xcd7]
---
Predecessors: [0xb0e]
Successors: [0xcd8]
---
0xcbc JUMPDEST
0xcbd PUSH1 0x0
0xcbf PUSH1 0x9
0xcc1 PUSH1 0x0
0xcc3 PUSH2 0x100
0xcc6 EXP
0xcc7 DUP2
0xcc8 SLOAD
0xcc9 DUP2
0xcca PUSH1 0xff
0xccc MUL
0xccd NOT
0xcce AND
0xccf SWAP1
0xcd0 DUP4
0xcd1 ISZERO
0xcd2 ISZERO
0xcd3 MUL
0xcd4 OR
0xcd5 SWAP1
0xcd6 SSTORE
0xcd7 POP
---
0xcbc: JUMPDEST 
0xcbd: V823 = 0x0
0xcbf: V824 = 0x9
0xcc1: V825 = 0x0
0xcc3: V826 = 0x100
0xcc6: V827 = EXP 0x100 0x0
0xcc8: V828 = S[0x9]
0xcca: V829 = 0xff
0xccc: V830 = MUL 0xff 0x1
0xccd: V831 = NOT 0xff
0xcce: V832 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V828
0xcd1: V833 = ISZERO 0x0
0xcd2: V834 = ISZERO 0x1
0xcd3: V835 = MUL 0x0 0x1
0xcd4: V836 = OR 0x0 V832
0xcd6: S[0x9] = V836
---
Entry stack: [V11, 0x5fa, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5fa, S0]

================================

Block 0xcd8
[0xcd8:0xcd8]
---
Predecessors: [0xc1c, 0xcbc]
Successors: [0xcd9]
---
0xcd8 JUMPDEST
---
0xcd8: JUMPDEST 
---
Entry stack: [V11, 0x5fa, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5fa, S0]

================================

Block 0xcd9
[0xcd9:0xcd9]
---
Predecessors: [0xb08, 0xcd8]
Successors: [0xcda]
---
0xcd9 JUMPDEST
---
0xcd9: JUMPDEST 
---
Entry stack: [V11, 0x5fa, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5fa, S0]

================================

Block 0xcda
[0xcda:0xcdc]
---
Predecessors: [0x8ef, 0xcd9]
Successors: [0x5fa]
---
0xcda JUMPDEST
0xcdb POP
0xcdc JUMP
---
0xcda: JUMPDEST 
0xcdc: JUMP 0x5fa
---
Entry stack: [V11, 0x5fa, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xcdd
[0xcdd:0xd17]
---
Predecessors: []
Successors: []
---
0xcdd STOP
0xcde LOG1
0xcdf PUSH6 0x627a7a723058
0xce6 SHA3
0xce7 MISSING 0xd4
0xce8 MISSING 0xc1
0xce9 MISSING 0xa9
0xcea MISSING 0xb5
0xceb SLOAD
0xcec MISSING 0x4f
0xced DUP16
0xcee MISSING 0x2d
0xcef MISSING 0xf9
0xcf0 CREATE
0xcf1 MISSING 0x29
0xcf2 CALLVALUE
0xcf3 MISSING 0xbe
0xcf4 PUSH1 0x9e
0xcf6 MISSING 0xc1
0xcf7 SDIV
0xcf8 MULMOD
0xcf9 DUP16
0xcfa MISSING 0xc6
0xcfb MISSING 0xb7
0xcfc MISSING 0xd3
0xcfd LOG0
0xcfe PUSH25 0x2dc9547c987ab40d0029
---
0xcdd: STOP 
0xcde: LOG S0 S1 S2
0xcdf: V837 = 0x627a7a723058
0xce6: V838 = SHA3 0x627a7a723058 S3
0xce7: MISSING 0xd4
0xce8: MISSING 0xc1
0xce9: MISSING 0xa9
0xcea: MISSING 0xb5
0xceb: V839 = S[S0]
0xcec: MISSING 0x4f
0xcee: MISSING 0x2d
0xcef: MISSING 0xf9
0xcf0: V840 = CREATE S0 S1 S2
0xcf1: MISSING 0x29
0xcf2: V841 = CALLVALUE
0xcf3: MISSING 0xbe
0xcf4: V842 = 0x9e
0xcf6: MISSING 0xc1
0xcf7: V843 = SDIV S0 S1
0xcf8: V844 = MULMOD V843 S2 S3
0xcfa: MISSING 0xc6
0xcfb: MISSING 0xb7
0xcfc: MISSING 0xd3
0xcfd: LOG S0 S1
0xcfe: V845 = 0x2dc9547c987ab40d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V838, V839, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V840, V841, 0x9e, S18, V844, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, 0x2dc9547c987ab40d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x3a3
Exit block: 0x3b6
Body: 0x3a3, 0x3aa, 0x3ae, 0x3b6, 0x5fc, 0x608, 0x65d, 0x66a, 0x713, 0x72f, 0x730

Function 1:
Public function signature: 0x12aef8c3
Entry block: 0x3b8
Exit block: 0x3cb
Body: 0x3b8, 0x3bf, 0x3c3, 0x3cb, 0x732

Function 2:
Public function signature: 0x29dcb0cf
Entry block: 0x3e1
Exit block: 0x3f4
Body: 0x3e1, 0x3e8, 0x3ec, 0x3f4, 0x738

Function 3:
Public function signature: 0x38af3eed
Entry block: 0x40a
Exit block: 0x41d
Body: 0x40a, 0x411, 0x415, 0x41d, 0x73e

Function 4:
Public function signature: 0x43a5826c
Entry block: 0x45f
Exit block: 0x472
Body: 0x45f, 0x466, 0x46a, 0x472, 0x763, 0x7b9, 0x884

Function 5:
Public function signature: 0x6e66f6e9
Entry block: 0x474
Exit block: 0x487
Body: 0x474, 0x47b, 0x47f, 0x487, 0x886

Function 6:
Public function signature: 0x70a08231
Entry block: 0x4c9
Exit block: 0x500
Body: 0x4c9, 0x4d0, 0x4d4, 0x500, 0x8ac

Function 7:
Public function signature: 0x7a3a0e84
Entry block: 0x516
Exit block: 0x529
Body: 0x516, 0x51d, 0x521, 0x529, 0x8c4

Function 8:
Public function signature: 0x7b3e5e7b
Entry block: 0x53f
Exit block: 0x552
Body: 0x53f, 0x546, 0x54a, 0x552, 0x8ca

Function 9:
Public function signature: 0xa035b1fe
Entry block: 0x568
Exit block: 0x57b
Body: 0x568, 0x56f, 0x573, 0x57b, 0x8d0

Function 10:
Public function signature: 0xccb07cef
Entry block: 0x591
Exit block: 0x5a4
Body: 0x591, 0x598, 0x59c, 0x5a4, 0x8d6

Function 11:
Public function signature: 0xe4f2dbd8
Entry block: 0x5be
Exit block: 0x5d1
Body: 0x5be, 0x5c5, 0x5c9, 0x5d1, 0x8e9

Function 12:
Public function signature: 0xfd6b7ef8
Entry block: 0x5e7
Exit block: 0xc14
Body: 0x5e7, 0x5ee, 0x5f2, 0x5fa, 0x8ef, 0x8fd, 0x913, 0x9a3, 0x9dd, 0xa59, 0xa9e, 0xa9f, 0xaa0, 0xab7, 0xb08, 0xb0e, 0xb6b, 0xb76, 0xc03, 0xc07, 0xc14, 0xc18, 0xc1c, 0xcbc, 0xcd8, 0xcd9, 0xcda

Function 13:
Public fallback function
Entry block: 0xc5
Exit block: 0x310
Body: 0xc5, 0xe0, 0xe1, 0xf2, 0xf3, 0x161, 0x22c, 0x23b, 0x23c, 0x2ff, 0x303, 0x310, 0x314

