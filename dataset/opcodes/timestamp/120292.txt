Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8a
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8a
0xc: JUMPI 0x8a V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x2e0]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x1cb3b20
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x2e0
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x1cb3b20
0x22: V15 = EQ V13 0x1cb3b20
0x23: V16 = 0x2e0
0x26: JUMPI 0x2e0 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x2f5]
---
0x27 DUP1
0x28 PUSH4 0x29dcb0cf
0x2d EQ
0x2e PUSH2 0x2f5
0x31 JUMPI
---
0x28: V17 = 0x29dcb0cf
0x2d: V18 = EQ 0x29dcb0cf V13
0x2e: V19 = 0x2f5
0x31: JUMPI 0x2f5 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x31a]
---
0x32 DUP1
0x33 PUSH4 0x38af3eed
0x38 EQ
0x39 PUSH2 0x31a
0x3c JUMPI
---
0x33: V20 = 0x38af3eed
0x38: V21 = EQ 0x38af3eed V13
0x39: V22 = 0x31a
0x3c: JUMPI 0x31a V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x349]
---
0x3d DUP1
0x3e PUSH4 0x6e66f6e9
0x43 EQ
0x44 PUSH2 0x349
0x47 JUMPI
---
0x3e: V23 = 0x6e66f6e9
0x43: V24 = EQ 0x6e66f6e9 V13
0x44: V25 = 0x349
0x47: JUMPI 0x349 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x35c]
---
0x48 DUP1
0x49 PUSH4 0x70a08231
0x4e EQ
0x4f PUSH2 0x35c
0x52 JUMPI
---
0x49: V26 = 0x70a08231
0x4e: V27 = EQ 0x70a08231 V13
0x4f: V28 = 0x35c
0x52: JUMPI 0x35c V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x37b]
---
0x53 DUP1
0x54 PUSH4 0x7a3a0e84
0x59 EQ
0x5a PUSH2 0x37b
0x5d JUMPI
---
0x54: V29 = 0x7a3a0e84
0x59: V30 = EQ 0x7a3a0e84 V13
0x5a: V31 = 0x37b
0x5d: JUMPI 0x37b V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x38e]
---
0x5e DUP1
0x5f PUSH4 0x7b3e5e7b
0x64 EQ
0x65 PUSH2 0x38e
0x68 JUMPI
---
0x5f: V32 = 0x7b3e5e7b
0x64: V33 = EQ 0x7b3e5e7b V13
0x65: V34 = 0x38e
0x68: JUMPI 0x38e V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x3a1]
---
0x69 DUP1
0x6a PUSH4 0x8da58897
0x6f EQ
0x70 PUSH2 0x3a1
0x73 JUMPI
---
0x6a: V35 = 0x8da58897
0x6f: V36 = EQ 0x8da58897 V13
0x70: V37 = 0x3a1
0x73: JUMPI 0x3a1 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x3b4]
---
0x74 DUP1
0x75 PUSH4 0xa035b1fe
0x7a EQ
0x7b PUSH2 0x3b4
0x7e JUMPI
---
0x75: V38 = 0xa035b1fe
0x7a: V39 = EQ 0xa035b1fe V13
0x7b: V40 = 0x3b4
0x7e: JUMPI 0x3b4 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x3c7]
---
0x7f DUP1
0x80 PUSH4 0xfd6b7ef8
0x85 EQ
0x86 PUSH2 0x3c7
0x89 JUMPI
---
0x80: V41 = 0xfd6b7ef8
0x85: V42 = EQ 0xfd6b7ef8 V13
0x86: V43 = 0x3c7
0x89: JUMPI 0x3c7 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x9d]
---
Predecessors: [0x0, 0x7f]
Successors: [0x9e, 0xa2]
---
0x8a JUMPDEST
0x8b PUSH1 0x7
0x8d SLOAD
0x8e PUSH1 0x0
0x90 SWAP1
0x91 PUSH2 0x100
0x94 SWAP1
0x95 DIV
0x96 PUSH1 0xff
0x98 AND
0x99 ISZERO
0x9a PUSH2 0xa2
0x9d JUMPI
---
0x8a: JUMPDEST 
0x8b: V44 = 0x7
0x8d: V45 = S[0x7]
0x8e: V46 = 0x0
0x91: V47 = 0x100
0x95: V48 = DIV V45 0x100
0x96: V49 = 0xff
0x98: V50 = AND 0xff V48
0x99: V51 = ISZERO V50
0x9a: V52 = 0xa2
0x9d: JUMPI 0xa2 V51
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x0]

================================

Block 0x9e
[0x9e:0xa1]
---
Predecessors: [0x8a]
Successors: []
---
0x9e PUSH1 0x0
0xa0 DUP1
0xa1 REVERT
---
0x9e: V53 = 0x0
0xa1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0]

================================

Block 0xa2
[0xa2:0xdb]
---
Predecessors: [0x8a]
Successors: [0xdc, 0x16a]
---
0xa2 JUMPDEST
0xa3 POP
0xa4 PUSH1 0x1
0xa6 PUSH1 0xa0
0xa8 PUSH1 0x2
0xaa EXP
0xab SUB
0xac CALLER
0xad AND
0xae PUSH1 0x0
0xb0 SWAP1
0xb1 DUP2
0xb2 MSTORE
0xb3 PUSH1 0x6
0xb5 PUSH1 0x20
0xb7 MSTORE
0xb8 PUSH1 0x40
0xba SWAP1
0xbb SHA3
0xbc DUP1
0xbd SLOAD
0xbe CALLVALUE
0xbf SWAP1
0xc0 DUP2
0xc1 ADD
0xc2 SWAP1
0xc3 SWAP2
0xc4 SSTORE
0xc5 PUSH1 0x2
0xc7 DUP1
0xc8 SLOAD
0xc9 DUP3
0xca ADD
0xcb SWAP1
0xcc SSTORE
0xcd PUSH1 0x8
0xcf SLOAD
0xd0 PUSH3 0x15180
0xd4 ADD
0xd5 TIMESTAMP
0xd6 LT
0xd7 ISZERO
0xd8 PUSH2 0x16a
0xdb JUMPI
---
0xa2: JUMPDEST 
0xa4: V54 = 0x1
0xa6: V55 = 0xa0
0xa8: V56 = 0x2
0xaa: V57 = EXP 0x2 0xa0
0xab: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac: V59 = CALLER
0xad: V60 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0xae: V61 = 0x0
0xb2: M[0x0] = V60
0xb3: V62 = 0x6
0xb5: V63 = 0x20
0xb7: M[0x20] = 0x6
0xb8: V64 = 0x40
0xbb: V65 = SHA3 0x0 0x40
0xbd: V66 = S[V65]
0xbe: V67 = CALLVALUE
0xc1: V68 = ADD V67 V66
0xc4: S[V65] = V68
0xc5: V69 = 0x2
0xc8: V70 = S[0x2]
0xca: V71 = ADD V67 V70
0xcc: S[0x2] = V71
0xcd: V72 = 0x8
0xcf: V73 = S[0x8]
0xd0: V74 = 0x15180
0xd4: V75 = ADD 0x15180 V73
0xd5: V76 = TIMESTAMP
0xd6: V77 = LT V76 V75
0xd7: V78 = ISZERO V77
0xd8: V79 = 0x16a
0xdb: JUMPI 0x16a V78
---
Entry stack: [V13, 0x0]
Stack pops: 1
Stack additions: [V67]
Exit stack: [V13, V67]

================================

Block 0xdc
[0xdc:0xfb]
---
Predecessors: [0xa2]
Successors: [0xfc]
---
0xdc PUSH1 0x5
0xde SLOAD
0xdf PUSH1 0x4
0xe1 SLOAD
0xe2 PUSH1 0x1
0xe4 PUSH1 0xa0
0xe6 PUSH1 0x2
0xe8 EXP
0xe9 SUB
0xea SWAP1
0xeb SWAP2
0xec AND
0xed SWAP1
0xee PUSH4 0xa9059cbb
0xf3 SWAP1
0xf4 CALLER
0xf5 SWAP1
0xf6 PUSH1 0x64
0xf8 SWAP1
0xf9 PUSH1 0x41
0xfb MUL
---
0xdc: V80 = 0x5
0xde: V81 = S[0x5]
0xdf: V82 = 0x4
0xe1: V83 = S[0x4]
0xe2: V84 = 0x1
0xe4: V85 = 0xa0
0xe6: V86 = 0x2
0xe8: V87 = EXP 0x2 0xa0
0xe9: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec: V89 = AND V81 0xffffffffffffffffffffffffffffffffffffffff
0xee: V90 = 0xa9059cbb
0xf4: V91 = CALLER
0xf6: V92 = 0x64
0xf9: V93 = 0x41
0xfb: V94 = MUL 0x41 V83
---
Entry stack: [V13, V67]
Stack pops: 0
Stack additions: [V89, 0xa9059cbb, V91, 0x64, V94]
Exit stack: [V13, V67, V89, 0xa9059cbb, V91, 0x64, V94]

================================

Block 0xfc
[0xfc:0x10f]
---
Predecessors: [0xdc, 0x17a, 0x1ae, 0x1e2]
Successors: [0x110, 0x111]
---
0xfc JUMPDEST
0xfd DIV
0xfe DUP5
0xff PUSH8 0xde0b6b3a7640000
0x108 MUL
0x109 DUP2
0x10a ISZERO
0x10b ISZERO
0x10c PUSH2 0x111
0x10f JUMPI
---
0xfc: JUMPDEST 
0xfd: V95 = DIV S0 0x64
0xff: V96 = 0xde0b6b3a7640000
0x108: V97 = MUL 0xde0b6b3a7640000 V67
0x10a: V98 = ISZERO V95
0x10b: V99 = ISZERO V98
0x10c: V100 = 0x111
0x10f: JUMPI 0x111 V99
---
Entry stack: [V13, V67, S4, 0xa9059cbb, S2, 0x64, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V95, V97]
Exit stack: [V13, V67, S4, 0xa9059cbb, S2, V95, V97]

================================

Block 0x110
[0x110:0x110]
---
Predecessors: [0xfc]
Successors: []
---
0x110 INVALID
---
0x110: INVALID 
---
Entry stack: [V13, V67, S4, 0xa9059cbb, S2, V95, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V67, S4, 0xa9059cbb, S2, V95, V97]

================================

Block 0x111
[0x111:0x150]
---
Predecessors: [0xfc]
Successors: [0x151, 0x155]
---
0x111 JUMPDEST
0x112 DIV
0x113 PUSH1 0x40
0x115 MLOAD
0x116 PUSH1 0xe0
0x118 PUSH1 0x2
0x11a EXP
0x11b PUSH4 0xffffffff
0x120 DUP6
0x121 AND
0x122 MUL
0x123 DUP2
0x124 MSTORE
0x125 PUSH1 0x1
0x127 PUSH1 0xa0
0x129 PUSH1 0x2
0x12b EXP
0x12c SUB
0x12d SWAP1
0x12e SWAP3
0x12f AND
0x130 PUSH1 0x4
0x132 DUP4
0x133 ADD
0x134 MSTORE
0x135 PUSH1 0x24
0x137 DUP3
0x138 ADD
0x139 MSTORE
0x13a PUSH1 0x44
0x13c ADD
0x13d PUSH1 0x0
0x13f PUSH1 0x40
0x141 MLOAD
0x142 DUP1
0x143 DUP4
0x144 SUB
0x145 DUP2
0x146 PUSH1 0x0
0x148 DUP8
0x149 DUP1
0x14a EXTCODESIZE
0x14b ISZERO
0x14c ISZERO
0x14d PUSH2 0x155
0x150 JUMPI
---
0x111: JUMPDEST 
0x112: V101 = DIV V97 V95
0x113: V102 = 0x40
0x115: V103 = M[0x40]
0x116: V104 = 0xe0
0x118: V105 = 0x2
0x11a: V106 = EXP 0x2 0xe0
0x11b: V107 = 0xffffffff
0x121: V108 = AND 0xa9059cbb 0xffffffff
0x122: V109 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x124: M[V103] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x125: V110 = 0x1
0x127: V111 = 0xa0
0x129: V112 = 0x2
0x12b: V113 = EXP 0x2 0xa0
0x12c: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12f: V115 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x130: V116 = 0x4
0x133: V117 = ADD V103 0x4
0x134: M[V117] = V115
0x135: V118 = 0x24
0x138: V119 = ADD V103 0x24
0x139: M[V119] = V101
0x13a: V120 = 0x44
0x13c: V121 = ADD 0x44 V103
0x13d: V122 = 0x0
0x13f: V123 = 0x40
0x141: V124 = M[0x40]
0x144: V125 = SUB V121 V124
0x146: V126 = 0x0
0x14a: V127 = EXTCODESIZE S4
0x14b: V128 = ISZERO V127
0x14c: V129 = ISZERO V128
0x14d: V130 = 0x155
0x150: JUMPI 0x155 V129
---
Entry stack: [V13, V67, S4, 0xa9059cbb, S2, V95, V97]
Stack pops: 5
Stack additions: [S4, S3, V121, 0x0, V124, V125, V124, 0x0, S4]
Exit stack: [V13, V67, S4, 0xa9059cbb, V121, 0x0, V124, V125, V124, 0x0, S4]

================================

Block 0x151
[0x151:0x154]
---
Predecessors: [0x111]
Successors: []
---
0x151 PUSH1 0x0
0x153 DUP1
0x154 REVERT
---
0x151: V131 = 0x0
0x154: REVERT 0x0 0x0
---
Entry stack: [V13, V67, S8, 0xa9059cbb, V121, 0x0, V124, V125, V124, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V67, S8, 0xa9059cbb, V121, 0x0, V124, V125, V124, 0x0, S0]

================================

Block 0x155
[0x155:0x15d]
---
Predecessors: [0x111]
Successors: [0x15e, 0x162]
---
0x155 JUMPDEST
0x156 GAS
0x157 CALL
0x158 ISZERO
0x159 ISZERO
0x15a PUSH2 0x162
0x15d JUMPI
---
0x155: JUMPDEST 
0x156: V132 = GAS
0x157: V133 = CALL V132 S0 0x0 V124 V125 V124 0x0
0x158: V134 = ISZERO V133
0x159: V135 = ISZERO V134
0x15a: V136 = 0x162
0x15d: JUMPI 0x162 V135
---
Entry stack: [V13, V67, S8, 0xa9059cbb, V121, 0x0, V124, V125, V124, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V67, S8, 0xa9059cbb, V121]

================================

Block 0x15e
[0x15e:0x161]
---
Predecessors: [0x155]
Successors: []
---
0x15e PUSH1 0x0
0x160 DUP1
0x161 REVERT
---
0x15e: V137 = 0x0
0x161: REVERT 0x0 0x0
---
Entry stack: [V13, V67, S2, 0xa9059cbb, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V67, S2, 0xa9059cbb, V121]

================================

Block 0x162
[0x162:0x169]
---
Predecessors: [0x155]
Successors: [0x289]
---
0x162 JUMPDEST
0x163 POP
0x164 POP
0x165 POP
0x166 PUSH2 0x289
0x169 JUMP
---
0x162: JUMPDEST 
0x166: V138 = 0x289
0x169: JUMP 0x289
---
Entry stack: [V13, V67, S2, 0xa9059cbb, V121]
Stack pops: 3
Stack additions: []
Exit stack: [V13, V67]

================================

Block 0x16a
[0x16a:0x179]
---
Predecessors: [0xa2]
Successors: [0x17a, 0x19e]
---
0x16a JUMPDEST
0x16b PUSH1 0x8
0x16d SLOAD
0x16e PUSH3 0x3f480
0x172 ADD
0x173 TIMESTAMP
0x174 LT
0x175 ISZERO
0x176 PUSH2 0x19e
0x179 JUMPI
---
0x16a: JUMPDEST 
0x16b: V139 = 0x8
0x16d: V140 = S[0x8]
0x16e: V141 = 0x3f480
0x172: V142 = ADD 0x3f480 V140
0x173: V143 = TIMESTAMP
0x174: V144 = LT V143 V142
0x175: V145 = ISZERO V144
0x176: V146 = 0x19e
0x179: JUMPI 0x19e V145
---
Entry stack: [V13, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V67]

================================

Block 0x17a
[0x17a:0x19d]
---
Predecessors: [0x16a]
Successors: [0xfc]
---
0x17a PUSH1 0x5
0x17c SLOAD
0x17d PUSH1 0x4
0x17f SLOAD
0x180 PUSH1 0x1
0x182 PUSH1 0xa0
0x184 PUSH1 0x2
0x186 EXP
0x187 SUB
0x188 SWAP1
0x189 SWAP2
0x18a AND
0x18b SWAP1
0x18c PUSH4 0xa9059cbb
0x191 SWAP1
0x192 CALLER
0x193 SWAP1
0x194 PUSH1 0x64
0x196 SWAP1
0x197 PUSH1 0x4b
0x199 MUL
0x19a PUSH2 0xfc
0x19d JUMP
---
0x17a: V147 = 0x5
0x17c: V148 = S[0x5]
0x17d: V149 = 0x4
0x17f: V150 = S[0x4]
0x180: V151 = 0x1
0x182: V152 = 0xa0
0x184: V153 = 0x2
0x186: V154 = EXP 0x2 0xa0
0x187: V155 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18a: V156 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V157 = 0xa9059cbb
0x192: V158 = CALLER
0x194: V159 = 0x64
0x197: V160 = 0x4b
0x199: V161 = MUL 0x4b V150
0x19a: V162 = 0xfc
0x19d: JUMP 0xfc
---
Entry stack: [V13, V67]
Stack pops: 0
Stack additions: [V156, 0xa9059cbb, V158, 0x64, V161]
Exit stack: [V13, V67, V156, 0xa9059cbb, V158, 0x64, V161]

================================

Block 0x19e
[0x19e:0x1ad]
---
Predecessors: [0x16a]
Successors: [0x1ae, 0x1d2]
---
0x19e JUMPDEST
0x19f PUSH1 0x8
0x1a1 SLOAD
0x1a2 PUSH3 0x93a80
0x1a6 ADD
0x1a7 TIMESTAMP
0x1a8 LT
0x1a9 ISZERO
0x1aa PUSH2 0x1d2
0x1ad JUMPI
---
0x19e: JUMPDEST 
0x19f: V163 = 0x8
0x1a1: V164 = S[0x8]
0x1a2: V165 = 0x93a80
0x1a6: V166 = ADD 0x93a80 V164
0x1a7: V167 = TIMESTAMP
0x1a8: V168 = LT V167 V166
0x1a9: V169 = ISZERO V168
0x1aa: V170 = 0x1d2
0x1ad: JUMPI 0x1d2 V169
---
Entry stack: [V13, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V67]

================================

Block 0x1ae
[0x1ae:0x1d1]
---
Predecessors: [0x19e]
Successors: [0xfc]
---
0x1ae PUSH1 0x5
0x1b0 SLOAD
0x1b1 PUSH1 0x4
0x1b3 SLOAD
0x1b4 PUSH1 0x1
0x1b6 PUSH1 0xa0
0x1b8 PUSH1 0x2
0x1ba EXP
0x1bb SUB
0x1bc SWAP1
0x1bd SWAP2
0x1be AND
0x1bf SWAP1
0x1c0 PUSH4 0xa9059cbb
0x1c5 SWAP1
0x1c6 CALLER
0x1c7 SWAP1
0x1c8 PUSH1 0x64
0x1ca SWAP1
0x1cb PUSH1 0x55
0x1cd MUL
0x1ce PUSH2 0xfc
0x1d1 JUMP
---
0x1ae: V171 = 0x5
0x1b0: V172 = S[0x5]
0x1b1: V173 = 0x4
0x1b3: V174 = S[0x4]
0x1b4: V175 = 0x1
0x1b6: V176 = 0xa0
0x1b8: V177 = 0x2
0x1ba: V178 = EXP 0x2 0xa0
0x1bb: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1be: V180 = AND V172 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V181 = 0xa9059cbb
0x1c6: V182 = CALLER
0x1c8: V183 = 0x64
0x1cb: V184 = 0x55
0x1cd: V185 = MUL 0x55 V174
0x1ce: V186 = 0xfc
0x1d1: JUMP 0xfc
---
Entry stack: [V13, V67]
Stack pops: 0
Stack additions: [V180, 0xa9059cbb, V182, 0x64, V185]
Exit stack: [V13, V67, V180, 0xa9059cbb, V182, 0x64, V185]

================================

Block 0x1d2
[0x1d2:0x1e1]
---
Predecessors: [0x19e]
Successors: [0x1e2, 0x206]
---
0x1d2 JUMPDEST
0x1d3 PUSH1 0x8
0x1d5 SLOAD
0x1d6 PUSH3 0x1baf80
0x1da ADD
0x1db TIMESTAMP
0x1dc LT
0x1dd ISZERO
0x1de PUSH2 0x206
0x1e1 JUMPI
---
0x1d2: JUMPDEST 
0x1d3: V187 = 0x8
0x1d5: V188 = S[0x8]
0x1d6: V189 = 0x1baf80
0x1da: V190 = ADD 0x1baf80 V188
0x1db: V191 = TIMESTAMP
0x1dc: V192 = LT V191 V190
0x1dd: V193 = ISZERO V192
0x1de: V194 = 0x206
0x1e1: JUMPI 0x206 V193
---
Entry stack: [V13, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V67]

================================

Block 0x1e2
[0x1e2:0x205]
---
Predecessors: [0x1d2]
Successors: [0xfc]
---
0x1e2 PUSH1 0x5
0x1e4 SLOAD
0x1e5 PUSH1 0x4
0x1e7 SLOAD
0x1e8 PUSH1 0x1
0x1ea PUSH1 0xa0
0x1ec PUSH1 0x2
0x1ee EXP
0x1ef SUB
0x1f0 SWAP1
0x1f1 SWAP2
0x1f2 AND
0x1f3 SWAP1
0x1f4 PUSH4 0xa9059cbb
0x1f9 SWAP1
0x1fa CALLER
0x1fb SWAP1
0x1fc PUSH1 0x64
0x1fe SWAP1
0x1ff PUSH1 0x5a
0x201 MUL
0x202 PUSH2 0xfc
0x205 JUMP
---
0x1e2: V195 = 0x5
0x1e4: V196 = S[0x5]
0x1e5: V197 = 0x4
0x1e7: V198 = S[0x4]
0x1e8: V199 = 0x1
0x1ea: V200 = 0xa0
0x1ec: V201 = 0x2
0x1ee: V202 = EXP 0x2 0xa0
0x1ef: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f2: V204 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V205 = 0xa9059cbb
0x1fa: V206 = CALLER
0x1fc: V207 = 0x64
0x1ff: V208 = 0x5a
0x201: V209 = MUL 0x5a V198
0x202: V210 = 0xfc
0x205: JUMP 0xfc
---
Entry stack: [V13, V67]
Stack pops: 0
Stack additions: [V204, 0xa9059cbb, V206, 0x64, V209]
Exit stack: [V13, V67, V204, 0xa9059cbb, V206, 0x64, V209]

================================

Block 0x206
[0x206:0x232]
---
Predecessors: [0x1d2]
Successors: [0x233, 0x234]
---
0x206 JUMPDEST
0x207 PUSH1 0x5
0x209 SLOAD
0x20a PUSH1 0x4
0x20c SLOAD
0x20d PUSH1 0x1
0x20f PUSH1 0xa0
0x211 PUSH1 0x2
0x213 EXP
0x214 SUB
0x215 SWAP1
0x216 SWAP2
0x217 AND
0x218 SWAP1
0x219 PUSH4 0xa9059cbb
0x21e SWAP1
0x21f CALLER
0x220 SWAP1
0x221 PUSH8 0xde0b6b3a7640000
0x22a DUP6
0x22b MUL
0x22c DUP2
0x22d ISZERO
0x22e ISZERO
0x22f PUSH2 0x234
0x232 JUMPI
---
0x206: JUMPDEST 
0x207: V211 = 0x5
0x209: V212 = S[0x5]
0x20a: V213 = 0x4
0x20c: V214 = S[0x4]
0x20d: V215 = 0x1
0x20f: V216 = 0xa0
0x211: V217 = 0x2
0x213: V218 = EXP 0x2 0xa0
0x214: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x217: V220 = AND V212 0xffffffffffffffffffffffffffffffffffffffff
0x219: V221 = 0xa9059cbb
0x21f: V222 = CALLER
0x221: V223 = 0xde0b6b3a7640000
0x22b: V224 = MUL V67 0xde0b6b3a7640000
0x22d: V225 = ISZERO V214
0x22e: V226 = ISZERO V225
0x22f: V227 = 0x234
0x232: JUMPI 0x234 V226
---
Entry stack: [V13, V67]
Stack pops: 1
Stack additions: [S0, V220, 0xa9059cbb, V222, V214, V224]
Exit stack: [V13, V67, V220, 0xa9059cbb, V222, V214, V224]

================================

Block 0x233
[0x233:0x233]
---
Predecessors: [0x206]
Successors: []
---
0x233 INVALID
---
0x233: INVALID 
---
Entry stack: [V13, V67, V220, 0xa9059cbb, V222, V214, V224]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V67, V220, 0xa9059cbb, V222, V214, V224]

================================

Block 0x234
[0x234:0x273]
---
Predecessors: [0x206]
Successors: [0x274, 0x278]
---
0x234 JUMPDEST
0x235 DIV
0x236 PUSH1 0x40
0x238 MLOAD
0x239 PUSH1 0xe0
0x23b PUSH1 0x2
0x23d EXP
0x23e PUSH4 0xffffffff
0x243 DUP6
0x244 AND
0x245 MUL
0x246 DUP2
0x247 MSTORE
0x248 PUSH1 0x1
0x24a PUSH1 0xa0
0x24c PUSH1 0x2
0x24e EXP
0x24f SUB
0x250 SWAP1
0x251 SWAP3
0x252 AND
0x253 PUSH1 0x4
0x255 DUP4
0x256 ADD
0x257 MSTORE
0x258 PUSH1 0x24
0x25a DUP3
0x25b ADD
0x25c MSTORE
0x25d PUSH1 0x44
0x25f ADD
0x260 PUSH1 0x0
0x262 PUSH1 0x40
0x264 MLOAD
0x265 DUP1
0x266 DUP4
0x267 SUB
0x268 DUP2
0x269 PUSH1 0x0
0x26b DUP8
0x26c DUP1
0x26d EXTCODESIZE
0x26e ISZERO
0x26f ISZERO
0x270 PUSH2 0x278
0x273 JUMPI
---
0x234: JUMPDEST 
0x235: V228 = DIV V224 V214
0x236: V229 = 0x40
0x238: V230 = M[0x40]
0x239: V231 = 0xe0
0x23b: V232 = 0x2
0x23d: V233 = EXP 0x2 0xe0
0x23e: V234 = 0xffffffff
0x244: V235 = AND 0xa9059cbb 0xffffffff
0x245: V236 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x247: M[V230] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x248: V237 = 0x1
0x24a: V238 = 0xa0
0x24c: V239 = 0x2
0x24e: V240 = EXP 0x2 0xa0
0x24f: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x252: V242 = AND V222 0xffffffffffffffffffffffffffffffffffffffff
0x253: V243 = 0x4
0x256: V244 = ADD V230 0x4
0x257: M[V244] = V242
0x258: V245 = 0x24
0x25b: V246 = ADD V230 0x24
0x25c: M[V246] = V228
0x25d: V247 = 0x44
0x25f: V248 = ADD 0x44 V230
0x260: V249 = 0x0
0x262: V250 = 0x40
0x264: V251 = M[0x40]
0x267: V252 = SUB V248 V251
0x269: V253 = 0x0
0x26d: V254 = EXTCODESIZE V220
0x26e: V255 = ISZERO V254
0x26f: V256 = ISZERO V255
0x270: V257 = 0x278
0x273: JUMPI 0x278 V256
---
Entry stack: [V13, V67, V220, 0xa9059cbb, V222, V214, V224]
Stack pops: 5
Stack additions: [S4, S3, V248, 0x0, V251, V252, V251, 0x0, S4]
Exit stack: [V13, V67, V220, 0xa9059cbb, V248, 0x0, V251, V252, V251, 0x0, V220]

================================

Block 0x274
[0x274:0x277]
---
Predecessors: [0x234]
Successors: []
---
0x274 PUSH1 0x0
0x276 DUP1
0x277 REVERT
---
0x274: V258 = 0x0
0x277: REVERT 0x0 0x0
---
Entry stack: [V13, V67, V220, 0xa9059cbb, V248, 0x0, V251, V252, V251, 0x0, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V67, V220, 0xa9059cbb, V248, 0x0, V251, V252, V251, 0x0, V220]

================================

Block 0x278
[0x278:0x280]
---
Predecessors: [0x234]
Successors: [0x281, 0x285]
---
0x278 JUMPDEST
0x279 GAS
0x27a CALL
0x27b ISZERO
0x27c ISZERO
0x27d PUSH2 0x285
0x280 JUMPI
---
0x278: JUMPDEST 
0x279: V259 = GAS
0x27a: V260 = CALL V259 V220 0x0 V251 V252 V251 0x0
0x27b: V261 = ISZERO V260
0x27c: V262 = ISZERO V261
0x27d: V263 = 0x285
0x280: JUMPI 0x285 V262
---
Entry stack: [V13, V67, V220, 0xa9059cbb, V248, 0x0, V251, V252, V251, 0x0, V220]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V67, V220, 0xa9059cbb, V248]

================================

Block 0x281
[0x281:0x284]
---
Predecessors: [0x278]
Successors: []
---
0x281 PUSH1 0x0
0x283 DUP1
0x284 REVERT
---
0x281: V264 = 0x0
0x284: REVERT 0x0 0x0
---
Entry stack: [V13, V67, V220, 0xa9059cbb, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V67, V220, 0xa9059cbb, V248]

================================

Block 0x285
[0x285:0x288]
---
Predecessors: [0x278]
Successors: [0x289]
---
0x285 JUMPDEST
0x286 POP
0x287 POP
0x288 POP
---
0x285: JUMPDEST 
---
Entry stack: [V13, V67, V220, 0xa9059cbb, V248]
Stack pops: 3
Stack additions: []
Exit stack: [V13, V67]

================================

Block 0x289
[0x289:0x2df]
---
Predecessors: [0x162, 0x285]
Successors: []
---
0x289 JUMPDEST
0x28a PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2ab CALLER
0x2ac DUP3
0x2ad PUSH1 0x1
0x2af PUSH1 0x40
0x2b1 MLOAD
0x2b2 PUSH1 0x1
0x2b4 PUSH1 0xa0
0x2b6 PUSH1 0x2
0x2b8 EXP
0x2b9 SUB
0x2ba SWAP1
0x2bb SWAP4
0x2bc AND
0x2bd DUP4
0x2be MSTORE
0x2bf PUSH1 0x20
0x2c1 DUP4
0x2c2 ADD
0x2c3 SWAP2
0x2c4 SWAP1
0x2c5 SWAP2
0x2c6 MSTORE
0x2c7 ISZERO
0x2c8 ISZERO
0x2c9 PUSH1 0x40
0x2cb DUP1
0x2cc DUP4
0x2cd ADD
0x2ce SWAP2
0x2cf SWAP1
0x2d0 SWAP2
0x2d1 MSTORE
0x2d2 PUSH1 0x60
0x2d4 SWAP1
0x2d5 SWAP2
0x2d6 ADD
0x2d7 SWAP1
0x2d8 MLOAD
0x2d9 DUP1
0x2da SWAP2
0x2db SUB
0x2dc SWAP1
0x2dd LOG1
0x2de POP
0x2df STOP
---
0x289: JUMPDEST 
0x28a: V265 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2ab: V266 = CALLER
0x2ad: V267 = 0x1
0x2af: V268 = 0x40
0x2b1: V269 = M[0x40]
0x2b2: V270 = 0x1
0x2b4: V271 = 0xa0
0x2b6: V272 = 0x2
0x2b8: V273 = EXP 0x2 0xa0
0x2b9: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bc: V275 = AND V266 0xffffffffffffffffffffffffffffffffffffffff
0x2be: M[V269] = V275
0x2bf: V276 = 0x20
0x2c2: V277 = ADD V269 0x20
0x2c6: M[V277] = V67
0x2c7: V278 = ISZERO 0x1
0x2c8: V279 = ISZERO 0x0
0x2c9: V280 = 0x40
0x2cd: V281 = ADD V269 0x40
0x2d1: M[V281] = 0x1
0x2d2: V282 = 0x60
0x2d6: V283 = ADD V269 0x60
0x2d8: V284 = M[0x40]
0x2db: V285 = SUB V283 V284
0x2dd: LOG V284 V285 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2df: STOP 
---
Entry stack: [V13, V67]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x2e0
[0x2e0:0x2e6]
---
Predecessors: [0xd]
Successors: [0x2e7, 0x2eb]
---
0x2e0 JUMPDEST
0x2e1 CALLVALUE
0x2e2 ISZERO
0x2e3 PUSH2 0x2eb
0x2e6 JUMPI
---
0x2e0: JUMPDEST 
0x2e1: V286 = CALLVALUE
0x2e2: V287 = ISZERO V286
0x2e3: V288 = 0x2eb
0x2e6: JUMPI 0x2eb V287
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2e7
[0x2e7:0x2ea]
---
Predecessors: [0x2e0]
Successors: []
---
0x2e7 PUSH1 0x0
0x2e9 DUP1
0x2ea REVERT
---
0x2e7: V289 = 0x0
0x2ea: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2eb
[0x2eb:0x2f2]
---
Predecessors: [0x2e0]
Successors: [0x3da]
---
0x2eb JUMPDEST
0x2ec PUSH2 0x2f3
0x2ef PUSH2 0x3da
0x2f2 JUMP
---
0x2eb: JUMPDEST 
0x2ec: V290 = 0x2f3
0x2ef: V291 = 0x3da
0x2f2: JUMP 0x3da
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2f3]
Exit stack: [V13, 0x2f3]

================================

Block 0x2f3
[0x2f3:0x2f4]
---
Predecessors: [0x45f, 0x65a]
Successors: []
---
0x2f3 JUMPDEST
0x2f4 STOP
---
0x2f3: JUMPDEST 
0x2f4: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2f5
[0x2f5:0x2fb]
---
Predecessors: [0x27]
Successors: [0x2fc, 0x300]
---
0x2f5 JUMPDEST
0x2f6 CALLVALUE
0x2f7 ISZERO
0x2f8 PUSH2 0x300
0x2fb JUMPI
---
0x2f5: JUMPDEST 
0x2f6: V292 = CALLVALUE
0x2f7: V293 = ISZERO V292
0x2f8: V294 = 0x300
0x2fb: JUMPI 0x300 V293
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2fc
[0x2fc:0x2ff]
---
Predecessors: [0x2f5]
Successors: []
---
0x2fc PUSH1 0x0
0x2fe DUP1
0x2ff REVERT
---
0x2fc: V295 = 0x0
0x2ff: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x300
[0x300:0x307]
---
Predecessors: [0x2f5]
Successors: [0x461]
---
0x300 JUMPDEST
0x301 PUSH2 0x308
0x304 PUSH2 0x461
0x307 JUMP
---
0x300: JUMPDEST 
0x301: V296 = 0x308
0x304: V297 = 0x461
0x307: JUMP 0x461
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x308]
Exit stack: [V13, 0x308]

================================

Block 0x308
[0x308:0x319]
---
Predecessors: [0x461, 0x485, 0x497, 0x49d, 0x4a3, 0x4a9]
Successors: []
---
0x308 JUMPDEST
0x309 PUSH1 0x40
0x30b MLOAD
0x30c SWAP1
0x30d DUP2
0x30e MSTORE
0x30f PUSH1 0x20
0x311 ADD
0x312 PUSH1 0x40
0x314 MLOAD
0x315 DUP1
0x316 SWAP2
0x317 SUB
0x318 SWAP1
0x319 RETURN
---
0x308: JUMPDEST 
0x309: V298 = 0x40
0x30b: V299 = M[0x40]
0x30e: M[V299] = S0
0x30f: V300 = 0x20
0x311: V301 = ADD 0x20 V299
0x312: V302 = 0x40
0x314: V303 = M[0x40]
0x317: V304 = SUB V301 V303
0x319: RETURN V303 V304
---
Entry stack: [V13, 0x308, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x308]

================================

Block 0x31a
[0x31a:0x320]
---
Predecessors: [0x32]
Successors: [0x321, 0x325]
---
0x31a JUMPDEST
0x31b CALLVALUE
0x31c ISZERO
0x31d PUSH2 0x325
0x320 JUMPI
---
0x31a: JUMPDEST 
0x31b: V305 = CALLVALUE
0x31c: V306 = ISZERO V305
0x31d: V307 = 0x325
0x320: JUMPI 0x325 V306
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x321
[0x321:0x324]
---
Predecessors: [0x31a]
Successors: []
---
0x321 PUSH1 0x0
0x323 DUP1
0x324 REVERT
---
0x321: V308 = 0x0
0x324: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x325
[0x325:0x32c]
---
Predecessors: [0x31a]
Successors: [0x467]
---
0x325 JUMPDEST
0x326 PUSH2 0x32d
0x329 PUSH2 0x467
0x32c JUMP
---
0x325: JUMPDEST 
0x326: V309 = 0x32d
0x329: V310 = 0x467
0x32c: JUMP 0x467
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x32d]
Exit stack: [V13, 0x32d]

================================

Block 0x32d
[0x32d:0x348]
---
Predecessors: [0x467, 0x476]
Successors: []
---
0x32d JUMPDEST
0x32e PUSH1 0x40
0x330 MLOAD
0x331 PUSH1 0x1
0x333 PUSH1 0xa0
0x335 PUSH1 0x2
0x337 EXP
0x338 SUB
0x339 SWAP1
0x33a SWAP2
0x33b AND
0x33c DUP2
0x33d MSTORE
0x33e PUSH1 0x20
0x340 ADD
0x341 PUSH1 0x40
0x343 MLOAD
0x344 DUP1
0x345 SWAP2
0x346 SUB
0x347 SWAP1
0x348 RETURN
---
0x32d: JUMPDEST 
0x32e: V311 = 0x40
0x330: V312 = M[0x40]
0x331: V313 = 0x1
0x333: V314 = 0xa0
0x335: V315 = 0x2
0x337: V316 = EXP 0x2 0xa0
0x338: V317 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33b: V318 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x33d: M[V312] = V318
0x33e: V319 = 0x20
0x340: V320 = ADD 0x20 V312
0x341: V321 = 0x40
0x343: V322 = M[0x40]
0x346: V323 = SUB V320 V322
0x348: RETURN V322 V323
---
Entry stack: [V13, 0x32d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x32d]

================================

Block 0x349
[0x349:0x34f]
---
Predecessors: [0x3d]
Successors: [0x350, 0x354]
---
0x349 JUMPDEST
0x34a CALLVALUE
0x34b ISZERO
0x34c PUSH2 0x354
0x34f JUMPI
---
0x349: JUMPDEST 
0x34a: V324 = CALLVALUE
0x34b: V325 = ISZERO V324
0x34c: V326 = 0x354
0x34f: JUMPI 0x354 V325
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x350
[0x350:0x353]
---
Predecessors: [0x349]
Successors: []
---
0x350 PUSH1 0x0
0x352 DUP1
0x353 REVERT
---
0x350: V327 = 0x0
0x353: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x354
[0x354:0x35b]
---
Predecessors: [0x349]
Successors: [0x476]
---
0x354 JUMPDEST
0x355 PUSH2 0x32d
0x358 PUSH2 0x476
0x35b JUMP
---
0x354: JUMPDEST 
0x355: V328 = 0x32d
0x358: V329 = 0x476
0x35b: JUMP 0x476
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x32d]
Exit stack: [V13, 0x32d]

================================

Block 0x35c
[0x35c:0x362]
---
Predecessors: [0x48]
Successors: [0x363, 0x367]
---
0x35c JUMPDEST
0x35d CALLVALUE
0x35e ISZERO
0x35f PUSH2 0x367
0x362 JUMPI
---
0x35c: JUMPDEST 
0x35d: V330 = CALLVALUE
0x35e: V331 = ISZERO V330
0x35f: V332 = 0x367
0x362: JUMPI 0x367 V331
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x363
[0x363:0x366]
---
Predecessors: [0x35c]
Successors: []
---
0x363 PUSH1 0x0
0x365 DUP1
0x366 REVERT
---
0x363: V333 = 0x0
0x366: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x367
[0x367:0x37a]
---
Predecessors: [0x35c]
Successors: [0x485]
---
0x367 JUMPDEST
0x368 PUSH2 0x308
0x36b PUSH1 0x1
0x36d PUSH1 0xa0
0x36f PUSH1 0x2
0x371 EXP
0x372 SUB
0x373 PUSH1 0x4
0x375 CALLDATALOAD
0x376 AND
0x377 PUSH2 0x485
0x37a JUMP
---
0x367: JUMPDEST 
0x368: V334 = 0x308
0x36b: V335 = 0x1
0x36d: V336 = 0xa0
0x36f: V337 = 0x2
0x371: V338 = EXP 0x2 0xa0
0x372: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x373: V340 = 0x4
0x375: V341 = CALLDATALOAD 0x4
0x376: V342 = AND V341 0xffffffffffffffffffffffffffffffffffffffff
0x377: V343 = 0x485
0x37a: JUMP 0x485
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x308, V342]
Exit stack: [V13, 0x308, V342]

================================

Block 0x37b
[0x37b:0x381]
---
Predecessors: [0x53]
Successors: [0x382, 0x386]
---
0x37b JUMPDEST
0x37c CALLVALUE
0x37d ISZERO
0x37e PUSH2 0x386
0x381 JUMPI
---
0x37b: JUMPDEST 
0x37c: V344 = CALLVALUE
0x37d: V345 = ISZERO V344
0x37e: V346 = 0x386
0x381: JUMPI 0x386 V345
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x382
[0x382:0x385]
---
Predecessors: [0x37b]
Successors: []
---
0x382 PUSH1 0x0
0x384 DUP1
0x385 REVERT
---
0x382: V347 = 0x0
0x385: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x386
[0x386:0x38d]
---
Predecessors: [0x37b]
Successors: [0x497]
---
0x386 JUMPDEST
0x387 PUSH2 0x308
0x38a PUSH2 0x497
0x38d JUMP
---
0x386: JUMPDEST 
0x387: V348 = 0x308
0x38a: V349 = 0x497
0x38d: JUMP 0x497
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x308]
Exit stack: [V13, 0x308]

================================

Block 0x38e
[0x38e:0x394]
---
Predecessors: [0x5e]
Successors: [0x395, 0x399]
---
0x38e JUMPDEST
0x38f CALLVALUE
0x390 ISZERO
0x391 PUSH2 0x399
0x394 JUMPI
---
0x38e: JUMPDEST 
0x38f: V350 = CALLVALUE
0x390: V351 = ISZERO V350
0x391: V352 = 0x399
0x394: JUMPI 0x399 V351
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x395
[0x395:0x398]
---
Predecessors: [0x38e]
Successors: []
---
0x395 PUSH1 0x0
0x397 DUP1
0x398 REVERT
---
0x395: V353 = 0x0
0x398: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x399
[0x399:0x3a0]
---
Predecessors: [0x38e]
Successors: [0x49d]
---
0x399 JUMPDEST
0x39a PUSH2 0x308
0x39d PUSH2 0x49d
0x3a0 JUMP
---
0x399: JUMPDEST 
0x39a: V354 = 0x308
0x39d: V355 = 0x49d
0x3a0: JUMP 0x49d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x308]
Exit stack: [V13, 0x308]

================================

Block 0x3a1
[0x3a1:0x3a7]
---
Predecessors: [0x69]
Successors: [0x3a8, 0x3ac]
---
0x3a1 JUMPDEST
0x3a2 CALLVALUE
0x3a3 ISZERO
0x3a4 PUSH2 0x3ac
0x3a7 JUMPI
---
0x3a1: JUMPDEST 
0x3a2: V356 = CALLVALUE
0x3a3: V357 = ISZERO V356
0x3a4: V358 = 0x3ac
0x3a7: JUMPI 0x3ac V357
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3a8
[0x3a8:0x3ab]
---
Predecessors: [0x3a1]
Successors: []
---
0x3a8 PUSH1 0x0
0x3aa DUP1
0x3ab REVERT
---
0x3a8: V359 = 0x0
0x3ab: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3ac
[0x3ac:0x3b3]
---
Predecessors: [0x3a1]
Successors: [0x4a3]
---
0x3ac JUMPDEST
0x3ad PUSH2 0x308
0x3b0 PUSH2 0x4a3
0x3b3 JUMP
---
0x3ac: JUMPDEST 
0x3ad: V360 = 0x308
0x3b0: V361 = 0x4a3
0x3b3: JUMP 0x4a3
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x308]
Exit stack: [V13, 0x308]

================================

Block 0x3b4
[0x3b4:0x3ba]
---
Predecessors: [0x74]
Successors: [0x3bb, 0x3bf]
---
0x3b4 JUMPDEST
0x3b5 CALLVALUE
0x3b6 ISZERO
0x3b7 PUSH2 0x3bf
0x3ba JUMPI
---
0x3b4: JUMPDEST 
0x3b5: V362 = CALLVALUE
0x3b6: V363 = ISZERO V362
0x3b7: V364 = 0x3bf
0x3ba: JUMPI 0x3bf V363
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3bb
[0x3bb:0x3be]
---
Predecessors: [0x3b4]
Successors: []
---
0x3bb PUSH1 0x0
0x3bd DUP1
0x3be REVERT
---
0x3bb: V365 = 0x0
0x3be: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3bf
[0x3bf:0x3c6]
---
Predecessors: [0x3b4]
Successors: [0x4a9]
---
0x3bf JUMPDEST
0x3c0 PUSH2 0x308
0x3c3 PUSH2 0x4a9
0x3c6 JUMP
---
0x3bf: JUMPDEST 
0x3c0: V366 = 0x308
0x3c3: V367 = 0x4a9
0x3c6: JUMP 0x4a9
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x308]
Exit stack: [V13, 0x308]

================================

Block 0x3c7
[0x3c7:0x3cd]
---
Predecessors: [0x7f]
Successors: [0x3ce, 0x3d2]
---
0x3c7 JUMPDEST
0x3c8 CALLVALUE
0x3c9 ISZERO
0x3ca PUSH2 0x3d2
0x3cd JUMPI
---
0x3c7: JUMPDEST 
0x3c8: V368 = CALLVALUE
0x3c9: V369 = ISZERO V368
0x3ca: V370 = 0x3d2
0x3cd: JUMPI 0x3d2 V369
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3ce
[0x3ce:0x3d1]
---
Predecessors: [0x3c7]
Successors: []
---
0x3ce PUSH1 0x0
0x3d0 DUP1
0x3d1 REVERT
---
0x3ce: V371 = 0x0
0x3d1: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3d2
[0x3d2:0x3d9]
---
Predecessors: [0x3c7]
Successors: [0x4af]
---
0x3d2 JUMPDEST
0x3d3 PUSH2 0x2f3
0x3d6 PUSH2 0x4af
0x3d9 JUMP
---
0x3d2: JUMPDEST 
0x3d3: V372 = 0x2f3
0x3d6: V373 = 0x4af
0x3d9: JUMP 0x4af
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2f3]
Exit stack: [V13, 0x2f3]

================================

Block 0x3da
[0x3da:0x3e3]
---
Predecessors: [0x2eb]
Successors: [0x3e4, 0x45f]
---
0x3da JUMPDEST
0x3db PUSH1 0x3
0x3dd SLOAD
0x3de TIMESTAMP
0x3df LT
0x3e0 PUSH2 0x45f
0x3e3 JUMPI
---
0x3da: JUMPDEST 
0x3db: V374 = 0x3
0x3dd: V375 = S[0x3]
0x3de: V376 = TIMESTAMP
0x3df: V377 = LT V376 V375
0x3e0: V378 = 0x45f
0x3e3: JUMPI 0x45f V377
---
Entry stack: [V13, 0x2f3]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2f3]

================================

Block 0x3e4
[0x3e4:0x3ee]
---
Predecessors: [0x3da]
Successors: [0x3ef, 0x44f]
---
0x3e4 PUSH1 0x1
0x3e6 SLOAD
0x3e7 PUSH1 0x2
0x3e9 SLOAD
0x3ea LT
0x3eb PUSH2 0x44f
0x3ee JUMPI
---
0x3e4: V379 = 0x1
0x3e6: V380 = S[0x1]
0x3e7: V381 = 0x2
0x3e9: V382 = S[0x2]
0x3ea: V383 = LT V382 V380
0x3eb: V384 = 0x44f
0x3ee: JUMPI 0x44f V383
---
Entry stack: [V13, 0x2f3]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2f3]

================================

Block 0x3ef
[0x3ef:0x44e]
---
Predecessors: [0x3e4]
Successors: [0x44f]
---
0x3ef PUSH1 0x7
0x3f1 DUP1
0x3f2 SLOAD
0x3f3 PUSH1 0xff
0x3f5 NOT
0x3f6 AND
0x3f7 PUSH1 0x1
0x3f9 OR
0x3fa SWAP1
0x3fb SSTORE
0x3fc PUSH1 0x0
0x3fe SLOAD
0x3ff PUSH1 0x2
0x401 SLOAD
0x402 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x423 SWAP2
0x424 PUSH1 0x1
0x426 PUSH1 0xa0
0x428 PUSH1 0x2
0x42a EXP
0x42b SUB
0x42c AND
0x42d SWAP1
0x42e PUSH1 0x40
0x430 MLOAD
0x431 PUSH1 0x1
0x433 PUSH1 0xa0
0x435 PUSH1 0x2
0x437 EXP
0x438 SUB
0x439 SWAP1
0x43a SWAP3
0x43b AND
0x43c DUP3
0x43d MSTORE
0x43e PUSH1 0x20
0x440 DUP3
0x441 ADD
0x442 MSTORE
0x443 PUSH1 0x40
0x445 SWAP1
0x446 DUP2
0x447 ADD
0x448 SWAP1
0x449 MLOAD
0x44a DUP1
0x44b SWAP2
0x44c SUB
0x44d SWAP1
0x44e LOG1
---
0x3ef: V385 = 0x7
0x3f2: V386 = S[0x7]
0x3f3: V387 = 0xff
0x3f5: V388 = NOT 0xff
0x3f6: V389 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V386
0x3f7: V390 = 0x1
0x3f9: V391 = OR 0x1 V389
0x3fb: S[0x7] = V391
0x3fc: V392 = 0x0
0x3fe: V393 = S[0x0]
0x3ff: V394 = 0x2
0x401: V395 = S[0x2]
0x402: V396 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x424: V397 = 0x1
0x426: V398 = 0xa0
0x428: V399 = 0x2
0x42a: V400 = EXP 0x2 0xa0
0x42b: V401 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42c: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x42e: V403 = 0x40
0x430: V404 = M[0x40]
0x431: V405 = 0x1
0x433: V406 = 0xa0
0x435: V407 = 0x2
0x437: V408 = EXP 0x2 0xa0
0x438: V409 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43b: V410 = AND V402 0xffffffffffffffffffffffffffffffffffffffff
0x43d: M[V404] = V410
0x43e: V411 = 0x20
0x441: V412 = ADD V404 0x20
0x442: M[V412] = V395
0x443: V413 = 0x40
0x447: V414 = ADD 0x40 V404
0x449: V415 = M[0x40]
0x44c: V416 = SUB V414 V415
0x44e: LOG V415 V416 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V13, 0x2f3]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2f3]

================================

Block 0x44f
[0x44f:0x45e]
---
Predecessors: [0x3e4, 0x3ef]
Successors: [0x45f]
---
0x44f JUMPDEST
0x450 PUSH1 0x7
0x452 DUP1
0x453 SLOAD
0x454 PUSH2 0xff00
0x457 NOT
0x458 AND
0x459 PUSH2 0x100
0x45c OR
0x45d SWAP1
0x45e SSTORE
---
0x44f: JUMPDEST 
0x450: V417 = 0x7
0x453: V418 = S[0x7]
0x454: V419 = 0xff00
0x457: V420 = NOT 0xff00
0x458: V421 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V418
0x459: V422 = 0x100
0x45c: V423 = OR 0x100 V421
0x45e: S[0x7] = V423
---
Entry stack: [V13, 0x2f3]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2f3]

================================

Block 0x45f
[0x45f:0x460]
---
Predecessors: [0x3da, 0x44f]
Successors: [0x2f3]
---
0x45f JUMPDEST
0x460 JUMP
---
0x45f: JUMPDEST 
0x460: JUMP 0x2f3
---
Entry stack: [V13, 0x2f3]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x461
[0x461:0x466]
---
Predecessors: [0x300]
Successors: [0x308]
---
0x461 JUMPDEST
0x462 PUSH1 0x3
0x464 SLOAD
0x465 DUP2
0x466 JUMP
---
0x461: JUMPDEST 
0x462: V424 = 0x3
0x464: V425 = S[0x3]
0x466: JUMP 0x308
---
Entry stack: [V13, 0x308]
Stack pops: 1
Stack additions: [S0, V425]
Exit stack: [V13, 0x308, V425]

================================

Block 0x467
[0x467:0x475]
---
Predecessors: [0x325]
Successors: [0x32d]
---
0x467 JUMPDEST
0x468 PUSH1 0x0
0x46a SLOAD
0x46b PUSH1 0x1
0x46d PUSH1 0xa0
0x46f PUSH1 0x2
0x471 EXP
0x472 SUB
0x473 AND
0x474 DUP2
0x475 JUMP
---
0x467: JUMPDEST 
0x468: V426 = 0x0
0x46a: V427 = S[0x0]
0x46b: V428 = 0x1
0x46d: V429 = 0xa0
0x46f: V430 = 0x2
0x471: V431 = EXP 0x2 0xa0
0x472: V432 = SUB 0x10000000000000000000000000000000000000000 0x1
0x473: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x475: JUMP 0x32d
---
Entry stack: [V13, 0x32d]
Stack pops: 1
Stack additions: [S0, V433]
Exit stack: [V13, 0x32d, V433]

================================

Block 0x476
[0x476:0x484]
---
Predecessors: [0x354]
Successors: [0x32d]
---
0x476 JUMPDEST
0x477 PUSH1 0x5
0x479 SLOAD
0x47a PUSH1 0x1
0x47c PUSH1 0xa0
0x47e PUSH1 0x2
0x480 EXP
0x481 SUB
0x482 AND
0x483 DUP2
0x484 JUMP
---
0x476: JUMPDEST 
0x477: V434 = 0x5
0x479: V435 = S[0x5]
0x47a: V436 = 0x1
0x47c: V437 = 0xa0
0x47e: V438 = 0x2
0x480: V439 = EXP 0x2 0xa0
0x481: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x482: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x484: JUMP 0x32d
---
Entry stack: [V13, 0x32d]
Stack pops: 1
Stack additions: [S0, V441]
Exit stack: [V13, 0x32d, V441]

================================

Block 0x485
[0x485:0x496]
---
Predecessors: [0x367]
Successors: [0x308]
---
0x485 JUMPDEST
0x486 PUSH1 0x6
0x488 PUSH1 0x20
0x48a MSTORE
0x48b PUSH1 0x0
0x48d SWAP1
0x48e DUP2
0x48f MSTORE
0x490 PUSH1 0x40
0x492 SWAP1
0x493 SHA3
0x494 SLOAD
0x495 DUP2
0x496 JUMP
---
0x485: JUMPDEST 
0x486: V442 = 0x6
0x488: V443 = 0x20
0x48a: M[0x20] = 0x6
0x48b: V444 = 0x0
0x48f: M[0x0] = V342
0x490: V445 = 0x40
0x493: V446 = SHA3 0x0 0x40
0x494: V447 = S[V446]
0x496: JUMP 0x308
---
Entry stack: [V13, 0x308, V342]
Stack pops: 2
Stack additions: [S1, V447]
Exit stack: [V13, 0x308, V447]

================================

Block 0x497
[0x497:0x49c]
---
Predecessors: [0x386]
Successors: [0x308]
---
0x497 JUMPDEST
0x498 PUSH1 0x1
0x49a SLOAD
0x49b DUP2
0x49c JUMP
---
0x497: JUMPDEST 
0x498: V448 = 0x1
0x49a: V449 = S[0x1]
0x49c: JUMP 0x308
---
Entry stack: [V13, 0x308]
Stack pops: 1
Stack additions: [S0, V449]
Exit stack: [V13, 0x308, V449]

================================

Block 0x49d
[0x49d:0x4a2]
---
Predecessors: [0x399]
Successors: [0x308]
---
0x49d JUMPDEST
0x49e PUSH1 0x2
0x4a0 SLOAD
0x4a1 DUP2
0x4a2 JUMP
---
0x49d: JUMPDEST 
0x49e: V450 = 0x2
0x4a0: V451 = S[0x2]
0x4a2: JUMP 0x308
---
Entry stack: [V13, 0x308]
Stack pops: 1
Stack additions: [S0, V451]
Exit stack: [V13, 0x308, V451]

================================

Block 0x4a3
[0x4a3:0x4a8]
---
Predecessors: [0x3ac]
Successors: [0x308]
---
0x4a3 JUMPDEST
0x4a4 PUSH1 0x8
0x4a6 SLOAD
0x4a7 DUP2
0x4a8 JUMP
---
0x4a3: JUMPDEST 
0x4a4: V452 = 0x8
0x4a6: V453 = S[0x8]
0x4a8: JUMP 0x308
---
Entry stack: [V13, 0x308]
Stack pops: 1
Stack additions: [S0, V453]
Exit stack: [V13, 0x308, V453]

================================

Block 0x4a9
[0x4a9:0x4ae]
---
Predecessors: [0x3bf]
Successors: [0x308]
---
0x4a9 JUMPDEST
0x4aa PUSH1 0x4
0x4ac SLOAD
0x4ad DUP2
0x4ae JUMP
---
0x4a9: JUMPDEST 
0x4aa: V454 = 0x4
0x4ac: V455 = S[0x4]
0x4ae: JUMP 0x308
---
Entry stack: [V13, 0x308]
Stack pops: 1
Stack additions: [S0, V455]
Exit stack: [V13, 0x308, V455]

================================

Block 0x4af
[0x4af:0x4bb]
---
Predecessors: [0x3d2]
Successors: [0x4bc, 0x65a]
---
0x4af JUMPDEST
0x4b0 PUSH1 0x3
0x4b2 SLOAD
0x4b3 PUSH1 0x0
0x4b5 SWAP1
0x4b6 TIMESTAMP
0x4b7 LT
0x4b8 PUSH2 0x65a
0x4bb JUMPI
---
0x4af: JUMPDEST 
0x4b0: V456 = 0x3
0x4b2: V457 = S[0x3]
0x4b3: V458 = 0x0
0x4b6: V459 = TIMESTAMP
0x4b7: V460 = LT V459 V457
0x4b8: V461 = 0x65a
0x4bb: JUMPI 0x65a V460
---
Entry stack: [V13, 0x2f3]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x2f3, 0x0]

================================

Block 0x4bc
[0x4bc:0x4c7]
---
Predecessors: [0x4af]
Successors: [0x4c8, 0x58e]
---
0x4bc PUSH1 0x7
0x4be SLOAD
0x4bf PUSH1 0xff
0x4c1 AND
0x4c2 ISZERO
0x4c3 ISZERO
0x4c4 PUSH2 0x58e
0x4c7 JUMPI
---
0x4bc: V462 = 0x7
0x4be: V463 = S[0x7]
0x4bf: V464 = 0xff
0x4c1: V465 = AND 0xff V463
0x4c2: V466 = ISZERO V465
0x4c3: V467 = ISZERO V466
0x4c4: V468 = 0x58e
0x4c7: JUMPI 0x58e V467
---
Entry stack: [V13, 0x2f3, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2f3, 0x0]

================================

Block 0x4c8
[0x4c8:0x4ee]
---
Predecessors: [0x4bc]
Successors: [0x4ef, 0x58e]
---
0x4c8 POP
0x4c9 PUSH1 0x1
0x4cb PUSH1 0xa0
0x4cd PUSH1 0x2
0x4cf EXP
0x4d0 SUB
0x4d1 CALLER
0x4d2 AND
0x4d3 PUSH1 0x0
0x4d5 SWAP1
0x4d6 DUP2
0x4d7 MSTORE
0x4d8 PUSH1 0x6
0x4da PUSH1 0x20
0x4dc MSTORE
0x4dd PUSH1 0x40
0x4df DUP2
0x4e0 SHA3
0x4e1 DUP1
0x4e2 SLOAD
0x4e3 SWAP1
0x4e4 DUP3
0x4e5 SWAP1
0x4e6 SSTORE
0x4e7 SWAP1
0x4e8 DUP2
0x4e9 GT
0x4ea ISZERO
0x4eb PUSH2 0x58e
0x4ee JUMPI
---
0x4c9: V469 = 0x1
0x4cb: V470 = 0xa0
0x4cd: V471 = 0x2
0x4cf: V472 = EXP 0x2 0xa0
0x4d0: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d1: V474 = CALLER
0x4d2: V475 = AND V474 0xffffffffffffffffffffffffffffffffffffffff
0x4d3: V476 = 0x0
0x4d7: M[0x0] = V475
0x4d8: V477 = 0x6
0x4da: V478 = 0x20
0x4dc: M[0x20] = 0x6
0x4dd: V479 = 0x40
0x4e0: V480 = SHA3 0x0 0x40
0x4e2: V481 = S[V480]
0x4e6: S[V480] = 0x0
0x4e9: V482 = GT V481 0x0
0x4ea: V483 = ISZERO V482
0x4eb: V484 = 0x58e
0x4ee: JUMPI 0x58e V483
---
Entry stack: [V13, 0x2f3, 0x0]
Stack pops: 1
Stack additions: [V481]
Exit stack: [V13, 0x2f3, V481]

================================

Block 0x4ef
[0x4ef:0x519]
---
Predecessors: [0x4c8]
Successors: [0x51a, 0x572]
---
0x4ef PUSH1 0x1
0x4f1 PUSH1 0xa0
0x4f3 PUSH1 0x2
0x4f5 EXP
0x4f6 SUB
0x4f7 CALLER
0x4f8 AND
0x4f9 DUP2
0x4fa ISZERO
0x4fb PUSH2 0x8fc
0x4fe MUL
0x4ff DUP3
0x500 PUSH1 0x40
0x502 MLOAD
0x503 PUSH1 0x0
0x505 PUSH1 0x40
0x507 MLOAD
0x508 DUP1
0x509 DUP4
0x50a SUB
0x50b DUP2
0x50c DUP6
0x50d DUP9
0x50e DUP9
0x50f CALL
0x510 SWAP4
0x511 POP
0x512 POP
0x513 POP
0x514 POP
0x515 ISZERO
0x516 PUSH2 0x572
0x519 JUMPI
---
0x4ef: V485 = 0x1
0x4f1: V486 = 0xa0
0x4f3: V487 = 0x2
0x4f5: V488 = EXP 0x2 0xa0
0x4f6: V489 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f7: V490 = CALLER
0x4f8: V491 = AND V490 0xffffffffffffffffffffffffffffffffffffffff
0x4fa: V492 = ISZERO V481
0x4fb: V493 = 0x8fc
0x4fe: V494 = MUL 0x8fc V492
0x500: V495 = 0x40
0x502: V496 = M[0x40]
0x503: V497 = 0x0
0x505: V498 = 0x40
0x507: V499 = M[0x40]
0x50a: V500 = SUB V496 V499
0x50f: V501 = CALL V494 V491 V481 V499 V500 V499 0x0
0x515: V502 = ISZERO V501
0x516: V503 = 0x572
0x519: JUMPI 0x572 V502
---
Entry stack: [V13, 0x2f3, V481]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x2f3, V481]

================================

Block 0x51a
[0x51a:0x571]
---
Predecessors: [0x4ef]
Successors: [0x58e]
---
0x51a PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x53b CALLER
0x53c DUP3
0x53d PUSH1 0x0
0x53f PUSH1 0x40
0x541 MLOAD
0x542 PUSH1 0x1
0x544 PUSH1 0xa0
0x546 PUSH1 0x2
0x548 EXP
0x549 SUB
0x54a SWAP1
0x54b SWAP4
0x54c AND
0x54d DUP4
0x54e MSTORE
0x54f PUSH1 0x20
0x551 DUP4
0x552 ADD
0x553 SWAP2
0x554 SWAP1
0x555 SWAP2
0x556 MSTORE
0x557 ISZERO
0x558 ISZERO
0x559 PUSH1 0x40
0x55b DUP1
0x55c DUP4
0x55d ADD
0x55e SWAP2
0x55f SWAP1
0x560 SWAP2
0x561 MSTORE
0x562 PUSH1 0x60
0x564 SWAP1
0x565 SWAP2
0x566 ADD
0x567 SWAP1
0x568 MLOAD
0x569 DUP1
0x56a SWAP2
0x56b SUB
0x56c SWAP1
0x56d LOG1
0x56e PUSH2 0x58e
0x571 JUMP
---
0x51a: V504 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x53b: V505 = CALLER
0x53d: V506 = 0x0
0x53f: V507 = 0x40
0x541: V508 = M[0x40]
0x542: V509 = 0x1
0x544: V510 = 0xa0
0x546: V511 = 0x2
0x548: V512 = EXP 0x2 0xa0
0x549: V513 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54c: V514 = AND V505 0xffffffffffffffffffffffffffffffffffffffff
0x54e: M[V508] = V514
0x54f: V515 = 0x20
0x552: V516 = ADD V508 0x20
0x556: M[V516] = V481
0x557: V517 = ISZERO 0x0
0x558: V518 = ISZERO 0x1
0x559: V519 = 0x40
0x55d: V520 = ADD V508 0x40
0x561: M[V520] = 0x0
0x562: V521 = 0x60
0x566: V522 = ADD V508 0x60
0x568: V523 = M[0x40]
0x56b: V524 = SUB V522 V523
0x56d: LOG V523 V524 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x56e: V525 = 0x58e
0x571: JUMP 0x58e
---
Entry stack: [V13, 0x2f3, V481]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x2f3, V481]

================================

Block 0x572
[0x572:0x58d]
---
Predecessors: [0x4ef]
Successors: [0x58e]
---
0x572 JUMPDEST
0x573 PUSH1 0x1
0x575 PUSH1 0xa0
0x577 PUSH1 0x2
0x579 EXP
0x57a SUB
0x57b CALLER
0x57c AND
0x57d PUSH1 0x0
0x57f SWAP1
0x580 DUP2
0x581 MSTORE
0x582 PUSH1 0x6
0x584 PUSH1 0x20
0x586 MSTORE
0x587 PUSH1 0x40
0x589 SWAP1
0x58a SHA3
0x58b DUP2
0x58c SWAP1
0x58d SSTORE
---
0x572: JUMPDEST 
0x573: V526 = 0x1
0x575: V527 = 0xa0
0x577: V528 = 0x2
0x579: V529 = EXP 0x2 0xa0
0x57a: V530 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57b: V531 = CALLER
0x57c: V532 = AND V531 0xffffffffffffffffffffffffffffffffffffffff
0x57d: V533 = 0x0
0x581: M[0x0] = V532
0x582: V534 = 0x6
0x584: V535 = 0x20
0x586: M[0x20] = 0x6
0x587: V536 = 0x40
0x58a: V537 = SHA3 0x0 0x40
0x58d: S[V537] = V481
---
Entry stack: [V13, 0x2f3, V481]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x2f3, V481]

================================

Block 0x58e
[0x58e:0x59a]
---
Predecessors: [0x4bc, 0x4c8, 0x51a, 0x572]
Successors: [0x59b, 0x5ae]
---
0x58e JUMPDEST
0x58f PUSH1 0x7
0x591 SLOAD
0x592 PUSH1 0xff
0x594 AND
0x595 DUP1
0x596 ISZERO
0x597 PUSH2 0x5ae
0x59a JUMPI
---
0x58e: JUMPDEST 
0x58f: V538 = 0x7
0x591: V539 = S[0x7]
0x592: V540 = 0xff
0x594: V541 = AND 0xff V539
0x596: V542 = ISZERO V541
0x597: V543 = 0x5ae
0x59a: JUMPI 0x5ae V542
---
Entry stack: [V13, 0x2f3, S0]
Stack pops: 0
Stack additions: [V541]
Exit stack: [V13, 0x2f3, S0, V541]

================================

Block 0x59b
[0x59b:0x5ad]
---
Predecessors: [0x58e]
Successors: [0x5ae]
---
0x59b POP
0x59c PUSH1 0x0
0x59e SLOAD
0x59f CALLER
0x5a0 PUSH1 0x1
0x5a2 PUSH1 0xa0
0x5a4 PUSH1 0x2
0x5a6 EXP
0x5a7 SUB
0x5a8 SWAP1
0x5a9 DUP2
0x5aa AND
0x5ab SWAP2
0x5ac AND
0x5ad EQ
---
0x59c: V544 = 0x0
0x59e: V545 = S[0x0]
0x59f: V546 = CALLER
0x5a0: V547 = 0x1
0x5a2: V548 = 0xa0
0x5a4: V549 = 0x2
0x5a6: V550 = EXP 0x2 0xa0
0x5a7: V551 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5aa: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x5ac: V553 = AND V545 0xffffffffffffffffffffffffffffffffffffffff
0x5ad: V554 = EQ V553 V552
---
Entry stack: [V13, 0x2f3, S1, V541]
Stack pops: 1
Stack additions: [V554]
Exit stack: [V13, 0x2f3, S1, V554]

================================

Block 0x5ae
[0x5ae:0x5b3]
---
Predecessors: [0x58e, 0x59b]
Successors: [0x5b4, 0x65a]
---
0x5ae JUMPDEST
0x5af ISZERO
0x5b0 PUSH2 0x65a
0x5b3 JUMPI
---
0x5ae: JUMPDEST 
0x5af: V555 = ISZERO S0
0x5b0: V556 = 0x65a
0x5b3: JUMPI 0x65a V555
---
Entry stack: [V13, 0x2f3, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x2f3, S1]

================================

Block 0x5b4
[0x5b4:0x5e6]
---
Predecessors: [0x5ae]
Successors: [0x5e7, 0x64f]
---
0x5b4 PUSH1 0x0
0x5b6 SLOAD
0x5b7 PUSH1 0x2
0x5b9 SLOAD
0x5ba PUSH1 0x1
0x5bc PUSH1 0xa0
0x5be PUSH1 0x2
0x5c0 EXP
0x5c1 SUB
0x5c2 SWAP1
0x5c3 SWAP2
0x5c4 AND
0x5c5 SWAP1
0x5c6 DUP1
0x5c7 ISZERO
0x5c8 PUSH2 0x8fc
0x5cb MUL
0x5cc SWAP1
0x5cd PUSH1 0x40
0x5cf MLOAD
0x5d0 PUSH1 0x0
0x5d2 PUSH1 0x40
0x5d4 MLOAD
0x5d5 DUP1
0x5d6 DUP4
0x5d7 SUB
0x5d8 DUP2
0x5d9 DUP6
0x5da DUP9
0x5db DUP9
0x5dc CALL
0x5dd SWAP4
0x5de POP
0x5df POP
0x5e0 POP
0x5e1 POP
0x5e2 ISZERO
0x5e3 PUSH2 0x64f
0x5e6 JUMPI
---
0x5b4: V557 = 0x0
0x5b6: V558 = S[0x0]
0x5b7: V559 = 0x2
0x5b9: V560 = S[0x2]
0x5ba: V561 = 0x1
0x5bc: V562 = 0xa0
0x5be: V563 = 0x2
0x5c0: V564 = EXP 0x2 0xa0
0x5c1: V565 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c4: V566 = AND V558 0xffffffffffffffffffffffffffffffffffffffff
0x5c7: V567 = ISZERO V560
0x5c8: V568 = 0x8fc
0x5cb: V569 = MUL 0x8fc V567
0x5cd: V570 = 0x40
0x5cf: V571 = M[0x40]
0x5d0: V572 = 0x0
0x5d2: V573 = 0x40
0x5d4: V574 = M[0x40]
0x5d7: V575 = SUB V571 V574
0x5dc: V576 = CALL V569 V566 V560 V574 V575 V574 0x0
0x5e2: V577 = ISZERO V576
0x5e3: V578 = 0x64f
0x5e6: JUMPI 0x64f V577
---
Entry stack: [V13, 0x2f3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2f3, S0]

================================

Block 0x5e7
[0x5e7:0x64e]
---
Predecessors: [0x5b4]
Successors: [0x65a]
---
0x5e7 PUSH1 0x0
0x5e9 DUP1
0x5ea SLOAD
0x5eb PUSH1 0x2
0x5ed SLOAD
0x5ee PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x60f SWAP3
0x610 PUSH1 0x1
0x612 PUSH1 0xa0
0x614 PUSH1 0x2
0x616 EXP
0x617 SUB
0x618 SWAP1
0x619 SWAP3
0x61a AND
0x61b SWAP2
0x61c PUSH1 0x40
0x61e MLOAD
0x61f PUSH1 0x1
0x621 PUSH1 0xa0
0x623 PUSH1 0x2
0x625 EXP
0x626 SUB
0x627 SWAP1
0x628 SWAP4
0x629 AND
0x62a DUP4
0x62b MSTORE
0x62c PUSH1 0x20
0x62e DUP4
0x62f ADD
0x630 SWAP2
0x631 SWAP1
0x632 SWAP2
0x633 MSTORE
0x634 ISZERO
0x635 ISZERO
0x636 PUSH1 0x40
0x638 DUP1
0x639 DUP4
0x63a ADD
0x63b SWAP2
0x63c SWAP1
0x63d SWAP2
0x63e MSTORE
0x63f PUSH1 0x60
0x641 SWAP1
0x642 SWAP2
0x643 ADD
0x644 SWAP1
0x645 MLOAD
0x646 DUP1
0x647 SWAP2
0x648 SUB
0x649 SWAP1
0x64a LOG1
0x64b PUSH2 0x65a
0x64e JUMP
---
0x5e7: V579 = 0x0
0x5ea: V580 = S[0x0]
0x5eb: V581 = 0x2
0x5ed: V582 = S[0x2]
0x5ee: V583 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x610: V584 = 0x1
0x612: V585 = 0xa0
0x614: V586 = 0x2
0x616: V587 = EXP 0x2 0xa0
0x617: V588 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61a: V589 = AND V580 0xffffffffffffffffffffffffffffffffffffffff
0x61c: V590 = 0x40
0x61e: V591 = M[0x40]
0x61f: V592 = 0x1
0x621: V593 = 0xa0
0x623: V594 = 0x2
0x625: V595 = EXP 0x2 0xa0
0x626: V596 = SUB 0x10000000000000000000000000000000000000000 0x1
0x629: V597 = AND V589 0xffffffffffffffffffffffffffffffffffffffff
0x62b: M[V591] = V597
0x62c: V598 = 0x20
0x62f: V599 = ADD V591 0x20
0x633: M[V599] = V582
0x634: V600 = ISZERO 0x0
0x635: V601 = ISZERO 0x1
0x636: V602 = 0x40
0x63a: V603 = ADD V591 0x40
0x63e: M[V603] = 0x0
0x63f: V604 = 0x60
0x643: V605 = ADD V591 0x60
0x645: V606 = M[0x40]
0x648: V607 = SUB V605 V606
0x64a: LOG V606 V607 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x64b: V608 = 0x65a
0x64e: JUMP 0x65a
---
Entry stack: [V13, 0x2f3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2f3, S0]

================================

Block 0x64f
[0x64f:0x659]
---
Predecessors: [0x5b4]
Successors: [0x65a]
---
0x64f JUMPDEST
0x650 PUSH1 0x7
0x652 DUP1
0x653 SLOAD
0x654 PUSH1 0xff
0x656 NOT
0x657 AND
0x658 SWAP1
0x659 SSTORE
---
0x64f: JUMPDEST 
0x650: V609 = 0x7
0x653: V610 = S[0x7]
0x654: V611 = 0xff
0x656: V612 = NOT 0xff
0x657: V613 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V610
0x659: S[0x7] = V613
---
Entry stack: [V13, 0x2f3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2f3, S0]

================================

Block 0x65a
[0x65a:0x65c]
---
Predecessors: [0x4af, 0x5ae, 0x5e7, 0x64f]
Successors: [0x2f3]
---
0x65a JUMPDEST
0x65b POP
0x65c JUMP
---
0x65a: JUMPDEST 
0x65c: JUMP 0x2f3
---
Entry stack: [V13, 0x2f3, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x65d
[0x65d:0x6a5]
---
Predecessors: []
Successors: []
---
0x65d STOP
0x65e LOG1
0x65f PUSH6 0x627a7a723058
0x666 SHA3
0x667 DUP5
0x668 PUSH24 0x9a6f370994c552cfed8f287a3fab96e6d6cb2571faa2b0da
0x681 DUP2
0x682 MISSING 0xe5
0x683 INVALID
0x684 MISSING 0xa7
0x685 PUSH32 0x2e0029
---
0x65d: STOP 
0x65e: LOG S0 S1 S2
0x65f: V614 = 0x627a7a723058
0x666: V615 = SHA3 0x627a7a723058 S3
0x668: V616 = 0x9a6f370994c552cfed8f287a3fab96e6d6cb2571faa2b0da
0x682: MISSING 0xe5
0x683: INVALID 
0x684: MISSING 0xa7
0x685: V617 = 0x2e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S7, 0x9a6f370994c552cfed8f287a3fab96e6d6cb2571faa2b0da, S7, V615, S4, S5, S6, S7, 0x2e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x2e0
Exit block: 0x2f3
Body: 0x2e0, 0x2e7, 0x2eb, 0x2f3, 0x3da, 0x3e4, 0x3ef, 0x44f, 0x45f

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x2f5
Exit block: 0x308
Body: 0x2f5, 0x2fc, 0x300, 0x308, 0x461

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x31a
Exit block: 0x32d
Body: 0x31a, 0x321, 0x325, 0x32d, 0x467

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x349
Exit block: 0x32d
Body: 0x32d, 0x349, 0x350, 0x354, 0x476

Function 4:
Public function signature: 0x70a08231
Entry block: 0x35c
Exit block: 0x308
Body: 0x308, 0x35c, 0x363, 0x367, 0x485

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x37b
Exit block: 0x308
Body: 0x308, 0x37b, 0x382, 0x386, 0x497

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x38e
Exit block: 0x308
Body: 0x308, 0x38e, 0x395, 0x399, 0x49d

Function 7:
Public function signature: 0x8da58897
Entry block: 0x3a1
Exit block: 0x308
Body: 0x308, 0x3a1, 0x3a8, 0x3ac, 0x4a3

Function 8:
Public function signature: 0xa035b1fe
Entry block: 0x3b4
Exit block: 0x308
Body: 0x308, 0x3b4, 0x3bb, 0x3bf, 0x4a9

Function 9:
Public function signature: 0xfd6b7ef8
Entry block: 0x3c7
Exit block: 0x2f3
Body: 0x2f3, 0x3c7, 0x3ce, 0x3d2, 0x4af, 0x4bc, 0x4c8, 0x4ef, 0x51a, 0x572, 0x58e, 0x59b, 0x5ae, 0x5b4, 0x5e7, 0x64f, 0x65a

Function 10:
Public fallback function
Entry block: 0x8a
Exit block: 0x289
Body: 0x8a, 0x9e, 0xa2, 0xdc, 0xfc, 0x110, 0x111, 0x151, 0x155, 0x15e, 0x162, 0x16a, 0x17a, 0x19e, 0x1ae, 0x1d2, 0x1e2, 0x206, 0x233, 0x234, 0x274, 0x278, 0x281, 0x285, 0x289

