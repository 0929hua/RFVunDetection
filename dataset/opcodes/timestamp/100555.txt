args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/1/100555.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xeb]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xeb
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xeb
0xa: JUMPI 0xeb V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x114]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x114
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x114
0x24: JUMPI 0x114 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x129]
---
0x25 DUP1
0x26 PUSH4 0x3f9c793
0x2b EQ
0x2c PUSH2 0x129
0x2f JUMPI
---
0x26: V16 = 0x3f9c793
0x2b: V17 = EQ 0x3f9c793 V12
0x2c: V18 = 0x129
0x2f: JUMPI 0x129 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x13f]
---
0x30 DUP1
0x31 PUSH4 0x14373817
0x36 EQ
0x37 PUSH2 0x13f
0x3a JUMPI
---
0x31: V19 = 0x14373817
0x36: V20 = EQ 0x14373817 V12
0x37: V21 = 0x13f
0x3a: JUMPI 0x13f V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x164]
---
0x3b DUP1
0x3c PUSH4 0x2119249f
0x41 EQ
0x42 PUSH2 0x164
0x45 JUMPI
---
0x3c: V22 = 0x2119249f
0x41: V23 = EQ 0x2119249f V12
0x42: V24 = 0x164
0x45: JUMPI 0x164 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x194]
---
0x46 DUP1
0x47 PUSH4 0x378544df
0x4c EQ
0x4d PUSH2 0x194
0x50 JUMPI
---
0x47: V25 = 0x378544df
0x4c: V26 = EQ 0x378544df V12
0x4d: V27 = 0x194
0x50: JUMPI 0x194 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1b9]
---
0x51 DUP1
0x52 PUSH4 0x518ab2a8
0x57 EQ
0x58 PUSH2 0x1b9
0x5b JUMPI
---
0x52: V28 = 0x518ab2a8
0x57: V29 = EQ 0x518ab2a8 V12
0x58: V30 = 0x1b9
0x5b: JUMPI 0x1b9 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1de]
---
0x5c DUP1
0x5d PUSH4 0x6e66f6e9
0x62 EQ
0x63 PUSH2 0x1de
0x66 JUMPI
---
0x5d: V31 = 0x6e66f6e9
0x62: V32 = EQ 0x6e66f6e9 V12
0x63: V33 = 0x1de
0x66: JUMPI 0x1de V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x20d]
---
0x67 DUP1
0x68 PUSH4 0x70a08231
0x6d EQ
0x6e PUSH2 0x20d
0x71 JUMPI
---
0x68: V34 = 0x70a08231
0x6d: V35 = EQ 0x70a08231 V12
0x6e: V36 = 0x20d
0x71: JUMPI 0x20d V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x23e]
---
0x72 DUP1
0x73 PUSH4 0x7a3a0e84
0x78 EQ
0x79 PUSH2 0x23e
0x7c JUMPI
---
0x73: V37 = 0x7a3a0e84
0x78: V38 = EQ 0x7a3a0e84 V12
0x79: V39 = 0x23e
0x7c: JUMPI 0x23e V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x263]
---
0x7d DUP1
0x7e PUSH4 0x7b3e5e7b
0x83 EQ
0x84 PUSH2 0x263
0x87 JUMPI
---
0x7e: V40 = 0x7b3e5e7b
0x83: V41 = EQ 0x7b3e5e7b V12
0x84: V42 = 0x263
0x87: JUMPI 0x263 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x288]
---
0x88 DUP1
0x89 PUSH4 0x7c831bd9
0x8e EQ
0x8f PUSH2 0x288
0x92 JUMPI
---
0x89: V43 = 0x7c831bd9
0x8e: V44 = EQ 0x7c831bd9 V12
0x8f: V45 = 0x288
0x92: JUMPI 0x288 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2ad]
---
0x93 DUP1
0x94 PUSH4 0x906a26e0
0x99 EQ
0x9a PUSH2 0x2ad
0x9d JUMPI
---
0x94: V46 = 0x906a26e0
0x99: V47 = EQ 0x906a26e0 V12
0x9a: V48 = 0x2ad
0x9d: JUMPI 0x2ad V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2d2]
---
0x9e DUP1
0x9f PUSH4 0xa3e67610
0xa4 EQ
0xa5 PUSH2 0x2d2
0xa8 JUMPI
---
0x9f: V49 = 0xa3e67610
0xa4: V50 = EQ 0xa3e67610 V12
0xa5: V51 = 0x2d2
0xa8: JUMPI 0x2d2 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x301]
---
0xa9 DUP1
0xaa PUSH4 0xbe9a6555
0xaf EQ
0xb0 PUSH2 0x301
0xb3 JUMPI
---
0xaa: V52 = 0xbe9a6555
0xaf: V53 = EQ 0xbe9a6555 V12
0xb0: V54 = 0x301
0xb3: JUMPI 0x301 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x326]
---
0xb4 DUP1
0xb5 PUSH4 0xc6e04590
0xba EQ
0xbb PUSH2 0x326
0xbe JUMPI
---
0xb5: V55 = 0xc6e04590
0xba: V56 = EQ 0xc6e04590 V12
0xbb: V57 = 0x326
0xbe: JUMPI 0x326 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x34b]
---
0xbf DUP1
0xc0 PUSH4 0xccb07cef
0xc5 EQ
0xc6 PUSH2 0x34b
0xc9 JUMPI
---
0xc0: V58 = 0xccb07cef
0xc5: V59 = EQ 0xccb07cef V12
0xc6: V60 = 0x34b
0xc9: JUMPI 0x34b V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x372]
---
0xca DUP1
0xcb PUSH4 0xefbe1c1c
0xd0 EQ
0xd1 PUSH2 0x372
0xd4 JUMPI
---
0xcb: V61 = 0xefbe1c1c
0xd0: V62 = EQ 0xefbe1c1c V12
0xd1: V63 = 0x372
0xd4: JUMPI 0x372 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x397]
---
0xd5 DUP1
0xd6 PUSH4 0xf71441a5
0xdb EQ
0xdc PUSH2 0x397
0xdf JUMPI
---
0xd6: V64 = 0xf71441a5
0xdb: V65 = EQ 0xf71441a5 V12
0xdc: V66 = 0x397
0xdf: JUMPI 0x397 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x3bc]
---
0xe0 DUP1
0xe1 PUSH4 0xfd6b7ef8
0xe6 EQ
0xe7 PUSH2 0x3bc
0xea JUMPI
---
0xe1: V67 = 0xfd6b7ef8
0xe6: V68 = EQ 0xfd6b7ef8 V12
0xe7: V69 = 0x3bc
0xea: JUMPI 0x3bc V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xeb]
---
Predecessors: [0x0, 0xe0]
Successors: [0xec]
---
0xeb JUMPDEST
---
0xeb: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xec
[0xec:0x107]
---
Predecessors: [0xeb]
Successors: [0x108, 0x110]
---
0xec JUMPDEST
0xed PUSH1 0x8
0xef SLOAD
0xf0 CALLER
0xf1 PUSH1 0x1
0xf3 PUSH1 0xa0
0xf5 PUSH1 0x2
0xf7 EXP
0xf8 SUB
0xf9 SWAP1
0xfa DUP2
0xfb AND
0xfc PUSH2 0x100
0xff SWAP1
0x100 SWAP3
0x101 DIV
0x102 AND
0x103 EQ
0x104 PUSH2 0x110
0x107 JUMPI
---
0xec: JUMPDEST 
0xed: V70 = 0x8
0xef: V71 = S[0x8]
0xf0: V72 = CALLER
0xf1: V73 = 0x1
0xf3: V74 = 0xa0
0xf5: V75 = 0x2
0xf7: V76 = EXP 0x2 0xa0
0xf8: V77 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfb: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0xfc: V79 = 0x100
0x101: V80 = DIV V71 0x100
0x102: V81 = AND V80 0xffffffffffffffffffffffffffffffffffffffff
0x103: V82 = EQ V81 V78
0x104: V83 = 0x110
0x107: JUMPI 0x110 V82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x108
[0x108:0x10f]
---
Predecessors: [0xec]
Successors: [0x3d1]
---
0x108 PUSH2 0x110
0x10b CALLER
0x10c PUSH2 0x3d1
0x10f JUMP
---
0x108: V84 = 0x110
0x10b: V85 = CALLER
0x10c: V86 = 0x3d1
0x10f: JUMP 0x3d1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x110, V85]
Exit stack: [V12, 0x110, V85]

================================

Block 0x110
[0x110:0x110]
---
Predecessors: [0xec, 0x72e, 0x83d, 0x9ae]
Successors: [0x111]
---
0x110 JUMPDEST
---
0x110: JUMPDEST 
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x111
[0x111:0x111]
---
Predecessors: [0x110]
Successors: [0x112]
---
0x111 JUMPDEST
---
0x111: JUMPDEST 
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x112
[0x112:0x113]
---
Predecessors: [0x111]
Successors: []
---
0x112 JUMPDEST
0x113 STOP
---
0x112: JUMPDEST 
0x113: STOP 
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x114
[0x114:0x11a]
---
Predecessors: [0xb]
Successors: [0x11b, 0x11f]
---
0x114 JUMPDEST
0x115 CALLVALUE
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x114: JUMPDEST 
0x115: V87 = CALLVALUE
0x116: V88 = ISZERO V87
0x117: V89 = 0x11f
0x11a: JUMPI 0x11f V88
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x114]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V90 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11f
[0x11f:0x126]
---
Predecessors: [0x114]
Successors: [0x641]
---
0x11f JUMPDEST
0x120 PUSH2 0x110
0x123 PUSH2 0x641
0x126 JUMP
---
0x11f: JUMPDEST 
0x120: V91 = 0x110
0x123: V92 = 0x641
0x126: JUMP 0x641
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x110]
Exit stack: [V12, 0x110]

================================

Block 0x127
[0x127:0x128]
---
Predecessors: []
Successors: []
---
0x127 JUMPDEST
0x128 STOP
---
0x127: JUMPDEST 
0x128: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x129
[0x129:0x13c]
---
Predecessors: [0x25]
Successors: [0x3d1]
---
0x129 JUMPDEST
0x12a PUSH2 0x110
0x12d PUSH1 0x1
0x12f PUSH1 0xa0
0x131 PUSH1 0x2
0x133 EXP
0x134 SUB
0x135 PUSH1 0x4
0x137 CALLDATALOAD
0x138 AND
0x139 PUSH2 0x3d1
0x13c JUMP
---
0x129: JUMPDEST 
0x12a: V93 = 0x110
0x12d: V94 = 0x1
0x12f: V95 = 0xa0
0x131: V96 = 0x2
0x133: V97 = EXP 0x2 0xa0
0x134: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0x135: V99 = 0x4
0x137: V100 = CALLDATALOAD 0x4
0x138: V101 = AND V100 0xffffffffffffffffffffffffffffffffffffffff
0x139: V102 = 0x3d1
0x13c: JUMP 0x3d1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x110, V101]
Exit stack: [V12, 0x110, V101]

================================

Block 0x13d
[0x13d:0x13e]
---
Predecessors: []
Successors: []
---
0x13d JUMPDEST
0x13e STOP
---
0x13d: JUMPDEST 
0x13e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13f
[0x13f:0x145]
---
Predecessors: [0x30]
Successors: [0x146, 0x14a]
---
0x13f JUMPDEST
0x140 CALLVALUE
0x141 ISZERO
0x142 PUSH2 0x14a
0x145 JUMPI
---
0x13f: JUMPDEST 
0x140: V103 = CALLVALUE
0x141: V104 = ISZERO V103
0x142: V105 = 0x14a
0x145: JUMPI 0x14a V104
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x146
[0x146:0x149]
---
Predecessors: [0x13f]
Successors: []
---
0x146 PUSH1 0x0
0x148 DUP1
0x149 REVERT
---
0x146: V106 = 0x0
0x149: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14a
[0x14a:0x151]
---
Predecessors: [0x13f]
Successors: [0x730]
---
0x14a JUMPDEST
0x14b PUSH2 0x152
0x14e PUSH2 0x730
0x151 JUMP
---
0x14a: JUMPDEST 
0x14b: V107 = 0x152
0x14e: V108 = 0x730
0x151: JUMP 0x730
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x152]
Exit stack: [V12, 0x152]

================================

Block 0x152
[0x152:0x163]
---
Predecessors: [0x730, 0x843, 0x849, 0x85e, 0x870, 0x879, 0x87f, 0x888, 0x8a1, 0x8a7, 0x8b5, 0x8bb]
Successors: []
---
0x152 JUMPDEST
0x153 PUSH1 0x40
0x155 MLOAD
0x156 SWAP1
0x157 DUP2
0x158 MSTORE
0x159 PUSH1 0x20
0x15b ADD
0x15c PUSH1 0x40
0x15e MLOAD
0x15f DUP1
0x160 SWAP2
0x161 SUB
0x162 SWAP1
0x163 RETURN
---
0x152: JUMPDEST 
0x153: V109 = 0x40
0x155: V110 = M[0x40]
0x158: M[V110] = S0
0x159: V111 = 0x20
0x15b: V112 = ADD 0x20 V110
0x15c: V113 = 0x40
0x15e: V114 = M[0x40]
0x161: V115 = SUB V112 V114
0x163: RETURN V114 V115
---
Entry stack: [V12, 0x152, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x152]

================================

Block 0x164
[0x164:0x16a]
---
Predecessors: [0x3b]
Successors: [0x16b, 0x16f]
---
0x164 JUMPDEST
0x165 CALLVALUE
0x166 ISZERO
0x167 PUSH2 0x16f
0x16a JUMPI
---
0x164: JUMPDEST 
0x165: V116 = CALLVALUE
0x166: V117 = ISZERO V116
0x167: V118 = 0x16f
0x16a: JUMPI 0x16f V117
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16b
[0x16b:0x16e]
---
Predecessors: [0x164]
Successors: []
---
0x16b PUSH1 0x0
0x16d DUP1
0x16e REVERT
---
0x16b: V119 = 0x0
0x16e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16f
[0x16f:0x179]
---
Predecessors: [0x164]
Successors: [0x735]
---
0x16f JUMPDEST
0x170 PUSH2 0x17a
0x173 PUSH1 0x4
0x175 CALLDATALOAD
0x176 PUSH2 0x735
0x179 JUMP
---
0x16f: JUMPDEST 
0x170: V120 = 0x17a
0x173: V121 = 0x4
0x175: V122 = CALLDATALOAD 0x4
0x176: V123 = 0x735
0x179: JUMP 0x735
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x17a, V122]
Exit stack: [V12, 0x17a, V122]

================================

Block 0x17a
[0x17a:0x193]
---
Predecessors: [0x63a, 0x83d]
Successors: []
---
0x17a JUMPDEST
0x17b PUSH1 0x40
0x17d MLOAD
0x17e SWAP2
0x17f DUP3
0x180 MSTORE
0x181 ISZERO
0x182 ISZERO
0x183 PUSH1 0x20
0x185 DUP3
0x186 ADD
0x187 MSTORE
0x188 PUSH1 0x40
0x18a SWAP1
0x18b DUP2
0x18c ADD
0x18d SWAP1
0x18e MLOAD
0x18f DUP1
0x190 SWAP2
0x191 SUB
0x192 SWAP1
0x193 RETURN
---
0x17a: JUMPDEST 
0x17b: V124 = 0x40
0x17d: V125 = M[0x40]
0x180: M[V125] = S1
0x181: V126 = ISZERO S0
0x182: V127 = ISZERO V126
0x183: V128 = 0x20
0x186: V129 = ADD V125 0x20
0x187: M[V129] = V127
0x188: V130 = 0x40
0x18c: V131 = ADD 0x40 V125
0x18e: V132 = M[0x40]
0x191: V133 = SUB V131 V132
0x193: RETURN V132 V133
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x194
[0x194:0x19a]
---
Predecessors: [0x46]
Successors: [0x19b, 0x19f]
---
0x194 JUMPDEST
0x195 CALLVALUE
0x196 ISZERO
0x197 PUSH2 0x19f
0x19a JUMPI
---
0x194: JUMPDEST 
0x195: V134 = CALLVALUE
0x196: V135 = ISZERO V134
0x197: V136 = 0x19f
0x19a: JUMPI 0x19f V135
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19b
[0x19b:0x19e]
---
Predecessors: [0x194]
Successors: []
---
0x19b PUSH1 0x0
0x19d DUP1
0x19e REVERT
---
0x19b: V137 = 0x0
0x19e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19f
[0x19f:0x1a6]
---
Predecessors: [0x194]
Successors: [0x843]
---
0x19f JUMPDEST
0x1a0 PUSH2 0x152
0x1a3 PUSH2 0x843
0x1a6 JUMP
---
0x19f: JUMPDEST 
0x1a0: V138 = 0x152
0x1a3: V139 = 0x843
0x1a6: JUMP 0x843
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x152]
Exit stack: [V12, 0x152]

================================

Block 0x1a7
[0x1a7:0x1b8]
---
Predecessors: []
Successors: []
---
0x1a7 JUMPDEST
0x1a8 PUSH1 0x40
0x1aa MLOAD
0x1ab SWAP1
0x1ac DUP2
0x1ad MSTORE
0x1ae PUSH1 0x20
0x1b0 ADD
0x1b1 PUSH1 0x40
0x1b3 MLOAD
0x1b4 DUP1
0x1b5 SWAP2
0x1b6 SUB
0x1b7 SWAP1
0x1b8 RETURN
---
0x1a7: JUMPDEST 
0x1a8: V140 = 0x40
0x1aa: V141 = M[0x40]
0x1ad: M[V141] = S0
0x1ae: V142 = 0x20
0x1b0: V143 = ADD 0x20 V141
0x1b1: V144 = 0x40
0x1b3: V145 = M[0x40]
0x1b6: V146 = SUB V143 V145
0x1b8: RETURN V145 V146
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b9
[0x1b9:0x1bf]
---
Predecessors: [0x51]
Successors: [0x1c0, 0x1c4]
---
0x1b9 JUMPDEST
0x1ba CALLVALUE
0x1bb ISZERO
0x1bc PUSH2 0x1c4
0x1bf JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V147 = CALLVALUE
0x1bb: V148 = ISZERO V147
0x1bc: V149 = 0x1c4
0x1bf: JUMPI 0x1c4 V148
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c0
[0x1c0:0x1c3]
---
Predecessors: [0x1b9]
Successors: []
---
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 REVERT
---
0x1c0: V150 = 0x0
0x1c3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c4
[0x1c4:0x1cb]
---
Predecessors: [0x1b9]
Successors: [0x849]
---
0x1c4 JUMPDEST
0x1c5 PUSH2 0x152
0x1c8 PUSH2 0x849
0x1cb JUMP
---
0x1c4: JUMPDEST 
0x1c5: V151 = 0x152
0x1c8: V152 = 0x849
0x1cb: JUMP 0x849
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x152]
Exit stack: [V12, 0x152]

================================

Block 0x1cc
[0x1cc:0x1dd]
---
Predecessors: []
Successors: []
---
0x1cc JUMPDEST
0x1cd PUSH1 0x40
0x1cf MLOAD
0x1d0 SWAP1
0x1d1 DUP2
0x1d2 MSTORE
0x1d3 PUSH1 0x20
0x1d5 ADD
0x1d6 PUSH1 0x40
0x1d8 MLOAD
0x1d9 DUP1
0x1da SWAP2
0x1db SUB
0x1dc SWAP1
0x1dd RETURN
---
0x1cc: JUMPDEST 
0x1cd: V153 = 0x40
0x1cf: V154 = M[0x40]
0x1d2: M[V154] = S0
0x1d3: V155 = 0x20
0x1d5: V156 = ADD 0x20 V154
0x1d6: V157 = 0x40
0x1d8: V158 = M[0x40]
0x1db: V159 = SUB V156 V158
0x1dd: RETURN V158 V159
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1de
[0x1de:0x1e4]
---
Predecessors: [0x5c]
Successors: [0x1e5, 0x1e9]
---
0x1de JUMPDEST
0x1df CALLVALUE
0x1e0 ISZERO
0x1e1 PUSH2 0x1e9
0x1e4 JUMPI
---
0x1de: JUMPDEST 
0x1df: V160 = CALLVALUE
0x1e0: V161 = ISZERO V160
0x1e1: V162 = 0x1e9
0x1e4: JUMPI 0x1e9 V161
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e5
[0x1e5:0x1e8]
---
Predecessors: [0x1de]
Successors: []
---
0x1e5 PUSH1 0x0
0x1e7 DUP1
0x1e8 REVERT
---
0x1e5: V163 = 0x0
0x1e8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e9
[0x1e9:0x1f0]
---
Predecessors: [0x1de]
Successors: [0x84f]
---
0x1e9 JUMPDEST
0x1ea PUSH2 0x1f1
0x1ed PUSH2 0x84f
0x1f0 JUMP
---
0x1e9: JUMPDEST 
0x1ea: V164 = 0x1f1
0x1ed: V165 = 0x84f
0x1f0: JUMP 0x84f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f1]
Exit stack: [V12, 0x1f1]

================================

Block 0x1f1
[0x1f1:0x20c]
---
Predecessors: [0x84f, 0x892]
Successors: []
---
0x1f1 JUMPDEST
0x1f2 PUSH1 0x40
0x1f4 MLOAD
0x1f5 PUSH1 0x1
0x1f7 PUSH1 0xa0
0x1f9 PUSH1 0x2
0x1fb EXP
0x1fc SUB
0x1fd SWAP1
0x1fe SWAP2
0x1ff AND
0x200 DUP2
0x201 MSTORE
0x202 PUSH1 0x20
0x204 ADD
0x205 PUSH1 0x40
0x207 MLOAD
0x208 DUP1
0x209 SWAP2
0x20a SUB
0x20b SWAP1
0x20c RETURN
---
0x1f1: JUMPDEST 
0x1f2: V166 = 0x40
0x1f4: V167 = M[0x40]
0x1f5: V168 = 0x1
0x1f7: V169 = 0xa0
0x1f9: V170 = 0x2
0x1fb: V171 = EXP 0x2 0xa0
0x1fc: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ff: V173 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x201: M[V167] = V173
0x202: V174 = 0x20
0x204: V175 = ADD 0x20 V167
0x205: V176 = 0x40
0x207: V177 = M[0x40]
0x20a: V178 = SUB V175 V177
0x20c: RETURN V177 V178
---
Entry stack: [V12, 0x1f1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1f1]

================================

Block 0x20d
[0x20d:0x213]
---
Predecessors: [0x67]
Successors: [0x214, 0x218]
---
0x20d JUMPDEST
0x20e CALLVALUE
0x20f ISZERO
0x210 PUSH2 0x218
0x213 JUMPI
---
0x20d: JUMPDEST 
0x20e: V179 = CALLVALUE
0x20f: V180 = ISZERO V179
0x210: V181 = 0x218
0x213: JUMPI 0x218 V180
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x214
[0x214:0x217]
---
Predecessors: [0x20d]
Successors: []
---
0x214 PUSH1 0x0
0x216 DUP1
0x217 REVERT
---
0x214: V182 = 0x0
0x217: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x218
[0x218:0x22b]
---
Predecessors: [0x20d]
Successors: [0x85e]
---
0x218 JUMPDEST
0x219 PUSH2 0x152
0x21c PUSH1 0x1
0x21e PUSH1 0xa0
0x220 PUSH1 0x2
0x222 EXP
0x223 SUB
0x224 PUSH1 0x4
0x226 CALLDATALOAD
0x227 AND
0x228 PUSH2 0x85e
0x22b JUMP
---
0x218: JUMPDEST 
0x219: V183 = 0x152
0x21c: V184 = 0x1
0x21e: V185 = 0xa0
0x220: V186 = 0x2
0x222: V187 = EXP 0x2 0xa0
0x223: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x224: V189 = 0x4
0x226: V190 = CALLDATALOAD 0x4
0x227: V191 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x228: V192 = 0x85e
0x22b: JUMP 0x85e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x152, V191]
Exit stack: [V12, 0x152, V191]

================================

Block 0x22c
[0x22c:0x23d]
---
Predecessors: []
Successors: []
---
0x22c JUMPDEST
0x22d PUSH1 0x40
0x22f MLOAD
0x230 SWAP1
0x231 DUP2
0x232 MSTORE
0x233 PUSH1 0x20
0x235 ADD
0x236 PUSH1 0x40
0x238 MLOAD
0x239 DUP1
0x23a SWAP2
0x23b SUB
0x23c SWAP1
0x23d RETURN
---
0x22c: JUMPDEST 
0x22d: V193 = 0x40
0x22f: V194 = M[0x40]
0x232: M[V194] = S0
0x233: V195 = 0x20
0x235: V196 = ADD 0x20 V194
0x236: V197 = 0x40
0x238: V198 = M[0x40]
0x23b: V199 = SUB V196 V198
0x23d: RETURN V198 V199
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x23e
[0x23e:0x244]
---
Predecessors: [0x72]
Successors: [0x245, 0x249]
---
0x23e JUMPDEST
0x23f CALLVALUE
0x240 ISZERO
0x241 PUSH2 0x249
0x244 JUMPI
---
0x23e: JUMPDEST 
0x23f: V200 = CALLVALUE
0x240: V201 = ISZERO V200
0x241: V202 = 0x249
0x244: JUMPI 0x249 V201
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x245
[0x245:0x248]
---
Predecessors: [0x23e]
Successors: []
---
0x245 PUSH1 0x0
0x247 DUP1
0x248 REVERT
---
0x245: V203 = 0x0
0x248: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x249
[0x249:0x250]
---
Predecessors: [0x23e]
Successors: [0x870]
---
0x249 JUMPDEST
0x24a PUSH2 0x152
0x24d PUSH2 0x870
0x250 JUMP
---
0x249: JUMPDEST 
0x24a: V204 = 0x152
0x24d: V205 = 0x870
0x250: JUMP 0x870
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x152]
Exit stack: [V12, 0x152]

================================

Block 0x251
[0x251:0x262]
---
Predecessors: []
Successors: []
---
0x251 JUMPDEST
0x252 PUSH1 0x40
0x254 MLOAD
0x255 SWAP1
0x256 DUP2
0x257 MSTORE
0x258 PUSH1 0x20
0x25a ADD
0x25b PUSH1 0x40
0x25d MLOAD
0x25e DUP1
0x25f SWAP2
0x260 SUB
0x261 SWAP1
0x262 RETURN
---
0x251: JUMPDEST 
0x252: V206 = 0x40
0x254: V207 = M[0x40]
0x257: M[V207] = S0
0x258: V208 = 0x20
0x25a: V209 = ADD 0x20 V207
0x25b: V210 = 0x40
0x25d: V211 = M[0x40]
0x260: V212 = SUB V209 V211
0x262: RETURN V211 V212
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x263
[0x263:0x269]
---
Predecessors: [0x7d]
Successors: [0x26a, 0x26e]
---
0x263 JUMPDEST
0x264 CALLVALUE
0x265 ISZERO
0x266 PUSH2 0x26e
0x269 JUMPI
---
0x263: JUMPDEST 
0x264: V213 = CALLVALUE
0x265: V214 = ISZERO V213
0x266: V215 = 0x26e
0x269: JUMPI 0x26e V214
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26a
[0x26a:0x26d]
---
Predecessors: [0x263]
Successors: []
---
0x26a PUSH1 0x0
0x26c DUP1
0x26d REVERT
---
0x26a: V216 = 0x0
0x26d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26e
[0x26e:0x275]
---
Predecessors: [0x263]
Successors: [0x879]
---
0x26e JUMPDEST
0x26f PUSH2 0x152
0x272 PUSH2 0x879
0x275 JUMP
---
0x26e: JUMPDEST 
0x26f: V217 = 0x152
0x272: V218 = 0x879
0x275: JUMP 0x879
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x152]
Exit stack: [V12, 0x152]

================================

Block 0x276
[0x276:0x287]
---
Predecessors: []
Successors: []
---
0x276 JUMPDEST
0x277 PUSH1 0x40
0x279 MLOAD
0x27a SWAP1
0x27b DUP2
0x27c MSTORE
0x27d PUSH1 0x20
0x27f ADD
0x280 PUSH1 0x40
0x282 MLOAD
0x283 DUP1
0x284 SWAP2
0x285 SUB
0x286 SWAP1
0x287 RETURN
---
0x276: JUMPDEST 
0x277: V219 = 0x40
0x279: V220 = M[0x40]
0x27c: M[V220] = S0
0x27d: V221 = 0x20
0x27f: V222 = ADD 0x20 V220
0x280: V223 = 0x40
0x282: V224 = M[0x40]
0x285: V225 = SUB V222 V224
0x287: RETURN V224 V225
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x288
[0x288:0x28e]
---
Predecessors: [0x88]
Successors: [0x28f, 0x293]
---
0x288 JUMPDEST
0x289 CALLVALUE
0x28a ISZERO
0x28b PUSH2 0x293
0x28e JUMPI
---
0x288: JUMPDEST 
0x289: V226 = CALLVALUE
0x28a: V227 = ISZERO V226
0x28b: V228 = 0x293
0x28e: JUMPI 0x293 V227
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28f
[0x28f:0x292]
---
Predecessors: [0x288]
Successors: []
---
0x28f PUSH1 0x0
0x291 DUP1
0x292 REVERT
---
0x28f: V229 = 0x0
0x292: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x293
[0x293:0x29a]
---
Predecessors: [0x288]
Successors: [0x87f]
---
0x293 JUMPDEST
0x294 PUSH2 0x152
0x297 PUSH2 0x87f
0x29a JUMP
---
0x293: JUMPDEST 
0x294: V230 = 0x152
0x297: V231 = 0x87f
0x29a: JUMP 0x87f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x152]
Exit stack: [V12, 0x152]

================================

Block 0x29b
[0x29b:0x2ac]
---
Predecessors: []
Successors: []
---
0x29b JUMPDEST
0x29c PUSH1 0x40
0x29e MLOAD
0x29f SWAP1
0x2a0 DUP2
0x2a1 MSTORE
0x2a2 PUSH1 0x20
0x2a4 ADD
0x2a5 PUSH1 0x40
0x2a7 MLOAD
0x2a8 DUP1
0x2a9 SWAP2
0x2aa SUB
0x2ab SWAP1
0x2ac RETURN
---
0x29b: JUMPDEST 
0x29c: V232 = 0x40
0x29e: V233 = M[0x40]
0x2a1: M[V233] = S0
0x2a2: V234 = 0x20
0x2a4: V235 = ADD 0x20 V233
0x2a5: V236 = 0x40
0x2a7: V237 = M[0x40]
0x2aa: V238 = SUB V235 V237
0x2ac: RETURN V237 V238
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ad
[0x2ad:0x2b3]
---
Predecessors: [0x93]
Successors: [0x2b4, 0x2b8]
---
0x2ad JUMPDEST
0x2ae CALLVALUE
0x2af ISZERO
0x2b0 PUSH2 0x2b8
0x2b3 JUMPI
---
0x2ad: JUMPDEST 
0x2ae: V239 = CALLVALUE
0x2af: V240 = ISZERO V239
0x2b0: V241 = 0x2b8
0x2b3: JUMPI 0x2b8 V240
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b4
[0x2b4:0x2b7]
---
Predecessors: [0x2ad]
Successors: []
---
0x2b4 PUSH1 0x0
0x2b6 DUP1
0x2b7 REVERT
---
0x2b4: V242 = 0x0
0x2b7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b8
[0x2b8:0x2bf]
---
Predecessors: [0x2ad]
Successors: [0x888]
---
0x2b8 JUMPDEST
0x2b9 PUSH2 0x152
0x2bc PUSH2 0x888
0x2bf JUMP
---
0x2b8: JUMPDEST 
0x2b9: V243 = 0x152
0x2bc: V244 = 0x888
0x2bf: JUMP 0x888
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x152]
Exit stack: [V12, 0x152]

================================

Block 0x2c0
[0x2c0:0x2d1]
---
Predecessors: []
Successors: []
---
0x2c0 JUMPDEST
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 SWAP1
0x2c5 DUP2
0x2c6 MSTORE
0x2c7 PUSH1 0x20
0x2c9 ADD
0x2ca PUSH1 0x40
0x2cc MLOAD
0x2cd DUP1
0x2ce SWAP2
0x2cf SUB
0x2d0 SWAP1
0x2d1 RETURN
---
0x2c0: JUMPDEST 
0x2c1: V245 = 0x40
0x2c3: V246 = M[0x40]
0x2c6: M[V246] = S0
0x2c7: V247 = 0x20
0x2c9: V248 = ADD 0x20 V246
0x2ca: V249 = 0x40
0x2cc: V250 = M[0x40]
0x2cf: V251 = SUB V248 V250
0x2d1: RETURN V250 V251
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d2
[0x2d2:0x2d8]
---
Predecessors: [0x9e]
Successors: [0x2d9, 0x2dd]
---
0x2d2 JUMPDEST
0x2d3 CALLVALUE
0x2d4 ISZERO
0x2d5 PUSH2 0x2dd
0x2d8 JUMPI
---
0x2d2: JUMPDEST 
0x2d3: V252 = CALLVALUE
0x2d4: V253 = ISZERO V252
0x2d5: V254 = 0x2dd
0x2d8: JUMPI 0x2dd V253
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d9
[0x2d9:0x2dc]
---
Predecessors: [0x2d2]
Successors: []
---
0x2d9 PUSH1 0x0
0x2db DUP1
0x2dc REVERT
---
0x2d9: V255 = 0x0
0x2dc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2dd
[0x2dd:0x2e4]
---
Predecessors: [0x2d2]
Successors: [0x892]
---
0x2dd JUMPDEST
0x2de PUSH2 0x1f1
0x2e1 PUSH2 0x892
0x2e4 JUMP
---
0x2dd: JUMPDEST 
0x2de: V256 = 0x1f1
0x2e1: V257 = 0x892
0x2e4: JUMP 0x892
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f1]
Exit stack: [V12, 0x1f1]

================================

Block 0x2e5
[0x2e5:0x300]
---
Predecessors: []
Successors: []
---
0x2e5 JUMPDEST
0x2e6 PUSH1 0x40
0x2e8 MLOAD
0x2e9 PUSH1 0x1
0x2eb PUSH1 0xa0
0x2ed PUSH1 0x2
0x2ef EXP
0x2f0 SUB
0x2f1 SWAP1
0x2f2 SWAP2
0x2f3 AND
0x2f4 DUP2
0x2f5 MSTORE
0x2f6 PUSH1 0x20
0x2f8 ADD
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc DUP1
0x2fd SWAP2
0x2fe SUB
0x2ff SWAP1
0x300 RETURN
---
0x2e5: JUMPDEST 
0x2e6: V258 = 0x40
0x2e8: V259 = M[0x40]
0x2e9: V260 = 0x1
0x2eb: V261 = 0xa0
0x2ed: V262 = 0x2
0x2ef: V263 = EXP 0x2 0xa0
0x2f0: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f3: V265 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2f5: M[V259] = V265
0x2f6: V266 = 0x20
0x2f8: V267 = ADD 0x20 V259
0x2f9: V268 = 0x40
0x2fb: V269 = M[0x40]
0x2fe: V270 = SUB V267 V269
0x300: RETURN V269 V270
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x301
[0x301:0x307]
---
Predecessors: [0xa9]
Successors: [0x308, 0x30c]
---
0x301 JUMPDEST
0x302 CALLVALUE
0x303 ISZERO
0x304 PUSH2 0x30c
0x307 JUMPI
---
0x301: JUMPDEST 
0x302: V271 = CALLVALUE
0x303: V272 = ISZERO V271
0x304: V273 = 0x30c
0x307: JUMPI 0x30c V272
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x308
[0x308:0x30b]
---
Predecessors: [0x301]
Successors: []
---
0x308 PUSH1 0x0
0x30a DUP1
0x30b REVERT
---
0x308: V274 = 0x0
0x30b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x30c
[0x30c:0x313]
---
Predecessors: [0x301]
Successors: [0x8a1]
---
0x30c JUMPDEST
0x30d PUSH2 0x152
0x310 PUSH2 0x8a1
0x313 JUMP
---
0x30c: JUMPDEST 
0x30d: V275 = 0x152
0x310: V276 = 0x8a1
0x313: JUMP 0x8a1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x152]
Exit stack: [V12, 0x152]

================================

Block 0x314
[0x314:0x325]
---
Predecessors: []
Successors: []
---
0x314 JUMPDEST
0x315 PUSH1 0x40
0x317 MLOAD
0x318 SWAP1
0x319 DUP2
0x31a MSTORE
0x31b PUSH1 0x20
0x31d ADD
0x31e PUSH1 0x40
0x320 MLOAD
0x321 DUP1
0x322 SWAP2
0x323 SUB
0x324 SWAP1
0x325 RETURN
---
0x314: JUMPDEST 
0x315: V277 = 0x40
0x317: V278 = M[0x40]
0x31a: M[V278] = S0
0x31b: V279 = 0x20
0x31d: V280 = ADD 0x20 V278
0x31e: V281 = 0x40
0x320: V282 = M[0x40]
0x323: V283 = SUB V280 V282
0x325: RETURN V282 V283
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x326
[0x326:0x32c]
---
Predecessors: [0xb4]
Successors: [0x32d, 0x331]
---
0x326 JUMPDEST
0x327 CALLVALUE
0x328 ISZERO
0x329 PUSH2 0x331
0x32c JUMPI
---
0x326: JUMPDEST 
0x327: V284 = CALLVALUE
0x328: V285 = ISZERO V284
0x329: V286 = 0x331
0x32c: JUMPI 0x331 V285
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32d
[0x32d:0x330]
---
Predecessors: [0x326]
Successors: []
---
0x32d PUSH1 0x0
0x32f DUP1
0x330 REVERT
---
0x32d: V287 = 0x0
0x330: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x331
[0x331:0x338]
---
Predecessors: [0x326]
Successors: [0x8a7]
---
0x331 JUMPDEST
0x332 PUSH2 0x152
0x335 PUSH2 0x8a7
0x338 JUMP
---
0x331: JUMPDEST 
0x332: V288 = 0x152
0x335: V289 = 0x8a7
0x338: JUMP 0x8a7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x152]
Exit stack: [V12, 0x152]

================================

Block 0x339
[0x339:0x34a]
---
Predecessors: []
Successors: []
---
0x339 JUMPDEST
0x33a PUSH1 0x40
0x33c MLOAD
0x33d SWAP1
0x33e DUP2
0x33f MSTORE
0x340 PUSH1 0x20
0x342 ADD
0x343 PUSH1 0x40
0x345 MLOAD
0x346 DUP1
0x347 SWAP2
0x348 SUB
0x349 SWAP1
0x34a RETURN
---
0x339: JUMPDEST 
0x33a: V290 = 0x40
0x33c: V291 = M[0x40]
0x33f: M[V291] = S0
0x340: V292 = 0x20
0x342: V293 = ADD 0x20 V291
0x343: V294 = 0x40
0x345: V295 = M[0x40]
0x348: V296 = SUB V293 V295
0x34a: RETURN V295 V296
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x34b
[0x34b:0x351]
---
Predecessors: [0xbf]
Successors: [0x352, 0x356]
---
0x34b JUMPDEST
0x34c CALLVALUE
0x34d ISZERO
0x34e PUSH2 0x356
0x351 JUMPI
---
0x34b: JUMPDEST 
0x34c: V297 = CALLVALUE
0x34d: V298 = ISZERO V297
0x34e: V299 = 0x356
0x351: JUMPI 0x356 V298
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x352
[0x352:0x355]
---
Predecessors: [0x34b]
Successors: []
---
0x352 PUSH1 0x0
0x354 DUP1
0x355 REVERT
---
0x352: V300 = 0x0
0x355: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x356
[0x356:0x35d]
---
Predecessors: [0x34b]
Successors: [0x8ac]
---
0x356 JUMPDEST
0x357 PUSH2 0x35e
0x35a PUSH2 0x8ac
0x35d JUMP
---
0x356: JUMPDEST 
0x357: V301 = 0x35e
0x35a: V302 = 0x8ac
0x35d: JUMP 0x8ac
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x35e]
Exit stack: [V12, 0x35e]

================================

Block 0x35e
[0x35e:0x371]
---
Predecessors: [0x8ac]
Successors: []
---
0x35e JUMPDEST
0x35f PUSH1 0x40
0x361 MLOAD
0x362 SWAP1
0x363 ISZERO
0x364 ISZERO
0x365 DUP2
0x366 MSTORE
0x367 PUSH1 0x20
0x369 ADD
0x36a PUSH1 0x40
0x36c MLOAD
0x36d DUP1
0x36e SWAP2
0x36f SUB
0x370 SWAP1
0x371 RETURN
---
0x35e: JUMPDEST 
0x35f: V303 = 0x40
0x361: V304 = M[0x40]
0x363: V305 = ISZERO V782
0x364: V306 = ISZERO V305
0x366: M[V304] = V306
0x367: V307 = 0x20
0x369: V308 = ADD 0x20 V304
0x36a: V309 = 0x40
0x36c: V310 = M[0x40]
0x36f: V311 = SUB V308 V310
0x371: RETURN V310 V311
---
Entry stack: [V12, 0x35e, V782]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x35e]

================================

Block 0x372
[0x372:0x378]
---
Predecessors: [0xca]
Successors: [0x379, 0x37d]
---
0x372 JUMPDEST
0x373 CALLVALUE
0x374 ISZERO
0x375 PUSH2 0x37d
0x378 JUMPI
---
0x372: JUMPDEST 
0x373: V312 = CALLVALUE
0x374: V313 = ISZERO V312
0x375: V314 = 0x37d
0x378: JUMPI 0x37d V313
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x379
[0x379:0x37c]
---
Predecessors: [0x372]
Successors: []
---
0x379 PUSH1 0x0
0x37b DUP1
0x37c REVERT
---
0x379: V315 = 0x0
0x37c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37d
[0x37d:0x384]
---
Predecessors: [0x372]
Successors: [0x8b5]
---
0x37d JUMPDEST
0x37e PUSH2 0x152
0x381 PUSH2 0x8b5
0x384 JUMP
---
0x37d: JUMPDEST 
0x37e: V316 = 0x152
0x381: V317 = 0x8b5
0x384: JUMP 0x8b5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x152]
Exit stack: [V12, 0x152]

================================

Block 0x385
[0x385:0x396]
---
Predecessors: []
Successors: []
---
0x385 JUMPDEST
0x386 PUSH1 0x40
0x388 MLOAD
0x389 SWAP1
0x38a DUP2
0x38b MSTORE
0x38c PUSH1 0x20
0x38e ADD
0x38f PUSH1 0x40
0x391 MLOAD
0x392 DUP1
0x393 SWAP2
0x394 SUB
0x395 SWAP1
0x396 RETURN
---
0x385: JUMPDEST 
0x386: V318 = 0x40
0x388: V319 = M[0x40]
0x38b: M[V319] = S0
0x38c: V320 = 0x20
0x38e: V321 = ADD 0x20 V319
0x38f: V322 = 0x40
0x391: V323 = M[0x40]
0x394: V324 = SUB V321 V323
0x396: RETURN V323 V324
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x397
[0x397:0x39d]
---
Predecessors: [0xd5]
Successors: [0x39e, 0x3a2]
---
0x397 JUMPDEST
0x398 CALLVALUE
0x399 ISZERO
0x39a PUSH2 0x3a2
0x39d JUMPI
---
0x397: JUMPDEST 
0x398: V325 = CALLVALUE
0x399: V326 = ISZERO V325
0x39a: V327 = 0x3a2
0x39d: JUMPI 0x3a2 V326
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39e
[0x39e:0x3a1]
---
Predecessors: [0x397]
Successors: []
---
0x39e PUSH1 0x0
0x3a0 DUP1
0x3a1 REVERT
---
0x39e: V328 = 0x0
0x3a1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a2
[0x3a2:0x3a9]
---
Predecessors: [0x397]
Successors: [0x8bb]
---
0x3a2 JUMPDEST
0x3a3 PUSH2 0x152
0x3a6 PUSH2 0x8bb
0x3a9 JUMP
---
0x3a2: JUMPDEST 
0x3a3: V329 = 0x152
0x3a6: V330 = 0x8bb
0x3a9: JUMP 0x8bb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x152]
Exit stack: [V12, 0x152]

================================

Block 0x3aa
[0x3aa:0x3bb]
---
Predecessors: []
Successors: []
---
0x3aa JUMPDEST
0x3ab PUSH1 0x40
0x3ad MLOAD
0x3ae SWAP1
0x3af DUP2
0x3b0 MSTORE
0x3b1 PUSH1 0x20
0x3b3 ADD
0x3b4 PUSH1 0x40
0x3b6 MLOAD
0x3b7 DUP1
0x3b8 SWAP2
0x3b9 SUB
0x3ba SWAP1
0x3bb RETURN
---
0x3aa: JUMPDEST 
0x3ab: V331 = 0x40
0x3ad: V332 = M[0x40]
0x3b0: M[V332] = S0
0x3b1: V333 = 0x20
0x3b3: V334 = ADD 0x20 V332
0x3b4: V335 = 0x40
0x3b6: V336 = M[0x40]
0x3b9: V337 = SUB V334 V336
0x3bb: RETURN V336 V337
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3bc
[0x3bc:0x3c2]
---
Predecessors: [0xe0]
Successors: [0x3c3, 0x3c7]
---
0x3bc JUMPDEST
0x3bd CALLVALUE
0x3be ISZERO
0x3bf PUSH2 0x3c7
0x3c2 JUMPI
---
0x3bc: JUMPDEST 
0x3bd: V338 = CALLVALUE
0x3be: V339 = ISZERO V338
0x3bf: V340 = 0x3c7
0x3c2: JUMPI 0x3c7 V339
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c3
[0x3c3:0x3c6]
---
Predecessors: [0x3bc]
Successors: []
---
0x3c3 PUSH1 0x0
0x3c5 DUP1
0x3c6 REVERT
---
0x3c3: V341 = 0x0
0x3c6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c7
[0x3c7:0x3ce]
---
Predecessors: [0x3bc]
Successors: [0x8c5]
---
0x3c7 JUMPDEST
0x3c8 PUSH2 0x110
0x3cb PUSH2 0x8c5
0x3ce JUMP
---
0x3c7: JUMPDEST 
0x3c8: V342 = 0x110
0x3cb: V343 = 0x8c5
0x3ce: JUMP 0x8c5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x110]
Exit stack: [V12, 0x110]

================================

Block 0x3cf
[0x3cf:0x3d0]
---
Predecessors: []
Successors: []
---
0x3cf JUMPDEST
0x3d0 STOP
---
0x3cf: JUMPDEST 
0x3d0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3d1
[0x3d1:0x3de]
---
Predecessors: [0x108, 0x129]
Successors: [0x735]
---
0x3d1 JUMPDEST
0x3d2 CALLVALUE
0x3d3 PUSH1 0x0
0x3d5 DUP1
0x3d6 DUP1
0x3d7 PUSH2 0x3df
0x3da DUP5
0x3db PUSH2 0x735
0x3de JUMP
---
0x3d1: JUMPDEST 
0x3d2: V344 = CALLVALUE
0x3d3: V345 = 0x0
0x3d7: V346 = 0x3df
0x3db: V347 = 0x735
0x3de: JUMP 0x735
---
Entry stack: [V12, 0x110, S0]
Stack pops: 0
Stack additions: [V344, 0x0, 0x0, 0x0, 0x3df, V344]
Exit stack: [V12, 0x110, S0, V344, 0x0, 0x0, 0x0, 0x3df, V344]

================================

Block 0x3df
[0x3df:0x3ec]
---
Predecessors: [0x63a, 0x83d, 0x9d2, 0xa19]
Successors: [0x3ed, 0x3f1]
---
0x3df JUMPDEST
0x3e0 SWAP1
0x3e1 SWAP4
0x3e2 POP
0x3e3 SWAP2
0x3e4 POP
0x3e5 PUSH1 0x0
0x3e7 DUP4
0x3e8 GT
0x3e9 PUSH2 0x3f1
0x3ec JUMPI
---
0x3df: JUMPDEST 
0x3e5: V348 = 0x0
0x3e8: V349 = GT S1 0x0
0x3e9: V350 = 0x3f1
0x3ec: JUMPI 0x3f1 V349
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1, S0, S2]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S1, S0, S2]

================================

Block 0x3ed
[0x3ed:0x3f0]
---
Predecessors: [0x3df]
Successors: []
---
0x3ed PUSH1 0x0
0x3ef DUP1
0x3f0 REVERT
---
0x3ed: V351 = 0x0
0x3f0: REVERT 0x0 0x0
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x3f1
[0x3f1:0x3fe]
---
Predecessors: [0x3df]
Successors: [0x3ff, 0x406]
---
0x3f1 JUMPDEST
0x3f2 PUSH1 0x8
0x3f4 SLOAD
0x3f5 PUSH1 0xff
0x3f7 AND
0x3f8 ISZERO
0x3f9 DUP1
0x3fa ISZERO
0x3fb PUSH2 0x406
0x3fe JUMPI
---
0x3f1: JUMPDEST 
0x3f2: V352 = 0x8
0x3f4: V353 = S[0x8]
0x3f5: V354 = 0xff
0x3f7: V355 = AND 0xff V353
0x3f8: V356 = ISZERO V355
0x3fa: V357 = ISZERO V356
0x3fb: V358 = 0x406
0x3fe: JUMPI 0x406 V357
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V356]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V356]

================================

Block 0x3ff
[0x3ff:0x405]
---
Predecessors: [0x3f1]
Successors: [0x406]
---
0x3ff POP
0x400 PUSH1 0x2
0x402 SLOAD
0x403 TIMESTAMP
0x404 LT
0x405 ISZERO
---
0x400: V359 = 0x2
0x402: V360 = S[0x2]
0x403: V361 = TIMESTAMP
0x404: V362 = LT V361 V360
0x405: V363 = ISZERO V362
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V356]
Stack pops: 1
Stack additions: [V363]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V363]

================================

Block 0x406
[0x406:0x40c]
---
Predecessors: [0x3f1, 0x3ff]
Successors: [0x40d, 0x414]
---
0x406 JUMPDEST
0x407 DUP1
0x408 ISZERO
0x409 PUSH2 0x414
0x40c JUMPI
---
0x406: JUMPDEST 
0x408: V364 = ISZERO S0
0x409: V365 = 0x414
0x40c: JUMPI 0x414 V364
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x40d
[0x40d:0x413]
---
Predecessors: [0x406]
Successors: [0x414]
---
0x40d POP
0x40e PUSH1 0x3
0x410 SLOAD
0x411 TIMESTAMP
0x412 GT
0x413 ISZERO
---
0x40e: V366 = 0x3
0x410: V367 = S[0x3]
0x411: V368 = TIMESTAMP
0x412: V369 = GT V368 V367
0x413: V370 = ISZERO V369
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V370]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V370]

================================

Block 0x414
[0x414:0x41a]
---
Predecessors: [0x406, 0x40d]
Successors: [0x41b, 0x431]
---
0x414 JUMPDEST
0x415 DUP1
0x416 ISZERO
0x417 PUSH2 0x431
0x41a JUMPI
---
0x414: JUMPDEST 
0x416: V371 = ISZERO S0
0x417: V372 = 0x431
0x41a: JUMPI 0x431 V371
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x41b
[0x41b:0x42d]
---
Predecessors: [0x414]
Successors: [0x9b1]
---
0x41b POP
0x41c PUSH6 0x124c8d73f000
0x423 PUSH2 0x42e
0x426 PUSH1 0x5
0x428 SLOAD
0x429 DUP6
0x42a PUSH2 0x9b1
0x42d JUMP
---
0x41c: V373 = 0x124c8d73f000
0x423: V374 = 0x42e
0x426: V375 = 0x5
0x428: V376 = S[0x5]
0x42a: V377 = 0x9b1
0x42d: JUMP 0x9b1
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x124c8d73f000, 0x42e, V376, S3]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x124c8d73f000, 0x42e, V376, S3]

================================

Block 0x42e
[0x42e:0x430]
---
Predecessors: [0x9d2]
Successors: [0x431]
---
0x42e JUMPDEST
0x42f GT
0x430 ISZERO
---
0x42e: JUMPDEST 
0x42f: V378 = GT S0 S1
0x430: V379 = ISZERO V378
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V379]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V379]

================================

Block 0x431
[0x431:0x437]
---
Predecessors: [0x414, 0x42e]
Successors: [0x438, 0x43c]
---
0x431 JUMPDEST
0x432 ISZERO
0x433 ISZERO
0x434 PUSH2 0x43c
0x437 JUMPI
---
0x431: JUMPDEST 
0x432: V380 = ISZERO S0
0x433: V381 = ISZERO V380
0x434: V382 = 0x43c
0x437: JUMPI 0x43c V381
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x438
[0x438:0x43b]
---
Predecessors: [0x431]
Successors: []
---
0x438 PUSH1 0x0
0x43a DUP1
0x43b REVERT
---
0x438: V383 = 0x0
0x43b: REVERT 0x0 0x0
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x43c
[0x43c:0x46f]
---
Predecessors: [0x431]
Successors: [0x470, 0x474]
---
0x43c JUMPDEST
0x43d PUSH1 0x8
0x43f SLOAD
0x440 PUSH2 0x100
0x443 SWAP1
0x444 DIV
0x445 PUSH1 0x1
0x447 PUSH1 0xa0
0x449 PUSH1 0x2
0x44b EXP
0x44c SUB
0x44d AND
0x44e PUSH2 0x8fc
0x451 DUP6
0x452 ISZERO
0x453 MUL
0x454 DUP6
0x455 PUSH1 0x40
0x457 MLOAD
0x458 PUSH1 0x0
0x45a PUSH1 0x40
0x45c MLOAD
0x45d DUP1
0x45e DUP4
0x45f SUB
0x460 DUP2
0x461 DUP6
0x462 DUP9
0x463 DUP9
0x464 CALL
0x465 SWAP4
0x466 POP
0x467 POP
0x468 POP
0x469 POP
0x46a ISZERO
0x46b ISZERO
0x46c PUSH2 0x474
0x46f JUMPI
---
0x43c: JUMPDEST 
0x43d: V384 = 0x8
0x43f: V385 = S[0x8]
0x440: V386 = 0x100
0x444: V387 = DIV V385 0x100
0x445: V388 = 0x1
0x447: V389 = 0xa0
0x449: V390 = 0x2
0x44b: V391 = EXP 0x2 0xa0
0x44c: V392 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44d: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x44e: V394 = 0x8fc
0x452: V395 = ISZERO S3
0x453: V396 = MUL V395 0x8fc
0x455: V397 = 0x40
0x457: V398 = M[0x40]
0x458: V399 = 0x0
0x45a: V400 = 0x40
0x45c: V401 = M[0x40]
0x45f: V402 = SUB V398 V401
0x464: V403 = CALL V396 V393 S3 V401 V402 V401 0x0
0x46a: V404 = ISZERO V403
0x46b: V405 = ISZERO V404
0x46c: V406 = 0x474
0x46f: JUMPI 0x474 V405
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x470
[0x470:0x473]
---
Predecessors: [0x43c]
Successors: []
---
0x470 PUSH1 0x0
0x472 DUP1
0x473 REVERT
---
0x470: V407 = 0x0
0x473: REVERT 0x0 0x0
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x474
[0x474:0x496]
---
Predecessors: [0x43c]
Successors: [0x9b1]
---
0x474 JUMPDEST
0x475 PUSH1 0x1
0x477 PUSH1 0xa0
0x479 PUSH1 0x2
0x47b EXP
0x47c SUB
0x47d DUP6
0x47e AND
0x47f PUSH1 0x0
0x481 SWAP1
0x482 DUP2
0x483 MSTORE
0x484 PUSH1 0x7
0x486 PUSH1 0x20
0x488 MSTORE
0x489 PUSH1 0x40
0x48b SWAP1
0x48c SHA3
0x48d SLOAD
0x48e PUSH2 0x497
0x491 SWAP1
0x492 DUP6
0x493 PUSH2 0x9b1
0x496 JUMP
---
0x474: JUMPDEST 
0x475: V408 = 0x1
0x477: V409 = 0xa0
0x479: V410 = 0x2
0x47b: V411 = EXP 0x2 0xa0
0x47c: V412 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47e: V413 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x47f: V414 = 0x0
0x483: M[0x0] = V413
0x484: V415 = 0x7
0x486: V416 = 0x20
0x488: M[0x20] = 0x7
0x489: V417 = 0x40
0x48c: V418 = SHA3 0x0 0x40
0x48d: V419 = S[V418]
0x48e: V420 = 0x497
0x493: V421 = 0x9b1
0x496: JUMP 0x9b1
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x497, V419, S3]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x497, V419, S3]

================================

Block 0x497
[0x497:0x4bc]
---
Predecessors: [0x9d2]
Successors: [0x9b1]
---
0x497 JUMPDEST
0x498 PUSH1 0x1
0x49a PUSH1 0xa0
0x49c PUSH1 0x2
0x49e EXP
0x49f SUB
0x4a0 DUP7
0x4a1 AND
0x4a2 PUSH1 0x0
0x4a4 SWAP1
0x4a5 DUP2
0x4a6 MSTORE
0x4a7 PUSH1 0x7
0x4a9 PUSH1 0x20
0x4ab MSTORE
0x4ac PUSH1 0x40
0x4ae SWAP1
0x4af SHA3
0x4b0 SSTORE
0x4b1 PUSH1 0x1
0x4b3 SLOAD
0x4b4 PUSH2 0x4bd
0x4b7 SWAP1
0x4b8 DUP6
0x4b9 PUSH2 0x9b1
0x4bc JUMP
---
0x497: JUMPDEST 
0x498: V422 = 0x1
0x49a: V423 = 0xa0
0x49c: V424 = 0x2
0x49e: V425 = EXP 0x2 0xa0
0x49f: V426 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a1: V427 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x4a2: V428 = 0x0
0x4a6: M[0x0] = V427
0x4a7: V429 = 0x7
0x4a9: V430 = 0x20
0x4ab: M[0x20] = 0x7
0x4ac: V431 = 0x40
0x4af: V432 = SHA3 0x0 0x40
0x4b0: S[V432] = S0
0x4b1: V433 = 0x1
0x4b3: V434 = S[0x1]
0x4b4: V435 = 0x4bd
0x4b9: V436 = 0x9b1
0x4bc: JUMP 0x9b1
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x4bd, V434, S4]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x4bd, V434, S4]

================================

Block 0x4bd
[0x4bd:0x539]
---
Predecessors: [0x9d2]
Successors: [0x53a, 0x53e]
---
0x4bd JUMPDEST
0x4be PUSH1 0x1
0x4c0 SSTORE
0x4c1 PUSH1 0x5
0x4c3 DUP1
0x4c4 SLOAD
0x4c5 DUP5
0x4c6 ADD
0x4c7 SWAP1
0x4c8 SSTORE
0x4c9 PUSH1 0x6
0x4cb SLOAD
0x4cc PUSH1 0x0
0x4ce DUP1
0x4cf SLOAD
0x4d0 PUSH1 0x1
0x4d2 PUSH1 0xa0
0x4d4 PUSH1 0x2
0x4d6 EXP
0x4d7 SUB
0x4d8 SWAP3
0x4d9 DUP4
0x4da AND
0x4db SWAP3
0x4dc PUSH4 0x23b872dd
0x4e1 SWAP3
0x4e2 SWAP2
0x4e3 AND
0x4e4 SWAP1
0x4e5 DUP9
0x4e6 SWAP1
0x4e7 DUP8
0x4e8 SWAP1
0x4e9 PUSH1 0x40
0x4eb MLOAD
0x4ec PUSH1 0x20
0x4ee ADD
0x4ef MSTORE
0x4f0 PUSH1 0x40
0x4f2 MLOAD
0x4f3 PUSH1 0xe0
0x4f5 PUSH1 0x2
0x4f7 EXP
0x4f8 PUSH4 0xffffffff
0x4fd DUP7
0x4fe AND
0x4ff MUL
0x500 DUP2
0x501 MSTORE
0x502 PUSH1 0x1
0x504 PUSH1 0xa0
0x506 PUSH1 0x2
0x508 EXP
0x509 SUB
0x50a SWAP4
0x50b DUP5
0x50c AND
0x50d PUSH1 0x4
0x50f DUP3
0x510 ADD
0x511 MSTORE
0x512 SWAP2
0x513 SWAP1
0x514 SWAP3
0x515 AND
0x516 PUSH1 0x24
0x518 DUP3
0x519 ADD
0x51a MSTORE
0x51b PUSH1 0x44
0x51d DUP2
0x51e ADD
0x51f SWAP2
0x520 SWAP1
0x521 SWAP2
0x522 MSTORE
0x523 PUSH1 0x64
0x525 ADD
0x526 PUSH1 0x20
0x528 PUSH1 0x40
0x52a MLOAD
0x52b DUP1
0x52c DUP4
0x52d SUB
0x52e DUP2
0x52f PUSH1 0x0
0x531 DUP8
0x532 DUP1
0x533 EXTCODESIZE
0x534 ISZERO
0x535 ISZERO
0x536 PUSH2 0x53e
0x539 JUMPI
---
0x4bd: JUMPDEST 
0x4be: V437 = 0x1
0x4c0: S[0x1] = S0
0x4c1: V438 = 0x5
0x4c4: V439 = S[0x5]
0x4c6: V440 = ADD S3 V439
0x4c8: S[0x5] = V440
0x4c9: V441 = 0x6
0x4cb: V442 = S[0x6]
0x4cc: V443 = 0x0
0x4cf: V444 = S[0x0]
0x4d0: V445 = 0x1
0x4d2: V446 = 0xa0
0x4d4: V447 = 0x2
0x4d6: V448 = EXP 0x2 0xa0
0x4d7: V449 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4da: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x4dc: V451 = 0x23b872dd
0x4e3: V452 = AND V444 0xffffffffffffffffffffffffffffffffffffffff
0x4e9: V453 = 0x40
0x4eb: V454 = M[0x40]
0x4ec: V455 = 0x20
0x4ee: V456 = ADD 0x20 V454
0x4ef: M[V456] = 0x0
0x4f0: V457 = 0x40
0x4f2: V458 = M[0x40]
0x4f3: V459 = 0xe0
0x4f5: V460 = 0x2
0x4f7: V461 = EXP 0x2 0xe0
0x4f8: V462 = 0xffffffff
0x4fe: V463 = AND 0x23b872dd 0xffffffff
0x4ff: V464 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x501: M[V458] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x502: V465 = 0x1
0x504: V466 = 0xa0
0x506: V467 = 0x2
0x508: V468 = EXP 0x2 0xa0
0x509: V469 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50c: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V452
0x50d: V471 = 0x4
0x510: V472 = ADD V458 0x4
0x511: M[V472] = V470
0x515: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x516: V474 = 0x24
0x519: V475 = ADD V458 0x24
0x51a: M[V475] = V473
0x51b: V476 = 0x44
0x51e: V477 = ADD V458 0x44
0x522: M[V477] = S3
0x523: V478 = 0x64
0x525: V479 = ADD 0x64 V458
0x526: V480 = 0x20
0x528: V481 = 0x40
0x52a: V482 = M[0x40]
0x52d: V483 = SUB V479 V482
0x52f: V484 = 0x0
0x533: V485 = EXTCODESIZE V450
0x534: V486 = ISZERO V485
0x535: V487 = ISZERO V486
0x536: V488 = 0x53e
0x539: JUMPI 0x53e V487
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V450, 0x23b872dd, V479, 0x20, V482, V483, V482, 0x0, V450]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V450, 0x23b872dd, V479, 0x20, V482, V483, V482, 0x0, V450]

================================

Block 0x53a
[0x53a:0x53d]
---
Predecessors: [0x4bd]
Successors: []
---
0x53a PUSH1 0x0
0x53c DUP1
0x53d REVERT
---
0x53a: V489 = 0x0
0x53d: REVERT 0x0 0x0
---
Entry stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V450, 0x23b872dd, V479, 0x20, V482, V483, V482, 0x0, V450]
Stack pops: 0
Stack additions: []
Exit stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V450, 0x23b872dd, V479, 0x20, V482, V483, V482, 0x0, V450]

================================

Block 0x53e
[0x53e:0x54a]
---
Predecessors: [0x4bd]
Successors: [0x54b, 0x54f]
---
0x53e JUMPDEST
0x53f PUSH2 0x2c6
0x542 GAS
0x543 SUB
0x544 CALL
0x545 ISZERO
0x546 ISZERO
0x547 PUSH2 0x54f
0x54a JUMPI
---
0x53e: JUMPDEST 
0x53f: V490 = 0x2c6
0x542: V491 = GAS
0x543: V492 = SUB V491 0x2c6
0x544: V493 = CALL V492 V450 0x0 V482 V483 V482 0x20
0x545: V494 = ISZERO V493
0x546: V495 = ISZERO V494
0x547: V496 = 0x54f
0x54a: JUMPI 0x54f V495
---
Entry stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V450, 0x23b872dd, V479, 0x20, V482, V483, V482, 0x0, V450]
Stack pops: 6
Stack additions: []
Exit stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V450, 0x23b872dd, V479]

================================

Block 0x54b
[0x54b:0x54e]
---
Predecessors: [0x53e]
Successors: []
---
0x54b PUSH1 0x0
0x54d DUP1
0x54e REVERT
---
0x54b: V497 = 0x0
0x54e: REVERT 0x0 0x0
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x23b872dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x23b872dd, S0]

================================

Block 0x54f
[0x54f:0x55f]
---
Predecessors: [0x53e]
Successors: [0x560, 0x561]
---
0x54f JUMPDEST
0x550 POP
0x551 POP
0x552 POP
0x553 PUSH1 0x40
0x555 MLOAD
0x556 DUP1
0x557 MLOAD
0x558 SWAP1
0x559 POP
0x55a ISZERO
0x55b ISZERO
0x55c PUSH2 0x561
0x55f JUMPI
---
0x54f: JUMPDEST 
0x553: V498 = 0x40
0x555: V499 = M[0x40]
0x557: V500 = M[V499]
0x55a: V501 = ISZERO V500
0x55b: V502 = ISZERO V501
0x55c: V503 = 0x561
0x55f: JUMPI 0x561 V502
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x23b872dd, S0]
Stack pops: 3
Stack additions: []
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x560
[0x560:0x560]
---
Predecessors: [0x54f]
Successors: []
---
0x560 INVALID
---
0x560: INVALID 
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x561
[0x561:0x5c5]
---
Predecessors: [0x54f]
Successors: [0x5c6, 0x638]
---
0x561 JUMPDEST
0x562 PUSH32 0x1673f758ed3beff5e37b51f770fd638a812bade2568f15526a4f5b33945c9363
0x583 DUP6
0x584 DUP6
0x585 PUSH1 0x1
0x587 DUP1
0x588 SLOAD
0x589 PUSH1 0x40
0x58b MLOAD
0x58c PUSH1 0x1
0x58e PUSH1 0xa0
0x590 PUSH1 0x2
0x592 EXP
0x593 SUB
0x594 SWAP1
0x595 SWAP5
0x596 AND
0x597 DUP5
0x598 MSTORE
0x599 PUSH1 0x20
0x59b DUP5
0x59c ADD
0x59d SWAP3
0x59e SWAP1
0x59f SWAP3
0x5a0 MSTORE
0x5a1 ISZERO
0x5a2 ISZERO
0x5a3 PUSH1 0x40
0x5a5 DUP1
0x5a6 DUP5
0x5a7 ADD
0x5a8 SWAP2
0x5a9 SWAP1
0x5aa SWAP2
0x5ab MSTORE
0x5ac PUSH1 0x60
0x5ae DUP4
0x5af ADD
0x5b0 SWAP2
0x5b1 SWAP1
0x5b2 SWAP2
0x5b3 MSTORE
0x5b4 PUSH1 0x80
0x5b6 SWAP1
0x5b7 SWAP2
0x5b8 ADD
0x5b9 SWAP1
0x5ba MLOAD
0x5bb DUP1
0x5bc SWAP2
0x5bd SUB
0x5be SWAP1
0x5bf LOG1
0x5c0 DUP2
0x5c1 ISZERO
0x5c2 PUSH2 0x638
0x5c5 JUMPI
---
0x561: JUMPDEST 
0x562: V504 = 0x1673f758ed3beff5e37b51f770fd638a812bade2568f15526a4f5b33945c9363
0x585: V505 = 0x1
0x588: V506 = S[0x1]
0x589: V507 = 0x40
0x58b: V508 = M[0x40]
0x58c: V509 = 0x1
0x58e: V510 = 0xa0
0x590: V511 = 0x2
0x592: V512 = EXP 0x2 0xa0
0x593: V513 = SUB 0x10000000000000000000000000000000000000000 0x1
0x596: V514 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x598: M[V508] = V514
0x599: V515 = 0x20
0x59c: V516 = ADD V508 0x20
0x5a0: M[V516] = S3
0x5a1: V517 = ISZERO 0x1
0x5a2: V518 = ISZERO 0x0
0x5a3: V519 = 0x40
0x5a7: V520 = ADD V508 0x40
0x5ab: M[V520] = 0x1
0x5ac: V521 = 0x60
0x5af: V522 = ADD V508 0x60
0x5b3: M[V522] = V506
0x5b4: V523 = 0x80
0x5b8: V524 = ADD V508 0x80
0x5ba: V525 = M[0x40]
0x5bd: V526 = SUB V524 V525
0x5bf: LOG V525 V526 0x1673f758ed3beff5e37b51f770fd638a812bade2568f15526a4f5b33945c9363
0x5c1: V527 = ISZERO S1
0x5c2: V528 = 0x638
0x5c5: JUMPI 0x638 V527
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5c6
[0x5c6:0x5d6]
---
Predecessors: [0x561]
Successors: [0x5d7, 0x638]
---
0x5c6 PUSH1 0x4
0x5c8 SLOAD
0x5c9 TIMESTAMP
0x5ca ADD
0x5cb SWAP1
0x5cc POP
0x5cd PUSH1 0x3
0x5cf SLOAD
0x5d0 DUP2
0x5d1 LT
0x5d2 ISZERO
0x5d3 PUSH2 0x638
0x5d6 JUMPI
---
0x5c6: V529 = 0x4
0x5c8: V530 = S[0x4]
0x5c9: V531 = TIMESTAMP
0x5ca: V532 = ADD V531 V530
0x5cd: V533 = 0x3
0x5cf: V534 = S[0x3]
0x5d1: V535 = LT V532 V534
0x5d2: V536 = ISZERO V535
0x5d3: V537 = 0x638
0x5d6: JUMPI 0x638 V536
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V532]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V532]

================================

Block 0x5d7
[0x5d7:0x61e]
---
Predecessors: [0x5c6]
Successors: [0x61f, 0x623]
---
0x5d7 PUSH1 0x3
0x5d9 DUP2
0x5da SWAP1
0x5db SSTORE
0x5dc PUSH1 0x6
0x5de SLOAD
0x5df PUSH1 0x1
0x5e1 PUSH1 0xa0
0x5e3 PUSH1 0x2
0x5e5 EXP
0x5e6 SUB
0x5e7 AND
0x5e8 PUSH4 0xf6a03ebf
0x5ed DUP3
0x5ee PUSH1 0x40
0x5f0 MLOAD
0x5f1 PUSH1 0xe0
0x5f3 PUSH1 0x2
0x5f5 EXP
0x5f6 PUSH4 0xffffffff
0x5fb DUP5
0x5fc AND
0x5fd MUL
0x5fe DUP2
0x5ff MSTORE
0x600 PUSH1 0x4
0x602 DUP2
0x603 ADD
0x604 SWAP2
0x605 SWAP1
0x606 SWAP2
0x607 MSTORE
0x608 PUSH1 0x24
0x60a ADD
0x60b PUSH1 0x0
0x60d PUSH1 0x40
0x60f MLOAD
0x610 DUP1
0x611 DUP4
0x612 SUB
0x613 DUP2
0x614 PUSH1 0x0
0x616 DUP8
0x617 DUP1
0x618 EXTCODESIZE
0x619 ISZERO
0x61a ISZERO
0x61b PUSH2 0x623
0x61e JUMPI
---
0x5d7: V538 = 0x3
0x5db: S[0x3] = V532
0x5dc: V539 = 0x6
0x5de: V540 = S[0x6]
0x5df: V541 = 0x1
0x5e1: V542 = 0xa0
0x5e3: V543 = 0x2
0x5e5: V544 = EXP 0x2 0xa0
0x5e6: V545 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e7: V546 = AND 0xffffffffffffffffffffffffffffffffffffffff V540
0x5e8: V547 = 0xf6a03ebf
0x5ee: V548 = 0x40
0x5f0: V549 = M[0x40]
0x5f1: V550 = 0xe0
0x5f3: V551 = 0x2
0x5f5: V552 = EXP 0x2 0xe0
0x5f6: V553 = 0xffffffff
0x5fc: V554 = AND 0xf6a03ebf 0xffffffff
0x5fd: V555 = MUL 0xf6a03ebf 0x100000000000000000000000000000000000000000000000000000000
0x5ff: M[V549] = 0xf6a03ebf00000000000000000000000000000000000000000000000000000000
0x600: V556 = 0x4
0x603: V557 = ADD V549 0x4
0x607: M[V557] = V532
0x608: V558 = 0x24
0x60a: V559 = ADD 0x24 V549
0x60b: V560 = 0x0
0x60d: V561 = 0x40
0x60f: V562 = M[0x40]
0x612: V563 = SUB V559 V562
0x614: V564 = 0x0
0x618: V565 = EXTCODESIZE V546
0x619: V566 = ISZERO V565
0x61a: V567 = ISZERO V566
0x61b: V568 = 0x623
0x61e: JUMPI 0x623 V567
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V532]
Stack pops: 1
Stack additions: [S0, V546, 0xf6a03ebf, V559, 0x0, V562, V563, V562, 0x0, V546]
Exit stack: [S12, 0x110, S10, S9, 0x0, S7, S6, S5, S4, S3, S2, S1, S0, V546, 0xf6a03ebf, V559, 0x0, V562, V563, V562, 0x0, V546]

================================

Block 0x61f
[0x61f:0x622]
---
Predecessors: [0x5d7]
Successors: []
---
0x61f PUSH1 0x0
0x621 DUP1
0x622 REVERT
---
0x61f: V569 = 0x0
0x622: REVERT 0x0 0x0
---
Entry stack: [V12, 0x110, S19, V344, 0x0, 0x0, 0x0, 0x3df, V344, S12, S11, 0x0, S9, V546, 0xf6a03ebf, V559, 0x0, V562, V563, V562, 0x0, V546]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x110, S19, V344, 0x0, 0x0, 0x0, 0x3df, V344, S12, S11, 0x0, S9, V546, 0xf6a03ebf, V559, 0x0, V562, V563, V562, 0x0, V546]

================================

Block 0x623
[0x623:0x62f]
---
Predecessors: [0x5d7]
Successors: [0x630, 0x634]
---
0x623 JUMPDEST
0x624 PUSH2 0x2c6
0x627 GAS
0x628 SUB
0x629 CALL
0x62a ISZERO
0x62b ISZERO
0x62c PUSH2 0x634
0x62f JUMPI
---
0x623: JUMPDEST 
0x624: V570 = 0x2c6
0x627: V571 = GAS
0x628: V572 = SUB V571 0x2c6
0x629: V573 = CALL V572 V546 0x0 V562 V563 V562 0x0
0x62a: V574 = ISZERO V573
0x62b: V575 = ISZERO V574
0x62c: V576 = 0x634
0x62f: JUMPI 0x634 V575
---
Entry stack: [V12, 0x110, S19, V344, 0x0, 0x0, 0x0, 0x3df, V344, S12, S11, 0x0, S9, V546, 0xf6a03ebf, V559, 0x0, V562, V563, V562, 0x0, V546]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x110, S19, V344, 0x0, 0x0, 0x0, 0x3df, V344, S12, S11, 0x0, S9, V546, 0xf6a03ebf, V559]

================================

Block 0x630
[0x630:0x633]
---
Predecessors: [0x623]
Successors: []
---
0x630 PUSH1 0x0
0x632 DUP1
0x633 REVERT
---
0x630: V577 = 0x0
0x633: REVERT 0x0 0x0
---
Entry stack: [V12, 0x110, S13, V344, 0x0, 0x0, 0x0, 0x3df, V344, S6, S5, 0x0, S3, V546, 0xf6a03ebf, V559]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x110, S13, V344, 0x0, 0x0, 0x0, 0x3df, V344, S6, S5, 0x0, S3, V546, 0xf6a03ebf, V559]

================================

Block 0x634
[0x634:0x637]
---
Predecessors: [0x623]
Successors: [0x638]
---
0x634 JUMPDEST
0x635 POP
0x636 POP
0x637 POP
---
0x634: JUMPDEST 
---
Entry stack: [V12, 0x110, S13, V344, 0x0, 0x0, 0x0, 0x3df, V344, S6, S5, 0x0, S3, V546, 0xf6a03ebf, V559]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x110, S13, V344, 0x0, 0x0, 0x0, 0x3df, V344, S6, S5, 0x0, S3]

================================

Block 0x638
[0x638:0x638]
---
Predecessors: [0x561, 0x5c6, 0x634]
Successors: [0x639]
---
0x638 JUMPDEST
---
0x638: JUMPDEST 
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x639
[0x639:0x639]
---
Predecessors: [0x638]
Successors: [0x63a]
---
0x639 JUMPDEST
---
0x639: JUMPDEST 
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x63a
[0x63a:0x640]
---
Predecessors: [0x639]
Successors: [0x17a, 0x3df, 0x7e3, 0x809]
---
0x63a JUMPDEST
0x63b POP
0x63c POP
0x63d POP
0x63e POP
0x63f POP
0x640 JUMP
---
0x63a: JUMPDEST 
0x640: JUMP S5
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6]

================================

Block 0x641
[0x641:0x64b]
---
Predecessors: [0x11f]
Successors: [0x64c, 0x72c]
---
0x641 JUMPDEST
0x642 PUSH1 0x3
0x644 SLOAD
0x645 TIMESTAMP
0x646 GT
0x647 ISZERO
0x648 PUSH2 0x72c
0x64b JUMPI
---
0x641: JUMPDEST 
0x642: V578 = 0x3
0x644: V579 = S[0x3]
0x645: V580 = TIMESTAMP
0x646: V581 = GT V580 V579
0x647: V582 = ISZERO V581
0x648: V583 = 0x72c
0x64b: JUMPI 0x72c V582
---
Entry stack: [V12, 0x110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x110]

================================

Block 0x64c
[0x64c:0x661]
---
Predecessors: [0x641]
Successors: [0x662, 0x666]
---
0x64c PUSH1 0x0
0x64e SLOAD
0x64f CALLER
0x650 PUSH1 0x1
0x652 PUSH1 0xa0
0x654 PUSH1 0x2
0x656 EXP
0x657 SUB
0x658 SWAP1
0x659 DUP2
0x65a AND
0x65b SWAP2
0x65c AND
0x65d EQ
0x65e PUSH2 0x666
0x661 JUMPI
---
0x64c: V584 = 0x0
0x64e: V585 = S[0x0]
0x64f: V586 = CALLER
0x650: V587 = 0x1
0x652: V588 = 0xa0
0x654: V589 = 0x2
0x656: V590 = EXP 0x2 0xa0
0x657: V591 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65a: V592 = AND 0xffffffffffffffffffffffffffffffffffffffff V586
0x65c: V593 = AND V585 0xffffffffffffffffffffffffffffffffffffffff
0x65d: V594 = EQ V593 V592
0x65e: V595 = 0x666
0x661: JUMPI 0x666 V594
---
Entry stack: [V12, 0x110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x110]

================================

Block 0x662
[0x662:0x665]
---
Predecessors: [0x64c]
Successors: []
---
0x662 PUSH1 0x0
0x664 DUP1
0x665 REVERT
---
0x662: V596 = 0x0
0x665: REVERT 0x0 0x0
---
Entry stack: [V12, 0x110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x110]

================================

Block 0x666
[0x666:0x675]
---
Predecessors: [0x64c]
Successors: [0x676, 0x71e]
---
0x666 JUMPDEST
0x667 PUSH1 0x5
0x669 SLOAD
0x66a PUSH5 0x9c76524000
0x670 SWAP1
0x671 LT
0x672 PUSH2 0x71e
0x675 JUMPI
---
0x666: JUMPDEST 
0x667: V597 = 0x5
0x669: V598 = S[0x5]
0x66a: V599 = 0x9c76524000
0x671: V600 = LT V598 0x9c76524000
0x672: V601 = 0x71e
0x675: JUMPI 0x71e V600
---
Entry stack: [V12, 0x110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x110]

================================

Block 0x676
[0x676:0x6af]
---
Predecessors: [0x666]
Successors: [0x6b0, 0x6b4]
---
0x676 PUSH1 0x6
0x678 SLOAD
0x679 PUSH1 0x1
0x67b PUSH1 0xa0
0x67d PUSH1 0x2
0x67f EXP
0x680 SUB
0x681 AND
0x682 PUSH4 0x44df8e70
0x687 PUSH1 0x40
0x689 MLOAD
0x68a DUP2
0x68b PUSH4 0xffffffff
0x690 AND
0x691 PUSH1 0xe0
0x693 PUSH1 0x2
0x695 EXP
0x696 MUL
0x697 DUP2
0x698 MSTORE
0x699 PUSH1 0x4
0x69b ADD
0x69c PUSH1 0x0
0x69e PUSH1 0x40
0x6a0 MLOAD
0x6a1 DUP1
0x6a2 DUP4
0x6a3 SUB
0x6a4 DUP2
0x6a5 PUSH1 0x0
0x6a7 DUP8
0x6a8 DUP1
0x6a9 EXTCODESIZE
0x6aa ISZERO
0x6ab ISZERO
0x6ac PUSH2 0x6b4
0x6af JUMPI
---
0x676: V602 = 0x6
0x678: V603 = S[0x6]
0x679: V604 = 0x1
0x67b: V605 = 0xa0
0x67d: V606 = 0x2
0x67f: V607 = EXP 0x2 0xa0
0x680: V608 = SUB 0x10000000000000000000000000000000000000000 0x1
0x681: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0x682: V610 = 0x44df8e70
0x687: V611 = 0x40
0x689: V612 = M[0x40]
0x68b: V613 = 0xffffffff
0x690: V614 = AND 0xffffffff 0x44df8e70
0x691: V615 = 0xe0
0x693: V616 = 0x2
0x695: V617 = EXP 0x2 0xe0
0x696: V618 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x44df8e70
0x698: M[V612] = 0x44df8e7000000000000000000000000000000000000000000000000000000000
0x699: V619 = 0x4
0x69b: V620 = ADD 0x4 V612
0x69c: V621 = 0x0
0x69e: V622 = 0x40
0x6a0: V623 = M[0x40]
0x6a3: V624 = SUB V620 V623
0x6a5: V625 = 0x0
0x6a9: V626 = EXTCODESIZE V609
0x6aa: V627 = ISZERO V626
0x6ab: V628 = ISZERO V627
0x6ac: V629 = 0x6b4
0x6af: JUMPI 0x6b4 V628
---
Entry stack: [V12, 0x110]
Stack pops: 0
Stack additions: [V609, 0x44df8e70, V620, 0x0, V623, V624, V623, 0x0, V609]
Exit stack: [V12, 0x110, V609, 0x44df8e70, V620, 0x0, V623, V624, V623, 0x0, V609]

================================

Block 0x6b0
[0x6b0:0x6b3]
---
Predecessors: [0x676]
Successors: []
---
0x6b0 PUSH1 0x0
0x6b2 DUP1
0x6b3 REVERT
---
0x6b0: V630 = 0x0
0x6b3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x110, V609, 0x44df8e70, V620, 0x0, V623, V624, V623, 0x0, V609]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x110, V609, 0x44df8e70, V620, 0x0, V623, V624, V623, 0x0, V609]

================================

Block 0x6b4
[0x6b4:0x6c0]
---
Predecessors: [0x676]
Successors: [0x6c1, 0x6c5]
---
0x6b4 JUMPDEST
0x6b5 PUSH2 0x2c6
0x6b8 GAS
0x6b9 SUB
0x6ba CALL
0x6bb ISZERO
0x6bc ISZERO
0x6bd PUSH2 0x6c5
0x6c0 JUMPI
---
0x6b4: JUMPDEST 
0x6b5: V631 = 0x2c6
0x6b8: V632 = GAS
0x6b9: V633 = SUB V632 0x2c6
0x6ba: V634 = CALL V633 V609 0x0 V623 V624 V623 0x0
0x6bb: V635 = ISZERO V634
0x6bc: V636 = ISZERO V635
0x6bd: V637 = 0x6c5
0x6c0: JUMPI 0x6c5 V636
---
Entry stack: [V12, 0x110, V609, 0x44df8e70, V620, 0x0, V623, V624, V623, 0x0, V609]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x110, V609, 0x44df8e70, V620]

================================

Block 0x6c1
[0x6c1:0x6c4]
---
Predecessors: [0x6b4]
Successors: []
---
0x6c1 PUSH1 0x0
0x6c3 DUP1
0x6c4 REVERT
---
0x6c1: V638 = 0x0
0x6c4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x110, V609, 0x44df8e70, V620]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x110, V609, 0x44df8e70, V620]

================================

Block 0x6c5
[0x6c5:0x71d]
---
Predecessors: [0x6b4]
Successors: [0x71e]
---
0x6c5 JUMPDEST
0x6c6 POP
0x6c7 POP
0x6c8 PUSH1 0x0
0x6ca SLOAD
0x6cb PUSH1 0x1
0x6cd SLOAD
0x6ce PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x6ef SWAP3
0x6f0 POP
0x6f1 PUSH1 0x1
0x6f3 PUSH1 0xa0
0x6f5 PUSH1 0x2
0x6f7 EXP
0x6f8 SUB
0x6f9 SWAP1
0x6fa SWAP2
0x6fb AND
0x6fc SWAP1
0x6fd PUSH1 0x40
0x6ff MLOAD
0x700 PUSH1 0x1
0x702 PUSH1 0xa0
0x704 PUSH1 0x2
0x706 EXP
0x707 SUB
0x708 SWAP1
0x709 SWAP3
0x70a AND
0x70b DUP3
0x70c MSTORE
0x70d PUSH1 0x20
0x70f DUP3
0x710 ADD
0x711 MSTORE
0x712 PUSH1 0x40
0x714 SWAP1
0x715 DUP2
0x716 ADD
0x717 SWAP1
0x718 MLOAD
0x719 DUP1
0x71a SWAP2
0x71b SUB
0x71c SWAP1
0x71d LOG1
---
0x6c5: JUMPDEST 
0x6c8: V639 = 0x0
0x6ca: V640 = S[0x0]
0x6cb: V641 = 0x1
0x6cd: V642 = S[0x1]
0x6ce: V643 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x6f1: V644 = 0x1
0x6f3: V645 = 0xa0
0x6f5: V646 = 0x2
0x6f7: V647 = EXP 0x2 0xa0
0x6f8: V648 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fb: V649 = AND V640 0xffffffffffffffffffffffffffffffffffffffff
0x6fd: V650 = 0x40
0x6ff: V651 = M[0x40]
0x700: V652 = 0x1
0x702: V653 = 0xa0
0x704: V654 = 0x2
0x706: V655 = EXP 0x2 0xa0
0x707: V656 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70a: V657 = AND V649 0xffffffffffffffffffffffffffffffffffffffff
0x70c: M[V651] = V657
0x70d: V658 = 0x20
0x710: V659 = ADD V651 0x20
0x711: M[V659] = V642
0x712: V660 = 0x40
0x716: V661 = ADD 0x40 V651
0x718: V662 = M[0x40]
0x71b: V663 = SUB V661 V662
0x71d: LOG V662 V663 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V12, 0x110, V609, 0x44df8e70, V620]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x110]

================================

Block 0x71e
[0x71e:0x72b]
---
Predecessors: [0x666, 0x6c5]
Successors: [0x72c]
---
0x71e JUMPDEST
0x71f PUSH1 0x8
0x721 DUP1
0x722 SLOAD
0x723 PUSH1 0xff
0x725 NOT
0x726 AND
0x727 PUSH1 0x1
0x729 OR
0x72a SWAP1
0x72b SSTORE
---
0x71e: JUMPDEST 
0x71f: V664 = 0x8
0x722: V665 = S[0x8]
0x723: V666 = 0xff
0x725: V667 = NOT 0xff
0x726: V668 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V665
0x727: V669 = 0x1
0x729: V670 = OR 0x1 V668
0x72b: S[0x8] = V670
---
Entry stack: [V12, 0x110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x110]

================================

Block 0x72c
[0x72c:0x72c]
---
Predecessors: [0x641, 0x71e]
Successors: [0x72d]
---
0x72c JUMPDEST
---
0x72c: JUMPDEST 
---
Entry stack: [V12, 0x110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x110]

================================

Block 0x72d
[0x72d:0x72d]
---
Predecessors: [0x72c]
Successors: [0x72e]
---
0x72d JUMPDEST
---
0x72d: JUMPDEST 
---
Entry stack: [V12, 0x110]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x110]

================================

Block 0x72e
[0x72e:0x72f]
---
Predecessors: [0x72d]
Successors: [0x110]
---
0x72e JUMPDEST
0x72f JUMP
---
0x72e: JUMPDEST 
0x72f: JUMP 0x110
---
Entry stack: [V12, 0x110]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x730
[0x730:0x734]
---
Predecessors: [0x14a]
Successors: [0x152]
---
0x730 JUMPDEST
0x731 PUSH1 0x18
0x733 DUP2
0x734 JUMP
---
0x730: JUMPDEST 
0x731: V671 = 0x18
0x734: JUMP 0x152
---
Entry stack: [V12, 0x152]
Stack pops: 1
Stack additions: [S0, 0x18]
Exit stack: [V12, 0x152, 0x18]

================================

Block 0x735
[0x735:0x74a]
---
Predecessors: [0x16f, 0x3d1]
Successors: [0x74b, 0x81a]
---
0x735 JUMPDEST
0x736 PUSH1 0x0
0x738 DUP1
0x739 PUSH1 0x0
0x73b PUSH6 0x61c9f368000
0x742 PUSH1 0x5
0x744 SLOAD
0x745 LT
0x746 ISZERO
0x747 PUSH2 0x81a
0x74a JUMPI
---
0x735: JUMPDEST 
0x736: V672 = 0x0
0x739: V673 = 0x0
0x73b: V674 = 0x61c9f368000
0x742: V675 = 0x5
0x744: V676 = S[0x5]
0x745: V677 = LT V676 0x61c9f368000
0x746: V678 = ISZERO V677
0x747: V679 = 0x81a
0x74a: JUMPI 0x81a V678
---
Entry stack: [V12, 0x110, S6, V344, 0x0, 0x0, S2, {0x17a, 0x3df}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x110, S6, V344, 0x0, 0x0, S2, {0x17a, 0x3df}, S0, 0x0, 0x0, 0x0]

================================

Block 0x74b
[0x74b:0x75a]
---
Predecessors: [0x735]
Successors: [0x9d9]
---
0x74b PUSH5 0x174876e800
0x751 PUSH2 0x75b
0x754 DUP6
0x755 PUSH1 0x18
0x757 PUSH2 0x9d9
0x75a JUMP
---
0x74b: V680 = 0x174876e800
0x751: V681 = 0x75b
0x755: V682 = 0x18
0x757: V683 = 0x9d9
0x75a: JUMP 0x9d9
---
Entry stack: [V12, 0x110, S9, V344, 0x0, 0x0, S5, {0x17a, 0x3df}, S3, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x174876e800, 0x75b, S3, 0x18]
Exit stack: [V12, 0x110, S9, V344, 0x0, 0x0, S5, {0x17a, 0x3df}, S3, 0x0, 0x0, 0x0, 0x174876e800, 0x75b, S3, 0x18]

================================

Block 0x75b
[0x75b:0x762]
---
Predecessors: [0x9d2]
Successors: [0x763, 0x764]
---
0x75b JUMPDEST
0x75c DUP2
0x75d ISZERO
0x75e ISZERO
0x75f PUSH2 0x764
0x762 JUMPI
---
0x75b: JUMPDEST 
0x75d: V684 = ISZERO S1
0x75e: V685 = ISZERO V684
0x75f: V686 = 0x764
0x762: JUMPI 0x764 V685
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x763
[0x763:0x763]
---
Predecessors: [0x75b]
Successors: []
---
0x763 INVALID
---
0x763: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x764
[0x764:0x779]
---
Predecessors: [0x75b]
Successors: [0x9b1]
---
0x764 JUMPDEST
0x765 DIV
0x766 SWAP3
0x767 POP
0x768 PUSH6 0x61c9f368000
0x76f PUSH2 0x77a
0x772 PUSH1 0x5
0x774 SLOAD
0x775 DUP6
0x776 PUSH2 0x9b1
0x779 JUMP
---
0x764: JUMPDEST 
0x765: V687 = DIV S0 S1
0x768: V688 = 0x61c9f368000
0x76f: V689 = 0x77a
0x772: V690 = 0x5
0x774: V691 = S[0x5]
0x776: V692 = 0x9b1
0x779: JUMP 0x9b1
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [V687, S3, S2, 0x61c9f368000, 0x77a, V691, V687]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V687, S3, S2, 0x61c9f368000, 0x77a, V691, V687]

================================

Block 0x77a
[0x77a:0x780]
---
Predecessors: [0x9d2]
Successors: [0x781, 0x789]
---
0x77a JUMPDEST
0x77b LT
0x77c ISZERO
0x77d PUSH2 0x789
0x780 JUMPI
---
0x77a: JUMPDEST 
0x77b: V693 = LT S0 S1
0x77c: V694 = ISZERO V693
0x77d: V695 = 0x789
0x780: JUMPI 0x789 V694
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x781
[0x781:0x788]
---
Predecessors: [0x77a]
Successors: [0x83c]
---
0x781 PUSH1 0x0
0x783 SWAP2
0x784 POP
0x785 PUSH2 0x83c
0x788 JUMP
---
0x781: V696 = 0x0
0x785: V697 = 0x83c
0x788: JUMP 0x83c
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]

================================

Block 0x789
[0x789:0x79b]
---
Predecessors: [0x77a]
Successors: [0x9b1]
---
0x789 JUMPDEST
0x78a PUSH6 0x61c9f368000
0x791 PUSH2 0x79c
0x794 PUSH1 0x5
0x796 SLOAD
0x797 DUP6
0x798 PUSH2 0x9b1
0x79b JUMP
---
0x789: JUMPDEST 
0x78a: V698 = 0x61c9f368000
0x791: V699 = 0x79c
0x794: V700 = 0x5
0x796: V701 = S[0x5]
0x798: V702 = 0x9b1
0x79b: JUMP 0x9b1
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x61c9f368000, 0x79c, V701, S2]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x61c9f368000, 0x79c, V701, S2]

================================

Block 0x79c
[0x79c:0x7a2]
---
Predecessors: [0x9d2]
Successors: [0x7a3, 0x7ab]
---
0x79c JUMPDEST
0x79d EQ
0x79e ISZERO
0x79f PUSH2 0x7ab
0x7a2 JUMPI
---
0x79c: JUMPDEST 
0x79d: V703 = EQ S0 S1
0x79e: V704 = ISZERO V703
0x79f: V705 = 0x7ab
0x7a2: JUMPI 0x7ab V704
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x7a3
[0x7a3:0x7aa]
---
Predecessors: [0x79c]
Successors: [0x83c]
---
0x7a3 PUSH1 0x1
0x7a5 SWAP2
0x7a6 POP
0x7a7 PUSH2 0x83c
0x7aa JUMP
---
0x7a3: V706 = 0x1
0x7a7: V707 = 0x83c
0x7aa: JUMP 0x83c
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]

================================

Block 0x7ab
[0x7ab:0x7bc]
---
Predecessors: [0x79c]
Successors: [0xa08]
---
0x7ab JUMPDEST
0x7ac PUSH2 0x7bd
0x7af PUSH6 0x61c9f368000
0x7b6 PUSH1 0x5
0x7b8 SLOAD
0x7b9 PUSH2 0xa08
0x7bc JUMP
---
0x7ab: JUMPDEST 
0x7ac: V708 = 0x7bd
0x7af: V709 = 0x61c9f368000
0x7b6: V710 = 0x5
0x7b8: V711 = S[0x5]
0x7b9: V712 = 0xa08
0x7bc: JUMP 0xa08
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x7bd, 0x61c9f368000, V711]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x7bd, 0x61c9f368000, V711]

================================

Block 0x7bd
[0x7bd:0x7d3]
---
Predecessors: [0xa19]
Successors: [0x9d9]
---
0x7bd JUMPDEST
0x7be SWAP3
0x7bf POP
0x7c0 PUSH2 0x7e3
0x7c3 DUP5
0x7c4 PUSH1 0x18
0x7c6 PUSH2 0x7d4
0x7c9 DUP7
0x7ca PUSH5 0x174876e800
0x7d0 PUSH2 0x9d9
0x7d3 JUMP
---
0x7bd: JUMPDEST 
0x7c0: V713 = 0x7e3
0x7c4: V714 = 0x18
0x7c6: V715 = 0x7d4
0x7ca: V716 = 0x174876e800
0x7d0: V717 = 0x9d9
0x7d3: JUMP 0x9d9
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S0, S2, S1, 0x7e3, S4, 0x18, 0x7d4, S0, 0x174876e800]
Exit stack: [S12, 0x110, S10, S9, 0x0, S7, S6, S5, S4, S0, S2, S1, 0x7e3, S4, 0x18, 0x7d4, S0, 0x174876e800]

================================

Block 0x7d4
[0x7d4:0x7db]
---
Predecessors: [0x9d2]
Successors: [0x7dc, 0x7dd]
---
0x7d4 JUMPDEST
0x7d5 DUP2
0x7d6 ISZERO
0x7d7 ISZERO
0x7d8 PUSH2 0x7dd
0x7db JUMPI
---
0x7d4: JUMPDEST 
0x7d6: V718 = ISZERO S1
0x7d7: V719 = ISZERO V718
0x7d8: V720 = 0x7dd
0x7db: JUMPI 0x7dd V719
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x7dc
[0x7dc:0x7dc]
---
Predecessors: [0x7d4]
Successors: []
---
0x7dc INVALID
---
0x7dc: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x7dd
[0x7dd:0x7e2]
---
Predecessors: [0x7d4]
Successors: [0xa08]
---
0x7dd JUMPDEST
0x7de DIV
0x7df PUSH2 0xa08
0x7e2 JUMP
---
0x7dd: JUMPDEST 
0x7de: V721 = DIV S0 S1
0x7df: V722 = 0xa08
0x7e2: JUMP 0xa08
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V721]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V721]

================================

Block 0x7e3
[0x7e3:0x7f9]
---
Predecessors: [0x63a, 0x83d, 0x9d2, 0xa19]
Successors: [0x9d9]
---
0x7e3 JUMPDEST
0x7e4 SWAP1
0x7e5 POP
0x7e6 PUSH2 0x809
0x7e9 DUP4
0x7ea PUSH5 0x174876e800
0x7f0 PUSH2 0x7fa
0x7f3 DUP5
0x7f4 PUSH1 0x14
0x7f6 PUSH2 0x9d9
0x7f9 JUMP
---
0x7e3: JUMPDEST 
0x7e6: V723 = 0x809
0x7ea: V724 = 0x174876e800
0x7f0: V725 = 0x7fa
0x7f4: V726 = 0x14
0x7f6: V727 = 0x9d9
0x7f9: JUMP 0x9d9
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S0, 0x809, S3, 0x174876e800, 0x7fa, S0, 0x14]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, 0x809, S3, 0x174876e800, 0x7fa, S0, 0x14]

================================

Block 0x7fa
[0x7fa:0x801]
---
Predecessors: [0x9d2]
Successors: [0x802, 0x803]
---
0x7fa JUMPDEST
0x7fb DUP2
0x7fc ISZERO
0x7fd ISZERO
0x7fe PUSH2 0x803
0x801 JUMPI
---
0x7fa: JUMPDEST 
0x7fc: V728 = ISZERO S1
0x7fd: V729 = ISZERO V728
0x7fe: V730 = 0x803
0x801: JUMPI 0x803 V729
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x802
[0x802:0x802]
---
Predecessors: [0x7fa]
Successors: []
---
0x802 INVALID
---
0x802: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x803
[0x803:0x808]
---
Predecessors: [0x7fa]
Successors: [0x9b1]
---
0x803 JUMPDEST
0x804 DIV
0x805 PUSH2 0x9b1
0x808 JUMP
---
0x803: JUMPDEST 
0x804: V731 = DIV S0 S1
0x805: V732 = 0x9b1
0x808: JUMP 0x9b1
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V731]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V731]

================================

Block 0x809
[0x809:0x813]
---
Predecessors: [0x63a, 0x83d, 0x9d2, 0xa19]
Successors: [0x83c]
---
0x809 JUMPDEST
0x80a PUSH1 0x1
0x80c SWAP3
0x80d POP
0x80e SWAP3
0x80f POP
0x810 PUSH2 0x83c
0x813 JUMP
---
0x809: JUMPDEST 
0x80a: V733 = 0x1
0x810: V734 = 0x83c
0x813: JUMP 0x83c
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0, 0x1, S1]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S0, 0x1, S1]

================================

Block 0x814
[0x814:0x814]
---
Predecessors: []
Successors: [0x815]
---
0x814 JUMPDEST
---
0x814: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x815
[0x815:0x819]
---
Predecessors: [0x814]
Successors: [0x83c]
---
0x815 JUMPDEST
0x816 PUSH2 0x83c
0x819 JUMP
---
0x815: JUMPDEST 
0x816: V735 = 0x83c
0x819: JUMP 0x83c
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x81a
[0x81a:0x82a]
---
Predecessors: [0x735]
Successors: [0x9d9]
---
0x81a JUMPDEST
0x81b PUSH5 0x174876e800
0x821 PUSH2 0x82b
0x824 DUP6
0x825 PUSH1 0x14
0x827 PUSH2 0x9d9
0x82a JUMP
---
0x81a: JUMPDEST 
0x81b: V736 = 0x174876e800
0x821: V737 = 0x82b
0x825: V738 = 0x14
0x827: V739 = 0x9d9
0x82a: JUMP 0x9d9
---
Entry stack: [V12, 0x110, S9, V344, 0x0, 0x0, S5, {0x17a, 0x3df}, S3, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x174876e800, 0x82b, S3, 0x14]
Exit stack: [V12, 0x110, S9, V344, 0x0, 0x0, S5, {0x17a, 0x3df}, S3, 0x0, 0x0, 0x0, 0x174876e800, 0x82b, S3, 0x14]

================================

Block 0x82b
[0x82b:0x832]
---
Predecessors: [0x9d2]
Successors: [0x833, 0x834]
---
0x82b JUMPDEST
0x82c DUP2
0x82d ISZERO
0x82e ISZERO
0x82f PUSH2 0x834
0x832 JUMPI
---
0x82b: JUMPDEST 
0x82d: V740 = ISZERO S1
0x82e: V741 = ISZERO V740
0x82f: V742 = 0x834
0x832: JUMPI 0x834 V741
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x833
[0x833:0x833]
---
Predecessors: [0x82b]
Successors: []
---
0x833 INVALID
---
0x833: INVALID 
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x834
[0x834:0x83b]
---
Predecessors: [0x82b]
Successors: [0x83c]
---
0x834 JUMPDEST
0x835 DIV
0x836 PUSH1 0x0
0x838 SWAP3
0x839 POP
0x83a SWAP3
0x83b POP
---
0x834: JUMPDEST 
0x835: V743 = DIV S0 S1
0x836: V744 = 0x0
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [V743, 0x0, S2]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V743, 0x0, S2]

================================

Block 0x83c
[0x83c:0x83c]
---
Predecessors: [0x781, 0x7a3, 0x809, 0x815, 0x834]
Successors: [0x83d]
---
0x83c JUMPDEST
---
0x83c: JUMPDEST 
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x1}, S0]

================================

Block 0x83d
[0x83d:0x842]
---
Predecessors: [0x83c]
Successors: [0x110, 0x17a, 0x3df, 0x7e3, 0x809]
---
0x83d JUMPDEST
0x83e POP
0x83f SWAP2
0x840 POP
0x841 SWAP2
0x842 JUMP
---
0x83d: JUMPDEST 
0x842: JUMP S4
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 5
Stack additions: [S2, S1]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S2, {0x0, 0x1}]

================================

Block 0x843
[0x843:0x848]
---
Predecessors: [0x19f]
Successors: [0x152]
---
0x843 JUMPDEST
0x844 PUSH1 0x4
0x846 SLOAD
0x847 DUP2
0x848 JUMP
---
0x843: JUMPDEST 
0x844: V745 = 0x4
0x846: V746 = S[0x4]
0x848: JUMP 0x152
---
Entry stack: [V12, 0x152]
Stack pops: 1
Stack additions: [S0, V746]
Exit stack: [V12, 0x152, V746]

================================

Block 0x849
[0x849:0x84e]
---
Predecessors: [0x1c4]
Successors: [0x152]
---
0x849 JUMPDEST
0x84a PUSH1 0x5
0x84c SLOAD
0x84d DUP2
0x84e JUMP
---
0x849: JUMPDEST 
0x84a: V747 = 0x5
0x84c: V748 = S[0x5]
0x84e: JUMP 0x152
---
Entry stack: [V12, 0x152]
Stack pops: 1
Stack additions: [S0, V748]
Exit stack: [V12, 0x152, V748]

================================

Block 0x84f
[0x84f:0x85d]
---
Predecessors: [0x1e9]
Successors: [0x1f1]
---
0x84f JUMPDEST
0x850 PUSH1 0x6
0x852 SLOAD
0x853 PUSH1 0x1
0x855 PUSH1 0xa0
0x857 PUSH1 0x2
0x859 EXP
0x85a SUB
0x85b AND
0x85c DUP2
0x85d JUMP
---
0x84f: JUMPDEST 
0x850: V749 = 0x6
0x852: V750 = S[0x6]
0x853: V751 = 0x1
0x855: V752 = 0xa0
0x857: V753 = 0x2
0x859: V754 = EXP 0x2 0xa0
0x85a: V755 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85b: V756 = AND 0xffffffffffffffffffffffffffffffffffffffff V750
0x85d: JUMP 0x1f1
---
Entry stack: [V12, 0x1f1]
Stack pops: 1
Stack additions: [S0, V756]
Exit stack: [V12, 0x1f1, V756]

================================

Block 0x85e
[0x85e:0x86f]
---
Predecessors: [0x218]
Successors: [0x152]
---
0x85e JUMPDEST
0x85f PUSH1 0x7
0x861 PUSH1 0x20
0x863 MSTORE
0x864 PUSH1 0x0
0x866 SWAP1
0x867 DUP2
0x868 MSTORE
0x869 PUSH1 0x40
0x86b SWAP1
0x86c SHA3
0x86d SLOAD
0x86e DUP2
0x86f JUMP
---
0x85e: JUMPDEST 
0x85f: V757 = 0x7
0x861: V758 = 0x20
0x863: M[0x20] = 0x7
0x864: V759 = 0x0
0x868: M[0x0] = V191
0x869: V760 = 0x40
0x86c: V761 = SHA3 0x0 0x40
0x86d: V762 = S[V761]
0x86f: JUMP 0x152
---
Entry stack: [V12, 0x152, V191]
Stack pops: 2
Stack additions: [S1, V762]
Exit stack: [V12, 0x152, V762]

================================

Block 0x870
[0x870:0x878]
---
Predecessors: [0x249]
Successors: [0x152]
---
0x870 JUMPDEST
0x871 PUSH5 0x9c76524000
0x877 DUP2
0x878 JUMP
---
0x870: JUMPDEST 
0x871: V763 = 0x9c76524000
0x878: JUMP 0x152
---
Entry stack: [V12, 0x152]
Stack pops: 1
Stack additions: [S0, 0x9c76524000]
Exit stack: [V12, 0x152, 0x9c76524000]

================================

Block 0x879
[0x879:0x87e]
---
Predecessors: [0x26e]
Successors: [0x152]
---
0x879 JUMPDEST
0x87a PUSH1 0x1
0x87c SLOAD
0x87d DUP2
0x87e JUMP
---
0x879: JUMPDEST 
0x87a: V764 = 0x1
0x87c: V765 = S[0x1]
0x87e: JUMP 0x152
---
Entry stack: [V12, 0x152]
Stack pops: 1
Stack additions: [S0, V765]
Exit stack: [V12, 0x152, V765]

================================

Block 0x87f
[0x87f:0x887]
---
Predecessors: [0x293]
Successors: [0x152]
---
0x87f JUMPDEST
0x880 PUSH5 0x174876e800
0x886 DUP2
0x887 JUMP
---
0x87f: JUMPDEST 
0x880: V766 = 0x174876e800
0x887: JUMP 0x152
---
Entry stack: [V12, 0x152]
Stack pops: 1
Stack additions: [S0, 0x174876e800]
Exit stack: [V12, 0x152, 0x174876e800]

================================

Block 0x888
[0x888:0x891]
---
Predecessors: [0x2b8]
Successors: [0x152]
---
0x888 JUMPDEST
0x889 PUSH6 0x61c9f368000
0x890 DUP2
0x891 JUMP
---
0x888: JUMPDEST 
0x889: V767 = 0x61c9f368000
0x891: JUMP 0x152
---
Entry stack: [V12, 0x152]
Stack pops: 1
Stack additions: [S0, 0x61c9f368000]
Exit stack: [V12, 0x152, 0x61c9f368000]

================================

Block 0x892
[0x892:0x8a0]
---
Predecessors: [0x2dd]
Successors: [0x1f1]
---
0x892 JUMPDEST
0x893 PUSH1 0x0
0x895 SLOAD
0x896 PUSH1 0x1
0x898 PUSH1 0xa0
0x89a PUSH1 0x2
0x89c EXP
0x89d SUB
0x89e AND
0x89f DUP2
0x8a0 JUMP
---
0x892: JUMPDEST 
0x893: V768 = 0x0
0x895: V769 = S[0x0]
0x896: V770 = 0x1
0x898: V771 = 0xa0
0x89a: V772 = 0x2
0x89c: V773 = EXP 0x2 0xa0
0x89d: V774 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89e: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff V769
0x8a0: JUMP 0x1f1
---
Entry stack: [V12, 0x1f1]
Stack pops: 1
Stack additions: [S0, V775]
Exit stack: [V12, 0x1f1, V775]

================================

Block 0x8a1
[0x8a1:0x8a6]
---
Predecessors: [0x30c]
Successors: [0x152]
---
0x8a1 JUMPDEST
0x8a2 PUSH1 0x2
0x8a4 SLOAD
0x8a5 DUP2
0x8a6 JUMP
---
0x8a1: JUMPDEST 
0x8a2: V776 = 0x2
0x8a4: V777 = S[0x2]
0x8a6: JUMP 0x152
---
Entry stack: [V12, 0x152]
Stack pops: 1
Stack additions: [S0, V777]
Exit stack: [V12, 0x152, V777]

================================

Block 0x8a7
[0x8a7:0x8ab]
---
Predecessors: [0x331]
Successors: [0x152]
---
0x8a7 JUMPDEST
0x8a8 PUSH1 0x14
0x8aa DUP2
0x8ab JUMP
---
0x8a7: JUMPDEST 
0x8a8: V778 = 0x14
0x8ab: JUMP 0x152
---
Entry stack: [V12, 0x152]
Stack pops: 1
Stack additions: [S0, 0x14]
Exit stack: [V12, 0x152, 0x14]

================================

Block 0x8ac
[0x8ac:0x8b4]
---
Predecessors: [0x356]
Successors: [0x35e]
---
0x8ac JUMPDEST
0x8ad PUSH1 0x8
0x8af SLOAD
0x8b0 PUSH1 0xff
0x8b2 AND
0x8b3 DUP2
0x8b4 JUMP
---
0x8ac: JUMPDEST 
0x8ad: V779 = 0x8
0x8af: V780 = S[0x8]
0x8b0: V781 = 0xff
0x8b2: V782 = AND 0xff V780
0x8b4: JUMP 0x35e
---
Entry stack: [V12, 0x35e]
Stack pops: 1
Stack additions: [S0, V782]
Exit stack: [V12, 0x35e, V782]

================================

Block 0x8b5
[0x8b5:0x8ba]
---
Predecessors: [0x37d]
Successors: [0x152]
---
0x8b5 JUMPDEST
0x8b6 PUSH1 0x3
0x8b8 SLOAD
0x8b9 DUP2
0x8ba JUMP
---
0x8b5: JUMPDEST 
0x8b6: V783 = 0x3
0x8b8: V784 = S[0x3]
0x8ba: JUMP 0x152
---
Entry stack: [V12, 0x152]
Stack pops: 1
Stack additions: [S0, V784]
Exit stack: [V12, 0x152, V784]

================================

Block 0x8bb
[0x8bb:0x8c4]
---
Predecessors: [0x3a2]
Successors: [0x152]
---
0x8bb JUMPDEST
0x8bc PUSH6 0x124c8d73f000
0x8c3 DUP2
0x8c4 JUMP
---
0x8bb: JUMPDEST 
0x8bc: V785 = 0x124c8d73f000
0x8c4: JUMP 0x152
---
Entry stack: [V12, 0x152]
Stack pops: 1
Stack additions: [S0, 0x124c8d73f000]
Exit stack: [V12, 0x152, 0x124c8d73f000]

================================

Block 0x8c5
[0x8c5:0x8d1]
---
Predecessors: [0x3c7]
Successors: [0x8d2, 0x9aa]
---
0x8c5 JUMPDEST
0x8c6 PUSH1 0x0
0x8c8 PUSH1 0x3
0x8ca SLOAD
0x8cb TIMESTAMP
0x8cc GT
0x8cd ISZERO
0x8ce PUSH2 0x9aa
0x8d1 JUMPI
---
0x8c5: JUMPDEST 
0x8c6: V786 = 0x0
0x8c8: V787 = 0x3
0x8ca: V788 = S[0x3]
0x8cb: V789 = TIMESTAMP
0x8cc: V790 = GT V789 V788
0x8cd: V791 = ISZERO V790
0x8ce: V792 = 0x9aa
0x8d1: JUMPI 0x9aa V791
---
Entry stack: [V12, 0x110]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x110, 0x0]

================================

Block 0x8d2
[0x8d2:0x8f7]
---
Predecessors: [0x8c5]
Successors: [0x8f8, 0x9aa]
---
0x8d2 POP
0x8d3 PUSH1 0x1
0x8d5 PUSH1 0xa0
0x8d7 PUSH1 0x2
0x8d9 EXP
0x8da SUB
0x8db CALLER
0x8dc DUP2
0x8dd AND
0x8de PUSH1 0x0
0x8e0 SWAP1
0x8e1 DUP2
0x8e2 MSTORE
0x8e3 PUSH1 0x7
0x8e5 PUSH1 0x20
0x8e7 MSTORE
0x8e8 PUSH1 0x40
0x8ea SWAP1
0x8eb SHA3
0x8ec SLOAD
0x8ed SWAP1
0x8ee ADDRESS
0x8ef AND
0x8f0 BALANCE
0x8f1 DUP2
0x8f2 SWAP1
0x8f3 LT
0x8f4 PUSH2 0x9aa
0x8f7 JUMPI
---
0x8d3: V793 = 0x1
0x8d5: V794 = 0xa0
0x8d7: V795 = 0x2
0x8d9: V796 = EXP 0x2 0xa0
0x8da: V797 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8db: V798 = CALLER
0x8dd: V799 = AND 0xffffffffffffffffffffffffffffffffffffffff V798
0x8de: V800 = 0x0
0x8e2: M[0x0] = V799
0x8e3: V801 = 0x7
0x8e5: V802 = 0x20
0x8e7: M[0x20] = 0x7
0x8e8: V803 = 0x40
0x8eb: V804 = SHA3 0x0 0x40
0x8ec: V805 = S[V804]
0x8ee: V806 = ADDRESS
0x8ef: V807 = AND V806 0xffffffffffffffffffffffffffffffffffffffff
0x8f0: V808 = BALANCE V807
0x8f3: V809 = LT V808 V805
0x8f4: V810 = 0x9aa
0x8f7: JUMPI 0x9aa V809
---
Entry stack: [V12, 0x110, 0x0]
Stack pops: 1
Stack additions: [V805]
Exit stack: [V12, 0x110, V805]

================================

Block 0x8f8
[0x8f8:0x919]
---
Predecessors: [0x8d2]
Successors: [0x91a, 0x9aa]
---
0x8f8 PUSH1 0x1
0x8fa PUSH1 0xa0
0x8fc PUSH1 0x2
0x8fe EXP
0x8ff SUB
0x900 CALLER
0x901 AND
0x902 PUSH1 0x0
0x904 SWAP1
0x905 DUP2
0x906 MSTORE
0x907 PUSH1 0x7
0x909 PUSH1 0x20
0x90b MSTORE
0x90c PUSH1 0x40
0x90e DUP2
0x90f SHA3
0x910 DUP2
0x911 SWAP1
0x912 SSTORE
0x913 DUP2
0x914 GT
0x915 ISZERO
0x916 PUSH2 0x9aa
0x919 JUMPI
---
0x8f8: V811 = 0x1
0x8fa: V812 = 0xa0
0x8fc: V813 = 0x2
0x8fe: V814 = EXP 0x2 0xa0
0x8ff: V815 = SUB 0x10000000000000000000000000000000000000000 0x1
0x900: V816 = CALLER
0x901: V817 = AND V816 0xffffffffffffffffffffffffffffffffffffffff
0x902: V818 = 0x0
0x906: M[0x0] = V817
0x907: V819 = 0x7
0x909: V820 = 0x20
0x90b: M[0x20] = 0x7
0x90c: V821 = 0x40
0x90f: V822 = SHA3 0x0 0x40
0x912: S[V822] = 0x0
0x914: V823 = GT V805 0x0
0x915: V824 = ISZERO V823
0x916: V825 = 0x9aa
0x919: JUMPI 0x9aa V824
---
Entry stack: [V12, 0x110, V805]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x110, V805]

================================

Block 0x91a
[0x91a:0x945]
---
Predecessors: [0x8f8]
Successors: [0x946, 0x94a]
---
0x91a PUSH1 0x1
0x91c PUSH1 0xa0
0x91e PUSH1 0x2
0x920 EXP
0x921 SUB
0x922 CALLER
0x923 AND
0x924 DUP2
0x925 ISZERO
0x926 PUSH2 0x8fc
0x929 MUL
0x92a DUP3
0x92b PUSH1 0x40
0x92d MLOAD
0x92e PUSH1 0x0
0x930 PUSH1 0x40
0x932 MLOAD
0x933 DUP1
0x934 DUP4
0x935 SUB
0x936 DUP2
0x937 DUP6
0x938 DUP9
0x939 DUP9
0x93a CALL
0x93b SWAP4
0x93c POP
0x93d POP
0x93e POP
0x93f POP
0x940 ISZERO
0x941 ISZERO
0x942 PUSH2 0x94a
0x945 JUMPI
---
0x91a: V826 = 0x1
0x91c: V827 = 0xa0
0x91e: V828 = 0x2
0x920: V829 = EXP 0x2 0xa0
0x921: V830 = SUB 0x10000000000000000000000000000000000000000 0x1
0x922: V831 = CALLER
0x923: V832 = AND V831 0xffffffffffffffffffffffffffffffffffffffff
0x925: V833 = ISZERO V805
0x926: V834 = 0x8fc
0x929: V835 = MUL 0x8fc V833
0x92b: V836 = 0x40
0x92d: V837 = M[0x40]
0x92e: V838 = 0x0
0x930: V839 = 0x40
0x932: V840 = M[0x40]
0x935: V841 = SUB V837 V840
0x93a: V842 = CALL V835 V832 V805 V840 V841 V840 0x0
0x940: V843 = ISZERO V842
0x941: V844 = ISZERO V843
0x942: V845 = 0x94a
0x945: JUMPI 0x94a V844
---
Entry stack: [V12, 0x110, V805]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x110, V805]

================================

Block 0x946
[0x946:0x949]
---
Predecessors: [0x91a]
Successors: []
---
0x946 PUSH1 0x0
0x948 DUP1
0x949 REVERT
---
0x946: V846 = 0x0
0x949: REVERT 0x0 0x0
---
Entry stack: [V12, 0x110, V805]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x110, V805]

================================

Block 0x94a
[0x94a:0x9a9]
---
Predecessors: [0x91a]
Successors: [0x9aa]
---
0x94a JUMPDEST
0x94b PUSH32 0x1673f758ed3beff5e37b51f770fd638a812bade2568f15526a4f5b33945c9363
0x96c CALLER
0x96d DUP3
0x96e PUSH1 0x0
0x970 PUSH1 0x1
0x972 SLOAD
0x973 PUSH1 0x40
0x975 MLOAD
0x976 PUSH1 0x1
0x978 PUSH1 0xa0
0x97a PUSH1 0x2
0x97c EXP
0x97d SUB
0x97e SWAP1
0x97f SWAP5
0x980 AND
0x981 DUP5
0x982 MSTORE
0x983 PUSH1 0x20
0x985 DUP5
0x986 ADD
0x987 SWAP3
0x988 SWAP1
0x989 SWAP3
0x98a MSTORE
0x98b ISZERO
0x98c ISZERO
0x98d PUSH1 0x40
0x98f DUP1
0x990 DUP5
0x991 ADD
0x992 SWAP2
0x993 SWAP1
0x994 SWAP2
0x995 MSTORE
0x996 PUSH1 0x60
0x998 DUP4
0x999 ADD
0x99a SWAP2
0x99b SWAP1
0x99c SWAP2
0x99d MSTORE
0x99e PUSH1 0x80
0x9a0 SWAP1
0x9a1 SWAP2
0x9a2 ADD
0x9a3 SWAP1
0x9a4 MLOAD
0x9a5 DUP1
0x9a6 SWAP2
0x9a7 SUB
0x9a8 SWAP1
0x9a9 LOG1
---
0x94a: JUMPDEST 
0x94b: V847 = 0x1673f758ed3beff5e37b51f770fd638a812bade2568f15526a4f5b33945c9363
0x96c: V848 = CALLER
0x96e: V849 = 0x0
0x970: V850 = 0x1
0x972: V851 = S[0x1]
0x973: V852 = 0x40
0x975: V853 = M[0x40]
0x976: V854 = 0x1
0x978: V855 = 0xa0
0x97a: V856 = 0x2
0x97c: V857 = EXP 0x2 0xa0
0x97d: V858 = SUB 0x10000000000000000000000000000000000000000 0x1
0x980: V859 = AND V848 0xffffffffffffffffffffffffffffffffffffffff
0x982: M[V853] = V859
0x983: V860 = 0x20
0x986: V861 = ADD V853 0x20
0x98a: M[V861] = V805
0x98b: V862 = ISZERO 0x0
0x98c: V863 = ISZERO 0x1
0x98d: V864 = 0x40
0x991: V865 = ADD V853 0x40
0x995: M[V865] = 0x0
0x996: V866 = 0x60
0x999: V867 = ADD V853 0x60
0x99d: M[V867] = V851
0x99e: V868 = 0x80
0x9a2: V869 = ADD V853 0x80
0x9a4: V870 = M[0x40]
0x9a7: V871 = SUB V869 V870
0x9a9: LOG V870 V871 0x1673f758ed3beff5e37b51f770fd638a812bade2568f15526a4f5b33945c9363
---
Entry stack: [V12, 0x110, V805]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x110, V805]

================================

Block 0x9aa
[0x9aa:0x9aa]
---
Predecessors: [0x8c5, 0x8d2, 0x8f8, 0x94a]
Successors: [0x9ab]
---
0x9aa JUMPDEST
---
0x9aa: JUMPDEST 
---
Entry stack: [V12, 0x110, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x110, S0]

================================

Block 0x9ab
[0x9ab:0x9ab]
---
Predecessors: [0x9aa]
Successors: [0x9ac]
---
0x9ab JUMPDEST
---
0x9ab: JUMPDEST 
---
Entry stack: [V12, 0x110, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x110, S0]

================================

Block 0x9ac
[0x9ac:0x9ac]
---
Predecessors: [0x9ab]
Successors: [0x9ad]
---
0x9ac JUMPDEST
---
0x9ac: JUMPDEST 
---
Entry stack: [V12, 0x110, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x110, S0]

================================

Block 0x9ad
[0x9ad:0x9ad]
---
Predecessors: [0x9ac]
Successors: [0x9ae]
---
0x9ad JUMPDEST
---
0x9ad: JUMPDEST 
---
Entry stack: [V12, 0x110, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x110, S0]

================================

Block 0x9ae
[0x9ae:0x9b0]
---
Predecessors: [0x9ad]
Successors: [0x110]
---
0x9ae JUMPDEST
0x9af POP
0x9b0 JUMP
---
0x9ae: JUMPDEST 
0x9b0: JUMP 0x110
---
Entry stack: [V12, 0x110, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x9b1
[0x9b1:0x9c0]
---
Predecessors: [0x41b, 0x474, 0x497, 0x764, 0x789, 0x803]
Successors: [0x9c1, 0x9c6]
---
0x9b1 JUMPDEST
0x9b2 PUSH1 0x0
0x9b4 DUP3
0x9b5 DUP3
0x9b6 ADD
0x9b7 DUP4
0x9b8 DUP2
0x9b9 LT
0x9ba DUP1
0x9bb ISZERO
0x9bc SWAP1
0x9bd PUSH2 0x9c6
0x9c0 JUMPI
---
0x9b1: JUMPDEST 
0x9b2: V872 = 0x0
0x9b6: V873 = ADD S0 S1
0x9b9: V874 = LT V873 S1
0x9bb: V875 = ISZERO V874
0x9bd: V876 = 0x9c6
0x9c0: JUMPI 0x9c6 V874
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V873, V875]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V873, V875]

================================

Block 0x9c1
[0x9c1:0x9c5]
---
Predecessors: [0x9b1]
Successors: [0x9c6]
---
0x9c1 POP
0x9c2 DUP3
0x9c3 DUP2
0x9c4 LT
0x9c5 ISZERO
---
0x9c4: V877 = LT V873 S3
0x9c5: V878 = ISZERO V877
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V873, V875]
Stack pops: 4
Stack additions: [S3, S2, S1, V878]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V873, V878]

================================

Block 0x9c6
[0x9c6:0x9cc]
---
Predecessors: [0x9b1, 0x9c1, 0x9d9]
Successors: [0x9cd, 0x9ce]
---
0x9c6 JUMPDEST
0x9c7 ISZERO
0x9c8 ISZERO
0x9c9 PUSH2 0x9ce
0x9cc JUMPI
---
0x9c6: JUMPDEST 
0x9c7: V879 = ISZERO S0
0x9c8: V880 = ISZERO V879
0x9c9: V881 = 0x9ce
0x9cc: JUMPI 0x9ce V880
---
Entry stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, S1]

================================

Block 0x9cd
[0x9cd:0x9cd]
---
Predecessors: [0x9c6]
Successors: []
---
0x9cd INVALID
---
0x9cd: INVALID 
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]

================================

Block 0x9ce
[0x9ce:0x9d1]
---
Predecessors: [0x9c6, 0x9f5]
Successors: [0x9d2]
---
0x9ce JUMPDEST
0x9cf DUP1
0x9d0 SWAP2
0x9d1 POP
---
0x9ce: JUMPDEST 
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S0]

================================

Block 0x9d2
[0x9d2:0x9d8]
---
Predecessors: [0x9ce]
Successors: [0x3df, 0x42e, 0x497, 0x4bd, 0x75b, 0x77a, 0x79c, 0x7d4, 0x7e3, 0x7fa, 0x809, 0x82b]
---
0x9d2 JUMPDEST
0x9d3 POP
0x9d4 SWAP3
0x9d5 SWAP2
0x9d6 POP
0x9d7 POP
0x9d8 JUMP
---
0x9d2: JUMPDEST 
0x9d8: JUMP S4
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0x9d9
[0x9d9:0x9e5]
---
Predecessors: [0x74b, 0x7bd, 0x7e3, 0x81a]
Successors: [0x9c6, 0x9e6]
---
0x9d9 JUMPDEST
0x9da PUSH1 0x0
0x9dc DUP3
0x9dd DUP3
0x9de MUL
0x9df DUP4
0x9e0 ISZERO
0x9e1 DUP1
0x9e2 PUSH2 0x9c6
0x9e5 JUMPI
---
0x9d9: JUMPDEST 
0x9da: V882 = 0x0
0x9de: V883 = MUL {0x14, 0x18, 0x174876e800} S1
0x9e0: V884 = ISZERO S1
0x9e2: V885 = 0x9c6
0x9e5: JUMPI 0x9c6 V884
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x7e3, 0x809}, S4, {0x18, 0x174876e800}, {0x75b, 0x7d4, 0x7fa, 0x82b}, S1, {0x14, 0x18, 0x174876e800}]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V883, V884]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x7e3, 0x809}, S4, {0x18, 0x174876e800}, {0x75b, 0x7d4, 0x7fa, 0x82b}, S1, {0x14, 0x18, 0x174876e800}, 0x0, V883, V884]

================================

Block 0x9e6
[0x9e6:0x9f0]
---
Predecessors: [0x9d9]
Successors: [0x9f1, 0x9f2]
---
0x9e6 POP
0x9e7 DUP3
0x9e8 DUP5
0x9e9 DUP3
0x9ea DUP2
0x9eb ISZERO
0x9ec ISZERO
0x9ed PUSH2 0x9f2
0x9f0 JUMPI
---
0x9eb: V886 = ISZERO S4
0x9ec: V887 = ISZERO V886
0x9ed: V888 = 0x9f2
0x9f0: JUMPI 0x9f2 V887
---
Entry stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x7e3, 0x809}, S7, {0x18, 0x174876e800}, {0x75b, 0x7d4, 0x7fa, 0x82b}, S4, {0x14, 0x18, 0x174876e800}, 0x0, V883, V884]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x7e3, 0x809}, S7, {0x18, 0x174876e800}, {0x75b, 0x7d4, 0x7fa, 0x82b}, S4, {0x14, 0x18, 0x174876e800}, 0x0, V883, {0x14, 0x18, 0x174876e800}, S4, V883]

================================

Block 0x9f1
[0x9f1:0x9f1]
---
Predecessors: [0x9e6]
Successors: []
---
0x9f1 INVALID
---
0x9f1: INVALID 
---
Entry stack: [S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, {0x0, 0x7e3, 0x809}, S9, {0x18, 0x174876e800}, {0x75b, 0x7d4, 0x7fa, 0x82b}, S6, {0x14, 0x18, 0x174876e800}, 0x0, S3, {0x14, 0x18, 0x174876e800}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, {0x0, 0x7e3, 0x809}, S9, {0x18, 0x174876e800}, {0x75b, 0x7d4, 0x7fa, 0x82b}, S6, {0x14, 0x18, 0x174876e800}, 0x0, S3, {0x14, 0x18, 0x174876e800}, S1, S0]

================================

Block 0x9f2
[0x9f2:0x9f4]
---
Predecessors: [0x9e6]
Successors: [0x9f5]
---
0x9f2 JUMPDEST
0x9f3 DIV
0x9f4 EQ
---
0x9f2: JUMPDEST 
0x9f3: V889 = DIV S0 S1
0x9f4: V890 = EQ V889 {0x14, 0x18, 0x174876e800}
---
Entry stack: [S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, {0x0, 0x7e3, 0x809}, S9, {0x18, 0x174876e800}, {0x75b, 0x7d4, 0x7fa, 0x82b}, S6, {0x14, 0x18, 0x174876e800}, 0x0, S3, {0x14, 0x18, 0x174876e800}, S1, S0]
Stack pops: 3
Stack additions: [V890]
Exit stack: [S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, {0x0, 0x7e3, 0x809}, S9, {0x18, 0x174876e800}, {0x75b, 0x7d4, 0x7fa, 0x82b}, S6, {0x14, 0x18, 0x174876e800}, 0x0, S3, V890]

================================

Block 0x9f5
[0x9f5:0x9fb]
---
Predecessors: [0x9f2]
Successors: [0x9ce, 0x9fc]
---
0x9f5 JUMPDEST
0x9f6 ISZERO
0x9f7 ISZERO
0x9f8 PUSH2 0x9ce
0x9fb JUMPI
---
0x9f5: JUMPDEST 
0x9f6: V891 = ISZERO V890
0x9f7: V892 = ISZERO V891
0x9f8: V893 = 0x9ce
0x9fb: JUMPI 0x9ce V892
---
Entry stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x7e3, 0x809}, S7, {0x18, 0x174876e800}, {0x75b, 0x7d4, 0x7fa, 0x82b}, S4, {0x14, 0x18, 0x174876e800}, 0x0, S1, V890]
Stack pops: 1
Stack additions: []
Exit stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x7e3, 0x809}, S7, {0x18, 0x174876e800}, {0x75b, 0x7d4, 0x7fa, 0x82b}, S4, {0x14, 0x18, 0x174876e800}, 0x0, S1]

================================

Block 0x9fc
[0x9fc:0x9fc]
---
Predecessors: [0x9f5]
Successors: []
---
0x9fc INVALID
---
0x9fc: INVALID 
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0x7e3, 0x809}, S6, {0x18, 0x174876e800}, {0x75b, 0x7d4, 0x7fa, 0x82b}, S3, {0x14, 0x18, 0x174876e800}, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x0, 0x7e3, 0x809}, S6, {0x18, 0x174876e800}, {0x75b, 0x7d4, 0x7fa, 0x82b}, S3, {0x14, 0x18, 0x174876e800}, 0x0, S0]

================================

Block 0x9fd
[0x9fd:0xa00]
---
Predecessors: []
Successors: [0xa01]
---
0x9fd JUMPDEST
0x9fe DUP1
0x9ff SWAP2
0xa00 POP
---
0x9fd: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0xa01
[0xa01:0xa07]
---
Predecessors: [0x9fd]
Successors: []
Has unresolved jump.
---
0xa01 JUMPDEST
0xa02 POP
0xa03 SWAP3
0xa04 SWAP2
0xa05 POP
0xa06 POP
0xa07 JUMP
---
0xa01: JUMPDEST 
0xa07: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xa08
[0xa08:0xa12]
---
Predecessors: [0x7ab, 0x7dd]
Successors: [0xa13, 0xa14]
---
0xa08 JUMPDEST
0xa09 PUSH1 0x0
0xa0b DUP3
0xa0c DUP3
0xa0d GT
0xa0e ISZERO
0xa0f PUSH2 0xa14
0xa12 JUMPI
---
0xa08: JUMPDEST 
0xa09: V894 = 0x0
0xa0d: V895 = GT S0 S1
0xa0e: V896 = ISZERO V895
0xa0f: V897 = 0xa14
0xa12: JUMPI 0xa14 V896
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0]

================================

Block 0xa13
[0xa13:0xa13]
---
Predecessors: [0xa08]
Successors: []
---
0xa13 INVALID
---
0xa13: INVALID 
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0xa14
[0xa14:0xa18]
---
Predecessors: [0xa08]
Successors: [0xa19]
---
0xa14 JUMPDEST
0xa15 POP
0xa16 DUP1
0xa17 DUP3
0xa18 SUB
---
0xa14: JUMPDEST 
0xa18: V898 = SUB S2 S1
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V898]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V898]

================================

Block 0xa19
[0xa19:0xa1e]
---
Predecessors: [0xa14]
Successors: [0x3df, 0x7bd, 0x7e3, 0x809]
---
0xa19 JUMPDEST
0xa1a SWAP3
0xa1b SWAP2
0xa1c POP
0xa1d POP
0xa1e JUMP
---
0xa19: JUMPDEST 
0xa1e: JUMP S3
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V898]
Stack pops: 4
Stack additions: [S0]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V898]

================================

Block 0xa1f
[0xa1f:0xa61]
---
Predecessors: []
Successors: []
---
0xa1f STOP
0xa20 LOG1
0xa21 PUSH6 0x627a7a723058
0xa28 SHA3
0xa29 MISSING 0xda
0xa2a MISSING 0xcc
0xa2b PUSH14 0xdc9058c80bdee0106c7ddf199ad0
0xa3a SWAP13
0xa3b MISSING 0x47
0xa3c LOG2
0xa3d CALLDATALOAD
0xa3e MISSING 0xc7
0xa3f MISSING 0x5f
0xa40 SMOD
0xa41 PUSH32 0xe675e800e776a90029
---
0xa1f: STOP 
0xa20: LOG S0 S1 S2
0xa21: V899 = 0x627a7a723058
0xa28: V900 = SHA3 0x627a7a723058 S3
0xa29: MISSING 0xda
0xa2a: MISSING 0xcc
0xa2b: V901 = 0xdc9058c80bdee0106c7ddf199ad0
0xa3b: MISSING 0x47
0xa3c: LOG S0 S1 S2 S3
0xa3d: V902 = CALLDATALOAD S4
0xa3e: MISSING 0xc7
0xa3f: MISSING 0x5f
0xa40: V903 = SMOD S0 S1
0xa41: V904 = 0xe675e800e776a90029
---
Entry stack: []
Stack pops: 0
Stack additions: [V900, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0xdc9058c80bdee0106c7ddf199ad0, V902, 0xe675e800e776a90029, V903]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x114
Exit block: 0x112
Body: 0x110, 0x111, 0x112, 0x114, 0x11b, 0x11f, 0x641, 0x64c, 0x662, 0x666, 0x676, 0x6b0, 0x6b4, 0x6c1, 0x6c5, 0x71e, 0x72c, 0x72d, 0x72e

Function 1:
Public function signature: 0x3f9c793
Entry block: 0x129
Exit block: 0x112
Body: 0x110, 0x111, 0x112, 0x129

Function 2:
Public function signature: 0x14373817
Entry block: 0x13f
Exit block: 0x152
Body: 0x13f, 0x146, 0x14a, 0x152, 0x730

Function 3:
Public function signature: 0x2119249f
Entry block: 0x164
Exit block: 0x16b
Body: 0x164, 0x16b, 0x16f, 0x17a

Function 4:
Public function signature: 0x378544df
Entry block: 0x194
Exit block: 0x152
Body: 0x152, 0x194, 0x19b, 0x19f, 0x843

Function 5:
Public function signature: 0x518ab2a8
Entry block: 0x1b9
Exit block: 0x152
Body: 0x152, 0x1b9, 0x1c0, 0x1c4, 0x849

Function 6:
Public function signature: 0x6e66f6e9
Entry block: 0x1de
Exit block: 0x1f1
Body: 0x1de, 0x1e5, 0x1e9, 0x1f1, 0x84f

Function 7:
Public function signature: 0x70a08231
Entry block: 0x20d
Exit block: 0x152
Body: 0x152, 0x20d, 0x214, 0x218, 0x85e

Function 8:
Public function signature: 0x7a3a0e84
Entry block: 0x23e
Exit block: 0x152
Body: 0x152, 0x23e, 0x245, 0x249, 0x870

Function 9:
Public function signature: 0x7b3e5e7b
Entry block: 0x263
Exit block: 0x152
Body: 0x152, 0x263, 0x26a, 0x26e, 0x879

Function 10:
Public function signature: 0x7c831bd9
Entry block: 0x288
Exit block: 0x152
Body: 0x152, 0x288, 0x28f, 0x293, 0x87f

Function 11:
Public function signature: 0x906a26e0
Entry block: 0x2ad
Exit block: 0x152
Body: 0x152, 0x2ad, 0x2b4, 0x2b8, 0x888

Function 12:
Public function signature: 0xa3e67610
Entry block: 0x2d2
Exit block: 0x1f1
Body: 0x1f1, 0x2d2, 0x2d9, 0x2dd, 0x892

Function 13:
Public function signature: 0xbe9a6555
Entry block: 0x301
Exit block: 0x152
Body: 0x152, 0x301, 0x308, 0x30c, 0x8a1

Function 14:
Public function signature: 0xc6e04590
Entry block: 0x326
Exit block: 0x152
Body: 0x152, 0x326, 0x32d, 0x331, 0x8a7

Function 15:
Public function signature: 0xccb07cef
Entry block: 0x34b
Exit block: 0x35e
Body: 0x34b, 0x352, 0x356, 0x35e, 0x8ac

Function 16:
Public function signature: 0xefbe1c1c
Entry block: 0x372
Exit block: 0x152
Body: 0x152, 0x372, 0x379, 0x37d, 0x8b5

Function 17:
Public function signature: 0xf71441a5
Entry block: 0x397
Exit block: 0x152
Body: 0x152, 0x397, 0x39e, 0x3a2, 0x8bb

Function 18:
Public function signature: 0xfd6b7ef8
Entry block: 0x3bc
Exit block: 0x112
Body: 0x110, 0x111, 0x112, 0x3bc, 0x3c3, 0x3c7, 0x8c5, 0x8d2, 0x8f8, 0x91a, 0x946, 0x94a, 0x9aa, 0x9ab, 0x9ac, 0x9ad, 0x9ae

Function 19:
Public fallback function
Entry block: 0xeb
Exit block: 0x112
Body: 0xeb, 0xec, 0x108, 0x110, 0x111, 0x112

Function 20:
Private function
Entry block: 0x735
Exit block: 0x83d
Body: 0x42e, 0x431, 0x43c, 0x474, 0x497, 0x4bd, 0x53e, 0x54f, 0x561, 0x5c6, 0x5d7, 0x623, 0x634, 0x638, 0x639, 0x63a, 0x735, 0x74b, 0x75b, 0x764, 0x77a, 0x781, 0x789, 0x79c, 0x7a3, 0x7ab, 0x7bd, 0x7d4, 0x7dd, 0x7e3, 0x7e3, 0x7e3, 0x7e3, 0x7fa, 0x803, 0x809, 0x81a, 0x82b, 0x834, 0x83c, 0x83d, 0x9b1, 0x9c1, 0x9c6, 0x9ce, 0x9d2, 0xa08, 0xa14, 0xa19

Function 21:
Private function
Entry block: 0x9d9
Exit block: 0x9d2
Body: 0x3df, 0x3f1, 0x3ff, 0x406, 0x40d, 0x414, 0x41b, 0x42e, 0x431, 0x43c, 0x474, 0x497, 0x4bd, 0x53e, 0x54f, 0x561, 0x5c6, 0x5d7, 0x623, 0x634, 0x638, 0x639, 0x63a, 0x77a, 0x781, 0x789, 0x79c, 0x7a3, 0x7ab, 0x7bd, 0x7d4, 0x7dd, 0x7e3, 0x7e3, 0x7e3, 0x7e3, 0x7fa, 0x803, 0x809, 0x83c, 0x83d, 0x9b1, 0x9c1, 0x9c6, 0x9ce, 0x9d2, 0x9d9, 0x9e6, 0x9f2, 0x9f5, 0xa08, 0xa14, 0xa19

Function 22:
Private function
Entry block: 0x3d1
Exit block: 0x9ae
Body: 0x3d1, 0x3df, 0x3f1, 0x3ff, 0x406, 0x40d, 0x414, 0x41b, 0x42e, 0x431, 0x43c, 0x474, 0x497, 0x4bd, 0x53e, 0x54f, 0x561, 0x5c6, 0x5d7, 0x623, 0x634, 0x638, 0x639, 0x63a, 0x75b, 0x764, 0x77a, 0x781, 0x789, 0x79c, 0x7a3, 0x7ab, 0x7bd, 0x7d4, 0x7dd, 0x7e3, 0x7e3, 0x7e3, 0x7e3, 0x7fa, 0x803, 0x809, 0x82b, 0x834, 0x83c, 0x83d, 0x9b1, 0x9c1, 0x9c6, 0x9ce, 0x9d2, 0xa08, 0xa14, 0xa19

