args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/10/109753.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xfb]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xfb
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xfb
0xc: JUMPI 0xfb V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x2f9]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x23548b8b
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x2f9
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x23548b8b
0x3b: V13 = EQ V11 0x23548b8b
0x3c: V14 = 0x2f9
0x3f: JUMPI 0x2f9 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x320]
---
0x40 DUP1
0x41 PUSH4 0x29dcb0cf
0x46 EQ
0x47 PUSH2 0x320
0x4a JUMPI
---
0x41: V15 = 0x29dcb0cf
0x46: V16 = EQ 0x29dcb0cf V11
0x47: V17 = 0x320
0x4a: JUMPI 0x320 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x335]
---
0x4b DUP1
0x4c PUSH4 0x332d4357
0x51 EQ
0x52 PUSH2 0x335
0x55 JUMPI
---
0x4c: V18 = 0x332d4357
0x51: V19 = EQ 0x332d4357 V11
0x52: V20 = 0x335
0x55: JUMPI 0x335 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x351]
---
0x56 DUP1
0x57 PUSH4 0x34ec740a
0x5c EQ
0x5d PUSH2 0x351
0x60 JUMPI
---
0x57: V21 = 0x34ec740a
0x5c: V22 = EQ 0x34ec740a V11
0x5d: V23 = 0x351
0x60: JUMPI 0x351 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x369]
---
0x61 DUP1
0x62 PUSH4 0x38af3eed
0x67 EQ
0x68 PUSH2 0x369
0x6b JUMPI
---
0x62: V24 = 0x38af3eed
0x67: V25 = EQ 0x38af3eed V11
0x68: V26 = 0x369
0x6b: JUMPI 0x369 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x39a]
---
0x6c DUP1
0x6d PUSH4 0x5affbd97
0x72 EQ
0x73 PUSH2 0x39a
0x76 JUMPI
---
0x6d: V27 = 0x5affbd97
0x72: V28 = EQ 0x5affbd97 V11
0x73: V29 = 0x39a
0x76: JUMPI 0x39a V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x3bb]
---
0x77 DUP1
0x78 PUSH4 0x6e66f6e9
0x7d EQ
0x7e PUSH2 0x3bb
0x81 JUMPI
---
0x78: V30 = 0x6e66f6e9
0x7d: V31 = EQ 0x6e66f6e9 V11
0x7e: V32 = 0x3bb
0x81: JUMPI 0x3bb V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x3d0]
---
0x82 DUP1
0x83 PUSH4 0x70a08231
0x88 EQ
0x89 PUSH2 0x3d0
0x8c JUMPI
---
0x83: V33 = 0x70a08231
0x88: V34 = EQ 0x70a08231 V11
0x89: V35 = 0x3d0
0x8c: JUMPI 0x3d0 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x3f1]
---
0x8d DUP1
0x8e PUSH4 0x70f48d43
0x93 EQ
0x94 PUSH2 0x3f1
0x97 JUMPI
---
0x8e: V36 = 0x70f48d43
0x93: V37 = EQ 0x70f48d43 V11
0x94: V38 = 0x3f1
0x97: JUMPI 0x3f1 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x41a]
---
0x98 DUP1
0x99 PUSH4 0x7b3e5e7b
0x9e EQ
0x9f PUSH2 0x41a
0xa2 JUMPI
---
0x99: V39 = 0x7b3e5e7b
0x9e: V40 = EQ 0x7b3e5e7b V11
0x9f: V41 = 0x41a
0xa2: JUMPI 0x41a V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x42f]
---
0xa3 DUP1
0xa4 PUSH4 0x83197ef0
0xa9 EQ
0xaa PUSH2 0x42f
0xad JUMPI
---
0xa4: V42 = 0x83197ef0
0xa9: V43 = EQ 0x83197ef0 V11
0xaa: V44 = 0x42f
0xad: JUMPI 0x42f V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x444]
---
0xae DUP1
0xaf PUSH4 0x8486a79a
0xb4 EQ
0xb5 PUSH2 0x444
0xb8 JUMPI
---
0xaf: V45 = 0x8486a79a
0xb4: V46 = EQ 0x8486a79a V11
0xb5: V47 = 0x444
0xb8: JUMPI 0x444 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x459]
---
0xb9 DUP1
0xba PUSH4 0x89285fa1
0xbf EQ
0xc0 PUSH2 0x459
0xc3 JUMPI
---
0xba: V48 = 0x89285fa1
0xbf: V49 = EQ 0x89285fa1 V11
0xc0: V50 = 0x459
0xc3: JUMPI 0x459 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x47a]
---
0xc4 DUP1
0xc5 PUSH4 0xa035b1fe
0xca EQ
0xcb PUSH2 0x47a
0xce JUMPI
---
0xc5: V51 = 0xa035b1fe
0xca: V52 = EQ 0xa035b1fe V11
0xcb: V53 = 0x47a
0xce: JUMPI 0x47a V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x48f]
---
0xcf DUP1
0xd0 PUSH4 0xee55efee
0xd5 EQ
0xd6 PUSH2 0x48f
0xd9 JUMPI
---
0xd0: V54 = 0xee55efee
0xd5: V55 = EQ 0xee55efee V11
0xd6: V56 = 0x48f
0xd9: JUMPI 0x48f V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0xcf]
Successors: [0xe5, 0x4a4]
---
0xda DUP1
0xdb PUSH4 0xefb98bcf
0xe0 EQ
0xe1 PUSH2 0x4a4
0xe4 JUMPI
---
0xdb: V57 = 0xefb98bcf
0xe0: V58 = EQ 0xefb98bcf V11
0xe1: V59 = 0x4a4
0xe4: JUMPI 0x4a4 V58
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xef]
---
Predecessors: [0xda]
Successors: [0xf0, 0x4b9]
---
0xe5 DUP1
0xe6 PUSH4 0xf2fde38b
0xeb EQ
0xec PUSH2 0x4b9
0xef JUMPI
---
0xe6: V60 = 0xf2fde38b
0xeb: V61 = EQ 0xf2fde38b V11
0xec: V62 = 0x4b9
0xef: JUMPI 0x4b9 V61
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xf0
[0xf0:0xfa]
---
Predecessors: [0xe5]
Successors: [0xfb, 0x4da]
---
0xf0 DUP1
0xf1 PUSH4 0xf5074f41
0xf6 EQ
0xf7 PUSH2 0x4da
0xfa JUMPI
---
0xf1: V63 = 0xf5074f41
0xf6: V64 = EQ 0xf5074f41 V11
0xf7: V65 = 0x4da
0xfa: JUMPI 0x4da V64
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xfb
[0xfb:0x113]
---
Predecessors: [0x0, 0xf0]
Successors: [0x4fb]
---
0xfb JUMPDEST
0xfc PUSH1 0x4
0xfe SLOAD
0xff CALLVALUE
0x100 SWAP1
0x101 PUSH1 0x0
0x103 SWAP1
0x104 PUSH2 0x114
0x107 SWAP1
0x108 DUP4
0x109 SWAP1
0x10a PUSH4 0xffffffff
0x10f PUSH2 0x4fb
0x112 AND
0x113 JUMP
---
0xfb: JUMPDEST 
0xfc: V66 = 0x4
0xfe: V67 = S[0x4]
0xff: V68 = CALLVALUE
0x101: V69 = 0x0
0x104: V70 = 0x114
0x10a: V71 = 0xffffffff
0x10f: V72 = 0x4fb
0x112: V73 = AND 0x4fb 0xffffffff
0x113: JUMP 0x4fb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V68, 0x0, 0x114, V68, V67]
Exit stack: [V11, V68, 0x0, 0x114, V68, V67]

================================

Block 0x114
[0x114:0x122]
---
Predecessors: [0x524]
Successors: [0x123, 0x127]
---
0x114 JUMPDEST
0x115 PUSH1 0x9
0x117 SLOAD
0x118 SWAP1
0x119 SWAP2
0x11a POP
0x11b PUSH1 0xff
0x11d AND
0x11e ISZERO
0x11f PUSH2 0x127
0x122 JUMPI
---
0x114: JUMPDEST 
0x115: V74 = 0x9
0x117: V75 = S[0x9]
0x11b: V76 = 0xff
0x11d: V77 = AND 0xff V75
0x11e: V78 = ISZERO V77
0x11f: V79 = 0x127
0x122: JUMPI 0x127 V78
---
Entry stack: [V11, V68, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, V68, S0]

================================

Block 0x123
[0x123:0x126]
---
Predecessors: [0x114]
Successors: []
---
0x123 PUSH1 0x0
0x125 DUP1
0x126 REVERT
---
0x123: V80 = 0x0
0x126: REVERT 0x0 0x0
---
Entry stack: [V11, V68, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68, S0]

================================

Block 0x127
[0x127:0x131]
---
Predecessors: [0x114]
Successors: [0x132, 0x136]
---
0x127 JUMPDEST
0x128 PUSH1 0x5
0x12a SLOAD
0x12b CALLVALUE
0x12c LT
0x12d ISZERO
0x12e PUSH2 0x136
0x131 JUMPI
---
0x127: JUMPDEST 
0x128: V81 = 0x5
0x12a: V82 = S[0x5]
0x12b: V83 = CALLVALUE
0x12c: V84 = LT V83 V82
0x12d: V85 = ISZERO V84
0x12e: V86 = 0x136
0x131: JUMPI 0x136 V85
---
Entry stack: [V11, V68, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68, S0]

================================

Block 0x132
[0x132:0x135]
---
Predecessors: [0x127]
Successors: []
---
0x132 PUSH1 0x0
0x134 DUP1
0x135 REVERT
---
0x132: V87 = 0x0
0x135: REVERT 0x0 0x0
---
Entry stack: [V11, V68, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68, S0]

================================

Block 0x136
[0x136:0x155]
---
Predecessors: [0x127]
Successors: [0x52a]
---
0x136 JUMPDEST
0x137 CALLER
0x138 PUSH1 0x0
0x13a SWAP1
0x13b DUP2
0x13c MSTORE
0x13d PUSH1 0x8
0x13f PUSH1 0x20
0x141 MSTORE
0x142 PUSH1 0x40
0x144 SWAP1
0x145 SHA3
0x146 SLOAD
0x147 PUSH2 0x156
0x14a SWAP1
0x14b DUP4
0x14c PUSH4 0xffffffff
0x151 PUSH2 0x52a
0x154 AND
0x155 JUMP
---
0x136: JUMPDEST 
0x137: V88 = CALLER
0x138: V89 = 0x0
0x13c: M[0x0] = V88
0x13d: V90 = 0x8
0x13f: V91 = 0x20
0x141: M[0x20] = 0x8
0x142: V92 = 0x40
0x145: V93 = SHA3 0x0 0x40
0x146: V94 = S[V93]
0x147: V95 = 0x156
0x14c: V96 = 0xffffffff
0x151: V97 = 0x52a
0x154: V98 = AND 0x52a 0xffffffff
0x155: JUMP 0x52a
---
Entry stack: [V11, V68, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x156, V94, S1]
Exit stack: [V11, V68, S0, 0x156, V94, V68]

================================

Block 0x156
[0x156:0x15f]
---
Predecessors: [0x524]
Successors: [0x160, 0x164]
---
0x156 JUMPDEST
0x157 PUSH1 0x6
0x159 SLOAD
0x15a LT
0x15b ISZERO
0x15c PUSH2 0x164
0x15f JUMPI
---
0x156: JUMPDEST 
0x157: V99 = 0x6
0x159: V100 = S[0x6]
0x15a: V101 = LT V100 S0
0x15b: V102 = ISZERO V101
0x15c: V103 = 0x164
0x15f: JUMPI 0x164 V102
---
Entry stack: [V11, V68, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, V68, S1]

================================

Block 0x160
[0x160:0x163]
---
Predecessors: [0x156]
Successors: []
---
0x160 PUSH1 0x0
0x162 DUP1
0x163 REVERT
---
0x160: V104 = 0x0
0x163: REVERT 0x0 0x0
---
Entry stack: [V11, V68, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68, S0]

================================

Block 0x164
[0x164:0x1ae]
---
Predecessors: [0x156]
Successors: [0x1af, 0x1b3]
---
0x164 JUMPDEST
0x165 PUSH1 0x7
0x167 SLOAD
0x168 PUSH1 0x40
0x16a DUP1
0x16b MLOAD
0x16c PUSH1 0xe0
0x16e PUSH1 0x2
0x170 EXP
0x171 PUSH4 0x70a08231
0x176 MUL
0x177 DUP2
0x178 MSTORE
0x179 ADDRESS
0x17a PUSH1 0x4
0x17c DUP3
0x17d ADD
0x17e MSTORE
0x17f SWAP1
0x180 MLOAD
0x181 DUP4
0x182 SWAP3
0x183 PUSH1 0x1
0x185 PUSH1 0xa0
0x187 PUSH1 0x2
0x189 EXP
0x18a SUB
0x18b AND
0x18c SWAP2
0x18d PUSH4 0x70a08231
0x192 SWAP2
0x193 PUSH1 0x24
0x195 DUP1
0x196 DUP4
0x197 ADD
0x198 SWAP3
0x199 PUSH1 0x20
0x19b SWAP3
0x19c SWAP2
0x19d SWAP1
0x19e DUP3
0x19f SWAP1
0x1a0 SUB
0x1a1 ADD
0x1a2 DUP2
0x1a3 PUSH1 0x0
0x1a5 DUP8
0x1a6 DUP1
0x1a7 EXTCODESIZE
0x1a8 ISZERO
0x1a9 DUP1
0x1aa ISZERO
0x1ab PUSH2 0x1b3
0x1ae JUMPI
---
0x164: JUMPDEST 
0x165: V105 = 0x7
0x167: V106 = S[0x7]
0x168: V107 = 0x40
0x16b: V108 = M[0x40]
0x16c: V109 = 0xe0
0x16e: V110 = 0x2
0x170: V111 = EXP 0x2 0xe0
0x171: V112 = 0x70a08231
0x176: V113 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x178: M[V108] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x179: V114 = ADDRESS
0x17a: V115 = 0x4
0x17d: V116 = ADD V108 0x4
0x17e: M[V116] = V114
0x180: V117 = M[0x40]
0x183: V118 = 0x1
0x185: V119 = 0xa0
0x187: V120 = 0x2
0x189: V121 = EXP 0x2 0xa0
0x18a: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18b: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x18d: V124 = 0x70a08231
0x193: V125 = 0x24
0x197: V126 = ADD V108 0x24
0x199: V127 = 0x20
0x1a0: V128 = SUB V108 V117
0x1a1: V129 = ADD V128 0x24
0x1a3: V130 = 0x0
0x1a7: V131 = EXTCODESIZE V123
0x1a8: V132 = ISZERO V131
0x1aa: V133 = ISZERO V132
0x1ab: V134 = 0x1b3
0x1ae: JUMPI 0x1b3 V133
---
Entry stack: [V11, V68, S0]
Stack pops: 1
Stack additions: [S0, S0, V123, 0x70a08231, V126, 0x20, V117, V129, V117, 0x0, V123, V132]
Exit stack: [V11, V68, S0, S0, V123, 0x70a08231, V126, 0x20, V117, V129, V117, 0x0, V123, V132]

================================

Block 0x1af
[0x1af:0x1b2]
---
Predecessors: [0x164]
Successors: []
---
0x1af PUSH1 0x0
0x1b1 DUP1
0x1b2 REVERT
---
0x1af: V135 = 0x0
0x1b2: REVERT 0x0 0x0
---
Entry stack: [V11, V68, S11, S10, V123, 0x70a08231, V126, 0x20, V117, V129, V117, 0x0, V123, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68, S11, S10, V123, 0x70a08231, V126, 0x20, V117, V129, V117, 0x0, V123, V132]

================================

Block 0x1b3
[0x1b3:0x1bd]
---
Predecessors: [0x164]
Successors: [0x1be, 0x1c7]
---
0x1b3 JUMPDEST
0x1b4 POP
0x1b5 GAS
0x1b6 CALL
0x1b7 ISZERO
0x1b8 DUP1
0x1b9 ISZERO
0x1ba PUSH2 0x1c7
0x1bd JUMPI
---
0x1b3: JUMPDEST 
0x1b5: V136 = GAS
0x1b6: V137 = CALL V136 V123 0x0 V117 V129 V117 0x20
0x1b7: V138 = ISZERO V137
0x1b9: V139 = ISZERO V138
0x1ba: V140 = 0x1c7
0x1bd: JUMPI 0x1c7 V139
---
Entry stack: [V11, V68, S11, S10, V123, 0x70a08231, V126, 0x20, V117, V129, V117, 0x0, V123, V132]
Stack pops: 7
Stack additions: [V138]
Exit stack: [V11, V68, S11, S10, V123, 0x70a08231, V126, V138]

================================

Block 0x1be
[0x1be:0x1c6]
---
Predecessors: [0x1b3]
Successors: []
---
0x1be RETURNDATASIZE
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 RETURNDATACOPY
0x1c3 RETURNDATASIZE
0x1c4 PUSH1 0x0
0x1c6 REVERT
---
0x1be: V141 = RETURNDATASIZE
0x1bf: V142 = 0x0
0x1c2: RETURNDATACOPY 0x0 0x0 V141
0x1c3: V143 = RETURNDATASIZE
0x1c4: V144 = 0x0
0x1c6: REVERT 0x0 V143
---
Entry stack: [V11, V68, S5, S4, V123, 0x70a08231, V126, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68, S5, S4, V123, 0x70a08231, V126, V138]

================================

Block 0x1c7
[0x1c7:0x1d8]
---
Predecessors: [0x1b3]
Successors: [0x1d9, 0x1dd]
---
0x1c7 JUMPDEST
0x1c8 POP
0x1c9 POP
0x1ca POP
0x1cb POP
0x1cc PUSH1 0x40
0x1ce MLOAD
0x1cf RETURNDATASIZE
0x1d0 PUSH1 0x20
0x1d2 DUP2
0x1d3 LT
0x1d4 ISZERO
0x1d5 PUSH2 0x1dd
0x1d8 JUMPI
---
0x1c7: JUMPDEST 
0x1cc: V145 = 0x40
0x1ce: V146 = M[0x40]
0x1cf: V147 = RETURNDATASIZE
0x1d0: V148 = 0x20
0x1d3: V149 = LT V147 0x20
0x1d4: V150 = ISZERO V149
0x1d5: V151 = 0x1dd
0x1d8: JUMPI 0x1dd V150
---
Entry stack: [V11, V68, S5, S4, V123, 0x70a08231, V126, V138]
Stack pops: 4
Stack additions: [V146, V147]
Exit stack: [V11, V68, S5, S4, V146, V147]

================================

Block 0x1d9
[0x1d9:0x1dc]
---
Predecessors: [0x1c7]
Successors: []
---
0x1d9 PUSH1 0x0
0x1db DUP1
0x1dc REVERT
---
0x1d9: V152 = 0x0
0x1dc: REVERT 0x0 0x0
---
Entry stack: [V11, V68, S3, S2, V146, V147]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68, S3, S2, V146, V147]

================================

Block 0x1dd
[0x1dd:0x1e5]
---
Predecessors: [0x1c7]
Successors: [0x1e6, 0x1ea]
---
0x1dd JUMPDEST
0x1de POP
0x1df MLOAD
0x1e0 LT
0x1e1 ISZERO
0x1e2 PUSH2 0x1ea
0x1e5 JUMPI
---
0x1dd: JUMPDEST 
0x1df: V153 = M[V146]
0x1e0: V154 = LT V153 S2
0x1e1: V155 = ISZERO V154
0x1e2: V156 = 0x1ea
0x1e5: JUMPI 0x1ea V155
---
Entry stack: [V11, V68, S3, S2, V146, V147]
Stack pops: 3
Stack additions: []
Exit stack: [V11, V68, S3]

================================

Block 0x1e6
[0x1e6:0x1e9]
---
Predecessors: [0x1dd]
Successors: []
---
0x1e6 PUSH1 0x0
0x1e8 DUP1
0x1e9 REVERT
---
0x1e6: V157 = 0x0
0x1e9: REVERT 0x0 0x0
---
Entry stack: [V11, V68, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68, S0]

================================

Block 0x1ea
[0x1ea:0x209]
---
Predecessors: [0x1dd]
Successors: [0x52a]
---
0x1ea JUMPDEST
0x1eb CALLER
0x1ec PUSH1 0x0
0x1ee SWAP1
0x1ef DUP2
0x1f0 MSTORE
0x1f1 PUSH1 0x8
0x1f3 PUSH1 0x20
0x1f5 MSTORE
0x1f6 PUSH1 0x40
0x1f8 SWAP1
0x1f9 SHA3
0x1fa SLOAD
0x1fb PUSH2 0x20a
0x1fe SWAP1
0x1ff DUP4
0x200 PUSH4 0xffffffff
0x205 PUSH2 0x52a
0x208 AND
0x209 JUMP
---
0x1ea: JUMPDEST 
0x1eb: V158 = CALLER
0x1ec: V159 = 0x0
0x1f0: M[0x0] = V158
0x1f1: V160 = 0x8
0x1f3: V161 = 0x20
0x1f5: M[0x20] = 0x8
0x1f6: V162 = 0x40
0x1f9: V163 = SHA3 0x0 0x40
0x1fa: V164 = S[V163]
0x1fb: V165 = 0x20a
0x200: V166 = 0xffffffff
0x205: V167 = 0x52a
0x208: V168 = AND 0x52a 0xffffffff
0x209: JUMP 0x52a
---
Entry stack: [V11, V68, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x20a, V164, S1]
Exit stack: [V11, V68, S0, 0x20a, V164, V68]

================================

Block 0x20a
[0x20a:0x22c]
---
Predecessors: [0x524]
Successors: [0x52a]
---
0x20a JUMPDEST
0x20b CALLER
0x20c PUSH1 0x0
0x20e SWAP1
0x20f DUP2
0x210 MSTORE
0x211 PUSH1 0x8
0x213 PUSH1 0x20
0x215 MSTORE
0x216 PUSH1 0x40
0x218 SWAP1
0x219 SHA3
0x21a SSTORE
0x21b PUSH1 0x2
0x21d SLOAD
0x21e PUSH2 0x22d
0x221 SWAP1
0x222 DUP4
0x223 PUSH4 0xffffffff
0x228 PUSH2 0x52a
0x22b AND
0x22c JUMP
---
0x20a: JUMPDEST 
0x20b: V169 = CALLER
0x20c: V170 = 0x0
0x210: M[0x0] = V169
0x211: V171 = 0x8
0x213: V172 = 0x20
0x215: M[0x20] = 0x8
0x216: V173 = 0x40
0x219: V174 = SHA3 0x0 0x40
0x21a: S[V174] = S0
0x21b: V175 = 0x2
0x21d: V176 = S[0x2]
0x21e: V177 = 0x22d
0x223: V178 = 0xffffffff
0x228: V179 = 0x52a
0x22b: V180 = AND 0x52a 0xffffffff
0x22c: JUMP 0x52a
---
Entry stack: [V11, V68, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x22d, V176, S2]
Exit stack: [V11, V68, S1, 0x22d, V176, V68]

================================

Block 0x22d
[0x22d:0x297]
---
Predecessors: [0x524]
Successors: [0x298, 0x29c]
---
0x22d JUMPDEST
0x22e PUSH1 0x2
0x230 SSTORE
0x231 PUSH1 0x7
0x233 SLOAD
0x234 PUSH1 0x40
0x236 DUP1
0x237 MLOAD
0x238 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x259 DUP2
0x25a MSTORE
0x25b CALLER
0x25c PUSH1 0x4
0x25e DUP3
0x25f ADD
0x260 MSTORE
0x261 PUSH1 0x24
0x263 DUP2
0x264 ADD
0x265 DUP5
0x266 SWAP1
0x267 MSTORE
0x268 SWAP1
0x269 MLOAD
0x26a PUSH1 0x1
0x26c PUSH1 0xa0
0x26e PUSH1 0x2
0x270 EXP
0x271 SUB
0x272 SWAP1
0x273 SWAP3
0x274 AND
0x275 SWAP2
0x276 PUSH4 0xa9059cbb
0x27b SWAP2
0x27c PUSH1 0x44
0x27e DUP1
0x27f DUP3
0x280 ADD
0x281 SWAP3
0x282 PUSH1 0x0
0x284 SWAP3
0x285 SWAP1
0x286 SWAP2
0x287 SWAP1
0x288 DUP3
0x289 SWAP1
0x28a SUB
0x28b ADD
0x28c DUP2
0x28d DUP4
0x28e DUP8
0x28f DUP1
0x290 EXTCODESIZE
0x291 ISZERO
0x292 DUP1
0x293 ISZERO
0x294 PUSH2 0x29c
0x297 JUMPI
---
0x22d: JUMPDEST 
0x22e: V181 = 0x2
0x230: S[0x2] = S0
0x231: V182 = 0x7
0x233: V183 = S[0x7]
0x234: V184 = 0x40
0x237: V185 = M[0x40]
0x238: V186 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x25a: M[V185] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x25b: V187 = CALLER
0x25c: V188 = 0x4
0x25f: V189 = ADD V185 0x4
0x260: M[V189] = V187
0x261: V190 = 0x24
0x264: V191 = ADD V185 0x24
0x267: M[V191] = S1
0x269: V192 = M[0x40]
0x26a: V193 = 0x1
0x26c: V194 = 0xa0
0x26e: V195 = 0x2
0x270: V196 = EXP 0x2 0xa0
0x271: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x274: V198 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x276: V199 = 0xa9059cbb
0x27c: V200 = 0x44
0x280: V201 = ADD V185 0x44
0x282: V202 = 0x0
0x28a: V203 = SUB V185 V192
0x28b: V204 = ADD V203 0x44
0x290: V205 = EXTCODESIZE V198
0x291: V206 = ISZERO V205
0x293: V207 = ISZERO V206
0x294: V208 = 0x29c
0x297: JUMPI 0x29c V207
---
Entry stack: [V11, V68, S1, S0]
Stack pops: 2
Stack additions: [S1, V198, 0xa9059cbb, V201, 0x0, V192, V204, V192, 0x0, V198, V206]
Exit stack: [V11, V68, S1, V198, 0xa9059cbb, V201, 0x0, V192, V204, V192, 0x0, V198, V206]

================================

Block 0x298
[0x298:0x29b]
---
Predecessors: [0x22d]
Successors: []
---
0x298 PUSH1 0x0
0x29a DUP1
0x29b REVERT
---
0x298: V209 = 0x0
0x29b: REVERT 0x0 0x0
---
Entry stack: [V11, V68, S10, V198, 0xa9059cbb, V201, 0x0, V192, V204, V192, 0x0, V198, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68, S10, V198, 0xa9059cbb, V201, 0x0, V192, V204, V192, 0x0, V198, V206]

================================

Block 0x29c
[0x29c:0x2a6]
---
Predecessors: [0x22d]
Successors: [0x2a7, 0x2b0]
---
0x29c JUMPDEST
0x29d POP
0x29e GAS
0x29f CALL
0x2a0 ISZERO
0x2a1 DUP1
0x2a2 ISZERO
0x2a3 PUSH2 0x2b0
0x2a6 JUMPI
---
0x29c: JUMPDEST 
0x29e: V210 = GAS
0x29f: V211 = CALL V210 V198 0x0 V192 V204 V192 0x0
0x2a0: V212 = ISZERO V211
0x2a2: V213 = ISZERO V212
0x2a3: V214 = 0x2b0
0x2a6: JUMPI 0x2b0 V213
---
Entry stack: [V11, V68, S10, V198, 0xa9059cbb, V201, 0x0, V192, V204, V192, 0x0, V198, V206]
Stack pops: 7
Stack additions: [V212]
Exit stack: [V11, V68, S10, V198, 0xa9059cbb, V201, V212]

================================

Block 0x2a7
[0x2a7:0x2af]
---
Predecessors: [0x29c]
Successors: []
---
0x2a7 RETURNDATASIZE
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab RETURNDATACOPY
0x2ac RETURNDATASIZE
0x2ad PUSH1 0x0
0x2af REVERT
---
0x2a7: V215 = RETURNDATASIZE
0x2a8: V216 = 0x0
0x2ab: RETURNDATACOPY 0x0 0x0 V215
0x2ac: V217 = RETURNDATASIZE
0x2ad: V218 = 0x0
0x2af: REVERT 0x0 V217
---
Entry stack: [V11, V68, S4, V198, 0xa9059cbb, V201, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68, S4, V198, 0xa9059cbb, V201, V212]

================================

Block 0x2b0
[0x2b0:0x2f8]
---
Predecessors: [0x29c]
Successors: []
---
0x2b0 JUMPDEST
0x2b1 POP
0x2b2 POP
0x2b3 PUSH1 0x40
0x2b5 DUP1
0x2b6 MLOAD
0x2b7 CALLER
0x2b8 DUP2
0x2b9 MSTORE
0x2ba PUSH1 0x20
0x2bc DUP2
0x2bd ADD
0x2be DUP7
0x2bf SWAP1
0x2c0 MSTORE
0x2c1 PUSH1 0x1
0x2c3 DUP2
0x2c4 DUP4
0x2c5 ADD
0x2c6 MSTORE
0x2c7 SWAP1
0x2c8 MLOAD
0x2c9 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2ea SWAP4
0x2eb POP
0x2ec SWAP1
0x2ed DUP2
0x2ee SWAP1
0x2ef SUB
0x2f0 PUSH1 0x60
0x2f2 ADD
0x2f3 SWAP2
0x2f4 POP
0x2f5 LOG1
0x2f6 POP
0x2f7 POP
0x2f8 STOP
---
0x2b0: JUMPDEST 
0x2b3: V219 = 0x40
0x2b6: V220 = M[0x40]
0x2b7: V221 = CALLER
0x2b9: M[V220] = V221
0x2ba: V222 = 0x20
0x2bd: V223 = ADD V220 0x20
0x2c0: M[V223] = V68
0x2c1: V224 = 0x1
0x2c5: V225 = ADD 0x40 V220
0x2c6: M[V225] = 0x1
0x2c8: V226 = M[0x40]
0x2c9: V227 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2ef: V228 = SUB V220 V226
0x2f0: V229 = 0x60
0x2f2: V230 = ADD 0x60 V228
0x2f5: LOG V226 V230 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2f8: STOP 
---
Entry stack: [V11, V68, S4, V198, 0xa9059cbb, V201, V212]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f9
[0x2f9:0x300]
---
Predecessors: [0xd]
Successors: [0x301, 0x305]
---
0x2f9 JUMPDEST
0x2fa CALLVALUE
0x2fb DUP1
0x2fc ISZERO
0x2fd PUSH2 0x305
0x300 JUMPI
---
0x2f9: JUMPDEST 
0x2fa: V231 = CALLVALUE
0x2fc: V232 = ISZERO V231
0x2fd: V233 = 0x305
0x300: JUMPI 0x305 V232
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V231]
Exit stack: [V11, V231]

================================

Block 0x301
[0x301:0x304]
---
Predecessors: [0x2f9]
Successors: []
---
0x301 PUSH1 0x0
0x303 DUP1
0x304 REVERT
---
0x301: V234 = 0x0
0x304: REVERT 0x0 0x0
---
Entry stack: [V11, V231]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V231]

================================

Block 0x305
[0x305:0x30d]
---
Predecessors: [0x2f9]
Successors: [0x537]
---
0x305 JUMPDEST
0x306 POP
0x307 PUSH2 0x30e
0x30a PUSH2 0x537
0x30d JUMP
---
0x305: JUMPDEST 
0x307: V235 = 0x30e
0x30a: V236 = 0x537
0x30d: JUMP 0x537
---
Entry stack: [V11, V231]
Stack pops: 1
Stack additions: [0x30e]
Exit stack: [V11, 0x30e]

================================

Block 0x30e
[0x30e:0x31f]
---
Predecessors: [0x537, 0x53d, 0x857, 0x872, 0x8a6, 0x94b, 0xa58]
Successors: []
---
0x30e JUMPDEST
0x30f PUSH1 0x40
0x311 DUP1
0x312 MLOAD
0x313 SWAP2
0x314 DUP3
0x315 MSTORE
0x316 MLOAD
0x317 SWAP1
0x318 DUP2
0x319 SWAP1
0x31a SUB
0x31b PUSH1 0x20
0x31d ADD
0x31e SWAP1
0x31f RETURN
---
0x30e: JUMPDEST 
0x30f: V237 = 0x40
0x312: V238 = M[0x40]
0x315: M[V238] = S0
0x316: V239 = M[0x40]
0x31a: V240 = SUB V238 V239
0x31b: V241 = 0x20
0x31d: V242 = ADD 0x20 V240
0x31f: RETURN V239 V242
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x320
[0x320:0x327]
---
Predecessors: [0x40]
Successors: [0x328, 0x32c]
---
0x320 JUMPDEST
0x321 CALLVALUE
0x322 DUP1
0x323 ISZERO
0x324 PUSH2 0x32c
0x327 JUMPI
---
0x320: JUMPDEST 
0x321: V243 = CALLVALUE
0x323: V244 = ISZERO V243
0x324: V245 = 0x32c
0x327: JUMPI 0x32c V244
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V243]
Exit stack: [V11, V243]

================================

Block 0x328
[0x328:0x32b]
---
Predecessors: [0x320]
Successors: []
---
0x328 PUSH1 0x0
0x32a DUP1
0x32b REVERT
---
0x328: V246 = 0x0
0x32b: REVERT 0x0 0x0
---
Entry stack: [V11, V243]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V243]

================================

Block 0x32c
[0x32c:0x334]
---
Predecessors: [0x320]
Successors: [0x53d]
---
0x32c JUMPDEST
0x32d POP
0x32e PUSH2 0x30e
0x331 PUSH2 0x53d
0x334 JUMP
---
0x32c: JUMPDEST 
0x32e: V247 = 0x30e
0x331: V248 = 0x53d
0x334: JUMP 0x53d
---
Entry stack: [V11, V243]
Stack pops: 1
Stack additions: [0x30e]
Exit stack: [V11, 0x30e]

================================

Block 0x335
[0x335:0x33c]
---
Predecessors: [0x4b]
Successors: [0x33d, 0x341]
---
0x335 JUMPDEST
0x336 CALLVALUE
0x337 DUP1
0x338 ISZERO
0x339 PUSH2 0x341
0x33c JUMPI
---
0x335: JUMPDEST 
0x336: V249 = CALLVALUE
0x338: V250 = ISZERO V249
0x339: V251 = 0x341
0x33c: JUMPI 0x341 V250
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V249]
Exit stack: [V11, V249]

================================

Block 0x33d
[0x33d:0x340]
---
Predecessors: [0x335]
Successors: []
---
0x33d PUSH1 0x0
0x33f DUP1
0x340 REVERT
---
0x33d: V252 = 0x0
0x340: REVERT 0x0 0x0
---
Entry stack: [V11, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V249]

================================

Block 0x341
[0x341:0x34e]
---
Predecessors: [0x335]
Successors: [0x543]
---
0x341 JUMPDEST
0x342 POP
0x343 PUSH2 0x34f
0x346 PUSH1 0x4
0x348 CALLDATALOAD
0x349 ISZERO
0x34a ISZERO
0x34b PUSH2 0x543
0x34e JUMP
---
0x341: JUMPDEST 
0x343: V253 = 0x34f
0x346: V254 = 0x4
0x348: V255 = CALLDATALOAD 0x4
0x349: V256 = ISZERO V255
0x34a: V257 = ISZERO V256
0x34b: V258 = 0x543
0x34e: JUMP 0x543
---
Entry stack: [V11, V249]
Stack pops: 1
Stack additions: [0x34f, V257]
Exit stack: [V11, 0x34f, V257]

================================

Block 0x34f
[0x34f:0x350]
---
Predecessors: [0x55a, 0x701, 0x844, 0x8ff, 0xa1a, 0xa74]
Successors: []
---
0x34f JUMPDEST
0x350 STOP
---
0x34f: JUMPDEST 
0x350: STOP 
---
Entry stack: [V11, 0x34f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, S0]

================================

Block 0x351
[0x351:0x358]
---
Predecessors: [0x56]
Successors: [0x359, 0x35d]
---
0x351 JUMPDEST
0x352 CALLVALUE
0x353 DUP1
0x354 ISZERO
0x355 PUSH2 0x35d
0x358 JUMPI
---
0x351: JUMPDEST 
0x352: V259 = CALLVALUE
0x354: V260 = ISZERO V259
0x355: V261 = 0x35d
0x358: JUMPI 0x35d V260
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V259]
Exit stack: [V11, V259]

================================

Block 0x359
[0x359:0x35c]
---
Predecessors: [0x351]
Successors: []
---
0x359 PUSH1 0x0
0x35b DUP1
0x35c REVERT
---
0x359: V262 = 0x0
0x35c: REVERT 0x0 0x0
---
Entry stack: [V11, V259]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V259]

================================

Block 0x35d
[0x35d:0x368]
---
Predecessors: [0x351]
Successors: [0x56d]
---
0x35d JUMPDEST
0x35e POP
0x35f PUSH2 0x34f
0x362 PUSH1 0x4
0x364 CALLDATALOAD
0x365 PUSH2 0x56d
0x368 JUMP
---
0x35d: JUMPDEST 
0x35f: V263 = 0x34f
0x362: V264 = 0x4
0x364: V265 = CALLDATALOAD 0x4
0x365: V266 = 0x56d
0x368: JUMP 0x56d
---
Entry stack: [V11, V259]
Stack pops: 1
Stack additions: [0x34f, V265]
Exit stack: [V11, 0x34f, V265]

================================

Block 0x369
[0x369:0x370]
---
Predecessors: [0x61]
Successors: [0x371, 0x375]
---
0x369 JUMPDEST
0x36a CALLVALUE
0x36b DUP1
0x36c ISZERO
0x36d PUSH2 0x375
0x370 JUMPI
---
0x369: JUMPDEST 
0x36a: V267 = CALLVALUE
0x36c: V268 = ISZERO V267
0x36d: V269 = 0x375
0x370: JUMPI 0x375 V268
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V267]
Exit stack: [V11, V267]

================================

Block 0x371
[0x371:0x374]
---
Predecessors: [0x369]
Successors: []
---
0x371 PUSH1 0x0
0x373 DUP1
0x374 REVERT
---
0x371: V270 = 0x0
0x374: REVERT 0x0 0x0
---
Entry stack: [V11, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V267]

================================

Block 0x375
[0x375:0x37d]
---
Predecessors: [0x369]
Successors: [0x70f]
---
0x375 JUMPDEST
0x376 POP
0x377 PUSH2 0x37e
0x37a PUSH2 0x70f
0x37d JUMP
---
0x375: JUMPDEST 
0x377: V271 = 0x37e
0x37a: V272 = 0x70f
0x37d: JUMP 0x70f
---
Entry stack: [V11, V267]
Stack pops: 1
Stack additions: [0x37e]
Exit stack: [V11, 0x37e]

================================

Block 0x37e
[0x37e:0x399]
---
Predecessors: [0x70f, 0x848]
Successors: []
---
0x37e JUMPDEST
0x37f PUSH1 0x40
0x381 DUP1
0x382 MLOAD
0x383 PUSH1 0x1
0x385 PUSH1 0xa0
0x387 PUSH1 0x2
0x389 EXP
0x38a SUB
0x38b SWAP1
0x38c SWAP3
0x38d AND
0x38e DUP3
0x38f MSTORE
0x390 MLOAD
0x391 SWAP1
0x392 DUP2
0x393 SWAP1
0x394 SUB
0x395 PUSH1 0x20
0x397 ADD
0x398 SWAP1
0x399 RETURN
---
0x37e: JUMPDEST 
0x37f: V273 = 0x40
0x382: V274 = M[0x40]
0x383: V275 = 0x1
0x385: V276 = 0xa0
0x387: V277 = 0x2
0x389: V278 = EXP 0x2 0xa0
0x38a: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38d: V280 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x38f: M[V274] = V280
0x390: V281 = M[0x40]
0x394: V282 = SUB V274 V281
0x395: V283 = 0x20
0x397: V284 = ADD 0x20 V282
0x399: RETURN V281 V284
---
Entry stack: [V11, 0x37e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x37e]

================================

Block 0x39a
[0x39a:0x3a1]
---
Predecessors: [0x6c]
Successors: [0x3a2, 0x3a6]
---
0x39a JUMPDEST
0x39b CALLVALUE
0x39c DUP1
0x39d ISZERO
0x39e PUSH2 0x3a6
0x3a1 JUMPI
---
0x39a: JUMPDEST 
0x39b: V285 = CALLVALUE
0x39d: V286 = ISZERO V285
0x39e: V287 = 0x3a6
0x3a1: JUMPI 0x3a6 V286
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V285]
Exit stack: [V11, V285]

================================

Block 0x3a2
[0x3a2:0x3a5]
---
Predecessors: [0x39a]
Successors: []
---
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 REVERT
---
0x3a2: V288 = 0x0
0x3a5: REVERT 0x0 0x0
---
Entry stack: [V11, V285]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V285]

================================

Block 0x3a6
[0x3a6:0x3ba]
---
Predecessors: [0x39a]
Successors: [0x71e]
---
0x3a6 JUMPDEST
0x3a7 POP
0x3a8 PUSH2 0x34f
0x3ab PUSH1 0x1
0x3ad PUSH1 0xa0
0x3af PUSH1 0x2
0x3b1 EXP
0x3b2 SUB
0x3b3 PUSH1 0x4
0x3b5 CALLDATALOAD
0x3b6 AND
0x3b7 PUSH2 0x71e
0x3ba JUMP
---
0x3a6: JUMPDEST 
0x3a8: V289 = 0x34f
0x3ab: V290 = 0x1
0x3ad: V291 = 0xa0
0x3af: V292 = 0x2
0x3b1: V293 = EXP 0x2 0xa0
0x3b2: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b3: V295 = 0x4
0x3b5: V296 = CALLDATALOAD 0x4
0x3b6: V297 = AND V296 0xffffffffffffffffffffffffffffffffffffffff
0x3b7: V298 = 0x71e
0x3ba: JUMP 0x71e
---
Entry stack: [V11, V285]
Stack pops: 1
Stack additions: [0x34f, V297]
Exit stack: [V11, 0x34f, V297]

================================

Block 0x3bb
[0x3bb:0x3c2]
---
Predecessors: [0x77]
Successors: [0x3c3, 0x3c7]
---
0x3bb JUMPDEST
0x3bc CALLVALUE
0x3bd DUP1
0x3be ISZERO
0x3bf PUSH2 0x3c7
0x3c2 JUMPI
---
0x3bb: JUMPDEST 
0x3bc: V299 = CALLVALUE
0x3be: V300 = ISZERO V299
0x3bf: V301 = 0x3c7
0x3c2: JUMPI 0x3c7 V300
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V299]
Exit stack: [V11, V299]

================================

Block 0x3c3
[0x3c3:0x3c6]
---
Predecessors: [0x3bb]
Successors: []
---
0x3c3 PUSH1 0x0
0x3c5 DUP1
0x3c6 REVERT
---
0x3c3: V302 = 0x0
0x3c6: REVERT 0x0 0x0
---
Entry stack: [V11, V299]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V299]

================================

Block 0x3c7
[0x3c7:0x3cf]
---
Predecessors: [0x3bb]
Successors: [0x848]
---
0x3c7 JUMPDEST
0x3c8 POP
0x3c9 PUSH2 0x37e
0x3cc PUSH2 0x848
0x3cf JUMP
---
0x3c7: JUMPDEST 
0x3c9: V303 = 0x37e
0x3cc: V304 = 0x848
0x3cf: JUMP 0x848
---
Entry stack: [V11, V299]
Stack pops: 1
Stack additions: [0x37e]
Exit stack: [V11, 0x37e]

================================

Block 0x3d0
[0x3d0:0x3d7]
---
Predecessors: [0x82]
Successors: [0x3d8, 0x3dc]
---
0x3d0 JUMPDEST
0x3d1 CALLVALUE
0x3d2 DUP1
0x3d3 ISZERO
0x3d4 PUSH2 0x3dc
0x3d7 JUMPI
---
0x3d0: JUMPDEST 
0x3d1: V305 = CALLVALUE
0x3d3: V306 = ISZERO V305
0x3d4: V307 = 0x3dc
0x3d7: JUMPI 0x3dc V306
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V305]
Exit stack: [V11, V305]

================================

Block 0x3d8
[0x3d8:0x3db]
---
Predecessors: [0x3d0]
Successors: []
---
0x3d8 PUSH1 0x0
0x3da DUP1
0x3db REVERT
---
0x3d8: V308 = 0x0
0x3db: REVERT 0x0 0x0
---
Entry stack: [V11, V305]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V305]

================================

Block 0x3dc
[0x3dc:0x3f0]
---
Predecessors: [0x3d0]
Successors: [0x857]
---
0x3dc JUMPDEST
0x3dd POP
0x3de PUSH2 0x30e
0x3e1 PUSH1 0x1
0x3e3 PUSH1 0xa0
0x3e5 PUSH1 0x2
0x3e7 EXP
0x3e8 SUB
0x3e9 PUSH1 0x4
0x3eb CALLDATALOAD
0x3ec AND
0x3ed PUSH2 0x857
0x3f0 JUMP
---
0x3dc: JUMPDEST 
0x3de: V309 = 0x30e
0x3e1: V310 = 0x1
0x3e3: V311 = 0xa0
0x3e5: V312 = 0x2
0x3e7: V313 = EXP 0x2 0xa0
0x3e8: V314 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e9: V315 = 0x4
0x3eb: V316 = CALLDATALOAD 0x4
0x3ec: V317 = AND V316 0xffffffffffffffffffffffffffffffffffffffff
0x3ed: V318 = 0x857
0x3f0: JUMP 0x857
---
Entry stack: [V11, V305]
Stack pops: 1
Stack additions: [0x30e, V317]
Exit stack: [V11, 0x30e, V317]

================================

Block 0x3f1
[0x3f1:0x3f8]
---
Predecessors: [0x8d]
Successors: [0x3f9, 0x3fd]
---
0x3f1 JUMPDEST
0x3f2 CALLVALUE
0x3f3 DUP1
0x3f4 ISZERO
0x3f5 PUSH2 0x3fd
0x3f8 JUMPI
---
0x3f1: JUMPDEST 
0x3f2: V319 = CALLVALUE
0x3f4: V320 = ISZERO V319
0x3f5: V321 = 0x3fd
0x3f8: JUMPI 0x3fd V320
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V319]
Exit stack: [V11, V319]

================================

Block 0x3f9
[0x3f9:0x3fc]
---
Predecessors: [0x3f1]
Successors: []
---
0x3f9 PUSH1 0x0
0x3fb DUP1
0x3fc REVERT
---
0x3f9: V322 = 0x0
0x3fc: REVERT 0x0 0x0
---
Entry stack: [V11, V319]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V319]

================================

Block 0x3fd
[0x3fd:0x405]
---
Predecessors: [0x3f1]
Successors: [0x869]
---
0x3fd JUMPDEST
0x3fe POP
0x3ff PUSH2 0x406
0x402 PUSH2 0x869
0x405 JUMP
---
0x3fd: JUMPDEST 
0x3ff: V323 = 0x406
0x402: V324 = 0x869
0x405: JUMP 0x869
---
Entry stack: [V11, V319]
Stack pops: 1
Stack additions: [0x406]
Exit stack: [V11, 0x406]

================================

Block 0x406
[0x406:0x419]
---
Predecessors: [0x869]
Successors: []
---
0x406 JUMPDEST
0x407 PUSH1 0x40
0x409 DUP1
0x40a MLOAD
0x40b SWAP2
0x40c ISZERO
0x40d ISZERO
0x40e DUP3
0x40f MSTORE
0x410 MLOAD
0x411 SWAP1
0x412 DUP2
0x413 SWAP1
0x414 SUB
0x415 PUSH1 0x20
0x417 ADD
0x418 SWAP1
0x419 RETURN
---
0x406: JUMPDEST 
0x407: V325 = 0x40
0x40a: V326 = M[0x40]
0x40c: V327 = ISZERO V734
0x40d: V328 = ISZERO V327
0x40f: M[V326] = V328
0x410: V329 = M[0x40]
0x414: V330 = SUB V326 V329
0x415: V331 = 0x20
0x417: V332 = ADD 0x20 V330
0x419: RETURN V329 V332
---
Entry stack: [V11, V734]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x41a
[0x41a:0x421]
---
Predecessors: [0x98]
Successors: [0x422, 0x426]
---
0x41a JUMPDEST
0x41b CALLVALUE
0x41c DUP1
0x41d ISZERO
0x41e PUSH2 0x426
0x421 JUMPI
---
0x41a: JUMPDEST 
0x41b: V333 = CALLVALUE
0x41d: V334 = ISZERO V333
0x41e: V335 = 0x426
0x421: JUMPI 0x426 V334
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V333]
Exit stack: [V11, V333]

================================

Block 0x422
[0x422:0x425]
---
Predecessors: [0x41a]
Successors: []
---
0x422 PUSH1 0x0
0x424 DUP1
0x425 REVERT
---
0x422: V336 = 0x0
0x425: REVERT 0x0 0x0
---
Entry stack: [V11, V333]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V333]

================================

Block 0x426
[0x426:0x42e]
---
Predecessors: [0x41a]
Successors: [0x872]
---
0x426 JUMPDEST
0x427 POP
0x428 PUSH2 0x30e
0x42b PUSH2 0x872
0x42e JUMP
---
0x426: JUMPDEST 
0x428: V337 = 0x30e
0x42b: V338 = 0x872
0x42e: JUMP 0x872
---
Entry stack: [V11, V333]
Stack pops: 1
Stack additions: [0x30e]
Exit stack: [V11, 0x30e]

================================

Block 0x42f
[0x42f:0x436]
---
Predecessors: [0xa3]
Successors: [0x437, 0x43b]
---
0x42f JUMPDEST
0x430 CALLVALUE
0x431 DUP1
0x432 ISZERO
0x433 PUSH2 0x43b
0x436 JUMPI
---
0x42f: JUMPDEST 
0x430: V339 = CALLVALUE
0x432: V340 = ISZERO V339
0x433: V341 = 0x43b
0x436: JUMPI 0x43b V340
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V339]
Exit stack: [V11, V339]

================================

Block 0x437
[0x437:0x43a]
---
Predecessors: [0x42f]
Successors: []
---
0x437 PUSH1 0x0
0x439 DUP1
0x43a REVERT
---
0x437: V342 = 0x0
0x43a: REVERT 0x0 0x0
---
Entry stack: [V11, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V339]

================================

Block 0x43b
[0x43b:0x443]
---
Predecessors: [0x42f]
Successors: [0x878]
---
0x43b JUMPDEST
0x43c POP
0x43d PUSH2 0x34f
0x440 PUSH2 0x878
0x443 JUMP
---
0x43b: JUMPDEST 
0x43d: V343 = 0x34f
0x440: V344 = 0x878
0x443: JUMP 0x878
---
Entry stack: [V11, V339]
Stack pops: 1
Stack additions: [0x34f]
Exit stack: [V11, 0x34f]

================================

Block 0x444
[0x444:0x44b]
---
Predecessors: [0xae]
Successors: [0x44c, 0x450]
---
0x444 JUMPDEST
0x445 CALLVALUE
0x446 DUP1
0x447 ISZERO
0x448 PUSH2 0x450
0x44b JUMPI
---
0x444: JUMPDEST 
0x445: V345 = CALLVALUE
0x447: V346 = ISZERO V345
0x448: V347 = 0x450
0x44b: JUMPI 0x450 V346
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V345]
Exit stack: [V11, V345]

================================

Block 0x44c
[0x44c:0x44f]
---
Predecessors: [0x444]
Successors: []
---
0x44c PUSH1 0x0
0x44e DUP1
0x44f REVERT
---
0x44c: V348 = 0x0
0x44f: REVERT 0x0 0x0
---
Entry stack: [V11, V345]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V345]

================================

Block 0x450
[0x450:0x458]
---
Predecessors: [0x444]
Successors: [0x8a6]
---
0x450 JUMPDEST
0x451 POP
0x452 PUSH2 0x30e
0x455 PUSH2 0x8a6
0x458 JUMP
---
0x450: JUMPDEST 
0x452: V349 = 0x30e
0x455: V350 = 0x8a6
0x458: JUMP 0x8a6
---
Entry stack: [V11, V345]
Stack pops: 1
Stack additions: [0x30e]
Exit stack: [V11, 0x30e]

================================

Block 0x459
[0x459:0x460]
---
Predecessors: [0xb9]
Successors: [0x461, 0x465]
---
0x459 JUMPDEST
0x45a CALLVALUE
0x45b DUP1
0x45c ISZERO
0x45d PUSH2 0x465
0x460 JUMPI
---
0x459: JUMPDEST 
0x45a: V351 = CALLVALUE
0x45c: V352 = ISZERO V351
0x45d: V353 = 0x465
0x460: JUMPI 0x465 V352
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V351]
Exit stack: [V11, V351]

================================

Block 0x461
[0x461:0x464]
---
Predecessors: [0x459]
Successors: []
---
0x461 PUSH1 0x0
0x463 DUP1
0x464 REVERT
---
0x461: V354 = 0x0
0x464: REVERT 0x0 0x0
---
Entry stack: [V11, V351]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V351]

================================

Block 0x465
[0x465:0x479]
---
Predecessors: [0x459]
Successors: [0x8ac]
---
0x465 JUMPDEST
0x466 POP
0x467 PUSH2 0x34f
0x46a PUSH1 0x1
0x46c PUSH1 0xa0
0x46e PUSH1 0x2
0x470 EXP
0x471 SUB
0x472 PUSH1 0x4
0x474 CALLDATALOAD
0x475 AND
0x476 PUSH2 0x8ac
0x479 JUMP
---
0x465: JUMPDEST 
0x467: V355 = 0x34f
0x46a: V356 = 0x1
0x46c: V357 = 0xa0
0x46e: V358 = 0x2
0x470: V359 = EXP 0x2 0xa0
0x471: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x472: V361 = 0x4
0x474: V362 = CALLDATALOAD 0x4
0x475: V363 = AND V362 0xffffffffffffffffffffffffffffffffffffffff
0x476: V364 = 0x8ac
0x479: JUMP 0x8ac
---
Entry stack: [V11, V351]
Stack pops: 1
Stack additions: [0x34f, V363]
Exit stack: [V11, 0x34f, V363]

================================

Block 0x47a
[0x47a:0x481]
---
Predecessors: [0xc4]
Successors: [0x482, 0x486]
---
0x47a JUMPDEST
0x47b CALLVALUE
0x47c DUP1
0x47d ISZERO
0x47e PUSH2 0x486
0x481 JUMPI
---
0x47a: JUMPDEST 
0x47b: V365 = CALLVALUE
0x47d: V366 = ISZERO V365
0x47e: V367 = 0x486
0x481: JUMPI 0x486 V366
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V365]
Exit stack: [V11, V365]

================================

Block 0x482
[0x482:0x485]
---
Predecessors: [0x47a]
Successors: []
---
0x482 PUSH1 0x0
0x484 DUP1
0x485 REVERT
---
0x482: V368 = 0x0
0x485: REVERT 0x0 0x0
---
Entry stack: [V11, V365]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V365]

================================

Block 0x486
[0x486:0x48e]
---
Predecessors: [0x47a]
Successors: [0x94b]
---
0x486 JUMPDEST
0x487 POP
0x488 PUSH2 0x30e
0x48b PUSH2 0x94b
0x48e JUMP
---
0x486: JUMPDEST 
0x488: V369 = 0x30e
0x48b: V370 = 0x94b
0x48e: JUMP 0x94b
---
Entry stack: [V11, V365]
Stack pops: 1
Stack additions: [0x30e]
Exit stack: [V11, 0x30e]

================================

Block 0x48f
[0x48f:0x496]
---
Predecessors: [0xcf]
Successors: [0x497, 0x49b]
---
0x48f JUMPDEST
0x490 CALLVALUE
0x491 DUP1
0x492 ISZERO
0x493 PUSH2 0x49b
0x496 JUMPI
---
0x48f: JUMPDEST 
0x490: V371 = CALLVALUE
0x492: V372 = ISZERO V371
0x493: V373 = 0x49b
0x496: JUMPI 0x49b V372
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V371]
Exit stack: [V11, V371]

================================

Block 0x497
[0x497:0x49a]
---
Predecessors: [0x48f]
Successors: []
---
0x497 PUSH1 0x0
0x499 DUP1
0x49a REVERT
---
0x497: V374 = 0x0
0x49a: REVERT 0x0 0x0
---
Entry stack: [V11, V371]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V371]

================================

Block 0x49b
[0x49b:0x4a3]
---
Predecessors: [0x48f]
Successors: [0x951]
---
0x49b JUMPDEST
0x49c POP
0x49d PUSH2 0x34f
0x4a0 PUSH2 0x951
0x4a3 JUMP
---
0x49b: JUMPDEST 
0x49d: V375 = 0x34f
0x4a0: V376 = 0x951
0x4a3: JUMP 0x951
---
Entry stack: [V11, V371]
Stack pops: 1
Stack additions: [0x34f]
Exit stack: [V11, 0x34f]

================================

Block 0x4a4
[0x4a4:0x4ab]
---
Predecessors: [0xda]
Successors: [0x4ac, 0x4b0]
---
0x4a4 JUMPDEST
0x4a5 CALLVALUE
0x4a6 DUP1
0x4a7 ISZERO
0x4a8 PUSH2 0x4b0
0x4ab JUMPI
---
0x4a4: JUMPDEST 
0x4a5: V377 = CALLVALUE
0x4a7: V378 = ISZERO V377
0x4a8: V379 = 0x4b0
0x4ab: JUMPI 0x4b0 V378
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V377]
Exit stack: [V11, V377]

================================

Block 0x4ac
[0x4ac:0x4af]
---
Predecessors: [0x4a4]
Successors: []
---
0x4ac PUSH1 0x0
0x4ae DUP1
0x4af REVERT
---
0x4ac: V380 = 0x0
0x4af: REVERT 0x0 0x0
---
Entry stack: [V11, V377]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V377]

================================

Block 0x4b0
[0x4b0:0x4b8]
---
Predecessors: [0x4a4]
Successors: [0xa2a]
---
0x4b0 JUMPDEST
0x4b1 POP
0x4b2 PUSH2 0x30e
0x4b5 PUSH2 0xa2a
0x4b8 JUMP
---
0x4b0: JUMPDEST 
0x4b2: V381 = 0x30e
0x4b5: V382 = 0xa2a
0x4b8: JUMP 0xa2a
---
Entry stack: [V11, V377]
Stack pops: 1
Stack additions: [0x30e]
Exit stack: [V11, 0x30e]

================================

Block 0x4b9
[0x4b9:0x4c0]
---
Predecessors: [0xe5]
Successors: [0x4c1, 0x4c5]
---
0x4b9 JUMPDEST
0x4ba CALLVALUE
0x4bb DUP1
0x4bc ISZERO
0x4bd PUSH2 0x4c5
0x4c0 JUMPI
---
0x4b9: JUMPDEST 
0x4ba: V383 = CALLVALUE
0x4bc: V384 = ISZERO V383
0x4bd: V385 = 0x4c5
0x4c0: JUMPI 0x4c5 V384
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V383]
Exit stack: [V11, V383]

================================

Block 0x4c1
[0x4c1:0x4c4]
---
Predecessors: [0x4b9]
Successors: []
---
0x4c1 PUSH1 0x0
0x4c3 DUP1
0x4c4 REVERT
---
0x4c1: V386 = 0x0
0x4c4: REVERT 0x0 0x0
---
Entry stack: [V11, V383]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V383]

================================

Block 0x4c5
[0x4c5:0x4d9]
---
Predecessors: [0x4b9]
Successors: [0xa5d]
---
0x4c5 JUMPDEST
0x4c6 POP
0x4c7 PUSH2 0x34f
0x4ca PUSH1 0x1
0x4cc PUSH1 0xa0
0x4ce PUSH1 0x2
0x4d0 EXP
0x4d1 SUB
0x4d2 PUSH1 0x4
0x4d4 CALLDATALOAD
0x4d5 AND
0x4d6 PUSH2 0xa5d
0x4d9 JUMP
---
0x4c5: JUMPDEST 
0x4c7: V387 = 0x34f
0x4ca: V388 = 0x1
0x4cc: V389 = 0xa0
0x4ce: V390 = 0x2
0x4d0: V391 = EXP 0x2 0xa0
0x4d1: V392 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d2: V393 = 0x4
0x4d4: V394 = CALLDATALOAD 0x4
0x4d5: V395 = AND V394 0xffffffffffffffffffffffffffffffffffffffff
0x4d6: V396 = 0xa5d
0x4d9: JUMP 0xa5d
---
Entry stack: [V11, V383]
Stack pops: 1
Stack additions: [0x34f, V395]
Exit stack: [V11, 0x34f, V395]

================================

Block 0x4da
[0x4da:0x4e1]
---
Predecessors: [0xf0]
Successors: [0x4e2, 0x4e6]
---
0x4da JUMPDEST
0x4db CALLVALUE
0x4dc DUP1
0x4dd ISZERO
0x4de PUSH2 0x4e6
0x4e1 JUMPI
---
0x4da: JUMPDEST 
0x4db: V397 = CALLVALUE
0x4dd: V398 = ISZERO V397
0x4de: V399 = 0x4e6
0x4e1: JUMPI 0x4e6 V398
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V397]
Exit stack: [V11, V397]

================================

Block 0x4e2
[0x4e2:0x4e5]
---
Predecessors: [0x4da]
Successors: []
---
0x4e2 PUSH1 0x0
0x4e4 DUP1
0x4e5 REVERT
---
0x4e2: V400 = 0x0
0x4e5: REVERT 0x0 0x0
---
Entry stack: [V11, V397]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V397]

================================

Block 0x4e6
[0x4e6:0x4fa]
---
Predecessors: [0x4da]
Successors: [0xaa3]
---
0x4e6 JUMPDEST
0x4e7 POP
0x4e8 PUSH2 0x34f
0x4eb PUSH1 0x1
0x4ed PUSH1 0xa0
0x4ef PUSH1 0x2
0x4f1 EXP
0x4f2 SUB
0x4f3 PUSH1 0x4
0x4f5 CALLDATALOAD
0x4f6 AND
0x4f7 PUSH2 0xaa3
0x4fa JUMP
---
0x4e6: JUMPDEST 
0x4e8: V401 = 0x34f
0x4eb: V402 = 0x1
0x4ed: V403 = 0xa0
0x4ef: V404 = 0x2
0x4f1: V405 = EXP 0x2 0xa0
0x4f2: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f3: V407 = 0x4
0x4f5: V408 = CALLDATALOAD 0x4
0x4f6: V409 = AND V408 0xffffffffffffffffffffffffffffffffffffffff
0x4f7: V410 = 0xaa3
0x4fa: JUMP 0xaa3
---
Entry stack: [V11, V397]
Stack pops: 1
Stack additions: [0x34f, V409]
Exit stack: [V11, 0x34f, V409]

================================

Block 0x4fb
[0x4fb:0x504]
---
Predecessors: [0xfb]
Successors: [0x505, 0x50c]
---
0x4fb JUMPDEST
0x4fc PUSH1 0x0
0x4fe DUP3
0x4ff ISZERO
0x500 ISZERO
0x501 PUSH2 0x50c
0x504 JUMPI
---
0x4fb: JUMPDEST 
0x4fc: V411 = 0x0
0x4ff: V412 = ISZERO V68
0x500: V413 = ISZERO V412
0x501: V414 = 0x50c
0x504: JUMPI 0x50c V413
---
Entry stack: [V11, V68, 0x0, 0x114, V68, V67]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, V68, 0x0, 0x114, V68, V67, 0x0]

================================

Block 0x505
[0x505:0x50b]
---
Predecessors: [0x4fb]
Successors: [0x524]
---
0x505 POP
0x506 PUSH1 0x0
0x508 PUSH2 0x524
0x50b JUMP
---
0x506: V415 = 0x0
0x508: V416 = 0x524
0x50b: JUMP 0x524
---
Entry stack: [V11, V68, 0x0, 0x114, V68, V67, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, V68, 0x0, 0x114, V68, V67, 0x0]

================================

Block 0x50c
[0x50c:0x51a]
---
Predecessors: [0x4fb]
Successors: [0x51b, 0x51c]
---
0x50c JUMPDEST
0x50d POP
0x50e DUP2
0x50f DUP2
0x510 MUL
0x511 DUP2
0x512 DUP4
0x513 DUP3
0x514 DUP2
0x515 ISZERO
0x516 ISZERO
0x517 PUSH2 0x51c
0x51a JUMPI
---
0x50c: JUMPDEST 
0x510: V417 = MUL V67 V68
0x515: V418 = ISZERO V68
0x516: V419 = ISZERO V418
0x517: V420 = 0x51c
0x51a: JUMPI 0x51c V419
---
Entry stack: [V11, V68, 0x0, 0x114, V68, V67, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V417, S1, S2, V417]
Exit stack: [V11, V68, 0x0, 0x114, V68, V67, V417, V67, V68, V417]

================================

Block 0x51b
[0x51b:0x51b]
---
Predecessors: [0x50c]
Successors: []
---
0x51b INVALID
---
0x51b: INVALID 
---
Entry stack: [V11, V68, 0x0, 0x114, V68, V67, V417, V67, V68, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68, 0x0, 0x114, V68, V67, V417, V67, V68, V417]

================================

Block 0x51c
[0x51c:0x522]
---
Predecessors: [0x50c]
Successors: [0x523, 0x524]
---
0x51c JUMPDEST
0x51d DIV
0x51e EQ
0x51f PUSH2 0x524
0x522 JUMPI
---
0x51c: JUMPDEST 
0x51d: V421 = DIV V417 V68
0x51e: V422 = EQ V421 V67
0x51f: V423 = 0x524
0x522: JUMPI 0x524 V422
---
Entry stack: [V11, V68, 0x0, 0x114, V68, V67, V417, V67, V68, V417]
Stack pops: 3
Stack additions: []
Exit stack: [V11, V68, 0x0, 0x114, V68, V67, V417]

================================

Block 0x523
[0x523:0x523]
---
Predecessors: [0x51c]
Successors: []
---
0x523 INVALID
---
0x523: INVALID 
---
Entry stack: [V11, V68, 0x0, 0x114, V68, V67, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68, 0x0, 0x114, V68, V67, V417]

================================

Block 0x524
[0x524:0x529]
---
Predecessors: [0x505, 0x51c, 0x52a]
Successors: [0x114, 0x156, 0x20a, 0x22d]
---
0x524 JUMPDEST
0x525 SWAP3
0x526 SWAP2
0x527 POP
0x528 POP
0x529 JUMP
---
0x524: JUMPDEST 
0x529: JUMP {0x114, 0x156, 0x20a, 0x22d}
---
Entry stack: [V11, V68, S4, {0x114, 0x156, 0x20a, 0x22d}, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, V68, S4, S0]

================================

Block 0x52a
[0x52a:0x535]
---
Predecessors: [0x136, 0x1ea, 0x20a]
Successors: [0x524, 0x536]
---
0x52a JUMPDEST
0x52b DUP2
0x52c DUP2
0x52d ADD
0x52e DUP3
0x52f DUP2
0x530 LT
0x531 ISZERO
0x532 PUSH2 0x524
0x535 JUMPI
---
0x52a: JUMPDEST 
0x52d: V424 = ADD V68 S1
0x530: V425 = LT V424 S1
0x531: V426 = ISZERO V425
0x532: V427 = 0x524
0x535: JUMPI 0x524 V426
---
Entry stack: [V11, V68, S3, {0x156, 0x20a, 0x22d}, S1, V68]
Stack pops: 2
Stack additions: [S1, S0, V424]
Exit stack: [V11, V68, S3, {0x156, 0x20a, 0x22d}, S1, V68, V424]

================================

Block 0x536
[0x536:0x536]
---
Predecessors: [0x52a]
Successors: []
---
0x536 INVALID
---
0x536: INVALID 
---
Entry stack: [V11, V68, S4, {0x156, 0x20a, 0x22d}, S2, V68, V424]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68, S4, {0x156, 0x20a, 0x22d}, S2, V68, V424]

================================

Block 0x537
[0x537:0x53c]
---
Predecessors: [0x305]
Successors: [0x30e]
---
0x537 JUMPDEST
0x538 PUSH1 0x6
0x53a SLOAD
0x53b DUP2
0x53c JUMP
---
0x537: JUMPDEST 
0x538: V428 = 0x6
0x53a: V429 = S[0x6]
0x53c: JUMP 0x30e
---
Entry stack: [V11, 0x30e]
Stack pops: 1
Stack additions: [S0, V429]
Exit stack: [V11, 0x30e, V429]

================================

Block 0x53d
[0x53d:0x542]
---
Predecessors: [0x32c]
Successors: [0x30e]
---
0x53d JUMPDEST
0x53e PUSH1 0x3
0x540 SLOAD
0x541 DUP2
0x542 JUMP
---
0x53d: JUMPDEST 
0x53e: V430 = 0x3
0x540: V431 = S[0x3]
0x542: JUMP 0x30e
---
Entry stack: [V11, 0x30e]
Stack pops: 1
Stack additions: [S0, V431]
Exit stack: [V11, 0x30e, V431]

================================

Block 0x543
[0x543:0x555]
---
Predecessors: [0x341]
Successors: [0x556, 0x55a]
---
0x543 JUMPDEST
0x544 PUSH1 0x0
0x546 SLOAD
0x547 PUSH1 0x1
0x549 PUSH1 0xa0
0x54b PUSH1 0x2
0x54d EXP
0x54e SUB
0x54f AND
0x550 CALLER
0x551 EQ
0x552 PUSH2 0x55a
0x555 JUMPI
---
0x543: JUMPDEST 
0x544: V432 = 0x0
0x546: V433 = S[0x0]
0x547: V434 = 0x1
0x549: V435 = 0xa0
0x54b: V436 = 0x2
0x54d: V437 = EXP 0x2 0xa0
0x54e: V438 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54f: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x550: V440 = CALLER
0x551: V441 = EQ V440 V439
0x552: V442 = 0x55a
0x555: JUMPI 0x55a V441
---
Entry stack: [V11, 0x34f, V257]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, V257]

================================

Block 0x556
[0x556:0x559]
---
Predecessors: [0x543]
Successors: []
---
0x556 PUSH1 0x0
0x558 DUP1
0x559 REVERT
---
0x556: V443 = 0x0
0x559: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, V257]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, V257]

================================

Block 0x55a
[0x55a:0x56c]
---
Predecessors: [0x543]
Successors: [0x34f]
---
0x55a JUMPDEST
0x55b PUSH1 0x9
0x55d DUP1
0x55e SLOAD
0x55f PUSH1 0xff
0x561 NOT
0x562 AND
0x563 SWAP2
0x564 ISZERO
0x565 ISZERO
0x566 SWAP2
0x567 SWAP1
0x568 SWAP2
0x569 OR
0x56a SWAP1
0x56b SSTORE
0x56c JUMP
---
0x55a: JUMPDEST 
0x55b: V444 = 0x9
0x55e: V445 = S[0x9]
0x55f: V446 = 0xff
0x561: V447 = NOT 0xff
0x562: V448 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V445
0x564: V449 = ISZERO V257
0x565: V450 = ISZERO V449
0x569: V451 = OR V450 V448
0x56b: S[0x9] = V451
0x56c: JUMP 0x34f
---
Entry stack: [V11, 0x34f, V257]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x56d
[0x56d:0x580]
---
Predecessors: [0x35d]
Successors: [0x581, 0x585]
---
0x56d JUMPDEST
0x56e PUSH1 0x0
0x570 DUP1
0x571 SLOAD
0x572 PUSH1 0x1
0x574 PUSH1 0xa0
0x576 PUSH1 0x2
0x578 EXP
0x579 SUB
0x57a AND
0x57b CALLER
0x57c EQ
0x57d PUSH2 0x585
0x580 JUMPI
---
0x56d: JUMPDEST 
0x56e: V452 = 0x0
0x571: V453 = S[0x0]
0x572: V454 = 0x1
0x574: V455 = 0xa0
0x576: V456 = 0x2
0x578: V457 = EXP 0x2 0xa0
0x579: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57a: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x57b: V460 = CALLER
0x57c: V461 = EQ V460 V459
0x57d: V462 = 0x585
0x580: JUMPI 0x585 V461
---
Entry stack: [V11, 0x34f, V265]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x34f, V265, 0x0]

================================

Block 0x581
[0x581:0x584]
---
Predecessors: [0x56d]
Successors: []
---
0x581 PUSH1 0x0
0x583 DUP1
0x584 REVERT
---
0x581: V463 = 0x0
0x584: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, V265, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, V265, 0x0]

================================

Block 0x585
[0x585:0x591]
---
Predecessors: [0x56d]
Successors: [0x592, 0x596]
---
0x585 JUMPDEST
0x586 PUSH1 0x9
0x588 SLOAD
0x589 PUSH1 0xff
0x58b AND
0x58c ISZERO
0x58d ISZERO
0x58e PUSH2 0x596
0x591 JUMPI
---
0x585: JUMPDEST 
0x586: V464 = 0x9
0x588: V465 = S[0x9]
0x589: V466 = 0xff
0x58b: V467 = AND 0xff V465
0x58c: V468 = ISZERO V467
0x58d: V469 = ISZERO V468
0x58e: V470 = 0x596
0x591: JUMPI 0x596 V469
---
Entry stack: [V11, 0x34f, V265, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, V265, 0x0]

================================

Block 0x592
[0x592:0x595]
---
Predecessors: [0x585]
Successors: []
---
0x592 PUSH1 0x0
0x594 DUP1
0x595 REVERT
---
0x592: V471 = 0x0
0x595: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, V265, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, V265, 0x0]

================================

Block 0x596
[0x596:0x5e1]
---
Predecessors: [0x585]
Successors: [0x5e2, 0x5e6]
---
0x596 JUMPDEST
0x597 PUSH1 0x7
0x599 SLOAD
0x59a PUSH1 0x40
0x59c DUP1
0x59d MLOAD
0x59e PUSH1 0xe0
0x5a0 PUSH1 0x2
0x5a2 EXP
0x5a3 PUSH4 0x70a08231
0x5a8 MUL
0x5a9 DUP2
0x5aa MSTORE
0x5ab ADDRESS
0x5ac PUSH1 0x4
0x5ae DUP3
0x5af ADD
0x5b0 MSTORE
0x5b1 SWAP1
0x5b2 MLOAD
0x5b3 PUSH1 0x1
0x5b5 PUSH1 0xa0
0x5b7 PUSH1 0x2
0x5b9 EXP
0x5ba SUB
0x5bb SWAP1
0x5bc SWAP3
0x5bd AND
0x5be SWAP2
0x5bf PUSH4 0x70a08231
0x5c4 SWAP2
0x5c5 PUSH1 0x24
0x5c7 DUP1
0x5c8 DUP3
0x5c9 ADD
0x5ca SWAP3
0x5cb PUSH1 0x20
0x5cd SWAP3
0x5ce SWAP1
0x5cf SWAP2
0x5d0 SWAP1
0x5d1 DUP3
0x5d2 SWAP1
0x5d3 SUB
0x5d4 ADD
0x5d5 DUP2
0x5d6 PUSH1 0x0
0x5d8 DUP8
0x5d9 DUP1
0x5da EXTCODESIZE
0x5db ISZERO
0x5dc DUP1
0x5dd ISZERO
0x5de PUSH2 0x5e6
0x5e1 JUMPI
---
0x596: JUMPDEST 
0x597: V472 = 0x7
0x599: V473 = S[0x7]
0x59a: V474 = 0x40
0x59d: V475 = M[0x40]
0x59e: V476 = 0xe0
0x5a0: V477 = 0x2
0x5a2: V478 = EXP 0x2 0xe0
0x5a3: V479 = 0x70a08231
0x5a8: V480 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x5aa: M[V475] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x5ab: V481 = ADDRESS
0x5ac: V482 = 0x4
0x5af: V483 = ADD V475 0x4
0x5b0: M[V483] = V481
0x5b2: V484 = M[0x40]
0x5b3: V485 = 0x1
0x5b5: V486 = 0xa0
0x5b7: V487 = 0x2
0x5b9: V488 = EXP 0x2 0xa0
0x5ba: V489 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bd: V490 = AND V473 0xffffffffffffffffffffffffffffffffffffffff
0x5bf: V491 = 0x70a08231
0x5c5: V492 = 0x24
0x5c9: V493 = ADD V475 0x24
0x5cb: V494 = 0x20
0x5d3: V495 = SUB V475 V484
0x5d4: V496 = ADD V495 0x24
0x5d6: V497 = 0x0
0x5da: V498 = EXTCODESIZE V490
0x5db: V499 = ISZERO V498
0x5dd: V500 = ISZERO V499
0x5de: V501 = 0x5e6
0x5e1: JUMPI 0x5e6 V500
---
Entry stack: [V11, 0x34f, V265, 0x0]
Stack pops: 0
Stack additions: [V490, 0x70a08231, V493, 0x20, V484, V496, V484, 0x0, V490, V499]
Exit stack: [V11, 0x34f, V265, 0x0, V490, 0x70a08231, V493, 0x20, V484, V496, V484, 0x0, V490, V499]

================================

Block 0x5e2
[0x5e2:0x5e5]
---
Predecessors: [0x596]
Successors: []
---
0x5e2 PUSH1 0x0
0x5e4 DUP1
0x5e5 REVERT
---
0x5e2: V502 = 0x0
0x5e5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, V265, 0x0, V490, 0x70a08231, V493, 0x20, V484, V496, V484, 0x0, V490, V499]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, V265, 0x0, V490, 0x70a08231, V493, 0x20, V484, V496, V484, 0x0, V490, V499]

================================

Block 0x5e6
[0x5e6:0x5f0]
---
Predecessors: [0x596]
Successors: [0x5f1, 0x5fa]
---
0x5e6 JUMPDEST
0x5e7 POP
0x5e8 GAS
0x5e9 CALL
0x5ea ISZERO
0x5eb DUP1
0x5ec ISZERO
0x5ed PUSH2 0x5fa
0x5f0 JUMPI
---
0x5e6: JUMPDEST 
0x5e8: V503 = GAS
0x5e9: V504 = CALL V503 V490 0x0 V484 V496 V484 0x20
0x5ea: V505 = ISZERO V504
0x5ec: V506 = ISZERO V505
0x5ed: V507 = 0x5fa
0x5f0: JUMPI 0x5fa V506
---
Entry stack: [V11, 0x34f, V265, 0x0, V490, 0x70a08231, V493, 0x20, V484, V496, V484, 0x0, V490, V499]
Stack pops: 7
Stack additions: [V505]
Exit stack: [V11, 0x34f, V265, 0x0, V490, 0x70a08231, V493, V505]

================================

Block 0x5f1
[0x5f1:0x5f9]
---
Predecessors: [0x5e6]
Successors: []
---
0x5f1 RETURNDATASIZE
0x5f2 PUSH1 0x0
0x5f4 DUP1
0x5f5 RETURNDATACOPY
0x5f6 RETURNDATASIZE
0x5f7 PUSH1 0x0
0x5f9 REVERT
---
0x5f1: V508 = RETURNDATASIZE
0x5f2: V509 = 0x0
0x5f5: RETURNDATACOPY 0x0 0x0 V508
0x5f6: V510 = RETURNDATASIZE
0x5f7: V511 = 0x0
0x5f9: REVERT 0x0 V510
---
Entry stack: [V11, 0x34f, V265, 0x0, V490, 0x70a08231, V493, V505]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, V265, 0x0, V490, 0x70a08231, V493, V505]

================================

Block 0x5fa
[0x5fa:0x60b]
---
Predecessors: [0x5e6]
Successors: [0x60c, 0x610]
---
0x5fa JUMPDEST
0x5fb POP
0x5fc POP
0x5fd POP
0x5fe POP
0x5ff PUSH1 0x40
0x601 MLOAD
0x602 RETURNDATASIZE
0x603 PUSH1 0x20
0x605 DUP2
0x606 LT
0x607 ISZERO
0x608 PUSH2 0x610
0x60b JUMPI
---
0x5fa: JUMPDEST 
0x5ff: V512 = 0x40
0x601: V513 = M[0x40]
0x602: V514 = RETURNDATASIZE
0x603: V515 = 0x20
0x606: V516 = LT V514 0x20
0x607: V517 = ISZERO V516
0x608: V518 = 0x610
0x60b: JUMPI 0x610 V517
---
Entry stack: [V11, 0x34f, V265, 0x0, V490, 0x70a08231, V493, V505]
Stack pops: 4
Stack additions: [V513, V514]
Exit stack: [V11, 0x34f, V265, 0x0, V513, V514]

================================

Block 0x60c
[0x60c:0x60f]
---
Predecessors: [0x5fa]
Successors: []
---
0x60c PUSH1 0x0
0x60e DUP1
0x60f REVERT
---
0x60c: V519 = 0x0
0x60f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, V265, 0x0, V513, V514]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, V265, 0x0, V513, V514]

================================

Block 0x610
[0x610:0x61e]
---
Predecessors: [0x5fa]
Successors: [0x61f, 0x624]
---
0x610 JUMPDEST
0x611 POP
0x612 MLOAD
0x613 SWAP1
0x614 POP
0x615 PUSH1 0x0
0x617 DUP2
0x618 GT
0x619 DUP1
0x61a ISZERO
0x61b PUSH2 0x624
0x61e JUMPI
---
0x610: JUMPDEST 
0x612: V520 = M[V513]
0x615: V521 = 0x0
0x618: V522 = GT V520 0x0
0x61a: V523 = ISZERO V522
0x61b: V524 = 0x624
0x61e: JUMPI 0x624 V523
---
Entry stack: [V11, 0x34f, V265, 0x0, V513, V514]
Stack pops: 3
Stack additions: [V520, V522]
Exit stack: [V11, 0x34f, V265, V520, V522]

================================

Block 0x61f
[0x61f:0x623]
---
Predecessors: [0x610]
Successors: [0x624]
---
0x61f POP
0x620 PUSH1 0x0
0x622 DUP3
0x623 GT
---
0x620: V525 = 0x0
0x623: V526 = GT V265 0x0
---
Entry stack: [V11, 0x34f, V265, V520, V522]
Stack pops: 3
Stack additions: [S2, S1, V526]
Exit stack: [V11, 0x34f, V265, V520, V526]

================================

Block 0x624
[0x624:0x62a]
---
Predecessors: [0x610, 0x61f]
Successors: [0x62b, 0x62f]
---
0x624 JUMPDEST
0x625 ISZERO
0x626 ISZERO
0x627 PUSH2 0x62f
0x62a JUMPI
---
0x624: JUMPDEST 
0x625: V527 = ISZERO S0
0x626: V528 = ISZERO V527
0x627: V529 = 0x62f
0x62a: JUMPI 0x62f V528
---
Entry stack: [V11, 0x34f, V265, V520, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x34f, V265, V520]

================================

Block 0x62b
[0x62b:0x62e]
---
Predecessors: [0x624]
Successors: []
---
0x62b PUSH1 0x0
0x62d DUP1
0x62e REVERT
---
0x62b: V530 = 0x0
0x62e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, V265, V520]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, V265, V520]

================================

Block 0x62f
[0x62f:0x637]
---
Predecessors: [0x624]
Successors: [0x638, 0x63c]
---
0x62f JUMPDEST
0x630 DUP2
0x631 DUP2
0x632 LT
0x633 ISZERO
0x634 PUSH2 0x63c
0x637 JUMPI
---
0x62f: JUMPDEST 
0x632: V531 = LT V520 V265
0x633: V532 = ISZERO V531
0x634: V533 = 0x63c
0x637: JUMPI 0x63c V532
---
Entry stack: [V11, 0x34f, V265, V520]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x34f, V265, V520]

================================

Block 0x638
[0x638:0x63b]
---
Predecessors: [0x62f]
Successors: []
---
0x638 PUSH1 0x0
0x63a DUP1
0x63b REVERT
---
0x638: V534 = 0x0
0x63b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, V265, V520]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, V265, V520]

================================

Block 0x63c
[0x63c:0x64d]
---
Predecessors: [0x62f]
Successors: [0xb50]
---
0x63c JUMPDEST
0x63d PUSH1 0x0
0x63f PUSH2 0x64e
0x642 DUP3
0x643 DUP5
0x644 PUSH4 0xffffffff
0x649 PUSH2 0xb50
0x64c AND
0x64d JUMP
---
0x63c: JUMPDEST 
0x63d: V535 = 0x0
0x63f: V536 = 0x64e
0x644: V537 = 0xffffffff
0x649: V538 = 0xb50
0x64c: V539 = AND 0xb50 0xffffffff
0x64d: JUMP 0xb50
---
Entry stack: [V11, 0x34f, V265, V520]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x64e, S0, S1]
Exit stack: [V11, 0x34f, V265, V520, 0x0, 0x64e, V520, V265]

================================

Block 0x64e
[0x64e:0x654]
---
Predecessors: [0xb5c]
Successors: [0x655, 0x701]
---
0x64e JUMPDEST
0x64f GT
0x650 ISZERO
0x651 PUSH2 0x701
0x654 JUMPI
---
0x64e: JUMPDEST 
0x64f: V540 = GT V1015 S1
0x650: V541 = ISZERO V540
0x651: V542 = 0x701
0x654: JUMPI 0x701 V541
---
Entry stack: [V11, 0x34f, S5, S4, S3, S2, S1, V1015]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x34f, S5, S4, S3, S2]

================================

Block 0x655
[0x655:0x67c]
---
Predecessors: [0x64e]
Successors: [0xb50]
---
0x655 PUSH1 0x7
0x657 SLOAD
0x658 PUSH1 0x1
0x65a SLOAD
0x65b PUSH1 0x1
0x65d PUSH1 0xa0
0x65f PUSH1 0x2
0x661 EXP
0x662 SUB
0x663 SWAP2
0x664 DUP3
0x665 AND
0x666 SWAP2
0x667 PUSH4 0xa9059cbb
0x66c SWAP2
0x66d AND
0x66e PUSH2 0x67d
0x671 DUP5
0x672 DUP7
0x673 PUSH4 0xffffffff
0x678 PUSH2 0xb50
0x67b AND
0x67c JUMP
---
0x655: V543 = 0x7
0x657: V544 = S[0x7]
0x658: V545 = 0x1
0x65a: V546 = S[0x1]
0x65b: V547 = 0x1
0x65d: V548 = 0xa0
0x65f: V549 = 0x2
0x661: V550 = EXP 0x2 0xa0
0x662: V551 = SUB 0x10000000000000000000000000000000000000000 0x1
0x665: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V544
0x667: V553 = 0xa9059cbb
0x66d: V554 = AND V546 0xffffffffffffffffffffffffffffffffffffffff
0x66e: V555 = 0x67d
0x673: V556 = 0xffffffff
0x678: V557 = 0xb50
0x67b: V558 = AND 0xb50 0xffffffff
0x67c: JUMP 0xb50
---
Entry stack: [V11, 0x34f, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V552, 0xa9059cbb, V554, 0x67d, S0, S1]
Exit stack: [V11, 0x34f, S3, S2, S1, S0, V552, 0xa9059cbb, V554, 0x67d, S0, S1]

================================

Block 0x67d
[0x67d:0x6e3]
---
Predecessors: [0xb5c]
Successors: [0x6e4, 0x6e8]
---
0x67d JUMPDEST
0x67e PUSH1 0x40
0x680 MLOAD
0x681 DUP4
0x682 PUSH4 0xffffffff
0x687 AND
0x688 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6a6 MUL
0x6a7 DUP2
0x6a8 MSTORE
0x6a9 PUSH1 0x4
0x6ab ADD
0x6ac DUP1
0x6ad DUP4
0x6ae PUSH1 0x1
0x6b0 PUSH1 0xa0
0x6b2 PUSH1 0x2
0x6b4 EXP
0x6b5 SUB
0x6b6 AND
0x6b7 PUSH1 0x1
0x6b9 PUSH1 0xa0
0x6bb PUSH1 0x2
0x6bd EXP
0x6be SUB
0x6bf AND
0x6c0 DUP2
0x6c1 MSTORE
0x6c2 PUSH1 0x20
0x6c4 ADD
0x6c5 DUP3
0x6c6 DUP2
0x6c7 MSTORE
0x6c8 PUSH1 0x20
0x6ca ADD
0x6cb SWAP3
0x6cc POP
0x6cd POP
0x6ce POP
0x6cf PUSH1 0x0
0x6d1 PUSH1 0x40
0x6d3 MLOAD
0x6d4 DUP1
0x6d5 DUP4
0x6d6 SUB
0x6d7 DUP2
0x6d8 PUSH1 0x0
0x6da DUP8
0x6db DUP1
0x6dc EXTCODESIZE
0x6dd ISZERO
0x6de DUP1
0x6df ISZERO
0x6e0 PUSH2 0x6e8
0x6e3 JUMPI
---
0x67d: JUMPDEST 
0x67e: V559 = 0x40
0x680: V560 = M[0x40]
0x682: V561 = 0xffffffff
0x687: V562 = AND 0xffffffff S2
0x688: V563 = 0x100000000000000000000000000000000000000000000000000000000
0x6a6: V564 = MUL 0x100000000000000000000000000000000000000000000000000000000 V562
0x6a8: M[V560] = V564
0x6a9: V565 = 0x4
0x6ab: V566 = ADD 0x4 V560
0x6ae: V567 = 0x1
0x6b0: V568 = 0xa0
0x6b2: V569 = 0x2
0x6b4: V570 = EXP 0x2 0xa0
0x6b5: V571 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b6: V572 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x6b7: V573 = 0x1
0x6b9: V574 = 0xa0
0x6bb: V575 = 0x2
0x6bd: V576 = EXP 0x2 0xa0
0x6be: V577 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6bf: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff V572
0x6c1: M[V566] = V578
0x6c2: V579 = 0x20
0x6c4: V580 = ADD 0x20 V566
0x6c7: M[V580] = V1015
0x6c8: V581 = 0x20
0x6ca: V582 = ADD 0x20 V580
0x6cf: V583 = 0x0
0x6d1: V584 = 0x40
0x6d3: V585 = M[0x40]
0x6d6: V586 = SUB V582 V585
0x6d8: V587 = 0x0
0x6dc: V588 = EXTCODESIZE S3
0x6dd: V589 = ISZERO V588
0x6df: V590 = ISZERO V589
0x6e0: V591 = 0x6e8
0x6e3: JUMPI 0x6e8 V590
---
Entry stack: [V11, 0x34f, S5, S4, S3, S2, S1, V1015]
Stack pops: 4
Stack additions: [S3, S2, V582, 0x0, V585, V586, V585, 0x0, S3, V589]
Exit stack: [V11, 0x34f, S5, S4, S3, S2, V582, 0x0, V585, V586, V585, 0x0, S3, V589]

================================

Block 0x6e4
[0x6e4:0x6e7]
---
Predecessors: [0x67d]
Successors: []
---
0x6e4 PUSH1 0x0
0x6e6 DUP1
0x6e7 REVERT
---
0x6e4: V592 = 0x0
0x6e7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, S11, S10, S9, S8, V582, 0x0, V585, V586, V585, 0x0, S1, V589]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, S11, S10, S9, S8, V582, 0x0, V585, V586, V585, 0x0, S1, V589]

================================

Block 0x6e8
[0x6e8:0x6f2]
---
Predecessors: [0x67d]
Successors: [0x6f3, 0x6fc]
---
0x6e8 JUMPDEST
0x6e9 POP
0x6ea GAS
0x6eb CALL
0x6ec ISZERO
0x6ed DUP1
0x6ee ISZERO
0x6ef PUSH2 0x6fc
0x6f2 JUMPI
---
0x6e8: JUMPDEST 
0x6ea: V593 = GAS
0x6eb: V594 = CALL V593 S1 0x0 V585 V586 V585 0x0
0x6ec: V595 = ISZERO V594
0x6ee: V596 = ISZERO V595
0x6ef: V597 = 0x6fc
0x6f2: JUMPI 0x6fc V596
---
Entry stack: [V11, 0x34f, S11, S10, S9, S8, V582, 0x0, V585, V586, V585, 0x0, S1, V589]
Stack pops: 7
Stack additions: [V595]
Exit stack: [V11, 0x34f, S11, S10, S9, S8, V582, V595]

================================

Block 0x6f3
[0x6f3:0x6fb]
---
Predecessors: [0x6e8]
Successors: []
---
0x6f3 RETURNDATASIZE
0x6f4 PUSH1 0x0
0x6f6 DUP1
0x6f7 RETURNDATACOPY
0x6f8 RETURNDATASIZE
0x6f9 PUSH1 0x0
0x6fb REVERT
---
0x6f3: V598 = RETURNDATASIZE
0x6f4: V599 = 0x0
0x6f7: RETURNDATACOPY 0x0 0x0 V598
0x6f8: V600 = RETURNDATASIZE
0x6f9: V601 = 0x0
0x6fb: REVERT 0x0 V600
---
Entry stack: [V11, 0x34f, S5, S4, S3, S2, V582, V595]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, S5, S4, S3, S2, V582, V595]

================================

Block 0x6fc
[0x6fc:0x700]
---
Predecessors: [0x6e8]
Successors: [0x701]
---
0x6fc JUMPDEST
0x6fd POP
0x6fe POP
0x6ff POP
0x700 POP
---
0x6fc: JUMPDEST 
---
Entry stack: [V11, 0x34f, S5, S4, S3, S2, V582, V595]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x34f, S5, S4]

================================

Block 0x701
[0x701:0x70e]
---
Predecessors: [0x64e, 0x6fc]
Successors: [0x34f]
---
0x701 JUMPDEST
0x702 POP
0x703 POP
0x704 PUSH1 0x9
0x706 DUP1
0x707 SLOAD
0x708 PUSH1 0xff
0x70a NOT
0x70b AND
0x70c SWAP1
0x70d SSTORE
0x70e JUMP
---
0x701: JUMPDEST 
0x704: V602 = 0x9
0x707: V603 = S[0x9]
0x708: V604 = 0xff
0x70a: V605 = NOT 0xff
0x70b: V606 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V603
0x70d: S[0x9] = V606
0x70e: JUMP S2
---
Entry stack: [V11, 0x34f, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x34f, S3]

================================

Block 0x70f
[0x70f:0x71d]
---
Predecessors: [0x375]
Successors: [0x37e]
---
0x70f JUMPDEST
0x710 PUSH1 0x1
0x712 SLOAD
0x713 PUSH1 0x1
0x715 PUSH1 0xa0
0x717 PUSH1 0x2
0x719 EXP
0x71a SUB
0x71b AND
0x71c DUP2
0x71d JUMP
---
0x70f: JUMPDEST 
0x710: V607 = 0x1
0x712: V608 = S[0x1]
0x713: V609 = 0x1
0x715: V610 = 0xa0
0x717: V611 = 0x2
0x719: V612 = EXP 0x2 0xa0
0x71a: V613 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71b: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V608
0x71d: JUMP 0x37e
---
Entry stack: [V11, 0x37e]
Stack pops: 1
Stack additions: [S0, V614]
Exit stack: [V11, 0x37e, V614]

================================

Block 0x71e
[0x71e:0x731]
---
Predecessors: [0x3a6, 0xa05]
Successors: [0x732, 0x736]
---
0x71e JUMPDEST
0x71f PUSH1 0x0
0x721 DUP1
0x722 SLOAD
0x723 PUSH1 0x1
0x725 PUSH1 0xa0
0x727 PUSH1 0x2
0x729 EXP
0x72a SUB
0x72b AND
0x72c CALLER
0x72d EQ
0x72e PUSH2 0x736
0x731 JUMPI
---
0x71e: JUMPDEST 
0x71f: V615 = 0x0
0x722: V616 = S[0x0]
0x723: V617 = 0x1
0x725: V618 = 0xa0
0x727: V619 = 0x2
0x729: V620 = EXP 0x2 0xa0
0x72a: V621 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72b: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0x72c: V623 = CALLER
0x72d: V624 = EQ V623 V622
0x72e: V625 = 0x736
0x731: JUMPI 0x736 V624
---
Entry stack: [V11, 0x34f, S2, {0x34f, 0xa1a}, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x34f, S2, {0x34f, 0xa1a}, S0, 0x0]

================================

Block 0x732
[0x732:0x735]
---
Predecessors: [0x71e]
Successors: []
---
0x732 PUSH1 0x0
0x734 DUP1
0x735 REVERT
---
0x732: V626 = 0x0
0x735: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, S3, {0x34f, 0xa1a}, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, S3, {0x34f, 0xa1a}, S1, 0x0]

================================

Block 0x736
[0x736:0x781]
---
Predecessors: [0x71e]
Successors: [0x782, 0x786]
---
0x736 JUMPDEST
0x737 PUSH1 0x7
0x739 SLOAD
0x73a PUSH1 0x40
0x73c DUP1
0x73d MLOAD
0x73e PUSH1 0xe0
0x740 PUSH1 0x2
0x742 EXP
0x743 PUSH4 0x70a08231
0x748 MUL
0x749 DUP2
0x74a MSTORE
0x74b ADDRESS
0x74c PUSH1 0x4
0x74e DUP3
0x74f ADD
0x750 MSTORE
0x751 SWAP1
0x752 MLOAD
0x753 PUSH1 0x1
0x755 PUSH1 0xa0
0x757 PUSH1 0x2
0x759 EXP
0x75a SUB
0x75b SWAP1
0x75c SWAP3
0x75d AND
0x75e SWAP2
0x75f PUSH4 0x70a08231
0x764 SWAP2
0x765 PUSH1 0x24
0x767 DUP1
0x768 DUP3
0x769 ADD
0x76a SWAP3
0x76b PUSH1 0x20
0x76d SWAP3
0x76e SWAP1
0x76f SWAP2
0x770 SWAP1
0x771 DUP3
0x772 SWAP1
0x773 SUB
0x774 ADD
0x775 DUP2
0x776 PUSH1 0x0
0x778 DUP8
0x779 DUP1
0x77a EXTCODESIZE
0x77b ISZERO
0x77c DUP1
0x77d ISZERO
0x77e PUSH2 0x786
0x781 JUMPI
---
0x736: JUMPDEST 
0x737: V627 = 0x7
0x739: V628 = S[0x7]
0x73a: V629 = 0x40
0x73d: V630 = M[0x40]
0x73e: V631 = 0xe0
0x740: V632 = 0x2
0x742: V633 = EXP 0x2 0xe0
0x743: V634 = 0x70a08231
0x748: V635 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x74a: M[V630] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x74b: V636 = ADDRESS
0x74c: V637 = 0x4
0x74f: V638 = ADD V630 0x4
0x750: M[V638] = V636
0x752: V639 = M[0x40]
0x753: V640 = 0x1
0x755: V641 = 0xa0
0x757: V642 = 0x2
0x759: V643 = EXP 0x2 0xa0
0x75a: V644 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75d: V645 = AND V628 0xffffffffffffffffffffffffffffffffffffffff
0x75f: V646 = 0x70a08231
0x765: V647 = 0x24
0x769: V648 = ADD V630 0x24
0x76b: V649 = 0x20
0x773: V650 = SUB V630 V639
0x774: V651 = ADD V650 0x24
0x776: V652 = 0x0
0x77a: V653 = EXTCODESIZE V645
0x77b: V654 = ISZERO V653
0x77d: V655 = ISZERO V654
0x77e: V656 = 0x786
0x781: JUMPI 0x786 V655
---
Entry stack: [V11, 0x34f, S3, {0x34f, 0xa1a}, S1, 0x0]
Stack pops: 0
Stack additions: [V645, 0x70a08231, V648, 0x20, V639, V651, V639, 0x0, V645, V654]
Exit stack: [V11, 0x34f, S3, {0x34f, 0xa1a}, S1, 0x0, V645, 0x70a08231, V648, 0x20, V639, V651, V639, 0x0, V645, V654]

================================

Block 0x782
[0x782:0x785]
---
Predecessors: [0x736]
Successors: []
---
0x782 PUSH1 0x0
0x784 DUP1
0x785 REVERT
---
0x782: V657 = 0x0
0x785: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, S13, {0x34f, 0xa1a}, S11, 0x0, V645, 0x70a08231, V648, 0x20, V639, V651, V639, 0x0, V645, V654]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, S13, {0x34f, 0xa1a}, S11, 0x0, V645, 0x70a08231, V648, 0x20, V639, V651, V639, 0x0, V645, V654]

================================

Block 0x786
[0x786:0x790]
---
Predecessors: [0x736]
Successors: [0x791, 0x79a]
---
0x786 JUMPDEST
0x787 POP
0x788 GAS
0x789 CALL
0x78a ISZERO
0x78b DUP1
0x78c ISZERO
0x78d PUSH2 0x79a
0x790 JUMPI
---
0x786: JUMPDEST 
0x788: V658 = GAS
0x789: V659 = CALL V658 V645 0x0 V639 V651 V639 0x20
0x78a: V660 = ISZERO V659
0x78c: V661 = ISZERO V660
0x78d: V662 = 0x79a
0x790: JUMPI 0x79a V661
---
Entry stack: [V11, 0x34f, S13, {0x34f, 0xa1a}, S11, 0x0, V645, 0x70a08231, V648, 0x20, V639, V651, V639, 0x0, V645, V654]
Stack pops: 7
Stack additions: [V660]
Exit stack: [V11, 0x34f, S13, {0x34f, 0xa1a}, S11, 0x0, V645, 0x70a08231, V648, V660]

================================

Block 0x791
[0x791:0x799]
---
Predecessors: [0x786]
Successors: []
---
0x791 RETURNDATASIZE
0x792 PUSH1 0x0
0x794 DUP1
0x795 RETURNDATACOPY
0x796 RETURNDATASIZE
0x797 PUSH1 0x0
0x799 REVERT
---
0x791: V663 = RETURNDATASIZE
0x792: V664 = 0x0
0x795: RETURNDATACOPY 0x0 0x0 V663
0x796: V665 = RETURNDATASIZE
0x797: V666 = 0x0
0x799: REVERT 0x0 V665
---
Entry stack: [V11, 0x34f, S7, {0x34f, 0xa1a}, S5, 0x0, S3, 0x70a08231, S1, V660]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, S7, {0x34f, 0xa1a}, S5, 0x0, S3, 0x70a08231, S1, V660]

================================

Block 0x79a
[0x79a:0x7ab]
---
Predecessors: [0x786]
Successors: [0x7ac, 0x7b0]
---
0x79a JUMPDEST
0x79b POP
0x79c POP
0x79d POP
0x79e POP
0x79f PUSH1 0x40
0x7a1 MLOAD
0x7a2 RETURNDATASIZE
0x7a3 PUSH1 0x20
0x7a5 DUP2
0x7a6 LT
0x7a7 ISZERO
0x7a8 PUSH2 0x7b0
0x7ab JUMPI
---
0x79a: JUMPDEST 
0x79f: V667 = 0x40
0x7a1: V668 = M[0x40]
0x7a2: V669 = RETURNDATASIZE
0x7a3: V670 = 0x20
0x7a6: V671 = LT V669 0x20
0x7a7: V672 = ISZERO V671
0x7a8: V673 = 0x7b0
0x7ab: JUMPI 0x7b0 V672
---
Entry stack: [V11, 0x34f, S7, {0x34f, 0xa1a}, S5, 0x0, S3, 0x70a08231, S1, V660]
Stack pops: 4
Stack additions: [V668, V669]
Exit stack: [V11, 0x34f, S7, {0x34f, 0xa1a}, S5, 0x0, V668, V669]

================================

Block 0x7ac
[0x7ac:0x7af]
---
Predecessors: [0x79a]
Successors: []
---
0x7ac PUSH1 0x0
0x7ae DUP1
0x7af REVERT
---
0x7ac: V674 = 0x0
0x7af: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, S5, {0x34f, 0xa1a}, S3, 0x0, V668, V669]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, S5, {0x34f, 0xa1a}, S3, 0x0, V668, V669]

================================

Block 0x7b0
[0x7b0:0x7bd]
---
Predecessors: [0x79a]
Successors: [0x7be, 0x844]
---
0x7b0 JUMPDEST
0x7b1 POP
0x7b2 MLOAD
0x7b3 SWAP1
0x7b4 POP
0x7b5 PUSH1 0x0
0x7b7 DUP2
0x7b8 GT
0x7b9 ISZERO
0x7ba PUSH2 0x844
0x7bd JUMPI
---
0x7b0: JUMPDEST 
0x7b2: V675 = M[V668]
0x7b5: V676 = 0x0
0x7b8: V677 = GT V675 0x0
0x7b9: V678 = ISZERO V677
0x7ba: V679 = 0x844
0x7bd: JUMPI 0x844 V678
---
Entry stack: [V11, 0x34f, S5, {0x34f, 0xa1a}, S3, 0x0, V668, V669]
Stack pops: 3
Stack additions: [V675]
Exit stack: [V11, 0x34f, S5, {0x34f, 0xa1a}, S3, V675]

================================

Block 0x7be
[0x7be:0x826]
---
Predecessors: [0x7b0]
Successors: [0x827, 0x82b]
---
0x7be PUSH1 0x7
0x7c0 SLOAD
0x7c1 PUSH1 0x40
0x7c3 DUP1
0x7c4 MLOAD
0x7c5 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7e6 DUP2
0x7e7 MSTORE
0x7e8 PUSH1 0x1
0x7ea PUSH1 0xa0
0x7ec PUSH1 0x2
0x7ee EXP
0x7ef SUB
0x7f0 DUP6
0x7f1 DUP2
0x7f2 AND
0x7f3 PUSH1 0x4
0x7f5 DUP4
0x7f6 ADD
0x7f7 MSTORE
0x7f8 PUSH1 0x24
0x7fa DUP3
0x7fb ADD
0x7fc DUP6
0x7fd SWAP1
0x7fe MSTORE
0x7ff SWAP2
0x800 MLOAD
0x801 SWAP2
0x802 SWAP1
0x803 SWAP3
0x804 AND
0x805 SWAP2
0x806 PUSH4 0xa9059cbb
0x80b SWAP2
0x80c PUSH1 0x44
0x80e DUP1
0x80f DUP4
0x810 ADD
0x811 SWAP3
0x812 PUSH1 0x0
0x814 SWAP3
0x815 SWAP2
0x816 SWAP1
0x817 DUP3
0x818 SWAP1
0x819 SUB
0x81a ADD
0x81b DUP2
0x81c DUP4
0x81d DUP8
0x81e DUP1
0x81f EXTCODESIZE
0x820 ISZERO
0x821 DUP1
0x822 ISZERO
0x823 PUSH2 0x82b
0x826 JUMPI
---
0x7be: V680 = 0x7
0x7c0: V681 = S[0x7]
0x7c1: V682 = 0x40
0x7c4: V683 = M[0x40]
0x7c5: V684 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7e7: M[V683] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7e8: V685 = 0x1
0x7ea: V686 = 0xa0
0x7ec: V687 = 0x2
0x7ee: V688 = EXP 0x2 0xa0
0x7ef: V689 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f2: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x7f3: V691 = 0x4
0x7f6: V692 = ADD V683 0x4
0x7f7: M[V692] = V690
0x7f8: V693 = 0x24
0x7fb: V694 = ADD V683 0x24
0x7fe: M[V694] = V675
0x800: V695 = M[0x40]
0x804: V696 = AND V681 0xffffffffffffffffffffffffffffffffffffffff
0x806: V697 = 0xa9059cbb
0x80c: V698 = 0x44
0x810: V699 = ADD V683 0x44
0x812: V700 = 0x0
0x819: V701 = SUB V683 V695
0x81a: V702 = ADD V701 0x44
0x81f: V703 = EXTCODESIZE V696
0x820: V704 = ISZERO V703
0x822: V705 = ISZERO V704
0x823: V706 = 0x82b
0x826: JUMPI 0x82b V705
---
Entry stack: [V11, 0x34f, S3, {0x34f, 0xa1a}, S1, V675]
Stack pops: 2
Stack additions: [S1, S0, V696, 0xa9059cbb, V699, 0x0, V695, V702, V695, 0x0, V696, V704]
Exit stack: [V11, 0x34f, S3, {0x34f, 0xa1a}, S1, V675, V696, 0xa9059cbb, V699, 0x0, V695, V702, V695, 0x0, V696, V704]

================================

Block 0x827
[0x827:0x82a]
---
Predecessors: [0x7be]
Successors: []
---
0x827 PUSH1 0x0
0x829 DUP1
0x82a REVERT
---
0x827: V707 = 0x0
0x82a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, S13, {0x34f, 0xa1a}, S11, V675, V696, 0xa9059cbb, V699, 0x0, V695, V702, V695, 0x0, V696, V704]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, S13, {0x34f, 0xa1a}, S11, V675, V696, 0xa9059cbb, V699, 0x0, V695, V702, V695, 0x0, V696, V704]

================================

Block 0x82b
[0x82b:0x835]
---
Predecessors: [0x7be]
Successors: [0x836, 0x83f]
---
0x82b JUMPDEST
0x82c POP
0x82d GAS
0x82e CALL
0x82f ISZERO
0x830 DUP1
0x831 ISZERO
0x832 PUSH2 0x83f
0x835 JUMPI
---
0x82b: JUMPDEST 
0x82d: V708 = GAS
0x82e: V709 = CALL V708 V696 0x0 V695 V702 V695 0x0
0x82f: V710 = ISZERO V709
0x831: V711 = ISZERO V710
0x832: V712 = 0x83f
0x835: JUMPI 0x83f V711
---
Entry stack: [V11, 0x34f, S13, {0x34f, 0xa1a}, S11, V675, V696, 0xa9059cbb, V699, 0x0, V695, V702, V695, 0x0, V696, V704]
Stack pops: 7
Stack additions: [V710]
Exit stack: [V11, 0x34f, S13, {0x34f, 0xa1a}, S11, V675, V696, 0xa9059cbb, V699, V710]

================================

Block 0x836
[0x836:0x83e]
---
Predecessors: [0x82b]
Successors: []
---
0x836 RETURNDATASIZE
0x837 PUSH1 0x0
0x839 DUP1
0x83a RETURNDATACOPY
0x83b RETURNDATASIZE
0x83c PUSH1 0x0
0x83e REVERT
---
0x836: V713 = RETURNDATASIZE
0x837: V714 = 0x0
0x83a: RETURNDATACOPY 0x0 0x0 V713
0x83b: V715 = RETURNDATASIZE
0x83c: V716 = 0x0
0x83e: REVERT 0x0 V715
---
Entry stack: [V11, 0x34f, S7, {0x34f, 0xa1a}, S5, S4, S3, 0xa9059cbb, S1, V710]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, S7, {0x34f, 0xa1a}, S5, S4, S3, 0xa9059cbb, S1, V710]

================================

Block 0x83f
[0x83f:0x843]
---
Predecessors: [0x82b]
Successors: [0x844]
---
0x83f JUMPDEST
0x840 POP
0x841 POP
0x842 POP
0x843 POP
---
0x83f: JUMPDEST 
---
Entry stack: [V11, 0x34f, S7, {0x34f, 0xa1a}, S5, S4, S3, 0xa9059cbb, S1, V710]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x34f, S7, {0x34f, 0xa1a}, S5, S4]

================================

Block 0x844
[0x844:0x847]
---
Predecessors: [0x7b0, 0x83f, 0x8d4]
Successors: [0x34f, 0xa1a]
---
0x844 JUMPDEST
0x845 POP
0x846 POP
0x847 JUMP
---
0x844: JUMPDEST 
0x847: JUMP {0x34f, 0xa1a}
---
Entry stack: [V11, 0x34f, S3, {0x34f, 0xa1a}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x34f, S3]

================================

Block 0x848
[0x848:0x856]
---
Predecessors: [0x3c7]
Successors: [0x37e]
---
0x848 JUMPDEST
0x849 PUSH1 0x7
0x84b SLOAD
0x84c PUSH1 0x1
0x84e PUSH1 0xa0
0x850 PUSH1 0x2
0x852 EXP
0x853 SUB
0x854 AND
0x855 DUP2
0x856 JUMP
---
0x848: JUMPDEST 
0x849: V717 = 0x7
0x84b: V718 = S[0x7]
0x84c: V719 = 0x1
0x84e: V720 = 0xa0
0x850: V721 = 0x2
0x852: V722 = EXP 0x2 0xa0
0x853: V723 = SUB 0x10000000000000000000000000000000000000000 0x1
0x854: V724 = AND 0xffffffffffffffffffffffffffffffffffffffff V718
0x856: JUMP 0x37e
---
Entry stack: [V11, 0x37e]
Stack pops: 1
Stack additions: [S0, V724]
Exit stack: [V11, 0x37e, V724]

================================

Block 0x857
[0x857:0x868]
---
Predecessors: [0x3dc]
Successors: [0x30e]
---
0x857 JUMPDEST
0x858 PUSH1 0x8
0x85a PUSH1 0x20
0x85c MSTORE
0x85d PUSH1 0x0
0x85f SWAP1
0x860 DUP2
0x861 MSTORE
0x862 PUSH1 0x40
0x864 SWAP1
0x865 SHA3
0x866 SLOAD
0x867 DUP2
0x868 JUMP
---
0x857: JUMPDEST 
0x858: V725 = 0x8
0x85a: V726 = 0x20
0x85c: M[0x20] = 0x8
0x85d: V727 = 0x0
0x861: M[0x0] = V317
0x862: V728 = 0x40
0x865: V729 = SHA3 0x0 0x40
0x866: V730 = S[V729]
0x868: JUMP 0x30e
---
Entry stack: [V11, 0x30e, V317]
Stack pops: 2
Stack additions: [S1, V730]
Exit stack: [V11, 0x30e, V730]

================================

Block 0x869
[0x869:0x871]
---
Predecessors: [0x3fd]
Successors: [0x406]
---
0x869 JUMPDEST
0x86a PUSH1 0x9
0x86c SLOAD
0x86d PUSH1 0xff
0x86f AND
0x870 SWAP1
0x871 JUMP
---
0x869: JUMPDEST 
0x86a: V731 = 0x9
0x86c: V732 = S[0x9]
0x86d: V733 = 0xff
0x86f: V734 = AND 0xff V732
0x871: JUMP 0x406
---
Entry stack: [V11, 0x406]
Stack pops: 1
Stack additions: [V734]
Exit stack: [V11, V734]

================================

Block 0x872
[0x872:0x877]
---
Predecessors: [0x426]
Successors: [0x30e]
---
0x872 JUMPDEST
0x873 PUSH1 0x2
0x875 SLOAD
0x876 DUP2
0x877 JUMP
---
0x872: JUMPDEST 
0x873: V735 = 0x2
0x875: V736 = S[0x2]
0x877: JUMP 0x30e
---
Entry stack: [V11, 0x30e]
Stack pops: 1
Stack additions: [S0, V736]
Exit stack: [V11, 0x30e, V736]

================================

Block 0x878
[0x878:0x88a]
---
Predecessors: [0x43b]
Successors: [0x88b, 0x88f]
---
0x878 JUMPDEST
0x879 PUSH1 0x0
0x87b SLOAD
0x87c PUSH1 0x1
0x87e PUSH1 0xa0
0x880 PUSH1 0x2
0x882 EXP
0x883 SUB
0x884 AND
0x885 CALLER
0x886 EQ
0x887 PUSH2 0x88f
0x88a JUMPI
---
0x878: JUMPDEST 
0x879: V737 = 0x0
0x87b: V738 = S[0x0]
0x87c: V739 = 0x1
0x87e: V740 = 0xa0
0x880: V741 = 0x2
0x882: V742 = EXP 0x2 0xa0
0x883: V743 = SUB 0x10000000000000000000000000000000000000000 0x1
0x884: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff V738
0x885: V745 = CALLER
0x886: V746 = EQ V745 V744
0x887: V747 = 0x88f
0x88a: JUMPI 0x88f V746
---
Entry stack: [V11, 0x34f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f]

================================

Block 0x88b
[0x88b:0x88e]
---
Predecessors: [0x878]
Successors: []
---
0x88b PUSH1 0x0
0x88d DUP1
0x88e REVERT
---
0x88b: V748 = 0x0
0x88e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f]

================================

Block 0x88f
[0x88f:0x8a3]
---
Predecessors: [0x878]
Successors: [0xaa3]
---
0x88f JUMPDEST
0x890 PUSH1 0x0
0x892 SLOAD
0x893 PUSH2 0x8a4
0x896 SWAP1
0x897 PUSH1 0x1
0x899 PUSH1 0xa0
0x89b PUSH1 0x2
0x89d EXP
0x89e SUB
0x89f AND
0x8a0 PUSH2 0xaa3
0x8a3 JUMP
---
0x88f: JUMPDEST 
0x890: V749 = 0x0
0x892: V750 = S[0x0]
0x893: V751 = 0x8a4
0x897: V752 = 0x1
0x899: V753 = 0xa0
0x89b: V754 = 0x2
0x89d: V755 = EXP 0x2 0xa0
0x89e: V756 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89f: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff V750
0x8a0: V758 = 0xaa3
0x8a3: JUMP 0xaa3
---
Entry stack: [V11, 0x34f]
Stack pops: 0
Stack additions: [0x8a4, V757]
Exit stack: [V11, 0x34f, 0x8a4, V757]

================================

Block 0x8a4
[0x8a4:0x8a5]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x8a4 JUMPDEST
0x8a5 JUMP
---
0x8a4: JUMPDEST 
0x8a5: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8a6
[0x8a6:0x8ab]
---
Predecessors: [0x450]
Successors: [0x30e]
---
0x8a6 JUMPDEST
0x8a7 PUSH1 0x5
0x8a9 SLOAD
0x8aa DUP2
0x8ab JUMP
---
0x8a6: JUMPDEST 
0x8a7: V759 = 0x5
0x8a9: V760 = S[0x5]
0x8ab: JUMP 0x30e
---
Entry stack: [V11, 0x30e]
Stack pops: 1
Stack additions: [S0, V760]
Exit stack: [V11, 0x30e, V760]

================================

Block 0x8ac
[0x8ac:0x8bf]
---
Predecessors: [0x465]
Successors: [0x8c0, 0x8c4]
---
0x8ac JUMPDEST
0x8ad PUSH1 0x0
0x8af DUP1
0x8b0 SLOAD
0x8b1 PUSH1 0x1
0x8b3 PUSH1 0xa0
0x8b5 PUSH1 0x2
0x8b7 EXP
0x8b8 SUB
0x8b9 AND
0x8ba CALLER
0x8bb EQ
0x8bc PUSH2 0x8c4
0x8bf JUMPI
---
0x8ac: JUMPDEST 
0x8ad: V761 = 0x0
0x8b0: V762 = S[0x0]
0x8b1: V763 = 0x1
0x8b3: V764 = 0xa0
0x8b5: V765 = 0x2
0x8b7: V766 = EXP 0x2 0xa0
0x8b8: V767 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b9: V768 = AND 0xffffffffffffffffffffffffffffffffffffffff V762
0x8ba: V769 = CALLER
0x8bb: V770 = EQ V769 V768
0x8bc: V771 = 0x8c4
0x8bf: JUMPI 0x8c4 V770
---
Entry stack: [V11, 0x34f, V363]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x34f, V363, 0x0]

================================

Block 0x8c0
[0x8c0:0x8c3]
---
Predecessors: [0x8ac]
Successors: []
---
0x8c0 PUSH1 0x0
0x8c2 DUP1
0x8c3 REVERT
---
0x8c0: V772 = 0x0
0x8c3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, V363, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, V363, 0x0]

================================

Block 0x8c4
[0x8c4:0x8cf]
---
Predecessors: [0x8ac]
Successors: [0x8d0, 0x8d4]
---
0x8c4 JUMPDEST
0x8c5 POP
0x8c6 ADDRESS
0x8c7 BALANCE
0x8c8 PUSH1 0x0
0x8ca DUP2
0x8cb GT
0x8cc PUSH2 0x8d4
0x8cf JUMPI
---
0x8c4: JUMPDEST 
0x8c6: V773 = ADDRESS
0x8c7: V774 = BALANCE V773
0x8c8: V775 = 0x0
0x8cb: V776 = GT V774 0x0
0x8cc: V777 = 0x8d4
0x8cf: JUMPI 0x8d4 V776
---
Entry stack: [V11, 0x34f, V363, 0x0]
Stack pops: 1
Stack additions: [V774]
Exit stack: [V11, 0x34f, V363, V774]

================================

Block 0x8d0
[0x8d0:0x8d3]
---
Predecessors: [0x8c4]
Successors: []
---
0x8d0 PUSH1 0x0
0x8d2 DUP1
0x8d3 REVERT
---
0x8d0: V778 = 0x0
0x8d3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, V363, V774]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, V363, V774]

================================

Block 0x8d4
[0x8d4:0x8fe]
---
Predecessors: [0x8c4]
Successors: [0x844, 0x8ff]
---
0x8d4 JUMPDEST
0x8d5 PUSH1 0x40
0x8d7 MLOAD
0x8d8 PUSH1 0x1
0x8da PUSH1 0xa0
0x8dc PUSH1 0x2
0x8de EXP
0x8df SUB
0x8e0 DUP4
0x8e1 AND
0x8e2 SWAP1
0x8e3 DUP3
0x8e4 ISZERO
0x8e5 PUSH2 0x8fc
0x8e8 MUL
0x8e9 SWAP1
0x8ea DUP4
0x8eb SWAP1
0x8ec PUSH1 0x0
0x8ee DUP2
0x8ef DUP2
0x8f0 DUP2
0x8f1 DUP6
0x8f2 DUP9
0x8f3 DUP9
0x8f4 CALL
0x8f5 SWAP4
0x8f6 POP
0x8f7 POP
0x8f8 POP
0x8f9 POP
0x8fa ISZERO
0x8fb PUSH2 0x844
0x8fe JUMPI
---
0x8d4: JUMPDEST 
0x8d5: V779 = 0x40
0x8d7: V780 = M[0x40]
0x8d8: V781 = 0x1
0x8da: V782 = 0xa0
0x8dc: V783 = 0x2
0x8de: V784 = EXP 0x2 0xa0
0x8df: V785 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e1: V786 = AND V363 0xffffffffffffffffffffffffffffffffffffffff
0x8e4: V787 = ISZERO V774
0x8e5: V788 = 0x8fc
0x8e8: V789 = MUL 0x8fc V787
0x8ec: V790 = 0x0
0x8f4: V791 = CALL V789 V786 V774 V780 0x0 V780 0x0
0x8fa: V792 = ISZERO V791
0x8fb: V793 = 0x844
0x8fe: JUMPI 0x844 V792
---
Entry stack: [V11, 0x34f, V363, V774]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x34f, V363, V774]

================================

Block 0x8ff
[0x8ff:0x94a]
---
Predecessors: [0x8d4]
Successors: [0x34f]
---
0x8ff PUSH1 0x40
0x901 DUP1
0x902 MLOAD
0x903 PUSH1 0x1
0x905 PUSH1 0xa0
0x907 PUSH1 0x2
0x909 EXP
0x90a SUB
0x90b DUP5
0x90c AND
0x90d DUP2
0x90e MSTORE
0x90f PUSH1 0x20
0x911 DUP2
0x912 ADD
0x913 DUP4
0x914 SWAP1
0x915 MSTORE
0x916 PUSH1 0x0
0x918 DUP2
0x919 DUP4
0x91a ADD
0x91b MSTORE
0x91c SWAP1
0x91d MLOAD
0x91e PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x93f SWAP2
0x940 DUP2
0x941 SWAP1
0x942 SUB
0x943 PUSH1 0x60
0x945 ADD
0x946 SWAP1
0x947 LOG1
0x948 POP
0x949 POP
0x94a JUMP
---
0x8ff: V794 = 0x40
0x902: V795 = M[0x40]
0x903: V796 = 0x1
0x905: V797 = 0xa0
0x907: V798 = 0x2
0x909: V799 = EXP 0x2 0xa0
0x90a: V800 = SUB 0x10000000000000000000000000000000000000000 0x1
0x90c: V801 = AND V363 0xffffffffffffffffffffffffffffffffffffffff
0x90e: M[V795] = V801
0x90f: V802 = 0x20
0x912: V803 = ADD V795 0x20
0x915: M[V803] = V774
0x916: V804 = 0x0
0x91a: V805 = ADD 0x40 V795
0x91b: M[V805] = 0x0
0x91d: V806 = M[0x40]
0x91e: V807 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x942: V808 = SUB V795 V806
0x943: V809 = 0x60
0x945: V810 = ADD 0x60 V808
0x947: LOG V806 V810 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x94a: JUMP 0x34f
---
Entry stack: [V11, 0x34f, V363, V774]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x94b
[0x94b:0x950]
---
Predecessors: [0x486]
Successors: [0x30e]
---
0x94b JUMPDEST
0x94c PUSH1 0x4
0x94e SLOAD
0x94f DUP2
0x950 JUMP
---
0x94b: JUMPDEST 
0x94c: V811 = 0x4
0x94e: V812 = S[0x4]
0x950: JUMP 0x30e
---
Entry stack: [V11, 0x30e]
Stack pops: 1
Stack additions: [S0, V812]
Exit stack: [V11, 0x30e, V812]

================================

Block 0x951
[0x951:0x964]
---
Predecessors: [0x49b]
Successors: [0x965, 0x969]
---
0x951 JUMPDEST
0x952 PUSH1 0x0
0x954 DUP1
0x955 SLOAD
0x956 PUSH1 0x1
0x958 PUSH1 0xa0
0x95a PUSH1 0x2
0x95c EXP
0x95d SUB
0x95e AND
0x95f CALLER
0x960 EQ
0x961 PUSH2 0x969
0x964 JUMPI
---
0x951: JUMPDEST 
0x952: V813 = 0x0
0x955: V814 = S[0x0]
0x956: V815 = 0x1
0x958: V816 = 0xa0
0x95a: V817 = 0x2
0x95c: V818 = EXP 0x2 0xa0
0x95d: V819 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95e: V820 = AND 0xffffffffffffffffffffffffffffffffffffffff V814
0x95f: V821 = CALLER
0x960: V822 = EQ V821 V820
0x961: V823 = 0x969
0x964: JUMPI 0x969 V822
---
Entry stack: [V11, 0x34f]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x34f, 0x0]

================================

Block 0x965
[0x965:0x968]
---
Predecessors: [0x951]
Successors: []
---
0x965 PUSH1 0x0
0x967 DUP1
0x968 REVERT
---
0x965: V824 = 0x0
0x968: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, 0x0]

================================

Block 0x969
[0x969:0x973]
---
Predecessors: [0x951]
Successors: [0x974, 0x978]
---
0x969 JUMPDEST
0x96a PUSH1 0x3
0x96c SLOAD
0x96d TIMESTAMP
0x96e LT
0x96f ISZERO
0x970 PUSH2 0x978
0x973 JUMPI
---
0x969: JUMPDEST 
0x96a: V825 = 0x3
0x96c: V826 = S[0x3]
0x96d: V827 = TIMESTAMP
0x96e: V828 = LT V827 V826
0x96f: V829 = ISZERO V828
0x970: V830 = 0x978
0x973: JUMPI 0x978 V829
---
Entry stack: [V11, 0x34f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, 0x0]

================================

Block 0x974
[0x974:0x977]
---
Predecessors: [0x969]
Successors: []
---
0x974 PUSH1 0x0
0x976 DUP1
0x977 REVERT
---
0x974: V831 = 0x0
0x977: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, 0x0]

================================

Block 0x978
[0x978:0x983]
---
Predecessors: [0x969]
Successors: [0x984, 0x988]
---
0x978 JUMPDEST
0x979 PUSH1 0x9
0x97b SLOAD
0x97c PUSH1 0xff
0x97e AND
0x97f ISZERO
0x980 PUSH2 0x988
0x983 JUMPI
---
0x978: JUMPDEST 
0x979: V832 = 0x9
0x97b: V833 = S[0x9]
0x97c: V834 = 0xff
0x97e: V835 = AND 0xff V833
0x97f: V836 = ISZERO V835
0x980: V837 = 0x988
0x983: JUMPI 0x988 V836
---
Entry stack: [V11, 0x34f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, 0x0]

================================

Block 0x984
[0x984:0x987]
---
Predecessors: [0x978]
Successors: []
---
0x984 PUSH1 0x0
0x986 DUP1
0x987 REVERT
---
0x984: V838 = 0x0
0x987: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, 0x0]

================================

Block 0x988
[0x988:0x9b8]
---
Predecessors: [0x978]
Successors: [0x9b9, 0xa05]
---
0x988 JUMPDEST
0x989 POP
0x98a PUSH1 0x1
0x98c SLOAD
0x98d PUSH1 0x40
0x98f MLOAD
0x990 ADDRESS
0x991 BALANCE
0x992 SWAP2
0x993 PUSH1 0x1
0x995 PUSH1 0xa0
0x997 PUSH1 0x2
0x999 EXP
0x99a SUB
0x99b AND
0x99c SWAP1
0x99d DUP3
0x99e ISZERO
0x99f PUSH2 0x8fc
0x9a2 MUL
0x9a3 SWAP1
0x9a4 DUP4
0x9a5 SWAP1
0x9a6 PUSH1 0x0
0x9a8 DUP2
0x9a9 DUP2
0x9aa DUP2
0x9ab DUP6
0x9ac DUP9
0x9ad DUP9
0x9ae CALL
0x9af SWAP4
0x9b0 POP
0x9b1 POP
0x9b2 POP
0x9b3 POP
0x9b4 ISZERO
0x9b5 PUSH2 0xa05
0x9b8 JUMPI
---
0x988: JUMPDEST 
0x98a: V839 = 0x1
0x98c: V840 = S[0x1]
0x98d: V841 = 0x40
0x98f: V842 = M[0x40]
0x990: V843 = ADDRESS
0x991: V844 = BALANCE V843
0x993: V845 = 0x1
0x995: V846 = 0xa0
0x997: V847 = 0x2
0x999: V848 = EXP 0x2 0xa0
0x99a: V849 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99b: V850 = AND 0xffffffffffffffffffffffffffffffffffffffff V840
0x99e: V851 = ISZERO V844
0x99f: V852 = 0x8fc
0x9a2: V853 = MUL 0x8fc V851
0x9a6: V854 = 0x0
0x9ae: V855 = CALL V853 V850 V844 V842 0x0 V842 0x0
0x9b4: V856 = ISZERO V855
0x9b5: V857 = 0xa05
0x9b8: JUMPI 0xa05 V856
---
Entry stack: [V11, 0x34f, 0x0]
Stack pops: 1
Stack additions: [V844]
Exit stack: [V11, 0x34f, V844]

================================

Block 0x9b9
[0x9b9:0xa04]
---
Predecessors: [0x988]
Successors: [0xa05]
---
0x9b9 PUSH1 0x1
0x9bb SLOAD
0x9bc PUSH1 0x40
0x9be DUP1
0x9bf MLOAD
0x9c0 PUSH1 0x1
0x9c2 PUSH1 0xa0
0x9c4 PUSH1 0x2
0x9c6 EXP
0x9c7 SUB
0x9c8 SWAP1
0x9c9 SWAP3
0x9ca AND
0x9cb DUP3
0x9cc MSTORE
0x9cd PUSH1 0x20
0x9cf DUP3
0x9d0 ADD
0x9d1 DUP4
0x9d2 SWAP1
0x9d3 MSTORE
0x9d4 PUSH1 0x0
0x9d6 DUP3
0x9d7 DUP3
0x9d8 ADD
0x9d9 MSTORE
0x9da MLOAD
0x9db PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x9fc SWAP2
0x9fd DUP2
0x9fe SWAP1
0x9ff SUB
0xa00 PUSH1 0x60
0xa02 ADD
0xa03 SWAP1
0xa04 LOG1
---
0x9b9: V858 = 0x1
0x9bb: V859 = S[0x1]
0x9bc: V860 = 0x40
0x9bf: V861 = M[0x40]
0x9c0: V862 = 0x1
0x9c2: V863 = 0xa0
0x9c4: V864 = 0x2
0x9c6: V865 = EXP 0x2 0xa0
0x9c7: V866 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ca: V867 = AND V859 0xffffffffffffffffffffffffffffffffffffffff
0x9cc: M[V861] = V867
0x9cd: V868 = 0x20
0x9d0: V869 = ADD V861 0x20
0x9d3: M[V869] = V844
0x9d4: V870 = 0x0
0x9d8: V871 = ADD 0x40 V861
0x9d9: M[V871] = 0x0
0x9da: V872 = M[0x40]
0x9db: V873 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x9ff: V874 = SUB V861 V872
0xa00: V875 = 0x60
0xa02: V876 = ADD 0x60 V874
0xa04: LOG V872 V876 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V11, 0x34f, V844]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x34f, V844]

================================

Block 0xa05
[0xa05:0xa19]
---
Predecessors: [0x988, 0x9b9]
Successors: [0x71e]
---
0xa05 JUMPDEST
0xa06 PUSH1 0x1
0xa08 SLOAD
0xa09 PUSH2 0xa1a
0xa0c SWAP1
0xa0d PUSH1 0x1
0xa0f PUSH1 0xa0
0xa11 PUSH1 0x2
0xa13 EXP
0xa14 SUB
0xa15 AND
0xa16 PUSH2 0x71e
0xa19 JUMP
---
0xa05: JUMPDEST 
0xa06: V877 = 0x1
0xa08: V878 = S[0x1]
0xa09: V879 = 0xa1a
0xa0d: V880 = 0x1
0xa0f: V881 = 0xa0
0xa11: V882 = 0x2
0xa13: V883 = EXP 0x2 0xa0
0xa14: V884 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa15: V885 = AND 0xffffffffffffffffffffffffffffffffffffffff V878
0xa16: V886 = 0x71e
0xa19: JUMP 0x71e
---
Entry stack: [V11, 0x34f, V844]
Stack pops: 0
Stack additions: [0xa1a, V885]
Exit stack: [V11, 0x34f, V844, 0xa1a, V885]

================================

Block 0xa1a
[0xa1a:0xa29]
---
Predecessors: [0x844]
Successors: [0x34f]
---
0xa1a JUMPDEST
0xa1b POP
0xa1c PUSH1 0x9
0xa1e DUP1
0xa1f SLOAD
0xa20 PUSH1 0xff
0xa22 NOT
0xa23 AND
0xa24 PUSH1 0x1
0xa26 OR
0xa27 SWAP1
0xa28 SSTORE
0xa29 JUMP
---
0xa1a: JUMPDEST 
0xa1c: V887 = 0x9
0xa1f: V888 = S[0x9]
0xa20: V889 = 0xff
0xa22: V890 = NOT 0xff
0xa23: V891 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V888
0xa24: V892 = 0x1
0xa26: V893 = OR 0x1 V891
0xa28: S[0x9] = V893
0xa29: JUMP 0x34f
---
Entry stack: [V11, 0x34f, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xa2a
[0xa2a:0xa37]
---
Predecessors: [0x4b0]
Successors: [0xa38, 0xa42]
---
0xa2a JUMPDEST
0xa2b PUSH1 0x0
0xa2d TIMESTAMP
0xa2e PUSH1 0x3
0xa30 SLOAD
0xa31 GT
0xa32 DUP1
0xa33 ISZERO
0xa34 PUSH2 0xa42
0xa37 JUMPI
---
0xa2a: JUMPDEST 
0xa2b: V894 = 0x0
0xa2d: V895 = TIMESTAMP
0xa2e: V896 = 0x3
0xa30: V897 = S[0x3]
0xa31: V898 = GT V897 V895
0xa33: V899 = ISZERO V898
0xa34: V900 = 0xa42
0xa37: JUMPI 0xa42 V899
---
Entry stack: [V11, 0x30e]
Stack pops: 0
Stack additions: [0x0, V898]
Exit stack: [V11, 0x30e, 0x0, V898]

================================

Block 0xa38
[0xa38:0xa41]
---
Predecessors: [0xa2a]
Successors: [0xa42]
---
0xa38 POP
0xa39 PUSH1 0x3c
0xa3b TIMESTAMP
0xa3c PUSH1 0x3
0xa3e SLOAD
0xa3f SUB
0xa40 LT
0xa41 ISZERO
---
0xa39: V901 = 0x3c
0xa3b: V902 = TIMESTAMP
0xa3c: V903 = 0x3
0xa3e: V904 = S[0x3]
0xa3f: V905 = SUB V904 V902
0xa40: V906 = LT V905 0x3c
0xa41: V907 = ISZERO V906
---
Entry stack: [V11, 0x30e, 0x0, V898]
Stack pops: 1
Stack additions: [V907]
Exit stack: [V11, 0x30e, 0x0, V907]

================================

Block 0xa42
[0xa42:0xa46]
---
Predecessors: [0xa2a, 0xa38]
Successors: [0xa47, 0xa4d]
---
0xa42 JUMPDEST
0xa43 PUSH2 0xa4d
0xa46 JUMPI
---
0xa42: JUMPDEST 
0xa43: V908 = 0xa4d
0xa46: JUMPI 0xa4d S0
---
Entry stack: [V11, 0x30e, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x30e, 0x0]

================================

Block 0xa47
[0xa47:0xa4c]
---
Predecessors: [0xa42]
Successors: [0xa58]
---
0xa47 PUSH1 0x0
0xa49 PUSH2 0xa58
0xa4c JUMP
---
0xa47: V909 = 0x0
0xa49: V910 = 0xa58
0xa4c: JUMP 0xa58
---
Entry stack: [V11, 0x30e, 0x0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x30e, 0x0, 0x0]

================================

Block 0xa4d
[0xa4d:0xa57]
---
Predecessors: [0xa42]
Successors: [0xa58]
---
0xa4d JUMPDEST
0xa4e PUSH1 0x3
0xa50 SLOAD
0xa51 PUSH1 0x3c
0xa53 SWAP1
0xa54 TIMESTAMP
0xa55 SWAP1
0xa56 SUB
0xa57 DIV
---
0xa4d: JUMPDEST 
0xa4e: V911 = 0x3
0xa50: V912 = S[0x3]
0xa51: V913 = 0x3c
0xa54: V914 = TIMESTAMP
0xa56: V915 = SUB V912 V914
0xa57: V916 = DIV V915 0x3c
---
Entry stack: [V11, 0x30e, 0x0]
Stack pops: 0
Stack additions: [V916]
Exit stack: [V11, 0x30e, 0x0, V916]

================================

Block 0xa58
[0xa58:0xa5c]
---
Predecessors: [0xa47, 0xa4d]
Successors: [0x30e]
---
0xa58 JUMPDEST
0xa59 SWAP1
0xa5a POP
0xa5b SWAP1
0xa5c JUMP
---
0xa58: JUMPDEST 
0xa5c: JUMP 0x30e
---
Entry stack: [V11, 0x30e, 0x0, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0xa5d
[0xa5d:0xa6f]
---
Predecessors: [0x4c5]
Successors: [0xa70, 0xa74]
---
0xa5d JUMPDEST
0xa5e PUSH1 0x0
0xa60 SLOAD
0xa61 PUSH1 0x1
0xa63 PUSH1 0xa0
0xa65 PUSH1 0x2
0xa67 EXP
0xa68 SUB
0xa69 AND
0xa6a CALLER
0xa6b EQ
0xa6c PUSH2 0xa74
0xa6f JUMPI
---
0xa5d: JUMPDEST 
0xa5e: V917 = 0x0
0xa60: V918 = S[0x0]
0xa61: V919 = 0x1
0xa63: V920 = 0xa0
0xa65: V921 = 0x2
0xa67: V922 = EXP 0x2 0xa0
0xa68: V923 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa69: V924 = AND 0xffffffffffffffffffffffffffffffffffffffff V918
0xa6a: V925 = CALLER
0xa6b: V926 = EQ V925 V924
0xa6c: V927 = 0xa74
0xa6f: JUMPI 0xa74 V926
---
Entry stack: [V11, 0x34f, V395]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, V395]

================================

Block 0xa70
[0xa70:0xa73]
---
Predecessors: [0xa5d]
Successors: []
---
0xa70 PUSH1 0x0
0xa72 DUP1
0xa73 REVERT
---
0xa70: V928 = 0x0
0xa73: REVERT 0x0 0x0
---
Entry stack: [V11, 0x34f, V395]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, V395]

================================

Block 0xa74
[0xa74:0xaa2]
---
Predecessors: [0xa5d]
Successors: [0x34f]
---
0xa74 JUMPDEST
0xa75 PUSH1 0x0
0xa77 DUP1
0xa78 SLOAD
0xa79 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8e NOT
0xa8f AND
0xa90 PUSH1 0x1
0xa92 PUSH1 0xa0
0xa94 PUSH1 0x2
0xa96 EXP
0xa97 SUB
0xa98 SWAP3
0xa99 SWAP1
0xa9a SWAP3
0xa9b AND
0xa9c SWAP2
0xa9d SWAP1
0xa9e SWAP2
0xa9f OR
0xaa0 SWAP1
0xaa1 SSTORE
0xaa2 JUMP
---
0xa74: JUMPDEST 
0xa75: V929 = 0x0
0xa78: V930 = S[0x0]
0xa79: V931 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8e: V932 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa8f: V933 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V930
0xa90: V934 = 0x1
0xa92: V935 = 0xa0
0xa94: V936 = 0x2
0xa96: V937 = EXP 0x2 0xa0
0xa97: V938 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa9b: V939 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0xa9f: V940 = OR V939 V933
0xaa1: S[0x0] = V940
0xaa2: JUMP 0x34f
---
Entry stack: [V11, 0x34f, V395]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xaa3
[0xaa3:0xab6]
---
Predecessors: [0x4e6, 0x88f]
Successors: [0xab7, 0xabb]
---
0xaa3 JUMPDEST
0xaa4 PUSH1 0x0
0xaa6 DUP1
0xaa7 SLOAD
0xaa8 PUSH1 0x1
0xaaa PUSH1 0xa0
0xaac PUSH1 0x2
0xaae EXP
0xaaf SUB
0xab0 AND
0xab1 CALLER
0xab2 EQ
0xab3 PUSH2 0xabb
0xab6 JUMPI
---
0xaa3: JUMPDEST 
0xaa4: V941 = 0x0
0xaa7: V942 = S[0x0]
0xaa8: V943 = 0x1
0xaaa: V944 = 0xa0
0xaac: V945 = 0x2
0xaae: V946 = EXP 0x2 0xa0
0xaaf: V947 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab0: V948 = AND 0xffffffffffffffffffffffffffffffffffffffff V942
0xab1: V949 = CALLER
0xab2: V950 = EQ V949 V948
0xab3: V951 = 0xabb
0xab6: JUMPI 0xabb V950
---
Entry stack: [V11, S2, {0x34f, 0x8a4}, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, S2, {0x34f, 0x8a4}, S0, 0x0]

================================

Block 0xab7
[0xab7:0xaba]
---
Predecessors: [0xaa3]
Successors: []
---
0xab7 PUSH1 0x0
0xab9 DUP1
0xaba REVERT
---
0xab7: V952 = 0x0
0xaba: REVERT 0x0 0x0
---
Entry stack: [V11, S3, {0x34f, 0x8a4}, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S3, {0x34f, 0x8a4}, S1, 0x0]

================================

Block 0xabb
[0xabb:0xb06]
---
Predecessors: [0xaa3]
Successors: [0xb07, 0xb0b]
---
0xabb JUMPDEST
0xabc PUSH1 0x7
0xabe SLOAD
0xabf PUSH1 0x40
0xac1 DUP1
0xac2 MLOAD
0xac3 PUSH1 0xe0
0xac5 PUSH1 0x2
0xac7 EXP
0xac8 PUSH4 0x70a08231
0xacd MUL
0xace DUP2
0xacf MSTORE
0xad0 ADDRESS
0xad1 PUSH1 0x4
0xad3 DUP3
0xad4 ADD
0xad5 MSTORE
0xad6 SWAP1
0xad7 MLOAD
0xad8 PUSH1 0x1
0xada PUSH1 0xa0
0xadc PUSH1 0x2
0xade EXP
0xadf SUB
0xae0 SWAP1
0xae1 SWAP3
0xae2 AND
0xae3 SWAP2
0xae4 PUSH4 0x70a08231
0xae9 SWAP2
0xaea PUSH1 0x24
0xaec DUP1
0xaed DUP3
0xaee ADD
0xaef SWAP3
0xaf0 PUSH1 0x20
0xaf2 SWAP3
0xaf3 SWAP1
0xaf4 SWAP2
0xaf5 SWAP1
0xaf6 DUP3
0xaf7 SWAP1
0xaf8 SUB
0xaf9 ADD
0xafa DUP2
0xafb PUSH1 0x0
0xafd DUP8
0xafe DUP1
0xaff EXTCODESIZE
0xb00 ISZERO
0xb01 DUP1
0xb02 ISZERO
0xb03 PUSH2 0xb0b
0xb06 JUMPI
---
0xabb: JUMPDEST 
0xabc: V953 = 0x7
0xabe: V954 = S[0x7]
0xabf: V955 = 0x40
0xac2: V956 = M[0x40]
0xac3: V957 = 0xe0
0xac5: V958 = 0x2
0xac7: V959 = EXP 0x2 0xe0
0xac8: V960 = 0x70a08231
0xacd: V961 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xacf: M[V956] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xad0: V962 = ADDRESS
0xad1: V963 = 0x4
0xad4: V964 = ADD V956 0x4
0xad5: M[V964] = V962
0xad7: V965 = M[0x40]
0xad8: V966 = 0x1
0xada: V967 = 0xa0
0xadc: V968 = 0x2
0xade: V969 = EXP 0x2 0xa0
0xadf: V970 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae2: V971 = AND V954 0xffffffffffffffffffffffffffffffffffffffff
0xae4: V972 = 0x70a08231
0xaea: V973 = 0x24
0xaee: V974 = ADD V956 0x24
0xaf0: V975 = 0x20
0xaf8: V976 = SUB V956 V965
0xaf9: V977 = ADD V976 0x24
0xafb: V978 = 0x0
0xaff: V979 = EXTCODESIZE V971
0xb00: V980 = ISZERO V979
0xb02: V981 = ISZERO V980
0xb03: V982 = 0xb0b
0xb06: JUMPI 0xb0b V981
---
Entry stack: [V11, S3, {0x34f, 0x8a4}, S1, 0x0]
Stack pops: 0
Stack additions: [V971, 0x70a08231, V974, 0x20, V965, V977, V965, 0x0, V971, V980]
Exit stack: [V11, S3, {0x34f, 0x8a4}, S1, 0x0, V971, 0x70a08231, V974, 0x20, V965, V977, V965, 0x0, V971, V980]

================================

Block 0xb07
[0xb07:0xb0a]
---
Predecessors: [0xabb]
Successors: []
---
0xb07 PUSH1 0x0
0xb09 DUP1
0xb0a REVERT
---
0xb07: V983 = 0x0
0xb0a: REVERT 0x0 0x0
---
Entry stack: [V11, S13, {0x34f, 0x8a4}, S11, 0x0, V971, 0x70a08231, V974, 0x20, V965, V977, V965, 0x0, V971, V980]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, {0x34f, 0x8a4}, S11, 0x0, V971, 0x70a08231, V974, 0x20, V965, V977, V965, 0x0, V971, V980]

================================

Block 0xb0b
[0xb0b:0xb15]
---
Predecessors: [0xabb]
Successors: [0xb16, 0xb1f]
---
0xb0b JUMPDEST
0xb0c POP
0xb0d GAS
0xb0e CALL
0xb0f ISZERO
0xb10 DUP1
0xb11 ISZERO
0xb12 PUSH2 0xb1f
0xb15 JUMPI
---
0xb0b: JUMPDEST 
0xb0d: V984 = GAS
0xb0e: V985 = CALL V984 V971 0x0 V965 V977 V965 0x20
0xb0f: V986 = ISZERO V985
0xb11: V987 = ISZERO V986
0xb12: V988 = 0xb1f
0xb15: JUMPI 0xb1f V987
---
Entry stack: [V11, S13, {0x34f, 0x8a4}, S11, 0x0, V971, 0x70a08231, V974, 0x20, V965, V977, V965, 0x0, V971, V980]
Stack pops: 7
Stack additions: [V986]
Exit stack: [V11, S13, {0x34f, 0x8a4}, S11, 0x0, V971, 0x70a08231, V974, V986]

================================

Block 0xb16
[0xb16:0xb1e]
---
Predecessors: [0xb0b]
Successors: []
---
0xb16 RETURNDATASIZE
0xb17 PUSH1 0x0
0xb19 DUP1
0xb1a RETURNDATACOPY
0xb1b RETURNDATASIZE
0xb1c PUSH1 0x0
0xb1e REVERT
---
0xb16: V989 = RETURNDATASIZE
0xb17: V990 = 0x0
0xb1a: RETURNDATACOPY 0x0 0x0 V989
0xb1b: V991 = RETURNDATASIZE
0xb1c: V992 = 0x0
0xb1e: REVERT 0x0 V991
---
Entry stack: [V11, S7, {0x34f, 0x8a4}, S5, 0x0, V971, 0x70a08231, V974, V986]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, {0x34f, 0x8a4}, S5, 0x0, V971, 0x70a08231, V974, V986]

================================

Block 0xb1f
[0xb1f:0xb30]
---
Predecessors: [0xb0b]
Successors: [0xb31, 0xb35]
---
0xb1f JUMPDEST
0xb20 POP
0xb21 POP
0xb22 POP
0xb23 POP
0xb24 PUSH1 0x40
0xb26 MLOAD
0xb27 RETURNDATASIZE
0xb28 PUSH1 0x20
0xb2a DUP2
0xb2b LT
0xb2c ISZERO
0xb2d PUSH2 0xb35
0xb30 JUMPI
---
0xb1f: JUMPDEST 
0xb24: V993 = 0x40
0xb26: V994 = M[0x40]
0xb27: V995 = RETURNDATASIZE
0xb28: V996 = 0x20
0xb2b: V997 = LT V995 0x20
0xb2c: V998 = ISZERO V997
0xb2d: V999 = 0xb35
0xb30: JUMPI 0xb35 V998
---
Entry stack: [V11, S7, {0x34f, 0x8a4}, S5, 0x0, V971, 0x70a08231, V974, V986]
Stack pops: 4
Stack additions: [V994, V995]
Exit stack: [V11, S7, {0x34f, 0x8a4}, S5, 0x0, V994, V995]

================================

Block 0xb31
[0xb31:0xb34]
---
Predecessors: [0xb1f]
Successors: []
---
0xb31 PUSH1 0x0
0xb33 DUP1
0xb34 REVERT
---
0xb31: V1000 = 0x0
0xb34: REVERT 0x0 0x0
---
Entry stack: [V11, S5, {0x34f, 0x8a4}, S3, 0x0, V994, V995]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S5, {0x34f, 0x8a4}, S3, 0x0, V994, V995]

================================

Block 0xb35
[0xb35:0xb3f]
---
Predecessors: [0xb1f]
Successors: [0xb40, 0xb44]
---
0xb35 JUMPDEST
0xb36 POP
0xb37 MLOAD
0xb38 SWAP1
0xb39 POP
0xb3a DUP1
0xb3b ISZERO
0xb3c PUSH2 0xb44
0xb3f JUMPI
---
0xb35: JUMPDEST 
0xb37: V1001 = M[V994]
0xb3b: V1002 = ISZERO V1001
0xb3c: V1003 = 0xb44
0xb3f: JUMPI 0xb44 V1002
---
Entry stack: [V11, S5, {0x34f, 0x8a4}, S3, 0x0, V994, V995]
Stack pops: 3
Stack additions: [V1001]
Exit stack: [V11, S5, {0x34f, 0x8a4}, S3, V1001]

================================

Block 0xb40
[0xb40:0xb43]
---
Predecessors: [0xb35]
Successors: []
---
0xb40 PUSH1 0x0
0xb42 DUP1
0xb43 REVERT
---
0xb40: V1004 = 0x0
0xb43: REVERT 0x0 0x0
---
Entry stack: [V11, S3, {0x34f, 0x8a4}, S1, V1001]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S3, {0x34f, 0x8a4}, S1, V1001]

================================

Block 0xb44
[0xb44:0xb4f]
---
Predecessors: [0xb35]
Successors: []
---
0xb44 JUMPDEST
0xb45 DUP2
0xb46 PUSH1 0x1
0xb48 PUSH1 0xa0
0xb4a PUSH1 0x2
0xb4c EXP
0xb4d SUB
0xb4e AND
0xb4f SELFDESTRUCT
---
0xb44: JUMPDEST 
0xb46: V1005 = 0x1
0xb48: V1006 = 0xa0
0xb4a: V1007 = 0x2
0xb4c: V1008 = EXP 0x2 0xa0
0xb4d: V1009 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4e: V1010 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xb4f: SELFDESTRUCT V1010
---
Entry stack: [V11, S3, {0x34f, 0x8a4}, S1, V1001]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, S3, {0x34f, 0x8a4}, S1, V1001]

================================

Block 0xb50
[0xb50:0xb5a]
---
Predecessors: [0x63c, 0x655]
Successors: [0xb5b, 0xb5c]
---
0xb50 JUMPDEST
0xb51 PUSH1 0x0
0xb53 DUP3
0xb54 DUP3
0xb55 GT
0xb56 ISZERO
0xb57 PUSH2 0xb5c
0xb5a JUMPI
---
0xb50: JUMPDEST 
0xb51: V1011 = 0x0
0xb55: V1012 = GT S0 S1
0xb56: V1013 = ISZERO V1012
0xb57: V1014 = 0xb5c
0xb5a: JUMPI 0xb5c V1013
---
Entry stack: [V11, 0x34f, S9, S8, S7, S6, S5, S4, S3, {0x64e, 0x67d}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x34f, S9, S8, S7, S6, S5, S4, S3, {0x64e, 0x67d}, S1, S0, 0x0]

================================

Block 0xb5b
[0xb5b:0xb5b]
---
Predecessors: [0xb50]
Successors: []
---
0xb5b INVALID
---
0xb5b: INVALID 
---
Entry stack: [V11, 0x34f, S10, S9, S8, S7, S6, S5, S4, {0x64e, 0x67d}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x34f, S10, S9, S8, S7, S6, S5, S4, {0x64e, 0x67d}, S2, S1, 0x0]

================================

Block 0xb5c
[0xb5c:0xb61]
---
Predecessors: [0xb50]
Successors: [0x64e, 0x67d]
---
0xb5c JUMPDEST
0xb5d POP
0xb5e SWAP1
0xb5f SUB
0xb60 SWAP1
0xb61 JUMP
---
0xb5c: JUMPDEST 
0xb5f: V1015 = SUB S2 S1
0xb61: JUMP {0x64e, 0x67d}
---
Entry stack: [V11, 0x34f, S10, S9, S8, S7, S6, S5, S4, {0x64e, 0x67d}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1015]
Exit stack: [V11, 0x34f, S10, S9, S8, S7, S6, S5, S4, V1015]

================================

Block 0xb62
[0xb62:0xb8f]
---
Predecessors: []
Successors: []
---
0xb62 STOP
0xb63 LOG1
0xb64 PUSH6 0x627a7a723058
0xb6b SHA3
0xb6c MISSING 0xe0
0xb6d MISSING 0xd1
0xb6e CALLDATALOAD
0xb6f SHR
0xb70 BYTE
0xb71 PUSH30 0x7c534838203b2cea04ab5156040f80ed1a7938412d23e7412a100029
---
0xb62: STOP 
0xb63: LOG S0 S1 S2
0xb64: V1016 = 0x627a7a723058
0xb6b: V1017 = SHA3 0x627a7a723058 S3
0xb6c: MISSING 0xe0
0xb6d: MISSING 0xd1
0xb6e: V1018 = CALLDATALOAD S0
0xb6f: V1019 = SHR V1018 S1
0xb70: V1020 = BYTE V1019 S2
0xb71: V1021 = 0x7c534838203b2cea04ab5156040f80ed1a7938412d23e7412a100029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1017, 0x7c534838203b2cea04ab5156040f80ed1a7938412d23e7412a100029, V1020]
Exit stack: []

================================

Function 0:
Public function signature: 0x23548b8b
Entry block: 0x2f9
Exit block: 0x30e
Body: 0x2f9, 0x301, 0x305, 0x30e, 0x537

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x320
Exit block: 0x30e
Body: 0x30e, 0x320, 0x328, 0x32c, 0x53d

Function 2:
Public function signature: 0x332d4357
Entry block: 0x335
Exit block: 0x34f
Body: 0x335, 0x33d, 0x341, 0x34f, 0x543, 0x556, 0x55a

Function 3:
Public function signature: 0x34ec740a
Entry block: 0x351
Exit block: 0x6f3
Body: 0x34f, 0x351, 0x359, 0x35d, 0x56d, 0x581, 0x585, 0x592, 0x596, 0x5e2, 0x5e6, 0x5f1, 0x5fa, 0x60c, 0x610, 0x61f, 0x624, 0x62b, 0x62f, 0x638, 0x63c, 0x64e, 0x655, 0x67d, 0x6e4, 0x6e8, 0x6f3, 0x6fc, 0x701

Function 4:
Public function signature: 0x38af3eed
Entry block: 0x369
Exit block: 0x37e
Body: 0x369, 0x371, 0x375, 0x37e, 0x70f

Function 5:
Public function signature: 0x5affbd97
Entry block: 0x39a
Exit block: 0x3a2
Body: 0x34f, 0x39a, 0x3a2, 0x3a6

Function 6:
Public function signature: 0x6e66f6e9
Entry block: 0x3bb
Exit block: 0x37e
Body: 0x37e, 0x3bb, 0x3c3, 0x3c7, 0x848

Function 7:
Public function signature: 0x70a08231
Entry block: 0x3d0
Exit block: 0x30e
Body: 0x30e, 0x3d0, 0x3d8, 0x3dc, 0x857

Function 8:
Public function signature: 0x70f48d43
Entry block: 0x3f1
Exit block: 0x406
Body: 0x3f1, 0x3f9, 0x3fd, 0x406, 0x869

Function 9:
Public function signature: 0x7b3e5e7b
Entry block: 0x41a
Exit block: 0x30e
Body: 0x30e, 0x41a, 0x422, 0x426, 0x872

Function 10:
Public function signature: 0x83197ef0
Entry block: 0x42f
Exit block: 0xb40
Body: 0x42f, 0x437, 0x43b, 0x878, 0x88b, 0x88f, 0xaa3, 0xab7, 0xabb, 0xb07, 0xb0b, 0xb16, 0xb1f, 0xb31, 0xb35, 0xb40, 0xb44

Function 11:
Public function signature: 0x8486a79a
Entry block: 0x444
Exit block: 0x30e
Body: 0x30e, 0x444, 0x44c, 0x450, 0x8a6

Function 12:
Public function signature: 0x89285fa1
Entry block: 0x459
Exit block: 0x34f
Body: 0x34f, 0x459, 0x461, 0x465, 0x8ac, 0x8c0, 0x8c4, 0x8d0, 0x8d4, 0x8ff

Function 13:
Public function signature: 0xa035b1fe
Entry block: 0x47a
Exit block: 0x30e
Body: 0x30e, 0x47a, 0x482, 0x486, 0x94b

Function 14:
Public function signature: 0xee55efee
Entry block: 0x48f
Exit block: 0x34f
Body: 0x34f, 0x48f, 0x497, 0x49b, 0x951, 0x965, 0x969, 0x974, 0x978, 0x984, 0x988, 0x9b9, 0xa05, 0xa1a

Function 15:
Public function signature: 0xefb98bcf
Entry block: 0x4a4
Exit block: 0x30e
Body: 0x30e, 0x4a4, 0x4ac, 0x4b0, 0xa2a, 0xa38, 0xa42, 0xa47, 0xa4d, 0xa58

Function 16:
Public function signature: 0xf2fde38b
Entry block: 0x4b9
Exit block: 0x34f
Body: 0x34f, 0x4b9, 0x4c1, 0x4c5, 0xa5d, 0xa70, 0xa74

Function 17:
Public function signature: 0xf5074f41
Entry block: 0x4da
Exit block: 0xb40
Body: 0x4da, 0x4e2, 0x4e6, 0xaa3, 0xab7, 0xabb, 0xb07, 0xb0b, 0xb16, 0xb1f, 0xb31, 0xb35, 0xb40, 0xb44

Function 18:
Public fallback function
Entry block: 0xfb
Exit block: 0x2a7
Body: 0xfb, 0x2a7, 0x4fb, 0x505, 0x50c, 0x51b, 0x51c, 0x523

Function 19:
Private function
Entry block: 0x71e
Exit block: 0x844
Body: 0x71e, 0x736, 0x786, 0x79a, 0x7b0, 0x7be, 0x82b, 0x83f, 0x844

Function 20:
Private function
Entry block: 0x52a
Exit block: 0x524
Body: 0x114, 0x127, 0x136, 0x156, 0x164, 0x1b3, 0x1c7, 0x1dd, 0x1ea, 0x20a, 0x524, 0x52a

Function 21:
Private function
Entry block: 0xb50
Exit block: 0xb5c
Body: 0xb50, 0xb5c

