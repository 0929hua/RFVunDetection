Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x33bbae93
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x33bbae93
0x3c: V13 = EQ 0x33bbae93 V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x9a]
---
0x41 DUP1
0x42 PUSH4 0x80959721
0x47 EQ
0x48 PUSH2 0x9a
0x4b JUMPI
---
0x42: V15 = 0x80959721
0x47: V16 = EQ 0x80959721 V11
0x48: V17 = 0x9a
0x4b: JUMPI 0x9a V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xf1]
---
0x4c DUP1
0x4d PUSH4 0x99d26f3e
0x52 EQ
0x53 PUSH2 0xf1
0x56 JUMPI
---
0x4d: V18 = 0x99d26f3e
0x52: V19 = EQ 0x99d26f3e V11
0x53: V20 = 0xf1
0x56: JUMPI 0xf1 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x108]
---
0x57 DUP1
0x58 PUSH4 0xcdfa7503
0x5d EQ
0x5e PUSH2 0x108
0x61 JUMPI
---
0x58: V21 = 0xcdfa7503
0x5d: V22 = EQ 0xcdfa7503 V11
0x5e: V23 = 0x108
0x61: JUMPI 0x108 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x11f]
---
0x62 DUP1
0x63 PUSH4 0xf7260d3e
0x68 EQ
0x69 PUSH2 0x11f
0x6c JUMPI
---
0x63: V24 = 0xf7260d3e
0x68: V25 = EQ 0xf7260d3e V11
0x69: V26 = 0x11f
0x6c: JUMPI 0x11f V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0xd]
Successors: [0x77, 0x7b]
---
0x6f JUMPDEST
0x70 CALLVALUE
0x71 DUP1
0x72 ISZERO
0x73 PUSH2 0x7b
0x76 JUMPI
---
0x6f: JUMPDEST 
0x70: V27 = CALLVALUE
0x72: V28 = ISZERO V27
0x73: V29 = 0x7b
0x76: JUMPI 0x7b V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V27]
Exit stack: [V11, V27]

================================

Block 0x77
[0x77:0x7a]
---
Predecessors: [0x6f]
Successors: []
---
0x77 PUSH1 0x0
0x79 DUP1
0x7a REVERT
---
0x77: V30 = 0x0
0x7a: REVERT 0x0 0x0
---
Entry stack: [V11, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V27]

================================

Block 0x7b
[0x7b:0x83]
---
Predecessors: [0x6f]
Successors: [0x176]
---
0x7b JUMPDEST
0x7c POP
0x7d PUSH2 0x84
0x80 PUSH2 0x176
0x83 JUMP
---
0x7b: JUMPDEST 
0x7d: V31 = 0x84
0x80: V32 = 0x176
0x83: JUMP 0x176
---
Entry stack: [V11, V27]
Stack pops: 1
Stack additions: [0x84]
Exit stack: [V11, 0x84]

================================

Block 0x84
[0x84:0x99]
---
Predecessors: [0x176]
Successors: []
---
0x84 JUMPDEST
0x85 PUSH1 0x40
0x87 MLOAD
0x88 DUP1
0x89 DUP3
0x8a DUP2
0x8b MSTORE
0x8c PUSH1 0x20
0x8e ADD
0x8f SWAP2
0x90 POP
0x91 POP
0x92 PUSH1 0x40
0x94 MLOAD
0x95 DUP1
0x96 SWAP2
0x97 SUB
0x98 SWAP1
0x99 RETURN
---
0x84: JUMPDEST 
0x85: V33 = 0x40
0x87: V34 = M[0x40]
0x8b: M[V34] = V87
0x8c: V35 = 0x20
0x8e: V36 = ADD 0x20 V34
0x92: V37 = 0x40
0x94: V38 = M[0x40]
0x97: V39 = SUB V36 V38
0x99: RETURN V38 V39
---
Entry stack: [V11, 0x84, V87]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x84]

================================

Block 0x9a
[0x9a:0xa1]
---
Predecessors: [0x41]
Successors: [0xa2, 0xa6]
---
0x9a JUMPDEST
0x9b CALLVALUE
0x9c DUP1
0x9d ISZERO
0x9e PUSH2 0xa6
0xa1 JUMPI
---
0x9a: JUMPDEST 
0x9b: V40 = CALLVALUE
0x9d: V41 = ISZERO V40
0x9e: V42 = 0xa6
0xa1: JUMPI 0xa6 V41
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V40]
Exit stack: [V11, V40]

================================

Block 0xa2
[0xa2:0xa5]
---
Predecessors: [0x9a]
Successors: []
---
0xa2 PUSH1 0x0
0xa4 DUP1
0xa5 REVERT
---
0xa2: V43 = 0x0
0xa5: REVERT 0x0 0x0
---
Entry stack: [V11, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V40]

================================

Block 0xa6
[0xa6:0xae]
---
Predecessors: [0x9a]
Successors: [0x17c]
---
0xa6 JUMPDEST
0xa7 POP
0xa8 PUSH2 0xaf
0xab PUSH2 0x17c
0xae JUMP
---
0xa6: JUMPDEST 
0xa8: V44 = 0xaf
0xab: V45 = 0x17c
0xae: JUMP 0x17c
---
Entry stack: [V11, V40]
Stack pops: 1
Stack additions: [0xaf]
Exit stack: [V11, 0xaf]

================================

Block 0xaf
[0xaf:0xf0]
---
Predecessors: [0x17c]
Successors: []
---
0xaf JUMPDEST
0xb0 PUSH1 0x40
0xb2 MLOAD
0xb3 DUP1
0xb4 DUP3
0xb5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca AND
0xcb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0 AND
0xe1 DUP2
0xe2 MSTORE
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 SWAP2
0xe7 POP
0xe8 POP
0xe9 PUSH1 0x40
0xeb MLOAD
0xec DUP1
0xed SWAP2
0xee SUB
0xef SWAP1
0xf0 RETURN
---
0xaf: JUMPDEST 
0xb0: V46 = 0x40
0xb2: V47 = M[0x40]
0xb5: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xca: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0xcb: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0xe2: M[V47] = V51
0xe3: V52 = 0x20
0xe5: V53 = ADD 0x20 V47
0xe9: V54 = 0x40
0xeb: V55 = M[0x40]
0xee: V56 = SUB V53 V55
0xf0: RETURN V55 V56
---
Entry stack: [V11, 0xaf, V94]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xaf]

================================

Block 0xf1
[0xf1:0xf8]
---
Predecessors: [0x4c]
Successors: [0xf9, 0xfd]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 DUP1
0xf4 ISZERO
0xf5 PUSH2 0xfd
0xf8 JUMPI
---
0xf1: JUMPDEST 
0xf2: V57 = CALLVALUE
0xf4: V58 = ISZERO V57
0xf5: V59 = 0xfd
0xf8: JUMPI 0xfd V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V57]
Exit stack: [V11, V57]

================================

Block 0xf9
[0xf9:0xfc]
---
Predecessors: [0xf1]
Successors: []
---
0xf9 PUSH1 0x0
0xfb DUP1
0xfc REVERT
---
0xf9: V60 = 0x0
0xfc: REVERT 0x0 0x0
---
Entry stack: [V11, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57]

================================

Block 0xfd
[0xfd:0x105]
---
Predecessors: [0xf1]
Successors: [0x1a1]
---
0xfd JUMPDEST
0xfe POP
0xff PUSH2 0x106
0x102 PUSH2 0x1a1
0x105 JUMP
---
0xfd: JUMPDEST 
0xff: V61 = 0x106
0x102: V62 = 0x1a1
0x105: JUMP 0x1a1
---
Entry stack: [V11, V57]
Stack pops: 1
Stack additions: [0x106]
Exit stack: [V11, 0x106]

================================

Block 0x106
[0x106:0x107]
---
Predecessors: [0x264]
Successors: []
---
0x106 JUMPDEST
0x107 STOP
---
0x106: JUMPDEST 
0x107: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x108
[0x108:0x10f]
---
Predecessors: [0x57]
Successors: [0x110, 0x114]
---
0x108 JUMPDEST
0x109 CALLVALUE
0x10a DUP1
0x10b ISZERO
0x10c PUSH2 0x114
0x10f JUMPI
---
0x108: JUMPDEST 
0x109: V63 = CALLVALUE
0x10b: V64 = ISZERO V63
0x10c: V65 = 0x114
0x10f: JUMPI 0x114 V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V63]
Exit stack: [V11, V63]

================================

Block 0x110
[0x110:0x113]
---
Predecessors: [0x108]
Successors: []
---
0x110 PUSH1 0x0
0x112 DUP1
0x113 REVERT
---
0x110: V66 = 0x0
0x113: REVERT 0x0 0x0
---
Entry stack: [V11, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63]

================================

Block 0x114
[0x114:0x11c]
---
Predecessors: [0x108]
Successors: [0x266]
---
0x114 JUMPDEST
0x115 POP
0x116 PUSH2 0x11d
0x119 PUSH2 0x266
0x11c JUMP
---
0x114: JUMPDEST 
0x116: V67 = 0x11d
0x119: V68 = 0x266
0x11c: JUMP 0x266
---
Entry stack: [V11, V63]
Stack pops: 1
Stack additions: [0x11d]
Exit stack: [V11, 0x11d]

================================

Block 0x11d
[0x11d:0x11e]
---
Predecessors: [0x302]
Successors: []
---
0x11d JUMPDEST
0x11e STOP
---
0x11d: JUMPDEST 
0x11e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11f
[0x11f:0x126]
---
Predecessors: [0x62]
Successors: [0x127, 0x12b]
---
0x11f JUMPDEST
0x120 CALLVALUE
0x121 DUP1
0x122 ISZERO
0x123 PUSH2 0x12b
0x126 JUMPI
---
0x11f: JUMPDEST 
0x120: V69 = CALLVALUE
0x122: V70 = ISZERO V69
0x123: V71 = 0x12b
0x126: JUMPI 0x12b V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V69]
Exit stack: [V11, V69]

================================

Block 0x127
[0x127:0x12a]
---
Predecessors: [0x11f]
Successors: []
---
0x127 PUSH1 0x0
0x129 DUP1
0x12a REVERT
---
0x127: V72 = 0x0
0x12a: REVERT 0x0 0x0
---
Entry stack: [V11, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V69]

================================

Block 0x12b
[0x12b:0x133]
---
Predecessors: [0x11f]
Successors: [0x304]
---
0x12b JUMPDEST
0x12c POP
0x12d PUSH2 0x134
0x130 PUSH2 0x304
0x133 JUMP
---
0x12b: JUMPDEST 
0x12d: V73 = 0x134
0x130: V74 = 0x304
0x133: JUMP 0x304
---
Entry stack: [V11, V69]
Stack pops: 1
Stack additions: [0x134]
Exit stack: [V11, 0x134]

================================

Block 0x134
[0x134:0x175]
---
Predecessors: [0x304]
Successors: []
---
0x134 JUMPDEST
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 DUP3
0x13a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14f AND
0x150 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x165 AND
0x166 DUP2
0x167 MSTORE
0x168 PUSH1 0x20
0x16a ADD
0x16b SWAP2
0x16c POP
0x16d POP
0x16e PUSH1 0x40
0x170 MLOAD
0x171 DUP1
0x172 SWAP2
0x173 SUB
0x174 SWAP1
0x175 RETURN
---
0x134: JUMPDEST 
0x135: V75 = 0x40
0x137: V76 = M[0x40]
0x13a: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x14f: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x150: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x165: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x167: M[V76] = V80
0x168: V81 = 0x20
0x16a: V82 = ADD 0x20 V76
0x16e: V83 = 0x40
0x170: V84 = M[0x40]
0x173: V85 = SUB V82 V84
0x175: RETURN V84 V85
---
Entry stack: [V11, 0x134, V190]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x134]

================================

Block 0x176
[0x176:0x17b]
---
Predecessors: [0x7b]
Successors: [0x84]
---
0x176 JUMPDEST
0x177 PUSH1 0x2
0x179 SLOAD
0x17a DUP2
0x17b JUMP
---
0x176: JUMPDEST 
0x177: V86 = 0x2
0x179: V87 = S[0x2]
0x17b: JUMP 0x84
---
Entry stack: [V11, 0x84]
Stack pops: 1
Stack additions: [S0, V87]
Exit stack: [V11, 0x84, V87]

================================

Block 0x17c
[0x17c:0x1a0]
---
Predecessors: [0xa6]
Successors: [0xaf]
---
0x17c JUMPDEST
0x17d PUSH1 0x0
0x17f DUP1
0x180 SWAP1
0x181 SLOAD
0x182 SWAP1
0x183 PUSH2 0x100
0x186 EXP
0x187 SWAP1
0x188 DIV
0x189 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19e AND
0x19f DUP2
0x1a0 JUMP
---
0x17c: JUMPDEST 
0x17d: V88 = 0x0
0x181: V89 = S[0x0]
0x183: V90 = 0x100
0x186: V91 = EXP 0x100 0x0
0x188: V92 = DIV V89 0x1
0x189: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x19e: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1a0: JUMP 0xaf
---
Entry stack: [V11, 0xaf]
Stack pops: 1
Stack additions: [S0, V94]
Exit stack: [V11, 0xaf, V94]

================================

Block 0x1a1
[0x1a1:0x1f7]
---
Predecessors: [0xfd]
Successors: [0x1f8, 0x1fc]
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x0
0x1a4 DUP1
0x1a5 SWAP1
0x1a6 SLOAD
0x1a7 SWAP1
0x1a8 PUSH2 0x100
0x1ab EXP
0x1ac SWAP1
0x1ad DIV
0x1ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c3 AND
0x1c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d9 AND
0x1da CALLER
0x1db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f0 AND
0x1f1 EQ
0x1f2 ISZERO
0x1f3 ISZERO
0x1f4 PUSH2 0x1fc
0x1f7 JUMPI
---
0x1a1: JUMPDEST 
0x1a2: V95 = 0x0
0x1a6: V96 = S[0x0]
0x1a8: V97 = 0x100
0x1ab: V98 = EXP 0x100 0x0
0x1ad: V99 = DIV V96 0x1
0x1ae: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c3: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x1c4: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d9: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x1da: V104 = CALLER
0x1db: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1f1: V107 = EQ V106 V103
0x1f2: V108 = ISZERO V107
0x1f3: V109 = ISZERO V108
0x1f4: V110 = 0x1fc
0x1f7: JUMPI 0x1fc V109
---
Entry stack: [V11, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x106]

================================

Block 0x1f8
[0x1f8:0x1fb]
---
Predecessors: [0x1a1]
Successors: []
---
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb REVERT
---
0x1f8: V111 = 0x0
0x1fb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x106]

================================

Block 0x1fc
[0x1fc:0x208]
---
Predecessors: [0x1a1]
Successors: [0x209, 0x20d]
---
0x1fc JUMPDEST
0x1fd PUSH1 0x2
0x1ff SLOAD
0x200 TIMESTAMP
0x201 GT
0x202 ISZERO
0x203 ISZERO
0x204 ISZERO
0x205 PUSH2 0x20d
0x208 JUMPI
---
0x1fc: JUMPDEST 
0x1fd: V112 = 0x2
0x1ff: V113 = S[0x2]
0x200: V114 = TIMESTAMP
0x201: V115 = GT V114 V113
0x202: V116 = ISZERO V115
0x203: V117 = ISZERO V116
0x204: V118 = ISZERO V117
0x205: V119 = 0x20d
0x208: JUMPI 0x20d V118
---
Entry stack: [V11, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x106]

================================

Block 0x209
[0x209:0x20c]
---
Predecessors: [0x1fc]
Successors: []
---
0x209 PUSH1 0x0
0x20b DUP1
0x20c REVERT
---
0x209: V120 = 0x0
0x20c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x106]

================================

Block 0x20d
[0x20d:0x25f]
---
Predecessors: [0x1fc]
Successors: [0x260, 0x264]
---
0x20d JUMPDEST
0x20e CALLER
0x20f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x224 AND
0x225 PUSH2 0x8fc
0x228 ADDRESS
0x229 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23e AND
0x23f BALANCE
0x240 SWAP1
0x241 DUP2
0x242 ISZERO
0x243 MUL
0x244 SWAP1
0x245 PUSH1 0x40
0x247 MLOAD
0x248 PUSH1 0x0
0x24a PUSH1 0x40
0x24c MLOAD
0x24d DUP1
0x24e DUP4
0x24f SUB
0x250 DUP2
0x251 DUP6
0x252 DUP9
0x253 DUP9
0x254 CALL
0x255 SWAP4
0x256 POP
0x257 POP
0x258 POP
0x259 POP
0x25a ISZERO
0x25b ISZERO
0x25c PUSH2 0x264
0x25f JUMPI
---
0x20d: JUMPDEST 
0x20e: V121 = CALLER
0x20f: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x224: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x225: V124 = 0x8fc
0x228: V125 = ADDRESS
0x229: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x23e: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x23f: V128 = BALANCE V127
0x242: V129 = ISZERO V128
0x243: V130 = MUL V129 0x8fc
0x245: V131 = 0x40
0x247: V132 = M[0x40]
0x248: V133 = 0x0
0x24a: V134 = 0x40
0x24c: V135 = M[0x40]
0x24f: V136 = SUB V132 V135
0x254: V137 = CALL V130 V123 V128 V135 V136 V135 0x0
0x25a: V138 = ISZERO V137
0x25b: V139 = ISZERO V138
0x25c: V140 = 0x264
0x25f: JUMPI 0x264 V139
---
Entry stack: [V11, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x106]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x20d]
Successors: []
---
0x260 PUSH1 0x0
0x262 DUP1
0x263 REVERT
---
0x260: V141 = 0x0
0x263: REVERT 0x0 0x0
---
Entry stack: [V11, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x106]

================================

Block 0x264
[0x264:0x265]
---
Predecessors: [0x20d]
Successors: [0x106]
---
0x264 JUMPDEST
0x265 JUMP
---
0x264: JUMPDEST 
0x265: JUMP 0x106
---
Entry stack: [V11, 0x106]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x266
[0x266:0x271]
---
Predecessors: [0x114]
Successors: [0x272, 0x276]
---
0x266 JUMPDEST
0x267 PUSH1 0x2
0x269 SLOAD
0x26a TIMESTAMP
0x26b GT
0x26c ISZERO
0x26d ISZERO
0x26e PUSH2 0x276
0x271 JUMPI
---
0x266: JUMPDEST 
0x267: V142 = 0x2
0x269: V143 = S[0x2]
0x26a: V144 = TIMESTAMP
0x26b: V145 = GT V144 V143
0x26c: V146 = ISZERO V145
0x26d: V147 = ISZERO V146
0x26e: V148 = 0x276
0x271: JUMPI 0x276 V147
---
Entry stack: [V11, 0x11d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11d]

================================

Block 0x272
[0x272:0x275]
---
Predecessors: [0x266]
Successors: []
---
0x272 PUSH1 0x0
0x274 DUP1
0x275 REVERT
---
0x272: V149 = 0x0
0x275: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11d]

================================

Block 0x276
[0x276:0x2dc]
---
Predecessors: [0x266]
Successors: [0x32a]
---
0x276 JUMPDEST
0x277 PUSH1 0x1
0x279 PUSH1 0x0
0x27b SWAP1
0x27c SLOAD
0x27d SWAP1
0x27e PUSH2 0x100
0x281 EXP
0x282 SWAP1
0x283 DIV
0x284 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x299 AND
0x29a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2af AND
0x2b0 PUSH2 0x8fc
0x2b3 PUSH2 0x2dd
0x2b6 PUSH1 0x1
0x2b8 ADDRESS
0x2b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ce AND
0x2cf BALANCE
0x2d0 PUSH2 0x32a
0x2d3 SWAP1
0x2d4 SWAP2
0x2d5 SWAP1
0x2d6 PUSH4 0xffffffff
0x2db AND
0x2dc JUMP
---
0x276: JUMPDEST 
0x277: V150 = 0x1
0x279: V151 = 0x0
0x27c: V152 = S[0x1]
0x27e: V153 = 0x100
0x281: V154 = EXP 0x100 0x0
0x283: V155 = DIV V152 0x1
0x284: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x299: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x29a: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x2af: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x2b0: V160 = 0x8fc
0x2b3: V161 = 0x2dd
0x2b6: V162 = 0x1
0x2b8: V163 = ADDRESS
0x2b9: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ce: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2cf: V166 = BALANCE V165
0x2d0: V167 = 0x32a
0x2d6: V168 = 0xffffffff
0x2db: V169 = AND 0xffffffff 0x32a
0x2dc: JUMP 0x32a
---
Entry stack: [V11, 0x11d]
Stack pops: 0
Stack additions: [V159, 0x8fc, 0x2dd, V166, 0x1]
Exit stack: [V11, 0x11d, V159, 0x8fc, 0x2dd, V166, 0x1]

================================

Block 0x2dd
[0x2dd:0x2fd]
---
Predecessors: [0x338]
Successors: [0x2fe, 0x302]
---
0x2dd JUMPDEST
0x2de SWAP1
0x2df DUP2
0x2e0 ISZERO
0x2e1 MUL
0x2e2 SWAP1
0x2e3 PUSH1 0x40
0x2e5 MLOAD
0x2e6 PUSH1 0x0
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb DUP1
0x2ec DUP4
0x2ed SUB
0x2ee DUP2
0x2ef DUP6
0x2f0 DUP9
0x2f1 DUP9
0x2f2 CALL
0x2f3 SWAP4
0x2f4 POP
0x2f5 POP
0x2f6 POP
0x2f7 POP
0x2f8 ISZERO
0x2f9 ISZERO
0x2fa PUSH2 0x302
0x2fd JUMPI
---
0x2dd: JUMPDEST 
0x2e0: V170 = ISZERO V197
0x2e1: V171 = MUL V170 0x8fc
0x2e3: V172 = 0x40
0x2e5: V173 = M[0x40]
0x2e6: V174 = 0x0
0x2e8: V175 = 0x40
0x2ea: V176 = M[0x40]
0x2ed: V177 = SUB V173 V176
0x2f2: V178 = CALL V171 V159 V197 V176 V177 V176 0x0
0x2f8: V179 = ISZERO V178
0x2f9: V180 = ISZERO V179
0x2fa: V181 = 0x302
0x2fd: JUMPI 0x302 V180
---
Entry stack: [V11, 0x11d, V159, 0x8fc, V197]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x11d]

================================

Block 0x2fe
[0x2fe:0x301]
---
Predecessors: [0x2dd]
Successors: []
---
0x2fe PUSH1 0x0
0x300 DUP1
0x301 REVERT
---
0x2fe: V182 = 0x0
0x301: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11d]

================================

Block 0x302
[0x302:0x303]
---
Predecessors: [0x2dd]
Successors: [0x11d]
---
0x302 JUMPDEST
0x303 JUMP
---
0x302: JUMPDEST 
0x303: JUMP 0x11d
---
Entry stack: [V11, 0x11d]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x304
[0x304:0x329]
---
Predecessors: [0x12b]
Successors: [0x134]
---
0x304 JUMPDEST
0x305 PUSH1 0x1
0x307 PUSH1 0x0
0x309 SWAP1
0x30a SLOAD
0x30b SWAP1
0x30c PUSH2 0x100
0x30f EXP
0x310 SWAP1
0x311 DIV
0x312 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x327 AND
0x328 DUP2
0x329 JUMP
---
0x304: JUMPDEST 
0x305: V183 = 0x1
0x307: V184 = 0x0
0x30a: V185 = S[0x1]
0x30c: V186 = 0x100
0x30f: V187 = EXP 0x100 0x0
0x311: V188 = DIV V185 0x1
0x312: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x327: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x329: JUMP 0x134
---
Entry stack: [V11, 0x134]
Stack pops: 1
Stack additions: [S0, V190]
Exit stack: [V11, 0x134, V190]

================================

Block 0x32a
[0x32a:0x336]
---
Predecessors: [0x276]
Successors: [0x337, 0x338]
---
0x32a JUMPDEST
0x32b PUSH1 0x0
0x32d DUP3
0x32e DUP3
0x32f GT
0x330 ISZERO
0x331 ISZERO
0x332 ISZERO
0x333 PUSH2 0x338
0x336 JUMPI
---
0x32a: JUMPDEST 
0x32b: V191 = 0x0
0x32f: V192 = GT 0x1 V166
0x330: V193 = ISZERO V192
0x331: V194 = ISZERO V193
0x332: V195 = ISZERO V194
0x333: V196 = 0x338
0x336: JUMPI 0x338 V195
---
Entry stack: [V11, 0x11d, V159, 0x8fc, 0x2dd, V166, 0x1]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x11d, V159, 0x8fc, 0x2dd, V166, 0x1, 0x0]

================================

Block 0x337
[0x337:0x337]
---
Predecessors: [0x32a]
Successors: []
---
0x337 INVALID
---
0x337: INVALID 
---
Entry stack: [V11, 0x11d, V159, 0x8fc, 0x2dd, V166, 0x1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11d, V159, 0x8fc, 0x2dd, V166, 0x1, 0x0]

================================

Block 0x338
[0x338:0x342]
---
Predecessors: [0x32a]
Successors: [0x2dd]
---
0x338 JUMPDEST
0x339 DUP2
0x33a DUP4
0x33b SUB
0x33c SWAP1
0x33d POP
0x33e SWAP3
0x33f SWAP2
0x340 POP
0x341 POP
0x342 JUMP
---
0x338: JUMPDEST 
0x33b: V197 = SUB V166 0x1
0x342: JUMP 0x2dd
---
Entry stack: [V11, 0x11d, V159, 0x8fc, 0x2dd, V166, 0x1, 0x0]
Stack pops: 4
Stack additions: [V197]
Exit stack: [V11, 0x11d, V159, 0x8fc, V197]

================================

Block 0x343
[0x343:0x354]
---
Predecessors: []
Successors: [0x355, 0x356]
---
0x343 JUMPDEST
0x344 PUSH1 0x0
0x346 DUP2
0x347 DUP4
0x348 ADD
0x349 SWAP1
0x34a POP
0x34b DUP3
0x34c DUP2
0x34d LT
0x34e ISZERO
0x34f ISZERO
0x350 ISZERO
0x351 PUSH2 0x356
0x354 JUMPI
---
0x343: JUMPDEST 
0x344: V198 = 0x0
0x348: V199 = ADD S1 S0
0x34d: V200 = LT V199 S1
0x34e: V201 = ISZERO V200
0x34f: V202 = ISZERO V201
0x350: V203 = ISZERO V202
0x351: V204 = 0x356
0x354: JUMPI 0x356 V203
---
Entry stack: []
Stack pops: 2
Stack additions: [S1, S0, V199]
Exit stack: [S1, S0, V199]

================================

Block 0x355
[0x355:0x355]
---
Predecessors: [0x343]
Successors: []
---
0x355 INVALID
---
0x355: INVALID 
---
Entry stack: [S2, S1, V199]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, V199]

================================

Block 0x356
[0x356:0x39c]
---
Predecessors: [0x343]
Successors: []
---
0x356 JUMPDEST
0x357 DUP1
0x358 SWAP1
0x359 POP
0x35a SWAP3
0x35b SWAP2
0x35c POP
0x35d POP
0x35e JUMP
0x35f STOP
0x360 LOG1
0x361 PUSH6 0x627a7a723058
0x368 SHA3
0x369 MISSING 0xd1
0x36a MISSING 0xde
0x36b MISSING 0xe2
0x36c MISSING 0xf9
0x36d MISSING 0xd1
0x36e MISSING 0xed
0x36f DUP2
0x370 MISSING 0x2a
0x371 MISSING 0xf6
0x372 MISSING 0xc9
0x373 CALLDATALOAD
0x374 DUP10
0x375 MISSING 0x1e
0x376 MISSING 0x21
0x377 MISSING 0x5c
0x378 SGT
0x379 MISSING 0xde
0x37a MISSING 0xe1
0x37b LOG1
0x37c PUSH32 0x1a2472397b34beecc79e10220029
---
0x356: JUMPDEST 
0x35e: JUMP S3
0x35f: STOP 
0x360: LOG S0 S1 S2
0x361: V205 = 0x627a7a723058
0x368: V206 = SHA3 0x627a7a723058 S3
0x369: MISSING 0xd1
0x36a: MISSING 0xde
0x36b: MISSING 0xe2
0x36c: MISSING 0xf9
0x36d: MISSING 0xd1
0x36e: MISSING 0xed
0x370: MISSING 0x2a
0x371: MISSING 0xf6
0x372: MISSING 0xc9
0x373: V207 = CALLDATALOAD S0
0x375: MISSING 0x1e
0x376: MISSING 0x21
0x377: MISSING 0x5c
0x378: V208 = SGT S0 S1
0x379: MISSING 0xde
0x37a: MISSING 0xe1
0x37b: LOG S0 S1 S2
0x37c: V209 = 0x1a2472397b34beecc79e10220029
---
Entry stack: [S2, S1, V199]
Stack pops: 220622
Stack additions: [0x1a2472397b34beecc79e10220029]
Exit stack: []

================================

Function 0:
Public function signature: 0x33bbae93
Entry block: 0x6f
Exit block: 0x84
Body: 0x6f, 0x77, 0x7b, 0x84, 0x176

Function 1:
Public function signature: 0x80959721
Entry block: 0x9a
Exit block: 0xaf
Body: 0x9a, 0xa2, 0xa6, 0xaf, 0x17c

Function 2:
Public function signature: 0x99d26f3e
Entry block: 0xf1
Exit block: 0x106
Body: 0xf1, 0xf9, 0xfd, 0x106, 0x1a1, 0x1f8, 0x1fc, 0x209, 0x20d, 0x260, 0x264

Function 3:
Public function signature: 0xcdfa7503
Entry block: 0x108
Exit block: 0x11d
Body: 0x108, 0x110, 0x114, 0x11d, 0x266, 0x272, 0x276, 0x2dd, 0x2fe, 0x302, 0x32a, 0x337, 0x338

Function 4:
Public function signature: 0xf7260d3e
Entry block: 0x11f
Exit block: 0x134
Body: 0x11f, 0x127, 0x12b, 0x134, 0x304

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

