Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8b
0xa: JUMPI 0x8b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xa7]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x38af3eed
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xa7
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x38af3eed
0x39: V12 = EQ V10 0x38af3eed
0x3a: V13 = 0xa7
0x3d: JUMPI 0xa7 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xd6]
---
0x3e DUP1
0x3f PUSH4 0x41c0e1b5
0x44 EQ
0x45 PUSH2 0xd6
0x48 JUMPI
---
0x3f: V14 = 0x41c0e1b5
0x44: V15 = EQ 0x41c0e1b5 V10
0x45: V16 = 0xd6
0x48: JUMPI 0xd6 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xeb]
---
0x49 DUP1
0x4a PUSH4 0x5432202a
0x4f EQ
0x50 PUSH2 0xeb
0x53 JUMPI
---
0x4a: V17 = 0x5432202a
0x4f: V18 = EQ 0x5432202a V10
0x50: V19 = 0xeb
0x53: JUMPI 0xeb V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x112]
---
0x54 DUP1
0x55 PUSH4 0x73b6eacf
0x5a EQ
0x5b PUSH2 0x112
0x5e JUMPI
---
0x55: V20 = 0x73b6eacf
0x5a: V21 = EQ 0x73b6eacf V10
0x5b: V22 = 0x112
0x5e: JUMPI 0x112 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x137]
---
0x5f DUP1
0x60 PUSH4 0x919840ad
0x65 EQ
0x66 PUSH2 0x137
0x69 JUMPI
---
0x60: V23 = 0x919840ad
0x65: V24 = EQ 0x919840ad V10
0x66: V25 = 0x137
0x69: JUMPI 0x137 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x141]
---
0x6a DUP1
0x6b PUSH4 0xc255343e
0x70 EQ
0x71 PUSH2 0x141
0x74 JUMPI
---
0x6b: V26 = 0xc255343e
0x70: V27 = EQ 0xc255343e V10
0x71: V28 = 0x141
0x74: JUMPI 0x141 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x170]
---
0x75 DUP1
0x76 PUSH4 0xd333ec79
0x7b EQ
0x7c PUSH2 0x170
0x7f JUMPI
---
0x76: V29 = 0xd333ec79
0x7b: V30 = EQ 0xd333ec79 V10
0x7c: V31 = 0x170
0x7f: JUMPI 0x170 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x191]
---
0x80 DUP1
0x81 PUSH4 0xf5e3fc30
0x86 EQ
0x87 PUSH2 0x191
0x8a JUMPI
---
0x81: V32 = 0xf5e3fc30
0x86: V33 = EQ 0xf5e3fc30 V10
0x87: V34 = 0x191
0x8a: JUMPI 0x191 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x8b]
---
Predecessors: [0x0, 0x80]
Successors: [0x8c]
---
0x8b JUMPDEST
---
0x8b: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x9e]
---
Predecessors: [0x8b]
Successors: [0x9f, 0xa3]
---
0x8c JUMPDEST
0x8d PUSH1 0x0
0x8f SLOAD
0x90 PUSH1 0xa0
0x92 PUSH1 0x2
0x94 EXP
0x95 SWAP1
0x96 DIV
0x97 PUSH1 0xff
0x99 AND
0x9a ISZERO
0x9b PUSH2 0xa3
0x9e JUMPI
---
0x8c: JUMPDEST 
0x8d: V35 = 0x0
0x8f: V36 = S[0x0]
0x90: V37 = 0xa0
0x92: V38 = 0x2
0x94: V39 = EXP 0x2 0xa0
0x96: V40 = DIV V36 0x10000000000000000000000000000000000000000
0x97: V41 = 0xff
0x99: V42 = AND 0xff V40
0x9a: V43 = ISZERO V42
0x9b: V44 = 0xa3
0x9e: JUMPI 0xa3 V43
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9f
[0x9f:0xa2]
---
Predecessors: [0x8c]
Successors: []
---
0x9f PUSH1 0x0
0xa1 DUP1
0xa2 REVERT
---
0x9f: V45 = 0x0
0xa2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa3
[0xa3:0xa3]
---
Predecessors: [0x8c, 0x270, 0x3ba]
Successors: [0xa4]
---
0xa3 JUMPDEST
---
0xa3: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa4
[0xa4:0xa4]
---
Predecessors: [0xa3]
Successors: [0xa5]
---
0xa4 JUMPDEST
---
0xa4: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa5
[0xa5:0xa6]
---
Predecessors: [0xa4]
Successors: []
---
0xa5 JUMPDEST
0xa6 STOP
---
0xa5: JUMPDEST 
0xa6: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa7
[0xa7:0xad]
---
Predecessors: [0xb]
Successors: [0xae, 0xb2]
---
0xa7 JUMPDEST
0xa8 CALLVALUE
0xa9 ISZERO
0xaa PUSH2 0xb2
0xad JUMPI
---
0xa7: JUMPDEST 
0xa8: V46 = CALLVALUE
0xa9: V47 = ISZERO V46
0xaa: V48 = 0xb2
0xad: JUMPI 0xb2 V47
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xae
[0xae:0xb1]
---
Predecessors: [0xa7]
Successors: []
---
0xae PUSH1 0x0
0xb0 DUP1
0xb1 REVERT
---
0xae: V49 = 0x0
0xb1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb2
[0xb2:0xb9]
---
Predecessors: [0xa7]
Successors: [0x1c1]
---
0xb2 JUMPDEST
0xb3 PUSH2 0xba
0xb6 PUSH2 0x1c1
0xb9 JUMP
---
0xb2: JUMPDEST 
0xb3: V50 = 0xba
0xb6: V51 = 0x1c1
0xb9: JUMP 0x1c1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xba]
Exit stack: [V10, 0xba]

================================

Block 0xba
[0xba:0xd5]
---
Predecessors: [0x1c1, 0x354]
Successors: []
---
0xba JUMPDEST
0xbb PUSH1 0x40
0xbd MLOAD
0xbe PUSH1 0x1
0xc0 PUSH1 0xa0
0xc2 PUSH1 0x2
0xc4 EXP
0xc5 SUB
0xc6 SWAP1
0xc7 SWAP2
0xc8 AND
0xc9 DUP2
0xca MSTORE
0xcb PUSH1 0x20
0xcd ADD
0xce PUSH1 0x40
0xd0 MLOAD
0xd1 DUP1
0xd2 SWAP2
0xd3 SUB
0xd4 SWAP1
0xd5 RETURN
---
0xba: JUMPDEST 
0xbb: V52 = 0x40
0xbd: V53 = M[0x40]
0xbe: V54 = 0x1
0xc0: V55 = 0xa0
0xc2: V56 = 0x2
0xc4: V57 = EXP 0x2 0xa0
0xc5: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc8: V59 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xca: M[V53] = V59
0xcb: V60 = 0x20
0xcd: V61 = ADD 0x20 V53
0xce: V62 = 0x40
0xd0: V63 = M[0x40]
0xd3: V64 = SUB V61 V63
0xd5: RETURN V63 V64
---
Entry stack: [V10, 0xba, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xba]

================================

Block 0xd6
[0xd6:0xdc]
---
Predecessors: [0x3e]
Successors: [0xdd, 0xe1]
---
0xd6 JUMPDEST
0xd7 CALLVALUE
0xd8 ISZERO
0xd9 PUSH2 0xe1
0xdc JUMPI
---
0xd6: JUMPDEST 
0xd7: V65 = CALLVALUE
0xd8: V66 = ISZERO V65
0xd9: V67 = 0xe1
0xdc: JUMPI 0xe1 V66
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdd
[0xdd:0xe0]
---
Predecessors: [0xd6]
Successors: []
---
0xdd PUSH1 0x0
0xdf DUP1
0xe0 REVERT
---
0xdd: V68 = 0x0
0xe0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe1
[0xe1:0xe8]
---
Predecessors: [0xd6]
Successors: [0x1d0]
---
0xe1 JUMPDEST
0xe2 PUSH2 0xa3
0xe5 PUSH2 0x1d0
0xe8 JUMP
---
0xe1: JUMPDEST 
0xe2: V69 = 0xa3
0xe5: V70 = 0x1d0
0xe8: JUMP 0x1d0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3]
Exit stack: [V10, 0xa3]

================================

Block 0xe9
[0xe9:0xea]
---
Predecessors: []
Successors: []
---
0xe9 JUMPDEST
0xea STOP
---
0xe9: JUMPDEST 
0xea: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xeb
[0xeb:0xf1]
---
Predecessors: [0x49]
Successors: [0xf2, 0xf6]
---
0xeb JUMPDEST
0xec CALLVALUE
0xed ISZERO
0xee PUSH2 0xf6
0xf1 JUMPI
---
0xeb: JUMPDEST 
0xec: V71 = CALLVALUE
0xed: V72 = ISZERO V71
0xee: V73 = 0xf6
0xf1: JUMPI 0xf6 V72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf2
[0xf2:0xf5]
---
Predecessors: [0xeb]
Successors: []
---
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 REVERT
---
0xf2: V74 = 0x0
0xf5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf6
[0xf6:0xfd]
---
Predecessors: [0xeb]
Successors: [0x272]
---
0xf6 JUMPDEST
0xf7 PUSH2 0xfe
0xfa PUSH2 0x272
0xfd JUMP
---
0xf6: JUMPDEST 
0xf7: V75 = 0xfe
0xfa: V76 = 0x272
0xfd: JUMP 0x272
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfe]
Exit stack: [V10, 0xfe]

================================

Block 0xfe
[0xfe:0x111]
---
Predecessors: [0x285]
Successors: []
---
0xfe JUMPDEST
0xff PUSH1 0x40
0x101 MLOAD
0x102 SWAP1
0x103 ISZERO
0x104 ISZERO
0x105 DUP2
0x106 MSTORE
0x107 PUSH1 0x20
0x109 ADD
0x10a PUSH1 0x40
0x10c MLOAD
0x10d DUP1
0x10e SWAP2
0x10f SUB
0x110 SWAP1
0x111 RETURN
---
0xfe: JUMPDEST 
0xff: V77 = 0x40
0x101: V78 = M[0x40]
0x103: V79 = ISZERO V230
0x104: V80 = ISZERO V79
0x106: M[V78] = V80
0x107: V81 = 0x20
0x109: V82 = ADD 0x20 V78
0x10a: V83 = 0x40
0x10c: V84 = M[0x40]
0x10f: V85 = SUB V82 V84
0x111: RETURN V84 V85
---
Entry stack: [V10, V230]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x112
[0x112:0x118]
---
Predecessors: [0x54]
Successors: [0x119, 0x11d]
---
0x112 JUMPDEST
0x113 CALLVALUE
0x114 ISZERO
0x115 PUSH2 0x11d
0x118 JUMPI
---
0x112: JUMPDEST 
0x113: V86 = CALLVALUE
0x114: V87 = ISZERO V86
0x115: V88 = 0x11d
0x118: JUMPI 0x11d V87
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x119
[0x119:0x11c]
---
Predecessors: [0x112]
Successors: []
---
0x119 PUSH1 0x0
0x11b DUP1
0x11c REVERT
---
0x119: V89 = 0x0
0x11c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11d
[0x11d:0x124]
---
Predecessors: [0x112]
Successors: [0x288]
---
0x11d JUMPDEST
0x11e PUSH2 0x125
0x121 PUSH2 0x288
0x124 JUMP
---
0x11d: JUMPDEST 
0x11e: V90 = 0x125
0x121: V91 = 0x288
0x124: JUMP 0x288
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x125]
Exit stack: [V10, 0x125]

================================

Block 0x125
[0x125:0x136]
---
Predecessors: [0x288]
Successors: []
---
0x125 JUMPDEST
0x126 PUSH1 0x40
0x128 MLOAD
0x129 SWAP1
0x12a DUP2
0x12b MSTORE
0x12c PUSH1 0x20
0x12e ADD
0x12f PUSH1 0x40
0x131 MLOAD
0x132 DUP1
0x133 SWAP2
0x134 SUB
0x135 SWAP1
0x136 RETURN
---
0x125: JUMPDEST 
0x126: V92 = 0x40
0x128: V93 = M[0x40]
0x12b: M[V93] = V232
0x12c: V94 = 0x20
0x12e: V95 = ADD 0x20 V93
0x12f: V96 = 0x40
0x131: V97 = M[0x40]
0x134: V98 = SUB V95 V97
0x136: RETURN V97 V98
---
Entry stack: [V10, 0x125, V232]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x125]

================================

Block 0x137
[0x137:0x13e]
---
Predecessors: [0x5f]
Successors: [0x28e]
---
0x137 JUMPDEST
0x138 PUSH2 0xa3
0x13b PUSH2 0x28e
0x13e JUMP
---
0x137: JUMPDEST 
0x138: V99 = 0xa3
0x13b: V100 = 0x28e
0x13e: JUMP 0x28e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3]
Exit stack: [V10, 0xa3]

================================

Block 0x13f
[0x13f:0x140]
---
Predecessors: []
Successors: []
---
0x13f JUMPDEST
0x140 STOP
---
0x13f: JUMPDEST 
0x140: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x141
[0x141:0x147]
---
Predecessors: [0x6a]
Successors: [0x148, 0x14c]
---
0x141 JUMPDEST
0x142 CALLVALUE
0x143 ISZERO
0x144 PUSH2 0x14c
0x147 JUMPI
---
0x141: JUMPDEST 
0x142: V101 = CALLVALUE
0x143: V102 = ISZERO V101
0x144: V103 = 0x14c
0x147: JUMPI 0x14c V102
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x148
[0x148:0x14b]
---
Predecessors: [0x141]
Successors: []
---
0x148 PUSH1 0x0
0x14a DUP1
0x14b REVERT
---
0x148: V104 = 0x0
0x14b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14c
[0x14c:0x153]
---
Predecessors: [0x141]
Successors: [0x354]
---
0x14c JUMPDEST
0x14d PUSH2 0xba
0x150 PUSH2 0x354
0x153 JUMP
---
0x14c: JUMPDEST 
0x14d: V105 = 0xba
0x150: V106 = 0x354
0x153: JUMP 0x354
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xba]
Exit stack: [V10, 0xba]

================================

Block 0x154
[0x154:0x16f]
---
Predecessors: []
Successors: []
---
0x154 JUMPDEST
0x155 PUSH1 0x40
0x157 MLOAD
0x158 PUSH1 0x1
0x15a PUSH1 0xa0
0x15c PUSH1 0x2
0x15e EXP
0x15f SUB
0x160 SWAP1
0x161 SWAP2
0x162 AND
0x163 DUP2
0x164 MSTORE
0x165 PUSH1 0x20
0x167 ADD
0x168 PUSH1 0x40
0x16a MLOAD
0x16b DUP1
0x16c SWAP2
0x16d SUB
0x16e SWAP1
0x16f RETURN
---
0x154: JUMPDEST 
0x155: V107 = 0x40
0x157: V108 = M[0x40]
0x158: V109 = 0x1
0x15a: V110 = 0xa0
0x15c: V111 = 0x2
0x15e: V112 = EXP 0x2 0xa0
0x15f: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x162: V114 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x164: M[V108] = V114
0x165: V115 = 0x20
0x167: V116 = ADD 0x20 V108
0x168: V117 = 0x40
0x16a: V118 = M[0x40]
0x16d: V119 = SUB V116 V118
0x16f: RETURN V118 V119
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x170
[0x170:0x176]
---
Predecessors: [0x75]
Successors: [0x177, 0x17b]
---
0x170 JUMPDEST
0x171 CALLVALUE
0x172 ISZERO
0x173 PUSH2 0x17b
0x176 JUMPI
---
0x170: JUMPDEST 
0x171: V120 = CALLVALUE
0x172: V121 = ISZERO V120
0x173: V122 = 0x17b
0x176: JUMPI 0x17b V121
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x177
[0x177:0x17a]
---
Predecessors: [0x170]
Successors: []
---
0x177 PUSH1 0x0
0x179 DUP1
0x17a REVERT
---
0x177: V123 = 0x0
0x17a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x17b
[0x17b:0x18e]
---
Predecessors: [0x170]
Successors: [0x363]
---
0x17b JUMPDEST
0x17c PUSH2 0xa3
0x17f PUSH1 0x1
0x181 PUSH1 0xa0
0x183 PUSH1 0x2
0x185 EXP
0x186 SUB
0x187 PUSH1 0x4
0x189 CALLDATALOAD
0x18a AND
0x18b PUSH2 0x363
0x18e JUMP
---
0x17b: JUMPDEST 
0x17c: V124 = 0xa3
0x17f: V125 = 0x1
0x181: V126 = 0xa0
0x183: V127 = 0x2
0x185: V128 = EXP 0x2 0xa0
0x186: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x187: V130 = 0x4
0x189: V131 = CALLDATALOAD 0x4
0x18a: V132 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x18b: V133 = 0x363
0x18e: JUMP 0x363
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3, V132]
Exit stack: [V10, 0xa3, V132]

================================

Block 0x18f
[0x18f:0x190]
---
Predecessors: []
Successors: []
---
0x18f JUMPDEST
0x190 STOP
---
0x18f: JUMPDEST 
0x190: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x191
[0x191:0x197]
---
Predecessors: [0x80]
Successors: [0x198, 0x19c]
---
0x191 JUMPDEST
0x192 CALLVALUE
0x193 ISZERO
0x194 PUSH2 0x19c
0x197 JUMPI
---
0x191: JUMPDEST 
0x192: V134 = CALLVALUE
0x193: V135 = ISZERO V134
0x194: V136 = 0x19c
0x197: JUMPI 0x19c V135
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x198
[0x198:0x19b]
---
Predecessors: [0x191]
Successors: []
---
0x198 PUSH1 0x0
0x19a DUP1
0x19b REVERT
---
0x198: V137 = 0x0
0x19b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x19c
[0x19c:0x1a3]
---
Predecessors: [0x191]
Successors: [0x3bd]
---
0x19c JUMPDEST
0x19d PUSH2 0x1a4
0x1a0 PUSH2 0x3bd
0x1a3 JUMP
---
0x19c: JUMPDEST 
0x19d: V138 = 0x1a4
0x1a0: V139 = 0x3bd
0x1a3: JUMP 0x3bd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a4]
Exit stack: [V10, 0x1a4]

================================

Block 0x1a4
[0x1a4:0x1c0]
---
Predecessors: [0x3bd]
Successors: []
---
0x1a4 JUMPDEST
0x1a5 PUSH1 0x40
0x1a7 MLOAD
0x1a8 PUSH8 0xffffffffffffffff
0x1b1 SWAP1
0x1b2 SWAP2
0x1b3 AND
0x1b4 DUP2
0x1b5 MSTORE
0x1b6 PUSH1 0x20
0x1b8 ADD
0x1b9 PUSH1 0x40
0x1bb MLOAD
0x1bc DUP1
0x1bd SWAP2
0x1be SUB
0x1bf SWAP1
0x1c0 RETURN
---
0x1a4: JUMPDEST 
0x1a5: V140 = 0x40
0x1a7: V141 = M[0x40]
0x1a8: V142 = 0xffffffffffffffff
0x1b3: V143 = AND V346 0xffffffffffffffff
0x1b5: M[V141] = V143
0x1b6: V144 = 0x20
0x1b8: V145 = ADD 0x20 V141
0x1b9: V146 = 0x40
0x1bb: V147 = M[0x40]
0x1be: V148 = SUB V145 V147
0x1c0: RETURN V147 V148
---
Entry stack: [V10, 0x1a4, V346]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1a4]

================================

Block 0x1c1
[0x1c1:0x1cf]
---
Predecessors: [0xb2]
Successors: [0xba]
---
0x1c1 JUMPDEST
0x1c2 PUSH1 0x2
0x1c4 SLOAD
0x1c5 PUSH1 0x1
0x1c7 PUSH1 0xa0
0x1c9 PUSH1 0x2
0x1cb EXP
0x1cc SUB
0x1cd AND
0x1ce DUP2
0x1cf JUMP
---
0x1c1: JUMPDEST 
0x1c2: V149 = 0x2
0x1c4: V150 = S[0x2]
0x1c5: V151 = 0x1
0x1c7: V152 = 0xa0
0x1c9: V153 = 0x2
0x1cb: V154 = EXP 0x2 0xa0
0x1cc: V155 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cd: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x1cf: JUMP 0xba
---
Entry stack: [V10, 0xba]
Stack pops: 1
Stack additions: [S0, V156]
Exit stack: [V10, 0xba, V156]

================================

Block 0x1d0
[0x1d0:0x1d7]
---
Predecessors: [0xe1]
Successors: [0x3e6]
---
0x1d0 JUMPDEST
0x1d1 PUSH2 0x1d8
0x1d4 PUSH2 0x3e6
0x1d7 JUMP
---
0x1d0: JUMPDEST 
0x1d1: V157 = 0x1d8
0x1d4: V158 = 0x3e6
0x1d7: JUMP 0x3e6
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: [0x1d8]
Exit stack: [V10, 0xa3, 0x1d8]

================================

Block 0x1d8
[0x1d8:0x1de]
---
Predecessors: [0x3f9]
Successors: [0x1df, 0x1e3]
---
0x1d8 JUMPDEST
0x1d9 ISZERO
0x1da ISZERO
0x1db PUSH2 0x1e3
0x1de JUMPI
---
0x1d8: JUMPDEST 
0x1d9: V159 = ISZERO V357
0x1da: V160 = ISZERO V159
0x1db: V161 = 0x1e3
0x1de: JUMPI 0x1e3 V160
---
Entry stack: [V10, 0xa3, V357]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x1df
[0x1df:0x1e2]
---
Predecessors: [0x1d8]
Successors: []
---
0x1df PUSH1 0x0
0x1e1 DUP1
0x1e2 REVERT
---
0x1df: V162 = 0x0
0x1e2: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x1e3
[0x1e3:0x1f5]
---
Predecessors: [0x1d8]
Successors: [0x1f6, 0x1fa]
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x0
0x1e6 SLOAD
0x1e7 PUSH1 0xa0
0x1e9 PUSH1 0x2
0x1eb EXP
0x1ec SWAP1
0x1ed DIV
0x1ee PUSH1 0xff
0x1f0 AND
0x1f1 ISZERO
0x1f2 PUSH2 0x1fa
0x1f5 JUMPI
---
0x1e3: JUMPDEST 
0x1e4: V163 = 0x0
0x1e6: V164 = S[0x0]
0x1e7: V165 = 0xa0
0x1e9: V166 = 0x2
0x1eb: V167 = EXP 0x2 0xa0
0x1ed: V168 = DIV V164 0x10000000000000000000000000000000000000000
0x1ee: V169 = 0xff
0x1f0: V170 = AND 0xff V168
0x1f1: V171 = ISZERO V170
0x1f2: V172 = 0x1fa
0x1f5: JUMPI 0x1fa V171
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x1f6
[0x1f6:0x1f9]
---
Predecessors: [0x1e3]
Successors: []
---
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 REVERT
---
0x1f6: V173 = 0x0
0x1f9: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x1fa
[0x1fa:0x22f]
---
Predecessors: [0x1e3]
Successors: [0x230, 0x234]
---
0x1fa JUMPDEST
0x1fb PUSH1 0x0
0x1fd DUP1
0x1fe SLOAD
0x1ff PUSH21 0xff0000000000000000000000000000000000000000
0x215 NOT
0x216 AND
0x217 PUSH1 0xa0
0x219 PUSH1 0x2
0x21b EXP
0x21c OR
0x21d SWAP1
0x21e SSTORE
0x21f PUSH1 0x1
0x221 PUSH1 0xa0
0x223 PUSH1 0x2
0x225 EXP
0x226 SUB
0x227 ADDRESS
0x228 AND
0x229 BALANCE
0x22a ISZERO
0x22b ISZERO
0x22c PUSH2 0x234
0x22f JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V174 = 0x0
0x1fe: V175 = S[0x0]
0x1ff: V176 = 0xff0000000000000000000000000000000000000000
0x215: V177 = NOT 0xff0000000000000000000000000000000000000000
0x216: V178 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V175
0x217: V179 = 0xa0
0x219: V180 = 0x2
0x21b: V181 = EXP 0x2 0xa0
0x21c: V182 = OR 0x10000000000000000000000000000000000000000 V178
0x21e: S[0x0] = V182
0x21f: V183 = 0x1
0x221: V184 = 0xa0
0x223: V185 = 0x2
0x225: V186 = EXP 0x2 0xa0
0x226: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x227: V188 = ADDRESS
0x228: V189 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x229: V190 = BALANCE V189
0x22a: V191 = ISZERO V190
0x22b: V192 = ISZERO V191
0x22c: V193 = 0x234
0x22f: JUMPI 0x234 V192
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x230
[0x230:0x233]
---
Predecessors: [0x1fa]
Successors: [0x26d]
---
0x230 PUSH2 0x26d
0x233 JUMP
---
0x230: V194 = 0x26d
0x233: JUMP 0x26d
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x234
[0x234:0x268]
---
Predecessors: [0x1fa]
Successors: [0x269, 0x26d]
---
0x234 JUMPDEST
0x235 PUSH1 0x0
0x237 SLOAD
0x238 PUSH1 0x1
0x23a PUSH1 0xa0
0x23c PUSH1 0x2
0x23e EXP
0x23f SUB
0x240 SWAP1
0x241 DUP2
0x242 AND
0x243 SWAP1
0x244 ADDRESS
0x245 AND
0x246 BALANCE
0x247 DUP1
0x248 ISZERO
0x249 PUSH2 0x8fc
0x24c MUL
0x24d SWAP1
0x24e PUSH1 0x40
0x250 MLOAD
0x251 PUSH1 0x0
0x253 PUSH1 0x40
0x255 MLOAD
0x256 DUP1
0x257 DUP4
0x258 SUB
0x259 DUP2
0x25a DUP6
0x25b DUP9
0x25c DUP9
0x25d CALL
0x25e SWAP4
0x25f POP
0x260 POP
0x261 POP
0x262 POP
0x263 ISZERO
0x264 ISZERO
0x265 PUSH2 0x26d
0x268 JUMPI
---
0x234: JUMPDEST 
0x235: V195 = 0x0
0x237: V196 = S[0x0]
0x238: V197 = 0x1
0x23a: V198 = 0xa0
0x23c: V199 = 0x2
0x23e: V200 = EXP 0x2 0xa0
0x23f: V201 = SUB 0x10000000000000000000000000000000000000000 0x1
0x242: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x244: V203 = ADDRESS
0x245: V204 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x246: V205 = BALANCE V204
0x248: V206 = ISZERO V205
0x249: V207 = 0x8fc
0x24c: V208 = MUL 0x8fc V206
0x24e: V209 = 0x40
0x250: V210 = M[0x40]
0x251: V211 = 0x0
0x253: V212 = 0x40
0x255: V213 = M[0x40]
0x258: V214 = SUB V210 V213
0x25d: V215 = CALL V208 V202 V205 V213 V214 V213 0x0
0x263: V216 = ISZERO V215
0x264: V217 = ISZERO V216
0x265: V218 = 0x26d
0x268: JUMPI 0x26d V217
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x269
[0x269:0x26c]
---
Predecessors: [0x234]
Successors: []
---
0x269 PUSH1 0x0
0x26b DUP1
0x26c REVERT
---
0x269: V219 = 0x0
0x26c: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x26d
[0x26d:0x26d]
---
Predecessors: [0x230, 0x234, 0x2df, 0x561]
Successors: [0x26e]
---
0x26d JUMPDEST
---
0x26d: JUMPDEST 
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x26e
[0x26e:0x26e]
---
Predecessors: [0x26d]
Successors: [0x26f]
---
0x26e JUMPDEST
---
0x26e: JUMPDEST 
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x26f
[0x26f:0x26f]
---
Predecessors: [0x26e]
Successors: [0x270]
---
0x26f JUMPDEST
---
0x26f: JUMPDEST 
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x270
[0x270:0x271]
---
Predecessors: [0x26f]
Successors: [0xa3]
---
0x270 JUMPDEST
0x271 JUMP
---
0x270: JUMPDEST 
0x271: JUMP 0xa3
---
Entry stack: [V10, 0xa3]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x272
[0x272:0x284]
---
Predecessors: [0xf6]
Successors: [0x285]
---
0x272 JUMPDEST
0x273 PUSH1 0x1
0x275 SLOAD
0x276 CALLER
0x277 PUSH1 0x1
0x279 PUSH1 0xa0
0x27b PUSH1 0x2
0x27d EXP
0x27e SUB
0x27f SWAP1
0x280 DUP2
0x281 AND
0x282 SWAP2
0x283 AND
0x284 EQ
---
0x272: JUMPDEST 
0x273: V220 = 0x1
0x275: V221 = S[0x1]
0x276: V222 = CALLER
0x277: V223 = 0x1
0x279: V224 = 0xa0
0x27b: V225 = 0x2
0x27d: V226 = EXP 0x2 0xa0
0x27e: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x281: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x283: V229 = AND V221 0xffffffffffffffffffffffffffffffffffffffff
0x284: V230 = EQ V229 V228
---
Entry stack: [V10, 0xfe]
Stack pops: 0
Stack additions: [V230]
Exit stack: [V10, 0xfe, V230]

================================

Block 0x285
[0x285:0x287]
---
Predecessors: [0x272]
Successors: [0xfe]
---
0x285 JUMPDEST
0x286 SWAP1
0x287 JUMP
---
0x285: JUMPDEST 
0x287: JUMP 0xfe
---
Entry stack: [V10, 0xfe, V230]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V230]

================================

Block 0x288
[0x288:0x28d]
---
Predecessors: [0x11d]
Successors: [0x125]
---
0x288 JUMPDEST
0x289 PUSH1 0x3
0x28b SLOAD
0x28c DUP2
0x28d JUMP
---
0x288: JUMPDEST 
0x289: V231 = 0x3
0x28b: V232 = S[0x3]
0x28d: JUMP 0x125
---
Entry stack: [V10, 0x125]
Stack pops: 1
Stack additions: [S0, V232]
Exit stack: [V10, 0x125, V232]

================================

Block 0x28e
[0x28e:0x2a4]
---
Predecessors: [0x137]
Successors: [0x2a5, 0x2a9]
---
0x28e JUMPDEST
0x28f PUSH1 0x1
0x291 SLOAD
0x292 CALLER
0x293 PUSH1 0x1
0x295 PUSH1 0xa0
0x297 PUSH1 0x2
0x299 EXP
0x29a SUB
0x29b SWAP1
0x29c DUP2
0x29d AND
0x29e SWAP2
0x29f AND
0x2a0 EQ
0x2a1 PUSH2 0x2a9
0x2a4 JUMPI
---
0x28e: JUMPDEST 
0x28f: V233 = 0x1
0x291: V234 = S[0x1]
0x292: V235 = CALLER
0x293: V236 = 0x1
0x295: V237 = 0xa0
0x297: V238 = 0x2
0x299: V239 = EXP 0x2 0xa0
0x29a: V240 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29d: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x29f: V242 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V243 = EQ V242 V241
0x2a1: V244 = 0x2a9
0x2a4: JUMPI 0x2a9 V243
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x2a5
[0x2a5:0x2a8]
---
Predecessors: [0x28e]
Successors: []
---
0x2a5 PUSH1 0x0
0x2a7 DUP1
0x2a8 REVERT
---
0x2a5: V245 = 0x0
0x2a8: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x2a9
[0x2a9:0x2bb]
---
Predecessors: [0x28e]
Successors: [0x2bc, 0x2c0]
---
0x2a9 JUMPDEST
0x2aa PUSH1 0x0
0x2ac SLOAD
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SWAP1
0x2b3 DIV
0x2b4 PUSH1 0xff
0x2b6 AND
0x2b7 ISZERO
0x2b8 PUSH2 0x2c0
0x2bb JUMPI
---
0x2a9: JUMPDEST 
0x2aa: V246 = 0x0
0x2ac: V247 = S[0x0]
0x2ad: V248 = 0xa0
0x2af: V249 = 0x2
0x2b1: V250 = EXP 0x2 0xa0
0x2b3: V251 = DIV V247 0x10000000000000000000000000000000000000000
0x2b4: V252 = 0xff
0x2b6: V253 = AND 0xff V251
0x2b7: V254 = ISZERO V253
0x2b8: V255 = 0x2c0
0x2bb: JUMPI 0x2c0 V254
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x2bc
[0x2bc:0x2bf]
---
Predecessors: [0x2a9]
Successors: []
---
0x2bc PUSH1 0x0
0x2be DUP1
0x2bf REVERT
---
0x2bc: V256 = 0x0
0x2bf: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x2c0
[0x2c0:0x2d2]
---
Predecessors: [0x2a9]
Successors: [0x2d3, 0x2d7]
---
0x2c0 JUMPDEST
0x2c1 PUSH1 0x1
0x2c3 SLOAD
0x2c4 PUSH1 0xa0
0x2c6 PUSH1 0x2
0x2c8 EXP
0x2c9 SWAP1
0x2ca DIV
0x2cb PUSH1 0xff
0x2cd AND
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x2c0: JUMPDEST 
0x2c1: V257 = 0x1
0x2c3: V258 = S[0x1]
0x2c4: V259 = 0xa0
0x2c6: V260 = 0x2
0x2c8: V261 = EXP 0x2 0xa0
0x2ca: V262 = DIV V258 0x10000000000000000000000000000000000000000
0x2cb: V263 = 0xff
0x2cd: V264 = AND 0xff V262
0x2ce: V265 = ISZERO V264
0x2cf: V266 = 0x2d7
0x2d2: JUMPI 0x2d7 V265
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x2c0]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V267 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x2d7
[0x2d7:0x2de]
---
Predecessors: [0x2c0]
Successors: [0x3fc]
---
0x2d7 JUMPDEST
0x2d8 PUSH2 0x2df
0x2db PUSH2 0x3fc
0x2de JUMP
---
0x2d7: JUMPDEST 
0x2d8: V268 = 0x2df
0x2db: V269 = 0x3fc
0x2de: JUMP 0x3fc
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: [0x2df]
Exit stack: [V10, 0xa3, 0x2df]

================================

Block 0x2df
[0x2df:0x2e4]
---
Predecessors: [0x427]
Successors: [0x26d, 0x2e5]
---
0x2df JUMPDEST
0x2e0 ISZERO
0x2e1 PUSH2 0x26d
0x2e4 JUMPI
---
0x2df: JUMPDEST 
0x2e0: V270 = ISZERO V366
0x2e1: V271 = 0x26d
0x2e4: JUMPI 0x26d V270
---
Entry stack: [V10, 0xa3, V366]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x2e5
[0x2e5:0x34c]
---
Predecessors: [0x2df]
Successors: [0x42a]
---
0x2e5 PUSH32 0xcdeba0448cafa891383055f46f2fec420e049fab5171b5b30b5458c0320f68fb
0x306 ADDRESS
0x307 PUSH1 0x1
0x309 PUSH1 0xa0
0x30b PUSH1 0x2
0x30d EXP
0x30e SUB
0x30f AND
0x310 BALANCE
0x311 PUSH1 0x40
0x313 MLOAD
0x314 SWAP1
0x315 DUP2
0x316 MSTORE
0x317 PUSH1 0x20
0x319 ADD
0x31a PUSH1 0x40
0x31c MLOAD
0x31d DUP1
0x31e SWAP2
0x31f SUB
0x320 SWAP1
0x321 LOG1
0x322 PUSH1 0x1
0x324 DUP1
0x325 SLOAD
0x326 PUSH21 0xff0000000000000000000000000000000000000000
0x33c NOT
0x33d AND
0x33e PUSH1 0xa0
0x340 PUSH1 0x2
0x342 EXP
0x343 OR
0x344 SWAP1
0x345 SSTORE
0x346 PUSH2 0x26d
0x349 PUSH2 0x42a
0x34c JUMP
---
0x2e5: V272 = 0xcdeba0448cafa891383055f46f2fec420e049fab5171b5b30b5458c0320f68fb
0x306: V273 = ADDRESS
0x307: V274 = 0x1
0x309: V275 = 0xa0
0x30b: V276 = 0x2
0x30d: V277 = EXP 0x2 0xa0
0x30e: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30f: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x310: V280 = BALANCE V279
0x311: V281 = 0x40
0x313: V282 = M[0x40]
0x316: M[V282] = V280
0x317: V283 = 0x20
0x319: V284 = ADD 0x20 V282
0x31a: V285 = 0x40
0x31c: V286 = M[0x40]
0x31f: V287 = SUB V284 V286
0x321: LOG V286 V287 0xcdeba0448cafa891383055f46f2fec420e049fab5171b5b30b5458c0320f68fb
0x322: V288 = 0x1
0x325: V289 = S[0x1]
0x326: V290 = 0xff0000000000000000000000000000000000000000
0x33c: V291 = NOT 0xff0000000000000000000000000000000000000000
0x33d: V292 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V289
0x33e: V293 = 0xa0
0x340: V294 = 0x2
0x342: V295 = EXP 0x2 0xa0
0x343: V296 = OR 0x10000000000000000000000000000000000000000 V292
0x345: S[0x1] = V296
0x346: V297 = 0x26d
0x349: V298 = 0x42a
0x34c: JUMP 0x42a
---
Entry stack: [V10, 0xa3]
Stack pops: 0
Stack additions: [0x26d]
Exit stack: [V10, 0xa3, 0x26d]

================================

Block 0x34d
[0x34d:0x34d]
---
Predecessors: []
Successors: [0x34e]
---
0x34d JUMPDEST
---
0x34d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x34e
[0x34e:0x34e]
---
Predecessors: [0x34d]
Successors: [0x34f]
---
0x34e JUMPDEST
---
0x34e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x34f
[0x34f:0x34f]
---
Predecessors: [0x34e]
Successors: [0x350]
---
0x34f JUMPDEST
---
0x34f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x350
[0x350:0x350]
---
Predecessors: [0x34f]
Successors: [0x351]
---
0x350 JUMPDEST
---
0x350: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x351
[0x351:0x351]
---
Predecessors: [0x350]
Successors: [0x352]
---
0x351 JUMPDEST
---
0x351: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x352
[0x352:0x353]
---
Predecessors: [0x351]
Successors: []
Has unresolved jump.
---
0x352 JUMPDEST
0x353 JUMP
---
0x352: JUMPDEST 
0x353: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x354
[0x354:0x362]
---
Predecessors: [0x14c]
Successors: [0xba]
---
0x354 JUMPDEST
0x355 PUSH1 0x0
0x357 SLOAD
0x358 PUSH1 0x1
0x35a PUSH1 0xa0
0x35c PUSH1 0x2
0x35e EXP
0x35f SUB
0x360 AND
0x361 DUP2
0x362 JUMP
---
0x354: JUMPDEST 
0x355: V299 = 0x0
0x357: V300 = S[0x0]
0x358: V301 = 0x1
0x35a: V302 = 0xa0
0x35c: V303 = 0x2
0x35e: V304 = EXP 0x2 0xa0
0x35f: V305 = SUB 0x10000000000000000000000000000000000000000 0x1
0x360: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x362: JUMP 0xba
---
Entry stack: [V10, 0xba]
Stack pops: 1
Stack additions: [S0, V306]
Exit stack: [V10, 0xba, V306]

================================

Block 0x363
[0x363:0x379]
---
Predecessors: [0x17b]
Successors: [0x37a, 0x37e]
---
0x363 JUMPDEST
0x364 PUSH1 0x1
0x366 SLOAD
0x367 CALLER
0x368 PUSH1 0x1
0x36a PUSH1 0xa0
0x36c PUSH1 0x2
0x36e EXP
0x36f SUB
0x370 SWAP1
0x371 DUP2
0x372 AND
0x373 SWAP2
0x374 AND
0x375 EQ
0x376 PUSH2 0x37e
0x379 JUMPI
---
0x363: JUMPDEST 
0x364: V307 = 0x1
0x366: V308 = S[0x1]
0x367: V309 = CALLER
0x368: V310 = 0x1
0x36a: V311 = 0xa0
0x36c: V312 = 0x2
0x36e: V313 = EXP 0x2 0xa0
0x36f: V314 = SUB 0x10000000000000000000000000000000000000000 0x1
0x372: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x374: V316 = AND V308 0xffffffffffffffffffffffffffffffffffffffff
0x375: V317 = EQ V316 V315
0x376: V318 = 0x37e
0x379: JUMPI 0x37e V317
---
Entry stack: [V10, 0xa3, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V132]

================================

Block 0x37a
[0x37a:0x37d]
---
Predecessors: [0x363]
Successors: []
---
0x37a PUSH1 0x0
0x37c DUP1
0x37d REVERT
---
0x37a: V319 = 0x0
0x37d: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V132]

================================

Block 0x37e
[0x37e:0x38e]
---
Predecessors: [0x363]
Successors: [0x38f, 0x390]
---
0x37e JUMPDEST
0x37f PUSH1 0x1
0x381 PUSH1 0xa0
0x383 PUSH1 0x2
0x385 EXP
0x386 SUB
0x387 DUP2
0x388 AND
0x389 ISZERO
0x38a ISZERO
0x38b PUSH2 0x390
0x38e JUMPI
---
0x37e: JUMPDEST 
0x37f: V320 = 0x1
0x381: V321 = 0xa0
0x383: V322 = 0x2
0x385: V323 = EXP 0x2 0xa0
0x386: V324 = SUB 0x10000000000000000000000000000000000000000 0x1
0x388: V325 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x389: V326 = ISZERO V325
0x38a: V327 = ISZERO V326
0x38b: V328 = 0x390
0x38e: JUMPI 0x390 V327
---
Entry stack: [V10, 0xa3, V132]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xa3, V132]

================================

Block 0x38f
[0x38f:0x38f]
---
Predecessors: [0x37e]
Successors: []
---
0x38f INVALID
---
0x38f: INVALID 
---
Entry stack: [V10, 0xa3, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V132]

================================

Block 0x390
[0x390:0x3b8]
---
Predecessors: [0x37e]
Successors: [0x3b9]
---
0x390 JUMPDEST
0x391 PUSH1 0x1
0x393 DUP1
0x394 SLOAD
0x395 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3aa NOT
0x3ab AND
0x3ac PUSH1 0x1
0x3ae PUSH1 0xa0
0x3b0 PUSH1 0x2
0x3b2 EXP
0x3b3 SUB
0x3b4 DUP4
0x3b5 AND
0x3b6 OR
0x3b7 SWAP1
0x3b8 SSTORE
---
0x390: JUMPDEST 
0x391: V329 = 0x1
0x394: V330 = S[0x1]
0x395: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x3aa: V332 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V333 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V330
0x3ac: V334 = 0x1
0x3ae: V335 = 0xa0
0x3b0: V336 = 0x2
0x3b2: V337 = EXP 0x2 0xa0
0x3b3: V338 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b5: V339 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: V340 = OR V339 V333
0x3b8: S[0x1] = V340
---
Entry stack: [V10, 0xa3, V132]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xa3, V132]

================================

Block 0x3b9
[0x3b9:0x3b9]
---
Predecessors: [0x390]
Successors: [0x3ba]
---
0x3b9 JUMPDEST
---
0x3b9: JUMPDEST 
---
Entry stack: [V10, 0xa3, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V132]

================================

Block 0x3ba
[0x3ba:0x3bc]
---
Predecessors: [0x3b9]
Successors: [0xa3]
---
0x3ba JUMPDEST
0x3bb POP
0x3bc JUMP
---
0x3ba: JUMPDEST 
0x3bc: JUMP 0xa3
---
Entry stack: [V10, 0xa3, V132]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x3bd
[0x3bd:0x3e5]
---
Predecessors: [0x19c]
Successors: [0x1a4]
---
0x3bd JUMPDEST
0x3be PUSH1 0x1
0x3c0 SLOAD
0x3c1 PUSH22 0x1000000000000000000000000000000000000000000
0x3d8 SWAP1
0x3d9 DIV
0x3da PUSH8 0xffffffffffffffff
0x3e3 AND
0x3e4 DUP2
0x3e5 JUMP
---
0x3bd: JUMPDEST 
0x3be: V341 = 0x1
0x3c0: V342 = S[0x1]
0x3c1: V343 = 0x1000000000000000000000000000000000000000000
0x3d9: V344 = DIV V342 0x1000000000000000000000000000000000000000000
0x3da: V345 = 0xffffffffffffffff
0x3e3: V346 = AND 0xffffffffffffffff V344
0x3e5: JUMP 0x1a4
---
Entry stack: [V10, 0x1a4]
Stack pops: 1
Stack additions: [S0, V346]
Exit stack: [V10, 0x1a4, V346]

================================

Block 0x3e6
[0x3e6:0x3f8]
---
Predecessors: [0x1d0]
Successors: [0x3f9]
---
0x3e6 JUMPDEST
0x3e7 PUSH1 0x0
0x3e9 SLOAD
0x3ea CALLER
0x3eb PUSH1 0x1
0x3ed PUSH1 0xa0
0x3ef PUSH1 0x2
0x3f1 EXP
0x3f2 SUB
0x3f3 SWAP1
0x3f4 DUP2
0x3f5 AND
0x3f6 SWAP2
0x3f7 AND
0x3f8 EQ
---
0x3e6: JUMPDEST 
0x3e7: V347 = 0x0
0x3e9: V348 = S[0x0]
0x3ea: V349 = CALLER
0x3eb: V350 = 0x1
0x3ed: V351 = 0xa0
0x3ef: V352 = 0x2
0x3f1: V353 = EXP 0x2 0xa0
0x3f2: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f5: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x3f7: V356 = AND V348 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V357 = EQ V356 V355
---
Entry stack: [V10, 0xa3, 0x1d8]
Stack pops: 0
Stack additions: [V357]
Exit stack: [V10, 0xa3, 0x1d8, V357]

================================

Block 0x3f9
[0x3f9:0x3fb]
---
Predecessors: [0x3e6]
Successors: [0x1d8]
---
0x3f9 JUMPDEST
0x3fa SWAP1
0x3fb JUMP
---
0x3f9: JUMPDEST 
0x3fb: JUMP 0x1d8
---
Entry stack: [V10, 0xa3, 0x1d8, V357]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0xa3, V357]

================================

Block 0x3fc
[0x3fc:0x426]
---
Predecessors: [0x2d7]
Successors: [0x427]
---
0x3fc JUMPDEST
0x3fd PUSH1 0x1
0x3ff SLOAD
0x400 TIMESTAMP
0x401 PUSH22 0x1000000000000000000000000000000000000000000
0x418 SWAP1
0x419 SWAP2
0x41a DIV
0x41b PUSH8 0xffffffffffffffff
0x424 AND
0x425 GT
0x426 ISZERO
---
0x3fc: JUMPDEST 
0x3fd: V358 = 0x1
0x3ff: V359 = S[0x1]
0x400: V360 = TIMESTAMP
0x401: V361 = 0x1000000000000000000000000000000000000000000
0x41a: V362 = DIV V359 0x1000000000000000000000000000000000000000000
0x41b: V363 = 0xffffffffffffffff
0x424: V364 = AND 0xffffffffffffffff V362
0x425: V365 = GT V364 V360
0x426: V366 = ISZERO V365
---
Entry stack: [V10, 0xa3, 0x2df]
Stack pops: 0
Stack additions: [V366]
Exit stack: [V10, 0xa3, 0x2df, V366]

================================

Block 0x427
[0x427:0x429]
---
Predecessors: [0x3fc]
Successors: [0x2df]
---
0x427 JUMPDEST
0x428 SWAP1
0x429 JUMP
---
0x427: JUMPDEST 
0x429: JUMP 0x2df
---
Entry stack: [V10, 0xa3, 0x2df, V366]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0xa3, V366]

================================

Block 0x42a
[0x42a:0x443]
---
Predecessors: [0x2e5]
Successors: [0x444, 0x44c]
---
0x42a JUMPDEST
0x42b PUSH1 0x3
0x42d SLOAD
0x42e PUSH1 0x1
0x430 PUSH1 0xa0
0x432 PUSH1 0x2
0x434 EXP
0x435 SUB
0x436 ADDRESS
0x437 AND
0x438 BALANCE
0x439 SWAP1
0x43a PUSH1 0x0
0x43c SWAP1
0x43d DUP3
0x43e GT
0x43f ISZERO
0x440 PUSH2 0x44c
0x443 JUMPI
---
0x42a: JUMPDEST 
0x42b: V367 = 0x3
0x42d: V368 = S[0x3]
0x42e: V369 = 0x1
0x430: V370 = 0xa0
0x432: V371 = 0x2
0x434: V372 = EXP 0x2 0xa0
0x435: V373 = SUB 0x10000000000000000000000000000000000000000 0x1
0x436: V374 = ADDRESS
0x437: V375 = AND V374 0xffffffffffffffffffffffffffffffffffffffff
0x438: V376 = BALANCE V375
0x43a: V377 = 0x0
0x43e: V378 = GT V376 V368
0x43f: V379 = ISZERO V378
0x440: V380 = 0x44c
0x443: JUMPI 0x44c V379
---
Entry stack: [V10, 0xa3, 0x26d]
Stack pops: 0
Stack additions: [V376, 0x0]
Exit stack: [V10, 0xa3, 0x26d, V376, 0x0]

================================

Block 0x444
[0x444:0x44b]
---
Predecessors: [0x42a]
Successors: [0x44c]
---
0x444 POP
0x445 PUSH1 0x3
0x447 SLOAD
0x448 SWAP1
0x449 DUP2
0x44a SWAP1
0x44b SUB
---
0x445: V381 = 0x3
0x447: V382 = S[0x3]
0x44b: V383 = SUB V376 V382
---
Entry stack: [V10, 0xa3, 0x26d, V376, 0x0]
Stack pops: 2
Stack additions: [V382, V383]
Exit stack: [V10, 0xa3, 0x26d, V382, V383]

================================

Block 0x44c
[0x44c:0x452]
---
Predecessors: [0x42a, 0x444]
Successors: [0x453, 0x4d5]
---
0x44c JUMPDEST
0x44d DUP2
0x44e ISZERO
0x44f PUSH2 0x4d5
0x452 JUMPI
---
0x44c: JUMPDEST 
0x44e: V384 = ISZERO S1
0x44f: V385 = 0x4d5
0x452: JUMPI 0x4d5 V384
---
Entry stack: [V10, 0xa3, 0x26d, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xa3, 0x26d, S1, S0]

================================

Block 0x453
[0x453:0x4d0]
---
Predecessors: [0x44c]
Successors: [0x4d1, 0x4d5]
---
0x453 PUSH1 0x2
0x455 SLOAD
0x456 PUSH32 0x8c8f77105ce8ee99e391fd4da140bc14a988eb4cf878b240bfed9b10ae7c6758
0x477 SWAP1
0x478 PUSH1 0x1
0x47a PUSH1 0xa0
0x47c PUSH1 0x2
0x47e EXP
0x47f SUB
0x480 AND
0x481 DUP4
0x482 PUSH1 0x40
0x484 MLOAD
0x485 PUSH1 0x1
0x487 PUSH1 0xa0
0x489 PUSH1 0x2
0x48b EXP
0x48c SUB
0x48d SWAP1
0x48e SWAP3
0x48f AND
0x490 DUP3
0x491 MSTORE
0x492 PUSH1 0x20
0x494 DUP3
0x495 ADD
0x496 MSTORE
0x497 PUSH1 0x40
0x499 SWAP1
0x49a DUP2
0x49b ADD
0x49c SWAP1
0x49d MLOAD
0x49e DUP1
0x49f SWAP2
0x4a0 SUB
0x4a1 SWAP1
0x4a2 LOG1
0x4a3 PUSH1 0x2
0x4a5 SLOAD
0x4a6 PUSH1 0x1
0x4a8 PUSH1 0xa0
0x4aa PUSH1 0x2
0x4ac EXP
0x4ad SUB
0x4ae AND
0x4af DUP3
0x4b0 ISZERO
0x4b1 PUSH2 0x8fc
0x4b4 MUL
0x4b5 DUP4
0x4b6 PUSH1 0x40
0x4b8 MLOAD
0x4b9 PUSH1 0x0
0x4bb PUSH1 0x40
0x4bd MLOAD
0x4be DUP1
0x4bf DUP4
0x4c0 SUB
0x4c1 DUP2
0x4c2 DUP6
0x4c3 DUP9
0x4c4 DUP9
0x4c5 CALL
0x4c6 SWAP4
0x4c7 POP
0x4c8 POP
0x4c9 POP
0x4ca POP
0x4cb ISZERO
0x4cc ISZERO
0x4cd PUSH2 0x4d5
0x4d0 JUMPI
---
0x453: V386 = 0x2
0x455: V387 = S[0x2]
0x456: V388 = 0x8c8f77105ce8ee99e391fd4da140bc14a988eb4cf878b240bfed9b10ae7c6758
0x478: V389 = 0x1
0x47a: V390 = 0xa0
0x47c: V391 = 0x2
0x47e: V392 = EXP 0x2 0xa0
0x47f: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x480: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x482: V395 = 0x40
0x484: V396 = M[0x40]
0x485: V397 = 0x1
0x487: V398 = 0xa0
0x489: V399 = 0x2
0x48b: V400 = EXP 0x2 0xa0
0x48c: V401 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48f: V402 = AND V394 0xffffffffffffffffffffffffffffffffffffffff
0x491: M[V396] = V402
0x492: V403 = 0x20
0x495: V404 = ADD V396 0x20
0x496: M[V404] = S1
0x497: V405 = 0x40
0x49b: V406 = ADD 0x40 V396
0x49d: V407 = M[0x40]
0x4a0: V408 = SUB V406 V407
0x4a2: LOG V407 V408 0x8c8f77105ce8ee99e391fd4da140bc14a988eb4cf878b240bfed9b10ae7c6758
0x4a3: V409 = 0x2
0x4a5: V410 = S[0x2]
0x4a6: V411 = 0x1
0x4a8: V412 = 0xa0
0x4aa: V413 = 0x2
0x4ac: V414 = EXP 0x2 0xa0
0x4ad: V415 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ae: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff V410
0x4b0: V417 = ISZERO S1
0x4b1: V418 = 0x8fc
0x4b4: V419 = MUL 0x8fc V417
0x4b6: V420 = 0x40
0x4b8: V421 = M[0x40]
0x4b9: V422 = 0x0
0x4bb: V423 = 0x40
0x4bd: V424 = M[0x40]
0x4c0: V425 = SUB V421 V424
0x4c5: V426 = CALL V419 V416 S1 V424 V425 V424 0x0
0x4cb: V427 = ISZERO V426
0x4cc: V428 = ISZERO V427
0x4cd: V429 = 0x4d5
0x4d0: JUMPI 0x4d5 V428
---
Entry stack: [V10, 0xa3, 0x26d, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xa3, 0x26d, S1, S0]

================================

Block 0x4d1
[0x4d1:0x4d4]
---
Predecessors: [0x453]
Successors: []
---
0x4d1 PUSH1 0x0
0x4d3 DUP1
0x4d4 REVERT
---
0x4d1: V430 = 0x0
0x4d4: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3, 0x26d, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, 0x26d, S1, S0]

================================

Block 0x4d5
[0x4d5:0x4d5]
---
Predecessors: [0x44c, 0x453]
Successors: [0x4d6]
---
0x4d5 JUMPDEST
---
0x4d5: JUMPDEST 
---
Entry stack: [V10, 0xa3, 0x26d, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, 0x26d, S1, S0]

================================

Block 0x4d6
[0x4d6:0x4dc]
---
Predecessors: [0x4d5]
Successors: [0x4dd, 0x55f]
---
0x4d6 JUMPDEST
0x4d7 DUP1
0x4d8 ISZERO
0x4d9 PUSH2 0x55f
0x4dc JUMPI
---
0x4d6: JUMPDEST 
0x4d8: V431 = ISZERO S0
0x4d9: V432 = 0x55f
0x4dc: JUMPI 0x55f V431
---
Entry stack: [V10, 0xa3, 0x26d, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xa3, 0x26d, S1, S0]

================================

Block 0x4dd
[0x4dd:0x55a]
---
Predecessors: [0x4d6]
Successors: [0x55b, 0x55f]
---
0x4dd PUSH1 0x0
0x4df SLOAD
0x4e0 PUSH32 0x8c8f77105ce8ee99e391fd4da140bc14a988eb4cf878b240bfed9b10ae7c6758
0x501 SWAP1
0x502 PUSH1 0x1
0x504 PUSH1 0xa0
0x506 PUSH1 0x2
0x508 EXP
0x509 SUB
0x50a AND
0x50b DUP3
0x50c PUSH1 0x40
0x50e MLOAD
0x50f PUSH1 0x1
0x511 PUSH1 0xa0
0x513 PUSH1 0x2
0x515 EXP
0x516 SUB
0x517 SWAP1
0x518 SWAP3
0x519 AND
0x51a DUP3
0x51b MSTORE
0x51c PUSH1 0x20
0x51e DUP3
0x51f ADD
0x520 MSTORE
0x521 PUSH1 0x40
0x523 SWAP1
0x524 DUP2
0x525 ADD
0x526 SWAP1
0x527 MLOAD
0x528 DUP1
0x529 SWAP2
0x52a SUB
0x52b SWAP1
0x52c LOG1
0x52d PUSH1 0x0
0x52f SLOAD
0x530 PUSH1 0x1
0x532 PUSH1 0xa0
0x534 PUSH1 0x2
0x536 EXP
0x537 SUB
0x538 AND
0x539 DUP2
0x53a ISZERO
0x53b PUSH2 0x8fc
0x53e MUL
0x53f DUP3
0x540 PUSH1 0x40
0x542 MLOAD
0x543 PUSH1 0x0
0x545 PUSH1 0x40
0x547 MLOAD
0x548 DUP1
0x549 DUP4
0x54a SUB
0x54b DUP2
0x54c DUP6
0x54d DUP9
0x54e DUP9
0x54f CALL
0x550 SWAP4
0x551 POP
0x552 POP
0x553 POP
0x554 POP
0x555 ISZERO
0x556 ISZERO
0x557 PUSH2 0x55f
0x55a JUMPI
---
0x4dd: V433 = 0x0
0x4df: V434 = S[0x0]
0x4e0: V435 = 0x8c8f77105ce8ee99e391fd4da140bc14a988eb4cf878b240bfed9b10ae7c6758
0x502: V436 = 0x1
0x504: V437 = 0xa0
0x506: V438 = 0x2
0x508: V439 = EXP 0x2 0xa0
0x509: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50a: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V434
0x50c: V442 = 0x40
0x50e: V443 = M[0x40]
0x50f: V444 = 0x1
0x511: V445 = 0xa0
0x513: V446 = 0x2
0x515: V447 = EXP 0x2 0xa0
0x516: V448 = SUB 0x10000000000000000000000000000000000000000 0x1
0x519: V449 = AND V441 0xffffffffffffffffffffffffffffffffffffffff
0x51b: M[V443] = V449
0x51c: V450 = 0x20
0x51f: V451 = ADD V443 0x20
0x520: M[V451] = S0
0x521: V452 = 0x40
0x525: V453 = ADD 0x40 V443
0x527: V454 = M[0x40]
0x52a: V455 = SUB V453 V454
0x52c: LOG V454 V455 0x8c8f77105ce8ee99e391fd4da140bc14a988eb4cf878b240bfed9b10ae7c6758
0x52d: V456 = 0x0
0x52f: V457 = S[0x0]
0x530: V458 = 0x1
0x532: V459 = 0xa0
0x534: V460 = 0x2
0x536: V461 = EXP 0x2 0xa0
0x537: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x538: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x53a: V464 = ISZERO S0
0x53b: V465 = 0x8fc
0x53e: V466 = MUL 0x8fc V464
0x540: V467 = 0x40
0x542: V468 = M[0x40]
0x543: V469 = 0x0
0x545: V470 = 0x40
0x547: V471 = M[0x40]
0x54a: V472 = SUB V468 V471
0x54f: V473 = CALL V466 V463 S0 V471 V472 V471 0x0
0x555: V474 = ISZERO V473
0x556: V475 = ISZERO V474
0x557: V476 = 0x55f
0x55a: JUMPI 0x55f V475
---
Entry stack: [V10, 0xa3, 0x26d, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xa3, 0x26d, S1, S0]

================================

Block 0x55b
[0x55b:0x55e]
---
Predecessors: [0x4dd]
Successors: []
---
0x55b PUSH1 0x0
0x55d DUP1
0x55e REVERT
---
0x55b: V477 = 0x0
0x55e: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa3, 0x26d, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, 0x26d, S1, S0]

================================

Block 0x55f
[0x55f:0x55f]
---
Predecessors: [0x4d6, 0x4dd]
Successors: [0x560]
---
0x55f JUMPDEST
---
0x55f: JUMPDEST 
---
Entry stack: [V10, 0xa3, 0x26d, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, 0x26d, S1, S0]

================================

Block 0x560
[0x560:0x560]
---
Predecessors: [0x55f]
Successors: [0x561]
---
0x560 JUMPDEST
---
0x560: JUMPDEST 
---
Entry stack: [V10, 0xa3, 0x26d, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, 0x26d, S1, S0]

================================

Block 0x561
[0x561:0x564]
---
Predecessors: [0x560]
Successors: [0x26d]
---
0x561 JUMPDEST
0x562 POP
0x563 POP
0x564 JUMP
---
0x561: JUMPDEST 
0x564: JUMP 0x26d
---
Entry stack: [V10, 0xa3, 0x26d, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0xa3]

================================

Block 0x565
[0x565:0x590]
---
Predecessors: []
Successors: []
---
0x565 STOP
0x566 LOG1
0x567 PUSH6 0x627a7a723058
0x56e SHA3
0x56f ADDMOD
0x570 MISSING 0xba
0x571 SMOD
0x572 CREATE
0x573 PUSH27 0x42c94e6eb3edda233f65436eb9e63e563c8b29d21767f116947401
0x58f STOP
0x590 MISSING 0x29
---
0x565: STOP 
0x566: LOG S0 S1 S2
0x567: V478 = 0x627a7a723058
0x56e: V479 = SHA3 0x627a7a723058 S3
0x56f: V480 = ADDMOD V479 S4 S5
0x570: MISSING 0xba
0x571: V481 = SMOD S0 S1
0x572: V482 = CREATE V481 S2 S3
0x573: V483 = 0x42c94e6eb3edda233f65436eb9e63e563c8b29d21767f116947401
0x58f: STOP 
0x590: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V480, 0x42c94e6eb3edda233f65436eb9e63e563c8b29d21767f116947401, V482]
Exit stack: []

================================

Function 0:
Public function signature: 0x38af3eed
Entry block: 0xa7
Exit block: 0xba
Body: 0xa7, 0xae, 0xb2, 0xba, 0x1c1

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xd6
Exit block: 0xa5
Body: 0xa3, 0xa4, 0xa5, 0xd6, 0xdd, 0xe1, 0x1d0, 0x1d8, 0x1df, 0x1e3, 0x1f6, 0x1fa, 0x230, 0x234, 0x269, 0x26d, 0x26e, 0x26f, 0x270, 0x3e6, 0x3f9

Function 2:
Public function signature: 0x5432202a
Entry block: 0xeb
Exit block: 0xfe
Body: 0xeb, 0xf2, 0xf6, 0xfe, 0x272, 0x285

Function 3:
Public function signature: 0x73b6eacf
Entry block: 0x112
Exit block: 0x125
Body: 0x112, 0x119, 0x11d, 0x125, 0x288

Function 4:
Public function signature: 0x919840ad
Entry block: 0x137
Exit block: 0xa5
Body: 0xa3, 0xa4, 0xa5, 0x137, 0x26d, 0x26e, 0x26f, 0x270, 0x28e, 0x2a5, 0x2a9, 0x2bc, 0x2c0, 0x2d3, 0x2d7, 0x2df, 0x2e5, 0x3fc, 0x427, 0x42a, 0x444, 0x44c, 0x453, 0x4d1, 0x4d5, 0x4d6, 0x4dd, 0x55b, 0x55f, 0x560, 0x561

Function 5:
Public function signature: 0xc255343e
Entry block: 0x141
Exit block: 0xba
Body: 0xba, 0x141, 0x148, 0x14c, 0x354

Function 6:
Public function signature: 0xd333ec79
Entry block: 0x170
Exit block: 0xa5
Body: 0xa3, 0xa4, 0xa5, 0x170, 0x177, 0x17b, 0x363, 0x37a, 0x37e, 0x38f, 0x390, 0x3b9, 0x3ba

Function 7:
Public function signature: 0xf5e3fc30
Entry block: 0x191
Exit block: 0x1a4
Body: 0x191, 0x198, 0x19c, 0x1a4, 0x3bd

Function 8:
Public fallback function
Entry block: 0x8b
Exit block: 0xa5
Body: 0x8b, 0x8c, 0x9f, 0xa3, 0xa4, 0xa5

