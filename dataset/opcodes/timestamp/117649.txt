Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x98]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x98
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x98
0xc: JUMPI 0x98 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xa2]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x85f0316
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xa2
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x85f0316
0x3b: V13 = EQ V11 0x85f0316
0x3c: V14 = 0xa2
0x3f: JUMPI 0xa2 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xc9]
---
0x40 DUP1
0x41 PUSH4 0x1ad100bb
0x46 EQ
0x47 PUSH2 0xc9
0x4a JUMPI
---
0x41: V15 = 0x1ad100bb
0x46: V16 = EQ 0x1ad100bb V11
0x47: V17 = 0xc9
0x4a: JUMPI 0xc9 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xfa]
---
0x4b DUP1
0x4c PUSH4 0x2bea500d
0x51 EQ
0x52 PUSH2 0xfa
0x55 JUMPI
---
0x4c: V18 = 0x2bea500d
0x51: V19 = EQ 0x2bea500d V11
0x52: V20 = 0xfa
0x55: JUMPI 0xfa V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x10f]
---
0x56 DUP1
0x57 PUSH4 0x3bf47720
0x5c EQ
0x5d PUSH2 0x10f
0x60 JUMPI
---
0x57: V21 = 0x3bf47720
0x5c: V22 = EQ 0x3bf47720 V11
0x5d: V23 = 0x10f
0x60: JUMPI 0x10f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x124]
---
0x61 DUP1
0x62 PUSH4 0x8da5cb5b
0x67 EQ
0x68 PUSH2 0x124
0x6b JUMPI
---
0x62: V24 = 0x8da5cb5b
0x67: V25 = EQ 0x8da5cb5b V11
0x68: V26 = 0x124
0x6b: JUMPI 0x124 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x139]
---
0x6c DUP1
0x6d PUSH4 0x9d1b464a
0x72 EQ
0x73 PUSH2 0x139
0x76 JUMPI
---
0x6d: V27 = 0x9d1b464a
0x72: V28 = EQ 0x9d1b464a V11
0x73: V29 = 0x139
0x76: JUMPI 0x139 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x14e]
---
0x77 DUP1
0x78 PUSH4 0xbab2f552
0x7d EQ
0x7e PUSH2 0x14e
0x81 JUMPI
---
0x78: V30 = 0xbab2f552
0x7d: V31 = EQ 0xbab2f552 V11
0x7e: V32 = 0x14e
0x81: JUMPI 0x14e V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x163]
---
0x82 DUP1
0x83 PUSH4 0xe927fc5c
0x88 EQ
0x89 PUSH2 0x163
0x8c JUMPI
---
0x83: V33 = 0xe927fc5c
0x88: V34 = EQ 0xe927fc5c V11
0x89: V35 = 0x163
0x8c: JUMPI 0x163 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x178]
---
0x8d DUP1
0x8e PUSH4 0xf6f57127
0x93 EQ
0x94 PUSH2 0x178
0x97 JUMPI
---
0x8e: V36 = 0xf6f57127
0x93: V37 = EQ 0xf6f57127 V11
0x94: V38 = 0x178
0x97: JUMPI 0x178 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0x9f]
---
Predecessors: [0x0, 0x8d]
Successors: [0x18d]
---
0x98 JUMPDEST
0x99 PUSH2 0xa0
0x9c PUSH2 0x18d
0x9f JUMP
---
0x98: JUMPDEST 
0x99: V39 = 0xa0
0x9c: V40 = 0x18d
0x9f: JUMP 0x18d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa0]
Exit stack: [V11, 0xa0]

================================

Block 0xa0
[0xa0:0xa1]
---
Predecessors: [0x4a3, 0x537, 0x772]
Successors: []
---
0xa0 JUMPDEST
0xa1 STOP
---
0xa0: JUMPDEST 
0xa1: STOP 
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa2
[0xa2:0xa9]
---
Predecessors: [0xd]
Successors: [0xaa, 0xae]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 DUP1
0xa5 ISZERO
0xa6 PUSH2 0xae
0xa9 JUMPI
---
0xa2: JUMPDEST 
0xa3: V41 = CALLVALUE
0xa5: V42 = ISZERO V41
0xa6: V43 = 0xae
0xa9: JUMPI 0xae V42
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V11, V41]

================================

Block 0xaa
[0xaa:0xad]
---
Predecessors: [0xa2]
Successors: []
---
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xaa: V44 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V11, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V41]

================================

Block 0xae
[0xae:0xb6]
---
Predecessors: [0xa2]
Successors: [0x4a5]
---
0xae JUMPDEST
0xaf POP
0xb0 PUSH2 0xb7
0xb3 PUSH2 0x4a5
0xb6 JUMP
---
0xae: JUMPDEST 
0xb0: V45 = 0xb7
0xb3: V46 = 0x4a5
0xb6: JUMP 0x4a5
---
Entry stack: [V11, V41]
Stack pops: 1
Stack additions: [0xb7]
Exit stack: [V11, 0xb7]

================================

Block 0xb7
[0xb7:0xc8]
---
Predecessors: [0x4a5, 0x4c9, 0x4de, 0x4e4]
Successors: []
---
0xb7 JUMPDEST
0xb8 PUSH1 0x40
0xba DUP1
0xbb MLOAD
0xbc SWAP2
0xbd DUP3
0xbe MSTORE
0xbf MLOAD
0xc0 SWAP1
0xc1 DUP2
0xc2 SWAP1
0xc3 SUB
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP1
0xc8 RETURN
---
0xb7: JUMPDEST 
0xb8: V47 = 0x40
0xbb: V48 = M[0x40]
0xbe: M[V48] = S0
0xbf: V49 = M[0x40]
0xc3: V50 = SUB V48 V49
0xc4: V51 = 0x20
0xc6: V52 = ADD 0x20 V50
0xc8: RETURN V49 V52
---
Entry stack: [V11, 0xb7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb7]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0x40]
Successors: [0xd1, 0xd5]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb DUP1
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xc9: JUMPDEST 
0xca: V53 = CALLVALUE
0xcc: V54 = ISZERO V53
0xcd: V55 = 0xd5
0xd0: JUMPI 0xd5 V54
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V53]
Exit stack: [V11, V53]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xc9]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V56 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V11, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V53]

================================

Block 0xd5
[0xd5:0xdd]
---
Predecessors: [0xc9]
Successors: [0x4ab]
---
0xd5 JUMPDEST
0xd6 POP
0xd7 PUSH2 0xde
0xda PUSH2 0x4ab
0xdd JUMP
---
0xd5: JUMPDEST 
0xd7: V57 = 0xde
0xda: V58 = 0x4ab
0xdd: JUMP 0x4ab
---
Entry stack: [V11, V53]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V11, 0xde]

================================

Block 0xde
[0xde:0xf9]
---
Predecessors: [0x4ab, 0x4ba, 0x4cf, 0x4ea, 0x4f9]
Successors: []
---
0xde JUMPDEST
0xdf PUSH1 0x40
0xe1 DUP1
0xe2 MLOAD
0xe3 PUSH1 0x1
0xe5 PUSH1 0xa0
0xe7 PUSH1 0x2
0xe9 EXP
0xea SUB
0xeb SWAP1
0xec SWAP3
0xed AND
0xee DUP3
0xef MSTORE
0xf0 MLOAD
0xf1 SWAP1
0xf2 DUP2
0xf3 SWAP1
0xf4 SUB
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP1
0xf9 RETURN
---
0xde: JUMPDEST 
0xdf: V59 = 0x40
0xe2: V60 = M[0x40]
0xe3: V61 = 0x1
0xe5: V62 = 0xa0
0xe7: V63 = 0x2
0xe9: V64 = EXP 0x2 0xa0
0xea: V65 = SUB 0x10000000000000000000000000000000000000000 0x1
0xed: V66 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xef: M[V60] = V66
0xf0: V67 = M[0x40]
0xf4: V68 = SUB V60 V67
0xf5: V69 = 0x20
0xf7: V70 = ADD 0x20 V68
0xf9: RETURN V67 V70
---
Entry stack: [V11, 0xde, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xde]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0x4b]
Successors: [0x102, 0x106]
---
0xfa JUMPDEST
0xfb CALLVALUE
0xfc DUP1
0xfd ISZERO
0xfe PUSH2 0x106
0x101 JUMPI
---
0xfa: JUMPDEST 
0xfb: V71 = CALLVALUE
0xfd: V72 = ISZERO V71
0xfe: V73 = 0x106
0x101: JUMPI 0x106 V72
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V71]
Exit stack: [V11, V71]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xfa]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V74 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V11, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V71]

================================

Block 0x106
[0x106:0x10e]
---
Predecessors: [0xfa]
Successors: [0x4ba]
---
0x106 JUMPDEST
0x107 POP
0x108 PUSH2 0xde
0x10b PUSH2 0x4ba
0x10e JUMP
---
0x106: JUMPDEST 
0x108: V75 = 0xde
0x10b: V76 = 0x4ba
0x10e: JUMP 0x4ba
---
Entry stack: [V11, V71]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V11, 0xde]

================================

Block 0x10f
[0x10f:0x116]
---
Predecessors: [0x56]
Successors: [0x117, 0x11b]
---
0x10f JUMPDEST
0x110 CALLVALUE
0x111 DUP1
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0x10f: JUMPDEST 
0x110: V77 = CALLVALUE
0x112: V78 = ISZERO V77
0x113: V79 = 0x11b
0x116: JUMPI 0x11b V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V11, V77]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x10f]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V80 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V11, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V77]

================================

Block 0x11b
[0x11b:0x123]
---
Predecessors: [0x10f]
Successors: [0x4c9]
---
0x11b JUMPDEST
0x11c POP
0x11d PUSH2 0xb7
0x120 PUSH2 0x4c9
0x123 JUMP
---
0x11b: JUMPDEST 
0x11d: V81 = 0xb7
0x120: V82 = 0x4c9
0x123: JUMP 0x4c9
---
Entry stack: [V11, V77]
Stack pops: 1
Stack additions: [0xb7]
Exit stack: [V11, 0xb7]

================================

Block 0x124
[0x124:0x12b]
---
Predecessors: [0x61]
Successors: [0x12c, 0x130]
---
0x124 JUMPDEST
0x125 CALLVALUE
0x126 DUP1
0x127 ISZERO
0x128 PUSH2 0x130
0x12b JUMPI
---
0x124: JUMPDEST 
0x125: V83 = CALLVALUE
0x127: V84 = ISZERO V83
0x128: V85 = 0x130
0x12b: JUMPI 0x130 V84
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V83]
Exit stack: [V11, V83]

================================

Block 0x12c
[0x12c:0x12f]
---
Predecessors: [0x124]
Successors: []
---
0x12c PUSH1 0x0
0x12e DUP1
0x12f REVERT
---
0x12c: V86 = 0x0
0x12f: REVERT 0x0 0x0
---
Entry stack: [V11, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V83]

================================

Block 0x130
[0x130:0x138]
---
Predecessors: [0x124]
Successors: [0x4cf]
---
0x130 JUMPDEST
0x131 POP
0x132 PUSH2 0xde
0x135 PUSH2 0x4cf
0x138 JUMP
---
0x130: JUMPDEST 
0x132: V87 = 0xde
0x135: V88 = 0x4cf
0x138: JUMP 0x4cf
---
Entry stack: [V11, V83]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V11, 0xde]

================================

Block 0x139
[0x139:0x140]
---
Predecessors: [0x6c]
Successors: [0x141, 0x145]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b DUP1
0x13c ISZERO
0x13d PUSH2 0x145
0x140 JUMPI
---
0x139: JUMPDEST 
0x13a: V89 = CALLVALUE
0x13c: V90 = ISZERO V89
0x13d: V91 = 0x145
0x140: JUMPI 0x145 V90
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V89]
Exit stack: [V11, V89]

================================

Block 0x141
[0x141:0x144]
---
Predecessors: [0x139]
Successors: []
---
0x141 PUSH1 0x0
0x143 DUP1
0x144 REVERT
---
0x141: V92 = 0x0
0x144: REVERT 0x0 0x0
---
Entry stack: [V11, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V89]

================================

Block 0x145
[0x145:0x14d]
---
Predecessors: [0x139]
Successors: [0x4de]
---
0x145 JUMPDEST
0x146 POP
0x147 PUSH2 0xb7
0x14a PUSH2 0x4de
0x14d JUMP
---
0x145: JUMPDEST 
0x147: V93 = 0xb7
0x14a: V94 = 0x4de
0x14d: JUMP 0x4de
---
Entry stack: [V11, V89]
Stack pops: 1
Stack additions: [0xb7]
Exit stack: [V11, 0xb7]

================================

Block 0x14e
[0x14e:0x155]
---
Predecessors: [0x77]
Successors: [0x156, 0x15a]
---
0x14e JUMPDEST
0x14f CALLVALUE
0x150 DUP1
0x151 ISZERO
0x152 PUSH2 0x15a
0x155 JUMPI
---
0x14e: JUMPDEST 
0x14f: V95 = CALLVALUE
0x151: V96 = ISZERO V95
0x152: V97 = 0x15a
0x155: JUMPI 0x15a V96
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V95]
Exit stack: [V11, V95]

================================

Block 0x156
[0x156:0x159]
---
Predecessors: [0x14e]
Successors: []
---
0x156 PUSH1 0x0
0x158 DUP1
0x159 REVERT
---
0x156: V98 = 0x0
0x159: REVERT 0x0 0x0
---
Entry stack: [V11, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V95]

================================

Block 0x15a
[0x15a:0x162]
---
Predecessors: [0x14e]
Successors: [0x4e4]
---
0x15a JUMPDEST
0x15b POP
0x15c PUSH2 0xb7
0x15f PUSH2 0x4e4
0x162 JUMP
---
0x15a: JUMPDEST 
0x15c: V99 = 0xb7
0x15f: V100 = 0x4e4
0x162: JUMP 0x4e4
---
Entry stack: [V11, V95]
Stack pops: 1
Stack additions: [0xb7]
Exit stack: [V11, 0xb7]

================================

Block 0x163
[0x163:0x16a]
---
Predecessors: [0x82]
Successors: [0x16b, 0x16f]
---
0x163 JUMPDEST
0x164 CALLVALUE
0x165 DUP1
0x166 ISZERO
0x167 PUSH2 0x16f
0x16a JUMPI
---
0x163: JUMPDEST 
0x164: V101 = CALLVALUE
0x166: V102 = ISZERO V101
0x167: V103 = 0x16f
0x16a: JUMPI 0x16f V102
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V101]
Exit stack: [V11, V101]

================================

Block 0x16b
[0x16b:0x16e]
---
Predecessors: [0x163]
Successors: []
---
0x16b PUSH1 0x0
0x16d DUP1
0x16e REVERT
---
0x16b: V104 = 0x0
0x16e: REVERT 0x0 0x0
---
Entry stack: [V11, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V101]

================================

Block 0x16f
[0x16f:0x177]
---
Predecessors: [0x163]
Successors: [0x4ea]
---
0x16f JUMPDEST
0x170 POP
0x171 PUSH2 0xde
0x174 PUSH2 0x4ea
0x177 JUMP
---
0x16f: JUMPDEST 
0x171: V105 = 0xde
0x174: V106 = 0x4ea
0x177: JUMP 0x4ea
---
Entry stack: [V11, V101]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V11, 0xde]

================================

Block 0x178
[0x178:0x17f]
---
Predecessors: [0x8d]
Successors: [0x180, 0x184]
---
0x178 JUMPDEST
0x179 CALLVALUE
0x17a DUP1
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x178: JUMPDEST 
0x179: V107 = CALLVALUE
0x17b: V108 = ISZERO V107
0x17c: V109 = 0x184
0x17f: JUMPI 0x184 V108
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V107]
Exit stack: [V11, V107]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x178]
Successors: []
---
0x180 PUSH1 0x0
0x182 DUP1
0x183 REVERT
---
0x180: V110 = 0x0
0x183: REVERT 0x0 0x0
---
Entry stack: [V11, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V107]

================================

Block 0x184
[0x184:0x18c]
---
Predecessors: [0x178]
Successors: [0x4f9]
---
0x184 JUMPDEST
0x185 POP
0x186 PUSH2 0xde
0x189 PUSH2 0x4f9
0x18c JUMP
---
0x184: JUMPDEST 
0x186: V111 = 0xde
0x189: V112 = 0x4f9
0x18c: JUMP 0x4f9
---
Entry stack: [V11, V107]
Stack pops: 1
Stack additions: [0xde]
Exit stack: [V11, 0xde]

================================

Block 0x18d
[0x18d:0x196]
---
Predecessors: [0x98]
Successors: [0x197, 0x445]
---
0x18d JUMPDEST
0x18e PUSH1 0x0
0x190 CALLVALUE
0x191 GT
0x192 ISZERO
0x193 PUSH2 0x445
0x196 JUMPI
---
0x18d: JUMPDEST 
0x18e: V113 = 0x0
0x190: V114 = CALLVALUE
0x191: V115 = GT V114 0x0
0x192: V116 = ISZERO V115
0x193: V117 = 0x445
0x196: JUMPI 0x445 V116
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0]

================================

Block 0x197
[0x197:0x19f]
---
Predecessors: [0x18d]
Successors: [0x1a0, 0x3fb]
---
0x197 PUSH1 0x9
0x199 SLOAD
0x19a CALLVALUE
0x19b LT
0x19c PUSH2 0x3fb
0x19f JUMPI
---
0x197: V118 = 0x9
0x199: V119 = S[0x9]
0x19a: V120 = CALLVALUE
0x19b: V121 = LT V120 V119
0x19c: V122 = 0x3fb
0x19f: JUMPI 0x3fb V121
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0]

================================

Block 0x1a0
[0x1a0:0x1c3]
---
Predecessors: [0x197]
Successors: [0x508]
---
0x1a0 PUSH1 0x6
0x1a2 DUP1
0x1a3 SLOAD
0x1a4 PUSH1 0x1
0x1a6 SWAP1
0x1a7 DUP2
0x1a8 ADD
0x1a9 SWAP1
0x1aa SWAP2
0x1ab SSTORE
0x1ac TIMESTAMP
0x1ad SWAP1
0x1ae SSTORE
0x1af PUSH1 0x0
0x1b1 PUSH1 0x5
0x1b3 SSTORE
0x1b4 PUSH2 0x1c4
0x1b7 CALLVALUE
0x1b8 PUSH1 0x2
0x1ba PUSH4 0xffffffff
0x1bf PUSH2 0x508
0x1c2 AND
0x1c3 JUMP
---
0x1a0: V123 = 0x6
0x1a3: V124 = S[0x6]
0x1a4: V125 = 0x1
0x1a8: V126 = ADD 0x1 V124
0x1ab: S[0x6] = V126
0x1ac: V127 = TIMESTAMP
0x1ae: S[0x1] = V127
0x1af: V128 = 0x0
0x1b1: V129 = 0x5
0x1b3: S[0x5] = 0x0
0x1b4: V130 = 0x1c4
0x1b7: V131 = CALLVALUE
0x1b8: V132 = 0x2
0x1ba: V133 = 0xffffffff
0x1bf: V134 = 0x508
0x1c2: V135 = AND 0x508 0xffffffff
0x1c3: JUMP 0x508
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: [0x1c4, V131, 0x2]
Exit stack: [V11, 0xa0, 0x1c4, V131, 0x2]

================================

Block 0x1c4
[0x1c4:0x1f4]
---
Predecessors: [0x537]
Successors: [0x508]
---
0x1c4 JUMPDEST
0x1c5 PUSH1 0x9
0x1c7 SSTORE
0x1c8 PUSH1 0x2
0x1ca SLOAD
0x1cb PUSH1 0xa
0x1cd SLOAD
0x1ce PUSH1 0x1
0x1d0 PUSH1 0xa0
0x1d2 PUSH1 0x2
0x1d4 EXP
0x1d5 SUB
0x1d6 SWAP1
0x1d7 SWAP2
0x1d8 AND
0x1d9 SWAP1
0x1da PUSH2 0x8fc
0x1dd SWAP1
0x1de PUSH2 0x201
0x1e1 SWAP1
0x1e2 PUSH1 0x64
0x1e4 SWAP1
0x1e5 PUSH2 0x1f5
0x1e8 SWAP1
0x1e9 CALLVALUE
0x1ea SWAP1
0x1eb PUSH4 0xffffffff
0x1f0 PUSH2 0x508
0x1f3 AND
0x1f4 JUMP
---
0x1c4: JUMPDEST 
0x1c5: V136 = 0x9
0x1c7: S[0x9] = S0
0x1c8: V137 = 0x2
0x1ca: V138 = S[0x2]
0x1cb: V139 = 0xa
0x1cd: V140 = S[0xa]
0x1ce: V141 = 0x1
0x1d0: V142 = 0xa0
0x1d2: V143 = 0x2
0x1d4: V144 = EXP 0x2 0xa0
0x1d5: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d8: V146 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V147 = 0x8fc
0x1de: V148 = 0x201
0x1e2: V149 = 0x64
0x1e5: V150 = 0x1f5
0x1e9: V151 = CALLVALUE
0x1eb: V152 = 0xffffffff
0x1f0: V153 = 0x508
0x1f3: V154 = AND 0x508 0xffffffff
0x1f4: JUMP 0x508
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V146, 0x8fc, 0x201, 0x64, 0x1f5, V151, V140]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V146, 0x8fc, 0x201, 0x64, 0x1f5, V151, V140]

================================

Block 0x1f5
[0x1f5:0x200]
---
Predecessors: [0x537]
Successors: [0x53e]
---
0x1f5 JUMPDEST
0x1f6 SWAP1
0x1f7 PUSH4 0xffffffff
0x1fc PUSH2 0x53e
0x1ff AND
0x200 JUMP
---
0x1f5: JUMPDEST 
0x1f7: V155 = 0xffffffff
0x1fc: V156 = 0x53e
0x1ff: V157 = AND 0x53e 0xffffffff
0x200: JUMP 0x53e
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x201
[0x201:0x21f]
---
Predecessors: [0x4a3, 0x54c, 0x772]
Successors: [0x220, 0x229]
---
0x201 JUMPDEST
0x202 PUSH1 0x40
0x204 MLOAD
0x205 DUP2
0x206 ISZERO
0x207 SWAP1
0x208 SWAP3
0x209 MUL
0x20a SWAP2
0x20b PUSH1 0x0
0x20d DUP2
0x20e DUP2
0x20f DUP2
0x210 DUP6
0x211 DUP9
0x212 DUP9
0x213 CALL
0x214 SWAP4
0x215 POP
0x216 POP
0x217 POP
0x218 POP
0x219 ISZERO
0x21a DUP1
0x21b ISZERO
0x21c PUSH2 0x229
0x21f JUMPI
---
0x201: JUMPDEST 
0x202: V158 = 0x40
0x204: V159 = M[0x40]
0x206: V160 = ISZERO S0
0x209: V161 = MUL S1 V160
0x20b: V162 = 0x0
0x213: V163 = CALL V161 S2 S0 V159 0x0 V159 0x0
0x219: V164 = ISZERO V163
0x21b: V165 = ISZERO V164
0x21c: V166 = 0x229
0x21f: JUMPI 0x229 V165
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V164]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V164]

================================

Block 0x220
[0x220:0x228]
---
Predecessors: [0x201]
Successors: []
---
0x220 RETURNDATASIZE
0x221 PUSH1 0x0
0x223 DUP1
0x224 RETURNDATACOPY
0x225 RETURNDATASIZE
0x226 PUSH1 0x0
0x228 REVERT
---
0x220: V167 = RETURNDATASIZE
0x221: V168 = 0x0
0x224: RETURNDATACOPY 0x0 0x0 V167
0x225: V169 = RETURNDATASIZE
0x226: V170 = 0x0
0x228: REVERT 0x0 V169
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V164]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V164]

================================

Block 0x229
[0x229:0x23b]
---
Predecessors: [0x201]
Successors: [0x23c, 0x293]
---
0x229 JUMPDEST
0x22a POP
0x22b PUSH1 0xd
0x22d SLOAD
0x22e PUSH1 0x1
0x230 PUSH1 0xa0
0x232 PUSH1 0x2
0x234 EXP
0x235 SUB
0x236 AND
0x237 ISZERO
0x238 PUSH2 0x293
0x23b JUMPI
---
0x229: JUMPDEST 
0x22b: V171 = 0xd
0x22d: V172 = S[0xd]
0x22e: V173 = 0x1
0x230: V174 = 0xa0
0x232: V175 = 0x2
0x234: V176 = EXP 0x2 0xa0
0x235: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x237: V179 = ISZERO V178
0x238: V180 = 0x293
0x23b: JUMPI 0x293 V179
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V164]
Stack pops: 1
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x23c
[0x23c:0x268]
---
Predecessors: [0x229]
Successors: [0x508]
---
0x23c PUSH1 0xd
0x23e SLOAD
0x23f PUSH1 0xe
0x241 SLOAD
0x242 PUSH1 0x1
0x244 PUSH1 0xa0
0x246 PUSH1 0x2
0x248 EXP
0x249 SUB
0x24a SWAP1
0x24b SWAP2
0x24c AND
0x24d SWAP1
0x24e PUSH2 0x8fc
0x251 SWAP1
0x252 PUSH2 0x269
0x255 SWAP1
0x256 PUSH1 0x64
0x258 SWAP1
0x259 PUSH2 0x1f5
0x25c SWAP1
0x25d CALLVALUE
0x25e SWAP1
0x25f PUSH4 0xffffffff
0x264 PUSH2 0x508
0x267 AND
0x268 JUMP
---
0x23c: V181 = 0xd
0x23e: V182 = S[0xd]
0x23f: V183 = 0xe
0x241: V184 = S[0xe]
0x242: V185 = 0x1
0x244: V186 = 0xa0
0x246: V187 = 0x2
0x248: V188 = EXP 0x2 0xa0
0x249: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24c: V190 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x24e: V191 = 0x8fc
0x252: V192 = 0x269
0x256: V193 = 0x64
0x259: V194 = 0x1f5
0x25d: V195 = CALLVALUE
0x25f: V196 = 0xffffffff
0x264: V197 = 0x508
0x267: V198 = AND 0x508 0xffffffff
0x268: JUMP 0x508
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V190, 0x8fc, 0x269, 0x64, 0x1f5, V195, V184]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V190, 0x8fc, 0x269, 0x64, 0x1f5, V195, V184]

================================

Block 0x269
[0x269:0x287]
---
Predecessors: [0x4a3, 0x54c, 0x772]
Successors: [0x288, 0x291]
---
0x269 JUMPDEST
0x26a PUSH1 0x40
0x26c MLOAD
0x26d DUP2
0x26e ISZERO
0x26f SWAP1
0x270 SWAP3
0x271 MUL
0x272 SWAP2
0x273 PUSH1 0x0
0x275 DUP2
0x276 DUP2
0x277 DUP2
0x278 DUP6
0x279 DUP9
0x27a DUP9
0x27b CALL
0x27c SWAP4
0x27d POP
0x27e POP
0x27f POP
0x280 POP
0x281 ISZERO
0x282 DUP1
0x283 ISZERO
0x284 PUSH2 0x291
0x287 JUMPI
---
0x269: JUMPDEST 
0x26a: V199 = 0x40
0x26c: V200 = M[0x40]
0x26e: V201 = ISZERO S0
0x271: V202 = MUL S1 V201
0x273: V203 = 0x0
0x27b: V204 = CALL V202 S2 S0 V200 0x0 V200 0x0
0x281: V205 = ISZERO V204
0x283: V206 = ISZERO V205
0x284: V207 = 0x291
0x287: JUMPI 0x291 V206
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V205]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V205]

================================

Block 0x288
[0x288:0x290]
---
Predecessors: [0x269]
Successors: []
---
0x288 RETURNDATASIZE
0x289 PUSH1 0x0
0x28b DUP1
0x28c RETURNDATACOPY
0x28d RETURNDATASIZE
0x28e PUSH1 0x0
0x290 REVERT
---
0x288: V208 = RETURNDATASIZE
0x289: V209 = 0x0
0x28c: RETURNDATACOPY 0x0 0x0 V208
0x28d: V210 = RETURNDATASIZE
0x28e: V211 = 0x0
0x290: REVERT 0x0 V210
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V205]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V205]

================================

Block 0x291
[0x291:0x292]
---
Predecessors: [0x269]
Successors: [0x293]
---
0x291 JUMPDEST
0x292 POP
---
0x291: JUMPDEST 
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V205]
Stack pops: 1
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x293
[0x293:0x2a4]
---
Predecessors: [0x229, 0x291]
Successors: [0x2a5, 0x2fc]
---
0x293 JUMPDEST
0x294 PUSH1 0xf
0x296 SLOAD
0x297 PUSH1 0x1
0x299 PUSH1 0xa0
0x29b PUSH1 0x2
0x29d EXP
0x29e SUB
0x29f AND
0x2a0 ISZERO
0x2a1 PUSH2 0x2fc
0x2a4 JUMPI
---
0x293: JUMPDEST 
0x294: V212 = 0xf
0x296: V213 = S[0xf]
0x297: V214 = 0x1
0x299: V215 = 0xa0
0x29b: V216 = 0x2
0x29d: V217 = EXP 0x2 0xa0
0x29e: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29f: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x2a0: V220 = ISZERO V219
0x2a1: V221 = 0x2fc
0x2a4: JUMPI 0x2fc V220
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x2a5
[0x2a5:0x2d1]
---
Predecessors: [0x293]
Successors: [0x508]
---
0x2a5 PUSH1 0xf
0x2a7 SLOAD
0x2a8 PUSH1 0x10
0x2aa SLOAD
0x2ab PUSH1 0x1
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SUB
0x2b3 SWAP1
0x2b4 SWAP2
0x2b5 AND
0x2b6 SWAP1
0x2b7 PUSH2 0x8fc
0x2ba SWAP1
0x2bb PUSH2 0x2d2
0x2be SWAP1
0x2bf PUSH1 0x64
0x2c1 SWAP1
0x2c2 PUSH2 0x1f5
0x2c5 SWAP1
0x2c6 CALLVALUE
0x2c7 SWAP1
0x2c8 PUSH4 0xffffffff
0x2cd PUSH2 0x508
0x2d0 AND
0x2d1 JUMP
---
0x2a5: V222 = 0xf
0x2a7: V223 = S[0xf]
0x2a8: V224 = 0x10
0x2aa: V225 = S[0x10]
0x2ab: V226 = 0x1
0x2ad: V227 = 0xa0
0x2af: V228 = 0x2
0x2b1: V229 = EXP 0x2 0xa0
0x2b2: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b5: V231 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V232 = 0x8fc
0x2bb: V233 = 0x2d2
0x2bf: V234 = 0x64
0x2c2: V235 = 0x1f5
0x2c6: V236 = CALLVALUE
0x2c8: V237 = 0xffffffff
0x2cd: V238 = 0x508
0x2d0: V239 = AND 0x508 0xffffffff
0x2d1: JUMP 0x508
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V231, 0x8fc, 0x2d2, 0x64, 0x1f5, V236, V225]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V231, 0x8fc, 0x2d2, 0x64, 0x1f5, V236, V225]

================================

Block 0x2d2
[0x2d2:0x2f0]
---
Predecessors: [0x4a3, 0x54c, 0x772]
Successors: [0x2f1, 0x2fa]
---
0x2d2 JUMPDEST
0x2d3 PUSH1 0x40
0x2d5 MLOAD
0x2d6 DUP2
0x2d7 ISZERO
0x2d8 SWAP1
0x2d9 SWAP3
0x2da MUL
0x2db SWAP2
0x2dc PUSH1 0x0
0x2de DUP2
0x2df DUP2
0x2e0 DUP2
0x2e1 DUP6
0x2e2 DUP9
0x2e3 DUP9
0x2e4 CALL
0x2e5 SWAP4
0x2e6 POP
0x2e7 POP
0x2e8 POP
0x2e9 POP
0x2ea ISZERO
0x2eb DUP1
0x2ec ISZERO
0x2ed PUSH2 0x2fa
0x2f0 JUMPI
---
0x2d2: JUMPDEST 
0x2d3: V240 = 0x40
0x2d5: V241 = M[0x40]
0x2d7: V242 = ISZERO S0
0x2da: V243 = MUL S1 V242
0x2dc: V244 = 0x0
0x2e4: V245 = CALL V243 S2 S0 V241 0x0 V241 0x0
0x2ea: V246 = ISZERO V245
0x2ec: V247 = ISZERO V246
0x2ed: V248 = 0x2fa
0x2f0: JUMPI 0x2fa V247
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V246]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V246]

================================

Block 0x2f1
[0x2f1:0x2f9]
---
Predecessors: [0x2d2]
Successors: []
---
0x2f1 RETURNDATASIZE
0x2f2 PUSH1 0x0
0x2f4 DUP1
0x2f5 RETURNDATACOPY
0x2f6 RETURNDATASIZE
0x2f7 PUSH1 0x0
0x2f9 REVERT
---
0x2f1: V249 = RETURNDATASIZE
0x2f2: V250 = 0x0
0x2f5: RETURNDATACOPY 0x0 0x0 V249
0x2f6: V251 = RETURNDATASIZE
0x2f7: V252 = 0x0
0x2f9: REVERT 0x0 V251
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V246]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V246]

================================

Block 0x2fa
[0x2fa:0x2fb]
---
Predecessors: [0x2d2]
Successors: [0x2fc]
---
0x2fa JUMPDEST
0x2fb POP
---
0x2fa: JUMPDEST 
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V246]
Stack pops: 1
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x2fc
[0x2fc:0x30d]
---
Predecessors: [0x293, 0x2fa]
Successors: [0x30e, 0x365]
---
0x2fc JUMPDEST
0x2fd PUSH1 0x11
0x2ff SLOAD
0x300 PUSH1 0x1
0x302 PUSH1 0xa0
0x304 PUSH1 0x2
0x306 EXP
0x307 SUB
0x308 AND
0x309 ISZERO
0x30a PUSH2 0x365
0x30d JUMPI
---
0x2fc: JUMPDEST 
0x2fd: V253 = 0x11
0x2ff: V254 = S[0x11]
0x300: V255 = 0x1
0x302: V256 = 0xa0
0x304: V257 = 0x2
0x306: V258 = EXP 0x2 0xa0
0x307: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x308: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x309: V261 = ISZERO V260
0x30a: V262 = 0x365
0x30d: JUMPI 0x365 V261
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x30e
[0x30e:0x33a]
---
Predecessors: [0x2fc]
Successors: [0x508]
---
0x30e PUSH1 0x11
0x310 SLOAD
0x311 PUSH1 0x12
0x313 SLOAD
0x314 PUSH1 0x1
0x316 PUSH1 0xa0
0x318 PUSH1 0x2
0x31a EXP
0x31b SUB
0x31c SWAP1
0x31d SWAP2
0x31e AND
0x31f SWAP1
0x320 PUSH2 0x8fc
0x323 SWAP1
0x324 PUSH2 0x33b
0x327 SWAP1
0x328 PUSH1 0x64
0x32a SWAP1
0x32b PUSH2 0x1f5
0x32e SWAP1
0x32f CALLVALUE
0x330 SWAP1
0x331 PUSH4 0xffffffff
0x336 PUSH2 0x508
0x339 AND
0x33a JUMP
---
0x30e: V263 = 0x11
0x310: V264 = S[0x11]
0x311: V265 = 0x12
0x313: V266 = S[0x12]
0x314: V267 = 0x1
0x316: V268 = 0xa0
0x318: V269 = 0x2
0x31a: V270 = EXP 0x2 0xa0
0x31b: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31e: V272 = AND V264 0xffffffffffffffffffffffffffffffffffffffff
0x320: V273 = 0x8fc
0x324: V274 = 0x33b
0x328: V275 = 0x64
0x32b: V276 = 0x1f5
0x32f: V277 = CALLVALUE
0x331: V278 = 0xffffffff
0x336: V279 = 0x508
0x339: V280 = AND 0x508 0xffffffff
0x33a: JUMP 0x508
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V272, 0x8fc, 0x33b, 0x64, 0x1f5, V277, V266]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V272, 0x8fc, 0x33b, 0x64, 0x1f5, V277, V266]

================================

Block 0x33b
[0x33b:0x359]
---
Predecessors: [0x4a3, 0x54c, 0x772]
Successors: [0x35a, 0x363]
---
0x33b JUMPDEST
0x33c PUSH1 0x40
0x33e MLOAD
0x33f DUP2
0x340 ISZERO
0x341 SWAP1
0x342 SWAP3
0x343 MUL
0x344 SWAP2
0x345 PUSH1 0x0
0x347 DUP2
0x348 DUP2
0x349 DUP2
0x34a DUP6
0x34b DUP9
0x34c DUP9
0x34d CALL
0x34e SWAP4
0x34f POP
0x350 POP
0x351 POP
0x352 POP
0x353 ISZERO
0x354 DUP1
0x355 ISZERO
0x356 PUSH2 0x363
0x359 JUMPI
---
0x33b: JUMPDEST 
0x33c: V281 = 0x40
0x33e: V282 = M[0x40]
0x340: V283 = ISZERO S0
0x343: V284 = MUL S1 V283
0x345: V285 = 0x0
0x34d: V286 = CALL V284 S2 S0 V282 0x0 V282 0x0
0x353: V287 = ISZERO V286
0x355: V288 = ISZERO V287
0x356: V289 = 0x363
0x359: JUMPI 0x363 V288
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V287]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V287]

================================

Block 0x35a
[0x35a:0x362]
---
Predecessors: [0x33b]
Successors: []
---
0x35a RETURNDATASIZE
0x35b PUSH1 0x0
0x35d DUP1
0x35e RETURNDATACOPY
0x35f RETURNDATASIZE
0x360 PUSH1 0x0
0x362 REVERT
---
0x35a: V290 = RETURNDATASIZE
0x35b: V291 = 0x0
0x35e: RETURNDATACOPY 0x0 0x0 V290
0x35f: V292 = RETURNDATASIZE
0x360: V293 = 0x0
0x362: REVERT 0x0 V292
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V287]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V287]

================================

Block 0x363
[0x363:0x364]
---
Predecessors: [0x33b]
Successors: [0x365]
---
0x363 JUMPDEST
0x364 POP
---
0x363: JUMPDEST 
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V287]
Stack pops: 1
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x365
[0x365:0x392]
---
Predecessors: [0x2fc, 0x363]
Successors: [0x508]
---
0x365 JUMPDEST
0x366 PUSH1 0x0
0x368 SLOAD
0x369 PUSH1 0xb
0x36b SLOAD
0x36c PUSH1 0x1
0x36e PUSH1 0xa0
0x370 PUSH1 0x2
0x372 EXP
0x373 SUB
0x374 SWAP1
0x375 SWAP2
0x376 AND
0x377 SWAP1
0x378 PUSH2 0x8fc
0x37b SWAP1
0x37c PUSH2 0x393
0x37f SWAP1
0x380 PUSH1 0x64
0x382 SWAP1
0x383 PUSH2 0x1f5
0x386 SWAP1
0x387 CALLVALUE
0x388 SWAP1
0x389 PUSH4 0xffffffff
0x38e PUSH2 0x508
0x391 AND
0x392 JUMP
---
0x365: JUMPDEST 
0x366: V294 = 0x0
0x368: V295 = S[0x0]
0x369: V296 = 0xb
0x36b: V297 = S[0xb]
0x36c: V298 = 0x1
0x36e: V299 = 0xa0
0x370: V300 = 0x2
0x372: V301 = EXP 0x2 0xa0
0x373: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x376: V303 = AND V295 0xffffffffffffffffffffffffffffffffffffffff
0x378: V304 = 0x8fc
0x37c: V305 = 0x393
0x380: V306 = 0x64
0x383: V307 = 0x1f5
0x387: V308 = CALLVALUE
0x389: V309 = 0xffffffff
0x38e: V310 = 0x508
0x391: V311 = AND 0x508 0xffffffff
0x392: JUMP 0x508
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V303, 0x8fc, 0x393, 0x64, 0x1f5, V308, V297]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V303, 0x8fc, 0x393, 0x64, 0x1f5, V308, V297]

================================

Block 0x393
[0x393:0x3b1]
---
Predecessors: [0x4a3, 0x54c, 0x772]
Successors: [0x3b2, 0x3bb]
---
0x393 JUMPDEST
0x394 PUSH1 0x40
0x396 MLOAD
0x397 DUP2
0x398 ISZERO
0x399 SWAP1
0x39a SWAP3
0x39b MUL
0x39c SWAP2
0x39d PUSH1 0x0
0x39f DUP2
0x3a0 DUP2
0x3a1 DUP2
0x3a2 DUP6
0x3a3 DUP9
0x3a4 DUP9
0x3a5 CALL
0x3a6 SWAP4
0x3a7 POP
0x3a8 POP
0x3a9 POP
0x3aa POP
0x3ab ISZERO
0x3ac DUP1
0x3ad ISZERO
0x3ae PUSH2 0x3bb
0x3b1 JUMPI
---
0x393: JUMPDEST 
0x394: V312 = 0x40
0x396: V313 = M[0x40]
0x398: V314 = ISZERO S0
0x39b: V315 = MUL S1 V314
0x39d: V316 = 0x0
0x3a5: V317 = CALL V315 S2 S0 V313 0x0 V313 0x0
0x3ab: V318 = ISZERO V317
0x3ad: V319 = ISZERO V318
0x3ae: V320 = 0x3bb
0x3b1: JUMPI 0x3bb V319
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V318]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V318]

================================

Block 0x3b2
[0x3b2:0x3ba]
---
Predecessors: [0x393]
Successors: []
---
0x3b2 RETURNDATASIZE
0x3b3 PUSH1 0x0
0x3b5 DUP1
0x3b6 RETURNDATACOPY
0x3b7 RETURNDATASIZE
0x3b8 PUSH1 0x0
0x3ba REVERT
---
0x3b2: V321 = RETURNDATASIZE
0x3b3: V322 = 0x0
0x3b6: RETURNDATACOPY 0x0 0x0 V321
0x3b7: V323 = RETURNDATASIZE
0x3b8: V324 = 0x0
0x3ba: REVERT 0x0 V323
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V318]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V318]

================================

Block 0x3bb
[0x3bb:0x3fa]
---
Predecessors: [0x393]
Successors: [0x555]
---
0x3bb JUMPDEST
0x3bc POP
0x3bd PUSH1 0x40
0x3bf DUP1
0x3c0 MLOAD
0x3c1 CALLER
0x3c2 DUP2
0x3c3 MSTORE
0x3c4 SWAP1
0x3c5 MLOAD
0x3c6 CALLVALUE
0x3c7 SWAP2
0x3c8 PUSH32 0xc6851889326b4ff916523ef06f539b4cf0b81d78fc6e0f97c30e6223d1831990
0x3e9 SWAP2
0x3ea SWAP1
0x3eb DUP2
0x3ec SWAP1
0x3ed SUB
0x3ee PUSH1 0x20
0x3f0 ADD
0x3f1 SWAP1
0x3f2 LOG2
0x3f3 PUSH2 0x3fb
0x3f6 CALLER
0x3f7 PUSH2 0x555
0x3fa JUMP
---
0x3bb: JUMPDEST 
0x3bd: V325 = 0x40
0x3c0: V326 = M[0x40]
0x3c1: V327 = CALLER
0x3c3: M[V326] = V327
0x3c5: V328 = M[0x40]
0x3c6: V329 = CALLVALUE
0x3c8: V330 = 0xc6851889326b4ff916523ef06f539b4cf0b81d78fc6e0f97c30e6223d1831990
0x3ed: V331 = SUB V326 V328
0x3ee: V332 = 0x20
0x3f0: V333 = ADD 0x20 V331
0x3f2: LOG V328 V333 0xc6851889326b4ff916523ef06f539b4cf0b81d78fc6e0f97c30e6223d1831990 V329
0x3f3: V334 = 0x3fb
0x3f6: V335 = CALLER
0x3f7: V336 = 0x555
0x3fa: JUMP 0x555
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V318]
Stack pops: 1
Stack additions: [0x3fb, V335]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3fb, V335]

================================

Block 0x3fb
[0x3fb:0x405]
---
Predecessors: [0x197, 0x56a]
Successors: [0x406, 0x440]
---
0x3fb JUMPDEST
0x3fc PUSH1 0x9
0x3fe SLOAD
0x3ff CALLVALUE
0x400 LT
0x401 ISZERO
0x402 PUSH2 0x440
0x405 JUMPI
---
0x3fb: JUMPDEST 
0x3fc: V337 = 0x9
0x3fe: V338 = S[0x9]
0x3ff: V339 = CALLVALUE
0x400: V340 = LT V339 V338
0x401: V341 = ISZERO V340
0x402: V342 = 0x440
0x405: JUMPI 0x440 V341
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x406
[0x406:0x43f]
---
Predecessors: [0x3fb]
Successors: [0x440]
---
0x406 PUSH1 0x40
0x408 DUP1
0x409 MLOAD
0x40a CALLER
0x40b DUP2
0x40c MSTORE
0x40d CALLVALUE
0x40e PUSH1 0x20
0x410 DUP3
0x411 ADD
0x412 MSTORE
0x413 DUP2
0x414 MLOAD
0x415 PUSH32 0x6c244a34f5ff6f78dddabfbd3b653d0eeefea64c12e40e48c37683749f496ce4
0x436 SWAP3
0x437 SWAP2
0x438 DUP2
0x439 SWAP1
0x43a SUB
0x43b SWAP1
0x43c SWAP2
0x43d ADD
0x43e SWAP1
0x43f LOG1
---
0x406: V343 = 0x40
0x409: V344 = M[0x40]
0x40a: V345 = CALLER
0x40c: M[V344] = V345
0x40d: V346 = CALLVALUE
0x40e: V347 = 0x20
0x411: V348 = ADD V344 0x20
0x412: M[V348] = V346
0x414: V349 = M[0x40]
0x415: V350 = 0x6c244a34f5ff6f78dddabfbd3b653d0eeefea64c12e40e48c37683749f496ce4
0x43a: V351 = SUB V344 V349
0x43d: V352 = ADD 0x40 V351
0x43f: LOG V349 V352 0x6c244a34f5ff6f78dddabfbd3b653d0eeefea64c12e40e48c37683749f496ce4
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x440
[0x440:0x444]
---
Predecessors: [0x3fb, 0x406, 0x46d, 0x47b, 0x4a3, 0x537, 0x772]
Successors: [0x4a3]
---
0x440 JUMPDEST
0x441 PUSH2 0x4a3
0x444 JUMP
---
0x440: JUMPDEST 
0x441: V353 = 0x4a3
0x444: JUMP 0x4a3
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x445
[0x445:0x458]
---
Predecessors: [0x18d]
Successors: [0x459, 0x480]
---
0x445 JUMPDEST
0x446 PUSH1 0x0
0x448 SLOAD
0x449 PUSH1 0x1
0x44b PUSH1 0xa0
0x44d PUSH1 0x2
0x44f EXP
0x450 SUB
0x451 AND
0x452 CALLER
0x453 EQ
0x454 ISZERO
0x455 PUSH2 0x480
0x458 JUMPI
---
0x445: JUMPDEST 
0x446: V354 = 0x0
0x448: V355 = S[0x0]
0x449: V356 = 0x1
0x44b: V357 = 0xa0
0x44d: V358 = 0x2
0x44f: V359 = EXP 0x2 0xa0
0x450: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x451: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x452: V362 = CALLER
0x453: V363 = EQ V362 V361
0x454: V364 = ISZERO V363
0x455: V365 = 0x480
0x458: JUMPI 0x480 V364
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0]

================================

Block 0x459
[0x459:0x46c]
---
Predecessors: [0x445]
Successors: [0x5d2]
---
0x459 PUSH1 0x3
0x45b SLOAD
0x45c PUSH1 0x1
0x45e SLOAD
0x45f PUSH2 0x46d
0x462 SWAP2
0x463 PUSH4 0xffffffff
0x468 PUSH2 0x5d2
0x46b AND
0x46c JUMP
---
0x459: V366 = 0x3
0x45b: V367 = S[0x3]
0x45c: V368 = 0x1
0x45e: V369 = S[0x1]
0x45f: V370 = 0x46d
0x463: V371 = 0xffffffff
0x468: V372 = 0x5d2
0x46b: V373 = AND 0x5d2 0xffffffff
0x46c: JUMP 0x5d2
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: [0x46d, V369, V367]
Exit stack: [V11, 0xa0, 0x46d, V369, V367]

================================

Block 0x46d
[0x46d:0x473]
---
Predecessors: [0x537]
Successors: [0x440, 0x474]
---
0x46d JUMPDEST
0x46e TIMESTAMP
0x46f LT
0x470 PUSH2 0x440
0x473 JUMPI
---
0x46d: JUMPDEST 
0x46e: V374 = TIMESTAMP
0x46f: V375 = LT V374 S0
0x470: V376 = 0x440
0x473: JUMPI 0x440 V375
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x474
[0x474:0x47a]
---
Predecessors: [0x46d]
Successors: [0x5e1]
---
0x474 PUSH2 0x47b
0x477 PUSH2 0x5e1
0x47a JUMP
---
0x474: V377 = 0x47b
0x477: V378 = 0x5e1
0x47a: JUMP 0x5e1
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x47b]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x47b]

================================

Block 0x47b
[0x47b:0x47f]
---
Predecessors: [0x4a3, 0x537, 0x772]
Successors: [0x440]
---
0x47b JUMPDEST
0x47c PUSH2 0x440
0x47f JUMP
---
0x47b: JUMPDEST 
0x47c: V379 = 0x440
0x47f: JUMP 0x440
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x480
[0x480:0x494]
---
Predecessors: [0x445]
Successors: [0x5d2]
---
0x480 JUMPDEST
0x481 PUSH1 0x4
0x483 SLOAD
0x484 PUSH1 0x1
0x486 SLOAD
0x487 PUSH2 0x495
0x48a SWAP2
0x48b PUSH4 0xffffffff
0x490 PUSH2 0x5d2
0x493 AND
0x494 JUMP
---
0x480: JUMPDEST 
0x481: V380 = 0x4
0x483: V381 = S[0x4]
0x484: V382 = 0x1
0x486: V383 = S[0x1]
0x487: V384 = 0x495
0x48b: V385 = 0xffffffff
0x490: V386 = 0x5d2
0x493: V387 = AND 0x5d2 0xffffffff
0x494: JUMP 0x5d2
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: [0x495, V383, V381]
Exit stack: [V11, 0xa0, 0x495, V383, V381]

================================

Block 0x495
[0x495:0x49b]
---
Predecessors: [0x537]
Successors: [0x49c, 0x4a3]
---
0x495 JUMPDEST
0x496 TIMESTAMP
0x497 LT
0x498 PUSH2 0x4a3
0x49b JUMPI
---
0x495: JUMPDEST 
0x496: V388 = TIMESTAMP
0x497: V389 = LT V388 S0
0x498: V390 = 0x4a3
0x49b: JUMPI 0x4a3 V389
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x49c
[0x49c:0x4a2]
---
Predecessors: [0x495]
Successors: [0x5e1]
---
0x49c PUSH2 0x440
0x49f PUSH2 0x5e1
0x4a2 JUMP
---
0x49c: V391 = 0x440
0x49f: V392 = 0x5e1
0x4a2: JUMP 0x5e1
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x440]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x440]

================================

Block 0x4a3
[0x4a3:0x4a4]
---
Predecessors: [0x440, 0x495]
Successors: [0xa0, 0x201, 0x269, 0x2d2, 0x33b, 0x393, 0x440, 0x47b, 0x6f0, 0x6fc, 0x74a]
---
0x4a3 JUMPDEST
0x4a4 JUMP
---
0x4a3: JUMPDEST 
0x4a4: JUMP S0
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x4a5
[0x4a5:0x4aa]
---
Predecessors: [0xae]
Successors: [0xb7]
---
0x4a5 JUMPDEST
0x4a6 PUSH1 0x1
0x4a8 SLOAD
0x4a9 DUP2
0x4aa JUMP
---
0x4a5: JUMPDEST 
0x4a6: V393 = 0x1
0x4a8: V394 = S[0x1]
0x4aa: JUMP 0xb7
---
Entry stack: [V11, 0xb7]
Stack pops: 1
Stack additions: [S0, V394]
Exit stack: [V11, 0xb7, V394]

================================

Block 0x4ab
[0x4ab:0x4b9]
---
Predecessors: [0xd5]
Successors: [0xde]
---
0x4ab JUMPDEST
0x4ac PUSH1 0x11
0x4ae SLOAD
0x4af PUSH1 0x1
0x4b1 PUSH1 0xa0
0x4b3 PUSH1 0x2
0x4b5 EXP
0x4b6 SUB
0x4b7 AND
0x4b8 DUP2
0x4b9 JUMP
---
0x4ab: JUMPDEST 
0x4ac: V395 = 0x11
0x4ae: V396 = S[0x11]
0x4af: V397 = 0x1
0x4b1: V398 = 0xa0
0x4b3: V399 = 0x2
0x4b5: V400 = EXP 0x2 0xa0
0x4b6: V401 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b7: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x4b9: JUMP 0xde
---
Entry stack: [V11, 0xde]
Stack pops: 1
Stack additions: [S0, V402]
Exit stack: [V11, 0xde, V402]

================================

Block 0x4ba
[0x4ba:0x4c8]
---
Predecessors: [0x106]
Successors: [0xde]
---
0x4ba JUMPDEST
0x4bb PUSH1 0xf
0x4bd SLOAD
0x4be PUSH1 0x1
0x4c0 PUSH1 0xa0
0x4c2 PUSH1 0x2
0x4c4 EXP
0x4c5 SUB
0x4c6 AND
0x4c7 DUP2
0x4c8 JUMP
---
0x4ba: JUMPDEST 
0x4bb: V403 = 0xf
0x4bd: V404 = S[0xf]
0x4be: V405 = 0x1
0x4c0: V406 = 0xa0
0x4c2: V407 = 0x2
0x4c4: V408 = EXP 0x2 0xa0
0x4c5: V409 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c6: V410 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x4c8: JUMP 0xde
---
Entry stack: [V11, 0xde]
Stack pops: 1
Stack additions: [S0, V410]
Exit stack: [V11, 0xde, V410]

================================

Block 0x4c9
[0x4c9:0x4ce]
---
Predecessors: [0x11b]
Successors: [0xb7]
---
0x4c9 JUMPDEST
0x4ca PUSH1 0x6
0x4cc SLOAD
0x4cd DUP2
0x4ce JUMP
---
0x4c9: JUMPDEST 
0x4ca: V411 = 0x6
0x4cc: V412 = S[0x6]
0x4ce: JUMP 0xb7
---
Entry stack: [V11, 0xb7]
Stack pops: 1
Stack additions: [S0, V412]
Exit stack: [V11, 0xb7, V412]

================================

Block 0x4cf
[0x4cf:0x4dd]
---
Predecessors: [0x130]
Successors: [0xde]
---
0x4cf JUMPDEST
0x4d0 PUSH1 0x0
0x4d2 SLOAD
0x4d3 PUSH1 0x1
0x4d5 PUSH1 0xa0
0x4d7 PUSH1 0x2
0x4d9 EXP
0x4da SUB
0x4db AND
0x4dc DUP2
0x4dd JUMP
---
0x4cf: JUMPDEST 
0x4d0: V413 = 0x0
0x4d2: V414 = S[0x0]
0x4d3: V415 = 0x1
0x4d5: V416 = 0xa0
0x4d7: V417 = 0x2
0x4d9: V418 = EXP 0x2 0xa0
0x4da: V419 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4db: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x4dd: JUMP 0xde
---
Entry stack: [V11, 0xde]
Stack pops: 1
Stack additions: [S0, V420]
Exit stack: [V11, 0xde, V420]

================================

Block 0x4de
[0x4de:0x4e3]
---
Predecessors: [0x145]
Successors: [0xb7]
---
0x4de JUMPDEST
0x4df PUSH1 0x9
0x4e1 SLOAD
0x4e2 DUP2
0x4e3 JUMP
---
0x4de: JUMPDEST 
0x4df: V421 = 0x9
0x4e1: V422 = S[0x9]
0x4e3: JUMP 0xb7
---
Entry stack: [V11, 0xb7]
Stack pops: 1
Stack additions: [S0, V422]
Exit stack: [V11, 0xb7, V422]

================================

Block 0x4e4
[0x4e4:0x4e9]
---
Predecessors: [0x15a]
Successors: [0xb7]
---
0x4e4 JUMPDEST
0x4e5 PUSH1 0x7
0x4e7 SLOAD
0x4e8 DUP2
0x4e9 JUMP
---
0x4e4: JUMPDEST 
0x4e5: V423 = 0x7
0x4e7: V424 = S[0x7]
0x4e9: JUMP 0xb7
---
Entry stack: [V11, 0xb7]
Stack pops: 1
Stack additions: [S0, V424]
Exit stack: [V11, 0xb7, V424]

================================

Block 0x4ea
[0x4ea:0x4f8]
---
Predecessors: [0x16f]
Successors: [0xde]
---
0x4ea JUMPDEST
0x4eb PUSH1 0x2
0x4ed SLOAD
0x4ee PUSH1 0x1
0x4f0 PUSH1 0xa0
0x4f2 PUSH1 0x2
0x4f4 EXP
0x4f5 SUB
0x4f6 AND
0x4f7 DUP2
0x4f8 JUMP
---
0x4ea: JUMPDEST 
0x4eb: V425 = 0x2
0x4ed: V426 = S[0x2]
0x4ee: V427 = 0x1
0x4f0: V428 = 0xa0
0x4f2: V429 = 0x2
0x4f4: V430 = EXP 0x2 0xa0
0x4f5: V431 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f6: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x4f8: JUMP 0xde
---
Entry stack: [V11, 0xde]
Stack pops: 1
Stack additions: [S0, V432]
Exit stack: [V11, 0xde, V432]

================================

Block 0x4f9
[0x4f9:0x507]
---
Predecessors: [0x184]
Successors: [0xde]
---
0x4f9 JUMPDEST
0x4fa PUSH1 0xd
0x4fc SLOAD
0x4fd PUSH1 0x1
0x4ff PUSH1 0xa0
0x501 PUSH1 0x2
0x503 EXP
0x504 SUB
0x505 AND
0x506 DUP2
0x507 JUMP
---
0x4f9: JUMPDEST 
0x4fa: V433 = 0xd
0x4fc: V434 = S[0xd]
0x4fd: V435 = 0x1
0x4ff: V436 = 0xa0
0x501: V437 = 0x2
0x503: V438 = EXP 0x2 0xa0
0x504: V439 = SUB 0x10000000000000000000000000000000000000000 0x1
0x505: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff V434
0x507: JUMP 0xde
---
Entry stack: [V11, 0xde]
Stack pops: 1
Stack additions: [S0, V440]
Exit stack: [V11, 0xde, V440]

================================

Block 0x508
[0x508:0x512]
---
Predecessors: [0x1a0, 0x1c4, 0x23c, 0x2a5, 0x30e, 0x365, 0x5e1, 0x6e4, 0x6fc]
Successors: [0x513, 0x51b]
---
0x508 JUMPDEST
0x509 PUSH1 0x0
0x50b DUP1
0x50c DUP4
0x50d ISZERO
0x50e ISZERO
0x50f PUSH2 0x51b
0x512 JUMPI
---
0x508: JUMPDEST 
0x509: V441 = 0x0
0x50d: V442 = ISZERO S1
0x50e: V443 = ISZERO V442
0x50f: V444 = 0x51b
0x512: JUMPI 0x51b V443
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0]

================================

Block 0x513
[0x513:0x51a]
---
Predecessors: [0x508]
Successors: [0x537]
---
0x513 PUSH1 0x0
0x515 SWAP2
0x516 POP
0x517 PUSH2 0x537
0x51a JUMP
---
0x513: V445 = 0x0
0x517: V446 = 0x537
0x51a: JUMP 0x537
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x51b
[0x51b:0x529]
---
Predecessors: [0x508]
Successors: [0x52a, 0x52b]
---
0x51b JUMPDEST
0x51c POP
0x51d DUP3
0x51e DUP3
0x51f MUL
0x520 DUP3
0x521 DUP5
0x522 DUP3
0x523 DUP2
0x524 ISZERO
0x525 ISZERO
0x526 PUSH2 0x52b
0x529 JUMPI
---
0x51b: JUMPDEST 
0x51f: V447 = MUL S2 S3
0x524: V448 = ISZERO S3
0x525: V449 = ISZERO V448
0x526: V450 = 0x52b
0x529: JUMPI 0x52b V449
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V447, S2, S3, V447]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V447, S2, S3, V447]

================================

Block 0x52a
[0x52a:0x52a]
---
Predecessors: [0x51b]
Successors: []
---
0x52a INVALID
---
0x52a: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V447, S2, S1, V447]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V447, S2, S1, V447]

================================

Block 0x52b
[0x52b:0x531]
---
Predecessors: [0x51b]
Successors: [0x532, 0x533]
---
0x52b JUMPDEST
0x52c DIV
0x52d EQ
0x52e PUSH2 0x533
0x531 JUMPI
---
0x52b: JUMPDEST 
0x52c: V451 = DIV V447 S1
0x52d: V452 = EQ V451 S2
0x52e: V453 = 0x533
0x531: JUMPI 0x533 V452
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V447, S2, S1, V447]
Stack pops: 3
Stack additions: []
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V447]

================================

Block 0x532
[0x532:0x532]
---
Predecessors: [0x52b]
Successors: []
---
0x532 INVALID
---
0x532: INVALID 
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x64, 0xa0, 0x6fc, 0x74a}, {0x1c4, 0x1f5, 0x6c3}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x64, 0xa0, 0x6fc, 0x74a}, {0x1c4, 0x1f5, 0x6c3}, S3, S2, 0x0, S0]

================================

Block 0x533
[0x533:0x536]
---
Predecessors: [0x52b, 0x5d2]
Successors: [0x537]
---
0x533 JUMPDEST
0x534 DUP1
0x535 SWAP2
0x536 POP
---
0x533: JUMPDEST 
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S0]

================================

Block 0x537
[0x537:0x53d]
---
Predecessors: [0x513, 0x533]
Successors: [0xa0, 0x1c4, 0x1f5, 0x440, 0x46d, 0x47b, 0x495, 0x6c3, 0x6fc, 0x74a]
---
0x537 JUMPDEST
0x538 POP
0x539 SWAP3
0x53a SWAP2
0x53b POP
0x53c POP
0x53d JUMP
---
0x537: JUMPDEST 
0x53d: JUMP S4
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0x53e
[0x53e:0x54a]
---
Predecessors: [0x1f5, 0x6c3]
Successors: [0x54b, 0x54c]
---
0x53e JUMPDEST
0x53f PUSH1 0x0
0x541 DUP1
0x542 DUP3
0x543 DUP5
0x544 DUP2
0x545 ISZERO
0x546 ISZERO
0x547 PUSH2 0x54c
0x54a JUMPI
---
0x53e: JUMPDEST 
0x53f: V454 = 0x0
0x545: V455 = ISZERO S0
0x546: V456 = ISZERO V455
0x547: V457 = 0x54c
0x54a: JUMPI 0x54c V456
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0x54b
[0x54b:0x54b]
---
Predecessors: [0x53e]
Successors: []
---
0x54b INVALID
---
0x54b: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x2, 0x64, 0xa0, 0x6fc, 0x74a}, 0x0, 0x0, {0x2, 0x64, 0xa0, 0x6fc, 0x74a}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x2, 0x64, 0xa0, 0x6fc, 0x74a}, 0x0, 0x0, {0x2, 0x64, 0xa0, 0x6fc, 0x74a}, S0]

================================

Block 0x54c
[0x54c:0x554]
---
Predecessors: [0x53e]
Successors: [0x201, 0x269, 0x2d2, 0x33b, 0x393, 0x6e4, 0x6f0]
---
0x54c JUMPDEST
0x54d DIV
0x54e SWAP5
0x54f SWAP4
0x550 POP
0x551 POP
0x552 POP
0x553 POP
0x554 JUMP
---
0x54c: JUMPDEST 
0x54d: V458 = DIV S0 {0x2, 0x64, 0xa0, 0x6fc, 0x74a}
0x554: JUMP S6
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x2, 0x64, 0xa0, 0x6fc, 0x74a}, 0x0, 0x0, {0x2, 0x64, 0xa0, 0x6fc, 0x74a}, S0]
Stack pops: 7
Stack additions: [V458]
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V458]

================================

Block 0x555
[0x555:0x565]
---
Predecessors: [0x3bb]
Successors: [0x566, 0x56a]
---
0x555 JUMPDEST
0x556 PUSH1 0x1
0x558 PUSH1 0xa0
0x55a PUSH1 0x2
0x55c EXP
0x55d SUB
0x55e DUP2
0x55f AND
0x560 ISZERO
0x561 ISZERO
0x562 PUSH2 0x56a
0x565 JUMPI
---
0x555: JUMPDEST 
0x556: V459 = 0x1
0x558: V460 = 0xa0
0x55a: V461 = 0x2
0x55c: V462 = EXP 0x2 0xa0
0x55d: V463 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55f: V464 = AND V335 0xffffffffffffffffffffffffffffffffffffffff
0x560: V465 = ISZERO V464
0x561: V466 = ISZERO V465
0x562: V467 = 0x56a
0x565: JUMPI 0x56a V466
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3fb, V335]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3fb, V335]

================================

Block 0x566
[0x566:0x569]
---
Predecessors: [0x555]
Successors: []
---
0x566 PUSH1 0x0
0x568 DUP1
0x569 REVERT
---
0x566: V468 = 0x0
0x569: REVERT 0x0 0x0
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3fb, V335]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3fb, V335]

================================

Block 0x56a
[0x56a:0x5d1]
---
Predecessors: [0x555]
Successors: [0x3fb]
---
0x56a JUMPDEST
0x56b PUSH1 0x0
0x56d DUP1
0x56e SLOAD
0x56f PUSH1 0x40
0x571 MLOAD
0x572 PUSH1 0x1
0x574 PUSH1 0xa0
0x576 PUSH1 0x2
0x578 EXP
0x579 SUB
0x57a DUP1
0x57b DUP6
0x57c AND
0x57d SWAP4
0x57e SWAP3
0x57f AND
0x580 SWAP2
0x581 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x5a2 SWAP2
0x5a3 LOG3
0x5a4 PUSH1 0x0
0x5a6 DUP1
0x5a7 SLOAD
0x5a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bd NOT
0x5be AND
0x5bf PUSH1 0x1
0x5c1 PUSH1 0xa0
0x5c3 PUSH1 0x2
0x5c5 EXP
0x5c6 SUB
0x5c7 SWAP3
0x5c8 SWAP1
0x5c9 SWAP3
0x5ca AND
0x5cb SWAP2
0x5cc SWAP1
0x5cd SWAP2
0x5ce OR
0x5cf SWAP1
0x5d0 SSTORE
0x5d1 JUMP
---
0x56a: JUMPDEST 
0x56b: V469 = 0x0
0x56e: V470 = S[0x0]
0x56f: V471 = 0x40
0x571: V472 = M[0x40]
0x572: V473 = 0x1
0x574: V474 = 0xa0
0x576: V475 = 0x2
0x578: V476 = EXP 0x2 0xa0
0x579: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57c: V478 = AND V335 0xffffffffffffffffffffffffffffffffffffffff
0x57f: V479 = AND V470 0xffffffffffffffffffffffffffffffffffffffff
0x581: V480 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x5a3: LOG V472 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V479 V478
0x5a4: V481 = 0x0
0x5a7: V482 = S[0x0]
0x5a8: V483 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bd: V484 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5be: V485 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V482
0x5bf: V486 = 0x1
0x5c1: V487 = 0xa0
0x5c3: V488 = 0x2
0x5c5: V489 = EXP 0x2 0xa0
0x5c6: V490 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ca: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x5ce: V492 = OR V491 V485
0x5d0: S[0x0] = V492
0x5d1: JUMP 0x3fb
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3fb, V335]
Stack pops: 2
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x5d2
[0x5d2:0x5df]
---
Predecessors: [0x459, 0x480, 0x6f0]
Successors: [0x533, 0x5e0]
---
0x5d2 JUMPDEST
0x5d3 PUSH1 0x0
0x5d5 DUP3
0x5d6 DUP3
0x5d7 ADD
0x5d8 DUP4
0x5d9 DUP2
0x5da LT
0x5db ISZERO
0x5dc PUSH2 0x533
0x5df JUMPI
---
0x5d2: JUMPDEST 
0x5d3: V493 = 0x0
0x5d7: V494 = ADD S0 S1
0x5da: V495 = LT V494 S1
0x5db: V496 = ISZERO V495
0x5dc: V497 = 0x533
0x5df: JUMPI 0x533 V496
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V494]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V494]

================================

Block 0x5e0
[0x5e0:0x5e0]
---
Predecessors: [0x5d2]
Successors: []
---
0x5e0 INVALID
---
0x5e0: INVALID 
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V494]
Stack pops: 0
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V494]

================================

Block 0x5e1
[0x5e1:0x6c2]
---
Predecessors: [0x474, 0x49c]
Successors: [0x508]
---
0x5e1 JUMPDEST
0x5e2 PUSH1 0x7
0x5e4 DUP1
0x5e5 SLOAD
0x5e6 PUSH1 0x1
0x5e8 SWAP1
0x5e9 DUP2
0x5ea ADD
0x5eb SWAP1
0x5ec SWAP2
0x5ed SSTORE
0x5ee TIMESTAMP
0x5ef SWAP1
0x5f0 SSTORE
0x5f1 PUSH1 0xd
0x5f3 DUP1
0x5f4 SLOAD
0x5f5 PUSH1 0xf
0x5f7 DUP1
0x5f8 SLOAD
0x5f9 PUSH1 0x1
0x5fb PUSH1 0xa0
0x5fd PUSH1 0x2
0x5ff EXP
0x600 SUB
0x601 DUP1
0x602 DUP5
0x603 AND
0x604 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x619 NOT
0x61a SWAP3
0x61b DUP4
0x61c AND
0x61d OR
0x61e SWAP3
0x61f DUP4
0x620 SWAP1
0x621 SSTORE
0x622 PUSH1 0x11
0x624 DUP1
0x625 SLOAD
0x626 SWAP4
0x627 DUP3
0x628 AND
0x629 SWAP4
0x62a DUP4
0x62b AND
0x62c SWAP4
0x62d SWAP1
0x62e SWAP4
0x62f OR
0x630 SWAP1
0x631 SWAP3
0x632 SSTORE
0x633 PUSH1 0x0
0x635 SLOAD
0x636 SWAP1
0x637 SWAP2
0x638 AND
0x639 SWAP2
0x63a AND
0x63b OR
0x63c SWAP1
0x63d SSTORE
0x63e PUSH1 0x9
0x640 SLOAD
0x641 PUSH1 0x40
0x643 DUP1
0x644 MLOAD
0x645 CALLER
0x646 DUP2
0x647 MSTORE
0x648 PUSH1 0x20
0x64a DUP2
0x64b ADD
0x64c SWAP3
0x64d SWAP1
0x64e SWAP3
0x64f MSTORE
0x650 DUP1
0x651 MLOAD
0x652 PUSH32 0xb65810055505787fa0facf68d8c6d62d27e70eb23ba720089d71dc8981960ffc
0x673 SWAP3
0x674 DUP2
0x675 SWAP1
0x676 SUB
0x677 SWAP1
0x678 SWAP2
0x679 ADD
0x67a SWAP1
0x67b LOG1
0x67c PUSH1 0x0
0x67e SLOAD
0x67f PUSH1 0x5
0x681 SLOAD
0x682 PUSH1 0x8
0x684 SLOAD
0x685 PUSH32 0x5afeca38b2064c23a692c4cf353015d80ab3ecc417b4f893f372690c11fbd9a6
0x6a6 SWAP3
0x6a7 PUSH1 0x1
0x6a9 PUSH1 0xa0
0x6ab PUSH1 0x2
0x6ad EXP
0x6ae SUB
0x6af AND
0x6b0 SWAP2
0x6b1 PUSH2 0x6fc
0x6b4 SWAP2
0x6b5 PUSH2 0x6c3
0x6b8 SWAP2
0x6b9 PUSH4 0xffffffff
0x6be PUSH2 0x508
0x6c1 AND
0x6c2 JUMP
---
0x5e1: JUMPDEST 
0x5e2: V498 = 0x7
0x5e5: V499 = S[0x7]
0x5e6: V500 = 0x1
0x5ea: V501 = ADD 0x1 V499
0x5ed: S[0x7] = V501
0x5ee: V502 = TIMESTAMP
0x5f0: S[0x1] = V502
0x5f1: V503 = 0xd
0x5f4: V504 = S[0xd]
0x5f5: V505 = 0xf
0x5f8: V506 = S[0xf]
0x5f9: V507 = 0x1
0x5fb: V508 = 0xa0
0x5fd: V509 = 0x2
0x5ff: V510 = EXP 0x2 0xa0
0x600: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x603: V512 = AND V504 0xffffffffffffffffffffffffffffffffffffffff
0x604: V513 = 0xffffffffffffffffffffffffffffffffffffffff
0x619: V514 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x61c: V515 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V506
0x61d: V516 = OR V515 V512
0x621: S[0xf] = V516
0x622: V517 = 0x11
0x625: V518 = S[0x11]
0x628: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x62b: V520 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V518
0x62f: V521 = OR V520 V519
0x632: S[0x11] = V521
0x633: V522 = 0x0
0x635: V523 = S[0x0]
0x638: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V523
0x63a: V525 = AND V504 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x63b: V526 = OR V525 V524
0x63d: S[0xd] = V526
0x63e: V527 = 0x9
0x640: V528 = S[0x9]
0x641: V529 = 0x40
0x644: V530 = M[0x40]
0x645: V531 = CALLER
0x647: M[V530] = V531
0x648: V532 = 0x20
0x64b: V533 = ADD V530 0x20
0x64f: M[V533] = V528
0x651: V534 = M[0x40]
0x652: V535 = 0xb65810055505787fa0facf68d8c6d62d27e70eb23ba720089d71dc8981960ffc
0x676: V536 = SUB V530 V534
0x679: V537 = ADD 0x40 V536
0x67b: LOG V534 V537 0xb65810055505787fa0facf68d8c6d62d27e70eb23ba720089d71dc8981960ffc
0x67c: V538 = 0x0
0x67e: V539 = S[0x0]
0x67f: V540 = 0x5
0x681: V541 = S[0x5]
0x682: V542 = 0x8
0x684: V543 = S[0x8]
0x685: V544 = 0x5afeca38b2064c23a692c4cf353015d80ab3ecc417b4f893f372690c11fbd9a6
0x6a7: V545 = 0x1
0x6a9: V546 = 0xa0
0x6ab: V547 = 0x2
0x6ad: V548 = EXP 0x2 0xa0
0x6ae: V549 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6af: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff V539
0x6b1: V551 = 0x6fc
0x6b5: V552 = 0x6c3
0x6b9: V553 = 0xffffffff
0x6be: V554 = 0x508
0x6c1: V555 = AND 0x508 0xffffffff
0x6c2: JUMP 0x508
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x440, 0x47b}]
Stack pops: 0
Stack additions: [0x5afeca38b2064c23a692c4cf353015d80ab3ecc417b4f893f372690c11fbd9a6, V550, 0x6fc, 0x6c3, V543, V541]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x440, 0x47b}, 0x5afeca38b2064c23a692c4cf353015d80ab3ecc417b4f893f372690c11fbd9a6, V550, 0x6fc, 0x6c3, V543, V541]

================================

Block 0x6c3
[0x6c3:0x6e3]
---
Predecessors: [0x537]
Successors: [0x53e]
---
0x6c3 JUMPDEST
0x6c4 PUSH2 0x6f0
0x6c7 PUSH1 0x64
0x6c9 PUSH2 0x1f5
0x6cc PUSH1 0xc
0x6ce SLOAD
0x6cf PUSH2 0x6e4
0x6d2 PUSH1 0x2
0x6d4 PUSH1 0x9
0x6d6 SLOAD
0x6d7 PUSH2 0x53e
0x6da SWAP1
0x6db SWAP2
0x6dc SWAP1
0x6dd PUSH4 0xffffffff
0x6e2 AND
0x6e3 JUMP
---
0x6c3: JUMPDEST 
0x6c4: V556 = 0x6f0
0x6c7: V557 = 0x64
0x6c9: V558 = 0x1f5
0x6cc: V559 = 0xc
0x6ce: V560 = S[0xc]
0x6cf: V561 = 0x6e4
0x6d2: V562 = 0x2
0x6d4: V563 = 0x9
0x6d6: V564 = S[0x9]
0x6d7: V565 = 0x53e
0x6dd: V566 = 0xffffffff
0x6e2: V567 = AND 0xffffffff 0x53e
0x6e3: JUMP 0x53e
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x6f0, 0x64, 0x1f5, V560, 0x6e4, V564, 0x2]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x6f0, 0x64, 0x1f5, V560, 0x6e4, V564, 0x2]

================================

Block 0x6e4
[0x6e4:0x6ef]
---
Predecessors: [0x54c]
Successors: [0x508]
---
0x6e4 JUMPDEST
0x6e5 SWAP1
0x6e6 PUSH4 0xffffffff
0x6eb PUSH2 0x508
0x6ee AND
0x6ef JUMP
---
0x6e4: JUMPDEST 
0x6e6: V568 = 0xffffffff
0x6eb: V569 = 0x508
0x6ee: V570 = AND 0x508 0xffffffff
0x6ef: JUMP 0x508
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V458]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V458, S1]

================================

Block 0x6f0
[0x6f0:0x6fb]
---
Predecessors: [0x4a3, 0x54c, 0x772]
Successors: [0x5d2]
---
0x6f0 JUMPDEST
0x6f1 SWAP1
0x6f2 PUSH4 0xffffffff
0x6f7 PUSH2 0x5d2
0x6fa AND
0x6fb JUMP
---
0x6f0: JUMPDEST 
0x6f2: V571 = 0xffffffff
0x6f7: V572 = 0x5d2
0x6fa: V573 = AND 0x5d2 0xffffffff
0x6fb: JUMP 0x5d2
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x6fc
[0x6fc:0x749]
---
Predecessors: [0x4a3, 0x537, 0x772]
Successors: [0x508]
---
0x6fc JUMPDEST
0x6fd PUSH1 0x40
0x6ff DUP1
0x700 MLOAD
0x701 PUSH1 0x1
0x703 PUSH1 0xa0
0x705 PUSH1 0x2
0x707 EXP
0x708 SUB
0x709 SWAP1
0x70a SWAP4
0x70b AND
0x70c DUP4
0x70d MSTORE
0x70e PUSH1 0x20
0x710 DUP4
0x711 ADD
0x712 SWAP2
0x713 SWAP1
0x714 SWAP2
0x715 MSTORE
0x716 DUP1
0x717 MLOAD
0x718 SWAP2
0x719 DUP3
0x71a SWAP1
0x71b SUB
0x71c ADD
0x71d SWAP1
0x71e LOG1
0x71f PUSH1 0x0
0x721 SLOAD
0x722 PUSH1 0x5
0x724 SLOAD
0x725 PUSH1 0x8
0x727 SLOAD
0x728 PUSH1 0x1
0x72a PUSH1 0xa0
0x72c PUSH1 0x2
0x72e EXP
0x72f SUB
0x730 SWAP1
0x731 SWAP3
0x732 AND
0x733 SWAP2
0x734 PUSH2 0x8fc
0x737 SWAP2
0x738 PUSH2 0x74a
0x73b SWAP2
0x73c PUSH2 0x6c3
0x73f SWAP2
0x740 PUSH4 0xffffffff
0x745 PUSH2 0x508
0x748 AND
0x749 JUMP
---
0x6fc: JUMPDEST 
0x6fd: V574 = 0x40
0x700: V575 = M[0x40]
0x701: V576 = 0x1
0x703: V577 = 0xa0
0x705: V578 = 0x2
0x707: V579 = EXP 0x2 0xa0
0x708: V580 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70b: V581 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x70d: M[V575] = V581
0x70e: V582 = 0x20
0x711: V583 = ADD V575 0x20
0x715: M[V583] = S0
0x717: V584 = M[0x40]
0x71b: V585 = SUB V575 V584
0x71c: V586 = ADD V585 0x40
0x71e: LOG V584 V586 S2
0x71f: V587 = 0x0
0x721: V588 = S[0x0]
0x722: V589 = 0x5
0x724: V590 = S[0x5]
0x725: V591 = 0x8
0x727: V592 = S[0x8]
0x728: V593 = 0x1
0x72a: V594 = 0xa0
0x72c: V595 = 0x2
0x72e: V596 = EXP 0x2 0xa0
0x72f: V597 = SUB 0x10000000000000000000000000000000000000000 0x1
0x732: V598 = AND V588 0xffffffffffffffffffffffffffffffffffffffff
0x734: V599 = 0x8fc
0x738: V600 = 0x74a
0x73c: V601 = 0x6c3
0x740: V602 = 0xffffffff
0x745: V603 = 0x508
0x748: V604 = AND 0x508 0xffffffff
0x749: JUMP 0x508
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V598, 0x8fc, 0x74a, 0x6c3, V592, V590]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V598, 0x8fc, 0x74a, 0x6c3, V592, V590]

================================

Block 0x74a
[0x74a:0x768]
---
Predecessors: [0x4a3, 0x537, 0x772]
Successors: [0x769, 0x772]
---
0x74a JUMPDEST
0x74b PUSH1 0x40
0x74d MLOAD
0x74e DUP2
0x74f ISZERO
0x750 SWAP1
0x751 SWAP3
0x752 MUL
0x753 SWAP2
0x754 PUSH1 0x0
0x756 DUP2
0x757 DUP2
0x758 DUP2
0x759 DUP6
0x75a DUP9
0x75b DUP9
0x75c CALL
0x75d SWAP4
0x75e POP
0x75f POP
0x760 POP
0x761 POP
0x762 ISZERO
0x763 DUP1
0x764 ISZERO
0x765 PUSH2 0x772
0x768 JUMPI
---
0x74a: JUMPDEST 
0x74b: V605 = 0x40
0x74d: V606 = M[0x40]
0x74f: V607 = ISZERO S0
0x752: V608 = MUL S1 V607
0x754: V609 = 0x0
0x75c: V610 = CALL V608 S2 S0 V606 0x0 V606 0x0
0x762: V611 = ISZERO V610
0x764: V612 = ISZERO V611
0x765: V613 = 0x772
0x768: JUMPI 0x772 V612
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V611]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V611]

================================

Block 0x769
[0x769:0x771]
---
Predecessors: [0x74a]
Successors: []
---
0x769 RETURNDATASIZE
0x76a PUSH1 0x0
0x76c DUP1
0x76d RETURNDATACOPY
0x76e RETURNDATASIZE
0x76f PUSH1 0x0
0x771 REVERT
---
0x769: V614 = RETURNDATASIZE
0x76a: V615 = 0x0
0x76d: RETURNDATACOPY 0x0 0x0 V614
0x76e: V616 = RETURNDATASIZE
0x76f: V617 = 0x0
0x771: REVERT 0x0 V616
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V611]
Stack pops: 0
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V611]

================================

Block 0x772
[0x772:0x783]
---
Predecessors: [0x74a]
Successors: [0xa0, 0x201, 0x269, 0x2d2, 0x33b, 0x393, 0x440, 0x47b, 0x6f0, 0x6fc, 0x74a]
---
0x772 JUMPDEST
0x773 POP
0x774 PUSH1 0x8
0x776 SLOAD
0x777 PUSH1 0x9
0x779 SSTORE
0x77a PUSH1 0x5
0x77c DUP1
0x77d SLOAD
0x77e PUSH1 0x1
0x780 ADD
0x781 SWAP1
0x782 SSTORE
0x783 JUMP
---
0x772: JUMPDEST 
0x774: V618 = 0x8
0x776: V619 = S[0x8]
0x777: V620 = 0x9
0x779: S[0x9] = V619
0x77a: V621 = 0x5
0x77d: V622 = S[0x5]
0x77e: V623 = 0x1
0x780: V624 = ADD 0x1 V622
0x782: S[0x5] = V624
0x783: JUMP S1
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V611]
Stack pops: 2
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x784
[0x784:0x7b1]
---
Predecessors: []
Successors: []
---
0x784 STOP
0x785 LOG1
0x786 PUSH6 0x627a7a723058
0x78d SHA3
0x78e MISSING 0xc2
0x78f MISSING 0xd0
0x790 CODESIZE
0x791 MISSING 0xe8
0x792 PUSH31 0xfeba87e5a9979cbeae2207de54e5357fbb9f2aa07ab59f6c61edf70029
---
0x784: STOP 
0x785: LOG S0 S1 S2
0x786: V625 = 0x627a7a723058
0x78d: V626 = SHA3 0x627a7a723058 S3
0x78e: MISSING 0xc2
0x78f: MISSING 0xd0
0x790: V627 = CODESIZE
0x791: MISSING 0xe8
0x792: V628 = 0xfeba87e5a9979cbeae2207de54e5357fbb9f2aa07ab59f6c61edf70029
---
Entry stack: []
Stack pops: 0
Stack additions: [V626, V627, 0xfeba87e5a9979cbeae2207de54e5357fbb9f2aa07ab59f6c61edf70029]
Exit stack: []

================================

Function 0:
Public function signature: 0x85f0316
Entry block: 0xa2
Exit block: 0xb7
Body: 0xa2, 0xaa, 0xae, 0xb7, 0x4a5

Function 1:
Public function signature: 0x1ad100bb
Entry block: 0xc9
Exit block: 0xde
Body: 0xc9, 0xd1, 0xd5, 0xde, 0x4ab

Function 2:
Public function signature: 0x2bea500d
Entry block: 0xfa
Exit block: 0xde
Body: 0xde, 0xfa, 0x102, 0x106, 0x4ba

Function 3:
Public function signature: 0x3bf47720
Entry block: 0x10f
Exit block: 0xb7
Body: 0xb7, 0x10f, 0x117, 0x11b, 0x4c9

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x124
Exit block: 0xde
Body: 0xde, 0x124, 0x12c, 0x130, 0x4cf

Function 5:
Public function signature: 0x9d1b464a
Entry block: 0x139
Exit block: 0xb7
Body: 0xb7, 0x139, 0x141, 0x145, 0x4de

Function 6:
Public function signature: 0xbab2f552
Entry block: 0x14e
Exit block: 0xb7
Body: 0xb7, 0x14e, 0x156, 0x15a, 0x4e4

Function 7:
Public function signature: 0xe927fc5c
Entry block: 0x163
Exit block: 0xde
Body: 0xde, 0x163, 0x16b, 0x16f, 0x4ea

Function 8:
Public function signature: 0xf6f57127
Entry block: 0x178
Exit block: 0xde
Body: 0xde, 0x178, 0x180, 0x184, 0x4f9

Function 9:
Public fallback function
Entry block: 0x98
Exit block: 0x5e0
Body: 0x98, 0x18d, 0x197, 0x1a0, 0x1c4, 0x35a, 0x445, 0x459, 0x46d, 0x480, 0x495, 0x5e0

Function 10:
Private function
Entry block: 0x5d2
Exit block: 0x537
Body: 0x1c4, 0x1f5, 0x201, 0x229, 0x23c, 0x269, 0x291, 0x293, 0x2a5, 0x2d2, 0x2fa, 0x2fc, 0x30e, 0x33b, 0x363, 0x365, 0x365, 0x393, 0x3bb, 0x3fb, 0x406, 0x440, 0x47b, 0x4a3, 0x508, 0x513, 0x51b, 0x52b, 0x533, 0x537, 0x53e, 0x54c, 0x555, 0x56a, 0x5d2, 0x6c3, 0x6e4, 0x6f0, 0x6fc, 0x6fc, 0x6fc, 0x74a, 0x772

Function 11:
Private function
Entry block: 0x508
Exit block: 0x537
Body: 0x1f5, 0x201, 0x229, 0x23c, 0x269, 0x291, 0x293, 0x2a5, 0x2d2, 0x2fa, 0x2fc, 0x30e, 0x33b, 0x363, 0x365, 0x365, 0x393, 0x3bb, 0x3fb, 0x406, 0x440, 0x46d, 0x474, 0x47b, 0x495, 0x49c, 0x4a3, 0x508, 0x513, 0x51b, 0x52b, 0x533, 0x537, 0x53e, 0x54c, 0x555, 0x56a, 0x5d2, 0x6c3, 0x6e4, 0x6f0, 0x6fc, 0x6fc, 0x6fc, 0x74a, 0x772

Function 12:
Private function
Entry block: 0x5e1
Exit block: 0x772
Body: 0x1c4, 0x1f5, 0x201, 0x229, 0x23c, 0x269, 0x291, 0x293, 0x2a5, 0x2d2, 0x2fa, 0x2fc, 0x30e, 0x33b, 0x363, 0x365, 0x365, 0x393, 0x3bb, 0x3fb, 0x406, 0x440, 0x46d, 0x474, 0x47b, 0x495, 0x49c, 0x4a3, 0x508, 0x513, 0x51b, 0x52b, 0x533, 0x537, 0x53e, 0x54c, 0x555, 0x56a, 0x5d2, 0x5e1, 0x6c3, 0x6e4, 0x6f0, 0x6fc, 0x6fc, 0x6fc, 0x74a, 0x772

