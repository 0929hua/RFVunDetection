Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x35]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x35
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x35
0xa: JUMPI 0x35 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x5d]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x71a2ee52
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x5d
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x71a2ee52
0x1a: V12 = EQ V10 0x71a2ee52
0x1b: V13 = 0x5d
0x1e: JUMPI 0x5d V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x70]
---
0x1f DUP1
0x20 PUSH4 0x8abb9845
0x25 EQ
0x26 PUSH2 0x70
0x29 JUMPI
---
0x20: V14 = 0x8abb9845
0x25: V15 = EQ 0x8abb9845 V10
0x26: V16 = 0x70
0x29: JUMPI 0x70 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x84]
---
0x2a DUP1
0x2b PUSH4 0xefb98bcf
0x30 EQ
0x31 PUSH2 0x84
0x34 JUMPI
---
0x2b: V17 = 0xefb98bcf
0x30: V18 = EQ 0xefb98bcf V10
0x31: V19 = 0x84
0x34: JUMPI 0x84 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x49]
---
Predecessors: [0x0, 0x2a]
Successors: [0x4a, 0xad]
---
0x35 JUMPDEST
0x36 PUSH2 0xa8
0x39 PUSH1 0x4
0x3b SLOAD
0x3c PUSH1 0x2
0x3e SLOAD
0x3f PUSH1 0x0
0x41 SWAP2
0x42 ADD
0x43 TIMESTAMP
0x44 GT
0x45 ISZERO
0x46 PUSH2 0xad
0x49 JUMPI
---
0x35: JUMPDEST 
0x36: V20 = 0xa8
0x39: V21 = 0x4
0x3b: V22 = S[0x4]
0x3c: V23 = 0x2
0x3e: V24 = S[0x2]
0x3f: V25 = 0x0
0x42: V26 = ADD V22 V24
0x43: V27 = TIMESTAMP
0x44: V28 = GT V27 V26
0x45: V29 = ISZERO V28
0x46: V30 = 0xad
0x49: JUMPI 0xad V29
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa8, 0x0]
Exit stack: [V10, 0xa8, 0x0]

================================

Block 0x4a
[0x4a:0x5c]
---
Predecessors: [0x35]
Successors: []
---
0x4a POP
0x4b PUSH1 0x1
0x4d SLOAD
0x4e PUSH1 0x1
0x50 PUSH1 0xa0
0x52 PUSH1 0x2
0x54 EXP
0x55 SUB
0x56 ADDRESS
0x57 DUP2
0x58 AND
0x59 BALANCE
0x5a SWAP2
0x5b AND
0x5c SELFDESTRUCT
---
0x4b: V31 = 0x1
0x4d: V32 = S[0x1]
0x4e: V33 = 0x1
0x50: V34 = 0xa0
0x52: V35 = 0x2
0x54: V36 = EXP 0x2 0xa0
0x55: V37 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56: V38 = ADDRESS
0x58: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x59: V40 = BALANCE V39
0x5b: V41 = AND V32 0xffffffffffffffffffffffffffffffffffffffff
0x5c: SELFDESTRUCT V41
---
Entry stack: [V10, 0xa8, 0x0]
Stack pops: 1
Stack additions: [V40]
Exit stack: [V10, 0xa8, V40]

================================

Block 0x5d
[0x5d:0x6c]
---
Predecessors: [0xb]
Successors: [0x6d]
---
0x5d JUMPDEST
0x5e PUSH2 0xf4
0x61 PUSH1 0x1
0x63 SLOAD
0x64 PUSH1 0x1
0x66 PUSH1 0xa0
0x68 PUSH1 0x2
0x6a EXP
0x6b SUB
0x6c AND
---
0x5d: JUMPDEST 
0x5e: V42 = 0xf4
0x61: V43 = 0x1
0x63: V44 = S[0x1]
0x64: V45 = 0x1
0x66: V46 = 0xa0
0x68: V47 = 0x2
0x6a: V48 = EXP 0x2 0xa0
0x6b: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf4, V50]
Exit stack: [V10, 0xf4, V50]

================================

Block 0x6d
[0x6d:0x6f]
---
Predecessors: [0x5d, 0x70, 0x99, 0x123]
Successors: [0xf4, 0x111]
---
0x6d JUMPDEST
0x6e SWAP1
0x6f JUMP
---
0x6d: JUMPDEST 
0x6f: JUMP {0xf4, 0x111}
---
Entry stack: [V10, {0xf4, 0x111}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x70
[0x70:0x83]
---
Predecessors: [0x1f]
Successors: [0x6d]
---
0x70 JUMPDEST
0x71 PUSH2 0xf4
0x74 PUSH1 0x0
0x76 SLOAD
0x77 PUSH1 0x1
0x79 PUSH1 0xa0
0x7b PUSH1 0x2
0x7d EXP
0x7e SUB
0x7f AND
0x80 PUSH2 0x6d
0x83 JUMP
---
0x70: JUMPDEST 
0x71: V51 = 0xf4
0x74: V52 = 0x0
0x76: V53 = S[0x0]
0x77: V54 = 0x1
0x79: V55 = 0xa0
0x7b: V56 = 0x2
0x7d: V57 = EXP 0x2 0xa0
0x7e: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x80: V60 = 0x6d
0x83: JUMP 0x6d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf4, V59]
Exit stack: [V10, 0xf4, V59]

================================

Block 0x84
[0x84:0x98]
---
Predecessors: [0x2a]
Successors: [0x99, 0x123]
---
0x84 JUMPDEST
0x85 PUSH2 0x111
0x88 PUSH1 0x4
0x8a SLOAD
0x8b PUSH1 0x2
0x8d SLOAD
0x8e PUSH1 0x0
0x90 SWAP2
0x91 ADD
0x92 TIMESTAMP
0x93 LT
0x94 ISZERO
0x95 PUSH2 0x123
0x98 JUMPI
---
0x84: JUMPDEST 
0x85: V61 = 0x111
0x88: V62 = 0x4
0x8a: V63 = S[0x4]
0x8b: V64 = 0x2
0x8d: V65 = S[0x2]
0x8e: V66 = 0x0
0x91: V67 = ADD V63 V65
0x92: V68 = TIMESTAMP
0x93: V69 = LT V68 V67
0x94: V70 = ISZERO V69
0x95: V71 = 0x123
0x98: JUMPI 0x123 V70
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x111, 0x0]
Exit stack: [V10, 0x111, 0x0]

================================

Block 0x99
[0x99:0xa7]
---
Predecessors: [0x84]
Successors: [0x6d]
---
0x99 POP
0x9a PUSH1 0x4
0x9c SLOAD
0x9d PUSH1 0x2
0x9f SLOAD
0xa0 TIMESTAMP
0xa1 SWAP2
0xa2 ADD
0xa3 SUB
0xa4 PUSH2 0x6d
0xa7 JUMP
---
0x9a: V72 = 0x4
0x9c: V73 = S[0x4]
0x9d: V74 = 0x2
0x9f: V75 = S[0x2]
0xa0: V76 = TIMESTAMP
0xa2: V77 = ADD V73 V75
0xa3: V78 = SUB V77 V76
0xa4: V79 = 0x6d
0xa7: JUMP 0x6d
---
Entry stack: [V10, 0x111, 0x0]
Stack pops: 1
Stack additions: [V78]
Exit stack: [V10, 0x111, V78]

================================

Block 0xa8
[0xa8:0xa9]
---
Predecessors: [0xaa]
Successors: []
---
0xa8 JUMPDEST
0xa9 STOP
---
0xa8: JUMPDEST 
0xa9: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xaa
[0xaa:0xac]
---
Predecessors: [0xda]
Successors: [0xa8]
---
0xaa JUMPDEST
0xab POP
0xac JUMP
---
0xaa: JUMPDEST 
0xac: JUMP 0xa8
---
Entry stack: [V10, 0xa8, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb6]
---
Predecessors: [0x35]
Successors: [0xb7, 0xda]
---
0xad JUMPDEST
0xae PUSH1 0x3
0xb0 SLOAD
0xb1 CALLVALUE
0xb2 LT
0xb3 PUSH2 0xda
0xb6 JUMPI
---
0xad: JUMPDEST 
0xae: V80 = 0x3
0xb0: V81 = S[0x3]
0xb1: V82 = CALLVALUE
0xb2: V83 = LT V82 V81
0xb3: V84 = 0xda
0xb6: JUMPI 0xda V83
---
Entry stack: [V10, 0xa8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa8, 0x0]

================================

Block 0xb7
[0xb7:0xd9]
---
Predecessors: [0xad]
Successors: [0xda]
---
0xb7 PUSH1 0x1
0xb9 DUP1
0xba SLOAD
0xbb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd0 NOT
0xd1 AND
0xd2 CALLER
0xd3 OR
0xd4 SWAP1
0xd5 SSTORE
0xd6 TIMESTAMP
0xd7 PUSH1 0x2
0xd9 SSTORE
---
0xb7: V85 = 0x1
0xba: V86 = S[0x1]
0xbb: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0xd0: V88 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd1: V89 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V86
0xd2: V90 = CALLER
0xd3: V91 = OR V90 V89
0xd5: S[0x1] = V91
0xd6: V92 = TIMESTAMP
0xd7: V93 = 0x2
0xd9: S[0x2] = V92
---
Entry stack: [V10, 0xa8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa8, 0x0]

================================

Block 0xda
[0xda:0xe8]
---
Predecessors: [0xad, 0xb7]
Successors: [0xaa, 0xe9]
---
0xda JUMPDEST
0xdb CALLVALUE
0xdc PUSH6 0x6fde2b4eb000
0xe3 EQ
0xe4 ISZERO
0xe5 PUSH2 0xaa
0xe8 JUMPI
---
0xda: JUMPDEST 
0xdb: V94 = CALLVALUE
0xdc: V95 = 0x6fde2b4eb000
0xe3: V96 = EQ 0x6fde2b4eb000 V94
0xe4: V97 = ISZERO V96
0xe5: V98 = 0xaa
0xe8: JUMPI 0xaa V97
---
Entry stack: [V10, 0xa8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa8, 0x0]

================================

Block 0xe9
[0xe9:0xf3]
---
Predecessors: [0xda]
Successors: []
---
0xe9 CALLER
0xea PUSH1 0x1
0xec PUSH1 0xa0
0xee PUSH1 0x2
0xf0 EXP
0xf1 SUB
0xf2 AND
0xf3 SELFDESTRUCT
---
0xe9: V99 = CALLER
0xea: V100 = 0x1
0xec: V101 = 0xa0
0xee: V102 = 0x2
0xf0: V103 = EXP 0x2 0xa0
0xf1: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf2: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0xf3: SELFDESTRUCT V105
---
Entry stack: [V10, 0xa8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa8, 0x0]

================================

Block 0xf4
[0xf4:0x110]
---
Predecessors: [0x6d]
Successors: []
---
0xf4 JUMPDEST
0xf5 PUSH1 0x40
0xf7 DUP1
0xf8 MLOAD
0xf9 PUSH1 0x1
0xfb PUSH1 0xa0
0xfd PUSH1 0x2
0xff EXP
0x100 SUB
0x101 SWAP3
0x102 SWAP1
0x103 SWAP3
0x104 AND
0x105 DUP3
0x106 MSTORE
0x107 MLOAD
0x108 SWAP1
0x109 DUP2
0x10a SWAP1
0x10b SUB
0x10c PUSH1 0x20
0x10e ADD
0x10f SWAP1
0x110 RETURN
---
0xf4: JUMPDEST 
0xf5: V106 = 0x40
0xf8: V107 = M[0x40]
0xf9: V108 = 0x1
0xfb: V109 = 0xa0
0xfd: V110 = 0x2
0xff: V111 = EXP 0x2 0xa0
0x100: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x104: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x106: M[V107] = V113
0x107: V114 = M[0x40]
0x10b: V115 = SUB V107 V114
0x10c: V116 = 0x20
0x10e: V117 = ADD 0x20 V115
0x110: RETURN V114 V117
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x111
[0x111:0x122]
---
Predecessors: [0x6d]
Successors: []
---
0x111 JUMPDEST
0x112 PUSH1 0x40
0x114 DUP1
0x115 MLOAD
0x116 SWAP2
0x117 DUP3
0x118 MSTORE
0x119 MLOAD
0x11a SWAP1
0x11b DUP2
0x11c SWAP1
0x11d SUB
0x11e PUSH1 0x20
0x120 ADD
0x121 SWAP1
0x122 RETURN
---
0x111: JUMPDEST 
0x112: V118 = 0x40
0x115: V119 = M[0x40]
0x118: M[V119] = S0
0x119: V120 = M[0x40]
0x11d: V121 = SUB V119 V120
0x11e: V122 = 0x20
0x120: V123 = ADD 0x20 V121
0x122: RETURN V120 V123
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x123
[0x123:0x12a]
---
Predecessors: [0x84]
Successors: [0x6d]
---
0x123 JUMPDEST
0x124 POP
0x125 PUSH1 0x0
0x127 PUSH2 0x6d
0x12a JUMP
---
0x123: JUMPDEST 
0x125: V124 = 0x0
0x127: V125 = 0x6d
0x12a: JUMP 0x6d
---
Entry stack: [V10, 0x111, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x111, 0x0]

================================

Function 0:
Public function signature: 0x71a2ee52
Entry block: 0x5d
Exit block: 0xf4
Body: 0x5d, 0xf4

Function 1:
Public function signature: 0x8abb9845
Entry block: 0x70
Exit block: 0xf4
Body: 0x70, 0xf4

Function 2:
Public function signature: 0xefb98bcf
Entry block: 0x84
Exit block: 0x111
Body: 0x6d, 0x84, 0x99, 0xf4, 0x111, 0x123

Function 3:
Public fallback function
Entry block: 0x35
Exit block: 0xa8
Body: 0x35, 0x4a, 0xa8, 0xaa, 0xad, 0xb7, 0xda, 0xe9

