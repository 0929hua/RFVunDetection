Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x77]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x77
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x77
0xa: JUMPI 0x77 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x93]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x1cb3b20
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x93
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x1cb3b20
0x1a: V12 = EQ V10 0x1cb3b20
0x1b: V13 = 0x93
0x1e: JUMPI 0x93 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x11c]
---
0x1f DUP1
0x20 PUSH4 0x29dcb0cf
0x25 EQ
0x26 PUSH2 0x11c
0x29 JUMPI
---
0x20: V14 = 0x29dcb0cf
0x25: V15 = EQ 0x29dcb0cf V10
0x26: V16 = 0x11c
0x29: JUMPI 0x11c V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x12a]
---
0x2a DUP1
0x2b PUSH4 0x38af3eed
0x30 EQ
0x31 PUSH2 0x12a
0x34 JUMPI
---
0x2b: V17 = 0x38af3eed
0x30: V18 = EQ 0x38af3eed V10
0x31: V19 = 0x12a
0x34: JUMPI 0x12a V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x141]
---
0x35 DUP1
0x36 PUSH4 0x6e66f6e9
0x3b EQ
0x3c PUSH2 0x141
0x3f JUMPI
---
0x36: V20 = 0x6e66f6e9
0x3b: V21 = EQ 0x6e66f6e9 V10
0x3c: V22 = 0x141
0x3f: JUMPI 0x141 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x158]
---
0x40 DUP1
0x41 PUSH4 0x70a08231
0x46 EQ
0x47 PUSH2 0x158
0x4a JUMPI
---
0x41: V23 = 0x70a08231
0x46: V24 = EQ 0x70a08231 V10
0x47: V25 = 0x158
0x4a: JUMPI 0x158 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x175]
---
0x4b DUP1
0x4c PUSH4 0x7a3a0e84
0x51 EQ
0x52 PUSH2 0x175
0x55 JUMPI
---
0x4c: V26 = 0x7a3a0e84
0x51: V27 = EQ 0x7a3a0e84 V10
0x52: V28 = 0x175
0x55: JUMPI 0x175 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x183]
---
0x56 DUP1
0x57 PUSH4 0x7b3e5e7b
0x5c EQ
0x5d PUSH2 0x183
0x60 JUMPI
---
0x57: V29 = 0x7b3e5e7b
0x5c: V30 = EQ 0x7b3e5e7b V10
0x5d: V31 = 0x183
0x60: JUMPI 0x183 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x191]
---
0x61 DUP1
0x62 PUSH4 0xa035b1fe
0x67 EQ
0x68 PUSH2 0x191
0x6b JUMPI
---
0x62: V32 = 0xa035b1fe
0x67: V33 = EQ 0xa035b1fe V10
0x68: V34 = 0x191
0x6b: JUMPI 0x191 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x19f]
---
0x6c DUP1
0x6d PUSH4 0xfd6b7ef8
0x72 EQ
0x73 PUSH2 0x19f
0x76 JUMPI
---
0x6d: V35 = 0xfd6b7ef8
0x72: V36 = EQ 0xfd6b7ef8 V10
0x73: V37 = 0x19f
0x76: JUMPI 0x19f V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x8e]
---
Predecessors: [0x0, 0x6c]
Successors: [0x8f, 0x260]
---
0x77 JUMPDEST
0x78 PUSH2 0x25e
0x7b PUSH1 0x7
0x7d SLOAD
0x7e PUSH1 0x0
0x80 SWAP1
0x81 PUSH1 0xff
0x83 PUSH2 0x100
0x86 SWAP1
0x87 SWAP2
0x88 DIV
0x89 AND
0x8a ISZERO
0x8b PUSH2 0x260
0x8e JUMPI
---
0x77: JUMPDEST 
0x78: V38 = 0x25e
0x7b: V39 = 0x7
0x7d: V40 = S[0x7]
0x7e: V41 = 0x0
0x81: V42 = 0xff
0x83: V43 = 0x100
0x88: V44 = DIV V40 0x100
0x89: V45 = AND V44 0xff
0x8a: V46 = ISZERO V45
0x8b: V47 = 0x260
0x8e: JUMPI 0x260 V46
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25e, 0x0]
Exit stack: [V10, 0x25e, 0x0]

================================

Block 0x8f
[0x8f:0x92]
---
Predecessors: [0x77]
Successors: []
---
0x8f PUSH2 0x2
0x92 JUMP
---
0x8f: V48 = 0x2
0x92: THROW 
---
Entry stack: [V10, 0x25e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25e, 0x0]

================================

Block 0x93
[0x93:0x98]
---
Predecessors: [0xb]
Successors: [0x99]
---
0x93 JUMPDEST
0x94 CALLVALUE
0x95 PUSH2 0x2
0x98 JUMPI
---
0x93: JUMPDEST 
0x94: V49 = CALLVALUE
0x95: V50 = 0x2
0x98: THROWI V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x99
[0x99:0xa4]
---
Predecessors: [0x93]
Successors: [0xa5, 0x11a]
---
0x99 PUSH2 0x25e
0x9c PUSH1 0x3
0x9e SLOAD
0x9f TIMESTAMP
0xa0 LT
0xa1 PUSH2 0x11a
0xa4 JUMPI
---
0x99: V51 = 0x25e
0x9c: V52 = 0x3
0x9e: V53 = S[0x3]
0x9f: V54 = TIMESTAMP
0xa0: V55 = LT V54 V53
0xa1: V56 = 0x11a
0xa4: JUMPI 0x11a V55
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25e]
Exit stack: [V10, 0x25e]

================================

Block 0xa5
[0xa5:0xb0]
---
Predecessors: [0x99]
Successors: [0xb1, 0x10a]
---
0xa5 PUSH1 0x2
0xa7 SLOAD
0xa8 PUSH1 0x1
0xaa SLOAD
0xab SWAP1
0xac LT
0xad PUSH2 0x10a
0xb0 JUMPI
---
0xa5: V57 = 0x2
0xa7: V58 = S[0x2]
0xa8: V59 = 0x1
0xaa: V60 = S[0x1]
0xac: V61 = LT V58 V60
0xad: V62 = 0x10a
0xb0: JUMPI 0x10a V61
---
Entry stack: [V10, 0x25e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25e]

================================

Block 0xb1
[0xb1:0x109]
---
Predecessors: [0xa5]
Successors: [0x10a]
---
0xb1 PUSH1 0x7
0xb3 DUP1
0xb4 SLOAD
0xb5 PUSH1 0x2
0xb7 SLOAD
0xb8 PUSH1 0xff
0xba NOT
0xbb SWAP1
0xbc SWAP2
0xbd AND
0xbe PUSH1 0x1
0xc0 OR
0xc1 SWAP1
0xc2 SWAP2
0xc3 SSTORE
0xc4 PUSH1 0x40
0xc6 DUP1
0xc7 MLOAD
0xc8 PUSH1 0x0
0xca SLOAD
0xcb PUSH1 0x1
0xcd PUSH1 0xa0
0xcf PUSH1 0x2
0xd1 EXP
0xd2 SUB
0xd3 AND
0xd4 DUP2
0xd5 MSTORE
0xd6 PUSH1 0x20
0xd8 DUP2
0xd9 ADD
0xda SWAP3
0xdb SWAP1
0xdc SWAP3
0xdd MSTORE
0xde DUP1
0xdf MLOAD
0xe0 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x101 SWAP3
0x102 DUP2
0x103 SWAP1
0x104 SUB
0x105 SWAP1
0x106 SWAP2
0x107 ADD
0x108 SWAP1
0x109 LOG1
---
0xb1: V63 = 0x7
0xb4: V64 = S[0x7]
0xb5: V65 = 0x2
0xb7: V66 = S[0x2]
0xb8: V67 = 0xff
0xba: V68 = NOT 0xff
0xbd: V69 = AND V64 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0xbe: V70 = 0x1
0xc0: V71 = OR 0x1 V69
0xc3: S[0x7] = V71
0xc4: V72 = 0x40
0xc7: V73 = M[0x40]
0xc8: V74 = 0x0
0xca: V75 = S[0x0]
0xcb: V76 = 0x1
0xcd: V77 = 0xa0
0xcf: V78 = 0x2
0xd1: V79 = EXP 0x2 0xa0
0xd2: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd3: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0xd5: M[V73] = V81
0xd6: V82 = 0x20
0xd9: V83 = ADD V73 0x20
0xdd: M[V83] = V66
0xdf: V84 = M[0x40]
0xe0: V85 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x104: V86 = SUB V73 V84
0x107: V87 = ADD 0x40 V86
0x109: LOG V84 V87 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V10, 0x25e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25e]

================================

Block 0x10a
[0x10a:0x119]
---
Predecessors: [0xa5, 0xb1]
Successors: [0x11a]
---
0x10a JUMPDEST
0x10b PUSH1 0x7
0x10d DUP1
0x10e SLOAD
0x10f PUSH2 0xff00
0x112 NOT
0x113 AND
0x114 PUSH2 0x100
0x117 OR
0x118 SWAP1
0x119 SSTORE
---
0x10a: JUMPDEST 
0x10b: V88 = 0x7
0x10e: V89 = S[0x7]
0x10f: V90 = 0xff00
0x112: V91 = NOT 0xff00
0x113: V92 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V89
0x114: V93 = 0x100
0x117: V94 = OR 0x100 V92
0x119: S[0x7] = V94
---
Entry stack: [V10, 0x25e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25e]

================================

Block 0x11a
[0x11a:0x11b]
---
Predecessors: [0x99, 0x10a]
Successors: [0x25e]
---
0x11a JUMPDEST
0x11b JUMP
---
0x11a: JUMPDEST 
0x11b: JUMP 0x25e
---
Entry stack: [V10, 0x25e]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x11c
[0x11c:0x121]
---
Predecessors: [0x1f]
Successors: [0x122]
---
0x11c JUMPDEST
0x11d CALLVALUE
0x11e PUSH2 0x2
0x121 JUMPI
---
0x11c: JUMPDEST 
0x11d: V95 = CALLVALUE
0x11e: V96 = 0x2
0x121: THROWI V95
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x122
[0x122:0x129]
---
Predecessors: [0x11c]
Successors: [0x337]
---
0x122 PUSH2 0x337
0x125 PUSH1 0x3
0x127 SLOAD
0x128 DUP2
0x129 JUMP
---
0x122: V97 = 0x337
0x125: V98 = 0x3
0x127: V99 = S[0x3]
0x129: JUMP 0x337
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x337, V99]
Exit stack: [V10, 0x337, V99]

================================

Block 0x12a
[0x12a:0x12f]
---
Predecessors: [0x2a]
Successors: [0x130]
---
0x12a JUMPDEST
0x12b CALLVALUE
0x12c PUSH2 0x2
0x12f JUMPI
---
0x12a: JUMPDEST 
0x12b: V100 = CALLVALUE
0x12c: V101 = 0x2
0x12f: THROWI V100
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x130
[0x130:0x140]
---
Predecessors: [0x12a]
Successors: [0x349]
---
0x130 PUSH2 0x349
0x133 PUSH1 0x0
0x135 SLOAD
0x136 PUSH1 0x1
0x138 PUSH1 0xa0
0x13a PUSH1 0x2
0x13c EXP
0x13d SUB
0x13e AND
0x13f DUP2
0x140 JUMP
---
0x130: V102 = 0x349
0x133: V103 = 0x0
0x135: V104 = S[0x0]
0x136: V105 = 0x1
0x138: V106 = 0xa0
0x13a: V107 = 0x2
0x13c: V108 = EXP 0x2 0xa0
0x13d: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13e: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x140: JUMP 0x349
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x349, V110]
Exit stack: [V10, 0x349, V110]

================================

Block 0x141
[0x141:0x146]
---
Predecessors: [0x35]
Successors: [0x147]
---
0x141 JUMPDEST
0x142 CALLVALUE
0x143 PUSH2 0x2
0x146 JUMPI
---
0x141: JUMPDEST 
0x142: V111 = CALLVALUE
0x143: V112 = 0x2
0x146: THROWI V111
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x147
[0x147:0x157]
---
Predecessors: [0x141]
Successors: [0x349]
---
0x147 PUSH2 0x349
0x14a PUSH1 0x5
0x14c SLOAD
0x14d PUSH1 0x1
0x14f PUSH1 0xa0
0x151 PUSH1 0x2
0x153 EXP
0x154 SUB
0x155 AND
0x156 DUP2
0x157 JUMP
---
0x147: V113 = 0x349
0x14a: V114 = 0x5
0x14c: V115 = S[0x5]
0x14d: V116 = 0x1
0x14f: V117 = 0xa0
0x151: V118 = 0x2
0x153: V119 = EXP 0x2 0xa0
0x154: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x157: JUMP 0x349
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x349, V121]
Exit stack: [V10, 0x349, V121]

================================

Block 0x158
[0x158:0x15d]
---
Predecessors: [0x40]
Successors: [0x15e]
---
0x158 JUMPDEST
0x159 CALLVALUE
0x15a PUSH2 0x2
0x15d JUMPI
---
0x158: JUMPDEST 
0x159: V122 = CALLVALUE
0x15a: V123 = 0x2
0x15d: THROWI V122
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15e
[0x15e:0x174]
---
Predecessors: [0x158]
Successors: [0x337]
---
0x15e PUSH2 0x337
0x161 PUSH1 0x4
0x163 CALLDATALOAD
0x164 PUSH1 0x6
0x166 PUSH1 0x20
0x168 MSTORE
0x169 PUSH1 0x0
0x16b SWAP1
0x16c DUP2
0x16d MSTORE
0x16e PUSH1 0x40
0x170 SWAP1
0x171 SHA3
0x172 SLOAD
0x173 DUP2
0x174 JUMP
---
0x15e: V124 = 0x337
0x161: V125 = 0x4
0x163: V126 = CALLDATALOAD 0x4
0x164: V127 = 0x6
0x166: V128 = 0x20
0x168: M[0x20] = 0x6
0x169: V129 = 0x0
0x16d: M[0x0] = V126
0x16e: V130 = 0x40
0x171: V131 = SHA3 0x0 0x40
0x172: V132 = S[V131]
0x174: JUMP 0x337
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x337, V132]
Exit stack: [V10, 0x337, V132]

================================

Block 0x175
[0x175:0x17a]
---
Predecessors: [0x4b]
Successors: [0x17b]
---
0x175 JUMPDEST
0x176 CALLVALUE
0x177 PUSH2 0x2
0x17a JUMPI
---
0x175: JUMPDEST 
0x176: V133 = CALLVALUE
0x177: V134 = 0x2
0x17a: THROWI V133
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x17b
[0x17b:0x182]
---
Predecessors: [0x175]
Successors: [0x337]
---
0x17b PUSH2 0x337
0x17e PUSH1 0x1
0x180 SLOAD
0x181 DUP2
0x182 JUMP
---
0x17b: V135 = 0x337
0x17e: V136 = 0x1
0x180: V137 = S[0x1]
0x182: JUMP 0x337
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x337, V137]
Exit stack: [V10, 0x337, V137]

================================

Block 0x183
[0x183:0x188]
---
Predecessors: [0x56]
Successors: [0x189]
---
0x183 JUMPDEST
0x184 CALLVALUE
0x185 PUSH2 0x2
0x188 JUMPI
---
0x183: JUMPDEST 
0x184: V138 = CALLVALUE
0x185: V139 = 0x2
0x188: THROWI V138
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x189
[0x189:0x190]
---
Predecessors: [0x183]
Successors: [0x337]
---
0x189 PUSH2 0x337
0x18c PUSH1 0x2
0x18e SLOAD
0x18f DUP2
0x190 JUMP
---
0x189: V140 = 0x337
0x18c: V141 = 0x2
0x18e: V142 = S[0x2]
0x190: JUMP 0x337
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x337, V142]
Exit stack: [V10, 0x337, V142]

================================

Block 0x191
[0x191:0x196]
---
Predecessors: [0x61]
Successors: [0x197]
---
0x191 JUMPDEST
0x192 CALLVALUE
0x193 PUSH2 0x2
0x196 JUMPI
---
0x191: JUMPDEST 
0x192: V143 = CALLVALUE
0x193: V144 = 0x2
0x196: THROWI V143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x197
[0x197:0x19e]
---
Predecessors: [0x191]
Successors: [0x337]
---
0x197 PUSH2 0x337
0x19a PUSH1 0x4
0x19c SLOAD
0x19d DUP2
0x19e JUMP
---
0x197: V145 = 0x337
0x19a: V146 = 0x4
0x19c: V147 = S[0x4]
0x19e: JUMP 0x337
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x337, V147]
Exit stack: [V10, 0x337, V147]

================================

Block 0x19f
[0x19f:0x1a4]
---
Predecessors: [0x6c]
Successors: [0x1a5]
---
0x19f JUMPDEST
0x1a0 CALLVALUE
0x1a1 PUSH2 0x2
0x1a4 JUMPI
---
0x19f: JUMPDEST 
0x1a0: V148 = CALLVALUE
0x1a1: V149 = 0x2
0x1a4: THROWI V148
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a5
[0x1a5:0x1b3]
---
Predecessors: [0x19f]
Successors: [0x1b4, 0x334]
---
0x1a5 PUSH2 0x25e
0x1a8 PUSH1 0x3
0x1aa SLOAD
0x1ab PUSH1 0x0
0x1ad SWAP1
0x1ae TIMESTAMP
0x1af LT
0x1b0 PUSH2 0x334
0x1b3 JUMPI
---
0x1a5: V150 = 0x25e
0x1a8: V151 = 0x3
0x1aa: V152 = S[0x3]
0x1ab: V153 = 0x0
0x1ae: V154 = TIMESTAMP
0x1af: V155 = LT V154 V152
0x1b0: V156 = 0x334
0x1b3: JUMPI 0x334 V155
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25e, 0x0]
Exit stack: [V10, 0x25e, 0x0]

================================

Block 0x1b4
[0x1b4:0x1bf]
---
Predecessors: [0x1a5]
Successors: [0x1c0, 0x382]
---
0x1b4 PUSH1 0x7
0x1b6 SLOAD
0x1b7 PUSH1 0xff
0x1b9 AND
0x1ba ISZERO
0x1bb ISZERO
0x1bc PUSH2 0x382
0x1bf JUMPI
---
0x1b4: V157 = 0x7
0x1b6: V158 = S[0x7]
0x1b7: V159 = 0xff
0x1b9: V160 = AND 0xff V158
0x1ba: V161 = ISZERO V160
0x1bb: V162 = ISZERO V161
0x1bc: V163 = 0x382
0x1bf: JUMPI 0x382 V162
---
Entry stack: [V10, 0x25e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25e, 0x0]

================================

Block 0x1c0
[0x1c0:0x1e6]
---
Predecessors: [0x1b4]
Successors: [0x1e7, 0x382]
---
0x1c0 POP
0x1c1 PUSH1 0x1
0x1c3 PUSH1 0xa0
0x1c5 PUSH1 0x2
0x1c7 EXP
0x1c8 SUB
0x1c9 CALLER
0x1ca AND
0x1cb PUSH1 0x0
0x1cd SWAP1
0x1ce DUP2
0x1cf MSTORE
0x1d0 PUSH1 0x6
0x1d2 PUSH1 0x20
0x1d4 MSTORE
0x1d5 PUSH1 0x40
0x1d7 DUP2
0x1d8 SHA3
0x1d9 DUP1
0x1da SLOAD
0x1db SWAP1
0x1dc DUP3
0x1dd SWAP1
0x1de SSTORE
0x1df SWAP1
0x1e0 DUP2
0x1e1 GT
0x1e2 ISZERO
0x1e3 PUSH2 0x382
0x1e6 JUMPI
---
0x1c1: V164 = 0x1
0x1c3: V165 = 0xa0
0x1c5: V166 = 0x2
0x1c7: V167 = EXP 0x2 0xa0
0x1c8: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c9: V169 = CALLER
0x1ca: V170 = AND V169 0xffffffffffffffffffffffffffffffffffffffff
0x1cb: V171 = 0x0
0x1cf: M[0x0] = V170
0x1d0: V172 = 0x6
0x1d2: V173 = 0x20
0x1d4: M[0x20] = 0x6
0x1d5: V174 = 0x40
0x1d8: V175 = SHA3 0x0 0x40
0x1da: V176 = S[V175]
0x1de: S[V175] = 0x0
0x1e1: V177 = GT V176 0x0
0x1e2: V178 = ISZERO V177
0x1e3: V179 = 0x382
0x1e6: JUMPI 0x382 V178
---
Entry stack: [V10, 0x25e, 0x0]
Stack pops: 1
Stack additions: [V176]
Exit stack: [V10, 0x25e, V176]

================================

Block 0x1e7
[0x1e7:0x210]
---
Predecessors: [0x1c0]
Successors: [0x211, 0x366]
---
0x1e7 PUSH1 0x40
0x1e9 MLOAD
0x1ea PUSH1 0x1
0x1ec PUSH1 0xa0
0x1ee PUSH1 0x2
0x1f0 EXP
0x1f1 SUB
0x1f2 CALLER
0x1f3 AND
0x1f4 SWAP1
0x1f5 DUP3
0x1f6 ISZERO
0x1f7 PUSH2 0x8fc
0x1fa MUL
0x1fb SWAP1
0x1fc DUP4
0x1fd SWAP1
0x1fe PUSH1 0x0
0x200 DUP2
0x201 DUP2
0x202 DUP2
0x203 DUP6
0x204 DUP9
0x205 DUP9
0x206 CALL
0x207 SWAP4
0x208 POP
0x209 POP
0x20a POP
0x20b POP
0x20c ISZERO
0x20d PUSH2 0x366
0x210 JUMPI
---
0x1e7: V180 = 0x40
0x1e9: V181 = M[0x40]
0x1ea: V182 = 0x1
0x1ec: V183 = 0xa0
0x1ee: V184 = 0x2
0x1f0: V185 = EXP 0x2 0xa0
0x1f1: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f2: V187 = CALLER
0x1f3: V188 = AND V187 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V189 = ISZERO V176
0x1f7: V190 = 0x8fc
0x1fa: V191 = MUL 0x8fc V189
0x1fe: V192 = 0x0
0x206: V193 = CALL V191 V188 V176 V181 0x0 V181 0x0
0x20c: V194 = ISZERO V193
0x20d: V195 = 0x366
0x210: JUMPI 0x366 V194
---
Entry stack: [V10, 0x25e, V176]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x25e, V176]

================================

Block 0x211
[0x211:0x25d]
---
Predecessors: [0x1e7]
Successors: [0x382]
---
0x211 PUSH1 0x40
0x213 DUP1
0x214 MLOAD
0x215 PUSH1 0x1
0x217 PUSH1 0xa0
0x219 PUSH1 0x2
0x21b EXP
0x21c SUB
0x21d CALLER
0x21e AND
0x21f DUP2
0x220 MSTORE
0x221 PUSH1 0x20
0x223 DUP2
0x224 ADD
0x225 DUP4
0x226 SWAP1
0x227 MSTORE
0x228 PUSH1 0x0
0x22a DUP2
0x22b DUP4
0x22c ADD
0x22d MSTORE
0x22e SWAP1
0x22f MLOAD
0x230 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x251 SWAP2
0x252 DUP2
0x253 SWAP1
0x254 SUB
0x255 PUSH1 0x60
0x257 ADD
0x258 SWAP1
0x259 LOG1
0x25a PUSH2 0x382
0x25d JUMP
---
0x211: V196 = 0x40
0x214: V197 = M[0x40]
0x215: V198 = 0x1
0x217: V199 = 0xa0
0x219: V200 = 0x2
0x21b: V201 = EXP 0x2 0xa0
0x21c: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21d: V203 = CALLER
0x21e: V204 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x220: M[V197] = V204
0x221: V205 = 0x20
0x224: V206 = ADD V197 0x20
0x227: M[V206] = V176
0x228: V207 = 0x0
0x22c: V208 = ADD 0x40 V197
0x22d: M[V208] = 0x0
0x22f: V209 = M[0x40]
0x230: V210 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x254: V211 = SUB V197 V209
0x255: V212 = 0x60
0x257: V213 = ADD 0x60 V211
0x259: LOG V209 V213 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x25a: V214 = 0x382
0x25d: JUMP 0x382
---
Entry stack: [V10, 0x25e, V176]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x25e, V176]

================================

Block 0x25e
[0x25e:0x25f]
---
Predecessors: [0x11a, 0x334, 0x42a]
Successors: []
---
0x25e JUMPDEST
0x25f STOP
---
0x25e: JUMPDEST 
0x25f: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x260
[0x260:0x29f]
---
Predecessors: [0x77]
Successors: [0x2a0]
---
0x260 JUMPDEST
0x261 POP
0x262 PUSH1 0x1
0x264 PUSH1 0xa0
0x266 PUSH1 0x2
0x268 EXP
0x269 SUB
0x26a CALLER
0x26b DUP2
0x26c DUP2
0x26d AND
0x26e PUSH1 0x0
0x270 SWAP1
0x271 DUP2
0x272 MSTORE
0x273 PUSH1 0x6
0x275 PUSH1 0x20
0x277 MSTORE
0x278 PUSH1 0x40
0x27a SWAP1
0x27b SHA3
0x27c CALLVALUE
0x27d SWAP1
0x27e DUP2
0x27f SWAP1
0x280 SSTORE
0x281 PUSH1 0x2
0x283 DUP1
0x284 SLOAD
0x285 DUP3
0x286 ADD
0x287 SWAP1
0x288 SSTORE
0x289 PUSH1 0x5
0x28b SLOAD
0x28c PUSH1 0x4
0x28e SLOAD
0x28f SWAP2
0x290 SWAP4
0x291 AND
0x292 SWAP2
0x293 PUSH4 0xa9059cbb
0x298 SWAP2
0x299 DUP5
0x29a DUP2
0x29b ISZERO
0x29c PUSH2 0x2
0x29f JUMPI
---
0x260: JUMPDEST 
0x262: V215 = 0x1
0x264: V216 = 0xa0
0x266: V217 = 0x2
0x268: V218 = EXP 0x2 0xa0
0x269: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26a: V220 = CALLER
0x26d: V221 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V222 = 0x0
0x272: M[0x0] = V221
0x273: V223 = 0x6
0x275: V224 = 0x20
0x277: M[0x20] = 0x6
0x278: V225 = 0x40
0x27b: V226 = SHA3 0x0 0x40
0x27c: V227 = CALLVALUE
0x280: S[V226] = V227
0x281: V228 = 0x2
0x284: V229 = S[0x2]
0x286: V230 = ADD V227 V229
0x288: S[0x2] = V230
0x289: V231 = 0x5
0x28b: V232 = S[0x5]
0x28c: V233 = 0x4
0x28e: V234 = S[0x4]
0x291: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x293: V236 = 0xa9059cbb
0x29b: V237 = ISZERO V234
0x29c: V238 = 0x2
0x29f: THROWI V237
---
Entry stack: [V10, 0x25e, 0x0]
Stack pops: 1
Stack additions: [V227, V235, 0xa9059cbb, V220, V234, V227]
Exit stack: [V10, 0x25e, V227, V235, 0xa9059cbb, V220, V234, V227]

================================

Block 0x2a0
[0x2a0:0x2dc]
---
Predecessors: [0x260]
Successors: [0x2dd]
---
0x2a0 DIV
0x2a1 PUSH1 0x40
0x2a3 MLOAD
0x2a4 DUP4
0x2a5 PUSH1 0xe0
0x2a7 PUSH1 0x2
0x2a9 EXP
0x2aa MUL
0x2ab DUP2
0x2ac MSTORE
0x2ad PUSH1 0x4
0x2af ADD
0x2b0 DUP1
0x2b1 DUP4
0x2b2 PUSH1 0x1
0x2b4 PUSH1 0xa0
0x2b6 PUSH1 0x2
0x2b8 EXP
0x2b9 SUB
0x2ba AND
0x2bb DUP2
0x2bc MSTORE
0x2bd PUSH1 0x20
0x2bf ADD
0x2c0 DUP3
0x2c1 DUP2
0x2c2 MSTORE
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 SWAP3
0x2c7 POP
0x2c8 POP
0x2c9 POP
0x2ca PUSH1 0x0
0x2cc PUSH1 0x40
0x2ce MLOAD
0x2cf DUP1
0x2d0 DUP4
0x2d1 SUB
0x2d2 DUP2
0x2d3 PUSH1 0x0
0x2d5 DUP8
0x2d6 DUP1
0x2d7 EXTCODESIZE
0x2d8 ISZERO
0x2d9 PUSH2 0x2
0x2dc JUMPI
---
0x2a0: V239 = DIV V227 V234
0x2a1: V240 = 0x40
0x2a3: V241 = M[0x40]
0x2a5: V242 = 0xe0
0x2a7: V243 = 0x2
0x2a9: V244 = EXP 0x2 0xe0
0x2aa: V245 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x2ac: M[V241] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2ad: V246 = 0x4
0x2af: V247 = ADD 0x4 V241
0x2b2: V248 = 0x1
0x2b4: V249 = 0xa0
0x2b6: V250 = 0x2
0x2b8: V251 = EXP 0x2 0xa0
0x2b9: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ba: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x2bc: M[V247] = V253
0x2bd: V254 = 0x20
0x2bf: V255 = ADD 0x20 V247
0x2c2: M[V255] = V239
0x2c3: V256 = 0x20
0x2c5: V257 = ADD 0x20 V255
0x2ca: V258 = 0x0
0x2cc: V259 = 0x40
0x2ce: V260 = M[0x40]
0x2d1: V261 = SUB V257 V260
0x2d3: V262 = 0x0
0x2d7: V263 = EXTCODESIZE V235
0x2d8: V264 = ISZERO V263
0x2d9: V265 = 0x2
0x2dc: THROWI V264
---
Entry stack: [V10, 0x25e, V227, V235, 0xa9059cbb, V220, V234, V227]
Stack pops: 5
Stack additions: [S4, S3, V257, 0x0, V260, V261, V260, 0x0, S4]
Exit stack: [V10, 0x25e, V227, V235, 0xa9059cbb, V257, 0x0, V260, V261, V260, 0x0, V235]

================================

Block 0x2dd
[0x2dd:0x2e6]
---
Predecessors: [0x2a0]
Successors: [0x2e7]
---
0x2dd PUSH1 0x32
0x2df GAS
0x2e0 SUB
0x2e1 CALL
0x2e2 ISZERO
0x2e3 PUSH2 0x2
0x2e6 JUMPI
---
0x2dd: V266 = 0x32
0x2df: V267 = GAS
0x2e0: V268 = SUB V267 0x32
0x2e1: V269 = CALL V268 V235 0x0 V260 V261 V260 0x0
0x2e2: V270 = ISZERO V269
0x2e3: V271 = 0x2
0x2e6: THROWI V270
---
Entry stack: [V10, 0x25e, V227, V235, 0xa9059cbb, V257, 0x0, V260, V261, V260, 0x0, V235]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x25e, V227, V235, 0xa9059cbb, V257]

================================

Block 0x2e7
[0x2e7:0x333]
---
Predecessors: [0x2dd]
Successors: [0x334]
---
0x2e7 POP
0x2e8 POP
0x2e9 PUSH1 0x40
0x2eb DUP1
0x2ec MLOAD
0x2ed PUSH1 0x1
0x2ef PUSH1 0xa0
0x2f1 PUSH1 0x2
0x2f3 EXP
0x2f4 SUB
0x2f5 CALLER
0x2f6 AND
0x2f7 DUP2
0x2f8 MSTORE
0x2f9 PUSH1 0x20
0x2fb DUP2
0x2fc ADD
0x2fd DUP5
0x2fe SWAP1
0x2ff MSTORE
0x300 PUSH1 0x1
0x302 DUP2
0x303 DUP4
0x304 ADD
0x305 MSTORE
0x306 SWAP1
0x307 MLOAD
0x308 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x329 SWAP3
0x32a POP
0x32b SWAP1
0x32c DUP2
0x32d SWAP1
0x32e SUB
0x32f PUSH1 0x60
0x331 ADD
0x332 SWAP1
0x333 LOG1
---
0x2e9: V272 = 0x40
0x2ec: V273 = M[0x40]
0x2ed: V274 = 0x1
0x2ef: V275 = 0xa0
0x2f1: V276 = 0x2
0x2f3: V277 = EXP 0x2 0xa0
0x2f4: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f5: V279 = CALLER
0x2f6: V280 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x2f8: M[V273] = V280
0x2f9: V281 = 0x20
0x2fc: V282 = ADD V273 0x20
0x2ff: M[V282] = V227
0x300: V283 = 0x1
0x304: V284 = ADD 0x40 V273
0x305: M[V284] = 0x1
0x307: V285 = M[0x40]
0x308: V286 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x32e: V287 = SUB V273 V285
0x32f: V288 = 0x60
0x331: V289 = ADD 0x60 V287
0x333: LOG V285 V289 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, 0x25e, V227, V235, 0xa9059cbb, V257]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x25e, V227]

================================

Block 0x334
[0x334:0x336]
---
Predecessors: [0x1a5, 0x2e7, 0x3a3, 0x3d8]
Successors: [0x25e]
---
0x334 JUMPDEST
0x335 POP
0x336 JUMP
---
0x334: JUMPDEST 
0x336: JUMP 0x25e
---
Entry stack: [V10, 0x25e, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x337
[0x337:0x348]
---
Predecessors: [0x122, 0x15e, 0x17b, 0x189, 0x197]
Successors: []
---
0x337 JUMPDEST
0x338 PUSH1 0x40
0x33a DUP1
0x33b MLOAD
0x33c SWAP2
0x33d DUP3
0x33e MSTORE
0x33f MLOAD
0x340 SWAP1
0x341 DUP2
0x342 SWAP1
0x343 SUB
0x344 PUSH1 0x20
0x346 ADD
0x347 SWAP1
0x348 RETURN
---
0x337: JUMPDEST 
0x338: V290 = 0x40
0x33b: V291 = M[0x40]
0x33e: M[V291] = S0
0x33f: V292 = M[0x40]
0x343: V293 = SUB V291 V292
0x344: V294 = 0x20
0x346: V295 = ADD 0x20 V293
0x348: RETURN V292 V295
---
Entry stack: [V10, 0x337, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x337]

================================

Block 0x349
[0x349:0x365]
---
Predecessors: [0x130, 0x147]
Successors: []
---
0x349 JUMPDEST
0x34a PUSH1 0x40
0x34c DUP1
0x34d MLOAD
0x34e PUSH1 0x1
0x350 PUSH1 0xa0
0x352 PUSH1 0x2
0x354 EXP
0x355 SUB
0x356 SWAP3
0x357 SWAP1
0x358 SWAP3
0x359 AND
0x35a DUP3
0x35b MSTORE
0x35c MLOAD
0x35d SWAP1
0x35e DUP2
0x35f SWAP1
0x360 SUB
0x361 PUSH1 0x20
0x363 ADD
0x364 SWAP1
0x365 RETURN
---
0x349: JUMPDEST 
0x34a: V296 = 0x40
0x34d: V297 = M[0x40]
0x34e: V298 = 0x1
0x350: V299 = 0xa0
0x352: V300 = 0x2
0x354: V301 = EXP 0x2 0xa0
0x355: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x359: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x35b: M[V297] = V303
0x35c: V304 = M[0x40]
0x360: V305 = SUB V297 V304
0x361: V306 = 0x20
0x363: V307 = ADD 0x20 V305
0x365: RETURN V304 V307
---
Entry stack: [V10, 0x349, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x349]

================================

Block 0x366
[0x366:0x381]
---
Predecessors: [0x1e7]
Successors: [0x382]
---
0x366 JUMPDEST
0x367 PUSH1 0x1
0x369 PUSH1 0xa0
0x36b PUSH1 0x2
0x36d EXP
0x36e SUB
0x36f CALLER
0x370 AND
0x371 PUSH1 0x0
0x373 SWAP1
0x374 DUP2
0x375 MSTORE
0x376 PUSH1 0x6
0x378 PUSH1 0x20
0x37a MSTORE
0x37b PUSH1 0x40
0x37d SWAP1
0x37e SHA3
0x37f DUP2
0x380 SWAP1
0x381 SSTORE
---
0x366: JUMPDEST 
0x367: V308 = 0x1
0x369: V309 = 0xa0
0x36b: V310 = 0x2
0x36d: V311 = EXP 0x2 0xa0
0x36e: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36f: V313 = CALLER
0x370: V314 = AND V313 0xffffffffffffffffffffffffffffffffffffffff
0x371: V315 = 0x0
0x375: M[0x0] = V314
0x376: V316 = 0x6
0x378: V317 = 0x20
0x37a: M[0x20] = 0x6
0x37b: V318 = 0x40
0x37e: V319 = SHA3 0x0 0x40
0x381: S[V319] = V176
---
Entry stack: [V10, 0x25e, V176]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x25e, V176]

================================

Block 0x382
[0x382:0x38e]
---
Predecessors: [0x1b4, 0x1c0, 0x211, 0x366]
Successors: [0x38f, 0x3a3]
---
0x382 JUMPDEST
0x383 PUSH1 0x7
0x385 SLOAD
0x386 PUSH1 0xff
0x388 AND
0x389 DUP1
0x38a ISZERO
0x38b PUSH2 0x3a3
0x38e JUMPI
---
0x382: JUMPDEST 
0x383: V320 = 0x7
0x385: V321 = S[0x7]
0x386: V322 = 0xff
0x388: V323 = AND 0xff V321
0x38a: V324 = ISZERO V323
0x38b: V325 = 0x3a3
0x38e: JUMPI 0x3a3 V324
---
Entry stack: [V10, 0x25e, S0]
Stack pops: 0
Stack additions: [V323]
Exit stack: [V10, 0x25e, S0, V323]

================================

Block 0x38f
[0x38f:0x3a2]
---
Predecessors: [0x382]
Successors: [0x3a3]
---
0x38f POP
0x390 PUSH1 0x0
0x392 SLOAD
0x393 PUSH1 0x1
0x395 PUSH1 0xa0
0x397 PUSH1 0x2
0x399 EXP
0x39a SUB
0x39b SWAP1
0x39c DUP2
0x39d AND
0x39e CALLER
0x39f SWAP1
0x3a0 SWAP2
0x3a1 AND
0x3a2 EQ
---
0x390: V326 = 0x0
0x392: V327 = S[0x0]
0x393: V328 = 0x1
0x395: V329 = 0xa0
0x397: V330 = 0x2
0x399: V331 = EXP 0x2 0xa0
0x39a: V332 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39d: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x39e: V334 = CALLER
0x3a1: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x3a2: V336 = EQ V335 V333
---
Entry stack: [V10, 0x25e, S1, V323]
Stack pops: 1
Stack additions: [V336]
Exit stack: [V10, 0x25e, S1, V336]

================================

Block 0x3a3
[0x3a3:0x3a8]
---
Predecessors: [0x382, 0x38f]
Successors: [0x334, 0x3a9]
---
0x3a3 JUMPDEST
0x3a4 ISZERO
0x3a5 PUSH2 0x334
0x3a8 JUMPI
---
0x3a3: JUMPDEST 
0x3a4: V337 = ISZERO S0
0x3a5: V338 = 0x334
0x3a8: JUMPI 0x334 V337
---
Entry stack: [V10, 0x25e, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x25e, S1]

================================

Block 0x3a9
[0x3a9:0x3d7]
---
Predecessors: [0x3a3]
Successors: [0x3d8, 0x42a]
---
0x3a9 PUSH1 0x40
0x3ab MLOAD
0x3ac PUSH1 0x0
0x3ae DUP1
0x3af SLOAD
0x3b0 PUSH1 0x2
0x3b2 SLOAD
0x3b3 PUSH1 0x1
0x3b5 PUSH1 0xa0
0x3b7 PUSH1 0x2
0x3b9 EXP
0x3ba SUB
0x3bb SWAP2
0x3bc SWAP1
0x3bd SWAP2
0x3be AND
0x3bf SWAP3
0x3c0 DUP2
0x3c1 ISZERO
0x3c2 PUSH2 0x8fc
0x3c5 MUL
0x3c6 SWAP3
0x3c7 DUP2
0x3c8 DUP2
0x3c9 DUP2
0x3ca DUP6
0x3cb DUP9
0x3cc DUP9
0x3cd CALL
0x3ce SWAP4
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 POP
0x3d3 ISZERO
0x3d4 PUSH2 0x42a
0x3d7 JUMPI
---
0x3a9: V339 = 0x40
0x3ab: V340 = M[0x40]
0x3ac: V341 = 0x0
0x3af: V342 = S[0x0]
0x3b0: V343 = 0x2
0x3b2: V344 = S[0x2]
0x3b3: V345 = 0x1
0x3b5: V346 = 0xa0
0x3b7: V347 = 0x2
0x3b9: V348 = EXP 0x2 0xa0
0x3ba: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3be: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x3c1: V351 = ISZERO V344
0x3c2: V352 = 0x8fc
0x3c5: V353 = MUL 0x8fc V351
0x3cd: V354 = CALL V353 V350 V344 V340 0x0 V340 0x0
0x3d3: V355 = ISZERO V354
0x3d4: V356 = 0x42a
0x3d7: JUMPI 0x42a V355
---
Entry stack: [V10, 0x25e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25e, S0]

================================

Block 0x3d8
[0x3d8:0x429]
---
Predecessors: [0x3a9]
Successors: [0x334]
---
0x3d8 PUSH1 0x40
0x3da DUP1
0x3db MLOAD
0x3dc PUSH1 0x0
0x3de DUP1
0x3df SLOAD
0x3e0 PUSH1 0x2
0x3e2 SLOAD
0x3e3 PUSH1 0x1
0x3e5 PUSH1 0xa0
0x3e7 PUSH1 0x2
0x3e9 EXP
0x3ea SUB
0x3eb SWAP2
0x3ec SWAP1
0x3ed SWAP2
0x3ee AND
0x3ef DUP4
0x3f0 MSTORE
0x3f1 PUSH1 0x20
0x3f3 DUP4
0x3f4 ADD
0x3f5 MSTORE
0x3f6 DUP2
0x3f7 DUP4
0x3f8 ADD
0x3f9 MSTORE
0x3fa SWAP1
0x3fb MLOAD
0x3fc PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x41d SWAP2
0x41e DUP2
0x41f SWAP1
0x420 SUB
0x421 PUSH1 0x60
0x423 ADD
0x424 SWAP1
0x425 LOG1
0x426 PUSH2 0x334
0x429 JUMP
---
0x3d8: V357 = 0x40
0x3db: V358 = M[0x40]
0x3dc: V359 = 0x0
0x3df: V360 = S[0x0]
0x3e0: V361 = 0x2
0x3e2: V362 = S[0x2]
0x3e3: V363 = 0x1
0x3e5: V364 = 0xa0
0x3e7: V365 = 0x2
0x3e9: V366 = EXP 0x2 0xa0
0x3ea: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ee: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x3f0: M[V358] = V368
0x3f1: V369 = 0x20
0x3f4: V370 = ADD V358 0x20
0x3f5: M[V370] = V362
0x3f8: V371 = ADD 0x40 V358
0x3f9: M[V371] = 0x0
0x3fb: V372 = M[0x40]
0x3fc: V373 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x420: V374 = SUB V358 V372
0x421: V375 = 0x60
0x423: V376 = ADD 0x60 V374
0x425: LOG V372 V376 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x426: V377 = 0x334
0x429: JUMP 0x334
---
Entry stack: [V10, 0x25e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25e, S0]

================================

Block 0x42a
[0x42a:0x436]
---
Predecessors: [0x3a9]
Successors: [0x25e]
---
0x42a JUMPDEST
0x42b PUSH1 0x7
0x42d DUP1
0x42e SLOAD
0x42f PUSH1 0xff
0x431 NOT
0x432 AND
0x433 SWAP1
0x434 SSTORE
0x435 POP
0x436 JUMP
---
0x42a: JUMPDEST 
0x42b: V378 = 0x7
0x42e: V379 = S[0x7]
0x42f: V380 = 0xff
0x431: V381 = NOT 0xff
0x432: V382 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V379
0x434: S[0x7] = V382
0x436: JUMP 0x25e
---
Entry stack: [V10, 0x25e, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x93
Exit block: 0x25e
Body: 0x93, 0x99, 0xa5, 0xb1, 0x10a, 0x11a, 0x25e

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x11c
Exit block: 0x337
Body: 0x11c, 0x122, 0x337

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x12a
Exit block: 0x349
Body: 0x12a, 0x130, 0x349

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x141
Exit block: 0x349
Body: 0x141, 0x147, 0x349

Function 4:
Public function signature: 0x70a08231
Entry block: 0x158
Exit block: 0x337
Body: 0x158, 0x15e, 0x337

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x175
Exit block: 0x337
Body: 0x175, 0x17b, 0x337

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x183
Exit block: 0x337
Body: 0x183, 0x189, 0x337

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x191
Exit block: 0x337
Body: 0x191, 0x197, 0x337

Function 8:
Public function signature: 0xfd6b7ef8
Entry block: 0x19f
Exit block: 0x25e
Body: 0x19f, 0x1a5, 0x1b4, 0x1c0, 0x1e7, 0x211, 0x25e, 0x334, 0x366, 0x382, 0x38f, 0x3a3, 0x3a9, 0x3d8, 0x42a

Function 9:
Public fallback function
Entry block: 0x77
Exit block: 0x25e
Body: 0x77, 0x8f, 0x25e, 0x260, 0x2a0, 0x2dd, 0x2e7, 0x334

