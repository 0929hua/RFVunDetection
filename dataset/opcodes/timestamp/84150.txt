Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x3d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x3d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3d
0xa: JUMPI 0x3d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x9e]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x41c0e1b5
0x34 EQ
0x35 PUSH2 0x9e
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x41c0e1b5
0x34: V10 = EQ 0x41c0e1b5 V8
0x35: V11 = 0x9e
0x38: JUMPI 0x9e V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x3c]
---
Predecessors: [0xb]
Successors: [0x3d]
---
0x39 PUSH2 0x3d
0x3c JUMP
---
0x39: V12 = 0x3d
0x3c: JUMP 0x3d
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x3d
[0x3d:0x40]
---
Predecessors: [0x0, 0x39]
Successors: [0x41]
---
0x3d JUMPDEST
0x3e PUSH2 0x9c
---
0x3d: JUMPDEST 
0x3e: V13 = 0x9c
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x9c]
Exit stack: [V8, 0x9c]

================================

Block 0x41
[0x41:0x57]
---
Predecessors: [0x3d]
Successors: [0x58, 0x60]
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 PUSH1 0x0
0x46 CALLVALUE
0x47 SWAP2
0x48 POP
0x49 TIMESTAMP
0x4a SWAP1
0x4b POP
0x4c PUSH1 0x0
0x4e PUSH1 0x2
0x50 DUP3
0x51 MOD
0x52 EQ
0x53 ISZERO
0x54 PUSH2 0x60
0x57 JUMPI
---
0x41: JUMPDEST 
0x42: V14 = 0x0
0x44: V15 = 0x0
0x46: V16 = CALLVALUE
0x49: V17 = TIMESTAMP
0x4c: V18 = 0x0
0x4e: V19 = 0x2
0x51: V20 = MOD V17 0x2
0x52: V21 = EQ V20 0x0
0x53: V22 = ISZERO V21
0x54: V23 = 0x60
0x57: JUMPI 0x60 V22
---
Entry stack: [V8, 0x9c]
Stack pops: 0
Stack additions: [V16, V17]
Exit stack: [V8, 0x9c, V16, V17]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x41]
Successors: [0x98]
---
0x58 PUSH2 0x98
0x5b JUMP
---
0x58: V24 = 0x98
0x5b: JUMP 0x98
---
Entry stack: [V8, 0x9c, V16, V17]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x9c, V16, V17]

================================

Block 0x5c
[0x5c:0x5f]
---
Predecessors: []
Successors: [0x97]
---
0x5c PUSH2 0x97
0x5f JUMP
---
0x5c: V25 = 0x97
0x5f: JUMP 0x97
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x60
[0x60:0x96]
---
Predecessors: [0x41]
Successors: [0x97]
---
0x60 JUMPDEST
0x61 CALLER
0x62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77 AND
0x78 PUSH1 0x0
0x7a DUP4
0x7b PUSH1 0x2
0x7d MUL
0x7e PUSH1 0x40
0x80 MLOAD
0x81 DUP1
0x82 SWAP1
0x83 POP
0x84 PUSH1 0x0
0x86 PUSH1 0x40
0x88 MLOAD
0x89 DUP1
0x8a DUP4
0x8b SUB
0x8c DUP2
0x8d DUP6
0x8e DUP9
0x8f DUP9
0x90 CALL
0x91 SWAP4
0x92 POP
0x93 POP
0x94 POP
0x95 POP
0x96 POP
---
0x60: JUMPDEST 
0x61: V26 = CALLER
0x62: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x77: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x78: V29 = 0x0
0x7b: V30 = 0x2
0x7d: V31 = MUL 0x2 V16
0x7e: V32 = 0x40
0x80: V33 = M[0x40]
0x84: V34 = 0x0
0x86: V35 = 0x40
0x88: V36 = M[0x40]
0x8b: V37 = SUB V33 V36
0x90: V38 = CALL 0x0 V28 V31 V36 V37 V36 0x0
---
Entry stack: [V8, 0x9c, V16, V17]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0x9c, V16, V17]

================================

Block 0x97
[0x97:0x97]
---
Predecessors: [0x5c, 0x60]
Successors: [0x98]
---
0x97 JUMPDEST
---
0x97: JUMPDEST 
---
Entry stack: [V8, 0x9c, V16, V17]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x9c, V16, V17]

================================

Block 0x98
[0x98:0x9b]
---
Predecessors: [0x58, 0x97]
Successors: [0x9c]
---
0x98 JUMPDEST
0x99 POP
0x9a POP
0x9b JUMP
---
0x98: JUMPDEST 
0x9b: JUMP 0x9c
---
Entry stack: [V8, 0x9c, V16, V17]
Stack pops: 3
Stack additions: []
Exit stack: [V8]

================================

Block 0x9c
[0x9c:0x9d]
---
Predecessors: [0x98]
Successors: []
---
0x9c JUMPDEST
0x9d STOP
---
0x9c: JUMPDEST 
0x9d: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x9e
[0x9e:0xaa]
---
Predecessors: [0xb]
Successors: [0xad]
---
0x9e JUMPDEST
0x9f PUSH2 0xab
0xa2 PUSH1 0x4
0xa4 DUP1
0xa5 POP
0xa6 POP
0xa7 PUSH2 0xad
0xaa JUMP
---
0x9e: JUMPDEST 
0x9f: V39 = 0xab
0xa2: V40 = 0x4
0xa7: V41 = 0xad
0xaa: JUMP 0xad
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xab]
Exit stack: [V8, 0xab]

================================

Block 0xab
[0xab:0xac]
---
Predecessors: [0x13f]
Successors: []
---
0xab JUMPDEST
0xac STOP
---
0xab: JUMPDEST 
0xac: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xad
[0xad:0x103]
---
Predecessors: [0x9e]
Successors: [0x104, 0x13e]
---
0xad JUMPDEST
0xae PUSH1 0x0
0xb0 PUSH1 0x0
0xb2 SWAP1
0xb3 SLOAD
0xb4 SWAP1
0xb5 PUSH2 0x100
0xb8 EXP
0xb9 SWAP1
0xba DIV
0xbb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd0 AND
0xd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe6 AND
0xe7 CALLER
0xe8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd AND
0xfe EQ
0xff ISZERO
0x100 PUSH2 0x13e
0x103 JUMPI
---
0xad: JUMPDEST 
0xae: V42 = 0x0
0xb0: V43 = 0x0
0xb3: V44 = S[0x0]
0xb5: V45 = 0x100
0xb8: V46 = EXP 0x100 0x0
0xba: V47 = DIV V44 0x1
0xbb: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xd0: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0xd1: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0xe7: V52 = CALLER
0xe8: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xfe: V55 = EQ V54 V51
0xff: V56 = ISZERO V55
0x100: V57 = 0x13e
0x103: JUMPI 0x13e V56
---
Entry stack: [V8, 0xab]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xab]

================================

Block 0x104
[0x104:0x13d]
---
Predecessors: [0xad]
Successors: []
---
0x104 PUSH1 0x0
0x106 PUSH1 0x0
0x108 SWAP1
0x109 SLOAD
0x10a SWAP1
0x10b PUSH2 0x100
0x10e EXP
0x10f SWAP1
0x110 DIV
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 AND
0x127 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13c AND
0x13d SELFDESTRUCT
---
0x104: V58 = 0x0
0x106: V59 = 0x0
0x109: V60 = S[0x0]
0x10b: V61 = 0x100
0x10e: V62 = EXP 0x100 0x0
0x110: V63 = DIV V60 0x1
0x111: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x127: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x13c: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x13d: SELFDESTRUCT V67
---
Entry stack: [V8, 0xab]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xab]

================================

Block 0x13e
[0x13e:0x13e]
---
Predecessors: [0xad]
Successors: [0x13f]
---
0x13e JUMPDEST
---
0x13e: JUMPDEST 
---
Entry stack: [V8, 0xab]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xab]

================================

Block 0x13f
[0x13f:0x140]
---
Predecessors: [0x13e]
Successors: [0xab]
---
0x13f JUMPDEST
0x140 JUMP
---
0x13f: JUMPDEST 
0x140: JUMP 0xab
---
Entry stack: [V8, 0xab]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x9e
Exit block: 0xab
Body: 0x9e, 0xab, 0xad, 0x104, 0x13e, 0x13f

Function 1:
Public fallback function
Entry block: 0x39
Exit block: 0x9c
Body: 0x39, 0x3d, 0x41, 0x58, 0x60, 0x97, 0x98, 0x9c

