Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x9e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x9e
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x9e
0xa: JUMPI 0x9e V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x70f]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x27a3181d
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x70f
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x27a3181d
0x20: V14 = EQ V12 0x27a3181d
0x21: V15 = 0x70f
0x24: JUMPI 0x70f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x734]
---
0x25 DUP1
0x26 PUSH4 0x27ebcf0e
0x2b EQ
0x2c PUSH2 0x734
0x2f JUMPI
---
0x26: V16 = 0x27ebcf0e
0x2b: V17 = EQ 0x27ebcf0e V12
0x2c: V18 = 0x734
0x2f: JUMPI 0x734 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x763]
---
0x30 DUP1
0x31 PUSH4 0x30c74e04
0x36 EQ
0x37 PUSH2 0x763
0x3a JUMPI
---
0x31: V19 = 0x30c74e04
0x36: V20 = EQ 0x30c74e04 V12
0x37: V21 = 0x763
0x3a: JUMPI 0x763 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x78a]
---
0x3b DUP1
0x3c PUSH4 0x519ee19e
0x41 EQ
0x42 PUSH2 0x78a
0x45 JUMPI
---
0x3c: V22 = 0x519ee19e
0x41: V23 = EQ 0x519ee19e V12
0x42: V24 = 0x78a
0x45: JUMPI 0x78a V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x7af]
---
0x46 DUP1
0x47 PUSH4 0x7fa8c158
0x4c EQ
0x4d PUSH2 0x7af
0x50 JUMPI
---
0x47: V25 = 0x7fa8c158
0x4c: V26 = EQ 0x7fa8c158 V12
0x4d: V27 = 0x7af
0x50: JUMPI 0x7af V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x7d4]
---
0x51 DUP1
0x52 PUSH4 0x8da5cb5b
0x57 EQ
0x58 PUSH2 0x7d4
0x5b JUMPI
---
0x52: V28 = 0x8da5cb5b
0x57: V29 = EQ 0x8da5cb5b V12
0x58: V30 = 0x7d4
0x5b: JUMPI 0x7d4 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x803]
---
0x5c DUP1
0x5d PUSH4 0x96c5406d
0x62 EQ
0x63 PUSH2 0x803
0x66 JUMPI
---
0x5d: V31 = 0x96c5406d
0x62: V32 = EQ 0x96c5406d V12
0x63: V33 = 0x803
0x66: JUMPI 0x803 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x828]
---
0x67 DUP1
0x68 PUSH4 0xa035b1fe
0x6d EQ
0x6e PUSH2 0x828
0x71 JUMPI
---
0x68: V34 = 0xa035b1fe
0x6d: V35 = EQ 0xa035b1fe V12
0x6e: V36 = 0x828
0x71: JUMPI 0x828 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x84d]
---
0x72 DUP1
0x73 PUSH4 0xc8e569a8
0x78 EQ
0x79 PUSH2 0x84d
0x7c JUMPI
---
0x73: V37 = 0xc8e569a8
0x78: V38 = EQ 0xc8e569a8 V12
0x79: V39 = 0x84d
0x7c: JUMPI 0x84d V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x872]
---
0x7d DUP1
0x7e PUSH4 0xccb07cef
0x83 EQ
0x84 PUSH2 0x872
0x87 JUMPI
---
0x7e: V40 = 0xccb07cef
0x83: V41 = EQ 0xccb07cef V12
0x84: V42 = 0x872
0x87: JUMPI 0x872 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x899]
---
0x88 DUP1
0x89 PUSH4 0xd778c911
0x8e EQ
0x8f PUSH2 0x899
0x92 JUMPI
---
0x89: V43 = 0xd778c911
0x8e: V44 = EQ 0xd778c911 V12
0x8f: V45 = 0x899
0x92: JUMPI 0x899 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x8be]
---
0x93 DUP1
0x94 PUSH4 0xf9081ba2
0x99 EQ
0x9a PUSH2 0x8be
0x9d JUMPI
---
0x94: V46 = 0xf9081ba2
0x99: V47 = EQ 0xf9081ba2 V12
0x9a: V48 = 0x8be
0x9d: JUMPI 0x8be V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0x9e]
---
Predecessors: [0x0, 0x93]
Successors: [0x9f]
---
0x9e JUMPDEST
---
0x9e: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9f
[0x9f:0xae]
---
Predecessors: [0x9e]
Successors: [0xaf, 0xbe]
---
0x9f JUMPDEST
0xa0 PUSH1 0x0
0xa2 DUP1
0xa3 PUSH1 0x0
0xa5 PUSH1 0x6
0xa7 SLOAD
0xa8 TIMESTAMP
0xa9 GT
0xaa ISZERO
0xab PUSH2 0xbe
0xae JUMPI
---
0x9f: JUMPDEST 
0xa0: V49 = 0x0
0xa3: V50 = 0x0
0xa5: V51 = 0x6
0xa7: V52 = S[0x6]
0xa8: V53 = TIMESTAMP
0xa9: V54 = GT V53 V52
0xaa: V55 = ISZERO V54
0xab: V56 = 0xbe
0xae: JUMPI 0xbe V55
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xaf
[0xaf:0xbd]
---
Predecessors: [0x9f]
Successors: [0xd4]
---
0xaf PUSH7 0xf8b0a10e470000
0xb7 PUSH1 0x7
0xb9 SSTORE
0xba PUSH2 0xd4
0xbd JUMP
---
0xaf: V57 = 0xf8b0a10e470000
0xb7: V58 = 0x7
0xb9: S[0x7] = 0xf8b0a10e470000
0xba: V59 = 0xd4
0xbd: JUMP 0xd4
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xbe
[0xbe:0xc8]
---
Predecessors: [0x9f]
Successors: [0xc9, 0xd4]
---
0xbe JUMPDEST
0xbf PUSH1 0x5
0xc1 SLOAD
0xc2 TIMESTAMP
0xc3 GT
0xc4 ISZERO
0xc5 PUSH2 0xd4
0xc8 JUMPI
---
0xbe: JUMPDEST 
0xbf: V60 = 0x5
0xc1: V61 = S[0x5]
0xc2: V62 = TIMESTAMP
0xc3: V63 = GT V62 V61
0xc4: V64 = ISZERO V63
0xc5: V65 = 0xd4
0xc8: JUMPI 0xd4 V64
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xc9
[0xc9:0xd3]
---
Predecessors: [0xbe]
Successors: [0xd4]
---
0xc9 PUSH7 0x12a6d8e1122000
0xd1 PUSH1 0x7
0xd3 SSTORE
---
0xc9: V66 = 0x12a6d8e1122000
0xd1: V67 = 0x7
0xd3: S[0x7] = 0x12a6d8e1122000
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xd4
[0xd4:0xd4]
---
Predecessors: [0xaf, 0xbe, 0xc9]
Successors: [0xd5]
---
0xd4 JUMPDEST
---
0xd4: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xd5
[0xd5:0x12b]
---
Predecessors: [0xd4]
Successors: [0x12c, 0x130]
---
0xd5 JUMPDEST
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 SLOAD
0xda PUSH1 0x1
0xdc PUSH1 0xa0
0xde PUSH1 0x2
0xe0 EXP
0xe1 SUB
0xe2 AND
0xe3 SWAP1
0xe4 PUSH4 0x70a08231
0xe9 SWAP1
0xea ADDRESS
0xeb SWAP1
0xec PUSH1 0x40
0xee MLOAD
0xef PUSH1 0x20
0xf1 ADD
0xf2 MSTORE
0xf3 PUSH1 0x40
0xf5 MLOAD
0xf6 PUSH1 0xe0
0xf8 PUSH1 0x2
0xfa EXP
0xfb PUSH4 0xffffffff
0x100 DUP5
0x101 AND
0x102 MUL
0x103 DUP2
0x104 MSTORE
0x105 PUSH1 0x1
0x107 PUSH1 0xa0
0x109 PUSH1 0x2
0x10b EXP
0x10c SUB
0x10d SWAP1
0x10e SWAP2
0x10f AND
0x110 PUSH1 0x4
0x112 DUP3
0x113 ADD
0x114 MSTORE
0x115 PUSH1 0x24
0x117 ADD
0x118 PUSH1 0x20
0x11a PUSH1 0x40
0x11c MLOAD
0x11d DUP1
0x11e DUP4
0x11f SUB
0x120 DUP2
0x121 PUSH1 0x0
0x123 DUP8
0x124 DUP1
0x125 EXTCODESIZE
0x126 ISZERO
0x127 ISZERO
0x128 PUSH2 0x130
0x12b JUMPI
---
0xd5: JUMPDEST 
0xd6: V68 = 0x0
0xd9: V69 = S[0x0]
0xda: V70 = 0x1
0xdc: V71 = 0xa0
0xde: V72 = 0x2
0xe0: V73 = EXP 0x2 0xa0
0xe1: V74 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0xe4: V76 = 0x70a08231
0xea: V77 = ADDRESS
0xec: V78 = 0x40
0xee: V79 = M[0x40]
0xef: V80 = 0x20
0xf1: V81 = ADD 0x20 V79
0xf2: M[V81] = 0x0
0xf3: V82 = 0x40
0xf5: V83 = M[0x40]
0xf6: V84 = 0xe0
0xf8: V85 = 0x2
0xfa: V86 = EXP 0x2 0xe0
0xfb: V87 = 0xffffffff
0x101: V88 = AND 0x70a08231 0xffffffff
0x102: V89 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x104: M[V83] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x105: V90 = 0x1
0x107: V91 = 0xa0
0x109: V92 = 0x2
0x10b: V93 = EXP 0x2 0xa0
0x10c: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f: V95 = AND V77 0xffffffffffffffffffffffffffffffffffffffff
0x110: V96 = 0x4
0x113: V97 = ADD V83 0x4
0x114: M[V97] = V95
0x115: V98 = 0x24
0x117: V99 = ADD 0x24 V83
0x118: V100 = 0x20
0x11a: V101 = 0x40
0x11c: V102 = M[0x40]
0x11f: V103 = SUB V99 V102
0x121: V104 = 0x0
0x125: V105 = EXTCODESIZE V75
0x126: V106 = ISZERO V105
0x127: V107 = ISZERO V106
0x128: V108 = 0x130
0x12b: JUMPI 0x130 V107
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V75, 0x70a08231, V99, 0x20, V102, V103, V102, 0x0, V75]
Exit stack: [V12, 0x0, 0x0, 0x0, V75, 0x70a08231, V99, 0x20, V102, V103, V102, 0x0, V75]

================================

Block 0x12c
[0x12c:0x12f]
---
Predecessors: [0xd5]
Successors: []
---
0x12c PUSH1 0x0
0x12e DUP1
0x12f REVERT
---
0x12c: V109 = 0x0
0x12f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V75, 0x70a08231, V99, 0x20, V102, V103, V102, 0x0, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V75, 0x70a08231, V99, 0x20, V102, V103, V102, 0x0, V75]

================================

Block 0x130
[0x130:0x13c]
---
Predecessors: [0xd5]
Successors: [0x13d, 0x141]
---
0x130 JUMPDEST
0x131 PUSH2 0x2c6
0x134 GAS
0x135 SUB
0x136 CALL
0x137 ISZERO
0x138 ISZERO
0x139 PUSH2 0x141
0x13c JUMPI
---
0x130: JUMPDEST 
0x131: V110 = 0x2c6
0x134: V111 = GAS
0x135: V112 = SUB V111 0x2c6
0x136: V113 = CALL V112 V75 0x0 V102 V103 V102 0x20
0x137: V114 = ISZERO V113
0x138: V115 = ISZERO V114
0x139: V116 = 0x141
0x13c: JUMPI 0x141 V115
---
Entry stack: [V12, 0x0, 0x0, 0x0, V75, 0x70a08231, V99, 0x20, V102, V103, V102, 0x0, V75]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V75, 0x70a08231, V99]

================================

Block 0x13d
[0x13d:0x140]
---
Predecessors: [0x130]
Successors: []
---
0x13d PUSH1 0x0
0x13f DUP1
0x140 REVERT
---
0x13d: V117 = 0x0
0x140: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V75, 0x70a08231, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V75, 0x70a08231, V99]

================================

Block 0x141
[0x141:0x157]
---
Predecessors: [0x130]
Successors: [0x158, 0x18e]
---
0x141 JUMPDEST
0x142 POP
0x143 POP
0x144 POP
0x145 PUSH1 0x40
0x147 MLOAD
0x148 DUP1
0x149 MLOAD
0x14a PUSH1 0xa
0x14c SSTORE
0x14d POP
0x14e PUSH1 0x3
0x150 SLOAD
0x151 TIMESTAMP
0x152 LT
0x153 ISZERO
0x154 PUSH2 0x18e
0x157 JUMPI
---
0x141: JUMPDEST 
0x145: V118 = 0x40
0x147: V119 = M[0x40]
0x149: V120 = M[V119]
0x14a: V121 = 0xa
0x14c: S[0xa] = V120
0x14e: V122 = 0x3
0x150: V123 = S[0x3]
0x151: V124 = TIMESTAMP
0x152: V125 = LT V124 V123
0x153: V126 = ISZERO V125
0x154: V127 = 0x18e
0x157: JUMPI 0x18e V126
---
Entry stack: [V12, 0x0, 0x0, 0x0, V75, 0x70a08231, V99]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x158
[0x158:0x184]
---
Predecessors: [0x141]
Successors: [0x185, 0x189]
---
0x158 PUSH1 0x1
0x15a PUSH1 0xa0
0x15c PUSH1 0x2
0x15e EXP
0x15f SUB
0x160 CALLER
0x161 AND
0x162 CALLVALUE
0x163 DUP1
0x164 ISZERO
0x165 PUSH2 0x8fc
0x168 MUL
0x169 SWAP1
0x16a PUSH1 0x40
0x16c MLOAD
0x16d PUSH1 0x0
0x16f PUSH1 0x40
0x171 MLOAD
0x172 DUP1
0x173 DUP4
0x174 SUB
0x175 DUP2
0x176 DUP6
0x177 DUP9
0x178 DUP9
0x179 CALL
0x17a SWAP4
0x17b POP
0x17c POP
0x17d POP
0x17e POP
0x17f ISZERO
0x180 ISZERO
0x181 PUSH2 0x189
0x184 JUMPI
---
0x158: V128 = 0x1
0x15a: V129 = 0xa0
0x15c: V130 = 0x2
0x15e: V131 = EXP 0x2 0xa0
0x15f: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x160: V133 = CALLER
0x161: V134 = AND V133 0xffffffffffffffffffffffffffffffffffffffff
0x162: V135 = CALLVALUE
0x164: V136 = ISZERO V135
0x165: V137 = 0x8fc
0x168: V138 = MUL 0x8fc V136
0x16a: V139 = 0x40
0x16c: V140 = M[0x40]
0x16d: V141 = 0x0
0x16f: V142 = 0x40
0x171: V143 = M[0x40]
0x174: V144 = SUB V140 V143
0x179: V145 = CALL V138 V134 V135 V143 V144 V143 0x0
0x17f: V146 = ISZERO V145
0x180: V147 = ISZERO V146
0x181: V148 = 0x189
0x184: JUMPI 0x189 V147
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x185
[0x185:0x188]
---
Predecessors: [0x158]
Successors: []
---
0x185 PUSH1 0x0
0x187 DUP1
0x188 REVERT
---
0x185: V149 = 0x0
0x188: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x189
[0x189:0x18d]
---
Predecessors: [0x158, 0x1ca, 0x35b, 0x4e4]
Successors: [0x696]
---
0x189 JUMPDEST
0x18a PUSH2 0x696
0x18d JUMP
---
0x189: JUMPDEST 
0x18a: V150 = 0x696
0x18d: JUMP 0x696
---
Entry stack: [V12, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, 0x0]

================================

Block 0x18e
[0x18e:0x198]
---
Predecessors: [0x141]
Successors: [0x199, 0x34f]
---
0x18e JUMPDEST
0x18f PUSH1 0x4
0x191 SLOAD
0x192 TIMESTAMP
0x193 GT
0x194 ISZERO
0x195 PUSH2 0x34f
0x198 JUMPI
---
0x18e: JUMPDEST 
0x18f: V151 = 0x4
0x191: V152 = S[0x4]
0x192: V153 = TIMESTAMP
0x193: V154 = GT V153 V152
0x194: V155 = ISZERO V154
0x195: V156 = 0x34f
0x198: JUMPI 0x34f V155
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x199
[0x199:0x1c5]
---
Predecessors: [0x18e]
Successors: [0x1c6, 0x1ca]
---
0x199 PUSH1 0x1
0x19b PUSH1 0xa0
0x19d PUSH1 0x2
0x19f EXP
0x1a0 SUB
0x1a1 CALLER
0x1a2 AND
0x1a3 CALLVALUE
0x1a4 DUP1
0x1a5 ISZERO
0x1a6 PUSH2 0x8fc
0x1a9 MUL
0x1aa SWAP1
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae PUSH1 0x0
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 DUP4
0x1b5 SUB
0x1b6 DUP2
0x1b7 DUP6
0x1b8 DUP9
0x1b9 DUP9
0x1ba CALL
0x1bb SWAP4
0x1bc POP
0x1bd POP
0x1be POP
0x1bf POP
0x1c0 ISZERO
0x1c1 ISZERO
0x1c2 PUSH2 0x1ca
0x1c5 JUMPI
---
0x199: V157 = 0x1
0x19b: V158 = 0xa0
0x19d: V159 = 0x2
0x19f: V160 = EXP 0x2 0xa0
0x1a0: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a1: V162 = CALLER
0x1a2: V163 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V164 = CALLVALUE
0x1a5: V165 = ISZERO V164
0x1a6: V166 = 0x8fc
0x1a9: V167 = MUL 0x8fc V165
0x1ab: V168 = 0x40
0x1ad: V169 = M[0x40]
0x1ae: V170 = 0x0
0x1b0: V171 = 0x40
0x1b2: V172 = M[0x40]
0x1b5: V173 = SUB V169 V172
0x1ba: V174 = CALL V167 V163 V164 V172 V173 V172 0x0
0x1c0: V175 = ISZERO V174
0x1c1: V176 = ISZERO V175
0x1c2: V177 = 0x1ca
0x1c5: JUMPI 0x1ca V176
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1c6
[0x1c6:0x1c9]
---
Predecessors: [0x199]
Successors: []
---
0x1c6 PUSH1 0x0
0x1c8 DUP1
0x1c9 REVERT
---
0x1c6: V178 = 0x0
0x1c9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1ca
[0x1ca:0x1db]
---
Predecessors: [0x199]
Successors: [0x189, 0x1dc]
---
0x1ca JUMPDEST
0x1cb PUSH1 0xb
0x1cd SLOAD
0x1ce PUSH2 0x100
0x1d1 SWAP1
0x1d2 DIV
0x1d3 PUSH1 0xff
0x1d5 AND
0x1d6 ISZERO
0x1d7 ISZERO
0x1d8 PUSH2 0x189
0x1db JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V179 = 0xb
0x1cd: V180 = S[0xb]
0x1ce: V181 = 0x100
0x1d2: V182 = DIV V180 0x100
0x1d3: V183 = 0xff
0x1d5: V184 = AND 0xff V182
0x1d6: V185 = ISZERO V184
0x1d7: V186 = ISZERO V185
0x1d8: V187 = 0x189
0x1db: JUMPI 0x189 V186
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1dc
[0x1dc:0x242]
---
Predecessors: [0x1ca]
Successors: [0x243, 0x247]
---
0x1dc PUSH1 0x0
0x1de DUP1
0x1df SLOAD
0x1e0 PUSH1 0x2
0x1e2 SLOAD
0x1e3 PUSH1 0x1
0x1e5 PUSH1 0xa0
0x1e7 PUSH1 0x2
0x1e9 EXP
0x1ea SUB
0x1eb SWAP2
0x1ec DUP3
0x1ed AND
0x1ee SWAP3
0x1ef PUSH4 0xa9059cbb
0x1f4 SWAP3
0x1f5 SWAP1
0x1f6 SWAP2
0x1f7 AND
0x1f8 SWAP1
0x1f9 DUP4
0x1fa SWAP1
0x1fb PUSH4 0x70a08231
0x200 SWAP1
0x201 ADDRESS
0x202 SWAP1
0x203 PUSH1 0x40
0x205 MLOAD
0x206 PUSH1 0x20
0x208 ADD
0x209 MSTORE
0x20a PUSH1 0x40
0x20c MLOAD
0x20d PUSH1 0xe0
0x20f PUSH1 0x2
0x211 EXP
0x212 PUSH4 0xffffffff
0x217 DUP5
0x218 AND
0x219 MUL
0x21a DUP2
0x21b MSTORE
0x21c PUSH1 0x1
0x21e PUSH1 0xa0
0x220 PUSH1 0x2
0x222 EXP
0x223 SUB
0x224 SWAP1
0x225 SWAP2
0x226 AND
0x227 PUSH1 0x4
0x229 DUP3
0x22a ADD
0x22b MSTORE
0x22c PUSH1 0x24
0x22e ADD
0x22f PUSH1 0x20
0x231 PUSH1 0x40
0x233 MLOAD
0x234 DUP1
0x235 DUP4
0x236 SUB
0x237 DUP2
0x238 PUSH1 0x0
0x23a DUP8
0x23b DUP1
0x23c EXTCODESIZE
0x23d ISZERO
0x23e ISZERO
0x23f PUSH2 0x247
0x242 JUMPI
---
0x1dc: V188 = 0x0
0x1df: V189 = S[0x0]
0x1e0: V190 = 0x2
0x1e2: V191 = S[0x2]
0x1e3: V192 = 0x1
0x1e5: V193 = 0xa0
0x1e7: V194 = 0x2
0x1e9: V195 = EXP 0x2 0xa0
0x1ea: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ed: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x1ef: V198 = 0xa9059cbb
0x1f7: V199 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x1fb: V200 = 0x70a08231
0x201: V201 = ADDRESS
0x203: V202 = 0x40
0x205: V203 = M[0x40]
0x206: V204 = 0x20
0x208: V205 = ADD 0x20 V203
0x209: M[V205] = 0x0
0x20a: V206 = 0x40
0x20c: V207 = M[0x40]
0x20d: V208 = 0xe0
0x20f: V209 = 0x2
0x211: V210 = EXP 0x2 0xe0
0x212: V211 = 0xffffffff
0x218: V212 = AND 0x70a08231 0xffffffff
0x219: V213 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x21b: M[V207] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x21c: V214 = 0x1
0x21e: V215 = 0xa0
0x220: V216 = 0x2
0x222: V217 = EXP 0x2 0xa0
0x223: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x226: V219 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x227: V220 = 0x4
0x22a: V221 = ADD V207 0x4
0x22b: M[V221] = V219
0x22c: V222 = 0x24
0x22e: V223 = ADD 0x24 V207
0x22f: V224 = 0x20
0x231: V225 = 0x40
0x233: V226 = M[0x40]
0x236: V227 = SUB V223 V226
0x238: V228 = 0x0
0x23c: V229 = EXTCODESIZE V197
0x23d: V230 = ISZERO V229
0x23e: V231 = ISZERO V230
0x23f: V232 = 0x247
0x242: JUMPI 0x247 V231
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V197, 0xa9059cbb, V199, V197, 0x70a08231, V223, 0x20, V226, V227, V226, 0x0, V197]
Exit stack: [V12, 0x0, 0x0, 0x0, V197, 0xa9059cbb, V199, V197, 0x70a08231, V223, 0x20, V226, V227, V226, 0x0, V197]

================================

Block 0x243
[0x243:0x246]
---
Predecessors: [0x1dc]
Successors: []
---
0x243 PUSH1 0x0
0x245 DUP1
0x246 REVERT
---
0x243: V233 = 0x0
0x246: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V197, 0xa9059cbb, V199, V197, 0x70a08231, V223, 0x20, V226, V227, V226, 0x0, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V197, 0xa9059cbb, V199, V197, 0x70a08231, V223, 0x20, V226, V227, V226, 0x0, V197]

================================

Block 0x247
[0x247:0x253]
---
Predecessors: [0x1dc]
Successors: [0x254, 0x258]
---
0x247 JUMPDEST
0x248 PUSH2 0x2c6
0x24b GAS
0x24c SUB
0x24d CALL
0x24e ISZERO
0x24f ISZERO
0x250 PUSH2 0x258
0x253 JUMPI
---
0x247: JUMPDEST 
0x248: V234 = 0x2c6
0x24b: V235 = GAS
0x24c: V236 = SUB V235 0x2c6
0x24d: V237 = CALL V236 V197 0x0 V226 V227 V226 0x20
0x24e: V238 = ISZERO V237
0x24f: V239 = ISZERO V238
0x250: V240 = 0x258
0x253: JUMPI 0x258 V239
---
Entry stack: [V12, 0x0, 0x0, 0x0, V197, 0xa9059cbb, V199, V197, 0x70a08231, V223, 0x20, V226, V227, V226, 0x0, V197]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V197, 0xa9059cbb, V199, V197, 0x70a08231, V223]

================================

Block 0x254
[0x254:0x257]
---
Predecessors: [0x247]
Successors: []
---
0x254 PUSH1 0x0
0x256 DUP1
0x257 REVERT
---
0x254: V241 = 0x0
0x257: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V197, 0xa9059cbb, V199, V197, 0x70a08231, V223]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V197, 0xa9059cbb, V199, V197, 0x70a08231, V223]

================================

Block 0x258
[0x258:0x2a0]
---
Predecessors: [0x247]
Successors: [0x2a1, 0x2a5]
---
0x258 JUMPDEST
0x259 POP
0x25a POP
0x25b POP
0x25c PUSH1 0x40
0x25e MLOAD
0x25f DUP1
0x260 MLOAD
0x261 SWAP1
0x262 POP
0x263 PUSH1 0x40
0x265 MLOAD
0x266 PUSH1 0xe0
0x268 PUSH1 0x2
0x26a EXP
0x26b PUSH4 0xffffffff
0x270 DUP6
0x271 AND
0x272 MUL
0x273 DUP2
0x274 MSTORE
0x275 PUSH1 0x1
0x277 PUSH1 0xa0
0x279 PUSH1 0x2
0x27b EXP
0x27c SUB
0x27d SWAP1
0x27e SWAP3
0x27f AND
0x280 PUSH1 0x4
0x282 DUP4
0x283 ADD
0x284 MSTORE
0x285 PUSH1 0x24
0x287 DUP3
0x288 ADD
0x289 MSTORE
0x28a PUSH1 0x44
0x28c ADD
0x28d PUSH1 0x0
0x28f PUSH1 0x40
0x291 MLOAD
0x292 DUP1
0x293 DUP4
0x294 SUB
0x295 DUP2
0x296 PUSH1 0x0
0x298 DUP8
0x299 DUP1
0x29a EXTCODESIZE
0x29b ISZERO
0x29c ISZERO
0x29d PUSH2 0x2a5
0x2a0 JUMPI
---
0x258: JUMPDEST 
0x25c: V242 = 0x40
0x25e: V243 = M[0x40]
0x260: V244 = M[V243]
0x263: V245 = 0x40
0x265: V246 = M[0x40]
0x266: V247 = 0xe0
0x268: V248 = 0x2
0x26a: V249 = EXP 0x2 0xe0
0x26b: V250 = 0xffffffff
0x271: V251 = AND 0xa9059cbb 0xffffffff
0x272: V252 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x274: M[V246] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x275: V253 = 0x1
0x277: V254 = 0xa0
0x279: V255 = 0x2
0x27b: V256 = EXP 0x2 0xa0
0x27c: V257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27f: V258 = AND V199 0xffffffffffffffffffffffffffffffffffffffff
0x280: V259 = 0x4
0x283: V260 = ADD V246 0x4
0x284: M[V260] = V258
0x285: V261 = 0x24
0x288: V262 = ADD V246 0x24
0x289: M[V262] = V244
0x28a: V263 = 0x44
0x28c: V264 = ADD 0x44 V246
0x28d: V265 = 0x0
0x28f: V266 = 0x40
0x291: V267 = M[0x40]
0x294: V268 = SUB V264 V267
0x296: V269 = 0x0
0x29a: V270 = EXTCODESIZE V197
0x29b: V271 = ISZERO V270
0x29c: V272 = ISZERO V271
0x29d: V273 = 0x2a5
0x2a0: JUMPI 0x2a5 V272
---
Entry stack: [V12, 0x0, 0x0, 0x0, V197, 0xa9059cbb, V199, V197, 0x70a08231, V223]
Stack pops: 6
Stack additions: [S5, S4, V264, 0x0, V267, V268, V267, 0x0, S5]
Exit stack: [V12, 0x0, 0x0, 0x0, V197, 0xa9059cbb, V264, 0x0, V267, V268, V267, 0x0, V197]

================================

Block 0x2a1
[0x2a1:0x2a4]
---
Predecessors: [0x258]
Successors: []
---
0x2a1 PUSH1 0x0
0x2a3 DUP1
0x2a4 REVERT
---
0x2a1: V274 = 0x0
0x2a4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V197, 0xa9059cbb, V264, 0x0, V267, V268, V267, 0x0, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V197, 0xa9059cbb, V264, 0x0, V267, V268, V267, 0x0, V197]

================================

Block 0x2a5
[0x2a5:0x2b1]
---
Predecessors: [0x258]
Successors: [0x2b2, 0x2b6]
---
0x2a5 JUMPDEST
0x2a6 PUSH2 0x2c6
0x2a9 GAS
0x2aa SUB
0x2ab CALL
0x2ac ISZERO
0x2ad ISZERO
0x2ae PUSH2 0x2b6
0x2b1 JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V275 = 0x2c6
0x2a9: V276 = GAS
0x2aa: V277 = SUB V276 0x2c6
0x2ab: V278 = CALL V277 V197 0x0 V267 V268 V267 0x0
0x2ac: V279 = ISZERO V278
0x2ad: V280 = ISZERO V279
0x2ae: V281 = 0x2b6
0x2b1: JUMPI 0x2b6 V280
---
Entry stack: [V12, 0x0, 0x0, 0x0, V197, 0xa9059cbb, V264, 0x0, V267, V268, V267, 0x0, V197]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V197, 0xa9059cbb, V264]

================================

Block 0x2b2
[0x2b2:0x2b5]
---
Predecessors: [0x2a5]
Successors: []
---
0x2b2 PUSH1 0x0
0x2b4 DUP1
0x2b5 REVERT
---
0x2b2: V282 = 0x0
0x2b5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V197, 0xa9059cbb, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V197, 0xa9059cbb, V264]

================================

Block 0x2b6
[0x2b6:0x30f]
---
Predecessors: [0x2a5]
Successors: [0x310, 0x314]
---
0x2b6 JUMPDEST
0x2b7 POP
0x2b8 POP
0x2b9 PUSH1 0x0
0x2bb DUP1
0x2bc SLOAD
0x2bd PUSH1 0x1
0x2bf PUSH1 0xa0
0x2c1 PUSH1 0x2
0x2c3 EXP
0x2c4 SUB
0x2c5 AND
0x2c6 SWAP2
0x2c7 POP
0x2c8 PUSH4 0x70a08231
0x2cd SWAP1
0x2ce ADDRESS
0x2cf SWAP1
0x2d0 PUSH1 0x40
0x2d2 MLOAD
0x2d3 PUSH1 0x20
0x2d5 ADD
0x2d6 MSTORE
0x2d7 PUSH1 0x40
0x2d9 MLOAD
0x2da PUSH1 0xe0
0x2dc PUSH1 0x2
0x2de EXP
0x2df PUSH4 0xffffffff
0x2e4 DUP5
0x2e5 AND
0x2e6 MUL
0x2e7 DUP2
0x2e8 MSTORE
0x2e9 PUSH1 0x1
0x2eb PUSH1 0xa0
0x2ed PUSH1 0x2
0x2ef EXP
0x2f0 SUB
0x2f1 SWAP1
0x2f2 SWAP2
0x2f3 AND
0x2f4 PUSH1 0x4
0x2f6 DUP3
0x2f7 ADD
0x2f8 MSTORE
0x2f9 PUSH1 0x24
0x2fb ADD
0x2fc PUSH1 0x20
0x2fe PUSH1 0x40
0x300 MLOAD
0x301 DUP1
0x302 DUP4
0x303 SUB
0x304 DUP2
0x305 PUSH1 0x0
0x307 DUP8
0x308 DUP1
0x309 EXTCODESIZE
0x30a ISZERO
0x30b ISZERO
0x30c PUSH2 0x314
0x30f JUMPI
---
0x2b6: JUMPDEST 
0x2b9: V283 = 0x0
0x2bc: V284 = S[0x0]
0x2bd: V285 = 0x1
0x2bf: V286 = 0xa0
0x2c1: V287 = 0x2
0x2c3: V288 = EXP 0x2 0xa0
0x2c4: V289 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c5: V290 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x2c8: V291 = 0x70a08231
0x2ce: V292 = ADDRESS
0x2d0: V293 = 0x40
0x2d2: V294 = M[0x40]
0x2d3: V295 = 0x20
0x2d5: V296 = ADD 0x20 V294
0x2d6: M[V296] = 0x0
0x2d7: V297 = 0x40
0x2d9: V298 = M[0x40]
0x2da: V299 = 0xe0
0x2dc: V300 = 0x2
0x2de: V301 = EXP 0x2 0xe0
0x2df: V302 = 0xffffffff
0x2e5: V303 = AND 0x70a08231 0xffffffff
0x2e6: V304 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x2e8: M[V298] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2e9: V305 = 0x1
0x2eb: V306 = 0xa0
0x2ed: V307 = 0x2
0x2ef: V308 = EXP 0x2 0xa0
0x2f0: V309 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f3: V310 = AND V292 0xffffffffffffffffffffffffffffffffffffffff
0x2f4: V311 = 0x4
0x2f7: V312 = ADD V298 0x4
0x2f8: M[V312] = V310
0x2f9: V313 = 0x24
0x2fb: V314 = ADD 0x24 V298
0x2fc: V315 = 0x20
0x2fe: V316 = 0x40
0x300: V317 = M[0x40]
0x303: V318 = SUB V314 V317
0x305: V319 = 0x0
0x309: V320 = EXTCODESIZE V290
0x30a: V321 = ISZERO V320
0x30b: V322 = ISZERO V321
0x30c: V323 = 0x314
0x30f: JUMPI 0x314 V322
---
Entry stack: [V12, 0x0, 0x0, 0x0, V197, 0xa9059cbb, V264]
Stack pops: 3
Stack additions: [V290, 0x70a08231, V314, 0x20, V317, V318, V317, 0x0, V290]
Exit stack: [V12, 0x0, 0x0, 0x0, V290, 0x70a08231, V314, 0x20, V317, V318, V317, 0x0, V290]

================================

Block 0x310
[0x310:0x313]
---
Predecessors: [0x2b6]
Successors: []
---
0x310 PUSH1 0x0
0x312 DUP1
0x313 REVERT
---
0x310: V324 = 0x0
0x313: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V290, 0x70a08231, V314, 0x20, V317, V318, V317, 0x0, V290]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V290, 0x70a08231, V314, 0x20, V317, V318, V317, 0x0, V290]

================================

Block 0x314
[0x314:0x320]
---
Predecessors: [0x2b6]
Successors: [0x321, 0x325]
---
0x314 JUMPDEST
0x315 PUSH2 0x2c6
0x318 GAS
0x319 SUB
0x31a CALL
0x31b ISZERO
0x31c ISZERO
0x31d PUSH2 0x325
0x320 JUMPI
---
0x314: JUMPDEST 
0x315: V325 = 0x2c6
0x318: V326 = GAS
0x319: V327 = SUB V326 0x2c6
0x31a: V328 = CALL V327 V290 0x0 V317 V318 V317 0x20
0x31b: V329 = ISZERO V328
0x31c: V330 = ISZERO V329
0x31d: V331 = 0x325
0x320: JUMPI 0x325 V330
---
Entry stack: [V12, 0x0, 0x0, 0x0, V290, 0x70a08231, V314, 0x20, V317, V318, V317, 0x0, V290]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V290, 0x70a08231, V314]

================================

Block 0x321
[0x321:0x324]
---
Predecessors: [0x314]
Successors: []
---
0x321 PUSH1 0x0
0x323 DUP1
0x324 REVERT
---
0x321: V332 = 0x0
0x324: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V290, 0x70a08231, V314]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V290, 0x70a08231, V314]

================================

Block 0x325
[0x325:0x349]
---
Predecessors: [0x314]
Successors: [0x34a]
---
0x325 JUMPDEST
0x326 POP
0x327 POP
0x328 POP
0x329 PUSH1 0x40
0x32b MLOAD
0x32c DUP1
0x32d MLOAD
0x32e PUSH1 0xa
0x330 SSTORE
0x331 POP
0x332 PUSH1 0xb
0x334 DUP1
0x335 SLOAD
0x336 PUSH1 0xff
0x338 NOT
0x339 PUSH2 0xff00
0x33c NOT
0x33d SWAP1
0x33e SWAP2
0x33f AND
0x340 PUSH2 0x100
0x343 OR
0x344 AND
0x345 PUSH1 0x1
0x347 OR
0x348 SWAP1
0x349 SSTORE
---
0x325: JUMPDEST 
0x329: V333 = 0x40
0x32b: V334 = M[0x40]
0x32d: V335 = M[V334]
0x32e: V336 = 0xa
0x330: S[0xa] = V335
0x332: V337 = 0xb
0x335: V338 = S[0xb]
0x336: V339 = 0xff
0x338: V340 = NOT 0xff
0x339: V341 = 0xff00
0x33c: V342 = NOT 0xff00
0x33f: V343 = AND V338 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff
0x340: V344 = 0x100
0x343: V345 = OR 0x100 V343
0x344: V346 = AND V345 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x345: V347 = 0x1
0x347: V348 = OR 0x1 V346
0x349: S[0xb] = V348
---
Entry stack: [V12, 0x0, 0x0, 0x0, V290, 0x70a08231, V314]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x34a
[0x34a:0x34e]
---
Predecessors: [0x325]
Successors: [0x696]
---
0x34a JUMPDEST
0x34b PUSH2 0x696
0x34e JUMP
---
0x34a: JUMPDEST 
0x34b: V349 = 0x696
0x34e: JUMP 0x696
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x34f
[0x34f:0x35a]
---
Predecessors: [0x18e]
Successors: [0x35b, 0x391]
---
0x34f JUMPDEST
0x350 PUSH1 0xb
0x352 SLOAD
0x353 PUSH1 0xff
0x355 AND
0x356 ISZERO
0x357 PUSH2 0x391
0x35a JUMPI
---
0x34f: JUMPDEST 
0x350: V350 = 0xb
0x352: V351 = S[0xb]
0x353: V352 = 0xff
0x355: V353 = AND 0xff V351
0x356: V354 = ISZERO V353
0x357: V355 = 0x391
0x35a: JUMPI 0x391 V354
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x35b
[0x35b:0x387]
---
Predecessors: [0x34f]
Successors: [0x189, 0x388]
---
0x35b PUSH1 0x1
0x35d PUSH1 0xa0
0x35f PUSH1 0x2
0x361 EXP
0x362 SUB
0x363 CALLER
0x364 AND
0x365 CALLVALUE
0x366 DUP1
0x367 ISZERO
0x368 PUSH2 0x8fc
0x36b MUL
0x36c SWAP1
0x36d PUSH1 0x40
0x36f MLOAD
0x370 PUSH1 0x0
0x372 PUSH1 0x40
0x374 MLOAD
0x375 DUP1
0x376 DUP4
0x377 SUB
0x378 DUP2
0x379 DUP6
0x37a DUP9
0x37b DUP9
0x37c CALL
0x37d SWAP4
0x37e POP
0x37f POP
0x380 POP
0x381 POP
0x382 ISZERO
0x383 ISZERO
0x384 PUSH2 0x189
0x387 JUMPI
---
0x35b: V356 = 0x1
0x35d: V357 = 0xa0
0x35f: V358 = 0x2
0x361: V359 = EXP 0x2 0xa0
0x362: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x363: V361 = CALLER
0x364: V362 = AND V361 0xffffffffffffffffffffffffffffffffffffffff
0x365: V363 = CALLVALUE
0x367: V364 = ISZERO V363
0x368: V365 = 0x8fc
0x36b: V366 = MUL 0x8fc V364
0x36d: V367 = 0x40
0x36f: V368 = M[0x40]
0x370: V369 = 0x0
0x372: V370 = 0x40
0x374: V371 = M[0x40]
0x377: V372 = SUB V368 V371
0x37c: V373 = CALL V366 V362 V363 V371 V372 V371 0x0
0x382: V374 = ISZERO V373
0x383: V375 = ISZERO V374
0x384: V376 = 0x189
0x387: JUMPI 0x189 V375
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x388
[0x388:0x38b]
---
Predecessors: [0x35b]
Successors: []
---
0x388 PUSH1 0x0
0x38a DUP1
0x38b REVERT
---
0x388: V377 = 0x0
0x38b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x38c
[0x38c:0x390]
---
Predecessors: []
Successors: [0x696]
---
0x38c JUMPDEST
0x38d PUSH2 0x696
0x390 JUMP
---
0x38c: JUMPDEST 
0x38d: V378 = 0x696
0x390: JUMP 0x696
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x391
[0x391:0x39f]
---
Predecessors: [0x34f]
Successors: [0x3a0, 0x3a1]
---
0x391 JUMPDEST
0x392 PUSH1 0x8
0x394 SLOAD
0x395 PUSH1 0x7
0x397 SLOAD
0x398 CALLVALUE
0x399 DUP2
0x39a ISZERO
0x39b ISZERO
0x39c PUSH2 0x3a1
0x39f JUMPI
---
0x391: JUMPDEST 
0x392: V379 = 0x8
0x394: V380 = S[0x8]
0x395: V381 = 0x7
0x397: V382 = S[0x7]
0x398: V383 = CALLVALUE
0x39a: V384 = ISZERO V382
0x39b: V385 = ISZERO V384
0x39c: V386 = 0x3a1
0x39f: JUMPI 0x3a1 V385
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V380, V382, V383]
Exit stack: [V12, 0x0, 0x0, 0x0, V380, V382, V383]

================================

Block 0x3a0
[0x3a0:0x3a0]
---
Predecessors: [0x391]
Successors: []
---
0x3a0 INVALID
---
0x3a0: INVALID 
---
Entry stack: [V12, 0x0, 0x0, 0x0, V380, V382, V383]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V380, V382, V383]

================================

Block 0x3a1
[0x3a1:0x3ad]
---
Predecessors: [0x391]
Successors: [0x3ae, 0x3df]
---
0x3a1 JUMPDEST
0x3a2 DIV
0x3a3 MUL
0x3a4 SWAP3
0x3a5 POP
0x3a6 PUSH1 0x0
0x3a8 DUP4
0x3a9 GT
0x3aa PUSH2 0x3df
0x3ad JUMPI
---
0x3a1: JUMPDEST 
0x3a2: V387 = DIV V383 V382
0x3a3: V388 = MUL V387 V380
0x3a6: V389 = 0x0
0x3a9: V390 = GT V388 0x0
0x3aa: V391 = 0x3df
0x3ad: JUMPI 0x3df V390
---
Entry stack: [V12, 0x0, 0x0, 0x0, V380, V382, V383]
Stack pops: 6
Stack additions: [V388, S4, S3]
Exit stack: [V12, V388, 0x0, 0x0]

================================

Block 0x3ae
[0x3ae:0x3da]
---
Predecessors: [0x3a1]
Successors: [0x3db, 0x3df]
---
0x3ae PUSH1 0x1
0x3b0 PUSH1 0xa0
0x3b2 PUSH1 0x2
0x3b4 EXP
0x3b5 SUB
0x3b6 CALLER
0x3b7 AND
0x3b8 CALLVALUE
0x3b9 DUP1
0x3ba ISZERO
0x3bb PUSH2 0x8fc
0x3be MUL
0x3bf SWAP1
0x3c0 PUSH1 0x40
0x3c2 MLOAD
0x3c3 PUSH1 0x0
0x3c5 PUSH1 0x40
0x3c7 MLOAD
0x3c8 DUP1
0x3c9 DUP4
0x3ca SUB
0x3cb DUP2
0x3cc DUP6
0x3cd DUP9
0x3ce DUP9
0x3cf CALL
0x3d0 SWAP4
0x3d1 POP
0x3d2 POP
0x3d3 POP
0x3d4 POP
0x3d5 ISZERO
0x3d6 ISZERO
0x3d7 PUSH2 0x3df
0x3da JUMPI
---
0x3ae: V392 = 0x1
0x3b0: V393 = 0xa0
0x3b2: V394 = 0x2
0x3b4: V395 = EXP 0x2 0xa0
0x3b5: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b6: V397 = CALLER
0x3b7: V398 = AND V397 0xffffffffffffffffffffffffffffffffffffffff
0x3b8: V399 = CALLVALUE
0x3ba: V400 = ISZERO V399
0x3bb: V401 = 0x8fc
0x3be: V402 = MUL 0x8fc V400
0x3c0: V403 = 0x40
0x3c2: V404 = M[0x40]
0x3c3: V405 = 0x0
0x3c5: V406 = 0x40
0x3c7: V407 = M[0x40]
0x3ca: V408 = SUB V404 V407
0x3cf: V409 = CALL V402 V398 V399 V407 V408 V407 0x0
0x3d5: V410 = ISZERO V409
0x3d6: V411 = ISZERO V410
0x3d7: V412 = 0x3df
0x3da: JUMPI 0x3df V411
---
Entry stack: [V12, V388, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, 0x0, 0x0]

================================

Block 0x3db
[0x3db:0x3de]
---
Predecessors: [0x3ae]
Successors: []
---
0x3db PUSH1 0x0
0x3dd DUP1
0x3de REVERT
---
0x3db: V413 = 0x0
0x3de: REVERT 0x0 0x0
---
Entry stack: [V12, V388, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, 0x0, 0x0]

================================

Block 0x3df
[0x3df:0x3df]
---
Predecessors: [0x3a1, 0x3ae]
Successors: [0x3e0]
---
0x3df JUMPDEST
---
0x3df: JUMPDEST 
---
Entry stack: [V12, V388, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, 0x0, 0x0]

================================

Block 0x3e0
[0x3e0:0x3e8]
---
Predecessors: [0x3df]
Successors: [0x3e9, 0x3ed]
---
0x3e0 JUMPDEST
0x3e1 PUSH1 0x0
0x3e3 DUP4
0x3e4 GT
0x3e5 PUSH2 0x3ed
0x3e8 JUMPI
---
0x3e0: JUMPDEST 
0x3e1: V414 = 0x0
0x3e4: V415 = GT V388 0x0
0x3e5: V416 = 0x3ed
0x3e8: JUMPI 0x3ed V415
---
Entry stack: [V12, V388, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, V388, 0x0, 0x0]

================================

Block 0x3e9
[0x3e9:0x3ec]
---
Predecessors: [0x3e0]
Successors: []
---
0x3e9 PUSH1 0x0
0x3eb DUP1
0x3ec REVERT
---
0x3e9: V417 = 0x0
0x3ec: REVERT 0x0 0x0
---
Entry stack: [V12, V388, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, 0x0, 0x0]

================================

Block 0x3ed
[0x3ed:0x3fc]
---
Predecessors: [0x3e0]
Successors: [0x3fd, 0x3fe]
---
0x3ed JUMPDEST
0x3ee PUSH1 0x8
0x3f0 SLOAD
0x3f1 PUSH1 0x7
0x3f3 SLOAD
0x3f4 DUP5
0x3f5 MUL
0x3f6 DUP2
0x3f7 ISZERO
0x3f8 ISZERO
0x3f9 PUSH2 0x3fe
0x3fc JUMPI
---
0x3ed: JUMPDEST 
0x3ee: V418 = 0x8
0x3f0: V419 = S[0x8]
0x3f1: V420 = 0x7
0x3f3: V421 = S[0x7]
0x3f5: V422 = MUL V388 V421
0x3f7: V423 = ISZERO V419
0x3f8: V424 = ISZERO V423
0x3f9: V425 = 0x3fe
0x3fc: JUMPI 0x3fe V424
---
Entry stack: [V12, V388, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V419, V422]
Exit stack: [V12, V388, 0x0, 0x0, V419, V422]

================================

Block 0x3fd
[0x3fd:0x3fd]
---
Predecessors: [0x3ed]
Successors: []
---
0x3fd INVALID
---
0x3fd: INVALID 
---
Entry stack: [V12, V388, 0x0, 0x0, V419, V422]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, 0x0, 0x0, V419, V422]

================================

Block 0x3fe
[0x3fe:0x40c]
---
Predecessors: [0x3ed]
Successors: [0x40d, 0x513]
---
0x3fe JUMPDEST
0x3ff DIV
0x400 SWAP2
0x401 POP
0x402 DUP3
0x403 PUSH1 0xa
0x405 SLOAD
0x406 LT
0x407 ISZERO
0x408 ISZERO
0x409 PUSH2 0x513
0x40c JUMPI
---
0x3fe: JUMPDEST 
0x3ff: V426 = DIV V422 V419
0x403: V427 = 0xa
0x405: V428 = S[0xa]
0x406: V429 = LT V428 V388
0x407: V430 = ISZERO V429
0x408: V431 = ISZERO V430
0x409: V432 = 0x513
0x40c: JUMPI 0x513 V431
---
Entry stack: [V12, V388, 0x0, 0x0, V419, V422]
Stack pops: 5
Stack additions: [S4, V426, S2]
Exit stack: [V12, V388, V426, 0x0]

================================

Block 0x40d
[0x40d:0x43a]
---
Predecessors: [0x3fe]
Successors: [0x43b, 0x43f]
---
0x40d PUSH1 0x1
0x40f SLOAD
0x410 PUSH1 0x1
0x412 PUSH1 0xa0
0x414 PUSH1 0x2
0x416 EXP
0x417 SUB
0x418 AND
0x419 DUP3
0x41a ISZERO
0x41b PUSH2 0x8fc
0x41e MUL
0x41f DUP4
0x420 PUSH1 0x40
0x422 MLOAD
0x423 PUSH1 0x0
0x425 PUSH1 0x40
0x427 MLOAD
0x428 DUP1
0x429 DUP4
0x42a SUB
0x42b DUP2
0x42c DUP6
0x42d DUP9
0x42e DUP9
0x42f CALL
0x430 SWAP4
0x431 POP
0x432 POP
0x433 POP
0x434 POP
0x435 ISZERO
0x436 ISZERO
0x437 PUSH2 0x43f
0x43a JUMPI
---
0x40d: V433 = 0x1
0x40f: V434 = S[0x1]
0x410: V435 = 0x1
0x412: V436 = 0xa0
0x414: V437 = 0x2
0x416: V438 = EXP 0x2 0xa0
0x417: V439 = SUB 0x10000000000000000000000000000000000000000 0x1
0x418: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff V434
0x41a: V441 = ISZERO V426
0x41b: V442 = 0x8fc
0x41e: V443 = MUL 0x8fc V441
0x420: V444 = 0x40
0x422: V445 = M[0x40]
0x423: V446 = 0x0
0x425: V447 = 0x40
0x427: V448 = M[0x40]
0x42a: V449 = SUB V445 V448
0x42f: V450 = CALL V443 V440 V426 V448 V449 V448 0x0
0x435: V451 = ISZERO V450
0x436: V452 = ISZERO V451
0x437: V453 = 0x43f
0x43a: JUMPI 0x43f V452
---
Entry stack: [V12, V388, V426, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V388, V426, 0x0]

================================

Block 0x43b
[0x43b:0x43e]
---
Predecessors: [0x40d]
Successors: []
---
0x43b PUSH1 0x0
0x43d DUP1
0x43e REVERT
---
0x43b: V454 = 0x0
0x43e: REVERT 0x0 0x0
---
Entry stack: [V12, V388, V426, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, V426, 0x0]

================================

Block 0x43f
[0x43f:0x447]
---
Predecessors: [0x40d]
Successors: [0x448, 0x47c]
---
0x43f JUMPDEST
0x440 DUP2
0x441 CALLVALUE
0x442 GT
0x443 ISZERO
0x444 PUSH2 0x47c
0x447 JUMPI
---
0x43f: JUMPDEST 
0x441: V455 = CALLVALUE
0x442: V456 = GT V455 V426
0x443: V457 = ISZERO V456
0x444: V458 = 0x47c
0x447: JUMPI 0x47c V457
---
Entry stack: [V12, V388, V426, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V388, V426, 0x0]

================================

Block 0x448
[0x448:0x477]
---
Predecessors: [0x43f]
Successors: [0x478, 0x47c]
---
0x448 CALLER
0x449 PUSH1 0x1
0x44b PUSH1 0xa0
0x44d PUSH1 0x2
0x44f EXP
0x450 SUB
0x451 AND
0x452 PUSH2 0x8fc
0x455 DUP4
0x456 CALLVALUE
0x457 SUB
0x458 SWAP1
0x459 DUP2
0x45a ISZERO
0x45b MUL
0x45c SWAP1
0x45d PUSH1 0x40
0x45f MLOAD
0x460 PUSH1 0x0
0x462 PUSH1 0x40
0x464 MLOAD
0x465 DUP1
0x466 DUP4
0x467 SUB
0x468 DUP2
0x469 DUP6
0x46a DUP9
0x46b DUP9
0x46c CALL
0x46d SWAP4
0x46e POP
0x46f POP
0x470 POP
0x471 POP
0x472 ISZERO
0x473 ISZERO
0x474 PUSH2 0x47c
0x477 JUMPI
---
0x448: V459 = CALLER
0x449: V460 = 0x1
0x44b: V461 = 0xa0
0x44d: V462 = 0x2
0x44f: V463 = EXP 0x2 0xa0
0x450: V464 = SUB 0x10000000000000000000000000000000000000000 0x1
0x451: V465 = AND 0xffffffffffffffffffffffffffffffffffffffff V459
0x452: V466 = 0x8fc
0x456: V467 = CALLVALUE
0x457: V468 = SUB V467 V426
0x45a: V469 = ISZERO V468
0x45b: V470 = MUL V469 0x8fc
0x45d: V471 = 0x40
0x45f: V472 = M[0x40]
0x460: V473 = 0x0
0x462: V474 = 0x40
0x464: V475 = M[0x40]
0x467: V476 = SUB V472 V475
0x46c: V477 = CALL V470 V465 V468 V475 V476 V475 0x0
0x472: V478 = ISZERO V477
0x473: V479 = ISZERO V478
0x474: V480 = 0x47c
0x477: JUMPI 0x47c V479
---
Entry stack: [V12, V388, V426, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V388, V426, 0x0]

================================

Block 0x478
[0x478:0x47b]
---
Predecessors: [0x448]
Successors: []
---
0x478 PUSH1 0x0
0x47a DUP1
0x47b REVERT
---
0x478: V481 = 0x0
0x47b: REVERT 0x0 0x0
---
Entry stack: [V12, V388, V426, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, V426, 0x0]

================================

Block 0x47c
[0x47c:0x47c]
---
Predecessors: [0x43f, 0x448]
Successors: [0x47d]
---
0x47c JUMPDEST
---
0x47c: JUMPDEST 
---
Entry stack: [V12, V388, V426, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, V426, 0x0]

================================

Block 0x47d
[0x47d:0x4ce]
---
Predecessors: [0x47c]
Successors: [0x4cf, 0x4d3]
---
0x47d JUMPDEST
0x47e PUSH1 0x0
0x480 SLOAD
0x481 PUSH1 0x1
0x483 PUSH1 0xa0
0x485 PUSH1 0x2
0x487 EXP
0x488 SUB
0x489 AND
0x48a PUSH4 0xa9059cbb
0x48f CALLER
0x490 DUP6
0x491 PUSH1 0x40
0x493 MLOAD
0x494 PUSH1 0xe0
0x496 PUSH1 0x2
0x498 EXP
0x499 PUSH4 0xffffffff
0x49e DUP6
0x49f AND
0x4a0 MUL
0x4a1 DUP2
0x4a2 MSTORE
0x4a3 PUSH1 0x1
0x4a5 PUSH1 0xa0
0x4a7 PUSH1 0x2
0x4a9 EXP
0x4aa SUB
0x4ab SWAP1
0x4ac SWAP3
0x4ad AND
0x4ae PUSH1 0x4
0x4b0 DUP4
0x4b1 ADD
0x4b2 MSTORE
0x4b3 PUSH1 0x24
0x4b5 DUP3
0x4b6 ADD
0x4b7 MSTORE
0x4b8 PUSH1 0x44
0x4ba ADD
0x4bb PUSH1 0x0
0x4bd PUSH1 0x40
0x4bf MLOAD
0x4c0 DUP1
0x4c1 DUP4
0x4c2 SUB
0x4c3 DUP2
0x4c4 PUSH1 0x0
0x4c6 DUP8
0x4c7 DUP1
0x4c8 EXTCODESIZE
0x4c9 ISZERO
0x4ca ISZERO
0x4cb PUSH2 0x4d3
0x4ce JUMPI
---
0x47d: JUMPDEST 
0x47e: V482 = 0x0
0x480: V483 = S[0x0]
0x481: V484 = 0x1
0x483: V485 = 0xa0
0x485: V486 = 0x2
0x487: V487 = EXP 0x2 0xa0
0x488: V488 = SUB 0x10000000000000000000000000000000000000000 0x1
0x489: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x48a: V490 = 0xa9059cbb
0x48f: V491 = CALLER
0x491: V492 = 0x40
0x493: V493 = M[0x40]
0x494: V494 = 0xe0
0x496: V495 = 0x2
0x498: V496 = EXP 0x2 0xe0
0x499: V497 = 0xffffffff
0x49f: V498 = AND 0xa9059cbb 0xffffffff
0x4a0: V499 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x4a2: M[V493] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4a3: V500 = 0x1
0x4a5: V501 = 0xa0
0x4a7: V502 = 0x2
0x4a9: V503 = EXP 0x2 0xa0
0x4aa: V504 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ad: V505 = AND V491 0xffffffffffffffffffffffffffffffffffffffff
0x4ae: V506 = 0x4
0x4b1: V507 = ADD V493 0x4
0x4b2: M[V507] = V505
0x4b3: V508 = 0x24
0x4b6: V509 = ADD V493 0x24
0x4b7: M[V509] = V388
0x4b8: V510 = 0x44
0x4ba: V511 = ADD 0x44 V493
0x4bb: V512 = 0x0
0x4bd: V513 = 0x40
0x4bf: V514 = M[0x40]
0x4c2: V515 = SUB V511 V514
0x4c4: V516 = 0x0
0x4c8: V517 = EXTCODESIZE V489
0x4c9: V518 = ISZERO V517
0x4ca: V519 = ISZERO V518
0x4cb: V520 = 0x4d3
0x4ce: JUMPI 0x4d3 V519
---
Entry stack: [V12, V388, V426, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V489, 0xa9059cbb, V511, 0x0, V514, V515, V514, 0x0, V489]
Exit stack: [V12, V388, V426, 0x0, V489, 0xa9059cbb, V511, 0x0, V514, V515, V514, 0x0, V489]

================================

Block 0x4cf
[0x4cf:0x4d2]
---
Predecessors: [0x47d]
Successors: []
---
0x4cf PUSH1 0x0
0x4d1 DUP1
0x4d2 REVERT
---
0x4cf: V521 = 0x0
0x4d2: REVERT 0x0 0x0
---
Entry stack: [V12, V388, V426, 0x0, V489, 0xa9059cbb, V511, 0x0, V514, V515, V514, 0x0, V489]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, V426, 0x0, V489, 0xa9059cbb, V511, 0x0, V514, V515, V514, 0x0, V489]

================================

Block 0x4d3
[0x4d3:0x4df]
---
Predecessors: [0x47d]
Successors: [0x4e0, 0x4e4]
---
0x4d3 JUMPDEST
0x4d4 PUSH2 0x2c6
0x4d7 GAS
0x4d8 SUB
0x4d9 CALL
0x4da ISZERO
0x4db ISZERO
0x4dc PUSH2 0x4e4
0x4df JUMPI
---
0x4d3: JUMPDEST 
0x4d4: V522 = 0x2c6
0x4d7: V523 = GAS
0x4d8: V524 = SUB V523 0x2c6
0x4d9: V525 = CALL V524 V489 0x0 V514 V515 V514 0x0
0x4da: V526 = ISZERO V525
0x4db: V527 = ISZERO V526
0x4dc: V528 = 0x4e4
0x4df: JUMPI 0x4e4 V527
---
Entry stack: [V12, V388, V426, 0x0, V489, 0xa9059cbb, V511, 0x0, V514, V515, V514, 0x0, V489]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V388, V426, 0x0, V489, 0xa9059cbb, V511]

================================

Block 0x4e0
[0x4e0:0x4e3]
---
Predecessors: [0x4d3]
Successors: []
---
0x4e0 PUSH1 0x0
0x4e2 DUP1
0x4e3 REVERT
---
0x4e0: V529 = 0x0
0x4e3: REVERT 0x0 0x0
---
Entry stack: [V12, V388, V426, 0x0, V489, 0xa9059cbb, V511]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, V426, 0x0, V489, 0xa9059cbb, V511]

================================

Block 0x4e4
[0x4e4:0x500]
---
Predecessors: [0x4d3]
Successors: [0x189, 0x501]
---
0x4e4 JUMPDEST
0x4e5 POP
0x4e6 POP
0x4e7 PUSH1 0x9
0x4e9 DUP1
0x4ea SLOAD
0x4eb DUP6
0x4ec ADD
0x4ed SWAP1
0x4ee SSTORE
0x4ef POP
0x4f0 PUSH1 0xa
0x4f2 DUP1
0x4f3 SLOAD
0x4f4 DUP5
0x4f5 SWAP1
0x4f6 SUB
0x4f7 SWAP1
0x4f8 DUP2
0x4f9 SWAP1
0x4fa SSTORE
0x4fb ISZERO
0x4fc ISZERO
0x4fd PUSH2 0x189
0x500 JUMPI
---
0x4e4: JUMPDEST 
0x4e7: V530 = 0x9
0x4ea: V531 = S[0x9]
0x4ec: V532 = ADD V388 V531
0x4ee: S[0x9] = V532
0x4f0: V533 = 0xa
0x4f3: V534 = S[0xa]
0x4f6: V535 = SUB V534 V388
0x4fa: S[0xa] = V535
0x4fb: V536 = ISZERO V535
0x4fc: V537 = ISZERO V536
0x4fd: V538 = 0x189
0x500: JUMPI 0x189 V537
---
Entry stack: [V12, V388, V426, 0x0, V489, 0xa9059cbb, V511]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, V388, V426, 0x0]

================================

Block 0x501
[0x501:0x50d]
---
Predecessors: [0x4e4]
Successors: [0x50e]
---
0x501 PUSH1 0xb
0x503 DUP1
0x504 SLOAD
0x505 PUSH1 0xff
0x507 NOT
0x508 AND
0x509 PUSH1 0x1
0x50b OR
0x50c SWAP1
0x50d SSTORE
---
0x501: V539 = 0xb
0x504: V540 = S[0xb]
0x505: V541 = 0xff
0x507: V542 = NOT 0xff
0x508: V543 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V540
0x509: V544 = 0x1
0x50b: V545 = OR 0x1 V543
0x50d: S[0xb] = V545
---
Entry stack: [V12, V388, V426, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, V426, 0x0]

================================

Block 0x50e
[0x50e:0x512]
---
Predecessors: [0x501]
Successors: [0x696]
---
0x50e JUMPDEST
0x50f PUSH2 0x696
0x512 JUMP
---
0x50e: JUMPDEST 
0x50f: V546 = 0x696
0x512: JUMP 0x696
---
Entry stack: [V12, V388, V426, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, V426, 0x0]

================================

Block 0x513
[0x513:0x524]
---
Predecessors: [0x3fe]
Successors: [0x525, 0x526]
---
0x513 JUMPDEST
0x514 PUSH1 0x8
0x516 SLOAD
0x517 PUSH1 0x7
0x519 SLOAD
0x51a PUSH1 0xa
0x51c SLOAD
0x51d MUL
0x51e DUP2
0x51f ISZERO
0x520 ISZERO
0x521 PUSH2 0x526
0x524 JUMPI
---
0x513: JUMPDEST 
0x514: V547 = 0x8
0x516: V548 = S[0x8]
0x517: V549 = 0x7
0x519: V550 = S[0x7]
0x51a: V551 = 0xa
0x51c: V552 = S[0xa]
0x51d: V553 = MUL V552 V550
0x51f: V554 = ISZERO V548
0x520: V555 = ISZERO V554
0x521: V556 = 0x526
0x524: JUMPI 0x526 V555
---
Entry stack: [V12, V388, V426, 0x0]
Stack pops: 0
Stack additions: [V548, V553]
Exit stack: [V12, V388, V426, 0x0, V548, V553]

================================

Block 0x525
[0x525:0x525]
---
Predecessors: [0x513]
Successors: []
---
0x525 INVALID
---
0x525: INVALID 
---
Entry stack: [V12, V388, V426, 0x0, V548, V553]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, V426, 0x0, V548, V553]

================================

Block 0x526
[0x526:0x559]
---
Predecessors: [0x513]
Successors: [0x55a, 0x55e]
---
0x526 JUMPDEST
0x527 PUSH1 0x1
0x529 SLOAD
0x52a SWAP2
0x52b SWAP1
0x52c DIV
0x52d SWAP2
0x52e POP
0x52f PUSH1 0x1
0x531 PUSH1 0xa0
0x533 PUSH1 0x2
0x535 EXP
0x536 SUB
0x537 AND
0x538 DUP2
0x539 ISZERO
0x53a PUSH2 0x8fc
0x53d MUL
0x53e DUP3
0x53f PUSH1 0x40
0x541 MLOAD
0x542 PUSH1 0x0
0x544 PUSH1 0x40
0x546 MLOAD
0x547 DUP1
0x548 DUP4
0x549 SUB
0x54a DUP2
0x54b DUP6
0x54c DUP9
0x54d DUP9
0x54e CALL
0x54f SWAP4
0x550 POP
0x551 POP
0x552 POP
0x553 POP
0x554 ISZERO
0x555 ISZERO
0x556 PUSH2 0x55e
0x559 JUMPI
---
0x526: JUMPDEST 
0x527: V557 = 0x1
0x529: V558 = S[0x1]
0x52c: V559 = DIV V553 V548
0x52f: V560 = 0x1
0x531: V561 = 0xa0
0x533: V562 = 0x2
0x535: V563 = EXP 0x2 0xa0
0x536: V564 = SUB 0x10000000000000000000000000000000000000000 0x1
0x537: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V558
0x539: V566 = ISZERO V559
0x53a: V567 = 0x8fc
0x53d: V568 = MUL 0x8fc V566
0x53f: V569 = 0x40
0x541: V570 = M[0x40]
0x542: V571 = 0x0
0x544: V572 = 0x40
0x546: V573 = M[0x40]
0x549: V574 = SUB V570 V573
0x54e: V575 = CALL V568 V565 V559 V573 V574 V573 0x0
0x554: V576 = ISZERO V575
0x555: V577 = ISZERO V576
0x556: V578 = 0x55e
0x559: JUMPI 0x55e V577
---
Entry stack: [V12, V388, V426, 0x0, V548, V553]
Stack pops: 3
Stack additions: [V559]
Exit stack: [V12, V388, V426, V559]

================================

Block 0x55a
[0x55a:0x55d]
---
Predecessors: [0x526]
Successors: []
---
0x55a PUSH1 0x0
0x55c DUP1
0x55d REVERT
---
0x55a: V579 = 0x0
0x55d: REVERT 0x0 0x0
---
Entry stack: [V12, V388, V426, V559]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, V426, V559]

================================

Block 0x55e
[0x55e:0x5b6]
---
Predecessors: [0x526]
Successors: [0x5b7, 0x5bb]
---
0x55e JUMPDEST
0x55f PUSH1 0x0
0x561 SLOAD
0x562 PUSH1 0xa
0x564 SLOAD
0x565 PUSH1 0x1
0x567 PUSH1 0xa0
0x569 PUSH1 0x2
0x56b EXP
0x56c SUB
0x56d SWAP1
0x56e SWAP2
0x56f AND
0x570 SWAP1
0x571 PUSH4 0xa9059cbb
0x576 SWAP1
0x577 CALLER
0x578 SWAP1
0x579 PUSH1 0x40
0x57b MLOAD
0x57c PUSH1 0xe0
0x57e PUSH1 0x2
0x580 EXP
0x581 PUSH4 0xffffffff
0x586 DUP6
0x587 AND
0x588 MUL
0x589 DUP2
0x58a MSTORE
0x58b PUSH1 0x1
0x58d PUSH1 0xa0
0x58f PUSH1 0x2
0x591 EXP
0x592 SUB
0x593 SWAP1
0x594 SWAP3
0x595 AND
0x596 PUSH1 0x4
0x598 DUP4
0x599 ADD
0x59a MSTORE
0x59b PUSH1 0x24
0x59d DUP3
0x59e ADD
0x59f MSTORE
0x5a0 PUSH1 0x44
0x5a2 ADD
0x5a3 PUSH1 0x0
0x5a5 PUSH1 0x40
0x5a7 MLOAD
0x5a8 DUP1
0x5a9 DUP4
0x5aa SUB
0x5ab DUP2
0x5ac PUSH1 0x0
0x5ae DUP8
0x5af DUP1
0x5b0 EXTCODESIZE
0x5b1 ISZERO
0x5b2 ISZERO
0x5b3 PUSH2 0x5bb
0x5b6 JUMPI
---
0x55e: JUMPDEST 
0x55f: V580 = 0x0
0x561: V581 = S[0x0]
0x562: V582 = 0xa
0x564: V583 = S[0xa]
0x565: V584 = 0x1
0x567: V585 = 0xa0
0x569: V586 = 0x2
0x56b: V587 = EXP 0x2 0xa0
0x56c: V588 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56f: V589 = AND V581 0xffffffffffffffffffffffffffffffffffffffff
0x571: V590 = 0xa9059cbb
0x577: V591 = CALLER
0x579: V592 = 0x40
0x57b: V593 = M[0x40]
0x57c: V594 = 0xe0
0x57e: V595 = 0x2
0x580: V596 = EXP 0x2 0xe0
0x581: V597 = 0xffffffff
0x587: V598 = AND 0xa9059cbb 0xffffffff
0x588: V599 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x58a: M[V593] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x58b: V600 = 0x1
0x58d: V601 = 0xa0
0x58f: V602 = 0x2
0x591: V603 = EXP 0x2 0xa0
0x592: V604 = SUB 0x10000000000000000000000000000000000000000 0x1
0x595: V605 = AND V591 0xffffffffffffffffffffffffffffffffffffffff
0x596: V606 = 0x4
0x599: V607 = ADD V593 0x4
0x59a: M[V607] = V605
0x59b: V608 = 0x24
0x59e: V609 = ADD V593 0x24
0x59f: M[V609] = V583
0x5a0: V610 = 0x44
0x5a2: V611 = ADD 0x44 V593
0x5a3: V612 = 0x0
0x5a5: V613 = 0x40
0x5a7: V614 = M[0x40]
0x5aa: V615 = SUB V611 V614
0x5ac: V616 = 0x0
0x5b0: V617 = EXTCODESIZE V589
0x5b1: V618 = ISZERO V617
0x5b2: V619 = ISZERO V618
0x5b3: V620 = 0x5bb
0x5b6: JUMPI 0x5bb V619
---
Entry stack: [V12, V388, V426, V559]
Stack pops: 0
Stack additions: [V589, 0xa9059cbb, V611, 0x0, V614, V615, V614, 0x0, V589]
Exit stack: [V12, V388, V426, V559, V589, 0xa9059cbb, V611, 0x0, V614, V615, V614, 0x0, V589]

================================

Block 0x5b7
[0x5b7:0x5ba]
---
Predecessors: [0x55e]
Successors: []
---
0x5b7 PUSH1 0x0
0x5b9 DUP1
0x5ba REVERT
---
0x5b7: V621 = 0x0
0x5ba: REVERT 0x0 0x0
---
Entry stack: [V12, V388, V426, V559, V589, 0xa9059cbb, V611, 0x0, V614, V615, V614, 0x0, V589]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, V426, V559, V589, 0xa9059cbb, V611, 0x0, V614, V615, V614, 0x0, V589]

================================

Block 0x5bb
[0x5bb:0x5c7]
---
Predecessors: [0x55e]
Successors: [0x5c8, 0x5cc]
---
0x5bb JUMPDEST
0x5bc PUSH2 0x2c6
0x5bf GAS
0x5c0 SUB
0x5c1 CALL
0x5c2 ISZERO
0x5c3 ISZERO
0x5c4 PUSH2 0x5cc
0x5c7 JUMPI
---
0x5bb: JUMPDEST 
0x5bc: V622 = 0x2c6
0x5bf: V623 = GAS
0x5c0: V624 = SUB V623 0x2c6
0x5c1: V625 = CALL V624 V589 0x0 V614 V615 V614 0x0
0x5c2: V626 = ISZERO V625
0x5c3: V627 = ISZERO V626
0x5c4: V628 = 0x5cc
0x5c7: JUMPI 0x5cc V627
---
Entry stack: [V12, V388, V426, V559, V589, 0xa9059cbb, V611, 0x0, V614, V615, V614, 0x0, V589]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V388, V426, V559, V589, 0xa9059cbb, V611]

================================

Block 0x5c8
[0x5c8:0x5cb]
---
Predecessors: [0x5bb]
Successors: []
---
0x5c8 PUSH1 0x0
0x5ca DUP1
0x5cb REVERT
---
0x5c8: V629 = 0x0
0x5cb: REVERT 0x0 0x0
---
Entry stack: [V12, V388, V426, V559, V589, 0xa9059cbb, V611]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, V426, V559, V589, 0xa9059cbb, V611]

================================

Block 0x5cc
[0x5cc:0x5ff]
---
Predecessors: [0x5bb]
Successors: [0x600, 0x604]
---
0x5cc JUMPDEST
0x5cd POP
0x5ce POP
0x5cf POP
0x5d0 CALLER
0x5d1 PUSH1 0x1
0x5d3 PUSH1 0xa0
0x5d5 PUSH1 0x2
0x5d7 EXP
0x5d8 SUB
0x5d9 AND
0x5da PUSH2 0x8fc
0x5dd DUP3
0x5de CALLVALUE
0x5df SUB
0x5e0 SWAP1
0x5e1 DUP2
0x5e2 ISZERO
0x5e3 MUL
0x5e4 SWAP1
0x5e5 PUSH1 0x40
0x5e7 MLOAD
0x5e8 PUSH1 0x0
0x5ea PUSH1 0x40
0x5ec MLOAD
0x5ed DUP1
0x5ee DUP4
0x5ef SUB
0x5f0 DUP2
0x5f1 DUP6
0x5f2 DUP9
0x5f3 DUP9
0x5f4 CALL
0x5f5 SWAP4
0x5f6 POP
0x5f7 POP
0x5f8 POP
0x5f9 POP
0x5fa ISZERO
0x5fb ISZERO
0x5fc PUSH2 0x604
0x5ff JUMPI
---
0x5cc: JUMPDEST 
0x5d0: V630 = CALLER
0x5d1: V631 = 0x1
0x5d3: V632 = 0xa0
0x5d5: V633 = 0x2
0x5d7: V634 = EXP 0x2 0xa0
0x5d8: V635 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d9: V636 = AND 0xffffffffffffffffffffffffffffffffffffffff V630
0x5da: V637 = 0x8fc
0x5de: V638 = CALLVALUE
0x5df: V639 = SUB V638 V559
0x5e2: V640 = ISZERO V639
0x5e3: V641 = MUL V640 0x8fc
0x5e5: V642 = 0x40
0x5e7: V643 = M[0x40]
0x5e8: V644 = 0x0
0x5ea: V645 = 0x40
0x5ec: V646 = M[0x40]
0x5ef: V647 = SUB V643 V646
0x5f4: V648 = CALL V641 V636 V639 V646 V647 V646 0x0
0x5fa: V649 = ISZERO V648
0x5fb: V650 = ISZERO V649
0x5fc: V651 = 0x604
0x5ff: JUMPI 0x604 V650
---
Entry stack: [V12, V388, V426, V559, V589, 0xa9059cbb, V611]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V388, V426, V559]

================================

Block 0x600
[0x600:0x603]
---
Predecessors: [0x5cc]
Successors: []
---
0x600 PUSH1 0x0
0x602 DUP1
0x603 REVERT
---
0x600: V652 = 0x0
0x603: REVERT 0x0 0x0
---
Entry stack: [V12, V388, V426, V559]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, V426, V559]

================================

Block 0x604
[0x604:0x666]
---
Predecessors: [0x5cc]
Successors: [0x667, 0x66b]
---
0x604 JUMPDEST
0x605 PUSH1 0xa
0x607 SLOAD
0x608 PUSH1 0x9
0x60a DUP1
0x60b SLOAD
0x60c SWAP1
0x60d SWAP2
0x60e ADD
0x60f SWAP1
0x610 SSTORE
0x611 PUSH1 0x0
0x613 DUP1
0x614 SLOAD
0x615 PUSH1 0x1
0x617 PUSH1 0xa0
0x619 PUSH1 0x2
0x61b EXP
0x61c SUB
0x61d AND
0x61e SWAP1
0x61f PUSH4 0x70a08231
0x624 SWAP1
0x625 ADDRESS
0x626 SWAP1
0x627 PUSH1 0x40
0x629 MLOAD
0x62a PUSH1 0x20
0x62c ADD
0x62d MSTORE
0x62e PUSH1 0x40
0x630 MLOAD
0x631 PUSH1 0xe0
0x633 PUSH1 0x2
0x635 EXP
0x636 PUSH4 0xffffffff
0x63b DUP5
0x63c AND
0x63d MUL
0x63e DUP2
0x63f MSTORE
0x640 PUSH1 0x1
0x642 PUSH1 0xa0
0x644 PUSH1 0x2
0x646 EXP
0x647 SUB
0x648 SWAP1
0x649 SWAP2
0x64a AND
0x64b PUSH1 0x4
0x64d DUP3
0x64e ADD
0x64f MSTORE
0x650 PUSH1 0x24
0x652 ADD
0x653 PUSH1 0x20
0x655 PUSH1 0x40
0x657 MLOAD
0x658 DUP1
0x659 DUP4
0x65a SUB
0x65b DUP2
0x65c PUSH1 0x0
0x65e DUP8
0x65f DUP1
0x660 EXTCODESIZE
0x661 ISZERO
0x662 ISZERO
0x663 PUSH2 0x66b
0x666 JUMPI
---
0x604: JUMPDEST 
0x605: V653 = 0xa
0x607: V654 = S[0xa]
0x608: V655 = 0x9
0x60b: V656 = S[0x9]
0x60e: V657 = ADD V654 V656
0x610: S[0x9] = V657
0x611: V658 = 0x0
0x614: V659 = S[0x0]
0x615: V660 = 0x1
0x617: V661 = 0xa0
0x619: V662 = 0x2
0x61b: V663 = EXP 0x2 0xa0
0x61c: V664 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61d: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff V659
0x61f: V666 = 0x70a08231
0x625: V667 = ADDRESS
0x627: V668 = 0x40
0x629: V669 = M[0x40]
0x62a: V670 = 0x20
0x62c: V671 = ADD 0x20 V669
0x62d: M[V671] = 0x0
0x62e: V672 = 0x40
0x630: V673 = M[0x40]
0x631: V674 = 0xe0
0x633: V675 = 0x2
0x635: V676 = EXP 0x2 0xe0
0x636: V677 = 0xffffffff
0x63c: V678 = AND 0x70a08231 0xffffffff
0x63d: V679 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x63f: M[V673] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x640: V680 = 0x1
0x642: V681 = 0xa0
0x644: V682 = 0x2
0x646: V683 = EXP 0x2 0xa0
0x647: V684 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64a: V685 = AND V667 0xffffffffffffffffffffffffffffffffffffffff
0x64b: V686 = 0x4
0x64e: V687 = ADD V673 0x4
0x64f: M[V687] = V685
0x650: V688 = 0x24
0x652: V689 = ADD 0x24 V673
0x653: V690 = 0x20
0x655: V691 = 0x40
0x657: V692 = M[0x40]
0x65a: V693 = SUB V689 V692
0x65c: V694 = 0x0
0x660: V695 = EXTCODESIZE V665
0x661: V696 = ISZERO V695
0x662: V697 = ISZERO V696
0x663: V698 = 0x66b
0x666: JUMPI 0x66b V697
---
Entry stack: [V12, V388, V426, V559]
Stack pops: 0
Stack additions: [V665, 0x70a08231, V689, 0x20, V692, V693, V692, 0x0, V665]
Exit stack: [V12, V388, V426, V559, V665, 0x70a08231, V689, 0x20, V692, V693, V692, 0x0, V665]

================================

Block 0x667
[0x667:0x66a]
---
Predecessors: [0x604]
Successors: []
---
0x667 PUSH1 0x0
0x669 DUP1
0x66a REVERT
---
0x667: V699 = 0x0
0x66a: REVERT 0x0 0x0
---
Entry stack: [V12, V388, V426, V559, V665, 0x70a08231, V689, 0x20, V692, V693, V692, 0x0, V665]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, V426, V559, V665, 0x70a08231, V689, 0x20, V692, V693, V692, 0x0, V665]

================================

Block 0x66b
[0x66b:0x677]
---
Predecessors: [0x604]
Successors: [0x678, 0x67c]
---
0x66b JUMPDEST
0x66c PUSH2 0x2c6
0x66f GAS
0x670 SUB
0x671 CALL
0x672 ISZERO
0x673 ISZERO
0x674 PUSH2 0x67c
0x677 JUMPI
---
0x66b: JUMPDEST 
0x66c: V700 = 0x2c6
0x66f: V701 = GAS
0x670: V702 = SUB V701 0x2c6
0x671: V703 = CALL V702 V665 0x0 V692 V693 V692 0x20
0x672: V704 = ISZERO V703
0x673: V705 = ISZERO V704
0x674: V706 = 0x67c
0x677: JUMPI 0x67c V705
---
Entry stack: [V12, V388, V426, V559, V665, 0x70a08231, V689, 0x20, V692, V693, V692, 0x0, V665]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V388, V426, V559, V665, 0x70a08231, V689]

================================

Block 0x678
[0x678:0x67b]
---
Predecessors: [0x66b]
Successors: []
---
0x678 PUSH1 0x0
0x67a DUP1
0x67b REVERT
---
0x678: V707 = 0x0
0x67b: REVERT 0x0 0x0
---
Entry stack: [V12, V388, V426, V559, V665, 0x70a08231, V689]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V388, V426, V559, V665, 0x70a08231, V689]

================================

Block 0x67c
[0x67c:0x695]
---
Predecessors: [0x66b]
Successors: [0x696]
---
0x67c JUMPDEST
0x67d POP
0x67e POP
0x67f POP
0x680 PUSH1 0x40
0x682 MLOAD
0x683 DUP1
0x684 MLOAD
0x685 PUSH1 0xa
0x687 SSTORE
0x688 POP
0x689 PUSH1 0xb
0x68b DUP1
0x68c SLOAD
0x68d PUSH1 0xff
0x68f NOT
0x690 AND
0x691 PUSH1 0x1
0x693 OR
0x694 SWAP1
0x695 SSTORE
---
0x67c: JUMPDEST 
0x680: V708 = 0x40
0x682: V709 = M[0x40]
0x684: V710 = M[V709]
0x685: V711 = 0xa
0x687: S[0xa] = V710
0x689: V712 = 0xb
0x68c: V713 = S[0xb]
0x68d: V714 = 0xff
0x68f: V715 = NOT 0xff
0x690: V716 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V713
0x691: V717 = 0x1
0x693: V718 = OR 0x1 V716
0x695: S[0xb] = V718
---
Entry stack: [V12, V388, V426, V559, V665, 0x70a08231, V689]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V388, V426, V559]

================================

Block 0x696
[0x696:0x696]
---
Predecessors: [0x189, 0x34a, 0x38c, 0x50e, 0x67c]
Successors: [0x697]
---
0x696 JUMPDEST
---
0x696: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x697
[0x697:0x697]
---
Predecessors: [0x696]
Successors: [0x698]
---
0x697 JUMPDEST
---
0x697: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x698
[0x698:0x698]
---
Predecessors: [0x697]
Successors: [0x699]
---
0x698 JUMPDEST
---
0x698: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x699
[0x699:0x709]
---
Predecessors: [0x698]
Successors: [0x70a]
---
0x699 JUMPDEST
0x69a PUSH32 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6bb PUSH1 0xa
0x6bd SLOAD
0x6be PUSH1 0x40
0x6c0 MLOAD
0x6c1 SWAP1
0x6c2 DUP2
0x6c3 MSTORE
0x6c4 PUSH1 0x20
0x6c6 ADD
0x6c7 PUSH1 0x40
0x6c9 MLOAD
0x6ca DUP1
0x6cb SWAP2
0x6cc SUB
0x6cd SWAP1
0x6ce LOG1
0x6cf PUSH1 0xb
0x6d1 SLOAD
0x6d2 PUSH32 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x6f3 SWAP1
0x6f4 PUSH1 0xff
0x6f6 AND
0x6f7 PUSH1 0x40
0x6f9 MLOAD
0x6fa SWAP1
0x6fb ISZERO
0x6fc ISZERO
0x6fd DUP2
0x6fe MSTORE
0x6ff PUSH1 0x20
0x701 ADD
0x702 PUSH1 0x40
0x704 MLOAD
0x705 DUP1
0x706 SWAP2
0x707 SUB
0x708 SWAP1
0x709 LOG1
---
0x699: JUMPDEST 
0x69a: V719 = 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6bb: V720 = 0xa
0x6bd: V721 = S[0xa]
0x6be: V722 = 0x40
0x6c0: V723 = M[0x40]
0x6c3: M[V723] = V721
0x6c4: V724 = 0x20
0x6c6: V725 = ADD 0x20 V723
0x6c7: V726 = 0x40
0x6c9: V727 = M[0x40]
0x6cc: V728 = SUB V725 V727
0x6ce: LOG V727 V728 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x6cf: V729 = 0xb
0x6d1: V730 = S[0xb]
0x6d2: V731 = 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x6f4: V732 = 0xff
0x6f6: V733 = AND 0xff V730
0x6f7: V734 = 0x40
0x6f9: V735 = M[0x40]
0x6fb: V736 = ISZERO V733
0x6fc: V737 = ISZERO V736
0x6fe: M[V735] = V737
0x6ff: V738 = 0x20
0x701: V739 = ADD 0x20 V735
0x702: V740 = 0x40
0x704: V741 = M[0x40]
0x707: V742 = SUB V739 V741
0x709: LOG V741 V742 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x70a
[0x70a:0x70e]
---
Predecessors: [0x699]
Successors: []
---
0x70a JUMPDEST
0x70b POP
0x70c POP
0x70d POP
0x70e STOP
---
0x70a: JUMPDEST 
0x70e: STOP 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x70f
[0x70f:0x715]
---
Predecessors: [0xb]
Successors: [0x716, 0x71a]
---
0x70f JUMPDEST
0x710 CALLVALUE
0x711 ISZERO
0x712 PUSH2 0x71a
0x715 JUMPI
---
0x70f: JUMPDEST 
0x710: V743 = CALLVALUE
0x711: V744 = ISZERO V743
0x712: V745 = 0x71a
0x715: JUMPI 0x71a V744
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x716
[0x716:0x719]
---
Predecessors: [0x70f]
Successors: []
---
0x716 PUSH1 0x0
0x718 DUP1
0x719 REVERT
---
0x716: V746 = 0x0
0x719: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x71a
[0x71a:0x721]
---
Predecessors: [0x70f]
Successors: [0x8ed]
---
0x71a JUMPDEST
0x71b PUSH2 0x722
0x71e PUSH2 0x8ed
0x721 JUMP
---
0x71a: JUMPDEST 
0x71b: V747 = 0x722
0x71e: V748 = 0x8ed
0x721: JUMP 0x8ed
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x722]
Exit stack: [V12, 0x722]

================================

Block 0x722
[0x722:0x733]
---
Predecessors: [0x8ed, 0x910, 0x916, 0x92b, 0x931, 0x937, 0x946]
Successors: []
---
0x722 JUMPDEST
0x723 PUSH1 0x40
0x725 MLOAD
0x726 SWAP1
0x727 DUP2
0x728 MSTORE
0x729 PUSH1 0x20
0x72b ADD
0x72c PUSH1 0x40
0x72e MLOAD
0x72f DUP1
0x730 SWAP2
0x731 SUB
0x732 SWAP1
0x733 RETURN
---
0x722: JUMPDEST 
0x723: V749 = 0x40
0x725: V750 = M[0x40]
0x728: M[V750] = S0
0x729: V751 = 0x20
0x72b: V752 = ADD 0x20 V750
0x72c: V753 = 0x40
0x72e: V754 = M[0x40]
0x731: V755 = SUB V752 V754
0x733: RETURN V754 V755
---
Entry stack: [V12, 0x722, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x722]

================================

Block 0x734
[0x734:0x73a]
---
Predecessors: [0x25]
Successors: [0x73b, 0x73f]
---
0x734 JUMPDEST
0x735 CALLVALUE
0x736 ISZERO
0x737 PUSH2 0x73f
0x73a JUMPI
---
0x734: JUMPDEST 
0x735: V756 = CALLVALUE
0x736: V757 = ISZERO V756
0x737: V758 = 0x73f
0x73a: JUMPI 0x73f V757
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x73b
[0x73b:0x73e]
---
Predecessors: [0x734]
Successors: []
---
0x73b PUSH1 0x0
0x73d DUP1
0x73e REVERT
---
0x73b: V759 = 0x0
0x73e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x73f
[0x73f:0x746]
---
Predecessors: [0x734]
Successors: [0x8f3]
---
0x73f JUMPDEST
0x740 PUSH2 0x747
0x743 PUSH2 0x8f3
0x746 JUMP
---
0x73f: JUMPDEST 
0x740: V760 = 0x747
0x743: V761 = 0x8f3
0x746: JUMP 0x8f3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x747]
Exit stack: [V12, 0x747]

================================

Block 0x747
[0x747:0x762]
---
Predecessors: [0x8f3, 0x91c, 0x94c]
Successors: []
---
0x747 JUMPDEST
0x748 PUSH1 0x40
0x74a MLOAD
0x74b PUSH1 0x1
0x74d PUSH1 0xa0
0x74f PUSH1 0x2
0x751 EXP
0x752 SUB
0x753 SWAP1
0x754 SWAP2
0x755 AND
0x756 DUP2
0x757 MSTORE
0x758 PUSH1 0x20
0x75a ADD
0x75b PUSH1 0x40
0x75d MLOAD
0x75e DUP1
0x75f SWAP2
0x760 SUB
0x761 SWAP1
0x762 RETURN
---
0x747: JUMPDEST 
0x748: V762 = 0x40
0x74a: V763 = M[0x40]
0x74b: V764 = 0x1
0x74d: V765 = 0xa0
0x74f: V766 = 0x2
0x751: V767 = EXP 0x2 0xa0
0x752: V768 = SUB 0x10000000000000000000000000000000000000000 0x1
0x755: V769 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x757: M[V763] = V769
0x758: V770 = 0x20
0x75a: V771 = ADD 0x20 V763
0x75b: V772 = 0x40
0x75d: V773 = M[0x40]
0x760: V774 = SUB V771 V773
0x762: RETURN V773 V774
---
Entry stack: [V12, 0x747, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x747]

================================

Block 0x763
[0x763:0x769]
---
Predecessors: [0x30]
Successors: [0x76a, 0x76e]
---
0x763 JUMPDEST
0x764 CALLVALUE
0x765 ISZERO
0x766 PUSH2 0x76e
0x769 JUMPI
---
0x763: JUMPDEST 
0x764: V775 = CALLVALUE
0x765: V776 = ISZERO V775
0x766: V777 = 0x76e
0x769: JUMPI 0x76e V776
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x76a
[0x76a:0x76d]
---
Predecessors: [0x763]
Successors: []
---
0x76a PUSH1 0x0
0x76c DUP1
0x76d REVERT
---
0x76a: V778 = 0x0
0x76d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x76e
[0x76e:0x775]
---
Predecessors: [0x763]
Successors: [0x902]
---
0x76e JUMPDEST
0x76f PUSH2 0x776
0x772 PUSH2 0x902
0x775 JUMP
---
0x76e: JUMPDEST 
0x76f: V779 = 0x776
0x772: V780 = 0x902
0x775: JUMP 0x902
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x776]
Exit stack: [V12, 0x776]

================================

Block 0x776
[0x776:0x789]
---
Predecessors: [0x902, 0x93d]
Successors: []
---
0x776 JUMPDEST
0x777 PUSH1 0x40
0x779 MLOAD
0x77a SWAP1
0x77b ISZERO
0x77c ISZERO
0x77d DUP2
0x77e MSTORE
0x77f PUSH1 0x20
0x781 ADD
0x782 PUSH1 0x40
0x784 MLOAD
0x785 DUP1
0x786 SWAP2
0x787 SUB
0x788 SWAP1
0x789 RETURN
---
0x776: JUMPDEST 
0x777: V781 = 0x40
0x779: V782 = M[0x40]
0x77b: V783 = ISZERO S0
0x77c: V784 = ISZERO V783
0x77e: M[V782] = V784
0x77f: V785 = 0x20
0x781: V786 = ADD 0x20 V782
0x782: V787 = 0x40
0x784: V788 = M[0x40]
0x787: V789 = SUB V786 V788
0x789: RETURN V788 V789
---
Entry stack: [V12, 0x776, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x776]

================================

Block 0x78a
[0x78a:0x790]
---
Predecessors: [0x3b]
Successors: [0x791, 0x795]
---
0x78a JUMPDEST
0x78b CALLVALUE
0x78c ISZERO
0x78d PUSH2 0x795
0x790 JUMPI
---
0x78a: JUMPDEST 
0x78b: V790 = CALLVALUE
0x78c: V791 = ISZERO V790
0x78d: V792 = 0x795
0x790: JUMPI 0x795 V791
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x791
[0x791:0x794]
---
Predecessors: [0x78a]
Successors: []
---
0x791 PUSH1 0x0
0x793 DUP1
0x794 REVERT
---
0x791: V793 = 0x0
0x794: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x795
[0x795:0x79c]
---
Predecessors: [0x78a]
Successors: [0x910]
---
0x795 JUMPDEST
0x796 PUSH2 0x722
0x799 PUSH2 0x910
0x79c JUMP
---
0x795: JUMPDEST 
0x796: V794 = 0x722
0x799: V795 = 0x910
0x79c: JUMP 0x910
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x722]
Exit stack: [V12, 0x722]

================================

Block 0x79d
[0x79d:0x7ae]
---
Predecessors: []
Successors: []
---
0x79d JUMPDEST
0x79e PUSH1 0x40
0x7a0 MLOAD
0x7a1 SWAP1
0x7a2 DUP2
0x7a3 MSTORE
0x7a4 PUSH1 0x20
0x7a6 ADD
0x7a7 PUSH1 0x40
0x7a9 MLOAD
0x7aa DUP1
0x7ab SWAP2
0x7ac SUB
0x7ad SWAP1
0x7ae RETURN
---
0x79d: JUMPDEST 
0x79e: V796 = 0x40
0x7a0: V797 = M[0x40]
0x7a3: M[V797] = S0
0x7a4: V798 = 0x20
0x7a6: V799 = ADD 0x20 V797
0x7a7: V800 = 0x40
0x7a9: V801 = M[0x40]
0x7ac: V802 = SUB V799 V801
0x7ae: RETURN V801 V802
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7af
[0x7af:0x7b5]
---
Predecessors: [0x46]
Successors: [0x7b6, 0x7ba]
---
0x7af JUMPDEST
0x7b0 CALLVALUE
0x7b1 ISZERO
0x7b2 PUSH2 0x7ba
0x7b5 JUMPI
---
0x7af: JUMPDEST 
0x7b0: V803 = CALLVALUE
0x7b1: V804 = ISZERO V803
0x7b2: V805 = 0x7ba
0x7b5: JUMPI 0x7ba V804
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b6
[0x7b6:0x7b9]
---
Predecessors: [0x7af]
Successors: []
---
0x7b6 PUSH1 0x0
0x7b8 DUP1
0x7b9 REVERT
---
0x7b6: V806 = 0x0
0x7b9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7ba
[0x7ba:0x7c1]
---
Predecessors: [0x7af]
Successors: [0x916]
---
0x7ba JUMPDEST
0x7bb PUSH2 0x722
0x7be PUSH2 0x916
0x7c1 JUMP
---
0x7ba: JUMPDEST 
0x7bb: V807 = 0x722
0x7be: V808 = 0x916
0x7c1: JUMP 0x916
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x722]
Exit stack: [V12, 0x722]

================================

Block 0x7c2
[0x7c2:0x7d3]
---
Predecessors: []
Successors: []
---
0x7c2 JUMPDEST
0x7c3 PUSH1 0x40
0x7c5 MLOAD
0x7c6 SWAP1
0x7c7 DUP2
0x7c8 MSTORE
0x7c9 PUSH1 0x20
0x7cb ADD
0x7cc PUSH1 0x40
0x7ce MLOAD
0x7cf DUP1
0x7d0 SWAP2
0x7d1 SUB
0x7d2 SWAP1
0x7d3 RETURN
---
0x7c2: JUMPDEST 
0x7c3: V809 = 0x40
0x7c5: V810 = M[0x40]
0x7c8: M[V810] = S0
0x7c9: V811 = 0x20
0x7cb: V812 = ADD 0x20 V810
0x7cc: V813 = 0x40
0x7ce: V814 = M[0x40]
0x7d1: V815 = SUB V812 V814
0x7d3: RETURN V814 V815
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7d4
[0x7d4:0x7da]
---
Predecessors: [0x51]
Successors: [0x7db, 0x7df]
---
0x7d4 JUMPDEST
0x7d5 CALLVALUE
0x7d6 ISZERO
0x7d7 PUSH2 0x7df
0x7da JUMPI
---
0x7d4: JUMPDEST 
0x7d5: V816 = CALLVALUE
0x7d6: V817 = ISZERO V816
0x7d7: V818 = 0x7df
0x7da: JUMPI 0x7df V817
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7db
[0x7db:0x7de]
---
Predecessors: [0x7d4]
Successors: []
---
0x7db PUSH1 0x0
0x7dd DUP1
0x7de REVERT
---
0x7db: V819 = 0x0
0x7de: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7df
[0x7df:0x7e6]
---
Predecessors: [0x7d4]
Successors: [0x91c]
---
0x7df JUMPDEST
0x7e0 PUSH2 0x747
0x7e3 PUSH2 0x91c
0x7e6 JUMP
---
0x7df: JUMPDEST 
0x7e0: V820 = 0x747
0x7e3: V821 = 0x91c
0x7e6: JUMP 0x91c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x747]
Exit stack: [V12, 0x747]

================================

Block 0x7e7
[0x7e7:0x802]
---
Predecessors: []
Successors: []
---
0x7e7 JUMPDEST
0x7e8 PUSH1 0x40
0x7ea MLOAD
0x7eb PUSH1 0x1
0x7ed PUSH1 0xa0
0x7ef PUSH1 0x2
0x7f1 EXP
0x7f2 SUB
0x7f3 SWAP1
0x7f4 SWAP2
0x7f5 AND
0x7f6 DUP2
0x7f7 MSTORE
0x7f8 PUSH1 0x20
0x7fa ADD
0x7fb PUSH1 0x40
0x7fd MLOAD
0x7fe DUP1
0x7ff SWAP2
0x800 SUB
0x801 SWAP1
0x802 RETURN
---
0x7e7: JUMPDEST 
0x7e8: V822 = 0x40
0x7ea: V823 = M[0x40]
0x7eb: V824 = 0x1
0x7ed: V825 = 0xa0
0x7ef: V826 = 0x2
0x7f1: V827 = EXP 0x2 0xa0
0x7f2: V828 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f5: V829 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x7f7: M[V823] = V829
0x7f8: V830 = 0x20
0x7fa: V831 = ADD 0x20 V823
0x7fb: V832 = 0x40
0x7fd: V833 = M[0x40]
0x800: V834 = SUB V831 V833
0x802: RETURN V833 V834
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x803
[0x803:0x809]
---
Predecessors: [0x5c]
Successors: [0x80a, 0x80e]
---
0x803 JUMPDEST
0x804 CALLVALUE
0x805 ISZERO
0x806 PUSH2 0x80e
0x809 JUMPI
---
0x803: JUMPDEST 
0x804: V835 = CALLVALUE
0x805: V836 = ISZERO V835
0x806: V837 = 0x80e
0x809: JUMPI 0x80e V836
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x80a
[0x80a:0x80d]
---
Predecessors: [0x803]
Successors: []
---
0x80a PUSH1 0x0
0x80c DUP1
0x80d REVERT
---
0x80a: V838 = 0x0
0x80d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x80e
[0x80e:0x815]
---
Predecessors: [0x803]
Successors: [0x92b]
---
0x80e JUMPDEST
0x80f PUSH2 0x722
0x812 PUSH2 0x92b
0x815 JUMP
---
0x80e: JUMPDEST 
0x80f: V839 = 0x722
0x812: V840 = 0x92b
0x815: JUMP 0x92b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x722]
Exit stack: [V12, 0x722]

================================

Block 0x816
[0x816:0x827]
---
Predecessors: []
Successors: []
---
0x816 JUMPDEST
0x817 PUSH1 0x40
0x819 MLOAD
0x81a SWAP1
0x81b DUP2
0x81c MSTORE
0x81d PUSH1 0x20
0x81f ADD
0x820 PUSH1 0x40
0x822 MLOAD
0x823 DUP1
0x824 SWAP2
0x825 SUB
0x826 SWAP1
0x827 RETURN
---
0x816: JUMPDEST 
0x817: V841 = 0x40
0x819: V842 = M[0x40]
0x81c: M[V842] = S0
0x81d: V843 = 0x20
0x81f: V844 = ADD 0x20 V842
0x820: V845 = 0x40
0x822: V846 = M[0x40]
0x825: V847 = SUB V844 V846
0x827: RETURN V846 V847
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x828
[0x828:0x82e]
---
Predecessors: [0x67]
Successors: [0x82f, 0x833]
---
0x828 JUMPDEST
0x829 CALLVALUE
0x82a ISZERO
0x82b PUSH2 0x833
0x82e JUMPI
---
0x828: JUMPDEST 
0x829: V848 = CALLVALUE
0x82a: V849 = ISZERO V848
0x82b: V850 = 0x833
0x82e: JUMPI 0x833 V849
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x82f
[0x82f:0x832]
---
Predecessors: [0x828]
Successors: []
---
0x82f PUSH1 0x0
0x831 DUP1
0x832 REVERT
---
0x82f: V851 = 0x0
0x832: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x833
[0x833:0x83a]
---
Predecessors: [0x828]
Successors: [0x931]
---
0x833 JUMPDEST
0x834 PUSH2 0x722
0x837 PUSH2 0x931
0x83a JUMP
---
0x833: JUMPDEST 
0x834: V852 = 0x722
0x837: V853 = 0x931
0x83a: JUMP 0x931
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x722]
Exit stack: [V12, 0x722]

================================

Block 0x83b
[0x83b:0x84c]
---
Predecessors: []
Successors: []
---
0x83b JUMPDEST
0x83c PUSH1 0x40
0x83e MLOAD
0x83f SWAP1
0x840 DUP2
0x841 MSTORE
0x842 PUSH1 0x20
0x844 ADD
0x845 PUSH1 0x40
0x847 MLOAD
0x848 DUP1
0x849 SWAP2
0x84a SUB
0x84b SWAP1
0x84c RETURN
---
0x83b: JUMPDEST 
0x83c: V854 = 0x40
0x83e: V855 = M[0x40]
0x841: M[V855] = S0
0x842: V856 = 0x20
0x844: V857 = ADD 0x20 V855
0x845: V858 = 0x40
0x847: V859 = M[0x40]
0x84a: V860 = SUB V857 V859
0x84c: RETURN V859 V860
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x84d
[0x84d:0x853]
---
Predecessors: [0x72]
Successors: [0x854, 0x858]
---
0x84d JUMPDEST
0x84e CALLVALUE
0x84f ISZERO
0x850 PUSH2 0x858
0x853 JUMPI
---
0x84d: JUMPDEST 
0x84e: V861 = CALLVALUE
0x84f: V862 = ISZERO V861
0x850: V863 = 0x858
0x853: JUMPI 0x858 V862
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x854
[0x854:0x857]
---
Predecessors: [0x84d]
Successors: []
---
0x854 PUSH1 0x0
0x856 DUP1
0x857 REVERT
---
0x854: V864 = 0x0
0x857: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x858
[0x858:0x85f]
---
Predecessors: [0x84d]
Successors: [0x937]
---
0x858 JUMPDEST
0x859 PUSH2 0x722
0x85c PUSH2 0x937
0x85f JUMP
---
0x858: JUMPDEST 
0x859: V865 = 0x722
0x85c: V866 = 0x937
0x85f: JUMP 0x937
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x722]
Exit stack: [V12, 0x722]

================================

Block 0x860
[0x860:0x871]
---
Predecessors: []
Successors: []
---
0x860 JUMPDEST
0x861 PUSH1 0x40
0x863 MLOAD
0x864 SWAP1
0x865 DUP2
0x866 MSTORE
0x867 PUSH1 0x20
0x869 ADD
0x86a PUSH1 0x40
0x86c MLOAD
0x86d DUP1
0x86e SWAP2
0x86f SUB
0x870 SWAP1
0x871 RETURN
---
0x860: JUMPDEST 
0x861: V867 = 0x40
0x863: V868 = M[0x40]
0x866: M[V868] = S0
0x867: V869 = 0x20
0x869: V870 = ADD 0x20 V868
0x86a: V871 = 0x40
0x86c: V872 = M[0x40]
0x86f: V873 = SUB V870 V872
0x871: RETURN V872 V873
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x872
[0x872:0x878]
---
Predecessors: [0x7d]
Successors: [0x879, 0x87d]
---
0x872 JUMPDEST
0x873 CALLVALUE
0x874 ISZERO
0x875 PUSH2 0x87d
0x878 JUMPI
---
0x872: JUMPDEST 
0x873: V874 = CALLVALUE
0x874: V875 = ISZERO V874
0x875: V876 = 0x87d
0x878: JUMPI 0x87d V875
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x879
[0x879:0x87c]
---
Predecessors: [0x872]
Successors: []
---
0x879 PUSH1 0x0
0x87b DUP1
0x87c REVERT
---
0x879: V877 = 0x0
0x87c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x87d
[0x87d:0x884]
---
Predecessors: [0x872]
Successors: [0x93d]
---
0x87d JUMPDEST
0x87e PUSH2 0x776
0x881 PUSH2 0x93d
0x884 JUMP
---
0x87d: JUMPDEST 
0x87e: V878 = 0x776
0x881: V879 = 0x93d
0x884: JUMP 0x93d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x776]
Exit stack: [V12, 0x776]

================================

Block 0x885
[0x885:0x898]
---
Predecessors: []
Successors: []
---
0x885 JUMPDEST
0x886 PUSH1 0x40
0x888 MLOAD
0x889 SWAP1
0x88a ISZERO
0x88b ISZERO
0x88c DUP2
0x88d MSTORE
0x88e PUSH1 0x20
0x890 ADD
0x891 PUSH1 0x40
0x893 MLOAD
0x894 DUP1
0x895 SWAP2
0x896 SUB
0x897 SWAP1
0x898 RETURN
---
0x885: JUMPDEST 
0x886: V880 = 0x40
0x888: V881 = M[0x40]
0x88a: V882 = ISZERO S0
0x88b: V883 = ISZERO V882
0x88d: M[V881] = V883
0x88e: V884 = 0x20
0x890: V885 = ADD 0x20 V881
0x891: V886 = 0x40
0x893: V887 = M[0x40]
0x896: V888 = SUB V885 V887
0x898: RETURN V887 V888
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x899
[0x899:0x89f]
---
Predecessors: [0x88]
Successors: [0x8a0, 0x8a4]
---
0x899 JUMPDEST
0x89a CALLVALUE
0x89b ISZERO
0x89c PUSH2 0x8a4
0x89f JUMPI
---
0x899: JUMPDEST 
0x89a: V889 = CALLVALUE
0x89b: V890 = ISZERO V889
0x89c: V891 = 0x8a4
0x89f: JUMPI 0x8a4 V890
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a0
[0x8a0:0x8a3]
---
Predecessors: [0x899]
Successors: []
---
0x8a0 PUSH1 0x0
0x8a2 DUP1
0x8a3 REVERT
---
0x8a0: V892 = 0x0
0x8a3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a4
[0x8a4:0x8ab]
---
Predecessors: [0x899]
Successors: [0x946]
---
0x8a4 JUMPDEST
0x8a5 PUSH2 0x722
0x8a8 PUSH2 0x946
0x8ab JUMP
---
0x8a4: JUMPDEST 
0x8a5: V893 = 0x722
0x8a8: V894 = 0x946
0x8ab: JUMP 0x946
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x722]
Exit stack: [V12, 0x722]

================================

Block 0x8ac
[0x8ac:0x8bd]
---
Predecessors: []
Successors: []
---
0x8ac JUMPDEST
0x8ad PUSH1 0x40
0x8af MLOAD
0x8b0 SWAP1
0x8b1 DUP2
0x8b2 MSTORE
0x8b3 PUSH1 0x20
0x8b5 ADD
0x8b6 PUSH1 0x40
0x8b8 MLOAD
0x8b9 DUP1
0x8ba SWAP2
0x8bb SUB
0x8bc SWAP1
0x8bd RETURN
---
0x8ac: JUMPDEST 
0x8ad: V895 = 0x40
0x8af: V896 = M[0x40]
0x8b2: M[V896] = S0
0x8b3: V897 = 0x20
0x8b5: V898 = ADD 0x20 V896
0x8b6: V899 = 0x40
0x8b8: V900 = M[0x40]
0x8bb: V901 = SUB V898 V900
0x8bd: RETURN V900 V901
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8be
[0x8be:0x8c4]
---
Predecessors: [0x93]
Successors: [0x8c5, 0x8c9]
---
0x8be JUMPDEST
0x8bf CALLVALUE
0x8c0 ISZERO
0x8c1 PUSH2 0x8c9
0x8c4 JUMPI
---
0x8be: JUMPDEST 
0x8bf: V902 = CALLVALUE
0x8c0: V903 = ISZERO V902
0x8c1: V904 = 0x8c9
0x8c4: JUMPI 0x8c9 V903
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c5
[0x8c5:0x8c8]
---
Predecessors: [0x8be]
Successors: []
---
0x8c5 PUSH1 0x0
0x8c7 DUP1
0x8c8 REVERT
---
0x8c5: V905 = 0x0
0x8c8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c9
[0x8c9:0x8d0]
---
Predecessors: [0x8be]
Successors: [0x94c]
---
0x8c9 JUMPDEST
0x8ca PUSH2 0x747
0x8cd PUSH2 0x94c
0x8d0 JUMP
---
0x8c9: JUMPDEST 
0x8ca: V906 = 0x747
0x8cd: V907 = 0x94c
0x8d0: JUMP 0x94c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x747]
Exit stack: [V12, 0x747]

================================

Block 0x8d1
[0x8d1:0x8ec]
---
Predecessors: []
Successors: []
---
0x8d1 JUMPDEST
0x8d2 PUSH1 0x40
0x8d4 MLOAD
0x8d5 PUSH1 0x1
0x8d7 PUSH1 0xa0
0x8d9 PUSH1 0x2
0x8db EXP
0x8dc SUB
0x8dd SWAP1
0x8de SWAP2
0x8df AND
0x8e0 DUP2
0x8e1 MSTORE
0x8e2 PUSH1 0x20
0x8e4 ADD
0x8e5 PUSH1 0x40
0x8e7 MLOAD
0x8e8 DUP1
0x8e9 SWAP2
0x8ea SUB
0x8eb SWAP1
0x8ec RETURN
---
0x8d1: JUMPDEST 
0x8d2: V908 = 0x40
0x8d4: V909 = M[0x40]
0x8d5: V910 = 0x1
0x8d7: V911 = 0xa0
0x8d9: V912 = 0x2
0x8db: V913 = EXP 0x2 0xa0
0x8dc: V914 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8df: V915 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x8e1: M[V909] = V915
0x8e2: V916 = 0x20
0x8e4: V917 = ADD 0x20 V909
0x8e5: V918 = 0x40
0x8e7: V919 = M[0x40]
0x8ea: V920 = SUB V917 V919
0x8ec: RETURN V919 V920
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8ed
[0x8ed:0x8f2]
---
Predecessors: [0x71a]
Successors: [0x722]
---
0x8ed JUMPDEST
0x8ee PUSH1 0x5
0x8f0 SLOAD
0x8f1 DUP2
0x8f2 JUMP
---
0x8ed: JUMPDEST 
0x8ee: V921 = 0x5
0x8f0: V922 = S[0x5]
0x8f2: JUMP 0x722
---
Entry stack: [V12, 0x722]
Stack pops: 1
Stack additions: [S0, V922]
Exit stack: [V12, 0x722, V922]

================================

Block 0x8f3
[0x8f3:0x901]
---
Predecessors: [0x73f]
Successors: [0x747]
---
0x8f3 JUMPDEST
0x8f4 PUSH1 0x0
0x8f6 SLOAD
0x8f7 PUSH1 0x1
0x8f9 PUSH1 0xa0
0x8fb PUSH1 0x2
0x8fd EXP
0x8fe SUB
0x8ff AND
0x900 DUP2
0x901 JUMP
---
0x8f3: JUMPDEST 
0x8f4: V923 = 0x0
0x8f6: V924 = S[0x0]
0x8f7: V925 = 0x1
0x8f9: V926 = 0xa0
0x8fb: V927 = 0x2
0x8fd: V928 = EXP 0x2 0xa0
0x8fe: V929 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ff: V930 = AND 0xffffffffffffffffffffffffffffffffffffffff V924
0x901: JUMP 0x747
---
Entry stack: [V12, 0x747]
Stack pops: 1
Stack additions: [S0, V930]
Exit stack: [V12, 0x747, V930]

================================

Block 0x902
[0x902:0x90f]
---
Predecessors: [0x76e]
Successors: [0x776]
---
0x902 JUMPDEST
0x903 PUSH1 0xb
0x905 SLOAD
0x906 PUSH2 0x100
0x909 SWAP1
0x90a DIV
0x90b PUSH1 0xff
0x90d AND
0x90e DUP2
0x90f JUMP
---
0x902: JUMPDEST 
0x903: V931 = 0xb
0x905: V932 = S[0xb]
0x906: V933 = 0x100
0x90a: V934 = DIV V932 0x100
0x90b: V935 = 0xff
0x90d: V936 = AND 0xff V934
0x90f: JUMP 0x776
---
Entry stack: [V12, 0x776]
Stack pops: 1
Stack additions: [S0, V936]
Exit stack: [V12, 0x776, V936]

================================

Block 0x910
[0x910:0x915]
---
Predecessors: [0x795]
Successors: [0x722]
---
0x910 JUMPDEST
0x911 PUSH1 0x9
0x913 SLOAD
0x914 DUP2
0x915 JUMP
---
0x910: JUMPDEST 
0x911: V937 = 0x9
0x913: V938 = S[0x9]
0x915: JUMP 0x722
---
Entry stack: [V12, 0x722]
Stack pops: 1
Stack additions: [S0, V938]
Exit stack: [V12, 0x722, V938]

================================

Block 0x916
[0x916:0x91b]
---
Predecessors: [0x7ba]
Successors: [0x722]
---
0x916 JUMPDEST
0x917 PUSH1 0x3
0x919 SLOAD
0x91a DUP2
0x91b JUMP
---
0x916: JUMPDEST 
0x917: V939 = 0x3
0x919: V940 = S[0x3]
0x91b: JUMP 0x722
---
Entry stack: [V12, 0x722]
Stack pops: 1
Stack additions: [S0, V940]
Exit stack: [V12, 0x722, V940]

================================

Block 0x91c
[0x91c:0x92a]
---
Predecessors: [0x7df]
Successors: [0x747]
---
0x91c JUMPDEST
0x91d PUSH1 0x1
0x91f SLOAD
0x920 PUSH1 0x1
0x922 PUSH1 0xa0
0x924 PUSH1 0x2
0x926 EXP
0x927 SUB
0x928 AND
0x929 DUP2
0x92a JUMP
---
0x91c: JUMPDEST 
0x91d: V941 = 0x1
0x91f: V942 = S[0x1]
0x920: V943 = 0x1
0x922: V944 = 0xa0
0x924: V945 = 0x2
0x926: V946 = EXP 0x2 0xa0
0x927: V947 = SUB 0x10000000000000000000000000000000000000000 0x1
0x928: V948 = AND 0xffffffffffffffffffffffffffffffffffffffff V942
0x92a: JUMP 0x747
---
Entry stack: [V12, 0x747]
Stack pops: 1
Stack additions: [S0, V948]
Exit stack: [V12, 0x747, V948]

================================

Block 0x92b
[0x92b:0x930]
---
Predecessors: [0x80e]
Successors: [0x722]
---
0x92b JUMPDEST
0x92c PUSH1 0xa
0x92e SLOAD
0x92f DUP2
0x930 JUMP
---
0x92b: JUMPDEST 
0x92c: V949 = 0xa
0x92e: V950 = S[0xa]
0x930: JUMP 0x722
---
Entry stack: [V12, 0x722]
Stack pops: 1
Stack additions: [S0, V950]
Exit stack: [V12, 0x722, V950]

================================

Block 0x931
[0x931:0x936]
---
Predecessors: [0x833]
Successors: [0x722]
---
0x931 JUMPDEST
0x932 PUSH1 0x7
0x934 SLOAD
0x935 DUP2
0x936 JUMP
---
0x931: JUMPDEST 
0x932: V951 = 0x7
0x934: V952 = S[0x7]
0x936: JUMP 0x722
---
Entry stack: [V12, 0x722]
Stack pops: 1
Stack additions: [S0, V952]
Exit stack: [V12, 0x722, V952]

================================

Block 0x937
[0x937:0x93c]
---
Predecessors: [0x858]
Successors: [0x722]
---
0x937 JUMPDEST
0x938 PUSH1 0x4
0x93a SLOAD
0x93b DUP2
0x93c JUMP
---
0x937: JUMPDEST 
0x938: V953 = 0x4
0x93a: V954 = S[0x4]
0x93c: JUMP 0x722
---
Entry stack: [V12, 0x722]
Stack pops: 1
Stack additions: [S0, V954]
Exit stack: [V12, 0x722, V954]

================================

Block 0x93d
[0x93d:0x945]
---
Predecessors: [0x87d]
Successors: [0x776]
---
0x93d JUMPDEST
0x93e PUSH1 0xb
0x940 SLOAD
0x941 PUSH1 0xff
0x943 AND
0x944 DUP2
0x945 JUMP
---
0x93d: JUMPDEST 
0x93e: V955 = 0xb
0x940: V956 = S[0xb]
0x941: V957 = 0xff
0x943: V958 = AND 0xff V956
0x945: JUMP 0x776
---
Entry stack: [V12, 0x776]
Stack pops: 1
Stack additions: [S0, V958]
Exit stack: [V12, 0x776, V958]

================================

Block 0x946
[0x946:0x94b]
---
Predecessors: [0x8a4]
Successors: [0x722]
---
0x946 JUMPDEST
0x947 PUSH1 0x6
0x949 SLOAD
0x94a DUP2
0x94b JUMP
---
0x946: JUMPDEST 
0x947: V959 = 0x6
0x949: V960 = S[0x6]
0x94b: JUMP 0x722
---
Entry stack: [V12, 0x722]
Stack pops: 1
Stack additions: [S0, V960]
Exit stack: [V12, 0x722, V960]

================================

Block 0x94c
[0x94c:0x95a]
---
Predecessors: [0x8c9]
Successors: [0x747]
---
0x94c JUMPDEST
0x94d PUSH1 0x2
0x94f SLOAD
0x950 PUSH1 0x1
0x952 PUSH1 0xa0
0x954 PUSH1 0x2
0x956 EXP
0x957 SUB
0x958 AND
0x959 DUP2
0x95a JUMP
---
0x94c: JUMPDEST 
0x94d: V961 = 0x2
0x94f: V962 = S[0x2]
0x950: V963 = 0x1
0x952: V964 = 0xa0
0x954: V965 = 0x2
0x956: V966 = EXP 0x2 0xa0
0x957: V967 = SUB 0x10000000000000000000000000000000000000000 0x1
0x958: V968 = AND 0xffffffffffffffffffffffffffffffffffffffff V962
0x95a: JUMP 0x747
---
Entry stack: [V12, 0x747]
Stack pops: 1
Stack additions: [S0, V968]
Exit stack: [V12, 0x747, V968]

================================

Block 0x95b
[0x95b:0x98e]
---
Predecessors: []
Successors: []
---
0x95b STOP
0x95c LOG1
0x95d PUSH6 0x627a7a723058
0x964 SHA3
0x965 MISSING 0x4c
0x966 PUSH26 0x9b67c9124f581d9d8a977e6be6b40622961ddd19478c0a05594f
0x981 PUSH13 0x49899a0029
---
0x95b: STOP 
0x95c: LOG S0 S1 S2
0x95d: V969 = 0x627a7a723058
0x964: V970 = SHA3 0x627a7a723058 S3
0x965: MISSING 0x4c
0x966: V971 = 0x9b67c9124f581d9d8a977e6be6b40622961ddd19478c0a05594f
0x981: V972 = 0x49899a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V970, 0x49899a0029, 0x9b67c9124f581d9d8a977e6be6b40622961ddd19478c0a05594f]
Exit stack: []

================================

Function 0:
Public function signature: 0x27a3181d
Entry block: 0x70f
Exit block: 0x722
Body: 0x70f, 0x716, 0x71a, 0x722, 0x8ed

Function 1:
Public function signature: 0x27ebcf0e
Entry block: 0x734
Exit block: 0x747
Body: 0x734, 0x73b, 0x73f, 0x747, 0x8f3

Function 2:
Public function signature: 0x30c74e04
Entry block: 0x763
Exit block: 0x776
Body: 0x763, 0x76a, 0x76e, 0x776, 0x902

Function 3:
Public function signature: 0x519ee19e
Entry block: 0x78a
Exit block: 0x722
Body: 0x722, 0x78a, 0x791, 0x795, 0x910

Function 4:
Public function signature: 0x7fa8c158
Entry block: 0x7af
Exit block: 0x722
Body: 0x722, 0x7af, 0x7b6, 0x7ba, 0x916

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x7d4
Exit block: 0x747
Body: 0x747, 0x7d4, 0x7db, 0x7df, 0x91c

Function 6:
Public function signature: 0x96c5406d
Entry block: 0x803
Exit block: 0x722
Body: 0x722, 0x803, 0x80a, 0x80e, 0x92b

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x828
Exit block: 0x722
Body: 0x722, 0x828, 0x82f, 0x833, 0x931

Function 8:
Public function signature: 0xc8e569a8
Entry block: 0x84d
Exit block: 0x722
Body: 0x722, 0x84d, 0x854, 0x858, 0x937

Function 9:
Public function signature: 0xccb07cef
Entry block: 0x872
Exit block: 0x776
Body: 0x776, 0x872, 0x879, 0x87d, 0x93d

Function 10:
Public function signature: 0xd778c911
Entry block: 0x899
Exit block: 0x722
Body: 0x722, 0x899, 0x8a0, 0x8a4, 0x946

Function 11:
Public function signature: 0xf9081ba2
Entry block: 0x8be
Exit block: 0x747
Body: 0x747, 0x8be, 0x8c5, 0x8c9, 0x94c

Function 12:
Public fallback function
Entry block: 0x9e
Exit block: 0x678
Body: 0x9e, 0x9f, 0xaf, 0xbe, 0xc9, 0xd4, 0xd5, 0x12c, 0x130, 0x13d, 0x141, 0x158, 0x185, 0x189, 0x18e, 0x199, 0x1c6, 0x1ca, 0x1dc, 0x243, 0x247, 0x254, 0x258, 0x2a1, 0x2a5, 0x2b2, 0x2b6, 0x310, 0x314, 0x321, 0x325, 0x34a, 0x34f, 0x35b, 0x388, 0x391, 0x3a0, 0x3a1, 0x3ae, 0x3db, 0x3df, 0x3e0, 0x3e9, 0x3ed, 0x3fd, 0x3fe, 0x40d, 0x43b, 0x43f, 0x448, 0x478, 0x47c, 0x47d, 0x4cf, 0x4d3, 0x4e0, 0x4e4, 0x501, 0x50e, 0x513, 0x525, 0x526, 0x55a, 0x55e, 0x5b7, 0x5bb, 0x5c8, 0x5cc, 0x600, 0x604, 0x667, 0x66b, 0x678, 0x67c, 0x696, 0x697, 0x698, 0x699, 0x70a

