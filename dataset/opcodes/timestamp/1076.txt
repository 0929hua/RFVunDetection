Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x17a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x17a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x17a
0xa: JUMPI 0x17a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x1c2]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x64c4ebc
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x1c2
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x64c4ebc
0x20: V14 = EQ V12 0x64c4ebc
0x21: V15 = 0x1c2
0x24: JUMPI 0x1c2 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x1d4]
---
0x25 DUP1
0x26 PUSH4 0x11df9995
0x2b EQ
0x2c PUSH2 0x1d4
0x2f JUMPI
---
0x26: V16 = 0x11df9995
0x2b: V17 = EQ 0x11df9995 V12
0x2c: V18 = 0x1d4
0x2f: JUMPI 0x1d4 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x200]
---
0x30 DUP1
0x31 PUSH4 0x17111edb
0x36 EQ
0x37 PUSH2 0x200
0x3a JUMPI
---
0x31: V19 = 0x17111edb
0x36: V20 = EQ 0x17111edb V12
0x37: V21 = 0x200
0x3a: JUMPI 0x200 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x224]
---
0x3b DUP1
0x3c PUSH4 0x278ecde1
0x41 EQ
0x42 PUSH2 0x224
0x45 JUMPI
---
0x3c: V22 = 0x278ecde1
0x41: V23 = EQ 0x278ecde1 V12
0x42: V24 = 0x224
0x45: JUMPI 0x224 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x239]
---
0x46 DUP1
0x47 PUSH4 0x298c1e14
0x4c EQ
0x4d PUSH2 0x239
0x50 JUMPI
---
0x47: V25 = 0x298c1e14
0x4c: V26 = EQ 0x298c1e14 V12
0x4d: V27 = 0x239
0x50: JUMPI 0x239 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x25b]
---
0x51 DUP1
0x52 PUSH4 0x2adc2cd2
0x57 EQ
0x58 PUSH2 0x25b
0x5b JUMPI
---
0x52: V28 = 0x2adc2cd2
0x57: V29 = EQ 0x2adc2cd2 V12
0x58: V30 = 0x25b
0x5b: JUMPI 0x25b V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x27d]
---
0x5c DUP1
0x5d PUSH4 0x30adce0e
0x62 EQ
0x63 PUSH2 0x27d
0x66 JUMPI
---
0x5d: V31 = 0x30adce0e
0x62: V32 = EQ 0x30adce0e V12
0x63: V33 = 0x27d
0x66: JUMPI 0x27d V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x29f]
---
0x67 DUP1
0x68 PUSH4 0x3197cbb6
0x6d EQ
0x6e PUSH2 0x29f
0x71 JUMPI
---
0x68: V34 = 0x3197cbb6
0x6d: V35 = EQ 0x3197cbb6 V12
0x6e: V36 = 0x29f
0x71: JUMPI 0x29f V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x2c1]
---
0x72 DUP1
0x73 PUSH4 0x4bb278f3
0x78 EQ
0x79 PUSH2 0x2c1
0x7c JUMPI
---
0x73: V37 = 0x4bb278f3
0x78: V38 = EQ 0x4bb278f3 V12
0x79: V39 = 0x2c1
0x7c: JUMPI 0x2c1 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2d3]
---
0x7d DUP1
0x7e PUSH4 0x6103d70b
0x83 EQ
0x84 PUSH2 0x2d3
0x87 JUMPI
---
0x7e: V40 = 0x6103d70b
0x83: V41 = EQ 0x6103d70b V12
0x84: V42 = 0x2d3
0x87: JUMPI 0x2d3 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2e5]
---
0x88 DUP1
0x89 PUSH4 0x63a599a4
0x8e EQ
0x8f PUSH2 0x2e5
0x92 JUMPI
---
0x89: V43 = 0x63a599a4
0x8e: V44 = EQ 0x63a599a4 V12
0x8f: V45 = 0x2e5
0x92: JUMPI 0x2e5 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2f7]
---
0x93 DUP1
0x94 PUSH4 0x6a2d1cb8
0x99 EQ
0x9a PUSH2 0x2f7
0x9d JUMPI
---
0x94: V46 = 0x6a2d1cb8
0x99: V47 = EQ 0x6a2d1cb8 V12
0x9a: V48 = 0x2f7
0x9d: JUMPI 0x2f7 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2f7]
---
0x9e DUP1
0x9f PUSH4 0x72fb6f75
0xa4 EQ
0xa5 PUSH2 0x2f7
0xa8 JUMPI
---
0x9f: V49 = 0x72fb6f75
0xa4: V50 = EQ 0x72fb6f75 V12
0xa5: V51 = 0x2f7
0xa8: JUMPI 0x2f7 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x33b]
---
0xa9 DUP1
0xaa PUSH4 0x75f12b21
0xaf EQ
0xb0 PUSH2 0x33b
0xb3 JUMPI
---
0xaa: V52 = 0x75f12b21
0xaf: V53 = EQ 0x75f12b21 V12
0xb0: V54 = 0x33b
0xb3: JUMPI 0x33b V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x35f]
---
0xb4 DUP1
0xb5 PUSH4 0x78e97925
0xba EQ
0xbb PUSH2 0x35f
0xbe JUMPI
---
0xb5: V55 = 0x78e97925
0xba: V56 = EQ 0x78e97925 V12
0xbb: V57 = 0x35f
0xbe: JUMPI 0x35f V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x381]
---
0xbf DUP1
0xc0 PUSH4 0x79d68f79
0xc5 EQ
0xc6 PUSH2 0x381
0xc9 JUMPI
---
0xc0: V58 = 0x79d68f79
0xc5: V59 = EQ 0x79d68f79 V12
0xc6: V60 = 0x381
0xc9: JUMPI 0x381 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x3a3]
---
0xca DUP1
0xcb PUSH4 0x801db9cc
0xd0 EQ
0xd1 PUSH2 0x3a3
0xd4 JUMPI
---
0xcb: V61 = 0x801db9cc
0xd0: V62 = EQ 0x801db9cc V12
0xd1: V63 = 0x3a3
0xd4: JUMPI 0x3a3 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x3c5]
---
0xd5 DUP1
0xd6 PUSH4 0x86d1a69f
0xdb EQ
0xdc PUSH2 0x3c5
0xdf JUMPI
---
0xd6: V64 = 0x86d1a69f
0xdb: V65 = EQ 0x86d1a69f V12
0xdc: V66 = 0x3c5
0xdf: JUMPI 0x3c5 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x3d7]
---
0xe0 DUP1
0xe1 PUSH4 0x8da5cb5b
0xe6 EQ
0xe7 PUSH2 0x3d7
0xea JUMPI
---
0xe1: V67 = 0x8da5cb5b
0xe6: V68 = EQ 0x8da5cb5b V12
0xe7: V69 = 0x3d7
0xea: JUMPI 0x3d7 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x403]
---
0xeb DUP1
0xec PUSH4 0x8ef26a71
0xf1 EQ
0xf2 PUSH2 0x403
0xf5 JUMPI
---
0xec: V70 = 0x8ef26a71
0xf1: V71 = EQ 0x8ef26a71 V12
0xf2: V72 = 0x403
0xf5: JUMPI 0x403 V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x425]
---
0xf6 DUP1
0xf7 PUSH4 0x9890220b
0xfc EQ
0xfd PUSH2 0x425
0x100 JUMPI
---
0xf7: V73 = 0x9890220b
0xfc: V74 = EQ 0x9890220b V12
0xfd: V75 = 0x425
0x100: JUMPI 0x425 V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0x239]
---
0x101 DUP1
0x102 PUSH4 0x9b39caef
0x107 EQ
0x108 PUSH2 0x239
0x10b JUMPI
---
0x102: V76 = 0x9b39caef
0x107: V77 = EQ 0x9b39caef V12
0x108: V78 = 0x239
0x10b: JUMPI 0x239 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x116]
---
Predecessors: [0x101]
Successors: [0x117, 0x459]
---
0x10c DUP1
0x10d PUSH4 0xb85dfb80
0x112 EQ
0x113 PUSH2 0x459
0x116 JUMPI
---
0x10d: V79 = 0xb85dfb80
0x112: V80 = EQ 0xb85dfb80 V12
0x113: V81 = 0x459
0x116: JUMPI 0x459 V80
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x117
[0x117:0x121]
---
Predecessors: [0x10c]
Successors: [0x122, 0x4a7]
---
0x117 DUP1
0x118 PUSH4 0xbe9a6555
0x11d EQ
0x11e PUSH2 0x4a7
0x121 JUMPI
---
0x118: V82 = 0xbe9a6555
0x11d: V83 = EQ 0xbe9a6555 V12
0x11e: V84 = 0x4a7
0x121: JUMPI 0x4a7 V83
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x122
[0x122:0x12c]
---
Predecessors: [0x117]
Successors: [0x12d, 0x4b9]
---
0x122 DUP1
0x123 PUSH4 0xc4618978
0x128 EQ
0x129 PUSH2 0x4b9
0x12c JUMPI
---
0x123: V85 = 0xc4618978
0x128: V86 = EQ 0xc4618978 V12
0x129: V87 = 0x4b9
0x12c: JUMPI 0x4b9 V86
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x12d
[0x12d:0x137]
---
Predecessors: [0x122]
Successors: [0x138, 0x4db]
---
0x12d DUP1
0x12e PUSH4 0xcaa7590d
0x133 EQ
0x134 PUSH2 0x4db
0x137 JUMPI
---
0x12e: V88 = 0xcaa7590d
0x133: V89 = EQ 0xcaa7590d V12
0x134: V90 = 0x4db
0x137: JUMPI 0x4db V89
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x138
[0x138:0x142]
---
Predecessors: [0x12d]
Successors: [0x143, 0x4fd]
---
0x138 DUP1
0x139 PUSH4 0xd06c91e4
0x13e EQ
0x13f PUSH2 0x4fd
0x142 JUMPI
---
0x139: V91 = 0xd06c91e4
0x13e: V92 = EQ 0xd06c91e4 V12
0x13f: V93 = 0x4fd
0x142: JUMPI 0x4fd V92
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x143
[0x143:0x14d]
---
Predecessors: [0x138]
Successors: [0x14e, 0x529]
---
0x143 DUP1
0x144 PUSH4 0xd669e1d4
0x149 EQ
0x14a PUSH2 0x529
0x14d JUMPI
---
0x144: V94 = 0xd669e1d4
0x149: V95 = EQ 0xd669e1d4 V12
0x14a: V96 = 0x529
0x14d: JUMPI 0x529 V95
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x14e
[0x14e:0x158]
---
Predecessors: [0x143]
Successors: [0x159, 0x54b]
---
0x14e DUP1
0x14f PUSH4 0xdf40503c
0x154 EQ
0x155 PUSH2 0x54b
0x158 JUMPI
---
0x14f: V97 = 0xdf40503c
0x154: V98 = EQ 0xdf40503c V12
0x155: V99 = 0x54b
0x158: JUMPI 0x54b V98
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x159
[0x159:0x163]
---
Predecessors: [0x14e]
Successors: [0x164, 0x55d]
---
0x159 DUP1
0x15a PUSH4 0xe2982c21
0x15f EQ
0x160 PUSH2 0x55d
0x163 JUMPI
---
0x15a: V100 = 0xe2982c21
0x15f: V101 = EQ 0xe2982c21 V12
0x160: V102 = 0x55d
0x163: JUMPI 0x55d V101
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x164
[0x164:0x16e]
---
Predecessors: [0x159]
Successors: [0x16f, 0x58b]
---
0x164 DUP1
0x165 PUSH4 0xf2fde38b
0x16a EQ
0x16b PUSH2 0x58b
0x16e JUMPI
---
0x165: V103 = 0xf2fde38b
0x16a: V104 = EQ 0xf2fde38b V12
0x16b: V105 = 0x58b
0x16e: JUMPI 0x58b V104
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x16f
[0x16f:0x179]
---
Predecessors: [0x164]
Successors: [0x17a, 0x5a9]
---
0x16f DUP1
0x170 PUSH4 0xf3283fba
0x175 EQ
0x176 PUSH2 0x5a9
0x179 JUMPI
---
0x170: V106 = 0xf3283fba
0x175: V107 = EQ 0xf3283fba V12
0x176: V108 = 0x5a9
0x179: JUMPI 0x5a9 V107
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x17a
[0x17a:0x17d]
---
Predecessors: [0x0, 0x16f]
Successors: [0x17e]
---
0x17a JUMPDEST
0x17b PUSH2 0x1c0
---
0x17a: JUMPDEST 
0x17b: V109 = 0x1c0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c0]
Exit stack: [V12, 0x1c0]

================================

Block 0x17e
[0x17e:0x190]
---
Predecessors: [0x17a]
Successors: [0x191, 0x196]
---
0x17e JUMPDEST
0x17f PUSH1 0x0
0x181 SLOAD
0x182 PUSH1 0xa0
0x184 PUSH1 0x2
0x186 EXP
0x187 SWAP1
0x188 DIV
0x189 PUSH1 0xff
0x18b AND
0x18c ISZERO
0x18d PUSH2 0x196
0x190 JUMPI
---
0x17e: JUMPDEST 
0x17f: V110 = 0x0
0x181: V111 = S[0x0]
0x182: V112 = 0xa0
0x184: V113 = 0x2
0x186: V114 = EXP 0x2 0xa0
0x188: V115 = DIV V111 0x10000000000000000000000000000000000000000
0x189: V116 = 0xff
0x18b: V117 = AND 0xff V115
0x18c: V118 = ISZERO V117
0x18d: V119 = 0x196
0x190: JUMPI 0x196 V118
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0x191
[0x191:0x195]
---
Predecessors: [0x17e]
Successors: []
---
0x191 PUSH1 0x0
0x193 PUSH1 0x0
0x195 REVERT
---
0x191: V120 = 0x0
0x193: V121 = 0x0
0x195: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0x196
[0x196:0x1a0]
---
Predecessors: [0x17e]
Successors: [0x1a1, 0x1a7]
---
0x196 JUMPDEST
0x197 PUSH1 0x6
0x199 SLOAD
0x19a TIMESTAMP
0x19b LT
0x19c DUP1
0x19d PUSH2 0x1a7
0x1a0 JUMPI
---
0x196: JUMPDEST 
0x197: V122 = 0x6
0x199: V123 = S[0x6]
0x19a: V124 = TIMESTAMP
0x19b: V125 = LT V124 V123
0x19d: V126 = 0x1a7
0x1a0: JUMPI 0x1a7 V125
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: [V125]
Exit stack: [V12, 0x1c0, V125]

================================

Block 0x1a1
[0x1a1:0x1a6]
---
Predecessors: [0x196]
Successors: [0x1a7]
---
0x1a1 POP
0x1a2 PUSH1 0x7
0x1a4 SLOAD
0x1a5 TIMESTAMP
0x1a6 GT
---
0x1a2: V127 = 0x7
0x1a4: V128 = S[0x7]
0x1a5: V129 = TIMESTAMP
0x1a6: V130 = GT V129 V128
---
Entry stack: [V12, 0x1c0, V125]
Stack pops: 1
Stack additions: [V130]
Exit stack: [V12, 0x1c0, V130]

================================

Block 0x1a7
[0x1a7:0x1ac]
---
Predecessors: [0x196, 0x1a1]
Successors: [0x1ad, 0x1b2]
---
0x1a7 JUMPDEST
0x1a8 ISZERO
0x1a9 PUSH2 0x1b2
0x1ac JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V131 = ISZERO S0
0x1a9: V132 = 0x1b2
0x1ac: JUMPI 0x1b2 V131
---
Entry stack: [V12, 0x1c0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0x1ad
[0x1ad:0x1b1]
---
Predecessors: [0x1a7]
Successors: []
---
0x1ad PUSH1 0x0
0x1af PUSH1 0x0
0x1b1 REVERT
---
0x1ad: V133 = 0x0
0x1af: V134 = 0x0
0x1b1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0x1b2
[0x1b2:0x1ba]
---
Predecessors: [0x1a7]
Successors: [0x5c7]
---
0x1b2 JUMPDEST
0x1b3 PUSH2 0x1bb
0x1b6 CALLER
0x1b7 PUSH2 0x5c7
0x1ba JUMP
---
0x1b2: JUMPDEST 
0x1b3: V135 = 0x1bb
0x1b6: V136 = CALLER
0x1b7: V137 = 0x5c7
0x1ba: JUMP 0x5c7
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: [0x1bb, V136]
Exit stack: [V12, 0x1c0, 0x1bb, V136]

================================

Block 0x1bb
[0x1bb:0x1bb]
---
Predecessors: [0x89b, 0xe95, 0x1125, 0x121c, 0x128c, 0x12f0]
Successors: [0x1bc]
---
0x1bb JUMPDEST
---
0x1bb: JUMPDEST 
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0x1bc
[0x1bc:0x1bc]
---
Predecessors: [0x1bb]
Successors: [0x1bd]
---
0x1bc JUMPDEST
---
0x1bc: JUMPDEST 
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0x1bd
[0x1bd:0x1bd]
---
Predecessors: [0x1bc]
Successors: [0x1be]
---
0x1bd JUMPDEST
---
0x1bd: JUMPDEST 
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0x1be
[0x1be:0x1bf]
---
Predecessors: [0x1bd]
Successors: [0x1c0]
---
0x1be JUMPDEST
0x1bf JUMP
---
0x1be: JUMPDEST 
0x1bf: JUMP 0x1c0
---
Entry stack: [V12, 0x1c0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c0
[0x1c0:0x1c1]
---
Predecessors: [0x1be, 0x89b, 0x93a, 0xae4, 0xcc4, 0xd8a, 0xdd0, 0xe62, 0xf37, 0x1125, 0x1192, 0x11f1, 0x121c, 0x128c, 0x12f0]
Successors: []
---
0x1c0 JUMPDEST
0x1c1 STOP
---
0x1c0: JUMPDEST 
0x1c1: STOP 
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]

================================

Block 0x1c2
[0x1c2:0x1c8]
---
Predecessors: [0xb]
Successors: [0x1c9, 0x1ca]
---
0x1c2 JUMPDEST
0x1c3 CALLVALUE
0x1c4 ISZERO
0x1c5 PUSH2 0x1ca
0x1c8 JUMPI
---
0x1c2: JUMPDEST 
0x1c3: V138 = CALLVALUE
0x1c4: V139 = ISZERO V138
0x1c5: V140 = 0x1ca
0x1c8: JUMPI 0x1ca V139
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c9
[0x1c9:0x1c9]
---
Predecessors: [0x1c2]
Successors: []
---
0x1c9 INVALID
---
0x1c9: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ca
[0x1ca:0x1d1]
---
Predecessors: [0x1c2]
Successors: [0x8a1]
---
0x1ca JUMPDEST
0x1cb PUSH2 0x1c0
0x1ce PUSH2 0x8a1
0x1d1 JUMP
---
0x1ca: JUMPDEST 
0x1cb: V141 = 0x1c0
0x1ce: V142 = 0x8a1
0x1d1: JUMP 0x8a1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c0]
Exit stack: [V12, 0x1c0]

================================

Block 0x1d2
[0x1d2:0x1d3]
---
Predecessors: []
Successors: []
---
0x1d2 JUMPDEST
0x1d3 STOP
---
0x1d2: JUMPDEST 
0x1d3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d4
[0x1d4:0x1da]
---
Predecessors: [0x25]
Successors: [0x1db, 0x1dc]
---
0x1d4 JUMPDEST
0x1d5 CALLVALUE
0x1d6 ISZERO
0x1d7 PUSH2 0x1dc
0x1da JUMPI
---
0x1d4: JUMPDEST 
0x1d5: V143 = CALLVALUE
0x1d6: V144 = ISZERO V143
0x1d7: V145 = 0x1dc
0x1da: JUMPI 0x1dc V144
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1db
[0x1db:0x1db]
---
Predecessors: [0x1d4]
Successors: []
---
0x1db INVALID
---
0x1db: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1dc
[0x1dc:0x1e3]
---
Predecessors: [0x1d4]
Successors: [0x93c]
---
0x1dc JUMPDEST
0x1dd PUSH2 0x1e4
0x1e0 PUSH2 0x93c
0x1e3 JUMP
---
0x1dc: JUMPDEST 
0x1dd: V146 = 0x1e4
0x1e0: V147 = 0x93c
0x1e3: JUMP 0x93c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e4]
Exit stack: [V12, 0x1e4]

================================

Block 0x1e4
[0x1e4:0x1ff]
---
Predecessors: [0x93c, 0xe64, 0xf51]
Successors: []
---
0x1e4 JUMPDEST
0x1e5 PUSH1 0x40
0x1e7 DUP1
0x1e8 MLOAD
0x1e9 PUSH1 0x1
0x1eb PUSH1 0xa0
0x1ed PUSH1 0x2
0x1ef EXP
0x1f0 SUB
0x1f1 SWAP1
0x1f2 SWAP3
0x1f3 AND
0x1f4 DUP3
0x1f5 MSTORE
0x1f6 MLOAD
0x1f7 SWAP1
0x1f8 DUP2
0x1f9 SWAP1
0x1fa SUB
0x1fb PUSH1 0x20
0x1fd ADD
0x1fe SWAP1
0x1ff RETURN
---
0x1e4: JUMPDEST 
0x1e5: V148 = 0x40
0x1e8: V149 = M[0x40]
0x1e9: V150 = 0x1
0x1eb: V151 = 0xa0
0x1ed: V152 = 0x2
0x1ef: V153 = EXP 0x2 0xa0
0x1f0: V154 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f3: V155 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1f5: M[V149] = V155
0x1f6: V156 = M[0x40]
0x1fa: V157 = SUB V149 V156
0x1fb: V158 = 0x20
0x1fd: V159 = ADD 0x20 V157
0x1ff: RETURN V156 V159
---
Entry stack: [V12, 0x1e4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1e4]

================================

Block 0x200
[0x200:0x206]
---
Predecessors: [0x30]
Successors: [0x207, 0x208]
---
0x200 JUMPDEST
0x201 CALLVALUE
0x202 ISZERO
0x203 PUSH2 0x208
0x206 JUMPI
---
0x200: JUMPDEST 
0x201: V160 = CALLVALUE
0x202: V161 = ISZERO V160
0x203: V162 = 0x208
0x206: JUMPI 0x208 V161
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x207
[0x207:0x207]
---
Predecessors: [0x200]
Successors: []
---
0x207 INVALID
---
0x207: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x208
[0x208:0x20f]
---
Predecessors: [0x200]
Successors: [0x950]
---
0x208 JUMPDEST
0x209 PUSH2 0x210
0x20c PUSH2 0x950
0x20f JUMP
---
0x208: JUMPDEST 
0x209: V163 = 0x210
0x20c: V164 = 0x950
0x20f: JUMP 0x950
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x210]
Exit stack: [V12, 0x210]

================================

Block 0x210
[0x210:0x223]
---
Predecessors: [0x950, 0xdea]
Successors: []
---
0x210 JUMPDEST
0x211 PUSH1 0x40
0x213 DUP1
0x214 MLOAD
0x215 SWAP2
0x216 ISZERO
0x217 ISZERO
0x218 DUP3
0x219 MSTORE
0x21a MLOAD
0x21b SWAP1
0x21c DUP2
0x21d SWAP1
0x21e SUB
0x21f PUSH1 0x20
0x221 ADD
0x222 SWAP1
0x223 RETURN
---
0x210: JUMPDEST 
0x211: V165 = 0x40
0x214: V166 = M[0x40]
0x216: V167 = ISZERO S0
0x217: V168 = ISZERO V167
0x219: M[V166] = V168
0x21a: V169 = M[0x40]
0x21e: V170 = SUB V166 V169
0x21f: V171 = 0x20
0x221: V172 = ADD 0x20 V170
0x223: RETURN V169 V172
---
Entry stack: [V12, 0x210, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x210]

================================

Block 0x224
[0x224:0x22a]
---
Predecessors: [0x3b]
Successors: [0x22b, 0x22c]
---
0x224 JUMPDEST
0x225 CALLVALUE
0x226 ISZERO
0x227 PUSH2 0x22c
0x22a JUMPI
---
0x224: JUMPDEST 
0x225: V173 = CALLVALUE
0x226: V174 = ISZERO V173
0x227: V175 = 0x22c
0x22a: JUMPI 0x22c V174
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22b
[0x22b:0x22b]
---
Predecessors: [0x224]
Successors: []
---
0x22b INVALID
---
0x22b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22c
[0x22c:0x236]
---
Predecessors: [0x224]
Successors: [0x959]
---
0x22c JUMPDEST
0x22d PUSH2 0x1c0
0x230 PUSH1 0x4
0x232 CALLDATALOAD
0x233 PUSH2 0x959
0x236 JUMP
---
0x22c: JUMPDEST 
0x22d: V176 = 0x1c0
0x230: V177 = 0x4
0x232: V178 = CALLDATALOAD 0x4
0x233: V179 = 0x959
0x236: JUMP 0x959
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c0, V178]
Exit stack: [V12, 0x1c0, V178]

================================

Block 0x237
[0x237:0x238]
---
Predecessors: []
Successors: []
---
0x237 JUMPDEST
0x238 STOP
---
0x237: JUMPDEST 
0x238: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x239
[0x239:0x23f]
---
Predecessors: [0x46, 0x101]
Successors: [0x240, 0x241]
---
0x239 JUMPDEST
0x23a CALLVALUE
0x23b ISZERO
0x23c PUSH2 0x241
0x23f JUMPI
---
0x239: JUMPDEST 
0x23a: V180 = CALLVALUE
0x23b: V181 = ISZERO V180
0x23c: V182 = 0x241
0x23f: JUMPI 0x241 V181
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x240
[0x240:0x240]
---
Predecessors: [0x239]
Successors: []
---
0x240 INVALID
---
0x240: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x241
[0x241:0x248]
---
Predecessors: [0x239, 0x435]
Successors: [0xae8]
---
0x241 JUMPDEST
0x242 PUSH2 0x249
0x245 PUSH2 0xae8
0x248 JUMP
---
0x241: JUMPDEST 
0x242: V183 = 0x249
0x245: V184 = 0xae8
0x248: JUMP 0xae8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249]
Exit stack: [V12, 0x249]

================================

Block 0x249
[0x249:0x25a]
---
Predecessors: [0xae8, 0xaee, 0xaf4, 0xafa, 0xdd2, 0xdfa, 0xe00, 0xe06, 0xe73, 0xf39, 0xf45, 0xf60, 0x112a]
Successors: []
---
0x249 JUMPDEST
0x24a PUSH1 0x40
0x24c DUP1
0x24d MLOAD
0x24e SWAP2
0x24f DUP3
0x250 MSTORE
0x251 MLOAD
0x252 SWAP1
0x253 DUP2
0x254 SWAP1
0x255 SUB
0x256 PUSH1 0x20
0x258 ADD
0x259 SWAP1
0x25a RETURN
---
0x249: JUMPDEST 
0x24a: V185 = 0x40
0x24d: V186 = M[0x40]
0x250: M[V186] = S0
0x251: V187 = M[0x40]
0x255: V188 = SUB V186 V187
0x256: V189 = 0x20
0x258: V190 = ADD 0x20 V188
0x25a: RETURN V187 V190
---
Entry stack: [V12, 0x249, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x249]

================================

Block 0x25b
[0x25b:0x261]
---
Predecessors: [0x51]
Successors: [0x262, 0x263]
---
0x25b JUMPDEST
0x25c CALLVALUE
0x25d ISZERO
0x25e PUSH2 0x263
0x261 JUMPI
---
0x25b: JUMPDEST 
0x25c: V191 = CALLVALUE
0x25d: V192 = ISZERO V191
0x25e: V193 = 0x263
0x261: JUMPI 0x263 V192
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x262
[0x262:0x262]
---
Predecessors: [0x25b]
Successors: []
---
0x262 INVALID
---
0x262: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x263
[0x263:0x26a]
---
Predecessors: [0x25b]
Successors: [0xaee]
---
0x263 JUMPDEST
0x264 PUSH2 0x249
0x267 PUSH2 0xaee
0x26a JUMP
---
0x263: JUMPDEST 
0x264: V194 = 0x249
0x267: V195 = 0xaee
0x26a: JUMP 0xaee
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249]
Exit stack: [V12, 0x249]

================================

Block 0x26b
[0x26b:0x27c]
---
Predecessors: []
Successors: []
---
0x26b JUMPDEST
0x26c PUSH1 0x40
0x26e DUP1
0x26f MLOAD
0x270 SWAP2
0x271 DUP3
0x272 MSTORE
0x273 MLOAD
0x274 SWAP1
0x275 DUP2
0x276 SWAP1
0x277 SUB
0x278 PUSH1 0x20
0x27a ADD
0x27b SWAP1
0x27c RETURN
---
0x26b: JUMPDEST 
0x26c: V196 = 0x40
0x26f: V197 = M[0x40]
0x272: M[V197] = S0
0x273: V198 = M[0x40]
0x277: V199 = SUB V197 V198
0x278: V200 = 0x20
0x27a: V201 = ADD 0x20 V199
0x27c: RETURN V198 V201
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x27d
[0x27d:0x283]
---
Predecessors: [0x5c]
Successors: [0x284, 0x285]
---
0x27d JUMPDEST
0x27e CALLVALUE
0x27f ISZERO
0x280 PUSH2 0x285
0x283 JUMPI
---
0x27d: JUMPDEST 
0x27e: V202 = CALLVALUE
0x27f: V203 = ISZERO V202
0x280: V204 = 0x285
0x283: JUMPI 0x285 V203
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x284
[0x284:0x284]
---
Predecessors: [0x27d]
Successors: []
---
0x284 INVALID
---
0x284: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x285
[0x285:0x28c]
---
Predecessors: [0x27d]
Successors: [0xaf4]
---
0x285 JUMPDEST
0x286 PUSH2 0x249
0x289 PUSH2 0xaf4
0x28c JUMP
---
0x285: JUMPDEST 
0x286: V205 = 0x249
0x289: V206 = 0xaf4
0x28c: JUMP 0xaf4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249]
Exit stack: [V12, 0x249]

================================

Block 0x28d
[0x28d:0x29e]
---
Predecessors: []
Successors: []
---
0x28d JUMPDEST
0x28e PUSH1 0x40
0x290 DUP1
0x291 MLOAD
0x292 SWAP2
0x293 DUP3
0x294 MSTORE
0x295 MLOAD
0x296 SWAP1
0x297 DUP2
0x298 SWAP1
0x299 SUB
0x29a PUSH1 0x20
0x29c ADD
0x29d SWAP1
0x29e RETURN
---
0x28d: JUMPDEST 
0x28e: V207 = 0x40
0x291: V208 = M[0x40]
0x294: M[V208] = S0
0x295: V209 = M[0x40]
0x299: V210 = SUB V208 V209
0x29a: V211 = 0x20
0x29c: V212 = ADD 0x20 V210
0x29e: RETURN V209 V212
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x29f
[0x29f:0x2a5]
---
Predecessors: [0x67]
Successors: [0x2a6, 0x2a7]
---
0x29f JUMPDEST
0x2a0 CALLVALUE
0x2a1 ISZERO
0x2a2 PUSH2 0x2a7
0x2a5 JUMPI
---
0x29f: JUMPDEST 
0x2a0: V213 = CALLVALUE
0x2a1: V214 = ISZERO V213
0x2a2: V215 = 0x2a7
0x2a5: JUMPI 0x2a7 V214
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a6
[0x2a6:0x2a6]
---
Predecessors: [0x29f]
Successors: []
---
0x2a6 INVALID
---
0x2a6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a7
[0x2a7:0x2ae]
---
Predecessors: [0x29f]
Successors: [0xafa]
---
0x2a7 JUMPDEST
0x2a8 PUSH2 0x249
0x2ab PUSH2 0xafa
0x2ae JUMP
---
0x2a7: JUMPDEST 
0x2a8: V216 = 0x249
0x2ab: V217 = 0xafa
0x2ae: JUMP 0xafa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249]
Exit stack: [V12, 0x249]

================================

Block 0x2af
[0x2af:0x2c0]
---
Predecessors: []
Successors: []
---
0x2af JUMPDEST
0x2b0 PUSH1 0x40
0x2b2 DUP1
0x2b3 MLOAD
0x2b4 SWAP2
0x2b5 DUP3
0x2b6 MSTORE
0x2b7 MLOAD
0x2b8 SWAP1
0x2b9 DUP2
0x2ba SWAP1
0x2bb SUB
0x2bc PUSH1 0x20
0x2be ADD
0x2bf SWAP1
0x2c0 RETURN
---
0x2af: JUMPDEST 
0x2b0: V218 = 0x40
0x2b3: V219 = M[0x40]
0x2b6: M[V219] = S0
0x2b7: V220 = M[0x40]
0x2bb: V221 = SUB V219 V220
0x2bc: V222 = 0x20
0x2be: V223 = ADD 0x20 V221
0x2c0: RETURN V220 V223
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c1
[0x2c1:0x2c7]
---
Predecessors: [0x72]
Successors: [0x2c8, 0x2c9]
---
0x2c1 JUMPDEST
0x2c2 CALLVALUE
0x2c3 ISZERO
0x2c4 PUSH2 0x2c9
0x2c7 JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V224 = CALLVALUE
0x2c3: V225 = ISZERO V224
0x2c4: V226 = 0x2c9
0x2c7: JUMPI 0x2c9 V225
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c8
[0x2c8:0x2c8]
---
Predecessors: [0x2c1]
Successors: []
---
0x2c8 INVALID
---
0x2c8: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c9
[0x2c9:0x2d0]
---
Predecessors: [0x2c1]
Successors: [0xb00]
---
0x2c9 JUMPDEST
0x2ca PUSH2 0x1c0
0x2cd PUSH2 0xb00
0x2d0 JUMP
---
0x2c9: JUMPDEST 
0x2ca: V227 = 0x1c0
0x2cd: V228 = 0xb00
0x2d0: JUMP 0xb00
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c0]
Exit stack: [V12, 0x1c0]

================================

Block 0x2d1
[0x2d1:0x2d2]
---
Predecessors: []
Successors: []
---
0x2d1 JUMPDEST
0x2d2 STOP
---
0x2d1: JUMPDEST 
0x2d2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2d3
[0x2d3:0x2d9]
---
Predecessors: [0x7d]
Successors: [0x2da, 0x2db]
---
0x2d3 JUMPDEST
0x2d4 CALLVALUE
0x2d5 ISZERO
0x2d6 PUSH2 0x2db
0x2d9 JUMPI
---
0x2d3: JUMPDEST 
0x2d4: V229 = CALLVALUE
0x2d5: V230 = ISZERO V229
0x2d6: V231 = 0x2db
0x2d9: JUMPI 0x2db V230
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2da
[0x2da:0x2da]
---
Predecessors: [0x2d3]
Successors: []
---
0x2da INVALID
---
0x2da: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2db
[0x2db:0x2e2]
---
Predecessors: [0x2d3]
Successors: [0xcc7]
---
0x2db JUMPDEST
0x2dc PUSH2 0x1c0
0x2df PUSH2 0xcc7
0x2e2 JUMP
---
0x2db: JUMPDEST 
0x2dc: V232 = 0x1c0
0x2df: V233 = 0xcc7
0x2e2: JUMP 0xcc7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c0]
Exit stack: [V12, 0x1c0]

================================

Block 0x2e3
[0x2e3:0x2e4]
---
Predecessors: []
Successors: []
---
0x2e3 JUMPDEST
0x2e4 STOP
---
0x2e3: JUMPDEST 
0x2e4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2e5
[0x2e5:0x2eb]
---
Predecessors: [0x88]
Successors: [0x2ec, 0x2ed]
---
0x2e5 JUMPDEST
0x2e6 CALLVALUE
0x2e7 ISZERO
0x2e8 PUSH2 0x2ed
0x2eb JUMPI
---
0x2e5: JUMPDEST 
0x2e6: V234 = CALLVALUE
0x2e7: V235 = ISZERO V234
0x2e8: V236 = 0x2ed
0x2eb: JUMPI 0x2ed V235
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ec
[0x2ec:0x2ec]
---
Predecessors: [0x2e5]
Successors: []
---
0x2ec INVALID
---
0x2ec: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ed
[0x2ed:0x2f4]
---
Predecessors: [0x2e5]
Successors: [0xd8e]
---
0x2ed JUMPDEST
0x2ee PUSH2 0x1c0
0x2f1 PUSH2 0xd8e
0x2f4 JUMP
---
0x2ed: JUMPDEST 
0x2ee: V237 = 0x1c0
0x2f1: V238 = 0xd8e
0x2f4: JUMP 0xd8e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c0]
Exit stack: [V12, 0x1c0]

================================

Block 0x2f5
[0x2f5:0x2f6]
---
Predecessors: []
Successors: []
---
0x2f5 JUMPDEST
0x2f6 STOP
---
0x2f5: JUMPDEST 
0x2f6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2f7
[0x2f7:0x2fd]
---
Predecessors: [0x93, 0x9e]
Successors: [0x2fe, 0x2ff]
---
0x2f7 JUMPDEST
0x2f8 CALLVALUE
0x2f9 ISZERO
0x2fa PUSH2 0x2ff
0x2fd JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V239 = CALLVALUE
0x2f9: V240 = ISZERO V239
0x2fa: V241 = 0x2ff
0x2fd: JUMPI 0x2ff V240
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fe
[0x2fe:0x2fe]
---
Predecessors: [0x2f7]
Successors: []
---
0x2fe INVALID
---
0x2fe: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ff
[0x2ff:0x306]
---
Predecessors: [0x2f7, 0x307]
Successors: [0xdd2]
---
0x2ff JUMPDEST
0x300 PUSH2 0x249
0x303 PUSH2 0xdd2
0x306 JUMP
---
0x2ff: JUMPDEST 
0x300: V242 = 0x249
0x303: V243 = 0xdd2
0x306: JUMP 0xdd2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249]
Exit stack: [V12, 0x249]

================================

Block 0x307
[0x307:0x31f]
---
Predecessors: []
Successors: [0x2ff, 0x320]
---
0x307 JUMPDEST
0x308 PUSH1 0x40
0x30a DUP1
0x30b MLOAD
0x30c SWAP2
0x30d DUP3
0x30e MSTORE
0x30f MLOAD
0x310 SWAP1
0x311 DUP2
0x312 SWAP1
0x313 SUB
0x314 PUSH1 0x20
0x316 ADD
0x317 SWAP1
0x318 RETURN
0x319 JUMPDEST
0x31a CALLVALUE
0x31b ISZERO
0x31c PUSH2 0x2ff
0x31f JUMPI
---
0x307: JUMPDEST 
0x308: V244 = 0x40
0x30b: V245 = M[0x40]
0x30e: M[V245] = S0
0x30f: V246 = M[0x40]
0x313: V247 = SUB V245 V246
0x314: V248 = 0x20
0x316: V249 = ADD 0x20 V247
0x318: RETURN V246 V249
0x319: JUMPDEST 
0x31a: V250 = CALLVALUE
0x31b: V251 = ISZERO V250
0x31c: V252 = 0x2ff
0x31f: JUMPI 0x2ff V251
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x320
[0x320:0x328]
---
Predecessors: [0x307]
Successors: [0xdd2]
---
0x320 INVALID
0x321 JUMPDEST
0x322 PUSH2 0x249
0x325 PUSH2 0xdd2
0x328 JUMP
---
0x320: INVALID 
0x321: JUMPDEST 
0x322: V253 = 0x249
0x325: V254 = 0xdd2
0x328: JUMP 0xdd2
---
Entry stack: []
Stack pops: 0
Stack additions: [0x249]
Exit stack: []

================================

Block 0x329
[0x329:0x33a]
---
Predecessors: []
Successors: []
---
0x329 JUMPDEST
0x32a PUSH1 0x40
0x32c DUP1
0x32d MLOAD
0x32e SWAP2
0x32f DUP3
0x330 MSTORE
0x331 MLOAD
0x332 SWAP1
0x333 DUP2
0x334 SWAP1
0x335 SUB
0x336 PUSH1 0x20
0x338 ADD
0x339 SWAP1
0x33a RETURN
---
0x329: JUMPDEST 
0x32a: V255 = 0x40
0x32d: V256 = M[0x40]
0x330: M[V256] = S0
0x331: V257 = M[0x40]
0x335: V258 = SUB V256 V257
0x336: V259 = 0x20
0x338: V260 = ADD 0x20 V258
0x33a: RETURN V257 V260
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x33b
[0x33b:0x341]
---
Predecessors: [0xa9]
Successors: [0x342, 0x343]
---
0x33b JUMPDEST
0x33c CALLVALUE
0x33d ISZERO
0x33e PUSH2 0x343
0x341 JUMPI
---
0x33b: JUMPDEST 
0x33c: V261 = CALLVALUE
0x33d: V262 = ISZERO V261
0x33e: V263 = 0x343
0x341: JUMPI 0x343 V262
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x342
[0x342:0x342]
---
Predecessors: [0x33b]
Successors: []
---
0x342 INVALID
---
0x342: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x343
[0x343:0x34a]
---
Predecessors: [0x33b]
Successors: [0xdea]
---
0x343 JUMPDEST
0x344 PUSH2 0x210
0x347 PUSH2 0xdea
0x34a JUMP
---
0x343: JUMPDEST 
0x344: V264 = 0x210
0x347: V265 = 0xdea
0x34a: JUMP 0xdea
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x210]
Exit stack: [V12, 0x210]

================================

Block 0x34b
[0x34b:0x35e]
---
Predecessors: []
Successors: []
---
0x34b JUMPDEST
0x34c PUSH1 0x40
0x34e DUP1
0x34f MLOAD
0x350 SWAP2
0x351 ISZERO
0x352 ISZERO
0x353 DUP3
0x354 MSTORE
0x355 MLOAD
0x356 SWAP1
0x357 DUP2
0x358 SWAP1
0x359 SUB
0x35a PUSH1 0x20
0x35c ADD
0x35d SWAP1
0x35e RETURN
---
0x34b: JUMPDEST 
0x34c: V266 = 0x40
0x34f: V267 = M[0x40]
0x351: V268 = ISZERO S0
0x352: V269 = ISZERO V268
0x354: M[V267] = V269
0x355: V270 = M[0x40]
0x359: V271 = SUB V267 V270
0x35a: V272 = 0x20
0x35c: V273 = ADD 0x20 V271
0x35e: RETURN V270 V273
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x35f
[0x35f:0x365]
---
Predecessors: [0xb4]
Successors: [0x366, 0x367]
---
0x35f JUMPDEST
0x360 CALLVALUE
0x361 ISZERO
0x362 PUSH2 0x367
0x365 JUMPI
---
0x35f: JUMPDEST 
0x360: V274 = CALLVALUE
0x361: V275 = ISZERO V274
0x362: V276 = 0x367
0x365: JUMPI 0x367 V275
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x366
[0x366:0x366]
---
Predecessors: [0x35f]
Successors: []
---
0x366 INVALID
---
0x366: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x367
[0x367:0x36e]
---
Predecessors: [0x35f]
Successors: [0xdfa]
---
0x367 JUMPDEST
0x368 PUSH2 0x249
0x36b PUSH2 0xdfa
0x36e JUMP
---
0x367: JUMPDEST 
0x368: V277 = 0x249
0x36b: V278 = 0xdfa
0x36e: JUMP 0xdfa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249]
Exit stack: [V12, 0x249]

================================

Block 0x36f
[0x36f:0x380]
---
Predecessors: []
Successors: []
---
0x36f JUMPDEST
0x370 PUSH1 0x40
0x372 DUP1
0x373 MLOAD
0x374 SWAP2
0x375 DUP3
0x376 MSTORE
0x377 MLOAD
0x378 SWAP1
0x379 DUP2
0x37a SWAP1
0x37b SUB
0x37c PUSH1 0x20
0x37e ADD
0x37f SWAP1
0x380 RETURN
---
0x36f: JUMPDEST 
0x370: V279 = 0x40
0x373: V280 = M[0x40]
0x376: M[V280] = S0
0x377: V281 = M[0x40]
0x37b: V282 = SUB V280 V281
0x37c: V283 = 0x20
0x37e: V284 = ADD 0x20 V282
0x380: RETURN V281 V284
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x381
[0x381:0x387]
---
Predecessors: [0xbf]
Successors: [0x388, 0x389]
---
0x381 JUMPDEST
0x382 CALLVALUE
0x383 ISZERO
0x384 PUSH2 0x389
0x387 JUMPI
---
0x381: JUMPDEST 
0x382: V285 = CALLVALUE
0x383: V286 = ISZERO V285
0x384: V287 = 0x389
0x387: JUMPI 0x389 V286
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x388
[0x388:0x388]
---
Predecessors: [0x381]
Successors: []
---
0x388 INVALID
---
0x388: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x389
[0x389:0x390]
---
Predecessors: [0x381]
Successors: [0xe00]
---
0x389 JUMPDEST
0x38a PUSH2 0x249
0x38d PUSH2 0xe00
0x390 JUMP
---
0x389: JUMPDEST 
0x38a: V288 = 0x249
0x38d: V289 = 0xe00
0x390: JUMP 0xe00
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249]
Exit stack: [V12, 0x249]

================================

Block 0x391
[0x391:0x3a2]
---
Predecessors: []
Successors: []
---
0x391 JUMPDEST
0x392 PUSH1 0x40
0x394 DUP1
0x395 MLOAD
0x396 SWAP2
0x397 DUP3
0x398 MSTORE
0x399 MLOAD
0x39a SWAP1
0x39b DUP2
0x39c SWAP1
0x39d SUB
0x39e PUSH1 0x20
0x3a0 ADD
0x3a1 SWAP1
0x3a2 RETURN
---
0x391: JUMPDEST 
0x392: V290 = 0x40
0x395: V291 = M[0x40]
0x398: M[V291] = S0
0x399: V292 = M[0x40]
0x39d: V293 = SUB V291 V292
0x39e: V294 = 0x20
0x3a0: V295 = ADD 0x20 V293
0x3a2: RETURN V292 V295
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3a3
[0x3a3:0x3a9]
---
Predecessors: [0xca]
Successors: [0x3aa, 0x3ab]
---
0x3a3 JUMPDEST
0x3a4 CALLVALUE
0x3a5 ISZERO
0x3a6 PUSH2 0x3ab
0x3a9 JUMPI
---
0x3a3: JUMPDEST 
0x3a4: V296 = CALLVALUE
0x3a5: V297 = ISZERO V296
0x3a6: V298 = 0x3ab
0x3a9: JUMPI 0x3ab V297
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3aa
[0x3aa:0x3aa]
---
Predecessors: [0x3a3]
Successors: []
---
0x3aa INVALID
---
0x3aa: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ab
[0x3ab:0x3b2]
---
Predecessors: [0x3a3]
Successors: [0xe06]
---
0x3ab JUMPDEST
0x3ac PUSH2 0x249
0x3af PUSH2 0xe06
0x3b2 JUMP
---
0x3ab: JUMPDEST 
0x3ac: V299 = 0x249
0x3af: V300 = 0xe06
0x3b2: JUMP 0xe06
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249]
Exit stack: [V12, 0x249]

================================

Block 0x3b3
[0x3b3:0x3c4]
---
Predecessors: []
Successors: []
---
0x3b3 JUMPDEST
0x3b4 PUSH1 0x40
0x3b6 DUP1
0x3b7 MLOAD
0x3b8 SWAP2
0x3b9 DUP3
0x3ba MSTORE
0x3bb MLOAD
0x3bc SWAP1
0x3bd DUP2
0x3be SWAP1
0x3bf SUB
0x3c0 PUSH1 0x20
0x3c2 ADD
0x3c3 SWAP1
0x3c4 RETURN
---
0x3b3: JUMPDEST 
0x3b4: V301 = 0x40
0x3b7: V302 = M[0x40]
0x3ba: M[V302] = S0
0x3bb: V303 = M[0x40]
0x3bf: V304 = SUB V302 V303
0x3c0: V305 = 0x20
0x3c2: V306 = ADD 0x20 V304
0x3c4: RETURN V303 V306
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3c5
[0x3c5:0x3cb]
---
Predecessors: [0xd5]
Successors: [0x3cc, 0x3cd]
---
0x3c5 JUMPDEST
0x3c6 CALLVALUE
0x3c7 ISZERO
0x3c8 PUSH2 0x3cd
0x3cb JUMPI
---
0x3c5: JUMPDEST 
0x3c6: V307 = CALLVALUE
0x3c7: V308 = ISZERO V307
0x3c8: V309 = 0x3cd
0x3cb: JUMPI 0x3cd V308
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3cc
[0x3cc:0x3cc]
---
Predecessors: [0x3c5]
Successors: []
---
0x3cc INVALID
---
0x3cc: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3cd
[0x3cd:0x3d4]
---
Predecessors: [0x3c5]
Successors: [0xe0c]
---
0x3cd JUMPDEST
0x3ce PUSH2 0x1c0
0x3d1 PUSH2 0xe0c
0x3d4 JUMP
---
0x3cd: JUMPDEST 
0x3ce: V310 = 0x1c0
0x3d1: V311 = 0xe0c
0x3d4: JUMP 0xe0c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c0]
Exit stack: [V12, 0x1c0]

================================

Block 0x3d5
[0x3d5:0x3d6]
---
Predecessors: []
Successors: []
---
0x3d5 JUMPDEST
0x3d6 STOP
---
0x3d5: JUMPDEST 
0x3d6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3d7
[0x3d7:0x3dd]
---
Predecessors: [0xe0]
Successors: [0x3de, 0x3df]
---
0x3d7 JUMPDEST
0x3d8 CALLVALUE
0x3d9 ISZERO
0x3da PUSH2 0x3df
0x3dd JUMPI
---
0x3d7: JUMPDEST 
0x3d8: V312 = CALLVALUE
0x3d9: V313 = ISZERO V312
0x3da: V314 = 0x3df
0x3dd: JUMPI 0x3df V313
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3de
[0x3de:0x3de]
---
Predecessors: [0x3d7]
Successors: []
---
0x3de INVALID
---
0x3de: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3df
[0x3df:0x3e6]
---
Predecessors: [0x3d7]
Successors: [0xe64]
---
0x3df JUMPDEST
0x3e0 PUSH2 0x1e4
0x3e3 PUSH2 0xe64
0x3e6 JUMP
---
0x3df: JUMPDEST 
0x3e0: V315 = 0x1e4
0x3e3: V316 = 0xe64
0x3e6: JUMP 0xe64
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e4]
Exit stack: [V12, 0x1e4]

================================

Block 0x3e7
[0x3e7:0x402]
---
Predecessors: []
Successors: []
---
0x3e7 JUMPDEST
0x3e8 PUSH1 0x40
0x3ea DUP1
0x3eb MLOAD
0x3ec PUSH1 0x1
0x3ee PUSH1 0xa0
0x3f0 PUSH1 0x2
0x3f2 EXP
0x3f3 SUB
0x3f4 SWAP1
0x3f5 SWAP3
0x3f6 AND
0x3f7 DUP3
0x3f8 MSTORE
0x3f9 MLOAD
0x3fa SWAP1
0x3fb DUP2
0x3fc SWAP1
0x3fd SUB
0x3fe PUSH1 0x20
0x400 ADD
0x401 SWAP1
0x402 RETURN
---
0x3e7: JUMPDEST 
0x3e8: V317 = 0x40
0x3eb: V318 = M[0x40]
0x3ec: V319 = 0x1
0x3ee: V320 = 0xa0
0x3f0: V321 = 0x2
0x3f2: V322 = EXP 0x2 0xa0
0x3f3: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f6: V324 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: M[V318] = V324
0x3f9: V325 = M[0x40]
0x3fd: V326 = SUB V318 V325
0x3fe: V327 = 0x20
0x400: V328 = ADD 0x20 V326
0x402: RETURN V325 V328
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x403
[0x403:0x409]
---
Predecessors: [0xeb]
Successors: [0x40a, 0x40b]
---
0x403 JUMPDEST
0x404 CALLVALUE
0x405 ISZERO
0x406 PUSH2 0x40b
0x409 JUMPI
---
0x403: JUMPDEST 
0x404: V329 = CALLVALUE
0x405: V330 = ISZERO V329
0x406: V331 = 0x40b
0x409: JUMPI 0x40b V330
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x40a
[0x40a:0x40a]
---
Predecessors: [0x403]
Successors: []
---
0x40a INVALID
---
0x40a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x40b
[0x40b:0x412]
---
Predecessors: [0x403]
Successors: [0xe73]
---
0x40b JUMPDEST
0x40c PUSH2 0x249
0x40f PUSH2 0xe73
0x412 JUMP
---
0x40b: JUMPDEST 
0x40c: V332 = 0x249
0x40f: V333 = 0xe73
0x412: JUMP 0xe73
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249]
Exit stack: [V12, 0x249]

================================

Block 0x413
[0x413:0x424]
---
Predecessors: []
Successors: []
---
0x413 JUMPDEST
0x414 PUSH1 0x40
0x416 DUP1
0x417 MLOAD
0x418 SWAP2
0x419 DUP3
0x41a MSTORE
0x41b MLOAD
0x41c SWAP1
0x41d DUP2
0x41e SWAP1
0x41f SUB
0x420 PUSH1 0x20
0x422 ADD
0x423 SWAP1
0x424 RETURN
---
0x413: JUMPDEST 
0x414: V334 = 0x40
0x417: V335 = M[0x40]
0x41a: M[V335] = S0
0x41b: V336 = M[0x40]
0x41f: V337 = SUB V335 V336
0x420: V338 = 0x20
0x422: V339 = ADD 0x20 V337
0x424: RETURN V336 V339
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x425
[0x425:0x42b]
---
Predecessors: [0xf6]
Successors: [0x42c, 0x42d]
---
0x425 JUMPDEST
0x426 CALLVALUE
0x427 ISZERO
0x428 PUSH2 0x42d
0x42b JUMPI
---
0x425: JUMPDEST 
0x426: V340 = CALLVALUE
0x427: V341 = ISZERO V340
0x428: V342 = 0x42d
0x42b: JUMPI 0x42d V341
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x42c
[0x42c:0x42c]
---
Predecessors: [0x425]
Successors: []
---
0x42c INVALID
---
0x42c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x42d
[0x42d:0x434]
---
Predecessors: [0x425]
Successors: [0xe79]
---
0x42d JUMPDEST
0x42e PUSH2 0x1c0
0x431 PUSH2 0xe79
0x434 JUMP
---
0x42d: JUMPDEST 
0x42e: V343 = 0x1c0
0x431: V344 = 0xe79
0x434: JUMP 0xe79
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c0]
Exit stack: [V12, 0x1c0]

================================

Block 0x435
[0x435:0x43d]
---
Predecessors: []
Successors: [0x241, 0x43e]
---
0x435 JUMPDEST
0x436 STOP
0x437 JUMPDEST
0x438 CALLVALUE
0x439 ISZERO
0x43a PUSH2 0x241
0x43d JUMPI
---
0x435: JUMPDEST 
0x436: STOP 
0x437: JUMPDEST 
0x438: V345 = CALLVALUE
0x439: V346 = ISZERO V345
0x43a: V347 = 0x241
0x43d: JUMPI 0x241 V346
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x43e
[0x43e:0x446]
---
Predecessors: [0x435]
Successors: [0xae8]
---
0x43e INVALID
0x43f JUMPDEST
0x440 PUSH2 0x249
0x443 PUSH2 0xae8
0x446 JUMP
---
0x43e: INVALID 
0x43f: JUMPDEST 
0x440: V348 = 0x249
0x443: V349 = 0xae8
0x446: JUMP 0xae8
---
Entry stack: []
Stack pops: 0
Stack additions: [0x249]
Exit stack: []

================================

Block 0x447
[0x447:0x458]
---
Predecessors: []
Successors: []
---
0x447 JUMPDEST
0x448 PUSH1 0x40
0x44a DUP1
0x44b MLOAD
0x44c SWAP2
0x44d DUP3
0x44e MSTORE
0x44f MLOAD
0x450 SWAP1
0x451 DUP2
0x452 SWAP1
0x453 SUB
0x454 PUSH1 0x20
0x456 ADD
0x457 SWAP1
0x458 RETURN
---
0x447: JUMPDEST 
0x448: V350 = 0x40
0x44b: V351 = M[0x40]
0x44e: M[V351] = S0
0x44f: V352 = M[0x40]
0x453: V353 = SUB V351 V352
0x454: V354 = 0x20
0x456: V355 = ADD 0x20 V353
0x458: RETURN V352 V355
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x459
[0x459:0x45f]
---
Predecessors: [0x10c]
Successors: [0x460, 0x461]
---
0x459 JUMPDEST
0x45a CALLVALUE
0x45b ISZERO
0x45c PUSH2 0x461
0x45f JUMPI
---
0x459: JUMPDEST 
0x45a: V356 = CALLVALUE
0x45b: V357 = ISZERO V356
0x45c: V358 = 0x461
0x45f: JUMPI 0x461 V357
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x460
[0x460:0x460]
---
Predecessors: [0x459]
Successors: []
---
0x460 INVALID
---
0x460: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x461
[0x461:0x474]
---
Predecessors: [0x459]
Successors: [0xed9]
---
0x461 JUMPDEST
0x462 PUSH2 0x475
0x465 PUSH1 0x1
0x467 PUSH1 0xa0
0x469 PUSH1 0x2
0x46b EXP
0x46c SUB
0x46d PUSH1 0x4
0x46f CALLDATALOAD
0x470 AND
0x471 PUSH2 0xed9
0x474 JUMP
---
0x461: JUMPDEST 
0x462: V359 = 0x475
0x465: V360 = 0x1
0x467: V361 = 0xa0
0x469: V362 = 0x2
0x46b: V363 = EXP 0x2 0xa0
0x46c: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46d: V365 = 0x4
0x46f: V366 = CALLDATALOAD 0x4
0x470: V367 = AND V366 0xffffffffffffffffffffffffffffffffffffffff
0x471: V368 = 0xed9
0x474: JUMP 0xed9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x475, V367]
Exit stack: [V12, 0x475, V367]

================================

Block 0x475
[0x475:0x48f]
---
Predecessors: [0xed9]
Successors: [0x490, 0x491]
---
0x475 JUMPDEST
0x476 PUSH1 0x40
0x478 MLOAD
0x479 DUP1
0x47a DUP5
0x47b DUP2
0x47c MSTORE
0x47d PUSH1 0x20
0x47f ADD
0x480 DUP4
0x481 DUP2
0x482 MSTORE
0x483 PUSH1 0x20
0x485 ADD
0x486 DUP3
0x487 PUSH1 0x3
0x489 DUP2
0x48a GT
0x48b ISZERO
0x48c PUSH2 0x491
0x48f JUMPI
---
0x475: JUMPDEST 
0x476: V369 = 0x40
0x478: V370 = M[0x40]
0x47c: M[V370] = V1310
0x47d: V371 = 0x20
0x47f: V372 = ADD 0x20 V370
0x482: M[V372] = V1313
0x483: V373 = 0x20
0x485: V374 = ADD 0x20 V372
0x487: V375 = 0x3
0x48a: V376 = GT V1318 0x3
0x48b: V377 = ISZERO V376
0x48c: V378 = 0x491
0x48f: JUMPI 0x491 V377
---
Entry stack: [V12, 0x475, V1310, V1313, V1318]
Stack pops: 3
Stack additions: [S2, S1, S0, V370, V374, S0]
Exit stack: [V12, 0x475, V1310, V1313, V1318, V370, V374, V1318]

================================

Block 0x490
[0x490:0x490]
---
Predecessors: [0x475]
Successors: []
---
0x490 INVALID
---
0x490: INVALID 
---
Entry stack: [V12, 0x475, V1310, V1313, V1318, V370, V374, V1318]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x475, V1310, V1313, V1318, V370, V374, V1318]

================================

Block 0x491
[0x491:0x4a6]
---
Predecessors: [0x475]
Successors: []
---
0x491 JUMPDEST
0x492 PUSH1 0xff
0x494 AND
0x495 DUP2
0x496 MSTORE
0x497 PUSH1 0x20
0x499 ADD
0x49a SWAP4
0x49b POP
0x49c POP
0x49d POP
0x49e POP
0x49f PUSH1 0x40
0x4a1 MLOAD
0x4a2 DUP1
0x4a3 SWAP2
0x4a4 SUB
0x4a5 SWAP1
0x4a6 RETURN
---
0x491: JUMPDEST 
0x492: V379 = 0xff
0x494: V380 = AND 0xff V1318
0x496: M[V374] = V380
0x497: V381 = 0x20
0x499: V382 = ADD 0x20 V374
0x49f: V383 = 0x40
0x4a1: V384 = M[0x40]
0x4a4: V385 = SUB V382 V384
0x4a6: RETURN V384 V385
---
Entry stack: [V12, 0x475, V1310, V1313, V1318, V370, V374, V1318]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x475]

================================

Block 0x4a7
[0x4a7:0x4ad]
---
Predecessors: [0x117]
Successors: [0x4ae, 0x4af]
---
0x4a7 JUMPDEST
0x4a8 CALLVALUE
0x4a9 ISZERO
0x4aa PUSH2 0x4af
0x4ad JUMPI
---
0x4a7: JUMPDEST 
0x4a8: V386 = CALLVALUE
0x4a9: V387 = ISZERO V386
0x4aa: V388 = 0x4af
0x4ad: JUMPI 0x4af V387
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ae
[0x4ae:0x4ae]
---
Predecessors: [0x4a7]
Successors: []
---
0x4ae INVALID
---
0x4ae: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4af
[0x4af:0x4b6]
---
Predecessors: [0x4a7]
Successors: [0xefd]
---
0x4af JUMPDEST
0x4b0 PUSH2 0x1c0
0x4b3 PUSH2 0xefd
0x4b6 JUMP
---
0x4af: JUMPDEST 
0x4b0: V389 = 0x1c0
0x4b3: V390 = 0xefd
0x4b6: JUMP 0xefd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c0]
Exit stack: [V12, 0x1c0]

================================

Block 0x4b7
[0x4b7:0x4b8]
---
Predecessors: []
Successors: []
---
0x4b7 JUMPDEST
0x4b8 STOP
---
0x4b7: JUMPDEST 
0x4b8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4b9
[0x4b9:0x4bf]
---
Predecessors: [0x122]
Successors: [0x4c0, 0x4c1]
---
0x4b9 JUMPDEST
0x4ba CALLVALUE
0x4bb ISZERO
0x4bc PUSH2 0x4c1
0x4bf JUMPI
---
0x4b9: JUMPDEST 
0x4ba: V391 = CALLVALUE
0x4bb: V392 = ISZERO V391
0x4bc: V393 = 0x4c1
0x4bf: JUMPI 0x4c1 V392
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c0
[0x4c0:0x4c0]
---
Predecessors: [0x4b9]
Successors: []
---
0x4c0 INVALID
---
0x4c0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c1
[0x4c1:0x4c8]
---
Predecessors: [0x4b9]
Successors: [0xf39]
---
0x4c1 JUMPDEST
0x4c2 PUSH2 0x249
0x4c5 PUSH2 0xf39
0x4c8 JUMP
---
0x4c1: JUMPDEST 
0x4c2: V394 = 0x249
0x4c5: V395 = 0xf39
0x4c8: JUMP 0xf39
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249]
Exit stack: [V12, 0x249]

================================

Block 0x4c9
[0x4c9:0x4da]
---
Predecessors: []
Successors: []
---
0x4c9 JUMPDEST
0x4ca PUSH1 0x40
0x4cc DUP1
0x4cd MLOAD
0x4ce SWAP2
0x4cf DUP3
0x4d0 MSTORE
0x4d1 MLOAD
0x4d2 SWAP1
0x4d3 DUP2
0x4d4 SWAP1
0x4d5 SUB
0x4d6 PUSH1 0x20
0x4d8 ADD
0x4d9 SWAP1
0x4da RETURN
---
0x4c9: JUMPDEST 
0x4ca: V396 = 0x40
0x4cd: V397 = M[0x40]
0x4d0: M[V397] = S0
0x4d1: V398 = M[0x40]
0x4d5: V399 = SUB V397 V398
0x4d6: V400 = 0x20
0x4d8: V401 = ADD 0x20 V399
0x4da: RETURN V398 V401
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4db
[0x4db:0x4e1]
---
Predecessors: [0x12d]
Successors: [0x4e2, 0x4e3]
---
0x4db JUMPDEST
0x4dc CALLVALUE
0x4dd ISZERO
0x4de PUSH2 0x4e3
0x4e1 JUMPI
---
0x4db: JUMPDEST 
0x4dc: V402 = CALLVALUE
0x4dd: V403 = ISZERO V402
0x4de: V404 = 0x4e3
0x4e1: JUMPI 0x4e3 V403
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e2
[0x4e2:0x4e2]
---
Predecessors: [0x4db]
Successors: []
---
0x4e2 INVALID
---
0x4e2: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e3
[0x4e3:0x4ea]
---
Predecessors: [0x4db]
Successors: [0xf45]
---
0x4e3 JUMPDEST
0x4e4 PUSH2 0x249
0x4e7 PUSH2 0xf45
0x4ea JUMP
---
0x4e3: JUMPDEST 
0x4e4: V405 = 0x249
0x4e7: V406 = 0xf45
0x4ea: JUMP 0xf45
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249]
Exit stack: [V12, 0x249]

================================

Block 0x4eb
[0x4eb:0x4fc]
---
Predecessors: []
Successors: []
---
0x4eb JUMPDEST
0x4ec PUSH1 0x40
0x4ee DUP1
0x4ef MLOAD
0x4f0 SWAP2
0x4f1 DUP3
0x4f2 MSTORE
0x4f3 MLOAD
0x4f4 SWAP1
0x4f5 DUP2
0x4f6 SWAP1
0x4f7 SUB
0x4f8 PUSH1 0x20
0x4fa ADD
0x4fb SWAP1
0x4fc RETURN
---
0x4eb: JUMPDEST 
0x4ec: V407 = 0x40
0x4ef: V408 = M[0x40]
0x4f2: M[V408] = S0
0x4f3: V409 = M[0x40]
0x4f7: V410 = SUB V408 V409
0x4f8: V411 = 0x20
0x4fa: V412 = ADD 0x20 V410
0x4fc: RETURN V409 V412
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4fd
[0x4fd:0x503]
---
Predecessors: [0x138]
Successors: [0x504, 0x505]
---
0x4fd JUMPDEST
0x4fe CALLVALUE
0x4ff ISZERO
0x500 PUSH2 0x505
0x503 JUMPI
---
0x4fd: JUMPDEST 
0x4fe: V413 = CALLVALUE
0x4ff: V414 = ISZERO V413
0x500: V415 = 0x505
0x503: JUMPI 0x505 V414
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x504
[0x504:0x504]
---
Predecessors: [0x4fd]
Successors: []
---
0x504 INVALID
---
0x504: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x505
[0x505:0x50c]
---
Predecessors: [0x4fd]
Successors: [0xf51]
---
0x505 JUMPDEST
0x506 PUSH2 0x1e4
0x509 PUSH2 0xf51
0x50c JUMP
---
0x505: JUMPDEST 
0x506: V416 = 0x1e4
0x509: V417 = 0xf51
0x50c: JUMP 0xf51
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e4]
Exit stack: [V12, 0x1e4]

================================

Block 0x50d
[0x50d:0x528]
---
Predecessors: []
Successors: []
---
0x50d JUMPDEST
0x50e PUSH1 0x40
0x510 DUP1
0x511 MLOAD
0x512 PUSH1 0x1
0x514 PUSH1 0xa0
0x516 PUSH1 0x2
0x518 EXP
0x519 SUB
0x51a SWAP1
0x51b SWAP3
0x51c AND
0x51d DUP3
0x51e MSTORE
0x51f MLOAD
0x520 SWAP1
0x521 DUP2
0x522 SWAP1
0x523 SUB
0x524 PUSH1 0x20
0x526 ADD
0x527 SWAP1
0x528 RETURN
---
0x50d: JUMPDEST 
0x50e: V418 = 0x40
0x511: V419 = M[0x40]
0x512: V420 = 0x1
0x514: V421 = 0xa0
0x516: V422 = 0x2
0x518: V423 = EXP 0x2 0xa0
0x519: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51c: V425 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x51e: M[V419] = V425
0x51f: V426 = M[0x40]
0x523: V427 = SUB V419 V426
0x524: V428 = 0x20
0x526: V429 = ADD 0x20 V427
0x528: RETURN V426 V429
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x529
[0x529:0x52f]
---
Predecessors: [0x143]
Successors: [0x530, 0x531]
---
0x529 JUMPDEST
0x52a CALLVALUE
0x52b ISZERO
0x52c PUSH2 0x531
0x52f JUMPI
---
0x529: JUMPDEST 
0x52a: V430 = CALLVALUE
0x52b: V431 = ISZERO V430
0x52c: V432 = 0x531
0x52f: JUMPI 0x531 V431
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x530
[0x530:0x530]
---
Predecessors: [0x529]
Successors: []
---
0x530 INVALID
---
0x530: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x531
[0x531:0x538]
---
Predecessors: [0x529]
Successors: [0xf60]
---
0x531 JUMPDEST
0x532 PUSH2 0x249
0x535 PUSH2 0xf60
0x538 JUMP
---
0x531: JUMPDEST 
0x532: V433 = 0x249
0x535: V434 = 0xf60
0x538: JUMP 0xf60
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249]
Exit stack: [V12, 0x249]

================================

Block 0x539
[0x539:0x54a]
---
Predecessors: []
Successors: []
---
0x539 JUMPDEST
0x53a PUSH1 0x40
0x53c DUP1
0x53d MLOAD
0x53e SWAP2
0x53f DUP3
0x540 MSTORE
0x541 MLOAD
0x542 SWAP1
0x543 DUP2
0x544 SWAP1
0x545 SUB
0x546 PUSH1 0x20
0x548 ADD
0x549 SWAP1
0x54a RETURN
---
0x539: JUMPDEST 
0x53a: V435 = 0x40
0x53d: V436 = M[0x40]
0x540: M[V436] = S0
0x541: V437 = M[0x40]
0x545: V438 = SUB V436 V437
0x546: V439 = 0x20
0x548: V440 = ADD 0x20 V438
0x54a: RETURN V437 V440
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x54b
[0x54b:0x551]
---
Predecessors: [0x14e]
Successors: [0x552, 0x553]
---
0x54b JUMPDEST
0x54c CALLVALUE
0x54d ISZERO
0x54e PUSH2 0x553
0x551 JUMPI
---
0x54b: JUMPDEST 
0x54c: V441 = CALLVALUE
0x54d: V442 = ISZERO V441
0x54e: V443 = 0x553
0x551: JUMPI 0x553 V442
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x552
[0x552:0x552]
---
Predecessors: [0x54b]
Successors: []
---
0x552 INVALID
---
0x552: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x553
[0x553:0x55a]
---
Predecessors: [0x54b]
Successors: [0xf67]
---
0x553 JUMPDEST
0x554 PUSH2 0x1c0
0x557 PUSH2 0xf67
0x55a JUMP
---
0x553: JUMPDEST 
0x554: V444 = 0x1c0
0x557: V445 = 0xf67
0x55a: JUMP 0xf67
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c0]
Exit stack: [V12, 0x1c0]

================================

Block 0x55b
[0x55b:0x55c]
---
Predecessors: []
Successors: []
---
0x55b JUMPDEST
0x55c STOP
---
0x55b: JUMPDEST 
0x55c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x55d
[0x55d:0x563]
---
Predecessors: [0x159]
Successors: [0x564, 0x565]
---
0x55d JUMPDEST
0x55e CALLVALUE
0x55f ISZERO
0x560 PUSH2 0x565
0x563 JUMPI
---
0x55d: JUMPDEST 
0x55e: V446 = CALLVALUE
0x55f: V447 = ISZERO V446
0x560: V448 = 0x565
0x563: JUMPI 0x565 V447
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x564
[0x564:0x564]
---
Predecessors: [0x55d]
Successors: []
---
0x564 INVALID
---
0x564: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x565
[0x565:0x578]
---
Predecessors: [0x55d]
Successors: [0x112a]
---
0x565 JUMPDEST
0x566 PUSH2 0x249
0x569 PUSH1 0x1
0x56b PUSH1 0xa0
0x56d PUSH1 0x2
0x56f EXP
0x570 SUB
0x571 PUSH1 0x4
0x573 CALLDATALOAD
0x574 AND
0x575 PUSH2 0x112a
0x578 JUMP
---
0x565: JUMPDEST 
0x566: V449 = 0x249
0x569: V450 = 0x1
0x56b: V451 = 0xa0
0x56d: V452 = 0x2
0x56f: V453 = EXP 0x2 0xa0
0x570: V454 = SUB 0x10000000000000000000000000000000000000000 0x1
0x571: V455 = 0x4
0x573: V456 = CALLDATALOAD 0x4
0x574: V457 = AND V456 0xffffffffffffffffffffffffffffffffffffffff
0x575: V458 = 0x112a
0x578: JUMP 0x112a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x249, V457]
Exit stack: [V12, 0x249, V457]

================================

Block 0x579
[0x579:0x58a]
---
Predecessors: []
Successors: []
---
0x579 JUMPDEST
0x57a PUSH1 0x40
0x57c DUP1
0x57d MLOAD
0x57e SWAP2
0x57f DUP3
0x580 MSTORE
0x581 MLOAD
0x582 SWAP1
0x583 DUP2
0x584 SWAP1
0x585 SUB
0x586 PUSH1 0x20
0x588 ADD
0x589 SWAP1
0x58a RETURN
---
0x579: JUMPDEST 
0x57a: V459 = 0x40
0x57d: V460 = M[0x40]
0x580: M[V460] = S0
0x581: V461 = M[0x40]
0x585: V462 = SUB V460 V461
0x586: V463 = 0x20
0x588: V464 = ADD 0x20 V462
0x58a: RETURN V461 V464
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x58b
[0x58b:0x591]
---
Predecessors: [0x164]
Successors: [0x592, 0x593]
---
0x58b JUMPDEST
0x58c CALLVALUE
0x58d ISZERO
0x58e PUSH2 0x593
0x591 JUMPI
---
0x58b: JUMPDEST 
0x58c: V465 = CALLVALUE
0x58d: V466 = ISZERO V465
0x58e: V467 = 0x593
0x591: JUMPI 0x593 V466
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x592
[0x592:0x592]
---
Predecessors: [0x58b]
Successors: []
---
0x592 INVALID
---
0x592: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x593
[0x593:0x5a6]
---
Predecessors: [0x58b]
Successors: [0x113c]
---
0x593 JUMPDEST
0x594 PUSH2 0x1c0
0x597 PUSH1 0x1
0x599 PUSH1 0xa0
0x59b PUSH1 0x2
0x59d EXP
0x59e SUB
0x59f PUSH1 0x4
0x5a1 CALLDATALOAD
0x5a2 AND
0x5a3 PUSH2 0x113c
0x5a6 JUMP
---
0x593: JUMPDEST 
0x594: V468 = 0x1c0
0x597: V469 = 0x1
0x599: V470 = 0xa0
0x59b: V471 = 0x2
0x59d: V472 = EXP 0x2 0xa0
0x59e: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59f: V474 = 0x4
0x5a1: V475 = CALLDATALOAD 0x4
0x5a2: V476 = AND V475 0xffffffffffffffffffffffffffffffffffffffff
0x5a3: V477 = 0x113c
0x5a6: JUMP 0x113c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c0, V476]
Exit stack: [V12, 0x1c0, V476]

================================

Block 0x5a7
[0x5a7:0x5a8]
---
Predecessors: []
Successors: []
---
0x5a7 JUMPDEST
0x5a8 STOP
---
0x5a7: JUMPDEST 
0x5a8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5a9
[0x5a9:0x5af]
---
Predecessors: [0x16f]
Successors: [0x5b0, 0x5b1]
---
0x5a9 JUMPDEST
0x5aa CALLVALUE
0x5ab ISZERO
0x5ac PUSH2 0x5b1
0x5af JUMPI
---
0x5a9: JUMPDEST 
0x5aa: V478 = CALLVALUE
0x5ab: V479 = ISZERO V478
0x5ac: V480 = 0x5b1
0x5af: JUMPI 0x5b1 V479
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5b0
[0x5b0:0x5b0]
---
Predecessors: [0x5a9]
Successors: []
---
0x5b0 INVALID
---
0x5b0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5b1
[0x5b1:0x5c4]
---
Predecessors: [0x5a9]
Successors: [0x1195]
---
0x5b1 JUMPDEST
0x5b2 PUSH2 0x1c0
0x5b5 PUSH1 0x1
0x5b7 PUSH1 0xa0
0x5b9 PUSH1 0x2
0x5bb EXP
0x5bc SUB
0x5bd PUSH1 0x4
0x5bf CALLDATALOAD
0x5c0 AND
0x5c1 PUSH2 0x1195
0x5c4 JUMP
---
0x5b1: JUMPDEST 
0x5b2: V481 = 0x1c0
0x5b5: V482 = 0x1
0x5b7: V483 = 0xa0
0x5b9: V484 = 0x2
0x5bb: V485 = EXP 0x2 0xa0
0x5bc: V486 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bd: V487 = 0x4
0x5bf: V488 = CALLDATALOAD 0x4
0x5c0: V489 = AND V488 0xffffffffffffffffffffffffffffffffffffffff
0x5c1: V490 = 0x1195
0x5c4: JUMP 0x1195
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c0, V489]
Exit stack: [V12, 0x1c0, V489]

================================

Block 0x5c5
[0x5c5:0x5c6]
---
Predecessors: []
Successors: []
---
0x5c5 JUMPDEST
0x5c6 STOP
---
0x5c5: JUMPDEST 
0x5c6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5c7
[0x5c7:0x5dd]
---
Predecessors: [0x1b2]
Successors: [0x5de, 0x5e3]
---
0x5c7 JUMPDEST
0x5c8 PUSH1 0x0
0x5ca PUSH1 0x0
0x5cc PUSH1 0x0
0x5ce PUSH8 0x16345785d8a0000
0x5d7 CALLVALUE
0x5d8 LT
0x5d9 ISZERO
0x5da PUSH2 0x5e3
0x5dd JUMPI
---
0x5c7: JUMPDEST 
0x5c8: V491 = 0x0
0x5ca: V492 = 0x0
0x5cc: V493 = 0x0
0x5ce: V494 = 0x16345785d8a0000
0x5d7: V495 = CALLVALUE
0x5d8: V496 = LT V495 0x16345785d8a0000
0x5d9: V497 = ISZERO V496
0x5da: V498 = 0x5e3
0x5dd: JUMPI 0x5e3 V497
---
Entry stack: [V12, 0x1c0, 0x1bb, V136]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0]

================================

Block 0x5de
[0x5de:0x5e2]
---
Predecessors: [0x5c7]
Successors: []
---
0x5de PUSH1 0x0
0x5e0 PUSH1 0x0
0x5e2 REVERT
---
0x5de: V499 = 0x0
0x5e0: V500 = 0x0
0x5e2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0]

================================

Block 0x5e3
[0x5e3:0x5f4]
---
Predecessors: [0x5c7]
Successors: [0x5f5, 0x602]
---
0x5e3 JUMPDEST
0x5e4 PUSH8 0x29a2241af62c0000
0x5ed CALLVALUE
0x5ee LT
0x5ef DUP1
0x5f0 ISZERO
0x5f1 PUSH2 0x602
0x5f4 JUMPI
---
0x5e3: JUMPDEST 
0x5e4: V501 = 0x29a2241af62c0000
0x5ed: V502 = CALLVALUE
0x5ee: V503 = LT V502 0x29a2241af62c0000
0x5f0: V504 = ISZERO V503
0x5f1: V505 = 0x602
0x5f4: JUMPI 0x602 V504
---
Entry stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V503]
Exit stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0, V503]

================================

Block 0x5f5
[0x5f5:0x601]
---
Predecessors: [0x5e3]
Successors: [0x602]
---
0x5f5 POP
0x5f6 PUSH8 0x16345785d8a0000
0x5ff CALLVALUE
0x600 LT
0x601 ISZERO
---
0x5f6: V506 = 0x16345785d8a0000
0x5ff: V507 = CALLVALUE
0x600: V508 = LT V507 0x16345785d8a0000
0x601: V509 = ISZERO V508
---
Entry stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0, V503]
Stack pops: 1
Stack additions: [V509]
Exit stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0, V509]

================================

Block 0x602
[0x602:0x607]
---
Predecessors: [0x5e3, 0x5f5]
Successors: [0x608, 0x640]
---
0x602 JUMPDEST
0x603 ISZERO
0x604 PUSH2 0x640
0x607 JUMPI
---
0x602: JUMPDEST 
0x603: V510 = ISZERO S0
0x604: V511 = 0x640
0x607: JUMPI 0x640 V510
---
Entry stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0]

================================

Block 0x608
[0x608:0x62b]
---
Predecessors: [0x602]
Successors: [0x11f4]
---
0x608 PUSH1 0x3
0x60a SWAP3
0x60b POP
0x60c PUSH2 0x63d
0x60f PUSH2 0x638
0x612 PUSH8 0xde0b6b3a7640000
0x61b PUSH2 0x62c
0x61e CALLVALUE
0x61f PUSH2 0x3e8
0x622 PUSH4 0xffffffff
0x627 PUSH2 0x11f4
0x62a AND
0x62b JUMP
---
0x608: V512 = 0x3
0x60c: V513 = 0x63d
0x60f: V514 = 0x638
0x612: V515 = 0xde0b6b3a7640000
0x61b: V516 = 0x62c
0x61e: V517 = CALLVALUE
0x61f: V518 = 0x3e8
0x622: V519 = 0xffffffff
0x627: V520 = 0x11f4
0x62a: V521 = AND 0x11f4 0xffffffff
0x62b: JUMP 0x11f4
---
Entry stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x3, S1, S0, 0x63d, 0x638, 0xde0b6b3a7640000, 0x62c, V517, 0x3e8]
Exit stack: [V12, 0x1c0, 0x1bb, V136, 0x3, 0x0, 0x0, 0x63d, 0x638, 0xde0b6b3a7640000, 0x62c, V517, 0x3e8]

================================

Block 0x62c
[0x62c:0x637]
---
Predecessors: [0x121c]
Successors: [0x1223]
---
0x62c JUMPDEST
0x62d SWAP1
0x62e PUSH4 0xffffffff
0x633 PUSH2 0x1223
0x636 AND
0x637 JUMP
---
0x62c: JUMPDEST 
0x62e: V522 = 0xffffffff
0x633: V523 = 0x1223
0x636: V524 = AND 0x1223 0xffffffff
0x637: JUMP 0x1223
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x638
[0x638:0x63c]
---
Predecessors: [0x89b, 0x1125, 0x121c, 0x128c, 0x12f0]
Successors: [0x1266]
---
0x638 JUMPDEST
0x639 PUSH2 0x1266
0x63c JUMP
---
0x638: JUMPDEST 
0x639: V525 = 0x1266
0x63c: JUMP 0x1266
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x63d
[0x63d:0x63f]
---
Predecessors: [0x89b, 0x1125, 0x121c, 0x128c, 0x12f0]
Successors: [0x640]
---
0x63d JUMPDEST
0x63e SWAP2
0x63f POP
---
0x63d: JUMPDEST 
---
Entry stack: []
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [S0, S1]

================================

Block 0x640
[0x640:0x651]
---
Predecessors: [0x602, 0x63d]
Successors: [0x652, 0x65f]
---
0x640 JUMPDEST
0x641 PUSH8 0x8ac7230489e80000
0x64a CALLVALUE
0x64b LT
0x64c DUP1
0x64d ISZERO
0x64e PUSH2 0x65f
0x651 JUMPI
---
0x640: JUMPDEST 
0x641: V526 = 0x8ac7230489e80000
0x64a: V527 = CALLVALUE
0x64b: V528 = LT V527 0x8ac7230489e80000
0x64d: V529 = ISZERO V528
0x64e: V530 = 0x65f
0x651: JUMPI 0x65f V529
---
Entry stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V528]
Exit stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0, V528]

================================

Block 0x652
[0x652:0x65e]
---
Predecessors: [0x640]
Successors: [0x65f]
---
0x652 POP
0x653 PUSH8 0x29a2241af62c0000
0x65c CALLVALUE
0x65d LT
0x65e ISZERO
---
0x653: V531 = 0x29a2241af62c0000
0x65c: V532 = CALLVALUE
0x65d: V533 = LT V532 0x29a2241af62c0000
0x65e: V534 = ISZERO V533
---
Entry stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0, V528]
Stack pops: 1
Stack additions: [V534]
Exit stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0, V534]

================================

Block 0x65f
[0x65f:0x664]
---
Predecessors: [0x640, 0x652]
Successors: [0x665, 0x69d]
---
0x65f JUMPDEST
0x660 ISZERO
0x661 PUSH2 0x69d
0x664 JUMPI
---
0x65f: JUMPDEST 
0x660: V535 = ISZERO S0
0x661: V536 = 0x69d
0x664: JUMPI 0x69d V535
---
Entry stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0]

================================

Block 0x665
[0x665:0x688]
---
Predecessors: [0x65f]
Successors: [0x11f4]
---
0x665 PUSH1 0x2
0x667 SWAP3
0x668 POP
0x669 PUSH2 0x69a
0x66c PUSH2 0x638
0x66f PUSH8 0xde0b6b3a7640000
0x678 PUSH2 0x62c
0x67b CALLVALUE
0x67c PUSH2 0x5dc
0x67f PUSH4 0xffffffff
0x684 PUSH2 0x11f4
0x687 AND
0x688 JUMP
---
0x665: V537 = 0x2
0x669: V538 = 0x69a
0x66c: V539 = 0x638
0x66f: V540 = 0xde0b6b3a7640000
0x678: V541 = 0x62c
0x67b: V542 = CALLVALUE
0x67c: V543 = 0x5dc
0x67f: V544 = 0xffffffff
0x684: V545 = 0x11f4
0x687: V546 = AND 0x11f4 0xffffffff
0x688: JUMP 0x11f4
---
Entry stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x2, S1, S0, 0x69a, 0x638, 0xde0b6b3a7640000, 0x62c, V542, 0x5dc]
Exit stack: [V12, 0x1c0, 0x1bb, V136, 0x2, 0x0, 0x0, 0x69a, 0x638, 0xde0b6b3a7640000, 0x62c, V542, 0x5dc]

================================

Block 0x689
[0x689:0x694]
---
Predecessors: []
Successors: [0x1223]
---
0x689 JUMPDEST
0x68a SWAP1
0x68b PUSH4 0xffffffff
0x690 PUSH2 0x1223
0x693 AND
0x694 JUMP
---
0x689: JUMPDEST 
0x68b: V547 = 0xffffffff
0x690: V548 = 0x1223
0x693: V549 = AND 0x1223 0xffffffff
0x694: JUMP 0x1223
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S0, S1]

================================

Block 0x695
[0x695:0x699]
---
Predecessors: []
Successors: [0x1266]
---
0x695 JUMPDEST
0x696 PUSH2 0x1266
0x699 JUMP
---
0x695: JUMPDEST 
0x696: V550 = 0x1266
0x699: JUMP 0x1266
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x69a
[0x69a:0x69c]
---
Predecessors: [0x89b, 0x1125, 0x121c, 0x128c, 0x12f0]
Successors: [0x69d]
---
0x69a JUMPDEST
0x69b SWAP2
0x69c POP
---
0x69a: JUMPDEST 
---
Entry stack: []
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [S0, S1]

================================

Block 0x69d
[0x69d:0x6ac]
---
Predecessors: [0x65f, 0x69a]
Successors: [0x6ad, 0x6e5]
---
0x69d JUMPDEST
0x69e PUSH8 0x8ac7230489e80000
0x6a7 CALLVALUE
0x6a8 LT
0x6a9 PUSH2 0x6e5
0x6ac JUMPI
---
0x69d: JUMPDEST 
0x69e: V551 = 0x8ac7230489e80000
0x6a7: V552 = CALLVALUE
0x6a8: V553 = LT V552 0x8ac7230489e80000
0x6a9: V554 = 0x6e5
0x6ac: JUMPI 0x6e5 V553
---
Entry stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0]

================================

Block 0x6ad
[0x6ad:0x6d0]
---
Predecessors: [0x69d]
Successors: [0x11f4]
---
0x6ad PUSH1 0x1
0x6af SWAP3
0x6b0 POP
0x6b1 PUSH2 0x6e2
0x6b4 PUSH2 0x638
0x6b7 PUSH8 0xde0b6b3a7640000
0x6c0 PUSH2 0x62c
0x6c3 CALLVALUE
0x6c4 PUSH2 0x9c4
0x6c7 PUSH4 0xffffffff
0x6cc PUSH2 0x11f4
0x6cf AND
0x6d0 JUMP
---
0x6ad: V555 = 0x1
0x6b1: V556 = 0x6e2
0x6b4: V557 = 0x638
0x6b7: V558 = 0xde0b6b3a7640000
0x6c0: V559 = 0x62c
0x6c3: V560 = CALLVALUE
0x6c4: V561 = 0x9c4
0x6c7: V562 = 0xffffffff
0x6cc: V563 = 0x11f4
0x6cf: V564 = AND 0x11f4 0xffffffff
0x6d0: JUMP 0x11f4
---
Entry stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x1, S1, S0, 0x6e2, 0x638, 0xde0b6b3a7640000, 0x62c, V560, 0x9c4]
Exit stack: [V12, 0x1c0, 0x1bb, V136, 0x1, 0x0, 0x0, 0x6e2, 0x638, 0xde0b6b3a7640000, 0x62c, V560, 0x9c4]

================================

Block 0x6d1
[0x6d1:0x6dc]
---
Predecessors: []
Successors: [0x1223]
---
0x6d1 JUMPDEST
0x6d2 SWAP1
0x6d3 PUSH4 0xffffffff
0x6d8 PUSH2 0x1223
0x6db AND
0x6dc JUMP
---
0x6d1: JUMPDEST 
0x6d3: V565 = 0xffffffff
0x6d8: V566 = 0x1223
0x6db: V567 = AND 0x1223 0xffffffff
0x6dc: JUMP 0x1223
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S0, S1]

================================

Block 0x6dd
[0x6dd:0x6e1]
---
Predecessors: []
Successors: [0x1266]
---
0x6dd JUMPDEST
0x6de PUSH2 0x1266
0x6e1 JUMP
---
0x6dd: JUMPDEST 
0x6de: V568 = 0x1266
0x6e1: JUMP 0x1266
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6e2
[0x6e2:0x6e4]
---
Predecessors: [0x89b, 0x1125, 0x121c, 0x128c, 0x12f0]
Successors: [0x6e5]
---
0x6e2 JUMPDEST
0x6e3 SWAP2
0x6e4 POP
---
0x6e2: JUMPDEST 
---
Entry stack: []
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [S0, S1]

================================

Block 0x6e5
[0x6e5:0x6fd]
---
Predecessors: [0x69d, 0x6e2]
Successors: [0x1291]
---
0x6e5 JUMPDEST
0x6e6 PUSH3 0x3d090
0x6ea PUSH2 0x6fe
0x6ed PUSH1 0x5
0x6ef SLOAD
0x6f0 DUP5
0x6f1 PUSH2 0x1291
0x6f4 SWAP1
0x6f5 SWAP2
0x6f6 SWAP1
0x6f7 PUSH4 0xffffffff
0x6fc AND
0x6fd JUMP
---
0x6e5: JUMPDEST 
0x6e6: V569 = 0x3d090
0x6ea: V570 = 0x6fe
0x6ed: V571 = 0x5
0x6ef: V572 = S[0x5]
0x6f1: V573 = 0x1291
0x6f7: V574 = 0xffffffff
0x6fc: V575 = AND 0xffffffff 0x1291
0x6fd: JUMP 0x1291
---
Entry stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x3d090, 0x6fe, S1, V572]
Exit stack: [V12, 0x1c0, 0x1bb, V136, 0x0, 0x0, 0x0, 0x3d090, 0x6fe, 0x0, V572]

================================

Block 0x6fe
[0x6fe:0x704]
---
Predecessors: [0x121c]
Successors: [0x705, 0x70a]
---
0x6fe JUMPDEST
0x6ff GT
0x700 ISZERO
0x701 PUSH2 0x70a
0x704 JUMPI
---
0x6fe: JUMPDEST 
0x6ff: V576 = GT S0 S1
0x700: V577 = ISZERO V576
0x701: V578 = 0x70a
0x704: JUMPI 0x70a V577
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x705
[0x705:0x709]
---
Predecessors: [0x6fe]
Successors: []
---
0x705 PUSH1 0x0
0x707 PUSH1 0x0
0x709 REVERT
---
0x705: V579 = 0x0
0x707: V580 = 0x0
0x709: REVERT 0x0 0x0
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x70a
[0x70a:0x787]
---
Predecessors: [0x6fe]
Successors: [0x788, 0x789]
---
0x70a JUMPDEST
0x70b POP
0x70c PUSH1 0x1
0x70e PUSH1 0xa0
0x710 PUSH1 0x2
0x712 EXP
0x713 SUB
0x714 DUP1
0x715 DUP5
0x716 AND
0x717 PUSH1 0x0
0x719 DUP2
0x71a DUP2
0x71b MSTORE
0x71c PUSH1 0x9
0x71e PUSH1 0x20
0x720 MSTORE
0x721 PUSH1 0x40
0x723 DUP1
0x724 DUP3
0x725 SHA3
0x726 PUSH1 0x2
0x728 SLOAD
0x729 DUP3
0x72a MLOAD
0x72b PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x74c DUP2
0x74d MSTORE
0x74e PUSH1 0x4
0x750 DUP2
0x751 ADD
0x752 SWAP6
0x753 SWAP1
0x754 SWAP6
0x755 MSTORE
0x756 PUSH1 0x24
0x758 DUP6
0x759 ADD
0x75a DUP8
0x75b SWAP1
0x75c MSTORE
0x75d SWAP2
0x75e MLOAD
0x75f SWAP1
0x760 SWAP5
0x761 PUSH2 0x100
0x764 SWAP1
0x765 SWAP3
0x766 DIV
0x767 SWAP1
0x768 SWAP2
0x769 AND
0x76a SWAP3
0x76b PUSH4 0xa9059cbb
0x770 SWAP3
0x771 PUSH1 0x44
0x773 DUP1
0x774 DUP4
0x775 ADD
0x776 SWAP4
0x777 SWAP2
0x778 SWAP3
0x779 DUP3
0x77a SWAP1
0x77b SUB
0x77c ADD
0x77d DUP2
0x77e DUP4
0x77f DUP8
0x780 DUP1
0x781 EXTCODESIZE
0x782 ISZERO
0x783 ISZERO
0x784 PUSH2 0x789
0x787 JUMPI
---
0x70a: JUMPDEST 
0x70c: V581 = 0x1
0x70e: V582 = 0xa0
0x710: V583 = 0x2
0x712: V584 = EXP 0x2 0xa0
0x713: V585 = SUB 0x10000000000000000000000000000000000000000 0x1
0x716: V586 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x717: V587 = 0x0
0x71b: M[0x0] = V586
0x71c: V588 = 0x9
0x71e: V589 = 0x20
0x720: M[0x20] = 0x9
0x721: V590 = 0x40
0x725: V591 = SHA3 0x0 0x40
0x726: V592 = 0x2
0x728: V593 = S[0x2]
0x72a: V594 = M[0x40]
0x72b: V595 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x74d: M[V594] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x74e: V596 = 0x4
0x751: V597 = ADD V594 0x4
0x755: M[V597] = V586
0x756: V598 = 0x24
0x759: V599 = ADD V594 0x24
0x75c: M[V599] = S1
0x75e: V600 = M[0x40]
0x761: V601 = 0x100
0x766: V602 = DIV V593 0x100
0x769: V603 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0x76b: V604 = 0xa9059cbb
0x771: V605 = 0x44
0x775: V606 = ADD V594 0x44
0x77b: V607 = SUB V594 V600
0x77c: V608 = ADD V607 0x44
0x781: V609 = EXTCODESIZE V603
0x782: V610 = ISZERO V609
0x783: V611 = ISZERO V610
0x784: V612 = 0x789
0x787: JUMPI 0x789 V611
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V591, V603, 0xa9059cbb, V606, 0x0, V600, V608, V600, 0x0, V603]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V591, V603, 0xa9059cbb, V606, 0x0, V600, V608, V600, 0x0, V603]

================================

Block 0x788
[0x788:0x788]
---
Predecessors: [0x70a]
Successors: []
---
0x788 INVALID
---
0x788: INVALID 
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V591, V603, 0xa9059cbb, V606, 0x0, V600, V608, V600, 0x0, V603]
Stack pops: 0
Stack additions: []
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V591, V603, 0xa9059cbb, V606, 0x0, V600, V608, V600, 0x0, V603]

================================

Block 0x789
[0x789:0x795]
---
Predecessors: [0x70a]
Successors: [0x796, 0x797]
---
0x789 JUMPDEST
0x78a PUSH2 0x2c6
0x78d GAS
0x78e SUB
0x78f CALL
0x790 ISZERO
0x791 ISZERO
0x792 PUSH2 0x797
0x795 JUMPI
---
0x789: JUMPDEST 
0x78a: V613 = 0x2c6
0x78d: V614 = GAS
0x78e: V615 = SUB V614 0x2c6
0x78f: V616 = CALL V615 V603 0x0 V600 V608 V600 0x0
0x790: V617 = ISZERO V616
0x791: V618 = ISZERO V617
0x792: V619 = 0x797
0x795: JUMPI 0x797 V618
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V591, V603, 0xa9059cbb, V606, 0x0, V600, V608, V600, 0x0, V603]
Stack pops: 6
Stack additions: []
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V591, V603, 0xa9059cbb, V606]

================================

Block 0x796
[0x796:0x796]
---
Predecessors: [0x789]
Successors: []
---
0x796 INVALID
---
0x796: INVALID 
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V591, V603, 0xa9059cbb, V606]
Stack pops: 0
Stack additions: []
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V591, V603, 0xa9059cbb, V606]

================================

Block 0x797
[0x797:0x7ae]
---
Predecessors: [0x789]
Successors: [0x1291]
---
0x797 JUMPDEST
0x798 POP
0x799 POP
0x79a POP
0x79b PUSH1 0x1
0x79d DUP2
0x79e ADD
0x79f SLOAD
0x7a0 PUSH2 0x7af
0x7a3 SWAP1
0x7a4 DUP4
0x7a5 PUSH4 0xffffffff
0x7aa PUSH2 0x1291
0x7ad AND
0x7ae JUMP
---
0x797: JUMPDEST 
0x79b: V620 = 0x1
0x79e: V621 = ADD V591 0x1
0x79f: V622 = S[V621]
0x7a0: V623 = 0x7af
0x7a5: V624 = 0xffffffff
0x7aa: V625 = 0x1291
0x7ad: V626 = AND 0x1291 0xffffffff
0x7ae: JUMP 0x1291
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V591, V603, 0xa9059cbb, V606]
Stack pops: 5
Stack additions: [S4, S3, 0x7af, V622, S4]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V591, 0x7af, V622, S4]

================================

Block 0x7af
[0x7af:0x7c5]
---
Predecessors: [0x121c]
Successors: [0x1291]
---
0x7af JUMPDEST
0x7b0 PUSH1 0x1
0x7b2 DUP3
0x7b3 ADD
0x7b4 SSTORE
0x7b5 DUP1
0x7b6 SLOAD
0x7b7 PUSH2 0x7c6
0x7ba SWAP1
0x7bb CALLVALUE
0x7bc PUSH4 0xffffffff
0x7c1 PUSH2 0x1291
0x7c4 AND
0x7c5 JUMP
---
0x7af: JUMPDEST 
0x7b0: V627 = 0x1
0x7b3: V628 = ADD S1 0x1
0x7b4: S[V628] = S0
0x7b6: V629 = S[S1]
0x7b7: V630 = 0x7c6
0x7bb: V631 = CALLVALUE
0x7bc: V632 = 0xffffffff
0x7c1: V633 = 0x1291
0x7c4: V634 = AND 0x1291 0xffffffff
0x7c5: JUMP 0x1291
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, 0x7c6, V629, V631]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x7c6, V629, V631]

================================

Block 0x7c6
[0x7c6:0x7e1]
---
Predecessors: [0x121c]
Successors: [0x7e2, 0x7e3]
---
0x7c6 JUMPDEST
0x7c7 DUP2
0x7c8 SSTORE
0x7c9 PUSH1 0x2
0x7cb DUP2
0x7cc ADD
0x7cd DUP1
0x7ce SLOAD
0x7cf DUP5
0x7d0 SWAP2
0x7d1 SWAP1
0x7d2 PUSH1 0xff
0x7d4 NOT
0x7d5 AND
0x7d6 PUSH1 0x1
0x7d8 DUP4
0x7d9 PUSH1 0x3
0x7db DUP2
0x7dc GT
0x7dd ISZERO
0x7de PUSH2 0x7e3
0x7e1 JUMPI
---
0x7c6: JUMPDEST 
0x7c8: S[S1] = S0
0x7c9: V635 = 0x2
0x7cc: V636 = ADD S1 0x2
0x7ce: V637 = S[V636]
0x7d2: V638 = 0xff
0x7d4: V639 = NOT 0xff
0x7d5: V640 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V637
0x7d6: V641 = 0x1
0x7d9: V642 = 0x3
0x7dc: V643 = GT S3 0x3
0x7dd: V644 = ISZERO V643
0x7de: V645 = 0x7e3
0x7e1: JUMPI 0x7e3 V644
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S3, V636, V640, 0x1, S3]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S3, V636, V640, 0x1, S3]

================================

Block 0x7e2
[0x7e2:0x7e2]
---
Predecessors: [0x7c6]
Successors: []
---
0x7e2 INVALID
---
0x7e2: INVALID 
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V636, V640, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V636, V640, 0x1, S0]

================================

Block 0x7e3
[0x7e3:0x7fa]
---
Predecessors: [0x7c6]
Successors: [0x1291]
---
0x7e3 JUMPDEST
0x7e4 MUL
0x7e5 OR
0x7e6 SWAP1
0x7e7 SSTORE
0x7e8 POP
0x7e9 PUSH1 0x4
0x7eb SLOAD
0x7ec PUSH2 0x7fb
0x7ef SWAP1
0x7f0 CALLVALUE
0x7f1 PUSH4 0xffffffff
0x7f6 PUSH2 0x1291
0x7f9 AND
0x7fa JUMP
---
0x7e3: JUMPDEST 
0x7e4: V646 = MUL S0 0x1
0x7e5: V647 = OR V646 V640
0x7e7: S[V636] = V647
0x7e9: V648 = 0x4
0x7eb: V649 = S[0x4]
0x7ec: V650 = 0x7fb
0x7f0: V651 = CALLVALUE
0x7f1: V652 = 0xffffffff
0x7f6: V653 = 0x1291
0x7f9: V654 = AND 0x1291 0xffffffff
0x7fa: JUMP 0x1291
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V636, V640, 0x1, S0]
Stack pops: 5
Stack additions: [0x7fb, V649, V651]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x7fb, V649, V651]

================================

Block 0x7fb
[0x7fb:0x810]
---
Predecessors: [0x121c]
Successors: [0x1291]
---
0x7fb JUMPDEST
0x7fc PUSH1 0x4
0x7fe SSTORE
0x7ff PUSH1 0x5
0x801 SLOAD
0x802 PUSH2 0x811
0x805 SWAP1
0x806 DUP4
0x807 PUSH4 0xffffffff
0x80c PUSH2 0x1291
0x80f AND
0x810 JUMP
---
0x7fb: JUMPDEST 
0x7fc: V655 = 0x4
0x7fe: S[0x4] = S0
0x7ff: V656 = 0x5
0x801: V657 = S[0x5]
0x802: V658 = 0x811
0x807: V659 = 0xffffffff
0x80c: V660 = 0x1291
0x80f: V661 = AND 0x1291 0xffffffff
0x810: JUMP 0x1291
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x811, V657, S2]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x811, V657, S2]

================================

Block 0x811
[0x811:0x89a]
---
Predecessors: [0x121c]
Successors: [0x89b]
---
0x811 JUMPDEST
0x812 PUSH1 0x5
0x814 SSTORE
0x815 PUSH1 0x40
0x817 DUP1
0x818 MLOAD
0x819 DUP4
0x81a DUP2
0x81b MSTORE
0x81c SWAP1
0x81d MLOAD
0x81e PUSH1 0x1
0x820 PUSH1 0xa0
0x822 PUSH1 0x2
0x824 EXP
0x825 SUB
0x826 CALLER
0x827 AND
0x828 SWAP2
0x829 PUSH32 0xf3c1c7c0eb1328ddc834c4c9e579c06d35f443bf1102b034653624a239c7a40c
0x84a SWAP2
0x84b SWAP1
0x84c DUP2
0x84d SWAP1
0x84e SUB
0x84f PUSH1 0x20
0x851 ADD
0x852 SWAP1
0x853 LOG2
0x854 PUSH1 0x4
0x856 SLOAD
0x857 PUSH1 0x40
0x859 DUP1
0x85a MLOAD
0x85b PUSH1 0x1
0x85d PUSH1 0xa0
0x85f PUSH1 0x2
0x861 EXP
0x862 SUB
0x863 DUP8
0x864 AND
0x865 DUP2
0x866 MSTORE
0x867 PUSH1 0x20
0x869 DUP2
0x86a ADD
0x86b SWAP3
0x86c SWAP1
0x86d SWAP3
0x86e MSTORE
0x86f DUP1
0x870 MLOAD
0x871 PUSH32 0xd1dc370699ae69fb860ed754789a4327413ec1cd379b93f2cbedf449a26b0e85
0x892 SWAP3
0x893 DUP2
0x894 SWAP1
0x895 SUB
0x896 SWAP1
0x897 SWAP2
0x898 ADD
0x899 SWAP1
0x89a LOG1
---
0x811: JUMPDEST 
0x812: V662 = 0x5
0x814: S[0x5] = S0
0x815: V663 = 0x40
0x818: V664 = M[0x40]
0x81b: M[V664] = S2
0x81d: V665 = M[0x40]
0x81e: V666 = 0x1
0x820: V667 = 0xa0
0x822: V668 = 0x2
0x824: V669 = EXP 0x2 0xa0
0x825: V670 = SUB 0x10000000000000000000000000000000000000000 0x1
0x826: V671 = CALLER
0x827: V672 = AND V671 0xffffffffffffffffffffffffffffffffffffffff
0x829: V673 = 0xf3c1c7c0eb1328ddc834c4c9e579c06d35f443bf1102b034653624a239c7a40c
0x84e: V674 = SUB V664 V665
0x84f: V675 = 0x20
0x851: V676 = ADD 0x20 V674
0x853: LOG V665 V676 0xf3c1c7c0eb1328ddc834c4c9e579c06d35f443bf1102b034653624a239c7a40c V672
0x854: V677 = 0x4
0x856: V678 = S[0x4]
0x857: V679 = 0x40
0x85a: V680 = M[0x40]
0x85b: V681 = 0x1
0x85d: V682 = 0xa0
0x85f: V683 = 0x2
0x861: V684 = EXP 0x2 0xa0
0x862: V685 = SUB 0x10000000000000000000000000000000000000000 0x1
0x864: V686 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x866: M[V680] = V686
0x867: V687 = 0x20
0x86a: V688 = ADD V680 0x20
0x86e: M[V688] = V678
0x870: V689 = M[0x40]
0x871: V690 = 0xd1dc370699ae69fb860ed754789a4327413ec1cd379b93f2cbedf449a26b0e85
0x895: V691 = SUB V680 V689
0x898: V692 = ADD 0x40 V691
0x89a: LOG V689 V692 0xd1dc370699ae69fb860ed754789a4327413ec1cd379b93f2cbedf449a26b0e85
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x89b
[0x89b:0x8a0]
---
Predecessors: [0x811]
Successors: [0x1bb, 0x1c0, 0x638, 0x63d, 0x69a, 0x6e2, 0xae1]
---
0x89b JUMPDEST
0x89c POP
0x89d POP
0x89e POP
0x89f POP
0x8a0 JUMP
---
0x89b: JUMPDEST 
0x8a0: JUMP S4
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5]

================================

Block 0x8a1
[0x8a1:0x8b7]
---
Predecessors: [0x1ca]
Successors: [0x8b8, 0x8bd]
---
0x8a1 JUMPDEST
0x8a2 PUSH1 0x0
0x8a4 SLOAD
0x8a5 CALLER
0x8a6 PUSH1 0x1
0x8a8 PUSH1 0xa0
0x8aa PUSH1 0x2
0x8ac EXP
0x8ad SUB
0x8ae SWAP1
0x8af DUP2
0x8b0 AND
0x8b1 SWAP2
0x8b2 AND
0x8b3 EQ
0x8b4 PUSH2 0x8bd
0x8b7 JUMPI
---
0x8a1: JUMPDEST 
0x8a2: V693 = 0x0
0x8a4: V694 = S[0x0]
0x8a5: V695 = CALLER
0x8a6: V696 = 0x1
0x8a8: V697 = 0xa0
0x8aa: V698 = 0x2
0x8ac: V699 = EXP 0x2 0xa0
0x8ad: V700 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b0: V701 = AND 0xffffffffffffffffffffffffffffffffffffffff V695
0x8b2: V702 = AND V694 0xffffffffffffffffffffffffffffffffffffffff
0x8b3: V703 = EQ V702 V701
0x8b4: V704 = 0x8bd
0x8b7: JUMPI 0x8bd V703
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0x8b8
[0x8b8:0x8bc]
---
Predecessors: [0x8a1]
Successors: []
---
0x8b8 PUSH1 0x0
0x8ba PUSH1 0x0
0x8bc REVERT
---
0x8b8: V705 = 0x0
0x8ba: V706 = 0x0
0x8bc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0x8bd
[0x8bd:0x925]
---
Predecessors: [0x8a1]
Successors: [0x926, 0x927]
---
0x8bd JUMPDEST
0x8be PUSH1 0x2
0x8c0 SLOAD
0x8c1 PUSH1 0x0
0x8c3 DUP1
0x8c4 SLOAD
0x8c5 PUSH1 0x40
0x8c7 DUP1
0x8c8 MLOAD
0x8c9 PUSH32 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x8ea DUP2
0x8eb MSTORE
0x8ec PUSH1 0x1
0x8ee PUSH1 0xa0
0x8f0 PUSH1 0x2
0x8f2 EXP
0x8f3 SUB
0x8f4 SWAP3
0x8f5 DUP4
0x8f6 AND
0x8f7 PUSH1 0x4
0x8f9 DUP3
0x8fa ADD
0x8fb MSTORE
0x8fc SWAP1
0x8fd MLOAD
0x8fe PUSH2 0x100
0x901 SWAP1
0x902 SWAP5
0x903 DIV
0x904 SWAP1
0x905 SWAP2
0x906 AND
0x907 SWAP3
0x908 PUSH4 0xf2fde38b
0x90d SWAP3
0x90e PUSH1 0x24
0x910 DUP1
0x911 DUP5
0x912 ADD
0x913 SWAP4
0x914 SWAP2
0x915 SWAP3
0x916 SWAP2
0x917 DUP3
0x918 SWAP1
0x919 SUB
0x91a ADD
0x91b DUP2
0x91c DUP4
0x91d DUP8
0x91e DUP1
0x91f EXTCODESIZE
0x920 ISZERO
0x921 ISZERO
0x922 PUSH2 0x927
0x925 JUMPI
---
0x8bd: JUMPDEST 
0x8be: V707 = 0x2
0x8c0: V708 = S[0x2]
0x8c1: V709 = 0x0
0x8c4: V710 = S[0x0]
0x8c5: V711 = 0x40
0x8c8: V712 = M[0x40]
0x8c9: V713 = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x8eb: M[V712] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x8ec: V714 = 0x1
0x8ee: V715 = 0xa0
0x8f0: V716 = 0x2
0x8f2: V717 = EXP 0x2 0xa0
0x8f3: V718 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f6: V719 = AND 0xffffffffffffffffffffffffffffffffffffffff V710
0x8f7: V720 = 0x4
0x8fa: V721 = ADD V712 0x4
0x8fb: M[V721] = V719
0x8fd: V722 = M[0x40]
0x8fe: V723 = 0x100
0x903: V724 = DIV V708 0x100
0x906: V725 = AND 0xffffffffffffffffffffffffffffffffffffffff V724
0x908: V726 = 0xf2fde38b
0x90e: V727 = 0x24
0x912: V728 = ADD V712 0x24
0x919: V729 = SUB V712 V722
0x91a: V730 = ADD V729 0x24
0x91f: V731 = EXTCODESIZE V725
0x920: V732 = ISZERO V731
0x921: V733 = ISZERO V732
0x922: V734 = 0x927
0x925: JUMPI 0x927 V733
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: [V725, 0xf2fde38b, V728, 0x0, V722, V730, V722, 0x0, V725]
Exit stack: [V12, 0x1c0, V725, 0xf2fde38b, V728, 0x0, V722, V730, V722, 0x0, V725]

================================

Block 0x926
[0x926:0x926]
---
Predecessors: [0x8bd]
Successors: []
---
0x926 INVALID
---
0x926: INVALID 
---
Entry stack: [V12, 0x1c0, V725, 0xf2fde38b, V728, 0x0, V722, V730, V722, 0x0, V725]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V725, 0xf2fde38b, V728, 0x0, V722, V730, V722, 0x0, V725]

================================

Block 0x927
[0x927:0x933]
---
Predecessors: [0x8bd]
Successors: [0x934, 0x935]
---
0x927 JUMPDEST
0x928 PUSH2 0x2c6
0x92b GAS
0x92c SUB
0x92d CALL
0x92e ISZERO
0x92f ISZERO
0x930 PUSH2 0x935
0x933 JUMPI
---
0x927: JUMPDEST 
0x928: V735 = 0x2c6
0x92b: V736 = GAS
0x92c: V737 = SUB V736 0x2c6
0x92d: V738 = CALL V737 V725 0x0 V722 V730 V722 0x0
0x92e: V739 = ISZERO V738
0x92f: V740 = ISZERO V739
0x930: V741 = 0x935
0x933: JUMPI 0x935 V740
---
Entry stack: [V12, 0x1c0, V725, 0xf2fde38b, V728, 0x0, V722, V730, V722, 0x0, V725]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1c0, V725, 0xf2fde38b, V728]

================================

Block 0x934
[0x934:0x934]
---
Predecessors: [0x927]
Successors: []
---
0x934 INVALID
---
0x934: INVALID 
---
Entry stack: [V12, 0x1c0, V725, 0xf2fde38b, V728]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V725, 0xf2fde38b, V728]

================================

Block 0x935
[0x935:0x938]
---
Predecessors: [0x927]
Successors: [0x939]
---
0x935 JUMPDEST
0x936 POP
0x937 POP
0x938 POP
---
0x935: JUMPDEST 
---
Entry stack: [V12, 0x1c0, V725, 0xf2fde38b, V728]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0x939
[0x939:0x939]
---
Predecessors: [0x935]
Successors: [0x93a]
---
0x939 JUMPDEST
---
0x939: JUMPDEST 
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0x93a
[0x93a:0x93b]
---
Predecessors: [0x939]
Successors: [0x1c0]
---
0x93a JUMPDEST
0x93b JUMP
---
0x93a: JUMPDEST 
0x93b: JUMP 0x1c0
---
Entry stack: [V12, 0x1c0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x93c
[0x93c:0x94f]
---
Predecessors: [0x1dc]
Successors: [0x1e4]
---
0x93c JUMPDEST
0x93d PUSH1 0x2
0x93f SLOAD
0x940 PUSH2 0x100
0x943 SWAP1
0x944 DIV
0x945 PUSH1 0x1
0x947 PUSH1 0xa0
0x949 PUSH1 0x2
0x94b EXP
0x94c SUB
0x94d AND
0x94e DUP2
0x94f JUMP
---
0x93c: JUMPDEST 
0x93d: V742 = 0x2
0x93f: V743 = S[0x2]
0x940: V744 = 0x100
0x944: V745 = DIV V743 0x100
0x945: V746 = 0x1
0x947: V747 = 0xa0
0x949: V748 = 0x2
0x94b: V749 = EXP 0x2 0xa0
0x94c: V750 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94d: V751 = AND 0xffffffffffffffffffffffffffffffffffffffff V745
0x94f: JUMP 0x1e4
---
Entry stack: [V12, 0x1e4]
Stack pops: 1
Stack additions: [S0, V751]
Exit stack: [V12, 0x1e4, V751]

================================

Block 0x950
[0x950:0x958]
---
Predecessors: [0x208]
Successors: [0x210]
---
0x950 JUMPDEST
0x951 PUSH1 0x8
0x953 SLOAD
0x954 PUSH1 0xff
0x956 AND
0x957 DUP2
0x958 JUMP
---
0x950: JUMPDEST 
0x951: V752 = 0x8
0x953: V753 = S[0x8]
0x954: V754 = 0xff
0x956: V755 = AND 0xff V753
0x958: JUMP 0x210
---
Entry stack: [V12, 0x210]
Stack pops: 1
Stack additions: [S0, V755]
Exit stack: [V12, 0x210, V755]

================================

Block 0x959
[0x959:0x965]
---
Predecessors: [0x22c]
Successors: [0x966, 0x96f]
---
0x959 JUMPDEST
0x95a PUSH1 0x0
0x95c PUSH1 0x7
0x95e SLOAD
0x95f TIMESTAMP
0x960 LT
0x961 DUP1
0x962 PUSH2 0x96f
0x965 JUMPI
---
0x959: JUMPDEST 
0x95a: V756 = 0x0
0x95c: V757 = 0x7
0x95e: V758 = S[0x7]
0x95f: V759 = TIMESTAMP
0x960: V760 = LT V759 V758
0x962: V761 = 0x96f
0x965: JUMPI 0x96f V760
---
Entry stack: [V12, 0x1c0, V178]
Stack pops: 0
Stack additions: [0x0, V760]
Exit stack: [V12, 0x1c0, V178, 0x0, V760]

================================

Block 0x966
[0x966:0x96e]
---
Predecessors: [0x959]
Successors: [0x96f]
---
0x966 POP
0x967 PUSH2 0x1388
0x96a PUSH1 0x5
0x96c SLOAD
0x96d LT
0x96e ISZERO
---
0x967: V762 = 0x1388
0x96a: V763 = 0x5
0x96c: V764 = S[0x5]
0x96d: V765 = LT V764 0x1388
0x96e: V766 = ISZERO V765
---
Entry stack: [V12, 0x1c0, V178, 0x0, V760]
Stack pops: 1
Stack additions: [V766]
Exit stack: [V12, 0x1c0, V178, 0x0, V766]

================================

Block 0x96f
[0x96f:0x974]
---
Predecessors: [0x959, 0x966]
Successors: [0x975, 0x97a]
---
0x96f JUMPDEST
0x970 ISZERO
0x971 PUSH2 0x97a
0x974 JUMPI
---
0x96f: JUMPDEST 
0x970: V767 = ISZERO S0
0x971: V768 = 0x97a
0x974: JUMPI 0x97a V767
---
Entry stack: [V12, 0x1c0, V178, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1c0, V178, 0x0]

================================

Block 0x975
[0x975:0x979]
---
Predecessors: [0x96f]
Successors: []
---
0x975 PUSH1 0x0
0x977 PUSH1 0x0
0x979 REVERT
---
0x975: V769 = 0x0
0x977: V770 = 0x0
0x979: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0, V178, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V178, 0x0]

================================

Block 0x97a
[0x97a:0x99c]
---
Predecessors: [0x96f]
Successors: [0x99d, 0x9a2]
---
0x97a JUMPDEST
0x97b PUSH1 0x1
0x97d PUSH1 0xa0
0x97f PUSH1 0x2
0x981 EXP
0x982 SUB
0x983 CALLER
0x984 AND
0x985 PUSH1 0x0
0x987 SWAP1
0x988 DUP2
0x989 MSTORE
0x98a PUSH1 0x9
0x98c PUSH1 0x20
0x98e MSTORE
0x98f PUSH1 0x40
0x991 SWAP1
0x992 SHA3
0x993 PUSH1 0x1
0x995 ADD
0x996 SLOAD
0x997 DUP3
0x998 EQ
0x999 PUSH2 0x9a2
0x99c JUMPI
---
0x97a: JUMPDEST 
0x97b: V771 = 0x1
0x97d: V772 = 0xa0
0x97f: V773 = 0x2
0x981: V774 = EXP 0x2 0xa0
0x982: V775 = SUB 0x10000000000000000000000000000000000000000 0x1
0x983: V776 = CALLER
0x984: V777 = AND V776 0xffffffffffffffffffffffffffffffffffffffff
0x985: V778 = 0x0
0x989: M[0x0] = V777
0x98a: V779 = 0x9
0x98c: V780 = 0x20
0x98e: M[0x20] = 0x9
0x98f: V781 = 0x40
0x992: V782 = SHA3 0x0 0x40
0x993: V783 = 0x1
0x995: V784 = ADD 0x1 V782
0x996: V785 = S[V784]
0x998: V786 = EQ V178 V785
0x999: V787 = 0x9a2
0x99c: JUMPI 0x9a2 V786
---
Entry stack: [V12, 0x1c0, V178, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x1c0, V178, 0x0]

================================

Block 0x99d
[0x99d:0x9a1]
---
Predecessors: [0x97a]
Successors: []
---
0x99d PUSH1 0x0
0x99f PUSH1 0x0
0x9a1 REVERT
---
0x99d: V788 = 0x0
0x99f: V789 = 0x0
0x9a1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0, V178, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V178, 0x0]

================================

Block 0x9a2
[0x9a2:0xa18]
---
Predecessors: [0x97a]
Successors: [0xa19, 0xa1a]
---
0x9a2 JUMPDEST
0x9a3 PUSH1 0x2
0x9a5 SLOAD
0x9a6 PUSH1 0x40
0x9a8 DUP1
0x9a9 MLOAD
0x9aa PUSH32 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x9cb DUP2
0x9cc MSTORE
0x9cd PUSH1 0x1
0x9cf PUSH1 0xa0
0x9d1 PUSH1 0x2
0x9d3 EXP
0x9d4 SUB
0x9d5 CALLER
0x9d6 DUP2
0x9d7 AND
0x9d8 PUSH1 0x4
0x9da DUP4
0x9db ADD
0x9dc MSTORE
0x9dd ADDRESS
0x9de DUP2
0x9df AND
0x9e0 PUSH1 0x24
0x9e2 DUP4
0x9e3 ADD
0x9e4 MSTORE
0x9e5 PUSH1 0x44
0x9e7 DUP3
0x9e8 ADD
0x9e9 DUP7
0x9ea SWAP1
0x9eb MSTORE
0x9ec SWAP2
0x9ed MLOAD
0x9ee PUSH2 0x100
0x9f1 SWAP1
0x9f2 SWAP4
0x9f3 DIV
0x9f4 SWAP1
0x9f5 SWAP2
0x9f6 AND
0x9f7 SWAP2
0x9f8 PUSH4 0x23b872dd
0x9fd SWAP2
0x9fe PUSH1 0x64
0xa00 DUP1
0xa01 DUP3
0xa02 ADD
0xa03 SWAP3
0xa04 PUSH1 0x0
0xa06 SWAP3
0xa07 SWAP1
0xa08 SWAP2
0xa09 SWAP1
0xa0a DUP3
0xa0b SWAP1
0xa0c SUB
0xa0d ADD
0xa0e DUP2
0xa0f DUP4
0xa10 DUP8
0xa11 DUP1
0xa12 EXTCODESIZE
0xa13 ISZERO
0xa14 ISZERO
0xa15 PUSH2 0xa1a
0xa18 JUMPI
---
0x9a2: JUMPDEST 
0x9a3: V790 = 0x2
0x9a5: V791 = S[0x2]
0x9a6: V792 = 0x40
0x9a9: V793 = M[0x40]
0x9aa: V794 = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x9cc: M[V793] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x9cd: V795 = 0x1
0x9cf: V796 = 0xa0
0x9d1: V797 = 0x2
0x9d3: V798 = EXP 0x2 0xa0
0x9d4: V799 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d5: V800 = CALLER
0x9d7: V801 = AND 0xffffffffffffffffffffffffffffffffffffffff V800
0x9d8: V802 = 0x4
0x9db: V803 = ADD V793 0x4
0x9dc: M[V803] = V801
0x9dd: V804 = ADDRESS
0x9df: V805 = AND 0xffffffffffffffffffffffffffffffffffffffff V804
0x9e0: V806 = 0x24
0x9e3: V807 = ADD V793 0x24
0x9e4: M[V807] = V805
0x9e5: V808 = 0x44
0x9e8: V809 = ADD V793 0x44
0x9eb: M[V809] = V178
0x9ed: V810 = M[0x40]
0x9ee: V811 = 0x100
0x9f3: V812 = DIV V791 0x100
0x9f6: V813 = AND 0xffffffffffffffffffffffffffffffffffffffff V812
0x9f8: V814 = 0x23b872dd
0x9fe: V815 = 0x64
0xa02: V816 = ADD V793 0x64
0xa04: V817 = 0x0
0xa0c: V818 = SUB V793 V810
0xa0d: V819 = ADD V818 0x64
0xa12: V820 = EXTCODESIZE V813
0xa13: V821 = ISZERO V820
0xa14: V822 = ISZERO V821
0xa15: V823 = 0xa1a
0xa18: JUMPI 0xa1a V822
---
Entry stack: [V12, 0x1c0, V178, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V813, 0x23b872dd, V816, 0x0, V810, V819, V810, 0x0, V813]
Exit stack: [V12, 0x1c0, V178, 0x0, V813, 0x23b872dd, V816, 0x0, V810, V819, V810, 0x0, V813]

================================

Block 0xa19
[0xa19:0xa19]
---
Predecessors: [0x9a2]
Successors: []
---
0xa19 INVALID
---
0xa19: INVALID 
---
Entry stack: [V12, 0x1c0, V178, 0x0, V813, 0x23b872dd, V816, 0x0, V810, V819, V810, 0x0, V813]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V178, 0x0, V813, 0x23b872dd, V816, 0x0, V810, V819, V810, 0x0, V813]

================================

Block 0xa1a
[0xa1a:0xa26]
---
Predecessors: [0x9a2]
Successors: [0xa27, 0xa28]
---
0xa1a JUMPDEST
0xa1b PUSH2 0x2c6
0xa1e GAS
0xa1f SUB
0xa20 CALL
0xa21 ISZERO
0xa22 ISZERO
0xa23 PUSH2 0xa28
0xa26 JUMPI
---
0xa1a: JUMPDEST 
0xa1b: V824 = 0x2c6
0xa1e: V825 = GAS
0xa1f: V826 = SUB V825 0x2c6
0xa20: V827 = CALL V826 V813 0x0 V810 V819 V810 0x0
0xa21: V828 = ISZERO V827
0xa22: V829 = ISZERO V828
0xa23: V830 = 0xa28
0xa26: JUMPI 0xa28 V829
---
Entry stack: [V12, 0x1c0, V178, 0x0, V813, 0x23b872dd, V816, 0x0, V810, V819, V810, 0x0, V813]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1c0, V178, 0x0, V813, 0x23b872dd, V816]

================================

Block 0xa27
[0xa27:0xa27]
---
Predecessors: [0xa1a]
Successors: []
---
0xa27 INVALID
---
0xa27: INVALID 
---
Entry stack: [V12, 0x1c0, V178, 0x0, V813, 0x23b872dd, V816]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V178, 0x0, V813, 0x23b872dd, V816]

================================

Block 0xa28
[0xa28:0xa8c]
---
Predecessors: [0xa1a]
Successors: [0xa8d, 0xa8e]
---
0xa28 JUMPDEST
0xa29 POP
0xa2a POP
0xa2b POP
0xa2c PUSH1 0x2
0xa2e PUSH1 0x1
0xa30 SWAP1
0xa31 SLOAD
0xa32 SWAP1
0xa33 PUSH2 0x100
0xa36 EXP
0xa37 SWAP1
0xa38 DIV
0xa39 PUSH1 0x1
0xa3b PUSH1 0xa0
0xa3d PUSH1 0x2
0xa3f EXP
0xa40 SUB
0xa41 AND
0xa42 PUSH1 0x1
0xa44 PUSH1 0xa0
0xa46 PUSH1 0x2
0xa48 EXP
0xa49 SUB
0xa4a AND
0xa4b PUSH4 0x42966c68
0xa50 DUP4
0xa51 PUSH1 0x0
0xa53 PUSH1 0x40
0xa55 MLOAD
0xa56 PUSH1 0x20
0xa58 ADD
0xa59 MSTORE
0xa5a PUSH1 0x40
0xa5c MLOAD
0xa5d DUP3
0xa5e PUSH4 0xffffffff
0xa63 AND
0xa64 PUSH1 0xe0
0xa66 PUSH1 0x2
0xa68 EXP
0xa69 MUL
0xa6a DUP2
0xa6b MSTORE
0xa6c PUSH1 0x4
0xa6e ADD
0xa6f DUP1
0xa70 DUP3
0xa71 DUP2
0xa72 MSTORE
0xa73 PUSH1 0x20
0xa75 ADD
0xa76 SWAP2
0xa77 POP
0xa78 POP
0xa79 PUSH1 0x20
0xa7b PUSH1 0x40
0xa7d MLOAD
0xa7e DUP1
0xa7f DUP4
0xa80 SUB
0xa81 DUP2
0xa82 PUSH1 0x0
0xa84 DUP8
0xa85 DUP1
0xa86 EXTCODESIZE
0xa87 ISZERO
0xa88 ISZERO
0xa89 PUSH2 0xa8e
0xa8c JUMPI
---
0xa28: JUMPDEST 
0xa2c: V831 = 0x2
0xa2e: V832 = 0x1
0xa31: V833 = S[0x2]
0xa33: V834 = 0x100
0xa36: V835 = EXP 0x100 0x1
0xa38: V836 = DIV V833 0x100
0xa39: V837 = 0x1
0xa3b: V838 = 0xa0
0xa3d: V839 = 0x2
0xa3f: V840 = EXP 0x2 0xa0
0xa40: V841 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa41: V842 = AND 0xffffffffffffffffffffffffffffffffffffffff V836
0xa42: V843 = 0x1
0xa44: V844 = 0xa0
0xa46: V845 = 0x2
0xa48: V846 = EXP 0x2 0xa0
0xa49: V847 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4a: V848 = AND 0xffffffffffffffffffffffffffffffffffffffff V842
0xa4b: V849 = 0x42966c68
0xa51: V850 = 0x0
0xa53: V851 = 0x40
0xa55: V852 = M[0x40]
0xa56: V853 = 0x20
0xa58: V854 = ADD 0x20 V852
0xa59: M[V854] = 0x0
0xa5a: V855 = 0x40
0xa5c: V856 = M[0x40]
0xa5e: V857 = 0xffffffff
0xa63: V858 = AND 0xffffffff 0x42966c68
0xa64: V859 = 0xe0
0xa66: V860 = 0x2
0xa68: V861 = EXP 0x2 0xe0
0xa69: V862 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x42966c68
0xa6b: M[V856] = 0x42966c6800000000000000000000000000000000000000000000000000000000
0xa6c: V863 = 0x4
0xa6e: V864 = ADD 0x4 V856
0xa72: M[V864] = V178
0xa73: V865 = 0x20
0xa75: V866 = ADD 0x20 V864
0xa79: V867 = 0x20
0xa7b: V868 = 0x40
0xa7d: V869 = M[0x40]
0xa80: V870 = SUB V866 V869
0xa82: V871 = 0x0
0xa86: V872 = EXTCODESIZE V848
0xa87: V873 = ISZERO V872
0xa88: V874 = ISZERO V873
0xa89: V875 = 0xa8e
0xa8c: JUMPI 0xa8e V874
---
Entry stack: [V12, 0x1c0, V178, 0x0, V813, 0x23b872dd, V816]
Stack pops: 5
Stack additions: [S4, S3, V848, 0x42966c68, V866, 0x20, V869, V870, V869, 0x0, V848]
Exit stack: [V12, 0x1c0, V178, 0x0, V848, 0x42966c68, V866, 0x20, V869, V870, V869, 0x0, V848]

================================

Block 0xa8d
[0xa8d:0xa8d]
---
Predecessors: [0xa28]
Successors: []
---
0xa8d INVALID
---
0xa8d: INVALID 
---
Entry stack: [V12, 0x1c0, V178, 0x0, V848, 0x42966c68, V866, 0x20, V869, V870, V869, 0x0, V848]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V178, 0x0, V848, 0x42966c68, V866, 0x20, V869, V870, V869, 0x0, V848]

================================

Block 0xa8e
[0xa8e:0xa9a]
---
Predecessors: [0xa28]
Successors: [0xa9b, 0xa9c]
---
0xa8e JUMPDEST
0xa8f PUSH2 0x2c6
0xa92 GAS
0xa93 SUB
0xa94 CALL
0xa95 ISZERO
0xa96 ISZERO
0xa97 PUSH2 0xa9c
0xa9a JUMPI
---
0xa8e: JUMPDEST 
0xa8f: V876 = 0x2c6
0xa92: V877 = GAS
0xa93: V878 = SUB V877 0x2c6
0xa94: V879 = CALL V878 V848 0x0 V869 V870 V869 0x20
0xa95: V880 = ISZERO V879
0xa96: V881 = ISZERO V880
0xa97: V882 = 0xa9c
0xa9a: JUMPI 0xa9c V881
---
Entry stack: [V12, 0x1c0, V178, 0x0, V848, 0x42966c68, V866, 0x20, V869, V870, V869, 0x0, V848]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1c0, V178, 0x0, V848, 0x42966c68, V866]

================================

Block 0xa9b
[0xa9b:0xa9b]
---
Predecessors: [0xa8e]
Successors: []
---
0xa9b INVALID
---
0xa9b: INVALID 
---
Entry stack: [V12, 0x1c0, V178, 0x0, V848, 0x42966c68, V866]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V178, 0x0, V848, 0x42966c68, V866]

================================

Block 0xa9c
[0xa9c:0xaaa]
---
Predecessors: [0xa8e]
Successors: [0xaab, 0xab0]
---
0xa9c JUMPDEST
0xa9d POP
0xa9e POP
0xa9f PUSH1 0x40
0xaa1 MLOAD
0xaa2 MLOAD
0xaa3 ISZERO
0xaa4 ISZERO
0xaa5 SWAP1
0xaa6 POP
0xaa7 PUSH2 0xab0
0xaaa JUMPI
---
0xa9c: JUMPDEST 
0xa9f: V883 = 0x40
0xaa1: V884 = M[0x40]
0xaa2: V885 = M[V884]
0xaa3: V886 = ISZERO V885
0xaa4: V887 = ISZERO V886
0xaa7: V888 = 0xab0
0xaaa: JUMPI 0xab0 V887
---
Entry stack: [V12, 0x1c0, V178, 0x0, V848, 0x42966c68, V866]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x1c0, V178, 0x0]

================================

Block 0xaab
[0xaab:0xaaf]
---
Predecessors: [0xa9c]
Successors: []
---
0xaab PUSH1 0x0
0xaad PUSH1 0x0
0xaaf REVERT
---
0xaab: V889 = 0x0
0xaad: V890 = 0x0
0xaaf: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0, V178, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V178, 0x0]

================================

Block 0xab0
[0xab0:0xad7]
---
Predecessors: [0xa9c]
Successors: [0xad8, 0xae1]
---
0xab0 JUMPDEST
0xab1 POP
0xab2 PUSH1 0x1
0xab4 PUSH1 0xa0
0xab6 PUSH1 0x2
0xab8 EXP
0xab9 SUB
0xaba CALLER
0xabb AND
0xabc PUSH1 0x0
0xabe SWAP1
0xabf DUP2
0xac0 MSTORE
0xac1 PUSH1 0x9
0xac3 PUSH1 0x20
0xac5 MSTORE
0xac6 PUSH1 0x40
0xac8 DUP2
0xac9 SHA3
0xaca DUP1
0xacb SLOAD
0xacc SWAP1
0xacd DUP3
0xace SWAP1
0xacf SSTORE
0xad0 SWAP1
0xad1 DUP2
0xad2 GT
0xad3 ISZERO
0xad4 PUSH2 0xae1
0xad7 JUMPI
---
0xab0: JUMPDEST 
0xab2: V891 = 0x1
0xab4: V892 = 0xa0
0xab6: V893 = 0x2
0xab8: V894 = EXP 0x2 0xa0
0xab9: V895 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaba: V896 = CALLER
0xabb: V897 = AND V896 0xffffffffffffffffffffffffffffffffffffffff
0xabc: V898 = 0x0
0xac0: M[0x0] = V897
0xac1: V899 = 0x9
0xac3: V900 = 0x20
0xac5: M[0x20] = 0x9
0xac6: V901 = 0x40
0xac9: V902 = SHA3 0x0 0x40
0xacb: V903 = S[V902]
0xacf: S[V902] = 0x0
0xad2: V904 = GT V903 0x0
0xad3: V905 = ISZERO V904
0xad4: V906 = 0xae1
0xad7: JUMPI 0xae1 V905
---
Entry stack: [V12, 0x1c0, V178, 0x0]
Stack pops: 1
Stack additions: [V903]
Exit stack: [V12, 0x1c0, V178, V903]

================================

Block 0xad8
[0xad8:0xae0]
---
Predecessors: [0xab0]
Successors: [0x12ad]
---
0xad8 PUSH2 0xae1
0xadb CALLER
0xadc DUP3
0xadd PUSH2 0x12ad
0xae0 JUMP
---
0xad8: V907 = 0xae1
0xadb: V908 = CALLER
0xadd: V909 = 0x12ad
0xae0: JUMP 0x12ad
---
Entry stack: [V12, 0x1c0, V178, V903]
Stack pops: 1
Stack additions: [S0, 0xae1, V908, S0]
Exit stack: [V12, 0x1c0, V178, V903, 0xae1, V908, V903]

================================

Block 0xae1
[0xae1:0xae1]
---
Predecessors: [0x89b, 0xab0, 0x1125, 0x121c, 0x128c, 0x12f0]
Successors: [0xae2]
---
0xae1 JUMPDEST
---
0xae1: JUMPDEST 
---
Entry stack: [V12, 0x1c0, V178, V903]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V178, V903]

================================

Block 0xae2
[0xae2:0xae2]
---
Predecessors: [0xae1]
Successors: [0xae3]
---
0xae2 JUMPDEST
---
0xae2: JUMPDEST 
---
Entry stack: [V12, 0x1c0, V178, V903]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V178, V903]

================================

Block 0xae3
[0xae3:0xae3]
---
Predecessors: [0xae2]
Successors: [0xae4]
---
0xae3 JUMPDEST
---
0xae3: JUMPDEST 
---
Entry stack: [V12, 0x1c0, V178, V903]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V178, V903]

================================

Block 0xae4
[0xae4:0xae7]
---
Predecessors: [0xae3]
Successors: [0x1c0]
---
0xae4 JUMPDEST
0xae5 POP
0xae6 POP
0xae7 JUMP
---
0xae4: JUMPDEST 
0xae7: JUMP 0x1c0
---
Entry stack: [V12, 0x1c0, V178, V903]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0xae8
[0xae8:0xaed]
---
Predecessors: [0x241, 0x43e]
Successors: [0x249]
---
0xae8 JUMPDEST
0xae9 PUSH2 0x3e8
0xaec DUP2
0xaed JUMP
---
0xae8: JUMPDEST 
0xae9: V910 = 0x3e8
0xaed: JUMP 0x249
---
Entry stack: [V12, 0x249]
Stack pops: 1
Stack additions: [S0, 0x3e8]
Exit stack: [V12, 0x249, 0x3e8]

================================

Block 0xaee
[0xaee:0xaf3]
---
Predecessors: [0x263]
Successors: [0x249]
---
0xaee JUMPDEST
0xaef PUSH2 0x5dc
0xaf2 DUP2
0xaf3 JUMP
---
0xaee: JUMPDEST 
0xaef: V911 = 0x5dc
0xaf3: JUMP 0x249
---
Entry stack: [V12, 0x249]
Stack pops: 1
Stack additions: [S0, 0x5dc]
Exit stack: [V12, 0x249, 0x5dc]

================================

Block 0xaf4
[0xaf4:0xaf9]
---
Predecessors: [0x285]
Successors: [0x249]
---
0xaf4 JUMPDEST
0xaf5 PUSH1 0x4
0xaf7 SLOAD
0xaf8 DUP2
0xaf9 JUMP
---
0xaf4: JUMPDEST 
0xaf5: V912 = 0x4
0xaf7: V913 = S[0x4]
0xaf9: JUMP 0x249
---
Entry stack: [V12, 0x249]
Stack pops: 1
Stack additions: [S0, V913]
Exit stack: [V12, 0x249, V913]

================================

Block 0xafa
[0xafa:0xaff]
---
Predecessors: [0x2a7]
Successors: [0x249]
---
0xafa JUMPDEST
0xafb PUSH1 0x7
0xafd SLOAD
0xafe DUP2
0xaff JUMP
---
0xafa: JUMPDEST 
0xafb: V914 = 0x7
0xafd: V915 = S[0x7]
0xaff: JUMP 0x249
---
Entry stack: [V12, 0x249]
Stack pops: 1
Stack additions: [S0, V915]
Exit stack: [V12, 0x249, V915]

================================

Block 0xb00
[0xb00:0xb17]
---
Predecessors: [0x2c9]
Successors: [0xb18, 0xb1d]
---
0xb00 JUMPDEST
0xb01 PUSH1 0x0
0xb03 DUP1
0xb04 SLOAD
0xb05 CALLER
0xb06 PUSH1 0x1
0xb08 PUSH1 0xa0
0xb0a PUSH1 0x2
0xb0c EXP
0xb0d SUB
0xb0e SWAP1
0xb0f DUP2
0xb10 AND
0xb11 SWAP2
0xb12 AND
0xb13 EQ
0xb14 PUSH2 0xb1d
0xb17 JUMPI
---
0xb00: JUMPDEST 
0xb01: V916 = 0x0
0xb04: V917 = S[0x0]
0xb05: V918 = CALLER
0xb06: V919 = 0x1
0xb08: V920 = 0xa0
0xb0a: V921 = 0x2
0xb0c: V922 = EXP 0x2 0xa0
0xb0d: V923 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb10: V924 = AND 0xffffffffffffffffffffffffffffffffffffffff V918
0xb12: V925 = AND V917 0xffffffffffffffffffffffffffffffffffffffff
0xb13: V926 = EQ V925 V924
0xb14: V927 = 0xb1d
0xb17: JUMPI 0xb1d V926
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x1c0, 0x0]

================================

Block 0xb18
[0xb18:0xb1c]
---
Predecessors: [0xb00]
Successors: []
---
0xb18 PUSH1 0x0
0xb1a PUSH1 0x0
0xb1c REVERT
---
0xb18: V928 = 0x0
0xb1a: V929 = 0x0
0xb1c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, 0x0]

================================

Block 0xb1d
[0xb1d:0xb27]
---
Predecessors: [0xb00]
Successors: [0xb28, 0xb3f]
---
0xb1d JUMPDEST
0xb1e PUSH1 0x7
0xb20 SLOAD
0xb21 TIMESTAMP
0xb22 LT
0xb23 ISZERO
0xb24 PUSH2 0xb3f
0xb27 JUMPI
---
0xb1d: JUMPDEST 
0xb1e: V930 = 0x7
0xb20: V931 = S[0x7]
0xb21: V932 = TIMESTAMP
0xb22: V933 = LT V932 V931
0xb23: V934 = ISZERO V933
0xb24: V935 = 0xb3f
0xb27: JUMPI 0xb3f V934
---
Entry stack: [V12, 0x1c0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, 0x0]

================================

Block 0xb28
[0xb28:0xb34]
---
Predecessors: [0xb1d]
Successors: [0xb35, 0xb39]
---
0xb28 PUSH3 0x3d090
0xb2c PUSH1 0x5
0xb2e SLOAD
0xb2f EQ
0xb30 ISZERO
0xb31 PUSH2 0xb39
0xb34 JUMPI
---
0xb28: V936 = 0x3d090
0xb2c: V937 = 0x5
0xb2e: V938 = S[0x5]
0xb2f: V939 = EQ V938 0x3d090
0xb30: V940 = ISZERO V939
0xb31: V941 = 0xb39
0xb34: JUMPI 0xb39 V940
---
Entry stack: [V12, 0x1c0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, 0x0]

================================

Block 0xb35
[0xb35:0xb38]
---
Predecessors: [0xb28]
Successors: [0xb3f]
---
0xb35 PUSH2 0xb3f
0xb38 JUMP
---
0xb35: V942 = 0xb3f
0xb38: JUMP 0xb3f
---
Entry stack: [V12, 0x1c0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, 0x0]

================================

Block 0xb39
[0xb39:0xb3e]
---
Predecessors: [0xb28]
Successors: []
---
0xb39 JUMPDEST
0xb3a PUSH1 0x0
0xb3c PUSH1 0x0
0xb3e REVERT
---
0xb39: JUMPDEST 
0xb3a: V943 = 0x0
0xb3c: V944 = 0x0
0xb3e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, 0x0]

================================

Block 0xb3f
[0xb3f:0xb3f]
---
Predecessors: [0xb1d, 0xb35]
Successors: [0xb40]
---
0xb3f JUMPDEST
---
0xb3f: JUMPDEST 
---
Entry stack: [V12, 0x1c0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, 0x0]

================================

Block 0xb40
[0xb40:0xb4d]
---
Predecessors: [0xb3f]
Successors: [0xb4e, 0xb59]
---
0xb40 JUMPDEST
0xb41 PUSH2 0x1388
0xb44 PUSH1 0x5
0xb46 SLOAD
0xb47 LT
0xb48 DUP1
0xb49 ISZERO
0xb4a PUSH2 0xb59
0xb4d JUMPI
---
0xb40: JUMPDEST 
0xb41: V945 = 0x1388
0xb44: V946 = 0x5
0xb46: V947 = S[0x5]
0xb47: V948 = LT V947 0x1388
0xb49: V949 = ISZERO V948
0xb4a: V950 = 0xb59
0xb4d: JUMPI 0xb59 V949
---
Entry stack: [V12, 0x1c0, 0x0]
Stack pops: 0
Stack additions: [V948]
Exit stack: [V12, 0x1c0, 0x0, V948]

================================

Block 0xb4e
[0xb4e:0xb58]
---
Predecessors: [0xb40]
Successors: [0xb59]
---
0xb4e POP
0xb4f PUSH1 0x7
0xb51 SLOAD
0xb52 PUSH3 0x13c680
0xb56 ADD
0xb57 TIMESTAMP
0xb58 LT
---
0xb4f: V951 = 0x7
0xb51: V952 = S[0x7]
0xb52: V953 = 0x13c680
0xb56: V954 = ADD 0x13c680 V952
0xb57: V955 = TIMESTAMP
0xb58: V956 = LT V955 V954
---
Entry stack: [V12, 0x1c0, 0x0, V948]
Stack pops: 1
Stack additions: [V956]
Exit stack: [V12, 0x1c0, 0x0, V956]

================================

Block 0xb59
[0xb59:0xb5e]
---
Predecessors: [0xb40, 0xb4e]
Successors: [0xb5f, 0xb64]
---
0xb59 JUMPDEST
0xb5a ISZERO
0xb5b PUSH2 0xb64
0xb5e JUMPI
---
0xb59: JUMPDEST 
0xb5a: V957 = ISZERO S0
0xb5b: V958 = 0xb64
0xb5e: JUMPI 0xb64 V957
---
Entry stack: [V12, 0x1c0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1c0, 0x0]

================================

Block 0xb5f
[0xb5f:0xb63]
---
Predecessors: [0xb59]
Successors: []
---
0xb5f PUSH1 0x0
0xb61 PUSH1 0x0
0xb63 REVERT
---
0xb5f: V959 = 0x0
0xb61: V960 = 0x0
0xb63: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, 0x0]

================================

Block 0xb64
[0xb64:0xb94]
---
Predecessors: [0xb59]
Successors: [0xb95, 0xb9a]
---
0xb64 JUMPDEST
0xb65 PUSH1 0x3
0xb67 SLOAD
0xb68 PUSH1 0x40
0xb6a MLOAD
0xb6b PUSH1 0x1
0xb6d PUSH1 0xa0
0xb6f PUSH1 0x2
0xb71 EXP
0xb72 SUB
0xb73 SWAP2
0xb74 DUP3
0xb75 AND
0xb76 SWAP2
0xb77 ADDRESS
0xb78 AND
0xb79 BALANCE
0xb7a DUP1
0xb7b ISZERO
0xb7c PUSH2 0x8fc
0xb7f MUL
0xb80 SWAP2
0xb81 PUSH1 0x0
0xb83 DUP2
0xb84 DUP2
0xb85 DUP2
0xb86 DUP6
0xb87 DUP9
0xb88 DUP9
0xb89 CALL
0xb8a SWAP4
0xb8b POP
0xb8c POP
0xb8d POP
0xb8e POP
0xb8f ISZERO
0xb90 ISZERO
0xb91 PUSH2 0xb9a
0xb94 JUMPI
---
0xb64: JUMPDEST 
0xb65: V961 = 0x3
0xb67: V962 = S[0x3]
0xb68: V963 = 0x40
0xb6a: V964 = M[0x40]
0xb6b: V965 = 0x1
0xb6d: V966 = 0xa0
0xb6f: V967 = 0x2
0xb71: V968 = EXP 0x2 0xa0
0xb72: V969 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb75: V970 = AND 0xffffffffffffffffffffffffffffffffffffffff V962
0xb77: V971 = ADDRESS
0xb78: V972 = AND V971 0xffffffffffffffffffffffffffffffffffffffff
0xb79: V973 = BALANCE V972
0xb7b: V974 = ISZERO V973
0xb7c: V975 = 0x8fc
0xb7f: V976 = MUL 0x8fc V974
0xb81: V977 = 0x0
0xb89: V978 = CALL V976 V970 V973 V964 0x0 V964 0x0
0xb8f: V979 = ISZERO V978
0xb90: V980 = ISZERO V979
0xb91: V981 = 0xb9a
0xb94: JUMPI 0xb9a V980
---
Entry stack: [V12, 0x1c0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, 0x0]

================================

Block 0xb95
[0xb95:0xb99]
---
Predecessors: [0xb64]
Successors: []
---
0xb95 PUSH1 0x0
0xb97 PUSH1 0x0
0xb99 REVERT
---
0xb95: V982 = 0x0
0xb97: V983 = 0x0
0xb99: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, 0x0]

================================

Block 0xb9a
[0xb9a:0xc0d]
---
Predecessors: [0xb64]
Successors: [0xc0e, 0xc0f]
---
0xb9a JUMPDEST
0xb9b PUSH1 0x2
0xb9d PUSH1 0x1
0xb9f SWAP1
0xba0 SLOAD
0xba1 SWAP1
0xba2 PUSH2 0x100
0xba5 EXP
0xba6 SWAP1
0xba7 DIV
0xba8 PUSH1 0x1
0xbaa PUSH1 0xa0
0xbac PUSH1 0x2
0xbae EXP
0xbaf SUB
0xbb0 AND
0xbb1 PUSH1 0x1
0xbb3 PUSH1 0xa0
0xbb5 PUSH1 0x2
0xbb7 EXP
0xbb8 SUB
0xbb9 AND
0xbba PUSH4 0x70a08231
0xbbf ADDRESS
0xbc0 PUSH1 0x0
0xbc2 PUSH1 0x40
0xbc4 MLOAD
0xbc5 PUSH1 0x20
0xbc7 ADD
0xbc8 MSTORE
0xbc9 PUSH1 0x40
0xbcb MLOAD
0xbcc DUP3
0xbcd PUSH4 0xffffffff
0xbd2 AND
0xbd3 PUSH1 0xe0
0xbd5 PUSH1 0x2
0xbd7 EXP
0xbd8 MUL
0xbd9 DUP2
0xbda MSTORE
0xbdb PUSH1 0x4
0xbdd ADD
0xbde DUP1
0xbdf DUP3
0xbe0 PUSH1 0x1
0xbe2 PUSH1 0xa0
0xbe4 PUSH1 0x2
0xbe6 EXP
0xbe7 SUB
0xbe8 AND
0xbe9 PUSH1 0x1
0xbeb PUSH1 0xa0
0xbed PUSH1 0x2
0xbef EXP
0xbf0 SUB
0xbf1 AND
0xbf2 DUP2
0xbf3 MSTORE
0xbf4 PUSH1 0x20
0xbf6 ADD
0xbf7 SWAP2
0xbf8 POP
0xbf9 POP
0xbfa PUSH1 0x20
0xbfc PUSH1 0x40
0xbfe MLOAD
0xbff DUP1
0xc00 DUP4
0xc01 SUB
0xc02 DUP2
0xc03 PUSH1 0x0
0xc05 DUP8
0xc06 DUP1
0xc07 EXTCODESIZE
0xc08 ISZERO
0xc09 ISZERO
0xc0a PUSH2 0xc0f
0xc0d JUMPI
---
0xb9a: JUMPDEST 
0xb9b: V984 = 0x2
0xb9d: V985 = 0x1
0xba0: V986 = S[0x2]
0xba2: V987 = 0x100
0xba5: V988 = EXP 0x100 0x1
0xba7: V989 = DIV V986 0x100
0xba8: V990 = 0x1
0xbaa: V991 = 0xa0
0xbac: V992 = 0x2
0xbae: V993 = EXP 0x2 0xa0
0xbaf: V994 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb0: V995 = AND 0xffffffffffffffffffffffffffffffffffffffff V989
0xbb1: V996 = 0x1
0xbb3: V997 = 0xa0
0xbb5: V998 = 0x2
0xbb7: V999 = EXP 0x2 0xa0
0xbb8: V1000 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb9: V1001 = AND 0xffffffffffffffffffffffffffffffffffffffff V995
0xbba: V1002 = 0x70a08231
0xbbf: V1003 = ADDRESS
0xbc0: V1004 = 0x0
0xbc2: V1005 = 0x40
0xbc4: V1006 = M[0x40]
0xbc5: V1007 = 0x20
0xbc7: V1008 = ADD 0x20 V1006
0xbc8: M[V1008] = 0x0
0xbc9: V1009 = 0x40
0xbcb: V1010 = M[0x40]
0xbcd: V1011 = 0xffffffff
0xbd2: V1012 = AND 0xffffffff 0x70a08231
0xbd3: V1013 = 0xe0
0xbd5: V1014 = 0x2
0xbd7: V1015 = EXP 0x2 0xe0
0xbd8: V1016 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xbda: M[V1010] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xbdb: V1017 = 0x4
0xbdd: V1018 = ADD 0x4 V1010
0xbe0: V1019 = 0x1
0xbe2: V1020 = 0xa0
0xbe4: V1021 = 0x2
0xbe6: V1022 = EXP 0x2 0xa0
0xbe7: V1023 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe8: V1024 = AND 0xffffffffffffffffffffffffffffffffffffffff V1003
0xbe9: V1025 = 0x1
0xbeb: V1026 = 0xa0
0xbed: V1027 = 0x2
0xbef: V1028 = EXP 0x2 0xa0
0xbf0: V1029 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf1: V1030 = AND 0xffffffffffffffffffffffffffffffffffffffff V1024
0xbf3: M[V1018] = V1030
0xbf4: V1031 = 0x20
0xbf6: V1032 = ADD 0x20 V1018
0xbfa: V1033 = 0x20
0xbfc: V1034 = 0x40
0xbfe: V1035 = M[0x40]
0xc01: V1036 = SUB V1032 V1035
0xc03: V1037 = 0x0
0xc07: V1038 = EXTCODESIZE V1001
0xc08: V1039 = ISZERO V1038
0xc09: V1040 = ISZERO V1039
0xc0a: V1041 = 0xc0f
0xc0d: JUMPI 0xc0f V1040
---
Entry stack: [V12, 0x1c0, 0x0]
Stack pops: 0
Stack additions: [V1001, 0x70a08231, V1032, 0x20, V1035, V1036, V1035, 0x0, V1001]
Exit stack: [V12, 0x1c0, 0x0, V1001, 0x70a08231, V1032, 0x20, V1035, V1036, V1035, 0x0, V1001]

================================

Block 0xc0e
[0xc0e:0xc0e]
---
Predecessors: [0xb9a]
Successors: []
---
0xc0e INVALID
---
0xc0e: INVALID 
---
Entry stack: [V12, 0x1c0, 0x0, V1001, 0x70a08231, V1032, 0x20, V1035, V1036, V1035, 0x0, V1001]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, 0x0, V1001, 0x70a08231, V1032, 0x20, V1035, V1036, V1035, 0x0, V1001]

================================

Block 0xc0f
[0xc0f:0xc1b]
---
Predecessors: [0xb9a]
Successors: [0xc1c, 0xc1d]
---
0xc0f JUMPDEST
0xc10 PUSH2 0x2c6
0xc13 GAS
0xc14 SUB
0xc15 CALL
0xc16 ISZERO
0xc17 ISZERO
0xc18 PUSH2 0xc1d
0xc1b JUMPI
---
0xc0f: JUMPDEST 
0xc10: V1042 = 0x2c6
0xc13: V1043 = GAS
0xc14: V1044 = SUB V1043 0x2c6
0xc15: V1045 = CALL V1044 V1001 0x0 V1035 V1036 V1035 0x20
0xc16: V1046 = ISZERO V1045
0xc17: V1047 = ISZERO V1046
0xc18: V1048 = 0xc1d
0xc1b: JUMPI 0xc1d V1047
---
Entry stack: [V12, 0x1c0, 0x0, V1001, 0x70a08231, V1032, 0x20, V1035, V1036, V1035, 0x0, V1001]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1c0, 0x0, V1001, 0x70a08231, V1032]

================================

Block 0xc1c
[0xc1c:0xc1c]
---
Predecessors: [0xc0f]
Successors: []
---
0xc1c INVALID
---
0xc1c: INVALID 
---
Entry stack: [V12, 0x1c0, 0x0, V1001, 0x70a08231, V1032]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, 0x0, V1001, 0x70a08231, V1032]

================================

Block 0xc1d
[0xc1d:0xc2f]
---
Predecessors: [0xc0f]
Successors: [0xc30, 0xcb4]
---
0xc1d JUMPDEST
0xc1e POP
0xc1f POP
0xc20 PUSH1 0x40
0xc22 MLOAD
0xc23 MLOAD
0xc24 SWAP2
0xc25 POP
0xc26 POP
0xc27 PUSH1 0x0
0xc29 DUP2
0xc2a GT
0xc2b ISZERO
0xc2c PUSH2 0xcb4
0xc2f JUMPI
---
0xc1d: JUMPDEST 
0xc20: V1049 = 0x40
0xc22: V1050 = M[0x40]
0xc23: V1051 = M[V1050]
0xc27: V1052 = 0x0
0xc2a: V1053 = GT V1051 0x0
0xc2b: V1054 = ISZERO V1053
0xc2c: V1055 = 0xcb4
0xc2f: JUMPI 0xcb4 V1054
---
Entry stack: [V12, 0x1c0, 0x0, V1001, 0x70a08231, V1032]
Stack pops: 4
Stack additions: [V1051]
Exit stack: [V12, 0x1c0, V1051]

================================

Block 0xc30
[0xc30:0xc90]
---
Predecessors: [0xc1d]
Successors: [0xc91, 0xc92]
---
0xc30 PUSH1 0x2
0xc32 PUSH1 0x1
0xc34 SWAP1
0xc35 SLOAD
0xc36 SWAP1
0xc37 PUSH2 0x100
0xc3a EXP
0xc3b SWAP1
0xc3c DIV
0xc3d PUSH1 0x1
0xc3f PUSH1 0xa0
0xc41 PUSH1 0x2
0xc43 EXP
0xc44 SUB
0xc45 AND
0xc46 PUSH1 0x1
0xc48 PUSH1 0xa0
0xc4a PUSH1 0x2
0xc4c EXP
0xc4d SUB
0xc4e AND
0xc4f PUSH4 0x42966c68
0xc54 DUP3
0xc55 PUSH1 0x0
0xc57 PUSH1 0x40
0xc59 MLOAD
0xc5a PUSH1 0x20
0xc5c ADD
0xc5d MSTORE
0xc5e PUSH1 0x40
0xc60 MLOAD
0xc61 DUP3
0xc62 PUSH4 0xffffffff
0xc67 AND
0xc68 PUSH1 0xe0
0xc6a PUSH1 0x2
0xc6c EXP
0xc6d MUL
0xc6e DUP2
0xc6f MSTORE
0xc70 PUSH1 0x4
0xc72 ADD
0xc73 DUP1
0xc74 DUP3
0xc75 DUP2
0xc76 MSTORE
0xc77 PUSH1 0x20
0xc79 ADD
0xc7a SWAP2
0xc7b POP
0xc7c POP
0xc7d PUSH1 0x20
0xc7f PUSH1 0x40
0xc81 MLOAD
0xc82 DUP1
0xc83 DUP4
0xc84 SUB
0xc85 DUP2
0xc86 PUSH1 0x0
0xc88 DUP8
0xc89 DUP1
0xc8a EXTCODESIZE
0xc8b ISZERO
0xc8c ISZERO
0xc8d PUSH2 0xc92
0xc90 JUMPI
---
0xc30: V1056 = 0x2
0xc32: V1057 = 0x1
0xc35: V1058 = S[0x2]
0xc37: V1059 = 0x100
0xc3a: V1060 = EXP 0x100 0x1
0xc3c: V1061 = DIV V1058 0x100
0xc3d: V1062 = 0x1
0xc3f: V1063 = 0xa0
0xc41: V1064 = 0x2
0xc43: V1065 = EXP 0x2 0xa0
0xc44: V1066 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc45: V1067 = AND 0xffffffffffffffffffffffffffffffffffffffff V1061
0xc46: V1068 = 0x1
0xc48: V1069 = 0xa0
0xc4a: V1070 = 0x2
0xc4c: V1071 = EXP 0x2 0xa0
0xc4d: V1072 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc4e: V1073 = AND 0xffffffffffffffffffffffffffffffffffffffff V1067
0xc4f: V1074 = 0x42966c68
0xc55: V1075 = 0x0
0xc57: V1076 = 0x40
0xc59: V1077 = M[0x40]
0xc5a: V1078 = 0x20
0xc5c: V1079 = ADD 0x20 V1077
0xc5d: M[V1079] = 0x0
0xc5e: V1080 = 0x40
0xc60: V1081 = M[0x40]
0xc62: V1082 = 0xffffffff
0xc67: V1083 = AND 0xffffffff 0x42966c68
0xc68: V1084 = 0xe0
0xc6a: V1085 = 0x2
0xc6c: V1086 = EXP 0x2 0xe0
0xc6d: V1087 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x42966c68
0xc6f: M[V1081] = 0x42966c6800000000000000000000000000000000000000000000000000000000
0xc70: V1088 = 0x4
0xc72: V1089 = ADD 0x4 V1081
0xc76: M[V1089] = V1051
0xc77: V1090 = 0x20
0xc79: V1091 = ADD 0x20 V1089
0xc7d: V1092 = 0x20
0xc7f: V1093 = 0x40
0xc81: V1094 = M[0x40]
0xc84: V1095 = SUB V1091 V1094
0xc86: V1096 = 0x0
0xc8a: V1097 = EXTCODESIZE V1073
0xc8b: V1098 = ISZERO V1097
0xc8c: V1099 = ISZERO V1098
0xc8d: V1100 = 0xc92
0xc90: JUMPI 0xc92 V1099
---
Entry stack: [V12, 0x1c0, V1051]
Stack pops: 1
Stack additions: [S0, V1073, 0x42966c68, V1091, 0x20, V1094, V1095, V1094, 0x0, V1073]
Exit stack: [V12, 0x1c0, V1051, V1073, 0x42966c68, V1091, 0x20, V1094, V1095, V1094, 0x0, V1073]

================================

Block 0xc91
[0xc91:0xc91]
---
Predecessors: [0xc30]
Successors: []
---
0xc91 INVALID
---
0xc91: INVALID 
---
Entry stack: [V12, 0x1c0, V1051, V1073, 0x42966c68, V1091, 0x20, V1094, V1095, V1094, 0x0, V1073]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V1051, V1073, 0x42966c68, V1091, 0x20, V1094, V1095, V1094, 0x0, V1073]

================================

Block 0xc92
[0xc92:0xc9e]
---
Predecessors: [0xc30]
Successors: [0xc9f, 0xca0]
---
0xc92 JUMPDEST
0xc93 PUSH2 0x2c6
0xc96 GAS
0xc97 SUB
0xc98 CALL
0xc99 ISZERO
0xc9a ISZERO
0xc9b PUSH2 0xca0
0xc9e JUMPI
---
0xc92: JUMPDEST 
0xc93: V1101 = 0x2c6
0xc96: V1102 = GAS
0xc97: V1103 = SUB V1102 0x2c6
0xc98: V1104 = CALL V1103 V1073 0x0 V1094 V1095 V1094 0x20
0xc99: V1105 = ISZERO V1104
0xc9a: V1106 = ISZERO V1105
0xc9b: V1107 = 0xca0
0xc9e: JUMPI 0xca0 V1106
---
Entry stack: [V12, 0x1c0, V1051, V1073, 0x42966c68, V1091, 0x20, V1094, V1095, V1094, 0x0, V1073]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x1c0, V1051, V1073, 0x42966c68, V1091]

================================

Block 0xc9f
[0xc9f:0xc9f]
---
Predecessors: [0xc92]
Successors: []
---
0xc9f INVALID
---
0xc9f: INVALID 
---
Entry stack: [V12, 0x1c0, V1051, V1073, 0x42966c68, V1091]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V1051, V1073, 0x42966c68, V1091]

================================

Block 0xca0
[0xca0:0xcae]
---
Predecessors: [0xc92]
Successors: [0xcaf, 0xcb4]
---
0xca0 JUMPDEST
0xca1 POP
0xca2 POP
0xca3 PUSH1 0x40
0xca5 MLOAD
0xca6 MLOAD
0xca7 ISZERO
0xca8 ISZERO
0xca9 SWAP1
0xcaa POP
0xcab PUSH2 0xcb4
0xcae JUMPI
---
0xca0: JUMPDEST 
0xca3: V1108 = 0x40
0xca5: V1109 = M[0x40]
0xca6: V1110 = M[V1109]
0xca7: V1111 = ISZERO V1110
0xca8: V1112 = ISZERO V1111
0xcab: V1113 = 0xcb4
0xcae: JUMPI 0xcb4 V1112
---
Entry stack: [V12, 0x1c0, V1051, V1073, 0x42966c68, V1091]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x1c0, V1051]

================================

Block 0xcaf
[0xcaf:0xcb3]
---
Predecessors: [0xca0]
Successors: []
---
0xcaf PUSH1 0x0
0xcb1 PUSH1 0x0
0xcb3 REVERT
---
0xcaf: V1114 = 0x0
0xcb1: V1115 = 0x0
0xcb3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0, V1051]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V1051]

================================

Block 0xcb4
[0xcb4:0xcb4]
---
Predecessors: [0xc1d, 0xca0]
Successors: [0xcb5]
---
0xcb4 JUMPDEST
---
0xcb4: JUMPDEST 
---
Entry stack: [V12, 0x1c0, V1051]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V1051]

================================

Block 0xcb5
[0xcb5:0xcc2]
---
Predecessors: [0xcb4]
Successors: [0xcc3]
---
0xcb5 JUMPDEST
0xcb6 PUSH1 0x8
0xcb8 DUP1
0xcb9 SLOAD
0xcba PUSH1 0xff
0xcbc NOT
0xcbd AND
0xcbe PUSH1 0x1
0xcc0 OR
0xcc1 SWAP1
0xcc2 SSTORE
---
0xcb5: JUMPDEST 
0xcb6: V1116 = 0x8
0xcb9: V1117 = S[0x8]
0xcba: V1118 = 0xff
0xcbc: V1119 = NOT 0xff
0xcbd: V1120 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1117
0xcbe: V1121 = 0x1
0xcc0: V1122 = OR 0x1 V1120
0xcc2: S[0x8] = V1122
---
Entry stack: [V12, 0x1c0, V1051]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V1051]

================================

Block 0xcc3
[0xcc3:0xcc3]
---
Predecessors: [0xcb5, 0x1158, 0x12f4]
Successors: [0xcc4]
---
0xcc3 JUMPDEST
---
0xcc3: JUMPDEST 
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, {0x1c0, 0x1218, 0x1233}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, {0x1c0, 0x1218, 0x1233}, S0]

================================

Block 0xcc4
[0xcc4:0xcc6]
---
Predecessors: [0xcc3]
Successors: [0x1c0, 0x1218, 0x1233]
---
0xcc4 JUMPDEST
0xcc5 POP
0xcc6 JUMP
---
0xcc4: JUMPDEST 
0xcc6: JUMP {0x1c0, 0x1218, 0x1233}
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, {0x1c0, 0x1218, 0x1233}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2]

================================

Block 0xcc7
[0xcc7:0xce8]
---
Predecessors: [0x2db]
Successors: [0xce9, 0xcee]
---
0xcc7 JUMPDEST
0xcc8 CALLER
0xcc9 PUSH1 0x1
0xccb PUSH1 0xa0
0xccd PUSH1 0x2
0xccf EXP
0xcd0 SUB
0xcd1 DUP2
0xcd2 AND
0xcd3 PUSH1 0x0
0xcd5 SWAP1
0xcd6 DUP2
0xcd7 MSTORE
0xcd8 PUSH1 0x1
0xcda PUSH1 0x20
0xcdc MSTORE
0xcdd PUSH1 0x40
0xcdf SWAP1
0xce0 SHA3
0xce1 SLOAD
0xce2 DUP1
0xce3 ISZERO
0xce4 ISZERO
0xce5 PUSH2 0xcee
0xce8 JUMPI
---
0xcc7: JUMPDEST 
0xcc8: V1123 = CALLER
0xcc9: V1124 = 0x1
0xccb: V1125 = 0xa0
0xccd: V1126 = 0x2
0xccf: V1127 = EXP 0x2 0xa0
0xcd0: V1128 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcd2: V1129 = AND V1123 0xffffffffffffffffffffffffffffffffffffffff
0xcd3: V1130 = 0x0
0xcd7: M[0x0] = V1129
0xcd8: V1131 = 0x1
0xcda: V1132 = 0x20
0xcdc: M[0x20] = 0x1
0xcdd: V1133 = 0x40
0xce0: V1134 = SHA3 0x0 0x40
0xce1: V1135 = S[V1134]
0xce3: V1136 = ISZERO V1135
0xce4: V1137 = ISZERO V1136
0xce5: V1138 = 0xcee
0xce8: JUMPI 0xcee V1137
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: [V1123, V1135]
Exit stack: [V12, 0x1c0, V1123, V1135]

================================

Block 0xce9
[0xce9:0xced]
---
Predecessors: [0xcc7]
Successors: []
---
0xce9 PUSH1 0x0
0xceb PUSH1 0x0
0xced REVERT
---
0xce9: V1139 = 0x0
0xceb: V1140 = 0x0
0xced: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0, V1123, V1135]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V1123, V1135]

================================

Block 0xcee
[0xcee:0xd00]
---
Predecessors: [0xcc7]
Successors: [0xd01, 0xd06]
---
0xcee JUMPDEST
0xcef DUP1
0xcf0 ADDRESS
0xcf1 PUSH1 0x1
0xcf3 PUSH1 0xa0
0xcf5 PUSH1 0x2
0xcf7 EXP
0xcf8 SUB
0xcf9 AND
0xcfa BALANCE
0xcfb LT
0xcfc ISZERO
0xcfd PUSH2 0xd06
0xd00 JUMPI
---
0xcee: JUMPDEST 
0xcf0: V1141 = ADDRESS
0xcf1: V1142 = 0x1
0xcf3: V1143 = 0xa0
0xcf5: V1144 = 0x2
0xcf7: V1145 = EXP 0x2 0xa0
0xcf8: V1146 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf9: V1147 = AND 0xffffffffffffffffffffffffffffffffffffffff V1141
0xcfa: V1148 = BALANCE V1147
0xcfb: V1149 = LT V1148 V1135
0xcfc: V1150 = ISZERO V1149
0xcfd: V1151 = 0xd06
0xd00: JUMPI 0xd06 V1150
---
Entry stack: [V12, 0x1c0, V1123, V1135]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1c0, V1123, V1135]

================================

Block 0xd01
[0xd01:0xd05]
---
Predecessors: [0xcee]
Successors: []
---
0xd01 PUSH1 0x0
0xd03 PUSH1 0x0
0xd05 REVERT
---
0xd01: V1152 = 0x0
0xd03: V1153 = 0x0
0xd05: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0, V1123, V1135]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V1123, V1135]

================================

Block 0xd06
[0xd06:0xd3f]
---
Predecessors: [0xcee]
Successors: [0xd40, 0xd45]
---
0xd06 JUMPDEST
0xd07 PUSH1 0x1
0xd09 PUSH1 0xa0
0xd0b PUSH1 0x2
0xd0d EXP
0xd0e SUB
0xd0f DUP3
0xd10 AND
0xd11 PUSH1 0x0
0xd13 DUP2
0xd14 DUP2
0xd15 MSTORE
0xd16 PUSH1 0x1
0xd18 PUSH1 0x20
0xd1a MSTORE
0xd1b PUSH1 0x40
0xd1d DUP1
0xd1e DUP3
0xd1f SHA3
0xd20 DUP3
0xd21 SWAP1
0xd22 SSTORE
0xd23 MLOAD
0xd24 DUP4
0xd25 ISZERO
0xd26 PUSH2 0x8fc
0xd29 MUL
0xd2a SWAP2
0xd2b DUP5
0xd2c SWAP2
0xd2d SWAP1
0xd2e DUP2
0xd2f DUP2
0xd30 DUP2
0xd31 DUP6
0xd32 DUP9
0xd33 DUP9
0xd34 CALL
0xd35 SWAP4
0xd36 POP
0xd37 POP
0xd38 POP
0xd39 POP
0xd3a ISZERO
0xd3b ISZERO
0xd3c PUSH2 0xd45
0xd3f JUMPI
---
0xd06: JUMPDEST 
0xd07: V1154 = 0x1
0xd09: V1155 = 0xa0
0xd0b: V1156 = 0x2
0xd0d: V1157 = EXP 0x2 0xa0
0xd0e: V1158 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd10: V1159 = AND V1123 0xffffffffffffffffffffffffffffffffffffffff
0xd11: V1160 = 0x0
0xd15: M[0x0] = V1159
0xd16: V1161 = 0x1
0xd18: V1162 = 0x20
0xd1a: M[0x20] = 0x1
0xd1b: V1163 = 0x40
0xd1f: V1164 = SHA3 0x0 0x40
0xd22: S[V1164] = 0x0
0xd23: V1165 = M[0x40]
0xd25: V1166 = ISZERO V1135
0xd26: V1167 = 0x8fc
0xd29: V1168 = MUL 0x8fc V1166
0xd34: V1169 = CALL V1168 V1159 V1135 V1165 0x0 V1165 0x0
0xd3a: V1170 = ISZERO V1169
0xd3b: V1171 = ISZERO V1170
0xd3c: V1172 = 0xd45
0xd3f: JUMPI 0xd45 V1171
---
Entry stack: [V12, 0x1c0, V1123, V1135]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x1c0, V1123, V1135]

================================

Block 0xd40
[0xd40:0xd44]
---
Predecessors: [0xd06]
Successors: []
---
0xd40 PUSH1 0x0
0xd42 PUSH1 0x0
0xd44 REVERT
---
0xd40: V1173 = 0x0
0xd42: V1174 = 0x0
0xd44: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0, V1123, V1135]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V1123, V1135]

================================

Block 0xd45
[0xd45:0xd89]
---
Predecessors: [0xd06]
Successors: [0xd8a]
---
0xd45 JUMPDEST
0xd46 PUSH1 0x40
0xd48 DUP1
0xd49 MLOAD
0xd4a PUSH1 0x1
0xd4c PUSH1 0xa0
0xd4e PUSH1 0x2
0xd50 EXP
0xd51 SUB
0xd52 DUP5
0xd53 AND
0xd54 DUP2
0xd55 MSTORE
0xd56 PUSH1 0x20
0xd58 DUP2
0xd59 ADD
0xd5a DUP4
0xd5b SWAP1
0xd5c MSTORE
0xd5d DUP2
0xd5e MLOAD
0xd5f PUSH32 0x991678bf7f45816a1ff5cf860f3dabd3e26c34d959aa479904bf9caec17af1c5
0xd80 SWAP3
0xd81 SWAP2
0xd82 DUP2
0xd83 SWAP1
0xd84 SUB
0xd85 SWAP1
0xd86 SWAP2
0xd87 ADD
0xd88 SWAP1
0xd89 LOG1
---
0xd45: JUMPDEST 
0xd46: V1175 = 0x40
0xd49: V1176 = M[0x40]
0xd4a: V1177 = 0x1
0xd4c: V1178 = 0xa0
0xd4e: V1179 = 0x2
0xd50: V1180 = EXP 0x2 0xa0
0xd51: V1181 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd53: V1182 = AND V1123 0xffffffffffffffffffffffffffffffffffffffff
0xd55: M[V1176] = V1182
0xd56: V1183 = 0x20
0xd59: V1184 = ADD V1176 0x20
0xd5c: M[V1184] = V1135
0xd5e: V1185 = M[0x40]
0xd5f: V1186 = 0x991678bf7f45816a1ff5cf860f3dabd3e26c34d959aa479904bf9caec17af1c5
0xd84: V1187 = SUB V1176 V1185
0xd87: V1188 = ADD 0x40 V1187
0xd89: LOG V1185 V1188 0x991678bf7f45816a1ff5cf860f3dabd3e26c34d959aa479904bf9caec17af1c5
---
Entry stack: [V12, 0x1c0, V1123, V1135]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x1c0, V1123, V1135]

================================

Block 0xd8a
[0xd8a:0xd8d]
---
Predecessors: [0xd45]
Successors: [0x1c0]
---
0xd8a JUMPDEST
0xd8b POP
0xd8c POP
0xd8d JUMP
---
0xd8a: JUMPDEST 
0xd8d: JUMP 0x1c0
---
Entry stack: [V12, 0x1c0, V1123, V1135]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0xd8e
[0xd8e:0xda4]
---
Predecessors: [0x2ed]
Successors: [0xda5, 0xdaa]
---
0xd8e JUMPDEST
0xd8f PUSH1 0x0
0xd91 SLOAD
0xd92 CALLER
0xd93 PUSH1 0x1
0xd95 PUSH1 0xa0
0xd97 PUSH1 0x2
0xd99 EXP
0xd9a SUB
0xd9b SWAP1
0xd9c DUP2
0xd9d AND
0xd9e SWAP2
0xd9f AND
0xda0 EQ
0xda1 PUSH2 0xdaa
0xda4 JUMPI
---
0xd8e: JUMPDEST 
0xd8f: V1189 = 0x0
0xd91: V1190 = S[0x0]
0xd92: V1191 = CALLER
0xd93: V1192 = 0x1
0xd95: V1193 = 0xa0
0xd97: V1194 = 0x2
0xd99: V1195 = EXP 0x2 0xa0
0xd9a: V1196 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd9d: V1197 = AND 0xffffffffffffffffffffffffffffffffffffffff V1191
0xd9f: V1198 = AND V1190 0xffffffffffffffffffffffffffffffffffffffff
0xda0: V1199 = EQ V1198 V1197
0xda1: V1200 = 0xdaa
0xda4: JUMPI 0xdaa V1199
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xda5
[0xda5:0xda9]
---
Predecessors: [0xd8e]
Successors: []
---
0xda5 PUSH1 0x0
0xda7 PUSH1 0x0
0xda9 REVERT
---
0xda5: V1201 = 0x0
0xda7: V1202 = 0x0
0xda9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xdaa
[0xdaa:0xdce]
---
Predecessors: [0xd8e]
Successors: [0xdcf]
---
0xdaa JUMPDEST
0xdab PUSH1 0x0
0xdad DUP1
0xdae SLOAD
0xdaf PUSH21 0xff0000000000000000000000000000000000000000
0xdc5 NOT
0xdc6 AND
0xdc7 PUSH1 0xa0
0xdc9 PUSH1 0x2
0xdcb EXP
0xdcc OR
0xdcd SWAP1
0xdce SSTORE
---
0xdaa: JUMPDEST 
0xdab: V1203 = 0x0
0xdae: V1204 = S[0x0]
0xdaf: V1205 = 0xff0000000000000000000000000000000000000000
0xdc5: V1206 = NOT 0xff0000000000000000000000000000000000000000
0xdc6: V1207 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V1204
0xdc7: V1208 = 0xa0
0xdc9: V1209 = 0x2
0xdcb: V1210 = EXP 0x2 0xa0
0xdcc: V1211 = OR 0x10000000000000000000000000000000000000000 V1207
0xdce: S[0x0] = V1211
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xdcf
[0xdcf:0xdcf]
---
Predecessors: [0xdaa]
Successors: [0xdd0]
---
0xdcf JUMPDEST
---
0xdcf: JUMPDEST 
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xdd0
[0xdd0:0xdd1]
---
Predecessors: [0xdcf]
Successors: [0x1c0]
---
0xdd0 JUMPDEST
0xdd1 JUMP
---
0xdd0: JUMPDEST 
0xdd1: JUMP 0x1c0
---
Entry stack: [V12, 0x1c0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xdd2
[0xdd2:0xddd]
---
Predecessors: [0x2ff, 0x320]
Successors: [0x249]
---
0xdd2 JUMPDEST
0xdd3 PUSH8 0x16345785d8a0000
0xddc DUP2
0xddd JUMP
---
0xdd2: JUMPDEST 
0xdd3: V1212 = 0x16345785d8a0000
0xddd: JUMP 0x249
---
Entry stack: [V12, 0x249]
Stack pops: 1
Stack additions: [S0, 0x16345785d8a0000]
Exit stack: [V12, 0x249, 0x16345785d8a0000]

================================

Block 0xdde
[0xdde:0xde9]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0xdde JUMPDEST
0xddf PUSH8 0x16345785d8a0000
0xde8 DUP2
0xde9 JUMP
---
0xdde: JUMPDEST 
0xddf: V1213 = 0x16345785d8a0000
0xde9: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, 0x16345785d8a0000]
Exit stack: [S0, 0x16345785d8a0000]

================================

Block 0xdea
[0xdea:0xdf9]
---
Predecessors: [0x343]
Successors: [0x210]
---
0xdea JUMPDEST
0xdeb PUSH1 0x0
0xded SLOAD
0xdee PUSH1 0xa0
0xdf0 PUSH1 0x2
0xdf2 EXP
0xdf3 SWAP1
0xdf4 DIV
0xdf5 PUSH1 0xff
0xdf7 AND
0xdf8 DUP2
0xdf9 JUMP
---
0xdea: JUMPDEST 
0xdeb: V1214 = 0x0
0xded: V1215 = S[0x0]
0xdee: V1216 = 0xa0
0xdf0: V1217 = 0x2
0xdf2: V1218 = EXP 0x2 0xa0
0xdf4: V1219 = DIV V1215 0x10000000000000000000000000000000000000000
0xdf5: V1220 = 0xff
0xdf7: V1221 = AND 0xff V1219
0xdf9: JUMP 0x210
---
Entry stack: [V12, 0x210]
Stack pops: 1
Stack additions: [S0, V1221]
Exit stack: [V12, 0x210, V1221]

================================

Block 0xdfa
[0xdfa:0xdff]
---
Predecessors: [0x367]
Successors: [0x249]
---
0xdfa JUMPDEST
0xdfb PUSH1 0x6
0xdfd SLOAD
0xdfe DUP2
0xdff JUMP
---
0xdfa: JUMPDEST 
0xdfb: V1222 = 0x6
0xdfd: V1223 = S[0x6]
0xdff: JUMP 0x249
---
Entry stack: [V12, 0x249]
Stack pops: 1
Stack additions: [S0, V1223]
Exit stack: [V12, 0x249, V1223]

================================

Block 0xe00
[0xe00:0xe05]
---
Predecessors: [0x389]
Successors: [0x249]
---
0xe00 JUMPDEST
0xe01 PUSH2 0x9c4
0xe04 DUP2
0xe05 JUMP
---
0xe00: JUMPDEST 
0xe01: V1224 = 0x9c4
0xe05: JUMP 0x249
---
Entry stack: [V12, 0x249]
Stack pops: 1
Stack additions: [S0, 0x9c4]
Exit stack: [V12, 0x249, 0x9c4]

================================

Block 0xe06
[0xe06:0xe0b]
---
Predecessors: [0x3ab]
Successors: [0x249]
---
0xe06 JUMPDEST
0xe07 PUSH2 0x1388
0xe0a DUP2
0xe0b JUMP
---
0xe06: JUMPDEST 
0xe07: V1225 = 0x1388
0xe0b: JUMP 0x249
---
Entry stack: [V12, 0x249]
Stack pops: 1
Stack additions: [S0, 0x1388]
Exit stack: [V12, 0x249, 0x1388]

================================

Block 0xe0c
[0xe0c:0xe22]
---
Predecessors: [0x3cd]
Successors: [0xe23, 0xe28]
---
0xe0c JUMPDEST
0xe0d PUSH1 0x0
0xe0f SLOAD
0xe10 CALLER
0xe11 PUSH1 0x1
0xe13 PUSH1 0xa0
0xe15 PUSH1 0x2
0xe17 EXP
0xe18 SUB
0xe19 SWAP1
0xe1a DUP2
0xe1b AND
0xe1c SWAP2
0xe1d AND
0xe1e EQ
0xe1f PUSH2 0xe28
0xe22 JUMPI
---
0xe0c: JUMPDEST 
0xe0d: V1226 = 0x0
0xe0f: V1227 = S[0x0]
0xe10: V1228 = CALLER
0xe11: V1229 = 0x1
0xe13: V1230 = 0xa0
0xe15: V1231 = 0x2
0xe17: V1232 = EXP 0x2 0xa0
0xe18: V1233 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe1b: V1234 = AND 0xffffffffffffffffffffffffffffffffffffffff V1228
0xe1d: V1235 = AND V1227 0xffffffffffffffffffffffffffffffffffffffff
0xe1e: V1236 = EQ V1235 V1234
0xe1f: V1237 = 0xe28
0xe22: JUMPI 0xe28 V1236
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xe23
[0xe23:0xe27]
---
Predecessors: [0xe0c]
Successors: []
---
0xe23 PUSH1 0x0
0xe25 PUSH1 0x0
0xe27 REVERT
---
0xe23: V1238 = 0x0
0xe25: V1239 = 0x0
0xe27: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xe28
[0xe28:0xe3b]
---
Predecessors: [0xe0c]
Successors: [0xe3c, 0xe41]
---
0xe28 JUMPDEST
0xe29 PUSH1 0x0
0xe2b SLOAD
0xe2c PUSH1 0xa0
0xe2e PUSH1 0x2
0xe30 EXP
0xe31 SWAP1
0xe32 DIV
0xe33 PUSH1 0xff
0xe35 AND
0xe36 ISZERO
0xe37 ISZERO
0xe38 PUSH2 0xe41
0xe3b JUMPI
---
0xe28: JUMPDEST 
0xe29: V1240 = 0x0
0xe2b: V1241 = S[0x0]
0xe2c: V1242 = 0xa0
0xe2e: V1243 = 0x2
0xe30: V1244 = EXP 0x2 0xa0
0xe32: V1245 = DIV V1241 0x10000000000000000000000000000000000000000
0xe33: V1246 = 0xff
0xe35: V1247 = AND 0xff V1245
0xe36: V1248 = ISZERO V1247
0xe37: V1249 = ISZERO V1248
0xe38: V1250 = 0xe41
0xe3b: JUMPI 0xe41 V1249
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xe3c
[0xe3c:0xe40]
---
Predecessors: [0xe28]
Successors: []
---
0xe3c PUSH1 0x0
0xe3e PUSH1 0x0
0xe40 REVERT
---
0xe3c: V1251 = 0x0
0xe3e: V1252 = 0x0
0xe40: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xe41
[0xe41:0xe5f]
---
Predecessors: [0xe28]
Successors: [0xe60]
---
0xe41 JUMPDEST
0xe42 PUSH1 0x0
0xe44 DUP1
0xe45 SLOAD
0xe46 PUSH21 0xff0000000000000000000000000000000000000000
0xe5c NOT
0xe5d AND
0xe5e SWAP1
0xe5f SSTORE
---
0xe41: JUMPDEST 
0xe42: V1253 = 0x0
0xe45: V1254 = S[0x0]
0xe46: V1255 = 0xff0000000000000000000000000000000000000000
0xe5c: V1256 = NOT 0xff0000000000000000000000000000000000000000
0xe5d: V1257 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V1254
0xe5f: S[0x0] = V1257
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xe60
[0xe60:0xe60]
---
Predecessors: [0xe41]
Successors: [0xe61]
---
0xe60 JUMPDEST
---
0xe60: JUMPDEST 
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xe61
[0xe61:0xe61]
---
Predecessors: [0xe60]
Successors: [0xe62]
---
0xe61 JUMPDEST
---
0xe61: JUMPDEST 
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xe62
[0xe62:0xe63]
---
Predecessors: [0xe61]
Successors: [0x1c0]
---
0xe62 JUMPDEST
0xe63 JUMP
---
0xe62: JUMPDEST 
0xe63: JUMP 0x1c0
---
Entry stack: [V12, 0x1c0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xe64
[0xe64:0xe72]
---
Predecessors: [0x3df]
Successors: [0x1e4]
---
0xe64 JUMPDEST
0xe65 PUSH1 0x0
0xe67 SLOAD
0xe68 PUSH1 0x1
0xe6a PUSH1 0xa0
0xe6c PUSH1 0x2
0xe6e EXP
0xe6f SUB
0xe70 AND
0xe71 DUP2
0xe72 JUMP
---
0xe64: JUMPDEST 
0xe65: V1258 = 0x0
0xe67: V1259 = S[0x0]
0xe68: V1260 = 0x1
0xe6a: V1261 = 0xa0
0xe6c: V1262 = 0x2
0xe6e: V1263 = EXP 0x2 0xa0
0xe6f: V1264 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe70: V1265 = AND 0xffffffffffffffffffffffffffffffffffffffff V1259
0xe72: JUMP 0x1e4
---
Entry stack: [V12, 0x1e4]
Stack pops: 1
Stack additions: [S0, V1265]
Exit stack: [V12, 0x1e4, V1265]

================================

Block 0xe73
[0xe73:0xe78]
---
Predecessors: [0x40b]
Successors: [0x249]
---
0xe73 JUMPDEST
0xe74 PUSH1 0x5
0xe76 SLOAD
0xe77 DUP2
0xe78 JUMP
---
0xe73: JUMPDEST 
0xe74: V1266 = 0x5
0xe76: V1267 = S[0x5]
0xe78: JUMP 0x249
---
Entry stack: [V12, 0x249]
Stack pops: 1
Stack additions: [S0, V1267]
Exit stack: [V12, 0x249, V1267]

================================

Block 0xe79
[0xe79:0xe8f]
---
Predecessors: [0x42d]
Successors: [0xe90, 0xe95]
---
0xe79 JUMPDEST
0xe7a PUSH1 0x0
0xe7c SLOAD
0xe7d CALLER
0xe7e PUSH1 0x1
0xe80 PUSH1 0xa0
0xe82 PUSH1 0x2
0xe84 EXP
0xe85 SUB
0xe86 SWAP1
0xe87 DUP2
0xe88 AND
0xe89 SWAP2
0xe8a AND
0xe8b EQ
0xe8c PUSH2 0xe95
0xe8f JUMPI
---
0xe79: JUMPDEST 
0xe7a: V1268 = 0x0
0xe7c: V1269 = S[0x0]
0xe7d: V1270 = CALLER
0xe7e: V1271 = 0x1
0xe80: V1272 = 0xa0
0xe82: V1273 = 0x2
0xe84: V1274 = EXP 0x2 0xa0
0xe85: V1275 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe88: V1276 = AND 0xffffffffffffffffffffffffffffffffffffffff V1270
0xe8a: V1277 = AND V1269 0xffffffffffffffffffffffffffffffffffffffff
0xe8b: V1278 = EQ V1277 V1276
0xe8c: V1279 = 0xe95
0xe8f: JUMPI 0xe95 V1278
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xe90
[0xe90:0xe94]
---
Predecessors: [0xe79]
Successors: []
---
0xe90 PUSH1 0x0
0xe92 PUSH1 0x0
0xe94 REVERT
---
0xe90: V1280 = 0x0
0xe92: V1281 = 0x0
0xe94: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xe95
[0xe95:0xec9]
---
Predecessors: [0xe79]
Successors: [0x1bb, 0xeca]
---
0xe95 JUMPDEST
0xe96 PUSH1 0x0
0xe98 DUP1
0xe99 SLOAD
0xe9a PUSH1 0x40
0xe9c MLOAD
0xe9d PUSH1 0x1
0xe9f PUSH1 0xa0
0xea1 PUSH1 0x2
0xea3 EXP
0xea4 SUB
0xea5 SWAP2
0xea6 DUP3
0xea7 AND
0xea8 SWAP3
0xea9 ADDRESS
0xeaa SWAP1
0xeab SWAP3
0xeac AND
0xead BALANCE
0xeae DUP1
0xeaf ISZERO
0xeb0 PUSH2 0x8fc
0xeb3 MUL
0xeb4 SWAP3
0xeb5 SWAP1
0xeb6 SWAP2
0xeb7 SWAP1
0xeb8 DUP2
0xeb9 DUP2
0xeba DUP2
0xebb DUP6
0xebc DUP9
0xebd DUP9
0xebe CALL
0xebf SWAP4
0xec0 POP
0xec1 POP
0xec2 POP
0xec3 POP
0xec4 ISZERO
0xec5 ISZERO
0xec6 PUSH2 0x1bb
0xec9 JUMPI
---
0xe95: JUMPDEST 
0xe96: V1282 = 0x0
0xe99: V1283 = S[0x0]
0xe9a: V1284 = 0x40
0xe9c: V1285 = M[0x40]
0xe9d: V1286 = 0x1
0xe9f: V1287 = 0xa0
0xea1: V1288 = 0x2
0xea3: V1289 = EXP 0x2 0xa0
0xea4: V1290 = SUB 0x10000000000000000000000000000000000000000 0x1
0xea7: V1291 = AND 0xffffffffffffffffffffffffffffffffffffffff V1283
0xea9: V1292 = ADDRESS
0xeac: V1293 = AND 0xffffffffffffffffffffffffffffffffffffffff V1292
0xead: V1294 = BALANCE V1293
0xeaf: V1295 = ISZERO V1294
0xeb0: V1296 = 0x8fc
0xeb3: V1297 = MUL 0x8fc V1295
0xebe: V1298 = CALL V1297 V1291 V1294 V1285 0x0 V1285 0x0
0xec4: V1299 = ISZERO V1298
0xec5: V1300 = ISZERO V1299
0xec6: V1301 = 0x1bb
0xec9: JUMPI 0x1bb V1300
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xeca
[0xeca:0xece]
---
Predecessors: [0xe95]
Successors: []
---
0xeca PUSH1 0x0
0xecc PUSH1 0x0
0xece REVERT
---
0xeca: V1302 = 0x0
0xecc: V1303 = 0x0
0xece: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xecf
[0xecf:0xecf]
---
Predecessors: []
Successors: [0xed0]
---
0xecf JUMPDEST
---
0xecf: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xed0
[0xed0:0xed0]
---
Predecessors: [0xecf]
Successors: [0xed1]
---
0xed0 JUMPDEST
---
0xed0: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xed1
[0xed1:0xed8]
---
Predecessors: [0xed0]
Successors: []
Has unresolved jump.
---
0xed1 JUMPDEST
0xed2 JUMP
0xed3 JUMPDEST
0xed4 PUSH2 0x3e8
0xed7 DUP2
0xed8 JUMP
---
0xed1: JUMPDEST 
0xed2: JUMP S0
0xed3: JUMPDEST 
0xed4: V1304 = 0x3e8
0xed8: JUMP S0
---
Entry stack: []
Stack pops: 2
Stack additions: [0x3e8, S0]
Exit stack: []

================================

Block 0xed9
[0xed9:0xefc]
---
Predecessors: [0x461]
Successors: [0x475]
---
0xed9 JUMPDEST
0xeda PUSH1 0x9
0xedc PUSH1 0x20
0xede MSTORE
0xedf PUSH1 0x0
0xee1 SWAP1
0xee2 DUP2
0xee3 MSTORE
0xee4 PUSH1 0x40
0xee6 SWAP1
0xee7 SHA3
0xee8 DUP1
0xee9 SLOAD
0xeea PUSH1 0x1
0xeec DUP3
0xeed ADD
0xeee SLOAD
0xeef PUSH1 0x2
0xef1 SWAP1
0xef2 SWAP3
0xef3 ADD
0xef4 SLOAD
0xef5 SWAP1
0xef6 SWAP2
0xef7 SWAP1
0xef8 PUSH1 0xff
0xefa AND
0xefb DUP4
0xefc JUMP
---
0xed9: JUMPDEST 
0xeda: V1305 = 0x9
0xedc: V1306 = 0x20
0xede: M[0x20] = 0x9
0xedf: V1307 = 0x0
0xee3: M[0x0] = V367
0xee4: V1308 = 0x40
0xee7: V1309 = SHA3 0x0 0x40
0xee9: V1310 = S[V1309]
0xeea: V1311 = 0x1
0xeed: V1312 = ADD V1309 0x1
0xeee: V1313 = S[V1312]
0xeef: V1314 = 0x2
0xef3: V1315 = ADD V1309 0x2
0xef4: V1316 = S[V1315]
0xef8: V1317 = 0xff
0xefa: V1318 = AND 0xff V1316
0xefc: JUMP 0x475
---
Entry stack: [V12, 0x475, V367]
Stack pops: 2
Stack additions: [S1, V1310, V1313, V1318]
Exit stack: [V12, 0x475, V1310, V1313, V1318]

================================

Block 0xefd
[0xefd:0xf13]
---
Predecessors: [0x4af]
Successors: [0xf14, 0xf19]
---
0xefd JUMPDEST
0xefe PUSH1 0x0
0xf00 SLOAD
0xf01 CALLER
0xf02 PUSH1 0x1
0xf04 PUSH1 0xa0
0xf06 PUSH1 0x2
0xf08 EXP
0xf09 SUB
0xf0a SWAP1
0xf0b DUP2
0xf0c AND
0xf0d SWAP2
0xf0e AND
0xf0f EQ
0xf10 PUSH2 0xf19
0xf13 JUMPI
---
0xefd: JUMPDEST 
0xefe: V1319 = 0x0
0xf00: V1320 = S[0x0]
0xf01: V1321 = CALLER
0xf02: V1322 = 0x1
0xf04: V1323 = 0xa0
0xf06: V1324 = 0x2
0xf08: V1325 = EXP 0x2 0xa0
0xf09: V1326 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf0c: V1327 = AND 0xffffffffffffffffffffffffffffffffffffffff V1321
0xf0e: V1328 = AND V1320 0xffffffffffffffffffffffffffffffffffffffff
0xf0f: V1329 = EQ V1328 V1327
0xf10: V1330 = 0xf19
0xf13: JUMPI 0xf19 V1329
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xf14
[0xf14:0xf18]
---
Predecessors: [0xefd]
Successors: []
---
0xf14 PUSH1 0x0
0xf16 PUSH1 0x0
0xf18 REVERT
---
0xf14: V1331 = 0x0
0xf16: V1332 = 0x0
0xf18: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xf19
[0xf19:0xf21]
---
Predecessors: [0xefd]
Successors: [0xf22, 0xf27]
---
0xf19 JUMPDEST
0xf1a PUSH1 0x6
0xf1c SLOAD
0xf1d ISZERO
0xf1e PUSH2 0xf27
0xf21 JUMPI
---
0xf19: JUMPDEST 
0xf1a: V1333 = 0x6
0xf1c: V1334 = S[0x6]
0xf1d: V1335 = ISZERO V1334
0xf1e: V1336 = 0xf27
0xf21: JUMPI 0xf27 V1335
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xf22
[0xf22:0xf26]
---
Predecessors: [0xf19]
Successors: []
---
0xf22 PUSH1 0x0
0xf24 PUSH1 0x0
0xf26 REVERT
---
0xf22: V1337 = 0x0
0xf24: V1338 = 0x0
0xf26: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xf27
[0xf27:0xf35]
---
Predecessors: [0xf19]
Successors: [0xf36]
---
0xf27 JUMPDEST
0xf28 TIMESTAMP
0xf29 PUSH1 0x6
0xf2b DUP2
0xf2c SWAP1
0xf2d SSTORE
0xf2e PUSH3 0x278d00
0xf32 ADD
0xf33 PUSH1 0x7
0xf35 SSTORE
---
0xf27: JUMPDEST 
0xf28: V1339 = TIMESTAMP
0xf29: V1340 = 0x6
0xf2d: S[0x6] = V1339
0xf2e: V1341 = 0x278d00
0xf32: V1342 = ADD 0x278d00 V1339
0xf33: V1343 = 0x7
0xf35: S[0x7] = V1342
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xf36
[0xf36:0xf36]
---
Predecessors: [0xf27]
Successors: [0xf37]
---
0xf36 JUMPDEST
---
0xf36: JUMPDEST 
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0]

================================

Block 0xf37
[0xf37:0xf38]
---
Predecessors: [0xf36]
Successors: [0x1c0]
---
0xf37 JUMPDEST
0xf38 JUMP
---
0xf37: JUMPDEST 
0xf38: JUMP 0x1c0
---
Entry stack: [V12, 0x1c0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xf39
[0xf39:0xf44]
---
Predecessors: [0x4c1]
Successors: [0x249]
---
0xf39 JUMPDEST
0xf3a PUSH8 0x29a2241af62c0000
0xf43 DUP2
0xf44 JUMP
---
0xf39: JUMPDEST 
0xf3a: V1344 = 0x29a2241af62c0000
0xf44: JUMP 0x249
---
Entry stack: [V12, 0x249]
Stack pops: 1
Stack additions: [S0, 0x29a2241af62c0000]
Exit stack: [V12, 0x249, 0x29a2241af62c0000]

================================

Block 0xf45
[0xf45:0xf50]
---
Predecessors: [0x4e3]
Successors: [0x249]
---
0xf45 JUMPDEST
0xf46 PUSH8 0x8ac7230489e80000
0xf4f DUP2
0xf50 JUMP
---
0xf45: JUMPDEST 
0xf46: V1345 = 0x8ac7230489e80000
0xf50: JUMP 0x249
---
Entry stack: [V12, 0x249]
Stack pops: 1
Stack additions: [S0, 0x8ac7230489e80000]
Exit stack: [V12, 0x249, 0x8ac7230489e80000]

================================

Block 0xf51
[0xf51:0xf5f]
---
Predecessors: [0x505]
Successors: [0x1e4]
---
0xf51 JUMPDEST
0xf52 PUSH1 0x3
0xf54 SLOAD
0xf55 PUSH1 0x1
0xf57 PUSH1 0xa0
0xf59 PUSH1 0x2
0xf5b EXP
0xf5c SUB
0xf5d AND
0xf5e DUP2
0xf5f JUMP
---
0xf51: JUMPDEST 
0xf52: V1346 = 0x3
0xf54: V1347 = S[0x3]
0xf55: V1348 = 0x1
0xf57: V1349 = 0xa0
0xf59: V1350 = 0x2
0xf5b: V1351 = EXP 0x2 0xa0
0xf5c: V1352 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf5d: V1353 = AND 0xffffffffffffffffffffffffffffffffffffffff V1347
0xf5f: JUMP 0x1e4
---
Entry stack: [V12, 0x1e4]
Stack pops: 1
Stack additions: [S0, V1353]
Exit stack: [V12, 0x1e4, V1353]

================================

Block 0xf60
[0xf60:0xf66]
---
Predecessors: [0x531]
Successors: [0x249]
---
0xf60 JUMPDEST
0xf61 PUSH3 0x3d090
0xf65 DUP2
0xf66 JUMP
---
0xf60: JUMPDEST 
0xf61: V1354 = 0x3d090
0xf66: JUMP 0x249
---
Entry stack: [V12, 0x249]
Stack pops: 1
Stack additions: [S0, 0x3d090]
Exit stack: [V12, 0x249, 0x3d090]

================================

Block 0xf67
[0xf67:0xf82]
---
Predecessors: [0x553]
Successors: [0xf83, 0xf88]
---
0xf67 JUMPDEST
0xf68 PUSH1 0x0
0xf6a DUP1
0xf6b SLOAD
0xf6c DUP2
0xf6d SWAP1
0xf6e DUP2
0xf6f SWAP1
0xf70 CALLER
0xf71 PUSH1 0x1
0xf73 PUSH1 0xa0
0xf75 PUSH1 0x2
0xf77 EXP
0xf78 SUB
0xf79 SWAP1
0xf7a DUP2
0xf7b AND
0xf7c SWAP2
0xf7d AND
0xf7e EQ
0xf7f PUSH2 0xf88
0xf82 JUMPI
---
0xf67: JUMPDEST 
0xf68: V1355 = 0x0
0xf6b: V1356 = S[0x0]
0xf70: V1357 = CALLER
0xf71: V1358 = 0x1
0xf73: V1359 = 0xa0
0xf75: V1360 = 0x2
0xf77: V1361 = EXP 0x2 0xa0
0xf78: V1362 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf7b: V1363 = AND 0xffffffffffffffffffffffffffffffffffffffff V1357
0xf7d: V1364 = AND V1356 0xffffffffffffffffffffffffffffffffffffffff
0xf7e: V1365 = EQ V1364 V1363
0xf7f: V1366 = 0xf88
0xf82: JUMPI 0xf88 V1365
---
Entry stack: [V12, 0x1c0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x1c0, 0x0, 0x0, 0x0]

================================

Block 0xf83
[0xf83:0xf87]
---
Predecessors: [0xf67]
Successors: []
---
0xf83 PUSH1 0x0
0xf85 PUSH1 0x0
0xf87 REVERT
---
0xf83: V1367 = 0x0
0xf85: V1368 = 0x0
0xf87: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, 0x0, 0x0, 0x0]

================================

Block 0xf88
[0xf88:0xfb7]
---
Predecessors: [0xf67]
Successors: [0x11f4]
---
0xf88 JUMPDEST
0xf89 PUSH1 0x5
0xf8b SLOAD
0xf8c PUSH3 0x3d090
0xf90 SUB
0xf91 SWAP3
0xf92 POP
0xf93 PUSH2 0xfc7
0xf96 PUSH8 0xde0b6b3a7640000
0xf9f PUSH2 0xfb8
0xfa2 PUSH8 0x16345785d8a0000
0xfab PUSH2 0x3e8
0xfae PUSH4 0xffffffff
0xfb3 PUSH2 0x11f4
0xfb6 AND
0xfb7 JUMP
---
0xf88: JUMPDEST 
0xf89: V1369 = 0x5
0xf8b: V1370 = S[0x5]
0xf8c: V1371 = 0x3d090
0xf90: V1372 = SUB 0x3d090 V1370
0xf93: V1373 = 0xfc7
0xf96: V1374 = 0xde0b6b3a7640000
0xf9f: V1375 = 0xfb8
0xfa2: V1376 = 0x16345785d8a0000
0xfab: V1377 = 0x3e8
0xfae: V1378 = 0xffffffff
0xfb3: V1379 = 0x11f4
0xfb6: V1380 = AND 0x11f4 0xffffffff
0xfb7: JUMP 0x11f4
---
Entry stack: [V12, 0x1c0, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V1372, S1, S0, 0xfc7, 0xde0b6b3a7640000, 0xfb8, 0x16345785d8a0000, 0x3e8]
Exit stack: [V12, 0x1c0, V1372, 0x0, 0x0, 0xfc7, 0xde0b6b3a7640000, 0xfb8, 0x16345785d8a0000, 0x3e8]

================================

Block 0xfb8
[0xfb8:0xfbf]
---
Predecessors: [0x121c]
Successors: [0xfc0, 0xfc1]
---
0xfb8 JUMPDEST
0xfb9 DUP2
0xfba ISZERO
0xfbb ISZERO
0xfbc PUSH2 0xfc1
0xfbf JUMPI
---
0xfb8: JUMPDEST 
0xfba: V1381 = ISZERO S1
0xfbb: V1382 = ISZERO V1381
0xfbc: V1383 = 0xfc1
0xfbf: JUMPI 0xfc1 V1382
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xfc0
[0xfc0:0xfc0]
---
Predecessors: [0xfb8]
Successors: []
---
0xfc0 INVALID
---
0xfc0: INVALID 
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xfc1
[0xfc1:0xfc6]
---
Predecessors: [0xfb8]
Successors: [0x1266]
---
0xfc1 JUMPDEST
0xfc2 DIV
0xfc3 PUSH2 0x1266
0xfc6 JUMP
---
0xfc1: JUMPDEST 
0xfc2: V1384 = DIV S0 S1
0xfc3: V1385 = 0x1266
0xfc6: JUMP 0x1266
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V1384]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1384]

================================

Block 0xfc7
[0xfc7:0xfd1]
---
Predecessors: []
Successors: [0xfd2, 0xfd7]
---
0xfc7 JUMPDEST
0xfc8 SWAP2
0xfc9 POP
0xfca DUP2
0xfcb DUP4
0xfcc GT
0xfcd ISZERO
0xfce PUSH2 0xfd7
0xfd1 JUMPI
---
0xfc7: JUMPDEST 
0xfcc: V1386 = GT S3 S0
0xfcd: V1387 = ISZERO V1386
0xfce: V1388 = 0xfd7
0xfd1: JUMPI 0xfd7 V1387
---
Entry stack: []
Stack pops: 4
Stack additions: [S3, S0, S1]
Exit stack: [S3, S0, S1]

================================

Block 0xfd2
[0xfd2:0xfd6]
---
Predecessors: [0xfc7]
Successors: []
---
0xfd2 PUSH1 0x0
0xfd4 PUSH1 0x0
0xfd6 REVERT
---
0xfd2: V1389 = 0x0
0xfd4: V1390 = 0x0
0xfd6: REVERT 0x0 0x0
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0xfd7
[0xfd7:0x1056]
---
Predecessors: [0xfc7]
Successors: [0x1057, 0x1058]
---
0xfd7 JUMPDEST
0xfd8 POP
0xfd9 PUSH1 0x0
0xfdb DUP1
0xfdc SLOAD
0xfdd PUSH1 0x1
0xfdf PUSH1 0xa0
0xfe1 PUSH1 0x2
0xfe3 EXP
0xfe4 SUB
0xfe5 SWAP1
0xfe6 DUP2
0xfe7 AND
0xfe8 DUP1
0xfe9 DUP4
0xfea MSTORE
0xfeb PUSH1 0x9
0xfed PUSH1 0x20
0xfef MSTORE
0xff0 PUSH1 0x40
0xff2 DUP1
0xff3 DUP5
0xff4 SHA3
0xff5 PUSH1 0x2
0xff7 SLOAD
0xff8 DUP3
0xff9 MLOAD
0xffa PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x101b DUP2
0x101c MSTORE
0x101d PUSH1 0x4
0x101f DUP2
0x1020 ADD
0x1021 SWAP5
0x1022 SWAP1
0x1023 SWAP5
0x1024 MSTORE
0x1025 PUSH1 0x24
0x1027 DUP5
0x1028 ADD
0x1029 DUP9
0x102a SWAP1
0x102b MSTORE
0x102c SWAP2
0x102d MLOAD
0x102e SWAP1
0x102f SWAP5
0x1030 PUSH2 0x100
0x1033 SWAP1
0x1034 SWAP3
0x1035 DIV
0x1036 SWAP1
0x1037 SWAP4
0x1038 AND
0x1039 SWAP3
0x103a PUSH4 0xa9059cbb
0x103f SWAP3
0x1040 PUSH1 0x44
0x1042 DUP1
0x1043 DUP3
0x1044 ADD
0x1045 SWAP4
0x1046 SWAP3
0x1047 SWAP2
0x1048 DUP3
0x1049 SWAP1
0x104a SUB
0x104b ADD
0x104c DUP2
0x104d DUP4
0x104e DUP8
0x104f DUP1
0x1050 EXTCODESIZE
0x1051 ISZERO
0x1052 ISZERO
0x1053 PUSH2 0x1058
0x1056 JUMPI
---
0xfd7: JUMPDEST 
0xfd9: V1391 = 0x0
0xfdc: V1392 = S[0x0]
0xfdd: V1393 = 0x1
0xfdf: V1394 = 0xa0
0xfe1: V1395 = 0x2
0xfe3: V1396 = EXP 0x2 0xa0
0xfe4: V1397 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfe7: V1398 = AND 0xffffffffffffffffffffffffffffffffffffffff V1392
0xfea: M[0x0] = V1398
0xfeb: V1399 = 0x9
0xfed: V1400 = 0x20
0xfef: M[0x20] = 0x9
0xff0: V1401 = 0x40
0xff4: V1402 = SHA3 0x0 0x40
0xff5: V1403 = 0x2
0xff7: V1404 = S[0x2]
0xff9: V1405 = M[0x40]
0xffa: V1406 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x101c: M[V1405] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x101d: V1407 = 0x4
0x1020: V1408 = ADD V1405 0x4
0x1024: M[V1408] = V1398
0x1025: V1409 = 0x24
0x1028: V1410 = ADD V1405 0x24
0x102b: M[V1410] = S2
0x102d: V1411 = M[0x40]
0x1030: V1412 = 0x100
0x1035: V1413 = DIV V1404 0x100
0x1038: V1414 = AND 0xffffffffffffffffffffffffffffffffffffffff V1413
0x103a: V1415 = 0xa9059cbb
0x1040: V1416 = 0x44
0x1044: V1417 = ADD V1405 0x44
0x104a: V1418 = SUB V1405 V1411
0x104b: V1419 = ADD V1418 0x44
0x1050: V1420 = EXTCODESIZE V1414
0x1051: V1421 = ISZERO V1420
0x1052: V1422 = ISZERO V1421
0x1053: V1423 = 0x1058
0x1056: JUMPI 0x1058 V1422
---
Entry stack: [S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, V1402, V1414, 0xa9059cbb, V1417, 0x0, V1411, V1419, V1411, 0x0, V1414]
Exit stack: [S2, S1, V1402, V1414, 0xa9059cbb, V1417, 0x0, V1411, V1419, V1411, 0x0, V1414]

================================

Block 0x1057
[0x1057:0x1057]
---
Predecessors: [0xfd7]
Successors: []
---
0x1057 INVALID
---
0x1057: INVALID 
---
Entry stack: [S11, S10, V1402, V1414, 0xa9059cbb, V1417, 0x0, V1411, V1419, V1411, 0x0, V1414]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, V1402, V1414, 0xa9059cbb, V1417, 0x0, V1411, V1419, V1411, 0x0, V1414]

================================

Block 0x1058
[0x1058:0x1064]
---
Predecessors: [0xfd7]
Successors: [0x1065, 0x1066]
---
0x1058 JUMPDEST
0x1059 PUSH2 0x2c6
0x105c GAS
0x105d SUB
0x105e CALL
0x105f ISZERO
0x1060 ISZERO
0x1061 PUSH2 0x1066
0x1064 JUMPI
---
0x1058: JUMPDEST 
0x1059: V1424 = 0x2c6
0x105c: V1425 = GAS
0x105d: V1426 = SUB V1425 0x2c6
0x105e: V1427 = CALL V1426 V1414 0x0 V1411 V1419 V1411 0x0
0x105f: V1428 = ISZERO V1427
0x1060: V1429 = ISZERO V1428
0x1061: V1430 = 0x1066
0x1064: JUMPI 0x1066 V1429
---
Entry stack: [S11, S10, V1402, V1414, 0xa9059cbb, V1417, 0x0, V1411, V1419, V1411, 0x0, V1414]
Stack pops: 6
Stack additions: []
Exit stack: [S11, S10, V1402, V1414, 0xa9059cbb, V1417]

================================

Block 0x1065
[0x1065:0x1065]
---
Predecessors: [0x1058]
Successors: []
---
0x1065 INVALID
---
0x1065: INVALID 
---
Entry stack: [S5, S4, V1402, V1414, 0xa9059cbb, V1417]
Stack pops: 0
Stack additions: []
Exit stack: [S5, S4, V1402, V1414, 0xa9059cbb, V1417]

================================

Block 0x1066
[0x1066:0x107d]
---
Predecessors: [0x1058]
Successors: [0x1291]
---
0x1066 JUMPDEST
0x1067 POP
0x1068 POP
0x1069 POP
0x106a PUSH1 0x1
0x106c DUP2
0x106d ADD
0x106e SLOAD
0x106f PUSH2 0x107e
0x1072 SWAP1
0x1073 DUP5
0x1074 PUSH4 0xffffffff
0x1079 PUSH2 0x1291
0x107c AND
0x107d JUMP
---
0x1066: JUMPDEST 
0x106a: V1431 = 0x1
0x106d: V1432 = ADD V1402 0x1
0x106e: V1433 = S[V1432]
0x106f: V1434 = 0x107e
0x1074: V1435 = 0xffffffff
0x1079: V1436 = 0x1291
0x107c: V1437 = AND 0x1291 0xffffffff
0x107d: JUMP 0x1291
---
Entry stack: [S5, S4, V1402, V1414, 0xa9059cbb, V1417]
Stack pops: 6
Stack additions: [S5, S4, S3, 0x107e, V1433, S5]
Exit stack: [S5, S4, V1402, 0x107e, V1433, S5]

================================

Block 0x107e
[0x107e:0x1095]
---
Predecessors: [0x121c]
Successors: [0x1291]
---
0x107e JUMPDEST
0x107f PUSH1 0x1
0x1081 DUP3
0x1082 ADD
0x1083 SSTORE
0x1084 PUSH1 0x5
0x1086 SLOAD
0x1087 PUSH2 0x1096
0x108a SWAP1
0x108b DUP5
0x108c PUSH4 0xffffffff
0x1091 PUSH2 0x1291
0x1094 AND
0x1095 JUMP
---
0x107e: JUMPDEST 
0x107f: V1438 = 0x1
0x1082: V1439 = ADD S1 0x1
0x1083: S[V1439] = S0
0x1084: V1440 = 0x5
0x1086: V1441 = S[0x5]
0x1087: V1442 = 0x1096
0x108c: V1443 = 0xffffffff
0x1091: V1444 = 0x1291
0x1094: V1445 = AND 0x1291 0xffffffff
0x1095: JUMP 0x1291
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x1096, V1441, S3]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1096, V1441, S3]

================================

Block 0x1096
[0x1096:0x1123]
---
Predecessors: [0x121c]
Successors: [0x1124]
---
0x1096 JUMPDEST
0x1097 PUSH1 0x5
0x1099 SSTORE
0x109a PUSH1 0x40
0x109c DUP1
0x109d MLOAD
0x109e DUP5
0x109f DUP2
0x10a0 MSTORE
0x10a1 SWAP1
0x10a2 MLOAD
0x10a3 PUSH1 0x1
0x10a5 PUSH1 0xa0
0x10a7 PUSH1 0x2
0x10a9 EXP
0x10aa SUB
0x10ab ADDRESS
0x10ac AND
0x10ad SWAP2
0x10ae PUSH32 0xf3c1c7c0eb1328ddc834c4c9e579c06d35f443bf1102b034653624a239c7a40c
0x10cf SWAP2
0x10d0 SWAP1
0x10d1 DUP2
0x10d2 SWAP1
0x10d3 SUB
0x10d4 PUSH1 0x20
0x10d6 ADD
0x10d7 SWAP1
0x10d8 LOG2
0x10d9 PUSH1 0x0
0x10db SLOAD
0x10dc PUSH1 0x4
0x10de SLOAD
0x10df PUSH1 0x40
0x10e1 DUP1
0x10e2 MLOAD
0x10e3 PUSH1 0x1
0x10e5 PUSH1 0xa0
0x10e7 PUSH1 0x2
0x10e9 EXP
0x10ea SUB
0x10eb SWAP1
0x10ec SWAP4
0x10ed AND
0x10ee DUP4
0x10ef MSTORE
0x10f0 PUSH1 0x20
0x10f2 DUP4
0x10f3 ADD
0x10f4 SWAP2
0x10f5 SWAP1
0x10f6 SWAP2
0x10f7 MSTORE
0x10f8 DUP1
0x10f9 MLOAD
0x10fa PUSH32 0xd1dc370699ae69fb860ed754789a4327413ec1cd379b93f2cbedf449a26b0e85
0x111b SWAP3
0x111c DUP2
0x111d SWAP1
0x111e SUB
0x111f SWAP1
0x1120 SWAP2
0x1121 ADD
0x1122 SWAP1
0x1123 LOG1
---
0x1096: JUMPDEST 
0x1097: V1446 = 0x5
0x1099: S[0x5] = S0
0x109a: V1447 = 0x40
0x109d: V1448 = M[0x40]
0x10a0: M[V1448] = S3
0x10a2: V1449 = M[0x40]
0x10a3: V1450 = 0x1
0x10a5: V1451 = 0xa0
0x10a7: V1452 = 0x2
0x10a9: V1453 = EXP 0x2 0xa0
0x10aa: V1454 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10ab: V1455 = ADDRESS
0x10ac: V1456 = AND V1455 0xffffffffffffffffffffffffffffffffffffffff
0x10ae: V1457 = 0xf3c1c7c0eb1328ddc834c4c9e579c06d35f443bf1102b034653624a239c7a40c
0x10d3: V1458 = SUB V1448 V1449
0x10d4: V1459 = 0x20
0x10d6: V1460 = ADD 0x20 V1458
0x10d8: LOG V1449 V1460 0xf3c1c7c0eb1328ddc834c4c9e579c06d35f443bf1102b034653624a239c7a40c V1456
0x10d9: V1461 = 0x0
0x10db: V1462 = S[0x0]
0x10dc: V1463 = 0x4
0x10de: V1464 = S[0x4]
0x10df: V1465 = 0x40
0x10e2: V1466 = M[0x40]
0x10e3: V1467 = 0x1
0x10e5: V1468 = 0xa0
0x10e7: V1469 = 0x2
0x10e9: V1470 = EXP 0x2 0xa0
0x10ea: V1471 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10ed: V1472 = AND V1462 0xffffffffffffffffffffffffffffffffffffffff
0x10ef: M[V1466] = V1472
0x10f0: V1473 = 0x20
0x10f3: V1474 = ADD V1466 0x20
0x10f7: M[V1474] = V1464
0x10f9: V1475 = M[0x40]
0x10fa: V1476 = 0xd1dc370699ae69fb860ed754789a4327413ec1cd379b93f2cbedf449a26b0e85
0x111e: V1477 = SUB V1466 V1475
0x1121: V1478 = ADD 0x40 V1477
0x1123: LOG V1475 V1478 0xd1dc370699ae69fb860ed754789a4327413ec1cd379b93f2cbedf449a26b0e85
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1124
[0x1124:0x1124]
---
Predecessors: [0x1096]
Successors: [0x1125]
---
0x1124 JUMPDEST
---
0x1124: JUMPDEST 
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1125
[0x1125:0x1129]
---
Predecessors: [0x1124]
Successors: [0x1bb, 0x1c0, 0x638, 0x63d, 0x69a, 0x6e2, 0xae1]
---
0x1125 JUMPDEST
0x1126 POP
0x1127 POP
0x1128 POP
0x1129 JUMP
---
0x1125: JUMPDEST 
0x1129: JUMP S3
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0x112a
[0x112a:0x113b]
---
Predecessors: [0x565]
Successors: [0x249]
---
0x112a JUMPDEST
0x112b PUSH1 0x1
0x112d PUSH1 0x20
0x112f MSTORE
0x1130 PUSH1 0x0
0x1132 SWAP1
0x1133 DUP2
0x1134 MSTORE
0x1135 PUSH1 0x40
0x1137 SWAP1
0x1138 SHA3
0x1139 SLOAD
0x113a DUP2
0x113b JUMP
---
0x112a: JUMPDEST 
0x112b: V1479 = 0x1
0x112d: V1480 = 0x20
0x112f: M[0x20] = 0x1
0x1130: V1481 = 0x0
0x1134: M[0x0] = V457
0x1135: V1482 = 0x40
0x1138: V1483 = SHA3 0x0 0x40
0x1139: V1484 = S[V1483]
0x113b: JUMP 0x249
---
Entry stack: [V12, 0x249, V457]
Stack pops: 2
Stack additions: [S1, V1484]
Exit stack: [V12, 0x249, V1484]

================================

Block 0x113c
[0x113c:0x1152]
---
Predecessors: [0x593]
Successors: [0x1153, 0x1158]
---
0x113c JUMPDEST
0x113d PUSH1 0x0
0x113f SLOAD
0x1140 CALLER
0x1141 PUSH1 0x1
0x1143 PUSH1 0xa0
0x1145 PUSH1 0x2
0x1147 EXP
0x1148 SUB
0x1149 SWAP1
0x114a DUP2
0x114b AND
0x114c SWAP2
0x114d AND
0x114e EQ
0x114f PUSH2 0x1158
0x1152 JUMPI
---
0x113c: JUMPDEST 
0x113d: V1485 = 0x0
0x113f: V1486 = S[0x0]
0x1140: V1487 = CALLER
0x1141: V1488 = 0x1
0x1143: V1489 = 0xa0
0x1145: V1490 = 0x2
0x1147: V1491 = EXP 0x2 0xa0
0x1148: V1492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x114b: V1493 = AND 0xffffffffffffffffffffffffffffffffffffffff V1487
0x114d: V1494 = AND V1486 0xffffffffffffffffffffffffffffffffffffffff
0x114e: V1495 = EQ V1494 V1493
0x114f: V1496 = 0x1158
0x1152: JUMPI 0x1158 V1495
---
Entry stack: [V12, 0x1c0, V476]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V476]

================================

Block 0x1153
[0x1153:0x1157]
---
Predecessors: [0x113c]
Successors: []
---
0x1153 PUSH1 0x0
0x1155 PUSH1 0x0
0x1157 REVERT
---
0x1153: V1497 = 0x0
0x1155: V1498 = 0x0
0x1157: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0, V476]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V476]

================================

Block 0x1158
[0x1158:0x1167]
---
Predecessors: [0x113c]
Successors: [0xcc3, 0x1168]
---
0x1158 JUMPDEST
0x1159 PUSH1 0x1
0x115b PUSH1 0xa0
0x115d PUSH1 0x2
0x115f EXP
0x1160 SUB
0x1161 DUP2
0x1162 AND
0x1163 ISZERO
0x1164 PUSH2 0xcc3
0x1167 JUMPI
---
0x1158: JUMPDEST 
0x1159: V1499 = 0x1
0x115b: V1500 = 0xa0
0x115d: V1501 = 0x2
0x115f: V1502 = EXP 0x2 0xa0
0x1160: V1503 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1162: V1504 = AND V476 0xffffffffffffffffffffffffffffffffffffffff
0x1163: V1505 = ISZERO V1504
0x1164: V1506 = 0xcc3
0x1167: JUMPI 0xcc3 V1505
---
Entry stack: [V12, 0x1c0, V476]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1c0, V476]

================================

Block 0x1168
[0x1168:0x118f]
---
Predecessors: [0x1158]
Successors: [0x1190]
---
0x1168 PUSH1 0x0
0x116a DUP1
0x116b SLOAD
0x116c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1181 NOT
0x1182 AND
0x1183 PUSH1 0x1
0x1185 PUSH1 0xa0
0x1187 PUSH1 0x2
0x1189 EXP
0x118a SUB
0x118b DUP4
0x118c AND
0x118d OR
0x118e SWAP1
0x118f SSTORE
---
0x1168: V1507 = 0x0
0x116b: V1508 = S[0x0]
0x116c: V1509 = 0xffffffffffffffffffffffffffffffffffffffff
0x1181: V1510 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1182: V1511 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1508
0x1183: V1512 = 0x1
0x1185: V1513 = 0xa0
0x1187: V1514 = 0x2
0x1189: V1515 = EXP 0x2 0xa0
0x118a: V1516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x118c: V1517 = AND V476 0xffffffffffffffffffffffffffffffffffffffff
0x118d: V1518 = OR V1517 V1511
0x118f: S[0x0] = V1518
---
Entry stack: [V12, 0x1c0, V476]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1c0, V476]

================================

Block 0x1190
[0x1190:0x1190]
---
Predecessors: [0x1168]
Successors: [0x1191]
---
0x1190 JUMPDEST
---
0x1190: JUMPDEST 
---
Entry stack: [V12, 0x1c0, V476]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V476]

================================

Block 0x1191
[0x1191:0x1191]
---
Predecessors: [0x1190]
Successors: [0x1192]
---
0x1191 JUMPDEST
---
0x1191: JUMPDEST 
---
Entry stack: [V12, 0x1c0, V476]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V476]

================================

Block 0x1192
[0x1192:0x1194]
---
Predecessors: [0x1191]
Successors: [0x1c0]
---
0x1192 JUMPDEST
0x1193 POP
0x1194 JUMP
---
0x1192: JUMPDEST 
0x1194: JUMP 0x1c0
---
Entry stack: [V12, 0x1c0, V476]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x1195
[0x1195:0x11ab]
---
Predecessors: [0x5b1]
Successors: [0x11ac, 0x11b1]
---
0x1195 JUMPDEST
0x1196 PUSH1 0x0
0x1198 SLOAD
0x1199 CALLER
0x119a PUSH1 0x1
0x119c PUSH1 0xa0
0x119e PUSH1 0x2
0x11a0 EXP
0x11a1 SUB
0x11a2 SWAP1
0x11a3 DUP2
0x11a4 AND
0x11a5 SWAP2
0x11a6 AND
0x11a7 EQ
0x11a8 PUSH2 0x11b1
0x11ab JUMPI
---
0x1195: JUMPDEST 
0x1196: V1519 = 0x0
0x1198: V1520 = S[0x0]
0x1199: V1521 = CALLER
0x119a: V1522 = 0x1
0x119c: V1523 = 0xa0
0x119e: V1524 = 0x2
0x11a0: V1525 = EXP 0x2 0xa0
0x11a1: V1526 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11a4: V1527 = AND 0xffffffffffffffffffffffffffffffffffffffff V1521
0x11a6: V1528 = AND V1520 0xffffffffffffffffffffffffffffffffffffffff
0x11a7: V1529 = EQ V1528 V1527
0x11a8: V1530 = 0x11b1
0x11ab: JUMPI 0x11b1 V1529
---
Entry stack: [V12, 0x1c0, V489]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V489]

================================

Block 0x11ac
[0x11ac:0x11b0]
---
Predecessors: [0x1195]
Successors: []
---
0x11ac PUSH1 0x0
0x11ae PUSH1 0x0
0x11b0 REVERT
---
0x11ac: V1531 = 0x0
0x11ae: V1532 = 0x0
0x11b0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0, V489]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V489]

================================

Block 0x11b1
[0x11b1:0x11c1]
---
Predecessors: [0x1195]
Successors: [0x11c2, 0x11c7]
---
0x11b1 JUMPDEST
0x11b2 PUSH1 0x1
0x11b4 PUSH1 0xa0
0x11b6 PUSH1 0x2
0x11b8 EXP
0x11b9 SUB
0x11ba DUP2
0x11bb AND
0x11bc ISZERO
0x11bd ISZERO
0x11be PUSH2 0x11c7
0x11c1 JUMPI
---
0x11b1: JUMPDEST 
0x11b2: V1533 = 0x1
0x11b4: V1534 = 0xa0
0x11b6: V1535 = 0x2
0x11b8: V1536 = EXP 0x2 0xa0
0x11b9: V1537 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11bb: V1538 = AND V489 0xffffffffffffffffffffffffffffffffffffffff
0x11bc: V1539 = ISZERO V1538
0x11bd: V1540 = ISZERO V1539
0x11be: V1541 = 0x11c7
0x11c1: JUMPI 0x11c7 V1540
---
Entry stack: [V12, 0x1c0, V489]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1c0, V489]

================================

Block 0x11c2
[0x11c2:0x11c6]
---
Predecessors: [0x11b1]
Successors: []
---
0x11c2 PUSH1 0x0
0x11c4 PUSH1 0x0
0x11c6 REVERT
---
0x11c2: V1542 = 0x0
0x11c4: V1543 = 0x0
0x11c6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1c0, V489]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V489]

================================

Block 0x11c7
[0x11c7:0x11ef]
---
Predecessors: [0x11b1]
Successors: [0x11f0]
---
0x11c7 JUMPDEST
0x11c8 PUSH1 0x3
0x11ca DUP1
0x11cb SLOAD
0x11cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11e1 NOT
0x11e2 AND
0x11e3 PUSH1 0x1
0x11e5 PUSH1 0xa0
0x11e7 PUSH1 0x2
0x11e9 EXP
0x11ea SUB
0x11eb DUP4
0x11ec AND
0x11ed OR
0x11ee SWAP1
0x11ef SSTORE
---
0x11c7: JUMPDEST 
0x11c8: V1544 = 0x3
0x11cb: V1545 = S[0x3]
0x11cc: V1546 = 0xffffffffffffffffffffffffffffffffffffffff
0x11e1: V1547 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x11e2: V1548 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1545
0x11e3: V1549 = 0x1
0x11e5: V1550 = 0xa0
0x11e7: V1551 = 0x2
0x11e9: V1552 = EXP 0x2 0xa0
0x11ea: V1553 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11ec: V1554 = AND V489 0xffffffffffffffffffffffffffffffffffffffff
0x11ed: V1555 = OR V1554 V1548
0x11ef: S[0x3] = V1555
---
Entry stack: [V12, 0x1c0, V489]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1c0, V489]

================================

Block 0x11f0
[0x11f0:0x11f0]
---
Predecessors: [0x11c7]
Successors: [0x11f1]
---
0x11f0 JUMPDEST
---
0x11f0: JUMPDEST 
---
Entry stack: [V12, 0x1c0, V489]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, V489]

================================

Block 0x11f1
[0x11f1:0x11f3]
---
Predecessors: [0x11f0]
Successors: [0x1c0]
---
0x11f1 JUMPDEST
0x11f2 POP
0x11f3 JUMP
---
0x11f1: JUMPDEST 
0x11f3: JUMP 0x1c0
---
Entry stack: [V12, 0x1c0, V489]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x11f4
[0x11f4:0x1203]
---
Predecessors: [0x608, 0x665, 0x6ad, 0xf88]
Successors: [0x1204, 0x1213]
---
0x11f4 JUMPDEST
0x11f5 PUSH1 0x0
0x11f7 DUP3
0x11f8 DUP3
0x11f9 MUL
0x11fa PUSH2 0x1218
0x11fd DUP5
0x11fe ISZERO
0x11ff DUP1
0x1200 PUSH2 0x1213
0x1203 JUMPI
---
0x11f4: JUMPDEST 
0x11f5: V1556 = 0x0
0x11f9: V1557 = MUL {0x3e8, 0x5dc, 0x9c4} S1
0x11fa: V1558 = 0x1218
0x11fe: V1559 = ISZERO S1
0x1200: V1560 = 0x1213
0x1203: JUMPI 0x1213 V1559
---
Entry stack: [V12, 0x1c0, 0x1bb, S9, {0x1, 0x2, 0x3, 0x1c0}, S7, S6, {0x0, 0x63d, 0x69a, 0x6e2}, {0x638, 0xfc7}, 0xde0b6b3a7640000, {0x62c, 0xfb8}, S1, {0x3e8, 0x5dc, 0x9c4}]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1557, 0x1218, V1559]
Exit stack: [V12, 0x1c0, 0x1bb, S9, {0x1, 0x2, 0x3, 0x1c0}, S7, S6, {0x0, 0x63d, 0x69a, 0x6e2}, {0x638, 0xfc7}, 0xde0b6b3a7640000, {0x62c, 0xfb8}, S1, {0x3e8, 0x5dc, 0x9c4}, 0x0, V1557, 0x1218, V1559]

================================

Block 0x1204
[0x1204:0x120e]
---
Predecessors: [0x11f4]
Successors: [0x120f, 0x1210]
---
0x1204 POP
0x1205 DUP4
0x1206 DUP6
0x1207 DUP4
0x1208 DUP2
0x1209 ISZERO
0x120a ISZERO
0x120b PUSH2 0x1210
0x120e JUMPI
---
0x1209: V1561 = ISZERO S5
0x120a: V1562 = ISZERO V1561
0x120b: V1563 = 0x1210
0x120e: JUMPI 0x1210 V1562
---
Entry stack: [V12, 0x1c0, 0x1bb, S13, {0x1, 0x2, 0x3, 0x1c0}, S11, S10, {0x0, 0x63d, 0x69a, 0x6e2}, {0x638, 0xfc7}, 0xde0b6b3a7640000, {0x62c, 0xfb8}, S5, {0x3e8, 0x5dc, 0x9c4}, 0x0, V1557, 0x1218, V1559]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S4, S5, S2]
Exit stack: [V12, 0x1c0, 0x1bb, S13, {0x1, 0x2, 0x3, 0x1c0}, S11, S10, {0x0, 0x63d, 0x69a, 0x6e2}, {0x638, 0xfc7}, 0xde0b6b3a7640000, {0x62c, 0xfb8}, S5, {0x3e8, 0x5dc, 0x9c4}, 0x0, V1557, 0x1218, {0x3e8, 0x5dc, 0x9c4}, S5, V1557]

================================

Block 0x120f
[0x120f:0x120f]
---
Predecessors: [0x1204]
Successors: []
---
0x120f INVALID
---
0x120f: INVALID 
---
Entry stack: [V12, 0x1c0, 0x1bb, S15, {0x1, 0x2, 0x3, 0x1c0}, S13, S12, {0x0, 0x63d, 0x69a, 0x6e2}, {0x638, 0xfc7}, 0xde0b6b3a7640000, {0x62c, 0xfb8}, S7, {0x3e8, 0x5dc, 0x9c4}, 0x0, V1557, 0x1218, {0x3e8, 0x5dc, 0x9c4}, S1, V1557]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, 0x1bb, S15, {0x1, 0x2, 0x3, 0x1c0}, S13, S12, {0x0, 0x63d, 0x69a, 0x6e2}, {0x638, 0xfc7}, 0xde0b6b3a7640000, {0x62c, 0xfb8}, S7, {0x3e8, 0x5dc, 0x9c4}, 0x0, V1557, 0x1218, {0x3e8, 0x5dc, 0x9c4}, S1, V1557]

================================

Block 0x1210
[0x1210:0x1212]
---
Predecessors: [0x1204]
Successors: [0x1213]
---
0x1210 JUMPDEST
0x1211 DIV
0x1212 EQ
---
0x1210: JUMPDEST 
0x1211: V1564 = DIV V1557 S1
0x1212: V1565 = EQ V1564 {0x3e8, 0x5dc, 0x9c4}
---
Entry stack: [V12, 0x1c0, 0x1bb, S15, {0x1, 0x2, 0x3, 0x1c0}, S13, S12, {0x0, 0x63d, 0x69a, 0x6e2}, {0x638, 0xfc7}, 0xde0b6b3a7640000, {0x62c, 0xfb8}, S7, {0x3e8, 0x5dc, 0x9c4}, 0x0, V1557, 0x1218, {0x3e8, 0x5dc, 0x9c4}, S1, V1557]
Stack pops: 3
Stack additions: [V1565]
Exit stack: [V12, 0x1c0, 0x1bb, S15, {0x1, 0x2, 0x3, 0x1c0}, S13, S12, {0x0, 0x63d, 0x69a, 0x6e2}, {0x638, 0xfc7}, 0xde0b6b3a7640000, {0x62c, 0xfb8}, S7, {0x3e8, 0x5dc, 0x9c4}, 0x0, V1557, 0x1218, V1565]

================================

Block 0x1213
[0x1213:0x1217]
---
Predecessors: [0x11f4, 0x1210]
Successors: [0x12f4]
---
0x1213 JUMPDEST
0x1214 PUSH2 0x12f4
0x1217 JUMP
---
0x1213: JUMPDEST 
0x1214: V1566 = 0x12f4
0x1217: JUMP 0x12f4
---
Entry stack: [V12, 0x1c0, 0x1bb, S13, {0x1, 0x2, 0x3, 0x1c0}, S11, S10, {0x0, 0x63d, 0x69a, 0x6e2}, {0x638, 0xfc7}, 0xde0b6b3a7640000, {0x62c, 0xfb8}, S5, {0x3e8, 0x5dc, 0x9c4}, 0x0, V1557, 0x1218, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1c0, 0x1bb, S13, {0x1, 0x2, 0x3, 0x1c0}, S11, S10, {0x0, 0x63d, 0x69a, 0x6e2}, {0x638, 0xfc7}, 0xde0b6b3a7640000, {0x62c, 0xfb8}, S5, {0x3e8, 0x5dc, 0x9c4}, 0x0, V1557, 0x1218, S0]

================================

Block 0x1218
[0x1218:0x121b]
---
Predecessors: [0xcc4]
Successors: [0x121c]
---
0x1218 JUMPDEST
0x1219 DUP1
0x121a SWAP2
0x121b POP
---
0x1218: JUMPDEST 
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S0]

================================

Block 0x121c
[0x121c:0x1222]
---
Predecessors: [0x1218]
Successors: [0x1bb, 0x1c0, 0x62c, 0x638, 0x63d, 0x69a, 0x6e2, 0x6fe, 0x7af, 0x7c6, 0x7fb, 0x811, 0xae1, 0xfb8, 0x107e, 0x1096, 0x127c, 0x1289, 0x12d6]
---
0x121c JUMPDEST
0x121d POP
0x121e SWAP3
0x121f SWAP2
0x1220 POP
0x1221 POP
0x1222 JUMP
---
0x121c: JUMPDEST 
0x1222: JUMP S4
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0x1223
[0x1223:0x1232]
---
Predecessors: [0x62c, 0x689, 0x6d1, 0x1266]
Successors: [0x12f4]
---
0x1223 JUMPDEST
0x1224 PUSH1 0x0
0x1226 PUSH1 0x0
0x1228 PUSH2 0x1233
0x122b PUSH1 0x0
0x122d DUP5
0x122e GT
0x122f PUSH2 0x12f4
0x1232 JUMP
---
0x1223: JUMPDEST 
0x1224: V1567 = 0x0
0x1226: V1568 = 0x0
0x1228: V1569 = 0x1233
0x122b: V1570 = 0x0
0x122e: V1571 = GT S0 0x0
0x122f: V1572 = 0x12f4
0x1232: JUMP 0x12f4
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x1233, V1571]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, 0x1233, V1571]

================================

Block 0x1233
[0x1233:0x123c]
---
Predecessors: [0xcc4]
Successors: [0x123d, 0x123e]
---
0x1233 JUMPDEST
0x1234 DUP3
0x1235 DUP5
0x1236 DUP2
0x1237 ISZERO
0x1238 ISZERO
0x1239 PUSH2 0x123e
0x123c JUMPI
---
0x1233: JUMPDEST 
0x1237: V1573 = ISZERO S2
0x1238: V1574 = ISZERO V1573
0x1239: V1575 = 0x123e
0x123c: JUMPI 0x123e V1574
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S2, S3]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0, S2, S3]

================================

Block 0x123d
[0x123d:0x123d]
---
Predecessors: [0x1233]
Successors: []
---
0x123d INVALID
---
0x123d: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]

================================

Block 0x123e
[0x123e:0x124d]
---
Predecessors: [0x1233]
Successors: [0x124e, 0x124f]
---
0x123e JUMPDEST
0x123f DIV
0x1240 SWAP1
0x1241 POP
0x1242 PUSH2 0x1218
0x1245 DUP4
0x1246 DUP6
0x1247 DUP2
0x1248 ISZERO
0x1249 ISZERO
0x124a PUSH2 0x124f
0x124d JUMPI
---
0x123e: JUMPDEST 
0x123f: V1576 = DIV S0 S1
0x1242: V1577 = 0x1218
0x1248: V1578 = ISZERO S4
0x1249: V1579 = ISZERO V1578
0x124a: V1580 = 0x124f
0x124d: JUMPI 0x124f V1579
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, V1576, 0x1218, S4, S5]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, V1576, 0x1218, S4, S5]

================================

Block 0x124e
[0x124e:0x124e]
---
Predecessors: [0x123e]
Successors: []
---
0x124e INVALID
---
0x124e: INVALID 
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V1576, 0x1218, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V1576, 0x1218, S1, S0]

================================

Block 0x124f
[0x124f:0x125a]
---
Predecessors: [0x123e]
Successors: [0x12f4]
---
0x124f JUMPDEST
0x1250 MOD
0x1251 DUP3
0x1252 DUP6
0x1253 MUL
0x1254 ADD
0x1255 DUP6
0x1256 EQ
0x1257 PUSH2 0x12f4
0x125a JUMP
---
0x124f: JUMPDEST 
0x1250: V1581 = MOD S0 S1
0x1253: V1582 = MUL S5 V1576
0x1254: V1583 = ADD V1582 V1581
0x1256: V1584 = EQ S6 V1583
0x1257: V1585 = 0x12f4
0x125a: JUMP 0x12f4
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V1576, 0x1218, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V1584]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V1576, 0x1218, V1584]

================================

Block 0x125b
[0x125b:0x125e]
---
Predecessors: []
Successors: [0x125f]
---
0x125b JUMPDEST
0x125c DUP1
0x125d SWAP2
0x125e POP
---
0x125b: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0x125f
[0x125f:0x1265]
---
Predecessors: [0x125b]
Successors: []
Has unresolved jump.
---
0x125f JUMPDEST
0x1260 POP
0x1261 SWAP3
0x1262 SWAP2
0x1263 POP
0x1264 POP
0x1265 JUMP
---
0x125f: JUMPDEST 
0x1265: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0x1266
[0x1266:0x127b]
---
Predecessors: [0x638, 0x695, 0x6dd, 0xfc1]
Successors: [0x1223]
---
0x1266 JUMPDEST
0x1267 PUSH1 0x0
0x1269 PUSH2 0x1289
0x126c PUSH2 0x127c
0x126f DUP4
0x1270 PUSH1 0x5
0x1272 PUSH4 0xffffffff
0x1277 PUSH2 0x1223
0x127a AND
0x127b JUMP
---
0x1266: JUMPDEST 
0x1267: V1586 = 0x0
0x1269: V1587 = 0x1289
0x126c: V1588 = 0x127c
0x1270: V1589 = 0x5
0x1272: V1590 = 0xffffffff
0x1277: V1591 = 0x1223
0x127a: V1592 = AND 0x1223 0xffffffff
0x127b: JUMP 0x1223
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1384]
Stack pops: 1
Stack additions: [S0, 0x0, 0x1289, 0x127c, S0, 0x5]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1384, 0x0, 0x1289, 0x127c, V1384, 0x5]

================================

Block 0x127c
[0x127c:0x1288]
---
Predecessors: [0x121c]
Successors: [0x1291]
---
0x127c JUMPDEST
0x127d DUP4
0x127e SWAP1
0x127f PUSH4 0xffffffff
0x1284 PUSH2 0x1291
0x1287 AND
0x1288 JUMP
---
0x127c: JUMPDEST 
0x127f: V1593 = 0xffffffff
0x1284: V1594 = 0x1291
0x1287: V1595 = AND 0x1291 0xffffffff
0x1288: JUMP 0x1291
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S3, S0]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S3, S0]

================================

Block 0x1289
[0x1289:0x128b]
---
Predecessors: [0x121c]
Successors: [0x128c]
---
0x1289 JUMPDEST
0x128a SWAP1
0x128b POP
---
0x1289: JUMPDEST 
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x128c
[0x128c:0x1290]
---
Predecessors: [0x1289]
Successors: [0x1bb, 0x1c0, 0x638, 0x63d, 0x69a, 0x6e2, 0xae1]
---
0x128c JUMPDEST
0x128d SWAP2
0x128e SWAP1
0x128f POP
0x1290 JUMP
---
0x128c: JUMPDEST 
0x1290: JUMP S2
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0]

================================

Block 0x1291
[0x1291:0x12a1]
---
Predecessors: [0x6e5, 0x797, 0x7af, 0x7e3, 0x7fb, 0x1066, 0x107e, 0x127c, 0x12ad]
Successors: [0x12f4]
---
0x1291 JUMPDEST
0x1292 PUSH1 0x0
0x1294 DUP3
0x1295 DUP3
0x1296 ADD
0x1297 PUSH2 0x1218
0x129a DUP5
0x129b DUP3
0x129c LT
0x129d ISZERO
0x129e PUSH2 0x12f4
0x12a1 JUMP
---
0x1291: JUMPDEST 
0x1292: V1596 = 0x0
0x1296: V1597 = ADD S0 S1
0x1297: V1598 = 0x1218
0x129c: V1599 = LT V1597 S1
0x129d: V1600 = ISZERO V1599
0x129e: V1601 = 0x12f4
0x12a1: JUMP 0x12f4
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1597, 0x1218, V1600]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V1597, 0x1218, V1600]

================================

Block 0x12a2
[0x12a2:0x12a5]
---
Predecessors: []
Successors: [0x12a6]
---
0x12a2 JUMPDEST
0x12a3 DUP1
0x12a4 SWAP2
0x12a5 POP
---
0x12a2: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0x12a6
[0x12a6:0x12ac]
---
Predecessors: [0x12a2]
Successors: []
Has unresolved jump.
---
0x12a6 JUMPDEST
0x12a7 POP
0x12a8 SWAP3
0x12a9 SWAP2
0x12aa POP
0x12ab POP
0x12ac JUMP
---
0x12a6: JUMPDEST 
0x12ac: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0x12ad
[0x12ad:0x12d5]
---
Predecessors: [0xad8]
Successors: [0x1291]
---
0x12ad JUMPDEST
0x12ae PUSH1 0x1
0x12b0 PUSH1 0xa0
0x12b2 PUSH1 0x2
0x12b4 EXP
0x12b5 SUB
0x12b6 DUP3
0x12b7 AND
0x12b8 PUSH1 0x0
0x12ba SWAP1
0x12bb DUP2
0x12bc MSTORE
0x12bd PUSH1 0x1
0x12bf PUSH1 0x20
0x12c1 MSTORE
0x12c2 PUSH1 0x40
0x12c4 SWAP1
0x12c5 SHA3
0x12c6 SLOAD
0x12c7 PUSH2 0x12d6
0x12ca SWAP1
0x12cb DUP3
0x12cc PUSH4 0xffffffff
0x12d1 PUSH2 0x1291
0x12d4 AND
0x12d5 JUMP
---
0x12ad: JUMPDEST 
0x12ae: V1602 = 0x1
0x12b0: V1603 = 0xa0
0x12b2: V1604 = 0x2
0x12b4: V1605 = EXP 0x2 0xa0
0x12b5: V1606 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12b7: V1607 = AND V908 0xffffffffffffffffffffffffffffffffffffffff
0x12b8: V1608 = 0x0
0x12bc: M[0x0] = V1607
0x12bd: V1609 = 0x1
0x12bf: V1610 = 0x20
0x12c1: M[0x20] = 0x1
0x12c2: V1611 = 0x40
0x12c5: V1612 = SHA3 0x0 0x40
0x12c6: V1613 = S[V1612]
0x12c7: V1614 = 0x12d6
0x12cc: V1615 = 0xffffffff
0x12d1: V1616 = 0x1291
0x12d4: V1617 = AND 0x1291 0xffffffff
0x12d5: JUMP 0x1291
---
Entry stack: [V12, 0x1c0, V178, V903, 0xae1, V908, V903]
Stack pops: 2
Stack additions: [S1, S0, 0x12d6, V1613, S0]
Exit stack: [V12, 0x1c0, V178, V903, 0xae1, V908, V903, 0x12d6, V1613, V903]

================================

Block 0x12d6
[0x12d6:0x12ef]
---
Predecessors: [0x121c]
Successors: [0x12f0]
---
0x12d6 JUMPDEST
0x12d7 PUSH1 0x1
0x12d9 PUSH1 0xa0
0x12db PUSH1 0x2
0x12dd EXP
0x12de SUB
0x12df DUP4
0x12e0 AND
0x12e1 PUSH1 0x0
0x12e3 SWAP1
0x12e4 DUP2
0x12e5 MSTORE
0x12e6 PUSH1 0x1
0x12e8 PUSH1 0x20
0x12ea MSTORE
0x12eb PUSH1 0x40
0x12ed SWAP1
0x12ee SHA3
0x12ef SSTORE
---
0x12d6: JUMPDEST 
0x12d7: V1618 = 0x1
0x12d9: V1619 = 0xa0
0x12db: V1620 = 0x2
0x12dd: V1621 = EXP 0x2 0xa0
0x12de: V1622 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12e0: V1623 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x12e1: V1624 = 0x0
0x12e5: M[0x0] = V1623
0x12e6: V1625 = 0x1
0x12e8: V1626 = 0x20
0x12ea: M[0x20] = 0x1
0x12eb: V1627 = 0x40
0x12ee: V1628 = SHA3 0x0 0x40
0x12ef: S[V1628] = S0
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x12f0
[0x12f0:0x12f3]
---
Predecessors: [0x12d6]
Successors: [0x1bb, 0x1c0, 0x638, 0x63d, 0x69a, 0x6e2, 0xae1]
---
0x12f0 JUMPDEST
0x12f1 POP
0x12f2 POP
0x12f3 JUMP
---
0x12f0: JUMPDEST 
0x12f3: JUMP S2
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x12f4
[0x12f4:0x12fb]
---
Predecessors: [0x1213, 0x1223, 0x124f, 0x1291]
Successors: [0xcc3, 0x12fc]
---
0x12f4 JUMPDEST
0x12f5 DUP1
0x12f6 ISZERO
0x12f7 ISZERO
0x12f8 PUSH2 0xcc3
0x12fb JUMPI
---
0x12f4: JUMPDEST 
0x12f6: V1629 = ISZERO S0
0x12f7: V1630 = ISZERO V1629
0x12f8: V1631 = 0xcc3
0x12fb: JUMPI 0xcc3 V1630
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, {0x1218, 0x1233}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, {0x1218, 0x1233}, S0]

================================

Block 0x12fc
[0x12fc:0x1300]
---
Predecessors: [0x12f4]
Successors: []
---
0x12fc PUSH1 0x0
0x12fe PUSH1 0x0
0x1300 REVERT
---
0x12fc: V1632 = 0x0
0x12fe: V1633 = 0x0
0x1300: REVERT 0x0 0x0
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, {0x1218, 0x1233}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, {0x1218, 0x1233}, S0]

================================

Block 0x1301
[0x1301:0x1301]
---
Predecessors: []
Successors: [0x1302]
---
0x1301 JUMPDEST
---
0x1301: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1302
[0x1302:0x1337]
---
Predecessors: [0x1301]
Successors: []
---
0x1302 JUMPDEST
0x1303 POP
0x1304 JUMP
0x1305 STOP
0x1306 LOG1
0x1307 PUSH6 0x627a7a723058
0x130e SHA3
0x130f MISSING 0xb8
0x1310 MISSING 0x22
0x1311 MISSING 0xd
0x1312 MISSING 0xc2
0x1313 MISSING 0x4e
0x1314 DUP3
0x1315 MISSING 0xca
0x1316 DELEGATECALL
0x1317 MISSING 0xb5
0x1318 MISSING 0xaa
0x1319 PUSH30 0xc66779314d22e2189cedd6d23e480e9c75086c5e420029
---
0x1302: JUMPDEST 
0x1304: JUMP S1
0x1305: STOP 
0x1306: LOG S0 S1 S2
0x1307: V1634 = 0x627a7a723058
0x130e: V1635 = SHA3 0x627a7a723058 S3
0x130f: MISSING 0xb8
0x1310: MISSING 0x22
0x1311: MISSING 0xd
0x1312: MISSING 0xc2
0x1313: MISSING 0x4e
0x1315: MISSING 0xca
0x1316: V1636 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x1317: MISSING 0xb5
0x1318: MISSING 0xaa
0x1319: V1637 = 0xc66779314d22e2189cedd6d23e480e9c75086c5e420029
---
Entry stack: []
Stack pops: 1902
Stack additions: [0xc66779314d22e2189cedd6d23e480e9c75086c5e420029]
Exit stack: []

================================

Function 0:
Public function signature: 0x64c4ebc
Entry block: 0x1c2
Exit block: 0x1c0
Body: 0x1c0, 0x1c2, 0x1c9, 0x1ca, 0x8a1, 0x8b8, 0x8bd, 0x926, 0x927, 0x934, 0x935, 0x939, 0x93a

Function 1:
Public function signature: 0x11df9995
Entry block: 0x1d4
Exit block: 0x1e4
Body: 0x1d4, 0x1db, 0x1dc, 0x1e4, 0x93c

Function 2:
Public function signature: 0x17111edb
Entry block: 0x200
Exit block: 0x210
Body: 0x200, 0x207, 0x208, 0x210, 0x950

Function 3:
Public function signature: 0x278ecde1
Entry block: 0x224
Exit block: 0x1c0
Body: 0x1c0, 0x224, 0x22b, 0x22c, 0x959, 0x966, 0x96f, 0x975, 0x97a, 0x99d, 0x9a2, 0xa19, 0xa1a, 0xa27, 0xa28, 0xa8d, 0xa8e, 0xa9b, 0xa9c, 0xaab, 0xab0, 0xad8, 0xae1, 0xae2, 0xae3, 0xae4, 0x124e, 0x12ad, 0x12d6

Function 4:
Public function signature: 0x298c1e14
Entry block: 0x239
Exit block: 0x249
Body: 0x239, 0x240, 0x241, 0x249

Function 5:
Public function signature: 0x2adc2cd2
Entry block: 0x25b
Exit block: 0x249
Body: 0x249, 0x25b, 0x262, 0x263, 0xaee

Function 6:
Public function signature: 0x30adce0e
Entry block: 0x27d
Exit block: 0x249
Body: 0x249, 0x27d, 0x284, 0x285, 0xaf4

Function 7:
Public function signature: 0x3197cbb6
Entry block: 0x29f
Exit block: 0x249
Body: 0x249, 0x29f, 0x2a6, 0x2a7, 0xafa

Function 8:
Public function signature: 0x4bb278f3
Entry block: 0x2c1
Exit block: 0xcaf
Body: 0x2c1, 0x2c8, 0x2c9, 0xb00, 0xb18, 0xb1d, 0xb28, 0xb35, 0xb39, 0xb3f, 0xb40, 0xb4e, 0xb59, 0xb5f, 0xb64, 0xb95, 0xb9a, 0xc0e, 0xc0f, 0xc1c, 0xc1d, 0xc30, 0xc91, 0xc92, 0xc9f, 0xca0, 0xcaf, 0xcb4, 0xcb5, 0x12fc

Function 9:
Public function signature: 0x6103d70b
Entry block: 0x2d3
Exit block: 0x1c0
Body: 0x1c0, 0x2d3, 0x2da, 0x2db, 0xcc7, 0xce9, 0xcee, 0xd01, 0xd06, 0xd40, 0xd45, 0xd8a

Function 10:
Public function signature: 0x63a599a4
Entry block: 0x2e5
Exit block: 0x1c0
Body: 0x1c0, 0x2e5, 0x2ec, 0x2ed, 0xd8e, 0xda5, 0xdaa, 0xdcf, 0xdd0

Function 11:
Public function signature: 0x6a2d1cb8
Entry block: 0x2f7
Exit block: 0x2fe
Body: 0x249, 0x2f7, 0x2fe, 0x2ff

Function 12:
Public function signature: 0x72fb6f75
Entry block: 0x2f7
Exit block: 0x2fe
Body: 0x249, 0x2f7, 0x2fe, 0x2ff

Function 13:
Public function signature: 0x75f12b21
Entry block: 0x33b
Exit block: 0x210
Body: 0x210, 0x33b, 0x342, 0x343, 0xdea

Function 14:
Public function signature: 0x78e97925
Entry block: 0x35f
Exit block: 0x249
Body: 0x249, 0x35f, 0x366, 0x367, 0xdfa

Function 15:
Public function signature: 0x79d68f79
Entry block: 0x381
Exit block: 0x249
Body: 0x249, 0x381, 0x388, 0x389, 0xe00

Function 16:
Public function signature: 0x801db9cc
Entry block: 0x3a3
Exit block: 0x249
Body: 0x249, 0x3a3, 0x3aa, 0x3ab, 0xe06

Function 17:
Public function signature: 0x86d1a69f
Entry block: 0x3c5
Exit block: 0x1c0
Body: 0x1c0, 0x3c5, 0x3cc, 0x3cd, 0xe0c, 0xe23, 0xe28, 0xe3c, 0xe41, 0xe60, 0xe61, 0xe62

Function 18:
Public function signature: 0x8da5cb5b
Entry block: 0x3d7
Exit block: 0x1e4
Body: 0x1e4, 0x3d7, 0x3de, 0x3df, 0xe64

Function 19:
Public function signature: 0x8ef26a71
Entry block: 0x403
Exit block: 0x249
Body: 0x249, 0x403, 0x40a, 0x40b, 0xe73

Function 20:
Public function signature: 0x9890220b
Entry block: 0x425
Exit block: 0x1c0
Body: 0x1bb, 0x1bc, 0x1bd, 0x1be, 0x1c0, 0x425, 0x42c, 0x42d, 0xe79, 0xe90, 0xe95, 0xeca

Function 21:
Public function signature: 0x9b39caef
Entry block: 0x239
Exit block: 0x249
Body: 0x239, 0x240, 0x241, 0x249

Function 22:
Public function signature: 0xb85dfb80
Entry block: 0x459
Exit block: 0x491
Body: 0x459, 0x460, 0x461, 0x475, 0x490, 0x491, 0xed9

Function 23:
Public function signature: 0xbe9a6555
Entry block: 0x4a7
Exit block: 0x1c0
Body: 0x1c0, 0x4a7, 0x4ae, 0x4af, 0xefd, 0xf14, 0xf19, 0xf22, 0xf27, 0xf36, 0xf37

Function 24:
Public function signature: 0xc4618978
Entry block: 0x4b9
Exit block: 0x249
Body: 0x249, 0x4b9, 0x4c0, 0x4c1, 0xf39

Function 25:
Public function signature: 0xcaa7590d
Entry block: 0x4db
Exit block: 0x249
Body: 0x249, 0x4db, 0x4e2, 0x4e3, 0xf45

Function 26:
Public function signature: 0xd06c91e4
Entry block: 0x4fd
Exit block: 0x1e4
Body: 0x1e4, 0x4fd, 0x504, 0x505, 0xf51

Function 27:
Public function signature: 0xd669e1d4
Entry block: 0x529
Exit block: 0x249
Body: 0x249, 0x529, 0x530, 0x531, 0xf60

Function 28:
Public function signature: 0xdf40503c
Entry block: 0x54b
Exit block: 0xfc0
Body: 0x54b, 0x552, 0x553, 0xf67, 0xf83, 0xf88, 0xfb8, 0xfc0, 0x124e

Function 29:
Public function signature: 0xe2982c21
Entry block: 0x55d
Exit block: 0x249
Body: 0x249, 0x55d, 0x564, 0x565, 0x112a

Function 30:
Public function signature: 0xf2fde38b
Entry block: 0x58b
Exit block: 0x1c0
Body: 0x1c0, 0x58b, 0x592, 0x593, 0x113c, 0x1153, 0x1158, 0x1168, 0x1190, 0x1191, 0x1192, 0x12fc

Function 31:
Public function signature: 0xf3283fba
Entry block: 0x5a9
Exit block: 0x1c0
Body: 0x1c0, 0x5a9, 0x5b0, 0x5b1, 0x1195, 0x11ac, 0x11b1, 0x11c2, 0x11c7, 0x11f0, 0x11f1

Function 32:
Public fallback function
Entry block: 0x17a
Exit block: 0x124e
Body: 0x17a, 0x17e, 0x191, 0x196, 0x1a1, 0x1a7, 0x1ad, 0x1b2, 0x5c7, 0x5de, 0x5e3, 0x5f5, 0x602, 0x608, 0x62c, 0x124e

Function 33:
Private function
Entry block: 0x1291
Exit block: 0x121c
Body: 0x62c, 0x638, 0x63d, 0x640, 0x652, 0x65f, 0x665, 0x69a, 0x69d, 0x6ad, 0x6e2, 0x6e5, 0x6e5, 0x6fe, 0x70a, 0x789, 0x797, 0x7af, 0xcc3, 0xcc4, 0xfb8, 0xfc1, 0x1218, 0x121c, 0x1223, 0x1233, 0x123e, 0x124f, 0x1266, 0x127c, 0x1289, 0x128c, 0x1291, 0x12f4

Function 34:
Private function
Entry block: 0x11f4
Exit block: 0x121c
Body: 0x62c, 0x638, 0x63d, 0x640, 0x652, 0x65f, 0x665, 0x69a, 0x69d, 0x6ad, 0x6e2, 0x6e5, 0x6e5, 0x6fe, 0x70a, 0x789, 0x797, 0x7af, 0x7c6, 0x7e3, 0x7fb, 0x811, 0x89b, 0xcc3, 0xcc4, 0x107e, 0x1096, 0x1124, 0x1125, 0x11f4, 0x1204, 0x1210, 0x1213, 0x1218, 0x121c, 0x1223, 0x1233, 0x123e, 0x124f, 0x1266, 0x127c, 0x1289, 0x128c, 0x1291, 0x12d6, 0x12f0, 0x12f4

