Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x5e]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x5e
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x5e
0xc: JUMPI 0x5e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x14f]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x242d7dba
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x14f
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x242d7dba
0x22: V15 = EQ V13 0x242d7dba
0x23: V16 = 0x14f
0x26: JUMPI 0x14f V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x177]
---
0x27 DUP1
0x28 PUSH4 0x7a3a0e84
0x2d EQ
0x2e PUSH2 0x177
0x31 JUMPI
---
0x28: V17 = 0x7a3a0e84
0x2d: V18 = EQ 0x7a3a0e84 V13
0x2e: V19 = 0x177
0x31: JUMPI 0x177 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x18c]
---
0x32 DUP1
0x33 PUSH4 0x7ff9b596
0x38 EQ
0x39 PUSH2 0x18c
0x3c JUMPI
---
0x33: V20 = 0x7ff9b596
0x38: V21 = EQ 0x7ff9b596 V13
0x39: V22 = 0x18c
0x3c: JUMPI 0x18c V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x1a1]
---
0x3d DUP1
0x3e PUSH4 0xbc0b5757
0x43 EQ
0x44 PUSH2 0x1a1
0x47 JUMPI
---
0x3e: V23 = 0xbc0b5757
0x43: V24 = EQ 0xbc0b5757 V13
0x44: V25 = 0x1a1
0x47: JUMPI 0x1a1 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x1b6]
---
0x48 DUP1
0x49 PUSH4 0xe62c9f6c
0x4e EQ
0x4f PUSH2 0x1b6
0x52 JUMPI
---
0x49: V26 = 0xe62c9f6c
0x4e: V27 = EQ 0xe62c9f6c V13
0x4f: V28 = 0x1b6
0x52: JUMPI 0x1b6 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x1d7]
---
0x53 DUP1
0x54 PUSH4 0xfd6b7ef8
0x59 EQ
0x5a PUSH2 0x1d7
0x5d JUMPI
---
0x54: V29 = 0xfd6b7ef8
0x59: V30 = EQ 0xfd6b7ef8 V13
0x5a: V31 = 0x1d7
0x5d: JUMPI 0x1d7 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x6b]
---
Predecessors: [0x0, 0x53]
Successors: [0x6c, 0x70]
---
0x5e JUMPDEST
0x5f PUSH1 0x0
0x61 PUSH1 0x3
0x63 SLOAD
0x64 TIMESTAMP
0x65 LT
0x66 ISZERO
0x67 ISZERO
0x68 PUSH2 0x70
0x6b JUMPI
---
0x5e: JUMPDEST 
0x5f: V32 = 0x0
0x61: V33 = 0x3
0x63: V34 = S[0x3]
0x64: V35 = TIMESTAMP
0x65: V36 = LT V35 V34
0x66: V37 = ISZERO V36
0x67: V38 = ISZERO V37
0x68: V39 = 0x70
0x6b: JUMPI 0x70 V38
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x0]

================================

Block 0x6c
[0x6c:0x6f]
---
Predecessors: [0x5e]
Successors: []
---
0x6c PUSH1 0x0
0x6e DUP1
0x6f REVERT
---
0x6c: V40 = 0x0
0x6f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0]

================================

Block 0x70
[0x70:0x7c]
---
Predecessors: [0x5e]
Successors: [0x7d, 0x81]
---
0x70 JUMPDEST
0x71 PUSH1 0x4
0x73 SLOAD
0x74 CALLVALUE
0x75 LT
0x76 ISZERO
0x77 ISZERO
0x78 ISZERO
0x79 PUSH2 0x81
0x7c JUMPI
---
0x70: JUMPDEST 
0x71: V41 = 0x4
0x73: V42 = S[0x4]
0x74: V43 = CALLVALUE
0x75: V44 = LT V43 V42
0x76: V45 = ISZERO V44
0x77: V46 = ISZERO V45
0x78: V47 = ISZERO V46
0x79: V48 = 0x81
0x7c: JUMPI 0x81 V47
---
Entry stack: [V13, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x70]
Successors: []
---
0x7d PUSH1 0x0
0x7f DUP1
0x80 REVERT
---
0x7d: V49 = 0x0
0x80: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0]

================================

Block 0x81
[0x81:0xd8]
---
Predecessors: [0x70]
Successors: [0xd9, 0xda]
---
0x81 JUMPDEST
0x82 POP
0x83 PUSH1 0x1
0x85 PUSH1 0xa0
0x87 PUSH1 0x2
0x89 EXP
0x8a SUB
0x8b CALLER
0x8c DUP2
0x8d DUP2
0x8e AND
0x8f DUP3
0x90 AND
0x91 PUSH1 0x0
0x93 SWAP1
0x94 DUP2
0x95 MSTORE
0x96 PUSH1 0x6
0x98 PUSH1 0x20
0x9a DUP1
0x9b DUP4
0x9c ADD
0x9d SWAP2
0x9e DUP3
0x9f MSTORE
0xa0 ADD
0xa1 DUP2
0xa2 SHA3
0xa3 DUP1
0xa4 SLOAD
0xa5 CALLVALUE
0xa6 SWAP1
0xa7 DUP2
0xa8 ADD
0xa9 SWAP1
0xaa SWAP2
0xab SSTORE
0xac PUSH1 0x2
0xae DUP1
0xaf SLOAD
0xb0 DUP3
0xb1 ADD
0xb2 SWAP1
0xb3 SSTORE
0xb4 PUSH1 0x5
0xb6 SLOAD
0xb7 PUSH1 0x4
0xb9 SLOAD
0xba SWAP2
0xbb SWAP5
0xbc PUSH2 0x100
0xbf SWAP4
0xc0 SWAP1
0xc1 SWAP4
0xc2 EXP
0xc3 SWAP1
0xc4 DIV
0xc5 DUP3
0xc6 AND
0xc7 SWAP1
0xc8 SWAP2
0xc9 AND
0xca SWAP2
0xcb PUSH4 0xa9059cbb
0xd0 SWAP2
0xd1 DUP5
0xd2 DUP2
0xd3 ISZERO
0xd4 ISZERO
0xd5 PUSH2 0xda
0xd8 JUMPI
---
0x81: JUMPDEST 
0x83: V50 = 0x1
0x85: V51 = 0xa0
0x87: V52 = 0x2
0x89: V53 = EXP 0x2 0xa0
0x8a: V54 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b: V55 = CALLER
0x8e: V56 = AND V55 0xffffffffffffffffffffffffffffffffffffffff
0x90: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x91: V58 = 0x0
0x95: M[0x0] = V57
0x96: V59 = 0x6
0x98: V60 = 0x20
0x9c: V61 = ADD 0x0 0x20
0x9f: M[0x20] = 0x6
0xa0: V62 = ADD 0x20 0x20
0xa2: V63 = SHA3 0x0 0x40
0xa4: V64 = S[V63]
0xa5: V65 = CALLVALUE
0xa8: V66 = ADD V65 V64
0xab: S[V63] = V66
0xac: V67 = 0x2
0xaf: V68 = S[0x2]
0xb1: V69 = ADD V65 V68
0xb3: S[0x2] = V69
0xb4: V70 = 0x5
0xb6: V71 = S[0x5]
0xb7: V72 = 0x4
0xb9: V73 = S[0x4]
0xbc: V74 = 0x100
0xc2: V75 = EXP 0x100 0x0
0xc4: V76 = DIV V71 0x1
0xc6: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0xc9: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0xcb: V79 = 0xa9059cbb
0xd3: V80 = ISZERO V73
0xd4: V81 = ISZERO V80
0xd5: V82 = 0xda
0xd8: JUMPI 0xda V81
---
Entry stack: [V13, 0x0]
Stack pops: 1
Stack additions: [V65, V78, 0xa9059cbb, V55, V73, V65]
Exit stack: [V13, V65, V78, 0xa9059cbb, V55, V73, V65]

================================

Block 0xd9
[0xd9:0xd9]
---
Predecessors: [0x81]
Successors: []
---
0xd9 INVALID
---
0xd9: INVALID 
---
Entry stack: [V13, V65, V78, 0xa9059cbb, V55, V73, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V65, V78, 0xa9059cbb, V55, V73, V65]

================================

Block 0xda
[0xda:0x12f]
---
Predecessors: [0x81]
Successors: [0x130, 0x134]
---
0xda JUMPDEST
0xdb DIV
0xdc PUSH5 0xe8d4a51000
0xe2 MUL
0xe3 PUSH1 0x40
0xe5 MLOAD
0xe6 DUP4
0xe7 PUSH4 0xffffffff
0xec AND
0xed PUSH1 0xe0
0xef PUSH1 0x2
0xf1 EXP
0xf2 MUL
0xf3 DUP2
0xf4 MSTORE
0xf5 PUSH1 0x4
0xf7 ADD
0xf8 DUP1
0xf9 DUP4
0xfa PUSH1 0x1
0xfc PUSH1 0xa0
0xfe PUSH1 0x2
0x100 EXP
0x101 SUB
0x102 AND
0x103 PUSH1 0x1
0x105 PUSH1 0xa0
0x107 PUSH1 0x2
0x109 EXP
0x10a SUB
0x10b AND
0x10c DUP2
0x10d MSTORE
0x10e PUSH1 0x20
0x110 ADD
0x111 DUP3
0x112 DUP2
0x113 MSTORE
0x114 PUSH1 0x20
0x116 ADD
0x117 SWAP3
0x118 POP
0x119 POP
0x11a POP
0x11b PUSH1 0x0
0x11d PUSH1 0x40
0x11f MLOAD
0x120 DUP1
0x121 DUP4
0x122 SUB
0x123 DUP2
0x124 PUSH1 0x0
0x126 DUP8
0x127 DUP1
0x128 EXTCODESIZE
0x129 ISZERO
0x12a DUP1
0x12b ISZERO
0x12c PUSH2 0x134
0x12f JUMPI
---
0xda: JUMPDEST 
0xdb: V83 = DIV V65 V73
0xdc: V84 = 0xe8d4a51000
0xe2: V85 = MUL 0xe8d4a51000 V83
0xe3: V86 = 0x40
0xe5: V87 = M[0x40]
0xe7: V88 = 0xffffffff
0xec: V89 = AND 0xffffffff 0xa9059cbb
0xed: V90 = 0xe0
0xef: V91 = 0x2
0xf1: V92 = EXP 0x2 0xe0
0xf2: V93 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xf4: M[V87] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xf5: V94 = 0x4
0xf7: V95 = ADD 0x4 V87
0xfa: V96 = 0x1
0xfc: V97 = 0xa0
0xfe: V98 = 0x2
0x100: V99 = EXP 0x2 0xa0
0x101: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x102: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x103: V102 = 0x1
0x105: V103 = 0xa0
0x107: V104 = 0x2
0x109: V105 = EXP 0x2 0xa0
0x10a: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10b: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x10d: M[V95] = V107
0x10e: V108 = 0x20
0x110: V109 = ADD 0x20 V95
0x113: M[V109] = V85
0x114: V110 = 0x20
0x116: V111 = ADD 0x20 V109
0x11b: V112 = 0x0
0x11d: V113 = 0x40
0x11f: V114 = M[0x40]
0x122: V115 = SUB V111 V114
0x124: V116 = 0x0
0x128: V117 = EXTCODESIZE V78
0x129: V118 = ISZERO V117
0x12b: V119 = ISZERO V118
0x12c: V120 = 0x134
0x12f: JUMPI 0x134 V119
---
Entry stack: [V13, V65, V78, 0xa9059cbb, V55, V73, V65]
Stack pops: 5
Stack additions: [S4, S3, V111, 0x0, V114, V115, V114, 0x0, S4, V118]
Exit stack: [V13, V65, V78, 0xa9059cbb, V111, 0x0, V114, V115, V114, 0x0, V78, V118]

================================

Block 0x130
[0x130:0x133]
---
Predecessors: [0xda]
Successors: []
---
0x130 PUSH1 0x0
0x132 DUP1
0x133 REVERT
---
0x130: V121 = 0x0
0x133: REVERT 0x0 0x0
---
Entry stack: [V13, V65, V78, 0xa9059cbb, V111, 0x0, V114, V115, V114, 0x0, V78, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V65, V78, 0xa9059cbb, V111, 0x0, V114, V115, V114, 0x0, V78, V118]

================================

Block 0x134
[0x134:0x13e]
---
Predecessors: [0xda]
Successors: [0x13f, 0x148]
---
0x134 JUMPDEST
0x135 POP
0x136 GAS
0x137 CALL
0x138 ISZERO
0x139 DUP1
0x13a ISZERO
0x13b PUSH2 0x148
0x13e JUMPI
---
0x134: JUMPDEST 
0x136: V122 = GAS
0x137: V123 = CALL V122 V78 0x0 V114 V115 V114 0x0
0x138: V124 = ISZERO V123
0x13a: V125 = ISZERO V124
0x13b: V126 = 0x148
0x13e: JUMPI 0x148 V125
---
Entry stack: [V13, V65, V78, 0xa9059cbb, V111, 0x0, V114, V115, V114, 0x0, V78, V118]
Stack pops: 7
Stack additions: [V124]
Exit stack: [V13, V65, V78, 0xa9059cbb, V111, V124]

================================

Block 0x13f
[0x13f:0x147]
---
Predecessors: [0x134]
Successors: []
---
0x13f RETURNDATASIZE
0x140 PUSH1 0x0
0x142 DUP1
0x143 RETURNDATACOPY
0x144 RETURNDATASIZE
0x145 PUSH1 0x0
0x147 REVERT
---
0x13f: V127 = RETURNDATASIZE
0x140: V128 = 0x0
0x143: RETURNDATACOPY 0x0 0x0 V127
0x144: V129 = RETURNDATASIZE
0x145: V130 = 0x0
0x147: REVERT 0x0 V129
---
Entry stack: [V13, V65, V78, 0xa9059cbb, V111, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V65, V78, 0xa9059cbb, V111, V124]

================================

Block 0x148
[0x148:0x14e]
---
Predecessors: [0x134]
Successors: []
---
0x148 JUMPDEST
0x149 POP
0x14a POP
0x14b POP
0x14c POP
0x14d POP
0x14e STOP
---
0x148: JUMPDEST 
0x14e: STOP 
---
Entry stack: [V13, V65, V78, 0xa9059cbb, V111, V124]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x14f
[0x14f:0x156]
---
Predecessors: [0xd]
Successors: [0x157, 0x15b]
---
0x14f JUMPDEST
0x150 CALLVALUE
0x151 DUP1
0x152 ISZERO
0x153 PUSH2 0x15b
0x156 JUMPI
---
0x14f: JUMPDEST 
0x150: V131 = CALLVALUE
0x152: V132 = ISZERO V131
0x153: V133 = 0x15b
0x156: JUMPI 0x15b V132
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V131]
Exit stack: [V13, V131]

================================

Block 0x157
[0x157:0x15a]
---
Predecessors: [0x14f]
Successors: []
---
0x157 PUSH1 0x0
0x159 DUP1
0x15a REVERT
---
0x157: V134 = 0x0
0x15a: REVERT 0x0 0x0
---
Entry stack: [V13, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V131]

================================

Block 0x15b
[0x15b:0x163]
---
Predecessors: [0x14f]
Successors: [0x1ee]
---
0x15b JUMPDEST
0x15c POP
0x15d PUSH2 0x164
0x160 PUSH2 0x1ee
0x163 JUMP
---
0x15b: JUMPDEST 
0x15d: V135 = 0x164
0x160: V136 = 0x1ee
0x163: JUMP 0x1ee
---
Entry stack: [V13, V131]
Stack pops: 1
Stack additions: [0x164]
Exit stack: [V13, 0x164]

================================

Block 0x164
[0x164:0x176]
---
Predecessors: [0x1ee, 0x1f4, 0x1fa, 0x212, 0x21c]
Successors: []
---
0x164 JUMPDEST
0x165 PUSH1 0x40
0x167 DUP1
0x168 MLOAD
0x169 SWAP2
0x16a DUP3
0x16b MSTORE
0x16c MLOAD
0x16d PUSH1 0x20
0x16f SWAP1
0x170 SWAP2
0x171 ADD
0x172 DUP2
0x173 SWAP1
0x174 SUB
0x175 SWAP1
0x176 RETURN
---
0x164: JUMPDEST 
0x165: V137 = 0x40
0x168: V138 = M[0x40]
0x16b: M[V138] = S0
0x16c: V139 = M[0x40]
0x16d: V140 = 0x20
0x171: V141 = ADD V138 0x20
0x174: V142 = SUB V141 V139
0x176: RETURN V139 V142
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x177
[0x177:0x17e]
---
Predecessors: [0x27]
Successors: [0x17f, 0x183]
---
0x177 JUMPDEST
0x178 CALLVALUE
0x179 DUP1
0x17a ISZERO
0x17b PUSH2 0x183
0x17e JUMPI
---
0x177: JUMPDEST 
0x178: V143 = CALLVALUE
0x17a: V144 = ISZERO V143
0x17b: V145 = 0x183
0x17e: JUMPI 0x183 V144
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V143]
Exit stack: [V13, V143]

================================

Block 0x17f
[0x17f:0x182]
---
Predecessors: [0x177]
Successors: []
---
0x17f PUSH1 0x0
0x181 DUP1
0x182 REVERT
---
0x17f: V146 = 0x0
0x182: REVERT 0x0 0x0
---
Entry stack: [V13, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V143]

================================

Block 0x183
[0x183:0x18b]
---
Predecessors: [0x177]
Successors: [0x1f4]
---
0x183 JUMPDEST
0x184 POP
0x185 PUSH2 0x164
0x188 PUSH2 0x1f4
0x18b JUMP
---
0x183: JUMPDEST 
0x185: V147 = 0x164
0x188: V148 = 0x1f4
0x18b: JUMP 0x1f4
---
Entry stack: [V13, V143]
Stack pops: 1
Stack additions: [0x164]
Exit stack: [V13, 0x164]

================================

Block 0x18c
[0x18c:0x193]
---
Predecessors: [0x32]
Successors: [0x194, 0x198]
---
0x18c JUMPDEST
0x18d CALLVALUE
0x18e DUP1
0x18f ISZERO
0x190 PUSH2 0x198
0x193 JUMPI
---
0x18c: JUMPDEST 
0x18d: V149 = CALLVALUE
0x18f: V150 = ISZERO V149
0x190: V151 = 0x198
0x193: JUMPI 0x198 V150
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V149]
Exit stack: [V13, V149]

================================

Block 0x194
[0x194:0x197]
---
Predecessors: [0x18c]
Successors: []
---
0x194 PUSH1 0x0
0x196 DUP1
0x197 REVERT
---
0x194: V152 = 0x0
0x197: REVERT 0x0 0x0
---
Entry stack: [V13, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V149]

================================

Block 0x198
[0x198:0x1a0]
---
Predecessors: [0x18c]
Successors: [0x1fa]
---
0x198 JUMPDEST
0x199 POP
0x19a PUSH2 0x164
0x19d PUSH2 0x1fa
0x1a0 JUMP
---
0x198: JUMPDEST 
0x19a: V153 = 0x164
0x19d: V154 = 0x1fa
0x1a0: JUMP 0x1fa
---
Entry stack: [V13, V149]
Stack pops: 1
Stack additions: [0x164]
Exit stack: [V13, 0x164]

================================

Block 0x1a1
[0x1a1:0x1a8]
---
Predecessors: [0x3d]
Successors: [0x1a9, 0x1ad]
---
0x1a1 JUMPDEST
0x1a2 CALLVALUE
0x1a3 DUP1
0x1a4 ISZERO
0x1a5 PUSH2 0x1ad
0x1a8 JUMPI
---
0x1a1: JUMPDEST 
0x1a2: V155 = CALLVALUE
0x1a4: V156 = ISZERO V155
0x1a5: V157 = 0x1ad
0x1a8: JUMPI 0x1ad V156
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V155]
Exit stack: [V13, V155]

================================

Block 0x1a9
[0x1a9:0x1ac]
---
Predecessors: [0x1a1]
Successors: []
---
0x1a9 PUSH1 0x0
0x1ab DUP1
0x1ac REVERT
---
0x1a9: V158 = 0x0
0x1ac: REVERT 0x0 0x0
---
Entry stack: [V13, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V155]

================================

Block 0x1ad
[0x1ad:0x1b5]
---
Predecessors: [0x1a1]
Successors: [0x200]
---
0x1ad JUMPDEST
0x1ae POP
0x1af PUSH2 0x164
0x1b2 PUSH2 0x200
0x1b5 JUMP
---
0x1ad: JUMPDEST 
0x1af: V159 = 0x164
0x1b2: V160 = 0x200
0x1b5: JUMP 0x200
---
Entry stack: [V13, V155]
Stack pops: 1
Stack additions: [0x164]
Exit stack: [V13, 0x164]

================================

Block 0x1b6
[0x1b6:0x1bd]
---
Predecessors: [0x48]
Successors: [0x1be, 0x1c2]
---
0x1b6 JUMPDEST
0x1b7 CALLVALUE
0x1b8 DUP1
0x1b9 ISZERO
0x1ba PUSH2 0x1c2
0x1bd JUMPI
---
0x1b6: JUMPDEST 
0x1b7: V161 = CALLVALUE
0x1b9: V162 = ISZERO V161
0x1ba: V163 = 0x1c2
0x1bd: JUMPI 0x1c2 V162
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V161]
Exit stack: [V13, V161]

================================

Block 0x1be
[0x1be:0x1c1]
---
Predecessors: [0x1b6]
Successors: []
---
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 REVERT
---
0x1be: V164 = 0x0
0x1c1: REVERT 0x0 0x0
---
Entry stack: [V13, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V161]

================================

Block 0x1c2
[0x1c2:0x1d6]
---
Predecessors: [0x1b6]
Successors: [0x21c]
---
0x1c2 JUMPDEST
0x1c3 POP
0x1c4 PUSH2 0x164
0x1c7 PUSH1 0x1
0x1c9 PUSH1 0xa0
0x1cb PUSH1 0x2
0x1cd EXP
0x1ce SUB
0x1cf PUSH1 0x4
0x1d1 CALLDATALOAD
0x1d2 AND
0x1d3 PUSH2 0x21c
0x1d6 JUMP
---
0x1c2: JUMPDEST 
0x1c4: V165 = 0x164
0x1c7: V166 = 0x1
0x1c9: V167 = 0xa0
0x1cb: V168 = 0x2
0x1cd: V169 = EXP 0x2 0xa0
0x1ce: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cf: V171 = 0x4
0x1d1: V172 = CALLDATALOAD 0x4
0x1d2: V173 = AND V172 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V174 = 0x21c
0x1d6: JUMP 0x21c
---
Entry stack: [V13, V161]
Stack pops: 1
Stack additions: [0x164, V173]
Exit stack: [V13, 0x164, V173]

================================

Block 0x1d7
[0x1d7:0x1de]
---
Predecessors: [0x53]
Successors: [0x1df, 0x1e3]
---
0x1d7 JUMPDEST
0x1d8 CALLVALUE
0x1d9 DUP1
0x1da ISZERO
0x1db PUSH2 0x1e3
0x1de JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V175 = CALLVALUE
0x1da: V176 = ISZERO V175
0x1db: V177 = 0x1e3
0x1de: JUMPI 0x1e3 V176
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V175]
Exit stack: [V13, V175]

================================

Block 0x1df
[0x1df:0x1e2]
---
Predecessors: [0x1d7]
Successors: []
---
0x1df PUSH1 0x0
0x1e1 DUP1
0x1e2 REVERT
---
0x1df: V178 = 0x0
0x1e2: REVERT 0x0 0x0
---
Entry stack: [V13, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V175]

================================

Block 0x1e3
[0x1e3:0x1eb]
---
Predecessors: [0x1d7]
Successors: [0x22e]
---
0x1e3 JUMPDEST
0x1e4 POP
0x1e5 PUSH2 0x1ec
0x1e8 PUSH2 0x22e
0x1eb JUMP
---
0x1e3: JUMPDEST 
0x1e5: V179 = 0x1ec
0x1e8: V180 = 0x22e
0x1eb: JUMP 0x22e
---
Entry stack: [V13, V175]
Stack pops: 1
Stack additions: [0x1ec]
Exit stack: [V13, 0x1ec]

================================

Block 0x1ec
[0x1ec:0x1ed]
---
Predecessors: [0x402]
Successors: []
---
0x1ec JUMPDEST
0x1ed STOP
---
0x1ec: JUMPDEST 
0x1ed: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ee
[0x1ee:0x1f3]
---
Predecessors: [0x15b]
Successors: [0x164]
---
0x1ee JUMPDEST
0x1ef PUSH1 0x2
0x1f1 SLOAD
0x1f2 DUP2
0x1f3 JUMP
---
0x1ee: JUMPDEST 
0x1ef: V181 = 0x2
0x1f1: V182 = S[0x2]
0x1f3: JUMP 0x164
---
Entry stack: [V13, 0x164]
Stack pops: 1
Stack additions: [S0, V182]
Exit stack: [V13, 0x164, V182]

================================

Block 0x1f4
[0x1f4:0x1f9]
---
Predecessors: [0x183]
Successors: [0x164]
---
0x1f4 JUMPDEST
0x1f5 PUSH1 0x1
0x1f7 SLOAD
0x1f8 DUP2
0x1f9 JUMP
---
0x1f4: JUMPDEST 
0x1f5: V183 = 0x1
0x1f7: V184 = S[0x1]
0x1f9: JUMP 0x164
---
Entry stack: [V13, 0x164]
Stack pops: 1
Stack additions: [S0, V184]
Exit stack: [V13, 0x164, V184]

================================

Block 0x1fa
[0x1fa:0x1ff]
---
Predecessors: [0x198]
Successors: [0x164]
---
0x1fa JUMPDEST
0x1fb PUSH1 0x4
0x1fd SLOAD
0x1fe DUP2
0x1ff JUMP
---
0x1fa: JUMPDEST 
0x1fb: V185 = 0x4
0x1fd: V186 = S[0x4]
0x1ff: JUMP 0x164
---
Entry stack: [V13, 0x164]
Stack pops: 1
Stack additions: [S0, V186]
Exit stack: [V13, 0x164, V186]

================================

Block 0x200
[0x200:0x20d]
---
Predecessors: [0x1ad]
Successors: [0x20e, 0x212]
---
0x200 JUMPDEST
0x201 PUSH1 0x0
0x203 PUSH1 0x3
0x205 SLOAD
0x206 TIMESTAMP
0x207 LT
0x208 ISZERO
0x209 ISZERO
0x20a PUSH2 0x212
0x20d JUMPI
---
0x200: JUMPDEST 
0x201: V187 = 0x0
0x203: V188 = 0x3
0x205: V189 = S[0x3]
0x206: V190 = TIMESTAMP
0x207: V191 = LT V190 V189
0x208: V192 = ISZERO V191
0x209: V193 = ISZERO V192
0x20a: V194 = 0x212
0x20d: JUMPI 0x212 V193
---
Entry stack: [V13, 0x164]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x164, 0x0]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: [0x200]
Successors: []
---
0x20e PUSH1 0x0
0x210 DUP1
0x211 REVERT
---
0x20e: V195 = 0x0
0x211: REVERT 0x0 0x0
---
Entry stack: [V13, 0x164, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x164, 0x0]

================================

Block 0x212
[0x212:0x21b]
---
Predecessors: [0x200]
Successors: [0x164]
---
0x212 JUMPDEST
0x213 TIMESTAMP
0x214 PUSH1 0x3
0x216 SLOAD
0x217 SUB
0x218 SWAP1
0x219 POP
0x21a SWAP1
0x21b JUMP
---
0x212: JUMPDEST 
0x213: V196 = TIMESTAMP
0x214: V197 = 0x3
0x216: V198 = S[0x3]
0x217: V199 = SUB V198 V196
0x21b: JUMP 0x164
---
Entry stack: [V13, 0x164, 0x0]
Stack pops: 2
Stack additions: [V199]
Exit stack: [V13, V199]

================================

Block 0x21c
[0x21c:0x22d]
---
Predecessors: [0x1c2]
Successors: [0x164]
---
0x21c JUMPDEST
0x21d PUSH1 0x6
0x21f PUSH1 0x20
0x221 MSTORE
0x222 PUSH1 0x0
0x224 SWAP1
0x225 DUP2
0x226 MSTORE
0x227 PUSH1 0x40
0x229 SWAP1
0x22a SHA3
0x22b SLOAD
0x22c DUP2
0x22d JUMP
---
0x21c: JUMPDEST 
0x21d: V200 = 0x6
0x21f: V201 = 0x20
0x221: M[0x20] = 0x6
0x222: V202 = 0x0
0x226: M[0x0] = V173
0x227: V203 = 0x40
0x22a: V204 = SHA3 0x0 0x40
0x22b: V205 = S[V204]
0x22d: JUMP 0x164
---
Entry stack: [V13, 0x164, V173]
Stack pops: 2
Stack additions: [S1, V205]
Exit stack: [V13, 0x164, V205]

================================

Block 0x22e
[0x22e:0x25d]
---
Predecessors: [0x1e3]
Successors: [0x25e, 0x262]
---
0x22e JUMPDEST
0x22f PUSH1 0x0
0x231 DUP1
0x232 SWAP1
0x233 SLOAD
0x234 SWAP1
0x235 PUSH2 0x100
0x238 EXP
0x239 SWAP1
0x23a DIV
0x23b PUSH1 0x1
0x23d PUSH1 0xa0
0x23f PUSH1 0x2
0x241 EXP
0x242 SUB
0x243 AND
0x244 PUSH1 0x1
0x246 PUSH1 0xa0
0x248 PUSH1 0x2
0x24a EXP
0x24b SUB
0x24c AND
0x24d CALLER
0x24e PUSH1 0x1
0x250 PUSH1 0xa0
0x252 PUSH1 0x2
0x254 EXP
0x255 SUB
0x256 AND
0x257 EQ
0x258 ISZERO
0x259 ISZERO
0x25a PUSH2 0x262
0x25d JUMPI
---
0x22e: JUMPDEST 
0x22f: V206 = 0x0
0x233: V207 = S[0x0]
0x235: V208 = 0x100
0x238: V209 = EXP 0x100 0x0
0x23a: V210 = DIV V207 0x1
0x23b: V211 = 0x1
0x23d: V212 = 0xa0
0x23f: V213 = 0x2
0x241: V214 = EXP 0x2 0xa0
0x242: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x243: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x244: V217 = 0x1
0x246: V218 = 0xa0
0x248: V219 = 0x2
0x24a: V220 = EXP 0x2 0xa0
0x24b: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24c: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x24d: V223 = CALLER
0x24e: V224 = 0x1
0x250: V225 = 0xa0
0x252: V226 = 0x2
0x254: V227 = EXP 0x2 0xa0
0x255: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x256: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x257: V230 = EQ V229 V222
0x258: V231 = ISZERO V230
0x259: V232 = ISZERO V231
0x25a: V233 = 0x262
0x25d: JUMPI 0x262 V232
---
Entry stack: [V13, 0x1ec]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ec]

================================

Block 0x25e
[0x25e:0x261]
---
Predecessors: [0x22e]
Successors: []
---
0x25e PUSH1 0x0
0x260 DUP1
0x261 REVERT
---
0x25e: V234 = 0x0
0x261: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ec]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ec]

================================

Block 0x262
[0x262:0x26d]
---
Predecessors: [0x22e]
Successors: [0x26e, 0x272]
---
0x262 JUMPDEST
0x263 PUSH1 0x3
0x265 SLOAD
0x266 TIMESTAMP
0x267 GT
0x268 ISZERO
0x269 ISZERO
0x26a PUSH2 0x272
0x26d JUMPI
---
0x262: JUMPDEST 
0x263: V235 = 0x3
0x265: V236 = S[0x3]
0x266: V237 = TIMESTAMP
0x267: V238 = GT V237 V236
0x268: V239 = ISZERO V238
0x269: V240 = ISZERO V239
0x26a: V241 = 0x272
0x26d: JUMPI 0x272 V240
---
Entry stack: [V13, 0x1ec]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ec]

================================

Block 0x26e
[0x26e:0x271]
---
Predecessors: [0x262]
Successors: []
---
0x26e PUSH1 0x0
0x270 DUP1
0x271 REVERT
---
0x26e: V242 = 0x0
0x271: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ec]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ec]

================================

Block 0x272
[0x272:0x316]
---
Predecessors: [0x262]
Successors: [0x317, 0x31b]
---
0x272 JUMPDEST
0x273 PUSH1 0x5
0x275 PUSH1 0x0
0x277 SWAP1
0x278 SLOAD
0x279 SWAP1
0x27a PUSH2 0x100
0x27d EXP
0x27e SWAP1
0x27f DIV
0x280 PUSH1 0x1
0x282 PUSH1 0xa0
0x284 PUSH1 0x2
0x286 EXP
0x287 SUB
0x288 AND
0x289 PUSH1 0x1
0x28b PUSH1 0xa0
0x28d PUSH1 0x2
0x28f EXP
0x290 SUB
0x291 AND
0x292 PUSH4 0xa9059cbb
0x297 CALLER
0x298 PUSH1 0x5
0x29a PUSH1 0x0
0x29c SWAP1
0x29d SLOAD
0x29e SWAP1
0x29f PUSH2 0x100
0x2a2 EXP
0x2a3 SWAP1
0x2a4 DIV
0x2a5 PUSH1 0x1
0x2a7 PUSH1 0xa0
0x2a9 PUSH1 0x2
0x2ab EXP
0x2ac SUB
0x2ad AND
0x2ae PUSH1 0x1
0x2b0 PUSH1 0xa0
0x2b2 PUSH1 0x2
0x2b4 EXP
0x2b5 SUB
0x2b6 AND
0x2b7 PUSH4 0x70a08231
0x2bc PUSH1 0x0
0x2be DUP1
0x2bf SWAP1
0x2c0 SLOAD
0x2c1 SWAP1
0x2c2 PUSH2 0x100
0x2c5 EXP
0x2c6 SWAP1
0x2c7 DIV
0x2c8 PUSH1 0x1
0x2ca PUSH1 0xa0
0x2cc PUSH1 0x2
0x2ce EXP
0x2cf SUB
0x2d0 AND
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 DUP3
0x2d5 PUSH4 0xffffffff
0x2da AND
0x2db PUSH1 0xe0
0x2dd PUSH1 0x2
0x2df EXP
0x2e0 MUL
0x2e1 DUP2
0x2e2 MSTORE
0x2e3 PUSH1 0x4
0x2e5 ADD
0x2e6 DUP1
0x2e7 DUP3
0x2e8 PUSH1 0x1
0x2ea PUSH1 0xa0
0x2ec PUSH1 0x2
0x2ee EXP
0x2ef SUB
0x2f0 AND
0x2f1 PUSH1 0x1
0x2f3 PUSH1 0xa0
0x2f5 PUSH1 0x2
0x2f7 EXP
0x2f8 SUB
0x2f9 AND
0x2fa DUP2
0x2fb MSTORE
0x2fc PUSH1 0x20
0x2fe ADD
0x2ff SWAP2
0x300 POP
0x301 POP
0x302 PUSH1 0x20
0x304 PUSH1 0x40
0x306 MLOAD
0x307 DUP1
0x308 DUP4
0x309 SUB
0x30a DUP2
0x30b PUSH1 0x0
0x30d DUP8
0x30e DUP1
0x30f EXTCODESIZE
0x310 ISZERO
0x311 DUP1
0x312 ISZERO
0x313 PUSH2 0x31b
0x316 JUMPI
---
0x272: JUMPDEST 
0x273: V243 = 0x5
0x275: V244 = 0x0
0x278: V245 = S[0x5]
0x27a: V246 = 0x100
0x27d: V247 = EXP 0x100 0x0
0x27f: V248 = DIV V245 0x1
0x280: V249 = 0x1
0x282: V250 = 0xa0
0x284: V251 = 0x2
0x286: V252 = EXP 0x2 0xa0
0x287: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x288: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x289: V255 = 0x1
0x28b: V256 = 0xa0
0x28d: V257 = 0x2
0x28f: V258 = EXP 0x2 0xa0
0x290: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x291: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x292: V261 = 0xa9059cbb
0x297: V262 = CALLER
0x298: V263 = 0x5
0x29a: V264 = 0x0
0x29d: V265 = S[0x5]
0x29f: V266 = 0x100
0x2a2: V267 = EXP 0x100 0x0
0x2a4: V268 = DIV V265 0x1
0x2a5: V269 = 0x1
0x2a7: V270 = 0xa0
0x2a9: V271 = 0x2
0x2ab: V272 = EXP 0x2 0xa0
0x2ac: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ad: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x2ae: V275 = 0x1
0x2b0: V276 = 0xa0
0x2b2: V277 = 0x2
0x2b4: V278 = EXP 0x2 0xa0
0x2b5: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b6: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x2b7: V281 = 0x70a08231
0x2bc: V282 = 0x0
0x2c0: V283 = S[0x0]
0x2c2: V284 = 0x100
0x2c5: V285 = EXP 0x100 0x0
0x2c7: V286 = DIV V283 0x1
0x2c8: V287 = 0x1
0x2ca: V288 = 0xa0
0x2cc: V289 = 0x2
0x2ce: V290 = EXP 0x2 0xa0
0x2cf: V291 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d0: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x2d1: V293 = 0x40
0x2d3: V294 = M[0x40]
0x2d5: V295 = 0xffffffff
0x2da: V296 = AND 0xffffffff 0x70a08231
0x2db: V297 = 0xe0
0x2dd: V298 = 0x2
0x2df: V299 = EXP 0x2 0xe0
0x2e0: V300 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x2e2: M[V294] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2e3: V301 = 0x4
0x2e5: V302 = ADD 0x4 V294
0x2e8: V303 = 0x1
0x2ea: V304 = 0xa0
0x2ec: V305 = 0x2
0x2ee: V306 = EXP 0x2 0xa0
0x2ef: V307 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f0: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x2f1: V309 = 0x1
0x2f3: V310 = 0xa0
0x2f5: V311 = 0x2
0x2f7: V312 = EXP 0x2 0xa0
0x2f8: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f9: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x2fb: M[V302] = V314
0x2fc: V315 = 0x20
0x2fe: V316 = ADD 0x20 V302
0x302: V317 = 0x20
0x304: V318 = 0x40
0x306: V319 = M[0x40]
0x309: V320 = SUB V316 V319
0x30b: V321 = 0x0
0x30f: V322 = EXTCODESIZE V280
0x310: V323 = ISZERO V322
0x312: V324 = ISZERO V323
0x313: V325 = 0x31b
0x316: JUMPI 0x31b V324
---
Entry stack: [V13, 0x1ec]
Stack pops: 0
Stack additions: [V260, 0xa9059cbb, V262, V280, 0x70a08231, V316, 0x20, V319, V320, V319, 0x0, V280, V323]
Exit stack: [V13, 0x1ec, V260, 0xa9059cbb, V262, V280, 0x70a08231, V316, 0x20, V319, V320, V319, 0x0, V280, V323]

================================

Block 0x317
[0x317:0x31a]
---
Predecessors: [0x272]
Successors: []
---
0x317 PUSH1 0x0
0x319 DUP1
0x31a REVERT
---
0x317: V326 = 0x0
0x31a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ec, V260, 0xa9059cbb, V262, V280, 0x70a08231, V316, 0x20, V319, V320, V319, 0x0, V280, V323]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ec, V260, 0xa9059cbb, V262, V280, 0x70a08231, V316, 0x20, V319, V320, V319, 0x0, V280, V323]

================================

Block 0x31b
[0x31b:0x325]
---
Predecessors: [0x272]
Successors: [0x326, 0x32f]
---
0x31b JUMPDEST
0x31c POP
0x31d GAS
0x31e CALL
0x31f ISZERO
0x320 DUP1
0x321 ISZERO
0x322 PUSH2 0x32f
0x325 JUMPI
---
0x31b: JUMPDEST 
0x31d: V327 = GAS
0x31e: V328 = CALL V327 V280 0x0 V319 V320 V319 0x20
0x31f: V329 = ISZERO V328
0x321: V330 = ISZERO V329
0x322: V331 = 0x32f
0x325: JUMPI 0x32f V330
---
Entry stack: [V13, 0x1ec, V260, 0xa9059cbb, V262, V280, 0x70a08231, V316, 0x20, V319, V320, V319, 0x0, V280, V323]
Stack pops: 7
Stack additions: [V329]
Exit stack: [V13, 0x1ec, V260, 0xa9059cbb, V262, V280, 0x70a08231, V316, V329]

================================

Block 0x326
[0x326:0x32e]
---
Predecessors: [0x31b]
Successors: []
---
0x326 RETURNDATASIZE
0x327 PUSH1 0x0
0x329 DUP1
0x32a RETURNDATACOPY
0x32b RETURNDATASIZE
0x32c PUSH1 0x0
0x32e REVERT
---
0x326: V332 = RETURNDATASIZE
0x327: V333 = 0x0
0x32a: RETURNDATACOPY 0x0 0x0 V332
0x32b: V334 = RETURNDATASIZE
0x32c: V335 = 0x0
0x32e: REVERT 0x0 V334
---
Entry stack: [V13, 0x1ec, V260, 0xa9059cbb, V262, V280, 0x70a08231, V316, V329]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ec, V260, 0xa9059cbb, V262, V280, 0x70a08231, V316, V329]

================================

Block 0x32f
[0x32f:0x340]
---
Predecessors: [0x31b]
Successors: [0x341, 0x345]
---
0x32f JUMPDEST
0x330 POP
0x331 POP
0x332 POP
0x333 POP
0x334 PUSH1 0x40
0x336 MLOAD
0x337 RETURNDATASIZE
0x338 PUSH1 0x20
0x33a DUP2
0x33b LT
0x33c ISZERO
0x33d PUSH2 0x345
0x340 JUMPI
---
0x32f: JUMPDEST 
0x334: V336 = 0x40
0x336: V337 = M[0x40]
0x337: V338 = RETURNDATASIZE
0x338: V339 = 0x20
0x33b: V340 = LT V338 0x20
0x33c: V341 = ISZERO V340
0x33d: V342 = 0x345
0x340: JUMPI 0x345 V341
---
Entry stack: [V13, 0x1ec, V260, 0xa9059cbb, V262, V280, 0x70a08231, V316, V329]
Stack pops: 4
Stack additions: [V337, V338]
Exit stack: [V13, 0x1ec, V260, 0xa9059cbb, V262, V337, V338]

================================

Block 0x341
[0x341:0x344]
---
Predecessors: [0x32f]
Successors: []
---
0x341 PUSH1 0x0
0x343 DUP1
0x344 REVERT
---
0x341: V343 = 0x0
0x344: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ec, V260, 0xa9059cbb, V262, V337, V338]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ec, V260, 0xa9059cbb, V262, V337, V338]

================================

Block 0x345
[0x345:0x38e]
---
Predecessors: [0x32f]
Successors: [0x38f, 0x393]
---
0x345 JUMPDEST
0x346 POP
0x347 MLOAD
0x348 PUSH1 0x40
0x34a DUP1
0x34b MLOAD
0x34c PUSH1 0xe0
0x34e PUSH1 0x2
0x350 EXP
0x351 PUSH4 0xffffffff
0x356 DUP7
0x357 AND
0x358 MUL
0x359 DUP2
0x35a MSTORE
0x35b PUSH1 0x1
0x35d PUSH1 0xa0
0x35f PUSH1 0x2
0x361 EXP
0x362 SUB
0x363 SWAP4
0x364 DUP5
0x365 AND
0x366 SWAP1
0x367 SWAP4
0x368 AND
0x369 PUSH1 0x4
0x36b SWAP1
0x36c SWAP4
0x36d ADD
0x36e SWAP3
0x36f DUP4
0x370 MSTORE
0x371 PUSH1 0x20
0x373 SWAP3
0x374 DUP4
0x375 ADD
0x376 SWAP2
0x377 DUP3
0x378 MSTORE
0x379 MLOAD
0x37a SWAP2
0x37b ADD
0x37c SWAP1
0x37d PUSH1 0x0
0x37f SWAP1
0x380 DUP1
0x381 DUP4
0x382 SUB
0x383 DUP2
0x384 DUP4
0x385 DUP8
0x386 DUP1
0x387 EXTCODESIZE
0x388 ISZERO
0x389 DUP1
0x38a ISZERO
0x38b PUSH2 0x393
0x38e JUMPI
---
0x345: JUMPDEST 
0x347: V344 = M[V337]
0x348: V345 = 0x40
0x34b: V346 = M[0x40]
0x34c: V347 = 0xe0
0x34e: V348 = 0x2
0x350: V349 = EXP 0x2 0xe0
0x351: V350 = 0xffffffff
0x357: V351 = AND 0xa9059cbb 0xffffffff
0x358: V352 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x35a: M[V346] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x35b: V353 = 0x1
0x35d: V354 = 0xa0
0x35f: V355 = 0x2
0x361: V356 = EXP 0x2 0xa0
0x362: V357 = SUB 0x10000000000000000000000000000000000000000 0x1
0x365: V358 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x368: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x369: V360 = 0x4
0x36d: V361 = ADD V346 0x4
0x370: M[V361] = V359
0x371: V362 = 0x20
0x375: V363 = ADD 0x20 V361
0x378: M[V363] = V344
0x379: V364 = M[0x40]
0x37b: V365 = ADD 0x20 V363
0x37d: V366 = 0x0
0x382: V367 = SUB V365 V364
0x387: V368 = EXTCODESIZE V260
0x388: V369 = ISZERO V368
0x38a: V370 = ISZERO V369
0x38b: V371 = 0x393
0x38e: JUMPI 0x393 V370
---
Entry stack: [V13, 0x1ec, V260, 0xa9059cbb, V262, V337, V338]
Stack pops: 5
Stack additions: [S4, S3, V365, 0x0, V364, V367, V364, 0x0, S4, V369]
Exit stack: [V13, 0x1ec, V260, 0xa9059cbb, V365, 0x0, V364, V367, V364, 0x0, V260, V369]

================================

Block 0x38f
[0x38f:0x392]
---
Predecessors: [0x345]
Successors: []
---
0x38f PUSH1 0x0
0x391 DUP1
0x392 REVERT
---
0x38f: V372 = 0x0
0x392: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ec, V260, 0xa9059cbb, V365, 0x0, V364, V367, V364, 0x0, V260, V369]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ec, V260, 0xa9059cbb, V365, 0x0, V364, V367, V364, 0x0, V260, V369]

================================

Block 0x393
[0x393:0x39d]
---
Predecessors: [0x345]
Successors: [0x39e, 0x3a7]
---
0x393 JUMPDEST
0x394 POP
0x395 GAS
0x396 CALL
0x397 ISZERO
0x398 DUP1
0x399 ISZERO
0x39a PUSH2 0x3a7
0x39d JUMPI
---
0x393: JUMPDEST 
0x395: V373 = GAS
0x396: V374 = CALL V373 V260 0x0 V364 V367 V364 0x0
0x397: V375 = ISZERO V374
0x399: V376 = ISZERO V375
0x39a: V377 = 0x3a7
0x39d: JUMPI 0x3a7 V376
---
Entry stack: [V13, 0x1ec, V260, 0xa9059cbb, V365, 0x0, V364, V367, V364, 0x0, V260, V369]
Stack pops: 7
Stack additions: [V375]
Exit stack: [V13, 0x1ec, V260, 0xa9059cbb, V365, V375]

================================

Block 0x39e
[0x39e:0x3a6]
---
Predecessors: [0x393]
Successors: []
---
0x39e RETURNDATASIZE
0x39f PUSH1 0x0
0x3a1 DUP1
0x3a2 RETURNDATACOPY
0x3a3 RETURNDATASIZE
0x3a4 PUSH1 0x0
0x3a6 REVERT
---
0x39e: V378 = RETURNDATASIZE
0x39f: V379 = 0x0
0x3a2: RETURNDATACOPY 0x0 0x0 V378
0x3a3: V380 = RETURNDATASIZE
0x3a4: V381 = 0x0
0x3a6: REVERT 0x0 V380
---
Entry stack: [V13, 0x1ec, V260, 0xa9059cbb, V365, V375]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ec, V260, 0xa9059cbb, V365, V375]

================================

Block 0x3a7
[0x3a7:0x3f8]
---
Predecessors: [0x393]
Successors: [0x3f9, 0x402]
---
0x3a7 JUMPDEST
0x3a8 POP
0x3a9 POP
0x3aa POP
0x3ab POP
0x3ac PUSH1 0x0
0x3ae DUP1
0x3af SWAP1
0x3b0 SLOAD
0x3b1 SWAP1
0x3b2 PUSH2 0x100
0x3b5 EXP
0x3b6 SWAP1
0x3b7 DIV
0x3b8 PUSH1 0x1
0x3ba PUSH1 0xa0
0x3bc PUSH1 0x2
0x3be EXP
0x3bf SUB
0x3c0 AND
0x3c1 PUSH1 0x1
0x3c3 PUSH1 0xa0
0x3c5 PUSH1 0x2
0x3c7 EXP
0x3c8 SUB
0x3c9 AND
0x3ca PUSH2 0x8fc
0x3cd ADDRESS
0x3ce PUSH1 0x1
0x3d0 PUSH1 0xa0
0x3d2 PUSH1 0x2
0x3d4 EXP
0x3d5 SUB
0x3d6 AND
0x3d7 BALANCE
0x3d8 SWAP1
0x3d9 DUP2
0x3da ISZERO
0x3db MUL
0x3dc SWAP1
0x3dd PUSH1 0x40
0x3df MLOAD
0x3e0 PUSH1 0x0
0x3e2 PUSH1 0x40
0x3e4 MLOAD
0x3e5 DUP1
0x3e6 DUP4
0x3e7 SUB
0x3e8 DUP2
0x3e9 DUP6
0x3ea DUP9
0x3eb DUP9
0x3ec CALL
0x3ed SWAP4
0x3ee POP
0x3ef POP
0x3f0 POP
0x3f1 POP
0x3f2 ISZERO
0x3f3 DUP1
0x3f4 ISZERO
0x3f5 PUSH2 0x402
0x3f8 JUMPI
---
0x3a7: JUMPDEST 
0x3ac: V382 = 0x0
0x3b0: V383 = S[0x0]
0x3b2: V384 = 0x100
0x3b5: V385 = EXP 0x100 0x0
0x3b7: V386 = DIV V383 0x1
0x3b8: V387 = 0x1
0x3ba: V388 = 0xa0
0x3bc: V389 = 0x2
0x3be: V390 = EXP 0x2 0xa0
0x3bf: V391 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c0: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V386
0x3c1: V393 = 0x1
0x3c3: V394 = 0xa0
0x3c5: V395 = 0x2
0x3c7: V396 = EXP 0x2 0xa0
0x3c8: V397 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c9: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x3ca: V399 = 0x8fc
0x3cd: V400 = ADDRESS
0x3ce: V401 = 0x1
0x3d0: V402 = 0xa0
0x3d2: V403 = 0x2
0x3d4: V404 = EXP 0x2 0xa0
0x3d5: V405 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d6: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x3d7: V407 = BALANCE V406
0x3da: V408 = ISZERO V407
0x3db: V409 = MUL V408 0x8fc
0x3dd: V410 = 0x40
0x3df: V411 = M[0x40]
0x3e0: V412 = 0x0
0x3e2: V413 = 0x40
0x3e4: V414 = M[0x40]
0x3e7: V415 = SUB V411 V414
0x3ec: V416 = CALL V409 V398 V407 V414 V415 V414 0x0
0x3f2: V417 = ISZERO V416
0x3f4: V418 = ISZERO V417
0x3f5: V419 = 0x402
0x3f8: JUMPI 0x402 V418
---
Entry stack: [V13, 0x1ec, V260, 0xa9059cbb, V365, V375]
Stack pops: 4
Stack additions: [V417]
Exit stack: [V13, 0x1ec, V417]

================================

Block 0x3f9
[0x3f9:0x401]
---
Predecessors: [0x3a7]
Successors: []
---
0x3f9 RETURNDATASIZE
0x3fa PUSH1 0x0
0x3fc DUP1
0x3fd RETURNDATACOPY
0x3fe RETURNDATASIZE
0x3ff PUSH1 0x0
0x401 REVERT
---
0x3f9: V420 = RETURNDATASIZE
0x3fa: V421 = 0x0
0x3fd: RETURNDATACOPY 0x0 0x0 V420
0x3fe: V422 = RETURNDATASIZE
0x3ff: V423 = 0x0
0x401: REVERT 0x0 V422
---
Entry stack: [V13, 0x1ec, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ec, V417]

================================

Block 0x402
[0x402:0x404]
---
Predecessors: [0x3a7]
Successors: [0x1ec]
---
0x402 JUMPDEST
0x403 POP
0x404 JUMP
---
0x402: JUMPDEST 
0x404: JUMP 0x1ec
---
Entry stack: [V13, 0x1ec, V417]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x405
[0x405:0x430]
---
Predecessors: []
Successors: []
---
0x405 STOP
0x406 LOG1
0x407 PUSH6 0x627a7a723058
0x40e SHA3
0x40f MISSING 0x1f
0x410 PUSH22 0x2046fb2cbc9fbb9b30bd7794346846b3d94d934539aa
0x427 MISSING 0xd9
0x428 CODECOPY
0x429 CALLDATALOAD
0x42a MISSING 0xd6
0x42b CREATE2
0x42c MISSING 0x48
0x42d MISSING 0xfb
0x42e MISSING 0xb9
0x42f STOP
0x430 MISSING 0x29
---
0x405: STOP 
0x406: LOG S0 S1 S2
0x407: V424 = 0x627a7a723058
0x40e: V425 = SHA3 0x627a7a723058 S3
0x40f: MISSING 0x1f
0x410: V426 = 0x2046fb2cbc9fbb9b30bd7794346846b3d94d934539aa
0x427: MISSING 0xd9
0x428: CODECOPY S0 S1 S2
0x429: V427 = CALLDATALOAD S3
0x42a: MISSING 0xd6
0x42b: V428 = CREATE2 S0 S1 S2 S3
0x42c: MISSING 0x48
0x42d: MISSING 0xfb
0x42e: MISSING 0xb9
0x42f: STOP 
0x430: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V425, 0x2046fb2cbc9fbb9b30bd7794346846b3d94d934539aa, V427, V428]
Exit stack: []

================================

Function 0:
Public function signature: 0x242d7dba
Entry block: 0x14f
Exit block: 0x164
Body: 0x14f, 0x157, 0x15b, 0x164, 0x1ee

Function 1:
Public function signature: 0x7a3a0e84
Entry block: 0x177
Exit block: 0x164
Body: 0x164, 0x177, 0x17f, 0x183, 0x1f4

Function 2:
Public function signature: 0x7ff9b596
Entry block: 0x18c
Exit block: 0x164
Body: 0x164, 0x18c, 0x194, 0x198, 0x1fa

Function 3:
Public function signature: 0xbc0b5757
Entry block: 0x1a1
Exit block: 0x164
Body: 0x164, 0x1a1, 0x1a9, 0x1ad, 0x200, 0x20e, 0x212

Function 4:
Public function signature: 0xe62c9f6c
Entry block: 0x1b6
Exit block: 0x164
Body: 0x164, 0x1b6, 0x1be, 0x1c2, 0x21c

Function 5:
Public function signature: 0xfd6b7ef8
Entry block: 0x1d7
Exit block: 0x1ec
Body: 0x1d7, 0x1df, 0x1e3, 0x1ec, 0x22e, 0x25e, 0x262, 0x26e, 0x272, 0x317, 0x31b, 0x326, 0x32f, 0x341, 0x345, 0x38f, 0x393, 0x39e, 0x3a7, 0x3f9, 0x402

Function 6:
Public fallback function
Entry block: 0x5e
Exit block: 0x13f
Body: 0x5e, 0x6c, 0x70, 0x7d, 0x81, 0xd9, 0xda, 0x130, 0x134, 0x13f, 0x148

