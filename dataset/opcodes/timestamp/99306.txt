Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x5c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x5c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x5c
0xa: JUMPI 0x5c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x5e]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xc08bf88
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x5e
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xc08bf88
0x20: V14 = EQ V12 0xc08bf88
0x21: V15 = 0x5e
0x24: JUMPI 0x5e V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x70]
---
0x25 DUP1
0x26 PUSH4 0x29560980
0x2b EQ
0x2c PUSH2 0x70
0x2f JUMPI
---
0x26: V16 = 0x29560980
0x2b: V17 = EQ 0x29560980 V12
0x2c: V18 = 0x70
0x2f: JUMPI 0x70 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x95]
---
0x30 DUP1
0x31 PUSH4 0x2e1a7d4d
0x36 EQ
0x37 PUSH2 0x95
0x3a JUMPI
---
0x31: V19 = 0x2e1a7d4d
0x36: V20 = EQ 0x2e1a7d4d V12
0x37: V21 = 0x95
0x3a: JUMPI 0x95 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xbc]
---
0x3b DUP1
0x3c PUSH4 0x853828b6
0x41 EQ
0x42 PUSH2 0xbc
0x45 JUMPI
---
0x3c: V22 = 0x853828b6
0x41: V23 = EQ 0x853828b6 V12
0x42: V24 = 0xbc
0x45: JUMPI 0xbc V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0xe0]
---
0x46 DUP1
0x47 PUSH4 0xd0e30db0
0x4c EQ
0x4d PUSH2 0xe0
0x50 JUMPI
---
0x47: V25 = 0xd0e30db0
0x4c: V26 = EQ 0xd0e30db0 V12
0x4d: V27 = 0xe0
0x50: JUMPI 0xe0 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0xea]
---
0x51 DUP1
0x52 PUSH4 0xe941fa78
0x57 EQ
0x58 PUSH2 0xea
0x5b JUMPI
---
0x52: V28 = 0xe941fa78
0x57: V29 = EQ 0xe941fa78 V12
0x58: V30 = 0xea
0x5b: JUMPI 0xea V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x5d]
---
Predecessors: [0x0, 0x51]
Successors: []
---
0x5c JUMPDEST
0x5d INVALID
---
0x5c: JUMPDEST 
0x5d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5e
[0x5e:0x64]
---
Predecessors: [0xb]
Successors: [0x65, 0x66]
---
0x5e JUMPDEST
0x5f CALLVALUE
0x60 ISZERO
0x61 PUSH2 0x66
0x64 JUMPI
---
0x5e: JUMPDEST 
0x5f: V31 = CALLVALUE
0x60: V32 = ISZERO V31
0x61: V33 = 0x66
0x64: JUMPI 0x66 V32
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x65
[0x65:0x65]
---
Predecessors: [0x5e]
Successors: []
---
0x65 INVALID
---
0x65: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x66
[0x66:0x6d]
---
Predecessors: [0x5e]
Successors: [0x10e]
---
0x66 JUMPDEST
0x67 PUSH2 0x6e
0x6a PUSH2 0x10e
0x6d JUMP
---
0x66: JUMPDEST 
0x67: V34 = 0x6e
0x6a: V35 = 0x10e
0x6d: JUMP 0x10e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6e]
Exit stack: [V12, 0x6e]

================================

Block 0x6e
[0x6e:0x6f]
---
Predecessors: [0x188, 0x3cd]
Successors: []
---
0x6e JUMPDEST
0x6f STOP
---
0x6e: JUMPDEST 
0x6f: STOP 
---
Entry stack: [V12, 0xa8, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, S2, S1, S0]

================================

Block 0x70
[0x70:0x76]
---
Predecessors: [0x25]
Successors: [0x77, 0x78]
---
0x70 JUMPDEST
0x71 CALLVALUE
0x72 ISZERO
0x73 PUSH2 0x78
0x76 JUMPI
---
0x70: JUMPDEST 
0x71: V36 = CALLVALUE
0x72: V37 = ISZERO V36
0x73: V38 = 0x78
0x76: JUMPI 0x78 V37
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x77
[0x77:0x77]
---
Predecessors: [0x70]
Successors: []
---
0x77 INVALID
---
0x77: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x70]
Successors: [0x18a]
---
0x78 JUMPDEST
0x79 PUSH2 0x83
0x7c PUSH1 0x4
0x7e CALLDATALOAD
0x7f PUSH2 0x18a
0x82 JUMP
---
0x78: JUMPDEST 
0x79: V39 = 0x83
0x7c: V40 = 0x4
0x7e: V41 = CALLDATALOAD 0x4
0x7f: V42 = 0x18a
0x82: JUMP 0x18a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x83, V41]
Exit stack: [V12, 0x83, V41]

================================

Block 0x83
[0x83:0x94]
---
Predecessors: [0x1d1, 0x359]
Successors: []
---
0x83 JUMPDEST
0x84 PUSH1 0x40
0x86 DUP1
0x87 MLOAD
0x88 SWAP2
0x89 DUP3
0x8a MSTORE
0x8b MLOAD
0x8c SWAP1
0x8d DUP2
0x8e SWAP1
0x8f SUB
0x90 PUSH1 0x20
0x92 ADD
0x93 SWAP1
0x94 RETURN
---
0x83: JUMPDEST 
0x84: V43 = 0x40
0x87: V44 = M[0x40]
0x8a: M[V44] = S0
0x8b: V45 = M[0x40]
0x8f: V46 = SUB V44 V45
0x90: V47 = 0x20
0x92: V48 = ADD 0x20 V46
0x94: RETURN V45 V48
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S3, S2, S1]

================================

Block 0x95
[0x95:0x9b]
---
Predecessors: [0x30]
Successors: [0x9c, 0x9d]
---
0x95 JUMPDEST
0x96 CALLVALUE
0x97 ISZERO
0x98 PUSH2 0x9d
0x9b JUMPI
---
0x95: JUMPDEST 
0x96: V49 = CALLVALUE
0x97: V50 = ISZERO V49
0x98: V51 = 0x9d
0x9b: JUMPI 0x9d V50
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9c
[0x9c:0x9c]
---
Predecessors: [0x95]
Successors: []
---
0x9c INVALID
---
0x9c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9d
[0x9d:0xa7]
---
Predecessors: [0x95]
Successors: [0x1d6]
---
0x9d JUMPDEST
0x9e PUSH2 0xa8
0xa1 PUSH1 0x4
0xa3 CALLDATALOAD
0xa4 PUSH2 0x1d6
0xa7 JUMP
---
0x9d: JUMPDEST 
0x9e: V52 = 0xa8
0xa1: V53 = 0x4
0xa3: V54 = CALLDATALOAD 0x4
0xa4: V55 = 0x1d6
0xa7: JUMP 0x1d6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa8, V54]
Exit stack: [V12, 0xa8, V54]

================================

Block 0xa8
[0xa8:0xbb]
---
Predecessors: [0x1d1, 0x359, 0x446, 0x4ef]
Successors: []
---
0xa8 JUMPDEST
0xa9 PUSH1 0x40
0xab DUP1
0xac MLOAD
0xad SWAP2
0xae ISZERO
0xaf ISZERO
0xb0 DUP3
0xb1 MSTORE
0xb2 MLOAD
0xb3 SWAP1
0xb4 DUP2
0xb5 SWAP1
0xb6 SUB
0xb7 PUSH1 0x20
0xb9 ADD
0xba SWAP1
0xbb RETURN
---
0xa8: JUMPDEST 
0xa9: V56 = 0x40
0xac: V57 = M[0x40]
0xae: V58 = ISZERO S0
0xaf: V59 = ISZERO V58
0xb1: M[V57] = V59
0xb2: V60 = M[0x40]
0xb6: V61 = SUB V57 V60
0xb7: V62 = 0x20
0xb9: V63 = ADD 0x20 V61
0xbb: RETURN V60 V63
---
Entry stack: [V12, 0xa8, S11, S10, S9, S8, S7, {0xa8, 0x1cd, 0x539}, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa8, S11, S10, S9, S8, S7, {0xa8, 0x1cd, 0x539}, S5, S4, S3, S2, S1]

================================

Block 0xbc
[0xbc:0xc2]
---
Predecessors: [0x3b]
Successors: [0xc3, 0xc4]
---
0xbc JUMPDEST
0xbd CALLVALUE
0xbe ISZERO
0xbf PUSH2 0xc4
0xc2 JUMPI
---
0xbc: JUMPDEST 
0xbd: V64 = CALLVALUE
0xbe: V65 = ISZERO V64
0xbf: V66 = 0xc4
0xc2: JUMPI 0xc4 V65
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc3
[0xc3:0xc3]
---
Predecessors: [0xbc]
Successors: []
---
0xc3 INVALID
---
0xc3: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc4
[0xc4:0xcb]
---
Predecessors: [0xbc]
Successors: [0x2a6]
---
0xc4 JUMPDEST
0xc5 PUSH2 0xa8
0xc8 PUSH2 0x2a6
0xcb JUMP
---
0xc4: JUMPDEST 
0xc5: V67 = 0xa8
0xc8: V68 = 0x2a6
0xcb: JUMP 0x2a6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa8]
Exit stack: [V12, 0xa8]

================================

Block 0xcc
[0xcc:0xdf]
---
Predecessors: []
Successors: []
---
0xcc JUMPDEST
0xcd PUSH1 0x40
0xcf DUP1
0xd0 MLOAD
0xd1 SWAP2
0xd2 ISZERO
0xd3 ISZERO
0xd4 DUP3
0xd5 MSTORE
0xd6 MLOAD
0xd7 SWAP1
0xd8 DUP2
0xd9 SWAP1
0xda SUB
0xdb PUSH1 0x20
0xdd ADD
0xde SWAP1
0xdf RETURN
---
0xcc: JUMPDEST 
0xcd: V69 = 0x40
0xd0: V70 = M[0x40]
0xd2: V71 = ISZERO S0
0xd3: V72 = ISZERO V71
0xd5: M[V70] = V72
0xd6: V73 = M[0x40]
0xda: V74 = SUB V70 V73
0xdb: V75 = 0x20
0xdd: V76 = ADD 0x20 V74
0xdf: RETURN V73 V76
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xe0
[0xe0:0xe7]
---
Predecessors: [0x46]
Successors: [0x35c]
---
0xe0 JUMPDEST
0xe1 PUSH2 0x6e
0xe4 PUSH2 0x35c
0xe7 JUMP
---
0xe0: JUMPDEST 
0xe1: V77 = 0x6e
0xe4: V78 = 0x35c
0xe7: JUMP 0x35c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6e]
Exit stack: [V12, 0x6e]

================================

Block 0xe8
[0xe8:0xe9]
---
Predecessors: []
Successors: []
---
0xe8 JUMPDEST
0xe9 STOP
---
0xe8: JUMPDEST 
0xe9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xea
[0xea:0xf0]
---
Predecessors: [0x51]
Successors: [0xf1, 0xf2]
---
0xea JUMPDEST
0xeb CALLVALUE
0xec ISZERO
0xed PUSH2 0xf2
0xf0 JUMPI
---
0xea: JUMPDEST 
0xeb: V79 = CALLVALUE
0xec: V80 = ISZERO V79
0xed: V81 = 0xf2
0xf0: JUMPI 0xf2 V80
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf1
[0xf1:0xf1]
---
Predecessors: [0xea]
Successors: []
---
0xf1 INVALID
---
0xf1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf2
[0xf2:0xf9]
---
Predecessors: [0xea]
Successors: [0x3cf]
---
0xf2 JUMPDEST
0xf3 PUSH2 0xa8
0xf6 PUSH2 0x3cf
0xf9 JUMP
---
0xf2: JUMPDEST 
0xf3: V82 = 0xa8
0xf6: V83 = 0x3cf
0xf9: JUMP 0x3cf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa8]
Exit stack: [V12, 0xa8]

================================

Block 0xfa
[0xfa:0x10d]
---
Predecessors: []
Successors: []
---
0xfa JUMPDEST
0xfb PUSH1 0x40
0xfd DUP1
0xfe MLOAD
0xff SWAP2
0x100 ISZERO
0x101 ISZERO
0x102 DUP3
0x103 MSTORE
0x104 MLOAD
0x105 SWAP1
0x106 DUP2
0x107 SWAP1
0x108 SUB
0x109 PUSH1 0x20
0x10b ADD
0x10c SWAP1
0x10d RETURN
---
0xfa: JUMPDEST 
0xfb: V84 = 0x40
0xfe: V85 = M[0x40]
0x100: V86 = ISZERO S0
0x101: V87 = ISZERO V86
0x103: M[V85] = V87
0x104: V88 = M[0x40]
0x108: V89 = SUB V85 V88
0x109: V90 = 0x20
0x10b: V91 = ADD 0x20 V89
0x10d: RETURN V88 V91
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x10e
[0x10e:0x124]
---
Predecessors: [0x66]
Successors: [0x125, 0x12a]
---
0x10e JUMPDEST
0x10f PUSH1 0x1
0x111 SLOAD
0x112 CALLER
0x113 PUSH1 0x1
0x115 PUSH1 0xa0
0x117 PUSH1 0x2
0x119 EXP
0x11a SUB
0x11b SWAP1
0x11c DUP2
0x11d AND
0x11e SWAP2
0x11f AND
0x120 EQ
0x121 PUSH2 0x12a
0x124 JUMPI
---
0x10e: JUMPDEST 
0x10f: V92 = 0x1
0x111: V93 = S[0x1]
0x112: V94 = CALLER
0x113: V95 = 0x1
0x115: V96 = 0xa0
0x117: V97 = 0x2
0x119: V98 = EXP 0x2 0xa0
0x11a: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11d: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x11f: V101 = AND V93 0xffffffffffffffffffffffffffffffffffffffff
0x120: V102 = EQ V101 V100
0x121: V103 = 0x12a
0x124: JUMPI 0x12a V102
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x125
[0x125:0x129]
---
Predecessors: [0x10e]
Successors: []
---
0x125 PUSH1 0x0
0x127 PUSH1 0x0
0x129 REVERT
---
0x125: V104 = 0x0
0x127: V105 = 0x0
0x129: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x12a
[0x12a:0x135]
---
Predecessors: [0x10e]
Successors: [0x136, 0x13b]
---
0x12a JUMPDEST
0x12b PUSH1 0x0
0x12d PUSH1 0x2
0x12f SLOAD
0x130 GT
0x131 ISZERO
0x132 PUSH2 0x13b
0x135 JUMPI
---
0x12a: JUMPDEST 
0x12b: V106 = 0x0
0x12d: V107 = 0x2
0x12f: V108 = S[0x2]
0x130: V109 = GT V108 0x0
0x131: V110 = ISZERO V109
0x132: V111 = 0x13b
0x135: JUMPI 0x13b V110
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x136
[0x136:0x13a]
---
Predecessors: [0x12a]
Successors: []
---
0x136 PUSH1 0x0
0x138 PUSH1 0x0
0x13a REVERT
---
0x136: V112 = 0x0
0x138: V113 = 0x0
0x13a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x13b
[0x13b:0x14e]
---
Predecessors: [0x12a]
Successors: [0x14f, 0x179]
---
0x13b JUMPDEST
0x13c PUSH1 0x0
0x13e ADDRESS
0x13f PUSH1 0x1
0x141 PUSH1 0xa0
0x143 PUSH1 0x2
0x145 EXP
0x146 SUB
0x147 AND
0x148 BALANCE
0x149 GT
0x14a ISZERO
0x14b PUSH2 0x179
0x14e JUMPI
---
0x13b: JUMPDEST 
0x13c: V114 = 0x0
0x13e: V115 = ADDRESS
0x13f: V116 = 0x1
0x141: V117 = 0xa0
0x143: V118 = 0x2
0x145: V119 = EXP 0x2 0xa0
0x146: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x147: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x148: V122 = BALANCE V121
0x149: V123 = GT V122 0x0
0x14a: V124 = ISZERO V123
0x14b: V125 = 0x179
0x14e: JUMPI 0x179 V124
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x14f
[0x14f:0x178]
---
Predecessors: [0x13b]
Successors: [0x179]
---
0x14f PUSH1 0x1
0x151 SLOAD
0x152 PUSH1 0x40
0x154 MLOAD
0x155 PUSH1 0x1
0x157 PUSH1 0xa0
0x159 PUSH1 0x2
0x15b EXP
0x15c SUB
0x15d SWAP2
0x15e DUP3
0x15f AND
0x160 SWAP2
0x161 ADDRESS
0x162 AND
0x163 BALANCE
0x164 DUP1
0x165 ISZERO
0x166 PUSH2 0x8fc
0x169 MUL
0x16a SWAP2
0x16b PUSH1 0x0
0x16d DUP2
0x16e DUP2
0x16f DUP2
0x170 DUP6
0x171 DUP9
0x172 DUP9
0x173 CALL
0x174 POP
0x175 POP
0x176 POP
0x177 POP
0x178 POP
---
0x14f: V126 = 0x1
0x151: V127 = S[0x1]
0x152: V128 = 0x40
0x154: V129 = M[0x40]
0x155: V130 = 0x1
0x157: V131 = 0xa0
0x159: V132 = 0x2
0x15b: V133 = EXP 0x2 0xa0
0x15c: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15f: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x161: V136 = ADDRESS
0x162: V137 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x163: V138 = BALANCE V137
0x165: V139 = ISZERO V138
0x166: V140 = 0x8fc
0x169: V141 = MUL 0x8fc V139
0x16b: V142 = 0x0
0x173: V143 = CALL V141 V135 V138 V129 0x0 V129 0x0
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x179
[0x179:0x179]
---
Predecessors: [0x13b, 0x14f]
Successors: [0x17a]
---
0x179 JUMPDEST
---
0x179: JUMPDEST 
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x17a
[0x17a:0x187]
---
Predecessors: [0x179]
Successors: []
---
0x17a JUMPDEST
0x17b PUSH1 0x1
0x17d SLOAD
0x17e PUSH1 0x1
0x180 PUSH1 0xa0
0x182 PUSH1 0x2
0x184 EXP
0x185 SUB
0x186 AND
0x187 SELFDESTRUCT
---
0x17a: JUMPDEST 
0x17b: V144 = 0x1
0x17d: V145 = S[0x1]
0x17e: V146 = 0x1
0x180: V147 = 0xa0
0x182: V148 = 0x2
0x184: V149 = EXP 0x2 0xa0
0x185: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x186: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x187: SELFDESTRUCT V151
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x188
[0x188:0x189]
---
Predecessors: [0x35c]
Successors: [0x6e]
---
0x188 JUMPDEST
0x189 JUMP
---
0x188: JUMPDEST 
0x189: JUMP 0x6e
---
Entry stack: [V12, 0x6e]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x18a
[0x18a:0x197]
---
Predecessors: [0x78, 0x3f0]
Successors: [0x198, 0x19e]
---
0x18a JUMPDEST
0x18b PUSH1 0x2
0x18d SLOAD
0x18e PUSH1 0x0
0x190 DUP2
0x191 GT
0x192 DUP1
0x193 ISZERO
0x194 PUSH2 0x19e
0x197 JUMPI
---
0x18a: JUMPDEST 
0x18b: V152 = 0x2
0x18d: V153 = S[0x2]
0x18e: V154 = 0x0
0x191: V155 = GT V153 0x0
0x193: V156 = ISZERO V155
0x194: V157 = 0x19e
0x197: JUMPI 0x19e V156
---
Entry stack: [V12, 0xa8, 0x0, S2, {0x83, 0x3f9}, S0]
Stack pops: 0
Stack additions: [V153, V155]
Exit stack: [V12, 0xa8, 0x0, S2, {0x83, 0x3f9}, S0, V153, V155]

================================

Block 0x198
[0x198:0x19d]
---
Predecessors: [0x18a]
Successors: [0x19e]
---
0x198 POP
0x199 DUP2
0x19a PUSH1 0x3
0x19c SLOAD
0x19d LT
---
0x19a: V158 = 0x3
0x19c: V159 = S[0x3]
0x19d: V160 = LT V159 S2
---
Entry stack: [V12, 0xa8, 0x0, S4, {0x83, 0x3f9}, S2, V153, V155]
Stack pops: 3
Stack additions: [S2, S1, V160]
Exit stack: [V12, 0xa8, 0x0, S4, {0x83, 0x3f9}, S2, V153, V160]

================================

Block 0x19e
[0x19e:0x1a4]
---
Predecessors: [0x18a, 0x198]
Successors: [0x1a5, 0x1af]
---
0x19e JUMPDEST
0x19f DUP1
0x1a0 ISZERO
0x1a1 PUSH2 0x1af
0x1a4 JUMPI
---
0x19e: JUMPDEST 
0x1a0: V161 = ISZERO S0
0x1a1: V162 = 0x1af
0x1a4: JUMPI 0x1af V161
---
Entry stack: [V12, 0xa8, 0x0, S4, {0x83, 0x3f9}, S2, V153, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xa8, 0x0, S4, {0x83, 0x3f9}, S2, V153, S0]

================================

Block 0x1a5
[0x1a5:0x1ae]
---
Predecessors: [0x19e]
Successors: [0x1af]
---
0x1a5 POP
0x1a6 PUSH1 0x80
0x1a8 PUSH1 0x2
0x1aa EXP
0x1ab PUSH1 0x4
0x1ad SLOAD
0x1ae LT
---
0x1a6: V163 = 0x80
0x1a8: V164 = 0x2
0x1aa: V165 = EXP 0x2 0x80
0x1ab: V166 = 0x4
0x1ad: V167 = S[0x4]
0x1ae: V168 = LT V167 0x100000000000000000000000000000000
---
Entry stack: [V12, 0xa8, 0x0, S4, {0x83, 0x3f9}, S2, V153, S0]
Stack pops: 1
Stack additions: [V168]
Exit stack: [V12, 0xa8, 0x0, S4, {0x83, 0x3f9}, S2, V153, V168]

================================

Block 0x1af
[0x1af:0x1b4]
---
Predecessors: [0x19e, 0x1a5]
Successors: [0x1b5, 0x1d0]
---
0x1af JUMPDEST
0x1b0 ISZERO
0x1b1 PUSH2 0x1d0
0x1b4 JUMPI
---
0x1af: JUMPDEST 
0x1b0: V169 = ISZERO S0
0x1b1: V170 = 0x1d0
0x1b4: JUMPI 0x1d0 V169
---
Entry stack: [V12, 0xa8, 0x0, S4, {0x83, 0x3f9}, S2, V153, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa8, 0x0, S4, {0x83, 0x3f9}, S2, V153]

================================

Block 0x1b5
[0x1b5:0x1c7]
---
Predecessors: [0x1af]
Successors: [0x44a]
---
0x1b5 PUSH2 0x1cd
0x1b8 DUP2
0x1b9 PUSH2 0x1c8
0x1bc PUSH1 0x4
0x1be SLOAD
0x1bf PUSH1 0x3
0x1c1 SLOAD
0x1c2 DUP7
0x1c3 SUB
0x1c4 PUSH2 0x44a
0x1c7 JUMP
---
0x1b5: V171 = 0x1cd
0x1b9: V172 = 0x1c8
0x1bc: V173 = 0x4
0x1be: V174 = S[0x4]
0x1bf: V175 = 0x3
0x1c1: V176 = S[0x3]
0x1c3: V177 = SUB S1 V176
0x1c4: V178 = 0x44a
0x1c7: JUMP 0x44a
---
Entry stack: [V12, 0xa8, 0x0, S3, {0x83, 0x3f9}, S1, V153]
Stack pops: 2
Stack additions: [S1, S0, 0x1cd, S0, 0x1c8, V174, V177]
Exit stack: [V12, 0xa8, 0x0, S3, {0x83, 0x3f9}, S1, V153, 0x1cd, V153, 0x1c8, V174, V177]

================================

Block 0x1c8
[0x1c8:0x1cc]
---
Predecessors: [0x1d1, 0x4a7]
Successors: [0x4ad]
---
0x1c8 JUMPDEST
0x1c9 PUSH2 0x4ad
0x1cc JUMP
---
0x1c8: JUMPDEST 
0x1c9: V179 = 0x4ad
0x1cc: JUMP 0x4ad
---
Entry stack: [V12, 0xa8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1cd
[0x1cd:0x1cf]
---
Predecessors: [0x446, 0x4ef]
Successors: [0x1d0]
---
0x1cd JUMPDEST
0x1ce SWAP1
0x1cf POP
---
0x1cd: JUMPDEST 
---
Entry stack: [V12, 0xa8, S11, S10, S9, S8, S7, {0xa8, 0x1cd, 0x539}, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xa8, S11, S10, S9, S8, S7, {0xa8, 0x1cd, 0x539}, S5, S4, S3, S2, S0]

================================

Block 0x1d0
[0x1d0:0x1d0]
---
Predecessors: [0x1af, 0x1cd, 0x23b, 0x27e, 0x28b, 0x293, 0x298]
Successors: [0x1d1]
---
0x1d0 JUMPDEST
---
0x1d0: JUMPDEST 
---
Entry stack: [V12, 0xa8, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1d1
[0x1d1:0x1d5]
---
Predecessors: [0x1d0]
Successors: [0x83, 0xa8, 0x1c8, 0x3f9]
---
0x1d1 JUMPDEST
0x1d2 SWAP2
0x1d3 SWAP1
0x1d4 POP
0x1d5 JUMP
---
0x1d1: JUMPDEST 
0x1d5: JUMP S2
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S5, S4, S3, S0]

================================

Block 0x1d6
[0x1d6:0x1ed]
---
Predecessors: [0x9d]
Successors: [0x1ee, 0x1f3]
---
0x1d6 JUMPDEST
0x1d7 PUSH1 0x0
0x1d9 DUP1
0x1da SLOAD
0x1db CALLER
0x1dc PUSH1 0x1
0x1de PUSH1 0xa0
0x1e0 PUSH1 0x2
0x1e2 EXP
0x1e3 SUB
0x1e4 SWAP1
0x1e5 DUP2
0x1e6 AND
0x1e7 SWAP2
0x1e8 AND
0x1e9 EQ
0x1ea PUSH2 0x1f3
0x1ed JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V180 = 0x0
0x1da: V181 = S[0x0]
0x1db: V182 = CALLER
0x1dc: V183 = 0x1
0x1de: V184 = 0xa0
0x1e0: V185 = 0x2
0x1e2: V186 = EXP 0x2 0xa0
0x1e3: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e6: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x1e8: V189 = AND V181 0xffffffffffffffffffffffffffffffffffffffff
0x1e9: V190 = EQ V189 V188
0x1ea: V191 = 0x1f3
0x1ed: JUMPI 0x1f3 V190
---
Entry stack: [V12, 0xa8, V54]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xa8, V54, 0x0]

================================

Block 0x1ee
[0x1ee:0x1f2]
---
Predecessors: [0x1d6]
Successors: []
---
0x1ee PUSH1 0x0
0x1f0 PUSH1 0x0
0x1f2 REVERT
---
0x1ee: V192 = 0x0
0x1f0: V193 = 0x0
0x1f2: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa8, V54, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, V54, 0x0]

================================

Block 0x1f3
[0x1f3:0x1fc]
---
Predecessors: [0x1d6]
Successors: [0x1fd, 0x298]
---
0x1f3 JUMPDEST
0x1f4 PUSH1 0x0
0x1f6 DUP3
0x1f7 GT
0x1f8 ISZERO
0x1f9 PUSH2 0x298
0x1fc JUMPI
---
0x1f3: JUMPDEST 
0x1f4: V194 = 0x0
0x1f7: V195 = GT V54 0x0
0x1f8: V196 = ISZERO V195
0x1f9: V197 = 0x298
0x1fc: JUMPI 0x298 V196
---
Entry stack: [V12, 0xa8, V54, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xa8, V54, 0x0]

================================

Block 0x1fd
[0x1fd:0x203]
---
Predecessors: [0x1f3]
Successors: [0x4f5]
---
0x1fd PUSH2 0x204
0x200 PUSH2 0x4f5
0x203 JUMP
---
0x1fd: V198 = 0x204
0x200: V199 = 0x4f5
0x203: JUMP 0x4f5
---
Entry stack: [V12, 0xa8, V54, 0x0]
Stack pops: 0
Stack additions: [0x204]
Exit stack: [V12, 0xa8, V54, 0x0, 0x204]

================================

Block 0x204
[0x204:0x20d]
---
Predecessors: [0x542]
Successors: [0x20e, 0x27e]
---
0x204 JUMPDEST
0x205 PUSH1 0x2
0x207 SLOAD
0x208 DUP3
0x209 GT
0x20a PUSH2 0x27e
0x20d JUMPI
---
0x204: JUMPDEST 
0x205: V200 = 0x2
0x207: V201 = S[0x2]
0x209: V202 = GT S1 V201
0x20a: V203 = 0x27e
0x20d: JUMPI 0x27e V202
---
Entry stack: [V12, 0xa8, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xa8, S3, S2, S1, S0]

================================

Block 0x20e
[0x20e:0x23a]
---
Predecessors: [0x204]
Successors: [0x23b, 0x27e]
---
0x20e PUSH1 0x0
0x210 DUP1
0x211 SLOAD
0x212 PUSH1 0x40
0x214 MLOAD
0x215 PUSH1 0x1
0x217 PUSH1 0xa0
0x219 PUSH1 0x2
0x21b EXP
0x21c SUB
0x21d SWAP1
0x21e SWAP2
0x21f AND
0x220 SWAP2
0x221 DUP5
0x222 ISZERO
0x223 PUSH2 0x8fc
0x226 MUL
0x227 SWAP2
0x228 DUP6
0x229 SWAP2
0x22a DUP2
0x22b DUP2
0x22c DUP2
0x22d DUP6
0x22e DUP9
0x22f DUP9
0x230 CALL
0x231 SWAP4
0x232 POP
0x233 POP
0x234 POP
0x235 POP
0x236 ISZERO
0x237 PUSH2 0x27e
0x23a JUMPI
---
0x20e: V204 = 0x0
0x211: V205 = S[0x0]
0x212: V206 = 0x40
0x214: V207 = M[0x40]
0x215: V208 = 0x1
0x217: V209 = 0xa0
0x219: V210 = 0x2
0x21b: V211 = EXP 0x2 0xa0
0x21c: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21f: V213 = AND V205 0xffffffffffffffffffffffffffffffffffffffff
0x222: V214 = ISZERO S1
0x223: V215 = 0x8fc
0x226: V216 = MUL 0x8fc V214
0x230: V217 = CALL V216 V213 S1 V207 0x0 V207 0x0
0x236: V218 = ISZERO V217
0x237: V219 = 0x27e
0x23a: JUMPI 0x27e V218
---
Entry stack: [V12, 0xa8, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xa8, S3, S2, S1, S0]

================================

Block 0x23b
[0x23b:0x27d]
---
Predecessors: [0x20e]
Successors: [0x1d0]
---
0x23b PUSH1 0x40
0x23d DUP1
0x23e MLOAD
0x23f DUP4
0x240 DUP2
0x241 MSTORE
0x242 SWAP1
0x243 MLOAD
0x244 PUSH32 0x4e70a604b23a8edee2b1d0a656e9b9c00b73ad8bb1afc2c59381ee9f69197de7
0x265 SWAP2
0x266 DUP2
0x267 SWAP1
0x268 SUB
0x269 PUSH1 0x20
0x26b ADD
0x26c SWAP1
0x26d LOG1
0x26e POP
0x26f PUSH1 0x2
0x271 DUP1
0x272 SLOAD
0x273 DUP3
0x274 SWAP1
0x275 SUB
0x276 SWAP1
0x277 SSTORE
0x278 PUSH1 0x1
0x27a PUSH2 0x1d0
0x27d JUMP
---
0x23b: V220 = 0x40
0x23e: V221 = M[0x40]
0x241: M[V221] = S1
0x243: V222 = M[0x40]
0x244: V223 = 0x4e70a604b23a8edee2b1d0a656e9b9c00b73ad8bb1afc2c59381ee9f69197de7
0x268: V224 = SUB V221 V222
0x269: V225 = 0x20
0x26b: V226 = ADD 0x20 V224
0x26d: LOG V222 V226 0x4e70a604b23a8edee2b1d0a656e9b9c00b73ad8bb1afc2c59381ee9f69197de7
0x26f: V227 = 0x2
0x272: V228 = S[0x2]
0x275: V229 = SUB V228 S1
0x277: S[0x2] = V229
0x278: V230 = 0x1
0x27a: V231 = 0x1d0
0x27d: JUMP 0x1d0
---
Entry stack: [V12, 0xa8, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0xa8, S3, S2, S1, 0x1]

================================

Block 0x27e
[0x27e:0x285]
---
Predecessors: [0x204, 0x20e]
Successors: [0x1d0]
---
0x27e JUMPDEST
0x27f POP
0x280 PUSH1 0x0
0x282 PUSH2 0x1d0
0x285 JUMP
---
0x27e: JUMPDEST 
0x280: V232 = 0x0
0x282: V233 = 0x1d0
0x285: JUMP 0x1d0
---
Entry stack: [V12, 0xa8, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0xa8, S3, S2, S1, 0x0]

================================

Block 0x286
[0x286:0x28a]
---
Predecessors: []
Successors: [0x293]
---
0x286 JUMPDEST
0x287 PUSH2 0x293
0x28a JUMP
---
0x286: JUMPDEST 
0x287: V234 = 0x293
0x28a: JUMP 0x293
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x28b
[0x28b:0x292]
---
Predecessors: []
Successors: [0x1d0]
---
0x28b JUMPDEST
0x28c POP
0x28d PUSH1 0x0
0x28f PUSH2 0x1d0
0x292 JUMP
---
0x28b: JUMPDEST 
0x28d: V235 = 0x0
0x28f: V236 = 0x1d0
0x292: JUMP 0x1d0
---
Entry stack: []
Stack pops: 1
Stack additions: [0x0]
Exit stack: [0x0]

================================

Block 0x293
[0x293:0x297]
---
Predecessors: [0x286]
Successors: [0x1d0]
---
0x293 JUMPDEST
0x294 PUSH2 0x1d0
0x297 JUMP
---
0x293: JUMPDEST 
0x294: V237 = 0x1d0
0x297: JUMP 0x1d0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x298
[0x298:0x29f]
---
Predecessors: [0x1f3]
Successors: [0x1d0]
---
0x298 JUMPDEST
0x299 POP
0x29a PUSH1 0x1
0x29c PUSH2 0x1d0
0x29f JUMP
---
0x298: JUMPDEST 
0x29a: V238 = 0x1
0x29c: V239 = 0x1d0
0x29f: JUMP 0x1d0
---
Entry stack: [V12, 0xa8, V54, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0xa8, V54, 0x1]

================================

Block 0x2a0
[0x2a0:0x2a0]
---
Predecessors: []
Successors: [0x2a1]
---
0x2a0 JUMPDEST
---
0x2a0: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2a1
[0x2a1:0x2a5]
---
Predecessors: [0x2a0]
Successors: []
Has unresolved jump.
---
0x2a1 JUMPDEST
0x2a2 SWAP2
0x2a3 SWAP1
0x2a4 POP
0x2a5 JUMP
---
0x2a1: JUMPDEST 
0x2a5: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x2a6
[0x2a6:0x2bd]
---
Predecessors: [0xc4]
Successors: [0x2be, 0x2c3]
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x0
0x2a9 DUP1
0x2aa SLOAD
0x2ab CALLER
0x2ac PUSH1 0x1
0x2ae PUSH1 0xa0
0x2b0 PUSH1 0x2
0x2b2 EXP
0x2b3 SUB
0x2b4 SWAP1
0x2b5 DUP2
0x2b6 AND
0x2b7 SWAP2
0x2b8 AND
0x2b9 EQ
0x2ba PUSH2 0x2c3
0x2bd JUMPI
---
0x2a6: JUMPDEST 
0x2a7: V240 = 0x0
0x2aa: V241 = S[0x0]
0x2ab: V242 = CALLER
0x2ac: V243 = 0x1
0x2ae: V244 = 0xa0
0x2b0: V245 = 0x2
0x2b2: V246 = EXP 0x2 0xa0
0x2b3: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b6: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x2b8: V249 = AND V241 0xffffffffffffffffffffffffffffffffffffffff
0x2b9: V250 = EQ V249 V248
0x2ba: V251 = 0x2c3
0x2bd: JUMPI 0x2c3 V250
---
Entry stack: [V12, 0xa8]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xa8, 0x0]

================================

Block 0x2be
[0x2be:0x2c2]
---
Predecessors: [0x2a6]
Successors: []
---
0x2be PUSH1 0x0
0x2c0 PUSH1 0x0
0x2c2 REVERT
---
0x2be: V252 = 0x0
0x2c0: V253 = 0x0
0x2c2: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, 0x0]

================================

Block 0x2c3
[0x2c3:0x2ca]
---
Predecessors: [0x2a6]
Successors: [0x4f5]
---
0x2c3 JUMPDEST
0x2c4 PUSH2 0x2cb
0x2c7 PUSH2 0x4f5
0x2ca JUMP
---
0x2c3: JUMPDEST 
0x2c4: V254 = 0x2cb
0x2c7: V255 = 0x4f5
0x2ca: JUMP 0x4f5
---
Entry stack: [V12, 0xa8, 0x0]
Stack pops: 0
Stack additions: [0x2cb]
Exit stack: [V12, 0xa8, 0x0, 0x2cb]

================================

Block 0x2cb
[0x2cb:0x2d6]
---
Predecessors: [0x542]
Successors: [0x2d7, 0x354]
---
0x2cb JUMPDEST
0x2cc PUSH1 0x0
0x2ce PUSH1 0x2
0x2d0 SLOAD
0x2d1 GT
0x2d2 ISZERO
0x2d3 PUSH2 0x354
0x2d6 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V256 = 0x0
0x2ce: V257 = 0x2
0x2d0: V258 = S[0x2]
0x2d1: V259 = GT V258 0x0
0x2d2: V260 = ISZERO V259
0x2d3: V261 = 0x354
0x2d6: JUMPI 0x354 V260
---
Entry stack: [V12, 0xa8, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, S3, S2, S1, S0]

================================

Block 0x2d7
[0x2d7:0x305]
---
Predecessors: [0x2cb]
Successors: [0x306, 0x347]
---
0x2d7 PUSH1 0x0
0x2d9 DUP1
0x2da SLOAD
0x2db PUSH1 0x2
0x2dd SLOAD
0x2de PUSH1 0x40
0x2e0 MLOAD
0x2e1 PUSH1 0x1
0x2e3 PUSH1 0xa0
0x2e5 PUSH1 0x2
0x2e7 EXP
0x2e8 SUB
0x2e9 SWAP1
0x2ea SWAP3
0x2eb AND
0x2ec SWAP3
0x2ed DUP2
0x2ee ISZERO
0x2ef PUSH2 0x8fc
0x2f2 MUL
0x2f3 SWAP3
0x2f4 SWAP1
0x2f5 DUP2
0x2f6 DUP2
0x2f7 DUP2
0x2f8 DUP6
0x2f9 DUP9
0x2fa DUP9
0x2fb CALL
0x2fc SWAP4
0x2fd POP
0x2fe POP
0x2ff POP
0x300 POP
0x301 ISZERO
0x302 PUSH2 0x347
0x305 JUMPI
---
0x2d7: V262 = 0x0
0x2da: V263 = S[0x0]
0x2db: V264 = 0x2
0x2dd: V265 = S[0x2]
0x2de: V266 = 0x40
0x2e0: V267 = M[0x40]
0x2e1: V268 = 0x1
0x2e3: V269 = 0xa0
0x2e5: V270 = 0x2
0x2e7: V271 = EXP 0x2 0xa0
0x2e8: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2eb: V273 = AND V263 0xffffffffffffffffffffffffffffffffffffffff
0x2ee: V274 = ISZERO V265
0x2ef: V275 = 0x8fc
0x2f2: V276 = MUL 0x8fc V274
0x2fb: V277 = CALL V276 V273 V265 V267 0x0 V267 0x0
0x301: V278 = ISZERO V277
0x302: V279 = 0x347
0x305: JUMPI 0x347 V278
---
Entry stack: [V12, 0xa8, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, S3, S2, S1, S0]

================================

Block 0x306
[0x306:0x346]
---
Predecessors: [0x2d7]
Successors: [0x358]
---
0x306 PUSH1 0x2
0x308 SLOAD
0x309 PUSH1 0x40
0x30b DUP1
0x30c MLOAD
0x30d SWAP2
0x30e DUP3
0x30f MSTORE
0x310 MLOAD
0x311 PUSH32 0x4e70a604b23a8edee2b1d0a656e9b9c00b73ad8bb1afc2c59381ee9f69197de7
0x332 SWAP2
0x333 DUP2
0x334 SWAP1
0x335 SUB
0x336 PUSH1 0x20
0x338 ADD
0x339 SWAP1
0x33a LOG1
0x33b POP
0x33c PUSH1 0x0
0x33e PUSH1 0x2
0x340 SSTORE
0x341 PUSH1 0x1
0x343 PUSH2 0x358
0x346 JUMP
---
0x306: V280 = 0x2
0x308: V281 = S[0x2]
0x309: V282 = 0x40
0x30c: V283 = M[0x40]
0x30f: M[V283] = V281
0x310: V284 = M[0x40]
0x311: V285 = 0x4e70a604b23a8edee2b1d0a656e9b9c00b73ad8bb1afc2c59381ee9f69197de7
0x335: V286 = SUB V283 V284
0x336: V287 = 0x20
0x338: V288 = ADD 0x20 V286
0x33a: LOG V284 V288 0x4e70a604b23a8edee2b1d0a656e9b9c00b73ad8bb1afc2c59381ee9f69197de7
0x33c: V289 = 0x0
0x33e: V290 = 0x2
0x340: S[0x2] = 0x0
0x341: V291 = 0x1
0x343: V292 = 0x358
0x346: JUMP 0x358
---
Entry stack: [V12, 0xa8, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0xa8, S3, S2, S1, 0x1]

================================

Block 0x347
[0x347:0x34e]
---
Predecessors: [0x2d7]
Successors: [0x358]
---
0x347 JUMPDEST
0x348 POP
0x349 PUSH1 0x0
0x34b PUSH2 0x358
0x34e JUMP
---
0x347: JUMPDEST 
0x349: V293 = 0x0
0x34b: V294 = 0x358
0x34e: JUMP 0x358
---
Entry stack: [V12, 0xa8, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0xa8, S3, S2, S1, 0x0]

================================

Block 0x34f
[0x34f:0x353]
---
Predecessors: []
Successors: [0x358]
---
0x34f JUMPDEST
0x350 PUSH2 0x358
0x353 JUMP
---
0x34f: JUMPDEST 
0x350: V295 = 0x358
0x353: JUMP 0x358
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x354
[0x354:0x357]
---
Predecessors: [0x2cb]
Successors: [0x358]
---
0x354 JUMPDEST
0x355 POP
0x356 PUSH1 0x1
---
0x354: JUMPDEST 
0x356: V296 = 0x1
---
Entry stack: [V12, 0xa8, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0xa8, S3, S2, S1, 0x1]

================================

Block 0x358
[0x358:0x358]
---
Predecessors: [0x306, 0x347, 0x34f, 0x354]
Successors: [0x359]
---
0x358 JUMPDEST
---
0x358: JUMPDEST 
---
Entry stack: [V12, 0xa8, S3, S2, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, S3, S2, S1, {0x0, 0x1}]

================================

Block 0x359
[0x359:0x35b]
---
Predecessors: [0x358]
Successors: [0x83, 0xa8, 0x3f9]
---
0x359 JUMPDEST
0x35a SWAP1
0x35b JUMP
---
0x359: JUMPDEST 
0x35b: JUMP S1
---
Entry stack: [V12, 0xa8, S3, S2, S1, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xa8, S3, S2, {0x0, 0x1}]

================================

Block 0x35c
[0x35c:0x365]
---
Predecessors: [0xe0]
Successors: [0x188, 0x366]
---
0x35c JUMPDEST
0x35d PUSH1 0x0
0x35f CALLVALUE
0x360 GT
0x361 ISZERO
0x362 PUSH2 0x188
0x365 JUMPI
---
0x35c: JUMPDEST 
0x35d: V297 = 0x0
0x35f: V298 = CALLVALUE
0x360: V299 = GT V298 0x0
0x361: V300 = ISZERO V299
0x362: V301 = 0x188
0x365: JUMPI 0x188 V300
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x366
[0x366:0x36c]
---
Predecessors: [0x35c]
Successors: [0x4f5]
---
0x366 PUSH2 0x36d
0x369 PUSH2 0x4f5
0x36c JUMP
---
0x366: V302 = 0x36d
0x369: V303 = 0x4f5
0x36c: JUMP 0x4f5
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: [0x36d]
Exit stack: [V12, 0x6e, 0x36d]

================================

Block 0x36d
[0x36d:0x37c]
---
Predecessors: [0x542]
Successors: [0x37d, 0x382]
---
0x36d JUMPDEST
0x36e PUSH1 0x2
0x370 SLOAD
0x371 PUSH1 0x80
0x373 PUSH1 0x2
0x375 EXP
0x376 SUB
0x377 CALLVALUE
0x378 LT
0x379 PUSH2 0x382
0x37c JUMPI
---
0x36d: JUMPDEST 
0x36e: V304 = 0x2
0x370: V305 = S[0x2]
0x371: V306 = 0x80
0x373: V307 = 0x2
0x375: V308 = EXP 0x2 0x80
0x376: V309 = SUB 0x100000000000000000000000000000000 V305
0x377: V310 = CALLVALUE
0x378: V311 = LT V310 V309
0x379: V312 = 0x382
0x37c: JUMPI 0x382 V311
---
Entry stack: [V12, 0xa8, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, S3, S2, S1, S0]

================================

Block 0x37d
[0x37d:0x381]
---
Predecessors: [0x36d]
Successors: []
---
0x37d PUSH1 0x0
0x37f PUSH1 0x0
0x381 REVERT
---
0x37d: V313 = 0x0
0x37f: V314 = 0x0
0x381: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa8, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, S3, S2, S1, S0]

================================

Block 0x382
[0x382:0x3cb]
---
Predecessors: [0x36d]
Successors: [0x3cc]
---
0x382 JUMPDEST
0x383 PUSH1 0x2
0x385 DUP1
0x386 SLOAD
0x387 CALLVALUE
0x388 SWAP1
0x389 DUP2
0x38a ADD
0x38b SWAP1
0x38c SWAP2
0x38d SSTORE
0x38e PUSH1 0x40
0x390 DUP1
0x391 MLOAD
0x392 SWAP2
0x393 DUP3
0x394 MSTORE
0x395 MLOAD
0x396 PUSH1 0x1
0x398 PUSH1 0xa0
0x39a PUSH1 0x2
0x39c EXP
0x39d SUB
0x39e CALLER
0x39f AND
0x3a0 SWAP2
0x3a1 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x3c2 SWAP2
0x3c3 SWAP1
0x3c4 DUP2
0x3c5 SWAP1
0x3c6 SUB
0x3c7 PUSH1 0x20
0x3c9 ADD
0x3ca SWAP1
0x3cb LOG2
---
0x382: JUMPDEST 
0x383: V315 = 0x2
0x386: V316 = S[0x2]
0x387: V317 = CALLVALUE
0x38a: V318 = ADD V317 V316
0x38d: S[0x2] = V318
0x38e: V319 = 0x40
0x391: V320 = M[0x40]
0x394: M[V320] = V317
0x395: V321 = M[0x40]
0x396: V322 = 0x1
0x398: V323 = 0xa0
0x39a: V324 = 0x2
0x39c: V325 = EXP 0x2 0xa0
0x39d: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39e: V327 = CALLER
0x39f: V328 = AND V327 0xffffffffffffffffffffffffffffffffffffffff
0x3a1: V329 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x3c6: V330 = SUB V320 V321
0x3c7: V331 = 0x20
0x3c9: V332 = ADD 0x20 V330
0x3cb: LOG V321 V332 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V328
---
Entry stack: [V12, 0xa8, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, S3, S2, S1, S0]

================================

Block 0x3cc
[0x3cc:0x3cc]
---
Predecessors: [0x382]
Successors: [0x3cd]
---
0x3cc JUMPDEST
---
0x3cc: JUMPDEST 
---
Entry stack: [V12, 0xa8, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, S3, S2, S1, S0]

================================

Block 0x3cd
[0x3cd:0x3ce]
---
Predecessors: [0x3cc]
Successors: [0x6e]
---
0x3cd JUMPDEST
0x3ce JUMP
---
0x3cd: JUMPDEST 
0x3ce: JUMP S0
---
Entry stack: [V12, 0xa8, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa8, S3, S2, S1]

================================

Block 0x3cf
[0x3cf:0x3ea]
---
Predecessors: [0xf2]
Successors: [0x3eb, 0x3f0]
---
0x3cf JUMPDEST
0x3d0 PUSH1 0x1
0x3d2 SLOAD
0x3d3 PUSH1 0x0
0x3d5 SWAP1
0x3d6 DUP2
0x3d7 SWAP1
0x3d8 CALLER
0x3d9 PUSH1 0x1
0x3db PUSH1 0xa0
0x3dd PUSH1 0x2
0x3df EXP
0x3e0 SUB
0x3e1 SWAP1
0x3e2 DUP2
0x3e3 AND
0x3e4 SWAP2
0x3e5 AND
0x3e6 EQ
0x3e7 PUSH2 0x3f0
0x3ea JUMPI
---
0x3cf: JUMPDEST 
0x3d0: V333 = 0x1
0x3d2: V334 = S[0x1]
0x3d3: V335 = 0x0
0x3d8: V336 = CALLER
0x3d9: V337 = 0x1
0x3db: V338 = 0xa0
0x3dd: V339 = 0x2
0x3df: V340 = EXP 0x2 0xa0
0x3e0: V341 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e3: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x3e5: V343 = AND V334 0xffffffffffffffffffffffffffffffffffffffff
0x3e6: V344 = EQ V343 V342
0x3e7: V345 = 0x3f0
0x3ea: JUMPI 0x3f0 V344
---
Entry stack: [V12, 0xa8]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0xa8, 0x0, 0x0]

================================

Block 0x3eb
[0x3eb:0x3ef]
---
Predecessors: [0x3cf]
Successors: []
---
0x3eb PUSH1 0x0
0x3ed PUSH1 0x0
0x3ef REVERT
---
0x3eb: V346 = 0x0
0x3ed: V347 = 0x0
0x3ef: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa8, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, 0x0, 0x0]

================================

Block 0x3f0
[0x3f0:0x3f8]
---
Predecessors: [0x3cf]
Successors: [0x18a]
---
0x3f0 JUMPDEST
0x3f1 PUSH2 0x3f9
0x3f4 TIMESTAMP
0x3f5 PUSH2 0x18a
0x3f8 JUMP
---
0x3f0: JUMPDEST 
0x3f1: V348 = 0x3f9
0x3f4: V349 = TIMESTAMP
0x3f5: V350 = 0x18a
0x3f8: JUMP 0x18a
---
Entry stack: [V12, 0xa8, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3f9, V349]
Exit stack: [V12, 0xa8, 0x0, 0x0, 0x3f9, V349]

================================

Block 0x3f9
[0x3f9:0x410]
---
Predecessors: [0x1d1, 0x359]
Successors: [0x411, 0x440]
---
0x3f9 JUMPDEST
0x3fa ADDRESS
0x3fb PUSH1 0x1
0x3fd PUSH1 0xa0
0x3ff PUSH1 0x2
0x401 EXP
0x402 SUB
0x403 AND
0x404 BALANCE
0x405 SUB
0x406 SWAP1
0x407 POP
0x408 PUSH1 0x0
0x40a DUP2
0x40b GT
0x40c ISZERO
0x40d PUSH2 0x440
0x410 JUMPI
---
0x3f9: JUMPDEST 
0x3fa: V351 = ADDRESS
0x3fb: V352 = 0x1
0x3fd: V353 = 0xa0
0x3ff: V354 = 0x2
0x401: V355 = EXP 0x2 0xa0
0x402: V356 = SUB 0x10000000000000000000000000000000000000000 0x1
0x403: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x404: V358 = BALANCE V357
0x405: V359 = SUB V358 S0
0x408: V360 = 0x0
0x40b: V361 = GT V359 0x0
0x40c: V362 = ISZERO V361
0x40d: V363 = 0x440
0x410: JUMPI 0x440 V362
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V359]
Exit stack: [V12, S3, S2, V359]

================================

Block 0x411
[0x411:0x43f]
---
Predecessors: [0x3f9]
Successors: [0x445]
---
0x411 PUSH1 0x1
0x413 SLOAD
0x414 PUSH1 0x40
0x416 MLOAD
0x417 PUSH1 0x1
0x419 PUSH1 0xa0
0x41b PUSH1 0x2
0x41d EXP
0x41e SUB
0x41f SWAP1
0x420 SWAP2
0x421 AND
0x422 SWAP1
0x423 DUP3
0x424 ISZERO
0x425 PUSH2 0x8fc
0x428 MUL
0x429 SWAP1
0x42a DUP4
0x42b SWAP1
0x42c PUSH1 0x0
0x42e DUP2
0x42f DUP2
0x430 DUP2
0x431 DUP6
0x432 DUP9
0x433 DUP9
0x434 CALL
0x435 SWAP4
0x436 POP
0x437 POP
0x438 POP
0x439 POP
0x43a SWAP2
0x43b POP
0x43c PUSH2 0x445
0x43f JUMP
---
0x411: V364 = 0x1
0x413: V365 = S[0x1]
0x414: V366 = 0x40
0x416: V367 = M[0x40]
0x417: V368 = 0x1
0x419: V369 = 0xa0
0x41b: V370 = 0x2
0x41d: V371 = EXP 0x2 0xa0
0x41e: V372 = SUB 0x10000000000000000000000000000000000000000 0x1
0x421: V373 = AND V365 0xffffffffffffffffffffffffffffffffffffffff
0x424: V374 = ISZERO V359
0x425: V375 = 0x8fc
0x428: V376 = MUL 0x8fc V374
0x42c: V377 = 0x0
0x434: V378 = CALL V376 V373 V359 V367 0x0 V367 0x0
0x43c: V379 = 0x445
0x43f: JUMP 0x445
---
Entry stack: [V12, S2, S1, V359]
Stack pops: 2
Stack additions: [V378, S0]
Exit stack: [V12, S2, V378, V359]

================================

Block 0x440
[0x440:0x444]
---
Predecessors: [0x3f9]
Successors: [0x445]
---
0x440 JUMPDEST
0x441 PUSH1 0x1
0x443 SWAP2
0x444 POP
---
0x440: JUMPDEST 
0x441: V380 = 0x1
---
Entry stack: [V12, S2, S1, V359]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V12, S2, 0x1, V359]

================================

Block 0x445
[0x445:0x445]
---
Predecessors: [0x411, 0x440]
Successors: [0x446]
---
0x445 JUMPDEST
---
0x445: JUMPDEST 
---
Entry stack: [V12, S2, S1, V359]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, V359]

================================

Block 0x446
[0x446:0x449]
---
Predecessors: [0x445]
Successors: [0xa8, 0x1cd, 0x539]
---
0x446 JUMPDEST
0x447 POP
0x448 SWAP1
0x449 JUMP
---
0x446: JUMPDEST 
0x449: JUMP S2
---
Entry stack: [V12, S2, S1, V359]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, S1]

================================

Block 0x44a
[0x44a:0x457]
---
Predecessors: [0x1b5, 0x51f]
Successors: [0x458, 0x45d]
---
0x44a JUMPDEST
0x44b PUSH1 0x0
0x44d PUSH1 0x80
0x44f PUSH1 0x2
0x451 EXP
0x452 DUP4
0x453 LT
0x454 PUSH2 0x45d
0x457 JUMPI
---
0x44a: JUMPDEST 
0x44b: V381 = 0x0
0x44d: V382 = 0x80
0x44f: V383 = 0x2
0x451: V384 = EXP 0x2 0x80
0x453: V385 = LT S1 0x100000000000000000000000000000000
0x454: V386 = 0x45d
0x457: JUMPI 0x45d V385
---
Entry stack: [V12, 0xa8, S9, S8, S7, S6, S5, {0x1cd, 0x539}, S3, 0x1c8, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, 0xa8, S9, S8, S7, S6, S5, {0x1cd, 0x539}, S3, 0x1c8, S1, S0, 0x0]

================================

Block 0x458
[0x458:0x45c]
---
Predecessors: [0x44a]
Successors: []
---
0x458 PUSH1 0x0
0x45a PUSH1 0x0
0x45c REVERT
---
0x458: V387 = 0x0
0x45a: V388 = 0x0
0x45c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0x1cd, 0x539}, S4, 0x1c8, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0x1cd, 0x539}, S4, 0x1c8, S2, S1, 0x0]

================================

Block 0x45d
[0x45d:0x463]
---
Predecessors: [0x44a]
Successors: [0x464]
---
0x45d JUMPDEST
0x45e POP
0x45f PUSH1 0x80
0x461 PUSH1 0x2
0x463 EXP
---
0x45d: JUMPDEST 
0x45f: V389 = 0x80
0x461: V390 = 0x2
0x463: V391 = EXP 0x2 0x80
---
Entry stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0x1cd, 0x539}, S4, 0x1c8, S2, S1, 0x0]
Stack pops: 1
Stack additions: [0x100000000000000000000000000000000]
Exit stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0x1cd, 0x539}, S4, 0x1c8, S2, S1, 0x100000000000000000000000000000000]

================================

Block 0x464
[0x464:0x46d]
---
Predecessors: [0x45d, 0x4a1]
Successors: [0x46e, 0x4a6]
---
0x464 JUMPDEST
0x465 PUSH1 0x0
0x467 DUP3
0x468 GT
0x469 ISZERO
0x46a PUSH2 0x4a6
0x46d JUMPI
---
0x464: JUMPDEST 
0x465: V392 = 0x0
0x468: V393 = GT S1 0x0
0x469: V394 = ISZERO V393
0x46a: V395 = 0x4a6
0x46d: JUMPI 0x4a6 V394
---
Entry stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0xa8, 0x1cd, 0x539}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0xa8, 0x1cd, 0x539}, S4, S3, S2, S1, S0]

================================

Block 0x46e
[0x46e:0x477]
---
Predecessors: [0x464]
Successors: [0x478, 0x48e]
---
0x46e PUSH1 0x1
0x470 DUP3
0x471 AND
0x472 ISZERO
0x473 ISZERO
0x474 PUSH2 0x48e
0x477 JUMPI
---
0x46e: V396 = 0x1
0x471: V397 = AND S1 0x1
0x472: V398 = ISZERO V397
0x473: V399 = ISZERO V398
0x474: V400 = 0x48e
0x477: JUMPI 0x48e V399
---
Entry stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0x1cd, 0x539}, S4, 0x1c8, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0x1cd, 0x539}, S4, 0x1c8, S2, S1, S0]

================================

Block 0x478
[0x478:0x480]
---
Predecessors: [0x46e]
Successors: [0x4ad]
---
0x478 PUSH2 0x481
0x47b DUP4
0x47c DUP5
0x47d PUSH2 0x4ad
0x480 JUMP
---
0x478: V401 = 0x481
0x47d: V402 = 0x4ad
0x480: JUMP 0x4ad
---
Entry stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0x1cd, 0x539}, S4, 0x1c8, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x481, S2, S2]
Exit stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0x1cd, 0x539}, S4, 0x1c8, S2, S1, S0, 0x481, S2, S2]

================================

Block 0x481
[0x481:0x48d]
---
Predecessors: [0x4ef]
Successors: [0x4a1]
---
0x481 JUMPDEST
0x482 SWAP3
0x483 POP
0x484 PUSH1 0x2
0x486 SWAP1
0x487 SWAP2
0x488 DIV
0x489 SWAP1
0x48a PUSH2 0x4a1
0x48d JUMP
---
0x481: JUMPDEST 
0x484: V403 = 0x2
0x488: V404 = DIV S2 0x2
0x48a: V405 = 0x4a1
0x48d: JUMP 0x4a1
---
Entry stack: [V12, 0xa8, S11, S10, S9, S8, S7, {0xa8, 0x1cd, 0x539}, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0, V404, S1]
Exit stack: [V12, 0xa8, S11, S10, S9, S8, S7, {0xa8, 0x1cd, 0x539}, S5, S4, S0, V404, S1]

================================

Block 0x48e
[0x48e:0x497]
---
Predecessors: [0x46e]
Successors: [0x4ad]
---
0x48e JUMPDEST
0x48f PUSH2 0x498
0x492 DUP2
0x493 DUP5
0x494 PUSH2 0x4ad
0x497 JUMP
---
0x48e: JUMPDEST 
0x48f: V406 = 0x498
0x494: V407 = 0x4ad
0x497: JUMP 0x4ad
---
Entry stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0x1cd, 0x539}, S4, 0x1c8, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x498, S0, S2]
Exit stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0x1cd, 0x539}, S4, 0x1c8, S2, S1, S0, 0x498, S0, S2]

================================

Block 0x498
[0x498:0x4a0]
---
Predecessors: [0x4ef]
Successors: [0x4a1]
---
0x498 JUMPDEST
0x499 SWAP1
0x49a POP
0x49b PUSH1 0x1
0x49d DUP3
0x49e SUB
0x49f SWAP2
0x4a0 POP
---
0x498: JUMPDEST 
0x49b: V408 = 0x1
0x49e: V409 = SUB S2 0x1
---
Entry stack: [V12, 0xa8, S11, S10, S9, S8, S7, {0xa8, 0x1cd, 0x539}, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V409, S0]
Exit stack: [V12, 0xa8, S11, S10, S9, S8, S7, {0xa8, 0x1cd, 0x539}, S5, S4, S3, V409, S0]

================================

Block 0x4a1
[0x4a1:0x4a5]
---
Predecessors: [0x481, 0x498]
Successors: [0x464]
---
0x4a1 JUMPDEST
0x4a2 PUSH2 0x464
0x4a5 JUMP
---
0x4a1: JUMPDEST 
0x4a2: V410 = 0x464
0x4a5: JUMP 0x464
---
Entry stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0xa8, 0x1cd, 0x539}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0xa8, 0x1cd, 0x539}, S4, S3, S2, S1, S0]

================================

Block 0x4a6
[0x4a6:0x4a6]
---
Predecessors: [0x464]
Successors: [0x4a7]
---
0x4a6 JUMPDEST
---
0x4a6: JUMPDEST 
---
Entry stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0x1cd, 0x539}, S4, 0x1c8, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0x1cd, 0x539}, S4, 0x1c8, S2, S1, S0]

================================

Block 0x4a7
[0x4a7:0x4ac]
---
Predecessors: [0x4a6]
Successors: [0x1c8]
---
0x4a7 JUMPDEST
0x4a8 SWAP3
0x4a9 SWAP2
0x4aa POP
0x4ab POP
0x4ac JUMP
---
0x4a7: JUMPDEST 
0x4ac: JUMP 0x1c8
---
Entry stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0x1cd, 0x539}, S4, 0x1c8, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0x1cd, 0x539}, S4, S0]

================================

Block 0x4ad
[0x4ad:0x4bb]
---
Predecessors: [0x1c8, 0x478, 0x48e, 0x534]
Successors: [0x4bc, 0x4c1]
---
0x4ad JUMPDEST
0x4ae PUSH1 0x0
0x4b0 PUSH1 0x80
0x4b2 PUSH1 0x2
0x4b4 EXP
0x4b5 DUP4
0x4b6 GT
0x4b7 ISZERO
0x4b8 PUSH2 0x4c1
0x4bb JUMPI
---
0x4ad: JUMPDEST 
0x4ae: V411 = 0x0
0x4b0: V412 = 0x80
0x4b2: V413 = 0x2
0x4b4: V414 = EXP 0x2 0x80
0x4b6: V415 = GT S1 0x100000000000000000000000000000000
0x4b7: V416 = ISZERO V415
0x4b8: V417 = 0x4c1
0x4bb: JUMPI 0x4c1 V416
---
Entry stack: [V12, 0xa8, S13, S12, S11, S10, S9, {0xa8, 0x1cd, 0x539}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, 0xa8, S13, S12, S11, S10, S9, {0xa8, 0x1cd, 0x539}, S7, S6, S5, S4, S3, S2, S1, S0, 0x0]

================================

Block 0x4bc
[0x4bc:0x4c0]
---
Predecessors: [0x4ad]
Successors: []
---
0x4bc PUSH1 0x0
0x4be PUSH1 0x0
0x4c0 REVERT
---
0x4bc: V418 = 0x0
0x4be: V419 = 0x0
0x4c0: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa8, S14, S13, S12, S11, S10, {0xa8, 0x1cd, 0x539}, S8, S7, S6, S5, S4, {0x1cd, 0x481, 0x498, 0x539}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, S14, S13, S12, S11, S10, {0xa8, 0x1cd, 0x539}, S8, S7, S6, S5, S4, {0x1cd, 0x481, 0x498, 0x539}, S2, S1, 0x0]

================================

Block 0x4c1
[0x4c1:0x4cc]
---
Predecessors: [0x4ad]
Successors: [0x4cd, 0x4d2]
---
0x4c1 JUMPDEST
0x4c2 PUSH1 0x80
0x4c4 PUSH1 0x2
0x4c6 EXP
0x4c7 DUP3
0x4c8 LT
0x4c9 PUSH2 0x4d2
0x4cc JUMPI
---
0x4c1: JUMPDEST 
0x4c2: V420 = 0x80
0x4c4: V421 = 0x2
0x4c6: V422 = EXP 0x2 0x80
0x4c8: V423 = LT S1 0x100000000000000000000000000000000
0x4c9: V424 = 0x4d2
0x4cc: JUMPI 0x4d2 V423
---
Entry stack: [V12, 0xa8, S14, S13, S12, S11, S10, {0xa8, 0x1cd, 0x539}, S8, S7, S6, S5, S4, {0x1cd, 0x481, 0x498, 0x539}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xa8, S14, S13, S12, S11, S10, {0xa8, 0x1cd, 0x539}, S8, S7, S6, S5, S4, {0x1cd, 0x481, 0x498, 0x539}, S2, S1, 0x0]

================================

Block 0x4cd
[0x4cd:0x4d1]
---
Predecessors: [0x4c1]
Successors: []
---
0x4cd PUSH1 0x0
0x4cf PUSH1 0x0
0x4d1 REVERT
---
0x4cd: V425 = 0x0
0x4cf: V426 = 0x0
0x4d1: REVERT 0x0 0x0
---
Entry stack: [V12, 0xa8, S14, S13, S12, S11, S10, {0xa8, 0x1cd, 0x539}, S8, S7, S6, S5, S4, {0x1cd, 0x481, 0x498, 0x539}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, S14, S13, S12, S11, S10, {0xa8, 0x1cd, 0x539}, S8, S7, S6, S5, S4, {0x1cd, 0x481, 0x498, 0x539}, S2, S1, 0x0]

================================

Block 0x4d2
[0x4d2:0x4ee]
---
Predecessors: [0x4c1]
Successors: [0x4ef]
---
0x4d2 JUMPDEST
0x4d3 POP
0x4d4 PUSH1 0x80
0x4d6 PUSH1 0x2
0x4d8 EXP
0x4d9 DUP3
0x4da DUP3
0x4db MUL
0x4dc PUSH16 0x80000000000000000000000000000000
0x4ed ADD
0x4ee DIV
---
0x4d2: JUMPDEST 
0x4d4: V427 = 0x80
0x4d6: V428 = 0x2
0x4d8: V429 = EXP 0x2 0x80
0x4db: V430 = MUL S1 S2
0x4dc: V431 = 0x80000000000000000000000000000000
0x4ed: V432 = ADD 0x80000000000000000000000000000000 V430
0x4ee: V433 = DIV V432 0x100000000000000000000000000000000
---
Entry stack: [V12, 0xa8, S14, S13, S12, S11, S10, {0xa8, 0x1cd, 0x539}, S8, S7, S6, S5, S4, {0x1cd, 0x481, 0x498, 0x539}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V433]
Exit stack: [V12, 0xa8, S14, S13, S12, S11, S10, {0xa8, 0x1cd, 0x539}, S8, S7, S6, S5, S4, {0x1cd, 0x481, 0x498, 0x539}, S2, S1, V433]

================================

Block 0x4ef
[0x4ef:0x4f4]
---
Predecessors: [0x4d2]
Successors: [0xa8, 0x1cd, 0x481, 0x498, 0x539]
---
0x4ef JUMPDEST
0x4f0 SWAP3
0x4f1 SWAP2
0x4f2 POP
0x4f3 POP
0x4f4 JUMP
---
0x4ef: JUMPDEST 
0x4f4: JUMP {0x1cd, 0x481, 0x498, 0x539}
---
Entry stack: [V12, 0xa8, S14, S13, S12, S11, S10, {0xa8, 0x1cd, 0x539}, S8, S7, S6, S5, S4, {0x1cd, 0x481, 0x498, 0x539}, S2, S1, V433]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0xa8, S14, S13, S12, S11, S10, {0xa8, 0x1cd, 0x539}, S8, S7, S6, S5, S4, V433]

================================

Block 0x4f5
[0x4f5:0x501]
---
Predecessors: [0x1fd, 0x2c3, 0x366]
Successors: [0x502, 0x508]
---
0x4f5 JUMPDEST
0x4f6 PUSH1 0x0
0x4f8 PUSH1 0x2
0x4fa SLOAD
0x4fb GT
0x4fc DUP1
0x4fd ISZERO
0x4fe PUSH2 0x508
0x501 JUMPI
---
0x4f5: JUMPDEST 
0x4f6: V434 = 0x0
0x4f8: V435 = 0x2
0x4fa: V436 = S[0x2]
0x4fb: V437 = GT V436 0x0
0x4fd: V438 = ISZERO V437
0x4fe: V439 = 0x508
0x501: JUMPI 0x508 V438
---
Entry stack: [V12, S3, S2, {0x0, 0x6e}, {0x204, 0x2cb, 0x36d}]
Stack pops: 0
Stack additions: [V437]
Exit stack: [V12, S3, S2, {0x0, 0x6e}, {0x204, 0x2cb, 0x36d}, V437]

================================

Block 0x502
[0x502:0x507]
---
Predecessors: [0x4f5]
Successors: [0x508]
---
0x502 POP
0x503 TIMESTAMP
0x504 PUSH1 0x3
0x506 SLOAD
0x507 LT
---
0x503: V440 = TIMESTAMP
0x504: V441 = 0x3
0x506: V442 = S[0x3]
0x507: V443 = LT V442 V440
---
Entry stack: [V12, S4, S3, {0x0, 0x6e}, {0x204, 0x2cb, 0x36d}, V437]
Stack pops: 1
Stack additions: [V443]
Exit stack: [V12, S4, S3, {0x0, 0x6e}, {0x204, 0x2cb, 0x36d}, V443]

================================

Block 0x508
[0x508:0x50e]
---
Predecessors: [0x4f5, 0x502]
Successors: [0x50f, 0x519]
---
0x508 JUMPDEST
0x509 DUP1
0x50a ISZERO
0x50b PUSH2 0x519
0x50e JUMPI
---
0x508: JUMPDEST 
0x50a: V444 = ISZERO S0
0x50b: V445 = 0x519
0x50e: JUMPI 0x519 V444
---
Entry stack: [V12, S4, S3, {0x0, 0x6e}, {0x204, 0x2cb, 0x36d}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S4, S3, {0x0, 0x6e}, {0x204, 0x2cb, 0x36d}, S0]

================================

Block 0x50f
[0x50f:0x518]
---
Predecessors: [0x508]
Successors: [0x519]
---
0x50f POP
0x510 PUSH1 0x80
0x512 PUSH1 0x2
0x514 EXP
0x515 PUSH1 0x4
0x517 SLOAD
0x518 LT
---
0x510: V446 = 0x80
0x512: V447 = 0x2
0x514: V448 = EXP 0x2 0x80
0x515: V449 = 0x4
0x517: V450 = S[0x4]
0x518: V451 = LT V450 0x100000000000000000000000000000000
---
Entry stack: [V12, S4, S3, {0x0, 0x6e}, {0x204, 0x2cb, 0x36d}, S0]
Stack pops: 1
Stack additions: [V451]
Exit stack: [V12, S4, S3, {0x0, 0x6e}, {0x204, 0x2cb, 0x36d}, V451]

================================

Block 0x519
[0x519:0x51e]
---
Predecessors: [0x508, 0x50f]
Successors: [0x51f, 0x53d]
---
0x519 JUMPDEST
0x51a ISZERO
0x51b PUSH2 0x53d
0x51e JUMPI
---
0x519: JUMPDEST 
0x51a: V452 = ISZERO S0
0x51b: V453 = 0x53d
0x51e: JUMPI 0x53d V452
---
Entry stack: [V12, S4, S3, {0x0, 0x6e}, {0x204, 0x2cb, 0x36d}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S4, S3, {0x0, 0x6e}, {0x204, 0x2cb, 0x36d}]

================================

Block 0x51f
[0x51f:0x533]
---
Predecessors: [0x519]
Successors: [0x44a]
---
0x51f PUSH2 0x539
0x522 PUSH1 0x2
0x524 SLOAD
0x525 PUSH2 0x1c8
0x528 PUSH1 0x4
0x52a SLOAD
0x52b PUSH1 0x3
0x52d SLOAD
0x52e TIMESTAMP
0x52f SUB
0x530 PUSH2 0x44a
0x533 JUMP
---
0x51f: V454 = 0x539
0x522: V455 = 0x2
0x524: V456 = S[0x2]
0x525: V457 = 0x1c8
0x528: V458 = 0x4
0x52a: V459 = S[0x4]
0x52b: V460 = 0x3
0x52d: V461 = S[0x3]
0x52e: V462 = TIMESTAMP
0x52f: V463 = SUB V462 V461
0x530: V464 = 0x44a
0x533: JUMP 0x44a
---
Entry stack: [V12, S3, S2, {0x0, 0x6e}, {0x204, 0x2cb, 0x36d}]
Stack pops: 0
Stack additions: [0x539, V456, 0x1c8, V459, V463]
Exit stack: [V12, S3, S2, {0x0, 0x6e}, {0x204, 0x2cb, 0x36d}, 0x539, V456, 0x1c8, V459, V463]

================================

Block 0x534
[0x534:0x538]
---
Predecessors: []
Successors: [0x4ad]
---
0x534 JUMPDEST
0x535 PUSH2 0x4ad
0x538 JUMP
---
0x534: JUMPDEST 
0x535: V465 = 0x4ad
0x538: JUMP 0x4ad
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x539
[0x539:0x53c]
---
Predecessors: [0x446, 0x4ef]
Successors: [0x53d]
---
0x539 JUMPDEST
0x53a PUSH1 0x2
0x53c SSTORE
---
0x539: JUMPDEST 
0x53a: V466 = 0x2
0x53c: S[0x2] = S0
---
Entry stack: [V12, 0xa8, S11, S10, S9, S8, S7, {0xa8, 0x1cd, 0x539}, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa8, S11, S10, S9, S8, S7, {0xa8, 0x1cd, 0x539}, S5, S4, S3, S2, S1]

================================

Block 0x53d
[0x53d:0x541]
---
Predecessors: [0x519, 0x539]
Successors: [0x542]
---
0x53d JUMPDEST
0x53e TIMESTAMP
0x53f PUSH1 0x3
0x541 SSTORE
---
0x53d: JUMPDEST 
0x53e: V467 = TIMESTAMP
0x53f: V468 = 0x3
0x541: S[0x3] = V467
---
Entry stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0xa8, 0x1cd, 0x539}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa8, S10, S9, S8, S7, S6, {0xa8, 0x1cd, 0x539}, S4, S3, S2, S1, S0]

================================

Block 0x542
[0x542:0x543]
---
Predecessors: [0x53d]
Successors: [0x204, 0x2cb, 0x36d]
---
0x542 JUMPDEST
0x543 JUMP
---
0x542: JUMPDEST 
0x543: JUMP S0
---
Entry stack: [V12, 0xa8, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa8, S4, S3, S2, S1]

================================

Block 0x544
[0x544:0x56f]
---
Predecessors: []
Successors: []
---
0x544 STOP
0x545 LOG1
0x546 PUSH6 0x627a7a723058
0x54d SHA3
0x54e MISSING 0x22
0x54f MISSING 0x2c
0x550 SWAP6
0x551 CALL
0x552 LOG4
0x553 SWAP15
0x554 MISSING 0x5c
0x555 MISSING 0xc8
0x556 PUSH8 0xb0613bc9c82590d3
0x55f DUP16
0x560 LOG3
0x561 MISSING 0x27
0x562 MISSING 0x2e
0x563 MISSING 0xd7
0x564 MISSING 0xb6
0x565 BALANCE
0x566 SWAP16
0x567 MISSING 0x2a
0x568 SELFDESTRUCT
0x569 MISSING 0xfc
0x56a DIV
0x56b MISSING 0xb9
0x56c MISSING 0xb5
0x56d SELFDESTRUCT
0x56e STOP
0x56f MISSING 0x29
---
0x544: STOP 
0x545: LOG S0 S1 S2
0x546: V469 = 0x627a7a723058
0x54d: V470 = SHA3 0x627a7a723058 S3
0x54e: MISSING 0x22
0x54f: MISSING 0x2c
0x551: V471 = CALL S6 S1 S2 S3 S4 S5 S0
0x552: LOG V471 S7 S8 S9 S10 S11
0x554: MISSING 0x5c
0x555: MISSING 0xc8
0x556: V472 = 0xb0613bc9c82590d3
0x560: LOG S14 0xb0613bc9c82590d3 S0 S1 S2
0x561: MISSING 0x27
0x562: MISSING 0x2e
0x563: MISSING 0xd7
0x564: MISSING 0xb6
0x565: V473 = BALANCE S0
0x567: MISSING 0x2a
0x568: SELFDESTRUCT S0
0x569: MISSING 0xfc
0x56a: V474 = DIV S0 S1
0x56b: MISSING 0xb9
0x56c: MISSING 0xb5
0x56d: SELFDESTRUCT S0
0x56e: STOP 
0x56f: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V470, S27, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S12, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V473, V474]
Exit stack: []

================================

Function 0:
Public function signature: 0xc08bf88
Entry block: 0x5e
Exit block: 0x17a
Body: 0x5e, 0x65, 0x66, 0x10e, 0x125, 0x12a, 0x136, 0x13b, 0x14f, 0x179, 0x17a

Function 1:
Public function signature: 0x29560980
Entry block: 0x70
Exit block: 0x83
Body: 0x70, 0x77, 0x78, 0x83

Function 2:
Public function signature: 0x2e1a7d4d
Entry block: 0x95
Exit block: 0x6e
Body: 0x6e, 0x95, 0x9c, 0x9d, 0x1d6, 0x1ee, 0x1f3, 0x1fd, 0x204, 0x298

Function 3:
Public function signature: 0x853828b6
Entry block: 0xbc
Exit block: 0x6e
Body: 0x6e, 0xbc, 0xc3, 0xc4, 0x2a6, 0x2be, 0x2c3, 0x2cb

Function 4:
Public function signature: 0xd0e30db0
Entry block: 0xe0
Exit block: 0x6e
Body: 0x6e, 0xe0, 0x188, 0x35c, 0x366, 0x36d, 0x37d, 0x382, 0x3cc, 0x3cd

Function 5:
Public function signature: 0xe941fa78
Entry block: 0xea
Exit block: 0x6e
Body: 0x6e, 0xea, 0xf1, 0xf2, 0x3cf, 0x3eb, 0x3f0, 0x3f9

Function 6:
Public fallback function
Entry block: 0x5c
Exit block: 0x5c
Body: 0x5c

Function 7:
Private function
Entry block: 0x44a
Exit block: 0x4a7
Body: 0x1cd, 0x1d0, 0x1d1, 0x204, 0x20e, 0x23b, 0x27e, 0x2cb, 0x2d7, 0x306, 0x347, 0x354, 0x358, 0x359, 0x3f9, 0x411, 0x440, 0x445, 0x446, 0x44a, 0x45d, 0x464, 0x46e, 0x478, 0x481, 0x48e, 0x498, 0x4a1, 0x4a6, 0x4a7, 0x4ad, 0x4c1, 0x4d2, 0x4ef, 0x539, 0x53d, 0x542

Function 8:
Private function
Entry block: 0x4f5
Exit block: 0x542
Body: 0x1c8, 0x1cd, 0x1d0, 0x1d1, 0x3f9, 0x411, 0x440, 0x445, 0x446, 0x464, 0x46e, 0x478, 0x481, 0x48e, 0x498, 0x4a1, 0x4a6, 0x4a7, 0x4ad, 0x4c1, 0x4d2, 0x4ef, 0x4f5, 0x502, 0x508, 0x50f, 0x519, 0x51f, 0x539, 0x53d, 0x542

Function 9:
Private function
Entry block: 0x18a
Exit block: 0x359
Body: 0x18a, 0x198, 0x19e, 0x1a5, 0x1af, 0x1b5, 0x1c8, 0x1cd, 0x1d0, 0x1d1, 0x204, 0x20e, 0x23b, 0x27e, 0x2cb, 0x2d7, 0x306, 0x347, 0x354, 0x358, 0x359, 0x464, 0x46e, 0x478, 0x481, 0x48e, 0x498, 0x4a1, 0x4a6, 0x4a7, 0x4ad, 0x4c1, 0x4d2, 0x4ef, 0x539, 0x53d, 0x542

