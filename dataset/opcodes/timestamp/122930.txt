Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x164]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x164
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x164
0xa: JUMPI 0x164 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x7d7]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x7d7
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x7d7
0x24: JUMPI 0x7d7 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x7ec]
---
0x25 DUP1
0x26 PUSH4 0x10309781
0x2b EQ
0x2c PUSH2 0x7ec
0x2f JUMPI
---
0x26: V16 = 0x10309781
0x2b: V17 = EQ 0x10309781 V12
0x2c: V18 = 0x7ec
0x2f: JUMPI 0x7ec V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x811]
---
0x30 DUP1
0x31 PUSH4 0x1fd8ffb0
0x36 EQ
0x37 PUSH2 0x811
0x3a JUMPI
---
0x31: V19 = 0x1fd8ffb0
0x36: V20 = EQ 0x1fd8ffb0 V12
0x37: V21 = 0x811
0x3a: JUMPI 0x811 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x829]
---
0x3b DUP1
0x3c PUSH4 0x29dcb0cf
0x41 EQ
0x42 PUSH2 0x829
0x45 JUMPI
---
0x3c: V22 = 0x29dcb0cf
0x41: V23 = EQ 0x29dcb0cf V12
0x42: V24 = 0x829
0x45: JUMPI 0x829 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x84e]
---
0x46 DUP1
0x47 PUSH4 0x2ec914b5
0x4c EQ
0x4d PUSH2 0x84e
0x50 JUMPI
---
0x47: V25 = 0x2ec914b5
0x4c: V26 = EQ 0x2ec914b5 V12
0x4d: V27 = 0x84e
0x50: JUMPI 0x84e V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x873]
---
0x51 DUP1
0x52 PUSH4 0x31252103
0x57 EQ
0x58 PUSH2 0x873
0x5b JUMPI
---
0x52: V28 = 0x31252103
0x57: V29 = EQ 0x31252103 V12
0x58: V30 = 0x873
0x5b: JUMPI 0x873 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x898]
---
0x5c DUP1
0x5d PUSH4 0x38af3eed
0x62 EQ
0x63 PUSH2 0x898
0x66 JUMPI
---
0x5d: V31 = 0x38af3eed
0x62: V32 = EQ 0x38af3eed V12
0x63: V33 = 0x898
0x66: JUMPI 0x898 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x8c7]
---
0x67 DUP1
0x68 PUSH4 0x3b41ddba
0x6d EQ
0x6e PUSH2 0x8c7
0x71 JUMPI
---
0x68: V34 = 0x3b41ddba
0x6d: V35 = EQ 0x3b41ddba V12
0x6e: V36 = 0x8c7
0x71: JUMPI 0x8c7 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x8ec]
---
0x72 DUP1
0x73 PUSH4 0x4c95f5d0
0x78 EQ
0x79 PUSH2 0x8ec
0x7c JUMPI
---
0x73: V37 = 0x4c95f5d0
0x78: V38 = EQ 0x4c95f5d0 V12
0x79: V39 = 0x8ec
0x7c: JUMPI 0x8ec V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x911]
---
0x7d DUP1
0x7e PUSH4 0x4fa34075
0x83 EQ
0x84 PUSH2 0x911
0x87 JUMPI
---
0x7e: V40 = 0x4fa34075
0x83: V41 = EQ 0x4fa34075 V12
0x84: V42 = 0x911
0x87: JUMPI 0x911 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x926]
---
0x88 DUP1
0x89 PUSH4 0x5a0254e2
0x8e EQ
0x8f PUSH2 0x926
0x92 JUMPI
---
0x89: V43 = 0x5a0254e2
0x8e: V44 = EQ 0x5a0254e2 V12
0x8f: V45 = 0x926
0x92: JUMPI 0x926 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x955]
---
0x93 DUP1
0x94 PUSH4 0x5b54d2d6
0x99 EQ
0x9a PUSH2 0x955
0x9d JUMPI
---
0x94: V46 = 0x5b54d2d6
0x99: V47 = EQ 0x5b54d2d6 V12
0x9a: V48 = 0x955
0x9d: JUMPI 0x955 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x97c]
---
0x9e DUP1
0x9f PUSH4 0x6e66f6e9
0xa4 EQ
0xa5 PUSH2 0x97c
0xa8 JUMPI
---
0x9f: V49 = 0x6e66f6e9
0xa4: V50 = EQ 0x6e66f6e9 V12
0xa5: V51 = 0x97c
0xa8: JUMPI 0x97c V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x9ab]
---
0xa9 DUP1
0xaa PUSH4 0x70a08231
0xaf EQ
0xb0 PUSH2 0x9ab
0xb3 JUMPI
---
0xaa: V52 = 0x70a08231
0xaf: V53 = EQ 0x70a08231 V12
0xb0: V54 = 0x9ab
0xb3: JUMPI 0x9ab V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x9dc]
---
0xb4 DUP1
0xb5 PUSH4 0x7a3a0e84
0xba EQ
0xbb PUSH2 0x9dc
0xbe JUMPI
---
0xb5: V55 = 0x7a3a0e84
0xba: V56 = EQ 0x7a3a0e84 V12
0xbb: V57 = 0x9dc
0xbe: JUMPI 0x9dc V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0xa01]
---
0xbf DUP1
0xc0 PUSH4 0x7b3e5e7b
0xc5 EQ
0xc6 PUSH2 0xa01
0xc9 JUMPI
---
0xc0: V58 = 0x7b3e5e7b
0xc5: V59 = EQ 0x7b3e5e7b V12
0xc6: V60 = 0xa01
0xc9: JUMPI 0xa01 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0xa26]
---
0xca DUP1
0xcb PUSH4 0x7c24ce7d
0xd0 EQ
0xd1 PUSH2 0xa26
0xd4 JUMPI
---
0xcb: V61 = 0x7c24ce7d
0xd0: V62 = EQ 0x7c24ce7d V12
0xd1: V63 = 0xa26
0xd4: JUMPI 0xa26 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0xa4b]
---
0xd5 DUP1
0xd6 PUSH4 0x827037db
0xdb EQ
0xdc PUSH2 0xa4b
0xdf JUMPI
---
0xd6: V64 = 0x827037db
0xdb: V65 = EQ 0x827037db V12
0xdc: V66 = 0xa4b
0xdf: JUMPI 0xa4b V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0xa70]
---
0xe0 DUP1
0xe1 PUSH4 0x89e66aea
0xe6 EQ
0xe7 PUSH2 0xa70
0xea JUMPI
---
0xe1: V67 = 0x89e66aea
0xe6: V68 = EQ 0x89e66aea V12
0xe7: V69 = 0xa70
0xea: JUMPI 0xa70 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0xa95]
---
0xeb DUP1
0xec PUSH4 0x8f48399a
0xf1 EQ
0xf2 PUSH2 0xa95
0xf5 JUMPI
---
0xec: V70 = 0x8f48399a
0xf1: V71 = EQ 0x8f48399a V12
0xf2: V72 = 0xa95
0xf5: JUMPI 0xa95 V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0xaba]
---
0xf6 DUP1
0xf7 PUSH4 0x92dcc41c
0xfc EQ
0xfd PUSH2 0xaba
0x100 JUMPI
---
0xf7: V73 = 0x92dcc41c
0xfc: V74 = EQ 0x92dcc41c V12
0xfd: V75 = 0xaba
0x100: JUMPI 0xaba V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0xadf]
---
0x101 DUP1
0x102 PUSH4 0x998936b0
0x107 EQ
0x108 PUSH2 0xadf
0x10b JUMPI
---
0x102: V76 = 0x998936b0
0x107: V77 = EQ 0x998936b0 V12
0x108: V78 = 0xadf
0x10b: JUMPI 0xadf V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x116]
---
Predecessors: [0x101]
Successors: [0x117, 0xaf4]
---
0x10c DUP1
0x10d PUSH4 0xa02d55a3
0x112 EQ
0x113 PUSH2 0xaf4
0x116 JUMPI
---
0x10d: V79 = 0xa02d55a3
0x112: V80 = EQ 0xa02d55a3 V12
0x113: V81 = 0xaf4
0x116: JUMPI 0xaf4 V80
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x117
[0x117:0x121]
---
Predecessors: [0x10c]
Successors: [0x122, 0xb09]
---
0x117 DUP1
0x118 PUSH4 0xa8a75b78
0x11d EQ
0x11e PUSH2 0xb09
0x121 JUMPI
---
0x118: V82 = 0xa8a75b78
0x11d: V83 = EQ 0xa8a75b78 V12
0x11e: V84 = 0xb09
0x121: JUMPI 0xb09 V83
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x122
[0x122:0x12c]
---
Predecessors: [0x117]
Successors: [0x12d, 0xb2e]
---
0x122 DUP1
0x123 PUSH4 0xace38f8c
0x128 EQ
0x129 PUSH2 0xb2e
0x12c JUMPI
---
0x123: V85 = 0xace38f8c
0x128: V86 = EQ 0xace38f8c V12
0x129: V87 = 0xb2e
0x12c: JUMPI 0xb2e V86
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x12d
[0x12d:0x137]
---
Predecessors: [0x122]
Successors: [0x138, 0xb53]
---
0x12d DUP1
0x12e PUSH4 0xaff29802
0x133 EQ
0x134 PUSH2 0xb53
0x137 JUMPI
---
0x12e: V88 = 0xaff29802
0x133: V89 = EQ 0xaff29802 V12
0x134: V90 = 0xb53
0x137: JUMPI 0xb53 V89
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x138
[0x138:0x142]
---
Predecessors: [0x12d]
Successors: [0x143, 0xb78]
---
0x138 DUP1
0x139 PUSH4 0xccb07cef
0x13e EQ
0x13f PUSH2 0xb78
0x142 JUMPI
---
0x139: V91 = 0xccb07cef
0x13e: V92 = EQ 0xccb07cef V12
0x13f: V93 = 0xb78
0x142: JUMPI 0xb78 V92
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x143
[0x143:0x14d]
---
Predecessors: [0x138]
Successors: [0x14e, 0xb9f]
---
0x143 DUP1
0x144 PUSH4 0xd424f628
0x149 EQ
0x14a PUSH2 0xb9f
0x14d JUMPI
---
0x144: V94 = 0xd424f628
0x149: V95 = EQ 0xd424f628 V12
0x14a: V96 = 0xb9f
0x14d: JUMPI 0xb9f V95
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x14e
[0x14e:0x158]
---
Predecessors: [0x143]
Successors: [0x159, 0xbc6]
---
0x14e DUP1
0x14f PUSH4 0xdcd22c9b
0x154 EQ
0x155 PUSH2 0xbc6
0x158 JUMPI
---
0x14f: V97 = 0xdcd22c9b
0x154: V98 = EQ 0xdcd22c9b V12
0x155: V99 = 0xbc6
0x158: JUMPI 0xbc6 V98
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x159
[0x159:0x163]
---
Predecessors: [0x14e]
Successors: [0x164, 0xbdb]
---
0x159 DUP1
0x15a PUSH4 0xfd6b7ef8
0x15f EQ
0x160 PUSH2 0xbdb
0x163 JUMPI
---
0x15a: V100 = 0xfd6b7ef8
0x15f: V101 = EQ 0xfd6b7ef8 V12
0x160: V102 = 0xbdb
0x163: JUMPI 0xbdb V101
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x164
[0x164:0x164]
---
Predecessors: [0x0, 0x159]
Successors: [0x165]
---
0x164 JUMPDEST
---
0x164: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x165
[0x165:0x178]
---
Predecessors: [0x164]
Successors: [0x179, 0x17d]
---
0x165 JUMPDEST
0x166 PUSH1 0x14
0x168 SLOAD
0x169 PUSH1 0x0
0x16b SWAP1
0x16c PUSH2 0x100
0x16f SWAP1
0x170 DIV
0x171 PUSH1 0xff
0x173 AND
0x174 ISZERO
0x175 PUSH2 0x17d
0x178 JUMPI
---
0x165: JUMPDEST 
0x166: V103 = 0x14
0x168: V104 = S[0x14]
0x169: V105 = 0x0
0x16c: V106 = 0x100
0x170: V107 = DIV V104 0x100
0x171: V108 = 0xff
0x173: V109 = AND 0xff V107
0x174: V110 = ISZERO V109
0x175: V111 = 0x17d
0x178: JUMPI 0x17d V110
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x0]

================================

Block 0x179
[0x179:0x17c]
---
Predecessors: [0x165]
Successors: []
---
0x179 PUSH1 0x0
0x17b DUP1
0x17c REVERT
---
0x179: V112 = 0x0
0x17c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0x17d
[0x17d:0x1b1]
---
Predecessors: [0x165]
Successors: [0x1b2, 0x613]
---
0x17d JUMPDEST
0x17e POP
0x17f PUSH1 0x1
0x181 PUSH1 0xa0
0x183 PUSH1 0x2
0x185 EXP
0x186 SUB
0x187 CALLER
0x188 AND
0x189 PUSH1 0x0
0x18b SWAP1
0x18c DUP2
0x18d MSTORE
0x18e PUSH1 0x13
0x190 PUSH1 0x20
0x192 MSTORE
0x193 PUSH1 0x40
0x195 SWAP1
0x196 SHA3
0x197 DUP1
0x198 SLOAD
0x199 CALLVALUE
0x19a SWAP1
0x19b DUP2
0x19c ADD
0x19d SWAP1
0x19e SWAP2
0x19f SSTORE
0x1a0 PUSH1 0x8
0x1a2 DUP1
0x1a3 SLOAD
0x1a4 DUP3
0x1a5 ADD
0x1a6 SWAP1
0x1a7 SSTORE
0x1a8 PUSH1 0x1
0x1aa SLOAD
0x1ab TIMESTAMP
0x1ac LT
0x1ad ISZERO
0x1ae PUSH2 0x613
0x1b1 JUMPI
---
0x17d: JUMPDEST 
0x17f: V113 = 0x1
0x181: V114 = 0xa0
0x183: V115 = 0x2
0x185: V116 = EXP 0x2 0xa0
0x186: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x187: V118 = CALLER
0x188: V119 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x189: V120 = 0x0
0x18d: M[0x0] = V119
0x18e: V121 = 0x13
0x190: V122 = 0x20
0x192: M[0x20] = 0x13
0x193: V123 = 0x40
0x196: V124 = SHA3 0x0 0x40
0x198: V125 = S[V124]
0x199: V126 = CALLVALUE
0x19c: V127 = ADD V126 V125
0x19f: S[V124] = V127
0x1a0: V128 = 0x8
0x1a3: V129 = S[0x8]
0x1a5: V130 = ADD V126 V129
0x1a7: S[0x8] = V130
0x1a8: V131 = 0x1
0x1aa: V132 = S[0x1]
0x1ab: V133 = TIMESTAMP
0x1ac: V134 = LT V133 V132
0x1ad: V135 = ISZERO V134
0x1ae: V136 = 0x613
0x1b1: JUMPI 0x613 V135
---
Entry stack: [V12, 0x0]
Stack pops: 1
Stack additions: [V126]
Exit stack: [V12, V126]

================================

Block 0x1b2
[0x1b2:0x1c0]
---
Predecessors: [0x17d]
Successors: [0x1c1, 0x27a]
---
0x1b2 PUSH7 0x470de4df820000
0x1ba DUP2
0x1bb LT
0x1bc ISZERO
0x1bd PUSH2 0x27a
0x1c0 JUMPI
---
0x1b2: V137 = 0x470de4df820000
0x1bb: V138 = LT V126 0x470de4df820000
0x1bc: V139 = ISZERO V138
0x1bd: V140 = 0x27a
0x1c0: JUMPI 0x27a V139
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x1c1
[0x1c1:0x21a]
---
Predecessors: [0x1b2]
Successors: [0x21b, 0x21f]
---
0x1c1 PUSH1 0x12
0x1c3 SLOAD
0x1c4 PUSH1 0x9
0x1c6 SLOAD
0x1c7 PUSH1 0x1
0x1c9 PUSH1 0xa0
0x1cb PUSH1 0x2
0x1cd EXP
0x1ce SUB
0x1cf SWAP1
0x1d0 SWAP2
0x1d1 AND
0x1d2 SWAP1
0x1d3 PUSH4 0xa9059cbb
0x1d8 SWAP1
0x1d9 CALLER
0x1da SWAP1
0x1db DUP5
0x1dc MUL
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 PUSH1 0xe0
0x1e2 PUSH1 0x2
0x1e4 EXP
0x1e5 PUSH4 0xffffffff
0x1ea DUP6
0x1eb AND
0x1ec MUL
0x1ed DUP2
0x1ee MSTORE
0x1ef PUSH1 0x1
0x1f1 PUSH1 0xa0
0x1f3 PUSH1 0x2
0x1f5 EXP
0x1f6 SUB
0x1f7 SWAP1
0x1f8 SWAP3
0x1f9 AND
0x1fa PUSH1 0x4
0x1fc DUP4
0x1fd ADD
0x1fe MSTORE
0x1ff PUSH1 0x24
0x201 DUP3
0x202 ADD
0x203 MSTORE
0x204 PUSH1 0x44
0x206 ADD
0x207 PUSH1 0x0
0x209 PUSH1 0x40
0x20b MLOAD
0x20c DUP1
0x20d DUP4
0x20e SUB
0x20f DUP2
0x210 PUSH1 0x0
0x212 DUP8
0x213 DUP1
0x214 EXTCODESIZE
0x215 ISZERO
0x216 ISZERO
0x217 PUSH2 0x21f
0x21a JUMPI
---
0x1c1: V141 = 0x12
0x1c3: V142 = S[0x12]
0x1c4: V143 = 0x9
0x1c6: V144 = S[0x9]
0x1c7: V145 = 0x1
0x1c9: V146 = 0xa0
0x1cb: V147 = 0x2
0x1cd: V148 = EXP 0x2 0xa0
0x1ce: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d1: V150 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V151 = 0xa9059cbb
0x1d9: V152 = CALLER
0x1dc: V153 = MUL V126 V144
0x1dd: V154 = 0x40
0x1df: V155 = M[0x40]
0x1e0: V156 = 0xe0
0x1e2: V157 = 0x2
0x1e4: V158 = EXP 0x2 0xe0
0x1e5: V159 = 0xffffffff
0x1eb: V160 = AND 0xa9059cbb 0xffffffff
0x1ec: V161 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x1ee: M[V155] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1ef: V162 = 0x1
0x1f1: V163 = 0xa0
0x1f3: V164 = 0x2
0x1f5: V165 = EXP 0x2 0xa0
0x1f6: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f9: V167 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V168 = 0x4
0x1fd: V169 = ADD V155 0x4
0x1fe: M[V169] = V167
0x1ff: V170 = 0x24
0x202: V171 = ADD V155 0x24
0x203: M[V171] = V153
0x204: V172 = 0x44
0x206: V173 = ADD 0x44 V155
0x207: V174 = 0x0
0x209: V175 = 0x40
0x20b: V176 = M[0x40]
0x20e: V177 = SUB V173 V176
0x210: V178 = 0x0
0x214: V179 = EXTCODESIZE V150
0x215: V180 = ISZERO V179
0x216: V181 = ISZERO V180
0x217: V182 = 0x21f
0x21a: JUMPI 0x21f V181
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V150, 0xa9059cbb, V173, 0x0, V176, V177, V176, 0x0, V150]
Exit stack: [V12, V126, V150, 0xa9059cbb, V173, 0x0, V176, V177, V176, 0x0, V150]

================================

Block 0x21b
[0x21b:0x21e]
---
Predecessors: [0x1c1]
Successors: []
---
0x21b PUSH1 0x0
0x21d DUP1
0x21e REVERT
---
0x21b: V183 = 0x0
0x21e: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V150, 0xa9059cbb, V173, 0x0, V176, V177, V176, 0x0, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V150, 0xa9059cbb, V173, 0x0, V176, V177, V176, 0x0, V150]

================================

Block 0x21f
[0x21f:0x22b]
---
Predecessors: [0x1c1]
Successors: [0x22c, 0x230]
---
0x21f JUMPDEST
0x220 PUSH2 0x2c6
0x223 GAS
0x224 SUB
0x225 CALL
0x226 ISZERO
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x21f: JUMPDEST 
0x220: V184 = 0x2c6
0x223: V185 = GAS
0x224: V186 = SUB V185 0x2c6
0x225: V187 = CALL V186 V150 0x0 V176 V177 V176 0x0
0x226: V188 = ISZERO V187
0x227: V189 = ISZERO V188
0x228: V190 = 0x230
0x22b: JUMPI 0x230 V189
---
Entry stack: [V12, V126, V150, 0xa9059cbb, V173, 0x0, V176, V177, V176, 0x0, V150]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V126, V150, 0xa9059cbb, V173]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x21f]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V191 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V150, 0xa9059cbb, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V150, 0xa9059cbb, V173]

================================

Block 0x230
[0x230:0x279]
---
Predecessors: [0x21f]
Successors: [0x60e]
---
0x230 JUMPDEST
0x231 POP
0x232 POP
0x233 POP
0x234 PUSH1 0x0
0x236 DUP1
0x237 MLOAD
0x238 PUSH1 0x20
0x23a PUSH2 0xfc4
0x23d DUP4
0x23e CODECOPY
0x23f DUP2
0x240 MLOAD
0x241 SWAP2
0x242 MSTORE
0x243 CALLER
0x244 DUP3
0x245 PUSH1 0x1
0x247 PUSH1 0x40
0x249 MLOAD
0x24a PUSH1 0x1
0x24c PUSH1 0xa0
0x24e PUSH1 0x2
0x250 EXP
0x251 SUB
0x252 SWAP1
0x253 SWAP4
0x254 AND
0x255 DUP4
0x256 MSTORE
0x257 PUSH1 0x20
0x259 DUP4
0x25a ADD
0x25b SWAP2
0x25c SWAP1
0x25d SWAP2
0x25e MSTORE
0x25f ISZERO
0x260 ISZERO
0x261 PUSH1 0x40
0x263 DUP1
0x264 DUP4
0x265 ADD
0x266 SWAP2
0x267 SWAP1
0x268 SWAP2
0x269 MSTORE
0x26a PUSH1 0x60
0x26c SWAP1
0x26d SWAP2
0x26e ADD
0x26f SWAP1
0x270 MLOAD
0x271 DUP1
0x272 SWAP2
0x273 SUB
0x274 SWAP1
0x275 LOG1
0x276 PUSH2 0x60e
0x279 JUMP
---
0x230: JUMPDEST 
0x234: V192 = 0x0
0x237: V193 = M[0x0]
0x238: V194 = 0x20
0x23a: V195 = 0xfc4
0x23e: CODECOPY 0x0 0xfc4 0x20
0x240: V196 = M[0x0]
0x242: M[0x0] = V193
0x243: V197 = CALLER
0x245: V198 = 0x1
0x247: V199 = 0x40
0x249: V200 = M[0x40]
0x24a: V201 = 0x1
0x24c: V202 = 0xa0
0x24e: V203 = 0x2
0x250: V204 = EXP 0x2 0xa0
0x251: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x254: V206 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0x256: M[V200] = V206
0x257: V207 = 0x20
0x25a: V208 = ADD V200 0x20
0x25e: M[V208] = V126
0x25f: V209 = ISZERO 0x1
0x260: V210 = ISZERO 0x0
0x261: V211 = 0x40
0x265: V212 = ADD V200 0x40
0x269: M[V212] = 0x1
0x26a: V213 = 0x60
0x26e: V214 = ADD V200 0x60
0x270: V215 = M[0x40]
0x273: V216 = SUB V214 V215
0x275: LOG V215 V216 V196
0x276: V217 = 0x60e
0x279: JUMP 0x60e
---
Entry stack: [V12, V126, V150, 0xa9059cbb, V173]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V126]

================================

Block 0x27a
[0x27a:0x28a]
---
Predecessors: [0x1b2]
Successors: [0x28b, 0x307]
---
0x27a JUMPDEST
0x27b PUSH8 0x3782dace9d90000
0x284 DUP2
0x285 LT
0x286 ISZERO
0x287 PUSH2 0x307
0x28a JUMPI
---
0x27a: JUMPDEST 
0x27b: V218 = 0x3782dace9d90000
0x285: V219 = LT V126 0x3782dace9d90000
0x286: V220 = ISZERO V219
0x287: V221 = 0x307
0x28a: JUMPI 0x307 V220
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x28b
[0x28b:0x2a9]
---
Predecessors: [0x27a]
Successors: [0x2aa]
---
0x28b PUSH1 0x12
0x28d SLOAD
0x28e PUSH1 0xc
0x290 SLOAD
0x291 PUSH1 0x1
0x293 PUSH1 0xa0
0x295 PUSH1 0x2
0x297 EXP
0x298 SUB
0x299 SWAP1
0x29a SWAP2
0x29b AND
0x29c SWAP1
0x29d PUSH4 0xa9059cbb
0x2a2 SWAP1
0x2a3 CALLER
0x2a4 SWAP1
0x2a5 PUSH1 0xa
0x2a7 SWAP1
0x2a8 DUP6
0x2a9 MUL
---
0x28b: V222 = 0x12
0x28d: V223 = S[0x12]
0x28e: V224 = 0xc
0x290: V225 = S[0xc]
0x291: V226 = 0x1
0x293: V227 = 0xa0
0x295: V228 = 0x2
0x297: V229 = EXP 0x2 0xa0
0x298: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29b: V231 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V232 = 0xa9059cbb
0x2a3: V233 = CALLER
0x2a5: V234 = 0xa
0x2a9: V235 = MUL V126 V225
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V231, 0xa9059cbb, V233, 0xa, V235]
Exit stack: [V12, V126, V231, 0xa9059cbb, V233, 0xa, V235]

================================

Block 0x2aa
[0x2aa:0x2e9]
---
Predecessors: [0x28b, 0x318, 0x3aa, 0x43c, 0x4ce]
Successors: [0x2ea, 0x2ee]
---
0x2aa JUMPDEST
0x2ab DIV
0x2ac PUSH1 0x40
0x2ae MLOAD
0x2af PUSH1 0xe0
0x2b1 PUSH1 0x2
0x2b3 EXP
0x2b4 PUSH4 0xffffffff
0x2b9 DUP6
0x2ba AND
0x2bb MUL
0x2bc DUP2
0x2bd MSTORE
0x2be PUSH1 0x1
0x2c0 PUSH1 0xa0
0x2c2 PUSH1 0x2
0x2c4 EXP
0x2c5 SUB
0x2c6 SWAP1
0x2c7 SWAP3
0x2c8 AND
0x2c9 PUSH1 0x4
0x2cb DUP4
0x2cc ADD
0x2cd MSTORE
0x2ce PUSH1 0x24
0x2d0 DUP3
0x2d1 ADD
0x2d2 MSTORE
0x2d3 PUSH1 0x44
0x2d5 ADD
0x2d6 PUSH1 0x0
0x2d8 PUSH1 0x40
0x2da MLOAD
0x2db DUP1
0x2dc DUP4
0x2dd SUB
0x2de DUP2
0x2df PUSH1 0x0
0x2e1 DUP8
0x2e2 DUP1
0x2e3 EXTCODESIZE
0x2e4 ISZERO
0x2e5 ISZERO
0x2e6 PUSH2 0x2ee
0x2e9 JUMPI
---
0x2aa: JUMPDEST 
0x2ab: V236 = DIV S0 0xa
0x2ac: V237 = 0x40
0x2ae: V238 = M[0x40]
0x2af: V239 = 0xe0
0x2b1: V240 = 0x2
0x2b3: V241 = EXP 0x2 0xe0
0x2b4: V242 = 0xffffffff
0x2ba: V243 = AND 0xa9059cbb 0xffffffff
0x2bb: V244 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x2bd: M[V238] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2be: V245 = 0x1
0x2c0: V246 = 0xa0
0x2c2: V247 = 0x2
0x2c4: V248 = EXP 0x2 0xa0
0x2c5: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c8: V250 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V251 = 0x4
0x2cc: V252 = ADD V238 0x4
0x2cd: M[V252] = V250
0x2ce: V253 = 0x24
0x2d1: V254 = ADD V238 0x24
0x2d2: M[V254] = V236
0x2d3: V255 = 0x44
0x2d5: V256 = ADD 0x44 V238
0x2d6: V257 = 0x0
0x2d8: V258 = 0x40
0x2da: V259 = M[0x40]
0x2dd: V260 = SUB V256 V259
0x2df: V261 = 0x0
0x2e3: V262 = EXTCODESIZE S4
0x2e4: V263 = ISZERO V262
0x2e5: V264 = ISZERO V263
0x2e6: V265 = 0x2ee
0x2e9: JUMPI 0x2ee V264
---
Entry stack: [V12, V126, S4, 0xa9059cbb, S2, 0xa, S0]
Stack pops: 5
Stack additions: [S4, S3, V256, 0x0, V259, V260, V259, 0x0, S4]
Exit stack: [V12, V126, S4, 0xa9059cbb, V256, 0x0, V259, V260, V259, 0x0, S4]

================================

Block 0x2ea
[0x2ea:0x2ed]
---
Predecessors: [0x2aa]
Successors: []
---
0x2ea PUSH1 0x0
0x2ec DUP1
0x2ed REVERT
---
0x2ea: V266 = 0x0
0x2ed: REVERT 0x0 0x0
---
Entry stack: [V12, V126, S8, 0xa9059cbb, V256, 0x0, V259, V260, V259, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, S8, 0xa9059cbb, V256, 0x0, V259, V260, V259, 0x0, S0]

================================

Block 0x2ee
[0x2ee:0x2fa]
---
Predecessors: [0x2aa, 0x33b, 0x3cd, 0x45f, 0x4f1]
Successors: [0x2fb, 0x2ff]
---
0x2ee JUMPDEST
0x2ef PUSH2 0x2c6
0x2f2 GAS
0x2f3 SUB
0x2f4 CALL
0x2f5 ISZERO
0x2f6 ISZERO
0x2f7 PUSH2 0x2ff
0x2fa JUMPI
---
0x2ee: JUMPDEST 
0x2ef: V267 = 0x2c6
0x2f2: V268 = GAS
0x2f3: V269 = SUB V268 0x2c6
0x2f4: V270 = CALL V269 S0 0x0 S2 S3 S4 0x0
0x2f5: V271 = ISZERO V270
0x2f6: V272 = ISZERO V271
0x2f7: V273 = 0x2ff
0x2fa: JUMPI 0x2ff V272
---
Entry stack: [V12, V126, S8, S7, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V126, S8, S7, S6]

================================

Block 0x2fb
[0x2fb:0x2fe]
---
Predecessors: [0x2ee]
Successors: []
---
0x2fb PUSH1 0x0
0x2fd DUP1
0x2fe REVERT
---
0x2fb: V274 = 0x0
0x2fe: REVERT 0x0 0x0
---
Entry stack: [V12, V126, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, S2, S1, S0]

================================

Block 0x2ff
[0x2ff:0x306]
---
Predecessors: [0x2ee, 0x37b, 0x40d, 0x49f, 0x531]
Successors: [0x5c7]
---
0x2ff JUMPDEST
0x300 POP
0x301 POP
0x302 POP
0x303 PUSH2 0x5c7
0x306 JUMP
---
0x2ff: JUMPDEST 
0x303: V275 = 0x5c7
0x306: JUMP 0x5c7
---
Entry stack: [V12, V126, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x307
[0x307:0x317]
---
Predecessors: [0x27a]
Successors: [0x318, 0x398]
---
0x307 JUMPDEST
0x308 PUSH8 0x429d069189e0000
0x311 DUP2
0x312 LT
0x313 ISZERO
0x314 PUSH2 0x398
0x317 JUMPI
---
0x307: JUMPDEST 
0x308: V276 = 0x429d069189e0000
0x312: V277 = LT V126 0x429d069189e0000
0x313: V278 = ISZERO V277
0x314: V279 = 0x398
0x317: JUMPI 0x398 V278
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x318
[0x318:0x33a]
---
Predecessors: [0x307]
Successors: [0x2aa]
---
0x318 PUSH1 0x12
0x31a SLOAD
0x31b PUSH1 0xd
0x31d SLOAD
0x31e PUSH1 0x1
0x320 PUSH1 0xa0
0x322 PUSH1 0x2
0x324 EXP
0x325 SUB
0x326 SWAP1
0x327 SWAP2
0x328 AND
0x329 SWAP1
0x32a PUSH4 0xa9059cbb
0x32f SWAP1
0x330 CALLER
0x331 SWAP1
0x332 PUSH1 0xa
0x334 SWAP1
0x335 DUP6
0x336 MUL
0x337 PUSH2 0x2aa
0x33a JUMP
---
0x318: V280 = 0x12
0x31a: V281 = S[0x12]
0x31b: V282 = 0xd
0x31d: V283 = S[0xd]
0x31e: V284 = 0x1
0x320: V285 = 0xa0
0x322: V286 = 0x2
0x324: V287 = EXP 0x2 0xa0
0x325: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x328: V289 = AND V281 0xffffffffffffffffffffffffffffffffffffffff
0x32a: V290 = 0xa9059cbb
0x330: V291 = CALLER
0x332: V292 = 0xa
0x336: V293 = MUL V126 V283
0x337: V294 = 0x2aa
0x33a: JUMP 0x2aa
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V289, 0xa9059cbb, V291, 0xa, V293]
Exit stack: [V12, V126, V289, 0xa9059cbb, V291, 0xa, V293]

================================

Block 0x33b
[0x33b:0x37a]
---
Predecessors: []
Successors: [0x2ee, 0x37b]
---
0x33b JUMPDEST
0x33c DIV
0x33d PUSH1 0x40
0x33f MLOAD
0x340 PUSH1 0xe0
0x342 PUSH1 0x2
0x344 EXP
0x345 PUSH4 0xffffffff
0x34a DUP6
0x34b AND
0x34c MUL
0x34d DUP2
0x34e MSTORE
0x34f PUSH1 0x1
0x351 PUSH1 0xa0
0x353 PUSH1 0x2
0x355 EXP
0x356 SUB
0x357 SWAP1
0x358 SWAP3
0x359 AND
0x35a PUSH1 0x4
0x35c DUP4
0x35d ADD
0x35e MSTORE
0x35f PUSH1 0x24
0x361 DUP3
0x362 ADD
0x363 MSTORE
0x364 PUSH1 0x44
0x366 ADD
0x367 PUSH1 0x0
0x369 PUSH1 0x40
0x36b MLOAD
0x36c DUP1
0x36d DUP4
0x36e SUB
0x36f DUP2
0x370 PUSH1 0x0
0x372 DUP8
0x373 DUP1
0x374 EXTCODESIZE
0x375 ISZERO
0x376 ISZERO
0x377 PUSH2 0x2ee
0x37a JUMPI
---
0x33b: JUMPDEST 
0x33c: V295 = DIV S0 S1
0x33d: V296 = 0x40
0x33f: V297 = M[0x40]
0x340: V298 = 0xe0
0x342: V299 = 0x2
0x344: V300 = EXP 0x2 0xe0
0x345: V301 = 0xffffffff
0x34b: V302 = AND S3 0xffffffff
0x34c: V303 = MUL V302 0x100000000000000000000000000000000000000000000000000000000
0x34e: M[V297] = V303
0x34f: V304 = 0x1
0x351: V305 = 0xa0
0x353: V306 = 0x2
0x355: V307 = EXP 0x2 0xa0
0x356: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x359: V309 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x35a: V310 = 0x4
0x35d: V311 = ADD V297 0x4
0x35e: M[V311] = V309
0x35f: V312 = 0x24
0x362: V313 = ADD V297 0x24
0x363: M[V313] = V295
0x364: V314 = 0x44
0x366: V315 = ADD 0x44 V297
0x367: V316 = 0x0
0x369: V317 = 0x40
0x36b: V318 = M[0x40]
0x36e: V319 = SUB V315 V318
0x370: V320 = 0x0
0x374: V321 = EXTCODESIZE S4
0x375: V322 = ISZERO V321
0x376: V323 = ISZERO V322
0x377: V324 = 0x2ee
0x37a: JUMPI 0x2ee V323
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V315, 0x0, V318, V319, V318, 0x0, S4]
Exit stack: [S4, S3, V315, 0x0, V318, V319, V318, 0x0, S4]

================================

Block 0x37b
[0x37b:0x38b]
---
Predecessors: [0x33b]
Successors: [0x2ff, 0x38c]
---
0x37b PUSH1 0x0
0x37d DUP1
0x37e REVERT
0x37f JUMPDEST
0x380 PUSH2 0x2c6
0x383 GAS
0x384 SUB
0x385 CALL
0x386 ISZERO
0x387 ISZERO
0x388 PUSH2 0x2ff
0x38b JUMPI
---
0x37b: V325 = 0x0
0x37e: REVERT 0x0 0x0
0x37f: JUMPDEST 
0x380: V326 = 0x2c6
0x383: V327 = GAS
0x384: V328 = SUB V327 0x2c6
0x385: V329 = CALL V328 S0 S1 S2 S3 S4 S5
0x386: V330 = ISZERO V329
0x387: V331 = ISZERO V330
0x388: V332 = 0x2ff
0x38b: JUMPI 0x2ff V331
---
Entry stack: [S8, S7, V315, 0x0, V318, V319, V318, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x38c
[0x38c:0x397]
---
Predecessors: [0x37b]
Successors: [0x5c7]
---
0x38c PUSH1 0x0
0x38e DUP1
0x38f REVERT
0x390 JUMPDEST
0x391 POP
0x392 POP
0x393 POP
0x394 PUSH2 0x5c7
0x397 JUMP
---
0x38c: V333 = 0x0
0x38f: REVERT 0x0 0x0
0x390: JUMPDEST 
0x394: V334 = 0x5c7
0x397: JUMP 0x5c7
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x398
[0x398:0x3a9]
---
Predecessors: [0x307]
Successors: [0x3aa, 0x42a]
---
0x398 JUMPDEST
0x399 PUSH9 0x2b5e3af16b1880000
0x3a3 DUP2
0x3a4 LT
0x3a5 ISZERO
0x3a6 PUSH2 0x42a
0x3a9 JUMPI
---
0x398: JUMPDEST 
0x399: V335 = 0x2b5e3af16b1880000
0x3a4: V336 = LT V126 0x2b5e3af16b1880000
0x3a5: V337 = ISZERO V336
0x3a6: V338 = 0x42a
0x3a9: JUMPI 0x42a V337
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x3aa
[0x3aa:0x3cc]
---
Predecessors: [0x398]
Successors: [0x2aa]
---
0x3aa PUSH1 0x12
0x3ac SLOAD
0x3ad PUSH1 0xe
0x3af SLOAD
0x3b0 PUSH1 0x1
0x3b2 PUSH1 0xa0
0x3b4 PUSH1 0x2
0x3b6 EXP
0x3b7 SUB
0x3b8 SWAP1
0x3b9 SWAP2
0x3ba AND
0x3bb SWAP1
0x3bc PUSH4 0xa9059cbb
0x3c1 SWAP1
0x3c2 CALLER
0x3c3 SWAP1
0x3c4 PUSH1 0xa
0x3c6 SWAP1
0x3c7 DUP6
0x3c8 MUL
0x3c9 PUSH2 0x2aa
0x3cc JUMP
---
0x3aa: V339 = 0x12
0x3ac: V340 = S[0x12]
0x3ad: V341 = 0xe
0x3af: V342 = S[0xe]
0x3b0: V343 = 0x1
0x3b2: V344 = 0xa0
0x3b4: V345 = 0x2
0x3b6: V346 = EXP 0x2 0xa0
0x3b7: V347 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ba: V348 = AND V340 0xffffffffffffffffffffffffffffffffffffffff
0x3bc: V349 = 0xa9059cbb
0x3c2: V350 = CALLER
0x3c4: V351 = 0xa
0x3c8: V352 = MUL V126 V342
0x3c9: V353 = 0x2aa
0x3cc: JUMP 0x2aa
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V348, 0xa9059cbb, V350, 0xa, V352]
Exit stack: [V12, V126, V348, 0xa9059cbb, V350, 0xa, V352]

================================

Block 0x3cd
[0x3cd:0x40c]
---
Predecessors: []
Successors: [0x2ee, 0x40d]
---
0x3cd JUMPDEST
0x3ce DIV
0x3cf PUSH1 0x40
0x3d1 MLOAD
0x3d2 PUSH1 0xe0
0x3d4 PUSH1 0x2
0x3d6 EXP
0x3d7 PUSH4 0xffffffff
0x3dc DUP6
0x3dd AND
0x3de MUL
0x3df DUP2
0x3e0 MSTORE
0x3e1 PUSH1 0x1
0x3e3 PUSH1 0xa0
0x3e5 PUSH1 0x2
0x3e7 EXP
0x3e8 SUB
0x3e9 SWAP1
0x3ea SWAP3
0x3eb AND
0x3ec PUSH1 0x4
0x3ee DUP4
0x3ef ADD
0x3f0 MSTORE
0x3f1 PUSH1 0x24
0x3f3 DUP3
0x3f4 ADD
0x3f5 MSTORE
0x3f6 PUSH1 0x44
0x3f8 ADD
0x3f9 PUSH1 0x0
0x3fb PUSH1 0x40
0x3fd MLOAD
0x3fe DUP1
0x3ff DUP4
0x400 SUB
0x401 DUP2
0x402 PUSH1 0x0
0x404 DUP8
0x405 DUP1
0x406 EXTCODESIZE
0x407 ISZERO
0x408 ISZERO
0x409 PUSH2 0x2ee
0x40c JUMPI
---
0x3cd: JUMPDEST 
0x3ce: V354 = DIV S0 S1
0x3cf: V355 = 0x40
0x3d1: V356 = M[0x40]
0x3d2: V357 = 0xe0
0x3d4: V358 = 0x2
0x3d6: V359 = EXP 0x2 0xe0
0x3d7: V360 = 0xffffffff
0x3dd: V361 = AND S3 0xffffffff
0x3de: V362 = MUL V361 0x100000000000000000000000000000000000000000000000000000000
0x3e0: M[V356] = V362
0x3e1: V363 = 0x1
0x3e3: V364 = 0xa0
0x3e5: V365 = 0x2
0x3e7: V366 = EXP 0x2 0xa0
0x3e8: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3eb: V368 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x3ec: V369 = 0x4
0x3ef: V370 = ADD V356 0x4
0x3f0: M[V370] = V368
0x3f1: V371 = 0x24
0x3f4: V372 = ADD V356 0x24
0x3f5: M[V372] = V354
0x3f6: V373 = 0x44
0x3f8: V374 = ADD 0x44 V356
0x3f9: V375 = 0x0
0x3fb: V376 = 0x40
0x3fd: V377 = M[0x40]
0x400: V378 = SUB V374 V377
0x402: V379 = 0x0
0x406: V380 = EXTCODESIZE S4
0x407: V381 = ISZERO V380
0x408: V382 = ISZERO V381
0x409: V383 = 0x2ee
0x40c: JUMPI 0x2ee V382
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V374, 0x0, V377, V378, V377, 0x0, S4]
Exit stack: [S4, S3, V374, 0x0, V377, V378, V377, 0x0, S4]

================================

Block 0x40d
[0x40d:0x41d]
---
Predecessors: [0x3cd]
Successors: [0x2ff, 0x41e]
---
0x40d PUSH1 0x0
0x40f DUP1
0x410 REVERT
0x411 JUMPDEST
0x412 PUSH2 0x2c6
0x415 GAS
0x416 SUB
0x417 CALL
0x418 ISZERO
0x419 ISZERO
0x41a PUSH2 0x2ff
0x41d JUMPI
---
0x40d: V384 = 0x0
0x410: REVERT 0x0 0x0
0x411: JUMPDEST 
0x412: V385 = 0x2c6
0x415: V386 = GAS
0x416: V387 = SUB V386 0x2c6
0x417: V388 = CALL V387 S0 S1 S2 S3 S4 S5
0x418: V389 = ISZERO V388
0x419: V390 = ISZERO V389
0x41a: V391 = 0x2ff
0x41d: JUMPI 0x2ff V390
---
Entry stack: [S8, S7, V374, 0x0, V377, V378, V377, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x41e
[0x41e:0x429]
---
Predecessors: [0x40d]
Successors: [0x5c7]
---
0x41e PUSH1 0x0
0x420 DUP1
0x421 REVERT
0x422 JUMPDEST
0x423 POP
0x424 POP
0x425 POP
0x426 PUSH2 0x5c7
0x429 JUMP
---
0x41e: V392 = 0x0
0x421: REVERT 0x0 0x0
0x422: JUMPDEST 
0x426: V393 = 0x5c7
0x429: JUMP 0x5c7
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x42a
[0x42a:0x43b]
---
Predecessors: [0x398]
Successors: [0x43c, 0x4bc]
---
0x42a JUMPDEST
0x42b PUSH9 0x56bc75e2d63100000
0x435 DUP2
0x436 LT
0x437 ISZERO
0x438 PUSH2 0x4bc
0x43b JUMPI
---
0x42a: JUMPDEST 
0x42b: V394 = 0x56bc75e2d63100000
0x436: V395 = LT V126 0x56bc75e2d63100000
0x437: V396 = ISZERO V395
0x438: V397 = 0x4bc
0x43b: JUMPI 0x4bc V396
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x43c
[0x43c:0x45e]
---
Predecessors: [0x42a]
Successors: [0x2aa]
---
0x43c PUSH1 0x12
0x43e SLOAD
0x43f PUSH1 0xf
0x441 SLOAD
0x442 PUSH1 0x1
0x444 PUSH1 0xa0
0x446 PUSH1 0x2
0x448 EXP
0x449 SUB
0x44a SWAP1
0x44b SWAP2
0x44c AND
0x44d SWAP1
0x44e PUSH4 0xa9059cbb
0x453 SWAP1
0x454 CALLER
0x455 SWAP1
0x456 PUSH1 0xa
0x458 SWAP1
0x459 DUP6
0x45a MUL
0x45b PUSH2 0x2aa
0x45e JUMP
---
0x43c: V398 = 0x12
0x43e: V399 = S[0x12]
0x43f: V400 = 0xf
0x441: V401 = S[0xf]
0x442: V402 = 0x1
0x444: V403 = 0xa0
0x446: V404 = 0x2
0x448: V405 = EXP 0x2 0xa0
0x449: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44c: V407 = AND V399 0xffffffffffffffffffffffffffffffffffffffff
0x44e: V408 = 0xa9059cbb
0x454: V409 = CALLER
0x456: V410 = 0xa
0x45a: V411 = MUL V126 V401
0x45b: V412 = 0x2aa
0x45e: JUMP 0x2aa
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V407, 0xa9059cbb, V409, 0xa, V411]
Exit stack: [V12, V126, V407, 0xa9059cbb, V409, 0xa, V411]

================================

Block 0x45f
[0x45f:0x49e]
---
Predecessors: []
Successors: [0x2ee, 0x49f]
---
0x45f JUMPDEST
0x460 DIV
0x461 PUSH1 0x40
0x463 MLOAD
0x464 PUSH1 0xe0
0x466 PUSH1 0x2
0x468 EXP
0x469 PUSH4 0xffffffff
0x46e DUP6
0x46f AND
0x470 MUL
0x471 DUP2
0x472 MSTORE
0x473 PUSH1 0x1
0x475 PUSH1 0xa0
0x477 PUSH1 0x2
0x479 EXP
0x47a SUB
0x47b SWAP1
0x47c SWAP3
0x47d AND
0x47e PUSH1 0x4
0x480 DUP4
0x481 ADD
0x482 MSTORE
0x483 PUSH1 0x24
0x485 DUP3
0x486 ADD
0x487 MSTORE
0x488 PUSH1 0x44
0x48a ADD
0x48b PUSH1 0x0
0x48d PUSH1 0x40
0x48f MLOAD
0x490 DUP1
0x491 DUP4
0x492 SUB
0x493 DUP2
0x494 PUSH1 0x0
0x496 DUP8
0x497 DUP1
0x498 EXTCODESIZE
0x499 ISZERO
0x49a ISZERO
0x49b PUSH2 0x2ee
0x49e JUMPI
---
0x45f: JUMPDEST 
0x460: V413 = DIV S0 S1
0x461: V414 = 0x40
0x463: V415 = M[0x40]
0x464: V416 = 0xe0
0x466: V417 = 0x2
0x468: V418 = EXP 0x2 0xe0
0x469: V419 = 0xffffffff
0x46f: V420 = AND S3 0xffffffff
0x470: V421 = MUL V420 0x100000000000000000000000000000000000000000000000000000000
0x472: M[V415] = V421
0x473: V422 = 0x1
0x475: V423 = 0xa0
0x477: V424 = 0x2
0x479: V425 = EXP 0x2 0xa0
0x47a: V426 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47d: V427 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x47e: V428 = 0x4
0x481: V429 = ADD V415 0x4
0x482: M[V429] = V427
0x483: V430 = 0x24
0x486: V431 = ADD V415 0x24
0x487: M[V431] = V413
0x488: V432 = 0x44
0x48a: V433 = ADD 0x44 V415
0x48b: V434 = 0x0
0x48d: V435 = 0x40
0x48f: V436 = M[0x40]
0x492: V437 = SUB V433 V436
0x494: V438 = 0x0
0x498: V439 = EXTCODESIZE S4
0x499: V440 = ISZERO V439
0x49a: V441 = ISZERO V440
0x49b: V442 = 0x2ee
0x49e: JUMPI 0x2ee V441
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V433, 0x0, V436, V437, V436, 0x0, S4]
Exit stack: [S4, S3, V433, 0x0, V436, V437, V436, 0x0, S4]

================================

Block 0x49f
[0x49f:0x4af]
---
Predecessors: [0x45f]
Successors: [0x2ff, 0x4b0]
---
0x49f PUSH1 0x0
0x4a1 DUP1
0x4a2 REVERT
0x4a3 JUMPDEST
0x4a4 PUSH2 0x2c6
0x4a7 GAS
0x4a8 SUB
0x4a9 CALL
0x4aa ISZERO
0x4ab ISZERO
0x4ac PUSH2 0x2ff
0x4af JUMPI
---
0x49f: V443 = 0x0
0x4a2: REVERT 0x0 0x0
0x4a3: JUMPDEST 
0x4a4: V444 = 0x2c6
0x4a7: V445 = GAS
0x4a8: V446 = SUB V445 0x2c6
0x4a9: V447 = CALL V446 S0 S1 S2 S3 S4 S5
0x4aa: V448 = ISZERO V447
0x4ab: V449 = ISZERO V448
0x4ac: V450 = 0x2ff
0x4af: JUMPI 0x2ff V449
---
Entry stack: [S8, S7, V433, 0x0, V436, V437, V436, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4b0
[0x4b0:0x4bb]
---
Predecessors: [0x49f]
Successors: [0x5c7]
---
0x4b0 PUSH1 0x0
0x4b2 DUP1
0x4b3 REVERT
0x4b4 JUMPDEST
0x4b5 POP
0x4b6 POP
0x4b7 POP
0x4b8 PUSH2 0x5c7
0x4bb JUMP
---
0x4b0: V451 = 0x0
0x4b3: REVERT 0x0 0x0
0x4b4: JUMPDEST 
0x4b8: V452 = 0x5c7
0x4bb: JUMP 0x5c7
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4bc
[0x4bc:0x4cd]
---
Predecessors: [0x42a]
Successors: [0x4ce, 0x54e]
---
0x4bc JUMPDEST
0x4bd PUSH9 0x821ab0d4414980000
0x4c7 DUP2
0x4c8 LT
0x4c9 ISZERO
0x4ca PUSH2 0x54e
0x4cd JUMPI
---
0x4bc: JUMPDEST 
0x4bd: V453 = 0x821ab0d4414980000
0x4c8: V454 = LT V126 0x821ab0d4414980000
0x4c9: V455 = ISZERO V454
0x4ca: V456 = 0x54e
0x4cd: JUMPI 0x54e V455
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x4ce
[0x4ce:0x4f0]
---
Predecessors: [0x4bc]
Successors: [0x2aa]
---
0x4ce PUSH1 0x12
0x4d0 SLOAD
0x4d1 PUSH1 0x10
0x4d3 SLOAD
0x4d4 PUSH1 0x1
0x4d6 PUSH1 0xa0
0x4d8 PUSH1 0x2
0x4da EXP
0x4db SUB
0x4dc SWAP1
0x4dd SWAP2
0x4de AND
0x4df SWAP1
0x4e0 PUSH4 0xa9059cbb
0x4e5 SWAP1
0x4e6 CALLER
0x4e7 SWAP1
0x4e8 PUSH1 0xa
0x4ea SWAP1
0x4eb DUP6
0x4ec MUL
0x4ed PUSH2 0x2aa
0x4f0 JUMP
---
0x4ce: V457 = 0x12
0x4d0: V458 = S[0x12]
0x4d1: V459 = 0x10
0x4d3: V460 = S[0x10]
0x4d4: V461 = 0x1
0x4d6: V462 = 0xa0
0x4d8: V463 = 0x2
0x4da: V464 = EXP 0x2 0xa0
0x4db: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4de: V466 = AND V458 0xffffffffffffffffffffffffffffffffffffffff
0x4e0: V467 = 0xa9059cbb
0x4e6: V468 = CALLER
0x4e8: V469 = 0xa
0x4ec: V470 = MUL V126 V460
0x4ed: V471 = 0x2aa
0x4f0: JUMP 0x2aa
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V466, 0xa9059cbb, V468, 0xa, V470]
Exit stack: [V12, V126, V466, 0xa9059cbb, V468, 0xa, V470]

================================

Block 0x4f1
[0x4f1:0x530]
---
Predecessors: []
Successors: [0x2ee, 0x531]
---
0x4f1 JUMPDEST
0x4f2 DIV
0x4f3 PUSH1 0x40
0x4f5 MLOAD
0x4f6 PUSH1 0xe0
0x4f8 PUSH1 0x2
0x4fa EXP
0x4fb PUSH4 0xffffffff
0x500 DUP6
0x501 AND
0x502 MUL
0x503 DUP2
0x504 MSTORE
0x505 PUSH1 0x1
0x507 PUSH1 0xa0
0x509 PUSH1 0x2
0x50b EXP
0x50c SUB
0x50d SWAP1
0x50e SWAP3
0x50f AND
0x510 PUSH1 0x4
0x512 DUP4
0x513 ADD
0x514 MSTORE
0x515 PUSH1 0x24
0x517 DUP3
0x518 ADD
0x519 MSTORE
0x51a PUSH1 0x44
0x51c ADD
0x51d PUSH1 0x0
0x51f PUSH1 0x40
0x521 MLOAD
0x522 DUP1
0x523 DUP4
0x524 SUB
0x525 DUP2
0x526 PUSH1 0x0
0x528 DUP8
0x529 DUP1
0x52a EXTCODESIZE
0x52b ISZERO
0x52c ISZERO
0x52d PUSH2 0x2ee
0x530 JUMPI
---
0x4f1: JUMPDEST 
0x4f2: V472 = DIV S0 S1
0x4f3: V473 = 0x40
0x4f5: V474 = M[0x40]
0x4f6: V475 = 0xe0
0x4f8: V476 = 0x2
0x4fa: V477 = EXP 0x2 0xe0
0x4fb: V478 = 0xffffffff
0x501: V479 = AND S3 0xffffffff
0x502: V480 = MUL V479 0x100000000000000000000000000000000000000000000000000000000
0x504: M[V474] = V480
0x505: V481 = 0x1
0x507: V482 = 0xa0
0x509: V483 = 0x2
0x50b: V484 = EXP 0x2 0xa0
0x50c: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50f: V486 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x510: V487 = 0x4
0x513: V488 = ADD V474 0x4
0x514: M[V488] = V486
0x515: V489 = 0x24
0x518: V490 = ADD V474 0x24
0x519: M[V490] = V472
0x51a: V491 = 0x44
0x51c: V492 = ADD 0x44 V474
0x51d: V493 = 0x0
0x51f: V494 = 0x40
0x521: V495 = M[0x40]
0x524: V496 = SUB V492 V495
0x526: V497 = 0x0
0x52a: V498 = EXTCODESIZE S4
0x52b: V499 = ISZERO V498
0x52c: V500 = ISZERO V499
0x52d: V501 = 0x2ee
0x530: JUMPI 0x2ee V500
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V492, 0x0, V495, V496, V495, 0x0, S4]
Exit stack: [S4, S3, V492, 0x0, V495, V496, V495, 0x0, S4]

================================

Block 0x531
[0x531:0x541]
---
Predecessors: [0x4f1]
Successors: [0x2ff, 0x542]
---
0x531 PUSH1 0x0
0x533 DUP1
0x534 REVERT
0x535 JUMPDEST
0x536 PUSH2 0x2c6
0x539 GAS
0x53a SUB
0x53b CALL
0x53c ISZERO
0x53d ISZERO
0x53e PUSH2 0x2ff
0x541 JUMPI
---
0x531: V502 = 0x0
0x534: REVERT 0x0 0x0
0x535: JUMPDEST 
0x536: V503 = 0x2c6
0x539: V504 = GAS
0x53a: V505 = SUB V504 0x2c6
0x53b: V506 = CALL V505 S0 S1 S2 S3 S4 S5
0x53c: V507 = ISZERO V506
0x53d: V508 = ISZERO V507
0x53e: V509 = 0x2ff
0x541: JUMPI 0x2ff V508
---
Entry stack: [S8, S7, V492, 0x0, V495, V496, V495, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x542
[0x542:0x54d]
---
Predecessors: [0x531]
Successors: [0x5c7]
---
0x542 PUSH1 0x0
0x544 DUP1
0x545 REVERT
0x546 JUMPDEST
0x547 POP
0x548 POP
0x549 POP
0x54a PUSH2 0x5c7
0x54d JUMP
---
0x542: V510 = 0x0
0x545: REVERT 0x0 0x0
0x546: JUMPDEST 
0x54a: V511 = 0x5c7
0x54d: JUMP 0x5c7
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x54e
[0x54e:0x56d]
---
Predecessors: [0x4bc]
Successors: [0x56e]
---
0x54e JUMPDEST
0x54f PUSH1 0x12
0x551 SLOAD
0x552 PUSH1 0x11
0x554 SLOAD
0x555 PUSH1 0x1
0x557 PUSH1 0xa0
0x559 PUSH1 0x2
0x55b EXP
0x55c SUB
0x55d SWAP1
0x55e SWAP2
0x55f AND
0x560 SWAP1
0x561 PUSH4 0xa9059cbb
0x566 SWAP1
0x567 CALLER
0x568 SWAP1
0x569 PUSH1 0xa
0x56b SWAP1
0x56c DUP6
0x56d MUL
---
0x54e: JUMPDEST 
0x54f: V512 = 0x12
0x551: V513 = S[0x12]
0x552: V514 = 0x11
0x554: V515 = S[0x11]
0x555: V516 = 0x1
0x557: V517 = 0xa0
0x559: V518 = 0x2
0x55b: V519 = EXP 0x2 0xa0
0x55c: V520 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55f: V521 = AND V513 0xffffffffffffffffffffffffffffffffffffffff
0x561: V522 = 0xa9059cbb
0x567: V523 = CALLER
0x569: V524 = 0xa
0x56d: V525 = MUL V126 V515
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V521, 0xa9059cbb, V523, 0xa, V525]
Exit stack: [V12, V126, V521, 0xa9059cbb, V523, 0xa, V525]

================================

Block 0x56e
[0x56e:0x5ad]
---
Predecessors: [0x54e]
Successors: [0x5ae, 0x5b2]
---
0x56e JUMPDEST
0x56f DIV
0x570 PUSH1 0x40
0x572 MLOAD
0x573 PUSH1 0xe0
0x575 PUSH1 0x2
0x577 EXP
0x578 PUSH4 0xffffffff
0x57d DUP6
0x57e AND
0x57f MUL
0x580 DUP2
0x581 MSTORE
0x582 PUSH1 0x1
0x584 PUSH1 0xa0
0x586 PUSH1 0x2
0x588 EXP
0x589 SUB
0x58a SWAP1
0x58b SWAP3
0x58c AND
0x58d PUSH1 0x4
0x58f DUP4
0x590 ADD
0x591 MSTORE
0x592 PUSH1 0x24
0x594 DUP3
0x595 ADD
0x596 MSTORE
0x597 PUSH1 0x44
0x599 ADD
0x59a PUSH1 0x0
0x59c PUSH1 0x40
0x59e MLOAD
0x59f DUP1
0x5a0 DUP4
0x5a1 SUB
0x5a2 DUP2
0x5a3 PUSH1 0x0
0x5a5 DUP8
0x5a6 DUP1
0x5a7 EXTCODESIZE
0x5a8 ISZERO
0x5a9 ISZERO
0x5aa PUSH2 0x5b2
0x5ad JUMPI
---
0x56e: JUMPDEST 
0x56f: V526 = DIV V525 0xa
0x570: V527 = 0x40
0x572: V528 = M[0x40]
0x573: V529 = 0xe0
0x575: V530 = 0x2
0x577: V531 = EXP 0x2 0xe0
0x578: V532 = 0xffffffff
0x57e: V533 = AND 0xa9059cbb 0xffffffff
0x57f: V534 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x581: M[V528] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x582: V535 = 0x1
0x584: V536 = 0xa0
0x586: V537 = 0x2
0x588: V538 = EXP 0x2 0xa0
0x589: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58c: V540 = AND V523 0xffffffffffffffffffffffffffffffffffffffff
0x58d: V541 = 0x4
0x590: V542 = ADD V528 0x4
0x591: M[V542] = V540
0x592: V543 = 0x24
0x595: V544 = ADD V528 0x24
0x596: M[V544] = V526
0x597: V545 = 0x44
0x599: V546 = ADD 0x44 V528
0x59a: V547 = 0x0
0x59c: V548 = 0x40
0x59e: V549 = M[0x40]
0x5a1: V550 = SUB V546 V549
0x5a3: V551 = 0x0
0x5a7: V552 = EXTCODESIZE V521
0x5a8: V553 = ISZERO V552
0x5a9: V554 = ISZERO V553
0x5aa: V555 = 0x5b2
0x5ad: JUMPI 0x5b2 V554
---
Entry stack: [V12, V126, V521, 0xa9059cbb, V523, 0xa, V525]
Stack pops: 5
Stack additions: [S4, S3, V546, 0x0, V549, V550, V549, 0x0, S4]
Exit stack: [V12, V126, V521, 0xa9059cbb, V546, 0x0, V549, V550, V549, 0x0, V521]

================================

Block 0x5ae
[0x5ae:0x5b1]
---
Predecessors: [0x56e]
Successors: []
---
0x5ae PUSH1 0x0
0x5b0 DUP1
0x5b1 REVERT
---
0x5ae: V556 = 0x0
0x5b1: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V521, 0xa9059cbb, V546, 0x0, V549, V550, V549, 0x0, V521]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V521, 0xa9059cbb, V546, 0x0, V549, V550, V549, 0x0, V521]

================================

Block 0x5b2
[0x5b2:0x5be]
---
Predecessors: [0x56e]
Successors: [0x5bf, 0x5c3]
---
0x5b2 JUMPDEST
0x5b3 PUSH2 0x2c6
0x5b6 GAS
0x5b7 SUB
0x5b8 CALL
0x5b9 ISZERO
0x5ba ISZERO
0x5bb PUSH2 0x5c3
0x5be JUMPI
---
0x5b2: JUMPDEST 
0x5b3: V557 = 0x2c6
0x5b6: V558 = GAS
0x5b7: V559 = SUB V558 0x2c6
0x5b8: V560 = CALL V559 V521 0x0 V549 V550 V549 0x0
0x5b9: V561 = ISZERO V560
0x5ba: V562 = ISZERO V561
0x5bb: V563 = 0x5c3
0x5be: JUMPI 0x5c3 V562
---
Entry stack: [V12, V126, V521, 0xa9059cbb, V546, 0x0, V549, V550, V549, 0x0, V521]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V126, V521, 0xa9059cbb, V546]

================================

Block 0x5bf
[0x5bf:0x5c2]
---
Predecessors: [0x5b2]
Successors: []
---
0x5bf PUSH1 0x0
0x5c1 DUP1
0x5c2 REVERT
---
0x5bf: V564 = 0x0
0x5c2: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V521, 0xa9059cbb, V546]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V521, 0xa9059cbb, V546]

================================

Block 0x5c3
[0x5c3:0x5c6]
---
Predecessors: [0x5b2]
Successors: [0x5c7]
---
0x5c3 JUMPDEST
0x5c4 POP
0x5c5 POP
0x5c6 POP
---
0x5c3: JUMPDEST 
---
Entry stack: [V12, V126, V521, 0xa9059cbb, V546]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x5c7
[0x5c7:0x5c7]
---
Predecessors: [0x2ff, 0x38c, 0x41e, 0x4b0, 0x542, 0x5c3]
Successors: [0x5c8]
---
0x5c7 JUMPDEST
---
0x5c7: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x5c8
[0x5c8:0x5c8]
---
Predecessors: [0x5c7]
Successors: [0x5c9]
---
0x5c8 JUMPDEST
---
0x5c8: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x5c9
[0x5c9:0x5c9]
---
Predecessors: [0x5c8]
Successors: [0x5ca]
---
0x5c9 JUMPDEST
---
0x5c9: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x5ca
[0x5ca:0x5ca]
---
Predecessors: [0x5c9]
Successors: [0x5cb]
---
0x5ca JUMPDEST
---
0x5ca: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x5cb
[0x5cb:0x60d]
---
Predecessors: [0x5ca]
Successors: [0x60e]
---
0x5cb JUMPDEST
0x5cc PUSH1 0x0
0x5ce DUP1
0x5cf MLOAD
0x5d0 PUSH1 0x20
0x5d2 PUSH2 0xfc4
0x5d5 DUP4
0x5d6 CODECOPY
0x5d7 DUP2
0x5d8 MLOAD
0x5d9 SWAP2
0x5da MSTORE
0x5db CALLER
0x5dc DUP3
0x5dd PUSH1 0x1
0x5df PUSH1 0x40
0x5e1 MLOAD
0x5e2 PUSH1 0x1
0x5e4 PUSH1 0xa0
0x5e6 PUSH1 0x2
0x5e8 EXP
0x5e9 SUB
0x5ea SWAP1
0x5eb SWAP4
0x5ec AND
0x5ed DUP4
0x5ee MSTORE
0x5ef PUSH1 0x20
0x5f1 DUP4
0x5f2 ADD
0x5f3 SWAP2
0x5f4 SWAP1
0x5f5 SWAP2
0x5f6 MSTORE
0x5f7 ISZERO
0x5f8 ISZERO
0x5f9 PUSH1 0x40
0x5fb DUP1
0x5fc DUP4
0x5fd ADD
0x5fe SWAP2
0x5ff SWAP1
0x600 SWAP2
0x601 MSTORE
0x602 PUSH1 0x60
0x604 SWAP1
0x605 SWAP2
0x606 ADD
0x607 SWAP1
0x608 MLOAD
0x609 DUP1
0x60a SWAP2
0x60b SUB
0x60c SWAP1
0x60d LOG1
---
0x5cb: JUMPDEST 
0x5cc: V565 = 0x0
0x5cf: V566 = M[0x0]
0x5d0: V567 = 0x20
0x5d2: V568 = 0xfc4
0x5d6: CODECOPY 0x0 0xfc4 0x20
0x5d8: V569 = M[0x0]
0x5da: M[0x0] = V566
0x5db: V570 = CALLER
0x5dd: V571 = 0x1
0x5df: V572 = 0x40
0x5e1: V573 = M[0x40]
0x5e2: V574 = 0x1
0x5e4: V575 = 0xa0
0x5e6: V576 = 0x2
0x5e8: V577 = EXP 0x2 0xa0
0x5e9: V578 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ec: V579 = AND V570 0xffffffffffffffffffffffffffffffffffffffff
0x5ee: M[V573] = V579
0x5ef: V580 = 0x20
0x5f2: V581 = ADD V573 0x20
0x5f6: M[V581] = V126
0x5f7: V582 = ISZERO 0x1
0x5f8: V583 = ISZERO 0x0
0x5f9: V584 = 0x40
0x5fd: V585 = ADD V573 0x40
0x601: M[V585] = 0x1
0x602: V586 = 0x60
0x606: V587 = ADD V573 0x60
0x608: V588 = M[0x40]
0x60b: V589 = SUB V587 V588
0x60d: LOG V588 V589 V569
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x60e
[0x60e:0x612]
---
Predecessors: [0x230, 0x5cb]
Successors: [0x7d3]
---
0x60e JUMPDEST
0x60f PUSH2 0x7d3
0x612 JUMP
---
0x60e: JUMPDEST 
0x60f: V590 = 0x7d3
0x612: JUMP 0x7d3
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x613
[0x613:0x61f]
---
Predecessors: [0x17d]
Successors: [0x620, 0x697]
---
0x613 JUMPDEST
0x614 PUSH1 0x5
0x616 SLOAD
0x617 PUSH1 0x8
0x619 SLOAD
0x61a LT
0x61b ISZERO
0x61c PUSH2 0x697
0x61f JUMPI
---
0x613: JUMPDEST 
0x614: V591 = 0x5
0x616: V592 = S[0x5]
0x617: V593 = 0x8
0x619: V594 = S[0x8]
0x61a: V595 = LT V594 V592
0x61b: V596 = ISZERO V595
0x61c: V597 = 0x697
0x61f: JUMPI 0x697 V596
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x620
[0x620:0x679]
---
Predecessors: [0x613]
Successors: [0x67a, 0x67e]
---
0x620 PUSH1 0x12
0x622 SLOAD
0x623 PUSH1 0x9
0x625 SLOAD
0x626 PUSH1 0x1
0x628 PUSH1 0xa0
0x62a PUSH1 0x2
0x62c EXP
0x62d SUB
0x62e SWAP1
0x62f SWAP2
0x630 AND
0x631 SWAP1
0x632 PUSH4 0xa9059cbb
0x637 SWAP1
0x638 CALLER
0x639 SWAP1
0x63a DUP5
0x63b MUL
0x63c PUSH1 0x40
0x63e MLOAD
0x63f PUSH1 0xe0
0x641 PUSH1 0x2
0x643 EXP
0x644 PUSH4 0xffffffff
0x649 DUP6
0x64a AND
0x64b MUL
0x64c DUP2
0x64d MSTORE
0x64e PUSH1 0x1
0x650 PUSH1 0xa0
0x652 PUSH1 0x2
0x654 EXP
0x655 SUB
0x656 SWAP1
0x657 SWAP3
0x658 AND
0x659 PUSH1 0x4
0x65b DUP4
0x65c ADD
0x65d MSTORE
0x65e PUSH1 0x24
0x660 DUP3
0x661 ADD
0x662 MSTORE
0x663 PUSH1 0x44
0x665 ADD
0x666 PUSH1 0x0
0x668 PUSH1 0x40
0x66a MLOAD
0x66b DUP1
0x66c DUP4
0x66d SUB
0x66e DUP2
0x66f PUSH1 0x0
0x671 DUP8
0x672 DUP1
0x673 EXTCODESIZE
0x674 ISZERO
0x675 ISZERO
0x676 PUSH2 0x67e
0x679 JUMPI
---
0x620: V598 = 0x12
0x622: V599 = S[0x12]
0x623: V600 = 0x9
0x625: V601 = S[0x9]
0x626: V602 = 0x1
0x628: V603 = 0xa0
0x62a: V604 = 0x2
0x62c: V605 = EXP 0x2 0xa0
0x62d: V606 = SUB 0x10000000000000000000000000000000000000000 0x1
0x630: V607 = AND V599 0xffffffffffffffffffffffffffffffffffffffff
0x632: V608 = 0xa9059cbb
0x638: V609 = CALLER
0x63b: V610 = MUL V126 V601
0x63c: V611 = 0x40
0x63e: V612 = M[0x40]
0x63f: V613 = 0xe0
0x641: V614 = 0x2
0x643: V615 = EXP 0x2 0xe0
0x644: V616 = 0xffffffff
0x64a: V617 = AND 0xa9059cbb 0xffffffff
0x64b: V618 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x64d: M[V612] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x64e: V619 = 0x1
0x650: V620 = 0xa0
0x652: V621 = 0x2
0x654: V622 = EXP 0x2 0xa0
0x655: V623 = SUB 0x10000000000000000000000000000000000000000 0x1
0x658: V624 = AND V609 0xffffffffffffffffffffffffffffffffffffffff
0x659: V625 = 0x4
0x65c: V626 = ADD V612 0x4
0x65d: M[V626] = V624
0x65e: V627 = 0x24
0x661: V628 = ADD V612 0x24
0x662: M[V628] = V610
0x663: V629 = 0x44
0x665: V630 = ADD 0x44 V612
0x666: V631 = 0x0
0x668: V632 = 0x40
0x66a: V633 = M[0x40]
0x66d: V634 = SUB V630 V633
0x66f: V635 = 0x0
0x673: V636 = EXTCODESIZE V607
0x674: V637 = ISZERO V636
0x675: V638 = ISZERO V637
0x676: V639 = 0x67e
0x679: JUMPI 0x67e V638
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V607, 0xa9059cbb, V630, 0x0, V633, V634, V633, 0x0, V607]
Exit stack: [V12, V126, V607, 0xa9059cbb, V630, 0x0, V633, V634, V633, 0x0, V607]

================================

Block 0x67a
[0x67a:0x67d]
---
Predecessors: [0x620]
Successors: []
---
0x67a PUSH1 0x0
0x67c DUP1
0x67d REVERT
---
0x67a: V640 = 0x0
0x67d: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V607, 0xa9059cbb, V630, 0x0, V633, V634, V633, 0x0, V607]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V607, 0xa9059cbb, V630, 0x0, V633, V634, V633, 0x0, V607]

================================

Block 0x67e
[0x67e:0x68a]
---
Predecessors: [0x620, 0x6a4]
Successors: [0x68b, 0x68f]
---
0x67e JUMPDEST
0x67f PUSH2 0x2c6
0x682 GAS
0x683 SUB
0x684 CALL
0x685 ISZERO
0x686 ISZERO
0x687 PUSH2 0x68f
0x68a JUMPI
---
0x67e: JUMPDEST 
0x67f: V641 = 0x2c6
0x682: V642 = GAS
0x683: V643 = SUB V642 0x2c6
0x684: V644 = CALL V643 S0 0x0 S2 S3 S4 0x0
0x685: V645 = ISZERO V644
0x686: V646 = ISZERO V645
0x687: V647 = 0x68f
0x68a: JUMPI 0x68f V646
---
Entry stack: [V12, V126, S8, 0xa9059cbb, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V126, S8, 0xa9059cbb, S6]

================================

Block 0x68b
[0x68b:0x68e]
---
Predecessors: [0x67e]
Successors: []
---
0x68b PUSH1 0x0
0x68d DUP1
0x68e REVERT
---
0x68b: V648 = 0x0
0x68e: REVERT 0x0 0x0
---
Entry stack: [V12, V126, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, S2, 0xa9059cbb, S0]

================================

Block 0x68f
[0x68f:0x696]
---
Predecessors: [0x67e, 0x702]
Successors: [0x78f]
---
0x68f JUMPDEST
0x690 POP
0x691 POP
0x692 POP
0x693 PUSH2 0x78f
0x696 JUMP
---
0x68f: JUMPDEST 
0x693: V649 = 0x78f
0x696: JUMP 0x78f
---
Entry stack: [V12, V126, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x697
[0x697:0x6a3]
---
Predecessors: [0x613]
Successors: [0x6a4, 0x71b]
---
0x697 JUMPDEST
0x698 PUSH1 0x6
0x69a SLOAD
0x69b PUSH1 0x8
0x69d SLOAD
0x69e LT
0x69f ISZERO
0x6a0 PUSH2 0x71b
0x6a3 JUMPI
---
0x697: JUMPDEST 
0x698: V650 = 0x6
0x69a: V651 = S[0x6]
0x69b: V652 = 0x8
0x69d: V653 = S[0x8]
0x69e: V654 = LT V653 V651
0x69f: V655 = ISZERO V654
0x6a0: V656 = 0x71b
0x6a3: JUMPI 0x71b V655
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x6a4
[0x6a4:0x6fd]
---
Predecessors: [0x697]
Successors: [0x67e, 0x6fe]
---
0x6a4 PUSH1 0x12
0x6a6 SLOAD
0x6a7 PUSH1 0xa
0x6a9 SLOAD
0x6aa PUSH1 0x1
0x6ac PUSH1 0xa0
0x6ae PUSH1 0x2
0x6b0 EXP
0x6b1 SUB
0x6b2 SWAP1
0x6b3 SWAP2
0x6b4 AND
0x6b5 SWAP1
0x6b6 PUSH4 0xa9059cbb
0x6bb SWAP1
0x6bc CALLER
0x6bd SWAP1
0x6be DUP5
0x6bf MUL
0x6c0 PUSH1 0x40
0x6c2 MLOAD
0x6c3 PUSH1 0xe0
0x6c5 PUSH1 0x2
0x6c7 EXP
0x6c8 PUSH4 0xffffffff
0x6cd DUP6
0x6ce AND
0x6cf MUL
0x6d0 DUP2
0x6d1 MSTORE
0x6d2 PUSH1 0x1
0x6d4 PUSH1 0xa0
0x6d6 PUSH1 0x2
0x6d8 EXP
0x6d9 SUB
0x6da SWAP1
0x6db SWAP3
0x6dc AND
0x6dd PUSH1 0x4
0x6df DUP4
0x6e0 ADD
0x6e1 MSTORE
0x6e2 PUSH1 0x24
0x6e4 DUP3
0x6e5 ADD
0x6e6 MSTORE
0x6e7 PUSH1 0x44
0x6e9 ADD
0x6ea PUSH1 0x0
0x6ec PUSH1 0x40
0x6ee MLOAD
0x6ef DUP1
0x6f0 DUP4
0x6f1 SUB
0x6f2 DUP2
0x6f3 PUSH1 0x0
0x6f5 DUP8
0x6f6 DUP1
0x6f7 EXTCODESIZE
0x6f8 ISZERO
0x6f9 ISZERO
0x6fa PUSH2 0x67e
0x6fd JUMPI
---
0x6a4: V657 = 0x12
0x6a6: V658 = S[0x12]
0x6a7: V659 = 0xa
0x6a9: V660 = S[0xa]
0x6aa: V661 = 0x1
0x6ac: V662 = 0xa0
0x6ae: V663 = 0x2
0x6b0: V664 = EXP 0x2 0xa0
0x6b1: V665 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b4: V666 = AND V658 0xffffffffffffffffffffffffffffffffffffffff
0x6b6: V667 = 0xa9059cbb
0x6bc: V668 = CALLER
0x6bf: V669 = MUL V126 V660
0x6c0: V670 = 0x40
0x6c2: V671 = M[0x40]
0x6c3: V672 = 0xe0
0x6c5: V673 = 0x2
0x6c7: V674 = EXP 0x2 0xe0
0x6c8: V675 = 0xffffffff
0x6ce: V676 = AND 0xa9059cbb 0xffffffff
0x6cf: V677 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x6d1: M[V671] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6d2: V678 = 0x1
0x6d4: V679 = 0xa0
0x6d6: V680 = 0x2
0x6d8: V681 = EXP 0x2 0xa0
0x6d9: V682 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6dc: V683 = AND V668 0xffffffffffffffffffffffffffffffffffffffff
0x6dd: V684 = 0x4
0x6e0: V685 = ADD V671 0x4
0x6e1: M[V685] = V683
0x6e2: V686 = 0x24
0x6e5: V687 = ADD V671 0x24
0x6e6: M[V687] = V669
0x6e7: V688 = 0x44
0x6e9: V689 = ADD 0x44 V671
0x6ea: V690 = 0x0
0x6ec: V691 = 0x40
0x6ee: V692 = M[0x40]
0x6f1: V693 = SUB V689 V692
0x6f3: V694 = 0x0
0x6f7: V695 = EXTCODESIZE V666
0x6f8: V696 = ISZERO V695
0x6f9: V697 = ISZERO V696
0x6fa: V698 = 0x67e
0x6fd: JUMPI 0x67e V697
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V666, 0xa9059cbb, V689, 0x0, V692, V693, V692, 0x0, V666]
Exit stack: [V12, V126, V666, 0xa9059cbb, V689, 0x0, V692, V693, V692, 0x0, V666]

================================

Block 0x6fe
[0x6fe:0x701]
---
Predecessors: [0x6a4]
Successors: []
---
0x6fe PUSH1 0x0
0x700 DUP1
0x701 REVERT
---
0x6fe: V699 = 0x0
0x701: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V666, 0xa9059cbb, V689, 0x0, V692, V693, V692, 0x0, V666]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V666, 0xa9059cbb, V689, 0x0, V692, V693, V692, 0x0, V666]

================================

Block 0x702
[0x702:0x70e]
---
Predecessors: []
Successors: [0x68f, 0x70f]
---
0x702 JUMPDEST
0x703 PUSH2 0x2c6
0x706 GAS
0x707 SUB
0x708 CALL
0x709 ISZERO
0x70a ISZERO
0x70b PUSH2 0x68f
0x70e JUMPI
---
0x702: JUMPDEST 
0x703: V700 = 0x2c6
0x706: V701 = GAS
0x707: V702 = SUB V701 0x2c6
0x708: V703 = CALL V702 S0 S1 S2 S3 S4 S5
0x709: V704 = ISZERO V703
0x70a: V705 = ISZERO V704
0x70b: V706 = 0x68f
0x70e: JUMPI 0x68f V705
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x70f
[0x70f:0x71a]
---
Predecessors: [0x702]
Successors: [0x78f]
---
0x70f PUSH1 0x0
0x711 DUP1
0x712 REVERT
0x713 JUMPDEST
0x714 POP
0x715 POP
0x716 POP
0x717 PUSH2 0x78f
0x71a JUMP
---
0x70f: V707 = 0x0
0x712: REVERT 0x0 0x0
0x713: JUMPDEST 
0x717: V708 = 0x78f
0x71a: JUMP 0x78f
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x71b
[0x71b:0x775]
---
Predecessors: [0x697]
Successors: [0x776, 0x77a]
---
0x71b JUMPDEST
0x71c PUSH1 0x12
0x71e SLOAD
0x71f PUSH1 0xb
0x721 SLOAD
0x722 PUSH1 0x1
0x724 PUSH1 0xa0
0x726 PUSH1 0x2
0x728 EXP
0x729 SUB
0x72a SWAP1
0x72b SWAP2
0x72c AND
0x72d SWAP1
0x72e PUSH4 0xa9059cbb
0x733 SWAP1
0x734 CALLER
0x735 SWAP1
0x736 DUP5
0x737 MUL
0x738 PUSH1 0x40
0x73a MLOAD
0x73b PUSH1 0xe0
0x73d PUSH1 0x2
0x73f EXP
0x740 PUSH4 0xffffffff
0x745 DUP6
0x746 AND
0x747 MUL
0x748 DUP2
0x749 MSTORE
0x74a PUSH1 0x1
0x74c PUSH1 0xa0
0x74e PUSH1 0x2
0x750 EXP
0x751 SUB
0x752 SWAP1
0x753 SWAP3
0x754 AND
0x755 PUSH1 0x4
0x757 DUP4
0x758 ADD
0x759 MSTORE
0x75a PUSH1 0x24
0x75c DUP3
0x75d ADD
0x75e MSTORE
0x75f PUSH1 0x44
0x761 ADD
0x762 PUSH1 0x0
0x764 PUSH1 0x40
0x766 MLOAD
0x767 DUP1
0x768 DUP4
0x769 SUB
0x76a DUP2
0x76b PUSH1 0x0
0x76d DUP8
0x76e DUP1
0x76f EXTCODESIZE
0x770 ISZERO
0x771 ISZERO
0x772 PUSH2 0x77a
0x775 JUMPI
---
0x71b: JUMPDEST 
0x71c: V709 = 0x12
0x71e: V710 = S[0x12]
0x71f: V711 = 0xb
0x721: V712 = S[0xb]
0x722: V713 = 0x1
0x724: V714 = 0xa0
0x726: V715 = 0x2
0x728: V716 = EXP 0x2 0xa0
0x729: V717 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72c: V718 = AND V710 0xffffffffffffffffffffffffffffffffffffffff
0x72e: V719 = 0xa9059cbb
0x734: V720 = CALLER
0x737: V721 = MUL V126 V712
0x738: V722 = 0x40
0x73a: V723 = M[0x40]
0x73b: V724 = 0xe0
0x73d: V725 = 0x2
0x73f: V726 = EXP 0x2 0xe0
0x740: V727 = 0xffffffff
0x746: V728 = AND 0xa9059cbb 0xffffffff
0x747: V729 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x749: M[V723] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x74a: V730 = 0x1
0x74c: V731 = 0xa0
0x74e: V732 = 0x2
0x750: V733 = EXP 0x2 0xa0
0x751: V734 = SUB 0x10000000000000000000000000000000000000000 0x1
0x754: V735 = AND V720 0xffffffffffffffffffffffffffffffffffffffff
0x755: V736 = 0x4
0x758: V737 = ADD V723 0x4
0x759: M[V737] = V735
0x75a: V738 = 0x24
0x75d: V739 = ADD V723 0x24
0x75e: M[V739] = V721
0x75f: V740 = 0x44
0x761: V741 = ADD 0x44 V723
0x762: V742 = 0x0
0x764: V743 = 0x40
0x766: V744 = M[0x40]
0x769: V745 = SUB V741 V744
0x76b: V746 = 0x0
0x76f: V747 = EXTCODESIZE V718
0x770: V748 = ISZERO V747
0x771: V749 = ISZERO V748
0x772: V750 = 0x77a
0x775: JUMPI 0x77a V749
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V718, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V718]
Exit stack: [V12, V126, V718, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V718]

================================

Block 0x776
[0x776:0x779]
---
Predecessors: [0x71b]
Successors: []
---
0x776 PUSH1 0x0
0x778 DUP1
0x779 REVERT
---
0x776: V751 = 0x0
0x779: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V718, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V718]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V718, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V718]

================================

Block 0x77a
[0x77a:0x786]
---
Predecessors: [0x71b]
Successors: [0x787, 0x78b]
---
0x77a JUMPDEST
0x77b PUSH2 0x2c6
0x77e GAS
0x77f SUB
0x780 CALL
0x781 ISZERO
0x782 ISZERO
0x783 PUSH2 0x78b
0x786 JUMPI
---
0x77a: JUMPDEST 
0x77b: V752 = 0x2c6
0x77e: V753 = GAS
0x77f: V754 = SUB V753 0x2c6
0x780: V755 = CALL V754 V718 0x0 V744 V745 V744 0x0
0x781: V756 = ISZERO V755
0x782: V757 = ISZERO V756
0x783: V758 = 0x78b
0x786: JUMPI 0x78b V757
---
Entry stack: [V12, V126, V718, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V718]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V126, V718, 0xa9059cbb, V741]

================================

Block 0x787
[0x787:0x78a]
---
Predecessors: [0x77a]
Successors: []
---
0x787 PUSH1 0x0
0x789 DUP1
0x78a REVERT
---
0x787: V759 = 0x0
0x78a: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V718, 0xa9059cbb, V741]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V718, 0xa9059cbb, V741]

================================

Block 0x78b
[0x78b:0x78e]
---
Predecessors: [0x77a]
Successors: [0x78f]
---
0x78b JUMPDEST
0x78c POP
0x78d POP
0x78e POP
---
0x78b: JUMPDEST 
---
Entry stack: [V12, V126, V718, 0xa9059cbb, V741]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x78f
[0x78f:0x78f]
---
Predecessors: [0x68f, 0x70f, 0x78b]
Successors: [0x790]
---
0x78f JUMPDEST
---
0x78f: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x790
[0x790:0x7d2]
---
Predecessors: [0x78f]
Successors: [0x7d3]
---
0x790 JUMPDEST
0x791 PUSH1 0x0
0x793 DUP1
0x794 MLOAD
0x795 PUSH1 0x20
0x797 PUSH2 0xfc4
0x79a DUP4
0x79b CODECOPY
0x79c DUP2
0x79d MLOAD
0x79e SWAP2
0x79f MSTORE
0x7a0 CALLER
0x7a1 DUP3
0x7a2 PUSH1 0x1
0x7a4 PUSH1 0x40
0x7a6 MLOAD
0x7a7 PUSH1 0x1
0x7a9 PUSH1 0xa0
0x7ab PUSH1 0x2
0x7ad EXP
0x7ae SUB
0x7af SWAP1
0x7b0 SWAP4
0x7b1 AND
0x7b2 DUP4
0x7b3 MSTORE
0x7b4 PUSH1 0x20
0x7b6 DUP4
0x7b7 ADD
0x7b8 SWAP2
0x7b9 SWAP1
0x7ba SWAP2
0x7bb MSTORE
0x7bc ISZERO
0x7bd ISZERO
0x7be PUSH1 0x40
0x7c0 DUP1
0x7c1 DUP4
0x7c2 ADD
0x7c3 SWAP2
0x7c4 SWAP1
0x7c5 SWAP2
0x7c6 MSTORE
0x7c7 PUSH1 0x60
0x7c9 SWAP1
0x7ca SWAP2
0x7cb ADD
0x7cc SWAP1
0x7cd MLOAD
0x7ce DUP1
0x7cf SWAP2
0x7d0 SUB
0x7d1 SWAP1
0x7d2 LOG1
---
0x790: JUMPDEST 
0x791: V760 = 0x0
0x794: V761 = M[0x0]
0x795: V762 = 0x20
0x797: V763 = 0xfc4
0x79b: CODECOPY 0x0 0xfc4 0x20
0x79d: V764 = M[0x0]
0x79f: M[0x0] = V761
0x7a0: V765 = CALLER
0x7a2: V766 = 0x1
0x7a4: V767 = 0x40
0x7a6: V768 = M[0x40]
0x7a7: V769 = 0x1
0x7a9: V770 = 0xa0
0x7ab: V771 = 0x2
0x7ad: V772 = EXP 0x2 0xa0
0x7ae: V773 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b1: V774 = AND V765 0xffffffffffffffffffffffffffffffffffffffff
0x7b3: M[V768] = V774
0x7b4: V775 = 0x20
0x7b7: V776 = ADD V768 0x20
0x7bb: M[V776] = V126
0x7bc: V777 = ISZERO 0x1
0x7bd: V778 = ISZERO 0x0
0x7be: V779 = 0x40
0x7c2: V780 = ADD V768 0x40
0x7c6: M[V780] = 0x1
0x7c7: V781 = 0x60
0x7cb: V782 = ADD V768 0x60
0x7cd: V783 = M[0x40]
0x7d0: V784 = SUB V782 V783
0x7d2: LOG V783 V784 V764
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x7d3
[0x7d3:0x7d3]
---
Predecessors: [0x60e, 0x790]
Successors: [0x7d4]
---
0x7d3 JUMPDEST
---
0x7d3: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x7d4
[0x7d4:0x7d6]
---
Predecessors: [0x7d3]
Successors: []
---
0x7d4 JUMPDEST
0x7d5 POP
0x7d6 STOP
---
0x7d4: JUMPDEST 
0x7d6: STOP 
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d7
[0x7d7:0x7dd]
---
Predecessors: [0xb]
Successors: [0x7de, 0x7e2]
---
0x7d7 JUMPDEST
0x7d8 CALLVALUE
0x7d9 ISZERO
0x7da PUSH2 0x7e2
0x7dd JUMPI
---
0x7d7: JUMPDEST 
0x7d8: V785 = CALLVALUE
0x7d9: V786 = ISZERO V785
0x7da: V787 = 0x7e2
0x7dd: JUMPI 0x7e2 V786
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7de
[0x7de:0x7e1]
---
Predecessors: [0x7d7]
Successors: []
---
0x7de PUSH1 0x0
0x7e0 DUP1
0x7e1 REVERT
---
0x7de: V788 = 0x0
0x7e1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e2
[0x7e2:0x7e9]
---
Predecessors: [0x7d7]
Successors: [0xbf0]
---
0x7e2 JUMPDEST
0x7e3 PUSH2 0x7ea
0x7e6 PUSH2 0xbf0
0x7e9 JUMP
---
0x7e2: JUMPDEST 
0x7e3: V789 = 0x7ea
0x7e6: V790 = 0xbf0
0x7e9: JUMP 0xbf0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ea]
Exit stack: [V12, 0x7ea]

================================

Block 0x7ea
[0x7ea:0x7eb]
---
Predecessors: [0xc39, 0xccf, 0xd23, 0xdb3, 0xddd, 0xe32, 0xfc0]
Successors: []
---
0x7ea JUMPDEST
0x7eb STOP
---
0x7ea: JUMPDEST 
0x7eb: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7ec
[0x7ec:0x7f2]
---
Predecessors: [0x25]
Successors: [0x7f3, 0x7f7]
---
0x7ec JUMPDEST
0x7ed CALLVALUE
0x7ee ISZERO
0x7ef PUSH2 0x7f7
0x7f2 JUMPI
---
0x7ec: JUMPDEST 
0x7ed: V791 = CALLVALUE
0x7ee: V792 = ISZERO V791
0x7ef: V793 = 0x7f7
0x7f2: JUMPI 0x7f7 V792
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f3
[0x7f3:0x7f6]
---
Predecessors: [0x7ec]
Successors: []
---
0x7f3 PUSH1 0x0
0x7f5 DUP1
0x7f6 REVERT
---
0x7f3: V794 = 0x0
0x7f6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f7
[0x7f7:0x7fe]
---
Predecessors: [0x7ec]
Successors: [0xc3b]
---
0x7f7 JUMPDEST
0x7f8 PUSH2 0x7ff
0x7fb PUSH2 0xc3b
0x7fe JUMP
---
0x7f7: JUMPDEST 
0x7f8: V795 = 0x7ff
0x7fb: V796 = 0xc3b
0x7fe: JUMP 0xc3b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff]
Exit stack: [V12, 0x7ff]

================================

Block 0x7ff
[0x7ff:0x810]
---
Predecessors: [0xc3b, 0xcd2, 0xcd8, 0xcde, 0xcf3, 0xcf9, 0xd52, 0xd64, 0xd6a, 0xd70, 0xd76, 0xd7c, 0xd82, 0xd88, 0xddf, 0xde5, 0xdeb]
Successors: []
---
0x7ff JUMPDEST
0x800 PUSH1 0x40
0x802 MLOAD
0x803 SWAP1
0x804 DUP2
0x805 MSTORE
0x806 PUSH1 0x20
0x808 ADD
0x809 PUSH1 0x40
0x80b MLOAD
0x80c DUP1
0x80d SWAP2
0x80e SUB
0x80f SWAP1
0x810 RETURN
---
0x7ff: JUMPDEST 
0x800: V797 = 0x40
0x802: V798 = M[0x40]
0x805: M[V798] = S0
0x806: V799 = 0x20
0x808: V800 = ADD 0x20 V798
0x809: V801 = 0x40
0x80b: V802 = M[0x40]
0x80e: V803 = SUB V800 V802
0x810: RETURN V802 V803
---
Entry stack: [V12, 0x7ff, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x7ff]

================================

Block 0x811
[0x811:0x817]
---
Predecessors: [0x30]
Successors: [0x818, 0x81c]
---
0x811 JUMPDEST
0x812 CALLVALUE
0x813 ISZERO
0x814 PUSH2 0x81c
0x817 JUMPI
---
0x811: JUMPDEST 
0x812: V804 = CALLVALUE
0x813: V805 = ISZERO V804
0x814: V806 = 0x81c
0x817: JUMPI 0x81c V805
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x818
[0x818:0x81b]
---
Predecessors: [0x811]
Successors: []
---
0x818 PUSH1 0x0
0x81a DUP1
0x81b REVERT
---
0x818: V807 = 0x0
0x81b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81c
[0x81c:0x826]
---
Predecessors: [0x811]
Successors: [0xc41]
---
0x81c JUMPDEST
0x81d PUSH2 0x7ea
0x820 PUSH1 0x4
0x822 CALLDATALOAD
0x823 PUSH2 0xc41
0x826 JUMP
---
0x81c: JUMPDEST 
0x81d: V808 = 0x7ea
0x820: V809 = 0x4
0x822: V810 = CALLDATALOAD 0x4
0x823: V811 = 0xc41
0x826: JUMP 0xc41
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ea, V810]
Exit stack: [V12, 0x7ea, V810]

================================

Block 0x827
[0x827:0x828]
---
Predecessors: []
Successors: []
---
0x827 JUMPDEST
0x828 STOP
---
0x827: JUMPDEST 
0x828: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x829
[0x829:0x82f]
---
Predecessors: [0x3b]
Successors: [0x830, 0x834]
---
0x829 JUMPDEST
0x82a CALLVALUE
0x82b ISZERO
0x82c PUSH2 0x834
0x82f JUMPI
---
0x829: JUMPDEST 
0x82a: V812 = CALLVALUE
0x82b: V813 = ISZERO V812
0x82c: V814 = 0x834
0x82f: JUMPI 0x834 V813
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x830
[0x830:0x833]
---
Predecessors: [0x829]
Successors: []
---
0x830 PUSH1 0x0
0x832 DUP1
0x833 REVERT
---
0x830: V815 = 0x0
0x833: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x834
[0x834:0x83b]
---
Predecessors: [0x829]
Successors: [0xcd2]
---
0x834 JUMPDEST
0x835 PUSH2 0x7ff
0x838 PUSH2 0xcd2
0x83b JUMP
---
0x834: JUMPDEST 
0x835: V816 = 0x7ff
0x838: V817 = 0xcd2
0x83b: JUMP 0xcd2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff]
Exit stack: [V12, 0x7ff]

================================

Block 0x83c
[0x83c:0x84d]
---
Predecessors: []
Successors: []
---
0x83c JUMPDEST
0x83d PUSH1 0x40
0x83f MLOAD
0x840 SWAP1
0x841 DUP2
0x842 MSTORE
0x843 PUSH1 0x20
0x845 ADD
0x846 PUSH1 0x40
0x848 MLOAD
0x849 DUP1
0x84a SWAP2
0x84b SUB
0x84c SWAP1
0x84d RETURN
---
0x83c: JUMPDEST 
0x83d: V818 = 0x40
0x83f: V819 = M[0x40]
0x842: M[V819] = S0
0x843: V820 = 0x20
0x845: V821 = ADD 0x20 V819
0x846: V822 = 0x40
0x848: V823 = M[0x40]
0x84b: V824 = SUB V821 V823
0x84d: RETURN V823 V824
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x84e
[0x84e:0x854]
---
Predecessors: [0x46]
Successors: [0x855, 0x859]
---
0x84e JUMPDEST
0x84f CALLVALUE
0x850 ISZERO
0x851 PUSH2 0x859
0x854 JUMPI
---
0x84e: JUMPDEST 
0x84f: V825 = CALLVALUE
0x850: V826 = ISZERO V825
0x851: V827 = 0x859
0x854: JUMPI 0x859 V826
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x855
[0x855:0x858]
---
Predecessors: [0x84e]
Successors: []
---
0x855 PUSH1 0x0
0x857 DUP1
0x858 REVERT
---
0x855: V828 = 0x0
0x858: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x859
[0x859:0x860]
---
Predecessors: [0x84e]
Successors: [0xcd8]
---
0x859 JUMPDEST
0x85a PUSH2 0x7ff
0x85d PUSH2 0xcd8
0x860 JUMP
---
0x859: JUMPDEST 
0x85a: V829 = 0x7ff
0x85d: V830 = 0xcd8
0x860: JUMP 0xcd8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff]
Exit stack: [V12, 0x7ff]

================================

Block 0x861
[0x861:0x872]
---
Predecessors: []
Successors: []
---
0x861 JUMPDEST
0x862 PUSH1 0x40
0x864 MLOAD
0x865 SWAP1
0x866 DUP2
0x867 MSTORE
0x868 PUSH1 0x20
0x86a ADD
0x86b PUSH1 0x40
0x86d MLOAD
0x86e DUP1
0x86f SWAP2
0x870 SUB
0x871 SWAP1
0x872 RETURN
---
0x861: JUMPDEST 
0x862: V831 = 0x40
0x864: V832 = M[0x40]
0x867: M[V832] = S0
0x868: V833 = 0x20
0x86a: V834 = ADD 0x20 V832
0x86b: V835 = 0x40
0x86d: V836 = M[0x40]
0x870: V837 = SUB V834 V836
0x872: RETURN V836 V837
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x873
[0x873:0x879]
---
Predecessors: [0x51]
Successors: [0x87a, 0x87e]
---
0x873 JUMPDEST
0x874 CALLVALUE
0x875 ISZERO
0x876 PUSH2 0x87e
0x879 JUMPI
---
0x873: JUMPDEST 
0x874: V838 = CALLVALUE
0x875: V839 = ISZERO V838
0x876: V840 = 0x87e
0x879: JUMPI 0x87e V839
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x87a
[0x87a:0x87d]
---
Predecessors: [0x873]
Successors: []
---
0x87a PUSH1 0x0
0x87c DUP1
0x87d REVERT
---
0x87a: V841 = 0x0
0x87d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x87e
[0x87e:0x885]
---
Predecessors: [0x873]
Successors: [0xcde]
---
0x87e JUMPDEST
0x87f PUSH2 0x7ff
0x882 PUSH2 0xcde
0x885 JUMP
---
0x87e: JUMPDEST 
0x87f: V842 = 0x7ff
0x882: V843 = 0xcde
0x885: JUMP 0xcde
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff]
Exit stack: [V12, 0x7ff]

================================

Block 0x886
[0x886:0x897]
---
Predecessors: []
Successors: []
---
0x886 JUMPDEST
0x887 PUSH1 0x40
0x889 MLOAD
0x88a SWAP1
0x88b DUP2
0x88c MSTORE
0x88d PUSH1 0x20
0x88f ADD
0x890 PUSH1 0x40
0x892 MLOAD
0x893 DUP1
0x894 SWAP2
0x895 SUB
0x896 SWAP1
0x897 RETURN
---
0x886: JUMPDEST 
0x887: V844 = 0x40
0x889: V845 = M[0x40]
0x88c: M[V845] = S0
0x88d: V846 = 0x20
0x88f: V847 = ADD 0x20 V845
0x890: V848 = 0x40
0x892: V849 = M[0x40]
0x895: V850 = SUB V847 V849
0x897: RETURN V849 V850
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x898
[0x898:0x89e]
---
Predecessors: [0x5c]
Successors: [0x89f, 0x8a3]
---
0x898 JUMPDEST
0x899 CALLVALUE
0x89a ISZERO
0x89b PUSH2 0x8a3
0x89e JUMPI
---
0x898: JUMPDEST 
0x899: V851 = CALLVALUE
0x89a: V852 = ISZERO V851
0x89b: V853 = 0x8a3
0x89e: JUMPI 0x8a3 V852
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x89f
[0x89f:0x8a2]
---
Predecessors: [0x898]
Successors: []
---
0x89f PUSH1 0x0
0x8a1 DUP1
0x8a2 REVERT
---
0x89f: V854 = 0x0
0x8a2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a3
[0x8a3:0x8aa]
---
Predecessors: [0x898]
Successors: [0xce4]
---
0x8a3 JUMPDEST
0x8a4 PUSH2 0x8ab
0x8a7 PUSH2 0xce4
0x8aa JUMP
---
0x8a3: JUMPDEST 
0x8a4: V855 = 0x8ab
0x8a7: V856 = 0xce4
0x8aa: JUMP 0xce4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8ab]
Exit stack: [V12, 0x8ab]

================================

Block 0x8ab
[0x8ab:0x8c6]
---
Predecessors: [0xce4, 0xd25, 0xd43]
Successors: []
---
0x8ab JUMPDEST
0x8ac PUSH1 0x40
0x8ae MLOAD
0x8af PUSH1 0x1
0x8b1 PUSH1 0xa0
0x8b3 PUSH1 0x2
0x8b5 EXP
0x8b6 SUB
0x8b7 SWAP1
0x8b8 SWAP2
0x8b9 AND
0x8ba DUP2
0x8bb MSTORE
0x8bc PUSH1 0x20
0x8be ADD
0x8bf PUSH1 0x40
0x8c1 MLOAD
0x8c2 DUP1
0x8c3 SWAP2
0x8c4 SUB
0x8c5 SWAP1
0x8c6 RETURN
---
0x8ab: JUMPDEST 
0x8ac: V857 = 0x40
0x8ae: V858 = M[0x40]
0x8af: V859 = 0x1
0x8b1: V860 = 0xa0
0x8b3: V861 = 0x2
0x8b5: V862 = EXP 0x2 0xa0
0x8b6: V863 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b9: V864 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x8bb: M[V858] = V864
0x8bc: V865 = 0x20
0x8be: V866 = ADD 0x20 V858
0x8bf: V867 = 0x40
0x8c1: V868 = M[0x40]
0x8c4: V869 = SUB V866 V868
0x8c6: RETURN V868 V869
---
Entry stack: [V12, 0x8ab, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x8ab]

================================

Block 0x8c7
[0x8c7:0x8cd]
---
Predecessors: [0x67]
Successors: [0x8ce, 0x8d2]
---
0x8c7 JUMPDEST
0x8c8 CALLVALUE
0x8c9 ISZERO
0x8ca PUSH2 0x8d2
0x8cd JUMPI
---
0x8c7: JUMPDEST 
0x8c8: V870 = CALLVALUE
0x8c9: V871 = ISZERO V870
0x8ca: V872 = 0x8d2
0x8cd: JUMPI 0x8d2 V871
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8ce
[0x8ce:0x8d1]
---
Predecessors: [0x8c7]
Successors: []
---
0x8ce PUSH1 0x0
0x8d0 DUP1
0x8d1 REVERT
---
0x8ce: V873 = 0x0
0x8d1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8d2
[0x8d2:0x8d9]
---
Predecessors: [0x8c7]
Successors: [0xcf3]
---
0x8d2 JUMPDEST
0x8d3 PUSH2 0x7ff
0x8d6 PUSH2 0xcf3
0x8d9 JUMP
---
0x8d2: JUMPDEST 
0x8d3: V874 = 0x7ff
0x8d6: V875 = 0xcf3
0x8d9: JUMP 0xcf3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff]
Exit stack: [V12, 0x7ff]

================================

Block 0x8da
[0x8da:0x8eb]
---
Predecessors: []
Successors: []
---
0x8da JUMPDEST
0x8db PUSH1 0x40
0x8dd MLOAD
0x8de SWAP1
0x8df DUP2
0x8e0 MSTORE
0x8e1 PUSH1 0x20
0x8e3 ADD
0x8e4 PUSH1 0x40
0x8e6 MLOAD
0x8e7 DUP1
0x8e8 SWAP2
0x8e9 SUB
0x8ea SWAP1
0x8eb RETURN
---
0x8da: JUMPDEST 
0x8db: V876 = 0x40
0x8dd: V877 = M[0x40]
0x8e0: M[V877] = S0
0x8e1: V878 = 0x20
0x8e3: V879 = ADD 0x20 V877
0x8e4: V880 = 0x40
0x8e6: V881 = M[0x40]
0x8e9: V882 = SUB V879 V881
0x8eb: RETURN V881 V882
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8ec
[0x8ec:0x8f2]
---
Predecessors: [0x72]
Successors: [0x8f3, 0x8f7]
---
0x8ec JUMPDEST
0x8ed CALLVALUE
0x8ee ISZERO
0x8ef PUSH2 0x8f7
0x8f2 JUMPI
---
0x8ec: JUMPDEST 
0x8ed: V883 = CALLVALUE
0x8ee: V884 = ISZERO V883
0x8ef: V885 = 0x8f7
0x8f2: JUMPI 0x8f7 V884
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8f3
[0x8f3:0x8f6]
---
Predecessors: [0x8ec]
Successors: []
---
0x8f3 PUSH1 0x0
0x8f5 DUP1
0x8f6 REVERT
---
0x8f3: V886 = 0x0
0x8f6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8f7
[0x8f7:0x8fe]
---
Predecessors: [0x8ec]
Successors: [0xcf9]
---
0x8f7 JUMPDEST
0x8f8 PUSH2 0x7ff
0x8fb PUSH2 0xcf9
0x8fe JUMP
---
0x8f7: JUMPDEST 
0x8f8: V887 = 0x7ff
0x8fb: V888 = 0xcf9
0x8fe: JUMP 0xcf9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff]
Exit stack: [V12, 0x7ff]

================================

Block 0x8ff
[0x8ff:0x910]
---
Predecessors: []
Successors: []
---
0x8ff JUMPDEST
0x900 PUSH1 0x40
0x902 MLOAD
0x903 SWAP1
0x904 DUP2
0x905 MSTORE
0x906 PUSH1 0x20
0x908 ADD
0x909 PUSH1 0x40
0x90b MLOAD
0x90c DUP1
0x90d SWAP2
0x90e SUB
0x90f SWAP1
0x910 RETURN
---
0x8ff: JUMPDEST 
0x900: V889 = 0x40
0x902: V890 = M[0x40]
0x905: M[V890] = S0
0x906: V891 = 0x20
0x908: V892 = ADD 0x20 V890
0x909: V893 = 0x40
0x90b: V894 = M[0x40]
0x90e: V895 = SUB V892 V894
0x910: RETURN V894 V895
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x911
[0x911:0x917]
---
Predecessors: [0x7d]
Successors: [0x918, 0x91c]
---
0x911 JUMPDEST
0x912 CALLVALUE
0x913 ISZERO
0x914 PUSH2 0x91c
0x917 JUMPI
---
0x911: JUMPDEST 
0x912: V896 = CALLVALUE
0x913: V897 = ISZERO V896
0x914: V898 = 0x91c
0x917: JUMPI 0x91c V897
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x918
[0x918:0x91b]
---
Predecessors: [0x911]
Successors: []
---
0x918 PUSH1 0x0
0x91a DUP1
0x91b REVERT
---
0x918: V899 = 0x0
0x91b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x91c
[0x91c:0x923]
---
Predecessors: [0x911]
Successors: [0xcff]
---
0x91c JUMPDEST
0x91d PUSH2 0x7ea
0x920 PUSH2 0xcff
0x923 JUMP
---
0x91c: JUMPDEST 
0x91d: V900 = 0x7ea
0x920: V901 = 0xcff
0x923: JUMP 0xcff
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ea]
Exit stack: [V12, 0x7ea]

================================

Block 0x924
[0x924:0x925]
---
Predecessors: []
Successors: []
---
0x924 JUMPDEST
0x925 STOP
---
0x924: JUMPDEST 
0x925: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x926
[0x926:0x92c]
---
Predecessors: [0x88]
Successors: [0x92d, 0x931]
---
0x926 JUMPDEST
0x927 CALLVALUE
0x928 ISZERO
0x929 PUSH2 0x931
0x92c JUMPI
---
0x926: JUMPDEST 
0x927: V902 = CALLVALUE
0x928: V903 = ISZERO V902
0x929: V904 = 0x931
0x92c: JUMPI 0x931 V903
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x92d
[0x92d:0x930]
---
Predecessors: [0x926]
Successors: []
---
0x92d PUSH1 0x0
0x92f DUP1
0x930 REVERT
---
0x92d: V905 = 0x0
0x930: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x931
[0x931:0x938]
---
Predecessors: [0x926]
Successors: [0xd25]
---
0x931 JUMPDEST
0x932 PUSH2 0x8ab
0x935 PUSH2 0xd25
0x938 JUMP
---
0x931: JUMPDEST 
0x932: V906 = 0x8ab
0x935: V907 = 0xd25
0x938: JUMP 0xd25
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8ab]
Exit stack: [V12, 0x8ab]

================================

Block 0x939
[0x939:0x954]
---
Predecessors: []
Successors: []
---
0x939 JUMPDEST
0x93a PUSH1 0x40
0x93c MLOAD
0x93d PUSH1 0x1
0x93f PUSH1 0xa0
0x941 PUSH1 0x2
0x943 EXP
0x944 SUB
0x945 SWAP1
0x946 SWAP2
0x947 AND
0x948 DUP2
0x949 MSTORE
0x94a PUSH1 0x20
0x94c ADD
0x94d PUSH1 0x40
0x94f MLOAD
0x950 DUP1
0x951 SWAP2
0x952 SUB
0x953 SWAP1
0x954 RETURN
---
0x939: JUMPDEST 
0x93a: V908 = 0x40
0x93c: V909 = M[0x40]
0x93d: V910 = 0x1
0x93f: V911 = 0xa0
0x941: V912 = 0x2
0x943: V913 = EXP 0x2 0xa0
0x944: V914 = SUB 0x10000000000000000000000000000000000000000 0x1
0x947: V915 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x949: M[V909] = V915
0x94a: V916 = 0x20
0x94c: V917 = ADD 0x20 V909
0x94d: V918 = 0x40
0x94f: V919 = M[0x40]
0x952: V920 = SUB V917 V919
0x954: RETURN V919 V920
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x955
[0x955:0x95b]
---
Predecessors: [0x93]
Successors: [0x95c, 0x960]
---
0x955 JUMPDEST
0x956 CALLVALUE
0x957 ISZERO
0x958 PUSH2 0x960
0x95b JUMPI
---
0x955: JUMPDEST 
0x956: V921 = CALLVALUE
0x957: V922 = ISZERO V921
0x958: V923 = 0x960
0x95b: JUMPI 0x960 V922
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x95c
[0x95c:0x95f]
---
Predecessors: [0x955]
Successors: []
---
0x95c PUSH1 0x0
0x95e DUP1
0x95f REVERT
---
0x95c: V924 = 0x0
0x95f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x960
[0x960:0x967]
---
Predecessors: [0x955]
Successors: [0xd34]
---
0x960 JUMPDEST
0x961 PUSH2 0x968
0x964 PUSH2 0xd34
0x967 JUMP
---
0x960: JUMPDEST 
0x961: V925 = 0x968
0x964: V926 = 0xd34
0x967: JUMP 0xd34
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x968]
Exit stack: [V12, 0x968]

================================

Block 0x968
[0x968:0x97b]
---
Predecessors: [0xd34, 0xdf1, 0xdff]
Successors: []
---
0x968 JUMPDEST
0x969 PUSH1 0x40
0x96b MLOAD
0x96c SWAP1
0x96d ISZERO
0x96e ISZERO
0x96f DUP2
0x970 MSTORE
0x971 PUSH1 0x20
0x973 ADD
0x974 PUSH1 0x40
0x976 MLOAD
0x977 DUP1
0x978 SWAP2
0x979 SUB
0x97a SWAP1
0x97b RETURN
---
0x968: JUMPDEST 
0x969: V927 = 0x40
0x96b: V928 = M[0x40]
0x96d: V929 = ISZERO S0
0x96e: V930 = ISZERO V929
0x970: M[V928] = V930
0x971: V931 = 0x20
0x973: V932 = ADD 0x20 V928
0x974: V933 = 0x40
0x976: V934 = M[0x40]
0x979: V935 = SUB V932 V934
0x97b: RETURN V934 V935
---
Entry stack: [V12, 0x968, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x968]

================================

Block 0x97c
[0x97c:0x982]
---
Predecessors: [0x9e]
Successors: [0x983, 0x987]
---
0x97c JUMPDEST
0x97d CALLVALUE
0x97e ISZERO
0x97f PUSH2 0x987
0x982 JUMPI
---
0x97c: JUMPDEST 
0x97d: V936 = CALLVALUE
0x97e: V937 = ISZERO V936
0x97f: V938 = 0x987
0x982: JUMPI 0x987 V937
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x983
[0x983:0x986]
---
Predecessors: [0x97c]
Successors: []
---
0x983 PUSH1 0x0
0x985 DUP1
0x986 REVERT
---
0x983: V939 = 0x0
0x986: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x987
[0x987:0x98e]
---
Predecessors: [0x97c]
Successors: [0xd43]
---
0x987 JUMPDEST
0x988 PUSH2 0x8ab
0x98b PUSH2 0xd43
0x98e JUMP
---
0x987: JUMPDEST 
0x988: V940 = 0x8ab
0x98b: V941 = 0xd43
0x98e: JUMP 0xd43
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8ab]
Exit stack: [V12, 0x8ab]

================================

Block 0x98f
[0x98f:0x9aa]
---
Predecessors: []
Successors: []
---
0x98f JUMPDEST
0x990 PUSH1 0x40
0x992 MLOAD
0x993 PUSH1 0x1
0x995 PUSH1 0xa0
0x997 PUSH1 0x2
0x999 EXP
0x99a SUB
0x99b SWAP1
0x99c SWAP2
0x99d AND
0x99e DUP2
0x99f MSTORE
0x9a0 PUSH1 0x20
0x9a2 ADD
0x9a3 PUSH1 0x40
0x9a5 MLOAD
0x9a6 DUP1
0x9a7 SWAP2
0x9a8 SUB
0x9a9 SWAP1
0x9aa RETURN
---
0x98f: JUMPDEST 
0x990: V942 = 0x40
0x992: V943 = M[0x40]
0x993: V944 = 0x1
0x995: V945 = 0xa0
0x997: V946 = 0x2
0x999: V947 = EXP 0x2 0xa0
0x99a: V948 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99d: V949 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x99f: M[V943] = V949
0x9a0: V950 = 0x20
0x9a2: V951 = ADD 0x20 V943
0x9a3: V952 = 0x40
0x9a5: V953 = M[0x40]
0x9a8: V954 = SUB V951 V953
0x9aa: RETURN V953 V954
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9ab
[0x9ab:0x9b1]
---
Predecessors: [0xa9]
Successors: [0x9b2, 0x9b6]
---
0x9ab JUMPDEST
0x9ac CALLVALUE
0x9ad ISZERO
0x9ae PUSH2 0x9b6
0x9b1 JUMPI
---
0x9ab: JUMPDEST 
0x9ac: V955 = CALLVALUE
0x9ad: V956 = ISZERO V955
0x9ae: V957 = 0x9b6
0x9b1: JUMPI 0x9b6 V956
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9b2
[0x9b2:0x9b5]
---
Predecessors: [0x9ab]
Successors: []
---
0x9b2 PUSH1 0x0
0x9b4 DUP1
0x9b5 REVERT
---
0x9b2: V958 = 0x0
0x9b5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9b6
[0x9b6:0x9c9]
---
Predecessors: [0x9ab]
Successors: [0xd52]
---
0x9b6 JUMPDEST
0x9b7 PUSH2 0x7ff
0x9ba PUSH1 0x1
0x9bc PUSH1 0xa0
0x9be PUSH1 0x2
0x9c0 EXP
0x9c1 SUB
0x9c2 PUSH1 0x4
0x9c4 CALLDATALOAD
0x9c5 AND
0x9c6 PUSH2 0xd52
0x9c9 JUMP
---
0x9b6: JUMPDEST 
0x9b7: V959 = 0x7ff
0x9ba: V960 = 0x1
0x9bc: V961 = 0xa0
0x9be: V962 = 0x2
0x9c0: V963 = EXP 0x2 0xa0
0x9c1: V964 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c2: V965 = 0x4
0x9c4: V966 = CALLDATALOAD 0x4
0x9c5: V967 = AND V966 0xffffffffffffffffffffffffffffffffffffffff
0x9c6: V968 = 0xd52
0x9c9: JUMP 0xd52
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff, V967]
Exit stack: [V12, 0x7ff, V967]

================================

Block 0x9ca
[0x9ca:0x9db]
---
Predecessors: []
Successors: []
---
0x9ca JUMPDEST
0x9cb PUSH1 0x40
0x9cd MLOAD
0x9ce SWAP1
0x9cf DUP2
0x9d0 MSTORE
0x9d1 PUSH1 0x20
0x9d3 ADD
0x9d4 PUSH1 0x40
0x9d6 MLOAD
0x9d7 DUP1
0x9d8 SWAP2
0x9d9 SUB
0x9da SWAP1
0x9db RETURN
---
0x9ca: JUMPDEST 
0x9cb: V969 = 0x40
0x9cd: V970 = M[0x40]
0x9d0: M[V970] = S0
0x9d1: V971 = 0x20
0x9d3: V972 = ADD 0x20 V970
0x9d4: V973 = 0x40
0x9d6: V974 = M[0x40]
0x9d9: V975 = SUB V972 V974
0x9db: RETURN V974 V975
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9dc
[0x9dc:0x9e2]
---
Predecessors: [0xb4]
Successors: [0x9e3, 0x9e7]
---
0x9dc JUMPDEST
0x9dd CALLVALUE
0x9de ISZERO
0x9df PUSH2 0x9e7
0x9e2 JUMPI
---
0x9dc: JUMPDEST 
0x9dd: V976 = CALLVALUE
0x9de: V977 = ISZERO V976
0x9df: V978 = 0x9e7
0x9e2: JUMPI 0x9e7 V977
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9e3
[0x9e3:0x9e6]
---
Predecessors: [0x9dc]
Successors: []
---
0x9e3 PUSH1 0x0
0x9e5 DUP1
0x9e6 REVERT
---
0x9e3: V979 = 0x0
0x9e6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9e7
[0x9e7:0x9ee]
---
Predecessors: [0x9dc]
Successors: [0xd64]
---
0x9e7 JUMPDEST
0x9e8 PUSH2 0x7ff
0x9eb PUSH2 0xd64
0x9ee JUMP
---
0x9e7: JUMPDEST 
0x9e8: V980 = 0x7ff
0x9eb: V981 = 0xd64
0x9ee: JUMP 0xd64
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff]
Exit stack: [V12, 0x7ff]

================================

Block 0x9ef
[0x9ef:0xa00]
---
Predecessors: []
Successors: []
---
0x9ef JUMPDEST
0x9f0 PUSH1 0x40
0x9f2 MLOAD
0x9f3 SWAP1
0x9f4 DUP2
0x9f5 MSTORE
0x9f6 PUSH1 0x20
0x9f8 ADD
0x9f9 PUSH1 0x40
0x9fb MLOAD
0x9fc DUP1
0x9fd SWAP2
0x9fe SUB
0x9ff SWAP1
0xa00 RETURN
---
0x9ef: JUMPDEST 
0x9f0: V982 = 0x40
0x9f2: V983 = M[0x40]
0x9f5: M[V983] = S0
0x9f6: V984 = 0x20
0x9f8: V985 = ADD 0x20 V983
0x9f9: V986 = 0x40
0x9fb: V987 = M[0x40]
0x9fe: V988 = SUB V985 V987
0xa00: RETURN V987 V988
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa01
[0xa01:0xa07]
---
Predecessors: [0xbf]
Successors: [0xa08, 0xa0c]
---
0xa01 JUMPDEST
0xa02 CALLVALUE
0xa03 ISZERO
0xa04 PUSH2 0xa0c
0xa07 JUMPI
---
0xa01: JUMPDEST 
0xa02: V989 = CALLVALUE
0xa03: V990 = ISZERO V989
0xa04: V991 = 0xa0c
0xa07: JUMPI 0xa0c V990
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa08
[0xa08:0xa0b]
---
Predecessors: [0xa01]
Successors: []
---
0xa08 PUSH1 0x0
0xa0a DUP1
0xa0b REVERT
---
0xa08: V992 = 0x0
0xa0b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa0c
[0xa0c:0xa13]
---
Predecessors: [0xa01]
Successors: [0xd6a]
---
0xa0c JUMPDEST
0xa0d PUSH2 0x7ff
0xa10 PUSH2 0xd6a
0xa13 JUMP
---
0xa0c: JUMPDEST 
0xa0d: V993 = 0x7ff
0xa10: V994 = 0xd6a
0xa13: JUMP 0xd6a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff]
Exit stack: [V12, 0x7ff]

================================

Block 0xa14
[0xa14:0xa25]
---
Predecessors: []
Successors: []
---
0xa14 JUMPDEST
0xa15 PUSH1 0x40
0xa17 MLOAD
0xa18 SWAP1
0xa19 DUP2
0xa1a MSTORE
0xa1b PUSH1 0x20
0xa1d ADD
0xa1e PUSH1 0x40
0xa20 MLOAD
0xa21 DUP1
0xa22 SWAP2
0xa23 SUB
0xa24 SWAP1
0xa25 RETURN
---
0xa14: JUMPDEST 
0xa15: V995 = 0x40
0xa17: V996 = M[0x40]
0xa1a: M[V996] = S0
0xa1b: V997 = 0x20
0xa1d: V998 = ADD 0x20 V996
0xa1e: V999 = 0x40
0xa20: V1000 = M[0x40]
0xa23: V1001 = SUB V998 V1000
0xa25: RETURN V1000 V1001
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa26
[0xa26:0xa2c]
---
Predecessors: [0xca]
Successors: [0xa2d, 0xa31]
---
0xa26 JUMPDEST
0xa27 CALLVALUE
0xa28 ISZERO
0xa29 PUSH2 0xa31
0xa2c JUMPI
---
0xa26: JUMPDEST 
0xa27: V1002 = CALLVALUE
0xa28: V1003 = ISZERO V1002
0xa29: V1004 = 0xa31
0xa2c: JUMPI 0xa31 V1003
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa2d
[0xa2d:0xa30]
---
Predecessors: [0xa26]
Successors: []
---
0xa2d PUSH1 0x0
0xa2f DUP1
0xa30 REVERT
---
0xa2d: V1005 = 0x0
0xa30: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa31
[0xa31:0xa38]
---
Predecessors: [0xa26]
Successors: [0xd70]
---
0xa31 JUMPDEST
0xa32 PUSH2 0x7ff
0xa35 PUSH2 0xd70
0xa38 JUMP
---
0xa31: JUMPDEST 
0xa32: V1006 = 0x7ff
0xa35: V1007 = 0xd70
0xa38: JUMP 0xd70
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff]
Exit stack: [V12, 0x7ff]

================================

Block 0xa39
[0xa39:0xa4a]
---
Predecessors: []
Successors: []
---
0xa39 JUMPDEST
0xa3a PUSH1 0x40
0xa3c MLOAD
0xa3d SWAP1
0xa3e DUP2
0xa3f MSTORE
0xa40 PUSH1 0x20
0xa42 ADD
0xa43 PUSH1 0x40
0xa45 MLOAD
0xa46 DUP1
0xa47 SWAP2
0xa48 SUB
0xa49 SWAP1
0xa4a RETURN
---
0xa39: JUMPDEST 
0xa3a: V1008 = 0x40
0xa3c: V1009 = M[0x40]
0xa3f: M[V1009] = S0
0xa40: V1010 = 0x20
0xa42: V1011 = ADD 0x20 V1009
0xa43: V1012 = 0x40
0xa45: V1013 = M[0x40]
0xa48: V1014 = SUB V1011 V1013
0xa4a: RETURN V1013 V1014
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa4b
[0xa4b:0xa51]
---
Predecessors: [0xd5]
Successors: [0xa52, 0xa56]
---
0xa4b JUMPDEST
0xa4c CALLVALUE
0xa4d ISZERO
0xa4e PUSH2 0xa56
0xa51 JUMPI
---
0xa4b: JUMPDEST 
0xa4c: V1015 = CALLVALUE
0xa4d: V1016 = ISZERO V1015
0xa4e: V1017 = 0xa56
0xa51: JUMPI 0xa56 V1016
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa52
[0xa52:0xa55]
---
Predecessors: [0xa4b]
Successors: []
---
0xa52 PUSH1 0x0
0xa54 DUP1
0xa55 REVERT
---
0xa52: V1018 = 0x0
0xa55: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa56
[0xa56:0xa5d]
---
Predecessors: [0xa4b]
Successors: [0xd76]
---
0xa56 JUMPDEST
0xa57 PUSH2 0x7ff
0xa5a PUSH2 0xd76
0xa5d JUMP
---
0xa56: JUMPDEST 
0xa57: V1019 = 0x7ff
0xa5a: V1020 = 0xd76
0xa5d: JUMP 0xd76
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff]
Exit stack: [V12, 0x7ff]

================================

Block 0xa5e
[0xa5e:0xa6f]
---
Predecessors: []
Successors: []
---
0xa5e JUMPDEST
0xa5f PUSH1 0x40
0xa61 MLOAD
0xa62 SWAP1
0xa63 DUP2
0xa64 MSTORE
0xa65 PUSH1 0x20
0xa67 ADD
0xa68 PUSH1 0x40
0xa6a MLOAD
0xa6b DUP1
0xa6c SWAP2
0xa6d SUB
0xa6e SWAP1
0xa6f RETURN
---
0xa5e: JUMPDEST 
0xa5f: V1021 = 0x40
0xa61: V1022 = M[0x40]
0xa64: M[V1022] = S0
0xa65: V1023 = 0x20
0xa67: V1024 = ADD 0x20 V1022
0xa68: V1025 = 0x40
0xa6a: V1026 = M[0x40]
0xa6d: V1027 = SUB V1024 V1026
0xa6f: RETURN V1026 V1027
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa70
[0xa70:0xa76]
---
Predecessors: [0xe0]
Successors: [0xa77, 0xa7b]
---
0xa70 JUMPDEST
0xa71 CALLVALUE
0xa72 ISZERO
0xa73 PUSH2 0xa7b
0xa76 JUMPI
---
0xa70: JUMPDEST 
0xa71: V1028 = CALLVALUE
0xa72: V1029 = ISZERO V1028
0xa73: V1030 = 0xa7b
0xa76: JUMPI 0xa7b V1029
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa77
[0xa77:0xa7a]
---
Predecessors: [0xa70]
Successors: []
---
0xa77 PUSH1 0x0
0xa79 DUP1
0xa7a REVERT
---
0xa77: V1031 = 0x0
0xa7a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa7b
[0xa7b:0xa82]
---
Predecessors: [0xa70]
Successors: [0xd7c]
---
0xa7b JUMPDEST
0xa7c PUSH2 0x7ff
0xa7f PUSH2 0xd7c
0xa82 JUMP
---
0xa7b: JUMPDEST 
0xa7c: V1032 = 0x7ff
0xa7f: V1033 = 0xd7c
0xa82: JUMP 0xd7c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff]
Exit stack: [V12, 0x7ff]

================================

Block 0xa83
[0xa83:0xa94]
---
Predecessors: []
Successors: []
---
0xa83 JUMPDEST
0xa84 PUSH1 0x40
0xa86 MLOAD
0xa87 SWAP1
0xa88 DUP2
0xa89 MSTORE
0xa8a PUSH1 0x20
0xa8c ADD
0xa8d PUSH1 0x40
0xa8f MLOAD
0xa90 DUP1
0xa91 SWAP2
0xa92 SUB
0xa93 SWAP1
0xa94 RETURN
---
0xa83: JUMPDEST 
0xa84: V1034 = 0x40
0xa86: V1035 = M[0x40]
0xa89: M[V1035] = S0
0xa8a: V1036 = 0x20
0xa8c: V1037 = ADD 0x20 V1035
0xa8d: V1038 = 0x40
0xa8f: V1039 = M[0x40]
0xa92: V1040 = SUB V1037 V1039
0xa94: RETURN V1039 V1040
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa95
[0xa95:0xa9b]
---
Predecessors: [0xeb]
Successors: [0xa9c, 0xaa0]
---
0xa95 JUMPDEST
0xa96 CALLVALUE
0xa97 ISZERO
0xa98 PUSH2 0xaa0
0xa9b JUMPI
---
0xa95: JUMPDEST 
0xa96: V1041 = CALLVALUE
0xa97: V1042 = ISZERO V1041
0xa98: V1043 = 0xaa0
0xa9b: JUMPI 0xaa0 V1042
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa9c
[0xa9c:0xa9f]
---
Predecessors: [0xa95]
Successors: []
---
0xa9c PUSH1 0x0
0xa9e DUP1
0xa9f REVERT
---
0xa9c: V1044 = 0x0
0xa9f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xaa0
[0xaa0:0xaa7]
---
Predecessors: [0xa95]
Successors: [0xd82]
---
0xaa0 JUMPDEST
0xaa1 PUSH2 0x7ff
0xaa4 PUSH2 0xd82
0xaa7 JUMP
---
0xaa0: JUMPDEST 
0xaa1: V1045 = 0x7ff
0xaa4: V1046 = 0xd82
0xaa7: JUMP 0xd82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff]
Exit stack: [V12, 0x7ff]

================================

Block 0xaa8
[0xaa8:0xab9]
---
Predecessors: []
Successors: []
---
0xaa8 JUMPDEST
0xaa9 PUSH1 0x40
0xaab MLOAD
0xaac SWAP1
0xaad DUP2
0xaae MSTORE
0xaaf PUSH1 0x20
0xab1 ADD
0xab2 PUSH1 0x40
0xab4 MLOAD
0xab5 DUP1
0xab6 SWAP2
0xab7 SUB
0xab8 SWAP1
0xab9 RETURN
---
0xaa8: JUMPDEST 
0xaa9: V1047 = 0x40
0xaab: V1048 = M[0x40]
0xaae: M[V1048] = S0
0xaaf: V1049 = 0x20
0xab1: V1050 = ADD 0x20 V1048
0xab2: V1051 = 0x40
0xab4: V1052 = M[0x40]
0xab7: V1053 = SUB V1050 V1052
0xab9: RETURN V1052 V1053
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xaba
[0xaba:0xac0]
---
Predecessors: [0xf6]
Successors: [0xac1, 0xac5]
---
0xaba JUMPDEST
0xabb CALLVALUE
0xabc ISZERO
0xabd PUSH2 0xac5
0xac0 JUMPI
---
0xaba: JUMPDEST 
0xabb: V1054 = CALLVALUE
0xabc: V1055 = ISZERO V1054
0xabd: V1056 = 0xac5
0xac0: JUMPI 0xac5 V1055
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xac1
[0xac1:0xac4]
---
Predecessors: [0xaba]
Successors: []
---
0xac1 PUSH1 0x0
0xac3 DUP1
0xac4 REVERT
---
0xac1: V1057 = 0x0
0xac4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xac5
[0xac5:0xacc]
---
Predecessors: [0xaba]
Successors: [0xd88]
---
0xac5 JUMPDEST
0xac6 PUSH2 0x7ff
0xac9 PUSH2 0xd88
0xacc JUMP
---
0xac5: JUMPDEST 
0xac6: V1058 = 0x7ff
0xac9: V1059 = 0xd88
0xacc: JUMP 0xd88
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff]
Exit stack: [V12, 0x7ff]

================================

Block 0xacd
[0xacd:0xade]
---
Predecessors: []
Successors: []
---
0xacd JUMPDEST
0xace PUSH1 0x40
0xad0 MLOAD
0xad1 SWAP1
0xad2 DUP2
0xad3 MSTORE
0xad4 PUSH1 0x20
0xad6 ADD
0xad7 PUSH1 0x40
0xad9 MLOAD
0xada DUP1
0xadb SWAP2
0xadc SUB
0xadd SWAP1
0xade RETURN
---
0xacd: JUMPDEST 
0xace: V1060 = 0x40
0xad0: V1061 = M[0x40]
0xad3: M[V1061] = S0
0xad4: V1062 = 0x20
0xad6: V1063 = ADD 0x20 V1061
0xad7: V1064 = 0x40
0xad9: V1065 = M[0x40]
0xadc: V1066 = SUB V1063 V1065
0xade: RETURN V1065 V1066
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xadf
[0xadf:0xae5]
---
Predecessors: [0x101]
Successors: [0xae6, 0xaea]
---
0xadf JUMPDEST
0xae0 CALLVALUE
0xae1 ISZERO
0xae2 PUSH2 0xaea
0xae5 JUMPI
---
0xadf: JUMPDEST 
0xae0: V1067 = CALLVALUE
0xae1: V1068 = ISZERO V1067
0xae2: V1069 = 0xaea
0xae5: JUMPI 0xaea V1068
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xae6
[0xae6:0xae9]
---
Predecessors: [0xadf]
Successors: []
---
0xae6 PUSH1 0x0
0xae8 DUP1
0xae9 REVERT
---
0xae6: V1070 = 0x0
0xae9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xaea
[0xaea:0xaf1]
---
Predecessors: [0xadf]
Successors: [0xd8e]
---
0xaea JUMPDEST
0xaeb PUSH2 0x7ea
0xaee PUSH2 0xd8e
0xaf1 JUMP
---
0xaea: JUMPDEST 
0xaeb: V1071 = 0x7ea
0xaee: V1072 = 0xd8e
0xaf1: JUMP 0xd8e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ea]
Exit stack: [V12, 0x7ea]

================================

Block 0xaf2
[0xaf2:0xaf3]
---
Predecessors: []
Successors: []
---
0xaf2 JUMPDEST
0xaf3 STOP
---
0xaf2: JUMPDEST 
0xaf3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaf4
[0xaf4:0xafa]
---
Predecessors: [0x10c]
Successors: [0xafb, 0xaff]
---
0xaf4 JUMPDEST
0xaf5 CALLVALUE
0xaf6 ISZERO
0xaf7 PUSH2 0xaff
0xafa JUMPI
---
0xaf4: JUMPDEST 
0xaf5: V1073 = CALLVALUE
0xaf6: V1074 = ISZERO V1073
0xaf7: V1075 = 0xaff
0xafa: JUMPI 0xaff V1074
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xafb
[0xafb:0xafe]
---
Predecessors: [0xaf4]
Successors: []
---
0xafb PUSH1 0x0
0xafd DUP1
0xafe REVERT
---
0xafb: V1076 = 0x0
0xafe: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xaff
[0xaff:0xb06]
---
Predecessors: [0xaf4]
Successors: [0xdb5]
---
0xaff JUMPDEST
0xb00 PUSH2 0x7ea
0xb03 PUSH2 0xdb5
0xb06 JUMP
---
0xaff: JUMPDEST 
0xb00: V1077 = 0x7ea
0xb03: V1078 = 0xdb5
0xb06: JUMP 0xdb5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ea]
Exit stack: [V12, 0x7ea]

================================

Block 0xb07
[0xb07:0xb08]
---
Predecessors: []
Successors: []
---
0xb07 JUMPDEST
0xb08 STOP
---
0xb07: JUMPDEST 
0xb08: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb09
[0xb09:0xb0f]
---
Predecessors: [0x117]
Successors: [0xb10, 0xb14]
---
0xb09 JUMPDEST
0xb0a CALLVALUE
0xb0b ISZERO
0xb0c PUSH2 0xb14
0xb0f JUMPI
---
0xb09: JUMPDEST 
0xb0a: V1079 = CALLVALUE
0xb0b: V1080 = ISZERO V1079
0xb0c: V1081 = 0xb14
0xb0f: JUMPI 0xb14 V1080
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb10
[0xb10:0xb13]
---
Predecessors: [0xb09]
Successors: []
---
0xb10 PUSH1 0x0
0xb12 DUP1
0xb13 REVERT
---
0xb10: V1082 = 0x0
0xb13: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb14
[0xb14:0xb1b]
---
Predecessors: [0xb09]
Successors: [0xddf]
---
0xb14 JUMPDEST
0xb15 PUSH2 0x7ff
0xb18 PUSH2 0xddf
0xb1b JUMP
---
0xb14: JUMPDEST 
0xb15: V1083 = 0x7ff
0xb18: V1084 = 0xddf
0xb1b: JUMP 0xddf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff]
Exit stack: [V12, 0x7ff]

================================

Block 0xb1c
[0xb1c:0xb2d]
---
Predecessors: []
Successors: []
---
0xb1c JUMPDEST
0xb1d PUSH1 0x40
0xb1f MLOAD
0xb20 SWAP1
0xb21 DUP2
0xb22 MSTORE
0xb23 PUSH1 0x20
0xb25 ADD
0xb26 PUSH1 0x40
0xb28 MLOAD
0xb29 DUP1
0xb2a SWAP2
0xb2b SUB
0xb2c SWAP1
0xb2d RETURN
---
0xb1c: JUMPDEST 
0xb1d: V1085 = 0x40
0xb1f: V1086 = M[0x40]
0xb22: M[V1086] = S0
0xb23: V1087 = 0x20
0xb25: V1088 = ADD 0x20 V1086
0xb26: V1089 = 0x40
0xb28: V1090 = M[0x40]
0xb2b: V1091 = SUB V1088 V1090
0xb2d: RETURN V1090 V1091
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb2e
[0xb2e:0xb34]
---
Predecessors: [0x122]
Successors: [0xb35, 0xb39]
---
0xb2e JUMPDEST
0xb2f CALLVALUE
0xb30 ISZERO
0xb31 PUSH2 0xb39
0xb34 JUMPI
---
0xb2e: JUMPDEST 
0xb2f: V1092 = CALLVALUE
0xb30: V1093 = ISZERO V1092
0xb31: V1094 = 0xb39
0xb34: JUMPI 0xb39 V1093
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb35
[0xb35:0xb38]
---
Predecessors: [0xb2e]
Successors: []
---
0xb35 PUSH1 0x0
0xb37 DUP1
0xb38 REVERT
---
0xb35: V1095 = 0x0
0xb38: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb39
[0xb39:0xb40]
---
Predecessors: [0xb2e]
Successors: [0xde5]
---
0xb39 JUMPDEST
0xb3a PUSH2 0x7ff
0xb3d PUSH2 0xde5
0xb40 JUMP
---
0xb39: JUMPDEST 
0xb3a: V1096 = 0x7ff
0xb3d: V1097 = 0xde5
0xb40: JUMP 0xde5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff]
Exit stack: [V12, 0x7ff]

================================

Block 0xb41
[0xb41:0xb52]
---
Predecessors: []
Successors: []
---
0xb41 JUMPDEST
0xb42 PUSH1 0x40
0xb44 MLOAD
0xb45 SWAP1
0xb46 DUP2
0xb47 MSTORE
0xb48 PUSH1 0x20
0xb4a ADD
0xb4b PUSH1 0x40
0xb4d MLOAD
0xb4e DUP1
0xb4f SWAP2
0xb50 SUB
0xb51 SWAP1
0xb52 RETURN
---
0xb41: JUMPDEST 
0xb42: V1098 = 0x40
0xb44: V1099 = M[0x40]
0xb47: M[V1099] = S0
0xb48: V1100 = 0x20
0xb4a: V1101 = ADD 0x20 V1099
0xb4b: V1102 = 0x40
0xb4d: V1103 = M[0x40]
0xb50: V1104 = SUB V1101 V1103
0xb52: RETURN V1103 V1104
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb53
[0xb53:0xb59]
---
Predecessors: [0x12d]
Successors: [0xb5a, 0xb5e]
---
0xb53 JUMPDEST
0xb54 CALLVALUE
0xb55 ISZERO
0xb56 PUSH2 0xb5e
0xb59 JUMPI
---
0xb53: JUMPDEST 
0xb54: V1105 = CALLVALUE
0xb55: V1106 = ISZERO V1105
0xb56: V1107 = 0xb5e
0xb59: JUMPI 0xb5e V1106
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb5a
[0xb5a:0xb5d]
---
Predecessors: [0xb53]
Successors: []
---
0xb5a PUSH1 0x0
0xb5c DUP1
0xb5d REVERT
---
0xb5a: V1108 = 0x0
0xb5d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb5e
[0xb5e:0xb65]
---
Predecessors: [0xb53]
Successors: [0xdeb]
---
0xb5e JUMPDEST
0xb5f PUSH2 0x7ff
0xb62 PUSH2 0xdeb
0xb65 JUMP
---
0xb5e: JUMPDEST 
0xb5f: V1109 = 0x7ff
0xb62: V1110 = 0xdeb
0xb65: JUMP 0xdeb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ff]
Exit stack: [V12, 0x7ff]

================================

Block 0xb66
[0xb66:0xb77]
---
Predecessors: []
Successors: []
---
0xb66 JUMPDEST
0xb67 PUSH1 0x40
0xb69 MLOAD
0xb6a SWAP1
0xb6b DUP2
0xb6c MSTORE
0xb6d PUSH1 0x20
0xb6f ADD
0xb70 PUSH1 0x40
0xb72 MLOAD
0xb73 DUP1
0xb74 SWAP2
0xb75 SUB
0xb76 SWAP1
0xb77 RETURN
---
0xb66: JUMPDEST 
0xb67: V1111 = 0x40
0xb69: V1112 = M[0x40]
0xb6c: M[V1112] = S0
0xb6d: V1113 = 0x20
0xb6f: V1114 = ADD 0x20 V1112
0xb70: V1115 = 0x40
0xb72: V1116 = M[0x40]
0xb75: V1117 = SUB V1114 V1116
0xb77: RETURN V1116 V1117
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb78
[0xb78:0xb7e]
---
Predecessors: [0x138]
Successors: [0xb7f, 0xb83]
---
0xb78 JUMPDEST
0xb79 CALLVALUE
0xb7a ISZERO
0xb7b PUSH2 0xb83
0xb7e JUMPI
---
0xb78: JUMPDEST 
0xb79: V1118 = CALLVALUE
0xb7a: V1119 = ISZERO V1118
0xb7b: V1120 = 0xb83
0xb7e: JUMPI 0xb83 V1119
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb7f
[0xb7f:0xb82]
---
Predecessors: [0xb78]
Successors: []
---
0xb7f PUSH1 0x0
0xb81 DUP1
0xb82 REVERT
---
0xb7f: V1121 = 0x0
0xb82: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb83
[0xb83:0xb8a]
---
Predecessors: [0xb78]
Successors: [0xdf1]
---
0xb83 JUMPDEST
0xb84 PUSH2 0x968
0xb87 PUSH2 0xdf1
0xb8a JUMP
---
0xb83: JUMPDEST 
0xb84: V1122 = 0x968
0xb87: V1123 = 0xdf1
0xb8a: JUMP 0xdf1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x968]
Exit stack: [V12, 0x968]

================================

Block 0xb8b
[0xb8b:0xb9e]
---
Predecessors: []
Successors: []
---
0xb8b JUMPDEST
0xb8c PUSH1 0x40
0xb8e MLOAD
0xb8f SWAP1
0xb90 ISZERO
0xb91 ISZERO
0xb92 DUP2
0xb93 MSTORE
0xb94 PUSH1 0x20
0xb96 ADD
0xb97 PUSH1 0x40
0xb99 MLOAD
0xb9a DUP1
0xb9b SWAP2
0xb9c SUB
0xb9d SWAP1
0xb9e RETURN
---
0xb8b: JUMPDEST 
0xb8c: V1124 = 0x40
0xb8e: V1125 = M[0x40]
0xb90: V1126 = ISZERO S0
0xb91: V1127 = ISZERO V1126
0xb93: M[V1125] = V1127
0xb94: V1128 = 0x20
0xb96: V1129 = ADD 0x20 V1125
0xb97: V1130 = 0x40
0xb99: V1131 = M[0x40]
0xb9c: V1132 = SUB V1129 V1131
0xb9e: RETURN V1131 V1132
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb9f
[0xb9f:0xba5]
---
Predecessors: [0x143]
Successors: [0xba6, 0xbaa]
---
0xb9f JUMPDEST
0xba0 CALLVALUE
0xba1 ISZERO
0xba2 PUSH2 0xbaa
0xba5 JUMPI
---
0xb9f: JUMPDEST 
0xba0: V1133 = CALLVALUE
0xba1: V1134 = ISZERO V1133
0xba2: V1135 = 0xbaa
0xba5: JUMPI 0xbaa V1134
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xba6
[0xba6:0xba9]
---
Predecessors: [0xb9f]
Successors: []
---
0xba6 PUSH1 0x0
0xba8 DUP1
0xba9 REVERT
---
0xba6: V1136 = 0x0
0xba9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbaa
[0xbaa:0xbb1]
---
Predecessors: [0xb9f]
Successors: [0xdff]
---
0xbaa JUMPDEST
0xbab PUSH2 0x968
0xbae PUSH2 0xdff
0xbb1 JUMP
---
0xbaa: JUMPDEST 
0xbab: V1137 = 0x968
0xbae: V1138 = 0xdff
0xbb1: JUMP 0xdff
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x968]
Exit stack: [V12, 0x968]

================================

Block 0xbb2
[0xbb2:0xbc5]
---
Predecessors: []
Successors: []
---
0xbb2 JUMPDEST
0xbb3 PUSH1 0x40
0xbb5 MLOAD
0xbb6 SWAP1
0xbb7 ISZERO
0xbb8 ISZERO
0xbb9 DUP2
0xbba MSTORE
0xbbb PUSH1 0x20
0xbbd ADD
0xbbe PUSH1 0x40
0xbc0 MLOAD
0xbc1 DUP1
0xbc2 SWAP2
0xbc3 SUB
0xbc4 SWAP1
0xbc5 RETURN
---
0xbb2: JUMPDEST 
0xbb3: V1139 = 0x40
0xbb5: V1140 = M[0x40]
0xbb7: V1141 = ISZERO S0
0xbb8: V1142 = ISZERO V1141
0xbba: M[V1140] = V1142
0xbbb: V1143 = 0x20
0xbbd: V1144 = ADD 0x20 V1140
0xbbe: V1145 = 0x40
0xbc0: V1146 = M[0x40]
0xbc3: V1147 = SUB V1144 V1146
0xbc5: RETURN V1146 V1147
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xbc6
[0xbc6:0xbcc]
---
Predecessors: [0x14e]
Successors: [0xbcd, 0xbd1]
---
0xbc6 JUMPDEST
0xbc7 CALLVALUE
0xbc8 ISZERO
0xbc9 PUSH2 0xbd1
0xbcc JUMPI
---
0xbc6: JUMPDEST 
0xbc7: V1148 = CALLVALUE
0xbc8: V1149 = ISZERO V1148
0xbc9: V1150 = 0xbd1
0xbcc: JUMPI 0xbd1 V1149
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbcd
[0xbcd:0xbd0]
---
Predecessors: [0xbc6]
Successors: []
---
0xbcd PUSH1 0x0
0xbcf DUP1
0xbd0 REVERT
---
0xbcd: V1151 = 0x0
0xbd0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbd1
[0xbd1:0xbd8]
---
Predecessors: [0xbc6]
Successors: [0xe08]
---
0xbd1 JUMPDEST
0xbd2 PUSH2 0x7ea
0xbd5 PUSH2 0xe08
0xbd8 JUMP
---
0xbd1: JUMPDEST 
0xbd2: V1152 = 0x7ea
0xbd5: V1153 = 0xe08
0xbd8: JUMP 0xe08
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ea]
Exit stack: [V12, 0x7ea]

================================

Block 0xbd9
[0xbd9:0xbda]
---
Predecessors: []
Successors: []
---
0xbd9 JUMPDEST
0xbda STOP
---
0xbd9: JUMPDEST 
0xbda: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbdb
[0xbdb:0xbe1]
---
Predecessors: [0x159]
Successors: [0xbe2, 0xbe6]
---
0xbdb JUMPDEST
0xbdc CALLVALUE
0xbdd ISZERO
0xbde PUSH2 0xbe6
0xbe1 JUMPI
---
0xbdb: JUMPDEST 
0xbdc: V1154 = CALLVALUE
0xbdd: V1155 = ISZERO V1154
0xbde: V1156 = 0xbe6
0xbe1: JUMPI 0xbe6 V1155
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbe2
[0xbe2:0xbe5]
---
Predecessors: [0xbdb]
Successors: []
---
0xbe2 PUSH1 0x0
0xbe4 DUP1
0xbe5 REVERT
---
0xbe2: V1157 = 0x0
0xbe5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbe6
[0xbe6:0xbed]
---
Predecessors: [0xbdb]
Successors: [0xe34]
---
0xbe6 JUMPDEST
0xbe7 PUSH2 0x7ea
0xbea PUSH2 0xe34
0xbed JUMP
---
0xbe6: JUMPDEST 
0xbe7: V1158 = 0x7ea
0xbea: V1159 = 0xe34
0xbed: JUMP 0xe34
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7ea]
Exit stack: [V12, 0x7ea]

================================

Block 0xbee
[0xbee:0xbef]
---
Predecessors: []
Successors: []
---
0xbee JUMPDEST
0xbef STOP
---
0xbee: JUMPDEST 
0xbef: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbf0
[0xbf0:0xbf9]
---
Predecessors: [0x7e2]
Successors: [0xbfa, 0xc37]
---
0xbf0 JUMPDEST
0xbf1 PUSH1 0x2
0xbf3 SLOAD
0xbf4 TIMESTAMP
0xbf5 LT
0xbf6 PUSH2 0xc37
0xbf9 JUMPI
---
0xbf0: JUMPDEST 
0xbf1: V1160 = 0x2
0xbf3: V1161 = S[0x2]
0xbf4: V1162 = TIMESTAMP
0xbf5: V1163 = LT V1162 V1161
0xbf6: V1164 = 0xc37
0xbf9: JUMPI 0xc37 V1163
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xbfa
[0xbfa:0xc06]
---
Predecessors: [0xbf0]
Successors: [0xc07, 0xc14]
---
0xbfa PUSH1 0x5
0xbfc SLOAD
0xbfd PUSH1 0x8
0xbff SLOAD
0xc00 LT
0xc01 ISZERO
0xc02 DUP1
0xc03 PUSH2 0xc14
0xc06 JUMPI
---
0xbfa: V1165 = 0x5
0xbfc: V1166 = S[0x5]
0xbfd: V1167 = 0x8
0xbff: V1168 = S[0x8]
0xc00: V1169 = LT V1168 V1166
0xc01: V1170 = ISZERO V1169
0xc03: V1171 = 0xc14
0xc06: JUMPI 0xc14 V1170
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: [V1170]
Exit stack: [V12, 0x7ea, V1170]

================================

Block 0xc07
[0xc07:0xc13]
---
Predecessors: [0xbfa]
Successors: [0xc14]
---
0xc07 POP
0xc08 PUSH1 0x14
0xc0a SLOAD
0xc0b PUSH3 0x10000
0xc0f SWAP1
0xc10 DIV
0xc11 PUSH1 0xff
0xc13 AND
---
0xc08: V1172 = 0x14
0xc0a: V1173 = S[0x14]
0xc0b: V1174 = 0x10000
0xc10: V1175 = DIV V1173 0x10000
0xc11: V1176 = 0xff
0xc13: V1177 = AND 0xff V1175
---
Entry stack: [V12, 0x7ea, V1170]
Stack pops: 1
Stack additions: [V1177]
Exit stack: [V12, 0x7ea, V1177]

================================

Block 0xc14
[0xc14:0xc19]
---
Predecessors: [0xbfa, 0xc07]
Successors: [0xc1a, 0xc27]
---
0xc14 JUMPDEST
0xc15 ISZERO
0xc16 PUSH2 0xc27
0xc19 JUMPI
---
0xc14: JUMPDEST 
0xc15: V1178 = ISZERO S0
0xc16: V1179 = 0xc27
0xc19: JUMPI 0xc27 V1178
---
Entry stack: [V12, 0x7ea, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xc1a
[0xc1a:0xc26]
---
Predecessors: [0xc14]
Successors: [0xc27]
---
0xc1a PUSH1 0x14
0xc1c DUP1
0xc1d SLOAD
0xc1e PUSH1 0xff
0xc20 NOT
0xc21 AND
0xc22 PUSH1 0x1
0xc24 OR
0xc25 SWAP1
0xc26 SSTORE
---
0xc1a: V1180 = 0x14
0xc1d: V1181 = S[0x14]
0xc1e: V1182 = 0xff
0xc20: V1183 = NOT 0xff
0xc21: V1184 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1181
0xc22: V1185 = 0x1
0xc24: V1186 = OR 0x1 V1184
0xc26: S[0x14] = V1186
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xc27
[0xc27:0xc36]
---
Predecessors: [0xc14, 0xc1a]
Successors: [0xc37]
---
0xc27 JUMPDEST
0xc28 PUSH1 0x14
0xc2a DUP1
0xc2b SLOAD
0xc2c PUSH2 0xff00
0xc2f NOT
0xc30 AND
0xc31 PUSH2 0x100
0xc34 OR
0xc35 SWAP1
0xc36 SSTORE
---
0xc27: JUMPDEST 
0xc28: V1187 = 0x14
0xc2b: V1188 = S[0x14]
0xc2c: V1189 = 0xff00
0xc2f: V1190 = NOT 0xff00
0xc30: V1191 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1188
0xc31: V1192 = 0x100
0xc34: V1193 = OR 0x100 V1191
0xc36: S[0x14] = V1193
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xc37
[0xc37:0xc37]
---
Predecessors: [0xbf0, 0xc27, 0xcff, 0xd8e, 0xdb5, 0xe08]
Successors: [0xc38]
---
0xc37 JUMPDEST
---
0xc37: JUMPDEST 
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xc38
[0xc38:0xc38]
---
Predecessors: [0xc37]
Successors: [0xc39]
---
0xc38 JUMPDEST
---
0xc38: JUMPDEST 
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xc39
[0xc39:0xc3a]
---
Predecessors: [0xc38]
Successors: [0x7ea]
---
0xc39 JUMPDEST
0xc3a JUMP
---
0xc39: JUMPDEST 
0xc3a: JUMP 0x7ea
---
Entry stack: [V12, 0x7ea]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xc3b
[0xc3b:0xc40]
---
Predecessors: [0x7f7]
Successors: [0x7ff]
---
0xc3b JUMPDEST
0xc3c PUSH1 0x0
0xc3e SLOAD
0xc3f DUP2
0xc40 JUMP
---
0xc3b: JUMPDEST 
0xc3c: V1194 = 0x0
0xc3e: V1195 = S[0x0]
0xc40: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff]
Stack pops: 1
Stack additions: [S0, V1195]
Exit stack: [V12, 0x7ff, V1195]

================================

Block 0xc41
[0xc41:0xc4a]
---
Predecessors: [0x81c]
Successors: [0xc4b, 0xccc]
---
0xc41 JUMPDEST
0xc42 PUSH1 0x2
0xc44 SLOAD
0xc45 TIMESTAMP
0xc46 LT
0xc47 PUSH2 0xccc
0xc4a JUMPI
---
0xc41: JUMPDEST 
0xc42: V1196 = 0x2
0xc44: V1197 = S[0x2]
0xc45: V1198 = TIMESTAMP
0xc46: V1199 = LT V1198 V1197
0xc47: V1200 = 0xccc
0xc4a: JUMPI 0xccc V1199
---
Entry stack: [V12, 0x7ea, V810]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, V810]

================================

Block 0xc4b
[0xc4b:0xc61]
---
Predecessors: [0xc41]
Successors: [0xc62, 0xccc]
---
0xc4b PUSH1 0x4
0xc4d SLOAD
0xc4e CALLER
0xc4f PUSH1 0x1
0xc51 PUSH1 0xa0
0xc53 PUSH1 0x2
0xc55 EXP
0xc56 SUB
0xc57 SWAP1
0xc58 DUP2
0xc59 AND
0xc5a SWAP2
0xc5b AND
0xc5c EQ
0xc5d ISZERO
0xc5e PUSH2 0xccc
0xc61 JUMPI
---
0xc4b: V1201 = 0x4
0xc4d: V1202 = S[0x4]
0xc4e: V1203 = CALLER
0xc4f: V1204 = 0x1
0xc51: V1205 = 0xa0
0xc53: V1206 = 0x2
0xc55: V1207 = EXP 0x2 0xa0
0xc56: V1208 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc59: V1209 = AND 0xffffffffffffffffffffffffffffffffffffffff V1203
0xc5b: V1210 = AND V1202 0xffffffffffffffffffffffffffffffffffffffff
0xc5c: V1211 = EQ V1210 V1209
0xc5d: V1212 = ISZERO V1211
0xc5e: V1213 = 0xccc
0xc61: JUMPI 0xccc V1212
---
Entry stack: [V12, 0x7ea, V810]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, V810]

================================

Block 0xc62
[0xc62:0xcb2]
---
Predecessors: [0xc4b]
Successors: [0xcb3, 0xcb7]
---
0xc62 PUSH1 0x12
0xc64 SLOAD
0xc65 PUSH1 0x1
0xc67 PUSH1 0xa0
0xc69 PUSH1 0x2
0xc6b EXP
0xc6c SUB
0xc6d AND
0xc6e PUSH4 0xa9059cbb
0xc73 CALLER
0xc74 DUP4
0xc75 PUSH1 0x40
0xc77 MLOAD
0xc78 PUSH1 0xe0
0xc7a PUSH1 0x2
0xc7c EXP
0xc7d PUSH4 0xffffffff
0xc82 DUP6
0xc83 AND
0xc84 MUL
0xc85 DUP2
0xc86 MSTORE
0xc87 PUSH1 0x1
0xc89 PUSH1 0xa0
0xc8b PUSH1 0x2
0xc8d EXP
0xc8e SUB
0xc8f SWAP1
0xc90 SWAP3
0xc91 AND
0xc92 PUSH1 0x4
0xc94 DUP4
0xc95 ADD
0xc96 MSTORE
0xc97 PUSH1 0x24
0xc99 DUP3
0xc9a ADD
0xc9b MSTORE
0xc9c PUSH1 0x44
0xc9e ADD
0xc9f PUSH1 0x0
0xca1 PUSH1 0x40
0xca3 MLOAD
0xca4 DUP1
0xca5 DUP4
0xca6 SUB
0xca7 DUP2
0xca8 PUSH1 0x0
0xcaa DUP8
0xcab DUP1
0xcac EXTCODESIZE
0xcad ISZERO
0xcae ISZERO
0xcaf PUSH2 0xcb7
0xcb2 JUMPI
---
0xc62: V1214 = 0x12
0xc64: V1215 = S[0x12]
0xc65: V1216 = 0x1
0xc67: V1217 = 0xa0
0xc69: V1218 = 0x2
0xc6b: V1219 = EXP 0x2 0xa0
0xc6c: V1220 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc6d: V1221 = AND 0xffffffffffffffffffffffffffffffffffffffff V1215
0xc6e: V1222 = 0xa9059cbb
0xc73: V1223 = CALLER
0xc75: V1224 = 0x40
0xc77: V1225 = M[0x40]
0xc78: V1226 = 0xe0
0xc7a: V1227 = 0x2
0xc7c: V1228 = EXP 0x2 0xe0
0xc7d: V1229 = 0xffffffff
0xc83: V1230 = AND 0xa9059cbb 0xffffffff
0xc84: V1231 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xc86: M[V1225] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc87: V1232 = 0x1
0xc89: V1233 = 0xa0
0xc8b: V1234 = 0x2
0xc8d: V1235 = EXP 0x2 0xa0
0xc8e: V1236 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc91: V1237 = AND V1223 0xffffffffffffffffffffffffffffffffffffffff
0xc92: V1238 = 0x4
0xc95: V1239 = ADD V1225 0x4
0xc96: M[V1239] = V1237
0xc97: V1240 = 0x24
0xc9a: V1241 = ADD V1225 0x24
0xc9b: M[V1241] = V810
0xc9c: V1242 = 0x44
0xc9e: V1243 = ADD 0x44 V1225
0xc9f: V1244 = 0x0
0xca1: V1245 = 0x40
0xca3: V1246 = M[0x40]
0xca6: V1247 = SUB V1243 V1246
0xca8: V1248 = 0x0
0xcac: V1249 = EXTCODESIZE V1221
0xcad: V1250 = ISZERO V1249
0xcae: V1251 = ISZERO V1250
0xcaf: V1252 = 0xcb7
0xcb2: JUMPI 0xcb7 V1251
---
Entry stack: [V12, 0x7ea, V810]
Stack pops: 1
Stack additions: [S0, V1221, 0xa9059cbb, V1243, 0x0, V1246, V1247, V1246, 0x0, V1221]
Exit stack: [V12, 0x7ea, V810, V1221, 0xa9059cbb, V1243, 0x0, V1246, V1247, V1246, 0x0, V1221]

================================

Block 0xcb3
[0xcb3:0xcb6]
---
Predecessors: [0xc62]
Successors: []
---
0xcb3 PUSH1 0x0
0xcb5 DUP1
0xcb6 REVERT
---
0xcb3: V1253 = 0x0
0xcb6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7ea, V810, V1221, 0xa9059cbb, V1243, 0x0, V1246, V1247, V1246, 0x0, V1221]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, V810, V1221, 0xa9059cbb, V1243, 0x0, V1246, V1247, V1246, 0x0, V1221]

================================

Block 0xcb7
[0xcb7:0xcc3]
---
Predecessors: [0xc62]
Successors: [0xcc4, 0xcc8]
---
0xcb7 JUMPDEST
0xcb8 PUSH2 0x2c6
0xcbb GAS
0xcbc SUB
0xcbd CALL
0xcbe ISZERO
0xcbf ISZERO
0xcc0 PUSH2 0xcc8
0xcc3 JUMPI
---
0xcb7: JUMPDEST 
0xcb8: V1254 = 0x2c6
0xcbb: V1255 = GAS
0xcbc: V1256 = SUB V1255 0x2c6
0xcbd: V1257 = CALL V1256 V1221 0x0 V1246 V1247 V1246 0x0
0xcbe: V1258 = ISZERO V1257
0xcbf: V1259 = ISZERO V1258
0xcc0: V1260 = 0xcc8
0xcc3: JUMPI 0xcc8 V1259
---
Entry stack: [V12, 0x7ea, V810, V1221, 0xa9059cbb, V1243, 0x0, V1246, V1247, V1246, 0x0, V1221]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7ea, V810, V1221, 0xa9059cbb, V1243]

================================

Block 0xcc4
[0xcc4:0xcc7]
---
Predecessors: [0xcb7]
Successors: []
---
0xcc4 PUSH1 0x0
0xcc6 DUP1
0xcc7 REVERT
---
0xcc4: V1261 = 0x0
0xcc7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7ea, V810, V1221, 0xa9059cbb, V1243]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, V810, V1221, 0xa9059cbb, V1243]

================================

Block 0xcc8
[0xcc8:0xccb]
---
Predecessors: [0xcb7]
Successors: [0xccc]
---
0xcc8 JUMPDEST
0xcc9 POP
0xcca POP
0xccb POP
---
0xcc8: JUMPDEST 
---
Entry stack: [V12, 0x7ea, V810, V1221, 0xa9059cbb, V1243]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7ea, V810]

================================

Block 0xccc
[0xccc:0xccc]
---
Predecessors: [0xc41, 0xc4b, 0xcc8, 0xe34, 0xf23, 0xf5c]
Successors: [0xccd]
---
0xccc JUMPDEST
---
0xccc: JUMPDEST 
---
Entry stack: [V12, 0x7ea, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, S0]

================================

Block 0xccd
[0xccd:0xccd]
---
Predecessors: [0xccc]
Successors: [0xcce]
---
0xccd JUMPDEST
---
0xccd: JUMPDEST 
---
Entry stack: [V12, 0x7ea, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, S0]

================================

Block 0xcce
[0xcce:0xcce]
---
Predecessors: [0xccd]
Successors: [0xccf]
---
0xcce JUMPDEST
---
0xcce: JUMPDEST 
---
Entry stack: [V12, 0x7ea, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, S0]

================================

Block 0xccf
[0xccf:0xcd1]
---
Predecessors: [0xcce]
Successors: [0x7ea]
---
0xccf JUMPDEST
0xcd0 POP
0xcd1 JUMP
---
0xccf: JUMPDEST 
0xcd1: JUMP 0x7ea
---
Entry stack: [V12, 0x7ea, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xcd2
[0xcd2:0xcd7]
---
Predecessors: [0x834]
Successors: [0x7ff]
---
0xcd2 JUMPDEST
0xcd3 PUSH1 0x2
0xcd5 SLOAD
0xcd6 DUP2
0xcd7 JUMP
---
0xcd2: JUMPDEST 
0xcd3: V1262 = 0x2
0xcd5: V1263 = S[0x2]
0xcd7: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff]
Stack pops: 1
Stack additions: [S0, V1263]
Exit stack: [V12, 0x7ff, V1263]

================================

Block 0xcd8
[0xcd8:0xcdd]
---
Predecessors: [0x859]
Successors: [0x7ff]
---
0xcd8 JUMPDEST
0xcd9 PUSH1 0x5
0xcdb SLOAD
0xcdc DUP2
0xcdd JUMP
---
0xcd8: JUMPDEST 
0xcd9: V1264 = 0x5
0xcdb: V1265 = S[0x5]
0xcdd: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff]
Stack pops: 1
Stack additions: [S0, V1265]
Exit stack: [V12, 0x7ff, V1265]

================================

Block 0xcde
[0xcde:0xce3]
---
Predecessors: [0x87e]
Successors: [0x7ff]
---
0xcde JUMPDEST
0xcdf PUSH1 0xf
0xce1 SLOAD
0xce2 DUP2
0xce3 JUMP
---
0xcde: JUMPDEST 
0xcdf: V1266 = 0xf
0xce1: V1267 = S[0xf]
0xce3: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff]
Stack pops: 1
Stack additions: [S0, V1267]
Exit stack: [V12, 0x7ff, V1267]

================================

Block 0xce4
[0xce4:0xcf2]
---
Predecessors: [0x8a3]
Successors: [0x8ab]
---
0xce4 JUMPDEST
0xce5 PUSH1 0x3
0xce7 SLOAD
0xce8 PUSH1 0x1
0xcea PUSH1 0xa0
0xcec PUSH1 0x2
0xcee EXP
0xcef SUB
0xcf0 AND
0xcf1 DUP2
0xcf2 JUMP
---
0xce4: JUMPDEST 
0xce5: V1268 = 0x3
0xce7: V1269 = S[0x3]
0xce8: V1270 = 0x1
0xcea: V1271 = 0xa0
0xcec: V1272 = 0x2
0xcee: V1273 = EXP 0x2 0xa0
0xcef: V1274 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf0: V1275 = AND 0xffffffffffffffffffffffffffffffffffffffff V1269
0xcf2: JUMP 0x8ab
---
Entry stack: [V12, 0x8ab]
Stack pops: 1
Stack additions: [S0, V1275]
Exit stack: [V12, 0x8ab, V1275]

================================

Block 0xcf3
[0xcf3:0xcf8]
---
Predecessors: [0x8d2]
Successors: [0x7ff]
---
0xcf3 JUMPDEST
0xcf4 PUSH1 0xd
0xcf6 SLOAD
0xcf7 DUP2
0xcf8 JUMP
---
0xcf3: JUMPDEST 
0xcf4: V1276 = 0xd
0xcf6: V1277 = S[0xd]
0xcf8: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff]
Stack pops: 1
Stack additions: [S0, V1277]
Exit stack: [V12, 0x7ff, V1277]

================================

Block 0xcf9
[0xcf9:0xcfe]
---
Predecessors: [0x8f7]
Successors: [0x7ff]
---
0xcf9 JUMPDEST
0xcfa PUSH1 0x10
0xcfc SLOAD
0xcfd DUP2
0xcfe JUMP
---
0xcf9: JUMPDEST 
0xcfa: V1278 = 0x10
0xcfc: V1279 = S[0x10]
0xcfe: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff]
Stack pops: 1
Stack additions: [S0, V1279]
Exit stack: [V12, 0x7ff, V1279]

================================

Block 0xcff
[0xcff:0xd16]
---
Predecessors: [0x91c]
Successors: [0xc37, 0xd17]
---
0xcff JUMPDEST
0xd00 PUSH1 0x4
0xd02 SLOAD
0xd03 CALLER
0xd04 PUSH1 0x1
0xd06 PUSH1 0xa0
0xd08 PUSH1 0x2
0xd0a EXP
0xd0b SUB
0xd0c SWAP1
0xd0d DUP2
0xd0e AND
0xd0f SWAP2
0xd10 AND
0xd11 EQ
0xd12 ISZERO
0xd13 PUSH2 0xc37
0xd16 JUMPI
---
0xcff: JUMPDEST 
0xd00: V1280 = 0x4
0xd02: V1281 = S[0x4]
0xd03: V1282 = CALLER
0xd04: V1283 = 0x1
0xd06: V1284 = 0xa0
0xd08: V1285 = 0x2
0xd0a: V1286 = EXP 0x2 0xa0
0xd0b: V1287 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd0e: V1288 = AND 0xffffffffffffffffffffffffffffffffffffffff V1282
0xd10: V1289 = AND V1281 0xffffffffffffffffffffffffffffffffffffffff
0xd11: V1290 = EQ V1289 V1288
0xd12: V1291 = ISZERO V1290
0xd13: V1292 = 0xc37
0xd16: JUMPI 0xc37 V1291
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xd17
[0xd17:0xd21]
---
Predecessors: [0xcff]
Successors: [0xd22]
---
0xd17 PUSH1 0x14
0xd19 DUP1
0xd1a SLOAD
0xd1b PUSH2 0xff00
0xd1e NOT
0xd1f AND
0xd20 SWAP1
0xd21 SSTORE
---
0xd17: V1293 = 0x14
0xd1a: V1294 = S[0x14]
0xd1b: V1295 = 0xff00
0xd1e: V1296 = NOT 0xff00
0xd1f: V1297 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1294
0xd21: S[0x14] = V1297
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xd22
[0xd22:0xd22]
---
Predecessors: [0xd17]
Successors: [0xd23]
---
0xd22 JUMPDEST
---
0xd22: JUMPDEST 
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xd23
[0xd23:0xd24]
---
Predecessors: [0xd22]
Successors: [0x7ea]
---
0xd23 JUMPDEST
0xd24 JUMP
---
0xd23: JUMPDEST 
0xd24: JUMP 0x7ea
---
Entry stack: [V12, 0x7ea]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xd25
[0xd25:0xd33]
---
Predecessors: [0x931]
Successors: [0x8ab]
---
0xd25 JUMPDEST
0xd26 PUSH1 0x4
0xd28 SLOAD
0xd29 PUSH1 0x1
0xd2b PUSH1 0xa0
0xd2d PUSH1 0x2
0xd2f EXP
0xd30 SUB
0xd31 AND
0xd32 DUP2
0xd33 JUMP
---
0xd25: JUMPDEST 
0xd26: V1298 = 0x4
0xd28: V1299 = S[0x4]
0xd29: V1300 = 0x1
0xd2b: V1301 = 0xa0
0xd2d: V1302 = 0x2
0xd2f: V1303 = EXP 0x2 0xa0
0xd30: V1304 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd31: V1305 = AND 0xffffffffffffffffffffffffffffffffffffffff V1299
0xd33: JUMP 0x8ab
---
Entry stack: [V12, 0x8ab]
Stack pops: 1
Stack additions: [S0, V1305]
Exit stack: [V12, 0x8ab, V1305]

================================

Block 0xd34
[0xd34:0xd42]
---
Predecessors: [0x960]
Successors: [0x968]
---
0xd34 JUMPDEST
0xd35 PUSH1 0x14
0xd37 SLOAD
0xd38 PUSH3 0x10000
0xd3c SWAP1
0xd3d DIV
0xd3e PUSH1 0xff
0xd40 AND
0xd41 DUP2
0xd42 JUMP
---
0xd34: JUMPDEST 
0xd35: V1306 = 0x14
0xd37: V1307 = S[0x14]
0xd38: V1308 = 0x10000
0xd3d: V1309 = DIV V1307 0x10000
0xd3e: V1310 = 0xff
0xd40: V1311 = AND 0xff V1309
0xd42: JUMP 0x968
---
Entry stack: [V12, 0x968]
Stack pops: 1
Stack additions: [S0, V1311]
Exit stack: [V12, 0x968, V1311]

================================

Block 0xd43
[0xd43:0xd51]
---
Predecessors: [0x987]
Successors: [0x8ab]
---
0xd43 JUMPDEST
0xd44 PUSH1 0x12
0xd46 SLOAD
0xd47 PUSH1 0x1
0xd49 PUSH1 0xa0
0xd4b PUSH1 0x2
0xd4d EXP
0xd4e SUB
0xd4f AND
0xd50 DUP2
0xd51 JUMP
---
0xd43: JUMPDEST 
0xd44: V1312 = 0x12
0xd46: V1313 = S[0x12]
0xd47: V1314 = 0x1
0xd49: V1315 = 0xa0
0xd4b: V1316 = 0x2
0xd4d: V1317 = EXP 0x2 0xa0
0xd4e: V1318 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd4f: V1319 = AND 0xffffffffffffffffffffffffffffffffffffffff V1313
0xd51: JUMP 0x8ab
---
Entry stack: [V12, 0x8ab]
Stack pops: 1
Stack additions: [S0, V1319]
Exit stack: [V12, 0x8ab, V1319]

================================

Block 0xd52
[0xd52:0xd63]
---
Predecessors: [0x9b6]
Successors: [0x7ff]
---
0xd52 JUMPDEST
0xd53 PUSH1 0x13
0xd55 PUSH1 0x20
0xd57 MSTORE
0xd58 PUSH1 0x0
0xd5a SWAP1
0xd5b DUP2
0xd5c MSTORE
0xd5d PUSH1 0x40
0xd5f SWAP1
0xd60 SHA3
0xd61 SLOAD
0xd62 DUP2
0xd63 JUMP
---
0xd52: JUMPDEST 
0xd53: V1320 = 0x13
0xd55: V1321 = 0x20
0xd57: M[0x20] = 0x13
0xd58: V1322 = 0x0
0xd5c: M[0x0] = V967
0xd5d: V1323 = 0x40
0xd60: V1324 = SHA3 0x0 0x40
0xd61: V1325 = S[V1324]
0xd63: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff, V967]
Stack pops: 2
Stack additions: [S1, V1325]
Exit stack: [V12, 0x7ff, V1325]

================================

Block 0xd64
[0xd64:0xd69]
---
Predecessors: [0x9e7]
Successors: [0x7ff]
---
0xd64 JUMPDEST
0xd65 PUSH1 0x7
0xd67 SLOAD
0xd68 DUP2
0xd69 JUMP
---
0xd64: JUMPDEST 
0xd65: V1326 = 0x7
0xd67: V1327 = S[0x7]
0xd69: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff]
Stack pops: 1
Stack additions: [S0, V1327]
Exit stack: [V12, 0x7ff, V1327]

================================

Block 0xd6a
[0xd6a:0xd6f]
---
Predecessors: [0xa0c]
Successors: [0x7ff]
---
0xd6a JUMPDEST
0xd6b PUSH1 0x8
0xd6d SLOAD
0xd6e DUP2
0xd6f JUMP
---
0xd6a: JUMPDEST 
0xd6b: V1328 = 0x8
0xd6d: V1329 = S[0x8]
0xd6f: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff]
Stack pops: 1
Stack additions: [S0, V1329]
Exit stack: [V12, 0x7ff, V1329]

================================

Block 0xd70
[0xd70:0xd75]
---
Predecessors: [0xa31]
Successors: [0x7ff]
---
0xd70 JUMPDEST
0xd71 PUSH1 0x11
0xd73 SLOAD
0xd74 DUP2
0xd75 JUMP
---
0xd70: JUMPDEST 
0xd71: V1330 = 0x11
0xd73: V1331 = S[0x11]
0xd75: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff]
Stack pops: 1
Stack additions: [S0, V1331]
Exit stack: [V12, 0x7ff, V1331]

================================

Block 0xd76
[0xd76:0xd7b]
---
Predecessors: [0xa56]
Successors: [0x7ff]
---
0xd76 JUMPDEST
0xd77 PUSH1 0x1
0xd79 SLOAD
0xd7a DUP2
0xd7b JUMP
---
0xd76: JUMPDEST 
0xd77: V1332 = 0x1
0xd79: V1333 = S[0x1]
0xd7b: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff]
Stack pops: 1
Stack additions: [S0, V1333]
Exit stack: [V12, 0x7ff, V1333]

================================

Block 0xd7c
[0xd7c:0xd81]
---
Predecessors: [0xa7b]
Successors: [0x7ff]
---
0xd7c JUMPDEST
0xd7d PUSH1 0xe
0xd7f SLOAD
0xd80 DUP2
0xd81 JUMP
---
0xd7c: JUMPDEST 
0xd7d: V1334 = 0xe
0xd7f: V1335 = S[0xe]
0xd81: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff]
Stack pops: 1
Stack additions: [S0, V1335]
Exit stack: [V12, 0x7ff, V1335]

================================

Block 0xd82
[0xd82:0xd87]
---
Predecessors: [0xaa0]
Successors: [0x7ff]
---
0xd82 JUMPDEST
0xd83 PUSH1 0x9
0xd85 SLOAD
0xd86 DUP2
0xd87 JUMP
---
0xd82: JUMPDEST 
0xd83: V1336 = 0x9
0xd85: V1337 = S[0x9]
0xd87: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff]
Stack pops: 1
Stack additions: [S0, V1337]
Exit stack: [V12, 0x7ff, V1337]

================================

Block 0xd88
[0xd88:0xd8d]
---
Predecessors: [0xac5]
Successors: [0x7ff]
---
0xd88 JUMPDEST
0xd89 PUSH1 0xa
0xd8b SLOAD
0xd8c DUP2
0xd8d JUMP
---
0xd88: JUMPDEST 
0xd89: V1338 = 0xa
0xd8b: V1339 = S[0xa]
0xd8d: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff]
Stack pops: 1
Stack additions: [S0, V1339]
Exit stack: [V12, 0x7ff, V1339]

================================

Block 0xd8e
[0xd8e:0xda5]
---
Predecessors: [0xaea]
Successors: [0xc37, 0xda6]
---
0xd8e JUMPDEST
0xd8f PUSH1 0x4
0xd91 SLOAD
0xd92 CALLER
0xd93 PUSH1 0x1
0xd95 PUSH1 0xa0
0xd97 PUSH1 0x2
0xd99 EXP
0xd9a SUB
0xd9b SWAP1
0xd9c DUP2
0xd9d AND
0xd9e SWAP2
0xd9f AND
0xda0 EQ
0xda1 ISZERO
0xda2 PUSH2 0xc37
0xda5 JUMPI
---
0xd8e: JUMPDEST 
0xd8f: V1340 = 0x4
0xd91: V1341 = S[0x4]
0xd92: V1342 = CALLER
0xd93: V1343 = 0x1
0xd95: V1344 = 0xa0
0xd97: V1345 = 0x2
0xd99: V1346 = EXP 0x2 0xa0
0xd9a: V1347 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd9d: V1348 = AND 0xffffffffffffffffffffffffffffffffffffffff V1342
0xd9f: V1349 = AND V1341 0xffffffffffffffffffffffffffffffffffffffff
0xda0: V1350 = EQ V1349 V1348
0xda1: V1351 = ISZERO V1350
0xda2: V1352 = 0xc37
0xda5: JUMPI 0xc37 V1351
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xda6
[0xda6:0xdb1]
---
Predecessors: [0xd8e]
Successors: [0xdb2]
---
0xda6 PUSH1 0x14
0xda8 DUP1
0xda9 SLOAD
0xdaa PUSH3 0xff0000
0xdae NOT
0xdaf AND
0xdb0 SWAP1
0xdb1 SSTORE
---
0xda6: V1353 = 0x14
0xda9: V1354 = S[0x14]
0xdaa: V1355 = 0xff0000
0xdae: V1356 = NOT 0xff0000
0xdaf: V1357 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V1354
0xdb1: S[0x14] = V1357
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xdb2
[0xdb2:0xdb2]
---
Predecessors: [0xda6]
Successors: [0xdb3]
---
0xdb2 JUMPDEST
---
0xdb2: JUMPDEST 
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xdb3
[0xdb3:0xdb4]
---
Predecessors: [0xdb2]
Successors: [0x7ea]
---
0xdb3 JUMPDEST
0xdb4 JUMP
---
0xdb3: JUMPDEST 
0xdb4: JUMP 0x7ea
---
Entry stack: [V12, 0x7ea]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xdb5
[0xdb5:0xdcc]
---
Predecessors: [0xaff]
Successors: [0xc37, 0xdcd]
---
0xdb5 JUMPDEST
0xdb6 PUSH1 0x4
0xdb8 SLOAD
0xdb9 CALLER
0xdba PUSH1 0x1
0xdbc PUSH1 0xa0
0xdbe PUSH1 0x2
0xdc0 EXP
0xdc1 SUB
0xdc2 SWAP1
0xdc3 DUP2
0xdc4 AND
0xdc5 SWAP2
0xdc6 AND
0xdc7 EQ
0xdc8 ISZERO
0xdc9 PUSH2 0xc37
0xdcc JUMPI
---
0xdb5: JUMPDEST 
0xdb6: V1358 = 0x4
0xdb8: V1359 = S[0x4]
0xdb9: V1360 = CALLER
0xdba: V1361 = 0x1
0xdbc: V1362 = 0xa0
0xdbe: V1363 = 0x2
0xdc0: V1364 = EXP 0x2 0xa0
0xdc1: V1365 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdc4: V1366 = AND 0xffffffffffffffffffffffffffffffffffffffff V1360
0xdc6: V1367 = AND V1359 0xffffffffffffffffffffffffffffffffffffffff
0xdc7: V1368 = EQ V1367 V1366
0xdc8: V1369 = ISZERO V1368
0xdc9: V1370 = 0xc37
0xdcc: JUMPI 0xc37 V1369
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xdcd
[0xdcd:0xddb]
---
Predecessors: [0xdb5]
Successors: [0xddc]
---
0xdcd PUSH1 0x14
0xdcf DUP1
0xdd0 SLOAD
0xdd1 PUSH2 0xff00
0xdd4 NOT
0xdd5 AND
0xdd6 PUSH2 0x100
0xdd9 OR
0xdda SWAP1
0xddb SSTORE
---
0xdcd: V1371 = 0x14
0xdd0: V1372 = S[0x14]
0xdd1: V1373 = 0xff00
0xdd4: V1374 = NOT 0xff00
0xdd5: V1375 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1372
0xdd6: V1376 = 0x100
0xdd9: V1377 = OR 0x100 V1375
0xddb: S[0x14] = V1377
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xddc
[0xddc:0xddc]
---
Predecessors: [0xdcd]
Successors: [0xddd]
---
0xddc JUMPDEST
---
0xddc: JUMPDEST 
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xddd
[0xddd:0xdde]
---
Predecessors: [0xddc]
Successors: [0x7ea]
---
0xddd JUMPDEST
0xdde JUMP
---
0xddd: JUMPDEST 
0xdde: JUMP 0x7ea
---
Entry stack: [V12, 0x7ea]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xddf
[0xddf:0xde4]
---
Predecessors: [0xb14]
Successors: [0x7ff]
---
0xddf JUMPDEST
0xde0 PUSH1 0xc
0xde2 SLOAD
0xde3 DUP2
0xde4 JUMP
---
0xddf: JUMPDEST 
0xde0: V1378 = 0xc
0xde2: V1379 = S[0xc]
0xde4: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff]
Stack pops: 1
Stack additions: [S0, V1379]
Exit stack: [V12, 0x7ff, V1379]

================================

Block 0xde5
[0xde5:0xdea]
---
Predecessors: [0xb39]
Successors: [0x7ff]
---
0xde5 JUMPDEST
0xde6 PUSH1 0xb
0xde8 SLOAD
0xde9 DUP2
0xdea JUMP
---
0xde5: JUMPDEST 
0xde6: V1380 = 0xb
0xde8: V1381 = S[0xb]
0xdea: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff]
Stack pops: 1
Stack additions: [S0, V1381]
Exit stack: [V12, 0x7ff, V1381]

================================

Block 0xdeb
[0xdeb:0xdf0]
---
Predecessors: [0xb5e]
Successors: [0x7ff]
---
0xdeb JUMPDEST
0xdec PUSH1 0x6
0xdee SLOAD
0xdef DUP2
0xdf0 JUMP
---
0xdeb: JUMPDEST 
0xdec: V1382 = 0x6
0xdee: V1383 = S[0x6]
0xdf0: JUMP 0x7ff
---
Entry stack: [V12, 0x7ff]
Stack pops: 1
Stack additions: [S0, V1383]
Exit stack: [V12, 0x7ff, V1383]

================================

Block 0xdf1
[0xdf1:0xdfe]
---
Predecessors: [0xb83]
Successors: [0x968]
---
0xdf1 JUMPDEST
0xdf2 PUSH1 0x14
0xdf4 SLOAD
0xdf5 PUSH2 0x100
0xdf8 SWAP1
0xdf9 DIV
0xdfa PUSH1 0xff
0xdfc AND
0xdfd DUP2
0xdfe JUMP
---
0xdf1: JUMPDEST 
0xdf2: V1384 = 0x14
0xdf4: V1385 = S[0x14]
0xdf5: V1386 = 0x100
0xdf9: V1387 = DIV V1385 0x100
0xdfa: V1388 = 0xff
0xdfc: V1389 = AND 0xff V1387
0xdfe: JUMP 0x968
---
Entry stack: [V12, 0x968]
Stack pops: 1
Stack additions: [S0, V1389]
Exit stack: [V12, 0x968, V1389]

================================

Block 0xdff
[0xdff:0xe07]
---
Predecessors: [0xbaa]
Successors: [0x968]
---
0xdff JUMPDEST
0xe00 PUSH1 0x14
0xe02 SLOAD
0xe03 PUSH1 0xff
0xe05 AND
0xe06 DUP2
0xe07 JUMP
---
0xdff: JUMPDEST 
0xe00: V1390 = 0x14
0xe02: V1391 = S[0x14]
0xe03: V1392 = 0xff
0xe05: V1393 = AND 0xff V1391
0xe07: JUMP 0x968
---
Entry stack: [V12, 0x968]
Stack pops: 1
Stack additions: [S0, V1393]
Exit stack: [V12, 0x968, V1393]

================================

Block 0xe08
[0xe08:0xe1f]
---
Predecessors: [0xbd1]
Successors: [0xc37, 0xe20]
---
0xe08 JUMPDEST
0xe09 PUSH1 0x4
0xe0b SLOAD
0xe0c CALLER
0xe0d PUSH1 0x1
0xe0f PUSH1 0xa0
0xe11 PUSH1 0x2
0xe13 EXP
0xe14 SUB
0xe15 SWAP1
0xe16 DUP2
0xe17 AND
0xe18 SWAP2
0xe19 AND
0xe1a EQ
0xe1b ISZERO
0xe1c PUSH2 0xc37
0xe1f JUMPI
---
0xe08: JUMPDEST 
0xe09: V1394 = 0x4
0xe0b: V1395 = S[0x4]
0xe0c: V1396 = CALLER
0xe0d: V1397 = 0x1
0xe0f: V1398 = 0xa0
0xe11: V1399 = 0x2
0xe13: V1400 = EXP 0x2 0xa0
0xe14: V1401 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe17: V1402 = AND 0xffffffffffffffffffffffffffffffffffffffff V1396
0xe19: V1403 = AND V1395 0xffffffffffffffffffffffffffffffffffffffff
0xe1a: V1404 = EQ V1403 V1402
0xe1b: V1405 = ISZERO V1404
0xe1c: V1406 = 0xc37
0xe1f: JUMPI 0xc37 V1405
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xe20
[0xe20:0xe30]
---
Predecessors: [0xe08]
Successors: [0xe31]
---
0xe20 PUSH1 0x14
0xe22 DUP1
0xe23 SLOAD
0xe24 PUSH3 0xff0000
0xe28 NOT
0xe29 AND
0xe2a PUSH3 0x10000
0xe2e OR
0xe2f SWAP1
0xe30 SSTORE
---
0xe20: V1407 = 0x14
0xe23: V1408 = S[0x14]
0xe24: V1409 = 0xff0000
0xe28: V1410 = NOT 0xff0000
0xe29: V1411 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V1408
0xe2a: V1412 = 0x10000
0xe2e: V1413 = OR 0x10000 V1411
0xe30: S[0x14] = V1413
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xe31
[0xe31:0xe31]
---
Predecessors: [0xe20]
Successors: [0xe32]
---
0xe31 JUMPDEST
---
0xe31: JUMPDEST 
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea]

================================

Block 0xe32
[0xe32:0xe33]
---
Predecessors: [0xe31]
Successors: [0x7ea]
---
0xe32 JUMPDEST
0xe33 JUMP
---
0xe32: JUMPDEST 
0xe33: JUMP 0x7ea
---
Entry stack: [V12, 0x7ea]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xe34
[0xe34:0xe40]
---
Predecessors: [0xbe6]
Successors: [0xccc, 0xe41]
---
0xe34 JUMPDEST
0xe35 PUSH1 0x2
0xe37 SLOAD
0xe38 PUSH1 0x0
0xe3a SWAP1
0xe3b TIMESTAMP
0xe3c LT
0xe3d PUSH2 0xccc
0xe40 JUMPI
---
0xe34: JUMPDEST 
0xe35: V1414 = 0x2
0xe37: V1415 = S[0x2]
0xe38: V1416 = 0x0
0xe3b: V1417 = TIMESTAMP
0xe3c: V1418 = LT V1417 V1415
0xe3d: V1419 = 0xccc
0xe40: JUMPI 0xccc V1418
---
Entry stack: [V12, 0x7ea]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7ea, 0x0]

================================

Block 0xe41
[0xe41:0xe4c]
---
Predecessors: [0xe34]
Successors: [0xe4d, 0xf01]
---
0xe41 PUSH1 0x14
0xe43 SLOAD
0xe44 PUSH1 0xff
0xe46 AND
0xe47 ISZERO
0xe48 ISZERO
0xe49 PUSH2 0xf01
0xe4c JUMPI
---
0xe41: V1420 = 0x14
0xe43: V1421 = S[0x14]
0xe44: V1422 = 0xff
0xe46: V1423 = AND 0xff V1421
0xe47: V1424 = ISZERO V1423
0xe48: V1425 = ISZERO V1424
0xe49: V1426 = 0xf01
0xe4c: JUMPI 0xf01 V1425
---
Entry stack: [V12, 0x7ea, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, 0x0]

================================

Block 0xe4d
[0xe4d:0xe73]
---
Predecessors: [0xe41]
Successors: [0xe74, 0xf01]
---
0xe4d POP
0xe4e PUSH1 0x1
0xe50 PUSH1 0xa0
0xe52 PUSH1 0x2
0xe54 EXP
0xe55 SUB
0xe56 CALLER
0xe57 AND
0xe58 PUSH1 0x0
0xe5a SWAP1
0xe5b DUP2
0xe5c MSTORE
0xe5d PUSH1 0x13
0xe5f PUSH1 0x20
0xe61 MSTORE
0xe62 PUSH1 0x40
0xe64 DUP2
0xe65 SHA3
0xe66 DUP1
0xe67 SLOAD
0xe68 SWAP1
0xe69 DUP3
0xe6a SWAP1
0xe6b SSTORE
0xe6c SWAP1
0xe6d DUP2
0xe6e GT
0xe6f ISZERO
0xe70 PUSH2 0xf01
0xe73 JUMPI
---
0xe4e: V1427 = 0x1
0xe50: V1428 = 0xa0
0xe52: V1429 = 0x2
0xe54: V1430 = EXP 0x2 0xa0
0xe55: V1431 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe56: V1432 = CALLER
0xe57: V1433 = AND V1432 0xffffffffffffffffffffffffffffffffffffffff
0xe58: V1434 = 0x0
0xe5c: M[0x0] = V1433
0xe5d: V1435 = 0x13
0xe5f: V1436 = 0x20
0xe61: M[0x20] = 0x13
0xe62: V1437 = 0x40
0xe65: V1438 = SHA3 0x0 0x40
0xe67: V1439 = S[V1438]
0xe6b: S[V1438] = 0x0
0xe6e: V1440 = GT V1439 0x0
0xe6f: V1441 = ISZERO V1440
0xe70: V1442 = 0xf01
0xe73: JUMPI 0xf01 V1441
---
Entry stack: [V12, 0x7ea, 0x0]
Stack pops: 1
Stack additions: [V1439]
Exit stack: [V12, 0x7ea, V1439]

================================

Block 0xe74
[0xe74:0xe9e]
---
Predecessors: [0xe4d]
Successors: [0xe9f, 0xee5]
---
0xe74 PUSH1 0x1
0xe76 PUSH1 0xa0
0xe78 PUSH1 0x2
0xe7a EXP
0xe7b SUB
0xe7c CALLER
0xe7d AND
0xe7e DUP2
0xe7f ISZERO
0xe80 PUSH2 0x8fc
0xe83 MUL
0xe84 DUP3
0xe85 PUSH1 0x40
0xe87 MLOAD
0xe88 PUSH1 0x0
0xe8a PUSH1 0x40
0xe8c MLOAD
0xe8d DUP1
0xe8e DUP4
0xe8f SUB
0xe90 DUP2
0xe91 DUP6
0xe92 DUP9
0xe93 DUP9
0xe94 CALL
0xe95 SWAP4
0xe96 POP
0xe97 POP
0xe98 POP
0xe99 POP
0xe9a ISZERO
0xe9b PUSH2 0xee5
0xe9e JUMPI
---
0xe74: V1443 = 0x1
0xe76: V1444 = 0xa0
0xe78: V1445 = 0x2
0xe7a: V1446 = EXP 0x2 0xa0
0xe7b: V1447 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe7c: V1448 = CALLER
0xe7d: V1449 = AND V1448 0xffffffffffffffffffffffffffffffffffffffff
0xe7f: V1450 = ISZERO V1439
0xe80: V1451 = 0x8fc
0xe83: V1452 = MUL 0x8fc V1450
0xe85: V1453 = 0x40
0xe87: V1454 = M[0x40]
0xe88: V1455 = 0x0
0xe8a: V1456 = 0x40
0xe8c: V1457 = M[0x40]
0xe8f: V1458 = SUB V1454 V1457
0xe94: V1459 = CALL V1452 V1449 V1439 V1457 V1458 V1457 0x0
0xe9a: V1460 = ISZERO V1459
0xe9b: V1461 = 0xee5
0xe9e: JUMPI 0xee5 V1460
---
Entry stack: [V12, 0x7ea, V1439]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7ea, V1439]

================================

Block 0xe9f
[0xe9f:0xee4]
---
Predecessors: [0xe74]
Successors: [0xf01]
---
0xe9f PUSH1 0x0
0xea1 DUP1
0xea2 MLOAD
0xea3 PUSH1 0x20
0xea5 PUSH2 0xfc4
0xea8 DUP4
0xea9 CODECOPY
0xeaa DUP2
0xeab MLOAD
0xeac SWAP2
0xead MSTORE
0xeae CALLER
0xeaf DUP3
0xeb0 PUSH1 0x0
0xeb2 PUSH1 0x40
0xeb4 MLOAD
0xeb5 PUSH1 0x1
0xeb7 PUSH1 0xa0
0xeb9 PUSH1 0x2
0xebb EXP
0xebc SUB
0xebd SWAP1
0xebe SWAP4
0xebf AND
0xec0 DUP4
0xec1 MSTORE
0xec2 PUSH1 0x20
0xec4 DUP4
0xec5 ADD
0xec6 SWAP2
0xec7 SWAP1
0xec8 SWAP2
0xec9 MSTORE
0xeca ISZERO
0xecb ISZERO
0xecc PUSH1 0x40
0xece DUP1
0xecf DUP4
0xed0 ADD
0xed1 SWAP2
0xed2 SWAP1
0xed3 SWAP2
0xed4 MSTORE
0xed5 PUSH1 0x60
0xed7 SWAP1
0xed8 SWAP2
0xed9 ADD
0xeda SWAP1
0xedb MLOAD
0xedc DUP1
0xedd SWAP2
0xede SUB
0xedf SWAP1
0xee0 LOG1
0xee1 PUSH2 0xf01
0xee4 JUMP
---
0xe9f: V1462 = 0x0
0xea2: V1463 = M[0x0]
0xea3: V1464 = 0x20
0xea5: V1465 = 0xfc4
0xea9: CODECOPY 0x0 0xfc4 0x20
0xeab: V1466 = M[0x0]
0xead: M[0x0] = V1463
0xeae: V1467 = CALLER
0xeb0: V1468 = 0x0
0xeb2: V1469 = 0x40
0xeb4: V1470 = M[0x40]
0xeb5: V1471 = 0x1
0xeb7: V1472 = 0xa0
0xeb9: V1473 = 0x2
0xebb: V1474 = EXP 0x2 0xa0
0xebc: V1475 = SUB 0x10000000000000000000000000000000000000000 0x1
0xebf: V1476 = AND V1467 0xffffffffffffffffffffffffffffffffffffffff
0xec1: M[V1470] = V1476
0xec2: V1477 = 0x20
0xec5: V1478 = ADD V1470 0x20
0xec9: M[V1478] = V1439
0xeca: V1479 = ISZERO 0x0
0xecb: V1480 = ISZERO 0x1
0xecc: V1481 = 0x40
0xed0: V1482 = ADD V1470 0x40
0xed4: M[V1482] = 0x0
0xed5: V1483 = 0x60
0xed9: V1484 = ADD V1470 0x60
0xedb: V1485 = M[0x40]
0xede: V1486 = SUB V1484 V1485
0xee0: LOG V1485 V1486 V1466
0xee1: V1487 = 0xf01
0xee4: JUMP 0xf01
---
Entry stack: [V12, 0x7ea, V1439]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7ea, V1439]

================================

Block 0xee5
[0xee5:0xf00]
---
Predecessors: [0xe74]
Successors: [0xf01]
---
0xee5 JUMPDEST
0xee6 PUSH1 0x1
0xee8 PUSH1 0xa0
0xeea PUSH1 0x2
0xeec EXP
0xeed SUB
0xeee CALLER
0xeef AND
0xef0 PUSH1 0x0
0xef2 SWAP1
0xef3 DUP2
0xef4 MSTORE
0xef5 PUSH1 0x13
0xef7 PUSH1 0x20
0xef9 MSTORE
0xefa PUSH1 0x40
0xefc SWAP1
0xefd SHA3
0xefe DUP2
0xeff SWAP1
0xf00 SSTORE
---
0xee5: JUMPDEST 
0xee6: V1488 = 0x1
0xee8: V1489 = 0xa0
0xeea: V1490 = 0x2
0xeec: V1491 = EXP 0x2 0xa0
0xeed: V1492 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeee: V1493 = CALLER
0xeef: V1494 = AND V1493 0xffffffffffffffffffffffffffffffffffffffff
0xef0: V1495 = 0x0
0xef4: M[0x0] = V1494
0xef5: V1496 = 0x13
0xef7: V1497 = 0x20
0xef9: M[0x20] = 0x13
0xefa: V1498 = 0x40
0xefd: V1499 = SHA3 0x0 0x40
0xf00: S[V1499] = V1439
---
Entry stack: [V12, 0x7ea, V1439]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7ea, V1439]

================================

Block 0xf01
[0xf01:0xf01]
---
Predecessors: [0xe41, 0xe4d, 0xe9f, 0xee5]
Successors: [0xf02]
---
0xf01 JUMPDEST
---
0xf01: JUMPDEST 
---
Entry stack: [V12, 0x7ea, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, S0]

================================

Block 0xf02
[0xf02:0xf02]
---
Predecessors: [0xf01]
Successors: [0xf03]
---
0xf02 JUMPDEST
---
0xf02: JUMPDEST 
---
Entry stack: [V12, 0x7ea, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, S0]

================================

Block 0xf03
[0xf03:0xf0f]
---
Predecessors: [0xf02]
Successors: [0xf10, 0xf23]
---
0xf03 JUMPDEST
0xf04 PUSH1 0x14
0xf06 SLOAD
0xf07 PUSH1 0xff
0xf09 AND
0xf0a DUP1
0xf0b ISZERO
0xf0c PUSH2 0xf23
0xf0f JUMPI
---
0xf03: JUMPDEST 
0xf04: V1500 = 0x14
0xf06: V1501 = S[0x14]
0xf07: V1502 = 0xff
0xf09: V1503 = AND 0xff V1501
0xf0b: V1504 = ISZERO V1503
0xf0c: V1505 = 0xf23
0xf0f: JUMPI 0xf23 V1504
---
Entry stack: [V12, 0x7ea, S0]
Stack pops: 0
Stack additions: [V1503]
Exit stack: [V12, 0x7ea, S0, V1503]

================================

Block 0xf10
[0xf10:0xf22]
---
Predecessors: [0xf03]
Successors: [0xf23]
---
0xf10 POP
0xf11 PUSH1 0x3
0xf13 SLOAD
0xf14 CALLER
0xf15 PUSH1 0x1
0xf17 PUSH1 0xa0
0xf19 PUSH1 0x2
0xf1b EXP
0xf1c SUB
0xf1d SWAP1
0xf1e DUP2
0xf1f AND
0xf20 SWAP2
0xf21 AND
0xf22 EQ
---
0xf11: V1506 = 0x3
0xf13: V1507 = S[0x3]
0xf14: V1508 = CALLER
0xf15: V1509 = 0x1
0xf17: V1510 = 0xa0
0xf19: V1511 = 0x2
0xf1b: V1512 = EXP 0x2 0xa0
0xf1c: V1513 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf1f: V1514 = AND 0xffffffffffffffffffffffffffffffffffffffff V1508
0xf21: V1515 = AND V1507 0xffffffffffffffffffffffffffffffffffffffff
0xf22: V1516 = EQ V1515 V1514
---
Entry stack: [V12, 0x7ea, S1, V1503]
Stack pops: 1
Stack additions: [V1516]
Exit stack: [V12, 0x7ea, S1, V1516]

================================

Block 0xf23
[0xf23:0xf28]
---
Predecessors: [0xf03, 0xf10]
Successors: [0xccc, 0xf29]
---
0xf23 JUMPDEST
0xf24 ISZERO
0xf25 PUSH2 0xccc
0xf28 JUMPI
---
0xf23: JUMPDEST 
0xf24: V1517 = ISZERO S0
0xf25: V1518 = 0xccc
0xf28: JUMPI 0xccc V1517
---
Entry stack: [V12, 0x7ea, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x7ea, S1]

================================

Block 0xf29
[0xf29:0xf5b]
---
Predecessors: [0xf23]
Successors: [0xf5c, 0xfb1]
---
0xf29 PUSH1 0x3
0xf2b SLOAD
0xf2c PUSH1 0x8
0xf2e SLOAD
0xf2f PUSH1 0x1
0xf31 PUSH1 0xa0
0xf33 PUSH1 0x2
0xf35 EXP
0xf36 SUB
0xf37 SWAP1
0xf38 SWAP2
0xf39 AND
0xf3a SWAP1
0xf3b DUP1
0xf3c ISZERO
0xf3d PUSH2 0x8fc
0xf40 MUL
0xf41 SWAP1
0xf42 PUSH1 0x40
0xf44 MLOAD
0xf45 PUSH1 0x0
0xf47 PUSH1 0x40
0xf49 MLOAD
0xf4a DUP1
0xf4b DUP4
0xf4c SUB
0xf4d DUP2
0xf4e DUP6
0xf4f DUP9
0xf50 DUP9
0xf51 CALL
0xf52 SWAP4
0xf53 POP
0xf54 POP
0xf55 POP
0xf56 POP
0xf57 ISZERO
0xf58 PUSH2 0xfb1
0xf5b JUMPI
---
0xf29: V1519 = 0x3
0xf2b: V1520 = S[0x3]
0xf2c: V1521 = 0x8
0xf2e: V1522 = S[0x8]
0xf2f: V1523 = 0x1
0xf31: V1524 = 0xa0
0xf33: V1525 = 0x2
0xf35: V1526 = EXP 0x2 0xa0
0xf36: V1527 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf39: V1528 = AND V1520 0xffffffffffffffffffffffffffffffffffffffff
0xf3c: V1529 = ISZERO V1522
0xf3d: V1530 = 0x8fc
0xf40: V1531 = MUL 0x8fc V1529
0xf42: V1532 = 0x40
0xf44: V1533 = M[0x40]
0xf45: V1534 = 0x0
0xf47: V1535 = 0x40
0xf49: V1536 = M[0x40]
0xf4c: V1537 = SUB V1533 V1536
0xf51: V1538 = CALL V1531 V1528 V1522 V1536 V1537 V1536 0x0
0xf57: V1539 = ISZERO V1538
0xf58: V1540 = 0xfb1
0xf5b: JUMPI 0xfb1 V1539
---
Entry stack: [V12, 0x7ea, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, S0]

================================

Block 0xf5c
[0xf5c:0xfb0]
---
Predecessors: [0xf29]
Successors: [0xccc]
---
0xf5c PUSH1 0x3
0xf5e SLOAD
0xf5f PUSH1 0x8
0xf61 SLOAD
0xf62 PUSH1 0x0
0xf64 DUP1
0xf65 MLOAD
0xf66 PUSH1 0x20
0xf68 PUSH2 0xfc4
0xf6b DUP4
0xf6c CODECOPY
0xf6d DUP2
0xf6e MLOAD
0xf6f SWAP2
0xf70 MSTORE
0xf71 SWAP2
0xf72 PUSH1 0x1
0xf74 PUSH1 0xa0
0xf76 PUSH1 0x2
0xf78 EXP
0xf79 SUB
0xf7a AND
0xf7b SWAP1
0xf7c PUSH1 0x0
0xf7e PUSH1 0x40
0xf80 MLOAD
0xf81 PUSH1 0x1
0xf83 PUSH1 0xa0
0xf85 PUSH1 0x2
0xf87 EXP
0xf88 SUB
0xf89 SWAP1
0xf8a SWAP4
0xf8b AND
0xf8c DUP4
0xf8d MSTORE
0xf8e PUSH1 0x20
0xf90 DUP4
0xf91 ADD
0xf92 SWAP2
0xf93 SWAP1
0xf94 SWAP2
0xf95 MSTORE
0xf96 ISZERO
0xf97 ISZERO
0xf98 PUSH1 0x40
0xf9a DUP1
0xf9b DUP4
0xf9c ADD
0xf9d SWAP2
0xf9e SWAP1
0xf9f SWAP2
0xfa0 MSTORE
0xfa1 PUSH1 0x60
0xfa3 SWAP1
0xfa4 SWAP2
0xfa5 ADD
0xfa6 SWAP1
0xfa7 MLOAD
0xfa8 DUP1
0xfa9 SWAP2
0xfaa SUB
0xfab SWAP1
0xfac LOG1
0xfad PUSH2 0xccc
0xfb0 JUMP
---
0xf5c: V1541 = 0x3
0xf5e: V1542 = S[0x3]
0xf5f: V1543 = 0x8
0xf61: V1544 = S[0x8]
0xf62: V1545 = 0x0
0xf65: V1546 = M[0x0]
0xf66: V1547 = 0x20
0xf68: V1548 = 0xfc4
0xf6c: CODECOPY 0x0 0xfc4 0x20
0xf6e: V1549 = M[0x0]
0xf70: M[0x0] = V1546
0xf72: V1550 = 0x1
0xf74: V1551 = 0xa0
0xf76: V1552 = 0x2
0xf78: V1553 = EXP 0x2 0xa0
0xf79: V1554 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf7a: V1555 = AND 0xffffffffffffffffffffffffffffffffffffffff V1542
0xf7c: V1556 = 0x0
0xf7e: V1557 = 0x40
0xf80: V1558 = M[0x40]
0xf81: V1559 = 0x1
0xf83: V1560 = 0xa0
0xf85: V1561 = 0x2
0xf87: V1562 = EXP 0x2 0xa0
0xf88: V1563 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf8b: V1564 = AND V1555 0xffffffffffffffffffffffffffffffffffffffff
0xf8d: M[V1558] = V1564
0xf8e: V1565 = 0x20
0xf91: V1566 = ADD V1558 0x20
0xf95: M[V1566] = V1544
0xf96: V1567 = ISZERO 0x0
0xf97: V1568 = ISZERO 0x1
0xf98: V1569 = 0x40
0xf9c: V1570 = ADD V1558 0x40
0xfa0: M[V1570] = 0x0
0xfa1: V1571 = 0x60
0xfa5: V1572 = ADD V1558 0x60
0xfa7: V1573 = M[0x40]
0xfaa: V1574 = SUB V1572 V1573
0xfac: LOG V1573 V1574 V1549
0xfad: V1575 = 0xccc
0xfb0: JUMP 0xccc
---
Entry stack: [V12, 0x7ea, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, S0]

================================

Block 0xfb1
[0xfb1:0xfbb]
---
Predecessors: [0xf29]
Successors: [0xfbc]
---
0xfb1 JUMPDEST
0xfb2 PUSH1 0x14
0xfb4 DUP1
0xfb5 SLOAD
0xfb6 PUSH1 0xff
0xfb8 NOT
0xfb9 AND
0xfba SWAP1
0xfbb SSTORE
---
0xfb1: JUMPDEST 
0xfb2: V1576 = 0x14
0xfb5: V1577 = S[0x14]
0xfb6: V1578 = 0xff
0xfb8: V1579 = NOT 0xff
0xfb9: V1580 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1577
0xfbb: S[0x14] = V1580
---
Entry stack: [V12, 0x7ea, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, S0]

================================

Block 0xfbc
[0xfbc:0xfbc]
---
Predecessors: [0xfb1]
Successors: [0xfbd]
---
0xfbc JUMPDEST
---
0xfbc: JUMPDEST 
---
Entry stack: [V12, 0x7ea, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, S0]

================================

Block 0xfbd
[0xfbd:0xfbd]
---
Predecessors: [0xfbc]
Successors: [0xfbe]
---
0xfbd JUMPDEST
---
0xfbd: JUMPDEST 
---
Entry stack: [V12, 0x7ea, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, S0]

================================

Block 0xfbe
[0xfbe:0xfbe]
---
Predecessors: [0xfbd]
Successors: [0xfbf]
---
0xfbe JUMPDEST
---
0xfbe: JUMPDEST 
---
Entry stack: [V12, 0x7ea, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, S0]

================================

Block 0xfbf
[0xfbf:0xfbf]
---
Predecessors: [0xfbe]
Successors: [0xfc0]
---
0xfbf JUMPDEST
---
0xfbf: JUMPDEST 
---
Entry stack: [V12, 0x7ea, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7ea, S0]

================================

Block 0xfc0
[0xfc0:0xfc2]
---
Predecessors: [0xfbf]
Successors: [0x7ea]
---
0xfc0 JUMPDEST
0xfc1 POP
0xfc2 JUMP
---
0xfc0: JUMPDEST 
0xfc2: JUMP 0x7ea
---
Entry stack: [V12, 0x7ea, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xfc3
[0xfc3:0xff0]
---
Predecessors: []
Successors: [0xff1]
Has unresolved jump.
---
0xfc3 STOP
0xfc4 MISSING 0xe8
0xfc5 TIMESTAMP
0xfc6 MISSING 0xae
0xfc7 MISSING 0xa7
0xfc8 MISSING 0xa5
0xfc9 CALL
0xfca MISSING 0xb0
0xfcb LT
0xfcc MISSING 0x49
0xfcd MISSING 0xd7
0xfce MSTORE
0xfcf STOP
0xfd0 DUP13
0xfd1 MSTORE8
0xfd2 MISSING 0xc5
0xfd3 MISSING 0x28
0xfd4 SWAP1
0xfd5 MISSING 0xb1
0xfd6 MISSING 0xa6
0xfd7 MISSING 0xda
0xfd8 MISSING 0xf6
0xfd9 PUSH1 0xcf
0xfdb CODECOPY
0xfdc MISSING 0xe8
0xfdd MISSING 0xee
0xfde MISSING 0xc5
0xfdf MOD
0xfe0 GT
0xfe1 MISSING 0x2b
0xfe2 MISSING 0xbd
0xfe3 MISSING 0xf6
0xfe4 LOG1
0xfe5 PUSH6 0x627a7a723058
0xfec SHA3
0xfed SWAP1
0xfee MISSING 0x21
0xfef LT
0xff0 JUMPI
---
0xfc3: STOP 
0xfc4: MISSING 0xe8
0xfc5: V1581 = TIMESTAMP
0xfc6: MISSING 0xae
0xfc7: MISSING 0xa7
0xfc8: MISSING 0xa5
0xfc9: V1582 = CALL S0 S1 S2 S3 S4 S5 S6
0xfca: MISSING 0xb0
0xfcb: V1583 = LT S0 S1
0xfcc: MISSING 0x49
0xfcd: MISSING 0xd7
0xfce: M[S0] = S1
0xfcf: STOP 
0xfd1: M8[S12] = S0
0xfd2: MISSING 0xc5
0xfd3: MISSING 0x28
0xfd5: MISSING 0xb1
0xfd6: MISSING 0xa6
0xfd7: MISSING 0xda
0xfd8: MISSING 0xf6
0xfd9: V1584 = 0xcf
0xfdb: CODECOPY 0xcf S0 S1
0xfdc: MISSING 0xe8
0xfdd: MISSING 0xee
0xfde: MISSING 0xc5
0xfdf: V1585 = MOD S0 S1
0xfe0: V1586 = GT V1585 S2
0xfe1: MISSING 0x2b
0xfe2: MISSING 0xbd
0xfe3: MISSING 0xf6
0xfe4: LOG S0 S1 S2
0xfe5: V1587 = 0x627a7a723058
0xfec: V1588 = SHA3 0x627a7a723058 S3
0xfee: MISSING 0x21
0xfef: V1589 = LT S0 S1
0xff0: JUMPI V1589 S2
---
Entry stack: []
Stack pops: 0
Stack additions: [V1581, V1582, V1583, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S1, S0, V1586, S4, V1588]
Exit stack: []

================================

Block 0xff1
[0xff1:0x1017]
---
Predecessors: [0xfc3]
Successors: []
---
0xff1 SWAP4
0xff2 CALL
0xff3 MISSING 0xc6
0xff4 MISSING 0xca
0xff5 MISSING 0xe1
0xff6 DUP1
0xff7 MISSING 0xb4
0xff8 MSIZE
0xff9 MISSING 0xc2
0xffa MISSING 0xca
0xffb MISSING 0xf7
0xffc AND
0xffd LOG2
0xffe PUSH25 0xc91c0f23bc23a99725edc6f079c70029
---
0xff2: V1590 = CALL S4 S1 S2 S3 S0 S5 S6
0xff3: MISSING 0xc6
0xff4: MISSING 0xca
0xff5: MISSING 0xe1
0xff7: MISSING 0xb4
0xff8: V1591 = MSIZE
0xff9: MISSING 0xc2
0xffa: MISSING 0xca
0xffb: MISSING 0xf7
0xffc: V1592 = AND S0 S1
0xffd: LOG V1592 S2 S3 S4
0xffe: V1593 = 0xc91c0f23bc23a99725edc6f079c70029
---
Entry stack: []
Stack pops: 812
Stack additions: [0xc91c0f23bc23a99725edc6f079c70029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x7d7
Exit block: 0x7ea
Body: 0x7d7, 0x7de, 0x7e2, 0x7ea, 0xbf0, 0xbfa, 0xc07, 0xc14, 0xc1a, 0xc27, 0xc37, 0xc38, 0xc39

Function 1:
Public function signature: 0x10309781
Entry block: 0x7ec
Exit block: 0x7ff
Body: 0x7ec, 0x7f3, 0x7f7, 0x7ff, 0xc3b

Function 2:
Public function signature: 0x1fd8ffb0
Entry block: 0x811
Exit block: 0x7ea
Body: 0x7ea, 0x811, 0x818, 0x81c, 0xc41, 0xc4b, 0xc62, 0xcb3, 0xcb7, 0xcc4, 0xcc8, 0xccc, 0xccd, 0xcce, 0xccf

Function 3:
Public function signature: 0x29dcb0cf
Entry block: 0x829
Exit block: 0x7ff
Body: 0x7ff, 0x829, 0x830, 0x834, 0xcd2

Function 4:
Public function signature: 0x2ec914b5
Entry block: 0x84e
Exit block: 0x7ff
Body: 0x7ff, 0x84e, 0x855, 0x859, 0xcd8

Function 5:
Public function signature: 0x31252103
Entry block: 0x873
Exit block: 0x7ff
Body: 0x7ff, 0x873, 0x87a, 0x87e, 0xcde

Function 6:
Public function signature: 0x38af3eed
Entry block: 0x898
Exit block: 0x8ab
Body: 0x898, 0x89f, 0x8a3, 0x8ab, 0xce4

Function 7:
Public function signature: 0x3b41ddba
Entry block: 0x8c7
Exit block: 0x7ff
Body: 0x7ff, 0x8c7, 0x8ce, 0x8d2, 0xcf3

Function 8:
Public function signature: 0x4c95f5d0
Entry block: 0x8ec
Exit block: 0x7ff
Body: 0x7ff, 0x8ec, 0x8f3, 0x8f7, 0xcf9

Function 9:
Public function signature: 0x4fa34075
Entry block: 0x911
Exit block: 0x7ea
Body: 0x7ea, 0x911, 0x918, 0x91c, 0xc37, 0xc38, 0xc39, 0xcff, 0xd17, 0xd22, 0xd23

Function 10:
Public function signature: 0x5a0254e2
Entry block: 0x926
Exit block: 0x8ab
Body: 0x8ab, 0x926, 0x92d, 0x931, 0xd25

Function 11:
Public function signature: 0x5b54d2d6
Entry block: 0x955
Exit block: 0x968
Body: 0x955, 0x95c, 0x960, 0x968, 0xd34

Function 12:
Public function signature: 0x6e66f6e9
Entry block: 0x97c
Exit block: 0x8ab
Body: 0x8ab, 0x97c, 0x983, 0x987, 0xd43

Function 13:
Public function signature: 0x70a08231
Entry block: 0x9ab
Exit block: 0x7ff
Body: 0x7ff, 0x9ab, 0x9b2, 0x9b6, 0xd52

Function 14:
Public function signature: 0x7a3a0e84
Entry block: 0x9dc
Exit block: 0x7ff
Body: 0x7ff, 0x9dc, 0x9e3, 0x9e7, 0xd64

Function 15:
Public function signature: 0x7b3e5e7b
Entry block: 0xa01
Exit block: 0x7ff
Body: 0x7ff, 0xa01, 0xa08, 0xa0c, 0xd6a

Function 16:
Public function signature: 0x7c24ce7d
Entry block: 0xa26
Exit block: 0x7ff
Body: 0x7ff, 0xa26, 0xa2d, 0xa31, 0xd70

Function 17:
Public function signature: 0x827037db
Entry block: 0xa4b
Exit block: 0x7ff
Body: 0x7ff, 0xa4b, 0xa52, 0xa56, 0xd76

Function 18:
Public function signature: 0x89e66aea
Entry block: 0xa70
Exit block: 0x7ff
Body: 0x7ff, 0xa70, 0xa77, 0xa7b, 0xd7c

Function 19:
Public function signature: 0x8f48399a
Entry block: 0xa95
Exit block: 0x7ff
Body: 0x7ff, 0xa95, 0xa9c, 0xaa0, 0xd82

Function 20:
Public function signature: 0x92dcc41c
Entry block: 0xaba
Exit block: 0x7ff
Body: 0x7ff, 0xaba, 0xac1, 0xac5, 0xd88

Function 21:
Public function signature: 0x998936b0
Entry block: 0xadf
Exit block: 0x7ea
Body: 0x7ea, 0xadf, 0xae6, 0xaea, 0xc37, 0xc38, 0xc39, 0xd8e, 0xda6, 0xdb2, 0xdb3

Function 22:
Public function signature: 0xa02d55a3
Entry block: 0xaf4
Exit block: 0x7ea
Body: 0x7ea, 0xaf4, 0xafb, 0xaff, 0xc37, 0xc38, 0xc39, 0xdb5, 0xdcd, 0xddc, 0xddd

Function 23:
Public function signature: 0xa8a75b78
Entry block: 0xb09
Exit block: 0x7ff
Body: 0x7ff, 0xb09, 0xb10, 0xb14, 0xddf

Function 24:
Public function signature: 0xace38f8c
Entry block: 0xb2e
Exit block: 0x7ff
Body: 0x7ff, 0xb2e, 0xb35, 0xb39, 0xde5

Function 25:
Public function signature: 0xaff29802
Entry block: 0xb53
Exit block: 0x7ff
Body: 0x7ff, 0xb53, 0xb5a, 0xb5e, 0xdeb

Function 26:
Public function signature: 0xccb07cef
Entry block: 0xb78
Exit block: 0x968
Body: 0x968, 0xb78, 0xb7f, 0xb83, 0xdf1

Function 27:
Public function signature: 0xd424f628
Entry block: 0xb9f
Exit block: 0x968
Body: 0x968, 0xb9f, 0xba6, 0xbaa, 0xdff

Function 28:
Public function signature: 0xdcd22c9b
Entry block: 0xbc6
Exit block: 0x7ea
Body: 0x7ea, 0xbc6, 0xbcd, 0xbd1, 0xc37, 0xc38, 0xc39, 0xe08, 0xe20, 0xe31, 0xe32

Function 29:
Public function signature: 0xfd6b7ef8
Entry block: 0xbdb
Exit block: 0x7ea
Body: 0x7ea, 0xbdb, 0xbe2, 0xbe6, 0xccc, 0xccd, 0xcce, 0xccf, 0xe34, 0xe41, 0xe4d, 0xe74, 0xe9f, 0xee5, 0xf01, 0xf02, 0xf03, 0xf10, 0xf23, 0xf29, 0xf5c, 0xfb1, 0xfbc, 0xfbd, 0xfbe, 0xfbf, 0xfc0

Function 30:
Public fallback function
Entry block: 0x164
Exit block: 0x5bf
Body: 0x164, 0x165, 0x179, 0x17d, 0x1b2, 0x1c1, 0x21b, 0x21f, 0x22c, 0x230, 0x27a, 0x28b, 0x2aa, 0x2ea, 0x2ee, 0x2fb, 0x2ff, 0x307, 0x318, 0x398, 0x3aa, 0x42a, 0x43c, 0x4bc, 0x4ce, 0x54e, 0x56e, 0x5ae, 0x5b2, 0x5bf, 0x5c3, 0x5c7, 0x5c8, 0x5c9, 0x5ca, 0x5cb, 0x60e, 0x613, 0x620, 0x67a, 0x67e, 0x68b, 0x68f, 0x697, 0x6a4, 0x6fe, 0x71b, 0x776, 0x77a, 0x787, 0x78b, 0x78f, 0x790, 0x7d3, 0x7d4

