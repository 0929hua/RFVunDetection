Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xab]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xab
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xab
0xc: JUMPI 0xab V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xb5]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x2d05d3f
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xb5
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x2d05d3f
0x22: V15 = EQ V13 0x2d05d3f
0x23: V16 = 0xb5
0x26: JUMPI 0xb5 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xe4]
---
0x27 DUP1
0x28 PUSH4 0x2c4e722e
0x2d EQ
0x2e PUSH2 0xe4
0x31 JUMPI
---
0x28: V17 = 0x2c4e722e
0x2d: V18 = EQ 0x2c4e722e V13
0x2e: V19 = 0xe4
0x31: JUMPI 0xe4 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x109]
---
0x32 DUP1
0x33 PUSH4 0x38771242
0x38 EQ
0x39 PUSH2 0x109
0x3c JUMPI
---
0x33: V20 = 0x38771242
0x38: V21 = EQ 0x38771242 V13
0x39: V22 = 0x109
0x3c: JUMPI 0x109 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x11c]
---
0x3d DUP1
0x3e PUSH4 0x54fd4d50
0x43 EQ
0x44 PUSH2 0x11c
0x47 JUMPI
---
0x3e: V23 = 0x54fd4d50
0x43: V24 = EQ 0x54fd4d50 V13
0x44: V25 = 0x11c
0x47: JUMPI 0x11c V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x1a6]
---
0x48 DUP1
0x49 PUSH4 0x6e66f6e9
0x4e EQ
0x4f PUSH2 0x1a6
0x52 JUMPI
---
0x49: V26 = 0x6e66f6e9
0x4e: V27 = EQ 0x6e66f6e9 V13
0x4f: V28 = 0x1a6
0x52: JUMPI 0x1a6 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x1b9]
---
0x53 DUP1
0x54 PUSH4 0x78e97925
0x59 EQ
0x5a PUSH2 0x1b9
0x5d JUMPI
---
0x54: V29 = 0x78e97925
0x59: V30 = EQ 0x78e97925 V13
0x5a: V31 = 0x1b9
0x5d: JUMPI 0x1b9 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x1cc]
---
0x5e DUP1
0x5f PUSH4 0x86f32586
0x64 EQ
0x65 PUSH2 0x1cc
0x68 JUMPI
---
0x5f: V32 = 0x86f32586
0x64: V33 = EQ 0x86f32586 V13
0x65: V34 = 0x1cc
0x68: JUMPI 0x1cc V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1df]
---
0x69 DUP1
0x6a PUSH4 0x936c9bc9
0x6f EQ
0x70 PUSH2 0x1df
0x73 JUMPI
---
0x6a: V35 = 0x936c9bc9
0x6f: V36 = EQ 0x936c9bc9 V13
0x70: V37 = 0x1df
0x73: JUMPI 0x1df V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x1f2]
---
0x74 DUP1
0x75 PUSH4 0xbef4876b
0x7a EQ
0x7b PUSH2 0x1f2
0x7e JUMPI
---
0x75: V38 = 0xbef4876b
0x7a: V39 = EQ 0xbef4876b V13
0x7b: V40 = 0x1f2
0x7e: JUMPI 0x1f2 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x205]
---
0x7f DUP1
0x80 PUSH4 0xc19d93fb
0x85 EQ
0x86 PUSH2 0x205
0x89 JUMPI
---
0x80: V41 = 0xc19d93fb
0x85: V42 = EQ 0xc19d93fb V13
0x86: V43 = 0x205
0x89: JUMPI 0x205 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x23c]
---
0x8a DUP1
0x8b PUSH4 0xc5c4744c
0x90 EQ
0x91 PUSH2 0x23c
0x94 JUMPI
---
0x8b: V44 = 0xc5c4744c
0x90: V45 = EQ 0xc5c4744c V13
0x91: V46 = 0x23c
0x94: JUMPI 0x23c V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0xab]
---
0x95 DUP1
0x96 PUSH4 0xd7bb99ba
0x9b EQ
0x9c PUSH2 0xab
0x9f JUMPI
---
0x96: V47 = 0xd7bb99ba
0x9b: V48 = EQ 0xd7bb99ba V13
0x9c: V49 = 0xab
0x9f: JUMPI 0xab V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x24f]
---
0xa0 DUP1
0xa1 PUSH4 0xefca2eed
0xa6 EQ
0xa7 PUSH2 0x24f
0xaa JUMPI
---
0xa1: V50 = 0xefca2eed
0xa6: V51 = EQ 0xefca2eed V13
0xa7: V52 = 0x24f
0xaa: JUMPI 0x24f V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb2]
---
Predecessors: [0x0, 0x95, 0xa0]
Successors: [0x262]
---
0xab JUMPDEST
0xac PUSH2 0xb3
0xaf PUSH2 0x262
0xb2 JUMP
---
0xab: JUMPDEST 
0xac: V53 = 0xb3
0xaf: V54 = 0x262
0xb2: JUMP 0x262
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xb3]
Exit stack: [V13, 0xb3]

================================

Block 0xb3
[0xb3:0xb4]
---
Predecessors: [0x834, 0x97b, 0xac8]
Successors: []
---
0xb3 JUMPDEST
0xb4 STOP
---
0xb3: JUMPDEST 
0xb4: STOP 
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S2, S1, S0]

================================

Block 0xb5
[0xb5:0xbb]
---
Predecessors: [0xd]
Successors: [0xbc, 0xc0]
---
0xb5 JUMPDEST
0xb6 CALLVALUE
0xb7 ISZERO
0xb8 PUSH2 0xc0
0xbb JUMPI
---
0xb5: JUMPDEST 
0xb6: V55 = CALLVALUE
0xb7: V56 = ISZERO V55
0xb8: V57 = 0xc0
0xbb: JUMPI 0xc0 V56
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xbc
[0xbc:0xbf]
---
Predecessors: [0xb5]
Successors: []
---
0xbc PUSH1 0x0
0xbe DUP1
0xbf REVERT
---
0xbc: V58 = 0x0
0xbf: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc0
[0xc0:0xc7]
---
Predecessors: [0xb5]
Successors: [0x837]
---
0xc0 JUMPDEST
0xc1 PUSH2 0xc8
0xc4 PUSH2 0x837
0xc7 JUMP
---
0xc0: JUMPDEST 
0xc1: V59 = 0xc8
0xc4: V60 = 0x837
0xc7: JUMP 0x837
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xc8]
Exit stack: [V13, 0xc8]

================================

Block 0xc8
[0xc8:0xe3]
---
Predecessors: [0x837, 0x8f0]
Successors: []
---
0xc8 JUMPDEST
0xc9 PUSH1 0x40
0xcb MLOAD
0xcc PUSH1 0x1
0xce PUSH1 0xa0
0xd0 PUSH1 0x2
0xd2 EXP
0xd3 SUB
0xd4 SWAP1
0xd5 SWAP2
0xd6 AND
0xd7 DUP2
0xd8 MSTORE
0xd9 PUSH1 0x20
0xdb ADD
0xdc PUSH1 0x40
0xde MLOAD
0xdf DUP1
0xe0 SWAP2
0xe1 SUB
0xe2 SWAP1
0xe3 RETURN
---
0xc8: JUMPDEST 
0xc9: V61 = 0x40
0xcb: V62 = M[0x40]
0xcc: V63 = 0x1
0xce: V64 = 0xa0
0xd0: V65 = 0x2
0xd2: V66 = EXP 0x2 0xa0
0xd3: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd6: V68 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xd8: M[V62] = V68
0xd9: V69 = 0x20
0xdb: V70 = ADD 0x20 V62
0xdc: V71 = 0x40
0xde: V72 = M[0x40]
0xe1: V73 = SUB V70 V72
0xe3: RETURN V72 V73
---
Entry stack: [V13, 0xc8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xc8]

================================

Block 0xe4
[0xe4:0xea]
---
Predecessors: [0x27]
Successors: [0xeb, 0xef]
---
0xe4 JUMPDEST
0xe5 CALLVALUE
0xe6 ISZERO
0xe7 PUSH2 0xef
0xea JUMPI
---
0xe4: JUMPDEST 
0xe5: V74 = CALLVALUE
0xe6: V75 = ISZERO V74
0xe7: V76 = 0xef
0xea: JUMPI 0xef V75
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0xe4]
Successors: []
---
0xeb PUSH1 0x0
0xed DUP1
0xee REVERT
---
0xeb: V77 = 0x0
0xee: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xef
[0xef:0xf6]
---
Predecessors: [0xe4]
Successors: [0x846]
---
0xef JUMPDEST
0xf0 PUSH2 0xf7
0xf3 PUSH2 0x846
0xf6 JUMP
---
0xef: JUMPDEST 
0xf0: V78 = 0xf7
0xf3: V79 = 0x846
0xf6: JUMP 0x846
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V13, 0xf7]

================================

Block 0xf7
[0xf7:0x108]
---
Predecessors: [0x846, 0x84c, 0x8ff, 0x97d, 0xb77, 0xb7d]
Successors: []
---
0xf7 JUMPDEST
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb SWAP1
0xfc DUP2
0xfd MSTORE
0xfe PUSH1 0x20
0x100 ADD
0x101 PUSH1 0x40
0x103 MLOAD
0x104 DUP1
0x105 SWAP2
0x106 SUB
0x107 SWAP1
0x108 RETURN
---
0xf7: JUMPDEST 
0xf8: V80 = 0x40
0xfa: V81 = M[0x40]
0xfd: M[V81] = S0
0xfe: V82 = 0x20
0x100: V83 = ADD 0x20 V81
0x101: V84 = 0x40
0x103: V85 = M[0x40]
0x106: V86 = SUB V83 V85
0x108: RETURN V85 V86
---
Entry stack: [V13, 0xf7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xf7]

================================

Block 0x109
[0x109:0x10f]
---
Predecessors: [0x32]
Successors: [0x110, 0x114]
---
0x109 JUMPDEST
0x10a CALLVALUE
0x10b ISZERO
0x10c PUSH2 0x114
0x10f JUMPI
---
0x109: JUMPDEST 
0x10a: V87 = CALLVALUE
0x10b: V88 = ISZERO V87
0x10c: V89 = 0x114
0x10f: JUMPI 0x114 V88
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x110
[0x110:0x113]
---
Predecessors: [0x109]
Successors: []
---
0x110 PUSH1 0x0
0x112 DUP1
0x113 REVERT
---
0x110: V90 = 0x0
0x113: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x114
[0x114:0x11b]
---
Predecessors: [0x109]
Successors: [0x84c]
---
0x114 JUMPDEST
0x115 PUSH2 0xf7
0x118 PUSH2 0x84c
0x11b JUMP
---
0x114: JUMPDEST 
0x115: V91 = 0xf7
0x118: V92 = 0x84c
0x11b: JUMP 0x84c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V13, 0xf7]

================================

Block 0x11c
[0x11c:0x122]
---
Predecessors: [0x3d]
Successors: [0x123, 0x127]
---
0x11c JUMPDEST
0x11d CALLVALUE
0x11e ISZERO
0x11f PUSH2 0x127
0x122 JUMPI
---
0x11c: JUMPDEST 
0x11d: V93 = CALLVALUE
0x11e: V94 = ISZERO V93
0x11f: V95 = 0x127
0x122: JUMPI 0x127 V94
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x123
[0x123:0x126]
---
Predecessors: [0x11c]
Successors: []
---
0x123 PUSH1 0x0
0x125 DUP1
0x126 REVERT
---
0x123: V96 = 0x0
0x126: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x127
[0x127:0x12e]
---
Predecessors: [0x11c]
Successors: [0x852]
---
0x127 JUMPDEST
0x128 PUSH2 0x12f
0x12b PUSH2 0x852
0x12e JUMP
---
0x127: JUMPDEST 
0x128: V97 = 0x12f
0x12b: V98 = 0x852
0x12e: JUMP 0x852
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12f]
Exit stack: [V13, 0x12f]

================================

Block 0x12f
[0x12f:0x152]
---
Predecessors: [0x8e8]
Successors: [0x153]
---
0x12f JUMPDEST
0x130 PUSH1 0x40
0x132 MLOAD
0x133 PUSH1 0x20
0x135 DUP1
0x136 DUP3
0x137 MSTORE
0x138 DUP2
0x139 SWAP1
0x13a DUP2
0x13b ADD
0x13c DUP4
0x13d DUP2
0x13e DUP2
0x13f MLOAD
0x140 DUP2
0x141 MSTORE
0x142 PUSH1 0x20
0x144 ADD
0x145 SWAP2
0x146 POP
0x147 DUP1
0x148 MLOAD
0x149 SWAP1
0x14a PUSH1 0x20
0x14c ADD
0x14d SWAP1
0x14e DUP1
0x14f DUP4
0x150 DUP4
0x151 PUSH1 0x0
---
0x12f: JUMPDEST 
0x130: V99 = 0x40
0x132: V100 = M[0x40]
0x133: V101 = 0x20
0x137: M[V100] = 0x20
0x13b: V102 = ADD V100 0x20
0x13f: V103 = M[V817]
0x141: M[V102] = V103
0x142: V104 = 0x20
0x144: V105 = ADD 0x20 V102
0x148: V106 = M[V817]
0x14a: V107 = 0x20
0x14c: V108 = ADD 0x20 V817
0x151: V109 = 0x0
---
Entry stack: [V13, 0x12f, V817]
Stack pops: 1
Stack additions: [S0, V100, V100, V105, V108, V106, V106, V105, V108, 0x0]
Exit stack: [V13, 0x12f, V817, V100, V100, V105, V108, V106, V106, V105, V108, 0x0]

================================

Block 0x153
[0x153:0x15b]
---
Predecessors: [0x12f, 0x15c]
Successors: [0x15c, 0x16b]
---
0x153 JUMPDEST
0x154 DUP4
0x155 DUP2
0x156 LT
0x157 ISZERO
0x158 PUSH2 0x16b
0x15b JUMPI
---
0x153: JUMPDEST 
0x156: V110 = LT S0 V106
0x157: V111 = ISZERO V110
0x158: V112 = 0x16b
0x15b: JUMPI 0x16b V111
---
Entry stack: [V13, 0x12f, V817, V100, V100, V105, V108, V106, V106, V105, V108, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x12f, V817, V100, V100, V105, V108, V106, V106, V105, V108, S0]

================================

Block 0x15c
[0x15c:0x16a]
---
Predecessors: [0x153]
Successors: [0x153]
---
0x15c DUP1
0x15d DUP3
0x15e ADD
0x15f MLOAD
0x160 DUP4
0x161 DUP3
0x162 ADD
0x163 MSTORE
0x164 PUSH1 0x20
0x166 ADD
0x167 PUSH2 0x153
0x16a JUMP
---
0x15e: V113 = ADD V108 S0
0x15f: V114 = M[V113]
0x162: V115 = ADD S0 V105
0x163: M[V115] = V114
0x164: V116 = 0x20
0x166: V117 = ADD 0x20 S0
0x167: V118 = 0x153
0x16a: JUMP 0x153
---
Entry stack: [V13, 0x12f, V817, V100, V100, V105, V108, V106, V106, V105, V108, S0]
Stack pops: 3
Stack additions: [S2, S1, V117]
Exit stack: [V13, 0x12f, V817, V100, V100, V105, V108, V106, V106, V105, V108, V117]

================================

Block 0x16b
[0x16b:0x17e]
---
Predecessors: [0x153]
Successors: [0x17f, 0x198]
---
0x16b JUMPDEST
0x16c POP
0x16d POP
0x16e POP
0x16f POP
0x170 SWAP1
0x171 POP
0x172 SWAP1
0x173 DUP2
0x174 ADD
0x175 SWAP1
0x176 PUSH1 0x1f
0x178 AND
0x179 DUP1
0x17a ISZERO
0x17b PUSH2 0x198
0x17e JUMPI
---
0x16b: JUMPDEST 
0x174: V119 = ADD V106 V105
0x176: V120 = 0x1f
0x178: V121 = AND 0x1f V106
0x17a: V122 = ISZERO V121
0x17b: V123 = 0x198
0x17e: JUMPI 0x198 V122
---
Entry stack: [V13, 0x12f, V817, V100, V100, V105, V108, V106, V106, V105, V108, S0]
Stack pops: 7
Stack additions: [V119, V121]
Exit stack: [V13, 0x12f, V817, V100, V100, V119, V121]

================================

Block 0x17f
[0x17f:0x197]
---
Predecessors: [0x16b]
Successors: [0x198]
---
0x17f DUP1
0x180 DUP3
0x181 SUB
0x182 DUP1
0x183 MLOAD
0x184 PUSH1 0x1
0x186 DUP4
0x187 PUSH1 0x20
0x189 SUB
0x18a PUSH2 0x100
0x18d EXP
0x18e SUB
0x18f NOT
0x190 AND
0x191 DUP2
0x192 MSTORE
0x193 PUSH1 0x20
0x195 ADD
0x196 SWAP2
0x197 POP
---
0x181: V124 = SUB V119 V121
0x183: V125 = M[V124]
0x184: V126 = 0x1
0x187: V127 = 0x20
0x189: V128 = SUB 0x20 V121
0x18a: V129 = 0x100
0x18d: V130 = EXP 0x100 V128
0x18e: V131 = SUB V130 0x1
0x18f: V132 = NOT V131
0x190: V133 = AND V132 V125
0x192: M[V124] = V133
0x193: V134 = 0x20
0x195: V135 = ADD 0x20 V124
---
Entry stack: [V13, 0x12f, V817, V100, V100, V119, V121]
Stack pops: 2
Stack additions: [V135, S0]
Exit stack: [V13, 0x12f, V817, V100, V100, V135, V121]

================================

Block 0x198
[0x198:0x1a5]
---
Predecessors: [0x16b, 0x17f]
Successors: []
---
0x198 JUMPDEST
0x199 POP
0x19a SWAP3
0x19b POP
0x19c POP
0x19d POP
0x19e PUSH1 0x40
0x1a0 MLOAD
0x1a1 DUP1
0x1a2 SWAP2
0x1a3 SUB
0x1a4 SWAP1
0x1a5 RETURN
---
0x198: JUMPDEST 
0x19e: V136 = 0x40
0x1a0: V137 = M[0x40]
0x1a3: V138 = SUB S1 V137
0x1a5: RETURN V137 V138
---
Entry stack: [V13, 0x12f, V817, V100, V100, S1, V121]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x12f]

================================

Block 0x1a6
[0x1a6:0x1ac]
---
Predecessors: [0x48]
Successors: [0x1ad, 0x1b1]
---
0x1a6 JUMPDEST
0x1a7 CALLVALUE
0x1a8 ISZERO
0x1a9 PUSH2 0x1b1
0x1ac JUMPI
---
0x1a6: JUMPDEST 
0x1a7: V139 = CALLVALUE
0x1a8: V140 = ISZERO V139
0x1a9: V141 = 0x1b1
0x1ac: JUMPI 0x1b1 V140
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ad
[0x1ad:0x1b0]
---
Predecessors: [0x1a6]
Successors: []
---
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 REVERT
---
0x1ad: V142 = 0x0
0x1b0: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1b1
[0x1b1:0x1b8]
---
Predecessors: [0x1a6]
Successors: [0x8f0]
---
0x1b1 JUMPDEST
0x1b2 PUSH2 0xc8
0x1b5 PUSH2 0x8f0
0x1b8 JUMP
---
0x1b1: JUMPDEST 
0x1b2: V143 = 0xc8
0x1b5: V144 = 0x8f0
0x1b8: JUMP 0x8f0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xc8]
Exit stack: [V13, 0xc8]

================================

Block 0x1b9
[0x1b9:0x1bf]
---
Predecessors: [0x53]
Successors: [0x1c0, 0x1c4]
---
0x1b9 JUMPDEST
0x1ba CALLVALUE
0x1bb ISZERO
0x1bc PUSH2 0x1c4
0x1bf JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V145 = CALLVALUE
0x1bb: V146 = ISZERO V145
0x1bc: V147 = 0x1c4
0x1bf: JUMPI 0x1c4 V146
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c0
[0x1c0:0x1c3]
---
Predecessors: [0x1b9]
Successors: []
---
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 REVERT
---
0x1c0: V148 = 0x0
0x1c3: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c4
[0x1c4:0x1cb]
---
Predecessors: [0x1b9]
Successors: [0x8ff]
---
0x1c4 JUMPDEST
0x1c5 PUSH2 0xf7
0x1c8 PUSH2 0x8ff
0x1cb JUMP
---
0x1c4: JUMPDEST 
0x1c5: V149 = 0xf7
0x1c8: V150 = 0x8ff
0x1cb: JUMP 0x8ff
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V13, 0xf7]

================================

Block 0x1cc
[0x1cc:0x1d2]
---
Predecessors: [0x5e]
Successors: [0x1d3, 0x1d7]
---
0x1cc JUMPDEST
0x1cd CALLVALUE
0x1ce ISZERO
0x1cf PUSH2 0x1d7
0x1d2 JUMPI
---
0x1cc: JUMPDEST 
0x1cd: V151 = CALLVALUE
0x1ce: V152 = ISZERO V151
0x1cf: V153 = 0x1d7
0x1d2: JUMPI 0x1d7 V152
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d3
[0x1d3:0x1d6]
---
Predecessors: [0x1cc]
Successors: []
---
0x1d3 PUSH1 0x0
0x1d5 DUP1
0x1d6 REVERT
---
0x1d3: V154 = 0x0
0x1d6: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d7
[0x1d7:0x1de]
---
Predecessors: [0x1cc]
Successors: [0x905]
---
0x1d7 JUMPDEST
0x1d8 PUSH2 0xb3
0x1db PUSH2 0x905
0x1de JUMP
---
0x1d7: JUMPDEST 
0x1d8: V155 = 0xb3
0x1db: V156 = 0x905
0x1de: JUMP 0x905
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xb3]
Exit stack: [V13, 0xb3]

================================

Block 0x1df
[0x1df:0x1e5]
---
Predecessors: [0x69]
Successors: [0x1e6, 0x1ea]
---
0x1df JUMPDEST
0x1e0 CALLVALUE
0x1e1 ISZERO
0x1e2 PUSH2 0x1ea
0x1e5 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V157 = CALLVALUE
0x1e1: V158 = ISZERO V157
0x1e2: V159 = 0x1ea
0x1e5: JUMPI 0x1ea V158
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1e6
[0x1e6:0x1e9]
---
Predecessors: [0x1df]
Successors: []
---
0x1e6 PUSH1 0x0
0x1e8 DUP1
0x1e9 REVERT
---
0x1e6: V160 = 0x0
0x1e9: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ea
[0x1ea:0x1f1]
---
Predecessors: [0x1df]
Successors: [0x97d]
---
0x1ea JUMPDEST
0x1eb PUSH2 0xf7
0x1ee PUSH2 0x97d
0x1f1 JUMP
---
0x1ea: JUMPDEST 
0x1eb: V161 = 0xf7
0x1ee: V162 = 0x97d
0x1f1: JUMP 0x97d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V13, 0xf7]

================================

Block 0x1f2
[0x1f2:0x1f8]
---
Predecessors: [0x74]
Successors: [0x1f9, 0x1fd]
---
0x1f2 JUMPDEST
0x1f3 CALLVALUE
0x1f4 ISZERO
0x1f5 PUSH2 0x1fd
0x1f8 JUMPI
---
0x1f2: JUMPDEST 
0x1f3: V163 = CALLVALUE
0x1f4: V164 = ISZERO V163
0x1f5: V165 = 0x1fd
0x1f8: JUMPI 0x1fd V164
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f9
[0x1f9:0x1fc]
---
Predecessors: [0x1f2]
Successors: []
---
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc REVERT
---
0x1f9: V166 = 0x0
0x1fc: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1fd
[0x1fd:0x204]
---
Predecessors: [0x1f2]
Successors: [0x983]
---
0x1fd JUMPDEST
0x1fe PUSH2 0xb3
0x201 PUSH2 0x983
0x204 JUMP
---
0x1fd: JUMPDEST 
0x1fe: V167 = 0xb3
0x201: V168 = 0x983
0x204: JUMP 0x983
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xb3]
Exit stack: [V13, 0xb3]

================================

Block 0x205
[0x205:0x20b]
---
Predecessors: [0x7f]
Successors: [0x20c, 0x210]
---
0x205 JUMPDEST
0x206 CALLVALUE
0x207 ISZERO
0x208 PUSH2 0x210
0x20b JUMPI
---
0x205: JUMPDEST 
0x206: V169 = CALLVALUE
0x207: V170 = ISZERO V169
0x208: V171 = 0x210
0x20b: JUMPI 0x210 V170
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x20c
[0x20c:0x20f]
---
Predecessors: [0x205]
Successors: []
---
0x20c PUSH1 0x0
0x20e DUP1
0x20f REVERT
---
0x20c: V172 = 0x0
0x20f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x210
[0x210:0x217]
---
Predecessors: [0x205]
Successors: [0xb6e]
---
0x210 JUMPDEST
0x211 PUSH2 0x218
0x214 PUSH2 0xb6e
0x217 JUMP
---
0x210: JUMPDEST 
0x211: V173 = 0x218
0x214: V174 = 0xb6e
0x217: JUMP 0xb6e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x218]
Exit stack: [V13, 0x218]

================================

Block 0x218
[0x218:0x226]
---
Predecessors: [0xb6e]
Successors: [0x227, 0x228]
---
0x218 JUMPDEST
0x219 PUSH1 0x40
0x21b MLOAD
0x21c DUP1
0x21d DUP3
0x21e PUSH1 0x1
0x220 DUP2
0x221 GT
0x222 ISZERO
0x223 PUSH2 0x228
0x226 JUMPI
---
0x218: JUMPDEST 
0x219: V175 = 0x40
0x21b: V176 = M[0x40]
0x21e: V177 = 0x1
0x221: V178 = GT V1111 0x1
0x222: V179 = ISZERO V178
0x223: V180 = 0x228
0x226: JUMPI 0x228 V179
---
Entry stack: [V13, 0x218, V1111]
Stack pops: 1
Stack additions: [S0, V176, V176, S0]
Exit stack: [V13, 0x218, V1111, V176, V176, V1111]

================================

Block 0x227
[0x227:0x227]
---
Predecessors: [0x218]
Successors: []
---
0x227 INVALID
---
0x227: INVALID 
---
Entry stack: [V13, 0x218, V1111, V176, V176, V1111]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x218, V1111, V176, V176, V1111]

================================

Block 0x228
[0x228:0x23b]
---
Predecessors: [0x218]
Successors: []
---
0x228 JUMPDEST
0x229 PUSH1 0xff
0x22b AND
0x22c DUP2
0x22d MSTORE
0x22e PUSH1 0x20
0x230 ADD
0x231 SWAP2
0x232 POP
0x233 POP
0x234 PUSH1 0x40
0x236 MLOAD
0x237 DUP1
0x238 SWAP2
0x239 SUB
0x23a SWAP1
0x23b RETURN
---
0x228: JUMPDEST 
0x229: V181 = 0xff
0x22b: V182 = AND 0xff V1111
0x22d: M[V176] = V182
0x22e: V183 = 0x20
0x230: V184 = ADD 0x20 V176
0x234: V185 = 0x40
0x236: V186 = M[0x40]
0x239: V187 = SUB V184 V186
0x23b: RETURN V186 V187
---
Entry stack: [V13, 0x218, V1111, V176, V176, V1111]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x218]

================================

Block 0x23c
[0x23c:0x242]
---
Predecessors: [0x8a]
Successors: [0x243, 0x247]
---
0x23c JUMPDEST
0x23d CALLVALUE
0x23e ISZERO
0x23f PUSH2 0x247
0x242 JUMPI
---
0x23c: JUMPDEST 
0x23d: V188 = CALLVALUE
0x23e: V189 = ISZERO V188
0x23f: V190 = 0x247
0x242: JUMPI 0x247 V189
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x243
[0x243:0x246]
---
Predecessors: [0x23c]
Successors: []
---
0x243 PUSH1 0x0
0x245 DUP1
0x246 REVERT
---
0x243: V191 = 0x0
0x246: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x247
[0x247:0x24e]
---
Predecessors: [0x23c]
Successors: [0xb77]
---
0x247 JUMPDEST
0x248 PUSH2 0xf7
0x24b PUSH2 0xb77
0x24e JUMP
---
0x247: JUMPDEST 
0x248: V192 = 0xf7
0x24b: V193 = 0xb77
0x24e: JUMP 0xb77
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V13, 0xf7]

================================

Block 0x24f
[0x24f:0x255]
---
Predecessors: [0xa0]
Successors: [0x256, 0x25a]
---
0x24f JUMPDEST
0x250 CALLVALUE
0x251 ISZERO
0x252 PUSH2 0x25a
0x255 JUMPI
---
0x24f: JUMPDEST 
0x250: V194 = CALLVALUE
0x251: V195 = ISZERO V194
0x252: V196 = 0x25a
0x255: JUMPI 0x25a V195
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x256
[0x256:0x259]
---
Predecessors: [0x24f]
Successors: []
---
0x256 PUSH1 0x0
0x258 DUP1
0x259 REVERT
---
0x256: V197 = 0x0
0x259: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x25a
[0x25a:0x261]
---
Predecessors: [0x24f]
Successors: [0xb7d]
---
0x25a JUMPDEST
0x25b PUSH2 0xf7
0x25e PUSH2 0xb7d
0x261 JUMP
---
0x25a: JUMPDEST 
0x25b: V198 = 0xf7
0x25e: V199 = 0xb7d
0x261: JUMP 0xb7d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V13, 0xf7]

================================

Block 0x262
[0x262:0x275]
---
Predecessors: [0xab]
Successors: [0x276, 0x277]
---
0x262 JUMPDEST
0x263 PUSH1 0x0
0x265 PUSH1 0x1
0x267 PUSH1 0x0
0x269 SLOAD
0x26a PUSH1 0xff
0x26c AND
0x26d PUSH1 0x1
0x26f DUP2
0x270 GT
0x271 ISZERO
0x272 PUSH2 0x277
0x275 JUMPI
---
0x262: JUMPDEST 
0x263: V200 = 0x0
0x265: V201 = 0x1
0x267: V202 = 0x0
0x269: V203 = S[0x0]
0x26a: V204 = 0xff
0x26c: V205 = AND 0xff V203
0x26d: V206 = 0x1
0x270: V207 = GT V205 0x1
0x271: V208 = ISZERO V207
0x272: V209 = 0x277
0x275: JUMPI 0x277 V208
---
Entry stack: [V13, 0xb3]
Stack pops: 0
Stack additions: [0x0, 0x1, V205]
Exit stack: [V13, 0xb3, 0x0, 0x1, V205]

================================

Block 0x276
[0x276:0x276]
---
Predecessors: [0x262]
Successors: []
---
0x276 INVALID
---
0x276: INVALID 
---
Entry stack: [V13, 0xb3, 0x0, 0x1, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb3, 0x0, 0x1, V205]

================================

Block 0x277
[0x277:0x27d]
---
Predecessors: [0x262]
Successors: [0x27e, 0x282]
---
0x277 JUMPDEST
0x278 EQ
0x279 ISZERO
0x27a PUSH2 0x282
0x27d JUMPI
---
0x277: JUMPDEST 
0x278: V210 = EQ V205 0x1
0x279: V211 = ISZERO V210
0x27a: V212 = 0x282
0x27d: JUMPI 0x282 V211
---
Entry stack: [V13, 0xb3, 0x0, 0x1, V205]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xb3, 0x0]

================================

Block 0x27e
[0x27e:0x281]
---
Predecessors: [0x277]
Successors: []
---
0x27e PUSH1 0x0
0x280 DUP1
0x281 REVERT
---
0x27e: V213 = 0x0
0x281: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb3, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb3, 0x0]

================================

Block 0x282
[0x282:0x28e]
---
Predecessors: [0x277]
Successors: [0x28f, 0x293]
---
0x282 JUMPDEST
0x283 PUSH5 0x2540be400
0x289 CALLVALUE
0x28a GT
0x28b PUSH2 0x293
0x28e JUMPI
---
0x282: JUMPDEST 
0x283: V214 = 0x2540be400
0x289: V215 = CALLVALUE
0x28a: V216 = GT V215 0x2540be400
0x28b: V217 = 0x293
0x28e: JUMPI 0x293 V216
---
Entry stack: [V13, 0xb3, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb3, 0x0]

================================

Block 0x28f
[0x28f:0x292]
---
Predecessors: [0x282]
Successors: []
---
0x28f PUSH1 0x0
0x291 DUP1
0x292 REVERT
---
0x28f: V218 = 0x0
0x292: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb3, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb3, 0x0]

================================

Block 0x293
[0x293:0x2a9]
---
Predecessors: [0x282]
Successors: [0xb83]
---
0x293 JUMPDEST
0x294 POP
0x295 PUSH1 0x3
0x297 SLOAD
0x298 PUSH1 0x0
0x29a SWAP1
0x29b PUSH2 0x2aa
0x29e SWAP1
0x29f CALLVALUE
0x2a0 PUSH4 0xffffffff
0x2a5 PUSH2 0xb83
0x2a8 AND
0x2a9 JUMP
---
0x293: JUMPDEST 
0x295: V219 = 0x3
0x297: V220 = S[0x3]
0x298: V221 = 0x0
0x29b: V222 = 0x2aa
0x29f: V223 = CALLVALUE
0x2a0: V224 = 0xffffffff
0x2a5: V225 = 0xb83
0x2a8: V226 = AND 0xb83 0xffffffff
0x2a9: JUMP 0xb83
---
Entry stack: [V13, 0xb3, 0x0]
Stack pops: 1
Stack additions: [0x0, 0x2aa, V220, V223]
Exit stack: [V13, 0xb3, 0x0, 0x2aa, V220, V223]

================================

Block 0x2aa
[0x2aa:0x2c1]
---
Predecessors: [0xb92]
Successors: [0xb99]
---
0x2aa JUMPDEST
0x2ab PUSH1 0x3
0x2ad SSTORE
0x2ae PUSH2 0x2c2
0x2b1 CALLVALUE
0x2b2 PUSH5 0x2540be400
0x2b8 PUSH4 0xffffffff
0x2bd PUSH2 0xb99
0x2c0 AND
0x2c1 JUMP
---
0x2aa: JUMPDEST 
0x2ab: V227 = 0x3
0x2ad: S[0x3] = S0
0x2ae: V228 = 0x2c2
0x2b1: V229 = CALLVALUE
0x2b2: V230 = 0x2540be400
0x2b8: V231 = 0xffffffff
0x2bd: V232 = 0xb99
0x2c0: V233 = AND 0xb99 0xffffffff
0x2c1: JUMP 0xb99
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x2c2, V229, 0x2540be400]
Exit stack: [V13, S3, S2, S1, 0x2c2, V229, 0x2540be400]

================================

Block 0x2c2
[0x2c2:0x2d8]
---
Predecessors: [0xba7]
Successors: [0xbb0]
---
0x2c2 JUMPDEST
0x2c3 SWAP1
0x2c4 POP
0x2c5 PUSH2 0x2d9
0x2c8 PUSH1 0x2
0x2ca SLOAD
0x2cb DUP3
0x2cc PUSH2 0xbb0
0x2cf SWAP1
0x2d0 SWAP2
0x2d1 SWAP1
0x2d2 PUSH4 0xffffffff
0x2d7 AND
0x2d8 JUMP
---
0x2c2: JUMPDEST 
0x2c5: V234 = 0x2d9
0x2c8: V235 = 0x2
0x2ca: V236 = S[0x2]
0x2cc: V237 = 0xbb0
0x2d2: V238 = 0xffffffff
0x2d7: V239 = AND 0xffffffff 0xbb0
0x2d8: JUMP 0xbb0
---
Entry stack: [V13, 0xb3, S1, V1125]
Stack pops: 2
Stack additions: [S0, 0x2d9, S0, V236]
Exit stack: [V13, 0xb3, V1125, 0x2d9, V1125, V236]

================================

Block 0x2d9
[0x2d9:0x341]
---
Predecessors: [0xb92]
Successors: [0x342, 0x346]
---
0x2d9 JUMPDEST
0x2da PUSH1 0xa
0x2dc SLOAD
0x2dd SWAP1
0x2de SWAP2
0x2df POP
0x2e0 PUSH1 0x1
0x2e2 PUSH1 0xa0
0x2e4 PUSH1 0x2
0x2e6 EXP
0x2e7 SUB
0x2e8 AND
0x2e9 PUSH4 0x8c8d98a0
0x2ee PUSH2 0x7e2
0x2f1 PUSH1 0x2
0x2f3 PUSH1 0xf
0x2f5 PUSH1 0x0
0x2f7 PUSH1 0x40
0x2f9 MLOAD
0x2fa PUSH1 0x20
0x2fc ADD
0x2fd MSTORE
0x2fe PUSH1 0x40
0x300 MLOAD
0x301 PUSH1 0xe0
0x303 PUSH1 0x2
0x305 EXP
0x306 PUSH4 0xffffffff
0x30b DUP7
0x30c AND
0x30d MUL
0x30e DUP2
0x30f MSTORE
0x310 PUSH2 0xffff
0x313 SWAP1
0x314 SWAP4
0x315 AND
0x316 PUSH1 0x4
0x318 DUP5
0x319 ADD
0x31a MSTORE
0x31b PUSH1 0xff
0x31d SWAP2
0x31e DUP3
0x31f AND
0x320 PUSH1 0x24
0x322 DUP5
0x323 ADD
0x324 MSTORE
0x325 AND
0x326 PUSH1 0x44
0x328 DUP3
0x329 ADD
0x32a MSTORE
0x32b PUSH1 0x64
0x32d ADD
0x32e PUSH1 0x20
0x330 PUSH1 0x40
0x332 MLOAD
0x333 DUP1
0x334 DUP4
0x335 SUB
0x336 DUP2
0x337 PUSH1 0x0
0x339 DUP8
0x33a DUP1
0x33b EXTCODESIZE
0x33c ISZERO
0x33d ISZERO
0x33e PUSH2 0x346
0x341 JUMPI
---
0x2d9: JUMPDEST 
0x2da: V240 = 0xa
0x2dc: V241 = S[0xa]
0x2e0: V242 = 0x1
0x2e2: V243 = 0xa0
0x2e4: V244 = 0x2
0x2e6: V245 = EXP 0x2 0xa0
0x2e7: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e8: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x2e9: V248 = 0x8c8d98a0
0x2ee: V249 = 0x7e2
0x2f1: V250 = 0x2
0x2f3: V251 = 0xf
0x2f5: V252 = 0x0
0x2f7: V253 = 0x40
0x2f9: V254 = M[0x40]
0x2fa: V255 = 0x20
0x2fc: V256 = ADD 0x20 V254
0x2fd: M[V256] = 0x0
0x2fe: V257 = 0x40
0x300: V258 = M[0x40]
0x301: V259 = 0xe0
0x303: V260 = 0x2
0x305: V261 = EXP 0x2 0xe0
0x306: V262 = 0xffffffff
0x30c: V263 = AND 0x8c8d98a0 0xffffffff
0x30d: V264 = MUL 0x8c8d98a0 0x100000000000000000000000000000000000000000000000000000000
0x30f: M[V258] = 0x8c8d98a000000000000000000000000000000000000000000000000000000000
0x310: V265 = 0xffff
0x315: V266 = AND 0x7e2 0xffff
0x316: V267 = 0x4
0x319: V268 = ADD V258 0x4
0x31a: M[V268] = 0x7e2
0x31b: V269 = 0xff
0x31f: V270 = AND 0xff 0x2
0x320: V271 = 0x24
0x323: V272 = ADD V258 0x24
0x324: M[V272] = 0x2
0x325: V273 = AND 0xf 0xff
0x326: V274 = 0x44
0x329: V275 = ADD V258 0x44
0x32a: M[V275] = 0xf
0x32b: V276 = 0x64
0x32d: V277 = ADD 0x64 V258
0x32e: V278 = 0x20
0x330: V279 = 0x40
0x332: V280 = M[0x40]
0x335: V281 = SUB V277 V280
0x337: V282 = 0x0
0x33b: V283 = EXTCODESIZE V247
0x33c: V284 = ISZERO V283
0x33d: V285 = ISZERO V284
0x33e: V286 = 0x346
0x341: JUMPI 0x346 V285
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, V247, 0x8c8d98a0, V277, 0x20, V280, V281, V280, 0x0, V247]
Exit stack: [V13, S3, S2, S0, V247, 0x8c8d98a0, V277, 0x20, V280, V281, V280, 0x0, V247]

================================

Block 0x342
[0x342:0x345]
---
Predecessors: [0x2d9]
Successors: []
---
0x342 PUSH1 0x0
0x344 DUP1
0x345 REVERT
---
0x342: V287 = 0x0
0x345: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, V247, 0x8c8d98a0, V277, 0x20, V280, V281, V280, 0x0, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, V247, 0x8c8d98a0, V277, 0x20, V280, V281, V280, 0x0, V247]

================================

Block 0x346
[0x346:0x352]
---
Predecessors: [0x2d9]
Successors: [0x353, 0x357]
---
0x346 JUMPDEST
0x347 PUSH2 0x2c6
0x34a GAS
0x34b SUB
0x34c CALL
0x34d ISZERO
0x34e ISZERO
0x34f PUSH2 0x357
0x352 JUMPI
---
0x346: JUMPDEST 
0x347: V288 = 0x2c6
0x34a: V289 = GAS
0x34b: V290 = SUB V289 0x2c6
0x34c: V291 = CALL V290 V247 0x0 V280 V281 V280 0x20
0x34d: V292 = ISZERO V291
0x34e: V293 = ISZERO V292
0x34f: V294 = 0x357
0x352: JUMPI 0x357 V293
---
Entry stack: [V13, S11, S10, S9, V247, 0x8c8d98a0, V277, 0x20, V280, V281, V280, 0x0, V247]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S11, S10, S9, V247, 0x8c8d98a0, V277]

================================

Block 0x353
[0x353:0x356]
---
Predecessors: [0x346]
Successors: []
---
0x353 PUSH1 0x0
0x355 DUP1
0x356 REVERT
---
0x353: V295 = 0x0
0x356: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, V247, 0x8c8d98a0, V277]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, V247, 0x8c8d98a0, V277]

================================

Block 0x357
[0x357:0x368]
---
Predecessors: [0x346]
Successors: [0x369, 0x3bb]
---
0x357 JUMPDEST
0x358 POP
0x359 POP
0x35a POP
0x35b PUSH1 0x40
0x35d MLOAD
0x35e DUP1
0x35f MLOAD
0x360 SWAP1
0x361 POP
0x362 TIMESTAMP
0x363 LT
0x364 ISZERO
0x365 PUSH2 0x3bb
0x368 JUMPI
---
0x357: JUMPDEST 
0x35b: V296 = 0x40
0x35d: V297 = M[0x40]
0x35f: V298 = M[V297]
0x362: V299 = TIMESTAMP
0x363: V300 = LT V299 V298
0x364: V301 = ISZERO V300
0x365: V302 = 0x3bb
0x368: JUMPI 0x3bb V301
---
Entry stack: [V13, S5, S4, S3, V247, 0x8c8d98a0, V277]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S5, S4, S3]

================================

Block 0x369
[0x369:0x378]
---
Predecessors: [0x357]
Successors: [0xbb0]
---
0x369 PUSH2 0x379
0x36c DUP2
0x36d PUSH1 0xf
0x36f PUSH4 0xffffffff
0x374 PUSH2 0xbb0
0x377 AND
0x378 JUMP
---
0x369: V303 = 0x379
0x36d: V304 = 0xf
0x36f: V305 = 0xffffffff
0x374: V306 = 0xbb0
0x377: V307 = AND 0xbb0 0xffffffff
0x378: JUMP 0xbb0
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x379, S0, 0xf]
Exit stack: [V13, S2, S1, S0, 0x379, S0, 0xf]

================================

Block 0x379
[0x379:0x38b]
---
Predecessors: [0xb92]
Successors: [0xb99]
---
0x379 JUMPDEST
0x37a SWAP1
0x37b POP
0x37c PUSH2 0x38c
0x37f DUP2
0x380 PUSH1 0xa
0x382 PUSH4 0xffffffff
0x387 PUSH2 0xb99
0x38a AND
0x38b JUMP
---
0x379: JUMPDEST 
0x37c: V308 = 0x38c
0x380: V309 = 0xa
0x382: V310 = 0xffffffff
0x387: V311 = 0xb99
0x38a: V312 = AND 0xb99 0xffffffff
0x38b: JUMP 0xb99
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, 0x38c, S0, 0xa]
Exit stack: [V13, S3, S2, S0, 0x38c, S0, 0xa]

================================

Block 0x38c
[0x38c:0x3aa]
---
Predecessors: [0xba7]
Successors: [0xb83]
---
0x38c JUMPDEST
0x38d SWAP1
0x38e POP
0x38f PUSH7 0x2386f26fc10000
0x397 PUSH2 0x3ab
0x39a DUP3
0x39b PUSH1 0x4
0x39d SLOAD
0x39e PUSH2 0xb83
0x3a1 SWAP1
0x3a2 SWAP2
0x3a3 SWAP1
0x3a4 PUSH4 0xffffffff
0x3a9 AND
0x3aa JUMP
---
0x38c: JUMPDEST 
0x38f: V313 = 0x2386f26fc10000
0x397: V314 = 0x3ab
0x39b: V315 = 0x4
0x39d: V316 = S[0x4]
0x39e: V317 = 0xb83
0x3a4: V318 = 0xffffffff
0x3a9: V319 = AND 0xffffffff 0xb83
0x3aa: JUMP 0xb83
---
Entry stack: [V13, 0xb3, S1, V1125]
Stack pops: 2
Stack additions: [S0, 0x2386f26fc10000, 0x3ab, V316, S0]
Exit stack: [V13, 0xb3, V1125, 0x2386f26fc10000, 0x3ab, V316, V1125]

================================

Block 0x3ab
[0x3ab:0x3b1]
---
Predecessors: [0xb92]
Successors: [0x3b2, 0x3b6]
---
0x3ab JUMPDEST
0x3ac GT
0x3ad ISZERO
0x3ae PUSH2 0x3b6
0x3b1 JUMPI
---
0x3ab: JUMPDEST 
0x3ac: V320 = GT S0 S1
0x3ad: V321 = ISZERO V320
0x3ae: V322 = 0x3b6
0x3b1: JUMPI 0x3b6 V321
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S3, S2]

================================

Block 0x3b2
[0x3b2:0x3b5]
---
Predecessors: [0x3ab]
Successors: []
---
0x3b2 PUSH1 0x0
0x3b4 DUP1
0x3b5 REVERT
---
0x3b2: V323 = 0x0
0x3b5: REVERT 0x0 0x0
---
Entry stack: [V13, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S1, S0]

================================

Block 0x3b6
[0x3b6:0x3ba]
---
Predecessors: [0x3ab]
Successors: [0x6fc]
---
0x3b6 JUMPDEST
0x3b7 PUSH2 0x6fc
0x3ba JUMP
---
0x3b6: JUMPDEST 
0x3b7: V324 = 0x6fc
0x3ba: JUMP 0x6fc
---
Entry stack: [V13, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S1, S0]

================================

Block 0x3bb
[0x3bb:0x420]
---
Predecessors: [0x357]
Successors: [0x421, 0x425]
---
0x3bb JUMPDEST
0x3bc PUSH1 0xa
0x3be SLOAD
0x3bf PUSH1 0x1
0x3c1 PUSH1 0xa0
0x3c3 PUSH1 0x2
0x3c5 EXP
0x3c6 SUB
0x3c7 AND
0x3c8 PUSH4 0x8c8d98a0
0x3cd PUSH2 0x7e2
0x3d0 PUSH1 0x2
0x3d2 PUSH1 0x1c
0x3d4 PUSH1 0x0
0x3d6 PUSH1 0x40
0x3d8 MLOAD
0x3d9 PUSH1 0x20
0x3db ADD
0x3dc MSTORE
0x3dd PUSH1 0x40
0x3df MLOAD
0x3e0 PUSH1 0xe0
0x3e2 PUSH1 0x2
0x3e4 EXP
0x3e5 PUSH4 0xffffffff
0x3ea DUP7
0x3eb AND
0x3ec MUL
0x3ed DUP2
0x3ee MSTORE
0x3ef PUSH2 0xffff
0x3f2 SWAP1
0x3f3 SWAP4
0x3f4 AND
0x3f5 PUSH1 0x4
0x3f7 DUP5
0x3f8 ADD
0x3f9 MSTORE
0x3fa PUSH1 0xff
0x3fc SWAP2
0x3fd DUP3
0x3fe AND
0x3ff PUSH1 0x24
0x401 DUP5
0x402 ADD
0x403 MSTORE
0x404 AND
0x405 PUSH1 0x44
0x407 DUP3
0x408 ADD
0x409 MSTORE
0x40a PUSH1 0x64
0x40c ADD
0x40d PUSH1 0x20
0x40f PUSH1 0x40
0x411 MLOAD
0x412 DUP1
0x413 DUP4
0x414 SUB
0x415 DUP2
0x416 PUSH1 0x0
0x418 DUP8
0x419 DUP1
0x41a EXTCODESIZE
0x41b ISZERO
0x41c ISZERO
0x41d PUSH2 0x425
0x420 JUMPI
---
0x3bb: JUMPDEST 
0x3bc: V325 = 0xa
0x3be: V326 = S[0xa]
0x3bf: V327 = 0x1
0x3c1: V328 = 0xa0
0x3c3: V329 = 0x2
0x3c5: V330 = EXP 0x2 0xa0
0x3c6: V331 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c7: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x3c8: V333 = 0x8c8d98a0
0x3cd: V334 = 0x7e2
0x3d0: V335 = 0x2
0x3d2: V336 = 0x1c
0x3d4: V337 = 0x0
0x3d6: V338 = 0x40
0x3d8: V339 = M[0x40]
0x3d9: V340 = 0x20
0x3db: V341 = ADD 0x20 V339
0x3dc: M[V341] = 0x0
0x3dd: V342 = 0x40
0x3df: V343 = M[0x40]
0x3e0: V344 = 0xe0
0x3e2: V345 = 0x2
0x3e4: V346 = EXP 0x2 0xe0
0x3e5: V347 = 0xffffffff
0x3eb: V348 = AND 0x8c8d98a0 0xffffffff
0x3ec: V349 = MUL 0x8c8d98a0 0x100000000000000000000000000000000000000000000000000000000
0x3ee: M[V343] = 0x8c8d98a000000000000000000000000000000000000000000000000000000000
0x3ef: V350 = 0xffff
0x3f4: V351 = AND 0x7e2 0xffff
0x3f5: V352 = 0x4
0x3f8: V353 = ADD V343 0x4
0x3f9: M[V353] = 0x7e2
0x3fa: V354 = 0xff
0x3fe: V355 = AND 0xff 0x2
0x3ff: V356 = 0x24
0x402: V357 = ADD V343 0x24
0x403: M[V357] = 0x2
0x404: V358 = AND 0x1c 0xff
0x405: V359 = 0x44
0x408: V360 = ADD V343 0x44
0x409: M[V360] = 0x1c
0x40a: V361 = 0x64
0x40c: V362 = ADD 0x64 V343
0x40d: V363 = 0x20
0x40f: V364 = 0x40
0x411: V365 = M[0x40]
0x414: V366 = SUB V362 V365
0x416: V367 = 0x0
0x41a: V368 = EXTCODESIZE V332
0x41b: V369 = ISZERO V368
0x41c: V370 = ISZERO V369
0x41d: V371 = 0x425
0x420: JUMPI 0x425 V370
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 0
Stack additions: [V332, 0x8c8d98a0, V362, 0x20, V365, V366, V365, 0x0, V332]
Exit stack: [V13, S2, S1, S0, V332, 0x8c8d98a0, V362, 0x20, V365, V366, V365, 0x0, V332]

================================

Block 0x421
[0x421:0x424]
---
Predecessors: [0x3bb]
Successors: []
---
0x421 PUSH1 0x0
0x423 DUP1
0x424 REVERT
---
0x421: V372 = 0x0
0x424: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, V332, 0x8c8d98a0, V362, 0x20, V365, V366, V365, 0x0, V332]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, V332, 0x8c8d98a0, V362, 0x20, V365, V366, V365, 0x0, V332]

================================

Block 0x425
[0x425:0x431]
---
Predecessors: [0x3bb]
Successors: [0x432, 0x436]
---
0x425 JUMPDEST
0x426 PUSH2 0x2c6
0x429 GAS
0x42a SUB
0x42b CALL
0x42c ISZERO
0x42d ISZERO
0x42e PUSH2 0x436
0x431 JUMPI
---
0x425: JUMPDEST 
0x426: V373 = 0x2c6
0x429: V374 = GAS
0x42a: V375 = SUB V374 0x2c6
0x42b: V376 = CALL V375 V332 0x0 V365 V366 V365 0x20
0x42c: V377 = ISZERO V376
0x42d: V378 = ISZERO V377
0x42e: V379 = 0x436
0x431: JUMPI 0x436 V378
---
Entry stack: [V13, S11, S10, S9, V332, 0x8c8d98a0, V362, 0x20, V365, V366, V365, 0x0, V332]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S11, S10, S9, V332, 0x8c8d98a0, V362]

================================

Block 0x432
[0x432:0x435]
---
Predecessors: [0x425]
Successors: []
---
0x432 PUSH1 0x0
0x434 DUP1
0x435 REVERT
---
0x432: V380 = 0x0
0x435: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, V332, 0x8c8d98a0, V362]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, V332, 0x8c8d98a0, V362]

================================

Block 0x436
[0x436:0x447]
---
Predecessors: [0x425]
Successors: [0x448, 0x472]
---
0x436 JUMPDEST
0x437 POP
0x438 POP
0x439 POP
0x43a PUSH1 0x40
0x43c MLOAD
0x43d DUP1
0x43e MLOAD
0x43f SWAP1
0x440 POP
0x441 TIMESTAMP
0x442 LT
0x443 ISZERO
0x444 PUSH2 0x472
0x447 JUMPI
---
0x436: JUMPDEST 
0x43a: V381 = 0x40
0x43c: V382 = M[0x40]
0x43e: V383 = M[V382]
0x441: V384 = TIMESTAMP
0x442: V385 = LT V384 V383
0x443: V386 = ISZERO V385
0x444: V387 = 0x472
0x447: JUMPI 0x472 V386
---
Entry stack: [V13, S5, S4, S3, V332, 0x8c8d98a0, V362]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S5, S4, S3]

================================

Block 0x448
[0x448:0x457]
---
Predecessors: [0x436]
Successors: [0xbb0]
---
0x448 PUSH2 0x458
0x44b DUP2
0x44c PUSH1 0xe
0x44e PUSH4 0xffffffff
0x453 PUSH2 0xbb0
0x456 AND
0x457 JUMP
---
0x448: V388 = 0x458
0x44c: V389 = 0xe
0x44e: V390 = 0xffffffff
0x453: V391 = 0xbb0
0x456: V392 = AND 0xbb0 0xffffffff
0x457: JUMP 0xbb0
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x458, S0, 0xe]
Exit stack: [V13, S2, S1, S0, 0x458, S0, 0xe]

================================

Block 0x458
[0x458:0x46a]
---
Predecessors: [0xb92]
Successors: [0xb99]
---
0x458 JUMPDEST
0x459 SWAP1
0x45a POP
0x45b PUSH2 0x46b
0x45e DUP2
0x45f PUSH1 0xa
0x461 PUSH4 0xffffffff
0x466 PUSH2 0xb99
0x469 AND
0x46a JUMP
---
0x458: JUMPDEST 
0x45b: V393 = 0x46b
0x45f: V394 = 0xa
0x461: V395 = 0xffffffff
0x466: V396 = 0xb99
0x469: V397 = AND 0xb99 0xffffffff
0x46a: JUMP 0xb99
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, 0x46b, S0, 0xa]
Exit stack: [V13, S3, S2, S0, 0x46b, S0, 0xa]

================================

Block 0x46b
[0x46b:0x471]
---
Predecessors: [0xba7]
Successors: [0x6fc]
---
0x46b JUMPDEST
0x46c SWAP1
0x46d POP
0x46e PUSH2 0x6fc
0x471 JUMP
---
0x46b: JUMPDEST 
0x46e: V398 = 0x6fc
0x471: JUMP 0x6fc
---
Entry stack: [V13, 0xb3, S1, V1125]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, 0xb3, V1125]

================================

Block 0x472
[0x472:0x4d7]
---
Predecessors: [0x436]
Successors: [0x4d8, 0x4dc]
---
0x472 JUMPDEST
0x473 PUSH1 0xa
0x475 SLOAD
0x476 PUSH1 0x1
0x478 PUSH1 0xa0
0x47a PUSH1 0x2
0x47c EXP
0x47d SUB
0x47e AND
0x47f PUSH4 0x8c8d98a0
0x484 PUSH2 0x7e2
0x487 PUSH1 0x3
0x489 PUSH1 0xf
0x48b PUSH1 0x0
0x48d PUSH1 0x40
0x48f MLOAD
0x490 PUSH1 0x20
0x492 ADD
0x493 MSTORE
0x494 PUSH1 0x40
0x496 MLOAD
0x497 PUSH1 0xe0
0x499 PUSH1 0x2
0x49b EXP
0x49c PUSH4 0xffffffff
0x4a1 DUP7
0x4a2 AND
0x4a3 MUL
0x4a4 DUP2
0x4a5 MSTORE
0x4a6 PUSH2 0xffff
0x4a9 SWAP1
0x4aa SWAP4
0x4ab AND
0x4ac PUSH1 0x4
0x4ae DUP5
0x4af ADD
0x4b0 MSTORE
0x4b1 PUSH1 0xff
0x4b3 SWAP2
0x4b4 DUP3
0x4b5 AND
0x4b6 PUSH1 0x24
0x4b8 DUP5
0x4b9 ADD
0x4ba MSTORE
0x4bb AND
0x4bc PUSH1 0x44
0x4be DUP3
0x4bf ADD
0x4c0 MSTORE
0x4c1 PUSH1 0x64
0x4c3 ADD
0x4c4 PUSH1 0x20
0x4c6 PUSH1 0x40
0x4c8 MLOAD
0x4c9 DUP1
0x4ca DUP4
0x4cb SUB
0x4cc DUP2
0x4cd PUSH1 0x0
0x4cf DUP8
0x4d0 DUP1
0x4d1 EXTCODESIZE
0x4d2 ISZERO
0x4d3 ISZERO
0x4d4 PUSH2 0x4dc
0x4d7 JUMPI
---
0x472: JUMPDEST 
0x473: V399 = 0xa
0x475: V400 = S[0xa]
0x476: V401 = 0x1
0x478: V402 = 0xa0
0x47a: V403 = 0x2
0x47c: V404 = EXP 0x2 0xa0
0x47d: V405 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47e: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x47f: V407 = 0x8c8d98a0
0x484: V408 = 0x7e2
0x487: V409 = 0x3
0x489: V410 = 0xf
0x48b: V411 = 0x0
0x48d: V412 = 0x40
0x48f: V413 = M[0x40]
0x490: V414 = 0x20
0x492: V415 = ADD 0x20 V413
0x493: M[V415] = 0x0
0x494: V416 = 0x40
0x496: V417 = M[0x40]
0x497: V418 = 0xe0
0x499: V419 = 0x2
0x49b: V420 = EXP 0x2 0xe0
0x49c: V421 = 0xffffffff
0x4a2: V422 = AND 0x8c8d98a0 0xffffffff
0x4a3: V423 = MUL 0x8c8d98a0 0x100000000000000000000000000000000000000000000000000000000
0x4a5: M[V417] = 0x8c8d98a000000000000000000000000000000000000000000000000000000000
0x4a6: V424 = 0xffff
0x4ab: V425 = AND 0x7e2 0xffff
0x4ac: V426 = 0x4
0x4af: V427 = ADD V417 0x4
0x4b0: M[V427] = 0x7e2
0x4b1: V428 = 0xff
0x4b5: V429 = AND 0xff 0x3
0x4b6: V430 = 0x24
0x4b9: V431 = ADD V417 0x24
0x4ba: M[V431] = 0x3
0x4bb: V432 = AND 0xf 0xff
0x4bc: V433 = 0x44
0x4bf: V434 = ADD V417 0x44
0x4c0: M[V434] = 0xf
0x4c1: V435 = 0x64
0x4c3: V436 = ADD 0x64 V417
0x4c4: V437 = 0x20
0x4c6: V438 = 0x40
0x4c8: V439 = M[0x40]
0x4cb: V440 = SUB V436 V439
0x4cd: V441 = 0x0
0x4d1: V442 = EXTCODESIZE V406
0x4d2: V443 = ISZERO V442
0x4d3: V444 = ISZERO V443
0x4d4: V445 = 0x4dc
0x4d7: JUMPI 0x4dc V444
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 0
Stack additions: [V406, 0x8c8d98a0, V436, 0x20, V439, V440, V439, 0x0, V406]
Exit stack: [V13, S2, S1, S0, V406, 0x8c8d98a0, V436, 0x20, V439, V440, V439, 0x0, V406]

================================

Block 0x4d8
[0x4d8:0x4db]
---
Predecessors: [0x472]
Successors: []
---
0x4d8 PUSH1 0x0
0x4da DUP1
0x4db REVERT
---
0x4d8: V446 = 0x0
0x4db: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, V406, 0x8c8d98a0, V436, 0x20, V439, V440, V439, 0x0, V406]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, V406, 0x8c8d98a0, V436, 0x20, V439, V440, V439, 0x0, V406]

================================

Block 0x4dc
[0x4dc:0x4e8]
---
Predecessors: [0x472]
Successors: [0x4e9, 0x4ed]
---
0x4dc JUMPDEST
0x4dd PUSH2 0x2c6
0x4e0 GAS
0x4e1 SUB
0x4e2 CALL
0x4e3 ISZERO
0x4e4 ISZERO
0x4e5 PUSH2 0x4ed
0x4e8 JUMPI
---
0x4dc: JUMPDEST 
0x4dd: V447 = 0x2c6
0x4e0: V448 = GAS
0x4e1: V449 = SUB V448 0x2c6
0x4e2: V450 = CALL V449 V406 0x0 V439 V440 V439 0x20
0x4e3: V451 = ISZERO V450
0x4e4: V452 = ISZERO V451
0x4e5: V453 = 0x4ed
0x4e8: JUMPI 0x4ed V452
---
Entry stack: [V13, S11, S10, S9, V406, 0x8c8d98a0, V436, 0x20, V439, V440, V439, 0x0, V406]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S11, S10, S9, V406, 0x8c8d98a0, V436]

================================

Block 0x4e9
[0x4e9:0x4ec]
---
Predecessors: [0x4dc]
Successors: []
---
0x4e9 PUSH1 0x0
0x4eb DUP1
0x4ec REVERT
---
0x4e9: V454 = 0x0
0x4ec: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, V406, 0x8c8d98a0, V436]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, V406, 0x8c8d98a0, V436]

================================

Block 0x4ed
[0x4ed:0x4fe]
---
Predecessors: [0x4dc]
Successors: [0x4ff, 0x50f]
---
0x4ed JUMPDEST
0x4ee POP
0x4ef POP
0x4f0 POP
0x4f1 PUSH1 0x40
0x4f3 MLOAD
0x4f4 DUP1
0x4f5 MLOAD
0x4f6 SWAP1
0x4f7 POP
0x4f8 TIMESTAMP
0x4f9 LT
0x4fa ISZERO
0x4fb PUSH2 0x50f
0x4fe JUMPI
---
0x4ed: JUMPDEST 
0x4f1: V455 = 0x40
0x4f3: V456 = M[0x40]
0x4f5: V457 = M[V456]
0x4f8: V458 = TIMESTAMP
0x4f9: V459 = LT V458 V457
0x4fa: V460 = ISZERO V459
0x4fb: V461 = 0x50f
0x4fe: JUMPI 0x50f V460
---
Entry stack: [V13, S5, S4, S3, V406, 0x8c8d98a0, V436]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S5, S4, S3]

================================

Block 0x4ff
[0x4ff:0x50e]
---
Predecessors: [0x4ed]
Successors: [0xbb0]
---
0x4ff PUSH2 0x458
0x502 DUP2
0x503 PUSH1 0xd
0x505 PUSH4 0xffffffff
0x50a PUSH2 0xbb0
0x50d AND
0x50e JUMP
---
0x4ff: V462 = 0x458
0x503: V463 = 0xd
0x505: V464 = 0xffffffff
0x50a: V465 = 0xbb0
0x50d: V466 = AND 0xbb0 0xffffffff
0x50e: JUMP 0xbb0
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x458, S0, 0xd]
Exit stack: [V13, S2, S1, S0, 0x458, S0, 0xd]

================================

Block 0x50f
[0x50f:0x574]
---
Predecessors: [0x4ed]
Successors: [0x575, 0x579]
---
0x50f JUMPDEST
0x510 PUSH1 0xa
0x512 SLOAD
0x513 PUSH1 0x1
0x515 PUSH1 0xa0
0x517 PUSH1 0x2
0x519 EXP
0x51a SUB
0x51b AND
0x51c PUSH4 0x8c8d98a0
0x521 PUSH2 0x7e2
0x524 PUSH1 0x3
0x526 PUSH1 0x1f
0x528 PUSH1 0x0
0x52a PUSH1 0x40
0x52c MLOAD
0x52d PUSH1 0x20
0x52f ADD
0x530 MSTORE
0x531 PUSH1 0x40
0x533 MLOAD
0x534 PUSH1 0xe0
0x536 PUSH1 0x2
0x538 EXP
0x539 PUSH4 0xffffffff
0x53e DUP7
0x53f AND
0x540 MUL
0x541 DUP2
0x542 MSTORE
0x543 PUSH2 0xffff
0x546 SWAP1
0x547 SWAP4
0x548 AND
0x549 PUSH1 0x4
0x54b DUP5
0x54c ADD
0x54d MSTORE
0x54e PUSH1 0xff
0x550 SWAP2
0x551 DUP3
0x552 AND
0x553 PUSH1 0x24
0x555 DUP5
0x556 ADD
0x557 MSTORE
0x558 AND
0x559 PUSH1 0x44
0x55b DUP3
0x55c ADD
0x55d MSTORE
0x55e PUSH1 0x64
0x560 ADD
0x561 PUSH1 0x20
0x563 PUSH1 0x40
0x565 MLOAD
0x566 DUP1
0x567 DUP4
0x568 SUB
0x569 DUP2
0x56a PUSH1 0x0
0x56c DUP8
0x56d DUP1
0x56e EXTCODESIZE
0x56f ISZERO
0x570 ISZERO
0x571 PUSH2 0x579
0x574 JUMPI
---
0x50f: JUMPDEST 
0x510: V467 = 0xa
0x512: V468 = S[0xa]
0x513: V469 = 0x1
0x515: V470 = 0xa0
0x517: V471 = 0x2
0x519: V472 = EXP 0x2 0xa0
0x51a: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51b: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x51c: V475 = 0x8c8d98a0
0x521: V476 = 0x7e2
0x524: V477 = 0x3
0x526: V478 = 0x1f
0x528: V479 = 0x0
0x52a: V480 = 0x40
0x52c: V481 = M[0x40]
0x52d: V482 = 0x20
0x52f: V483 = ADD 0x20 V481
0x530: M[V483] = 0x0
0x531: V484 = 0x40
0x533: V485 = M[0x40]
0x534: V486 = 0xe0
0x536: V487 = 0x2
0x538: V488 = EXP 0x2 0xe0
0x539: V489 = 0xffffffff
0x53f: V490 = AND 0x8c8d98a0 0xffffffff
0x540: V491 = MUL 0x8c8d98a0 0x100000000000000000000000000000000000000000000000000000000
0x542: M[V485] = 0x8c8d98a000000000000000000000000000000000000000000000000000000000
0x543: V492 = 0xffff
0x548: V493 = AND 0x7e2 0xffff
0x549: V494 = 0x4
0x54c: V495 = ADD V485 0x4
0x54d: M[V495] = 0x7e2
0x54e: V496 = 0xff
0x552: V497 = AND 0xff 0x3
0x553: V498 = 0x24
0x556: V499 = ADD V485 0x24
0x557: M[V499] = 0x3
0x558: V500 = AND 0x1f 0xff
0x559: V501 = 0x44
0x55c: V502 = ADD V485 0x44
0x55d: M[V502] = 0x1f
0x55e: V503 = 0x64
0x560: V504 = ADD 0x64 V485
0x561: V505 = 0x20
0x563: V506 = 0x40
0x565: V507 = M[0x40]
0x568: V508 = SUB V504 V507
0x56a: V509 = 0x0
0x56e: V510 = EXTCODESIZE V474
0x56f: V511 = ISZERO V510
0x570: V512 = ISZERO V511
0x571: V513 = 0x579
0x574: JUMPI 0x579 V512
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 0
Stack additions: [V474, 0x8c8d98a0, V504, 0x20, V507, V508, V507, 0x0, V474]
Exit stack: [V13, S2, S1, S0, V474, 0x8c8d98a0, V504, 0x20, V507, V508, V507, 0x0, V474]

================================

Block 0x575
[0x575:0x578]
---
Predecessors: [0x50f]
Successors: []
---
0x575 PUSH1 0x0
0x577 DUP1
0x578 REVERT
---
0x575: V514 = 0x0
0x578: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, V474, 0x8c8d98a0, V504, 0x20, V507, V508, V507, 0x0, V474]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, V474, 0x8c8d98a0, V504, 0x20, V507, V508, V507, 0x0, V474]

================================

Block 0x579
[0x579:0x585]
---
Predecessors: [0x50f]
Successors: [0x586, 0x58a]
---
0x579 JUMPDEST
0x57a PUSH2 0x2c6
0x57d GAS
0x57e SUB
0x57f CALL
0x580 ISZERO
0x581 ISZERO
0x582 PUSH2 0x58a
0x585 JUMPI
---
0x579: JUMPDEST 
0x57a: V515 = 0x2c6
0x57d: V516 = GAS
0x57e: V517 = SUB V516 0x2c6
0x57f: V518 = CALL V517 V474 0x0 V507 V508 V507 0x20
0x580: V519 = ISZERO V518
0x581: V520 = ISZERO V519
0x582: V521 = 0x58a
0x585: JUMPI 0x58a V520
---
Entry stack: [V13, S11, S10, S9, V474, 0x8c8d98a0, V504, 0x20, V507, V508, V507, 0x0, V474]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S11, S10, S9, V474, 0x8c8d98a0, V504]

================================

Block 0x586
[0x586:0x589]
---
Predecessors: [0x579]
Successors: []
---
0x586 PUSH1 0x0
0x588 DUP1
0x589 REVERT
---
0x586: V522 = 0x0
0x589: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, V474, 0x8c8d98a0, V504]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, V474, 0x8c8d98a0, V504]

================================

Block 0x58a
[0x58a:0x59b]
---
Predecessors: [0x579]
Successors: [0x59c, 0x5ac]
---
0x58a JUMPDEST
0x58b POP
0x58c POP
0x58d POP
0x58e PUSH1 0x40
0x590 MLOAD
0x591 DUP1
0x592 MLOAD
0x593 SWAP1
0x594 POP
0x595 TIMESTAMP
0x596 LT
0x597 ISZERO
0x598 PUSH2 0x5ac
0x59b JUMPI
---
0x58a: JUMPDEST 
0x58e: V523 = 0x40
0x590: V524 = M[0x40]
0x592: V525 = M[V524]
0x595: V526 = TIMESTAMP
0x596: V527 = LT V526 V525
0x597: V528 = ISZERO V527
0x598: V529 = 0x5ac
0x59b: JUMPI 0x5ac V528
---
Entry stack: [V13, S5, S4, S3, V474, 0x8c8d98a0, V504]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S5, S4, S3]

================================

Block 0x59c
[0x59c:0x5ab]
---
Predecessors: [0x58a]
Successors: [0xbb0]
---
0x59c PUSH2 0x458
0x59f DUP2
0x5a0 PUSH1 0xc
0x5a2 PUSH4 0xffffffff
0x5a7 PUSH2 0xbb0
0x5aa AND
0x5ab JUMP
---
0x59c: V530 = 0x458
0x5a0: V531 = 0xc
0x5a2: V532 = 0xffffffff
0x5a7: V533 = 0xbb0
0x5aa: V534 = AND 0xbb0 0xffffffff
0x5ab: JUMP 0xbb0
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x458, S0, 0xc]
Exit stack: [V13, S2, S1, S0, 0x458, S0, 0xc]

================================

Block 0x5ac
[0x5ac:0x611]
---
Predecessors: [0x58a]
Successors: [0x612, 0x616]
---
0x5ac JUMPDEST
0x5ad PUSH1 0xa
0x5af SLOAD
0x5b0 PUSH1 0x1
0x5b2 PUSH1 0xa0
0x5b4 PUSH1 0x2
0x5b6 EXP
0x5b7 SUB
0x5b8 AND
0x5b9 PUSH4 0x8c8d98a0
0x5be PUSH2 0x7e2
0x5c1 PUSH1 0x4
0x5c3 PUSH1 0x1e
0x5c5 PUSH1 0x0
0x5c7 PUSH1 0x40
0x5c9 MLOAD
0x5ca PUSH1 0x20
0x5cc ADD
0x5cd MSTORE
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 PUSH1 0xe0
0x5d3 PUSH1 0x2
0x5d5 EXP
0x5d6 PUSH4 0xffffffff
0x5db DUP7
0x5dc AND
0x5dd MUL
0x5de DUP2
0x5df MSTORE
0x5e0 PUSH2 0xffff
0x5e3 SWAP1
0x5e4 SWAP4
0x5e5 AND
0x5e6 PUSH1 0x4
0x5e8 DUP5
0x5e9 ADD
0x5ea MSTORE
0x5eb PUSH1 0xff
0x5ed SWAP2
0x5ee DUP3
0x5ef AND
0x5f0 PUSH1 0x24
0x5f2 DUP5
0x5f3 ADD
0x5f4 MSTORE
0x5f5 AND
0x5f6 PUSH1 0x44
0x5f8 DUP3
0x5f9 ADD
0x5fa MSTORE
0x5fb PUSH1 0x64
0x5fd ADD
0x5fe PUSH1 0x20
0x600 PUSH1 0x40
0x602 MLOAD
0x603 DUP1
0x604 DUP4
0x605 SUB
0x606 DUP2
0x607 PUSH1 0x0
0x609 DUP8
0x60a DUP1
0x60b EXTCODESIZE
0x60c ISZERO
0x60d ISZERO
0x60e PUSH2 0x616
0x611 JUMPI
---
0x5ac: JUMPDEST 
0x5ad: V535 = 0xa
0x5af: V536 = S[0xa]
0x5b0: V537 = 0x1
0x5b2: V538 = 0xa0
0x5b4: V539 = 0x2
0x5b6: V540 = EXP 0x2 0xa0
0x5b7: V541 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b8: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x5b9: V543 = 0x8c8d98a0
0x5be: V544 = 0x7e2
0x5c1: V545 = 0x4
0x5c3: V546 = 0x1e
0x5c5: V547 = 0x0
0x5c7: V548 = 0x40
0x5c9: V549 = M[0x40]
0x5ca: V550 = 0x20
0x5cc: V551 = ADD 0x20 V549
0x5cd: M[V551] = 0x0
0x5ce: V552 = 0x40
0x5d0: V553 = M[0x40]
0x5d1: V554 = 0xe0
0x5d3: V555 = 0x2
0x5d5: V556 = EXP 0x2 0xe0
0x5d6: V557 = 0xffffffff
0x5dc: V558 = AND 0x8c8d98a0 0xffffffff
0x5dd: V559 = MUL 0x8c8d98a0 0x100000000000000000000000000000000000000000000000000000000
0x5df: M[V553] = 0x8c8d98a000000000000000000000000000000000000000000000000000000000
0x5e0: V560 = 0xffff
0x5e5: V561 = AND 0x7e2 0xffff
0x5e6: V562 = 0x4
0x5e9: V563 = ADD V553 0x4
0x5ea: M[V563] = 0x7e2
0x5eb: V564 = 0xff
0x5ef: V565 = AND 0xff 0x4
0x5f0: V566 = 0x24
0x5f3: V567 = ADD V553 0x24
0x5f4: M[V567] = 0x4
0x5f5: V568 = AND 0x1e 0xff
0x5f6: V569 = 0x44
0x5f9: V570 = ADD V553 0x44
0x5fa: M[V570] = 0x1e
0x5fb: V571 = 0x64
0x5fd: V572 = ADD 0x64 V553
0x5fe: V573 = 0x20
0x600: V574 = 0x40
0x602: V575 = M[0x40]
0x605: V576 = SUB V572 V575
0x607: V577 = 0x0
0x60b: V578 = EXTCODESIZE V542
0x60c: V579 = ISZERO V578
0x60d: V580 = ISZERO V579
0x60e: V581 = 0x616
0x611: JUMPI 0x616 V580
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 0
Stack additions: [V542, 0x8c8d98a0, V572, 0x20, V575, V576, V575, 0x0, V542]
Exit stack: [V13, S2, S1, S0, V542, 0x8c8d98a0, V572, 0x20, V575, V576, V575, 0x0, V542]

================================

Block 0x612
[0x612:0x615]
---
Predecessors: [0x5ac]
Successors: []
---
0x612 PUSH1 0x0
0x614 DUP1
0x615 REVERT
---
0x612: V582 = 0x0
0x615: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, V542, 0x8c8d98a0, V572, 0x20, V575, V576, V575, 0x0, V542]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, V542, 0x8c8d98a0, V572, 0x20, V575, V576, V575, 0x0, V542]

================================

Block 0x616
[0x616:0x622]
---
Predecessors: [0x5ac]
Successors: [0x623, 0x627]
---
0x616 JUMPDEST
0x617 PUSH2 0x2c6
0x61a GAS
0x61b SUB
0x61c CALL
0x61d ISZERO
0x61e ISZERO
0x61f PUSH2 0x627
0x622 JUMPI
---
0x616: JUMPDEST 
0x617: V583 = 0x2c6
0x61a: V584 = GAS
0x61b: V585 = SUB V584 0x2c6
0x61c: V586 = CALL V585 V542 0x0 V575 V576 V575 0x20
0x61d: V587 = ISZERO V586
0x61e: V588 = ISZERO V587
0x61f: V589 = 0x627
0x622: JUMPI 0x627 V588
---
Entry stack: [V13, S11, S10, S9, V542, 0x8c8d98a0, V572, 0x20, V575, V576, V575, 0x0, V542]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S11, S10, S9, V542, 0x8c8d98a0, V572]

================================

Block 0x623
[0x623:0x626]
---
Predecessors: [0x616]
Successors: []
---
0x623 PUSH1 0x0
0x625 DUP1
0x626 REVERT
---
0x623: V590 = 0x0
0x626: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, V542, 0x8c8d98a0, V572]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, V542, 0x8c8d98a0, V572]

================================

Block 0x627
[0x627:0x638]
---
Predecessors: [0x616]
Successors: [0x639, 0x649]
---
0x627 JUMPDEST
0x628 POP
0x629 POP
0x62a POP
0x62b PUSH1 0x40
0x62d MLOAD
0x62e DUP1
0x62f MLOAD
0x630 SWAP1
0x631 POP
0x632 TIMESTAMP
0x633 LT
0x634 ISZERO
0x635 PUSH2 0x649
0x638 JUMPI
---
0x627: JUMPDEST 
0x62b: V591 = 0x40
0x62d: V592 = M[0x40]
0x62f: V593 = M[V592]
0x632: V594 = TIMESTAMP
0x633: V595 = LT V594 V593
0x634: V596 = ISZERO V595
0x635: V597 = 0x649
0x638: JUMPI 0x649 V596
---
Entry stack: [V13, S5, S4, S3, V542, 0x8c8d98a0, V572]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S5, S4, S3]

================================

Block 0x639
[0x639:0x648]
---
Predecessors: [0x627]
Successors: [0xbb0]
---
0x639 PUSH2 0x458
0x63c DUP2
0x63d PUSH1 0xb
0x63f PUSH4 0xffffffff
0x644 PUSH2 0xbb0
0x647 AND
0x648 JUMP
---
0x639: V598 = 0x458
0x63d: V599 = 0xb
0x63f: V600 = 0xffffffff
0x644: V601 = 0xbb0
0x647: V602 = AND 0xbb0 0xffffffff
0x648: JUMP 0xbb0
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x458, S0, 0xb]
Exit stack: [V13, S2, S1, S0, 0x458, S0, 0xb]

================================

Block 0x649
[0x649:0x6ae]
---
Predecessors: [0x627]
Successors: [0x6af, 0x6b3]
---
0x649 JUMPDEST
0x64a PUSH1 0xa
0x64c SLOAD
0x64d PUSH1 0x1
0x64f PUSH1 0xa0
0x651 PUSH1 0x2
0x653 EXP
0x654 SUB
0x655 AND
0x656 PUSH4 0x8c8d98a0
0x65b PUSH2 0x7e2
0x65e PUSH1 0x5
0x660 PUSH1 0xf
0x662 PUSH1 0x0
0x664 PUSH1 0x40
0x666 MLOAD
0x667 PUSH1 0x20
0x669 ADD
0x66a MSTORE
0x66b PUSH1 0x40
0x66d MLOAD
0x66e PUSH1 0xe0
0x670 PUSH1 0x2
0x672 EXP
0x673 PUSH4 0xffffffff
0x678 DUP7
0x679 AND
0x67a MUL
0x67b DUP2
0x67c MSTORE
0x67d PUSH2 0xffff
0x680 SWAP1
0x681 SWAP4
0x682 AND
0x683 PUSH1 0x4
0x685 DUP5
0x686 ADD
0x687 MSTORE
0x688 PUSH1 0xff
0x68a SWAP2
0x68b DUP3
0x68c AND
0x68d PUSH1 0x24
0x68f DUP5
0x690 ADD
0x691 MSTORE
0x692 AND
0x693 PUSH1 0x44
0x695 DUP3
0x696 ADD
0x697 MSTORE
0x698 PUSH1 0x64
0x69a ADD
0x69b PUSH1 0x20
0x69d PUSH1 0x40
0x69f MLOAD
0x6a0 DUP1
0x6a1 DUP4
0x6a2 SUB
0x6a3 DUP2
0x6a4 PUSH1 0x0
0x6a6 DUP8
0x6a7 DUP1
0x6a8 EXTCODESIZE
0x6a9 ISZERO
0x6aa ISZERO
0x6ab PUSH2 0x6b3
0x6ae JUMPI
---
0x649: JUMPDEST 
0x64a: V603 = 0xa
0x64c: V604 = S[0xa]
0x64d: V605 = 0x1
0x64f: V606 = 0xa0
0x651: V607 = 0x2
0x653: V608 = EXP 0x2 0xa0
0x654: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x655: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V604
0x656: V611 = 0x8c8d98a0
0x65b: V612 = 0x7e2
0x65e: V613 = 0x5
0x660: V614 = 0xf
0x662: V615 = 0x0
0x664: V616 = 0x40
0x666: V617 = M[0x40]
0x667: V618 = 0x20
0x669: V619 = ADD 0x20 V617
0x66a: M[V619] = 0x0
0x66b: V620 = 0x40
0x66d: V621 = M[0x40]
0x66e: V622 = 0xe0
0x670: V623 = 0x2
0x672: V624 = EXP 0x2 0xe0
0x673: V625 = 0xffffffff
0x679: V626 = AND 0x8c8d98a0 0xffffffff
0x67a: V627 = MUL 0x8c8d98a0 0x100000000000000000000000000000000000000000000000000000000
0x67c: M[V621] = 0x8c8d98a000000000000000000000000000000000000000000000000000000000
0x67d: V628 = 0xffff
0x682: V629 = AND 0x7e2 0xffff
0x683: V630 = 0x4
0x686: V631 = ADD V621 0x4
0x687: M[V631] = 0x7e2
0x688: V632 = 0xff
0x68c: V633 = AND 0xff 0x5
0x68d: V634 = 0x24
0x690: V635 = ADD V621 0x24
0x691: M[V635] = 0x5
0x692: V636 = AND 0xf 0xff
0x693: V637 = 0x44
0x696: V638 = ADD V621 0x44
0x697: M[V638] = 0xf
0x698: V639 = 0x64
0x69a: V640 = ADD 0x64 V621
0x69b: V641 = 0x20
0x69d: V642 = 0x40
0x69f: V643 = M[0x40]
0x6a2: V644 = SUB V640 V643
0x6a4: V645 = 0x0
0x6a8: V646 = EXTCODESIZE V610
0x6a9: V647 = ISZERO V646
0x6aa: V648 = ISZERO V647
0x6ab: V649 = 0x6b3
0x6ae: JUMPI 0x6b3 V648
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 0
Stack additions: [V610, 0x8c8d98a0, V640, 0x20, V643, V644, V643, 0x0, V610]
Exit stack: [V13, S2, S1, S0, V610, 0x8c8d98a0, V640, 0x20, V643, V644, V643, 0x0, V610]

================================

Block 0x6af
[0x6af:0x6b2]
---
Predecessors: [0x649]
Successors: []
---
0x6af PUSH1 0x0
0x6b1 DUP1
0x6b2 REVERT
---
0x6af: V650 = 0x0
0x6b2: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, V610, 0x8c8d98a0, V640, 0x20, V643, V644, V643, 0x0, V610]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, V610, 0x8c8d98a0, V640, 0x20, V643, V644, V643, 0x0, V610]

================================

Block 0x6b3
[0x6b3:0x6bf]
---
Predecessors: [0x649]
Successors: [0x6c0, 0x6c4]
---
0x6b3 JUMPDEST
0x6b4 PUSH2 0x2c6
0x6b7 GAS
0x6b8 SUB
0x6b9 CALL
0x6ba ISZERO
0x6bb ISZERO
0x6bc PUSH2 0x6c4
0x6bf JUMPI
---
0x6b3: JUMPDEST 
0x6b4: V651 = 0x2c6
0x6b7: V652 = GAS
0x6b8: V653 = SUB V652 0x2c6
0x6b9: V654 = CALL V653 V610 0x0 V643 V644 V643 0x20
0x6ba: V655 = ISZERO V654
0x6bb: V656 = ISZERO V655
0x6bc: V657 = 0x6c4
0x6bf: JUMPI 0x6c4 V656
---
Entry stack: [V13, S11, S10, S9, V610, 0x8c8d98a0, V640, 0x20, V643, V644, V643, 0x0, V610]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S11, S10, S9, V610, 0x8c8d98a0, V640]

================================

Block 0x6c0
[0x6c0:0x6c3]
---
Predecessors: [0x6b3]
Successors: []
---
0x6c0 PUSH1 0x0
0x6c2 DUP1
0x6c3 REVERT
---
0x6c0: V658 = 0x0
0x6c3: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, V610, 0x8c8d98a0, V640]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, V610, 0x8c8d98a0, V640]

================================

Block 0x6c4
[0x6c4:0x6d5]
---
Predecessors: [0x6b3]
Successors: [0x6d6, 0x6fc]
---
0x6c4 JUMPDEST
0x6c5 POP
0x6c6 POP
0x6c7 POP
0x6c8 PUSH1 0x40
0x6ca MLOAD
0x6cb DUP1
0x6cc MLOAD
0x6cd SWAP1
0x6ce POP
0x6cf TIMESTAMP
0x6d0 LT
0x6d1 ISZERO
0x6d2 PUSH2 0x6fc
0x6d5 JUMPI
---
0x6c4: JUMPDEST 
0x6c8: V659 = 0x40
0x6ca: V660 = M[0x40]
0x6cc: V661 = M[V660]
0x6cf: V662 = TIMESTAMP
0x6d0: V663 = LT V662 V661
0x6d1: V664 = ISZERO V663
0x6d2: V665 = 0x6fc
0x6d5: JUMPI 0x6fc V664
---
Entry stack: [V13, S5, S4, S3, V610, 0x8c8d98a0, V640]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S5, S4, S3]

================================

Block 0x6d6
[0x6d6:0x6e5]
---
Predecessors: [0x6c4]
Successors: [0xbb0]
---
0x6d6 PUSH2 0x6e6
0x6d9 DUP2
0x6da PUSH1 0x69
0x6dc PUSH4 0xffffffff
0x6e1 PUSH2 0xbb0
0x6e4 AND
0x6e5 JUMP
---
0x6d6: V666 = 0x6e6
0x6da: V667 = 0x69
0x6dc: V668 = 0xffffffff
0x6e1: V669 = 0xbb0
0x6e4: V670 = AND 0xbb0 0xffffffff
0x6e5: JUMP 0xbb0
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x6e6, S0, 0x69]
Exit stack: [V13, S2, S1, S0, 0x6e6, S0, 0x69]

================================

Block 0x6e6
[0x6e6:0x6f8]
---
Predecessors: [0xb92]
Successors: [0xb99]
---
0x6e6 JUMPDEST
0x6e7 SWAP1
0x6e8 POP
0x6e9 PUSH2 0x6f9
0x6ec DUP2
0x6ed PUSH1 0x64
0x6ef PUSH4 0xffffffff
0x6f4 PUSH2 0xb99
0x6f7 AND
0x6f8 JUMP
---
0x6e6: JUMPDEST 
0x6e9: V671 = 0x6f9
0x6ed: V672 = 0x64
0x6ef: V673 = 0xffffffff
0x6f4: V674 = 0xb99
0x6f7: V675 = AND 0xb99 0xffffffff
0x6f8: JUMP 0xb99
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, 0x6f9, S0, 0x64]
Exit stack: [V13, S3, S2, S0, 0x6f9, S0, 0x64]

================================

Block 0x6f9
[0x6f9:0x6fb]
---
Predecessors: [0xba7]
Successors: [0x6fc]
---
0x6f9 JUMPDEST
0x6fa SWAP1
0x6fb POP
---
0x6f9: JUMPDEST 
---
Entry stack: [V13, 0xb3, S1, V1125]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, 0xb3, V1125]

================================

Block 0x6fc
[0x6fc:0x70e]
---
Predecessors: [0x3b6, 0x46b, 0x6c4, 0x6f9]
Successors: [0xb83]
---
0x6fc JUMPDEST
0x6fd PUSH1 0x4
0x6ff SLOAD
0x700 PUSH2 0x70f
0x703 SWAP1
0x704 DUP3
0x705 PUSH4 0xffffffff
0x70a PUSH2 0xb83
0x70d AND
0x70e JUMP
---
0x6fc: JUMPDEST 
0x6fd: V676 = 0x4
0x6ff: V677 = S[0x4]
0x700: V678 = 0x70f
0x705: V679 = 0xffffffff
0x70a: V680 = 0xb83
0x70d: V681 = AND 0xb83 0xffffffff
0x70e: JUMP 0xb83
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x70f, V677, S0]
Exit stack: [V13, S2, S1, S0, 0x70f, V677, S0]

================================

Block 0x70f
[0x70f:0x76c]
---
Predecessors: [0xb92]
Successors: [0x76d, 0x771]
---
0x70f JUMPDEST
0x710 PUSH1 0x4
0x712 SSTORE
0x713 PUSH1 0x7
0x715 SLOAD
0x716 PUSH1 0x1
0x718 PUSH1 0xa0
0x71a PUSH1 0x2
0x71c EXP
0x71d SUB
0x71e AND
0x71f PUSH4 0xa9059cbb
0x724 CALLER
0x725 DUP4
0x726 PUSH1 0x0
0x728 PUSH1 0x40
0x72a MLOAD
0x72b PUSH1 0x20
0x72d ADD
0x72e MSTORE
0x72f PUSH1 0x40
0x731 MLOAD
0x732 PUSH1 0xe0
0x734 PUSH1 0x2
0x736 EXP
0x737 PUSH4 0xffffffff
0x73c DUP6
0x73d AND
0x73e MUL
0x73f DUP2
0x740 MSTORE
0x741 PUSH1 0x1
0x743 PUSH1 0xa0
0x745 PUSH1 0x2
0x747 EXP
0x748 SUB
0x749 SWAP1
0x74a SWAP3
0x74b AND
0x74c PUSH1 0x4
0x74e DUP4
0x74f ADD
0x750 MSTORE
0x751 PUSH1 0x24
0x753 DUP3
0x754 ADD
0x755 MSTORE
0x756 PUSH1 0x44
0x758 ADD
0x759 PUSH1 0x20
0x75b PUSH1 0x40
0x75d MLOAD
0x75e DUP1
0x75f DUP4
0x760 SUB
0x761 DUP2
0x762 PUSH1 0x0
0x764 DUP8
0x765 DUP1
0x766 EXTCODESIZE
0x767 ISZERO
0x768 ISZERO
0x769 PUSH2 0x771
0x76c JUMPI
---
0x70f: JUMPDEST 
0x710: V682 = 0x4
0x712: S[0x4] = S0
0x713: V683 = 0x7
0x715: V684 = S[0x7]
0x716: V685 = 0x1
0x718: V686 = 0xa0
0x71a: V687 = 0x2
0x71c: V688 = EXP 0x2 0xa0
0x71d: V689 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71e: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff V684
0x71f: V691 = 0xa9059cbb
0x724: V692 = CALLER
0x726: V693 = 0x0
0x728: V694 = 0x40
0x72a: V695 = M[0x40]
0x72b: V696 = 0x20
0x72d: V697 = ADD 0x20 V695
0x72e: M[V697] = 0x0
0x72f: V698 = 0x40
0x731: V699 = M[0x40]
0x732: V700 = 0xe0
0x734: V701 = 0x2
0x736: V702 = EXP 0x2 0xe0
0x737: V703 = 0xffffffff
0x73d: V704 = AND 0xa9059cbb 0xffffffff
0x73e: V705 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x740: M[V699] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x741: V706 = 0x1
0x743: V707 = 0xa0
0x745: V708 = 0x2
0x747: V709 = EXP 0x2 0xa0
0x748: V710 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74b: V711 = AND V692 0xffffffffffffffffffffffffffffffffffffffff
0x74c: V712 = 0x4
0x74f: V713 = ADD V699 0x4
0x750: M[V713] = V711
0x751: V714 = 0x24
0x754: V715 = ADD V699 0x24
0x755: M[V715] = S1
0x756: V716 = 0x44
0x758: V717 = ADD 0x44 V699
0x759: V718 = 0x20
0x75b: V719 = 0x40
0x75d: V720 = M[0x40]
0x760: V721 = SUB V717 V720
0x762: V722 = 0x0
0x766: V723 = EXTCODESIZE V690
0x767: V724 = ISZERO V723
0x768: V725 = ISZERO V724
0x769: V726 = 0x771
0x76c: JUMPI 0x771 V725
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V690, 0xa9059cbb, V717, 0x20, V720, V721, V720, 0x0, V690]
Exit stack: [V13, S3, S2, S1, V690, 0xa9059cbb, V717, 0x20, V720, V721, V720, 0x0, V690]

================================

Block 0x76d
[0x76d:0x770]
---
Predecessors: [0x70f]
Successors: []
---
0x76d PUSH1 0x0
0x76f DUP1
0x770 REVERT
---
0x76d: V727 = 0x0
0x770: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, V690, 0xa9059cbb, V717, 0x20, V720, V721, V720, 0x0, V690]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, V690, 0xa9059cbb, V717, 0x20, V720, V721, V720, 0x0, V690]

================================

Block 0x771
[0x771:0x77d]
---
Predecessors: [0x70f]
Successors: [0x77e, 0x782]
---
0x771 JUMPDEST
0x772 PUSH2 0x2c6
0x775 GAS
0x776 SUB
0x777 CALL
0x778 ISZERO
0x779 ISZERO
0x77a PUSH2 0x782
0x77d JUMPI
---
0x771: JUMPDEST 
0x772: V728 = 0x2c6
0x775: V729 = GAS
0x776: V730 = SUB V729 0x2c6
0x777: V731 = CALL V730 V690 0x0 V720 V721 V720 0x20
0x778: V732 = ISZERO V731
0x779: V733 = ISZERO V732
0x77a: V734 = 0x782
0x77d: JUMPI 0x782 V733
---
Entry stack: [V13, S11, S10, S9, V690, 0xa9059cbb, V717, 0x20, V720, V721, V720, 0x0, V690]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S11, S10, S9, V690, 0xa9059cbb, V717]

================================

Block 0x77e
[0x77e:0x781]
---
Predecessors: [0x771]
Successors: []
---
0x77e PUSH1 0x0
0x780 DUP1
0x781 REVERT
---
0x77e: V735 = 0x0
0x781: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, V690, 0xa9059cbb, V717]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, V690, 0xa9059cbb, V717]

================================

Block 0x782
[0x782:0x833]
---
Predecessors: [0x771]
Successors: [0x905]
---
0x782 JUMPDEST
0x783 POP
0x784 POP
0x785 POP
0x786 PUSH1 0x40
0x788 MLOAD
0x789 DUP1
0x78a MLOAD
0x78b SWAP1
0x78c POP
0x78d POP
0x78e PUSH32 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x7af CALLER
0x7b0 CALLVALUE
0x7b1 PUSH1 0x3
0x7b3 SLOAD
0x7b4 PUSH1 0x40
0x7b6 MLOAD
0x7b7 DUP1
0x7b8 DUP5
0x7b9 PUSH1 0x1
0x7bb PUSH1 0xa0
0x7bd PUSH1 0x2
0x7bf EXP
0x7c0 SUB
0x7c1 AND
0x7c2 PUSH1 0x1
0x7c4 PUSH1 0xa0
0x7c6 PUSH1 0x2
0x7c8 EXP
0x7c9 SUB
0x7ca AND
0x7cb DUP2
0x7cc MSTORE
0x7cd PUSH1 0x20
0x7cf ADD
0x7d0 DUP4
0x7d1 DUP2
0x7d2 MSTORE
0x7d3 PUSH1 0x20
0x7d5 ADD
0x7d6 DUP3
0x7d7 DUP2
0x7d8 MSTORE
0x7d9 PUSH1 0x20
0x7db ADD
0x7dc SWAP4
0x7dd POP
0x7de POP
0x7df POP
0x7e0 POP
0x7e1 PUSH1 0x40
0x7e3 MLOAD
0x7e4 DUP1
0x7e5 SWAP2
0x7e6 SUB
0x7e7 SWAP1
0x7e8 LOG1
0x7e9 PUSH32 0xaeb3ebd09ef847781ae7d846d2c9afbbb08cfbcad76e92d3206303aa30d24226
0x80a CALLER
0x80b DUP3
0x80c PUSH1 0x40
0x80e MLOAD
0x80f PUSH1 0x1
0x811 PUSH1 0xa0
0x813 PUSH1 0x2
0x815 EXP
0x816 SUB
0x817 SWAP1
0x818 SWAP3
0x819 AND
0x81a DUP3
0x81b MSTORE
0x81c PUSH1 0x20
0x81e DUP3
0x81f ADD
0x820 MSTORE
0x821 PUSH1 0x40
0x823 SWAP1
0x824 DUP2
0x825 ADD
0x826 SWAP1
0x827 MLOAD
0x828 DUP1
0x829 SWAP2
0x82a SUB
0x82b SWAP1
0x82c LOG1
0x82d PUSH2 0x834
0x830 PUSH2 0x905
0x833 JUMP
---
0x782: JUMPDEST 
0x786: V736 = 0x40
0x788: V737 = M[0x40]
0x78a: V738 = M[V737]
0x78e: V739 = 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x7af: V740 = CALLER
0x7b0: V741 = CALLVALUE
0x7b1: V742 = 0x3
0x7b3: V743 = S[0x3]
0x7b4: V744 = 0x40
0x7b6: V745 = M[0x40]
0x7b9: V746 = 0x1
0x7bb: V747 = 0xa0
0x7bd: V748 = 0x2
0x7bf: V749 = EXP 0x2 0xa0
0x7c0: V750 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c1: V751 = AND 0xffffffffffffffffffffffffffffffffffffffff V740
0x7c2: V752 = 0x1
0x7c4: V753 = 0xa0
0x7c6: V754 = 0x2
0x7c8: V755 = EXP 0x2 0xa0
0x7c9: V756 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ca: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff V751
0x7cc: M[V745] = V757
0x7cd: V758 = 0x20
0x7cf: V759 = ADD 0x20 V745
0x7d2: M[V759] = V741
0x7d3: V760 = 0x20
0x7d5: V761 = ADD 0x20 V759
0x7d8: M[V761] = V743
0x7d9: V762 = 0x20
0x7db: V763 = ADD 0x20 V761
0x7e1: V764 = 0x40
0x7e3: V765 = M[0x40]
0x7e6: V766 = SUB V763 V765
0x7e8: LOG V765 V766 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x7e9: V767 = 0xaeb3ebd09ef847781ae7d846d2c9afbbb08cfbcad76e92d3206303aa30d24226
0x80a: V768 = CALLER
0x80c: V769 = 0x40
0x80e: V770 = M[0x40]
0x80f: V771 = 0x1
0x811: V772 = 0xa0
0x813: V773 = 0x2
0x815: V774 = EXP 0x2 0xa0
0x816: V775 = SUB 0x10000000000000000000000000000000000000000 0x1
0x819: V776 = AND V768 0xffffffffffffffffffffffffffffffffffffffff
0x81b: M[V770] = V776
0x81c: V777 = 0x20
0x81f: V778 = ADD V770 0x20
0x820: M[V778] = S3
0x821: V779 = 0x40
0x825: V780 = ADD 0x40 V770
0x827: V781 = M[0x40]
0x82a: V782 = SUB V780 V781
0x82c: LOG V781 V782 0xaeb3ebd09ef847781ae7d846d2c9afbbb08cfbcad76e92d3206303aa30d24226
0x82d: V783 = 0x834
0x830: V784 = 0x905
0x833: JUMP 0x905
---
Entry stack: [V13, S5, S4, S3, V690, 0xa9059cbb, V717]
Stack pops: 4
Stack additions: [S3, 0x834]
Exit stack: [V13, S5, S4, S3, 0x834]

================================

Block 0x834
[0x834:0x836]
---
Predecessors: [0x97b]
Successors: [0xb3]
---
0x834 JUMPDEST
0x835 POP
0x836 JUMP
---
0x834: JUMPDEST 
0x836: JUMP S1
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S2]

================================

Block 0x837
[0x837:0x845]
---
Predecessors: [0xc0]
Successors: [0xc8]
---
0x837 JUMPDEST
0x838 PUSH1 0x8
0x83a SLOAD
0x83b PUSH1 0x1
0x83d PUSH1 0xa0
0x83f PUSH1 0x2
0x841 EXP
0x842 SUB
0x843 AND
0x844 DUP2
0x845 JUMP
---
0x837: JUMPDEST 
0x838: V785 = 0x8
0x83a: V786 = S[0x8]
0x83b: V787 = 0x1
0x83d: V788 = 0xa0
0x83f: V789 = 0x2
0x841: V790 = EXP 0x2 0xa0
0x842: V791 = SUB 0x10000000000000000000000000000000000000000 0x1
0x843: V792 = AND 0xffffffffffffffffffffffffffffffffffffffff V786
0x845: JUMP 0xc8
---
Entry stack: [V13, 0xc8]
Stack pops: 1
Stack additions: [S0, V792]
Exit stack: [V13, 0xc8, V792]

================================

Block 0x846
[0x846:0x84b]
---
Predecessors: [0xef]
Successors: [0xf7]
---
0x846 JUMPDEST
0x847 PUSH1 0x2
0x849 SLOAD
0x84a DUP2
0x84b JUMP
---
0x846: JUMPDEST 
0x847: V793 = 0x2
0x849: V794 = S[0x2]
0x84b: JUMP 0xf7
---
Entry stack: [V13, 0xf7]
Stack pops: 1
Stack additions: [S0, V794]
Exit stack: [V13, 0xf7, V794]

================================

Block 0x84c
[0x84c:0x851]
---
Predecessors: [0x114]
Successors: [0xf7]
---
0x84c JUMPDEST
0x84d PUSH1 0x6
0x84f SLOAD
0x850 DUP2
0x851 JUMP
---
0x84c: JUMPDEST 
0x84d: V795 = 0x6
0x84f: V796 = S[0x6]
0x851: JUMP 0xf7
---
Entry stack: [V13, 0xf7]
Stack pops: 1
Stack additions: [S0, V796]
Exit stack: [V13, 0xf7, V796]

================================

Block 0x852
[0x852:0x8a1]
---
Predecessors: [0x127]
Successors: [0x8a2, 0x8e8]
---
0x852 JUMPDEST
0x853 PUSH1 0x9
0x855 DUP1
0x856 SLOAD
0x857 PUSH1 0x1
0x859 DUP2
0x85a PUSH1 0x1
0x85c AND
0x85d ISZERO
0x85e PUSH2 0x100
0x861 MUL
0x862 SUB
0x863 AND
0x864 PUSH1 0x2
0x866 SWAP1
0x867 DIV
0x868 DUP1
0x869 PUSH1 0x1f
0x86b ADD
0x86c PUSH1 0x20
0x86e DUP1
0x86f SWAP2
0x870 DIV
0x871 MUL
0x872 PUSH1 0x20
0x874 ADD
0x875 PUSH1 0x40
0x877 MLOAD
0x878 SWAP1
0x879 DUP2
0x87a ADD
0x87b PUSH1 0x40
0x87d MSTORE
0x87e DUP1
0x87f SWAP3
0x880 SWAP2
0x881 SWAP1
0x882 DUP2
0x883 DUP2
0x884 MSTORE
0x885 PUSH1 0x20
0x887 ADD
0x888 DUP3
0x889 DUP1
0x88a SLOAD
0x88b PUSH1 0x1
0x88d DUP2
0x88e PUSH1 0x1
0x890 AND
0x891 ISZERO
0x892 PUSH2 0x100
0x895 MUL
0x896 SUB
0x897 AND
0x898 PUSH1 0x2
0x89a SWAP1
0x89b DIV
0x89c DUP1
0x89d ISZERO
0x89e PUSH2 0x8e8
0x8a1 JUMPI
---
0x852: JUMPDEST 
0x853: V797 = 0x9
0x856: V798 = S[0x9]
0x857: V799 = 0x1
0x85a: V800 = 0x1
0x85c: V801 = AND 0x1 V798
0x85d: V802 = ISZERO V801
0x85e: V803 = 0x100
0x861: V804 = MUL 0x100 V802
0x862: V805 = SUB V804 0x1
0x863: V806 = AND V805 V798
0x864: V807 = 0x2
0x867: V808 = DIV V806 0x2
0x869: V809 = 0x1f
0x86b: V810 = ADD 0x1f V808
0x86c: V811 = 0x20
0x870: V812 = DIV V810 0x20
0x871: V813 = MUL V812 0x20
0x872: V814 = 0x20
0x874: V815 = ADD 0x20 V813
0x875: V816 = 0x40
0x877: V817 = M[0x40]
0x87a: V818 = ADD V817 V815
0x87b: V819 = 0x40
0x87d: M[0x40] = V818
0x884: M[V817] = V808
0x885: V820 = 0x20
0x887: V821 = ADD 0x20 V817
0x88a: V822 = S[0x9]
0x88b: V823 = 0x1
0x88e: V824 = 0x1
0x890: V825 = AND 0x1 V822
0x891: V826 = ISZERO V825
0x892: V827 = 0x100
0x895: V828 = MUL 0x100 V826
0x896: V829 = SUB V828 0x1
0x897: V830 = AND V829 V822
0x898: V831 = 0x2
0x89b: V832 = DIV V830 0x2
0x89d: V833 = ISZERO V832
0x89e: V834 = 0x8e8
0x8a1: JUMPI 0x8e8 V833
---
Entry stack: [V13, 0x12f]
Stack pops: 0
Stack additions: [V817, 0x9, V808, V821, 0x9, V832]
Exit stack: [V13, 0x12f, V817, 0x9, V808, V821, 0x9, V832]

================================

Block 0x8a2
[0x8a2:0x8a9]
---
Predecessors: [0x852]
Successors: [0x8aa, 0x8bd]
---
0x8a2 DUP1
0x8a3 PUSH1 0x1f
0x8a5 LT
0x8a6 PUSH2 0x8bd
0x8a9 JUMPI
---
0x8a3: V835 = 0x1f
0x8a5: V836 = LT 0x1f V832
0x8a6: V837 = 0x8bd
0x8a9: JUMPI 0x8bd V836
---
Entry stack: [V13, 0x12f, V817, 0x9, V808, V821, 0x9, V832]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x12f, V817, 0x9, V808, V821, 0x9, V832]

================================

Block 0x8aa
[0x8aa:0x8bc]
---
Predecessors: [0x8a2]
Successors: [0x8e8]
---
0x8aa PUSH2 0x100
0x8ad DUP1
0x8ae DUP4
0x8af SLOAD
0x8b0 DIV
0x8b1 MUL
0x8b2 DUP4
0x8b3 MSTORE
0x8b4 SWAP2
0x8b5 PUSH1 0x20
0x8b7 ADD
0x8b8 SWAP2
0x8b9 PUSH2 0x8e8
0x8bc JUMP
---
0x8aa: V838 = 0x100
0x8af: V839 = S[0x9]
0x8b0: V840 = DIV V839 0x100
0x8b1: V841 = MUL V840 0x100
0x8b3: M[V821] = V841
0x8b5: V842 = 0x20
0x8b7: V843 = ADD 0x20 V821
0x8b9: V844 = 0x8e8
0x8bc: JUMP 0x8e8
---
Entry stack: [V13, 0x12f, V817, 0x9, V808, V821, 0x9, V832]
Stack pops: 3
Stack additions: [V843, S1, S0]
Exit stack: [V13, 0x12f, V817, 0x9, V808, V843, 0x9, V832]

================================

Block 0x8bd
[0x8bd:0x8ca]
---
Predecessors: [0x8a2]
Successors: [0x8cb]
---
0x8bd JUMPDEST
0x8be DUP3
0x8bf ADD
0x8c0 SWAP2
0x8c1 SWAP1
0x8c2 PUSH1 0x0
0x8c4 MSTORE
0x8c5 PUSH1 0x20
0x8c7 PUSH1 0x0
0x8c9 SHA3
0x8ca SWAP1
---
0x8bd: JUMPDEST 
0x8bf: V845 = ADD V821 V832
0x8c2: V846 = 0x0
0x8c4: M[0x0] = 0x9
0x8c5: V847 = 0x20
0x8c7: V848 = 0x0
0x8c9: V849 = SHA3 0x0 0x20
---
Entry stack: [V13, 0x12f, V817, 0x9, V808, V821, 0x9, V832]
Stack pops: 3
Stack additions: [V845, V849, S2]
Exit stack: [V13, 0x12f, V817, 0x9, V808, V845, V849, V821]

================================

Block 0x8cb
[0x8cb:0x8de]
---
Predecessors: [0x8bd, 0x8cb]
Successors: [0x8cb, 0x8df]
---
0x8cb JUMPDEST
0x8cc DUP2
0x8cd SLOAD
0x8ce DUP2
0x8cf MSTORE
0x8d0 SWAP1
0x8d1 PUSH1 0x1
0x8d3 ADD
0x8d4 SWAP1
0x8d5 PUSH1 0x20
0x8d7 ADD
0x8d8 DUP1
0x8d9 DUP4
0x8da GT
0x8db PUSH2 0x8cb
0x8de JUMPI
---
0x8cb: JUMPDEST 
0x8cd: V850 = S[S1]
0x8cf: M[S0] = V850
0x8d1: V851 = 0x1
0x8d3: V852 = ADD 0x1 S1
0x8d5: V853 = 0x20
0x8d7: V854 = ADD 0x20 S0
0x8da: V855 = GT V845 V854
0x8db: V856 = 0x8cb
0x8de: JUMPI 0x8cb V855
---
Entry stack: [V13, 0x12f, V817, 0x9, V808, V845, S1, S0]
Stack pops: 3
Stack additions: [S2, V852, V854]
Exit stack: [V13, 0x12f, V817, 0x9, V808, V845, V852, V854]

================================

Block 0x8df
[0x8df:0x8e7]
---
Predecessors: [0x8cb]
Successors: [0x8e8]
---
0x8df DUP3
0x8e0 SWAP1
0x8e1 SUB
0x8e2 PUSH1 0x1f
0x8e4 AND
0x8e5 DUP3
0x8e6 ADD
0x8e7 SWAP2
---
0x8e1: V857 = SUB V854 V845
0x8e2: V858 = 0x1f
0x8e4: V859 = AND 0x1f V857
0x8e6: V860 = ADD V845 V859
---
Entry stack: [V13, 0x12f, V817, 0x9, V808, V845, V852, V854]
Stack pops: 3
Stack additions: [V860, S1, S2]
Exit stack: [V13, 0x12f, V817, 0x9, V808, V860, V852, V845]

================================

Block 0x8e8
[0x8e8:0x8ef]
---
Predecessors: [0x852, 0x8aa, 0x8df]
Successors: [0x12f]
---
0x8e8 JUMPDEST
0x8e9 POP
0x8ea POP
0x8eb POP
0x8ec POP
0x8ed POP
0x8ee DUP2
0x8ef JUMP
---
0x8e8: JUMPDEST 
0x8ef: JUMP 0x12f
---
Entry stack: [V13, 0x12f, V817, 0x9, V808, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V13, 0x12f, V817]

================================

Block 0x8f0
[0x8f0:0x8fe]
---
Predecessors: [0x1b1]
Successors: [0xc8]
---
0x8f0 JUMPDEST
0x8f1 PUSH1 0x7
0x8f3 SLOAD
0x8f4 PUSH1 0x1
0x8f6 PUSH1 0xa0
0x8f8 PUSH1 0x2
0x8fa EXP
0x8fb SUB
0x8fc AND
0x8fd DUP2
0x8fe JUMP
---
0x8f0: JUMPDEST 
0x8f1: V861 = 0x7
0x8f3: V862 = S[0x7]
0x8f4: V863 = 0x1
0x8f6: V864 = 0xa0
0x8f8: V865 = 0x2
0x8fa: V866 = EXP 0x2 0xa0
0x8fb: V867 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8fc: V868 = AND 0xffffffffffffffffffffffffffffffffffffffff V862
0x8fe: JUMP 0xc8
---
Entry stack: [V13, 0xc8]
Stack pops: 1
Stack additions: [S0, V868]
Exit stack: [V13, 0xc8, V868]

================================

Block 0x8ff
[0x8ff:0x904]
---
Predecessors: [0x1c4]
Successors: [0xf7]
---
0x8ff JUMPDEST
0x900 PUSH1 0x1
0x902 SLOAD
0x903 DUP2
0x904 JUMP
---
0x8ff: JUMPDEST 
0x900: V869 = 0x1
0x902: V870 = S[0x1]
0x904: JUMP 0xf7
---
Entry stack: [V13, 0xf7]
Stack pops: 1
Stack additions: [S0, V870]
Exit stack: [V13, 0xf7, V870]

================================

Block 0x905
[0x905:0x910]
---
Predecessors: [0x1d7, 0x782]
Successors: [0x911, 0x927]
---
0x905 JUMPDEST
0x906 PUSH1 0x5
0x908 SLOAD
0x909 TIMESTAMP
0x90a GT
0x90b DUP1
0x90c ISZERO
0x90d PUSH2 0x927
0x910 JUMPI
---
0x905: JUMPDEST 
0x906: V871 = 0x5
0x908: V872 = S[0x5]
0x909: V873 = TIMESTAMP
0x90a: V874 = GT V873 V872
0x90c: V875 = ISZERO V874
0x90d: V876 = 0x927
0x910: JUMPI 0x927 V875
---
Entry stack: [V13, S3, S2, S1, {0xb3, 0x834}]
Stack pops: 0
Stack additions: [V874]
Exit stack: [V13, S3, S2, S1, {0xb3, 0x834}, V874]

================================

Block 0x911
[0x911:0x922]
---
Predecessors: [0x905]
Successors: [0x923, 0x924]
---
0x911 POP
0x912 PUSH1 0x1
0x914 PUSH1 0x0
0x916 SLOAD
0x917 PUSH1 0xff
0x919 AND
0x91a PUSH1 0x1
0x91c DUP2
0x91d GT
0x91e ISZERO
0x91f PUSH2 0x924
0x922 JUMPI
---
0x912: V877 = 0x1
0x914: V878 = 0x0
0x916: V879 = S[0x0]
0x917: V880 = 0xff
0x919: V881 = AND 0xff V879
0x91a: V882 = 0x1
0x91d: V883 = GT V881 0x1
0x91e: V884 = ISZERO V883
0x91f: V885 = 0x924
0x922: JUMPI 0x924 V884
---
Entry stack: [V13, S4, S3, S2, {0xb3, 0x834}, V874]
Stack pops: 1
Stack additions: [0x1, V881]
Exit stack: [V13, S4, S3, S2, {0xb3, 0x834}, 0x1, V881]

================================

Block 0x923
[0x923:0x923]
---
Predecessors: [0x911]
Successors: []
---
0x923 INVALID
---
0x923: INVALID 
---
Entry stack: [V13, S5, S4, S3, {0xb3, 0x834}, 0x1, V881]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, {0xb3, 0x834}, 0x1, V881]

================================

Block 0x924
[0x924:0x926]
---
Predecessors: [0x911]
Successors: [0x927]
---
0x924 JUMPDEST
0x925 EQ
0x926 ISZERO
---
0x924: JUMPDEST 
0x925: V886 = EQ V881 0x1
0x926: V887 = ISZERO V886
---
Entry stack: [V13, S5, S4, S3, {0xb3, 0x834}, 0x1, V881]
Stack pops: 2
Stack additions: [V887]
Exit stack: [V13, S5, S4, S3, {0xb3, 0x834}, V887]

================================

Block 0x927
[0x927:0x92c]
---
Predecessors: [0x905, 0x924]
Successors: [0x92d, 0x97b]
---
0x927 JUMPDEST
0x928 ISZERO
0x929 PUSH2 0x97b
0x92c JUMPI
---
0x927: JUMPDEST 
0x928: V888 = ISZERO S0
0x929: V889 = 0x97b
0x92c: JUMPI 0x97b V888
---
Entry stack: [V13, S4, S3, S2, {0xb3, 0x834}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S4, S3, S2, {0xb3, 0x834}]

================================

Block 0x92d
[0x92d:0x97a]
---
Predecessors: [0x927]
Successors: [0x983]
---
0x92d PUSH1 0x0
0x92f DUP1
0x930 SLOAD
0x931 PUSH1 0xff
0x933 NOT
0x934 AND
0x935 PUSH1 0x1
0x937 OR
0x938 SWAP1
0x939 SSTORE
0x93a TIMESTAMP
0x93b PUSH1 0x6
0x93d SSTORE
0x93e PUSH1 0x3
0x940 SLOAD
0x941 PUSH32 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x962 SWAP1
0x963 PUSH1 0x40
0x965 MLOAD
0x966 SWAP1
0x967 DUP2
0x968 MSTORE
0x969 PUSH1 0x20
0x96b ADD
0x96c PUSH1 0x40
0x96e MLOAD
0x96f DUP1
0x970 SWAP2
0x971 SUB
0x972 SWAP1
0x973 LOG1
0x974 PUSH2 0x97b
0x977 PUSH2 0x983
0x97a JUMP
---
0x92d: V890 = 0x0
0x930: V891 = S[0x0]
0x931: V892 = 0xff
0x933: V893 = NOT 0xff
0x934: V894 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V891
0x935: V895 = 0x1
0x937: V896 = OR 0x1 V894
0x939: S[0x0] = V896
0x93a: V897 = TIMESTAMP
0x93b: V898 = 0x6
0x93d: S[0x6] = V897
0x93e: V899 = 0x3
0x940: V900 = S[0x3]
0x941: V901 = 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x963: V902 = 0x40
0x965: V903 = M[0x40]
0x968: M[V903] = V900
0x969: V904 = 0x20
0x96b: V905 = ADD 0x20 V903
0x96c: V906 = 0x40
0x96e: V907 = M[0x40]
0x971: V908 = SUB V905 V907
0x973: LOG V907 V908 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x974: V909 = 0x97b
0x977: V910 = 0x983
0x97a: JUMP 0x983
---
Entry stack: [V13, S3, S2, S1, {0xb3, 0x834}]
Stack pops: 0
Stack additions: [0x97b]
Exit stack: [V13, S3, S2, S1, {0xb3, 0x834}, 0x97b]

================================

Block 0x97b
[0x97b:0x97c]
---
Predecessors: [0x927, 0xac8]
Successors: [0xb3, 0x834]
---
0x97b JUMPDEST
0x97c JUMP
---
0x97b: JUMPDEST 
0x97c: JUMP S0
---
Entry stack: [V13, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S3, S2, S1]

================================

Block 0x97d
[0x97d:0x982]
---
Predecessors: [0x1ea]
Successors: [0xf7]
---
0x97d JUMPDEST
0x97e PUSH1 0x5
0x980 SLOAD
0x981 DUP2
0x982 JUMP
---
0x97d: JUMPDEST 
0x97e: V911 = 0x5
0x980: V912 = S[0x5]
0x982: JUMP 0xf7
---
Entry stack: [V13, 0xf7]
Stack pops: 1
Stack additions: [S0, V912]
Exit stack: [V13, 0xf7, V912]

================================

Block 0x983
[0x983:0x996]
---
Predecessors: [0x1fd, 0x92d]
Successors: [0x997, 0x998]
---
0x983 JUMPDEST
0x984 PUSH1 0x0
0x986 PUSH1 0x1
0x988 PUSH1 0x0
0x98a SLOAD
0x98b PUSH1 0xff
0x98d AND
0x98e PUSH1 0x1
0x990 DUP2
0x991 GT
0x992 ISZERO
0x993 PUSH2 0x998
0x996 JUMPI
---
0x983: JUMPDEST 
0x984: V913 = 0x0
0x986: V914 = 0x1
0x988: V915 = 0x0
0x98a: V916 = S[0x0]
0x98b: V917 = 0xff
0x98d: V918 = AND 0xff V916
0x98e: V919 = 0x1
0x991: V920 = GT V918 0x1
0x992: V921 = ISZERO V920
0x993: V922 = 0x998
0x996: JUMPI 0x998 V921
---
Entry stack: [V13, 0xb3, S2, S1, {0xb3, 0x97b}]
Stack pops: 0
Stack additions: [0x0, 0x1, V918]
Exit stack: [V13, 0xb3, S2, S1, {0xb3, 0x97b}, 0x0, 0x1, V918]

================================

Block 0x997
[0x997:0x997]
---
Predecessors: [0x983]
Successors: []
---
0x997 INVALID
---
0x997: INVALID 
---
Entry stack: [V13, 0xb3, S5, S4, {0xb3, 0x97b}, 0x0, 0x1, V918]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb3, S5, S4, {0xb3, 0x97b}, 0x0, 0x1, V918]

================================

Block 0x998
[0x998:0x99d]
---
Predecessors: [0x983]
Successors: [0x99e, 0x9a2]
---
0x998 JUMPDEST
0x999 EQ
0x99a PUSH2 0x9a2
0x99d JUMPI
---
0x998: JUMPDEST 
0x999: V923 = EQ V918 0x1
0x99a: V924 = 0x9a2
0x99d: JUMPI 0x9a2 V923
---
Entry stack: [V13, 0xb3, S5, S4, {0xb3, 0x97b}, 0x0, 0x1, V918]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xb3, S5, S4, {0xb3, 0x97b}, 0x0]

================================

Block 0x99e
[0x99e:0x9a1]
---
Predecessors: [0x998]
Successors: []
---
0x99e PUSH1 0x0
0x9a0 DUP1
0x9a1 REVERT
---
0x99e: V925 = 0x0
0x9a1: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb3, S3, S2, {0xb3, 0x97b}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb3, S3, S2, {0xb3, 0x97b}, 0x0]

================================

Block 0x9a2
[0x9a2:0x9f6]
---
Predecessors: [0x998]
Successors: [0x9f7, 0x9fb]
---
0x9a2 JUMPDEST
0x9a3 PUSH1 0x7
0x9a5 SLOAD
0x9a6 PUSH1 0x1
0x9a8 PUSH1 0xa0
0x9aa PUSH1 0x2
0x9ac EXP
0x9ad SUB
0x9ae AND
0x9af PUSH4 0x70a08231
0x9b4 ADDRESS
0x9b5 PUSH1 0x0
0x9b7 PUSH1 0x40
0x9b9 MLOAD
0x9ba PUSH1 0x20
0x9bc ADD
0x9bd MSTORE
0x9be PUSH1 0x40
0x9c0 MLOAD
0x9c1 PUSH1 0xe0
0x9c3 PUSH1 0x2
0x9c5 EXP
0x9c6 PUSH4 0xffffffff
0x9cb DUP5
0x9cc AND
0x9cd MUL
0x9ce DUP2
0x9cf MSTORE
0x9d0 PUSH1 0x1
0x9d2 PUSH1 0xa0
0x9d4 PUSH1 0x2
0x9d6 EXP
0x9d7 SUB
0x9d8 SWAP1
0x9d9 SWAP2
0x9da AND
0x9db PUSH1 0x4
0x9dd DUP3
0x9de ADD
0x9df MSTORE
0x9e0 PUSH1 0x24
0x9e2 ADD
0x9e3 PUSH1 0x20
0x9e5 PUSH1 0x40
0x9e7 MLOAD
0x9e8 DUP1
0x9e9 DUP4
0x9ea SUB
0x9eb DUP2
0x9ec PUSH1 0x0
0x9ee DUP8
0x9ef DUP1
0x9f0 EXTCODESIZE
0x9f1 ISZERO
0x9f2 ISZERO
0x9f3 PUSH2 0x9fb
0x9f6 JUMPI
---
0x9a2: JUMPDEST 
0x9a3: V926 = 0x7
0x9a5: V927 = S[0x7]
0x9a6: V928 = 0x1
0x9a8: V929 = 0xa0
0x9aa: V930 = 0x2
0x9ac: V931 = EXP 0x2 0xa0
0x9ad: V932 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ae: V933 = AND 0xffffffffffffffffffffffffffffffffffffffff V927
0x9af: V934 = 0x70a08231
0x9b4: V935 = ADDRESS
0x9b5: V936 = 0x0
0x9b7: V937 = 0x40
0x9b9: V938 = M[0x40]
0x9ba: V939 = 0x20
0x9bc: V940 = ADD 0x20 V938
0x9bd: M[V940] = 0x0
0x9be: V941 = 0x40
0x9c0: V942 = M[0x40]
0x9c1: V943 = 0xe0
0x9c3: V944 = 0x2
0x9c5: V945 = EXP 0x2 0xe0
0x9c6: V946 = 0xffffffff
0x9cc: V947 = AND 0x70a08231 0xffffffff
0x9cd: V948 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x9cf: M[V942] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x9d0: V949 = 0x1
0x9d2: V950 = 0xa0
0x9d4: V951 = 0x2
0x9d6: V952 = EXP 0x2 0xa0
0x9d7: V953 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9da: V954 = AND V935 0xffffffffffffffffffffffffffffffffffffffff
0x9db: V955 = 0x4
0x9de: V956 = ADD V942 0x4
0x9df: M[V956] = V954
0x9e0: V957 = 0x24
0x9e2: V958 = ADD 0x24 V942
0x9e3: V959 = 0x20
0x9e5: V960 = 0x40
0x9e7: V961 = M[0x40]
0x9ea: V962 = SUB V958 V961
0x9ec: V963 = 0x0
0x9f0: V964 = EXTCODESIZE V933
0x9f1: V965 = ISZERO V964
0x9f2: V966 = ISZERO V965
0x9f3: V967 = 0x9fb
0x9f6: JUMPI 0x9fb V966
---
Entry stack: [V13, 0xb3, S3, S2, {0xb3, 0x97b}, 0x0]
Stack pops: 0
Stack additions: [V933, 0x70a08231, V958, 0x20, V961, V962, V961, 0x0, V933]
Exit stack: [V13, 0xb3, S3, S2, {0xb3, 0x97b}, 0x0, V933, 0x70a08231, V958, 0x20, V961, V962, V961, 0x0, V933]

================================

Block 0x9f7
[0x9f7:0x9fa]
---
Predecessors: [0x9a2]
Successors: []
---
0x9f7 PUSH1 0x0
0x9f9 DUP1
0x9fa REVERT
---
0x9f7: V968 = 0x0
0x9fa: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb3, S12, S11, {0xb3, 0x97b}, 0x0, V933, 0x70a08231, V958, 0x20, V961, V962, V961, 0x0, V933]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb3, S12, S11, {0xb3, 0x97b}, 0x0, V933, 0x70a08231, V958, 0x20, V961, V962, V961, 0x0, V933]

================================

Block 0x9fb
[0x9fb:0xa07]
---
Predecessors: [0x9a2]
Successors: [0xa08, 0xa0c]
---
0x9fb JUMPDEST
0x9fc PUSH2 0x2c6
0x9ff GAS
0xa00 SUB
0xa01 CALL
0xa02 ISZERO
0xa03 ISZERO
0xa04 PUSH2 0xa0c
0xa07 JUMPI
---
0x9fb: JUMPDEST 
0x9fc: V969 = 0x2c6
0x9ff: V970 = GAS
0xa00: V971 = SUB V970 0x2c6
0xa01: V972 = CALL V971 V933 0x0 V961 V962 V961 0x20
0xa02: V973 = ISZERO V972
0xa03: V974 = ISZERO V973
0xa04: V975 = 0xa0c
0xa07: JUMPI 0xa0c V974
---
Entry stack: [V13, 0xb3, S12, S11, {0xb3, 0x97b}, 0x0, V933, 0x70a08231, V958, 0x20, V961, V962, V961, 0x0, V933]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xb3, S12, S11, {0xb3, 0x97b}, 0x0, V933, 0x70a08231, V958]

================================

Block 0xa08
[0xa08:0xa0b]
---
Predecessors: [0x9fb]
Successors: []
---
0xa08 PUSH1 0x0
0xa0a DUP1
0xa0b REVERT
---
0xa08: V976 = 0x0
0xa0b: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb3, S6, S5, {0xb3, 0x97b}, 0x0, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb3, S6, S5, {0xb3, 0x97b}, 0x0, S2, 0x70a08231, S0]

================================

Block 0xa0c
[0xa0c:0xa4c]
---
Predecessors: [0x9fb]
Successors: [0xa4d, 0xa51]
---
0xa0c JUMPDEST
0xa0d POP
0xa0e POP
0xa0f POP
0xa10 PUSH1 0x40
0xa12 MLOAD
0xa13 DUP1
0xa14 MLOAD
0xa15 PUSH1 0x8
0xa17 SLOAD
0xa18 SWAP1
0xa19 SWAP3
0xa1a POP
0xa1b PUSH1 0x1
0xa1d PUSH1 0xa0
0xa1f PUSH1 0x2
0xa21 EXP
0xa22 SUB
0xa23 SWAP1
0xa24 DUP2
0xa25 AND
0xa26 SWAP2
0xa27 POP
0xa28 ADDRESS
0xa29 AND
0xa2a BALANCE
0xa2b DUP1
0xa2c ISZERO
0xa2d PUSH2 0x8fc
0xa30 MUL
0xa31 SWAP1
0xa32 PUSH1 0x40
0xa34 MLOAD
0xa35 PUSH1 0x0
0xa37 PUSH1 0x40
0xa39 MLOAD
0xa3a DUP1
0xa3b DUP4
0xa3c SUB
0xa3d DUP2
0xa3e DUP6
0xa3f DUP9
0xa40 DUP9
0xa41 CALL
0xa42 SWAP4
0xa43 POP
0xa44 POP
0xa45 POP
0xa46 POP
0xa47 ISZERO
0xa48 ISZERO
0xa49 PUSH2 0xa51
0xa4c JUMPI
---
0xa0c: JUMPDEST 
0xa10: V977 = 0x40
0xa12: V978 = M[0x40]
0xa14: V979 = M[V978]
0xa15: V980 = 0x8
0xa17: V981 = S[0x8]
0xa1b: V982 = 0x1
0xa1d: V983 = 0xa0
0xa1f: V984 = 0x2
0xa21: V985 = EXP 0x2 0xa0
0xa22: V986 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa25: V987 = AND 0xffffffffffffffffffffffffffffffffffffffff V981
0xa28: V988 = ADDRESS
0xa29: V989 = AND V988 0xffffffffffffffffffffffffffffffffffffffff
0xa2a: V990 = BALANCE V989
0xa2c: V991 = ISZERO V990
0xa2d: V992 = 0x8fc
0xa30: V993 = MUL 0x8fc V991
0xa32: V994 = 0x40
0xa34: V995 = M[0x40]
0xa35: V996 = 0x0
0xa37: V997 = 0x40
0xa39: V998 = M[0x40]
0xa3c: V999 = SUB V995 V998
0xa41: V1000 = CALL V993 V987 V990 V998 V999 V998 0x0
0xa47: V1001 = ISZERO V1000
0xa48: V1002 = ISZERO V1001
0xa49: V1003 = 0xa51
0xa4c: JUMPI 0xa51 V1002
---
Entry stack: [V13, 0xb3, S6, S5, {0xb3, 0x97b}, 0x0, S2, 0x70a08231, S0]
Stack pops: 4
Stack additions: [V979]
Exit stack: [V13, 0xb3, S6, S5, {0xb3, 0x97b}, V979]

================================

Block 0xa4d
[0xa4d:0xa50]
---
Predecessors: [0xa0c]
Successors: []
---
0xa4d PUSH1 0x0
0xa4f DUP1
0xa50 REVERT
---
0xa4d: V1004 = 0x0
0xa50: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb3, S3, S2, {0xb3, 0x97b}, V979]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb3, S3, S2, {0xb3, 0x97b}, V979]

================================

Block 0xa51
[0xa51:0xab2]
---
Predecessors: [0xa0c]
Successors: [0xab3, 0xab7]
---
0xa51 JUMPDEST
0xa52 PUSH1 0x7
0xa54 SLOAD
0xa55 PUSH1 0x8
0xa57 SLOAD
0xa58 PUSH1 0x1
0xa5a PUSH1 0xa0
0xa5c PUSH1 0x2
0xa5e EXP
0xa5f SUB
0xa60 SWAP2
0xa61 DUP3
0xa62 AND
0xa63 SWAP2
0xa64 PUSH4 0xa9059cbb
0xa69 SWAP2
0xa6a AND
0xa6b DUP4
0xa6c PUSH1 0x0
0xa6e PUSH1 0x40
0xa70 MLOAD
0xa71 PUSH1 0x20
0xa73 ADD
0xa74 MSTORE
0xa75 PUSH1 0x40
0xa77 MLOAD
0xa78 PUSH1 0xe0
0xa7a PUSH1 0x2
0xa7c EXP
0xa7d PUSH4 0xffffffff
0xa82 DUP6
0xa83 AND
0xa84 MUL
0xa85 DUP2
0xa86 MSTORE
0xa87 PUSH1 0x1
0xa89 PUSH1 0xa0
0xa8b PUSH1 0x2
0xa8d EXP
0xa8e SUB
0xa8f SWAP1
0xa90 SWAP3
0xa91 AND
0xa92 PUSH1 0x4
0xa94 DUP4
0xa95 ADD
0xa96 MSTORE
0xa97 PUSH1 0x24
0xa99 DUP3
0xa9a ADD
0xa9b MSTORE
0xa9c PUSH1 0x44
0xa9e ADD
0xa9f PUSH1 0x20
0xaa1 PUSH1 0x40
0xaa3 MLOAD
0xaa4 DUP1
0xaa5 DUP4
0xaa6 SUB
0xaa7 DUP2
0xaa8 PUSH1 0x0
0xaaa DUP8
0xaab DUP1
0xaac EXTCODESIZE
0xaad ISZERO
0xaae ISZERO
0xaaf PUSH2 0xab7
0xab2 JUMPI
---
0xa51: JUMPDEST 
0xa52: V1005 = 0x7
0xa54: V1006 = S[0x7]
0xa55: V1007 = 0x8
0xa57: V1008 = S[0x8]
0xa58: V1009 = 0x1
0xa5a: V1010 = 0xa0
0xa5c: V1011 = 0x2
0xa5e: V1012 = EXP 0x2 0xa0
0xa5f: V1013 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa62: V1014 = AND 0xffffffffffffffffffffffffffffffffffffffff V1006
0xa64: V1015 = 0xa9059cbb
0xa6a: V1016 = AND V1008 0xffffffffffffffffffffffffffffffffffffffff
0xa6c: V1017 = 0x0
0xa6e: V1018 = 0x40
0xa70: V1019 = M[0x40]
0xa71: V1020 = 0x20
0xa73: V1021 = ADD 0x20 V1019
0xa74: M[V1021] = 0x0
0xa75: V1022 = 0x40
0xa77: V1023 = M[0x40]
0xa78: V1024 = 0xe0
0xa7a: V1025 = 0x2
0xa7c: V1026 = EXP 0x2 0xe0
0xa7d: V1027 = 0xffffffff
0xa83: V1028 = AND 0xa9059cbb 0xffffffff
0xa84: V1029 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xa86: M[V1023] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa87: V1030 = 0x1
0xa89: V1031 = 0xa0
0xa8b: V1032 = 0x2
0xa8d: V1033 = EXP 0x2 0xa0
0xa8e: V1034 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa91: V1035 = AND V1016 0xffffffffffffffffffffffffffffffffffffffff
0xa92: V1036 = 0x4
0xa95: V1037 = ADD V1023 0x4
0xa96: M[V1037] = V1035
0xa97: V1038 = 0x24
0xa9a: V1039 = ADD V1023 0x24
0xa9b: M[V1039] = V979
0xa9c: V1040 = 0x44
0xa9e: V1041 = ADD 0x44 V1023
0xa9f: V1042 = 0x20
0xaa1: V1043 = 0x40
0xaa3: V1044 = M[0x40]
0xaa6: V1045 = SUB V1041 V1044
0xaa8: V1046 = 0x0
0xaac: V1047 = EXTCODESIZE V1014
0xaad: V1048 = ISZERO V1047
0xaae: V1049 = ISZERO V1048
0xaaf: V1050 = 0xab7
0xab2: JUMPI 0xab7 V1049
---
Entry stack: [V13, 0xb3, S3, S2, {0xb3, 0x97b}, V979]
Stack pops: 1
Stack additions: [S0, V1014, 0xa9059cbb, V1041, 0x20, V1044, V1045, V1044, 0x0, V1014]
Exit stack: [V13, 0xb3, S3, S2, {0xb3, 0x97b}, V979, V1014, 0xa9059cbb, V1041, 0x20, V1044, V1045, V1044, 0x0, V1014]

================================

Block 0xab3
[0xab3:0xab6]
---
Predecessors: [0xa51]
Successors: []
---
0xab3 PUSH1 0x0
0xab5 DUP1
0xab6 REVERT
---
0xab3: V1051 = 0x0
0xab6: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb3, S12, S11, {0xb3, 0x97b}, S9, V1014, 0xa9059cbb, V1041, 0x20, V1044, V1045, V1044, 0x0, V1014]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb3, S12, S11, {0xb3, 0x97b}, S9, V1014, 0xa9059cbb, V1041, 0x20, V1044, V1045, V1044, 0x0, V1014]

================================

Block 0xab7
[0xab7:0xac3]
---
Predecessors: [0xa51]
Successors: [0xac4, 0xac8]
---
0xab7 JUMPDEST
0xab8 PUSH2 0x2c6
0xabb GAS
0xabc SUB
0xabd CALL
0xabe ISZERO
0xabf ISZERO
0xac0 PUSH2 0xac8
0xac3 JUMPI
---
0xab7: JUMPDEST 
0xab8: V1052 = 0x2c6
0xabb: V1053 = GAS
0xabc: V1054 = SUB V1053 0x2c6
0xabd: V1055 = CALL V1054 V1014 0x0 V1044 V1045 V1044 0x20
0xabe: V1056 = ISZERO V1055
0xabf: V1057 = ISZERO V1056
0xac0: V1058 = 0xac8
0xac3: JUMPI 0xac8 V1057
---
Entry stack: [V13, 0xb3, S12, S11, {0xb3, 0x97b}, S9, V1014, 0xa9059cbb, V1041, 0x20, V1044, V1045, V1044, 0x0, V1014]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xb3, S12, S11, {0xb3, 0x97b}, S9, V1014, 0xa9059cbb, V1041]

================================

Block 0xac4
[0xac4:0xac7]
---
Predecessors: [0xab7]
Successors: []
---
0xac4 PUSH1 0x0
0xac6 DUP1
0xac7 REVERT
---
0xac4: V1059 = 0x0
0xac7: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb3, S6, S5, {0xb3, 0x97b}, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb3, S6, S5, {0xb3, 0x97b}, S3, S2, 0xa9059cbb, S0]

================================

Block 0xac8
[0xac8:0xb6d]
---
Predecessors: [0xab7]
Successors: [0xb3, 0x97b]
---
0xac8 JUMPDEST
0xac9 POP
0xaca POP
0xacb POP
0xacc PUSH1 0x40
0xace MLOAD
0xacf DUP1
0xad0 MLOAD
0xad1 POP
0xad2 POP
0xad3 PUSH1 0x8
0xad5 SLOAD
0xad6 PUSH32 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb
0xaf7 SWAP1
0xaf8 PUSH1 0x1
0xafa PUSH1 0xa0
0xafc PUSH1 0x2
0xafe EXP
0xaff SUB
0xb00 AND
0xb01 PUSH1 0x40
0xb03 MLOAD
0xb04 PUSH1 0x1
0xb06 PUSH1 0xa0
0xb08 PUSH1 0x2
0xb0a EXP
0xb0b SUB
0xb0c SWAP1
0xb0d SWAP2
0xb0e AND
0xb0f DUP2
0xb10 MSTORE
0xb11 PUSH1 0x20
0xb13 ADD
0xb14 PUSH1 0x40
0xb16 MLOAD
0xb17 DUP1
0xb18 SWAP2
0xb19 SUB
0xb1a SWAP1
0xb1b LOG1
0xb1c PUSH1 0x8
0xb1e SLOAD
0xb1f PUSH32 0xaeb3ebd09ef847781ae7d846d2c9afbbb08cfbcad76e92d3206303aa30d24226
0xb40 SWAP1
0xb41 PUSH1 0x1
0xb43 PUSH1 0xa0
0xb45 PUSH1 0x2
0xb47 EXP
0xb48 SUB
0xb49 AND
0xb4a DUP3
0xb4b PUSH1 0x40
0xb4d MLOAD
0xb4e PUSH1 0x1
0xb50 PUSH1 0xa0
0xb52 PUSH1 0x2
0xb54 EXP
0xb55 SUB
0xb56 SWAP1
0xb57 SWAP3
0xb58 AND
0xb59 DUP3
0xb5a MSTORE
0xb5b PUSH1 0x20
0xb5d DUP3
0xb5e ADD
0xb5f MSTORE
0xb60 PUSH1 0x40
0xb62 SWAP1
0xb63 DUP2
0xb64 ADD
0xb65 SWAP1
0xb66 MLOAD
0xb67 DUP1
0xb68 SWAP2
0xb69 SUB
0xb6a SWAP1
0xb6b LOG1
0xb6c POP
0xb6d JUMP
---
0xac8: JUMPDEST 
0xacc: V1060 = 0x40
0xace: V1061 = M[0x40]
0xad0: V1062 = M[V1061]
0xad3: V1063 = 0x8
0xad5: V1064 = S[0x8]
0xad6: V1065 = 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb
0xaf8: V1066 = 0x1
0xafa: V1067 = 0xa0
0xafc: V1068 = 0x2
0xafe: V1069 = EXP 0x2 0xa0
0xaff: V1070 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb00: V1071 = AND 0xffffffffffffffffffffffffffffffffffffffff V1064
0xb01: V1072 = 0x40
0xb03: V1073 = M[0x40]
0xb04: V1074 = 0x1
0xb06: V1075 = 0xa0
0xb08: V1076 = 0x2
0xb0a: V1077 = EXP 0x2 0xa0
0xb0b: V1078 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0e: V1079 = AND V1071 0xffffffffffffffffffffffffffffffffffffffff
0xb10: M[V1073] = V1079
0xb11: V1080 = 0x20
0xb13: V1081 = ADD 0x20 V1073
0xb14: V1082 = 0x40
0xb16: V1083 = M[0x40]
0xb19: V1084 = SUB V1081 V1083
0xb1b: LOG V1083 V1084 0x101a889b1c7c3bf4e0c37353cfe1554e47e39c747e25a6d330d0553dd93bd1eb
0xb1c: V1085 = 0x8
0xb1e: V1086 = S[0x8]
0xb1f: V1087 = 0xaeb3ebd09ef847781ae7d846d2c9afbbb08cfbcad76e92d3206303aa30d24226
0xb41: V1088 = 0x1
0xb43: V1089 = 0xa0
0xb45: V1090 = 0x2
0xb47: V1091 = EXP 0x2 0xa0
0xb48: V1092 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb49: V1093 = AND 0xffffffffffffffffffffffffffffffffffffffff V1086
0xb4b: V1094 = 0x40
0xb4d: V1095 = M[0x40]
0xb4e: V1096 = 0x1
0xb50: V1097 = 0xa0
0xb52: V1098 = 0x2
0xb54: V1099 = EXP 0x2 0xa0
0xb55: V1100 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb58: V1101 = AND V1093 0xffffffffffffffffffffffffffffffffffffffff
0xb5a: M[V1095] = V1101
0xb5b: V1102 = 0x20
0xb5e: V1103 = ADD V1095 0x20
0xb5f: M[V1103] = S3
0xb60: V1104 = 0x40
0xb64: V1105 = ADD 0x40 V1095
0xb66: V1106 = M[0x40]
0xb69: V1107 = SUB V1105 V1106
0xb6b: LOG V1106 V1107 0xaeb3ebd09ef847781ae7d846d2c9afbbb08cfbcad76e92d3206303aa30d24226
0xb6d: JUMP {0xb3, 0x97b}
---
Entry stack: [V13, 0xb3, S6, S5, {0xb3, 0x97b}, S3, S2, 0xa9059cbb, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0xb3, S6, S5]

================================

Block 0xb6e
[0xb6e:0xb76]
---
Predecessors: [0x210]
Successors: [0x218]
---
0xb6e JUMPDEST
0xb6f PUSH1 0x0
0xb71 SLOAD
0xb72 PUSH1 0xff
0xb74 AND
0xb75 DUP2
0xb76 JUMP
---
0xb6e: JUMPDEST 
0xb6f: V1108 = 0x0
0xb71: V1109 = S[0x0]
0xb72: V1110 = 0xff
0xb74: V1111 = AND 0xff V1109
0xb76: JUMP 0x218
---
Entry stack: [V13, 0x218]
Stack pops: 1
Stack additions: [S0, V1111]
Exit stack: [V13, 0x218, V1111]

================================

Block 0xb77
[0xb77:0xb7c]
---
Predecessors: [0x247]
Successors: [0xf7]
---
0xb77 JUMPDEST
0xb78 PUSH1 0x3
0xb7a SLOAD
0xb7b DUP2
0xb7c JUMP
---
0xb77: JUMPDEST 
0xb78: V1112 = 0x3
0xb7a: V1113 = S[0x3]
0xb7c: JUMP 0xf7
---
Entry stack: [V13, 0xf7]
Stack pops: 1
Stack additions: [S0, V1113]
Exit stack: [V13, 0xf7, V1113]

================================

Block 0xb7d
[0xb7d:0xb82]
---
Predecessors: [0x25a]
Successors: [0xf7]
---
0xb7d JUMPDEST
0xb7e PUSH1 0x4
0xb80 SLOAD
0xb81 DUP2
0xb82 JUMP
---
0xb7d: JUMPDEST 
0xb7e: V1114 = 0x4
0xb80: V1115 = S[0x4]
0xb82: JUMP 0xf7
---
Entry stack: [V13, 0xf7]
Stack pops: 1
Stack additions: [S0, V1115]
Exit stack: [V13, 0xf7, V1115]

================================

Block 0xb83
[0xb83:0xb90]
---
Predecessors: [0x293, 0x38c, 0x6fc]
Successors: [0xb91, 0xb92]
---
0xb83 JUMPDEST
0xb84 PUSH1 0x0
0xb86 DUP3
0xb87 DUP3
0xb88 ADD
0xb89 DUP4
0xb8a DUP2
0xb8b LT
0xb8c ISZERO
0xb8d PUSH2 0xb92
0xb90 JUMPI
---
0xb83: JUMPDEST 
0xb84: V1116 = 0x0
0xb88: V1117 = ADD S0 S1
0xb8b: V1118 = LT V1117 S1
0xb8c: V1119 = ISZERO V1118
0xb8d: V1120 = 0xb92
0xb90: JUMPI 0xb92 V1119
---
Entry stack: [V13, S5, S4, S3, {0x2aa, 0x3ab, 0x70f}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1117]
Exit stack: [V13, S5, S4, S3, {0x2aa, 0x3ab, 0x70f}, S1, S0, 0x0, V1117]

================================

Block 0xb91
[0xb91:0xb91]
---
Predecessors: [0xb83]
Successors: []
---
0xb91 INVALID
---
0xb91: INVALID 
---
Entry stack: [V13, S7, S6, S5, {0x2aa, 0x3ab, 0x70f}, S3, S2, 0x0, V1117]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S7, S6, S5, {0x2aa, 0x3ab, 0x70f}, S3, S2, 0x0, V1117]

================================

Block 0xb92
[0xb92:0xb98]
---
Predecessors: [0xb83, 0xbcc]
Successors: [0x2aa, 0x2d9, 0x379, 0x3ab, 0x458, 0x6e6, 0x70f]
---
0xb92 JUMPDEST
0xb93 SWAP4
0xb94 SWAP3
0xb95 POP
0xb96 POP
0xb97 POP
0xb98 JUMP
---
0xb92: JUMPDEST 
0xb98: JUMP {0x2aa, 0x2d9, 0x379, 0x3ab, 0x458, 0x6e6, 0x70f}
---
Entry stack: [V13, S7, S6, S5, {0x2aa, 0x2d9, 0x379, 0x3ab, 0x458, 0x6e6, 0x70f}, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, S7, S6, S5, S0]

================================

Block 0xb99
[0xb99:0xba5]
---
Predecessors: [0x2aa, 0x379, 0x458, 0x6e6]
Successors: [0xba6, 0xba7]
---
0xb99 JUMPDEST
0xb9a PUSH1 0x0
0xb9c DUP1
0xb9d DUP3
0xb9e DUP5
0xb9f DUP2
0xba0 ISZERO
0xba1 ISZERO
0xba2 PUSH2 0xba7
0xba5 JUMPI
---
0xb99: JUMPDEST 
0xb9a: V1121 = 0x0
0xba0: V1122 = ISZERO {0xa, 0x64, 0x2540be400}
0xba1: V1123 = ISZERO V1122
0xba2: V1124 = 0xba7
0xba5: JUMPI 0xba7 V1123
---
Entry stack: [V13, S5, S4, S3, {0x2c2, 0x38c, 0x46b, 0x6f9}, S1, {0xa, 0x64, 0x2540be400}]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V13, S5, S4, S3, {0x2c2, 0x38c, 0x46b, 0x6f9}, S1, {0xa, 0x64, 0x2540be400}, 0x0, 0x0, {0xa, 0x64, 0x2540be400}, S1]

================================

Block 0xba6
[0xba6:0xba6]
---
Predecessors: [0xb99]
Successors: []
---
0xba6 INVALID
---
0xba6: INVALID 
---
Entry stack: [V13, S9, S8, S7, {0x2c2, 0x38c, 0x46b, 0x6f9}, S5, {0xa, 0x64, 0x2540be400}, 0x0, 0x0, {0xa, 0x64, 0x2540be400}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, {0x2c2, 0x38c, 0x46b, 0x6f9}, S5, {0xa, 0x64, 0x2540be400}, 0x0, 0x0, {0xa, 0x64, 0x2540be400}, S0]

================================

Block 0xba7
[0xba7:0xbaf]
---
Predecessors: [0xb99]
Successors: [0x2c2, 0x38c, 0x46b, 0x6f9]
---
0xba7 JUMPDEST
0xba8 DIV
0xba9 SWAP5
0xbaa SWAP4
0xbab POP
0xbac POP
0xbad POP
0xbae POP
0xbaf JUMP
---
0xba7: JUMPDEST 
0xba8: V1125 = DIV S0 {0xa, 0x64, 0x2540be400}
0xbaf: JUMP {0x2c2, 0x38c, 0x46b, 0x6f9}
---
Entry stack: [V13, S9, S8, S7, {0x2c2, 0x38c, 0x46b, 0x6f9}, S5, {0xa, 0x64, 0x2540be400}, 0x0, 0x0, {0xa, 0x64, 0x2540be400}, S0]
Stack pops: 7
Stack additions: [V1125]
Exit stack: [V13, S9, S8, S7, V1125]

================================

Block 0xbb0
[0xbb0:0xbbc]
---
Predecessors: [0x2c2, 0x369, 0x448, 0x4ff, 0x59c, 0x639, 0x6d6]
Successors: [0xbbd, 0xbcc]
---
0xbb0 JUMPDEST
0xbb1 PUSH1 0x0
0xbb3 DUP3
0xbb4 DUP3
0xbb5 MUL
0xbb6 DUP4
0xbb7 ISZERO
0xbb8 DUP1
0xbb9 PUSH2 0xbcc
0xbbc JUMPI
---
0xbb0: JUMPDEST 
0xbb1: V1126 = 0x0
0xbb5: V1127 = MUL S0 S1
0xbb7: V1128 = ISZERO S1
0xbb9: V1129 = 0xbcc
0xbbc: JUMPI 0xbcc V1128
---
Entry stack: [V13, S5, S4, S3, {0x2d9, 0x379, 0x458, 0x6e6}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1127, V1128]
Exit stack: [V13, S5, S4, S3, {0x2d9, 0x379, 0x458, 0x6e6}, S1, S0, 0x0, V1127, V1128]

================================

Block 0xbbd
[0xbbd:0xbc7]
---
Predecessors: [0xbb0]
Successors: [0xbc8, 0xbc9]
---
0xbbd POP
0xbbe DUP3
0xbbf DUP5
0xbc0 DUP3
0xbc1 DUP2
0xbc2 ISZERO
0xbc3 ISZERO
0xbc4 PUSH2 0xbc9
0xbc7 JUMPI
---
0xbc2: V1130 = ISZERO S4
0xbc3: V1131 = ISZERO V1130
0xbc4: V1132 = 0xbc9
0xbc7: JUMPI 0xbc9 V1131
---
Entry stack: [V13, S8, S7, S6, {0x2d9, 0x379, 0x458, 0x6e6}, S4, S3, 0x0, V1127, V1128]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V13, S8, S7, S6, {0x2d9, 0x379, 0x458, 0x6e6}, S4, S3, 0x0, V1127, S3, S4, V1127]

================================

Block 0xbc8
[0xbc8:0xbc8]
---
Predecessors: [0xbbd]
Successors: []
---
0xbc8 INVALID
---
0xbc8: INVALID 
---
Entry stack: [V13, S10, S9, S8, {0x2d9, 0x379, 0x458, 0x6e6}, S6, S5, 0x0, V1127, S2, S1, V1127]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, {0x2d9, 0x379, 0x458, 0x6e6}, S6, S5, 0x0, V1127, S2, S1, V1127]

================================

Block 0xbc9
[0xbc9:0xbcb]
---
Predecessors: [0xbbd]
Successors: [0xbcc]
---
0xbc9 JUMPDEST
0xbca DIV
0xbcb EQ
---
0xbc9: JUMPDEST 
0xbca: V1133 = DIV V1127 S1
0xbcb: V1134 = EQ V1133 S2
---
Entry stack: [V13, S10, S9, S8, {0x2d9, 0x379, 0x458, 0x6e6}, S6, S5, 0x0, V1127, S2, S1, V1127]
Stack pops: 3
Stack additions: [V1134]
Exit stack: [V13, S10, S9, S8, {0x2d9, 0x379, 0x458, 0x6e6}, S6, S5, 0x0, V1127, V1134]

================================

Block 0xbcc
[0xbcc:0xbd2]
---
Predecessors: [0xbb0, 0xbc9]
Successors: [0xb92, 0xbd3]
---
0xbcc JUMPDEST
0xbcd ISZERO
0xbce ISZERO
0xbcf PUSH2 0xb92
0xbd2 JUMPI
---
0xbcc: JUMPDEST 
0xbcd: V1135 = ISZERO S0
0xbce: V1136 = ISZERO V1135
0xbcf: V1137 = 0xb92
0xbd2: JUMPI 0xb92 V1136
---
Entry stack: [V13, S8, S7, S6, {0x2d9, 0x379, 0x458, 0x6e6}, S4, S3, 0x0, V1127, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S8, S7, S6, {0x2d9, 0x379, 0x458, 0x6e6}, S4, S3, 0x0, V1127]

================================

Block 0xbd3
[0xbd3:0xbd3]
---
Predecessors: [0xbcc]
Successors: []
---
0xbd3 INVALID
---
0xbd3: INVALID 
---
Entry stack: [V13, 0xb3, S5, {0x2d9, 0x379, 0x458, 0x6e6}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb3, S5, {0x2d9, 0x379, 0x458, 0x6e6}, S3, S2, 0x0, S0]

================================

Block 0xbd4
[0xbd4:0xbf4]
---
Predecessors: []
Successors: [0xbf5]
---
0xbd4 STOP
0xbd5 LOG1
0xbd6 PUSH6 0x627a7a723058
0xbdd SHA3
0xbde SWAP10
0xbdf SWAP4
0xbe0 MISSING 0x1f
0xbe1 MISSING 0xab
0xbe2 MISSING 0x5f
0xbe3 MISSING 0xb8
0xbe4 MISSING 0x4e
0xbe5 OR
0xbe6 MISSING 0xdb
0xbe7 MSTORE
0xbe8 STATICCALL
0xbe9 REVERT
0xbea MISSING 0xde
0xbeb MISSING 0xac
0xbec MISSING 0xfc
0xbed SGT
0xbee SWAP3
0xbef MISSING 0xbe
0xbf0 MISSING 0xab
0xbf1 DUP12
0xbf2 DUP10
0xbf3 MISSING 0xb3
0xbf4 CODESIZE
---
0xbd4: STOP 
0xbd5: LOG S0 S1 S2
0xbd6: V1138 = 0x627a7a723058
0xbdd: V1139 = SHA3 0x627a7a723058 S3
0xbe0: MISSING 0x1f
0xbe1: MISSING 0xab
0xbe2: MISSING 0x5f
0xbe3: MISSING 0xb8
0xbe4: MISSING 0x4e
0xbe5: V1140 = OR S0 S1
0xbe6: MISSING 0xdb
0xbe7: M[S0] = S1
0xbe8: V1141 = STATICCALL S2 S3 S4 S5 S6 S7
0xbe9: REVERT V1141 S8
0xbea: MISSING 0xde
0xbeb: MISSING 0xac
0xbec: MISSING 0xfc
0xbed: V1142 = SGT S0 S1
0xbef: MISSING 0xbe
0xbf0: MISSING 0xab
0xbf3: MISSING 0xb3
0xbf4: V1143 = CODESIZE
---
Entry stack: []
Stack pops: 0
Stack additions: [S7, S4, S5, S6, S13, S8, S9, S10, S11, S12, V1139, V1140, S4, S2, S3, V1142, S8, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V1143]
Exit stack: []

================================

Block 0xbf5
[0xbf5:0xc0e]
---
Predecessors: [0xbd4]
Successors: []
---
0xbf5 JUMPDEST
0xbf6 MISSING 0xe8
0xbf7 MISSING 0xc3
0xbf8 MISSING 0xda
0xbf9 MISSING 0xbe
0xbfa PUSH20 0xcf1fde0029
---
0xbf5: JUMPDEST 
0xbf6: MISSING 0xe8
0xbf7: MISSING 0xc3
0xbf8: MISSING 0xda
0xbf9: MISSING 0xbe
0xbfa: V1144 = 0xcf1fde0029
---
Entry stack: [V1143]
Stack pops: 0
Stack additions: [0xcf1fde0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0xb5
Exit block: 0xc8
Body: 0xb5, 0xbc, 0xc0, 0xc8, 0x837

Function 1:
Public function signature: 0x2c4e722e
Entry block: 0xe4
Exit block: 0xf7
Body: 0xe4, 0xeb, 0xef, 0xf7, 0x846

Function 2:
Public function signature: 0x38771242
Entry block: 0x109
Exit block: 0xf7
Body: 0xf7, 0x109, 0x110, 0x114, 0x84c

Function 3:
Public function signature: 0x54fd4d50
Entry block: 0x11c
Exit block: 0x198
Body: 0x11c, 0x123, 0x127, 0x12f, 0x153, 0x15c, 0x16b, 0x17f, 0x198, 0x852, 0x8a2, 0x8aa, 0x8bd, 0x8cb, 0x8df, 0x8e8

Function 4:
Public function signature: 0x6e66f6e9
Entry block: 0x1a6
Exit block: 0xc8
Body: 0xc8, 0x1a6, 0x1ad, 0x1b1, 0x8f0

Function 5:
Public function signature: 0x78e97925
Entry block: 0x1b9
Exit block: 0xf7
Body: 0xf7, 0x1b9, 0x1c0, 0x1c4, 0x8ff

Function 6:
Public function signature: 0x86f32586
Entry block: 0x1cc
Exit block: 0x1d3
Body: 0xb3, 0x1cc, 0x1d3, 0x1d7

Function 7:
Public function signature: 0x936c9bc9
Entry block: 0x1df
Exit block: 0xf7
Body: 0xf7, 0x1df, 0x1e6, 0x1ea, 0x97d

Function 8:
Public function signature: 0xbef4876b
Entry block: 0x1f2
Exit block: 0xb3
Body: 0xb3, 0x1f2, 0x1f9, 0x1fd

Function 9:
Public function signature: 0xc19d93fb
Entry block: 0x205
Exit block: 0x227
Body: 0x205, 0x20c, 0x210, 0x218, 0x227, 0x228, 0xb6e

Function 10:
Public function signature: 0xc5c4744c
Entry block: 0x23c
Exit block: 0xf7
Body: 0xf7, 0x23c, 0x243, 0x247, 0xb77

Function 11:
Public function signature: 0xd7bb99ba
Entry block: 0xab
Exit block: 0xb3
Body: 0xab, 0xb3, 0x262, 0x276, 0x277, 0x27e, 0x282, 0x28f, 0x293, 0x2aa

Function 12:
Public function signature: 0xefca2eed
Entry block: 0x24f
Exit block: 0xf7
Body: 0xf7, 0x24f, 0x256, 0x25a, 0xb7d

Function 13:
Public fallback function
Entry block: 0xab
Exit block: 0xb3
Body: 0xab, 0xb3, 0x262, 0x276, 0x277, 0x27e, 0x282, 0x28f, 0x293, 0x2aa

Function 14:
Private function
Entry block: 0xbb0
Exit block: 0xb92
Body: 0x2aa, 0x2c2, 0x3ab, 0x3b6, 0x6fc, 0xb92, 0xbb0, 0xbbd, 0xbc9, 0xbcc

Function 15:
Private function
Entry block: 0xb83
Exit block: 0xb92
Body: 0x2d9, 0x346, 0x357, 0x369, 0x379, 0x379, 0x38c, 0x3bb, 0x425, 0x436, 0x448, 0x458, 0x458, 0x458, 0x458, 0x458, 0x46b, 0x472, 0x4dc, 0x4ed, 0x4ff, 0x50f, 0x579, 0x58a, 0x59c, 0x5ac, 0x616, 0x627, 0x639, 0x649, 0x6b3, 0x6c4, 0x6d6, 0x6e6, 0x6e6, 0x6f9, 0x6fc, 0x6fc, 0x6fc, 0x70f, 0xb83, 0xb92

Function 16:
Private function
Entry block: 0xb99
Exit block: 0xba7
Body: 0xb99, 0xba7

Function 17:
Private function
Entry block: 0x983
Exit block: 0xac8
Body: 0x983, 0x998, 0x9a2, 0x9fb, 0xa0c, 0xa51, 0xab7, 0xac8

Function 18:
Private function
Entry block: 0x905
Exit block: 0x97b
Body: 0x905, 0x911, 0x924, 0x927, 0x92d, 0x97b

