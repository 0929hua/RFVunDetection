Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x72]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x72
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x72
0xa: JUMPI 0x72 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x88]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x386381db
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x88
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x386381db
0x20: V14 = EQ V12 0x386381db
0x21: V15 = 0x88
0x24: JUMPI 0x88 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xb4]
---
0x25 DUP1
0x26 PUSH4 0x4af4a127
0x2b EQ
0x2c PUSH2 0xb4
0x2f JUMPI
---
0x26: V16 = 0x4af4a127
0x2b: V17 = EQ 0x4af4a127 V12
0x2c: V18 = 0xb4
0x2f: JUMPI 0xb4 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xd6]
---
0x30 DUP1
0x31 PUSH4 0x50c4ebc4
0x36 EQ
0x37 PUSH2 0xd6
0x3a JUMPI
---
0x31: V19 = 0x50c4ebc4
0x36: V20 = EQ 0x50c4ebc4 V12
0x37: V21 = 0xd6
0x3a: JUMPI 0xd6 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xf8]
---
0x3b DUP1
0x3c PUSH4 0x74c43f26
0x41 EQ
0x42 PUSH2 0xf8
0x45 JUMPI
---
0x3c: V22 = 0x74c43f26
0x41: V23 = EQ 0x74c43f26 V12
0x42: V24 = 0xf8
0x45: JUMPI 0xf8 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x116]
---
0x46 DUP1
0x47 PUSH4 0xa6f2ae3a
0x4c EQ
0x4d PUSH2 0x116
0x50 JUMPI
---
0x47: V25 = 0xa6f2ae3a
0x4c: V26 = EQ 0xa6f2ae3a V12
0x4d: V27 = 0x116
0x50: JUMPI 0x116 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x120]
---
0x51 DUP1
0x52 PUSH4 0xd9652cb1
0x57 EQ
0x58 PUSH2 0x120
0x5b JUMPI
---
0x52: V28 = 0xd9652cb1
0x57: V29 = EQ 0xd9652cb1 V12
0x58: V30 = 0x120
0x5b: JUMPI 0x120 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x142]
---
0x5c DUP1
0x5d PUSH4 0xde72cab0
0x62 EQ
0x63 PUSH2 0x142
0x66 JUMPI
---
0x5d: V31 = 0xde72cab0
0x62: V32 = EQ 0xde72cab0 V12
0x63: V33 = 0x142
0x66: JUMPI 0x142 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x154]
---
0x67 DUP1
0x68 PUSH4 0xfc1c32fa
0x6d EQ
0x6e PUSH2 0x154
0x71 JUMPI
---
0x68: V34 = 0xfc1c32fa
0x6d: V35 = EQ 0xfc1c32fa V12
0x6e: V36 = 0x154
0x71: JUMPI 0x154 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x78]
---
Predecessors: [0x0, 0x67]
Successors: [0x79, 0x7a]
---
0x72 JUMPDEST
0x73 CALLVALUE
0x74 ISZERO
0x75 PUSH2 0x7a
0x78 JUMPI
---
0x72: JUMPDEST 
0x73: V37 = CALLVALUE
0x74: V38 = ISZERO V37
0x75: V39 = 0x7a
0x78: JUMPI 0x7a V38
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x79
[0x79:0x79]
---
Predecessors: [0x72]
Successors: []
---
0x79 INVALID
---
0x79: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7a
[0x7a:0x7d]
---
Predecessors: [0x72]
Successors: [0x7e]
---
0x7a JUMPDEST
0x7b PUSH2 0x86
---
0x7a: JUMPDEST 
0x7b: V40 = 0x86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x86]
Exit stack: [V12, 0x86]

================================

Block 0x7e
[0x7e:0x83]
---
Predecessors: [0x7a]
Successors: []
---
0x7e JUMPDEST
0x7f PUSH1 0x0
0x81 PUSH1 0x0
0x83 REVERT
---
0x7e: JUMPDEST 
0x7f: V41 = 0x0
0x81: V42 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V12, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86]

================================

Block 0x84
[0x84:0x85]
---
Predecessors: [0x89c]
Successors: [0x86]
---
0x84 JUMPDEST
0x85 JUMP
---
0x84: JUMPDEST 
0x85: JUMP 0x86
---
Entry stack: [V12, 0x86]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x86
[0x86:0x87]
---
Predecessors: [0x84, 0x1dd, 0x888, 0x8ba]
Successors: []
---
0x86 JUMPDEST
0x87 STOP
---
0x86: JUMPDEST 
0x87: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x88
[0x88:0x8e]
---
Predecessors: [0xb]
Successors: [0x8f, 0x90]
---
0x88 JUMPDEST
0x89 CALLVALUE
0x8a ISZERO
0x8b PUSH2 0x90
0x8e JUMPI
---
0x88: JUMPDEST 
0x89: V43 = CALLVALUE
0x8a: V44 = ISZERO V43
0x8b: V45 = 0x90
0x8e: JUMPI 0x90 V44
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8f
[0x8f:0x8f]
---
Predecessors: [0x88]
Successors: []
---
0x8f INVALID
---
0x8f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x90
[0x90:0x97]
---
Predecessors: [0x88]
Successors: [0x180]
---
0x90 JUMPDEST
0x91 PUSH2 0x98
0x94 PUSH2 0x180
0x97 JUMP
---
0x90: JUMPDEST 
0x91: V46 = 0x98
0x94: V47 = 0x180
0x97: JUMP 0x180
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x98]
Exit stack: [V12, 0x98]

================================

Block 0x98
[0x98:0xb3]
---
Predecessors: [0x180, 0x8bc]
Successors: []
---
0x98 JUMPDEST
0x99 PUSH1 0x40
0x9b DUP1
0x9c MLOAD
0x9d PUSH1 0x1
0x9f PUSH1 0xa0
0xa1 PUSH1 0x2
0xa3 EXP
0xa4 SUB
0xa5 SWAP1
0xa6 SWAP3
0xa7 AND
0xa8 DUP3
0xa9 MSTORE
0xaa MLOAD
0xab SWAP1
0xac DUP2
0xad SWAP1
0xae SUB
0xaf PUSH1 0x20
0xb1 ADD
0xb2 SWAP1
0xb3 RETURN
---
0x98: JUMPDEST 
0x99: V48 = 0x40
0x9c: V49 = M[0x40]
0x9d: V50 = 0x1
0x9f: V51 = 0xa0
0xa1: V52 = 0x2
0xa3: V53 = EXP 0x2 0xa0
0xa4: V54 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7: V55 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xa9: M[V49] = V55
0xaa: V56 = M[0x40]
0xae: V57 = SUB V49 V56
0xaf: V58 = 0x20
0xb1: V59 = ADD 0x20 V57
0xb3: RETURN V56 V59
---
Entry stack: [V12, 0x98, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x98]

================================

Block 0xb4
[0xb4:0xba]
---
Predecessors: [0x25]
Successors: [0xbb, 0xbc]
---
0xb4 JUMPDEST
0xb5 CALLVALUE
0xb6 ISZERO
0xb7 PUSH2 0xbc
0xba JUMPI
---
0xb4: JUMPDEST 
0xb5: V60 = CALLVALUE
0xb6: V61 = ISZERO V60
0xb7: V62 = 0xbc
0xba: JUMPI 0xbc V61
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbb
[0xbb:0xbb]
---
Predecessors: [0xb4]
Successors: []
---
0xbb INVALID
---
0xbb: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbc
[0xbc:0xc3]
---
Predecessors: [0xb4]
Successors: [0x18f]
---
0xbc JUMPDEST
0xbd PUSH2 0xc4
0xc0 PUSH2 0x18f
0xc3 JUMP
---
0xbc: JUMPDEST 
0xbd: V63 = 0xc4
0xc0: V64 = 0x18f
0xc3: JUMP 0x18f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V12, 0xc4]

================================

Block 0xc4
[0xc4:0xd5]
---
Predecessors: [0x18f, 0x195, 0x896]
Successors: []
---
0xc4 JUMPDEST
0xc5 PUSH1 0x40
0xc7 DUP1
0xc8 MLOAD
0xc9 SWAP2
0xca DUP3
0xcb MSTORE
0xcc MLOAD
0xcd SWAP1
0xce DUP2
0xcf SWAP1
0xd0 SUB
0xd1 PUSH1 0x20
0xd3 ADD
0xd4 SWAP1
0xd5 RETURN
---
0xc4: JUMPDEST 
0xc5: V65 = 0x40
0xc8: V66 = M[0x40]
0xcb: M[V66] = S0
0xcc: V67 = M[0x40]
0xd0: V68 = SUB V66 V67
0xd1: V69 = 0x20
0xd3: V70 = ADD 0x20 V68
0xd5: RETURN V67 V70
---
Entry stack: [V12, 0xc4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xc4]

================================

Block 0xd6
[0xd6:0xdc]
---
Predecessors: [0x30]
Successors: [0xdd, 0xde]
---
0xd6 JUMPDEST
0xd7 CALLVALUE
0xd8 ISZERO
0xd9 PUSH2 0xde
0xdc JUMPI
---
0xd6: JUMPDEST 
0xd7: V71 = CALLVALUE
0xd8: V72 = ISZERO V71
0xd9: V73 = 0xde
0xdc: JUMPI 0xde V72
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdd
[0xdd:0xdd]
---
Predecessors: [0xd6]
Successors: []
---
0xdd INVALID
---
0xdd: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0xd6]
Successors: [0x195]
---
0xde JUMPDEST
0xdf PUSH2 0xc4
0xe2 PUSH2 0x195
0xe5 JUMP
---
0xde: JUMPDEST 
0xdf: V74 = 0xc4
0xe2: V75 = 0x195
0xe5: JUMP 0x195
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V12, 0xc4]

================================

Block 0xe6
[0xe6:0xf7]
---
Predecessors: []
Successors: []
---
0xe6 JUMPDEST
0xe7 PUSH1 0x40
0xe9 DUP1
0xea MLOAD
0xeb SWAP2
0xec DUP3
0xed MSTORE
0xee MLOAD
0xef SWAP1
0xf0 DUP2
0xf1 SWAP1
0xf2 SUB
0xf3 PUSH1 0x20
0xf5 ADD
0xf6 SWAP1
0xf7 RETURN
---
0xe6: JUMPDEST 
0xe7: V76 = 0x40
0xea: V77 = M[0x40]
0xed: M[V77] = S0
0xee: V78 = M[0x40]
0xf2: V79 = SUB V77 V78
0xf3: V80 = 0x20
0xf5: V81 = ADD 0x20 V79
0xf7: RETURN V78 V81
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xf8
[0xf8:0xfe]
---
Predecessors: [0x3b]
Successors: [0xff, 0x100]
---
0xf8 JUMPDEST
0xf9 CALLVALUE
0xfa ISZERO
0xfb PUSH2 0x100
0xfe JUMPI
---
0xf8: JUMPDEST 
0xf9: V82 = CALLVALUE
0xfa: V83 = ISZERO V82
0xfb: V84 = 0x100
0xfe: JUMPI 0x100 V83
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xff
[0xff:0xff]
---
Predecessors: [0xf8]
Successors: []
---
0xff INVALID
---
0xff: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x100
[0x100:0x113]
---
Predecessors: [0xf8]
Successors: [0x19b]
---
0x100 JUMPDEST
0x101 PUSH2 0x86
0x104 PUSH1 0x1
0x106 PUSH1 0xa0
0x108 PUSH1 0x2
0x10a EXP
0x10b SUB
0x10c PUSH1 0x4
0x10e CALLDATALOAD
0x10f AND
0x110 PUSH2 0x19b
0x113 JUMP
---
0x100: JUMPDEST 
0x101: V85 = 0x86
0x104: V86 = 0x1
0x106: V87 = 0xa0
0x108: V88 = 0x2
0x10a: V89 = EXP 0x2 0xa0
0x10b: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10c: V91 = 0x4
0x10e: V92 = CALLDATALOAD 0x4
0x10f: V93 = AND V92 0xffffffffffffffffffffffffffffffffffffffff
0x110: V94 = 0x19b
0x113: JUMP 0x19b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x86, V93]
Exit stack: [V12, 0x86, V93]

================================

Block 0x114
[0x114:0x115]
---
Predecessors: []
Successors: []
---
0x114 JUMPDEST
0x115 STOP
---
0x114: JUMPDEST 
0x115: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x116
[0x116:0x11d]
---
Predecessors: [0x46]
Successors: [0x1e0]
---
0x116 JUMPDEST
0x117 PUSH2 0x86
0x11a PUSH2 0x1e0
0x11d JUMP
---
0x116: JUMPDEST 
0x117: V95 = 0x86
0x11a: V96 = 0x1e0
0x11d: JUMP 0x1e0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x86]
Exit stack: [V12, 0x86]

================================

Block 0x11e
[0x11e:0x11f]
---
Predecessors: []
Successors: []
---
0x11e JUMPDEST
0x11f STOP
---
0x11e: JUMPDEST 
0x11f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x120
[0x120:0x126]
---
Predecessors: [0x51]
Successors: [0x127, 0x128]
---
0x120 JUMPDEST
0x121 CALLVALUE
0x122 ISZERO
0x123 PUSH2 0x128
0x126 JUMPI
---
0x120: JUMPDEST 
0x121: V97 = CALLVALUE
0x122: V98 = ISZERO V97
0x123: V99 = 0x128
0x126: JUMPI 0x128 V98
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x127
[0x127:0x127]
---
Predecessors: [0x120]
Successors: []
---
0x127 INVALID
---
0x127: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x128
[0x128:0x12f]
---
Predecessors: [0x120]
Successors: [0x896]
---
0x128 JUMPDEST
0x129 PUSH2 0xc4
0x12c PUSH2 0x896
0x12f JUMP
---
0x128: JUMPDEST 
0x129: V100 = 0xc4
0x12c: V101 = 0x896
0x12f: JUMP 0x896
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V12, 0xc4]

================================

Block 0x130
[0x130:0x141]
---
Predecessors: []
Successors: []
---
0x130 JUMPDEST
0x131 PUSH1 0x40
0x133 DUP1
0x134 MLOAD
0x135 SWAP2
0x136 DUP3
0x137 MSTORE
0x138 MLOAD
0x139 SWAP1
0x13a DUP2
0x13b SWAP1
0x13c SUB
0x13d PUSH1 0x20
0x13f ADD
0x140 SWAP1
0x141 RETURN
---
0x130: JUMPDEST 
0x131: V102 = 0x40
0x134: V103 = M[0x40]
0x137: M[V103] = S0
0x138: V104 = M[0x40]
0x13c: V105 = SUB V103 V104
0x13d: V106 = 0x20
0x13f: V107 = ADD 0x20 V105
0x141: RETURN V104 V107
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x142
[0x142:0x148]
---
Predecessors: [0x5c]
Successors: [0x149, 0x14a]
---
0x142 JUMPDEST
0x143 CALLVALUE
0x144 ISZERO
0x145 PUSH2 0x14a
0x148 JUMPI
---
0x142: JUMPDEST 
0x143: V108 = CALLVALUE
0x144: V109 = ISZERO V108
0x145: V110 = 0x14a
0x148: JUMPI 0x14a V109
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x149
[0x149:0x149]
---
Predecessors: [0x142]
Successors: []
---
0x149 INVALID
---
0x149: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14a
[0x14a:0x151]
---
Predecessors: [0x142]
Successors: [0x89c]
---
0x14a JUMPDEST
0x14b PUSH2 0x86
0x14e PUSH2 0x89c
0x151 JUMP
---
0x14a: JUMPDEST 
0x14b: V111 = 0x86
0x14e: V112 = 0x89c
0x151: JUMP 0x89c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x86]
Exit stack: [V12, 0x86]

================================

Block 0x152
[0x152:0x153]
---
Predecessors: []
Successors: []
---
0x152 JUMPDEST
0x153 STOP
---
0x152: JUMPDEST 
0x153: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x154
[0x154:0x15a]
---
Predecessors: [0x67]
Successors: [0x15b, 0x15c]
---
0x154 JUMPDEST
0x155 CALLVALUE
0x156 ISZERO
0x157 PUSH2 0x15c
0x15a JUMPI
---
0x154: JUMPDEST 
0x155: V113 = CALLVALUE
0x156: V114 = ISZERO V113
0x157: V115 = 0x15c
0x15a: JUMPI 0x15c V114
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15b
[0x15b:0x15b]
---
Predecessors: [0x154]
Successors: []
---
0x15b INVALID
---
0x15b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15c
[0x15c:0x163]
---
Predecessors: [0x154]
Successors: [0x8bc]
---
0x15c JUMPDEST
0x15d PUSH2 0x98
0x160 PUSH2 0x8bc
0x163 JUMP
---
0x15c: JUMPDEST 
0x15d: V116 = 0x98
0x160: V117 = 0x8bc
0x163: JUMP 0x8bc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x98]
Exit stack: [V12, 0x98]

================================

Block 0x164
[0x164:0x17f]
---
Predecessors: []
Successors: []
---
0x164 JUMPDEST
0x165 PUSH1 0x40
0x167 DUP1
0x168 MLOAD
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 SWAP1
0x172 SWAP3
0x173 AND
0x174 DUP3
0x175 MSTORE
0x176 MLOAD
0x177 SWAP1
0x178 DUP2
0x179 SWAP1
0x17a SUB
0x17b PUSH1 0x20
0x17d ADD
0x17e SWAP1
0x17f RETURN
---
0x164: JUMPDEST 
0x165: V118 = 0x40
0x168: V119 = M[0x40]
0x169: V120 = 0x1
0x16b: V121 = 0xa0
0x16d: V122 = 0x2
0x16f: V123 = EXP 0x2 0xa0
0x170: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x173: V125 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x175: M[V119] = V125
0x176: V126 = M[0x40]
0x17a: V127 = SUB V119 V126
0x17b: V128 = 0x20
0x17d: V129 = ADD 0x20 V127
0x17f: RETURN V126 V129
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x180
[0x180:0x18e]
---
Predecessors: [0x90]
Successors: [0x98]
---
0x180 JUMPDEST
0x181 PUSH1 0x1
0x183 SLOAD
0x184 PUSH1 0x1
0x186 PUSH1 0xa0
0x188 PUSH1 0x2
0x18a EXP
0x18b SUB
0x18c AND
0x18d DUP2
0x18e JUMP
---
0x180: JUMPDEST 
0x181: V130 = 0x1
0x183: V131 = S[0x1]
0x184: V132 = 0x1
0x186: V133 = 0xa0
0x188: V134 = 0x2
0x18a: V135 = EXP 0x2 0xa0
0x18b: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18c: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x18e: JUMP 0x98
---
Entry stack: [V12, 0x98]
Stack pops: 1
Stack additions: [S0, V137]
Exit stack: [V12, 0x98, V137]

================================

Block 0x18f
[0x18f:0x194]
---
Predecessors: [0xbc]
Successors: [0xc4]
---
0x18f JUMPDEST
0x190 PUSH1 0x2
0x192 SLOAD
0x193 DUP2
0x194 JUMP
---
0x18f: JUMPDEST 
0x190: V138 = 0x2
0x192: V139 = S[0x2]
0x194: JUMP 0xc4
---
Entry stack: [V12, 0xc4]
Stack pops: 1
Stack additions: [S0, V139]
Exit stack: [V12, 0xc4, V139]

================================

Block 0x195
[0x195:0x19a]
---
Predecessors: [0xde]
Successors: [0xc4]
---
0x195 JUMPDEST
0x196 PUSH1 0x4
0x198 SLOAD
0x199 DUP2
0x19a JUMP
---
0x195: JUMPDEST 
0x196: V140 = 0x4
0x198: V141 = S[0x4]
0x19a: JUMP 0xc4
---
Entry stack: [V12, 0xc4]
Stack pops: 1
Stack additions: [S0, V141]
Exit stack: [V12, 0xc4, V141]

================================

Block 0x19b
[0x19b:0x1b2]
---
Predecessors: [0x100]
Successors: [0x1b3, 0x1db]
---
0x19b JUMPDEST
0x19c PUSH1 0x17
0x19e SLOAD
0x19f CALLER
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0xa0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 SUB
0x1a8 SWAP1
0x1a9 DUP2
0x1aa AND
0x1ab SWAP2
0x1ac AND
0x1ad EQ
0x1ae ISZERO
0x1af PUSH2 0x1db
0x1b2 JUMPI
---
0x19b: JUMPDEST 
0x19c: V142 = 0x17
0x19e: V143 = S[0x17]
0x19f: V144 = CALLER
0x1a0: V145 = 0x1
0x1a2: V146 = 0xa0
0x1a4: V147 = 0x2
0x1a6: V148 = EXP 0x2 0xa0
0x1a7: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1aa: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x1ac: V151 = AND V143 0xffffffffffffffffffffffffffffffffffffffff
0x1ad: V152 = EQ V151 V150
0x1ae: V153 = ISZERO V152
0x1af: V154 = 0x1db
0x1b2: JUMPI 0x1db V153
---
Entry stack: [V12, 0x86, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V93]

================================

Block 0x1b3
[0x1b3:0x1da]
---
Predecessors: [0x19b]
Successors: [0x1db]
---
0x1b3 PUSH1 0x0
0x1b5 DUP1
0x1b6 SLOAD
0x1b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cc NOT
0x1cd AND
0x1ce PUSH1 0x1
0x1d0 PUSH1 0xa0
0x1d2 PUSH1 0x2
0x1d4 EXP
0x1d5 SUB
0x1d6 DUP4
0x1d7 AND
0x1d8 OR
0x1d9 SWAP1
0x1da SSTORE
---
0x1b3: V155 = 0x0
0x1b6: V156 = S[0x0]
0x1b7: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: V158 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1cd: V159 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V156
0x1ce: V160 = 0x1
0x1d0: V161 = 0xa0
0x1d2: V162 = 0x2
0x1d4: V163 = EXP 0x2 0xa0
0x1d5: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d7: V165 = AND V93 0xffffffffffffffffffffffffffffffffffffffff
0x1d8: V166 = OR V165 V159
0x1da: S[0x0] = V166
---
Entry stack: [V12, 0x86, V93]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x86, V93]

================================

Block 0x1db
[0x1db:0x1db]
---
Predecessors: [0x19b, 0x1b3]
Successors: [0x1dc]
---
0x1db JUMPDEST
---
0x1db: JUMPDEST 
---
Entry stack: [V12, 0x86, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V93]

================================

Block 0x1dc
[0x1dc:0x1dc]
---
Predecessors: [0x1db]
Successors: [0x1dd]
---
0x1dc JUMPDEST
---
0x1dc: JUMPDEST 
---
Entry stack: [V12, 0x86, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V93]

================================

Block 0x1dd
[0x1dd:0x1df]
---
Predecessors: [0x1dc]
Successors: [0x86]
---
0x1dd JUMPDEST
0x1de POP
0x1df JUMP
---
0x1dd: JUMPDEST 
0x1df: JUMP 0x86
---
Entry stack: [V12, 0x86, V93]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e0
[0x1e0:0x1f5]
---
Predecessors: [0x116]
Successors: [0x1f6, 0x1fb]
---
0x1e0 JUMPDEST
0x1e1 PUSH1 0x0
0x1e3 DUP1
0x1e4 DUP1
0x1e5 DUP1
0x1e6 DUP1
0x1e7 DUP1
0x1e8 DUP1
0x1e9 DUP1
0x1ea DUP1
0x1eb DUP1
0x1ec DUP1
0x1ed DUP1
0x1ee CALLVALUE
0x1ef DUP2
0x1f0 SWAP1
0x1f1 GT
0x1f2 PUSH2 0x1fb
0x1f5 JUMPI
---
0x1e0: JUMPDEST 
0x1e1: V167 = 0x0
0x1ee: V168 = CALLVALUE
0x1f1: V169 = GT V168 0x0
0x1f2: V170 = 0x1fb
0x1f5: JUMPI 0x1fb V169
---
Entry stack: [V12, 0x86]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x86, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x1f6
[0x1f6:0x1fa]
---
Predecessors: [0x1e0]
Successors: []
---
0x1f6 PUSH1 0x0
0x1f8 PUSH1 0x0
0x1fa REVERT
---
0x1f6: V171 = 0x0
0x1f8: V172 = 0x0
0x1fa: REVERT 0x0 0x0
---
Entry stack: [V12, 0x86, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x1fb
[0x1fb:0x260]
---
Predecessors: [0x1e0]
Successors: [0x261, 0x262]
---
0x1fb JUMPDEST
0x1fc PUSH1 0x1
0x1fe SLOAD
0x1ff PUSH1 0x40
0x201 DUP1
0x202 MLOAD
0x203 PUSH1 0x0
0x205 PUSH1 0x20
0x207 SWAP2
0x208 DUP3
0x209 ADD
0x20a DUP2
0x20b SWAP1
0x20c MSTORE
0x20d DUP3
0x20e MLOAD
0x20f PUSH32 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x230 DUP2
0x231 MSTORE
0x232 SWAP3
0x233 MLOAD
0x234 PUSH1 0x1
0x236 PUSH1 0xa0
0x238 PUSH1 0x2
0x23a EXP
0x23b SUB
0x23c SWAP1
0x23d SWAP5
0x23e AND
0x23f SWAP16
0x240 POP
0x241 DUP16
0x242 SWAP4
0x243 PUSH4 0x18160ddd
0x248 SWAP4
0x249 PUSH1 0x4
0x24b DUP1
0x24c DUP3
0x24d ADD
0x24e SWAP5
0x24f SWAP4
0x250 SWAP2
0x251 DUP4
0x252 SWAP1
0x253 SUB
0x254 ADD
0x255 SWAP1
0x256 DUP3
0x257 SWAP1
0x258 DUP8
0x259 DUP1
0x25a EXTCODESIZE
0x25b ISZERO
0x25c ISZERO
0x25d PUSH2 0x262
0x260 JUMPI
---
0x1fb: JUMPDEST 
0x1fc: V173 = 0x1
0x1fe: V174 = S[0x1]
0x1ff: V175 = 0x40
0x202: V176 = M[0x40]
0x203: V177 = 0x0
0x205: V178 = 0x20
0x209: V179 = ADD 0x20 V176
0x20c: M[V179] = 0x0
0x20e: V180 = M[0x40]
0x20f: V181 = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x231: M[V180] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x233: V182 = M[0x40]
0x234: V183 = 0x1
0x236: V184 = 0xa0
0x238: V185 = 0x2
0x23a: V186 = EXP 0x2 0xa0
0x23b: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23e: V188 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x243: V189 = 0x18160ddd
0x249: V190 = 0x4
0x24d: V191 = ADD V180 0x4
0x253: V192 = SUB V180 V182
0x254: V193 = ADD V192 0x4
0x25a: V194 = EXTCODESIZE V188
0x25b: V195 = ISZERO V194
0x25c: V196 = ISZERO V195
0x25d: V197 = 0x262
0x260: JUMPI 0x262 V196
---
Entry stack: [V12, 0x86, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 12
Stack additions: [V188, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V188, 0x18160ddd, V191, 0x20, V182, V193, V182, 0x0, V188]
Exit stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V188, 0x18160ddd, V191, 0x20, V182, V193, V182, 0x0, V188]

================================

Block 0x261
[0x261:0x261]
---
Predecessors: [0x1fb]
Successors: []
---
0x261 INVALID
---
0x261: INVALID 
---
Entry stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V188, 0x18160ddd, V191, 0x20, V182, V193, V182, 0x0, V188]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V188, 0x18160ddd, V191, 0x20, V182, V193, V182, 0x0, V188]

================================

Block 0x262
[0x262:0x26e]
---
Predecessors: [0x1fb]
Successors: [0x26f, 0x270]
---
0x262 JUMPDEST
0x263 PUSH2 0x2c6
0x266 GAS
0x267 SUB
0x268 CALL
0x269 ISZERO
0x26a ISZERO
0x26b PUSH2 0x270
0x26e JUMPI
---
0x262: JUMPDEST 
0x263: V198 = 0x2c6
0x266: V199 = GAS
0x267: V200 = SUB V199 0x2c6
0x268: V201 = CALL V200 V188 0x0 V182 V193 V182 0x20
0x269: V202 = ISZERO V201
0x26a: V203 = ISZERO V202
0x26b: V204 = 0x270
0x26e: JUMPI 0x270 V203
---
Entry stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V188, 0x18160ddd, V191, 0x20, V182, V193, V182, 0x0, V188]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V188, 0x18160ddd, V191]

================================

Block 0x26f
[0x26f:0x26f]
---
Predecessors: [0x262]
Successors: []
---
0x26f INVALID
---
0x26f: INVALID 
---
Entry stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V188, 0x18160ddd, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V188, 0x18160ddd, V191]

================================

Block 0x270
[0x270:0x2c0]
---
Predecessors: [0x262]
Successors: [0x2c1, 0x2c2]
---
0x270 JUMPDEST
0x271 POP
0x272 POP
0x273 POP
0x274 PUSH1 0x40
0x276 MLOAD
0x277 DUP1
0x278 MLOAD
0x279 SWAP1
0x27a POP
0x27b PUSH1 0x1
0x27d DUP14
0x27e PUSH1 0x1
0x280 PUSH1 0xa0
0x282 PUSH1 0x2
0x284 EXP
0x285 SUB
0x286 AND
0x287 PUSH4 0x19d1997a
0x28c PUSH1 0x0
0x28e PUSH1 0x40
0x290 MLOAD
0x291 PUSH1 0x20
0x293 ADD
0x294 MSTORE
0x295 PUSH1 0x40
0x297 MLOAD
0x298 DUP2
0x299 PUSH4 0xffffffff
0x29e AND
0x29f PUSH1 0xe0
0x2a1 PUSH1 0x2
0x2a3 EXP
0x2a4 MUL
0x2a5 DUP2
0x2a6 MSTORE
0x2a7 PUSH1 0x4
0x2a9 ADD
0x2aa DUP1
0x2ab SWAP1
0x2ac POP
0x2ad PUSH1 0x20
0x2af PUSH1 0x40
0x2b1 MLOAD
0x2b2 DUP1
0x2b3 DUP4
0x2b4 SUB
0x2b5 DUP2
0x2b6 PUSH1 0x0
0x2b8 DUP8
0x2b9 DUP1
0x2ba EXTCODESIZE
0x2bb ISZERO
0x2bc ISZERO
0x2bd PUSH2 0x2c2
0x2c0 JUMPI
---
0x270: JUMPDEST 
0x274: V205 = 0x40
0x276: V206 = M[0x40]
0x278: V207 = M[V206]
0x27b: V208 = 0x1
0x27e: V209 = 0x1
0x280: V210 = 0xa0
0x282: V211 = 0x2
0x284: V212 = EXP 0x2 0xa0
0x285: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x286: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x287: V215 = 0x19d1997a
0x28c: V216 = 0x0
0x28e: V217 = 0x40
0x290: V218 = M[0x40]
0x291: V219 = 0x20
0x293: V220 = ADD 0x20 V218
0x294: M[V220] = 0x0
0x295: V221 = 0x40
0x297: V222 = M[0x40]
0x299: V223 = 0xffffffff
0x29e: V224 = AND 0xffffffff 0x19d1997a
0x29f: V225 = 0xe0
0x2a1: V226 = 0x2
0x2a3: V227 = EXP 0x2 0xe0
0x2a4: V228 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x19d1997a
0x2a6: M[V222] = 0x19d1997a00000000000000000000000000000000000000000000000000000000
0x2a7: V229 = 0x4
0x2a9: V230 = ADD 0x4 V222
0x2ad: V231 = 0x20
0x2af: V232 = 0x40
0x2b1: V233 = M[0x40]
0x2b4: V234 = SUB V230 V233
0x2b6: V235 = 0x0
0x2ba: V236 = EXTCODESIZE V214
0x2bb: V237 = ISZERO V236
0x2bc: V238 = ISZERO V237
0x2bd: V239 = 0x2c2
0x2c0: JUMPI 0x2c2 V238
---
Entry stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V188, 0x18160ddd, V191]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V207, 0x1, V214, 0x19d1997a, V230, 0x20, V233, V234, V233, 0x0, V214]
Exit stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V207, 0x1, V214, 0x19d1997a, V230, 0x20, V233, V234, V233, 0x0, V214]

================================

Block 0x2c1
[0x2c1:0x2c1]
---
Predecessors: [0x270]
Successors: []
---
0x2c1 INVALID
---
0x2c1: INVALID 
---
Entry stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V207, 0x1, V214, 0x19d1997a, V230, 0x20, V233, V234, V233, 0x0, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V207, 0x1, V214, 0x19d1997a, V230, 0x20, V233, V234, V233, 0x0, V214]

================================

Block 0x2c2
[0x2c2:0x2ce]
---
Predecessors: [0x270]
Successors: [0x2cf, 0x2d0]
---
0x2c2 JUMPDEST
0x2c3 PUSH2 0x2c6
0x2c6 GAS
0x2c7 SUB
0x2c8 CALL
0x2c9 ISZERO
0x2ca ISZERO
0x2cb PUSH2 0x2d0
0x2ce JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V240 = 0x2c6
0x2c6: V241 = GAS
0x2c7: V242 = SUB V241 0x2c6
0x2c8: V243 = CALL V242 V214 0x0 V233 V234 V233 0x20
0x2c9: V244 = ISZERO V243
0x2ca: V245 = ISZERO V244
0x2cb: V246 = 0x2d0
0x2ce: JUMPI 0x2d0 V245
---
Entry stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V207, 0x1, V214, 0x19d1997a, V230, 0x20, V233, V234, V233, 0x0, V214]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V207, 0x1, V214, 0x19d1997a, V230]

================================

Block 0x2cf
[0x2cf:0x2cf]
---
Predecessors: [0x2c2]
Successors: []
---
0x2cf INVALID
---
0x2cf: INVALID 
---
Entry stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V207, 0x1, V214, 0x19d1997a, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V207, 0x1, V214, 0x19d1997a, V230]

================================

Block 0x2d0
[0x2d0:0x2e2]
---
Predecessors: [0x2c2]
Successors: [0x2e3, 0x2e8]
---
0x2d0 JUMPDEST
0x2d1 POP
0x2d2 POP
0x2d3 POP
0x2d4 PUSH1 0x40
0x2d6 MLOAD
0x2d7 DUP1
0x2d8 MLOAD
0x2d9 SWAP1
0x2da POP
0x2db SUB
0x2dc GT
0x2dd ISZERO
0x2de ISZERO
0x2df PUSH2 0x2e8
0x2e2 JUMPI
---
0x2d0: JUMPDEST 
0x2d4: V247 = 0x40
0x2d6: V248 = M[0x40]
0x2d8: V249 = M[V248]
0x2db: V250 = SUB V249 0x1
0x2dc: V251 = GT V250 V207
0x2dd: V252 = ISZERO V251
0x2de: V253 = ISZERO V252
0x2df: V254 = 0x2e8
0x2e2: JUMPI 0x2e8 V253
---
Entry stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V207, 0x1, V214, 0x19d1997a, V230]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x2e3
[0x2e3:0x2e7]
---
Predecessors: [0x2d0]
Successors: []
---
0x2e3 PUSH1 0x0
0x2e5 PUSH1 0x0
0x2e7 REVERT
---
0x2e3: V255 = 0x0
0x2e5: V256 = 0x0
0x2e7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x2e8
[0x2e8:0x334]
---
Predecessors: [0x2d0]
Successors: [0x335, 0x336]
---
0x2e8 JUMPDEST
0x2e9 DUP12
0x2ea PUSH1 0x1
0x2ec PUSH1 0xa0
0x2ee PUSH1 0x2
0x2f0 EXP
0x2f1 SUB
0x2f2 AND
0x2f3 PUSH4 0x3b428c9b
0x2f8 CALLVALUE
0x2f9 PUSH1 0x0
0x2fb PUSH1 0x40
0x2fd MLOAD
0x2fe PUSH1 0x20
0x300 ADD
0x301 MSTORE
0x302 PUSH1 0x40
0x304 MLOAD
0x305 DUP3
0x306 PUSH4 0xffffffff
0x30b AND
0x30c PUSH1 0xe0
0x30e PUSH1 0x2
0x310 EXP
0x311 MUL
0x312 DUP2
0x313 MSTORE
0x314 PUSH1 0x4
0x316 ADD
0x317 DUP1
0x318 DUP3
0x319 DUP2
0x31a MSTORE
0x31b PUSH1 0x20
0x31d ADD
0x31e SWAP2
0x31f POP
0x320 POP
0x321 PUSH1 0x20
0x323 PUSH1 0x40
0x325 MLOAD
0x326 DUP1
0x327 DUP4
0x328 SUB
0x329 DUP2
0x32a PUSH1 0x0
0x32c DUP8
0x32d DUP1
0x32e EXTCODESIZE
0x32f ISZERO
0x330 ISZERO
0x331 PUSH2 0x336
0x334 JUMPI
---
0x2e8: JUMPDEST 
0x2ea: V257 = 0x1
0x2ec: V258 = 0xa0
0x2ee: V259 = 0x2
0x2f0: V260 = EXP 0x2 0xa0
0x2f1: V261 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f2: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x2f3: V263 = 0x3b428c9b
0x2f8: V264 = CALLVALUE
0x2f9: V265 = 0x0
0x2fb: V266 = 0x40
0x2fd: V267 = M[0x40]
0x2fe: V268 = 0x20
0x300: V269 = ADD 0x20 V267
0x301: M[V269] = 0x0
0x302: V270 = 0x40
0x304: V271 = M[0x40]
0x306: V272 = 0xffffffff
0x30b: V273 = AND 0xffffffff 0x3b428c9b
0x30c: V274 = 0xe0
0x30e: V275 = 0x2
0x310: V276 = EXP 0x2 0xe0
0x311: V277 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3b428c9b
0x313: M[V271] = 0x3b428c9b00000000000000000000000000000000000000000000000000000000
0x314: V278 = 0x4
0x316: V279 = ADD 0x4 V271
0x31a: M[V279] = V264
0x31b: V280 = 0x20
0x31d: V281 = ADD 0x20 V279
0x321: V282 = 0x20
0x323: V283 = 0x40
0x325: V284 = M[0x40]
0x328: V285 = SUB V281 V284
0x32a: V286 = 0x0
0x32e: V287 = EXTCODESIZE V262
0x32f: V288 = ISZERO V287
0x330: V289 = ISZERO V288
0x331: V290 = 0x336
0x334: JUMPI 0x336 V289
---
Entry stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V262, 0x3b428c9b, V281, 0x20, V284, V285, V284, 0x0, V262]
Exit stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V262, 0x3b428c9b, V281, 0x20, V284, V285, V284, 0x0, V262]

================================

Block 0x335
[0x335:0x335]
---
Predecessors: [0x2e8]
Successors: []
---
0x335 INVALID
---
0x335: INVALID 
---
Entry stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V262, 0x3b428c9b, V281, 0x20, V284, V285, V284, 0x0, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V262, 0x3b428c9b, V281, 0x20, V284, V285, V284, 0x0, V262]

================================

Block 0x336
[0x336:0x342]
---
Predecessors: [0x2e8]
Successors: [0x343, 0x344]
---
0x336 JUMPDEST
0x337 PUSH2 0x2c6
0x33a GAS
0x33b SUB
0x33c CALL
0x33d ISZERO
0x33e ISZERO
0x33f PUSH2 0x344
0x342 JUMPI
---
0x336: JUMPDEST 
0x337: V291 = 0x2c6
0x33a: V292 = GAS
0x33b: V293 = SUB V292 0x2c6
0x33c: V294 = CALL V293 V262 0x0 V284 V285 V284 0x20
0x33d: V295 = ISZERO V294
0x33e: V296 = ISZERO V295
0x33f: V297 = 0x344
0x342: JUMPI 0x344 V296
---
Entry stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V262, 0x3b428c9b, V281, 0x20, V284, V285, V284, 0x0, V262]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V262, 0x3b428c9b, V281]

================================

Block 0x343
[0x343:0x343]
---
Predecessors: [0x336]
Successors: []
---
0x343 INVALID
---
0x343: INVALID 
---
Entry stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V262, 0x3b428c9b, V281]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V262, 0x3b428c9b, V281]

================================

Block 0x344
[0x344:0x356]
---
Predecessors: [0x336]
Successors: [0x357, 0x35c]
---
0x344 JUMPDEST
0x345 POP
0x346 POP
0x347 PUSH1 0x40
0x349 MLOAD
0x34a MLOAD
0x34b SWAP12
0x34c POP
0x34d POP
0x34e PUSH1 0x1
0x350 DUP12
0x351 LT
0x352 ISZERO
0x353 PUSH2 0x35c
0x356 JUMPI
---
0x344: JUMPDEST 
0x347: V298 = 0x40
0x349: V299 = M[0x40]
0x34a: V300 = M[V299]
0x34e: V301 = 0x1
0x351: V302 = LT V300 0x1
0x352: V303 = ISZERO V302
0x353: V304 = 0x35c
0x356: JUMPI 0x35c V303
---
Entry stack: [V12, 0x86, V188, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V262, 0x3b428c9b, V281]
Stack pops: 14
Stack additions: [V300, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]
Exit stack: [V12, 0x86, V188, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x357
[0x357:0x35b]
---
Predecessors: [0x344]
Successors: []
---
0x357 PUSH1 0x0
0x359 PUSH1 0x0
0x35b REVERT
---
0x357: V305 = 0x0
0x359: V306 = 0x0
0x35b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x86, V188, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x35c
[0x35c:0x3a3]
---
Predecessors: [0x344]
Successors: [0x3a4, 0x3a5]
---
0x35c JUMPDEST
0x35d DUP11
0x35e SWAP10
0x35f POP
0x360 DUP12
0x361 PUSH1 0x1
0x363 PUSH1 0xa0
0x365 PUSH1 0x2
0x367 EXP
0x368 SUB
0x369 AND
0x36a PUSH4 0x19d1997a
0x36f PUSH1 0x0
0x371 PUSH1 0x40
0x373 MLOAD
0x374 PUSH1 0x20
0x376 ADD
0x377 MSTORE
0x378 PUSH1 0x40
0x37a MLOAD
0x37b DUP2
0x37c PUSH4 0xffffffff
0x381 AND
0x382 PUSH1 0xe0
0x384 PUSH1 0x2
0x386 EXP
0x387 MUL
0x388 DUP2
0x389 MSTORE
0x38a PUSH1 0x4
0x38c ADD
0x38d DUP1
0x38e SWAP1
0x38f POP
0x390 PUSH1 0x20
0x392 PUSH1 0x40
0x394 MLOAD
0x395 DUP1
0x396 DUP4
0x397 SUB
0x398 DUP2
0x399 PUSH1 0x0
0x39b DUP8
0x39c DUP1
0x39d EXTCODESIZE
0x39e ISZERO
0x39f ISZERO
0x3a0 PUSH2 0x3a5
0x3a3 JUMPI
---
0x35c: JUMPDEST 
0x361: V307 = 0x1
0x363: V308 = 0xa0
0x365: V309 = 0x2
0x367: V310 = EXP 0x2 0xa0
0x368: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x369: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x36a: V313 = 0x19d1997a
0x36f: V314 = 0x0
0x371: V315 = 0x40
0x373: V316 = M[0x40]
0x374: V317 = 0x20
0x376: V318 = ADD 0x20 V316
0x377: M[V318] = 0x0
0x378: V319 = 0x40
0x37a: V320 = M[0x40]
0x37c: V321 = 0xffffffff
0x381: V322 = AND 0xffffffff 0x19d1997a
0x382: V323 = 0xe0
0x384: V324 = 0x2
0x386: V325 = EXP 0x2 0xe0
0x387: V326 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x19d1997a
0x389: M[V320] = 0x19d1997a00000000000000000000000000000000000000000000000000000000
0x38a: V327 = 0x4
0x38c: V328 = ADD 0x4 V320
0x390: V329 = 0x20
0x392: V330 = 0x40
0x394: V331 = M[0x40]
0x397: V332 = SUB V328 V331
0x399: V333 = 0x0
0x39d: V334 = EXTCODESIZE V312
0x39e: V335 = ISZERO V334
0x39f: V336 = ISZERO V335
0x3a0: V337 = 0x3a5
0x3a3: JUMPI 0x3a5 V336
---
Entry stack: [V12, 0x86, V188, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S10, S8, S7, S6, S5, S4, S3, S2, S1, S0, V312, 0x19d1997a, V328, 0x20, V331, V332, V331, 0x0, V312]
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V312, 0x19d1997a, V328, 0x20, V331, V332, V331, 0x0, V312]

================================

Block 0x3a4
[0x3a4:0x3a4]
---
Predecessors: [0x35c]
Successors: []
---
0x3a4 INVALID
---
0x3a4: INVALID 
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V312, 0x19d1997a, V328, 0x20, V331, V332, V331, 0x0, V312]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V312, 0x19d1997a, V328, 0x20, V331, V332, V331, 0x0, V312]

================================

Block 0x3a5
[0x3a5:0x3b1]
---
Predecessors: [0x35c]
Successors: [0x3b2, 0x3b3]
---
0x3a5 JUMPDEST
0x3a6 PUSH2 0x2c6
0x3a9 GAS
0x3aa SUB
0x3ab CALL
0x3ac ISZERO
0x3ad ISZERO
0x3ae PUSH2 0x3b3
0x3b1 JUMPI
---
0x3a5: JUMPDEST 
0x3a6: V338 = 0x2c6
0x3a9: V339 = GAS
0x3aa: V340 = SUB V339 0x2c6
0x3ab: V341 = CALL V340 V312 0x0 V331 V332 V331 0x20
0x3ac: V342 = ISZERO V341
0x3ad: V343 = ISZERO V342
0x3ae: V344 = 0x3b3
0x3b1: JUMPI 0x3b3 V343
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V312, 0x19d1997a, V328, 0x20, V331, V332, V331, 0x0, V312]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V312, 0x19d1997a, V328]

================================

Block 0x3b2
[0x3b2:0x3b2]
---
Predecessors: [0x3a5]
Successors: []
---
0x3b2 INVALID
---
0x3b2: INVALID 
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V312, 0x19d1997a, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V312, 0x19d1997a, V328]

================================

Block 0x3b3
[0x3b3:0x403]
---
Predecessors: [0x3a5]
Successors: [0x404, 0x405]
---
0x3b3 JUMPDEST
0x3b4 POP
0x3b5 POP
0x3b6 POP
0x3b7 PUSH1 0x40
0x3b9 MLOAD
0x3ba DUP1
0x3bb MLOAD
0x3bc SWAP1
0x3bd POP
0x3be DUP11
0x3bf DUP13
0x3c0 DUP15
0x3c1 PUSH1 0x1
0x3c3 PUSH1 0xa0
0x3c5 PUSH1 0x2
0x3c7 EXP
0x3c8 SUB
0x3c9 AND
0x3ca PUSH4 0x18160ddd
0x3cf PUSH1 0x0
0x3d1 PUSH1 0x40
0x3d3 MLOAD
0x3d4 PUSH1 0x20
0x3d6 ADD
0x3d7 MSTORE
0x3d8 PUSH1 0x40
0x3da MLOAD
0x3db DUP2
0x3dc PUSH4 0xffffffff
0x3e1 AND
0x3e2 PUSH1 0xe0
0x3e4 PUSH1 0x2
0x3e6 EXP
0x3e7 MUL
0x3e8 DUP2
0x3e9 MSTORE
0x3ea PUSH1 0x4
0x3ec ADD
0x3ed DUP1
0x3ee SWAP1
0x3ef POP
0x3f0 PUSH1 0x20
0x3f2 PUSH1 0x40
0x3f4 MLOAD
0x3f5 DUP1
0x3f6 DUP4
0x3f7 SUB
0x3f8 DUP2
0x3f9 PUSH1 0x0
0x3fb DUP8
0x3fc DUP1
0x3fd EXTCODESIZE
0x3fe ISZERO
0x3ff ISZERO
0x400 PUSH2 0x405
0x403 JUMPI
---
0x3b3: JUMPDEST 
0x3b7: V345 = 0x40
0x3b9: V346 = M[0x40]
0x3bb: V347 = M[V346]
0x3c1: V348 = 0x1
0x3c3: V349 = 0xa0
0x3c5: V350 = 0x2
0x3c7: V351 = EXP 0x2 0xa0
0x3c8: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c9: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x3ca: V354 = 0x18160ddd
0x3cf: V355 = 0x0
0x3d1: V356 = 0x40
0x3d3: V357 = M[0x40]
0x3d4: V358 = 0x20
0x3d6: V359 = ADD 0x20 V357
0x3d7: M[V359] = 0x0
0x3d8: V360 = 0x40
0x3da: V361 = M[0x40]
0x3dc: V362 = 0xffffffff
0x3e1: V363 = AND 0xffffffff 0x18160ddd
0x3e2: V364 = 0xe0
0x3e4: V365 = 0x2
0x3e6: V366 = EXP 0x2 0xe0
0x3e7: V367 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0x3e9: M[V361] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x3ea: V368 = 0x4
0x3ec: V369 = ADD 0x4 V361
0x3f0: V370 = 0x20
0x3f2: V371 = 0x40
0x3f4: V372 = M[0x40]
0x3f7: V373 = SUB V369 V372
0x3f9: V374 = 0x0
0x3fd: V375 = EXTCODESIZE V353
0x3fe: V376 = ISZERO V375
0x3ff: V377 = ISZERO V376
0x400: V378 = 0x405
0x403: JUMPI 0x405 V377
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V312, 0x19d1997a, V328]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V347, S12, S13, V353, 0x18160ddd, V369, 0x20, V372, V373, V372, 0x0, V353]
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V347, V300, V300, V353, 0x18160ddd, V369, 0x20, V372, V373, V372, 0x0, V353]

================================

Block 0x404
[0x404:0x404]
---
Predecessors: [0x3b3]
Successors: []
---
0x404 INVALID
---
0x404: INVALID 
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V347, V300, V300, V353, 0x18160ddd, V369, 0x20, V372, V373, V372, 0x0, V353]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V347, V300, V300, V353, 0x18160ddd, V369, 0x20, V372, V373, V372, 0x0, V353]

================================

Block 0x405
[0x405:0x411]
---
Predecessors: [0x3b3]
Successors: [0x412, 0x413]
---
0x405 JUMPDEST
0x406 PUSH2 0x2c6
0x409 GAS
0x40a SUB
0x40b CALL
0x40c ISZERO
0x40d ISZERO
0x40e PUSH2 0x413
0x411 JUMPI
---
0x405: JUMPDEST 
0x406: V379 = 0x2c6
0x409: V380 = GAS
0x40a: V381 = SUB V380 0x2c6
0x40b: V382 = CALL V381 V353 0x0 V372 V373 V372 0x20
0x40c: V383 = ISZERO V382
0x40d: V384 = ISZERO V383
0x40e: V385 = 0x413
0x411: JUMPI 0x413 V384
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V347, V300, V300, V353, 0x18160ddd, V369, 0x20, V372, V373, V372, 0x0, V353]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V347, V300, V300, V353, 0x18160ddd, V369]

================================

Block 0x412
[0x412:0x412]
---
Predecessors: [0x405]
Successors: []
---
0x412 INVALID
---
0x412: INVALID 
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V347, V300, V300, V353, 0x18160ddd, V369]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V347, V300, V300, V353, 0x18160ddd, V369]

================================

Block 0x413
[0x413:0x425]
---
Predecessors: [0x405]
Successors: [0x426, 0x561]
---
0x413 JUMPDEST
0x414 POP
0x415 POP
0x416 POP
0x417 PUSH1 0x40
0x419 MLOAD
0x41a DUP1
0x41b MLOAD
0x41c SWAP1
0x41d POP
0x41e ADD
0x41f ADD
0x420 GT
0x421 ISZERO
0x422 PUSH2 0x561
0x425 JUMPI
---
0x413: JUMPDEST 
0x417: V386 = 0x40
0x419: V387 = M[0x40]
0x41b: V388 = M[V387]
0x41e: V389 = ADD V388 V300
0x41f: V390 = ADD V389 V300
0x420: V391 = GT V390 V347
0x421: V392 = ISZERO V391
0x422: V393 = 0x561
0x425: JUMPI 0x561 V392
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V347, V300, V300, V353, 0x18160ddd, V369]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x426
[0x426:0x46e]
---
Predecessors: [0x413]
Successors: [0x46f, 0x470]
---
0x426 DUP11
0x427 SWAP6
0x428 POP
0x429 PUSH1 0x2
0x42b DUP13
0x42c PUSH1 0x1
0x42e PUSH1 0xa0
0x430 PUSH1 0x2
0x432 EXP
0x433 SUB
0x434 AND
0x435 PUSH4 0x18160ddd
0x43a PUSH1 0x0
0x43c PUSH1 0x40
0x43e MLOAD
0x43f PUSH1 0x20
0x441 ADD
0x442 MSTORE
0x443 PUSH1 0x40
0x445 MLOAD
0x446 DUP2
0x447 PUSH4 0xffffffff
0x44c AND
0x44d PUSH1 0xe0
0x44f PUSH1 0x2
0x451 EXP
0x452 MUL
0x453 DUP2
0x454 MSTORE
0x455 PUSH1 0x4
0x457 ADD
0x458 DUP1
0x459 SWAP1
0x45a POP
0x45b PUSH1 0x20
0x45d PUSH1 0x40
0x45f MLOAD
0x460 DUP1
0x461 DUP4
0x462 SUB
0x463 DUP2
0x464 PUSH1 0x0
0x466 DUP8
0x467 DUP1
0x468 EXTCODESIZE
0x469 ISZERO
0x46a ISZERO
0x46b PUSH2 0x470
0x46e JUMPI
---
0x429: V394 = 0x2
0x42c: V395 = 0x1
0x42e: V396 = 0xa0
0x430: V397 = 0x2
0x432: V398 = EXP 0x2 0xa0
0x433: V399 = SUB 0x10000000000000000000000000000000000000000 0x1
0x434: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x435: V401 = 0x18160ddd
0x43a: V402 = 0x0
0x43c: V403 = 0x40
0x43e: V404 = M[0x40]
0x43f: V405 = 0x20
0x441: V406 = ADD 0x20 V404
0x442: M[V406] = 0x0
0x443: V407 = 0x40
0x445: V408 = M[0x40]
0x447: V409 = 0xffffffff
0x44c: V410 = AND 0xffffffff 0x18160ddd
0x44d: V411 = 0xe0
0x44f: V412 = 0x2
0x451: V413 = EXP 0x2 0xe0
0x452: V414 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0x454: M[V408] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x455: V415 = 0x4
0x457: V416 = ADD 0x4 V408
0x45b: V417 = 0x20
0x45d: V418 = 0x40
0x45f: V419 = M[0x40]
0x462: V420 = SUB V416 V419
0x464: V421 = 0x0
0x468: V422 = EXTCODESIZE V400
0x469: V423 = ISZERO V422
0x46a: V424 = ISZERO V423
0x46b: V425 = 0x470
0x46e: JUMPI 0x470 V424
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S10, S4, S3, S2, S1, S0, 0x2, V400, 0x18160ddd, V416, 0x20, V419, V420, V419, 0x0, V400]
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V400, 0x18160ddd, V416, 0x20, V419, V420, V419, 0x0, V400]

================================

Block 0x46f
[0x46f:0x46f]
---
Predecessors: [0x426]
Successors: []
---
0x46f INVALID
---
0x46f: INVALID 
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V400, 0x18160ddd, V416, 0x20, V419, V420, V419, 0x0, V400]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V400, 0x18160ddd, V416, 0x20, V419, V420, V419, 0x0, V400]

================================

Block 0x470
[0x470:0x47c]
---
Predecessors: [0x426]
Successors: [0x47d, 0x47e]
---
0x470 JUMPDEST
0x471 PUSH2 0x2c6
0x474 GAS
0x475 SUB
0x476 CALL
0x477 ISZERO
0x478 ISZERO
0x479 PUSH2 0x47e
0x47c JUMPI
---
0x470: JUMPDEST 
0x471: V426 = 0x2c6
0x474: V427 = GAS
0x475: V428 = SUB V427 0x2c6
0x476: V429 = CALL V428 V400 0x0 V419 V420 V419 0x20
0x477: V430 = ISZERO V429
0x478: V431 = ISZERO V430
0x479: V432 = 0x47e
0x47c: JUMPI 0x47e V431
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V400, 0x18160ddd, V416, 0x20, V419, V420, V419, 0x0, V400]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V400, 0x18160ddd, V416]

================================

Block 0x47d
[0x47d:0x47d]
---
Predecessors: [0x470]
Successors: []
---
0x47d INVALID
---
0x47d: INVALID 
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V400, 0x18160ddd, V416]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V400, 0x18160ddd, V416]

================================

Block 0x47e
[0x47e:0x4cc]
---
Predecessors: [0x470]
Successors: [0x4cd, 0x4ce]
---
0x47e JUMPDEST
0x47f POP
0x480 POP
0x481 POP
0x482 PUSH1 0x40
0x484 MLOAD
0x485 DUP1
0x486 MLOAD
0x487 SWAP1
0x488 POP
0x489 DUP14
0x48a PUSH1 0x1
0x48c PUSH1 0xa0
0x48e PUSH1 0x2
0x490 EXP
0x491 SUB
0x492 AND
0x493 PUSH4 0x19d1997a
0x498 PUSH1 0x0
0x49a PUSH1 0x40
0x49c MLOAD
0x49d PUSH1 0x20
0x49f ADD
0x4a0 MSTORE
0x4a1 PUSH1 0x40
0x4a3 MLOAD
0x4a4 DUP2
0x4a5 PUSH4 0xffffffff
0x4aa AND
0x4ab PUSH1 0xe0
0x4ad PUSH1 0x2
0x4af EXP
0x4b0 MUL
0x4b1 DUP2
0x4b2 MSTORE
0x4b3 PUSH1 0x4
0x4b5 ADD
0x4b6 DUP1
0x4b7 SWAP1
0x4b8 POP
0x4b9 PUSH1 0x20
0x4bb PUSH1 0x40
0x4bd MLOAD
0x4be DUP1
0x4bf DUP4
0x4c0 SUB
0x4c1 DUP2
0x4c2 PUSH1 0x0
0x4c4 DUP8
0x4c5 DUP1
0x4c6 EXTCODESIZE
0x4c7 ISZERO
0x4c8 ISZERO
0x4c9 PUSH2 0x4ce
0x4cc JUMPI
---
0x47e: JUMPDEST 
0x482: V433 = 0x40
0x484: V434 = M[0x40]
0x486: V435 = M[V434]
0x48a: V436 = 0x1
0x48c: V437 = 0xa0
0x48e: V438 = 0x2
0x490: V439 = EXP 0x2 0xa0
0x491: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x492: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x493: V442 = 0x19d1997a
0x498: V443 = 0x0
0x49a: V444 = 0x40
0x49c: V445 = M[0x40]
0x49d: V446 = 0x20
0x49f: V447 = ADD 0x20 V445
0x4a0: M[V447] = 0x0
0x4a1: V448 = 0x40
0x4a3: V449 = M[0x40]
0x4a5: V450 = 0xffffffff
0x4aa: V451 = AND 0xffffffff 0x19d1997a
0x4ab: V452 = 0xe0
0x4ad: V453 = 0x2
0x4af: V454 = EXP 0x2 0xe0
0x4b0: V455 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x19d1997a
0x4b2: M[V449] = 0x19d1997a00000000000000000000000000000000000000000000000000000000
0x4b3: V456 = 0x4
0x4b5: V457 = ADD 0x4 V449
0x4b9: V458 = 0x20
0x4bb: V459 = 0x40
0x4bd: V460 = M[0x40]
0x4c0: V461 = SUB V457 V460
0x4c2: V462 = 0x0
0x4c6: V463 = EXTCODESIZE V441
0x4c7: V464 = ISZERO V463
0x4c8: V465 = ISZERO V464
0x4c9: V466 = 0x4ce
0x4cc: JUMPI 0x4ce V465
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V400, 0x18160ddd, V416]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V435, V441, 0x19d1997a, V457, 0x20, V460, V461, V460, 0x0, V441]
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V435, V441, 0x19d1997a, V457, 0x20, V460, V461, V460, 0x0, V441]

================================

Block 0x4cd
[0x4cd:0x4cd]
---
Predecessors: [0x47e]
Successors: []
---
0x4cd INVALID
---
0x4cd: INVALID 
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V435, V441, 0x19d1997a, V457, 0x20, V460, V461, V460, 0x0, V441]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V435, V441, 0x19d1997a, V457, 0x20, V460, V461, V460, 0x0, V441]

================================

Block 0x4ce
[0x4ce:0x4da]
---
Predecessors: [0x47e]
Successors: [0x4db, 0x4dc]
---
0x4ce JUMPDEST
0x4cf PUSH2 0x2c6
0x4d2 GAS
0x4d3 SUB
0x4d4 CALL
0x4d5 ISZERO
0x4d6 ISZERO
0x4d7 PUSH2 0x4dc
0x4da JUMPI
---
0x4ce: JUMPDEST 
0x4cf: V467 = 0x2c6
0x4d2: V468 = GAS
0x4d3: V469 = SUB V468 0x2c6
0x4d4: V470 = CALL V469 V441 0x0 V460 V461 V460 0x20
0x4d5: V471 = ISZERO V470
0x4d6: V472 = ISZERO V471
0x4d7: V473 = 0x4dc
0x4da: JUMPI 0x4dc V472
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V435, V441, 0x19d1997a, V457, 0x20, V460, V461, V460, 0x0, V441]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V435, V441, 0x19d1997a, V457]

================================

Block 0x4db
[0x4db:0x4db]
---
Predecessors: [0x4ce]
Successors: []
---
0x4db INVALID
---
0x4db: INVALID 
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V435, V441, 0x19d1997a, V457]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V435, V441, 0x19d1997a, V457]

================================

Block 0x4dc
[0x4dc:0x4ee]
---
Predecessors: [0x4ce]
Successors: [0x4ef, 0x4f0]
---
0x4dc JUMPDEST
0x4dd POP
0x4de POP
0x4df POP
0x4e0 PUSH1 0x40
0x4e2 MLOAD
0x4e3 DUP1
0x4e4 MLOAD
0x4e5 SWAP1
0x4e6 POP
0x4e7 SUB
0x4e8 DUP2
0x4e9 ISZERO
0x4ea ISZERO
0x4eb PUSH2 0x4f0
0x4ee JUMPI
---
0x4dc: JUMPDEST 
0x4e0: V474 = 0x40
0x4e2: V475 = M[0x40]
0x4e4: V476 = M[V475]
0x4e7: V477 = SUB V476 V435
0x4e9: V478 = ISZERO 0x2
0x4ea: V479 = ISZERO 0x0
0x4eb: V480 = 0x4f0
0x4ee: JUMPI 0x4f0 0x1
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V435, V441, 0x19d1997a, V457]
Stack pops: 5
Stack additions: [S4, V477]
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V477]

================================

Block 0x4ef
[0x4ef:0x4ef]
---
Predecessors: [0x4dc]
Successors: []
---
0x4ef INVALID
---
0x4ef: INVALID 
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V477]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V477]

================================

Block 0x4f0
[0x4f0:0x547]
---
Predecessors: [0x4dc]
Successors: [0x548, 0x549]
---
0x4f0 JUMPDEST
0x4f1 DIV
0x4f2 SWAP11
0x4f3 POP
0x4f4 DUP11
0x4f5 SWAP10
0x4f6 POP
0x4f7 DUP11
0x4f8 DUP7
0x4f9 SUB
0x4fa SWAP5
0x4fb POP
0x4fc DUP12
0x4fd PUSH1 0x1
0x4ff PUSH1 0xa0
0x501 PUSH1 0x2
0x503 EXP
0x504 SUB
0x505 AND
0x506 PUSH4 0x56db3df0
0x50b DUP7
0x50c PUSH1 0x0
0x50e PUSH1 0x40
0x510 MLOAD
0x511 PUSH1 0x20
0x513 ADD
0x514 MSTORE
0x515 PUSH1 0x40
0x517 MLOAD
0x518 DUP3
0x519 PUSH4 0xffffffff
0x51e AND
0x51f PUSH1 0xe0
0x521 PUSH1 0x2
0x523 EXP
0x524 MUL
0x525 DUP2
0x526 MSTORE
0x527 PUSH1 0x4
0x529 ADD
0x52a DUP1
0x52b DUP3
0x52c DUP2
0x52d MSTORE
0x52e PUSH1 0x20
0x530 ADD
0x531 SWAP2
0x532 POP
0x533 POP
0x534 PUSH1 0x20
0x536 PUSH1 0x40
0x538 MLOAD
0x539 DUP1
0x53a DUP4
0x53b SUB
0x53c DUP2
0x53d PUSH1 0x0
0x53f DUP8
0x540 DUP1
0x541 EXTCODESIZE
0x542 ISZERO
0x543 ISZERO
0x544 PUSH2 0x549
0x547 JUMPI
---
0x4f0: JUMPDEST 
0x4f1: V481 = DIV V477 0x2
0x4f9: V482 = SUB V300 V481
0x4fd: V483 = 0x1
0x4ff: V484 = 0xa0
0x501: V485 = 0x2
0x503: V486 = EXP 0x2 0xa0
0x504: V487 = SUB 0x10000000000000000000000000000000000000000 0x1
0x505: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x506: V489 = 0x56db3df0
0x50c: V490 = 0x0
0x50e: V491 = 0x40
0x510: V492 = M[0x40]
0x511: V493 = 0x20
0x513: V494 = ADD 0x20 V492
0x514: M[V494] = 0x0
0x515: V495 = 0x40
0x517: V496 = M[0x40]
0x519: V497 = 0xffffffff
0x51e: V498 = AND 0xffffffff 0x56db3df0
0x51f: V499 = 0xe0
0x521: V500 = 0x2
0x523: V501 = EXP 0x2 0xe0
0x524: V502 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x56db3df0
0x526: M[V496] = 0x56db3df000000000000000000000000000000000000000000000000000000000
0x527: V503 = 0x4
0x529: V504 = ADD 0x4 V496
0x52d: M[V504] = V482
0x52e: V505 = 0x20
0x530: V506 = ADD 0x20 V504
0x534: V507 = 0x20
0x536: V508 = 0x40
0x538: V509 = M[0x40]
0x53b: V510 = SUB V506 V509
0x53d: V511 = 0x0
0x541: V512 = EXTCODESIZE V488
0x542: V513 = ISZERO V512
0x543: V514 = ISZERO V513
0x544: V515 = 0x549
0x547: JUMPI 0x549 V514
---
Entry stack: [V12, 0x86, V188, V300, V300, 0x0, 0x0, 0x0, V300, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V477]
Stack pops: 14
Stack additions: [S13, V481, V481, S10, S9, S8, S7, V482, S5, S4, S3, S2, V488, 0x56db3df0, V506, 0x20, V509, V510, V509, 0x0, V488]
Exit stack: [V12, 0x86, V188, V481, V481, 0x0, 0x0, 0x0, V300, V482, 0x0, 0x0, 0x0, 0x0, V488, 0x56db3df0, V506, 0x20, V509, V510, V509, 0x0, V488]

================================

Block 0x548
[0x548:0x548]
---
Predecessors: [0x4f0]
Successors: []
---
0x548 INVALID
---
0x548: INVALID 
---
Entry stack: [V12, 0x86, V188, V481, V481, 0x0, 0x0, 0x0, V300, V482, 0x0, 0x0, 0x0, 0x0, V488, 0x56db3df0, V506, 0x20, V509, V510, V509, 0x0, V488]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, V481, V481, 0x0, 0x0, 0x0, V300, V482, 0x0, 0x0, 0x0, 0x0, V488, 0x56db3df0, V506, 0x20, V509, V510, V509, 0x0, V488]

================================

Block 0x549
[0x549:0x555]
---
Predecessors: [0x4f0]
Successors: [0x556, 0x557]
---
0x549 JUMPDEST
0x54a PUSH2 0x2c6
0x54d GAS
0x54e SUB
0x54f CALL
0x550 ISZERO
0x551 ISZERO
0x552 PUSH2 0x557
0x555 JUMPI
---
0x549: JUMPDEST 
0x54a: V516 = 0x2c6
0x54d: V517 = GAS
0x54e: V518 = SUB V517 0x2c6
0x54f: V519 = CALL V518 V488 0x0 V509 V510 V509 0x20
0x550: V520 = ISZERO V519
0x551: V521 = ISZERO V520
0x552: V522 = 0x557
0x555: JUMPI 0x557 V521
---
Entry stack: [V12, 0x86, V188, V481, V481, 0x0, 0x0, 0x0, V300, V482, 0x0, 0x0, 0x0, 0x0, V488, 0x56db3df0, V506, 0x20, V509, V510, V509, 0x0, V488]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x86, V188, V481, V481, 0x0, 0x0, 0x0, V300, V482, 0x0, 0x0, 0x0, 0x0, V488, 0x56db3df0, V506]

================================

Block 0x556
[0x556:0x556]
---
Predecessors: [0x549]
Successors: []
---
0x556 INVALID
---
0x556: INVALID 
---
Entry stack: [V12, 0x86, V188, V481, V481, 0x0, 0x0, 0x0, V300, V482, 0x0, 0x0, 0x0, 0x0, V488, 0x56db3df0, V506]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, V481, V481, 0x0, 0x0, 0x0, V300, V482, 0x0, 0x0, 0x0, 0x0, V488, 0x56db3df0, V506]

================================

Block 0x557
[0x557:0x560]
---
Predecessors: [0x549]
Successors: [0x561]
---
0x557 JUMPDEST
0x558 POP
0x559 POP
0x55a PUSH1 0x40
0x55c MLOAD
0x55d MLOAD
0x55e SWAP8
0x55f POP
0x560 POP
---
0x557: JUMPDEST 
0x55a: V523 = 0x40
0x55c: V524 = M[0x40]
0x55d: V525 = M[V524]
---
Entry stack: [V12, 0x86, V188, V481, V481, 0x0, 0x0, 0x0, V300, V482, 0x0, 0x0, 0x0, 0x0, V488, 0x56db3df0, V506]
Stack pops: 10
Stack additions: [V525, S8, S7, S6, S5, S4, S3]
Exit stack: [V12, 0x86, V188, V481, V481, 0x0, 0x0, V525, V300, V482, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x561
[0x561:0x570]
---
Predecessors: [0x413, 0x557]
Successors: [0x571, 0x578]
---
0x561 JUMPDEST
0x562 DUP7
0x563 CALLVALUE
0x564 SUB
0x565 SWAP4
0x566 POP
0x567 PUSH1 0x4
0x569 SLOAD
0x56a TIMESTAMP
0x56b GT
0x56c ISZERO
0x56d PUSH2 0x578
0x570 JUMPI
---
0x561: JUMPDEST 
0x563: V526 = CALLVALUE
0x564: V527 = SUB V526 S6
0x567: V528 = 0x4
0x569: V529 = S[0x4]
0x56a: V530 = TIMESTAMP
0x56b: V531 = GT V530 V529
0x56c: V532 = ISZERO V531
0x56d: V533 = 0x578
0x570: JUMPI 0x578 V532
---
Entry stack: [V12, 0x86, V188, S10, S9, 0x0, 0x0, S6, S5, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, V527, S2, S1, S0]
Exit stack: [V12, 0x86, V188, S10, S9, 0x0, 0x0, S6, S5, S4, V527, 0x0, 0x0, 0x0]

================================

Block 0x571
[0x571:0x577]
---
Predecessors: [0x561]
Successors: [0x60f]
---
0x571 DUP4
0x572 SWAP9
0x573 POP
0x574 PUSH2 0x60f
0x577 JUMP
---
0x574: V534 = 0x60f
0x577: JUMP 0x60f
---
Entry stack: [V12, 0x86, V188, S10, S9, 0x0, 0x0, S6, S5, S4, V527, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S3, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x86, V188, S10, S9, V527, 0x0, S6, S5, S4, V527, 0x0, 0x0, 0x0]

================================

Block 0x578
[0x578:0x57c]
---
Predecessors: [0x561]
Successors: [0x57d]
---
0x578 JUMPDEST
0x579 PUSH1 0x0
0x57b SWAP2
0x57c POP
---
0x578: JUMPDEST 
0x579: V535 = 0x0
---
Entry stack: [V12, 0x86, V188, S10, S9, 0x0, 0x0, S6, S5, S4, V527, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0x86, V188, S10, S9, 0x0, 0x0, S6, S5, S4, V527, 0x0, 0x0, 0x0]

================================

Block 0x57d
[0x57d:0x589]
---
Predecessors: [0x578, 0x5fe]
Successors: [0x58a, 0x609]
---
0x57d JUMPDEST
0x57e PUSH1 0x9
0x580 DUP3
0x581 PUSH1 0xff
0x583 AND
0x584 LT
0x585 ISZERO
0x586 PUSH2 0x609
0x589 JUMPI
---
0x57d: JUMPDEST 
0x57e: V536 = 0x9
0x581: V537 = 0xff
0x583: V538 = AND 0xff S1
0x584: V539 = LT V538 0x9
0x585: V540 = ISZERO V539
0x586: V541 = 0x609
0x589: JUMPI 0x609 V540
---
Entry stack: [V12, 0x86, V188, S10, S9, 0x0, S7, S6, S5, S4, V527, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x86, V188, S10, S9, 0x0, S7, S6, S5, S4, V527, S2, S1, 0x0]

================================

Block 0x58a
[0x58a:0x598]
---
Predecessors: [0x57d]
Successors: [0x599, 0x59a]
---
0x58a TIMESTAMP
0x58b PUSH1 0x5
0x58d PUSH1 0xff
0x58f DUP5
0x590 AND
0x591 PUSH1 0x9
0x593 DUP2
0x594 LT
0x595 PUSH2 0x59a
0x598 JUMPI
---
0x58a: V542 = TIMESTAMP
0x58b: V543 = 0x5
0x58d: V544 = 0xff
0x590: V545 = AND S1 0xff
0x591: V546 = 0x9
0x594: V547 = LT V545 0x9
0x595: V548 = 0x59a
0x598: JUMPI 0x59a V547
---
Entry stack: [V12, 0x86, V188, S10, S9, 0x0, S7, S6, S5, S4, V527, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V542, 0x5, V545]
Exit stack: [V12, 0x86, V188, S10, S9, 0x0, S7, S6, S5, S4, V527, S2, S1, 0x0, V542, 0x5, V545]

================================

Block 0x599
[0x599:0x599]
---
Predecessors: [0x58a]
Successors: []
---
0x599 INVALID
---
0x599: INVALID 
---
Entry stack: [V12, 0x86, V188, S13, S12, 0x0, S10, S9, S8, S7, V527, S5, S4, 0x0, V542, 0x5, V545]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, S13, S12, 0x0, S10, S9, S8, S7, V527, S5, S4, 0x0, V542, 0x5, V545]

================================

Block 0x59a
[0x59a:0x5a0]
---
Predecessors: [0x58a]
Successors: [0x5a1]
---
0x59a JUMPDEST
0x59b PUSH1 0x2
0x59d MUL
0x59e ADD
0x59f PUSH1 0x0
---
0x59a: JUMPDEST 
0x59b: V549 = 0x2
0x59d: V550 = MUL 0x2 V545
0x59e: V551 = ADD V550 0x5
0x59f: V552 = 0x0
---
Entry stack: [V12, 0x86, V188, S13, S12, 0x0, S10, S9, S8, S7, V527, S5, S4, 0x0, V542, 0x5, V545]
Stack pops: 2
Stack additions: [V551, 0x0]
Exit stack: [V12, 0x86, V188, S13, S12, 0x0, S10, S9, S8, S7, V527, S5, S4, 0x0, V542, V551, 0x0]

================================

Block 0x5a1
[0x5a1:0x5ab]
---
Predecessors: [0x59a]
Successors: [0x5ac, 0x5b0]
---
0x5a1 JUMPDEST
0x5a2 POP
0x5a3 SLOAD
0x5a4 LT
0x5a5 DUP1
0x5a6 ISZERO
0x5a7 SWAP1
0x5a8 PUSH2 0x5b0
0x5ab JUMPI
---
0x5a1: JUMPDEST 
0x5a3: V553 = S[V551]
0x5a4: V554 = LT V553 V542
0x5a6: V555 = ISZERO V554
0x5a8: V556 = 0x5b0
0x5ab: JUMPI 0x5b0 V554
---
Entry stack: [V12, 0x86, V188, S13, S12, 0x0, S10, S9, S8, S7, V527, S5, S4, 0x0, V542, V551, 0x0]
Stack pops: 3
Stack additions: [V555]
Exit stack: [V12, 0x86, V188, S13, S12, 0x0, S10, S9, S8, S7, V527, S5, S4, 0x0, V555]

================================

Block 0x5ac
[0x5ac:0x5af]
---
Predecessors: [0x5a1]
Successors: [0x5b0]
---
0x5ac POP
0x5ad DUP3
0x5ae TIMESTAMP
0x5af GT
---
0x5ae: V557 = TIMESTAMP
0x5af: V558 = GT V557 S3
---
Entry stack: [V12, 0x86, V188, S11, S10, 0x0, S8, S7, S6, S5, V527, S3, S2, 0x0, V555]
Stack pops: 4
Stack additions: [S3, S2, S1, V558]
Exit stack: [V12, 0x86, V188, S11, S10, 0x0, S8, S7, S6, S5, V527, S3, S2, 0x0, V558]

================================

Block 0x5b0
[0x5b0:0x5b5]
---
Predecessors: [0x5a1, 0x5ac]
Successors: [0x5b6, 0x5e2]
---
0x5b0 JUMPDEST
0x5b1 ISZERO
0x5b2 PUSH2 0x5e2
0x5b5 JUMPI
---
0x5b0: JUMPDEST 
0x5b1: V559 = ISZERO S0
0x5b2: V560 = 0x5e2
0x5b5: JUMPI 0x5e2 V559
---
Entry stack: [V12, 0x86, V188, S11, S10, 0x0, S8, S7, S6, S5, V527, S3, S2, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x86, V188, S11, S10, 0x0, S8, S7, S6, S5, V527, S3, S2, 0x0]

================================

Block 0x5b6
[0x5b6:0x5c5]
---
Predecessors: [0x5b0]
Successors: [0x5c6, 0x5c7]
---
0x5b6 PUSH1 0xa
0x5b8 PUSH1 0x5
0x5ba PUSH1 0xff
0x5bc DUP5
0x5bd AND
0x5be PUSH1 0x9
0x5c0 DUP2
0x5c1 LT
0x5c2 PUSH2 0x5c7
0x5c5 JUMPI
---
0x5b6: V561 = 0xa
0x5b8: V562 = 0x5
0x5ba: V563 = 0xff
0x5bd: V564 = AND S1 0xff
0x5be: V565 = 0x9
0x5c1: V566 = LT V564 0x9
0x5c2: V567 = 0x5c7
0x5c5: JUMPI 0x5c7 V566
---
Entry stack: [V12, 0x86, V188, S10, S9, 0x0, S7, S6, S5, S4, V527, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0xa, 0x5, V564]
Exit stack: [V12, 0x86, V188, S10, S9, 0x0, S7, S6, S5, S4, V527, S2, S1, 0x0, 0xa, 0x5, V564]

================================

Block 0x5c6
[0x5c6:0x5c6]
---
Predecessors: [0x5b6]
Successors: []
---
0x5c6 INVALID
---
0x5c6: INVALID 
---
Entry stack: [V12, 0x86, V188, S13, S12, 0x0, S10, S9, S8, S7, V527, S5, S4, 0x0, 0xa, 0x5, V564]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, S13, S12, 0x0, S10, S9, S8, S7, V527, S5, S4, 0x0, 0xa, 0x5, V564]

================================

Block 0x5c7
[0x5c7:0x5cd]
---
Predecessors: [0x5b6]
Successors: [0x5ce]
---
0x5c7 JUMPDEST
0x5c8 PUSH1 0x2
0x5ca MUL
0x5cb ADD
0x5cc PUSH1 0x0
---
0x5c7: JUMPDEST 
0x5c8: V568 = 0x2
0x5ca: V569 = MUL 0x2 V564
0x5cb: V570 = ADD V569 0x5
0x5cc: V571 = 0x0
---
Entry stack: [V12, 0x86, V188, S13, S12, 0x0, S10, S9, S8, S7, V527, S5, S4, 0x0, 0xa, 0x5, V564]
Stack pops: 2
Stack additions: [V570, 0x0]
Exit stack: [V12, 0x86, V188, S13, S12, 0x0, S10, S9, S8, S7, V527, S5, S4, 0x0, 0xa, V570, 0x0]

================================

Block 0x5ce
[0x5ce:0x5dc]
---
Predecessors: [0x5c7]
Successors: [0x5dd, 0x5de]
---
0x5ce JUMPDEST
0x5cf POP
0x5d0 PUSH1 0x1
0x5d2 ADD
0x5d3 SLOAD
0x5d4 DUP6
0x5d5 MUL
0x5d6 DUP2
0x5d7 ISZERO
0x5d8 ISZERO
0x5d9 PUSH2 0x5de
0x5dc JUMPI
---
0x5ce: JUMPDEST 
0x5d0: V572 = 0x1
0x5d2: V573 = ADD 0x1 V570
0x5d3: V574 = S[V573]
0x5d5: V575 = MUL V527 V574
0x5d7: V576 = ISZERO 0xa
0x5d8: V577 = ISZERO 0x0
0x5d9: V578 = 0x5de
0x5dc: JUMPI 0x5de 0x1
---
Entry stack: [V12, 0x86, V188, S13, S12, 0x0, S10, S9, S8, S7, V527, S5, S4, 0x0, 0xa, V570, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V575]
Exit stack: [V12, 0x86, V188, S13, S12, 0x0, S10, S9, S8, S7, V527, S5, S4, 0x0, 0xa, V575]

================================

Block 0x5dd
[0x5dd:0x5dd]
---
Predecessors: [0x5ce]
Successors: []
---
0x5dd INVALID
---
0x5dd: INVALID 
---
Entry stack: [V12, 0x86, V188, S12, S11, 0x0, S9, S8, S7, S6, V527, S4, S3, 0x0, 0xa, V575]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, S12, S11, 0x0, S9, S8, S7, S6, V527, S4, S3, 0x0, 0xa, V575]

================================

Block 0x5de
[0x5de:0x5e1]
---
Predecessors: [0x5ce]
Successors: [0x5e2]
---
0x5de JUMPDEST
0x5df DIV
0x5e0 SWAP8
0x5e1 POP
---
0x5de: JUMPDEST 
0x5df: V579 = DIV V575 0xa
---
Entry stack: [V12, 0x86, V188, S12, S11, 0x0, S9, S8, S7, S6, V527, S4, S3, 0x0, 0xa, V575]
Stack pops: 10
Stack additions: [V579, S8, S7, S6, S5, S4, S3, S2]
Exit stack: [V12, 0x86, V188, S12, S11, 0x0, V579, S8, S7, S6, V527, S4, S3, 0x0]

================================

Block 0x5e2
[0x5e2:0x5f0]
---
Predecessors: [0x5b0, 0x5de]
Successors: [0x5f1, 0x5f2]
---
0x5e2 JUMPDEST
0x5e3 PUSH1 0x5
0x5e5 PUSH1 0xff
0x5e7 DUP4
0x5e8 AND
0x5e9 PUSH1 0x9
0x5eb DUP2
0x5ec LT
0x5ed PUSH2 0x5f2
0x5f0 JUMPI
---
0x5e2: JUMPDEST 
0x5e3: V580 = 0x5
0x5e5: V581 = 0xff
0x5e8: V582 = AND S1 0xff
0x5e9: V583 = 0x9
0x5ec: V584 = LT V582 0x9
0x5ed: V585 = 0x5f2
0x5f0: JUMPI 0x5f2 V584
---
Entry stack: [V12, 0x86, V188, S10, S9, 0x0, S7, S6, S5, S4, V527, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x5, V582]
Exit stack: [V12, 0x86, V188, S10, S9, 0x0, S7, S6, S5, S4, V527, S2, S1, 0x0, 0x5, V582]

================================

Block 0x5f1
[0x5f1:0x5f1]
---
Predecessors: [0x5e2]
Successors: []
---
0x5f1 INVALID
---
0x5f1: INVALID 
---
Entry stack: [V12, 0x86, V188, S12, S11, 0x0, S9, S8, S7, S6, V527, S4, S3, 0x0, 0x5, V582]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, S12, S11, 0x0, S9, S8, S7, S6, V527, S4, S3, 0x0, 0x5, V582]

================================

Block 0x5f2
[0x5f2:0x5f8]
---
Predecessors: [0x5e2]
Successors: [0x5f9]
---
0x5f2 JUMPDEST
0x5f3 PUSH1 0x2
0x5f5 MUL
0x5f6 ADD
0x5f7 PUSH1 0x0
---
0x5f2: JUMPDEST 
0x5f3: V586 = 0x2
0x5f5: V587 = MUL 0x2 V582
0x5f6: V588 = ADD V587 0x5
0x5f7: V589 = 0x0
---
Entry stack: [V12, 0x86, V188, S12, S11, 0x0, S9, S8, S7, S6, V527, S4, S3, 0x0, 0x5, V582]
Stack pops: 2
Stack additions: [V588, 0x0]
Exit stack: [V12, 0x86, V188, S12, S11, 0x0, S9, S8, S7, S6, V527, S4, S3, 0x0, V588, 0x0]

================================

Block 0x5f9
[0x5f9:0x5fd]
---
Predecessors: [0x5f2]
Successors: [0x5fe]
---
0x5f9 JUMPDEST
0x5fa POP
0x5fb SLOAD
0x5fc SWAP3
0x5fd POP
---
0x5f9: JUMPDEST 
0x5fb: V590 = S[V588]
---
Entry stack: [V12, 0x86, V188, S12, S11, 0x0, S9, S8, S7, S6, V527, S4, S3, 0x0, V588, 0x0]
Stack pops: 5
Stack additions: [V590, S3, S2]
Exit stack: [V12, 0x86, V188, S12, S11, 0x0, S9, S8, S7, S6, V527, V590, S3, 0x0]

================================

Block 0x5fe
[0x5fe:0x608]
---
Predecessors: [0x5f9]
Successors: [0x57d]
---
0x5fe JUMPDEST
0x5ff PUSH1 0x1
0x601 SWAP1
0x602 SWAP2
0x603 ADD
0x604 SWAP1
0x605 PUSH2 0x57d
0x608 JUMP
---
0x5fe: JUMPDEST 
0x5ff: V591 = 0x1
0x603: V592 = ADD S1 0x1
0x605: V593 = 0x57d
0x608: JUMP 0x57d
---
Entry stack: [V12, 0x86, V188, S10, S9, 0x0, S7, S6, S5, S4, V527, V590, S1, 0x0]
Stack pops: 2
Stack additions: [V592, S0]
Exit stack: [V12, 0x86, V188, S10, S9, 0x0, S7, S6, S5, S4, V527, V590, V592, 0x0]

================================

Block 0x609
[0x609:0x60e]
---
Predecessors: [0x57d]
Successors: [0x60f]
---
0x609 JUMPDEST
0x60a DUP8
0x60b DUP5
0x60c SUB
0x60d SWAP9
0x60e POP
---
0x609: JUMPDEST 
0x60c: V594 = SUB V527 S7
---
Entry stack: [V12, 0x86, V188, S10, S9, 0x0, S7, S6, S5, S4, V527, S2, S1, 0x0]
Stack pops: 9
Stack additions: [V594, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x86, V188, S10, S9, V594, S7, S6, S5, S4, V527, S2, S1, 0x0]

================================

Block 0x60f
[0x60f:0x677]
---
Predecessors: [0x571, 0x609]
Successors: [0x678, 0x679]
---
0x60f JUMPDEST
0x610 PUSH1 0x17
0x612 SLOAD
0x613 PUSH1 0x40
0x615 DUP1
0x616 MLOAD
0x617 PUSH32 0xd7ecc12900000000000000000000000000000000000000000000000000000000
0x638 DUP2
0x639 MSTORE
0x63a PUSH1 0x1
0x63c PUSH1 0xa0
0x63e PUSH1 0x2
0x640 EXP
0x641 SUB
0x642 SWAP3
0x643 DUP4
0x644 AND
0x645 PUSH1 0x4
0x647 DUP3
0x648 ADD
0x649 MSTORE
0x64a PUSH1 0x24
0x64c DUP2
0x64d ADD
0x64e DUP14
0x64f SWAP1
0x650 MSTORE
0x651 SWAP1
0x652 MLOAD
0x653 SWAP2
0x654 DUP15
0x655 AND
0x656 SWAP2
0x657 PUSH4 0xd7ecc129
0x65c SWAP2
0x65d PUSH1 0x44
0x65f DUP1
0x660 DUP3
0x661 ADD
0x662 SWAP3
0x663 PUSH1 0x0
0x665 SWAP3
0x666 SWAP1
0x667 SWAP2
0x668 SWAP1
0x669 DUP3
0x66a SWAP1
0x66b SUB
0x66c ADD
0x66d DUP2
0x66e DUP4
0x66f DUP8
0x670 DUP1
0x671 EXTCODESIZE
0x672 ISZERO
0x673 ISZERO
0x674 PUSH2 0x679
0x677 JUMPI
---
0x60f: JUMPDEST 
0x610: V595 = 0x17
0x612: V596 = S[0x17]
0x613: V597 = 0x40
0x616: V598 = M[0x40]
0x617: V599 = 0xd7ecc12900000000000000000000000000000000000000000000000000000000
0x639: M[V598] = 0xd7ecc12900000000000000000000000000000000000000000000000000000000
0x63a: V600 = 0x1
0x63c: V601 = 0xa0
0x63e: V602 = 0x2
0x640: V603 = EXP 0x2 0xa0
0x641: V604 = SUB 0x10000000000000000000000000000000000000000 0x1
0x644: V605 = AND 0xffffffffffffffffffffffffffffffffffffffff V596
0x645: V606 = 0x4
0x648: V607 = ADD V598 0x4
0x649: M[V607] = V605
0x64a: V608 = 0x24
0x64d: V609 = ADD V598 0x24
0x650: M[V609] = S9
0x652: V610 = M[0x40]
0x655: V611 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x657: V612 = 0xd7ecc129
0x65d: V613 = 0x44
0x661: V614 = ADD V598 0x44
0x663: V615 = 0x0
0x66b: V616 = SUB V598 V610
0x66c: V617 = ADD V616 0x44
0x671: V618 = EXTCODESIZE V611
0x672: V619 = ISZERO V618
0x673: V620 = ISZERO V619
0x674: V621 = 0x679
0x677: JUMPI 0x679 V620
---
Entry stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V611, 0xd7ecc129, V614, 0x0, V610, V617, V610, 0x0, V611]
Exit stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, 0x0, V611, 0xd7ecc129, V614, 0x0, V610, V617, V610, 0x0, V611]

================================

Block 0x678
[0x678:0x678]
---
Predecessors: [0x60f]
Successors: []
---
0x678 INVALID
---
0x678: INVALID 
---
Entry stack: [V12, 0x86, V188, S19, S18, S17, S16, S15, S14, S13, V527, S11, S10, 0x0, V611, 0xd7ecc129, V614, 0x0, V610, V617, V610, 0x0, V611]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, S19, S18, S17, S16, S15, S14, S13, V527, S11, S10, 0x0, V611, 0xd7ecc129, V614, 0x0, V610, V617, V610, 0x0, V611]

================================

Block 0x679
[0x679:0x685]
---
Predecessors: [0x60f]
Successors: [0x686, 0x687]
---
0x679 JUMPDEST
0x67a PUSH2 0x2c6
0x67d GAS
0x67e SUB
0x67f CALL
0x680 ISZERO
0x681 ISZERO
0x682 PUSH2 0x687
0x685 JUMPI
---
0x679: JUMPDEST 
0x67a: V622 = 0x2c6
0x67d: V623 = GAS
0x67e: V624 = SUB V623 0x2c6
0x67f: V625 = CALL V624 V611 0x0 V610 V617 V610 0x0
0x680: V626 = ISZERO V625
0x681: V627 = ISZERO V626
0x682: V628 = 0x687
0x685: JUMPI 0x687 V627
---
Entry stack: [V12, 0x86, V188, S19, S18, S17, S16, S15, S14, S13, V527, S11, S10, 0x0, V611, 0xd7ecc129, V614, 0x0, V610, V617, V610, 0x0, V611]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x86, V188, S19, S18, S17, S16, S15, S14, S13, V527, S11, S10, 0x0, V611, 0xd7ecc129, V614]

================================

Block 0x686
[0x686:0x686]
---
Predecessors: [0x679]
Successors: []
---
0x686 INVALID
---
0x686: INVALID 
---
Entry stack: [V12, 0x86, V188, S13, S12, S11, S10, S9, S8, S7, V527, S5, S4, 0x0, V611, 0xd7ecc129, V614]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, S13, S12, S11, S10, S9, S8, S7, V527, S5, S4, 0x0, V611, 0xd7ecc129, V614]

================================

Block 0x687
[0x687:0x6ce]
---
Predecessors: [0x679]
Successors: [0x6cf, 0x6d0]
---
0x687 JUMPDEST
0x688 POP
0x689 POP
0x68a POP
0x68b DUP12
0x68c PUSH1 0x1
0x68e PUSH1 0xa0
0x690 PUSH1 0x2
0x692 EXP
0x693 SUB
0x694 AND
0x695 PUSH4 0x56e5e12b
0x69a PUSH1 0x0
0x69c PUSH1 0x40
0x69e MLOAD
0x69f PUSH1 0x20
0x6a1 ADD
0x6a2 MSTORE
0x6a3 PUSH1 0x40
0x6a5 MLOAD
0x6a6 DUP2
0x6a7 PUSH4 0xffffffff
0x6ac AND
0x6ad PUSH1 0xe0
0x6af PUSH1 0x2
0x6b1 EXP
0x6b2 MUL
0x6b3 DUP2
0x6b4 MSTORE
0x6b5 PUSH1 0x4
0x6b7 ADD
0x6b8 DUP1
0x6b9 SWAP1
0x6ba POP
0x6bb PUSH1 0x20
0x6bd PUSH1 0x40
0x6bf MLOAD
0x6c0 DUP1
0x6c1 DUP4
0x6c2 SUB
0x6c3 DUP2
0x6c4 PUSH1 0x0
0x6c6 DUP8
0x6c7 DUP1
0x6c8 EXTCODESIZE
0x6c9 ISZERO
0x6ca ISZERO
0x6cb PUSH2 0x6d0
0x6ce JUMPI
---
0x687: JUMPDEST 
0x68c: V629 = 0x1
0x68e: V630 = 0xa0
0x690: V631 = 0x2
0x692: V632 = EXP 0x2 0xa0
0x693: V633 = SUB 0x10000000000000000000000000000000000000000 0x1
0x694: V634 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x695: V635 = 0x56e5e12b
0x69a: V636 = 0x0
0x69c: V637 = 0x40
0x69e: V638 = M[0x40]
0x69f: V639 = 0x20
0x6a1: V640 = ADD 0x20 V638
0x6a2: M[V640] = 0x0
0x6a3: V641 = 0x40
0x6a5: V642 = M[0x40]
0x6a7: V643 = 0xffffffff
0x6ac: V644 = AND 0xffffffff 0x56e5e12b
0x6ad: V645 = 0xe0
0x6af: V646 = 0x2
0x6b1: V647 = EXP 0x2 0xe0
0x6b2: V648 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x56e5e12b
0x6b4: M[V642] = 0x56e5e12b00000000000000000000000000000000000000000000000000000000
0x6b5: V649 = 0x4
0x6b7: V650 = ADD 0x4 V642
0x6bb: V651 = 0x20
0x6bd: V652 = 0x40
0x6bf: V653 = M[0x40]
0x6c2: V654 = SUB V650 V653
0x6c4: V655 = 0x0
0x6c8: V656 = EXTCODESIZE V634
0x6c9: V657 = ISZERO V656
0x6ca: V658 = ISZERO V657
0x6cb: V659 = 0x6d0
0x6ce: JUMPI 0x6d0 V658
---
Entry stack: [V12, 0x86, V188, S13, S12, S11, S10, S9, S8, S7, V527, S5, S4, 0x0, V611, 0xd7ecc129, V614]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V634, 0x56e5e12b, V650, 0x20, V653, V654, V653, 0x0, V634]
Exit stack: [V12, 0x86, V188, S13, S12, S11, S10, S9, S8, S7, V527, S5, S4, 0x0, V634, 0x56e5e12b, V650, 0x20, V653, V654, V653, 0x0, V634]

================================

Block 0x6cf
[0x6cf:0x6cf]
---
Predecessors: [0x687]
Successors: []
---
0x6cf INVALID
---
0x6cf: INVALID 
---
Entry stack: [V12, 0x86, V188, S19, S18, S17, S16, S15, S14, S13, V527, S11, S10, 0x0, V634, 0x56e5e12b, V650, 0x20, V653, V654, V653, 0x0, V634]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, S19, S18, S17, S16, S15, S14, S13, V527, S11, S10, 0x0, V634, 0x56e5e12b, V650, 0x20, V653, V654, V653, 0x0, V634]

================================

Block 0x6d0
[0x6d0:0x6dc]
---
Predecessors: [0x687]
Successors: [0x6dd, 0x6de]
---
0x6d0 JUMPDEST
0x6d1 PUSH2 0x2c6
0x6d4 GAS
0x6d5 SUB
0x6d6 CALL
0x6d7 ISZERO
0x6d8 ISZERO
0x6d9 PUSH2 0x6de
0x6dc JUMPI
---
0x6d0: JUMPDEST 
0x6d1: V660 = 0x2c6
0x6d4: V661 = GAS
0x6d5: V662 = SUB V661 0x2c6
0x6d6: V663 = CALL V662 V634 0x0 V653 V654 V653 0x20
0x6d7: V664 = ISZERO V663
0x6d8: V665 = ISZERO V664
0x6d9: V666 = 0x6de
0x6dc: JUMPI 0x6de V665
---
Entry stack: [V12, 0x86, V188, S19, S18, S17, S16, S15, S14, S13, V527, S11, S10, 0x0, V634, 0x56e5e12b, V650, 0x20, V653, V654, V653, 0x0, V634]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x86, V188, S19, S18, S17, S16, S15, S14, S13, V527, S11, S10, 0x0, V634, 0x56e5e12b, V650]

================================

Block 0x6dd
[0x6dd:0x6dd]
---
Predecessors: [0x6d0]
Successors: []
---
0x6dd INVALID
---
0x6dd: INVALID 
---
Entry stack: [V12, 0x86, V188, S13, S12, S11, S10, S9, S8, S7, V527, S5, S4, 0x0, V634, 0x56e5e12b, V650]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, S13, S12, S11, S10, S9, S8, S7, V527, S5, S4, 0x0, V634, 0x56e5e12b, V650]

================================

Block 0x6de
[0x6de:0x70d]
---
Predecessors: [0x6d0]
Successors: [0x70e, 0x70f]
---
0x6de JUMPDEST
0x6df POP
0x6e0 POP
0x6e1 PUSH1 0x40
0x6e3 MLOAD
0x6e4 DUP1
0x6e5 MLOAD
0x6e6 PUSH1 0x1
0x6e8 PUSH1 0xa0
0x6ea PUSH1 0x2
0x6ec EXP
0x6ed SUB
0x6ee AND
0x6ef SWAP2
0x6f0 POP
0x6f1 DUP11
0x6f2 ISZERO
0x6f3 PUSH2 0x8fc
0x6f6 MUL
0x6f7 SWAP1
0x6f8 DUP12
0x6f9 SWAP1
0x6fa PUSH1 0x0
0x6fc DUP2
0x6fd DUP2
0x6fe DUP2
0x6ff DUP6
0x700 DUP9
0x701 DUP9
0x702 CALL
0x703 SWAP4
0x704 POP
0x705 POP
0x706 POP
0x707 POP
0x708 ISZERO
0x709 ISZERO
0x70a PUSH2 0x70f
0x70d JUMPI
---
0x6de: JUMPDEST 
0x6e1: V667 = 0x40
0x6e3: V668 = M[0x40]
0x6e5: V669 = M[V668]
0x6e6: V670 = 0x1
0x6e8: V671 = 0xa0
0x6ea: V672 = 0x2
0x6ec: V673 = EXP 0x2 0xa0
0x6ed: V674 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ee: V675 = AND 0xffffffffffffffffffffffffffffffffffffffff V669
0x6f2: V676 = ISZERO S11
0x6f3: V677 = 0x8fc
0x6f6: V678 = MUL 0x8fc V676
0x6fa: V679 = 0x0
0x702: V680 = CALL V678 V675 S11 V668 0x0 V668 0x0
0x708: V681 = ISZERO V680
0x709: V682 = ISZERO V681
0x70a: V683 = 0x70f
0x70d: JUMPI 0x70f V682
---
Entry stack: [V12, 0x86, V188, S13, S12, S11, S10, S9, S8, S7, V527, S5, S4, 0x0, V634, 0x56e5e12b, V650]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3]
Exit stack: [V12, 0x86, V188, S13, S12, S11, S10, S9, S8, S7, V527, S5, S4, 0x0]

================================

Block 0x70e
[0x70e:0x70e]
---
Predecessors: [0x6de]
Successors: []
---
0x70e INVALID
---
0x70e: INVALID 
---
Entry stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, 0x0]

================================

Block 0x70f
[0x70f:0x718]
---
Predecessors: [0x6de]
Successors: [0x719, 0x788]
---
0x70f JUMPDEST
0x710 PUSH1 0x0
0x712 DUP9
0x713 GT
0x714 ISZERO
0x715 PUSH2 0x788
0x718 JUMPI
---
0x70f: JUMPDEST 
0x710: V684 = 0x0
0x713: V685 = GT S7 0x0
0x714: V686 = ISZERO V685
0x715: V687 = 0x788
0x718: JUMPI 0x788 V686
---
Entry stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, 0x0]

================================

Block 0x719
[0x719:0x773]
---
Predecessors: [0x70f]
Successors: [0x774, 0x775]
---
0x719 POP
0x71a PUSH1 0x0
0x71c DUP1
0x71d SLOAD
0x71e PUSH1 0x40
0x720 DUP1
0x721 MLOAD
0x722 PUSH32 0x7db9159500000000000000000000000000000000000000000000000000000000
0x743 DUP2
0x744 MSTORE
0x745 SWAP1
0x746 MLOAD
0x747 PUSH1 0x1
0x749 PUSH1 0xa0
0x74b PUSH1 0x2
0x74d EXP
0x74e SUB
0x74f SWAP1
0x750 SWAP3
0x751 AND
0x752 SWAP3
0x753 DUP4
0x754 SWAP3
0x755 PUSH4 0x7db91595
0x75a SWAP3
0x75b DUP13
0x75c SWAP3
0x75d PUSH1 0x4
0x75f DUP1
0x760 DUP4
0x761 ADD
0x762 SWAP4
0x763 SWAP2
0x764 SWAP3
0x765 DUP3
0x766 SWAP1
0x767 SUB
0x768 ADD
0x769 DUP2
0x76a DUP6
0x76b DUP9
0x76c DUP1
0x76d EXTCODESIZE
0x76e ISZERO
0x76f ISZERO
0x770 PUSH2 0x775
0x773 JUMPI
---
0x71a: V688 = 0x0
0x71d: V689 = S[0x0]
0x71e: V690 = 0x40
0x721: V691 = M[0x40]
0x722: V692 = 0x7db9159500000000000000000000000000000000000000000000000000000000
0x744: M[V691] = 0x7db9159500000000000000000000000000000000000000000000000000000000
0x746: V693 = M[0x40]
0x747: V694 = 0x1
0x749: V695 = 0xa0
0x74b: V696 = 0x2
0x74d: V697 = EXP 0x2 0xa0
0x74e: V698 = SUB 0x10000000000000000000000000000000000000000 0x1
0x751: V699 = AND V689 0xffffffffffffffffffffffffffffffffffffffff
0x755: V700 = 0x7db91595
0x75d: V701 = 0x4
0x761: V702 = ADD V691 0x4
0x767: V703 = SUB V691 V693
0x768: V704 = ADD V703 0x4
0x76d: V705 = EXTCODESIZE V699
0x76e: V706 = ISZERO V705
0x76f: V707 = ISZERO V706
0x770: V708 = 0x775
0x773: JUMPI 0x775 V707
---
Entry stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, V699, V699, 0x7db91595, S7, V702, 0x0, V693, V704, V693, S7, V699]
Exit stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, V699, V699, 0x7db91595, S7, V702, 0x0, V693, V704, V693, S7, V699]

================================

Block 0x774
[0x774:0x774]
---
Predecessors: [0x719]
Successors: []
---
0x774 INVALID
---
0x774: INVALID 
---
Entry stack: [V12, 0x86, V188, S20, S19, S18, S17, S16, S15, S14, V527, S12, S11, V699, V699, 0x7db91595, S7, V702, 0x0, V693, V704, V693, S1, V699]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, S20, S19, S18, S17, S16, S15, S14, V527, S12, S11, V699, V699, 0x7db91595, S7, V702, 0x0, V693, V704, V693, S1, V699]

================================

Block 0x775
[0x775:0x781]
---
Predecessors: [0x719]
Successors: [0x782, 0x783]
---
0x775 JUMPDEST
0x776 PUSH2 0x25ee
0x779 GAS
0x77a SUB
0x77b CALL
0x77c ISZERO
0x77d ISZERO
0x77e PUSH2 0x783
0x781 JUMPI
---
0x775: JUMPDEST 
0x776: V709 = 0x25ee
0x779: V710 = GAS
0x77a: V711 = SUB V710 0x25ee
0x77b: V712 = CALL V711 V699 S1 V693 V704 V693 0x0
0x77c: V713 = ISZERO V712
0x77d: V714 = ISZERO V713
0x77e: V715 = 0x783
0x781: JUMPI 0x783 V714
---
Entry stack: [V12, 0x86, V188, S20, S19, S18, S17, S16, S15, S14, V527, S12, S11, V699, V699, 0x7db91595, S7, V702, 0x0, V693, V704, V693, S1, V699]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x86, V188, S20, S19, S18, S17, S16, S15, S14, V527, S12, S11, V699, V699, 0x7db91595, S7, V702]

================================

Block 0x782
[0x782:0x782]
---
Predecessors: [0x775]
Successors: []
---
0x782 INVALID
---
0x782: INVALID 
---
Entry stack: [V12, 0x86, V188, S14, S13, S12, S11, S10, S9, S8, V527, S6, S5, V699, V699, 0x7db91595, S1, V702]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, S14, S13, S12, S11, S10, S9, S8, V527, S6, S5, V699, V699, 0x7db91595, S1, V702]

================================

Block 0x783
[0x783:0x787]
---
Predecessors: [0x775]
Successors: [0x788]
---
0x783 JUMPDEST
0x784 POP
0x785 POP
0x786 POP
0x787 POP
---
0x783: JUMPDEST 
---
Entry stack: [V12, 0x86, V188, S14, S13, S12, S11, S10, S9, S8, V527, S6, S5, V699, V699, 0x7db91595, S1, V702]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x86, V188, S14, S13, S12, S11, S10, S9, S8, V527, S6, S5, V699]

================================

Block 0x788
[0x788:0x791]
---
Predecessors: [0x70f, 0x783]
Successors: [0x792, 0x7be]
---
0x788 JUMPDEST
0x789 PUSH1 0x0
0x78b DUP8
0x78c GT
0x78d ISZERO
0x78e PUSH2 0x7be
0x791 JUMPI
---
0x788: JUMPDEST 
0x789: V716 = 0x0
0x78c: V717 = GT S6 0x0
0x78d: V718 = ISZERO V717
0x78e: V719 = 0x7be
0x791: JUMPI 0x7be V718
---
Entry stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, S0]

================================

Block 0x792
[0x792:0x7bc]
---
Predecessors: [0x788]
Successors: [0x7bd, 0x7be]
---
0x792 PUSH1 0x40
0x794 MLOAD
0x795 PUSH1 0x1
0x797 PUSH1 0xa0
0x799 PUSH1 0x2
0x79b EXP
0x79c SUB
0x79d CALLER
0x79e AND
0x79f SWAP1
0x7a0 DUP9
0x7a1 ISZERO
0x7a2 PUSH2 0x8fc
0x7a5 MUL
0x7a6 SWAP1
0x7a7 DUP10
0x7a8 SWAP1
0x7a9 PUSH1 0x0
0x7ab DUP2
0x7ac DUP2
0x7ad DUP2
0x7ae DUP6
0x7af DUP9
0x7b0 DUP9
0x7b1 CALL
0x7b2 SWAP4
0x7b3 POP
0x7b4 POP
0x7b5 POP
0x7b6 POP
0x7b7 ISZERO
0x7b8 ISZERO
0x7b9 PUSH2 0x7be
0x7bc JUMPI
---
0x792: V720 = 0x40
0x794: V721 = M[0x40]
0x795: V722 = 0x1
0x797: V723 = 0xa0
0x799: V724 = 0x2
0x79b: V725 = EXP 0x2 0xa0
0x79c: V726 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79d: V727 = CALLER
0x79e: V728 = AND V727 0xffffffffffffffffffffffffffffffffffffffff
0x7a1: V729 = ISZERO S6
0x7a2: V730 = 0x8fc
0x7a5: V731 = MUL 0x8fc V729
0x7a9: V732 = 0x0
0x7b1: V733 = CALL V731 V728 S6 V721 0x0 V721 0x0
0x7b7: V734 = ISZERO V733
0x7b8: V735 = ISZERO V734
0x7b9: V736 = 0x7be
0x7bc: JUMPI 0x7be V735
---
Entry stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, S0]

================================

Block 0x7bd
[0x7bd:0x7bd]
---
Predecessors: [0x792]
Successors: []
---
0x7bd INVALID
---
0x7bd: INVALID 
---
Entry stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, S0]

================================

Block 0x7be
[0x7be:0x7be]
---
Predecessors: [0x788, 0x792]
Successors: [0x7bf]
---
0x7be JUMPDEST
---
0x7be: JUMPDEST 
---
Entry stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, S0]

================================

Block 0x7bf
[0x7bf:0x81c]
---
Predecessors: [0x7be]
Successors: [0x81d, 0x81e]
---
0x7bf JUMPDEST
0x7c0 DUP12
0x7c1 PUSH1 0x1
0x7c3 PUSH1 0xa0
0x7c5 PUSH1 0x2
0x7c7 EXP
0x7c8 SUB
0x7c9 AND
0x7ca PUSH4 0xd7ecc129
0x7cf CALLER
0x7d0 DUP14
0x7d1 PUSH1 0x40
0x7d3 MLOAD
0x7d4 DUP4
0x7d5 PUSH4 0xffffffff
0x7da AND
0x7db PUSH1 0xe0
0x7dd PUSH1 0x2
0x7df EXP
0x7e0 MUL
0x7e1 DUP2
0x7e2 MSTORE
0x7e3 PUSH1 0x4
0x7e5 ADD
0x7e6 DUP1
0x7e7 DUP4
0x7e8 PUSH1 0x1
0x7ea PUSH1 0xa0
0x7ec PUSH1 0x2
0x7ee EXP
0x7ef SUB
0x7f0 AND
0x7f1 PUSH1 0x1
0x7f3 PUSH1 0xa0
0x7f5 PUSH1 0x2
0x7f7 EXP
0x7f8 SUB
0x7f9 AND
0x7fa DUP2
0x7fb MSTORE
0x7fc PUSH1 0x20
0x7fe ADD
0x7ff DUP3
0x800 DUP2
0x801 MSTORE
0x802 PUSH1 0x20
0x804 ADD
0x805 SWAP3
0x806 POP
0x807 POP
0x808 POP
0x809 PUSH1 0x0
0x80b PUSH1 0x40
0x80d MLOAD
0x80e DUP1
0x80f DUP4
0x810 SUB
0x811 DUP2
0x812 PUSH1 0x0
0x814 DUP8
0x815 DUP1
0x816 EXTCODESIZE
0x817 ISZERO
0x818 ISZERO
0x819 PUSH2 0x81e
0x81c JUMPI
---
0x7bf: JUMPDEST 
0x7c1: V737 = 0x1
0x7c3: V738 = 0xa0
0x7c5: V739 = 0x2
0x7c7: V740 = EXP 0x2 0xa0
0x7c8: V741 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c9: V742 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x7ca: V743 = 0xd7ecc129
0x7cf: V744 = CALLER
0x7d1: V745 = 0x40
0x7d3: V746 = M[0x40]
0x7d5: V747 = 0xffffffff
0x7da: V748 = AND 0xffffffff 0xd7ecc129
0x7db: V749 = 0xe0
0x7dd: V750 = 0x2
0x7df: V751 = EXP 0x2 0xe0
0x7e0: V752 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd7ecc129
0x7e2: M[V746] = 0xd7ecc12900000000000000000000000000000000000000000000000000000000
0x7e3: V753 = 0x4
0x7e5: V754 = ADD 0x4 V746
0x7e8: V755 = 0x1
0x7ea: V756 = 0xa0
0x7ec: V757 = 0x2
0x7ee: V758 = EXP 0x2 0xa0
0x7ef: V759 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f0: V760 = AND 0xffffffffffffffffffffffffffffffffffffffff V744
0x7f1: V761 = 0x1
0x7f3: V762 = 0xa0
0x7f5: V763 = 0x2
0x7f7: V764 = EXP 0x2 0xa0
0x7f8: V765 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f9: V766 = AND 0xffffffffffffffffffffffffffffffffffffffff V760
0x7fb: M[V754] = V766
0x7fc: V767 = 0x20
0x7fe: V768 = ADD 0x20 V754
0x801: M[V768] = S10
0x802: V769 = 0x20
0x804: V770 = ADD 0x20 V768
0x809: V771 = 0x0
0x80b: V772 = 0x40
0x80d: V773 = M[0x40]
0x810: V774 = SUB V770 V773
0x812: V775 = 0x0
0x816: V776 = EXTCODESIZE V742
0x817: V777 = ISZERO V776
0x818: V778 = ISZERO V777
0x819: V779 = 0x81e
0x81c: JUMPI 0x81e V778
---
Entry stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V742, 0xd7ecc129, V770, 0x0, V773, V774, V773, 0x0, V742]
Exit stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, S0, V742, 0xd7ecc129, V770, 0x0, V773, V774, V773, 0x0, V742]

================================

Block 0x81d
[0x81d:0x81d]
---
Predecessors: [0x7bf]
Successors: []
---
0x81d INVALID
---
0x81d: INVALID 
---
Entry stack: [V12, 0x86, V188, S19, S18, S17, S16, S15, S14, S13, V527, S11, S10, S9, V742, 0xd7ecc129, V770, 0x0, V773, V774, V773, 0x0, V742]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, S19, S18, S17, S16, S15, S14, S13, V527, S11, S10, S9, V742, 0xd7ecc129, V770, 0x0, V773, V774, V773, 0x0, V742]

================================

Block 0x81e
[0x81e:0x82a]
---
Predecessors: [0x7bf]
Successors: [0x82b, 0x82c]
---
0x81e JUMPDEST
0x81f PUSH2 0x2c6
0x822 GAS
0x823 SUB
0x824 CALL
0x825 ISZERO
0x826 ISZERO
0x827 PUSH2 0x82c
0x82a JUMPI
---
0x81e: JUMPDEST 
0x81f: V780 = 0x2c6
0x822: V781 = GAS
0x823: V782 = SUB V781 0x2c6
0x824: V783 = CALL V782 V742 0x0 V773 V774 V773 0x0
0x825: V784 = ISZERO V783
0x826: V785 = ISZERO V784
0x827: V786 = 0x82c
0x82a: JUMPI 0x82c V785
---
Entry stack: [V12, 0x86, V188, S19, S18, S17, S16, S15, S14, S13, V527, S11, S10, S9, V742, 0xd7ecc129, V770, 0x0, V773, V774, V773, 0x0, V742]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x86, V188, S19, S18, S17, S16, S15, S14, S13, V527, S11, S10, S9, V742, 0xd7ecc129, V770]

================================

Block 0x82b
[0x82b:0x82b]
---
Predecessors: [0x81e]
Successors: []
---
0x82b INVALID
---
0x82b: INVALID 
---
Entry stack: [V12, 0x86, V188, S13, S12, S11, S10, S9, S8, S7, V527, S5, S4, S3, V742, 0xd7ecc129, V770]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86, V188, S13, S12, S11, S10, S9, S8, S7, V527, S5, S4, S3, V742, 0xd7ecc129, V770]

================================

Block 0x82c
[0x82c:0x887]
---
Predecessors: [0x81e]
Successors: [0x888]
---
0x82c JUMPDEST
0x82d POP
0x82e POP
0x82f PUSH1 0x40
0x831 DUP1
0x832 MLOAD
0x833 PUSH1 0x1
0x835 PUSH1 0xa0
0x837 PUSH1 0x2
0x839 EXP
0x83a SUB
0x83b CALLER
0x83c AND
0x83d DUP2
0x83e MSTORE
0x83f PUSH1 0x20
0x841 DUP2
0x842 ADD
0x843 DUP15
0x844 SWAP1
0x845 MSTORE
0x846 DUP1
0x847 DUP3
0x848 ADD
0x849 DUP13
0x84a SWAP1
0x84b MSTORE
0x84c PUSH1 0x60
0x84e DUP2
0x84f ADD
0x850 DUP12
0x851 SWAP1
0x852 MSTORE
0x853 PUSH1 0x80
0x855 DUP2
0x856 ADD
0x857 DUP11
0x858 SWAP1
0x859 MSTORE
0x85a SWAP1
0x85b MLOAD
0x85c PUSH32 0xf6eb13373b8a76292656ec3b2b304b433464e36c11cff9bd6daa213de83d0c17
0x87d SWAP3
0x87e POP
0x87f SWAP1
0x880 DUP2
0x881 SWAP1
0x882 SUB
0x883 PUSH1 0xa0
0x885 ADD
0x886 SWAP1
0x887 LOG1
---
0x82c: JUMPDEST 
0x82f: V787 = 0x40
0x832: V788 = M[0x40]
0x833: V789 = 0x1
0x835: V790 = 0xa0
0x837: V791 = 0x2
0x839: V792 = EXP 0x2 0xa0
0x83a: V793 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83b: V794 = CALLER
0x83c: V795 = AND V794 0xffffffffffffffffffffffffffffffffffffffff
0x83e: M[V788] = V795
0x83f: V796 = 0x20
0x842: V797 = ADD V788 0x20
0x845: M[V797] = S13
0x848: V798 = ADD 0x40 V788
0x84b: M[V798] = S11
0x84c: V799 = 0x60
0x84f: V800 = ADD V788 0x60
0x852: M[V800] = S10
0x853: V801 = 0x80
0x856: V802 = ADD V788 0x80
0x859: M[V802] = S9
0x85b: V803 = M[0x40]
0x85c: V804 = 0xf6eb13373b8a76292656ec3b2b304b433464e36c11cff9bd6daa213de83d0c17
0x882: V805 = SUB V788 V803
0x883: V806 = 0xa0
0x885: V807 = ADD 0xa0 V805
0x887: LOG V803 V807 0xf6eb13373b8a76292656ec3b2b304b433464e36c11cff9bd6daa213de83d0c17
---
Entry stack: [V12, 0x86, V188, S13, S12, S11, S10, S9, S8, S7, V527, S5, S4, S3, V742, 0xd7ecc129, V770]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]
Exit stack: [V12, 0x86, V188, S13, S12, S11, S10, S9, S8, S7, V527, S5, S4, S3]

================================

Block 0x888
[0x888:0x895]
---
Predecessors: [0x82c]
Successors: [0x86]
---
0x888 JUMPDEST
0x889 POP
0x88a POP
0x88b POP
0x88c POP
0x88d POP
0x88e POP
0x88f POP
0x890 POP
0x891 POP
0x892 POP
0x893 POP
0x894 POP
0x895 JUMP
---
0x888: JUMPDEST 
0x895: JUMP 0x86
---
Entry stack: [V12, 0x86, V188, S10, S9, S8, S7, S6, S5, S4, V527, S2, S1, S0]
Stack pops: 13
Stack additions: []
Exit stack: [V12]

================================

Block 0x896
[0x896:0x89b]
---
Predecessors: [0x128]
Successors: [0xc4]
---
0x896 JUMPDEST
0x897 PUSH1 0x3
0x899 SLOAD
0x89a DUP2
0x89b JUMP
---
0x896: JUMPDEST 
0x897: V808 = 0x3
0x899: V809 = S[0x3]
0x89b: JUMP 0xc4
---
Entry stack: [V12, 0xc4]
Stack pops: 1
Stack additions: [S0, V809]
Exit stack: [V12, 0xc4, V809]

================================

Block 0x89c
[0x89c:0x8b3]
---
Predecessors: [0x14a]
Successors: [0x84, 0x8b4]
---
0x89c JUMPDEST
0x89d PUSH1 0x17
0x89f SLOAD
0x8a0 CALLER
0x8a1 PUSH1 0x1
0x8a3 PUSH1 0xa0
0x8a5 PUSH1 0x2
0x8a7 EXP
0x8a8 SUB
0x8a9 SWAP1
0x8aa DUP2
0x8ab AND
0x8ac SWAP2
0x8ad AND
0x8ae EQ
0x8af ISZERO
0x8b0 PUSH2 0x84
0x8b3 JUMPI
---
0x89c: JUMPDEST 
0x89d: V810 = 0x17
0x89f: V811 = S[0x17]
0x8a0: V812 = CALLER
0x8a1: V813 = 0x1
0x8a3: V814 = 0xa0
0x8a5: V815 = 0x2
0x8a7: V816 = EXP 0x2 0xa0
0x8a8: V817 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ab: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V812
0x8ad: V819 = AND V811 0xffffffffffffffffffffffffffffffffffffffff
0x8ae: V820 = EQ V819 V818
0x8af: V821 = ISZERO V820
0x8b0: V822 = 0x84
0x8b3: JUMPI 0x84 V821
---
Entry stack: [V12, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86]

================================

Block 0x8b4
[0x8b4:0x8b7]
---
Predecessors: [0x89c]
Successors: [0x8b8]
---
0x8b4 TIMESTAMP
0x8b5 PUSH1 0x4
0x8b7 SSTORE
---
0x8b4: V823 = TIMESTAMP
0x8b5: V824 = 0x4
0x8b7: S[0x4] = V823
---
Entry stack: [V12, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86]

================================

Block 0x8b8
[0x8b8:0x8b8]
---
Predecessors: [0x8b4]
Successors: [0x8b9]
---
0x8b8 JUMPDEST
---
0x8b8: JUMPDEST 
---
Entry stack: [V12, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86]

================================

Block 0x8b9
[0x8b9:0x8b9]
---
Predecessors: [0x8b8]
Successors: [0x8ba]
---
0x8b9 JUMPDEST
---
0x8b9: JUMPDEST 
---
Entry stack: [V12, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x86]

================================

Block 0x8ba
[0x8ba:0x8bb]
---
Predecessors: [0x8b9]
Successors: [0x86]
---
0x8ba JUMPDEST
0x8bb JUMP
---
0x8ba: JUMPDEST 
0x8bb: JUMP 0x86
---
Entry stack: [V12, 0x86]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x8bc
[0x8bc:0x8ca]
---
Predecessors: [0x15c]
Successors: [0x98]
---
0x8bc JUMPDEST
0x8bd PUSH1 0x0
0x8bf SLOAD
0x8c0 PUSH1 0x1
0x8c2 PUSH1 0xa0
0x8c4 PUSH1 0x2
0x8c6 EXP
0x8c7 SUB
0x8c8 AND
0x8c9 DUP2
0x8ca JUMP
---
0x8bc: JUMPDEST 
0x8bd: V825 = 0x0
0x8bf: V826 = S[0x0]
0x8c0: V827 = 0x1
0x8c2: V828 = 0xa0
0x8c4: V829 = 0x2
0x8c6: V830 = EXP 0x2 0xa0
0x8c7: V831 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c8: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff V826
0x8ca: JUMP 0x98
---
Entry stack: [V12, 0x98]
Stack pops: 1
Stack additions: [S0, V832]
Exit stack: [V12, 0x98, V832]

================================

Block 0x8cb
[0x8cb:0x906]
---
Predecessors: []
Successors: []
---
0x8cb STOP
0x8cc LOG1
0x8cd PUSH6 0x627a7a723058
0x8d4 SHA3
0x8d5 LOG4
0x8d6 PUSH25 0x589130b414114258ded58437f5d28d45ff10c421bfafb68bc3
0x8f0 MISSING 0x28
0x8f1 DUP12
0x8f2 PUSH20 0xc6400029
---
0x8cb: STOP 
0x8cc: LOG S0 S1 S2
0x8cd: V833 = 0x627a7a723058
0x8d4: V834 = SHA3 0x627a7a723058 S3
0x8d5: LOG V834 S4 S5 S6 S7 S8
0x8d6: V835 = 0x589130b414114258ded58437f5d28d45ff10c421bfafb68bc3
0x8f0: MISSING 0x28
0x8f2: V836 = 0xc6400029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x589130b414114258ded58437f5d28d45ff10c421bfafb68bc3, 0xc6400029, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11]
Exit stack: []

================================

Function 0:
Public function signature: 0x386381db
Entry block: 0x88
Exit block: 0x98
Body: 0x88, 0x8f, 0x90, 0x98, 0x180

Function 1:
Public function signature: 0x4af4a127
Entry block: 0xb4
Exit block: 0xc4
Body: 0xb4, 0xbb, 0xbc, 0xc4, 0x18f

Function 2:
Public function signature: 0x50c4ebc4
Entry block: 0xd6
Exit block: 0xc4
Body: 0xc4, 0xd6, 0xdd, 0xde, 0x195

Function 3:
Public function signature: 0x74c43f26
Entry block: 0xf8
Exit block: 0x86
Body: 0x86, 0xf8, 0xff, 0x100, 0x19b, 0x1b3, 0x1db, 0x1dc, 0x1dd

Function 4:
Public function signature: 0xa6f2ae3a
Entry block: 0x116
Exit block: 0x86
Body: 0x86, 0x116, 0x1e0, 0x1f6, 0x1fb, 0x261, 0x262, 0x26f, 0x270, 0x2c1, 0x2c2, 0x2cf, 0x2d0, 0x2e3, 0x2e8, 0x335, 0x336, 0x343, 0x344, 0x357, 0x35c, 0x3a4, 0x3a5, 0x3b2, 0x3b3, 0x404, 0x405, 0x412, 0x413, 0x426, 0x46f, 0x470, 0x47d, 0x47e, 0x4cd, 0x4ce, 0x4db, 0x4dc, 0x4ef, 0x4f0, 0x548, 0x549, 0x556, 0x557, 0x561, 0x571, 0x578, 0x57d, 0x58a, 0x599, 0x59a, 0x5a1, 0x5ac, 0x5b0, 0x5b6, 0x5c6, 0x5c7, 0x5ce, 0x5dd, 0x5de, 0x5e2, 0x5f1, 0x5f2, 0x5f9, 0x5fe, 0x609, 0x60f, 0x678, 0x679, 0x686, 0x687, 0x6cf, 0x6d0, 0x6dd, 0x6de, 0x70e, 0x70f, 0x719, 0x774, 0x775, 0x782, 0x783, 0x788, 0x792, 0x7bd, 0x7be, 0x7bf, 0x81d, 0x81e, 0x82b, 0x82c, 0x888

Function 5:
Public function signature: 0xd9652cb1
Entry block: 0x120
Exit block: 0xc4
Body: 0xc4, 0x120, 0x127, 0x128, 0x896

Function 6:
Public function signature: 0xde72cab0
Entry block: 0x142
Exit block: 0x86
Body: 0x84, 0x86, 0x142, 0x149, 0x14a, 0x89c, 0x8b4, 0x8b8, 0x8b9, 0x8ba

Function 7:
Public function signature: 0xfc1c32fa
Entry block: 0x154
Exit block: 0x98
Body: 0x98, 0x154, 0x15b, 0x15c, 0x8bc

Function 8:
Public fallback function
Entry block: 0x72
Exit block: 0x7e
Body: 0x72, 0x79, 0x7a, 0x7e

