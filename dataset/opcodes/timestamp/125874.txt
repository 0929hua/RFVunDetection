Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa1]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa1
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa1
0xa: JUMPI 0xa1 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x1df]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x1cb3b20
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x1df
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x1cb3b20
0x39: V12 = EQ V10 0x1cb3b20
0x3a: V13 = 0x1df
0x3d: JUMPI 0x1df V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x1f1]
---
0x3e DUP1
0x3f PUSH4 0x29dcb0cf
0x44 EQ
0x45 PUSH2 0x1f1
0x48 JUMPI
---
0x3f: V14 = 0x29dcb0cf
0x44: V15 = EQ 0x29dcb0cf V10
0x45: V16 = 0x1f1
0x48: JUMPI 0x1f1 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x213]
---
0x49 DUP1
0x4a PUSH4 0x38af3eed
0x4f EQ
0x50 PUSH2 0x213
0x53 JUMPI
---
0x4a: V17 = 0x38af3eed
0x4f: V18 = EQ 0x38af3eed V10
0x50: V19 = 0x213
0x53: JUMPI 0x213 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x23f]
---
0x54 DUP1
0x55 PUSH4 0x6e66f6e9
0x5a EQ
0x5b PUSH2 0x23f
0x5e JUMPI
---
0x55: V20 = 0x6e66f6e9
0x5a: V21 = EQ 0x6e66f6e9 V10
0x5b: V22 = 0x23f
0x5e: JUMPI 0x23f V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x26b]
---
0x5f DUP1
0x60 PUSH4 0x70a08231
0x65 EQ
0x66 PUSH2 0x26b
0x69 JUMPI
---
0x60: V23 = 0x70a08231
0x65: V24 = EQ 0x70a08231 V10
0x66: V25 = 0x26b
0x69: JUMPI 0x26b V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x299]
---
0x6a DUP1
0x6b PUSH4 0x7a3a0e84
0x70 EQ
0x71 PUSH2 0x299
0x74 JUMPI
---
0x6b: V26 = 0x7a3a0e84
0x70: V27 = EQ 0x7a3a0e84 V10
0x71: V28 = 0x299
0x74: JUMPI 0x299 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x2bb]
---
0x75 DUP1
0x76 PUSH4 0x7b3e5e7b
0x7b EQ
0x7c PUSH2 0x2bb
0x7f JUMPI
---
0x76: V29 = 0x7b3e5e7b
0x7b: V30 = EQ 0x7b3e5e7b V10
0x7c: V31 = 0x2bb
0x7f: JUMPI 0x2bb V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x2dd]
---
0x80 DUP1
0x81 PUSH4 0x9b2cb5d8
0x86 EQ
0x87 PUSH2 0x2dd
0x8a JUMPI
---
0x81: V32 = 0x9b2cb5d8
0x86: V33 = EQ 0x9b2cb5d8 V10
0x87: V34 = 0x2dd
0x8a: JUMPI 0x2dd V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x2ff]
---
0x8b DUP1
0x8c PUSH4 0xa035b1fe
0x91 EQ
0x92 PUSH2 0x2ff
0x95 JUMPI
---
0x8c: V35 = 0xa035b1fe
0x91: V36 = EQ 0xa035b1fe V10
0x92: V37 = 0x2ff
0x95: JUMPI 0x2ff V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x321]
---
0x96 DUP1
0x97 PUSH4 0xfd6b7ef8
0x9c EQ
0x9d PUSH2 0x321
0xa0 JUMPI
---
0x97: V38 = 0xfd6b7ef8
0x9c: V39 = EQ 0xfd6b7ef8 V10
0x9d: V40 = 0x321
0xa0: JUMPI 0x321 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xa4]
---
Predecessors: [0x0, 0x96]
Successors: [0xa5]
---
0xa1 JUMPDEST
0xa2 PUSH2 0x1dd
---
0xa1: JUMPDEST 
0xa2: V41 = 0x1dd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1dd]
Exit stack: [V10, 0x1dd]

================================

Block 0xa5
[0xa5:0xb8]
---
Predecessors: [0xa1]
Successors: [0xb9, 0xbe]
---
0xa5 JUMPDEST
0xa6 PUSH1 0x8
0xa8 SLOAD
0xa9 PUSH1 0x0
0xab SWAP1
0xac PUSH2 0x100
0xaf SWAP1
0xb0 DIV
0xb1 PUSH1 0xff
0xb3 AND
0xb4 ISZERO
0xb5 PUSH2 0xbe
0xb8 JUMPI
---
0xa5: JUMPDEST 
0xa6: V42 = 0x8
0xa8: V43 = S[0x8]
0xa9: V44 = 0x0
0xac: V45 = 0x100
0xb0: V46 = DIV V43 0x100
0xb1: V47 = 0xff
0xb3: V48 = AND 0xff V46
0xb4: V49 = ISZERO V48
0xb5: V50 = 0xbe
0xb8: JUMPI 0xbe V49
---
Entry stack: [V10, 0x1dd]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1dd, 0x0]

================================

Block 0xb9
[0xb9:0xbd]
---
Predecessors: [0xa5]
Successors: []
---
0xb9 PUSH1 0x0
0xbb PUSH1 0x0
0xbd REVERT
---
0xb9: V51 = 0x0
0xbb: V52 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1dd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd, 0x0]

================================

Block 0xbe
[0xbe:0xcb]
---
Predecessors: [0xa5]
Successors: [0xcc, 0xd1]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 SWAP1
0xc1 POP
0xc2 PUSH1 0x5
0xc4 SLOAD
0xc5 DUP2
0xc6 LT
0xc7 ISZERO
0xc8 PUSH2 0xd1
0xcb JUMPI
---
0xbe: JUMPDEST 
0xbf: V53 = CALLVALUE
0xc2: V54 = 0x5
0xc4: V55 = S[0x5]
0xc6: V56 = LT V53 V55
0xc7: V57 = ISZERO V56
0xc8: V58 = 0xd1
0xcb: JUMPI 0xd1 V57
---
Entry stack: [V10, 0x1dd, 0x0]
Stack pops: 1
Stack additions: [V53]
Exit stack: [V10, 0x1dd, V53]

================================

Block 0xcc
[0xcc:0xd0]
---
Predecessors: [0xbe]
Successors: []
---
0xcc PUSH1 0x0
0xce PUSH1 0x0
0xd0 REVERT
---
0xcc: V59 = 0x0
0xce: V60 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1dd, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd, V53]

================================

Block 0xd1
[0xd1:0x114]
---
Predecessors: [0xbe]
Successors: [0x115, 0x116]
---
0xd1 JUMPDEST
0xd2 CALLER
0xd3 PUSH1 0x1
0xd5 PUSH1 0xa0
0xd7 PUSH1 0x2
0xd9 EXP
0xda SUB
0xdb DUP2
0xdc DUP2
0xdd AND
0xde PUSH1 0x0
0xe0 SWAP1
0xe1 DUP2
0xe2 MSTORE
0xe3 PUSH1 0x7
0xe5 PUSH1 0x20
0xe7 MSTORE
0xe8 PUSH1 0x40
0xea SWAP1
0xeb SHA3
0xec DUP1
0xed SLOAD
0xee DUP5
0xef ADD
0xf0 SWAP1
0xf1 SSTORE
0xf2 PUSH1 0x2
0xf4 DUP1
0xf5 SLOAD
0xf6 DUP5
0xf7 ADD
0xf8 SWAP1
0xf9 SSTORE
0xfa PUSH1 0x6
0xfc SLOAD
0xfd PUSH1 0x4
0xff SLOAD
0x100 SWAP2
0x101 AND
0x102 SWAP2
0x103 PUSH4 0xa9059cbb
0x108 SWAP2
0x109 PUSH2 0x2710
0x10c DUP6
0x10d MUL
0x10e DUP2
0x10f ISZERO
0x110 ISZERO
0x111 PUSH2 0x116
0x114 JUMPI
---
0xd1: JUMPDEST 
0xd2: V61 = CALLER
0xd3: V62 = 0x1
0xd5: V63 = 0xa0
0xd7: V64 = 0x2
0xd9: V65 = EXP 0x2 0xa0
0xda: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0xde: V68 = 0x0
0xe2: M[0x0] = V67
0xe3: V69 = 0x7
0xe5: V70 = 0x20
0xe7: M[0x20] = 0x7
0xe8: V71 = 0x40
0xeb: V72 = SHA3 0x0 0x40
0xed: V73 = S[V72]
0xef: V74 = ADD V53 V73
0xf1: S[V72] = V74
0xf2: V75 = 0x2
0xf5: V76 = S[0x2]
0xf7: V77 = ADD V53 V76
0xf9: S[0x2] = V77
0xfa: V78 = 0x6
0xfc: V79 = S[0x6]
0xfd: V80 = 0x4
0xff: V81 = S[0x4]
0x101: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x103: V83 = 0xa9059cbb
0x109: V84 = 0x2710
0x10d: V85 = MUL V53 0x2710
0x10f: V86 = ISZERO V81
0x110: V87 = ISZERO V86
0x111: V88 = 0x116
0x114: JUMPI 0x116 V87
---
Entry stack: [V10, 0x1dd, V53]
Stack pops: 1
Stack additions: [S0, V82, 0xa9059cbb, V61, V81, V85]
Exit stack: [V10, 0x1dd, V53, V82, 0xa9059cbb, V61, V81, V85]

================================

Block 0x115
[0x115:0x115]
---
Predecessors: [0xd1]
Successors: []
---
0x115 INVALID
---
0x115: INVALID 
---
Entry stack: [V10, 0x1dd, V53, V82, 0xa9059cbb, V61, V81, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd, V53, V82, 0xa9059cbb, V61, V81, V85]

================================

Block 0x116
[0x116:0x17c]
---
Predecessors: [0xd1]
Successors: [0x17d, 0x17e]
---
0x116 JUMPDEST
0x117 DIV
0x118 PUSH1 0x40
0x11a MLOAD
0x11b DUP4
0x11c PUSH4 0xffffffff
0x121 AND
0x122 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x140 MUL
0x141 DUP2
0x142 MSTORE
0x143 PUSH1 0x4
0x145 ADD
0x146 DUP1
0x147 DUP4
0x148 PUSH1 0x1
0x14a PUSH1 0xa0
0x14c PUSH1 0x2
0x14e EXP
0x14f SUB
0x150 AND
0x151 PUSH1 0x1
0x153 PUSH1 0xa0
0x155 PUSH1 0x2
0x157 EXP
0x158 SUB
0x159 AND
0x15a DUP2
0x15b MSTORE
0x15c PUSH1 0x20
0x15e ADD
0x15f DUP3
0x160 DUP2
0x161 MSTORE
0x162 PUSH1 0x20
0x164 ADD
0x165 SWAP3
0x166 POP
0x167 POP
0x168 POP
0x169 PUSH1 0x0
0x16b PUSH1 0x40
0x16d MLOAD
0x16e DUP1
0x16f DUP4
0x170 SUB
0x171 DUP2
0x172 PUSH1 0x0
0x174 DUP8
0x175 DUP1
0x176 EXTCODESIZE
0x177 ISZERO
0x178 ISZERO
0x179 PUSH2 0x17e
0x17c JUMPI
---
0x116: JUMPDEST 
0x117: V89 = DIV V85 V81
0x118: V90 = 0x40
0x11a: V91 = M[0x40]
0x11c: V92 = 0xffffffff
0x121: V93 = AND 0xffffffff 0xa9059cbb
0x122: V94 = 0x100000000000000000000000000000000000000000000000000000000
0x140: V95 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x142: M[V91] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x143: V96 = 0x4
0x145: V97 = ADD 0x4 V91
0x148: V98 = 0x1
0x14a: V99 = 0xa0
0x14c: V100 = 0x2
0x14e: V101 = EXP 0x2 0xa0
0x14f: V102 = SUB 0x10000000000000000000000000000000000000000 0x1
0x150: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x151: V104 = 0x1
0x153: V105 = 0xa0
0x155: V106 = 0x2
0x157: V107 = EXP 0x2 0xa0
0x158: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x159: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x15b: M[V97] = V109
0x15c: V110 = 0x20
0x15e: V111 = ADD 0x20 V97
0x161: M[V111] = V89
0x162: V112 = 0x20
0x164: V113 = ADD 0x20 V111
0x169: V114 = 0x0
0x16b: V115 = 0x40
0x16d: V116 = M[0x40]
0x170: V117 = SUB V113 V116
0x172: V118 = 0x0
0x176: V119 = EXTCODESIZE V82
0x177: V120 = ISZERO V119
0x178: V121 = ISZERO V120
0x179: V122 = 0x17e
0x17c: JUMPI 0x17e V121
---
Entry stack: [V10, 0x1dd, V53, V82, 0xa9059cbb, V61, V81, V85]
Stack pops: 5
Stack additions: [S4, S3, V113, 0x0, V116, V117, V116, 0x0, S4]
Exit stack: [V10, 0x1dd, V53, V82, 0xa9059cbb, V113, 0x0, V116, V117, V116, 0x0, V82]

================================

Block 0x17d
[0x17d:0x17d]
---
Predecessors: [0x116]
Successors: []
---
0x17d INVALID
---
0x17d: INVALID 
---
Entry stack: [V10, 0x1dd, V53, V82, 0xa9059cbb, V113, 0x0, V116, V117, V116, 0x0, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd, V53, V82, 0xa9059cbb, V113, 0x0, V116, V117, V116, 0x0, V82]

================================

Block 0x17e
[0x17e:0x18a]
---
Predecessors: [0x116]
Successors: [0x18b, 0x18c]
---
0x17e JUMPDEST
0x17f PUSH2 0x2c6
0x182 GAS
0x183 SUB
0x184 CALL
0x185 ISZERO
0x186 ISZERO
0x187 PUSH2 0x18c
0x18a JUMPI
---
0x17e: JUMPDEST 
0x17f: V123 = 0x2c6
0x182: V124 = GAS
0x183: V125 = SUB V124 0x2c6
0x184: V126 = CALL V125 V82 0x0 V116 V117 V116 0x0
0x185: V127 = ISZERO V126
0x186: V128 = ISZERO V127
0x187: V129 = 0x18c
0x18a: JUMPI 0x18c V128
---
Entry stack: [V10, 0x1dd, V53, V82, 0xa9059cbb, V113, 0x0, V116, V117, V116, 0x0, V82]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1dd, V53, V82, 0xa9059cbb, V113]

================================

Block 0x18b
[0x18b:0x18b]
---
Predecessors: [0x17e]
Successors: []
---
0x18b INVALID
---
0x18b: INVALID 
---
Entry stack: [V10, 0x1dd, V53, V82, 0xa9059cbb, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd, V53, V82, 0xa9059cbb, V113]

================================

Block 0x18c
[0x18c:0x1d9]
---
Predecessors: [0x17e]
Successors: [0x1da]
---
0x18c JUMPDEST
0x18d POP
0x18e POP
0x18f PUSH1 0x40
0x191 DUP1
0x192 MLOAD
0x193 PUSH1 0x1
0x195 PUSH1 0xa0
0x197 PUSH1 0x2
0x199 EXP
0x19a SUB
0x19b CALLER
0x19c AND
0x19d DUP2
0x19e MSTORE
0x19f PUSH1 0x20
0x1a1 DUP2
0x1a2 ADD
0x1a3 DUP5
0x1a4 SWAP1
0x1a5 MSTORE
0x1a6 PUSH1 0x1
0x1a8 DUP2
0x1a9 DUP4
0x1aa ADD
0x1ab MSTORE
0x1ac SWAP1
0x1ad MLOAD
0x1ae PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1cf SWAP3
0x1d0 POP
0x1d1 SWAP1
0x1d2 DUP2
0x1d3 SWAP1
0x1d4 SUB
0x1d5 PUSH1 0x60
0x1d7 ADD
0x1d8 SWAP1
0x1d9 LOG1
---
0x18c: JUMPDEST 
0x18f: V130 = 0x40
0x192: V131 = M[0x40]
0x193: V132 = 0x1
0x195: V133 = 0xa0
0x197: V134 = 0x2
0x199: V135 = EXP 0x2 0xa0
0x19a: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19b: V137 = CALLER
0x19c: V138 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x19e: M[V131] = V138
0x19f: V139 = 0x20
0x1a2: V140 = ADD V131 0x20
0x1a5: M[V140] = V53
0x1a6: V141 = 0x1
0x1aa: V142 = ADD 0x40 V131
0x1ab: M[V142] = 0x1
0x1ad: V143 = M[0x40]
0x1ae: V144 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1d4: V145 = SUB V131 V143
0x1d5: V146 = 0x60
0x1d7: V147 = ADD 0x60 V145
0x1d9: LOG V143 V147 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, 0x1dd, V53, V82, 0xa9059cbb, V113]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x1dd, V53]

================================

Block 0x1da
[0x1da:0x1dc]
---
Predecessors: [0x18c, 0x504, 0x539]
Successors: [0x1dd]
---
0x1da JUMPDEST
0x1db POP
0x1dc JUMP
---
0x1da: JUMPDEST 
0x1dc: JUMP 0x1dd
---
Entry stack: [V10, 0x1dd, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1dd
[0x1dd:0x1de]
---
Predecessors: [0x1da, 0x3b8, 0x59e]
Successors: []
---
0x1dd JUMPDEST
0x1de STOP
---
0x1dd: JUMPDEST 
0x1de: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1df
[0x1df:0x1e5]
---
Predecessors: [0xb]
Successors: [0x1e6, 0x1e7]
---
0x1df JUMPDEST
0x1e0 CALLVALUE
0x1e1 ISZERO
0x1e2 PUSH2 0x1e7
0x1e5 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V148 = CALLVALUE
0x1e1: V149 = ISZERO V148
0x1e2: V150 = 0x1e7
0x1e5: JUMPI 0x1e7 V149
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e6
[0x1e6:0x1e6]
---
Predecessors: [0x1df]
Successors: []
---
0x1e6 INVALID
---
0x1e6: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e7
[0x1e7:0x1ee]
---
Predecessors: [0x1df]
Successors: [0x333]
---
0x1e7 JUMPDEST
0x1e8 PUSH2 0x1dd
0x1eb PUSH2 0x333
0x1ee JUMP
---
0x1e7: JUMPDEST 
0x1e8: V151 = 0x1dd
0x1eb: V152 = 0x333
0x1ee: JUMP 0x333
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1dd]
Exit stack: [V10, 0x1dd]

================================

Block 0x1ef
[0x1ef:0x1f0]
---
Predecessors: []
Successors: []
---
0x1ef JUMPDEST
0x1f0 STOP
---
0x1ef: JUMPDEST 
0x1f0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f1
[0x1f1:0x1f7]
---
Predecessors: [0x3e]
Successors: [0x1f8, 0x1f9]
---
0x1f1 JUMPDEST
0x1f2 CALLVALUE
0x1f3 ISZERO
0x1f4 PUSH2 0x1f9
0x1f7 JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V153 = CALLVALUE
0x1f3: V154 = ISZERO V153
0x1f4: V155 = 0x1f9
0x1f7: JUMPI 0x1f9 V154
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f8
[0x1f8:0x1f8]
---
Predecessors: [0x1f1]
Successors: []
---
0x1f8 INVALID
---
0x1f8: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f9
[0x1f9:0x200]
---
Predecessors: [0x1f1]
Successors: [0x3ba]
---
0x1f9 JUMPDEST
0x1fa PUSH2 0x201
0x1fd PUSH2 0x3ba
0x200 JUMP
---
0x1f9: JUMPDEST 
0x1fa: V156 = 0x201
0x1fd: V157 = 0x3ba
0x200: JUMP 0x3ba
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x201]
Exit stack: [V10, 0x201]

================================

Block 0x201
[0x201:0x212]
---
Predecessors: [0x3ba, 0x3de, 0x3f0, 0x3f6, 0x3fc, 0x402]
Successors: []
---
0x201 JUMPDEST
0x202 PUSH1 0x40
0x204 DUP1
0x205 MLOAD
0x206 SWAP2
0x207 DUP3
0x208 MSTORE
0x209 MLOAD
0x20a SWAP1
0x20b DUP2
0x20c SWAP1
0x20d SUB
0x20e PUSH1 0x20
0x210 ADD
0x211 SWAP1
0x212 RETURN
---
0x201: JUMPDEST 
0x202: V158 = 0x40
0x205: V159 = M[0x40]
0x208: M[V159] = S0
0x209: V160 = M[0x40]
0x20d: V161 = SUB V159 V160
0x20e: V162 = 0x20
0x210: V163 = ADD 0x20 V161
0x212: RETURN V160 V163
---
Entry stack: [V10, 0x201, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x201]

================================

Block 0x213
[0x213:0x219]
---
Predecessors: [0x49]
Successors: [0x21a, 0x21b]
---
0x213 JUMPDEST
0x214 CALLVALUE
0x215 ISZERO
0x216 PUSH2 0x21b
0x219 JUMPI
---
0x213: JUMPDEST 
0x214: V164 = CALLVALUE
0x215: V165 = ISZERO V164
0x216: V166 = 0x21b
0x219: JUMPI 0x21b V165
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21a
[0x21a:0x21a]
---
Predecessors: [0x213]
Successors: []
---
0x21a INVALID
---
0x21a: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21b
[0x21b:0x222]
---
Predecessors: [0x213]
Successors: [0x3c0]
---
0x21b JUMPDEST
0x21c PUSH2 0x223
0x21f PUSH2 0x3c0
0x222 JUMP
---
0x21b: JUMPDEST 
0x21c: V167 = 0x223
0x21f: V168 = 0x3c0
0x222: JUMP 0x3c0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x223]
Exit stack: [V10, 0x223]

================================

Block 0x223
[0x223:0x23e]
---
Predecessors: [0x3c0, 0x3cf]
Successors: []
---
0x223 JUMPDEST
0x224 PUSH1 0x40
0x226 DUP1
0x227 MLOAD
0x228 PUSH1 0x1
0x22a PUSH1 0xa0
0x22c PUSH1 0x2
0x22e EXP
0x22f SUB
0x230 SWAP1
0x231 SWAP3
0x232 AND
0x233 DUP3
0x234 MSTORE
0x235 MLOAD
0x236 SWAP1
0x237 DUP2
0x238 SWAP1
0x239 SUB
0x23a PUSH1 0x20
0x23c ADD
0x23d SWAP1
0x23e RETURN
---
0x223: JUMPDEST 
0x224: V169 = 0x40
0x227: V170 = M[0x40]
0x228: V171 = 0x1
0x22a: V172 = 0xa0
0x22c: V173 = 0x2
0x22e: V174 = EXP 0x2 0xa0
0x22f: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x232: V176 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x234: M[V170] = V176
0x235: V177 = M[0x40]
0x239: V178 = SUB V170 V177
0x23a: V179 = 0x20
0x23c: V180 = ADD 0x20 V178
0x23e: RETURN V177 V180
---
Entry stack: [V10, 0x223, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x223]

================================

Block 0x23f
[0x23f:0x245]
---
Predecessors: [0x54]
Successors: [0x246, 0x247]
---
0x23f JUMPDEST
0x240 CALLVALUE
0x241 ISZERO
0x242 PUSH2 0x247
0x245 JUMPI
---
0x23f: JUMPDEST 
0x240: V181 = CALLVALUE
0x241: V182 = ISZERO V181
0x242: V183 = 0x247
0x245: JUMPI 0x247 V182
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x246
[0x246:0x246]
---
Predecessors: [0x23f]
Successors: []
---
0x246 INVALID
---
0x246: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x247
[0x247:0x24e]
---
Predecessors: [0x23f]
Successors: [0x3cf]
---
0x247 JUMPDEST
0x248 PUSH2 0x223
0x24b PUSH2 0x3cf
0x24e JUMP
---
0x247: JUMPDEST 
0x248: V184 = 0x223
0x24b: V185 = 0x3cf
0x24e: JUMP 0x3cf
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x223]
Exit stack: [V10, 0x223]

================================

Block 0x24f
[0x24f:0x26a]
---
Predecessors: []
Successors: []
---
0x24f JUMPDEST
0x250 PUSH1 0x40
0x252 DUP1
0x253 MLOAD
0x254 PUSH1 0x1
0x256 PUSH1 0xa0
0x258 PUSH1 0x2
0x25a EXP
0x25b SUB
0x25c SWAP1
0x25d SWAP3
0x25e AND
0x25f DUP3
0x260 MSTORE
0x261 MLOAD
0x262 SWAP1
0x263 DUP2
0x264 SWAP1
0x265 SUB
0x266 PUSH1 0x20
0x268 ADD
0x269 SWAP1
0x26a RETURN
---
0x24f: JUMPDEST 
0x250: V186 = 0x40
0x253: V187 = M[0x40]
0x254: V188 = 0x1
0x256: V189 = 0xa0
0x258: V190 = 0x2
0x25a: V191 = EXP 0x2 0xa0
0x25b: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25e: V193 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x260: M[V187] = V193
0x261: V194 = M[0x40]
0x265: V195 = SUB V187 V194
0x266: V196 = 0x20
0x268: V197 = ADD 0x20 V195
0x26a: RETURN V194 V197
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x26b
[0x26b:0x271]
---
Predecessors: [0x5f]
Successors: [0x272, 0x273]
---
0x26b JUMPDEST
0x26c CALLVALUE
0x26d ISZERO
0x26e PUSH2 0x273
0x271 JUMPI
---
0x26b: JUMPDEST 
0x26c: V198 = CALLVALUE
0x26d: V199 = ISZERO V198
0x26e: V200 = 0x273
0x271: JUMPI 0x273 V199
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x272
[0x272:0x272]
---
Predecessors: [0x26b]
Successors: []
---
0x272 INVALID
---
0x272: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x273
[0x273:0x286]
---
Predecessors: [0x26b]
Successors: [0x3de]
---
0x273 JUMPDEST
0x274 PUSH2 0x201
0x277 PUSH1 0x1
0x279 PUSH1 0xa0
0x27b PUSH1 0x2
0x27d EXP
0x27e SUB
0x27f PUSH1 0x4
0x281 CALLDATALOAD
0x282 AND
0x283 PUSH2 0x3de
0x286 JUMP
---
0x273: JUMPDEST 
0x274: V201 = 0x201
0x277: V202 = 0x1
0x279: V203 = 0xa0
0x27b: V204 = 0x2
0x27d: V205 = EXP 0x2 0xa0
0x27e: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27f: V207 = 0x4
0x281: V208 = CALLDATALOAD 0x4
0x282: V209 = AND V208 0xffffffffffffffffffffffffffffffffffffffff
0x283: V210 = 0x3de
0x286: JUMP 0x3de
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x201, V209]
Exit stack: [V10, 0x201, V209]

================================

Block 0x287
[0x287:0x298]
---
Predecessors: []
Successors: []
---
0x287 JUMPDEST
0x288 PUSH1 0x40
0x28a DUP1
0x28b MLOAD
0x28c SWAP2
0x28d DUP3
0x28e MSTORE
0x28f MLOAD
0x290 SWAP1
0x291 DUP2
0x292 SWAP1
0x293 SUB
0x294 PUSH1 0x20
0x296 ADD
0x297 SWAP1
0x298 RETURN
---
0x287: JUMPDEST 
0x288: V211 = 0x40
0x28b: V212 = M[0x40]
0x28e: M[V212] = S0
0x28f: V213 = M[0x40]
0x293: V214 = SUB V212 V213
0x294: V215 = 0x20
0x296: V216 = ADD 0x20 V214
0x298: RETURN V213 V216
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x299
[0x299:0x29f]
---
Predecessors: [0x6a]
Successors: [0x2a0, 0x2a1]
---
0x299 JUMPDEST
0x29a CALLVALUE
0x29b ISZERO
0x29c PUSH2 0x2a1
0x29f JUMPI
---
0x299: JUMPDEST 
0x29a: V217 = CALLVALUE
0x29b: V218 = ISZERO V217
0x29c: V219 = 0x2a1
0x29f: JUMPI 0x2a1 V218
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a0
[0x2a0:0x2a0]
---
Predecessors: [0x299]
Successors: []
---
0x2a0 INVALID
---
0x2a0: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a1
[0x2a1:0x2a8]
---
Predecessors: [0x299]
Successors: [0x3f0]
---
0x2a1 JUMPDEST
0x2a2 PUSH2 0x201
0x2a5 PUSH2 0x3f0
0x2a8 JUMP
---
0x2a1: JUMPDEST 
0x2a2: V220 = 0x201
0x2a5: V221 = 0x3f0
0x2a8: JUMP 0x3f0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x201]
Exit stack: [V10, 0x201]

================================

Block 0x2a9
[0x2a9:0x2ba]
---
Predecessors: []
Successors: []
---
0x2a9 JUMPDEST
0x2aa PUSH1 0x40
0x2ac DUP1
0x2ad MLOAD
0x2ae SWAP2
0x2af DUP3
0x2b0 MSTORE
0x2b1 MLOAD
0x2b2 SWAP1
0x2b3 DUP2
0x2b4 SWAP1
0x2b5 SUB
0x2b6 PUSH1 0x20
0x2b8 ADD
0x2b9 SWAP1
0x2ba RETURN
---
0x2a9: JUMPDEST 
0x2aa: V222 = 0x40
0x2ad: V223 = M[0x40]
0x2b0: M[V223] = S0
0x2b1: V224 = M[0x40]
0x2b5: V225 = SUB V223 V224
0x2b6: V226 = 0x20
0x2b8: V227 = ADD 0x20 V225
0x2ba: RETURN V224 V227
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2bb
[0x2bb:0x2c1]
---
Predecessors: [0x75]
Successors: [0x2c2, 0x2c3]
---
0x2bb JUMPDEST
0x2bc CALLVALUE
0x2bd ISZERO
0x2be PUSH2 0x2c3
0x2c1 JUMPI
---
0x2bb: JUMPDEST 
0x2bc: V228 = CALLVALUE
0x2bd: V229 = ISZERO V228
0x2be: V230 = 0x2c3
0x2c1: JUMPI 0x2c3 V229
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c2
[0x2c2:0x2c2]
---
Predecessors: [0x2bb]
Successors: []
---
0x2c2 INVALID
---
0x2c2: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c3
[0x2c3:0x2ca]
---
Predecessors: [0x2bb]
Successors: [0x3f6]
---
0x2c3 JUMPDEST
0x2c4 PUSH2 0x201
0x2c7 PUSH2 0x3f6
0x2ca JUMP
---
0x2c3: JUMPDEST 
0x2c4: V231 = 0x201
0x2c7: V232 = 0x3f6
0x2ca: JUMP 0x3f6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x201]
Exit stack: [V10, 0x201]

================================

Block 0x2cb
[0x2cb:0x2dc]
---
Predecessors: []
Successors: []
---
0x2cb JUMPDEST
0x2cc PUSH1 0x40
0x2ce DUP1
0x2cf MLOAD
0x2d0 SWAP2
0x2d1 DUP3
0x2d2 MSTORE
0x2d3 MLOAD
0x2d4 SWAP1
0x2d5 DUP2
0x2d6 SWAP1
0x2d7 SUB
0x2d8 PUSH1 0x20
0x2da ADD
0x2db SWAP1
0x2dc RETURN
---
0x2cb: JUMPDEST 
0x2cc: V233 = 0x40
0x2cf: V234 = M[0x40]
0x2d2: M[V234] = S0
0x2d3: V235 = M[0x40]
0x2d7: V236 = SUB V234 V235
0x2d8: V237 = 0x20
0x2da: V238 = ADD 0x20 V236
0x2dc: RETURN V235 V238
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2dd
[0x2dd:0x2e3]
---
Predecessors: [0x80]
Successors: [0x2e4, 0x2e5]
---
0x2dd JUMPDEST
0x2de CALLVALUE
0x2df ISZERO
0x2e0 PUSH2 0x2e5
0x2e3 JUMPI
---
0x2dd: JUMPDEST 
0x2de: V239 = CALLVALUE
0x2df: V240 = ISZERO V239
0x2e0: V241 = 0x2e5
0x2e3: JUMPI 0x2e5 V240
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e4
[0x2e4:0x2e4]
---
Predecessors: [0x2dd]
Successors: []
---
0x2e4 INVALID
---
0x2e4: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e5
[0x2e5:0x2ec]
---
Predecessors: [0x2dd]
Successors: [0x3fc]
---
0x2e5 JUMPDEST
0x2e6 PUSH2 0x201
0x2e9 PUSH2 0x3fc
0x2ec JUMP
---
0x2e5: JUMPDEST 
0x2e6: V242 = 0x201
0x2e9: V243 = 0x3fc
0x2ec: JUMP 0x3fc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x201]
Exit stack: [V10, 0x201]

================================

Block 0x2ed
[0x2ed:0x2fe]
---
Predecessors: []
Successors: []
---
0x2ed JUMPDEST
0x2ee PUSH1 0x40
0x2f0 DUP1
0x2f1 MLOAD
0x2f2 SWAP2
0x2f3 DUP3
0x2f4 MSTORE
0x2f5 MLOAD
0x2f6 SWAP1
0x2f7 DUP2
0x2f8 SWAP1
0x2f9 SUB
0x2fa PUSH1 0x20
0x2fc ADD
0x2fd SWAP1
0x2fe RETURN
---
0x2ed: JUMPDEST 
0x2ee: V244 = 0x40
0x2f1: V245 = M[0x40]
0x2f4: M[V245] = S0
0x2f5: V246 = M[0x40]
0x2f9: V247 = SUB V245 V246
0x2fa: V248 = 0x20
0x2fc: V249 = ADD 0x20 V247
0x2fe: RETURN V246 V249
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ff
[0x2ff:0x305]
---
Predecessors: [0x8b]
Successors: [0x306, 0x307]
---
0x2ff JUMPDEST
0x300 CALLVALUE
0x301 ISZERO
0x302 PUSH2 0x307
0x305 JUMPI
---
0x2ff: JUMPDEST 
0x300: V250 = CALLVALUE
0x301: V251 = ISZERO V250
0x302: V252 = 0x307
0x305: JUMPI 0x307 V251
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x306
[0x306:0x306]
---
Predecessors: [0x2ff]
Successors: []
---
0x306 INVALID
---
0x306: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x307
[0x307:0x30e]
---
Predecessors: [0x2ff]
Successors: [0x402]
---
0x307 JUMPDEST
0x308 PUSH2 0x201
0x30b PUSH2 0x402
0x30e JUMP
---
0x307: JUMPDEST 
0x308: V253 = 0x201
0x30b: V254 = 0x402
0x30e: JUMP 0x402
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x201]
Exit stack: [V10, 0x201]

================================

Block 0x30f
[0x30f:0x320]
---
Predecessors: []
Successors: []
---
0x30f JUMPDEST
0x310 PUSH1 0x40
0x312 DUP1
0x313 MLOAD
0x314 SWAP2
0x315 DUP3
0x316 MSTORE
0x317 MLOAD
0x318 SWAP1
0x319 DUP2
0x31a SWAP1
0x31b SUB
0x31c PUSH1 0x20
0x31e ADD
0x31f SWAP1
0x320 RETURN
---
0x30f: JUMPDEST 
0x310: V255 = 0x40
0x313: V256 = M[0x40]
0x316: M[V256] = S0
0x317: V257 = M[0x40]
0x31b: V258 = SUB V256 V257
0x31c: V259 = 0x20
0x31e: V260 = ADD 0x20 V258
0x320: RETURN V257 V260
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x321
[0x321:0x327]
---
Predecessors: [0x96]
Successors: [0x328, 0x329]
---
0x321 JUMPDEST
0x322 CALLVALUE
0x323 ISZERO
0x324 PUSH2 0x329
0x327 JUMPI
---
0x321: JUMPDEST 
0x322: V261 = CALLVALUE
0x323: V262 = ISZERO V261
0x324: V263 = 0x329
0x327: JUMPI 0x329 V262
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x328
[0x328:0x328]
---
Predecessors: [0x321]
Successors: []
---
0x328 INVALID
---
0x328: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x329
[0x329:0x330]
---
Predecessors: [0x321]
Successors: [0x408]
---
0x329 JUMPDEST
0x32a PUSH2 0x1dd
0x32d PUSH2 0x408
0x330 JUMP
---
0x329: JUMPDEST 
0x32a: V264 = 0x1dd
0x32d: V265 = 0x408
0x330: JUMP 0x408
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1dd]
Exit stack: [V10, 0x1dd]

================================

Block 0x331
[0x331:0x332]
---
Predecessors: []
Successors: []
---
0x331 JUMPDEST
0x332 STOP
---
0x331: JUMPDEST 
0x332: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x333
[0x333:0x33d]
---
Predecessors: [0x1e7]
Successors: [0x33e, 0x343]
---
0x333 JUMPDEST
0x334 PUSH1 0x3
0x336 SLOAD
0x337 TIMESTAMP
0x338 LT
0x339 ISZERO
0x33a PUSH2 0x343
0x33d JUMPI
---
0x333: JUMPDEST 
0x334: V266 = 0x3
0x336: V267 = S[0x3]
0x337: V268 = TIMESTAMP
0x338: V269 = LT V268 V267
0x339: V270 = ISZERO V269
0x33a: V271 = 0x343
0x33d: JUMPI 0x343 V270
---
Entry stack: [V10, 0x1dd]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd]

================================

Block 0x33e
[0x33e:0x342]
---
Predecessors: [0x333]
Successors: []
---
0x33e PUSH1 0x0
0x340 PUSH1 0x0
0x342 REVERT
---
0x33e: V272 = 0x0
0x340: V273 = 0x0
0x342: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1dd]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd]

================================

Block 0x343
[0x343:0x34e]
---
Predecessors: [0x333]
Successors: [0x34f, 0x3a7]
---
0x343 JUMPDEST
0x344 PUSH1 0x1
0x346 SLOAD
0x347 PUSH1 0x2
0x349 SLOAD
0x34a LT
0x34b PUSH2 0x3a7
0x34e JUMPI
---
0x343: JUMPDEST 
0x344: V274 = 0x1
0x346: V275 = S[0x1]
0x347: V276 = 0x2
0x349: V277 = S[0x2]
0x34a: V278 = LT V277 V275
0x34b: V279 = 0x3a7
0x34e: JUMPI 0x3a7 V278
---
Entry stack: [V10, 0x1dd]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd]

================================

Block 0x34f
[0x34f:0x3a6]
---
Predecessors: [0x343]
Successors: [0x3a7]
---
0x34f PUSH1 0x8
0x351 DUP1
0x352 SLOAD
0x353 PUSH1 0xff
0x355 NOT
0x356 AND
0x357 PUSH1 0x1
0x359 OR
0x35a SWAP1
0x35b SSTORE
0x35c PUSH1 0x0
0x35e SLOAD
0x35f PUSH1 0x2
0x361 SLOAD
0x362 PUSH1 0x40
0x364 DUP1
0x365 MLOAD
0x366 PUSH1 0x1
0x368 PUSH1 0xa0
0x36a PUSH1 0x2
0x36c EXP
0x36d SUB
0x36e SWAP1
0x36f SWAP4
0x370 AND
0x371 DUP4
0x372 MSTORE
0x373 PUSH1 0x20
0x375 DUP4
0x376 ADD
0x377 SWAP2
0x378 SWAP1
0x379 SWAP2
0x37a MSTORE
0x37b DUP1
0x37c MLOAD
0x37d PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x39e SWAP3
0x39f DUP2
0x3a0 SWAP1
0x3a1 SUB
0x3a2 SWAP1
0x3a3 SWAP2
0x3a4 ADD
0x3a5 SWAP1
0x3a6 LOG1
---
0x34f: V280 = 0x8
0x352: V281 = S[0x8]
0x353: V282 = 0xff
0x355: V283 = NOT 0xff
0x356: V284 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V281
0x357: V285 = 0x1
0x359: V286 = OR 0x1 V284
0x35b: S[0x8] = V286
0x35c: V287 = 0x0
0x35e: V288 = S[0x0]
0x35f: V289 = 0x2
0x361: V290 = S[0x2]
0x362: V291 = 0x40
0x365: V292 = M[0x40]
0x366: V293 = 0x1
0x368: V294 = 0xa0
0x36a: V295 = 0x2
0x36c: V296 = EXP 0x2 0xa0
0x36d: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x370: V298 = AND V288 0xffffffffffffffffffffffffffffffffffffffff
0x372: M[V292] = V298
0x373: V299 = 0x20
0x376: V300 = ADD V292 0x20
0x37a: M[V300] = V290
0x37c: V301 = M[0x40]
0x37d: V302 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x3a1: V303 = SUB V292 V301
0x3a4: V304 = ADD 0x40 V303
0x3a6: LOG V301 V304 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V10, 0x1dd]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd]

================================

Block 0x3a7
[0x3a7:0x3b6]
---
Predecessors: [0x343, 0x34f]
Successors: [0x3b7]
---
0x3a7 JUMPDEST
0x3a8 PUSH1 0x8
0x3aa DUP1
0x3ab SLOAD
0x3ac PUSH2 0xff00
0x3af NOT
0x3b0 AND
0x3b1 PUSH2 0x100
0x3b4 OR
0x3b5 SWAP1
0x3b6 SSTORE
---
0x3a7: JUMPDEST 
0x3a8: V305 = 0x8
0x3ab: V306 = S[0x8]
0x3ac: V307 = 0xff00
0x3af: V308 = NOT 0xff00
0x3b0: V309 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V306
0x3b1: V310 = 0x100
0x3b4: V311 = OR 0x100 V309
0x3b6: S[0x8] = V311
---
Entry stack: [V10, 0x1dd]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd]

================================

Block 0x3b7
[0x3b7:0x3b7]
---
Predecessors: [0x3a7]
Successors: [0x3b8]
---
0x3b7 JUMPDEST
---
0x3b7: JUMPDEST 
---
Entry stack: [V10, 0x1dd]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd]

================================

Block 0x3b8
[0x3b8:0x3b9]
---
Predecessors: [0x3b7]
Successors: [0x1dd]
---
0x3b8 JUMPDEST
0x3b9 JUMP
---
0x3b8: JUMPDEST 
0x3b9: JUMP 0x1dd
---
Entry stack: [V10, 0x1dd]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ba
[0x3ba:0x3bf]
---
Predecessors: [0x1f9]
Successors: [0x201]
---
0x3ba JUMPDEST
0x3bb PUSH1 0x3
0x3bd SLOAD
0x3be DUP2
0x3bf JUMP
---
0x3ba: JUMPDEST 
0x3bb: V312 = 0x3
0x3bd: V313 = S[0x3]
0x3bf: JUMP 0x201
---
Entry stack: [V10, 0x201]
Stack pops: 1
Stack additions: [S0, V313]
Exit stack: [V10, 0x201, V313]

================================

Block 0x3c0
[0x3c0:0x3ce]
---
Predecessors: [0x21b]
Successors: [0x223]
---
0x3c0 JUMPDEST
0x3c1 PUSH1 0x0
0x3c3 SLOAD
0x3c4 PUSH1 0x1
0x3c6 PUSH1 0xa0
0x3c8 PUSH1 0x2
0x3ca EXP
0x3cb SUB
0x3cc AND
0x3cd DUP2
0x3ce JUMP
---
0x3c0: JUMPDEST 
0x3c1: V314 = 0x0
0x3c3: V315 = S[0x0]
0x3c4: V316 = 0x1
0x3c6: V317 = 0xa0
0x3c8: V318 = 0x2
0x3ca: V319 = EXP 0x2 0xa0
0x3cb: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cc: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x3ce: JUMP 0x223
---
Entry stack: [V10, 0x223]
Stack pops: 1
Stack additions: [S0, V321]
Exit stack: [V10, 0x223, V321]

================================

Block 0x3cf
[0x3cf:0x3dd]
---
Predecessors: [0x247]
Successors: [0x223]
---
0x3cf JUMPDEST
0x3d0 PUSH1 0x6
0x3d2 SLOAD
0x3d3 PUSH1 0x1
0x3d5 PUSH1 0xa0
0x3d7 PUSH1 0x2
0x3d9 EXP
0x3da SUB
0x3db AND
0x3dc DUP2
0x3dd JUMP
---
0x3cf: JUMPDEST 
0x3d0: V322 = 0x6
0x3d2: V323 = S[0x6]
0x3d3: V324 = 0x1
0x3d5: V325 = 0xa0
0x3d7: V326 = 0x2
0x3d9: V327 = EXP 0x2 0xa0
0x3da: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3db: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x3dd: JUMP 0x223
---
Entry stack: [V10, 0x223]
Stack pops: 1
Stack additions: [S0, V329]
Exit stack: [V10, 0x223, V329]

================================

Block 0x3de
[0x3de:0x3ef]
---
Predecessors: [0x273]
Successors: [0x201]
---
0x3de JUMPDEST
0x3df PUSH1 0x7
0x3e1 PUSH1 0x20
0x3e3 MSTORE
0x3e4 PUSH1 0x0
0x3e6 SWAP1
0x3e7 DUP2
0x3e8 MSTORE
0x3e9 PUSH1 0x40
0x3eb SWAP1
0x3ec SHA3
0x3ed SLOAD
0x3ee DUP2
0x3ef JUMP
---
0x3de: JUMPDEST 
0x3df: V330 = 0x7
0x3e1: V331 = 0x20
0x3e3: M[0x20] = 0x7
0x3e4: V332 = 0x0
0x3e8: M[0x0] = V209
0x3e9: V333 = 0x40
0x3ec: V334 = SHA3 0x0 0x40
0x3ed: V335 = S[V334]
0x3ef: JUMP 0x201
---
Entry stack: [V10, 0x201, V209]
Stack pops: 2
Stack additions: [S1, V335]
Exit stack: [V10, 0x201, V335]

================================

Block 0x3f0
[0x3f0:0x3f5]
---
Predecessors: [0x2a1]
Successors: [0x201]
---
0x3f0 JUMPDEST
0x3f1 PUSH1 0x1
0x3f3 SLOAD
0x3f4 DUP2
0x3f5 JUMP
---
0x3f0: JUMPDEST 
0x3f1: V336 = 0x1
0x3f3: V337 = S[0x1]
0x3f5: JUMP 0x201
---
Entry stack: [V10, 0x201]
Stack pops: 1
Stack additions: [S0, V337]
Exit stack: [V10, 0x201, V337]

================================

Block 0x3f6
[0x3f6:0x3fb]
---
Predecessors: [0x2c3]
Successors: [0x201]
---
0x3f6 JUMPDEST
0x3f7 PUSH1 0x2
0x3f9 SLOAD
0x3fa DUP2
0x3fb JUMP
---
0x3f6: JUMPDEST 
0x3f7: V338 = 0x2
0x3f9: V339 = S[0x2]
0x3fb: JUMP 0x201
---
Entry stack: [V10, 0x201]
Stack pops: 1
Stack additions: [S0, V339]
Exit stack: [V10, 0x201, V339]

================================

Block 0x3fc
[0x3fc:0x401]
---
Predecessors: [0x2e5]
Successors: [0x201]
---
0x3fc JUMPDEST
0x3fd PUSH1 0x5
0x3ff SLOAD
0x400 DUP2
0x401 JUMP
---
0x3fc: JUMPDEST 
0x3fd: V340 = 0x5
0x3ff: V341 = S[0x5]
0x401: JUMP 0x201
---
Entry stack: [V10, 0x201]
Stack pops: 1
Stack additions: [S0, V341]
Exit stack: [V10, 0x201, V341]

================================

Block 0x402
[0x402:0x407]
---
Predecessors: [0x307]
Successors: [0x201]
---
0x402 JUMPDEST
0x403 PUSH1 0x4
0x405 SLOAD
0x406 DUP2
0x407 JUMP
---
0x402: JUMPDEST 
0x403: V342 = 0x4
0x405: V343 = S[0x4]
0x407: JUMP 0x201
---
Entry stack: [V10, 0x201]
Stack pops: 1
Stack additions: [S0, V343]
Exit stack: [V10, 0x201, V343]

================================

Block 0x408
[0x408:0x415]
---
Predecessors: [0x329]
Successors: [0x416, 0x41b]
---
0x408 JUMPDEST
0x409 PUSH1 0x3
0x40b SLOAD
0x40c PUSH1 0x0
0x40e SWAP1
0x40f TIMESTAMP
0x410 LT
0x411 ISZERO
0x412 PUSH2 0x41b
0x415 JUMPI
---
0x408: JUMPDEST 
0x409: V344 = 0x3
0x40b: V345 = S[0x3]
0x40c: V346 = 0x0
0x40f: V347 = TIMESTAMP
0x410: V348 = LT V347 V345
0x411: V349 = ISZERO V348
0x412: V350 = 0x41b
0x415: JUMPI 0x41b V349
---
Entry stack: [V10, 0x1dd]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1dd, 0x0]

================================

Block 0x416
[0x416:0x41a]
---
Predecessors: [0x408]
Successors: []
---
0x416 PUSH1 0x0
0x418 PUSH1 0x0
0x41a REVERT
---
0x416: V351 = 0x0
0x418: V352 = 0x0
0x41a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1dd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd, 0x0]

================================

Block 0x41b
[0x41b:0x427]
---
Predecessors: [0x408]
Successors: [0x428, 0x4e2]
---
0x41b JUMPDEST
0x41c PUSH1 0x8
0x41e SLOAD
0x41f PUSH1 0xff
0x421 AND
0x422 ISZERO
0x423 ISZERO
0x424 PUSH2 0x4e2
0x427 JUMPI
---
0x41b: JUMPDEST 
0x41c: V353 = 0x8
0x41e: V354 = S[0x8]
0x41f: V355 = 0xff
0x421: V356 = AND 0xff V354
0x422: V357 = ISZERO V356
0x423: V358 = ISZERO V357
0x424: V359 = 0x4e2
0x427: JUMPI 0x4e2 V358
---
Entry stack: [V10, 0x1dd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd, 0x0]

================================

Block 0x428
[0x428:0x44e]
---
Predecessors: [0x41b]
Successors: [0x44f, 0x4e2]
---
0x428 POP
0x429 PUSH1 0x1
0x42b PUSH1 0xa0
0x42d PUSH1 0x2
0x42f EXP
0x430 SUB
0x431 CALLER
0x432 AND
0x433 PUSH1 0x0
0x435 SWAP1
0x436 DUP2
0x437 MSTORE
0x438 PUSH1 0x7
0x43a PUSH1 0x20
0x43c MSTORE
0x43d PUSH1 0x40
0x43f DUP2
0x440 SHA3
0x441 DUP1
0x442 SLOAD
0x443 SWAP1
0x444 DUP3
0x445 SWAP1
0x446 SSTORE
0x447 SWAP1
0x448 DUP2
0x449 GT
0x44a ISZERO
0x44b PUSH2 0x4e2
0x44e JUMPI
---
0x429: V360 = 0x1
0x42b: V361 = 0xa0
0x42d: V362 = 0x2
0x42f: V363 = EXP 0x2 0xa0
0x430: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x431: V365 = CALLER
0x432: V366 = AND V365 0xffffffffffffffffffffffffffffffffffffffff
0x433: V367 = 0x0
0x437: M[0x0] = V366
0x438: V368 = 0x7
0x43a: V369 = 0x20
0x43c: M[0x20] = 0x7
0x43d: V370 = 0x40
0x440: V371 = SHA3 0x0 0x40
0x442: V372 = S[V371]
0x446: S[V371] = 0x0
0x449: V373 = GT V372 0x0
0x44a: V374 = ISZERO V373
0x44b: V375 = 0x4e2
0x44e: JUMPI 0x4e2 V374
---
Entry stack: [V10, 0x1dd, 0x0]
Stack pops: 1
Stack additions: [V372]
Exit stack: [V10, 0x1dd, V372]

================================

Block 0x44f
[0x44f:0x478]
---
Predecessors: [0x428]
Successors: [0x479, 0x4c6]
---
0x44f PUSH1 0x40
0x451 MLOAD
0x452 PUSH1 0x1
0x454 PUSH1 0xa0
0x456 PUSH1 0x2
0x458 EXP
0x459 SUB
0x45a CALLER
0x45b AND
0x45c SWAP1
0x45d DUP3
0x45e ISZERO
0x45f PUSH2 0x8fc
0x462 MUL
0x463 SWAP1
0x464 DUP4
0x465 SWAP1
0x466 PUSH1 0x0
0x468 DUP2
0x469 DUP2
0x46a DUP2
0x46b DUP6
0x46c DUP9
0x46d DUP9
0x46e CALL
0x46f SWAP4
0x470 POP
0x471 POP
0x472 POP
0x473 POP
0x474 ISZERO
0x475 PUSH2 0x4c6
0x478 JUMPI
---
0x44f: V376 = 0x40
0x451: V377 = M[0x40]
0x452: V378 = 0x1
0x454: V379 = 0xa0
0x456: V380 = 0x2
0x458: V381 = EXP 0x2 0xa0
0x459: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45a: V383 = CALLER
0x45b: V384 = AND V383 0xffffffffffffffffffffffffffffffffffffffff
0x45e: V385 = ISZERO V372
0x45f: V386 = 0x8fc
0x462: V387 = MUL 0x8fc V385
0x466: V388 = 0x0
0x46e: V389 = CALL V387 V384 V372 V377 0x0 V377 0x0
0x474: V390 = ISZERO V389
0x475: V391 = 0x4c6
0x478: JUMPI 0x4c6 V390
---
Entry stack: [V10, 0x1dd, V372]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1dd, V372]

================================

Block 0x479
[0x479:0x4c5]
---
Predecessors: [0x44f]
Successors: [0x4e2]
---
0x479 PUSH1 0x40
0x47b DUP1
0x47c MLOAD
0x47d PUSH1 0x1
0x47f PUSH1 0xa0
0x481 PUSH1 0x2
0x483 EXP
0x484 SUB
0x485 CALLER
0x486 AND
0x487 DUP2
0x488 MSTORE
0x489 PUSH1 0x20
0x48b DUP2
0x48c ADD
0x48d DUP4
0x48e SWAP1
0x48f MSTORE
0x490 PUSH1 0x0
0x492 DUP2
0x493 DUP4
0x494 ADD
0x495 MSTORE
0x496 SWAP1
0x497 MLOAD
0x498 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4b9 SWAP2
0x4ba DUP2
0x4bb SWAP1
0x4bc SUB
0x4bd PUSH1 0x60
0x4bf ADD
0x4c0 SWAP1
0x4c1 LOG1
0x4c2 PUSH2 0x4e2
0x4c5 JUMP
---
0x479: V392 = 0x40
0x47c: V393 = M[0x40]
0x47d: V394 = 0x1
0x47f: V395 = 0xa0
0x481: V396 = 0x2
0x483: V397 = EXP 0x2 0xa0
0x484: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x485: V399 = CALLER
0x486: V400 = AND V399 0xffffffffffffffffffffffffffffffffffffffff
0x488: M[V393] = V400
0x489: V401 = 0x20
0x48c: V402 = ADD V393 0x20
0x48f: M[V402] = V372
0x490: V403 = 0x0
0x494: V404 = ADD 0x40 V393
0x495: M[V404] = 0x0
0x497: V405 = M[0x40]
0x498: V406 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4bc: V407 = SUB V393 V405
0x4bd: V408 = 0x60
0x4bf: V409 = ADD 0x60 V407
0x4c1: LOG V405 V409 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4c2: V410 = 0x4e2
0x4c5: JUMP 0x4e2
---
Entry stack: [V10, 0x1dd, V372]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1dd, V372]

================================

Block 0x4c6
[0x4c6:0x4e1]
---
Predecessors: [0x44f]
Successors: [0x4e2]
---
0x4c6 JUMPDEST
0x4c7 PUSH1 0x1
0x4c9 PUSH1 0xa0
0x4cb PUSH1 0x2
0x4cd EXP
0x4ce SUB
0x4cf CALLER
0x4d0 AND
0x4d1 PUSH1 0x0
0x4d3 SWAP1
0x4d4 DUP2
0x4d5 MSTORE
0x4d6 PUSH1 0x7
0x4d8 PUSH1 0x20
0x4da MSTORE
0x4db PUSH1 0x40
0x4dd SWAP1
0x4de SHA3
0x4df DUP2
0x4e0 SWAP1
0x4e1 SSTORE
---
0x4c6: JUMPDEST 
0x4c7: V411 = 0x1
0x4c9: V412 = 0xa0
0x4cb: V413 = 0x2
0x4cd: V414 = EXP 0x2 0xa0
0x4ce: V415 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cf: V416 = CALLER
0x4d0: V417 = AND V416 0xffffffffffffffffffffffffffffffffffffffff
0x4d1: V418 = 0x0
0x4d5: M[0x0] = V417
0x4d6: V419 = 0x7
0x4d8: V420 = 0x20
0x4da: M[0x20] = 0x7
0x4db: V421 = 0x40
0x4de: V422 = SHA3 0x0 0x40
0x4e1: S[V422] = V372
---
Entry stack: [V10, 0x1dd, V372]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1dd, V372]

================================

Block 0x4e2
[0x4e2:0x4e2]
---
Predecessors: [0x41b, 0x428, 0x479, 0x4c6]
Successors: [0x4e3]
---
0x4e2 JUMPDEST
---
0x4e2: JUMPDEST 
---
Entry stack: [V10, 0x1dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd, S0]

================================

Block 0x4e3
[0x4e3:0x4e3]
---
Predecessors: [0x4e2]
Successors: [0x4e4]
---
0x4e3 JUMPDEST
---
0x4e3: JUMPDEST 
---
Entry stack: [V10, 0x1dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd, S0]

================================

Block 0x4e4
[0x4e4:0x4f0]
---
Predecessors: [0x4e3]
Successors: [0x4f1, 0x504]
---
0x4e4 JUMPDEST
0x4e5 PUSH1 0x8
0x4e7 SLOAD
0x4e8 PUSH1 0xff
0x4ea AND
0x4eb DUP1
0x4ec ISZERO
0x4ed PUSH2 0x504
0x4f0 JUMPI
---
0x4e4: JUMPDEST 
0x4e5: V423 = 0x8
0x4e7: V424 = S[0x8]
0x4e8: V425 = 0xff
0x4ea: V426 = AND 0xff V424
0x4ec: V427 = ISZERO V426
0x4ed: V428 = 0x504
0x4f0: JUMPI 0x504 V427
---
Entry stack: [V10, 0x1dd, S0]
Stack pops: 0
Stack additions: [V426]
Exit stack: [V10, 0x1dd, S0, V426]

================================

Block 0x4f1
[0x4f1:0x503]
---
Predecessors: [0x4e4]
Successors: [0x504]
---
0x4f1 POP
0x4f2 PUSH1 0x0
0x4f4 SLOAD
0x4f5 CALLER
0x4f6 PUSH1 0x1
0x4f8 PUSH1 0xa0
0x4fa PUSH1 0x2
0x4fc EXP
0x4fd SUB
0x4fe SWAP1
0x4ff DUP2
0x500 AND
0x501 SWAP2
0x502 AND
0x503 EQ
---
0x4f2: V429 = 0x0
0x4f4: V430 = S[0x0]
0x4f5: V431 = CALLER
0x4f6: V432 = 0x1
0x4f8: V433 = 0xa0
0x4fa: V434 = 0x2
0x4fc: V435 = EXP 0x2 0xa0
0x4fd: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x500: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x502: V438 = AND V430 0xffffffffffffffffffffffffffffffffffffffff
0x503: V439 = EQ V438 V437
---
Entry stack: [V10, 0x1dd, S1, V426]
Stack pops: 1
Stack additions: [V439]
Exit stack: [V10, 0x1dd, S1, V439]

================================

Block 0x504
[0x504:0x509]
---
Predecessors: [0x4e4, 0x4f1]
Successors: [0x1da, 0x50a]
---
0x504 JUMPDEST
0x505 ISZERO
0x506 PUSH2 0x1da
0x509 JUMPI
---
0x504: JUMPDEST 
0x505: V440 = ISZERO S0
0x506: V441 = 0x1da
0x509: JUMPI 0x1da V440
---
Entry stack: [V10, 0x1dd, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1dd, S1]

================================

Block 0x50a
[0x50a:0x538]
---
Predecessors: [0x504]
Successors: [0x539, 0x590]
---
0x50a PUSH1 0x0
0x50c DUP1
0x50d SLOAD
0x50e PUSH1 0x2
0x510 SLOAD
0x511 PUSH1 0x40
0x513 MLOAD
0x514 PUSH1 0x1
0x516 PUSH1 0xa0
0x518 PUSH1 0x2
0x51a EXP
0x51b SUB
0x51c SWAP1
0x51d SWAP3
0x51e AND
0x51f SWAP3
0x520 DUP2
0x521 ISZERO
0x522 PUSH2 0x8fc
0x525 MUL
0x526 SWAP3
0x527 SWAP1
0x528 DUP2
0x529 DUP2
0x52a DUP2
0x52b DUP6
0x52c DUP9
0x52d DUP9
0x52e CALL
0x52f SWAP4
0x530 POP
0x531 POP
0x532 POP
0x533 POP
0x534 ISZERO
0x535 PUSH2 0x590
0x538 JUMPI
---
0x50a: V442 = 0x0
0x50d: V443 = S[0x0]
0x50e: V444 = 0x2
0x510: V445 = S[0x2]
0x511: V446 = 0x40
0x513: V447 = M[0x40]
0x514: V448 = 0x1
0x516: V449 = 0xa0
0x518: V450 = 0x2
0x51a: V451 = EXP 0x2 0xa0
0x51b: V452 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51e: V453 = AND V443 0xffffffffffffffffffffffffffffffffffffffff
0x521: V454 = ISZERO V445
0x522: V455 = 0x8fc
0x525: V456 = MUL 0x8fc V454
0x52e: V457 = CALL V456 V453 V445 V447 0x0 V447 0x0
0x534: V458 = ISZERO V457
0x535: V459 = 0x590
0x538: JUMPI 0x590 V458
---
Entry stack: [V10, 0x1dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd, S0]

================================

Block 0x539
[0x539:0x58f]
---
Predecessors: [0x50a]
Successors: [0x1da]
---
0x539 PUSH1 0x0
0x53b DUP1
0x53c SLOAD
0x53d PUSH1 0x2
0x53f SLOAD
0x540 PUSH1 0x40
0x542 DUP1
0x543 MLOAD
0x544 PUSH1 0x1
0x546 PUSH1 0xa0
0x548 PUSH1 0x2
0x54a EXP
0x54b SUB
0x54c SWAP1
0x54d SWAP4
0x54e AND
0x54f DUP4
0x550 MSTORE
0x551 PUSH1 0x20
0x553 DUP4
0x554 ADD
0x555 SWAP2
0x556 SWAP1
0x557 SWAP2
0x558 MSTORE
0x559 DUP2
0x55a DUP2
0x55b ADD
0x55c SWAP3
0x55d SWAP1
0x55e SWAP3
0x55f MSTORE
0x560 SWAP1
0x561 MLOAD
0x562 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x583 SWAP2
0x584 DUP2
0x585 SWAP1
0x586 SUB
0x587 PUSH1 0x60
0x589 ADD
0x58a SWAP1
0x58b LOG1
0x58c PUSH2 0x1da
0x58f JUMP
---
0x539: V460 = 0x0
0x53c: V461 = S[0x0]
0x53d: V462 = 0x2
0x53f: V463 = S[0x2]
0x540: V464 = 0x40
0x543: V465 = M[0x40]
0x544: V466 = 0x1
0x546: V467 = 0xa0
0x548: V468 = 0x2
0x54a: V469 = EXP 0x2 0xa0
0x54b: V470 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54e: V471 = AND V461 0xffffffffffffffffffffffffffffffffffffffff
0x550: M[V465] = V471
0x551: V472 = 0x20
0x554: V473 = ADD V465 0x20
0x558: M[V473] = V463
0x55b: V474 = ADD 0x40 V465
0x55f: M[V474] = 0x0
0x561: V475 = M[0x40]
0x562: V476 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x586: V477 = SUB V465 V475
0x587: V478 = 0x60
0x589: V479 = ADD 0x60 V477
0x58b: LOG V475 V479 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x58c: V480 = 0x1da
0x58f: JUMP 0x1da
---
Entry stack: [V10, 0x1dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd, S0]

================================

Block 0x590
[0x590:0x59a]
---
Predecessors: [0x50a]
Successors: [0x59b]
---
0x590 JUMPDEST
0x591 PUSH1 0x8
0x593 DUP1
0x594 SLOAD
0x595 PUSH1 0xff
0x597 NOT
0x598 AND
0x599 SWAP1
0x59a SSTORE
---
0x590: JUMPDEST 
0x591: V481 = 0x8
0x594: V482 = S[0x8]
0x595: V483 = 0xff
0x597: V484 = NOT 0xff
0x598: V485 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V482
0x59a: S[0x8] = V485
---
Entry stack: [V10, 0x1dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd, S0]

================================

Block 0x59b
[0x59b:0x59b]
---
Predecessors: [0x590]
Successors: [0x59c]
---
0x59b JUMPDEST
---
0x59b: JUMPDEST 
---
Entry stack: [V10, 0x1dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd, S0]

================================

Block 0x59c
[0x59c:0x59c]
---
Predecessors: [0x59b]
Successors: [0x59d]
---
0x59c JUMPDEST
---
0x59c: JUMPDEST 
---
Entry stack: [V10, 0x1dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd, S0]

================================

Block 0x59d
[0x59d:0x59d]
---
Predecessors: [0x59c]
Successors: [0x59e]
---
0x59d JUMPDEST
---
0x59d: JUMPDEST 
---
Entry stack: [V10, 0x1dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1dd, S0]

================================

Block 0x59e
[0x59e:0x5a0]
---
Predecessors: [0x59d]
Successors: [0x1dd]
---
0x59e JUMPDEST
0x59f POP
0x5a0 JUMP
---
0x59e: JUMPDEST 
0x5a0: JUMP 0x1dd
---
Entry stack: [V10, 0x1dd, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x5a1
[0x5a1:0x5ac]
---
Predecessors: []
Successors: [0x5ad]
Has unresolved jump.
---
0x5a1 STOP
0x5a2 LOG1
0x5a3 PUSH6 0x627a7a723058
0x5aa SHA3
0x5ab MISSING 0xbe
0x5ac JUMPI
---
0x5a1: STOP 
0x5a2: LOG S0 S1 S2
0x5a3: V486 = 0x627a7a723058
0x5aa: V487 = SHA3 0x627a7a723058 S3
0x5ab: MISSING 0xbe
0x5ac: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V487]
Exit stack: []

================================

Block 0x5ad
[0x5ad:0x5dd]
---
Predecessors: [0x5a1]
Successors: []
---
0x5ad MISSING 0xed
0x5ae LOG0
0x5af MISSING 0x1e
0x5b0 MISSING 0x4b
0x5b1 MISSING 0xa8
0x5b2 MSIZE
0x5b3 RETURN
0x5b4 MISSING 0xe8
0x5b5 SWAP7
0x5b6 JUMP
0x5b7 MISSING 0x24
0x5b8 EXTCODEHASH
0x5b9 MISSING 0xec
0x5ba MISSING 0xa6
0x5bb CALLVALUE
0x5bc PUSH2 0xee6e
0x5bf PUSH30 0x595d6d6ba2e3e7bf0e3fe40029
---
0x5ad: MISSING 0xed
0x5ae: LOG S0 S1
0x5af: MISSING 0x1e
0x5b0: MISSING 0x4b
0x5b1: MISSING 0xa8
0x5b2: V488 = MSIZE
0x5b3: RETURN V488 S0
0x5b4: MISSING 0xe8
0x5b6: JUMP S7
0x5b7: MISSING 0x24
0x5b8: V489 = EXTCODEHASH S0
0x5b9: MISSING 0xec
0x5ba: MISSING 0xa6
0x5bb: V490 = CALLVALUE
0x5bc: V491 = 0xee6e
0x5bf: V492 = 0x595d6d6ba2e3e7bf0e3fe40029
---
Entry stack: []
Stack pops: 0
Stack additions: [S1, S2, S3, S4, S5, S6, S0, V489, 0x595d6d6ba2e3e7bf0e3fe40029, 0xee6e, V490]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x1df
Exit block: 0x1dd
Body: 0x1dd, 0x1df, 0x1e6, 0x1e7, 0x333, 0x33e, 0x343, 0x34f, 0x3a7, 0x3b7, 0x3b8

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x1f1
Exit block: 0x201
Body: 0x1f1, 0x1f8, 0x1f9, 0x201, 0x3ba

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x213
Exit block: 0x223
Body: 0x213, 0x21a, 0x21b, 0x223, 0x3c0

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x23f
Exit block: 0x223
Body: 0x223, 0x23f, 0x246, 0x247, 0x3cf

Function 4:
Public function signature: 0x70a08231
Entry block: 0x26b
Exit block: 0x201
Body: 0x201, 0x26b, 0x272, 0x273, 0x3de

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x299
Exit block: 0x201
Body: 0x201, 0x299, 0x2a0, 0x2a1, 0x3f0

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x2bb
Exit block: 0x201
Body: 0x201, 0x2bb, 0x2c2, 0x2c3, 0x3f6

Function 7:
Public function signature: 0x9b2cb5d8
Entry block: 0x2dd
Exit block: 0x201
Body: 0x201, 0x2dd, 0x2e4, 0x2e5, 0x3fc

Function 8:
Public function signature: 0xa035b1fe
Entry block: 0x2ff
Exit block: 0x201
Body: 0x201, 0x2ff, 0x306, 0x307, 0x402

Function 9:
Public function signature: 0xfd6b7ef8
Entry block: 0x321
Exit block: 0x1dd
Body: 0x1da, 0x1dd, 0x321, 0x328, 0x329, 0x408, 0x416, 0x41b, 0x428, 0x44f, 0x479, 0x4c6, 0x4e2, 0x4e3, 0x4e4, 0x4f1, 0x504, 0x50a, 0x539, 0x590, 0x59b, 0x59c, 0x59d, 0x59e

Function 10:
Public fallback function
Entry block: 0xa1
Exit block: 0x1dd
Body: 0xa1, 0xa5, 0xb9, 0xbe, 0xcc, 0xd1, 0x115, 0x116, 0x17d, 0x17e, 0x18b, 0x18c, 0x1da, 0x1dd

