Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa0]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa0
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa0
0xa: JUMPI 0xa0 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0xfd]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x29dcb0cf
0x34 EQ
0x35 PUSH2 0xfd
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x29dcb0cf
0x34: V10 = EQ 0x29dcb0cf V8
0x35: V11 = 0xfd
0x38: JUMPI 0xfd V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x125]
---
0x39 DUP1
0x3a PUSH4 0x3ccfd60b
0x3f EQ
0x40 PUSH2 0x125
0x43 JUMPI
---
0x3a: V12 = 0x3ccfd60b
0x3f: V13 = EQ 0x3ccfd60b V8
0x40: V14 = 0x125
0x43: JUMPI 0x125 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x139]
---
0x44 DUP1
0x45 PUSH4 0x69ffa08a
0x4a EQ
0x4b PUSH2 0x139
0x4e JUMPI
---
0x45: V15 = 0x69ffa08a
0x4a: V16 = EQ 0x69ffa08a V8
0x4b: V17 = 0x139
0x4e: JUMPI 0x139 V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x175]
---
0x4f DUP1
0x50 PUSH4 0x78e97925
0x55 EQ
0x56 PUSH2 0x175
0x59 JUMPI
---
0x50: V18 = 0x78e97925
0x55: V19 = EQ 0x78e97925 V8
0x56: V20 = 0x175
0x59: JUMPI 0x175 V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0x19d]
---
0x5a DUP1
0x5b PUSH4 0x79ba5097
0x60 EQ
0x61 PUSH2 0x19d
0x64 JUMPI
---
0x5b: V21 = 0x79ba5097
0x60: V22 = EQ 0x79ba5097 V8
0x61: V23 = 0x19d
0x64: JUMPI 0x19d V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x6f]
---
Predecessors: [0x5a]
Successors: [0x70, 0x1b1]
---
0x65 DUP1
0x66 PUSH4 0x85b12c7c
0x6b EQ
0x6c PUSH2 0x1b1
0x6f JUMPI
---
0x66: V24 = 0x85b12c7c
0x6b: V25 = EQ 0x85b12c7c V8
0x6c: V26 = 0x1b1
0x6f: JUMPI 0x1b1 V25
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x70
[0x70:0x7a]
---
Predecessors: [0x65]
Successors: [0x7b, 0x1ce]
---
0x70 DUP1
0x71 PUSH4 0xa6f9dae1
0x76 EQ
0x77 PUSH2 0x1ce
0x7a JUMPI
---
0x71: V27 = 0xa6f9dae1
0x76: V28 = EQ 0xa6f9dae1 V8
0x77: V29 = 0x1ce
0x7a: JUMPI 0x1ce V28
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x7b
[0x7b:0x85]
---
Predecessors: [0x70]
Successors: [0x86, 0x1eb]
---
0x7b DUP1
0x7c PUSH4 0xb17fc36d
0x81 EQ
0x82 PUSH2 0x1eb
0x85 JUMPI
---
0x7c: V30 = 0xb17fc36d
0x81: V31 = EQ 0xb17fc36d V8
0x82: V32 = 0x1eb
0x85: JUMPI 0x1eb V31
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x86
[0x86:0x90]
---
Predecessors: [0x7b]
Successors: [0x91, 0x208]
---
0x86 DUP1
0x87 PUSH4 0xba278e08
0x8c EQ
0x8d PUSH2 0x208
0x90 JUMPI
---
0x87: V33 = 0xba278e08
0x8c: V34 = EQ 0xba278e08 V8
0x8d: V35 = 0x208
0x90: JUMPI 0x208 V34
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x91
[0x91:0x9b]
---
Predecessors: [0x86]
Successors: [0x9c, 0x22e]
---
0x91 DUP1
0x92 PUSH4 0xe93f57b9
0x97 EQ
0x98 PUSH2 0x22e
0x9b JUMPI
---
0x92: V36 = 0xe93f57b9
0x97: V37 = EQ 0xe93f57b9 V8
0x98: V38 = 0x22e
0x9b: JUMPI 0x22e V37
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x9c
[0x9c:0x9f]
---
Predecessors: [0x91]
Successors: [0xa0]
---
0x9c PUSH2 0xa0
0x9f JUMP
---
0x9c: V39 = 0xa0
0x9f: JUMP 0xa0
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xa0
[0xa0:0xa3]
---
Predecessors: [0x0, 0x9c]
Successors: [0xa4]
---
0xa0 JUMPDEST
0xa1 PUSH2 0xfb
---
0xa0: JUMPDEST 
0xa1: V40 = 0xfb
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xfb]
Exit stack: [V8, 0xfb]

================================

Block 0xa4
[0xa4:0xb1]
---
Predecessors: [0xa0]
Successors: [0xb2, 0xbc]
---
0xa4 JUMPDEST
0xa5 PUSH1 0x3
0xa7 PUSH1 0x0
0xa9 POP
0xaa SLOAD
0xab TIMESTAMP
0xac LT
0xad DUP1
0xae PUSH2 0xbc
0xb1 JUMPI
---
0xa4: JUMPDEST 
0xa5: V41 = 0x3
0xa7: V42 = 0x0
0xaa: V43 = S[0x3]
0xab: V44 = TIMESTAMP
0xac: V45 = LT V44 V43
0xae: V46 = 0xbc
0xb1: JUMPI 0xbc V45
---
Entry stack: [V8, 0xfb]
Stack pops: 0
Stack additions: [V45]
Exit stack: [V8, 0xfb, V45]

================================

Block 0xb2
[0xb2:0xbb]
---
Predecessors: [0xa4]
Successors: [0xbc]
---
0xb2 POP
0xb3 PUSH1 0x2
0xb5 PUSH1 0x0
0xb7 POP
0xb8 SLOAD
0xb9 TIMESTAMP
0xba LT
0xbb ISZERO
---
0xb3: V47 = 0x2
0xb5: V48 = 0x0
0xb8: V49 = S[0x2]
0xb9: V50 = TIMESTAMP
0xba: V51 = LT V50 V49
0xbb: V52 = ISZERO V51
---
Entry stack: [V8, 0xfb, V45]
Stack pops: 1
Stack additions: [V52]
Exit stack: [V8, 0xfb, V52]

================================

Block 0xbc
[0xbc:0xc1]
---
Predecessors: [0xa4, 0xb2]
Successors: [0xc2, 0xc6]
---
0xbc JUMPDEST
0xbd ISZERO
0xbe PUSH2 0xc6
0xc1 JUMPI
---
0xbc: JUMPDEST 
0xbd: V53 = ISZERO S0
0xbe: V54 = 0xc6
0xc1: JUMPI 0xc6 V53
---
Entry stack: [V8, 0xfb, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0xfb]

================================

Block 0xc2
[0xc2:0xc5]
---
Predecessors: [0xbc]
Successors: []
---
0xc2 PUSH2 0x2
0xc5 JUMP
---
0xc2: V55 = 0x2
0xc5: THROW 
---
Entry stack: [V8, 0xfb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xfb]

================================

Block 0xc6
[0xc6:0xea]
---
Predecessors: [0xbc]
Successors: [0xeb, 0xf8]
---
0xc6 JUMPDEST
0xc7 PUSH1 0x4
0xc9 PUSH1 0x0
0xcb POP
0xcc SLOAD
0xcd ADDRESS
0xce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3 AND
0xe4 BALANCE
0xe5 GT
0xe6 ISZERO
0xe7 PUSH2 0xf8
0xea JUMPI
---
0xc6: JUMPDEST 
0xc7: V56 = 0x4
0xc9: V57 = 0x0
0xcc: V58 = S[0x4]
0xcd: V59 = ADDRESS
0xce: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xe4: V62 = BALANCE V61
0xe5: V63 = GT V62 V58
0xe6: V64 = ISZERO V63
0xe7: V65 = 0xf8
0xea: JUMPI 0xf8 V64
---
Entry stack: [V8, 0xfb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xfb]

================================

Block 0xeb
[0xeb:0xf7]
---
Predecessors: [0xc6]
Successors: [0xf8]
---
0xeb PUSH1 0x1
0xed TIMESTAMP
0xee SUB
0xef PUSH1 0x2
0xf1 PUSH1 0x0
0xf3 POP
0xf4 DUP2
0xf5 SWAP1
0xf6 SSTORE
0xf7 POP
---
0xeb: V66 = 0x1
0xed: V67 = TIMESTAMP
0xee: V68 = SUB V67 0x1
0xef: V69 = 0x2
0xf1: V70 = 0x0
0xf6: S[0x2] = V68
---
Entry stack: [V8, 0xfb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xfb]

================================

Block 0xf8
[0xf8:0xf8]
---
Predecessors: [0xc6, 0xeb]
Successors: [0xf9]
---
0xf8 JUMPDEST
---
0xf8: JUMPDEST 
---
Entry stack: [V8, 0xfb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xfb]

================================

Block 0xf9
[0xf9:0xfa]
---
Predecessors: [0xf8]
Successors: [0xfb]
---
0xf9 JUMPDEST
0xfa JUMP
---
0xf9: JUMPDEST 
0xfa: JUMP 0xfb
---
Entry stack: [V8, 0xfb]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xfb
[0xfb:0xfc]
---
Predecessors: [0xf9]
Successors: []
---
0xfb JUMPDEST
0xfc STOP
---
0xfb: JUMPDEST 
0xfc: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xfd
[0xfd:0x102]
---
Predecessors: [0xb]
Successors: [0x103]
---
0xfd JUMPDEST
0xfe CALLVALUE
0xff PUSH2 0x2
0x102 JUMPI
---
0xfd: JUMPDEST 
0xfe: V71 = CALLVALUE
0xff: V72 = 0x2
0x102: THROWI V71
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x103
[0x103:0x10e]
---
Predecessors: [0xfd]
Successors: [0x256]
---
0x103 PUSH2 0x10f
0x106 PUSH1 0x4
0x108 DUP1
0x109 POP
0x10a POP
0x10b PUSH2 0x256
0x10e JUMP
---
0x103: V73 = 0x10f
0x106: V74 = 0x4
0x10b: V75 = 0x256
0x10e: JUMP 0x256
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x10f]
Exit stack: [V8, 0x10f]

================================

Block 0x10f
[0x10f:0x124]
---
Predecessors: [0x256]
Successors: []
---
0x10f JUMPDEST
0x110 PUSH1 0x40
0x112 MLOAD
0x113 DUP1
0x114 DUP3
0x115 DUP2
0x116 MSTORE
0x117 PUSH1 0x20
0x119 ADD
0x11a SWAP2
0x11b POP
0x11c POP
0x11d PUSH1 0x40
0x11f MLOAD
0x120 DUP1
0x121 SWAP2
0x122 SUB
0x123 SWAP1
0x124 RETURN
---
0x10f: JUMPDEST 
0x110: V76 = 0x40
0x112: V77 = M[0x40]
0x116: M[V77] = V174
0x117: V78 = 0x20
0x119: V79 = ADD 0x20 V77
0x11d: V80 = 0x40
0x11f: V81 = M[0x40]
0x122: V82 = SUB V79 V81
0x124: RETURN V81 V82
---
Entry stack: [V8, 0x10f, V174]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x10f]

================================

Block 0x125
[0x125:0x12a]
---
Predecessors: [0x39]
Successors: [0x12b]
---
0x125 JUMPDEST
0x126 CALLVALUE
0x127 PUSH2 0x2
0x12a JUMPI
---
0x125: JUMPDEST 
0x126: V83 = CALLVALUE
0x127: V84 = 0x2
0x12a: THROWI V83
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x12b
[0x12b:0x136]
---
Predecessors: [0x125]
Successors: [0x25f]
---
0x12b PUSH2 0x137
0x12e PUSH1 0x4
0x130 DUP1
0x131 POP
0x132 POP
0x133 PUSH2 0x25f
0x136 JUMP
---
0x12b: V85 = 0x137
0x12e: V86 = 0x4
0x133: V87 = 0x25f
0x136: JUMP 0x25f
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x137]
Exit stack: [V8, 0x137]

================================

Block 0x137
[0x137:0x138]
---
Predecessors: [0x346]
Successors: []
---
0x137 JUMPDEST
0x138 STOP
---
0x137: JUMPDEST 
0x138: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x139
[0x139:0x13e]
---
Predecessors: [0x44]
Successors: [0x13f]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b PUSH2 0x2
0x13e JUMPI
---
0x139: JUMPDEST 
0x13a: V88 = CALLVALUE
0x13b: V89 = 0x2
0x13e: THROWI V88
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x13f
[0x13f:0x15c]
---
Predecessors: [0x139]
Successors: [0x348]
---
0x13f PUSH2 0x15d
0x142 PUSH1 0x4
0x144 DUP1
0x145 DUP1
0x146 CALLDATALOAD
0x147 SWAP1
0x148 PUSH1 0x20
0x14a ADD
0x14b SWAP1
0x14c SWAP2
0x14d SWAP1
0x14e DUP1
0x14f CALLDATALOAD
0x150 SWAP1
0x151 PUSH1 0x20
0x153 ADD
0x154 SWAP1
0x155 SWAP2
0x156 SWAP1
0x157 POP
0x158 POP
0x159 PUSH2 0x348
0x15c JUMP
---
0x13f: V90 = 0x15d
0x142: V91 = 0x4
0x146: V92 = CALLDATALOAD 0x4
0x148: V93 = 0x20
0x14a: V94 = ADD 0x20 0x4
0x14f: V95 = CALLDATALOAD 0x24
0x151: V96 = 0x20
0x153: V97 = ADD 0x20 0x24
0x159: V98 = 0x348
0x15c: JUMP 0x348
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x15d, V92, V95]
Exit stack: [V8, 0x15d, V92, V95]

================================

Block 0x15d
[0x15d:0x174]
---
Predecessors: [0x572]
Successors: []
---
0x15d JUMPDEST
0x15e PUSH1 0x40
0x160 MLOAD
0x161 DUP1
0x162 DUP3
0x163 ISZERO
0x164 ISZERO
0x165 DUP2
0x166 MSTORE
0x167 PUSH1 0x20
0x169 ADD
0x16a SWAP2
0x16b POP
0x16c POP
0x16d PUSH1 0x40
0x16f MLOAD
0x170 DUP1
0x171 SWAP2
0x172 SUB
0x173 SWAP1
0x174 RETURN
---
0x15d: JUMPDEST 
0x15e: V99 = 0x40
0x160: V100 = M[0x40]
0x163: V101 = ISZERO {0x0, 0x1}
0x164: V102 = ISZERO V101
0x166: M[V100] = V102
0x167: V103 = 0x20
0x169: V104 = ADD 0x20 V100
0x16d: V105 = 0x40
0x16f: V106 = M[0x40]
0x172: V107 = SUB V104 V106
0x174: RETURN V106 V107
---
Entry stack: [V8, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x175
[0x175:0x17a]
---
Predecessors: [0x4f]
Successors: [0x17b]
---
0x175 JUMPDEST
0x176 CALLVALUE
0x177 PUSH2 0x2
0x17a JUMPI
---
0x175: JUMPDEST 
0x176: V108 = CALLVALUE
0x177: V109 = 0x2
0x17a: THROWI V108
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x17b
[0x17b:0x186]
---
Predecessors: [0x175]
Successors: [0x57a]
---
0x17b PUSH2 0x187
0x17e PUSH1 0x4
0x180 DUP1
0x181 POP
0x182 POP
0x183 PUSH2 0x57a
0x186 JUMP
---
0x17b: V110 = 0x187
0x17e: V111 = 0x4
0x183: V112 = 0x57a
0x186: JUMP 0x57a
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x187]
Exit stack: [V8, 0x187]

================================

Block 0x187
[0x187:0x19c]
---
Predecessors: [0x57a]
Successors: []
---
0x187 JUMPDEST
0x188 PUSH1 0x40
0x18a MLOAD
0x18b DUP1
0x18c DUP3
0x18d DUP2
0x18e MSTORE
0x18f PUSH1 0x20
0x191 ADD
0x192 SWAP2
0x193 POP
0x194 POP
0x195 PUSH1 0x40
0x197 MLOAD
0x198 DUP1
0x199 SWAP2
0x19a SUB
0x19b SWAP1
0x19c RETURN
---
0x187: JUMPDEST 
0x188: V113 = 0x40
0x18a: V114 = M[0x40]
0x18e: M[V114] = V351
0x18f: V115 = 0x20
0x191: V116 = ADD 0x20 V114
0x195: V117 = 0x40
0x197: V118 = M[0x40]
0x19a: V119 = SUB V116 V118
0x19c: RETURN V118 V119
---
Entry stack: [V8, 0x187, V351]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x187]

================================

Block 0x19d
[0x19d:0x1a2]
---
Predecessors: [0x5a]
Successors: [0x1a3]
---
0x19d JUMPDEST
0x19e CALLVALUE
0x19f PUSH2 0x2
0x1a2 JUMPI
---
0x19d: JUMPDEST 
0x19e: V120 = CALLVALUE
0x19f: V121 = 0x2
0x1a2: THROWI V120
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x1a3
[0x1a3:0x1ae]
---
Predecessors: [0x19d]
Successors: [0x583]
---
0x1a3 PUSH2 0x1af
0x1a6 PUSH1 0x4
0x1a8 DUP1
0x1a9 POP
0x1aa POP
0x1ab PUSH2 0x583
0x1ae JUMP
---
0x1a3: V122 = 0x1af
0x1a6: V123 = 0x4
0x1ab: V124 = 0x583
0x1ae: JUMP 0x583
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x1af]
Exit stack: [V8, 0x1af]

================================

Block 0x1af
[0x1af:0x1b0]
---
Predecessors: [0x63a]
Successors: []
---
0x1af JUMPDEST
0x1b0 STOP
---
0x1af: JUMPDEST 
0x1b0: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x1b1
[0x1b1:0x1b6]
---
Predecessors: [0x65]
Successors: [0x1b7]
---
0x1b1 JUMPDEST
0x1b2 CALLVALUE
0x1b3 PUSH2 0x2
0x1b6 JUMPI
---
0x1b1: JUMPDEST 
0x1b2: V125 = CALLVALUE
0x1b3: V126 = 0x2
0x1b6: THROWI V125
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x1b7
[0x1b7:0x1cb]
---
Predecessors: [0x1b1]
Successors: [0x63c]
---
0x1b7 PUSH2 0x1cc
0x1ba PUSH1 0x4
0x1bc DUP1
0x1bd DUP1
0x1be CALLDATALOAD
0x1bf SWAP1
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 SWAP1
0x1c4 SWAP2
0x1c5 SWAP1
0x1c6 POP
0x1c7 POP
0x1c8 PUSH2 0x63c
0x1cb JUMP
---
0x1b7: V127 = 0x1cc
0x1ba: V128 = 0x4
0x1be: V129 = CALLDATALOAD 0x4
0x1c0: V130 = 0x20
0x1c2: V131 = ADD 0x20 0x4
0x1c8: V132 = 0x63c
0x1cb: JUMP 0x63c
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x1cc, V129]
Exit stack: [V8, 0x1cc, V129]

================================

Block 0x1cc
[0x1cc:0x1cd]
---
Predecessors: [0x6a4]
Successors: []
---
0x1cc JUMPDEST
0x1cd STOP
---
0x1cc: JUMPDEST 
0x1cd: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x1ce
[0x1ce:0x1d3]
---
Predecessors: [0x70]
Successors: [0x1d4]
---
0x1ce JUMPDEST
0x1cf CALLVALUE
0x1d0 PUSH2 0x2
0x1d3 JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V133 = CALLVALUE
0x1d0: V134 = 0x2
0x1d3: THROWI V133
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x1d4
[0x1d4:0x1e8]
---
Predecessors: [0x1ce]
Successors: [0x6a7]
---
0x1d4 PUSH2 0x1e9
0x1d7 PUSH1 0x4
0x1d9 DUP1
0x1da DUP1
0x1db CALLDATALOAD
0x1dc SWAP1
0x1dd PUSH1 0x20
0x1df ADD
0x1e0 SWAP1
0x1e1 SWAP2
0x1e2 SWAP1
0x1e3 POP
0x1e4 POP
0x1e5 PUSH2 0x6a7
0x1e8 JUMP
---
0x1d4: V135 = 0x1e9
0x1d7: V136 = 0x4
0x1db: V137 = CALLDATALOAD 0x4
0x1dd: V138 = 0x20
0x1df: V139 = ADD 0x20 0x4
0x1e5: V140 = 0x6a7
0x1e8: JUMP 0x6a7
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x1e9, V137]
Exit stack: [V8, 0x1e9, V137]

================================

Block 0x1e9
[0x1e9:0x1ea]
---
Predecessors: [0x742]
Successors: []
---
0x1e9 JUMPDEST
0x1ea STOP
---
0x1e9: JUMPDEST 
0x1ea: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x1eb
[0x1eb:0x1f0]
---
Predecessors: [0x7b]
Successors: [0x1f1]
---
0x1eb JUMPDEST
0x1ec CALLVALUE
0x1ed PUSH2 0x2
0x1f0 JUMPI
---
0x1eb: JUMPDEST 
0x1ec: V141 = CALLVALUE
0x1ed: V142 = 0x2
0x1f0: THROWI V141
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x1f1
[0x1f1:0x205]
---
Predecessors: [0x1eb]
Successors: [0x745]
---
0x1f1 PUSH2 0x206
0x1f4 PUSH1 0x4
0x1f6 DUP1
0x1f7 DUP1
0x1f8 CALLDATALOAD
0x1f9 SWAP1
0x1fa PUSH1 0x20
0x1fc ADD
0x1fd SWAP1
0x1fe SWAP2
0x1ff SWAP1
0x200 POP
0x201 POP
0x202 PUSH2 0x745
0x205 JUMP
---
0x1f1: V143 = 0x206
0x1f4: V144 = 0x4
0x1f8: V145 = CALLDATALOAD 0x4
0x1fa: V146 = 0x20
0x1fc: V147 = ADD 0x20 0x4
0x202: V148 = 0x745
0x205: JUMP 0x745
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x206, V145]
Exit stack: [V8, 0x206, V145]

================================

Block 0x206
[0x206:0x207]
---
Predecessors: [0x7bf]
Successors: []
---
0x206 JUMPDEST
0x207 STOP
---
0x206: JUMPDEST 
0x207: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x208
[0x208:0x20d]
---
Predecessors: [0x86]
Successors: [0x20e]
---
0x208 JUMPDEST
0x209 CALLVALUE
0x20a PUSH2 0x2
0x20d JUMPI
---
0x208: JUMPDEST 
0x209: V149 = CALLVALUE
0x20a: V150 = 0x2
0x20d: THROWI V149
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x20e
[0x20e:0x22b]
---
Predecessors: [0x208]
Successors: [0x7c2]
---
0x20e PUSH2 0x22c
0x211 PUSH1 0x4
0x213 DUP1
0x214 DUP1
0x215 CALLDATALOAD
0x216 SWAP1
0x217 PUSH1 0x20
0x219 ADD
0x21a SWAP1
0x21b SWAP2
0x21c SWAP1
0x21d DUP1
0x21e CALLDATALOAD
0x21f SWAP1
0x220 PUSH1 0x20
0x222 ADD
0x223 SWAP1
0x224 SWAP2
0x225 SWAP1
0x226 POP
0x227 POP
0x228 PUSH2 0x7c2
0x22b JUMP
---
0x20e: V151 = 0x22c
0x211: V152 = 0x4
0x215: V153 = CALLDATALOAD 0x4
0x217: V154 = 0x20
0x219: V155 = ADD 0x20 0x4
0x21e: V156 = CALLDATALOAD 0x24
0x220: V157 = 0x20
0x222: V158 = ADD 0x20 0x24
0x228: V159 = 0x7c2
0x22b: JUMP 0x7c2
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x22c, V153, V156]
Exit stack: [V8, 0x22c, V153, V156]

================================

Block 0x22c
[0x22c:0x22d]
---
Predecessors: [0x847]
Successors: []
---
0x22c JUMPDEST
0x22d STOP
---
0x22c: JUMPDEST 
0x22d: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x22e
[0x22e:0x233]
---
Predecessors: [0x91]
Successors: [0x234]
---
0x22e JUMPDEST
0x22f CALLVALUE
0x230 PUSH2 0x2
0x233 JUMPI
---
0x22e: JUMPDEST 
0x22f: V160 = CALLVALUE
0x230: V161 = 0x2
0x233: THROWI V160
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x234
[0x234:0x23f]
---
Predecessors: [0x22e]
Successors: [0x84b]
---
0x234 PUSH2 0x240
0x237 PUSH1 0x4
0x239 DUP1
0x23a POP
0x23b POP
0x23c PUSH2 0x84b
0x23f JUMP
---
0x234: V162 = 0x240
0x237: V163 = 0x4
0x23c: V164 = 0x84b
0x23f: JUMP 0x84b
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x240]
Exit stack: [V8, 0x240]

================================

Block 0x240
[0x240:0x255]
---
Predecessors: [0x84b]
Successors: []
---
0x240 JUMPDEST
0x241 PUSH1 0x40
0x243 MLOAD
0x244 DUP1
0x245 DUP3
0x246 DUP2
0x247 MSTORE
0x248 PUSH1 0x20
0x24a ADD
0x24b SWAP2
0x24c POP
0x24d POP
0x24e PUSH1 0x40
0x250 MLOAD
0x251 DUP1
0x252 SWAP2
0x253 SUB
0x254 SWAP1
0x255 RETURN
---
0x240: JUMPDEST 
0x241: V165 = 0x40
0x243: V166 = M[0x40]
0x247: M[V166] = V502
0x248: V167 = 0x20
0x24a: V168 = ADD 0x20 V166
0x24e: V169 = 0x40
0x250: V170 = M[0x40]
0x253: V171 = SUB V168 V170
0x255: RETURN V170 V171
---
Entry stack: [V8, 0x240, V502]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x240]

================================

Block 0x256
[0x256:0x25e]
---
Predecessors: [0x103]
Successors: [0x10f]
---
0x256 JUMPDEST
0x257 PUSH1 0x2
0x259 PUSH1 0x0
0x25b POP
0x25c SLOAD
0x25d DUP2
0x25e JUMP
---
0x256: JUMPDEST 
0x257: V172 = 0x2
0x259: V173 = 0x0
0x25c: V174 = S[0x2]
0x25e: JUMP 0x10f
---
Entry stack: [V8, 0x10f]
Stack pops: 1
Stack additions: [S0, V174]
Exit stack: [V8, 0x10f, V174]

================================

Block 0x25f
[0x25f:0x2b6]
---
Predecessors: [0x12b]
Successors: [0x2b7, 0x2bb]
---
0x25f JUMPDEST
0x260 PUSH1 0x0
0x262 PUSH1 0x0
0x264 SWAP1
0x265 SLOAD
0x266 SWAP1
0x267 PUSH2 0x100
0x26a EXP
0x26b SWAP1
0x26c DIV
0x26d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x282 AND
0x283 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x298 AND
0x299 CALLER
0x29a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2af AND
0x2b0 EQ
0x2b1 ISZERO
0x2b2 ISZERO
0x2b3 PUSH2 0x2bb
0x2b6 JUMPI
---
0x25f: JUMPDEST 
0x260: V175 = 0x0
0x262: V176 = 0x0
0x265: V177 = S[0x0]
0x267: V178 = 0x100
0x26a: V179 = EXP 0x100 0x0
0x26c: V180 = DIV V177 0x1
0x26d: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x282: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x283: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x298: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x299: V185 = CALLER
0x29a: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x2af: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x2b0: V188 = EQ V187 V184
0x2b1: V189 = ISZERO V188
0x2b2: V190 = ISZERO V189
0x2b3: V191 = 0x2bb
0x2b6: JUMPI 0x2bb V190
---
Entry stack: [V8, 0x137]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x137]

================================

Block 0x2b7
[0x2b7:0x2ba]
---
Predecessors: [0x25f]
Successors: []
---
0x2b7 PUSH2 0x2
0x2ba JUMP
---
0x2b7: V192 = 0x2
0x2ba: THROW 
---
Entry stack: [V8, 0x137]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x137]

================================

Block 0x2bb
[0x2bb:0x2c8]
---
Predecessors: [0x25f]
Successors: [0x2c9, 0x2cd]
---
0x2bb JUMPDEST
0x2bc PUSH1 0x2
0x2be PUSH1 0x0
0x2c0 POP
0x2c1 SLOAD
0x2c2 TIMESTAMP
0x2c3 LT
0x2c4 ISZERO
0x2c5 PUSH2 0x2cd
0x2c8 JUMPI
---
0x2bb: JUMPDEST 
0x2bc: V193 = 0x2
0x2be: V194 = 0x0
0x2c1: V195 = S[0x2]
0x2c2: V196 = TIMESTAMP
0x2c3: V197 = LT V196 V195
0x2c4: V198 = ISZERO V197
0x2c5: V199 = 0x2cd
0x2c8: JUMPI 0x2cd V198
---
Entry stack: [V8, 0x137]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x137]

================================

Block 0x2c9
[0x2c9:0x2cc]
---
Predecessors: [0x2bb]
Successors: []
---
0x2c9 PUSH2 0x2
0x2cc JUMP
---
0x2c9: V200 = 0x2
0x2cc: THROW 
---
Entry stack: [V8, 0x137]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x137]

================================

Block 0x2cd
[0x2cd:0x33f]
---
Predecessors: [0x2bb]
Successors: [0x340, 0x344]
---
0x2cd JUMPDEST
0x2ce PUSH1 0x0
0x2d0 PUSH1 0x0
0x2d2 SWAP1
0x2d3 SLOAD
0x2d4 SWAP1
0x2d5 PUSH2 0x100
0x2d8 EXP
0x2d9 SWAP1
0x2da DIV
0x2db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f0 AND
0x2f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x306 AND
0x307 ADDRESS
0x308 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31d AND
0x31e BALANCE
0x31f PUSH1 0x40
0x321 MLOAD
0x322 DUP1
0x323 SWAP1
0x324 POP
0x325 PUSH1 0x0
0x327 PUSH1 0x40
0x329 MLOAD
0x32a DUP1
0x32b DUP4
0x32c SUB
0x32d DUP2
0x32e DUP6
0x32f DUP8
0x330 PUSH2 0x8502
0x333 GAS
0x334 SUB
0x335 CALL
0x336 SWAP3
0x337 POP
0x338 POP
0x339 POP
0x33a ISZERO
0x33b ISZERO
0x33c PUSH2 0x344
0x33f JUMPI
---
0x2cd: JUMPDEST 
0x2ce: V201 = 0x0
0x2d0: V202 = 0x0
0x2d3: V203 = S[0x0]
0x2d5: V204 = 0x100
0x2d8: V205 = EXP 0x100 0x0
0x2da: V206 = DIV V203 0x1
0x2db: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f0: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x2f1: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x306: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x307: V211 = ADDRESS
0x308: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x31d: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x31e: V214 = BALANCE V213
0x31f: V215 = 0x40
0x321: V216 = M[0x40]
0x325: V217 = 0x0
0x327: V218 = 0x40
0x329: V219 = M[0x40]
0x32c: V220 = SUB V216 V219
0x330: V221 = 0x8502
0x333: V222 = GAS
0x334: V223 = SUB V222 0x8502
0x335: V224 = CALL V223 V210 V214 V219 V220 V219 0x0
0x33a: V225 = ISZERO V224
0x33b: V226 = ISZERO V225
0x33c: V227 = 0x344
0x33f: JUMPI 0x344 V226
---
Entry stack: [V8, 0x137]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x137]

================================

Block 0x340
[0x340:0x343]
---
Predecessors: [0x2cd]
Successors: []
---
0x340 PUSH2 0x2
0x343 JUMP
---
0x340: V228 = 0x2
0x343: THROW 
---
Entry stack: [V8, 0x137]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x137]

================================

Block 0x344
[0x344:0x344]
---
Predecessors: [0x2cd]
Successors: [0x345]
---
0x344 JUMPDEST
---
0x344: JUMPDEST 
---
Entry stack: [V8, 0x137]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x137]

================================

Block 0x345
[0x345:0x345]
---
Predecessors: [0x344]
Successors: [0x346]
---
0x345 JUMPDEST
---
0x345: JUMPDEST 
---
Entry stack: [V8, 0x137]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x137]

================================

Block 0x346
[0x346:0x347]
---
Predecessors: [0x345]
Successors: [0x137]
---
0x346 JUMPDEST
0x347 JUMP
---
0x346: JUMPDEST 
0x347: JUMP 0x137
---
Entry stack: [V8, 0x137]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x348
[0x348:0x3a5]
---
Predecessors: [0x13f]
Successors: [0x3a6, 0x3aa]
---
0x348 JUMPDEST
0x349 PUSH1 0x0
0x34b PUSH1 0x0
0x34d PUSH1 0x0
0x34f PUSH1 0x0
0x351 PUSH1 0x0
0x353 SWAP1
0x354 SLOAD
0x355 SWAP1
0x356 PUSH2 0x100
0x359 EXP
0x35a SWAP1
0x35b DIV
0x35c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x371 AND
0x372 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x387 AND
0x388 CALLER
0x389 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39e AND
0x39f EQ
0x3a0 ISZERO
0x3a1 ISZERO
0x3a2 PUSH2 0x3aa
0x3a5 JUMPI
---
0x348: JUMPDEST 
0x349: V229 = 0x0
0x34b: V230 = 0x0
0x34d: V231 = 0x0
0x34f: V232 = 0x0
0x351: V233 = 0x0
0x354: V234 = S[0x0]
0x356: V235 = 0x100
0x359: V236 = EXP 0x100 0x0
0x35b: V237 = DIV V234 0x1
0x35c: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x371: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x372: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x387: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x388: V242 = CALLER
0x389: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x39e: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x39f: V245 = EQ V244 V241
0x3a0: V246 = ISZERO V245
0x3a1: V247 = ISZERO V246
0x3a2: V248 = 0x3aa
0x3a5: JUMPI 0x3aa V247
---
Entry stack: [V8, 0x15d, V92, V95]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V8, 0x15d, V92, V95, 0x0, 0x0, 0x0]

================================

Block 0x3a6
[0x3a6:0x3a9]
---
Predecessors: [0x348]
Successors: []
---
0x3a6 PUSH2 0x2
0x3a9 JUMP
---
0x3a6: V249 = 0x2
0x3a9: THROW 
---
Entry stack: [V8, 0x15d, V92, V95, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x15d, V92, V95, 0x0, 0x0, 0x0]

================================

Block 0x3aa
[0x3aa:0x42e]
---
Predecessors: [0x348]
Successors: [0x42f]
---
0x3aa JUMPDEST
0x3ab DUP5
0x3ac SWAP2
0x3ad POP
0x3ae DUP2
0x3af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c4 AND
0x3c5 PUSH4 0x70a08231
0x3ca ADDRESS
0x3cb PUSH1 0x0
0x3cd PUSH1 0x40
0x3cf MLOAD
0x3d0 PUSH1 0x20
0x3d2 ADD
0x3d3 MSTORE
0x3d4 PUSH1 0x40
0x3d6 MLOAD
0x3d7 DUP3
0x3d8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3f6 MUL
0x3f7 DUP2
0x3f8 MSTORE
0x3f9 PUSH1 0x4
0x3fb ADD
0x3fc DUP1
0x3fd DUP3
0x3fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x413 AND
0x414 DUP2
0x415 MSTORE
0x416 PUSH1 0x20
0x418 ADD
0x419 SWAP2
0x41a POP
0x41b POP
0x41c PUSH1 0x20
0x41e PUSH1 0x40
0x420 MLOAD
0x421 DUP1
0x422 DUP4
0x423 SUB
0x424 DUP2
0x425 PUSH1 0x0
0x427 DUP8
0x428 DUP1
0x429 EXTCODESIZE
0x42a ISZERO
0x42b PUSH2 0x2
0x42e JUMPI
---
0x3aa: JUMPDEST 
0x3af: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c4: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x3c5: V252 = 0x70a08231
0x3ca: V253 = ADDRESS
0x3cb: V254 = 0x0
0x3cd: V255 = 0x40
0x3cf: V256 = M[0x40]
0x3d0: V257 = 0x20
0x3d2: V258 = ADD 0x20 V256
0x3d3: M[V258] = 0x0
0x3d4: V259 = 0x40
0x3d6: V260 = M[0x40]
0x3d8: V261 = 0x100000000000000000000000000000000000000000000000000000000
0x3f6: V262 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x3f8: M[V260] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3f9: V263 = 0x4
0x3fb: V264 = ADD 0x4 V260
0x3fe: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x413: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x415: M[V264] = V266
0x416: V267 = 0x20
0x418: V268 = ADD 0x20 V264
0x41c: V269 = 0x20
0x41e: V270 = 0x40
0x420: V271 = M[0x40]
0x423: V272 = SUB V268 V271
0x425: V273 = 0x0
0x429: V274 = EXTCODESIZE V251
0x42a: V275 = ISZERO V274
0x42b: V276 = 0x2
0x42e: THROWI V275
---
Entry stack: [V8, 0x15d, V92, V95, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S4, S0, V251, 0x70a08231, V268, 0x20, V271, V272, V271, 0x0, V251]
Exit stack: [V8, 0x15d, V92, V95, 0x0, V92, 0x0, V251, 0x70a08231, V268, 0x20, V271, V272, V271, 0x0, V251]

================================

Block 0x42f
[0x42f:0x438]
---
Predecessors: [0x3aa]
Successors: [0x439]
---
0x42f PUSH1 0x32
0x431 GAS
0x432 SUB
0x433 CALL
0x434 ISZERO
0x435 PUSH2 0x2
0x438 JUMPI
---
0x42f: V277 = 0x32
0x431: V278 = GAS
0x432: V279 = SUB V278 0x32
0x433: V280 = CALL V279 V251 0x0 V271 V272 V271 0x20
0x434: V281 = ISZERO V280
0x435: V282 = 0x2
0x438: THROWI V281
---
Entry stack: [V8, 0x15d, V92, V95, 0x0, V92, 0x0, V251, 0x70a08231, V268, 0x20, V271, V272, V271, 0x0, V251]
Stack pops: 6
Stack additions: []
Exit stack: [V8, 0x15d, V92, V95, 0x0, V92, 0x0, V251, 0x70a08231, V268]

================================

Block 0x439
[0x439:0x4d0]
---
Predecessors: [0x42f]
Successors: [0x4d1]
---
0x439 POP
0x43a POP
0x43b POP
0x43c PUSH1 0x40
0x43e MLOAD
0x43f DUP1
0x440 MLOAD
0x441 SWAP1
0x442 PUSH1 0x20
0x444 ADD
0x445 POP
0x446 SWAP1
0x447 POP
0x448 DUP2
0x449 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45e AND
0x45f PUSH4 0xa9059cbb
0x464 DUP6
0x465 DUP4
0x466 PUSH1 0x0
0x468 PUSH1 0x40
0x46a MLOAD
0x46b PUSH1 0x20
0x46d ADD
0x46e MSTORE
0x46f PUSH1 0x40
0x471 MLOAD
0x472 DUP4
0x473 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x491 MUL
0x492 DUP2
0x493 MSTORE
0x494 PUSH1 0x4
0x496 ADD
0x497 DUP1
0x498 DUP4
0x499 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ae AND
0x4af DUP2
0x4b0 MSTORE
0x4b1 PUSH1 0x20
0x4b3 ADD
0x4b4 DUP3
0x4b5 DUP2
0x4b6 MSTORE
0x4b7 PUSH1 0x20
0x4b9 ADD
0x4ba SWAP3
0x4bb POP
0x4bc POP
0x4bd POP
0x4be PUSH1 0x20
0x4c0 PUSH1 0x40
0x4c2 MLOAD
0x4c3 DUP1
0x4c4 DUP4
0x4c5 SUB
0x4c6 DUP2
0x4c7 PUSH1 0x0
0x4c9 DUP8
0x4ca DUP1
0x4cb EXTCODESIZE
0x4cc ISZERO
0x4cd PUSH2 0x2
0x4d0 JUMPI
---
0x43c: V283 = 0x40
0x43e: V284 = M[0x40]
0x440: V285 = M[V284]
0x442: V286 = 0x20
0x444: V287 = ADD 0x20 V284
0x449: V288 = 0xffffffffffffffffffffffffffffffffffffffff
0x45e: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x45f: V290 = 0xa9059cbb
0x466: V291 = 0x0
0x468: V292 = 0x40
0x46a: V293 = M[0x40]
0x46b: V294 = 0x20
0x46d: V295 = ADD 0x20 V293
0x46e: M[V295] = 0x0
0x46f: V296 = 0x40
0x471: V297 = M[0x40]
0x473: V298 = 0x100000000000000000000000000000000000000000000000000000000
0x491: V299 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x493: M[V297] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x494: V300 = 0x4
0x496: V301 = ADD 0x4 V297
0x499: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ae: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x4b0: M[V301] = V303
0x4b1: V304 = 0x20
0x4b3: V305 = ADD 0x20 V301
0x4b6: M[V305] = V285
0x4b7: V306 = 0x20
0x4b9: V307 = ADD 0x20 V305
0x4be: V308 = 0x20
0x4c0: V309 = 0x40
0x4c2: V310 = M[0x40]
0x4c5: V311 = SUB V307 V310
0x4c7: V312 = 0x0
0x4cb: V313 = EXTCODESIZE V289
0x4cc: V314 = ISZERO V313
0x4cd: V315 = 0x2
0x4d0: THROWI V314
---
Entry stack: [V8, 0x15d, V92, V95, 0x0, V92, 0x0, V251, 0x70a08231, V268]
Stack pops: 7
Stack additions: [S6, S5, S4, V285, V289, 0xa9059cbb, V307, 0x20, V310, V311, V310, 0x0, V289]
Exit stack: [V8, 0x15d, V92, V95, 0x0, V92, V285, V289, 0xa9059cbb, V307, 0x20, V310, V311, V310, 0x0, V289]

================================

Block 0x4d1
[0x4d1:0x4da]
---
Predecessors: [0x439]
Successors: [0x4db]
---
0x4d1 PUSH1 0x32
0x4d3 GAS
0x4d4 SUB
0x4d5 CALL
0x4d6 ISZERO
0x4d7 PUSH2 0x2
0x4da JUMPI
---
0x4d1: V316 = 0x32
0x4d3: V317 = GAS
0x4d4: V318 = SUB V317 0x32
0x4d5: V319 = CALL V318 V289 0x0 V310 V311 V310 0x20
0x4d6: V320 = ISZERO V319
0x4d7: V321 = 0x2
0x4da: THROWI V320
---
Entry stack: [V8, 0x15d, V92, V95, 0x0, V92, V285, V289, 0xa9059cbb, V307, 0x20, V310, V311, V310, 0x0, V289]
Stack pops: 6
Stack additions: []
Exit stack: [V8, 0x15d, V92, V95, 0x0, V92, V285, V289, 0xa9059cbb, V307]

================================

Block 0x4db
[0x4db:0x4ec]
---
Predecessors: [0x4d1]
Successors: [0x4ed, 0x568]
---
0x4db POP
0x4dc POP
0x4dd POP
0x4de PUSH1 0x40
0x4e0 MLOAD
0x4e1 DUP1
0x4e2 MLOAD
0x4e3 SWAP1
0x4e4 PUSH1 0x20
0x4e6 ADD
0x4e7 POP
0x4e8 ISZERO
0x4e9 PUSH2 0x568
0x4ec JUMPI
---
0x4de: V322 = 0x40
0x4e0: V323 = M[0x40]
0x4e2: V324 = M[V323]
0x4e4: V325 = 0x20
0x4e6: V326 = ADD 0x20 V323
0x4e8: V327 = ISZERO V324
0x4e9: V328 = 0x568
0x4ec: JUMPI 0x568 V327
---
Entry stack: [V8, 0x15d, V92, V95, 0x0, V92, V285, V289, 0xa9059cbb, V307]
Stack pops: 3
Stack additions: []
Exit stack: [V8, 0x15d, V92, V95, 0x0, V92, V285]

================================

Block 0x4ed
[0x4ed:0x567]
---
Predecessors: [0x4db]
Successors: [0x571]
---
0x4ed PUSH32 0x977a8f1bdcf5f444d404662ea2c090d707ebcef1be61b37fe6ce74d0c6288fb8
0x50e DUP6
0x50f DUP6
0x510 DUP4
0x511 PUSH1 0x40
0x513 MLOAD
0x514 DUP1
0x515 DUP5
0x516 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52b AND
0x52c DUP2
0x52d MSTORE
0x52e PUSH1 0x20
0x530 ADD
0x531 DUP4
0x532 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x547 AND
0x548 DUP2
0x549 MSTORE
0x54a PUSH1 0x20
0x54c ADD
0x54d DUP3
0x54e DUP2
0x54f MSTORE
0x550 PUSH1 0x20
0x552 ADD
0x553 SWAP4
0x554 POP
0x555 POP
0x556 POP
0x557 POP
0x558 PUSH1 0x40
0x55a MLOAD
0x55b DUP1
0x55c SWAP2
0x55d SUB
0x55e SWAP1
0x55f LOG1
0x560 PUSH1 0x1
0x562 SWAP3
0x563 POP
0x564 PUSH2 0x571
0x567 JUMP
---
0x4ed: V329 = 0x977a8f1bdcf5f444d404662ea2c090d707ebcef1be61b37fe6ce74d0c6288fb8
0x511: V330 = 0x40
0x513: V331 = M[0x40]
0x516: V332 = 0xffffffffffffffffffffffffffffffffffffffff
0x52b: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x52d: M[V331] = V333
0x52e: V334 = 0x20
0x530: V335 = ADD 0x20 V331
0x532: V336 = 0xffffffffffffffffffffffffffffffffffffffff
0x547: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x549: M[V335] = V337
0x54a: V338 = 0x20
0x54c: V339 = ADD 0x20 V335
0x54f: M[V339] = V285
0x550: V340 = 0x20
0x552: V341 = ADD 0x20 V339
0x558: V342 = 0x40
0x55a: V343 = M[0x40]
0x55d: V344 = SUB V341 V343
0x55f: LOG V343 V344 0x977a8f1bdcf5f444d404662ea2c090d707ebcef1be61b37fe6ce74d0c6288fb8
0x560: V345 = 0x1
0x564: V346 = 0x571
0x567: JUMP 0x571
---
Entry stack: [V8, 0x15d, V92, V95, 0x0, V92, V285]
Stack pops: 5
Stack additions: [S4, S3, 0x1, S1, S0]
Exit stack: [V8, 0x15d, V92, V95, 0x1, V92, V285]

================================

Block 0x568
[0x568:0x570]
---
Predecessors: [0x4db]
Successors: [0x571]
---
0x568 JUMPDEST
0x569 PUSH1 0x0
0x56b SWAP3
0x56c POP
0x56d PUSH2 0x571
0x570 JUMP
---
0x568: JUMPDEST 
0x569: V347 = 0x0
0x56d: V348 = 0x571
0x570: JUMP 0x571
---
Entry stack: [V8, 0x15d, V92, V95, 0x0, V92, V285]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V8, 0x15d, V92, V95, 0x0, V92, V285]

================================

Block 0x571
[0x571:0x571]
---
Predecessors: [0x4ed, 0x568]
Successors: [0x572]
---
0x571 JUMPDEST
---
0x571: JUMPDEST 
---
Entry stack: [V8, 0x15d, V92, V95, {0x0, 0x1}, V92, V285]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x15d, V92, V95, {0x0, 0x1}, V92, V285]

================================

Block 0x572
[0x572:0x579]
---
Predecessors: [0x571]
Successors: [0x15d]
---
0x572 JUMPDEST
0x573 POP
0x574 POP
0x575 SWAP3
0x576 SWAP2
0x577 POP
0x578 POP
0x579 JUMP
---
0x572: JUMPDEST 
0x579: JUMP 0x15d
---
Entry stack: [V8, 0x15d, V92, V95, {0x0, 0x1}, V92, V285]
Stack pops: 6
Stack additions: [S2]
Exit stack: [V8, {0x0, 0x1}]

================================

Block 0x57a
[0x57a:0x582]
---
Predecessors: [0x17b]
Successors: [0x187]
---
0x57a JUMPDEST
0x57b PUSH1 0x3
0x57d PUSH1 0x0
0x57f POP
0x580 SLOAD
0x581 DUP2
0x582 JUMP
---
0x57a: JUMPDEST 
0x57b: V349 = 0x3
0x57d: V350 = 0x0
0x580: V351 = S[0x3]
0x582: JUMP 0x187
---
Entry stack: [V8, 0x187]
Stack pops: 1
Stack additions: [S0, V351]
Exit stack: [V8, 0x187, V351]

================================

Block 0x583
[0x583:0x5d9]
---
Predecessors: [0x1a3]
Successors: [0x5da, 0x639]
---
0x583 JUMPDEST
0x584 PUSH1 0x1
0x586 PUSH1 0x0
0x588 SWAP1
0x589 SLOAD
0x58a SWAP1
0x58b PUSH2 0x100
0x58e EXP
0x58f SWAP1
0x590 DIV
0x591 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a6 AND
0x5a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bc AND
0x5bd CALLER
0x5be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d3 AND
0x5d4 EQ
0x5d5 ISZERO
0x5d6 PUSH2 0x639
0x5d9 JUMPI
---
0x583: JUMPDEST 
0x584: V352 = 0x1
0x586: V353 = 0x0
0x589: V354 = S[0x1]
0x58b: V355 = 0x100
0x58e: V356 = EXP 0x100 0x0
0x590: V357 = DIV V354 0x1
0x591: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a6: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x5a7: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bc: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x5bd: V362 = CALLER
0x5be: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d3: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x5d4: V365 = EQ V364 V361
0x5d5: V366 = ISZERO V365
0x5d6: V367 = 0x639
0x5d9: JUMPI 0x639 V366
---
Entry stack: [V8, 0x1af]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1af]

================================

Block 0x5da
[0x5da:0x638]
---
Predecessors: [0x583]
Successors: [0x639]
---
0x5da PUSH1 0x1
0x5dc PUSH1 0x0
0x5de SWAP1
0x5df SLOAD
0x5e0 SWAP1
0x5e1 PUSH2 0x100
0x5e4 EXP
0x5e5 SWAP1
0x5e6 DIV
0x5e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fc AND
0x5fd PUSH1 0x0
0x5ff PUSH1 0x0
0x601 PUSH2 0x100
0x604 EXP
0x605 DUP2
0x606 SLOAD
0x607 DUP2
0x608 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61d MUL
0x61e NOT
0x61f AND
0x620 SWAP1
0x621 DUP4
0x622 PUSH13 0x1000000000000000000000000
0x630 SWAP1
0x631 DUP2
0x632 MUL
0x633 DIV
0x634 MUL
0x635 OR
0x636 SWAP1
0x637 SSTORE
0x638 POP
---
0x5da: V368 = 0x1
0x5dc: V369 = 0x0
0x5df: V370 = S[0x1]
0x5e1: V371 = 0x100
0x5e4: V372 = EXP 0x100 0x0
0x5e6: V373 = DIV V370 0x1
0x5e7: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fc: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x5fd: V376 = 0x0
0x5ff: V377 = 0x0
0x601: V378 = 0x100
0x604: V379 = EXP 0x100 0x0
0x606: V380 = S[0x0]
0x608: V381 = 0xffffffffffffffffffffffffffffffffffffffff
0x61d: V382 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x61e: V383 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x61f: V384 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V380
0x622: V385 = 0x1000000000000000000000000
0x632: V386 = MUL 0x1000000000000000000000000 V375
0x633: V387 = DIV V386 0x1000000000000000000000000
0x634: V388 = MUL V387 0x1
0x635: V389 = OR V388 V384
0x637: S[0x0] = V389
---
Entry stack: [V8, 0x1af]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1af]

================================

Block 0x639
[0x639:0x639]
---
Predecessors: [0x583, 0x5da]
Successors: [0x63a]
---
0x639 JUMPDEST
---
0x639: JUMPDEST 
---
Entry stack: [V8, 0x1af]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1af]

================================

Block 0x63a
[0x63a:0x63b]
---
Predecessors: [0x639]
Successors: [0x1af]
---
0x63a JUMPDEST
0x63b JUMP
---
0x63a: JUMPDEST 
0x63b: JUMP 0x1af
---
Entry stack: [V8, 0x1af]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x63c
[0x63c:0x693]
---
Predecessors: [0x1b7]
Successors: [0x694, 0x698]
---
0x63c JUMPDEST
0x63d PUSH1 0x0
0x63f PUSH1 0x0
0x641 SWAP1
0x642 SLOAD
0x643 SWAP1
0x644 PUSH2 0x100
0x647 EXP
0x648 SWAP1
0x649 DIV
0x64a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65f AND
0x660 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x675 AND
0x676 CALLER
0x677 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68c AND
0x68d EQ
0x68e ISZERO
0x68f ISZERO
0x690 PUSH2 0x698
0x693 JUMPI
---
0x63c: JUMPDEST 
0x63d: V390 = 0x0
0x63f: V391 = 0x0
0x642: V392 = S[0x0]
0x644: V393 = 0x100
0x647: V394 = EXP 0x100 0x0
0x649: V395 = DIV V392 0x1
0x64a: V396 = 0xffffffffffffffffffffffffffffffffffffffff
0x65f: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x660: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x675: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x676: V400 = CALLER
0x677: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x68c: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x68d: V403 = EQ V402 V399
0x68e: V404 = ISZERO V403
0x68f: V405 = ISZERO V404
0x690: V406 = 0x698
0x693: JUMPI 0x698 V405
---
Entry stack: [V8, 0x1cc, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1cc, V129]

================================

Block 0x694
[0x694:0x697]
---
Predecessors: [0x63c]
Successors: []
---
0x694 PUSH2 0x2
0x697 JUMP
---
0x694: V407 = 0x2
0x697: THROW 
---
Entry stack: [V8, 0x1cc, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1cc, V129]

================================

Block 0x698
[0x698:0x6a2]
---
Predecessors: [0x63c]
Successors: [0x6a3]
---
0x698 JUMPDEST
0x699 DUP1
0x69a PUSH1 0x4
0x69c PUSH1 0x0
0x69e POP
0x69f DUP2
0x6a0 SWAP1
0x6a1 SSTORE
0x6a2 POP
---
0x698: JUMPDEST 
0x69a: V408 = 0x4
0x69c: V409 = 0x0
0x6a1: S[0x4] = V129
---
Entry stack: [V8, 0x1cc, V129]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x1cc, V129]

================================

Block 0x6a3
[0x6a3:0x6a3]
---
Predecessors: [0x698]
Successors: [0x6a4]
---
0x6a3 JUMPDEST
---
0x6a3: JUMPDEST 
---
Entry stack: [V8, 0x1cc, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1cc, V129]

================================

Block 0x6a4
[0x6a4:0x6a6]
---
Predecessors: [0x6a3]
Successors: [0x1cc]
---
0x6a4 JUMPDEST
0x6a5 POP
0x6a6 JUMP
---
0x6a4: JUMPDEST 
0x6a6: JUMP 0x1cc
---
Entry stack: [V8, 0x1cc, V129]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x6a7
[0x6a7:0x6fe]
---
Predecessors: [0x1d4]
Successors: [0x6ff, 0x703]
---
0x6a7 JUMPDEST
0x6a8 PUSH1 0x0
0x6aa PUSH1 0x0
0x6ac SWAP1
0x6ad SLOAD
0x6ae SWAP1
0x6af PUSH2 0x100
0x6b2 EXP
0x6b3 SWAP1
0x6b4 DIV
0x6b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ca AND
0x6cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e0 AND
0x6e1 CALLER
0x6e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f7 AND
0x6f8 EQ
0x6f9 ISZERO
0x6fa ISZERO
0x6fb PUSH2 0x703
0x6fe JUMPI
---
0x6a7: JUMPDEST 
0x6a8: V410 = 0x0
0x6aa: V411 = 0x0
0x6ad: V412 = S[0x0]
0x6af: V413 = 0x100
0x6b2: V414 = EXP 0x100 0x0
0x6b4: V415 = DIV V412 0x1
0x6b5: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ca: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x6cb: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e0: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x6e1: V420 = CALLER
0x6e2: V421 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f7: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0x6f8: V423 = EQ V422 V419
0x6f9: V424 = ISZERO V423
0x6fa: V425 = ISZERO V424
0x6fb: V426 = 0x703
0x6fe: JUMPI 0x703 V425
---
Entry stack: [V8, 0x1e9, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1e9, V137]

================================

Block 0x6ff
[0x6ff:0x702]
---
Predecessors: [0x6a7]
Successors: []
---
0x6ff PUSH2 0x2
0x702 JUMP
---
0x6ff: V427 = 0x2
0x702: THROW 
---
Entry stack: [V8, 0x1e9, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1e9, V137]

================================

Block 0x703
[0x703:0x740]
---
Predecessors: [0x6a7]
Successors: [0x741]
---
0x703 JUMPDEST
0x704 DUP1
0x705 PUSH1 0x1
0x707 PUSH1 0x0
0x709 PUSH2 0x100
0x70c EXP
0x70d DUP2
0x70e SLOAD
0x70f DUP2
0x710 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x725 MUL
0x726 NOT
0x727 AND
0x728 SWAP1
0x729 DUP4
0x72a PUSH13 0x1000000000000000000000000
0x738 SWAP1
0x739 DUP2
0x73a MUL
0x73b DIV
0x73c MUL
0x73d OR
0x73e SWAP1
0x73f SSTORE
0x740 POP
---
0x703: JUMPDEST 
0x705: V428 = 0x1
0x707: V429 = 0x0
0x709: V430 = 0x100
0x70c: V431 = EXP 0x100 0x0
0x70e: V432 = S[0x1]
0x710: V433 = 0xffffffffffffffffffffffffffffffffffffffff
0x725: V434 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x726: V435 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x727: V436 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V432
0x72a: V437 = 0x1000000000000000000000000
0x73a: V438 = MUL 0x1000000000000000000000000 V137
0x73b: V439 = DIV V438 0x1000000000000000000000000
0x73c: V440 = MUL V439 0x1
0x73d: V441 = OR V440 V436
0x73f: S[0x1] = V441
---
Entry stack: [V8, 0x1e9, V137]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x1e9, V137]

================================

Block 0x741
[0x741:0x741]
---
Predecessors: [0x703]
Successors: [0x742]
---
0x741 JUMPDEST
---
0x741: JUMPDEST 
---
Entry stack: [V8, 0x1e9, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1e9, V137]

================================

Block 0x742
[0x742:0x744]
---
Predecessors: [0x741]
Successors: [0x1e9]
---
0x742 JUMPDEST
0x743 POP
0x744 JUMP
---
0x742: JUMPDEST 
0x744: JUMP 0x1e9
---
Entry stack: [V8, 0x1e9, V137]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x745
[0x745:0x79c]
---
Predecessors: [0x1f1]
Successors: [0x79d, 0x7a1]
---
0x745 JUMPDEST
0x746 PUSH1 0x0
0x748 PUSH1 0x0
0x74a SWAP1
0x74b SLOAD
0x74c SWAP1
0x74d PUSH2 0x100
0x750 EXP
0x751 SWAP1
0x752 DIV
0x753 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x768 AND
0x769 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77e AND
0x77f CALLER
0x780 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x795 AND
0x796 EQ
0x797 ISZERO
0x798 ISZERO
0x799 PUSH2 0x7a1
0x79c JUMPI
---
0x745: JUMPDEST 
0x746: V442 = 0x0
0x748: V443 = 0x0
0x74b: V444 = S[0x0]
0x74d: V445 = 0x100
0x750: V446 = EXP 0x100 0x0
0x752: V447 = DIV V444 0x1
0x753: V448 = 0xffffffffffffffffffffffffffffffffffffffff
0x768: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x769: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x77e: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V449
0x77f: V452 = CALLER
0x780: V453 = 0xffffffffffffffffffffffffffffffffffffffff
0x795: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V452
0x796: V455 = EQ V454 V451
0x797: V456 = ISZERO V455
0x798: V457 = ISZERO V456
0x799: V458 = 0x7a1
0x79c: JUMPI 0x7a1 V457
---
Entry stack: [V8, 0x206, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x206, V145]

================================

Block 0x79d
[0x79d:0x7a0]
---
Predecessors: [0x745]
Successors: []
---
0x79d PUSH2 0x2
0x7a0 JUMP
---
0x79d: V459 = 0x2
0x7a0: THROW 
---
Entry stack: [V8, 0x206, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x206, V145]

================================

Block 0x7a1
[0x7a1:0x7ae]
---
Predecessors: [0x745]
Successors: [0x7af, 0x7b3]
---
0x7a1 JUMPDEST
0x7a2 PUSH1 0x2
0x7a4 PUSH1 0x0
0x7a6 POP
0x7a7 SLOAD
0x7a8 DUP2
0x7a9 GT
0x7aa ISZERO
0x7ab PUSH2 0x7b3
0x7ae JUMPI
---
0x7a1: JUMPDEST 
0x7a2: V460 = 0x2
0x7a4: V461 = 0x0
0x7a7: V462 = S[0x2]
0x7a9: V463 = GT V145 V462
0x7aa: V464 = ISZERO V463
0x7ab: V465 = 0x7b3
0x7ae: JUMPI 0x7b3 V464
---
Entry stack: [V8, 0x206, V145]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x206, V145]

================================

Block 0x7af
[0x7af:0x7b2]
---
Predecessors: [0x7a1]
Successors: []
---
0x7af PUSH2 0x2
0x7b2 JUMP
---
0x7af: V466 = 0x2
0x7b2: THROW 
---
Entry stack: [V8, 0x206, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x206, V145]

================================

Block 0x7b3
[0x7b3:0x7bd]
---
Predecessors: [0x7a1]
Successors: [0x7be]
---
0x7b3 JUMPDEST
0x7b4 DUP1
0x7b5 PUSH1 0x2
0x7b7 PUSH1 0x0
0x7b9 POP
0x7ba DUP2
0x7bb SWAP1
0x7bc SSTORE
0x7bd POP
---
0x7b3: JUMPDEST 
0x7b5: V467 = 0x2
0x7b7: V468 = 0x0
0x7bc: S[0x2] = V145
---
Entry stack: [V8, 0x206, V145]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x206, V145]

================================

Block 0x7be
[0x7be:0x7be]
---
Predecessors: [0x7b3]
Successors: [0x7bf]
---
0x7be JUMPDEST
---
0x7be: JUMPDEST 
---
Entry stack: [V8, 0x206, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x206, V145]

================================

Block 0x7bf
[0x7bf:0x7c1]
---
Predecessors: [0x7be]
Successors: [0x206]
---
0x7bf JUMPDEST
0x7c0 POP
0x7c1 JUMP
---
0x7bf: JUMPDEST 
0x7c1: JUMP 0x206
---
Entry stack: [V8, 0x206, V145]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x7c2
[0x7c2:0x819]
---
Predecessors: [0x20e]
Successors: [0x81a, 0x81e]
---
0x7c2 JUMPDEST
0x7c3 PUSH1 0x0
0x7c5 PUSH1 0x0
0x7c7 SWAP1
0x7c8 SLOAD
0x7c9 SWAP1
0x7ca PUSH2 0x100
0x7cd EXP
0x7ce SWAP1
0x7cf DIV
0x7d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e5 AND
0x7e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7fb AND
0x7fc CALLER
0x7fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x812 AND
0x813 EQ
0x814 ISZERO
0x815 ISZERO
0x816 PUSH2 0x81e
0x819 JUMPI
---
0x7c2: JUMPDEST 
0x7c3: V469 = 0x0
0x7c5: V470 = 0x0
0x7c8: V471 = S[0x0]
0x7ca: V472 = 0x100
0x7cd: V473 = EXP 0x100 0x0
0x7cf: V474 = DIV V471 0x1
0x7d0: V475 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e5: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x7e6: V477 = 0xffffffffffffffffffffffffffffffffffffffff
0x7fb: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x7fc: V479 = CALLER
0x7fd: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x812: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x813: V482 = EQ V481 V478
0x814: V483 = ISZERO V482
0x815: V484 = ISZERO V483
0x816: V485 = 0x81e
0x819: JUMPI 0x81e V484
---
Entry stack: [V8, 0x22c, V153, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x22c, V153, V156]

================================

Block 0x81a
[0x81a:0x81d]
---
Predecessors: [0x7c2]
Successors: []
---
0x81a PUSH2 0x2
0x81d JUMP
---
0x81a: V486 = 0x2
0x81d: THROW 
---
Entry stack: [V8, 0x22c, V153, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x22c, V153, V156]

================================

Block 0x81e
[0x81e:0x82c]
---
Predecessors: [0x7c2]
Successors: [0x82d, 0x831]
---
0x81e JUMPDEST
0x81f PUSH1 0x3
0x821 PUSH1 0x0
0x823 POP
0x824 SLOAD
0x825 TIMESTAMP
0x826 LT
0x827 ISZERO
0x828 ISZERO
0x829 PUSH2 0x831
0x82c JUMPI
---
0x81e: JUMPDEST 
0x81f: V487 = 0x3
0x821: V488 = 0x0
0x824: V489 = S[0x3]
0x825: V490 = TIMESTAMP
0x826: V491 = LT V490 V489
0x827: V492 = ISZERO V491
0x828: V493 = ISZERO V492
0x829: V494 = 0x831
0x82c: JUMPI 0x831 V493
---
Entry stack: [V8, 0x22c, V153, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x22c, V153, V156]

================================

Block 0x82d
[0x82d:0x830]
---
Predecessors: [0x81e]
Successors: []
---
0x82d PUSH2 0x2
0x830 JUMP
---
0x82d: V495 = 0x2
0x830: THROW 
---
Entry stack: [V8, 0x22c, V153, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x22c, V153, V156]

================================

Block 0x831
[0x831:0x845]
---
Predecessors: [0x81e]
Successors: [0x846]
---
0x831 JUMPDEST
0x832 DUP2
0x833 PUSH1 0x3
0x835 PUSH1 0x0
0x837 POP
0x838 DUP2
0x839 SWAP1
0x83a SSTORE
0x83b POP
0x83c DUP1
0x83d PUSH1 0x2
0x83f PUSH1 0x0
0x841 POP
0x842 DUP2
0x843 SWAP1
0x844 SSTORE
0x845 POP
---
0x831: JUMPDEST 
0x833: V496 = 0x3
0x835: V497 = 0x0
0x83a: S[0x3] = V153
0x83d: V498 = 0x2
0x83f: V499 = 0x0
0x844: S[0x2] = V156
---
Entry stack: [V8, 0x22c, V153, V156]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0x22c, V153, V156]

================================

Block 0x846
[0x846:0x846]
---
Predecessors: [0x831]
Successors: [0x847]
---
0x846 JUMPDEST
---
0x846: JUMPDEST 
---
Entry stack: [V8, 0x22c, V153, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x22c, V153, V156]

================================

Block 0x847
[0x847:0x84a]
---
Predecessors: [0x846]
Successors: [0x22c]
---
0x847 JUMPDEST
0x848 POP
0x849 POP
0x84a JUMP
---
0x847: JUMPDEST 
0x84a: JUMP 0x22c
---
Entry stack: [V8, 0x22c, V153, V156]
Stack pops: 3
Stack additions: []
Exit stack: [V8]

================================

Block 0x84b
[0x84b:0x853]
---
Predecessors: [0x234]
Successors: [0x240]
---
0x84b JUMPDEST
0x84c PUSH1 0x4
0x84e PUSH1 0x0
0x850 POP
0x851 SLOAD
0x852 DUP2
0x853 JUMP
---
0x84b: JUMPDEST 
0x84c: V500 = 0x4
0x84e: V501 = 0x0
0x851: V502 = S[0x4]
0x853: JUMP 0x240
---
Entry stack: [V8, 0x240]
Stack pops: 1
Stack additions: [S0, V502]
Exit stack: [V8, 0x240, V502]

================================

Function 0:
Public function signature: 0x29dcb0cf
Entry block: 0xfd
Exit block: 0x10f
Body: 0xfd, 0x103, 0x10f, 0x256

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x125
Exit block: 0x137
Body: 0x125, 0x12b, 0x137, 0x25f, 0x2b7, 0x2bb, 0x2c9, 0x2cd, 0x340, 0x344, 0x345, 0x346

Function 2:
Public function signature: 0x69ffa08a
Entry block: 0x139
Exit block: 0x15d
Body: 0x139, 0x13f, 0x15d, 0x348, 0x3a6, 0x3aa, 0x42f, 0x439, 0x4d1, 0x4db, 0x4ed, 0x568, 0x571, 0x572

Function 3:
Public function signature: 0x78e97925
Entry block: 0x175
Exit block: 0x187
Body: 0x175, 0x17b, 0x187, 0x57a

Function 4:
Public function signature: 0x79ba5097
Entry block: 0x19d
Exit block: 0x1af
Body: 0x19d, 0x1a3, 0x1af, 0x583, 0x5da, 0x639, 0x63a

Function 5:
Public function signature: 0x85b12c7c
Entry block: 0x1b1
Exit block: 0x1cc
Body: 0x1b1, 0x1b7, 0x1cc, 0x63c, 0x694, 0x698, 0x6a3, 0x6a4

Function 6:
Public function signature: 0xa6f9dae1
Entry block: 0x1ce
Exit block: 0x1e9
Body: 0x1ce, 0x1d4, 0x1e9, 0x6a7, 0x6ff, 0x703, 0x741, 0x742

Function 7:
Public function signature: 0xb17fc36d
Entry block: 0x1eb
Exit block: 0x206
Body: 0x1eb, 0x1f1, 0x206, 0x745, 0x79d, 0x7a1, 0x7af, 0x7b3, 0x7be, 0x7bf

Function 8:
Public function signature: 0xba278e08
Entry block: 0x208
Exit block: 0x22c
Body: 0x208, 0x20e, 0x22c, 0x7c2, 0x81a, 0x81e, 0x82d, 0x831, 0x846, 0x847

Function 9:
Public function signature: 0xe93f57b9
Entry block: 0x22e
Exit block: 0x240
Body: 0x22e, 0x234, 0x240, 0x84b

Function 10:
Public fallback function
Entry block: 0x9c
Exit block: 0xfb
Body: 0x9c, 0xa0, 0xa4, 0xb2, 0xbc, 0xc2, 0xc6, 0xeb, 0xf8, 0xf9, 0xfb

