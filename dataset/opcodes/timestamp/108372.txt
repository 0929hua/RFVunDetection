args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/9/108372.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xac]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xac
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xac
0xa: JUMPI 0xac V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x1fe]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x1cb3b20
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x1fe
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x1cb3b20
0x39: V12 = EQ V10 0x1cb3b20
0x3a: V13 = 0x1fe
0x3d: JUMPI 0x1fe V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x213]
---
0x3e DUP1
0x3f PUSH4 0x29dcb0cf
0x44 EQ
0x45 PUSH2 0x213
0x48 JUMPI
---
0x3f: V14 = 0x29dcb0cf
0x44: V15 = EQ 0x29dcb0cf V10
0x45: V16 = 0x213
0x48: JUMPI 0x213 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x238]
---
0x49 DUP1
0x4a PUSH4 0x38af3eed
0x4f EQ
0x50 PUSH2 0x238
0x53 JUMPI
---
0x4a: V17 = 0x38af3eed
0x4f: V18 = EQ 0x38af3eed V10
0x50: V19 = 0x238
0x53: JUMPI 0x238 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x267]
---
0x54 DUP1
0x55 PUSH4 0x6e66f6e9
0x5a EQ
0x5b PUSH2 0x267
0x5e JUMPI
---
0x55: V20 = 0x6e66f6e9
0x5a: V21 = EQ 0x6e66f6e9 V10
0x5b: V22 = 0x267
0x5e: JUMPI 0x267 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x296]
---
0x5f DUP1
0x60 PUSH4 0x70a08231
0x65 EQ
0x66 PUSH2 0x296
0x69 JUMPI
---
0x60: V23 = 0x70a08231
0x65: V24 = EQ 0x70a08231 V10
0x66: V25 = 0x296
0x69: JUMPI 0x296 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x2c7]
---
0x6a DUP1
0x6b PUSH4 0x7a3a0e84
0x70 EQ
0x71 PUSH2 0x2c7
0x74 JUMPI
---
0x6b: V26 = 0x7a3a0e84
0x70: V27 = EQ 0x7a3a0e84 V10
0x71: V28 = 0x2c7
0x74: JUMPI 0x2c7 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x2ec]
---
0x75 DUP1
0x76 PUSH4 0x7b3e5e7b
0x7b EQ
0x7c PUSH2 0x2ec
0x7f JUMPI
---
0x76: V29 = 0x7b3e5e7b
0x7b: V30 = EQ 0x7b3e5e7b V10
0x7c: V31 = 0x2ec
0x7f: JUMPI 0x2ec V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x311]
---
0x80 DUP1
0x81 PUSH4 0xa035b1fe
0x86 EQ
0x87 PUSH2 0x311
0x8a JUMPI
---
0x81: V32 = 0xa035b1fe
0x86: V33 = EQ 0xa035b1fe V10
0x87: V34 = 0x311
0x8a: JUMPI 0x311 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x336]
---
0x8b DUP1
0x8c PUSH4 0xc7a32726
0x91 EQ
0x92 PUSH2 0x336
0x95 JUMPI
---
0x8c: V35 = 0xc7a32726
0x91: V36 = EQ 0xc7a32726 V10
0x92: V37 = 0x336
0x95: JUMPI 0x336 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x35b]
---
0x96 DUP1
0x97 PUSH4 0xd4c76e8b
0x9c EQ
0x9d PUSH2 0x35b
0xa0 JUMPI
---
0x97: V38 = 0xd4c76e8b
0x9c: V39 = EQ 0xd4c76e8b V10
0x9d: V40 = 0x35b
0xa0: JUMPI 0x35b V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x380]
---
0xa1 DUP1
0xa2 PUSH4 0xfd6b7ef8
0xa7 EQ
0xa8 PUSH2 0x380
0xab JUMPI
---
0xa2: V41 = 0xfd6b7ef8
0xa7: V42 = EQ 0xfd6b7ef8 V10
0xa8: V43 = 0x380
0xab: JUMPI 0x380 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xac]
---
Predecessors: [0x0, 0xa1]
Successors: [0xad]
---
0xac JUMPDEST
---
0xac: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xad
[0xad:0xc0]
---
Predecessors: [0xac]
Successors: [0xc1, 0xc5]
---
0xad JUMPDEST
0xae PUSH1 0x9
0xb0 SLOAD
0xb1 PUSH1 0x0
0xb3 SWAP1
0xb4 PUSH2 0x100
0xb7 SWAP1
0xb8 DIV
0xb9 PUSH1 0xff
0xbb AND
0xbc ISZERO
0xbd PUSH2 0xc5
0xc0 JUMPI
---
0xad: JUMPDEST 
0xae: V44 = 0x9
0xb0: V45 = S[0x9]
0xb1: V46 = 0x0
0xb4: V47 = 0x100
0xb8: V48 = DIV V45 0x100
0xb9: V49 = 0xff
0xbb: V50 = AND 0xff V48
0xbc: V51 = ISZERO V50
0xbd: V52 = 0xc5
0xc0: JUMPI 0xc5 V51
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x0]

================================

Block 0xc1
[0xc1:0xc4]
---
Predecessors: [0xad]
Successors: []
---
0xc1 PUSH1 0x0
0xc3 DUP1
0xc4 REVERT
---
0xc1: V53 = 0x0
0xc4: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xc5
[0xc5:0xce]
---
Predecessors: [0xad]
Successors: [0xcf, 0xd3]
---
0xc5 JUMPDEST
0xc6 PUSH1 0x5
0xc8 SLOAD
0xc9 TIMESTAMP
0xca GT
0xcb PUSH2 0xd3
0xce JUMPI
---
0xc5: JUMPDEST 
0xc6: V54 = 0x5
0xc8: V55 = S[0x5]
0xc9: V56 = TIMESTAMP
0xca: V57 = GT V56 V55
0xcb: V58 = 0xd3
0xce: JUMPI 0xd3 V57
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xcf
[0xcf:0xd2]
---
Predecessors: [0xc5]
Successors: []
---
0xcf PUSH1 0x0
0xd1 DUP1
0xd2 REVERT
---
0xcf: V59 = 0x0
0xd2: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xd3
[0xd3:0xde]
---
Predecessors: [0xc5]
Successors: [0xdf, 0xe3]
---
0xd3 JUMPDEST
0xd4 PUSH1 0x3
0xd6 SLOAD
0xd7 CALLVALUE
0xd8 DUP2
0xd9 ADD
0xda GT
0xdb PUSH2 0xe3
0xde JUMPI
---
0xd3: JUMPDEST 
0xd4: V60 = 0x3
0xd6: V61 = S[0x3]
0xd7: V62 = CALLVALUE
0xd9: V63 = ADD V61 V62
0xda: V64 = GT V63 V61
0xdb: V65 = 0xe3
0xde: JUMPI 0xe3 V64
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xdf
[0xdf:0xe2]
---
Predecessors: [0xd3]
Successors: []
---
0xdf PUSH1 0x0
0xe1 DUP1
0xe2 REVERT
---
0xdf: V66 = 0x0
0xe2: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xe3
[0xe3:0xf0]
---
Predecessors: [0xd3]
Successors: [0xf1, 0xf5]
---
0xe3 JUMPDEST
0xe4 PUSH1 0x2
0xe6 SLOAD
0xe7 PUSH1 0x3
0xe9 SLOAD
0xea CALLVALUE
0xeb ADD
0xec LT
0xed PUSH2 0xf5
0xf0 JUMPI
---
0xe3: JUMPDEST 
0xe4: V67 = 0x2
0xe6: V68 = S[0x2]
0xe7: V69 = 0x3
0xe9: V70 = S[0x3]
0xea: V71 = CALLVALUE
0xeb: V72 = ADD V71 V70
0xec: V73 = LT V72 V68
0xed: V74 = 0xf5
0xf0: JUMPI 0xf5 V73
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xf1
[0xf1:0xf4]
---
Predecessors: [0xe3]
Successors: []
---
0xf1 PUSH1 0x0
0xf3 DUP1
0xf4 REVERT
---
0xf1: V75 = 0x0
0xf4: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xf5
[0xf5:0x18d]
---
Predecessors: [0xe3]
Successors: [0x18e, 0x192]
---
0xf5 JUMPDEST
0xf6 POP
0xf7 PUSH1 0x1
0xf9 PUSH1 0xa0
0xfb PUSH1 0x2
0xfd EXP
0xfe SUB
0xff CALLER
0x100 DUP2
0x101 DUP2
0x102 AND
0x103 PUSH1 0x0
0x105 SWAP1
0x106 DUP2
0x107 MSTORE
0x108 PUSH1 0x8
0x10a PUSH1 0x20
0x10c MSTORE
0x10d PUSH1 0x40
0x10f SWAP1
0x110 DUP2
0x111 SWAP1
0x112 SHA3
0x113 DUP1
0x114 SLOAD
0x115 CALLVALUE
0x116 SWAP1
0x117 DUP2
0x118 ADD
0x119 SWAP1
0x11a SWAP2
0x11b SSTORE
0x11c PUSH1 0x3
0x11e DUP1
0x11f SLOAD
0x120 DUP3
0x121 ADD
0x122 SWAP1
0x123 SSTORE
0x124 PUSH1 0x7
0x126 SLOAD
0x127 PUSH1 0x6
0x129 SLOAD
0x12a SWAP2
0x12b SWAP5
0x12c AND
0x12d SWAP3
0x12e PUSH4 0xa9059cbb
0x133 SWAP3
0x134 SWAP1
0x135 SWAP2
0x136 DUP6
0x137 MUL
0x138 SWAP1
0x139 MLOAD
0x13a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x158 PUSH4 0xffffffff
0x15d DUP6
0x15e AND
0x15f MUL
0x160 DUP2
0x161 MSTORE
0x162 PUSH1 0x1
0x164 PUSH1 0xa0
0x166 PUSH1 0x2
0x168 EXP
0x169 SUB
0x16a SWAP1
0x16b SWAP3
0x16c AND
0x16d PUSH1 0x4
0x16f DUP4
0x170 ADD
0x171 MSTORE
0x172 PUSH1 0x24
0x174 DUP3
0x175 ADD
0x176 MSTORE
0x177 PUSH1 0x44
0x179 ADD
0x17a PUSH1 0x0
0x17c PUSH1 0x40
0x17e MLOAD
0x17f DUP1
0x180 DUP4
0x181 SUB
0x182 DUP2
0x183 PUSH1 0x0
0x185 DUP8
0x186 DUP1
0x187 EXTCODESIZE
0x188 ISZERO
0x189 ISZERO
0x18a PUSH2 0x192
0x18d JUMPI
---
0xf5: JUMPDEST 
0xf7: V76 = 0x1
0xf9: V77 = 0xa0
0xfb: V78 = 0x2
0xfd: V79 = EXP 0x2 0xa0
0xfe: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xff: V81 = CALLER
0x102: V82 = AND V81 0xffffffffffffffffffffffffffffffffffffffff
0x103: V83 = 0x0
0x107: M[0x0] = V82
0x108: V84 = 0x8
0x10a: V85 = 0x20
0x10c: M[0x20] = 0x8
0x10d: V86 = 0x40
0x112: V87 = SHA3 0x0 0x40
0x114: V88 = S[V87]
0x115: V89 = CALLVALUE
0x118: V90 = ADD V89 V88
0x11b: S[V87] = V90
0x11c: V91 = 0x3
0x11f: V92 = S[0x3]
0x121: V93 = ADD V89 V92
0x123: S[0x3] = V93
0x124: V94 = 0x7
0x126: V95 = S[0x7]
0x127: V96 = 0x6
0x129: V97 = S[0x6]
0x12c: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x12e: V99 = 0xa9059cbb
0x137: V100 = MUL V89 V97
0x139: V101 = M[0x40]
0x13a: V102 = 0x100000000000000000000000000000000000000000000000000000000
0x158: V103 = 0xffffffff
0x15e: V104 = AND 0xa9059cbb 0xffffffff
0x15f: V105 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x161: M[V101] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x162: V106 = 0x1
0x164: V107 = 0xa0
0x166: V108 = 0x2
0x168: V109 = EXP 0x2 0xa0
0x169: V110 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16c: V111 = AND V81 0xffffffffffffffffffffffffffffffffffffffff
0x16d: V112 = 0x4
0x170: V113 = ADD V101 0x4
0x171: M[V113] = V111
0x172: V114 = 0x24
0x175: V115 = ADD V101 0x24
0x176: M[V115] = V100
0x177: V116 = 0x44
0x179: V117 = ADD 0x44 V101
0x17a: V118 = 0x0
0x17c: V119 = 0x40
0x17e: V120 = M[0x40]
0x181: V121 = SUB V117 V120
0x183: V122 = 0x0
0x187: V123 = EXTCODESIZE V98
0x188: V124 = ISZERO V123
0x189: V125 = ISZERO V124
0x18a: V126 = 0x192
0x18d: JUMPI 0x192 V125
---
Entry stack: [V10, 0x0]
Stack pops: 1
Stack additions: [V89, V98, 0xa9059cbb, V117, 0x0, V120, V121, V120, 0x0, V98]
Exit stack: [V10, V89, V98, 0xa9059cbb, V117, 0x0, V120, V121, V120, 0x0, V98]

================================

Block 0x18e
[0x18e:0x191]
---
Predecessors: [0xf5]
Successors: []
---
0x18e PUSH1 0x0
0x190 DUP1
0x191 REVERT
---
0x18e: V127 = 0x0
0x191: REVERT 0x0 0x0
---
Entry stack: [V10, V89, V98, 0xa9059cbb, V117, 0x0, V120, V121, V120, 0x0, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V89, V98, 0xa9059cbb, V117, 0x0, V120, V121, V120, 0x0, V98]

================================

Block 0x192
[0x192:0x19e]
---
Predecessors: [0xf5]
Successors: [0x19f, 0x1a3]
---
0x192 JUMPDEST
0x193 PUSH2 0x2c6
0x196 GAS
0x197 SUB
0x198 CALL
0x199 ISZERO
0x19a ISZERO
0x19b PUSH2 0x1a3
0x19e JUMPI
---
0x192: JUMPDEST 
0x193: V128 = 0x2c6
0x196: V129 = GAS
0x197: V130 = SUB V129 0x2c6
0x198: V131 = CALL V130 V98 0x0 V120 V121 V120 0x0
0x199: V132 = ISZERO V131
0x19a: V133 = ISZERO V132
0x19b: V134 = 0x1a3
0x19e: JUMPI 0x1a3 V133
---
Entry stack: [V10, V89, V98, 0xa9059cbb, V117, 0x0, V120, V121, V120, 0x0, V98]
Stack pops: 6
Stack additions: []
Exit stack: [V10, V89, V98, 0xa9059cbb, V117]

================================

Block 0x19f
[0x19f:0x1a2]
---
Predecessors: [0x192]
Successors: []
---
0x19f PUSH1 0x0
0x1a1 DUP1
0x1a2 REVERT
---
0x19f: V135 = 0x0
0x1a2: REVERT 0x0 0x0
---
Entry stack: [V10, V89, V98, 0xa9059cbb, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V89, V98, 0xa9059cbb, V117]

================================

Block 0x1a3
[0x1a3:0x1fa]
---
Predecessors: [0x192]
Successors: [0x1fb]
---
0x1a3 JUMPDEST
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1c8 CALLER
0x1c9 DUP3
0x1ca PUSH1 0x1
0x1cc PUSH1 0x40
0x1ce MLOAD
0x1cf PUSH1 0x1
0x1d1 PUSH1 0xa0
0x1d3 PUSH1 0x2
0x1d5 EXP
0x1d6 SUB
0x1d7 SWAP1
0x1d8 SWAP4
0x1d9 AND
0x1da DUP4
0x1db MSTORE
0x1dc PUSH1 0x20
0x1de DUP4
0x1df ADD
0x1e0 SWAP2
0x1e1 SWAP1
0x1e2 SWAP2
0x1e3 MSTORE
0x1e4 ISZERO
0x1e5 ISZERO
0x1e6 PUSH1 0x40
0x1e8 DUP1
0x1e9 DUP4
0x1ea ADD
0x1eb SWAP2
0x1ec SWAP1
0x1ed SWAP2
0x1ee MSTORE
0x1ef PUSH1 0x60
0x1f1 SWAP1
0x1f2 SWAP2
0x1f3 ADD
0x1f4 SWAP1
0x1f5 MLOAD
0x1f6 DUP1
0x1f7 SWAP2
0x1f8 SUB
0x1f9 SWAP1
0x1fa LOG1
---
0x1a3: JUMPDEST 
0x1a7: V136 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1c8: V137 = CALLER
0x1ca: V138 = 0x1
0x1cc: V139 = 0x40
0x1ce: V140 = M[0x40]
0x1cf: V141 = 0x1
0x1d1: V142 = 0xa0
0x1d3: V143 = 0x2
0x1d5: V144 = EXP 0x2 0xa0
0x1d6: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d9: V146 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x1db: M[V140] = V146
0x1dc: V147 = 0x20
0x1df: V148 = ADD V140 0x20
0x1e3: M[V148] = V89
0x1e4: V149 = ISZERO 0x1
0x1e5: V150 = ISZERO 0x0
0x1e6: V151 = 0x40
0x1ea: V152 = ADD V140 0x40
0x1ee: M[V152] = 0x1
0x1ef: V153 = 0x60
0x1f3: V154 = ADD V140 0x60
0x1f5: V155 = M[0x40]
0x1f8: V156 = SUB V154 V155
0x1fa: LOG V155 V156 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, V89, V98, 0xa9059cbb, V117]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, V89]

================================

Block 0x1fb
[0x1fb:0x1fd]
---
Predecessors: [0x1a3]
Successors: []
---
0x1fb JUMPDEST
0x1fc POP
0x1fd STOP
---
0x1fb: JUMPDEST 
0x1fd: STOP 
---
Entry stack: [V10, V89]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fe
[0x1fe:0x204]
---
Predecessors: [0xb]
Successors: [0x205, 0x209]
---
0x1fe JUMPDEST
0x1ff CALLVALUE
0x200 ISZERO
0x201 PUSH2 0x209
0x204 JUMPI
---
0x1fe: JUMPDEST 
0x1ff: V157 = CALLVALUE
0x200: V158 = ISZERO V157
0x201: V159 = 0x209
0x204: JUMPI 0x209 V158
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x205
[0x205:0x208]
---
Predecessors: [0x1fe]
Successors: []
---
0x205 PUSH1 0x0
0x207 DUP1
0x208 REVERT
---
0x205: V160 = 0x0
0x208: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x209
[0x209:0x210]
---
Predecessors: [0x1fe]
Successors: [0x395]
---
0x209 JUMPDEST
0x20a PUSH2 0x211
0x20d PUSH2 0x395
0x210 JUMP
---
0x209: JUMPDEST 
0x20a: V161 = 0x211
0x20d: V162 = 0x395
0x210: JUMP 0x395
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x211]
Exit stack: [V10, 0x211]

================================

Block 0x211
[0x211:0x212]
---
Predecessors: [0x3c9, 0x5d0]
Successors: []
---
0x211 JUMPDEST
0x212 STOP
---
0x211: JUMPDEST 
0x212: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x213
[0x213:0x219]
---
Predecessors: [0x3e]
Successors: [0x21a, 0x21e]
---
0x213 JUMPDEST
0x214 CALLVALUE
0x215 ISZERO
0x216 PUSH2 0x21e
0x219 JUMPI
---
0x213: JUMPDEST 
0x214: V163 = CALLVALUE
0x215: V164 = ISZERO V163
0x216: V165 = 0x21e
0x219: JUMPI 0x21e V164
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21a
[0x21a:0x21d]
---
Predecessors: [0x213]
Successors: []
---
0x21a PUSH1 0x0
0x21c DUP1
0x21d REVERT
---
0x21a: V166 = 0x0
0x21d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21e
[0x21e:0x225]
---
Predecessors: [0x213]
Successors: [0x3cb]
---
0x21e JUMPDEST
0x21f PUSH2 0x226
0x222 PUSH2 0x3cb
0x225 JUMP
---
0x21e: JUMPDEST 
0x21f: V167 = 0x226
0x222: V168 = 0x3cb
0x225: JUMP 0x3cb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x226]
Exit stack: [V10, 0x226]

================================

Block 0x226
[0x226:0x237]
---
Predecessors: [0x3cb, 0x3ef, 0x401, 0x407, 0x40d, 0x413, 0x419]
Successors: []
---
0x226 JUMPDEST
0x227 PUSH1 0x40
0x229 MLOAD
0x22a SWAP1
0x22b DUP2
0x22c MSTORE
0x22d PUSH1 0x20
0x22f ADD
0x230 PUSH1 0x40
0x232 MLOAD
0x233 DUP1
0x234 SWAP2
0x235 SUB
0x236 SWAP1
0x237 RETURN
---
0x226: JUMPDEST 
0x227: V169 = 0x40
0x229: V170 = M[0x40]
0x22c: M[V170] = S0
0x22d: V171 = 0x20
0x22f: V172 = ADD 0x20 V170
0x230: V173 = 0x40
0x232: V174 = M[0x40]
0x235: V175 = SUB V172 V174
0x237: RETURN V174 V175
---
Entry stack: [V10, 0x226, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x226]

================================

Block 0x238
[0x238:0x23e]
---
Predecessors: [0x49]
Successors: [0x23f, 0x243]
---
0x238 JUMPDEST
0x239 CALLVALUE
0x23a ISZERO
0x23b PUSH2 0x243
0x23e JUMPI
---
0x238: JUMPDEST 
0x239: V176 = CALLVALUE
0x23a: V177 = ISZERO V176
0x23b: V178 = 0x243
0x23e: JUMPI 0x243 V177
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x23f
[0x23f:0x242]
---
Predecessors: [0x238]
Successors: []
---
0x23f PUSH1 0x0
0x241 DUP1
0x242 REVERT
---
0x23f: V179 = 0x0
0x242: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x243
[0x243:0x24a]
---
Predecessors: [0x238]
Successors: [0x3d1]
---
0x243 JUMPDEST
0x244 PUSH2 0x24b
0x247 PUSH2 0x3d1
0x24a JUMP
---
0x243: JUMPDEST 
0x244: V180 = 0x24b
0x247: V181 = 0x3d1
0x24a: JUMP 0x3d1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x24b]
Exit stack: [V10, 0x24b]

================================

Block 0x24b
[0x24b:0x266]
---
Predecessors: [0x3d1, 0x3e0]
Successors: []
---
0x24b JUMPDEST
0x24c PUSH1 0x40
0x24e MLOAD
0x24f PUSH1 0x1
0x251 PUSH1 0xa0
0x253 PUSH1 0x2
0x255 EXP
0x256 SUB
0x257 SWAP1
0x258 SWAP2
0x259 AND
0x25a DUP2
0x25b MSTORE
0x25c PUSH1 0x20
0x25e ADD
0x25f PUSH1 0x40
0x261 MLOAD
0x262 DUP1
0x263 SWAP2
0x264 SUB
0x265 SWAP1
0x266 RETURN
---
0x24b: JUMPDEST 
0x24c: V182 = 0x40
0x24e: V183 = M[0x40]
0x24f: V184 = 0x1
0x251: V185 = 0xa0
0x253: V186 = 0x2
0x255: V187 = EXP 0x2 0xa0
0x256: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x259: V189 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x25b: M[V183] = V189
0x25c: V190 = 0x20
0x25e: V191 = ADD 0x20 V183
0x25f: V192 = 0x40
0x261: V193 = M[0x40]
0x264: V194 = SUB V191 V193
0x266: RETURN V193 V194
---
Entry stack: [V10, 0x24b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x24b]

================================

Block 0x267
[0x267:0x26d]
---
Predecessors: [0x54]
Successors: [0x26e, 0x272]
---
0x267 JUMPDEST
0x268 CALLVALUE
0x269 ISZERO
0x26a PUSH2 0x272
0x26d JUMPI
---
0x267: JUMPDEST 
0x268: V195 = CALLVALUE
0x269: V196 = ISZERO V195
0x26a: V197 = 0x272
0x26d: JUMPI 0x272 V196
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26e
[0x26e:0x271]
---
Predecessors: [0x267]
Successors: []
---
0x26e PUSH1 0x0
0x270 DUP1
0x271 REVERT
---
0x26e: V198 = 0x0
0x271: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x272
[0x272:0x279]
---
Predecessors: [0x267]
Successors: [0x3e0]
---
0x272 JUMPDEST
0x273 PUSH2 0x24b
0x276 PUSH2 0x3e0
0x279 JUMP
---
0x272: JUMPDEST 
0x273: V199 = 0x24b
0x276: V200 = 0x3e0
0x279: JUMP 0x3e0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x24b]
Exit stack: [V10, 0x24b]

================================

Block 0x27a
[0x27a:0x295]
---
Predecessors: []
Successors: []
---
0x27a JUMPDEST
0x27b PUSH1 0x40
0x27d MLOAD
0x27e PUSH1 0x1
0x280 PUSH1 0xa0
0x282 PUSH1 0x2
0x284 EXP
0x285 SUB
0x286 SWAP1
0x287 SWAP2
0x288 AND
0x289 DUP2
0x28a MSTORE
0x28b PUSH1 0x20
0x28d ADD
0x28e PUSH1 0x40
0x290 MLOAD
0x291 DUP1
0x292 SWAP2
0x293 SUB
0x294 SWAP1
0x295 RETURN
---
0x27a: JUMPDEST 
0x27b: V201 = 0x40
0x27d: V202 = M[0x40]
0x27e: V203 = 0x1
0x280: V204 = 0xa0
0x282: V205 = 0x2
0x284: V206 = EXP 0x2 0xa0
0x285: V207 = SUB 0x10000000000000000000000000000000000000000 0x1
0x288: V208 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x28a: M[V202] = V208
0x28b: V209 = 0x20
0x28d: V210 = ADD 0x20 V202
0x28e: V211 = 0x40
0x290: V212 = M[0x40]
0x293: V213 = SUB V210 V212
0x295: RETURN V212 V213
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x296
[0x296:0x29c]
---
Predecessors: [0x5f]
Successors: [0x29d, 0x2a1]
---
0x296 JUMPDEST
0x297 CALLVALUE
0x298 ISZERO
0x299 PUSH2 0x2a1
0x29c JUMPI
---
0x296: JUMPDEST 
0x297: V214 = CALLVALUE
0x298: V215 = ISZERO V214
0x299: V216 = 0x2a1
0x29c: JUMPI 0x2a1 V215
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x29d
[0x29d:0x2a0]
---
Predecessors: [0x296]
Successors: []
---
0x29d PUSH1 0x0
0x29f DUP1
0x2a0 REVERT
---
0x29d: V217 = 0x0
0x2a0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a1
[0x2a1:0x2b4]
---
Predecessors: [0x296]
Successors: [0x3ef]
---
0x2a1 JUMPDEST
0x2a2 PUSH2 0x226
0x2a5 PUSH1 0x1
0x2a7 PUSH1 0xa0
0x2a9 PUSH1 0x2
0x2ab EXP
0x2ac SUB
0x2ad PUSH1 0x4
0x2af CALLDATALOAD
0x2b0 AND
0x2b1 PUSH2 0x3ef
0x2b4 JUMP
---
0x2a1: JUMPDEST 
0x2a2: V218 = 0x226
0x2a5: V219 = 0x1
0x2a7: V220 = 0xa0
0x2a9: V221 = 0x2
0x2ab: V222 = EXP 0x2 0xa0
0x2ac: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ad: V224 = 0x4
0x2af: V225 = CALLDATALOAD 0x4
0x2b0: V226 = AND V225 0xffffffffffffffffffffffffffffffffffffffff
0x2b1: V227 = 0x3ef
0x2b4: JUMP 0x3ef
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x226, V226]
Exit stack: [V10, 0x226, V226]

================================

Block 0x2b5
[0x2b5:0x2c6]
---
Predecessors: []
Successors: []
---
0x2b5 JUMPDEST
0x2b6 PUSH1 0x40
0x2b8 MLOAD
0x2b9 SWAP1
0x2ba DUP2
0x2bb MSTORE
0x2bc PUSH1 0x20
0x2be ADD
0x2bf PUSH1 0x40
0x2c1 MLOAD
0x2c2 DUP1
0x2c3 SWAP2
0x2c4 SUB
0x2c5 SWAP1
0x2c6 RETURN
---
0x2b5: JUMPDEST 
0x2b6: V228 = 0x40
0x2b8: V229 = M[0x40]
0x2bb: M[V229] = S0
0x2bc: V230 = 0x20
0x2be: V231 = ADD 0x20 V229
0x2bf: V232 = 0x40
0x2c1: V233 = M[0x40]
0x2c4: V234 = SUB V231 V233
0x2c6: RETURN V233 V234
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c7
[0x2c7:0x2cd]
---
Predecessors: [0x6a]
Successors: [0x2ce, 0x2d2]
---
0x2c7 JUMPDEST
0x2c8 CALLVALUE
0x2c9 ISZERO
0x2ca PUSH2 0x2d2
0x2cd JUMPI
---
0x2c7: JUMPDEST 
0x2c8: V235 = CALLVALUE
0x2c9: V236 = ISZERO V235
0x2ca: V237 = 0x2d2
0x2cd: JUMPI 0x2d2 V236
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ce
[0x2ce:0x2d1]
---
Predecessors: [0x2c7]
Successors: []
---
0x2ce PUSH1 0x0
0x2d0 DUP1
0x2d1 REVERT
---
0x2ce: V238 = 0x0
0x2d1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d2
[0x2d2:0x2d9]
---
Predecessors: [0x2c7]
Successors: [0x401]
---
0x2d2 JUMPDEST
0x2d3 PUSH2 0x226
0x2d6 PUSH2 0x401
0x2d9 JUMP
---
0x2d2: JUMPDEST 
0x2d3: V239 = 0x226
0x2d6: V240 = 0x401
0x2d9: JUMP 0x401
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x226]
Exit stack: [V10, 0x226]

================================

Block 0x2da
[0x2da:0x2eb]
---
Predecessors: []
Successors: []
---
0x2da JUMPDEST
0x2db PUSH1 0x40
0x2dd MLOAD
0x2de SWAP1
0x2df DUP2
0x2e0 MSTORE
0x2e1 PUSH1 0x20
0x2e3 ADD
0x2e4 PUSH1 0x40
0x2e6 MLOAD
0x2e7 DUP1
0x2e8 SWAP2
0x2e9 SUB
0x2ea SWAP1
0x2eb RETURN
---
0x2da: JUMPDEST 
0x2db: V241 = 0x40
0x2dd: V242 = M[0x40]
0x2e0: M[V242] = S0
0x2e1: V243 = 0x20
0x2e3: V244 = ADD 0x20 V242
0x2e4: V245 = 0x40
0x2e6: V246 = M[0x40]
0x2e9: V247 = SUB V244 V246
0x2eb: RETURN V246 V247
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ec
[0x2ec:0x2f2]
---
Predecessors: [0x75]
Successors: [0x2f3, 0x2f7]
---
0x2ec JUMPDEST
0x2ed CALLVALUE
0x2ee ISZERO
0x2ef PUSH2 0x2f7
0x2f2 JUMPI
---
0x2ec: JUMPDEST 
0x2ed: V248 = CALLVALUE
0x2ee: V249 = ISZERO V248
0x2ef: V250 = 0x2f7
0x2f2: JUMPI 0x2f7 V249
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f3
[0x2f3:0x2f6]
---
Predecessors: [0x2ec]
Successors: []
---
0x2f3 PUSH1 0x0
0x2f5 DUP1
0x2f6 REVERT
---
0x2f3: V251 = 0x0
0x2f6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f7
[0x2f7:0x2fe]
---
Predecessors: [0x2ec]
Successors: [0x407]
---
0x2f7 JUMPDEST
0x2f8 PUSH2 0x226
0x2fb PUSH2 0x407
0x2fe JUMP
---
0x2f7: JUMPDEST 
0x2f8: V252 = 0x226
0x2fb: V253 = 0x407
0x2fe: JUMP 0x407
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x226]
Exit stack: [V10, 0x226]

================================

Block 0x2ff
[0x2ff:0x310]
---
Predecessors: []
Successors: []
---
0x2ff JUMPDEST
0x300 PUSH1 0x40
0x302 MLOAD
0x303 SWAP1
0x304 DUP2
0x305 MSTORE
0x306 PUSH1 0x20
0x308 ADD
0x309 PUSH1 0x40
0x30b MLOAD
0x30c DUP1
0x30d SWAP2
0x30e SUB
0x30f SWAP1
0x310 RETURN
---
0x2ff: JUMPDEST 
0x300: V254 = 0x40
0x302: V255 = M[0x40]
0x305: M[V255] = S0
0x306: V256 = 0x20
0x308: V257 = ADD 0x20 V255
0x309: V258 = 0x40
0x30b: V259 = M[0x40]
0x30e: V260 = SUB V257 V259
0x310: RETURN V259 V260
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x311
[0x311:0x317]
---
Predecessors: [0x80]
Successors: [0x318, 0x31c]
---
0x311 JUMPDEST
0x312 CALLVALUE
0x313 ISZERO
0x314 PUSH2 0x31c
0x317 JUMPI
---
0x311: JUMPDEST 
0x312: V261 = CALLVALUE
0x313: V262 = ISZERO V261
0x314: V263 = 0x31c
0x317: JUMPI 0x31c V262
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x318
[0x318:0x31b]
---
Predecessors: [0x311]
Successors: []
---
0x318 PUSH1 0x0
0x31a DUP1
0x31b REVERT
---
0x318: V264 = 0x0
0x31b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x31c
[0x31c:0x323]
---
Predecessors: [0x311]
Successors: [0x40d]
---
0x31c JUMPDEST
0x31d PUSH2 0x226
0x320 PUSH2 0x40d
0x323 JUMP
---
0x31c: JUMPDEST 
0x31d: V265 = 0x226
0x320: V266 = 0x40d
0x323: JUMP 0x40d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x226]
Exit stack: [V10, 0x226]

================================

Block 0x324
[0x324:0x335]
---
Predecessors: []
Successors: []
---
0x324 JUMPDEST
0x325 PUSH1 0x40
0x327 MLOAD
0x328 SWAP1
0x329 DUP2
0x32a MSTORE
0x32b PUSH1 0x20
0x32d ADD
0x32e PUSH1 0x40
0x330 MLOAD
0x331 DUP1
0x332 SWAP2
0x333 SUB
0x334 SWAP1
0x335 RETURN
---
0x324: JUMPDEST 
0x325: V267 = 0x40
0x327: V268 = M[0x40]
0x32a: M[V268] = S0
0x32b: V269 = 0x20
0x32d: V270 = ADD 0x20 V268
0x32e: V271 = 0x40
0x330: V272 = M[0x40]
0x333: V273 = SUB V270 V272
0x335: RETURN V272 V273
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x336
[0x336:0x33c]
---
Predecessors: [0x8b]
Successors: [0x33d, 0x341]
---
0x336 JUMPDEST
0x337 CALLVALUE
0x338 ISZERO
0x339 PUSH2 0x341
0x33c JUMPI
---
0x336: JUMPDEST 
0x337: V274 = CALLVALUE
0x338: V275 = ISZERO V274
0x339: V276 = 0x341
0x33c: JUMPI 0x341 V275
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33d
[0x33d:0x340]
---
Predecessors: [0x336]
Successors: []
---
0x33d PUSH1 0x0
0x33f DUP1
0x340 REVERT
---
0x33d: V277 = 0x0
0x340: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x341
[0x341:0x348]
---
Predecessors: [0x336]
Successors: [0x413]
---
0x341 JUMPDEST
0x342 PUSH2 0x226
0x345 PUSH2 0x413
0x348 JUMP
---
0x341: JUMPDEST 
0x342: V278 = 0x226
0x345: V279 = 0x413
0x348: JUMP 0x413
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x226]
Exit stack: [V10, 0x226]

================================

Block 0x349
[0x349:0x35a]
---
Predecessors: []
Successors: []
---
0x349 JUMPDEST
0x34a PUSH1 0x40
0x34c MLOAD
0x34d SWAP1
0x34e DUP2
0x34f MSTORE
0x350 PUSH1 0x20
0x352 ADD
0x353 PUSH1 0x40
0x355 MLOAD
0x356 DUP1
0x357 SWAP2
0x358 SUB
0x359 SWAP1
0x35a RETURN
---
0x349: JUMPDEST 
0x34a: V280 = 0x40
0x34c: V281 = M[0x40]
0x34f: M[V281] = S0
0x350: V282 = 0x20
0x352: V283 = ADD 0x20 V281
0x353: V284 = 0x40
0x355: V285 = M[0x40]
0x358: V286 = SUB V283 V285
0x35a: RETURN V285 V286
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x35b
[0x35b:0x361]
---
Predecessors: [0x96]
Successors: [0x362, 0x366]
---
0x35b JUMPDEST
0x35c CALLVALUE
0x35d ISZERO
0x35e PUSH2 0x366
0x361 JUMPI
---
0x35b: JUMPDEST 
0x35c: V287 = CALLVALUE
0x35d: V288 = ISZERO V287
0x35e: V289 = 0x366
0x361: JUMPI 0x366 V288
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x362
[0x362:0x365]
---
Predecessors: [0x35b]
Successors: []
---
0x362 PUSH1 0x0
0x364 DUP1
0x365 REVERT
---
0x362: V290 = 0x0
0x365: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x366
[0x366:0x36d]
---
Predecessors: [0x35b]
Successors: [0x419]
---
0x366 JUMPDEST
0x367 PUSH2 0x226
0x36a PUSH2 0x419
0x36d JUMP
---
0x366: JUMPDEST 
0x367: V291 = 0x226
0x36a: V292 = 0x419
0x36d: JUMP 0x419
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x226]
Exit stack: [V10, 0x226]

================================

Block 0x36e
[0x36e:0x37f]
---
Predecessors: []
Successors: []
---
0x36e JUMPDEST
0x36f PUSH1 0x40
0x371 MLOAD
0x372 SWAP1
0x373 DUP2
0x374 MSTORE
0x375 PUSH1 0x20
0x377 ADD
0x378 PUSH1 0x40
0x37a MLOAD
0x37b DUP1
0x37c SWAP2
0x37d SUB
0x37e SWAP1
0x37f RETURN
---
0x36e: JUMPDEST 
0x36f: V293 = 0x40
0x371: V294 = M[0x40]
0x374: M[V294] = S0
0x375: V295 = 0x20
0x377: V296 = ADD 0x20 V294
0x378: V297 = 0x40
0x37a: V298 = M[0x40]
0x37d: V299 = SUB V296 V298
0x37f: RETURN V298 V299
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x380
[0x380:0x386]
---
Predecessors: [0xa1]
Successors: [0x387, 0x38b]
---
0x380 JUMPDEST
0x381 CALLVALUE
0x382 ISZERO
0x383 PUSH2 0x38b
0x386 JUMPI
---
0x380: JUMPDEST 
0x381: V300 = CALLVALUE
0x382: V301 = ISZERO V300
0x383: V302 = 0x38b
0x386: JUMPI 0x38b V301
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x387
[0x387:0x38a]
---
Predecessors: [0x380]
Successors: []
---
0x387 PUSH1 0x0
0x389 DUP1
0x38a REVERT
---
0x387: V303 = 0x0
0x38a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x38b
[0x38b:0x392]
---
Predecessors: [0x380]
Successors: [0x41f]
---
0x38b JUMPDEST
0x38c PUSH2 0x211
0x38f PUSH2 0x41f
0x392 JUMP
---
0x38b: JUMPDEST 
0x38c: V304 = 0x211
0x38f: V305 = 0x41f
0x392: JUMP 0x41f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x211]
Exit stack: [V10, 0x211]

================================

Block 0x393
[0x393:0x394]
---
Predecessors: []
Successors: []
---
0x393 JUMPDEST
0x394 STOP
---
0x393: JUMPDEST 
0x394: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x395
[0x395:0x39e]
---
Predecessors: [0x209]
Successors: [0x39f, 0x3c7]
---
0x395 JUMPDEST
0x396 PUSH1 0x4
0x398 SLOAD
0x399 TIMESTAMP
0x39a LT
0x39b PUSH2 0x3c7
0x39e JUMPI
---
0x395: JUMPDEST 
0x396: V306 = 0x4
0x398: V307 = S[0x4]
0x399: V308 = TIMESTAMP
0x39a: V309 = LT V308 V307
0x39b: V310 = 0x3c7
0x39e: JUMPI 0x3c7 V309
---
Entry stack: [V10, 0x211]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211]

================================

Block 0x39f
[0x39f:0x3a9]
---
Predecessors: [0x395]
Successors: [0x3aa, 0x3b7]
---
0x39f PUSH1 0x1
0x3a1 SLOAD
0x3a2 PUSH1 0x3
0x3a4 SLOAD
0x3a5 LT
0x3a6 PUSH2 0x3b7
0x3a9 JUMPI
---
0x39f: V311 = 0x1
0x3a1: V312 = S[0x1]
0x3a2: V313 = 0x3
0x3a4: V314 = S[0x3]
0x3a5: V315 = LT V314 V312
0x3a6: V316 = 0x3b7
0x3a9: JUMPI 0x3b7 V315
---
Entry stack: [V10, 0x211]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211]

================================

Block 0x3aa
[0x3aa:0x3b6]
---
Predecessors: [0x39f]
Successors: [0x3b7]
---
0x3aa PUSH1 0x9
0x3ac DUP1
0x3ad SLOAD
0x3ae PUSH1 0xff
0x3b0 NOT
0x3b1 AND
0x3b2 PUSH1 0x1
0x3b4 OR
0x3b5 SWAP1
0x3b6 SSTORE
---
0x3aa: V317 = 0x9
0x3ad: V318 = S[0x9]
0x3ae: V319 = 0xff
0x3b0: V320 = NOT 0xff
0x3b1: V321 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V318
0x3b2: V322 = 0x1
0x3b4: V323 = OR 0x1 V321
0x3b6: S[0x9] = V323
---
Entry stack: [V10, 0x211]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211]

================================

Block 0x3b7
[0x3b7:0x3c6]
---
Predecessors: [0x39f, 0x3aa]
Successors: [0x3c7]
---
0x3b7 JUMPDEST
0x3b8 PUSH1 0x9
0x3ba DUP1
0x3bb SLOAD
0x3bc PUSH2 0xff00
0x3bf NOT
0x3c0 AND
0x3c1 PUSH2 0x100
0x3c4 OR
0x3c5 SWAP1
0x3c6 SSTORE
---
0x3b7: JUMPDEST 
0x3b8: V324 = 0x9
0x3bb: V325 = S[0x9]
0x3bc: V326 = 0xff00
0x3bf: V327 = NOT 0xff00
0x3c0: V328 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V325
0x3c1: V329 = 0x100
0x3c4: V330 = OR 0x100 V328
0x3c6: S[0x9] = V330
---
Entry stack: [V10, 0x211]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211]

================================

Block 0x3c7
[0x3c7:0x3c7]
---
Predecessors: [0x395, 0x3b7]
Successors: [0x3c8]
---
0x3c7 JUMPDEST
---
0x3c7: JUMPDEST 
---
Entry stack: [V10, 0x211]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211]

================================

Block 0x3c8
[0x3c8:0x3c8]
---
Predecessors: [0x3c7]
Successors: [0x3c9]
---
0x3c8 JUMPDEST
---
0x3c8: JUMPDEST 
---
Entry stack: [V10, 0x211]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211]

================================

Block 0x3c9
[0x3c9:0x3ca]
---
Predecessors: [0x3c8]
Successors: [0x211]
---
0x3c9 JUMPDEST
0x3ca JUMP
---
0x3c9: JUMPDEST 
0x3ca: JUMP 0x211
---
Entry stack: [V10, 0x211]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x3cb
[0x3cb:0x3d0]
---
Predecessors: [0x21e]
Successors: [0x226]
---
0x3cb JUMPDEST
0x3cc PUSH1 0x4
0x3ce SLOAD
0x3cf DUP2
0x3d0 JUMP
---
0x3cb: JUMPDEST 
0x3cc: V331 = 0x4
0x3ce: V332 = S[0x4]
0x3d0: JUMP 0x226
---
Entry stack: [V10, 0x226]
Stack pops: 1
Stack additions: [S0, V332]
Exit stack: [V10, 0x226, V332]

================================

Block 0x3d1
[0x3d1:0x3df]
---
Predecessors: [0x243]
Successors: [0x24b]
---
0x3d1 JUMPDEST
0x3d2 PUSH1 0x0
0x3d4 SLOAD
0x3d5 PUSH1 0x1
0x3d7 PUSH1 0xa0
0x3d9 PUSH1 0x2
0x3db EXP
0x3dc SUB
0x3dd AND
0x3de DUP2
0x3df JUMP
---
0x3d1: JUMPDEST 
0x3d2: V333 = 0x0
0x3d4: V334 = S[0x0]
0x3d5: V335 = 0x1
0x3d7: V336 = 0xa0
0x3d9: V337 = 0x2
0x3db: V338 = EXP 0x2 0xa0
0x3dc: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3dd: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x3df: JUMP 0x24b
---
Entry stack: [V10, 0x24b]
Stack pops: 1
Stack additions: [S0, V340]
Exit stack: [V10, 0x24b, V340]

================================

Block 0x3e0
[0x3e0:0x3ee]
---
Predecessors: [0x272]
Successors: [0x24b]
---
0x3e0 JUMPDEST
0x3e1 PUSH1 0x7
0x3e3 SLOAD
0x3e4 PUSH1 0x1
0x3e6 PUSH1 0xa0
0x3e8 PUSH1 0x2
0x3ea EXP
0x3eb SUB
0x3ec AND
0x3ed DUP2
0x3ee JUMP
---
0x3e0: JUMPDEST 
0x3e1: V341 = 0x7
0x3e3: V342 = S[0x7]
0x3e4: V343 = 0x1
0x3e6: V344 = 0xa0
0x3e8: V345 = 0x2
0x3ea: V346 = EXP 0x2 0xa0
0x3eb: V347 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ec: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x3ee: JUMP 0x24b
---
Entry stack: [V10, 0x24b]
Stack pops: 1
Stack additions: [S0, V348]
Exit stack: [V10, 0x24b, V348]

================================

Block 0x3ef
[0x3ef:0x400]
---
Predecessors: [0x2a1]
Successors: [0x226]
---
0x3ef JUMPDEST
0x3f0 PUSH1 0x8
0x3f2 PUSH1 0x20
0x3f4 MSTORE
0x3f5 PUSH1 0x0
0x3f7 SWAP1
0x3f8 DUP2
0x3f9 MSTORE
0x3fa PUSH1 0x40
0x3fc SWAP1
0x3fd SHA3
0x3fe SLOAD
0x3ff DUP2
0x400 JUMP
---
0x3ef: JUMPDEST 
0x3f0: V349 = 0x8
0x3f2: V350 = 0x20
0x3f4: M[0x20] = 0x8
0x3f5: V351 = 0x0
0x3f9: M[0x0] = V226
0x3fa: V352 = 0x40
0x3fd: V353 = SHA3 0x0 0x40
0x3fe: V354 = S[V353]
0x400: JUMP 0x226
---
Entry stack: [V10, 0x226, V226]
Stack pops: 2
Stack additions: [S1, V354]
Exit stack: [V10, 0x226, V354]

================================

Block 0x401
[0x401:0x406]
---
Predecessors: [0x2d2]
Successors: [0x226]
---
0x401 JUMPDEST
0x402 PUSH1 0x1
0x404 SLOAD
0x405 DUP2
0x406 JUMP
---
0x401: JUMPDEST 
0x402: V355 = 0x1
0x404: V356 = S[0x1]
0x406: JUMP 0x226
---
Entry stack: [V10, 0x226]
Stack pops: 1
Stack additions: [S0, V356]
Exit stack: [V10, 0x226, V356]

================================

Block 0x407
[0x407:0x40c]
---
Predecessors: [0x2f7]
Successors: [0x226]
---
0x407 JUMPDEST
0x408 PUSH1 0x3
0x40a SLOAD
0x40b DUP2
0x40c JUMP
---
0x407: JUMPDEST 
0x408: V357 = 0x3
0x40a: V358 = S[0x3]
0x40c: JUMP 0x226
---
Entry stack: [V10, 0x226]
Stack pops: 1
Stack additions: [S0, V358]
Exit stack: [V10, 0x226, V358]

================================

Block 0x40d
[0x40d:0x412]
---
Predecessors: [0x31c]
Successors: [0x226]
---
0x40d JUMPDEST
0x40e PUSH1 0x6
0x410 SLOAD
0x411 DUP2
0x412 JUMP
---
0x40d: JUMPDEST 
0x40e: V359 = 0x6
0x410: V360 = S[0x6]
0x412: JUMP 0x226
---
Entry stack: [V10, 0x226]
Stack pops: 1
Stack additions: [S0, V360]
Exit stack: [V10, 0x226, V360]

================================

Block 0x413
[0x413:0x418]
---
Predecessors: [0x341]
Successors: [0x226]
---
0x413 JUMPDEST
0x414 PUSH1 0x5
0x416 SLOAD
0x417 DUP2
0x418 JUMP
---
0x413: JUMPDEST 
0x414: V361 = 0x5
0x416: V362 = S[0x5]
0x418: JUMP 0x226
---
Entry stack: [V10, 0x226]
Stack pops: 1
Stack additions: [S0, V362]
Exit stack: [V10, 0x226, V362]

================================

Block 0x419
[0x419:0x41e]
---
Predecessors: [0x366]
Successors: [0x226]
---
0x419 JUMPDEST
0x41a PUSH1 0x2
0x41c SLOAD
0x41d DUP2
0x41e JUMP
---
0x419: JUMPDEST 
0x41a: V363 = 0x2
0x41c: V364 = S[0x2]
0x41e: JUMP 0x226
---
Entry stack: [V10, 0x226]
Stack pops: 1
Stack additions: [S0, V364]
Exit stack: [V10, 0x226, V364]

================================

Block 0x41f
[0x41f:0x42b]
---
Predecessors: [0x38b]
Successors: [0x42c, 0x5cc]
---
0x41f JUMPDEST
0x420 PUSH1 0x4
0x422 SLOAD
0x423 PUSH1 0x0
0x425 SWAP1
0x426 TIMESTAMP
0x427 LT
0x428 PUSH2 0x5cc
0x42b JUMPI
---
0x41f: JUMPDEST 
0x420: V365 = 0x4
0x422: V366 = S[0x4]
0x423: V367 = 0x0
0x426: V368 = TIMESTAMP
0x427: V369 = LT V368 V366
0x428: V370 = 0x5cc
0x42b: JUMPI 0x5cc V369
---
Entry stack: [V10, 0x211]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x211, 0x0]

================================

Block 0x42c
[0x42c:0x437]
---
Predecessors: [0x41f]
Successors: [0x438, 0x4fe]
---
0x42c PUSH1 0x9
0x42e SLOAD
0x42f PUSH1 0xff
0x431 AND
0x432 ISZERO
0x433 ISZERO
0x434 PUSH2 0x4fe
0x437 JUMPI
---
0x42c: V371 = 0x9
0x42e: V372 = S[0x9]
0x42f: V373 = 0xff
0x431: V374 = AND 0xff V372
0x432: V375 = ISZERO V374
0x433: V376 = ISZERO V375
0x434: V377 = 0x4fe
0x437: JUMPI 0x4fe V376
---
Entry stack: [V10, 0x211, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211, 0x0]

================================

Block 0x438
[0x438:0x45e]
---
Predecessors: [0x42c]
Successors: [0x45f, 0x4fe]
---
0x438 POP
0x439 PUSH1 0x1
0x43b PUSH1 0xa0
0x43d PUSH1 0x2
0x43f EXP
0x440 SUB
0x441 CALLER
0x442 AND
0x443 PUSH1 0x0
0x445 SWAP1
0x446 DUP2
0x447 MSTORE
0x448 PUSH1 0x8
0x44a PUSH1 0x20
0x44c MSTORE
0x44d PUSH1 0x40
0x44f DUP2
0x450 SHA3
0x451 DUP1
0x452 SLOAD
0x453 SWAP1
0x454 DUP3
0x455 SWAP1
0x456 SSTORE
0x457 SWAP1
0x458 DUP2
0x459 GT
0x45a ISZERO
0x45b PUSH2 0x4fe
0x45e JUMPI
---
0x439: V378 = 0x1
0x43b: V379 = 0xa0
0x43d: V380 = 0x2
0x43f: V381 = EXP 0x2 0xa0
0x440: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x441: V383 = CALLER
0x442: V384 = AND V383 0xffffffffffffffffffffffffffffffffffffffff
0x443: V385 = 0x0
0x447: M[0x0] = V384
0x448: V386 = 0x8
0x44a: V387 = 0x20
0x44c: M[0x20] = 0x8
0x44d: V388 = 0x40
0x450: V389 = SHA3 0x0 0x40
0x452: V390 = S[V389]
0x456: S[V389] = 0x0
0x459: V391 = GT V390 0x0
0x45a: V392 = ISZERO V391
0x45b: V393 = 0x4fe
0x45e: JUMPI 0x4fe V392
---
Entry stack: [V10, 0x211, 0x0]
Stack pops: 1
Stack additions: [V390]
Exit stack: [V10, 0x211, V390]

================================

Block 0x45f
[0x45f:0x489]
---
Predecessors: [0x438]
Successors: [0x48a, 0x4e2]
---
0x45f PUSH1 0x1
0x461 PUSH1 0xa0
0x463 PUSH1 0x2
0x465 EXP
0x466 SUB
0x467 CALLER
0x468 AND
0x469 DUP2
0x46a ISZERO
0x46b PUSH2 0x8fc
0x46e MUL
0x46f DUP3
0x470 PUSH1 0x40
0x472 MLOAD
0x473 PUSH1 0x0
0x475 PUSH1 0x40
0x477 MLOAD
0x478 DUP1
0x479 DUP4
0x47a SUB
0x47b DUP2
0x47c DUP6
0x47d DUP9
0x47e DUP9
0x47f CALL
0x480 SWAP4
0x481 POP
0x482 POP
0x483 POP
0x484 POP
0x485 ISZERO
0x486 PUSH2 0x4e2
0x489 JUMPI
---
0x45f: V394 = 0x1
0x461: V395 = 0xa0
0x463: V396 = 0x2
0x465: V397 = EXP 0x2 0xa0
0x466: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x467: V399 = CALLER
0x468: V400 = AND V399 0xffffffffffffffffffffffffffffffffffffffff
0x46a: V401 = ISZERO V390
0x46b: V402 = 0x8fc
0x46e: V403 = MUL 0x8fc V401
0x470: V404 = 0x40
0x472: V405 = M[0x40]
0x473: V406 = 0x0
0x475: V407 = 0x40
0x477: V408 = M[0x40]
0x47a: V409 = SUB V405 V408
0x47f: V410 = CALL V403 V400 V390 V408 V409 V408 0x0
0x485: V411 = ISZERO V410
0x486: V412 = 0x4e2
0x489: JUMPI 0x4e2 V411
---
Entry stack: [V10, 0x211, V390]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x211, V390]

================================

Block 0x48a
[0x48a:0x4e1]
---
Predecessors: [0x45f]
Successors: [0x4fe]
---
0x48a PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4ab CALLER
0x4ac DUP3
0x4ad PUSH1 0x0
0x4af PUSH1 0x40
0x4b1 MLOAD
0x4b2 PUSH1 0x1
0x4b4 PUSH1 0xa0
0x4b6 PUSH1 0x2
0x4b8 EXP
0x4b9 SUB
0x4ba SWAP1
0x4bb SWAP4
0x4bc AND
0x4bd DUP4
0x4be MSTORE
0x4bf PUSH1 0x20
0x4c1 DUP4
0x4c2 ADD
0x4c3 SWAP2
0x4c4 SWAP1
0x4c5 SWAP2
0x4c6 MSTORE
0x4c7 ISZERO
0x4c8 ISZERO
0x4c9 PUSH1 0x40
0x4cb DUP1
0x4cc DUP4
0x4cd ADD
0x4ce SWAP2
0x4cf SWAP1
0x4d0 SWAP2
0x4d1 MSTORE
0x4d2 PUSH1 0x60
0x4d4 SWAP1
0x4d5 SWAP2
0x4d6 ADD
0x4d7 SWAP1
0x4d8 MLOAD
0x4d9 DUP1
0x4da SWAP2
0x4db SUB
0x4dc SWAP1
0x4dd LOG1
0x4de PUSH2 0x4fe
0x4e1 JUMP
---
0x48a: V413 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4ab: V414 = CALLER
0x4ad: V415 = 0x0
0x4af: V416 = 0x40
0x4b1: V417 = M[0x40]
0x4b2: V418 = 0x1
0x4b4: V419 = 0xa0
0x4b6: V420 = 0x2
0x4b8: V421 = EXP 0x2 0xa0
0x4b9: V422 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bc: V423 = AND V414 0xffffffffffffffffffffffffffffffffffffffff
0x4be: M[V417] = V423
0x4bf: V424 = 0x20
0x4c2: V425 = ADD V417 0x20
0x4c6: M[V425] = V390
0x4c7: V426 = ISZERO 0x0
0x4c8: V427 = ISZERO 0x1
0x4c9: V428 = 0x40
0x4cd: V429 = ADD V417 0x40
0x4d1: M[V429] = 0x0
0x4d2: V430 = 0x60
0x4d6: V431 = ADD V417 0x60
0x4d8: V432 = M[0x40]
0x4db: V433 = SUB V431 V432
0x4dd: LOG V432 V433 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4de: V434 = 0x4fe
0x4e1: JUMP 0x4fe
---
Entry stack: [V10, 0x211, V390]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x211, V390]

================================

Block 0x4e2
[0x4e2:0x4fd]
---
Predecessors: [0x45f]
Successors: [0x4fe]
---
0x4e2 JUMPDEST
0x4e3 PUSH1 0x1
0x4e5 PUSH1 0xa0
0x4e7 PUSH1 0x2
0x4e9 EXP
0x4ea SUB
0x4eb CALLER
0x4ec AND
0x4ed PUSH1 0x0
0x4ef SWAP1
0x4f0 DUP2
0x4f1 MSTORE
0x4f2 PUSH1 0x8
0x4f4 PUSH1 0x20
0x4f6 MSTORE
0x4f7 PUSH1 0x40
0x4f9 SWAP1
0x4fa SHA3
0x4fb DUP2
0x4fc SWAP1
0x4fd SSTORE
---
0x4e2: JUMPDEST 
0x4e3: V435 = 0x1
0x4e5: V436 = 0xa0
0x4e7: V437 = 0x2
0x4e9: V438 = EXP 0x2 0xa0
0x4ea: V439 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4eb: V440 = CALLER
0x4ec: V441 = AND V440 0xffffffffffffffffffffffffffffffffffffffff
0x4ed: V442 = 0x0
0x4f1: M[0x0] = V441
0x4f2: V443 = 0x8
0x4f4: V444 = 0x20
0x4f6: M[0x20] = 0x8
0x4f7: V445 = 0x40
0x4fa: V446 = SHA3 0x0 0x40
0x4fd: S[V446] = V390
---
Entry stack: [V10, 0x211, V390]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x211, V390]

================================

Block 0x4fe
[0x4fe:0x4fe]
---
Predecessors: [0x42c, 0x438, 0x48a, 0x4e2]
Successors: [0x4ff]
---
0x4fe JUMPDEST
---
0x4fe: JUMPDEST 
---
Entry stack: [V10, 0x211, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211, S0]

================================

Block 0x4ff
[0x4ff:0x4ff]
---
Predecessors: [0x4fe]
Successors: [0x500]
---
0x4ff JUMPDEST
---
0x4ff: JUMPDEST 
---
Entry stack: [V10, 0x211, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211, S0]

================================

Block 0x500
[0x500:0x50c]
---
Predecessors: [0x4ff]
Successors: [0x50d, 0x520]
---
0x500 JUMPDEST
0x501 PUSH1 0x9
0x503 SLOAD
0x504 PUSH1 0xff
0x506 AND
0x507 DUP1
0x508 ISZERO
0x509 PUSH2 0x520
0x50c JUMPI
---
0x500: JUMPDEST 
0x501: V447 = 0x9
0x503: V448 = S[0x9]
0x504: V449 = 0xff
0x506: V450 = AND 0xff V448
0x508: V451 = ISZERO V450
0x509: V452 = 0x520
0x50c: JUMPI 0x520 V451
---
Entry stack: [V10, 0x211, S0]
Stack pops: 0
Stack additions: [V450]
Exit stack: [V10, 0x211, S0, V450]

================================

Block 0x50d
[0x50d:0x51f]
---
Predecessors: [0x500]
Successors: [0x520]
---
0x50d POP
0x50e PUSH1 0x0
0x510 SLOAD
0x511 CALLER
0x512 PUSH1 0x1
0x514 PUSH1 0xa0
0x516 PUSH1 0x2
0x518 EXP
0x519 SUB
0x51a SWAP1
0x51b DUP2
0x51c AND
0x51d SWAP2
0x51e AND
0x51f EQ
---
0x50e: V453 = 0x0
0x510: V454 = S[0x0]
0x511: V455 = CALLER
0x512: V456 = 0x1
0x514: V457 = 0xa0
0x516: V458 = 0x2
0x518: V459 = EXP 0x2 0xa0
0x519: V460 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51c: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x51e: V462 = AND V454 0xffffffffffffffffffffffffffffffffffffffff
0x51f: V463 = EQ V462 V461
---
Entry stack: [V10, 0x211, S1, V450]
Stack pops: 1
Stack additions: [V463]
Exit stack: [V10, 0x211, S1, V463]

================================

Block 0x520
[0x520:0x525]
---
Predecessors: [0x500, 0x50d]
Successors: [0x526, 0x5cc]
---
0x520 JUMPDEST
0x521 ISZERO
0x522 PUSH2 0x5cc
0x525 JUMPI
---
0x520: JUMPDEST 
0x521: V464 = ISZERO S0
0x522: V465 = 0x5cc
0x525: JUMPI 0x5cc V464
---
Entry stack: [V10, 0x211, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x211, S1]

================================

Block 0x526
[0x526:0x558]
---
Predecessors: [0x520]
Successors: [0x559, 0x5c1]
---
0x526 PUSH1 0x0
0x528 SLOAD
0x529 PUSH1 0x3
0x52b SLOAD
0x52c PUSH1 0x1
0x52e PUSH1 0xa0
0x530 PUSH1 0x2
0x532 EXP
0x533 SUB
0x534 SWAP1
0x535 SWAP2
0x536 AND
0x537 SWAP1
0x538 DUP1
0x539 ISZERO
0x53a PUSH2 0x8fc
0x53d MUL
0x53e SWAP1
0x53f PUSH1 0x40
0x541 MLOAD
0x542 PUSH1 0x0
0x544 PUSH1 0x40
0x546 MLOAD
0x547 DUP1
0x548 DUP4
0x549 SUB
0x54a DUP2
0x54b DUP6
0x54c DUP9
0x54d DUP9
0x54e CALL
0x54f SWAP4
0x550 POP
0x551 POP
0x552 POP
0x553 POP
0x554 ISZERO
0x555 PUSH2 0x5c1
0x558 JUMPI
---
0x526: V466 = 0x0
0x528: V467 = S[0x0]
0x529: V468 = 0x3
0x52b: V469 = S[0x3]
0x52c: V470 = 0x1
0x52e: V471 = 0xa0
0x530: V472 = 0x2
0x532: V473 = EXP 0x2 0xa0
0x533: V474 = SUB 0x10000000000000000000000000000000000000000 0x1
0x536: V475 = AND V467 0xffffffffffffffffffffffffffffffffffffffff
0x539: V476 = ISZERO V469
0x53a: V477 = 0x8fc
0x53d: V478 = MUL 0x8fc V476
0x53f: V479 = 0x40
0x541: V480 = M[0x40]
0x542: V481 = 0x0
0x544: V482 = 0x40
0x546: V483 = M[0x40]
0x549: V484 = SUB V480 V483
0x54e: V485 = CALL V478 V475 V469 V483 V484 V483 0x0
0x554: V486 = ISZERO V485
0x555: V487 = 0x5c1
0x558: JUMPI 0x5c1 V486
---
Entry stack: [V10, 0x211, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211, S0]

================================

Block 0x559
[0x559:0x5c0]
---
Predecessors: [0x526]
Successors: [0x5cc]
---
0x559 PUSH1 0x0
0x55b DUP1
0x55c SLOAD
0x55d PUSH1 0x3
0x55f SLOAD
0x560 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x581 SWAP3
0x582 PUSH1 0x1
0x584 PUSH1 0xa0
0x586 PUSH1 0x2
0x588 EXP
0x589 SUB
0x58a SWAP1
0x58b SWAP3
0x58c AND
0x58d SWAP2
0x58e PUSH1 0x40
0x590 MLOAD
0x591 PUSH1 0x1
0x593 PUSH1 0xa0
0x595 PUSH1 0x2
0x597 EXP
0x598 SUB
0x599 SWAP1
0x59a SWAP4
0x59b AND
0x59c DUP4
0x59d MSTORE
0x59e PUSH1 0x20
0x5a0 DUP4
0x5a1 ADD
0x5a2 SWAP2
0x5a3 SWAP1
0x5a4 SWAP2
0x5a5 MSTORE
0x5a6 ISZERO
0x5a7 ISZERO
0x5a8 PUSH1 0x40
0x5aa DUP1
0x5ab DUP4
0x5ac ADD
0x5ad SWAP2
0x5ae SWAP1
0x5af SWAP2
0x5b0 MSTORE
0x5b1 PUSH1 0x60
0x5b3 SWAP1
0x5b4 SWAP2
0x5b5 ADD
0x5b6 SWAP1
0x5b7 MLOAD
0x5b8 DUP1
0x5b9 SWAP2
0x5ba SUB
0x5bb SWAP1
0x5bc LOG1
0x5bd PUSH2 0x5cc
0x5c0 JUMP
---
0x559: V488 = 0x0
0x55c: V489 = S[0x0]
0x55d: V490 = 0x3
0x55f: V491 = S[0x3]
0x560: V492 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x582: V493 = 0x1
0x584: V494 = 0xa0
0x586: V495 = 0x2
0x588: V496 = EXP 0x2 0xa0
0x589: V497 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58c: V498 = AND V489 0xffffffffffffffffffffffffffffffffffffffff
0x58e: V499 = 0x40
0x590: V500 = M[0x40]
0x591: V501 = 0x1
0x593: V502 = 0xa0
0x595: V503 = 0x2
0x597: V504 = EXP 0x2 0xa0
0x598: V505 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59b: V506 = AND V498 0xffffffffffffffffffffffffffffffffffffffff
0x59d: M[V500] = V506
0x59e: V507 = 0x20
0x5a1: V508 = ADD V500 0x20
0x5a5: M[V508] = V491
0x5a6: V509 = ISZERO 0x0
0x5a7: V510 = ISZERO 0x1
0x5a8: V511 = 0x40
0x5ac: V512 = ADD V500 0x40
0x5b0: M[V512] = 0x0
0x5b1: V513 = 0x60
0x5b5: V514 = ADD V500 0x60
0x5b7: V515 = M[0x40]
0x5ba: V516 = SUB V514 V515
0x5bc: LOG V515 V516 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x5bd: V517 = 0x5cc
0x5c0: JUMP 0x5cc
---
Entry stack: [V10, 0x211, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211, S0]

================================

Block 0x5c1
[0x5c1:0x5cb]
---
Predecessors: [0x526]
Successors: [0x5cc]
---
0x5c1 JUMPDEST
0x5c2 PUSH1 0x9
0x5c4 DUP1
0x5c5 SLOAD
0x5c6 PUSH1 0xff
0x5c8 NOT
0x5c9 AND
0x5ca SWAP1
0x5cb SSTORE
---
0x5c1: JUMPDEST 
0x5c2: V518 = 0x9
0x5c5: V519 = S[0x9]
0x5c6: V520 = 0xff
0x5c8: V521 = NOT 0xff
0x5c9: V522 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V519
0x5cb: S[0x9] = V522
---
Entry stack: [V10, 0x211, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211, S0]

================================

Block 0x5cc
[0x5cc:0x5cc]
---
Predecessors: [0x41f, 0x520, 0x559, 0x5c1]
Successors: [0x5cd]
---
0x5cc JUMPDEST
---
0x5cc: JUMPDEST 
---
Entry stack: [V10, 0x211, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211, S0]

================================

Block 0x5cd
[0x5cd:0x5cd]
---
Predecessors: [0x5cc]
Successors: [0x5ce]
---
0x5cd JUMPDEST
---
0x5cd: JUMPDEST 
---
Entry stack: [V10, 0x211, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211, S0]

================================

Block 0x5ce
[0x5ce:0x5ce]
---
Predecessors: [0x5cd]
Successors: [0x5cf]
---
0x5ce JUMPDEST
---
0x5ce: JUMPDEST 
---
Entry stack: [V10, 0x211, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211, S0]

================================

Block 0x5cf
[0x5cf:0x5cf]
---
Predecessors: [0x5ce]
Successors: [0x5d0]
---
0x5cf JUMPDEST
---
0x5cf: JUMPDEST 
---
Entry stack: [V10, 0x211, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x211, S0]

================================

Block 0x5d0
[0x5d0:0x5d2]
---
Predecessors: [0x5cf]
Successors: [0x211]
---
0x5d0 JUMPDEST
0x5d1 POP
0x5d2 JUMP
---
0x5d0: JUMPDEST 
0x5d2: JUMP 0x211
---
Entry stack: [V10, 0x211, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x5d3
[0x5d3:0x5fe]
---
Predecessors: []
Successors: []
---
0x5d3 STOP
0x5d4 LOG1
0x5d5 PUSH6 0x627a7a723058
0x5dc SHA3
0x5dd MISSING 0xa6
0x5de SLOAD
0x5df BYTE
0x5e0 CALLDATACOPY
0x5e1 PUSH27 0x92284b1b6ca68cc85370e27ca67c04d6c938b61fecc24b3700b831
0x5fd STOP
0x5fe MISSING 0x29
---
0x5d3: STOP 
0x5d4: LOG S0 S1 S2
0x5d5: V523 = 0x627a7a723058
0x5dc: V524 = SHA3 0x627a7a723058 S3
0x5dd: MISSING 0xa6
0x5de: V525 = S[S0]
0x5df: V526 = BYTE V525 S1
0x5e0: CALLDATACOPY V526 S2 S3
0x5e1: V527 = 0x92284b1b6ca68cc85370e27ca67c04d6c938b61fecc24b3700b831
0x5fd: STOP 
0x5fe: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V524, 0x92284b1b6ca68cc85370e27ca67c04d6c938b61fecc24b3700b831]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x1fe
Exit block: 0x211
Body: 0x1fe, 0x205, 0x209, 0x211, 0x395, 0x39f, 0x3aa, 0x3b7, 0x3c7, 0x3c8, 0x3c9

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x213
Exit block: 0x226
Body: 0x213, 0x21a, 0x21e, 0x226, 0x3cb

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x238
Exit block: 0x24b
Body: 0x238, 0x23f, 0x243, 0x24b, 0x3d1

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x267
Exit block: 0x24b
Body: 0x24b, 0x267, 0x26e, 0x272, 0x3e0

Function 4:
Public function signature: 0x70a08231
Entry block: 0x296
Exit block: 0x226
Body: 0x226, 0x296, 0x29d, 0x2a1, 0x3ef

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x2c7
Exit block: 0x226
Body: 0x226, 0x2c7, 0x2ce, 0x2d2, 0x401

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x2ec
Exit block: 0x226
Body: 0x226, 0x2ec, 0x2f3, 0x2f7, 0x407

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x311
Exit block: 0x226
Body: 0x226, 0x311, 0x318, 0x31c, 0x40d

Function 8:
Public function signature: 0xc7a32726
Entry block: 0x336
Exit block: 0x226
Body: 0x226, 0x336, 0x33d, 0x341, 0x413

Function 9:
Public function signature: 0xd4c76e8b
Entry block: 0x35b
Exit block: 0x226
Body: 0x226, 0x35b, 0x362, 0x366, 0x419

Function 10:
Public function signature: 0xfd6b7ef8
Entry block: 0x380
Exit block: 0x211
Body: 0x211, 0x380, 0x387, 0x38b, 0x41f, 0x42c, 0x438, 0x45f, 0x48a, 0x4e2, 0x4fe, 0x4ff, 0x500, 0x50d, 0x520, 0x526, 0x559, 0x5c1, 0x5cc, 0x5cd, 0x5ce, 0x5cf, 0x5d0

Function 11:
Public fallback function
Entry block: 0xac
Exit block: 0x1fb
Body: 0xac, 0xad, 0xc1, 0xc5, 0xcf, 0xd3, 0xdf, 0xe3, 0xf1, 0xf5, 0x18e, 0x192, 0x19f, 0x1a3, 0x1fb

