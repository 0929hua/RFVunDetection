Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xf
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xf
0xa: JUMPI 0xf V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0xe]
---
Predecessors: [0x0]
Successors: [0xf]
---
0xb PUSH2 0xf
0xe JUMP
---
0xb: V5 = 0xf
0xe: JUMP 0xf
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf
[0xf:0x12]
---
Predecessors: [0x0, 0xb]
Successors: [0x13]
---
0xf JUMPDEST
0x10 PUSH2 0x1cb
---
0xf: JUMPDEST 
0x10: V6 = 0x1cb
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1cb]
Exit stack: [0x1cb]

================================

Block 0x13
[0x13:0x22]
---
Predecessors: [0xf]
Successors: [0x23, 0x2f]
---
0x13 JUMPDEST
0x14 PUSH1 0x0
0x16 PUSH1 0x2
0x18 PUSH1 0x0
0x1a POP
0x1b SLOAD
0x1c GT
0x1d DUP1
0x1e ISZERO
0x1f PUSH2 0x2f
0x22 JUMPI
---
0x13: JUMPDEST 
0x14: V7 = 0x0
0x16: V8 = 0x2
0x18: V9 = 0x0
0x1b: V10 = S[0x2]
0x1c: V11 = GT V10 0x0
0x1e: V12 = ISZERO V11
0x1f: V13 = 0x2f
0x22: JUMPI 0x2f V12
---
Entry stack: [0x1cb]
Stack pops: 0
Stack additions: [V11]
Exit stack: [0x1cb, V11]

================================

Block 0x23
[0x23:0x2e]
---
Predecessors: [0x13]
Successors: [0x2f]
---
0x23 POP
0x24 PUSH1 0x78
0x26 PUSH1 0x2
0x28 PUSH1 0x0
0x2a POP
0x2b SLOAD
0x2c TIMESTAMP
0x2d SUB
0x2e GT
---
0x24: V14 = 0x78
0x26: V15 = 0x2
0x28: V16 = 0x0
0x2b: V17 = S[0x2]
0x2c: V18 = TIMESTAMP
0x2d: V19 = SUB V18 V17
0x2e: V20 = GT V19 0x78
---
Entry stack: [0x1cb, V11]
Stack pops: 1
Stack additions: [V20]
Exit stack: [0x1cb, V20]

================================

Block 0x2f
[0x2f:0x34]
---
Predecessors: [0x13, 0x23]
Successors: [0x35, 0xae]
---
0x2f JUMPDEST
0x30 ISZERO
0x31 PUSH2 0xae
0x34 JUMPI
---
0x2f: JUMPDEST 
0x30: V21 = ISZERO S0
0x31: V22 = 0xae
0x34: JUMPI 0xae V21
---
Entry stack: [0x1cb, S0]
Stack pops: 1
Stack additions: []
Exit stack: [0x1cb]

================================

Block 0x35
[0x35:0xad]
---
Predecessors: [0x2f]
Successors: [0xae]
---
0x35 PUSH1 0x1
0x37 PUSH1 0x0
0x39 SWAP1
0x3a SLOAD
0x3b SWAP1
0x3c PUSH2 0x100
0x3f EXP
0x40 SWAP1
0x41 DIV
0x42 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57 AND
0x58 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d AND
0x6e PUSH1 0x0
0x70 CALLVALUE
0x71 ADDRESS
0x72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87 AND
0x88 BALANCE
0x89 SUB
0x8a PUSH1 0x40
0x8c MLOAD
0x8d DUP1
0x8e SWAP1
0x8f POP
0x90 PUSH1 0x0
0x92 PUSH1 0x40
0x94 MLOAD
0x95 DUP1
0x96 DUP4
0x97 SUB
0x98 DUP2
0x99 DUP6
0x9a DUP9
0x9b DUP9
0x9c CALL
0x9d SWAP4
0x9e POP
0x9f POP
0xa0 POP
0xa1 POP
0xa2 POP
0xa3 PUSH1 0x0
0xa5 PUSH1 0x2
0xa7 PUSH1 0x0
0xa9 POP
0xaa DUP2
0xab SWAP1
0xac SSTORE
0xad POP
---
0x35: V23 = 0x1
0x37: V24 = 0x0
0x3a: V25 = S[0x1]
0x3c: V26 = 0x100
0x3f: V27 = EXP 0x100 0x0
0x41: V28 = DIV V25 0x1
0x42: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x57: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x58: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x6e: V33 = 0x0
0x70: V34 = CALLVALUE
0x71: V35 = ADDRESS
0x72: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0x87: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x88: V38 = BALANCE V37
0x89: V39 = SUB V38 V34
0x8a: V40 = 0x40
0x8c: V41 = M[0x40]
0x90: V42 = 0x0
0x92: V43 = 0x40
0x94: V44 = M[0x40]
0x97: V45 = SUB V41 V44
0x9c: V46 = CALL 0x0 V32 V39 V44 V45 V44 0x0
0xa3: V47 = 0x0
0xa5: V48 = 0x2
0xa7: V49 = 0x0
0xac: S[0x2] = 0x0
---
Entry stack: [0x1cb]
Stack pops: 0
Stack additions: []
Exit stack: [0x1cb]

================================

Block 0xae
[0xae:0xbf]
---
Predecessors: [0x2f, 0x35]
Successors: [0xc0, 0x194]
---
0xae JUMPDEST
0xaf PUSH8 0xde0b6b3a7640000
0xb8 CALLVALUE
0xb9 LT
0xba ISZERO
0xbb ISZERO
0xbc PUSH2 0x194
0xbf JUMPI
---
0xae: JUMPDEST 
0xaf: V50 = 0xde0b6b3a7640000
0xb8: V51 = CALLVALUE
0xb9: V52 = LT V51 0xde0b6b3a7640000
0xba: V53 = ISZERO V52
0xbb: V54 = ISZERO V53
0xbc: V55 = 0x194
0xbf: JUMPI 0x194 V54
---
Entry stack: [0x1cb]
Stack pops: 0
Stack additions: []
Exit stack: [0x1cb]

================================

Block 0xc0
[0xc0:0xcd]
---
Predecessors: [0xae]
Successors: [0xce, 0xfd]
---
0xc0 PUSH1 0x0
0xc2 PUSH1 0x2
0xc4 PUSH1 0x0
0xc6 POP
0xc7 SLOAD
0xc8 EQ
0xc9 ISZERO
0xca PUSH2 0xfd
0xcd JUMPI
---
0xc0: V56 = 0x0
0xc2: V57 = 0x2
0xc4: V58 = 0x0
0xc7: V59 = S[0x2]
0xc8: V60 = EQ V59 0x0
0xc9: V61 = ISZERO V60
0xca: V62 = 0xfd
0xcd: JUMPI 0xfd V61
---
Entry stack: [0x1cb]
Stack pops: 0
Stack additions: []
Exit stack: [0x1cb]

================================

Block 0xce
[0xce:0xfc]
---
Predecessors: [0xc0]
Successors: [0x15a]
---
0xce CALLER
0xcf PUSH1 0x0
0xd1 PUSH1 0x0
0xd3 PUSH2 0x100
0xd6 EXP
0xd7 DUP2
0xd8 SLOAD
0xd9 DUP2
0xda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef MUL
0xf0 NOT
0xf1 AND
0xf2 SWAP1
0xf3 DUP4
0xf4 MUL
0xf5 OR
0xf6 SWAP1
0xf7 SSTORE
0xf8 POP
0xf9 PUSH2 0x15a
0xfc JUMP
---
0xce: V63 = CALLER
0xcf: V64 = 0x0
0xd1: V65 = 0x0
0xd3: V66 = 0x100
0xd6: V67 = EXP 0x100 0x0
0xd8: V68 = S[0x0]
0xda: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0xef: V70 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xf0: V71 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf1: V72 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V68
0xf4: V73 = MUL V63 0x1
0xf5: V74 = OR V73 V72
0xf7: S[0x0] = V74
0xf9: V75 = 0x15a
0xfc: JUMP 0x15a
---
Entry stack: [0x1cb]
Stack pops: 0
Stack additions: []
Exit stack: [0x1cb]

================================

Block 0xfd
[0xfd:0x159]
---
Predecessors: [0xc0]
Successors: [0x15a]
---
0xfd JUMPDEST
0xfe PUSH1 0x0
0x100 PUSH1 0x0
0x102 SWAP1
0x103 SLOAD
0x104 SWAP1
0x105 PUSH2 0x100
0x108 EXP
0x109 SWAP1
0x10a DIV
0x10b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x120 AND
0x121 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x136 AND
0x137 PUSH1 0x0
0x139 PUSH7 0x2386f26fc10000
0x141 PUSH1 0x40
0x143 MLOAD
0x144 DUP1
0x145 SWAP1
0x146 POP
0x147 PUSH1 0x0
0x149 PUSH1 0x40
0x14b MLOAD
0x14c DUP1
0x14d DUP4
0x14e SUB
0x14f DUP2
0x150 DUP6
0x151 DUP9
0x152 DUP9
0x153 CALL
0x154 SWAP4
0x155 POP
0x156 POP
0x157 POP
0x158 POP
0x159 POP
---
0xfd: JUMPDEST 
0xfe: V76 = 0x0
0x100: V77 = 0x0
0x103: V78 = S[0x0]
0x105: V79 = 0x100
0x108: V80 = EXP 0x100 0x0
0x10a: V81 = DIV V78 0x1
0x10b: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x120: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x121: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x136: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x137: V86 = 0x0
0x139: V87 = 0x2386f26fc10000
0x141: V88 = 0x40
0x143: V89 = M[0x40]
0x147: V90 = 0x0
0x149: V91 = 0x40
0x14b: V92 = M[0x40]
0x14e: V93 = SUB V89 V92
0x153: V94 = CALL 0x0 V85 0x2386f26fc10000 V92 V93 V92 0x0
---
Entry stack: [0x1cb]
Stack pops: 0
Stack additions: []
Exit stack: [0x1cb]

================================

Block 0x15a
[0x15a:0x193]
---
Predecessors: [0xce, 0xfd]
Successors: [0x1c8]
---
0x15a JUMPDEST
0x15b CALLER
0x15c PUSH1 0x1
0x15e PUSH1 0x0
0x160 PUSH2 0x100
0x163 EXP
0x164 DUP2
0x165 SLOAD
0x166 DUP2
0x167 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17c MUL
0x17d NOT
0x17e AND
0x17f SWAP1
0x180 DUP4
0x181 MUL
0x182 OR
0x183 SWAP1
0x184 SSTORE
0x185 POP
0x186 TIMESTAMP
0x187 PUSH1 0x2
0x189 PUSH1 0x0
0x18b POP
0x18c DUP2
0x18d SWAP1
0x18e SSTORE
0x18f POP
0x190 PUSH2 0x1c8
0x193 JUMP
---
0x15a: JUMPDEST 
0x15b: V95 = CALLER
0x15c: V96 = 0x1
0x15e: V97 = 0x0
0x160: V98 = 0x100
0x163: V99 = EXP 0x100 0x0
0x165: V100 = S[0x1]
0x167: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x17c: V102 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x17d: V103 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x17e: V104 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V100
0x181: V105 = MUL V95 0x1
0x182: V106 = OR V105 V104
0x184: S[0x1] = V106
0x186: V107 = TIMESTAMP
0x187: V108 = 0x2
0x189: V109 = 0x0
0x18e: S[0x2] = V107
0x190: V110 = 0x1c8
0x193: JUMP 0x1c8
---
Entry stack: [0x1cb]
Stack pops: 0
Stack additions: []
Exit stack: [0x1cb]

================================

Block 0x194
[0x194:0x1c7]
---
Predecessors: [0xae]
Successors: [0x1c8]
---
0x194 JUMPDEST
0x195 CALLER
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac PUSH1 0x0
0x1ae CALLVALUE
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 DUP1
0x1b3 SWAP1
0x1b4 POP
0x1b5 PUSH1 0x0
0x1b7 PUSH1 0x40
0x1b9 MLOAD
0x1ba DUP1
0x1bb DUP4
0x1bc SUB
0x1bd DUP2
0x1be DUP6
0x1bf DUP9
0x1c0 DUP9
0x1c1 CALL
0x1c2 SWAP4
0x1c3 POP
0x1c4 POP
0x1c5 POP
0x1c6 POP
0x1c7 POP
---
0x194: JUMPDEST 
0x195: V111 = CALLER
0x196: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1ac: V114 = 0x0
0x1ae: V115 = CALLVALUE
0x1af: V116 = 0x40
0x1b1: V117 = M[0x40]
0x1b5: V118 = 0x0
0x1b7: V119 = 0x40
0x1b9: V120 = M[0x40]
0x1bc: V121 = SUB V117 V120
0x1c1: V122 = CALL 0x0 V113 V115 V120 V121 V120 0x0
---
Entry stack: [0x1cb]
Stack pops: 0
Stack additions: []
Exit stack: [0x1cb]

================================

Block 0x1c8
[0x1c8:0x1c8]
---
Predecessors: [0x15a, 0x194]
Successors: [0x1c9]
---
0x1c8 JUMPDEST
---
0x1c8: JUMPDEST 
---
Entry stack: [0x1cb]
Stack pops: 0
Stack additions: []
Exit stack: [0x1cb]

================================

Block 0x1c9
[0x1c9:0x1ca]
---
Predecessors: [0x1c8]
Successors: [0x1cb]
---
0x1c9 JUMPDEST
0x1ca JUMP
---
0x1c9: JUMPDEST 
0x1ca: JUMP 0x1cb
---
Entry stack: [0x1cb]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1cb
[0x1cb:0x1cc]
---
Predecessors: [0x1c9]
Successors: []
---
0x1cb JUMPDEST
0x1cc STOP
---
0x1cb: JUMPDEST 
0x1cc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================


