Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8e
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8e
0xc: JUMPI 0x8e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x90]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x4102bf5c
0x3c EQ
0x3d PUSH2 0x90
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x4102bf5c
0x3c: V13 = EQ 0x4102bf5c V11
0x3d: V14 = 0x90
0x40: JUMPI 0x90 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xfc]
---
0x41 DUP1
0x42 PUSH4 0x4981b3ca
0x47 EQ
0x48 PUSH2 0xfc
0x4b JUMPI
---
0x42: V15 = 0x4981b3ca
0x47: V16 = EQ 0x4981b3ca V11
0x48: V17 = 0xfc
0x4b: JUMPI 0xfc V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x171]
---
0x4c DUP1
0x4d PUSH4 0x708c3e44
0x52 EQ
0x53 PUSH2 0x171
0x56 JUMPI
---
0x4d: V18 = 0x708c3e44
0x52: V19 = EQ 0x708c3e44 V11
0x53: V20 = 0x171
0x56: JUMPI 0x171 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1c2]
---
0x57 DUP1
0x58 PUSH4 0x8da5cb5b
0x5d EQ
0x5e PUSH2 0x1c2
0x61 JUMPI
---
0x58: V21 = 0x8da5cb5b
0x5d: V22 = EQ 0x8da5cb5b V11
0x5e: V23 = 0x1c2
0x61: JUMPI 0x1c2 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x217]
---
0x62 DUP1
0x63 PUSH4 0x98024a8b
0x68 EQ
0x69 PUSH2 0x217
0x6c JUMPI
---
0x63: V24 = 0x98024a8b
0x68: V25 = EQ 0x98024a8b V11
0x69: V26 = 0x217
0x6c: JUMPI 0x217 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x260]
---
0x6d DUP1
0x6e PUSH4 0x9cd01605
0x73 EQ
0x74 PUSH2 0x260
0x77 JUMPI
---
0x6e: V27 = 0x9cd01605
0x73: V28 = EQ 0x9cd01605 V11
0x74: V29 = 0x260
0x77: JUMPI 0x260 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x2b5]
---
0x78 DUP1
0x79 PUSH4 0xbdd5be2f
0x7e EQ
0x7f PUSH2 0x2b5
0x82 JUMPI
---
0x79: V30 = 0xbdd5be2f
0x7e: V31 = EQ 0xbdd5be2f V11
0x7f: V32 = 0x2b5
0x82: JUMPI 0x2b5 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x31f]
---
0x83 DUP1
0x84 PUSH4 0xf2fde38b
0x89 EQ
0x8a PUSH2 0x31f
0x8d JUMPI
---
0x84: V33 = 0xf2fde38b
0x89: V34 = EQ 0xf2fde38b V11
0x8a: V35 = 0x31f
0x8d: JUMPI 0x31f V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x8f]
---
Predecessors: [0x0, 0x83]
Successors: []
---
0x8e JUMPDEST
0x8f STOP
---
0x8e: JUMPDEST 
0x8f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x90
[0x90:0x96]
---
Predecessors: [0xd]
Successors: [0x97, 0x9b]
---
0x90 JUMPDEST
0x91 CALLVALUE
0x92 ISZERO
0x93 PUSH2 0x9b
0x96 JUMPI
---
0x90: JUMPDEST 
0x91: V36 = CALLVALUE
0x92: V37 = ISZERO V36
0x93: V38 = 0x9b
0x96: JUMPI 0x9b V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x97
[0x97:0x9a]
---
Predecessors: [0x90]
Successors: []
---
0x97 PUSH1 0x0
0x99 DUP1
0x9a REVERT
---
0x97: V39 = 0x0
0x9a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9b
[0x9b:0xe5]
---
Predecessors: [0x90]
Successors: [0x358]
---
0x9b JUMPDEST
0x9c PUSH2 0xe6
0x9f PUSH1 0x4
0xa1 DUP1
0xa2 DUP1
0xa3 PUSH2 0x100
0xa6 ADD
0xa7 SWAP1
0xa8 SWAP2
0xa9 SWAP1
0xaa DUP1
0xab PUSH1 0xc0
0xad ADD
0xae SWAP1
0xaf SWAP2
0xb0 SWAP1
0xb1 DUP1
0xb2 CALLDATALOAD
0xb3 SWAP1
0xb4 PUSH1 0x20
0xb6 ADD
0xb7 SWAP1
0xb8 SWAP2
0xb9 SWAP1
0xba DUP1
0xbb CALLDATALOAD
0xbc PUSH1 0xff
0xbe AND
0xbf SWAP1
0xc0 PUSH1 0x20
0xc2 ADD
0xc3 SWAP1
0xc4 SWAP2
0xc5 SWAP1
0xc6 DUP1
0xc7 CALLDATALOAD
0xc8 PUSH1 0x0
0xca NOT
0xcb AND
0xcc SWAP1
0xcd PUSH1 0x20
0xcf ADD
0xd0 SWAP1
0xd1 SWAP2
0xd2 SWAP1
0xd3 DUP1
0xd4 CALLDATALOAD
0xd5 PUSH1 0x0
0xd7 NOT
0xd8 AND
0xd9 SWAP1
0xda PUSH1 0x20
0xdc ADD
0xdd SWAP1
0xde SWAP2
0xdf SWAP1
0xe0 POP
0xe1 POP
0xe2 PUSH2 0x358
0xe5 JUMP
---
0x9b: JUMPDEST 
0x9c: V40 = 0xe6
0x9f: V41 = 0x4
0xa3: V42 = 0x100
0xa6: V43 = ADD 0x100 0x4
0xab: V44 = 0xc0
0xad: V45 = ADD 0xc0 0x104
0xb2: V46 = CALLDATALOAD 0x1c4
0xb4: V47 = 0x20
0xb6: V48 = ADD 0x20 0x1c4
0xbb: V49 = CALLDATALOAD 0x1e4
0xbc: V50 = 0xff
0xbe: V51 = AND 0xff V49
0xc0: V52 = 0x20
0xc2: V53 = ADD 0x20 0x1e4
0xc7: V54 = CALLDATALOAD 0x204
0xc8: V55 = 0x0
0xca: V56 = NOT 0x0
0xcb: V57 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V54
0xcd: V58 = 0x20
0xcf: V59 = ADD 0x20 0x204
0xd4: V60 = CALLDATALOAD 0x224
0xd5: V61 = 0x0
0xd7: V62 = NOT 0x0
0xd8: V63 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V60
0xda: V64 = 0x20
0xdc: V65 = ADD 0x20 0x224
0xe2: V66 = 0x358
0xe5: JUMP 0x358
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe6, 0x4, 0x104, V46, V51, V57, V63]
Exit stack: [V11, 0xe6, 0x4, 0x104, V46, V51, V57, V63]

================================

Block 0xe6
[0xe6:0xfb]
---
Predecessors: [0x5a7]
Successors: []
---
0xe6 JUMPDEST
0xe7 PUSH1 0x40
0xe9 MLOAD
0xea DUP1
0xeb DUP3
0xec DUP2
0xed MSTORE
0xee PUSH1 0x20
0xf0 ADD
0xf1 SWAP2
0xf2 POP
0xf3 POP
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP1
0xf8 SWAP2
0xf9 SUB
0xfa SWAP1
0xfb RETURN
---
0xe6: JUMPDEST 
0xe7: V67 = 0x40
0xe9: V68 = M[0x40]
0xed: M[V68] = S0
0xee: V69 = 0x20
0xf0: V70 = ADD 0x20 V68
0xf4: V71 = 0x40
0xf6: V72 = M[0x40]
0xf9: V73 = SUB V70 V72
0xfb: RETURN V72 V73
---
Entry stack: [S11, S10, S9, V11, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S11, S10, S9, V11, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xfc
[0xfc:0x102]
---
Predecessors: [0x41]
Successors: [0x103, 0x107]
---
0xfc JUMPDEST
0xfd CALLVALUE
0xfe ISZERO
0xff PUSH2 0x107
0x102 JUMPI
---
0xfc: JUMPDEST 
0xfd: V74 = CALLVALUE
0xfe: V75 = ISZERO V74
0xff: V76 = 0x107
0x102: JUMPI 0x107 V75
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x103
[0x103:0x106]
---
Predecessors: [0xfc]
Successors: []
---
0x103 PUSH1 0x0
0x105 DUP1
0x106 REVERT
---
0x103: V77 = 0x0
0x106: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x107
[0x107:0x15a]
---
Predecessors: [0xfc]
Successors: [0x5b3]
---
0x107 JUMPDEST
0x108 PUSH2 0x15b
0x10b PUSH1 0x4
0x10d DUP1
0x10e DUP1
0x10f PUSH2 0x100
0x112 ADD
0x113 SWAP1
0x114 SWAP2
0x115 SWAP1
0x116 DUP1
0x117 PUSH1 0xc0
0x119 ADD
0x11a SWAP1
0x11b SWAP2
0x11c SWAP1
0x11d DUP1
0x11e CALLDATALOAD
0x11f SWAP1
0x120 PUSH1 0x20
0x122 ADD
0x123 SWAP1
0x124 SWAP2
0x125 SWAP1
0x126 DUP1
0x127 CALLDATALOAD
0x128 SWAP1
0x129 PUSH1 0x20
0x12b ADD
0x12c SWAP1
0x12d SWAP2
0x12e SWAP1
0x12f DUP1
0x130 CALLDATALOAD
0x131 PUSH1 0xff
0x133 AND
0x134 SWAP1
0x135 PUSH1 0x20
0x137 ADD
0x138 SWAP1
0x139 SWAP2
0x13a SWAP1
0x13b DUP1
0x13c CALLDATALOAD
0x13d PUSH1 0x0
0x13f NOT
0x140 AND
0x141 SWAP1
0x142 PUSH1 0x20
0x144 ADD
0x145 SWAP1
0x146 SWAP2
0x147 SWAP1
0x148 DUP1
0x149 CALLDATALOAD
0x14a PUSH1 0x0
0x14c NOT
0x14d AND
0x14e SWAP1
0x14f PUSH1 0x20
0x151 ADD
0x152 SWAP1
0x153 SWAP2
0x154 SWAP1
0x155 POP
0x156 POP
0x157 PUSH2 0x5b3
0x15a JUMP
---
0x107: JUMPDEST 
0x108: V78 = 0x15b
0x10b: V79 = 0x4
0x10f: V80 = 0x100
0x112: V81 = ADD 0x100 0x4
0x117: V82 = 0xc0
0x119: V83 = ADD 0xc0 0x104
0x11e: V84 = CALLDATALOAD 0x1c4
0x120: V85 = 0x20
0x122: V86 = ADD 0x20 0x1c4
0x127: V87 = CALLDATALOAD 0x1e4
0x129: V88 = 0x20
0x12b: V89 = ADD 0x20 0x1e4
0x130: V90 = CALLDATALOAD 0x204
0x131: V91 = 0xff
0x133: V92 = AND 0xff V90
0x135: V93 = 0x20
0x137: V94 = ADD 0x20 0x204
0x13c: V95 = CALLDATALOAD 0x224
0x13d: V96 = 0x0
0x13f: V97 = NOT 0x0
0x140: V98 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V95
0x142: V99 = 0x20
0x144: V100 = ADD 0x20 0x224
0x149: V101 = CALLDATALOAD 0x244
0x14a: V102 = 0x0
0x14c: V103 = NOT 0x0
0x14d: V104 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V101
0x14f: V105 = 0x20
0x151: V106 = ADD 0x20 0x244
0x157: V107 = 0x5b3
0x15a: JUMP 0x5b3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x15b, 0x4, 0x104, V84, V87, V92, V98, V104]
Exit stack: [V11, 0x15b, 0x4, 0x104, V84, V87, V92, V98, V104]

================================

Block 0x15b
[0x15b:0x170]
---
Predecessors: []
Successors: []
---
0x15b JUMPDEST
0x15c PUSH1 0x40
0x15e MLOAD
0x15f DUP1
0x160 DUP3
0x161 DUP2
0x162 MSTORE
0x163 PUSH1 0x20
0x165 ADD
0x166 SWAP2
0x167 POP
0x168 POP
0x169 PUSH1 0x40
0x16b MLOAD
0x16c DUP1
0x16d SWAP2
0x16e SUB
0x16f SWAP1
0x170 RETURN
---
0x15b: JUMPDEST 
0x15c: V108 = 0x40
0x15e: V109 = M[0x40]
0x162: M[V109] = S0
0x163: V110 = 0x20
0x165: V111 = ADD 0x20 V109
0x169: V112 = 0x40
0x16b: V113 = M[0x40]
0x16e: V114 = SUB V111 V113
0x170: RETURN V113 V114
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x171
[0x171:0x177]
---
Predecessors: [0x4c]
Successors: [0x178, 0x17c]
---
0x171 JUMPDEST
0x172 CALLVALUE
0x173 ISZERO
0x174 PUSH2 0x17c
0x177 JUMPI
---
0x171: JUMPDEST 
0x172: V115 = CALLVALUE
0x173: V116 = ISZERO V115
0x174: V117 = 0x17c
0x177: JUMPI 0x17c V116
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x178
[0x178:0x17b]
---
Predecessors: [0x171]
Successors: []
---
0x178 PUSH1 0x0
0x17a DUP1
0x17b REVERT
---
0x178: V118 = 0x0
0x17b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x17c
[0x17c:0x1a7]
---
Predecessors: [0x171]
Successors: [0x94c]
---
0x17c JUMPDEST
0x17d PUSH2 0x1a8
0x180 PUSH1 0x4
0x182 DUP1
0x183 DUP1
0x184 CALLDATALOAD
0x185 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19a AND
0x19b SWAP1
0x19c PUSH1 0x20
0x19e ADD
0x19f SWAP1
0x1a0 SWAP2
0x1a1 SWAP1
0x1a2 POP
0x1a3 POP
0x1a4 PUSH2 0x94c
0x1a7 JUMP
---
0x17c: JUMPDEST 
0x17d: V119 = 0x1a8
0x180: V120 = 0x4
0x184: V121 = CALLDATALOAD 0x4
0x185: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x19a: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x19c: V124 = 0x20
0x19e: V125 = ADD 0x20 0x4
0x1a4: V126 = 0x94c
0x1a7: JUMP 0x94c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1a8, V123]
Exit stack: [V11, 0x1a8, V123]

================================

Block 0x1a8
[0x1a8:0x1c1]
---
Predecessors: [0x94c]
Successors: []
---
0x1a8 JUMPDEST
0x1a9 PUSH1 0x40
0x1ab MLOAD
0x1ac DUP1
0x1ad DUP3
0x1ae ISZERO
0x1af ISZERO
0x1b0 ISZERO
0x1b1 ISZERO
0x1b2 DUP2
0x1b3 MSTORE
0x1b4 PUSH1 0x20
0x1b6 ADD
0x1b7 SWAP2
0x1b8 POP
0x1b9 POP
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd DUP1
0x1be SWAP2
0x1bf SUB
0x1c0 SWAP1
0x1c1 RETURN
---
0x1a8: JUMPDEST 
0x1a9: V127 = 0x40
0x1ab: V128 = M[0x40]
0x1ae: V129 = ISZERO V667
0x1af: V130 = ISZERO V129
0x1b0: V131 = ISZERO V130
0x1b1: V132 = ISZERO V131
0x1b3: M[V128] = V132
0x1b4: V133 = 0x20
0x1b6: V134 = ADD 0x20 V128
0x1ba: V135 = 0x40
0x1bc: V136 = M[0x40]
0x1bf: V137 = SUB V134 V136
0x1c1: RETURN V136 V137
---
Entry stack: [V11, 0x1a8, V667]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1a8]

================================

Block 0x1c2
[0x1c2:0x1c8]
---
Predecessors: [0x57]
Successors: [0x1c9, 0x1cd]
---
0x1c2 JUMPDEST
0x1c3 CALLVALUE
0x1c4 ISZERO
0x1c5 PUSH2 0x1cd
0x1c8 JUMPI
---
0x1c2: JUMPDEST 
0x1c3: V138 = CALLVALUE
0x1c4: V139 = ISZERO V138
0x1c5: V140 = 0x1cd
0x1c8: JUMPI 0x1cd V139
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c9
[0x1c9:0x1cc]
---
Predecessors: [0x1c2]
Successors: []
---
0x1c9 PUSH1 0x0
0x1cb DUP1
0x1cc REVERT
---
0x1c9: V141 = 0x0
0x1cc: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cd
[0x1cd:0x1d4]
---
Predecessors: [0x1c2]
Successors: [0x96c]
---
0x1cd JUMPDEST
0x1ce PUSH2 0x1d5
0x1d1 PUSH2 0x96c
0x1d4 JUMP
---
0x1cd: JUMPDEST 
0x1ce: V142 = 0x1d5
0x1d1: V143 = 0x96c
0x1d4: JUMP 0x96c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1d5]
Exit stack: [V11, 0x1d5]

================================

Block 0x1d5
[0x1d5:0x216]
---
Predecessors: [0x96c]
Successors: []
---
0x1d5 JUMPDEST
0x1d6 PUSH1 0x40
0x1d8 MLOAD
0x1d9 DUP1
0x1da DUP3
0x1db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f0 AND
0x1f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x206 AND
0x207 DUP2
0x208 MSTORE
0x209 PUSH1 0x20
0x20b ADD
0x20c SWAP2
0x20d POP
0x20e POP
0x20f PUSH1 0x40
0x211 MLOAD
0x212 DUP1
0x213 SWAP2
0x214 SUB
0x215 SWAP1
0x216 RETURN
---
0x1d5: JUMPDEST 
0x1d6: V144 = 0x40
0x1d8: V145 = M[0x40]
0x1db: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V674
0x1f1: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x206: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x208: M[V145] = V149
0x209: V150 = 0x20
0x20b: V151 = ADD 0x20 V145
0x20f: V152 = 0x40
0x211: V153 = M[0x40]
0x214: V154 = SUB V151 V153
0x216: RETURN V153 V154
---
Entry stack: [V11, 0x1d5, V674]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1d5]

================================

Block 0x217
[0x217:0x21d]
---
Predecessors: [0x62]
Successors: [0x21e, 0x222]
---
0x217 JUMPDEST
0x218 CALLVALUE
0x219 ISZERO
0x21a PUSH2 0x222
0x21d JUMPI
---
0x217: JUMPDEST 
0x218: V155 = CALLVALUE
0x219: V156 = ISZERO V155
0x21a: V157 = 0x222
0x21d: JUMPI 0x222 V156
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x21e
[0x21e:0x221]
---
Predecessors: [0x217]
Successors: []
---
0x21e PUSH1 0x0
0x220 DUP1
0x221 REVERT
---
0x21e: V158 = 0x0
0x221: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x222
[0x222:0x249]
---
Predecessors: [0x217]
Successors: [0x991]
---
0x222 JUMPDEST
0x223 PUSH2 0x24a
0x226 PUSH1 0x4
0x228 DUP1
0x229 DUP1
0x22a CALLDATALOAD
0x22b SWAP1
0x22c PUSH1 0x20
0x22e ADD
0x22f SWAP1
0x230 SWAP2
0x231 SWAP1
0x232 DUP1
0x233 CALLDATALOAD
0x234 SWAP1
0x235 PUSH1 0x20
0x237 ADD
0x238 SWAP1
0x239 SWAP2
0x23a SWAP1
0x23b DUP1
0x23c CALLDATALOAD
0x23d SWAP1
0x23e PUSH1 0x20
0x240 ADD
0x241 SWAP1
0x242 SWAP2
0x243 SWAP1
0x244 POP
0x245 POP
0x246 PUSH2 0x991
0x249 JUMP
---
0x222: JUMPDEST 
0x223: V159 = 0x24a
0x226: V160 = 0x4
0x22a: V161 = CALLDATALOAD 0x4
0x22c: V162 = 0x20
0x22e: V163 = ADD 0x20 0x4
0x233: V164 = CALLDATALOAD 0x24
0x235: V165 = 0x20
0x237: V166 = ADD 0x20 0x24
0x23c: V167 = CALLDATALOAD 0x44
0x23e: V168 = 0x20
0x240: V169 = ADD 0x20 0x44
0x246: V170 = 0x991
0x249: JUMP 0x991
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x24a, V161, V164, V167]
Exit stack: [V11, 0x24a, V161, V164, V167]

================================

Block 0x24a
[0x24a:0x25f]
---
Predecessors: [0x9a6]
Successors: []
---
0x24a JUMPDEST
0x24b PUSH1 0x40
0x24d MLOAD
0x24e DUP1
0x24f DUP3
0x250 DUP2
0x251 MSTORE
0x252 PUSH1 0x20
0x254 ADD
0x255 SWAP2
0x256 POP
0x257 POP
0x258 PUSH1 0x40
0x25a MLOAD
0x25b DUP1
0x25c SWAP2
0x25d SUB
0x25e SWAP1
0x25f RETURN
---
0x24a: JUMPDEST 
0x24b: V171 = 0x40
0x24d: V172 = M[0x40]
0x251: M[V172] = S0
0x252: V173 = 0x20
0x254: V174 = ADD 0x20 V172
0x258: V175 = 0x40
0x25a: V176 = M[0x40]
0x25d: V177 = SUB V174 V176
0x25f: RETURN V176 V177
---
Entry stack: [S10, S9, V11, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S10, S9, V11, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x260
[0x260:0x266]
---
Predecessors: [0x6d]
Successors: [0x267, 0x26b]
---
0x260 JUMPDEST
0x261 CALLVALUE
0x262 ISZERO
0x263 PUSH2 0x26b
0x266 JUMPI
---
0x260: JUMPDEST 
0x261: V178 = CALLVALUE
0x262: V179 = ISZERO V178
0x263: V180 = 0x26b
0x266: JUMPI 0x26b V179
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x267
[0x267:0x26a]
---
Predecessors: [0x260]
Successors: []
---
0x267 PUSH1 0x0
0x269 DUP1
0x26a REVERT
---
0x267: V181 = 0x0
0x26a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x26b
[0x26b:0x272]
---
Predecessors: [0x260]
Successors: [0x9af]
---
0x26b JUMPDEST
0x26c PUSH2 0x273
0x26f PUSH2 0x9af
0x272 JUMP
---
0x26b: JUMPDEST 
0x26c: V182 = 0x273
0x26f: V183 = 0x9af
0x272: JUMP 0x9af
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x273]
Exit stack: [V11, 0x273]

================================

Block 0x273
[0x273:0x2b4]
---
Predecessors: [0x9af]
Successors: []
---
0x273 JUMPDEST
0x274 PUSH1 0x40
0x276 MLOAD
0x277 DUP1
0x278 DUP3
0x279 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28e AND
0x28f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a4 AND
0x2a5 DUP2
0x2a6 MSTORE
0x2a7 PUSH1 0x20
0x2a9 ADD
0x2aa SWAP2
0x2ab POP
0x2ac POP
0x2ad PUSH1 0x40
0x2af MLOAD
0x2b0 DUP1
0x2b1 SWAP2
0x2b2 SUB
0x2b3 SWAP1
0x2b4 RETURN
---
0x273: JUMPDEST 
0x274: V184 = 0x40
0x276: V185 = M[0x40]
0x279: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x28e: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V687
0x28f: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a4: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x2a6: M[V185] = V189
0x2a7: V190 = 0x20
0x2a9: V191 = ADD 0x20 V185
0x2ad: V192 = 0x40
0x2af: V193 = M[0x40]
0x2b2: V194 = SUB V191 V193
0x2b4: RETURN V193 V194
---
Entry stack: [V11, 0x273, V687]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x273]

================================

Block 0x2b5
[0x2b5:0x308]
---
Predecessors: [0x78]
Successors: [0x9d5]
---
0x2b5 JUMPDEST
0x2b6 PUSH2 0x309
0x2b9 PUSH1 0x4
0x2bb DUP1
0x2bc DUP1
0x2bd PUSH2 0x100
0x2c0 ADD
0x2c1 SWAP1
0x2c2 SWAP2
0x2c3 SWAP1
0x2c4 DUP1
0x2c5 PUSH1 0xc0
0x2c7 ADD
0x2c8 SWAP1
0x2c9 SWAP2
0x2ca SWAP1
0x2cb DUP1
0x2cc CALLDATALOAD
0x2cd SWAP1
0x2ce PUSH1 0x20
0x2d0 ADD
0x2d1 SWAP1
0x2d2 SWAP2
0x2d3 SWAP1
0x2d4 DUP1
0x2d5 CALLDATALOAD
0x2d6 SWAP1
0x2d7 PUSH1 0x20
0x2d9 ADD
0x2da SWAP1
0x2db SWAP2
0x2dc SWAP1
0x2dd DUP1
0x2de CALLDATALOAD
0x2df PUSH1 0xff
0x2e1 AND
0x2e2 SWAP1
0x2e3 PUSH1 0x20
0x2e5 ADD
0x2e6 SWAP1
0x2e7 SWAP2
0x2e8 SWAP1
0x2e9 DUP1
0x2ea CALLDATALOAD
0x2eb PUSH1 0x0
0x2ed NOT
0x2ee AND
0x2ef SWAP1
0x2f0 PUSH1 0x20
0x2f2 ADD
0x2f3 SWAP1
0x2f4 SWAP2
0x2f5 SWAP1
0x2f6 DUP1
0x2f7 CALLDATALOAD
0x2f8 PUSH1 0x0
0x2fa NOT
0x2fb AND
0x2fc SWAP1
0x2fd PUSH1 0x20
0x2ff ADD
0x300 SWAP1
0x301 SWAP2
0x302 SWAP1
0x303 POP
0x304 POP
0x305 PUSH2 0x9d5
0x308 JUMP
---
0x2b5: JUMPDEST 
0x2b6: V195 = 0x309
0x2b9: V196 = 0x4
0x2bd: V197 = 0x100
0x2c0: V198 = ADD 0x100 0x4
0x2c5: V199 = 0xc0
0x2c7: V200 = ADD 0xc0 0x104
0x2cc: V201 = CALLDATALOAD 0x1c4
0x2ce: V202 = 0x20
0x2d0: V203 = ADD 0x20 0x1c4
0x2d5: V204 = CALLDATALOAD 0x1e4
0x2d7: V205 = 0x20
0x2d9: V206 = ADD 0x20 0x1e4
0x2de: V207 = CALLDATALOAD 0x204
0x2df: V208 = 0xff
0x2e1: V209 = AND 0xff V207
0x2e3: V210 = 0x20
0x2e5: V211 = ADD 0x20 0x204
0x2ea: V212 = CALLDATALOAD 0x224
0x2eb: V213 = 0x0
0x2ed: V214 = NOT 0x0
0x2ee: V215 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V212
0x2f0: V216 = 0x20
0x2f2: V217 = ADD 0x20 0x224
0x2f7: V218 = CALLDATALOAD 0x244
0x2f8: V219 = 0x0
0x2fa: V220 = NOT 0x0
0x2fb: V221 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V218
0x2fd: V222 = 0x20
0x2ff: V223 = ADD 0x20 0x244
0x305: V224 = 0x9d5
0x308: JUMP 0x9d5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x309, 0x4, 0x104, V201, V204, V209, V215, V221]
Exit stack: [V11, 0x309, 0x4, 0x104, V201, V204, V209, V215, V221]

================================

Block 0x309
[0x309:0x31e]
---
Predecessors: []
Successors: []
---
0x309 JUMPDEST
0x30a PUSH1 0x40
0x30c MLOAD
0x30d DUP1
0x30e DUP3
0x30f DUP2
0x310 MSTORE
0x311 PUSH1 0x20
0x313 ADD
0x314 SWAP2
0x315 POP
0x316 POP
0x317 PUSH1 0x40
0x319 MLOAD
0x31a DUP1
0x31b SWAP2
0x31c SUB
0x31d SWAP1
0x31e RETURN
---
0x309: JUMPDEST 
0x30a: V225 = 0x40
0x30c: V226 = M[0x40]
0x310: M[V226] = S0
0x311: V227 = 0x20
0x313: V228 = ADD 0x20 V226
0x317: V229 = 0x40
0x319: V230 = M[0x40]
0x31c: V231 = SUB V228 V230
0x31e: RETURN V230 V231
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x31f
[0x31f:0x325]
---
Predecessors: [0x83]
Successors: [0x326, 0x32a]
---
0x31f JUMPDEST
0x320 CALLVALUE
0x321 ISZERO
0x322 PUSH2 0x32a
0x325 JUMPI
---
0x31f: JUMPDEST 
0x320: V232 = CALLVALUE
0x321: V233 = ISZERO V232
0x322: V234 = 0x32a
0x325: JUMPI 0x32a V233
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x326
[0x326:0x329]
---
Predecessors: [0x31f]
Successors: []
---
0x326 PUSH1 0x0
0x328 DUP1
0x329 REVERT
---
0x326: V235 = 0x0
0x329: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x32a
[0x32a:0x355]
---
Predecessors: [0x31f]
Successors: [0xee6]
---
0x32a JUMPDEST
0x32b PUSH2 0x356
0x32e PUSH1 0x4
0x330 DUP1
0x331 DUP1
0x332 CALLDATALOAD
0x333 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x348 AND
0x349 SWAP1
0x34a PUSH1 0x20
0x34c ADD
0x34d SWAP1
0x34e SWAP2
0x34f SWAP1
0x350 POP
0x351 POP
0x352 PUSH2 0xee6
0x355 JUMP
---
0x32a: JUMPDEST 
0x32b: V236 = 0x356
0x32e: V237 = 0x4
0x332: V238 = CALLDATALOAD 0x4
0x333: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x348: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x34a: V241 = 0x20
0x34c: V242 = ADD 0x20 0x4
0x352: V243 = 0xee6
0x355: JUMP 0xee6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x356, V240]
Exit stack: [V11, 0x356, V240]

================================

Block 0x356
[0x356:0x357]
---
Predecessors: [0xf7d]
Successors: []
---
0x356 JUMPDEST
0x357 STOP
---
0x356: JUMPDEST 
0x357: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x358
[0x358:0x361]
---
Predecessors: [0x9b]
Successors: [0x141a]
---
0x358 JUMPDEST
0x359 PUSH1 0x0
0x35b PUSH2 0x362
0x35e PUSH2 0x141a
0x361 JUMP
---
0x358: JUMPDEST 
0x359: V244 = 0x0
0x35b: V245 = 0x362
0x35e: V246 = 0x141a
0x361: JUMP 0x141a
---
Entry stack: [V11, 0xe6, 0x4, 0x104, V46, V51, V57, V63]
Stack pops: 0
Stack additions: [0x0, 0x362]
Exit stack: [V11, 0xe6, 0x4, 0x104, V46, V51, V57, V63, 0x0, 0x362]

================================

Block 0x362
[0x362:0x3b7]
---
Predecessors: [0x1453]
Successors: [0x103b]
---
0x362 JUMPDEST
0x363 PUSH1 0x0
0x365 PUSH2 0x3b8
0x368 DUP10
0x369 PUSH1 0x8
0x36b DUP1
0x36c PUSH1 0x20
0x36e MUL
0x36f PUSH1 0x40
0x371 MLOAD
0x372 SWAP1
0x373 DUP2
0x374 ADD
0x375 PUSH1 0x40
0x377 MSTORE
0x378 DUP1
0x379 SWAP3
0x37a SWAP2
0x37b SWAP1
0x37c DUP3
0x37d PUSH1 0x8
0x37f PUSH1 0x20
0x381 MUL
0x382 DUP1
0x383 DUP3
0x384 DUP5
0x385 CALLDATACOPY
0x386 DUP3
0x387 ADD
0x388 SWAP2
0x389 POP
0x38a POP
0x38b POP
0x38c POP
0x38d POP
0x38e DUP10
0x38f PUSH1 0x6
0x391 DUP1
0x392 PUSH1 0x20
0x394 MUL
0x395 PUSH1 0x40
0x397 MLOAD
0x398 SWAP1
0x399 DUP2
0x39a ADD
0x39b PUSH1 0x40
0x39d MSTORE
0x39e DUP1
0x39f SWAP3
0x3a0 SWAP2
0x3a1 SWAP1
0x3a2 DUP3
0x3a3 PUSH1 0x6
0x3a5 PUSH1 0x20
0x3a7 MUL
0x3a8 DUP1
0x3a9 DUP3
0x3aa DUP5
0x3ab CALLDATACOPY
0x3ac DUP3
0x3ad ADD
0x3ae SWAP2
0x3af POP
0x3b0 POP
0x3b1 POP
0x3b2 POP
0x3b3 POP
0x3b4 PUSH2 0x103b
0x3b7 JUMP
---
0x362: JUMPDEST 
0x363: V247 = 0x0
0x365: V248 = 0x3b8
0x369: V249 = 0x8
0x36c: V250 = 0x20
0x36e: V251 = MUL 0x20 0x8
0x36f: V252 = 0x40
0x371: V253 = M[0x40]
0x374: V254 = ADD V253 0x100
0x375: V255 = 0x40
0x377: M[0x40] = V254
0x37d: V256 = 0x8
0x37f: V257 = 0x20
0x381: V258 = MUL 0x20 0x8
0x385: CALLDATACOPY V253 S7 0x100
0x387: V259 = ADD V253 0x100
0x38f: V260 = 0x6
0x392: V261 = 0x20
0x394: V262 = MUL 0x20 0x6
0x395: V263 = 0x40
0x397: V264 = M[0x40]
0x39a: V265 = ADD V264 0xc0
0x39b: V266 = 0x40
0x39d: M[0x40] = V265
0x3a3: V267 = 0x6
0x3a5: V268 = 0x20
0x3a7: V269 = MUL 0x20 0x6
0x3ab: CALLDATACOPY V264 S6 0xc0
0x3ad: V270 = ADD V264 0xc0
0x3b4: V271 = 0x103b
0x3b7: JUMP 0x103b
---
Entry stack: [S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1332]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x3b8, V253, V264]
Exit stack: [S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1332, 0x0, 0x3b8, V253, V264]

================================

Block 0x3b8
[0x3b8:0x3be]
---
Predecessors: [0x1105]
Successors: [0x3bf, 0x3c7]
---
0x3b8 JUMPDEST
0x3b9 ISZERO
0x3ba ISZERO
0x3bb PUSH2 0x3c7
0x3be JUMPI
---
0x3b8: JUMPDEST 
0x3b9: V272 = ISZERO S0
0x3ba: V273 = ISZERO V272
0x3bb: V274 = 0x3c7
0x3be: JUMPI 0x3c7 V273
---
Entry stack: [S21, S20, S19, V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S21, S20, S19, V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0]

================================

Block 0x3bf
[0x3bf:0x3c6]
---
Predecessors: [0x3b8]
Successors: [0x5a7]
---
0x3bf PUSH1 0x0
0x3c1 SWAP3
0x3c2 POP
0x3c3 PUSH2 0x5a7
0x3c6 JUMP
---
0x3bf: V275 = 0x0
0x3c3: V276 = 0x5a7
0x3c6: JUMP 0x5a7
---
Entry stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, S1, 0x0]

================================

Block 0x3c7
[0x3c7:0x3f4]
---
Predecessors: [0x3b8]
Successors: [0x110d]
---
0x3c7 JUMPDEST
0x3c8 PUSH2 0x3f5
0x3cb DUP10
0x3cc PUSH1 0x8
0x3ce DUP1
0x3cf PUSH1 0x20
0x3d1 MUL
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 SWAP1
0x3d6 DUP2
0x3d7 ADD
0x3d8 PUSH1 0x40
0x3da MSTORE
0x3db DUP1
0x3dc SWAP3
0x3dd SWAP2
0x3de SWAP1
0x3df DUP3
0x3e0 PUSH1 0x8
0x3e2 PUSH1 0x20
0x3e4 MUL
0x3e5 DUP1
0x3e6 DUP3
0x3e7 DUP5
0x3e8 CALLDATACOPY
0x3e9 DUP3
0x3ea ADD
0x3eb SWAP2
0x3ec POP
0x3ed POP
0x3ee POP
0x3ef POP
0x3f0 POP
0x3f1 PUSH2 0x110d
0x3f4 JUMP
---
0x3c7: JUMPDEST 
0x3c8: V277 = 0x3f5
0x3cc: V278 = 0x8
0x3cf: V279 = 0x20
0x3d1: V280 = MUL 0x20 0x8
0x3d2: V281 = 0x40
0x3d4: V282 = M[0x40]
0x3d7: V283 = ADD V282 0x100
0x3d8: V284 = 0x40
0x3da: M[0x40] = V283
0x3e0: V285 = 0x8
0x3e2: V286 = 0x20
0x3e4: V287 = MUL 0x20 0x8
0x3e8: CALLDATACOPY V282 S8 0x100
0x3ea: V288 = ADD V282 0x100
0x3f1: V289 = 0x110d
0x3f4: JUMP 0x110d
---
Entry stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x3f5, V282]
Exit stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0, 0x3f5, V282]

================================

Block 0x3f5
[0x3f5:0x471]
---
Predecessors: [0x5a7, 0x1189]
Successors: [0x472]
---
0x3f5 JUMPDEST
0x3f6 SWAP2
0x3f7 POP
0x3f8 PUSH1 0x2
0x3fa PUSH1 0x0
0x3fc SWAP1
0x3fd SLOAD
0x3fe SWAP1
0x3ff PUSH2 0x100
0x402 EXP
0x403 SWAP1
0x404 DIV
0x405 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41a AND
0x41b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x430 AND
0x431 PUSH4 0xcfc4d0ec
0x436 DUP4
0x437 DUP11
0x438 PUSH1 0x40
0x43a MLOAD
0x43b DUP4
0x43c PUSH4 0xffffffff
0x441 AND
0x442 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x460 MUL
0x461 DUP2
0x462 MSTORE
0x463 PUSH1 0x4
0x465 ADD
0x466 DUP1
0x467 DUP4
0x468 PUSH1 0x5
0x46a PUSH1 0x20
0x46c MUL
0x46d DUP1
0x46e DUP4
0x46f DUP4
0x470 PUSH1 0x0
---
0x3f5: JUMPDEST 
0x3f8: V290 = 0x2
0x3fa: V291 = 0x0
0x3fd: V292 = S[0x2]
0x3ff: V293 = 0x100
0x402: V294 = EXP 0x100 0x0
0x404: V295 = DIV V292 0x1
0x405: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x41a: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x41b: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x430: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x431: V300 = 0xcfc4d0ec
0x438: V301 = 0x40
0x43a: V302 = M[0x40]
0x43c: V303 = 0xffffffff
0x441: V304 = AND 0xffffffff 0xcfc4d0ec
0x442: V305 = 0x100000000000000000000000000000000000000000000000000000000
0x460: V306 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xcfc4d0ec
0x462: M[V302] = 0xcfc4d0ec00000000000000000000000000000000000000000000000000000000
0x463: V307 = 0x4
0x465: V308 = ADD 0x4 V302
0x468: V309 = 0x5
0x46a: V310 = 0x20
0x46c: V311 = MUL 0x20 0x5
0x470: V312 = 0x0
---
Entry stack: [S19, V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S0, S1, V299, 0xcfc4d0ec, S0, S8, V308, V308, S0, 0xa0, 0xa0, V308, S0, 0x0]
Exit stack: [S19, V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, S1, V299, 0xcfc4d0ec, S0, S8, V308, V308, S0, 0xa0, 0xa0, V308, S0, 0x0]

================================

Block 0x472
[0x472:0x47a]
---
Predecessors: [0x3f5, 0x47b]
Successors: [0x47b, 0x48d]
---
0x472 JUMPDEST
0x473 DUP4
0x474 DUP2
0x475 LT
0x476 ISZERO
0x477 PUSH2 0x48d
0x47a JUMPI
---
0x472: JUMPDEST 
0x475: V313 = LT S0 0xa0
0x476: V314 = ISZERO V313
0x477: V315 = 0x48d
0x47a: JUMPI 0x48d V314
---
Entry stack: [S30, V11, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0xcfc4d0ec, S9, S8, S7, S6, S5, 0xa0, 0xa0, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S30, V11, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0xcfc4d0ec, S9, S8, S7, S6, S5, 0xa0, 0xa0, S2, S1, S0]

================================

Block 0x47b
[0x47b:0x48c]
---
Predecessors: [0x472]
Successors: [0x472]
---
0x47b DUP1
0x47c DUP3
0x47d ADD
0x47e MLOAD
0x47f DUP2
0x480 DUP5
0x481 ADD
0x482 MSTORE
0x483 PUSH1 0x20
0x485 DUP2
0x486 ADD
0x487 SWAP1
0x488 POP
0x489 PUSH2 0x472
0x48c JUMP
---
0x47d: V316 = ADD S1 S0
0x47e: V317 = M[V316]
0x481: V318 = ADD S2 S0
0x482: M[V318] = V317
0x483: V319 = 0x20
0x486: V320 = ADD S0 0x20
0x489: V321 = 0x472
0x48c: JUMP 0x472
---
Entry stack: [S27, S26, S25, V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0xcfc4d0ec, S9, S8, S7, S6, S5, 0xa0, 0xa0, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, V320]
Exit stack: [S27, S26, S25, V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0xcfc4d0ec, S9, S8, S7, S6, S5, 0xa0, 0xa0, S2, S1, V320]

================================

Block 0x48d
[0x48d:0x4bb]
---
Predecessors: [0x472]
Successors: [0x4bc, 0x4c0]
---
0x48d JUMPDEST
0x48e POP
0x48f POP
0x490 POP
0x491 POP
0x492 SWAP1
0x493 POP
0x494 ADD
0x495 DUP3
0x496 PUSH1 0x6
0x498 PUSH1 0x20
0x49a MUL
0x49b DUP1
0x49c DUP3
0x49d DUP5
0x49e CALLDATACOPY
0x49f DUP3
0x4a0 ADD
0x4a1 SWAP2
0x4a2 POP
0x4a3 POP
0x4a4 SWAP3
0x4a5 POP
0x4a6 POP
0x4a7 POP
0x4a8 PUSH1 0x20
0x4aa PUSH1 0x40
0x4ac MLOAD
0x4ad DUP1
0x4ae DUP4
0x4af SUB
0x4b0 DUP2
0x4b1 PUSH1 0x0
0x4b3 DUP8
0x4b4 DUP1
0x4b5 EXTCODESIZE
0x4b6 ISZERO
0x4b7 ISZERO
0x4b8 PUSH2 0x4c0
0x4bb JUMPI
---
0x48d: JUMPDEST 
0x494: V322 = ADD 0xa0 S6
0x496: V323 = 0x6
0x498: V324 = 0x20
0x49a: V325 = MUL 0x20 0x6
0x49e: CALLDATACOPY V322 S8 0xc0
0x4a0: V326 = ADD V322 0xc0
0x4a8: V327 = 0x20
0x4aa: V328 = 0x40
0x4ac: V329 = M[0x40]
0x4af: V330 = SUB V326 V329
0x4b1: V331 = 0x0
0x4b5: V332 = EXTCODESIZE S11
0x4b6: V333 = ISZERO V332
0x4b7: V334 = ISZERO V333
0x4b8: V335 = 0x4c0
0x4bb: JUMPI 0x4c0 V334
---
Entry stack: [S27, S26, S25, V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0xcfc4d0ec, S9, S8, S7, S6, S5, 0xa0, 0xa0, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, V326, 0x20, V329, V330, V329, 0x0, S11]
Exit stack: [S27, S26, S25, V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0xcfc4d0ec, V326, 0x20, V329, V330, V329, 0x0, S11]

================================

Block 0x4bc
[0x4bc:0x4bf]
---
Predecessors: [0x48d]
Successors: []
---
0x4bc PUSH1 0x0
0x4be DUP1
0x4bf REVERT
---
0x4bc: V336 = 0x0
0x4bf: REVERT 0x0 0x0
---
Entry stack: [S24, S23, S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0xcfc4d0ec, V326, 0x20, V329, V330, V329, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S24, S23, S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0xcfc4d0ec, V326, 0x20, V329, V330, V329, 0x0, S0]

================================

Block 0x4c0
[0x4c0:0x4c8]
---
Predecessors: [0x48d]
Successors: [0x4c9, 0x4cd]
---
0x4c0 JUMPDEST
0x4c1 GAS
0x4c2 CALL
0x4c3 ISZERO
0x4c4 ISZERO
0x4c5 PUSH2 0x4cd
0x4c8 JUMPI
---
0x4c0: JUMPDEST 
0x4c1: V337 = GAS
0x4c2: V338 = CALL V337 S0 0x0 V329 V330 V329 0x20
0x4c3: V339 = ISZERO V338
0x4c4: V340 = ISZERO V339
0x4c5: V341 = 0x4cd
0x4c8: JUMPI 0x4cd V340
---
Entry stack: [S24, S23, S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0xcfc4d0ec, V326, 0x20, V329, V330, V329, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [S24, S23, S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0xcfc4d0ec, V326]

================================

Block 0x4c9
[0x4c9:0x4cc]
---
Predecessors: [0x4c0]
Successors: []
---
0x4c9 PUSH1 0x0
0x4cb DUP1
0x4cc REVERT
---
0x4c9: V342 = 0x0
0x4cc: REVERT 0x0 0x0
---
Entry stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xcfc4d0ec, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xcfc4d0ec, S0]

================================

Block 0x4cd
[0x4cd:0x4e9]
---
Predecessors: [0x4c0]
Successors: [0x4ea, 0x4eb]
---
0x4cd JUMPDEST
0x4ce POP
0x4cf POP
0x4d0 POP
0x4d1 PUSH1 0x40
0x4d3 MLOAD
0x4d4 DUP1
0x4d5 MLOAD
0x4d6 SWAP1
0x4d7 POP
0x4d8 SWAP1
0x4d9 POP
0x4da PUSH2 0x5a4
0x4dd DUP9
0x4de PUSH1 0x1
0x4e0 PUSH1 0x6
0x4e2 DUP2
0x4e3 LT
0x4e4 ISZERO
0x4e5 ISZERO
0x4e6 PUSH2 0x4eb
0x4e9 JUMPI
---
0x4cd: JUMPDEST 
0x4d1: V343 = 0x40
0x4d3: V344 = M[0x40]
0x4d5: V345 = M[V344]
0x4da: V346 = 0x5a4
0x4de: V347 = 0x1
0x4e0: V348 = 0x6
0x4e3: V349 = LT 0x1 0x6
0x4e4: V350 = ISZERO 0x1
0x4e5: V351 = ISZERO 0x0
0x4e6: V352 = 0x4eb
0x4e9: JUMPI 0x4eb 0x1
---
Entry stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xcfc4d0ec, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, V345, 0x5a4, S10, 0x1]
Exit stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V345, 0x5a4, S10, 0x1]

================================

Block 0x4ea
[0x4ea:0x4ea]
---
Predecessors: [0x4cd]
Successors: []
---
0x4ea INVALID
---
0x4ea: INVALID 
---
Entry stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V345, 0x5a4, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V345, 0x5a4, S1, 0x1]

================================

Block 0x4eb
[0x4eb:0x583]
---
Predecessors: [0x4cd]
Successors: [0x584, 0x588]
---
0x4eb JUMPDEST
0x4ec PUSH1 0x20
0x4ee MUL
0x4ef ADD
0x4f0 CALLDATALOAD
0x4f1 PUSH1 0x2
0x4f3 PUSH1 0x0
0x4f5 SWAP1
0x4f6 SLOAD
0x4f7 SWAP1
0x4f8 PUSH2 0x100
0x4fb EXP
0x4fc SWAP1
0x4fd DIV
0x4fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x513 AND
0x514 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x529 AND
0x52a PUSH4 0x7e9abb50
0x52f DUP5
0x530 PUSH1 0x40
0x532 MLOAD
0x533 DUP3
0x534 PUSH4 0xffffffff
0x539 AND
0x53a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x558 MUL
0x559 DUP2
0x55a MSTORE
0x55b PUSH1 0x4
0x55d ADD
0x55e DUP1
0x55f DUP3
0x560 PUSH1 0x0
0x562 NOT
0x563 AND
0x564 PUSH1 0x0
0x566 NOT
0x567 AND
0x568 DUP2
0x569 MSTORE
0x56a PUSH1 0x20
0x56c ADD
0x56d SWAP2
0x56e POP
0x56f POP
0x570 PUSH1 0x20
0x572 PUSH1 0x40
0x574 MLOAD
0x575 DUP1
0x576 DUP4
0x577 SUB
0x578 DUP2
0x579 PUSH1 0x0
0x57b DUP8
0x57c DUP1
0x57d EXTCODESIZE
0x57e ISZERO
0x57f ISZERO
0x580 PUSH2 0x588
0x583 JUMPI
---
0x4eb: JUMPDEST 
0x4ec: V353 = 0x20
0x4ee: V354 = MUL 0x20 0x1
0x4ef: V355 = ADD 0x20 S1
0x4f0: V356 = CALLDATALOAD V355
0x4f1: V357 = 0x2
0x4f3: V358 = 0x0
0x4f6: V359 = S[0x2]
0x4f8: V360 = 0x100
0x4fb: V361 = EXP 0x100 0x0
0x4fd: V362 = DIV V359 0x1
0x4fe: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x513: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x514: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x529: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x52a: V367 = 0x7e9abb50
0x530: V368 = 0x40
0x532: V369 = M[0x40]
0x534: V370 = 0xffffffff
0x539: V371 = AND 0xffffffff 0x7e9abb50
0x53a: V372 = 0x100000000000000000000000000000000000000000000000000000000
0x558: V373 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7e9abb50
0x55a: M[V369] = 0x7e9abb5000000000000000000000000000000000000000000000000000000000
0x55b: V374 = 0x4
0x55d: V375 = ADD 0x4 V369
0x560: V376 = 0x0
0x562: V377 = NOT 0x0
0x563: V378 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V345
0x564: V379 = 0x0
0x566: V380 = NOT 0x0
0x567: V381 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V378
0x569: M[V375] = V381
0x56a: V382 = 0x20
0x56c: V383 = ADD 0x20 V375
0x570: V384 = 0x20
0x572: V385 = 0x40
0x574: V386 = M[0x40]
0x577: V387 = SUB V383 V386
0x579: V388 = 0x0
0x57d: V389 = EXTCODESIZE V366
0x57e: V390 = ISZERO V389
0x57f: V391 = ISZERO V390
0x580: V392 = 0x588
0x583: JUMPI 0x588 V391
---
Entry stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V345, 0x5a4, S1, 0x1]
Stack pops: 4
Stack additions: [S3, S2, V356, V366, 0x7e9abb50, V383, 0x20, V386, V387, V386, 0x0, V366]
Exit stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V345, 0x5a4, V356, V366, 0x7e9abb50, V383, 0x20, V386, V387, V386, 0x0, V366]

================================

Block 0x584
[0x584:0x587]
---
Predecessors: [0x4eb]
Successors: []
---
0x584 PUSH1 0x0
0x586 DUP1
0x587 REVERT
---
0x584: V393 = 0x0
0x587: REVERT 0x0 0x0
---
Entry stack: [S26, S25, S24, V11, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x5a4, V356, V366, 0x7e9abb50, V383, 0x20, V386, V387, V386, 0x0, V366]
Stack pops: 0
Stack additions: []
Exit stack: [S26, S25, S24, V11, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x5a4, V356, V366, 0x7e9abb50, V383, 0x20, V386, V387, V386, 0x0, V366]

================================

Block 0x588
[0x588:0x590]
---
Predecessors: [0x4eb]
Successors: [0x591, 0x595]
---
0x588 JUMPDEST
0x589 GAS
0x58a CALL
0x58b ISZERO
0x58c ISZERO
0x58d PUSH2 0x595
0x590 JUMPI
---
0x588: JUMPDEST 
0x589: V394 = GAS
0x58a: V395 = CALL V394 V366 0x0 V386 V387 V386 0x20
0x58b: V396 = ISZERO V395
0x58c: V397 = ISZERO V396
0x58d: V398 = 0x595
0x590: JUMPI 0x595 V397
---
Entry stack: [S26, S25, S24, V11, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x5a4, V356, V366, 0x7e9abb50, V383, 0x20, V386, V387, V386, 0x0, V366]
Stack pops: 6
Stack additions: []
Exit stack: [S26, S25, S24, V11, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x5a4, V356, V366, 0x7e9abb50, V383]

================================

Block 0x591
[0x591:0x594]
---
Predecessors: [0x588]
Successors: []
---
0x591 PUSH1 0x0
0x593 DUP1
0x594 REVERT
---
0x591: V399 = 0x0
0x594: REVERT 0x0 0x0
---
Entry stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x5a4, S3, S2, 0x7e9abb50, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x5a4, S3, S2, 0x7e9abb50, S0]

================================

Block 0x595
[0x595:0x5a3]
---
Predecessors: [0x588]
Successors: [0x118f]
---
0x595 JUMPDEST
0x596 POP
0x597 POP
0x598 POP
0x599 PUSH1 0x40
0x59b MLOAD
0x59c DUP1
0x59d MLOAD
0x59e SWAP1
0x59f POP
0x5a0 PUSH2 0x118f
0x5a3 JUMP
---
0x595: JUMPDEST 
0x599: V400 = 0x40
0x59b: V401 = M[0x40]
0x59d: V402 = M[V401]
0x5a0: V403 = 0x118f
0x5a3: JUMP 0x118f
---
Entry stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x5a4, S3, S2, 0x7e9abb50, S0]
Stack pops: 3
Stack additions: [V402]
Exit stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x5a4, S3, V402]

================================

Block 0x5a4
[0x5a4:0x5a6]
---
Predecessors: [0x119d]
Successors: [0x5a7]
---
0x5a4 JUMPDEST
0x5a5 SWAP3
0x5a6 POP
---
0x5a4: JUMPDEST 
---
Entry stack: [S15, S14, V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1185]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [S15, S14, V11, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1185, S2, S1]

================================

Block 0x5a7
[0x5a7:0x5b2]
---
Predecessors: [0x3bf, 0x5a4]
Successors: [0xe6, 0x3f5, 0x6d1, 0xb98]
---
0x5a7 JUMPDEST
0x5a8 POP
0x5a9 POP
0x5aa SWAP7
0x5ab SWAP6
0x5ac POP
0x5ad POP
0x5ae POP
0x5af POP
0x5b0 POP
0x5b1 POP
0x5b2 JUMP
---
0x5a7: JUMPDEST 
0x5b2: JUMP S9
---
Entry stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S2]
Exit stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S2]

================================

Block 0x5b3
[0x5b3:0x5bc]
---
Predecessors: [0x107]
Successors: [0x141a]
---
0x5b3 JUMPDEST
0x5b4 PUSH1 0x0
0x5b6 PUSH2 0x5bd
0x5b9 PUSH2 0x141a
0x5bc JUMP
---
0x5b3: JUMPDEST 
0x5b4: V404 = 0x0
0x5b6: V405 = 0x5bd
0x5b9: V406 = 0x141a
0x5bc: JUMP 0x141a
---
Entry stack: [V11, 0x15b, 0x4, 0x104, V84, V87, V92, V98, V104]
Stack pops: 0
Stack additions: [0x0, 0x5bd]
Exit stack: [V11, 0x15b, 0x4, 0x104, V84, V87, V92, V98, V104, 0x0, 0x5bd]

================================

Block 0x5bd
[0x5bd:0x612]
---
Predecessors: [0x1453]
Successors: [0x103b]
---
0x5bd JUMPDEST
0x5be PUSH1 0x0
0x5c0 PUSH2 0x613
0x5c3 DUP11
0x5c4 PUSH1 0x8
0x5c6 DUP1
0x5c7 PUSH1 0x20
0x5c9 MUL
0x5ca PUSH1 0x40
0x5cc MLOAD
0x5cd SWAP1
0x5ce DUP2
0x5cf ADD
0x5d0 PUSH1 0x40
0x5d2 MSTORE
0x5d3 DUP1
0x5d4 SWAP3
0x5d5 SWAP2
0x5d6 SWAP1
0x5d7 DUP3
0x5d8 PUSH1 0x8
0x5da PUSH1 0x20
0x5dc MUL
0x5dd DUP1
0x5de DUP3
0x5df DUP5
0x5e0 CALLDATACOPY
0x5e1 DUP3
0x5e2 ADD
0x5e3 SWAP2
0x5e4 POP
0x5e5 POP
0x5e6 POP
0x5e7 POP
0x5e8 POP
0x5e9 DUP11
0x5ea PUSH1 0x6
0x5ec DUP1
0x5ed PUSH1 0x20
0x5ef MUL
0x5f0 PUSH1 0x40
0x5f2 MLOAD
0x5f3 SWAP1
0x5f4 DUP2
0x5f5 ADD
0x5f6 PUSH1 0x40
0x5f8 MSTORE
0x5f9 DUP1
0x5fa SWAP3
0x5fb SWAP2
0x5fc SWAP1
0x5fd DUP3
0x5fe PUSH1 0x6
0x600 PUSH1 0x20
0x602 MUL
0x603 DUP1
0x604 DUP3
0x605 DUP5
0x606 CALLDATACOPY
0x607 DUP3
0x608 ADD
0x609 SWAP2
0x60a POP
0x60b POP
0x60c POP
0x60d POP
0x60e POP
0x60f PUSH2 0x103b
0x612 JUMP
---
0x5bd: JUMPDEST 
0x5be: V407 = 0x0
0x5c0: V408 = 0x613
0x5c4: V409 = 0x8
0x5c7: V410 = 0x20
0x5c9: V411 = MUL 0x20 0x8
0x5ca: V412 = 0x40
0x5cc: V413 = M[0x40]
0x5cf: V414 = ADD V413 0x100
0x5d0: V415 = 0x40
0x5d2: M[0x40] = V414
0x5d8: V416 = 0x8
0x5da: V417 = 0x20
0x5dc: V418 = MUL 0x20 0x8
0x5e0: CALLDATACOPY V413 S8 0x100
0x5e2: V419 = ADD V413 0x100
0x5ea: V420 = 0x6
0x5ed: V421 = 0x20
0x5ef: V422 = MUL 0x20 0x6
0x5f0: V423 = 0x40
0x5f2: V424 = M[0x40]
0x5f5: V425 = ADD V424 0xc0
0x5f6: V426 = 0x40
0x5f8: M[0x40] = V425
0x5fe: V427 = 0x6
0x600: V428 = 0x20
0x602: V429 = MUL 0x20 0x6
0x606: CALLDATACOPY V424 S7 0xc0
0x608: V430 = ADD V424 0xc0
0x60f: V431 = 0x103b
0x612: JUMP 0x103b
---
Entry stack: [S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1332]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x613, V413, V424]
Exit stack: [S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1332, 0x0, 0x613, V413, V424]

================================

Block 0x613
[0x613:0x619]
---
Predecessors: [0x1105]
Successors: [0x61a, 0x61e]
---
0x613 JUMPDEST
0x614 ISZERO
0x615 ISZERO
0x616 PUSH2 0x61e
0x619 JUMPI
---
0x613: JUMPDEST 
0x614: V432 = ISZERO S0
0x615: V433 = ISZERO V432
0x616: V434 = 0x61e
0x619: JUMPI 0x61e V433
---
Entry stack: [S21, S20, S19, V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S21, S20, S19, V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0]

================================

Block 0x61a
[0x61a:0x61d]
---
Predecessors: [0x613]
Successors: []
---
0x61a PUSH1 0x0
0x61c DUP1
0x61d REVERT
---
0x61a: V435 = 0x0
0x61d: REVERT 0x0 0x0
---
Entry stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x61e
[0x61e:0x664]
---
Predecessors: [0x613]
Successors: [0x665, 0x666]
---
0x61e JUMPDEST
0x61f PUSH1 0x1
0x621 PUSH1 0x0
0x623 SWAP1
0x624 SLOAD
0x625 SWAP1
0x626 PUSH2 0x100
0x629 EXP
0x62a SWAP1
0x62b DIV
0x62c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x641 AND
0x642 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x657 AND
0x658 DUP11
0x659 PUSH1 0x2
0x65b PUSH1 0x8
0x65d DUP2
0x65e LT
0x65f ISZERO
0x660 ISZERO
0x661 PUSH2 0x666
0x664 JUMPI
---
0x61e: JUMPDEST 
0x61f: V436 = 0x1
0x621: V437 = 0x0
0x624: V438 = S[0x1]
0x626: V439 = 0x100
0x629: V440 = EXP 0x100 0x0
0x62b: V441 = DIV V438 0x1
0x62c: V442 = 0xffffffffffffffffffffffffffffffffffffffff
0x641: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x642: V444 = 0xffffffffffffffffffffffffffffffffffffffff
0x657: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V443
0x659: V446 = 0x2
0x65b: V447 = 0x8
0x65e: V448 = LT 0x2 0x8
0x65f: V449 = ISZERO 0x1
0x660: V450 = ISZERO 0x0
0x661: V451 = 0x666
0x664: JUMPI 0x666 0x1
---
Entry stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V445, S9, 0x2]
Exit stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0, V445, S9, 0x2]

================================

Block 0x665
[0x665:0x665]
---
Predecessors: [0x61e]
Successors: []
---
0x665 INVALID
---
0x665: INVALID 
---
Entry stack: [S23, S22, S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, V445, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [S23, S22, S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, V445, S1, 0x2]

================================

Block 0x666
[0x666:0x69e]
---
Predecessors: [0x61e]
Successors: [0x69f, 0x6a3]
---
0x666 JUMPDEST
0x667 PUSH1 0x20
0x669 MUL
0x66a ADD
0x66b CALLDATALOAD
0x66c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x681 AND
0x682 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x697 AND
0x698 EQ
0x699 ISZERO
0x69a ISZERO
0x69b PUSH2 0x6a3
0x69e JUMPI
---
0x666: JUMPDEST 
0x667: V452 = 0x20
0x669: V453 = MUL 0x20 0x2
0x66a: V454 = ADD 0x40 S1
0x66b: V455 = CALLDATALOAD V454
0x66c: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x681: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x682: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x697: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x698: V460 = EQ V459 V445
0x699: V461 = ISZERO V460
0x69a: V462 = ISZERO V461
0x69b: V463 = 0x6a3
0x69e: JUMPI 0x6a3 V462
---
Entry stack: [S23, S22, S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, V445, S1, 0x2]
Stack pops: 3
Stack additions: []
Exit stack: [S23, S22, S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0]

================================

Block 0x69f
[0x69f:0x6a2]
---
Predecessors: [0x666]
Successors: []
---
0x69f PUSH1 0x0
0x6a1 DUP1
0x6a2 REVERT
---
0x69f: V464 = 0x0
0x6a2: REVERT 0x0 0x0
---
Entry stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x6a3
[0x6a3:0x6d0]
---
Predecessors: [0x666]
Successors: [0x110d]
---
0x6a3 JUMPDEST
0x6a4 PUSH2 0x6d1
0x6a7 DUP11
0x6a8 PUSH1 0x8
0x6aa DUP1
0x6ab PUSH1 0x20
0x6ad MUL
0x6ae PUSH1 0x40
0x6b0 MLOAD
0x6b1 SWAP1
0x6b2 DUP2
0x6b3 ADD
0x6b4 PUSH1 0x40
0x6b6 MSTORE
0x6b7 DUP1
0x6b8 SWAP3
0x6b9 SWAP2
0x6ba SWAP1
0x6bb DUP3
0x6bc PUSH1 0x8
0x6be PUSH1 0x20
0x6c0 MUL
0x6c1 DUP1
0x6c2 DUP3
0x6c3 DUP5
0x6c4 CALLDATACOPY
0x6c5 DUP3
0x6c6 ADD
0x6c7 SWAP2
0x6c8 POP
0x6c9 POP
0x6ca POP
0x6cb POP
0x6cc POP
0x6cd PUSH2 0x110d
0x6d0 JUMP
---
0x6a3: JUMPDEST 
0x6a4: V465 = 0x6d1
0x6a8: V466 = 0x8
0x6ab: V467 = 0x20
0x6ad: V468 = MUL 0x20 0x8
0x6ae: V469 = 0x40
0x6b0: V470 = M[0x40]
0x6b3: V471 = ADD V470 0x100
0x6b4: V472 = 0x40
0x6b6: M[0x40] = V471
0x6bc: V473 = 0x8
0x6be: V474 = 0x20
0x6c0: V475 = MUL 0x20 0x8
0x6c4: CALLDATACOPY V470 S9 0x100
0x6c6: V476 = ADD V470 0x100
0x6cd: V477 = 0x110d
0x6d0: JUMP 0x110d
---
Entry stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x6d1, V470]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0, 0x6d1, V470]

================================

Block 0x6d1
[0x6d1:0x6e3]
---
Predecessors: [0x5a7, 0x1189]
Successors: [0x6e4, 0x6e5]
---
0x6d1 JUMPDEST
0x6d2 SWAP2
0x6d3 POP
0x6d4 PUSH2 0x705
0x6d7 DUP11
0x6d8 PUSH1 0x3
0x6da PUSH1 0x8
0x6dc DUP2
0x6dd LT
0x6de ISZERO
0x6df ISZERO
0x6e0 PUSH2 0x6e5
0x6e3 JUMPI
---
0x6d1: JUMPDEST 
0x6d4: V478 = 0x705
0x6d8: V479 = 0x3
0x6da: V480 = 0x8
0x6dd: V481 = LT 0x3 0x8
0x6de: V482 = ISZERO 0x1
0x6df: V483 = ISZERO 0x0
0x6e0: V484 = 0x6e5
0x6e3: JUMPI 0x6e5 0x1
---
Entry stack: [S19, V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S0, S1, 0x705, S10, 0x3]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, S1, 0x705, S10, 0x3]

================================

Block 0x6e4
[0x6e4:0x6e4]
---
Predecessors: [0x6d1]
Successors: []
---
0x6e4 INVALID
---
0x6e4: INVALID 
---
Entry stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x705, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x705, S1, 0x3]

================================

Block 0x6e5
[0x6e5:0x704]
---
Predecessors: [0x6d1]
Successors: [0x11a8]
---
0x6e5 JUMPDEST
0x6e6 PUSH1 0x20
0x6e8 MUL
0x6e9 ADD
0x6ea CALLDATALOAD
0x6eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x700 AND
0x701 PUSH2 0x11a8
0x704 JUMP
---
0x6e5: JUMPDEST 
0x6e6: V485 = 0x20
0x6e8: V486 = MUL 0x20 0x3
0x6e9: V487 = ADD 0x60 S1
0x6ea: V488 = CALLDATALOAD V487
0x6eb: V489 = 0xffffffffffffffffffffffffffffffffffffffff
0x700: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x701: V491 = 0x11a8
0x704: JUMP 0x11a8
---
Entry stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x705, S1, 0x3]
Stack pops: 2
Stack additions: [V490]
Exit stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x705, V490]

================================

Block 0x705
[0x705:0x785]
---
Predecessors: [0x13c9]
Successors: [0x786]
---
0x705 JUMPDEST
0x706 PUSH1 0x2
0x708 PUSH1 0x0
0x70a SWAP1
0x70b SLOAD
0x70c SWAP1
0x70d PUSH2 0x100
0x710 EXP
0x711 SWAP1
0x712 DIV
0x713 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x728 AND
0x729 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73e AND
0x73f PUSH4 0xbc61394a
0x744 DUP4
0x745 DUP12
0x746 DUP11
0x747 PUSH1 0x0
0x749 DUP12
0x74a DUP12
0x74b DUP12
0x74c PUSH1 0x40
0x74e MLOAD
0x74f DUP9
0x750 PUSH4 0xffffffff
0x755 AND
0x756 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x774 MUL
0x775 DUP2
0x776 MSTORE
0x777 PUSH1 0x4
0x779 ADD
0x77a DUP1
0x77b DUP9
0x77c PUSH1 0x5
0x77e PUSH1 0x20
0x780 MUL
0x781 DUP1
0x782 DUP4
0x783 DUP4
0x784 PUSH1 0x0
---
0x705: JUMPDEST 
0x706: V492 = 0x2
0x708: V493 = 0x0
0x70b: V494 = S[0x2]
0x70d: V495 = 0x100
0x710: V496 = EXP 0x100 0x0
0x712: V497 = DIV V494 0x1
0x713: V498 = 0xffffffffffffffffffffffffffffffffffffffff
0x728: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x729: V500 = 0xffffffffffffffffffffffffffffffffffffffff
0x73e: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V499
0x73f: V502 = 0xbc61394a
0x747: V503 = 0x0
0x74c: V504 = 0x40
0x74e: V505 = M[0x40]
0x750: V506 = 0xffffffff
0x755: V507 = AND 0xffffffff 0xbc61394a
0x756: V508 = 0x100000000000000000000000000000000000000000000000000000000
0x774: V509 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xbc61394a
0x776: M[V505] = 0xbc61394a00000000000000000000000000000000000000000000000000000000
0x777: V510 = 0x4
0x779: V511 = ADD 0x4 V505
0x77c: V512 = 0x5
0x77e: V513 = 0x20
0x780: V514 = MUL 0x20 0x5
0x784: V515 = 0x0
---
Entry stack: [S15, S14, S13, V11, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, V501, 0xbc61394a, S1, S8, S6, 0x0, S5, S4, S3, V511, V511, S1, 0xa0, 0xa0, V511, S1, 0x0]
Exit stack: [S15, S14, S13, V11, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V501, 0xbc61394a, S1, S8, S6, 0x0, S5, S4, S3, V511, V511, S1, 0xa0, 0xa0, V511, S1, 0x0]

================================

Block 0x786
[0x786:0x78e]
---
Predecessors: [0x705, 0x78f]
Successors: [0x78f, 0x7a1]
---
0x786 JUMPDEST
0x787 DUP4
0x788 DUP2
0x789 LT
0x78a ISZERO
0x78b PUSH2 0x7a1
0x78e JUMPI
---
0x786: JUMPDEST 
0x789: V516 = LT S0 0xa0
0x78a: V517 = ISZERO V516
0x78b: V518 = 0x7a1
0x78e: JUMPI 0x7a1 V517
---
Entry stack: [S32, S31, S30, V11, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, V501, 0xbc61394a, S14, S13, S12, 0x0, S10, S9, S8, V511, V511, S5, 0xa0, 0xa0, V511, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S32, S31, S30, V11, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, V501, 0xbc61394a, S14, S13, S12, 0x0, S10, S9, S8, V511, V511, S5, 0xa0, 0xa0, V511, S1, S0]

================================

Block 0x78f
[0x78f:0x7a0]
---
Predecessors: [0x786]
Successors: [0x786]
---
0x78f DUP1
0x790 DUP3
0x791 ADD
0x792 MLOAD
0x793 DUP2
0x794 DUP5
0x795 ADD
0x796 MSTORE
0x797 PUSH1 0x20
0x799 DUP2
0x79a ADD
0x79b SWAP1
0x79c POP
0x79d PUSH2 0x786
0x7a0 JUMP
---
0x791: V519 = ADD S1 S0
0x792: V520 = M[V519]
0x795: V521 = ADD V511 S0
0x796: M[V521] = V520
0x797: V522 = 0x20
0x79a: V523 = ADD S0 0x20
0x79d: V524 = 0x786
0x7a0: JUMP 0x786
---
Entry stack: [S32, S31, S30, V11, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, V501, 0xbc61394a, S14, S13, S12, 0x0, S10, S9, S8, V511, V511, S5, 0xa0, 0xa0, V511, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, V523]
Exit stack: [S32, S31, S30, V11, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, V501, 0xbc61394a, S14, S13, S12, 0x0, S10, S9, S8, V511, V511, S5, 0xa0, 0xa0, V511, S1, V523]

================================

Block 0x7a1
[0x7a1:0x80c]
---
Predecessors: [0x786]
Successors: [0x80d, 0x811]
---
0x7a1 JUMPDEST
0x7a2 POP
0x7a3 POP
0x7a4 POP
0x7a5 POP
0x7a6 SWAP1
0x7a7 POP
0x7a8 ADD
0x7a9 DUP8
0x7aa PUSH1 0x6
0x7ac PUSH1 0x20
0x7ae MUL
0x7af DUP1
0x7b0 DUP3
0x7b1 DUP5
0x7b2 CALLDATACOPY
0x7b3 DUP3
0x7b4 ADD
0x7b5 SWAP2
0x7b6 POP
0x7b7 POP
0x7b8 DUP7
0x7b9 DUP2
0x7ba MSTORE
0x7bb PUSH1 0x20
0x7bd ADD
0x7be DUP6
0x7bf ISZERO
0x7c0 ISZERO
0x7c1 ISZERO
0x7c2 ISZERO
0x7c3 DUP2
0x7c4 MSTORE
0x7c5 PUSH1 0x20
0x7c7 ADD
0x7c8 DUP5
0x7c9 PUSH1 0xff
0x7cb AND
0x7cc PUSH1 0xff
0x7ce AND
0x7cf DUP2
0x7d0 MSTORE
0x7d1 PUSH1 0x20
0x7d3 ADD
0x7d4 DUP4
0x7d5 PUSH1 0x0
0x7d7 NOT
0x7d8 AND
0x7d9 PUSH1 0x0
0x7db NOT
0x7dc AND
0x7dd DUP2
0x7de MSTORE
0x7df PUSH1 0x20
0x7e1 ADD
0x7e2 DUP3
0x7e3 PUSH1 0x0
0x7e5 NOT
0x7e6 AND
0x7e7 PUSH1 0x0
0x7e9 NOT
0x7ea AND
0x7eb DUP2
0x7ec MSTORE
0x7ed PUSH1 0x20
0x7ef ADD
0x7f0 SWAP8
0x7f1 POP
0x7f2 POP
0x7f3 POP
0x7f4 POP
0x7f5 POP
0x7f6 POP
0x7f7 POP
0x7f8 POP
0x7f9 PUSH1 0x20
0x7fb PUSH1 0x40
0x7fd MLOAD
0x7fe DUP1
0x7ff DUP4
0x800 SUB
0x801 DUP2
0x802 PUSH1 0x0
0x804 DUP8
0x805 DUP1
0x806 EXTCODESIZE
0x807 ISZERO
0x808 ISZERO
0x809 PUSH2 0x811
0x80c JUMPI
---
0x7a1: JUMPDEST 
0x7a8: V525 = ADD 0xa0 V511
0x7aa: V526 = 0x6
0x7ac: V527 = 0x20
0x7ae: V528 = MUL 0x20 0x6
0x7b2: CALLDATACOPY V525 S13 0xc0
0x7b4: V529 = ADD V525 0xc0
0x7ba: M[V529] = S12
0x7bb: V530 = 0x20
0x7bd: V531 = ADD 0x20 V529
0x7bf: V532 = ISZERO 0x0
0x7c0: V533 = ISZERO 0x1
0x7c1: V534 = ISZERO 0x0
0x7c2: V535 = ISZERO 0x1
0x7c4: M[V531] = 0x0
0x7c5: V536 = 0x20
0x7c7: V537 = ADD 0x20 V531
0x7c9: V538 = 0xff
0x7cb: V539 = AND 0xff S10
0x7cc: V540 = 0xff
0x7ce: V541 = AND 0xff V539
0x7d0: M[V537] = V541
0x7d1: V542 = 0x20
0x7d3: V543 = ADD 0x20 V537
0x7d5: V544 = 0x0
0x7d7: V545 = NOT 0x0
0x7d8: V546 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S9
0x7d9: V547 = 0x0
0x7db: V548 = NOT 0x0
0x7dc: V549 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V546
0x7de: M[V543] = V549
0x7df: V550 = 0x20
0x7e1: V551 = ADD 0x20 V543
0x7e3: V552 = 0x0
0x7e5: V553 = NOT 0x0
0x7e6: V554 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S8
0x7e7: V555 = 0x0
0x7e9: V556 = NOT 0x0
0x7ea: V557 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V554
0x7ec: M[V551] = V557
0x7ed: V558 = 0x20
0x7ef: V559 = ADD 0x20 V551
0x7f9: V560 = 0x20
0x7fb: V561 = 0x40
0x7fd: V562 = M[0x40]
0x800: V563 = SUB V559 V562
0x802: V564 = 0x0
0x806: V565 = EXTCODESIZE V501
0x807: V566 = ISZERO V565
0x808: V567 = ISZERO V566
0x809: V568 = 0x811
0x80c: JUMPI 0x811 V567
---
Entry stack: [S32, S31, S30, V11, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, V501, 0xbc61394a, S14, S13, S12, 0x0, S10, S9, S8, V511, V511, S5, 0xa0, 0xa0, V511, S1, S0]
Stack pops: 17
Stack additions: [S16, S15, V559, 0x20, V562, V563, V562, 0x0, S16]
Exit stack: [S32, S31, S30, V11, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, V501, 0xbc61394a, V559, 0x20, V562, V563, V562, 0x0, V501]

================================

Block 0x80d
[0x80d:0x810]
---
Predecessors: [0x7a1]
Successors: []
---
0x80d PUSH1 0x0
0x80f DUP1
0x810 REVERT
---
0x80d: V569 = 0x0
0x810: REVERT 0x0 0x0
---
Entry stack: [S23, S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V501, 0xbc61394a, V559, 0x20, V562, V563, V562, 0x0, V501]
Stack pops: 0
Stack additions: []
Exit stack: [S23, S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V501, 0xbc61394a, V559, 0x20, V562, V563, V562, 0x0, V501]

================================

Block 0x811
[0x811:0x819]
---
Predecessors: [0x7a1]
Successors: [0x81a, 0x81e]
---
0x811 JUMPDEST
0x812 GAS
0x813 CALL
0x814 ISZERO
0x815 ISZERO
0x816 PUSH2 0x81e
0x819 JUMPI
---
0x811: JUMPDEST 
0x812: V570 = GAS
0x813: V571 = CALL V570 V501 0x0 V562 V563 V562 0x20
0x814: V572 = ISZERO V571
0x815: V573 = ISZERO V572
0x816: V574 = 0x81e
0x819: JUMPI 0x81e V573
---
Entry stack: [S24, S23, S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V501, 0xbc61394a, V559, 0x20, V562, V563, V562, 0x0, V501]
Stack pops: 6
Stack additions: []
Exit stack: [S24, S23, S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V501, 0xbc61394a, V559]

================================

Block 0x81a
[0x81a:0x81d]
---
Predecessors: [0x811]
Successors: []
---
0x81a PUSH1 0x0
0x81c DUP1
0x81d REVERT
---
0x81a: V575 = 0x0
0x81d: REVERT 0x0 0x0
---
Entry stack: [S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V501, 0xbc61394a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V501, 0xbc61394a, S0]

================================

Block 0x81e
[0x81e:0x83a]
---
Predecessors: [0x811]
Successors: [0x83b, 0x83c]
---
0x81e JUMPDEST
0x81f POP
0x820 POP
0x821 POP
0x822 PUSH1 0x40
0x824 MLOAD
0x825 DUP1
0x826 MLOAD
0x827 SWAP1
0x828 POP
0x829 POP
0x82a PUSH2 0x85a
0x82d DUP8
0x82e DUP11
0x82f PUSH1 0x1
0x831 PUSH1 0x6
0x833 DUP2
0x834 LT
0x835 ISZERO
0x836 ISZERO
0x837 PUSH2 0x83c
0x83a JUMPI
---
0x81e: JUMPDEST 
0x822: V576 = 0x40
0x824: V577 = M[0x40]
0x826: V578 = M[V577]
0x82a: V579 = 0x85a
0x82f: V580 = 0x1
0x831: V581 = 0x6
0x834: V582 = LT 0x1 0x6
0x835: V583 = ISZERO 0x1
0x836: V584 = ISZERO 0x0
0x837: V585 = 0x83c
0x83a: JUMPI 0x83c 0x1
---
Entry stack: [S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V501, 0xbc61394a, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x85a, S9, S11, 0x1]
Exit stack: [S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x85a, S9, S11, 0x1]

================================

Block 0x83b
[0x83b:0x83b]
---
Predecessors: [0x81e]
Successors: []
---
0x83b INVALID
---
0x83b: INVALID 
---
Entry stack: [S18, S17, V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x85a, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x85a, S2, S1, 0x1]

================================

Block 0x83c
[0x83c:0x84e]
---
Predecessors: [0x81e]
Successors: [0x84f, 0x850]
---
0x83c JUMPDEST
0x83d PUSH1 0x20
0x83f MUL
0x840 ADD
0x841 CALLDATALOAD
0x842 DUP12
0x843 PUSH1 0x0
0x845 PUSH1 0x6
0x847 DUP2
0x848 LT
0x849 ISZERO
0x84a ISZERO
0x84b PUSH2 0x850
0x84e JUMPI
---
0x83c: JUMPDEST 
0x83d: V586 = 0x20
0x83f: V587 = MUL 0x20 0x1
0x840: V588 = ADD 0x20 S1
0x841: V589 = CALLDATALOAD V588
0x843: V590 = 0x0
0x845: V591 = 0x6
0x848: V592 = LT 0x0 0x6
0x849: V593 = ISZERO 0x1
0x84a: V594 = ISZERO 0x0
0x84b: V595 = 0x850
0x84e: JUMPI 0x850 0x1
---
Entry stack: [S18, S17, V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x85a, S2, S1, 0x1]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V589, S12, 0x0]
Exit stack: [S18, S17, V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x85a, S2, V589, S12, 0x0]

================================

Block 0x84f
[0x84f:0x84f]
---
Predecessors: [0x83c]
Successors: []
---
0x84f INVALID
---
0x84f: INVALID 
---
Entry stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x85a, S3, V589, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x85a, S3, V589, S1, 0x0]

================================

Block 0x850
[0x850:0x859]
---
Predecessors: [0x83c]
Successors: [0x991]
---
0x850 JUMPDEST
0x851 PUSH1 0x20
0x853 MUL
0x854 ADD
0x855 CALLDATALOAD
0x856 PUSH2 0x991
0x859 JUMP
---
0x850: JUMPDEST 
0x851: V596 = 0x20
0x853: V597 = MUL 0x20 0x0
0x854: V598 = ADD 0x0 S1
0x855: V599 = CALLDATALOAD V598
0x856: V600 = 0x991
0x859: JUMP 0x991
---
Entry stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x85a, S3, V589, S1, 0x0]
Stack pops: 2
Stack additions: [V599]
Exit stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x85a, S3, V589, V599]

================================

Block 0x85a
[0x85a:0x8e7]
---
Predecessors: [0x9a6]
Successors: [0x8e8, 0x8ec]
---
0x85a JUMPDEST
0x85b SWAP1
0x85c POP
0x85d PUSH1 0x1
0x85f PUSH1 0x0
0x861 SWAP1
0x862 SLOAD
0x863 SWAP1
0x864 PUSH2 0x100
0x867 EXP
0x868 SWAP1
0x869 DIV
0x86a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87f AND
0x880 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x895 AND
0x896 PUSH4 0x2e1a7d4d
0x89b DUP3
0x89c PUSH1 0x40
0x89e MLOAD
0x89f DUP3
0x8a0 PUSH4 0xffffffff
0x8a5 AND
0x8a6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x8c4 MUL
0x8c5 DUP2
0x8c6 MSTORE
0x8c7 PUSH1 0x4
0x8c9 ADD
0x8ca DUP1
0x8cb DUP3
0x8cc DUP2
0x8cd MSTORE
0x8ce PUSH1 0x20
0x8d0 ADD
0x8d1 SWAP2
0x8d2 POP
0x8d3 POP
0x8d4 PUSH1 0x0
0x8d6 PUSH1 0x40
0x8d8 MLOAD
0x8d9 DUP1
0x8da DUP4
0x8db SUB
0x8dc DUP2
0x8dd PUSH1 0x0
0x8df DUP8
0x8e0 DUP1
0x8e1 EXTCODESIZE
0x8e2 ISZERO
0x8e3 ISZERO
0x8e4 PUSH2 0x8ec
0x8e7 JUMPI
---
0x85a: JUMPDEST 
0x85d: V601 = 0x1
0x85f: V602 = 0x0
0x862: V603 = S[0x1]
0x864: V604 = 0x100
0x867: V605 = EXP 0x100 0x0
0x869: V606 = DIV V603 0x1
0x86a: V607 = 0xffffffffffffffffffffffffffffffffffffffff
0x87f: V608 = AND 0xffffffffffffffffffffffffffffffffffffffff V606
0x880: V609 = 0xffffffffffffffffffffffffffffffffffffffff
0x895: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V608
0x896: V611 = 0x2e1a7d4d
0x89c: V612 = 0x40
0x89e: V613 = M[0x40]
0x8a0: V614 = 0xffffffff
0x8a5: V615 = AND 0xffffffff 0x2e1a7d4d
0x8a6: V616 = 0x100000000000000000000000000000000000000000000000000000000
0x8c4: V617 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x2e1a7d4d
0x8c6: M[V613] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x8c7: V618 = 0x4
0x8c9: V619 = ADD 0x4 V613
0x8cd: M[V619] = V1329
0x8ce: V620 = 0x20
0x8d0: V621 = ADD 0x20 V619
0x8d4: V622 = 0x0
0x8d6: V623 = 0x40
0x8d8: V624 = M[0x40]
0x8db: V625 = SUB V621 V624
0x8dd: V626 = 0x0
0x8e1: V627 = EXTCODESIZE V610
0x8e2: V628 = ISZERO V627
0x8e3: V629 = ISZERO V628
0x8e4: V630 = 0x8ec
0x8e7: JUMPI 0x8ec V629
---
Entry stack: [S11, S10, S9, V11, S7, S6, S5, S4, S3, S2, S1, V1329]
Stack pops: 2
Stack additions: [S0, V610, 0x2e1a7d4d, V621, 0x0, V624, V625, V624, 0x0, V610]
Exit stack: [S11, S10, S9, V11, S7, S6, S5, S4, S3, S2, V1329, V610, 0x2e1a7d4d, V621, 0x0, V624, V625, V624, 0x0, V610]

================================

Block 0x8e8
[0x8e8:0x8eb]
---
Predecessors: [0x85a]
Successors: []
---
0x8e8 PUSH1 0x0
0x8ea DUP1
0x8eb REVERT
---
0x8e8: V631 = 0x0
0x8eb: REVERT 0x0 0x0
---
Entry stack: [S18, S17, V11, S15, S14, S13, S12, S11, S10, S9, V610, 0x2e1a7d4d, V621, 0x0, V624, V625, V624, 0x0, V610]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, V11, S15, S14, S13, S12, S11, S10, S9, V610, 0x2e1a7d4d, V621, 0x0, V624, V625, V624, 0x0, V610]

================================

Block 0x8ec
[0x8ec:0x8f4]
---
Predecessors: [0x85a]
Successors: [0x8f5, 0x8f9]
---
0x8ec JUMPDEST
0x8ed GAS
0x8ee CALL
0x8ef ISZERO
0x8f0 ISZERO
0x8f1 PUSH2 0x8f9
0x8f4 JUMPI
---
0x8ec: JUMPDEST 
0x8ed: V632 = GAS
0x8ee: V633 = CALL V632 V610 0x0 V624 V625 V624 0x0
0x8ef: V634 = ISZERO V633
0x8f0: V635 = ISZERO V634
0x8f1: V636 = 0x8f9
0x8f4: JUMPI 0x8f9 V635
---
Entry stack: [S18, S17, V11, S15, S14, S13, S12, S11, S10, S9, V610, 0x2e1a7d4d, V621, 0x0, V624, V625, V624, 0x0, V610]
Stack pops: 6
Stack additions: []
Exit stack: [S18, S17, V11, S15, S14, S13, S12, S11, S10, S9, V610, 0x2e1a7d4d, V621]

================================

Block 0x8f5
[0x8f5:0x8f8]
---
Predecessors: [0x8ec]
Successors: []
---
0x8f5 PUSH1 0x0
0x8f7 DUP1
0x8f8 REVERT
---
0x8f5: V637 = 0x0
0x8f8: REVERT 0x0 0x0
---
Entry stack: [S12, S11, V11, S9, S8, S7, S6, S5, S4, S3, S2, 0x2e1a7d4d, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, V11, S9, S8, S7, S6, S5, S4, S3, S2, 0x2e1a7d4d, S0]

================================

Block 0x8f9
[0x8f9:0x937]
---
Predecessors: [0x8ec]
Successors: [0x938, 0x93c]
---
0x8f9 JUMPDEST
0x8fa POP
0x8fb POP
0x8fc POP
0x8fd CALLER
0x8fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x913 AND
0x914 PUSH2 0x8fc
0x917 DUP3
0x918 SWAP1
0x919 DUP2
0x91a ISZERO
0x91b MUL
0x91c SWAP1
0x91d PUSH1 0x40
0x91f MLOAD
0x920 PUSH1 0x0
0x922 PUSH1 0x40
0x924 MLOAD
0x925 DUP1
0x926 DUP4
0x927 SUB
0x928 DUP2
0x929 DUP6
0x92a DUP9
0x92b DUP9
0x92c CALL
0x92d SWAP4
0x92e POP
0x92f POP
0x930 POP
0x931 POP
0x932 ISZERO
0x933 ISZERO
0x934 PUSH2 0x93c
0x937 JUMPI
---
0x8f9: JUMPDEST 
0x8fd: V638 = CALLER
0x8fe: V639 = 0xffffffffffffffffffffffffffffffffffffffff
0x913: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff V638
0x914: V641 = 0x8fc
0x91a: V642 = ISZERO S3
0x91b: V643 = MUL V642 0x8fc
0x91d: V644 = 0x40
0x91f: V645 = M[0x40]
0x920: V646 = 0x0
0x922: V647 = 0x40
0x924: V648 = M[0x40]
0x927: V649 = SUB V645 V648
0x92c: V650 = CALL V643 V640 S3 V648 V649 V648 0x0
0x932: V651 = ISZERO V650
0x933: V652 = ISZERO V651
0x934: V653 = 0x93c
0x937: JUMPI 0x93c V652
---
Entry stack: [S12, S11, V11, S9, S8, S7, S6, S5, S4, S3, S2, 0x2e1a7d4d, S0]
Stack pops: 4
Stack additions: [S3]
Exit stack: [S12, S11, V11, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x938
[0x938:0x93b]
---
Predecessors: [0x8f9]
Successors: []
---
0x938 PUSH1 0x0
0x93a DUP1
0x93b REVERT
---
0x938: V654 = 0x0
0x93b: REVERT 0x0 0x0
---
Entry stack: [S9, S8, V11, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S9, S8, V11, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x93c
[0x93c:0x94b]
---
Predecessors: [0x8f9]
Successors: []
Has unresolved jump.
---
0x93c JUMPDEST
0x93d DUP1
0x93e SWAP3
0x93f POP
0x940 POP
0x941 POP
0x942 SWAP8
0x943 SWAP7
0x944 POP
0x945 POP
0x946 POP
0x947 POP
0x948 POP
0x949 POP
0x94a POP
0x94b JUMP
---
0x93c: JUMPDEST 
0x94b: JUMP S10
---
Entry stack: [S9, S8, V11, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x94c
[0x94c:0x96b]
---
Predecessors: [0x17c]
Successors: [0x1a8]
---
0x94c JUMPDEST
0x94d PUSH1 0x3
0x94f PUSH1 0x20
0x951 MSTORE
0x952 DUP1
0x953 PUSH1 0x0
0x955 MSTORE
0x956 PUSH1 0x40
0x958 PUSH1 0x0
0x95a SHA3
0x95b PUSH1 0x0
0x95d SWAP2
0x95e POP
0x95f SLOAD
0x960 SWAP1
0x961 PUSH2 0x100
0x964 EXP
0x965 SWAP1
0x966 DIV
0x967 PUSH1 0xff
0x969 AND
0x96a DUP2
0x96b JUMP
---
0x94c: JUMPDEST 
0x94d: V655 = 0x3
0x94f: V656 = 0x20
0x951: M[0x20] = 0x3
0x953: V657 = 0x0
0x955: M[0x0] = V123
0x956: V658 = 0x40
0x958: V659 = 0x0
0x95a: V660 = SHA3 0x0 0x40
0x95b: V661 = 0x0
0x95f: V662 = S[V660]
0x961: V663 = 0x100
0x964: V664 = EXP 0x100 0x0
0x966: V665 = DIV V662 0x1
0x967: V666 = 0xff
0x969: V667 = AND 0xff V665
0x96b: JUMP 0x1a8
---
Entry stack: [V11, 0x1a8, V123]
Stack pops: 2
Stack additions: [S1, V667]
Exit stack: [V11, 0x1a8, V667]

================================

Block 0x96c
[0x96c:0x990]
---
Predecessors: [0x1cd]
Successors: [0x1d5]
---
0x96c JUMPDEST
0x96d PUSH1 0x0
0x96f DUP1
0x970 SWAP1
0x971 SLOAD
0x972 SWAP1
0x973 PUSH2 0x100
0x976 EXP
0x977 SWAP1
0x978 DIV
0x979 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98e AND
0x98f DUP2
0x990 JUMP
---
0x96c: JUMPDEST 
0x96d: V668 = 0x0
0x971: V669 = S[0x0]
0x973: V670 = 0x100
0x976: V671 = EXP 0x100 0x0
0x978: V672 = DIV V669 0x1
0x979: V673 = 0xffffffffffffffffffffffffffffffffffffffff
0x98e: V674 = AND 0xffffffffffffffffffffffffffffffffffffffff V672
0x990: JUMP 0x1d5
---
Entry stack: [V11, 0x1d5]
Stack pops: 1
Stack additions: [S0, V674]
Exit stack: [V11, 0x1d5, V674]

================================

Block 0x991
[0x991:0x99f]
---
Predecessors: [0x222, 0x850, 0xdf2]
Successors: [0x13cc]
---
0x991 JUMPDEST
0x992 PUSH1 0x0
0x994 PUSH2 0x9a6
0x997 PUSH2 0x9a0
0x99a DUP6
0x99b DUP5
0x99c PUSH2 0x13cc
0x99f JUMP
---
0x991: JUMPDEST 
0x992: V675 = 0x0
0x994: V676 = 0x9a6
0x997: V677 = 0x9a0
0x99c: V678 = 0x13cc
0x99f: JUMP 0x13cc
---
Entry stack: [S18, S17, V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x24a, 0x85a, 0xdfc}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x9a6, 0x9a0, S2, S0]
Exit stack: [S18, S17, V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x24a, 0x85a, 0xdfc}, S2, S1, S0, 0x0, 0x9a6, 0x9a0, S2, S0]

================================

Block 0x9a0
[0x9a0:0x9a5]
---
Predecessors: [0x13fe]
Successors: [0x1404]
---
0x9a0 JUMPDEST
0x9a1 DUP5
0x9a2 PUSH2 0x1404
0x9a5 JUMP
---
0x9a0: JUMPDEST 
0x9a2: V679 = 0x1404
0x9a5: JUMP 0x1404
---
Entry stack: [S17, S16, S15, V11, S13, S12, S11, S10, S9, S8, S7, {0x24a, 0x85a, 0xdfc}, S5, S4, S3, 0x0, 0x9a6, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4]
Exit stack: [S17, S16, S15, V11, S13, S12, S11, S10, S9, S8, S7, {0x24a, 0x85a, 0xdfc}, S5, S4, S3, 0x0, 0x9a6, S0, S4]

================================

Block 0x9a6
[0x9a6:0x9ae]
---
Predecessors: [0x1411]
Successors: [0x24a, 0x85a, 0xdfc]
---
0x9a6 JUMPDEST
0x9a7 SWAP1
0x9a8 POP
0x9a9 SWAP4
0x9aa SWAP3
0x9ab POP
0x9ac POP
0x9ad POP
0x9ae JUMP
---
0x9a6: JUMPDEST 
0x9ae: JUMP {0x24a, 0x85a, 0xdfc}
---
Entry stack: [S16, S15, S14, V11, S12, S11, S10, S9, S8, S7, S6, {0x24a, 0x85a, 0xdfc}, S4, S3, S2, 0x0, V1329]
Stack pops: 6
Stack additions: [S0]
Exit stack: [S16, S15, S14, V11, S12, S11, S10, S9, S8, S7, S6, V1329]

================================

Block 0x9af
[0x9af:0x9d4]
---
Predecessors: [0x26b]
Successors: [0x273]
---
0x9af JUMPDEST
0x9b0 PUSH1 0x2
0x9b2 PUSH1 0x0
0x9b4 SWAP1
0x9b5 SLOAD
0x9b6 SWAP1
0x9b7 PUSH2 0x100
0x9ba EXP
0x9bb SWAP1
0x9bc DIV
0x9bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d2 AND
0x9d3 DUP2
0x9d4 JUMP
---
0x9af: JUMPDEST 
0x9b0: V680 = 0x2
0x9b2: V681 = 0x0
0x9b5: V682 = S[0x2]
0x9b7: V683 = 0x100
0x9ba: V684 = EXP 0x100 0x0
0x9bc: V685 = DIV V682 0x1
0x9bd: V686 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d2: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff V685
0x9d4: JUMP 0x273
---
Entry stack: [V11, 0x273]
Stack pops: 1
Stack additions: [S0, V687]
Exit stack: [V11, 0x273, V687]

================================

Block 0x9d5
[0x9d5:0x9de]
---
Predecessors: [0x2b5]
Successors: [0x141a]
---
0x9d5 JUMPDEST
0x9d6 PUSH1 0x0
0x9d8 PUSH2 0x9df
0x9db PUSH2 0x141a
0x9de JUMP
---
0x9d5: JUMPDEST 
0x9d6: V688 = 0x0
0x9d8: V689 = 0x9df
0x9db: V690 = 0x141a
0x9de: JUMP 0x141a
---
Entry stack: [V11, 0x309, 0x4, 0x104, V201, V204, V209, V215, V221]
Stack pops: 0
Stack additions: [0x0, 0x9df]
Exit stack: [V11, 0x309, 0x4, 0x104, V201, V204, V209, V215, V221, 0x0, 0x9df]

================================

Block 0x9df
[0x9df:0xa35]
---
Predecessors: [0x1453]
Successors: [0x103b]
---
0x9df JUMPDEST
0x9e0 PUSH1 0x0
0x9e2 DUP1
0x9e3 PUSH2 0xa36
0x9e6 DUP12
0x9e7 PUSH1 0x8
0x9e9 DUP1
0x9ea PUSH1 0x20
0x9ec MUL
0x9ed PUSH1 0x40
0x9ef MLOAD
0x9f0 SWAP1
0x9f1 DUP2
0x9f2 ADD
0x9f3 PUSH1 0x40
0x9f5 MSTORE
0x9f6 DUP1
0x9f7 SWAP3
0x9f8 SWAP2
0x9f9 SWAP1
0x9fa DUP3
0x9fb PUSH1 0x8
0x9fd PUSH1 0x20
0x9ff MUL
0xa00 DUP1
0xa01 DUP3
0xa02 DUP5
0xa03 CALLDATACOPY
0xa04 DUP3
0xa05 ADD
0xa06 SWAP2
0xa07 POP
0xa08 POP
0xa09 POP
0xa0a POP
0xa0b POP
0xa0c DUP12
0xa0d PUSH1 0x6
0xa0f DUP1
0xa10 PUSH1 0x20
0xa12 MUL
0xa13 PUSH1 0x40
0xa15 MLOAD
0xa16 SWAP1
0xa17 DUP2
0xa18 ADD
0xa19 PUSH1 0x40
0xa1b MSTORE
0xa1c DUP1
0xa1d SWAP3
0xa1e SWAP2
0xa1f SWAP1
0xa20 DUP3
0xa21 PUSH1 0x6
0xa23 PUSH1 0x20
0xa25 MUL
0xa26 DUP1
0xa27 DUP3
0xa28 DUP5
0xa29 CALLDATACOPY
0xa2a DUP3
0xa2b ADD
0xa2c SWAP2
0xa2d POP
0xa2e POP
0xa2f POP
0xa30 POP
0xa31 POP
0xa32 PUSH2 0x103b
0xa35 JUMP
---
0x9df: JUMPDEST 
0x9e0: V691 = 0x0
0x9e3: V692 = 0xa36
0x9e7: V693 = 0x8
0x9ea: V694 = 0x20
0x9ec: V695 = MUL 0x20 0x8
0x9ed: V696 = 0x40
0x9ef: V697 = M[0x40]
0x9f2: V698 = ADD V697 0x100
0x9f3: V699 = 0x40
0x9f5: M[0x40] = V698
0x9fb: V700 = 0x8
0x9fd: V701 = 0x20
0x9ff: V702 = MUL 0x20 0x8
0xa03: CALLDATACOPY V697 S8 0x100
0xa05: V703 = ADD V697 0x100
0xa0d: V704 = 0x6
0xa10: V705 = 0x20
0xa12: V706 = MUL 0x20 0x6
0xa13: V707 = 0x40
0xa15: V708 = M[0x40]
0xa18: V709 = ADD V708 0xc0
0xa19: V710 = 0x40
0xa1b: M[0x40] = V709
0xa21: V711 = 0x6
0xa23: V712 = 0x20
0xa25: V713 = MUL 0x20 0x6
0xa29: CALLDATACOPY V708 S7 0xc0
0xa2b: V714 = ADD V708 0xc0
0xa32: V715 = 0x103b
0xa35: JUMP 0x103b
---
Entry stack: [S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1332]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, 0xa36, V697, V708]
Exit stack: [S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1332, 0x0, 0x0, 0xa36, V697, V708]

================================

Block 0xa36
[0xa36:0xa3c]
---
Predecessors: [0x1105]
Successors: [0xa3d, 0xa41]
---
0xa36 JUMPDEST
0xa37 ISZERO
0xa38 ISZERO
0xa39 PUSH2 0xa41
0xa3c JUMPI
---
0xa36: JUMPDEST 
0xa37: V716 = ISZERO S0
0xa38: V717 = ISZERO V716
0xa39: V718 = 0xa41
0xa3c: JUMPI 0xa41 V717
---
Entry stack: [S21, S20, S19, V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S21, S20, S19, V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0]

================================

Block 0xa3d
[0xa3d:0xa40]
---
Predecessors: [0xa36]
Successors: []
---
0xa3d PUSH1 0x0
0xa3f DUP1
0xa40 REVERT
---
0xa3d: V719 = 0x0
0xa40: REVERT 0x0 0x0
---
Entry stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0xa41
[0xa41:0xa87]
---
Predecessors: [0xa36]
Successors: [0xa88, 0xa89]
---
0xa41 JUMPDEST
0xa42 PUSH1 0x1
0xa44 PUSH1 0x0
0xa46 SWAP1
0xa47 SLOAD
0xa48 SWAP1
0xa49 PUSH2 0x100
0xa4c EXP
0xa4d SWAP1
0xa4e DIV
0xa4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa64 AND
0xa65 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7a AND
0xa7b DUP12
0xa7c PUSH1 0x3
0xa7e PUSH1 0x8
0xa80 DUP2
0xa81 LT
0xa82 ISZERO
0xa83 ISZERO
0xa84 PUSH2 0xa89
0xa87 JUMPI
---
0xa41: JUMPDEST 
0xa42: V720 = 0x1
0xa44: V721 = 0x0
0xa47: V722 = S[0x1]
0xa49: V723 = 0x100
0xa4c: V724 = EXP 0x100 0x0
0xa4e: V725 = DIV V722 0x1
0xa4f: V726 = 0xffffffffffffffffffffffffffffffffffffffff
0xa64: V727 = AND 0xffffffffffffffffffffffffffffffffffffffff V725
0xa65: V728 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7a: V729 = AND 0xffffffffffffffffffffffffffffffffffffffff V727
0xa7c: V730 = 0x3
0xa7e: V731 = 0x8
0xa81: V732 = LT 0x3 0x8
0xa82: V733 = ISZERO 0x1
0xa83: V734 = ISZERO 0x0
0xa84: V735 = 0xa89
0xa87: JUMPI 0xa89 0x1
---
Entry stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V729, S10, 0x3]
Exit stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0, V729, S10, 0x3]

================================

Block 0xa88
[0xa88:0xa88]
---
Predecessors: [0xa41]
Successors: []
---
0xa88 INVALID
---
0xa88: INVALID 
---
Entry stack: [S23, S22, S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, V729, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [S23, S22, S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, V729, S1, 0x3]

================================

Block 0xa89
[0xa89:0xac1]
---
Predecessors: [0xa41]
Successors: [0xac2, 0xac6]
---
0xa89 JUMPDEST
0xa8a PUSH1 0x20
0xa8c MUL
0xa8d ADD
0xa8e CALLDATALOAD
0xa8f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa4 AND
0xaa5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaba AND
0xabb EQ
0xabc ISZERO
0xabd ISZERO
0xabe PUSH2 0xac6
0xac1 JUMPI
---
0xa89: JUMPDEST 
0xa8a: V736 = 0x20
0xa8c: V737 = MUL 0x20 0x3
0xa8d: V738 = ADD 0x60 S1
0xa8e: V739 = CALLDATALOAD V738
0xa8f: V740 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa4: V741 = AND 0xffffffffffffffffffffffffffffffffffffffff V739
0xaa5: V742 = 0xffffffffffffffffffffffffffffffffffffffff
0xaba: V743 = AND 0xffffffffffffffffffffffffffffffffffffffff V741
0xabb: V744 = EQ V743 V729
0xabc: V745 = ISZERO V744
0xabd: V746 = ISZERO V745
0xabe: V747 = 0xac6
0xac1: JUMPI 0xac6 V746
---
Entry stack: [S23, S22, S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, V729, S1, 0x3]
Stack pops: 3
Stack additions: []
Exit stack: [S23, S22, S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0]

================================

Block 0xac2
[0xac2:0xac5]
---
Predecessors: [0xa89]
Successors: []
---
0xac2 PUSH1 0x0
0xac4 DUP1
0xac5 REVERT
---
0xac2: V748 = 0x0
0xac5: REVERT 0x0 0x0
---
Entry stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0xac6
[0xac6:0xacf]
---
Predecessors: [0xa89]
Successors: [0xad0, 0xad4]
---
0xac6 JUMPDEST
0xac7 CALLVALUE
0xac8 DUP9
0xac9 EQ
0xaca ISZERO
0xacb ISZERO
0xacc PUSH2 0xad4
0xacf JUMPI
---
0xac6: JUMPDEST 
0xac7: V749 = CALLVALUE
0xac9: V750 = EQ S7 V749
0xaca: V751 = ISZERO V750
0xacb: V752 = ISZERO V751
0xacc: V753 = 0xad4
0xacf: JUMPI 0xad4 V752
---
Entry stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0xad0
[0xad0:0xad3]
---
Predecessors: [0xac6]
Successors: []
---
0xad0 PUSH1 0x0
0xad2 DUP1
0xad3 REVERT
---
0xad0: V754 = 0x0
0xad3: REVERT 0x0 0x0
---
Entry stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0xad4
[0xad4:0xb54]
---
Predecessors: [0xac6]
Successors: [0xb55, 0xb59]
---
0xad4 JUMPDEST
0xad5 PUSH1 0x1
0xad7 PUSH1 0x0
0xad9 SWAP1
0xada SLOAD
0xadb SWAP1
0xadc PUSH2 0x100
0xadf EXP
0xae0 SWAP1
0xae1 DIV
0xae2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf7 AND
0xaf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0d AND
0xb0e PUSH4 0xd0e30db0
0xb13 DUP10
0xb14 PUSH1 0x40
0xb16 MLOAD
0xb17 DUP3
0xb18 PUSH4 0xffffffff
0xb1d AND
0xb1e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb3c MUL
0xb3d DUP2
0xb3e MSTORE
0xb3f PUSH1 0x4
0xb41 ADD
0xb42 PUSH1 0x0
0xb44 PUSH1 0x40
0xb46 MLOAD
0xb47 DUP1
0xb48 DUP4
0xb49 SUB
0xb4a DUP2
0xb4b DUP6
0xb4c DUP9
0xb4d DUP1
0xb4e EXTCODESIZE
0xb4f ISZERO
0xb50 ISZERO
0xb51 PUSH2 0xb59
0xb54 JUMPI
---
0xad4: JUMPDEST 
0xad5: V755 = 0x1
0xad7: V756 = 0x0
0xada: V757 = S[0x1]
0xadc: V758 = 0x100
0xadf: V759 = EXP 0x100 0x0
0xae1: V760 = DIV V757 0x1
0xae2: V761 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf7: V762 = AND 0xffffffffffffffffffffffffffffffffffffffff V760
0xaf8: V763 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0d: V764 = AND 0xffffffffffffffffffffffffffffffffffffffff V762
0xb0e: V765 = 0xd0e30db0
0xb14: V766 = 0x40
0xb16: V767 = M[0x40]
0xb18: V768 = 0xffffffff
0xb1d: V769 = AND 0xffffffff 0xd0e30db0
0xb1e: V770 = 0x100000000000000000000000000000000000000000000000000000000
0xb3c: V771 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0xb3e: M[V767] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0xb3f: V772 = 0x4
0xb41: V773 = ADD 0x4 V767
0xb42: V774 = 0x0
0xb44: V775 = 0x40
0xb46: V776 = M[0x40]
0xb49: V777 = SUB V773 V776
0xb4e: V778 = EXTCODESIZE V764
0xb4f: V779 = ISZERO V778
0xb50: V780 = ISZERO V779
0xb51: V781 = 0xb59
0xb54: JUMPI 0xb59 V780
---
Entry stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, V764, 0xd0e30db0, S7, V773, 0x0, V776, V777, V776, S7, V764]
Exit stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0, V764, 0xd0e30db0, S7, V773, 0x0, V776, V777, V776, S7, V764]

================================

Block 0xb55
[0xb55:0xb58]
---
Predecessors: [0xad4]
Successors: []
---
0xb55 PUSH1 0x0
0xb57 DUP1
0xb58 REVERT
---
0xb55: V782 = 0x0
0xb58: REVERT 0x0 0x0
---
Entry stack: [S28, V11, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V764, 0xd0e30db0, S7, V773, 0x0, V776, V777, V776, S1, V764]
Stack pops: 0
Stack additions: []
Exit stack: [S28, V11, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V764, 0xd0e30db0, S7, V773, 0x0, V776, V777, V776, S1, V764]

================================

Block 0xb59
[0xb59:0xb61]
---
Predecessors: [0xad4]
Successors: [0xb62, 0xb66]
---
0xb59 JUMPDEST
0xb5a GAS
0xb5b CALL
0xb5c ISZERO
0xb5d ISZERO
0xb5e PUSH2 0xb66
0xb61 JUMPI
---
0xb59: JUMPDEST 
0xb5a: V783 = GAS
0xb5b: V784 = CALL V783 V764 S1 V776 V777 V776 0x0
0xb5c: V785 = ISZERO V784
0xb5d: V786 = ISZERO V785
0xb5e: V787 = 0xb66
0xb61: JUMPI 0xb66 V786
---
Entry stack: [S28, V11, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V764, 0xd0e30db0, S7, V773, 0x0, V776, V777, V776, S1, V764]
Stack pops: 6
Stack additions: []
Exit stack: [S28, V11, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V764, 0xd0e30db0, S7, V773]

================================

Block 0xb62
[0xb62:0xb65]
---
Predecessors: [0xb59]
Successors: []
---
0xb62 PUSH1 0x0
0xb64 DUP1
0xb65 REVERT
---
0xb62: V788 = 0x0
0xb65: REVERT 0x0 0x0
---
Entry stack: [S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V764, 0xd0e30db0, S1, V773]
Stack pops: 0
Stack additions: []
Exit stack: [S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V764, 0xd0e30db0, S1, V773]

================================

Block 0xb66
[0xb66:0xb97]
---
Predecessors: [0xb59]
Successors: [0x110d]
---
0xb66 JUMPDEST
0xb67 POP
0xb68 POP
0xb69 POP
0xb6a POP
0xb6b PUSH2 0xb98
0xb6e DUP12
0xb6f PUSH1 0x8
0xb71 DUP1
0xb72 PUSH1 0x20
0xb74 MUL
0xb75 PUSH1 0x40
0xb77 MLOAD
0xb78 SWAP1
0xb79 DUP2
0xb7a ADD
0xb7b PUSH1 0x40
0xb7d MSTORE
0xb7e DUP1
0xb7f SWAP3
0xb80 SWAP2
0xb81 SWAP1
0xb82 DUP3
0xb83 PUSH1 0x8
0xb85 PUSH1 0x20
0xb87 MUL
0xb88 DUP1
0xb89 DUP3
0xb8a DUP5
0xb8b CALLDATACOPY
0xb8c DUP3
0xb8d ADD
0xb8e SWAP2
0xb8f POP
0xb90 POP
0xb91 POP
0xb92 POP
0xb93 POP
0xb94 PUSH2 0x110d
0xb97 JUMP
---
0xb66: JUMPDEST 
0xb6b: V789 = 0xb98
0xb6f: V790 = 0x8
0xb72: V791 = 0x20
0xb74: V792 = MUL 0x20 0x8
0xb75: V793 = 0x40
0xb77: V794 = M[0x40]
0xb7a: V795 = ADD V794 0x100
0xb7b: V796 = 0x40
0xb7d: M[0x40] = V795
0xb83: V797 = 0x8
0xb85: V798 = 0x20
0xb87: V799 = MUL 0x20 0x8
0xb8b: CALLDATACOPY V794 S14 0x100
0xb8d: V800 = ADD V794 0x100
0xb94: V801 = 0x110d
0xb97: JUMP 0x110d
---
Entry stack: [S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V764, 0xd0e30db0, S1, V773]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xb98, V794]
Exit stack: [S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, 0xb98, V794]

================================

Block 0xb98
[0xb98:0xc14]
---
Predecessors: [0x5a7, 0x1189]
Successors: [0xc15]
---
0xb98 JUMPDEST
0xb99 SWAP3
0xb9a POP
0xb9b PUSH1 0x2
0xb9d PUSH1 0x0
0xb9f SWAP1
0xba0 SLOAD
0xba1 SWAP1
0xba2 PUSH2 0x100
0xba5 EXP
0xba6 SWAP1
0xba7 DIV
0xba8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbbd AND
0xbbe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd3 AND
0xbd4 PUSH4 0xcfc4d0ec
0xbd9 DUP5
0xbda DUP13
0xbdb PUSH1 0x40
0xbdd MLOAD
0xbde DUP4
0xbdf PUSH4 0xffffffff
0xbe4 AND
0xbe5 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc03 MUL
0xc04 DUP2
0xc05 MSTORE
0xc06 PUSH1 0x4
0xc08 ADD
0xc09 DUP1
0xc0a DUP4
0xc0b PUSH1 0x5
0xc0d PUSH1 0x20
0xc0f MUL
0xc10 DUP1
0xc11 DUP4
0xc12 DUP4
0xc13 PUSH1 0x0
---
0xb98: JUMPDEST 
0xb9b: V802 = 0x2
0xb9d: V803 = 0x0
0xba0: V804 = S[0x2]
0xba2: V805 = 0x100
0xba5: V806 = EXP 0x100 0x0
0xba7: V807 = DIV V804 0x1
0xba8: V808 = 0xffffffffffffffffffffffffffffffffffffffff
0xbbd: V809 = AND 0xffffffffffffffffffffffffffffffffffffffff V807
0xbbe: V810 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd3: V811 = AND 0xffffffffffffffffffffffffffffffffffffffff V809
0xbd4: V812 = 0xcfc4d0ec
0xbdb: V813 = 0x40
0xbdd: V814 = M[0x40]
0xbdf: V815 = 0xffffffff
0xbe4: V816 = AND 0xffffffff 0xcfc4d0ec
0xbe5: V817 = 0x100000000000000000000000000000000000000000000000000000000
0xc03: V818 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xcfc4d0ec
0xc05: M[V814] = 0xcfc4d0ec00000000000000000000000000000000000000000000000000000000
0xc06: V819 = 0x4
0xc08: V820 = ADD 0x4 V814
0xc0b: V821 = 0x5
0xc0d: V822 = 0x20
0xc0f: V823 = MUL 0x20 0x5
0xc13: V824 = 0x0
---
Entry stack: [S19, V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1332]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S0, S2, S1, V811, 0xcfc4d0ec, S0, S10, V820, V820, S0, 0xa0, 0xa0, V820, S0, 0x0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S0, S2, S1, V811, 0xcfc4d0ec, S0, S10, V820, V820, S0, 0xa0, 0xa0, V820, S0, 0x0]

================================

Block 0xc15
[0xc15:0xc1d]
---
Predecessors: [0xb98, 0xc1e]
Successors: [0xc1e, 0xc30]
---
0xc15 JUMPDEST
0xc16 DUP4
0xc17 DUP2
0xc18 LT
0xc19 ISZERO
0xc1a PUSH2 0xc30
0xc1d JUMPI
---
0xc15: JUMPDEST 
0xc18: V825 = LT S0 0xa0
0xc19: V826 = ISZERO V825
0xc1a: V827 = 0xc30
0xc1d: JUMPI 0xc30 V826
---
Entry stack: [S27, S26, S25, V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, V1332, S13, S12, V811, 0xcfc4d0ec, V1332, S8, V820, V820, V1332, 0xa0, 0xa0, V820, V1332, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S27, S26, S25, V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, V1332, S13, S12, V811, 0xcfc4d0ec, V1332, S8, V820, V820, V1332, 0xa0, 0xa0, V820, V1332, S0]

================================

Block 0xc1e
[0xc1e:0xc2f]
---
Predecessors: [0xc15]
Successors: [0xc15]
---
0xc1e DUP1
0xc1f DUP3
0xc20 ADD
0xc21 MLOAD
0xc22 DUP2
0xc23 DUP5
0xc24 ADD
0xc25 MSTORE
0xc26 PUSH1 0x20
0xc28 DUP2
0xc29 ADD
0xc2a SWAP1
0xc2b POP
0xc2c PUSH2 0xc15
0xc2f JUMP
---
0xc20: V828 = ADD V1332 S0
0xc21: V829 = M[V828]
0xc24: V830 = ADD V820 S0
0xc25: M[V830] = V829
0xc26: V831 = 0x20
0xc29: V832 = ADD S0 0x20
0xc2c: V833 = 0xc15
0xc2f: JUMP 0xc15
---
Entry stack: [S27, S26, S25, V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, V1332, S13, S12, V811, 0xcfc4d0ec, V1332, S8, V820, V820, V1332, 0xa0, 0xa0, V820, V1332, S0]
Stack pops: 3
Stack additions: [S2, S1, V832]
Exit stack: [S27, S26, S25, V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, V1332, S13, S12, V811, 0xcfc4d0ec, V1332, S8, V820, V820, V1332, 0xa0, 0xa0, V820, V1332, V832]

================================

Block 0xc30
[0xc30:0xc5e]
---
Predecessors: [0xc15]
Successors: [0xc5f, 0xc63]
---
0xc30 JUMPDEST
0xc31 POP
0xc32 POP
0xc33 POP
0xc34 POP
0xc35 SWAP1
0xc36 POP
0xc37 ADD
0xc38 DUP3
0xc39 PUSH1 0x6
0xc3b PUSH1 0x20
0xc3d MUL
0xc3e DUP1
0xc3f DUP3
0xc40 DUP5
0xc41 CALLDATACOPY
0xc42 DUP3
0xc43 ADD
0xc44 SWAP2
0xc45 POP
0xc46 POP
0xc47 SWAP3
0xc48 POP
0xc49 POP
0xc4a POP
0xc4b PUSH1 0x20
0xc4d PUSH1 0x40
0xc4f MLOAD
0xc50 DUP1
0xc51 DUP4
0xc52 SUB
0xc53 DUP2
0xc54 PUSH1 0x0
0xc56 DUP8
0xc57 DUP1
0xc58 EXTCODESIZE
0xc59 ISZERO
0xc5a ISZERO
0xc5b PUSH2 0xc63
0xc5e JUMPI
---
0xc30: JUMPDEST 
0xc37: V834 = ADD 0xa0 V820
0xc39: V835 = 0x6
0xc3b: V836 = 0x20
0xc3d: V837 = MUL 0x20 0x6
0xc41: CALLDATACOPY V834 S8 0xc0
0xc43: V838 = ADD V834 0xc0
0xc4b: V839 = 0x20
0xc4d: V840 = 0x40
0xc4f: V841 = M[0x40]
0xc52: V842 = SUB V838 V841
0xc54: V843 = 0x0
0xc58: V844 = EXTCODESIZE V811
0xc59: V845 = ISZERO V844
0xc5a: V846 = ISZERO V845
0xc5b: V847 = 0xc63
0xc5e: JUMPI 0xc63 V846
---
Entry stack: [S27, S26, S25, V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, V1332, S13, S12, V811, 0xcfc4d0ec, V1332, S8, V820, V820, V1332, 0xa0, 0xa0, V820, V1332, S0]
Stack pops: 12
Stack additions: [S11, S10, V838, 0x20, V841, V842, V841, 0x0, S11]
Exit stack: [S27, S26, S25, V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, V1332, S13, S12, V811, 0xcfc4d0ec, V838, 0x20, V841, V842, V841, 0x0, V811]

================================

Block 0xc5f
[0xc5f:0xc62]
---
Predecessors: [0xc30]
Successors: []
---
0xc5f PUSH1 0x0
0xc61 DUP1
0xc62 REVERT
---
0xc5f: V848 = 0x0
0xc62: REVERT 0x0 0x0
---
Entry stack: [S24, S23, S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, V1332, S10, S9, V811, 0xcfc4d0ec, V838, 0x20, V841, V842, V841, 0x0, V811]
Stack pops: 0
Stack additions: []
Exit stack: [S24, S23, S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, V1332, S10, S9, V811, 0xcfc4d0ec, V838, 0x20, V841, V842, V841, 0x0, V811]

================================

Block 0xc63
[0xc63:0xc6b]
---
Predecessors: [0xc30]
Successors: [0xc6c, 0xc70]
---
0xc63 JUMPDEST
0xc64 GAS
0xc65 CALL
0xc66 ISZERO
0xc67 ISZERO
0xc68 PUSH2 0xc70
0xc6b JUMPI
---
0xc63: JUMPDEST 
0xc64: V849 = GAS
0xc65: V850 = CALL V849 V811 0x0 V841 V842 V841 0x20
0xc66: V851 = ISZERO V850
0xc67: V852 = ISZERO V851
0xc68: V853 = 0xc70
0xc6b: JUMPI 0xc70 V852
---
Entry stack: [S24, S23, S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, V1332, S10, S9, V811, 0xcfc4d0ec, V838, 0x20, V841, V842, V841, 0x0, V811]
Stack pops: 6
Stack additions: []
Exit stack: [S24, S23, S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, V1332, S10, S9, V811, 0xcfc4d0ec, V838]

================================

Block 0xc6c
[0xc6c:0xc6f]
---
Predecessors: [0xc63]
Successors: []
---
0xc6c PUSH1 0x0
0xc6e DUP1
0xc6f REVERT
---
0xc6c: V854 = 0x0
0xc6f: REVERT 0x0 0x0
---
Entry stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, V1332, S4, S3, V811, 0xcfc4d0ec, V838]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, V1332, S4, S3, V811, 0xcfc4d0ec, V838]

================================

Block 0xc70
[0xc70:0xca6]
---
Predecessors: [0xc63]
Successors: [0x11a8]
---
0xc70 JUMPDEST
0xc71 POP
0xc72 POP
0xc73 POP
0xc74 PUSH1 0x40
0xc76 MLOAD
0xc77 DUP1
0xc78 MLOAD
0xc79 SWAP1
0xc7a POP
0xc7b SWAP2
0xc7c POP
0xc7d PUSH2 0xca7
0xc80 PUSH1 0x1
0xc82 PUSH1 0x0
0xc84 SWAP1
0xc85 SLOAD
0xc86 SWAP1
0xc87 PUSH2 0x100
0xc8a EXP
0xc8b SWAP1
0xc8c DIV
0xc8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca2 AND
0xca3 PUSH2 0x11a8
0xca6 JUMP
---
0xc70: JUMPDEST 
0xc74: V855 = 0x40
0xc76: V856 = M[0x40]
0xc78: V857 = M[V856]
0xc7d: V858 = 0xca7
0xc80: V859 = 0x1
0xc82: V860 = 0x0
0xc85: V861 = S[0x1]
0xc87: V862 = 0x100
0xc8a: V863 = EXP 0x100 0x0
0xc8c: V864 = DIV V861 0x1
0xc8d: V865 = 0xffffffffffffffffffffffffffffffffffffffff
0xca2: V866 = AND 0xffffffffffffffffffffffffffffffffffffffff V864
0xca3: V867 = 0x11a8
0xca6: JUMP 0x11a8
---
Entry stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, V1332, S4, S3, V811, 0xcfc4d0ec, V838]
Stack pops: 5
Stack additions: [V857, S3, 0xca7, V866]
Exit stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, V1332, V857, S3, 0xca7, V866]

================================

Block 0xca7
[0xca7:0xd27]
---
Predecessors: [0x13c9]
Successors: [0xd28]
---
0xca7 JUMPDEST
0xca8 PUSH1 0x2
0xcaa PUSH1 0x0
0xcac SWAP1
0xcad SLOAD
0xcae SWAP1
0xcaf PUSH2 0x100
0xcb2 EXP
0xcb3 SWAP1
0xcb4 DIV
0xcb5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcca AND
0xccb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce0 AND
0xce1 PUSH4 0xbc61394a
0xce6 DUP5
0xce7 DUP13
0xce8 DUP12
0xce9 PUSH1 0x1
0xceb DUP13
0xcec DUP13
0xced DUP13
0xcee PUSH1 0x40
0xcf0 MLOAD
0xcf1 DUP9
0xcf2 PUSH4 0xffffffff
0xcf7 AND
0xcf8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xd16 MUL
0xd17 DUP2
0xd18 MSTORE
0xd19 PUSH1 0x4
0xd1b ADD
0xd1c DUP1
0xd1d DUP9
0xd1e PUSH1 0x5
0xd20 PUSH1 0x20
0xd22 MUL
0xd23 DUP1
0xd24 DUP4
0xd25 DUP4
0xd26 PUSH1 0x0
---
0xca7: JUMPDEST 
0xca8: V868 = 0x2
0xcaa: V869 = 0x0
0xcad: V870 = S[0x2]
0xcaf: V871 = 0x100
0xcb2: V872 = EXP 0x100 0x0
0xcb4: V873 = DIV V870 0x1
0xcb5: V874 = 0xffffffffffffffffffffffffffffffffffffffff
0xcca: V875 = AND 0xffffffffffffffffffffffffffffffffffffffff V873
0xccb: V876 = 0xffffffffffffffffffffffffffffffffffffffff
0xce0: V877 = AND 0xffffffffffffffffffffffffffffffffffffffff V875
0xce1: V878 = 0xbc61394a
0xce9: V879 = 0x1
0xcee: V880 = 0x40
0xcf0: V881 = M[0x40]
0xcf2: V882 = 0xffffffff
0xcf7: V883 = AND 0xffffffff 0xbc61394a
0xcf8: V884 = 0x100000000000000000000000000000000000000000000000000000000
0xd16: V885 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xbc61394a
0xd18: M[V881] = 0xbc61394a00000000000000000000000000000000000000000000000000000000
0xd19: V886 = 0x4
0xd1b: V887 = ADD 0x4 V881
0xd1e: V888 = 0x5
0xd20: V889 = 0x20
0xd22: V890 = MUL 0x20 0x5
0xd26: V891 = 0x0
---
Entry stack: [S15, S14, S13, V11, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V877, 0xbc61394a, S2, S9, S7, 0x1, S6, S5, S4, V887, V887, S2, 0xa0, 0xa0, V887, S2, 0x0]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V877, 0xbc61394a, S2, S9, S7, 0x1, S6, S5, S4, V887, V887, S2, 0xa0, 0xa0, V887, S2, 0x0]

================================

Block 0xd28
[0xd28:0xd30]
---
Predecessors: [0xca7, 0xd31]
Successors: [0xd31, 0xd43]
---
0xd28 JUMPDEST
0xd29 DUP4
0xd2a DUP2
0xd2b LT
0xd2c ISZERO
0xd2d PUSH2 0xd43
0xd30 JUMPI
---
0xd28: JUMPDEST 
0xd2b: V892 = LT S0 0xa0
0xd2c: V893 = ISZERO V892
0xd2d: V894 = 0xd43
0xd30: JUMPI 0xd43 V893
---
Entry stack: [S31, S30, V11, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, V877, 0xbc61394a, S14, S13, S12, 0x1, S10, S9, S8, V887, V887, S5, 0xa0, 0xa0, V887, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S31, S30, V11, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, V877, 0xbc61394a, S14, S13, S12, 0x1, S10, S9, S8, V887, V887, S5, 0xa0, 0xa0, V887, S1, S0]

================================

Block 0xd31
[0xd31:0xd42]
---
Predecessors: [0xd28]
Successors: [0xd28]
---
0xd31 DUP1
0xd32 DUP3
0xd33 ADD
0xd34 MLOAD
0xd35 DUP2
0xd36 DUP5
0xd37 ADD
0xd38 MSTORE
0xd39 PUSH1 0x20
0xd3b DUP2
0xd3c ADD
0xd3d SWAP1
0xd3e POP
0xd3f PUSH2 0xd28
0xd42 JUMP
---
0xd33: V895 = ADD S1 S0
0xd34: V896 = M[V895]
0xd37: V897 = ADD V887 S0
0xd38: M[V897] = V896
0xd39: V898 = 0x20
0xd3c: V899 = ADD S0 0x20
0xd3f: V900 = 0xd28
0xd42: JUMP 0xd28
---
Entry stack: [S30, V11, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, V877, 0xbc61394a, S14, S13, S12, 0x1, S10, S9, S8, V887, V887, S5, 0xa0, 0xa0, V887, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, V899]
Exit stack: [S30, V11, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, V877, 0xbc61394a, S14, S13, S12, 0x1, S10, S9, S8, V887, V887, S5, 0xa0, 0xa0, V887, S1, V899]

================================

Block 0xd43
[0xd43:0xdae]
---
Predecessors: [0xd28]
Successors: [0xdaf, 0xdb3]
---
0xd43 JUMPDEST
0xd44 POP
0xd45 POP
0xd46 POP
0xd47 POP
0xd48 SWAP1
0xd49 POP
0xd4a ADD
0xd4b DUP8
0xd4c PUSH1 0x6
0xd4e PUSH1 0x20
0xd50 MUL
0xd51 DUP1
0xd52 DUP3
0xd53 DUP5
0xd54 CALLDATACOPY
0xd55 DUP3
0xd56 ADD
0xd57 SWAP2
0xd58 POP
0xd59 POP
0xd5a DUP7
0xd5b DUP2
0xd5c MSTORE
0xd5d PUSH1 0x20
0xd5f ADD
0xd60 DUP6
0xd61 ISZERO
0xd62 ISZERO
0xd63 ISZERO
0xd64 ISZERO
0xd65 DUP2
0xd66 MSTORE
0xd67 PUSH1 0x20
0xd69 ADD
0xd6a DUP5
0xd6b PUSH1 0xff
0xd6d AND
0xd6e PUSH1 0xff
0xd70 AND
0xd71 DUP2
0xd72 MSTORE
0xd73 PUSH1 0x20
0xd75 ADD
0xd76 DUP4
0xd77 PUSH1 0x0
0xd79 NOT
0xd7a AND
0xd7b PUSH1 0x0
0xd7d NOT
0xd7e AND
0xd7f DUP2
0xd80 MSTORE
0xd81 PUSH1 0x20
0xd83 ADD
0xd84 DUP3
0xd85 PUSH1 0x0
0xd87 NOT
0xd88 AND
0xd89 PUSH1 0x0
0xd8b NOT
0xd8c AND
0xd8d DUP2
0xd8e MSTORE
0xd8f PUSH1 0x20
0xd91 ADD
0xd92 SWAP8
0xd93 POP
0xd94 POP
0xd95 POP
0xd96 POP
0xd97 POP
0xd98 POP
0xd99 POP
0xd9a POP
0xd9b PUSH1 0x20
0xd9d PUSH1 0x40
0xd9f MLOAD
0xda0 DUP1
0xda1 DUP4
0xda2 SUB
0xda3 DUP2
0xda4 PUSH1 0x0
0xda6 DUP8
0xda7 DUP1
0xda8 EXTCODESIZE
0xda9 ISZERO
0xdaa ISZERO
0xdab PUSH2 0xdb3
0xdae JUMPI
---
0xd43: JUMPDEST 
0xd4a: V901 = ADD 0xa0 V887
0xd4c: V902 = 0x6
0xd4e: V903 = 0x20
0xd50: V904 = MUL 0x20 0x6
0xd54: CALLDATACOPY V901 S13 0xc0
0xd56: V905 = ADD V901 0xc0
0xd5c: M[V905] = S12
0xd5d: V906 = 0x20
0xd5f: V907 = ADD 0x20 V905
0xd61: V908 = ISZERO 0x1
0xd62: V909 = ISZERO 0x0
0xd63: V910 = ISZERO 0x1
0xd64: V911 = ISZERO 0x0
0xd66: M[V907] = 0x1
0xd67: V912 = 0x20
0xd69: V913 = ADD 0x20 V907
0xd6b: V914 = 0xff
0xd6d: V915 = AND 0xff S10
0xd6e: V916 = 0xff
0xd70: V917 = AND 0xff V915
0xd72: M[V913] = V917
0xd73: V918 = 0x20
0xd75: V919 = ADD 0x20 V913
0xd77: V920 = 0x0
0xd79: V921 = NOT 0x0
0xd7a: V922 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S9
0xd7b: V923 = 0x0
0xd7d: V924 = NOT 0x0
0xd7e: V925 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V922
0xd80: M[V919] = V925
0xd81: V926 = 0x20
0xd83: V927 = ADD 0x20 V919
0xd85: V928 = 0x0
0xd87: V929 = NOT 0x0
0xd88: V930 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S8
0xd89: V931 = 0x0
0xd8b: V932 = NOT 0x0
0xd8c: V933 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V930
0xd8e: M[V927] = V933
0xd8f: V934 = 0x20
0xd91: V935 = ADD 0x20 V927
0xd9b: V936 = 0x20
0xd9d: V937 = 0x40
0xd9f: V938 = M[0x40]
0xda2: V939 = SUB V935 V938
0xda4: V940 = 0x0
0xda8: V941 = EXTCODESIZE V877
0xda9: V942 = ISZERO V941
0xdaa: V943 = ISZERO V942
0xdab: V944 = 0xdb3
0xdae: JUMPI 0xdb3 V943
---
Entry stack: [S31, S30, V11, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, V877, 0xbc61394a, S14, S13, S12, 0x1, S10, S9, S8, V887, V887, S5, 0xa0, 0xa0, V887, S1, S0]
Stack pops: 17
Stack additions: [S16, S15, V935, 0x20, V938, V939, V938, 0x0, S16]
Exit stack: [S31, S30, V11, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, V877, 0xbc61394a, V935, 0x20, V938, V939, V938, 0x0, V877]

================================

Block 0xdaf
[0xdaf:0xdb2]
---
Predecessors: [0xd43]
Successors: []
---
0xdaf PUSH1 0x0
0xdb1 DUP1
0xdb2 REVERT
---
0xdaf: V945 = 0x0
0xdb2: REVERT 0x0 0x0
---
Entry stack: [S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V877, 0xbc61394a, V935, 0x20, V938, V939, V938, 0x0, V877]
Stack pops: 0
Stack additions: []
Exit stack: [S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V877, 0xbc61394a, V935, 0x20, V938, V939, V938, 0x0, V877]

================================

Block 0xdb3
[0xdb3:0xdbb]
---
Predecessors: [0xd43]
Successors: [0xdbc, 0xdc0]
---
0xdb3 JUMPDEST
0xdb4 GAS
0xdb5 CALL
0xdb6 ISZERO
0xdb7 ISZERO
0xdb8 PUSH2 0xdc0
0xdbb JUMPI
---
0xdb3: JUMPDEST 
0xdb4: V946 = GAS
0xdb5: V947 = CALL V946 V877 0x0 V938 V939 V938 0x20
0xdb6: V948 = ISZERO V947
0xdb7: V949 = ISZERO V948
0xdb8: V950 = 0xdc0
0xdbb: JUMPI 0xdc0 V949
---
Entry stack: [S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V877, 0xbc61394a, V935, 0x20, V938, V939, V938, 0x0, V877]
Stack pops: 6
Stack additions: []
Exit stack: [S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V877, 0xbc61394a, V935]

================================

Block 0xdbc
[0xdbc:0xdbf]
---
Predecessors: [0xdb3]
Successors: []
---
0xdbc PUSH1 0x0
0xdbe DUP1
0xdbf REVERT
---
0xdbc: V951 = 0x0
0xdbf: REVERT 0x0 0x0
---
Entry stack: [S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V877, 0xbc61394a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V877, 0xbc61394a, S0]

================================

Block 0xdc0
[0xdc0:0xddc]
---
Predecessors: [0xdb3]
Successors: [0xddd, 0xdde]
---
0xdc0 JUMPDEST
0xdc1 POP
0xdc2 POP
0xdc3 POP
0xdc4 PUSH1 0x40
0xdc6 MLOAD
0xdc7 DUP1
0xdc8 MLOAD
0xdc9 SWAP1
0xdca POP
0xdcb POP
0xdcc PUSH2 0xdfc
0xdcf DUP9
0xdd0 DUP12
0xdd1 PUSH1 0x1
0xdd3 PUSH1 0x6
0xdd5 DUP2
0xdd6 LT
0xdd7 ISZERO
0xdd8 ISZERO
0xdd9 PUSH2 0xdde
0xddc JUMPI
---
0xdc0: JUMPDEST 
0xdc4: V952 = 0x40
0xdc6: V953 = M[0x40]
0xdc8: V954 = M[V953]
0xdcc: V955 = 0xdfc
0xdd1: V956 = 0x1
0xdd3: V957 = 0x6
0xdd6: V958 = LT 0x1 0x6
0xdd7: V959 = ISZERO 0x1
0xdd8: V960 = ISZERO 0x0
0xdd9: V961 = 0xdde
0xddc: JUMPI 0xdde 0x1
---
Entry stack: [S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V877, 0xbc61394a, S0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0xdfc, S10, S12, 0x1]
Exit stack: [S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0xdfc, S10, S12, 0x1]

================================

Block 0xddd
[0xddd:0xddd]
---
Predecessors: [0xdc0]
Successors: []
---
0xddd INVALID
---
0xddd: INVALID 
---
Entry stack: [S17, V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xdfc, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [S17, V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xdfc, S2, S1, 0x1]

================================

Block 0xdde
[0xdde:0xdf0]
---
Predecessors: [0xdc0]
Successors: [0xdf1, 0xdf2]
---
0xdde JUMPDEST
0xddf PUSH1 0x20
0xde1 MUL
0xde2 ADD
0xde3 CALLDATALOAD
0xde4 DUP13
0xde5 PUSH1 0x0
0xde7 PUSH1 0x6
0xde9 DUP2
0xdea LT
0xdeb ISZERO
0xdec ISZERO
0xded PUSH2 0xdf2
0xdf0 JUMPI
---
0xdde: JUMPDEST 
0xddf: V962 = 0x20
0xde1: V963 = MUL 0x20 0x1
0xde2: V964 = ADD 0x20 S1
0xde3: V965 = CALLDATALOAD V964
0xde5: V966 = 0x0
0xde7: V967 = 0x6
0xdea: V968 = LT 0x0 0x6
0xdeb: V969 = ISZERO 0x1
0xdec: V970 = ISZERO 0x0
0xded: V971 = 0xdf2
0xdf0: JUMPI 0xdf2 0x1
---
Entry stack: [S17, V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xdfc, S2, S1, 0x1]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V965, S13, 0x0]
Exit stack: [S17, V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xdfc, S2, V965, S13, 0x0]

================================

Block 0xdf1
[0xdf1:0xdf1]
---
Predecessors: [0xdde]
Successors: []
---
0xdf1 INVALID
---
0xdf1: INVALID 
---
Entry stack: [S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0xdfc, S3, V965, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0xdfc, S3, V965, S1, 0x0]

================================

Block 0xdf2
[0xdf2:0xdfb]
---
Predecessors: [0xdde]
Successors: [0x991]
---
0xdf2 JUMPDEST
0xdf3 PUSH1 0x20
0xdf5 MUL
0xdf6 ADD
0xdf7 CALLDATALOAD
0xdf8 PUSH2 0x991
0xdfb JUMP
---
0xdf2: JUMPDEST 
0xdf3: V972 = 0x20
0xdf5: V973 = MUL 0x20 0x0
0xdf6: V974 = ADD 0x0 S1
0xdf7: V975 = CALLDATALOAD V974
0xdf8: V976 = 0x991
0xdfb: JUMP 0x991
---
Entry stack: [S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0xdfc, S3, V965, S1, 0x0]
Stack pops: 2
Stack additions: [V975]
Exit stack: [S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0xdfc, S3, V965, V975]

================================

Block 0xdfc
[0xdfc:0xe0b]
---
Predecessors: [0x9a6]
Successors: [0xe0c, 0xe0d]
---
0xdfc JUMPDEST
0xdfd SWAP1
0xdfe POP
0xdff DUP3
0xe00 PUSH1 0x2
0xe02 PUSH1 0x5
0xe04 DUP2
0xe05 LT
0xe06 ISZERO
0xe07 ISZERO
0xe08 PUSH2 0xe0d
0xe0b JUMPI
---
0xdfc: JUMPDEST 
0xe00: V977 = 0x2
0xe02: V978 = 0x5
0xe05: V979 = LT 0x2 0x5
0xe06: V980 = ISZERO 0x1
0xe07: V981 = ISZERO 0x0
0xe08: V982 = 0xe0d
0xe0b: JUMPI 0xe0d 0x1
---
Entry stack: [S10, S9, V11, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S0, S3, 0x2]
Exit stack: [S10, S9, V11, S7, S6, S5, S4, S3, S2, S0, S3, 0x2]

================================

Block 0xe0c
[0xe0c:0xe0c]
---
Predecessors: [0xdfc]
Successors: []
---
0xe0c INVALID
---
0xe0c: INVALID 
---
Entry stack: [S11, S10, V11, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [S11, S10, V11, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]

================================

Block 0xe0d
[0xe0d:0xeae]
---
Predecessors: [0xdfc]
Successors: [0xeaf, 0xeb3]
---
0xe0d JUMPDEST
0xe0e PUSH1 0x20
0xe10 MUL
0xe11 ADD
0xe12 MLOAD
0xe13 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe28 AND
0xe29 PUSH4 0xa9059cbb
0xe2e CALLER
0xe2f DUP4
0xe30 PUSH1 0x40
0xe32 MLOAD
0xe33 DUP4
0xe34 PUSH4 0xffffffff
0xe39 AND
0xe3a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xe58 MUL
0xe59 DUP2
0xe5a MSTORE
0xe5b PUSH1 0x4
0xe5d ADD
0xe5e DUP1
0xe5f DUP4
0xe60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe75 AND
0xe76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe8b AND
0xe8c DUP2
0xe8d MSTORE
0xe8e PUSH1 0x20
0xe90 ADD
0xe91 DUP3
0xe92 DUP2
0xe93 MSTORE
0xe94 PUSH1 0x20
0xe96 ADD
0xe97 SWAP3
0xe98 POP
0xe99 POP
0xe9a POP
0xe9b PUSH1 0x20
0xe9d PUSH1 0x40
0xe9f MLOAD
0xea0 DUP1
0xea1 DUP4
0xea2 SUB
0xea3 DUP2
0xea4 PUSH1 0x0
0xea6 DUP8
0xea7 DUP1
0xea8 EXTCODESIZE
0xea9 ISZERO
0xeaa ISZERO
0xeab PUSH2 0xeb3
0xeae JUMPI
---
0xe0d: JUMPDEST 
0xe0e: V983 = 0x20
0xe10: V984 = MUL 0x20 0x2
0xe11: V985 = ADD 0x40 S1
0xe12: V986 = M[V985]
0xe13: V987 = 0xffffffffffffffffffffffffffffffffffffffff
0xe28: V988 = AND 0xffffffffffffffffffffffffffffffffffffffff V986
0xe29: V989 = 0xa9059cbb
0xe2e: V990 = CALLER
0xe30: V991 = 0x40
0xe32: V992 = M[0x40]
0xe34: V993 = 0xffffffff
0xe39: V994 = AND 0xffffffff 0xa9059cbb
0xe3a: V995 = 0x100000000000000000000000000000000000000000000000000000000
0xe58: V996 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xe5a: M[V992] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xe5b: V997 = 0x4
0xe5d: V998 = ADD 0x4 V992
0xe60: V999 = 0xffffffffffffffffffffffffffffffffffffffff
0xe75: V1000 = AND 0xffffffffffffffffffffffffffffffffffffffff V990
0xe76: V1001 = 0xffffffffffffffffffffffffffffffffffffffff
0xe8b: V1002 = AND 0xffffffffffffffffffffffffffffffffffffffff V1000
0xe8d: M[V998] = V1002
0xe8e: V1003 = 0x20
0xe90: V1004 = ADD 0x20 V998
0xe93: M[V1004] = S2
0xe94: V1005 = 0x20
0xe96: V1006 = ADD 0x20 V1004
0xe9b: V1007 = 0x20
0xe9d: V1008 = 0x40
0xe9f: V1009 = M[0x40]
0xea2: V1010 = SUB V1006 V1009
0xea4: V1011 = 0x0
0xea8: V1012 = EXTCODESIZE V988
0xea9: V1013 = ISZERO V1012
0xeaa: V1014 = ISZERO V1013
0xeab: V1015 = 0xeb3
0xeae: JUMPI 0xeb3 V1014
---
Entry stack: [S11, S10, V11, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]
Stack pops: 3
Stack additions: [S2, V988, 0xa9059cbb, V1006, 0x20, V1009, V1010, V1009, 0x0, V988]
Exit stack: [S11, S10, V11, S8, S7, S6, S5, S4, S3, S2, V988, 0xa9059cbb, V1006, 0x20, V1009, V1010, V1009, 0x0, V988]

================================

Block 0xeaf
[0xeaf:0xeb2]
---
Predecessors: [0xe0d]
Successors: []
---
0xeaf PUSH1 0x0
0xeb1 DUP1
0xeb2 REVERT
---
0xeaf: V1016 = 0x0
0xeb2: REVERT 0x0 0x0
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V988, 0xa9059cbb, V1006, 0x20, V1009, V1010, V1009, 0x0, V988]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V988, 0xa9059cbb, V1006, 0x20, V1009, V1010, V1009, 0x0, V988]

================================

Block 0xeb3
[0xeb3:0xebb]
---
Predecessors: [0xe0d]
Successors: [0xebc, 0xec0]
---
0xeb3 JUMPDEST
0xeb4 GAS
0xeb5 CALL
0xeb6 ISZERO
0xeb7 ISZERO
0xeb8 PUSH2 0xec0
0xebb JUMPI
---
0xeb3: JUMPDEST 
0xeb4: V1017 = GAS
0xeb5: V1018 = CALL V1017 V988 0x0 V1009 V1010 V1009 0x20
0xeb6: V1019 = ISZERO V1018
0xeb7: V1020 = ISZERO V1019
0xeb8: V1021 = 0xec0
0xebb: JUMPI 0xec0 V1020
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V988, 0xa9059cbb, V1006, 0x20, V1009, V1010, V1009, 0x0, V988]
Stack pops: 6
Stack additions: []
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V988, 0xa9059cbb, V1006]

================================

Block 0xebc
[0xebc:0xebf]
---
Predecessors: [0xeb3]
Successors: []
---
0xebc PUSH1 0x0
0xebe DUP1
0xebf REVERT
---
0xebc: V1022 = 0x0
0xebf: REVERT 0x0 0x0
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0xec0
[0xec0:0xed0]
---
Predecessors: [0xeb3]
Successors: [0xed1, 0xed5]
---
0xec0 JUMPDEST
0xec1 POP
0xec2 POP
0xec3 POP
0xec4 PUSH1 0x40
0xec6 MLOAD
0xec7 DUP1
0xec8 MLOAD
0xec9 SWAP1
0xeca POP
0xecb ISZERO
0xecc ISZERO
0xecd PUSH2 0xed5
0xed0 JUMPI
---
0xec0: JUMPDEST 
0xec4: V1023 = 0x40
0xec6: V1024 = M[0x40]
0xec8: V1025 = M[V1024]
0xecb: V1026 = ISZERO V1025
0xecc: V1027 = ISZERO V1026
0xecd: V1028 = 0xed5
0xed0: JUMPI 0xed5 V1027
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0xed1
[0xed1:0xed4]
---
Predecessors: [0xec0]
Successors: []
---
0xed1 PUSH1 0x0
0xed3 DUP1
0xed4 REVERT
---
0xed1: V1029 = 0x0
0xed4: REVERT 0x0 0x0
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xed5
[0xed5:0xee5]
---
Predecessors: [0xec0]
Successors: []
Has unresolved jump.
---
0xed5 JUMPDEST
0xed6 DUP1
0xed7 SWAP4
0xed8 POP
0xed9 POP
0xeda POP
0xedb POP
0xedc SWAP8
0xedd SWAP7
0xede POP
0xedf POP
0xee0 POP
0xee1 POP
0xee2 POP
0xee3 POP
0xee4 POP
0xee5 JUMP
---
0xed5: JUMPDEST 
0xee5: JUMP S11
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xee6
[0xee6:0xf3c]
---
Predecessors: [0x32a]
Successors: [0xf3d, 0xf41]
---
0xee6 JUMPDEST
0xee7 PUSH1 0x0
0xee9 DUP1
0xeea SWAP1
0xeeb SLOAD
0xeec SWAP1
0xeed PUSH2 0x100
0xef0 EXP
0xef1 SWAP1
0xef2 DIV
0xef3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf08 AND
0xf09 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf1e AND
0xf1f CALLER
0xf20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf35 AND
0xf36 EQ
0xf37 ISZERO
0xf38 ISZERO
0xf39 PUSH2 0xf41
0xf3c JUMPI
---
0xee6: JUMPDEST 
0xee7: V1030 = 0x0
0xeeb: V1031 = S[0x0]
0xeed: V1032 = 0x100
0xef0: V1033 = EXP 0x100 0x0
0xef2: V1034 = DIV V1031 0x1
0xef3: V1035 = 0xffffffffffffffffffffffffffffffffffffffff
0xf08: V1036 = AND 0xffffffffffffffffffffffffffffffffffffffff V1034
0xf09: V1037 = 0xffffffffffffffffffffffffffffffffffffffff
0xf1e: V1038 = AND 0xffffffffffffffffffffffffffffffffffffffff V1036
0xf1f: V1039 = CALLER
0xf20: V1040 = 0xffffffffffffffffffffffffffffffffffffffff
0xf35: V1041 = AND 0xffffffffffffffffffffffffffffffffffffffff V1039
0xf36: V1042 = EQ V1041 V1038
0xf37: V1043 = ISZERO V1042
0xf38: V1044 = ISZERO V1043
0xf39: V1045 = 0xf41
0xf3c: JUMPI 0xf41 V1044
---
Entry stack: [V11, 0x356, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x356, V240]

================================

Block 0xf3d
[0xf3d:0xf40]
---
Predecessors: [0xee6]
Successors: []
---
0xf3d PUSH1 0x0
0xf3f DUP1
0xf40 REVERT
---
0xf3d: V1046 = 0x0
0xf40: REVERT 0x0 0x0
---
Entry stack: [V11, 0x356, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x356, V240]

================================

Block 0xf41
[0xf41:0xf78]
---
Predecessors: [0xee6]
Successors: [0xf79, 0xf7d]
---
0xf41 JUMPDEST
0xf42 PUSH1 0x0
0xf44 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf59 AND
0xf5a DUP2
0xf5b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf70 AND
0xf71 EQ
0xf72 ISZERO
0xf73 ISZERO
0xf74 ISZERO
0xf75 PUSH2 0xf7d
0xf78 JUMPI
---
0xf41: JUMPDEST 
0xf42: V1047 = 0x0
0xf44: V1048 = 0xffffffffffffffffffffffffffffffffffffffff
0xf59: V1049 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xf5b: V1050 = 0xffffffffffffffffffffffffffffffffffffffff
0xf70: V1051 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0xf71: V1052 = EQ V1051 0x0
0xf72: V1053 = ISZERO V1052
0xf73: V1054 = ISZERO V1053
0xf74: V1055 = ISZERO V1054
0xf75: V1056 = 0xf7d
0xf78: JUMPI 0xf7d V1055
---
Entry stack: [V11, 0x356, V240]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x356, V240]

================================

Block 0xf79
[0xf79:0xf7c]
---
Predecessors: [0xf41]
Successors: []
---
0xf79 PUSH1 0x0
0xf7b DUP1
0xf7c REVERT
---
0xf79: V1057 = 0x0
0xf7c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x356, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x356, V240]

================================

Block 0xf7d
[0xf7d:0x103a]
---
Predecessors: [0xf41]
Successors: [0x356]
---
0xf7d JUMPDEST
0xf7e DUP1
0xf7f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf94 AND
0xf95 PUSH1 0x0
0xf97 DUP1
0xf98 SWAP1
0xf99 SLOAD
0xf9a SWAP1
0xf9b PUSH2 0x100
0xf9e EXP
0xf9f SWAP1
0xfa0 DIV
0xfa1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb6 AND
0xfb7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfcc AND
0xfcd PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xfee PUSH1 0x40
0xff0 MLOAD
0xff1 PUSH1 0x40
0xff3 MLOAD
0xff4 DUP1
0xff5 SWAP2
0xff6 SUB
0xff7 SWAP1
0xff8 LOG3
0xff9 DUP1
0xffa PUSH1 0x0
0xffc DUP1
0xffd PUSH2 0x100
0x1000 EXP
0x1001 DUP2
0x1002 SLOAD
0x1003 DUP2
0x1004 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1019 MUL
0x101a NOT
0x101b AND
0x101c SWAP1
0x101d DUP4
0x101e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1033 AND
0x1034 MUL
0x1035 OR
0x1036 SWAP1
0x1037 SSTORE
0x1038 POP
0x1039 POP
0x103a JUMP
---
0xf7d: JUMPDEST 
0xf7f: V1058 = 0xffffffffffffffffffffffffffffffffffffffff
0xf94: V1059 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0xf95: V1060 = 0x0
0xf99: V1061 = S[0x0]
0xf9b: V1062 = 0x100
0xf9e: V1063 = EXP 0x100 0x0
0xfa0: V1064 = DIV V1061 0x1
0xfa1: V1065 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb6: V1066 = AND 0xffffffffffffffffffffffffffffffffffffffff V1064
0xfb7: V1067 = 0xffffffffffffffffffffffffffffffffffffffff
0xfcc: V1068 = AND 0xffffffffffffffffffffffffffffffffffffffff V1066
0xfcd: V1069 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xfee: V1070 = 0x40
0xff0: V1071 = M[0x40]
0xff1: V1072 = 0x40
0xff3: V1073 = M[0x40]
0xff6: V1074 = SUB V1071 V1073
0xff8: LOG V1073 V1074 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1068 V1059
0xffa: V1075 = 0x0
0xffd: V1076 = 0x100
0x1000: V1077 = EXP 0x100 0x0
0x1002: V1078 = S[0x0]
0x1004: V1079 = 0xffffffffffffffffffffffffffffffffffffffff
0x1019: V1080 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x101a: V1081 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x101b: V1082 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1078
0x101e: V1083 = 0xffffffffffffffffffffffffffffffffffffffff
0x1033: V1084 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x1034: V1085 = MUL V1084 0x1
0x1035: V1086 = OR V1085 V1082
0x1037: S[0x0] = V1086
0x103a: JUMP 0x356
---
Entry stack: [V11, 0x356, V240]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x103b
[0x103b:0x1061]
---
Predecessors: [0x362, 0x5bd, 0x9df]
Successors: [0x1062, 0x1063]
---
0x103b JUMPDEST
0x103c PUSH1 0x0
0x103e DUP1
0x103f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1054 AND
0x1055 DUP4
0x1056 PUSH1 0x1
0x1058 PUSH1 0x8
0x105a DUP2
0x105b LT
0x105c ISZERO
0x105d ISZERO
0x105e PUSH2 0x1063
0x1061 JUMPI
---
0x103b: JUMPDEST 
0x103c: V1087 = 0x0
0x103f: V1088 = 0xffffffffffffffffffffffffffffffffffffffff
0x1054: V1089 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1056: V1090 = 0x1
0x1058: V1091 = 0x8
0x105b: V1092 = LT 0x1 0x8
0x105c: V1093 = ISZERO 0x1
0x105d: V1094 = ISZERO 0x0
0x105e: V1095 = 0x1063
0x1061: JUMPI 0x1063 0x1
---
Entry stack: [S26, V11, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, {0x3b8, 0x613, 0xa36}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S1, 0x1]
Exit stack: [S26, V11, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, {0x3b8, 0x613, 0xa36}, S1, S0, 0x0, 0x0, S1, 0x1]

================================

Block 0x1062
[0x1062:0x1062]
---
Predecessors: [0x103b]
Successors: []
---
0x1062 INVALID
---
0x1062: INVALID 
---
Entry stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, {0x3b8, 0x613, 0xa36}, S5, S4, 0x0, 0x0, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, {0x3b8, 0x613, 0xa36}, S5, S4, 0x0, 0x0, S1, 0x1]

================================

Block 0x1063
[0x1063:0x1084]
---
Predecessors: [0x103b]
Successors: [0x1085, 0x10c8]
---
0x1063 JUMPDEST
0x1064 PUSH1 0x20
0x1066 MUL
0x1067 ADD
0x1068 MLOAD
0x1069 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107e AND
0x107f EQ
0x1080 DUP1
0x1081 PUSH2 0x10c8
0x1084 JUMPI
---
0x1063: JUMPDEST 
0x1064: V1096 = 0x20
0x1066: V1097 = MUL 0x20 0x1
0x1067: V1098 = ADD 0x20 S1
0x1068: V1099 = M[V1098]
0x1069: V1100 = 0xffffffffffffffffffffffffffffffffffffffff
0x107e: V1101 = AND 0xffffffffffffffffffffffffffffffffffffffff V1099
0x107f: V1102 = EQ V1101 0x0
0x1081: V1103 = 0x10c8
0x1084: JUMPI 0x10c8 V1102
---
Entry stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, {0x3b8, 0x613, 0xa36}, S5, S4, 0x0, 0x0, S1, 0x1]
Stack pops: 3
Stack additions: [V1102]
Exit stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, {0x3b8, 0x613, 0xa36}, S5, S4, 0x0, V1102]

================================

Block 0x1085
[0x1085:0x10a9]
---
Predecessors: [0x1063]
Successors: [0x10aa, 0x10ab]
---
0x1085 POP
0x1086 ADDRESS
0x1087 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109c AND
0x109d DUP4
0x109e PUSH1 0x1
0x10a0 PUSH1 0x8
0x10a2 DUP2
0x10a3 LT
0x10a4 ISZERO
0x10a5 ISZERO
0x10a6 PUSH2 0x10ab
0x10a9 JUMPI
---
0x1086: V1104 = ADDRESS
0x1087: V1105 = 0xffffffffffffffffffffffffffffffffffffffff
0x109c: V1106 = AND 0xffffffffffffffffffffffffffffffffffffffff V1104
0x109e: V1107 = 0x1
0x10a0: V1108 = 0x8
0x10a3: V1109 = LT 0x1 0x8
0x10a4: V1110 = ISZERO 0x1
0x10a5: V1111 = ISZERO 0x0
0x10a6: V1112 = 0x10ab
0x10a9: JUMPI 0x10ab 0x1
---
Entry stack: [S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x3b8, 0x613, 0xa36}, S3, S2, 0x0, V1102]
Stack pops: 4
Stack additions: [S3, S2, S1, V1106, S3, 0x1]
Exit stack: [S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x3b8, 0x613, 0xa36}, S3, S2, 0x0, V1106, S3, 0x1]

================================

Block 0x10aa
[0x10aa:0x10aa]
---
Predecessors: [0x1085]
Successors: []
---
0x10aa INVALID
---
0x10aa: INVALID 
---
Entry stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, {0x3b8, 0x613, 0xa36}, S5, S4, 0x0, V1106, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, {0x3b8, 0x613, 0xa36}, S5, S4, 0x0, V1106, S1, 0x1]

================================

Block 0x10ab
[0x10ab:0x10c7]
---
Predecessors: [0x1085]
Successors: [0x10c8]
---
0x10ab JUMPDEST
0x10ac PUSH1 0x20
0x10ae MUL
0x10af ADD
0x10b0 MLOAD
0x10b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10c6 AND
0x10c7 EQ
---
0x10ab: JUMPDEST 
0x10ac: V1113 = 0x20
0x10ae: V1114 = MUL 0x20 0x1
0x10af: V1115 = ADD 0x20 S1
0x10b0: V1116 = M[V1115]
0x10b1: V1117 = 0xffffffffffffffffffffffffffffffffffffffff
0x10c6: V1118 = AND 0xffffffffffffffffffffffffffffffffffffffff V1116
0x10c7: V1119 = EQ V1118 V1106
---
Entry stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, {0x3b8, 0x613, 0xa36}, S5, S4, 0x0, V1106, S1, 0x1]
Stack pops: 3
Stack additions: [V1119]
Exit stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, {0x3b8, 0x613, 0xa36}, S5, S4, 0x0, V1119]

================================

Block 0x10c8
[0x10c8:0x10ce]
---
Predecessors: [0x1063, 0x10ab]
Successors: [0x10cf, 0x10e7]
---
0x10c8 JUMPDEST
0x10c9 DUP1
0x10ca ISZERO
0x10cb PUSH2 0x10e7
0x10ce JUMPI
---
0x10c8: JUMPDEST 
0x10ca: V1120 = ISZERO S0
0x10cb: V1121 = 0x10e7
0x10ce: JUMPI 0x10e7 V1120
---
Entry stack: [S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x3b8, 0x613, 0xa36}, S3, S2, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x3b8, 0x613, 0xa36}, S3, S2, 0x0, S0]

================================

Block 0x10cf
[0x10cf:0x10de]
---
Predecessors: [0x10c8]
Successors: [0x10df, 0x10e0]
---
0x10cf POP
0x10d0 PUSH1 0x0
0x10d2 DUP3
0x10d3 PUSH1 0x3
0x10d5 PUSH1 0x6
0x10d7 DUP2
0x10d8 LT
0x10d9 ISZERO
0x10da ISZERO
0x10db PUSH2 0x10e0
0x10de JUMPI
---
0x10d0: V1122 = 0x0
0x10d3: V1123 = 0x3
0x10d5: V1124 = 0x6
0x10d8: V1125 = LT 0x3 0x6
0x10d9: V1126 = ISZERO 0x1
0x10da: V1127 = ISZERO 0x0
0x10db: V1128 = 0x10e0
0x10de: JUMPI 0x10e0 0x1
---
Entry stack: [S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x3b8, 0x613, 0xa36}, S3, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x0, S2, 0x3]
Exit stack: [S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x3b8, 0x613, 0xa36}, S3, S2, 0x0, 0x0, S2, 0x3]

================================

Block 0x10df
[0x10df:0x10df]
---
Predecessors: [0x10cf]
Successors: []
---
0x10df INVALID
---
0x10df: INVALID 
---
Entry stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, {0x3b8, 0x613, 0xa36}, S5, S4, 0x0, 0x0, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, {0x3b8, 0x613, 0xa36}, S5, S4, 0x0, 0x0, S1, 0x3]

================================

Block 0x10e0
[0x10e0:0x10e6]
---
Predecessors: [0x10cf]
Successors: [0x10e7]
---
0x10e0 JUMPDEST
0x10e1 PUSH1 0x20
0x10e3 MUL
0x10e4 ADD
0x10e5 MLOAD
0x10e6 EQ
---
0x10e0: JUMPDEST 
0x10e1: V1129 = 0x20
0x10e3: V1130 = MUL 0x20 0x3
0x10e4: V1131 = ADD 0x60 S1
0x10e5: V1132 = M[V1131]
0x10e6: V1133 = EQ V1132 0x0
---
Entry stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, {0x3b8, 0x613, 0xa36}, S5, S4, 0x0, 0x0, S1, 0x3]
Stack pops: 3
Stack additions: [V1133]
Exit stack: [S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, {0x3b8, 0x613, 0xa36}, S5, S4, 0x0, V1133]

================================

Block 0x10e7
[0x10e7:0x10ed]
---
Predecessors: [0x10c8, 0x10e0]
Successors: [0x10ee, 0x1105]
---
0x10e7 JUMPDEST
0x10e8 DUP1
0x10e9 ISZERO
0x10ea PUSH2 0x1105
0x10ed JUMPI
---
0x10e7: JUMPDEST 
0x10e9: V1134 = ISZERO S0
0x10ea: V1135 = 0x1105
0x10ed: JUMPI 0x1105 V1134
---
Entry stack: [S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x3b8, 0x613, 0xa36}, S3, S2, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x3b8, 0x613, 0xa36}, S3, S2, 0x0, S0]

================================

Block 0x10ee
[0x10ee:0x10fc]
---
Predecessors: [0x10e7]
Successors: [0x10fd, 0x10fe]
---
0x10ee POP
0x10ef TIMESTAMP
0x10f0 DUP3
0x10f1 PUSH1 0x4
0x10f3 PUSH1 0x6
0x10f5 DUP2
0x10f6 LT
0x10f7 ISZERO
0x10f8 ISZERO
0x10f9 PUSH2 0x10fe
0x10fc JUMPI
---
0x10ef: V1136 = TIMESTAMP
0x10f1: V1137 = 0x4
0x10f3: V1138 = 0x6
0x10f6: V1139 = LT 0x4 0x6
0x10f7: V1140 = ISZERO 0x1
0x10f8: V1141 = ISZERO 0x0
0x10f9: V1142 = 0x10fe
0x10fc: JUMPI 0x10fe 0x1
---
Entry stack: [S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x3b8, 0x613, 0xa36}, S3, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, V1136, S2, 0x4]
Exit stack: [S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x3b8, 0x613, 0xa36}, S3, S2, 0x0, V1136, S2, 0x4]

================================

Block 0x10fd
[0x10fd:0x10fd]
---
Predecessors: [0x10ee]
Successors: []
---
0x10fd INVALID
---
0x10fd: INVALID 
---
Entry stack: [S27, S26, S25, V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, {0x3b8, 0x613, 0xa36}, S5, S4, 0x0, V1136, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [S27, S26, S25, V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, {0x3b8, 0x613, 0xa36}, S5, S4, 0x0, V1136, S1, 0x4]

================================

Block 0x10fe
[0x10fe:0x1104]
---
Predecessors: [0x10ee]
Successors: [0x1105]
---
0x10fe JUMPDEST
0x10ff PUSH1 0x20
0x1101 MUL
0x1102 ADD
0x1103 MLOAD
0x1104 GT
---
0x10fe: JUMPDEST 
0x10ff: V1143 = 0x20
0x1101: V1144 = MUL 0x20 0x4
0x1102: V1145 = ADD 0x80 S1
0x1103: V1146 = M[V1145]
0x1104: V1147 = GT V1146 V1136
---
Entry stack: [S27, S26, S25, V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, {0x3b8, 0x613, 0xa36}, S5, S4, 0x0, V1136, S1, 0x4]
Stack pops: 3
Stack additions: [V1147]
Exit stack: [S27, S26, S25, V11, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x0, {0x3b8, 0x613, 0xa36}, S5, S4, 0x0, V1147]

================================

Block 0x1105
[0x1105:0x110c]
---
Predecessors: [0x10e7, 0x10fe]
Successors: [0x3b8, 0x613, 0xa36]
---
0x1105 JUMPDEST
0x1106 SWAP1
0x1107 POP
0x1108 SWAP3
0x1109 SWAP2
0x110a POP
0x110b POP
0x110c JUMP
---
0x1105: JUMPDEST 
0x110c: JUMP {0x3b8, 0x613, 0xa36}
---
Entry stack: [S25, S24, S23, V11, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x3b8, 0x613, 0xa36}, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [S25, S24, S23, V11, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, S0]

================================

Block 0x110d
[0x110d:0x1114]
---
Predecessors: [0x3c7, 0x6a3, 0xb66]
Successors: [0x141a]
---
0x110d JUMPDEST
0x110e PUSH2 0x1115
0x1111 PUSH2 0x141a
0x1114 JUMP
---
0x110d: JUMPDEST 
0x110e: V1148 = 0x1115
0x1111: V1149 = 0x141a
0x1114: JUMP 0x141a
---
Entry stack: [S22, S21, S20, V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, {0x3f5, 0x6d1, 0xb98}, S0]
Stack pops: 0
Stack additions: [0x1115]
Exit stack: [S22, S21, S20, V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, {0x3f5, 0x6d1, 0xb98}, S0, 0x1115]

================================

Block 0x1115
[0x1115:0x111a]
---
Predecessors: [0x1453]
Successors: [0x111b]
---
0x1115 JUMPDEST
0x1116 PUSH1 0x0
0x1118 DUP1
0x1119 SWAP1
0x111a POP
---
0x1115: JUMPDEST 
0x1116: V1150 = 0x0
---
Entry stack: [S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1332]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1332, 0x0]

================================

Block 0x111b
[0x111b:0x1124]
---
Predecessors: [0x1115, 0x1145]
Successors: [0x1125, 0x1189]
---
0x111b JUMPDEST
0x111c PUSH1 0x5
0x111e DUP2
0x111f LT
0x1120 ISZERO
0x1121 PUSH2 0x1189
0x1124 JUMPI
---
0x111b: JUMPDEST 
0x111c: V1151 = 0x5
0x111f: V1152 = LT S0 0x5
0x1120: V1153 = ISZERO V1152
0x1121: V1154 = 0x1189
0x1124: JUMPI 0x1189 V1153
---
Entry stack: [S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1332, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1332, S0]

================================

Block 0x1125
[0x1125:0x1130]
---
Predecessors: [0x111b]
Successors: [0x1131, 0x1132]
---
0x1125 DUP3
0x1126 DUP2
0x1127 PUSH1 0x8
0x1129 DUP2
0x112a LT
0x112b ISZERO
0x112c ISZERO
0x112d PUSH2 0x1132
0x1130 JUMPI
---
0x1127: V1155 = 0x8
0x112a: V1156 = LT S0 0x8
0x112b: V1157 = ISZERO V1156
0x112c: V1158 = ISZERO V1157
0x112d: V1159 = 0x1132
0x1130: JUMPI 0x1132 V1158
---
Entry stack: [V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1332, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, S0]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}, S2, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}]

================================

Block 0x1131
[0x1131:0x1131]
---
Predecessors: [0x1125]
Successors: []
---
0x1131 INVALID
---
0x1131: INVALID 
---
Entry stack: [S21, S20, S19, V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1332, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}, S1, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}]
Stack pops: 0
Stack additions: []
Exit stack: [S21, S20, S19, V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1332, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}, S1, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}]

================================

Block 0x1132
[0x1132:0x1143]
---
Predecessors: [0x1125]
Successors: [0x1144, 0x1145]
---
0x1132 JUMPDEST
0x1133 PUSH1 0x20
0x1135 MUL
0x1136 ADD
0x1137 MLOAD
0x1138 DUP3
0x1139 DUP3
0x113a PUSH1 0x5
0x113c DUP2
0x113d LT
0x113e ISZERO
0x113f ISZERO
0x1140 PUSH2 0x1145
0x1143 JUMPI
---
0x1132: JUMPDEST 
0x1133: V1160 = 0x20
0x1135: V1161 = MUL 0x20 {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}
0x1136: V1162 = ADD V1161 S1
0x1137: V1163 = M[V1162]
0x113a: V1164 = 0x5
0x113d: V1165 = LT {0x0, 0x1, 0x2, 0x3, 0x4, 0x5} 0x5
0x113e: V1166 = ISZERO V1165
0x113f: V1167 = ISZERO V1166
0x1140: V1168 = 0x1145
0x1143: JUMPI 0x1145 V1167
---
Entry stack: [S21, S20, S19, V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1332, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}, S1, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}]
Stack pops: 4
Stack additions: [S3, S2, V1163, S3, S2]
Exit stack: [S21, S20, S19, V11, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1332, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}, V1163, V1332, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}]

================================

Block 0x1144
[0x1144:0x1144]
---
Predecessors: [0x1132]
Successors: []
---
0x1144 INVALID
---
0x1144: INVALID 
---
Entry stack: [S22, S21, S20, V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V1332, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}, V1163, V1332, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}]
Stack pops: 0
Stack additions: []
Exit stack: [S22, S21, S20, V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V1332, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}, V1163, V1332, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}]

================================

Block 0x1145
[0x1145:0x1188]
---
Predecessors: [0x1132]
Successors: [0x111b]
---
0x1145 JUMPDEST
0x1146 PUSH1 0x20
0x1148 MUL
0x1149 ADD
0x114a SWAP1
0x114b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1160 AND
0x1161 SWAP1
0x1162 DUP2
0x1163 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1178 AND
0x1179 DUP2
0x117a MSTORE
0x117b POP
0x117c POP
0x117d DUP1
0x117e DUP1
0x117f PUSH1 0x1
0x1181 ADD
0x1182 SWAP2
0x1183 POP
0x1184 POP
0x1185 PUSH2 0x111b
0x1188 JUMP
---
0x1145: JUMPDEST 
0x1146: V1169 = 0x20
0x1148: V1170 = MUL 0x20 {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}
0x1149: V1171 = ADD V1170 V1332
0x114b: V1172 = 0xffffffffffffffffffffffffffffffffffffffff
0x1160: V1173 = AND 0xffffffffffffffffffffffffffffffffffffffff V1163
0x1163: V1174 = 0xffffffffffffffffffffffffffffffffffffffff
0x1178: V1175 = AND 0xffffffffffffffffffffffffffffffffffffffff V1173
0x117a: M[V1171] = V1175
0x117f: V1176 = 0x1
0x1181: V1177 = ADD 0x1 {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}
0x1185: V1178 = 0x111b
0x1188: JUMP 0x111b
---
Entry stack: [S22, S21, S20, V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V1332, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}, V1163, V1332, {0x0, 0x1, 0x2, 0x3, 0x4, 0x5}]
Stack pops: 4
Stack additions: [V1177]
Exit stack: [S22, S21, S20, V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V1332, V1177]

================================

Block 0x1189
[0x1189:0x118e]
---
Predecessors: [0x111b]
Successors: [0x3f5, 0x6d1, 0xb98]
---
0x1189 JUMPDEST
0x118a POP
0x118b SWAP2
0x118c SWAP1
0x118d POP
0x118e JUMP
---
0x1189: JUMPDEST 
0x118e: JUMP S3
---
Entry stack: [S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1332, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1332]

================================

Block 0x118f
[0x118f:0x119b]
---
Predecessors: [0x595]
Successors: [0x119c, 0x119d]
---
0x118f JUMPDEST
0x1190 PUSH1 0x0
0x1192 DUP3
0x1193 DUP3
0x1194 GT
0x1195 ISZERO
0x1196 ISZERO
0x1197 ISZERO
0x1198 PUSH2 0x119d
0x119b JUMPI
---
0x118f: JUMPDEST 
0x1190: V1179 = 0x0
0x1194: V1180 = GT V402 S1
0x1195: V1181 = ISZERO V1180
0x1196: V1182 = ISZERO V1181
0x1197: V1183 = ISZERO V1182
0x1198: V1184 = 0x119d
0x119b: JUMPI 0x119d V1183
---
Entry stack: [S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x5a4, S1, V402]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x5a4, S1, V402, 0x0]

================================

Block 0x119c
[0x119c:0x119c]
---
Predecessors: [0x118f]
Successors: []
---
0x119c INVALID
---
0x119c: INVALID 
---
Entry stack: [S18, S17, V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x5a4, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x5a4, S2, S1, 0x0]

================================

Block 0x119d
[0x119d:0x11a7]
---
Predecessors: [0x118f]
Successors: [0x5a4]
---
0x119d JUMPDEST
0x119e DUP2
0x119f DUP4
0x11a0 SUB
0x11a1 SWAP1
0x11a2 POP
0x11a3 SWAP3
0x11a4 SWAP2
0x11a5 POP
0x11a6 POP
0x11a7 JUMP
---
0x119d: JUMPDEST 
0x11a0: V1185 = SUB S2 S1
0x11a7: JUMP 0x5a4
---
Entry stack: [S18, S17, V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x5a4, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1185]
Exit stack: [S18, S17, V11, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1185]

================================

Block 0x11a8
[0x11a8:0x11fb]
---
Predecessors: [0x6e5, 0xc70]
Successors: [0x11fc, 0x13c9]
---
0x11a8 JUMPDEST
0x11a9 PUSH1 0x3
0x11ab PUSH1 0x0
0x11ad DUP3
0x11ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11c3 AND
0x11c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11d9 AND
0x11da DUP2
0x11db MSTORE
0x11dc PUSH1 0x20
0x11de ADD
0x11df SWAP1
0x11e0 DUP2
0x11e1 MSTORE
0x11e2 PUSH1 0x20
0x11e4 ADD
0x11e5 PUSH1 0x0
0x11e7 SHA3
0x11e8 PUSH1 0x0
0x11ea SWAP1
0x11eb SLOAD
0x11ec SWAP1
0x11ed PUSH2 0x100
0x11f0 EXP
0x11f1 SWAP1
0x11f2 DIV
0x11f3 PUSH1 0xff
0x11f5 AND
0x11f6 ISZERO
0x11f7 ISZERO
0x11f8 PUSH2 0x13c9
0x11fb JUMPI
---
0x11a8: JUMPDEST 
0x11a9: V1186 = 0x3
0x11ab: V1187 = 0x0
0x11ae: V1188 = 0xffffffffffffffffffffffffffffffffffffffff
0x11c3: V1189 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x11c4: V1190 = 0xffffffffffffffffffffffffffffffffffffffff
0x11d9: V1191 = AND 0xffffffffffffffffffffffffffffffffffffffff V1189
0x11db: M[0x0] = V1191
0x11dc: V1192 = 0x20
0x11de: V1193 = ADD 0x20 0x0
0x11e1: M[0x20] = 0x3
0x11e2: V1194 = 0x20
0x11e4: V1195 = ADD 0x20 0x20
0x11e5: V1196 = 0x0
0x11e7: V1197 = SHA3 0x0 0x40
0x11e8: V1198 = 0x0
0x11eb: V1199 = S[V1197]
0x11ed: V1200 = 0x100
0x11f0: V1201 = EXP 0x100 0x0
0x11f2: V1202 = DIV V1199 0x1
0x11f3: V1203 = 0xff
0x11f5: V1204 = AND 0xff V1202
0x11f6: V1205 = ISZERO V1204
0x11f7: V1206 = ISZERO V1205
0x11f8: V1207 = 0x13c9
0x11fb: JUMPI 0x13c9 V1206
---
Entry stack: [S17, S16, S15, V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x705, 0xca7}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S17, S16, S15, V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x705, 0xca7}, S0]

================================

Block 0x11fc
[0x11fc:0x1297]
---
Predecessors: [0x11a8]
Successors: [0x1298, 0x129c]
---
0x11fc DUP1
0x11fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1212 AND
0x1213 PUSH4 0x95ea7b3
0x1218 PUSH1 0x2
0x121a PUSH1 0x0
0x121c SWAP1
0x121d SLOAD
0x121e SWAP1
0x121f PUSH2 0x100
0x1222 EXP
0x1223 SWAP1
0x1224 DIV
0x1225 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x123a AND
0x123b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1250 AND
0x1251 PUSH4 0xadd1cbc5
0x1256 PUSH1 0x40
0x1258 MLOAD
0x1259 DUP2
0x125a PUSH4 0xffffffff
0x125f AND
0x1260 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x127e MUL
0x127f DUP2
0x1280 MSTORE
0x1281 PUSH1 0x4
0x1283 ADD
0x1284 PUSH1 0x20
0x1286 PUSH1 0x40
0x1288 MLOAD
0x1289 DUP1
0x128a DUP4
0x128b SUB
0x128c DUP2
0x128d PUSH1 0x0
0x128f DUP8
0x1290 DUP1
0x1291 EXTCODESIZE
0x1292 ISZERO
0x1293 ISZERO
0x1294 PUSH2 0x129c
0x1297 JUMPI
---
0x11fd: V1208 = 0xffffffffffffffffffffffffffffffffffffffff
0x1212: V1209 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1213: V1210 = 0x95ea7b3
0x1218: V1211 = 0x2
0x121a: V1212 = 0x0
0x121d: V1213 = S[0x2]
0x121f: V1214 = 0x100
0x1222: V1215 = EXP 0x100 0x0
0x1224: V1216 = DIV V1213 0x1
0x1225: V1217 = 0xffffffffffffffffffffffffffffffffffffffff
0x123a: V1218 = AND 0xffffffffffffffffffffffffffffffffffffffff V1216
0x123b: V1219 = 0xffffffffffffffffffffffffffffffffffffffff
0x1250: V1220 = AND 0xffffffffffffffffffffffffffffffffffffffff V1218
0x1251: V1221 = 0xadd1cbc5
0x1256: V1222 = 0x40
0x1258: V1223 = M[0x40]
0x125a: V1224 = 0xffffffff
0x125f: V1225 = AND 0xffffffff 0xadd1cbc5
0x1260: V1226 = 0x100000000000000000000000000000000000000000000000000000000
0x127e: V1227 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xadd1cbc5
0x1280: M[V1223] = 0xadd1cbc500000000000000000000000000000000000000000000000000000000
0x1281: V1228 = 0x4
0x1283: V1229 = ADD 0x4 V1223
0x1284: V1230 = 0x20
0x1286: V1231 = 0x40
0x1288: V1232 = M[0x40]
0x128b: V1233 = SUB V1229 V1232
0x128d: V1234 = 0x0
0x1291: V1235 = EXTCODESIZE V1220
0x1292: V1236 = ISZERO V1235
0x1293: V1237 = ISZERO V1236
0x1294: V1238 = 0x129c
0x1297: JUMPI 0x129c V1237
---
Entry stack: [S17, S16, S15, V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x705, 0xca7}, S0]
Stack pops: 1
Stack additions: [S0, V1209, 0x95ea7b3, V1220, 0xadd1cbc5, V1229, 0x20, V1232, V1233, V1232, 0x0, V1220]
Exit stack: [S17, S16, S15, V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x705, 0xca7}, S0, V1209, 0x95ea7b3, V1220, 0xadd1cbc5, V1229, 0x20, V1232, V1233, V1232, 0x0, V1220]

================================

Block 0x1298
[0x1298:0x129b]
---
Predecessors: [0x11fc]
Successors: []
---
0x1298 PUSH1 0x0
0x129a DUP1
0x129b REVERT
---
0x1298: V1239 = 0x0
0x129b: REVERT 0x0 0x0
---
Entry stack: [S28, S27, S26, V11, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x705, 0xca7}, S11, V1209, 0x95ea7b3, V1220, 0xadd1cbc5, V1229, 0x20, V1232, V1233, V1232, 0x0, V1220]
Stack pops: 0
Stack additions: []
Exit stack: [S28, S27, S26, V11, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x705, 0xca7}, S11, V1209, 0x95ea7b3, V1220, 0xadd1cbc5, V1229, 0x20, V1232, V1233, V1232, 0x0, V1220]

================================

Block 0x129c
[0x129c:0x12a4]
---
Predecessors: [0x11fc]
Successors: [0x12a5, 0x12a9]
---
0x129c JUMPDEST
0x129d GAS
0x129e CALL
0x129f ISZERO
0x12a0 ISZERO
0x12a1 PUSH2 0x12a9
0x12a4 JUMPI
---
0x129c: JUMPDEST 
0x129d: V1240 = GAS
0x129e: V1241 = CALL V1240 V1220 0x0 V1232 V1233 V1232 0x20
0x129f: V1242 = ISZERO V1241
0x12a0: V1243 = ISZERO V1242
0x12a1: V1244 = 0x12a9
0x12a4: JUMPI 0x12a9 V1243
---
Entry stack: [S28, S27, S26, V11, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x705, 0xca7}, S11, V1209, 0x95ea7b3, V1220, 0xadd1cbc5, V1229, 0x20, V1232, V1233, V1232, 0x0, V1220]
Stack pops: 6
Stack additions: []
Exit stack: [S28, S27, S26, V11, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x705, 0xca7}, S11, V1209, 0x95ea7b3, V1220, 0xadd1cbc5, V1229]

================================

Block 0x12a5
[0x12a5:0x12a8]
---
Predecessors: [0x129c]
Successors: []
---
0x12a5 PUSH1 0x0
0x12a7 DUP1
0x12a8 REVERT
---
0x12a5: V1245 = 0x0
0x12a8: REVERT 0x0 0x0
---
Entry stack: [S22, S21, S20, V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x705, 0xca7}, S5, S4, 0x95ea7b3, S2, 0xadd1cbc5, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S22, S21, S20, V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x705, 0xca7}, S5, S4, 0x95ea7b3, S2, 0xadd1cbc5, S0]

================================

Block 0x12a9
[0x12a9:0x1353]
---
Predecessors: [0x129c]
Successors: [0x1354, 0x1358]
---
0x12a9 JUMPDEST
0x12aa POP
0x12ab POP
0x12ac POP
0x12ad PUSH1 0x40
0x12af MLOAD
0x12b0 DUP1
0x12b1 MLOAD
0x12b2 SWAP1
0x12b3 POP
0x12b4 PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x12d5 PUSH1 0x40
0x12d7 MLOAD
0x12d8 DUP4
0x12d9 PUSH4 0xffffffff
0x12de AND
0x12df PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x12fd MUL
0x12fe DUP2
0x12ff MSTORE
0x1300 PUSH1 0x4
0x1302 ADD
0x1303 DUP1
0x1304 DUP4
0x1305 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x131a AND
0x131b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1330 AND
0x1331 DUP2
0x1332 MSTORE
0x1333 PUSH1 0x20
0x1335 ADD
0x1336 DUP3
0x1337 DUP2
0x1338 MSTORE
0x1339 PUSH1 0x20
0x133b ADD
0x133c SWAP3
0x133d POP
0x133e POP
0x133f POP
0x1340 PUSH1 0x20
0x1342 PUSH1 0x40
0x1344 MLOAD
0x1345 DUP1
0x1346 DUP4
0x1347 SUB
0x1348 DUP2
0x1349 PUSH1 0x0
0x134b DUP8
0x134c DUP1
0x134d EXTCODESIZE
0x134e ISZERO
0x134f ISZERO
0x1350 PUSH2 0x1358
0x1353 JUMPI
---
0x12a9: JUMPDEST 
0x12ad: V1246 = 0x40
0x12af: V1247 = M[0x40]
0x12b1: V1248 = M[V1247]
0x12b4: V1249 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x12d5: V1250 = 0x40
0x12d7: V1251 = M[0x40]
0x12d9: V1252 = 0xffffffff
0x12de: V1253 = AND 0xffffffff 0x95ea7b3
0x12df: V1254 = 0x100000000000000000000000000000000000000000000000000000000
0x12fd: V1255 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x95ea7b3
0x12ff: M[V1251] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x1300: V1256 = 0x4
0x1302: V1257 = ADD 0x4 V1251
0x1305: V1258 = 0xffffffffffffffffffffffffffffffffffffffff
0x131a: V1259 = AND 0xffffffffffffffffffffffffffffffffffffffff V1248
0x131b: V1260 = 0xffffffffffffffffffffffffffffffffffffffff
0x1330: V1261 = AND 0xffffffffffffffffffffffffffffffffffffffff V1259
0x1332: M[V1257] = V1261
0x1333: V1262 = 0x20
0x1335: V1263 = ADD 0x20 V1257
0x1338: M[V1263] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1339: V1264 = 0x20
0x133b: V1265 = ADD 0x20 V1263
0x1340: V1266 = 0x20
0x1342: V1267 = 0x40
0x1344: V1268 = M[0x40]
0x1347: V1269 = SUB V1265 V1268
0x1349: V1270 = 0x0
0x134d: V1271 = EXTCODESIZE S4
0x134e: V1272 = ISZERO V1271
0x134f: V1273 = ISZERO V1272
0x1350: V1274 = 0x1358
0x1353: JUMPI 0x1358 V1273
---
Entry stack: [S22, S21, S20, V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x705, 0xca7}, S5, S4, 0x95ea7b3, S2, 0xadd1cbc5, S0]
Stack pops: 5
Stack additions: [S4, S3, V1265, 0x20, V1268, V1269, V1268, 0x0, S4]
Exit stack: [S22, S21, S20, V11, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x705, 0xca7}, S5, S4, 0x95ea7b3, V1265, 0x20, V1268, V1269, V1268, 0x0, S4]

================================

Block 0x1354
[0x1354:0x1357]
---
Predecessors: [0x12a9]
Successors: []
---
0x1354 PUSH1 0x0
0x1356 DUP1
0x1357 REVERT
---
0x1354: V1275 = 0x0
0x1357: REVERT 0x0 0x0
---
Entry stack: [S26, S25, S24, V11, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, {0x705, 0xca7}, S9, S8, 0x95ea7b3, V1265, 0x20, V1268, V1269, V1268, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S26, S25, S24, V11, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, {0x705, 0xca7}, S9, S8, 0x95ea7b3, V1265, 0x20, V1268, V1269, V1268, 0x0, S0]

================================

Block 0x1358
[0x1358:0x1360]
---
Predecessors: [0x12a9]
Successors: [0x1361, 0x1365]
---
0x1358 JUMPDEST
0x1359 GAS
0x135a CALL
0x135b ISZERO
0x135c ISZERO
0x135d PUSH2 0x1365
0x1360 JUMPI
---
0x1358: JUMPDEST 
0x1359: V1276 = GAS
0x135a: V1277 = CALL V1276 S0 0x0 V1268 V1269 V1268 0x20
0x135b: V1278 = ISZERO V1277
0x135c: V1279 = ISZERO V1278
0x135d: V1280 = 0x1365
0x1360: JUMPI 0x1365 V1279
---
Entry stack: [S26, S25, S24, V11, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, {0x705, 0xca7}, S9, S8, 0x95ea7b3, V1265, 0x20, V1268, V1269, V1268, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [S26, S25, S24, V11, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, {0x705, 0xca7}, S9, S8, 0x95ea7b3, V1265]

================================

Block 0x1361
[0x1361:0x1364]
---
Predecessors: [0x1358]
Successors: []
---
0x1361 PUSH1 0x0
0x1363 DUP1
0x1364 REVERT
---
0x1361: V1281 = 0x0
0x1364: REVERT 0x0 0x0
---
Entry stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x705, 0xca7}, S3, S2, 0x95ea7b3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x705, 0xca7}, S3, S2, 0x95ea7b3, S0]

================================

Block 0x1365
[0x1365:0x13c8]
---
Predecessors: [0x1358]
Successors: [0x13c9]
---
0x1365 JUMPDEST
0x1366 POP
0x1367 POP
0x1368 POP
0x1369 PUSH1 0x40
0x136b MLOAD
0x136c DUP1
0x136d MLOAD
0x136e SWAP1
0x136f POP
0x1370 POP
0x1371 PUSH1 0x1
0x1373 PUSH1 0x3
0x1375 PUSH1 0x0
0x1377 DUP4
0x1378 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138d AND
0x138e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13a3 AND
0x13a4 DUP2
0x13a5 MSTORE
0x13a6 PUSH1 0x20
0x13a8 ADD
0x13a9 SWAP1
0x13aa DUP2
0x13ab MSTORE
0x13ac PUSH1 0x20
0x13ae ADD
0x13af PUSH1 0x0
0x13b1 SHA3
0x13b2 PUSH1 0x0
0x13b4 PUSH2 0x100
0x13b7 EXP
0x13b8 DUP2
0x13b9 SLOAD
0x13ba DUP2
0x13bb PUSH1 0xff
0x13bd MUL
0x13be NOT
0x13bf AND
0x13c0 SWAP1
0x13c1 DUP4
0x13c2 ISZERO
0x13c3 ISZERO
0x13c4 MUL
0x13c5 OR
0x13c6 SWAP1
0x13c7 SSTORE
0x13c8 POP
---
0x1365: JUMPDEST 
0x1369: V1282 = 0x40
0x136b: V1283 = M[0x40]
0x136d: V1284 = M[V1283]
0x1371: V1285 = 0x1
0x1373: V1286 = 0x3
0x1375: V1287 = 0x0
0x1378: V1288 = 0xffffffffffffffffffffffffffffffffffffffff
0x138d: V1289 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x138e: V1290 = 0xffffffffffffffffffffffffffffffffffffffff
0x13a3: V1291 = AND 0xffffffffffffffffffffffffffffffffffffffff V1289
0x13a5: M[0x0] = V1291
0x13a6: V1292 = 0x20
0x13a8: V1293 = ADD 0x20 0x0
0x13ab: M[0x20] = 0x3
0x13ac: V1294 = 0x20
0x13ae: V1295 = ADD 0x20 0x20
0x13af: V1296 = 0x0
0x13b1: V1297 = SHA3 0x0 0x40
0x13b2: V1298 = 0x0
0x13b4: V1299 = 0x100
0x13b7: V1300 = EXP 0x100 0x0
0x13b9: V1301 = S[V1297]
0x13bb: V1302 = 0xff
0x13bd: V1303 = MUL 0xff 0x1
0x13be: V1304 = NOT 0xff
0x13bf: V1305 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1301
0x13c2: V1306 = ISZERO 0x1
0x13c3: V1307 = ISZERO 0x0
0x13c4: V1308 = MUL 0x1 0x1
0x13c5: V1309 = OR 0x1 V1305
0x13c7: S[V1297] = V1309
---
Entry stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x705, 0xca7}, S3, S2, 0x95ea7b3, S0]
Stack pops: 4
Stack additions: [S3]
Exit stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x705, 0xca7}, S3]

================================

Block 0x13c9
[0x13c9:0x13cb]
---
Predecessors: [0x11a8, 0x1365]
Successors: [0x705, 0xca7]
---
0x13c9 JUMPDEST
0x13ca POP
0x13cb JUMP
---
0x13c9: JUMPDEST 
0x13cb: JUMP {0x705, 0xca7}
---
Entry stack: [S17, S16, S15, V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x705, 0xca7}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S17, S16, S15, V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x13cc
[0x13cc:0x13d6]
---
Predecessors: [0x991]
Successors: [0x13d7, 0x13df]
---
0x13cc JUMPDEST
0x13cd PUSH1 0x0
0x13cf DUP1
0x13d0 DUP4
0x13d1 EQ
0x13d2 ISZERO
0x13d3 PUSH2 0x13df
0x13d6 JUMPI
---
0x13cc: JUMPDEST 
0x13cd: V1310 = 0x0
0x13d1: V1311 = EQ S1 0x0
0x13d2: V1312 = ISZERO V1311
0x13d3: V1313 = 0x13df
0x13d6: JUMPI 0x13df V1312
---
Entry stack: [S23, S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x24a, 0x85a, 0xdfc}, S7, S6, S5, 0x0, 0x9a6, 0x9a0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [S23, S22, V11, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x24a, 0x85a, 0xdfc}, S7, S6, S5, 0x0, 0x9a6, 0x9a0, S1, S0, 0x0]

================================

Block 0x13d7
[0x13d7:0x13de]
---
Predecessors: [0x13cc]
Successors: [0x13fe]
---
0x13d7 PUSH1 0x0
0x13d9 SWAP1
0x13da POP
0x13db PUSH2 0x13fe
0x13de JUMP
---
0x13d7: V1314 = 0x0
0x13db: V1315 = 0x13fe
0x13de: JUMP 0x13fe
---
Entry stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, {0x24a, 0x85a, 0xdfc}, S8, S7, S6, 0x0, 0x9a6, 0x9a0, S2, S1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, {0x24a, 0x85a, 0xdfc}, S8, S7, S6, 0x0, 0x9a6, 0x9a0, S2, S1, 0x0]

================================

Block 0x13df
[0x13df:0x13ee]
---
Predecessors: [0x13cc]
Successors: [0x13ef, 0x13f0]
---
0x13df JUMPDEST
0x13e0 DUP2
0x13e1 DUP4
0x13e2 MUL
0x13e3 SWAP1
0x13e4 POP
0x13e5 DUP2
0x13e6 DUP4
0x13e7 DUP3
0x13e8 DUP2
0x13e9 ISZERO
0x13ea ISZERO
0x13eb PUSH2 0x13f0
0x13ee JUMPI
---
0x13df: JUMPDEST 
0x13e2: V1316 = MUL S2 S1
0x13e9: V1317 = ISZERO S2
0x13ea: V1318 = ISZERO V1317
0x13eb: V1319 = 0x13f0
0x13ee: JUMPI 0x13f0 V1318
---
Entry stack: [S24, S23, V11, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x24a, 0x85a, 0xdfc}, S8, S7, S6, 0x0, 0x9a6, 0x9a0, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V1316, S1, S2, V1316]
Exit stack: [S24, S23, V11, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x24a, 0x85a, 0xdfc}, S8, S7, S6, 0x0, 0x9a6, 0x9a0, S2, S1, V1316, S1, S2, V1316]

================================

Block 0x13ef
[0x13ef:0x13ef]
---
Predecessors: [0x13df]
Successors: []
---
0x13ef INVALID
---
0x13ef: INVALID 
---
Entry stack: [S23, S22, S21, V11, S19, S18, S17, S16, S15, S14, S13, {0x24a, 0x85a, 0xdfc}, S11, S10, S9, 0x0, 0x9a6, 0x9a0, S5, S4, V1316, S2, S1, V1316]
Stack pops: 0
Stack additions: []
Exit stack: [S23, S22, S21, V11, S19, S18, S17, S16, S15, S14, S13, {0x24a, 0x85a, 0xdfc}, S11, S10, S9, 0x0, 0x9a6, 0x9a0, S5, S4, V1316, S2, S1, V1316]

================================

Block 0x13f0
[0x13f0:0x13f8]
---
Predecessors: [0x13df]
Successors: [0x13f9, 0x13fa]
---
0x13f0 JUMPDEST
0x13f1 DIV
0x13f2 EQ
0x13f3 ISZERO
0x13f4 ISZERO
0x13f5 PUSH2 0x13fa
0x13f8 JUMPI
---
0x13f0: JUMPDEST 
0x13f1: V1320 = DIV V1316 S1
0x13f2: V1321 = EQ V1320 S2
0x13f3: V1322 = ISZERO V1321
0x13f4: V1323 = ISZERO V1322
0x13f5: V1324 = 0x13fa
0x13f8: JUMPI 0x13fa V1323
---
Entry stack: [S23, S22, S21, V11, S19, S18, S17, S16, S15, S14, S13, {0x24a, 0x85a, 0xdfc}, S11, S10, S9, 0x0, 0x9a6, 0x9a0, S5, S4, V1316, S2, S1, V1316]
Stack pops: 3
Stack additions: []
Exit stack: [S23, S22, S21, V11, S19, S18, S17, S16, S15, S14, S13, {0x24a, 0x85a, 0xdfc}, S11, S10, S9, 0x0, 0x9a6, 0x9a0, S5, S4, V1316]

================================

Block 0x13f9
[0x13f9:0x13f9]
---
Predecessors: [0x13f0]
Successors: []
---
0x13f9 INVALID
---
0x13f9: INVALID 
---
Entry stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, {0x24a, 0x85a, 0xdfc}, S8, S7, S6, 0x0, 0x9a6, 0x9a0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, {0x24a, 0x85a, 0xdfc}, S8, S7, S6, 0x0, 0x9a6, 0x9a0, S2, S1, S0]

================================

Block 0x13fa
[0x13fa:0x13fd]
---
Predecessors: [0x13f0]
Successors: [0x13fe]
---
0x13fa JUMPDEST
0x13fb DUP1
0x13fc SWAP1
0x13fd POP
---
0x13fa: JUMPDEST 
---
Entry stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, {0x24a, 0x85a, 0xdfc}, S8, S7, S6, 0x0, 0x9a6, 0x9a0, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, {0x24a, 0x85a, 0xdfc}, S8, S7, S6, 0x0, 0x9a6, 0x9a0, S2, S1, S0]

================================

Block 0x13fe
[0x13fe:0x1403]
---
Predecessors: [0x13d7, 0x13fa]
Successors: [0x9a0]
---
0x13fe JUMPDEST
0x13ff SWAP3
0x1400 SWAP2
0x1401 POP
0x1402 POP
0x1403 JUMP
---
0x13fe: JUMPDEST 
0x1403: JUMP 0x9a0
---
Entry stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, {0x24a, 0x85a, 0xdfc}, S8, S7, S6, 0x0, 0x9a6, 0x9a0, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [S20, S19, S18, V11, S16, S15, S14, S13, S12, S11, S10, {0x24a, 0x85a, 0xdfc}, S8, S7, S6, 0x0, 0x9a6, S0]

================================

Block 0x1404
[0x1404:0x140f]
---
Predecessors: [0x9a0]
Successors: [0x1410, 0x1411]
---
0x1404 JUMPDEST
0x1405 PUSH1 0x0
0x1407 DUP2
0x1408 DUP4
0x1409 DUP2
0x140a ISZERO
0x140b ISZERO
0x140c PUSH2 0x1411
0x140f JUMPI
---
0x1404: JUMPDEST 
0x1405: V1325 = 0x0
0x140a: V1326 = ISZERO S0
0x140b: V1327 = ISZERO V1326
0x140c: V1328 = 0x1411
0x140f: JUMPI 0x1411 V1327
---
Entry stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, {0x24a, 0x85a, 0xdfc}, S6, S5, S4, 0x0, 0x9a6, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S0, S1]
Exit stack: [S18, S17, S16, V11, S14, S13, S12, S11, S10, S9, S8, {0x24a, 0x85a, 0xdfc}, S6, S5, S4, 0x0, 0x9a6, S1, S0, 0x0, S0, S1]

================================

Block 0x1410
[0x1410:0x1410]
---
Predecessors: [0x1404]
Successors: []
---
0x1410 INVALID
---
0x1410: INVALID 
---
Entry stack: [S21, S20, S19, V11, S17, S16, S15, S14, S13, S12, S11, {0x24a, 0x85a, 0xdfc}, S9, S8, S7, 0x0, 0x9a6, S4, S3, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S21, S20, S19, V11, S17, S16, S15, S14, S13, S12, S11, {0x24a, 0x85a, 0xdfc}, S9, S8, S7, 0x0, 0x9a6, S4, S3, 0x0, S1, S0]

================================

Block 0x1411
[0x1411:0x1419]
---
Predecessors: [0x1404]
Successors: [0x9a6]
---
0x1411 JUMPDEST
0x1412 DIV
0x1413 SWAP1
0x1414 POP
0x1415 SWAP3
0x1416 SWAP2
0x1417 POP
0x1418 POP
0x1419 JUMP
---
0x1411: JUMPDEST 
0x1412: V1329 = DIV S0 S1
0x1419: JUMP 0x9a6
---
Entry stack: [S21, S20, S19, V11, S17, S16, S15, S14, S13, S12, S11, {0x24a, 0x85a, 0xdfc}, S9, S8, S7, 0x0, 0x9a6, S4, S3, 0x0, S1, S0]
Stack pops: 6
Stack additions: [V1329]
Exit stack: [S21, S20, S19, V11, S17, S16, S15, S14, S13, S12, S11, {0x24a, 0x85a, 0xdfc}, S9, S8, S7, 0x0, V1329]

================================

Block 0x141a
[0x141a:0x1429]
---
Predecessors: [0x358, 0x5b3, 0x9d5, 0x110d]
Successors: [0x142a]
---
0x141a JUMPDEST
0x141b PUSH1 0xa0
0x141d PUSH1 0x40
0x141f MLOAD
0x1420 SWAP1
0x1421 DUP2
0x1422 ADD
0x1423 PUSH1 0x40
0x1425 MSTORE
0x1426 DUP1
0x1427 PUSH1 0x5
0x1429 SWAP1
---
0x141a: JUMPDEST 
0x141b: V1330 = 0xa0
0x141d: V1331 = 0x40
0x141f: V1332 = M[0x40]
0x1422: V1333 = ADD V1332 0xa0
0x1423: V1334 = 0x40
0x1425: M[0x40] = V1333
0x1427: V1335 = 0x5
---
Entry stack: [S23, S22, S21, V11, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x362, 0x5bd, 0x9df, 0x1115}]
Stack pops: 0
Stack additions: [V1332, 0x5, V1332]
Exit stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x362, 0x5bd, 0x9df, 0x1115}, V1332, 0x5, V1332]

================================

Block 0x142a
[0x142a:0x1452]
---
Predecessors: [0x141a, 0x142a]
Successors: [0x142a, 0x1453]
---
0x142a JUMPDEST
0x142b PUSH1 0x0
0x142d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1442 AND
0x1443 DUP2
0x1444 MSTORE
0x1445 PUSH1 0x20
0x1447 ADD
0x1448 SWAP1
0x1449 PUSH1 0x1
0x144b SWAP1
0x144c SUB
0x144d SWAP1
0x144e DUP2
0x144f PUSH2 0x142a
0x1452 JUMPI
---
0x142a: JUMPDEST 
0x142b: V1336 = 0x0
0x142d: V1337 = 0xffffffffffffffffffffffffffffffffffffffff
0x1442: V1338 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1444: M[S0] = 0x0
0x1445: V1339 = 0x20
0x1447: V1340 = ADD 0x20 S0
0x1449: V1341 = 0x1
0x144c: V1342 = SUB S1 0x1
0x144f: V1343 = 0x142a
0x1452: JUMPI 0x142a V1342
---
Entry stack: [S25, S24, V11, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x362, 0x5bd, 0x9df, 0x1115}, V1332, S1, S0]
Stack pops: 2
Stack additions: [V1342, V1340]
Exit stack: [S25, S24, V11, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x362, 0x5bd, 0x9df, 0x1115}, V1332, V1342, V1340]

================================

Block 0x1453
[0x1453:0x1457]
---
Predecessors: [0x142a]
Successors: [0x362, 0x5bd, 0x9df, 0x1115]
---
0x1453 SWAP1
0x1454 POP
0x1455 POP
0x1456 SWAP1
0x1457 JUMP
---
0x1457: JUMP {0x362, 0x5bd, 0x9df, 0x1115}
---
Entry stack: [S24, V11, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x362, 0x5bd, 0x9df, 0x1115}, V1332, V1342, V1340]
Stack pops: 4
Stack additions: [S2]
Exit stack: [S24, V11, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1332]

================================

Block 0x1458
[0x1458:0x148b]
---
Predecessors: []
Successors: []
---
0x1458 STOP
0x1459 LOG1
0x145a PUSH6 0x627a7a723058
0x1461 SHA3
0x1462 PUSH15 0xe26c514da59776dff390910b627a19
0x1472 SDIV
0x1473 PUSH24 0x452a2497437f8bab750c900d40f80029
---
0x1458: STOP 
0x1459: LOG S0 S1 S2
0x145a: V1344 = 0x627a7a723058
0x1461: V1345 = SHA3 0x627a7a723058 S3
0x1462: V1346 = 0xe26c514da59776dff390910b627a19
0x1472: V1347 = SDIV 0xe26c514da59776dff390910b627a19 V1345
0x1473: V1348 = 0x452a2497437f8bab750c900d40f80029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x452a2497437f8bab750c900d40f80029, V1347]
Exit stack: []

================================

Function 0:
Public function signature: 0x4102bf5c
Entry block: 0x90
Exit block: 0xad0
Body: 0x90, 0x97, 0x9b, 0x358, 0x362, 0xad0

Function 1:
Public function signature: 0x4981b3ca
Entry block: 0xfc
Exit block: 0xad0
Body: 0xfc, 0x103, 0x107, 0x5b3, 0x5bd, 0xad0

Function 2:
Public function signature: 0x708c3e44
Entry block: 0x171
Exit block: 0x1a8
Body: 0x171, 0x178, 0x17c, 0x1a8, 0x94c

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x1c2
Exit block: 0x1d5
Body: 0x1c2, 0x1c9, 0x1cd, 0x1d5, 0x96c

Function 4:
Public function signature: 0x98024a8b
Entry block: 0x217
Exit block: 0xed5
Body: 0x217, 0x21e, 0x222, 0x24a, 0x85a, 0x8e8, 0x8ec, 0x8f5, 0x8f9, 0x938, 0x93c, 0x991, 0x9a0, 0x9a6, 0xdfc, 0xe0c, 0xe0d, 0xeaf, 0xeb3, 0xebc, 0xec0, 0xed1, 0xed5, 0x13cc, 0x13d7, 0x13df, 0x13ef, 0x13f0, 0x13f9, 0x13fa, 0x13fe, 0x1404, 0x1410, 0x1411

Function 5:
Public function signature: 0x9cd01605
Entry block: 0x260
Exit block: 0x273
Body: 0x260, 0x267, 0x26b, 0x273, 0x9af

Function 6:
Public function signature: 0xbdd5be2f
Entry block: 0x2b5
Exit block: 0xad0
Body: 0x2b5, 0x9d5, 0x9df, 0xad0

Function 7:
Public function signature: 0xf2fde38b
Entry block: 0x31f
Exit block: 0x356
Body: 0x31f, 0x326, 0x32a, 0x356, 0xee6, 0xf3d, 0xf41, 0xf79, 0xf7d

Function 8:
Public fallback function
Entry block: 0x8e
Exit block: 0x8e
Body: 0x8e

Function 9:
Private function
Entry block: 0x141a
Exit block: 0x1453
Body: 0x141a, 0x142a, 0x1453

Function 10:
Private function
Entry block: 0x110d
Exit block: 0x1189
Body: 0x110d, 0x1115, 0x111b, 0x1125, 0x1132, 0x1145, 0x1189

Function 11:
Private function
Entry block: 0x103b
Exit block: 0x1105
Body: 0x103b, 0x1063, 0x1085, 0x10ab, 0x10c8, 0x10cf, 0x10e0, 0x10e7, 0x10ee, 0x10fe, 0x1105

