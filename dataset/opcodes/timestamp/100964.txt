args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/1/100964.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb7]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb7
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb7
0xa: JUMPI 0xb7 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x279]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x1cb3b20
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x279
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x1cb3b20
0x39: V12 = EQ V10 0x1cb3b20
0x3a: V13 = 0x279
0x3d: JUMPI 0x279 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x28e]
---
0x3e DUP1
0x3f PUSH4 0x29dcb0cf
0x44 EQ
0x45 PUSH2 0x28e
0x48 JUMPI
---
0x3f: V14 = 0x29dcb0cf
0x44: V15 = EQ 0x29dcb0cf V10
0x45: V16 = 0x28e
0x48: JUMPI 0x28e V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x2b3]
---
0x49 DUP1
0x4a PUSH4 0x2c4e722e
0x4f EQ
0x50 PUSH2 0x2b3
0x53 JUMPI
---
0x4a: V17 = 0x2c4e722e
0x4f: V18 = EQ 0x2c4e722e V10
0x50: V19 = 0x2b3
0x53: JUMPI 0x2b3 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x2d8]
---
0x54 DUP1
0x55 PUSH4 0x38af3eed
0x5a EQ
0x5b PUSH2 0x2d8
0x5e JUMPI
---
0x55: V20 = 0x38af3eed
0x5a: V21 = EQ 0x38af3eed V10
0x5b: V22 = 0x2d8
0x5e: JUMPI 0x2d8 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x307]
---
0x5f DUP1
0x60 PUSH4 0x6e66f6e9
0x65 EQ
0x66 PUSH2 0x307
0x69 JUMPI
---
0x60: V23 = 0x6e66f6e9
0x65: V24 = EQ 0x6e66f6e9 V10
0x66: V25 = 0x307
0x69: JUMPI 0x307 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x336]
---
0x6a DUP1
0x6b PUSH4 0x6f152670
0x70 EQ
0x71 PUSH2 0x336
0x74 JUMPI
---
0x6b: V26 = 0x6f152670
0x70: V27 = EQ 0x6f152670 V10
0x71: V28 = 0x336
0x74: JUMPI 0x336 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x35b]
---
0x75 DUP1
0x76 PUSH4 0x70a08231
0x7b EQ
0x7c PUSH2 0x35b
0x7f JUMPI
---
0x76: V29 = 0x70a08231
0x7b: V30 = EQ 0x70a08231 V10
0x7c: V31 = 0x35b
0x7f: JUMPI 0x35b V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x38c]
---
0x80 DUP1
0x81 PUSH4 0x7b3e5e7b
0x86 EQ
0x87 PUSH2 0x38c
0x8a JUMPI
---
0x81: V32 = 0x7b3e5e7b
0x86: V33 = EQ 0x7b3e5e7b V10
0x87: V34 = 0x38c
0x8a: JUMPI 0x38c V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x3b1]
---
0x8b DUP1
0x8c PUSH4 0x984877b0
0x91 EQ
0x92 PUSH2 0x3b1
0x95 JUMPI
---
0x8c: V35 = 0x984877b0
0x91: V36 = EQ 0x984877b0 V10
0x92: V37 = 0x3b1
0x95: JUMPI 0x3b1 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x3c6]
---
0x96 DUP1
0x97 PUSH4 0xbe9a6555
0x9c EQ
0x9d PUSH2 0x3c6
0xa0 JUMPI
---
0x97: V38 = 0xbe9a6555
0x9c: V39 = EQ 0xbe9a6555 V10
0x9d: V40 = 0x3c6
0xa0: JUMPI 0x3c6 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x3eb]
---
0xa1 DUP1
0xa2 PUSH4 0xd54604ae
0xa7 EQ
0xa8 PUSH2 0x3eb
0xab JUMPI
---
0xa2: V41 = 0xd54604ae
0xa7: V42 = EQ 0xd54604ae V10
0xa8: V43 = 0x3eb
0xab: JUMPI 0x3eb V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x410]
---
0xac DUP1
0xad PUSH4 0xfd6b7ef8
0xb2 EQ
0xb3 PUSH2 0x410
0xb6 JUMPI
---
0xad: V44 = 0xfd6b7ef8
0xb2: V45 = EQ 0xfd6b7ef8 V10
0xb3: V46 = 0x410
0xb6: JUMPI 0x410 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xba]
---
Predecessors: [0x0, 0xac]
Successors: [0xbb]
---
0xb7 JUMPDEST
0xb8 PUSH2 0x277
---
0xb7: JUMPDEST 
0xb8: V47 = 0x277
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x277]
Exit stack: [V10, 0x277]

================================

Block 0xbb
[0xbb:0xc7]
---
Predecessors: [0xb7]
Successors: [0xc8, 0xcc]
---
0xbb JUMPDEST
0xbc PUSH1 0x5
0xbe SLOAD
0xbf CALLVALUE
0xc0 SWAP1
0xc1 TIMESTAMP
0xc2 LT
0xc3 ISZERO
0xc4 PUSH2 0xcc
0xc7 JUMPI
---
0xbb: JUMPDEST 
0xbc: V48 = 0x5
0xbe: V49 = S[0x5]
0xbf: V50 = CALLVALUE
0xc1: V51 = TIMESTAMP
0xc2: V52 = LT V51 V49
0xc3: V53 = ISZERO V52
0xc4: V54 = 0xcc
0xc7: JUMPI 0xcc V53
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V10, 0x277, V50]

================================

Block 0xc8
[0xc8:0xcb]
---
Predecessors: [0xbb]
Successors: []
---
0xc8 PUSH1 0x0
0xca DUP1
0xcb REVERT
---
0xc8: V55 = 0x0
0xcb: REVERT 0x0 0x0
---
Entry stack: [V10, 0x277, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, V50]

================================

Block 0xcc
[0xcc:0xdc]
---
Predecessors: [0xbb]
Successors: [0xdd, 0xe1]
---
0xcc JUMPDEST
0xcd PUSH1 0x9
0xcf SLOAD
0xd0 PUSH2 0x100
0xd3 SWAP1
0xd4 DIV
0xd5 PUSH1 0xff
0xd7 AND
0xd8 ISZERO
0xd9 PUSH2 0xe1
0xdc JUMPI
---
0xcc: JUMPDEST 
0xcd: V56 = 0x9
0xcf: V57 = S[0x9]
0xd0: V58 = 0x100
0xd4: V59 = DIV V57 0x100
0xd5: V60 = 0xff
0xd7: V61 = AND 0xff V59
0xd8: V62 = ISZERO V61
0xd9: V63 = 0xe1
0xdc: JUMPI 0xe1 V62
---
Entry stack: [V10, 0x277, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, V50]

================================

Block 0xdd
[0xdd:0xe0]
---
Predecessors: [0xcc]
Successors: []
---
0xdd PUSH1 0x0
0xdf DUP1
0xe0 REVERT
---
0xdd: V64 = 0x0
0xe0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x277, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, V50]

================================

Block 0xe1
[0xe1:0xef]
---
Predecessors: [0xcc]
Successors: [0xf0, 0xf4]
---
0xe1 JUMPDEST
0xe2 PUSH1 0x2
0xe4 SLOAD
0xe5 PUSH1 0x3
0xe7 SLOAD
0xe8 DUP3
0xe9 ADD
0xea GT
0xeb ISZERO
0xec PUSH2 0xf4
0xef JUMPI
---
0xe1: JUMPDEST 
0xe2: V65 = 0x2
0xe4: V66 = S[0x2]
0xe5: V67 = 0x3
0xe7: V68 = S[0x3]
0xe9: V69 = ADD V50 V68
0xea: V70 = GT V69 V66
0xeb: V71 = ISZERO V70
0xec: V72 = 0xf4
0xef: JUMPI 0xf4 V71
---
Entry stack: [V10, 0x277, V50]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x277, V50]

================================

Block 0xf0
[0xf0:0xf3]
---
Predecessors: [0xe1]
Successors: []
---
0xf0 PUSH1 0x0
0xf2 DUP1
0xf3 REVERT
---
0xf0: V73 = 0x0
0xf3: REVERT 0x0 0x0
---
Entry stack: [V10, 0x277, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, V50]

================================

Block 0xf4
[0xf4:0x104]
---
Predecessors: [0xe1]
Successors: [0x105, 0x109]
---
0xf4 JUMPDEST
0xf5 PUSH8 0x4563918244f40000
0xfe DUP2
0xff LT
0x100 ISZERO
0x101 PUSH2 0x109
0x104 JUMPI
---
0xf4: JUMPDEST 
0xf5: V74 = 0x4563918244f40000
0xff: V75 = LT V50 0x4563918244f40000
0x100: V76 = ISZERO V75
0x101: V77 = 0x109
0x104: JUMPI 0x109 V76
---
Entry stack: [V10, 0x277, V50]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x277, V50]

================================

Block 0x105
[0x105:0x108]
---
Predecessors: [0xf4]
Successors: []
---
0x105 PUSH1 0x0
0x107 DUP1
0x108 REVERT
---
0x105: V78 = 0x0
0x108: REVERT 0x0 0x0
---
Entry stack: [V10, 0x277, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, V50]

================================

Block 0x109
[0x109:0x152]
---
Predecessors: [0xf4]
Successors: [0x153]
---
0x109 JUMPDEST
0x10a CALLER
0x10b PUSH1 0x1
0x10d PUSH1 0xa0
0x10f PUSH1 0x2
0x111 EXP
0x112 SUB
0x113 DUP2
0x114 DUP2
0x115 AND
0x116 PUSH1 0x0
0x118 SWAP1
0x119 DUP2
0x11a MSTORE
0x11b PUSH1 0x8
0x11d PUSH1 0x20
0x11f MSTORE
0x120 PUSH1 0x40
0x122 SWAP1
0x123 SHA3
0x124 DUP1
0x125 SLOAD
0x126 DUP5
0x127 ADD
0x128 SWAP1
0x129 SSTORE
0x12a PUSH1 0x3
0x12c DUP1
0x12d SLOAD
0x12e DUP5
0x12f ADD
0x130 SWAP1
0x131 SSTORE
0x132 PUSH1 0x7
0x134 SLOAD
0x135 PUSH1 0x6
0x137 SLOAD
0x138 SWAP2
0x139 AND
0x13a SWAP2
0x13b PUSH4 0xa9059cbb
0x140 SWAP2
0x141 PUSH8 0xde0b6b3a7640000
0x14a SWAP1
0x14b DUP6
0x14c MUL
0x14d PUSH4 0x5f5e100
0x152 MUL
---
0x109: JUMPDEST 
0x10a: V79 = CALLER
0x10b: V80 = 0x1
0x10d: V81 = 0xa0
0x10f: V82 = 0x2
0x111: V83 = EXP 0x2 0xa0
0x112: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0x115: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x116: V86 = 0x0
0x11a: M[0x0] = V85
0x11b: V87 = 0x8
0x11d: V88 = 0x20
0x11f: M[0x20] = 0x8
0x120: V89 = 0x40
0x123: V90 = SHA3 0x0 0x40
0x125: V91 = S[V90]
0x127: V92 = ADD V50 V91
0x129: S[V90] = V92
0x12a: V93 = 0x3
0x12d: V94 = S[0x3]
0x12f: V95 = ADD V50 V94
0x131: S[0x3] = V95
0x132: V96 = 0x7
0x134: V97 = S[0x7]
0x135: V98 = 0x6
0x137: V99 = S[0x6]
0x139: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x13b: V101 = 0xa9059cbb
0x141: V102 = 0xde0b6b3a7640000
0x14c: V103 = MUL V50 V99
0x14d: V104 = 0x5f5e100
0x152: V105 = MUL 0x5f5e100 V103
---
Entry stack: [V10, 0x277, V50]
Stack pops: 1
Stack additions: [S0, V100, 0xa9059cbb, V79, 0xde0b6b3a7640000, V105]
Exit stack: [V10, 0x277, V50, V100, 0xa9059cbb, V79, 0xde0b6b3a7640000, V105]

================================

Block 0x153
[0x153:0x1ab]
---
Predecessors: [0x109]
Successors: [0x1ac, 0x1b0]
---
0x153 JUMPDEST
0x154 DIV
0x155 PUSH1 0x40
0x157 MLOAD
0x158 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x176 PUSH4 0xffffffff
0x17b DUP6
0x17c AND
0x17d MUL
0x17e DUP2
0x17f MSTORE
0x180 PUSH1 0x1
0x182 PUSH1 0xa0
0x184 PUSH1 0x2
0x186 EXP
0x187 SUB
0x188 SWAP1
0x189 SWAP3
0x18a AND
0x18b PUSH1 0x4
0x18d DUP4
0x18e ADD
0x18f MSTORE
0x190 PUSH1 0x24
0x192 DUP3
0x193 ADD
0x194 MSTORE
0x195 PUSH1 0x44
0x197 ADD
0x198 PUSH1 0x0
0x19a PUSH1 0x40
0x19c MLOAD
0x19d DUP1
0x19e DUP4
0x19f SUB
0x1a0 DUP2
0x1a1 PUSH1 0x0
0x1a3 DUP8
0x1a4 DUP1
0x1a5 EXTCODESIZE
0x1a6 ISZERO
0x1a7 ISZERO
0x1a8 PUSH2 0x1b0
0x1ab JUMPI
---
0x153: JUMPDEST 
0x154: V106 = DIV V105 0xde0b6b3a7640000
0x155: V107 = 0x40
0x157: V108 = M[0x40]
0x158: V109 = 0x100000000000000000000000000000000000000000000000000000000
0x176: V110 = 0xffffffff
0x17c: V111 = AND 0xa9059cbb 0xffffffff
0x17d: V112 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x17f: M[V108] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x180: V113 = 0x1
0x182: V114 = 0xa0
0x184: V115 = 0x2
0x186: V116 = EXP 0x2 0xa0
0x187: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18a: V118 = AND V79 0xffffffffffffffffffffffffffffffffffffffff
0x18b: V119 = 0x4
0x18e: V120 = ADD V108 0x4
0x18f: M[V120] = V118
0x190: V121 = 0x24
0x193: V122 = ADD V108 0x24
0x194: M[V122] = V106
0x195: V123 = 0x44
0x197: V124 = ADD 0x44 V108
0x198: V125 = 0x0
0x19a: V126 = 0x40
0x19c: V127 = M[0x40]
0x19f: V128 = SUB V124 V127
0x1a1: V129 = 0x0
0x1a5: V130 = EXTCODESIZE V100
0x1a6: V131 = ISZERO V130
0x1a7: V132 = ISZERO V131
0x1a8: V133 = 0x1b0
0x1ab: JUMPI 0x1b0 V132
---
Entry stack: [V10, 0x277, V50, V100, 0xa9059cbb, V79, 0xde0b6b3a7640000, V105]
Stack pops: 5
Stack additions: [S4, S3, V124, 0x0, V127, V128, V127, 0x0, S4]
Exit stack: [V10, 0x277, V50, V100, 0xa9059cbb, V124, 0x0, V127, V128, V127, 0x0, V100]

================================

Block 0x1ac
[0x1ac:0x1af]
---
Predecessors: [0x153]
Successors: []
---
0x1ac PUSH1 0x0
0x1ae DUP1
0x1af REVERT
---
0x1ac: V134 = 0x0
0x1af: REVERT 0x0 0x0
---
Entry stack: [V10, 0x277, V50, V100, 0xa9059cbb, V124, 0x0, V127, V128, V127, 0x0, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, V50, V100, 0xa9059cbb, V124, 0x0, V127, V128, V127, 0x0, V100]

================================

Block 0x1b0
[0x1b0:0x1bc]
---
Predecessors: [0x153]
Successors: [0x1bd, 0x1c1]
---
0x1b0 JUMPDEST
0x1b1 PUSH2 0x2c6
0x1b4 GAS
0x1b5 SUB
0x1b6 CALL
0x1b7 ISZERO
0x1b8 ISZERO
0x1b9 PUSH2 0x1c1
0x1bc JUMPI
---
0x1b0: JUMPDEST 
0x1b1: V135 = 0x2c6
0x1b4: V136 = GAS
0x1b5: V137 = SUB V136 0x2c6
0x1b6: V138 = CALL V137 V100 0x0 V127 V128 V127 0x0
0x1b7: V139 = ISZERO V138
0x1b8: V140 = ISZERO V139
0x1b9: V141 = 0x1c1
0x1bc: JUMPI 0x1c1 V140
---
Entry stack: [V10, 0x277, V50, V100, 0xa9059cbb, V124, 0x0, V127, V128, V127, 0x0, V100]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x277, V50, V100, 0xa9059cbb, V124]

================================

Block 0x1bd
[0x1bd:0x1c0]
---
Predecessors: [0x1b0]
Successors: []
---
0x1bd PUSH1 0x0
0x1bf DUP1
0x1c0 REVERT
---
0x1bd: V142 = 0x0
0x1c0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x277, V50, V100, 0xa9059cbb, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, V50, V100, 0xa9059cbb, V124]

================================

Block 0x1c1
[0x1c1:0x1d0]
---
Predecessors: [0x1b0]
Successors: [0x1d1, 0x231]
---
0x1c1 JUMPDEST
0x1c2 POP
0x1c3 POP
0x1c4 PUSH1 0x1
0x1c6 SLOAD
0x1c7 PUSH1 0x3
0x1c9 SLOAD
0x1ca LT
0x1cb SWAP1
0x1cc POP
0x1cd PUSH2 0x231
0x1d0 JUMPI
---
0x1c1: JUMPDEST 
0x1c4: V143 = 0x1
0x1c6: V144 = S[0x1]
0x1c7: V145 = 0x3
0x1c9: V146 = S[0x3]
0x1ca: V147 = LT V146 V144
0x1cd: V148 = 0x231
0x1d0: JUMPI 0x231 V147
---
Entry stack: [V10, 0x277, V50, V100, 0xa9059cbb, V124]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x277, V50]

================================

Block 0x1d1
[0x1d1:0x230]
---
Predecessors: [0x1c1]
Successors: [0x231]
---
0x1d1 PUSH1 0x9
0x1d3 DUP1
0x1d4 SLOAD
0x1d5 PUSH1 0xff
0x1d7 NOT
0x1d8 AND
0x1d9 PUSH1 0x1
0x1db OR
0x1dc SWAP1
0x1dd SSTORE
0x1de PUSH1 0x0
0x1e0 SLOAD
0x1e1 PUSH1 0x3
0x1e3 SLOAD
0x1e4 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x205 SWAP2
0x206 PUSH1 0x1
0x208 PUSH1 0xa0
0x20a PUSH1 0x2
0x20c EXP
0x20d SUB
0x20e AND
0x20f SWAP1
0x210 PUSH1 0x40
0x212 MLOAD
0x213 PUSH1 0x1
0x215 PUSH1 0xa0
0x217 PUSH1 0x2
0x219 EXP
0x21a SUB
0x21b SWAP1
0x21c SWAP3
0x21d AND
0x21e DUP3
0x21f MSTORE
0x220 PUSH1 0x20
0x222 DUP3
0x223 ADD
0x224 MSTORE
0x225 PUSH1 0x40
0x227 SWAP1
0x228 DUP2
0x229 ADD
0x22a SWAP1
0x22b MLOAD
0x22c DUP1
0x22d SWAP2
0x22e SUB
0x22f SWAP1
0x230 LOG1
---
0x1d1: V149 = 0x9
0x1d4: V150 = S[0x9]
0x1d5: V151 = 0xff
0x1d7: V152 = NOT 0xff
0x1d8: V153 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V150
0x1d9: V154 = 0x1
0x1db: V155 = OR 0x1 V153
0x1dd: S[0x9] = V155
0x1de: V156 = 0x0
0x1e0: V157 = S[0x0]
0x1e1: V158 = 0x3
0x1e3: V159 = S[0x3]
0x1e4: V160 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x206: V161 = 0x1
0x208: V162 = 0xa0
0x20a: V163 = 0x2
0x20c: V164 = EXP 0x2 0xa0
0x20d: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20e: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x210: V167 = 0x40
0x212: V168 = M[0x40]
0x213: V169 = 0x1
0x215: V170 = 0xa0
0x217: V171 = 0x2
0x219: V172 = EXP 0x2 0xa0
0x21a: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21d: V174 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x21f: M[V168] = V174
0x220: V175 = 0x20
0x223: V176 = ADD V168 0x20
0x224: M[V176] = V159
0x225: V177 = 0x40
0x229: V178 = ADD 0x40 V168
0x22b: V179 = M[0x40]
0x22e: V180 = SUB V178 V179
0x230: LOG V179 V180 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V10, 0x277, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, V50]

================================

Block 0x231
[0x231:0x273]
---
Predecessors: [0x1c1, 0x1d1]
Successors: [0x274]
---
0x231 JUMPDEST
0x232 PUSH1 0x0
0x234 DUP1
0x235 MLOAD
0x236 PUSH1 0x20
0x238 PUSH2 0x76e
0x23b DUP4
0x23c CODECOPY
0x23d DUP2
0x23e MLOAD
0x23f SWAP2
0x240 MSTORE
0x241 CALLER
0x242 DUP3
0x243 PUSH1 0x1
0x245 PUSH1 0x40
0x247 MLOAD
0x248 PUSH1 0x1
0x24a PUSH1 0xa0
0x24c PUSH1 0x2
0x24e EXP
0x24f SUB
0x250 SWAP1
0x251 SWAP4
0x252 AND
0x253 DUP4
0x254 MSTORE
0x255 PUSH1 0x20
0x257 DUP4
0x258 ADD
0x259 SWAP2
0x25a SWAP1
0x25b SWAP2
0x25c MSTORE
0x25d ISZERO
0x25e ISZERO
0x25f PUSH1 0x40
0x261 DUP1
0x262 DUP4
0x263 ADD
0x264 SWAP2
0x265 SWAP1
0x266 SWAP2
0x267 MSTORE
0x268 PUSH1 0x60
0x26a SWAP1
0x26b SWAP2
0x26c ADD
0x26d SWAP1
0x26e MLOAD
0x26f DUP1
0x270 SWAP2
0x271 SUB
0x272 SWAP1
0x273 LOG1
---
0x231: JUMPDEST 
0x232: V181 = 0x0
0x235: V182 = M[0x0]
0x236: V183 = 0x20
0x238: V184 = 0x76e
0x23c: CODECOPY 0x0 0x76e 0x20
0x23e: V185 = M[0x0]
0x240: M[0x0] = V182
0x241: V186 = CALLER
0x243: V187 = 0x1
0x245: V188 = 0x40
0x247: V189 = M[0x40]
0x248: V190 = 0x1
0x24a: V191 = 0xa0
0x24c: V192 = 0x2
0x24e: V193 = EXP 0x2 0xa0
0x24f: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x252: V195 = AND V186 0xffffffffffffffffffffffffffffffffffffffff
0x254: M[V189] = V195
0x255: V196 = 0x20
0x258: V197 = ADD V189 0x20
0x25c: M[V197] = V50
0x25d: V198 = ISZERO 0x1
0x25e: V199 = ISZERO 0x0
0x25f: V200 = 0x40
0x263: V201 = ADD V189 0x40
0x267: M[V201] = 0x1
0x268: V202 = 0x60
0x26c: V203 = ADD V189 0x60
0x26e: V204 = M[0x40]
0x271: V205 = SUB V203 V204
0x273: LOG V204 V205 V185
---
Entry stack: [V10, 0x277, V50]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x277, V50]

================================

Block 0x274
[0x274:0x276]
---
Predecessors: [0x231, 0x5dd, 0x6cc, 0x705]
Successors: [0x277]
---
0x274 JUMPDEST
0x275 POP
0x276 JUMP
---
0x274: JUMPDEST 
0x276: JUMP 0x277
---
Entry stack: [V10, 0x277, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x277
[0x277:0x278]
---
Predecessors: [0x274, 0x4ac, 0x5cf, 0x76a]
Successors: []
---
0x277 JUMPDEST
0x278 STOP
---
0x277: JUMPDEST 
0x278: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x279
[0x279:0x27f]
---
Predecessors: [0xb]
Successors: [0x280, 0x284]
---
0x279 JUMPDEST
0x27a CALLVALUE
0x27b ISZERO
0x27c PUSH2 0x284
0x27f JUMPI
---
0x279: JUMPDEST 
0x27a: V206 = CALLVALUE
0x27b: V207 = ISZERO V206
0x27c: V208 = 0x284
0x27f: JUMPI 0x284 V207
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x280
[0x280:0x283]
---
Predecessors: [0x279]
Successors: []
---
0x280 PUSH1 0x0
0x282 DUP1
0x283 REVERT
---
0x280: V209 = 0x0
0x283: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x284
[0x284:0x28b]
---
Predecessors: [0x279]
Successors: [0x425]
---
0x284 JUMPDEST
0x285 PUSH2 0x277
0x288 PUSH2 0x425
0x28b JUMP
---
0x284: JUMPDEST 
0x285: V210 = 0x277
0x288: V211 = 0x425
0x28b: JUMP 0x425
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x277]
Exit stack: [V10, 0x277]

================================

Block 0x28c
[0x28c:0x28d]
---
Predecessors: []
Successors: []
---
0x28c JUMPDEST
0x28d STOP
---
0x28c: JUMPDEST 
0x28d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x28e
[0x28e:0x294]
---
Predecessors: [0x3e]
Successors: [0x295, 0x299]
---
0x28e JUMPDEST
0x28f CALLVALUE
0x290 ISZERO
0x291 PUSH2 0x299
0x294 JUMPI
---
0x28e: JUMPDEST 
0x28f: V212 = CALLVALUE
0x290: V213 = ISZERO V212
0x291: V214 = 0x299
0x294: JUMPI 0x299 V213
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x295
[0x295:0x298]
---
Predecessors: [0x28e]
Successors: []
---
0x295 PUSH1 0x0
0x297 DUP1
0x298 REVERT
---
0x295: V215 = 0x0
0x298: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x299
[0x299:0x2a0]
---
Predecessors: [0x28e]
Successors: [0x4ae]
---
0x299 JUMPDEST
0x29a PUSH2 0x2a1
0x29d PUSH2 0x4ae
0x2a0 JUMP
---
0x299: JUMPDEST 
0x29a: V216 = 0x2a1
0x29d: V217 = 0x4ae
0x2a0: JUMP 0x4ae
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2a1]
Exit stack: [V10, 0x2a1]

================================

Block 0x2a1
[0x2a1:0x2b2]
---
Predecessors: [0x4ae, 0x4b4, 0x4d8, 0x4de, 0x4f0, 0x5d1, 0x5d7]
Successors: []
---
0x2a1 JUMPDEST
0x2a2 PUSH1 0x40
0x2a4 MLOAD
0x2a5 SWAP1
0x2a6 DUP2
0x2a7 MSTORE
0x2a8 PUSH1 0x20
0x2aa ADD
0x2ab PUSH1 0x40
0x2ad MLOAD
0x2ae DUP1
0x2af SWAP2
0x2b0 SUB
0x2b1 SWAP1
0x2b2 RETURN
---
0x2a1: JUMPDEST 
0x2a2: V218 = 0x40
0x2a4: V219 = M[0x40]
0x2a7: M[V219] = S0
0x2a8: V220 = 0x20
0x2aa: V221 = ADD 0x20 V219
0x2ab: V222 = 0x40
0x2ad: V223 = M[0x40]
0x2b0: V224 = SUB V221 V223
0x2b2: RETURN V223 V224
---
Entry stack: [V10, 0x2a1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2a1]

================================

Block 0x2b3
[0x2b3:0x2b9]
---
Predecessors: [0x49]
Successors: [0x2ba, 0x2be]
---
0x2b3 JUMPDEST
0x2b4 CALLVALUE
0x2b5 ISZERO
0x2b6 PUSH2 0x2be
0x2b9 JUMPI
---
0x2b3: JUMPDEST 
0x2b4: V225 = CALLVALUE
0x2b5: V226 = ISZERO V225
0x2b6: V227 = 0x2be
0x2b9: JUMPI 0x2be V226
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ba
[0x2ba:0x2bd]
---
Predecessors: [0x2b3]
Successors: []
---
0x2ba PUSH1 0x0
0x2bc DUP1
0x2bd REVERT
---
0x2ba: V228 = 0x0
0x2bd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2be
[0x2be:0x2c5]
---
Predecessors: [0x2b3]
Successors: [0x4b4]
---
0x2be JUMPDEST
0x2bf PUSH2 0x2a1
0x2c2 PUSH2 0x4b4
0x2c5 JUMP
---
0x2be: JUMPDEST 
0x2bf: V229 = 0x2a1
0x2c2: V230 = 0x4b4
0x2c5: JUMP 0x4b4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2a1]
Exit stack: [V10, 0x2a1]

================================

Block 0x2c6
[0x2c6:0x2d7]
---
Predecessors: []
Successors: []
---
0x2c6 JUMPDEST
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca SWAP1
0x2cb DUP2
0x2cc MSTORE
0x2cd PUSH1 0x20
0x2cf ADD
0x2d0 PUSH1 0x40
0x2d2 MLOAD
0x2d3 DUP1
0x2d4 SWAP2
0x2d5 SUB
0x2d6 SWAP1
0x2d7 RETURN
---
0x2c6: JUMPDEST 
0x2c7: V231 = 0x40
0x2c9: V232 = M[0x40]
0x2cc: M[V232] = S0
0x2cd: V233 = 0x20
0x2cf: V234 = ADD 0x20 V232
0x2d0: V235 = 0x40
0x2d2: V236 = M[0x40]
0x2d5: V237 = SUB V234 V236
0x2d7: RETURN V236 V237
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d8
[0x2d8:0x2de]
---
Predecessors: [0x54]
Successors: [0x2df, 0x2e3]
---
0x2d8 JUMPDEST
0x2d9 CALLVALUE
0x2da ISZERO
0x2db PUSH2 0x2e3
0x2de JUMPI
---
0x2d8: JUMPDEST 
0x2d9: V238 = CALLVALUE
0x2da: V239 = ISZERO V238
0x2db: V240 = 0x2e3
0x2de: JUMPI 0x2e3 V239
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2df
[0x2df:0x2e2]
---
Predecessors: [0x2d8]
Successors: []
---
0x2df PUSH1 0x0
0x2e1 DUP1
0x2e2 REVERT
---
0x2df: V241 = 0x0
0x2e2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e3
[0x2e3:0x2ea]
---
Predecessors: [0x2d8]
Successors: [0x4ba]
---
0x2e3 JUMPDEST
0x2e4 PUSH2 0x2eb
0x2e7 PUSH2 0x4ba
0x2ea JUMP
---
0x2e3: JUMPDEST 
0x2e4: V242 = 0x2eb
0x2e7: V243 = 0x4ba
0x2ea: JUMP 0x4ba
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2eb]
Exit stack: [V10, 0x2eb]

================================

Block 0x2eb
[0x2eb:0x306]
---
Predecessors: [0x4ba, 0x4c9]
Successors: []
---
0x2eb JUMPDEST
0x2ec PUSH1 0x40
0x2ee MLOAD
0x2ef PUSH1 0x1
0x2f1 PUSH1 0xa0
0x2f3 PUSH1 0x2
0x2f5 EXP
0x2f6 SUB
0x2f7 SWAP1
0x2f8 SWAP2
0x2f9 AND
0x2fa DUP2
0x2fb MSTORE
0x2fc PUSH1 0x20
0x2fe ADD
0x2ff PUSH1 0x40
0x301 MLOAD
0x302 DUP1
0x303 SWAP2
0x304 SUB
0x305 SWAP1
0x306 RETURN
---
0x2eb: JUMPDEST 
0x2ec: V244 = 0x40
0x2ee: V245 = M[0x40]
0x2ef: V246 = 0x1
0x2f1: V247 = 0xa0
0x2f3: V248 = 0x2
0x2f5: V249 = EXP 0x2 0xa0
0x2f6: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f9: V251 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2fb: M[V245] = V251
0x2fc: V252 = 0x20
0x2fe: V253 = ADD 0x20 V245
0x2ff: V254 = 0x40
0x301: V255 = M[0x40]
0x304: V256 = SUB V253 V255
0x306: RETURN V255 V256
---
Entry stack: [V10, 0x2eb, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2eb]

================================

Block 0x307
[0x307:0x30d]
---
Predecessors: [0x5f]
Successors: [0x30e, 0x312]
---
0x307 JUMPDEST
0x308 CALLVALUE
0x309 ISZERO
0x30a PUSH2 0x312
0x30d JUMPI
---
0x307: JUMPDEST 
0x308: V257 = CALLVALUE
0x309: V258 = ISZERO V257
0x30a: V259 = 0x312
0x30d: JUMPI 0x312 V258
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x30e
[0x30e:0x311]
---
Predecessors: [0x307]
Successors: []
---
0x30e PUSH1 0x0
0x310 DUP1
0x311 REVERT
---
0x30e: V260 = 0x0
0x311: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x312
[0x312:0x319]
---
Predecessors: [0x307]
Successors: [0x4c9]
---
0x312 JUMPDEST
0x313 PUSH2 0x2eb
0x316 PUSH2 0x4c9
0x319 JUMP
---
0x312: JUMPDEST 
0x313: V261 = 0x2eb
0x316: V262 = 0x4c9
0x319: JUMP 0x4c9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2eb]
Exit stack: [V10, 0x2eb]

================================

Block 0x31a
[0x31a:0x335]
---
Predecessors: []
Successors: []
---
0x31a JUMPDEST
0x31b PUSH1 0x40
0x31d MLOAD
0x31e PUSH1 0x1
0x320 PUSH1 0xa0
0x322 PUSH1 0x2
0x324 EXP
0x325 SUB
0x326 SWAP1
0x327 SWAP2
0x328 AND
0x329 DUP2
0x32a MSTORE
0x32b PUSH1 0x20
0x32d ADD
0x32e PUSH1 0x40
0x330 MLOAD
0x331 DUP1
0x332 SWAP2
0x333 SUB
0x334 SWAP1
0x335 RETURN
---
0x31a: JUMPDEST 
0x31b: V263 = 0x40
0x31d: V264 = M[0x40]
0x31e: V265 = 0x1
0x320: V266 = 0xa0
0x322: V267 = 0x2
0x324: V268 = EXP 0x2 0xa0
0x325: V269 = SUB 0x10000000000000000000000000000000000000000 0x1
0x328: V270 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x32a: M[V264] = V270
0x32b: V271 = 0x20
0x32d: V272 = ADD 0x20 V264
0x32e: V273 = 0x40
0x330: V274 = M[0x40]
0x333: V275 = SUB V272 V274
0x335: RETURN V274 V275
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x336
[0x336:0x33c]
---
Predecessors: [0x6a]
Successors: [0x33d, 0x341]
---
0x336 JUMPDEST
0x337 CALLVALUE
0x338 ISZERO
0x339 PUSH2 0x341
0x33c JUMPI
---
0x336: JUMPDEST 
0x337: V276 = CALLVALUE
0x338: V277 = ISZERO V276
0x339: V278 = 0x341
0x33c: JUMPI 0x341 V277
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33d
[0x33d:0x340]
---
Predecessors: [0x336]
Successors: []
---
0x33d PUSH1 0x0
0x33f DUP1
0x340 REVERT
---
0x33d: V279 = 0x0
0x340: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x341
[0x341:0x348]
---
Predecessors: [0x336]
Successors: [0x4d8]
---
0x341 JUMPDEST
0x342 PUSH2 0x2a1
0x345 PUSH2 0x4d8
0x348 JUMP
---
0x341: JUMPDEST 
0x342: V280 = 0x2a1
0x345: V281 = 0x4d8
0x348: JUMP 0x4d8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2a1]
Exit stack: [V10, 0x2a1]

================================

Block 0x349
[0x349:0x35a]
---
Predecessors: []
Successors: []
---
0x349 JUMPDEST
0x34a PUSH1 0x40
0x34c MLOAD
0x34d SWAP1
0x34e DUP2
0x34f MSTORE
0x350 PUSH1 0x20
0x352 ADD
0x353 PUSH1 0x40
0x355 MLOAD
0x356 DUP1
0x357 SWAP2
0x358 SUB
0x359 SWAP1
0x35a RETURN
---
0x349: JUMPDEST 
0x34a: V282 = 0x40
0x34c: V283 = M[0x40]
0x34f: M[V283] = S0
0x350: V284 = 0x20
0x352: V285 = ADD 0x20 V283
0x353: V286 = 0x40
0x355: V287 = M[0x40]
0x358: V288 = SUB V285 V287
0x35a: RETURN V287 V288
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x35b
[0x35b:0x361]
---
Predecessors: [0x75]
Successors: [0x362, 0x366]
---
0x35b JUMPDEST
0x35c CALLVALUE
0x35d ISZERO
0x35e PUSH2 0x366
0x361 JUMPI
---
0x35b: JUMPDEST 
0x35c: V289 = CALLVALUE
0x35d: V290 = ISZERO V289
0x35e: V291 = 0x366
0x361: JUMPI 0x366 V290
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x362
[0x362:0x365]
---
Predecessors: [0x35b]
Successors: []
---
0x362 PUSH1 0x0
0x364 DUP1
0x365 REVERT
---
0x362: V292 = 0x0
0x365: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x366
[0x366:0x379]
---
Predecessors: [0x35b]
Successors: [0x4de]
---
0x366 JUMPDEST
0x367 PUSH2 0x2a1
0x36a PUSH1 0x1
0x36c PUSH1 0xa0
0x36e PUSH1 0x2
0x370 EXP
0x371 SUB
0x372 PUSH1 0x4
0x374 CALLDATALOAD
0x375 AND
0x376 PUSH2 0x4de
0x379 JUMP
---
0x366: JUMPDEST 
0x367: V293 = 0x2a1
0x36a: V294 = 0x1
0x36c: V295 = 0xa0
0x36e: V296 = 0x2
0x370: V297 = EXP 0x2 0xa0
0x371: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x372: V299 = 0x4
0x374: V300 = CALLDATALOAD 0x4
0x375: V301 = AND V300 0xffffffffffffffffffffffffffffffffffffffff
0x376: V302 = 0x4de
0x379: JUMP 0x4de
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2a1, V301]
Exit stack: [V10, 0x2a1, V301]

================================

Block 0x37a
[0x37a:0x38b]
---
Predecessors: []
Successors: []
---
0x37a JUMPDEST
0x37b PUSH1 0x40
0x37d MLOAD
0x37e SWAP1
0x37f DUP2
0x380 MSTORE
0x381 PUSH1 0x20
0x383 ADD
0x384 PUSH1 0x40
0x386 MLOAD
0x387 DUP1
0x388 SWAP2
0x389 SUB
0x38a SWAP1
0x38b RETURN
---
0x37a: JUMPDEST 
0x37b: V303 = 0x40
0x37d: V304 = M[0x40]
0x380: M[V304] = S0
0x381: V305 = 0x20
0x383: V306 = ADD 0x20 V304
0x384: V307 = 0x40
0x386: V308 = M[0x40]
0x389: V309 = SUB V306 V308
0x38b: RETURN V308 V309
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x38c
[0x38c:0x392]
---
Predecessors: [0x80]
Successors: [0x393, 0x397]
---
0x38c JUMPDEST
0x38d CALLVALUE
0x38e ISZERO
0x38f PUSH2 0x397
0x392 JUMPI
---
0x38c: JUMPDEST 
0x38d: V310 = CALLVALUE
0x38e: V311 = ISZERO V310
0x38f: V312 = 0x397
0x392: JUMPI 0x397 V311
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x393
[0x393:0x396]
---
Predecessors: [0x38c]
Successors: []
---
0x393 PUSH1 0x0
0x395 DUP1
0x396 REVERT
---
0x393: V313 = 0x0
0x396: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x397
[0x397:0x39e]
---
Predecessors: [0x38c]
Successors: [0x4f0]
---
0x397 JUMPDEST
0x398 PUSH2 0x2a1
0x39b PUSH2 0x4f0
0x39e JUMP
---
0x397: JUMPDEST 
0x398: V314 = 0x2a1
0x39b: V315 = 0x4f0
0x39e: JUMP 0x4f0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2a1]
Exit stack: [V10, 0x2a1]

================================

Block 0x39f
[0x39f:0x3b0]
---
Predecessors: []
Successors: []
---
0x39f JUMPDEST
0x3a0 PUSH1 0x40
0x3a2 MLOAD
0x3a3 SWAP1
0x3a4 DUP2
0x3a5 MSTORE
0x3a6 PUSH1 0x20
0x3a8 ADD
0x3a9 PUSH1 0x40
0x3ab MLOAD
0x3ac DUP1
0x3ad SWAP2
0x3ae SUB
0x3af SWAP1
0x3b0 RETURN
---
0x39f: JUMPDEST 
0x3a0: V316 = 0x40
0x3a2: V317 = M[0x40]
0x3a5: M[V317] = S0
0x3a6: V318 = 0x20
0x3a8: V319 = ADD 0x20 V317
0x3a9: V320 = 0x40
0x3ab: V321 = M[0x40]
0x3ae: V322 = SUB V319 V321
0x3b0: RETURN V321 V322
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3b1
[0x3b1:0x3b7]
---
Predecessors: [0x8b]
Successors: [0x3b8, 0x3bc]
---
0x3b1 JUMPDEST
0x3b2 CALLVALUE
0x3b3 ISZERO
0x3b4 PUSH2 0x3bc
0x3b7 JUMPI
---
0x3b1: JUMPDEST 
0x3b2: V323 = CALLVALUE
0x3b3: V324 = ISZERO V323
0x3b4: V325 = 0x3bc
0x3b7: JUMPI 0x3bc V324
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3b8
[0x3b8:0x3bb]
---
Predecessors: [0x3b1]
Successors: []
---
0x3b8 PUSH1 0x0
0x3ba DUP1
0x3bb REVERT
---
0x3b8: V326 = 0x0
0x3bb: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3bc
[0x3bc:0x3c3]
---
Predecessors: [0x3b1]
Successors: [0x4f6]
---
0x3bc JUMPDEST
0x3bd PUSH2 0x277
0x3c0 PUSH2 0x4f6
0x3c3 JUMP
---
0x3bc: JUMPDEST 
0x3bd: V327 = 0x277
0x3c0: V328 = 0x4f6
0x3c3: JUMP 0x4f6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x277]
Exit stack: [V10, 0x277]

================================

Block 0x3c4
[0x3c4:0x3c5]
---
Predecessors: []
Successors: []
---
0x3c4 JUMPDEST
0x3c5 STOP
---
0x3c4: JUMPDEST 
0x3c5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3c6
[0x3c6:0x3cc]
---
Predecessors: [0x96]
Successors: [0x3cd, 0x3d1]
---
0x3c6 JUMPDEST
0x3c7 CALLVALUE
0x3c8 ISZERO
0x3c9 PUSH2 0x3d1
0x3cc JUMPI
---
0x3c6: JUMPDEST 
0x3c7: V329 = CALLVALUE
0x3c8: V330 = ISZERO V329
0x3c9: V331 = 0x3d1
0x3cc: JUMPI 0x3d1 V330
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3cd
[0x3cd:0x3d0]
---
Predecessors: [0x3c6]
Successors: []
---
0x3cd PUSH1 0x0
0x3cf DUP1
0x3d0 REVERT
---
0x3cd: V332 = 0x0
0x3d0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3d1
[0x3d1:0x3d8]
---
Predecessors: [0x3c6]
Successors: [0x5d1]
---
0x3d1 JUMPDEST
0x3d2 PUSH2 0x2a1
0x3d5 PUSH2 0x5d1
0x3d8 JUMP
---
0x3d1: JUMPDEST 
0x3d2: V333 = 0x2a1
0x3d5: V334 = 0x5d1
0x3d8: JUMP 0x5d1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2a1]
Exit stack: [V10, 0x2a1]

================================

Block 0x3d9
[0x3d9:0x3ea]
---
Predecessors: []
Successors: []
---
0x3d9 JUMPDEST
0x3da PUSH1 0x40
0x3dc MLOAD
0x3dd SWAP1
0x3de DUP2
0x3df MSTORE
0x3e0 PUSH1 0x20
0x3e2 ADD
0x3e3 PUSH1 0x40
0x3e5 MLOAD
0x3e6 DUP1
0x3e7 SWAP2
0x3e8 SUB
0x3e9 SWAP1
0x3ea RETURN
---
0x3d9: JUMPDEST 
0x3da: V335 = 0x40
0x3dc: V336 = M[0x40]
0x3df: M[V336] = S0
0x3e0: V337 = 0x20
0x3e2: V338 = ADD 0x20 V336
0x3e3: V339 = 0x40
0x3e5: V340 = M[0x40]
0x3e8: V341 = SUB V338 V340
0x3ea: RETURN V340 V341
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3eb
[0x3eb:0x3f1]
---
Predecessors: [0xa1]
Successors: [0x3f2, 0x3f6]
---
0x3eb JUMPDEST
0x3ec CALLVALUE
0x3ed ISZERO
0x3ee PUSH2 0x3f6
0x3f1 JUMPI
---
0x3eb: JUMPDEST 
0x3ec: V342 = CALLVALUE
0x3ed: V343 = ISZERO V342
0x3ee: V344 = 0x3f6
0x3f1: JUMPI 0x3f6 V343
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f2
[0x3f2:0x3f5]
---
Predecessors: [0x3eb]
Successors: []
---
0x3f2 PUSH1 0x0
0x3f4 DUP1
0x3f5 REVERT
---
0x3f2: V345 = 0x0
0x3f5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f6
[0x3f6:0x3fd]
---
Predecessors: [0x3eb]
Successors: [0x5d7]
---
0x3f6 JUMPDEST
0x3f7 PUSH2 0x2a1
0x3fa PUSH2 0x5d7
0x3fd JUMP
---
0x3f6: JUMPDEST 
0x3f7: V346 = 0x2a1
0x3fa: V347 = 0x5d7
0x3fd: JUMP 0x5d7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2a1]
Exit stack: [V10, 0x2a1]

================================

Block 0x3fe
[0x3fe:0x40f]
---
Predecessors: []
Successors: []
---
0x3fe JUMPDEST
0x3ff PUSH1 0x40
0x401 MLOAD
0x402 SWAP1
0x403 DUP2
0x404 MSTORE
0x405 PUSH1 0x20
0x407 ADD
0x408 PUSH1 0x40
0x40a MLOAD
0x40b DUP1
0x40c SWAP2
0x40d SUB
0x40e SWAP1
0x40f RETURN
---
0x3fe: JUMPDEST 
0x3ff: V348 = 0x40
0x401: V349 = M[0x40]
0x404: M[V349] = S0
0x405: V350 = 0x20
0x407: V351 = ADD 0x20 V349
0x408: V352 = 0x40
0x40a: V353 = M[0x40]
0x40d: V354 = SUB V351 V353
0x40f: RETURN V353 V354
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x410
[0x410:0x416]
---
Predecessors: [0xac]
Successors: [0x417, 0x41b]
---
0x410 JUMPDEST
0x411 CALLVALUE
0x412 ISZERO
0x413 PUSH2 0x41b
0x416 JUMPI
---
0x410: JUMPDEST 
0x411: V355 = CALLVALUE
0x412: V356 = ISZERO V355
0x413: V357 = 0x41b
0x416: JUMPI 0x41b V356
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x417
[0x417:0x41a]
---
Predecessors: [0x410]
Successors: []
---
0x417 PUSH1 0x0
0x419 DUP1
0x41a REVERT
---
0x417: V358 = 0x0
0x41a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41b
[0x41b:0x422]
---
Predecessors: [0x410]
Successors: [0x5dd]
---
0x41b JUMPDEST
0x41c PUSH2 0x277
0x41f PUSH2 0x5dd
0x422 JUMP
---
0x41b: JUMPDEST 
0x41c: V359 = 0x277
0x41f: V360 = 0x5dd
0x422: JUMP 0x5dd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x277]
Exit stack: [V10, 0x277]

================================

Block 0x423
[0x423:0x424]
---
Predecessors: []
Successors: []
---
0x423 JUMPDEST
0x424 STOP
---
0x423: JUMPDEST 
0x424: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x425
[0x425:0x42e]
---
Predecessors: [0x284]
Successors: [0x42f, 0x4aa]
---
0x425 JUMPDEST
0x426 PUSH1 0x4
0x428 SLOAD
0x429 TIMESTAMP
0x42a LT
0x42b PUSH2 0x4aa
0x42e JUMPI
---
0x425: JUMPDEST 
0x426: V361 = 0x4
0x428: V362 = S[0x4]
0x429: V363 = TIMESTAMP
0x42a: V364 = LT V363 V362
0x42b: V365 = 0x4aa
0x42e: JUMPI 0x4aa V364
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277]

================================

Block 0x42f
[0x42f:0x439]
---
Predecessors: [0x425]
Successors: [0x43a, 0x49a]
---
0x42f PUSH1 0x1
0x431 SLOAD
0x432 PUSH1 0x3
0x434 SLOAD
0x435 LT
0x436 PUSH2 0x49a
0x439 JUMPI
---
0x42f: V366 = 0x1
0x431: V367 = S[0x1]
0x432: V368 = 0x3
0x434: V369 = S[0x3]
0x435: V370 = LT V369 V367
0x436: V371 = 0x49a
0x439: JUMPI 0x49a V370
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277]

================================

Block 0x43a
[0x43a:0x499]
---
Predecessors: [0x42f]
Successors: [0x49a]
---
0x43a PUSH1 0x9
0x43c DUP1
0x43d SLOAD
0x43e PUSH1 0xff
0x440 NOT
0x441 AND
0x442 PUSH1 0x1
0x444 OR
0x445 SWAP1
0x446 SSTORE
0x447 PUSH1 0x0
0x449 SLOAD
0x44a PUSH1 0x3
0x44c SLOAD
0x44d PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x46e SWAP2
0x46f PUSH1 0x1
0x471 PUSH1 0xa0
0x473 PUSH1 0x2
0x475 EXP
0x476 SUB
0x477 AND
0x478 SWAP1
0x479 PUSH1 0x40
0x47b MLOAD
0x47c PUSH1 0x1
0x47e PUSH1 0xa0
0x480 PUSH1 0x2
0x482 EXP
0x483 SUB
0x484 SWAP1
0x485 SWAP3
0x486 AND
0x487 DUP3
0x488 MSTORE
0x489 PUSH1 0x20
0x48b DUP3
0x48c ADD
0x48d MSTORE
0x48e PUSH1 0x40
0x490 SWAP1
0x491 DUP2
0x492 ADD
0x493 SWAP1
0x494 MLOAD
0x495 DUP1
0x496 SWAP2
0x497 SUB
0x498 SWAP1
0x499 LOG1
---
0x43a: V372 = 0x9
0x43d: V373 = S[0x9]
0x43e: V374 = 0xff
0x440: V375 = NOT 0xff
0x441: V376 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V373
0x442: V377 = 0x1
0x444: V378 = OR 0x1 V376
0x446: S[0x9] = V378
0x447: V379 = 0x0
0x449: V380 = S[0x0]
0x44a: V381 = 0x3
0x44c: V382 = S[0x3]
0x44d: V383 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x46f: V384 = 0x1
0x471: V385 = 0xa0
0x473: V386 = 0x2
0x475: V387 = EXP 0x2 0xa0
0x476: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x477: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x479: V390 = 0x40
0x47b: V391 = M[0x40]
0x47c: V392 = 0x1
0x47e: V393 = 0xa0
0x480: V394 = 0x2
0x482: V395 = EXP 0x2 0xa0
0x483: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x486: V397 = AND V389 0xffffffffffffffffffffffffffffffffffffffff
0x488: M[V391] = V397
0x489: V398 = 0x20
0x48c: V399 = ADD V391 0x20
0x48d: M[V399] = V382
0x48e: V400 = 0x40
0x492: V401 = ADD 0x40 V391
0x494: V402 = M[0x40]
0x497: V403 = SUB V401 V402
0x499: LOG V402 V403 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277]

================================

Block 0x49a
[0x49a:0x4a9]
---
Predecessors: [0x42f, 0x43a]
Successors: [0x4aa]
---
0x49a JUMPDEST
0x49b PUSH1 0x9
0x49d DUP1
0x49e SLOAD
0x49f PUSH2 0xff00
0x4a2 NOT
0x4a3 AND
0x4a4 PUSH2 0x100
0x4a7 OR
0x4a8 SWAP1
0x4a9 SSTORE
---
0x49a: JUMPDEST 
0x49b: V404 = 0x9
0x49e: V405 = S[0x9]
0x49f: V406 = 0xff00
0x4a2: V407 = NOT 0xff00
0x4a3: V408 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V405
0x4a4: V409 = 0x100
0x4a7: V410 = OR 0x100 V408
0x4a9: S[0x9] = V410
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277]

================================

Block 0x4aa
[0x4aa:0x4aa]
---
Predecessors: [0x425, 0x49a, 0x4f6, 0x55c]
Successors: [0x4ab]
---
0x4aa JUMPDEST
---
0x4aa: JUMPDEST 
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277]

================================

Block 0x4ab
[0x4ab:0x4ab]
---
Predecessors: [0x4aa]
Successors: [0x4ac]
---
0x4ab JUMPDEST
---
0x4ab: JUMPDEST 
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277]

================================

Block 0x4ac
[0x4ac:0x4ad]
---
Predecessors: [0x4ab]
Successors: [0x277]
---
0x4ac JUMPDEST
0x4ad JUMP
---
0x4ac: JUMPDEST 
0x4ad: JUMP 0x277
---
Entry stack: [V10, 0x277]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x4ae
[0x4ae:0x4b3]
---
Predecessors: [0x299]
Successors: [0x2a1]
---
0x4ae JUMPDEST
0x4af PUSH1 0x4
0x4b1 SLOAD
0x4b2 DUP2
0x4b3 JUMP
---
0x4ae: JUMPDEST 
0x4af: V411 = 0x4
0x4b1: V412 = S[0x4]
0x4b3: JUMP 0x2a1
---
Entry stack: [V10, 0x2a1]
Stack pops: 1
Stack additions: [S0, V412]
Exit stack: [V10, 0x2a1, V412]

================================

Block 0x4b4
[0x4b4:0x4b9]
---
Predecessors: [0x2be]
Successors: [0x2a1]
---
0x4b4 JUMPDEST
0x4b5 PUSH1 0x6
0x4b7 SLOAD
0x4b8 DUP2
0x4b9 JUMP
---
0x4b4: JUMPDEST 
0x4b5: V413 = 0x6
0x4b7: V414 = S[0x6]
0x4b9: JUMP 0x2a1
---
Entry stack: [V10, 0x2a1]
Stack pops: 1
Stack additions: [S0, V414]
Exit stack: [V10, 0x2a1, V414]

================================

Block 0x4ba
[0x4ba:0x4c8]
---
Predecessors: [0x2e3]
Successors: [0x2eb]
---
0x4ba JUMPDEST
0x4bb PUSH1 0x0
0x4bd SLOAD
0x4be PUSH1 0x1
0x4c0 PUSH1 0xa0
0x4c2 PUSH1 0x2
0x4c4 EXP
0x4c5 SUB
0x4c6 AND
0x4c7 DUP2
0x4c8 JUMP
---
0x4ba: JUMPDEST 
0x4bb: V415 = 0x0
0x4bd: V416 = S[0x0]
0x4be: V417 = 0x1
0x4c0: V418 = 0xa0
0x4c2: V419 = 0x2
0x4c4: V420 = EXP 0x2 0xa0
0x4c5: V421 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c6: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x4c8: JUMP 0x2eb
---
Entry stack: [V10, 0x2eb]
Stack pops: 1
Stack additions: [S0, V422]
Exit stack: [V10, 0x2eb, V422]

================================

Block 0x4c9
[0x4c9:0x4d7]
---
Predecessors: [0x312]
Successors: [0x2eb]
---
0x4c9 JUMPDEST
0x4ca PUSH1 0x7
0x4cc SLOAD
0x4cd PUSH1 0x1
0x4cf PUSH1 0xa0
0x4d1 PUSH1 0x2
0x4d3 EXP
0x4d4 SUB
0x4d5 AND
0x4d6 DUP2
0x4d7 JUMP
---
0x4c9: JUMPDEST 
0x4ca: V423 = 0x7
0x4cc: V424 = S[0x7]
0x4cd: V425 = 0x1
0x4cf: V426 = 0xa0
0x4d1: V427 = 0x2
0x4d3: V428 = EXP 0x2 0xa0
0x4d4: V429 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d5: V430 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x4d7: JUMP 0x2eb
---
Entry stack: [V10, 0x2eb]
Stack pops: 1
Stack additions: [S0, V430]
Exit stack: [V10, 0x2eb, V430]

================================

Block 0x4d8
[0x4d8:0x4dd]
---
Predecessors: [0x341]
Successors: [0x2a1]
---
0x4d8 JUMPDEST
0x4d9 PUSH1 0x2
0x4db SLOAD
0x4dc DUP2
0x4dd JUMP
---
0x4d8: JUMPDEST 
0x4d9: V431 = 0x2
0x4db: V432 = S[0x2]
0x4dd: JUMP 0x2a1
---
Entry stack: [V10, 0x2a1]
Stack pops: 1
Stack additions: [S0, V432]
Exit stack: [V10, 0x2a1, V432]

================================

Block 0x4de
[0x4de:0x4ef]
---
Predecessors: [0x366]
Successors: [0x2a1]
---
0x4de JUMPDEST
0x4df PUSH1 0x8
0x4e1 PUSH1 0x20
0x4e3 MSTORE
0x4e4 PUSH1 0x0
0x4e6 SWAP1
0x4e7 DUP2
0x4e8 MSTORE
0x4e9 PUSH1 0x40
0x4eb SWAP1
0x4ec SHA3
0x4ed SLOAD
0x4ee DUP2
0x4ef JUMP
---
0x4de: JUMPDEST 
0x4df: V433 = 0x8
0x4e1: V434 = 0x20
0x4e3: M[0x20] = 0x8
0x4e4: V435 = 0x0
0x4e8: M[0x0] = V301
0x4e9: V436 = 0x40
0x4ec: V437 = SHA3 0x0 0x40
0x4ed: V438 = S[V437]
0x4ef: JUMP 0x2a1
---
Entry stack: [V10, 0x2a1, V301]
Stack pops: 2
Stack additions: [S1, V438]
Exit stack: [V10, 0x2a1, V438]

================================

Block 0x4f0
[0x4f0:0x4f5]
---
Predecessors: [0x397]
Successors: [0x2a1]
---
0x4f0 JUMPDEST
0x4f1 PUSH1 0x3
0x4f3 SLOAD
0x4f4 DUP2
0x4f5 JUMP
---
0x4f0: JUMPDEST 
0x4f1: V439 = 0x3
0x4f3: V440 = S[0x3]
0x4f5: JUMP 0x2a1
---
Entry stack: [V10, 0x2a1]
Stack pops: 1
Stack additions: [S0, V440]
Exit stack: [V10, 0x2a1, V440]

================================

Block 0x4f6
[0x4f6:0x50d]
---
Predecessors: [0x3bc]
Successors: [0x4aa, 0x50e]
---
0x4f6 JUMPDEST
0x4f7 PUSH8 0x8ac7230489e80000
0x500 PUSH1 0x2
0x502 SLOAD
0x503 SUB
0x504 PUSH1 0x3
0x506 SLOAD
0x507 LT
0x508 ISZERO
0x509 ISZERO
0x50a PUSH2 0x4aa
0x50d JUMPI
---
0x4f6: JUMPDEST 
0x4f7: V441 = 0x8ac7230489e80000
0x500: V442 = 0x2
0x502: V443 = S[0x2]
0x503: V444 = SUB V443 0x8ac7230489e80000
0x504: V445 = 0x3
0x506: V446 = S[0x3]
0x507: V447 = LT V446 V444
0x508: V448 = ISZERO V447
0x509: V449 = ISZERO V448
0x50a: V450 = 0x4aa
0x50d: JUMPI 0x4aa V449
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277]

================================

Block 0x50e
[0x50e:0x523]
---
Predecessors: [0x4f6]
Successors: [0x524, 0x528]
---
0x50e PUSH1 0x0
0x510 SLOAD
0x511 CALLER
0x512 PUSH1 0x1
0x514 PUSH1 0xa0
0x516 PUSH1 0x2
0x518 EXP
0x519 SUB
0x51a SWAP1
0x51b DUP2
0x51c AND
0x51d SWAP2
0x51e AND
0x51f EQ
0x520 PUSH2 0x528
0x523 JUMPI
---
0x50e: V451 = 0x0
0x510: V452 = S[0x0]
0x511: V453 = CALLER
0x512: V454 = 0x1
0x514: V455 = 0xa0
0x516: V456 = 0x2
0x518: V457 = EXP 0x2 0xa0
0x519: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51c: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x51e: V460 = AND V452 0xffffffffffffffffffffffffffffffffffffffff
0x51f: V461 = EQ V460 V459
0x520: V462 = 0x528
0x523: JUMPI 0x528 V461
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277]

================================

Block 0x524
[0x524:0x527]
---
Predecessors: [0x50e]
Successors: []
---
0x524 PUSH1 0x0
0x526 DUP1
0x527 REVERT
---
0x524: V463 = 0x0
0x527: REVERT 0x0 0x0
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277]

================================

Block 0x528
[0x528:0x55b]
---
Predecessors: [0x50e]
Successors: [0x55c, 0x5c1]
---
0x528 JUMPDEST
0x529 PUSH1 0x0
0x52b SLOAD
0x52c PUSH1 0x3
0x52e SLOAD
0x52f PUSH1 0x1
0x531 PUSH1 0xa0
0x533 PUSH1 0x2
0x535 EXP
0x536 SUB
0x537 SWAP1
0x538 SWAP2
0x539 AND
0x53a SWAP1
0x53b DUP1
0x53c ISZERO
0x53d PUSH2 0x8fc
0x540 MUL
0x541 SWAP1
0x542 PUSH1 0x40
0x544 MLOAD
0x545 PUSH1 0x0
0x547 PUSH1 0x40
0x549 MLOAD
0x54a DUP1
0x54b DUP4
0x54c SUB
0x54d DUP2
0x54e DUP6
0x54f DUP9
0x550 DUP9
0x551 CALL
0x552 SWAP4
0x553 POP
0x554 POP
0x555 POP
0x556 POP
0x557 ISZERO
0x558 PUSH2 0x5c1
0x55b JUMPI
---
0x528: JUMPDEST 
0x529: V464 = 0x0
0x52b: V465 = S[0x0]
0x52c: V466 = 0x3
0x52e: V467 = S[0x3]
0x52f: V468 = 0x1
0x531: V469 = 0xa0
0x533: V470 = 0x2
0x535: V471 = EXP 0x2 0xa0
0x536: V472 = SUB 0x10000000000000000000000000000000000000000 0x1
0x539: V473 = AND V465 0xffffffffffffffffffffffffffffffffffffffff
0x53c: V474 = ISZERO V467
0x53d: V475 = 0x8fc
0x540: V476 = MUL 0x8fc V474
0x542: V477 = 0x40
0x544: V478 = M[0x40]
0x545: V479 = 0x0
0x547: V480 = 0x40
0x549: V481 = M[0x40]
0x54c: V482 = SUB V478 V481
0x551: V483 = CALL V476 V473 V467 V481 V482 V481 0x0
0x557: V484 = ISZERO V483
0x558: V485 = 0x5c1
0x55b: JUMPI 0x5c1 V484
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277]

================================

Block 0x55c
[0x55c:0x5c0]
---
Predecessors: [0x528]
Successors: [0x4aa]
---
0x55c PUSH1 0x9
0x55e DUP1
0x55f SLOAD
0x560 PUSH2 0xff00
0x563 NOT
0x564 AND
0x565 PUSH2 0x100
0x568 OR
0x569 SWAP1
0x56a SSTORE
0x56b PUSH1 0x0
0x56d DUP1
0x56e SLOAD
0x56f PUSH1 0x3
0x571 SLOAD
0x572 PUSH1 0x0
0x574 DUP1
0x575 MLOAD
0x576 PUSH1 0x20
0x578 PUSH2 0x76e
0x57b DUP4
0x57c CODECOPY
0x57d DUP2
0x57e MLOAD
0x57f SWAP2
0x580 MSTORE
0x581 SWAP3
0x582 PUSH1 0x1
0x584 PUSH1 0xa0
0x586 PUSH1 0x2
0x588 EXP
0x589 SUB
0x58a SWAP1
0x58b SWAP3
0x58c AND
0x58d SWAP2
0x58e PUSH1 0x40
0x590 MLOAD
0x591 PUSH1 0x1
0x593 PUSH1 0xa0
0x595 PUSH1 0x2
0x597 EXP
0x598 SUB
0x599 SWAP1
0x59a SWAP4
0x59b AND
0x59c DUP4
0x59d MSTORE
0x59e PUSH1 0x20
0x5a0 DUP4
0x5a1 ADD
0x5a2 SWAP2
0x5a3 SWAP1
0x5a4 SWAP2
0x5a5 MSTORE
0x5a6 ISZERO
0x5a7 ISZERO
0x5a8 PUSH1 0x40
0x5aa DUP1
0x5ab DUP4
0x5ac ADD
0x5ad SWAP2
0x5ae SWAP1
0x5af SWAP2
0x5b0 MSTORE
0x5b1 PUSH1 0x60
0x5b3 SWAP1
0x5b4 SWAP2
0x5b5 ADD
0x5b6 SWAP1
0x5b7 MLOAD
0x5b8 DUP1
0x5b9 SWAP2
0x5ba SUB
0x5bb SWAP1
0x5bc LOG1
0x5bd PUSH2 0x4aa
0x5c0 JUMP
---
0x55c: V486 = 0x9
0x55f: V487 = S[0x9]
0x560: V488 = 0xff00
0x563: V489 = NOT 0xff00
0x564: V490 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V487
0x565: V491 = 0x100
0x568: V492 = OR 0x100 V490
0x56a: S[0x9] = V492
0x56b: V493 = 0x0
0x56e: V494 = S[0x0]
0x56f: V495 = 0x3
0x571: V496 = S[0x3]
0x572: V497 = 0x0
0x575: V498 = M[0x0]
0x576: V499 = 0x20
0x578: V500 = 0x76e
0x57c: CODECOPY 0x0 0x76e 0x20
0x57e: V501 = M[0x0]
0x580: M[0x0] = V498
0x582: V502 = 0x1
0x584: V503 = 0xa0
0x586: V504 = 0x2
0x588: V505 = EXP 0x2 0xa0
0x589: V506 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58c: V507 = AND V494 0xffffffffffffffffffffffffffffffffffffffff
0x58e: V508 = 0x40
0x590: V509 = M[0x40]
0x591: V510 = 0x1
0x593: V511 = 0xa0
0x595: V512 = 0x2
0x597: V513 = EXP 0x2 0xa0
0x598: V514 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59b: V515 = AND V507 0xffffffffffffffffffffffffffffffffffffffff
0x59d: M[V509] = V515
0x59e: V516 = 0x20
0x5a1: V517 = ADD V509 0x20
0x5a5: M[V517] = V496
0x5a6: V518 = ISZERO 0x0
0x5a7: V519 = ISZERO 0x1
0x5a8: V520 = 0x40
0x5ac: V521 = ADD V509 0x40
0x5b0: M[V521] = 0x0
0x5b1: V522 = 0x60
0x5b5: V523 = ADD V509 0x60
0x5b7: V524 = M[0x40]
0x5ba: V525 = SUB V523 V524
0x5bc: LOG V524 V525 V501
0x5bd: V526 = 0x4aa
0x5c0: JUMP 0x4aa
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277]

================================

Block 0x5c1
[0x5c1:0x5cb]
---
Predecessors: [0x528]
Successors: [0x5cc]
---
0x5c1 JUMPDEST
0x5c2 PUSH1 0x9
0x5c4 DUP1
0x5c5 SLOAD
0x5c6 PUSH1 0xff
0x5c8 NOT
0x5c9 AND
0x5ca SWAP1
0x5cb SSTORE
---
0x5c1: JUMPDEST 
0x5c2: V527 = 0x9
0x5c5: V528 = S[0x9]
0x5c6: V529 = 0xff
0x5c8: V530 = NOT 0xff
0x5c9: V531 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V528
0x5cb: S[0x9] = V531
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277]

================================

Block 0x5cc
[0x5cc:0x5cc]
---
Predecessors: [0x5c1]
Successors: [0x5cd]
---
0x5cc JUMPDEST
---
0x5cc: JUMPDEST 
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277]

================================

Block 0x5cd
[0x5cd:0x5cd]
---
Predecessors: [0x5cc]
Successors: [0x5ce]
---
0x5cd JUMPDEST
---
0x5cd: JUMPDEST 
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277]

================================

Block 0x5ce
[0x5ce:0x5ce]
---
Predecessors: [0x5cd]
Successors: [0x5cf]
---
0x5ce JUMPDEST
---
0x5ce: JUMPDEST 
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277]

================================

Block 0x5cf
[0x5cf:0x5d0]
---
Predecessors: [0x5ce]
Successors: [0x277]
---
0x5cf JUMPDEST
0x5d0 JUMP
---
0x5cf: JUMPDEST 
0x5d0: JUMP 0x277
---
Entry stack: [V10, 0x277]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x5d1
[0x5d1:0x5d6]
---
Predecessors: [0x3d1]
Successors: [0x2a1]
---
0x5d1 JUMPDEST
0x5d2 PUSH1 0x5
0x5d4 SLOAD
0x5d5 DUP2
0x5d6 JUMP
---
0x5d1: JUMPDEST 
0x5d2: V532 = 0x5
0x5d4: V533 = S[0x5]
0x5d6: JUMP 0x2a1
---
Entry stack: [V10, 0x2a1]
Stack pops: 1
Stack additions: [S0, V533]
Exit stack: [V10, 0x2a1, V533]

================================

Block 0x5d7
[0x5d7:0x5dc]
---
Predecessors: [0x3f6]
Successors: [0x2a1]
---
0x5d7 JUMPDEST
0x5d8 PUSH1 0x1
0x5da SLOAD
0x5db DUP2
0x5dc JUMP
---
0x5d7: JUMPDEST 
0x5d8: V534 = 0x1
0x5da: V535 = S[0x1]
0x5dc: JUMP 0x2a1
---
Entry stack: [V10, 0x2a1]
Stack pops: 1
Stack additions: [S0, V535]
Exit stack: [V10, 0x2a1, V535]

================================

Block 0x5dd
[0x5dd:0x5e9]
---
Predecessors: [0x41b]
Successors: [0x274, 0x5ea]
---
0x5dd JUMPDEST
0x5de PUSH1 0x4
0x5e0 SLOAD
0x5e1 PUSH1 0x0
0x5e3 SWAP1
0x5e4 TIMESTAMP
0x5e5 LT
0x5e6 PUSH2 0x274
0x5e9 JUMPI
---
0x5dd: JUMPDEST 
0x5de: V536 = 0x4
0x5e0: V537 = S[0x4]
0x5e1: V538 = 0x0
0x5e4: V539 = TIMESTAMP
0x5e5: V540 = LT V539 V537
0x5e6: V541 = 0x274
0x5e9: JUMPI 0x274 V540
---
Entry stack: [V10, 0x277]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x277, 0x0]

================================

Block 0x5ea
[0x5ea:0x5f5]
---
Predecessors: [0x5dd]
Successors: [0x5f6, 0x6aa]
---
0x5ea PUSH1 0x9
0x5ec SLOAD
0x5ed PUSH1 0xff
0x5ef AND
0x5f0 ISZERO
0x5f1 ISZERO
0x5f2 PUSH2 0x6aa
0x5f5 JUMPI
---
0x5ea: V542 = 0x9
0x5ec: V543 = S[0x9]
0x5ed: V544 = 0xff
0x5ef: V545 = AND 0xff V543
0x5f0: V546 = ISZERO V545
0x5f1: V547 = ISZERO V546
0x5f2: V548 = 0x6aa
0x5f5: JUMPI 0x6aa V547
---
Entry stack: [V10, 0x277, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, 0x0]

================================

Block 0x5f6
[0x5f6:0x61c]
---
Predecessors: [0x5ea]
Successors: [0x61d, 0x6aa]
---
0x5f6 POP
0x5f7 PUSH1 0x1
0x5f9 PUSH1 0xa0
0x5fb PUSH1 0x2
0x5fd EXP
0x5fe SUB
0x5ff CALLER
0x600 AND
0x601 PUSH1 0x0
0x603 SWAP1
0x604 DUP2
0x605 MSTORE
0x606 PUSH1 0x8
0x608 PUSH1 0x20
0x60a MSTORE
0x60b PUSH1 0x40
0x60d DUP2
0x60e SHA3
0x60f DUP1
0x610 SLOAD
0x611 SWAP1
0x612 DUP3
0x613 SWAP1
0x614 SSTORE
0x615 SWAP1
0x616 DUP2
0x617 GT
0x618 ISZERO
0x619 PUSH2 0x6aa
0x61c JUMPI
---
0x5f7: V549 = 0x1
0x5f9: V550 = 0xa0
0x5fb: V551 = 0x2
0x5fd: V552 = EXP 0x2 0xa0
0x5fe: V553 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ff: V554 = CALLER
0x600: V555 = AND V554 0xffffffffffffffffffffffffffffffffffffffff
0x601: V556 = 0x0
0x605: M[0x0] = V555
0x606: V557 = 0x8
0x608: V558 = 0x20
0x60a: M[0x20] = 0x8
0x60b: V559 = 0x40
0x60e: V560 = SHA3 0x0 0x40
0x610: V561 = S[V560]
0x614: S[V560] = 0x0
0x617: V562 = GT V561 0x0
0x618: V563 = ISZERO V562
0x619: V564 = 0x6aa
0x61c: JUMPI 0x6aa V563
---
Entry stack: [V10, 0x277, 0x0]
Stack pops: 1
Stack additions: [V561]
Exit stack: [V10, 0x277, V561]

================================

Block 0x61d
[0x61d:0x647]
---
Predecessors: [0x5f6]
Successors: [0x648, 0x68e]
---
0x61d PUSH1 0x1
0x61f PUSH1 0xa0
0x621 PUSH1 0x2
0x623 EXP
0x624 SUB
0x625 CALLER
0x626 AND
0x627 DUP2
0x628 ISZERO
0x629 PUSH2 0x8fc
0x62c MUL
0x62d DUP3
0x62e PUSH1 0x40
0x630 MLOAD
0x631 PUSH1 0x0
0x633 PUSH1 0x40
0x635 MLOAD
0x636 DUP1
0x637 DUP4
0x638 SUB
0x639 DUP2
0x63a DUP6
0x63b DUP9
0x63c DUP9
0x63d CALL
0x63e SWAP4
0x63f POP
0x640 POP
0x641 POP
0x642 POP
0x643 ISZERO
0x644 PUSH2 0x68e
0x647 JUMPI
---
0x61d: V565 = 0x1
0x61f: V566 = 0xa0
0x621: V567 = 0x2
0x623: V568 = EXP 0x2 0xa0
0x624: V569 = SUB 0x10000000000000000000000000000000000000000 0x1
0x625: V570 = CALLER
0x626: V571 = AND V570 0xffffffffffffffffffffffffffffffffffffffff
0x628: V572 = ISZERO V561
0x629: V573 = 0x8fc
0x62c: V574 = MUL 0x8fc V572
0x62e: V575 = 0x40
0x630: V576 = M[0x40]
0x631: V577 = 0x0
0x633: V578 = 0x40
0x635: V579 = M[0x40]
0x638: V580 = SUB V576 V579
0x63d: V581 = CALL V574 V571 V561 V579 V580 V579 0x0
0x643: V582 = ISZERO V581
0x644: V583 = 0x68e
0x647: JUMPI 0x68e V582
---
Entry stack: [V10, 0x277, V561]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x277, V561]

================================

Block 0x648
[0x648:0x68d]
---
Predecessors: [0x61d]
Successors: [0x6aa]
---
0x648 PUSH1 0x0
0x64a DUP1
0x64b MLOAD
0x64c PUSH1 0x20
0x64e PUSH2 0x76e
0x651 DUP4
0x652 CODECOPY
0x653 DUP2
0x654 MLOAD
0x655 SWAP2
0x656 MSTORE
0x657 CALLER
0x658 DUP3
0x659 PUSH1 0x0
0x65b PUSH1 0x40
0x65d MLOAD
0x65e PUSH1 0x1
0x660 PUSH1 0xa0
0x662 PUSH1 0x2
0x664 EXP
0x665 SUB
0x666 SWAP1
0x667 SWAP4
0x668 AND
0x669 DUP4
0x66a MSTORE
0x66b PUSH1 0x20
0x66d DUP4
0x66e ADD
0x66f SWAP2
0x670 SWAP1
0x671 SWAP2
0x672 MSTORE
0x673 ISZERO
0x674 ISZERO
0x675 PUSH1 0x40
0x677 DUP1
0x678 DUP4
0x679 ADD
0x67a SWAP2
0x67b SWAP1
0x67c SWAP2
0x67d MSTORE
0x67e PUSH1 0x60
0x680 SWAP1
0x681 SWAP2
0x682 ADD
0x683 SWAP1
0x684 MLOAD
0x685 DUP1
0x686 SWAP2
0x687 SUB
0x688 SWAP1
0x689 LOG1
0x68a PUSH2 0x6aa
0x68d JUMP
---
0x648: V584 = 0x0
0x64b: V585 = M[0x0]
0x64c: V586 = 0x20
0x64e: V587 = 0x76e
0x652: CODECOPY 0x0 0x76e 0x20
0x654: V588 = M[0x0]
0x656: M[0x0] = V585
0x657: V589 = CALLER
0x659: V590 = 0x0
0x65b: V591 = 0x40
0x65d: V592 = M[0x40]
0x65e: V593 = 0x1
0x660: V594 = 0xa0
0x662: V595 = 0x2
0x664: V596 = EXP 0x2 0xa0
0x665: V597 = SUB 0x10000000000000000000000000000000000000000 0x1
0x668: V598 = AND V589 0xffffffffffffffffffffffffffffffffffffffff
0x66a: M[V592] = V598
0x66b: V599 = 0x20
0x66e: V600 = ADD V592 0x20
0x672: M[V600] = V561
0x673: V601 = ISZERO 0x0
0x674: V602 = ISZERO 0x1
0x675: V603 = 0x40
0x679: V604 = ADD V592 0x40
0x67d: M[V604] = 0x0
0x67e: V605 = 0x60
0x682: V606 = ADD V592 0x60
0x684: V607 = M[0x40]
0x687: V608 = SUB V606 V607
0x689: LOG V607 V608 V588
0x68a: V609 = 0x6aa
0x68d: JUMP 0x6aa
---
Entry stack: [V10, 0x277, V561]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x277, V561]

================================

Block 0x68e
[0x68e:0x6a9]
---
Predecessors: [0x61d]
Successors: [0x6aa]
---
0x68e JUMPDEST
0x68f PUSH1 0x1
0x691 PUSH1 0xa0
0x693 PUSH1 0x2
0x695 EXP
0x696 SUB
0x697 CALLER
0x698 AND
0x699 PUSH1 0x0
0x69b SWAP1
0x69c DUP2
0x69d MSTORE
0x69e PUSH1 0x8
0x6a0 PUSH1 0x20
0x6a2 MSTORE
0x6a3 PUSH1 0x40
0x6a5 SWAP1
0x6a6 SHA3
0x6a7 DUP2
0x6a8 SWAP1
0x6a9 SSTORE
---
0x68e: JUMPDEST 
0x68f: V610 = 0x1
0x691: V611 = 0xa0
0x693: V612 = 0x2
0x695: V613 = EXP 0x2 0xa0
0x696: V614 = SUB 0x10000000000000000000000000000000000000000 0x1
0x697: V615 = CALLER
0x698: V616 = AND V615 0xffffffffffffffffffffffffffffffffffffffff
0x699: V617 = 0x0
0x69d: M[0x0] = V616
0x69e: V618 = 0x8
0x6a0: V619 = 0x20
0x6a2: M[0x20] = 0x8
0x6a3: V620 = 0x40
0x6a6: V621 = SHA3 0x0 0x40
0x6a9: S[V621] = V561
---
Entry stack: [V10, 0x277, V561]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x277, V561]

================================

Block 0x6aa
[0x6aa:0x6aa]
---
Predecessors: [0x5ea, 0x5f6, 0x648, 0x68e]
Successors: [0x6ab]
---
0x6aa JUMPDEST
---
0x6aa: JUMPDEST 
---
Entry stack: [V10, 0x277, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, S0]

================================

Block 0x6ab
[0x6ab:0x6ab]
---
Predecessors: [0x6aa]
Successors: [0x6ac]
---
0x6ab JUMPDEST
---
0x6ab: JUMPDEST 
---
Entry stack: [V10, 0x277, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, S0]

================================

Block 0x6ac
[0x6ac:0x6b8]
---
Predecessors: [0x6ab]
Successors: [0x6b9, 0x6cc]
---
0x6ac JUMPDEST
0x6ad PUSH1 0x9
0x6af SLOAD
0x6b0 PUSH1 0xff
0x6b2 AND
0x6b3 DUP1
0x6b4 ISZERO
0x6b5 PUSH2 0x6cc
0x6b8 JUMPI
---
0x6ac: JUMPDEST 
0x6ad: V622 = 0x9
0x6af: V623 = S[0x9]
0x6b0: V624 = 0xff
0x6b2: V625 = AND 0xff V623
0x6b4: V626 = ISZERO V625
0x6b5: V627 = 0x6cc
0x6b8: JUMPI 0x6cc V626
---
Entry stack: [V10, 0x277, S0]
Stack pops: 0
Stack additions: [V625]
Exit stack: [V10, 0x277, S0, V625]

================================

Block 0x6b9
[0x6b9:0x6cb]
---
Predecessors: [0x6ac]
Successors: [0x6cc]
---
0x6b9 POP
0x6ba PUSH1 0x0
0x6bc SLOAD
0x6bd CALLER
0x6be PUSH1 0x1
0x6c0 PUSH1 0xa0
0x6c2 PUSH1 0x2
0x6c4 EXP
0x6c5 SUB
0x6c6 SWAP1
0x6c7 DUP2
0x6c8 AND
0x6c9 SWAP2
0x6ca AND
0x6cb EQ
---
0x6ba: V628 = 0x0
0x6bc: V629 = S[0x0]
0x6bd: V630 = CALLER
0x6be: V631 = 0x1
0x6c0: V632 = 0xa0
0x6c2: V633 = 0x2
0x6c4: V634 = EXP 0x2 0xa0
0x6c5: V635 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c8: V636 = AND 0xffffffffffffffffffffffffffffffffffffffff V630
0x6ca: V637 = AND V629 0xffffffffffffffffffffffffffffffffffffffff
0x6cb: V638 = EQ V637 V636
---
Entry stack: [V10, 0x277, S1, V625]
Stack pops: 1
Stack additions: [V638]
Exit stack: [V10, 0x277, S1, V638]

================================

Block 0x6cc
[0x6cc:0x6d1]
---
Predecessors: [0x6ac, 0x6b9]
Successors: [0x274, 0x6d2]
---
0x6cc JUMPDEST
0x6cd ISZERO
0x6ce PUSH2 0x274
0x6d1 JUMPI
---
0x6cc: JUMPDEST 
0x6cd: V639 = ISZERO S0
0x6ce: V640 = 0x274
0x6d1: JUMPI 0x274 V639
---
Entry stack: [V10, 0x277, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x277, S1]

================================

Block 0x6d2
[0x6d2:0x704]
---
Predecessors: [0x6cc]
Successors: [0x705, 0x75b]
---
0x6d2 PUSH1 0x0
0x6d4 SLOAD
0x6d5 PUSH1 0x3
0x6d7 SLOAD
0x6d8 PUSH1 0x1
0x6da PUSH1 0xa0
0x6dc PUSH1 0x2
0x6de EXP
0x6df SUB
0x6e0 SWAP1
0x6e1 SWAP2
0x6e2 AND
0x6e3 SWAP1
0x6e4 DUP1
0x6e5 ISZERO
0x6e6 PUSH2 0x8fc
0x6e9 MUL
0x6ea SWAP1
0x6eb PUSH1 0x40
0x6ed MLOAD
0x6ee PUSH1 0x0
0x6f0 PUSH1 0x40
0x6f2 MLOAD
0x6f3 DUP1
0x6f4 DUP4
0x6f5 SUB
0x6f6 DUP2
0x6f7 DUP6
0x6f8 DUP9
0x6f9 DUP9
0x6fa CALL
0x6fb SWAP4
0x6fc POP
0x6fd POP
0x6fe POP
0x6ff POP
0x700 ISZERO
0x701 PUSH2 0x75b
0x704 JUMPI
---
0x6d2: V641 = 0x0
0x6d4: V642 = S[0x0]
0x6d5: V643 = 0x3
0x6d7: V644 = S[0x3]
0x6d8: V645 = 0x1
0x6da: V646 = 0xa0
0x6dc: V647 = 0x2
0x6de: V648 = EXP 0x2 0xa0
0x6df: V649 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e2: V650 = AND V642 0xffffffffffffffffffffffffffffffffffffffff
0x6e5: V651 = ISZERO V644
0x6e6: V652 = 0x8fc
0x6e9: V653 = MUL 0x8fc V651
0x6eb: V654 = 0x40
0x6ed: V655 = M[0x40]
0x6ee: V656 = 0x0
0x6f0: V657 = 0x40
0x6f2: V658 = M[0x40]
0x6f5: V659 = SUB V655 V658
0x6fa: V660 = CALL V653 V650 V644 V658 V659 V658 0x0
0x700: V661 = ISZERO V660
0x701: V662 = 0x75b
0x704: JUMPI 0x75b V661
---
Entry stack: [V10, 0x277, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, S0]

================================

Block 0x705
[0x705:0x75a]
---
Predecessors: [0x6d2]
Successors: [0x274]
---
0x705 PUSH1 0x0
0x707 DUP1
0x708 SLOAD
0x709 PUSH1 0x3
0x70b SLOAD
0x70c PUSH1 0x0
0x70e DUP1
0x70f MLOAD
0x710 PUSH1 0x20
0x712 PUSH2 0x76e
0x715 DUP4
0x716 CODECOPY
0x717 DUP2
0x718 MLOAD
0x719 SWAP2
0x71a MSTORE
0x71b SWAP3
0x71c PUSH1 0x1
0x71e PUSH1 0xa0
0x720 PUSH1 0x2
0x722 EXP
0x723 SUB
0x724 SWAP1
0x725 SWAP3
0x726 AND
0x727 SWAP2
0x728 PUSH1 0x40
0x72a MLOAD
0x72b PUSH1 0x1
0x72d PUSH1 0xa0
0x72f PUSH1 0x2
0x731 EXP
0x732 SUB
0x733 SWAP1
0x734 SWAP4
0x735 AND
0x736 DUP4
0x737 MSTORE
0x738 PUSH1 0x20
0x73a DUP4
0x73b ADD
0x73c SWAP2
0x73d SWAP1
0x73e SWAP2
0x73f MSTORE
0x740 ISZERO
0x741 ISZERO
0x742 PUSH1 0x40
0x744 DUP1
0x745 DUP4
0x746 ADD
0x747 SWAP2
0x748 SWAP1
0x749 SWAP2
0x74a MSTORE
0x74b PUSH1 0x60
0x74d SWAP1
0x74e SWAP2
0x74f ADD
0x750 SWAP1
0x751 MLOAD
0x752 DUP1
0x753 SWAP2
0x754 SUB
0x755 SWAP1
0x756 LOG1
0x757 PUSH2 0x274
0x75a JUMP
---
0x705: V663 = 0x0
0x708: V664 = S[0x0]
0x709: V665 = 0x3
0x70b: V666 = S[0x3]
0x70c: V667 = 0x0
0x70f: V668 = M[0x0]
0x710: V669 = 0x20
0x712: V670 = 0x76e
0x716: CODECOPY 0x0 0x76e 0x20
0x718: V671 = M[0x0]
0x71a: M[0x0] = V668
0x71c: V672 = 0x1
0x71e: V673 = 0xa0
0x720: V674 = 0x2
0x722: V675 = EXP 0x2 0xa0
0x723: V676 = SUB 0x10000000000000000000000000000000000000000 0x1
0x726: V677 = AND V664 0xffffffffffffffffffffffffffffffffffffffff
0x728: V678 = 0x40
0x72a: V679 = M[0x40]
0x72b: V680 = 0x1
0x72d: V681 = 0xa0
0x72f: V682 = 0x2
0x731: V683 = EXP 0x2 0xa0
0x732: V684 = SUB 0x10000000000000000000000000000000000000000 0x1
0x735: V685 = AND V677 0xffffffffffffffffffffffffffffffffffffffff
0x737: M[V679] = V685
0x738: V686 = 0x20
0x73b: V687 = ADD V679 0x20
0x73f: M[V687] = V666
0x740: V688 = ISZERO 0x0
0x741: V689 = ISZERO 0x1
0x742: V690 = 0x40
0x746: V691 = ADD V679 0x40
0x74a: M[V691] = 0x0
0x74b: V692 = 0x60
0x74f: V693 = ADD V679 0x60
0x751: V694 = M[0x40]
0x754: V695 = SUB V693 V694
0x756: LOG V694 V695 V671
0x757: V696 = 0x274
0x75a: JUMP 0x274
---
Entry stack: [V10, 0x277, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, S0]

================================

Block 0x75b
[0x75b:0x765]
---
Predecessors: [0x6d2]
Successors: [0x766]
---
0x75b JUMPDEST
0x75c PUSH1 0x9
0x75e DUP1
0x75f SLOAD
0x760 PUSH1 0xff
0x762 NOT
0x763 AND
0x764 SWAP1
0x765 SSTORE
---
0x75b: JUMPDEST 
0x75c: V697 = 0x9
0x75f: V698 = S[0x9]
0x760: V699 = 0xff
0x762: V700 = NOT 0xff
0x763: V701 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V698
0x765: S[0x9] = V701
---
Entry stack: [V10, 0x277, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, S0]

================================

Block 0x766
[0x766:0x766]
---
Predecessors: [0x75b]
Successors: [0x767]
---
0x766 JUMPDEST
---
0x766: JUMPDEST 
---
Entry stack: [V10, 0x277, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, S0]

================================

Block 0x767
[0x767:0x767]
---
Predecessors: [0x766]
Successors: [0x768]
---
0x767 JUMPDEST
---
0x767: JUMPDEST 
---
Entry stack: [V10, 0x277, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, S0]

================================

Block 0x768
[0x768:0x768]
---
Predecessors: [0x767]
Successors: [0x769]
---
0x768 JUMPDEST
---
0x768: JUMPDEST 
---
Entry stack: [V10, 0x277, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, S0]

================================

Block 0x769
[0x769:0x769]
---
Predecessors: [0x768]
Successors: [0x76a]
---
0x769 JUMPDEST
---
0x769: JUMPDEST 
---
Entry stack: [V10, 0x277, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x277, S0]

================================

Block 0x76a
[0x76a:0x76c]
---
Predecessors: [0x769]
Successors: [0x277]
---
0x76a JUMPDEST
0x76b POP
0x76c JUMP
---
0x76a: JUMPDEST 
0x76c: JUMP 0x277
---
Entry stack: [V10, 0x277, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x76d
[0x76d:0x7cc]
---
Predecessors: []
Successors: []
---
0x76d STOP
0x76e MISSING 0xe8
0x76f TIMESTAMP
0x770 MISSING 0xae
0x771 MISSING 0xa7
0x772 MISSING 0xa5
0x773 CALL
0x774 MISSING 0xb0
0x775 LT
0x776 MISSING 0x49
0x777 MISSING 0xd7
0x778 MSTORE
0x779 STOP
0x77a DUP13
0x77b MSTORE8
0x77c MISSING 0xc5
0x77d MISSING 0x28
0x77e SWAP1
0x77f MISSING 0xb1
0x780 MISSING 0xa6
0x781 MISSING 0xda
0x782 MISSING 0xf6
0x783 PUSH1 0xcf
0x785 CODECOPY
0x786 MISSING 0xe8
0x787 MISSING 0xee
0x788 MISSING 0xc5
0x789 MOD
0x78a GT
0x78b MISSING 0x2b
0x78c MISSING 0xbd
0x78d MISSING 0xf6
0x78e LOG1
0x78f PUSH6 0x627a7a723058
0x796 SHA3
0x797 SWAP16
0x798 CALLDATALOAD
0x799 MISSING 0x25
0x79a DUP16
0x79b SHR
0x79c CALLDATASIZE
0x79d COINBASE
0x79e PUSH17 0x64eae16710d91cf0d5f37ee0f94a6887fb
0x7b0 DUP9
0x7b1 SLT
0x7b2 MISSING 0xa5
0x7b3 MISSING 0xba
0x7b4 PUSH24 0xf5600029
---
0x76d: STOP 
0x76e: MISSING 0xe8
0x76f: V702 = TIMESTAMP
0x770: MISSING 0xae
0x771: MISSING 0xa7
0x772: MISSING 0xa5
0x773: V703 = CALL S0 S1 S2 S3 S4 S5 S6
0x774: MISSING 0xb0
0x775: V704 = LT S0 S1
0x776: MISSING 0x49
0x777: MISSING 0xd7
0x778: M[S0] = S1
0x779: STOP 
0x77b: M8[S12] = S0
0x77c: MISSING 0xc5
0x77d: MISSING 0x28
0x77f: MISSING 0xb1
0x780: MISSING 0xa6
0x781: MISSING 0xda
0x782: MISSING 0xf6
0x783: V705 = 0xcf
0x785: CODECOPY 0xcf S0 S1
0x786: MISSING 0xe8
0x787: MISSING 0xee
0x788: MISSING 0xc5
0x789: V706 = MOD S0 S1
0x78a: V707 = GT V706 S2
0x78b: MISSING 0x2b
0x78c: MISSING 0xbd
0x78d: MISSING 0xf6
0x78e: LOG S0 S1 S2
0x78f: V708 = 0x627a7a723058
0x796: V709 = SHA3 0x627a7a723058 S3
0x798: V710 = CALLDATALOAD S19
0x799: MISSING 0x25
0x79b: V711 = SHR S15 S0
0x79c: V712 = CALLDATASIZE
0x79d: V713 = COINBASE
0x79e: V714 = 0x64eae16710d91cf0d5f37ee0f94a6887fb
0x7b1: V715 = SLT S5 0x64eae16710d91cf0d5f37ee0f94a6887fb
0x7b2: MISSING 0xa5
0x7b3: MISSING 0xba
0x7b4: V716 = 0xf5600029
---
Entry stack: []
Stack pops: 0
Stack additions: [V702, V703, V704, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S1, S0, V707, V710, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, V709, V715, V713, V712, V711, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, 0xf5600029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x279
Exit block: 0x277
Body: 0x277, 0x279, 0x280, 0x284, 0x425, 0x42f, 0x43a, 0x49a, 0x4aa, 0x4ab, 0x4ac

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x28e
Exit block: 0x2a1
Body: 0x28e, 0x295, 0x299, 0x2a1, 0x4ae

Function 2:
Public function signature: 0x2c4e722e
Entry block: 0x2b3
Exit block: 0x2a1
Body: 0x2a1, 0x2b3, 0x2ba, 0x2be, 0x4b4

Function 3:
Public function signature: 0x38af3eed
Entry block: 0x2d8
Exit block: 0x2eb
Body: 0x2d8, 0x2df, 0x2e3, 0x2eb, 0x4ba

Function 4:
Public function signature: 0x6e66f6e9
Entry block: 0x307
Exit block: 0x2eb
Body: 0x2eb, 0x307, 0x30e, 0x312, 0x4c9

Function 5:
Public function signature: 0x6f152670
Entry block: 0x336
Exit block: 0x2a1
Body: 0x2a1, 0x336, 0x33d, 0x341, 0x4d8

Function 6:
Public function signature: 0x70a08231
Entry block: 0x35b
Exit block: 0x2a1
Body: 0x2a1, 0x35b, 0x362, 0x366, 0x4de

Function 7:
Public function signature: 0x7b3e5e7b
Entry block: 0x38c
Exit block: 0x2a1
Body: 0x2a1, 0x38c, 0x393, 0x397, 0x4f0

Function 8:
Public function signature: 0x984877b0
Entry block: 0x3b1
Exit block: 0x277
Body: 0x277, 0x3b1, 0x3b8, 0x3bc, 0x4aa, 0x4ab, 0x4ac, 0x4f6, 0x50e, 0x524, 0x528, 0x55c, 0x5c1, 0x5cc, 0x5cd, 0x5ce, 0x5cf

Function 9:
Public function signature: 0xbe9a6555
Entry block: 0x3c6
Exit block: 0x2a1
Body: 0x2a1, 0x3c6, 0x3cd, 0x3d1, 0x5d1

Function 10:
Public function signature: 0xd54604ae
Entry block: 0x3eb
Exit block: 0x2a1
Body: 0x2a1, 0x3eb, 0x3f2, 0x3f6, 0x5d7

Function 11:
Public function signature: 0xfd6b7ef8
Entry block: 0x410
Exit block: 0x277
Body: 0x274, 0x277, 0x410, 0x417, 0x41b, 0x5dd, 0x5ea, 0x5f6, 0x61d, 0x648, 0x68e, 0x6aa, 0x6ab, 0x6ac, 0x6b9, 0x6cc, 0x6d2, 0x705, 0x75b, 0x766, 0x767, 0x768, 0x769, 0x76a

Function 12:
Public fallback function
Entry block: 0xb7
Exit block: 0x277
Body: 0xb7, 0xbb, 0xc8, 0xcc, 0xdd, 0xe1, 0xf0, 0xf4, 0x105, 0x109, 0x153, 0x1ac, 0x1b0, 0x1bd, 0x1c1, 0x1d1, 0x231, 0x274, 0x277

