Block 0x0
[0x0:0x32]
---
Predecessors: []
Successors: [0x33, 0x4f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 DUP1
0x29 PUSH4 0x590e1ae3
0x2e EQ
0x2f PUSH2 0x4f
0x32 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x29: V6 = 0x590e1ae3
0x2e: V7 = EQ 0x590e1ae3 V5
0x2f: V8 = 0x4f
0x32: JUMPI 0x4f V7
---
Entry stack: []
Stack pops: 0
Stack additions: [V5]
Exit stack: [V5]

================================

Block 0x33
[0x33:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x5e]
---
0x33 DUP1
0x34 PUSH4 0xd7bb99ba
0x39 EQ
0x3a PUSH2 0x5e
0x3d JUMPI
---
0x34: V9 = 0xd7bb99ba
0x39: V10 = EQ 0xd7bb99ba V5
0x3a: V11 = 0x5e
0x3d: JUMPI 0x5e V10
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0x33]
Successors: [0x49, 0x6d]
---
0x3e DUP1
0x3f PUSH4 0xe5225381
0x44 EQ
0x45 PUSH2 0x6d
0x48 JUMPI
---
0x3f: V12 = 0xe5225381
0x44: V13 = EQ 0xe5225381 V5
0x45: V14 = 0x6d
0x48: JUMPI 0x6d V13
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x49
[0x49:0x4c]
---
Predecessors: [0x3e]
Successors: [0x4d]
---
0x49 PUSH2 0x4d
0x4c JUMP
---
0x49: V15 = 0x4d
0x4c: JUMP 0x4d
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x4d
[0x4d:0x4e]
---
Predecessors: [0x49]
Successors: []
---
0x4d JUMPDEST
0x4e STOP
---
0x4d: JUMPDEST 
0x4e: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x4f
[0x4f:0x5b]
---
Predecessors: [0x0]
Successors: [0x7c]
---
0x4f JUMPDEST
0x50 PUSH2 0x5c
0x53 PUSH1 0x4
0x55 DUP1
0x56 POP
0x57 POP
0x58 PUSH2 0x7c
0x5b JUMP
---
0x4f: JUMPDEST 
0x50: V16 = 0x5c
0x53: V17 = 0x4
0x58: V18 = 0x7c
0x5b: JUMP 0x7c
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x5c]
Exit stack: [V5, 0x5c]

================================

Block 0x5c
[0x5c:0x5d]
---
Predecessors: [0x1d4]
Successors: []
---
0x5c JUMPDEST
0x5d STOP
---
0x5c: JUMPDEST 
0x5d: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x5e
[0x5e:0x6a]
---
Predecessors: [0x33]
Successors: [0x1d7]
---
0x5e JUMPDEST
0x5f PUSH2 0x6b
0x62 PUSH1 0x4
0x64 DUP1
0x65 POP
0x66 POP
0x67 PUSH2 0x1d7
0x6a JUMP
---
0x5e: JUMPDEST 
0x5f: V19 = 0x6b
0x62: V20 = 0x4
0x67: V21 = 0x1d7
0x6a: JUMP 0x1d7
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x6b]
Exit stack: [V5, 0x6b]

================================

Block 0x6b
[0x6b:0x6c]
---
Predecessors: [0x33d]
Successors: []
---
0x6b JUMPDEST
0x6c STOP
---
0x6b: JUMPDEST 
0x6c: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x6d
[0x6d:0x79]
---
Predecessors: [0x3e]
Successors: [0x33f]
---
0x6d JUMPDEST
0x6e PUSH2 0x7a
0x71 PUSH1 0x4
0x73 DUP1
0x74 POP
0x75 POP
0x76 PUSH2 0x33f
0x79 JUMP
---
0x6d: JUMPDEST 
0x6e: V22 = 0x7a
0x71: V23 = 0x4
0x76: V24 = 0x33f
0x79: JUMP 0x33f
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x7a]
Exit stack: [V5, 0x7a]

================================

Block 0x7a
[0x7a:0x7b]
---
Predecessors: [0x411]
Successors: []
---
0x7a JUMPDEST
0x7b STOP
---
0x7a: JUMPDEST 
0x7b: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x7c
[0x7c:0x8c]
---
Predecessors: [0x4f]
Successors: [0x8d, 0xad]
---
0x7c JUMPDEST
0x7d PUSH1 0x0
0x7f PUSH1 0x1
0x81 PUSH1 0x0
0x83 POP
0x84 SLOAD
0x85 TIMESTAMP
0x86 GT
0x87 DUP1
0x88 ISZERO
0x89 PUSH2 0xad
0x8c JUMPI
---
0x7c: JUMPDEST 
0x7d: V25 = 0x0
0x7f: V26 = 0x1
0x81: V27 = 0x0
0x84: V28 = S[0x1]
0x85: V29 = TIMESTAMP
0x86: V30 = GT V29 V28
0x88: V31 = ISZERO V30
0x89: V32 = 0xad
0x8c: JUMPI 0xad V31
---
Entry stack: [V5, 0x5c]
Stack pops: 0
Stack additions: [0x0, V30]
Exit stack: [V5, 0x5c, 0x0, V30]

================================

Block 0x8d
[0x8d:0xac]
---
Predecessors: [0x7c]
Successors: [0xad]
---
0x8d POP
0x8e PUSH1 0x2
0x90 PUSH1 0x0
0x92 POP
0x93 SLOAD
0x94 ADDRESS
0x95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa AND
0xab BALANCE
0xac LT
---
0x8e: V33 = 0x2
0x90: V34 = 0x0
0x93: V35 = S[0x2]
0x94: V36 = ADDRESS
0x95: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xab: V39 = BALANCE V38
0xac: V40 = LT V39 V35
---
Entry stack: [V5, 0x5c, 0x0, V30]
Stack pops: 1
Stack additions: [V40]
Exit stack: [V5, 0x5c, 0x0, V40]

================================

Block 0xad
[0xad:0xb2]
---
Predecessors: [0x7c, 0x8d]
Successors: [0xb3, 0x1d3]
---
0xad JUMPDEST
0xae ISZERO
0xaf PUSH2 0x1d3
0xb2 JUMPI
---
0xad: JUMPDEST 
0xae: V41 = ISZERO S0
0xaf: V42 = 0x1d3
0xb2: JUMPI 0x1d3 V41
---
Entry stack: [V5, 0x5c, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0x5c, 0x0]

================================

Block 0xb3
[0xb3:0xba]
---
Predecessors: [0xad]
Successors: [0xbb]
---
0xb3 PUSH1 0x3
0xb5 PUSH1 0x0
0xb7 POP
0xb8 SLOAD
0xb9 SWAP1
0xba POP
---
0xb3: V43 = 0x3
0xb5: V44 = 0x0
0xb8: V45 = S[0x3]
---
Entry stack: [V5, 0x5c, 0x0]
Stack pops: 1
Stack additions: [V45]
Exit stack: [V5, 0x5c, V45]

================================

Block 0xbb
[0xbb:0xcc]
---
Predecessors: [0xb3, 0x156]
Successors: [0xcd, 0xd4]
---
0xbb JUMPDEST
0xbc PUSH1 0x4
0xbe PUSH1 0x0
0xc0 POP
0xc1 DUP1
0xc2 SLOAD
0xc3 SWAP1
0xc4 POP
0xc5 DUP2
0xc6 LT
0xc7 DUP1
0xc8 ISZERO
0xc9 PUSH2 0xd4
0xcc JUMPI
---
0xbb: JUMPDEST 
0xbc: V46 = 0x4
0xbe: V47 = 0x0
0xc2: V48 = S[0x4]
0xc6: V49 = LT S0 V48
0xc8: V50 = ISZERO V49
0xc9: V51 = 0xd4
0xcc: JUMPI 0xd4 V50
---
Entry stack: [V5, 0x5c, S0]
Stack pops: 1
Stack additions: [S0, V49]
Exit stack: [V5, 0x5c, S0, V49]

================================

Block 0xcd
[0xcd:0xd3]
---
Predecessors: [0xbb]
Successors: [0xd4]
---
0xcd POP
0xce PUSH3 0x186a0
0xd2 GAS
0xd3 GT
---
0xce: V52 = 0x186a0
0xd2: V53 = GAS
0xd3: V54 = GT V53 0x186a0
---
Entry stack: [V5, 0x5c, S1, V49]
Stack pops: 1
Stack additions: [V54]
Exit stack: [V5, 0x5c, S1, V54]

================================

Block 0xd4
[0xd4:0xd9]
---
Predecessors: [0xbb, 0xcd]
Successors: [0xda, 0x184]
---
0xd4 JUMPDEST
0xd5 ISZERO
0xd6 PUSH2 0x184
0xd9 JUMPI
---
0xd4: JUMPDEST 
0xd5: V55 = ISZERO S0
0xd6: V56 = 0x184
0xd9: JUMPI 0x184 V55
---
Entry stack: [V5, 0x5c, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0x5c, S1]

================================

Block 0xda
[0xda:0xe8]
---
Predecessors: [0xd4]
Successors: [0xe9]
---
0xda PUSH1 0x4
0xdc PUSH1 0x0
0xde POP
0xdf DUP2
0xe0 DUP2
0xe1 SLOAD
0xe2 DUP2
0xe3 LT
0xe4 ISZERO
0xe5 PUSH2 0x2
0xe8 JUMPI
---
0xda: V57 = 0x4
0xdc: V58 = 0x0
0xe1: V59 = S[0x4]
0xe3: V60 = LT S0 V59
0xe4: V61 = ISZERO V60
0xe5: V62 = 0x2
0xe8: THROWI V61
---
Entry stack: [V5, 0x5c, S0]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V5, 0x5c, S0, 0x4, S0]

================================

Block 0xe9
[0xe9:0xf8]
---
Predecessors: [0xda]
Successors: [0xf9]
---
0xe9 SWAP1
0xea PUSH1 0x0
0xec MSTORE
0xed PUSH1 0x20
0xef PUSH1 0x0
0xf1 SHA3
0xf2 SWAP1
0xf3 PUSH1 0x2
0xf5 MUL
0xf6 ADD
0xf7 PUSH1 0x0
---
0xea: V63 = 0x0
0xec: M[0x0] = 0x4
0xed: V64 = 0x20
0xef: V65 = 0x0
0xf1: V66 = SHA3 0x0 0x20
0xf3: V67 = 0x2
0xf5: V68 = MUL 0x2 S0
0xf6: V69 = ADD V68 V66
0xf7: V70 = 0x0
---
Entry stack: [V5, 0x5c, S2, 0x4, S0]
Stack pops: 2
Stack additions: [V69, 0x0]
Exit stack: [V5, 0x5c, S2, V69, 0x0]

================================

Block 0xf9
[0xf9:0x145]
---
Predecessors: [0xe9]
Successors: [0x146]
---
0xf9 JUMPDEST
0xfa POP
0xfb PUSH1 0x0
0xfd ADD
0xfe PUSH1 0x0
0x100 SWAP1
0x101 SLOAD
0x102 SWAP1
0x103 PUSH2 0x100
0x106 EXP
0x107 SWAP1
0x108 DIV
0x109 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11e AND
0x11f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x134 AND
0x135 PUSH1 0x0
0x137 PUSH1 0x4
0x139 PUSH1 0x0
0x13b POP
0x13c DUP4
0x13d DUP2
0x13e SLOAD
0x13f DUP2
0x140 LT
0x141 ISZERO
0x142 PUSH2 0x2
0x145 JUMPI
---
0xf9: JUMPDEST 
0xfb: V71 = 0x0
0xfd: V72 = ADD 0x0 V69
0xfe: V73 = 0x0
0x101: V74 = S[V72]
0x103: V75 = 0x100
0x106: V76 = EXP 0x100 0x0
0x108: V77 = DIV V74 0x1
0x109: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x11e: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x11f: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x134: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x135: V82 = 0x0
0x137: V83 = 0x4
0x139: V84 = 0x0
0x13e: V85 = S[0x4]
0x140: V86 = LT S2 V85
0x141: V87 = ISZERO V86
0x142: V88 = 0x2
0x145: THROWI V87
---
Entry stack: [V5, 0x5c, S2, V69, 0x0]
Stack pops: 3
Stack additions: [S2, V81, 0x0, 0x4, S2]
Exit stack: [V5, 0x5c, S2, V81, 0x0, 0x4, S2]

================================

Block 0x146
[0x146:0x155]
---
Predecessors: [0xf9]
Successors: [0x156]
---
0x146 SWAP1
0x147 PUSH1 0x0
0x149 MSTORE
0x14a PUSH1 0x20
0x14c PUSH1 0x0
0x14e SHA3
0x14f SWAP1
0x150 PUSH1 0x2
0x152 MUL
0x153 ADD
0x154 PUSH1 0x0
---
0x147: V89 = 0x0
0x149: M[0x0] = 0x4
0x14a: V90 = 0x20
0x14c: V91 = 0x0
0x14e: V92 = SHA3 0x0 0x20
0x150: V93 = 0x2
0x152: V94 = MUL 0x2 S0
0x153: V95 = ADD V94 V92
0x154: V96 = 0x0
---
Entry stack: [V5, 0x5c, S4, V81, 0x0, 0x4, S0]
Stack pops: 2
Stack additions: [V95, 0x0]
Exit stack: [V5, 0x5c, S4, V81, 0x0, V95, 0x0]

================================

Block 0x156
[0x156:0x183]
---
Predecessors: [0x146]
Successors: [0xbb]
---
0x156 JUMPDEST
0x157 POP
0x158 PUSH1 0x1
0x15a ADD
0x15b PUSH1 0x0
0x15d POP
0x15e SLOAD
0x15f PUSH1 0x40
0x161 MLOAD
0x162 DUP1
0x163 SWAP1
0x164 POP
0x165 PUSH1 0x0
0x167 PUSH1 0x40
0x169 MLOAD
0x16a DUP1
0x16b DUP4
0x16c SUB
0x16d DUP2
0x16e DUP6
0x16f DUP9
0x170 DUP9
0x171 CALL
0x172 SWAP4
0x173 POP
0x174 POP
0x175 POP
0x176 POP
0x177 POP
0x178 DUP1
0x179 DUP1
0x17a PUSH1 0x1
0x17c ADD
0x17d SWAP2
0x17e POP
0x17f POP
0x180 PUSH2 0xbb
0x183 JUMP
---
0x156: JUMPDEST 
0x158: V97 = 0x1
0x15a: V98 = ADD 0x1 V95
0x15b: V99 = 0x0
0x15e: V100 = S[V98]
0x15f: V101 = 0x40
0x161: V102 = M[0x40]
0x165: V103 = 0x0
0x167: V104 = 0x40
0x169: V105 = M[0x40]
0x16c: V106 = SUB V102 V105
0x171: V107 = CALL 0x0 V81 V100 V105 V106 V105 0x0
0x17a: V108 = 0x1
0x17c: V109 = ADD 0x1 S4
0x180: V110 = 0xbb
0x183: JUMP 0xbb
---
Entry stack: [V5, 0x5c, S4, V81, 0x0, V95, 0x0]
Stack pops: 5
Stack additions: [V109]
Exit stack: [V5, 0x5c, V109]

================================

Block 0x184
[0x184:0x1d2]
---
Predecessors: [0xd4]
Successors: [0x1d3]
---
0x184 JUMPDEST
0x185 PUSH32 0xfcfb7f72d0e60274ace7fff9681ff44ce3ea1a68e5494965d16bf14c3888c372
0x1a6 PUSH1 0x3
0x1a8 PUSH1 0x0
0x1aa POP
0x1ab SLOAD
0x1ac DUP3
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 DUP1
0x1b1 DUP4
0x1b2 DUP2
0x1b3 MSTORE
0x1b4 PUSH1 0x20
0x1b6 ADD
0x1b7 DUP3
0x1b8 DUP2
0x1b9 MSTORE
0x1ba PUSH1 0x20
0x1bc ADD
0x1bd SWAP3
0x1be POP
0x1bf POP
0x1c0 POP
0x1c1 PUSH1 0x40
0x1c3 MLOAD
0x1c4 DUP1
0x1c5 SWAP2
0x1c6 SUB
0x1c7 SWAP1
0x1c8 LOG1
0x1c9 DUP1
0x1ca PUSH1 0x3
0x1cc PUSH1 0x0
0x1ce POP
0x1cf DUP2
0x1d0 SWAP1
0x1d1 SSTORE
0x1d2 POP
---
0x184: JUMPDEST 
0x185: V111 = 0xfcfb7f72d0e60274ace7fff9681ff44ce3ea1a68e5494965d16bf14c3888c372
0x1a6: V112 = 0x3
0x1a8: V113 = 0x0
0x1ab: V114 = S[0x3]
0x1ad: V115 = 0x40
0x1af: V116 = M[0x40]
0x1b3: M[V116] = V114
0x1b4: V117 = 0x20
0x1b6: V118 = ADD 0x20 V116
0x1b9: M[V118] = S0
0x1ba: V119 = 0x20
0x1bc: V120 = ADD 0x20 V118
0x1c1: V121 = 0x40
0x1c3: V122 = M[0x40]
0x1c6: V123 = SUB V120 V122
0x1c8: LOG V122 V123 0xfcfb7f72d0e60274ace7fff9681ff44ce3ea1a68e5494965d16bf14c3888c372
0x1ca: V124 = 0x3
0x1cc: V125 = 0x0
0x1d1: S[0x3] = S0
---
Entry stack: [V5, 0x5c, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5, 0x5c, S0]

================================

Block 0x1d3
[0x1d3:0x1d3]
---
Predecessors: [0xad, 0x184]
Successors: [0x1d4]
---
0x1d3 JUMPDEST
---
0x1d3: JUMPDEST 
---
Entry stack: [V5, 0x5c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x5c, S0]

================================

Block 0x1d4
[0x1d4:0x1d6]
---
Predecessors: [0x1d3]
Successors: [0x5c]
---
0x1d4 JUMPDEST
0x1d5 POP
0x1d6 JUMP
---
0x1d4: JUMPDEST 
0x1d6: JUMP 0x5c
---
Entry stack: [V5, 0x5c, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V5]

================================

Block 0x1d7
[0x1d7:0x1e5]
---
Predecessors: [0x5e]
Successors: [0x1e6, 0x337]
---
0x1d7 JUMPDEST
0x1d8 PUSH1 0x1
0x1da PUSH1 0x0
0x1dc POP
0x1dd SLOAD
0x1de TIMESTAMP
0x1df GT
0x1e0 ISZERO
0x1e1 ISZERO
0x1e2 PUSH2 0x337
0x1e5 JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V126 = 0x1
0x1da: V127 = 0x0
0x1dd: V128 = S[0x1]
0x1de: V129 = TIMESTAMP
0x1df: V130 = GT V129 V128
0x1e0: V131 = ISZERO V130
0x1e1: V132 = ISZERO V131
0x1e2: V133 = 0x337
0x1e5: JUMPI 0x337 V132
---
Entry stack: [V5, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x6b]

================================

Block 0x1e6
[0x1e6:0x254]
---
Predecessors: [0x1d7]
Successors: [0x255, 0x2bd]
---
0x1e6 PUSH32 0x370510fa7e8c74204b8d2fd52b7a0837e535ea0c1491fd4e13730ce825e40524
0x207 CALLER
0x208 CALLVALUE
0x209 PUSH1 0x40
0x20b MLOAD
0x20c DUP1
0x20d DUP4
0x20e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x223 AND
0x224 DUP2
0x225 MSTORE
0x226 PUSH1 0x20
0x228 ADD
0x229 DUP3
0x22a DUP2
0x22b MSTORE
0x22c PUSH1 0x20
0x22e ADD
0x22f SWAP3
0x230 POP
0x231 POP
0x232 POP
0x233 PUSH1 0x40
0x235 MLOAD
0x236 DUP1
0x237 SWAP2
0x238 SUB
0x239 SWAP1
0x23a LOG1
0x23b PUSH1 0x4
0x23d PUSH1 0x0
0x23f POP
0x240 DUP1
0x241 SLOAD
0x242 DUP1
0x243 PUSH1 0x1
0x245 ADD
0x246 DUP3
0x247 DUP2
0x248 DUP2
0x249 SLOAD
0x24a DUP2
0x24b DUP4
0x24c SSTORE
0x24d DUP2
0x24e DUP2
0x24f ISZERO
0x250 GT
0x251 PUSH2 0x2bd
0x254 JUMPI
---
0x1e6: V134 = 0x370510fa7e8c74204b8d2fd52b7a0837e535ea0c1491fd4e13730ce825e40524
0x207: V135 = CALLER
0x208: V136 = CALLVALUE
0x209: V137 = 0x40
0x20b: V138 = M[0x40]
0x20e: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x223: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x225: M[V138] = V140
0x226: V141 = 0x20
0x228: V142 = ADD 0x20 V138
0x22b: M[V142] = V136
0x22c: V143 = 0x20
0x22e: V144 = ADD 0x20 V142
0x233: V145 = 0x40
0x235: V146 = M[0x40]
0x238: V147 = SUB V144 V146
0x23a: LOG V146 V147 0x370510fa7e8c74204b8d2fd52b7a0837e535ea0c1491fd4e13730ce825e40524
0x23b: V148 = 0x4
0x23d: V149 = 0x0
0x241: V150 = S[0x4]
0x243: V151 = 0x1
0x245: V152 = ADD 0x1 V150
0x249: V153 = S[0x4]
0x24c: S[0x4] = V152
0x24f: V154 = ISZERO V153
0x250: V155 = GT V154 V152
0x251: V156 = 0x2bd
0x254: JUMPI 0x2bd V155
---
Entry stack: [V5, 0x6b]
Stack pops: 0
Stack additions: [0x4, V150, V152, 0x4, V152, V153]
Exit stack: [V5, 0x6b, 0x4, V150, V152, 0x4, V152, V153]

================================

Block 0x255
[0x255:0x272]
---
Predecessors: [0x1e6]
Successors: [0x273]
---
0x255 PUSH1 0x2
0x257 MUL
0x258 DUP2
0x259 PUSH1 0x2
0x25b MUL
0x25c DUP4
0x25d PUSH1 0x0
0x25f MSTORE
0x260 PUSH1 0x20
0x262 PUSH1 0x0
0x264 SHA3
0x265 SWAP2
0x266 DUP3
0x267 ADD
0x268 SWAP2
0x269 ADD
0x26a PUSH2 0x2bc
0x26d SWAP2
0x26e SWAP1
0x26f PUSH2 0x273
0x272 JUMP
---
0x255: V157 = 0x2
0x257: V158 = MUL 0x2 V153
0x259: V159 = 0x2
0x25b: V160 = MUL 0x2 V152
0x25d: V161 = 0x0
0x25f: M[0x0] = 0x4
0x260: V162 = 0x20
0x262: V163 = 0x0
0x264: V164 = SHA3 0x0 0x20
0x267: V165 = ADD V164 V158
0x269: V166 = ADD V164 V160
0x26a: V167 = 0x2bc
0x26f: V168 = 0x273
0x272: JUMP 0x273
---
Entry stack: [V5, 0x6b, 0x4, V150, V152, 0x4, V152, V153]
Stack pops: 3
Stack additions: [S2, S1, 0x2bc, V165, V166]
Exit stack: [V5, 0x6b, 0x4, V150, V152, 0x4, V152, 0x2bc, V165, V166]

================================

Block 0x273
[0x273:0x27b]
---
Predecessors: [0x255, 0x27c]
Successors: [0x27c, 0x2b8]
---
0x273 JUMPDEST
0x274 DUP1
0x275 DUP3
0x276 GT
0x277 ISZERO
0x278 PUSH2 0x2b8
0x27b JUMPI
---
0x273: JUMPDEST 
0x276: V169 = GT V165 S0
0x277: V170 = ISZERO V169
0x278: V171 = 0x2b8
0x27b: JUMPI 0x2b8 V170
---
Entry stack: [V5, 0x6b, 0x4, V150, V152, 0x4, V152, 0x2bc, V165, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V5, 0x6b, 0x4, V150, V152, 0x4, V152, 0x2bc, V165, S0]

================================

Block 0x27c
[0x27c:0x2b7]
---
Predecessors: [0x273]
Successors: [0x273]
---
0x27c PUSH1 0x0
0x27e PUSH1 0x0
0x280 DUP3
0x281 ADD
0x282 PUSH1 0x0
0x284 PUSH2 0x100
0x287 EXP
0x288 DUP2
0x289 SLOAD
0x28a SWAP1
0x28b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a0 MUL
0x2a1 NOT
0x2a2 AND
0x2a3 SWAP1
0x2a4 SSTORE
0x2a5 PUSH1 0x1
0x2a7 DUP3
0x2a8 ADD
0x2a9 PUSH1 0x0
0x2ab POP
0x2ac PUSH1 0x0
0x2ae SWAP1
0x2af SSTORE
0x2b0 POP
0x2b1 PUSH1 0x2
0x2b3 ADD
0x2b4 PUSH2 0x273
0x2b7 JUMP
---
0x27c: V172 = 0x0
0x27e: V173 = 0x0
0x281: V174 = ADD S0 0x0
0x282: V175 = 0x0
0x284: V176 = 0x100
0x287: V177 = EXP 0x100 0x0
0x289: V178 = S[V174]
0x28b: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V180 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2a1: V181 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2a2: V182 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V178
0x2a4: S[V174] = V182
0x2a5: V183 = 0x1
0x2a8: V184 = ADD S0 0x1
0x2a9: V185 = 0x0
0x2ac: V186 = 0x0
0x2af: S[V184] = 0x0
0x2b1: V187 = 0x2
0x2b3: V188 = ADD 0x2 S0
0x2b4: V189 = 0x273
0x2b7: JUMP 0x273
---
Entry stack: [V5, 0x6b, 0x4, V150, V152, 0x4, V152, 0x2bc, V165, S0]
Stack pops: 1
Stack additions: [V188]
Exit stack: [V5, 0x6b, 0x4, V150, V152, 0x4, V152, 0x2bc, V165, V188]

================================

Block 0x2b8
[0x2b8:0x2bb]
---
Predecessors: [0x273]
Successors: [0x2bc]
---
0x2b8 JUMPDEST
0x2b9 POP
0x2ba SWAP1
0x2bb JUMP
---
0x2b8: JUMPDEST 
0x2bb: JUMP 0x2bc
---
Entry stack: [V5, 0x6b, 0x4, V150, V152, 0x4, V152, 0x2bc, V165, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V5, 0x6b, 0x4, V150, V152, 0x4, V152, V165]

================================

Block 0x2bc
[0x2bc:0x2bc]
---
Predecessors: [0x2b8]
Successors: [0x2bd]
---
0x2bc JUMPDEST
---
0x2bc: JUMPDEST 
---
Entry stack: [V5, 0x6b, 0x4, V150, V152, 0x4, V152, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x6b, 0x4, V150, V152, 0x4, V152, V165]

================================

Block 0x2bd
[0x2bd:0x2d2]
---
Predecessors: [0x1e6, 0x2bc]
Successors: [0x2d3]
---
0x2bd JUMPDEST
0x2be POP
0x2bf POP
0x2c0 POP
0x2c1 SWAP2
0x2c2 SWAP1
0x2c3 SWAP1
0x2c4 PUSH1 0x0
0x2c6 MSTORE
0x2c7 PUSH1 0x20
0x2c9 PUSH1 0x0
0x2cb SHA3
0x2cc SWAP1
0x2cd PUSH1 0x2
0x2cf MUL
0x2d0 ADD
0x2d1 PUSH1 0x0
---
0x2bd: JUMPDEST 
0x2c4: V190 = 0x0
0x2c6: M[0x0] = 0x4
0x2c7: V191 = 0x20
0x2c9: V192 = 0x0
0x2cb: V193 = SHA3 0x0 0x20
0x2cd: V194 = 0x2
0x2cf: V195 = MUL 0x2 V150
0x2d0: V196 = ADD V195 V193
0x2d1: V197 = 0x0
---
Entry stack: [V5, 0x6b, 0x4, V150, V152, 0x4, V152, S0]
Stack pops: 6
Stack additions: [S3, V196, 0x0]
Exit stack: [V5, 0x6b, V152, V196, 0x0]

================================

Block 0x2d3
[0x2d3:0x336]
---
Predecessors: [0x2bd]
Successors: [0x33c]
---
0x2d3 JUMPDEST
0x2d4 PUSH1 0x40
0x2d6 PUSH1 0x40
0x2d8 MLOAD
0x2d9 SWAP1
0x2da DUP2
0x2db ADD
0x2dc PUSH1 0x40
0x2de MSTORE
0x2df DUP1
0x2e0 CALLER
0x2e1 DUP2
0x2e2 MSTORE
0x2e3 PUSH1 0x20
0x2e5 ADD
0x2e6 CALLVALUE
0x2e7 DUP2
0x2e8 MSTORE
0x2e9 PUSH1 0x20
0x2eb ADD
0x2ec POP
0x2ed SWAP1
0x2ee SWAP2
0x2ef SWAP1
0x2f0 SWAP2
0x2f1 POP
0x2f2 PUSH1 0x0
0x2f4 DUP3
0x2f5 ADD
0x2f6 MLOAD
0x2f7 DUP2
0x2f8 PUSH1 0x0
0x2fa ADD
0x2fb PUSH1 0x0
0x2fd PUSH2 0x100
0x300 EXP
0x301 DUP2
0x302 SLOAD
0x303 DUP2
0x304 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x319 MUL
0x31a NOT
0x31b AND
0x31c SWAP1
0x31d DUP4
0x31e MUL
0x31f OR
0x320 SWAP1
0x321 SSTORE
0x322 POP
0x323 PUSH1 0x20
0x325 DUP3
0x326 ADD
0x327 MLOAD
0x328 DUP2
0x329 PUSH1 0x1
0x32b ADD
0x32c PUSH1 0x0
0x32e POP
0x32f SSTORE
0x330 POP
0x331 POP
0x332 POP
0x333 PUSH2 0x33c
0x336 JUMP
---
0x2d3: JUMPDEST 
0x2d4: V198 = 0x40
0x2d6: V199 = 0x40
0x2d8: V200 = M[0x40]
0x2db: V201 = ADD V200 0x40
0x2dc: V202 = 0x40
0x2de: M[0x40] = V201
0x2e0: V203 = CALLER
0x2e2: M[V200] = V203
0x2e3: V204 = 0x20
0x2e5: V205 = ADD 0x20 V200
0x2e6: V206 = CALLVALUE
0x2e8: M[V205] = V206
0x2e9: V207 = 0x20
0x2eb: V208 = ADD 0x20 V205
0x2f2: V209 = 0x0
0x2f5: V210 = ADD V200 0x0
0x2f6: V211 = M[V210]
0x2f8: V212 = 0x0
0x2fa: V213 = ADD 0x0 V196
0x2fb: V214 = 0x0
0x2fd: V215 = 0x100
0x300: V216 = EXP 0x100 0x0
0x302: V217 = S[V213]
0x304: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x319: V219 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x31a: V220 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V221 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V217
0x31e: V222 = MUL V211 0x1
0x31f: V223 = OR V222 V221
0x321: S[V213] = V223
0x323: V224 = 0x20
0x326: V225 = ADD V200 0x20
0x327: V226 = M[V225]
0x329: V227 = 0x1
0x32b: V228 = ADD 0x1 V196
0x32c: V229 = 0x0
0x32f: S[V228] = V226
0x333: V230 = 0x33c
0x336: JUMP 0x33c
---
Entry stack: [V5, 0x6b, V152, V196, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V5, 0x6b]

================================

Block 0x337
[0x337:0x33b]
---
Predecessors: [0x1d7]
Successors: []
---
0x337 JUMPDEST
0x338 PUSH2 0x2
0x33b JUMP
---
0x337: JUMPDEST 
0x338: V231 = 0x2
0x33b: THROW 
---
Entry stack: [V5, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x6b]

================================

Block 0x33c
[0x33c:0x33c]
---
Predecessors: [0x2d3]
Successors: [0x33d]
---
0x33c JUMPDEST
---
0x33c: JUMPDEST 
---
Entry stack: [V5, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x6b]

================================

Block 0x33d
[0x33d:0x33e]
---
Predecessors: [0x33c]
Successors: [0x6b]
---
0x33d JUMPDEST
0x33e JUMP
---
0x33d: JUMPDEST 
0x33e: JUMP 0x6b
---
Entry stack: [V5, 0x6b]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0x33f
[0x33f:0x34d]
---
Predecessors: [0x6d]
Successors: [0x34e, 0x36f]
---
0x33f JUMPDEST
0x340 PUSH1 0x1
0x342 PUSH1 0x0
0x344 POP
0x345 SLOAD
0x346 TIMESTAMP
0x347 GT
0x348 DUP1
0x349 ISZERO
0x34a PUSH2 0x36f
0x34d JUMPI
---
0x33f: JUMPDEST 
0x340: V232 = 0x1
0x342: V233 = 0x0
0x345: V234 = S[0x1]
0x346: V235 = TIMESTAMP
0x347: V236 = GT V235 V234
0x349: V237 = ISZERO V236
0x34a: V238 = 0x36f
0x34d: JUMPI 0x36f V237
---
Entry stack: [V5, 0x7a]
Stack pops: 0
Stack additions: [V236]
Exit stack: [V5, 0x7a, V236]

================================

Block 0x34e
[0x34e:0x36e]
---
Predecessors: [0x33f]
Successors: [0x36f]
---
0x34e POP
0x34f PUSH1 0x2
0x351 PUSH1 0x0
0x353 POP
0x354 SLOAD
0x355 ADDRESS
0x356 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36b AND
0x36c BALANCE
0x36d LT
0x36e ISZERO
---
0x34f: V239 = 0x2
0x351: V240 = 0x0
0x354: V241 = S[0x2]
0x355: V242 = ADDRESS
0x356: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x36b: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x36c: V245 = BALANCE V244
0x36d: V246 = LT V245 V241
0x36e: V247 = ISZERO V246
---
Entry stack: [V5, 0x7a, V236]
Stack pops: 1
Stack additions: [V247]
Exit stack: [V5, 0x7a, V247]

================================

Block 0x36f
[0x36f:0x374]
---
Predecessors: [0x33f, 0x34e]
Successors: [0x375, 0x410]
---
0x36f JUMPDEST
0x370 ISZERO
0x371 PUSH2 0x410
0x374 JUMPI
---
0x36f: JUMPDEST 
0x370: V248 = ISZERO S0
0x371: V249 = 0x410
0x374: JUMPI 0x410 V248
---
Entry stack: [V5, 0x7a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0x7a]

================================

Block 0x375
[0x375:0x40f]
---
Predecessors: [0x36f]
Successors: [0x410]
---
0x375 PUSH32 0xe08d7d271189b8d297d793ea01c490ffda04e460d235d9dbb9fd1b84b3ffe0c9
0x396 PUSH1 0x40
0x398 MLOAD
0x399 DUP1
0x39a SWAP1
0x39b POP
0x39c PUSH1 0x40
0x39e MLOAD
0x39f DUP1
0x3a0 SWAP2
0x3a1 SUB
0x3a2 SWAP1
0x3a3 LOG1
0x3a4 PUSH1 0x0
0x3a6 PUSH1 0x0
0x3a8 SWAP1
0x3a9 SLOAD
0x3aa SWAP1
0x3ab PUSH2 0x100
0x3ae EXP
0x3af SWAP1
0x3b0 DIV
0x3b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c6 AND
0x3c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3dc AND
0x3dd PUSH1 0x0
0x3df ADDRESS
0x3e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f5 AND
0x3f6 BALANCE
0x3f7 PUSH1 0x40
0x3f9 MLOAD
0x3fa DUP1
0x3fb SWAP1
0x3fc POP
0x3fd PUSH1 0x0
0x3ff PUSH1 0x40
0x401 MLOAD
0x402 DUP1
0x403 DUP4
0x404 SUB
0x405 DUP2
0x406 DUP6
0x407 DUP9
0x408 DUP9
0x409 CALL
0x40a SWAP4
0x40b POP
0x40c POP
0x40d POP
0x40e POP
0x40f POP
---
0x375: V250 = 0xe08d7d271189b8d297d793ea01c490ffda04e460d235d9dbb9fd1b84b3ffe0c9
0x396: V251 = 0x40
0x398: V252 = M[0x40]
0x39c: V253 = 0x40
0x39e: V254 = M[0x40]
0x3a1: V255 = SUB V252 V254
0x3a3: LOG V254 V255 0xe08d7d271189b8d297d793ea01c490ffda04e460d235d9dbb9fd1b84b3ffe0c9
0x3a4: V256 = 0x0
0x3a6: V257 = 0x0
0x3a9: V258 = S[0x0]
0x3ab: V259 = 0x100
0x3ae: V260 = EXP 0x100 0x0
0x3b0: V261 = DIV V258 0x1
0x3b1: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c6: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x3c7: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x3dc: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x3dd: V266 = 0x0
0x3df: V267 = ADDRESS
0x3e0: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f5: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x3f6: V270 = BALANCE V269
0x3f7: V271 = 0x40
0x3f9: V272 = M[0x40]
0x3fd: V273 = 0x0
0x3ff: V274 = 0x40
0x401: V275 = M[0x40]
0x404: V276 = SUB V272 V275
0x409: V277 = CALL 0x0 V265 V270 V275 V276 V275 0x0
---
Entry stack: [V5, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x7a]

================================

Block 0x410
[0x410:0x410]
---
Predecessors: [0x36f, 0x375]
Successors: [0x411]
---
0x410 JUMPDEST
---
0x410: JUMPDEST 
---
Entry stack: [V5, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x7a]

================================

Block 0x411
[0x411:0x412]
---
Predecessors: [0x410]
Successors: [0x7a]
---
0x411 JUMPDEST
0x412 JUMP
---
0x411: JUMPDEST 
0x412: JUMP 0x7a
---
Entry stack: [V5, 0x7a]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Function 0:
Public function signature: 0x590e1ae3
Entry block: 0x4f
Exit block: 0x5c
Body: 0x4f, 0x5c, 0x7c, 0x8d, 0xad, 0xb3, 0xbb, 0xcd, 0xd4, 0xda, 0xe9, 0xf9, 0x146, 0x156, 0x184, 0x1d3, 0x1d4

Function 1:
Public function signature: 0xd7bb99ba
Entry block: 0x5e
Exit block: 0x6b
Body: 0x5e, 0x6b, 0x1d7, 0x1e6, 0x255, 0x273, 0x27c, 0x2b8, 0x2bc, 0x2bd, 0x2d3, 0x337, 0x33c, 0x33d

Function 2:
Public function signature: 0xe5225381
Entry block: 0x6d
Exit block: 0x7a
Body: 0x6d, 0x7a, 0x33f, 0x34e, 0x36f, 0x375, 0x410, 0x411

Function 3:
Public fallback function
Entry block: 0x49
Exit block: 0x4d
Body: 0x49, 0x4d

