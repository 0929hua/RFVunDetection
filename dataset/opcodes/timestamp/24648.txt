Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x164]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x164
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x164
0xa: JUMPI 0x164 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x7d8]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x7d8
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x7d8
0x24: JUMPI 0x7d8 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x7ed]
---
0x25 DUP1
0x26 PUSH4 0x10309781
0x2b EQ
0x2c PUSH2 0x7ed
0x2f JUMPI
---
0x26: V16 = 0x10309781
0x2b: V17 = EQ 0x10309781 V12
0x2c: V18 = 0x7ed
0x2f: JUMPI 0x7ed V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x812]
---
0x30 DUP1
0x31 PUSH4 0x1fd8ffb0
0x36 EQ
0x37 PUSH2 0x812
0x3a JUMPI
---
0x31: V19 = 0x1fd8ffb0
0x36: V20 = EQ 0x1fd8ffb0 V12
0x37: V21 = 0x812
0x3a: JUMPI 0x812 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x82a]
---
0x3b DUP1
0x3c PUSH4 0x29dcb0cf
0x41 EQ
0x42 PUSH2 0x82a
0x45 JUMPI
---
0x3c: V22 = 0x29dcb0cf
0x41: V23 = EQ 0x29dcb0cf V12
0x42: V24 = 0x82a
0x45: JUMPI 0x82a V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x84f]
---
0x46 DUP1
0x47 PUSH4 0x2ec914b5
0x4c EQ
0x4d PUSH2 0x84f
0x50 JUMPI
---
0x47: V25 = 0x2ec914b5
0x4c: V26 = EQ 0x2ec914b5 V12
0x4d: V27 = 0x84f
0x50: JUMPI 0x84f V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x874]
---
0x51 DUP1
0x52 PUSH4 0x31252103
0x57 EQ
0x58 PUSH2 0x874
0x5b JUMPI
---
0x52: V28 = 0x31252103
0x57: V29 = EQ 0x31252103 V12
0x58: V30 = 0x874
0x5b: JUMPI 0x874 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x899]
---
0x5c DUP1
0x5d PUSH4 0x38af3eed
0x62 EQ
0x63 PUSH2 0x899
0x66 JUMPI
---
0x5d: V31 = 0x38af3eed
0x62: V32 = EQ 0x38af3eed V12
0x63: V33 = 0x899
0x66: JUMPI 0x899 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x8c8]
---
0x67 DUP1
0x68 PUSH4 0x3b41ddba
0x6d EQ
0x6e PUSH2 0x8c8
0x71 JUMPI
---
0x68: V34 = 0x3b41ddba
0x6d: V35 = EQ 0x3b41ddba V12
0x6e: V36 = 0x8c8
0x71: JUMPI 0x8c8 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x8ed]
---
0x72 DUP1
0x73 PUSH4 0x4c95f5d0
0x78 EQ
0x79 PUSH2 0x8ed
0x7c JUMPI
---
0x73: V37 = 0x4c95f5d0
0x78: V38 = EQ 0x4c95f5d0 V12
0x79: V39 = 0x8ed
0x7c: JUMPI 0x8ed V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x912]
---
0x7d DUP1
0x7e PUSH4 0x4fa34075
0x83 EQ
0x84 PUSH2 0x912
0x87 JUMPI
---
0x7e: V40 = 0x4fa34075
0x83: V41 = EQ 0x4fa34075 V12
0x84: V42 = 0x912
0x87: JUMPI 0x912 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x927]
---
0x88 DUP1
0x89 PUSH4 0x5a0254e2
0x8e EQ
0x8f PUSH2 0x927
0x92 JUMPI
---
0x89: V43 = 0x5a0254e2
0x8e: V44 = EQ 0x5a0254e2 V12
0x8f: V45 = 0x927
0x92: JUMPI 0x927 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x956]
---
0x93 DUP1
0x94 PUSH4 0x5b54d2d6
0x99 EQ
0x9a PUSH2 0x956
0x9d JUMPI
---
0x94: V46 = 0x5b54d2d6
0x99: V47 = EQ 0x5b54d2d6 V12
0x9a: V48 = 0x956
0x9d: JUMPI 0x956 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x97d]
---
0x9e DUP1
0x9f PUSH4 0x6e66f6e9
0xa4 EQ
0xa5 PUSH2 0x97d
0xa8 JUMPI
---
0x9f: V49 = 0x6e66f6e9
0xa4: V50 = EQ 0x6e66f6e9 V12
0xa5: V51 = 0x97d
0xa8: JUMPI 0x97d V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x9ac]
---
0xa9 DUP1
0xaa PUSH4 0x70a08231
0xaf EQ
0xb0 PUSH2 0x9ac
0xb3 JUMPI
---
0xaa: V52 = 0x70a08231
0xaf: V53 = EQ 0x70a08231 V12
0xb0: V54 = 0x9ac
0xb3: JUMPI 0x9ac V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x9dd]
---
0xb4 DUP1
0xb5 PUSH4 0x7a3a0e84
0xba EQ
0xbb PUSH2 0x9dd
0xbe JUMPI
---
0xb5: V55 = 0x7a3a0e84
0xba: V56 = EQ 0x7a3a0e84 V12
0xbb: V57 = 0x9dd
0xbe: JUMPI 0x9dd V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0xa02]
---
0xbf DUP1
0xc0 PUSH4 0x7b3e5e7b
0xc5 EQ
0xc6 PUSH2 0xa02
0xc9 JUMPI
---
0xc0: V58 = 0x7b3e5e7b
0xc5: V59 = EQ 0x7b3e5e7b V12
0xc6: V60 = 0xa02
0xc9: JUMPI 0xa02 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0xa27]
---
0xca DUP1
0xcb PUSH4 0x7c24ce7d
0xd0 EQ
0xd1 PUSH2 0xa27
0xd4 JUMPI
---
0xcb: V61 = 0x7c24ce7d
0xd0: V62 = EQ 0x7c24ce7d V12
0xd1: V63 = 0xa27
0xd4: JUMPI 0xa27 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0xa4c]
---
0xd5 DUP1
0xd6 PUSH4 0x827037db
0xdb EQ
0xdc PUSH2 0xa4c
0xdf JUMPI
---
0xd6: V64 = 0x827037db
0xdb: V65 = EQ 0x827037db V12
0xdc: V66 = 0xa4c
0xdf: JUMPI 0xa4c V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0xa71]
---
0xe0 DUP1
0xe1 PUSH4 0x89e66aea
0xe6 EQ
0xe7 PUSH2 0xa71
0xea JUMPI
---
0xe1: V67 = 0x89e66aea
0xe6: V68 = EQ 0x89e66aea V12
0xe7: V69 = 0xa71
0xea: JUMPI 0xa71 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0xa96]
---
0xeb DUP1
0xec PUSH4 0x8f48399a
0xf1 EQ
0xf2 PUSH2 0xa96
0xf5 JUMPI
---
0xec: V70 = 0x8f48399a
0xf1: V71 = EQ 0x8f48399a V12
0xf2: V72 = 0xa96
0xf5: JUMPI 0xa96 V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0xabb]
---
0xf6 DUP1
0xf7 PUSH4 0x92dcc41c
0xfc EQ
0xfd PUSH2 0xabb
0x100 JUMPI
---
0xf7: V73 = 0x92dcc41c
0xfc: V74 = EQ 0x92dcc41c V12
0xfd: V75 = 0xabb
0x100: JUMPI 0xabb V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0xae0]
---
0x101 DUP1
0x102 PUSH4 0x998936b0
0x107 EQ
0x108 PUSH2 0xae0
0x10b JUMPI
---
0x102: V76 = 0x998936b0
0x107: V77 = EQ 0x998936b0 V12
0x108: V78 = 0xae0
0x10b: JUMPI 0xae0 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x116]
---
Predecessors: [0x101]
Successors: [0x117, 0xaf5]
---
0x10c DUP1
0x10d PUSH4 0xa02d55a3
0x112 EQ
0x113 PUSH2 0xaf5
0x116 JUMPI
---
0x10d: V79 = 0xa02d55a3
0x112: V80 = EQ 0xa02d55a3 V12
0x113: V81 = 0xaf5
0x116: JUMPI 0xaf5 V80
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x117
[0x117:0x121]
---
Predecessors: [0x10c]
Successors: [0x122, 0xb0a]
---
0x117 DUP1
0x118 PUSH4 0xa8a75b78
0x11d EQ
0x11e PUSH2 0xb0a
0x121 JUMPI
---
0x118: V82 = 0xa8a75b78
0x11d: V83 = EQ 0xa8a75b78 V12
0x11e: V84 = 0xb0a
0x121: JUMPI 0xb0a V83
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x122
[0x122:0x12c]
---
Predecessors: [0x117]
Successors: [0x12d, 0xb2f]
---
0x122 DUP1
0x123 PUSH4 0xace38f8c
0x128 EQ
0x129 PUSH2 0xb2f
0x12c JUMPI
---
0x123: V85 = 0xace38f8c
0x128: V86 = EQ 0xace38f8c V12
0x129: V87 = 0xb2f
0x12c: JUMPI 0xb2f V86
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x12d
[0x12d:0x137]
---
Predecessors: [0x122]
Successors: [0x138, 0xb54]
---
0x12d DUP1
0x12e PUSH4 0xaff29802
0x133 EQ
0x134 PUSH2 0xb54
0x137 JUMPI
---
0x12e: V88 = 0xaff29802
0x133: V89 = EQ 0xaff29802 V12
0x134: V90 = 0xb54
0x137: JUMPI 0xb54 V89
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x138
[0x138:0x142]
---
Predecessors: [0x12d]
Successors: [0x143, 0xb79]
---
0x138 DUP1
0x139 PUSH4 0xccb07cef
0x13e EQ
0x13f PUSH2 0xb79
0x142 JUMPI
---
0x139: V91 = 0xccb07cef
0x13e: V92 = EQ 0xccb07cef V12
0x13f: V93 = 0xb79
0x142: JUMPI 0xb79 V92
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x143
[0x143:0x14d]
---
Predecessors: [0x138]
Successors: [0x14e, 0xba0]
---
0x143 DUP1
0x144 PUSH4 0xd424f628
0x149 EQ
0x14a PUSH2 0xba0
0x14d JUMPI
---
0x144: V94 = 0xd424f628
0x149: V95 = EQ 0xd424f628 V12
0x14a: V96 = 0xba0
0x14d: JUMPI 0xba0 V95
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x14e
[0x14e:0x158]
---
Predecessors: [0x143]
Successors: [0x159, 0xbc7]
---
0x14e DUP1
0x14f PUSH4 0xdcd22c9b
0x154 EQ
0x155 PUSH2 0xbc7
0x158 JUMPI
---
0x14f: V97 = 0xdcd22c9b
0x154: V98 = EQ 0xdcd22c9b V12
0x155: V99 = 0xbc7
0x158: JUMPI 0xbc7 V98
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x159
[0x159:0x163]
---
Predecessors: [0x14e]
Successors: [0x164, 0xbdc]
---
0x159 DUP1
0x15a PUSH4 0xfd6b7ef8
0x15f EQ
0x160 PUSH2 0xbdc
0x163 JUMPI
---
0x15a: V100 = 0xfd6b7ef8
0x15f: V101 = EQ 0xfd6b7ef8 V12
0x160: V102 = 0xbdc
0x163: JUMPI 0xbdc V101
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x164
[0x164:0x164]
---
Predecessors: [0x0, 0x159]
Successors: [0x165]
---
0x164 JUMPDEST
---
0x164: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x165
[0x165:0x178]
---
Predecessors: [0x164]
Successors: [0x179, 0x17d]
---
0x165 JUMPDEST
0x166 PUSH1 0x14
0x168 SLOAD
0x169 PUSH1 0x0
0x16b SWAP1
0x16c PUSH2 0x100
0x16f SWAP1
0x170 DIV
0x171 PUSH1 0xff
0x173 AND
0x174 ISZERO
0x175 PUSH2 0x17d
0x178 JUMPI
---
0x165: JUMPDEST 
0x166: V103 = 0x14
0x168: V104 = S[0x14]
0x169: V105 = 0x0
0x16c: V106 = 0x100
0x170: V107 = DIV V104 0x100
0x171: V108 = 0xff
0x173: V109 = AND 0xff V107
0x174: V110 = ISZERO V109
0x175: V111 = 0x17d
0x178: JUMPI 0x17d V110
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x0]

================================

Block 0x179
[0x179:0x17c]
---
Predecessors: [0x165]
Successors: []
---
0x179 PUSH1 0x0
0x17b DUP1
0x17c REVERT
---
0x179: V112 = 0x0
0x17c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0x17d
[0x17d:0x1b1]
---
Predecessors: [0x165]
Successors: [0x1b2, 0x614]
---
0x17d JUMPDEST
0x17e POP
0x17f PUSH1 0x1
0x181 PUSH1 0xa0
0x183 PUSH1 0x2
0x185 EXP
0x186 SUB
0x187 CALLER
0x188 AND
0x189 PUSH1 0x0
0x18b SWAP1
0x18c DUP2
0x18d MSTORE
0x18e PUSH1 0x13
0x190 PUSH1 0x20
0x192 MSTORE
0x193 PUSH1 0x40
0x195 SWAP1
0x196 SHA3
0x197 DUP1
0x198 SLOAD
0x199 CALLVALUE
0x19a SWAP1
0x19b DUP2
0x19c ADD
0x19d SWAP1
0x19e SWAP2
0x19f SSTORE
0x1a0 PUSH1 0x8
0x1a2 DUP1
0x1a3 SLOAD
0x1a4 DUP3
0x1a5 ADD
0x1a6 SWAP1
0x1a7 SSTORE
0x1a8 PUSH1 0x1
0x1aa SLOAD
0x1ab TIMESTAMP
0x1ac LT
0x1ad ISZERO
0x1ae PUSH2 0x614
0x1b1 JUMPI
---
0x17d: JUMPDEST 
0x17f: V113 = 0x1
0x181: V114 = 0xa0
0x183: V115 = 0x2
0x185: V116 = EXP 0x2 0xa0
0x186: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x187: V118 = CALLER
0x188: V119 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x189: V120 = 0x0
0x18d: M[0x0] = V119
0x18e: V121 = 0x13
0x190: V122 = 0x20
0x192: M[0x20] = 0x13
0x193: V123 = 0x40
0x196: V124 = SHA3 0x0 0x40
0x198: V125 = S[V124]
0x199: V126 = CALLVALUE
0x19c: V127 = ADD V126 V125
0x19f: S[V124] = V127
0x1a0: V128 = 0x8
0x1a3: V129 = S[0x8]
0x1a5: V130 = ADD V126 V129
0x1a7: S[0x8] = V130
0x1a8: V131 = 0x1
0x1aa: V132 = S[0x1]
0x1ab: V133 = TIMESTAMP
0x1ac: V134 = LT V133 V132
0x1ad: V135 = ISZERO V134
0x1ae: V136 = 0x614
0x1b1: JUMPI 0x614 V135
---
Entry stack: [V12, 0x0]
Stack pops: 1
Stack additions: [V126]
Exit stack: [V12, V126]

================================

Block 0x1b2
[0x1b2:0x1c0]
---
Predecessors: [0x17d]
Successors: [0x1c1, 0x27a]
---
0x1b2 PUSH7 0x470de4df820000
0x1ba DUP2
0x1bb LT
0x1bc ISZERO
0x1bd PUSH2 0x27a
0x1c0 JUMPI
---
0x1b2: V137 = 0x470de4df820000
0x1bb: V138 = LT V126 0x470de4df820000
0x1bc: V139 = ISZERO V138
0x1bd: V140 = 0x27a
0x1c0: JUMPI 0x27a V139
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x1c1
[0x1c1:0x21a]
---
Predecessors: [0x1b2]
Successors: [0x21b, 0x21f]
---
0x1c1 PUSH1 0x12
0x1c3 SLOAD
0x1c4 PUSH1 0xb
0x1c6 SLOAD
0x1c7 PUSH1 0x1
0x1c9 PUSH1 0xa0
0x1cb PUSH1 0x2
0x1cd EXP
0x1ce SUB
0x1cf SWAP1
0x1d0 SWAP2
0x1d1 AND
0x1d2 SWAP1
0x1d3 PUSH4 0xa9059cbb
0x1d8 SWAP1
0x1d9 CALLER
0x1da SWAP1
0x1db DUP5
0x1dc MUL
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 PUSH1 0xe0
0x1e2 PUSH1 0x2
0x1e4 EXP
0x1e5 PUSH4 0xffffffff
0x1ea DUP6
0x1eb AND
0x1ec MUL
0x1ed DUP2
0x1ee MSTORE
0x1ef PUSH1 0x1
0x1f1 PUSH1 0xa0
0x1f3 PUSH1 0x2
0x1f5 EXP
0x1f6 SUB
0x1f7 SWAP1
0x1f8 SWAP3
0x1f9 AND
0x1fa PUSH1 0x4
0x1fc DUP4
0x1fd ADD
0x1fe MSTORE
0x1ff PUSH1 0x24
0x201 DUP3
0x202 ADD
0x203 MSTORE
0x204 PUSH1 0x44
0x206 ADD
0x207 PUSH1 0x0
0x209 PUSH1 0x40
0x20b MLOAD
0x20c DUP1
0x20d DUP4
0x20e SUB
0x20f DUP2
0x210 PUSH1 0x0
0x212 DUP8
0x213 DUP1
0x214 EXTCODESIZE
0x215 ISZERO
0x216 ISZERO
0x217 PUSH2 0x21f
0x21a JUMPI
---
0x1c1: V141 = 0x12
0x1c3: V142 = S[0x12]
0x1c4: V143 = 0xb
0x1c6: V144 = S[0xb]
0x1c7: V145 = 0x1
0x1c9: V146 = 0xa0
0x1cb: V147 = 0x2
0x1cd: V148 = EXP 0x2 0xa0
0x1ce: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d1: V150 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V151 = 0xa9059cbb
0x1d9: V152 = CALLER
0x1dc: V153 = MUL V126 V144
0x1dd: V154 = 0x40
0x1df: V155 = M[0x40]
0x1e0: V156 = 0xe0
0x1e2: V157 = 0x2
0x1e4: V158 = EXP 0x2 0xe0
0x1e5: V159 = 0xffffffff
0x1eb: V160 = AND 0xa9059cbb 0xffffffff
0x1ec: V161 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x1ee: M[V155] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1ef: V162 = 0x1
0x1f1: V163 = 0xa0
0x1f3: V164 = 0x2
0x1f5: V165 = EXP 0x2 0xa0
0x1f6: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f9: V167 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V168 = 0x4
0x1fd: V169 = ADD V155 0x4
0x1fe: M[V169] = V167
0x1ff: V170 = 0x24
0x202: V171 = ADD V155 0x24
0x203: M[V171] = V153
0x204: V172 = 0x44
0x206: V173 = ADD 0x44 V155
0x207: V174 = 0x0
0x209: V175 = 0x40
0x20b: V176 = M[0x40]
0x20e: V177 = SUB V173 V176
0x210: V178 = 0x0
0x214: V179 = EXTCODESIZE V150
0x215: V180 = ISZERO V179
0x216: V181 = ISZERO V180
0x217: V182 = 0x21f
0x21a: JUMPI 0x21f V181
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V150, 0xa9059cbb, V173, 0x0, V176, V177, V176, 0x0, V150]
Exit stack: [V12, V126, V150, 0xa9059cbb, V173, 0x0, V176, V177, V176, 0x0, V150]

================================

Block 0x21b
[0x21b:0x21e]
---
Predecessors: [0x1c1]
Successors: []
---
0x21b PUSH1 0x0
0x21d DUP1
0x21e REVERT
---
0x21b: V183 = 0x0
0x21e: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V150, 0xa9059cbb, V173, 0x0, V176, V177, V176, 0x0, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V150, 0xa9059cbb, V173, 0x0, V176, V177, V176, 0x0, V150]

================================

Block 0x21f
[0x21f:0x22b]
---
Predecessors: [0x1c1]
Successors: [0x22c, 0x230]
---
0x21f JUMPDEST
0x220 PUSH2 0x2c6
0x223 GAS
0x224 SUB
0x225 CALL
0x226 ISZERO
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x21f: JUMPDEST 
0x220: V184 = 0x2c6
0x223: V185 = GAS
0x224: V186 = SUB V185 0x2c6
0x225: V187 = CALL V186 V150 0x0 V176 V177 V176 0x0
0x226: V188 = ISZERO V187
0x227: V189 = ISZERO V188
0x228: V190 = 0x230
0x22b: JUMPI 0x230 V189
---
Entry stack: [V12, V126, V150, 0xa9059cbb, V173, 0x0, V176, V177, V176, 0x0, V150]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V126, V150, 0xa9059cbb, V173]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x21f]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V191 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V150, 0xa9059cbb, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V150, 0xa9059cbb, V173]

================================

Block 0x230
[0x230:0x279]
---
Predecessors: [0x21f]
Successors: [0x60f]
---
0x230 JUMPDEST
0x231 POP
0x232 POP
0x233 POP
0x234 PUSH1 0x0
0x236 DUP1
0x237 MLOAD
0x238 PUSH1 0x20
0x23a PUSH2 0xfc5
0x23d DUP4
0x23e CODECOPY
0x23f DUP2
0x240 MLOAD
0x241 SWAP2
0x242 MSTORE
0x243 CALLER
0x244 DUP3
0x245 PUSH1 0x1
0x247 PUSH1 0x40
0x249 MLOAD
0x24a PUSH1 0x1
0x24c PUSH1 0xa0
0x24e PUSH1 0x2
0x250 EXP
0x251 SUB
0x252 SWAP1
0x253 SWAP4
0x254 AND
0x255 DUP4
0x256 MSTORE
0x257 PUSH1 0x20
0x259 DUP4
0x25a ADD
0x25b SWAP2
0x25c SWAP1
0x25d SWAP2
0x25e MSTORE
0x25f ISZERO
0x260 ISZERO
0x261 PUSH1 0x40
0x263 DUP1
0x264 DUP4
0x265 ADD
0x266 SWAP2
0x267 SWAP1
0x268 SWAP2
0x269 MSTORE
0x26a PUSH1 0x60
0x26c SWAP1
0x26d SWAP2
0x26e ADD
0x26f SWAP1
0x270 MLOAD
0x271 DUP1
0x272 SWAP2
0x273 SUB
0x274 SWAP1
0x275 LOG1
0x276 PUSH2 0x60f
0x279 JUMP
---
0x230: JUMPDEST 
0x234: V192 = 0x0
0x237: V193 = M[0x0]
0x238: V194 = 0x20
0x23a: V195 = 0xfc5
0x23e: CODECOPY 0x0 0xfc5 0x20
0x240: V196 = M[0x0]
0x242: M[0x0] = V193
0x243: V197 = CALLER
0x245: V198 = 0x1
0x247: V199 = 0x40
0x249: V200 = M[0x40]
0x24a: V201 = 0x1
0x24c: V202 = 0xa0
0x24e: V203 = 0x2
0x250: V204 = EXP 0x2 0xa0
0x251: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x254: V206 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0x256: M[V200] = V206
0x257: V207 = 0x20
0x25a: V208 = ADD V200 0x20
0x25e: M[V208] = V126
0x25f: V209 = ISZERO 0x1
0x260: V210 = ISZERO 0x0
0x261: V211 = 0x40
0x265: V212 = ADD V200 0x40
0x269: M[V212] = 0x1
0x26a: V213 = 0x60
0x26e: V214 = ADD V200 0x60
0x270: V215 = M[0x40]
0x273: V216 = SUB V214 V215
0x275: LOG V215 V216 V196
0x276: V217 = 0x60f
0x279: JUMP 0x60f
---
Entry stack: [V12, V126, V150, 0xa9059cbb, V173]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V126]

================================

Block 0x27a
[0x27a:0x28a]
---
Predecessors: [0x1b2]
Successors: [0x28b, 0x307]
---
0x27a JUMPDEST
0x27b PUSH8 0x3782dace9d90000
0x284 DUP2
0x285 LT
0x286 ISZERO
0x287 PUSH2 0x307
0x28a JUMPI
---
0x27a: JUMPDEST 
0x27b: V218 = 0x3782dace9d90000
0x285: V219 = LT V126 0x3782dace9d90000
0x286: V220 = ISZERO V219
0x287: V221 = 0x307
0x28a: JUMPI 0x307 V220
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x28b
[0x28b:0x2a9]
---
Predecessors: [0x27a]
Successors: [0x2aa]
---
0x28b PUSH1 0x12
0x28d SLOAD
0x28e PUSH1 0xc
0x290 SLOAD
0x291 PUSH1 0x1
0x293 PUSH1 0xa0
0x295 PUSH1 0x2
0x297 EXP
0x298 SUB
0x299 SWAP1
0x29a SWAP2
0x29b AND
0x29c SWAP1
0x29d PUSH4 0xa9059cbb
0x2a2 SWAP1
0x2a3 CALLER
0x2a4 SWAP1
0x2a5 PUSH1 0xa
0x2a7 SWAP1
0x2a8 DUP6
0x2a9 MUL
---
0x28b: V222 = 0x12
0x28d: V223 = S[0x12]
0x28e: V224 = 0xc
0x290: V225 = S[0xc]
0x291: V226 = 0x1
0x293: V227 = 0xa0
0x295: V228 = 0x2
0x297: V229 = EXP 0x2 0xa0
0x298: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29b: V231 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V232 = 0xa9059cbb
0x2a3: V233 = CALLER
0x2a5: V234 = 0xa
0x2a9: V235 = MUL V126 V225
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V231, 0xa9059cbb, V233, 0xa, V235]
Exit stack: [V12, V126, V231, 0xa9059cbb, V233, 0xa, V235]

================================

Block 0x2aa
[0x2aa:0x2e9]
---
Predecessors: [0x28b, 0x319, 0x3ab, 0x43d, 0x4cf]
Successors: [0x2ea, 0x2ee]
---
0x2aa JUMPDEST
0x2ab DIV
0x2ac PUSH1 0x40
0x2ae MLOAD
0x2af PUSH1 0xe0
0x2b1 PUSH1 0x2
0x2b3 EXP
0x2b4 PUSH4 0xffffffff
0x2b9 DUP6
0x2ba AND
0x2bb MUL
0x2bc DUP2
0x2bd MSTORE
0x2be PUSH1 0x1
0x2c0 PUSH1 0xa0
0x2c2 PUSH1 0x2
0x2c4 EXP
0x2c5 SUB
0x2c6 SWAP1
0x2c7 SWAP3
0x2c8 AND
0x2c9 PUSH1 0x4
0x2cb DUP4
0x2cc ADD
0x2cd MSTORE
0x2ce PUSH1 0x24
0x2d0 DUP3
0x2d1 ADD
0x2d2 MSTORE
0x2d3 PUSH1 0x44
0x2d5 ADD
0x2d6 PUSH1 0x0
0x2d8 PUSH1 0x40
0x2da MLOAD
0x2db DUP1
0x2dc DUP4
0x2dd SUB
0x2de DUP2
0x2df PUSH1 0x0
0x2e1 DUP8
0x2e2 DUP1
0x2e3 EXTCODESIZE
0x2e4 ISZERO
0x2e5 ISZERO
0x2e6 PUSH2 0x2ee
0x2e9 JUMPI
---
0x2aa: JUMPDEST 
0x2ab: V236 = DIV S0 0xa
0x2ac: V237 = 0x40
0x2ae: V238 = M[0x40]
0x2af: V239 = 0xe0
0x2b1: V240 = 0x2
0x2b3: V241 = EXP 0x2 0xe0
0x2b4: V242 = 0xffffffff
0x2ba: V243 = AND 0xa9059cbb 0xffffffff
0x2bb: V244 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x2bd: M[V238] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2be: V245 = 0x1
0x2c0: V246 = 0xa0
0x2c2: V247 = 0x2
0x2c4: V248 = EXP 0x2 0xa0
0x2c5: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c8: V250 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V251 = 0x4
0x2cc: V252 = ADD V238 0x4
0x2cd: M[V252] = V250
0x2ce: V253 = 0x24
0x2d1: V254 = ADD V238 0x24
0x2d2: M[V254] = V236
0x2d3: V255 = 0x44
0x2d5: V256 = ADD 0x44 V238
0x2d6: V257 = 0x0
0x2d8: V258 = 0x40
0x2da: V259 = M[0x40]
0x2dd: V260 = SUB V256 V259
0x2df: V261 = 0x0
0x2e3: V262 = EXTCODESIZE S4
0x2e4: V263 = ISZERO V262
0x2e5: V264 = ISZERO V263
0x2e6: V265 = 0x2ee
0x2e9: JUMPI 0x2ee V264
---
Entry stack: [V12, V126, S4, 0xa9059cbb, S2, 0xa, S0]
Stack pops: 5
Stack additions: [S4, S3, V256, 0x0, V259, V260, V259, 0x0, S4]
Exit stack: [V12, V126, S4, 0xa9059cbb, V256, 0x0, V259, V260, V259, 0x0, S4]

================================

Block 0x2ea
[0x2ea:0x2ed]
---
Predecessors: [0x2aa]
Successors: []
---
0x2ea PUSH1 0x0
0x2ec DUP1
0x2ed REVERT
---
0x2ea: V266 = 0x0
0x2ed: REVERT 0x0 0x0
---
Entry stack: [V12, V126, S8, 0xa9059cbb, V256, 0x0, V259, V260, V259, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, S8, 0xa9059cbb, V256, 0x0, V259, V260, V259, 0x0, S0]

================================

Block 0x2ee
[0x2ee:0x2fa]
---
Predecessors: [0x2aa, 0x33c, 0x3ce, 0x460, 0x4f2]
Successors: [0x2fb, 0x2ff]
---
0x2ee JUMPDEST
0x2ef PUSH2 0x2c6
0x2f2 GAS
0x2f3 SUB
0x2f4 CALL
0x2f5 ISZERO
0x2f6 ISZERO
0x2f7 PUSH2 0x2ff
0x2fa JUMPI
---
0x2ee: JUMPDEST 
0x2ef: V267 = 0x2c6
0x2f2: V268 = GAS
0x2f3: V269 = SUB V268 0x2c6
0x2f4: V270 = CALL V269 S0 0x0 S2 S3 S4 0x0
0x2f5: V271 = ISZERO V270
0x2f6: V272 = ISZERO V271
0x2f7: V273 = 0x2ff
0x2fa: JUMPI 0x2ff V272
---
Entry stack: [V12, V126, S8, S7, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V126, S8, S7, S6]

================================

Block 0x2fb
[0x2fb:0x2fe]
---
Predecessors: [0x2ee]
Successors: []
---
0x2fb PUSH1 0x0
0x2fd DUP1
0x2fe REVERT
---
0x2fb: V274 = 0x0
0x2fe: REVERT 0x0 0x0
---
Entry stack: [V12, V126, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, S2, S1, S0]

================================

Block 0x2ff
[0x2ff:0x306]
---
Predecessors: [0x2ee, 0x37c, 0x40e, 0x4a0, 0x532]
Successors: [0x5c8]
---
0x2ff JUMPDEST
0x300 POP
0x301 POP
0x302 POP
0x303 PUSH2 0x5c8
0x306 JUMP
---
0x2ff: JUMPDEST 
0x303: V275 = 0x5c8
0x306: JUMP 0x5c8
---
Entry stack: [V12, V126, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x307
[0x307:0x318]
---
Predecessors: [0x27a]
Successors: [0x319, 0x399]
---
0x307 JUMPDEST
0x308 PUSH9 0x1a055690d9db80000
0x312 DUP2
0x313 LT
0x314 ISZERO
0x315 PUSH2 0x399
0x318 JUMPI
---
0x307: JUMPDEST 
0x308: V276 = 0x1a055690d9db80000
0x313: V277 = LT V126 0x1a055690d9db80000
0x314: V278 = ISZERO V277
0x315: V279 = 0x399
0x318: JUMPI 0x399 V278
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x319
[0x319:0x33b]
---
Predecessors: [0x307]
Successors: [0x2aa]
---
0x319 PUSH1 0x12
0x31b SLOAD
0x31c PUSH1 0xd
0x31e SLOAD
0x31f PUSH1 0x1
0x321 PUSH1 0xa0
0x323 PUSH1 0x2
0x325 EXP
0x326 SUB
0x327 SWAP1
0x328 SWAP2
0x329 AND
0x32a SWAP1
0x32b PUSH4 0xa9059cbb
0x330 SWAP1
0x331 CALLER
0x332 SWAP1
0x333 PUSH1 0xa
0x335 SWAP1
0x336 DUP6
0x337 MUL
0x338 PUSH2 0x2aa
0x33b JUMP
---
0x319: V280 = 0x12
0x31b: V281 = S[0x12]
0x31c: V282 = 0xd
0x31e: V283 = S[0xd]
0x31f: V284 = 0x1
0x321: V285 = 0xa0
0x323: V286 = 0x2
0x325: V287 = EXP 0x2 0xa0
0x326: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x329: V289 = AND V281 0xffffffffffffffffffffffffffffffffffffffff
0x32b: V290 = 0xa9059cbb
0x331: V291 = CALLER
0x333: V292 = 0xa
0x337: V293 = MUL V126 V283
0x338: V294 = 0x2aa
0x33b: JUMP 0x2aa
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V289, 0xa9059cbb, V291, 0xa, V293]
Exit stack: [V12, V126, V289, 0xa9059cbb, V291, 0xa, V293]

================================

Block 0x33c
[0x33c:0x37b]
---
Predecessors: []
Successors: [0x2ee, 0x37c]
---
0x33c JUMPDEST
0x33d DIV
0x33e PUSH1 0x40
0x340 MLOAD
0x341 PUSH1 0xe0
0x343 PUSH1 0x2
0x345 EXP
0x346 PUSH4 0xffffffff
0x34b DUP6
0x34c AND
0x34d MUL
0x34e DUP2
0x34f MSTORE
0x350 PUSH1 0x1
0x352 PUSH1 0xa0
0x354 PUSH1 0x2
0x356 EXP
0x357 SUB
0x358 SWAP1
0x359 SWAP3
0x35a AND
0x35b PUSH1 0x4
0x35d DUP4
0x35e ADD
0x35f MSTORE
0x360 PUSH1 0x24
0x362 DUP3
0x363 ADD
0x364 MSTORE
0x365 PUSH1 0x44
0x367 ADD
0x368 PUSH1 0x0
0x36a PUSH1 0x40
0x36c MLOAD
0x36d DUP1
0x36e DUP4
0x36f SUB
0x370 DUP2
0x371 PUSH1 0x0
0x373 DUP8
0x374 DUP1
0x375 EXTCODESIZE
0x376 ISZERO
0x377 ISZERO
0x378 PUSH2 0x2ee
0x37b JUMPI
---
0x33c: JUMPDEST 
0x33d: V295 = DIV S0 S1
0x33e: V296 = 0x40
0x340: V297 = M[0x40]
0x341: V298 = 0xe0
0x343: V299 = 0x2
0x345: V300 = EXP 0x2 0xe0
0x346: V301 = 0xffffffff
0x34c: V302 = AND S3 0xffffffff
0x34d: V303 = MUL V302 0x100000000000000000000000000000000000000000000000000000000
0x34f: M[V297] = V303
0x350: V304 = 0x1
0x352: V305 = 0xa0
0x354: V306 = 0x2
0x356: V307 = EXP 0x2 0xa0
0x357: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35a: V309 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x35b: V310 = 0x4
0x35e: V311 = ADD V297 0x4
0x35f: M[V311] = V309
0x360: V312 = 0x24
0x363: V313 = ADD V297 0x24
0x364: M[V313] = V295
0x365: V314 = 0x44
0x367: V315 = ADD 0x44 V297
0x368: V316 = 0x0
0x36a: V317 = 0x40
0x36c: V318 = M[0x40]
0x36f: V319 = SUB V315 V318
0x371: V320 = 0x0
0x375: V321 = EXTCODESIZE S4
0x376: V322 = ISZERO V321
0x377: V323 = ISZERO V322
0x378: V324 = 0x2ee
0x37b: JUMPI 0x2ee V323
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V315, 0x0, V318, V319, V318, 0x0, S4]
Exit stack: [S4, S3, V315, 0x0, V318, V319, V318, 0x0, S4]

================================

Block 0x37c
[0x37c:0x38c]
---
Predecessors: [0x33c]
Successors: [0x2ff, 0x38d]
---
0x37c PUSH1 0x0
0x37e DUP1
0x37f REVERT
0x380 JUMPDEST
0x381 PUSH2 0x2c6
0x384 GAS
0x385 SUB
0x386 CALL
0x387 ISZERO
0x388 ISZERO
0x389 PUSH2 0x2ff
0x38c JUMPI
---
0x37c: V325 = 0x0
0x37f: REVERT 0x0 0x0
0x380: JUMPDEST 
0x381: V326 = 0x2c6
0x384: V327 = GAS
0x385: V328 = SUB V327 0x2c6
0x386: V329 = CALL V328 S0 S1 S2 S3 S4 S5
0x387: V330 = ISZERO V329
0x388: V331 = ISZERO V330
0x389: V332 = 0x2ff
0x38c: JUMPI 0x2ff V331
---
Entry stack: [S8, S7, V315, 0x0, V318, V319, V318, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x38d
[0x38d:0x398]
---
Predecessors: [0x37c]
Successors: [0x5c8]
---
0x38d PUSH1 0x0
0x38f DUP1
0x390 REVERT
0x391 JUMPDEST
0x392 POP
0x393 POP
0x394 POP
0x395 PUSH2 0x5c8
0x398 JUMP
---
0x38d: V333 = 0x0
0x390: REVERT 0x0 0x0
0x391: JUMPDEST 
0x395: V334 = 0x5c8
0x398: JUMP 0x5c8
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x399
[0x399:0x3aa]
---
Predecessors: [0x307]
Successors: [0x3ab, 0x42b]
---
0x399 JUMPDEST
0x39a PUSH9 0x2b5e3af16b1880000
0x3a4 DUP2
0x3a5 LT
0x3a6 ISZERO
0x3a7 PUSH2 0x42b
0x3aa JUMPI
---
0x399: JUMPDEST 
0x39a: V335 = 0x2b5e3af16b1880000
0x3a5: V336 = LT V126 0x2b5e3af16b1880000
0x3a6: V337 = ISZERO V336
0x3a7: V338 = 0x42b
0x3aa: JUMPI 0x42b V337
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x3ab
[0x3ab:0x3cd]
---
Predecessors: [0x399]
Successors: [0x2aa]
---
0x3ab PUSH1 0x12
0x3ad SLOAD
0x3ae PUSH1 0xe
0x3b0 SLOAD
0x3b1 PUSH1 0x1
0x3b3 PUSH1 0xa0
0x3b5 PUSH1 0x2
0x3b7 EXP
0x3b8 SUB
0x3b9 SWAP1
0x3ba SWAP2
0x3bb AND
0x3bc SWAP1
0x3bd PUSH4 0xa9059cbb
0x3c2 SWAP1
0x3c3 CALLER
0x3c4 SWAP1
0x3c5 PUSH1 0xa
0x3c7 SWAP1
0x3c8 DUP6
0x3c9 MUL
0x3ca PUSH2 0x2aa
0x3cd JUMP
---
0x3ab: V339 = 0x12
0x3ad: V340 = S[0x12]
0x3ae: V341 = 0xe
0x3b0: V342 = S[0xe]
0x3b1: V343 = 0x1
0x3b3: V344 = 0xa0
0x3b5: V345 = 0x2
0x3b7: V346 = EXP 0x2 0xa0
0x3b8: V347 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bb: V348 = AND V340 0xffffffffffffffffffffffffffffffffffffffff
0x3bd: V349 = 0xa9059cbb
0x3c3: V350 = CALLER
0x3c5: V351 = 0xa
0x3c9: V352 = MUL V126 V342
0x3ca: V353 = 0x2aa
0x3cd: JUMP 0x2aa
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V348, 0xa9059cbb, V350, 0xa, V352]
Exit stack: [V12, V126, V348, 0xa9059cbb, V350, 0xa, V352]

================================

Block 0x3ce
[0x3ce:0x40d]
---
Predecessors: []
Successors: [0x2ee, 0x40e]
---
0x3ce JUMPDEST
0x3cf DIV
0x3d0 PUSH1 0x40
0x3d2 MLOAD
0x3d3 PUSH1 0xe0
0x3d5 PUSH1 0x2
0x3d7 EXP
0x3d8 PUSH4 0xffffffff
0x3dd DUP6
0x3de AND
0x3df MUL
0x3e0 DUP2
0x3e1 MSTORE
0x3e2 PUSH1 0x1
0x3e4 PUSH1 0xa0
0x3e6 PUSH1 0x2
0x3e8 EXP
0x3e9 SUB
0x3ea SWAP1
0x3eb SWAP3
0x3ec AND
0x3ed PUSH1 0x4
0x3ef DUP4
0x3f0 ADD
0x3f1 MSTORE
0x3f2 PUSH1 0x24
0x3f4 DUP3
0x3f5 ADD
0x3f6 MSTORE
0x3f7 PUSH1 0x44
0x3f9 ADD
0x3fa PUSH1 0x0
0x3fc PUSH1 0x40
0x3fe MLOAD
0x3ff DUP1
0x400 DUP4
0x401 SUB
0x402 DUP2
0x403 PUSH1 0x0
0x405 DUP8
0x406 DUP1
0x407 EXTCODESIZE
0x408 ISZERO
0x409 ISZERO
0x40a PUSH2 0x2ee
0x40d JUMPI
---
0x3ce: JUMPDEST 
0x3cf: V354 = DIV S0 S1
0x3d0: V355 = 0x40
0x3d2: V356 = M[0x40]
0x3d3: V357 = 0xe0
0x3d5: V358 = 0x2
0x3d7: V359 = EXP 0x2 0xe0
0x3d8: V360 = 0xffffffff
0x3de: V361 = AND S3 0xffffffff
0x3df: V362 = MUL V361 0x100000000000000000000000000000000000000000000000000000000
0x3e1: M[V356] = V362
0x3e2: V363 = 0x1
0x3e4: V364 = 0xa0
0x3e6: V365 = 0x2
0x3e8: V366 = EXP 0x2 0xa0
0x3e9: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ec: V368 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x3ed: V369 = 0x4
0x3f0: V370 = ADD V356 0x4
0x3f1: M[V370] = V368
0x3f2: V371 = 0x24
0x3f5: V372 = ADD V356 0x24
0x3f6: M[V372] = V354
0x3f7: V373 = 0x44
0x3f9: V374 = ADD 0x44 V356
0x3fa: V375 = 0x0
0x3fc: V376 = 0x40
0x3fe: V377 = M[0x40]
0x401: V378 = SUB V374 V377
0x403: V379 = 0x0
0x407: V380 = EXTCODESIZE S4
0x408: V381 = ISZERO V380
0x409: V382 = ISZERO V381
0x40a: V383 = 0x2ee
0x40d: JUMPI 0x2ee V382
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V374, 0x0, V377, V378, V377, 0x0, S4]
Exit stack: [S4, S3, V374, 0x0, V377, V378, V377, 0x0, S4]

================================

Block 0x40e
[0x40e:0x41e]
---
Predecessors: [0x3ce]
Successors: [0x2ff, 0x41f]
---
0x40e PUSH1 0x0
0x410 DUP1
0x411 REVERT
0x412 JUMPDEST
0x413 PUSH2 0x2c6
0x416 GAS
0x417 SUB
0x418 CALL
0x419 ISZERO
0x41a ISZERO
0x41b PUSH2 0x2ff
0x41e JUMPI
---
0x40e: V384 = 0x0
0x411: REVERT 0x0 0x0
0x412: JUMPDEST 
0x413: V385 = 0x2c6
0x416: V386 = GAS
0x417: V387 = SUB V386 0x2c6
0x418: V388 = CALL V387 S0 S1 S2 S3 S4 S5
0x419: V389 = ISZERO V388
0x41a: V390 = ISZERO V389
0x41b: V391 = 0x2ff
0x41e: JUMPI 0x2ff V390
---
Entry stack: [S8, S7, V374, 0x0, V377, V378, V377, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x41f
[0x41f:0x42a]
---
Predecessors: [0x40e]
Successors: [0x5c8]
---
0x41f PUSH1 0x0
0x421 DUP1
0x422 REVERT
0x423 JUMPDEST
0x424 POP
0x425 POP
0x426 POP
0x427 PUSH2 0x5c8
0x42a JUMP
---
0x41f: V392 = 0x0
0x422: REVERT 0x0 0x0
0x423: JUMPDEST 
0x427: V393 = 0x5c8
0x42a: JUMP 0x5c8
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x42b
[0x42b:0x43c]
---
Predecessors: [0x399]
Successors: [0x43d, 0x4bd]
---
0x42b JUMPDEST
0x42c PUSH9 0x56bc75e2d63100000
0x436 DUP2
0x437 LT
0x438 ISZERO
0x439 PUSH2 0x4bd
0x43c JUMPI
---
0x42b: JUMPDEST 
0x42c: V394 = 0x56bc75e2d63100000
0x437: V395 = LT V126 0x56bc75e2d63100000
0x438: V396 = ISZERO V395
0x439: V397 = 0x4bd
0x43c: JUMPI 0x4bd V396
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x43d
[0x43d:0x45f]
---
Predecessors: [0x42b]
Successors: [0x2aa]
---
0x43d PUSH1 0x12
0x43f SLOAD
0x440 PUSH1 0xf
0x442 SLOAD
0x443 PUSH1 0x1
0x445 PUSH1 0xa0
0x447 PUSH1 0x2
0x449 EXP
0x44a SUB
0x44b SWAP1
0x44c SWAP2
0x44d AND
0x44e SWAP1
0x44f PUSH4 0xa9059cbb
0x454 SWAP1
0x455 CALLER
0x456 SWAP1
0x457 PUSH1 0xa
0x459 SWAP1
0x45a DUP6
0x45b MUL
0x45c PUSH2 0x2aa
0x45f JUMP
---
0x43d: V398 = 0x12
0x43f: V399 = S[0x12]
0x440: V400 = 0xf
0x442: V401 = S[0xf]
0x443: V402 = 0x1
0x445: V403 = 0xa0
0x447: V404 = 0x2
0x449: V405 = EXP 0x2 0xa0
0x44a: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44d: V407 = AND V399 0xffffffffffffffffffffffffffffffffffffffff
0x44f: V408 = 0xa9059cbb
0x455: V409 = CALLER
0x457: V410 = 0xa
0x45b: V411 = MUL V126 V401
0x45c: V412 = 0x2aa
0x45f: JUMP 0x2aa
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V407, 0xa9059cbb, V409, 0xa, V411]
Exit stack: [V12, V126, V407, 0xa9059cbb, V409, 0xa, V411]

================================

Block 0x460
[0x460:0x49f]
---
Predecessors: []
Successors: [0x2ee, 0x4a0]
---
0x460 JUMPDEST
0x461 DIV
0x462 PUSH1 0x40
0x464 MLOAD
0x465 PUSH1 0xe0
0x467 PUSH1 0x2
0x469 EXP
0x46a PUSH4 0xffffffff
0x46f DUP6
0x470 AND
0x471 MUL
0x472 DUP2
0x473 MSTORE
0x474 PUSH1 0x1
0x476 PUSH1 0xa0
0x478 PUSH1 0x2
0x47a EXP
0x47b SUB
0x47c SWAP1
0x47d SWAP3
0x47e AND
0x47f PUSH1 0x4
0x481 DUP4
0x482 ADD
0x483 MSTORE
0x484 PUSH1 0x24
0x486 DUP3
0x487 ADD
0x488 MSTORE
0x489 PUSH1 0x44
0x48b ADD
0x48c PUSH1 0x0
0x48e PUSH1 0x40
0x490 MLOAD
0x491 DUP1
0x492 DUP4
0x493 SUB
0x494 DUP2
0x495 PUSH1 0x0
0x497 DUP8
0x498 DUP1
0x499 EXTCODESIZE
0x49a ISZERO
0x49b ISZERO
0x49c PUSH2 0x2ee
0x49f JUMPI
---
0x460: JUMPDEST 
0x461: V413 = DIV S0 S1
0x462: V414 = 0x40
0x464: V415 = M[0x40]
0x465: V416 = 0xe0
0x467: V417 = 0x2
0x469: V418 = EXP 0x2 0xe0
0x46a: V419 = 0xffffffff
0x470: V420 = AND S3 0xffffffff
0x471: V421 = MUL V420 0x100000000000000000000000000000000000000000000000000000000
0x473: M[V415] = V421
0x474: V422 = 0x1
0x476: V423 = 0xa0
0x478: V424 = 0x2
0x47a: V425 = EXP 0x2 0xa0
0x47b: V426 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47e: V427 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x47f: V428 = 0x4
0x482: V429 = ADD V415 0x4
0x483: M[V429] = V427
0x484: V430 = 0x24
0x487: V431 = ADD V415 0x24
0x488: M[V431] = V413
0x489: V432 = 0x44
0x48b: V433 = ADD 0x44 V415
0x48c: V434 = 0x0
0x48e: V435 = 0x40
0x490: V436 = M[0x40]
0x493: V437 = SUB V433 V436
0x495: V438 = 0x0
0x499: V439 = EXTCODESIZE S4
0x49a: V440 = ISZERO V439
0x49b: V441 = ISZERO V440
0x49c: V442 = 0x2ee
0x49f: JUMPI 0x2ee V441
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V433, 0x0, V436, V437, V436, 0x0, S4]
Exit stack: [S4, S3, V433, 0x0, V436, V437, V436, 0x0, S4]

================================

Block 0x4a0
[0x4a0:0x4b0]
---
Predecessors: [0x460]
Successors: [0x2ff, 0x4b1]
---
0x4a0 PUSH1 0x0
0x4a2 DUP1
0x4a3 REVERT
0x4a4 JUMPDEST
0x4a5 PUSH2 0x2c6
0x4a8 GAS
0x4a9 SUB
0x4aa CALL
0x4ab ISZERO
0x4ac ISZERO
0x4ad PUSH2 0x2ff
0x4b0 JUMPI
---
0x4a0: V443 = 0x0
0x4a3: REVERT 0x0 0x0
0x4a4: JUMPDEST 
0x4a5: V444 = 0x2c6
0x4a8: V445 = GAS
0x4a9: V446 = SUB V445 0x2c6
0x4aa: V447 = CALL V446 S0 S1 S2 S3 S4 S5
0x4ab: V448 = ISZERO V447
0x4ac: V449 = ISZERO V448
0x4ad: V450 = 0x2ff
0x4b0: JUMPI 0x2ff V449
---
Entry stack: [S8, S7, V433, 0x0, V436, V437, V436, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4b1
[0x4b1:0x4bc]
---
Predecessors: [0x4a0]
Successors: [0x5c8]
---
0x4b1 PUSH1 0x0
0x4b3 DUP1
0x4b4 REVERT
0x4b5 JUMPDEST
0x4b6 POP
0x4b7 POP
0x4b8 POP
0x4b9 PUSH2 0x5c8
0x4bc JUMP
---
0x4b1: V451 = 0x0
0x4b4: REVERT 0x0 0x0
0x4b5: JUMPDEST 
0x4b9: V452 = 0x5c8
0x4bc: JUMP 0x5c8
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4bd
[0x4bd:0x4ce]
---
Predecessors: [0x42b]
Successors: [0x4cf, 0x54f]
---
0x4bd JUMPDEST
0x4be PUSH9 0x821ab0d4414980000
0x4c8 DUP2
0x4c9 LT
0x4ca ISZERO
0x4cb PUSH2 0x54f
0x4ce JUMPI
---
0x4bd: JUMPDEST 
0x4be: V453 = 0x821ab0d4414980000
0x4c9: V454 = LT V126 0x821ab0d4414980000
0x4ca: V455 = ISZERO V454
0x4cb: V456 = 0x54f
0x4ce: JUMPI 0x54f V455
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x4cf
[0x4cf:0x4f1]
---
Predecessors: [0x4bd]
Successors: [0x2aa]
---
0x4cf PUSH1 0x12
0x4d1 SLOAD
0x4d2 PUSH1 0x10
0x4d4 SLOAD
0x4d5 PUSH1 0x1
0x4d7 PUSH1 0xa0
0x4d9 PUSH1 0x2
0x4db EXP
0x4dc SUB
0x4dd SWAP1
0x4de SWAP2
0x4df AND
0x4e0 SWAP1
0x4e1 PUSH4 0xa9059cbb
0x4e6 SWAP1
0x4e7 CALLER
0x4e8 SWAP1
0x4e9 PUSH1 0xa
0x4eb SWAP1
0x4ec DUP6
0x4ed MUL
0x4ee PUSH2 0x2aa
0x4f1 JUMP
---
0x4cf: V457 = 0x12
0x4d1: V458 = S[0x12]
0x4d2: V459 = 0x10
0x4d4: V460 = S[0x10]
0x4d5: V461 = 0x1
0x4d7: V462 = 0xa0
0x4d9: V463 = 0x2
0x4db: V464 = EXP 0x2 0xa0
0x4dc: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4df: V466 = AND V458 0xffffffffffffffffffffffffffffffffffffffff
0x4e1: V467 = 0xa9059cbb
0x4e7: V468 = CALLER
0x4e9: V469 = 0xa
0x4ed: V470 = MUL V126 V460
0x4ee: V471 = 0x2aa
0x4f1: JUMP 0x2aa
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V466, 0xa9059cbb, V468, 0xa, V470]
Exit stack: [V12, V126, V466, 0xa9059cbb, V468, 0xa, V470]

================================

Block 0x4f2
[0x4f2:0x531]
---
Predecessors: []
Successors: [0x2ee, 0x532]
---
0x4f2 JUMPDEST
0x4f3 DIV
0x4f4 PUSH1 0x40
0x4f6 MLOAD
0x4f7 PUSH1 0xe0
0x4f9 PUSH1 0x2
0x4fb EXP
0x4fc PUSH4 0xffffffff
0x501 DUP6
0x502 AND
0x503 MUL
0x504 DUP2
0x505 MSTORE
0x506 PUSH1 0x1
0x508 PUSH1 0xa0
0x50a PUSH1 0x2
0x50c EXP
0x50d SUB
0x50e SWAP1
0x50f SWAP3
0x510 AND
0x511 PUSH1 0x4
0x513 DUP4
0x514 ADD
0x515 MSTORE
0x516 PUSH1 0x24
0x518 DUP3
0x519 ADD
0x51a MSTORE
0x51b PUSH1 0x44
0x51d ADD
0x51e PUSH1 0x0
0x520 PUSH1 0x40
0x522 MLOAD
0x523 DUP1
0x524 DUP4
0x525 SUB
0x526 DUP2
0x527 PUSH1 0x0
0x529 DUP8
0x52a DUP1
0x52b EXTCODESIZE
0x52c ISZERO
0x52d ISZERO
0x52e PUSH2 0x2ee
0x531 JUMPI
---
0x4f2: JUMPDEST 
0x4f3: V472 = DIV S0 S1
0x4f4: V473 = 0x40
0x4f6: V474 = M[0x40]
0x4f7: V475 = 0xe0
0x4f9: V476 = 0x2
0x4fb: V477 = EXP 0x2 0xe0
0x4fc: V478 = 0xffffffff
0x502: V479 = AND S3 0xffffffff
0x503: V480 = MUL V479 0x100000000000000000000000000000000000000000000000000000000
0x505: M[V474] = V480
0x506: V481 = 0x1
0x508: V482 = 0xa0
0x50a: V483 = 0x2
0x50c: V484 = EXP 0x2 0xa0
0x50d: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x510: V486 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x511: V487 = 0x4
0x514: V488 = ADD V474 0x4
0x515: M[V488] = V486
0x516: V489 = 0x24
0x519: V490 = ADD V474 0x24
0x51a: M[V490] = V472
0x51b: V491 = 0x44
0x51d: V492 = ADD 0x44 V474
0x51e: V493 = 0x0
0x520: V494 = 0x40
0x522: V495 = M[0x40]
0x525: V496 = SUB V492 V495
0x527: V497 = 0x0
0x52b: V498 = EXTCODESIZE S4
0x52c: V499 = ISZERO V498
0x52d: V500 = ISZERO V499
0x52e: V501 = 0x2ee
0x531: JUMPI 0x2ee V500
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V492, 0x0, V495, V496, V495, 0x0, S4]
Exit stack: [S4, S3, V492, 0x0, V495, V496, V495, 0x0, S4]

================================

Block 0x532
[0x532:0x542]
---
Predecessors: [0x4f2]
Successors: [0x2ff, 0x543]
---
0x532 PUSH1 0x0
0x534 DUP1
0x535 REVERT
0x536 JUMPDEST
0x537 PUSH2 0x2c6
0x53a GAS
0x53b SUB
0x53c CALL
0x53d ISZERO
0x53e ISZERO
0x53f PUSH2 0x2ff
0x542 JUMPI
---
0x532: V502 = 0x0
0x535: REVERT 0x0 0x0
0x536: JUMPDEST 
0x537: V503 = 0x2c6
0x53a: V504 = GAS
0x53b: V505 = SUB V504 0x2c6
0x53c: V506 = CALL V505 S0 S1 S2 S3 S4 S5
0x53d: V507 = ISZERO V506
0x53e: V508 = ISZERO V507
0x53f: V509 = 0x2ff
0x542: JUMPI 0x2ff V508
---
Entry stack: [S8, S7, V492, 0x0, V495, V496, V495, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x543
[0x543:0x54e]
---
Predecessors: [0x532]
Successors: [0x5c8]
---
0x543 PUSH1 0x0
0x545 DUP1
0x546 REVERT
0x547 JUMPDEST
0x548 POP
0x549 POP
0x54a POP
0x54b PUSH2 0x5c8
0x54e JUMP
---
0x543: V510 = 0x0
0x546: REVERT 0x0 0x0
0x547: JUMPDEST 
0x54b: V511 = 0x5c8
0x54e: JUMP 0x5c8
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x54f
[0x54f:0x56e]
---
Predecessors: [0x4bd]
Successors: [0x56f]
---
0x54f JUMPDEST
0x550 PUSH1 0x12
0x552 SLOAD
0x553 PUSH1 0x11
0x555 SLOAD
0x556 PUSH1 0x1
0x558 PUSH1 0xa0
0x55a PUSH1 0x2
0x55c EXP
0x55d SUB
0x55e SWAP1
0x55f SWAP2
0x560 AND
0x561 SWAP1
0x562 PUSH4 0xa9059cbb
0x567 SWAP1
0x568 CALLER
0x569 SWAP1
0x56a PUSH1 0xa
0x56c SWAP1
0x56d DUP6
0x56e MUL
---
0x54f: JUMPDEST 
0x550: V512 = 0x12
0x552: V513 = S[0x12]
0x553: V514 = 0x11
0x555: V515 = S[0x11]
0x556: V516 = 0x1
0x558: V517 = 0xa0
0x55a: V518 = 0x2
0x55c: V519 = EXP 0x2 0xa0
0x55d: V520 = SUB 0x10000000000000000000000000000000000000000 0x1
0x560: V521 = AND V513 0xffffffffffffffffffffffffffffffffffffffff
0x562: V522 = 0xa9059cbb
0x568: V523 = CALLER
0x56a: V524 = 0xa
0x56e: V525 = MUL V126 V515
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V521, 0xa9059cbb, V523, 0xa, V525]
Exit stack: [V12, V126, V521, 0xa9059cbb, V523, 0xa, V525]

================================

Block 0x56f
[0x56f:0x5ae]
---
Predecessors: [0x54f]
Successors: [0x5af, 0x5b3]
---
0x56f JUMPDEST
0x570 DIV
0x571 PUSH1 0x40
0x573 MLOAD
0x574 PUSH1 0xe0
0x576 PUSH1 0x2
0x578 EXP
0x579 PUSH4 0xffffffff
0x57e DUP6
0x57f AND
0x580 MUL
0x581 DUP2
0x582 MSTORE
0x583 PUSH1 0x1
0x585 PUSH1 0xa0
0x587 PUSH1 0x2
0x589 EXP
0x58a SUB
0x58b SWAP1
0x58c SWAP3
0x58d AND
0x58e PUSH1 0x4
0x590 DUP4
0x591 ADD
0x592 MSTORE
0x593 PUSH1 0x24
0x595 DUP3
0x596 ADD
0x597 MSTORE
0x598 PUSH1 0x44
0x59a ADD
0x59b PUSH1 0x0
0x59d PUSH1 0x40
0x59f MLOAD
0x5a0 DUP1
0x5a1 DUP4
0x5a2 SUB
0x5a3 DUP2
0x5a4 PUSH1 0x0
0x5a6 DUP8
0x5a7 DUP1
0x5a8 EXTCODESIZE
0x5a9 ISZERO
0x5aa ISZERO
0x5ab PUSH2 0x5b3
0x5ae JUMPI
---
0x56f: JUMPDEST 
0x570: V526 = DIV V525 0xa
0x571: V527 = 0x40
0x573: V528 = M[0x40]
0x574: V529 = 0xe0
0x576: V530 = 0x2
0x578: V531 = EXP 0x2 0xe0
0x579: V532 = 0xffffffff
0x57f: V533 = AND 0xa9059cbb 0xffffffff
0x580: V534 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x582: M[V528] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x583: V535 = 0x1
0x585: V536 = 0xa0
0x587: V537 = 0x2
0x589: V538 = EXP 0x2 0xa0
0x58a: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58d: V540 = AND V523 0xffffffffffffffffffffffffffffffffffffffff
0x58e: V541 = 0x4
0x591: V542 = ADD V528 0x4
0x592: M[V542] = V540
0x593: V543 = 0x24
0x596: V544 = ADD V528 0x24
0x597: M[V544] = V526
0x598: V545 = 0x44
0x59a: V546 = ADD 0x44 V528
0x59b: V547 = 0x0
0x59d: V548 = 0x40
0x59f: V549 = M[0x40]
0x5a2: V550 = SUB V546 V549
0x5a4: V551 = 0x0
0x5a8: V552 = EXTCODESIZE V521
0x5a9: V553 = ISZERO V552
0x5aa: V554 = ISZERO V553
0x5ab: V555 = 0x5b3
0x5ae: JUMPI 0x5b3 V554
---
Entry stack: [V12, V126, V521, 0xa9059cbb, V523, 0xa, V525]
Stack pops: 5
Stack additions: [S4, S3, V546, 0x0, V549, V550, V549, 0x0, S4]
Exit stack: [V12, V126, V521, 0xa9059cbb, V546, 0x0, V549, V550, V549, 0x0, V521]

================================

Block 0x5af
[0x5af:0x5b2]
---
Predecessors: [0x56f]
Successors: []
---
0x5af PUSH1 0x0
0x5b1 DUP1
0x5b2 REVERT
---
0x5af: V556 = 0x0
0x5b2: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V521, 0xa9059cbb, V546, 0x0, V549, V550, V549, 0x0, V521]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V521, 0xa9059cbb, V546, 0x0, V549, V550, V549, 0x0, V521]

================================

Block 0x5b3
[0x5b3:0x5bf]
---
Predecessors: [0x56f]
Successors: [0x5c0, 0x5c4]
---
0x5b3 JUMPDEST
0x5b4 PUSH2 0x2c6
0x5b7 GAS
0x5b8 SUB
0x5b9 CALL
0x5ba ISZERO
0x5bb ISZERO
0x5bc PUSH2 0x5c4
0x5bf JUMPI
---
0x5b3: JUMPDEST 
0x5b4: V557 = 0x2c6
0x5b7: V558 = GAS
0x5b8: V559 = SUB V558 0x2c6
0x5b9: V560 = CALL V559 V521 0x0 V549 V550 V549 0x0
0x5ba: V561 = ISZERO V560
0x5bb: V562 = ISZERO V561
0x5bc: V563 = 0x5c4
0x5bf: JUMPI 0x5c4 V562
---
Entry stack: [V12, V126, V521, 0xa9059cbb, V546, 0x0, V549, V550, V549, 0x0, V521]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V126, V521, 0xa9059cbb, V546]

================================

Block 0x5c0
[0x5c0:0x5c3]
---
Predecessors: [0x5b3]
Successors: []
---
0x5c0 PUSH1 0x0
0x5c2 DUP1
0x5c3 REVERT
---
0x5c0: V564 = 0x0
0x5c3: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V521, 0xa9059cbb, V546]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V521, 0xa9059cbb, V546]

================================

Block 0x5c4
[0x5c4:0x5c7]
---
Predecessors: [0x5b3]
Successors: [0x5c8]
---
0x5c4 JUMPDEST
0x5c5 POP
0x5c6 POP
0x5c7 POP
---
0x5c4: JUMPDEST 
---
Entry stack: [V12, V126, V521, 0xa9059cbb, V546]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x5c8
[0x5c8:0x5c8]
---
Predecessors: [0x2ff, 0x38d, 0x41f, 0x4b1, 0x543, 0x5c4]
Successors: [0x5c9]
---
0x5c8 JUMPDEST
---
0x5c8: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x5c9
[0x5c9:0x5c9]
---
Predecessors: [0x5c8]
Successors: [0x5ca]
---
0x5c9 JUMPDEST
---
0x5c9: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x5ca
[0x5ca:0x5ca]
---
Predecessors: [0x5c9]
Successors: [0x5cb]
---
0x5ca JUMPDEST
---
0x5ca: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x5cb
[0x5cb:0x5cb]
---
Predecessors: [0x5ca]
Successors: [0x5cc]
---
0x5cb JUMPDEST
---
0x5cb: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x5cc
[0x5cc:0x60e]
---
Predecessors: [0x5cb]
Successors: [0x60f]
---
0x5cc JUMPDEST
0x5cd PUSH1 0x0
0x5cf DUP1
0x5d0 MLOAD
0x5d1 PUSH1 0x20
0x5d3 PUSH2 0xfc5
0x5d6 DUP4
0x5d7 CODECOPY
0x5d8 DUP2
0x5d9 MLOAD
0x5da SWAP2
0x5db MSTORE
0x5dc CALLER
0x5dd DUP3
0x5de PUSH1 0x1
0x5e0 PUSH1 0x40
0x5e2 MLOAD
0x5e3 PUSH1 0x1
0x5e5 PUSH1 0xa0
0x5e7 PUSH1 0x2
0x5e9 EXP
0x5ea SUB
0x5eb SWAP1
0x5ec SWAP4
0x5ed AND
0x5ee DUP4
0x5ef MSTORE
0x5f0 PUSH1 0x20
0x5f2 DUP4
0x5f3 ADD
0x5f4 SWAP2
0x5f5 SWAP1
0x5f6 SWAP2
0x5f7 MSTORE
0x5f8 ISZERO
0x5f9 ISZERO
0x5fa PUSH1 0x40
0x5fc DUP1
0x5fd DUP4
0x5fe ADD
0x5ff SWAP2
0x600 SWAP1
0x601 SWAP2
0x602 MSTORE
0x603 PUSH1 0x60
0x605 SWAP1
0x606 SWAP2
0x607 ADD
0x608 SWAP1
0x609 MLOAD
0x60a DUP1
0x60b SWAP2
0x60c SUB
0x60d SWAP1
0x60e LOG1
---
0x5cc: JUMPDEST 
0x5cd: V565 = 0x0
0x5d0: V566 = M[0x0]
0x5d1: V567 = 0x20
0x5d3: V568 = 0xfc5
0x5d7: CODECOPY 0x0 0xfc5 0x20
0x5d9: V569 = M[0x0]
0x5db: M[0x0] = V566
0x5dc: V570 = CALLER
0x5de: V571 = 0x1
0x5e0: V572 = 0x40
0x5e2: V573 = M[0x40]
0x5e3: V574 = 0x1
0x5e5: V575 = 0xa0
0x5e7: V576 = 0x2
0x5e9: V577 = EXP 0x2 0xa0
0x5ea: V578 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ed: V579 = AND V570 0xffffffffffffffffffffffffffffffffffffffff
0x5ef: M[V573] = V579
0x5f0: V580 = 0x20
0x5f3: V581 = ADD V573 0x20
0x5f7: M[V581] = V126
0x5f8: V582 = ISZERO 0x1
0x5f9: V583 = ISZERO 0x0
0x5fa: V584 = 0x40
0x5fe: V585 = ADD V573 0x40
0x602: M[V585] = 0x1
0x603: V586 = 0x60
0x607: V587 = ADD V573 0x60
0x609: V588 = M[0x40]
0x60c: V589 = SUB V587 V588
0x60e: LOG V588 V589 V569
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x60f
[0x60f:0x613]
---
Predecessors: [0x230, 0x5cc]
Successors: [0x7d4]
---
0x60f JUMPDEST
0x610 PUSH2 0x7d4
0x613 JUMP
---
0x60f: JUMPDEST 
0x610: V590 = 0x7d4
0x613: JUMP 0x7d4
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x614
[0x614:0x620]
---
Predecessors: [0x17d]
Successors: [0x621, 0x698]
---
0x614 JUMPDEST
0x615 PUSH1 0x5
0x617 SLOAD
0x618 PUSH1 0x8
0x61a SLOAD
0x61b LT
0x61c ISZERO
0x61d PUSH2 0x698
0x620 JUMPI
---
0x614: JUMPDEST 
0x615: V591 = 0x5
0x617: V592 = S[0x5]
0x618: V593 = 0x8
0x61a: V594 = S[0x8]
0x61b: V595 = LT V594 V592
0x61c: V596 = ISZERO V595
0x61d: V597 = 0x698
0x620: JUMPI 0x698 V596
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x621
[0x621:0x67a]
---
Predecessors: [0x614]
Successors: [0x67b, 0x67f]
---
0x621 PUSH1 0x12
0x623 SLOAD
0x624 PUSH1 0x9
0x626 SLOAD
0x627 PUSH1 0x1
0x629 PUSH1 0xa0
0x62b PUSH1 0x2
0x62d EXP
0x62e SUB
0x62f SWAP1
0x630 SWAP2
0x631 AND
0x632 SWAP1
0x633 PUSH4 0xa9059cbb
0x638 SWAP1
0x639 CALLER
0x63a SWAP1
0x63b DUP5
0x63c MUL
0x63d PUSH1 0x40
0x63f MLOAD
0x640 PUSH1 0xe0
0x642 PUSH1 0x2
0x644 EXP
0x645 PUSH4 0xffffffff
0x64a DUP6
0x64b AND
0x64c MUL
0x64d DUP2
0x64e MSTORE
0x64f PUSH1 0x1
0x651 PUSH1 0xa0
0x653 PUSH1 0x2
0x655 EXP
0x656 SUB
0x657 SWAP1
0x658 SWAP3
0x659 AND
0x65a PUSH1 0x4
0x65c DUP4
0x65d ADD
0x65e MSTORE
0x65f PUSH1 0x24
0x661 DUP3
0x662 ADD
0x663 MSTORE
0x664 PUSH1 0x44
0x666 ADD
0x667 PUSH1 0x0
0x669 PUSH1 0x40
0x66b MLOAD
0x66c DUP1
0x66d DUP4
0x66e SUB
0x66f DUP2
0x670 PUSH1 0x0
0x672 DUP8
0x673 DUP1
0x674 EXTCODESIZE
0x675 ISZERO
0x676 ISZERO
0x677 PUSH2 0x67f
0x67a JUMPI
---
0x621: V598 = 0x12
0x623: V599 = S[0x12]
0x624: V600 = 0x9
0x626: V601 = S[0x9]
0x627: V602 = 0x1
0x629: V603 = 0xa0
0x62b: V604 = 0x2
0x62d: V605 = EXP 0x2 0xa0
0x62e: V606 = SUB 0x10000000000000000000000000000000000000000 0x1
0x631: V607 = AND V599 0xffffffffffffffffffffffffffffffffffffffff
0x633: V608 = 0xa9059cbb
0x639: V609 = CALLER
0x63c: V610 = MUL V126 V601
0x63d: V611 = 0x40
0x63f: V612 = M[0x40]
0x640: V613 = 0xe0
0x642: V614 = 0x2
0x644: V615 = EXP 0x2 0xe0
0x645: V616 = 0xffffffff
0x64b: V617 = AND 0xa9059cbb 0xffffffff
0x64c: V618 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x64e: M[V612] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x64f: V619 = 0x1
0x651: V620 = 0xa0
0x653: V621 = 0x2
0x655: V622 = EXP 0x2 0xa0
0x656: V623 = SUB 0x10000000000000000000000000000000000000000 0x1
0x659: V624 = AND V609 0xffffffffffffffffffffffffffffffffffffffff
0x65a: V625 = 0x4
0x65d: V626 = ADD V612 0x4
0x65e: M[V626] = V624
0x65f: V627 = 0x24
0x662: V628 = ADD V612 0x24
0x663: M[V628] = V610
0x664: V629 = 0x44
0x666: V630 = ADD 0x44 V612
0x667: V631 = 0x0
0x669: V632 = 0x40
0x66b: V633 = M[0x40]
0x66e: V634 = SUB V630 V633
0x670: V635 = 0x0
0x674: V636 = EXTCODESIZE V607
0x675: V637 = ISZERO V636
0x676: V638 = ISZERO V637
0x677: V639 = 0x67f
0x67a: JUMPI 0x67f V638
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V607, 0xa9059cbb, V630, 0x0, V633, V634, V633, 0x0, V607]
Exit stack: [V12, V126, V607, 0xa9059cbb, V630, 0x0, V633, V634, V633, 0x0, V607]

================================

Block 0x67b
[0x67b:0x67e]
---
Predecessors: [0x621]
Successors: []
---
0x67b PUSH1 0x0
0x67d DUP1
0x67e REVERT
---
0x67b: V640 = 0x0
0x67e: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V607, 0xa9059cbb, V630, 0x0, V633, V634, V633, 0x0, V607]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V607, 0xa9059cbb, V630, 0x0, V633, V634, V633, 0x0, V607]

================================

Block 0x67f
[0x67f:0x68b]
---
Predecessors: [0x621, 0x6a5]
Successors: [0x68c, 0x690]
---
0x67f JUMPDEST
0x680 PUSH2 0x2c6
0x683 GAS
0x684 SUB
0x685 CALL
0x686 ISZERO
0x687 ISZERO
0x688 PUSH2 0x690
0x68b JUMPI
---
0x67f: JUMPDEST 
0x680: V641 = 0x2c6
0x683: V642 = GAS
0x684: V643 = SUB V642 0x2c6
0x685: V644 = CALL V643 S0 0x0 S2 S3 S4 0x0
0x686: V645 = ISZERO V644
0x687: V646 = ISZERO V645
0x688: V647 = 0x690
0x68b: JUMPI 0x690 V646
---
Entry stack: [V12, V126, S8, 0xa9059cbb, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V126, S8, 0xa9059cbb, S6]

================================

Block 0x68c
[0x68c:0x68f]
---
Predecessors: [0x67f]
Successors: []
---
0x68c PUSH1 0x0
0x68e DUP1
0x68f REVERT
---
0x68c: V648 = 0x0
0x68f: REVERT 0x0 0x0
---
Entry stack: [V12, V126, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, S2, 0xa9059cbb, S0]

================================

Block 0x690
[0x690:0x697]
---
Predecessors: [0x67f, 0x703]
Successors: [0x790]
---
0x690 JUMPDEST
0x691 POP
0x692 POP
0x693 POP
0x694 PUSH2 0x790
0x697 JUMP
---
0x690: JUMPDEST 
0x694: V649 = 0x790
0x697: JUMP 0x790
---
Entry stack: [V12, V126, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x698
[0x698:0x6a4]
---
Predecessors: [0x614]
Successors: [0x6a5, 0x71c]
---
0x698 JUMPDEST
0x699 PUSH1 0x6
0x69b SLOAD
0x69c PUSH1 0x8
0x69e SLOAD
0x69f LT
0x6a0 ISZERO
0x6a1 PUSH2 0x71c
0x6a4 JUMPI
---
0x698: JUMPDEST 
0x699: V650 = 0x6
0x69b: V651 = S[0x6]
0x69c: V652 = 0x8
0x69e: V653 = S[0x8]
0x69f: V654 = LT V653 V651
0x6a0: V655 = ISZERO V654
0x6a1: V656 = 0x71c
0x6a4: JUMPI 0x71c V655
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x6a5
[0x6a5:0x6fe]
---
Predecessors: [0x698]
Successors: [0x67f, 0x6ff]
---
0x6a5 PUSH1 0x12
0x6a7 SLOAD
0x6a8 PUSH1 0xa
0x6aa SLOAD
0x6ab PUSH1 0x1
0x6ad PUSH1 0xa0
0x6af PUSH1 0x2
0x6b1 EXP
0x6b2 SUB
0x6b3 SWAP1
0x6b4 SWAP2
0x6b5 AND
0x6b6 SWAP1
0x6b7 PUSH4 0xa9059cbb
0x6bc SWAP1
0x6bd CALLER
0x6be SWAP1
0x6bf DUP5
0x6c0 MUL
0x6c1 PUSH1 0x40
0x6c3 MLOAD
0x6c4 PUSH1 0xe0
0x6c6 PUSH1 0x2
0x6c8 EXP
0x6c9 PUSH4 0xffffffff
0x6ce DUP6
0x6cf AND
0x6d0 MUL
0x6d1 DUP2
0x6d2 MSTORE
0x6d3 PUSH1 0x1
0x6d5 PUSH1 0xa0
0x6d7 PUSH1 0x2
0x6d9 EXP
0x6da SUB
0x6db SWAP1
0x6dc SWAP3
0x6dd AND
0x6de PUSH1 0x4
0x6e0 DUP4
0x6e1 ADD
0x6e2 MSTORE
0x6e3 PUSH1 0x24
0x6e5 DUP3
0x6e6 ADD
0x6e7 MSTORE
0x6e8 PUSH1 0x44
0x6ea ADD
0x6eb PUSH1 0x0
0x6ed PUSH1 0x40
0x6ef MLOAD
0x6f0 DUP1
0x6f1 DUP4
0x6f2 SUB
0x6f3 DUP2
0x6f4 PUSH1 0x0
0x6f6 DUP8
0x6f7 DUP1
0x6f8 EXTCODESIZE
0x6f9 ISZERO
0x6fa ISZERO
0x6fb PUSH2 0x67f
0x6fe JUMPI
---
0x6a5: V657 = 0x12
0x6a7: V658 = S[0x12]
0x6a8: V659 = 0xa
0x6aa: V660 = S[0xa]
0x6ab: V661 = 0x1
0x6ad: V662 = 0xa0
0x6af: V663 = 0x2
0x6b1: V664 = EXP 0x2 0xa0
0x6b2: V665 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b5: V666 = AND V658 0xffffffffffffffffffffffffffffffffffffffff
0x6b7: V667 = 0xa9059cbb
0x6bd: V668 = CALLER
0x6c0: V669 = MUL V126 V660
0x6c1: V670 = 0x40
0x6c3: V671 = M[0x40]
0x6c4: V672 = 0xe0
0x6c6: V673 = 0x2
0x6c8: V674 = EXP 0x2 0xe0
0x6c9: V675 = 0xffffffff
0x6cf: V676 = AND 0xa9059cbb 0xffffffff
0x6d0: V677 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x6d2: M[V671] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6d3: V678 = 0x1
0x6d5: V679 = 0xa0
0x6d7: V680 = 0x2
0x6d9: V681 = EXP 0x2 0xa0
0x6da: V682 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6dd: V683 = AND V668 0xffffffffffffffffffffffffffffffffffffffff
0x6de: V684 = 0x4
0x6e1: V685 = ADD V671 0x4
0x6e2: M[V685] = V683
0x6e3: V686 = 0x24
0x6e6: V687 = ADD V671 0x24
0x6e7: M[V687] = V669
0x6e8: V688 = 0x44
0x6ea: V689 = ADD 0x44 V671
0x6eb: V690 = 0x0
0x6ed: V691 = 0x40
0x6ef: V692 = M[0x40]
0x6f2: V693 = SUB V689 V692
0x6f4: V694 = 0x0
0x6f8: V695 = EXTCODESIZE V666
0x6f9: V696 = ISZERO V695
0x6fa: V697 = ISZERO V696
0x6fb: V698 = 0x67f
0x6fe: JUMPI 0x67f V697
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V666, 0xa9059cbb, V689, 0x0, V692, V693, V692, 0x0, V666]
Exit stack: [V12, V126, V666, 0xa9059cbb, V689, 0x0, V692, V693, V692, 0x0, V666]

================================

Block 0x6ff
[0x6ff:0x702]
---
Predecessors: [0x6a5]
Successors: []
---
0x6ff PUSH1 0x0
0x701 DUP1
0x702 REVERT
---
0x6ff: V699 = 0x0
0x702: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V666, 0xa9059cbb, V689, 0x0, V692, V693, V692, 0x0, V666]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V666, 0xa9059cbb, V689, 0x0, V692, V693, V692, 0x0, V666]

================================

Block 0x703
[0x703:0x70f]
---
Predecessors: []
Successors: [0x690, 0x710]
---
0x703 JUMPDEST
0x704 PUSH2 0x2c6
0x707 GAS
0x708 SUB
0x709 CALL
0x70a ISZERO
0x70b ISZERO
0x70c PUSH2 0x690
0x70f JUMPI
---
0x703: JUMPDEST 
0x704: V700 = 0x2c6
0x707: V701 = GAS
0x708: V702 = SUB V701 0x2c6
0x709: V703 = CALL V702 S0 S1 S2 S3 S4 S5
0x70a: V704 = ISZERO V703
0x70b: V705 = ISZERO V704
0x70c: V706 = 0x690
0x70f: JUMPI 0x690 V705
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x710
[0x710:0x71b]
---
Predecessors: [0x703]
Successors: [0x790]
---
0x710 PUSH1 0x0
0x712 DUP1
0x713 REVERT
0x714 JUMPDEST
0x715 POP
0x716 POP
0x717 POP
0x718 PUSH2 0x790
0x71b JUMP
---
0x710: V707 = 0x0
0x713: REVERT 0x0 0x0
0x714: JUMPDEST 
0x718: V708 = 0x790
0x71b: JUMP 0x790
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x71c
[0x71c:0x776]
---
Predecessors: [0x698]
Successors: [0x777, 0x77b]
---
0x71c JUMPDEST
0x71d PUSH1 0x12
0x71f SLOAD
0x720 PUSH1 0xb
0x722 SLOAD
0x723 PUSH1 0x1
0x725 PUSH1 0xa0
0x727 PUSH1 0x2
0x729 EXP
0x72a SUB
0x72b SWAP1
0x72c SWAP2
0x72d AND
0x72e SWAP1
0x72f PUSH4 0xa9059cbb
0x734 SWAP1
0x735 CALLER
0x736 SWAP1
0x737 DUP5
0x738 MUL
0x739 PUSH1 0x40
0x73b MLOAD
0x73c PUSH1 0xe0
0x73e PUSH1 0x2
0x740 EXP
0x741 PUSH4 0xffffffff
0x746 DUP6
0x747 AND
0x748 MUL
0x749 DUP2
0x74a MSTORE
0x74b PUSH1 0x1
0x74d PUSH1 0xa0
0x74f PUSH1 0x2
0x751 EXP
0x752 SUB
0x753 SWAP1
0x754 SWAP3
0x755 AND
0x756 PUSH1 0x4
0x758 DUP4
0x759 ADD
0x75a MSTORE
0x75b PUSH1 0x24
0x75d DUP3
0x75e ADD
0x75f MSTORE
0x760 PUSH1 0x44
0x762 ADD
0x763 PUSH1 0x0
0x765 PUSH1 0x40
0x767 MLOAD
0x768 DUP1
0x769 DUP4
0x76a SUB
0x76b DUP2
0x76c PUSH1 0x0
0x76e DUP8
0x76f DUP1
0x770 EXTCODESIZE
0x771 ISZERO
0x772 ISZERO
0x773 PUSH2 0x77b
0x776 JUMPI
---
0x71c: JUMPDEST 
0x71d: V709 = 0x12
0x71f: V710 = S[0x12]
0x720: V711 = 0xb
0x722: V712 = S[0xb]
0x723: V713 = 0x1
0x725: V714 = 0xa0
0x727: V715 = 0x2
0x729: V716 = EXP 0x2 0xa0
0x72a: V717 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72d: V718 = AND V710 0xffffffffffffffffffffffffffffffffffffffff
0x72f: V719 = 0xa9059cbb
0x735: V720 = CALLER
0x738: V721 = MUL V126 V712
0x739: V722 = 0x40
0x73b: V723 = M[0x40]
0x73c: V724 = 0xe0
0x73e: V725 = 0x2
0x740: V726 = EXP 0x2 0xe0
0x741: V727 = 0xffffffff
0x747: V728 = AND 0xa9059cbb 0xffffffff
0x748: V729 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x74a: M[V723] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x74b: V730 = 0x1
0x74d: V731 = 0xa0
0x74f: V732 = 0x2
0x751: V733 = EXP 0x2 0xa0
0x752: V734 = SUB 0x10000000000000000000000000000000000000000 0x1
0x755: V735 = AND V720 0xffffffffffffffffffffffffffffffffffffffff
0x756: V736 = 0x4
0x759: V737 = ADD V723 0x4
0x75a: M[V737] = V735
0x75b: V738 = 0x24
0x75e: V739 = ADD V723 0x24
0x75f: M[V739] = V721
0x760: V740 = 0x44
0x762: V741 = ADD 0x44 V723
0x763: V742 = 0x0
0x765: V743 = 0x40
0x767: V744 = M[0x40]
0x76a: V745 = SUB V741 V744
0x76c: V746 = 0x0
0x770: V747 = EXTCODESIZE V718
0x771: V748 = ISZERO V747
0x772: V749 = ISZERO V748
0x773: V750 = 0x77b
0x776: JUMPI 0x77b V749
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0, V718, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V718]
Exit stack: [V12, V126, V718, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V718]

================================

Block 0x777
[0x777:0x77a]
---
Predecessors: [0x71c]
Successors: []
---
0x777 PUSH1 0x0
0x779 DUP1
0x77a REVERT
---
0x777: V751 = 0x0
0x77a: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V718, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V718]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V718, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V718]

================================

Block 0x77b
[0x77b:0x787]
---
Predecessors: [0x71c]
Successors: [0x788, 0x78c]
---
0x77b JUMPDEST
0x77c PUSH2 0x2c6
0x77f GAS
0x780 SUB
0x781 CALL
0x782 ISZERO
0x783 ISZERO
0x784 PUSH2 0x78c
0x787 JUMPI
---
0x77b: JUMPDEST 
0x77c: V752 = 0x2c6
0x77f: V753 = GAS
0x780: V754 = SUB V753 0x2c6
0x781: V755 = CALL V754 V718 0x0 V744 V745 V744 0x0
0x782: V756 = ISZERO V755
0x783: V757 = ISZERO V756
0x784: V758 = 0x78c
0x787: JUMPI 0x78c V757
---
Entry stack: [V12, V126, V718, 0xa9059cbb, V741, 0x0, V744, V745, V744, 0x0, V718]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V126, V718, 0xa9059cbb, V741]

================================

Block 0x788
[0x788:0x78b]
---
Predecessors: [0x77b]
Successors: []
---
0x788 PUSH1 0x0
0x78a DUP1
0x78b REVERT
---
0x788: V759 = 0x0
0x78b: REVERT 0x0 0x0
---
Entry stack: [V12, V126, V718, 0xa9059cbb, V741]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126, V718, 0xa9059cbb, V741]

================================

Block 0x78c
[0x78c:0x78f]
---
Predecessors: [0x77b]
Successors: [0x790]
---
0x78c JUMPDEST
0x78d POP
0x78e POP
0x78f POP
---
0x78c: JUMPDEST 
---
Entry stack: [V12, V126, V718, 0xa9059cbb, V741]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x790
[0x790:0x790]
---
Predecessors: [0x690, 0x710, 0x78c]
Successors: [0x791]
---
0x790 JUMPDEST
---
0x790: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x791
[0x791:0x7d3]
---
Predecessors: [0x790]
Successors: [0x7d4]
---
0x791 JUMPDEST
0x792 PUSH1 0x0
0x794 DUP1
0x795 MLOAD
0x796 PUSH1 0x20
0x798 PUSH2 0xfc5
0x79b DUP4
0x79c CODECOPY
0x79d DUP2
0x79e MLOAD
0x79f SWAP2
0x7a0 MSTORE
0x7a1 CALLER
0x7a2 DUP3
0x7a3 PUSH1 0x1
0x7a5 PUSH1 0x40
0x7a7 MLOAD
0x7a8 PUSH1 0x1
0x7aa PUSH1 0xa0
0x7ac PUSH1 0x2
0x7ae EXP
0x7af SUB
0x7b0 SWAP1
0x7b1 SWAP4
0x7b2 AND
0x7b3 DUP4
0x7b4 MSTORE
0x7b5 PUSH1 0x20
0x7b7 DUP4
0x7b8 ADD
0x7b9 SWAP2
0x7ba SWAP1
0x7bb SWAP2
0x7bc MSTORE
0x7bd ISZERO
0x7be ISZERO
0x7bf PUSH1 0x40
0x7c1 DUP1
0x7c2 DUP4
0x7c3 ADD
0x7c4 SWAP2
0x7c5 SWAP1
0x7c6 SWAP2
0x7c7 MSTORE
0x7c8 PUSH1 0x60
0x7ca SWAP1
0x7cb SWAP2
0x7cc ADD
0x7cd SWAP1
0x7ce MLOAD
0x7cf DUP1
0x7d0 SWAP2
0x7d1 SUB
0x7d2 SWAP1
0x7d3 LOG1
---
0x791: JUMPDEST 
0x792: V760 = 0x0
0x795: V761 = M[0x0]
0x796: V762 = 0x20
0x798: V763 = 0xfc5
0x79c: CODECOPY 0x0 0xfc5 0x20
0x79e: V764 = M[0x0]
0x7a0: M[0x0] = V761
0x7a1: V765 = CALLER
0x7a3: V766 = 0x1
0x7a5: V767 = 0x40
0x7a7: V768 = M[0x40]
0x7a8: V769 = 0x1
0x7aa: V770 = 0xa0
0x7ac: V771 = 0x2
0x7ae: V772 = EXP 0x2 0xa0
0x7af: V773 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b2: V774 = AND V765 0xffffffffffffffffffffffffffffffffffffffff
0x7b4: M[V768] = V774
0x7b5: V775 = 0x20
0x7b8: V776 = ADD V768 0x20
0x7bc: M[V776] = V126
0x7bd: V777 = ISZERO 0x1
0x7be: V778 = ISZERO 0x0
0x7bf: V779 = 0x40
0x7c3: V780 = ADD V768 0x40
0x7c7: M[V780] = 0x1
0x7c8: V781 = 0x60
0x7cc: V782 = ADD V768 0x60
0x7ce: V783 = M[0x40]
0x7d1: V784 = SUB V782 V783
0x7d3: LOG V783 V784 V764
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V126]

================================

Block 0x7d4
[0x7d4:0x7d4]
---
Predecessors: [0x60f, 0x791]
Successors: [0x7d5]
---
0x7d4 JUMPDEST
---
0x7d4: JUMPDEST 
---
Entry stack: [V12, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V126]

================================

Block 0x7d5
[0x7d5:0x7d7]
---
Predecessors: [0x7d4]
Successors: []
---
0x7d5 JUMPDEST
0x7d6 POP
0x7d7 STOP
---
0x7d5: JUMPDEST 
0x7d7: STOP 
---
Entry stack: [V12, V126]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d8
[0x7d8:0x7de]
---
Predecessors: [0xb]
Successors: [0x7df, 0x7e3]
---
0x7d8 JUMPDEST
0x7d9 CALLVALUE
0x7da ISZERO
0x7db PUSH2 0x7e3
0x7de JUMPI
---
0x7d8: JUMPDEST 
0x7d9: V785 = CALLVALUE
0x7da: V786 = ISZERO V785
0x7db: V787 = 0x7e3
0x7de: JUMPI 0x7e3 V786
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7df
[0x7df:0x7e2]
---
Predecessors: [0x7d8]
Successors: []
---
0x7df PUSH1 0x0
0x7e1 DUP1
0x7e2 REVERT
---
0x7df: V788 = 0x0
0x7e2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7e3
[0x7e3:0x7ea]
---
Predecessors: [0x7d8]
Successors: [0xbf1]
---
0x7e3 JUMPDEST
0x7e4 PUSH2 0x7eb
0x7e7 PUSH2 0xbf1
0x7ea JUMP
---
0x7e3: JUMPDEST 
0x7e4: V789 = 0x7eb
0x7e7: V790 = 0xbf1
0x7ea: JUMP 0xbf1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7eb]
Exit stack: [V12, 0x7eb]

================================

Block 0x7eb
[0x7eb:0x7ec]
---
Predecessors: [0xc3a, 0xcd0, 0xd24, 0xdb4, 0xdde, 0xe33, 0xfc1]
Successors: []
---
0x7eb JUMPDEST
0x7ec STOP
---
0x7eb: JUMPDEST 
0x7ec: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7ed
[0x7ed:0x7f3]
---
Predecessors: [0x25]
Successors: [0x7f4, 0x7f8]
---
0x7ed JUMPDEST
0x7ee CALLVALUE
0x7ef ISZERO
0x7f0 PUSH2 0x7f8
0x7f3 JUMPI
---
0x7ed: JUMPDEST 
0x7ee: V791 = CALLVALUE
0x7ef: V792 = ISZERO V791
0x7f0: V793 = 0x7f8
0x7f3: JUMPI 0x7f8 V792
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f4
[0x7f4:0x7f7]
---
Predecessors: [0x7ed]
Successors: []
---
0x7f4 PUSH1 0x0
0x7f6 DUP1
0x7f7 REVERT
---
0x7f4: V794 = 0x0
0x7f7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f8
[0x7f8:0x7ff]
---
Predecessors: [0x7ed]
Successors: [0xc3c]
---
0x7f8 JUMPDEST
0x7f9 PUSH2 0x800
0x7fc PUSH2 0xc3c
0x7ff JUMP
---
0x7f8: JUMPDEST 
0x7f9: V795 = 0x800
0x7fc: V796 = 0xc3c
0x7ff: JUMP 0xc3c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800]
Exit stack: [V12, 0x800]

================================

Block 0x800
[0x800:0x811]
---
Predecessors: [0xc3c, 0xcd3, 0xcd9, 0xcdf, 0xcf4, 0xcfa, 0xd53, 0xd65, 0xd6b, 0xd71, 0xd77, 0xd7d, 0xd83, 0xd89, 0xde0, 0xde6, 0xdec]
Successors: []
---
0x800 JUMPDEST
0x801 PUSH1 0x40
0x803 MLOAD
0x804 SWAP1
0x805 DUP2
0x806 MSTORE
0x807 PUSH1 0x20
0x809 ADD
0x80a PUSH1 0x40
0x80c MLOAD
0x80d DUP1
0x80e SWAP2
0x80f SUB
0x810 SWAP1
0x811 RETURN
---
0x800: JUMPDEST 
0x801: V797 = 0x40
0x803: V798 = M[0x40]
0x806: M[V798] = S0
0x807: V799 = 0x20
0x809: V800 = ADD 0x20 V798
0x80a: V801 = 0x40
0x80c: V802 = M[0x40]
0x80f: V803 = SUB V800 V802
0x811: RETURN V802 V803
---
Entry stack: [V12, 0x800, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x800]

================================

Block 0x812
[0x812:0x818]
---
Predecessors: [0x30]
Successors: [0x819, 0x81d]
---
0x812 JUMPDEST
0x813 CALLVALUE
0x814 ISZERO
0x815 PUSH2 0x81d
0x818 JUMPI
---
0x812: JUMPDEST 
0x813: V804 = CALLVALUE
0x814: V805 = ISZERO V804
0x815: V806 = 0x81d
0x818: JUMPI 0x81d V805
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x819
[0x819:0x81c]
---
Predecessors: [0x812]
Successors: []
---
0x819 PUSH1 0x0
0x81b DUP1
0x81c REVERT
---
0x819: V807 = 0x0
0x81c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81d
[0x81d:0x827]
---
Predecessors: [0x812]
Successors: [0xc42]
---
0x81d JUMPDEST
0x81e PUSH2 0x7eb
0x821 PUSH1 0x4
0x823 CALLDATALOAD
0x824 PUSH2 0xc42
0x827 JUMP
---
0x81d: JUMPDEST 
0x81e: V808 = 0x7eb
0x821: V809 = 0x4
0x823: V810 = CALLDATALOAD 0x4
0x824: V811 = 0xc42
0x827: JUMP 0xc42
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7eb, V810]
Exit stack: [V12, 0x7eb, V810]

================================

Block 0x828
[0x828:0x829]
---
Predecessors: []
Successors: []
---
0x828 JUMPDEST
0x829 STOP
---
0x828: JUMPDEST 
0x829: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x82a
[0x82a:0x830]
---
Predecessors: [0x3b]
Successors: [0x831, 0x835]
---
0x82a JUMPDEST
0x82b CALLVALUE
0x82c ISZERO
0x82d PUSH2 0x835
0x830 JUMPI
---
0x82a: JUMPDEST 
0x82b: V812 = CALLVALUE
0x82c: V813 = ISZERO V812
0x82d: V814 = 0x835
0x830: JUMPI 0x835 V813
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x831
[0x831:0x834]
---
Predecessors: [0x82a]
Successors: []
---
0x831 PUSH1 0x0
0x833 DUP1
0x834 REVERT
---
0x831: V815 = 0x0
0x834: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x835
[0x835:0x83c]
---
Predecessors: [0x82a]
Successors: [0xcd3]
---
0x835 JUMPDEST
0x836 PUSH2 0x800
0x839 PUSH2 0xcd3
0x83c JUMP
---
0x835: JUMPDEST 
0x836: V816 = 0x800
0x839: V817 = 0xcd3
0x83c: JUMP 0xcd3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800]
Exit stack: [V12, 0x800]

================================

Block 0x83d
[0x83d:0x84e]
---
Predecessors: []
Successors: []
---
0x83d JUMPDEST
0x83e PUSH1 0x40
0x840 MLOAD
0x841 SWAP1
0x842 DUP2
0x843 MSTORE
0x844 PUSH1 0x20
0x846 ADD
0x847 PUSH1 0x40
0x849 MLOAD
0x84a DUP1
0x84b SWAP2
0x84c SUB
0x84d SWAP1
0x84e RETURN
---
0x83d: JUMPDEST 
0x83e: V818 = 0x40
0x840: V819 = M[0x40]
0x843: M[V819] = S0
0x844: V820 = 0x20
0x846: V821 = ADD 0x20 V819
0x847: V822 = 0x40
0x849: V823 = M[0x40]
0x84c: V824 = SUB V821 V823
0x84e: RETURN V823 V824
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x84f
[0x84f:0x855]
---
Predecessors: [0x46]
Successors: [0x856, 0x85a]
---
0x84f JUMPDEST
0x850 CALLVALUE
0x851 ISZERO
0x852 PUSH2 0x85a
0x855 JUMPI
---
0x84f: JUMPDEST 
0x850: V825 = CALLVALUE
0x851: V826 = ISZERO V825
0x852: V827 = 0x85a
0x855: JUMPI 0x85a V826
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x856
[0x856:0x859]
---
Predecessors: [0x84f]
Successors: []
---
0x856 PUSH1 0x0
0x858 DUP1
0x859 REVERT
---
0x856: V828 = 0x0
0x859: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x85a
[0x85a:0x861]
---
Predecessors: [0x84f]
Successors: [0xcd9]
---
0x85a JUMPDEST
0x85b PUSH2 0x800
0x85e PUSH2 0xcd9
0x861 JUMP
---
0x85a: JUMPDEST 
0x85b: V829 = 0x800
0x85e: V830 = 0xcd9
0x861: JUMP 0xcd9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800]
Exit stack: [V12, 0x800]

================================

Block 0x862
[0x862:0x873]
---
Predecessors: []
Successors: []
---
0x862 JUMPDEST
0x863 PUSH1 0x40
0x865 MLOAD
0x866 SWAP1
0x867 DUP2
0x868 MSTORE
0x869 PUSH1 0x20
0x86b ADD
0x86c PUSH1 0x40
0x86e MLOAD
0x86f DUP1
0x870 SWAP2
0x871 SUB
0x872 SWAP1
0x873 RETURN
---
0x862: JUMPDEST 
0x863: V831 = 0x40
0x865: V832 = M[0x40]
0x868: M[V832] = S0
0x869: V833 = 0x20
0x86b: V834 = ADD 0x20 V832
0x86c: V835 = 0x40
0x86e: V836 = M[0x40]
0x871: V837 = SUB V834 V836
0x873: RETURN V836 V837
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x874
[0x874:0x87a]
---
Predecessors: [0x51]
Successors: [0x87b, 0x87f]
---
0x874 JUMPDEST
0x875 CALLVALUE
0x876 ISZERO
0x877 PUSH2 0x87f
0x87a JUMPI
---
0x874: JUMPDEST 
0x875: V838 = CALLVALUE
0x876: V839 = ISZERO V838
0x877: V840 = 0x87f
0x87a: JUMPI 0x87f V839
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x87b
[0x87b:0x87e]
---
Predecessors: [0x874]
Successors: []
---
0x87b PUSH1 0x0
0x87d DUP1
0x87e REVERT
---
0x87b: V841 = 0x0
0x87e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x87f
[0x87f:0x886]
---
Predecessors: [0x874]
Successors: [0xcdf]
---
0x87f JUMPDEST
0x880 PUSH2 0x800
0x883 PUSH2 0xcdf
0x886 JUMP
---
0x87f: JUMPDEST 
0x880: V842 = 0x800
0x883: V843 = 0xcdf
0x886: JUMP 0xcdf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800]
Exit stack: [V12, 0x800]

================================

Block 0x887
[0x887:0x898]
---
Predecessors: []
Successors: []
---
0x887 JUMPDEST
0x888 PUSH1 0x40
0x88a MLOAD
0x88b SWAP1
0x88c DUP2
0x88d MSTORE
0x88e PUSH1 0x20
0x890 ADD
0x891 PUSH1 0x40
0x893 MLOAD
0x894 DUP1
0x895 SWAP2
0x896 SUB
0x897 SWAP1
0x898 RETURN
---
0x887: JUMPDEST 
0x888: V844 = 0x40
0x88a: V845 = M[0x40]
0x88d: M[V845] = S0
0x88e: V846 = 0x20
0x890: V847 = ADD 0x20 V845
0x891: V848 = 0x40
0x893: V849 = M[0x40]
0x896: V850 = SUB V847 V849
0x898: RETURN V849 V850
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x899
[0x899:0x89f]
---
Predecessors: [0x5c]
Successors: [0x8a0, 0x8a4]
---
0x899 JUMPDEST
0x89a CALLVALUE
0x89b ISZERO
0x89c PUSH2 0x8a4
0x89f JUMPI
---
0x899: JUMPDEST 
0x89a: V851 = CALLVALUE
0x89b: V852 = ISZERO V851
0x89c: V853 = 0x8a4
0x89f: JUMPI 0x8a4 V852
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a0
[0x8a0:0x8a3]
---
Predecessors: [0x899]
Successors: []
---
0x8a0 PUSH1 0x0
0x8a2 DUP1
0x8a3 REVERT
---
0x8a0: V854 = 0x0
0x8a3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a4
[0x8a4:0x8ab]
---
Predecessors: [0x899]
Successors: [0xce5]
---
0x8a4 JUMPDEST
0x8a5 PUSH2 0x8ac
0x8a8 PUSH2 0xce5
0x8ab JUMP
---
0x8a4: JUMPDEST 
0x8a5: V855 = 0x8ac
0x8a8: V856 = 0xce5
0x8ab: JUMP 0xce5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8ac]
Exit stack: [V12, 0x8ac]

================================

Block 0x8ac
[0x8ac:0x8c7]
---
Predecessors: [0xce5, 0xd26, 0xd44]
Successors: []
---
0x8ac JUMPDEST
0x8ad PUSH1 0x40
0x8af MLOAD
0x8b0 PUSH1 0x1
0x8b2 PUSH1 0xa0
0x8b4 PUSH1 0x2
0x8b6 EXP
0x8b7 SUB
0x8b8 SWAP1
0x8b9 SWAP2
0x8ba AND
0x8bb DUP2
0x8bc MSTORE
0x8bd PUSH1 0x20
0x8bf ADD
0x8c0 PUSH1 0x40
0x8c2 MLOAD
0x8c3 DUP1
0x8c4 SWAP2
0x8c5 SUB
0x8c6 SWAP1
0x8c7 RETURN
---
0x8ac: JUMPDEST 
0x8ad: V857 = 0x40
0x8af: V858 = M[0x40]
0x8b0: V859 = 0x1
0x8b2: V860 = 0xa0
0x8b4: V861 = 0x2
0x8b6: V862 = EXP 0x2 0xa0
0x8b7: V863 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ba: V864 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x8bc: M[V858] = V864
0x8bd: V865 = 0x20
0x8bf: V866 = ADD 0x20 V858
0x8c0: V867 = 0x40
0x8c2: V868 = M[0x40]
0x8c5: V869 = SUB V866 V868
0x8c7: RETURN V868 V869
---
Entry stack: [V12, 0x8ac, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x8ac]

================================

Block 0x8c8
[0x8c8:0x8ce]
---
Predecessors: [0x67]
Successors: [0x8cf, 0x8d3]
---
0x8c8 JUMPDEST
0x8c9 CALLVALUE
0x8ca ISZERO
0x8cb PUSH2 0x8d3
0x8ce JUMPI
---
0x8c8: JUMPDEST 
0x8c9: V870 = CALLVALUE
0x8ca: V871 = ISZERO V870
0x8cb: V872 = 0x8d3
0x8ce: JUMPI 0x8d3 V871
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8cf
[0x8cf:0x8d2]
---
Predecessors: [0x8c8]
Successors: []
---
0x8cf PUSH1 0x0
0x8d1 DUP1
0x8d2 REVERT
---
0x8cf: V873 = 0x0
0x8d2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8d3
[0x8d3:0x8da]
---
Predecessors: [0x8c8]
Successors: [0xcf4]
---
0x8d3 JUMPDEST
0x8d4 PUSH2 0x800
0x8d7 PUSH2 0xcf4
0x8da JUMP
---
0x8d3: JUMPDEST 
0x8d4: V874 = 0x800
0x8d7: V875 = 0xcf4
0x8da: JUMP 0xcf4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800]
Exit stack: [V12, 0x800]

================================

Block 0x8db
[0x8db:0x8ec]
---
Predecessors: []
Successors: []
---
0x8db JUMPDEST
0x8dc PUSH1 0x40
0x8de MLOAD
0x8df SWAP1
0x8e0 DUP2
0x8e1 MSTORE
0x8e2 PUSH1 0x20
0x8e4 ADD
0x8e5 PUSH1 0x40
0x8e7 MLOAD
0x8e8 DUP1
0x8e9 SWAP2
0x8ea SUB
0x8eb SWAP1
0x8ec RETURN
---
0x8db: JUMPDEST 
0x8dc: V876 = 0x40
0x8de: V877 = M[0x40]
0x8e1: M[V877] = S0
0x8e2: V878 = 0x20
0x8e4: V879 = ADD 0x20 V877
0x8e5: V880 = 0x40
0x8e7: V881 = M[0x40]
0x8ea: V882 = SUB V879 V881
0x8ec: RETURN V881 V882
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8ed
[0x8ed:0x8f3]
---
Predecessors: [0x72]
Successors: [0x8f4, 0x8f8]
---
0x8ed JUMPDEST
0x8ee CALLVALUE
0x8ef ISZERO
0x8f0 PUSH2 0x8f8
0x8f3 JUMPI
---
0x8ed: JUMPDEST 
0x8ee: V883 = CALLVALUE
0x8ef: V884 = ISZERO V883
0x8f0: V885 = 0x8f8
0x8f3: JUMPI 0x8f8 V884
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8f4
[0x8f4:0x8f7]
---
Predecessors: [0x8ed]
Successors: []
---
0x8f4 PUSH1 0x0
0x8f6 DUP1
0x8f7 REVERT
---
0x8f4: V886 = 0x0
0x8f7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8f8
[0x8f8:0x8ff]
---
Predecessors: [0x8ed]
Successors: [0xcfa]
---
0x8f8 JUMPDEST
0x8f9 PUSH2 0x800
0x8fc PUSH2 0xcfa
0x8ff JUMP
---
0x8f8: JUMPDEST 
0x8f9: V887 = 0x800
0x8fc: V888 = 0xcfa
0x8ff: JUMP 0xcfa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800]
Exit stack: [V12, 0x800]

================================

Block 0x900
[0x900:0x911]
---
Predecessors: []
Successors: []
---
0x900 JUMPDEST
0x901 PUSH1 0x40
0x903 MLOAD
0x904 SWAP1
0x905 DUP2
0x906 MSTORE
0x907 PUSH1 0x20
0x909 ADD
0x90a PUSH1 0x40
0x90c MLOAD
0x90d DUP1
0x90e SWAP2
0x90f SUB
0x910 SWAP1
0x911 RETURN
---
0x900: JUMPDEST 
0x901: V889 = 0x40
0x903: V890 = M[0x40]
0x906: M[V890] = S0
0x907: V891 = 0x20
0x909: V892 = ADD 0x20 V890
0x90a: V893 = 0x40
0x90c: V894 = M[0x40]
0x90f: V895 = SUB V892 V894
0x911: RETURN V894 V895
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x912
[0x912:0x918]
---
Predecessors: [0x7d]
Successors: [0x919, 0x91d]
---
0x912 JUMPDEST
0x913 CALLVALUE
0x914 ISZERO
0x915 PUSH2 0x91d
0x918 JUMPI
---
0x912: JUMPDEST 
0x913: V896 = CALLVALUE
0x914: V897 = ISZERO V896
0x915: V898 = 0x91d
0x918: JUMPI 0x91d V897
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x919
[0x919:0x91c]
---
Predecessors: [0x912]
Successors: []
---
0x919 PUSH1 0x0
0x91b DUP1
0x91c REVERT
---
0x919: V899 = 0x0
0x91c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x91d
[0x91d:0x924]
---
Predecessors: [0x912]
Successors: [0xd00]
---
0x91d JUMPDEST
0x91e PUSH2 0x7eb
0x921 PUSH2 0xd00
0x924 JUMP
---
0x91d: JUMPDEST 
0x91e: V900 = 0x7eb
0x921: V901 = 0xd00
0x924: JUMP 0xd00
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7eb]
Exit stack: [V12, 0x7eb]

================================

Block 0x925
[0x925:0x926]
---
Predecessors: []
Successors: []
---
0x925 JUMPDEST
0x926 STOP
---
0x925: JUMPDEST 
0x926: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x927
[0x927:0x92d]
---
Predecessors: [0x88]
Successors: [0x92e, 0x932]
---
0x927 JUMPDEST
0x928 CALLVALUE
0x929 ISZERO
0x92a PUSH2 0x932
0x92d JUMPI
---
0x927: JUMPDEST 
0x928: V902 = CALLVALUE
0x929: V903 = ISZERO V902
0x92a: V904 = 0x932
0x92d: JUMPI 0x932 V903
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x92e
[0x92e:0x931]
---
Predecessors: [0x927]
Successors: []
---
0x92e PUSH1 0x0
0x930 DUP1
0x931 REVERT
---
0x92e: V905 = 0x0
0x931: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x932
[0x932:0x939]
---
Predecessors: [0x927]
Successors: [0xd26]
---
0x932 JUMPDEST
0x933 PUSH2 0x8ac
0x936 PUSH2 0xd26
0x939 JUMP
---
0x932: JUMPDEST 
0x933: V906 = 0x8ac
0x936: V907 = 0xd26
0x939: JUMP 0xd26
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8ac]
Exit stack: [V12, 0x8ac]

================================

Block 0x93a
[0x93a:0x955]
---
Predecessors: []
Successors: []
---
0x93a JUMPDEST
0x93b PUSH1 0x40
0x93d MLOAD
0x93e PUSH1 0x1
0x940 PUSH1 0xa0
0x942 PUSH1 0x2
0x944 EXP
0x945 SUB
0x946 SWAP1
0x947 SWAP2
0x948 AND
0x949 DUP2
0x94a MSTORE
0x94b PUSH1 0x20
0x94d ADD
0x94e PUSH1 0x40
0x950 MLOAD
0x951 DUP1
0x952 SWAP2
0x953 SUB
0x954 SWAP1
0x955 RETURN
---
0x93a: JUMPDEST 
0x93b: V908 = 0x40
0x93d: V909 = M[0x40]
0x93e: V910 = 0x1
0x940: V911 = 0xa0
0x942: V912 = 0x2
0x944: V913 = EXP 0x2 0xa0
0x945: V914 = SUB 0x10000000000000000000000000000000000000000 0x1
0x948: V915 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x94a: M[V909] = V915
0x94b: V916 = 0x20
0x94d: V917 = ADD 0x20 V909
0x94e: V918 = 0x40
0x950: V919 = M[0x40]
0x953: V920 = SUB V917 V919
0x955: RETURN V919 V920
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x956
[0x956:0x95c]
---
Predecessors: [0x93]
Successors: [0x95d, 0x961]
---
0x956 JUMPDEST
0x957 CALLVALUE
0x958 ISZERO
0x959 PUSH2 0x961
0x95c JUMPI
---
0x956: JUMPDEST 
0x957: V921 = CALLVALUE
0x958: V922 = ISZERO V921
0x959: V923 = 0x961
0x95c: JUMPI 0x961 V922
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x95d
[0x95d:0x960]
---
Predecessors: [0x956]
Successors: []
---
0x95d PUSH1 0x0
0x95f DUP1
0x960 REVERT
---
0x95d: V924 = 0x0
0x960: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x961
[0x961:0x968]
---
Predecessors: [0x956]
Successors: [0xd35]
---
0x961 JUMPDEST
0x962 PUSH2 0x969
0x965 PUSH2 0xd35
0x968 JUMP
---
0x961: JUMPDEST 
0x962: V925 = 0x969
0x965: V926 = 0xd35
0x968: JUMP 0xd35
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x969]
Exit stack: [V12, 0x969]

================================

Block 0x969
[0x969:0x97c]
---
Predecessors: [0xd35, 0xdf2, 0xe00]
Successors: []
---
0x969 JUMPDEST
0x96a PUSH1 0x40
0x96c MLOAD
0x96d SWAP1
0x96e ISZERO
0x96f ISZERO
0x970 DUP2
0x971 MSTORE
0x972 PUSH1 0x20
0x974 ADD
0x975 PUSH1 0x40
0x977 MLOAD
0x978 DUP1
0x979 SWAP2
0x97a SUB
0x97b SWAP1
0x97c RETURN
---
0x969: JUMPDEST 
0x96a: V927 = 0x40
0x96c: V928 = M[0x40]
0x96e: V929 = ISZERO S0
0x96f: V930 = ISZERO V929
0x971: M[V928] = V930
0x972: V931 = 0x20
0x974: V932 = ADD 0x20 V928
0x975: V933 = 0x40
0x977: V934 = M[0x40]
0x97a: V935 = SUB V932 V934
0x97c: RETURN V934 V935
---
Entry stack: [V12, 0x969, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x969]

================================

Block 0x97d
[0x97d:0x983]
---
Predecessors: [0x9e]
Successors: [0x984, 0x988]
---
0x97d JUMPDEST
0x97e CALLVALUE
0x97f ISZERO
0x980 PUSH2 0x988
0x983 JUMPI
---
0x97d: JUMPDEST 
0x97e: V936 = CALLVALUE
0x97f: V937 = ISZERO V936
0x980: V938 = 0x988
0x983: JUMPI 0x988 V937
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x984
[0x984:0x987]
---
Predecessors: [0x97d]
Successors: []
---
0x984 PUSH1 0x0
0x986 DUP1
0x987 REVERT
---
0x984: V939 = 0x0
0x987: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x988
[0x988:0x98f]
---
Predecessors: [0x97d]
Successors: [0xd44]
---
0x988 JUMPDEST
0x989 PUSH2 0x8ac
0x98c PUSH2 0xd44
0x98f JUMP
---
0x988: JUMPDEST 
0x989: V940 = 0x8ac
0x98c: V941 = 0xd44
0x98f: JUMP 0xd44
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8ac]
Exit stack: [V12, 0x8ac]

================================

Block 0x990
[0x990:0x9ab]
---
Predecessors: []
Successors: []
---
0x990 JUMPDEST
0x991 PUSH1 0x40
0x993 MLOAD
0x994 PUSH1 0x1
0x996 PUSH1 0xa0
0x998 PUSH1 0x2
0x99a EXP
0x99b SUB
0x99c SWAP1
0x99d SWAP2
0x99e AND
0x99f DUP2
0x9a0 MSTORE
0x9a1 PUSH1 0x20
0x9a3 ADD
0x9a4 PUSH1 0x40
0x9a6 MLOAD
0x9a7 DUP1
0x9a8 SWAP2
0x9a9 SUB
0x9aa SWAP1
0x9ab RETURN
---
0x990: JUMPDEST 
0x991: V942 = 0x40
0x993: V943 = M[0x40]
0x994: V944 = 0x1
0x996: V945 = 0xa0
0x998: V946 = 0x2
0x99a: V947 = EXP 0x2 0xa0
0x99b: V948 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99e: V949 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x9a0: M[V943] = V949
0x9a1: V950 = 0x20
0x9a3: V951 = ADD 0x20 V943
0x9a4: V952 = 0x40
0x9a6: V953 = M[0x40]
0x9a9: V954 = SUB V951 V953
0x9ab: RETURN V953 V954
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9ac
[0x9ac:0x9b2]
---
Predecessors: [0xa9]
Successors: [0x9b3, 0x9b7]
---
0x9ac JUMPDEST
0x9ad CALLVALUE
0x9ae ISZERO
0x9af PUSH2 0x9b7
0x9b2 JUMPI
---
0x9ac: JUMPDEST 
0x9ad: V955 = CALLVALUE
0x9ae: V956 = ISZERO V955
0x9af: V957 = 0x9b7
0x9b2: JUMPI 0x9b7 V956
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9b3
[0x9b3:0x9b6]
---
Predecessors: [0x9ac]
Successors: []
---
0x9b3 PUSH1 0x0
0x9b5 DUP1
0x9b6 REVERT
---
0x9b3: V958 = 0x0
0x9b6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9b7
[0x9b7:0x9ca]
---
Predecessors: [0x9ac]
Successors: [0xd53]
---
0x9b7 JUMPDEST
0x9b8 PUSH2 0x800
0x9bb PUSH1 0x1
0x9bd PUSH1 0xa0
0x9bf PUSH1 0x2
0x9c1 EXP
0x9c2 SUB
0x9c3 PUSH1 0x4
0x9c5 CALLDATALOAD
0x9c6 AND
0x9c7 PUSH2 0xd53
0x9ca JUMP
---
0x9b7: JUMPDEST 
0x9b8: V959 = 0x800
0x9bb: V960 = 0x1
0x9bd: V961 = 0xa0
0x9bf: V962 = 0x2
0x9c1: V963 = EXP 0x2 0xa0
0x9c2: V964 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c3: V965 = 0x4
0x9c5: V966 = CALLDATALOAD 0x4
0x9c6: V967 = AND V966 0xffffffffffffffffffffffffffffffffffffffff
0x9c7: V968 = 0xd53
0x9ca: JUMP 0xd53
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800, V967]
Exit stack: [V12, 0x800, V967]

================================

Block 0x9cb
[0x9cb:0x9dc]
---
Predecessors: []
Successors: []
---
0x9cb JUMPDEST
0x9cc PUSH1 0x40
0x9ce MLOAD
0x9cf SWAP1
0x9d0 DUP2
0x9d1 MSTORE
0x9d2 PUSH1 0x20
0x9d4 ADD
0x9d5 PUSH1 0x40
0x9d7 MLOAD
0x9d8 DUP1
0x9d9 SWAP2
0x9da SUB
0x9db SWAP1
0x9dc RETURN
---
0x9cb: JUMPDEST 
0x9cc: V969 = 0x40
0x9ce: V970 = M[0x40]
0x9d1: M[V970] = S0
0x9d2: V971 = 0x20
0x9d4: V972 = ADD 0x20 V970
0x9d5: V973 = 0x40
0x9d7: V974 = M[0x40]
0x9da: V975 = SUB V972 V974
0x9dc: RETURN V974 V975
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9dd
[0x9dd:0x9e3]
---
Predecessors: [0xb4]
Successors: [0x9e4, 0x9e8]
---
0x9dd JUMPDEST
0x9de CALLVALUE
0x9df ISZERO
0x9e0 PUSH2 0x9e8
0x9e3 JUMPI
---
0x9dd: JUMPDEST 
0x9de: V976 = CALLVALUE
0x9df: V977 = ISZERO V976
0x9e0: V978 = 0x9e8
0x9e3: JUMPI 0x9e8 V977
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9e4
[0x9e4:0x9e7]
---
Predecessors: [0x9dd]
Successors: []
---
0x9e4 PUSH1 0x0
0x9e6 DUP1
0x9e7 REVERT
---
0x9e4: V979 = 0x0
0x9e7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9e8
[0x9e8:0x9ef]
---
Predecessors: [0x9dd]
Successors: [0xd65]
---
0x9e8 JUMPDEST
0x9e9 PUSH2 0x800
0x9ec PUSH2 0xd65
0x9ef JUMP
---
0x9e8: JUMPDEST 
0x9e9: V980 = 0x800
0x9ec: V981 = 0xd65
0x9ef: JUMP 0xd65
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800]
Exit stack: [V12, 0x800]

================================

Block 0x9f0
[0x9f0:0xa01]
---
Predecessors: []
Successors: []
---
0x9f0 JUMPDEST
0x9f1 PUSH1 0x40
0x9f3 MLOAD
0x9f4 SWAP1
0x9f5 DUP2
0x9f6 MSTORE
0x9f7 PUSH1 0x20
0x9f9 ADD
0x9fa PUSH1 0x40
0x9fc MLOAD
0x9fd DUP1
0x9fe SWAP2
0x9ff SUB
0xa00 SWAP1
0xa01 RETURN
---
0x9f0: JUMPDEST 
0x9f1: V982 = 0x40
0x9f3: V983 = M[0x40]
0x9f6: M[V983] = S0
0x9f7: V984 = 0x20
0x9f9: V985 = ADD 0x20 V983
0x9fa: V986 = 0x40
0x9fc: V987 = M[0x40]
0x9ff: V988 = SUB V985 V987
0xa01: RETURN V987 V988
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa02
[0xa02:0xa08]
---
Predecessors: [0xbf]
Successors: [0xa09, 0xa0d]
---
0xa02 JUMPDEST
0xa03 CALLVALUE
0xa04 ISZERO
0xa05 PUSH2 0xa0d
0xa08 JUMPI
---
0xa02: JUMPDEST 
0xa03: V989 = CALLVALUE
0xa04: V990 = ISZERO V989
0xa05: V991 = 0xa0d
0xa08: JUMPI 0xa0d V990
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa09
[0xa09:0xa0c]
---
Predecessors: [0xa02]
Successors: []
---
0xa09 PUSH1 0x0
0xa0b DUP1
0xa0c REVERT
---
0xa09: V992 = 0x0
0xa0c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa0d
[0xa0d:0xa14]
---
Predecessors: [0xa02]
Successors: [0xd6b]
---
0xa0d JUMPDEST
0xa0e PUSH2 0x800
0xa11 PUSH2 0xd6b
0xa14 JUMP
---
0xa0d: JUMPDEST 
0xa0e: V993 = 0x800
0xa11: V994 = 0xd6b
0xa14: JUMP 0xd6b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800]
Exit stack: [V12, 0x800]

================================

Block 0xa15
[0xa15:0xa26]
---
Predecessors: []
Successors: []
---
0xa15 JUMPDEST
0xa16 PUSH1 0x40
0xa18 MLOAD
0xa19 SWAP1
0xa1a DUP2
0xa1b MSTORE
0xa1c PUSH1 0x20
0xa1e ADD
0xa1f PUSH1 0x40
0xa21 MLOAD
0xa22 DUP1
0xa23 SWAP2
0xa24 SUB
0xa25 SWAP1
0xa26 RETURN
---
0xa15: JUMPDEST 
0xa16: V995 = 0x40
0xa18: V996 = M[0x40]
0xa1b: M[V996] = S0
0xa1c: V997 = 0x20
0xa1e: V998 = ADD 0x20 V996
0xa1f: V999 = 0x40
0xa21: V1000 = M[0x40]
0xa24: V1001 = SUB V998 V1000
0xa26: RETURN V1000 V1001
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa27
[0xa27:0xa2d]
---
Predecessors: [0xca]
Successors: [0xa2e, 0xa32]
---
0xa27 JUMPDEST
0xa28 CALLVALUE
0xa29 ISZERO
0xa2a PUSH2 0xa32
0xa2d JUMPI
---
0xa27: JUMPDEST 
0xa28: V1002 = CALLVALUE
0xa29: V1003 = ISZERO V1002
0xa2a: V1004 = 0xa32
0xa2d: JUMPI 0xa32 V1003
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa2e
[0xa2e:0xa31]
---
Predecessors: [0xa27]
Successors: []
---
0xa2e PUSH1 0x0
0xa30 DUP1
0xa31 REVERT
---
0xa2e: V1005 = 0x0
0xa31: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa32
[0xa32:0xa39]
---
Predecessors: [0xa27]
Successors: [0xd71]
---
0xa32 JUMPDEST
0xa33 PUSH2 0x800
0xa36 PUSH2 0xd71
0xa39 JUMP
---
0xa32: JUMPDEST 
0xa33: V1006 = 0x800
0xa36: V1007 = 0xd71
0xa39: JUMP 0xd71
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800]
Exit stack: [V12, 0x800]

================================

Block 0xa3a
[0xa3a:0xa4b]
---
Predecessors: []
Successors: []
---
0xa3a JUMPDEST
0xa3b PUSH1 0x40
0xa3d MLOAD
0xa3e SWAP1
0xa3f DUP2
0xa40 MSTORE
0xa41 PUSH1 0x20
0xa43 ADD
0xa44 PUSH1 0x40
0xa46 MLOAD
0xa47 DUP1
0xa48 SWAP2
0xa49 SUB
0xa4a SWAP1
0xa4b RETURN
---
0xa3a: JUMPDEST 
0xa3b: V1008 = 0x40
0xa3d: V1009 = M[0x40]
0xa40: M[V1009] = S0
0xa41: V1010 = 0x20
0xa43: V1011 = ADD 0x20 V1009
0xa44: V1012 = 0x40
0xa46: V1013 = M[0x40]
0xa49: V1014 = SUB V1011 V1013
0xa4b: RETURN V1013 V1014
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa4c
[0xa4c:0xa52]
---
Predecessors: [0xd5]
Successors: [0xa53, 0xa57]
---
0xa4c JUMPDEST
0xa4d CALLVALUE
0xa4e ISZERO
0xa4f PUSH2 0xa57
0xa52 JUMPI
---
0xa4c: JUMPDEST 
0xa4d: V1015 = CALLVALUE
0xa4e: V1016 = ISZERO V1015
0xa4f: V1017 = 0xa57
0xa52: JUMPI 0xa57 V1016
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa53
[0xa53:0xa56]
---
Predecessors: [0xa4c]
Successors: []
---
0xa53 PUSH1 0x0
0xa55 DUP1
0xa56 REVERT
---
0xa53: V1018 = 0x0
0xa56: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa57
[0xa57:0xa5e]
---
Predecessors: [0xa4c]
Successors: [0xd77]
---
0xa57 JUMPDEST
0xa58 PUSH2 0x800
0xa5b PUSH2 0xd77
0xa5e JUMP
---
0xa57: JUMPDEST 
0xa58: V1019 = 0x800
0xa5b: V1020 = 0xd77
0xa5e: JUMP 0xd77
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800]
Exit stack: [V12, 0x800]

================================

Block 0xa5f
[0xa5f:0xa70]
---
Predecessors: []
Successors: []
---
0xa5f JUMPDEST
0xa60 PUSH1 0x40
0xa62 MLOAD
0xa63 SWAP1
0xa64 DUP2
0xa65 MSTORE
0xa66 PUSH1 0x20
0xa68 ADD
0xa69 PUSH1 0x40
0xa6b MLOAD
0xa6c DUP1
0xa6d SWAP2
0xa6e SUB
0xa6f SWAP1
0xa70 RETURN
---
0xa5f: JUMPDEST 
0xa60: V1021 = 0x40
0xa62: V1022 = M[0x40]
0xa65: M[V1022] = S0
0xa66: V1023 = 0x20
0xa68: V1024 = ADD 0x20 V1022
0xa69: V1025 = 0x40
0xa6b: V1026 = M[0x40]
0xa6e: V1027 = SUB V1024 V1026
0xa70: RETURN V1026 V1027
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa71
[0xa71:0xa77]
---
Predecessors: [0xe0]
Successors: [0xa78, 0xa7c]
---
0xa71 JUMPDEST
0xa72 CALLVALUE
0xa73 ISZERO
0xa74 PUSH2 0xa7c
0xa77 JUMPI
---
0xa71: JUMPDEST 
0xa72: V1028 = CALLVALUE
0xa73: V1029 = ISZERO V1028
0xa74: V1030 = 0xa7c
0xa77: JUMPI 0xa7c V1029
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa78
[0xa78:0xa7b]
---
Predecessors: [0xa71]
Successors: []
---
0xa78 PUSH1 0x0
0xa7a DUP1
0xa7b REVERT
---
0xa78: V1031 = 0x0
0xa7b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa7c
[0xa7c:0xa83]
---
Predecessors: [0xa71]
Successors: [0xd7d]
---
0xa7c JUMPDEST
0xa7d PUSH2 0x800
0xa80 PUSH2 0xd7d
0xa83 JUMP
---
0xa7c: JUMPDEST 
0xa7d: V1032 = 0x800
0xa80: V1033 = 0xd7d
0xa83: JUMP 0xd7d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800]
Exit stack: [V12, 0x800]

================================

Block 0xa84
[0xa84:0xa95]
---
Predecessors: []
Successors: []
---
0xa84 JUMPDEST
0xa85 PUSH1 0x40
0xa87 MLOAD
0xa88 SWAP1
0xa89 DUP2
0xa8a MSTORE
0xa8b PUSH1 0x20
0xa8d ADD
0xa8e PUSH1 0x40
0xa90 MLOAD
0xa91 DUP1
0xa92 SWAP2
0xa93 SUB
0xa94 SWAP1
0xa95 RETURN
---
0xa84: JUMPDEST 
0xa85: V1034 = 0x40
0xa87: V1035 = M[0x40]
0xa8a: M[V1035] = S0
0xa8b: V1036 = 0x20
0xa8d: V1037 = ADD 0x20 V1035
0xa8e: V1038 = 0x40
0xa90: V1039 = M[0x40]
0xa93: V1040 = SUB V1037 V1039
0xa95: RETURN V1039 V1040
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa96
[0xa96:0xa9c]
---
Predecessors: [0xeb]
Successors: [0xa9d, 0xaa1]
---
0xa96 JUMPDEST
0xa97 CALLVALUE
0xa98 ISZERO
0xa99 PUSH2 0xaa1
0xa9c JUMPI
---
0xa96: JUMPDEST 
0xa97: V1041 = CALLVALUE
0xa98: V1042 = ISZERO V1041
0xa99: V1043 = 0xaa1
0xa9c: JUMPI 0xaa1 V1042
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa9d
[0xa9d:0xaa0]
---
Predecessors: [0xa96]
Successors: []
---
0xa9d PUSH1 0x0
0xa9f DUP1
0xaa0 REVERT
---
0xa9d: V1044 = 0x0
0xaa0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xaa1
[0xaa1:0xaa8]
---
Predecessors: [0xa96]
Successors: [0xd83]
---
0xaa1 JUMPDEST
0xaa2 PUSH2 0x800
0xaa5 PUSH2 0xd83
0xaa8 JUMP
---
0xaa1: JUMPDEST 
0xaa2: V1045 = 0x800
0xaa5: V1046 = 0xd83
0xaa8: JUMP 0xd83
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800]
Exit stack: [V12, 0x800]

================================

Block 0xaa9
[0xaa9:0xaba]
---
Predecessors: []
Successors: []
---
0xaa9 JUMPDEST
0xaaa PUSH1 0x40
0xaac MLOAD
0xaad SWAP1
0xaae DUP2
0xaaf MSTORE
0xab0 PUSH1 0x20
0xab2 ADD
0xab3 PUSH1 0x40
0xab5 MLOAD
0xab6 DUP1
0xab7 SWAP2
0xab8 SUB
0xab9 SWAP1
0xaba RETURN
---
0xaa9: JUMPDEST 
0xaaa: V1047 = 0x40
0xaac: V1048 = M[0x40]
0xaaf: M[V1048] = S0
0xab0: V1049 = 0x20
0xab2: V1050 = ADD 0x20 V1048
0xab3: V1051 = 0x40
0xab5: V1052 = M[0x40]
0xab8: V1053 = SUB V1050 V1052
0xaba: RETURN V1052 V1053
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xabb
[0xabb:0xac1]
---
Predecessors: [0xf6]
Successors: [0xac2, 0xac6]
---
0xabb JUMPDEST
0xabc CALLVALUE
0xabd ISZERO
0xabe PUSH2 0xac6
0xac1 JUMPI
---
0xabb: JUMPDEST 
0xabc: V1054 = CALLVALUE
0xabd: V1055 = ISZERO V1054
0xabe: V1056 = 0xac6
0xac1: JUMPI 0xac6 V1055
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xac2
[0xac2:0xac5]
---
Predecessors: [0xabb]
Successors: []
---
0xac2 PUSH1 0x0
0xac4 DUP1
0xac5 REVERT
---
0xac2: V1057 = 0x0
0xac5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xac6
[0xac6:0xacd]
---
Predecessors: [0xabb]
Successors: [0xd89]
---
0xac6 JUMPDEST
0xac7 PUSH2 0x800
0xaca PUSH2 0xd89
0xacd JUMP
---
0xac6: JUMPDEST 
0xac7: V1058 = 0x800
0xaca: V1059 = 0xd89
0xacd: JUMP 0xd89
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800]
Exit stack: [V12, 0x800]

================================

Block 0xace
[0xace:0xadf]
---
Predecessors: []
Successors: []
---
0xace JUMPDEST
0xacf PUSH1 0x40
0xad1 MLOAD
0xad2 SWAP1
0xad3 DUP2
0xad4 MSTORE
0xad5 PUSH1 0x20
0xad7 ADD
0xad8 PUSH1 0x40
0xada MLOAD
0xadb DUP1
0xadc SWAP2
0xadd SUB
0xade SWAP1
0xadf RETURN
---
0xace: JUMPDEST 
0xacf: V1060 = 0x40
0xad1: V1061 = M[0x40]
0xad4: M[V1061] = S0
0xad5: V1062 = 0x20
0xad7: V1063 = ADD 0x20 V1061
0xad8: V1064 = 0x40
0xada: V1065 = M[0x40]
0xadd: V1066 = SUB V1063 V1065
0xadf: RETURN V1065 V1066
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xae0
[0xae0:0xae6]
---
Predecessors: [0x101]
Successors: [0xae7, 0xaeb]
---
0xae0 JUMPDEST
0xae1 CALLVALUE
0xae2 ISZERO
0xae3 PUSH2 0xaeb
0xae6 JUMPI
---
0xae0: JUMPDEST 
0xae1: V1067 = CALLVALUE
0xae2: V1068 = ISZERO V1067
0xae3: V1069 = 0xaeb
0xae6: JUMPI 0xaeb V1068
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xae7
[0xae7:0xaea]
---
Predecessors: [0xae0]
Successors: []
---
0xae7 PUSH1 0x0
0xae9 DUP1
0xaea REVERT
---
0xae7: V1070 = 0x0
0xaea: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xaeb
[0xaeb:0xaf2]
---
Predecessors: [0xae0]
Successors: [0xd8f]
---
0xaeb JUMPDEST
0xaec PUSH2 0x7eb
0xaef PUSH2 0xd8f
0xaf2 JUMP
---
0xaeb: JUMPDEST 
0xaec: V1071 = 0x7eb
0xaef: V1072 = 0xd8f
0xaf2: JUMP 0xd8f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7eb]
Exit stack: [V12, 0x7eb]

================================

Block 0xaf3
[0xaf3:0xaf4]
---
Predecessors: []
Successors: []
---
0xaf3 JUMPDEST
0xaf4 STOP
---
0xaf3: JUMPDEST 
0xaf4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaf5
[0xaf5:0xafb]
---
Predecessors: [0x10c]
Successors: [0xafc, 0xb00]
---
0xaf5 JUMPDEST
0xaf6 CALLVALUE
0xaf7 ISZERO
0xaf8 PUSH2 0xb00
0xafb JUMPI
---
0xaf5: JUMPDEST 
0xaf6: V1073 = CALLVALUE
0xaf7: V1074 = ISZERO V1073
0xaf8: V1075 = 0xb00
0xafb: JUMPI 0xb00 V1074
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xafc
[0xafc:0xaff]
---
Predecessors: [0xaf5]
Successors: []
---
0xafc PUSH1 0x0
0xafe DUP1
0xaff REVERT
---
0xafc: V1076 = 0x0
0xaff: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb00
[0xb00:0xb07]
---
Predecessors: [0xaf5]
Successors: [0xdb6]
---
0xb00 JUMPDEST
0xb01 PUSH2 0x7eb
0xb04 PUSH2 0xdb6
0xb07 JUMP
---
0xb00: JUMPDEST 
0xb01: V1077 = 0x7eb
0xb04: V1078 = 0xdb6
0xb07: JUMP 0xdb6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7eb]
Exit stack: [V12, 0x7eb]

================================

Block 0xb08
[0xb08:0xb09]
---
Predecessors: []
Successors: []
---
0xb08 JUMPDEST
0xb09 STOP
---
0xb08: JUMPDEST 
0xb09: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb0a
[0xb0a:0xb10]
---
Predecessors: [0x117]
Successors: [0xb11, 0xb15]
---
0xb0a JUMPDEST
0xb0b CALLVALUE
0xb0c ISZERO
0xb0d PUSH2 0xb15
0xb10 JUMPI
---
0xb0a: JUMPDEST 
0xb0b: V1079 = CALLVALUE
0xb0c: V1080 = ISZERO V1079
0xb0d: V1081 = 0xb15
0xb10: JUMPI 0xb15 V1080
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb11
[0xb11:0xb14]
---
Predecessors: [0xb0a]
Successors: []
---
0xb11 PUSH1 0x0
0xb13 DUP1
0xb14 REVERT
---
0xb11: V1082 = 0x0
0xb14: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb15
[0xb15:0xb1c]
---
Predecessors: [0xb0a]
Successors: [0xde0]
---
0xb15 JUMPDEST
0xb16 PUSH2 0x800
0xb19 PUSH2 0xde0
0xb1c JUMP
---
0xb15: JUMPDEST 
0xb16: V1083 = 0x800
0xb19: V1084 = 0xde0
0xb1c: JUMP 0xde0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800]
Exit stack: [V12, 0x800]

================================

Block 0xb1d
[0xb1d:0xb2e]
---
Predecessors: []
Successors: []
---
0xb1d JUMPDEST
0xb1e PUSH1 0x40
0xb20 MLOAD
0xb21 SWAP1
0xb22 DUP2
0xb23 MSTORE
0xb24 PUSH1 0x20
0xb26 ADD
0xb27 PUSH1 0x40
0xb29 MLOAD
0xb2a DUP1
0xb2b SWAP2
0xb2c SUB
0xb2d SWAP1
0xb2e RETURN
---
0xb1d: JUMPDEST 
0xb1e: V1085 = 0x40
0xb20: V1086 = M[0x40]
0xb23: M[V1086] = S0
0xb24: V1087 = 0x20
0xb26: V1088 = ADD 0x20 V1086
0xb27: V1089 = 0x40
0xb29: V1090 = M[0x40]
0xb2c: V1091 = SUB V1088 V1090
0xb2e: RETURN V1090 V1091
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb2f
[0xb2f:0xb35]
---
Predecessors: [0x122]
Successors: [0xb36, 0xb3a]
---
0xb2f JUMPDEST
0xb30 CALLVALUE
0xb31 ISZERO
0xb32 PUSH2 0xb3a
0xb35 JUMPI
---
0xb2f: JUMPDEST 
0xb30: V1092 = CALLVALUE
0xb31: V1093 = ISZERO V1092
0xb32: V1094 = 0xb3a
0xb35: JUMPI 0xb3a V1093
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb36
[0xb36:0xb39]
---
Predecessors: [0xb2f]
Successors: []
---
0xb36 PUSH1 0x0
0xb38 DUP1
0xb39 REVERT
---
0xb36: V1095 = 0x0
0xb39: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb3a
[0xb3a:0xb41]
---
Predecessors: [0xb2f]
Successors: [0xde6]
---
0xb3a JUMPDEST
0xb3b PUSH2 0x800
0xb3e PUSH2 0xde6
0xb41 JUMP
---
0xb3a: JUMPDEST 
0xb3b: V1096 = 0x800
0xb3e: V1097 = 0xde6
0xb41: JUMP 0xde6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800]
Exit stack: [V12, 0x800]

================================

Block 0xb42
[0xb42:0xb53]
---
Predecessors: []
Successors: []
---
0xb42 JUMPDEST
0xb43 PUSH1 0x40
0xb45 MLOAD
0xb46 SWAP1
0xb47 DUP2
0xb48 MSTORE
0xb49 PUSH1 0x20
0xb4b ADD
0xb4c PUSH1 0x40
0xb4e MLOAD
0xb4f DUP1
0xb50 SWAP2
0xb51 SUB
0xb52 SWAP1
0xb53 RETURN
---
0xb42: JUMPDEST 
0xb43: V1098 = 0x40
0xb45: V1099 = M[0x40]
0xb48: M[V1099] = S0
0xb49: V1100 = 0x20
0xb4b: V1101 = ADD 0x20 V1099
0xb4c: V1102 = 0x40
0xb4e: V1103 = M[0x40]
0xb51: V1104 = SUB V1101 V1103
0xb53: RETURN V1103 V1104
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb54
[0xb54:0xb5a]
---
Predecessors: [0x12d]
Successors: [0xb5b, 0xb5f]
---
0xb54 JUMPDEST
0xb55 CALLVALUE
0xb56 ISZERO
0xb57 PUSH2 0xb5f
0xb5a JUMPI
---
0xb54: JUMPDEST 
0xb55: V1105 = CALLVALUE
0xb56: V1106 = ISZERO V1105
0xb57: V1107 = 0xb5f
0xb5a: JUMPI 0xb5f V1106
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb5b
[0xb5b:0xb5e]
---
Predecessors: [0xb54]
Successors: []
---
0xb5b PUSH1 0x0
0xb5d DUP1
0xb5e REVERT
---
0xb5b: V1108 = 0x0
0xb5e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb5f
[0xb5f:0xb66]
---
Predecessors: [0xb54]
Successors: [0xdec]
---
0xb5f JUMPDEST
0xb60 PUSH2 0x800
0xb63 PUSH2 0xdec
0xb66 JUMP
---
0xb5f: JUMPDEST 
0xb60: V1109 = 0x800
0xb63: V1110 = 0xdec
0xb66: JUMP 0xdec
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x800]
Exit stack: [V12, 0x800]

================================

Block 0xb67
[0xb67:0xb78]
---
Predecessors: []
Successors: []
---
0xb67 JUMPDEST
0xb68 PUSH1 0x40
0xb6a MLOAD
0xb6b SWAP1
0xb6c DUP2
0xb6d MSTORE
0xb6e PUSH1 0x20
0xb70 ADD
0xb71 PUSH1 0x40
0xb73 MLOAD
0xb74 DUP1
0xb75 SWAP2
0xb76 SUB
0xb77 SWAP1
0xb78 RETURN
---
0xb67: JUMPDEST 
0xb68: V1111 = 0x40
0xb6a: V1112 = M[0x40]
0xb6d: M[V1112] = S0
0xb6e: V1113 = 0x20
0xb70: V1114 = ADD 0x20 V1112
0xb71: V1115 = 0x40
0xb73: V1116 = M[0x40]
0xb76: V1117 = SUB V1114 V1116
0xb78: RETURN V1116 V1117
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb79
[0xb79:0xb7f]
---
Predecessors: [0x138]
Successors: [0xb80, 0xb84]
---
0xb79 JUMPDEST
0xb7a CALLVALUE
0xb7b ISZERO
0xb7c PUSH2 0xb84
0xb7f JUMPI
---
0xb79: JUMPDEST 
0xb7a: V1118 = CALLVALUE
0xb7b: V1119 = ISZERO V1118
0xb7c: V1120 = 0xb84
0xb7f: JUMPI 0xb84 V1119
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb80
[0xb80:0xb83]
---
Predecessors: [0xb79]
Successors: []
---
0xb80 PUSH1 0x0
0xb82 DUP1
0xb83 REVERT
---
0xb80: V1121 = 0x0
0xb83: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb84
[0xb84:0xb8b]
---
Predecessors: [0xb79]
Successors: [0xdf2]
---
0xb84 JUMPDEST
0xb85 PUSH2 0x969
0xb88 PUSH2 0xdf2
0xb8b JUMP
---
0xb84: JUMPDEST 
0xb85: V1122 = 0x969
0xb88: V1123 = 0xdf2
0xb8b: JUMP 0xdf2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x969]
Exit stack: [V12, 0x969]

================================

Block 0xb8c
[0xb8c:0xb9f]
---
Predecessors: []
Successors: []
---
0xb8c JUMPDEST
0xb8d PUSH1 0x40
0xb8f MLOAD
0xb90 SWAP1
0xb91 ISZERO
0xb92 ISZERO
0xb93 DUP2
0xb94 MSTORE
0xb95 PUSH1 0x20
0xb97 ADD
0xb98 PUSH1 0x40
0xb9a MLOAD
0xb9b DUP1
0xb9c SWAP2
0xb9d SUB
0xb9e SWAP1
0xb9f RETURN
---
0xb8c: JUMPDEST 
0xb8d: V1124 = 0x40
0xb8f: V1125 = M[0x40]
0xb91: V1126 = ISZERO S0
0xb92: V1127 = ISZERO V1126
0xb94: M[V1125] = V1127
0xb95: V1128 = 0x20
0xb97: V1129 = ADD 0x20 V1125
0xb98: V1130 = 0x40
0xb9a: V1131 = M[0x40]
0xb9d: V1132 = SUB V1129 V1131
0xb9f: RETURN V1131 V1132
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xba0
[0xba0:0xba6]
---
Predecessors: [0x143]
Successors: [0xba7, 0xbab]
---
0xba0 JUMPDEST
0xba1 CALLVALUE
0xba2 ISZERO
0xba3 PUSH2 0xbab
0xba6 JUMPI
---
0xba0: JUMPDEST 
0xba1: V1133 = CALLVALUE
0xba2: V1134 = ISZERO V1133
0xba3: V1135 = 0xbab
0xba6: JUMPI 0xbab V1134
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xba7
[0xba7:0xbaa]
---
Predecessors: [0xba0]
Successors: []
---
0xba7 PUSH1 0x0
0xba9 DUP1
0xbaa REVERT
---
0xba7: V1136 = 0x0
0xbaa: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbab
[0xbab:0xbb2]
---
Predecessors: [0xba0]
Successors: [0xe00]
---
0xbab JUMPDEST
0xbac PUSH2 0x969
0xbaf PUSH2 0xe00
0xbb2 JUMP
---
0xbab: JUMPDEST 
0xbac: V1137 = 0x969
0xbaf: V1138 = 0xe00
0xbb2: JUMP 0xe00
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x969]
Exit stack: [V12, 0x969]

================================

Block 0xbb3
[0xbb3:0xbc6]
---
Predecessors: []
Successors: []
---
0xbb3 JUMPDEST
0xbb4 PUSH1 0x40
0xbb6 MLOAD
0xbb7 SWAP1
0xbb8 ISZERO
0xbb9 ISZERO
0xbba DUP2
0xbbb MSTORE
0xbbc PUSH1 0x20
0xbbe ADD
0xbbf PUSH1 0x40
0xbc1 MLOAD
0xbc2 DUP1
0xbc3 SWAP2
0xbc4 SUB
0xbc5 SWAP1
0xbc6 RETURN
---
0xbb3: JUMPDEST 
0xbb4: V1139 = 0x40
0xbb6: V1140 = M[0x40]
0xbb8: V1141 = ISZERO S0
0xbb9: V1142 = ISZERO V1141
0xbbb: M[V1140] = V1142
0xbbc: V1143 = 0x20
0xbbe: V1144 = ADD 0x20 V1140
0xbbf: V1145 = 0x40
0xbc1: V1146 = M[0x40]
0xbc4: V1147 = SUB V1144 V1146
0xbc6: RETURN V1146 V1147
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xbc7
[0xbc7:0xbcd]
---
Predecessors: [0x14e]
Successors: [0xbce, 0xbd2]
---
0xbc7 JUMPDEST
0xbc8 CALLVALUE
0xbc9 ISZERO
0xbca PUSH2 0xbd2
0xbcd JUMPI
---
0xbc7: JUMPDEST 
0xbc8: V1148 = CALLVALUE
0xbc9: V1149 = ISZERO V1148
0xbca: V1150 = 0xbd2
0xbcd: JUMPI 0xbd2 V1149
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbce
[0xbce:0xbd1]
---
Predecessors: [0xbc7]
Successors: []
---
0xbce PUSH1 0x0
0xbd0 DUP1
0xbd1 REVERT
---
0xbce: V1151 = 0x0
0xbd1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbd2
[0xbd2:0xbd9]
---
Predecessors: [0xbc7]
Successors: [0xe09]
---
0xbd2 JUMPDEST
0xbd3 PUSH2 0x7eb
0xbd6 PUSH2 0xe09
0xbd9 JUMP
---
0xbd2: JUMPDEST 
0xbd3: V1152 = 0x7eb
0xbd6: V1153 = 0xe09
0xbd9: JUMP 0xe09
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7eb]
Exit stack: [V12, 0x7eb]

================================

Block 0xbda
[0xbda:0xbdb]
---
Predecessors: []
Successors: []
---
0xbda JUMPDEST
0xbdb STOP
---
0xbda: JUMPDEST 
0xbdb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbdc
[0xbdc:0xbe2]
---
Predecessors: [0x159]
Successors: [0xbe3, 0xbe7]
---
0xbdc JUMPDEST
0xbdd CALLVALUE
0xbde ISZERO
0xbdf PUSH2 0xbe7
0xbe2 JUMPI
---
0xbdc: JUMPDEST 
0xbdd: V1154 = CALLVALUE
0xbde: V1155 = ISZERO V1154
0xbdf: V1156 = 0xbe7
0xbe2: JUMPI 0xbe7 V1155
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbe3
[0xbe3:0xbe6]
---
Predecessors: [0xbdc]
Successors: []
---
0xbe3 PUSH1 0x0
0xbe5 DUP1
0xbe6 REVERT
---
0xbe3: V1157 = 0x0
0xbe6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbe7
[0xbe7:0xbee]
---
Predecessors: [0xbdc]
Successors: [0xe35]
---
0xbe7 JUMPDEST
0xbe8 PUSH2 0x7eb
0xbeb PUSH2 0xe35
0xbee JUMP
---
0xbe7: JUMPDEST 
0xbe8: V1158 = 0x7eb
0xbeb: V1159 = 0xe35
0xbee: JUMP 0xe35
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7eb]
Exit stack: [V12, 0x7eb]

================================

Block 0xbef
[0xbef:0xbf0]
---
Predecessors: []
Successors: []
---
0xbef JUMPDEST
0xbf0 STOP
---
0xbef: JUMPDEST 
0xbf0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbf1
[0xbf1:0xbfa]
---
Predecessors: [0x7e3]
Successors: [0xbfb, 0xc38]
---
0xbf1 JUMPDEST
0xbf2 PUSH1 0x2
0xbf4 SLOAD
0xbf5 TIMESTAMP
0xbf6 LT
0xbf7 PUSH2 0xc38
0xbfa JUMPI
---
0xbf1: JUMPDEST 
0xbf2: V1160 = 0x2
0xbf4: V1161 = S[0x2]
0xbf5: V1162 = TIMESTAMP
0xbf6: V1163 = LT V1162 V1161
0xbf7: V1164 = 0xc38
0xbfa: JUMPI 0xc38 V1163
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xbfb
[0xbfb:0xc07]
---
Predecessors: [0xbf1]
Successors: [0xc08, 0xc15]
---
0xbfb PUSH1 0x5
0xbfd SLOAD
0xbfe PUSH1 0x8
0xc00 SLOAD
0xc01 LT
0xc02 ISZERO
0xc03 DUP1
0xc04 PUSH2 0xc15
0xc07 JUMPI
---
0xbfb: V1165 = 0x5
0xbfd: V1166 = S[0x5]
0xbfe: V1167 = 0x8
0xc00: V1168 = S[0x8]
0xc01: V1169 = LT V1168 V1166
0xc02: V1170 = ISZERO V1169
0xc04: V1171 = 0xc15
0xc07: JUMPI 0xc15 V1170
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: [V1170]
Exit stack: [V12, 0x7eb, V1170]

================================

Block 0xc08
[0xc08:0xc14]
---
Predecessors: [0xbfb]
Successors: [0xc15]
---
0xc08 POP
0xc09 PUSH1 0x14
0xc0b SLOAD
0xc0c PUSH3 0x10000
0xc10 SWAP1
0xc11 DIV
0xc12 PUSH1 0xff
0xc14 AND
---
0xc09: V1172 = 0x14
0xc0b: V1173 = S[0x14]
0xc0c: V1174 = 0x10000
0xc11: V1175 = DIV V1173 0x10000
0xc12: V1176 = 0xff
0xc14: V1177 = AND 0xff V1175
---
Entry stack: [V12, 0x7eb, V1170]
Stack pops: 1
Stack additions: [V1177]
Exit stack: [V12, 0x7eb, V1177]

================================

Block 0xc15
[0xc15:0xc1a]
---
Predecessors: [0xbfb, 0xc08]
Successors: [0xc1b, 0xc28]
---
0xc15 JUMPDEST
0xc16 ISZERO
0xc17 PUSH2 0xc28
0xc1a JUMPI
---
0xc15: JUMPDEST 
0xc16: V1178 = ISZERO S0
0xc17: V1179 = 0xc28
0xc1a: JUMPI 0xc28 V1178
---
Entry stack: [V12, 0x7eb, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xc1b
[0xc1b:0xc27]
---
Predecessors: [0xc15]
Successors: [0xc28]
---
0xc1b PUSH1 0x14
0xc1d DUP1
0xc1e SLOAD
0xc1f PUSH1 0xff
0xc21 NOT
0xc22 AND
0xc23 PUSH1 0x1
0xc25 OR
0xc26 SWAP1
0xc27 SSTORE
---
0xc1b: V1180 = 0x14
0xc1e: V1181 = S[0x14]
0xc1f: V1182 = 0xff
0xc21: V1183 = NOT 0xff
0xc22: V1184 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1181
0xc23: V1185 = 0x1
0xc25: V1186 = OR 0x1 V1184
0xc27: S[0x14] = V1186
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xc28
[0xc28:0xc37]
---
Predecessors: [0xc15, 0xc1b]
Successors: [0xc38]
---
0xc28 JUMPDEST
0xc29 PUSH1 0x14
0xc2b DUP1
0xc2c SLOAD
0xc2d PUSH2 0xff00
0xc30 NOT
0xc31 AND
0xc32 PUSH2 0x100
0xc35 OR
0xc36 SWAP1
0xc37 SSTORE
---
0xc28: JUMPDEST 
0xc29: V1187 = 0x14
0xc2c: V1188 = S[0x14]
0xc2d: V1189 = 0xff00
0xc30: V1190 = NOT 0xff00
0xc31: V1191 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1188
0xc32: V1192 = 0x100
0xc35: V1193 = OR 0x100 V1191
0xc37: S[0x14] = V1193
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xc38
[0xc38:0xc38]
---
Predecessors: [0xbf1, 0xc28, 0xd00, 0xd8f, 0xdb6, 0xe09]
Successors: [0xc39]
---
0xc38 JUMPDEST
---
0xc38: JUMPDEST 
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xc39
[0xc39:0xc39]
---
Predecessors: [0xc38]
Successors: [0xc3a]
---
0xc39 JUMPDEST
---
0xc39: JUMPDEST 
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xc3a
[0xc3a:0xc3b]
---
Predecessors: [0xc39]
Successors: [0x7eb]
---
0xc3a JUMPDEST
0xc3b JUMP
---
0xc3a: JUMPDEST 
0xc3b: JUMP 0x7eb
---
Entry stack: [V12, 0x7eb]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xc3c
[0xc3c:0xc41]
---
Predecessors: [0x7f8]
Successors: [0x800]
---
0xc3c JUMPDEST
0xc3d PUSH1 0x0
0xc3f SLOAD
0xc40 DUP2
0xc41 JUMP
---
0xc3c: JUMPDEST 
0xc3d: V1194 = 0x0
0xc3f: V1195 = S[0x0]
0xc41: JUMP 0x800
---
Entry stack: [V12, 0x800]
Stack pops: 1
Stack additions: [S0, V1195]
Exit stack: [V12, 0x800, V1195]

================================

Block 0xc42
[0xc42:0xc4b]
---
Predecessors: [0x81d]
Successors: [0xc4c, 0xccd]
---
0xc42 JUMPDEST
0xc43 PUSH1 0x2
0xc45 SLOAD
0xc46 TIMESTAMP
0xc47 LT
0xc48 PUSH2 0xccd
0xc4b JUMPI
---
0xc42: JUMPDEST 
0xc43: V1196 = 0x2
0xc45: V1197 = S[0x2]
0xc46: V1198 = TIMESTAMP
0xc47: V1199 = LT V1198 V1197
0xc48: V1200 = 0xccd
0xc4b: JUMPI 0xccd V1199
---
Entry stack: [V12, 0x7eb, V810]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, V810]

================================

Block 0xc4c
[0xc4c:0xc62]
---
Predecessors: [0xc42]
Successors: [0xc63, 0xccd]
---
0xc4c PUSH1 0x4
0xc4e SLOAD
0xc4f CALLER
0xc50 PUSH1 0x1
0xc52 PUSH1 0xa0
0xc54 PUSH1 0x2
0xc56 EXP
0xc57 SUB
0xc58 SWAP1
0xc59 DUP2
0xc5a AND
0xc5b SWAP2
0xc5c AND
0xc5d EQ
0xc5e ISZERO
0xc5f PUSH2 0xccd
0xc62 JUMPI
---
0xc4c: V1201 = 0x4
0xc4e: V1202 = S[0x4]
0xc4f: V1203 = CALLER
0xc50: V1204 = 0x1
0xc52: V1205 = 0xa0
0xc54: V1206 = 0x2
0xc56: V1207 = EXP 0x2 0xa0
0xc57: V1208 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5a: V1209 = AND 0xffffffffffffffffffffffffffffffffffffffff V1203
0xc5c: V1210 = AND V1202 0xffffffffffffffffffffffffffffffffffffffff
0xc5d: V1211 = EQ V1210 V1209
0xc5e: V1212 = ISZERO V1211
0xc5f: V1213 = 0xccd
0xc62: JUMPI 0xccd V1212
---
Entry stack: [V12, 0x7eb, V810]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, V810]

================================

Block 0xc63
[0xc63:0xcb3]
---
Predecessors: [0xc4c]
Successors: [0xcb4, 0xcb8]
---
0xc63 PUSH1 0x12
0xc65 SLOAD
0xc66 PUSH1 0x1
0xc68 PUSH1 0xa0
0xc6a PUSH1 0x2
0xc6c EXP
0xc6d SUB
0xc6e AND
0xc6f PUSH4 0xa9059cbb
0xc74 CALLER
0xc75 DUP4
0xc76 PUSH1 0x40
0xc78 MLOAD
0xc79 PUSH1 0xe0
0xc7b PUSH1 0x2
0xc7d EXP
0xc7e PUSH4 0xffffffff
0xc83 DUP6
0xc84 AND
0xc85 MUL
0xc86 DUP2
0xc87 MSTORE
0xc88 PUSH1 0x1
0xc8a PUSH1 0xa0
0xc8c PUSH1 0x2
0xc8e EXP
0xc8f SUB
0xc90 SWAP1
0xc91 SWAP3
0xc92 AND
0xc93 PUSH1 0x4
0xc95 DUP4
0xc96 ADD
0xc97 MSTORE
0xc98 PUSH1 0x24
0xc9a DUP3
0xc9b ADD
0xc9c MSTORE
0xc9d PUSH1 0x44
0xc9f ADD
0xca0 PUSH1 0x0
0xca2 PUSH1 0x40
0xca4 MLOAD
0xca5 DUP1
0xca6 DUP4
0xca7 SUB
0xca8 DUP2
0xca9 PUSH1 0x0
0xcab DUP8
0xcac DUP1
0xcad EXTCODESIZE
0xcae ISZERO
0xcaf ISZERO
0xcb0 PUSH2 0xcb8
0xcb3 JUMPI
---
0xc63: V1214 = 0x12
0xc65: V1215 = S[0x12]
0xc66: V1216 = 0x1
0xc68: V1217 = 0xa0
0xc6a: V1218 = 0x2
0xc6c: V1219 = EXP 0x2 0xa0
0xc6d: V1220 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc6e: V1221 = AND 0xffffffffffffffffffffffffffffffffffffffff V1215
0xc6f: V1222 = 0xa9059cbb
0xc74: V1223 = CALLER
0xc76: V1224 = 0x40
0xc78: V1225 = M[0x40]
0xc79: V1226 = 0xe0
0xc7b: V1227 = 0x2
0xc7d: V1228 = EXP 0x2 0xe0
0xc7e: V1229 = 0xffffffff
0xc84: V1230 = AND 0xa9059cbb 0xffffffff
0xc85: V1231 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xc87: M[V1225] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc88: V1232 = 0x1
0xc8a: V1233 = 0xa0
0xc8c: V1234 = 0x2
0xc8e: V1235 = EXP 0x2 0xa0
0xc8f: V1236 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc92: V1237 = AND V1223 0xffffffffffffffffffffffffffffffffffffffff
0xc93: V1238 = 0x4
0xc96: V1239 = ADD V1225 0x4
0xc97: M[V1239] = V1237
0xc98: V1240 = 0x24
0xc9b: V1241 = ADD V1225 0x24
0xc9c: M[V1241] = V810
0xc9d: V1242 = 0x44
0xc9f: V1243 = ADD 0x44 V1225
0xca0: V1244 = 0x0
0xca2: V1245 = 0x40
0xca4: V1246 = M[0x40]
0xca7: V1247 = SUB V1243 V1246
0xca9: V1248 = 0x0
0xcad: V1249 = EXTCODESIZE V1221
0xcae: V1250 = ISZERO V1249
0xcaf: V1251 = ISZERO V1250
0xcb0: V1252 = 0xcb8
0xcb3: JUMPI 0xcb8 V1251
---
Entry stack: [V12, 0x7eb, V810]
Stack pops: 1
Stack additions: [S0, V1221, 0xa9059cbb, V1243, 0x0, V1246, V1247, V1246, 0x0, V1221]
Exit stack: [V12, 0x7eb, V810, V1221, 0xa9059cbb, V1243, 0x0, V1246, V1247, V1246, 0x0, V1221]

================================

Block 0xcb4
[0xcb4:0xcb7]
---
Predecessors: [0xc63]
Successors: []
---
0xcb4 PUSH1 0x0
0xcb6 DUP1
0xcb7 REVERT
---
0xcb4: V1253 = 0x0
0xcb7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7eb, V810, V1221, 0xa9059cbb, V1243, 0x0, V1246, V1247, V1246, 0x0, V1221]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, V810, V1221, 0xa9059cbb, V1243, 0x0, V1246, V1247, V1246, 0x0, V1221]

================================

Block 0xcb8
[0xcb8:0xcc4]
---
Predecessors: [0xc63]
Successors: [0xcc5, 0xcc9]
---
0xcb8 JUMPDEST
0xcb9 PUSH2 0x2c6
0xcbc GAS
0xcbd SUB
0xcbe CALL
0xcbf ISZERO
0xcc0 ISZERO
0xcc1 PUSH2 0xcc9
0xcc4 JUMPI
---
0xcb8: JUMPDEST 
0xcb9: V1254 = 0x2c6
0xcbc: V1255 = GAS
0xcbd: V1256 = SUB V1255 0x2c6
0xcbe: V1257 = CALL V1256 V1221 0x0 V1246 V1247 V1246 0x0
0xcbf: V1258 = ISZERO V1257
0xcc0: V1259 = ISZERO V1258
0xcc1: V1260 = 0xcc9
0xcc4: JUMPI 0xcc9 V1259
---
Entry stack: [V12, 0x7eb, V810, V1221, 0xa9059cbb, V1243, 0x0, V1246, V1247, V1246, 0x0, V1221]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x7eb, V810, V1221, 0xa9059cbb, V1243]

================================

Block 0xcc5
[0xcc5:0xcc8]
---
Predecessors: [0xcb8]
Successors: []
---
0xcc5 PUSH1 0x0
0xcc7 DUP1
0xcc8 REVERT
---
0xcc5: V1261 = 0x0
0xcc8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x7eb, V810, V1221, 0xa9059cbb, V1243]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, V810, V1221, 0xa9059cbb, V1243]

================================

Block 0xcc9
[0xcc9:0xccc]
---
Predecessors: [0xcb8]
Successors: [0xccd]
---
0xcc9 JUMPDEST
0xcca POP
0xccb POP
0xccc POP
---
0xcc9: JUMPDEST 
---
Entry stack: [V12, 0x7eb, V810, V1221, 0xa9059cbb, V1243]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x7eb, V810]

================================

Block 0xccd
[0xccd:0xccd]
---
Predecessors: [0xc42, 0xc4c, 0xcc9, 0xe35, 0xf24, 0xf5d]
Successors: [0xcce]
---
0xccd JUMPDEST
---
0xccd: JUMPDEST 
---
Entry stack: [V12, 0x7eb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, S0]

================================

Block 0xcce
[0xcce:0xcce]
---
Predecessors: [0xccd]
Successors: [0xccf]
---
0xcce JUMPDEST
---
0xcce: JUMPDEST 
---
Entry stack: [V12, 0x7eb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, S0]

================================

Block 0xccf
[0xccf:0xccf]
---
Predecessors: [0xcce]
Successors: [0xcd0]
---
0xccf JUMPDEST
---
0xccf: JUMPDEST 
---
Entry stack: [V12, 0x7eb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, S0]

================================

Block 0xcd0
[0xcd0:0xcd2]
---
Predecessors: [0xccf]
Successors: [0x7eb]
---
0xcd0 JUMPDEST
0xcd1 POP
0xcd2 JUMP
---
0xcd0: JUMPDEST 
0xcd2: JUMP 0x7eb
---
Entry stack: [V12, 0x7eb, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xcd3
[0xcd3:0xcd8]
---
Predecessors: [0x835]
Successors: [0x800]
---
0xcd3 JUMPDEST
0xcd4 PUSH1 0x2
0xcd6 SLOAD
0xcd7 DUP2
0xcd8 JUMP
---
0xcd3: JUMPDEST 
0xcd4: V1262 = 0x2
0xcd6: V1263 = S[0x2]
0xcd8: JUMP 0x800
---
Entry stack: [V12, 0x800]
Stack pops: 1
Stack additions: [S0, V1263]
Exit stack: [V12, 0x800, V1263]

================================

Block 0xcd9
[0xcd9:0xcde]
---
Predecessors: [0x85a]
Successors: [0x800]
---
0xcd9 JUMPDEST
0xcda PUSH1 0x5
0xcdc SLOAD
0xcdd DUP2
0xcde JUMP
---
0xcd9: JUMPDEST 
0xcda: V1264 = 0x5
0xcdc: V1265 = S[0x5]
0xcde: JUMP 0x800
---
Entry stack: [V12, 0x800]
Stack pops: 1
Stack additions: [S0, V1265]
Exit stack: [V12, 0x800, V1265]

================================

Block 0xcdf
[0xcdf:0xce4]
---
Predecessors: [0x87f]
Successors: [0x800]
---
0xcdf JUMPDEST
0xce0 PUSH1 0xf
0xce2 SLOAD
0xce3 DUP2
0xce4 JUMP
---
0xcdf: JUMPDEST 
0xce0: V1266 = 0xf
0xce2: V1267 = S[0xf]
0xce4: JUMP 0x800
---
Entry stack: [V12, 0x800]
Stack pops: 1
Stack additions: [S0, V1267]
Exit stack: [V12, 0x800, V1267]

================================

Block 0xce5
[0xce5:0xcf3]
---
Predecessors: [0x8a4]
Successors: [0x8ac]
---
0xce5 JUMPDEST
0xce6 PUSH1 0x3
0xce8 SLOAD
0xce9 PUSH1 0x1
0xceb PUSH1 0xa0
0xced PUSH1 0x2
0xcef EXP
0xcf0 SUB
0xcf1 AND
0xcf2 DUP2
0xcf3 JUMP
---
0xce5: JUMPDEST 
0xce6: V1268 = 0x3
0xce8: V1269 = S[0x3]
0xce9: V1270 = 0x1
0xceb: V1271 = 0xa0
0xced: V1272 = 0x2
0xcef: V1273 = EXP 0x2 0xa0
0xcf0: V1274 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf1: V1275 = AND 0xffffffffffffffffffffffffffffffffffffffff V1269
0xcf3: JUMP 0x8ac
---
Entry stack: [V12, 0x8ac]
Stack pops: 1
Stack additions: [S0, V1275]
Exit stack: [V12, 0x8ac, V1275]

================================

Block 0xcf4
[0xcf4:0xcf9]
---
Predecessors: [0x8d3]
Successors: [0x800]
---
0xcf4 JUMPDEST
0xcf5 PUSH1 0xd
0xcf7 SLOAD
0xcf8 DUP2
0xcf9 JUMP
---
0xcf4: JUMPDEST 
0xcf5: V1276 = 0xd
0xcf7: V1277 = S[0xd]
0xcf9: JUMP 0x800
---
Entry stack: [V12, 0x800]
Stack pops: 1
Stack additions: [S0, V1277]
Exit stack: [V12, 0x800, V1277]

================================

Block 0xcfa
[0xcfa:0xcff]
---
Predecessors: [0x8f8]
Successors: [0x800]
---
0xcfa JUMPDEST
0xcfb PUSH1 0x10
0xcfd SLOAD
0xcfe DUP2
0xcff JUMP
---
0xcfa: JUMPDEST 
0xcfb: V1278 = 0x10
0xcfd: V1279 = S[0x10]
0xcff: JUMP 0x800
---
Entry stack: [V12, 0x800]
Stack pops: 1
Stack additions: [S0, V1279]
Exit stack: [V12, 0x800, V1279]

================================

Block 0xd00
[0xd00:0xd17]
---
Predecessors: [0x91d]
Successors: [0xc38, 0xd18]
---
0xd00 JUMPDEST
0xd01 PUSH1 0x4
0xd03 SLOAD
0xd04 CALLER
0xd05 PUSH1 0x1
0xd07 PUSH1 0xa0
0xd09 PUSH1 0x2
0xd0b EXP
0xd0c SUB
0xd0d SWAP1
0xd0e DUP2
0xd0f AND
0xd10 SWAP2
0xd11 AND
0xd12 EQ
0xd13 ISZERO
0xd14 PUSH2 0xc38
0xd17 JUMPI
---
0xd00: JUMPDEST 
0xd01: V1280 = 0x4
0xd03: V1281 = S[0x4]
0xd04: V1282 = CALLER
0xd05: V1283 = 0x1
0xd07: V1284 = 0xa0
0xd09: V1285 = 0x2
0xd0b: V1286 = EXP 0x2 0xa0
0xd0c: V1287 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd0f: V1288 = AND 0xffffffffffffffffffffffffffffffffffffffff V1282
0xd11: V1289 = AND V1281 0xffffffffffffffffffffffffffffffffffffffff
0xd12: V1290 = EQ V1289 V1288
0xd13: V1291 = ISZERO V1290
0xd14: V1292 = 0xc38
0xd17: JUMPI 0xc38 V1291
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xd18
[0xd18:0xd22]
---
Predecessors: [0xd00]
Successors: [0xd23]
---
0xd18 PUSH1 0x14
0xd1a DUP1
0xd1b SLOAD
0xd1c PUSH2 0xff00
0xd1f NOT
0xd20 AND
0xd21 SWAP1
0xd22 SSTORE
---
0xd18: V1293 = 0x14
0xd1b: V1294 = S[0x14]
0xd1c: V1295 = 0xff00
0xd1f: V1296 = NOT 0xff00
0xd20: V1297 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1294
0xd22: S[0x14] = V1297
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xd23
[0xd23:0xd23]
---
Predecessors: [0xd18]
Successors: [0xd24]
---
0xd23 JUMPDEST
---
0xd23: JUMPDEST 
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xd24
[0xd24:0xd25]
---
Predecessors: [0xd23]
Successors: [0x7eb]
---
0xd24 JUMPDEST
0xd25 JUMP
---
0xd24: JUMPDEST 
0xd25: JUMP 0x7eb
---
Entry stack: [V12, 0x7eb]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xd26
[0xd26:0xd34]
---
Predecessors: [0x932]
Successors: [0x8ac]
---
0xd26 JUMPDEST
0xd27 PUSH1 0x4
0xd29 SLOAD
0xd2a PUSH1 0x1
0xd2c PUSH1 0xa0
0xd2e PUSH1 0x2
0xd30 EXP
0xd31 SUB
0xd32 AND
0xd33 DUP2
0xd34 JUMP
---
0xd26: JUMPDEST 
0xd27: V1298 = 0x4
0xd29: V1299 = S[0x4]
0xd2a: V1300 = 0x1
0xd2c: V1301 = 0xa0
0xd2e: V1302 = 0x2
0xd30: V1303 = EXP 0x2 0xa0
0xd31: V1304 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd32: V1305 = AND 0xffffffffffffffffffffffffffffffffffffffff V1299
0xd34: JUMP 0x8ac
---
Entry stack: [V12, 0x8ac]
Stack pops: 1
Stack additions: [S0, V1305]
Exit stack: [V12, 0x8ac, V1305]

================================

Block 0xd35
[0xd35:0xd43]
---
Predecessors: [0x961]
Successors: [0x969]
---
0xd35 JUMPDEST
0xd36 PUSH1 0x14
0xd38 SLOAD
0xd39 PUSH3 0x10000
0xd3d SWAP1
0xd3e DIV
0xd3f PUSH1 0xff
0xd41 AND
0xd42 DUP2
0xd43 JUMP
---
0xd35: JUMPDEST 
0xd36: V1306 = 0x14
0xd38: V1307 = S[0x14]
0xd39: V1308 = 0x10000
0xd3e: V1309 = DIV V1307 0x10000
0xd3f: V1310 = 0xff
0xd41: V1311 = AND 0xff V1309
0xd43: JUMP 0x969
---
Entry stack: [V12, 0x969]
Stack pops: 1
Stack additions: [S0, V1311]
Exit stack: [V12, 0x969, V1311]

================================

Block 0xd44
[0xd44:0xd52]
---
Predecessors: [0x988]
Successors: [0x8ac]
---
0xd44 JUMPDEST
0xd45 PUSH1 0x12
0xd47 SLOAD
0xd48 PUSH1 0x1
0xd4a PUSH1 0xa0
0xd4c PUSH1 0x2
0xd4e EXP
0xd4f SUB
0xd50 AND
0xd51 DUP2
0xd52 JUMP
---
0xd44: JUMPDEST 
0xd45: V1312 = 0x12
0xd47: V1313 = S[0x12]
0xd48: V1314 = 0x1
0xd4a: V1315 = 0xa0
0xd4c: V1316 = 0x2
0xd4e: V1317 = EXP 0x2 0xa0
0xd4f: V1318 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd50: V1319 = AND 0xffffffffffffffffffffffffffffffffffffffff V1313
0xd52: JUMP 0x8ac
---
Entry stack: [V12, 0x8ac]
Stack pops: 1
Stack additions: [S0, V1319]
Exit stack: [V12, 0x8ac, V1319]

================================

Block 0xd53
[0xd53:0xd64]
---
Predecessors: [0x9b7]
Successors: [0x800]
---
0xd53 JUMPDEST
0xd54 PUSH1 0x13
0xd56 PUSH1 0x20
0xd58 MSTORE
0xd59 PUSH1 0x0
0xd5b SWAP1
0xd5c DUP2
0xd5d MSTORE
0xd5e PUSH1 0x40
0xd60 SWAP1
0xd61 SHA3
0xd62 SLOAD
0xd63 DUP2
0xd64 JUMP
---
0xd53: JUMPDEST 
0xd54: V1320 = 0x13
0xd56: V1321 = 0x20
0xd58: M[0x20] = 0x13
0xd59: V1322 = 0x0
0xd5d: M[0x0] = V967
0xd5e: V1323 = 0x40
0xd61: V1324 = SHA3 0x0 0x40
0xd62: V1325 = S[V1324]
0xd64: JUMP 0x800
---
Entry stack: [V12, 0x800, V967]
Stack pops: 2
Stack additions: [S1, V1325]
Exit stack: [V12, 0x800, V1325]

================================

Block 0xd65
[0xd65:0xd6a]
---
Predecessors: [0x9e8]
Successors: [0x800]
---
0xd65 JUMPDEST
0xd66 PUSH1 0x7
0xd68 SLOAD
0xd69 DUP2
0xd6a JUMP
---
0xd65: JUMPDEST 
0xd66: V1326 = 0x7
0xd68: V1327 = S[0x7]
0xd6a: JUMP 0x800
---
Entry stack: [V12, 0x800]
Stack pops: 1
Stack additions: [S0, V1327]
Exit stack: [V12, 0x800, V1327]

================================

Block 0xd6b
[0xd6b:0xd70]
---
Predecessors: [0xa0d]
Successors: [0x800]
---
0xd6b JUMPDEST
0xd6c PUSH1 0x8
0xd6e SLOAD
0xd6f DUP2
0xd70 JUMP
---
0xd6b: JUMPDEST 
0xd6c: V1328 = 0x8
0xd6e: V1329 = S[0x8]
0xd70: JUMP 0x800
---
Entry stack: [V12, 0x800]
Stack pops: 1
Stack additions: [S0, V1329]
Exit stack: [V12, 0x800, V1329]

================================

Block 0xd71
[0xd71:0xd76]
---
Predecessors: [0xa32]
Successors: [0x800]
---
0xd71 JUMPDEST
0xd72 PUSH1 0x11
0xd74 SLOAD
0xd75 DUP2
0xd76 JUMP
---
0xd71: JUMPDEST 
0xd72: V1330 = 0x11
0xd74: V1331 = S[0x11]
0xd76: JUMP 0x800
---
Entry stack: [V12, 0x800]
Stack pops: 1
Stack additions: [S0, V1331]
Exit stack: [V12, 0x800, V1331]

================================

Block 0xd77
[0xd77:0xd7c]
---
Predecessors: [0xa57]
Successors: [0x800]
---
0xd77 JUMPDEST
0xd78 PUSH1 0x1
0xd7a SLOAD
0xd7b DUP2
0xd7c JUMP
---
0xd77: JUMPDEST 
0xd78: V1332 = 0x1
0xd7a: V1333 = S[0x1]
0xd7c: JUMP 0x800
---
Entry stack: [V12, 0x800]
Stack pops: 1
Stack additions: [S0, V1333]
Exit stack: [V12, 0x800, V1333]

================================

Block 0xd7d
[0xd7d:0xd82]
---
Predecessors: [0xa7c]
Successors: [0x800]
---
0xd7d JUMPDEST
0xd7e PUSH1 0xe
0xd80 SLOAD
0xd81 DUP2
0xd82 JUMP
---
0xd7d: JUMPDEST 
0xd7e: V1334 = 0xe
0xd80: V1335 = S[0xe]
0xd82: JUMP 0x800
---
Entry stack: [V12, 0x800]
Stack pops: 1
Stack additions: [S0, V1335]
Exit stack: [V12, 0x800, V1335]

================================

Block 0xd83
[0xd83:0xd88]
---
Predecessors: [0xaa1]
Successors: [0x800]
---
0xd83 JUMPDEST
0xd84 PUSH1 0x9
0xd86 SLOAD
0xd87 DUP2
0xd88 JUMP
---
0xd83: JUMPDEST 
0xd84: V1336 = 0x9
0xd86: V1337 = S[0x9]
0xd88: JUMP 0x800
---
Entry stack: [V12, 0x800]
Stack pops: 1
Stack additions: [S0, V1337]
Exit stack: [V12, 0x800, V1337]

================================

Block 0xd89
[0xd89:0xd8e]
---
Predecessors: [0xac6]
Successors: [0x800]
---
0xd89 JUMPDEST
0xd8a PUSH1 0xa
0xd8c SLOAD
0xd8d DUP2
0xd8e JUMP
---
0xd89: JUMPDEST 
0xd8a: V1338 = 0xa
0xd8c: V1339 = S[0xa]
0xd8e: JUMP 0x800
---
Entry stack: [V12, 0x800]
Stack pops: 1
Stack additions: [S0, V1339]
Exit stack: [V12, 0x800, V1339]

================================

Block 0xd8f
[0xd8f:0xda6]
---
Predecessors: [0xaeb]
Successors: [0xc38, 0xda7]
---
0xd8f JUMPDEST
0xd90 PUSH1 0x4
0xd92 SLOAD
0xd93 CALLER
0xd94 PUSH1 0x1
0xd96 PUSH1 0xa0
0xd98 PUSH1 0x2
0xd9a EXP
0xd9b SUB
0xd9c SWAP1
0xd9d DUP2
0xd9e AND
0xd9f SWAP2
0xda0 AND
0xda1 EQ
0xda2 ISZERO
0xda3 PUSH2 0xc38
0xda6 JUMPI
---
0xd8f: JUMPDEST 
0xd90: V1340 = 0x4
0xd92: V1341 = S[0x4]
0xd93: V1342 = CALLER
0xd94: V1343 = 0x1
0xd96: V1344 = 0xa0
0xd98: V1345 = 0x2
0xd9a: V1346 = EXP 0x2 0xa0
0xd9b: V1347 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd9e: V1348 = AND 0xffffffffffffffffffffffffffffffffffffffff V1342
0xda0: V1349 = AND V1341 0xffffffffffffffffffffffffffffffffffffffff
0xda1: V1350 = EQ V1349 V1348
0xda2: V1351 = ISZERO V1350
0xda3: V1352 = 0xc38
0xda6: JUMPI 0xc38 V1351
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xda7
[0xda7:0xdb2]
---
Predecessors: [0xd8f]
Successors: [0xdb3]
---
0xda7 PUSH1 0x14
0xda9 DUP1
0xdaa SLOAD
0xdab PUSH3 0xff0000
0xdaf NOT
0xdb0 AND
0xdb1 SWAP1
0xdb2 SSTORE
---
0xda7: V1353 = 0x14
0xdaa: V1354 = S[0x14]
0xdab: V1355 = 0xff0000
0xdaf: V1356 = NOT 0xff0000
0xdb0: V1357 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V1354
0xdb2: S[0x14] = V1357
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xdb3
[0xdb3:0xdb3]
---
Predecessors: [0xda7]
Successors: [0xdb4]
---
0xdb3 JUMPDEST
---
0xdb3: JUMPDEST 
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xdb4
[0xdb4:0xdb5]
---
Predecessors: [0xdb3]
Successors: [0x7eb]
---
0xdb4 JUMPDEST
0xdb5 JUMP
---
0xdb4: JUMPDEST 
0xdb5: JUMP 0x7eb
---
Entry stack: [V12, 0x7eb]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xdb6
[0xdb6:0xdcd]
---
Predecessors: [0xb00]
Successors: [0xc38, 0xdce]
---
0xdb6 JUMPDEST
0xdb7 PUSH1 0x4
0xdb9 SLOAD
0xdba CALLER
0xdbb PUSH1 0x1
0xdbd PUSH1 0xa0
0xdbf PUSH1 0x2
0xdc1 EXP
0xdc2 SUB
0xdc3 SWAP1
0xdc4 DUP2
0xdc5 AND
0xdc6 SWAP2
0xdc7 AND
0xdc8 EQ
0xdc9 ISZERO
0xdca PUSH2 0xc38
0xdcd JUMPI
---
0xdb6: JUMPDEST 
0xdb7: V1358 = 0x4
0xdb9: V1359 = S[0x4]
0xdba: V1360 = CALLER
0xdbb: V1361 = 0x1
0xdbd: V1362 = 0xa0
0xdbf: V1363 = 0x2
0xdc1: V1364 = EXP 0x2 0xa0
0xdc2: V1365 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdc5: V1366 = AND 0xffffffffffffffffffffffffffffffffffffffff V1360
0xdc7: V1367 = AND V1359 0xffffffffffffffffffffffffffffffffffffffff
0xdc8: V1368 = EQ V1367 V1366
0xdc9: V1369 = ISZERO V1368
0xdca: V1370 = 0xc38
0xdcd: JUMPI 0xc38 V1369
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xdce
[0xdce:0xddc]
---
Predecessors: [0xdb6]
Successors: [0xddd]
---
0xdce PUSH1 0x14
0xdd0 DUP1
0xdd1 SLOAD
0xdd2 PUSH2 0xff00
0xdd5 NOT
0xdd6 AND
0xdd7 PUSH2 0x100
0xdda OR
0xddb SWAP1
0xddc SSTORE
---
0xdce: V1371 = 0x14
0xdd1: V1372 = S[0x14]
0xdd2: V1373 = 0xff00
0xdd5: V1374 = NOT 0xff00
0xdd6: V1375 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1372
0xdd7: V1376 = 0x100
0xdda: V1377 = OR 0x100 V1375
0xddc: S[0x14] = V1377
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xddd
[0xddd:0xddd]
---
Predecessors: [0xdce]
Successors: [0xdde]
---
0xddd JUMPDEST
---
0xddd: JUMPDEST 
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xdde
[0xdde:0xddf]
---
Predecessors: [0xddd]
Successors: [0x7eb]
---
0xdde JUMPDEST
0xddf JUMP
---
0xdde: JUMPDEST 
0xddf: JUMP 0x7eb
---
Entry stack: [V12, 0x7eb]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xde0
[0xde0:0xde5]
---
Predecessors: [0xb15]
Successors: [0x800]
---
0xde0 JUMPDEST
0xde1 PUSH1 0xc
0xde3 SLOAD
0xde4 DUP2
0xde5 JUMP
---
0xde0: JUMPDEST 
0xde1: V1378 = 0xc
0xde3: V1379 = S[0xc]
0xde5: JUMP 0x800
---
Entry stack: [V12, 0x800]
Stack pops: 1
Stack additions: [S0, V1379]
Exit stack: [V12, 0x800, V1379]

================================

Block 0xde6
[0xde6:0xdeb]
---
Predecessors: [0xb3a]
Successors: [0x800]
---
0xde6 JUMPDEST
0xde7 PUSH1 0xb
0xde9 SLOAD
0xdea DUP2
0xdeb JUMP
---
0xde6: JUMPDEST 
0xde7: V1380 = 0xb
0xde9: V1381 = S[0xb]
0xdeb: JUMP 0x800
---
Entry stack: [V12, 0x800]
Stack pops: 1
Stack additions: [S0, V1381]
Exit stack: [V12, 0x800, V1381]

================================

Block 0xdec
[0xdec:0xdf1]
---
Predecessors: [0xb5f]
Successors: [0x800]
---
0xdec JUMPDEST
0xded PUSH1 0x6
0xdef SLOAD
0xdf0 DUP2
0xdf1 JUMP
---
0xdec: JUMPDEST 
0xded: V1382 = 0x6
0xdef: V1383 = S[0x6]
0xdf1: JUMP 0x800
---
Entry stack: [V12, 0x800]
Stack pops: 1
Stack additions: [S0, V1383]
Exit stack: [V12, 0x800, V1383]

================================

Block 0xdf2
[0xdf2:0xdff]
---
Predecessors: [0xb84]
Successors: [0x969]
---
0xdf2 JUMPDEST
0xdf3 PUSH1 0x14
0xdf5 SLOAD
0xdf6 PUSH2 0x100
0xdf9 SWAP1
0xdfa DIV
0xdfb PUSH1 0xff
0xdfd AND
0xdfe DUP2
0xdff JUMP
---
0xdf2: JUMPDEST 
0xdf3: V1384 = 0x14
0xdf5: V1385 = S[0x14]
0xdf6: V1386 = 0x100
0xdfa: V1387 = DIV V1385 0x100
0xdfb: V1388 = 0xff
0xdfd: V1389 = AND 0xff V1387
0xdff: JUMP 0x969
---
Entry stack: [V12, 0x969]
Stack pops: 1
Stack additions: [S0, V1389]
Exit stack: [V12, 0x969, V1389]

================================

Block 0xe00
[0xe00:0xe08]
---
Predecessors: [0xbab]
Successors: [0x969]
---
0xe00 JUMPDEST
0xe01 PUSH1 0x14
0xe03 SLOAD
0xe04 PUSH1 0xff
0xe06 AND
0xe07 DUP2
0xe08 JUMP
---
0xe00: JUMPDEST 
0xe01: V1390 = 0x14
0xe03: V1391 = S[0x14]
0xe04: V1392 = 0xff
0xe06: V1393 = AND 0xff V1391
0xe08: JUMP 0x969
---
Entry stack: [V12, 0x969]
Stack pops: 1
Stack additions: [S0, V1393]
Exit stack: [V12, 0x969, V1393]

================================

Block 0xe09
[0xe09:0xe20]
---
Predecessors: [0xbd2]
Successors: [0xc38, 0xe21]
---
0xe09 JUMPDEST
0xe0a PUSH1 0x4
0xe0c SLOAD
0xe0d CALLER
0xe0e PUSH1 0x1
0xe10 PUSH1 0xa0
0xe12 PUSH1 0x2
0xe14 EXP
0xe15 SUB
0xe16 SWAP1
0xe17 DUP2
0xe18 AND
0xe19 SWAP2
0xe1a AND
0xe1b EQ
0xe1c ISZERO
0xe1d PUSH2 0xc38
0xe20 JUMPI
---
0xe09: JUMPDEST 
0xe0a: V1394 = 0x4
0xe0c: V1395 = S[0x4]
0xe0d: V1396 = CALLER
0xe0e: V1397 = 0x1
0xe10: V1398 = 0xa0
0xe12: V1399 = 0x2
0xe14: V1400 = EXP 0x2 0xa0
0xe15: V1401 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe18: V1402 = AND 0xffffffffffffffffffffffffffffffffffffffff V1396
0xe1a: V1403 = AND V1395 0xffffffffffffffffffffffffffffffffffffffff
0xe1b: V1404 = EQ V1403 V1402
0xe1c: V1405 = ISZERO V1404
0xe1d: V1406 = 0xc38
0xe20: JUMPI 0xc38 V1405
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xe21
[0xe21:0xe31]
---
Predecessors: [0xe09]
Successors: [0xe32]
---
0xe21 PUSH1 0x14
0xe23 DUP1
0xe24 SLOAD
0xe25 PUSH3 0xff0000
0xe29 NOT
0xe2a AND
0xe2b PUSH3 0x10000
0xe2f OR
0xe30 SWAP1
0xe31 SSTORE
---
0xe21: V1407 = 0x14
0xe24: V1408 = S[0x14]
0xe25: V1409 = 0xff0000
0xe29: V1410 = NOT 0xff0000
0xe2a: V1411 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V1408
0xe2b: V1412 = 0x10000
0xe2f: V1413 = OR 0x10000 V1411
0xe31: S[0x14] = V1413
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xe32
[0xe32:0xe32]
---
Predecessors: [0xe21]
Successors: [0xe33]
---
0xe32 JUMPDEST
---
0xe32: JUMPDEST 
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb]

================================

Block 0xe33
[0xe33:0xe34]
---
Predecessors: [0xe32]
Successors: [0x7eb]
---
0xe33 JUMPDEST
0xe34 JUMP
---
0xe33: JUMPDEST 
0xe34: JUMP 0x7eb
---
Entry stack: [V12, 0x7eb]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xe35
[0xe35:0xe41]
---
Predecessors: [0xbe7]
Successors: [0xccd, 0xe42]
---
0xe35 JUMPDEST
0xe36 PUSH1 0x2
0xe38 SLOAD
0xe39 PUSH1 0x0
0xe3b SWAP1
0xe3c TIMESTAMP
0xe3d LT
0xe3e PUSH2 0xccd
0xe41 JUMPI
---
0xe35: JUMPDEST 
0xe36: V1414 = 0x2
0xe38: V1415 = S[0x2]
0xe39: V1416 = 0x0
0xe3c: V1417 = TIMESTAMP
0xe3d: V1418 = LT V1417 V1415
0xe3e: V1419 = 0xccd
0xe41: JUMPI 0xccd V1418
---
Entry stack: [V12, 0x7eb]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x7eb, 0x0]

================================

Block 0xe42
[0xe42:0xe4d]
---
Predecessors: [0xe35]
Successors: [0xe4e, 0xf02]
---
0xe42 PUSH1 0x14
0xe44 SLOAD
0xe45 PUSH1 0xff
0xe47 AND
0xe48 ISZERO
0xe49 ISZERO
0xe4a PUSH2 0xf02
0xe4d JUMPI
---
0xe42: V1420 = 0x14
0xe44: V1421 = S[0x14]
0xe45: V1422 = 0xff
0xe47: V1423 = AND 0xff V1421
0xe48: V1424 = ISZERO V1423
0xe49: V1425 = ISZERO V1424
0xe4a: V1426 = 0xf02
0xe4d: JUMPI 0xf02 V1425
---
Entry stack: [V12, 0x7eb, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, 0x0]

================================

Block 0xe4e
[0xe4e:0xe74]
---
Predecessors: [0xe42]
Successors: [0xe75, 0xf02]
---
0xe4e POP
0xe4f PUSH1 0x1
0xe51 PUSH1 0xa0
0xe53 PUSH1 0x2
0xe55 EXP
0xe56 SUB
0xe57 CALLER
0xe58 AND
0xe59 PUSH1 0x0
0xe5b SWAP1
0xe5c DUP2
0xe5d MSTORE
0xe5e PUSH1 0x13
0xe60 PUSH1 0x20
0xe62 MSTORE
0xe63 PUSH1 0x40
0xe65 DUP2
0xe66 SHA3
0xe67 DUP1
0xe68 SLOAD
0xe69 SWAP1
0xe6a DUP3
0xe6b SWAP1
0xe6c SSTORE
0xe6d SWAP1
0xe6e DUP2
0xe6f GT
0xe70 ISZERO
0xe71 PUSH2 0xf02
0xe74 JUMPI
---
0xe4f: V1427 = 0x1
0xe51: V1428 = 0xa0
0xe53: V1429 = 0x2
0xe55: V1430 = EXP 0x2 0xa0
0xe56: V1431 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe57: V1432 = CALLER
0xe58: V1433 = AND V1432 0xffffffffffffffffffffffffffffffffffffffff
0xe59: V1434 = 0x0
0xe5d: M[0x0] = V1433
0xe5e: V1435 = 0x13
0xe60: V1436 = 0x20
0xe62: M[0x20] = 0x13
0xe63: V1437 = 0x40
0xe66: V1438 = SHA3 0x0 0x40
0xe68: V1439 = S[V1438]
0xe6c: S[V1438] = 0x0
0xe6f: V1440 = GT V1439 0x0
0xe70: V1441 = ISZERO V1440
0xe71: V1442 = 0xf02
0xe74: JUMPI 0xf02 V1441
---
Entry stack: [V12, 0x7eb, 0x0]
Stack pops: 1
Stack additions: [V1439]
Exit stack: [V12, 0x7eb, V1439]

================================

Block 0xe75
[0xe75:0xe9f]
---
Predecessors: [0xe4e]
Successors: [0xea0, 0xee6]
---
0xe75 PUSH1 0x1
0xe77 PUSH1 0xa0
0xe79 PUSH1 0x2
0xe7b EXP
0xe7c SUB
0xe7d CALLER
0xe7e AND
0xe7f DUP2
0xe80 ISZERO
0xe81 PUSH2 0x8fc
0xe84 MUL
0xe85 DUP3
0xe86 PUSH1 0x40
0xe88 MLOAD
0xe89 PUSH1 0x0
0xe8b PUSH1 0x40
0xe8d MLOAD
0xe8e DUP1
0xe8f DUP4
0xe90 SUB
0xe91 DUP2
0xe92 DUP6
0xe93 DUP9
0xe94 DUP9
0xe95 CALL
0xe96 SWAP4
0xe97 POP
0xe98 POP
0xe99 POP
0xe9a POP
0xe9b ISZERO
0xe9c PUSH2 0xee6
0xe9f JUMPI
---
0xe75: V1443 = 0x1
0xe77: V1444 = 0xa0
0xe79: V1445 = 0x2
0xe7b: V1446 = EXP 0x2 0xa0
0xe7c: V1447 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe7d: V1448 = CALLER
0xe7e: V1449 = AND V1448 0xffffffffffffffffffffffffffffffffffffffff
0xe80: V1450 = ISZERO V1439
0xe81: V1451 = 0x8fc
0xe84: V1452 = MUL 0x8fc V1450
0xe86: V1453 = 0x40
0xe88: V1454 = M[0x40]
0xe89: V1455 = 0x0
0xe8b: V1456 = 0x40
0xe8d: V1457 = M[0x40]
0xe90: V1458 = SUB V1454 V1457
0xe95: V1459 = CALL V1452 V1449 V1439 V1457 V1458 V1457 0x0
0xe9b: V1460 = ISZERO V1459
0xe9c: V1461 = 0xee6
0xe9f: JUMPI 0xee6 V1460
---
Entry stack: [V12, 0x7eb, V1439]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7eb, V1439]

================================

Block 0xea0
[0xea0:0xee5]
---
Predecessors: [0xe75]
Successors: [0xf02]
---
0xea0 PUSH1 0x0
0xea2 DUP1
0xea3 MLOAD
0xea4 PUSH1 0x20
0xea6 PUSH2 0xfc5
0xea9 DUP4
0xeaa CODECOPY
0xeab DUP2
0xeac MLOAD
0xead SWAP2
0xeae MSTORE
0xeaf CALLER
0xeb0 DUP3
0xeb1 PUSH1 0x0
0xeb3 PUSH1 0x40
0xeb5 MLOAD
0xeb6 PUSH1 0x1
0xeb8 PUSH1 0xa0
0xeba PUSH1 0x2
0xebc EXP
0xebd SUB
0xebe SWAP1
0xebf SWAP4
0xec0 AND
0xec1 DUP4
0xec2 MSTORE
0xec3 PUSH1 0x20
0xec5 DUP4
0xec6 ADD
0xec7 SWAP2
0xec8 SWAP1
0xec9 SWAP2
0xeca MSTORE
0xecb ISZERO
0xecc ISZERO
0xecd PUSH1 0x40
0xecf DUP1
0xed0 DUP4
0xed1 ADD
0xed2 SWAP2
0xed3 SWAP1
0xed4 SWAP2
0xed5 MSTORE
0xed6 PUSH1 0x60
0xed8 SWAP1
0xed9 SWAP2
0xeda ADD
0xedb SWAP1
0xedc MLOAD
0xedd DUP1
0xede SWAP2
0xedf SUB
0xee0 SWAP1
0xee1 LOG1
0xee2 PUSH2 0xf02
0xee5 JUMP
---
0xea0: V1462 = 0x0
0xea3: V1463 = M[0x0]
0xea4: V1464 = 0x20
0xea6: V1465 = 0xfc5
0xeaa: CODECOPY 0x0 0xfc5 0x20
0xeac: V1466 = M[0x0]
0xeae: M[0x0] = V1463
0xeaf: V1467 = CALLER
0xeb1: V1468 = 0x0
0xeb3: V1469 = 0x40
0xeb5: V1470 = M[0x40]
0xeb6: V1471 = 0x1
0xeb8: V1472 = 0xa0
0xeba: V1473 = 0x2
0xebc: V1474 = EXP 0x2 0xa0
0xebd: V1475 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec0: V1476 = AND V1467 0xffffffffffffffffffffffffffffffffffffffff
0xec2: M[V1470] = V1476
0xec3: V1477 = 0x20
0xec6: V1478 = ADD V1470 0x20
0xeca: M[V1478] = V1439
0xecb: V1479 = ISZERO 0x0
0xecc: V1480 = ISZERO 0x1
0xecd: V1481 = 0x40
0xed1: V1482 = ADD V1470 0x40
0xed5: M[V1482] = 0x0
0xed6: V1483 = 0x60
0xeda: V1484 = ADD V1470 0x60
0xedc: V1485 = M[0x40]
0xedf: V1486 = SUB V1484 V1485
0xee1: LOG V1485 V1486 V1466
0xee2: V1487 = 0xf02
0xee5: JUMP 0xf02
---
Entry stack: [V12, 0x7eb, V1439]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7eb, V1439]

================================

Block 0xee6
[0xee6:0xf01]
---
Predecessors: [0xe75]
Successors: [0xf02]
---
0xee6 JUMPDEST
0xee7 PUSH1 0x1
0xee9 PUSH1 0xa0
0xeeb PUSH1 0x2
0xeed EXP
0xeee SUB
0xeef CALLER
0xef0 AND
0xef1 PUSH1 0x0
0xef3 SWAP1
0xef4 DUP2
0xef5 MSTORE
0xef6 PUSH1 0x13
0xef8 PUSH1 0x20
0xefa MSTORE
0xefb PUSH1 0x40
0xefd SWAP1
0xefe SHA3
0xeff DUP2
0xf00 SWAP1
0xf01 SSTORE
---
0xee6: JUMPDEST 
0xee7: V1488 = 0x1
0xee9: V1489 = 0xa0
0xeeb: V1490 = 0x2
0xeed: V1491 = EXP 0x2 0xa0
0xeee: V1492 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeef: V1493 = CALLER
0xef0: V1494 = AND V1493 0xffffffffffffffffffffffffffffffffffffffff
0xef1: V1495 = 0x0
0xef5: M[0x0] = V1494
0xef6: V1496 = 0x13
0xef8: V1497 = 0x20
0xefa: M[0x20] = 0x13
0xefb: V1498 = 0x40
0xefe: V1499 = SHA3 0x0 0x40
0xf01: S[V1499] = V1439
---
Entry stack: [V12, 0x7eb, V1439]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x7eb, V1439]

================================

Block 0xf02
[0xf02:0xf02]
---
Predecessors: [0xe42, 0xe4e, 0xea0, 0xee6]
Successors: [0xf03]
---
0xf02 JUMPDEST
---
0xf02: JUMPDEST 
---
Entry stack: [V12, 0x7eb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, S0]

================================

Block 0xf03
[0xf03:0xf03]
---
Predecessors: [0xf02]
Successors: [0xf04]
---
0xf03 JUMPDEST
---
0xf03: JUMPDEST 
---
Entry stack: [V12, 0x7eb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, S0]

================================

Block 0xf04
[0xf04:0xf10]
---
Predecessors: [0xf03]
Successors: [0xf11, 0xf24]
---
0xf04 JUMPDEST
0xf05 PUSH1 0x14
0xf07 SLOAD
0xf08 PUSH1 0xff
0xf0a AND
0xf0b DUP1
0xf0c ISZERO
0xf0d PUSH2 0xf24
0xf10 JUMPI
---
0xf04: JUMPDEST 
0xf05: V1500 = 0x14
0xf07: V1501 = S[0x14]
0xf08: V1502 = 0xff
0xf0a: V1503 = AND 0xff V1501
0xf0c: V1504 = ISZERO V1503
0xf0d: V1505 = 0xf24
0xf10: JUMPI 0xf24 V1504
---
Entry stack: [V12, 0x7eb, S0]
Stack pops: 0
Stack additions: [V1503]
Exit stack: [V12, 0x7eb, S0, V1503]

================================

Block 0xf11
[0xf11:0xf23]
---
Predecessors: [0xf04]
Successors: [0xf24]
---
0xf11 POP
0xf12 PUSH1 0x3
0xf14 SLOAD
0xf15 CALLER
0xf16 PUSH1 0x1
0xf18 PUSH1 0xa0
0xf1a PUSH1 0x2
0xf1c EXP
0xf1d SUB
0xf1e SWAP1
0xf1f DUP2
0xf20 AND
0xf21 SWAP2
0xf22 AND
0xf23 EQ
---
0xf12: V1506 = 0x3
0xf14: V1507 = S[0x3]
0xf15: V1508 = CALLER
0xf16: V1509 = 0x1
0xf18: V1510 = 0xa0
0xf1a: V1511 = 0x2
0xf1c: V1512 = EXP 0x2 0xa0
0xf1d: V1513 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf20: V1514 = AND 0xffffffffffffffffffffffffffffffffffffffff V1508
0xf22: V1515 = AND V1507 0xffffffffffffffffffffffffffffffffffffffff
0xf23: V1516 = EQ V1515 V1514
---
Entry stack: [V12, 0x7eb, S1, V1503]
Stack pops: 1
Stack additions: [V1516]
Exit stack: [V12, 0x7eb, S1, V1516]

================================

Block 0xf24
[0xf24:0xf29]
---
Predecessors: [0xf04, 0xf11]
Successors: [0xccd, 0xf2a]
---
0xf24 JUMPDEST
0xf25 ISZERO
0xf26 PUSH2 0xccd
0xf29 JUMPI
---
0xf24: JUMPDEST 
0xf25: V1517 = ISZERO S0
0xf26: V1518 = 0xccd
0xf29: JUMPI 0xccd V1517
---
Entry stack: [V12, 0x7eb, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x7eb, S1]

================================

Block 0xf2a
[0xf2a:0xf5c]
---
Predecessors: [0xf24]
Successors: [0xf5d, 0xfb2]
---
0xf2a PUSH1 0x3
0xf2c SLOAD
0xf2d PUSH1 0x8
0xf2f SLOAD
0xf30 PUSH1 0x1
0xf32 PUSH1 0xa0
0xf34 PUSH1 0x2
0xf36 EXP
0xf37 SUB
0xf38 SWAP1
0xf39 SWAP2
0xf3a AND
0xf3b SWAP1
0xf3c DUP1
0xf3d ISZERO
0xf3e PUSH2 0x8fc
0xf41 MUL
0xf42 SWAP1
0xf43 PUSH1 0x40
0xf45 MLOAD
0xf46 PUSH1 0x0
0xf48 PUSH1 0x40
0xf4a MLOAD
0xf4b DUP1
0xf4c DUP4
0xf4d SUB
0xf4e DUP2
0xf4f DUP6
0xf50 DUP9
0xf51 DUP9
0xf52 CALL
0xf53 SWAP4
0xf54 POP
0xf55 POP
0xf56 POP
0xf57 POP
0xf58 ISZERO
0xf59 PUSH2 0xfb2
0xf5c JUMPI
---
0xf2a: V1519 = 0x3
0xf2c: V1520 = S[0x3]
0xf2d: V1521 = 0x8
0xf2f: V1522 = S[0x8]
0xf30: V1523 = 0x1
0xf32: V1524 = 0xa0
0xf34: V1525 = 0x2
0xf36: V1526 = EXP 0x2 0xa0
0xf37: V1527 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf3a: V1528 = AND V1520 0xffffffffffffffffffffffffffffffffffffffff
0xf3d: V1529 = ISZERO V1522
0xf3e: V1530 = 0x8fc
0xf41: V1531 = MUL 0x8fc V1529
0xf43: V1532 = 0x40
0xf45: V1533 = M[0x40]
0xf46: V1534 = 0x0
0xf48: V1535 = 0x40
0xf4a: V1536 = M[0x40]
0xf4d: V1537 = SUB V1533 V1536
0xf52: V1538 = CALL V1531 V1528 V1522 V1536 V1537 V1536 0x0
0xf58: V1539 = ISZERO V1538
0xf59: V1540 = 0xfb2
0xf5c: JUMPI 0xfb2 V1539
---
Entry stack: [V12, 0x7eb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, S0]

================================

Block 0xf5d
[0xf5d:0xfb1]
---
Predecessors: [0xf2a]
Successors: [0xccd]
---
0xf5d PUSH1 0x3
0xf5f SLOAD
0xf60 PUSH1 0x8
0xf62 SLOAD
0xf63 PUSH1 0x0
0xf65 DUP1
0xf66 MLOAD
0xf67 PUSH1 0x20
0xf69 PUSH2 0xfc5
0xf6c DUP4
0xf6d CODECOPY
0xf6e DUP2
0xf6f MLOAD
0xf70 SWAP2
0xf71 MSTORE
0xf72 SWAP2
0xf73 PUSH1 0x1
0xf75 PUSH1 0xa0
0xf77 PUSH1 0x2
0xf79 EXP
0xf7a SUB
0xf7b AND
0xf7c SWAP1
0xf7d PUSH1 0x0
0xf7f PUSH1 0x40
0xf81 MLOAD
0xf82 PUSH1 0x1
0xf84 PUSH1 0xa0
0xf86 PUSH1 0x2
0xf88 EXP
0xf89 SUB
0xf8a SWAP1
0xf8b SWAP4
0xf8c AND
0xf8d DUP4
0xf8e MSTORE
0xf8f PUSH1 0x20
0xf91 DUP4
0xf92 ADD
0xf93 SWAP2
0xf94 SWAP1
0xf95 SWAP2
0xf96 MSTORE
0xf97 ISZERO
0xf98 ISZERO
0xf99 PUSH1 0x40
0xf9b DUP1
0xf9c DUP4
0xf9d ADD
0xf9e SWAP2
0xf9f SWAP1
0xfa0 SWAP2
0xfa1 MSTORE
0xfa2 PUSH1 0x60
0xfa4 SWAP1
0xfa5 SWAP2
0xfa6 ADD
0xfa7 SWAP1
0xfa8 MLOAD
0xfa9 DUP1
0xfaa SWAP2
0xfab SUB
0xfac SWAP1
0xfad LOG1
0xfae PUSH2 0xccd
0xfb1 JUMP
---
0xf5d: V1541 = 0x3
0xf5f: V1542 = S[0x3]
0xf60: V1543 = 0x8
0xf62: V1544 = S[0x8]
0xf63: V1545 = 0x0
0xf66: V1546 = M[0x0]
0xf67: V1547 = 0x20
0xf69: V1548 = 0xfc5
0xf6d: CODECOPY 0x0 0xfc5 0x20
0xf6f: V1549 = M[0x0]
0xf71: M[0x0] = V1546
0xf73: V1550 = 0x1
0xf75: V1551 = 0xa0
0xf77: V1552 = 0x2
0xf79: V1553 = EXP 0x2 0xa0
0xf7a: V1554 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf7b: V1555 = AND 0xffffffffffffffffffffffffffffffffffffffff V1542
0xf7d: V1556 = 0x0
0xf7f: V1557 = 0x40
0xf81: V1558 = M[0x40]
0xf82: V1559 = 0x1
0xf84: V1560 = 0xa0
0xf86: V1561 = 0x2
0xf88: V1562 = EXP 0x2 0xa0
0xf89: V1563 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf8c: V1564 = AND V1555 0xffffffffffffffffffffffffffffffffffffffff
0xf8e: M[V1558] = V1564
0xf8f: V1565 = 0x20
0xf92: V1566 = ADD V1558 0x20
0xf96: M[V1566] = V1544
0xf97: V1567 = ISZERO 0x0
0xf98: V1568 = ISZERO 0x1
0xf99: V1569 = 0x40
0xf9d: V1570 = ADD V1558 0x40
0xfa1: M[V1570] = 0x0
0xfa2: V1571 = 0x60
0xfa6: V1572 = ADD V1558 0x60
0xfa8: V1573 = M[0x40]
0xfab: V1574 = SUB V1572 V1573
0xfad: LOG V1573 V1574 V1549
0xfae: V1575 = 0xccd
0xfb1: JUMP 0xccd
---
Entry stack: [V12, 0x7eb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, S0]

================================

Block 0xfb2
[0xfb2:0xfbc]
---
Predecessors: [0xf2a]
Successors: [0xfbd]
---
0xfb2 JUMPDEST
0xfb3 PUSH1 0x14
0xfb5 DUP1
0xfb6 SLOAD
0xfb7 PUSH1 0xff
0xfb9 NOT
0xfba AND
0xfbb SWAP1
0xfbc SSTORE
---
0xfb2: JUMPDEST 
0xfb3: V1576 = 0x14
0xfb6: V1577 = S[0x14]
0xfb7: V1578 = 0xff
0xfb9: V1579 = NOT 0xff
0xfba: V1580 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1577
0xfbc: S[0x14] = V1580
---
Entry stack: [V12, 0x7eb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, S0]

================================

Block 0xfbd
[0xfbd:0xfbd]
---
Predecessors: [0xfb2]
Successors: [0xfbe]
---
0xfbd JUMPDEST
---
0xfbd: JUMPDEST 
---
Entry stack: [V12, 0x7eb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, S0]

================================

Block 0xfbe
[0xfbe:0xfbe]
---
Predecessors: [0xfbd]
Successors: [0xfbf]
---
0xfbe JUMPDEST
---
0xfbe: JUMPDEST 
---
Entry stack: [V12, 0x7eb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, S0]

================================

Block 0xfbf
[0xfbf:0xfbf]
---
Predecessors: [0xfbe]
Successors: [0xfc0]
---
0xfbf JUMPDEST
---
0xfbf: JUMPDEST 
---
Entry stack: [V12, 0x7eb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, S0]

================================

Block 0xfc0
[0xfc0:0xfc0]
---
Predecessors: [0xfbf]
Successors: [0xfc1]
---
0xfc0 JUMPDEST
---
0xfc0: JUMPDEST 
---
Entry stack: [V12, 0x7eb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x7eb, S0]

================================

Block 0xfc1
[0xfc1:0xfc3]
---
Predecessors: [0xfc0]
Successors: [0x7eb]
---
0xfc1 JUMPDEST
0xfc2 POP
0xfc3 JUMP
---
0xfc1: JUMPDEST 
0xfc3: JUMP 0x7eb
---
Entry stack: [V12, 0x7eb, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xfc4
[0xfc4:0x1017]
---
Predecessors: []
Successors: []
---
0xfc4 STOP
0xfc5 MISSING 0xe8
0xfc6 TIMESTAMP
0xfc7 MISSING 0xae
0xfc8 MISSING 0xa7
0xfc9 MISSING 0xa5
0xfca CALL
0xfcb MISSING 0xb0
0xfcc LT
0xfcd MISSING 0x49
0xfce MISSING 0xd7
0xfcf MSTORE
0xfd0 STOP
0xfd1 DUP13
0xfd2 MSTORE8
0xfd3 MISSING 0xc5
0xfd4 MISSING 0x28
0xfd5 SWAP1
0xfd6 MISSING 0xb1
0xfd7 MISSING 0xa6
0xfd8 MISSING 0xda
0xfd9 MISSING 0xf6
0xfda PUSH1 0xcf
0xfdc CODECOPY
0xfdd MISSING 0xe8
0xfde MISSING 0xee
0xfdf MISSING 0xc5
0xfe0 MOD
0xfe1 GT
0xfe2 MISSING 0x2b
0xfe3 MISSING 0xbd
0xfe4 MISSING 0xf6
0xfe5 LOG1
0xfe6 PUSH6 0x627a7a723058
0xfed SHA3
0xfee SWAP4
0xfef MISSING 0xf
0xff0 EQ
0xff1 PUSH12 0x7cc067818089935e4279ab9a
0xffe PUSH2 0xc87c
0x1001 MISSING 0xab
0x1002 PUSH21 0xb850cd90bdc473db5af04d0029
---
0xfc4: STOP 
0xfc5: MISSING 0xe8
0xfc6: V1581 = TIMESTAMP
0xfc7: MISSING 0xae
0xfc8: MISSING 0xa7
0xfc9: MISSING 0xa5
0xfca: V1582 = CALL S0 S1 S2 S3 S4 S5 S6
0xfcb: MISSING 0xb0
0xfcc: V1583 = LT S0 S1
0xfcd: MISSING 0x49
0xfce: MISSING 0xd7
0xfcf: M[S0] = S1
0xfd0: STOP 
0xfd2: M8[S12] = S0
0xfd3: MISSING 0xc5
0xfd4: MISSING 0x28
0xfd6: MISSING 0xb1
0xfd7: MISSING 0xa6
0xfd8: MISSING 0xda
0xfd9: MISSING 0xf6
0xfda: V1584 = 0xcf
0xfdc: CODECOPY 0xcf S0 S1
0xfdd: MISSING 0xe8
0xfde: MISSING 0xee
0xfdf: MISSING 0xc5
0xfe0: V1585 = MOD S0 S1
0xfe1: V1586 = GT V1585 S2
0xfe2: MISSING 0x2b
0xfe3: MISSING 0xbd
0xfe4: MISSING 0xf6
0xfe5: LOG S0 S1 S2
0xfe6: V1587 = 0x627a7a723058
0xfed: V1588 = SHA3 0x627a7a723058 S3
0xfef: MISSING 0xf
0xff0: V1589 = EQ S0 S1
0xff1: V1590 = 0x7cc067818089935e4279ab9a
0xffe: V1591 = 0xc87c
0x1001: MISSING 0xab
0x1002: V1592 = 0xb850cd90bdc473db5af04d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1581, V1582, V1583, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S1, S0, V1586, S7, S4, S5, S6, V1588, 0xc87c, 0x7cc067818089935e4279ab9a, V1589, 0xb850cd90bdc473db5af04d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x7d8
Exit block: 0x7eb
Body: 0x7d8, 0x7df, 0x7e3, 0x7eb, 0xbf1, 0xbfb, 0xc08, 0xc15, 0xc1b, 0xc28, 0xc38, 0xc39, 0xc3a

Function 1:
Public function signature: 0x10309781
Entry block: 0x7ed
Exit block: 0x800
Body: 0x7ed, 0x7f4, 0x7f8, 0x800, 0xc3c

Function 2:
Public function signature: 0x1fd8ffb0
Entry block: 0x812
Exit block: 0x7eb
Body: 0x7eb, 0x812, 0x819, 0x81d, 0xc42, 0xc4c, 0xc63, 0xcb4, 0xcb8, 0xcc5, 0xcc9, 0xccd, 0xcce, 0xccf, 0xcd0

Function 3:
Public function signature: 0x29dcb0cf
Entry block: 0x82a
Exit block: 0x800
Body: 0x800, 0x82a, 0x831, 0x835, 0xcd3

Function 4:
Public function signature: 0x2ec914b5
Entry block: 0x84f
Exit block: 0x800
Body: 0x800, 0x84f, 0x856, 0x85a, 0xcd9

Function 5:
Public function signature: 0x31252103
Entry block: 0x874
Exit block: 0x800
Body: 0x800, 0x874, 0x87b, 0x87f, 0xcdf

Function 6:
Public function signature: 0x38af3eed
Entry block: 0x899
Exit block: 0x8ac
Body: 0x899, 0x8a0, 0x8a4, 0x8ac, 0xce5

Function 7:
Public function signature: 0x3b41ddba
Entry block: 0x8c8
Exit block: 0x800
Body: 0x800, 0x8c8, 0x8cf, 0x8d3, 0xcf4

Function 8:
Public function signature: 0x4c95f5d0
Entry block: 0x8ed
Exit block: 0x800
Body: 0x800, 0x8ed, 0x8f4, 0x8f8, 0xcfa

Function 9:
Public function signature: 0x4fa34075
Entry block: 0x912
Exit block: 0x7eb
Body: 0x7eb, 0x912, 0x919, 0x91d, 0xc38, 0xc39, 0xc3a, 0xd00, 0xd18, 0xd23, 0xd24

Function 10:
Public function signature: 0x5a0254e2
Entry block: 0x927
Exit block: 0x8ac
Body: 0x8ac, 0x927, 0x92e, 0x932, 0xd26

Function 11:
Public function signature: 0x5b54d2d6
Entry block: 0x956
Exit block: 0x969
Body: 0x956, 0x95d, 0x961, 0x969, 0xd35

Function 12:
Public function signature: 0x6e66f6e9
Entry block: 0x97d
Exit block: 0x8ac
Body: 0x8ac, 0x97d, 0x984, 0x988, 0xd44

Function 13:
Public function signature: 0x70a08231
Entry block: 0x9ac
Exit block: 0x800
Body: 0x800, 0x9ac, 0x9b3, 0x9b7, 0xd53

Function 14:
Public function signature: 0x7a3a0e84
Entry block: 0x9dd
Exit block: 0x800
Body: 0x800, 0x9dd, 0x9e4, 0x9e8, 0xd65

Function 15:
Public function signature: 0x7b3e5e7b
Entry block: 0xa02
Exit block: 0x800
Body: 0x800, 0xa02, 0xa09, 0xa0d, 0xd6b

Function 16:
Public function signature: 0x7c24ce7d
Entry block: 0xa27
Exit block: 0x800
Body: 0x800, 0xa27, 0xa2e, 0xa32, 0xd71

Function 17:
Public function signature: 0x827037db
Entry block: 0xa4c
Exit block: 0x800
Body: 0x800, 0xa4c, 0xa53, 0xa57, 0xd77

Function 18:
Public function signature: 0x89e66aea
Entry block: 0xa71
Exit block: 0x800
Body: 0x800, 0xa71, 0xa78, 0xa7c, 0xd7d

Function 19:
Public function signature: 0x8f48399a
Entry block: 0xa96
Exit block: 0x800
Body: 0x800, 0xa96, 0xa9d, 0xaa1, 0xd83

Function 20:
Public function signature: 0x92dcc41c
Entry block: 0xabb
Exit block: 0x800
Body: 0x800, 0xabb, 0xac2, 0xac6, 0xd89

Function 21:
Public function signature: 0x998936b0
Entry block: 0xae0
Exit block: 0x7eb
Body: 0x7eb, 0xae0, 0xae7, 0xaeb, 0xc38, 0xc39, 0xc3a, 0xd8f, 0xda7, 0xdb3, 0xdb4

Function 22:
Public function signature: 0xa02d55a3
Entry block: 0xaf5
Exit block: 0x7eb
Body: 0x7eb, 0xaf5, 0xafc, 0xb00, 0xc38, 0xc39, 0xc3a, 0xdb6, 0xdce, 0xddd, 0xdde

Function 23:
Public function signature: 0xa8a75b78
Entry block: 0xb0a
Exit block: 0x800
Body: 0x800, 0xb0a, 0xb11, 0xb15, 0xde0

Function 24:
Public function signature: 0xace38f8c
Entry block: 0xb2f
Exit block: 0x800
Body: 0x800, 0xb2f, 0xb36, 0xb3a, 0xde6

Function 25:
Public function signature: 0xaff29802
Entry block: 0xb54
Exit block: 0x800
Body: 0x800, 0xb54, 0xb5b, 0xb5f, 0xdec

Function 26:
Public function signature: 0xccb07cef
Entry block: 0xb79
Exit block: 0x969
Body: 0x969, 0xb79, 0xb80, 0xb84, 0xdf2

Function 27:
Public function signature: 0xd424f628
Entry block: 0xba0
Exit block: 0x969
Body: 0x969, 0xba0, 0xba7, 0xbab, 0xe00

Function 28:
Public function signature: 0xdcd22c9b
Entry block: 0xbc7
Exit block: 0x7eb
Body: 0x7eb, 0xbc7, 0xbce, 0xbd2, 0xc38, 0xc39, 0xc3a, 0xe09, 0xe21, 0xe32, 0xe33

Function 29:
Public function signature: 0xfd6b7ef8
Entry block: 0xbdc
Exit block: 0x7eb
Body: 0x7eb, 0xbdc, 0xbe3, 0xbe7, 0xccd, 0xcce, 0xccf, 0xcd0, 0xe35, 0xe42, 0xe4e, 0xe75, 0xea0, 0xee6, 0xf02, 0xf03, 0xf04, 0xf11, 0xf24, 0xf2a, 0xf5d, 0xfb2, 0xfbd, 0xfbe, 0xfbf, 0xfc0, 0xfc1

Function 30:
Public fallback function
Entry block: 0x164
Exit block: 0x5c0
Body: 0x164, 0x165, 0x179, 0x17d, 0x1b2, 0x1c1, 0x21b, 0x21f, 0x22c, 0x230, 0x27a, 0x28b, 0x2aa, 0x2ea, 0x2ee, 0x2fb, 0x2ff, 0x307, 0x319, 0x399, 0x3ab, 0x42b, 0x43d, 0x4bd, 0x4cf, 0x54f, 0x56f, 0x5af, 0x5b3, 0x5c0, 0x5c4, 0x5c8, 0x5c9, 0x5ca, 0x5cb, 0x5cc, 0x60f, 0x614, 0x621, 0x67b, 0x67f, 0x68c, 0x690, 0x698, 0x6a5, 0x6ff, 0x71c, 0x777, 0x77b, 0x788, 0x78c, 0x790, 0x791, 0x7d4, 0x7d5

