Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb4]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb4
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb4
0xa: JUMPI 0xb4 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x1e9]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x17f27fc
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x1e9
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x17f27fc
0x20: V14 = EQ V12 0x17f27fc
0x21: V15 = 0x1e9
0x24: JUMPI 0x1e9 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x210]
---
0x25 DUP1
0x26 PUSH4 0xe2d27cd
0x2b EQ
0x2c PUSH2 0x210
0x2f JUMPI
---
0x26: V16 = 0xe2d27cd
0x2b: V17 = EQ 0xe2d27cd V12
0x2c: V18 = 0x210
0x2f: JUMPI 0x210 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x225]
---
0x30 DUP1
0x31 PUSH4 0x1ca8b6cb
0x36 EQ
0x37 PUSH2 0x225
0x3a JUMPI
---
0x31: V19 = 0x1ca8b6cb
0x36: V20 = EQ 0x1ca8b6cb V12
0x37: V21 = 0x225
0x3a: JUMPI 0x225 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x24a]
---
0x3b DUP1
0x3c PUSH4 0x1e06c41f
0x41 EQ
0x42 PUSH2 0x24a
0x45 JUMPI
---
0x3c: V22 = 0x1e06c41f
0x41: V23 = EQ 0x1e06c41f V12
0x42: V24 = 0x24a
0x45: JUMPI 0x24a V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x26f]
---
0x46 DUP1
0x47 PUSH4 0x2cfa606d
0x4c EQ
0x4d PUSH2 0x26f
0x50 JUMPI
---
0x47: V25 = 0x2cfa606d
0x4c: V26 = EQ 0x2cfa606d V12
0x4d: V27 = 0x26f
0x50: JUMPI 0x26f V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x29e]
---
0x51 DUP1
0x52 PUSH4 0x380d831b
0x57 EQ
0x58 PUSH2 0x29e
0x5b JUMPI
---
0x52: V28 = 0x380d831b
0x57: V29 = EQ 0x380d831b V12
0x58: V30 = 0x29e
0x5b: JUMPI 0x29e V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x2b3]
---
0x5c DUP1
0x5d PUSH4 0x4172d080
0x62 EQ
0x63 PUSH2 0x2b3
0x66 JUMPI
---
0x5d: V31 = 0x4172d080
0x62: V32 = EQ 0x4172d080 V12
0x63: V33 = 0x2b3
0x66: JUMPI 0x2b3 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x2d8]
---
0x67 DUP1
0x68 PUSH4 0x4e71e0c8
0x6d EQ
0x6e PUSH2 0x2d8
0x71 JUMPI
---
0x68: V34 = 0x4e71e0c8
0x6d: V35 = EQ 0x4e71e0c8 V12
0x6e: V36 = 0x2d8
0x71: JUMPI 0x2d8 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x2ed]
---
0x72 DUP1
0x73 PUSH4 0x7c7d809b
0x78 EQ
0x79 PUSH2 0x2ed
0x7c JUMPI
---
0x73: V37 = 0x7c7d809b
0x78: V38 = EQ 0x7c7d809b V12
0x79: V39 = 0x2ed
0x7c: JUMPI 0x2ed V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x312]
---
0x7d DUP1
0x7e PUSH4 0xce606ee0
0x83 EQ
0x84 PUSH2 0x312
0x87 JUMPI
---
0x7e: V40 = 0xce606ee0
0x83: V41 = EQ 0xce606ee0 V12
0x84: V42 = 0x312
0x87: JUMPI 0x312 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x341]
---
0x88 DUP1
0x89 PUSH4 0xd9779fbe
0x8e EQ
0x8f PUSH2 0x341
0x92 JUMPI
---
0x89: V43 = 0xd9779fbe
0x8e: V44 = EQ 0xd9779fbe V12
0x8f: V45 = 0x341
0x92: JUMPI 0x341 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x366]
---
0x93 DUP1
0x94 PUSH4 0xe30c3978
0x99 EQ
0x9a PUSH2 0x366
0x9d JUMPI
---
0x94: V46 = 0xe30c3978
0x99: V47 = EQ 0xe30c3978 V12
0x9a: V48 = 0x366
0x9d: JUMPI 0x366 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x395]
---
0x9e DUP1
0x9f PUSH4 0xf23b872e
0xa4 EQ
0xa5 PUSH2 0x395
0xa8 JUMPI
---
0x9f: V49 = 0xf23b872e
0xa4: V50 = EQ 0xf23b872e V12
0xa5: V51 = 0x395
0xa8: JUMPI 0x395 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x3c4]
---
0xa9 DUP1
0xaa PUSH4 0xf2fde38b
0xaf EQ
0xb0 PUSH2 0x3c4
0xb3 JUMPI
---
0xaa: V52 = 0xf2fde38b
0xaf: V53 = EQ 0xf2fde38b V12
0xb0: V54 = 0x3c4
0xb3: JUMPI 0x3c4 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xb4]
---
Predecessors: [0x0, 0xa9]
Successors: [0xb5]
---
0xb4 JUMPDEST
---
0xb4: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb5
[0xb5:0xc2]
---
Predecessors: [0xb4]
Successors: [0xc3, 0xc4]
---
0xb5 JUMPDEST
0xb6 PUSH1 0x7
0xb8 SLOAD
0xb9 PUSH1 0x0
0xbb SWAP1
0xbc TIMESTAMP
0xbd LT
0xbe ISZERO
0xbf PUSH2 0xc4
0xc2 JUMPI
---
0xb5: JUMPDEST 
0xb6: V55 = 0x7
0xb8: V56 = S[0x7]
0xb9: V57 = 0x0
0xbc: V58 = TIMESTAMP
0xbd: V59 = LT V58 V56
0xbe: V60 = ISZERO V59
0xbf: V61 = 0xc4
0xc2: JUMPI 0xc4 V60
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x0]

================================

Block 0xc3
[0xc3:0xc3]
---
Predecessors: [0xb5]
Successors: []
---
0xc3 INVALID
---
0xc3: INVALID 
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0xc4
[0xc4:0xcd]
---
Predecessors: [0xb5]
Successors: [0xce, 0xcf]
---
0xc4 JUMPDEST
0xc5 PUSH1 0x8
0xc7 SLOAD
0xc8 TIMESTAMP
0xc9 LT
0xca PUSH2 0xcf
0xcd JUMPI
---
0xc4: JUMPDEST 
0xc5: V62 = 0x8
0xc7: V63 = S[0x8]
0xc8: V64 = TIMESTAMP
0xc9: V65 = LT V64 V63
0xca: V66 = 0xcf
0xcd: JUMPI 0xcf V65
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0xce
[0xce:0xce]
---
Predecessors: [0xc4]
Successors: []
---
0xce INVALID
---
0xce: INVALID 
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0xcf
[0xcf:0xd7]
---
Predecessors: [0xc4]
Successors: [0xd8, 0xdc]
---
0xcf JUMPDEST
0xd0 PUSH1 0x0
0xd2 CALLVALUE
0xd3 GT
0xd4 PUSH2 0xdc
0xd7 JUMPI
---
0xcf: JUMPDEST 
0xd0: V67 = 0x0
0xd2: V68 = CALLVALUE
0xd3: V69 = GT V68 0x0
0xd4: V70 = 0xdc
0xd7: JUMPI 0xdc V69
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0xd8
[0xd8:0xdb]
---
Predecessors: [0xcf]
Successors: []
---
0xd8 PUSH1 0x0
0xda DUP1
0xdb REVERT
---
0xd8: V71 = 0x0
0xdb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0xdc
[0xdc:0xe7]
---
Predecessors: [0xcf]
Successors: [0xe8, 0xec]
---
0xdc JUMPDEST
0xdd PUSH1 0x9
0xdf SLOAD
0xe0 PUSH1 0xff
0xe2 AND
0xe3 ISZERO
0xe4 PUSH2 0xec
0xe7 JUMPI
---
0xdc: JUMPDEST 
0xdd: V72 = 0x9
0xdf: V73 = S[0x9]
0xe0: V74 = 0xff
0xe2: V75 = AND 0xff V73
0xe3: V76 = ISZERO V75
0xe4: V77 = 0xec
0xe7: JUMPI 0xec V76
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0xe8
[0xe8:0xeb]
---
Predecessors: [0xdc]
Successors: []
---
0xe8 PUSH1 0x0
0xea DUP1
0xeb REVERT
---
0xe8: V78 = 0x0
0xeb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0xec
[0xec:0xff]
---
Predecessors: [0xdc]
Successors: [0x3e5]
---
0xec JUMPDEST
0xed PUSH1 0x6
0xef SLOAD
0xf0 PUSH2 0x100
0xf3 SWAP1
0xf4 CALLVALUE
0xf5 SWAP1
0xf6 PUSH4 0xffffffff
0xfb PUSH2 0x3e5
0xfe AND
0xff JUMP
---
0xec: JUMPDEST 
0xed: V79 = 0x6
0xef: V80 = S[0x6]
0xf0: V81 = 0x100
0xf4: V82 = CALLVALUE
0xf6: V83 = 0xffffffff
0xfb: V84 = 0x3e5
0xfe: V85 = AND 0x3e5 0xffffffff
0xff: JUMP 0x3e5
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: [0x100, V82, V80]
Exit stack: [V12, 0x0, 0x100, V82, V80]

================================

Block 0x100
[0x100:0x111]
---
Predecessors: [0x40d]
Successors: [0x112, 0x113]
---
0x100 JUMPDEST
0x101 SWAP1
0x102 POP
0x103 PUSH1 0x0
0x105 DUP2
0x106 PUSH1 0x5
0x108 SLOAD
0x109 SUB
0x10a LT
0x10b ISZERO
0x10c ISZERO
0x10d ISZERO
0x10e PUSH2 0x113
0x111 JUMPI
---
0x100: JUMPDEST 
0x103: V86 = 0x0
0x106: V87 = 0x5
0x108: V88 = S[0x5]
0x109: V89 = SUB V88 V363
0x10a: V90 = LT V89 0x0
0x10b: V91 = ISZERO V90
0x10c: V92 = ISZERO V91
0x10d: V93 = ISZERO V92
0x10e: V94 = 0x113
0x111: JUMPI 0x113 V93
---
Entry stack: [V12, 0x0, V363]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V363]

================================

Block 0x112
[0x112:0x112]
---
Predecessors: [0x100]
Successors: []
---
0x112 INVALID
---
0x112: INVALID 
---
Entry stack: [V12, V363]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363]

================================

Block 0x113
[0x113:0x176]
---
Predecessors: [0x100]
Successors: [0x177, 0x17b]
---
0x113 JUMPDEST
0x114 PUSH1 0x5
0x116 DUP1
0x117 SLOAD
0x118 DUP3
0x119 SWAP1
0x11a SUB
0x11b SWAP1
0x11c SSTORE
0x11d PUSH1 0x3
0x11f SLOAD
0x120 PUSH1 0x1
0x122 PUSH1 0xa0
0x124 PUSH1 0x2
0x126 EXP
0x127 SUB
0x128 AND
0x129 PUSH4 0xa9059cbb
0x12e CALLER
0x12f DUP4
0x130 PUSH1 0x0
0x132 PUSH1 0x40
0x134 MLOAD
0x135 PUSH1 0x20
0x137 ADD
0x138 MSTORE
0x139 PUSH1 0x40
0x13b MLOAD
0x13c PUSH1 0xe0
0x13e PUSH1 0x2
0x140 EXP
0x141 PUSH4 0xffffffff
0x146 DUP6
0x147 AND
0x148 MUL
0x149 DUP2
0x14a MSTORE
0x14b PUSH1 0x1
0x14d PUSH1 0xa0
0x14f PUSH1 0x2
0x151 EXP
0x152 SUB
0x153 SWAP1
0x154 SWAP3
0x155 AND
0x156 PUSH1 0x4
0x158 DUP4
0x159 ADD
0x15a MSTORE
0x15b PUSH1 0x24
0x15d DUP3
0x15e ADD
0x15f MSTORE
0x160 PUSH1 0x44
0x162 ADD
0x163 PUSH1 0x20
0x165 PUSH1 0x40
0x167 MLOAD
0x168 DUP1
0x169 DUP4
0x16a SUB
0x16b DUP2
0x16c PUSH1 0x0
0x16e DUP8
0x16f DUP1
0x170 EXTCODESIZE
0x171 ISZERO
0x172 ISZERO
0x173 PUSH2 0x17b
0x176 JUMPI
---
0x113: JUMPDEST 
0x114: V95 = 0x5
0x117: V96 = S[0x5]
0x11a: V97 = SUB V96 V363
0x11c: S[0x5] = V97
0x11d: V98 = 0x3
0x11f: V99 = S[0x3]
0x120: V100 = 0x1
0x122: V101 = 0xa0
0x124: V102 = 0x2
0x126: V103 = EXP 0x2 0xa0
0x127: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x128: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x129: V106 = 0xa9059cbb
0x12e: V107 = CALLER
0x130: V108 = 0x0
0x132: V109 = 0x40
0x134: V110 = M[0x40]
0x135: V111 = 0x20
0x137: V112 = ADD 0x20 V110
0x138: M[V112] = 0x0
0x139: V113 = 0x40
0x13b: V114 = M[0x40]
0x13c: V115 = 0xe0
0x13e: V116 = 0x2
0x140: V117 = EXP 0x2 0xe0
0x141: V118 = 0xffffffff
0x147: V119 = AND 0xa9059cbb 0xffffffff
0x148: V120 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x14a: M[V114] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x14b: V121 = 0x1
0x14d: V122 = 0xa0
0x14f: V123 = 0x2
0x151: V124 = EXP 0x2 0xa0
0x152: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V126 = AND V107 0xffffffffffffffffffffffffffffffffffffffff
0x156: V127 = 0x4
0x159: V128 = ADD V114 0x4
0x15a: M[V128] = V126
0x15b: V129 = 0x24
0x15e: V130 = ADD V114 0x24
0x15f: M[V130] = V363
0x160: V131 = 0x44
0x162: V132 = ADD 0x44 V114
0x163: V133 = 0x20
0x165: V134 = 0x40
0x167: V135 = M[0x40]
0x16a: V136 = SUB V132 V135
0x16c: V137 = 0x0
0x170: V138 = EXTCODESIZE V105
0x171: V139 = ISZERO V138
0x172: V140 = ISZERO V139
0x173: V141 = 0x17b
0x176: JUMPI 0x17b V140
---
Entry stack: [V12, V363]
Stack pops: 1
Stack additions: [S0, V105, 0xa9059cbb, V132, 0x20, V135, V136, V135, 0x0, V105]
Exit stack: [V12, V363, V105, 0xa9059cbb, V132, 0x20, V135, V136, V135, 0x0, V105]

================================

Block 0x177
[0x177:0x17a]
---
Predecessors: [0x113]
Successors: []
---
0x177 PUSH1 0x0
0x179 DUP1
0x17a REVERT
---
0x177: V142 = 0x0
0x17a: REVERT 0x0 0x0
---
Entry stack: [V12, V363, V105, 0xa9059cbb, V132, 0x20, V135, V136, V135, 0x0, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, V105, 0xa9059cbb, V132, 0x20, V135, V136, V135, 0x0, V105]

================================

Block 0x17b
[0x17b:0x187]
---
Predecessors: [0x113]
Successors: [0x188, 0x18c]
---
0x17b JUMPDEST
0x17c PUSH2 0x2c6
0x17f GAS
0x180 SUB
0x181 CALL
0x182 ISZERO
0x183 ISZERO
0x184 PUSH2 0x18c
0x187 JUMPI
---
0x17b: JUMPDEST 
0x17c: V143 = 0x2c6
0x17f: V144 = GAS
0x180: V145 = SUB V144 0x2c6
0x181: V146 = CALL V145 V105 0x0 V135 V136 V135 0x20
0x182: V147 = ISZERO V146
0x183: V148 = ISZERO V147
0x184: V149 = 0x18c
0x187: JUMPI 0x18c V148
---
Entry stack: [V12, V363, V105, 0xa9059cbb, V132, 0x20, V135, V136, V135, 0x0, V105]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V363, V105, 0xa9059cbb, V132]

================================

Block 0x188
[0x188:0x18b]
---
Predecessors: [0x17b]
Successors: []
---
0x188 PUSH1 0x0
0x18a DUP1
0x18b REVERT
---
0x188: V150 = 0x0
0x18b: REVERT 0x0 0x0
---
Entry stack: [V12, V363, V105, 0xa9059cbb, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363, V105, 0xa9059cbb, V132]

================================

Block 0x18c
[0x18c:0x19c]
---
Predecessors: [0x17b]
Successors: [0x19d, 0x1a1]
---
0x18c JUMPDEST
0x18d POP
0x18e POP
0x18f POP
0x190 PUSH1 0x40
0x192 MLOAD
0x193 DUP1
0x194 MLOAD
0x195 SWAP1
0x196 POP
0x197 ISZERO
0x198 ISZERO
0x199 PUSH2 0x1a1
0x19c JUMPI
---
0x18c: JUMPDEST 
0x190: V151 = 0x40
0x192: V152 = M[0x40]
0x194: V153 = M[V152]
0x197: V154 = ISZERO V153
0x198: V155 = ISZERO V154
0x199: V156 = 0x1a1
0x19c: JUMPI 0x1a1 V155
---
Entry stack: [V12, V363, V105, 0xa9059cbb, V132]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V363]

================================

Block 0x19d
[0x19d:0x1a0]
---
Predecessors: [0x18c]
Successors: []
---
0x19d PUSH1 0x0
0x19f DUP1
0x1a0 REVERT
---
0x19d: V157 = 0x0
0x1a0: REVERT 0x0 0x0
---
Entry stack: [V12, V363]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V363]

================================

Block 0x1a1
[0x1a1:0x1e5]
---
Predecessors: [0x18c]
Successors: [0x1e6]
---
0x1a1 JUMPDEST
0x1a2 PUSH32 0x8d9f95c49a4bdb2d5bcdafecd248c0dd777db82a5d071819fbfe0f31fa1cc729
0x1c3 CALLER
0x1c4 DUP3
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 PUSH1 0x1
0x1ca PUSH1 0xa0
0x1cc PUSH1 0x2
0x1ce EXP
0x1cf SUB
0x1d0 SWAP1
0x1d1 SWAP3
0x1d2 AND
0x1d3 DUP3
0x1d4 MSTORE
0x1d5 PUSH1 0x20
0x1d7 DUP3
0x1d8 ADD
0x1d9 MSTORE
0x1da PUSH1 0x40
0x1dc SWAP1
0x1dd DUP2
0x1de ADD
0x1df SWAP1
0x1e0 MLOAD
0x1e1 DUP1
0x1e2 SWAP2
0x1e3 SUB
0x1e4 SWAP1
0x1e5 LOG1
---
0x1a1: JUMPDEST 
0x1a2: V158 = 0x8d9f95c49a4bdb2d5bcdafecd248c0dd777db82a5d071819fbfe0f31fa1cc729
0x1c3: V159 = CALLER
0x1c5: V160 = 0x40
0x1c7: V161 = M[0x40]
0x1c8: V162 = 0x1
0x1ca: V163 = 0xa0
0x1cc: V164 = 0x2
0x1ce: V165 = EXP 0x2 0xa0
0x1cf: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d2: V167 = AND V159 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: M[V161] = V167
0x1d5: V168 = 0x20
0x1d8: V169 = ADD V161 0x20
0x1d9: M[V169] = V363
0x1da: V170 = 0x40
0x1de: V171 = ADD 0x40 V161
0x1e0: V172 = M[0x40]
0x1e3: V173 = SUB V171 V172
0x1e5: LOG V172 V173 0x8d9f95c49a4bdb2d5bcdafecd248c0dd777db82a5d071819fbfe0f31fa1cc729
---
Entry stack: [V12, V363]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V363]

================================

Block 0x1e6
[0x1e6:0x1e8]
---
Predecessors: [0x1a1]
Successors: []
---
0x1e6 JUMPDEST
0x1e7 POP
0x1e8 STOP
---
0x1e6: JUMPDEST 
0x1e8: STOP 
---
Entry stack: [V12, V363]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e9
[0x1e9:0x1ef]
---
Predecessors: [0xb]
Successors: [0x1f0, 0x1f4]
---
0x1e9 JUMPDEST
0x1ea CALLVALUE
0x1eb ISZERO
0x1ec PUSH2 0x1f4
0x1ef JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V174 = CALLVALUE
0x1eb: V175 = ISZERO V174
0x1ec: V176 = 0x1f4
0x1ef: JUMPI 0x1f4 V175
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f0
[0x1f0:0x1f3]
---
Predecessors: [0x1e9]
Successors: []
---
0x1f0 PUSH1 0x0
0x1f2 DUP1
0x1f3 REVERT
---
0x1f0: V177 = 0x0
0x1f3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f4
[0x1f4:0x1fb]
---
Predecessors: [0x1e9]
Successors: [0x414]
---
0x1f4 JUMPDEST
0x1f5 PUSH2 0x1fc
0x1f8 PUSH2 0x414
0x1fb JUMP
---
0x1f4: JUMPDEST 
0x1f5: V178 = 0x1fc
0x1f8: V179 = 0x414
0x1fb: JUMP 0x414
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1fc]
Exit stack: [V12, 0x1fc]

================================

Block 0x1fc
[0x1fc:0x20f]
---
Predecessors: [0x414]
Successors: []
---
0x1fc JUMPDEST
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 SWAP1
0x201 ISZERO
0x202 ISZERO
0x203 DUP2
0x204 MSTORE
0x205 PUSH1 0x20
0x207 ADD
0x208 PUSH1 0x40
0x20a MLOAD
0x20b DUP1
0x20c SWAP2
0x20d SUB
0x20e SWAP1
0x20f RETURN
---
0x1fc: JUMPDEST 
0x1fd: V180 = 0x40
0x1ff: V181 = M[0x40]
0x201: V182 = ISZERO V377
0x202: V183 = ISZERO V182
0x204: M[V181] = V183
0x205: V184 = 0x20
0x207: V185 = ADD 0x20 V181
0x208: V186 = 0x40
0x20a: V187 = M[0x40]
0x20d: V188 = SUB V185 V187
0x20f: RETURN V187 V188
---
Entry stack: [V12, 0x1fc, V377]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1fc]

================================

Block 0x210
[0x210:0x216]
---
Predecessors: [0x25]
Successors: [0x217, 0x21b]
---
0x210 JUMPDEST
0x211 CALLVALUE
0x212 ISZERO
0x213 PUSH2 0x21b
0x216 JUMPI
---
0x210: JUMPDEST 
0x211: V189 = CALLVALUE
0x212: V190 = ISZERO V189
0x213: V191 = 0x21b
0x216: JUMPI 0x21b V190
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x217
[0x217:0x21a]
---
Predecessors: [0x210]
Successors: []
---
0x217 PUSH1 0x0
0x219 DUP1
0x21a REVERT
---
0x217: V192 = 0x0
0x21a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21b
[0x21b:0x222]
---
Predecessors: [0x210]
Successors: [0x41d]
---
0x21b JUMPDEST
0x21c PUSH2 0x223
0x21f PUSH2 0x41d
0x222 JUMP
---
0x21b: JUMPDEST 
0x21c: V193 = 0x223
0x21f: V194 = 0x41d
0x222: JUMP 0x41d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x223]
Exit stack: [V12, 0x223]

================================

Block 0x223
[0x223:0x224]
---
Predecessors: [0x4ec, 0x5da, 0x68a, 0x75e]
Successors: []
---
0x223 JUMPDEST
0x224 STOP
---
0x223: JUMPDEST 
0x224: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x225
[0x225:0x22b]
---
Predecessors: [0x30]
Successors: [0x22c, 0x230]
---
0x225 JUMPDEST
0x226 CALLVALUE
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x225: JUMPDEST 
0x226: V195 = CALLVALUE
0x227: V196 = ISZERO V195
0x228: V197 = 0x230
0x22b: JUMPI 0x230 V196
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x225]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V198 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x230
[0x230:0x237]
---
Predecessors: [0x225]
Successors: [0x4ef]
---
0x230 JUMPDEST
0x231 PUSH2 0x238
0x234 PUSH2 0x4ef
0x237 JUMP
---
0x230: JUMPDEST 
0x231: V199 = 0x238
0x234: V200 = 0x4ef
0x237: JUMP 0x4ef
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x238]
Exit stack: [V12, 0x238]

================================

Block 0x238
[0x238:0x249]
---
Predecessors: [0x4ef, 0x4f5, 0x5de, 0x68d, 0x6a2]
Successors: []
---
0x238 JUMPDEST
0x239 PUSH1 0x40
0x23b MLOAD
0x23c SWAP1
0x23d DUP2
0x23e MSTORE
0x23f PUSH1 0x20
0x241 ADD
0x242 PUSH1 0x40
0x244 MLOAD
0x245 DUP1
0x246 SWAP2
0x247 SUB
0x248 SWAP1
0x249 RETURN
---
0x238: JUMPDEST 
0x239: V201 = 0x40
0x23b: V202 = M[0x40]
0x23e: M[V202] = S0
0x23f: V203 = 0x20
0x241: V204 = ADD 0x20 V202
0x242: V205 = 0x40
0x244: V206 = M[0x40]
0x247: V207 = SUB V204 V206
0x249: RETURN V206 V207
---
Entry stack: [V12, 0x238, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x238]

================================

Block 0x24a
[0x24a:0x250]
---
Predecessors: [0x3b]
Successors: [0x251, 0x255]
---
0x24a JUMPDEST
0x24b CALLVALUE
0x24c ISZERO
0x24d PUSH2 0x255
0x250 JUMPI
---
0x24a: JUMPDEST 
0x24b: V208 = CALLVALUE
0x24c: V209 = ISZERO V208
0x24d: V210 = 0x255
0x250: JUMPI 0x255 V209
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x251
[0x251:0x254]
---
Predecessors: [0x24a]
Successors: []
---
0x251 PUSH1 0x0
0x253 DUP1
0x254 REVERT
---
0x251: V211 = 0x0
0x254: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x255
[0x255:0x25c]
---
Predecessors: [0x24a]
Successors: [0x4f5]
---
0x255 JUMPDEST
0x256 PUSH2 0x238
0x259 PUSH2 0x4f5
0x25c JUMP
---
0x255: JUMPDEST 
0x256: V212 = 0x238
0x259: V213 = 0x4f5
0x25c: JUMP 0x4f5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x238]
Exit stack: [V12, 0x238]

================================

Block 0x25d
[0x25d:0x26e]
---
Predecessors: []
Successors: []
---
0x25d JUMPDEST
0x25e PUSH1 0x40
0x260 MLOAD
0x261 SWAP1
0x262 DUP2
0x263 MSTORE
0x264 PUSH1 0x20
0x266 ADD
0x267 PUSH1 0x40
0x269 MLOAD
0x26a DUP1
0x26b SWAP2
0x26c SUB
0x26d SWAP1
0x26e RETURN
---
0x25d: JUMPDEST 
0x25e: V214 = 0x40
0x260: V215 = M[0x40]
0x263: M[V215] = S0
0x264: V216 = 0x20
0x266: V217 = ADD 0x20 V215
0x267: V218 = 0x40
0x269: V219 = M[0x40]
0x26c: V220 = SUB V217 V219
0x26e: RETURN V219 V220
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x26f
[0x26f:0x275]
---
Predecessors: [0x46]
Successors: [0x276, 0x27a]
---
0x26f JUMPDEST
0x270 CALLVALUE
0x271 ISZERO
0x272 PUSH2 0x27a
0x275 JUMPI
---
0x26f: JUMPDEST 
0x270: V221 = CALLVALUE
0x271: V222 = ISZERO V221
0x272: V223 = 0x27a
0x275: JUMPI 0x27a V222
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x276
[0x276:0x279]
---
Predecessors: [0x26f]
Successors: []
---
0x276 PUSH1 0x0
0x278 DUP1
0x279 REVERT
---
0x276: V224 = 0x0
0x279: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27a
[0x27a:0x281]
---
Predecessors: [0x26f]
Successors: [0x4fb]
---
0x27a JUMPDEST
0x27b PUSH2 0x282
0x27e PUSH2 0x4fb
0x281 JUMP
---
0x27a: JUMPDEST 
0x27b: V225 = 0x282
0x27e: V226 = 0x4fb
0x281: JUMP 0x4fb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x282]
Exit stack: [V12, 0x282]

================================

Block 0x282
[0x282:0x29d]
---
Predecessors: [0x4fb, 0x693, 0x6a8, 0x6b7]
Successors: []
---
0x282 JUMPDEST
0x283 PUSH1 0x40
0x285 MLOAD
0x286 PUSH1 0x1
0x288 PUSH1 0xa0
0x28a PUSH1 0x2
0x28c EXP
0x28d SUB
0x28e SWAP1
0x28f SWAP2
0x290 AND
0x291 DUP2
0x292 MSTORE
0x293 PUSH1 0x20
0x295 ADD
0x296 PUSH1 0x40
0x298 MLOAD
0x299 DUP1
0x29a SWAP2
0x29b SUB
0x29c SWAP1
0x29d RETURN
---
0x282: JUMPDEST 
0x283: V227 = 0x40
0x285: V228 = M[0x40]
0x286: V229 = 0x1
0x288: V230 = 0xa0
0x28a: V231 = 0x2
0x28c: V232 = EXP 0x2 0xa0
0x28d: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x290: V234 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x292: M[V228] = V234
0x293: V235 = 0x20
0x295: V236 = ADD 0x20 V228
0x296: V237 = 0x40
0x298: V238 = M[0x40]
0x29b: V239 = SUB V236 V238
0x29d: RETURN V238 V239
---
Entry stack: [V12, 0x282, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x282]

================================

Block 0x29e
[0x29e:0x2a4]
---
Predecessors: [0x51]
Successors: [0x2a5, 0x2a9]
---
0x29e JUMPDEST
0x29f CALLVALUE
0x2a0 ISZERO
0x2a1 PUSH2 0x2a9
0x2a4 JUMPI
---
0x29e: JUMPDEST 
0x29f: V240 = CALLVALUE
0x2a0: V241 = ISZERO V240
0x2a1: V242 = 0x2a9
0x2a4: JUMPI 0x2a9 V241
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a5
[0x2a5:0x2a8]
---
Predecessors: [0x29e]
Successors: []
---
0x2a5 PUSH1 0x0
0x2a7 DUP1
0x2a8 REVERT
---
0x2a5: V243 = 0x0
0x2a8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a9
[0x2a9:0x2b0]
---
Predecessors: [0x29e]
Successors: [0x50a]
---
0x2a9 JUMPDEST
0x2aa PUSH2 0x223
0x2ad PUSH2 0x50a
0x2b0 JUMP
---
0x2a9: JUMPDEST 
0x2aa: V244 = 0x223
0x2ad: V245 = 0x50a
0x2b0: JUMP 0x50a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x223]
Exit stack: [V12, 0x223]

================================

Block 0x2b1
[0x2b1:0x2b2]
---
Predecessors: []
Successors: []
---
0x2b1 JUMPDEST
0x2b2 STOP
---
0x2b1: JUMPDEST 
0x2b2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2b3
[0x2b3:0x2b9]
---
Predecessors: [0x5c]
Successors: [0x2ba, 0x2be]
---
0x2b3 JUMPDEST
0x2b4 CALLVALUE
0x2b5 ISZERO
0x2b6 PUSH2 0x2be
0x2b9 JUMPI
---
0x2b3: JUMPDEST 
0x2b4: V246 = CALLVALUE
0x2b5: V247 = ISZERO V246
0x2b6: V248 = 0x2be
0x2b9: JUMPI 0x2be V247
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ba
[0x2ba:0x2bd]
---
Predecessors: [0x2b3]
Successors: []
---
0x2ba PUSH1 0x0
0x2bc DUP1
0x2bd REVERT
---
0x2ba: V249 = 0x0
0x2bd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2be
[0x2be:0x2c5]
---
Predecessors: [0x2b3]
Successors: [0x5de]
---
0x2be JUMPDEST
0x2bf PUSH2 0x238
0x2c2 PUSH2 0x5de
0x2c5 JUMP
---
0x2be: JUMPDEST 
0x2bf: V250 = 0x238
0x2c2: V251 = 0x5de
0x2c5: JUMP 0x5de
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x238]
Exit stack: [V12, 0x238]

================================

Block 0x2c6
[0x2c6:0x2d7]
---
Predecessors: []
Successors: []
---
0x2c6 JUMPDEST
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca SWAP1
0x2cb DUP2
0x2cc MSTORE
0x2cd PUSH1 0x20
0x2cf ADD
0x2d0 PUSH1 0x40
0x2d2 MLOAD
0x2d3 DUP1
0x2d4 SWAP2
0x2d5 SUB
0x2d6 SWAP1
0x2d7 RETURN
---
0x2c6: JUMPDEST 
0x2c7: V252 = 0x40
0x2c9: V253 = M[0x40]
0x2cc: M[V253] = S0
0x2cd: V254 = 0x20
0x2cf: V255 = ADD 0x20 V253
0x2d0: V256 = 0x40
0x2d2: V257 = M[0x40]
0x2d5: V258 = SUB V255 V257
0x2d7: RETURN V257 V258
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d8
[0x2d8:0x2de]
---
Predecessors: [0x67]
Successors: [0x2df, 0x2e3]
---
0x2d8 JUMPDEST
0x2d9 CALLVALUE
0x2da ISZERO
0x2db PUSH2 0x2e3
0x2de JUMPI
---
0x2d8: JUMPDEST 
0x2d9: V259 = CALLVALUE
0x2da: V260 = ISZERO V259
0x2db: V261 = 0x2e3
0x2de: JUMPI 0x2e3 V260
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2df
[0x2df:0x2e2]
---
Predecessors: [0x2d8]
Successors: []
---
0x2df PUSH1 0x0
0x2e1 DUP1
0x2e2 REVERT
---
0x2df: V262 = 0x0
0x2e2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e3
[0x2e3:0x2ea]
---
Predecessors: [0x2d8]
Successors: [0x5e4]
---
0x2e3 JUMPDEST
0x2e4 PUSH2 0x223
0x2e7 PUSH2 0x5e4
0x2ea JUMP
---
0x2e3: JUMPDEST 
0x2e4: V263 = 0x223
0x2e7: V264 = 0x5e4
0x2ea: JUMP 0x5e4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x223]
Exit stack: [V12, 0x223]

================================

Block 0x2eb
[0x2eb:0x2ec]
---
Predecessors: []
Successors: []
---
0x2eb JUMPDEST
0x2ec STOP
---
0x2eb: JUMPDEST 
0x2ec: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ed
[0x2ed:0x2f3]
---
Predecessors: [0x72]
Successors: [0x2f4, 0x2f8]
---
0x2ed JUMPDEST
0x2ee CALLVALUE
0x2ef ISZERO
0x2f0 PUSH2 0x2f8
0x2f3 JUMPI
---
0x2ed: JUMPDEST 
0x2ee: V265 = CALLVALUE
0x2ef: V266 = ISZERO V265
0x2f0: V267 = 0x2f8
0x2f3: JUMPI 0x2f8 V266
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f4
[0x2f4:0x2f7]
---
Predecessors: [0x2ed]
Successors: []
---
0x2f4 PUSH1 0x0
0x2f6 DUP1
0x2f7 REVERT
---
0x2f4: V268 = 0x0
0x2f7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f8
[0x2f8:0x2ff]
---
Predecessors: [0x2ed]
Successors: [0x68d]
---
0x2f8 JUMPDEST
0x2f9 PUSH2 0x238
0x2fc PUSH2 0x68d
0x2ff JUMP
---
0x2f8: JUMPDEST 
0x2f9: V269 = 0x238
0x2fc: V270 = 0x68d
0x2ff: JUMP 0x68d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x238]
Exit stack: [V12, 0x238]

================================

Block 0x300
[0x300:0x311]
---
Predecessors: []
Successors: []
---
0x300 JUMPDEST
0x301 PUSH1 0x40
0x303 MLOAD
0x304 SWAP1
0x305 DUP2
0x306 MSTORE
0x307 PUSH1 0x20
0x309 ADD
0x30a PUSH1 0x40
0x30c MLOAD
0x30d DUP1
0x30e SWAP2
0x30f SUB
0x310 SWAP1
0x311 RETURN
---
0x300: JUMPDEST 
0x301: V271 = 0x40
0x303: V272 = M[0x40]
0x306: M[V272] = S0
0x307: V273 = 0x20
0x309: V274 = ADD 0x20 V272
0x30a: V275 = 0x40
0x30c: V276 = M[0x40]
0x30f: V277 = SUB V274 V276
0x311: RETURN V276 V277
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x312
[0x312:0x318]
---
Predecessors: [0x7d]
Successors: [0x319, 0x31d]
---
0x312 JUMPDEST
0x313 CALLVALUE
0x314 ISZERO
0x315 PUSH2 0x31d
0x318 JUMPI
---
0x312: JUMPDEST 
0x313: V278 = CALLVALUE
0x314: V279 = ISZERO V278
0x315: V280 = 0x31d
0x318: JUMPI 0x31d V279
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x319
[0x319:0x31c]
---
Predecessors: [0x312]
Successors: []
---
0x319 PUSH1 0x0
0x31b DUP1
0x31c REVERT
---
0x319: V281 = 0x0
0x31c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31d
[0x31d:0x324]
---
Predecessors: [0x312]
Successors: [0x693]
---
0x31d JUMPDEST
0x31e PUSH2 0x282
0x321 PUSH2 0x693
0x324 JUMP
---
0x31d: JUMPDEST 
0x31e: V282 = 0x282
0x321: V283 = 0x693
0x324: JUMP 0x693
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x282]
Exit stack: [V12, 0x282]

================================

Block 0x325
[0x325:0x340]
---
Predecessors: []
Successors: []
---
0x325 JUMPDEST
0x326 PUSH1 0x40
0x328 MLOAD
0x329 PUSH1 0x1
0x32b PUSH1 0xa0
0x32d PUSH1 0x2
0x32f EXP
0x330 SUB
0x331 SWAP1
0x332 SWAP2
0x333 AND
0x334 DUP2
0x335 MSTORE
0x336 PUSH1 0x20
0x338 ADD
0x339 PUSH1 0x40
0x33b MLOAD
0x33c DUP1
0x33d SWAP2
0x33e SUB
0x33f SWAP1
0x340 RETURN
---
0x325: JUMPDEST 
0x326: V284 = 0x40
0x328: V285 = M[0x40]
0x329: V286 = 0x1
0x32b: V287 = 0xa0
0x32d: V288 = 0x2
0x32f: V289 = EXP 0x2 0xa0
0x330: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x333: V291 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x335: M[V285] = V291
0x336: V292 = 0x20
0x338: V293 = ADD 0x20 V285
0x339: V294 = 0x40
0x33b: V295 = M[0x40]
0x33e: V296 = SUB V293 V295
0x340: RETURN V295 V296
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x341
[0x341:0x347]
---
Predecessors: [0x88]
Successors: [0x348, 0x34c]
---
0x341 JUMPDEST
0x342 CALLVALUE
0x343 ISZERO
0x344 PUSH2 0x34c
0x347 JUMPI
---
0x341: JUMPDEST 
0x342: V297 = CALLVALUE
0x343: V298 = ISZERO V297
0x344: V299 = 0x34c
0x347: JUMPI 0x34c V298
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x348
[0x348:0x34b]
---
Predecessors: [0x341]
Successors: []
---
0x348 PUSH1 0x0
0x34a DUP1
0x34b REVERT
---
0x348: V300 = 0x0
0x34b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x34c
[0x34c:0x353]
---
Predecessors: [0x341]
Successors: [0x6a2]
---
0x34c JUMPDEST
0x34d PUSH2 0x238
0x350 PUSH2 0x6a2
0x353 JUMP
---
0x34c: JUMPDEST 
0x34d: V301 = 0x238
0x350: V302 = 0x6a2
0x353: JUMP 0x6a2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x238]
Exit stack: [V12, 0x238]

================================

Block 0x354
[0x354:0x365]
---
Predecessors: []
Successors: []
---
0x354 JUMPDEST
0x355 PUSH1 0x40
0x357 MLOAD
0x358 SWAP1
0x359 DUP2
0x35a MSTORE
0x35b PUSH1 0x20
0x35d ADD
0x35e PUSH1 0x40
0x360 MLOAD
0x361 DUP1
0x362 SWAP2
0x363 SUB
0x364 SWAP1
0x365 RETURN
---
0x354: JUMPDEST 
0x355: V303 = 0x40
0x357: V304 = M[0x40]
0x35a: M[V304] = S0
0x35b: V305 = 0x20
0x35d: V306 = ADD 0x20 V304
0x35e: V307 = 0x40
0x360: V308 = M[0x40]
0x363: V309 = SUB V306 V308
0x365: RETURN V308 V309
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x366
[0x366:0x36c]
---
Predecessors: [0x93]
Successors: [0x36d, 0x371]
---
0x366 JUMPDEST
0x367 CALLVALUE
0x368 ISZERO
0x369 PUSH2 0x371
0x36c JUMPI
---
0x366: JUMPDEST 
0x367: V310 = CALLVALUE
0x368: V311 = ISZERO V310
0x369: V312 = 0x371
0x36c: JUMPI 0x371 V311
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x36d
[0x36d:0x370]
---
Predecessors: [0x366]
Successors: []
---
0x36d PUSH1 0x0
0x36f DUP1
0x370 REVERT
---
0x36d: V313 = 0x0
0x370: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x371
[0x371:0x378]
---
Predecessors: [0x366]
Successors: [0x6a8]
---
0x371 JUMPDEST
0x372 PUSH2 0x282
0x375 PUSH2 0x6a8
0x378 JUMP
---
0x371: JUMPDEST 
0x372: V314 = 0x282
0x375: V315 = 0x6a8
0x378: JUMP 0x6a8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x282]
Exit stack: [V12, 0x282]

================================

Block 0x379
[0x379:0x394]
---
Predecessors: []
Successors: []
---
0x379 JUMPDEST
0x37a PUSH1 0x40
0x37c MLOAD
0x37d PUSH1 0x1
0x37f PUSH1 0xa0
0x381 PUSH1 0x2
0x383 EXP
0x384 SUB
0x385 SWAP1
0x386 SWAP2
0x387 AND
0x388 DUP2
0x389 MSTORE
0x38a PUSH1 0x20
0x38c ADD
0x38d PUSH1 0x40
0x38f MLOAD
0x390 DUP1
0x391 SWAP2
0x392 SUB
0x393 SWAP1
0x394 RETURN
---
0x379: JUMPDEST 
0x37a: V316 = 0x40
0x37c: V317 = M[0x40]
0x37d: V318 = 0x1
0x37f: V319 = 0xa0
0x381: V320 = 0x2
0x383: V321 = EXP 0x2 0xa0
0x384: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x387: V323 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x389: M[V317] = V323
0x38a: V324 = 0x20
0x38c: V325 = ADD 0x20 V317
0x38d: V326 = 0x40
0x38f: V327 = M[0x40]
0x392: V328 = SUB V325 V327
0x394: RETURN V327 V328
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x395
[0x395:0x39b]
---
Predecessors: [0x9e]
Successors: [0x39c, 0x3a0]
---
0x395 JUMPDEST
0x396 CALLVALUE
0x397 ISZERO
0x398 PUSH2 0x3a0
0x39b JUMPI
---
0x395: JUMPDEST 
0x396: V329 = CALLVALUE
0x397: V330 = ISZERO V329
0x398: V331 = 0x3a0
0x39b: JUMPI 0x3a0 V330
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39c
[0x39c:0x39f]
---
Predecessors: [0x395]
Successors: []
---
0x39c PUSH1 0x0
0x39e DUP1
0x39f REVERT
---
0x39c: V332 = 0x0
0x39f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a0
[0x3a0:0x3a7]
---
Predecessors: [0x395]
Successors: [0x6b7]
---
0x3a0 JUMPDEST
0x3a1 PUSH2 0x282
0x3a4 PUSH2 0x6b7
0x3a7 JUMP
---
0x3a0: JUMPDEST 
0x3a1: V333 = 0x282
0x3a4: V334 = 0x6b7
0x3a7: JUMP 0x6b7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x282]
Exit stack: [V12, 0x282]

================================

Block 0x3a8
[0x3a8:0x3c3]
---
Predecessors: []
Successors: []
---
0x3a8 JUMPDEST
0x3a9 PUSH1 0x40
0x3ab MLOAD
0x3ac PUSH1 0x1
0x3ae PUSH1 0xa0
0x3b0 PUSH1 0x2
0x3b2 EXP
0x3b3 SUB
0x3b4 SWAP1
0x3b5 SWAP2
0x3b6 AND
0x3b7 DUP2
0x3b8 MSTORE
0x3b9 PUSH1 0x20
0x3bb ADD
0x3bc PUSH1 0x40
0x3be MLOAD
0x3bf DUP1
0x3c0 SWAP2
0x3c1 SUB
0x3c2 SWAP1
0x3c3 RETURN
---
0x3a8: JUMPDEST 
0x3a9: V335 = 0x40
0x3ab: V336 = M[0x40]
0x3ac: V337 = 0x1
0x3ae: V338 = 0xa0
0x3b0: V339 = 0x2
0x3b2: V340 = EXP 0x2 0xa0
0x3b3: V341 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b6: V342 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3b8: M[V336] = V342
0x3b9: V343 = 0x20
0x3bb: V344 = ADD 0x20 V336
0x3bc: V345 = 0x40
0x3be: V346 = M[0x40]
0x3c1: V347 = SUB V344 V346
0x3c3: RETURN V346 V347
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3c4
[0x3c4:0x3ca]
---
Predecessors: [0xa9]
Successors: [0x3cb, 0x3cf]
---
0x3c4 JUMPDEST
0x3c5 CALLVALUE
0x3c6 ISZERO
0x3c7 PUSH2 0x3cf
0x3ca JUMPI
---
0x3c4: JUMPDEST 
0x3c5: V348 = CALLVALUE
0x3c6: V349 = ISZERO V348
0x3c7: V350 = 0x3cf
0x3ca: JUMPI 0x3cf V349
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3cb
[0x3cb:0x3ce]
---
Predecessors: [0x3c4]
Successors: []
---
0x3cb PUSH1 0x0
0x3cd DUP1
0x3ce REVERT
---
0x3cb: V351 = 0x0
0x3ce: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3cf
[0x3cf:0x3e2]
---
Predecessors: [0x3c4]
Successors: [0x6c6]
---
0x3cf JUMPDEST
0x3d0 PUSH2 0x223
0x3d3 PUSH1 0x1
0x3d5 PUSH1 0xa0
0x3d7 PUSH1 0x2
0x3d9 EXP
0x3da SUB
0x3db PUSH1 0x4
0x3dd CALLDATALOAD
0x3de AND
0x3df PUSH2 0x6c6
0x3e2 JUMP
---
0x3cf: JUMPDEST 
0x3d0: V352 = 0x223
0x3d3: V353 = 0x1
0x3d5: V354 = 0xa0
0x3d7: V355 = 0x2
0x3d9: V356 = EXP 0x2 0xa0
0x3da: V357 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3db: V358 = 0x4
0x3dd: V359 = CALLDATALOAD 0x4
0x3de: V360 = AND V359 0xffffffffffffffffffffffffffffffffffffffff
0x3df: V361 = 0x6c6
0x3e2: JUMP 0x6c6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x223, V360]
Exit stack: [V12, 0x223, V360]

================================

Block 0x3e3
[0x3e3:0x3e4]
---
Predecessors: []
Successors: []
---
0x3e3 JUMPDEST
0x3e4 STOP
---
0x3e3: JUMPDEST 
0x3e4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3e5
[0x3e5:0x3f1]
---
Predecessors: [0xec]
Successors: [0x3f2, 0x401]
---
0x3e5 JUMPDEST
0x3e6 PUSH1 0x0
0x3e8 DUP3
0x3e9 DUP3
0x3ea MUL
0x3eb DUP4
0x3ec ISZERO
0x3ed DUP1
0x3ee PUSH2 0x401
0x3f1 JUMPI
---
0x3e5: JUMPDEST 
0x3e6: V362 = 0x0
0x3ea: V363 = MUL V80 V82
0x3ec: V364 = ISZERO V82
0x3ee: V365 = 0x401
0x3f1: JUMPI 0x401 V364
---
Entry stack: [V12, 0x0, 0x100, V82, V80]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V363, V364]
Exit stack: [V12, 0x0, 0x100, V82, V80, 0x0, V363, V364]

================================

Block 0x3f2
[0x3f2:0x3fc]
---
Predecessors: [0x3e5]
Successors: [0x3fd, 0x3fe]
---
0x3f2 POP
0x3f3 DUP3
0x3f4 DUP5
0x3f5 DUP3
0x3f6 DUP2
0x3f7 ISZERO
0x3f8 ISZERO
0x3f9 PUSH2 0x3fe
0x3fc JUMPI
---
0x3f7: V366 = ISZERO V82
0x3f8: V367 = ISZERO V366
0x3f9: V368 = 0x3fe
0x3fc: JUMPI 0x3fe V367
---
Entry stack: [V12, 0x0, 0x100, V82, V80, 0x0, V363, V364]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, 0x0, 0x100, V82, V80, 0x0, V363, V80, V82, V363]

================================

Block 0x3fd
[0x3fd:0x3fd]
---
Predecessors: [0x3f2]
Successors: []
---
0x3fd INVALID
---
0x3fd: INVALID 
---
Entry stack: [V12, 0x0, 0x100, V82, V80, 0x0, V363, V80, V82, V363]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x100, V82, V80, 0x0, V363, V80, V82, V363]

================================

Block 0x3fe
[0x3fe:0x400]
---
Predecessors: [0x3f2]
Successors: [0x401]
---
0x3fe JUMPDEST
0x3ff DIV
0x400 EQ
---
0x3fe: JUMPDEST 
0x3ff: V369 = DIV V363 V82
0x400: V370 = EQ V369 V80
---
Entry stack: [V12, 0x0, 0x100, V82, V80, 0x0, V363, V80, V82, V363]
Stack pops: 3
Stack additions: [V370]
Exit stack: [V12, 0x0, 0x100, V82, V80, 0x0, V363, V370]

================================

Block 0x401
[0x401:0x407]
---
Predecessors: [0x3e5, 0x3fe]
Successors: [0x408, 0x409]
---
0x401 JUMPDEST
0x402 ISZERO
0x403 ISZERO
0x404 PUSH2 0x409
0x407 JUMPI
---
0x401: JUMPDEST 
0x402: V371 = ISZERO S0
0x403: V372 = ISZERO V371
0x404: V373 = 0x409
0x407: JUMPI 0x409 V372
---
Entry stack: [V12, 0x0, 0x100, V82, V80, 0x0, V363, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x0, 0x100, V82, V80, 0x0, V363]

================================

Block 0x408
[0x408:0x408]
---
Predecessors: [0x401]
Successors: []
---
0x408 INVALID
---
0x408: INVALID 
---
Entry stack: [V12, 0x0, 0x100, V82, V80, 0x0, V363]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x100, V82, V80, 0x0, V363]

================================

Block 0x409
[0x409:0x40c]
---
Predecessors: [0x401]
Successors: [0x40d]
---
0x409 JUMPDEST
0x40a DUP1
0x40b SWAP2
0x40c POP
---
0x409: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x100, V82, V80, 0x0, V363]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0x0, 0x100, V82, V80, V363, V363]

================================

Block 0x40d
[0x40d:0x413]
---
Predecessors: [0x409]
Successors: [0x100]
---
0x40d JUMPDEST
0x40e POP
0x40f SWAP3
0x410 SWAP2
0x411 POP
0x412 POP
0x413 JUMP
---
0x40d: JUMPDEST 
0x413: JUMP 0x100
---
Entry stack: [V12, 0x0, 0x100, V82, V80, V363, V363]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x0, V363]

================================

Block 0x414
[0x414:0x41c]
---
Predecessors: [0x1f4]
Successors: [0x1fc]
---
0x414 JUMPDEST
0x415 PUSH1 0x9
0x417 SLOAD
0x418 PUSH1 0xff
0x41a AND
0x41b DUP2
0x41c JUMP
---
0x414: JUMPDEST 
0x415: V374 = 0x9
0x417: V375 = S[0x9]
0x418: V376 = 0xff
0x41a: V377 = AND 0xff V375
0x41c: JUMP 0x1fc
---
Entry stack: [V12, 0x1fc]
Stack pops: 1
Stack additions: [S0, V377]
Exit stack: [V12, 0x1fc, V377]

================================

Block 0x41d
[0x41d:0x434]
---
Predecessors: [0x21b]
Successors: [0x435, 0x439]
---
0x41d JUMPDEST
0x41e PUSH1 0x0
0x420 DUP1
0x421 SLOAD
0x422 CALLER
0x423 PUSH1 0x1
0x425 PUSH1 0xa0
0x427 PUSH1 0x2
0x429 EXP
0x42a SUB
0x42b SWAP1
0x42c DUP2
0x42d AND
0x42e SWAP2
0x42f AND
0x430 EQ
0x431 PUSH2 0x439
0x434 JUMPI
---
0x41d: JUMPDEST 
0x41e: V378 = 0x0
0x421: V379 = S[0x0]
0x422: V380 = CALLER
0x423: V381 = 0x1
0x425: V382 = 0xa0
0x427: V383 = 0x2
0x429: V384 = EXP 0x2 0xa0
0x42a: V385 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42d: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x42f: V387 = AND V379 0xffffffffffffffffffffffffffffffffffffffff
0x430: V388 = EQ V387 V386
0x431: V389 = 0x439
0x434: JUMPI 0x439 V388
---
Entry stack: [V12, 0x223]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x223, 0x0]

================================

Block 0x435
[0x435:0x438]
---
Predecessors: [0x41d]
Successors: []
---
0x435 PUSH1 0x0
0x437 DUP1
0x438 REVERT
---
0x435: V390 = 0x0
0x438: REVERT 0x0 0x0
---
Entry stack: [V12, 0x223, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, 0x0]

================================

Block 0x439
[0x439:0x442]
---
Predecessors: [0x41d]
Successors: [0x443, 0x444]
---
0x439 JUMPDEST
0x43a PUSH1 0x8
0x43c SLOAD
0x43d TIMESTAMP
0x43e GT
0x43f PUSH2 0x444
0x442 JUMPI
---
0x439: JUMPDEST 
0x43a: V391 = 0x8
0x43c: V392 = S[0x8]
0x43d: V393 = TIMESTAMP
0x43e: V394 = GT V393 V392
0x43f: V395 = 0x444
0x442: JUMPI 0x444 V394
---
Entry stack: [V12, 0x223, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, 0x0]

================================

Block 0x443
[0x443:0x443]
---
Predecessors: [0x439]
Successors: []
---
0x443 INVALID
---
0x443: INVALID 
---
Entry stack: [V12, 0x223, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, 0x0]

================================

Block 0x444
[0x444:0x450]
---
Predecessors: [0x439]
Successors: [0x451, 0x452]
---
0x444 JUMPDEST
0x445 PUSH1 0x9
0x447 SLOAD
0x448 PUSH1 0xff
0x44a AND
0x44b ISZERO
0x44c ISZERO
0x44d PUSH2 0x452
0x450 JUMPI
---
0x444: JUMPDEST 
0x445: V396 = 0x9
0x447: V397 = S[0x9]
0x448: V398 = 0xff
0x44a: V399 = AND 0xff V397
0x44b: V400 = ISZERO V399
0x44c: V401 = ISZERO V400
0x44d: V402 = 0x452
0x450: JUMPI 0x452 V401
---
Entry stack: [V12, 0x223, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, 0x0]

================================

Block 0x451
[0x451:0x451]
---
Predecessors: [0x444]
Successors: []
---
0x451 INVALID
---
0x451: INVALID 
---
Entry stack: [V12, 0x223, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, 0x0]

================================

Block 0x452
[0x452:0x4bf]
---
Predecessors: [0x444]
Successors: [0x4c0, 0x4c4]
---
0x452 JUMPDEST
0x453 POP
0x454 PUSH1 0x5
0x456 DUP1
0x457 SLOAD
0x458 PUSH1 0x0
0x45a SWAP2
0x45b DUP3
0x45c SWAP1
0x45d SSTORE
0x45e PUSH1 0x3
0x460 SLOAD
0x461 DUP3
0x462 SLOAD
0x463 SWAP2
0x464 SWAP3
0x465 PUSH1 0x1
0x467 PUSH1 0xa0
0x469 PUSH1 0x2
0x46b EXP
0x46c SUB
0x46d SWAP2
0x46e DUP3
0x46f AND
0x470 SWAP3
0x471 PUSH4 0xa9059cbb
0x476 SWAP3
0x477 AND
0x478 SWAP1
0x479 DUP5
0x47a SWAP1
0x47b PUSH1 0x40
0x47d MLOAD
0x47e PUSH1 0x20
0x480 ADD
0x481 MSTORE
0x482 PUSH1 0x40
0x484 MLOAD
0x485 PUSH1 0xe0
0x487 PUSH1 0x2
0x489 EXP
0x48a PUSH4 0xffffffff
0x48f DUP6
0x490 AND
0x491 MUL
0x492 DUP2
0x493 MSTORE
0x494 PUSH1 0x1
0x496 PUSH1 0xa0
0x498 PUSH1 0x2
0x49a EXP
0x49b SUB
0x49c SWAP1
0x49d SWAP3
0x49e AND
0x49f PUSH1 0x4
0x4a1 DUP4
0x4a2 ADD
0x4a3 MSTORE
0x4a4 PUSH1 0x24
0x4a6 DUP3
0x4a7 ADD
0x4a8 MSTORE
0x4a9 PUSH1 0x44
0x4ab ADD
0x4ac PUSH1 0x20
0x4ae PUSH1 0x40
0x4b0 MLOAD
0x4b1 DUP1
0x4b2 DUP4
0x4b3 SUB
0x4b4 DUP2
0x4b5 PUSH1 0x0
0x4b7 DUP8
0x4b8 DUP1
0x4b9 EXTCODESIZE
0x4ba ISZERO
0x4bb ISZERO
0x4bc PUSH2 0x4c4
0x4bf JUMPI
---
0x452: JUMPDEST 
0x454: V403 = 0x5
0x457: V404 = S[0x5]
0x458: V405 = 0x0
0x45d: S[0x5] = 0x0
0x45e: V406 = 0x3
0x460: V407 = S[0x3]
0x462: V408 = S[0x0]
0x465: V409 = 0x1
0x467: V410 = 0xa0
0x469: V411 = 0x2
0x46b: V412 = EXP 0x2 0xa0
0x46c: V413 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46f: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x471: V415 = 0xa9059cbb
0x477: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff V408
0x47b: V417 = 0x40
0x47d: V418 = M[0x40]
0x47e: V419 = 0x20
0x480: V420 = ADD 0x20 V418
0x481: M[V420] = 0x0
0x482: V421 = 0x40
0x484: V422 = M[0x40]
0x485: V423 = 0xe0
0x487: V424 = 0x2
0x489: V425 = EXP 0x2 0xe0
0x48a: V426 = 0xffffffff
0x490: V427 = AND 0xa9059cbb 0xffffffff
0x491: V428 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x493: M[V422] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x494: V429 = 0x1
0x496: V430 = 0xa0
0x498: V431 = 0x2
0x49a: V432 = EXP 0x2 0xa0
0x49b: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49e: V434 = AND V416 0xffffffffffffffffffffffffffffffffffffffff
0x49f: V435 = 0x4
0x4a2: V436 = ADD V422 0x4
0x4a3: M[V436] = V434
0x4a4: V437 = 0x24
0x4a7: V438 = ADD V422 0x24
0x4a8: M[V438] = V404
0x4a9: V439 = 0x44
0x4ab: V440 = ADD 0x44 V422
0x4ac: V441 = 0x20
0x4ae: V442 = 0x40
0x4b0: V443 = M[0x40]
0x4b3: V444 = SUB V440 V443
0x4b5: V445 = 0x0
0x4b9: V446 = EXTCODESIZE V414
0x4ba: V447 = ISZERO V446
0x4bb: V448 = ISZERO V447
0x4bc: V449 = 0x4c4
0x4bf: JUMPI 0x4c4 V448
---
Entry stack: [V12, 0x223, 0x0]
Stack pops: 1
Stack additions: [V404, V414, 0xa9059cbb, V440, 0x20, V443, V444, V443, 0x0, V414]
Exit stack: [V12, 0x223, V404, V414, 0xa9059cbb, V440, 0x20, V443, V444, V443, 0x0, V414]

================================

Block 0x4c0
[0x4c0:0x4c3]
---
Predecessors: [0x452]
Successors: []
---
0x4c0 PUSH1 0x0
0x4c2 DUP1
0x4c3 REVERT
---
0x4c0: V450 = 0x0
0x4c3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x223, V404, V414, 0xa9059cbb, V440, 0x20, V443, V444, V443, 0x0, V414]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, V404, V414, 0xa9059cbb, V440, 0x20, V443, V444, V443, 0x0, V414]

================================

Block 0x4c4
[0x4c4:0x4d0]
---
Predecessors: [0x452]
Successors: [0x4d1, 0x4d5]
---
0x4c4 JUMPDEST
0x4c5 PUSH2 0x2c6
0x4c8 GAS
0x4c9 SUB
0x4ca CALL
0x4cb ISZERO
0x4cc ISZERO
0x4cd PUSH2 0x4d5
0x4d0 JUMPI
---
0x4c4: JUMPDEST 
0x4c5: V451 = 0x2c6
0x4c8: V452 = GAS
0x4c9: V453 = SUB V452 0x2c6
0x4ca: V454 = CALL V453 V414 0x0 V443 V444 V443 0x20
0x4cb: V455 = ISZERO V454
0x4cc: V456 = ISZERO V455
0x4cd: V457 = 0x4d5
0x4d0: JUMPI 0x4d5 V456
---
Entry stack: [V12, 0x223, V404, V414, 0xa9059cbb, V440, 0x20, V443, V444, V443, 0x0, V414]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x223, V404, V414, 0xa9059cbb, V440]

================================

Block 0x4d1
[0x4d1:0x4d4]
---
Predecessors: [0x4c4]
Successors: []
---
0x4d1 PUSH1 0x0
0x4d3 DUP1
0x4d4 REVERT
---
0x4d1: V458 = 0x0
0x4d4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x223, V404, V414, 0xa9059cbb, V440]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, V404, V414, 0xa9059cbb, V440]

================================

Block 0x4d5
[0x4d5:0x4e5]
---
Predecessors: [0x4c4]
Successors: [0x4e6, 0x4ea]
---
0x4d5 JUMPDEST
0x4d6 POP
0x4d7 POP
0x4d8 POP
0x4d9 PUSH1 0x40
0x4db MLOAD
0x4dc DUP1
0x4dd MLOAD
0x4de SWAP1
0x4df POP
0x4e0 ISZERO
0x4e1 ISZERO
0x4e2 PUSH2 0x4ea
0x4e5 JUMPI
---
0x4d5: JUMPDEST 
0x4d9: V459 = 0x40
0x4db: V460 = M[0x40]
0x4dd: V461 = M[V460]
0x4e0: V462 = ISZERO V461
0x4e1: V463 = ISZERO V462
0x4e2: V464 = 0x4ea
0x4e5: JUMPI 0x4ea V463
---
Entry stack: [V12, 0x223, V404, V414, 0xa9059cbb, V440]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x223, V404]

================================

Block 0x4e6
[0x4e6:0x4e9]
---
Predecessors: [0x4d5]
Successors: []
---
0x4e6 PUSH1 0x0
0x4e8 DUP1
0x4e9 REVERT
---
0x4e6: V465 = 0x0
0x4e9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x223, V404]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, V404]

================================

Block 0x4ea
[0x4ea:0x4ea]
---
Predecessors: [0x4d5]
Successors: [0x4eb]
---
0x4ea JUMPDEST
---
0x4ea: JUMPDEST 
---
Entry stack: [V12, 0x223, V404]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, V404]

================================

Block 0x4eb
[0x4eb:0x4eb]
---
Predecessors: [0x4ea]
Successors: [0x4ec]
---
0x4eb JUMPDEST
---
0x4eb: JUMPDEST 
---
Entry stack: [V12, 0x223, V404]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, V404]

================================

Block 0x4ec
[0x4ec:0x4ee]
---
Predecessors: [0x4eb]
Successors: [0x223]
---
0x4ec JUMPDEST
0x4ed POP
0x4ee JUMP
---
0x4ec: JUMPDEST 
0x4ee: JUMP 0x223
---
Entry stack: [V12, 0x223, V404]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ef
[0x4ef:0x4f4]
---
Predecessors: [0x230]
Successors: [0x238]
---
0x4ef JUMPDEST
0x4f0 PUSH1 0x4
0x4f2 SLOAD
0x4f3 DUP2
0x4f4 JUMP
---
0x4ef: JUMPDEST 
0x4f0: V466 = 0x4
0x4f2: V467 = S[0x4]
0x4f4: JUMP 0x238
---
Entry stack: [V12, 0x238]
Stack pops: 1
Stack additions: [S0, V467]
Exit stack: [V12, 0x238, V467]

================================

Block 0x4f5
[0x4f5:0x4fa]
---
Predecessors: [0x255]
Successors: [0x238]
---
0x4f5 JUMPDEST
0x4f6 PUSH1 0x7
0x4f8 SLOAD
0x4f9 DUP2
0x4fa JUMP
---
0x4f5: JUMPDEST 
0x4f6: V468 = 0x7
0x4f8: V469 = S[0x7]
0x4fa: JUMP 0x238
---
Entry stack: [V12, 0x238]
Stack pops: 1
Stack additions: [S0, V469]
Exit stack: [V12, 0x238, V469]

================================

Block 0x4fb
[0x4fb:0x509]
---
Predecessors: [0x27a]
Successors: [0x282]
---
0x4fb JUMPDEST
0x4fc PUSH1 0x2
0x4fe SLOAD
0x4ff PUSH1 0x1
0x501 PUSH1 0xa0
0x503 PUSH1 0x2
0x505 EXP
0x506 SUB
0x507 AND
0x508 DUP2
0x509 JUMP
---
0x4fb: JUMPDEST 
0x4fc: V470 = 0x2
0x4fe: V471 = S[0x2]
0x4ff: V472 = 0x1
0x501: V473 = 0xa0
0x503: V474 = 0x2
0x505: V475 = EXP 0x2 0xa0
0x506: V476 = SUB 0x10000000000000000000000000000000000000000 0x1
0x507: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x509: JUMP 0x282
---
Entry stack: [V12, 0x282]
Stack pops: 1
Stack additions: [S0, V477]
Exit stack: [V12, 0x282, V477]

================================

Block 0x50a
[0x50a:0x523]
---
Predecessors: [0x2a9]
Successors: [0x524, 0x528]
---
0x50a JUMPDEST
0x50b PUSH1 0x0
0x50d DUP1
0x50e SLOAD
0x50f DUP2
0x510 SWAP1
0x511 CALLER
0x512 PUSH1 0x1
0x514 PUSH1 0xa0
0x516 PUSH1 0x2
0x518 EXP
0x519 SUB
0x51a SWAP1
0x51b DUP2
0x51c AND
0x51d SWAP2
0x51e AND
0x51f EQ
0x520 PUSH2 0x528
0x523 JUMPI
---
0x50a: JUMPDEST 
0x50b: V478 = 0x0
0x50e: V479 = S[0x0]
0x511: V480 = CALLER
0x512: V481 = 0x1
0x514: V482 = 0xa0
0x516: V483 = 0x2
0x518: V484 = EXP 0x2 0xa0
0x519: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51c: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x51e: V487 = AND V479 0xffffffffffffffffffffffffffffffffffffffff
0x51f: V488 = EQ V487 V486
0x520: V489 = 0x528
0x523: JUMPI 0x528 V488
---
Entry stack: [V12, 0x223]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x223, 0x0, 0x0]

================================

Block 0x524
[0x524:0x527]
---
Predecessors: [0x50a]
Successors: []
---
0x524 PUSH1 0x0
0x526 DUP1
0x527 REVERT
---
0x524: V490 = 0x0
0x527: REVERT 0x0 0x0
---
Entry stack: [V12, 0x223, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, 0x0, 0x0]

================================

Block 0x528
[0x528:0x532]
---
Predecessors: [0x50a]
Successors: [0x533, 0x538]
---
0x528 JUMPDEST
0x529 PUSH1 0x8
0x52b SLOAD
0x52c TIMESTAMP
0x52d GT
0x52e DUP1
0x52f PUSH2 0x538
0x532 JUMPI
---
0x528: JUMPDEST 
0x529: V491 = 0x8
0x52b: V492 = S[0x8]
0x52c: V493 = TIMESTAMP
0x52d: V494 = GT V493 V492
0x52f: V495 = 0x538
0x532: JUMPI 0x538 V494
---
Entry stack: [V12, 0x223, 0x0, 0x0]
Stack pops: 0
Stack additions: [V494]
Exit stack: [V12, 0x223, 0x0, 0x0, V494]

================================

Block 0x533
[0x533:0x537]
---
Predecessors: [0x528]
Successors: [0x538]
---
0x533 POP
0x534 PUSH1 0x5
0x536 SLOAD
0x537 ISZERO
---
0x534: V496 = 0x5
0x536: V497 = S[0x5]
0x537: V498 = ISZERO V497
---
Entry stack: [V12, 0x223, 0x0, 0x0, V494]
Stack pops: 1
Stack additions: [V498]
Exit stack: [V12, 0x223, 0x0, 0x0, V498]

================================

Block 0x538
[0x538:0x53e]
---
Predecessors: [0x528, 0x533]
Successors: [0x53f, 0x540]
---
0x538 JUMPDEST
0x539 ISZERO
0x53a ISZERO
0x53b PUSH2 0x540
0x53e JUMPI
---
0x538: JUMPDEST 
0x539: V499 = ISZERO S0
0x53a: V500 = ISZERO V499
0x53b: V501 = 0x540
0x53e: JUMPI 0x540 V500
---
Entry stack: [V12, 0x223, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x223, 0x0, 0x0]

================================

Block 0x53f
[0x53f:0x53f]
---
Predecessors: [0x538]
Successors: []
---
0x53f INVALID
---
0x53f: INVALID 
---
Entry stack: [V12, 0x223, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, 0x0, 0x0]

================================

Block 0x540
[0x540:0x54b]
---
Predecessors: [0x538]
Successors: [0x54c, 0x54d]
---
0x540 JUMPDEST
0x541 PUSH1 0x9
0x543 SLOAD
0x544 PUSH1 0xff
0x546 AND
0x547 ISZERO
0x548 PUSH2 0x54d
0x54b JUMPI
---
0x540: JUMPDEST 
0x541: V502 = 0x9
0x543: V503 = S[0x9]
0x544: V504 = 0xff
0x546: V505 = AND 0xff V503
0x547: V506 = ISZERO V505
0x548: V507 = 0x54d
0x54b: JUMPI 0x54d V506
---
Entry stack: [V12, 0x223, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, 0x0, 0x0]

================================

Block 0x54c
[0x54c:0x54c]
---
Predecessors: [0x540]
Successors: []
---
0x54c INVALID
---
0x54c: INVALID 
---
Entry stack: [V12, 0x223, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, 0x0, 0x0]

================================

Block 0x54d
[0x54d:0x599]
---
Predecessors: [0x540]
Successors: [0x59a, 0x59e]
---
0x54d JUMPDEST
0x54e POP
0x54f POP
0x550 PUSH1 0x9
0x552 DUP1
0x553 SLOAD
0x554 PUSH1 0xff
0x556 NOT
0x557 AND
0x558 PUSH1 0x1
0x55a OR
0x55b SWAP1
0x55c SSTORE
0x55d PUSH1 0x5
0x55f SLOAD
0x560 PUSH1 0x4
0x562 SLOAD
0x563 PUSH1 0x2
0x565 SLOAD
0x566 PUSH1 0x1
0x568 PUSH1 0xa0
0x56a PUSH1 0x2
0x56c EXP
0x56d SUB
0x56e ADDRESS
0x56f DUP2
0x570 AND
0x571 BALANCE
0x572 SWAP4
0x573 SWAP1
0x574 SWAP3
0x575 SUB
0x576 SWAP2
0x577 AND
0x578 DUP3
0x579 ISZERO
0x57a PUSH2 0x8fc
0x57d MUL
0x57e DUP4
0x57f PUSH1 0x40
0x581 MLOAD
0x582 PUSH1 0x0
0x584 PUSH1 0x40
0x586 MLOAD
0x587 DUP1
0x588 DUP4
0x589 SUB
0x58a DUP2
0x58b DUP6
0x58c DUP9
0x58d DUP9
0x58e CALL
0x58f SWAP4
0x590 POP
0x591 POP
0x592 POP
0x593 POP
0x594 ISZERO
0x595 ISZERO
0x596 PUSH2 0x59e
0x599 JUMPI
---
0x54d: JUMPDEST 
0x550: V508 = 0x9
0x553: V509 = S[0x9]
0x554: V510 = 0xff
0x556: V511 = NOT 0xff
0x557: V512 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V509
0x558: V513 = 0x1
0x55a: V514 = OR 0x1 V512
0x55c: S[0x9] = V514
0x55d: V515 = 0x5
0x55f: V516 = S[0x5]
0x560: V517 = 0x4
0x562: V518 = S[0x4]
0x563: V519 = 0x2
0x565: V520 = S[0x2]
0x566: V521 = 0x1
0x568: V522 = 0xa0
0x56a: V523 = 0x2
0x56c: V524 = EXP 0x2 0xa0
0x56d: V525 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56e: V526 = ADDRESS
0x570: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V526
0x571: V528 = BALANCE V527
0x575: V529 = SUB V518 V516
0x577: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0x579: V531 = ISZERO V528
0x57a: V532 = 0x8fc
0x57d: V533 = MUL 0x8fc V531
0x57f: V534 = 0x40
0x581: V535 = M[0x40]
0x582: V536 = 0x0
0x584: V537 = 0x40
0x586: V538 = M[0x40]
0x589: V539 = SUB V535 V538
0x58e: V540 = CALL V533 V530 V528 V538 V539 V538 0x0
0x594: V541 = ISZERO V540
0x595: V542 = ISZERO V541
0x596: V543 = 0x59e
0x599: JUMPI 0x59e V542
---
Entry stack: [V12, 0x223, 0x0, 0x0]
Stack pops: 2
Stack additions: [V528, V529]
Exit stack: [V12, 0x223, V528, V529]

================================

Block 0x59a
[0x59a:0x59d]
---
Predecessors: [0x54d]
Successors: []
---
0x59a PUSH1 0x0
0x59c DUP1
0x59d REVERT
---
0x59a: V544 = 0x0
0x59d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x223, V528, V529]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, V528, V529]

================================

Block 0x59e
[0x59e:0x5d8]
---
Predecessors: [0x54d]
Successors: [0x5d9]
---
0x59e JUMPDEST
0x59f PUSH32 0xcaaa284884fbe78771410e8483ef9401e5ce196b25e0b2e078e7893253b70f9
0x5c0 DUP2
0x5c1 DUP4
0x5c2 PUSH1 0x40
0x5c4 MLOAD
0x5c5 SWAP2
0x5c6 DUP3
0x5c7 MSTORE
0x5c8 PUSH1 0x20
0x5ca DUP3
0x5cb ADD
0x5cc MSTORE
0x5cd PUSH1 0x40
0x5cf SWAP1
0x5d0 DUP2
0x5d1 ADD
0x5d2 SWAP1
0x5d3 MLOAD
0x5d4 DUP1
0x5d5 SWAP2
0x5d6 SUB
0x5d7 SWAP1
0x5d8 LOG1
---
0x59e: JUMPDEST 
0x59f: V545 = 0xcaaa284884fbe78771410e8483ef9401e5ce196b25e0b2e078e7893253b70f9
0x5c2: V546 = 0x40
0x5c4: V547 = M[0x40]
0x5c7: M[V547] = V529
0x5c8: V548 = 0x20
0x5cb: V549 = ADD V547 0x20
0x5cc: M[V549] = V528
0x5cd: V550 = 0x40
0x5d1: V551 = ADD 0x40 V547
0x5d3: V552 = M[0x40]
0x5d6: V553 = SUB V551 V552
0x5d8: LOG V552 V553 0xcaaa284884fbe78771410e8483ef9401e5ce196b25e0b2e078e7893253b70f9
---
Entry stack: [V12, 0x223, V528, V529]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x223, V528, V529]

================================

Block 0x5d9
[0x5d9:0x5d9]
---
Predecessors: [0x59e]
Successors: [0x5da]
---
0x5d9 JUMPDEST
---
0x5d9: JUMPDEST 
---
Entry stack: [V12, 0x223, V528, V529]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, V528, V529]

================================

Block 0x5da
[0x5da:0x5dd]
---
Predecessors: [0x5d9]
Successors: [0x223]
---
0x5da JUMPDEST
0x5db POP
0x5dc POP
0x5dd JUMP
---
0x5da: JUMPDEST 
0x5dd: JUMP 0x223
---
Entry stack: [V12, 0x223, V528, V529]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x5de
[0x5de:0x5e3]
---
Predecessors: [0x2be]
Successors: [0x238]
---
0x5de JUMPDEST
0x5df PUSH1 0x6
0x5e1 SLOAD
0x5e2 DUP2
0x5e3 JUMP
---
0x5de: JUMPDEST 
0x5df: V554 = 0x6
0x5e1: V555 = S[0x6]
0x5e3: JUMP 0x238
---
Entry stack: [V12, 0x238]
Stack pops: 1
Stack additions: [S0, V555]
Exit stack: [V12, 0x238, V555]

================================

Block 0x5e4
[0x5e4:0x5fd]
---
Predecessors: [0x2e3]
Successors: [0x5fe, 0x602]
---
0x5e4 JUMPDEST
0x5e5 PUSH1 0x1
0x5e7 SLOAD
0x5e8 PUSH1 0x0
0x5ea SWAP1
0x5eb CALLER
0x5ec PUSH1 0x1
0x5ee PUSH1 0xa0
0x5f0 PUSH1 0x2
0x5f2 EXP
0x5f3 SUB
0x5f4 SWAP1
0x5f5 DUP2
0x5f6 AND
0x5f7 SWAP2
0x5f8 AND
0x5f9 EQ
0x5fa PUSH2 0x602
0x5fd JUMPI
---
0x5e4: JUMPDEST 
0x5e5: V556 = 0x1
0x5e7: V557 = S[0x1]
0x5e8: V558 = 0x0
0x5eb: V559 = CALLER
0x5ec: V560 = 0x1
0x5ee: V561 = 0xa0
0x5f0: V562 = 0x2
0x5f2: V563 = EXP 0x2 0xa0
0x5f3: V564 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f6: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0x5f8: V566 = AND V557 0xffffffffffffffffffffffffffffffffffffffff
0x5f9: V567 = EQ V566 V565
0x5fa: V568 = 0x602
0x5fd: JUMPI 0x602 V567
---
Entry stack: [V12, 0x223]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x223, 0x0]

================================

Block 0x5fe
[0x5fe:0x601]
---
Predecessors: [0x5e4]
Successors: []
---
0x5fe PUSH1 0x0
0x600 DUP1
0x601 REVERT
---
0x5fe: V569 = 0x0
0x601: REVERT 0x0 0x0
---
Entry stack: [V12, 0x223, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, 0x0]

================================

Block 0x602
[0x602:0x688]
---
Predecessors: [0x5e4]
Successors: [0x689]
---
0x602 JUMPDEST
0x603 POP
0x604 PUSH1 0x0
0x606 DUP1
0x607 SLOAD
0x608 PUSH1 0x1
0x60a DUP1
0x60b SLOAD
0x60c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x621 NOT
0x622 DUP1
0x623 DUP5
0x624 AND
0x625 PUSH1 0x1
0x627 PUSH1 0xa0
0x629 PUSH1 0x2
0x62b EXP
0x62c SUB
0x62d DUP4
0x62e DUP2
0x62f AND
0x630 SWAP2
0x631 SWAP1
0x632 SWAP2
0x633 OR
0x634 SWAP6
0x635 DUP7
0x636 SWAP1
0x637 SSTORE
0x638 SWAP2
0x639 AND
0x63a SWAP1
0x63b SWAP2
0x63c SSTORE
0x63d SWAP1
0x63e DUP2
0x63f AND
0x640 SWAP2
0x641 PUSH32 0x22500af037c600dd7b720644ab6e358635085601d9ac508ad83eb2d6b2d729ca
0x662 SWAP2
0x663 DUP4
0x664 SWAP2
0x665 AND
0x666 PUSH1 0x40
0x668 MLOAD
0x669 PUSH1 0x1
0x66b PUSH1 0xa0
0x66d PUSH1 0x2
0x66f EXP
0x670 SUB
0x671 SWAP3
0x672 DUP4
0x673 AND
0x674 DUP2
0x675 MSTORE
0x676 SWAP2
0x677 AND
0x678 PUSH1 0x20
0x67a DUP3
0x67b ADD
0x67c MSTORE
0x67d PUSH1 0x40
0x67f SWAP1
0x680 DUP2
0x681 ADD
0x682 SWAP1
0x683 MLOAD
0x684 DUP1
0x685 SWAP2
0x686 SUB
0x687 SWAP1
0x688 LOG1
---
0x602: JUMPDEST 
0x604: V570 = 0x0
0x607: V571 = S[0x0]
0x608: V572 = 0x1
0x60b: V573 = S[0x1]
0x60c: V574 = 0xffffffffffffffffffffffffffffffffffffffff
0x621: V575 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x624: V576 = AND V571 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x625: V577 = 0x1
0x627: V578 = 0xa0
0x629: V579 = 0x2
0x62b: V580 = EXP 0x2 0xa0
0x62c: V581 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62f: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V573
0x633: V583 = OR V582 V576
0x637: S[0x0] = V583
0x639: V584 = AND V573 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x63c: S[0x1] = V584
0x63f: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0x641: V586 = 0x22500af037c600dd7b720644ab6e358635085601d9ac508ad83eb2d6b2d729ca
0x665: V587 = AND V583 0xffffffffffffffffffffffffffffffffffffffff
0x666: V588 = 0x40
0x668: V589 = M[0x40]
0x669: V590 = 0x1
0x66b: V591 = 0xa0
0x66d: V592 = 0x2
0x66f: V593 = EXP 0x2 0xa0
0x670: V594 = SUB 0x10000000000000000000000000000000000000000 0x1
0x673: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff V585
0x675: M[V589] = V595
0x677: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V587
0x678: V597 = 0x20
0x67b: V598 = ADD V589 0x20
0x67c: M[V598] = V596
0x67d: V599 = 0x40
0x681: V600 = ADD 0x40 V589
0x683: V601 = M[0x40]
0x686: V602 = SUB V600 V601
0x688: LOG V601 V602 0x22500af037c600dd7b720644ab6e358635085601d9ac508ad83eb2d6b2d729ca
---
Entry stack: [V12, 0x223, 0x0]
Stack pops: 1
Stack additions: [V585]
Exit stack: [V12, 0x223, V585]

================================

Block 0x689
[0x689:0x689]
---
Predecessors: [0x602]
Successors: [0x68a]
---
0x689 JUMPDEST
---
0x689: JUMPDEST 
---
Entry stack: [V12, 0x223, V585]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, V585]

================================

Block 0x68a
[0x68a:0x68c]
---
Predecessors: [0x689]
Successors: [0x223]
---
0x68a JUMPDEST
0x68b POP
0x68c JUMP
---
0x68a: JUMPDEST 
0x68c: JUMP 0x223
---
Entry stack: [V12, 0x223, V585]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x68d
[0x68d:0x692]
---
Predecessors: [0x2f8]
Successors: [0x238]
---
0x68d JUMPDEST
0x68e PUSH1 0x8
0x690 SLOAD
0x691 DUP2
0x692 JUMP
---
0x68d: JUMPDEST 
0x68e: V603 = 0x8
0x690: V604 = S[0x8]
0x692: JUMP 0x238
---
Entry stack: [V12, 0x238]
Stack pops: 1
Stack additions: [S0, V604]
Exit stack: [V12, 0x238, V604]

================================

Block 0x693
[0x693:0x6a1]
---
Predecessors: [0x31d]
Successors: [0x282]
---
0x693 JUMPDEST
0x694 PUSH1 0x0
0x696 SLOAD
0x697 PUSH1 0x1
0x699 PUSH1 0xa0
0x69b PUSH1 0x2
0x69d EXP
0x69e SUB
0x69f AND
0x6a0 DUP2
0x6a1 JUMP
---
0x693: JUMPDEST 
0x694: V605 = 0x0
0x696: V606 = S[0x0]
0x697: V607 = 0x1
0x699: V608 = 0xa0
0x69b: V609 = 0x2
0x69d: V610 = EXP 0x2 0xa0
0x69e: V611 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69f: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V606
0x6a1: JUMP 0x282
---
Entry stack: [V12, 0x282]
Stack pops: 1
Stack additions: [S0, V612]
Exit stack: [V12, 0x282, V612]

================================

Block 0x6a2
[0x6a2:0x6a7]
---
Predecessors: [0x34c]
Successors: [0x238]
---
0x6a2 JUMPDEST
0x6a3 PUSH1 0x5
0x6a5 SLOAD
0x6a6 DUP2
0x6a7 JUMP
---
0x6a2: JUMPDEST 
0x6a3: V613 = 0x5
0x6a5: V614 = S[0x5]
0x6a7: JUMP 0x238
---
Entry stack: [V12, 0x238]
Stack pops: 1
Stack additions: [S0, V614]
Exit stack: [V12, 0x238, V614]

================================

Block 0x6a8
[0x6a8:0x6b6]
---
Predecessors: [0x371]
Successors: [0x282]
---
0x6a8 JUMPDEST
0x6a9 PUSH1 0x1
0x6ab SLOAD
0x6ac PUSH1 0x1
0x6ae PUSH1 0xa0
0x6b0 PUSH1 0x2
0x6b2 EXP
0x6b3 SUB
0x6b4 AND
0x6b5 DUP2
0x6b6 JUMP
---
0x6a8: JUMPDEST 
0x6a9: V615 = 0x1
0x6ab: V616 = S[0x1]
0x6ac: V617 = 0x1
0x6ae: V618 = 0xa0
0x6b0: V619 = 0x2
0x6b2: V620 = EXP 0x2 0xa0
0x6b3: V621 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b4: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0x6b6: JUMP 0x282
---
Entry stack: [V12, 0x282]
Stack pops: 1
Stack additions: [S0, V622]
Exit stack: [V12, 0x282, V622]

================================

Block 0x6b7
[0x6b7:0x6c5]
---
Predecessors: [0x3a0]
Successors: [0x282]
---
0x6b7 JUMPDEST
0x6b8 PUSH1 0x3
0x6ba SLOAD
0x6bb PUSH1 0x1
0x6bd PUSH1 0xa0
0x6bf PUSH1 0x2
0x6c1 EXP
0x6c2 SUB
0x6c3 AND
0x6c4 DUP2
0x6c5 JUMP
---
0x6b7: JUMPDEST 
0x6b8: V623 = 0x3
0x6ba: V624 = S[0x3]
0x6bb: V625 = 0x1
0x6bd: V626 = 0xa0
0x6bf: V627 = 0x2
0x6c1: V628 = EXP 0x2 0xa0
0x6c2: V629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c3: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V624
0x6c5: JUMP 0x282
---
Entry stack: [V12, 0x282]
Stack pops: 1
Stack additions: [S0, V630]
Exit stack: [V12, 0x282, V630]

================================

Block 0x6c6
[0x6c6:0x6dc]
---
Predecessors: [0x3cf]
Successors: [0x6dd, 0x6e1]
---
0x6c6 JUMPDEST
0x6c7 PUSH1 0x0
0x6c9 SLOAD
0x6ca CALLER
0x6cb PUSH1 0x1
0x6cd PUSH1 0xa0
0x6cf PUSH1 0x2
0x6d1 EXP
0x6d2 SUB
0x6d3 SWAP1
0x6d4 DUP2
0x6d5 AND
0x6d6 SWAP2
0x6d7 AND
0x6d8 EQ
0x6d9 PUSH2 0x6e1
0x6dc JUMPI
---
0x6c6: JUMPDEST 
0x6c7: V631 = 0x0
0x6c9: V632 = S[0x0]
0x6ca: V633 = CALLER
0x6cb: V634 = 0x1
0x6cd: V635 = 0xa0
0x6cf: V636 = 0x2
0x6d1: V637 = EXP 0x2 0xa0
0x6d2: V638 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d5: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V633
0x6d7: V640 = AND V632 0xffffffffffffffffffffffffffffffffffffffff
0x6d8: V641 = EQ V640 V639
0x6d9: V642 = 0x6e1
0x6dc: JUMPI 0x6e1 V641
---
Entry stack: [V12, 0x223, V360]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, V360]

================================

Block 0x6dd
[0x6dd:0x6e0]
---
Predecessors: [0x6c6]
Successors: []
---
0x6dd PUSH1 0x0
0x6df DUP1
0x6e0 REVERT
---
0x6dd: V643 = 0x0
0x6e0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x223, V360]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, V360]

================================

Block 0x6e1
[0x6e1:0x75c]
---
Predecessors: [0x6c6]
Successors: [0x75d]
---
0x6e1 JUMPDEST
0x6e2 PUSH1 0x1
0x6e4 DUP1
0x6e5 SLOAD
0x6e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fb NOT
0x6fc AND
0x6fd PUSH1 0x1
0x6ff PUSH1 0xa0
0x701 PUSH1 0x2
0x703 EXP
0x704 SUB
0x705 DUP4
0x706 DUP2
0x707 AND
0x708 SWAP2
0x709 SWAP1
0x70a SWAP2
0x70b OR
0x70c SWAP2
0x70d DUP3
0x70e SWAP1
0x70f SSTORE
0x710 PUSH1 0x0
0x712 SLOAD
0x713 PUSH32 0x23e1f881d1e797ea57a7247e53536f0bfc37c42e6645b3bdc4b1c9a0e0d8a133
0x734 SWAP3
0x735 SWAP1
0x736 DUP3
0x737 AND
0x738 SWAP2
0x739 AND
0x73a PUSH1 0x40
0x73c MLOAD
0x73d PUSH1 0x1
0x73f PUSH1 0xa0
0x741 PUSH1 0x2
0x743 EXP
0x744 SUB
0x745 SWAP3
0x746 DUP4
0x747 AND
0x748 DUP2
0x749 MSTORE
0x74a SWAP2
0x74b AND
0x74c PUSH1 0x20
0x74e DUP3
0x74f ADD
0x750 MSTORE
0x751 PUSH1 0x40
0x753 SWAP1
0x754 DUP2
0x755 ADD
0x756 SWAP1
0x757 MLOAD
0x758 DUP1
0x759 SWAP2
0x75a SUB
0x75b SWAP1
0x75c LOG1
---
0x6e1: JUMPDEST 
0x6e2: V644 = 0x1
0x6e5: V645 = S[0x1]
0x6e6: V646 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fb: V647 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6fc: V648 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V645
0x6fd: V649 = 0x1
0x6ff: V650 = 0xa0
0x701: V651 = 0x2
0x703: V652 = EXP 0x2 0xa0
0x704: V653 = SUB 0x10000000000000000000000000000000000000000 0x1
0x707: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x70b: V655 = OR V654 V648
0x70f: S[0x1] = V655
0x710: V656 = 0x0
0x712: V657 = S[0x0]
0x713: V658 = 0x23e1f881d1e797ea57a7247e53536f0bfc37c42e6645b3bdc4b1c9a0e0d8a133
0x737: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff V657
0x739: V660 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0x73a: V661 = 0x40
0x73c: V662 = M[0x40]
0x73d: V663 = 0x1
0x73f: V664 = 0xa0
0x741: V665 = 0x2
0x743: V666 = EXP 0x2 0xa0
0x744: V667 = SUB 0x10000000000000000000000000000000000000000 0x1
0x747: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff V659
0x749: M[V662] = V668
0x74b: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff V660
0x74c: V670 = 0x20
0x74f: V671 = ADD V662 0x20
0x750: M[V671] = V669
0x751: V672 = 0x40
0x755: V673 = ADD 0x40 V662
0x757: V674 = M[0x40]
0x75a: V675 = SUB V673 V674
0x75c: LOG V674 V675 0x23e1f881d1e797ea57a7247e53536f0bfc37c42e6645b3bdc4b1c9a0e0d8a133
---
Entry stack: [V12, 0x223, V360]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x223, V360]

================================

Block 0x75d
[0x75d:0x75d]
---
Predecessors: [0x6e1]
Successors: [0x75e]
---
0x75d JUMPDEST
---
0x75d: JUMPDEST 
---
Entry stack: [V12, 0x223, V360]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x223, V360]

================================

Block 0x75e
[0x75e:0x760]
---
Predecessors: [0x75d]
Successors: [0x223]
---
0x75e JUMPDEST
0x75f POP
0x760 JUMP
---
0x75e: JUMPDEST 
0x760: JUMP 0x223
---
Entry stack: [V12, 0x223, V360]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x761
[0x761:0x78d]
---
Predecessors: []
Successors: []
---
0x761 STOP
0x762 LOG1
0x763 PUSH6 0x627a7a723058
0x76a SHA3
0x76b CREATE2
0x76c CODESIZE
0x76d MISSING 0xe0
0x76e MISSING 0xf6
0x76f SHL
0x770 MISSING 0xec
0x771 PUSH5 0x3eacf96921
0x777 OR
0x778 MISSING 0xc4
0x779 MISSING 0xd1
0x77a MISSING 0xc0
0x77b SWAP14
0x77c PUSH4 0xee0276db
0x781 PUSH12 0x98aca76b9705dc83c50029
---
0x761: STOP 
0x762: LOG S0 S1 S2
0x763: V676 = 0x627a7a723058
0x76a: V677 = SHA3 0x627a7a723058 S3
0x76b: V678 = CREATE2 V677 S4 S5 S6
0x76c: V679 = CODESIZE
0x76d: MISSING 0xe0
0x76e: MISSING 0xf6
0x76f: V680 = SHL S0 S1
0x770: MISSING 0xec
0x771: V681 = 0x3eacf96921
0x777: V682 = OR 0x3eacf96921 S0
0x778: MISSING 0xc4
0x779: MISSING 0xd1
0x77a: MISSING 0xc0
0x77c: V683 = 0xee0276db
0x781: V684 = 0x98aca76b9705dc83c50029
---
Entry stack: []
Stack pops: 0
Stack additions: [V679, V678, V680, V682, 0x98aca76b9705dc83c50029, 0xee0276db, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x17f27fc
Entry block: 0x1e9
Exit block: 0x1fc
Body: 0x1e9, 0x1f0, 0x1f4, 0x1fc, 0x414

Function 1:
Public function signature: 0xe2d27cd
Entry block: 0x210
Exit block: 0x223
Body: 0x210, 0x217, 0x21b, 0x223, 0x41d, 0x435, 0x439, 0x443, 0x444, 0x451, 0x452, 0x4c0, 0x4c4, 0x4d1, 0x4d5, 0x4e6, 0x4ea, 0x4eb, 0x4ec

Function 2:
Public function signature: 0x1ca8b6cb
Entry block: 0x225
Exit block: 0x238
Body: 0x225, 0x22c, 0x230, 0x238, 0x4ef

Function 3:
Public function signature: 0x1e06c41f
Entry block: 0x24a
Exit block: 0x238
Body: 0x238, 0x24a, 0x251, 0x255, 0x4f5

Function 4:
Public function signature: 0x2cfa606d
Entry block: 0x26f
Exit block: 0x282
Body: 0x26f, 0x276, 0x27a, 0x282, 0x4fb

Function 5:
Public function signature: 0x380d831b
Entry block: 0x29e
Exit block: 0x223
Body: 0x223, 0x29e, 0x2a5, 0x2a9, 0x50a, 0x524, 0x528, 0x533, 0x538, 0x53f, 0x540, 0x54c, 0x54d, 0x59a, 0x59e, 0x5d9, 0x5da

Function 6:
Public function signature: 0x4172d080
Entry block: 0x2b3
Exit block: 0x238
Body: 0x238, 0x2b3, 0x2ba, 0x2be, 0x5de

Function 7:
Public function signature: 0x4e71e0c8
Entry block: 0x2d8
Exit block: 0x223
Body: 0x223, 0x2d8, 0x2df, 0x2e3, 0x5e4, 0x5fe, 0x602, 0x689, 0x68a

Function 8:
Public function signature: 0x7c7d809b
Entry block: 0x2ed
Exit block: 0x238
Body: 0x238, 0x2ed, 0x2f4, 0x2f8, 0x68d

Function 9:
Public function signature: 0xce606ee0
Entry block: 0x312
Exit block: 0x282
Body: 0x282, 0x312, 0x319, 0x31d, 0x693

Function 10:
Public function signature: 0xd9779fbe
Entry block: 0x341
Exit block: 0x238
Body: 0x238, 0x341, 0x348, 0x34c, 0x6a2

Function 11:
Public function signature: 0xe30c3978
Entry block: 0x366
Exit block: 0x282
Body: 0x282, 0x366, 0x36d, 0x371, 0x6a8

Function 12:
Public function signature: 0xf23b872e
Entry block: 0x395
Exit block: 0x282
Body: 0x282, 0x395, 0x39c, 0x3a0, 0x6b7

Function 13:
Public function signature: 0xf2fde38b
Entry block: 0x3c4
Exit block: 0x223
Body: 0x223, 0x3c4, 0x3cb, 0x3cf, 0x6c6, 0x6dd, 0x6e1, 0x75d, 0x75e

Function 14:
Public fallback function
Entry block: 0xb4
Exit block: 0x1e6
Body: 0xb4, 0xb5, 0xc3, 0xc4, 0xce, 0xcf, 0xd8, 0xdc, 0xe8, 0xec, 0x100, 0x112, 0x113, 0x177, 0x17b, 0x188, 0x18c, 0x19d, 0x1a1, 0x1e6, 0x3e5, 0x3f2, 0x3fd, 0x3fe, 0x401, 0x408, 0x409, 0x40d

