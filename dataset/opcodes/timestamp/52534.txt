Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x69]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x69
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x69
0xc: JUMPI 0x69 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x6e]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x2d2295ad
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x6e
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x2d2295ad
0x22: V15 = EQ V13 0x2d2295ad
0x23: V16 = 0x6e
0x26: JUMPI 0x6e V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x78]
---
0x27 DUP1
0x28 PUSH4 0x54fd4d50
0x2d EQ
0x2e PUSH2 0x78
0x31 JUMPI
---
0x28: V17 = 0x54fd4d50
0x2d: V18 = EQ 0x54fd4d50 V13
0x2e: V19 = 0x78
0x31: JUMPI 0x78 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xaa]
---
0x32 DUP1
0x33 PUSH4 0x733fd8c7
0x38 EQ
0x39 PUSH2 0xaa
0x3c JUMPI
---
0x33: V20 = 0x733fd8c7
0x38: V21 = EQ 0x733fd8c7 V13
0x39: V22 = 0xaa
0x3c: JUMPI 0xaa V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xdb]
---
0x3d DUP1
0x3e PUSH4 0x7803af8c
0x43 EQ
0x44 PUSH2 0xdb
0x47 JUMPI
---
0x3e: V23 = 0x7803af8c
0x43: V24 = EQ 0x7803af8c V13
0x44: V25 = 0xdb
0x47: JUMPI 0xdb V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0xe3]
---
0x48 DUP1
0x49 PUSH4 0x8da5cb5b
0x4e EQ
0x4f PUSH2 0xe3
0x52 JUMPI
---
0x49: V26 = 0x8da5cb5b
0x4e: V27 = EQ 0x8da5cb5b V13
0x4f: V28 = 0xe3
0x52: JUMPI 0xe3 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0xf8]
---
0x53 DUP1
0x54 PUSH4 0xda284dcc
0x59 EQ
0x5a PUSH2 0xf8
0x5d JUMPI
---
0x54: V29 = 0xda284dcc
0x59: V30 = EQ 0xda284dcc V13
0x5a: V31 = 0xf8
0x5d: JUMPI 0xf8 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x11f]
---
0x5e DUP1
0x5f PUSH4 0xf6954379
0x64 EQ
0x65 PUSH2 0x11f
0x68 JUMPI
---
0x5f: V32 = 0xf6954379
0x64: V33 = EQ 0xf6954379 V13
0x65: V34 = 0x11f
0x68: JUMPI 0x11f V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x6d]
---
Predecessors: [0x0, 0x5e]
Successors: []
---
0x69 JUMPDEST
0x6a PUSH1 0x0
0x6c DUP1
0x6d REVERT
---
0x69: JUMPDEST 
0x6a: V35 = 0x0
0x6d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6e
[0x6e:0x75]
---
Predecessors: [0xd]
Successors: [0x134]
---
0x6e JUMPDEST
0x6f PUSH2 0x76
0x72 PUSH2 0x134
0x75 JUMP
---
0x6e: JUMPDEST 
0x6f: V36 = 0x76
0x72: V37 = 0x134
0x75: JUMP 0x134
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x76]
Exit stack: [V13, 0x76]

================================

Block 0x76
[0x76:0x77]
---
Predecessors: [0x189, 0x252]
Successors: []
---
0x76 JUMPDEST
0x77 STOP
---
0x76: JUMPDEST 
0x77: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x78
[0x78:0x7f]
---
Predecessors: [0x27]
Successors: [0x80, 0x84]
---
0x78 JUMPDEST
0x79 CALLVALUE
0x7a DUP1
0x7b ISZERO
0x7c PUSH2 0x84
0x7f JUMPI
---
0x78: JUMPDEST 
0x79: V38 = CALLVALUE
0x7b: V39 = ISZERO V38
0x7c: V40 = 0x84
0x7f: JUMPI 0x84 V39
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V38]
Exit stack: [V13, V38]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x78]
Successors: []
---
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x80: V41 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V13, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V38]

================================

Block 0x84
[0x84:0x8c]
---
Predecessors: [0x78]
Successors: [0x1d4]
---
0x84 JUMPDEST
0x85 POP
0x86 PUSH2 0x8d
0x89 PUSH2 0x1d4
0x8c JUMP
---
0x84: JUMPDEST 
0x86: V42 = 0x8d
0x89: V43 = 0x1d4
0x8c: JUMP 0x1d4
---
Entry stack: [V13, V38]
Stack pops: 1
Stack additions: [0x8d]
Exit stack: [V13, 0x8d]

================================

Block 0x8d
[0x8d:0xa9]
---
Predecessors: [0x1d4]
Successors: []
---
0x8d JUMPDEST
0x8e PUSH1 0x40
0x90 DUP1
0x91 MLOAD
0x92 PUSH1 0x1
0x94 PUSH1 0xc0
0x96 PUSH1 0x2
0x98 EXP
0x99 SUB
0x9a NOT
0x9b SWAP1
0x9c SWAP3
0x9d AND
0x9e DUP3
0x9f MSTORE
0xa0 MLOAD
0xa1 SWAP1
0xa2 DUP2
0xa3 SWAP1
0xa4 SUB
0xa5 PUSH1 0x20
0xa7 ADD
0xa8 SWAP1
0xa9 RETURN
---
0x8d: JUMPDEST 
0x8e: V44 = 0x40
0x91: V45 = M[0x40]
0x92: V46 = 0x1
0x94: V47 = 0xc0
0x96: V48 = 0x2
0x98: V49 = EXP 0x2 0xc0
0x99: V50 = SUB 0x1000000000000000000000000000000000000000000000000 0x1
0x9a: V51 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x9d: V52 = AND V159 0xffffffffffffffff000000000000000000000000000000000000000000000000
0x9f: M[V45] = V52
0xa0: V53 = M[0x40]
0xa4: V54 = SUB V45 V53
0xa5: V55 = 0x20
0xa7: V56 = ADD 0x20 V54
0xa9: RETURN V53 V56
---
Entry stack: [V13, 0x8d, V159]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x8d]

================================

Block 0xaa
[0xaa:0xb1]
---
Predecessors: [0x32]
Successors: [0xb2, 0xb6]
---
0xaa JUMPDEST
0xab CALLVALUE
0xac DUP1
0xad ISZERO
0xae PUSH2 0xb6
0xb1 JUMPI
---
0xaa: JUMPDEST 
0xab: V57 = CALLVALUE
0xad: V58 = ISZERO V57
0xae: V59 = 0xb6
0xb1: JUMPI 0xb6 V58
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V57]
Exit stack: [V13, V57]

================================

Block 0xb2
[0xb2:0xb5]
---
Predecessors: [0xaa]
Successors: []
---
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 REVERT
---
0xb2: V60 = 0x0
0xb5: REVERT 0x0 0x0
---
Entry stack: [V13, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V57]

================================

Block 0xb6
[0xb6:0xbe]
---
Predecessors: [0xaa]
Successors: [0x1e0]
---
0xb6 JUMPDEST
0xb7 POP
0xb8 PUSH2 0xbf
0xbb PUSH2 0x1e0
0xbe JUMP
---
0xb6: JUMPDEST 
0xb8: V61 = 0xbf
0xbb: V62 = 0x1e0
0xbe: JUMP 0x1e0
---
Entry stack: [V13, V57]
Stack pops: 1
Stack additions: [0xbf]
Exit stack: [V13, 0xbf]

================================

Block 0xbf
[0xbf:0xda]
---
Predecessors: [0x1e0, 0x29d, 0x2b2]
Successors: []
---
0xbf JUMPDEST
0xc0 PUSH1 0x40
0xc2 DUP1
0xc3 MLOAD
0xc4 PUSH1 0x1
0xc6 PUSH1 0xa0
0xc8 PUSH1 0x2
0xca EXP
0xcb SUB
0xcc SWAP1
0xcd SWAP3
0xce AND
0xcf DUP3
0xd0 MSTORE
0xd1 MLOAD
0xd2 SWAP1
0xd3 DUP2
0xd4 SWAP1
0xd5 SUB
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 SWAP1
0xda RETURN
---
0xbf: JUMPDEST 
0xc0: V63 = 0x40
0xc3: V64 = M[0x40]
0xc4: V65 = 0x1
0xc6: V66 = 0xa0
0xc8: V67 = 0x2
0xca: V68 = EXP 0x2 0xa0
0xcb: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce: V70 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xd0: M[V64] = V70
0xd1: V71 = M[0x40]
0xd5: V72 = SUB V64 V71
0xd6: V73 = 0x20
0xd8: V74 = ADD 0x20 V72
0xda: RETURN V71 V74
---
Entry stack: [V13, 0xbf, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xbf]

================================

Block 0xdb
[0xdb:0xe2]
---
Predecessors: [0x3d]
Successors: [0x1ef]
---
0xdb JUMPDEST
0xdc PUSH2 0x76
0xdf PUSH2 0x1ef
0xe2 JUMP
---
0xdb: JUMPDEST 
0xdc: V75 = 0x76
0xdf: V76 = 0x1ef
0xe2: JUMP 0x1ef
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x76]
Exit stack: [V13, 0x76]

================================

Block 0xe3
[0xe3:0xea]
---
Predecessors: [0x48]
Successors: [0xeb, 0xef]
---
0xe3 JUMPDEST
0xe4 CALLVALUE
0xe5 DUP1
0xe6 ISZERO
0xe7 PUSH2 0xef
0xea JUMPI
---
0xe3: JUMPDEST 
0xe4: V77 = CALLVALUE
0xe6: V78 = ISZERO V77
0xe7: V79 = 0xef
0xea: JUMPI 0xef V78
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V13, V77]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0xe3]
Successors: []
---
0xeb PUSH1 0x0
0xed DUP1
0xee REVERT
---
0xeb: V80 = 0x0
0xee: REVERT 0x0 0x0
---
Entry stack: [V13, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V77]

================================

Block 0xef
[0xef:0xf7]
---
Predecessors: [0xe3]
Successors: [0x29d]
---
0xef JUMPDEST
0xf0 POP
0xf1 PUSH2 0xbf
0xf4 PUSH2 0x29d
0xf7 JUMP
---
0xef: JUMPDEST 
0xf1: V81 = 0xbf
0xf4: V82 = 0x29d
0xf7: JUMP 0x29d
---
Entry stack: [V13, V77]
Stack pops: 1
Stack additions: [0xbf]
Exit stack: [V13, 0xbf]

================================

Block 0xf8
[0xf8:0xff]
---
Predecessors: [0x53]
Successors: [0x100, 0x104]
---
0xf8 JUMPDEST
0xf9 CALLVALUE
0xfa DUP1
0xfb ISZERO
0xfc PUSH2 0x104
0xff JUMPI
---
0xf8: JUMPDEST 
0xf9: V83 = CALLVALUE
0xfb: V84 = ISZERO V83
0xfc: V85 = 0x104
0xff: JUMPI 0x104 V84
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V83]
Exit stack: [V13, V83]

================================

Block 0x100
[0x100:0x103]
---
Predecessors: [0xf8]
Successors: []
---
0x100 PUSH1 0x0
0x102 DUP1
0x103 REVERT
---
0x100: V86 = 0x0
0x103: REVERT 0x0 0x0
---
Entry stack: [V13, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V83]

================================

Block 0x104
[0x104:0x10c]
---
Predecessors: [0xf8]
Successors: [0x2ac]
---
0x104 JUMPDEST
0x105 POP
0x106 PUSH2 0x10d
0x109 PUSH2 0x2ac
0x10c JUMP
---
0x104: JUMPDEST 
0x106: V87 = 0x10d
0x109: V88 = 0x2ac
0x10c: JUMP 0x2ac
---
Entry stack: [V13, V83]
Stack pops: 1
Stack additions: [0x10d]
Exit stack: [V13, 0x10d]

================================

Block 0x10d
[0x10d:0x11e]
---
Predecessors: [0x2ac]
Successors: []
---
0x10d JUMPDEST
0x10e PUSH1 0x40
0x110 DUP1
0x111 MLOAD
0x112 SWAP2
0x113 DUP3
0x114 MSTORE
0x115 MLOAD
0x116 SWAP1
0x117 DUP2
0x118 SWAP1
0x119 SUB
0x11a PUSH1 0x20
0x11c ADD
0x11d SWAP1
0x11e RETURN
---
0x10d: JUMPDEST 
0x10e: V89 = 0x40
0x111: V90 = M[0x40]
0x114: M[V90] = V236
0x115: V91 = M[0x40]
0x119: V92 = SUB V90 V91
0x11a: V93 = 0x20
0x11c: V94 = ADD 0x20 V92
0x11e: RETURN V91 V94
---
Entry stack: [V13, 0x10d, V236]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x10d]

================================

Block 0x11f
[0x11f:0x126]
---
Predecessors: [0x5e]
Successors: [0x127, 0x12b]
---
0x11f JUMPDEST
0x120 CALLVALUE
0x121 DUP1
0x122 ISZERO
0x123 PUSH2 0x12b
0x126 JUMPI
---
0x11f: JUMPDEST 
0x120: V95 = CALLVALUE
0x122: V96 = ISZERO V95
0x123: V97 = 0x12b
0x126: JUMPI 0x12b V96
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V95]
Exit stack: [V13, V95]

================================

Block 0x127
[0x127:0x12a]
---
Predecessors: [0x11f]
Successors: []
---
0x127 PUSH1 0x0
0x129 DUP1
0x12a REVERT
---
0x127: V98 = 0x0
0x12a: REVERT 0x0 0x0
---
Entry stack: [V13, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V95]

================================

Block 0x12b
[0x12b:0x133]
---
Predecessors: [0x11f]
Successors: [0x2b2]
---
0x12b JUMPDEST
0x12c POP
0x12d PUSH2 0xbf
0x130 PUSH2 0x2b2
0x133 JUMP
---
0x12b: JUMPDEST 
0x12d: V99 = 0xbf
0x130: V100 = 0x2b2
0x133: JUMP 0x2b2
---
Entry stack: [V13, V95]
Stack pops: 1
Stack additions: [0xbf]
Exit stack: [V13, 0xbf]

================================

Block 0x134
[0x134:0x147]
---
Predecessors: [0x6e]
Successors: [0x148, 0x14c]
---
0x134 JUMPDEST
0x135 PUSH1 0x0
0x137 DUP1
0x138 SLOAD
0x139 PUSH1 0x1
0x13b PUSH1 0xa0
0x13d PUSH1 0x2
0x13f EXP
0x140 SUB
0x141 AND
0x142 CALLER
0x143 EQ
0x144 PUSH2 0x14c
0x147 JUMPI
---
0x134: JUMPDEST 
0x135: V101 = 0x0
0x138: V102 = S[0x0]
0x139: V103 = 0x1
0x13b: V104 = 0xa0
0x13d: V105 = 0x2
0x13f: V106 = EXP 0x2 0xa0
0x140: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x141: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x142: V109 = CALLER
0x143: V110 = EQ V109 V108
0x144: V111 = 0x14c
0x147: JUMPI 0x14c V110
---
Entry stack: [V13, 0x76]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x76, 0x0]

================================

Block 0x148
[0x148:0x14b]
---
Predecessors: [0x134]
Successors: []
---
0x148 PUSH1 0x0
0x14a DUP1
0x14b REVERT
---
0x148: V112 = 0x0
0x14b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x76, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x76, 0x0]

================================

Block 0x14c
[0x14c:0x17f]
---
Predecessors: [0x134]
Successors: [0x180, 0x189]
---
0x14c JUMPDEST
0x14d POP
0x14e PUSH1 0x2
0x150 SLOAD
0x151 PUSH1 0x40
0x153 MLOAD
0x154 ADDRESS
0x155 DUP1
0x156 BALANCE
0x157 SWAP3
0x158 PUSH1 0x1
0x15a PUSH1 0xa0
0x15c PUSH1 0x2
0x15e EXP
0x15f SUB
0x160 AND
0x161 SWAP2
0x162 SWAP1
0x163 BALANCE
0x164 DUP1
0x165 ISZERO
0x166 PUSH2 0x8fc
0x169 MUL
0x16a SWAP2
0x16b PUSH1 0x0
0x16d DUP2
0x16e DUP2
0x16f DUP2
0x170 DUP6
0x171 DUP9
0x172 DUP9
0x173 CALL
0x174 SWAP4
0x175 POP
0x176 POP
0x177 POP
0x178 POP
0x179 ISZERO
0x17a DUP1
0x17b ISZERO
0x17c PUSH2 0x189
0x17f JUMPI
---
0x14c: JUMPDEST 
0x14e: V113 = 0x2
0x150: V114 = S[0x2]
0x151: V115 = 0x40
0x153: V116 = M[0x40]
0x154: V117 = ADDRESS
0x156: V118 = BALANCE V117
0x158: V119 = 0x1
0x15a: V120 = 0xa0
0x15c: V121 = 0x2
0x15e: V122 = EXP 0x2 0xa0
0x15f: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x160: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x163: V125 = BALANCE V117
0x165: V126 = ISZERO V125
0x166: V127 = 0x8fc
0x169: V128 = MUL 0x8fc V126
0x16b: V129 = 0x0
0x173: V130 = CALL V128 V124 V125 V116 0x0 V116 0x0
0x179: V131 = ISZERO V130
0x17b: V132 = ISZERO V131
0x17c: V133 = 0x189
0x17f: JUMPI 0x189 V132
---
Entry stack: [V13, 0x76, 0x0]
Stack pops: 1
Stack additions: [V118, V131]
Exit stack: [V13, 0x76, V118, V131]

================================

Block 0x180
[0x180:0x188]
---
Predecessors: [0x14c]
Successors: []
---
0x180 RETURNDATASIZE
0x181 PUSH1 0x0
0x183 DUP1
0x184 RETURNDATACOPY
0x185 RETURNDATASIZE
0x186 PUSH1 0x0
0x188 REVERT
---
0x180: V134 = RETURNDATASIZE
0x181: V135 = 0x0
0x184: RETURNDATACOPY 0x0 0x0 V134
0x185: V136 = RETURNDATASIZE
0x186: V137 = 0x0
0x188: REVERT 0x0 V136
---
Entry stack: [V13, 0x76, V118, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x76, V118, V131]

================================

Block 0x189
[0x189:0x1d3]
---
Predecessors: [0x14c]
Successors: [0x76]
---
0x189 JUMPDEST
0x18a POP
0x18b PUSH1 0x2
0x18d SLOAD
0x18e PUSH1 0x40
0x190 DUP1
0x191 MLOAD
0x192 PUSH1 0x1
0x194 PUSH1 0xa0
0x196 PUSH1 0x2
0x198 EXP
0x199 SUB
0x19a SWAP1
0x19b SWAP3
0x19c AND
0x19d DUP3
0x19e MSTORE
0x19f PUSH1 0x20
0x1a1 DUP3
0x1a2 ADD
0x1a3 DUP4
0x1a4 SWAP1
0x1a5 MSTORE
0x1a6 DUP1
0x1a7 MLOAD
0x1a8 PUSH32 0xa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76
0x1c9 SWAP3
0x1ca DUP2
0x1cb SWAP1
0x1cc SUB
0x1cd SWAP1
0x1ce SWAP2
0x1cf ADD
0x1d0 SWAP1
0x1d1 LOG1
0x1d2 POP
0x1d3 JUMP
---
0x189: JUMPDEST 
0x18b: V138 = 0x2
0x18d: V139 = S[0x2]
0x18e: V140 = 0x40
0x191: V141 = M[0x40]
0x192: V142 = 0x1
0x194: V143 = 0xa0
0x196: V144 = 0x2
0x198: V145 = EXP 0x2 0xa0
0x199: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19c: V147 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x19e: M[V141] = V147
0x19f: V148 = 0x20
0x1a2: V149 = ADD V141 0x20
0x1a5: M[V149] = V118
0x1a7: V150 = M[0x40]
0x1a8: V151 = 0xa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76
0x1cc: V152 = SUB V141 V150
0x1cf: V153 = ADD 0x40 V152
0x1d1: LOG V150 V153 0xa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76
0x1d3: JUMP 0x76
---
Entry stack: [V13, 0x76, V118, V131]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d4
[0x1d4:0x1df]
---
Predecessors: [0x84]
Successors: [0x8d]
---
0x1d4 JUMPDEST
0x1d5 PUSH1 0x4
0x1d7 SLOAD
0x1d8 PUSH1 0xc0
0x1da PUSH1 0x2
0x1dc EXP
0x1dd MUL
0x1de DUP2
0x1df JUMP
---
0x1d4: JUMPDEST 
0x1d5: V154 = 0x4
0x1d7: V155 = S[0x4]
0x1d8: V156 = 0xc0
0x1da: V157 = 0x2
0x1dc: V158 = EXP 0x2 0xc0
0x1dd: V159 = MUL 0x1000000000000000000000000000000000000000000000000 V155
0x1df: JUMP 0x8d
---
Entry stack: [V13, 0x8d]
Stack pops: 1
Stack additions: [S0, V159]
Exit stack: [V13, 0x8d, V159]

================================

Block 0x1e0
[0x1e0:0x1ee]
---
Predecessors: [0xb6]
Successors: [0xbf]
---
0x1e0 JUMPDEST
0x1e1 PUSH1 0x2
0x1e3 SLOAD
0x1e4 PUSH1 0x1
0x1e6 PUSH1 0xa0
0x1e8 PUSH1 0x2
0x1ea EXP
0x1eb SUB
0x1ec AND
0x1ed DUP2
0x1ee JUMP
---
0x1e0: JUMPDEST 
0x1e1: V160 = 0x2
0x1e3: V161 = S[0x2]
0x1e4: V162 = 0x1
0x1e6: V163 = 0xa0
0x1e8: V164 = 0x2
0x1ea: V165 = EXP 0x2 0xa0
0x1eb: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ec: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x1ee: JUMP 0xbf
---
Entry stack: [V13, 0xbf]
Stack pops: 1
Stack additions: [S0, V167]
Exit stack: [V13, 0xbf, V167]

================================

Block 0x1ef
[0x1ef:0x202]
---
Predecessors: [0xdb]
Successors: [0x203, 0x207]
---
0x1ef JUMPDEST
0x1f0 PUSH1 0x0
0x1f2 DUP1
0x1f3 SLOAD
0x1f4 PUSH1 0x1
0x1f6 PUSH1 0xa0
0x1f8 PUSH1 0x2
0x1fa EXP
0x1fb SUB
0x1fc AND
0x1fd CALLER
0x1fe EQ
0x1ff PUSH2 0x207
0x202 JUMPI
---
0x1ef: JUMPDEST 
0x1f0: V168 = 0x0
0x1f3: V169 = S[0x0]
0x1f4: V170 = 0x1
0x1f6: V171 = 0xa0
0x1f8: V172 = 0x2
0x1fa: V173 = EXP 0x2 0xa0
0x1fb: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fc: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x1fd: V176 = CALLER
0x1fe: V177 = EQ V176 V175
0x1ff: V178 = 0x207
0x202: JUMPI 0x207 V177
---
Entry stack: [V13, 0x76]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x76, 0x0]

================================

Block 0x203
[0x203:0x206]
---
Predecessors: [0x1ef]
Successors: []
---
0x203 PUSH1 0x0
0x205 DUP1
0x206 REVERT
---
0x203: V179 = 0x0
0x206: REVERT 0x0 0x0
---
Entry stack: [V13, 0x76, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x76, 0x0]

================================

Block 0x207
[0x207:0x210]
---
Predecessors: [0x1ef]
Successors: [0x211, 0x215]
---
0x207 JUMPDEST
0x208 PUSH1 0x3
0x20a SLOAD
0x20b TIMESTAMP
0x20c LT
0x20d PUSH2 0x215
0x210 JUMPI
---
0x207: JUMPDEST 
0x208: V180 = 0x3
0x20a: V181 = S[0x3]
0x20b: V182 = TIMESTAMP
0x20c: V183 = LT V182 V181
0x20d: V184 = 0x215
0x210: JUMPI 0x215 V183
---
Entry stack: [V13, 0x76, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x76, 0x0]

================================

Block 0x211
[0x211:0x214]
---
Predecessors: [0x207]
Successors: []
---
0x211 PUSH1 0x0
0x213 DUP1
0x214 REVERT
---
0x211: V185 = 0x0
0x214: REVERT 0x0 0x0
---
Entry stack: [V13, 0x76, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x76, 0x0]

================================

Block 0x215
[0x215:0x248]
---
Predecessors: [0x207]
Successors: [0x249, 0x252]
---
0x215 JUMPDEST
0x216 POP
0x217 PUSH1 0x1
0x219 SLOAD
0x21a PUSH1 0x40
0x21c MLOAD
0x21d ADDRESS
0x21e DUP1
0x21f BALANCE
0x220 SWAP3
0x221 PUSH1 0x1
0x223 PUSH1 0xa0
0x225 PUSH1 0x2
0x227 EXP
0x228 SUB
0x229 AND
0x22a SWAP2
0x22b SWAP1
0x22c BALANCE
0x22d DUP1
0x22e ISZERO
0x22f PUSH2 0x8fc
0x232 MUL
0x233 SWAP2
0x234 PUSH1 0x0
0x236 DUP2
0x237 DUP2
0x238 DUP2
0x239 DUP6
0x23a DUP9
0x23b DUP9
0x23c CALL
0x23d SWAP4
0x23e POP
0x23f POP
0x240 POP
0x241 POP
0x242 ISZERO
0x243 DUP1
0x244 ISZERO
0x245 PUSH2 0x252
0x248 JUMPI
---
0x215: JUMPDEST 
0x217: V186 = 0x1
0x219: V187 = S[0x1]
0x21a: V188 = 0x40
0x21c: V189 = M[0x40]
0x21d: V190 = ADDRESS
0x21f: V191 = BALANCE V190
0x221: V192 = 0x1
0x223: V193 = 0xa0
0x225: V194 = 0x2
0x227: V195 = EXP 0x2 0xa0
0x228: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x229: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x22c: V198 = BALANCE V190
0x22e: V199 = ISZERO V198
0x22f: V200 = 0x8fc
0x232: V201 = MUL 0x8fc V199
0x234: V202 = 0x0
0x23c: V203 = CALL V201 V197 V198 V189 0x0 V189 0x0
0x242: V204 = ISZERO V203
0x244: V205 = ISZERO V204
0x245: V206 = 0x252
0x248: JUMPI 0x252 V205
---
Entry stack: [V13, 0x76, 0x0]
Stack pops: 1
Stack additions: [V191, V204]
Exit stack: [V13, 0x76, V191, V204]

================================

Block 0x249
[0x249:0x251]
---
Predecessors: [0x215]
Successors: []
---
0x249 RETURNDATASIZE
0x24a PUSH1 0x0
0x24c DUP1
0x24d RETURNDATACOPY
0x24e RETURNDATASIZE
0x24f PUSH1 0x0
0x251 REVERT
---
0x249: V207 = RETURNDATASIZE
0x24a: V208 = 0x0
0x24d: RETURNDATACOPY 0x0 0x0 V207
0x24e: V209 = RETURNDATASIZE
0x24f: V210 = 0x0
0x251: REVERT 0x0 V209
---
Entry stack: [V13, 0x76, V191, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x76, V191, V204]

================================

Block 0x252
[0x252:0x29c]
---
Predecessors: [0x215]
Successors: [0x76]
---
0x252 JUMPDEST
0x253 POP
0x254 PUSH1 0x1
0x256 SLOAD
0x257 PUSH1 0x40
0x259 DUP1
0x25a MLOAD
0x25b PUSH1 0x1
0x25d PUSH1 0xa0
0x25f PUSH1 0x2
0x261 EXP
0x262 SUB
0x263 SWAP1
0x264 SWAP3
0x265 AND
0x266 DUP3
0x267 MSTORE
0x268 PUSH1 0x20
0x26a DUP3
0x26b ADD
0x26c DUP4
0x26d SWAP1
0x26e MSTORE
0x26f DUP1
0x270 MLOAD
0x271 PUSH32 0x32f9105f1f75b5b33eb364ef7cbcc315a3ab271871d72edcdd802b851df2c322
0x292 SWAP3
0x293 DUP2
0x294 SWAP1
0x295 SUB
0x296 SWAP1
0x297 SWAP2
0x298 ADD
0x299 SWAP1
0x29a LOG1
0x29b POP
0x29c JUMP
---
0x252: JUMPDEST 
0x254: V211 = 0x1
0x256: V212 = S[0x1]
0x257: V213 = 0x40
0x25a: V214 = M[0x40]
0x25b: V215 = 0x1
0x25d: V216 = 0xa0
0x25f: V217 = 0x2
0x261: V218 = EXP 0x2 0xa0
0x262: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x265: V220 = AND V212 0xffffffffffffffffffffffffffffffffffffffff
0x267: M[V214] = V220
0x268: V221 = 0x20
0x26b: V222 = ADD V214 0x20
0x26e: M[V222] = V191
0x270: V223 = M[0x40]
0x271: V224 = 0x32f9105f1f75b5b33eb364ef7cbcc315a3ab271871d72edcdd802b851df2c322
0x295: V225 = SUB V214 V223
0x298: V226 = ADD 0x40 V225
0x29a: LOG V223 V226 0x32f9105f1f75b5b33eb364ef7cbcc315a3ab271871d72edcdd802b851df2c322
0x29c: JUMP 0x76
---
Entry stack: [V13, 0x76, V191, V204]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x29d
[0x29d:0x2ab]
---
Predecessors: [0xef]
Successors: [0xbf]
---
0x29d JUMPDEST
0x29e PUSH1 0x0
0x2a0 SLOAD
0x2a1 PUSH1 0x1
0x2a3 PUSH1 0xa0
0x2a5 PUSH1 0x2
0x2a7 EXP
0x2a8 SUB
0x2a9 AND
0x2aa DUP2
0x2ab JUMP
---
0x29d: JUMPDEST 
0x29e: V227 = 0x0
0x2a0: V228 = S[0x0]
0x2a1: V229 = 0x1
0x2a3: V230 = 0xa0
0x2a5: V231 = 0x2
0x2a7: V232 = EXP 0x2 0xa0
0x2a8: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a9: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x2ab: JUMP 0xbf
---
Entry stack: [V13, 0xbf]
Stack pops: 1
Stack additions: [S0, V234]
Exit stack: [V13, 0xbf, V234]

================================

Block 0x2ac
[0x2ac:0x2b1]
---
Predecessors: [0x104]
Successors: [0x10d]
---
0x2ac JUMPDEST
0x2ad PUSH1 0x3
0x2af SLOAD
0x2b0 DUP2
0x2b1 JUMP
---
0x2ac: JUMPDEST 
0x2ad: V235 = 0x3
0x2af: V236 = S[0x3]
0x2b1: JUMP 0x10d
---
Entry stack: [V13, 0x10d]
Stack pops: 1
Stack additions: [S0, V236]
Exit stack: [V13, 0x10d, V236]

================================

Block 0x2b2
[0x2b2:0x2c0]
---
Predecessors: [0x12b]
Successors: [0xbf]
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x1
0x2b5 SLOAD
0x2b6 PUSH1 0x1
0x2b8 PUSH1 0xa0
0x2ba PUSH1 0x2
0x2bc EXP
0x2bd SUB
0x2be AND
0x2bf DUP2
0x2c0 JUMP
---
0x2b2: JUMPDEST 
0x2b3: V237 = 0x1
0x2b5: V238 = S[0x1]
0x2b6: V239 = 0x1
0x2b8: V240 = 0xa0
0x2ba: V241 = 0x2
0x2bc: V242 = EXP 0x2 0xa0
0x2bd: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2be: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x2c0: JUMP 0xbf
---
Entry stack: [V13, 0xbf]
Stack pops: 1
Stack additions: [S0, V244]
Exit stack: [V13, 0xbf, V244]

================================

Block 0x2c1
[0x2c1:0x2ee]
---
Predecessors: []
Successors: []
---
0x2c1 STOP
0x2c2 LOG1
0x2c3 PUSH6 0x627a7a723058
0x2ca SHA3
0x2cb MISSING 0xb2
0x2cc MISSING 0xc3
0x2cd MISSING 0x4c
0x2ce MISSING 0xa6
0x2cf SWAP12
0x2d0 MISSING 0xd1
0x2d1 PUSH11 0x15dd2ec692901e2e7344cc
0x2dd MISSING 0xd0
0x2de PUSH16 0x368e6e8d185f426ece9d80200029
---
0x2c1: STOP 
0x2c2: LOG S0 S1 S2
0x2c3: V245 = 0x627a7a723058
0x2ca: V246 = SHA3 0x627a7a723058 S3
0x2cb: MISSING 0xb2
0x2cc: MISSING 0xc3
0x2cd: MISSING 0x4c
0x2ce: MISSING 0xa6
0x2d0: MISSING 0xd1
0x2d1: V247 = 0x15dd2ec692901e2e7344cc
0x2dd: MISSING 0xd0
0x2de: V248 = 0x368e6e8d185f426ece9d80200029
---
Entry stack: []
Stack pops: 0
Stack additions: [V246, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, 0x15dd2ec692901e2e7344cc, 0x368e6e8d185f426ece9d80200029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d2295ad
Entry block: 0x6e
Exit block: 0x76
Body: 0x6e, 0x76, 0x134, 0x148, 0x14c, 0x180, 0x189

Function 1:
Public function signature: 0x54fd4d50
Entry block: 0x78
Exit block: 0x8d
Body: 0x78, 0x80, 0x84, 0x8d, 0x1d4

Function 2:
Public function signature: 0x733fd8c7
Entry block: 0xaa
Exit block: 0xbf
Body: 0xaa, 0xb2, 0xb6, 0xbf, 0x1e0

Function 3:
Public function signature: 0x7803af8c
Entry block: 0xdb
Exit block: 0x76
Body: 0x76, 0xdb, 0x1ef, 0x203, 0x207, 0x211, 0x215, 0x249, 0x252

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0xe3
Exit block: 0xbf
Body: 0xbf, 0xe3, 0xeb, 0xef, 0x29d

Function 5:
Public function signature: 0xda284dcc
Entry block: 0xf8
Exit block: 0x10d
Body: 0xf8, 0x100, 0x104, 0x10d, 0x2ac

Function 6:
Public function signature: 0xf6954379
Entry block: 0x11f
Exit block: 0xbf
Body: 0xbf, 0x11f, 0x127, 0x12b, 0x2b2

Function 7:
Public fallback function
Entry block: 0x69
Exit block: 0x69
Body: 0x69

