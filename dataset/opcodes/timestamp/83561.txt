Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xc5]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xc5
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xc5
0xc: JUMPI 0xc5 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x303]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1cb3b20
0x3c EQ
0x3d PUSH2 0x303
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1cb3b20
0x3c: V13 = EQ 0x1cb3b20 V11
0x3d: V14 = 0x303
0x40: JUMPI 0x303 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x31a]
---
0x41 DUP1
0x42 PUSH4 0xb97bc86
0x47 EQ
0x48 PUSH2 0x31a
0x4b JUMPI
---
0x42: V15 = 0xb97bc86
0x47: V16 = EQ 0xb97bc86 V11
0x48: V17 = 0x31a
0x4b: JUMPI 0x31a V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x345]
---
0x4c DUP1
0x4d PUSH4 0x29dcb0cf
0x52 EQ
0x53 PUSH2 0x345
0x56 JUMPI
---
0x4d: V18 = 0x29dcb0cf
0x52: V19 = EQ 0x29dcb0cf V11
0x53: V20 = 0x345
0x56: JUMPI 0x345 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x370]
---
0x57 DUP1
0x58 PUSH4 0x38af3eed
0x5d EQ
0x5e PUSH2 0x370
0x61 JUMPI
---
0x58: V21 = 0x38af3eed
0x5d: V22 = EQ 0x38af3eed V11
0x5e: V23 = 0x370
0x61: JUMPI 0x370 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x3c7]
---
0x62 DUP1
0x63 PUSH4 0x45f988a4
0x68 EQ
0x69 PUSH2 0x3c7
0x6c JUMPI
---
0x63: V24 = 0x45f988a4
0x68: V25 = EQ 0x45f988a4 V11
0x69: V26 = 0x3c7
0x6c: JUMPI 0x3c7 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x3f2]
---
0x6d DUP1
0x6e PUSH4 0x6e66f6e9
0x73 EQ
0x74 PUSH2 0x3f2
0x77 JUMPI
---
0x6e: V27 = 0x6e66f6e9
0x73: V28 = EQ 0x6e66f6e9 V11
0x74: V29 = 0x3f2
0x77: JUMPI 0x3f2 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x449]
---
0x78 DUP1
0x79 PUSH4 0x70a08231
0x7e EQ
0x7f PUSH2 0x449
0x82 JUMPI
---
0x79: V30 = 0x70a08231
0x7e: V31 = EQ 0x70a08231 V11
0x7f: V32 = 0x449
0x82: JUMPI 0x449 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x4a0]
---
0x83 DUP1
0x84 PUSH4 0x7a3a0e84
0x89 EQ
0x8a PUSH2 0x4a0
0x8d JUMPI
---
0x84: V33 = 0x7a3a0e84
0x89: V34 = EQ 0x7a3a0e84 V11
0x8a: V35 = 0x4a0
0x8d: JUMPI 0x4a0 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x4cb]
---
0x8e DUP1
0x8f PUSH4 0x7b3e5e7b
0x94 EQ
0x95 PUSH2 0x4cb
0x98 JUMPI
---
0x8f: V36 = 0x7b3e5e7b
0x94: V37 = EQ 0x7b3e5e7b V11
0x95: V38 = 0x4cb
0x98: JUMPI 0x4cb V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x4f6]
---
0x99 DUP1
0x9a PUSH4 0xa9ea1896
0x9f EQ
0xa0 PUSH2 0x4f6
0xa3 JUMPI
---
0x9a: V39 = 0xa9ea1896
0x9f: V40 = EQ 0xa9ea1896 V11
0xa0: V41 = 0x4f6
0xa3: JUMPI 0x4f6 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x521]
---
0xa4 DUP1
0xa5 PUSH4 0xaba61514
0xaa EQ
0xab PUSH2 0x521
0xae JUMPI
---
0xa5: V42 = 0xaba61514
0xaa: V43 = EQ 0xaba61514 V11
0xab: V44 = 0x521
0xae: JUMPI 0x521 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x54c]
---
0xaf DUP1
0xb0 PUSH4 0xfbd7c5f1
0xb5 EQ
0xb6 PUSH2 0x54c
0xb9 JUMPI
---
0xb0: V45 = 0xfbd7c5f1
0xb5: V46 = EQ 0xfbd7c5f1 V11
0xb6: V47 = 0x54c
0xb9: JUMPI 0x54c V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc4]
---
Predecessors: [0xaf]
Successors: [0xc5, 0x577]
---
0xba DUP1
0xbb PUSH4 0xfd6b7ef8
0xc0 EQ
0xc1 PUSH2 0x577
0xc4 JUMPI
---
0xbb: V48 = 0xfd6b7ef8
0xc0: V49 = EQ 0xfd6b7ef8 V11
0xc1: V50 = 0x577
0xc4: JUMPI 0x577 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xdf]
---
Predecessors: [0x0, 0xba]
Successors: [0xe0, 0xe4]
---
0xc5 JUMPDEST
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 PUSH1 0xb
0xcb PUSH1 0x1
0xcd SWAP1
0xce SLOAD
0xcf SWAP1
0xd0 PUSH2 0x100
0xd3 EXP
0xd4 SWAP1
0xd5 DIV
0xd6 PUSH1 0xff
0xd8 AND
0xd9 ISZERO
0xda ISZERO
0xdb ISZERO
0xdc PUSH2 0xe4
0xdf JUMPI
---
0xc5: JUMPDEST 
0xc6: V51 = 0x0
0xc9: V52 = 0xb
0xcb: V53 = 0x1
0xce: V54 = S[0xb]
0xd0: V55 = 0x100
0xd3: V56 = EXP 0x100 0x1
0xd5: V57 = DIV V54 0x100
0xd6: V58 = 0xff
0xd8: V59 = AND 0xff V57
0xd9: V60 = ISZERO V59
0xda: V61 = ISZERO V60
0xdb: V62 = ISZERO V61
0xdc: V63 = 0xe4
0xdf: JUMPI 0xe4 V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xe0
[0xe0:0xe3]
---
Predecessors: [0xc5]
Successors: []
---
0xe0 PUSH1 0x0
0xe2 DUP1
0xe3 REVERT
---
0xe0: V64 = 0x0
0xe3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xe4
[0xe4:0x159]
---
Predecessors: [0xc5]
Successors: [0x15a, 0x163]
---
0xe4 JUMPDEST
0xe5 CALLVALUE
0xe6 SWAP2
0xe7 POP
0xe8 DUP2
0xe9 PUSH1 0xa
0xeb PUSH1 0x0
0xed CALLER
0xee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x103 AND
0x104 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x119 AND
0x11a DUP2
0x11b MSTORE
0x11c PUSH1 0x20
0x11e ADD
0x11f SWAP1
0x120 DUP2
0x121 MSTORE
0x122 PUSH1 0x20
0x124 ADD
0x125 PUSH1 0x0
0x127 SHA3
0x128 PUSH1 0x0
0x12a DUP3
0x12b DUP3
0x12c SLOAD
0x12d ADD
0x12e SWAP3
0x12f POP
0x130 POP
0x131 DUP2
0x132 SWAP1
0x133 SSTORE
0x134 POP
0x135 DUP2
0x136 PUSH1 0x2
0x138 PUSH1 0x0
0x13a DUP3
0x13b DUP3
0x13c SLOAD
0x13d ADD
0x13e SWAP3
0x13f POP
0x140 POP
0x141 DUP2
0x142 SWAP1
0x143 SSTORE
0x144 POP
0x145 PUSH1 0x4
0x147 SLOAD
0x148 SWAP1
0x149 POP
0x14a TIMESTAMP
0x14b PUSH3 0x93a80
0x14f PUSH1 0x8
0x151 SLOAD
0x152 ADD
0x153 GT
0x154 ISZERO
0x155 ISZERO
0x156 PUSH2 0x163
0x159 JUMPI
---
0xe4: JUMPDEST 
0xe5: V65 = CALLVALUE
0xe9: V66 = 0xa
0xeb: V67 = 0x0
0xed: V68 = CALLER
0xee: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x103: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x104: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x119: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x11b: M[0x0] = V72
0x11c: V73 = 0x20
0x11e: V74 = ADD 0x20 0x0
0x121: M[0x20] = 0xa
0x122: V75 = 0x20
0x124: V76 = ADD 0x20 0x20
0x125: V77 = 0x0
0x127: V78 = SHA3 0x0 0x40
0x128: V79 = 0x0
0x12c: V80 = S[V78]
0x12d: V81 = ADD V80 V65
0x133: S[V78] = V81
0x136: V82 = 0x2
0x138: V83 = 0x0
0x13c: V84 = S[0x2]
0x13d: V85 = ADD V84 V65
0x143: S[0x2] = V85
0x145: V86 = 0x4
0x147: V87 = S[0x4]
0x14a: V88 = TIMESTAMP
0x14b: V89 = 0x93a80
0x14f: V90 = 0x8
0x151: V91 = S[0x8]
0x152: V92 = ADD V91 0x93a80
0x153: V93 = GT V92 V88
0x154: V94 = ISZERO V93
0x155: V95 = ISZERO V94
0x156: V96 = 0x163
0x159: JUMPI 0x163 V95
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 2
Stack additions: [V65, V87]
Exit stack: [V11, V65, V87]

================================

Block 0x15a
[0x15a:0x162]
---
Predecessors: [0xe4]
Successors: [0x195]
---
0x15a PUSH1 0x7
0x15c SLOAD
0x15d SWAP1
0x15e POP
0x15f PUSH2 0x195
0x162 JUMP
---
0x15a: V97 = 0x7
0x15c: V98 = S[0x7]
0x15f: V99 = 0x195
0x162: JUMP 0x195
---
Entry stack: [V11, V65, V87]
Stack pops: 1
Stack additions: [V98]
Exit stack: [V11, V65, V98]

================================

Block 0x163
[0x163:0x173]
---
Predecessors: [0xe4]
Successors: [0x174, 0x17d]
---
0x163 JUMPDEST
0x164 TIMESTAMP
0x165 PUSH3 0x127500
0x169 PUSH1 0x8
0x16b SLOAD
0x16c ADD
0x16d GT
0x16e ISZERO
0x16f ISZERO
0x170 PUSH2 0x17d
0x173 JUMPI
---
0x163: JUMPDEST 
0x164: V100 = TIMESTAMP
0x165: V101 = 0x127500
0x169: V102 = 0x8
0x16b: V103 = S[0x8]
0x16c: V104 = ADD V103 0x127500
0x16d: V105 = GT V104 V100
0x16e: V106 = ISZERO V105
0x16f: V107 = ISZERO V106
0x170: V108 = 0x17d
0x173: JUMPI 0x17d V107
---
Entry stack: [V11, V65, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V65, V87]

================================

Block 0x174
[0x174:0x17c]
---
Predecessors: [0x163]
Successors: [0x194]
---
0x174 PUSH1 0x6
0x176 SLOAD
0x177 SWAP1
0x178 POP
0x179 PUSH2 0x194
0x17c JUMP
---
0x174: V109 = 0x6
0x176: V110 = S[0x6]
0x179: V111 = 0x194
0x17c: JUMP 0x194
---
Entry stack: [V11, V65, V87]
Stack pops: 1
Stack additions: [V110]
Exit stack: [V11, V65, V110]

================================

Block 0x17d
[0x17d:0x18d]
---
Predecessors: [0x163]
Successors: [0x18e, 0x193]
---
0x17d JUMPDEST
0x17e TIMESTAMP
0x17f PUSH3 0x76a700
0x183 PUSH1 0x8
0x185 SLOAD
0x186 ADD
0x187 GT
0x188 ISZERO
0x189 ISZERO
0x18a PUSH2 0x193
0x18d JUMPI
---
0x17d: JUMPDEST 
0x17e: V112 = TIMESTAMP
0x17f: V113 = 0x76a700
0x183: V114 = 0x8
0x185: V115 = S[0x8]
0x186: V116 = ADD V115 0x76a700
0x187: V117 = GT V116 V112
0x188: V118 = ISZERO V117
0x189: V119 = ISZERO V118
0x18a: V120 = 0x193
0x18d: JUMPI 0x193 V119
---
Entry stack: [V11, V65, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V65, V87]

================================

Block 0x18e
[0x18e:0x192]
---
Predecessors: [0x17d]
Successors: [0x193]
---
0x18e PUSH1 0x5
0x190 SLOAD
0x191 SWAP1
0x192 POP
---
0x18e: V121 = 0x5
0x190: V122 = S[0x5]
---
Entry stack: [V11, V65, V87]
Stack pops: 1
Stack additions: [V122]
Exit stack: [V11, V65, V122]

================================

Block 0x193
[0x193:0x193]
---
Predecessors: [0x17d, 0x18e]
Successors: [0x194]
---
0x193 JUMPDEST
---
0x193: JUMPDEST 
---
Entry stack: [V11, V65, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V65, S0]

================================

Block 0x194
[0x194:0x194]
---
Predecessors: [0x174, 0x193]
Successors: [0x195]
---
0x194 JUMPDEST
---
0x194: JUMPDEST 
---
Entry stack: [V11, V65, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V65, S0]

================================

Block 0x195
[0x195:0x1e6]
---
Predecessors: [0x15a, 0x194]
Successors: [0x1e7, 0x1e8]
---
0x195 JUMPDEST
0x196 PUSH1 0x9
0x198 PUSH1 0x0
0x19a SWAP1
0x19b SLOAD
0x19c SWAP1
0x19d PUSH2 0x100
0x1a0 EXP
0x1a1 SWAP1
0x1a2 DIV
0x1a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b8 AND
0x1b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ce AND
0x1cf PUSH4 0xa9059cbb
0x1d4 CALLER
0x1d5 PUSH8 0xde0b6b3a7640000
0x1de DUP5
0x1df DUP7
0x1e0 DUP2
0x1e1 ISZERO
0x1e2 ISZERO
0x1e3 PUSH2 0x1e8
0x1e6 JUMPI
---
0x195: JUMPDEST 
0x196: V123 = 0x9
0x198: V124 = 0x0
0x19b: V125 = S[0x9]
0x19d: V126 = 0x100
0x1a0: V127 = EXP 0x100 0x0
0x1a2: V128 = DIV V125 0x1
0x1a3: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b8: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x1b9: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ce: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x1cf: V133 = 0xa9059cbb
0x1d4: V134 = CALLER
0x1d5: V135 = 0xde0b6b3a7640000
0x1e1: V136 = ISZERO S0
0x1e2: V137 = ISZERO V136
0x1e3: V138 = 0x1e8
0x1e6: JUMPI 0x1e8 V137
---
Entry stack: [V11, V65, S0]
Stack pops: 2
Stack additions: [S1, S0, V132, 0xa9059cbb, V134, 0xde0b6b3a7640000, S0, S1]
Exit stack: [V11, V65, S0, V132, 0xa9059cbb, V134, 0xde0b6b3a7640000, S0, V65]

================================

Block 0x1e7
[0x1e7:0x1e7]
---
Predecessors: [0x195]
Successors: []
---
0x1e7 INVALID
---
0x1e7: INVALID 
---
Entry stack: [V11, V65, S6, V132, 0xa9059cbb, V134, 0xde0b6b3a7640000, S1, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V65, S6, V132, 0xa9059cbb, V134, 0xde0b6b3a7640000, S1, V65]

================================

Block 0x1e8
[0x1e8:0x26a]
---
Predecessors: [0x195]
Successors: [0x26b, 0x26f]
---
0x1e8 JUMPDEST
0x1e9 DIV
0x1ea MUL
0x1eb PUSH1 0x40
0x1ed MLOAD
0x1ee DUP4
0x1ef PUSH4 0xffffffff
0x1f4 AND
0x1f5 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x213 MUL
0x214 DUP2
0x215 MSTORE
0x216 PUSH1 0x4
0x218 ADD
0x219 DUP1
0x21a DUP4
0x21b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x230 AND
0x231 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x246 AND
0x247 DUP2
0x248 MSTORE
0x249 PUSH1 0x20
0x24b ADD
0x24c DUP3
0x24d DUP2
0x24e MSTORE
0x24f PUSH1 0x20
0x251 ADD
0x252 SWAP3
0x253 POP
0x254 POP
0x255 POP
0x256 PUSH1 0x0
0x258 PUSH1 0x40
0x25a MLOAD
0x25b DUP1
0x25c DUP4
0x25d SUB
0x25e DUP2
0x25f PUSH1 0x0
0x261 DUP8
0x262 DUP1
0x263 EXTCODESIZE
0x264 ISZERO
0x265 DUP1
0x266 ISZERO
0x267 PUSH2 0x26f
0x26a JUMPI
---
0x1e8: JUMPDEST 
0x1e9: V139 = DIV V65 S1
0x1ea: V140 = MUL V139 0xde0b6b3a7640000
0x1eb: V141 = 0x40
0x1ed: V142 = M[0x40]
0x1ef: V143 = 0xffffffff
0x1f4: V144 = AND 0xffffffff 0xa9059cbb
0x1f5: V145 = 0x100000000000000000000000000000000000000000000000000000000
0x213: V146 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x215: M[V142] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x216: V147 = 0x4
0x218: V148 = ADD 0x4 V142
0x21b: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x230: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x231: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x246: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x248: M[V148] = V152
0x249: V153 = 0x20
0x24b: V154 = ADD 0x20 V148
0x24e: M[V154] = V140
0x24f: V155 = 0x20
0x251: V156 = ADD 0x20 V154
0x256: V157 = 0x0
0x258: V158 = 0x40
0x25a: V159 = M[0x40]
0x25d: V160 = SUB V156 V159
0x25f: V161 = 0x0
0x263: V162 = EXTCODESIZE V132
0x264: V163 = ISZERO V162
0x266: V164 = ISZERO V163
0x267: V165 = 0x26f
0x26a: JUMPI 0x26f V164
---
Entry stack: [V11, V65, S6, V132, 0xa9059cbb, V134, 0xde0b6b3a7640000, S1, V65]
Stack pops: 6
Stack additions: [S5, S4, V156, 0x0, V159, V160, V159, 0x0, S5, V163]
Exit stack: [V11, V65, S6, V132, 0xa9059cbb, V156, 0x0, V159, V160, V159, 0x0, V132, V163]

================================

Block 0x26b
[0x26b:0x26e]
---
Predecessors: [0x1e8]
Successors: []
---
0x26b PUSH1 0x0
0x26d DUP1
0x26e REVERT
---
0x26b: V166 = 0x0
0x26e: REVERT 0x0 0x0
---
Entry stack: [V11, V65, S10, V132, 0xa9059cbb, V156, 0x0, V159, V160, V159, 0x0, V132, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V65, S10, V132, 0xa9059cbb, V156, 0x0, V159, V160, V159, 0x0, V132, V163]

================================

Block 0x26f
[0x26f:0x279]
---
Predecessors: [0x1e8]
Successors: [0x27a, 0x283]
---
0x26f JUMPDEST
0x270 POP
0x271 GAS
0x272 CALL
0x273 ISZERO
0x274 DUP1
0x275 ISZERO
0x276 PUSH2 0x283
0x279 JUMPI
---
0x26f: JUMPDEST 
0x271: V167 = GAS
0x272: V168 = CALL V167 V132 0x0 V159 V160 V159 0x0
0x273: V169 = ISZERO V168
0x275: V170 = ISZERO V169
0x276: V171 = 0x283
0x279: JUMPI 0x283 V170
---
Entry stack: [V11, V65, S10, V132, 0xa9059cbb, V156, 0x0, V159, V160, V159, 0x0, V132, V163]
Stack pops: 7
Stack additions: [V169]
Exit stack: [V11, V65, S10, V132, 0xa9059cbb, V156, V169]

================================

Block 0x27a
[0x27a:0x282]
---
Predecessors: [0x26f]
Successors: []
---
0x27a RETURNDATASIZE
0x27b PUSH1 0x0
0x27d DUP1
0x27e RETURNDATACOPY
0x27f RETURNDATASIZE
0x280 PUSH1 0x0
0x282 REVERT
---
0x27a: V172 = RETURNDATASIZE
0x27b: V173 = 0x0
0x27e: RETURNDATACOPY 0x0 0x0 V172
0x27f: V174 = RETURNDATASIZE
0x280: V175 = 0x0
0x282: REVERT 0x0 V174
---
Entry stack: [V11, V65, S4, V132, 0xa9059cbb, V156, V169]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V65, S4, V132, 0xa9059cbb, V156, V169]

================================

Block 0x283
[0x283:0x302]
---
Predecessors: [0x26f]
Successors: []
---
0x283 JUMPDEST
0x284 POP
0x285 POP
0x286 POP
0x287 POP
0x288 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2a9 CALLER
0x2aa DUP4
0x2ab PUSH1 0x1
0x2ad PUSH1 0x40
0x2af MLOAD
0x2b0 DUP1
0x2b1 DUP5
0x2b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c7 AND
0x2c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dd AND
0x2de DUP2
0x2df MSTORE
0x2e0 PUSH1 0x20
0x2e2 ADD
0x2e3 DUP4
0x2e4 DUP2
0x2e5 MSTORE
0x2e6 PUSH1 0x20
0x2e8 ADD
0x2e9 DUP3
0x2ea ISZERO
0x2eb ISZERO
0x2ec ISZERO
0x2ed ISZERO
0x2ee DUP2
0x2ef MSTORE
0x2f0 PUSH1 0x20
0x2f2 ADD
0x2f3 SWAP4
0x2f4 POP
0x2f5 POP
0x2f6 POP
0x2f7 POP
0x2f8 PUSH1 0x40
0x2fa MLOAD
0x2fb DUP1
0x2fc SWAP2
0x2fd SUB
0x2fe SWAP1
0x2ff LOG1
0x300 POP
0x301 POP
0x302 STOP
---
0x283: JUMPDEST 
0x288: V176 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2a9: V177 = CALLER
0x2ab: V178 = 0x1
0x2ad: V179 = 0x40
0x2af: V180 = M[0x40]
0x2b2: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c7: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x2c8: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dd: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x2df: M[V180] = V184
0x2e0: V185 = 0x20
0x2e2: V186 = ADD 0x20 V180
0x2e5: M[V186] = V65
0x2e6: V187 = 0x20
0x2e8: V188 = ADD 0x20 V186
0x2ea: V189 = ISZERO 0x1
0x2eb: V190 = ISZERO 0x0
0x2ec: V191 = ISZERO 0x1
0x2ed: V192 = ISZERO 0x0
0x2ef: M[V188] = 0x1
0x2f0: V193 = 0x20
0x2f2: V194 = ADD 0x20 V188
0x2f8: V195 = 0x40
0x2fa: V196 = M[0x40]
0x2fd: V197 = SUB V194 V196
0x2ff: LOG V196 V197 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x302: STOP 
---
Entry stack: [V11, V65, S4, V132, 0xa9059cbb, V156, V169]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x303
[0x303:0x30a]
---
Predecessors: [0xd]
Successors: [0x30b, 0x30f]
---
0x303 JUMPDEST
0x304 CALLVALUE
0x305 DUP1
0x306 ISZERO
0x307 PUSH2 0x30f
0x30a JUMPI
---
0x303: JUMPDEST 
0x304: V198 = CALLVALUE
0x306: V199 = ISZERO V198
0x307: V200 = 0x30f
0x30a: JUMPI 0x30f V199
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V198]
Exit stack: [V11, V198]

================================

Block 0x30b
[0x30b:0x30e]
---
Predecessors: [0x303]
Successors: []
---
0x30b PUSH1 0x0
0x30d DUP1
0x30e REVERT
---
0x30b: V201 = 0x0
0x30e: REVERT 0x0 0x0
---
Entry stack: [V11, V198]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V198]

================================

Block 0x30f
[0x30f:0x317]
---
Predecessors: [0x303]
Successors: [0x58e]
---
0x30f JUMPDEST
0x310 POP
0x311 PUSH2 0x318
0x314 PUSH2 0x58e
0x317 JUMP
---
0x30f: JUMPDEST 
0x311: V202 = 0x318
0x314: V203 = 0x58e
0x317: JUMP 0x58e
---
Entry stack: [V11, V198]
Stack pops: 1
Stack additions: [0x318]
Exit stack: [V11, 0x318]

================================

Block 0x318
[0x318:0x319]
---
Predecessors: [0x66c]
Successors: []
---
0x318 JUMPDEST
0x319 STOP
---
0x318: JUMPDEST 
0x319: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x31a
[0x31a:0x321]
---
Predecessors: [0x41]
Successors: [0x322, 0x326]
---
0x31a JUMPDEST
0x31b CALLVALUE
0x31c DUP1
0x31d ISZERO
0x31e PUSH2 0x326
0x321 JUMPI
---
0x31a: JUMPDEST 
0x31b: V204 = CALLVALUE
0x31d: V205 = ISZERO V204
0x31e: V206 = 0x326
0x321: JUMPI 0x326 V205
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V204]
Exit stack: [V11, V204]

================================

Block 0x322
[0x322:0x325]
---
Predecessors: [0x31a]
Successors: []
---
0x322 PUSH1 0x0
0x324 DUP1
0x325 REVERT
---
0x322: V207 = 0x0
0x325: REVERT 0x0 0x0
---
Entry stack: [V11, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V204]

================================

Block 0x326
[0x326:0x32e]
---
Predecessors: [0x31a]
Successors: [0x66e]
---
0x326 JUMPDEST
0x327 POP
0x328 PUSH2 0x32f
0x32b PUSH2 0x66e
0x32e JUMP
---
0x326: JUMPDEST 
0x328: V208 = 0x32f
0x32b: V209 = 0x66e
0x32e: JUMP 0x66e
---
Entry stack: [V11, V204]
Stack pops: 1
Stack additions: [0x32f]
Exit stack: [V11, 0x32f]

================================

Block 0x32f
[0x32f:0x344]
---
Predecessors: [0x66e]
Successors: []
---
0x32f JUMPDEST
0x330 PUSH1 0x40
0x332 MLOAD
0x333 DUP1
0x334 DUP3
0x335 DUP2
0x336 MSTORE
0x337 PUSH1 0x20
0x339 ADD
0x33a SWAP2
0x33b POP
0x33c POP
0x33d PUSH1 0x40
0x33f MLOAD
0x340 DUP1
0x341 SWAP2
0x342 SUB
0x343 SWAP1
0x344 RETURN
---
0x32f: JUMPDEST 
0x330: V210 = 0x40
0x332: V211 = M[0x40]
0x336: M[V211] = V437
0x337: V212 = 0x20
0x339: V213 = ADD 0x20 V211
0x33d: V214 = 0x40
0x33f: V215 = M[0x40]
0x342: V216 = SUB V213 V215
0x344: RETURN V215 V216
---
Entry stack: [V11, 0x32f, V437]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x32f]

================================

Block 0x345
[0x345:0x34c]
---
Predecessors: [0x4c]
Successors: [0x34d, 0x351]
---
0x345 JUMPDEST
0x346 CALLVALUE
0x347 DUP1
0x348 ISZERO
0x349 PUSH2 0x351
0x34c JUMPI
---
0x345: JUMPDEST 
0x346: V217 = CALLVALUE
0x348: V218 = ISZERO V217
0x349: V219 = 0x351
0x34c: JUMPI 0x351 V218
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V217]
Exit stack: [V11, V217]

================================

Block 0x34d
[0x34d:0x350]
---
Predecessors: [0x345]
Successors: []
---
0x34d PUSH1 0x0
0x34f DUP1
0x350 REVERT
---
0x34d: V220 = 0x0
0x350: REVERT 0x0 0x0
---
Entry stack: [V11, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V217]

================================

Block 0x351
[0x351:0x359]
---
Predecessors: [0x345]
Successors: [0x674]
---
0x351 JUMPDEST
0x352 POP
0x353 PUSH2 0x35a
0x356 PUSH2 0x674
0x359 JUMP
---
0x351: JUMPDEST 
0x353: V221 = 0x35a
0x356: V222 = 0x674
0x359: JUMP 0x674
---
Entry stack: [V11, V217]
Stack pops: 1
Stack additions: [0x35a]
Exit stack: [V11, 0x35a]

================================

Block 0x35a
[0x35a:0x36f]
---
Predecessors: [0x674]
Successors: []
---
0x35a JUMPDEST
0x35b PUSH1 0x40
0x35d MLOAD
0x35e DUP1
0x35f DUP3
0x360 DUP2
0x361 MSTORE
0x362 PUSH1 0x20
0x364 ADD
0x365 SWAP2
0x366 POP
0x367 POP
0x368 PUSH1 0x40
0x36a MLOAD
0x36b DUP1
0x36c SWAP2
0x36d SUB
0x36e SWAP1
0x36f RETURN
---
0x35a: JUMPDEST 
0x35b: V223 = 0x40
0x35d: V224 = M[0x40]
0x361: M[V224] = V439
0x362: V225 = 0x20
0x364: V226 = ADD 0x20 V224
0x368: V227 = 0x40
0x36a: V228 = M[0x40]
0x36d: V229 = SUB V226 V228
0x36f: RETURN V228 V229
---
Entry stack: [V11, 0x35a, V439]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x35a]

================================

Block 0x370
[0x370:0x377]
---
Predecessors: [0x57]
Successors: [0x378, 0x37c]
---
0x370 JUMPDEST
0x371 CALLVALUE
0x372 DUP1
0x373 ISZERO
0x374 PUSH2 0x37c
0x377 JUMPI
---
0x370: JUMPDEST 
0x371: V230 = CALLVALUE
0x373: V231 = ISZERO V230
0x374: V232 = 0x37c
0x377: JUMPI 0x37c V231
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V230]
Exit stack: [V11, V230]

================================

Block 0x378
[0x378:0x37b]
---
Predecessors: [0x370]
Successors: []
---
0x378 PUSH1 0x0
0x37a DUP1
0x37b REVERT
---
0x378: V233 = 0x0
0x37b: REVERT 0x0 0x0
---
Entry stack: [V11, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V230]

================================

Block 0x37c
[0x37c:0x384]
---
Predecessors: [0x370]
Successors: [0x67a]
---
0x37c JUMPDEST
0x37d POP
0x37e PUSH2 0x385
0x381 PUSH2 0x67a
0x384 JUMP
---
0x37c: JUMPDEST 
0x37e: V234 = 0x385
0x381: V235 = 0x67a
0x384: JUMP 0x67a
---
Entry stack: [V11, V230]
Stack pops: 1
Stack additions: [0x385]
Exit stack: [V11, 0x385]

================================

Block 0x385
[0x385:0x3c6]
---
Predecessors: [0x67a]
Successors: []
---
0x385 JUMPDEST
0x386 PUSH1 0x40
0x388 MLOAD
0x389 DUP1
0x38a DUP3
0x38b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a0 AND
0x3a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b6 AND
0x3b7 DUP2
0x3b8 MSTORE
0x3b9 PUSH1 0x20
0x3bb ADD
0x3bc SWAP2
0x3bd POP
0x3be POP
0x3bf PUSH1 0x40
0x3c1 MLOAD
0x3c2 DUP1
0x3c3 SWAP2
0x3c4 SUB
0x3c5 SWAP1
0x3c6 RETURN
---
0x385: JUMPDEST 
0x386: V236 = 0x40
0x388: V237 = M[0x40]
0x38b: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a0: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x3a1: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x3b8: M[V237] = V241
0x3b9: V242 = 0x20
0x3bb: V243 = ADD 0x20 V237
0x3bf: V244 = 0x40
0x3c1: V245 = M[0x40]
0x3c4: V246 = SUB V243 V245
0x3c6: RETURN V245 V246
---
Entry stack: [V11, 0x385, V446]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x385]

================================

Block 0x3c7
[0x3c7:0x3ce]
---
Predecessors: [0x62]
Successors: [0x3cf, 0x3d3]
---
0x3c7 JUMPDEST
0x3c8 CALLVALUE
0x3c9 DUP1
0x3ca ISZERO
0x3cb PUSH2 0x3d3
0x3ce JUMPI
---
0x3c7: JUMPDEST 
0x3c8: V247 = CALLVALUE
0x3ca: V248 = ISZERO V247
0x3cb: V249 = 0x3d3
0x3ce: JUMPI 0x3d3 V248
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V247]
Exit stack: [V11, V247]

================================

Block 0x3cf
[0x3cf:0x3d2]
---
Predecessors: [0x3c7]
Successors: []
---
0x3cf PUSH1 0x0
0x3d1 DUP1
0x3d2 REVERT
---
0x3cf: V250 = 0x0
0x3d2: REVERT 0x0 0x0
---
Entry stack: [V11, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V247]

================================

Block 0x3d3
[0x3d3:0x3db]
---
Predecessors: [0x3c7]
Successors: [0x69f]
---
0x3d3 JUMPDEST
0x3d4 POP
0x3d5 PUSH2 0x3dc
0x3d8 PUSH2 0x69f
0x3db JUMP
---
0x3d3: JUMPDEST 
0x3d5: V251 = 0x3dc
0x3d8: V252 = 0x69f
0x3db: JUMP 0x69f
---
Entry stack: [V11, V247]
Stack pops: 1
Stack additions: [0x3dc]
Exit stack: [V11, 0x3dc]

================================

Block 0x3dc
[0x3dc:0x3f1]
---
Predecessors: [0x69f]
Successors: []
---
0x3dc JUMPDEST
0x3dd PUSH1 0x40
0x3df MLOAD
0x3e0 DUP1
0x3e1 DUP3
0x3e2 DUP2
0x3e3 MSTORE
0x3e4 PUSH1 0x20
0x3e6 ADD
0x3e7 SWAP2
0x3e8 POP
0x3e9 POP
0x3ea PUSH1 0x40
0x3ec MLOAD
0x3ed DUP1
0x3ee SWAP2
0x3ef SUB
0x3f0 SWAP1
0x3f1 RETURN
---
0x3dc: JUMPDEST 
0x3dd: V253 = 0x40
0x3df: V254 = M[0x40]
0x3e3: M[V254] = V448
0x3e4: V255 = 0x20
0x3e6: V256 = ADD 0x20 V254
0x3ea: V257 = 0x40
0x3ec: V258 = M[0x40]
0x3ef: V259 = SUB V256 V258
0x3f1: RETURN V258 V259
---
Entry stack: [V11, 0x3dc, V448]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3dc]

================================

Block 0x3f2
[0x3f2:0x3f9]
---
Predecessors: [0x6d]
Successors: [0x3fa, 0x3fe]
---
0x3f2 JUMPDEST
0x3f3 CALLVALUE
0x3f4 DUP1
0x3f5 ISZERO
0x3f6 PUSH2 0x3fe
0x3f9 JUMPI
---
0x3f2: JUMPDEST 
0x3f3: V260 = CALLVALUE
0x3f5: V261 = ISZERO V260
0x3f6: V262 = 0x3fe
0x3f9: JUMPI 0x3fe V261
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V260]
Exit stack: [V11, V260]

================================

Block 0x3fa
[0x3fa:0x3fd]
---
Predecessors: [0x3f2]
Successors: []
---
0x3fa PUSH1 0x0
0x3fc DUP1
0x3fd REVERT
---
0x3fa: V263 = 0x0
0x3fd: REVERT 0x0 0x0
---
Entry stack: [V11, V260]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V260]

================================

Block 0x3fe
[0x3fe:0x406]
---
Predecessors: [0x3f2]
Successors: [0x6a5]
---
0x3fe JUMPDEST
0x3ff POP
0x400 PUSH2 0x407
0x403 PUSH2 0x6a5
0x406 JUMP
---
0x3fe: JUMPDEST 
0x400: V264 = 0x407
0x403: V265 = 0x6a5
0x406: JUMP 0x6a5
---
Entry stack: [V11, V260]
Stack pops: 1
Stack additions: [0x407]
Exit stack: [V11, 0x407]

================================

Block 0x407
[0x407:0x448]
---
Predecessors: [0x6a5]
Successors: []
---
0x407 JUMPDEST
0x408 PUSH1 0x40
0x40a MLOAD
0x40b DUP1
0x40c DUP3
0x40d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x422 AND
0x423 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x438 AND
0x439 DUP2
0x43a MSTORE
0x43b PUSH1 0x20
0x43d ADD
0x43e SWAP2
0x43f POP
0x440 POP
0x441 PUSH1 0x40
0x443 MLOAD
0x444 DUP1
0x445 SWAP2
0x446 SUB
0x447 SWAP1
0x448 RETURN
---
0x407: JUMPDEST 
0x408: V266 = 0x40
0x40a: V267 = M[0x40]
0x40d: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x422: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V456
0x423: V270 = 0xffffffffffffffffffffffffffffffffffffffff
0x438: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x43a: M[V267] = V271
0x43b: V272 = 0x20
0x43d: V273 = ADD 0x20 V267
0x441: V274 = 0x40
0x443: V275 = M[0x40]
0x446: V276 = SUB V273 V275
0x448: RETURN V275 V276
---
Entry stack: [V11, 0x407, V456]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x407]

================================

Block 0x449
[0x449:0x450]
---
Predecessors: [0x78]
Successors: [0x451, 0x455]
---
0x449 JUMPDEST
0x44a CALLVALUE
0x44b DUP1
0x44c ISZERO
0x44d PUSH2 0x455
0x450 JUMPI
---
0x449: JUMPDEST 
0x44a: V277 = CALLVALUE
0x44c: V278 = ISZERO V277
0x44d: V279 = 0x455
0x450: JUMPI 0x455 V278
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V277]
Exit stack: [V11, V277]

================================

Block 0x451
[0x451:0x454]
---
Predecessors: [0x449]
Successors: []
---
0x451 PUSH1 0x0
0x453 DUP1
0x454 REVERT
---
0x451: V280 = 0x0
0x454: REVERT 0x0 0x0
---
Entry stack: [V11, V277]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V277]

================================

Block 0x455
[0x455:0x489]
---
Predecessors: [0x449]
Successors: [0x6cb]
---
0x455 JUMPDEST
0x456 POP
0x457 PUSH2 0x48a
0x45a PUSH1 0x4
0x45c DUP1
0x45d CALLDATASIZE
0x45e SUB
0x45f DUP2
0x460 ADD
0x461 SWAP1
0x462 DUP1
0x463 DUP1
0x464 CALLDATALOAD
0x465 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47a AND
0x47b SWAP1
0x47c PUSH1 0x20
0x47e ADD
0x47f SWAP1
0x480 SWAP3
0x481 SWAP2
0x482 SWAP1
0x483 POP
0x484 POP
0x485 POP
0x486 PUSH2 0x6cb
0x489 JUMP
---
0x455: JUMPDEST 
0x457: V281 = 0x48a
0x45a: V282 = 0x4
0x45d: V283 = CALLDATASIZE
0x45e: V284 = SUB V283 0x4
0x460: V285 = ADD 0x4 V284
0x464: V286 = CALLDATALOAD 0x4
0x465: V287 = 0xffffffffffffffffffffffffffffffffffffffff
0x47a: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x47c: V289 = 0x20
0x47e: V290 = ADD 0x20 0x4
0x486: V291 = 0x6cb
0x489: JUMP 0x6cb
---
Entry stack: [V11, V277]
Stack pops: 1
Stack additions: [0x48a, V288]
Exit stack: [V11, 0x48a, V288]

================================

Block 0x48a
[0x48a:0x49f]
---
Predecessors: [0x6cb]
Successors: []
---
0x48a JUMPDEST
0x48b PUSH1 0x40
0x48d MLOAD
0x48e DUP1
0x48f DUP3
0x490 DUP2
0x491 MSTORE
0x492 PUSH1 0x20
0x494 ADD
0x495 SWAP2
0x496 POP
0x497 POP
0x498 PUSH1 0x40
0x49a MLOAD
0x49b DUP1
0x49c SWAP2
0x49d SUB
0x49e SWAP1
0x49f RETURN
---
0x48a: JUMPDEST 
0x48b: V292 = 0x40
0x48d: V293 = M[0x40]
0x491: M[V293] = V464
0x492: V294 = 0x20
0x494: V295 = ADD 0x20 V293
0x498: V296 = 0x40
0x49a: V297 = M[0x40]
0x49d: V298 = SUB V295 V297
0x49f: RETURN V297 V298
---
Entry stack: [V11, 0x48a, V464]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x48a]

================================

Block 0x4a0
[0x4a0:0x4a7]
---
Predecessors: [0x83]
Successors: [0x4a8, 0x4ac]
---
0x4a0 JUMPDEST
0x4a1 CALLVALUE
0x4a2 DUP1
0x4a3 ISZERO
0x4a4 PUSH2 0x4ac
0x4a7 JUMPI
---
0x4a0: JUMPDEST 
0x4a1: V299 = CALLVALUE
0x4a3: V300 = ISZERO V299
0x4a4: V301 = 0x4ac
0x4a7: JUMPI 0x4ac V300
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V299]
Exit stack: [V11, V299]

================================

Block 0x4a8
[0x4a8:0x4ab]
---
Predecessors: [0x4a0]
Successors: []
---
0x4a8 PUSH1 0x0
0x4aa DUP1
0x4ab REVERT
---
0x4a8: V302 = 0x0
0x4ab: REVERT 0x0 0x0
---
Entry stack: [V11, V299]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V299]

================================

Block 0x4ac
[0x4ac:0x4b4]
---
Predecessors: [0x4a0]
Successors: [0x6e3]
---
0x4ac JUMPDEST
0x4ad POP
0x4ae PUSH2 0x4b5
0x4b1 PUSH2 0x6e3
0x4b4 JUMP
---
0x4ac: JUMPDEST 
0x4ae: V303 = 0x4b5
0x4b1: V304 = 0x6e3
0x4b4: JUMP 0x6e3
---
Entry stack: [V11, V299]
Stack pops: 1
Stack additions: [0x4b5]
Exit stack: [V11, 0x4b5]

================================

Block 0x4b5
[0x4b5:0x4ca]
---
Predecessors: [0x6e3]
Successors: []
---
0x4b5 JUMPDEST
0x4b6 PUSH1 0x40
0x4b8 MLOAD
0x4b9 DUP1
0x4ba DUP3
0x4bb DUP2
0x4bc MSTORE
0x4bd PUSH1 0x20
0x4bf ADD
0x4c0 SWAP2
0x4c1 POP
0x4c2 POP
0x4c3 PUSH1 0x40
0x4c5 MLOAD
0x4c6 DUP1
0x4c7 SWAP2
0x4c8 SUB
0x4c9 SWAP1
0x4ca RETURN
---
0x4b5: JUMPDEST 
0x4b6: V305 = 0x40
0x4b8: V306 = M[0x40]
0x4bc: M[V306] = V466
0x4bd: V307 = 0x20
0x4bf: V308 = ADD 0x20 V306
0x4c3: V309 = 0x40
0x4c5: V310 = M[0x40]
0x4c8: V311 = SUB V308 V310
0x4ca: RETURN V310 V311
---
Entry stack: [V11, 0x4b5, V466]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4b5]

================================

Block 0x4cb
[0x4cb:0x4d2]
---
Predecessors: [0x8e]
Successors: [0x4d3, 0x4d7]
---
0x4cb JUMPDEST
0x4cc CALLVALUE
0x4cd DUP1
0x4ce ISZERO
0x4cf PUSH2 0x4d7
0x4d2 JUMPI
---
0x4cb: JUMPDEST 
0x4cc: V312 = CALLVALUE
0x4ce: V313 = ISZERO V312
0x4cf: V314 = 0x4d7
0x4d2: JUMPI 0x4d7 V313
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V312]
Exit stack: [V11, V312]

================================

Block 0x4d3
[0x4d3:0x4d6]
---
Predecessors: [0x4cb]
Successors: []
---
0x4d3 PUSH1 0x0
0x4d5 DUP1
0x4d6 REVERT
---
0x4d3: V315 = 0x0
0x4d6: REVERT 0x0 0x0
---
Entry stack: [V11, V312]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V312]

================================

Block 0x4d7
[0x4d7:0x4df]
---
Predecessors: [0x4cb]
Successors: [0x6e9]
---
0x4d7 JUMPDEST
0x4d8 POP
0x4d9 PUSH2 0x4e0
0x4dc PUSH2 0x6e9
0x4df JUMP
---
0x4d7: JUMPDEST 
0x4d9: V316 = 0x4e0
0x4dc: V317 = 0x6e9
0x4df: JUMP 0x6e9
---
Entry stack: [V11, V312]
Stack pops: 1
Stack additions: [0x4e0]
Exit stack: [V11, 0x4e0]

================================

Block 0x4e0
[0x4e0:0x4f5]
---
Predecessors: [0x6e9]
Successors: []
---
0x4e0 JUMPDEST
0x4e1 PUSH1 0x40
0x4e3 MLOAD
0x4e4 DUP1
0x4e5 DUP3
0x4e6 DUP2
0x4e7 MSTORE
0x4e8 PUSH1 0x20
0x4ea ADD
0x4eb SWAP2
0x4ec POP
0x4ed POP
0x4ee PUSH1 0x40
0x4f0 MLOAD
0x4f1 DUP1
0x4f2 SWAP2
0x4f3 SUB
0x4f4 SWAP1
0x4f5 RETURN
---
0x4e0: JUMPDEST 
0x4e1: V318 = 0x40
0x4e3: V319 = M[0x40]
0x4e7: M[V319] = V468
0x4e8: V320 = 0x20
0x4ea: V321 = ADD 0x20 V319
0x4ee: V322 = 0x40
0x4f0: V323 = M[0x40]
0x4f3: V324 = SUB V321 V323
0x4f5: RETURN V323 V324
---
Entry stack: [V11, 0x4e0, V468]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4e0]

================================

Block 0x4f6
[0x4f6:0x4fd]
---
Predecessors: [0x99]
Successors: [0x4fe, 0x502]
---
0x4f6 JUMPDEST
0x4f7 CALLVALUE
0x4f8 DUP1
0x4f9 ISZERO
0x4fa PUSH2 0x502
0x4fd JUMPI
---
0x4f6: JUMPDEST 
0x4f7: V325 = CALLVALUE
0x4f9: V326 = ISZERO V325
0x4fa: V327 = 0x502
0x4fd: JUMPI 0x502 V326
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V325]
Exit stack: [V11, V325]

================================

Block 0x4fe
[0x4fe:0x501]
---
Predecessors: [0x4f6]
Successors: []
---
0x4fe PUSH1 0x0
0x500 DUP1
0x501 REVERT
---
0x4fe: V328 = 0x0
0x501: REVERT 0x0 0x0
---
Entry stack: [V11, V325]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V325]

================================

Block 0x502
[0x502:0x50a]
---
Predecessors: [0x4f6]
Successors: [0x6ef]
---
0x502 JUMPDEST
0x503 POP
0x504 PUSH2 0x50b
0x507 PUSH2 0x6ef
0x50a JUMP
---
0x502: JUMPDEST 
0x504: V329 = 0x50b
0x507: V330 = 0x6ef
0x50a: JUMP 0x6ef
---
Entry stack: [V11, V325]
Stack pops: 1
Stack additions: [0x50b]
Exit stack: [V11, 0x50b]

================================

Block 0x50b
[0x50b:0x520]
---
Predecessors: [0x6ef]
Successors: []
---
0x50b JUMPDEST
0x50c PUSH1 0x40
0x50e MLOAD
0x50f DUP1
0x510 DUP3
0x511 DUP2
0x512 MSTORE
0x513 PUSH1 0x20
0x515 ADD
0x516 SWAP2
0x517 POP
0x518 POP
0x519 PUSH1 0x40
0x51b MLOAD
0x51c DUP1
0x51d SWAP2
0x51e SUB
0x51f SWAP1
0x520 RETURN
---
0x50b: JUMPDEST 
0x50c: V331 = 0x40
0x50e: V332 = M[0x40]
0x512: M[V332] = V470
0x513: V333 = 0x20
0x515: V334 = ADD 0x20 V332
0x519: V335 = 0x40
0x51b: V336 = M[0x40]
0x51e: V337 = SUB V334 V336
0x520: RETURN V336 V337
---
Entry stack: [V11, 0x50b, V470]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x50b]

================================

Block 0x521
[0x521:0x528]
---
Predecessors: [0xa4]
Successors: [0x529, 0x52d]
---
0x521 JUMPDEST
0x522 CALLVALUE
0x523 DUP1
0x524 ISZERO
0x525 PUSH2 0x52d
0x528 JUMPI
---
0x521: JUMPDEST 
0x522: V338 = CALLVALUE
0x524: V339 = ISZERO V338
0x525: V340 = 0x52d
0x528: JUMPI 0x52d V339
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V338]
Exit stack: [V11, V338]

================================

Block 0x529
[0x529:0x52c]
---
Predecessors: [0x521]
Successors: []
---
0x529 PUSH1 0x0
0x52b DUP1
0x52c REVERT
---
0x529: V341 = 0x0
0x52c: REVERT 0x0 0x0
---
Entry stack: [V11, V338]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V338]

================================

Block 0x52d
[0x52d:0x535]
---
Predecessors: [0x521]
Successors: [0x6f5]
---
0x52d JUMPDEST
0x52e POP
0x52f PUSH2 0x536
0x532 PUSH2 0x6f5
0x535 JUMP
---
0x52d: JUMPDEST 
0x52f: V342 = 0x536
0x532: V343 = 0x6f5
0x535: JUMP 0x6f5
---
Entry stack: [V11, V338]
Stack pops: 1
Stack additions: [0x536]
Exit stack: [V11, 0x536]

================================

Block 0x536
[0x536:0x54b]
---
Predecessors: [0x6f5]
Successors: []
---
0x536 JUMPDEST
0x537 PUSH1 0x40
0x539 MLOAD
0x53a DUP1
0x53b DUP3
0x53c DUP2
0x53d MSTORE
0x53e PUSH1 0x20
0x540 ADD
0x541 SWAP2
0x542 POP
0x543 POP
0x544 PUSH1 0x40
0x546 MLOAD
0x547 DUP1
0x548 SWAP2
0x549 SUB
0x54a SWAP1
0x54b RETURN
---
0x536: JUMPDEST 
0x537: V344 = 0x40
0x539: V345 = M[0x40]
0x53d: M[V345] = V472
0x53e: V346 = 0x20
0x540: V347 = ADD 0x20 V345
0x544: V348 = 0x40
0x546: V349 = M[0x40]
0x549: V350 = SUB V347 V349
0x54b: RETURN V349 V350
---
Entry stack: [V11, 0x536, V472]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x536]

================================

Block 0x54c
[0x54c:0x553]
---
Predecessors: [0xaf]
Successors: [0x554, 0x558]
---
0x54c JUMPDEST
0x54d CALLVALUE
0x54e DUP1
0x54f ISZERO
0x550 PUSH2 0x558
0x553 JUMPI
---
0x54c: JUMPDEST 
0x54d: V351 = CALLVALUE
0x54f: V352 = ISZERO V351
0x550: V353 = 0x558
0x553: JUMPI 0x558 V352
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V351]
Exit stack: [V11, V351]

================================

Block 0x554
[0x554:0x557]
---
Predecessors: [0x54c]
Successors: []
---
0x554 PUSH1 0x0
0x556 DUP1
0x557 REVERT
---
0x554: V354 = 0x0
0x557: REVERT 0x0 0x0
---
Entry stack: [V11, V351]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V351]

================================

Block 0x558
[0x558:0x560]
---
Predecessors: [0x54c]
Successors: [0x6fb]
---
0x558 JUMPDEST
0x559 POP
0x55a PUSH2 0x561
0x55d PUSH2 0x6fb
0x560 JUMP
---
0x558: JUMPDEST 
0x55a: V355 = 0x561
0x55d: V356 = 0x6fb
0x560: JUMP 0x6fb
---
Entry stack: [V11, V351]
Stack pops: 1
Stack additions: [0x561]
Exit stack: [V11, 0x561]

================================

Block 0x561
[0x561:0x576]
---
Predecessors: [0x6fb]
Successors: []
---
0x561 JUMPDEST
0x562 PUSH1 0x40
0x564 MLOAD
0x565 DUP1
0x566 DUP3
0x567 DUP2
0x568 MSTORE
0x569 PUSH1 0x20
0x56b ADD
0x56c SWAP2
0x56d POP
0x56e POP
0x56f PUSH1 0x40
0x571 MLOAD
0x572 DUP1
0x573 SWAP2
0x574 SUB
0x575 SWAP1
0x576 RETURN
---
0x561: JUMPDEST 
0x562: V357 = 0x40
0x564: V358 = M[0x40]
0x568: M[V358] = V474
0x569: V359 = 0x20
0x56b: V360 = ADD 0x20 V358
0x56f: V361 = 0x40
0x571: V362 = M[0x40]
0x574: V363 = SUB V360 V362
0x576: RETURN V362 V363
---
Entry stack: [V11, 0x561, V474]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x561]

================================

Block 0x577
[0x577:0x57e]
---
Predecessors: [0xba]
Successors: [0x57f, 0x583]
---
0x577 JUMPDEST
0x578 CALLVALUE
0x579 DUP1
0x57a ISZERO
0x57b PUSH2 0x583
0x57e JUMPI
---
0x577: JUMPDEST 
0x578: V364 = CALLVALUE
0x57a: V365 = ISZERO V364
0x57b: V366 = 0x583
0x57e: JUMPI 0x583 V365
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V364]
Exit stack: [V11, V364]

================================

Block 0x57f
[0x57f:0x582]
---
Predecessors: [0x577]
Successors: []
---
0x57f PUSH1 0x0
0x581 DUP1
0x582 REVERT
---
0x57f: V367 = 0x0
0x582: REVERT 0x0 0x0
---
Entry stack: [V11, V364]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V364]

================================

Block 0x583
[0x583:0x58b]
---
Predecessors: [0x577]
Successors: [0x701]
---
0x583 JUMPDEST
0x584 POP
0x585 PUSH2 0x58c
0x588 PUSH2 0x701
0x58b JUMP
---
0x583: JUMPDEST 
0x585: V368 = 0x58c
0x588: V369 = 0x701
0x58b: JUMP 0x701
---
Entry stack: [V11, V364]
Stack pops: 1
Stack additions: [0x58c]
Exit stack: [V11, 0x58c]

================================

Block 0x58c
[0x58c:0x58d]
---
Predecessors: [0xa3a]
Successors: []
---
0x58c JUMPDEST
0x58d STOP
---
0x58c: JUMPDEST 
0x58d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58e
[0x58e:0x599]
---
Predecessors: [0x30f]
Successors: [0x59a, 0x66c]
---
0x58e JUMPDEST
0x58f PUSH1 0x3
0x591 SLOAD
0x592 TIMESTAMP
0x593 LT
0x594 ISZERO
0x595 ISZERO
0x596 PUSH2 0x66c
0x599 JUMPI
---
0x58e: JUMPDEST 
0x58f: V370 = 0x3
0x591: V371 = S[0x3]
0x592: V372 = TIMESTAMP
0x593: V373 = LT V372 V371
0x594: V374 = ISZERO V373
0x595: V375 = ISZERO V374
0x596: V376 = 0x66c
0x599: JUMPI 0x66c V375
---
Entry stack: [V11, 0x318]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x318]

================================

Block 0x59a
[0x59a:0x5a6]
---
Predecessors: [0x58e]
Successors: [0x5a7, 0x650]
---
0x59a PUSH1 0x1
0x59c SLOAD
0x59d PUSH1 0x2
0x59f SLOAD
0x5a0 LT
0x5a1 ISZERO
0x5a2 ISZERO
0x5a3 PUSH2 0x650
0x5a6 JUMPI
---
0x59a: V377 = 0x1
0x59c: V378 = S[0x1]
0x59d: V379 = 0x2
0x59f: V380 = S[0x2]
0x5a0: V381 = LT V380 V378
0x5a1: V382 = ISZERO V381
0x5a2: V383 = ISZERO V382
0x5a3: V384 = 0x650
0x5a6: JUMPI 0x650 V383
---
Entry stack: [V11, 0x318]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x318]

================================

Block 0x5a7
[0x5a7:0x64f]
---
Predecessors: [0x59a]
Successors: [0x650]
---
0x5a7 PUSH1 0x1
0x5a9 PUSH1 0xb
0x5ab PUSH1 0x0
0x5ad PUSH2 0x100
0x5b0 EXP
0x5b1 DUP2
0x5b2 SLOAD
0x5b3 DUP2
0x5b4 PUSH1 0xff
0x5b6 MUL
0x5b7 NOT
0x5b8 AND
0x5b9 SWAP1
0x5ba DUP4
0x5bb ISZERO
0x5bc ISZERO
0x5bd MUL
0x5be OR
0x5bf SWAP1
0x5c0 SSTORE
0x5c1 POP
0x5c2 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x5e3 PUSH1 0x0
0x5e5 DUP1
0x5e6 SWAP1
0x5e7 SLOAD
0x5e8 SWAP1
0x5e9 PUSH2 0x100
0x5ec EXP
0x5ed SWAP1
0x5ee DIV
0x5ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x604 AND
0x605 PUSH1 0x2
0x607 SLOAD
0x608 PUSH1 0x40
0x60a MLOAD
0x60b DUP1
0x60c DUP4
0x60d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x622 AND
0x623 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x638 AND
0x639 DUP2
0x63a MSTORE
0x63b PUSH1 0x20
0x63d ADD
0x63e DUP3
0x63f DUP2
0x640 MSTORE
0x641 PUSH1 0x20
0x643 ADD
0x644 SWAP3
0x645 POP
0x646 POP
0x647 POP
0x648 PUSH1 0x40
0x64a MLOAD
0x64b DUP1
0x64c SWAP2
0x64d SUB
0x64e SWAP1
0x64f LOG1
---
0x5a7: V385 = 0x1
0x5a9: V386 = 0xb
0x5ab: V387 = 0x0
0x5ad: V388 = 0x100
0x5b0: V389 = EXP 0x100 0x0
0x5b2: V390 = S[0xb]
0x5b4: V391 = 0xff
0x5b6: V392 = MUL 0xff 0x1
0x5b7: V393 = NOT 0xff
0x5b8: V394 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V390
0x5bb: V395 = ISZERO 0x1
0x5bc: V396 = ISZERO 0x0
0x5bd: V397 = MUL 0x1 0x1
0x5be: V398 = OR 0x1 V394
0x5c0: S[0xb] = V398
0x5c2: V399 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x5e3: V400 = 0x0
0x5e7: V401 = S[0x0]
0x5e9: V402 = 0x100
0x5ec: V403 = EXP 0x100 0x0
0x5ee: V404 = DIV V401 0x1
0x5ef: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x604: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x605: V407 = 0x2
0x607: V408 = S[0x2]
0x608: V409 = 0x40
0x60a: V410 = M[0x40]
0x60d: V411 = 0xffffffffffffffffffffffffffffffffffffffff
0x622: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x623: V413 = 0xffffffffffffffffffffffffffffffffffffffff
0x638: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x63a: M[V410] = V414
0x63b: V415 = 0x20
0x63d: V416 = ADD 0x20 V410
0x640: M[V416] = V408
0x641: V417 = 0x20
0x643: V418 = ADD 0x20 V416
0x648: V419 = 0x40
0x64a: V420 = M[0x40]
0x64d: V421 = SUB V418 V420
0x64f: LOG V420 V421 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V11, 0x318]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x318]

================================

Block 0x650
[0x650:0x66b]
---
Predecessors: [0x59a, 0x5a7]
Successors: [0x66c]
---
0x650 JUMPDEST
0x651 PUSH1 0x1
0x653 PUSH1 0xb
0x655 PUSH1 0x1
0x657 PUSH2 0x100
0x65a EXP
0x65b DUP2
0x65c SLOAD
0x65d DUP2
0x65e PUSH1 0xff
0x660 MUL
0x661 NOT
0x662 AND
0x663 SWAP1
0x664 DUP4
0x665 ISZERO
0x666 ISZERO
0x667 MUL
0x668 OR
0x669 SWAP1
0x66a SSTORE
0x66b POP
---
0x650: JUMPDEST 
0x651: V422 = 0x1
0x653: V423 = 0xb
0x655: V424 = 0x1
0x657: V425 = 0x100
0x65a: V426 = EXP 0x100 0x1
0x65c: V427 = S[0xb]
0x65e: V428 = 0xff
0x660: V429 = MUL 0xff 0x100
0x661: V430 = NOT 0xff00
0x662: V431 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V427
0x665: V432 = ISZERO 0x1
0x666: V433 = ISZERO 0x0
0x667: V434 = MUL 0x1 0x100
0x668: V435 = OR 0x100 V431
0x66a: S[0xb] = V435
---
Entry stack: [V11, 0x318]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x318]

================================

Block 0x66c
[0x66c:0x66d]
---
Predecessors: [0x58e, 0x650]
Successors: [0x318]
---
0x66c JUMPDEST
0x66d JUMP
---
0x66c: JUMPDEST 
0x66d: JUMP 0x318
---
Entry stack: [V11, 0x318]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x66e
[0x66e:0x673]
---
Predecessors: [0x326]
Successors: [0x32f]
---
0x66e JUMPDEST
0x66f PUSH1 0x8
0x671 SLOAD
0x672 DUP2
0x673 JUMP
---
0x66e: JUMPDEST 
0x66f: V436 = 0x8
0x671: V437 = S[0x8]
0x673: JUMP 0x32f
---
Entry stack: [V11, 0x32f]
Stack pops: 1
Stack additions: [S0, V437]
Exit stack: [V11, 0x32f, V437]

================================

Block 0x674
[0x674:0x679]
---
Predecessors: [0x351]
Successors: [0x35a]
---
0x674 JUMPDEST
0x675 PUSH1 0x3
0x677 SLOAD
0x678 DUP2
0x679 JUMP
---
0x674: JUMPDEST 
0x675: V438 = 0x3
0x677: V439 = S[0x3]
0x679: JUMP 0x35a
---
Entry stack: [V11, 0x35a]
Stack pops: 1
Stack additions: [S0, V439]
Exit stack: [V11, 0x35a, V439]

================================

Block 0x67a
[0x67a:0x69e]
---
Predecessors: [0x37c]
Successors: [0x385]
---
0x67a JUMPDEST
0x67b PUSH1 0x0
0x67d DUP1
0x67e SWAP1
0x67f SLOAD
0x680 SWAP1
0x681 PUSH2 0x100
0x684 EXP
0x685 SWAP1
0x686 DIV
0x687 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69c AND
0x69d DUP2
0x69e JUMP
---
0x67a: JUMPDEST 
0x67b: V440 = 0x0
0x67f: V441 = S[0x0]
0x681: V442 = 0x100
0x684: V443 = EXP 0x100 0x0
0x686: V444 = DIV V441 0x1
0x687: V445 = 0xffffffffffffffffffffffffffffffffffffffff
0x69c: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x69e: JUMP 0x385
---
Entry stack: [V11, 0x385]
Stack pops: 1
Stack additions: [S0, V446]
Exit stack: [V11, 0x385, V446]

================================

Block 0x69f
[0x69f:0x6a4]
---
Predecessors: [0x3d3]
Successors: [0x3dc]
---
0x69f JUMPDEST
0x6a0 PUSH1 0x5
0x6a2 SLOAD
0x6a3 DUP2
0x6a4 JUMP
---
0x69f: JUMPDEST 
0x6a0: V447 = 0x5
0x6a2: V448 = S[0x5]
0x6a4: JUMP 0x3dc
---
Entry stack: [V11, 0x3dc]
Stack pops: 1
Stack additions: [S0, V448]
Exit stack: [V11, 0x3dc, V448]

================================

Block 0x6a5
[0x6a5:0x6ca]
---
Predecessors: [0x3fe]
Successors: [0x407]
---
0x6a5 JUMPDEST
0x6a6 PUSH1 0x9
0x6a8 PUSH1 0x0
0x6aa SWAP1
0x6ab SLOAD
0x6ac SWAP1
0x6ad PUSH2 0x100
0x6b0 EXP
0x6b1 SWAP1
0x6b2 DIV
0x6b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c8 AND
0x6c9 DUP2
0x6ca JUMP
---
0x6a5: JUMPDEST 
0x6a6: V449 = 0x9
0x6a8: V450 = 0x0
0x6ab: V451 = S[0x9]
0x6ad: V452 = 0x100
0x6b0: V453 = EXP 0x100 0x0
0x6b2: V454 = DIV V451 0x1
0x6b3: V455 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c8: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x6ca: JUMP 0x407
---
Entry stack: [V11, 0x407]
Stack pops: 1
Stack additions: [S0, V456]
Exit stack: [V11, 0x407, V456]

================================

Block 0x6cb
[0x6cb:0x6e2]
---
Predecessors: [0x455]
Successors: [0x48a]
---
0x6cb JUMPDEST
0x6cc PUSH1 0xa
0x6ce PUSH1 0x20
0x6d0 MSTORE
0x6d1 DUP1
0x6d2 PUSH1 0x0
0x6d4 MSTORE
0x6d5 PUSH1 0x40
0x6d7 PUSH1 0x0
0x6d9 SHA3
0x6da PUSH1 0x0
0x6dc SWAP2
0x6dd POP
0x6de SWAP1
0x6df POP
0x6e0 SLOAD
0x6e1 DUP2
0x6e2 JUMP
---
0x6cb: JUMPDEST 
0x6cc: V457 = 0xa
0x6ce: V458 = 0x20
0x6d0: M[0x20] = 0xa
0x6d2: V459 = 0x0
0x6d4: M[0x0] = V288
0x6d5: V460 = 0x40
0x6d7: V461 = 0x0
0x6d9: V462 = SHA3 0x0 0x40
0x6da: V463 = 0x0
0x6e0: V464 = S[V462]
0x6e2: JUMP 0x48a
---
Entry stack: [V11, 0x48a, V288]
Stack pops: 2
Stack additions: [S1, V464]
Exit stack: [V11, 0x48a, V464]

================================

Block 0x6e3
[0x6e3:0x6e8]
---
Predecessors: [0x4ac]
Successors: [0x4b5]
---
0x6e3 JUMPDEST
0x6e4 PUSH1 0x1
0x6e6 SLOAD
0x6e7 DUP2
0x6e8 JUMP
---
0x6e3: JUMPDEST 
0x6e4: V465 = 0x1
0x6e6: V466 = S[0x1]
0x6e8: JUMP 0x4b5
---
Entry stack: [V11, 0x4b5]
Stack pops: 1
Stack additions: [S0, V466]
Exit stack: [V11, 0x4b5, V466]

================================

Block 0x6e9
[0x6e9:0x6ee]
---
Predecessors: [0x4d7]
Successors: [0x4e0]
---
0x6e9 JUMPDEST
0x6ea PUSH1 0x2
0x6ec SLOAD
0x6ed DUP2
0x6ee JUMP
---
0x6e9: JUMPDEST 
0x6ea: V467 = 0x2
0x6ec: V468 = S[0x2]
0x6ee: JUMP 0x4e0
---
Entry stack: [V11, 0x4e0]
Stack pops: 1
Stack additions: [S0, V468]
Exit stack: [V11, 0x4e0, V468]

================================

Block 0x6ef
[0x6ef:0x6f4]
---
Predecessors: [0x502]
Successors: [0x50b]
---
0x6ef JUMPDEST
0x6f0 PUSH1 0x4
0x6f2 SLOAD
0x6f3 DUP2
0x6f4 JUMP
---
0x6ef: JUMPDEST 
0x6f0: V469 = 0x4
0x6f2: V470 = S[0x4]
0x6f4: JUMP 0x50b
---
Entry stack: [V11, 0x50b]
Stack pops: 1
Stack additions: [S0, V470]
Exit stack: [V11, 0x50b, V470]

================================

Block 0x6f5
[0x6f5:0x6fa]
---
Predecessors: [0x52d]
Successors: [0x536]
---
0x6f5 JUMPDEST
0x6f6 PUSH1 0x7
0x6f8 SLOAD
0x6f9 DUP2
0x6fa JUMP
---
0x6f5: JUMPDEST 
0x6f6: V471 = 0x7
0x6f8: V472 = S[0x7]
0x6fa: JUMP 0x536
---
Entry stack: [V11, 0x536]
Stack pops: 1
Stack additions: [S0, V472]
Exit stack: [V11, 0x536, V472]

================================

Block 0x6fb
[0x6fb:0x700]
---
Predecessors: [0x558]
Successors: [0x561]
---
0x6fb JUMPDEST
0x6fc PUSH1 0x6
0x6fe SLOAD
0x6ff DUP2
0x700 JUMP
---
0x6fb: JUMPDEST 
0x6fc: V473 = 0x6
0x6fe: V474 = S[0x6]
0x700: JUMP 0x561
---
Entry stack: [V11, 0x561]
Stack pops: 1
Stack additions: [S0, V474]
Exit stack: [V11, 0x561, V474]

================================

Block 0x701
[0x701:0x70e]
---
Predecessors: [0x583]
Successors: [0x70f, 0xa3a]
---
0x701 JUMPDEST
0x702 PUSH1 0x0
0x704 PUSH1 0x3
0x706 SLOAD
0x707 TIMESTAMP
0x708 LT
0x709 ISZERO
0x70a ISZERO
0x70b PUSH2 0xa3a
0x70e JUMPI
---
0x701: JUMPDEST 
0x702: V475 = 0x0
0x704: V476 = 0x3
0x706: V477 = S[0x3]
0x707: V478 = TIMESTAMP
0x708: V479 = LT V478 V477
0x709: V480 = ISZERO V479
0x70a: V481 = ISZERO V480
0x70b: V482 = 0xa3a
0x70e: JUMPI 0xa3a V481
---
Entry stack: [V11, 0x58c]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x58c, 0x0]

================================

Block 0x70f
[0x70f:0x724]
---
Predecessors: [0x701]
Successors: [0x725, 0x8b2]
---
0x70f PUSH1 0xb
0x711 PUSH1 0x0
0x713 SWAP1
0x714 SLOAD
0x715 SWAP1
0x716 PUSH2 0x100
0x719 EXP
0x71a SWAP1
0x71b DIV
0x71c PUSH1 0xff
0x71e AND
0x71f ISZERO
0x720 ISZERO
0x721 PUSH2 0x8b2
0x724 JUMPI
---
0x70f: V483 = 0xb
0x711: V484 = 0x0
0x714: V485 = S[0xb]
0x716: V486 = 0x100
0x719: V487 = EXP 0x100 0x0
0x71b: V488 = DIV V485 0x1
0x71c: V489 = 0xff
0x71e: V490 = AND 0xff V488
0x71f: V491 = ISZERO V490
0x720: V492 = ISZERO V491
0x721: V493 = 0x8b2
0x724: JUMPI 0x8b2 V492
---
Entry stack: [V11, 0x58c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x58c, 0x0]

================================

Block 0x725
[0x725:0x7b4]
---
Predecessors: [0x70f]
Successors: [0x7b5, 0x8b1]
---
0x725 PUSH1 0xa
0x727 PUSH1 0x0
0x729 CALLER
0x72a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73f AND
0x740 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x755 AND
0x756 DUP2
0x757 MSTORE
0x758 PUSH1 0x20
0x75a ADD
0x75b SWAP1
0x75c DUP2
0x75d MSTORE
0x75e PUSH1 0x20
0x760 ADD
0x761 PUSH1 0x0
0x763 SHA3
0x764 SLOAD
0x765 SWAP1
0x766 POP
0x767 PUSH1 0x0
0x769 PUSH1 0xa
0x76b PUSH1 0x0
0x76d CALLER
0x76e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x783 AND
0x784 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x799 AND
0x79a DUP2
0x79b MSTORE
0x79c PUSH1 0x20
0x79e ADD
0x79f SWAP1
0x7a0 DUP2
0x7a1 MSTORE
0x7a2 PUSH1 0x20
0x7a4 ADD
0x7a5 PUSH1 0x0
0x7a7 SHA3
0x7a8 DUP2
0x7a9 SWAP1
0x7aa SSTORE
0x7ab POP
0x7ac PUSH1 0x0
0x7ae DUP2
0x7af GT
0x7b0 ISZERO
0x7b1 PUSH2 0x8b1
0x7b4 JUMPI
---
0x725: V494 = 0xa
0x727: V495 = 0x0
0x729: V496 = CALLER
0x72a: V497 = 0xffffffffffffffffffffffffffffffffffffffff
0x73f: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x740: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x755: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x757: M[0x0] = V500
0x758: V501 = 0x20
0x75a: V502 = ADD 0x20 0x0
0x75d: M[0x20] = 0xa
0x75e: V503 = 0x20
0x760: V504 = ADD 0x20 0x20
0x761: V505 = 0x0
0x763: V506 = SHA3 0x0 0x40
0x764: V507 = S[V506]
0x767: V508 = 0x0
0x769: V509 = 0xa
0x76b: V510 = 0x0
0x76d: V511 = CALLER
0x76e: V512 = 0xffffffffffffffffffffffffffffffffffffffff
0x783: V513 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x784: V514 = 0xffffffffffffffffffffffffffffffffffffffff
0x799: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V513
0x79b: M[0x0] = V515
0x79c: V516 = 0x20
0x79e: V517 = ADD 0x20 0x0
0x7a1: M[0x20] = 0xa
0x7a2: V518 = 0x20
0x7a4: V519 = ADD 0x20 0x20
0x7a5: V520 = 0x0
0x7a7: V521 = SHA3 0x0 0x40
0x7aa: S[V521] = 0x0
0x7ac: V522 = 0x0
0x7af: V523 = GT V507 0x0
0x7b0: V524 = ISZERO V523
0x7b1: V525 = 0x8b1
0x7b4: JUMPI 0x8b1 V524
---
Entry stack: [V11, 0x58c, 0x0]
Stack pops: 1
Stack additions: [V507]
Exit stack: [V11, 0x58c, V507]

================================

Block 0x7b5
[0x7b5:0x7ee]
---
Predecessors: [0x725]
Successors: [0x7ef, 0x86b]
---
0x7b5 CALLER
0x7b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cb AND
0x7cc PUSH2 0x8fc
0x7cf DUP3
0x7d0 SWAP1
0x7d1 DUP2
0x7d2 ISZERO
0x7d3 MUL
0x7d4 SWAP1
0x7d5 PUSH1 0x40
0x7d7 MLOAD
0x7d8 PUSH1 0x0
0x7da PUSH1 0x40
0x7dc MLOAD
0x7dd DUP1
0x7de DUP4
0x7df SUB
0x7e0 DUP2
0x7e1 DUP6
0x7e2 DUP9
0x7e3 DUP9
0x7e4 CALL
0x7e5 SWAP4
0x7e6 POP
0x7e7 POP
0x7e8 POP
0x7e9 POP
0x7ea ISZERO
0x7eb PUSH2 0x86b
0x7ee JUMPI
---
0x7b5: V526 = CALLER
0x7b6: V527 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cb: V528 = AND 0xffffffffffffffffffffffffffffffffffffffff V526
0x7cc: V529 = 0x8fc
0x7d2: V530 = ISZERO V507
0x7d3: V531 = MUL V530 0x8fc
0x7d5: V532 = 0x40
0x7d7: V533 = M[0x40]
0x7d8: V534 = 0x0
0x7da: V535 = 0x40
0x7dc: V536 = M[0x40]
0x7df: V537 = SUB V533 V536
0x7e4: V538 = CALL V531 V528 V507 V536 V537 V536 0x0
0x7ea: V539 = ISZERO V538
0x7eb: V540 = 0x86b
0x7ee: JUMPI 0x86b V539
---
Entry stack: [V11, 0x58c, V507]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x58c, V507]

================================

Block 0x7ef
[0x7ef:0x86a]
---
Predecessors: [0x7b5]
Successors: [0x8b0]
---
0x7ef PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x810 CALLER
0x811 DUP3
0x812 PUSH1 0x0
0x814 PUSH1 0x40
0x816 MLOAD
0x817 DUP1
0x818 DUP5
0x819 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82e AND
0x82f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x844 AND
0x845 DUP2
0x846 MSTORE
0x847 PUSH1 0x20
0x849 ADD
0x84a DUP4
0x84b DUP2
0x84c MSTORE
0x84d PUSH1 0x20
0x84f ADD
0x850 DUP3
0x851 ISZERO
0x852 ISZERO
0x853 ISZERO
0x854 ISZERO
0x855 DUP2
0x856 MSTORE
0x857 PUSH1 0x20
0x859 ADD
0x85a SWAP4
0x85b POP
0x85c POP
0x85d POP
0x85e POP
0x85f PUSH1 0x40
0x861 MLOAD
0x862 DUP1
0x863 SWAP2
0x864 SUB
0x865 SWAP1
0x866 LOG1
0x867 PUSH2 0x8b0
0x86a JUMP
---
0x7ef: V541 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x810: V542 = CALLER
0x812: V543 = 0x0
0x814: V544 = 0x40
0x816: V545 = M[0x40]
0x819: V546 = 0xffffffffffffffffffffffffffffffffffffffff
0x82e: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V542
0x82f: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x844: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x846: M[V545] = V549
0x847: V550 = 0x20
0x849: V551 = ADD 0x20 V545
0x84c: M[V551] = V507
0x84d: V552 = 0x20
0x84f: V553 = ADD 0x20 V551
0x851: V554 = ISZERO 0x0
0x852: V555 = ISZERO 0x1
0x853: V556 = ISZERO 0x0
0x854: V557 = ISZERO 0x1
0x856: M[V553] = 0x0
0x857: V558 = 0x20
0x859: V559 = ADD 0x20 V553
0x85f: V560 = 0x40
0x861: V561 = M[0x40]
0x864: V562 = SUB V559 V561
0x866: LOG V561 V562 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x867: V563 = 0x8b0
0x86a: JUMP 0x8b0
---
Entry stack: [V11, 0x58c, V507]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x58c, V507]

================================

Block 0x86b
[0x86b:0x8af]
---
Predecessors: [0x7b5]
Successors: [0x8b0]
---
0x86b JUMPDEST
0x86c DUP1
0x86d PUSH1 0xa
0x86f PUSH1 0x0
0x871 CALLER
0x872 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x887 AND
0x888 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89d AND
0x89e DUP2
0x89f MSTORE
0x8a0 PUSH1 0x20
0x8a2 ADD
0x8a3 SWAP1
0x8a4 DUP2
0x8a5 MSTORE
0x8a6 PUSH1 0x20
0x8a8 ADD
0x8a9 PUSH1 0x0
0x8ab SHA3
0x8ac DUP2
0x8ad SWAP1
0x8ae SSTORE
0x8af POP
---
0x86b: JUMPDEST 
0x86d: V564 = 0xa
0x86f: V565 = 0x0
0x871: V566 = CALLER
0x872: V567 = 0xffffffffffffffffffffffffffffffffffffffff
0x887: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V566
0x888: V569 = 0xffffffffffffffffffffffffffffffffffffffff
0x89d: V570 = AND 0xffffffffffffffffffffffffffffffffffffffff V568
0x89f: M[0x0] = V570
0x8a0: V571 = 0x20
0x8a2: V572 = ADD 0x20 0x0
0x8a5: M[0x20] = 0xa
0x8a6: V573 = 0x20
0x8a8: V574 = ADD 0x20 0x20
0x8a9: V575 = 0x0
0x8ab: V576 = SHA3 0x0 0x40
0x8ae: S[V576] = V507
---
Entry stack: [V11, 0x58c, V507]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x58c, V507]

================================

Block 0x8b0
[0x8b0:0x8b0]
---
Predecessors: [0x7ef, 0x86b]
Successors: [0x8b1]
---
0x8b0 JUMPDEST
---
0x8b0: JUMPDEST 
---
Entry stack: [V11, 0x58c, V507]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x58c, V507]

================================

Block 0x8b1
[0x8b1:0x8b1]
---
Predecessors: [0x725, 0x8b0]
Successors: [0x8b2]
---
0x8b1 JUMPDEST
---
0x8b1: JUMPDEST 
---
Entry stack: [V11, 0x58c, V507]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x58c, V507]

================================

Block 0x8b2
[0x8b2:0x8c8]
---
Predecessors: [0x70f, 0x8b1]
Successors: [0x8c9, 0x91a]
---
0x8b2 JUMPDEST
0x8b3 PUSH1 0xb
0x8b5 PUSH1 0x0
0x8b7 SWAP1
0x8b8 SLOAD
0x8b9 SWAP1
0x8ba PUSH2 0x100
0x8bd EXP
0x8be SWAP1
0x8bf DIV
0x8c0 PUSH1 0xff
0x8c2 AND
0x8c3 DUP1
0x8c4 ISZERO
0x8c5 PUSH2 0x91a
0x8c8 JUMPI
---
0x8b2: JUMPDEST 
0x8b3: V577 = 0xb
0x8b5: V578 = 0x0
0x8b8: V579 = S[0xb]
0x8ba: V580 = 0x100
0x8bd: V581 = EXP 0x100 0x0
0x8bf: V582 = DIV V579 0x1
0x8c0: V583 = 0xff
0x8c2: V584 = AND 0xff V582
0x8c4: V585 = ISZERO V584
0x8c5: V586 = 0x91a
0x8c8: JUMPI 0x91a V585
---
Entry stack: [V11, 0x58c, S0]
Stack pops: 0
Stack additions: [V584]
Exit stack: [V11, 0x58c, S0, V584]

================================

Block 0x8c9
[0x8c9:0x919]
---
Predecessors: [0x8b2]
Successors: [0x91a]
---
0x8c9 POP
0x8ca CALLER
0x8cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e0 AND
0x8e1 PUSH1 0x0
0x8e3 DUP1
0x8e4 SWAP1
0x8e5 SLOAD
0x8e6 SWAP1
0x8e7 PUSH2 0x100
0x8ea EXP
0x8eb SWAP1
0x8ec DIV
0x8ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x902 AND
0x903 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x918 AND
0x919 EQ
---
0x8ca: V587 = CALLER
0x8cb: V588 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e0: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V587
0x8e1: V590 = 0x0
0x8e5: V591 = S[0x0]
0x8e7: V592 = 0x100
0x8ea: V593 = EXP 0x100 0x0
0x8ec: V594 = DIV V591 0x1
0x8ed: V595 = 0xffffffffffffffffffffffffffffffffffffffff
0x902: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V594
0x903: V597 = 0xffffffffffffffffffffffffffffffffffffffff
0x918: V598 = AND 0xffffffffffffffffffffffffffffffffffffffff V596
0x919: V599 = EQ V598 V589
---
Entry stack: [V11, 0x58c, S1, V584]
Stack pops: 1
Stack additions: [V599]
Exit stack: [V11, 0x58c, S1, V599]

================================

Block 0x91a
[0x91a:0x91f]
---
Predecessors: [0x8b2, 0x8c9]
Successors: [0x920, 0xa39]
---
0x91a JUMPDEST
0x91b ISZERO
0x91c PUSH2 0xa39
0x91f JUMPI
---
0x91a: JUMPDEST 
0x91b: V600 = ISZERO S0
0x91c: V601 = 0xa39
0x91f: JUMPI 0xa39 V600
---
Entry stack: [V11, 0x58c, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x58c, S1]

================================

Block 0x920
[0x920:0x97c]
---
Predecessors: [0x91a]
Successors: [0x97d, 0xa1c]
---
0x920 PUSH1 0x0
0x922 DUP1
0x923 SWAP1
0x924 SLOAD
0x925 SWAP1
0x926 PUSH2 0x100
0x929 EXP
0x92a SWAP1
0x92b DIV
0x92c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x941 AND
0x942 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x957 AND
0x958 PUSH2 0x8fc
0x95b PUSH1 0x2
0x95d SLOAD
0x95e SWAP1
0x95f DUP2
0x960 ISZERO
0x961 MUL
0x962 SWAP1
0x963 PUSH1 0x40
0x965 MLOAD
0x966 PUSH1 0x0
0x968 PUSH1 0x40
0x96a MLOAD
0x96b DUP1
0x96c DUP4
0x96d SUB
0x96e DUP2
0x96f DUP6
0x970 DUP9
0x971 DUP9
0x972 CALL
0x973 SWAP4
0x974 POP
0x975 POP
0x976 POP
0x977 POP
0x978 ISZERO
0x979 PUSH2 0xa1c
0x97c JUMPI
---
0x920: V602 = 0x0
0x924: V603 = S[0x0]
0x926: V604 = 0x100
0x929: V605 = EXP 0x100 0x0
0x92b: V606 = DIV V603 0x1
0x92c: V607 = 0xffffffffffffffffffffffffffffffffffffffff
0x941: V608 = AND 0xffffffffffffffffffffffffffffffffffffffff V606
0x942: V609 = 0xffffffffffffffffffffffffffffffffffffffff
0x957: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V608
0x958: V611 = 0x8fc
0x95b: V612 = 0x2
0x95d: V613 = S[0x2]
0x960: V614 = ISZERO V613
0x961: V615 = MUL V614 0x8fc
0x963: V616 = 0x40
0x965: V617 = M[0x40]
0x966: V618 = 0x0
0x968: V619 = 0x40
0x96a: V620 = M[0x40]
0x96d: V621 = SUB V617 V620
0x972: V622 = CALL V615 V610 V613 V620 V621 V620 0x0
0x978: V623 = ISZERO V622
0x979: V624 = 0xa1c
0x97c: JUMPI 0xa1c V623
---
Entry stack: [V11, 0x58c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x58c, S0]

================================

Block 0x97d
[0x97d:0xa1b]
---
Predecessors: [0x920]
Successors: [0xa38]
---
0x97d PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x99e PUSH1 0x0
0x9a0 DUP1
0x9a1 SWAP1
0x9a2 SLOAD
0x9a3 SWAP1
0x9a4 PUSH2 0x100
0x9a7 EXP
0x9a8 SWAP1
0x9a9 DIV
0x9aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9bf AND
0x9c0 PUSH1 0x2
0x9c2 SLOAD
0x9c3 PUSH1 0x0
0x9c5 PUSH1 0x40
0x9c7 MLOAD
0x9c8 DUP1
0x9c9 DUP5
0x9ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9df AND
0x9e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f5 AND
0x9f6 DUP2
0x9f7 MSTORE
0x9f8 PUSH1 0x20
0x9fa ADD
0x9fb DUP4
0x9fc DUP2
0x9fd MSTORE
0x9fe PUSH1 0x20
0xa00 ADD
0xa01 DUP3
0xa02 ISZERO
0xa03 ISZERO
0xa04 ISZERO
0xa05 ISZERO
0xa06 DUP2
0xa07 MSTORE
0xa08 PUSH1 0x20
0xa0a ADD
0xa0b SWAP4
0xa0c POP
0xa0d POP
0xa0e POP
0xa0f POP
0xa10 PUSH1 0x40
0xa12 MLOAD
0xa13 DUP1
0xa14 SWAP2
0xa15 SUB
0xa16 SWAP1
0xa17 LOG1
0xa18 PUSH2 0xa38
0xa1b JUMP
---
0x97d: V625 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x99e: V626 = 0x0
0x9a2: V627 = S[0x0]
0x9a4: V628 = 0x100
0x9a7: V629 = EXP 0x100 0x0
0x9a9: V630 = DIV V627 0x1
0x9aa: V631 = 0xffffffffffffffffffffffffffffffffffffffff
0x9bf: V632 = AND 0xffffffffffffffffffffffffffffffffffffffff V630
0x9c0: V633 = 0x2
0x9c2: V634 = S[0x2]
0x9c3: V635 = 0x0
0x9c5: V636 = 0x40
0x9c7: V637 = M[0x40]
0x9ca: V638 = 0xffffffffffffffffffffffffffffffffffffffff
0x9df: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0x9e0: V640 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f5: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff V639
0x9f7: M[V637] = V641
0x9f8: V642 = 0x20
0x9fa: V643 = ADD 0x20 V637
0x9fd: M[V643] = V634
0x9fe: V644 = 0x20
0xa00: V645 = ADD 0x20 V643
0xa02: V646 = ISZERO 0x0
0xa03: V647 = ISZERO 0x1
0xa04: V648 = ISZERO 0x0
0xa05: V649 = ISZERO 0x1
0xa07: M[V645] = 0x0
0xa08: V650 = 0x20
0xa0a: V651 = ADD 0x20 V645
0xa10: V652 = 0x40
0xa12: V653 = M[0x40]
0xa15: V654 = SUB V651 V653
0xa17: LOG V653 V654 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0xa18: V655 = 0xa38
0xa1b: JUMP 0xa38
---
Entry stack: [V11, 0x58c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x58c, S0]

================================

Block 0xa1c
[0xa1c:0xa37]
---
Predecessors: [0x920]
Successors: [0xa38]
---
0xa1c JUMPDEST
0xa1d PUSH1 0x0
0xa1f PUSH1 0xb
0xa21 PUSH1 0x0
0xa23 PUSH2 0x100
0xa26 EXP
0xa27 DUP2
0xa28 SLOAD
0xa29 DUP2
0xa2a PUSH1 0xff
0xa2c MUL
0xa2d NOT
0xa2e AND
0xa2f SWAP1
0xa30 DUP4
0xa31 ISZERO
0xa32 ISZERO
0xa33 MUL
0xa34 OR
0xa35 SWAP1
0xa36 SSTORE
0xa37 POP
---
0xa1c: JUMPDEST 
0xa1d: V656 = 0x0
0xa1f: V657 = 0xb
0xa21: V658 = 0x0
0xa23: V659 = 0x100
0xa26: V660 = EXP 0x100 0x0
0xa28: V661 = S[0xb]
0xa2a: V662 = 0xff
0xa2c: V663 = MUL 0xff 0x1
0xa2d: V664 = NOT 0xff
0xa2e: V665 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V661
0xa31: V666 = ISZERO 0x0
0xa32: V667 = ISZERO 0x1
0xa33: V668 = MUL 0x0 0x1
0xa34: V669 = OR 0x0 V665
0xa36: S[0xb] = V669
---
Entry stack: [V11, 0x58c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x58c, S0]

================================

Block 0xa38
[0xa38:0xa38]
---
Predecessors: [0x97d, 0xa1c]
Successors: [0xa39]
---
0xa38 JUMPDEST
---
0xa38: JUMPDEST 
---
Entry stack: [V11, 0x58c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x58c, S0]

================================

Block 0xa39
[0xa39:0xa39]
---
Predecessors: [0x91a, 0xa38]
Successors: [0xa3a]
---
0xa39 JUMPDEST
---
0xa39: JUMPDEST 
---
Entry stack: [V11, 0x58c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x58c, S0]

================================

Block 0xa3a
[0xa3a:0xa3c]
---
Predecessors: [0x701, 0xa39]
Successors: [0x58c]
---
0xa3a JUMPDEST
0xa3b POP
0xa3c JUMP
---
0xa3a: JUMPDEST 
0xa3c: JUMP 0x58c
---
Entry stack: [V11, 0x58c, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xa3d
[0xa3d:0xa68]
---
Predecessors: []
Successors: []
---
0xa3d STOP
0xa3e LOG1
0xa3f PUSH6 0x627a7a723058
0xa46 SHA3
0xa47 DUP1
0xa48 SWAP5
0xa49 MISSING 0xe2
0xa4a CALLDATACOPY
0xa4b MISSING 0xf6
0xa4c DUP12
0xa4d ADDMOD
0xa4e MISSING 0xa5
0xa4f MISSING 0xb7
0xa50 MISSING 0xc9
0xa51 MISSING 0xd1
0xa52 CREATE
0xa53 MSTORE
0xa54 MISSING 0xa9
0xa55 MISSING 0x4a
0xa56 ADDMOD
0xa57 MISSING 0xe1
0xa58 SWAP14
0xa59 CALLVALUE
0xa5a MISSING 0x4d
0xa5b MISSING 0xd7
0xa5c COINBASE
0xa5d SWAP8
0xa5e MISSING 0xf
0xa5f MISSING 0xb9
0xa60 DUP2
0xa61 MISSING 0xaf
0xa62 SLT
0xa63 MISSING 0xd1
0xa64 SWAP12
0xa65 PUSH2 0x7c00
0xa68 MISSING 0x29
---
0xa3d: STOP 
0xa3e: LOG S0 S1 S2
0xa3f: V670 = 0x627a7a723058
0xa46: V671 = SHA3 0x627a7a723058 S3
0xa49: MISSING 0xe2
0xa4a: CALLDATACOPY S0 S1 S2
0xa4b: MISSING 0xf6
0xa4d: V672 = ADDMOD S11 S0 S1
0xa4e: MISSING 0xa5
0xa4f: MISSING 0xb7
0xa50: MISSING 0xc9
0xa51: MISSING 0xd1
0xa52: V673 = CREATE S0 S1 S2
0xa53: M[V673] = S3
0xa54: MISSING 0xa9
0xa55: MISSING 0x4a
0xa56: V674 = ADDMOD S0 S1 S2
0xa57: MISSING 0xe1
0xa59: V675 = CALLVALUE
0xa5a: MISSING 0x4d
0xa5b: MISSING 0xd7
0xa5c: V676 = COINBASE
0xa5e: MISSING 0xf
0xa5f: MISSING 0xb9
0xa61: MISSING 0xaf
0xa62: V677 = SLT S0 S1
0xa63: MISSING 0xd1
0xa65: V678 = 0x7c00
0xa68: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S7, V671, S4, S5, S6, V671, V672, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V674, V675, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, S7, S0, S1, S2, S3, S4, S5, S6, V676, S1, S0, S1, V677, 0x7c00, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x303
Exit block: 0x318
Body: 0x303, 0x30b, 0x30f, 0x318, 0x58e, 0x59a, 0x5a7, 0x650, 0x66c

Function 1:
Public function signature: 0xb97bc86
Entry block: 0x31a
Exit block: 0x32f
Body: 0x31a, 0x322, 0x326, 0x32f, 0x66e

Function 2:
Public function signature: 0x29dcb0cf
Entry block: 0x345
Exit block: 0x35a
Body: 0x345, 0x34d, 0x351, 0x35a, 0x674

Function 3:
Public function signature: 0x38af3eed
Entry block: 0x370
Exit block: 0x385
Body: 0x370, 0x378, 0x37c, 0x385, 0x67a

Function 4:
Public function signature: 0x45f988a4
Entry block: 0x3c7
Exit block: 0x3dc
Body: 0x3c7, 0x3cf, 0x3d3, 0x3dc, 0x69f

Function 5:
Public function signature: 0x6e66f6e9
Entry block: 0x3f2
Exit block: 0x407
Body: 0x3f2, 0x3fa, 0x3fe, 0x407, 0x6a5

Function 6:
Public function signature: 0x70a08231
Entry block: 0x449
Exit block: 0x48a
Body: 0x449, 0x451, 0x455, 0x48a, 0x6cb

Function 7:
Public function signature: 0x7a3a0e84
Entry block: 0x4a0
Exit block: 0x4b5
Body: 0x4a0, 0x4a8, 0x4ac, 0x4b5, 0x6e3

Function 8:
Public function signature: 0x7b3e5e7b
Entry block: 0x4cb
Exit block: 0x4e0
Body: 0x4cb, 0x4d3, 0x4d7, 0x4e0, 0x6e9

Function 9:
Public function signature: 0xa9ea1896
Entry block: 0x4f6
Exit block: 0x50b
Body: 0x4f6, 0x4fe, 0x502, 0x50b, 0x6ef

Function 10:
Public function signature: 0xaba61514
Entry block: 0x521
Exit block: 0x536
Body: 0x521, 0x529, 0x52d, 0x536, 0x6f5

Function 11:
Public function signature: 0xfbd7c5f1
Entry block: 0x54c
Exit block: 0x561
Body: 0x54c, 0x554, 0x558, 0x561, 0x6fb

Function 12:
Public function signature: 0xfd6b7ef8
Entry block: 0x577
Exit block: 0x58c
Body: 0x577, 0x57f, 0x583, 0x58c, 0x701, 0x70f, 0x725, 0x7b5, 0x7ef, 0x86b, 0x8b0, 0x8b1, 0x8b2, 0x8c9, 0x91a, 0x920, 0x97d, 0xa1c, 0xa38, 0xa39, 0xa3a

Function 13:
Public fallback function
Entry block: 0xc5
Exit block: 0x27a
Body: 0xc5, 0xe0, 0xe4, 0x15a, 0x163, 0x174, 0x17d, 0x18e, 0x193, 0x194, 0x195, 0x1e7, 0x1e8, 0x26b, 0x26f, 0x27a, 0x283

