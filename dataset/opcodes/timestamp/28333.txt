Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x72]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x72
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x72
0xa: JUMPI 0x72 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x7b]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x41c0e1b5
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x7b
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x41c0e1b5
0x20: V14 = EQ V12 0x41c0e1b5
0x21: V15 = 0x7b
0x24: JUMPI 0x7b V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x90]
---
0x25 DUP1
0x26 PUSH4 0x4665096d
0x2b EQ
0x2c PUSH2 0x90
0x2f JUMPI
---
0x26: V16 = 0x4665096d
0x2b: V17 = EQ 0x4665096d V12
0x2c: V18 = 0x90
0x2f: JUMPI 0x90 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xb5]
---
0x30 DUP1
0x31 PUSH4 0x71a18bfb
0x36 EQ
0x37 PUSH2 0xb5
0x3a JUMPI
---
0x31: V19 = 0x71a18bfb
0x36: V20 = EQ 0x71a18bfb V12
0x37: V21 = 0xb5
0x3a: JUMPI 0xb5 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xe8]
---
0x3b DUP1
0x3c PUSH4 0x842fc1a3
0x41 EQ
0x42 PUSH2 0xe8
0x45 JUMPI
---
0x3c: V22 = 0x842fc1a3
0x41: V23 = EQ 0x842fc1a3 V12
0x42: V24 = 0xe8
0x45: JUMPI 0xe8 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x109]
---
0x46 DUP1
0x47 PUSH4 0x8da5cb5b
0x4c EQ
0x4d PUSH2 0x109
0x50 JUMPI
---
0x47: V25 = 0x8da5cb5b
0x4c: V26 = EQ 0x8da5cb5b V12
0x4d: V27 = 0x109
0x50: JUMPI 0x109 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x138]
---
0x51 DUP1
0x52 PUSH4 0xb60d4288
0x57 EQ
0x58 PUSH2 0x138
0x5b JUMPI
---
0x52: V28 = 0xb60d4288
0x57: V29 = EQ 0xb60d4288 V12
0x58: V30 = 0x138
0x5b: JUMPI 0x138 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x154]
---
0x5c DUP1
0x5d PUSH4 0xdd467064
0x62 EQ
0x63 PUSH2 0x154
0x66 JUMPI
---
0x5d: V31 = 0xdd467064
0x62: V32 = EQ 0xdd467064 V12
0x63: V33 = 0x154
0x66: JUMPI 0x154 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x17e]
---
0x67 DUP1
0x68 PUSH4 0xf2fde38b
0x6d EQ
0x6e PUSH2 0x17e
0x71 JUMPI
---
0x68: V34 = 0xf2fde38b
0x6d: V35 = EQ 0xf2fde38b V12
0x6e: V36 = 0x17e
0x71: JUMPI 0x17e V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x75]
---
Predecessors: [0x0, 0x67]
Successors: [0x76]
---
0x72 JUMPDEST
0x73 PUSH2 0x79
---
0x72: JUMPDEST 
0x73: V37 = 0x79
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79]
Exit stack: [V12, 0x79]

================================

Block 0x76
[0x76:0x76]
---
Predecessors: [0x72, 0x1ba]
Successors: [0x77]
---
0x76 JUMPDEST
---
0x76: JUMPDEST 
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x76]
Successors: [0x79]
---
0x77 JUMPDEST
0x78 JUMP
---
0x77: JUMPDEST 
0x78: JUMP 0x79
---
Entry stack: [V12, 0x79]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x79
[0x79:0x7a]
---
Predecessors: [0x77, 0x411, 0x4ca]
Successors: []
---
0x79 JUMPDEST
0x7a STOP
---
0x79: JUMPDEST 
0x7a: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b
[0x7b:0x81]
---
Predecessors: [0xb]
Successors: [0x82, 0x86]
---
0x7b JUMPDEST
0x7c CALLVALUE
0x7d ISZERO
0x7e PUSH2 0x86
0x81 JUMPI
---
0x7b: JUMPDEST 
0x7c: V38 = CALLVALUE
0x7d: V39 = ISZERO V38
0x7e: V40 = 0x86
0x81: JUMPI 0x86 V39
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x82
[0x82:0x85]
---
Predecessors: [0x7b]
Successors: []
---
0x82 PUSH1 0x0
0x84 DUP1
0x85 REVERT
---
0x82: V41 = 0x0
0x85: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x86
[0x86:0x8d]
---
Predecessors: [0x7b]
Successors: [0x19f]
---
0x86 JUMPDEST
0x87 PUSH2 0x79
0x8a PUSH2 0x19f
0x8d JUMP
---
0x86: JUMPDEST 
0x87: V42 = 0x79
0x8a: V43 = 0x19f
0x8d: JUMP 0x19f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79]
Exit stack: [V12, 0x79]

================================

Block 0x8e
[0x8e:0x8f]
---
Predecessors: []
Successors: []
---
0x8e JUMPDEST
0x8f STOP
---
0x8e: JUMPDEST 
0x8f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x90
[0x90:0x96]
---
Predecessors: [0x25]
Successors: [0x97, 0x9b]
---
0x90 JUMPDEST
0x91 CALLVALUE
0x92 ISZERO
0x93 PUSH2 0x9b
0x96 JUMPI
---
0x90: JUMPDEST 
0x91: V44 = CALLVALUE
0x92: V45 = ISZERO V44
0x93: V46 = 0x9b
0x96: JUMPI 0x9b V45
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x97
[0x97:0x9a]
---
Predecessors: [0x90]
Successors: []
---
0x97 PUSH1 0x0
0x99 DUP1
0x9a REVERT
---
0x97: V47 = 0x0
0x9a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9b
[0x9b:0xa2]
---
Predecessors: [0x90]
Successors: [0x1d6]
---
0x9b JUMPDEST
0x9c PUSH2 0xa3
0x9f PUSH2 0x1d6
0xa2 JUMP
---
0x9b: JUMPDEST 
0x9c: V48 = 0xa3
0x9f: V49 = 0x1d6
0xa2: JUMP 0x1d6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa3]
Exit stack: [V12, 0xa3]

================================

Block 0xa3
[0xa3:0xb4]
---
Predecessors: [0x1d6]
Successors: []
---
0xa3 JUMPDEST
0xa4 PUSH1 0x40
0xa6 MLOAD
0xa7 SWAP1
0xa8 DUP2
0xa9 MSTORE
0xaa PUSH1 0x20
0xac ADD
0xad PUSH1 0x40
0xaf MLOAD
0xb0 DUP1
0xb1 SWAP2
0xb2 SUB
0xb3 SWAP1
0xb4 RETURN
---
0xa3: JUMPDEST 
0xa4: V50 = 0x40
0xa6: V51 = M[0x40]
0xa9: M[V51] = V183
0xaa: V52 = 0x20
0xac: V53 = ADD 0x20 V51
0xad: V54 = 0x40
0xaf: V55 = M[0x40]
0xb2: V56 = SUB V53 V55
0xb4: RETURN V55 V56
---
Entry stack: [V12, 0xa3, V183]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa3]

================================

Block 0xb5
[0xb5:0xbb]
---
Predecessors: [0x30]
Successors: [0xbc, 0xc0]
---
0xb5 JUMPDEST
0xb6 CALLVALUE
0xb7 ISZERO
0xb8 PUSH2 0xc0
0xbb JUMPI
---
0xb5: JUMPDEST 
0xb6: V57 = CALLVALUE
0xb7: V58 = ISZERO V57
0xb8: V59 = 0xc0
0xbb: JUMPI 0xc0 V58
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbc
[0xbc:0xbf]
---
Predecessors: [0xb5]
Successors: []
---
0xbc PUSH1 0x0
0xbe DUP1
0xbf REVERT
---
0xbc: V60 = 0x0
0xbf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc0
[0xc0:0xd3]
---
Predecessors: [0xb5]
Successors: [0x1dc]
---
0xc0 JUMPDEST
0xc1 PUSH2 0xd4
0xc4 PUSH1 0x1
0xc6 PUSH1 0xa0
0xc8 PUSH1 0x2
0xca EXP
0xcb SUB
0xcc PUSH1 0x4
0xce CALLDATALOAD
0xcf AND
0xd0 PUSH2 0x1dc
0xd3 JUMP
---
0xc0: JUMPDEST 
0xc1: V61 = 0xd4
0xc4: V62 = 0x1
0xc6: V63 = 0xa0
0xc8: V64 = 0x2
0xca: V65 = EXP 0x2 0xa0
0xcb: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc: V67 = 0x4
0xce: V68 = CALLDATALOAD 0x4
0xcf: V69 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0xd0: V70 = 0x1dc
0xd3: JUMP 0x1dc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4, V69]
Exit stack: [V12, 0xd4, V69]

================================

Block 0xd4
[0xd4:0xe7]
---
Predecessors: [0x2f3, 0x428, 0x470]
Successors: []
---
0xd4 JUMPDEST
0xd5 PUSH1 0x40
0xd7 MLOAD
0xd8 SWAP1
0xd9 ISZERO
0xda ISZERO
0xdb DUP2
0xdc MSTORE
0xdd PUSH1 0x20
0xdf ADD
0xe0 PUSH1 0x40
0xe2 MLOAD
0xe3 DUP1
0xe4 SWAP2
0xe5 SUB
0xe6 SWAP1
0xe7 RETURN
---
0xd4: JUMPDEST 
0xd5: V71 = 0x40
0xd7: V72 = M[0x40]
0xd9: V73 = ISZERO {0x0, 0x1}
0xda: V74 = ISZERO V73
0xdc: M[V72] = V74
0xdd: V75 = 0x20
0xdf: V76 = ADD 0x20 V72
0xe0: V77 = 0x40
0xe2: V78 = M[0x40]
0xe5: V79 = SUB V76 V78
0xe7: RETURN V78 V79
---
Entry stack: [V12, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xe8
[0xe8:0xee]
---
Predecessors: [0x3b]
Successors: [0xef, 0xf3]
---
0xe8 JUMPDEST
0xe9 CALLVALUE
0xea ISZERO
0xeb PUSH2 0xf3
0xee JUMPI
---
0xe8: JUMPDEST 
0xe9: V80 = CALLVALUE
0xea: V81 = ISZERO V80
0xeb: V82 = 0xf3
0xee: JUMPI 0xf3 V81
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xef
[0xef:0xf2]
---
Predecessors: [0xe8]
Successors: []
---
0xef PUSH1 0x0
0xf1 DUP1
0xf2 REVERT
---
0xef: V83 = 0x0
0xf2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf3
[0xf3:0x106]
---
Predecessors: [0xe8]
Successors: [0x2f8]
---
0xf3 JUMPDEST
0xf4 PUSH2 0x79
0xf7 PUSH1 0x1
0xf9 PUSH1 0xa0
0xfb PUSH1 0x2
0xfd EXP
0xfe SUB
0xff PUSH1 0x4
0x101 CALLDATALOAD
0x102 AND
0x103 PUSH2 0x2f8
0x106 JUMP
---
0xf3: JUMPDEST 
0xf4: V84 = 0x79
0xf7: V85 = 0x1
0xf9: V86 = 0xa0
0xfb: V87 = 0x2
0xfd: V88 = EXP 0x2 0xa0
0xfe: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0xff: V90 = 0x4
0x101: V91 = CALLDATALOAD 0x4
0x102: V92 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0x103: V93 = 0x2f8
0x106: JUMP 0x2f8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79, V92]
Exit stack: [V12, 0x79, V92]

================================

Block 0x107
[0x107:0x108]
---
Predecessors: []
Successors: []
---
0x107 JUMPDEST
0x108 STOP
---
0x107: JUMPDEST 
0x108: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x109
[0x109:0x10f]
---
Predecessors: [0x46]
Successors: [0x110, 0x114]
---
0x109 JUMPDEST
0x10a CALLVALUE
0x10b ISZERO
0x10c PUSH2 0x114
0x10f JUMPI
---
0x109: JUMPDEST 
0x10a: V94 = CALLVALUE
0x10b: V95 = ISZERO V94
0x10c: V96 = 0x114
0x10f: JUMPI 0x114 V95
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x110
[0x110:0x113]
---
Predecessors: [0x109]
Successors: []
---
0x110 PUSH1 0x0
0x112 DUP1
0x113 REVERT
---
0x110: V97 = 0x0
0x113: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x114
[0x114:0x11b]
---
Predecessors: [0x109]
Successors: [0x416]
---
0x114 JUMPDEST
0x115 PUSH2 0x11c
0x118 PUSH2 0x416
0x11b JUMP
---
0x114: JUMPDEST 
0x115: V98 = 0x11c
0x118: V99 = 0x416
0x11b: JUMP 0x416
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11c]
Exit stack: [V12, 0x11c]

================================

Block 0x11c
[0x11c:0x137]
---
Predecessors: [0x416]
Successors: []
---
0x11c JUMPDEST
0x11d PUSH1 0x40
0x11f MLOAD
0x120 PUSH1 0x1
0x122 PUSH1 0xa0
0x124 PUSH1 0x2
0x126 EXP
0x127 SUB
0x128 SWAP1
0x129 SWAP2
0x12a AND
0x12b DUP2
0x12c MSTORE
0x12d PUSH1 0x20
0x12f ADD
0x130 PUSH1 0x40
0x132 MLOAD
0x133 DUP1
0x134 SWAP2
0x135 SUB
0x136 SWAP1
0x137 RETURN
---
0x11c: JUMPDEST 
0x11d: V100 = 0x40
0x11f: V101 = M[0x40]
0x120: V102 = 0x1
0x122: V103 = 0xa0
0x124: V104 = 0x2
0x126: V105 = EXP 0x2 0xa0
0x127: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12a: V107 = AND V435 0xffffffffffffffffffffffffffffffffffffffff
0x12c: M[V101] = V107
0x12d: V108 = 0x20
0x12f: V109 = ADD 0x20 V101
0x130: V110 = 0x40
0x132: V111 = M[0x40]
0x135: V112 = SUB V109 V111
0x137: RETURN V111 V112
---
Entry stack: [V12, 0x11c, V435]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x11c]

================================

Block 0x138
[0x138:0x13f]
---
Predecessors: [0x51]
Successors: [0x425]
---
0x138 JUMPDEST
0x139 PUSH2 0xd4
0x13c PUSH2 0x425
0x13f JUMP
---
0x138: JUMPDEST 
0x139: V113 = 0xd4
0x13c: V114 = 0x425
0x13f: JUMP 0x425
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0x140
[0x140:0x153]
---
Predecessors: []
Successors: []
---
0x140 JUMPDEST
0x141 PUSH1 0x40
0x143 MLOAD
0x144 SWAP1
0x145 ISZERO
0x146 ISZERO
0x147 DUP2
0x148 MSTORE
0x149 PUSH1 0x20
0x14b ADD
0x14c PUSH1 0x40
0x14e MLOAD
0x14f DUP1
0x150 SWAP2
0x151 SUB
0x152 SWAP1
0x153 RETURN
---
0x140: JUMPDEST 
0x141: V115 = 0x40
0x143: V116 = M[0x40]
0x145: V117 = ISZERO S0
0x146: V118 = ISZERO V117
0x148: M[V116] = V118
0x149: V119 = 0x20
0x14b: V120 = ADD 0x20 V116
0x14c: V121 = 0x40
0x14e: V122 = M[0x40]
0x151: V123 = SUB V120 V122
0x153: RETURN V122 V123
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x154
[0x154:0x15a]
---
Predecessors: [0x5c]
Successors: [0x15b, 0x15f]
---
0x154 JUMPDEST
0x155 CALLVALUE
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0x154: JUMPDEST 
0x155: V124 = CALLVALUE
0x156: V125 = ISZERO V124
0x157: V126 = 0x15f
0x15a: JUMPI 0x15f V125
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0x154]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V127 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15f
[0x15f:0x169]
---
Predecessors: [0x154]
Successors: [0x42b]
---
0x15f JUMPDEST
0x160 PUSH2 0xd4
0x163 PUSH1 0x4
0x165 CALLDATALOAD
0x166 PUSH2 0x42b
0x169 JUMP
---
0x15f: JUMPDEST 
0x160: V128 = 0xd4
0x163: V129 = 0x4
0x165: V130 = CALLDATALOAD 0x4
0x166: V131 = 0x42b
0x169: JUMP 0x42b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4, V130]
Exit stack: [V12, 0xd4, V130]

================================

Block 0x16a
[0x16a:0x17d]
---
Predecessors: []
Successors: []
---
0x16a JUMPDEST
0x16b PUSH1 0x40
0x16d MLOAD
0x16e SWAP1
0x16f ISZERO
0x170 ISZERO
0x171 DUP2
0x172 MSTORE
0x173 PUSH1 0x20
0x175 ADD
0x176 PUSH1 0x40
0x178 MLOAD
0x179 DUP1
0x17a SWAP2
0x17b SUB
0x17c SWAP1
0x17d RETURN
---
0x16a: JUMPDEST 
0x16b: V132 = 0x40
0x16d: V133 = M[0x40]
0x16f: V134 = ISZERO S0
0x170: V135 = ISZERO V134
0x172: M[V133] = V135
0x173: V136 = 0x20
0x175: V137 = ADD 0x20 V133
0x176: V138 = 0x40
0x178: V139 = M[0x40]
0x17b: V140 = SUB V137 V139
0x17d: RETURN V139 V140
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x17e
[0x17e:0x184]
---
Predecessors: [0x67]
Successors: [0x185, 0x189]
---
0x17e JUMPDEST
0x17f CALLVALUE
0x180 ISZERO
0x181 PUSH2 0x189
0x184 JUMPI
---
0x17e: JUMPDEST 
0x17f: V141 = CALLVALUE
0x180: V142 = ISZERO V141
0x181: V143 = 0x189
0x184: JUMPI 0x189 V142
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x185
[0x185:0x188]
---
Predecessors: [0x17e]
Successors: []
---
0x185 PUSH1 0x0
0x187 DUP1
0x188 REVERT
---
0x185: V144 = 0x0
0x188: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x189
[0x189:0x19c]
---
Predecessors: [0x17e]
Successors: [0x475]
---
0x189 JUMPDEST
0x18a PUSH2 0x79
0x18d PUSH1 0x1
0x18f PUSH1 0xa0
0x191 PUSH1 0x2
0x193 EXP
0x194 SUB
0x195 PUSH1 0x4
0x197 CALLDATALOAD
0x198 AND
0x199 PUSH2 0x475
0x19c JUMP
---
0x189: JUMPDEST 
0x18a: V145 = 0x79
0x18d: V146 = 0x1
0x18f: V147 = 0xa0
0x191: V148 = 0x2
0x193: V149 = EXP 0x2 0xa0
0x194: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x195: V151 = 0x4
0x197: V152 = CALLDATALOAD 0x4
0x198: V153 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x199: V154 = 0x475
0x19c: JUMP 0x475
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x79, V153]
Exit stack: [V12, 0x79, V153]

================================

Block 0x19d
[0x19d:0x19e]
---
Predecessors: []
Successors: []
---
0x19d JUMPDEST
0x19e STOP
---
0x19d: JUMPDEST 
0x19e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x19f
[0x19f:0x1b5]
---
Predecessors: [0x86]
Successors: [0x1b6, 0x1ba]
---
0x19f JUMPDEST
0x1a0 PUSH1 0x0
0x1a2 SLOAD
0x1a3 CALLER
0x1a4 PUSH1 0x1
0x1a6 PUSH1 0xa0
0x1a8 PUSH1 0x2
0x1aa EXP
0x1ab SUB
0x1ac SWAP1
0x1ad DUP2
0x1ae AND
0x1af SWAP2
0x1b0 AND
0x1b1 EQ
0x1b2 PUSH2 0x1ba
0x1b5 JUMPI
---
0x19f: JUMPDEST 
0x1a0: V155 = 0x0
0x1a2: V156 = S[0x0]
0x1a3: V157 = CALLER
0x1a4: V158 = 0x1
0x1a6: V159 = 0xa0
0x1a8: V160 = 0x2
0x1aa: V161 = EXP 0x2 0xa0
0x1ab: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ae: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x1b0: V164 = AND V156 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: V165 = EQ V164 V163
0x1b2: V166 = 0x1ba
0x1b5: JUMPI 0x1ba V165
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x1b6
[0x1b6:0x1b9]
---
Predecessors: [0x19f]
Successors: []
---
0x1b6 PUSH1 0x0
0x1b8 DUP1
0x1b9 REVERT
---
0x1b6: V167 = 0x0
0x1b9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x1ba
[0x1ba:0x1c4]
---
Predecessors: [0x19f]
Successors: [0x76, 0x1c5]
---
0x1ba JUMPDEST
0x1bb PUSH1 0x1
0x1bd SLOAD
0x1be TIMESTAMP
0x1bf GT
0x1c0 ISZERO
0x1c1 PUSH2 0x76
0x1c4 JUMPI
---
0x1ba: JUMPDEST 
0x1bb: V168 = 0x1
0x1bd: V169 = S[0x1]
0x1be: V170 = TIMESTAMP
0x1bf: V171 = GT V170 V169
0x1c0: V172 = ISZERO V171
0x1c1: V173 = 0x76
0x1c4: JUMPI 0x76 V172
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x1c5
[0x1c5:0x1d1]
---
Predecessors: [0x1ba]
Successors: []
---
0x1c5 PUSH1 0x0
0x1c7 SLOAD
0x1c8 PUSH1 0x1
0x1ca PUSH1 0xa0
0x1cc PUSH1 0x2
0x1ce EXP
0x1cf SUB
0x1d0 AND
0x1d1 SELFDESTRUCT
---
0x1c5: V174 = 0x0
0x1c7: V175 = S[0x0]
0x1c8: V176 = 0x1
0x1ca: V177 = 0xa0
0x1cc: V178 = 0x2
0x1ce: V179 = EXP 0x2 0xa0
0x1cf: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d0: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x1d1: SELFDESTRUCT V181
---
Entry stack: [V12, 0x79]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79]

================================

Block 0x1d2
[0x1d2:0x1d2]
---
Predecessors: []
Successors: [0x1d3]
---
0x1d2 JUMPDEST
---
0x1d2: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d3
[0x1d3:0x1d3]
---
Predecessors: [0x1d2]
Successors: [0x1d4]
---
0x1d3 JUMPDEST
---
0x1d3: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d4
[0x1d4:0x1d5]
---
Predecessors: [0x1d3]
Successors: []
Has unresolved jump.
---
0x1d4 JUMPDEST
0x1d5 JUMP
---
0x1d4: JUMPDEST 
0x1d5: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d6
[0x1d6:0x1db]
---
Predecessors: [0x9b]
Successors: [0xa3]
---
0x1d6 JUMPDEST
0x1d7 PUSH1 0x1
0x1d9 SLOAD
0x1da DUP2
0x1db JUMP
---
0x1d6: JUMPDEST 
0x1d7: V182 = 0x1
0x1d9: V183 = S[0x1]
0x1db: JUMP 0xa3
---
Entry stack: [V12, 0xa3]
Stack pops: 1
Stack additions: [S0, V183]
Exit stack: [V12, 0xa3, V183]

================================

Block 0x1dc
[0x1dc:0x1f3]
---
Predecessors: [0xc0]
Successors: [0x1f4, 0x1f8]
---
0x1dc JUMPDEST
0x1dd PUSH1 0x0
0x1df DUP1
0x1e0 SLOAD
0x1e1 CALLER
0x1e2 PUSH1 0x1
0x1e4 PUSH1 0xa0
0x1e6 PUSH1 0x2
0x1e8 EXP
0x1e9 SUB
0x1ea SWAP1
0x1eb DUP2
0x1ec AND
0x1ed SWAP2
0x1ee AND
0x1ef EQ
0x1f0 PUSH2 0x1f8
0x1f3 JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V184 = 0x0
0x1e0: V185 = S[0x0]
0x1e1: V186 = CALLER
0x1e2: V187 = 0x1
0x1e4: V188 = 0xa0
0x1e6: V189 = 0x2
0x1e8: V190 = EXP 0x2 0xa0
0x1e9: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ec: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x1ee: V193 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x1ef: V194 = EQ V193 V192
0x1f0: V195 = 0x1f8
0x1f3: JUMPI 0x1f8 V194
---
Entry stack: [V12, 0xd4, V69]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xd4, V69, 0x0]

================================

Block 0x1f4
[0x1f4:0x1f7]
---
Predecessors: [0x1dc]
Successors: []
---
0x1f4 PUSH1 0x0
0x1f6 DUP1
0x1f7 REVERT
---
0x1f4: V196 = 0x0
0x1f7: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, V69, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V69, 0x0]

================================

Block 0x1f8
[0x1f8:0x207]
---
Predecessors: [0x1dc]
Successors: [0x208, 0x2ed]
---
0x1f8 JUMPDEST
0x1f9 PUSH1 0x1
0x1fb PUSH1 0xa0
0x1fd PUSH1 0x2
0x1ff EXP
0x200 SUB
0x201 DUP3
0x202 AND
0x203 ISZERO
0x204 PUSH2 0x2ed
0x207 JUMPI
---
0x1f8: JUMPDEST 
0x1f9: V197 = 0x1
0x1fb: V198 = 0xa0
0x1fd: V199 = 0x2
0x1ff: V200 = EXP 0x2 0xa0
0x200: V201 = SUB 0x10000000000000000000000000000000000000000 0x1
0x202: V202 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0x203: V203 = ISZERO V202
0x204: V204 = 0x2ed
0x207: JUMPI 0x2ed V203
---
Entry stack: [V12, 0xd4, V69, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xd4, V69, 0x0]

================================

Block 0x208
[0x208:0x211]
---
Predecessors: [0x1f8]
Successors: [0x212, 0x2ed]
---
0x208 PUSH1 0x1
0x20a SLOAD
0x20b TIMESTAMP
0x20c GT
0x20d ISZERO
0x20e PUSH2 0x2ed
0x211 JUMPI
---
0x208: V205 = 0x1
0x20a: V206 = S[0x1]
0x20b: V207 = TIMESTAMP
0x20c: V208 = GT V207 V206
0x20d: V209 = ISZERO V208
0x20e: V210 = 0x2ed
0x211: JUMPI 0x2ed V209
---
Entry stack: [V12, 0xd4, V69, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V69, 0x0]

================================

Block 0x212
[0x212:0x275]
---
Predecessors: [0x208]
Successors: [0x276, 0x27a]
---
0x212 PUSH1 0x0
0x214 DUP1
0x215 SLOAD
0x216 PUSH1 0x1
0x218 PUSH1 0xa0
0x21a PUSH1 0x2
0x21c EXP
0x21d SUB
0x21e DUP1
0x21f DUP6
0x220 AND
0x221 SWAP3
0x222 PUSH4 0xa9059cbb
0x227 SWAP3
0x228 SWAP1
0x229 SWAP2
0x22a AND
0x22b SWAP1
0x22c DUP4
0x22d SWAP1
0x22e PUSH4 0x70a08231
0x233 SWAP1
0x234 ADDRESS
0x235 SWAP1
0x236 PUSH1 0x40
0x238 MLOAD
0x239 PUSH1 0x20
0x23b ADD
0x23c MSTORE
0x23d PUSH1 0x40
0x23f MLOAD
0x240 PUSH1 0xe0
0x242 PUSH1 0x2
0x244 EXP
0x245 PUSH4 0xffffffff
0x24a DUP5
0x24b AND
0x24c MUL
0x24d DUP2
0x24e MSTORE
0x24f PUSH1 0x1
0x251 PUSH1 0xa0
0x253 PUSH1 0x2
0x255 EXP
0x256 SUB
0x257 SWAP1
0x258 SWAP2
0x259 AND
0x25a PUSH1 0x4
0x25c DUP3
0x25d ADD
0x25e MSTORE
0x25f PUSH1 0x24
0x261 ADD
0x262 PUSH1 0x20
0x264 PUSH1 0x40
0x266 MLOAD
0x267 DUP1
0x268 DUP4
0x269 SUB
0x26a DUP2
0x26b PUSH1 0x0
0x26d DUP8
0x26e DUP1
0x26f EXTCODESIZE
0x270 ISZERO
0x271 ISZERO
0x272 PUSH2 0x27a
0x275 JUMPI
---
0x212: V211 = 0x0
0x215: V212 = S[0x0]
0x216: V213 = 0x1
0x218: V214 = 0xa0
0x21a: V215 = 0x2
0x21c: V216 = EXP 0x2 0xa0
0x21d: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x220: V218 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0x222: V219 = 0xa9059cbb
0x22a: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x22e: V221 = 0x70a08231
0x234: V222 = ADDRESS
0x236: V223 = 0x40
0x238: V224 = M[0x40]
0x239: V225 = 0x20
0x23b: V226 = ADD 0x20 V224
0x23c: M[V226] = 0x0
0x23d: V227 = 0x40
0x23f: V228 = M[0x40]
0x240: V229 = 0xe0
0x242: V230 = 0x2
0x244: V231 = EXP 0x2 0xe0
0x245: V232 = 0xffffffff
0x24b: V233 = AND 0x70a08231 0xffffffff
0x24c: V234 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x24e: M[V228] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x24f: V235 = 0x1
0x251: V236 = 0xa0
0x253: V237 = 0x2
0x255: V238 = EXP 0x2 0xa0
0x256: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x259: V240 = AND V222 0xffffffffffffffffffffffffffffffffffffffff
0x25a: V241 = 0x4
0x25d: V242 = ADD V228 0x4
0x25e: M[V242] = V240
0x25f: V243 = 0x24
0x261: V244 = ADD 0x24 V228
0x262: V245 = 0x20
0x264: V246 = 0x40
0x266: V247 = M[0x40]
0x269: V248 = SUB V244 V247
0x26b: V249 = 0x0
0x26f: V250 = EXTCODESIZE V218
0x270: V251 = ISZERO V250
0x271: V252 = ISZERO V251
0x272: V253 = 0x27a
0x275: JUMPI 0x27a V252
---
Entry stack: [V12, 0xd4, V69, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V218, 0xa9059cbb, V220, V218, 0x70a08231, V244, 0x20, V247, V248, V247, 0x0, V218]
Exit stack: [V12, 0xd4, V69, 0x0, V218, 0xa9059cbb, V220, V218, 0x70a08231, V244, 0x20, V247, V248, V247, 0x0, V218]

================================

Block 0x276
[0x276:0x279]
---
Predecessors: [0x212]
Successors: []
---
0x276 PUSH1 0x0
0x278 DUP1
0x279 REVERT
---
0x276: V254 = 0x0
0x279: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, V69, 0x0, V218, 0xa9059cbb, V220, V218, 0x70a08231, V244, 0x20, V247, V248, V247, 0x0, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V69, 0x0, V218, 0xa9059cbb, V220, V218, 0x70a08231, V244, 0x20, V247, V248, V247, 0x0, V218]

================================

Block 0x27a
[0x27a:0x286]
---
Predecessors: [0x212]
Successors: [0x287, 0x28b]
---
0x27a JUMPDEST
0x27b PUSH2 0x2c6
0x27e GAS
0x27f SUB
0x280 CALL
0x281 ISZERO
0x282 ISZERO
0x283 PUSH2 0x28b
0x286 JUMPI
---
0x27a: JUMPDEST 
0x27b: V255 = 0x2c6
0x27e: V256 = GAS
0x27f: V257 = SUB V256 0x2c6
0x280: V258 = CALL V257 V218 0x0 V247 V248 V247 0x20
0x281: V259 = ISZERO V258
0x282: V260 = ISZERO V259
0x283: V261 = 0x28b
0x286: JUMPI 0x28b V260
---
Entry stack: [V12, 0xd4, V69, 0x0, V218, 0xa9059cbb, V220, V218, 0x70a08231, V244, 0x20, V247, V248, V247, 0x0, V218]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xd4, V69, 0x0, V218, 0xa9059cbb, V220, V218, 0x70a08231, V244]

================================

Block 0x287
[0x287:0x28a]
---
Predecessors: [0x27a]
Successors: []
---
0x287 PUSH1 0x0
0x289 DUP1
0x28a REVERT
---
0x287: V262 = 0x0
0x28a: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, V69, 0x0, V218, 0xa9059cbb, V220, V218, 0x70a08231, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V69, 0x0, V218, 0xa9059cbb, V220, V218, 0x70a08231, V244]

================================

Block 0x28b
[0x28b:0x2d3]
---
Predecessors: [0x27a]
Successors: [0x2d4, 0x2d8]
---
0x28b JUMPDEST
0x28c POP
0x28d POP
0x28e POP
0x28f PUSH1 0x40
0x291 MLOAD
0x292 DUP1
0x293 MLOAD
0x294 SWAP1
0x295 POP
0x296 PUSH1 0x40
0x298 MLOAD
0x299 PUSH1 0xe0
0x29b PUSH1 0x2
0x29d EXP
0x29e PUSH4 0xffffffff
0x2a3 DUP6
0x2a4 AND
0x2a5 MUL
0x2a6 DUP2
0x2a7 MSTORE
0x2a8 PUSH1 0x1
0x2aa PUSH1 0xa0
0x2ac PUSH1 0x2
0x2ae EXP
0x2af SUB
0x2b0 SWAP1
0x2b1 SWAP3
0x2b2 AND
0x2b3 PUSH1 0x4
0x2b5 DUP4
0x2b6 ADD
0x2b7 MSTORE
0x2b8 PUSH1 0x24
0x2ba DUP3
0x2bb ADD
0x2bc MSTORE
0x2bd PUSH1 0x44
0x2bf ADD
0x2c0 PUSH1 0x0
0x2c2 PUSH1 0x40
0x2c4 MLOAD
0x2c5 DUP1
0x2c6 DUP4
0x2c7 SUB
0x2c8 DUP2
0x2c9 PUSH1 0x0
0x2cb DUP8
0x2cc DUP1
0x2cd EXTCODESIZE
0x2ce ISZERO
0x2cf ISZERO
0x2d0 PUSH2 0x2d8
0x2d3 JUMPI
---
0x28b: JUMPDEST 
0x28f: V263 = 0x40
0x291: V264 = M[0x40]
0x293: V265 = M[V264]
0x296: V266 = 0x40
0x298: V267 = M[0x40]
0x299: V268 = 0xe0
0x29b: V269 = 0x2
0x29d: V270 = EXP 0x2 0xe0
0x29e: V271 = 0xffffffff
0x2a4: V272 = AND 0xa9059cbb 0xffffffff
0x2a5: V273 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x2a7: M[V267] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2a8: V274 = 0x1
0x2aa: V275 = 0xa0
0x2ac: V276 = 0x2
0x2ae: V277 = EXP 0x2 0xa0
0x2af: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b2: V279 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V280 = 0x4
0x2b6: V281 = ADD V267 0x4
0x2b7: M[V281] = V279
0x2b8: V282 = 0x24
0x2bb: V283 = ADD V267 0x24
0x2bc: M[V283] = V265
0x2bd: V284 = 0x44
0x2bf: V285 = ADD 0x44 V267
0x2c0: V286 = 0x0
0x2c2: V287 = 0x40
0x2c4: V288 = M[0x40]
0x2c7: V289 = SUB V285 V288
0x2c9: V290 = 0x0
0x2cd: V291 = EXTCODESIZE V218
0x2ce: V292 = ISZERO V291
0x2cf: V293 = ISZERO V292
0x2d0: V294 = 0x2d8
0x2d3: JUMPI 0x2d8 V293
---
Entry stack: [V12, 0xd4, V69, 0x0, V218, 0xa9059cbb, V220, V218, 0x70a08231, V244]
Stack pops: 6
Stack additions: [S5, S4, V285, 0x0, V288, V289, V288, 0x0, S5]
Exit stack: [V12, 0xd4, V69, 0x0, V218, 0xa9059cbb, V285, 0x0, V288, V289, V288, 0x0, V218]

================================

Block 0x2d4
[0x2d4:0x2d7]
---
Predecessors: [0x28b]
Successors: []
---
0x2d4 PUSH1 0x0
0x2d6 DUP1
0x2d7 REVERT
---
0x2d4: V295 = 0x0
0x2d7: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, V69, 0x0, V218, 0xa9059cbb, V285, 0x0, V288, V289, V288, 0x0, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V69, 0x0, V218, 0xa9059cbb, V285, 0x0, V288, V289, V288, 0x0, V218]

================================

Block 0x2d8
[0x2d8:0x2e4]
---
Predecessors: [0x28b]
Successors: [0x2e5, 0x2e9]
---
0x2d8 JUMPDEST
0x2d9 PUSH2 0x2c6
0x2dc GAS
0x2dd SUB
0x2de CALL
0x2df ISZERO
0x2e0 ISZERO
0x2e1 PUSH2 0x2e9
0x2e4 JUMPI
---
0x2d8: JUMPDEST 
0x2d9: V296 = 0x2c6
0x2dc: V297 = GAS
0x2dd: V298 = SUB V297 0x2c6
0x2de: V299 = CALL V298 V218 0x0 V288 V289 V288 0x0
0x2df: V300 = ISZERO V299
0x2e0: V301 = ISZERO V300
0x2e1: V302 = 0x2e9
0x2e4: JUMPI 0x2e9 V301
---
Entry stack: [V12, 0xd4, V69, 0x0, V218, 0xa9059cbb, V285, 0x0, V288, V289, V288, 0x0, V218]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xd4, V69, 0x0, V218, 0xa9059cbb, V285]

================================

Block 0x2e5
[0x2e5:0x2e8]
---
Predecessors: [0x2d8]
Successors: []
---
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 REVERT
---
0x2e5: V303 = 0x0
0x2e8: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, V69, 0x0, V218, 0xa9059cbb, V285]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V69, 0x0, V218, 0xa9059cbb, V285]

================================

Block 0x2e9
[0x2e9:0x2ec]
---
Predecessors: [0x2d8]
Successors: [0x2ed]
---
0x2e9 JUMPDEST
0x2ea POP
0x2eb POP
0x2ec POP
---
0x2e9: JUMPDEST 
---
Entry stack: [V12, 0xd4, V69, 0x0, V218, 0xa9059cbb, V285]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xd4, V69, 0x0]

================================

Block 0x2ed
[0x2ed:0x2ed]
---
Predecessors: [0x1f8, 0x208, 0x2e9]
Successors: [0x2ee]
---
0x2ed JUMPDEST
---
0x2ed: JUMPDEST 
---
Entry stack: [V12, 0xd4, V69, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V69, 0x0]

================================

Block 0x2ee
[0x2ee:0x2f1]
---
Predecessors: [0x2ed]
Successors: [0x2f2]
---
0x2ee JUMPDEST
0x2ef POP
0x2f0 PUSH1 0x1
---
0x2ee: JUMPDEST 
0x2f0: V304 = 0x1
---
Entry stack: [V12, 0xd4, V69, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0xd4, V69, 0x1]

================================

Block 0x2f2
[0x2f2:0x2f2]
---
Predecessors: [0x2ee, 0x459]
Successors: [0x2f3]
---
0x2f2 JUMPDEST
---
0x2f2: JUMPDEST 
---
Entry stack: [V12, 0xd4, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, S1, {0x0, 0x1}]

================================

Block 0x2f3
[0x2f3:0x2f7]
---
Predecessors: [0x2f2]
Successors: [0xd4]
---
0x2f3 JUMPDEST
0x2f4 SWAP2
0x2f5 SWAP1
0x2f6 POP
0x2f7 JUMP
---
0x2f3: JUMPDEST 
0x2f7: JUMP 0xd4
---
Entry stack: [V12, 0xd4, S1, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x2f8
[0x2f8:0x311]
---
Predecessors: [0xf3]
Successors: [0x312, 0x316]
---
0x2f8 JUMPDEST
0x2f9 PUSH1 0x0
0x2fb DUP1
0x2fc SLOAD
0x2fd DUP2
0x2fe SWAP1
0x2ff CALLER
0x300 PUSH1 0x1
0x302 PUSH1 0xa0
0x304 PUSH1 0x2
0x306 EXP
0x307 SUB
0x308 SWAP1
0x309 DUP2
0x30a AND
0x30b SWAP2
0x30c AND
0x30d EQ
0x30e PUSH2 0x316
0x311 JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V305 = 0x0
0x2fc: V306 = S[0x0]
0x2ff: V307 = CALLER
0x300: V308 = 0x1
0x302: V309 = 0xa0
0x304: V310 = 0x2
0x306: V311 = EXP 0x2 0xa0
0x307: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30a: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x30c: V314 = AND V306 0xffffffffffffffffffffffffffffffffffffffff
0x30d: V315 = EQ V314 V313
0x30e: V316 = 0x316
0x311: JUMPI 0x316 V315
---
Entry stack: [V12, 0x79, V92]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x79, V92, 0x0, 0x0]

================================

Block 0x312
[0x312:0x315]
---
Predecessors: [0x2f8]
Successors: []
---
0x312 PUSH1 0x0
0x314 DUP1
0x315 REVERT
---
0x312: V317 = 0x0
0x315: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V92, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V92, 0x0, 0x0]

================================

Block 0x316
[0x316:0x320]
---
Predecessors: [0x2f8]
Successors: [0x321, 0x40e]
---
0x316 JUMPDEST
0x317 PUSH1 0x1
0x319 SLOAD
0x31a TIMESTAMP
0x31b GT
0x31c ISZERO
0x31d PUSH2 0x40e
0x320 JUMPI
---
0x316: JUMPDEST 
0x317: V318 = 0x1
0x319: V319 = S[0x1]
0x31a: V320 = TIMESTAMP
0x31b: V321 = GT V320 V319
0x31c: V322 = ISZERO V321
0x31d: V323 = 0x40e
0x320: JUMPI 0x40e V322
---
Entry stack: [V12, 0x79, V92, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V92, 0x0, 0x0]

================================

Block 0x321
[0x321:0x375]
---
Predecessors: [0x316]
Successors: [0x376, 0x37a]
---
0x321 DUP3
0x322 SWAP2
0x323 POP
0x324 DUP2
0x325 PUSH1 0x1
0x327 PUSH1 0xa0
0x329 PUSH1 0x2
0x32b EXP
0x32c SUB
0x32d AND
0x32e PUSH4 0x70a08231
0x333 ADDRESS
0x334 PUSH1 0x0
0x336 PUSH1 0x40
0x338 MLOAD
0x339 PUSH1 0x20
0x33b ADD
0x33c MSTORE
0x33d PUSH1 0x40
0x33f MLOAD
0x340 PUSH1 0xe0
0x342 PUSH1 0x2
0x344 EXP
0x345 PUSH4 0xffffffff
0x34a DUP5
0x34b AND
0x34c MUL
0x34d DUP2
0x34e MSTORE
0x34f PUSH1 0x1
0x351 PUSH1 0xa0
0x353 PUSH1 0x2
0x355 EXP
0x356 SUB
0x357 SWAP1
0x358 SWAP2
0x359 AND
0x35a PUSH1 0x4
0x35c DUP3
0x35d ADD
0x35e MSTORE
0x35f PUSH1 0x24
0x361 ADD
0x362 PUSH1 0x20
0x364 PUSH1 0x40
0x366 MLOAD
0x367 DUP1
0x368 DUP4
0x369 SUB
0x36a DUP2
0x36b PUSH1 0x0
0x36d DUP8
0x36e DUP1
0x36f EXTCODESIZE
0x370 ISZERO
0x371 ISZERO
0x372 PUSH2 0x37a
0x375 JUMPI
---
0x325: V324 = 0x1
0x327: V325 = 0xa0
0x329: V326 = 0x2
0x32b: V327 = EXP 0x2 0xa0
0x32c: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32d: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x32e: V330 = 0x70a08231
0x333: V331 = ADDRESS
0x334: V332 = 0x0
0x336: V333 = 0x40
0x338: V334 = M[0x40]
0x339: V335 = 0x20
0x33b: V336 = ADD 0x20 V334
0x33c: M[V336] = 0x0
0x33d: V337 = 0x40
0x33f: V338 = M[0x40]
0x340: V339 = 0xe0
0x342: V340 = 0x2
0x344: V341 = EXP 0x2 0xe0
0x345: V342 = 0xffffffff
0x34b: V343 = AND 0x70a08231 0xffffffff
0x34c: V344 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x34e: M[V338] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x34f: V345 = 0x1
0x351: V346 = 0xa0
0x353: V347 = 0x2
0x355: V348 = EXP 0x2 0xa0
0x356: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x359: V350 = AND V331 0xffffffffffffffffffffffffffffffffffffffff
0x35a: V351 = 0x4
0x35d: V352 = ADD V338 0x4
0x35e: M[V352] = V350
0x35f: V353 = 0x24
0x361: V354 = ADD 0x24 V338
0x362: V355 = 0x20
0x364: V356 = 0x40
0x366: V357 = M[0x40]
0x369: V358 = SUB V354 V357
0x36b: V359 = 0x0
0x36f: V360 = EXTCODESIZE V329
0x370: V361 = ISZERO V360
0x371: V362 = ISZERO V361
0x372: V363 = 0x37a
0x375: JUMPI 0x37a V362
---
Entry stack: [V12, 0x79, V92, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S2, S0, V329, 0x70a08231, V354, 0x20, V357, V358, V357, 0x0, V329]
Exit stack: [V12, 0x79, V92, V92, 0x0, V329, 0x70a08231, V354, 0x20, V357, V358, V357, 0x0, V329]

================================

Block 0x376
[0x376:0x379]
---
Predecessors: [0x321]
Successors: []
---
0x376 PUSH1 0x0
0x378 DUP1
0x379 REVERT
---
0x376: V364 = 0x0
0x379: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V92, V92, 0x0, V329, 0x70a08231, V354, 0x20, V357, V358, V357, 0x0, V329]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V92, V92, 0x0, V329, 0x70a08231, V354, 0x20, V357, V358, V357, 0x0, V329]

================================

Block 0x37a
[0x37a:0x386]
---
Predecessors: [0x321]
Successors: [0x387, 0x38b]
---
0x37a JUMPDEST
0x37b PUSH2 0x2c6
0x37e GAS
0x37f SUB
0x380 CALL
0x381 ISZERO
0x382 ISZERO
0x383 PUSH2 0x38b
0x386 JUMPI
---
0x37a: JUMPDEST 
0x37b: V365 = 0x2c6
0x37e: V366 = GAS
0x37f: V367 = SUB V366 0x2c6
0x380: V368 = CALL V367 V329 0x0 V357 V358 V357 0x20
0x381: V369 = ISZERO V368
0x382: V370 = ISZERO V369
0x383: V371 = 0x38b
0x386: JUMPI 0x38b V370
---
Entry stack: [V12, 0x79, V92, V92, 0x0, V329, 0x70a08231, V354, 0x20, V357, V358, V357, 0x0, V329]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x79, V92, V92, 0x0, V329, 0x70a08231, V354]

================================

Block 0x387
[0x387:0x38a]
---
Predecessors: [0x37a]
Successors: []
---
0x387 PUSH1 0x0
0x389 DUP1
0x38a REVERT
---
0x387: V372 = 0x0
0x38a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V92, V92, 0x0, V329, 0x70a08231, V354]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V92, V92, 0x0, V329, 0x70a08231, V354]

================================

Block 0x38b
[0x38b:0x39f]
---
Predecessors: [0x37a]
Successors: [0x3a0, 0x40e]
---
0x38b JUMPDEST
0x38c POP
0x38d POP
0x38e POP
0x38f PUSH1 0x40
0x391 MLOAD
0x392 DUP1
0x393 MLOAD
0x394 SWAP2
0x395 POP
0x396 POP
0x397 PUSH1 0x0
0x399 DUP2
0x39a GT
0x39b ISZERO
0x39c PUSH2 0x40e
0x39f JUMPI
---
0x38b: JUMPDEST 
0x38f: V373 = 0x40
0x391: V374 = M[0x40]
0x393: V375 = M[V374]
0x397: V376 = 0x0
0x39a: V377 = GT V375 0x0
0x39b: V378 = ISZERO V377
0x39c: V379 = 0x40e
0x39f: JUMPI 0x40e V378
---
Entry stack: [V12, 0x79, V92, V92, 0x0, V329, 0x70a08231, V354]
Stack pops: 4
Stack additions: [V375]
Exit stack: [V12, 0x79, V92, V92, V375]

================================

Block 0x3a0
[0x3a0:0x3f4]
---
Predecessors: [0x38b]
Successors: [0x3f5, 0x3f9]
---
0x3a0 PUSH1 0x0
0x3a2 SLOAD
0x3a3 PUSH1 0x1
0x3a5 PUSH1 0xa0
0x3a7 PUSH1 0x2
0x3a9 EXP
0x3aa SUB
0x3ab DUP1
0x3ac DUP5
0x3ad AND
0x3ae SWAP2
0x3af PUSH4 0xa9059cbb
0x3b4 SWAP2
0x3b5 AND
0x3b6 DUP4
0x3b7 PUSH1 0x40
0x3b9 MLOAD
0x3ba PUSH1 0xe0
0x3bc PUSH1 0x2
0x3be EXP
0x3bf PUSH4 0xffffffff
0x3c4 DUP6
0x3c5 AND
0x3c6 MUL
0x3c7 DUP2
0x3c8 MSTORE
0x3c9 PUSH1 0x1
0x3cb PUSH1 0xa0
0x3cd PUSH1 0x2
0x3cf EXP
0x3d0 SUB
0x3d1 SWAP1
0x3d2 SWAP3
0x3d3 AND
0x3d4 PUSH1 0x4
0x3d6 DUP4
0x3d7 ADD
0x3d8 MSTORE
0x3d9 PUSH1 0x24
0x3db DUP3
0x3dc ADD
0x3dd MSTORE
0x3de PUSH1 0x44
0x3e0 ADD
0x3e1 PUSH1 0x0
0x3e3 PUSH1 0x40
0x3e5 MLOAD
0x3e6 DUP1
0x3e7 DUP4
0x3e8 SUB
0x3e9 DUP2
0x3ea PUSH1 0x0
0x3ec DUP8
0x3ed DUP1
0x3ee EXTCODESIZE
0x3ef ISZERO
0x3f0 ISZERO
0x3f1 PUSH2 0x3f9
0x3f4 JUMPI
---
0x3a0: V380 = 0x0
0x3a2: V381 = S[0x0]
0x3a3: V382 = 0x1
0x3a5: V383 = 0xa0
0x3a7: V384 = 0x2
0x3a9: V385 = EXP 0x2 0xa0
0x3aa: V386 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ad: V387 = AND V92 0xffffffffffffffffffffffffffffffffffffffff
0x3af: V388 = 0xa9059cbb
0x3b5: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x3b7: V390 = 0x40
0x3b9: V391 = M[0x40]
0x3ba: V392 = 0xe0
0x3bc: V393 = 0x2
0x3be: V394 = EXP 0x2 0xe0
0x3bf: V395 = 0xffffffff
0x3c5: V396 = AND 0xa9059cbb 0xffffffff
0x3c6: V397 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x3c8: M[V391] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3c9: V398 = 0x1
0x3cb: V399 = 0xa0
0x3cd: V400 = 0x2
0x3cf: V401 = EXP 0x2 0xa0
0x3d0: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d3: V403 = AND V389 0xffffffffffffffffffffffffffffffffffffffff
0x3d4: V404 = 0x4
0x3d7: V405 = ADD V391 0x4
0x3d8: M[V405] = V403
0x3d9: V406 = 0x24
0x3dc: V407 = ADD V391 0x24
0x3dd: M[V407] = V375
0x3de: V408 = 0x44
0x3e0: V409 = ADD 0x44 V391
0x3e1: V410 = 0x0
0x3e3: V411 = 0x40
0x3e5: V412 = M[0x40]
0x3e8: V413 = SUB V409 V412
0x3ea: V414 = 0x0
0x3ee: V415 = EXTCODESIZE V387
0x3ef: V416 = ISZERO V415
0x3f0: V417 = ISZERO V416
0x3f1: V418 = 0x3f9
0x3f4: JUMPI 0x3f9 V417
---
Entry stack: [V12, 0x79, V92, V92, V375]
Stack pops: 2
Stack additions: [S1, S0, V387, 0xa9059cbb, V409, 0x0, V412, V413, V412, 0x0, V387]
Exit stack: [V12, 0x79, V92, V92, V375, V387, 0xa9059cbb, V409, 0x0, V412, V413, V412, 0x0, V387]

================================

Block 0x3f5
[0x3f5:0x3f8]
---
Predecessors: [0x3a0]
Successors: []
---
0x3f5 PUSH1 0x0
0x3f7 DUP1
0x3f8 REVERT
---
0x3f5: V419 = 0x0
0x3f8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V92, V92, V375, V387, 0xa9059cbb, V409, 0x0, V412, V413, V412, 0x0, V387]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V92, V92, V375, V387, 0xa9059cbb, V409, 0x0, V412, V413, V412, 0x0, V387]

================================

Block 0x3f9
[0x3f9:0x405]
---
Predecessors: [0x3a0]
Successors: [0x406, 0x40a]
---
0x3f9 JUMPDEST
0x3fa PUSH2 0x2c6
0x3fd GAS
0x3fe SUB
0x3ff CALL
0x400 ISZERO
0x401 ISZERO
0x402 PUSH2 0x40a
0x405 JUMPI
---
0x3f9: JUMPDEST 
0x3fa: V420 = 0x2c6
0x3fd: V421 = GAS
0x3fe: V422 = SUB V421 0x2c6
0x3ff: V423 = CALL V422 V387 0x0 V412 V413 V412 0x0
0x400: V424 = ISZERO V423
0x401: V425 = ISZERO V424
0x402: V426 = 0x40a
0x405: JUMPI 0x40a V425
---
Entry stack: [V12, 0x79, V92, V92, V375, V387, 0xa9059cbb, V409, 0x0, V412, V413, V412, 0x0, V387]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x79, V92, V92, V375, V387, 0xa9059cbb, V409]

================================

Block 0x406
[0x406:0x409]
---
Predecessors: [0x3f9]
Successors: []
---
0x406 PUSH1 0x0
0x408 DUP1
0x409 REVERT
---
0x406: V427 = 0x0
0x409: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V92, V92, V375, V387, 0xa9059cbb, V409]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V92, V92, V375, V387, 0xa9059cbb, V409]

================================

Block 0x40a
[0x40a:0x40d]
---
Predecessors: [0x3f9]
Successors: [0x40e]
---
0x40a JUMPDEST
0x40b POP
0x40c POP
0x40d POP
---
0x40a: JUMPDEST 
---
Entry stack: [V12, 0x79, V92, V92, V375, V387, 0xa9059cbb, V409]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x79, V92, V92, V375]

================================

Block 0x40e
[0x40e:0x40e]
---
Predecessors: [0x316, 0x38b, 0x40a]
Successors: [0x40f]
---
0x40e JUMPDEST
---
0x40e: JUMPDEST 
---
Entry stack: [V12, 0x79, V92, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V92, S1, S0]

================================

Block 0x40f
[0x40f:0x40f]
---
Predecessors: [0x40e]
Successors: [0x410]
---
0x40f JUMPDEST
---
0x40f: JUMPDEST 
---
Entry stack: [V12, 0x79, V92, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V92, S1, S0]

================================

Block 0x410
[0x410:0x410]
---
Predecessors: [0x40f]
Successors: [0x411]
---
0x410 JUMPDEST
---
0x410: JUMPDEST 
---
Entry stack: [V12, 0x79, V92, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V92, S1, S0]

================================

Block 0x411
[0x411:0x415]
---
Predecessors: [0x410]
Successors: [0x79]
---
0x411 JUMPDEST
0x412 POP
0x413 POP
0x414 POP
0x415 JUMP
---
0x411: JUMPDEST 
0x415: JUMP 0x79
---
Entry stack: [V12, 0x79, V92, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x416
[0x416:0x424]
---
Predecessors: [0x114]
Successors: [0x11c]
---
0x416 JUMPDEST
0x417 PUSH1 0x0
0x419 SLOAD
0x41a PUSH1 0x1
0x41c PUSH1 0xa0
0x41e PUSH1 0x2
0x420 EXP
0x421 SUB
0x422 AND
0x423 DUP2
0x424 JUMP
---
0x416: JUMPDEST 
0x417: V428 = 0x0
0x419: V429 = S[0x0]
0x41a: V430 = 0x1
0x41c: V431 = 0xa0
0x41e: V432 = 0x2
0x420: V433 = EXP 0x2 0xa0
0x421: V434 = SUB 0x10000000000000000000000000000000000000000 0x1
0x422: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x424: JUMP 0x11c
---
Entry stack: [V12, 0x11c]
Stack pops: 1
Stack additions: [S0, V435]
Exit stack: [V12, 0x11c, V435]

================================

Block 0x425
[0x425:0x427]
---
Predecessors: [0x138]
Successors: [0x428]
---
0x425 JUMPDEST
0x426 PUSH1 0x1
---
0x425: JUMPDEST 
0x426: V436 = 0x1
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0xd4, 0x1]

================================

Block 0x428
[0x428:0x42a]
---
Predecessors: [0x425]
Successors: [0xd4]
---
0x428 JUMPDEST
0x429 SWAP1
0x42a JUMP
---
0x428: JUMPDEST 
0x42a: JUMP 0xd4
---
Entry stack: [V12, 0xd4, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x42b
[0x42b:0x442]
---
Predecessors: [0x15f]
Successors: [0x443, 0x447]
---
0x42b JUMPDEST
0x42c PUSH1 0x0
0x42e DUP1
0x42f SLOAD
0x430 CALLER
0x431 PUSH1 0x1
0x433 PUSH1 0xa0
0x435 PUSH1 0x2
0x437 EXP
0x438 SUB
0x439 SWAP1
0x43a DUP2
0x43b AND
0x43c SWAP2
0x43d AND
0x43e EQ
0x43f PUSH2 0x447
0x442 JUMPI
---
0x42b: JUMPDEST 
0x42c: V437 = 0x0
0x42f: V438 = S[0x0]
0x430: V439 = CALLER
0x431: V440 = 0x1
0x433: V441 = 0xa0
0x435: V442 = 0x2
0x437: V443 = EXP 0x2 0xa0
0x438: V444 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43b: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x43d: V446 = AND V438 0xffffffffffffffffffffffffffffffffffffffff
0x43e: V447 = EQ V446 V445
0x43f: V448 = 0x447
0x442: JUMPI 0x447 V447
---
Entry stack: [V12, 0xd4, V130]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xd4, V130, 0x0]

================================

Block 0x443
[0x443:0x446]
---
Predecessors: [0x42b]
Successors: []
---
0x443 PUSH1 0x0
0x445 DUP1
0x446 REVERT
---
0x443: V449 = 0x0
0x446: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, V130, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V130, 0x0]

================================

Block 0x447
[0x447:0x458]
---
Predecessors: [0x42b]
Successors: [0x459, 0x460]
---
0x447 JUMPDEST
0x448 PUSH1 0x1
0x44a SLOAD
0x44b DUP3
0x44c PUSH3 0x15180
0x450 MUL
0x451 TIMESTAMP
0x452 ADD
0x453 LT
0x454 ISZERO
0x455 PUSH2 0x460
0x458 JUMPI
---
0x447: JUMPDEST 
0x448: V450 = 0x1
0x44a: V451 = S[0x1]
0x44c: V452 = 0x15180
0x450: V453 = MUL 0x15180 V130
0x451: V454 = TIMESTAMP
0x452: V455 = ADD V454 V453
0x453: V456 = LT V455 V451
0x454: V457 = ISZERO V456
0x455: V458 = 0x460
0x458: JUMPI 0x460 V457
---
Entry stack: [V12, 0xd4, V130, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xd4, V130, 0x0]

================================

Block 0x459
[0x459:0x45f]
---
Predecessors: [0x447]
Successors: [0x2f2]
---
0x459 POP
0x45a PUSH1 0x0
0x45c PUSH2 0x2f2
0x45f JUMP
---
0x45a: V459 = 0x0
0x45c: V460 = 0x2f2
0x45f: JUMP 0x2f2
---
Entry stack: [V12, 0xd4, V130, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0xd4, V130, 0x0]

================================

Block 0x460
[0x460:0x46e]
---
Predecessors: [0x447]
Successors: [0x46f]
---
0x460 JUMPDEST
0x461 POP
0x462 TIMESTAMP
0x463 PUSH3 0x15180
0x467 DUP3
0x468 MUL
0x469 ADD
0x46a PUSH1 0x1
0x46c SWAP1
0x46d DUP2
0x46e SSTORE
---
0x460: JUMPDEST 
0x462: V461 = TIMESTAMP
0x463: V462 = 0x15180
0x468: V463 = MUL V130 0x15180
0x469: V464 = ADD V463 V461
0x46a: V465 = 0x1
0x46e: S[0x1] = V464
---
Entry stack: [V12, 0xd4, V130, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0xd4, V130, 0x1]

================================

Block 0x46f
[0x46f:0x46f]
---
Predecessors: [0x460]
Successors: [0x470]
---
0x46f JUMPDEST
---
0x46f: JUMPDEST 
---
Entry stack: [V12, 0xd4, V130, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V130, 0x1]

================================

Block 0x470
[0x470:0x474]
---
Predecessors: [0x46f]
Successors: [0xd4]
---
0x470 JUMPDEST
0x471 SWAP2
0x472 SWAP1
0x473 POP
0x474 JUMP
---
0x470: JUMPDEST 
0x474: JUMP 0xd4
---
Entry stack: [V12, 0xd4, V130, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x475
[0x475:0x48b]
---
Predecessors: [0x189]
Successors: [0x48c, 0x490]
---
0x475 JUMPDEST
0x476 PUSH1 0x0
0x478 SLOAD
0x479 CALLER
0x47a PUSH1 0x1
0x47c PUSH1 0xa0
0x47e PUSH1 0x2
0x480 EXP
0x481 SUB
0x482 SWAP1
0x483 DUP2
0x484 AND
0x485 SWAP2
0x486 AND
0x487 EQ
0x488 PUSH2 0x490
0x48b JUMPI
---
0x475: JUMPDEST 
0x476: V466 = 0x0
0x478: V467 = S[0x0]
0x479: V468 = CALLER
0x47a: V469 = 0x1
0x47c: V470 = 0xa0
0x47e: V471 = 0x2
0x480: V472 = EXP 0x2 0xa0
0x481: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x484: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x486: V475 = AND V467 0xffffffffffffffffffffffffffffffffffffffff
0x487: V476 = EQ V475 V474
0x488: V477 = 0x490
0x48b: JUMPI 0x490 V476
---
Entry stack: [V12, 0x79, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V153]

================================

Block 0x48c
[0x48c:0x48f]
---
Predecessors: [0x475]
Successors: []
---
0x48c PUSH1 0x0
0x48e DUP1
0x48f REVERT
---
0x48c: V478 = 0x0
0x48f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x79, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V153]

================================

Block 0x490
[0x490:0x49f]
---
Predecessors: [0x475]
Successors: [0x4a0, 0x4c8]
---
0x490 JUMPDEST
0x491 PUSH1 0x1
0x493 PUSH1 0xa0
0x495 PUSH1 0x2
0x497 EXP
0x498 SUB
0x499 DUP2
0x49a AND
0x49b ISZERO
0x49c PUSH2 0x4c8
0x49f JUMPI
---
0x490: JUMPDEST 
0x491: V479 = 0x1
0x493: V480 = 0xa0
0x495: V481 = 0x2
0x497: V482 = EXP 0x2 0xa0
0x498: V483 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49a: V484 = AND V153 0xffffffffffffffffffffffffffffffffffffffff
0x49b: V485 = ISZERO V484
0x49c: V486 = 0x4c8
0x49f: JUMPI 0x4c8 V485
---
Entry stack: [V12, 0x79, V153]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x79, V153]

================================

Block 0x4a0
[0x4a0:0x4c7]
---
Predecessors: [0x490]
Successors: [0x4c8]
---
0x4a0 PUSH1 0x0
0x4a2 DUP1
0x4a3 SLOAD
0x4a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b9 NOT
0x4ba AND
0x4bb PUSH1 0x1
0x4bd PUSH1 0xa0
0x4bf PUSH1 0x2
0x4c1 EXP
0x4c2 SUB
0x4c3 DUP4
0x4c4 AND
0x4c5 OR
0x4c6 SWAP1
0x4c7 SSTORE
---
0x4a0: V487 = 0x0
0x4a3: V488 = S[0x0]
0x4a4: V489 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b9: V490 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4ba: V491 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V488
0x4bb: V492 = 0x1
0x4bd: V493 = 0xa0
0x4bf: V494 = 0x2
0x4c1: V495 = EXP 0x2 0xa0
0x4c2: V496 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c4: V497 = AND V153 0xffffffffffffffffffffffffffffffffffffffff
0x4c5: V498 = OR V497 V491
0x4c7: S[0x0] = V498
---
Entry stack: [V12, 0x79, V153]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x79, V153]

================================

Block 0x4c8
[0x4c8:0x4c8]
---
Predecessors: [0x490, 0x4a0]
Successors: [0x4c9]
---
0x4c8 JUMPDEST
---
0x4c8: JUMPDEST 
---
Entry stack: [V12, 0x79, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V153]

================================

Block 0x4c9
[0x4c9:0x4c9]
---
Predecessors: [0x4c8]
Successors: [0x4ca]
---
0x4c9 JUMPDEST
---
0x4c9: JUMPDEST 
---
Entry stack: [V12, 0x79, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x79, V153]

================================

Block 0x4ca
[0x4ca:0x4cc]
---
Predecessors: [0x4c9]
Successors: [0x79]
---
0x4ca JUMPDEST
0x4cb POP
0x4cc JUMP
---
0x4ca: JUMPDEST 
0x4cc: JUMP 0x79
---
Entry stack: [V12, 0x79, V153]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x4cd
[0x4cd:0x4f8]
---
Predecessors: []
Successors: []
---
0x4cd STOP
0x4ce LOG1
0x4cf PUSH6 0x627a7a723058
0x4d6 SHA3
0x4d7 MISSING 0x21
0x4d8 MISSING 0xd3
0x4d9 DIV
0x4da NUMBER
0x4db SWAP5
0x4dc MISSING 0xbc
0x4dd INVALID
0x4de MISSING 0xe0
0x4df MISSING 0x24
0x4e0 ADDRESS
0x4e1 MISSING 0xec
0x4e2 MISSING 0xcd
0x4e3 MISSING 0xc4
0x4e4 MISSING 0x1e
0x4e5 DUP11
0x4e6 MISSING 0xa5
0x4e7 GAS
0x4e8 MISSING 0xd2
0x4e9 GASLIMIT
0x4ea PUSH4 0x4f580e7e
0x4ef STOP
0x4f0 COINBASE
0x4f1 SWAP15
0x4f2 MISSING 0xbe
0x4f3 DUP14
0x4f4 LOG4
0x4f5 MISSING 0xba
0x4f6 MISSING 0xb3
0x4f7 STOP
0x4f8 MISSING 0x29
---
0x4cd: STOP 
0x4ce: LOG S0 S1 S2
0x4cf: V499 = 0x627a7a723058
0x4d6: V500 = SHA3 0x627a7a723058 S3
0x4d7: MISSING 0x21
0x4d8: MISSING 0xd3
0x4d9: V501 = DIV S0 S1
0x4da: V502 = NUMBER
0x4dc: MISSING 0xbc
0x4dd: INVALID 
0x4de: MISSING 0xe0
0x4df: MISSING 0x24
0x4e0: V503 = ADDRESS
0x4e1: MISSING 0xec
0x4e2: MISSING 0xcd
0x4e3: MISSING 0xc4
0x4e4: MISSING 0x1e
0x4e6: MISSING 0xa5
0x4e7: V504 = GAS
0x4e8: MISSING 0xd2
0x4e9: V505 = GASLIMIT
0x4ea: V506 = 0x4f580e7e
0x4ef: STOP 
0x4f0: V507 = COINBASE
0x4f2: MISSING 0xbe
0x4f4: LOG S13 S0 S1 S2 S3 S4
0x4f5: MISSING 0xba
0x4f6: MISSING 0xb3
0x4f7: STOP 
0x4f8: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V500, S5, V501, S2, S3, S4, V502, V503, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V504, 0x4f580e7e, V505, S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V507, S5, S6, S7, S8, S9, S10, S11, S12, S13]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x7b
Exit block: 0x79
Body: 0x76, 0x77, 0x79, 0x7b, 0x82, 0x86, 0x19f, 0x1b6, 0x1ba, 0x1c5

Function 1:
Public function signature: 0x4665096d
Entry block: 0x90
Exit block: 0xa3
Body: 0x90, 0x97, 0x9b, 0xa3, 0x1d6

Function 2:
Public function signature: 0x71a18bfb
Entry block: 0xb5
Exit block: 0x2e5
Body: 0xb5, 0xbc, 0xc0, 0xd4, 0x1dc, 0x1f4, 0x1f8, 0x208, 0x212, 0x276, 0x27a, 0x287, 0x28b, 0x2d4, 0x2d8, 0x2e5, 0x2e9, 0x2ed, 0x2ee, 0x2f2, 0x2f3

Function 3:
Public function signature: 0x842fc1a3
Entry block: 0xe8
Exit block: 0x406
Body: 0x79, 0xe8, 0xef, 0xf3, 0x2f8, 0x312, 0x316, 0x321, 0x376, 0x37a, 0x387, 0x38b, 0x3a0, 0x3f5, 0x3f9, 0x406, 0x40a, 0x40e, 0x40f, 0x410, 0x411

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x109
Exit block: 0x11c
Body: 0x109, 0x110, 0x114, 0x11c, 0x416

Function 5:
Public function signature: 0xb60d4288
Entry block: 0x138
Exit block: 0xd4
Body: 0xd4, 0x138, 0x425, 0x428

Function 6:
Public function signature: 0xdd467064
Entry block: 0x154
Exit block: 0xd4
Body: 0xd4, 0x154, 0x15b, 0x15f, 0x2f2, 0x2f3, 0x42b, 0x443, 0x447, 0x459, 0x460, 0x46f, 0x470

Function 7:
Public function signature: 0xf2fde38b
Entry block: 0x17e
Exit block: 0x79
Body: 0x79, 0x17e, 0x185, 0x189, 0x475, 0x48c, 0x490, 0x4a0, 0x4c8, 0x4c9, 0x4ca

Function 8:
Public fallback function
Entry block: 0x72
Exit block: 0x79
Body: 0x72, 0x76, 0x77, 0x79

