args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/1/100565.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x96]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x96
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x96
0xa: JUMPI 0x96 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x1c0]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x1cb3b20
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x1c0
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x1cb3b20
0x39: V12 = EQ V10 0x1cb3b20
0x3a: V13 = 0x1c0
0x3d: JUMPI 0x1c0 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x1d5]
---
0x3e DUP1
0x3f PUSH4 0x29dcb0cf
0x44 EQ
0x45 PUSH2 0x1d5
0x48 JUMPI
---
0x3f: V14 = 0x29dcb0cf
0x44: V15 = EQ 0x29dcb0cf V10
0x45: V16 = 0x1d5
0x48: JUMPI 0x1d5 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x1fa]
---
0x49 DUP1
0x4a PUSH4 0x38af3eed
0x4f EQ
0x50 PUSH2 0x1fa
0x53 JUMPI
---
0x4a: V17 = 0x38af3eed
0x4f: V18 = EQ 0x38af3eed V10
0x50: V19 = 0x1fa
0x53: JUMPI 0x1fa V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x229]
---
0x54 DUP1
0x55 PUSH4 0x6e66f6e9
0x5a EQ
0x5b PUSH2 0x229
0x5e JUMPI
---
0x55: V20 = 0x6e66f6e9
0x5a: V21 = EQ 0x6e66f6e9 V10
0x5b: V22 = 0x229
0x5e: JUMPI 0x229 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x258]
---
0x5f DUP1
0x60 PUSH4 0x70a08231
0x65 EQ
0x66 PUSH2 0x258
0x69 JUMPI
---
0x60: V23 = 0x70a08231
0x65: V24 = EQ 0x70a08231 V10
0x66: V25 = 0x258
0x69: JUMPI 0x258 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x289]
---
0x6a DUP1
0x6b PUSH4 0x7a3a0e84
0x70 EQ
0x71 PUSH2 0x289
0x74 JUMPI
---
0x6b: V26 = 0x7a3a0e84
0x70: V27 = EQ 0x7a3a0e84 V10
0x71: V28 = 0x289
0x74: JUMPI 0x289 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x2ae]
---
0x75 DUP1
0x76 PUSH4 0x7b3e5e7b
0x7b EQ
0x7c PUSH2 0x2ae
0x7f JUMPI
---
0x76: V29 = 0x7b3e5e7b
0x7b: V30 = EQ 0x7b3e5e7b V10
0x7c: V31 = 0x2ae
0x7f: JUMPI 0x2ae V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x2d3]
---
0x80 DUP1
0x81 PUSH4 0xa035b1fe
0x86 EQ
0x87 PUSH2 0x2d3
0x8a JUMPI
---
0x81: V32 = 0xa035b1fe
0x86: V33 = EQ 0xa035b1fe V10
0x87: V34 = 0x2d3
0x8a: JUMPI 0x2d3 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x2f8]
---
0x8b DUP1
0x8c PUSH4 0xfd6b7ef8
0x91 EQ
0x92 PUSH2 0x2f8
0x95 JUMPI
---
0x8c: V35 = 0xfd6b7ef8
0x91: V36 = EQ 0xfd6b7ef8 V10
0x92: V37 = 0x2f8
0x95: JUMPI 0x2f8 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0x99]
---
Predecessors: [0x0, 0x8b]
Successors: [0x9a]
---
0x96 JUMPDEST
0x97 PUSH2 0x1be
---
0x96: JUMPDEST 
0x97: V38 = 0x1be
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1be]
Exit stack: [V10, 0x1be]

================================

Block 0x9a
[0x9a:0xae]
---
Predecessors: [0x96]
Successors: [0xaf, 0xb3]
---
0x9a JUMPDEST
0x9b PUSH1 0x7
0x9d SLOAD
0x9e PUSH1 0x0
0xa0 SWAP1
0xa1 PUSH2 0x100
0xa4 SWAP1
0xa5 DIV
0xa6 PUSH1 0xff
0xa8 AND
0xa9 ISZERO
0xaa ISZERO
0xab PUSH2 0xb3
0xae JUMPI
---
0x9a: JUMPDEST 
0x9b: V39 = 0x7
0x9d: V40 = S[0x7]
0x9e: V41 = 0x0
0xa1: V42 = 0x100
0xa5: V43 = DIV V40 0x100
0xa6: V44 = 0xff
0xa8: V45 = AND 0xff V43
0xa9: V46 = ISZERO V45
0xaa: V47 = ISZERO V46
0xab: V48 = 0xb3
0xae: JUMPI 0xb3 V47
---
Entry stack: [V10, 0x1be]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1be, 0x0]

================================

Block 0xaf
[0xaf:0xb2]
---
Predecessors: [0x9a]
Successors: []
---
0xaf PUSH1 0x0
0xb1 DUP1
0xb2 REVERT
---
0xaf: V49 = 0x0
0xb2: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1be, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be, 0x0]

================================

Block 0xb3
[0xb3:0xf3]
---
Predecessors: [0x9a]
Successors: [0xf4, 0xf5]
---
0xb3 JUMPDEST
0xb4 POP
0xb5 PUSH1 0x1
0xb7 PUSH1 0xa0
0xb9 PUSH1 0x2
0xbb EXP
0xbc SUB
0xbd CALLER
0xbe DUP2
0xbf DUP2
0xc0 AND
0xc1 PUSH1 0x0
0xc3 SWAP1
0xc4 DUP2
0xc5 MSTORE
0xc6 PUSH1 0x6
0xc8 PUSH1 0x20
0xca MSTORE
0xcb PUSH1 0x40
0xcd SWAP1
0xce SHA3
0xcf CALLVALUE
0xd0 SWAP1
0xd1 DUP2
0xd2 SWAP1
0xd3 SSTORE
0xd4 PUSH1 0x2
0xd6 DUP1
0xd7 SLOAD
0xd8 DUP3
0xd9 ADD
0xda SWAP1
0xdb SSTORE
0xdc PUSH1 0x5
0xde SLOAD
0xdf PUSH1 0x4
0xe1 SLOAD
0xe2 SWAP2
0xe3 SWAP4
0xe4 AND
0xe5 SWAP2
0xe6 PUSH4 0xa9059cbb
0xeb SWAP2
0xec DUP5
0xed DUP2
0xee ISZERO
0xef ISZERO
0xf0 PUSH2 0xf5
0xf3 JUMPI
---
0xb3: JUMPDEST 
0xb5: V50 = 0x1
0xb7: V51 = 0xa0
0xb9: V52 = 0x2
0xbb: V53 = EXP 0x2 0xa0
0xbc: V54 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd: V55 = CALLER
0xc0: V56 = AND V55 0xffffffffffffffffffffffffffffffffffffffff
0xc1: V57 = 0x0
0xc5: M[0x0] = V56
0xc6: V58 = 0x6
0xc8: V59 = 0x20
0xca: M[0x20] = 0x6
0xcb: V60 = 0x40
0xce: V61 = SHA3 0x0 0x40
0xcf: V62 = CALLVALUE
0xd3: S[V61] = V62
0xd4: V63 = 0x2
0xd7: V64 = S[0x2]
0xd9: V65 = ADD V62 V64
0xdb: S[0x2] = V65
0xdc: V66 = 0x5
0xde: V67 = S[0x5]
0xdf: V68 = 0x4
0xe1: V69 = S[0x4]
0xe4: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0xe6: V71 = 0xa9059cbb
0xee: V72 = ISZERO V69
0xef: V73 = ISZERO V72
0xf0: V74 = 0xf5
0xf3: JUMPI 0xf5 V73
---
Entry stack: [V10, 0x1be, 0x0]
Stack pops: 1
Stack additions: [V62, V70, 0xa9059cbb, V55, V69, V62]
Exit stack: [V10, 0x1be, V62, V70, 0xa9059cbb, V55, V69, V62]

================================

Block 0xf4
[0xf4:0xf4]
---
Predecessors: [0xb3]
Successors: []
---
0xf4 INVALID
---
0xf4: INVALID 
---
Entry stack: [V10, 0x1be, V62, V70, 0xa9059cbb, V55, V69, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be, V62, V70, 0xa9059cbb, V55, V69, V62]

================================

Block 0xf5
[0xf5:0x14d]
---
Predecessors: [0xb3]
Successors: [0x14e, 0x152]
---
0xf5 JUMPDEST
0xf6 DIV
0xf7 PUSH1 0x40
0xf9 MLOAD
0xfa PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x118 PUSH4 0xffffffff
0x11d DUP6
0x11e AND
0x11f MUL
0x120 DUP2
0x121 MSTORE
0x122 PUSH1 0x1
0x124 PUSH1 0xa0
0x126 PUSH1 0x2
0x128 EXP
0x129 SUB
0x12a SWAP1
0x12b SWAP3
0x12c AND
0x12d PUSH1 0x4
0x12f DUP4
0x130 ADD
0x131 MSTORE
0x132 PUSH1 0x24
0x134 DUP3
0x135 ADD
0x136 MSTORE
0x137 PUSH1 0x44
0x139 ADD
0x13a PUSH1 0x0
0x13c PUSH1 0x40
0x13e MLOAD
0x13f DUP1
0x140 DUP4
0x141 SUB
0x142 DUP2
0x143 PUSH1 0x0
0x145 DUP8
0x146 DUP1
0x147 EXTCODESIZE
0x148 ISZERO
0x149 ISZERO
0x14a PUSH2 0x152
0x14d JUMPI
---
0xf5: JUMPDEST 
0xf6: V75 = DIV V62 V69
0xf7: V76 = 0x40
0xf9: V77 = M[0x40]
0xfa: V78 = 0x100000000000000000000000000000000000000000000000000000000
0x118: V79 = 0xffffffff
0x11e: V80 = AND 0xa9059cbb 0xffffffff
0x11f: V81 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x121: M[V77] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x122: V82 = 0x1
0x124: V83 = 0xa0
0x126: V84 = 0x2
0x128: V85 = EXP 0x2 0xa0
0x129: V86 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12c: V87 = AND V55 0xffffffffffffffffffffffffffffffffffffffff
0x12d: V88 = 0x4
0x130: V89 = ADD V77 0x4
0x131: M[V89] = V87
0x132: V90 = 0x24
0x135: V91 = ADD V77 0x24
0x136: M[V91] = V75
0x137: V92 = 0x44
0x139: V93 = ADD 0x44 V77
0x13a: V94 = 0x0
0x13c: V95 = 0x40
0x13e: V96 = M[0x40]
0x141: V97 = SUB V93 V96
0x143: V98 = 0x0
0x147: V99 = EXTCODESIZE V70
0x148: V100 = ISZERO V99
0x149: V101 = ISZERO V100
0x14a: V102 = 0x152
0x14d: JUMPI 0x152 V101
---
Entry stack: [V10, 0x1be, V62, V70, 0xa9059cbb, V55, V69, V62]
Stack pops: 5
Stack additions: [S4, S3, V93, 0x0, V96, V97, V96, 0x0, S4]
Exit stack: [V10, 0x1be, V62, V70, 0xa9059cbb, V93, 0x0, V96, V97, V96, 0x0, V70]

================================

Block 0x14e
[0x14e:0x151]
---
Predecessors: [0xf5]
Successors: []
---
0x14e PUSH1 0x0
0x150 DUP1
0x151 REVERT
---
0x14e: V103 = 0x0
0x151: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1be, V62, V70, 0xa9059cbb, V93, 0x0, V96, V97, V96, 0x0, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be, V62, V70, 0xa9059cbb, V93, 0x0, V96, V97, V96, 0x0, V70]

================================

Block 0x152
[0x152:0x15e]
---
Predecessors: [0xf5]
Successors: [0x15f, 0x163]
---
0x152 JUMPDEST
0x153 PUSH2 0x2c6
0x156 GAS
0x157 SUB
0x158 CALL
0x159 ISZERO
0x15a ISZERO
0x15b PUSH2 0x163
0x15e JUMPI
---
0x152: JUMPDEST 
0x153: V104 = 0x2c6
0x156: V105 = GAS
0x157: V106 = SUB V105 0x2c6
0x158: V107 = CALL V106 V70 0x0 V96 V97 V96 0x0
0x159: V108 = ISZERO V107
0x15a: V109 = ISZERO V108
0x15b: V110 = 0x163
0x15e: JUMPI 0x163 V109
---
Entry stack: [V10, 0x1be, V62, V70, 0xa9059cbb, V93, 0x0, V96, V97, V96, 0x0, V70]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1be, V62, V70, 0xa9059cbb, V93]

================================

Block 0x15f
[0x15f:0x162]
---
Predecessors: [0x152]
Successors: []
---
0x15f PUSH1 0x0
0x161 DUP1
0x162 REVERT
---
0x15f: V111 = 0x0
0x162: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1be, V62, V70, 0xa9059cbb, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be, V62, V70, 0xa9059cbb, V93]

================================

Block 0x163
[0x163:0x1ba]
---
Predecessors: [0x152]
Successors: [0x1bb]
---
0x163 JUMPDEST
0x164 POP
0x165 POP
0x166 POP
0x167 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x188 CALLER
0x189 DUP3
0x18a PUSH1 0x1
0x18c PUSH1 0x40
0x18e MLOAD
0x18f PUSH1 0x1
0x191 PUSH1 0xa0
0x193 PUSH1 0x2
0x195 EXP
0x196 SUB
0x197 SWAP1
0x198 SWAP4
0x199 AND
0x19a DUP4
0x19b MSTORE
0x19c PUSH1 0x20
0x19e DUP4
0x19f ADD
0x1a0 SWAP2
0x1a1 SWAP1
0x1a2 SWAP2
0x1a3 MSTORE
0x1a4 ISZERO
0x1a5 ISZERO
0x1a6 PUSH1 0x40
0x1a8 DUP1
0x1a9 DUP4
0x1aa ADD
0x1ab SWAP2
0x1ac SWAP1
0x1ad SWAP2
0x1ae MSTORE
0x1af PUSH1 0x60
0x1b1 SWAP1
0x1b2 SWAP2
0x1b3 ADD
0x1b4 SWAP1
0x1b5 MLOAD
0x1b6 DUP1
0x1b7 SWAP2
0x1b8 SUB
0x1b9 SWAP1
0x1ba LOG1
---
0x163: JUMPDEST 
0x167: V112 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x188: V113 = CALLER
0x18a: V114 = 0x1
0x18c: V115 = 0x40
0x18e: V116 = M[0x40]
0x18f: V117 = 0x1
0x191: V118 = 0xa0
0x193: V119 = 0x2
0x195: V120 = EXP 0x2 0xa0
0x196: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x199: V122 = AND V113 0xffffffffffffffffffffffffffffffffffffffff
0x19b: M[V116] = V122
0x19c: V123 = 0x20
0x19f: V124 = ADD V116 0x20
0x1a3: M[V124] = V62
0x1a4: V125 = ISZERO 0x1
0x1a5: V126 = ISZERO 0x0
0x1a6: V127 = 0x40
0x1aa: V128 = ADD V116 0x40
0x1ae: M[V128] = 0x1
0x1af: V129 = 0x60
0x1b3: V130 = ADD V116 0x60
0x1b5: V131 = M[0x40]
0x1b8: V132 = SUB V130 V131
0x1ba: LOG V131 V132 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, 0x1be, V62, V70, 0xa9059cbb, V93]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x1be, V62]

================================

Block 0x1bb
[0x1bb:0x1bd]
---
Predecessors: [0x163, 0x3de, 0x4df, 0x518]
Successors: [0x1be]
---
0x1bb JUMPDEST
0x1bc POP
0x1bd JUMP
---
0x1bb: JUMPDEST 
0x1bd: JUMP 0x1be
---
Entry stack: [V10, 0x1be, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1be
[0x1be:0x1bf]
---
Predecessors: [0x1bb, 0x394, 0x58f]
Successors: []
---
0x1be JUMPDEST
0x1bf STOP
---
0x1be: JUMPDEST 
0x1bf: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c0
[0x1c0:0x1c6]
---
Predecessors: [0xb]
Successors: [0x1c7, 0x1cb]
---
0x1c0 JUMPDEST
0x1c1 CALLVALUE
0x1c2 ISZERO
0x1c3 PUSH2 0x1cb
0x1c6 JUMPI
---
0x1c0: JUMPDEST 
0x1c1: V133 = CALLVALUE
0x1c2: V134 = ISZERO V133
0x1c3: V135 = 0x1cb
0x1c6: JUMPI 0x1cb V134
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c7
[0x1c7:0x1ca]
---
Predecessors: [0x1c0]
Successors: []
---
0x1c7 PUSH1 0x0
0x1c9 DUP1
0x1ca REVERT
---
0x1c7: V136 = 0x0
0x1ca: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cb
[0x1cb:0x1d2]
---
Predecessors: [0x1c0]
Successors: [0x30d]
---
0x1cb JUMPDEST
0x1cc PUSH2 0x1be
0x1cf PUSH2 0x30d
0x1d2 JUMP
---
0x1cb: JUMPDEST 
0x1cc: V137 = 0x1be
0x1cf: V138 = 0x30d
0x1d2: JUMP 0x30d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1be]
Exit stack: [V10, 0x1be]

================================

Block 0x1d3
[0x1d3:0x1d4]
---
Predecessors: []
Successors: []
---
0x1d3 JUMPDEST
0x1d4 STOP
---
0x1d3: JUMPDEST 
0x1d4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d5
[0x1d5:0x1db]
---
Predecessors: [0x3e]
Successors: [0x1dc, 0x1e0]
---
0x1d5 JUMPDEST
0x1d6 CALLVALUE
0x1d7 ISZERO
0x1d8 PUSH2 0x1e0
0x1db JUMPI
---
0x1d5: JUMPDEST 
0x1d6: V139 = CALLVALUE
0x1d7: V140 = ISZERO V139
0x1d8: V141 = 0x1e0
0x1db: JUMPI 0x1e0 V140
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1dc
[0x1dc:0x1df]
---
Predecessors: [0x1d5]
Successors: []
---
0x1dc PUSH1 0x0
0x1de DUP1
0x1df REVERT
---
0x1dc: V142 = 0x0
0x1df: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e0
[0x1e0:0x1e7]
---
Predecessors: [0x1d5]
Successors: [0x396]
---
0x1e0 JUMPDEST
0x1e1 PUSH2 0x1e8
0x1e4 PUSH2 0x396
0x1e7 JUMP
---
0x1e0: JUMPDEST 
0x1e1: V143 = 0x1e8
0x1e4: V144 = 0x396
0x1e7: JUMP 0x396
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e8]
Exit stack: [V10, 0x1e8]

================================

Block 0x1e8
[0x1e8:0x1f9]
---
Predecessors: [0x396, 0x3ba, 0x3cc, 0x3d2, 0x3d8]
Successors: []
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x40
0x1eb MLOAD
0x1ec SWAP1
0x1ed DUP2
0x1ee MSTORE
0x1ef PUSH1 0x20
0x1f1 ADD
0x1f2 PUSH1 0x40
0x1f4 MLOAD
0x1f5 DUP1
0x1f6 SWAP2
0x1f7 SUB
0x1f8 SWAP1
0x1f9 RETURN
---
0x1e8: JUMPDEST 
0x1e9: V145 = 0x40
0x1eb: V146 = M[0x40]
0x1ee: M[V146] = S0
0x1ef: V147 = 0x20
0x1f1: V148 = ADD 0x20 V146
0x1f2: V149 = 0x40
0x1f4: V150 = M[0x40]
0x1f7: V151 = SUB V148 V150
0x1f9: RETURN V150 V151
---
Entry stack: [V10, 0x1e8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1e8]

================================

Block 0x1fa
[0x1fa:0x200]
---
Predecessors: [0x49]
Successors: [0x201, 0x205]
---
0x1fa JUMPDEST
0x1fb CALLVALUE
0x1fc ISZERO
0x1fd PUSH2 0x205
0x200 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V152 = CALLVALUE
0x1fc: V153 = ISZERO V152
0x1fd: V154 = 0x205
0x200: JUMPI 0x205 V153
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x201
[0x201:0x204]
---
Predecessors: [0x1fa]
Successors: []
---
0x201 PUSH1 0x0
0x203 DUP1
0x204 REVERT
---
0x201: V155 = 0x0
0x204: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x205
[0x205:0x20c]
---
Predecessors: [0x1fa]
Successors: [0x39c]
---
0x205 JUMPDEST
0x206 PUSH2 0x20d
0x209 PUSH2 0x39c
0x20c JUMP
---
0x205: JUMPDEST 
0x206: V156 = 0x20d
0x209: V157 = 0x39c
0x20c: JUMP 0x39c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x20d]
Exit stack: [V10, 0x20d]

================================

Block 0x20d
[0x20d:0x228]
---
Predecessors: [0x39c, 0x3ab]
Successors: []
---
0x20d JUMPDEST
0x20e PUSH1 0x40
0x210 MLOAD
0x211 PUSH1 0x1
0x213 PUSH1 0xa0
0x215 PUSH1 0x2
0x217 EXP
0x218 SUB
0x219 SWAP1
0x21a SWAP2
0x21b AND
0x21c DUP2
0x21d MSTORE
0x21e PUSH1 0x20
0x220 ADD
0x221 PUSH1 0x40
0x223 MLOAD
0x224 DUP1
0x225 SWAP2
0x226 SUB
0x227 SWAP1
0x228 RETURN
---
0x20d: JUMPDEST 
0x20e: V158 = 0x40
0x210: V159 = M[0x40]
0x211: V160 = 0x1
0x213: V161 = 0xa0
0x215: V162 = 0x2
0x217: V163 = EXP 0x2 0xa0
0x218: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21b: V165 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x21d: M[V159] = V165
0x21e: V166 = 0x20
0x220: V167 = ADD 0x20 V159
0x221: V168 = 0x40
0x223: V169 = M[0x40]
0x226: V170 = SUB V167 V169
0x228: RETURN V169 V170
---
Entry stack: [V10, 0x20d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x20d]

================================

Block 0x229
[0x229:0x22f]
---
Predecessors: [0x54]
Successors: [0x230, 0x234]
---
0x229 JUMPDEST
0x22a CALLVALUE
0x22b ISZERO
0x22c PUSH2 0x234
0x22f JUMPI
---
0x229: JUMPDEST 
0x22a: V171 = CALLVALUE
0x22b: V172 = ISZERO V171
0x22c: V173 = 0x234
0x22f: JUMPI 0x234 V172
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x230
[0x230:0x233]
---
Predecessors: [0x229]
Successors: []
---
0x230 PUSH1 0x0
0x232 DUP1
0x233 REVERT
---
0x230: V174 = 0x0
0x233: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x234
[0x234:0x23b]
---
Predecessors: [0x229]
Successors: [0x3ab]
---
0x234 JUMPDEST
0x235 PUSH2 0x20d
0x238 PUSH2 0x3ab
0x23b JUMP
---
0x234: JUMPDEST 
0x235: V175 = 0x20d
0x238: V176 = 0x3ab
0x23b: JUMP 0x3ab
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x20d]
Exit stack: [V10, 0x20d]

================================

Block 0x23c
[0x23c:0x257]
---
Predecessors: []
Successors: []
---
0x23c JUMPDEST
0x23d PUSH1 0x40
0x23f MLOAD
0x240 PUSH1 0x1
0x242 PUSH1 0xa0
0x244 PUSH1 0x2
0x246 EXP
0x247 SUB
0x248 SWAP1
0x249 SWAP2
0x24a AND
0x24b DUP2
0x24c MSTORE
0x24d PUSH1 0x20
0x24f ADD
0x250 PUSH1 0x40
0x252 MLOAD
0x253 DUP1
0x254 SWAP2
0x255 SUB
0x256 SWAP1
0x257 RETURN
---
0x23c: JUMPDEST 
0x23d: V177 = 0x40
0x23f: V178 = M[0x40]
0x240: V179 = 0x1
0x242: V180 = 0xa0
0x244: V181 = 0x2
0x246: V182 = EXP 0x2 0xa0
0x247: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24a: V184 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x24c: M[V178] = V184
0x24d: V185 = 0x20
0x24f: V186 = ADD 0x20 V178
0x250: V187 = 0x40
0x252: V188 = M[0x40]
0x255: V189 = SUB V186 V188
0x257: RETURN V188 V189
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x258
[0x258:0x25e]
---
Predecessors: [0x5f]
Successors: [0x25f, 0x263]
---
0x258 JUMPDEST
0x259 CALLVALUE
0x25a ISZERO
0x25b PUSH2 0x263
0x25e JUMPI
---
0x258: JUMPDEST 
0x259: V190 = CALLVALUE
0x25a: V191 = ISZERO V190
0x25b: V192 = 0x263
0x25e: JUMPI 0x263 V191
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x25f
[0x25f:0x262]
---
Predecessors: [0x258]
Successors: []
---
0x25f PUSH1 0x0
0x261 DUP1
0x262 REVERT
---
0x25f: V193 = 0x0
0x262: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x263
[0x263:0x276]
---
Predecessors: [0x258]
Successors: [0x3ba]
---
0x263 JUMPDEST
0x264 PUSH2 0x1e8
0x267 PUSH1 0x1
0x269 PUSH1 0xa0
0x26b PUSH1 0x2
0x26d EXP
0x26e SUB
0x26f PUSH1 0x4
0x271 CALLDATALOAD
0x272 AND
0x273 PUSH2 0x3ba
0x276 JUMP
---
0x263: JUMPDEST 
0x264: V194 = 0x1e8
0x267: V195 = 0x1
0x269: V196 = 0xa0
0x26b: V197 = 0x2
0x26d: V198 = EXP 0x2 0xa0
0x26e: V199 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26f: V200 = 0x4
0x271: V201 = CALLDATALOAD 0x4
0x272: V202 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x273: V203 = 0x3ba
0x276: JUMP 0x3ba
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e8, V202]
Exit stack: [V10, 0x1e8, V202]

================================

Block 0x277
[0x277:0x288]
---
Predecessors: []
Successors: []
---
0x277 JUMPDEST
0x278 PUSH1 0x40
0x27a MLOAD
0x27b SWAP1
0x27c DUP2
0x27d MSTORE
0x27e PUSH1 0x20
0x280 ADD
0x281 PUSH1 0x40
0x283 MLOAD
0x284 DUP1
0x285 SWAP2
0x286 SUB
0x287 SWAP1
0x288 RETURN
---
0x277: JUMPDEST 
0x278: V204 = 0x40
0x27a: V205 = M[0x40]
0x27d: M[V205] = S0
0x27e: V206 = 0x20
0x280: V207 = ADD 0x20 V205
0x281: V208 = 0x40
0x283: V209 = M[0x40]
0x286: V210 = SUB V207 V209
0x288: RETURN V209 V210
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x289
[0x289:0x28f]
---
Predecessors: [0x6a]
Successors: [0x290, 0x294]
---
0x289 JUMPDEST
0x28a CALLVALUE
0x28b ISZERO
0x28c PUSH2 0x294
0x28f JUMPI
---
0x289: JUMPDEST 
0x28a: V211 = CALLVALUE
0x28b: V212 = ISZERO V211
0x28c: V213 = 0x294
0x28f: JUMPI 0x294 V212
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x290
[0x290:0x293]
---
Predecessors: [0x289]
Successors: []
---
0x290 PUSH1 0x0
0x292 DUP1
0x293 REVERT
---
0x290: V214 = 0x0
0x293: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x294
[0x294:0x29b]
---
Predecessors: [0x289]
Successors: [0x3cc]
---
0x294 JUMPDEST
0x295 PUSH2 0x1e8
0x298 PUSH2 0x3cc
0x29b JUMP
---
0x294: JUMPDEST 
0x295: V215 = 0x1e8
0x298: V216 = 0x3cc
0x29b: JUMP 0x3cc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e8]
Exit stack: [V10, 0x1e8]

================================

Block 0x29c
[0x29c:0x2ad]
---
Predecessors: []
Successors: []
---
0x29c JUMPDEST
0x29d PUSH1 0x40
0x29f MLOAD
0x2a0 SWAP1
0x2a1 DUP2
0x2a2 MSTORE
0x2a3 PUSH1 0x20
0x2a5 ADD
0x2a6 PUSH1 0x40
0x2a8 MLOAD
0x2a9 DUP1
0x2aa SWAP2
0x2ab SUB
0x2ac SWAP1
0x2ad RETURN
---
0x29c: JUMPDEST 
0x29d: V217 = 0x40
0x29f: V218 = M[0x40]
0x2a2: M[V218] = S0
0x2a3: V219 = 0x20
0x2a5: V220 = ADD 0x20 V218
0x2a6: V221 = 0x40
0x2a8: V222 = M[0x40]
0x2ab: V223 = SUB V220 V222
0x2ad: RETURN V222 V223
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ae
[0x2ae:0x2b4]
---
Predecessors: [0x75]
Successors: [0x2b5, 0x2b9]
---
0x2ae JUMPDEST
0x2af CALLVALUE
0x2b0 ISZERO
0x2b1 PUSH2 0x2b9
0x2b4 JUMPI
---
0x2ae: JUMPDEST 
0x2af: V224 = CALLVALUE
0x2b0: V225 = ISZERO V224
0x2b1: V226 = 0x2b9
0x2b4: JUMPI 0x2b9 V225
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b5
[0x2b5:0x2b8]
---
Predecessors: [0x2ae]
Successors: []
---
0x2b5 PUSH1 0x0
0x2b7 DUP1
0x2b8 REVERT
---
0x2b5: V227 = 0x0
0x2b8: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b9
[0x2b9:0x2c0]
---
Predecessors: [0x2ae]
Successors: [0x3d2]
---
0x2b9 JUMPDEST
0x2ba PUSH2 0x1e8
0x2bd PUSH2 0x3d2
0x2c0 JUMP
---
0x2b9: JUMPDEST 
0x2ba: V228 = 0x1e8
0x2bd: V229 = 0x3d2
0x2c0: JUMP 0x3d2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e8]
Exit stack: [V10, 0x1e8]

================================

Block 0x2c1
[0x2c1:0x2d2]
---
Predecessors: []
Successors: []
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x40
0x2c4 MLOAD
0x2c5 SWAP1
0x2c6 DUP2
0x2c7 MSTORE
0x2c8 PUSH1 0x20
0x2ca ADD
0x2cb PUSH1 0x40
0x2cd MLOAD
0x2ce DUP1
0x2cf SWAP2
0x2d0 SUB
0x2d1 SWAP1
0x2d2 RETURN
---
0x2c1: JUMPDEST 
0x2c2: V230 = 0x40
0x2c4: V231 = M[0x40]
0x2c7: M[V231] = S0
0x2c8: V232 = 0x20
0x2ca: V233 = ADD 0x20 V231
0x2cb: V234 = 0x40
0x2cd: V235 = M[0x40]
0x2d0: V236 = SUB V233 V235
0x2d2: RETURN V235 V236
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d3
[0x2d3:0x2d9]
---
Predecessors: [0x80]
Successors: [0x2da, 0x2de]
---
0x2d3 JUMPDEST
0x2d4 CALLVALUE
0x2d5 ISZERO
0x2d6 PUSH2 0x2de
0x2d9 JUMPI
---
0x2d3: JUMPDEST 
0x2d4: V237 = CALLVALUE
0x2d5: V238 = ISZERO V237
0x2d6: V239 = 0x2de
0x2d9: JUMPI 0x2de V238
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2da
[0x2da:0x2dd]
---
Predecessors: [0x2d3]
Successors: []
---
0x2da PUSH1 0x0
0x2dc DUP1
0x2dd REVERT
---
0x2da: V240 = 0x0
0x2dd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2de
[0x2de:0x2e5]
---
Predecessors: [0x2d3]
Successors: [0x3d8]
---
0x2de JUMPDEST
0x2df PUSH2 0x1e8
0x2e2 PUSH2 0x3d8
0x2e5 JUMP
---
0x2de: JUMPDEST 
0x2df: V241 = 0x1e8
0x2e2: V242 = 0x3d8
0x2e5: JUMP 0x3d8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e8]
Exit stack: [V10, 0x1e8]

================================

Block 0x2e6
[0x2e6:0x2f7]
---
Predecessors: []
Successors: []
---
0x2e6 JUMPDEST
0x2e7 PUSH1 0x40
0x2e9 MLOAD
0x2ea SWAP1
0x2eb DUP2
0x2ec MSTORE
0x2ed PUSH1 0x20
0x2ef ADD
0x2f0 PUSH1 0x40
0x2f2 MLOAD
0x2f3 DUP1
0x2f4 SWAP2
0x2f5 SUB
0x2f6 SWAP1
0x2f7 RETURN
---
0x2e6: JUMPDEST 
0x2e7: V243 = 0x40
0x2e9: V244 = M[0x40]
0x2ec: M[V244] = S0
0x2ed: V245 = 0x20
0x2ef: V246 = ADD 0x20 V244
0x2f0: V247 = 0x40
0x2f2: V248 = M[0x40]
0x2f5: V249 = SUB V246 V248
0x2f7: RETURN V248 V249
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f8
[0x2f8:0x2fe]
---
Predecessors: [0x8b]
Successors: [0x2ff, 0x303]
---
0x2f8 JUMPDEST
0x2f9 CALLVALUE
0x2fa ISZERO
0x2fb PUSH2 0x303
0x2fe JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V250 = CALLVALUE
0x2fa: V251 = ISZERO V250
0x2fb: V252 = 0x303
0x2fe: JUMPI 0x303 V251
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ff
[0x2ff:0x302]
---
Predecessors: [0x2f8]
Successors: []
---
0x2ff PUSH1 0x0
0x301 DUP1
0x302 REVERT
---
0x2ff: V253 = 0x0
0x302: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x303
[0x303:0x30a]
---
Predecessors: [0x2f8]
Successors: [0x3de]
---
0x303 JUMPDEST
0x304 PUSH2 0x1be
0x307 PUSH2 0x3de
0x30a JUMP
---
0x303: JUMPDEST 
0x304: V254 = 0x1be
0x307: V255 = 0x3de
0x30a: JUMP 0x3de
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1be]
Exit stack: [V10, 0x1be]

================================

Block 0x30b
[0x30b:0x30c]
---
Predecessors: []
Successors: []
---
0x30b JUMPDEST
0x30c STOP
---
0x30b: JUMPDEST 
0x30c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x30d
[0x30d:0x316]
---
Predecessors: [0x1cb]
Successors: [0x317, 0x392]
---
0x30d JUMPDEST
0x30e PUSH1 0x3
0x310 SLOAD
0x311 TIMESTAMP
0x312 LT
0x313 PUSH2 0x392
0x316 JUMPI
---
0x30d: JUMPDEST 
0x30e: V256 = 0x3
0x310: V257 = S[0x3]
0x311: V258 = TIMESTAMP
0x312: V259 = LT V258 V257
0x313: V260 = 0x392
0x316: JUMPI 0x392 V259
---
Entry stack: [V10, 0x1be]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be]

================================

Block 0x317
[0x317:0x321]
---
Predecessors: [0x30d]
Successors: [0x322, 0x382]
---
0x317 PUSH1 0x1
0x319 SLOAD
0x31a PUSH1 0x2
0x31c SLOAD
0x31d LT
0x31e PUSH2 0x382
0x321 JUMPI
---
0x317: V261 = 0x1
0x319: V262 = S[0x1]
0x31a: V263 = 0x2
0x31c: V264 = S[0x2]
0x31d: V265 = LT V264 V262
0x31e: V266 = 0x382
0x321: JUMPI 0x382 V265
---
Entry stack: [V10, 0x1be]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be]

================================

Block 0x322
[0x322:0x381]
---
Predecessors: [0x317]
Successors: [0x382]
---
0x322 PUSH1 0x7
0x324 DUP1
0x325 SLOAD
0x326 PUSH1 0xff
0x328 NOT
0x329 AND
0x32a PUSH1 0x1
0x32c OR
0x32d SWAP1
0x32e SSTORE
0x32f PUSH1 0x0
0x331 SLOAD
0x332 PUSH1 0x2
0x334 SLOAD
0x335 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x356 SWAP2
0x357 PUSH1 0x1
0x359 PUSH1 0xa0
0x35b PUSH1 0x2
0x35d EXP
0x35e SUB
0x35f AND
0x360 SWAP1
0x361 PUSH1 0x40
0x363 MLOAD
0x364 PUSH1 0x1
0x366 PUSH1 0xa0
0x368 PUSH1 0x2
0x36a EXP
0x36b SUB
0x36c SWAP1
0x36d SWAP3
0x36e AND
0x36f DUP3
0x370 MSTORE
0x371 PUSH1 0x20
0x373 DUP3
0x374 ADD
0x375 MSTORE
0x376 PUSH1 0x40
0x378 SWAP1
0x379 DUP2
0x37a ADD
0x37b SWAP1
0x37c MLOAD
0x37d DUP1
0x37e SWAP2
0x37f SUB
0x380 SWAP1
0x381 LOG1
---
0x322: V267 = 0x7
0x325: V268 = S[0x7]
0x326: V269 = 0xff
0x328: V270 = NOT 0xff
0x329: V271 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V268
0x32a: V272 = 0x1
0x32c: V273 = OR 0x1 V271
0x32e: S[0x7] = V273
0x32f: V274 = 0x0
0x331: V275 = S[0x0]
0x332: V276 = 0x2
0x334: V277 = S[0x2]
0x335: V278 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x357: V279 = 0x1
0x359: V280 = 0xa0
0x35b: V281 = 0x2
0x35d: V282 = EXP 0x2 0xa0
0x35e: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35f: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x361: V285 = 0x40
0x363: V286 = M[0x40]
0x364: V287 = 0x1
0x366: V288 = 0xa0
0x368: V289 = 0x2
0x36a: V290 = EXP 0x2 0xa0
0x36b: V291 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36e: V292 = AND V284 0xffffffffffffffffffffffffffffffffffffffff
0x370: M[V286] = V292
0x371: V293 = 0x20
0x374: V294 = ADD V286 0x20
0x375: M[V294] = V277
0x376: V295 = 0x40
0x37a: V296 = ADD 0x40 V286
0x37c: V297 = M[0x40]
0x37f: V298 = SUB V296 V297
0x381: LOG V297 V298 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V10, 0x1be]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be]

================================

Block 0x382
[0x382:0x391]
---
Predecessors: [0x317, 0x322]
Successors: [0x392]
---
0x382 JUMPDEST
0x383 PUSH1 0x7
0x385 DUP1
0x386 SLOAD
0x387 PUSH2 0xff00
0x38a NOT
0x38b AND
0x38c PUSH2 0x100
0x38f OR
0x390 SWAP1
0x391 SSTORE
---
0x382: JUMPDEST 
0x383: V299 = 0x7
0x386: V300 = S[0x7]
0x387: V301 = 0xff00
0x38a: V302 = NOT 0xff00
0x38b: V303 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V300
0x38c: V304 = 0x100
0x38f: V305 = OR 0x100 V303
0x391: S[0x7] = V305
---
Entry stack: [V10, 0x1be]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be]

================================

Block 0x392
[0x392:0x392]
---
Predecessors: [0x30d, 0x382]
Successors: [0x393]
---
0x392 JUMPDEST
---
0x392: JUMPDEST 
---
Entry stack: [V10, 0x1be]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be]

================================

Block 0x393
[0x393:0x393]
---
Predecessors: [0x392]
Successors: [0x394]
---
0x393 JUMPDEST
---
0x393: JUMPDEST 
---
Entry stack: [V10, 0x1be]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be]

================================

Block 0x394
[0x394:0x395]
---
Predecessors: [0x393]
Successors: [0x1be]
---
0x394 JUMPDEST
0x395 JUMP
---
0x394: JUMPDEST 
0x395: JUMP 0x1be
---
Entry stack: [V10, 0x1be]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x396
[0x396:0x39b]
---
Predecessors: [0x1e0]
Successors: [0x1e8]
---
0x396 JUMPDEST
0x397 PUSH1 0x3
0x399 SLOAD
0x39a DUP2
0x39b JUMP
---
0x396: JUMPDEST 
0x397: V306 = 0x3
0x399: V307 = S[0x3]
0x39b: JUMP 0x1e8
---
Entry stack: [V10, 0x1e8]
Stack pops: 1
Stack additions: [S0, V307]
Exit stack: [V10, 0x1e8, V307]

================================

Block 0x39c
[0x39c:0x3aa]
---
Predecessors: [0x205]
Successors: [0x20d]
---
0x39c JUMPDEST
0x39d PUSH1 0x0
0x39f SLOAD
0x3a0 PUSH1 0x1
0x3a2 PUSH1 0xa0
0x3a4 PUSH1 0x2
0x3a6 EXP
0x3a7 SUB
0x3a8 AND
0x3a9 DUP2
0x3aa JUMP
---
0x39c: JUMPDEST 
0x39d: V308 = 0x0
0x39f: V309 = S[0x0]
0x3a0: V310 = 0x1
0x3a2: V311 = 0xa0
0x3a4: V312 = 0x2
0x3a6: V313 = EXP 0x2 0xa0
0x3a7: V314 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a8: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x3aa: JUMP 0x20d
---
Entry stack: [V10, 0x20d]
Stack pops: 1
Stack additions: [S0, V315]
Exit stack: [V10, 0x20d, V315]

================================

Block 0x3ab
[0x3ab:0x3b9]
---
Predecessors: [0x234]
Successors: [0x20d]
---
0x3ab JUMPDEST
0x3ac PUSH1 0x5
0x3ae SLOAD
0x3af PUSH1 0x1
0x3b1 PUSH1 0xa0
0x3b3 PUSH1 0x2
0x3b5 EXP
0x3b6 SUB
0x3b7 AND
0x3b8 DUP2
0x3b9 JUMP
---
0x3ab: JUMPDEST 
0x3ac: V316 = 0x5
0x3ae: V317 = S[0x5]
0x3af: V318 = 0x1
0x3b1: V319 = 0xa0
0x3b3: V320 = 0x2
0x3b5: V321 = EXP 0x2 0xa0
0x3b6: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b7: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x3b9: JUMP 0x20d
---
Entry stack: [V10, 0x20d]
Stack pops: 1
Stack additions: [S0, V323]
Exit stack: [V10, 0x20d, V323]

================================

Block 0x3ba
[0x3ba:0x3cb]
---
Predecessors: [0x263]
Successors: [0x1e8]
---
0x3ba JUMPDEST
0x3bb PUSH1 0x6
0x3bd PUSH1 0x20
0x3bf MSTORE
0x3c0 PUSH1 0x0
0x3c2 SWAP1
0x3c3 DUP2
0x3c4 MSTORE
0x3c5 PUSH1 0x40
0x3c7 SWAP1
0x3c8 SHA3
0x3c9 SLOAD
0x3ca DUP2
0x3cb JUMP
---
0x3ba: JUMPDEST 
0x3bb: V324 = 0x6
0x3bd: V325 = 0x20
0x3bf: M[0x20] = 0x6
0x3c0: V326 = 0x0
0x3c4: M[0x0] = V202
0x3c5: V327 = 0x40
0x3c8: V328 = SHA3 0x0 0x40
0x3c9: V329 = S[V328]
0x3cb: JUMP 0x1e8
---
Entry stack: [V10, 0x1e8, V202]
Stack pops: 2
Stack additions: [S1, V329]
Exit stack: [V10, 0x1e8, V329]

================================

Block 0x3cc
[0x3cc:0x3d1]
---
Predecessors: [0x294]
Successors: [0x1e8]
---
0x3cc JUMPDEST
0x3cd PUSH1 0x1
0x3cf SLOAD
0x3d0 DUP2
0x3d1 JUMP
---
0x3cc: JUMPDEST 
0x3cd: V330 = 0x1
0x3cf: V331 = S[0x1]
0x3d1: JUMP 0x1e8
---
Entry stack: [V10, 0x1e8]
Stack pops: 1
Stack additions: [S0, V331]
Exit stack: [V10, 0x1e8, V331]

================================

Block 0x3d2
[0x3d2:0x3d7]
---
Predecessors: [0x2b9]
Successors: [0x1e8]
---
0x3d2 JUMPDEST
0x3d3 PUSH1 0x2
0x3d5 SLOAD
0x3d6 DUP2
0x3d7 JUMP
---
0x3d2: JUMPDEST 
0x3d3: V332 = 0x2
0x3d5: V333 = S[0x2]
0x3d7: JUMP 0x1e8
---
Entry stack: [V10, 0x1e8]
Stack pops: 1
Stack additions: [S0, V333]
Exit stack: [V10, 0x1e8, V333]

================================

Block 0x3d8
[0x3d8:0x3dd]
---
Predecessors: [0x2de]
Successors: [0x1e8]
---
0x3d8 JUMPDEST
0x3d9 PUSH1 0x4
0x3db SLOAD
0x3dc DUP2
0x3dd JUMP
---
0x3d8: JUMPDEST 
0x3d9: V334 = 0x4
0x3db: V335 = S[0x4]
0x3dd: JUMP 0x1e8
---
Entry stack: [V10, 0x1e8]
Stack pops: 1
Stack additions: [S0, V335]
Exit stack: [V10, 0x1e8, V335]

================================

Block 0x3de
[0x3de:0x3ea]
---
Predecessors: [0x303]
Successors: [0x1bb, 0x3eb]
---
0x3de JUMPDEST
0x3df PUSH1 0x3
0x3e1 SLOAD
0x3e2 PUSH1 0x0
0x3e4 SWAP1
0x3e5 TIMESTAMP
0x3e6 LT
0x3e7 PUSH2 0x1bb
0x3ea JUMPI
---
0x3de: JUMPDEST 
0x3df: V336 = 0x3
0x3e1: V337 = S[0x3]
0x3e2: V338 = 0x0
0x3e5: V339 = TIMESTAMP
0x3e6: V340 = LT V339 V337
0x3e7: V341 = 0x1bb
0x3ea: JUMPI 0x1bb V340
---
Entry stack: [V10, 0x1be]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1be, 0x0]

================================

Block 0x3eb
[0x3eb:0x3f6]
---
Predecessors: [0x3de]
Successors: [0x3f7, 0x4bd]
---
0x3eb PUSH1 0x7
0x3ed SLOAD
0x3ee PUSH1 0xff
0x3f0 AND
0x3f1 ISZERO
0x3f2 ISZERO
0x3f3 PUSH2 0x4bd
0x3f6 JUMPI
---
0x3eb: V342 = 0x7
0x3ed: V343 = S[0x7]
0x3ee: V344 = 0xff
0x3f0: V345 = AND 0xff V343
0x3f1: V346 = ISZERO V345
0x3f2: V347 = ISZERO V346
0x3f3: V348 = 0x4bd
0x3f6: JUMPI 0x4bd V347
---
Entry stack: [V10, 0x1be, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be, 0x0]

================================

Block 0x3f7
[0x3f7:0x41d]
---
Predecessors: [0x3eb]
Successors: [0x41e, 0x4bd]
---
0x3f7 POP
0x3f8 PUSH1 0x1
0x3fa PUSH1 0xa0
0x3fc PUSH1 0x2
0x3fe EXP
0x3ff SUB
0x400 CALLER
0x401 AND
0x402 PUSH1 0x0
0x404 SWAP1
0x405 DUP2
0x406 MSTORE
0x407 PUSH1 0x6
0x409 PUSH1 0x20
0x40b MSTORE
0x40c PUSH1 0x40
0x40e DUP2
0x40f SHA3
0x410 DUP1
0x411 SLOAD
0x412 SWAP1
0x413 DUP3
0x414 SWAP1
0x415 SSTORE
0x416 SWAP1
0x417 DUP2
0x418 GT
0x419 ISZERO
0x41a PUSH2 0x4bd
0x41d JUMPI
---
0x3f8: V349 = 0x1
0x3fa: V350 = 0xa0
0x3fc: V351 = 0x2
0x3fe: V352 = EXP 0x2 0xa0
0x3ff: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x400: V354 = CALLER
0x401: V355 = AND V354 0xffffffffffffffffffffffffffffffffffffffff
0x402: V356 = 0x0
0x406: M[0x0] = V355
0x407: V357 = 0x6
0x409: V358 = 0x20
0x40b: M[0x20] = 0x6
0x40c: V359 = 0x40
0x40f: V360 = SHA3 0x0 0x40
0x411: V361 = S[V360]
0x415: S[V360] = 0x0
0x418: V362 = GT V361 0x0
0x419: V363 = ISZERO V362
0x41a: V364 = 0x4bd
0x41d: JUMPI 0x4bd V363
---
Entry stack: [V10, 0x1be, 0x0]
Stack pops: 1
Stack additions: [V361]
Exit stack: [V10, 0x1be, V361]

================================

Block 0x41e
[0x41e:0x448]
---
Predecessors: [0x3f7]
Successors: [0x449, 0x4a1]
---
0x41e PUSH1 0x1
0x420 PUSH1 0xa0
0x422 PUSH1 0x2
0x424 EXP
0x425 SUB
0x426 CALLER
0x427 AND
0x428 DUP2
0x429 ISZERO
0x42a PUSH2 0x8fc
0x42d MUL
0x42e DUP3
0x42f PUSH1 0x40
0x431 MLOAD
0x432 PUSH1 0x0
0x434 PUSH1 0x40
0x436 MLOAD
0x437 DUP1
0x438 DUP4
0x439 SUB
0x43a DUP2
0x43b DUP6
0x43c DUP9
0x43d DUP9
0x43e CALL
0x43f SWAP4
0x440 POP
0x441 POP
0x442 POP
0x443 POP
0x444 ISZERO
0x445 PUSH2 0x4a1
0x448 JUMPI
---
0x41e: V365 = 0x1
0x420: V366 = 0xa0
0x422: V367 = 0x2
0x424: V368 = EXP 0x2 0xa0
0x425: V369 = SUB 0x10000000000000000000000000000000000000000 0x1
0x426: V370 = CALLER
0x427: V371 = AND V370 0xffffffffffffffffffffffffffffffffffffffff
0x429: V372 = ISZERO V361
0x42a: V373 = 0x8fc
0x42d: V374 = MUL 0x8fc V372
0x42f: V375 = 0x40
0x431: V376 = M[0x40]
0x432: V377 = 0x0
0x434: V378 = 0x40
0x436: V379 = M[0x40]
0x439: V380 = SUB V376 V379
0x43e: V381 = CALL V374 V371 V361 V379 V380 V379 0x0
0x444: V382 = ISZERO V381
0x445: V383 = 0x4a1
0x448: JUMPI 0x4a1 V382
---
Entry stack: [V10, 0x1be, V361]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1be, V361]

================================

Block 0x449
[0x449:0x4a0]
---
Predecessors: [0x41e]
Successors: [0x4bd]
---
0x449 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x46a CALLER
0x46b DUP3
0x46c PUSH1 0x0
0x46e PUSH1 0x40
0x470 MLOAD
0x471 PUSH1 0x1
0x473 PUSH1 0xa0
0x475 PUSH1 0x2
0x477 EXP
0x478 SUB
0x479 SWAP1
0x47a SWAP4
0x47b AND
0x47c DUP4
0x47d MSTORE
0x47e PUSH1 0x20
0x480 DUP4
0x481 ADD
0x482 SWAP2
0x483 SWAP1
0x484 SWAP2
0x485 MSTORE
0x486 ISZERO
0x487 ISZERO
0x488 PUSH1 0x40
0x48a DUP1
0x48b DUP4
0x48c ADD
0x48d SWAP2
0x48e SWAP1
0x48f SWAP2
0x490 MSTORE
0x491 PUSH1 0x60
0x493 SWAP1
0x494 SWAP2
0x495 ADD
0x496 SWAP1
0x497 MLOAD
0x498 DUP1
0x499 SWAP2
0x49a SUB
0x49b SWAP1
0x49c LOG1
0x49d PUSH2 0x4bd
0x4a0 JUMP
---
0x449: V384 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x46a: V385 = CALLER
0x46c: V386 = 0x0
0x46e: V387 = 0x40
0x470: V388 = M[0x40]
0x471: V389 = 0x1
0x473: V390 = 0xa0
0x475: V391 = 0x2
0x477: V392 = EXP 0x2 0xa0
0x478: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47b: V394 = AND V385 0xffffffffffffffffffffffffffffffffffffffff
0x47d: M[V388] = V394
0x47e: V395 = 0x20
0x481: V396 = ADD V388 0x20
0x485: M[V396] = V361
0x486: V397 = ISZERO 0x0
0x487: V398 = ISZERO 0x1
0x488: V399 = 0x40
0x48c: V400 = ADD V388 0x40
0x490: M[V400] = 0x0
0x491: V401 = 0x60
0x495: V402 = ADD V388 0x60
0x497: V403 = M[0x40]
0x49a: V404 = SUB V402 V403
0x49c: LOG V403 V404 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x49d: V405 = 0x4bd
0x4a0: JUMP 0x4bd
---
Entry stack: [V10, 0x1be, V361]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1be, V361]

================================

Block 0x4a1
[0x4a1:0x4bc]
---
Predecessors: [0x41e]
Successors: [0x4bd]
---
0x4a1 JUMPDEST
0x4a2 PUSH1 0x1
0x4a4 PUSH1 0xa0
0x4a6 PUSH1 0x2
0x4a8 EXP
0x4a9 SUB
0x4aa CALLER
0x4ab AND
0x4ac PUSH1 0x0
0x4ae SWAP1
0x4af DUP2
0x4b0 MSTORE
0x4b1 PUSH1 0x6
0x4b3 PUSH1 0x20
0x4b5 MSTORE
0x4b6 PUSH1 0x40
0x4b8 SWAP1
0x4b9 SHA3
0x4ba DUP2
0x4bb SWAP1
0x4bc SSTORE
---
0x4a1: JUMPDEST 
0x4a2: V406 = 0x1
0x4a4: V407 = 0xa0
0x4a6: V408 = 0x2
0x4a8: V409 = EXP 0x2 0xa0
0x4a9: V410 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4aa: V411 = CALLER
0x4ab: V412 = AND V411 0xffffffffffffffffffffffffffffffffffffffff
0x4ac: V413 = 0x0
0x4b0: M[0x0] = V412
0x4b1: V414 = 0x6
0x4b3: V415 = 0x20
0x4b5: M[0x20] = 0x6
0x4b6: V416 = 0x40
0x4b9: V417 = SHA3 0x0 0x40
0x4bc: S[V417] = V361
---
Entry stack: [V10, 0x1be, V361]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1be, V361]

================================

Block 0x4bd
[0x4bd:0x4bd]
---
Predecessors: [0x3eb, 0x3f7, 0x449, 0x4a1]
Successors: [0x4be]
---
0x4bd JUMPDEST
---
0x4bd: JUMPDEST 
---
Entry stack: [V10, 0x1be, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be, S0]

================================

Block 0x4be
[0x4be:0x4be]
---
Predecessors: [0x4bd]
Successors: [0x4bf]
---
0x4be JUMPDEST
---
0x4be: JUMPDEST 
---
Entry stack: [V10, 0x1be, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be, S0]

================================

Block 0x4bf
[0x4bf:0x4cb]
---
Predecessors: [0x4be]
Successors: [0x4cc, 0x4df]
---
0x4bf JUMPDEST
0x4c0 PUSH1 0x7
0x4c2 SLOAD
0x4c3 PUSH1 0xff
0x4c5 AND
0x4c6 DUP1
0x4c7 ISZERO
0x4c8 PUSH2 0x4df
0x4cb JUMPI
---
0x4bf: JUMPDEST 
0x4c0: V418 = 0x7
0x4c2: V419 = S[0x7]
0x4c3: V420 = 0xff
0x4c5: V421 = AND 0xff V419
0x4c7: V422 = ISZERO V421
0x4c8: V423 = 0x4df
0x4cb: JUMPI 0x4df V422
---
Entry stack: [V10, 0x1be, S0]
Stack pops: 0
Stack additions: [V421]
Exit stack: [V10, 0x1be, S0, V421]

================================

Block 0x4cc
[0x4cc:0x4de]
---
Predecessors: [0x4bf]
Successors: [0x4df]
---
0x4cc POP
0x4cd PUSH1 0x0
0x4cf SLOAD
0x4d0 CALLER
0x4d1 PUSH1 0x1
0x4d3 PUSH1 0xa0
0x4d5 PUSH1 0x2
0x4d7 EXP
0x4d8 SUB
0x4d9 SWAP1
0x4da DUP2
0x4db AND
0x4dc SWAP2
0x4dd AND
0x4de EQ
---
0x4cd: V424 = 0x0
0x4cf: V425 = S[0x0]
0x4d0: V426 = CALLER
0x4d1: V427 = 0x1
0x4d3: V428 = 0xa0
0x4d5: V429 = 0x2
0x4d7: V430 = EXP 0x2 0xa0
0x4d8: V431 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4db: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x4dd: V433 = AND V425 0xffffffffffffffffffffffffffffffffffffffff
0x4de: V434 = EQ V433 V432
---
Entry stack: [V10, 0x1be, S1, V421]
Stack pops: 1
Stack additions: [V434]
Exit stack: [V10, 0x1be, S1, V434]

================================

Block 0x4df
[0x4df:0x4e4]
---
Predecessors: [0x4bf, 0x4cc]
Successors: [0x1bb, 0x4e5]
---
0x4df JUMPDEST
0x4e0 ISZERO
0x4e1 PUSH2 0x1bb
0x4e4 JUMPI
---
0x4df: JUMPDEST 
0x4e0: V435 = ISZERO S0
0x4e1: V436 = 0x1bb
0x4e4: JUMPI 0x1bb V435
---
Entry stack: [V10, 0x1be, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1be, S1]

================================

Block 0x4e5
[0x4e5:0x517]
---
Predecessors: [0x4df]
Successors: [0x518, 0x580]
---
0x4e5 PUSH1 0x0
0x4e7 SLOAD
0x4e8 PUSH1 0x2
0x4ea SLOAD
0x4eb PUSH1 0x1
0x4ed PUSH1 0xa0
0x4ef PUSH1 0x2
0x4f1 EXP
0x4f2 SUB
0x4f3 SWAP1
0x4f4 SWAP2
0x4f5 AND
0x4f6 SWAP1
0x4f7 DUP1
0x4f8 ISZERO
0x4f9 PUSH2 0x8fc
0x4fc MUL
0x4fd SWAP1
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 PUSH1 0x0
0x503 PUSH1 0x40
0x505 MLOAD
0x506 DUP1
0x507 DUP4
0x508 SUB
0x509 DUP2
0x50a DUP6
0x50b DUP9
0x50c DUP9
0x50d CALL
0x50e SWAP4
0x50f POP
0x510 POP
0x511 POP
0x512 POP
0x513 ISZERO
0x514 PUSH2 0x580
0x517 JUMPI
---
0x4e5: V437 = 0x0
0x4e7: V438 = S[0x0]
0x4e8: V439 = 0x2
0x4ea: V440 = S[0x2]
0x4eb: V441 = 0x1
0x4ed: V442 = 0xa0
0x4ef: V443 = 0x2
0x4f1: V444 = EXP 0x2 0xa0
0x4f2: V445 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f5: V446 = AND V438 0xffffffffffffffffffffffffffffffffffffffff
0x4f8: V447 = ISZERO V440
0x4f9: V448 = 0x8fc
0x4fc: V449 = MUL 0x8fc V447
0x4fe: V450 = 0x40
0x500: V451 = M[0x40]
0x501: V452 = 0x0
0x503: V453 = 0x40
0x505: V454 = M[0x40]
0x508: V455 = SUB V451 V454
0x50d: V456 = CALL V449 V446 V440 V454 V455 V454 0x0
0x513: V457 = ISZERO V456
0x514: V458 = 0x580
0x517: JUMPI 0x580 V457
---
Entry stack: [V10, 0x1be, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be, S0]

================================

Block 0x518
[0x518:0x57f]
---
Predecessors: [0x4e5]
Successors: [0x1bb]
---
0x518 PUSH1 0x0
0x51a DUP1
0x51b SLOAD
0x51c PUSH1 0x2
0x51e SLOAD
0x51f PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x540 SWAP3
0x541 PUSH1 0x1
0x543 PUSH1 0xa0
0x545 PUSH1 0x2
0x547 EXP
0x548 SUB
0x549 SWAP1
0x54a SWAP3
0x54b AND
0x54c SWAP2
0x54d PUSH1 0x40
0x54f MLOAD
0x550 PUSH1 0x1
0x552 PUSH1 0xa0
0x554 PUSH1 0x2
0x556 EXP
0x557 SUB
0x558 SWAP1
0x559 SWAP4
0x55a AND
0x55b DUP4
0x55c MSTORE
0x55d PUSH1 0x20
0x55f DUP4
0x560 ADD
0x561 SWAP2
0x562 SWAP1
0x563 SWAP2
0x564 MSTORE
0x565 ISZERO
0x566 ISZERO
0x567 PUSH1 0x40
0x569 DUP1
0x56a DUP4
0x56b ADD
0x56c SWAP2
0x56d SWAP1
0x56e SWAP2
0x56f MSTORE
0x570 PUSH1 0x60
0x572 SWAP1
0x573 SWAP2
0x574 ADD
0x575 SWAP1
0x576 MLOAD
0x577 DUP1
0x578 SWAP2
0x579 SUB
0x57a SWAP1
0x57b LOG1
0x57c PUSH2 0x1bb
0x57f JUMP
---
0x518: V459 = 0x0
0x51b: V460 = S[0x0]
0x51c: V461 = 0x2
0x51e: V462 = S[0x2]
0x51f: V463 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x541: V464 = 0x1
0x543: V465 = 0xa0
0x545: V466 = 0x2
0x547: V467 = EXP 0x2 0xa0
0x548: V468 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54b: V469 = AND V460 0xffffffffffffffffffffffffffffffffffffffff
0x54d: V470 = 0x40
0x54f: V471 = M[0x40]
0x550: V472 = 0x1
0x552: V473 = 0xa0
0x554: V474 = 0x2
0x556: V475 = EXP 0x2 0xa0
0x557: V476 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55a: V477 = AND V469 0xffffffffffffffffffffffffffffffffffffffff
0x55c: M[V471] = V477
0x55d: V478 = 0x20
0x560: V479 = ADD V471 0x20
0x564: M[V479] = V462
0x565: V480 = ISZERO 0x0
0x566: V481 = ISZERO 0x1
0x567: V482 = 0x40
0x56b: V483 = ADD V471 0x40
0x56f: M[V483] = 0x0
0x570: V484 = 0x60
0x574: V485 = ADD V471 0x60
0x576: V486 = M[0x40]
0x579: V487 = SUB V485 V486
0x57b: LOG V486 V487 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x57c: V488 = 0x1bb
0x57f: JUMP 0x1bb
---
Entry stack: [V10, 0x1be, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be, S0]

================================

Block 0x580
[0x580:0x58a]
---
Predecessors: [0x4e5]
Successors: [0x58b]
---
0x580 JUMPDEST
0x581 PUSH1 0x7
0x583 DUP1
0x584 SLOAD
0x585 PUSH1 0xff
0x587 NOT
0x588 AND
0x589 SWAP1
0x58a SSTORE
---
0x580: JUMPDEST 
0x581: V489 = 0x7
0x584: V490 = S[0x7]
0x585: V491 = 0xff
0x587: V492 = NOT 0xff
0x588: V493 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V490
0x58a: S[0x7] = V493
---
Entry stack: [V10, 0x1be, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be, S0]

================================

Block 0x58b
[0x58b:0x58b]
---
Predecessors: [0x580]
Successors: [0x58c]
---
0x58b JUMPDEST
---
0x58b: JUMPDEST 
---
Entry stack: [V10, 0x1be, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be, S0]

================================

Block 0x58c
[0x58c:0x58c]
---
Predecessors: [0x58b]
Successors: [0x58d]
---
0x58c JUMPDEST
---
0x58c: JUMPDEST 
---
Entry stack: [V10, 0x1be, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be, S0]

================================

Block 0x58d
[0x58d:0x58d]
---
Predecessors: [0x58c]
Successors: [0x58e]
---
0x58d JUMPDEST
---
0x58d: JUMPDEST 
---
Entry stack: [V10, 0x1be, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be, S0]

================================

Block 0x58e
[0x58e:0x58e]
---
Predecessors: [0x58d]
Successors: [0x58f]
---
0x58e JUMPDEST
---
0x58e: JUMPDEST 
---
Entry stack: [V10, 0x1be, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1be, S0]

================================

Block 0x58f
[0x58f:0x591]
---
Predecessors: [0x58e]
Successors: [0x1be]
---
0x58f JUMPDEST
0x590 POP
0x591 JUMP
---
0x58f: JUMPDEST 
0x591: JUMP 0x1be
---
Entry stack: [V10, 0x1be, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x592
[0x592:0x5bd]
---
Predecessors: []
Successors: []
---
0x592 STOP
0x593 LOG1
0x594 PUSH6 0x627a7a723058
0x59b SHA3
0x59c MISSING 0xf9
0x59d PUSH30 0x244e40801b70a1d75ddef42d2c0f845a859d90da116bc2f76bfb115b428b
0x5bc STOP
0x5bd MISSING 0x29
---
0x592: STOP 
0x593: LOG S0 S1 S2
0x594: V494 = 0x627a7a723058
0x59b: V495 = SHA3 0x627a7a723058 S3
0x59c: MISSING 0xf9
0x59d: V496 = 0x244e40801b70a1d75ddef42d2c0f845a859d90da116bc2f76bfb115b428b
0x5bc: STOP 
0x5bd: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V495, 0x244e40801b70a1d75ddef42d2c0f845a859d90da116bc2f76bfb115b428b]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x1c0
Exit block: 0x1be
Body: 0x1be, 0x1c0, 0x1c7, 0x1cb, 0x30d, 0x317, 0x322, 0x382, 0x392, 0x393, 0x394

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x1d5
Exit block: 0x1e8
Body: 0x1d5, 0x1dc, 0x1e0, 0x1e8, 0x396

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x1fa
Exit block: 0x20d
Body: 0x1fa, 0x201, 0x205, 0x20d, 0x39c

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x229
Exit block: 0x20d
Body: 0x20d, 0x229, 0x230, 0x234, 0x3ab

Function 4:
Public function signature: 0x70a08231
Entry block: 0x258
Exit block: 0x1e8
Body: 0x1e8, 0x258, 0x25f, 0x263, 0x3ba

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x289
Exit block: 0x1e8
Body: 0x1e8, 0x289, 0x290, 0x294, 0x3cc

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x2ae
Exit block: 0x1e8
Body: 0x1e8, 0x2ae, 0x2b5, 0x2b9, 0x3d2

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x2d3
Exit block: 0x1e8
Body: 0x1e8, 0x2d3, 0x2da, 0x2de, 0x3d8

Function 8:
Public function signature: 0xfd6b7ef8
Entry block: 0x2f8
Exit block: 0x1be
Body: 0x1bb, 0x1be, 0x2f8, 0x2ff, 0x303, 0x3de, 0x3eb, 0x3f7, 0x41e, 0x449, 0x4a1, 0x4bd, 0x4be, 0x4bf, 0x4cc, 0x4df, 0x4e5, 0x518, 0x580, 0x58b, 0x58c, 0x58d, 0x58e, 0x58f

Function 9:
Public fallback function
Entry block: 0x96
Exit block: 0x1be
Body: 0x96, 0x9a, 0xaf, 0xb3, 0xf4, 0xf5, 0x14e, 0x152, 0x15f, 0x163, 0x1bb, 0x1be

