Block 0x0
[0x0:0x9]
---
Predecessors: []
Successors: [0xa, 0x23]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH1 0x23
0x9 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x23
0x9: JUMPI 0x23 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa
[0xa:0x22]
---
Predecessors: [0x0]
Successors: [0x23, 0x6f]
---
0xa PUSH4 0xffffffff
0xf PUSH1 0xe0
0x11 PUSH1 0x2
0x13 EXP
0x14 PUSH1 0x0
0x16 CALLDATALOAD
0x17 DIV
0x18 AND
0x19 PUSH4 0x3ccfd60b
0x1e DUP2
0x1f EQ
0x20 PUSH1 0x6f
0x22 JUMPI
---
0xa: V5 = 0xffffffff
0xf: V6 = 0xe0
0x11: V7 = 0x2
0x13: V8 = EXP 0x2 0xe0
0x14: V9 = 0x0
0x16: V10 = CALLDATALOAD 0x0
0x17: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x18: V12 = AND V11 0xffffffff
0x19: V13 = 0x3ccfd60b
0x1f: V14 = EQ V12 0x3ccfd60b
0x20: V15 = 0x6f
0x22: JUMPI 0x6f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x23
[0x23:0x25]
---
Predecessors: [0x0, 0xa]
Successors: [0x26]
---
0x23 JUMPDEST
0x24 PUSH1 0x6d
---
0x23: JUMPDEST 
0x24: V16 = 0x6d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6d]
Exit stack: [V12, 0x6d]

================================

Block 0x26
[0x26:0x36]
---
Predecessors: [0x23]
Successors: [0x37, 0x3a]
---
0x26 JUMPDEST
0x27 PUSH1 0x0
0x29 SLOAD
0x2a PUSH1 0x1
0x2c PUSH1 0xa0
0x2e PUSH1 0x2
0x30 EXP
0x31 SUB
0x32 AND
0x33 ISZERO
0x34 PUSH1 0x3a
0x36 JUMPI
---
0x26: JUMPDEST 
0x27: V17 = 0x0
0x29: V18 = S[0x0]
0x2a: V19 = 0x1
0x2c: V20 = 0xa0
0x2e: V21 = 0x2
0x30: V22 = EXP 0x2 0xa0
0x31: V23 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32: V24 = AND 0xffffffffffffffffffffffffffffffffffffffff V18
0x33: V25 = ISZERO V24
0x34: V26 = 0x3a
0x36: JUMPI 0x3a V25
---
Entry stack: [V12, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6d]

================================

Block 0x37
[0x37:0x39]
---
Predecessors: [0x26]
Successors: []
---
0x37 PUSH1 0x0
0x39 JUMP
---
0x37: V27 = 0x0
0x39: THROW 
---
Entry stack: [V12, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6d]

================================

Block 0x3a
[0x3a:0x6a]
---
Predecessors: [0x26]
Successors: [0x6b]
---
0x3a JUMPDEST
0x3b PUSH1 0x0
0x3d DUP1
0x3e SLOAD
0x3f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54 NOT
0x55 AND
0x56 CALLER
0x57 PUSH1 0x1
0x59 PUSH1 0xa0
0x5b PUSH1 0x2
0x5d EXP
0x5e SUB
0x5f AND
0x60 OR
0x61 SWAP1
0x62 SSTORE
0x63 CALLVALUE
0x64 PUSH1 0x1
0x66 SSTORE
0x67 TIMESTAMP
0x68 PUSH1 0x2
0x6a SSTORE
---
0x3a: JUMPDEST 
0x3b: V28 = 0x0
0x3e: V29 = S[0x0]
0x3f: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x54: V31 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x55: V32 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V29
0x56: V33 = CALLER
0x57: V34 = 0x1
0x59: V35 = 0xa0
0x5b: V36 = 0x2
0x5d: V37 = EXP 0x2 0xa0
0x5e: V38 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x60: V40 = OR V39 V32
0x62: S[0x0] = V40
0x63: V41 = CALLVALUE
0x64: V42 = 0x1
0x66: S[0x1] = V41
0x67: V43 = TIMESTAMP
0x68: V44 = 0x2
0x6a: S[0x2] = V43
---
Entry stack: [V12, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6d]

================================

Block 0x6b
[0x6b:0x6c]
---
Predecessors: [0x3a]
Successors: [0x6d]
---
0x6b JUMPDEST
0x6c JUMP
---
0x6b: JUMPDEST 
0x6c: JUMP 0x6d
---
Entry stack: [V12, 0x6d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x6b, 0xf5]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6f
[0x6f:0x74]
---
Predecessors: [0xa]
Successors: [0x75, 0x76]
---
0x6f JUMPDEST
0x70 CALLVALUE
0x71 ISZERO
0x72 PUSH1 0x76
0x74 JUMPI
---
0x6f: JUMPDEST 
0x70: V45 = CALLVALUE
0x71: V46 = ISZERO V45
0x72: V47 = 0x76
0x74: JUMPI 0x76 V46
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x75
[0x75:0x75]
---
Predecessors: [0x6f]
Successors: []
---
0x75 INVALID
---
0x75: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x76
[0x76:0x7b]
---
Predecessors: [0x6f]
Successors: [0x7e]
---
0x76 JUMPDEST
0x77 PUSH1 0x6d
0x79 PUSH1 0x7e
0x7b JUMP
---
0x76: JUMPDEST 
0x77: V48 = 0x6d
0x79: V49 = 0x7e
0x7b: JUMP 0x7e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6d]
Exit stack: [V12, 0x6d]

================================

Block 0x7c
[0x7c:0x7d]
---
Predecessors: []
Successors: []
---
0x7c JUMPDEST
0x7d STOP
---
0x7c: JUMPDEST 
0x7d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7e
[0x7e:0x8f]
---
Predecessors: [0x76]
Successors: [0x90, 0x93]
---
0x7e JUMPDEST
0x7f PUSH1 0x0
0x81 SLOAD
0x82 PUSH1 0x1
0x84 PUSH1 0xa0
0x86 PUSH1 0x2
0x88 EXP
0x89 SUB
0x8a AND
0x8b ISZERO
0x8c ISZERO
0x8d PUSH1 0x93
0x8f JUMPI
---
0x7e: JUMPDEST 
0x7f: V50 = 0x0
0x81: V51 = S[0x0]
0x82: V52 = 0x1
0x84: V53 = 0xa0
0x86: V54 = 0x2
0x88: V55 = EXP 0x2 0xa0
0x89: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0x8b: V58 = ISZERO V57
0x8c: V59 = ISZERO V58
0x8d: V60 = 0x93
0x8f: JUMPI 0x93 V59
---
Entry stack: [V12, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6d]

================================

Block 0x90
[0x90:0x92]
---
Predecessors: [0x7e]
Successors: []
---
0x90 PUSH1 0x0
0x92 JUMP
---
0x90: V61 = 0x0
0x92: THROW 
---
Entry stack: [V12, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6d]

================================

Block 0x93
[0x93:0xa0]
---
Predecessors: [0x7e]
Successors: [0xa1, 0xa4]
---
0x93 JUMPDEST
0x94 PUSH2 0x4b0
0x97 PUSH1 0x2
0x99 SLOAD
0x9a TIMESTAMP
0x9b SUB
0x9c LT
0x9d ISZERO
0x9e PUSH1 0xa4
0xa0 JUMPI
---
0x93: JUMPDEST 
0x94: V62 = 0x4b0
0x97: V63 = 0x2
0x99: V64 = S[0x2]
0x9a: V65 = TIMESTAMP
0x9b: V66 = SUB V65 V64
0x9c: V67 = LT V66 0x4b0
0x9d: V68 = ISZERO V67
0x9e: V69 = 0xa4
0xa0: JUMPI 0xa4 V68
---
Entry stack: [V12, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6d]

================================

Block 0xa1
[0xa1:0xa3]
---
Predecessors: [0x93]
Successors: []
---
0xa1 PUSH1 0x0
0xa3 JUMP
---
0xa1: V70 = 0x0
0xa3: THROW 
---
Entry stack: [V12, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6d]

================================

Block 0xa4
[0xa4:0xd3]
---
Predecessors: [0x93]
Successors: [0xd4, 0xd7]
---
0xa4 JUMPDEST
0xa5 PUSH1 0x0
0xa7 DUP1
0xa8 SLOAD
0xa9 PUSH1 0x1
0xab SLOAD
0xac PUSH1 0x40
0xae MLOAD
0xaf PUSH1 0x1
0xb1 PUSH1 0xa0
0xb3 PUSH1 0x2
0xb5 EXP
0xb6 SUB
0xb7 SWAP1
0xb8 SWAP3
0xb9 AND
0xba SWAP3
0xbb DUP2
0xbc ISZERO
0xbd PUSH2 0x8fc
0xc0 MUL
0xc1 SWAP3
0xc2 SWAP1
0xc3 DUP2
0xc4 DUP2
0xc5 DUP2
0xc6 DUP6
0xc7 DUP9
0xc8 DUP9
0xc9 CALL
0xca SWAP4
0xcb POP
0xcc POP
0xcd POP
0xce POP
0xcf ISZERO
0xd0 ISZERO
0xd1 PUSH1 0xd7
0xd3 JUMPI
---
0xa4: JUMPDEST 
0xa5: V71 = 0x0
0xa8: V72 = S[0x0]
0xa9: V73 = 0x1
0xab: V74 = S[0x1]
0xac: V75 = 0x40
0xae: V76 = M[0x40]
0xaf: V77 = 0x1
0xb1: V78 = 0xa0
0xb3: V79 = 0x2
0xb5: V80 = EXP 0x2 0xa0
0xb6: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9: V82 = AND V72 0xffffffffffffffffffffffffffffffffffffffff
0xbc: V83 = ISZERO V74
0xbd: V84 = 0x8fc
0xc0: V85 = MUL 0x8fc V83
0xc9: V86 = CALL V85 V82 V74 V76 0x0 V76 0x0
0xcf: V87 = ISZERO V86
0xd0: V88 = ISZERO V87
0xd1: V89 = 0xd7
0xd3: JUMPI 0xd7 V88
---
Entry stack: [V12, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6d]

================================

Block 0xd4
[0xd4:0xd6]
---
Predecessors: [0xa4]
Successors: []
---
0xd4 PUSH1 0x0
0xd6 JUMP
---
0xd4: V90 = 0x0
0xd6: THROW 
---
Entry stack: [V12, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6d]

================================

Block 0xd7
[0xd7:0xf4]
---
Predecessors: [0xa4]
Successors: [0xf5]
---
0xd7 JUMPDEST
0xd8 PUSH1 0x0
0xda DUP1
0xdb SLOAD
0xdc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf1 NOT
0xf2 AND
0xf3 SWAP1
0xf4 SSTORE
---
0xd7: JUMPDEST 
0xd8: V91 = 0x0
0xdb: V92 = S[0x0]
0xdc: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0xf1: V94 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf2: V95 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V92
0xf4: S[0x0] = V95
---
Entry stack: [V12, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6d]

================================

Block 0xf5
[0xf5:0xf6]
---
Predecessors: [0xd7]
Successors: [0x6d]
---
0xf5 JUMPDEST
0xf6 JUMP
---
0xf5: JUMPDEST 
0xf6: JUMP 0x6d
---
Entry stack: [V12, 0x6d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xf7
[0xf7:0x12e]
---
Predecessors: []
Successors: []
---
0xf7 STOP
0xf8 LOG1
0xf9 PUSH6 0x627a7a723058
0x100 SHA3
0x101 PUSH14 0x620b96b149f321a895629db5849b
0x110 MISSING 0xe1
0x111 OR
0x112 LT
0x113 PUSH27 0x284a3ec11eb7a0c65fa54bba80029
---
0xf7: STOP 
0xf8: LOG S0 S1 S2
0xf9: V96 = 0x627a7a723058
0x100: V97 = SHA3 0x627a7a723058 S3
0x101: V98 = 0x620b96b149f321a895629db5849b
0x110: MISSING 0xe1
0x111: V99 = OR S0 S1
0x112: V100 = LT V99 S2
0x113: V101 = 0x284a3ec11eb7a0c65fa54bba80029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x620b96b149f321a895629db5849b, V97, 0x284a3ec11eb7a0c65fa54bba80029, V100]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x6f
Exit block: 0x6d
Body: 0x6d, 0x6f, 0x75, 0x76, 0x7e, 0x90, 0x93, 0xa1, 0xa4, 0xd4, 0xd7, 0xf5

Function 1:
Public fallback function
Entry block: 0x23
Exit block: 0x6d
Body: 0x23, 0x26, 0x37, 0x3a, 0x6b, 0x6d

