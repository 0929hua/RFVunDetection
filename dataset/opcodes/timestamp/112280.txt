Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x97]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x97
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x97
0xa: JUMPI 0x97 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x9c]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x1998aeef
0x3a EQ
0x3b PUSH2 0x9c
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x1998aeef
0x3a: V12 = EQ 0x1998aeef V10
0x3b: V13 = 0x9c
0x3e: JUMPI 0x9c V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0xa6]
---
0x3f DUP1
0x40 PUSH4 0x2a24f46c
0x45 EQ
0x46 PUSH2 0xa6
0x49 JUMPI
---
0x40: V14 = 0x2a24f46c
0x45: V15 = EQ 0x2a24f46c V10
0x46: V16 = 0xa6
0x49: JUMPI 0xa6 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0xbb]
---
0x4a DUP1
0x4b PUSH4 0x38af3eed
0x50 EQ
0x51 PUSH2 0xbb
0x54 JUMPI
---
0x4b: V17 = 0x38af3eed
0x50: V18 = EQ 0x38af3eed V10
0x51: V19 = 0xbb
0x54: JUMPI 0xbb V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x110]
---
0x55 DUP1
0x56 PUSH4 0x3ccfd60b
0x5b EQ
0x5c PUSH2 0x110
0x5f JUMPI
---
0x56: V20 = 0x3ccfd60b
0x5b: V21 = EQ 0x3ccfd60b V10
0x5c: V22 = 0x110
0x5f: JUMPI 0x110 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x13d]
---
0x60 DUP1
0x61 PUSH4 0x4b449cba
0x66 EQ
0x67 PUSH2 0x13d
0x6a JUMPI
---
0x61: V23 = 0x4b449cba
0x66: V24 = EQ 0x4b449cba V10
0x67: V25 = 0x13d
0x6a: JUMPI 0x13d V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x166]
---
0x6b DUP1
0x6c PUSH4 0x4f245ef7
0x71 EQ
0x72 PUSH2 0x166
0x75 JUMPI
---
0x6c: V26 = 0x4f245ef7
0x71: V27 = EQ 0x4f245ef7 V10
0x72: V28 = 0x166
0x75: JUMPI 0x166 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x18f]
---
0x76 DUP1
0x77 PUSH4 0x91f90157
0x7c EQ
0x7d PUSH2 0x18f
0x80 JUMPI
---
0x77: V29 = 0x91f90157
0x7c: V30 = EQ 0x91f90157 V10
0x7d: V31 = 0x18f
0x80: JUMPI 0x18f V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x1e4]
---
0x81 DUP1
0x82 PUSH4 0xd074a38d
0x87 EQ
0x88 PUSH2 0x1e4
0x8b JUMPI
---
0x82: V32 = 0xd074a38d
0x87: V33 = EQ 0xd074a38d V10
0x88: V34 = 0x1e4
0x8b: JUMPI 0x1e4 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x20d]
---
0x8c DUP1
0x8d PUSH4 0xd57bde79
0x92 EQ
0x93 PUSH2 0x20d
0x96 JUMPI
---
0x8d: V35 = 0xd57bde79
0x92: V36 = EQ 0xd57bde79 V10
0x93: V37 = 0x20d
0x96: JUMPI 0x20d V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0x9b]
---
Predecessors: [0x0, 0x8c]
Successors: []
---
0x97 JUMPDEST
0x98 PUSH1 0x0
0x9a DUP1
0x9b REVERT
---
0x97: JUMPDEST 
0x98: V38 = 0x0
0x9b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9c
[0x9c:0xa3]
---
Predecessors: [0xb]
Successors: [0x236]
---
0x9c JUMPDEST
0x9d PUSH2 0xa4
0xa0 PUSH2 0x236
0xa3 JUMP
---
0x9c: JUMPDEST 
0x9d: V39 = 0xa4
0xa0: V40 = 0x236
0xa3: JUMP 0x236
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa4]
Exit stack: [V10, 0xa4]

================================

Block 0xa4
[0xa4:0xa5]
---
Predecessors: [0x3c3]
Successors: []
---
0xa4 JUMPDEST
0xa5 STOP
---
0xa4: JUMPDEST 
0xa5: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa6
[0xa6:0xac]
---
Predecessors: [0x3f]
Successors: [0xad, 0xb1]
---
0xa6 JUMPDEST
0xa7 CALLVALUE
0xa8 ISZERO
0xa9 PUSH2 0xb1
0xac JUMPI
---
0xa6: JUMPDEST 
0xa7: V41 = CALLVALUE
0xa8: V42 = ISZERO V41
0xa9: V43 = 0xb1
0xac: JUMPI 0xb1 V42
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0xa6]
Successors: []
---
0xad PUSH1 0x0
0xaf DUP1
0xb0 REVERT
---
0xad: V44 = 0x0
0xb0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb1
[0xb1:0xb8]
---
Predecessors: [0xa6]
Successors: [0x3c5]
---
0xb1 JUMPDEST
0xb2 PUSH2 0xb9
0xb5 PUSH2 0x3c5
0xb8 JUMP
---
0xb1: JUMPDEST 
0xb2: V45 = 0xb9
0xb5: V46 = 0x3c5
0xb8: JUMP 0x3c5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb9]
Exit stack: [V10, 0xb9]

================================

Block 0xb9
[0xb9:0xba]
---
Predecessors: [0x504]
Successors: []
---
0xb9 JUMPDEST
0xba STOP
---
0xb9: JUMPDEST 
0xba: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbb
[0xbb:0xc1]
---
Predecessors: [0x4a]
Successors: [0xc2, 0xc6]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd ISZERO
0xbe PUSH2 0xc6
0xc1 JUMPI
---
0xbb: JUMPDEST 
0xbc: V47 = CALLVALUE
0xbd: V48 = ISZERO V47
0xbe: V49 = 0xc6
0xc1: JUMPI 0xc6 V48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xc5]
---
Predecessors: [0xbb]
Successors: []
---
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 REVERT
---
0xc2: V50 = 0x0
0xc5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc6
[0xc6:0xcd]
---
Predecessors: [0xbb]
Successors: [0x506]
---
0xc6 JUMPDEST
0xc7 PUSH2 0xce
0xca PUSH2 0x506
0xcd JUMP
---
0xc6: JUMPDEST 
0xc7: V51 = 0xce
0xca: V52 = 0x506
0xcd: JUMP 0x506
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V10, 0xce]

================================

Block 0xce
[0xce:0x10f]
---
Predecessors: [0x506]
Successors: []
---
0xce JUMPDEST
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 DUP1
0xd3 DUP3
0xd4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe9 AND
0xea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff AND
0x100 DUP2
0x101 MSTORE
0x102 PUSH1 0x20
0x104 ADD
0x105 SWAP2
0x106 POP
0x107 POP
0x108 PUSH1 0x40
0x10a MLOAD
0x10b DUP1
0x10c SWAP2
0x10d SUB
0x10e SWAP1
0x10f RETURN
---
0xce: JUMPDEST 
0xcf: V53 = 0x40
0xd1: V54 = M[0x40]
0xd4: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xe9: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0xea: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0xff: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x101: M[V54] = V58
0x102: V59 = 0x20
0x104: V60 = ADD 0x20 V54
0x108: V61 = 0x40
0x10a: V62 = M[0x40]
0x10d: V63 = SUB V60 V62
0x10f: RETURN V62 V63
---
Entry stack: [V10, 0xce, V336]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xce]

================================

Block 0x110
[0x110:0x116]
---
Predecessors: [0x55]
Successors: [0x117, 0x11b]
---
0x110 JUMPDEST
0x111 CALLVALUE
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0x110: JUMPDEST 
0x111: V64 = CALLVALUE
0x112: V65 = ISZERO V64
0x113: V66 = 0x11b
0x116: JUMPI 0x11b V65
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x110]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V67 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0x110]
Successors: [0x52b]
---
0x11b JUMPDEST
0x11c PUSH2 0x123
0x11f PUSH2 0x52b
0x122 JUMP
---
0x11b: JUMPDEST 
0x11c: V68 = 0x123
0x11f: V69 = 0x52b
0x122: JUMP 0x52b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V10, 0x123]

================================

Block 0x123
[0x123:0x13c]
---
Predecessors: [0x64c]
Successors: []
---
0x123 JUMPDEST
0x124 PUSH1 0x40
0x126 MLOAD
0x127 DUP1
0x128 DUP3
0x129 ISZERO
0x12a ISZERO
0x12b ISZERO
0x12c ISZERO
0x12d DUP2
0x12e MSTORE
0x12f PUSH1 0x20
0x131 ADD
0x132 SWAP2
0x133 POP
0x134 POP
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 SWAP2
0x13a SUB
0x13b SWAP1
0x13c RETURN
---
0x123: JUMPDEST 
0x124: V70 = 0x40
0x126: V71 = M[0x40]
0x129: V72 = ISZERO {0x0, 0x1}
0x12a: V73 = ISZERO V72
0x12b: V74 = ISZERO V73
0x12c: V75 = ISZERO V74
0x12e: M[V71] = V75
0x12f: V76 = 0x20
0x131: V77 = ADD 0x20 V71
0x135: V78 = 0x40
0x137: V79 = M[0x40]
0x13a: V80 = SUB V77 V79
0x13c: RETURN V79 V80
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x13d
[0x13d:0x143]
---
Predecessors: [0x60]
Successors: [0x144, 0x148]
---
0x13d JUMPDEST
0x13e CALLVALUE
0x13f ISZERO
0x140 PUSH2 0x148
0x143 JUMPI
---
0x13d: JUMPDEST 
0x13e: V81 = CALLVALUE
0x13f: V82 = ISZERO V81
0x140: V83 = 0x148
0x143: JUMPI 0x148 V82
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x144
[0x144:0x147]
---
Predecessors: [0x13d]
Successors: []
---
0x144 PUSH1 0x0
0x146 DUP1
0x147 REVERT
---
0x144: V84 = 0x0
0x147: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x148
[0x148:0x14f]
---
Predecessors: [0x13d]
Successors: [0x650]
---
0x148 JUMPDEST
0x149 PUSH2 0x150
0x14c PUSH2 0x650
0x14f JUMP
---
0x148: JUMPDEST 
0x149: V85 = 0x150
0x14c: V86 = 0x650
0x14f: JUMP 0x650
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V10, 0x150]

================================

Block 0x150
[0x150:0x165]
---
Predecessors: [0x65c]
Successors: []
---
0x150 JUMPDEST
0x151 PUSH1 0x40
0x153 MLOAD
0x154 DUP1
0x155 DUP3
0x156 DUP2
0x157 MSTORE
0x158 PUSH1 0x20
0x15a ADD
0x15b SWAP2
0x15c POP
0x15d POP
0x15e PUSH1 0x40
0x160 MLOAD
0x161 DUP1
0x162 SWAP2
0x163 SUB
0x164 SWAP1
0x165 RETURN
---
0x150: JUMPDEST 
0x151: V87 = 0x40
0x153: V88 = M[0x40]
0x157: M[V88] = V407
0x158: V89 = 0x20
0x15a: V90 = ADD 0x20 V88
0x15e: V91 = 0x40
0x160: V92 = M[0x40]
0x163: V93 = SUB V90 V92
0x165: RETURN V92 V93
---
Entry stack: [V10, V407]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x166
[0x166:0x16c]
---
Predecessors: [0x6b]
Successors: [0x16d, 0x171]
---
0x166 JUMPDEST
0x167 CALLVALUE
0x168 ISZERO
0x169 PUSH2 0x171
0x16c JUMPI
---
0x166: JUMPDEST 
0x167: V94 = CALLVALUE
0x168: V95 = ISZERO V94
0x169: V96 = 0x171
0x16c: JUMPI 0x171 V95
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16d
[0x16d:0x170]
---
Predecessors: [0x166]
Successors: []
---
0x16d PUSH1 0x0
0x16f DUP1
0x170 REVERT
---
0x16d: V97 = 0x0
0x170: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x171
[0x171:0x178]
---
Predecessors: [0x166]
Successors: [0x65f]
---
0x171 JUMPDEST
0x172 PUSH2 0x179
0x175 PUSH2 0x65f
0x178 JUMP
---
0x171: JUMPDEST 
0x172: V98 = 0x179
0x175: V99 = 0x65f
0x178: JUMP 0x65f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x179]
Exit stack: [V10, 0x179]

================================

Block 0x179
[0x179:0x18e]
---
Predecessors: [0x65f]
Successors: []
---
0x179 JUMPDEST
0x17a PUSH1 0x40
0x17c MLOAD
0x17d DUP1
0x17e DUP3
0x17f DUP2
0x180 MSTORE
0x181 PUSH1 0x20
0x183 ADD
0x184 SWAP2
0x185 POP
0x186 POP
0x187 PUSH1 0x40
0x189 MLOAD
0x18a DUP1
0x18b SWAP2
0x18c SUB
0x18d SWAP1
0x18e RETURN
---
0x179: JUMPDEST 
0x17a: V100 = 0x40
0x17c: V101 = M[0x40]
0x180: M[V101] = V409
0x181: V102 = 0x20
0x183: V103 = ADD 0x20 V101
0x187: V104 = 0x40
0x189: V105 = M[0x40]
0x18c: V106 = SUB V103 V105
0x18e: RETURN V105 V106
---
Entry stack: [V10, 0x179, V409]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x179]

================================

Block 0x18f
[0x18f:0x195]
---
Predecessors: [0x76]
Successors: [0x196, 0x19a]
---
0x18f JUMPDEST
0x190 CALLVALUE
0x191 ISZERO
0x192 PUSH2 0x19a
0x195 JUMPI
---
0x18f: JUMPDEST 
0x190: V107 = CALLVALUE
0x191: V108 = ISZERO V107
0x192: V109 = 0x19a
0x195: JUMPI 0x19a V108
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x196
[0x196:0x199]
---
Predecessors: [0x18f]
Successors: []
---
0x196 PUSH1 0x0
0x198 DUP1
0x199 REVERT
---
0x196: V110 = 0x0
0x199: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x19a
[0x19a:0x1a1]
---
Predecessors: [0x18f]
Successors: [0x665]
---
0x19a JUMPDEST
0x19b PUSH2 0x1a2
0x19e PUSH2 0x665
0x1a1 JUMP
---
0x19a: JUMPDEST 
0x19b: V111 = 0x1a2
0x19e: V112 = 0x665
0x1a1: JUMP 0x665
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a2]
Exit stack: [V10, 0x1a2]

================================

Block 0x1a2
[0x1a2:0x1e3]
---
Predecessors: [0x665]
Successors: []
---
0x1a2 JUMPDEST
0x1a3 PUSH1 0x40
0x1a5 MLOAD
0x1a6 DUP1
0x1a7 DUP3
0x1a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bd AND
0x1be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d3 AND
0x1d4 DUP2
0x1d5 MSTORE
0x1d6 PUSH1 0x20
0x1d8 ADD
0x1d9 SWAP2
0x1da POP
0x1db POP
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP1
0x1e0 SWAP2
0x1e1 SUB
0x1e2 SWAP1
0x1e3 RETURN
---
0x1a2: JUMPDEST 
0x1a3: V113 = 0x40
0x1a5: V114 = M[0x40]
0x1a8: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x1be: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x1d5: M[V114] = V118
0x1d6: V119 = 0x20
0x1d8: V120 = ADD 0x20 V114
0x1dc: V121 = 0x40
0x1de: V122 = M[0x40]
0x1e1: V123 = SUB V120 V122
0x1e3: RETURN V122 V123
---
Entry stack: [V10, 0x1a2, V417]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1a2]

================================

Block 0x1e4
[0x1e4:0x1ea]
---
Predecessors: [0x81]
Successors: [0x1eb, 0x1ef]
---
0x1e4 JUMPDEST
0x1e5 CALLVALUE
0x1e6 ISZERO
0x1e7 PUSH2 0x1ef
0x1ea JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V124 = CALLVALUE
0x1e6: V125 = ISZERO V124
0x1e7: V126 = 0x1ef
0x1ea: JUMPI 0x1ef V125
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1eb
[0x1eb:0x1ee]
---
Predecessors: [0x1e4]
Successors: []
---
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee REVERT
---
0x1eb: V127 = 0x0
0x1ee: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ef
[0x1ef:0x1f6]
---
Predecessors: [0x1e4]
Successors: [0x68b]
---
0x1ef JUMPDEST
0x1f0 PUSH2 0x1f7
0x1f3 PUSH2 0x68b
0x1f6 JUMP
---
0x1ef: JUMPDEST 
0x1f0: V128 = 0x1f7
0x1f3: V129 = 0x68b
0x1f6: JUMP 0x68b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f7]
Exit stack: [V10, 0x1f7]

================================

Block 0x1f7
[0x1f7:0x20c]
---
Predecessors: [0x68b]
Successors: []
---
0x1f7 JUMPDEST
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb DUP1
0x1fc DUP3
0x1fd DUP2
0x1fe MSTORE
0x1ff PUSH1 0x20
0x201 ADD
0x202 SWAP2
0x203 POP
0x204 POP
0x205 PUSH1 0x40
0x207 MLOAD
0x208 DUP1
0x209 SWAP2
0x20a SUB
0x20b SWAP1
0x20c RETURN
---
0x1f7: JUMPDEST 
0x1f8: V130 = 0x40
0x1fa: V131 = M[0x40]
0x1fe: M[V131] = V419
0x1ff: V132 = 0x20
0x201: V133 = ADD 0x20 V131
0x205: V134 = 0x40
0x207: V135 = M[0x40]
0x20a: V136 = SUB V133 V135
0x20c: RETURN V135 V136
---
Entry stack: [V10, 0x1f7, V419]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1f7]

================================

Block 0x20d
[0x20d:0x213]
---
Predecessors: [0x8c]
Successors: [0x214, 0x218]
---
0x20d JUMPDEST
0x20e CALLVALUE
0x20f ISZERO
0x210 PUSH2 0x218
0x213 JUMPI
---
0x20d: JUMPDEST 
0x20e: V137 = CALLVALUE
0x20f: V138 = ISZERO V137
0x210: V139 = 0x218
0x213: JUMPI 0x218 V138
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x214
[0x214:0x217]
---
Predecessors: [0x20d]
Successors: []
---
0x214 PUSH1 0x0
0x216 DUP1
0x217 REVERT
---
0x214: V140 = 0x0
0x217: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x218
[0x218:0x21f]
---
Predecessors: [0x20d]
Successors: [0x691]
---
0x218 JUMPDEST
0x219 PUSH2 0x220
0x21c PUSH2 0x691
0x21f JUMP
---
0x218: JUMPDEST 
0x219: V141 = 0x220
0x21c: V142 = 0x691
0x21f: JUMP 0x691
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x220]
Exit stack: [V10, 0x220]

================================

Block 0x220
[0x220:0x235]
---
Predecessors: [0x691]
Successors: []
---
0x220 JUMPDEST
0x221 PUSH1 0x40
0x223 MLOAD
0x224 DUP1
0x225 DUP3
0x226 DUP2
0x227 MSTORE
0x228 PUSH1 0x20
0x22a ADD
0x22b SWAP2
0x22c POP
0x22d POP
0x22e PUSH1 0x40
0x230 MLOAD
0x231 DUP1
0x232 SWAP2
0x233 SUB
0x234 SWAP1
0x235 RETURN
---
0x220: JUMPDEST 
0x221: V143 = 0x40
0x223: V144 = M[0x40]
0x227: M[V144] = V421
0x228: V145 = 0x20
0x22a: V146 = ADD 0x20 V144
0x22e: V147 = 0x40
0x230: V148 = M[0x40]
0x233: V149 = SUB V146 V148
0x235: RETURN V148 V149
---
Entry stack: [V10, 0x220, V421]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x220]

================================

Block 0x236
[0x236:0x246]
---
Predecessors: [0x9c]
Successors: [0x247, 0x24b]
---
0x236 JUMPDEST
0x237 PUSH1 0x2
0x239 SLOAD
0x23a PUSH1 0x1
0x23c SLOAD
0x23d ADD
0x23e TIMESTAMP
0x23f GT
0x240 ISZERO
0x241 ISZERO
0x242 ISZERO
0x243 PUSH2 0x24b
0x246 JUMPI
---
0x236: JUMPDEST 
0x237: V150 = 0x2
0x239: V151 = S[0x2]
0x23a: V152 = 0x1
0x23c: V153 = S[0x1]
0x23d: V154 = ADD V153 V151
0x23e: V155 = TIMESTAMP
0x23f: V156 = GT V155 V154
0x240: V157 = ISZERO V156
0x241: V158 = ISZERO V157
0x242: V159 = ISZERO V158
0x243: V160 = 0x24b
0x246: JUMPI 0x24b V159
---
Entry stack: [V10, 0xa4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa4]

================================

Block 0x247
[0x247:0x24a]
---
Predecessors: [0x236]
Successors: []
---
0x247 PUSH1 0x0
0x249 DUP1
0x24a REVERT
---
0x247: V161 = 0x0
0x24a: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa4]

================================

Block 0x24b
[0x24b:0x256]
---
Predecessors: [0x236]
Successors: [0x257, 0x25b]
---
0x24b JUMPDEST
0x24c PUSH1 0x4
0x24e SLOAD
0x24f CALLVALUE
0x250 GT
0x251 ISZERO
0x252 ISZERO
0x253 PUSH2 0x25b
0x256 JUMPI
---
0x24b: JUMPDEST 
0x24c: V162 = 0x4
0x24e: V163 = S[0x4]
0x24f: V164 = CALLVALUE
0x250: V165 = GT V164 V163
0x251: V166 = ISZERO V165
0x252: V167 = ISZERO V166
0x253: V168 = 0x25b
0x256: JUMPI 0x25b V167
---
Entry stack: [V10, 0xa4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa4]

================================

Block 0x257
[0x257:0x25a]
---
Predecessors: [0x24b]
Successors: []
---
0x257 PUSH1 0x0
0x259 DUP1
0x25a REVERT
---
0x257: V169 = 0x0
0x25a: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa4]

================================

Block 0x25b
[0x25b:0x29d]
---
Predecessors: [0x24b]
Successors: [0x29e, 0x30f]
---
0x25b JUMPDEST
0x25c PUSH1 0x0
0x25e PUSH1 0x3
0x260 PUSH1 0x0
0x262 SWAP1
0x263 SLOAD
0x264 SWAP1
0x265 PUSH2 0x100
0x268 EXP
0x269 SWAP1
0x26a DIV
0x26b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x280 AND
0x281 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x296 AND
0x297 EQ
0x298 ISZERO
0x299 ISZERO
0x29a PUSH2 0x30f
0x29d JUMPI
---
0x25b: JUMPDEST 
0x25c: V170 = 0x0
0x25e: V171 = 0x3
0x260: V172 = 0x0
0x263: V173 = S[0x3]
0x265: V174 = 0x100
0x268: V175 = EXP 0x100 0x0
0x26a: V176 = DIV V173 0x1
0x26b: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x280: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x281: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x296: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x297: V181 = EQ V180 0x0
0x298: V182 = ISZERO V181
0x299: V183 = ISZERO V182
0x29a: V184 = 0x30f
0x29d: JUMPI 0x30f V183
---
Entry stack: [V10, 0xa4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa4]

================================

Block 0x29e
[0x29e:0x30e]
---
Predecessors: [0x25b]
Successors: [0x30f]
---
0x29e PUSH1 0x4
0x2a0 SLOAD
0x2a1 PUSH1 0x5
0x2a3 PUSH1 0x0
0x2a5 PUSH1 0x3
0x2a7 PUSH1 0x0
0x2a9 SWAP1
0x2aa SLOAD
0x2ab SWAP1
0x2ac PUSH2 0x100
0x2af EXP
0x2b0 SWAP1
0x2b1 DIV
0x2b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c7 AND
0x2c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dd AND
0x2de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f3 AND
0x2f4 DUP2
0x2f5 MSTORE
0x2f6 PUSH1 0x20
0x2f8 ADD
0x2f9 SWAP1
0x2fa DUP2
0x2fb MSTORE
0x2fc PUSH1 0x20
0x2fe ADD
0x2ff PUSH1 0x0
0x301 SHA3
0x302 PUSH1 0x0
0x304 DUP3
0x305 DUP3
0x306 SLOAD
0x307 ADD
0x308 SWAP3
0x309 POP
0x30a POP
0x30b DUP2
0x30c SWAP1
0x30d SSTORE
0x30e POP
---
0x29e: V185 = 0x4
0x2a0: V186 = S[0x4]
0x2a1: V187 = 0x5
0x2a3: V188 = 0x0
0x2a5: V189 = 0x3
0x2a7: V190 = 0x0
0x2aa: V191 = S[0x3]
0x2ac: V192 = 0x100
0x2af: V193 = EXP 0x100 0x0
0x2b1: V194 = DIV V191 0x1
0x2b2: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c7: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x2c8: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dd: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x2de: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f3: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x2f5: M[0x0] = V200
0x2f6: V201 = 0x20
0x2f8: V202 = ADD 0x20 0x0
0x2fb: M[0x20] = 0x5
0x2fc: V203 = 0x20
0x2fe: V204 = ADD 0x20 0x20
0x2ff: V205 = 0x0
0x301: V206 = SHA3 0x0 0x40
0x302: V207 = 0x0
0x306: V208 = S[V206]
0x307: V209 = ADD V208 V186
0x30d: S[V206] = V209
---
Entry stack: [V10, 0xa4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa4]

================================

Block 0x30f
[0x30f:0x3c2]
---
Predecessors: [0x25b, 0x29e]
Successors: [0x3c3]
---
0x30f JUMPDEST
0x310 CALLER
0x311 PUSH1 0x3
0x313 PUSH1 0x0
0x315 PUSH2 0x100
0x318 EXP
0x319 DUP2
0x31a SLOAD
0x31b DUP2
0x31c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x331 MUL
0x332 NOT
0x333 AND
0x334 SWAP1
0x335 DUP4
0x336 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34b AND
0x34c MUL
0x34d OR
0x34e SWAP1
0x34f SSTORE
0x350 POP
0x351 CALLVALUE
0x352 PUSH1 0x4
0x354 DUP2
0x355 SWAP1
0x356 SSTORE
0x357 POP
0x358 PUSH32 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x379 CALLER
0x37a CALLVALUE
0x37b PUSH1 0x40
0x37d MLOAD
0x37e DUP1
0x37f DUP4
0x380 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x395 AND
0x396 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ab AND
0x3ac DUP2
0x3ad MSTORE
0x3ae PUSH1 0x20
0x3b0 ADD
0x3b1 DUP3
0x3b2 DUP2
0x3b3 MSTORE
0x3b4 PUSH1 0x20
0x3b6 ADD
0x3b7 SWAP3
0x3b8 POP
0x3b9 POP
0x3ba POP
0x3bb PUSH1 0x40
0x3bd MLOAD
0x3be DUP1
0x3bf SWAP2
0x3c0 SUB
0x3c1 SWAP1
0x3c2 LOG1
---
0x30f: JUMPDEST 
0x310: V210 = CALLER
0x311: V211 = 0x3
0x313: V212 = 0x0
0x315: V213 = 0x100
0x318: V214 = EXP 0x100 0x0
0x31a: V215 = S[0x3]
0x31c: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x331: V217 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x332: V218 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x333: V219 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V215
0x336: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x34b: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x34c: V222 = MUL V221 0x1
0x34d: V223 = OR V222 V219
0x34f: S[0x3] = V223
0x351: V224 = CALLVALUE
0x352: V225 = 0x4
0x356: S[0x4] = V224
0x358: V226 = 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x379: V227 = CALLER
0x37a: V228 = CALLVALUE
0x37b: V229 = 0x40
0x37d: V230 = M[0x40]
0x380: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x395: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x396: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x3ad: M[V230] = V234
0x3ae: V235 = 0x20
0x3b0: V236 = ADD 0x20 V230
0x3b3: M[V236] = V228
0x3b4: V237 = 0x20
0x3b6: V238 = ADD 0x20 V236
0x3bb: V239 = 0x40
0x3bd: V240 = M[0x40]
0x3c0: V241 = SUB V238 V240
0x3c2: LOG V240 V241 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
---
Entry stack: [V10, 0xa4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa4]

================================

Block 0x3c3
[0x3c3:0x3c4]
---
Predecessors: [0x30f]
Successors: [0xa4]
---
0x3c3 JUMPDEST
0x3c4 JUMP
---
0x3c3: JUMPDEST 
0x3c4: JUMP 0xa4
---
Entry stack: [V10, 0xa4]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c5
[0x3c5:0x3d5]
---
Predecessors: [0xb1]
Successors: [0x3d6, 0x3da]
---
0x3c5 JUMPDEST
0x3c6 PUSH1 0x2
0x3c8 SLOAD
0x3c9 PUSH1 0x1
0x3cb SLOAD
0x3cc ADD
0x3cd TIMESTAMP
0x3ce LT
0x3cf ISZERO
0x3d0 ISZERO
0x3d1 ISZERO
0x3d2 PUSH2 0x3da
0x3d5 JUMPI
---
0x3c5: JUMPDEST 
0x3c6: V242 = 0x2
0x3c8: V243 = S[0x2]
0x3c9: V244 = 0x1
0x3cb: V245 = S[0x1]
0x3cc: V246 = ADD V245 V243
0x3cd: V247 = TIMESTAMP
0x3ce: V248 = LT V247 V246
0x3cf: V249 = ISZERO V248
0x3d0: V250 = ISZERO V249
0x3d1: V251 = ISZERO V250
0x3d2: V252 = 0x3da
0x3d5: JUMPI 0x3da V251
---
Entry stack: [V10, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb9]

================================

Block 0x3d6
[0x3d6:0x3d9]
---
Predecessors: [0x3c5]
Successors: []
---
0x3d6 PUSH1 0x0
0x3d8 DUP1
0x3d9 REVERT
---
0x3d6: V253 = 0x0
0x3d9: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb9]

================================

Block 0x3da
[0x3da:0x3f1]
---
Predecessors: [0x3c5]
Successors: [0x3f2, 0x3f6]
---
0x3da JUMPDEST
0x3db PUSH1 0x6
0x3dd PUSH1 0x0
0x3df SWAP1
0x3e0 SLOAD
0x3e1 SWAP1
0x3e2 PUSH2 0x100
0x3e5 EXP
0x3e6 SWAP1
0x3e7 DIV
0x3e8 PUSH1 0xff
0x3ea AND
0x3eb ISZERO
0x3ec ISZERO
0x3ed ISZERO
0x3ee PUSH2 0x3f6
0x3f1 JUMPI
---
0x3da: JUMPDEST 
0x3db: V254 = 0x6
0x3dd: V255 = 0x0
0x3e0: V256 = S[0x6]
0x3e2: V257 = 0x100
0x3e5: V258 = EXP 0x100 0x0
0x3e7: V259 = DIV V256 0x1
0x3e8: V260 = 0xff
0x3ea: V261 = AND 0xff V259
0x3eb: V262 = ISZERO V261
0x3ec: V263 = ISZERO V262
0x3ed: V264 = ISZERO V263
0x3ee: V265 = 0x3f6
0x3f1: JUMPI 0x3f6 V264
---
Entry stack: [V10, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb9]

================================

Block 0x3f2
[0x3f2:0x3f5]
---
Predecessors: [0x3da]
Successors: []
---
0x3f2 PUSH1 0x0
0x3f4 DUP1
0x3f5 REVERT
---
0x3f2: V266 = 0x0
0x3f5: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb9]

================================

Block 0x3f6
[0x3f6:0x4fe]
---
Predecessors: [0x3da]
Successors: [0x4ff, 0x503]
---
0x3f6 JUMPDEST
0x3f7 PUSH1 0x1
0x3f9 PUSH1 0x6
0x3fb PUSH1 0x0
0x3fd PUSH2 0x100
0x400 EXP
0x401 DUP2
0x402 SLOAD
0x403 DUP2
0x404 PUSH1 0xff
0x406 MUL
0x407 NOT
0x408 AND
0x409 SWAP1
0x40a DUP4
0x40b ISZERO
0x40c ISZERO
0x40d MUL
0x40e OR
0x40f SWAP1
0x410 SSTORE
0x411 POP
0x412 PUSH32 0xdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda
0x433 PUSH1 0x3
0x435 PUSH1 0x0
0x437 SWAP1
0x438 SLOAD
0x439 SWAP1
0x43a PUSH2 0x100
0x43d EXP
0x43e SWAP1
0x43f DIV
0x440 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x455 AND
0x456 PUSH1 0x4
0x458 SLOAD
0x459 PUSH1 0x40
0x45b MLOAD
0x45c DUP1
0x45d DUP4
0x45e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x473 AND
0x474 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x489 AND
0x48a DUP2
0x48b MSTORE
0x48c PUSH1 0x20
0x48e ADD
0x48f DUP3
0x490 DUP2
0x491 MSTORE
0x492 PUSH1 0x20
0x494 ADD
0x495 SWAP3
0x496 POP
0x497 POP
0x498 POP
0x499 PUSH1 0x40
0x49b MLOAD
0x49c DUP1
0x49d SWAP2
0x49e SUB
0x49f SWAP1
0x4a0 LOG1
0x4a1 PUSH1 0x0
0x4a3 DUP1
0x4a4 SWAP1
0x4a5 SLOAD
0x4a6 SWAP1
0x4a7 PUSH2 0x100
0x4aa EXP
0x4ab SWAP1
0x4ac DIV
0x4ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c2 AND
0x4c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d8 AND
0x4d9 PUSH2 0x8fc
0x4dc PUSH1 0x4
0x4de SLOAD
0x4df SWAP1
0x4e0 DUP2
0x4e1 ISZERO
0x4e2 MUL
0x4e3 SWAP1
0x4e4 PUSH1 0x40
0x4e6 MLOAD
0x4e7 PUSH1 0x0
0x4e9 PUSH1 0x40
0x4eb MLOAD
0x4ec DUP1
0x4ed DUP4
0x4ee SUB
0x4ef DUP2
0x4f0 DUP6
0x4f1 DUP9
0x4f2 DUP9
0x4f3 CALL
0x4f4 SWAP4
0x4f5 POP
0x4f6 POP
0x4f7 POP
0x4f8 POP
0x4f9 ISZERO
0x4fa ISZERO
0x4fb PUSH2 0x503
0x4fe JUMPI
---
0x3f6: JUMPDEST 
0x3f7: V267 = 0x1
0x3f9: V268 = 0x6
0x3fb: V269 = 0x0
0x3fd: V270 = 0x100
0x400: V271 = EXP 0x100 0x0
0x402: V272 = S[0x6]
0x404: V273 = 0xff
0x406: V274 = MUL 0xff 0x1
0x407: V275 = NOT 0xff
0x408: V276 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V272
0x40b: V277 = ISZERO 0x1
0x40c: V278 = ISZERO 0x0
0x40d: V279 = MUL 0x1 0x1
0x40e: V280 = OR 0x1 V276
0x410: S[0x6] = V280
0x412: V281 = 0xdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda
0x433: V282 = 0x3
0x435: V283 = 0x0
0x438: V284 = S[0x3]
0x43a: V285 = 0x100
0x43d: V286 = EXP 0x100 0x0
0x43f: V287 = DIV V284 0x1
0x440: V288 = 0xffffffffffffffffffffffffffffffffffffffff
0x455: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x456: V290 = 0x4
0x458: V291 = S[0x4]
0x459: V292 = 0x40
0x45b: V293 = M[0x40]
0x45e: V294 = 0xffffffffffffffffffffffffffffffffffffffff
0x473: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x474: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x489: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x48b: M[V293] = V297
0x48c: V298 = 0x20
0x48e: V299 = ADD 0x20 V293
0x491: M[V299] = V291
0x492: V300 = 0x20
0x494: V301 = ADD 0x20 V299
0x499: V302 = 0x40
0x49b: V303 = M[0x40]
0x49e: V304 = SUB V301 V303
0x4a0: LOG V303 V304 0xdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda
0x4a1: V305 = 0x0
0x4a5: V306 = S[0x0]
0x4a7: V307 = 0x100
0x4aa: V308 = EXP 0x100 0x0
0x4ac: V309 = DIV V306 0x1
0x4ad: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c2: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x4c3: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d8: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x4d9: V314 = 0x8fc
0x4dc: V315 = 0x4
0x4de: V316 = S[0x4]
0x4e1: V317 = ISZERO V316
0x4e2: V318 = MUL V317 0x8fc
0x4e4: V319 = 0x40
0x4e6: V320 = M[0x40]
0x4e7: V321 = 0x0
0x4e9: V322 = 0x40
0x4eb: V323 = M[0x40]
0x4ee: V324 = SUB V320 V323
0x4f3: V325 = CALL V318 V313 V316 V323 V324 V323 0x0
0x4f9: V326 = ISZERO V325
0x4fa: V327 = ISZERO V326
0x4fb: V328 = 0x503
0x4fe: JUMPI 0x503 V327
---
Entry stack: [V10, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb9]

================================

Block 0x4ff
[0x4ff:0x502]
---
Predecessors: [0x3f6]
Successors: []
---
0x4ff PUSH1 0x0
0x501 DUP1
0x502 REVERT
---
0x4ff: V329 = 0x0
0x502: REVERT 0x0 0x0
---
Entry stack: [V10, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb9]

================================

Block 0x503
[0x503:0x503]
---
Predecessors: [0x3f6]
Successors: [0x504]
---
0x503 JUMPDEST
---
0x503: JUMPDEST 
---
Entry stack: [V10, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb9]

================================

Block 0x504
[0x504:0x505]
---
Predecessors: [0x503]
Successors: [0xb9]
---
0x504 JUMPDEST
0x505 JUMP
---
0x504: JUMPDEST 
0x505: JUMP 0xb9
---
Entry stack: [V10, 0xb9]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x506
[0x506:0x52a]
---
Predecessors: [0xc6]
Successors: [0xce]
---
0x506 JUMPDEST
0x507 PUSH1 0x0
0x509 DUP1
0x50a SWAP1
0x50b SLOAD
0x50c SWAP1
0x50d PUSH2 0x100
0x510 EXP
0x511 SWAP1
0x512 DIV
0x513 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x528 AND
0x529 DUP2
0x52a JUMP
---
0x506: JUMPDEST 
0x507: V330 = 0x0
0x50b: V331 = S[0x0]
0x50d: V332 = 0x100
0x510: V333 = EXP 0x100 0x0
0x512: V334 = DIV V331 0x1
0x513: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x528: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x52a: JUMP 0xce
---
Entry stack: [V10, 0xce]
Stack pops: 1
Stack additions: [S0, V336]
Exit stack: [V10, 0xce, V336]

================================

Block 0x52b
[0x52b:0x579]
---
Predecessors: [0x11b]
Successors: [0x57a, 0x647]
---
0x52b JUMPDEST
0x52c PUSH1 0x0
0x52e DUP1
0x52f PUSH1 0x5
0x531 PUSH1 0x0
0x533 CALLER
0x534 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x549 AND
0x54a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55f AND
0x560 DUP2
0x561 MSTORE
0x562 PUSH1 0x20
0x564 ADD
0x565 SWAP1
0x566 DUP2
0x567 MSTORE
0x568 PUSH1 0x20
0x56a ADD
0x56b PUSH1 0x0
0x56d SHA3
0x56e SLOAD
0x56f SWAP1
0x570 POP
0x571 PUSH1 0x0
0x573 DUP2
0x574 GT
0x575 ISZERO
0x576 PUSH2 0x647
0x579 JUMPI
---
0x52b: JUMPDEST 
0x52c: V337 = 0x0
0x52f: V338 = 0x5
0x531: V339 = 0x0
0x533: V340 = CALLER
0x534: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x549: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x54a: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x55f: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x561: M[0x0] = V344
0x562: V345 = 0x20
0x564: V346 = ADD 0x20 0x0
0x567: M[0x20] = 0x5
0x568: V347 = 0x20
0x56a: V348 = ADD 0x20 0x20
0x56b: V349 = 0x0
0x56d: V350 = SHA3 0x0 0x40
0x56e: V351 = S[V350]
0x571: V352 = 0x0
0x574: V353 = GT V351 0x0
0x575: V354 = ISZERO V353
0x576: V355 = 0x647
0x579: JUMPI 0x647 V354
---
Entry stack: [V10, 0x123]
Stack pops: 0
Stack additions: [0x0, V351]
Exit stack: [V10, 0x123, 0x0, V351]

================================

Block 0x57a
[0x57a:0x5f9]
---
Predecessors: [0x52b]
Successors: [0x5fa, 0x646]
---
0x57a PUSH1 0x0
0x57c PUSH1 0x5
0x57e PUSH1 0x0
0x580 CALLER
0x581 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x596 AND
0x597 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ac AND
0x5ad DUP2
0x5ae MSTORE
0x5af PUSH1 0x20
0x5b1 ADD
0x5b2 SWAP1
0x5b3 DUP2
0x5b4 MSTORE
0x5b5 PUSH1 0x20
0x5b7 ADD
0x5b8 PUSH1 0x0
0x5ba SHA3
0x5bb DUP2
0x5bc SWAP1
0x5bd SSTORE
0x5be POP
0x5bf CALLER
0x5c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d5 AND
0x5d6 PUSH2 0x8fc
0x5d9 DUP3
0x5da SWAP1
0x5db DUP2
0x5dc ISZERO
0x5dd MUL
0x5de SWAP1
0x5df PUSH1 0x40
0x5e1 MLOAD
0x5e2 PUSH1 0x0
0x5e4 PUSH1 0x40
0x5e6 MLOAD
0x5e7 DUP1
0x5e8 DUP4
0x5e9 SUB
0x5ea DUP2
0x5eb DUP6
0x5ec DUP9
0x5ed DUP9
0x5ee CALL
0x5ef SWAP4
0x5f0 POP
0x5f1 POP
0x5f2 POP
0x5f3 POP
0x5f4 ISZERO
0x5f5 ISZERO
0x5f6 PUSH2 0x646
0x5f9 JUMPI
---
0x57a: V356 = 0x0
0x57c: V357 = 0x5
0x57e: V358 = 0x0
0x580: V359 = CALLER
0x581: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x596: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x597: V362 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ac: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x5ae: M[0x0] = V363
0x5af: V364 = 0x20
0x5b1: V365 = ADD 0x20 0x0
0x5b4: M[0x20] = 0x5
0x5b5: V366 = 0x20
0x5b7: V367 = ADD 0x20 0x20
0x5b8: V368 = 0x0
0x5ba: V369 = SHA3 0x0 0x40
0x5bd: S[V369] = 0x0
0x5bf: V370 = CALLER
0x5c0: V371 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d5: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x5d6: V373 = 0x8fc
0x5dc: V374 = ISZERO V351
0x5dd: V375 = MUL V374 0x8fc
0x5df: V376 = 0x40
0x5e1: V377 = M[0x40]
0x5e2: V378 = 0x0
0x5e4: V379 = 0x40
0x5e6: V380 = M[0x40]
0x5e9: V381 = SUB V377 V380
0x5ee: V382 = CALL V375 V372 V351 V380 V381 V380 0x0
0x5f4: V383 = ISZERO V382
0x5f5: V384 = ISZERO V383
0x5f6: V385 = 0x646
0x5f9: JUMPI 0x646 V384
---
Entry stack: [V10, 0x123, 0x0, V351]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x123, 0x0, V351]

================================

Block 0x5fa
[0x5fa:0x645]
---
Predecessors: [0x57a]
Successors: [0x64c]
---
0x5fa DUP1
0x5fb PUSH1 0x5
0x5fd PUSH1 0x0
0x5ff CALLER
0x600 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x615 AND
0x616 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62b AND
0x62c DUP2
0x62d MSTORE
0x62e PUSH1 0x20
0x630 ADD
0x631 SWAP1
0x632 DUP2
0x633 MSTORE
0x634 PUSH1 0x20
0x636 ADD
0x637 PUSH1 0x0
0x639 SHA3
0x63a DUP2
0x63b SWAP1
0x63c SSTORE
0x63d POP
0x63e PUSH1 0x0
0x640 SWAP2
0x641 POP
0x642 PUSH2 0x64c
0x645 JUMP
---
0x5fb: V386 = 0x5
0x5fd: V387 = 0x0
0x5ff: V388 = CALLER
0x600: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x615: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x616: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x62b: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x62d: M[0x0] = V392
0x62e: V393 = 0x20
0x630: V394 = ADD 0x20 0x0
0x633: M[0x20] = 0x5
0x634: V395 = 0x20
0x636: V396 = ADD 0x20 0x20
0x637: V397 = 0x0
0x639: V398 = SHA3 0x0 0x40
0x63c: S[V398] = V351
0x63e: V399 = 0x0
0x642: V400 = 0x64c
0x645: JUMP 0x64c
---
Entry stack: [V10, 0x123, 0x0, V351]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x123, 0x0, V351]

================================

Block 0x646
[0x646:0x646]
---
Predecessors: [0x57a]
Successors: [0x647]
---
0x646 JUMPDEST
---
0x646: JUMPDEST 
---
Entry stack: [V10, 0x123, 0x0, V351]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x123, 0x0, V351]

================================

Block 0x647
[0x647:0x64b]
---
Predecessors: [0x52b, 0x646]
Successors: [0x64c]
---
0x647 JUMPDEST
0x648 PUSH1 0x1
0x64a SWAP2
0x64b POP
---
0x647: JUMPDEST 
0x648: V401 = 0x1
---
Entry stack: [V10, 0x123, 0x0, V351]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V10, 0x123, 0x1, V351]

================================

Block 0x64c
[0x64c:0x64f]
---
Predecessors: [0x5fa, 0x647]
Successors: [0x123]
---
0x64c JUMPDEST
0x64d POP
0x64e SWAP1
0x64f JUMP
---
0x64c: JUMPDEST 
0x64f: JUMP 0x123
---
Entry stack: [V10, 0x123, {0x0, 0x1}, V351]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x650
[0x650:0x65b]
---
Predecessors: [0x148]
Successors: [0x65c]
---
0x650 JUMPDEST
0x651 PUSH1 0x0
0x653 PUSH1 0x2
0x655 SLOAD
0x656 PUSH1 0x1
0x658 SLOAD
0x659 ADD
0x65a SWAP1
0x65b POP
---
0x650: JUMPDEST 
0x651: V402 = 0x0
0x653: V403 = 0x2
0x655: V404 = S[0x2]
0x656: V405 = 0x1
0x658: V406 = S[0x1]
0x659: V407 = ADD V406 V404
---
Entry stack: [V10, 0x150]
Stack pops: 0
Stack additions: [V407]
Exit stack: [V10, 0x150, V407]

================================

Block 0x65c
[0x65c:0x65e]
---
Predecessors: [0x650]
Successors: [0x150]
---
0x65c JUMPDEST
0x65d SWAP1
0x65e JUMP
---
0x65c: JUMPDEST 
0x65e: JUMP 0x150
---
Entry stack: [V10, 0x150, V407]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V407]

================================

Block 0x65f
[0x65f:0x664]
---
Predecessors: [0x171]
Successors: [0x179]
---
0x65f JUMPDEST
0x660 PUSH1 0x1
0x662 SLOAD
0x663 DUP2
0x664 JUMP
---
0x65f: JUMPDEST 
0x660: V408 = 0x1
0x662: V409 = S[0x1]
0x664: JUMP 0x179
---
Entry stack: [V10, 0x179]
Stack pops: 1
Stack additions: [S0, V409]
Exit stack: [V10, 0x179, V409]

================================

Block 0x665
[0x665:0x68a]
---
Predecessors: [0x19a]
Successors: [0x1a2]
---
0x665 JUMPDEST
0x666 PUSH1 0x3
0x668 PUSH1 0x0
0x66a SWAP1
0x66b SLOAD
0x66c SWAP1
0x66d PUSH2 0x100
0x670 EXP
0x671 SWAP1
0x672 DIV
0x673 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x688 AND
0x689 DUP2
0x68a JUMP
---
0x665: JUMPDEST 
0x666: V410 = 0x3
0x668: V411 = 0x0
0x66b: V412 = S[0x3]
0x66d: V413 = 0x100
0x670: V414 = EXP 0x100 0x0
0x672: V415 = DIV V412 0x1
0x673: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x688: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x68a: JUMP 0x1a2
---
Entry stack: [V10, 0x1a2]
Stack pops: 1
Stack additions: [S0, V417]
Exit stack: [V10, 0x1a2, V417]

================================

Block 0x68b
[0x68b:0x690]
---
Predecessors: [0x1ef]
Successors: [0x1f7]
---
0x68b JUMPDEST
0x68c PUSH1 0x2
0x68e SLOAD
0x68f DUP2
0x690 JUMP
---
0x68b: JUMPDEST 
0x68c: V418 = 0x2
0x68e: V419 = S[0x2]
0x690: JUMP 0x1f7
---
Entry stack: [V10, 0x1f7]
Stack pops: 1
Stack additions: [S0, V419]
Exit stack: [V10, 0x1f7, V419]

================================

Block 0x691
[0x691:0x696]
---
Predecessors: [0x218]
Successors: [0x220]
---
0x691 JUMPDEST
0x692 PUSH1 0x4
0x694 SLOAD
0x695 DUP2
0x696 JUMP
---
0x691: JUMPDEST 
0x692: V420 = 0x4
0x694: V421 = S[0x4]
0x696: JUMP 0x220
---
Entry stack: [V10, 0x220]
Stack pops: 1
Stack additions: [S0, V421]
Exit stack: [V10, 0x220, V421]

================================

Block 0x697
[0x697:0x6c2]
---
Predecessors: []
Successors: []
---
0x697 STOP
0x698 LOG1
0x699 PUSH6 0x627a7a723058
0x6a0 SHA3
0x6a1 NUMBER
0x6a2 CALL
0x6a3 MISSING 0xe6
0x6a4 MISSING 0x26
0x6a5 MSTORE
0x6a6 MISSING 0xaa
0x6a7 CALL
0x6a8 SWAP6
0x6a9 MISSING 0xce
0x6aa INVALID
0x6ab SSTORE
0x6ac SIGNEXTEND
0x6ad SDIV
0x6ae DUP13
0x6af MOD
0x6b0 MISSING 0xd2
0x6b1 MISSING 0xea
0x6b2 SUB
0x6b3 MISSING 0xc5
0x6b4 BLOCKHASH
0x6b5 PUSH8 0x8d89041475b30d92
0x6be MISSING 0x24
0x6bf DIFFICULTY
0x6c0 ADDMOD
0x6c1 STOP
0x6c2 MISSING 0x29
---
0x697: STOP 
0x698: LOG S0 S1 S2
0x699: V422 = 0x627a7a723058
0x6a0: V423 = SHA3 0x627a7a723058 S3
0x6a1: V424 = NUMBER
0x6a2: V425 = CALL V424 V423 S4 S5 S6 S7 S8
0x6a3: MISSING 0xe6
0x6a4: MISSING 0x26
0x6a5: M[S0] = S1
0x6a6: MISSING 0xaa
0x6a7: V426 = CALL S0 S1 S2 S3 S4 S5 S6
0x6a9: MISSING 0xce
0x6aa: INVALID 
0x6ab: S[S0] = S1
0x6ac: V427 = SIGNEXTEND S2 S3
0x6ad: V428 = SDIV V427 S4
0x6af: V429 = MOD S16 V428
0x6b0: MISSING 0xd2
0x6b1: MISSING 0xea
0x6b2: V430 = SUB S0 S1
0x6b3: MISSING 0xc5
0x6b4: V431 = BLOCKHASH S0
0x6b5: V432 = 0x8d89041475b30d92
0x6be: MISSING 0x24
0x6bf: V433 = DIFFICULTY
0x6c0: V434 = ADDMOD V433 S0 S1
0x6c1: STOP 
0x6c2: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V425, S12, S7, S8, S9, S10, S11, V426, V429, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, V430, 0x8d89041475b30d92, V431, V434]
Exit stack: []

================================

Function 0:
Public function signature: 0x1998aeef
Entry block: 0x9c
Exit block: 0xa4
Body: 0x9c, 0xa4, 0x236, 0x247, 0x24b, 0x257, 0x25b, 0x29e, 0x30f, 0x3c3

Function 1:
Public function signature: 0x2a24f46c
Entry block: 0xa6
Exit block: 0xb9
Body: 0xa6, 0xad, 0xb1, 0xb9, 0x3c5, 0x3d6, 0x3da, 0x3f2, 0x3f6, 0x4ff, 0x503, 0x504

Function 2:
Public function signature: 0x38af3eed
Entry block: 0xbb
Exit block: 0xce
Body: 0xbb, 0xc2, 0xc6, 0xce, 0x506

Function 3:
Public function signature: 0x3ccfd60b
Entry block: 0x110
Exit block: 0x123
Body: 0x110, 0x117, 0x11b, 0x123, 0x52b, 0x57a, 0x5fa, 0x646, 0x647, 0x64c

Function 4:
Public function signature: 0x4b449cba
Entry block: 0x13d
Exit block: 0x150
Body: 0x13d, 0x144, 0x148, 0x150, 0x650, 0x65c

Function 5:
Public function signature: 0x4f245ef7
Entry block: 0x166
Exit block: 0x179
Body: 0x166, 0x16d, 0x171, 0x179, 0x65f

Function 6:
Public function signature: 0x91f90157
Entry block: 0x18f
Exit block: 0x1a2
Body: 0x18f, 0x196, 0x19a, 0x1a2, 0x665

Function 7:
Public function signature: 0xd074a38d
Entry block: 0x1e4
Exit block: 0x1f7
Body: 0x1e4, 0x1eb, 0x1ef, 0x1f7, 0x68b

Function 8:
Public function signature: 0xd57bde79
Entry block: 0x20d
Exit block: 0x220
Body: 0x20d, 0x214, 0x218, 0x220, 0x691

Function 9:
Public fallback function
Entry block: 0x97
Exit block: 0x97
Body: 0x97

