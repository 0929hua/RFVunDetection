Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x98]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x98
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x98
0xa: JUMPI 0x98 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0xa3]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x8551a53
0x19 DUP2
0x1a EQ
0x1b PUSH2 0xa3
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x8551a53
0x1a: V12 = EQ V10 0x8551a53
0x1b: V13 = 0xa3
0x1e: JUMPI 0xa3 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xb5]
---
0x1f DUP1
0x20 PUSH4 0x13f654df
0x25 EQ
0x26 PUSH2 0xb5
0x29 JUMPI
---
0x20: V14 = 0x13f654df
0x25: V15 = EQ 0x13f654df V10
0x26: V16 = 0xb5
0x29: JUMPI 0xb5 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xbe]
---
0x2a DUP1
0x2b PUSH4 0x1998aeef
0x30 EQ
0x31 PUSH2 0xbe
0x34 JUMPI
---
0x2b: V17 = 0x1998aeef
0x30: V18 = EQ 0x1998aeef V10
0x31: V19 = 0xbe
0x34: JUMPI 0xbe V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xd4]
---
0x35 DUP1
0x36 PUSH4 0x3ce123dc
0x3b EQ
0x3c PUSH2 0xd4
0x3f JUMPI
---
0x36: V20 = 0x3ce123dc
0x3b: V21 = EQ 0x3ce123dc V10
0x3c: V22 = 0xd4
0x3f: JUMPI 0xd4 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0xe6]
---
0x40 DUP1
0x41 PUSH4 0x547eeac1
0x46 EQ
0x47 PUSH2 0xe6
0x4a JUMPI
---
0x41: V23 = 0x547eeac1
0x46: V24 = EQ 0x547eeac1 V10
0x47: V25 = 0xe6
0x4a: JUMPI 0xe6 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x115]
---
0x4b DUP1
0x4c PUSH4 0x56bff0f8
0x51 EQ
0x52 PUSH2 0x115
0x55 JUMPI
---
0x4c: V26 = 0x56bff0f8
0x51: V27 = EQ 0x56bff0f8 V10
0x52: V28 = 0x115
0x55: JUMPI 0x115 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x127]
---
0x56 DUP1
0x57 PUSH4 0x8622a689
0x5c EQ
0x5d PUSH2 0x127
0x60 JUMPI
---
0x57: V29 = 0x8622a689
0x5c: V30 = EQ 0x8622a689 V10
0x5d: V31 = 0x127
0x60: JUMPI 0x127 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x130]
---
0x61 DUP1
0x62 PUSH4 0xa5cf651f
0x67 EQ
0x68 PUSH2 0x130
0x6b JUMPI
---
0x62: V32 = 0xa5cf651f
0x67: V33 = EQ 0xa5cf651f V10
0x68: V34 = 0x130
0x6b: JUMPI 0x130 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x139]
---
0x6c DUP1
0x6d PUSH4 0xb6cc986f
0x72 EQ
0x73 PUSH2 0x139
0x76 JUMPI
---
0x6d: V35 = 0xb6cc986f
0x72: V36 = EQ 0xb6cc986f V10
0x73: V37 = 0x139
0x76: JUMPI 0x139 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x142]
---
0x77 DUP1
0x78 PUSH4 0xed54746e
0x7d EQ
0x7e PUSH2 0x142
0x81 JUMPI
---
0x78: V38 = 0xed54746e
0x7d: V39 = EQ 0xed54746e V10
0x7e: V40 = 0x142
0x81: JUMPI 0x142 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x15f]
---
0x82 DUP1
0x83 PUSH4 0xf2fde38b
0x88 EQ
0x89 PUSH2 0x15f
0x8c JUMPI
---
0x83: V41 = 0xf2fde38b
0x88: V42 = EQ 0xf2fde38b V10
0x89: V43 = 0x15f
0x8c: JUMPI 0x15f V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x181]
---
0x8d DUP1
0x8e PUSH4 0xfe67a54b
0x93 EQ
0x94 PUSH2 0x181
0x97 JUMPI
---
0x8e: V44 = 0xfe67a54b
0x93: V45 = EQ 0xfe67a54b V10
0x94: V46 = 0x181
0x97: JUMPI 0x181 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x0, 0x8d]
Successors: [0xc2]
---
0x98 JUMPDEST
0x99 PUSH2 0x194
0x9c PUSH2 0x15d
0x9f PUSH2 0xc2
0xa2 JUMP
---
0x98: JUMPDEST 
0x99: V47 = 0x194
0x9c: V48 = 0x15d
0x9f: V49 = 0xc2
0xa2: JUMP 0xc2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x194, 0x15d]
Exit stack: [V10, 0x194, 0x15d]

================================

Block 0xa3
[0xa3:0xb4]
---
Predecessors: [0xb]
Successors: [0x196]
---
0xa3 JUMPDEST
0xa4 PUSH2 0x196
0xa7 PUSH1 0x4
0xa9 SLOAD
0xaa PUSH1 0x1
0xac PUSH1 0xa0
0xae PUSH1 0x2
0xb0 EXP
0xb1 SUB
0xb2 AND
0xb3 DUP2
0xb4 JUMP
---
0xa3: JUMPDEST 
0xa4: V50 = 0x196
0xa7: V51 = 0x4
0xa9: V52 = S[0x4]
0xaa: V53 = 0x1
0xac: V54 = 0xa0
0xae: V55 = 0x2
0xb0: V56 = EXP 0x2 0xa0
0xb1: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xb4: JUMP 0x196
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x196, V58]
Exit stack: [V10, 0x196, V58]

================================

Block 0xb5
[0xb5:0xbd]
---
Predecessors: [0x1f]
Successors: [0x1b3]
---
0xb5 JUMPDEST
0xb6 PUSH2 0x1b3
0xb9 PUSH1 0x2
0xbb SLOAD
0xbc DUP2
0xbd JUMP
---
0xb5: JUMPDEST 
0xb6: V59 = 0x1b3
0xb9: V60 = 0x2
0xbb: V61 = S[0x2]
0xbd: JUMP 0x1b3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b3, V61]
Exit stack: [V10, 0x1b3, V61]

================================

Block 0xbe
[0xbe:0xc1]
---
Predecessors: [0x2a]
Successors: [0xc2]
---
0xbe JUMPDEST
0xbf PUSH2 0x194
---
0xbe: JUMPDEST 
0xbf: V62 = 0x194
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x194]
Exit stack: [V10, 0x194]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0x98, 0xbe]
Successors: [0xcd, 0x1c5]
---
0xc2 JUMPDEST
0xc3 PUSH1 0x3
0xc5 SLOAD
0xc6 TIMESTAMP
0xc7 GT
0xc8 ISZERO
0xc9 PUSH2 0x1c5
0xcc JUMPI
---
0xc2: JUMPDEST 
0xc3: V63 = 0x3
0xc5: V64 = S[0x3]
0xc6: V65 = TIMESTAMP
0xc7: V66 = GT V65 V64
0xc8: V67 = ISZERO V66
0xc9: V68 = 0x1c5
0xcc: JUMPI 0x1c5 V67
---
Entry stack: [V10, S1, {0x15d, 0x194}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x15d, 0x194}]

================================

Block 0xcd
[0xcd:0xd3]
---
Predecessors: [0xc2]
Successors: [0x185]
---
0xcd PUSH2 0x1c5
0xd0 PUSH2 0x185
0xd3 JUMP
---
0xcd: V69 = 0x1c5
0xd0: V70 = 0x185
0xd3: JUMP 0x185
---
Entry stack: [V10, S1, {0x15d, 0x194}]
Stack pops: 0
Stack additions: [0x1c5]
Exit stack: [V10, S1, {0x15d, 0x194}, 0x1c5]

================================

Block 0xd4
[0xd4:0xe5]
---
Predecessors: [0x35]
Successors: [0x196]
---
0xd4 JUMPDEST
0xd5 PUSH2 0x196
0xd8 PUSH1 0x6
0xda SLOAD
0xdb PUSH1 0x1
0xdd PUSH1 0xa0
0xdf PUSH1 0x2
0xe1 EXP
0xe2 SUB
0xe3 AND
0xe4 DUP2
0xe5 JUMP
---
0xd4: JUMPDEST 
0xd5: V71 = 0x196
0xd8: V72 = 0x6
0xda: V73 = S[0x6]
0xdb: V74 = 0x1
0xdd: V75 = 0xa0
0xdf: V76 = 0x2
0xe1: V77 = EXP 0x2 0xa0
0xe2: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe3: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0xe5: JUMP 0x196
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x196, V79]
Exit stack: [V10, 0x196, V79]

================================

Block 0xe6
[0xe6:0x101]
---
Predecessors: [0x40]
Successors: [0x102, 0x15d]
---
0xe6 JUMPDEST
0xe7 PUSH2 0x194
0xea PUSH1 0x5
0xec SLOAD
0xed PUSH1 0x1
0xef PUSH1 0xa0
0xf1 PUSH1 0x2
0xf3 EXP
0xf4 SUB
0xf5 SWAP1
0xf6 DUP2
0xf7 AND
0xf8 CALLER
0xf9 SWAP1
0xfa SWAP2
0xfb AND
0xfc EQ
0xfd ISZERO
0xfe PUSH2 0x15d
0x101 JUMPI
---
0xe6: JUMPDEST 
0xe7: V80 = 0x194
0xea: V81 = 0x5
0xec: V82 = S[0x5]
0xed: V83 = 0x1
0xef: V84 = 0xa0
0xf1: V85 = 0x2
0xf3: V86 = EXP 0x2 0xa0
0xf4: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf7: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0xf8: V89 = CALLER
0xfb: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0xfc: V91 = EQ V90 V88
0xfd: V92 = ISZERO V91
0xfe: V93 = 0x15d
0x101: JUMPI 0x15d V92
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x194]
Exit stack: [V10, 0x194]

================================

Block 0x102
[0x102:0x114]
---
Predecessors: [0xe6]
Successors: [0x194]
---
0x102 PUSH1 0x4
0x104 DUP1
0x105 SLOAD
0x106 PUSH1 0x1
0x108 PUSH1 0xa0
0x10a PUSH1 0x2
0x10c EXP
0x10d SUB
0x10e NOT
0x10f AND
0x110 CALLER
0x111 OR
0x112 SWAP1
0x113 SSTORE
0x114 JUMP
---
0x102: V94 = 0x4
0x105: V95 = S[0x4]
0x106: V96 = 0x1
0x108: V97 = 0xa0
0x10a: V98 = 0x2
0x10c: V99 = EXP 0x2 0xa0
0x10d: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10e: V101 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x10f: V102 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V95
0x110: V103 = CALLER
0x111: V104 = OR V103 V102
0x113: S[0x4] = V104
0x114: JUMP 0x194
---
Entry stack: [V10, 0x194]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x115
[0x115:0x126]
---
Predecessors: [0x4b]
Successors: [0x196]
---
0x115 JUMPDEST
0x116 PUSH2 0x196
0x119 PUSH1 0x8
0x11b SLOAD
0x11c PUSH1 0x1
0x11e PUSH1 0xa0
0x120 PUSH1 0x2
0x122 EXP
0x123 SUB
0x124 AND
0x125 DUP2
0x126 JUMP
---
0x115: JUMPDEST 
0x116: V105 = 0x196
0x119: V106 = 0x8
0x11b: V107 = S[0x8]
0x11c: V108 = 0x1
0x11e: V109 = 0xa0
0x120: V110 = 0x2
0x122: V111 = EXP 0x2 0xa0
0x123: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x124: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x126: JUMP 0x196
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x196, V113]
Exit stack: [V10, 0x196, V113]

================================

Block 0x127
[0x127:0x12f]
---
Predecessors: [0x56]
Successors: [0x1b3]
---
0x127 JUMPDEST
0x128 PUSH2 0x1b3
0x12b PUSH1 0x3
0x12d SLOAD
0x12e DUP2
0x12f JUMP
---
0x127: JUMPDEST 
0x128: V114 = 0x1b3
0x12b: V115 = 0x3
0x12d: V116 = S[0x3]
0x12f: JUMP 0x1b3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b3, V116]
Exit stack: [V10, 0x1b3, V116]

================================

Block 0x130
[0x130:0x138]
---
Predecessors: [0x61]
Successors: [0x1b3]
---
0x130 JUMPDEST
0x131 PUSH2 0x1b3
0x134 PUSH1 0x9
0x136 SLOAD
0x137 DUP2
0x138 JUMP
---
0x130: JUMPDEST 
0x131: V117 = 0x1b3
0x134: V118 = 0x9
0x136: V119 = S[0x9]
0x138: JUMP 0x1b3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b3, V119]
Exit stack: [V10, 0x1b3, V119]

================================

Block 0x139
[0x139:0x141]
---
Predecessors: [0x6c]
Successors: [0x1b3]
---
0x139 JUMPDEST
0x13a PUSH2 0x1b3
0x13d PUSH1 0x7
0x13f SLOAD
0x140 DUP2
0x141 JUMP
---
0x139: JUMPDEST 
0x13a: V120 = 0x1b3
0x13d: V121 = 0x7
0x13f: V122 = S[0x7]
0x141: JUMP 0x1b3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b3, V122]
Exit stack: [V10, 0x1b3, V122]

================================

Block 0x142
[0x142:0x15c]
---
Predecessors: [0x77]
Successors: [0x15d, 0x390]
---
0x142 JUMPDEST
0x143 PUSH2 0x194
0x146 PUSH1 0x4
0x148 SLOAD
0x149 PUSH1 0x1
0x14b PUSH1 0xa0
0x14d PUSH1 0x2
0x14f EXP
0x150 SUB
0x151 SWAP1
0x152 DUP2
0x153 AND
0x154 CALLER
0x155 SWAP1
0x156 SWAP2
0x157 AND
0x158 EQ
0x159 PUSH2 0x390
0x15c JUMPI
---
0x142: JUMPDEST 
0x143: V123 = 0x194
0x146: V124 = 0x4
0x148: V125 = S[0x4]
0x149: V126 = 0x1
0x14b: V127 = 0xa0
0x14d: V128 = 0x2
0x14f: V129 = EXP 0x2 0xa0
0x150: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x153: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x154: V132 = CALLER
0x157: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x158: V134 = EQ V133 V131
0x159: V135 = 0x390
0x15c: JUMPI 0x390 V134
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x194]
Exit stack: [V10, 0x194]

================================

Block 0x15d
[0x15d:0x15e]
---
Predecessors: [0xe6, 0x142, 0x15d, 0x190, 0x1f7, 0x227, 0x24c, 0x2b6, 0x2f2]
Successors: [0x15d, 0x194, 0x1c5]
---
0x15d JUMPDEST
0x15e JUMP
---
0x15d: JUMPDEST 
0x15e: JUMP S0
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S2, S1]

================================

Block 0x15f
[0x15f:0x17c]
---
Predecessors: [0x82]
Successors: [0x17d, 0x37a]
---
0x15f JUMPDEST
0x160 PUSH2 0x194
0x163 PUSH1 0x4
0x165 CALLDATALOAD
0x166 PUSH1 0x4
0x168 SLOAD
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 SWAP1
0x172 DUP2
0x173 AND
0x174 CALLER
0x175 SWAP1
0x176 SWAP2
0x177 AND
0x178 EQ
0x179 PUSH2 0x37a
0x17c JUMPI
---
0x15f: JUMPDEST 
0x160: V136 = 0x194
0x163: V137 = 0x4
0x165: V138 = CALLDATALOAD 0x4
0x166: V139 = 0x4
0x168: V140 = S[0x4]
0x169: V141 = 0x1
0x16b: V142 = 0xa0
0x16d: V143 = 0x2
0x16f: V144 = EXP 0x2 0xa0
0x170: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x173: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x174: V147 = CALLER
0x177: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x178: V149 = EQ V148 V146
0x179: V150 = 0x37a
0x17c: JUMPI 0x37a V149
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x194, V138]
Exit stack: [V10, 0x194, V138]

================================

Block 0x17d
[0x17d:0x180]
---
Predecessors: [0x15f]
Successors: [0x38d]
---
0x17d PUSH2 0x38d
0x180 JUMP
---
0x17d: V151 = 0x38d
0x180: JUMP 0x38d
---
Entry stack: [V10, 0x194, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x194, V138]

================================

Block 0x181
[0x181:0x184]
---
Predecessors: [0x8d]
Successors: [0x185]
---
0x181 JUMPDEST
0x182 PUSH2 0x194
---
0x181: JUMPDEST 
0x182: V152 = 0x194
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x194]
Exit stack: [V10, 0x194]

================================

Block 0x185
[0x185:0x18f]
---
Predecessors: [0xcd, 0x181]
Successors: [0x190, 0x2bf]
---
0x185 JUMPDEST
0x186 PUSH1 0x3
0x188 SLOAD
0x189 TIMESTAMP
0x18a LT
0x18b ISZERO
0x18c PUSH2 0x2bf
0x18f JUMPI
---
0x185: JUMPDEST 
0x186: V153 = 0x3
0x188: V154 = S[0x3]
0x189: V155 = TIMESTAMP
0x18a: V156 = LT V155 V154
0x18b: V157 = ISZERO V156
0x18c: V158 = 0x2bf
0x18f: JUMPI 0x2bf V157
---
Entry stack: [V10, S2, S1, {0x194, 0x1c5}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, {0x194, 0x1c5}]

================================

Block 0x190
[0x190:0x193]
---
Predecessors: [0x185]
Successors: [0x15d]
---
0x190 PUSH2 0x15d
0x193 JUMP
---
0x190: V159 = 0x15d
0x193: JUMP 0x15d
---
Entry stack: [V10, S2, S1, {0x194, 0x1c5}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, {0x194, 0x1c5}]

================================

Block 0x194
[0x194:0x195]
---
Predecessors: [0x102, 0x15d, 0x2b6, 0x38d, 0x390]
Successors: []
---
0x194 JUMPDEST
0x195 STOP
---
0x194: JUMPDEST 
0x195: STOP 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x196
[0x196:0x1b2]
---
Predecessors: [0xa3, 0xd4, 0x115]
Successors: []
---
0x196 JUMPDEST
0x197 PUSH1 0x40
0x199 DUP1
0x19a MLOAD
0x19b PUSH1 0x1
0x19d PUSH1 0xa0
0x19f PUSH1 0x2
0x1a1 EXP
0x1a2 SUB
0x1a3 SWAP3
0x1a4 SWAP1
0x1a5 SWAP3
0x1a6 AND
0x1a7 DUP3
0x1a8 MSTORE
0x1a9 MLOAD
0x1aa SWAP1
0x1ab DUP2
0x1ac SWAP1
0x1ad SUB
0x1ae PUSH1 0x20
0x1b0 ADD
0x1b1 SWAP1
0x1b2 RETURN
---
0x196: JUMPDEST 
0x197: V160 = 0x40
0x19a: V161 = M[0x40]
0x19b: V162 = 0x1
0x19d: V163 = 0xa0
0x19f: V164 = 0x2
0x1a1: V165 = EXP 0x2 0xa0
0x1a2: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a6: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1a8: M[V161] = V167
0x1a9: V168 = M[0x40]
0x1ad: V169 = SUB V161 V168
0x1ae: V170 = 0x20
0x1b0: V171 = ADD 0x20 V169
0x1b2: RETURN V168 V171
---
Entry stack: [V10, 0x196, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x196]

================================

Block 0x1b3
[0x1b3:0x1c4]
---
Predecessors: [0xb5, 0x127, 0x130, 0x139]
Successors: []
---
0x1b3 JUMPDEST
0x1b4 PUSH1 0x40
0x1b6 DUP1
0x1b7 MLOAD
0x1b8 SWAP2
0x1b9 DUP3
0x1ba MSTORE
0x1bb MLOAD
0x1bc SWAP1
0x1bd DUP2
0x1be SWAP1
0x1bf SUB
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 SWAP1
0x1c4 RETURN
---
0x1b3: JUMPDEST 
0x1b4: V172 = 0x40
0x1b7: V173 = M[0x40]
0x1ba: M[V173] = S0
0x1bb: V174 = M[0x40]
0x1bf: V175 = SUB V173 V174
0x1c0: V176 = 0x20
0x1c2: V177 = ADD 0x20 V175
0x1c4: RETURN V174 V177
---
Entry stack: [V10, 0x1b3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b3]

================================

Block 0x1c5
[0x1c5:0x1dc]
---
Predecessors: [0xc2, 0x15d]
Successors: [0x1dd, 0x1f1]
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x4
0x1c8 SLOAD
0x1c9 CALLER
0x1ca PUSH1 0x1
0x1cc PUSH1 0xa0
0x1ce PUSH1 0x2
0x1d0 EXP
0x1d1 SUB
0x1d2 SWAP1
0x1d3 DUP2
0x1d4 AND
0x1d5 SWAP2
0x1d6 AND
0x1d7 EQ
0x1d8 DUP1
0x1d9 PUSH2 0x1f1
0x1dc JUMPI
---
0x1c5: JUMPDEST 
0x1c6: V178 = 0x4
0x1c8: V179 = S[0x4]
0x1c9: V180 = CALLER
0x1ca: V181 = 0x1
0x1cc: V182 = 0xa0
0x1ce: V183 = 0x2
0x1d0: V184 = EXP 0x2 0xa0
0x1d1: V185 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d4: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x1d6: V187 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0x1d7: V188 = EQ V187 V186
0x1d9: V189 = 0x1f1
0x1dc: JUMPI 0x1f1 V188
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: [V188]
Exit stack: [V10, S1, S0, V188]

================================

Block 0x1dd
[0x1dd:0x1f0]
---
Predecessors: [0x1c5]
Successors: [0x1f1]
---
0x1dd POP
0x1de PUSH1 0x6
0x1e0 SLOAD
0x1e1 PUSH1 0x1
0x1e3 PUSH1 0xa0
0x1e5 PUSH1 0x2
0x1e7 EXP
0x1e8 SUB
0x1e9 SWAP1
0x1ea DUP2
0x1eb AND
0x1ec CALLER
0x1ed SWAP1
0x1ee SWAP2
0x1ef AND
0x1f0 EQ
---
0x1de: V190 = 0x6
0x1e0: V191 = S[0x6]
0x1e1: V192 = 0x1
0x1e3: V193 = 0xa0
0x1e5: V194 = 0x2
0x1e7: V195 = EXP 0x2 0xa0
0x1e8: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1eb: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x1ec: V198 = CALLER
0x1ef: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x1f0: V200 = EQ V199 V197
---
Entry stack: [V10, S2, S1, V188]
Stack pops: 1
Stack additions: [V200]
Exit stack: [V10, S2, S1, V200]

================================

Block 0x1f1
[0x1f1:0x1f6]
---
Predecessors: [0x1c5, 0x1dd]
Successors: [0x1f7, 0x21c]
---
0x1f1 JUMPDEST
0x1f2 ISZERO
0x1f3 PUSH2 0x21c
0x1f6 JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V201 = ISZERO S0
0x1f3: V202 = 0x21c
0x1f6: JUMPI 0x21c V201
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S2, S1]

================================

Block 0x1f7
[0x1f7:0x21b]
---
Predecessors: [0x1f1]
Successors: [0x15d]
---
0x1f7 PUSH1 0x40
0x1f9 MLOAD
0x1fa CALLER
0x1fb PUSH1 0x1
0x1fd PUSH1 0xa0
0x1ff PUSH1 0x2
0x201 EXP
0x202 SUB
0x203 AND
0x204 SWAP1
0x205 PUSH1 0x0
0x207 SWAP1
0x208 CALLVALUE
0x209 SWAP1
0x20a DUP3
0x20b DUP2
0x20c DUP2
0x20d DUP2
0x20e DUP6
0x20f DUP9
0x210 DUP4
0x211 CALL
0x212 SWAP4
0x213 POP
0x214 POP
0x215 POP
0x216 POP
0x217 POP
0x218 PUSH2 0x15d
0x21b JUMP
---
0x1f7: V203 = 0x40
0x1f9: V204 = M[0x40]
0x1fa: V205 = CALLER
0x1fb: V206 = 0x1
0x1fd: V207 = 0xa0
0x1ff: V208 = 0x2
0x201: V209 = EXP 0x2 0xa0
0x202: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x203: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x205: V212 = 0x0
0x208: V213 = CALLVALUE
0x211: V214 = CALL 0x0 V211 V213 V204 0x0 V204 0x0
0x218: V215 = 0x15d
0x21b: JUMP 0x15d
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x21c
[0x21c:0x226]
---
Predecessors: [0x1f1]
Successors: [0x227, 0x24c]
---
0x21c JUMPDEST
0x21d PUSH1 0x7
0x21f SLOAD
0x220 CALLVALUE
0x221 LT
0x222 ISZERO
0x223 PUSH2 0x24c
0x226 JUMPI
---
0x21c: JUMPDEST 
0x21d: V216 = 0x7
0x21f: V217 = S[0x7]
0x220: V218 = CALLVALUE
0x221: V219 = LT V218 V217
0x222: V220 = ISZERO V219
0x223: V221 = 0x24c
0x226: JUMPI 0x24c V220
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x227
[0x227:0x24b]
---
Predecessors: [0x21c]
Successors: [0x15d]
---
0x227 PUSH1 0x40
0x229 MLOAD
0x22a CALLER
0x22b PUSH1 0x1
0x22d PUSH1 0xa0
0x22f PUSH1 0x2
0x231 EXP
0x232 SUB
0x233 AND
0x234 SWAP1
0x235 PUSH1 0x0
0x237 SWAP1
0x238 CALLVALUE
0x239 SWAP1
0x23a DUP3
0x23b DUP2
0x23c DUP2
0x23d DUP2
0x23e DUP6
0x23f DUP9
0x240 DUP4
0x241 CALL
0x242 SWAP4
0x243 POP
0x244 POP
0x245 POP
0x246 POP
0x247 POP
0x248 PUSH2 0x15d
0x24b JUMP
---
0x227: V222 = 0x40
0x229: V223 = M[0x40]
0x22a: V224 = CALLER
0x22b: V225 = 0x1
0x22d: V226 = 0xa0
0x22f: V227 = 0x2
0x231: V228 = EXP 0x2 0xa0
0x232: V229 = SUB 0x10000000000000000000000000000000000000000 0x1
0x233: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x235: V231 = 0x0
0x238: V232 = CALLVALUE
0x241: V233 = CALL 0x0 V230 V232 V223 0x0 V223 0x0
0x248: V234 = 0x15d
0x24b: JUMP 0x15d
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x24c
[0x24c:0x2b5]
---
Predecessors: [0x21c]
Successors: [0x15d, 0x2b6]
---
0x24c JUMPDEST
0x24d PUSH1 0x40
0x24f MLOAD
0x250 PUSH1 0x8
0x252 SLOAD
0x253 PUSH1 0x9
0x255 SLOAD
0x256 PUSH1 0x1
0x258 PUSH1 0xa0
0x25a PUSH1 0x2
0x25c EXP
0x25d SUB
0x25e SWAP2
0x25f SWAP1
0x260 SWAP2
0x261 AND
0x262 SWAP2
0x263 PUSH1 0x0
0x265 SWAP2
0x266 SWAP1
0x267 DUP3
0x268 DUP2
0x269 DUP2
0x26a DUP2
0x26b DUP6
0x26c DUP9
0x26d DUP4
0x26e CALL
0x26f POP
0x270 POP
0x271 PUSH1 0x6
0x273 DUP1
0x274 SLOAD
0x275 PUSH1 0x8
0x277 DUP1
0x278 SLOAD
0x279 PUSH1 0x1
0x27b PUSH1 0xa0
0x27d PUSH1 0x2
0x27f EXP
0x280 SUB
0x281 NOT
0x282 SWAP1
0x283 DUP2
0x284 AND
0x285 PUSH1 0x1
0x287 PUSH1 0xa0
0x289 PUSH1 0x2
0x28b EXP
0x28c SUB
0x28d DUP5
0x28e AND
0x28f OR
0x290 SWAP1
0x291 SWAP2
0x292 SSTORE
0x293 PUSH1 0x7
0x295 DUP1
0x296 SLOAD
0x297 PUSH1 0x9
0x299 SSTORE
0x29a SWAP2
0x29b AND
0x29c CALLER
0x29d OR
0x29e SWAP1
0x29f SWAP2
0x2a0 SSTORE
0x2a1 CALLVALUE
0x2a2 SWAP1
0x2a3 SSTORE
0x2a4 POP
0x2a5 POP
0x2a6 PUSH1 0x3
0x2a8 SLOAD
0x2a9 PUSH2 0x12c
0x2ac TIMESTAMP
0x2ad ADD
0x2ae GT
0x2af ISZERO
0x2b0 SWAP1
0x2b1 POP
0x2b2 PUSH2 0x15d
0x2b5 JUMPI
---
0x24c: JUMPDEST 
0x24d: V235 = 0x40
0x24f: V236 = M[0x40]
0x250: V237 = 0x8
0x252: V238 = S[0x8]
0x253: V239 = 0x9
0x255: V240 = S[0x9]
0x256: V241 = 0x1
0x258: V242 = 0xa0
0x25a: V243 = 0x2
0x25c: V244 = EXP 0x2 0xa0
0x25d: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x261: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x263: V247 = 0x0
0x26e: V248 = CALL 0x0 V246 V240 V236 0x0 V236 0x0
0x271: V249 = 0x6
0x274: V250 = S[0x6]
0x275: V251 = 0x8
0x278: V252 = S[0x8]
0x279: V253 = 0x1
0x27b: V254 = 0xa0
0x27d: V255 = 0x2
0x27f: V256 = EXP 0x2 0xa0
0x280: V257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x281: V258 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x284: V259 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V252
0x285: V260 = 0x1
0x287: V261 = 0xa0
0x289: V262 = 0x2
0x28b: V263 = EXP 0x2 0xa0
0x28c: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28e: V265 = AND V250 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V266 = OR V265 V259
0x292: S[0x8] = V266
0x293: V267 = 0x7
0x296: V268 = S[0x7]
0x297: V269 = 0x9
0x299: S[0x9] = V268
0x29b: V270 = AND V250 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x29c: V271 = CALLER
0x29d: V272 = OR V271 V270
0x2a0: S[0x6] = V272
0x2a1: V273 = CALLVALUE
0x2a3: S[0x7] = V273
0x2a6: V274 = 0x3
0x2a8: V275 = S[0x3]
0x2a9: V276 = 0x12c
0x2ac: V277 = TIMESTAMP
0x2ad: V278 = ADD V277 0x12c
0x2ae: V279 = GT V278 V275
0x2af: V280 = ISZERO V279
0x2b2: V281 = 0x15d
0x2b5: JUMPI 0x15d V280
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x2b6
[0x2b6:0x2be]
---
Predecessors: [0x24c]
Successors: [0x15d, 0x194]
---
0x2b6 PUSH2 0x12c
0x2b9 TIMESTAMP
0x2ba ADD
0x2bb PUSH1 0x3
0x2bd SSTORE
0x2be JUMP
---
0x2b6: V282 = 0x12c
0x2b9: V283 = TIMESTAMP
0x2ba: V284 = ADD V283 0x12c
0x2bb: V285 = 0x3
0x2bd: S[0x3] = V284
0x2be: JUMP S0
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x2bf
[0x2bf:0x2f1]
---
Predecessors: [0x185]
Successors: [0x2f2, 0x36c]
---
0x2bf JUMPDEST
0x2c0 PUSH1 0x6
0x2c2 SLOAD
0x2c3 PUSH1 0x2
0x2c5 SLOAD
0x2c6 PUSH1 0x40
0x2c8 MLOAD
0x2c9 PUSH1 0x1
0x2cb PUSH1 0xa0
0x2cd PUSH1 0x2
0x2cf EXP
0x2d0 SUB
0x2d1 SWAP3
0x2d2 SWAP1
0x2d3 SWAP3
0x2d4 AND
0x2d5 SWAP2
0x2d6 PUSH1 0x0
0x2d8 SWAP2
0x2d9 SWAP1
0x2da DUP3
0x2db DUP2
0x2dc DUP2
0x2dd DUP2
0x2de DUP6
0x2df DUP9
0x2e0 DUP4
0x2e1 CALL
0x2e2 POP
0x2e3 POP
0x2e4 SWAP1
0x2e5 SLOAD
0x2e6 PUSH1 0xff
0x2e8 AND
0x2e9 ISZERO
0x2ea SWAP2
0x2eb POP
0x2ec PUSH2 0x36c
0x2ef SWAP1
0x2f0 POP
0x2f1 JUMPI
---
0x2bf: JUMPDEST 
0x2c0: V286 = 0x6
0x2c2: V287 = S[0x6]
0x2c3: V288 = 0x2
0x2c5: V289 = S[0x2]
0x2c6: V290 = 0x40
0x2c8: V291 = M[0x40]
0x2c9: V292 = 0x1
0x2cb: V293 = 0xa0
0x2cd: V294 = 0x2
0x2cf: V295 = EXP 0x2 0xa0
0x2d0: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d4: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x2d6: V298 = 0x0
0x2e1: V299 = CALL 0x0 V297 V289 V291 0x0 V291 0x0
0x2e5: V300 = S[0x0]
0x2e6: V301 = 0xff
0x2e8: V302 = AND 0xff V300
0x2e9: V303 = ISZERO V302
0x2ec: V304 = 0x36c
0x2f1: JUMPI 0x36c V303
---
Entry stack: [V10, S2, S1, {0x194, 0x1c5}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, {0x194, 0x1c5}]

================================

Block 0x2f2
[0x2f2:0x36b]
---
Predecessors: [0x2bf]
Successors: [0x15d]
---
0x2f2 PUSH1 0x4
0x2f4 SLOAD
0x2f5 PUSH1 0x40
0x2f7 MLOAD
0x2f8 PUSH1 0x1
0x2fa PUSH1 0xa0
0x2fc PUSH1 0x2
0x2fe EXP
0x2ff SUB
0x300 SWAP2
0x301 DUP3
0x302 AND
0x303 SWAP2
0x304 PUSH1 0x0
0x306 SWAP2
0x307 PUSH1 0x64
0x309 ADDRESS
0x30a SWAP1
0x30b SWAP3
0x30c AND
0x30d BALANCE
0x30e PUSH1 0xa
0x310 MUL
0x311 SWAP2
0x312 SWAP1
0x313 SWAP2
0x314 DIV
0x315 SWAP1
0x316 DUP3
0x317 DUP2
0x318 DUP2
0x319 DUP2
0x31a DUP6
0x31b DUP9
0x31c DUP4
0x31d CALL
0x31e POP
0x31f POP
0x320 POP
0x321 ADDRESS
0x322 PUSH1 0x1
0x324 PUSH1 0xa0
0x326 PUSH1 0x2
0x328 EXP
0x329 SUB
0x32a SWAP1
0x32b DUP2
0x32c AND
0x32d BALANCE
0x32e PUSH1 0x2
0x330 SSTORE
0x331 PUSH1 0x1
0x333 SLOAD
0x334 TIMESTAMP
0x335 ADD
0x336 PUSH1 0x3
0x338 SSTORE
0x339 PUSH1 0x4
0x33b SLOAD
0x33c PUSH1 0x6
0x33e DUP1
0x33f SLOAD
0x340 PUSH1 0x1
0x342 PUSH1 0xa0
0x344 PUSH1 0x2
0x346 EXP
0x347 SUB
0x348 NOT
0x349 SWAP1
0x34a DUP2
0x34b AND
0x34c SWAP3
0x34d SWAP1
0x34e SWAP4
0x34f AND
0x350 SWAP2
0x351 DUP3
0x352 OR
0x353 SWAP1
0x354 SSTORE
0x355 PUSH1 0x7
0x357 DUP4
0x358 SWAP1
0x359 SSTORE
0x35a PUSH1 0x8
0x35c DUP1
0x35d SLOAD
0x35e SWAP1
0x35f SWAP3
0x360 AND
0x361 OR
0x362 SWAP1
0x363 SSTORE
0x364 PUSH1 0x9
0x366 SSTORE
0x367 POP
0x368 PUSH2 0x15d
0x36b JUMP
---
0x2f2: V305 = 0x4
0x2f4: V306 = S[0x4]
0x2f5: V307 = 0x40
0x2f7: V308 = M[0x40]
0x2f8: V309 = 0x1
0x2fa: V310 = 0xa0
0x2fc: V311 = 0x2
0x2fe: V312 = EXP 0x2 0xa0
0x2ff: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x302: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x304: V315 = 0x0
0x307: V316 = 0x64
0x309: V317 = ADDRESS
0x30c: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x30d: V319 = BALANCE V318
0x30e: V320 = 0xa
0x310: V321 = MUL 0xa V319
0x314: V322 = DIV V321 0x64
0x31d: V323 = CALL 0x0 V314 V322 V308 0x0 V308 0x0
0x321: V324 = ADDRESS
0x322: V325 = 0x1
0x324: V326 = 0xa0
0x326: V327 = 0x2
0x328: V328 = EXP 0x2 0xa0
0x329: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32c: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x32d: V331 = BALANCE V330
0x32e: V332 = 0x2
0x330: S[0x2] = V331
0x331: V333 = 0x1
0x333: V334 = S[0x1]
0x334: V335 = TIMESTAMP
0x335: V336 = ADD V335 V334
0x336: V337 = 0x3
0x338: S[0x3] = V336
0x339: V338 = 0x4
0x33b: V339 = S[0x4]
0x33c: V340 = 0x6
0x33f: V341 = S[0x6]
0x340: V342 = 0x1
0x342: V343 = 0xa0
0x344: V344 = 0x2
0x346: V345 = EXP 0x2 0xa0
0x347: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x348: V347 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x34b: V348 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V341
0x34f: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x352: V350 = OR V349 V348
0x354: S[0x6] = V350
0x355: V351 = 0x7
0x359: S[0x7] = 0x0
0x35a: V352 = 0x8
0x35d: V353 = S[0x8]
0x360: V354 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V353
0x361: V355 = OR V354 V349
0x363: S[0x8] = V355
0x364: V356 = 0x9
0x366: S[0x9] = 0x0
0x368: V357 = 0x15d
0x36b: JUMP 0x15d
---
Entry stack: [V10, S2, S1, {0x194, 0x1c5}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, {0x194, 0x1c5}]

================================

Block 0x36c
[0x36c:0x379]
---
Predecessors: [0x2bf]
Successors: []
---
0x36c JUMPDEST
0x36d PUSH1 0x4
0x36f SLOAD
0x370 PUSH1 0x1
0x372 PUSH1 0xa0
0x374 PUSH1 0x2
0x376 EXP
0x377 SUB
0x378 AND
0x379 SELFDESTRUCT
---
0x36c: JUMPDEST 
0x36d: V358 = 0x4
0x36f: V359 = S[0x4]
0x370: V360 = 0x1
0x372: V361 = 0xa0
0x374: V362 = 0x2
0x376: V363 = EXP 0x2 0xa0
0x377: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x378: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x379: SELFDESTRUCT V365
---
Entry stack: [V10, S2, S1, {0x194, 0x1c5}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, {0x194, 0x1c5}]

================================

Block 0x37a
[0x37a:0x38c]
---
Predecessors: [0x15f]
Successors: [0x38d]
---
0x37a JUMPDEST
0x37b PUSH1 0x5
0x37d DUP1
0x37e SLOAD
0x37f PUSH1 0x1
0x381 PUSH1 0xa0
0x383 PUSH1 0x2
0x385 EXP
0x386 SUB
0x387 NOT
0x388 AND
0x389 DUP3
0x38a OR
0x38b SWAP1
0x38c SSTORE
---
0x37a: JUMPDEST 
0x37b: V366 = 0x5
0x37e: V367 = S[0x5]
0x37f: V368 = 0x1
0x381: V369 = 0xa0
0x383: V370 = 0x2
0x385: V371 = EXP 0x2 0xa0
0x386: V372 = SUB 0x10000000000000000000000000000000000000000 0x1
0x387: V373 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x388: V374 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V367
0x38a: V375 = OR V138 V374
0x38c: S[0x5] = V375
---
Entry stack: [V10, 0x194, V138]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x194, V138]

================================

Block 0x38d
[0x38d:0x38f]
---
Predecessors: [0x17d, 0x37a]
Successors: [0x194]
---
0x38d JUMPDEST
0x38e POP
0x38f JUMP
---
0x38d: JUMPDEST 
0x38f: JUMP 0x194
---
Entry stack: [V10, 0x194, V138]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x390
[0x390:0x39b]
---
Predecessors: [0x142]
Successors: [0x194]
---
0x390 JUMPDEST
0x391 PUSH1 0x0
0x393 DUP1
0x394 SLOAD
0x395 PUSH1 0xff
0x397 NOT
0x398 AND
0x399 SWAP1
0x39a SSTORE
0x39b JUMP
---
0x390: JUMPDEST 
0x391: V376 = 0x0
0x394: V377 = S[0x0]
0x395: V378 = 0xff
0x397: V379 = NOT 0xff
0x398: V380 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V377
0x39a: S[0x0] = V380
0x39b: JUMP 0x194
---
Entry stack: [V10, 0x194]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x8551a53
Entry block: 0xa3
Exit block: 0x196
Body: 0xa3, 0x196

Function 1:
Public function signature: 0x13f654df
Entry block: 0xb5
Exit block: 0x1b3
Body: 0xb5, 0x1b3

Function 2:
Public function signature: 0x1998aeef
Entry block: 0xbe
Exit block: 0x194
Body: 0xbe, 0xc2, 0xcd, 0x15d, 0x185, 0x190, 0x194, 0x1c5, 0x1dd, 0x1f1, 0x1f7, 0x21c, 0x227, 0x24c, 0x2b6, 0x2bf, 0x2f2, 0x36c

Function 3:
Public function signature: 0x3ce123dc
Entry block: 0xd4
Exit block: 0x196
Body: 0xd4, 0x196

Function 4:
Public function signature: 0x547eeac1
Entry block: 0xe6
Exit block: 0x194
Body: 0xe6, 0x102, 0x15d, 0x194, 0x1c5, 0x1dd, 0x1f1, 0x1f7, 0x21c, 0x227, 0x24c, 0x2b6

Function 5:
Public function signature: 0x56bff0f8
Entry block: 0x115
Exit block: 0x196
Body: 0x115, 0x196

Function 6:
Public function signature: 0x8622a689
Entry block: 0x127
Exit block: 0x1b3
Body: 0x127, 0x1b3

Function 7:
Public function signature: 0xa5cf651f
Entry block: 0x130
Exit block: 0x1b3
Body: 0x130, 0x1b3

Function 8:
Public function signature: 0xb6cc986f
Entry block: 0x139
Exit block: 0x1b3
Body: 0x139, 0x1b3

Function 9:
Public function signature: 0xed54746e
Entry block: 0x142
Exit block: 0x194
Body: 0x142, 0x15d, 0x194, 0x1c5, 0x1dd, 0x1f1, 0x1f7, 0x21c, 0x227, 0x24c, 0x2b6, 0x390

Function 10:
Public function signature: 0xf2fde38b
Entry block: 0x15f
Exit block: 0x194
Body: 0x15f, 0x17d, 0x194, 0x37a, 0x38d

Function 11:
Public function signature: 0xfe67a54b
Entry block: 0x181
Exit block: 0x194
Body: 0x15d, 0x181, 0x185, 0x190, 0x194, 0x1c5, 0x1dd, 0x1f1, 0x1f7, 0x21c, 0x227, 0x24c, 0x2b6, 0x2bf, 0x2f2, 0x36c

Function 12:
Public fallback function
Entry block: 0x98
Exit block: 0x194
Body: 0x98, 0xc2, 0xcd, 0x15d, 0x185, 0x190, 0x194, 0x1c5, 0x1dd, 0x1f1, 0x1f7, 0x21c, 0x227, 0x24c, 0x2b6, 0x2bf, 0x2f2, 0x36c

