args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/9/108895.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xce]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xb2f6cef
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xce
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xb2f6cef
0x3b: V13 = EQ V11 0xb2f6cef
0x3c: V14 = 0xce
0x3f: JUMPI 0xce V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xf3]
---
0x40 DUP1
0x41 PUSH4 0x3ccfd60b
0x46 EQ
0x47 PUSH2 0xf3
0x4a JUMPI
---
0x41: V15 = 0x3ccfd60b
0x46: V16 = EQ 0x3ccfd60b V11
0x47: V17 = 0xf3
0x4a: JUMPI 0xf3 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x106]
---
0x4b DUP1
0x4c PUSH4 0x4a3f17e7
0x51 EQ
0x52 PUSH2 0x106
0x55 JUMPI
---
0x4c: V18 = 0x4a3f17e7
0x51: V19 = EQ 0x4a3f17e7 V11
0x52: V20 = 0x106
0x55: JUMPI 0x106 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x13d]
---
0x56 DUP1
0x57 PUSH4 0xbaf05a87
0x5c EQ
0x5d PUSH2 0x13d
0x60 JUMPI
---
0x57: V21 = 0xbaf05a87
0x5c: V22 = EQ 0xbaf05a87 V11
0x5d: V23 = 0x13d
0x60: JUMPI 0x13d V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x150]
---
0x61 DUP1
0x62 PUSH4 0xf340fa01
0x67 EQ
0x68 PUSH2 0x150
0x6b JUMPI
---
0x62: V24 = 0xf340fa01
0x67: V25 = EQ 0xf340fa01 V11
0x68: V26 = 0x150
0x6b: JUMPI 0x150 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x74]
---
Predecessors: [0x0, 0x61]
Successors: [0x75, 0x79]
---
0x6c JUMPDEST
0x6d PUSH1 0x0
0x6f CALLVALUE
0x70 GT
0x71 PUSH2 0x79
0x74 JUMPI
---
0x6c: JUMPDEST 
0x6d: V27 = 0x0
0x6f: V28 = CALLVALUE
0x70: V29 = GT V28 0x0
0x71: V30 = 0x79
0x74: JUMPI 0x79 V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x75
[0x75:0x78]
---
Predecessors: [0x6c]
Successors: []
---
0x75 PUSH1 0x0
0x77 DUP1
0x78 REVERT
---
0x75: V31 = 0x0
0x78: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0xa1]
---
Predecessors: [0x6c]
Successors: [0xa2, 0xcc]
---
0x79 JUMPDEST
0x7a PUSH1 0x1
0x7c PUSH1 0xa0
0x7e PUSH1 0x2
0x80 EXP
0x81 SUB
0x82 CALLER
0x83 AND
0x84 PUSH1 0x0
0x86 SWAP1
0x87 DUP2
0x88 MSTORE
0x89 PUSH1 0x2
0x8b PUSH1 0x20
0x8d MSTORE
0x8e PUSH1 0x40
0x90 SWAP1
0x91 SHA3
0x92 DUP1
0x93 SLOAD
0x94 CALLVALUE
0x95 ADD
0x96 DUP2
0x97 SSTORE
0x98 PUSH1 0x1
0x9a ADD
0x9b SLOAD
0x9c ISZERO
0x9d ISZERO
0x9e PUSH2 0xcc
0xa1 JUMPI
---
0x79: JUMPDEST 
0x7a: V32 = 0x1
0x7c: V33 = 0xa0
0x7e: V34 = 0x2
0x80: V35 = EXP 0x2 0xa0
0x81: V36 = SUB 0x10000000000000000000000000000000000000000 0x1
0x82: V37 = CALLER
0x83: V38 = AND V37 0xffffffffffffffffffffffffffffffffffffffff
0x84: V39 = 0x0
0x88: M[0x0] = V38
0x89: V40 = 0x2
0x8b: V41 = 0x20
0x8d: M[0x20] = 0x2
0x8e: V42 = 0x40
0x91: V43 = SHA3 0x0 0x40
0x93: V44 = S[V43]
0x94: V45 = CALLVALUE
0x95: V46 = ADD V45 V44
0x97: S[V43] = V46
0x98: V47 = 0x1
0x9a: V48 = ADD 0x1 V43
0x9b: V49 = S[V48]
0x9c: V50 = ISZERO V49
0x9d: V51 = ISZERO V50
0x9e: V52 = 0xcc
0xa1: JUMPI 0xcc V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa2
[0xa2:0xcb]
---
Predecessors: [0x79]
Successors: [0xcc]
---
0xa2 PUSH1 0x0
0xa4 DUP1
0xa5 SLOAD
0xa6 PUSH1 0x1
0xa8 PUSH1 0xa0
0xaa PUSH1 0x2
0xac EXP
0xad SUB
0xae CALLER
0xaf AND
0xb0 DUP3
0xb1 MSTORE
0xb2 PUSH1 0x2
0xb4 PUSH1 0x20
0xb6 MSTORE
0xb7 PUSH1 0x40
0xb9 SWAP1
0xba SWAP2
0xbb SHA3
0xbc TIMESTAMP
0xbd SWAP1
0xbe SWAP2
0xbf ADD
0xc0 PUSH1 0x1
0xc2 SWAP2
0xc3 DUP3
0xc4 ADD
0xc5 SSTORE
0xc6 DUP1
0xc7 SLOAD
0xc8 DUP2
0xc9 ADD
0xca SWAP1
0xcb SSTORE
---
0xa2: V53 = 0x0
0xa5: V54 = S[0x0]
0xa6: V55 = 0x1
0xa8: V56 = 0xa0
0xaa: V57 = 0x2
0xac: V58 = EXP 0x2 0xa0
0xad: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae: V60 = CALLER
0xaf: V61 = AND V60 0xffffffffffffffffffffffffffffffffffffffff
0xb1: M[0x0] = V61
0xb2: V62 = 0x2
0xb4: V63 = 0x20
0xb6: M[0x20] = 0x2
0xb7: V64 = 0x40
0xbb: V65 = SHA3 0x0 0x40
0xbc: V66 = TIMESTAMP
0xbf: V67 = ADD V54 V66
0xc0: V68 = 0x1
0xc4: V69 = ADD 0x1 V65
0xc5: S[V69] = V67
0xc7: V70 = S[0x1]
0xc9: V71 = ADD 0x1 V70
0xcb: S[0x1] = V71
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcc
[0xcc:0xcd]
---
Predecessors: [0x79, 0xa2, 0x212, 0x2a1]
Successors: []
---
0xcc JUMPDEST
0xcd STOP
---
0xcc: JUMPDEST 
0xcd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xce
[0xce:0xd4]
---
Predecessors: [0xd]
Successors: [0xd5, 0xd9]
---
0xce JUMPDEST
0xcf CALLVALUE
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xce: JUMPDEST 
0xcf: V72 = CALLVALUE
0xd0: V73 = ISZERO V72
0xd1: V74 = 0xd9
0xd4: JUMPI 0xd9 V73
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xce]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V75 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd9
[0xd9:0xe0]
---
Predecessors: [0xce]
Successors: [0x164]
---
0xd9 JUMPDEST
0xda PUSH2 0xe1
0xdd PUSH2 0x164
0xe0 JUMP
---
0xd9: JUMPDEST 
0xda: V76 = 0xe1
0xdd: V77 = 0x164
0xe0: JUMP 0x164
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe1]
Exit stack: [V11, 0xe1]

================================

Block 0xe1
[0xe1:0xf2]
---
Predecessors: [0x164, 0x22e]
Successors: []
---
0xe1 JUMPDEST
0xe2 PUSH1 0x40
0xe4 MLOAD
0xe5 SWAP1
0xe6 DUP2
0xe7 MSTORE
0xe8 PUSH1 0x20
0xea ADD
0xeb PUSH1 0x40
0xed MLOAD
0xee DUP1
0xef SWAP2
0xf0 SUB
0xf1 SWAP1
0xf2 RETURN
---
0xe1: JUMPDEST 
0xe2: V78 = 0x40
0xe4: V79 = M[0x40]
0xe7: M[V79] = S0
0xe8: V80 = 0x20
0xea: V81 = ADD 0x20 V79
0xeb: V82 = 0x40
0xed: V83 = M[0x40]
0xf0: V84 = SUB V81 V83
0xf2: RETURN V83 V84
---
Entry stack: [V11, 0xe1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe1]

================================

Block 0xf3
[0xf3:0xf9]
---
Predecessors: [0x40]
Successors: [0xfa, 0xfe]
---
0xf3 JUMPDEST
0xf4 CALLVALUE
0xf5 ISZERO
0xf6 PUSH2 0xfe
0xf9 JUMPI
---
0xf3: JUMPDEST 
0xf4: V85 = CALLVALUE
0xf5: V86 = ISZERO V85
0xf6: V87 = 0xfe
0xf9: JUMPI 0xfe V86
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfa
[0xfa:0xfd]
---
Predecessors: [0xf3]
Successors: []
---
0xfa PUSH1 0x0
0xfc DUP1
0xfd REVERT
---
0xfa: V88 = 0x0
0xfd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfe
[0xfe:0x105]
---
Predecessors: [0xf3]
Successors: [0x16a]
---
0xfe JUMPDEST
0xff PUSH2 0xcc
0x102 PUSH2 0x16a
0x105 JUMP
---
0xfe: JUMPDEST 
0xff: V89 = 0xcc
0x102: V90 = 0x16a
0x105: JUMP 0x16a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcc]
Exit stack: [V11, 0xcc]

================================

Block 0x106
[0x106:0x10c]
---
Predecessors: [0x4b]
Successors: [0x10d, 0x111]
---
0x106 JUMPDEST
0x107 CALLVALUE
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x106: JUMPDEST 
0x107: V91 = CALLVALUE
0x108: V92 = ISZERO V91
0x109: V93 = 0x111
0x10c: JUMPI 0x111 V92
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x106]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V94 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x111
[0x111:0x124]
---
Predecessors: [0x106]
Successors: [0x215]
---
0x111 JUMPDEST
0x112 PUSH2 0x125
0x115 PUSH1 0x1
0x117 PUSH1 0xa0
0x119 PUSH1 0x2
0x11b EXP
0x11c SUB
0x11d PUSH1 0x4
0x11f CALLDATALOAD
0x120 AND
0x121 PUSH2 0x215
0x124 JUMP
---
0x111: JUMPDEST 
0x112: V95 = 0x125
0x115: V96 = 0x1
0x117: V97 = 0xa0
0x119: V98 = 0x2
0x11b: V99 = EXP 0x2 0xa0
0x11c: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11d: V101 = 0x4
0x11f: V102 = CALLDATALOAD 0x4
0x120: V103 = AND V102 0xffffffffffffffffffffffffffffffffffffffff
0x121: V104 = 0x215
0x124: JUMP 0x215
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x125, V103]
Exit stack: [V11, 0x125, V103]

================================

Block 0x125
[0x125:0x13c]
---
Predecessors: [0x215]
Successors: []
---
0x125 JUMPDEST
0x126 PUSH1 0x40
0x128 MLOAD
0x129 SWAP2
0x12a DUP3
0x12b MSTORE
0x12c PUSH1 0x20
0x12e DUP3
0x12f ADD
0x130 MSTORE
0x131 PUSH1 0x40
0x133 SWAP1
0x134 DUP2
0x135 ADD
0x136 SWAP1
0x137 MLOAD
0x138 DUP1
0x139 SWAP2
0x13a SUB
0x13b SWAP1
0x13c RETURN
---
0x125: JUMPDEST 
0x126: V105 = 0x40
0x128: V106 = M[0x40]
0x12b: M[V106] = V204
0x12c: V107 = 0x20
0x12f: V108 = ADD V106 0x20
0x130: M[V108] = V207
0x131: V109 = 0x40
0x135: V110 = ADD 0x40 V106
0x137: V111 = M[0x40]
0x13a: V112 = SUB V110 V111
0x13c: RETURN V111 V112
---
Entry stack: [V11, 0x125, V204, V207]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x125]

================================

Block 0x13d
[0x13d:0x143]
---
Predecessors: [0x56]
Successors: [0x144, 0x148]
---
0x13d JUMPDEST
0x13e CALLVALUE
0x13f ISZERO
0x140 PUSH2 0x148
0x143 JUMPI
---
0x13d: JUMPDEST 
0x13e: V113 = CALLVALUE
0x13f: V114 = ISZERO V113
0x140: V115 = 0x148
0x143: JUMPI 0x148 V114
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x144
[0x144:0x147]
---
Predecessors: [0x13d]
Successors: []
---
0x144 PUSH1 0x0
0x146 DUP1
0x147 REVERT
---
0x144: V116 = 0x0
0x147: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x148
[0x148:0x14f]
---
Predecessors: [0x13d]
Successors: [0x22e]
---
0x148 JUMPDEST
0x149 PUSH2 0xe1
0x14c PUSH2 0x22e
0x14f JUMP
---
0x148: JUMPDEST 
0x149: V117 = 0xe1
0x14c: V118 = 0x22e
0x14f: JUMP 0x22e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe1]
Exit stack: [V11, 0xe1]

================================

Block 0x150
[0x150:0x163]
---
Predecessors: [0x61]
Successors: [0x234]
---
0x150 JUMPDEST
0x151 PUSH2 0xcc
0x154 PUSH1 0x1
0x156 PUSH1 0xa0
0x158 PUSH1 0x2
0x15a EXP
0x15b SUB
0x15c PUSH1 0x4
0x15e CALLDATALOAD
0x15f AND
0x160 PUSH2 0x234
0x163 JUMP
---
0x150: JUMPDEST 
0x151: V119 = 0xcc
0x154: V120 = 0x1
0x156: V121 = 0xa0
0x158: V122 = 0x2
0x15a: V123 = EXP 0x2 0xa0
0x15b: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15c: V125 = 0x4
0x15e: V126 = CALLDATALOAD 0x4
0x15f: V127 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x160: V128 = 0x234
0x163: JUMP 0x234
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcc, V127]
Exit stack: [V11, 0xcc, V127]

================================

Block 0x164
[0x164:0x169]
---
Predecessors: [0xd9]
Successors: [0xe1]
---
0x164 JUMPDEST
0x165 PUSH1 0x1
0x167 SLOAD
0x168 DUP2
0x169 JUMP
---
0x164: JUMPDEST 
0x165: V129 = 0x1
0x167: V130 = S[0x1]
0x169: JUMP 0xe1
---
Entry stack: [V11, 0xe1]
Stack pops: 1
Stack additions: [S0, V130]
Exit stack: [V11, 0xe1, V130]

================================

Block 0x16a
[0x16a:0x18a]
---
Predecessors: [0xfe]
Successors: [0x18b, 0x18f]
---
0x16a JUMPDEST
0x16b PUSH1 0x1
0x16d PUSH1 0xa0
0x16f PUSH1 0x2
0x171 EXP
0x172 SUB
0x173 CALLER
0x174 AND
0x175 PUSH1 0x0
0x177 SWAP1
0x178 DUP2
0x179 MSTORE
0x17a PUSH1 0x2
0x17c PUSH1 0x20
0x17e MSTORE
0x17f PUSH1 0x40
0x181 DUP2
0x182 SHA3
0x183 SLOAD
0x184 DUP2
0x185 SWAP1
0x186 GT
0x187 PUSH2 0x18f
0x18a JUMPI
---
0x16a: JUMPDEST 
0x16b: V131 = 0x1
0x16d: V132 = 0xa0
0x16f: V133 = 0x2
0x171: V134 = EXP 0x2 0xa0
0x172: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x173: V136 = CALLER
0x174: V137 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x175: V138 = 0x0
0x179: M[0x0] = V137
0x17a: V139 = 0x2
0x17c: V140 = 0x20
0x17e: M[0x20] = 0x2
0x17f: V141 = 0x40
0x182: V142 = SHA3 0x0 0x40
0x183: V143 = S[V142]
0x186: V144 = GT V143 0x0
0x187: V145 = 0x18f
0x18a: JUMPI 0x18f V144
---
Entry stack: [V11, 0xcc]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xcc, 0x0]

================================

Block 0x18b
[0x18b:0x18e]
---
Predecessors: [0x16a]
Successors: []
---
0x18b PUSH1 0x0
0x18d DUP1
0x18e REVERT
---
0x18b: V146 = 0x0
0x18e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcc, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcc, 0x0]

================================

Block 0x18f
[0x18f:0x1b3]
---
Predecessors: [0x16a]
Successors: [0x1b4, 0x1b8]
---
0x18f JUMPDEST
0x190 PUSH1 0x1
0x192 PUSH1 0xa0
0x194 PUSH1 0x2
0x196 EXP
0x197 SUB
0x198 CALLER
0x199 AND
0x19a PUSH1 0x0
0x19c SWAP1
0x19d DUP2
0x19e MSTORE
0x19f PUSH1 0x2
0x1a1 PUSH1 0x20
0x1a3 MSTORE
0x1a4 PUSH1 0x40
0x1a6 SWAP1
0x1a7 SHA3
0x1a8 PUSH1 0x1
0x1aa ADD
0x1ab SLOAD
0x1ac TIMESTAMP
0x1ad SWAP1
0x1ae GT
0x1af ISZERO
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0x18f: JUMPDEST 
0x190: V147 = 0x1
0x192: V148 = 0xa0
0x194: V149 = 0x2
0x196: V150 = EXP 0x2 0xa0
0x197: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x198: V152 = CALLER
0x199: V153 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x19a: V154 = 0x0
0x19e: M[0x0] = V153
0x19f: V155 = 0x2
0x1a1: V156 = 0x20
0x1a3: M[0x20] = 0x2
0x1a4: V157 = 0x40
0x1a7: V158 = SHA3 0x0 0x40
0x1a8: V159 = 0x1
0x1aa: V160 = ADD 0x1 V158
0x1ab: V161 = S[V160]
0x1ac: V162 = TIMESTAMP
0x1ae: V163 = GT V161 V162
0x1af: V164 = ISZERO V163
0x1b0: V165 = 0x1b8
0x1b3: JUMPI 0x1b8 V164
---
Entry stack: [V11, 0xcc, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcc, 0x0]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x18f]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V166 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcc, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcc, 0x0]

================================

Block 0x1b8
[0x1b8:0x20d]
---
Predecessors: [0x18f]
Successors: [0x20e, 0x212]
---
0x1b8 JUMPDEST
0x1b9 POP
0x1ba PUSH1 0x1
0x1bc PUSH1 0xa0
0x1be PUSH1 0x2
0x1c0 EXP
0x1c1 SUB
0x1c2 CALLER
0x1c3 AND
0x1c4 PUSH1 0x0
0x1c6 DUP2
0x1c7 DUP2
0x1c8 MSTORE
0x1c9 PUSH1 0x2
0x1cb PUSH1 0x20
0x1cd MSTORE
0x1ce PUSH1 0x40
0x1d0 DUP1
0x1d1 DUP3
0x1d2 SHA3
0x1d3 DUP1
0x1d4 SLOAD
0x1d5 DUP4
0x1d6 DUP3
0x1d7 SSTORE
0x1d8 PUSH1 0x1
0x1da SWAP2
0x1db DUP3
0x1dc ADD
0x1dd SWAP4
0x1de SWAP1
0x1df SWAP4
0x1e0 SSTORE
0x1e1 DUP1
0x1e2 SLOAD
0x1e3 PUSH1 0x0
0x1e5 NOT
0x1e6 ADD
0x1e7 SWAP1
0x1e8 SSTORE
0x1e9 SWAP1
0x1ea SWAP2
0x1eb SWAP1
0x1ec DUP3
0x1ed ISZERO
0x1ee PUSH2 0x8fc
0x1f1 MUL
0x1f2 SWAP1
0x1f3 DUP4
0x1f4 SWAP1
0x1f5 MLOAD
0x1f6 PUSH1 0x0
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb DUP1
0x1fc DUP4
0x1fd SUB
0x1fe DUP2
0x1ff DUP6
0x200 DUP9
0x201 DUP9
0x202 CALL
0x203 SWAP4
0x204 POP
0x205 POP
0x206 POP
0x207 POP
0x208 ISZERO
0x209 ISZERO
0x20a PUSH2 0x212
0x20d JUMPI
---
0x1b8: JUMPDEST 
0x1ba: V167 = 0x1
0x1bc: V168 = 0xa0
0x1be: V169 = 0x2
0x1c0: V170 = EXP 0x2 0xa0
0x1c1: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c2: V172 = CALLER
0x1c3: V173 = AND V172 0xffffffffffffffffffffffffffffffffffffffff
0x1c4: V174 = 0x0
0x1c8: M[0x0] = V173
0x1c9: V175 = 0x2
0x1cb: V176 = 0x20
0x1cd: M[0x20] = 0x2
0x1ce: V177 = 0x40
0x1d2: V178 = SHA3 0x0 0x40
0x1d4: V179 = S[V178]
0x1d7: S[V178] = 0x0
0x1d8: V180 = 0x1
0x1dc: V181 = ADD 0x1 V178
0x1e0: S[V181] = 0x0
0x1e2: V182 = S[0x1]
0x1e3: V183 = 0x0
0x1e5: V184 = NOT 0x0
0x1e6: V185 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V182
0x1e8: S[0x1] = V185
0x1ed: V186 = ISZERO V179
0x1ee: V187 = 0x8fc
0x1f1: V188 = MUL 0x8fc V186
0x1f5: V189 = M[0x40]
0x1f6: V190 = 0x0
0x1f8: V191 = 0x40
0x1fa: V192 = M[0x40]
0x1fd: V193 = SUB V189 V192
0x202: V194 = CALL V188 V173 V179 V192 V193 V192 0x0
0x208: V195 = ISZERO V194
0x209: V196 = ISZERO V195
0x20a: V197 = 0x212
0x20d: JUMPI 0x212 V196
---
Entry stack: [V11, 0xcc, 0x0]
Stack pops: 1
Stack additions: [V179]
Exit stack: [V11, 0xcc, V179]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: [0x1b8]
Successors: []
---
0x20e PUSH1 0x0
0x210 DUP1
0x211 REVERT
---
0x20e: V198 = 0x0
0x211: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcc, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcc, V179]

================================

Block 0x212
[0x212:0x214]
---
Predecessors: [0x1b8]
Successors: [0xcc]
---
0x212 JUMPDEST
0x213 POP
0x214 JUMP
---
0x212: JUMPDEST 
0x214: JUMP 0xcc
---
Entry stack: [V11, 0xcc, V179]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x215
[0x215:0x22d]
---
Predecessors: [0x111]
Successors: [0x125]
---
0x215 JUMPDEST
0x216 PUSH1 0x2
0x218 PUSH1 0x20
0x21a MSTORE
0x21b PUSH1 0x0
0x21d SWAP1
0x21e DUP2
0x21f MSTORE
0x220 PUSH1 0x40
0x222 SWAP1
0x223 SHA3
0x224 DUP1
0x225 SLOAD
0x226 PUSH1 0x1
0x228 SWAP1
0x229 SWAP2
0x22a ADD
0x22b SLOAD
0x22c DUP3
0x22d JUMP
---
0x215: JUMPDEST 
0x216: V199 = 0x2
0x218: V200 = 0x20
0x21a: M[0x20] = 0x2
0x21b: V201 = 0x0
0x21f: M[0x0] = V103
0x220: V202 = 0x40
0x223: V203 = SHA3 0x0 0x40
0x225: V204 = S[V203]
0x226: V205 = 0x1
0x22a: V206 = ADD V203 0x1
0x22b: V207 = S[V206]
0x22d: JUMP 0x125
---
Entry stack: [V11, 0x125, V103]
Stack pops: 2
Stack additions: [S1, V204, V207]
Exit stack: [V11, 0x125, V204, V207]

================================

Block 0x22e
[0x22e:0x233]
---
Predecessors: [0x148]
Successors: [0xe1]
---
0x22e JUMPDEST
0x22f PUSH1 0x0
0x231 SLOAD
0x232 DUP2
0x233 JUMP
---
0x22e: JUMPDEST 
0x22f: V208 = 0x0
0x231: V209 = S[0x0]
0x233: JUMP 0xe1
---
Entry stack: [V11, 0xe1]
Stack pops: 1
Stack additions: [S0, V209]
Exit stack: [V11, 0xe1, V209]

================================

Block 0x234
[0x234:0x23c]
---
Predecessors: [0x150]
Successors: [0x23d, 0x241]
---
0x234 JUMPDEST
0x235 PUSH1 0x0
0x237 CALLVALUE
0x238 GT
0x239 PUSH2 0x241
0x23c JUMPI
---
0x234: JUMPDEST 
0x235: V210 = 0x0
0x237: V211 = CALLVALUE
0x238: V212 = GT V211 0x0
0x239: V213 = 0x241
0x23c: JUMPI 0x241 V212
---
Entry stack: [V11, 0xcc, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcc, V127]

================================

Block 0x23d
[0x23d:0x240]
---
Predecessors: [0x234]
Successors: []
---
0x23d PUSH1 0x0
0x23f DUP1
0x240 REVERT
---
0x23d: V214 = 0x0
0x240: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcc, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcc, V127]

================================

Block 0x241
[0x241:0x251]
---
Predecessors: [0x234]
Successors: [0x252, 0x254]
---
0x241 JUMPDEST
0x242 PUSH1 0x1
0x244 PUSH1 0xa0
0x246 PUSH1 0x2
0x248 EXP
0x249 SUB
0x24a DUP2
0x24b AND
0x24c ISZERO
0x24d ISZERO
0x24e PUSH2 0x254
0x251 JUMPI
---
0x241: JUMPDEST 
0x242: V215 = 0x1
0x244: V216 = 0xa0
0x246: V217 = 0x2
0x248: V218 = EXP 0x2 0xa0
0x249: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24b: V220 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x24c: V221 = ISZERO V220
0x24d: V222 = ISZERO V221
0x24e: V223 = 0x254
0x251: JUMPI 0x254 V222
---
Entry stack: [V11, 0xcc, V127]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xcc, V127]

================================

Block 0x252
[0x252:0x253]
---
Predecessors: [0x241]
Successors: [0x254]
---
0x252 POP
0x253 CALLER
---
0x253: V224 = CALLER
---
Entry stack: [V11, 0xcc, V127]
Stack pops: 1
Stack additions: [V224]
Exit stack: [V11, 0xcc, V224]

================================

Block 0x254
[0x254:0x276]
---
Predecessors: [0x241, 0x252]
Successors: [0x277, 0x2a1]
---
0x254 JUMPDEST
0x255 PUSH1 0x1
0x257 PUSH1 0xa0
0x259 PUSH1 0x2
0x25b EXP
0x25c SUB
0x25d DUP2
0x25e AND
0x25f PUSH1 0x0
0x261 SWAP1
0x262 DUP2
0x263 MSTORE
0x264 PUSH1 0x2
0x266 PUSH1 0x20
0x268 MSTORE
0x269 PUSH1 0x40
0x26b SWAP1
0x26c SHA3
0x26d PUSH1 0x1
0x26f ADD
0x270 SLOAD
0x271 ISZERO
0x272 ISZERO
0x273 PUSH2 0x2a1
0x276 JUMPI
---
0x254: JUMPDEST 
0x255: V225 = 0x1
0x257: V226 = 0xa0
0x259: V227 = 0x2
0x25b: V228 = EXP 0x2 0xa0
0x25c: V229 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25e: V230 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x25f: V231 = 0x0
0x263: M[0x0] = V230
0x264: V232 = 0x2
0x266: V233 = 0x20
0x268: M[0x20] = 0x2
0x269: V234 = 0x40
0x26c: V235 = SHA3 0x0 0x40
0x26d: V236 = 0x1
0x26f: V237 = ADD 0x1 V235
0x270: V238 = S[V237]
0x271: V239 = ISZERO V238
0x272: V240 = ISZERO V239
0x273: V241 = 0x2a1
0x276: JUMPI 0x2a1 V240
---
Entry stack: [V11, 0xcc, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xcc, S0]

================================

Block 0x277
[0x277:0x2a0]
---
Predecessors: [0x254]
Successors: [0x2a1]
---
0x277 PUSH1 0x0
0x279 DUP1
0x27a SLOAD
0x27b PUSH1 0x1
0x27d PUSH1 0xa0
0x27f PUSH1 0x2
0x281 EXP
0x282 SUB
0x283 DUP4
0x284 AND
0x285 DUP3
0x286 MSTORE
0x287 PUSH1 0x2
0x289 PUSH1 0x20
0x28b MSTORE
0x28c PUSH1 0x40
0x28e SWAP1
0x28f SWAP2
0x290 SHA3
0x291 TIMESTAMP
0x292 SWAP1
0x293 SWAP2
0x294 ADD
0x295 PUSH1 0x1
0x297 SWAP2
0x298 DUP3
0x299 ADD
0x29a SSTORE
0x29b DUP1
0x29c SLOAD
0x29d DUP2
0x29e ADD
0x29f SWAP1
0x2a0 SSTORE
---
0x277: V242 = 0x0
0x27a: V243 = S[0x0]
0x27b: V244 = 0x1
0x27d: V245 = 0xa0
0x27f: V246 = 0x2
0x281: V247 = EXP 0x2 0xa0
0x282: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x284: V249 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x286: M[0x0] = V249
0x287: V250 = 0x2
0x289: V251 = 0x20
0x28b: M[0x20] = 0x2
0x28c: V252 = 0x40
0x290: V253 = SHA3 0x0 0x40
0x291: V254 = TIMESTAMP
0x294: V255 = ADD V243 V254
0x295: V256 = 0x1
0x299: V257 = ADD 0x1 V253
0x29a: S[V257] = V255
0x29c: V258 = S[0x1]
0x29e: V259 = ADD 0x1 V258
0x2a0: S[0x1] = V259
---
Entry stack: [V11, 0xcc, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xcc, S0]

================================

Block 0x2a1
[0x2a1:0x2bf]
---
Predecessors: [0x254, 0x277]
Successors: [0xcc]
---
0x2a1 JUMPDEST
0x2a2 PUSH1 0x1
0x2a4 PUSH1 0xa0
0x2a6 PUSH1 0x2
0x2a8 EXP
0x2a9 SUB
0x2aa AND
0x2ab PUSH1 0x0
0x2ad SWAP1
0x2ae DUP2
0x2af MSTORE
0x2b0 PUSH1 0x2
0x2b2 PUSH1 0x20
0x2b4 MSTORE
0x2b5 PUSH1 0x40
0x2b7 SWAP1
0x2b8 SHA3
0x2b9 DUP1
0x2ba SLOAD
0x2bb CALLVALUE
0x2bc ADD
0x2bd SWAP1
0x2be SSTORE
0x2bf JUMP
---
0x2a1: JUMPDEST 
0x2a2: V260 = 0x1
0x2a4: V261 = 0xa0
0x2a6: V262 = 0x2
0x2a8: V263 = EXP 0x2 0xa0
0x2a9: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2aa: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x2ab: V266 = 0x0
0x2af: M[0x0] = V265
0x2b0: V267 = 0x2
0x2b2: V268 = 0x20
0x2b4: M[0x20] = 0x2
0x2b5: V269 = 0x40
0x2b8: V270 = SHA3 0x0 0x40
0x2ba: V271 = S[V270]
0x2bb: V272 = CALLVALUE
0x2bc: V273 = ADD V272 V271
0x2be: S[V270] = V273
0x2bf: JUMP 0xcc
---
Entry stack: [V11, 0xcc, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c0
[0x2c0:0x2eb]
---
Predecessors: []
Successors: []
---
0x2c0 STOP
0x2c1 LOG1
0x2c2 PUSH6 0x627a7a723058
0x2c9 SHA3
0x2ca PUSH31 0x489af849d6d3d4ecd951f2f8e1f92869823252817154df6b1a81d51039b1cb
0x2ea STOP
0x2eb MISSING 0x29
---
0x2c0: STOP 
0x2c1: LOG S0 S1 S2
0x2c2: V274 = 0x627a7a723058
0x2c9: V275 = SHA3 0x627a7a723058 S3
0x2ca: V276 = 0x489af849d6d3d4ecd951f2f8e1f92869823252817154df6b1a81d51039b1cb
0x2ea: STOP 
0x2eb: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x489af849d6d3d4ecd951f2f8e1f92869823252817154df6b1a81d51039b1cb, V275]
Exit stack: []

================================

Function 0:
Public function signature: 0xb2f6cef
Entry block: 0xce
Exit block: 0xe1
Body: 0xce, 0xd5, 0xd9, 0xe1, 0x164

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xf3
Exit block: 0xcc
Body: 0xcc, 0xf3, 0xfa, 0xfe, 0x16a, 0x18b, 0x18f, 0x1b4, 0x1b8, 0x20e, 0x212

Function 2:
Public function signature: 0x4a3f17e7
Entry block: 0x106
Exit block: 0x125
Body: 0x106, 0x10d, 0x111, 0x125, 0x215

Function 3:
Public function signature: 0xbaf05a87
Entry block: 0x13d
Exit block: 0xe1
Body: 0xe1, 0x13d, 0x144, 0x148, 0x22e

Function 4:
Public function signature: 0xf340fa01
Entry block: 0x150
Exit block: 0xcc
Body: 0xcc, 0x150, 0x234, 0x23d, 0x241, 0x252, 0x254, 0x277, 0x2a1

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0xcc
Body: 0x6c, 0x75, 0x79, 0xa2, 0xcc

