Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8b
0xa: JUMPI 0x8b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xd2]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x1cb3b20
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xd2
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x1cb3b20
0x39: V12 = EQ V10 0x1cb3b20
0x3a: V13 = 0xd2
0x3d: JUMPI 0xd2 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xe7]
---
0x3e DUP1
0x3f PUSH4 0x29dcb0cf
0x44 EQ
0x45 PUSH2 0xe7
0x48 JUMPI
---
0x3f: V14 = 0x29dcb0cf
0x44: V15 = EQ 0x29dcb0cf V10
0x45: V16 = 0xe7
0x48: JUMPI 0xe7 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x10c]
---
0x49 DUP1
0x4a PUSH4 0x38af3eed
0x4f EQ
0x50 PUSH2 0x10c
0x53 JUMPI
---
0x4a: V17 = 0x38af3eed
0x4f: V18 = EQ 0x38af3eed V10
0x50: V19 = 0x10c
0x53: JUMPI 0x10c V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x13b]
---
0x54 DUP1
0x55 PUSH4 0x70a08231
0x5a EQ
0x5b PUSH2 0x13b
0x5e JUMPI
---
0x55: V20 = 0x70a08231
0x5a: V21 = EQ 0x70a08231 V10
0x5b: V22 = 0x13b
0x5e: JUMPI 0x13b V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x16c]
---
0x5f DUP1
0x60 PUSH4 0x7a3a0e84
0x65 EQ
0x66 PUSH2 0x16c
0x69 JUMPI
---
0x60: V23 = 0x7a3a0e84
0x65: V24 = EQ 0x7a3a0e84 V10
0x66: V25 = 0x16c
0x69: JUMPI 0x16c V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x191]
---
0x6a DUP1
0x6b PUSH4 0x7b3e5e7b
0x70 EQ
0x71 PUSH2 0x191
0x74 JUMPI
---
0x6b: V26 = 0x7b3e5e7b
0x70: V27 = EQ 0x7b3e5e7b V10
0x71: V28 = 0x191
0x74: JUMPI 0x191 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x1b6]
---
0x75 DUP1
0x76 PUSH4 0xa035b1fe
0x7b EQ
0x7c PUSH2 0x1b6
0x7f JUMPI
---
0x76: V29 = 0xa035b1fe
0x7b: V30 = EQ 0xa035b1fe V10
0x7c: V31 = 0x1b6
0x7f: JUMPI 0x1b6 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x1db]
---
0x80 DUP1
0x81 PUSH4 0xfd6b7ef8
0x86 EQ
0x87 PUSH2 0x1db
0x8a JUMPI
---
0x81: V32 = 0xfd6b7ef8
0x86: V33 = EQ 0xfd6b7ef8 V10
0x87: V34 = 0x1db
0x8a: JUMPI 0x1db V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x8b]
---
Predecessors: [0x0, 0x80]
Successors: [0x8c]
---
0x8b JUMPDEST
---
0x8b: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x9f]
---
Predecessors: [0x8b]
Successors: [0xa0, 0xa4]
---
0x8c JUMPDEST
0x8d PUSH1 0x6
0x8f SLOAD
0x90 PUSH1 0x0
0x92 SWAP1
0x93 PUSH2 0x100
0x96 SWAP1
0x97 DIV
0x98 PUSH1 0xff
0x9a AND
0x9b ISZERO
0x9c PUSH2 0xa4
0x9f JUMPI
---
0x8c: JUMPDEST 
0x8d: V35 = 0x6
0x8f: V36 = S[0x6]
0x90: V37 = 0x0
0x93: V38 = 0x100
0x97: V39 = DIV V36 0x100
0x98: V40 = 0xff
0x9a: V41 = AND 0xff V39
0x9b: V42 = ISZERO V41
0x9c: V43 = 0xa4
0x9f: JUMPI 0xa4 V42
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x0]

================================

Block 0xa0
[0xa0:0xa3]
---
Predecessors: [0x8c]
Successors: []
---
0xa0 PUSH1 0x0
0xa2 DUP1
0xa3 REVERT
---
0xa0: V44 = 0x0
0xa3: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xa4
[0xa4:0xce]
---
Predecessors: [0x8c]
Successors: [0xcf]
---
0xa4 JUMPDEST
0xa5 POP
0xa6 PUSH1 0x1
0xa8 PUSH1 0xa0
0xaa PUSH1 0x2
0xac EXP
0xad SUB
0xae CALLER
0xaf AND
0xb0 PUSH1 0x0
0xb2 SWAP1
0xb3 DUP2
0xb4 MSTORE
0xb5 PUSH1 0x5
0xb7 PUSH1 0x20
0xb9 MSTORE
0xba PUSH1 0x40
0xbc SWAP1
0xbd SHA3
0xbe DUP1
0xbf SLOAD
0xc0 CALLVALUE
0xc1 SWAP1
0xc2 DUP2
0xc3 ADD
0xc4 SWAP1
0xc5 SWAP2
0xc6 SSTORE
0xc7 PUSH1 0x2
0xc9 DUP1
0xca SLOAD
0xcb DUP3
0xcc ADD
0xcd SWAP1
0xce SSTORE
---
0xa4: JUMPDEST 
0xa6: V45 = 0x1
0xa8: V46 = 0xa0
0xaa: V47 = 0x2
0xac: V48 = EXP 0x2 0xa0
0xad: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae: V50 = CALLER
0xaf: V51 = AND V50 0xffffffffffffffffffffffffffffffffffffffff
0xb0: V52 = 0x0
0xb4: M[0x0] = V51
0xb5: V53 = 0x5
0xb7: V54 = 0x20
0xb9: M[0x20] = 0x5
0xba: V55 = 0x40
0xbd: V56 = SHA3 0x0 0x40
0xbf: V57 = S[V56]
0xc0: V58 = CALLVALUE
0xc3: V59 = ADD V58 V57
0xc6: S[V56] = V59
0xc7: V60 = 0x2
0xca: V61 = S[0x2]
0xcc: V62 = ADD V58 V61
0xce: S[0x2] = V62
---
Entry stack: [V10, 0x0]
Stack pops: 1
Stack additions: [V58]
Exit stack: [V10, V58]

================================

Block 0xcf
[0xcf:0xd1]
---
Predecessors: [0xa4]
Successors: []
---
0xcf JUMPDEST
0xd0 POP
0xd1 STOP
---
0xcf: JUMPDEST 
0xd1: STOP 
---
Entry stack: [V10, V58]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xd2
[0xd2:0xd8]
---
Predecessors: [0xb]
Successors: [0xd9, 0xdd]
---
0xd2 JUMPDEST
0xd3 CALLVALUE
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd2: JUMPDEST 
0xd3: V63 = CALLVALUE
0xd4: V64 = ISZERO V63
0xd5: V65 = 0xdd
0xd8: JUMPI 0xdd V64
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd2]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V66 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdd
[0xdd:0xe4]
---
Predecessors: [0xd2]
Successors: [0x1f0]
---
0xdd JUMPDEST
0xde PUSH2 0xe5
0xe1 PUSH2 0x1f0
0xe4 JUMP
---
0xdd: JUMPDEST 
0xde: V67 = 0xe5
0xe1: V68 = 0x1f0
0xe4: JUMP 0x1f0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe5]
Exit stack: [V10, 0xe5]

================================

Block 0xe5
[0xe5:0xe6]
---
Predecessors: [0x22a]
Successors: []
---
0xe5 JUMPDEST
0xe6 STOP
---
0xe5: JUMPDEST 
0xe6: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe7
[0xe7:0xed]
---
Predecessors: [0x3e]
Successors: [0xee, 0xf2]
---
0xe7 JUMPDEST
0xe8 CALLVALUE
0xe9 ISZERO
0xea PUSH2 0xf2
0xed JUMPI
---
0xe7: JUMPDEST 
0xe8: V69 = CALLVALUE
0xe9: V70 = ISZERO V69
0xea: V71 = 0xf2
0xed: JUMPI 0xf2 V70
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf1]
---
Predecessors: [0xe7]
Successors: []
---
0xee PUSH1 0x0
0xf0 DUP1
0xf1 REVERT
---
0xee: V72 = 0x0
0xf1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf2
[0xf2:0xf9]
---
Predecessors: [0xe7]
Successors: [0x22c]
---
0xf2 JUMPDEST
0xf3 PUSH2 0xfa
0xf6 PUSH2 0x22c
0xf9 JUMP
---
0xf2: JUMPDEST 
0xf3: V73 = 0xfa
0xf6: V74 = 0x22c
0xf9: JUMP 0x22c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V10, 0xfa]

================================

Block 0xfa
[0xfa:0x10b]
---
Predecessors: [0x22c, 0x241, 0x253, 0x259, 0x25f]
Successors: []
---
0xfa JUMPDEST
0xfb PUSH1 0x40
0xfd MLOAD
0xfe SWAP1
0xff DUP2
0x100 MSTORE
0x101 PUSH1 0x20
0x103 ADD
0x104 PUSH1 0x40
0x106 MLOAD
0x107 DUP1
0x108 SWAP2
0x109 SUB
0x10a SWAP1
0x10b RETURN
---
0xfa: JUMPDEST 
0xfb: V75 = 0x40
0xfd: V76 = M[0x40]
0x100: M[V76] = S0
0x101: V77 = 0x20
0x103: V78 = ADD 0x20 V76
0x104: V79 = 0x40
0x106: V80 = M[0x40]
0x109: V81 = SUB V78 V80
0x10b: RETURN V80 V81
---
Entry stack: [V10, 0xfa, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xfa]

================================

Block 0x10c
[0x10c:0x112]
---
Predecessors: [0x49]
Successors: [0x113, 0x117]
---
0x10c JUMPDEST
0x10d CALLVALUE
0x10e ISZERO
0x10f PUSH2 0x117
0x112 JUMPI
---
0x10c: JUMPDEST 
0x10d: V82 = CALLVALUE
0x10e: V83 = ISZERO V82
0x10f: V84 = 0x117
0x112: JUMPI 0x117 V83
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x113
[0x113:0x116]
---
Predecessors: [0x10c]
Successors: []
---
0x113 PUSH1 0x0
0x115 DUP1
0x116 REVERT
---
0x113: V85 = 0x0
0x116: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x117
[0x117:0x11e]
---
Predecessors: [0x10c]
Successors: [0x232]
---
0x117 JUMPDEST
0x118 PUSH2 0x11f
0x11b PUSH2 0x232
0x11e JUMP
---
0x117: JUMPDEST 
0x118: V86 = 0x11f
0x11b: V87 = 0x232
0x11e: JUMP 0x232
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11f]
Exit stack: [V10, 0x11f]

================================

Block 0x11f
[0x11f:0x13a]
---
Predecessors: [0x232]
Successors: []
---
0x11f JUMPDEST
0x120 PUSH1 0x40
0x122 MLOAD
0x123 PUSH1 0x1
0x125 PUSH1 0xa0
0x127 PUSH1 0x2
0x129 EXP
0x12a SUB
0x12b SWAP1
0x12c SWAP2
0x12d AND
0x12e DUP2
0x12f MSTORE
0x130 PUSH1 0x20
0x132 ADD
0x133 PUSH1 0x40
0x135 MLOAD
0x136 DUP1
0x137 SWAP2
0x138 SUB
0x139 SWAP1
0x13a RETURN
---
0x11f: JUMPDEST 
0x120: V88 = 0x40
0x122: V89 = M[0x40]
0x123: V90 = 0x1
0x125: V91 = 0xa0
0x127: V92 = 0x2
0x129: V93 = EXP 0x2 0xa0
0x12a: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12d: V95 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x12f: M[V89] = V95
0x130: V96 = 0x20
0x132: V97 = ADD 0x20 V89
0x133: V98 = 0x40
0x135: V99 = M[0x40]
0x138: V100 = SUB V97 V99
0x13a: RETURN V99 V100
---
Entry stack: [V10, 0x11f, V200]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x11f]

================================

Block 0x13b
[0x13b:0x141]
---
Predecessors: [0x54]
Successors: [0x142, 0x146]
---
0x13b JUMPDEST
0x13c CALLVALUE
0x13d ISZERO
0x13e PUSH2 0x146
0x141 JUMPI
---
0x13b: JUMPDEST 
0x13c: V101 = CALLVALUE
0x13d: V102 = ISZERO V101
0x13e: V103 = 0x146
0x141: JUMPI 0x146 V102
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x142
[0x142:0x145]
---
Predecessors: [0x13b]
Successors: []
---
0x142 PUSH1 0x0
0x144 DUP1
0x145 REVERT
---
0x142: V104 = 0x0
0x145: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x146
[0x146:0x159]
---
Predecessors: [0x13b]
Successors: [0x241]
---
0x146 JUMPDEST
0x147 PUSH2 0xfa
0x14a PUSH1 0x1
0x14c PUSH1 0xa0
0x14e PUSH1 0x2
0x150 EXP
0x151 SUB
0x152 PUSH1 0x4
0x154 CALLDATALOAD
0x155 AND
0x156 PUSH2 0x241
0x159 JUMP
---
0x146: JUMPDEST 
0x147: V105 = 0xfa
0x14a: V106 = 0x1
0x14c: V107 = 0xa0
0x14e: V108 = 0x2
0x150: V109 = EXP 0x2 0xa0
0x151: V110 = SUB 0x10000000000000000000000000000000000000000 0x1
0x152: V111 = 0x4
0x154: V112 = CALLDATALOAD 0x4
0x155: V113 = AND V112 0xffffffffffffffffffffffffffffffffffffffff
0x156: V114 = 0x241
0x159: JUMP 0x241
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfa, V113]
Exit stack: [V10, 0xfa, V113]

================================

Block 0x15a
[0x15a:0x16b]
---
Predecessors: []
Successors: []
---
0x15a JUMPDEST
0x15b PUSH1 0x40
0x15d MLOAD
0x15e SWAP1
0x15f DUP2
0x160 MSTORE
0x161 PUSH1 0x20
0x163 ADD
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 SWAP2
0x169 SUB
0x16a SWAP1
0x16b RETURN
---
0x15a: JUMPDEST 
0x15b: V115 = 0x40
0x15d: V116 = M[0x40]
0x160: M[V116] = S0
0x161: V117 = 0x20
0x163: V118 = ADD 0x20 V116
0x164: V119 = 0x40
0x166: V120 = M[0x40]
0x169: V121 = SUB V118 V120
0x16b: RETURN V120 V121
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x16c
[0x16c:0x172]
---
Predecessors: [0x5f]
Successors: [0x173, 0x177]
---
0x16c JUMPDEST
0x16d CALLVALUE
0x16e ISZERO
0x16f PUSH2 0x177
0x172 JUMPI
---
0x16c: JUMPDEST 
0x16d: V122 = CALLVALUE
0x16e: V123 = ISZERO V122
0x16f: V124 = 0x177
0x172: JUMPI 0x177 V123
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x173
[0x173:0x176]
---
Predecessors: [0x16c]
Successors: []
---
0x173 PUSH1 0x0
0x175 DUP1
0x176 REVERT
---
0x173: V125 = 0x0
0x176: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x177
[0x177:0x17e]
---
Predecessors: [0x16c]
Successors: [0x253]
---
0x177 JUMPDEST
0x178 PUSH2 0xfa
0x17b PUSH2 0x253
0x17e JUMP
---
0x177: JUMPDEST 
0x178: V126 = 0xfa
0x17b: V127 = 0x253
0x17e: JUMP 0x253
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V10, 0xfa]

================================

Block 0x17f
[0x17f:0x190]
---
Predecessors: []
Successors: []
---
0x17f JUMPDEST
0x180 PUSH1 0x40
0x182 MLOAD
0x183 SWAP1
0x184 DUP2
0x185 MSTORE
0x186 PUSH1 0x20
0x188 ADD
0x189 PUSH1 0x40
0x18b MLOAD
0x18c DUP1
0x18d SWAP2
0x18e SUB
0x18f SWAP1
0x190 RETURN
---
0x17f: JUMPDEST 
0x180: V128 = 0x40
0x182: V129 = M[0x40]
0x185: M[V129] = S0
0x186: V130 = 0x20
0x188: V131 = ADD 0x20 V129
0x189: V132 = 0x40
0x18b: V133 = M[0x40]
0x18e: V134 = SUB V131 V133
0x190: RETURN V133 V134
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x191
[0x191:0x197]
---
Predecessors: [0x6a]
Successors: [0x198, 0x19c]
---
0x191 JUMPDEST
0x192 CALLVALUE
0x193 ISZERO
0x194 PUSH2 0x19c
0x197 JUMPI
---
0x191: JUMPDEST 
0x192: V135 = CALLVALUE
0x193: V136 = ISZERO V135
0x194: V137 = 0x19c
0x197: JUMPI 0x19c V136
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x198
[0x198:0x19b]
---
Predecessors: [0x191]
Successors: []
---
0x198 PUSH1 0x0
0x19a DUP1
0x19b REVERT
---
0x198: V138 = 0x0
0x19b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x19c
[0x19c:0x1a3]
---
Predecessors: [0x191]
Successors: [0x259]
---
0x19c JUMPDEST
0x19d PUSH2 0xfa
0x1a0 PUSH2 0x259
0x1a3 JUMP
---
0x19c: JUMPDEST 
0x19d: V139 = 0xfa
0x1a0: V140 = 0x259
0x1a3: JUMP 0x259
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V10, 0xfa]

================================

Block 0x1a4
[0x1a4:0x1b5]
---
Predecessors: []
Successors: []
---
0x1a4 JUMPDEST
0x1a5 PUSH1 0x40
0x1a7 MLOAD
0x1a8 SWAP1
0x1a9 DUP2
0x1aa MSTORE
0x1ab PUSH1 0x20
0x1ad ADD
0x1ae PUSH1 0x40
0x1b0 MLOAD
0x1b1 DUP1
0x1b2 SWAP2
0x1b3 SUB
0x1b4 SWAP1
0x1b5 RETURN
---
0x1a4: JUMPDEST 
0x1a5: V141 = 0x40
0x1a7: V142 = M[0x40]
0x1aa: M[V142] = S0
0x1ab: V143 = 0x20
0x1ad: V144 = ADD 0x20 V142
0x1ae: V145 = 0x40
0x1b0: V146 = M[0x40]
0x1b3: V147 = SUB V144 V146
0x1b5: RETURN V146 V147
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b6
[0x1b6:0x1bc]
---
Predecessors: [0x75]
Successors: [0x1bd, 0x1c1]
---
0x1b6 JUMPDEST
0x1b7 CALLVALUE
0x1b8 ISZERO
0x1b9 PUSH2 0x1c1
0x1bc JUMPI
---
0x1b6: JUMPDEST 
0x1b7: V148 = CALLVALUE
0x1b8: V149 = ISZERO V148
0x1b9: V150 = 0x1c1
0x1bc: JUMPI 0x1c1 V149
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1bd
[0x1bd:0x1c0]
---
Predecessors: [0x1b6]
Successors: []
---
0x1bd PUSH1 0x0
0x1bf DUP1
0x1c0 REVERT
---
0x1bd: V151 = 0x0
0x1c0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c1
[0x1c1:0x1c8]
---
Predecessors: [0x1b6]
Successors: [0x25f]
---
0x1c1 JUMPDEST
0x1c2 PUSH2 0xfa
0x1c5 PUSH2 0x25f
0x1c8 JUMP
---
0x1c1: JUMPDEST 
0x1c2: V152 = 0xfa
0x1c5: V153 = 0x25f
0x1c8: JUMP 0x25f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V10, 0xfa]

================================

Block 0x1c9
[0x1c9:0x1da]
---
Predecessors: []
Successors: []
---
0x1c9 JUMPDEST
0x1ca PUSH1 0x40
0x1cc MLOAD
0x1cd SWAP1
0x1ce DUP2
0x1cf MSTORE
0x1d0 PUSH1 0x20
0x1d2 ADD
0x1d3 PUSH1 0x40
0x1d5 MLOAD
0x1d6 DUP1
0x1d7 SWAP2
0x1d8 SUB
0x1d9 SWAP1
0x1da RETURN
---
0x1c9: JUMPDEST 
0x1ca: V154 = 0x40
0x1cc: V155 = M[0x40]
0x1cf: M[V155] = S0
0x1d0: V156 = 0x20
0x1d2: V157 = ADD 0x20 V155
0x1d3: V158 = 0x40
0x1d5: V159 = M[0x40]
0x1d8: V160 = SUB V157 V159
0x1da: RETURN V159 V160
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1db
[0x1db:0x1e1]
---
Predecessors: [0x80]
Successors: [0x1e2, 0x1e6]
---
0x1db JUMPDEST
0x1dc CALLVALUE
0x1dd ISZERO
0x1de PUSH2 0x1e6
0x1e1 JUMPI
---
0x1db: JUMPDEST 
0x1dc: V161 = CALLVALUE
0x1dd: V162 = ISZERO V161
0x1de: V163 = 0x1e6
0x1e1: JUMPI 0x1e6 V162
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e2
[0x1e2:0x1e5]
---
Predecessors: [0x1db]
Successors: []
---
0x1e2 PUSH1 0x0
0x1e4 DUP1
0x1e5 REVERT
---
0x1e2: V164 = 0x0
0x1e5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e6
[0x1e6:0x1ed]
---
Predecessors: [0x1db]
Successors: [0x265]
---
0x1e6 JUMPDEST
0x1e7 PUSH2 0xe5
0x1ea PUSH2 0x265
0x1ed JUMP
---
0x1e6: JUMPDEST 
0x1e7: V165 = 0xe5
0x1ea: V166 = 0x265
0x1ed: JUMP 0x265
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe5]
Exit stack: [V10, 0xe5]

================================

Block 0x1ee
[0x1ee:0x1ef]
---
Predecessors: []
Successors: []
---
0x1ee JUMPDEST
0x1ef STOP
---
0x1ee: JUMPDEST 
0x1ef: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f0
[0x1f0:0x1f9]
---
Predecessors: [0xdd]
Successors: [0x1fa, 0x228]
---
0x1f0 JUMPDEST
0x1f1 PUSH1 0x3
0x1f3 SLOAD
0x1f4 TIMESTAMP
0x1f5 LT
0x1f6 PUSH2 0x228
0x1f9 JUMPI
---
0x1f0: JUMPDEST 
0x1f1: V167 = 0x3
0x1f3: V168 = S[0x3]
0x1f4: V169 = TIMESTAMP
0x1f5: V170 = LT V169 V168
0x1f6: V171 = 0x228
0x1f9: JUMPI 0x228 V170
---
Entry stack: [V10, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5]

================================

Block 0x1fa
[0x1fa:0x20a]
---
Predecessors: [0x1f0]
Successors: [0x20b, 0x218]
---
0x1fa PUSH1 0x2
0x1fc SLOAD
0x1fd PUSH7 0x38d7ea4c68000
0x205 SWAP1
0x206 LT
0x207 PUSH2 0x218
0x20a JUMPI
---
0x1fa: V172 = 0x2
0x1fc: V173 = S[0x2]
0x1fd: V174 = 0x38d7ea4c68000
0x206: V175 = LT V173 0x38d7ea4c68000
0x207: V176 = 0x218
0x20a: JUMPI 0x218 V175
---
Entry stack: [V10, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5]

================================

Block 0x20b
[0x20b:0x217]
---
Predecessors: [0x1fa]
Successors: [0x218]
---
0x20b PUSH1 0x6
0x20d DUP1
0x20e SLOAD
0x20f PUSH1 0xff
0x211 NOT
0x212 AND
0x213 PUSH1 0x1
0x215 OR
0x216 SWAP1
0x217 SSTORE
---
0x20b: V177 = 0x6
0x20e: V178 = S[0x6]
0x20f: V179 = 0xff
0x211: V180 = NOT 0xff
0x212: V181 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V178
0x213: V182 = 0x1
0x215: V183 = OR 0x1 V181
0x217: S[0x6] = V183
---
Entry stack: [V10, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5]

================================

Block 0x218
[0x218:0x227]
---
Predecessors: [0x1fa, 0x20b]
Successors: [0x228]
---
0x218 JUMPDEST
0x219 PUSH1 0x6
0x21b DUP1
0x21c SLOAD
0x21d PUSH2 0xff00
0x220 NOT
0x221 AND
0x222 PUSH2 0x100
0x225 OR
0x226 SWAP1
0x227 SSTORE
---
0x218: JUMPDEST 
0x219: V184 = 0x6
0x21c: V185 = S[0x6]
0x21d: V186 = 0xff00
0x220: V187 = NOT 0xff00
0x221: V188 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V185
0x222: V189 = 0x100
0x225: V190 = OR 0x100 V188
0x227: S[0x6] = V190
---
Entry stack: [V10, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5]

================================

Block 0x228
[0x228:0x228]
---
Predecessors: [0x1f0, 0x218, 0x265, 0x28e, 0x294]
Successors: [0x229]
---
0x228 JUMPDEST
---
0x228: JUMPDEST 
---
Entry stack: [V10, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5]

================================

Block 0x229
[0x229:0x229]
---
Predecessors: [0x228]
Successors: [0x22a]
---
0x229 JUMPDEST
---
0x229: JUMPDEST 
---
Entry stack: [V10, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5]

================================

Block 0x22a
[0x22a:0x22b]
---
Predecessors: [0x229]
Successors: [0xe5]
---
0x22a JUMPDEST
0x22b JUMP
---
0x22a: JUMPDEST 
0x22b: JUMP 0xe5
---
Entry stack: [V10, 0xe5]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x22c
[0x22c:0x231]
---
Predecessors: [0xf2]
Successors: [0xfa]
---
0x22c JUMPDEST
0x22d PUSH1 0x3
0x22f SLOAD
0x230 DUP2
0x231 JUMP
---
0x22c: JUMPDEST 
0x22d: V191 = 0x3
0x22f: V192 = S[0x3]
0x231: JUMP 0xfa
---
Entry stack: [V10, 0xfa]
Stack pops: 1
Stack additions: [S0, V192]
Exit stack: [V10, 0xfa, V192]

================================

Block 0x232
[0x232:0x240]
---
Predecessors: [0x117]
Successors: [0x11f]
---
0x232 JUMPDEST
0x233 PUSH1 0x0
0x235 SLOAD
0x236 PUSH1 0x1
0x238 PUSH1 0xa0
0x23a PUSH1 0x2
0x23c EXP
0x23d SUB
0x23e AND
0x23f DUP2
0x240 JUMP
---
0x232: JUMPDEST 
0x233: V193 = 0x0
0x235: V194 = S[0x0]
0x236: V195 = 0x1
0x238: V196 = 0xa0
0x23a: V197 = 0x2
0x23c: V198 = EXP 0x2 0xa0
0x23d: V199 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23e: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x240: JUMP 0x11f
---
Entry stack: [V10, 0x11f]
Stack pops: 1
Stack additions: [S0, V200]
Exit stack: [V10, 0x11f, V200]

================================

Block 0x241
[0x241:0x252]
---
Predecessors: [0x146]
Successors: [0xfa]
---
0x241 JUMPDEST
0x242 PUSH1 0x5
0x244 PUSH1 0x20
0x246 MSTORE
0x247 PUSH1 0x0
0x249 SWAP1
0x24a DUP2
0x24b MSTORE
0x24c PUSH1 0x40
0x24e SWAP1
0x24f SHA3
0x250 SLOAD
0x251 DUP2
0x252 JUMP
---
0x241: JUMPDEST 
0x242: V201 = 0x5
0x244: V202 = 0x20
0x246: M[0x20] = 0x5
0x247: V203 = 0x0
0x24b: M[0x0] = V113
0x24c: V204 = 0x40
0x24f: V205 = SHA3 0x0 0x40
0x250: V206 = S[V205]
0x252: JUMP 0xfa
---
Entry stack: [V10, 0xfa, V113]
Stack pops: 2
Stack additions: [S1, V206]
Exit stack: [V10, 0xfa, V206]

================================

Block 0x253
[0x253:0x258]
---
Predecessors: [0x177]
Successors: [0xfa]
---
0x253 JUMPDEST
0x254 PUSH1 0x1
0x256 SLOAD
0x257 DUP2
0x258 JUMP
---
0x253: JUMPDEST 
0x254: V207 = 0x1
0x256: V208 = S[0x1]
0x258: JUMP 0xfa
---
Entry stack: [V10, 0xfa]
Stack pops: 1
Stack additions: [S0, V208]
Exit stack: [V10, 0xfa, V208]

================================

Block 0x259
[0x259:0x25e]
---
Predecessors: [0x19c]
Successors: [0xfa]
---
0x259 JUMPDEST
0x25a PUSH1 0x2
0x25c SLOAD
0x25d DUP2
0x25e JUMP
---
0x259: JUMPDEST 
0x25a: V209 = 0x2
0x25c: V210 = S[0x2]
0x25e: JUMP 0xfa
---
Entry stack: [V10, 0xfa]
Stack pops: 1
Stack additions: [S0, V210]
Exit stack: [V10, 0xfa, V210]

================================

Block 0x25f
[0x25f:0x264]
---
Predecessors: [0x1c1]
Successors: [0xfa]
---
0x25f JUMPDEST
0x260 PUSH1 0x4
0x262 SLOAD
0x263 DUP2
0x264 JUMP
---
0x25f: JUMPDEST 
0x260: V211 = 0x4
0x262: V212 = S[0x4]
0x264: JUMP 0xfa
---
Entry stack: [V10, 0xfa]
Stack pops: 1
Stack additions: [S0, V212]
Exit stack: [V10, 0xfa, V212]

================================

Block 0x265
[0x265:0x26e]
---
Predecessors: [0x1e6]
Successors: [0x228, 0x26f]
---
0x265 JUMPDEST
0x266 PUSH1 0x3
0x268 SLOAD
0x269 TIMESTAMP
0x26a LT
0x26b PUSH2 0x228
0x26e JUMPI
---
0x265: JUMPDEST 
0x266: V213 = 0x3
0x268: V214 = S[0x3]
0x269: V215 = TIMESTAMP
0x26a: V216 = LT V215 V214
0x26b: V217 = 0x228
0x26e: JUMPI 0x228 V216
---
Entry stack: [V10, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5]

================================

Block 0x26f
[0x26f:0x27a]
---
Predecessors: [0x265]
Successors: [0x27b, 0x28e]
---
0x26f PUSH1 0x6
0x271 SLOAD
0x272 PUSH1 0xff
0x274 AND
0x275 DUP1
0x276 ISZERO
0x277 PUSH2 0x28e
0x27a JUMPI
---
0x26f: V218 = 0x6
0x271: V219 = S[0x6]
0x272: V220 = 0xff
0x274: V221 = AND 0xff V219
0x276: V222 = ISZERO V221
0x277: V223 = 0x28e
0x27a: JUMPI 0x28e V222
---
Entry stack: [V10, 0xe5]
Stack pops: 0
Stack additions: [V221]
Exit stack: [V10, 0xe5, V221]

================================

Block 0x27b
[0x27b:0x28d]
---
Predecessors: [0x26f]
Successors: [0x28e]
---
0x27b POP
0x27c PUSH1 0x0
0x27e SLOAD
0x27f CALLER
0x280 PUSH1 0x1
0x282 PUSH1 0xa0
0x284 PUSH1 0x2
0x286 EXP
0x287 SUB
0x288 SWAP1
0x289 DUP2
0x28a AND
0x28b SWAP2
0x28c AND
0x28d EQ
---
0x27c: V224 = 0x0
0x27e: V225 = S[0x0]
0x27f: V226 = CALLER
0x280: V227 = 0x1
0x282: V228 = 0xa0
0x284: V229 = 0x2
0x286: V230 = EXP 0x2 0xa0
0x287: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28a: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x28c: V233 = AND V225 0xffffffffffffffffffffffffffffffffffffffff
0x28d: V234 = EQ V233 V232
---
Entry stack: [V10, 0xe5, V221]
Stack pops: 1
Stack additions: [V234]
Exit stack: [V10, 0xe5, V234]

================================

Block 0x28e
[0x28e:0x293]
---
Predecessors: [0x26f, 0x27b]
Successors: [0x228, 0x294]
---
0x28e JUMPDEST
0x28f ISZERO
0x290 PUSH2 0x228
0x293 JUMPI
---
0x28e: JUMPDEST 
0x28f: V235 = ISZERO S0
0x290: V236 = 0x228
0x293: JUMPI 0x228 V235
---
Entry stack: [V10, 0xe5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xe5]

================================

Block 0x294
[0x294:0x2c7]
---
Predecessors: [0x28e]
Successors: [0x228, 0x2c8]
---
0x294 PUSH1 0x0
0x296 SLOAD
0x297 PUSH1 0x2
0x299 SLOAD
0x29a PUSH1 0x1
0x29c PUSH1 0xa0
0x29e PUSH1 0x2
0x2a0 EXP
0x2a1 SUB
0x2a2 SWAP1
0x2a3 SWAP2
0x2a4 AND
0x2a5 SWAP1
0x2a6 DUP1
0x2a7 ISZERO
0x2a8 PUSH2 0x8fc
0x2ab MUL
0x2ac SWAP1
0x2ad PUSH1 0x40
0x2af MLOAD
0x2b0 PUSH1 0x0
0x2b2 PUSH1 0x40
0x2b4 MLOAD
0x2b5 DUP1
0x2b6 DUP4
0x2b7 SUB
0x2b8 DUP2
0x2b9 DUP6
0x2ba DUP9
0x2bb DUP9
0x2bc CALL
0x2bd SWAP4
0x2be POP
0x2bf POP
0x2c0 POP
0x2c1 POP
0x2c2 ISZERO
0x2c3 ISZERO
0x2c4 PUSH2 0x228
0x2c7 JUMPI
---
0x294: V237 = 0x0
0x296: V238 = S[0x0]
0x297: V239 = 0x2
0x299: V240 = S[0x2]
0x29a: V241 = 0x1
0x29c: V242 = 0xa0
0x29e: V243 = 0x2
0x2a0: V244 = EXP 0x2 0xa0
0x2a1: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a4: V246 = AND V238 0xffffffffffffffffffffffffffffffffffffffff
0x2a7: V247 = ISZERO V240
0x2a8: V248 = 0x8fc
0x2ab: V249 = MUL 0x8fc V247
0x2ad: V250 = 0x40
0x2af: V251 = M[0x40]
0x2b0: V252 = 0x0
0x2b2: V253 = 0x40
0x2b4: V254 = M[0x40]
0x2b7: V255 = SUB V251 V254
0x2bc: V256 = CALL V249 V246 V240 V254 V255 V254 0x0
0x2c2: V257 = ISZERO V256
0x2c3: V258 = ISZERO V257
0x2c4: V259 = 0x228
0x2c7: JUMPI 0x228 V258
---
Entry stack: [V10, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5]

================================

Block 0x2c8
[0x2c8:0x2cb]
---
Predecessors: [0x294]
Successors: []
---
0x2c8 PUSH1 0x0
0x2ca DUP1
0x2cb REVERT
---
0x2c8: V260 = 0x0
0x2cb: REVERT 0x0 0x0
---
Entry stack: [V10, 0xe5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe5]

================================

Block 0x2cc
[0x2cc:0x2cc]
---
Predecessors: []
Successors: [0x2cd]
---
0x2cc JUMPDEST
---
0x2cc: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2cd
[0x2cd:0x2cd]
---
Predecessors: [0x2cc]
Successors: [0x2ce]
---
0x2cd JUMPDEST
---
0x2cd: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ce
[0x2ce:0x2ce]
---
Predecessors: [0x2cd]
Successors: [0x2cf]
---
0x2ce JUMPDEST
---
0x2ce: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2cf
[0x2cf:0x2cf]
---
Predecessors: [0x2ce]
Successors: [0x2d0]
---
0x2cf JUMPDEST
---
0x2cf: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2d0
[0x2d0:0x2fd]
---
Predecessors: [0x2cf]
Successors: []
---
0x2d0 JUMPDEST
0x2d1 JUMP
0x2d2 STOP
0x2d3 LOG1
0x2d4 PUSH6 0x627a7a723058
0x2db SHA3
0x2dc MISSING 0xb0
0x2dd ADDMOD
0x2de MISSING 0x2f
0x2df ADDMOD
0x2e0 MISSING 0xb6
0x2e1 MISSING 0xe2
0x2e2 MISSING 0xac
0x2e3 SWAP12
0x2e4 MISSING 0xae
0x2e5 MISSING 0xbd
0x2e6 DUP5
0x2e7 LOG2
0x2e8 PUSH15 0x336bc9a343011d9c779e5febfea21c
0x2f8 ADDMOD
0x2f9 AND
0x2fa MISSING 0xd8
0x2fb MISSING 0x4c
0x2fc STOP
0x2fd MISSING 0x29
---
0x2d0: JUMPDEST 
0x2d1: JUMP S0
0x2d2: STOP 
0x2d3: LOG S0 S1 S2
0x2d4: V261 = 0x627a7a723058
0x2db: V262 = SHA3 0x627a7a723058 S3
0x2dc: MISSING 0xb0
0x2dd: V263 = ADDMOD S0 S1 S2
0x2de: MISSING 0x2f
0x2df: V264 = ADDMOD S0 S1 S2
0x2e0: MISSING 0xb6
0x2e1: MISSING 0xe2
0x2e2: MISSING 0xac
0x2e4: MISSING 0xae
0x2e5: MISSING 0xbd
0x2e7: LOG S4 S0 S1 S2
0x2e8: V265 = 0x336bc9a343011d9c779e5febfea21c
0x2f8: V266 = ADDMOD 0x336bc9a343011d9c779e5febfea21c S3 S4
0x2f9: V267 = AND V266 S5
0x2fa: MISSING 0xd8
0x2fb: MISSING 0x4c
0x2fc: STOP 
0x2fd: MISSING 0x29
---
Entry stack: []
Stack pops: 2988
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0xd2
Exit block: 0xe5
Body: 0xd2, 0xd9, 0xdd, 0xe5, 0x1f0, 0x1fa, 0x20b, 0x218, 0x228, 0x229, 0x22a

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0xe7
Exit block: 0xfa
Body: 0xe7, 0xee, 0xf2, 0xfa, 0x22c

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x10c
Exit block: 0x11f
Body: 0x10c, 0x113, 0x117, 0x11f, 0x232

Function 3:
Public function signature: 0x70a08231
Entry block: 0x13b
Exit block: 0xfa
Body: 0xfa, 0x13b, 0x142, 0x146, 0x241

Function 4:
Public function signature: 0x7a3a0e84
Entry block: 0x16c
Exit block: 0xfa
Body: 0xfa, 0x16c, 0x173, 0x177, 0x253

Function 5:
Public function signature: 0x7b3e5e7b
Entry block: 0x191
Exit block: 0xfa
Body: 0xfa, 0x191, 0x198, 0x19c, 0x259

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x1b6
Exit block: 0xfa
Body: 0xfa, 0x1b6, 0x1bd, 0x1c1, 0x25f

Function 7:
Public function signature: 0xfd6b7ef8
Entry block: 0x1db
Exit block: 0x2c8
Body: 0xe5, 0x1db, 0x1e2, 0x1e6, 0x228, 0x229, 0x22a, 0x265, 0x26f, 0x27b, 0x28e, 0x294, 0x2c8

Function 8:
Public fallback function
Entry block: 0x8b
Exit block: 0xcf
Body: 0x8b, 0x8c, 0xa0, 0xa4, 0xcf

