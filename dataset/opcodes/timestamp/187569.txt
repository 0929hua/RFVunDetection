Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x60]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1ea0d0de
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x60
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1ea0d0de
0x3b: V13 = EQ V11 0x1ea0d0de
0x3c: V14 = 0x60
0x3f: JUMPI 0x60 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x73]
---
0x40 DUP1
0x41 PUSH4 0x5727eec0
0x46 EQ
0x47 PUSH2 0x73
0x4a JUMPI
---
0x41: V15 = 0x5727eec0
0x46: V16 = EQ 0x5727eec0 V11
0x47: V17 = 0x73
0x4a: JUMPI 0x73 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x98]
---
0x4b DUP1
0x4c PUSH4 0x5cb4502c
0x51 EQ
0x52 PUSH2 0x98
0x55 JUMPI
---
0x4c: V18 = 0x5cb4502c
0x51: V19 = EQ 0x5cb4502c V11
0x52: V20 = 0x98
0x55: JUMPI 0x98 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x5d]
---
Predecessors: [0x0, 0x4b]
Successors: [0xab]
---
0x56 JUMPDEST
0x57 PUSH2 0x5e
0x5a PUSH2 0xab
0x5d JUMP
---
0x56: JUMPDEST 
0x57: V21 = 0x5e
0x5a: V22 = 0xab
0x5d: JUMP 0xab
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x5e]
Exit stack: [V11, 0x5e]

================================

Block 0x5e
[0x5e:0x5f]
---
Predecessors: [0x197]
Successors: []
---
0x5e JUMPDEST
0x5f STOP
---
0x5e: JUMPDEST 
0x5f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x60
[0x60:0x66]
---
Predecessors: [0xd]
Successors: [0x67, 0x6b]
---
0x60 JUMPDEST
0x61 CALLVALUE
0x62 ISZERO
0x63 PUSH2 0x6b
0x66 JUMPI
---
0x60: JUMPDEST 
0x61: V23 = CALLVALUE
0x62: V24 = ISZERO V23
0x63: V25 = 0x6b
0x66: JUMPI 0x6b V24
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6a]
---
Predecessors: [0x60]
Successors: []
---
0x67 PUSH1 0x0
0x69 DUP1
0x6a REVERT
---
0x67: V26 = 0x0
0x6a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6b
[0x6b:0x72]
---
Predecessors: [0x60]
Successors: [0x199]
---
0x6b JUMPDEST
0x6c PUSH2 0x5e
0x6f PUSH2 0x199
0x72 JUMP
---
0x6b: JUMPDEST 
0x6c: V27 = 0x5e
0x6f: V28 = 0x199
0x72: JUMP 0x199
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x5e]
Exit stack: [V11, 0x5e]

================================

Block 0x73
[0x73:0x79]
---
Predecessors: [0x40]
Successors: [0x7a, 0x7e]
---
0x73 JUMPDEST
0x74 CALLVALUE
0x75 ISZERO
0x76 PUSH2 0x7e
0x79 JUMPI
---
0x73: JUMPDEST 
0x74: V29 = CALLVALUE
0x75: V30 = ISZERO V29
0x76: V31 = 0x7e
0x79: JUMPI 0x7e V30
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x7d]
---
Predecessors: [0x73]
Successors: []
---
0x7a PUSH1 0x0
0x7c DUP1
0x7d REVERT
---
0x7a: V32 = 0x0
0x7d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7e
[0x7e:0x85]
---
Predecessors: [0x73]
Successors: [0x204]
---
0x7e JUMPDEST
0x7f PUSH2 0x86
0x82 PUSH2 0x204
0x85 JUMP
---
0x7e: JUMPDEST 
0x7f: V33 = 0x86
0x82: V34 = 0x204
0x85: JUMP 0x204
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x86]
Exit stack: [V11, 0x86]

================================

Block 0x86
[0x86:0x97]
---
Predecessors: [0x204, 0x20a]
Successors: []
---
0x86 JUMPDEST
0x87 PUSH1 0x40
0x89 MLOAD
0x8a SWAP1
0x8b DUP2
0x8c MSTORE
0x8d PUSH1 0x20
0x8f ADD
0x90 PUSH1 0x40
0x92 MLOAD
0x93 DUP1
0x94 SWAP2
0x95 SUB
0x96 SWAP1
0x97 RETURN
---
0x86: JUMPDEST 
0x87: V35 = 0x40
0x89: V36 = M[0x40]
0x8c: M[V36] = S0
0x8d: V37 = 0x20
0x8f: V38 = ADD 0x20 V36
0x90: V39 = 0x40
0x92: V40 = M[0x40]
0x95: V41 = SUB V38 V40
0x97: RETURN V40 V41
---
Entry stack: [V11, 0x86, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x86]

================================

Block 0x98
[0x98:0x9e]
---
Predecessors: [0x4b]
Successors: [0x9f, 0xa3]
---
0x98 JUMPDEST
0x99 CALLVALUE
0x9a ISZERO
0x9b PUSH2 0xa3
0x9e JUMPI
---
0x98: JUMPDEST 
0x99: V42 = CALLVALUE
0x9a: V43 = ISZERO V42
0x9b: V44 = 0xa3
0x9e: JUMPI 0xa3 V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9f
[0x9f:0xa2]
---
Predecessors: [0x98]
Successors: []
---
0x9f PUSH1 0x0
0xa1 DUP1
0xa2 REVERT
---
0x9f: V45 = 0x0
0xa2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xaa]
---
Predecessors: [0x98]
Successors: [0x20a]
---
0xa3 JUMPDEST
0xa4 PUSH2 0x86
0xa7 PUSH2 0x20a
0xaa JUMP
---
0xa3: JUMPDEST 
0xa4: V46 = 0x86
0xa7: V47 = 0x20a
0xaa: JUMP 0x20a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x86]
Exit stack: [V11, 0x86]

================================

Block 0xab
[0xab:0xca]
---
Predecessors: [0x56]
Successors: [0xcb, 0xe7]
---
0xab JUMPDEST
0xac PUSH1 0x1
0xae PUSH1 0xa0
0xb0 PUSH1 0x2
0xb2 EXP
0xb3 SUB
0xb4 CALLER
0xb5 AND
0xb6 PUSH1 0x0
0xb8 SWAP1
0xb9 DUP2
0xba MSTORE
0xbb PUSH1 0x4
0xbd PUSH1 0x20
0xbf MSTORE
0xc0 PUSH1 0x40
0xc2 SWAP1
0xc3 SHA3
0xc4 SLOAD
0xc5 ISZERO
0xc6 ISZERO
0xc7 PUSH2 0xe7
0xca JUMPI
---
0xab: JUMPDEST 
0xac: V48 = 0x1
0xae: V49 = 0xa0
0xb0: V50 = 0x2
0xb2: V51 = EXP 0x2 0xa0
0xb3: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4: V53 = CALLER
0xb5: V54 = AND V53 0xffffffffffffffffffffffffffffffffffffffff
0xb6: V55 = 0x0
0xba: M[0x0] = V54
0xbb: V56 = 0x4
0xbd: V57 = 0x20
0xbf: M[0x20] = 0x4
0xc0: V58 = 0x40
0xc3: V59 = SHA3 0x0 0x40
0xc4: V60 = S[V59]
0xc5: V61 = ISZERO V60
0xc6: V62 = ISZERO V61
0xc7: V63 = 0xe7
0xca: JUMPI 0xe7 V62
---
Entry stack: [V11, 0x5e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e]

================================

Block 0xcb
[0xcb:0xe6]
---
Predecessors: [0xab]
Successors: [0xe7]
---
0xcb PUSH1 0x2
0xcd SLOAD
0xce PUSH1 0x1
0xd0 PUSH1 0xa0
0xd2 PUSH1 0x2
0xd4 EXP
0xd5 SUB
0xd6 CALLER
0xd7 AND
0xd8 PUSH1 0x0
0xda SWAP1
0xdb DUP2
0xdc MSTORE
0xdd PUSH1 0x4
0xdf PUSH1 0x20
0xe1 MSTORE
0xe2 PUSH1 0x40
0xe4 SWAP1
0xe5 SHA3
0xe6 SSTORE
---
0xcb: V64 = 0x2
0xcd: V65 = S[0x2]
0xce: V66 = 0x1
0xd0: V67 = 0xa0
0xd2: V68 = 0x2
0xd4: V69 = EXP 0x2 0xa0
0xd5: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd6: V71 = CALLER
0xd7: V72 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0xd8: V73 = 0x0
0xdc: M[0x0] = V72
0xdd: V74 = 0x4
0xdf: V75 = 0x20
0xe1: M[0x20] = 0x4
0xe2: V76 = 0x40
0xe5: V77 = SHA3 0x0 0x40
0xe6: S[V77] = V65
---
Entry stack: [V11, 0x5e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e]

================================

Block 0xe7
[0xe7:0x109]
---
Predecessors: [0xab, 0xcb]
Successors: [0x10a, 0x10f]
---
0xe7 JUMPDEST
0xe8 PUSH1 0x1
0xea PUSH1 0xa0
0xec PUSH1 0x2
0xee EXP
0xef SUB
0xf0 CALLER
0xf1 AND
0xf2 PUSH1 0x0
0xf4 SWAP1
0xf5 DUP2
0xf6 MSTORE
0xf7 PUSH1 0x4
0xf9 PUSH1 0x20
0xfb MSTORE
0xfc PUSH1 0x40
0xfe SWAP1
0xff SHA3
0x100 SLOAD
0x101 CALLVALUE
0x102 GT
0x103 DUP1
0x104 ISZERO
0x105 SWAP1
0x106 PUSH2 0x10f
0x109 JUMPI
---
0xe7: JUMPDEST 
0xe8: V78 = 0x1
0xea: V79 = 0xa0
0xec: V80 = 0x2
0xee: V81 = EXP 0x2 0xa0
0xef: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf0: V83 = CALLER
0xf1: V84 = AND V83 0xffffffffffffffffffffffffffffffffffffffff
0xf2: V85 = 0x0
0xf6: M[0x0] = V84
0xf7: V86 = 0x4
0xf9: V87 = 0x20
0xfb: M[0x20] = 0x4
0xfc: V88 = 0x40
0xff: V89 = SHA3 0x0 0x40
0x100: V90 = S[V89]
0x101: V91 = CALLVALUE
0x102: V92 = GT V91 V90
0x104: V93 = ISZERO V92
0x106: V94 = 0x10f
0x109: JUMPI 0x10f V92
---
Entry stack: [V11, 0x5e]
Stack pops: 0
Stack additions: [V93]
Exit stack: [V11, 0x5e, V93]

================================

Block 0x10a
[0x10a:0x10e]
---
Predecessors: [0xe7]
Successors: [0x10f]
---
0x10a POP
0x10b PUSH1 0x1
0x10d CALLVALUE
0x10e GT
---
0x10b: V95 = 0x1
0x10d: V96 = CALLVALUE
0x10e: V97 = GT V96 0x1
---
Entry stack: [V11, 0x5e, V93]
Stack pops: 1
Stack additions: [V97]
Exit stack: [V11, 0x5e, V97]

================================

Block 0x10f
[0x10f:0x115]
---
Predecessors: [0xe7, 0x10a]
Successors: [0x116, 0x11a]
---
0x10f JUMPDEST
0x110 ISZERO
0x111 ISZERO
0x112 PUSH2 0x11a
0x115 JUMPI
---
0x10f: JUMPDEST 
0x110: V98 = ISZERO S0
0x111: V99 = ISZERO V98
0x112: V100 = 0x11a
0x115: JUMPI 0x11a V99
---
Entry stack: [V11, 0x5e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x5e]

================================

Block 0x116
[0x116:0x119]
---
Predecessors: [0x10f]
Successors: []
---
0x116 PUSH1 0x0
0x118 DUP1
0x119 REVERT
---
0x116: V101 = 0x0
0x119: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e]

================================

Block 0x11a
[0x11a:0x15a]
---
Predecessors: [0x10f]
Successors: [0x15b, 0x197]
---
0x11a JUMPDEST
0x11b CALLER
0x11c PUSH1 0x1
0x11e PUSH1 0xa0
0x120 PUSH1 0x2
0x122 EXP
0x123 SUB
0x124 AND
0x125 PUSH1 0x0
0x127 SWAP1
0x128 DUP2
0x129 MSTORE
0x12a PUSH1 0x3
0x12c PUSH1 0x20
0x12e DUP2
0x12f DUP2
0x130 MSTORE
0x131 PUSH1 0x40
0x133 DUP1
0x134 DUP5
0x135 SHA3
0x136 DUP1
0x137 SLOAD
0x138 CALLVALUE
0x139 ADD
0x13a DUP2
0x13b SSTORE
0x13c PUSH1 0x4
0x13e DUP4
0x13f MSTORE
0x140 SWAP1
0x141 DUP5
0x142 SHA3
0x143 DUP1
0x144 SLOAD
0x145 PUSH1 0x2
0x147 SWAP1
0x148 DIV
0x149 SWAP1
0x14a SSTORE
0x14b TIMESTAMP
0x14c PUSH1 0x5
0x14e SSTORE
0x14f SWAP3
0x150 SLOAD
0x151 SWAP2
0x152 SWAP1
0x153 MSTORE
0x154 SWAP1
0x155 SLOAD
0x156 LT
0x157 PUSH2 0x197
0x15a JUMPI
---
0x11a: JUMPDEST 
0x11b: V102 = CALLER
0x11c: V103 = 0x1
0x11e: V104 = 0xa0
0x120: V105 = 0x2
0x122: V106 = EXP 0x2 0xa0
0x123: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x124: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x125: V109 = 0x0
0x129: M[0x0] = V108
0x12a: V110 = 0x3
0x12c: V111 = 0x20
0x130: M[0x20] = 0x3
0x131: V112 = 0x40
0x135: V113 = SHA3 0x0 0x40
0x137: V114 = S[V113]
0x138: V115 = CALLVALUE
0x139: V116 = ADD V115 V114
0x13b: S[V113] = V116
0x13c: V117 = 0x4
0x13f: M[0x20] = 0x4
0x142: V118 = SHA3 0x0 0x40
0x144: V119 = S[V118]
0x145: V120 = 0x2
0x148: V121 = DIV V119 0x2
0x14a: S[V118] = V121
0x14b: V122 = TIMESTAMP
0x14c: V123 = 0x5
0x14e: S[0x5] = V122
0x150: V124 = S[0x0]
0x153: M[0x20] = 0x3
0x155: V125 = S[V113]
0x156: V126 = LT V125 V124
0x157: V127 = 0x197
0x15a: JUMPI 0x197 V126
---
Entry stack: [V11, 0x5e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e]

================================

Block 0x15b
[0x15b:0x192]
---
Predecessors: [0x11a]
Successors: [0x193, 0x197]
---
0x15b CALLER
0x15c PUSH1 0x1
0x15e PUSH1 0xa0
0x160 PUSH1 0x2
0x162 EXP
0x163 SUB
0x164 AND
0x165 PUSH2 0x8fc
0x168 ADDRESS
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 AND
0x172 BALANCE
0x173 SWAP1
0x174 DUP2
0x175 ISZERO
0x176 MUL
0x177 SWAP1
0x178 PUSH1 0x40
0x17a MLOAD
0x17b PUSH1 0x0
0x17d PUSH1 0x40
0x17f MLOAD
0x180 DUP1
0x181 DUP4
0x182 SUB
0x183 DUP2
0x184 DUP6
0x185 DUP9
0x186 DUP9
0x187 CALL
0x188 SWAP4
0x189 POP
0x18a POP
0x18b POP
0x18c POP
0x18d ISZERO
0x18e ISZERO
0x18f PUSH2 0x197
0x192 JUMPI
---
0x15b: V128 = CALLER
0x15c: V129 = 0x1
0x15e: V130 = 0xa0
0x160: V131 = 0x2
0x162: V132 = EXP 0x2 0xa0
0x163: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x164: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x165: V135 = 0x8fc
0x168: V136 = ADDRESS
0x169: V137 = 0x1
0x16b: V138 = 0xa0
0x16d: V139 = 0x2
0x16f: V140 = EXP 0x2 0xa0
0x170: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x172: V143 = BALANCE V142
0x175: V144 = ISZERO V143
0x176: V145 = MUL V144 0x8fc
0x178: V146 = 0x40
0x17a: V147 = M[0x40]
0x17b: V148 = 0x0
0x17d: V149 = 0x40
0x17f: V150 = M[0x40]
0x182: V151 = SUB V147 V150
0x187: V152 = CALL V145 V134 V143 V150 V151 V150 0x0
0x18d: V153 = ISZERO V152
0x18e: V154 = ISZERO V153
0x18f: V155 = 0x197
0x192: JUMPI 0x197 V154
---
Entry stack: [V11, 0x5e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e]

================================

Block 0x193
[0x193:0x196]
---
Predecessors: [0x15b]
Successors: []
---
0x193 PUSH1 0x0
0x195 DUP1
0x196 REVERT
---
0x193: V156 = 0x0
0x196: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e]

================================

Block 0x197
[0x197:0x198]
---
Predecessors: [0x11a, 0x15b, 0x1c7]
Successors: [0x5e]
---
0x197 JUMPDEST
0x198 JUMP
---
0x197: JUMPDEST 
0x198: JUMP 0x5e
---
Entry stack: [V11, 0x5e]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x199
[0x199:0x1af]
---
Predecessors: [0x6b]
Successors: [0x1b0, 0x1b4]
---
0x199 JUMPDEST
0x19a PUSH1 0x6
0x19c SLOAD
0x19d CALLER
0x19e PUSH1 0x1
0x1a0 PUSH1 0xa0
0x1a2 PUSH1 0x2
0x1a4 EXP
0x1a5 SUB
0x1a6 SWAP1
0x1a7 DUP2
0x1a8 AND
0x1a9 SWAP2
0x1aa AND
0x1ab EQ
0x1ac PUSH2 0x1b4
0x1af JUMPI
---
0x199: JUMPDEST 
0x19a: V157 = 0x6
0x19c: V158 = S[0x6]
0x19d: V159 = CALLER
0x19e: V160 = 0x1
0x1a0: V161 = 0xa0
0x1a2: V162 = 0x2
0x1a4: V163 = EXP 0x2 0xa0
0x1a5: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a8: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x1aa: V166 = AND V158 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V167 = EQ V166 V165
0x1ac: V168 = 0x1b4
0x1af: JUMPI 0x1b4 V167
---
Entry stack: [V11, 0x5e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e]

================================

Block 0x1b0
[0x1b0:0x1b3]
---
Predecessors: [0x199]
Successors: []
---
0x1b0 PUSH1 0x0
0x1b2 DUP1
0x1b3 REVERT
---
0x1b0: V169 = 0x0
0x1b3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e]

================================

Block 0x1b4
[0x1b4:0x1c2]
---
Predecessors: [0x199]
Successors: [0x1c3, 0x1c7]
---
0x1b4 JUMPDEST
0x1b5 PUSH1 0x5
0x1b7 SLOAD
0x1b8 PUSH3 0x3f480
0x1bc ADD
0x1bd TIMESTAMP
0x1be GT
0x1bf PUSH2 0x1c7
0x1c2 JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V170 = 0x5
0x1b7: V171 = S[0x5]
0x1b8: V172 = 0x3f480
0x1bc: V173 = ADD 0x3f480 V171
0x1bd: V174 = TIMESTAMP
0x1be: V175 = GT V174 V173
0x1bf: V176 = 0x1c7
0x1c2: JUMPI 0x1c7 V175
---
Entry stack: [V11, 0x5e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e]

================================

Block 0x1c3
[0x1c3:0x1c6]
---
Predecessors: [0x1b4]
Successors: []
---
0x1c3 PUSH1 0x0
0x1c5 DUP1
0x1c6 REVERT
---
0x1c3: V177 = 0x0
0x1c6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e]

================================

Block 0x1c7
[0x1c7:0x1ff]
---
Predecessors: [0x1b4]
Successors: [0x197, 0x200]
---
0x1c7 JUMPDEST
0x1c8 CALLER
0x1c9 PUSH1 0x1
0x1cb PUSH1 0xa0
0x1cd PUSH1 0x2
0x1cf EXP
0x1d0 SUB
0x1d1 AND
0x1d2 PUSH2 0x8fc
0x1d5 ADDRESS
0x1d6 PUSH1 0x1
0x1d8 PUSH1 0xa0
0x1da PUSH1 0x2
0x1dc EXP
0x1dd SUB
0x1de AND
0x1df BALANCE
0x1e0 SWAP1
0x1e1 DUP2
0x1e2 ISZERO
0x1e3 MUL
0x1e4 SWAP1
0x1e5 PUSH1 0x40
0x1e7 MLOAD
0x1e8 PUSH1 0x0
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed DUP1
0x1ee DUP4
0x1ef SUB
0x1f0 DUP2
0x1f1 DUP6
0x1f2 DUP9
0x1f3 DUP9
0x1f4 CALL
0x1f5 SWAP4
0x1f6 POP
0x1f7 POP
0x1f8 POP
0x1f9 POP
0x1fa ISZERO
0x1fb ISZERO
0x1fc PUSH2 0x197
0x1ff JUMPI
---
0x1c7: JUMPDEST 
0x1c8: V178 = CALLER
0x1c9: V179 = 0x1
0x1cb: V180 = 0xa0
0x1cd: V181 = 0x2
0x1cf: V182 = EXP 0x2 0xa0
0x1d0: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d1: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x1d2: V185 = 0x8fc
0x1d5: V186 = ADDRESS
0x1d6: V187 = 0x1
0x1d8: V188 = 0xa0
0x1da: V189 = 0x2
0x1dc: V190 = EXP 0x2 0xa0
0x1dd: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1de: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x1df: V193 = BALANCE V192
0x1e2: V194 = ISZERO V193
0x1e3: V195 = MUL V194 0x8fc
0x1e5: V196 = 0x40
0x1e7: V197 = M[0x40]
0x1e8: V198 = 0x0
0x1ea: V199 = 0x40
0x1ec: V200 = M[0x40]
0x1ef: V201 = SUB V197 V200
0x1f4: V202 = CALL V195 V184 V193 V200 V201 V200 0x0
0x1fa: V203 = ISZERO V202
0x1fb: V204 = ISZERO V203
0x1fc: V205 = 0x197
0x1ff: JUMPI 0x197 V204
---
Entry stack: [V11, 0x5e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e]

================================

Block 0x200
[0x200:0x203]
---
Predecessors: [0x1c7]
Successors: []
---
0x200 PUSH1 0x0
0x202 DUP1
0x203 REVERT
---
0x200: V206 = 0x0
0x203: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5e]

================================

Block 0x204
[0x204:0x209]
---
Predecessors: [0x7e]
Successors: [0x86]
---
0x204 JUMPDEST
0x205 PUSH1 0x2
0x207 SLOAD
0x208 DUP2
0x209 JUMP
---
0x204: JUMPDEST 
0x205: V207 = 0x2
0x207: V208 = S[0x2]
0x209: JUMP 0x86
---
Entry stack: [V11, 0x86]
Stack pops: 1
Stack additions: [S0, V208]
Exit stack: [V11, 0x86, V208]

================================

Block 0x20a
[0x20a:0x20f]
---
Predecessors: [0xa3]
Successors: [0x86]
---
0x20a JUMPDEST
0x20b PUSH1 0x0
0x20d SLOAD
0x20e DUP2
0x20f JUMP
---
0x20a: JUMPDEST 
0x20b: V209 = 0x0
0x20d: V210 = S[0x0]
0x20f: JUMP 0x86
---
Entry stack: [V11, 0x86]
Stack pops: 1
Stack additions: [S0, V210]
Exit stack: [V11, 0x86, V210]

================================

Block 0x210
[0x210:0x232]
---
Predecessors: []
Successors: [0x233]
---
0x210 STOP
0x211 LOG1
0x212 PUSH6 0x627a7a723058
0x219 SHA3
0x21a DUP14
0x21b SWAP16
0x21c SWAP8
0x21d LT
0x21e MISSING 0xef
0x21f EXTCODEHASH
0x220 MSTORE
0x221 MISSING 0xd2
0x222 PUSH11 0x56166998904f648587a411
0x22e MSIZE
0x22f SWAP16
0x230 DUP8
0x231 SSTORE
0x232 JUMPI
---
0x210: STOP 
0x211: LOG S0 S1 S2
0x212: V211 = 0x627a7a723058
0x219: V212 = SHA3 0x627a7a723058 S3
0x21d: V213 = LT S10 V212
0x21e: MISSING 0xef
0x21f: V214 = EXTCODEHASH S0
0x220: M[V214] = S1
0x221: MISSING 0xd2
0x222: V215 = 0x56166998904f648587a411
0x22e: V216 = MSIZE
0x231: S[S5] = S14
0x232: THROWI S0
---
Entry stack: []
Stack pops: 0
Stack additions: [V213, S4, S5, S6, S7, S8, S9, S18, S11, S12, S13, S14, S15, S16, S17, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V216]
Exit stack: []

================================

Block 0x233
[0x233:0x23d]
---
Predecessors: [0x210]
Successors: []
---
0x233 SGT
0x234 POP
0x235 DUP7
0x236 MISSING 0xb9
0x237 PUSH6 0x4bcf0029
---
0x233: V217 = SGT S0 S1
0x236: MISSING 0xb9
0x237: V218 = 0x4bcf0029
---
Entry stack: [V216, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [0x4bcf0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1ea0d0de
Entry block: 0x60
Exit block: 0x5e
Body: 0x5e, 0x60, 0x67, 0x6b, 0x197, 0x199, 0x1b0, 0x1b4, 0x1c3, 0x1c7, 0x200

Function 1:
Public function signature: 0x5727eec0
Entry block: 0x73
Exit block: 0x86
Body: 0x73, 0x7a, 0x7e, 0x86, 0x204

Function 2:
Public function signature: 0x5cb4502c
Entry block: 0x98
Exit block: 0x86
Body: 0x86, 0x98, 0x9f, 0xa3, 0x20a

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x5e
Body: 0x56, 0x5e, 0xab, 0xcb, 0xe7, 0x10a, 0x10f, 0x116, 0x11a, 0x15b, 0x193, 0x197

