Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x4b1]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xd6103a1
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x4b1
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xd6103a1
0x20: V14 = EQ V12 0xd6103a1
0x21: V15 = 0x4b1
0x24: JUMPI 0x4b1 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x4c6]
---
0x25 DUP1
0x26 PUSH4 0x27ebcf0e
0x2b EQ
0x2c PUSH2 0x4c6
0x2f JUMPI
---
0x26: V16 = 0x27ebcf0e
0x2b: V17 = EQ 0x27ebcf0e V12
0x2c: V18 = 0x4c6
0x2f: JUMPI 0x4c6 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x4f5]
---
0x30 DUP1
0x31 PUSH4 0x519ee19e
0x36 EQ
0x37 PUSH2 0x4f5
0x3a JUMPI
---
0x31: V19 = 0x519ee19e
0x36: V20 = EQ 0x519ee19e V12
0x37: V21 = 0x4f5
0x3a: JUMPI 0x4f5 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x51a]
---
0x3b DUP1
0x3c PUSH4 0x7fa8c158
0x41 EQ
0x42 PUSH2 0x51a
0x45 JUMPI
---
0x3c: V22 = 0x7fa8c158
0x41: V23 = EQ 0x7fa8c158 V12
0x42: V24 = 0x51a
0x45: JUMPI 0x51a V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x53f]
---
0x46 DUP1
0x47 PUSH4 0x8da5cb5b
0x4c EQ
0x4d PUSH2 0x53f
0x50 JUMPI
---
0x47: V25 = 0x8da5cb5b
0x4c: V26 = EQ 0x8da5cb5b V12
0x4d: V27 = 0x53f
0x50: JUMPI 0x53f V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x56e]
---
0x51 DUP1
0x52 PUSH4 0x96c5406d
0x57 EQ
0x58 PUSH2 0x56e
0x5b JUMPI
---
0x52: V28 = 0x96c5406d
0x57: V29 = EQ 0x96c5406d V12
0x58: V30 = 0x56e
0x5b: JUMPI 0x56e V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x593]
---
0x5c DUP1
0x5d PUSH4 0xa035b1fe
0x62 EQ
0x63 PUSH2 0x593
0x66 JUMPI
---
0x5d: V31 = 0xa035b1fe
0x62: V32 = EQ 0xa035b1fe V12
0x63: V33 = 0x593
0x66: JUMPI 0x593 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x5b8]
---
0x67 DUP1
0x68 PUSH4 0xb44eccc9
0x6d EQ
0x6e PUSH2 0x5b8
0x71 JUMPI
---
0x68: V34 = 0xb44eccc9
0x6d: V35 = EQ 0xb44eccc9 V12
0x6e: V36 = 0x5b8
0x71: JUMPI 0x5b8 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x5dd]
---
0x72 DUP1
0x73 PUSH4 0xc8e569a8
0x78 EQ
0x79 PUSH2 0x5dd
0x7c JUMPI
---
0x73: V37 = 0xc8e569a8
0x78: V38 = EQ 0xc8e569a8 V12
0x79: V39 = 0x5dd
0x7c: JUMPI 0x5dd V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x602]
---
0x7d DUP1
0x7e PUSH4 0xccb07cef
0x83 EQ
0x84 PUSH2 0x602
0x87 JUMPI
---
0x7e: V40 = 0xccb07cef
0x83: V41 = EQ 0xccb07cef V12
0x84: V42 = 0x602
0x87: JUMPI 0x602 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x88]
---
Predecessors: [0x0, 0x7d]
Successors: [0x89]
---
0x88 JUMPDEST
---
0x88: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x89
[0x89:0xe1]
---
Predecessors: [0x88]
Successors: [0xe2, 0xe6]
---
0x89 JUMPDEST
0x8a PUSH1 0x0
0x8c DUP1
0x8d SLOAD
0x8e DUP2
0x8f SWAP1
0x90 DUP2
0x91 SWAP1
0x92 PUSH1 0x1
0x94 PUSH1 0xa0
0x96 PUSH1 0x2
0x98 EXP
0x99 SUB
0x9a AND
0x9b PUSH4 0x70a08231
0xa0 ADDRESS
0xa1 DUP4
0xa2 PUSH1 0x40
0xa4 MLOAD
0xa5 PUSH1 0x20
0xa7 ADD
0xa8 MSTORE
0xa9 PUSH1 0x40
0xab MLOAD
0xac PUSH1 0xe0
0xae PUSH1 0x2
0xb0 EXP
0xb1 PUSH4 0xffffffff
0xb6 DUP5
0xb7 AND
0xb8 MUL
0xb9 DUP2
0xba MSTORE
0xbb PUSH1 0x1
0xbd PUSH1 0xa0
0xbf PUSH1 0x2
0xc1 EXP
0xc2 SUB
0xc3 SWAP1
0xc4 SWAP2
0xc5 AND
0xc6 PUSH1 0x4
0xc8 DUP3
0xc9 ADD
0xca MSTORE
0xcb PUSH1 0x24
0xcd ADD
0xce PUSH1 0x20
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 DUP1
0xd4 DUP4
0xd5 SUB
0xd6 DUP2
0xd7 PUSH1 0x0
0xd9 DUP8
0xda DUP1
0xdb EXTCODESIZE
0xdc ISZERO
0xdd ISZERO
0xde PUSH2 0xe6
0xe1 JUMPI
---
0x89: JUMPDEST 
0x8a: V43 = 0x0
0x8d: V44 = S[0x0]
0x92: V45 = 0x1
0x94: V46 = 0xa0
0x96: V47 = 0x2
0x98: V48 = EXP 0x2 0xa0
0x99: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x9b: V51 = 0x70a08231
0xa0: V52 = ADDRESS
0xa2: V53 = 0x40
0xa4: V54 = M[0x40]
0xa5: V55 = 0x20
0xa7: V56 = ADD 0x20 V54
0xa8: M[V56] = 0x0
0xa9: V57 = 0x40
0xab: V58 = M[0x40]
0xac: V59 = 0xe0
0xae: V60 = 0x2
0xb0: V61 = EXP 0x2 0xe0
0xb1: V62 = 0xffffffff
0xb7: V63 = AND 0x70a08231 0xffffffff
0xb8: V64 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xba: M[V58] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xbb: V65 = 0x1
0xbd: V66 = 0xa0
0xbf: V67 = 0x2
0xc1: V68 = EXP 0x2 0xa0
0xc2: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5: V70 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V71 = 0x4
0xc9: V72 = ADD V58 0x4
0xca: M[V72] = V70
0xcb: V73 = 0x24
0xcd: V74 = ADD 0x24 V58
0xce: V75 = 0x20
0xd0: V76 = 0x40
0xd2: V77 = M[0x40]
0xd5: V78 = SUB V74 V77
0xd7: V79 = 0x0
0xdb: V80 = EXTCODESIZE V50
0xdc: V81 = ISZERO V80
0xdd: V82 = ISZERO V81
0xde: V83 = 0xe6
0xe1: JUMPI 0xe6 V82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V50, 0x70a08231, V74, 0x20, V77, V78, V77, 0x0, V50]
Exit stack: [V12, 0x0, 0x0, 0x0, V50, 0x70a08231, V74, 0x20, V77, V78, V77, 0x0, V50]

================================

Block 0xe2
[0xe2:0xe5]
---
Predecessors: [0x89]
Successors: []
---
0xe2 PUSH1 0x0
0xe4 DUP1
0xe5 REVERT
---
0xe2: V84 = 0x0
0xe5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V50, 0x70a08231, V74, 0x20, V77, V78, V77, 0x0, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V50, 0x70a08231, V74, 0x20, V77, V78, V77, 0x0, V50]

================================

Block 0xe6
[0xe6:0xf2]
---
Predecessors: [0x89]
Successors: [0xf3, 0xf7]
---
0xe6 JUMPDEST
0xe7 PUSH2 0x2c6
0xea GAS
0xeb SUB
0xec CALL
0xed ISZERO
0xee ISZERO
0xef PUSH2 0xf7
0xf2 JUMPI
---
0xe6: JUMPDEST 
0xe7: V85 = 0x2c6
0xea: V86 = GAS
0xeb: V87 = SUB V86 0x2c6
0xec: V88 = CALL V87 V50 0x0 V77 V78 V77 0x20
0xed: V89 = ISZERO V88
0xee: V90 = ISZERO V89
0xef: V91 = 0xf7
0xf2: JUMPI 0xf7 V90
---
Entry stack: [V12, 0x0, 0x0, 0x0, V50, 0x70a08231, V74, 0x20, V77, V78, V77, 0x0, V50]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V50, 0x70a08231, V74]

================================

Block 0xf3
[0xf3:0xf6]
---
Predecessors: [0xe6]
Successors: []
---
0xf3 PUSH1 0x0
0xf5 DUP1
0xf6 REVERT
---
0xf3: V92 = 0x0
0xf6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V50, 0x70a08231, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V50, 0x70a08231, V74]

================================

Block 0xf7
[0xf7:0x10d]
---
Predecessors: [0xe6]
Successors: [0x10e, 0x144]
---
0xf7 JUMPDEST
0xf8 POP
0xf9 POP
0xfa POP
0xfb PUSH1 0x40
0xfd MLOAD
0xfe DUP1
0xff MLOAD
0x100 PUSH1 0x7
0x102 SSTORE
0x103 POP
0x104 PUSH1 0x1
0x106 SLOAD
0x107 TIMESTAMP
0x108 LT
0x109 ISZERO
0x10a PUSH2 0x144
0x10d JUMPI
---
0xf7: JUMPDEST 
0xfb: V93 = 0x40
0xfd: V94 = M[0x40]
0xff: V95 = M[V94]
0x100: V96 = 0x7
0x102: S[0x7] = V95
0x104: V97 = 0x1
0x106: V98 = S[0x1]
0x107: V99 = TIMESTAMP
0x108: V100 = LT V99 V98
0x109: V101 = ISZERO V100
0x10a: V102 = 0x144
0x10d: JUMPI 0x144 V101
---
Entry stack: [V12, 0x0, 0x0, 0x0, V50, 0x70a08231, V74]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x10e
[0x10e:0x13a]
---
Predecessors: [0xf7]
Successors: [0x13b, 0x13f]
---
0x10e PUSH1 0x1
0x110 PUSH1 0xa0
0x112 PUSH1 0x2
0x114 EXP
0x115 SUB
0x116 CALLER
0x117 AND
0x118 CALLVALUE
0x119 DUP1
0x11a ISZERO
0x11b PUSH2 0x8fc
0x11e MUL
0x11f SWAP1
0x120 PUSH1 0x40
0x122 MLOAD
0x123 PUSH1 0x0
0x125 PUSH1 0x40
0x127 MLOAD
0x128 DUP1
0x129 DUP4
0x12a SUB
0x12b DUP2
0x12c DUP6
0x12d DUP9
0x12e DUP9
0x12f CALL
0x130 SWAP4
0x131 POP
0x132 POP
0x133 POP
0x134 POP
0x135 ISZERO
0x136 ISZERO
0x137 PUSH2 0x13f
0x13a JUMPI
---
0x10e: V103 = 0x1
0x110: V104 = 0xa0
0x112: V105 = 0x2
0x114: V106 = EXP 0x2 0xa0
0x115: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x116: V108 = CALLER
0x117: V109 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x118: V110 = CALLVALUE
0x11a: V111 = ISZERO V110
0x11b: V112 = 0x8fc
0x11e: V113 = MUL 0x8fc V111
0x120: V114 = 0x40
0x122: V115 = M[0x40]
0x123: V116 = 0x0
0x125: V117 = 0x40
0x127: V118 = M[0x40]
0x12a: V119 = SUB V115 V118
0x12f: V120 = CALL V113 V109 V110 V118 V119 V118 0x0
0x135: V121 = ISZERO V120
0x136: V122 = ISZERO V121
0x137: V123 = 0x13f
0x13a: JUMPI 0x13f V122
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x13b
[0x13b:0x13e]
---
Predecessors: [0x10e]
Successors: []
---
0x13b PUSH1 0x0
0x13d DUP1
0x13e REVERT
---
0x13b: V124 = 0x0
0x13e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x13f
[0x13f:0x143]
---
Predecessors: [0x10e, 0x1a1, 0x2f4]
Successors: [0x438]
---
0x13f JUMPDEST
0x140 PUSH2 0x438
0x143 JUMP
---
0x13f: JUMPDEST 
0x140: V125 = 0x438
0x143: JUMP 0x438
---
Entry stack: [V12, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, 0x0]

================================

Block 0x144
[0x144:0x151]
---
Predecessors: [0xf7]
Successors: [0x152, 0x195]
---
0x144 JUMPDEST
0x145 PUSH1 0x3
0x147 SLOAD
0x148 PUSH1 0x1
0x14a ADD
0x14b TIMESTAMP
0x14c GT
0x14d ISZERO
0x14e PUSH2 0x195
0x151 JUMPI
---
0x144: JUMPDEST 
0x145: V126 = 0x3
0x147: V127 = S[0x3]
0x148: V128 = 0x1
0x14a: V129 = ADD 0x1 V127
0x14b: V130 = TIMESTAMP
0x14c: V131 = GT V130 V129
0x14d: V132 = ISZERO V131
0x14e: V133 = 0x195
0x151: JUMPI 0x195 V132
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x152
[0x152:0x17e]
---
Predecessors: [0x144]
Successors: [0x17f, 0x183]
---
0x152 PUSH1 0x1
0x154 PUSH1 0xa0
0x156 PUSH1 0x2
0x158 EXP
0x159 SUB
0x15a CALLER
0x15b AND
0x15c CALLVALUE
0x15d DUP1
0x15e ISZERO
0x15f PUSH2 0x8fc
0x162 MUL
0x163 SWAP1
0x164 PUSH1 0x40
0x166 MLOAD
0x167 PUSH1 0x0
0x169 PUSH1 0x40
0x16b MLOAD
0x16c DUP1
0x16d DUP4
0x16e SUB
0x16f DUP2
0x170 DUP6
0x171 DUP9
0x172 DUP9
0x173 CALL
0x174 SWAP4
0x175 POP
0x176 POP
0x177 POP
0x178 POP
0x179 ISZERO
0x17a ISZERO
0x17b PUSH2 0x183
0x17e JUMPI
---
0x152: V134 = 0x1
0x154: V135 = 0xa0
0x156: V136 = 0x2
0x158: V137 = EXP 0x2 0xa0
0x159: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15a: V139 = CALLER
0x15b: V140 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V141 = CALLVALUE
0x15e: V142 = ISZERO V141
0x15f: V143 = 0x8fc
0x162: V144 = MUL 0x8fc V142
0x164: V145 = 0x40
0x166: V146 = M[0x40]
0x167: V147 = 0x0
0x169: V148 = 0x40
0x16b: V149 = M[0x40]
0x16e: V150 = SUB V146 V149
0x173: V151 = CALL V144 V140 V141 V149 V150 V149 0x0
0x179: V152 = ISZERO V151
0x17a: V153 = ISZERO V152
0x17b: V154 = 0x183
0x17e: JUMPI 0x183 V153
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x17f
[0x17f:0x182]
---
Predecessors: [0x152]
Successors: []
---
0x17f PUSH1 0x0
0x181 DUP1
0x182 REVERT
---
0x17f: V155 = 0x0
0x182: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x183
[0x183:0x194]
---
Predecessors: [0x152]
Successors: [0x438]
---
0x183 JUMPDEST
0x184 PUSH1 0x8
0x186 DUP1
0x187 SLOAD
0x188 PUSH1 0xff
0x18a NOT
0x18b AND
0x18c PUSH1 0x1
0x18e OR
0x18f SWAP1
0x190 SSTORE
0x191 PUSH2 0x438
0x194 JUMP
---
0x183: JUMPDEST 
0x184: V156 = 0x8
0x187: V157 = S[0x8]
0x188: V158 = 0xff
0x18a: V159 = NOT 0xff
0x18b: V160 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V157
0x18c: V161 = 0x1
0x18e: V162 = OR 0x1 V160
0x190: S[0x8] = V162
0x191: V163 = 0x438
0x194: JUMP 0x438
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x195
[0x195:0x1a0]
---
Predecessors: [0x144]
Successors: [0x1a1, 0x1d7]
---
0x195 JUMPDEST
0x196 PUSH1 0x8
0x198 SLOAD
0x199 PUSH1 0xff
0x19b AND
0x19c ISZERO
0x19d PUSH2 0x1d7
0x1a0 JUMPI
---
0x195: JUMPDEST 
0x196: V164 = 0x8
0x198: V165 = S[0x8]
0x199: V166 = 0xff
0x19b: V167 = AND 0xff V165
0x19c: V168 = ISZERO V167
0x19d: V169 = 0x1d7
0x1a0: JUMPI 0x1d7 V168
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1a1
[0x1a1:0x1cd]
---
Predecessors: [0x195]
Successors: [0x13f, 0x1ce]
---
0x1a1 PUSH1 0x1
0x1a3 PUSH1 0xa0
0x1a5 PUSH1 0x2
0x1a7 EXP
0x1a8 SUB
0x1a9 CALLER
0x1aa AND
0x1ab CALLVALUE
0x1ac DUP1
0x1ad ISZERO
0x1ae PUSH2 0x8fc
0x1b1 MUL
0x1b2 SWAP1
0x1b3 PUSH1 0x40
0x1b5 MLOAD
0x1b6 PUSH1 0x0
0x1b8 PUSH1 0x40
0x1ba MLOAD
0x1bb DUP1
0x1bc DUP4
0x1bd SUB
0x1be DUP2
0x1bf DUP6
0x1c0 DUP9
0x1c1 DUP9
0x1c2 CALL
0x1c3 SWAP4
0x1c4 POP
0x1c5 POP
0x1c6 POP
0x1c7 POP
0x1c8 ISZERO
0x1c9 ISZERO
0x1ca PUSH2 0x13f
0x1cd JUMPI
---
0x1a1: V170 = 0x1
0x1a3: V171 = 0xa0
0x1a5: V172 = 0x2
0x1a7: V173 = EXP 0x2 0xa0
0x1a8: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a9: V175 = CALLER
0x1aa: V176 = AND V175 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V177 = CALLVALUE
0x1ad: V178 = ISZERO V177
0x1ae: V179 = 0x8fc
0x1b1: V180 = MUL 0x8fc V178
0x1b3: V181 = 0x40
0x1b5: V182 = M[0x40]
0x1b6: V183 = 0x0
0x1b8: V184 = 0x40
0x1ba: V185 = M[0x40]
0x1bd: V186 = SUB V182 V185
0x1c2: V187 = CALL V180 V176 V177 V185 V186 V185 0x0
0x1c8: V188 = ISZERO V187
0x1c9: V189 = ISZERO V188
0x1ca: V190 = 0x13f
0x1cd: JUMPI 0x13f V189
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1ce
[0x1ce:0x1d1]
---
Predecessors: [0x1a1]
Successors: []
---
0x1ce PUSH1 0x0
0x1d0 DUP1
0x1d1 REVERT
---
0x1ce: V191 = 0x0
0x1d1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x1d2
[0x1d2:0x1d6]
---
Predecessors: []
Successors: [0x438]
---
0x1d2 JUMPDEST
0x1d3 PUSH2 0x438
0x1d6 JUMP
---
0x1d2: JUMPDEST 
0x1d3: V192 = 0x438
0x1d6: JUMP 0x438
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d7
[0x1d7:0x1e5]
---
Predecessors: [0x195]
Successors: [0x1e6, 0x1e7]
---
0x1d7 JUMPDEST
0x1d8 PUSH1 0x5
0x1da SLOAD
0x1db PUSH1 0x4
0x1dd SLOAD
0x1de CALLVALUE
0x1df DUP2
0x1e0 ISZERO
0x1e1 ISZERO
0x1e2 PUSH2 0x1e7
0x1e5 JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V193 = 0x5
0x1da: V194 = S[0x5]
0x1db: V195 = 0x4
0x1dd: V196 = S[0x4]
0x1de: V197 = CALLVALUE
0x1e0: V198 = ISZERO V196
0x1e1: V199 = ISZERO V198
0x1e2: V200 = 0x1e7
0x1e5: JUMPI 0x1e7 V199
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V194, V196, V197]
Exit stack: [V12, 0x0, 0x0, 0x0, V194, V196, V197]

================================

Block 0x1e6
[0x1e6:0x1e6]
---
Predecessors: [0x1d7]
Successors: []
---
0x1e6 INVALID
---
0x1e6: INVALID 
---
Entry stack: [V12, 0x0, 0x0, 0x0, V194, V196, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V194, V196, V197]

================================

Block 0x1e7
[0x1e7:0x1f3]
---
Predecessors: [0x1d7]
Successors: [0x1f4, 0x1f8]
---
0x1e7 JUMPDEST
0x1e8 DIV
0x1e9 MUL
0x1ea SWAP3
0x1eb POP
0x1ec PUSH1 0x0
0x1ee DUP4
0x1ef GT
0x1f0 PUSH2 0x1f8
0x1f3 JUMPI
---
0x1e7: JUMPDEST 
0x1e8: V201 = DIV V197 V196
0x1e9: V202 = MUL V201 V194
0x1ec: V203 = 0x0
0x1ef: V204 = GT V202 0x0
0x1f0: V205 = 0x1f8
0x1f3: JUMPI 0x1f8 V204
---
Entry stack: [V12, 0x0, 0x0, 0x0, V194, V196, V197]
Stack pops: 6
Stack additions: [V202, S4, S3]
Exit stack: [V12, V202, 0x0, 0x0]

================================

Block 0x1f4
[0x1f4:0x1f7]
---
Predecessors: [0x1e7]
Successors: []
---
0x1f4 PUSH1 0x0
0x1f6 DUP1
0x1f7 REVERT
---
0x1f4: V206 = 0x0
0x1f7: REVERT 0x0 0x0
---
Entry stack: [V12, V202, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V202, 0x0, 0x0]

================================

Block 0x1f8
[0x1f8:0x207]
---
Predecessors: [0x1e7]
Successors: [0x208, 0x209]
---
0x1f8 JUMPDEST
0x1f9 PUSH1 0x5
0x1fb SLOAD
0x1fc PUSH1 0x4
0x1fe SLOAD
0x1ff DUP5
0x200 MUL
0x201 DUP2
0x202 ISZERO
0x203 ISZERO
0x204 PUSH2 0x209
0x207 JUMPI
---
0x1f8: JUMPDEST 
0x1f9: V207 = 0x5
0x1fb: V208 = S[0x5]
0x1fc: V209 = 0x4
0x1fe: V210 = S[0x4]
0x200: V211 = MUL V202 V210
0x202: V212 = ISZERO V208
0x203: V213 = ISZERO V212
0x204: V214 = 0x209
0x207: JUMPI 0x209 V213
---
Entry stack: [V12, V202, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V208, V211]
Exit stack: [V12, V202, 0x0, 0x0, V208, V211]

================================

Block 0x208
[0x208:0x208]
---
Predecessors: [0x1f8]
Successors: []
---
0x208 INVALID
---
0x208: INVALID 
---
Entry stack: [V12, V202, 0x0, 0x0, V208, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V202, 0x0, 0x0, V208, V211]

================================

Block 0x209
[0x209:0x217]
---
Predecessors: [0x1f8]
Successors: [0x218, 0x323]
---
0x209 JUMPDEST
0x20a DIV
0x20b SWAP2
0x20c POP
0x20d DUP3
0x20e PUSH1 0x7
0x210 SLOAD
0x211 LT
0x212 ISZERO
0x213 ISZERO
0x214 PUSH2 0x323
0x217 JUMPI
---
0x209: JUMPDEST 
0x20a: V215 = DIV V211 V208
0x20e: V216 = 0x7
0x210: V217 = S[0x7]
0x211: V218 = LT V217 V202
0x212: V219 = ISZERO V218
0x213: V220 = ISZERO V219
0x214: V221 = 0x323
0x217: JUMPI 0x323 V220
---
Entry stack: [V12, V202, 0x0, 0x0, V208, V211]
Stack pops: 5
Stack additions: [S4, V215, S2]
Exit stack: [V12, V202, V215, 0x0]

================================

Block 0x218
[0x218:0x24a]
---
Predecessors: [0x209]
Successors: [0x24b, 0x24f]
---
0x218 PUSH1 0x8
0x21a SLOAD
0x21b PUSH2 0x100
0x21e SWAP1
0x21f DIV
0x220 PUSH1 0x1
0x222 PUSH1 0xa0
0x224 PUSH1 0x2
0x226 EXP
0x227 SUB
0x228 AND
0x229 PUSH2 0x8fc
0x22c DUP4
0x22d ISZERO
0x22e MUL
0x22f DUP4
0x230 PUSH1 0x40
0x232 MLOAD
0x233 PUSH1 0x0
0x235 PUSH1 0x40
0x237 MLOAD
0x238 DUP1
0x239 DUP4
0x23a SUB
0x23b DUP2
0x23c DUP6
0x23d DUP9
0x23e DUP9
0x23f CALL
0x240 SWAP4
0x241 POP
0x242 POP
0x243 POP
0x244 POP
0x245 ISZERO
0x246 ISZERO
0x247 PUSH2 0x24f
0x24a JUMPI
---
0x218: V222 = 0x8
0x21a: V223 = S[0x8]
0x21b: V224 = 0x100
0x21f: V225 = DIV V223 0x100
0x220: V226 = 0x1
0x222: V227 = 0xa0
0x224: V228 = 0x2
0x226: V229 = EXP 0x2 0xa0
0x227: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x228: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x229: V232 = 0x8fc
0x22d: V233 = ISZERO V215
0x22e: V234 = MUL V233 0x8fc
0x230: V235 = 0x40
0x232: V236 = M[0x40]
0x233: V237 = 0x0
0x235: V238 = 0x40
0x237: V239 = M[0x40]
0x23a: V240 = SUB V236 V239
0x23f: V241 = CALL V234 V231 V215 V239 V240 V239 0x0
0x245: V242 = ISZERO V241
0x246: V243 = ISZERO V242
0x247: V244 = 0x24f
0x24a: JUMPI 0x24f V243
---
Entry stack: [V12, V202, V215, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V202, V215, 0x0]

================================

Block 0x24b
[0x24b:0x24e]
---
Predecessors: [0x218]
Successors: []
---
0x24b PUSH1 0x0
0x24d DUP1
0x24e REVERT
---
0x24b: V245 = 0x0
0x24e: REVERT 0x0 0x0
---
Entry stack: [V12, V202, V215, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V202, V215, 0x0]

================================

Block 0x24f
[0x24f:0x257]
---
Predecessors: [0x218]
Successors: [0x258, 0x28c]
---
0x24f JUMPDEST
0x250 DUP2
0x251 CALLVALUE
0x252 GT
0x253 ISZERO
0x254 PUSH2 0x28c
0x257 JUMPI
---
0x24f: JUMPDEST 
0x251: V246 = CALLVALUE
0x252: V247 = GT V246 V215
0x253: V248 = ISZERO V247
0x254: V249 = 0x28c
0x257: JUMPI 0x28c V248
---
Entry stack: [V12, V202, V215, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V202, V215, 0x0]

================================

Block 0x258
[0x258:0x287]
---
Predecessors: [0x24f]
Successors: [0x288, 0x28c]
---
0x258 CALLER
0x259 PUSH1 0x1
0x25b PUSH1 0xa0
0x25d PUSH1 0x2
0x25f EXP
0x260 SUB
0x261 AND
0x262 PUSH2 0x8fc
0x265 DUP4
0x266 CALLVALUE
0x267 SUB
0x268 SWAP1
0x269 DUP2
0x26a ISZERO
0x26b MUL
0x26c SWAP1
0x26d PUSH1 0x40
0x26f MLOAD
0x270 PUSH1 0x0
0x272 PUSH1 0x40
0x274 MLOAD
0x275 DUP1
0x276 DUP4
0x277 SUB
0x278 DUP2
0x279 DUP6
0x27a DUP9
0x27b DUP9
0x27c CALL
0x27d SWAP4
0x27e POP
0x27f POP
0x280 POP
0x281 POP
0x282 ISZERO
0x283 ISZERO
0x284 PUSH2 0x28c
0x287 JUMPI
---
0x258: V250 = CALLER
0x259: V251 = 0x1
0x25b: V252 = 0xa0
0x25d: V253 = 0x2
0x25f: V254 = EXP 0x2 0xa0
0x260: V255 = SUB 0x10000000000000000000000000000000000000000 0x1
0x261: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x262: V257 = 0x8fc
0x266: V258 = CALLVALUE
0x267: V259 = SUB V258 V215
0x26a: V260 = ISZERO V259
0x26b: V261 = MUL V260 0x8fc
0x26d: V262 = 0x40
0x26f: V263 = M[0x40]
0x270: V264 = 0x0
0x272: V265 = 0x40
0x274: V266 = M[0x40]
0x277: V267 = SUB V263 V266
0x27c: V268 = CALL V261 V256 V259 V266 V267 V266 0x0
0x282: V269 = ISZERO V268
0x283: V270 = ISZERO V269
0x284: V271 = 0x28c
0x287: JUMPI 0x28c V270
---
Entry stack: [V12, V202, V215, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, V202, V215, 0x0]

================================

Block 0x288
[0x288:0x28b]
---
Predecessors: [0x258]
Successors: []
---
0x288 PUSH1 0x0
0x28a DUP1
0x28b REVERT
---
0x288: V272 = 0x0
0x28b: REVERT 0x0 0x0
---
Entry stack: [V12, V202, V215, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V202, V215, 0x0]

================================

Block 0x28c
[0x28c:0x28c]
---
Predecessors: [0x24f, 0x258]
Successors: [0x28d]
---
0x28c JUMPDEST
---
0x28c: JUMPDEST 
---
Entry stack: [V12, V202, V215, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V202, V215, 0x0]

================================

Block 0x28d
[0x28d:0x2de]
---
Predecessors: [0x28c]
Successors: [0x2df, 0x2e3]
---
0x28d JUMPDEST
0x28e PUSH1 0x0
0x290 SLOAD
0x291 PUSH1 0x1
0x293 PUSH1 0xa0
0x295 PUSH1 0x2
0x297 EXP
0x298 SUB
0x299 AND
0x29a PUSH4 0xa9059cbb
0x29f CALLER
0x2a0 DUP6
0x2a1 PUSH1 0x40
0x2a3 MLOAD
0x2a4 PUSH1 0xe0
0x2a6 PUSH1 0x2
0x2a8 EXP
0x2a9 PUSH4 0xffffffff
0x2ae DUP6
0x2af AND
0x2b0 MUL
0x2b1 DUP2
0x2b2 MSTORE
0x2b3 PUSH1 0x1
0x2b5 PUSH1 0xa0
0x2b7 PUSH1 0x2
0x2b9 EXP
0x2ba SUB
0x2bb SWAP1
0x2bc SWAP3
0x2bd AND
0x2be PUSH1 0x4
0x2c0 DUP4
0x2c1 ADD
0x2c2 MSTORE
0x2c3 PUSH1 0x24
0x2c5 DUP3
0x2c6 ADD
0x2c7 MSTORE
0x2c8 PUSH1 0x44
0x2ca ADD
0x2cb PUSH1 0x0
0x2cd PUSH1 0x40
0x2cf MLOAD
0x2d0 DUP1
0x2d1 DUP4
0x2d2 SUB
0x2d3 DUP2
0x2d4 PUSH1 0x0
0x2d6 DUP8
0x2d7 DUP1
0x2d8 EXTCODESIZE
0x2d9 ISZERO
0x2da ISZERO
0x2db PUSH2 0x2e3
0x2de JUMPI
---
0x28d: JUMPDEST 
0x28e: V273 = 0x0
0x290: V274 = S[0x0]
0x291: V275 = 0x1
0x293: V276 = 0xa0
0x295: V277 = 0x2
0x297: V278 = EXP 0x2 0xa0
0x298: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x299: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x29a: V281 = 0xa9059cbb
0x29f: V282 = CALLER
0x2a1: V283 = 0x40
0x2a3: V284 = M[0x40]
0x2a4: V285 = 0xe0
0x2a6: V286 = 0x2
0x2a8: V287 = EXP 0x2 0xe0
0x2a9: V288 = 0xffffffff
0x2af: V289 = AND 0xa9059cbb 0xffffffff
0x2b0: V290 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x2b2: M[V284] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2b3: V291 = 0x1
0x2b5: V292 = 0xa0
0x2b7: V293 = 0x2
0x2b9: V294 = EXP 0x2 0xa0
0x2ba: V295 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bd: V296 = AND V282 0xffffffffffffffffffffffffffffffffffffffff
0x2be: V297 = 0x4
0x2c1: V298 = ADD V284 0x4
0x2c2: M[V298] = V296
0x2c3: V299 = 0x24
0x2c6: V300 = ADD V284 0x24
0x2c7: M[V300] = V202
0x2c8: V301 = 0x44
0x2ca: V302 = ADD 0x44 V284
0x2cb: V303 = 0x0
0x2cd: V304 = 0x40
0x2cf: V305 = M[0x40]
0x2d2: V306 = SUB V302 V305
0x2d4: V307 = 0x0
0x2d8: V308 = EXTCODESIZE V280
0x2d9: V309 = ISZERO V308
0x2da: V310 = ISZERO V309
0x2db: V311 = 0x2e3
0x2de: JUMPI 0x2e3 V310
---
Entry stack: [V12, V202, V215, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V280, 0xa9059cbb, V302, 0x0, V305, V306, V305, 0x0, V280]
Exit stack: [V12, V202, V215, 0x0, V280, 0xa9059cbb, V302, 0x0, V305, V306, V305, 0x0, V280]

================================

Block 0x2df
[0x2df:0x2e2]
---
Predecessors: [0x28d]
Successors: []
---
0x2df PUSH1 0x0
0x2e1 DUP1
0x2e2 REVERT
---
0x2df: V312 = 0x0
0x2e2: REVERT 0x0 0x0
---
Entry stack: [V12, V202, V215, 0x0, V280, 0xa9059cbb, V302, 0x0, V305, V306, V305, 0x0, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V202, V215, 0x0, V280, 0xa9059cbb, V302, 0x0, V305, V306, V305, 0x0, V280]

================================

Block 0x2e3
[0x2e3:0x2ef]
---
Predecessors: [0x28d]
Successors: [0x2f0, 0x2f4]
---
0x2e3 JUMPDEST
0x2e4 PUSH2 0x2c6
0x2e7 GAS
0x2e8 SUB
0x2e9 CALL
0x2ea ISZERO
0x2eb ISZERO
0x2ec PUSH2 0x2f4
0x2ef JUMPI
---
0x2e3: JUMPDEST 
0x2e4: V313 = 0x2c6
0x2e7: V314 = GAS
0x2e8: V315 = SUB V314 0x2c6
0x2e9: V316 = CALL V315 V280 0x0 V305 V306 V305 0x0
0x2ea: V317 = ISZERO V316
0x2eb: V318 = ISZERO V317
0x2ec: V319 = 0x2f4
0x2ef: JUMPI 0x2f4 V318
---
Entry stack: [V12, V202, V215, 0x0, V280, 0xa9059cbb, V302, 0x0, V305, V306, V305, 0x0, V280]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V202, V215, 0x0, V280, 0xa9059cbb, V302]

================================

Block 0x2f0
[0x2f0:0x2f3]
---
Predecessors: [0x2e3]
Successors: []
---
0x2f0 PUSH1 0x0
0x2f2 DUP1
0x2f3 REVERT
---
0x2f0: V320 = 0x0
0x2f3: REVERT 0x0 0x0
---
Entry stack: [V12, V202, V215, 0x0, V280, 0xa9059cbb, V302]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V202, V215, 0x0, V280, 0xa9059cbb, V302]

================================

Block 0x2f4
[0x2f4:0x310]
---
Predecessors: [0x2e3]
Successors: [0x13f, 0x311]
---
0x2f4 JUMPDEST
0x2f5 POP
0x2f6 POP
0x2f7 PUSH1 0x6
0x2f9 DUP1
0x2fa SLOAD
0x2fb DUP6
0x2fc ADD
0x2fd SWAP1
0x2fe SSTORE
0x2ff POP
0x300 PUSH1 0x7
0x302 DUP1
0x303 SLOAD
0x304 DUP5
0x305 SWAP1
0x306 SUB
0x307 SWAP1
0x308 DUP2
0x309 SWAP1
0x30a SSTORE
0x30b ISZERO
0x30c ISZERO
0x30d PUSH2 0x13f
0x310 JUMPI
---
0x2f4: JUMPDEST 
0x2f7: V321 = 0x6
0x2fa: V322 = S[0x6]
0x2fc: V323 = ADD V202 V322
0x2fe: S[0x6] = V323
0x300: V324 = 0x7
0x303: V325 = S[0x7]
0x306: V326 = SUB V325 V202
0x30a: S[0x7] = V326
0x30b: V327 = ISZERO V326
0x30c: V328 = ISZERO V327
0x30d: V329 = 0x13f
0x310: JUMPI 0x13f V328
---
Entry stack: [V12, V202, V215, 0x0, V280, 0xa9059cbb, V302]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, V202, V215, 0x0]

================================

Block 0x311
[0x311:0x31d]
---
Predecessors: [0x2f4]
Successors: [0x31e]
---
0x311 PUSH1 0x8
0x313 DUP1
0x314 SLOAD
0x315 PUSH1 0xff
0x317 NOT
0x318 AND
0x319 PUSH1 0x1
0x31b OR
0x31c SWAP1
0x31d SSTORE
---
0x311: V330 = 0x8
0x314: V331 = S[0x8]
0x315: V332 = 0xff
0x317: V333 = NOT 0xff
0x318: V334 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V331
0x319: V335 = 0x1
0x31b: V336 = OR 0x1 V334
0x31d: S[0x8] = V336
---
Entry stack: [V12, V202, V215, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V202, V215, 0x0]

================================

Block 0x31e
[0x31e:0x322]
---
Predecessors: [0x311]
Successors: [0x438]
---
0x31e JUMPDEST
0x31f PUSH2 0x438
0x322 JUMP
---
0x31e: JUMPDEST 
0x31f: V337 = 0x438
0x322: JUMP 0x438
---
Entry stack: [V12, V202, V215, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V202, V215, 0x0]

================================

Block 0x323
[0x323:0x334]
---
Predecessors: [0x209]
Successors: [0x335, 0x336]
---
0x323 JUMPDEST
0x324 PUSH1 0x5
0x326 SLOAD
0x327 PUSH1 0x4
0x329 SLOAD
0x32a PUSH1 0x7
0x32c SLOAD
0x32d MUL
0x32e DUP2
0x32f ISZERO
0x330 ISZERO
0x331 PUSH2 0x336
0x334 JUMPI
---
0x323: JUMPDEST 
0x324: V338 = 0x5
0x326: V339 = S[0x5]
0x327: V340 = 0x4
0x329: V341 = S[0x4]
0x32a: V342 = 0x7
0x32c: V343 = S[0x7]
0x32d: V344 = MUL V343 V341
0x32f: V345 = ISZERO V339
0x330: V346 = ISZERO V345
0x331: V347 = 0x336
0x334: JUMPI 0x336 V346
---
Entry stack: [V12, V202, V215, 0x0]
Stack pops: 0
Stack additions: [V339, V344]
Exit stack: [V12, V202, V215, 0x0, V339, V344]

================================

Block 0x335
[0x335:0x335]
---
Predecessors: [0x323]
Successors: []
---
0x335 INVALID
---
0x335: INVALID 
---
Entry stack: [V12, V202, V215, 0x0, V339, V344]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V202, V215, 0x0, V339, V344]

================================

Block 0x336
[0x336:0x36e]
---
Predecessors: [0x323]
Successors: [0x36f, 0x373]
---
0x336 JUMPDEST
0x337 PUSH1 0x8
0x339 SLOAD
0x33a SWAP2
0x33b SWAP1
0x33c DIV
0x33d SWAP2
0x33e POP
0x33f PUSH2 0x100
0x342 SWAP1
0x343 DIV
0x344 PUSH1 0x1
0x346 PUSH1 0xa0
0x348 PUSH1 0x2
0x34a EXP
0x34b SUB
0x34c AND
0x34d PUSH2 0x8fc
0x350 DUP3
0x351 ISZERO
0x352 MUL
0x353 DUP3
0x354 PUSH1 0x40
0x356 MLOAD
0x357 PUSH1 0x0
0x359 PUSH1 0x40
0x35b MLOAD
0x35c DUP1
0x35d DUP4
0x35e SUB
0x35f DUP2
0x360 DUP6
0x361 DUP9
0x362 DUP9
0x363 CALL
0x364 SWAP4
0x365 POP
0x366 POP
0x367 POP
0x368 POP
0x369 ISZERO
0x36a ISZERO
0x36b PUSH2 0x373
0x36e JUMPI
---
0x336: JUMPDEST 
0x337: V348 = 0x8
0x339: V349 = S[0x8]
0x33c: V350 = DIV V344 V339
0x33f: V351 = 0x100
0x343: V352 = DIV V349 0x100
0x344: V353 = 0x1
0x346: V354 = 0xa0
0x348: V355 = 0x2
0x34a: V356 = EXP 0x2 0xa0
0x34b: V357 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34c: V358 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0x34d: V359 = 0x8fc
0x351: V360 = ISZERO V350
0x352: V361 = MUL V360 0x8fc
0x354: V362 = 0x40
0x356: V363 = M[0x40]
0x357: V364 = 0x0
0x359: V365 = 0x40
0x35b: V366 = M[0x40]
0x35e: V367 = SUB V363 V366
0x363: V368 = CALL V361 V358 V350 V366 V367 V366 0x0
0x369: V369 = ISZERO V368
0x36a: V370 = ISZERO V369
0x36b: V371 = 0x373
0x36e: JUMPI 0x373 V370
---
Entry stack: [V12, V202, V215, 0x0, V339, V344]
Stack pops: 3
Stack additions: [V350]
Exit stack: [V12, V202, V215, V350]

================================

Block 0x36f
[0x36f:0x372]
---
Predecessors: [0x336]
Successors: []
---
0x36f PUSH1 0x0
0x371 DUP1
0x372 REVERT
---
0x36f: V372 = 0x0
0x372: REVERT 0x0 0x0
---
Entry stack: [V12, V202, V215, V350]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V202, V215, V350]

================================

Block 0x373
[0x373:0x3cb]
---
Predecessors: [0x336]
Successors: [0x3cc, 0x3d0]
---
0x373 JUMPDEST
0x374 PUSH1 0x0
0x376 SLOAD
0x377 PUSH1 0x7
0x379 SLOAD
0x37a PUSH1 0x1
0x37c PUSH1 0xa0
0x37e PUSH1 0x2
0x380 EXP
0x381 SUB
0x382 SWAP1
0x383 SWAP2
0x384 AND
0x385 SWAP1
0x386 PUSH4 0xa9059cbb
0x38b SWAP1
0x38c CALLER
0x38d SWAP1
0x38e PUSH1 0x40
0x390 MLOAD
0x391 PUSH1 0xe0
0x393 PUSH1 0x2
0x395 EXP
0x396 PUSH4 0xffffffff
0x39b DUP6
0x39c AND
0x39d MUL
0x39e DUP2
0x39f MSTORE
0x3a0 PUSH1 0x1
0x3a2 PUSH1 0xa0
0x3a4 PUSH1 0x2
0x3a6 EXP
0x3a7 SUB
0x3a8 SWAP1
0x3a9 SWAP3
0x3aa AND
0x3ab PUSH1 0x4
0x3ad DUP4
0x3ae ADD
0x3af MSTORE
0x3b0 PUSH1 0x24
0x3b2 DUP3
0x3b3 ADD
0x3b4 MSTORE
0x3b5 PUSH1 0x44
0x3b7 ADD
0x3b8 PUSH1 0x0
0x3ba PUSH1 0x40
0x3bc MLOAD
0x3bd DUP1
0x3be DUP4
0x3bf SUB
0x3c0 DUP2
0x3c1 PUSH1 0x0
0x3c3 DUP8
0x3c4 DUP1
0x3c5 EXTCODESIZE
0x3c6 ISZERO
0x3c7 ISZERO
0x3c8 PUSH2 0x3d0
0x3cb JUMPI
---
0x373: JUMPDEST 
0x374: V373 = 0x0
0x376: V374 = S[0x0]
0x377: V375 = 0x7
0x379: V376 = S[0x7]
0x37a: V377 = 0x1
0x37c: V378 = 0xa0
0x37e: V379 = 0x2
0x380: V380 = EXP 0x2 0xa0
0x381: V381 = SUB 0x10000000000000000000000000000000000000000 0x1
0x384: V382 = AND V374 0xffffffffffffffffffffffffffffffffffffffff
0x386: V383 = 0xa9059cbb
0x38c: V384 = CALLER
0x38e: V385 = 0x40
0x390: V386 = M[0x40]
0x391: V387 = 0xe0
0x393: V388 = 0x2
0x395: V389 = EXP 0x2 0xe0
0x396: V390 = 0xffffffff
0x39c: V391 = AND 0xa9059cbb 0xffffffff
0x39d: V392 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x39f: M[V386] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3a0: V393 = 0x1
0x3a2: V394 = 0xa0
0x3a4: V395 = 0x2
0x3a6: V396 = EXP 0x2 0xa0
0x3a7: V397 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3aa: V398 = AND V384 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V399 = 0x4
0x3ae: V400 = ADD V386 0x4
0x3af: M[V400] = V398
0x3b0: V401 = 0x24
0x3b3: V402 = ADD V386 0x24
0x3b4: M[V402] = V376
0x3b5: V403 = 0x44
0x3b7: V404 = ADD 0x44 V386
0x3b8: V405 = 0x0
0x3ba: V406 = 0x40
0x3bc: V407 = M[0x40]
0x3bf: V408 = SUB V404 V407
0x3c1: V409 = 0x0
0x3c5: V410 = EXTCODESIZE V382
0x3c6: V411 = ISZERO V410
0x3c7: V412 = ISZERO V411
0x3c8: V413 = 0x3d0
0x3cb: JUMPI 0x3d0 V412
---
Entry stack: [V12, V202, V215, V350]
Stack pops: 0
Stack additions: [V382, 0xa9059cbb, V404, 0x0, V407, V408, V407, 0x0, V382]
Exit stack: [V12, V202, V215, V350, V382, 0xa9059cbb, V404, 0x0, V407, V408, V407, 0x0, V382]

================================

Block 0x3cc
[0x3cc:0x3cf]
---
Predecessors: [0x373]
Successors: []
---
0x3cc PUSH1 0x0
0x3ce DUP1
0x3cf REVERT
---
0x3cc: V414 = 0x0
0x3cf: REVERT 0x0 0x0
---
Entry stack: [V12, V202, V215, V350, V382, 0xa9059cbb, V404, 0x0, V407, V408, V407, 0x0, V382]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V202, V215, V350, V382, 0xa9059cbb, V404, 0x0, V407, V408, V407, 0x0, V382]

================================

Block 0x3d0
[0x3d0:0x3dc]
---
Predecessors: [0x373]
Successors: [0x3dd, 0x3e1]
---
0x3d0 JUMPDEST
0x3d1 PUSH2 0x2c6
0x3d4 GAS
0x3d5 SUB
0x3d6 CALL
0x3d7 ISZERO
0x3d8 ISZERO
0x3d9 PUSH2 0x3e1
0x3dc JUMPI
---
0x3d0: JUMPDEST 
0x3d1: V415 = 0x2c6
0x3d4: V416 = GAS
0x3d5: V417 = SUB V416 0x2c6
0x3d6: V418 = CALL V417 V382 0x0 V407 V408 V407 0x0
0x3d7: V419 = ISZERO V418
0x3d8: V420 = ISZERO V419
0x3d9: V421 = 0x3e1
0x3dc: JUMPI 0x3e1 V420
---
Entry stack: [V12, V202, V215, V350, V382, 0xa9059cbb, V404, 0x0, V407, V408, V407, 0x0, V382]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V202, V215, V350, V382, 0xa9059cbb, V404]

================================

Block 0x3dd
[0x3dd:0x3e0]
---
Predecessors: [0x3d0]
Successors: []
---
0x3dd PUSH1 0x0
0x3df DUP1
0x3e0 REVERT
---
0x3dd: V422 = 0x0
0x3e0: REVERT 0x0 0x0
---
Entry stack: [V12, V202, V215, V350, V382, 0xa9059cbb, V404]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V202, V215, V350, V382, 0xa9059cbb, V404]

================================

Block 0x3e1
[0x3e1:0x414]
---
Predecessors: [0x3d0]
Successors: [0x415, 0x419]
---
0x3e1 JUMPDEST
0x3e2 POP
0x3e3 POP
0x3e4 POP
0x3e5 CALLER
0x3e6 PUSH1 0x1
0x3e8 PUSH1 0xa0
0x3ea PUSH1 0x2
0x3ec EXP
0x3ed SUB
0x3ee AND
0x3ef PUSH2 0x8fc
0x3f2 DUP3
0x3f3 CALLVALUE
0x3f4 SUB
0x3f5 SWAP1
0x3f6 DUP2
0x3f7 ISZERO
0x3f8 MUL
0x3f9 SWAP1
0x3fa PUSH1 0x40
0x3fc MLOAD
0x3fd PUSH1 0x0
0x3ff PUSH1 0x40
0x401 MLOAD
0x402 DUP1
0x403 DUP4
0x404 SUB
0x405 DUP2
0x406 DUP6
0x407 DUP9
0x408 DUP9
0x409 CALL
0x40a SWAP4
0x40b POP
0x40c POP
0x40d POP
0x40e POP
0x40f ISZERO
0x410 ISZERO
0x411 PUSH2 0x419
0x414 JUMPI
---
0x3e1: JUMPDEST 
0x3e5: V423 = CALLER
0x3e6: V424 = 0x1
0x3e8: V425 = 0xa0
0x3ea: V426 = 0x2
0x3ec: V427 = EXP 0x2 0xa0
0x3ed: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ee: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x3ef: V430 = 0x8fc
0x3f3: V431 = CALLVALUE
0x3f4: V432 = SUB V431 V350
0x3f7: V433 = ISZERO V432
0x3f8: V434 = MUL V433 0x8fc
0x3fa: V435 = 0x40
0x3fc: V436 = M[0x40]
0x3fd: V437 = 0x0
0x3ff: V438 = 0x40
0x401: V439 = M[0x40]
0x404: V440 = SUB V436 V439
0x409: V441 = CALL V434 V429 V432 V439 V440 V439 0x0
0x40f: V442 = ISZERO V441
0x410: V443 = ISZERO V442
0x411: V444 = 0x419
0x414: JUMPI 0x419 V443
---
Entry stack: [V12, V202, V215, V350, V382, 0xa9059cbb, V404]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, V202, V215, V350]

================================

Block 0x415
[0x415:0x418]
---
Predecessors: [0x3e1]
Successors: []
---
0x415 PUSH1 0x0
0x417 DUP1
0x418 REVERT
---
0x415: V445 = 0x0
0x418: REVERT 0x0 0x0
---
Entry stack: [V12, V202, V215, V350]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V202, V215, V350]

================================

Block 0x419
[0x419:0x437]
---
Predecessors: [0x3e1]
Successors: [0x438]
---
0x419 JUMPDEST
0x41a PUSH1 0x7
0x41c DUP1
0x41d SLOAD
0x41e PUSH1 0x6
0x420 DUP1
0x421 SLOAD
0x422 SWAP1
0x423 SWAP2
0x424 ADD
0x425 SWAP1
0x426 SSTORE
0x427 PUSH1 0x0
0x429 SWAP1
0x42a SSTORE
0x42b PUSH1 0x8
0x42d DUP1
0x42e SLOAD
0x42f PUSH1 0xff
0x431 NOT
0x432 AND
0x433 PUSH1 0x1
0x435 OR
0x436 SWAP1
0x437 SSTORE
---
0x419: JUMPDEST 
0x41a: V446 = 0x7
0x41d: V447 = S[0x7]
0x41e: V448 = 0x6
0x421: V449 = S[0x6]
0x424: V450 = ADD V447 V449
0x426: S[0x6] = V450
0x427: V451 = 0x0
0x42a: S[0x7] = 0x0
0x42b: V452 = 0x8
0x42e: V453 = S[0x8]
0x42f: V454 = 0xff
0x431: V455 = NOT 0xff
0x432: V456 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V453
0x433: V457 = 0x1
0x435: V458 = OR 0x1 V456
0x437: S[0x8] = V458
---
Entry stack: [V12, V202, V215, V350]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V202, V215, V350]

================================

Block 0x438
[0x438:0x438]
---
Predecessors: [0x13f, 0x183, 0x1d2, 0x31e, 0x419]
Successors: [0x439]
---
0x438 JUMPDEST
---
0x438: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x439
[0x439:0x439]
---
Predecessors: [0x438]
Successors: [0x43a]
---
0x439 JUMPDEST
---
0x439: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x43a
[0x43a:0x43a]
---
Predecessors: [0x439]
Successors: [0x43b]
---
0x43a JUMPDEST
---
0x43a: JUMPDEST 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x43b
[0x43b:0x4ab]
---
Predecessors: [0x43a]
Successors: [0x4ac]
---
0x43b JUMPDEST
0x43c PUSH32 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x45d PUSH1 0x7
0x45f SLOAD
0x460 PUSH1 0x40
0x462 MLOAD
0x463 SWAP1
0x464 DUP2
0x465 MSTORE
0x466 PUSH1 0x20
0x468 ADD
0x469 PUSH1 0x40
0x46b MLOAD
0x46c DUP1
0x46d SWAP2
0x46e SUB
0x46f SWAP1
0x470 LOG1
0x471 PUSH1 0x8
0x473 SLOAD
0x474 PUSH32 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x495 SWAP1
0x496 PUSH1 0xff
0x498 AND
0x499 PUSH1 0x40
0x49b MLOAD
0x49c SWAP1
0x49d ISZERO
0x49e ISZERO
0x49f DUP2
0x4a0 MSTORE
0x4a1 PUSH1 0x20
0x4a3 ADD
0x4a4 PUSH1 0x40
0x4a6 MLOAD
0x4a7 DUP1
0x4a8 SWAP2
0x4a9 SUB
0x4aa SWAP1
0x4ab LOG1
---
0x43b: JUMPDEST 
0x43c: V459 = 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x45d: V460 = 0x7
0x45f: V461 = S[0x7]
0x460: V462 = 0x40
0x462: V463 = M[0x40]
0x465: M[V463] = V461
0x466: V464 = 0x20
0x468: V465 = ADD 0x20 V463
0x469: V466 = 0x40
0x46b: V467 = M[0x40]
0x46e: V468 = SUB V465 V467
0x470: LOG V467 V468 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x471: V469 = 0x8
0x473: V470 = S[0x8]
0x474: V471 = 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x496: V472 = 0xff
0x498: V473 = AND 0xff V470
0x499: V474 = 0x40
0x49b: V475 = M[0x40]
0x49d: V476 = ISZERO V473
0x49e: V477 = ISZERO V476
0x4a0: M[V475] = V477
0x4a1: V478 = 0x20
0x4a3: V479 = ADD 0x20 V475
0x4a4: V480 = 0x40
0x4a6: V481 = M[0x40]
0x4a9: V482 = SUB V479 V481
0x4ab: LOG V481 V482 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S2, S1, S0]

================================

Block 0x4ac
[0x4ac:0x4b0]
---
Predecessors: [0x43b]
Successors: []
---
0x4ac JUMPDEST
0x4ad POP
0x4ae POP
0x4af POP
0x4b0 STOP
---
0x4ac: JUMPDEST 
0x4b0: STOP 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b1
[0x4b1:0x4b7]
---
Predecessors: [0xb]
Successors: [0x4b8, 0x4bc]
---
0x4b1 JUMPDEST
0x4b2 CALLVALUE
0x4b3 ISZERO
0x4b4 PUSH2 0x4bc
0x4b7 JUMPI
---
0x4b1: JUMPDEST 
0x4b2: V483 = CALLVALUE
0x4b3: V484 = ISZERO V483
0x4b4: V485 = 0x4bc
0x4b7: JUMPI 0x4bc V484
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b8
[0x4b8:0x4bb]
---
Predecessors: [0x4b1]
Successors: []
---
0x4b8 PUSH1 0x0
0x4ba DUP1
0x4bb REVERT
---
0x4b8: V486 = 0x0
0x4bb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4bc
[0x4bc:0x4c3]
---
Predecessors: [0x4b1]
Successors: [0x629]
---
0x4bc JUMPDEST
0x4bd PUSH2 0x4c4
0x4c0 PUSH2 0x629
0x4c3 JUMP
---
0x4bc: JUMPDEST 
0x4bd: V487 = 0x4c4
0x4c0: V488 = 0x629
0x4c3: JUMP 0x629
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4c4]
Exit stack: [V12, 0x4c4]

================================

Block 0x4c4
[0x4c4:0x4c5]
---
Predecessors: [0x744]
Successors: []
---
0x4c4 JUMPDEST
0x4c5 STOP
---
0x4c4: JUMPDEST 
0x4c5: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c6
[0x4c6:0x4cc]
---
Predecessors: [0x25]
Successors: [0x4cd, 0x4d1]
---
0x4c6 JUMPDEST
0x4c7 CALLVALUE
0x4c8 ISZERO
0x4c9 PUSH2 0x4d1
0x4cc JUMPI
---
0x4c6: JUMPDEST 
0x4c7: V489 = CALLVALUE
0x4c8: V490 = ISZERO V489
0x4c9: V491 = 0x4d1
0x4cc: JUMPI 0x4d1 V490
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4cd
[0x4cd:0x4d0]
---
Predecessors: [0x4c6]
Successors: []
---
0x4cd PUSH1 0x0
0x4cf DUP1
0x4d0 REVERT
---
0x4cd: V492 = 0x0
0x4d0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d1
[0x4d1:0x4d8]
---
Predecessors: [0x4c6]
Successors: [0x746]
---
0x4d1 JUMPDEST
0x4d2 PUSH2 0x4d9
0x4d5 PUSH2 0x746
0x4d8 JUMP
---
0x4d1: JUMPDEST 
0x4d2: V493 = 0x4d9
0x4d5: V494 = 0x746
0x4d8: JUMP 0x746
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4d9]
Exit stack: [V12, 0x4d9]

================================

Block 0x4d9
[0x4d9:0x4f4]
---
Predecessors: [0x746, 0x761]
Successors: []
---
0x4d9 JUMPDEST
0x4da PUSH1 0x40
0x4dc MLOAD
0x4dd PUSH1 0x1
0x4df PUSH1 0xa0
0x4e1 PUSH1 0x2
0x4e3 EXP
0x4e4 SUB
0x4e5 SWAP1
0x4e6 SWAP2
0x4e7 AND
0x4e8 DUP2
0x4e9 MSTORE
0x4ea PUSH1 0x20
0x4ec ADD
0x4ed PUSH1 0x40
0x4ef MLOAD
0x4f0 DUP1
0x4f1 SWAP2
0x4f2 SUB
0x4f3 SWAP1
0x4f4 RETURN
---
0x4d9: JUMPDEST 
0x4da: V495 = 0x40
0x4dc: V496 = M[0x40]
0x4dd: V497 = 0x1
0x4df: V498 = 0xa0
0x4e1: V499 = 0x2
0x4e3: V500 = EXP 0x2 0xa0
0x4e4: V501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e7: V502 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x4e9: M[V496] = V502
0x4ea: V503 = 0x20
0x4ec: V504 = ADD 0x20 V496
0x4ed: V505 = 0x40
0x4ef: V506 = M[0x40]
0x4f2: V507 = SUB V504 V506
0x4f4: RETURN V506 V507
---
Entry stack: [V12, 0x4d9, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x4d9]

================================

Block 0x4f5
[0x4f5:0x4fb]
---
Predecessors: [0x30]
Successors: [0x4fc, 0x500]
---
0x4f5 JUMPDEST
0x4f6 CALLVALUE
0x4f7 ISZERO
0x4f8 PUSH2 0x500
0x4fb JUMPI
---
0x4f5: JUMPDEST 
0x4f6: V508 = CALLVALUE
0x4f7: V509 = ISZERO V508
0x4f8: V510 = 0x500
0x4fb: JUMPI 0x500 V509
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4fc
[0x4fc:0x4ff]
---
Predecessors: [0x4f5]
Successors: []
---
0x4fc PUSH1 0x0
0x4fe DUP1
0x4ff REVERT
---
0x4fc: V511 = 0x0
0x4ff: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x500
[0x500:0x507]
---
Predecessors: [0x4f5]
Successors: [0x755]
---
0x500 JUMPDEST
0x501 PUSH2 0x508
0x504 PUSH2 0x755
0x507 JUMP
---
0x500: JUMPDEST 
0x501: V512 = 0x508
0x504: V513 = 0x755
0x507: JUMP 0x755
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x508]
Exit stack: [V12, 0x508]

================================

Block 0x508
[0x508:0x519]
---
Predecessors: [0x755, 0x75b, 0x775, 0x77b, 0x781, 0x787]
Successors: []
---
0x508 JUMPDEST
0x509 PUSH1 0x40
0x50b MLOAD
0x50c SWAP1
0x50d DUP2
0x50e MSTORE
0x50f PUSH1 0x20
0x511 ADD
0x512 PUSH1 0x40
0x514 MLOAD
0x515 DUP1
0x516 SWAP2
0x517 SUB
0x518 SWAP1
0x519 RETURN
---
0x508: JUMPDEST 
0x509: V514 = 0x40
0x50b: V515 = M[0x40]
0x50e: M[V515] = S0
0x50f: V516 = 0x20
0x511: V517 = ADD 0x20 V515
0x512: V518 = 0x40
0x514: V519 = M[0x40]
0x517: V520 = SUB V517 V519
0x519: RETURN V519 V520
---
Entry stack: [V12, 0x508, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x508]

================================

Block 0x51a
[0x51a:0x520]
---
Predecessors: [0x3b]
Successors: [0x521, 0x525]
---
0x51a JUMPDEST
0x51b CALLVALUE
0x51c ISZERO
0x51d PUSH2 0x525
0x520 JUMPI
---
0x51a: JUMPDEST 
0x51b: V521 = CALLVALUE
0x51c: V522 = ISZERO V521
0x51d: V523 = 0x525
0x520: JUMPI 0x525 V522
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x521
[0x521:0x524]
---
Predecessors: [0x51a]
Successors: []
---
0x521 PUSH1 0x0
0x523 DUP1
0x524 REVERT
---
0x521: V524 = 0x0
0x524: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x525
[0x525:0x52c]
---
Predecessors: [0x51a]
Successors: [0x75b]
---
0x525 JUMPDEST
0x526 PUSH2 0x508
0x529 PUSH2 0x75b
0x52c JUMP
---
0x525: JUMPDEST 
0x526: V525 = 0x508
0x529: V526 = 0x75b
0x52c: JUMP 0x75b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x508]
Exit stack: [V12, 0x508]

================================

Block 0x52d
[0x52d:0x53e]
---
Predecessors: []
Successors: []
---
0x52d JUMPDEST
0x52e PUSH1 0x40
0x530 MLOAD
0x531 SWAP1
0x532 DUP2
0x533 MSTORE
0x534 PUSH1 0x20
0x536 ADD
0x537 PUSH1 0x40
0x539 MLOAD
0x53a DUP1
0x53b SWAP2
0x53c SUB
0x53d SWAP1
0x53e RETURN
---
0x52d: JUMPDEST 
0x52e: V527 = 0x40
0x530: V528 = M[0x40]
0x533: M[V528] = S0
0x534: V529 = 0x20
0x536: V530 = ADD 0x20 V528
0x537: V531 = 0x40
0x539: V532 = M[0x40]
0x53c: V533 = SUB V530 V532
0x53e: RETURN V532 V533
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x53f
[0x53f:0x545]
---
Predecessors: [0x46]
Successors: [0x546, 0x54a]
---
0x53f JUMPDEST
0x540 CALLVALUE
0x541 ISZERO
0x542 PUSH2 0x54a
0x545 JUMPI
---
0x53f: JUMPDEST 
0x540: V534 = CALLVALUE
0x541: V535 = ISZERO V534
0x542: V536 = 0x54a
0x545: JUMPI 0x54a V535
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x546
[0x546:0x549]
---
Predecessors: [0x53f]
Successors: []
---
0x546 PUSH1 0x0
0x548 DUP1
0x549 REVERT
---
0x546: V537 = 0x0
0x549: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x54a
[0x54a:0x551]
---
Predecessors: [0x53f]
Successors: [0x761]
---
0x54a JUMPDEST
0x54b PUSH2 0x4d9
0x54e PUSH2 0x761
0x551 JUMP
---
0x54a: JUMPDEST 
0x54b: V538 = 0x4d9
0x54e: V539 = 0x761
0x551: JUMP 0x761
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4d9]
Exit stack: [V12, 0x4d9]

================================

Block 0x552
[0x552:0x56d]
---
Predecessors: []
Successors: []
---
0x552 JUMPDEST
0x553 PUSH1 0x40
0x555 MLOAD
0x556 PUSH1 0x1
0x558 PUSH1 0xa0
0x55a PUSH1 0x2
0x55c EXP
0x55d SUB
0x55e SWAP1
0x55f SWAP2
0x560 AND
0x561 DUP2
0x562 MSTORE
0x563 PUSH1 0x20
0x565 ADD
0x566 PUSH1 0x40
0x568 MLOAD
0x569 DUP1
0x56a SWAP2
0x56b SUB
0x56c SWAP1
0x56d RETURN
---
0x552: JUMPDEST 
0x553: V540 = 0x40
0x555: V541 = M[0x40]
0x556: V542 = 0x1
0x558: V543 = 0xa0
0x55a: V544 = 0x2
0x55c: V545 = EXP 0x2 0xa0
0x55d: V546 = SUB 0x10000000000000000000000000000000000000000 0x1
0x560: V547 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x562: M[V541] = V547
0x563: V548 = 0x20
0x565: V549 = ADD 0x20 V541
0x566: V550 = 0x40
0x568: V551 = M[0x40]
0x56b: V552 = SUB V549 V551
0x56d: RETURN V551 V552
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x56e
[0x56e:0x574]
---
Predecessors: [0x51]
Successors: [0x575, 0x579]
---
0x56e JUMPDEST
0x56f CALLVALUE
0x570 ISZERO
0x571 PUSH2 0x579
0x574 JUMPI
---
0x56e: JUMPDEST 
0x56f: V553 = CALLVALUE
0x570: V554 = ISZERO V553
0x571: V555 = 0x579
0x574: JUMPI 0x579 V554
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x575
[0x575:0x578]
---
Predecessors: [0x56e]
Successors: []
---
0x575 PUSH1 0x0
0x577 DUP1
0x578 REVERT
---
0x575: V556 = 0x0
0x578: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x579
[0x579:0x580]
---
Predecessors: [0x56e]
Successors: [0x775]
---
0x579 JUMPDEST
0x57a PUSH2 0x508
0x57d PUSH2 0x775
0x580 JUMP
---
0x579: JUMPDEST 
0x57a: V557 = 0x508
0x57d: V558 = 0x775
0x580: JUMP 0x775
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x508]
Exit stack: [V12, 0x508]

================================

Block 0x581
[0x581:0x592]
---
Predecessors: []
Successors: []
---
0x581 JUMPDEST
0x582 PUSH1 0x40
0x584 MLOAD
0x585 SWAP1
0x586 DUP2
0x587 MSTORE
0x588 PUSH1 0x20
0x58a ADD
0x58b PUSH1 0x40
0x58d MLOAD
0x58e DUP1
0x58f SWAP2
0x590 SUB
0x591 SWAP1
0x592 RETURN
---
0x581: JUMPDEST 
0x582: V559 = 0x40
0x584: V560 = M[0x40]
0x587: M[V560] = S0
0x588: V561 = 0x20
0x58a: V562 = ADD 0x20 V560
0x58b: V563 = 0x40
0x58d: V564 = M[0x40]
0x590: V565 = SUB V562 V564
0x592: RETURN V564 V565
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x593
[0x593:0x599]
---
Predecessors: [0x5c]
Successors: [0x59a, 0x59e]
---
0x593 JUMPDEST
0x594 CALLVALUE
0x595 ISZERO
0x596 PUSH2 0x59e
0x599 JUMPI
---
0x593: JUMPDEST 
0x594: V566 = CALLVALUE
0x595: V567 = ISZERO V566
0x596: V568 = 0x59e
0x599: JUMPI 0x59e V567
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x59a
[0x59a:0x59d]
---
Predecessors: [0x593]
Successors: []
---
0x59a PUSH1 0x0
0x59c DUP1
0x59d REVERT
---
0x59a: V569 = 0x0
0x59d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x59e
[0x59e:0x5a5]
---
Predecessors: [0x593]
Successors: [0x77b]
---
0x59e JUMPDEST
0x59f PUSH2 0x508
0x5a2 PUSH2 0x77b
0x5a5 JUMP
---
0x59e: JUMPDEST 
0x59f: V570 = 0x508
0x5a2: V571 = 0x77b
0x5a5: JUMP 0x77b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x508]
Exit stack: [V12, 0x508]

================================

Block 0x5a6
[0x5a6:0x5b7]
---
Predecessors: []
Successors: []
---
0x5a6 JUMPDEST
0x5a7 PUSH1 0x40
0x5a9 MLOAD
0x5aa SWAP1
0x5ab DUP2
0x5ac MSTORE
0x5ad PUSH1 0x20
0x5af ADD
0x5b0 PUSH1 0x40
0x5b2 MLOAD
0x5b3 DUP1
0x5b4 SWAP2
0x5b5 SUB
0x5b6 SWAP1
0x5b7 RETURN
---
0x5a6: JUMPDEST 
0x5a7: V572 = 0x40
0x5a9: V573 = M[0x40]
0x5ac: M[V573] = S0
0x5ad: V574 = 0x20
0x5af: V575 = ADD 0x20 V573
0x5b0: V576 = 0x40
0x5b2: V577 = M[0x40]
0x5b5: V578 = SUB V575 V577
0x5b7: RETURN V577 V578
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5b8
[0x5b8:0x5be]
---
Predecessors: [0x67]
Successors: [0x5bf, 0x5c3]
---
0x5b8 JUMPDEST
0x5b9 CALLVALUE
0x5ba ISZERO
0x5bb PUSH2 0x5c3
0x5be JUMPI
---
0x5b8: JUMPDEST 
0x5b9: V579 = CALLVALUE
0x5ba: V580 = ISZERO V579
0x5bb: V581 = 0x5c3
0x5be: JUMPI 0x5c3 V580
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5bf
[0x5bf:0x5c2]
---
Predecessors: [0x5b8]
Successors: []
---
0x5bf PUSH1 0x0
0x5c1 DUP1
0x5c2 REVERT
---
0x5bf: V582 = 0x0
0x5c2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5c3
[0x5c3:0x5ca]
---
Predecessors: [0x5b8]
Successors: [0x781]
---
0x5c3 JUMPDEST
0x5c4 PUSH2 0x508
0x5c7 PUSH2 0x781
0x5ca JUMP
---
0x5c3: JUMPDEST 
0x5c4: V583 = 0x508
0x5c7: V584 = 0x781
0x5ca: JUMP 0x781
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x508]
Exit stack: [V12, 0x508]

================================

Block 0x5cb
[0x5cb:0x5dc]
---
Predecessors: []
Successors: []
---
0x5cb JUMPDEST
0x5cc PUSH1 0x40
0x5ce MLOAD
0x5cf SWAP1
0x5d0 DUP2
0x5d1 MSTORE
0x5d2 PUSH1 0x20
0x5d4 ADD
0x5d5 PUSH1 0x40
0x5d7 MLOAD
0x5d8 DUP1
0x5d9 SWAP2
0x5da SUB
0x5db SWAP1
0x5dc RETURN
---
0x5cb: JUMPDEST 
0x5cc: V585 = 0x40
0x5ce: V586 = M[0x40]
0x5d1: M[V586] = S0
0x5d2: V587 = 0x20
0x5d4: V588 = ADD 0x20 V586
0x5d5: V589 = 0x40
0x5d7: V590 = M[0x40]
0x5da: V591 = SUB V588 V590
0x5dc: RETURN V590 V591
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5dd
[0x5dd:0x5e3]
---
Predecessors: [0x72]
Successors: [0x5e4, 0x5e8]
---
0x5dd JUMPDEST
0x5de CALLVALUE
0x5df ISZERO
0x5e0 PUSH2 0x5e8
0x5e3 JUMPI
---
0x5dd: JUMPDEST 
0x5de: V592 = CALLVALUE
0x5df: V593 = ISZERO V592
0x5e0: V594 = 0x5e8
0x5e3: JUMPI 0x5e8 V593
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5e4
[0x5e4:0x5e7]
---
Predecessors: [0x5dd]
Successors: []
---
0x5e4 PUSH1 0x0
0x5e6 DUP1
0x5e7 REVERT
---
0x5e4: V595 = 0x0
0x5e7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5e8
[0x5e8:0x5ef]
---
Predecessors: [0x5dd]
Successors: [0x787]
---
0x5e8 JUMPDEST
0x5e9 PUSH2 0x508
0x5ec PUSH2 0x787
0x5ef JUMP
---
0x5e8: JUMPDEST 
0x5e9: V596 = 0x508
0x5ec: V597 = 0x787
0x5ef: JUMP 0x787
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x508]
Exit stack: [V12, 0x508]

================================

Block 0x5f0
[0x5f0:0x601]
---
Predecessors: []
Successors: []
---
0x5f0 JUMPDEST
0x5f1 PUSH1 0x40
0x5f3 MLOAD
0x5f4 SWAP1
0x5f5 DUP2
0x5f6 MSTORE
0x5f7 PUSH1 0x20
0x5f9 ADD
0x5fa PUSH1 0x40
0x5fc MLOAD
0x5fd DUP1
0x5fe SWAP2
0x5ff SUB
0x600 SWAP1
0x601 RETURN
---
0x5f0: JUMPDEST 
0x5f1: V598 = 0x40
0x5f3: V599 = M[0x40]
0x5f6: M[V599] = S0
0x5f7: V600 = 0x20
0x5f9: V601 = ADD 0x20 V599
0x5fa: V602 = 0x40
0x5fc: V603 = M[0x40]
0x5ff: V604 = SUB V601 V603
0x601: RETURN V603 V604
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x602
[0x602:0x608]
---
Predecessors: [0x7d]
Successors: [0x609, 0x60d]
---
0x602 JUMPDEST
0x603 CALLVALUE
0x604 ISZERO
0x605 PUSH2 0x60d
0x608 JUMPI
---
0x602: JUMPDEST 
0x603: V605 = CALLVALUE
0x604: V606 = ISZERO V605
0x605: V607 = 0x60d
0x608: JUMPI 0x60d V606
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x609
[0x609:0x60c]
---
Predecessors: [0x602]
Successors: []
---
0x609 PUSH1 0x0
0x60b DUP1
0x60c REVERT
---
0x609: V608 = 0x0
0x60c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x60d
[0x60d:0x614]
---
Predecessors: [0x602]
Successors: [0x78d]
---
0x60d JUMPDEST
0x60e PUSH2 0x615
0x611 PUSH2 0x78d
0x614 JUMP
---
0x60d: JUMPDEST 
0x60e: V609 = 0x615
0x611: V610 = 0x78d
0x614: JUMP 0x78d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x615]
Exit stack: [V12, 0x615]

================================

Block 0x615
[0x615:0x628]
---
Predecessors: [0x78d]
Successors: []
---
0x615 JUMPDEST
0x616 PUSH1 0x40
0x618 MLOAD
0x619 SWAP1
0x61a ISZERO
0x61b ISZERO
0x61c DUP2
0x61d MSTORE
0x61e PUSH1 0x20
0x620 ADD
0x621 PUSH1 0x40
0x623 MLOAD
0x624 DUP1
0x625 SWAP2
0x626 SUB
0x627 SWAP1
0x628 RETURN
---
0x615: JUMPDEST 
0x616: V611 = 0x40
0x618: V612 = M[0x40]
0x61a: V613 = ISZERO V775
0x61b: V614 = ISZERO V613
0x61d: M[V612] = V614
0x61e: V615 = 0x20
0x620: V616 = ADD 0x20 V612
0x621: V617 = 0x40
0x623: V618 = M[0x40]
0x626: V619 = SUB V616 V618
0x628: RETURN V618 V619
---
Entry stack: [V12, 0x615, V775]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x615]

================================

Block 0x629
[0x629:0x635]
---
Predecessors: [0x4bc]
Successors: [0x636, 0x63a]
---
0x629 JUMPDEST
0x62a PUSH1 0x8
0x62c SLOAD
0x62d PUSH1 0xff
0x62f AND
0x630 ISZERO
0x631 ISZERO
0x632 PUSH2 0x63a
0x635 JUMPI
---
0x629: JUMPDEST 
0x62a: V620 = 0x8
0x62c: V621 = S[0x8]
0x62d: V622 = 0xff
0x62f: V623 = AND 0xff V621
0x630: V624 = ISZERO V623
0x631: V625 = ISZERO V624
0x632: V626 = 0x63a
0x635: JUMPI 0x63a V625
---
Entry stack: [V12, 0x4c4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4c4]

================================

Block 0x636
[0x636:0x639]
---
Predecessors: [0x629]
Successors: []
---
0x636 PUSH1 0x0
0x638 DUP1
0x639 REVERT
---
0x636: V627 = 0x0
0x639: REVERT 0x0 0x0
---
Entry stack: [V12, 0x4c4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4c4]

================================

Block 0x63a
[0x63a:0x655]
---
Predecessors: [0x629]
Successors: [0x656, 0x65a]
---
0x63a JUMPDEST
0x63b PUSH1 0x8
0x63d SLOAD
0x63e CALLER
0x63f PUSH1 0x1
0x641 PUSH1 0xa0
0x643 PUSH1 0x2
0x645 EXP
0x646 SUB
0x647 SWAP1
0x648 DUP2
0x649 AND
0x64a PUSH2 0x100
0x64d SWAP1
0x64e SWAP3
0x64f DIV
0x650 AND
0x651 EQ
0x652 PUSH2 0x65a
0x655 JUMPI
---
0x63a: JUMPDEST 
0x63b: V628 = 0x8
0x63d: V629 = S[0x8]
0x63e: V630 = CALLER
0x63f: V631 = 0x1
0x641: V632 = 0xa0
0x643: V633 = 0x2
0x645: V634 = EXP 0x2 0xa0
0x646: V635 = SUB 0x10000000000000000000000000000000000000000 0x1
0x649: V636 = AND 0xffffffffffffffffffffffffffffffffffffffff V630
0x64a: V637 = 0x100
0x64f: V638 = DIV V629 0x100
0x650: V639 = AND V638 0xffffffffffffffffffffffffffffffffffffffff
0x651: V640 = EQ V639 V636
0x652: V641 = 0x65a
0x655: JUMPI 0x65a V640
---
Entry stack: [V12, 0x4c4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4c4]

================================

Block 0x656
[0x656:0x659]
---
Predecessors: [0x63a]
Successors: []
---
0x656 PUSH1 0x0
0x658 DUP1
0x659 REVERT
---
0x656: V642 = 0x0
0x659: REVERT 0x0 0x0
---
Entry stack: [V12, 0x4c4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4c4]

================================

Block 0x65a
[0x65a:0x6c7]
---
Predecessors: [0x63a]
Successors: [0x6c8, 0x6cc]
---
0x65a JUMPDEST
0x65b PUSH1 0x0
0x65d DUP1
0x65e SLOAD
0x65f PUSH1 0x8
0x661 SLOAD
0x662 PUSH1 0x1
0x664 PUSH1 0xa0
0x666 PUSH1 0x2
0x668 EXP
0x669 SUB
0x66a SWAP2
0x66b DUP3
0x66c AND
0x66d SWAP3
0x66e PUSH4 0xa9059cbb
0x673 SWAP3
0x674 PUSH2 0x100
0x677 SWAP1
0x678 SWAP3
0x679 DIV
0x67a SWAP1
0x67b SWAP2
0x67c AND
0x67d SWAP1
0x67e DUP4
0x67f SWAP1
0x680 PUSH4 0x70a08231
0x685 SWAP1
0x686 ADDRESS
0x687 SWAP1
0x688 PUSH1 0x40
0x68a MLOAD
0x68b PUSH1 0x20
0x68d ADD
0x68e MSTORE
0x68f PUSH1 0x40
0x691 MLOAD
0x692 PUSH1 0xe0
0x694 PUSH1 0x2
0x696 EXP
0x697 PUSH4 0xffffffff
0x69c DUP5
0x69d AND
0x69e MUL
0x69f DUP2
0x6a0 MSTORE
0x6a1 PUSH1 0x1
0x6a3 PUSH1 0xa0
0x6a5 PUSH1 0x2
0x6a7 EXP
0x6a8 SUB
0x6a9 SWAP1
0x6aa SWAP2
0x6ab AND
0x6ac PUSH1 0x4
0x6ae DUP3
0x6af ADD
0x6b0 MSTORE
0x6b1 PUSH1 0x24
0x6b3 ADD
0x6b4 PUSH1 0x20
0x6b6 PUSH1 0x40
0x6b8 MLOAD
0x6b9 DUP1
0x6ba DUP4
0x6bb SUB
0x6bc DUP2
0x6bd PUSH1 0x0
0x6bf DUP8
0x6c0 DUP1
0x6c1 EXTCODESIZE
0x6c2 ISZERO
0x6c3 ISZERO
0x6c4 PUSH2 0x6cc
0x6c7 JUMPI
---
0x65a: JUMPDEST 
0x65b: V643 = 0x0
0x65e: V644 = S[0x0]
0x65f: V645 = 0x8
0x661: V646 = S[0x8]
0x662: V647 = 0x1
0x664: V648 = 0xa0
0x666: V649 = 0x2
0x668: V650 = EXP 0x2 0xa0
0x669: V651 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66c: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V644
0x66e: V653 = 0xa9059cbb
0x674: V654 = 0x100
0x679: V655 = DIV V646 0x100
0x67c: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0x680: V657 = 0x70a08231
0x686: V658 = ADDRESS
0x688: V659 = 0x40
0x68a: V660 = M[0x40]
0x68b: V661 = 0x20
0x68d: V662 = ADD 0x20 V660
0x68e: M[V662] = 0x0
0x68f: V663 = 0x40
0x691: V664 = M[0x40]
0x692: V665 = 0xe0
0x694: V666 = 0x2
0x696: V667 = EXP 0x2 0xe0
0x697: V668 = 0xffffffff
0x69d: V669 = AND 0x70a08231 0xffffffff
0x69e: V670 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x6a0: M[V664] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6a1: V671 = 0x1
0x6a3: V672 = 0xa0
0x6a5: V673 = 0x2
0x6a7: V674 = EXP 0x2 0xa0
0x6a8: V675 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ab: V676 = AND V658 0xffffffffffffffffffffffffffffffffffffffff
0x6ac: V677 = 0x4
0x6af: V678 = ADD V664 0x4
0x6b0: M[V678] = V676
0x6b1: V679 = 0x24
0x6b3: V680 = ADD 0x24 V664
0x6b4: V681 = 0x20
0x6b6: V682 = 0x40
0x6b8: V683 = M[0x40]
0x6bb: V684 = SUB V680 V683
0x6bd: V685 = 0x0
0x6c1: V686 = EXTCODESIZE V652
0x6c2: V687 = ISZERO V686
0x6c3: V688 = ISZERO V687
0x6c4: V689 = 0x6cc
0x6c7: JUMPI 0x6cc V688
---
Entry stack: [V12, 0x4c4]
Stack pops: 0
Stack additions: [V652, 0xa9059cbb, V656, V652, 0x70a08231, V680, 0x20, V683, V684, V683, 0x0, V652]
Exit stack: [V12, 0x4c4, V652, 0xa9059cbb, V656, V652, 0x70a08231, V680, 0x20, V683, V684, V683, 0x0, V652]

================================

Block 0x6c8
[0x6c8:0x6cb]
---
Predecessors: [0x65a]
Successors: []
---
0x6c8 PUSH1 0x0
0x6ca DUP1
0x6cb REVERT
---
0x6c8: V690 = 0x0
0x6cb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x4c4, V652, 0xa9059cbb, V656, V652, 0x70a08231, V680, 0x20, V683, V684, V683, 0x0, V652]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4c4, V652, 0xa9059cbb, V656, V652, 0x70a08231, V680, 0x20, V683, V684, V683, 0x0, V652]

================================

Block 0x6cc
[0x6cc:0x6d8]
---
Predecessors: [0x65a]
Successors: [0x6d9, 0x6dd]
---
0x6cc JUMPDEST
0x6cd PUSH2 0x2c6
0x6d0 GAS
0x6d1 SUB
0x6d2 CALL
0x6d3 ISZERO
0x6d4 ISZERO
0x6d5 PUSH2 0x6dd
0x6d8 JUMPI
---
0x6cc: JUMPDEST 
0x6cd: V691 = 0x2c6
0x6d0: V692 = GAS
0x6d1: V693 = SUB V692 0x2c6
0x6d2: V694 = CALL V693 V652 0x0 V683 V684 V683 0x20
0x6d3: V695 = ISZERO V694
0x6d4: V696 = ISZERO V695
0x6d5: V697 = 0x6dd
0x6d8: JUMPI 0x6dd V696
---
Entry stack: [V12, 0x4c4, V652, 0xa9059cbb, V656, V652, 0x70a08231, V680, 0x20, V683, V684, V683, 0x0, V652]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x4c4, V652, 0xa9059cbb, V656, V652, 0x70a08231, V680]

================================

Block 0x6d9
[0x6d9:0x6dc]
---
Predecessors: [0x6cc]
Successors: []
---
0x6d9 PUSH1 0x0
0x6db DUP1
0x6dc REVERT
---
0x6d9: V698 = 0x0
0x6dc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x4c4, V652, 0xa9059cbb, V656, V652, 0x70a08231, V680]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4c4, V652, 0xa9059cbb, V656, V652, 0x70a08231, V680]

================================

Block 0x6dd
[0x6dd:0x725]
---
Predecessors: [0x6cc]
Successors: [0x726, 0x72a]
---
0x6dd JUMPDEST
0x6de POP
0x6df POP
0x6e0 POP
0x6e1 PUSH1 0x40
0x6e3 MLOAD
0x6e4 DUP1
0x6e5 MLOAD
0x6e6 SWAP1
0x6e7 POP
0x6e8 PUSH1 0x40
0x6ea MLOAD
0x6eb PUSH1 0xe0
0x6ed PUSH1 0x2
0x6ef EXP
0x6f0 PUSH4 0xffffffff
0x6f5 DUP6
0x6f6 AND
0x6f7 MUL
0x6f8 DUP2
0x6f9 MSTORE
0x6fa PUSH1 0x1
0x6fc PUSH1 0xa0
0x6fe PUSH1 0x2
0x700 EXP
0x701 SUB
0x702 SWAP1
0x703 SWAP3
0x704 AND
0x705 PUSH1 0x4
0x707 DUP4
0x708 ADD
0x709 MSTORE
0x70a PUSH1 0x24
0x70c DUP3
0x70d ADD
0x70e MSTORE
0x70f PUSH1 0x44
0x711 ADD
0x712 PUSH1 0x0
0x714 PUSH1 0x40
0x716 MLOAD
0x717 DUP1
0x718 DUP4
0x719 SUB
0x71a DUP2
0x71b PUSH1 0x0
0x71d DUP8
0x71e DUP1
0x71f EXTCODESIZE
0x720 ISZERO
0x721 ISZERO
0x722 PUSH2 0x72a
0x725 JUMPI
---
0x6dd: JUMPDEST 
0x6e1: V699 = 0x40
0x6e3: V700 = M[0x40]
0x6e5: V701 = M[V700]
0x6e8: V702 = 0x40
0x6ea: V703 = M[0x40]
0x6eb: V704 = 0xe0
0x6ed: V705 = 0x2
0x6ef: V706 = EXP 0x2 0xe0
0x6f0: V707 = 0xffffffff
0x6f6: V708 = AND 0xa9059cbb 0xffffffff
0x6f7: V709 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x6f9: M[V703] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6fa: V710 = 0x1
0x6fc: V711 = 0xa0
0x6fe: V712 = 0x2
0x700: V713 = EXP 0x2 0xa0
0x701: V714 = SUB 0x10000000000000000000000000000000000000000 0x1
0x704: V715 = AND V656 0xffffffffffffffffffffffffffffffffffffffff
0x705: V716 = 0x4
0x708: V717 = ADD V703 0x4
0x709: M[V717] = V715
0x70a: V718 = 0x24
0x70d: V719 = ADD V703 0x24
0x70e: M[V719] = V701
0x70f: V720 = 0x44
0x711: V721 = ADD 0x44 V703
0x712: V722 = 0x0
0x714: V723 = 0x40
0x716: V724 = M[0x40]
0x719: V725 = SUB V721 V724
0x71b: V726 = 0x0
0x71f: V727 = EXTCODESIZE V652
0x720: V728 = ISZERO V727
0x721: V729 = ISZERO V728
0x722: V730 = 0x72a
0x725: JUMPI 0x72a V729
---
Entry stack: [V12, 0x4c4, V652, 0xa9059cbb, V656, V652, 0x70a08231, V680]
Stack pops: 6
Stack additions: [S5, S4, V721, 0x0, V724, V725, V724, 0x0, S5]
Exit stack: [V12, 0x4c4, V652, 0xa9059cbb, V721, 0x0, V724, V725, V724, 0x0, V652]

================================

Block 0x726
[0x726:0x729]
---
Predecessors: [0x6dd]
Successors: []
---
0x726 PUSH1 0x0
0x728 DUP1
0x729 REVERT
---
0x726: V731 = 0x0
0x729: REVERT 0x0 0x0
---
Entry stack: [V12, 0x4c4, V652, 0xa9059cbb, V721, 0x0, V724, V725, V724, 0x0, V652]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4c4, V652, 0xa9059cbb, V721, 0x0, V724, V725, V724, 0x0, V652]

================================

Block 0x72a
[0x72a:0x736]
---
Predecessors: [0x6dd]
Successors: [0x737, 0x73b]
---
0x72a JUMPDEST
0x72b PUSH2 0x2c6
0x72e GAS
0x72f SUB
0x730 CALL
0x731 ISZERO
0x732 ISZERO
0x733 PUSH2 0x73b
0x736 JUMPI
---
0x72a: JUMPDEST 
0x72b: V732 = 0x2c6
0x72e: V733 = GAS
0x72f: V734 = SUB V733 0x2c6
0x730: V735 = CALL V734 V652 0x0 V724 V725 V724 0x0
0x731: V736 = ISZERO V735
0x732: V737 = ISZERO V736
0x733: V738 = 0x73b
0x736: JUMPI 0x73b V737
---
Entry stack: [V12, 0x4c4, V652, 0xa9059cbb, V721, 0x0, V724, V725, V724, 0x0, V652]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x4c4, V652, 0xa9059cbb, V721]

================================

Block 0x737
[0x737:0x73a]
---
Predecessors: [0x72a]
Successors: []
---
0x737 PUSH1 0x0
0x739 DUP1
0x73a REVERT
---
0x737: V739 = 0x0
0x73a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x4c4, V652, 0xa9059cbb, V721]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x4c4, V652, 0xa9059cbb, V721]

================================

Block 0x73b
[0x73b:0x743]
---
Predecessors: [0x72a]
Successors: [0x744]
---
0x73b JUMPDEST
0x73c POP
0x73d POP
0x73e PUSH1 0x0
0x740 PUSH1 0x7
0x742 SSTORE
0x743 POP
---
0x73b: JUMPDEST 
0x73e: V740 = 0x0
0x740: V741 = 0x7
0x742: S[0x7] = 0x0
---
Entry stack: [V12, 0x4c4, V652, 0xa9059cbb, V721]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x4c4]

================================

Block 0x744
[0x744:0x745]
---
Predecessors: [0x73b]
Successors: [0x4c4]
---
0x744 JUMPDEST
0x745 JUMP
---
0x744: JUMPDEST 
0x745: JUMP 0x4c4
---
Entry stack: [V12, 0x4c4]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x746
[0x746:0x754]
---
Predecessors: [0x4d1]
Successors: [0x4d9]
---
0x746 JUMPDEST
0x747 PUSH1 0x0
0x749 SLOAD
0x74a PUSH1 0x1
0x74c PUSH1 0xa0
0x74e PUSH1 0x2
0x750 EXP
0x751 SUB
0x752 AND
0x753 DUP2
0x754 JUMP
---
0x746: JUMPDEST 
0x747: V742 = 0x0
0x749: V743 = S[0x0]
0x74a: V744 = 0x1
0x74c: V745 = 0xa0
0x74e: V746 = 0x2
0x750: V747 = EXP 0x2 0xa0
0x751: V748 = SUB 0x10000000000000000000000000000000000000000 0x1
0x752: V749 = AND 0xffffffffffffffffffffffffffffffffffffffff V743
0x754: JUMP 0x4d9
---
Entry stack: [V12, 0x4d9]
Stack pops: 1
Stack additions: [S0, V749]
Exit stack: [V12, 0x4d9, V749]

================================

Block 0x755
[0x755:0x75a]
---
Predecessors: [0x500]
Successors: [0x508]
---
0x755 JUMPDEST
0x756 PUSH1 0x6
0x758 SLOAD
0x759 DUP2
0x75a JUMP
---
0x755: JUMPDEST 
0x756: V750 = 0x6
0x758: V751 = S[0x6]
0x75a: JUMP 0x508
---
Entry stack: [V12, 0x508]
Stack pops: 1
Stack additions: [S0, V751]
Exit stack: [V12, 0x508, V751]

================================

Block 0x75b
[0x75b:0x760]
---
Predecessors: [0x525]
Successors: [0x508]
---
0x75b JUMPDEST
0x75c PUSH1 0x1
0x75e SLOAD
0x75f DUP2
0x760 JUMP
---
0x75b: JUMPDEST 
0x75c: V752 = 0x1
0x75e: V753 = S[0x1]
0x760: JUMP 0x508
---
Entry stack: [V12, 0x508]
Stack pops: 1
Stack additions: [S0, V753]
Exit stack: [V12, 0x508, V753]

================================

Block 0x761
[0x761:0x774]
---
Predecessors: [0x54a]
Successors: [0x4d9]
---
0x761 JUMPDEST
0x762 PUSH1 0x8
0x764 SLOAD
0x765 PUSH2 0x100
0x768 SWAP1
0x769 DIV
0x76a PUSH1 0x1
0x76c PUSH1 0xa0
0x76e PUSH1 0x2
0x770 EXP
0x771 SUB
0x772 AND
0x773 DUP2
0x774 JUMP
---
0x761: JUMPDEST 
0x762: V754 = 0x8
0x764: V755 = S[0x8]
0x765: V756 = 0x100
0x769: V757 = DIV V755 0x100
0x76a: V758 = 0x1
0x76c: V759 = 0xa0
0x76e: V760 = 0x2
0x770: V761 = EXP 0x2 0xa0
0x771: V762 = SUB 0x10000000000000000000000000000000000000000 0x1
0x772: V763 = AND 0xffffffffffffffffffffffffffffffffffffffff V757
0x774: JUMP 0x4d9
---
Entry stack: [V12, 0x4d9]
Stack pops: 1
Stack additions: [S0, V763]
Exit stack: [V12, 0x4d9, V763]

================================

Block 0x775
[0x775:0x77a]
---
Predecessors: [0x579]
Successors: [0x508]
---
0x775 JUMPDEST
0x776 PUSH1 0x7
0x778 SLOAD
0x779 DUP2
0x77a JUMP
---
0x775: JUMPDEST 
0x776: V764 = 0x7
0x778: V765 = S[0x7]
0x77a: JUMP 0x508
---
Entry stack: [V12, 0x508]
Stack pops: 1
Stack additions: [S0, V765]
Exit stack: [V12, 0x508, V765]

================================

Block 0x77b
[0x77b:0x780]
---
Predecessors: [0x59e]
Successors: [0x508]
---
0x77b JUMPDEST
0x77c PUSH1 0x4
0x77e SLOAD
0x77f DUP2
0x780 JUMP
---
0x77b: JUMPDEST 
0x77c: V766 = 0x4
0x77e: V767 = S[0x4]
0x780: JUMP 0x508
---
Entry stack: [V12, 0x508]
Stack pops: 1
Stack additions: [S0, V767]
Exit stack: [V12, 0x508, V767]

================================

Block 0x781
[0x781:0x786]
---
Predecessors: [0x5c3]
Successors: [0x508]
---
0x781 JUMPDEST
0x782 PUSH1 0x2
0x784 SLOAD
0x785 DUP2
0x786 JUMP
---
0x781: JUMPDEST 
0x782: V768 = 0x2
0x784: V769 = S[0x2]
0x786: JUMP 0x508
---
Entry stack: [V12, 0x508]
Stack pops: 1
Stack additions: [S0, V769]
Exit stack: [V12, 0x508, V769]

================================

Block 0x787
[0x787:0x78c]
---
Predecessors: [0x5e8]
Successors: [0x508]
---
0x787 JUMPDEST
0x788 PUSH1 0x3
0x78a SLOAD
0x78b DUP2
0x78c JUMP
---
0x787: JUMPDEST 
0x788: V770 = 0x3
0x78a: V771 = S[0x3]
0x78c: JUMP 0x508
---
Entry stack: [V12, 0x508]
Stack pops: 1
Stack additions: [S0, V771]
Exit stack: [V12, 0x508, V771]

================================

Block 0x78d
[0x78d:0x795]
---
Predecessors: [0x60d]
Successors: [0x615]
---
0x78d JUMPDEST
0x78e PUSH1 0x8
0x790 SLOAD
0x791 PUSH1 0xff
0x793 AND
0x794 DUP2
0x795 JUMP
---
0x78d: JUMPDEST 
0x78e: V772 = 0x8
0x790: V773 = S[0x8]
0x791: V774 = 0xff
0x793: V775 = AND 0xff V773
0x795: JUMP 0x615
---
Entry stack: [V12, 0x615]
Stack pops: 1
Stack additions: [S0, V775]
Exit stack: [V12, 0x615, V775]

================================

Block 0x796
[0x796:0x7c1]
---
Predecessors: []
Successors: []
---
0x796 STOP
0x797 LOG1
0x798 PUSH6 0x627a7a723058
0x79f SHA3
0x7a0 MISSING 0xc1
0x7a1 MISSING 0xe7
0x7a2 MISSING 0x2b
0x7a3 MISSING 0x27
0x7a4 SHR
0x7a5 MISSING 0x4f
0x7a6 MISSING 0xf8
0x7a7 MISSING 0xef
0x7a8 SWAP8
0x7a9 MISSING 0x23
0x7aa MISSING 0xb0
0x7ab MISSING 0xd2
0x7ac MSTORE8
0x7ad GT
0x7ae BLOCKHASH
0x7af STATICCALL
0x7b0 BYTE
0x7b1 PUSH12 0xb88b89cf3f47729e674dc8cb
0x7be ADDMOD
0x7bf MISSING 0x4e
0x7c0 STOP
0x7c1 MISSING 0x29
---
0x796: STOP 
0x797: LOG S0 S1 S2
0x798: V776 = 0x627a7a723058
0x79f: V777 = SHA3 0x627a7a723058 S3
0x7a0: MISSING 0xc1
0x7a1: MISSING 0xe7
0x7a2: MISSING 0x2b
0x7a3: MISSING 0x27
0x7a4: V778 = SHR S0 S1
0x7a5: MISSING 0x4f
0x7a6: MISSING 0xf8
0x7a7: MISSING 0xef
0x7a9: MISSING 0x23
0x7aa: MISSING 0xb0
0x7ab: MISSING 0xd2
0x7ac: M8[S0] = S1
0x7ad: V779 = GT S2 S3
0x7ae: V780 = BLOCKHASH V779
0x7af: V781 = STATICCALL V780 S4 S5 S6 S7 S8
0x7b0: V782 = BYTE V781 S9
0x7b1: V783 = 0xb88b89cf3f47729e674dc8cb
0x7be: V784 = ADDMOD 0xb88b89cf3f47729e674dc8cb V782 S10
0x7bf: MISSING 0x4e
0x7c0: STOP 
0x7c1: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V777, V778, S8, S1, S2, S3, S4, S5, S6, S7, S0, V784]
Exit stack: []

================================

Function 0:
Public function signature: 0xd6103a1
Entry block: 0x4b1
Exit block: 0x4c4
Body: 0x4b1, 0x4b8, 0x4bc, 0x4c4, 0x629, 0x636, 0x63a, 0x656, 0x65a, 0x6c8, 0x6cc, 0x6d9, 0x6dd, 0x726, 0x72a, 0x737, 0x73b, 0x744

Function 1:
Public function signature: 0x27ebcf0e
Entry block: 0x4c6
Exit block: 0x4d9
Body: 0x4c6, 0x4cd, 0x4d1, 0x4d9, 0x746

Function 2:
Public function signature: 0x519ee19e
Entry block: 0x4f5
Exit block: 0x508
Body: 0x4f5, 0x4fc, 0x500, 0x508, 0x755

Function 3:
Public function signature: 0x7fa8c158
Entry block: 0x51a
Exit block: 0x508
Body: 0x508, 0x51a, 0x521, 0x525, 0x75b

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x53f
Exit block: 0x4d9
Body: 0x4d9, 0x53f, 0x546, 0x54a, 0x761

Function 5:
Public function signature: 0x96c5406d
Entry block: 0x56e
Exit block: 0x508
Body: 0x508, 0x56e, 0x575, 0x579, 0x775

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x593
Exit block: 0x508
Body: 0x508, 0x593, 0x59a, 0x59e, 0x77b

Function 7:
Public function signature: 0xb44eccc9
Entry block: 0x5b8
Exit block: 0x508
Body: 0x508, 0x5b8, 0x5bf, 0x5c3, 0x781

Function 8:
Public function signature: 0xc8e569a8
Entry block: 0x5dd
Exit block: 0x508
Body: 0x508, 0x5dd, 0x5e4, 0x5e8, 0x787

Function 9:
Public function signature: 0xccb07cef
Entry block: 0x602
Exit block: 0x615
Body: 0x602, 0x609, 0x60d, 0x615, 0x78d

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x415
Body: 0x88, 0x89, 0xe2, 0xe6, 0xf3, 0xf7, 0x10e, 0x13b, 0x13f, 0x144, 0x152, 0x17f, 0x183, 0x195, 0x1a1, 0x1ce, 0x1d7, 0x1e6, 0x1e7, 0x1f4, 0x1f8, 0x208, 0x209, 0x218, 0x24b, 0x24f, 0x258, 0x288, 0x28c, 0x28d, 0x2df, 0x2e3, 0x2f0, 0x2f4, 0x311, 0x31e, 0x323, 0x335, 0x336, 0x36f, 0x373, 0x3cc, 0x3d0, 0x3dd, 0x3e1, 0x415, 0x419, 0x438, 0x439, 0x43a, 0x43b, 0x4ac

