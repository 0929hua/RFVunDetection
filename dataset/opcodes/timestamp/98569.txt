Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x10c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x10c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x10c
0xa: JUMPI 0x10c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x12f]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x6fdde03
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x12f
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x6fdde03
0x20: V14 = EQ V12 0x6fdde03
0x21: V15 = 0x12f
0x24: JUMPI 0x12f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x1bf]
---
0x25 DUP1
0x26 PUSH4 0x95ea7b3
0x2b EQ
0x2c PUSH2 0x1bf
0x2f JUMPI
---
0x26: V16 = 0x95ea7b3
0x2b: V17 = EQ 0x95ea7b3 V12
0x2c: V18 = 0x1bf
0x2f: JUMPI 0x1bf V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x1e0]
---
0x30 DUP1
0x31 PUSH4 0x178a9e2e
0x36 EQ
0x37 PUSH2 0x1e0
0x3a JUMPI
---
0x31: V19 = 0x178a9e2e
0x36: V20 = EQ 0x178a9e2e V12
0x37: V21 = 0x1e0
0x3a: JUMPI 0x1e0 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x20c]
---
0x3b DUP1
0x3c PUSH4 0x18160ddd
0x41 EQ
0x42 PUSH2 0x20c
0x45 JUMPI
---
0x3c: V22 = 0x18160ddd
0x41: V23 = EQ 0x18160ddd V12
0x42: V24 = 0x20c
0x45: JUMPI 0x20c V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x22e]
---
0x46 DUP1
0x47 PUSH4 0x23b872dd
0x4c EQ
0x4d PUSH2 0x22e
0x50 JUMPI
---
0x47: V25 = 0x23b872dd
0x4c: V26 = EQ 0x23b872dd V12
0x4d: V27 = 0x22e
0x50: JUMPI 0x22e V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x255]
---
0x51 DUP1
0x52 PUSH4 0x313ce567
0x57 EQ
0x58 PUSH2 0x255
0x5b JUMPI
---
0x52: V28 = 0x313ce567
0x57: V29 = EQ 0x313ce567 V12
0x58: V30 = 0x255
0x5b: JUMPI 0x255 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x277]
---
0x5c DUP1
0x5d PUSH4 0x3197cbb6
0x62 EQ
0x63 PUSH2 0x277
0x66 JUMPI
---
0x5d: V31 = 0x3197cbb6
0x62: V32 = EQ 0x3197cbb6 V12
0x63: V33 = 0x277
0x66: JUMPI 0x277 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x299]
---
0x67 DUP1
0x68 PUSH4 0x3392f927
0x6d EQ
0x6e PUSH2 0x299
0x71 JUMPI
---
0x68: V34 = 0x3392f927
0x6d: V35 = EQ 0x3392f927 V12
0x6e: V36 = 0x299
0x71: JUMPI 0x299 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x2c9]
---
0x72 DUP1
0x73 PUSH4 0x4172d080
0x78 EQ
0x79 PUSH2 0x2c9
0x7c JUMPI
---
0x73: V37 = 0x4172d080
0x78: V38 = EQ 0x4172d080 V12
0x79: V39 = 0x2c9
0x7c: JUMPI 0x2c9 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2eb]
---
0x7d DUP1
0x7e PUSH4 0x4bb278f3
0x83 EQ
0x84 PUSH2 0x2eb
0x87 JUMPI
---
0x7e: V40 = 0x4bb278f3
0x83: V41 = EQ 0x4bb278f3 V12
0x84: V42 = 0x2eb
0x87: JUMPI 0x2eb V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2fd]
---
0x88 DUP1
0x89 PUSH4 0x54fd4d50
0x8e EQ
0x8f PUSH2 0x2fd
0x92 JUMPI
---
0x89: V43 = 0x54fd4d50
0x8e: V44 = EQ 0x54fd4d50 V12
0x8f: V45 = 0x2fd
0x92: JUMPI 0x2fd V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x38d]
---
0x93 DUP1
0x94 PUSH4 0x6a12b86c
0x99 EQ
0x9a PUSH2 0x38d
0x9d JUMPI
---
0x94: V46 = 0x6a12b86c
0x99: V47 = EQ 0x6a12b86c V12
0x9a: V48 = 0x38d
0x9d: JUMPI 0x38d V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x39f]
---
0x9e DUP1
0x9f PUSH4 0x70a08231
0xa4 EQ
0xa5 PUSH2 0x39f
0xa8 JUMPI
---
0x9f: V49 = 0x70a08231
0xa4: V50 = EQ 0x70a08231 V12
0xa5: V51 = 0x39f
0xa8: JUMPI 0x39f V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x3cd]
---
0xa9 DUP1
0xaa PUSH4 0x78e97925
0xaf EQ
0xb0 PUSH2 0x3cd
0xb3 JUMPI
---
0xaa: V52 = 0x78e97925
0xaf: V53 = EQ 0x78e97925 V12
0xb0: V54 = 0x3cd
0xb3: JUMPI 0x3cd V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x3ef]
---
0xb4 DUP1
0xb5 PUSH4 0x8d4e4083
0xba EQ
0xbb PUSH2 0x3ef
0xbe JUMPI
---
0xb5: V55 = 0x8d4e4083
0xba: V56 = EQ 0x8d4e4083 V12
0xbb: V57 = 0x3ef
0xbe: JUMPI 0x3ef V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x413]
---
0xbf DUP1
0xc0 PUSH4 0x95d89b41
0xc5 EQ
0xc6 PUSH2 0x413
0xc9 JUMPI
---
0xc0: V58 = 0x95d89b41
0xc5: V59 = EQ 0x95d89b41 V12
0xc6: V60 = 0x413
0xc9: JUMPI 0x413 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x4a3]
---
0xca DUP1
0xcb PUSH4 0xa5e33048
0xd0 EQ
0xd1 PUSH2 0x4a3
0xd4 JUMPI
---
0xcb: V61 = 0xa5e33048
0xd0: V62 = EQ 0xa5e33048 V12
0xd1: V63 = 0x4a3
0xd4: JUMPI 0x4a3 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x4ad]
---
0xd5 DUP1
0xd6 PUSH4 0xa81c3bdf
0xdb EQ
0xdc PUSH2 0x4ad
0xdf JUMPI
---
0xd6: V64 = 0xa81c3bdf
0xdb: V65 = EQ 0xa81c3bdf V12
0xdc: V66 = 0x4ad
0xdf: JUMPI 0x4ad V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x4d9]
---
0xe0 DUP1
0xe1 PUSH4 0xa9059cbb
0xe6 EQ
0xe7 PUSH2 0x4d9
0xea JUMPI
---
0xe1: V67 = 0xa9059cbb
0xe6: V68 = EQ 0xa9059cbb V12
0xe7: V69 = 0x4d9
0xea: JUMPI 0x4d9 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x4fa]
---
0xeb DUP1
0xec PUSH4 0xcac12d2d
0xf1 EQ
0xf2 PUSH2 0x4fa
0xf5 JUMPI
---
0xec: V70 = 0xcac12d2d
0xf1: V71 = EQ 0xcac12d2d V12
0xf2: V72 = 0x4fa
0xf5: JUMPI 0x4fa V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x51c]
---
0xf6 DUP1
0xf7 PUSH4 0xdd62ed3e
0xfc EQ
0xfd PUSH2 0x51c
0x100 JUMPI
---
0xf7: V73 = 0xdd62ed3e
0xfc: V74 = EQ 0xdd62ed3e V12
0xfd: V75 = 0x51c
0x100: JUMPI 0x51c V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0x550]
---
0x101 DUP1
0x102 PUSH4 0xdef2489b
0x107 EQ
0x108 PUSH2 0x550
0x10b JUMPI
---
0x102: V76 = 0xdef2489b
0x107: V77 = EQ 0xdef2489b V12
0x108: V78 = 0x550
0x10b: JUMPI 0x550 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0x0, 0x101]
Successors: [0x110]
---
0x10c JUMPDEST
0x10d PUSH2 0x12d
---
0x10c: JUMPDEST 
0x10d: V79 = 0x12d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d]
Exit stack: [V12, 0x12d]

================================

Block 0x110
[0x110:0x11b]
---
Predecessors: [0x10c]
Successors: [0x11c, 0x121]
---
0x110 JUMPDEST
0x111 PUSH1 0x5
0x113 SLOAD
0x114 PUSH1 0xff
0x116 AND
0x117 ISZERO
0x118 PUSH2 0x121
0x11b JUMPI
---
0x110: JUMPDEST 
0x111: V80 = 0x5
0x113: V81 = S[0x5]
0x114: V82 = 0xff
0x116: V83 = AND 0xff V81
0x117: V84 = ISZERO V83
0x118: V85 = 0x121
0x11b: JUMPI 0x121 V84
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0x11c
[0x11c:0x120]
---
Predecessors: [0x110]
Successors: []
---
0x11c PUSH1 0x0
0x11e PUSH1 0x0
0x120 REVERT
---
0x11c: V86 = 0x0
0x11e: V87 = 0x0
0x120: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0x121
[0x121:0x128]
---
Predecessors: [0x110]
Successors: [0x56e]
---
0x121 JUMPDEST
0x122 PUSH2 0x129
0x125 PUSH2 0x56e
0x128 JUMP
---
0x121: JUMPDEST 
0x122: V88 = 0x129
0x125: V89 = 0x56e
0x128: JUMP 0x56e
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: [0x129]
Exit stack: [V12, 0x12d, 0x129]

================================

Block 0x129
[0x129:0x129]
---
Predecessors: [0x6a0, 0x778, 0x843]
Successors: [0x12a]
---
0x129 JUMPDEST
---
0x129: JUMPDEST 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0x12a
[0x12a:0x12a]
---
Predecessors: [0x129]
Successors: [0x12b]
---
0x12a JUMPDEST
---
0x12a: JUMPDEST 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0x12b
[0x12b:0x12c]
---
Predecessors: [0x12a]
Successors: [0x12d]
---
0x12b JUMPDEST
0x12c JUMP
---
0x12b: JUMPDEST 
0x12c: JUMP S0
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x12d
[0x12d:0x12e]
---
Predecessors: [0x12b, 0x6a0, 0x778, 0xa12, 0xc8c]
Successors: []
---
0x12d JUMPDEST
0x12e STOP
---
0x12d: JUMPDEST 
0x12e: STOP 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0x12f
[0x12f:0x135]
---
Predecessors: [0xb]
Successors: [0x136, 0x137]
---
0x12f JUMPDEST
0x130 CALLVALUE
0x131 ISZERO
0x132 PUSH2 0x137
0x135 JUMPI
---
0x12f: JUMPDEST 
0x130: V90 = CALLVALUE
0x131: V91 = ISZERO V90
0x132: V92 = 0x137
0x135: JUMPI 0x137 V91
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x136
[0x136:0x136]
---
Predecessors: [0x12f]
Successors: []
---
0x136 INVALID
---
0x136: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x137
[0x137:0x13e]
---
Predecessors: [0x12f]
Successors: [0x6a5]
---
0x137 JUMPDEST
0x138 PUSH2 0x13f
0x13b PUSH2 0x6a5
0x13e JUMP
---
0x137: JUMPDEST 
0x138: V93 = 0x13f
0x13b: V94 = 0x6a5
0x13e: JUMP 0x6a5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13f]
Exit stack: [V12, 0x13f]

================================

Block 0x13f
[0x13f:0x164]
---
Predecessors: [0x6a5, 0x910, 0xa43]
Successors: [0x165, 0x185]
---
0x13f JUMPDEST
0x140 PUSH1 0x40
0x142 DUP1
0x143 MLOAD
0x144 PUSH1 0x20
0x146 DUP1
0x147 DUP3
0x148 MSTORE
0x149 DUP4
0x14a MLOAD
0x14b DUP2
0x14c DUP4
0x14d ADD
0x14e MSTORE
0x14f DUP4
0x150 MLOAD
0x151 SWAP2
0x152 SWAP3
0x153 DUP4
0x154 SWAP3
0x155 SWAP1
0x156 DUP4
0x157 ADD
0x158 SWAP2
0x159 DUP6
0x15a ADD
0x15b SWAP1
0x15c DUP1
0x15d DUP4
0x15e DUP4
0x15f DUP3
0x160 ISZERO
0x161 PUSH2 0x185
0x164 JUMPI
---
0x13f: JUMPDEST 
0x140: V95 = 0x40
0x143: V96 = M[0x40]
0x144: V97 = 0x20
0x148: M[V96] = 0x20
0x14a: V98 = M[S0]
0x14d: V99 = ADD V96 0x20
0x14e: M[V99] = V98
0x150: V100 = M[S0]
0x157: V101 = ADD V96 0x40
0x15a: V102 = ADD S0 0x20
0x160: V103 = ISZERO V100
0x161: V104 = 0x185
0x164: JUMPI 0x185 V103
---
Entry stack: [V12, 0x13f, S0]
Stack pops: 1
Stack additions: [S0, V96, V96, V101, V102, V100, V100, V101, V102]
Exit stack: [V12, 0x13f, S0, V96, V96, V101, V102, V100, V100, V101, V102]

================================

Block 0x165
[0x165:0x172]
---
Predecessors: [0x13f, 0x173, 0x341, 0x457]
Successors: [0x173, 0x185]
---
0x165 JUMPDEST
0x166 DUP1
0x167 MLOAD
0x168 DUP3
0x169 MSTORE
0x16a PUSH1 0x20
0x16c DUP4
0x16d GT
0x16e ISZERO
0x16f PUSH2 0x185
0x172 JUMPI
---
0x165: JUMPDEST 
0x167: V105 = M[S0]
0x169: M[S1] = V105
0x16a: V106 = 0x20
0x16d: V107 = GT S2 0x20
0x16e: V108 = ISZERO V107
0x16f: V109 = 0x185
0x172: JUMPI 0x185 V108
---
Entry stack: [V12, 0x13f, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x13f, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x173
[0x173:0x184]
---
Predecessors: [0x165]
Successors: [0x165]
---
0x173 PUSH1 0x1f
0x175 NOT
0x176 SWAP1
0x177 SWAP3
0x178 ADD
0x179 SWAP2
0x17a PUSH1 0x20
0x17c SWAP2
0x17d DUP3
0x17e ADD
0x17f SWAP2
0x180 ADD
0x181 PUSH2 0x165
0x184 JUMP
---
0x173: V110 = 0x1f
0x175: V111 = NOT 0x1f
0x178: V112 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x17a: V113 = 0x20
0x17e: V114 = ADD 0x20 S1
0x180: V115 = ADD 0x20 S0
0x181: V116 = 0x165
0x184: JUMP 0x165
---
Entry stack: [V12, 0x13f, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V112, V114, V115]
Exit stack: [V12, 0x13f, S8, S7, S6, S5, S4, S3, V112, V114, V115]

================================

Block 0x185
[0x185:0x197]
---
Predecessors: [0x13f, 0x165, 0x30d, 0x333, 0x423, 0x449]
Successors: [0x198, 0x1b1]
---
0x185 JUMPDEST
0x186 POP
0x187 POP
0x188 POP
0x189 SWAP1
0x18a POP
0x18b SWAP1
0x18c DUP2
0x18d ADD
0x18e SWAP1
0x18f PUSH1 0x1f
0x191 AND
0x192 DUP1
0x193 ISZERO
0x194 PUSH2 0x1b1
0x197 JUMPI
---
0x185: JUMPDEST 
0x18d: V117 = ADD S3 S5
0x18f: V118 = 0x1f
0x191: V119 = AND 0x1f S3
0x193: V120 = ISZERO V119
0x194: V121 = 0x1b1
0x197: JUMPI 0x1b1 V120
---
Entry stack: [V12, 0x13f, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V117, V119]
Exit stack: [V12, 0x13f, S8, S7, S6, V117, V119]

================================

Block 0x198
[0x198:0x1b0]
---
Predecessors: [0x185]
Successors: [0x1b1]
---
0x198 DUP1
0x199 DUP3
0x19a SUB
0x19b DUP1
0x19c MLOAD
0x19d PUSH1 0x1
0x19f DUP4
0x1a0 PUSH1 0x20
0x1a2 SUB
0x1a3 PUSH2 0x100
0x1a6 EXP
0x1a7 SUB
0x1a8 NOT
0x1a9 AND
0x1aa DUP2
0x1ab MSTORE
0x1ac PUSH1 0x20
0x1ae ADD
0x1af SWAP2
0x1b0 POP
---
0x19a: V122 = SUB V117 V119
0x19c: V123 = M[V122]
0x19d: V124 = 0x1
0x1a0: V125 = 0x20
0x1a2: V126 = SUB 0x20 V119
0x1a3: V127 = 0x100
0x1a6: V128 = EXP 0x100 V126
0x1a7: V129 = SUB V128 0x1
0x1a8: V130 = NOT V129
0x1a9: V131 = AND V130 V123
0x1ab: M[V122] = V131
0x1ac: V132 = 0x20
0x1ae: V133 = ADD 0x20 V122
---
Entry stack: [V12, 0x13f, S4, S3, S2, V117, V119]
Stack pops: 2
Stack additions: [V133, S0]
Exit stack: [V12, 0x13f, S4, S3, S2, V133, V119]

================================

Block 0x1b1
[0x1b1:0x1be]
---
Predecessors: [0x185, 0x198, 0x353, 0x469]
Successors: []
---
0x1b1 JUMPDEST
0x1b2 POP
0x1b3 SWAP3
0x1b4 POP
0x1b5 POP
0x1b6 POP
0x1b7 PUSH1 0x40
0x1b9 MLOAD
0x1ba DUP1
0x1bb SWAP2
0x1bc SUB
0x1bd SWAP1
0x1be RETURN
---
0x1b1: JUMPDEST 
0x1b7: V134 = 0x40
0x1b9: V135 = M[0x40]
0x1bc: V136 = SUB S1 V135
0x1be: RETURN V135 V136
---
Entry stack: [V12, 0x13f, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x13f]

================================

Block 0x1bf
[0x1bf:0x1c5]
---
Predecessors: [0x25]
Successors: [0x1c6, 0x1c7]
---
0x1bf JUMPDEST
0x1c0 CALLVALUE
0x1c1 ISZERO
0x1c2 PUSH2 0x1c7
0x1c5 JUMPI
---
0x1bf: JUMPDEST 
0x1c0: V137 = CALLVALUE
0x1c1: V138 = ISZERO V137
0x1c2: V139 = 0x1c7
0x1c5: JUMPI 0x1c7 V138
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c6
[0x1c6:0x1c6]
---
Predecessors: [0x1bf]
Successors: []
---
0x1c6 INVALID
---
0x1c6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c7
[0x1c7:0x1dd]
---
Predecessors: [0x1bf]
Successors: [0x6dc]
---
0x1c7 JUMPDEST
0x1c8 PUSH2 0x12d
0x1cb PUSH1 0x1
0x1cd PUSH1 0xa0
0x1cf PUSH1 0x2
0x1d1 EXP
0x1d2 SUB
0x1d3 PUSH1 0x4
0x1d5 CALLDATALOAD
0x1d6 AND
0x1d7 PUSH1 0x24
0x1d9 CALLDATALOAD
0x1da PUSH2 0x6dc
0x1dd JUMP
---
0x1c7: JUMPDEST 
0x1c8: V140 = 0x12d
0x1cb: V141 = 0x1
0x1cd: V142 = 0xa0
0x1cf: V143 = 0x2
0x1d1: V144 = EXP 0x2 0xa0
0x1d2: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d3: V146 = 0x4
0x1d5: V147 = CALLDATALOAD 0x4
0x1d6: V148 = AND V147 0xffffffffffffffffffffffffffffffffffffffff
0x1d7: V149 = 0x24
0x1d9: V150 = CALLDATALOAD 0x24
0x1da: V151 = 0x6dc
0x1dd: JUMP 0x6dc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d, V148, V150]
Exit stack: [V12, 0x12d, V148, V150]

================================

Block 0x1de
[0x1de:0x1df]
---
Predecessors: []
Successors: []
---
0x1de JUMPDEST
0x1df STOP
---
0x1de: JUMPDEST 
0x1df: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e0
[0x1e0:0x1e6]
---
Predecessors: [0x30]
Successors: [0x1e7, 0x1e8]
---
0x1e0 JUMPDEST
0x1e1 CALLVALUE
0x1e2 ISZERO
0x1e3 PUSH2 0x1e8
0x1e6 JUMPI
---
0x1e0: JUMPDEST 
0x1e1: V152 = CALLVALUE
0x1e2: V153 = ISZERO V152
0x1e3: V154 = 0x1e8
0x1e6: JUMPI 0x1e8 V153
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e7
[0x1e7:0x1e7]
---
Predecessors: [0x1e0]
Successors: []
---
0x1e7 INVALID
---
0x1e7: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e8
[0x1e8:0x1ef]
---
Predecessors: [0x1e0]
Successors: [0x77c]
---
0x1e8 JUMPDEST
0x1e9 PUSH2 0x1f0
0x1ec PUSH2 0x77c
0x1ef JUMP
---
0x1e8: JUMPDEST 
0x1e9: V155 = 0x1f0
0x1ec: V156 = 0x77c
0x1ef: JUMP 0x77c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f0]
Exit stack: [V12, 0x1f0]

================================

Block 0x1f0
[0x1f0:0x20b]
---
Predecessors: [0x77c, 0xa7a]
Successors: []
---
0x1f0 JUMPDEST
0x1f1 PUSH1 0x40
0x1f3 DUP1
0x1f4 MLOAD
0x1f5 PUSH1 0x1
0x1f7 PUSH1 0xa0
0x1f9 PUSH1 0x2
0x1fb EXP
0x1fc SUB
0x1fd SWAP1
0x1fe SWAP3
0x1ff AND
0x200 DUP3
0x201 MSTORE
0x202 MLOAD
0x203 SWAP1
0x204 DUP2
0x205 SWAP1
0x206 SUB
0x207 PUSH1 0x20
0x209 ADD
0x20a SWAP1
0x20b RETURN
---
0x1f0: JUMPDEST 
0x1f1: V157 = 0x40
0x1f4: V158 = M[0x40]
0x1f5: V159 = 0x1
0x1f7: V160 = 0xa0
0x1f9: V161 = 0x2
0x1fb: V162 = EXP 0x2 0xa0
0x1fc: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ff: V164 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x201: M[V158] = V164
0x202: V165 = M[0x40]
0x206: V166 = SUB V158 V165
0x207: V167 = 0x20
0x209: V168 = ADD 0x20 V166
0x20b: RETURN V165 V168
---
Entry stack: [V12, 0x1f0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1f0]

================================

Block 0x20c
[0x20c:0x212]
---
Predecessors: [0x3b]
Successors: [0x213, 0x214]
---
0x20c JUMPDEST
0x20d CALLVALUE
0x20e ISZERO
0x20f PUSH2 0x214
0x212 JUMPI
---
0x20c: JUMPDEST 
0x20d: V169 = CALLVALUE
0x20e: V170 = ISZERO V169
0x20f: V171 = 0x214
0x212: JUMPI 0x214 V170
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x213
[0x213:0x213]
---
Predecessors: [0x20c]
Successors: []
---
0x213 INVALID
---
0x213: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x214
[0x214:0x21b]
---
Predecessors: [0x20c]
Successors: [0x78b]
---
0x214 JUMPDEST
0x215 PUSH2 0x21c
0x218 PUSH2 0x78b
0x21b JUMP
---
0x214: JUMPDEST 
0x215: V172 = 0x21c
0x218: V173 = 0x78b
0x21b: JUMP 0x78b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x21c]
Exit stack: [V12, 0x21c]

================================

Block 0x21c
[0x21c:0x22d]
---
Predecessors: [0x78b, 0x7b5, 0x7ba, 0x7e4, 0xa2f, 0xa34, 0xaab, 0xae1]
Successors: []
---
0x21c JUMPDEST
0x21d PUSH1 0x40
0x21f DUP1
0x220 MLOAD
0x221 SWAP2
0x222 DUP3
0x223 MSTORE
0x224 MLOAD
0x225 SWAP1
0x226 DUP2
0x227 SWAP1
0x228 SUB
0x229 PUSH1 0x20
0x22b ADD
0x22c SWAP1
0x22d RETURN
---
0x21c: JUMPDEST 
0x21d: V174 = 0x40
0x220: V175 = M[0x40]
0x223: M[V175] = S0
0x224: V176 = M[0x40]
0x228: V177 = SUB V175 V176
0x229: V178 = 0x20
0x22b: V179 = ADD 0x20 V177
0x22d: RETURN V176 V179
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x22e
[0x22e:0x234]
---
Predecessors: [0x46]
Successors: [0x235, 0x236]
---
0x22e JUMPDEST
0x22f CALLVALUE
0x230 ISZERO
0x231 PUSH2 0x236
0x234 JUMPI
---
0x22e: JUMPDEST 
0x22f: V180 = CALLVALUE
0x230: V181 = ISZERO V180
0x231: V182 = 0x236
0x234: JUMPI 0x236 V181
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x235
[0x235:0x235]
---
Predecessors: [0x22e]
Successors: []
---
0x235 INVALID
---
0x235: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x236
[0x236:0x252]
---
Predecessors: [0x22e]
Successors: [0x791]
---
0x236 JUMPDEST
0x237 PUSH2 0x12d
0x23a PUSH1 0x1
0x23c PUSH1 0xa0
0x23e PUSH1 0x2
0x240 EXP
0x241 SUB
0x242 PUSH1 0x4
0x244 CALLDATALOAD
0x245 DUP2
0x246 AND
0x247 SWAP1
0x248 PUSH1 0x24
0x24a CALLDATALOAD
0x24b AND
0x24c PUSH1 0x44
0x24e CALLDATALOAD
0x24f PUSH2 0x791
0x252 JUMP
---
0x236: JUMPDEST 
0x237: V183 = 0x12d
0x23a: V184 = 0x1
0x23c: V185 = 0xa0
0x23e: V186 = 0x2
0x240: V187 = EXP 0x2 0xa0
0x241: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x242: V189 = 0x4
0x244: V190 = CALLDATALOAD 0x4
0x246: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x248: V192 = 0x24
0x24a: V193 = CALLDATALOAD 0x24
0x24b: V194 = AND V193 0xffffffffffffffffffffffffffffffffffffffff
0x24c: V195 = 0x44
0x24e: V196 = CALLDATALOAD 0x44
0x24f: V197 = 0x791
0x252: JUMP 0x791
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d, V191, V194, V196]
Exit stack: [V12, 0x12d, V191, V194, V196]

================================

Block 0x253
[0x253:0x254]
---
Predecessors: []
Successors: []
---
0x253 JUMPDEST
0x254 STOP
---
0x253: JUMPDEST 
0x254: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x255
[0x255:0x25b]
---
Predecessors: [0x51]
Successors: [0x25c, 0x25d]
---
0x255 JUMPDEST
0x256 CALLVALUE
0x257 ISZERO
0x258 PUSH2 0x25d
0x25b JUMPI
---
0x255: JUMPDEST 
0x256: V198 = CALLVALUE
0x257: V199 = ISZERO V198
0x258: V200 = 0x25d
0x25b: JUMPI 0x25d V199
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25c
[0x25c:0x25c]
---
Predecessors: [0x255]
Successors: []
---
0x25c INVALID
---
0x25c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25d
[0x25d:0x264]
---
Predecessors: [0x255]
Successors: [0x7b5]
---
0x25d JUMPDEST
0x25e PUSH2 0x21c
0x261 PUSH2 0x7b5
0x264 JUMP
---
0x25d: JUMPDEST 
0x25e: V201 = 0x21c
0x261: V202 = 0x7b5
0x264: JUMP 0x7b5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x21c]
Exit stack: [V12, 0x21c]

================================

Block 0x265
[0x265:0x276]
---
Predecessors: []
Successors: []
---
0x265 JUMPDEST
0x266 PUSH1 0x40
0x268 DUP1
0x269 MLOAD
0x26a SWAP2
0x26b DUP3
0x26c MSTORE
0x26d MLOAD
0x26e SWAP1
0x26f DUP2
0x270 SWAP1
0x271 SUB
0x272 PUSH1 0x20
0x274 ADD
0x275 SWAP1
0x276 RETURN
---
0x265: JUMPDEST 
0x266: V203 = 0x40
0x269: V204 = M[0x40]
0x26c: M[V204] = S0
0x26d: V205 = M[0x40]
0x271: V206 = SUB V204 V205
0x272: V207 = 0x20
0x274: V208 = ADD 0x20 V206
0x276: RETURN V205 V208
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x277
[0x277:0x27d]
---
Predecessors: [0x5c]
Successors: [0x27e, 0x27f]
---
0x277 JUMPDEST
0x278 CALLVALUE
0x279 ISZERO
0x27a PUSH2 0x27f
0x27d JUMPI
---
0x277: JUMPDEST 
0x278: V209 = CALLVALUE
0x279: V210 = ISZERO V209
0x27a: V211 = 0x27f
0x27d: JUMPI 0x27f V210
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27e
[0x27e:0x27e]
---
Predecessors: [0x277]
Successors: []
---
0x27e INVALID
---
0x27e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27f
[0x27f:0x286]
---
Predecessors: [0x277]
Successors: [0x7ba]
---
0x27f JUMPDEST
0x280 PUSH2 0x21c
0x283 PUSH2 0x7ba
0x286 JUMP
---
0x27f: JUMPDEST 
0x280: V212 = 0x21c
0x283: V213 = 0x7ba
0x286: JUMP 0x7ba
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x21c]
Exit stack: [V12, 0x21c]

================================

Block 0x287
[0x287:0x298]
---
Predecessors: []
Successors: []
---
0x287 JUMPDEST
0x288 PUSH1 0x40
0x28a DUP1
0x28b MLOAD
0x28c SWAP2
0x28d DUP3
0x28e MSTORE
0x28f MLOAD
0x290 SWAP1
0x291 DUP2
0x292 SWAP1
0x293 SUB
0x294 PUSH1 0x20
0x296 ADD
0x297 SWAP1
0x298 RETURN
---
0x287: JUMPDEST 
0x288: V214 = 0x40
0x28b: V215 = M[0x40]
0x28e: M[V215] = S0
0x28f: V216 = M[0x40]
0x293: V217 = SUB V215 V216
0x294: V218 = 0x20
0x296: V219 = ADD 0x20 V217
0x298: RETURN V216 V219
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x299
[0x299:0x29f]
---
Predecessors: [0x67]
Successors: [0x2a0, 0x2a1]
---
0x299 JUMPDEST
0x29a CALLVALUE
0x29b ISZERO
0x29c PUSH2 0x2a1
0x29f JUMPI
---
0x299: JUMPDEST 
0x29a: V220 = CALLVALUE
0x29b: V221 = ISZERO V220
0x29c: V222 = 0x2a1
0x29f: JUMPI 0x2a1 V221
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a0
[0x2a0:0x2a0]
---
Predecessors: [0x299]
Successors: []
---
0x2a0 INVALID
---
0x2a0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a1
[0x2a1:0x2b4]
---
Predecessors: [0x299]
Successors: [0x7c2]
---
0x2a1 JUMPDEST
0x2a2 PUSH2 0x2b5
0x2a5 PUSH1 0x1
0x2a7 PUSH1 0xa0
0x2a9 PUSH1 0x2
0x2ab EXP
0x2ac SUB
0x2ad PUSH1 0x4
0x2af CALLDATALOAD
0x2b0 AND
0x2b1 PUSH2 0x7c2
0x2b4 JUMP
---
0x2a1: JUMPDEST 
0x2a2: V223 = 0x2b5
0x2a5: V224 = 0x1
0x2a7: V225 = 0xa0
0x2a9: V226 = 0x2
0x2ab: V227 = EXP 0x2 0xa0
0x2ac: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ad: V229 = 0x4
0x2af: V230 = CALLDATALOAD 0x4
0x2b0: V231 = AND V230 0xffffffffffffffffffffffffffffffffffffffff
0x2b1: V232 = 0x7c2
0x2b4: JUMP 0x7c2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2b5, V231]
Exit stack: [V12, 0x2b5, V231]

================================

Block 0x2b5
[0x2b5:0x2c8]
---
Predecessors: [0x7df, 0xa3a]
Successors: []
---
0x2b5 JUMPDEST
0x2b6 PUSH1 0x40
0x2b8 DUP1
0x2b9 MLOAD
0x2ba SWAP2
0x2bb ISZERO
0x2bc ISZERO
0x2bd DUP3
0x2be MSTORE
0x2bf MLOAD
0x2c0 SWAP1
0x2c1 DUP2
0x2c2 SWAP1
0x2c3 SUB
0x2c4 PUSH1 0x20
0x2c6 ADD
0x2c7 SWAP1
0x2c8 RETURN
---
0x2b5: JUMPDEST 
0x2b6: V233 = 0x40
0x2b9: V234 = M[0x40]
0x2bb: V235 = ISZERO S0
0x2bc: V236 = ISZERO V235
0x2be: M[V234] = V236
0x2bf: V237 = M[0x40]
0x2c3: V238 = SUB V234 V237
0x2c4: V239 = 0x20
0x2c6: V240 = ADD 0x20 V238
0x2c8: RETURN V237 V240
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x2c9
[0x2c9:0x2cf]
---
Predecessors: [0x72]
Successors: [0x2d0, 0x2d1]
---
0x2c9 JUMPDEST
0x2ca CALLVALUE
0x2cb ISZERO
0x2cc PUSH2 0x2d1
0x2cf JUMPI
---
0x2c9: JUMPDEST 
0x2ca: V241 = CALLVALUE
0x2cb: V242 = ISZERO V241
0x2cc: V243 = 0x2d1
0x2cf: JUMPI 0x2d1 V242
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d0
[0x2d0:0x2d0]
---
Predecessors: [0x2c9]
Successors: []
---
0x2d0 INVALID
---
0x2d0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d1
[0x2d1:0x2d8]
---
Predecessors: [0x2c9]
Successors: [0x7e4]
---
0x2d1 JUMPDEST
0x2d2 PUSH2 0x21c
0x2d5 PUSH2 0x7e4
0x2d8 JUMP
---
0x2d1: JUMPDEST 
0x2d2: V244 = 0x21c
0x2d5: V245 = 0x7e4
0x2d8: JUMP 0x7e4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x21c]
Exit stack: [V12, 0x21c]

================================

Block 0x2d9
[0x2d9:0x2ea]
---
Predecessors: []
Successors: []
---
0x2d9 JUMPDEST
0x2da PUSH1 0x40
0x2dc DUP1
0x2dd MLOAD
0x2de SWAP2
0x2df DUP3
0x2e0 MSTORE
0x2e1 MLOAD
0x2e2 SWAP1
0x2e3 DUP2
0x2e4 SWAP1
0x2e5 SUB
0x2e6 PUSH1 0x20
0x2e8 ADD
0x2e9 SWAP1
0x2ea RETURN
---
0x2d9: JUMPDEST 
0x2da: V246 = 0x40
0x2dd: V247 = M[0x40]
0x2e0: M[V247] = S0
0x2e1: V248 = M[0x40]
0x2e5: V249 = SUB V247 V248
0x2e6: V250 = 0x20
0x2e8: V251 = ADD 0x20 V249
0x2ea: RETURN V248 V251
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2eb
[0x2eb:0x2f1]
---
Predecessors: [0x7d]
Successors: [0x2f2, 0x2f3]
---
0x2eb JUMPDEST
0x2ec CALLVALUE
0x2ed ISZERO
0x2ee PUSH2 0x2f3
0x2f1 JUMPI
---
0x2eb: JUMPDEST 
0x2ec: V252 = CALLVALUE
0x2ed: V253 = ISZERO V252
0x2ee: V254 = 0x2f3
0x2f1: JUMPI 0x2f3 V253
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f2
[0x2f2:0x2f2]
---
Predecessors: [0x2eb]
Successors: []
---
0x2f2 INVALID
---
0x2f2: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f3
[0x2f3:0x2fa]
---
Predecessors: [0x2eb]
Successors: [0x7ea]
---
0x2f3 JUMPDEST
0x2f4 PUSH2 0x12d
0x2f7 PUSH2 0x7ea
0x2fa JUMP
---
0x2f3: JUMPDEST 
0x2f4: V255 = 0x12d
0x2f7: V256 = 0x7ea
0x2fa: JUMP 0x7ea
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d]
Exit stack: [V12, 0x12d]

================================

Block 0x2fb
[0x2fb:0x2fc]
---
Predecessors: []
Successors: []
---
0x2fb JUMPDEST
0x2fc STOP
---
0x2fb: JUMPDEST 
0x2fc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2fd
[0x2fd:0x303]
---
Predecessors: [0x88]
Successors: [0x304, 0x305]
---
0x2fd JUMPDEST
0x2fe CALLVALUE
0x2ff ISZERO
0x300 PUSH2 0x305
0x303 JUMPI
---
0x2fd: JUMPDEST 
0x2fe: V257 = CALLVALUE
0x2ff: V258 = ISZERO V257
0x300: V259 = 0x305
0x303: JUMPI 0x305 V258
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x304
[0x304:0x304]
---
Predecessors: [0x2fd]
Successors: []
---
0x304 INVALID
---
0x304: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x305
[0x305:0x30c]
---
Predecessors: [0x2fd]
Successors: [0x88a]
---
0x305 JUMPDEST
0x306 PUSH2 0x13f
0x309 PUSH2 0x88a
0x30c JUMP
---
0x305: JUMPDEST 
0x306: V260 = 0x13f
0x309: V261 = 0x88a
0x30c: JUMP 0x88a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13f]
Exit stack: [V12, 0x13f]

================================

Block 0x30d
[0x30d:0x332]
---
Predecessors: []
Successors: [0x185, 0x333]
---
0x30d JUMPDEST
0x30e PUSH1 0x40
0x310 DUP1
0x311 MLOAD
0x312 PUSH1 0x20
0x314 DUP1
0x315 DUP3
0x316 MSTORE
0x317 DUP4
0x318 MLOAD
0x319 DUP2
0x31a DUP4
0x31b ADD
0x31c MSTORE
0x31d DUP4
0x31e MLOAD
0x31f SWAP2
0x320 SWAP3
0x321 DUP4
0x322 SWAP3
0x323 SWAP1
0x324 DUP4
0x325 ADD
0x326 SWAP2
0x327 DUP6
0x328 ADD
0x329 SWAP1
0x32a DUP1
0x32b DUP4
0x32c DUP4
0x32d DUP3
0x32e ISZERO
0x32f PUSH2 0x185
0x332 JUMPI
---
0x30d: JUMPDEST 
0x30e: V262 = 0x40
0x311: V263 = M[0x40]
0x312: V264 = 0x20
0x316: M[V263] = 0x20
0x318: V265 = M[S0]
0x31b: V266 = ADD V263 0x20
0x31c: M[V266] = V265
0x31e: V267 = M[S0]
0x325: V268 = ADD V263 0x40
0x328: V269 = ADD S0 0x20
0x32e: V270 = ISZERO V267
0x32f: V271 = 0x185
0x332: JUMPI 0x185 V270
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V263, V263, V268, V269, V267, V267, V268, V269]
Exit stack: [S0, V263, V263, V268, V269, V267, V267, V268, V269]

================================

Block 0x333
[0x333:0x340]
---
Predecessors: [0x30d]
Successors: [0x185, 0x341]
---
0x333 JUMPDEST
0x334 DUP1
0x335 MLOAD
0x336 DUP3
0x337 MSTORE
0x338 PUSH1 0x20
0x33a DUP4
0x33b GT
0x33c ISZERO
0x33d PUSH2 0x185
0x340 JUMPI
---
0x333: JUMPDEST 
0x335: V272 = M[V269]
0x337: M[V268] = V272
0x338: V273 = 0x20
0x33b: V274 = GT V267 0x20
0x33c: V275 = ISZERO V274
0x33d: V276 = 0x185
0x340: JUMPI 0x185 V275
---
Entry stack: [S8, V263, V263, V268, V269, V267, V267, V268, V269]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V263, V263, V268, V269, V267, V267, V268, V269]

================================

Block 0x341
[0x341:0x352]
---
Predecessors: [0x333]
Successors: [0x165]
---
0x341 PUSH1 0x1f
0x343 NOT
0x344 SWAP1
0x345 SWAP3
0x346 ADD
0x347 SWAP2
0x348 PUSH1 0x20
0x34a SWAP2
0x34b DUP3
0x34c ADD
0x34d SWAP2
0x34e ADD
0x34f PUSH2 0x165
0x352 JUMP
---
0x341: V277 = 0x1f
0x343: V278 = NOT 0x1f
0x346: V279 = ADD V267 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x348: V280 = 0x20
0x34c: V281 = ADD 0x20 V268
0x34e: V282 = ADD 0x20 V269
0x34f: V283 = 0x165
0x352: JUMP 0x165
---
Entry stack: [S8, V263, V263, V268, V269, V267, V267, V268, V269]
Stack pops: 3
Stack additions: [V279, V281, V282]
Exit stack: [S8, V263, V263, V268, V269, V267, V279, V281, V282]

================================

Block 0x353
[0x353:0x365]
---
Predecessors: []
Successors: [0x1b1, 0x366]
---
0x353 JUMPDEST
0x354 POP
0x355 POP
0x356 POP
0x357 SWAP1
0x358 POP
0x359 SWAP1
0x35a DUP2
0x35b ADD
0x35c SWAP1
0x35d PUSH1 0x1f
0x35f AND
0x360 DUP1
0x361 ISZERO
0x362 PUSH2 0x1b1
0x365 JUMPI
---
0x353: JUMPDEST 
0x35b: V284 = ADD S3 S5
0x35d: V285 = 0x1f
0x35f: V286 = AND 0x1f S3
0x361: V287 = ISZERO V286
0x362: V288 = 0x1b1
0x365: JUMPI 0x1b1 V287
---
Entry stack: []
Stack pops: 6
Stack additions: [V284, V286]
Exit stack: [V284, V286]

================================

Block 0x366
[0x366:0x37e]
---
Predecessors: [0x353]
Successors: [0x37f]
---
0x366 DUP1
0x367 DUP3
0x368 SUB
0x369 DUP1
0x36a MLOAD
0x36b PUSH1 0x1
0x36d DUP4
0x36e PUSH1 0x20
0x370 SUB
0x371 PUSH2 0x100
0x374 EXP
0x375 SUB
0x376 NOT
0x377 AND
0x378 DUP2
0x379 MSTORE
0x37a PUSH1 0x20
0x37c ADD
0x37d SWAP2
0x37e POP
---
0x368: V289 = SUB V284 V286
0x36a: V290 = M[V289]
0x36b: V291 = 0x1
0x36e: V292 = 0x20
0x370: V293 = SUB 0x20 V286
0x371: V294 = 0x100
0x374: V295 = EXP 0x100 V293
0x375: V296 = SUB V295 0x1
0x376: V297 = NOT V296
0x377: V298 = AND V297 V290
0x379: M[V289] = V298
0x37a: V299 = 0x20
0x37c: V300 = ADD 0x20 V289
---
Entry stack: [V284, V286]
Stack pops: 2
Stack additions: [V300, S0]
Exit stack: [V300, V286]

================================

Block 0x37f
[0x37f:0x38c]
---
Predecessors: [0x366]
Successors: []
---
0x37f JUMPDEST
0x380 POP
0x381 SWAP3
0x382 POP
0x383 POP
0x384 POP
0x385 PUSH1 0x40
0x387 MLOAD
0x388 DUP1
0x389 SWAP2
0x38a SUB
0x38b SWAP1
0x38c RETURN
---
0x37f: JUMPDEST 
0x385: V301 = 0x40
0x387: V302 = M[0x40]
0x38a: V303 = SUB V300 V302
0x38c: RETURN V302 V303
---
Entry stack: [V300, V286]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x38d
[0x38d:0x393]
---
Predecessors: [0x93]
Successors: [0x394, 0x395]
---
0x38d JUMPDEST
0x38e CALLVALUE
0x38f ISZERO
0x390 PUSH2 0x395
0x393 JUMPI
---
0x38d: JUMPDEST 
0x38e: V304 = CALLVALUE
0x38f: V305 = ISZERO V304
0x390: V306 = 0x395
0x393: JUMPI 0x395 V305
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x394
[0x394:0x394]
---
Predecessors: [0x38d]
Successors: []
---
0x394 INVALID
---
0x394: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x395
[0x395:0x39c]
---
Predecessors: [0x38d]
Successors: [0x918]
---
0x395 JUMPDEST
0x396 PUSH2 0x12d
0x399 PUSH2 0x918
0x39c JUMP
---
0x395: JUMPDEST 
0x396: V307 = 0x12d
0x399: V308 = 0x918
0x39c: JUMP 0x918
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d]
Exit stack: [V12, 0x12d]

================================

Block 0x39d
[0x39d:0x39e]
---
Predecessors: []
Successors: []
---
0x39d JUMPDEST
0x39e STOP
---
0x39d: JUMPDEST 
0x39e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x39f
[0x39f:0x3a5]
---
Predecessors: [0x9e]
Successors: [0x3a6, 0x3a7]
---
0x39f JUMPDEST
0x3a0 CALLVALUE
0x3a1 ISZERO
0x3a2 PUSH2 0x3a7
0x3a5 JUMPI
---
0x39f: JUMPDEST 
0x3a0: V309 = CALLVALUE
0x3a1: V310 = ISZERO V309
0x3a2: V311 = 0x3a7
0x3a5: JUMPI 0x3a7 V310
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a6
[0x3a6:0x3a6]
---
Predecessors: [0x39f]
Successors: []
---
0x3a6 INVALID
---
0x3a6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a7
[0x3a7:0x3ba]
---
Predecessors: [0x39f]
Successors: [0xa15]
---
0x3a7 JUMPDEST
0x3a8 PUSH2 0x21c
0x3ab PUSH1 0x1
0x3ad PUSH1 0xa0
0x3af PUSH1 0x2
0x3b1 EXP
0x3b2 SUB
0x3b3 PUSH1 0x4
0x3b5 CALLDATALOAD
0x3b6 AND
0x3b7 PUSH2 0xa15
0x3ba JUMP
---
0x3a7: JUMPDEST 
0x3a8: V312 = 0x21c
0x3ab: V313 = 0x1
0x3ad: V314 = 0xa0
0x3af: V315 = 0x2
0x3b1: V316 = EXP 0x2 0xa0
0x3b2: V317 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b3: V318 = 0x4
0x3b5: V319 = CALLDATALOAD 0x4
0x3b6: V320 = AND V319 0xffffffffffffffffffffffffffffffffffffffff
0x3b7: V321 = 0xa15
0x3ba: JUMP 0xa15
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x21c, V320]
Exit stack: [V12, 0x21c, V320]

================================

Block 0x3bb
[0x3bb:0x3cc]
---
Predecessors: []
Successors: []
---
0x3bb JUMPDEST
0x3bc PUSH1 0x40
0x3be DUP1
0x3bf MLOAD
0x3c0 SWAP2
0x3c1 DUP3
0x3c2 MSTORE
0x3c3 MLOAD
0x3c4 SWAP1
0x3c5 DUP2
0x3c6 SWAP1
0x3c7 SUB
0x3c8 PUSH1 0x20
0x3ca ADD
0x3cb SWAP1
0x3cc RETURN
---
0x3bb: JUMPDEST 
0x3bc: V322 = 0x40
0x3bf: V323 = M[0x40]
0x3c2: M[V323] = S0
0x3c3: V324 = M[0x40]
0x3c7: V325 = SUB V323 V324
0x3c8: V326 = 0x20
0x3ca: V327 = ADD 0x20 V325
0x3cc: RETURN V324 V327
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3cd
[0x3cd:0x3d3]
---
Predecessors: [0xa9]
Successors: [0x3d4, 0x3d5]
---
0x3cd JUMPDEST
0x3ce CALLVALUE
0x3cf ISZERO
0x3d0 PUSH2 0x3d5
0x3d3 JUMPI
---
0x3cd: JUMPDEST 
0x3ce: V328 = CALLVALUE
0x3cf: V329 = ISZERO V328
0x3d0: V330 = 0x3d5
0x3d3: JUMPI 0x3d5 V329
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d4
[0x3d4:0x3d4]
---
Predecessors: [0x3cd]
Successors: []
---
0x3d4 INVALID
---
0x3d4: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d5
[0x3d5:0x3dc]
---
Predecessors: [0x3cd]
Successors: [0xa34]
---
0x3d5 JUMPDEST
0x3d6 PUSH2 0x21c
0x3d9 PUSH2 0xa34
0x3dc JUMP
---
0x3d5: JUMPDEST 
0x3d6: V331 = 0x21c
0x3d9: V332 = 0xa34
0x3dc: JUMP 0xa34
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x21c]
Exit stack: [V12, 0x21c]

================================

Block 0x3dd
[0x3dd:0x3ee]
---
Predecessors: []
Successors: []
---
0x3dd JUMPDEST
0x3de PUSH1 0x40
0x3e0 DUP1
0x3e1 MLOAD
0x3e2 SWAP2
0x3e3 DUP3
0x3e4 MSTORE
0x3e5 MLOAD
0x3e6 SWAP1
0x3e7 DUP2
0x3e8 SWAP1
0x3e9 SUB
0x3ea PUSH1 0x20
0x3ec ADD
0x3ed SWAP1
0x3ee RETURN
---
0x3dd: JUMPDEST 
0x3de: V333 = 0x40
0x3e1: V334 = M[0x40]
0x3e4: M[V334] = S0
0x3e5: V335 = M[0x40]
0x3e9: V336 = SUB V334 V335
0x3ea: V337 = 0x20
0x3ec: V338 = ADD 0x20 V336
0x3ee: RETURN V335 V338
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3ef
[0x3ef:0x3f5]
---
Predecessors: [0xb4]
Successors: [0x3f6, 0x3f7]
---
0x3ef JUMPDEST
0x3f0 CALLVALUE
0x3f1 ISZERO
0x3f2 PUSH2 0x3f7
0x3f5 JUMPI
---
0x3ef: JUMPDEST 
0x3f0: V339 = CALLVALUE
0x3f1: V340 = ISZERO V339
0x3f2: V341 = 0x3f7
0x3f5: JUMPI 0x3f7 V340
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f6
[0x3f6:0x3f6]
---
Predecessors: [0x3ef]
Successors: []
---
0x3f6 INVALID
---
0x3f6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f7
[0x3f7:0x3fe]
---
Predecessors: [0x3ef]
Successors: [0xa3a]
---
0x3f7 JUMPDEST
0x3f8 PUSH2 0x2b5
0x3fb PUSH2 0xa3a
0x3fe JUMP
---
0x3f7: JUMPDEST 
0x3f8: V342 = 0x2b5
0x3fb: V343 = 0xa3a
0x3fe: JUMP 0xa3a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2b5]
Exit stack: [V12, 0x2b5]

================================

Block 0x3ff
[0x3ff:0x412]
---
Predecessors: []
Successors: []
---
0x3ff JUMPDEST
0x400 PUSH1 0x40
0x402 DUP1
0x403 MLOAD
0x404 SWAP2
0x405 ISZERO
0x406 ISZERO
0x407 DUP3
0x408 MSTORE
0x409 MLOAD
0x40a SWAP1
0x40b DUP2
0x40c SWAP1
0x40d SUB
0x40e PUSH1 0x20
0x410 ADD
0x411 SWAP1
0x412 RETURN
---
0x3ff: JUMPDEST 
0x400: V344 = 0x40
0x403: V345 = M[0x40]
0x405: V346 = ISZERO S0
0x406: V347 = ISZERO V346
0x408: M[V345] = V347
0x409: V348 = M[0x40]
0x40d: V349 = SUB V345 V348
0x40e: V350 = 0x20
0x410: V351 = ADD 0x20 V349
0x412: RETURN V348 V351
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x413
[0x413:0x419]
---
Predecessors: [0xbf]
Successors: [0x41a, 0x41b]
---
0x413 JUMPDEST
0x414 CALLVALUE
0x415 ISZERO
0x416 PUSH2 0x41b
0x419 JUMPI
---
0x413: JUMPDEST 
0x414: V352 = CALLVALUE
0x415: V353 = ISZERO V352
0x416: V354 = 0x41b
0x419: JUMPI 0x41b V353
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x41a
[0x41a:0x41a]
---
Predecessors: [0x413]
Successors: []
---
0x41a INVALID
---
0x41a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x41b
[0x41b:0x422]
---
Predecessors: [0x413]
Successors: [0xa43]
---
0x41b JUMPDEST
0x41c PUSH2 0x13f
0x41f PUSH2 0xa43
0x422 JUMP
---
0x41b: JUMPDEST 
0x41c: V355 = 0x13f
0x41f: V356 = 0xa43
0x422: JUMP 0xa43
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13f]
Exit stack: [V12, 0x13f]

================================

Block 0x423
[0x423:0x448]
---
Predecessors: []
Successors: [0x185, 0x449]
---
0x423 JUMPDEST
0x424 PUSH1 0x40
0x426 DUP1
0x427 MLOAD
0x428 PUSH1 0x20
0x42a DUP1
0x42b DUP3
0x42c MSTORE
0x42d DUP4
0x42e MLOAD
0x42f DUP2
0x430 DUP4
0x431 ADD
0x432 MSTORE
0x433 DUP4
0x434 MLOAD
0x435 SWAP2
0x436 SWAP3
0x437 DUP4
0x438 SWAP3
0x439 SWAP1
0x43a DUP4
0x43b ADD
0x43c SWAP2
0x43d DUP6
0x43e ADD
0x43f SWAP1
0x440 DUP1
0x441 DUP4
0x442 DUP4
0x443 DUP3
0x444 ISZERO
0x445 PUSH2 0x185
0x448 JUMPI
---
0x423: JUMPDEST 
0x424: V357 = 0x40
0x427: V358 = M[0x40]
0x428: V359 = 0x20
0x42c: M[V358] = 0x20
0x42e: V360 = M[S0]
0x431: V361 = ADD V358 0x20
0x432: M[V361] = V360
0x434: V362 = M[S0]
0x43b: V363 = ADD V358 0x40
0x43e: V364 = ADD S0 0x20
0x444: V365 = ISZERO V362
0x445: V366 = 0x185
0x448: JUMPI 0x185 V365
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V358, V358, V363, V364, V362, V362, V363, V364]
Exit stack: [S0, V358, V358, V363, V364, V362, V362, V363, V364]

================================

Block 0x449
[0x449:0x456]
---
Predecessors: [0x423]
Successors: [0x185, 0x457]
---
0x449 JUMPDEST
0x44a DUP1
0x44b MLOAD
0x44c DUP3
0x44d MSTORE
0x44e PUSH1 0x20
0x450 DUP4
0x451 GT
0x452 ISZERO
0x453 PUSH2 0x185
0x456 JUMPI
---
0x449: JUMPDEST 
0x44b: V367 = M[V364]
0x44d: M[V363] = V367
0x44e: V368 = 0x20
0x451: V369 = GT V362 0x20
0x452: V370 = ISZERO V369
0x453: V371 = 0x185
0x456: JUMPI 0x185 V370
---
Entry stack: [S8, V358, V358, V363, V364, V362, V362, V363, V364]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V358, V358, V363, V364, V362, V362, V363, V364]

================================

Block 0x457
[0x457:0x468]
---
Predecessors: [0x449]
Successors: [0x165]
---
0x457 PUSH1 0x1f
0x459 NOT
0x45a SWAP1
0x45b SWAP3
0x45c ADD
0x45d SWAP2
0x45e PUSH1 0x20
0x460 SWAP2
0x461 DUP3
0x462 ADD
0x463 SWAP2
0x464 ADD
0x465 PUSH2 0x165
0x468 JUMP
---
0x457: V372 = 0x1f
0x459: V373 = NOT 0x1f
0x45c: V374 = ADD V362 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x45e: V375 = 0x20
0x462: V376 = ADD 0x20 V363
0x464: V377 = ADD 0x20 V364
0x465: V378 = 0x165
0x468: JUMP 0x165
---
Entry stack: [S8, V358, V358, V363, V364, V362, V362, V363, V364]
Stack pops: 3
Stack additions: [V374, V376, V377]
Exit stack: [S8, V358, V358, V363, V364, V362, V374, V376, V377]

================================

Block 0x469
[0x469:0x47b]
---
Predecessors: []
Successors: [0x1b1, 0x47c]
---
0x469 JUMPDEST
0x46a POP
0x46b POP
0x46c POP
0x46d SWAP1
0x46e POP
0x46f SWAP1
0x470 DUP2
0x471 ADD
0x472 SWAP1
0x473 PUSH1 0x1f
0x475 AND
0x476 DUP1
0x477 ISZERO
0x478 PUSH2 0x1b1
0x47b JUMPI
---
0x469: JUMPDEST 
0x471: V379 = ADD S3 S5
0x473: V380 = 0x1f
0x475: V381 = AND 0x1f S3
0x477: V382 = ISZERO V381
0x478: V383 = 0x1b1
0x47b: JUMPI 0x1b1 V382
---
Entry stack: []
Stack pops: 6
Stack additions: [V379, V381]
Exit stack: [V379, V381]

================================

Block 0x47c
[0x47c:0x494]
---
Predecessors: [0x469]
Successors: [0x495]
---
0x47c DUP1
0x47d DUP3
0x47e SUB
0x47f DUP1
0x480 MLOAD
0x481 PUSH1 0x1
0x483 DUP4
0x484 PUSH1 0x20
0x486 SUB
0x487 PUSH2 0x100
0x48a EXP
0x48b SUB
0x48c NOT
0x48d AND
0x48e DUP2
0x48f MSTORE
0x490 PUSH1 0x20
0x492 ADD
0x493 SWAP2
0x494 POP
---
0x47e: V384 = SUB V379 V381
0x480: V385 = M[V384]
0x481: V386 = 0x1
0x484: V387 = 0x20
0x486: V388 = SUB 0x20 V381
0x487: V389 = 0x100
0x48a: V390 = EXP 0x100 V388
0x48b: V391 = SUB V390 0x1
0x48c: V392 = NOT V391
0x48d: V393 = AND V392 V385
0x48f: M[V384] = V393
0x490: V394 = 0x20
0x492: V395 = ADD 0x20 V384
---
Entry stack: [V379, V381]
Stack pops: 2
Stack additions: [V395, S0]
Exit stack: [V395, V381]

================================

Block 0x495
[0x495:0x4a2]
---
Predecessors: [0x47c]
Successors: []
---
0x495 JUMPDEST
0x496 POP
0x497 SWAP3
0x498 POP
0x499 POP
0x49a POP
0x49b PUSH1 0x40
0x49d MLOAD
0x49e DUP1
0x49f SWAP2
0x4a0 SUB
0x4a1 SWAP1
0x4a2 RETURN
---
0x495: JUMPDEST 
0x49b: V396 = 0x40
0x49d: V397 = M[0x40]
0x4a0: V398 = SUB V395 V397
0x4a2: RETURN V397 V398
---
Entry stack: [V395, V381]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x4a3
[0x4a3:0x4aa]
---
Predecessors: [0xca]
Successors: [0x56e]
---
0x4a3 JUMPDEST
0x4a4 PUSH2 0x12d
0x4a7 PUSH2 0x56e
0x4aa JUMP
---
0x4a3: JUMPDEST 
0x4a4: V399 = 0x12d
0x4a7: V400 = 0x56e
0x4aa: JUMP 0x56e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d]
Exit stack: [V12, 0x12d]

================================

Block 0x4ab
[0x4ab:0x4ac]
---
Predecessors: []
Successors: []
---
0x4ab JUMPDEST
0x4ac STOP
---
0x4ab: JUMPDEST 
0x4ac: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4ad
[0x4ad:0x4b3]
---
Predecessors: [0xd5]
Successors: [0x4b4, 0x4b5]
---
0x4ad JUMPDEST
0x4ae CALLVALUE
0x4af ISZERO
0x4b0 PUSH2 0x4b5
0x4b3 JUMPI
---
0x4ad: JUMPDEST 
0x4ae: V401 = CALLVALUE
0x4af: V402 = ISZERO V401
0x4b0: V403 = 0x4b5
0x4b3: JUMPI 0x4b5 V402
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b4
[0x4b4:0x4b4]
---
Predecessors: [0x4ad]
Successors: []
---
0x4b4 INVALID
---
0x4b4: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b5
[0x4b5:0x4bc]
---
Predecessors: [0x4ad]
Successors: [0xa7a]
---
0x4b5 JUMPDEST
0x4b6 PUSH2 0x1f0
0x4b9 PUSH2 0xa7a
0x4bc JUMP
---
0x4b5: JUMPDEST 
0x4b6: V404 = 0x1f0
0x4b9: V405 = 0xa7a
0x4bc: JUMP 0xa7a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f0]
Exit stack: [V12, 0x1f0]

================================

Block 0x4bd
[0x4bd:0x4d8]
---
Predecessors: []
Successors: []
---
0x4bd JUMPDEST
0x4be PUSH1 0x40
0x4c0 DUP1
0x4c1 MLOAD
0x4c2 PUSH1 0x1
0x4c4 PUSH1 0xa0
0x4c6 PUSH1 0x2
0x4c8 EXP
0x4c9 SUB
0x4ca SWAP1
0x4cb SWAP3
0x4cc AND
0x4cd DUP3
0x4ce MSTORE
0x4cf MLOAD
0x4d0 SWAP1
0x4d1 DUP2
0x4d2 SWAP1
0x4d3 SUB
0x4d4 PUSH1 0x20
0x4d6 ADD
0x4d7 SWAP1
0x4d8 RETURN
---
0x4bd: JUMPDEST 
0x4be: V406 = 0x40
0x4c1: V407 = M[0x40]
0x4c2: V408 = 0x1
0x4c4: V409 = 0xa0
0x4c6: V410 = 0x2
0x4c8: V411 = EXP 0x2 0xa0
0x4c9: V412 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cc: V413 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x4ce: M[V407] = V413
0x4cf: V414 = M[0x40]
0x4d3: V415 = SUB V407 V414
0x4d4: V416 = 0x20
0x4d6: V417 = ADD 0x20 V415
0x4d8: RETURN V414 V417
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4d9
[0x4d9:0x4df]
---
Predecessors: [0xe0]
Successors: [0x4e0, 0x4e1]
---
0x4d9 JUMPDEST
0x4da CALLVALUE
0x4db ISZERO
0x4dc PUSH2 0x4e1
0x4df JUMPI
---
0x4d9: JUMPDEST 
0x4da: V418 = CALLVALUE
0x4db: V419 = ISZERO V418
0x4dc: V420 = 0x4e1
0x4df: JUMPI 0x4e1 V419
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e0
[0x4e0:0x4e0]
---
Predecessors: [0x4d9]
Successors: []
---
0x4e0 INVALID
---
0x4e0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e1
[0x4e1:0x4f7]
---
Predecessors: [0x4d9]
Successors: [0xa89]
---
0x4e1 JUMPDEST
0x4e2 PUSH2 0x12d
0x4e5 PUSH1 0x1
0x4e7 PUSH1 0xa0
0x4e9 PUSH1 0x2
0x4eb EXP
0x4ec SUB
0x4ed PUSH1 0x4
0x4ef CALLDATALOAD
0x4f0 AND
0x4f1 PUSH1 0x24
0x4f3 CALLDATALOAD
0x4f4 PUSH2 0xa89
0x4f7 JUMP
---
0x4e1: JUMPDEST 
0x4e2: V421 = 0x12d
0x4e5: V422 = 0x1
0x4e7: V423 = 0xa0
0x4e9: V424 = 0x2
0x4eb: V425 = EXP 0x2 0xa0
0x4ec: V426 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ed: V427 = 0x4
0x4ef: V428 = CALLDATALOAD 0x4
0x4f0: V429 = AND V428 0xffffffffffffffffffffffffffffffffffffffff
0x4f1: V430 = 0x24
0x4f3: V431 = CALLDATALOAD 0x24
0x4f4: V432 = 0xa89
0x4f7: JUMP 0xa89
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d, V429, V431]
Exit stack: [V12, 0x12d, V429, V431]

================================

Block 0x4f8
[0x4f8:0x4f9]
---
Predecessors: []
Successors: []
---
0x4f8 JUMPDEST
0x4f9 STOP
---
0x4f8: JUMPDEST 
0x4f9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4fa
[0x4fa:0x500]
---
Predecessors: [0xeb]
Successors: [0x501, 0x502]
---
0x4fa JUMPDEST
0x4fb CALLVALUE
0x4fc ISZERO
0x4fd PUSH2 0x502
0x500 JUMPI
---
0x4fa: JUMPDEST 
0x4fb: V433 = CALLVALUE
0x4fc: V434 = ISZERO V433
0x4fd: V435 = 0x502
0x500: JUMPI 0x502 V434
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x501
[0x501:0x501]
---
Predecessors: [0x4fa]
Successors: []
---
0x501 INVALID
---
0x501: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x502
[0x502:0x509]
---
Predecessors: [0x4fa]
Successors: [0xaab]
---
0x502 JUMPDEST
0x503 PUSH2 0x21c
0x506 PUSH2 0xaab
0x509 JUMP
---
0x502: JUMPDEST 
0x503: V436 = 0x21c
0x506: V437 = 0xaab
0x509: JUMP 0xaab
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x21c]
Exit stack: [V12, 0x21c]

================================

Block 0x50a
[0x50a:0x51b]
---
Predecessors: []
Successors: []
---
0x50a JUMPDEST
0x50b PUSH1 0x40
0x50d DUP1
0x50e MLOAD
0x50f SWAP2
0x510 DUP3
0x511 MSTORE
0x512 MLOAD
0x513 SWAP1
0x514 DUP2
0x515 SWAP1
0x516 SUB
0x517 PUSH1 0x20
0x519 ADD
0x51a SWAP1
0x51b RETURN
---
0x50a: JUMPDEST 
0x50b: V438 = 0x40
0x50e: V439 = M[0x40]
0x511: M[V439] = S0
0x512: V440 = M[0x40]
0x516: V441 = SUB V439 V440
0x517: V442 = 0x20
0x519: V443 = ADD 0x20 V441
0x51b: RETURN V440 V443
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x51c
[0x51c:0x522]
---
Predecessors: [0xf6]
Successors: [0x523, 0x524]
---
0x51c JUMPDEST
0x51d CALLVALUE
0x51e ISZERO
0x51f PUSH2 0x524
0x522 JUMPI
---
0x51c: JUMPDEST 
0x51d: V444 = CALLVALUE
0x51e: V445 = ISZERO V444
0x51f: V446 = 0x524
0x522: JUMPI 0x524 V445
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x523
[0x523:0x523]
---
Predecessors: [0x51c]
Successors: []
---
0x523 INVALID
---
0x523: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x524
[0x524:0x53d]
---
Predecessors: [0x51c]
Successors: [0xaba]
---
0x524 JUMPDEST
0x525 PUSH2 0x21c
0x528 PUSH1 0x1
0x52a PUSH1 0xa0
0x52c PUSH1 0x2
0x52e EXP
0x52f SUB
0x530 PUSH1 0x4
0x532 CALLDATALOAD
0x533 DUP2
0x534 AND
0x535 SWAP1
0x536 PUSH1 0x24
0x538 CALLDATALOAD
0x539 AND
0x53a PUSH2 0xaba
0x53d JUMP
---
0x524: JUMPDEST 
0x525: V447 = 0x21c
0x528: V448 = 0x1
0x52a: V449 = 0xa0
0x52c: V450 = 0x2
0x52e: V451 = EXP 0x2 0xa0
0x52f: V452 = SUB 0x10000000000000000000000000000000000000000 0x1
0x530: V453 = 0x4
0x532: V454 = CALLDATALOAD 0x4
0x534: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x536: V456 = 0x24
0x538: V457 = CALLDATALOAD 0x24
0x539: V458 = AND V457 0xffffffffffffffffffffffffffffffffffffffff
0x53a: V459 = 0xaba
0x53d: JUMP 0xaba
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x21c, V455, V458]
Exit stack: [V12, 0x21c, V455, V458]

================================

Block 0x53e
[0x53e:0x54f]
---
Predecessors: []
Successors: []
---
0x53e JUMPDEST
0x53f PUSH1 0x40
0x541 DUP1
0x542 MLOAD
0x543 SWAP2
0x544 DUP3
0x545 MSTORE
0x546 MLOAD
0x547 SWAP1
0x548 DUP2
0x549 SWAP1
0x54a SUB
0x54b PUSH1 0x20
0x54d ADD
0x54e SWAP1
0x54f RETURN
---
0x53e: JUMPDEST 
0x53f: V460 = 0x40
0x542: V461 = M[0x40]
0x545: M[V461] = S0
0x546: V462 = M[0x40]
0x54a: V463 = SUB V461 V462
0x54b: V464 = 0x20
0x54d: V465 = ADD 0x20 V463
0x54f: RETURN V462 V465
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x550
[0x550:0x556]
---
Predecessors: [0x101]
Successors: [0x557, 0x558]
---
0x550 JUMPDEST
0x551 CALLVALUE
0x552 ISZERO
0x553 PUSH2 0x558
0x556 JUMPI
---
0x550: JUMPDEST 
0x551: V466 = CALLVALUE
0x552: V467 = ISZERO V466
0x553: V468 = 0x558
0x556: JUMPI 0x558 V467
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x557
[0x557:0x557]
---
Predecessors: [0x550]
Successors: []
---
0x557 INVALID
---
0x557: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x558
[0x558:0x56b]
---
Predecessors: [0x550]
Successors: [0xae7]
---
0x558 JUMPDEST
0x559 PUSH2 0x12d
0x55c PUSH1 0x1
0x55e PUSH1 0xa0
0x560 PUSH1 0x2
0x562 EXP
0x563 SUB
0x564 PUSH1 0x4
0x566 CALLDATALOAD
0x567 AND
0x568 PUSH2 0xae7
0x56b JUMP
---
0x558: JUMPDEST 
0x559: V469 = 0x12d
0x55c: V470 = 0x1
0x55e: V471 = 0xa0
0x560: V472 = 0x2
0x562: V473 = EXP 0x2 0xa0
0x563: V474 = SUB 0x10000000000000000000000000000000000000000 0x1
0x564: V475 = 0x4
0x566: V476 = CALLDATALOAD 0x4
0x567: V477 = AND V476 0xffffffffffffffffffffffffffffffffffffffff
0x568: V478 = 0xae7
0x56b: JUMP 0xae7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12d, V477]
Exit stack: [V12, 0x12d, V477]

================================

Block 0x56c
[0x56c:0x56d]
---
Predecessors: []
Successors: []
---
0x56c JUMPDEST
0x56d STOP
---
0x56c: JUMPDEST 
0x56d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x56e
[0x56e:0x580]
---
Predecessors: [0x121, 0x4a3]
Successors: [0x581, 0x586]
---
0x56e JUMPDEST
0x56f PUSH1 0x5
0x571 SLOAD
0x572 PUSH1 0x0
0x574 SWAP1
0x575 DUP2
0x576 SWAP1
0x577 DUP2
0x578 SWAP1
0x579 PUSH1 0xff
0x57b AND
0x57c ISZERO
0x57d PUSH2 0x586
0x580 JUMPI
---
0x56e: JUMPDEST 
0x56f: V479 = 0x5
0x571: V480 = S[0x5]
0x572: V481 = 0x0
0x579: V482 = 0xff
0x57b: V483 = AND 0xff V480
0x57c: V484 = ISZERO V483
0x57d: V485 = 0x586
0x580: JUMPI 0x586 V484
---
Entry stack: [V12, S1, {0x129, 0x12d}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, S1, {0x129, 0x12d}, 0x0, 0x0, 0x0]

================================

Block 0x581
[0x581:0x585]
---
Predecessors: [0x56e]
Successors: []
---
0x581 PUSH1 0x0
0x583 PUSH1 0x0
0x585 REVERT
---
0x581: V486 = 0x0
0x583: V487 = 0x0
0x585: REVERT 0x0 0x0
---
Entry stack: [V12, S4, {0x129, 0x12d}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0x129, 0x12d}, 0x0, 0x0, 0x0]

================================

Block 0x586
[0x586:0x598]
---
Predecessors: [0x56e]
Successors: [0x599, 0x59d]
---
0x586 JUMPDEST
0x587 PUSH1 0x6
0x589 SLOAD
0x58a PUSH4 0x597b97bf
0x58f DUP2
0x590 TIMESTAMP
0x591 LT
0x592 ISZERO
0x593 DUP1
0x594 ISZERO
0x595 PUSH2 0x59d
0x598 JUMPI
---
0x586: JUMPDEST 
0x587: V488 = 0x6
0x589: V489 = S[0x6]
0x58a: V490 = 0x597b97bf
0x590: V491 = TIMESTAMP
0x591: V492 = LT V491 V489
0x592: V493 = ISZERO V492
0x594: V494 = ISZERO V493
0x595: V495 = 0x59d
0x598: JUMPI 0x59d V494
---
Entry stack: [V12, S4, {0x129, 0x12d}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V489, 0x597b97bf, V493]
Exit stack: [V12, S4, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, V493]

================================

Block 0x599
[0x599:0x59c]
---
Predecessors: [0x586]
Successors: [0x59d]
---
0x599 POP
0x59a DUP1
0x59b TIMESTAMP
0x59c LT
---
0x59b: V496 = TIMESTAMP
0x59c: V497 = LT V496 0x597b97bf
---
Entry stack: [V12, S7, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, V493]
Stack pops: 2
Stack additions: [S1, V497]
Exit stack: [V12, S7, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, V497]

================================

Block 0x59d
[0x59d:0x5a3]
---
Predecessors: [0x586, 0x599]
Successors: [0x5a4, 0x5a5]
---
0x59d JUMPDEST
0x59e ISZERO
0x59f ISZERO
0x5a0 PUSH2 0x5a5
0x5a3 JUMPI
---
0x59d: JUMPDEST 
0x59e: V498 = ISZERO S0
0x59f: V499 = ISZERO V498
0x5a0: V500 = 0x5a5
0x5a3: JUMPI 0x5a5 V499
---
Entry stack: [V12, S7, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S7, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf]

================================

Block 0x5a4
[0x5a4:0x5a4]
---
Predecessors: [0x59d]
Successors: []
---
0x5a4 INVALID
---
0x5a4: INVALID 
---
Entry stack: [V12, S6, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf]

================================

Block 0x5a5
[0x5a5:0x5ad]
---
Predecessors: [0x59d]
Successors: [0x5ae, 0x5b3]
---
0x5a5 JUMPDEST
0x5a6 PUSH1 0x0
0x5a8 CALLVALUE
0x5a9 GT
0x5aa PUSH2 0x5b3
0x5ad JUMPI
---
0x5a5: JUMPDEST 
0x5a6: V501 = 0x0
0x5a8: V502 = CALLVALUE
0x5a9: V503 = GT V502 0x0
0x5aa: V504 = 0x5b3
0x5ad: JUMPI 0x5b3 V503
---
Entry stack: [V12, S6, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf]

================================

Block 0x5ae
[0x5ae:0x5b2]
---
Predecessors: [0x5a5]
Successors: []
---
0x5ae PUSH1 0x0
0x5b0 PUSH1 0x0
0x5b2 REVERT
---
0x5ae: V505 = 0x0
0x5b0: V506 = 0x0
0x5b2: REVERT 0x0 0x0
---
Entry stack: [V12, S6, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf]

================================

Block 0x5b3
[0x5b3:0x5c8]
---
Predecessors: [0x5a5]
Successors: [0x5c9, 0x5ce]
---
0x5b3 JUMPDEST
0x5b4 PUSH1 0x0
0x5b6 SLOAD
0x5b7 PUSH11 0x33b2e3c9fd0803ce800000
0x5c3 EQ
0x5c4 ISZERO
0x5c5 PUSH2 0x5ce
0x5c8 JUMPI
---
0x5b3: JUMPDEST 
0x5b4: V507 = 0x0
0x5b6: V508 = S[0x0]
0x5b7: V509 = 0x33b2e3c9fd0803ce800000
0x5c3: V510 = EQ 0x33b2e3c9fd0803ce800000 V508
0x5c4: V511 = ISZERO V510
0x5c5: V512 = 0x5ce
0x5c8: JUMPI 0x5ce V511
---
Entry stack: [V12, S6, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf]

================================

Block 0x5c9
[0x5c9:0x5cd]
---
Predecessors: [0x5b3]
Successors: []
---
0x5c9 PUSH1 0x0
0x5cb PUSH1 0x0
0x5cd REVERT
---
0x5c9: V513 = 0x0
0x5cb: V514 = 0x0
0x5cd: REVERT 0x0 0x0
---
Entry stack: [V12, S6, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf]

================================

Block 0x5ce
[0x5ce:0x5d9]
---
Predecessors: [0x5b3]
Successors: [0xc91]
---
0x5ce JUMPDEST
0x5cf PUSH2 0x5da
0x5d2 CALLVALUE
0x5d3 PUSH2 0x411
0x5d6 PUSH2 0xc91
0x5d9 JUMP
---
0x5ce: JUMPDEST 
0x5cf: V515 = 0x5da
0x5d2: V516 = CALLVALUE
0x5d3: V517 = 0x411
0x5d6: V518 = 0xc91
0x5d9: JUMP 0xc91
---
Entry stack: [V12, S6, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf]
Stack pops: 0
Stack additions: [0x5da, V516, 0x411]
Exit stack: [V12, S6, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, 0x5da, V516, 0x411]

================================

Block 0x5da
[0x5da:0x5e7]
---
Predecessors: [0xcb9]
Successors: [0xcc0]
---
0x5da JUMPDEST
0x5db SWAP5
0x5dc POP
0x5dd PUSH2 0x5e8
0x5e0 PUSH1 0x0
0x5e2 SLOAD
0x5e3 DUP7
0x5e4 PUSH2 0xcc0
0x5e7 JUMP
---
0x5da: JUMPDEST 
0x5dd: V519 = 0x5e8
0x5e0: V520 = 0x0
0x5e2: V521 = S[0x0]
0x5e4: V522 = 0xcc0
0x5e7: JUMP 0xcc0
---
Entry stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S0, S4, S3, S2, S1, 0x5e8, V521, S0]
Exit stack: [V12, 0x12d, S8, S7, S6, S0, S4, S3, S2, S1, 0x5e8, V521, S0]

================================

Block 0x5e8
[0x5e8:0x5fe]
---
Predecessors: [0xcb9]
Successors: [0x5ff, 0x641]
---
0x5e8 JUMPDEST
0x5e9 SWAP4
0x5ea POP
0x5eb PUSH11 0x33b2e3c9fd0803ce800000
0x5f7 DUP5
0x5f8 SWAP1
0x5f9 LT
0x5fa ISZERO
0x5fb PUSH2 0x641
0x5fe JUMPI
---
0x5e8: JUMPDEST 
0x5eb: V523 = 0x33b2e3c9fd0803ce800000
0x5f9: V524 = LT 0x33b2e3c9fd0803ce800000 S0
0x5fa: V525 = ISZERO V524
0x5fb: V526 = 0x641
0x5fe: JUMPI 0x641 V525
---
Entry stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0, S3, S2, S1]
Exit stack: [V12, 0x12d, S8, S7, S6, S5, S0, S3, S2, S1]

================================

Block 0x5ff
[0x5ff:0x612]
---
Predecessors: [0x5e8]
Successors: [0xcda]
---
0x5ff PUSH2 0x613
0x602 DUP5
0x603 PUSH11 0x33b2e3c9fd0803ce800000
0x60f PUSH2 0xcda
0x612 JUMP
---
0x5ff: V527 = 0x613
0x603: V528 = 0x33b2e3c9fd0803ce800000
0x60f: V529 = 0xcda
0x612: JUMP 0xcda
---
Entry stack: [V12, 0x12d, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x613, S3, 0x33b2e3c9fd0803ce800000]
Exit stack: [V12, 0x12d, S7, S6, S5, S4, S3, S2, S1, S0, 0x613, S3, 0x33b2e3c9fd0803ce800000]

================================

Block 0x613
[0x613:0x622]
---
Predecessors: [0xceb]
Successors: [0x623, 0x628]
---
0x613 JUMPDEST
0x614 SWAP3
0x615 POP
0x616 PUSH5 0xe8d4a51000
0x61c DUP4
0x61d GT
0x61e ISZERO
0x61f PUSH2 0x628
0x622 JUMPI
---
0x613: JUMPDEST 
0x616: V530 = 0xe8d4a51000
0x61d: V531 = GT S0 0xe8d4a51000
0x61e: V532 = ISZERO V531
0x61f: V533 = 0x628
0x622: JUMPI 0x628 V532
---
Entry stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [V12, 0x12d, S8, S7, S6, S5, S4, S0, S2, S1]

================================

Block 0x623
[0x623:0x627]
---
Predecessors: [0x613]
Successors: []
---
0x623 PUSH1 0x0
0x625 PUSH1 0x0
0x627 REVERT
---
0x623: V534 = 0x0
0x625: V535 = 0x0
0x627: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x628
[0x628:0x631]
---
Predecessors: [0x613]
Successors: [0xcda]
---
0x628 JUMPDEST
0x629 PUSH2 0x632
0x62c DUP5
0x62d DUP5
0x62e PUSH2 0xcda
0x631 JUMP
---
0x628: JUMPDEST 
0x629: V536 = 0x632
0x62e: V537 = 0xcda
0x631: JUMP 0xcda
---
Entry stack: [V12, 0x12d, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x632, S3, S2]
Exit stack: [V12, 0x12d, S7, S6, S5, S4, S3, S2, S1, S0, 0x632, S3, S2]

================================

Block 0x632
[0x632:0x63d]
---
Predecessors: [0xceb]
Successors: [0xcda]
---
0x632 JUMPDEST
0x633 SWAP4
0x634 POP
0x635 PUSH2 0x63e
0x638 DUP6
0x639 DUP5
0x63a PUSH2 0xcda
0x63d JUMP
---
0x632: JUMPDEST 
0x635: V538 = 0x63e
0x63a: V539 = 0xcda
0x63d: JUMP 0xcda
---
Entry stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S0, S3, S2, S1, 0x63e, S5, S3]
Exit stack: [V12, 0x12d, S8, S7, S6, S5, S0, S3, S2, S1, 0x63e, S5, S3]

================================

Block 0x63e
[0x63e:0x640]
---
Predecessors: [0xceb]
Successors: [0x641]
---
0x63e JUMPDEST
0x63f SWAP5
0x640 POP
---
0x63e: JUMPDEST 
---
Entry stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S0, S4, S3, S2, S1]
Exit stack: [V12, 0x12d, S8, S7, S6, S0, S4, S3, S2, S1]

================================

Block 0x641
[0x641:0x69a]
---
Predecessors: [0x5e8, 0x63e]
Successors: [0x69b]
---
0x641 JUMPDEST
0x642 PUSH1 0x0
0x644 DUP5
0x645 DUP2
0x646 SSTORE
0x647 PUSH1 0x1
0x649 PUSH1 0xa0
0x64b PUSH1 0x2
0x64d EXP
0x64e SUB
0x64f CALLER
0x650 AND
0x651 DUP1
0x652 DUP3
0x653 MSTORE
0x654 PUSH1 0x1
0x656 PUSH1 0x20
0x658 SWAP1
0x659 DUP2
0x65a MSTORE
0x65b PUSH1 0x40
0x65d SWAP3
0x65e DUP4
0x65f SWAP1
0x660 SHA3
0x661 DUP1
0x662 SLOAD
0x663 DUP10
0x664 ADD
0x665 SWAP1
0x666 SSTORE
0x667 DUP3
0x668 MLOAD
0x669 DUP9
0x66a DUP2
0x66b MSTORE
0x66c SWAP3
0x66d MLOAD
0x66e SWAP2
0x66f SWAP3
0x670 PUSH32 0x88034bc50ada5f0c75211395735d93a888fdf6ee77d30b9b4637c67d4f8e2404
0x691 SWAP3
0x692 SWAP1
0x693 DUP2
0x694 SWAP1
0x695 SUB
0x696 SWAP1
0x697 SWAP2
0x698 ADD
0x699 SWAP1
0x69a LOG2
---
0x641: JUMPDEST 
0x642: V540 = 0x0
0x646: S[0x0] = S3
0x647: V541 = 0x1
0x649: V542 = 0xa0
0x64b: V543 = 0x2
0x64d: V544 = EXP 0x2 0xa0
0x64e: V545 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64f: V546 = CALLER
0x650: V547 = AND V546 0xffffffffffffffffffffffffffffffffffffffff
0x653: M[0x0] = V547
0x654: V548 = 0x1
0x656: V549 = 0x20
0x65a: M[0x20] = 0x1
0x65b: V550 = 0x40
0x660: V551 = SHA3 0x0 0x40
0x662: V552 = S[V551]
0x664: V553 = ADD S4 V552
0x666: S[V551] = V553
0x668: V554 = M[0x40]
0x66b: M[V554] = S4
0x66d: V555 = M[0x40]
0x670: V556 = 0x88034bc50ada5f0c75211395735d93a888fdf6ee77d30b9b4637c67d4f8e2404
0x695: V557 = SUB V554 V555
0x698: V558 = ADD 0x20 V557
0x69a: LOG V555 V558 0x88034bc50ada5f0c75211395735d93a888fdf6ee77d30b9b4637c67d4f8e2404 V547
---
Entry stack: [V12, 0x12d, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x12d, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x69b
[0x69b:0x69b]
---
Predecessors: [0x641]
Successors: [0x69c]
---
0x69b JUMPDEST
---
0x69b: JUMPDEST 
---
Entry stack: [V12, 0x12d, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x69c
[0x69c:0x69c]
---
Predecessors: [0x69b]
Successors: [0x69d]
---
0x69c JUMPDEST
---
0x69c: JUMPDEST 
---
Entry stack: [V12, S6, {0x129, 0x12d}, S4, S3, S2, V489, 0x597b97bf]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0x129, 0x12d}, S4, S3, S2, V489, 0x597b97bf]

================================

Block 0x69d
[0x69d:0x69f]
---
Predecessors: [0x69c]
Successors: [0x6a0]
---
0x69d JUMPDEST
0x69e POP
0x69f POP
---
0x69d: JUMPDEST 
---
Entry stack: [V12, S6, {0x129, 0x12d}, S4, S3, S2, V489, 0x597b97bf]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S6, {0x129, 0x12d}, S4, S3, S2]

================================

Block 0x6a0
[0x6a0:0x6a4]
---
Predecessors: [0x69d, 0xdf7]
Successors: [0x129, 0x12d]
---
0x6a0 JUMPDEST
0x6a1 POP
0x6a2 POP
0x6a3 POP
0x6a4 JUMP
---
0x6a0: JUMPDEST 
0x6a4: JUMP {0x129, 0x12d}
---
Entry stack: [V12, S4, {0x129, 0x12d}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, S4]

================================

Block 0x6a5
[0x6a5:0x6db]
---
Predecessors: [0x137]
Successors: [0x13f]
---
0x6a5 JUMPDEST
0x6a6 PUSH1 0x40
0x6a8 DUP1
0x6a9 MLOAD
0x6aa DUP1
0x6ab DUP3
0x6ac ADD
0x6ad SWAP1
0x6ae SWAP2
0x6af MSTORE
0x6b0 PUSH1 0xe
0x6b2 DUP2
0x6b3 MSTORE
0x6b4 PUSH32 0x426c6f636b74697820546f6b656e000000000000000000000000000000000000
0x6d5 PUSH1 0x20
0x6d7 DUP3
0x6d8 ADD
0x6d9 MSTORE
0x6da DUP2
0x6db JUMP
---
0x6a5: JUMPDEST 
0x6a6: V559 = 0x40
0x6a9: V560 = M[0x40]
0x6ac: V561 = ADD 0x40 V560
0x6af: M[0x40] = V561
0x6b0: V562 = 0xe
0x6b3: M[V560] = 0xe
0x6b4: V563 = 0x426c6f636b74697820546f6b656e000000000000000000000000000000000000
0x6d5: V564 = 0x20
0x6d8: V565 = ADD V560 0x20
0x6d9: M[V565] = 0x426c6f636b74697820546f6b656e000000000000000000000000000000000000
0x6db: JUMP 0x13f
---
Entry stack: [V12, 0x13f]
Stack pops: 1
Stack additions: [S0, V560]
Exit stack: [V12, 0x13f, V560]

================================

Block 0x6dc
[0x6dc:0x6e5]
---
Predecessors: [0x1c7]
Successors: [0x6e6, 0x70f]
---
0x6dc JUMPDEST
0x6dd DUP1
0x6de ISZERO
0x6df DUP1
0x6e0 ISZERO
0x6e1 SWAP1
0x6e2 PUSH2 0x70f
0x6e5 JUMPI
---
0x6dc: JUMPDEST 
0x6de: V566 = ISZERO V150
0x6e0: V567 = ISZERO V566
0x6e2: V568 = 0x70f
0x6e5: JUMPI 0x70f V566
---
Entry stack: [V12, 0x12d, V148, V150]
Stack pops: 1
Stack additions: [S0, V567]
Exit stack: [V12, 0x12d, V148, V150, V567]

================================

Block 0x6e6
[0x6e6:0x70e]
---
Predecessors: [0x6dc]
Successors: [0x70f]
---
0x6e6 POP
0x6e7 PUSH1 0x1
0x6e9 PUSH1 0xa0
0x6eb PUSH1 0x2
0x6ed EXP
0x6ee SUB
0x6ef CALLER
0x6f0 DUP2
0x6f1 AND
0x6f2 PUSH1 0x0
0x6f4 SWAP1
0x6f5 DUP2
0x6f6 MSTORE
0x6f7 PUSH1 0x2
0x6f9 PUSH1 0x20
0x6fb SWAP1
0x6fc DUP2
0x6fd MSTORE
0x6fe PUSH1 0x40
0x700 DUP1
0x701 DUP4
0x702 SHA3
0x703 SWAP4
0x704 DUP7
0x705 AND
0x706 DUP4
0x707 MSTORE
0x708 SWAP3
0x709 SWAP1
0x70a MSTORE
0x70b SHA3
0x70c SLOAD
0x70d ISZERO
0x70e ISZERO
---
0x6e7: V569 = 0x1
0x6e9: V570 = 0xa0
0x6eb: V571 = 0x2
0x6ed: V572 = EXP 0x2 0xa0
0x6ee: V573 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ef: V574 = CALLER
0x6f1: V575 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0x6f2: V576 = 0x0
0x6f6: M[0x0] = V575
0x6f7: V577 = 0x2
0x6f9: V578 = 0x20
0x6fd: M[0x20] = 0x2
0x6fe: V579 = 0x40
0x702: V580 = SHA3 0x0 0x40
0x705: V581 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x707: M[0x0] = V581
0x70a: M[0x20] = V580
0x70b: V582 = SHA3 0x0 0x40
0x70c: V583 = S[V582]
0x70d: V584 = ISZERO V583
0x70e: V585 = ISZERO V584
---
Entry stack: [V12, 0x12d, V148, V150, V567]
Stack pops: 3
Stack additions: [S2, S1, V585]
Exit stack: [V12, 0x12d, V148, V150, V585]

================================

Block 0x70f
[0x70f:0x714]
---
Predecessors: [0x6dc, 0x6e6]
Successors: [0x715, 0x71a]
---
0x70f JUMPDEST
0x710 ISZERO
0x711 PUSH2 0x71a
0x714 JUMPI
---
0x70f: JUMPDEST 
0x710: V586 = ISZERO S0
0x711: V587 = 0x71a
0x714: JUMPI 0x71a V586
---
Entry stack: [V12, 0x12d, V148, V150, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x12d, V148, V150]

================================

Block 0x715
[0x715:0x719]
---
Predecessors: [0x70f]
Successors: []
---
0x715 PUSH1 0x0
0x717 PUSH1 0x0
0x719 REVERT
---
0x715: V588 = 0x0
0x717: V589 = 0x0
0x719: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d, V148, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V148, V150]

================================

Block 0x71a
[0x71a:0x777]
---
Predecessors: [0x70f]
Successors: [0x778]
---
0x71a JUMPDEST
0x71b PUSH1 0x1
0x71d PUSH1 0xa0
0x71f PUSH1 0x2
0x721 EXP
0x722 SUB
0x723 CALLER
0x724 DUP2
0x725 AND
0x726 PUSH1 0x0
0x728 DUP2
0x729 DUP2
0x72a MSTORE
0x72b PUSH1 0x2
0x72d PUSH1 0x20
0x72f SWAP1
0x730 DUP2
0x731 MSTORE
0x732 PUSH1 0x40
0x734 DUP1
0x735 DUP4
0x736 SHA3
0x737 SWAP5
0x738 DUP8
0x739 AND
0x73a DUP1
0x73b DUP5
0x73c MSTORE
0x73d SWAP5
0x73e DUP3
0x73f MSTORE
0x740 SWAP2
0x741 DUP3
0x742 SWAP1
0x743 SHA3
0x744 DUP6
0x745 SWAP1
0x746 SSTORE
0x747 DUP2
0x748 MLOAD
0x749 DUP6
0x74a DUP2
0x74b MSTORE
0x74c SWAP2
0x74d MLOAD
0x74e PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x76f SWAP3
0x770 DUP2
0x771 SWAP1
0x772 SUB
0x773 SWAP1
0x774 SWAP2
0x775 ADD
0x776 SWAP1
0x777 LOG3
---
0x71a: JUMPDEST 
0x71b: V590 = 0x1
0x71d: V591 = 0xa0
0x71f: V592 = 0x2
0x721: V593 = EXP 0x2 0xa0
0x722: V594 = SUB 0x10000000000000000000000000000000000000000 0x1
0x723: V595 = CALLER
0x725: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V595
0x726: V597 = 0x0
0x72a: M[0x0] = V596
0x72b: V598 = 0x2
0x72d: V599 = 0x20
0x731: M[0x20] = 0x2
0x732: V600 = 0x40
0x736: V601 = SHA3 0x0 0x40
0x739: V602 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x73c: M[0x0] = V602
0x73f: M[0x20] = V601
0x743: V603 = SHA3 0x0 0x40
0x746: S[V603] = V150
0x748: V604 = M[0x40]
0x74b: M[V604] = V150
0x74d: V605 = M[0x40]
0x74e: V606 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x772: V607 = SUB V604 V605
0x775: V608 = ADD 0x20 V607
0x777: LOG V605 V608 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V596 V602
---
Entry stack: [V12, 0x12d, V148, V150]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x12d, V148, V150]

================================

Block 0x778
[0x778:0x77b]
---
Predecessors: [0x71a, 0xeb4]
Successors: [0x129, 0x12d]
---
0x778 JUMPDEST
0x779 POP
0x77a POP
0x77b JUMP
---
0x778: JUMPDEST 
0x77b: JUMP S2
---
Entry stack: [V12, 0x12d, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x12d, S4, S3]

================================

Block 0x77c
[0x77c:0x78a]
---
Predecessors: [0x1e8]
Successors: [0x1f0]
---
0x77c JUMPDEST
0x77d PUSH1 0x7
0x77f SLOAD
0x780 PUSH1 0x1
0x782 PUSH1 0xa0
0x784 PUSH1 0x2
0x786 EXP
0x787 SUB
0x788 AND
0x789 DUP2
0x78a JUMP
---
0x77c: JUMPDEST 
0x77d: V609 = 0x7
0x77f: V610 = S[0x7]
0x780: V611 = 0x1
0x782: V612 = 0xa0
0x784: V613 = 0x2
0x786: V614 = EXP 0x2 0xa0
0x787: V615 = SUB 0x10000000000000000000000000000000000000000 0x1
0x788: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff V610
0x78a: JUMP 0x1f0
---
Entry stack: [V12, 0x1f0]
Stack pops: 1
Stack additions: [S0, V616]
Exit stack: [V12, 0x1f0, V616]

================================

Block 0x78b
[0x78b:0x790]
---
Predecessors: [0x214]
Successors: [0x21c]
---
0x78b JUMPDEST
0x78c PUSH1 0x0
0x78e SLOAD
0x78f DUP2
0x790 JUMP
---
0x78b: JUMPDEST 
0x78c: V617 = 0x0
0x78e: V618 = S[0x0]
0x790: JUMP 0x21c
---
Entry stack: [V12, 0x21c]
Stack pops: 1
Stack additions: [S0, V618]
Exit stack: [V12, 0x21c, V618]

================================

Block 0x791
[0x791:0x79d]
---
Predecessors: [0x236]
Successors: [0x79e, 0x7a3]
---
0x791 JUMPDEST
0x792 PUSH1 0x5
0x794 SLOAD
0x795 PUSH1 0xff
0x797 AND
0x798 ISZERO
0x799 ISZERO
0x79a PUSH2 0x7a3
0x79d JUMPI
---
0x791: JUMPDEST 
0x792: V619 = 0x5
0x794: V620 = S[0x5]
0x795: V621 = 0xff
0x797: V622 = AND 0xff V620
0x798: V623 = ISZERO V622
0x799: V624 = ISZERO V623
0x79a: V625 = 0x7a3
0x79d: JUMPI 0x7a3 V624
---
Entry stack: [V12, 0x12d, V191, V194, V196]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V191, V194, V196]

================================

Block 0x79e
[0x79e:0x7a2]
---
Predecessors: [0x791]
Successors: []
---
0x79e PUSH1 0x0
0x7a0 PUSH1 0x0
0x7a2 REVERT
---
0x79e: V626 = 0x0
0x7a0: V627 = 0x0
0x7a2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d, V191, V194, V196]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V191, V194, V196]

================================

Block 0x7a3
[0x7a3:0x7ad]
---
Predecessors: [0x791]
Successors: [0xcf1]
---
0x7a3 JUMPDEST
0x7a4 PUSH2 0x6a0
0x7a7 DUP4
0x7a8 DUP4
0x7a9 DUP4
0x7aa PUSH2 0xcf1
0x7ad JUMP
---
0x7a3: JUMPDEST 
0x7a4: V628 = 0x6a0
0x7aa: V629 = 0xcf1
0x7ad: JUMP 0xcf1
---
Entry stack: [V12, 0x12d, V191, V194, V196]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x6a0, S2, S1, S0]
Exit stack: [V12, 0x12d, V191, V194, V196, 0x6a0, V191, V194, V196]

================================

Block 0x7ae
[0x7ae:0x7ae]
---
Predecessors: []
Successors: [0x7af]
---
0x7ae JUMPDEST
---
0x7ae: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7af
[0x7af:0x7af]
---
Predecessors: [0x7ae]
Successors: [0x7b0]
---
0x7af JUMPDEST
---
0x7af: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7b0
[0x7b0:0x7b4]
---
Predecessors: [0x7af]
Successors: []
Has unresolved jump.
---
0x7b0 JUMPDEST
0x7b1 POP
0x7b2 POP
0x7b3 POP
0x7b4 JUMP
---
0x7b0: JUMPDEST 
0x7b4: JUMP S3
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x7b5
[0x7b5:0x7b9]
---
Predecessors: [0x25d]
Successors: [0x21c]
---
0x7b5 JUMPDEST
0x7b6 PUSH1 0x12
0x7b8 DUP2
0x7b9 JUMP
---
0x7b5: JUMPDEST 
0x7b6: V630 = 0x12
0x7b9: JUMP 0x21c
---
Entry stack: [V12, 0x21c]
Stack pops: 1
Stack additions: [S0, 0x12]
Exit stack: [V12, 0x21c, 0x12]

================================

Block 0x7ba
[0x7ba:0x7c1]
---
Predecessors: [0x27f]
Successors: [0x21c]
---
0x7ba JUMPDEST
0x7bb PUSH4 0x597b97bf
0x7c0 DUP2
0x7c1 JUMP
---
0x7ba: JUMPDEST 
0x7bb: V631 = 0x597b97bf
0x7c1: JUMP 0x21c
---
Entry stack: [V12, 0x21c]
Stack pops: 1
Stack additions: [S0, 0x597b97bf]
Exit stack: [V12, 0x21c, 0x597b97bf]

================================

Block 0x7c2
[0x7c2:0x7de]
---
Predecessors: [0x2a1]
Successors: [0x7df]
---
0x7c2 JUMPDEST
0x7c3 PUSH1 0x1
0x7c5 PUSH1 0xa0
0x7c7 PUSH1 0x2
0x7c9 EXP
0x7ca SUB
0x7cb DUP2
0x7cc AND
0x7cd PUSH1 0x0
0x7cf SWAP1
0x7d0 DUP2
0x7d1 MSTORE
0x7d2 PUSH1 0x3
0x7d4 PUSH1 0x20
0x7d6 MSTORE
0x7d7 PUSH1 0x40
0x7d9 SWAP1
0x7da SHA3
0x7db SLOAD
0x7dc PUSH1 0xff
0x7de AND
---
0x7c2: JUMPDEST 
0x7c3: V632 = 0x1
0x7c5: V633 = 0xa0
0x7c7: V634 = 0x2
0x7c9: V635 = EXP 0x2 0xa0
0x7ca: V636 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7cc: V637 = AND V231 0xffffffffffffffffffffffffffffffffffffffff
0x7cd: V638 = 0x0
0x7d1: M[0x0] = V637
0x7d2: V639 = 0x3
0x7d4: V640 = 0x20
0x7d6: M[0x20] = 0x3
0x7d7: V641 = 0x40
0x7da: V642 = SHA3 0x0 0x40
0x7db: V643 = S[V642]
0x7dc: V644 = 0xff
0x7de: V645 = AND 0xff V643
---
Entry stack: [V12, 0x2b5, V231]
Stack pops: 1
Stack additions: [S0, V645]
Exit stack: [V12, 0x2b5, V231, V645]

================================

Block 0x7df
[0x7df:0x7e3]
---
Predecessors: [0x7c2]
Successors: [0x2b5]
---
0x7df JUMPDEST
0x7e0 SWAP2
0x7e1 SWAP1
0x7e2 POP
0x7e3 JUMP
---
0x7df: JUMPDEST 
0x7e3: JUMP 0x2b5
---
Entry stack: [V12, 0x2b5, V231, V645]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V645]

================================

Block 0x7e4
[0x7e4:0x7e9]
---
Predecessors: [0x2d1]
Successors: [0x21c]
---
0x7e4 JUMPDEST
0x7e5 PUSH2 0x411
0x7e8 DUP2
0x7e9 JUMP
---
0x7e4: JUMPDEST 
0x7e5: V646 = 0x411
0x7e9: JUMP 0x21c
---
Entry stack: [V12, 0x21c]
Stack pops: 1
Stack additions: [S0, 0x411]
Exit stack: [V12, 0x21c, 0x411]

================================

Block 0x7ea
[0x7ea:0x7f5]
---
Predecessors: [0x2f3]
Successors: [0x7f6, 0x7fb]
---
0x7ea JUMPDEST
0x7eb PUSH1 0x5
0x7ed SLOAD
0x7ee PUSH1 0xff
0x7f0 AND
0x7f1 ISZERO
0x7f2 PUSH2 0x7fb
0x7f5 JUMPI
---
0x7ea: JUMPDEST 
0x7eb: V647 = 0x5
0x7ed: V648 = S[0x5]
0x7ee: V649 = 0xff
0x7f0: V650 = AND 0xff V648
0x7f1: V651 = ISZERO V650
0x7f2: V652 = 0x7fb
0x7f5: JUMPI 0x7fb V651
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0x7f6
[0x7f6:0x7fa]
---
Predecessors: [0x7ea]
Successors: []
---
0x7f6 PUSH1 0x0
0x7f8 PUSH1 0x0
0x7fa REVERT
---
0x7f6: V653 = 0x0
0x7f8: V654 = 0x0
0x7fa: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0x7fb
[0x7fb:0x811]
---
Predecessors: [0x7ea]
Successors: [0x812, 0x817]
---
0x7fb JUMPDEST
0x7fc PUSH1 0x8
0x7fe SLOAD
0x7ff CALLER
0x800 PUSH1 0x1
0x802 PUSH1 0xa0
0x804 PUSH1 0x2
0x806 EXP
0x807 SUB
0x808 SWAP1
0x809 DUP2
0x80a AND
0x80b SWAP2
0x80c AND
0x80d EQ
0x80e PUSH2 0x817
0x811 JUMPI
---
0x7fb: JUMPDEST 
0x7fc: V655 = 0x8
0x7fe: V656 = S[0x8]
0x7ff: V657 = CALLER
0x800: V658 = 0x1
0x802: V659 = 0xa0
0x804: V660 = 0x2
0x806: V661 = EXP 0x2 0xa0
0x807: V662 = SUB 0x10000000000000000000000000000000000000000 0x1
0x80a: V663 = AND 0xffffffffffffffffffffffffffffffffffffffff V657
0x80c: V664 = AND V656 0xffffffffffffffffffffffffffffffffffffffff
0x80d: V665 = EQ V664 V663
0x80e: V666 = 0x817
0x811: JUMPI 0x817 V665
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0x812
[0x812:0x816]
---
Predecessors: [0x7fb]
Successors: []
---
0x812 PUSH1 0x0
0x814 PUSH1 0x0
0x816 REVERT
---
0x812: V667 = 0x0
0x814: V668 = 0x0
0x816: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0x817
[0x817:0x825]
---
Predecessors: [0x7fb]
Successors: [0x826, 0x838]
---
0x817 JUMPDEST
0x818 PUSH4 0x597b97bf
0x81d TIMESTAMP
0x81e GT
0x81f ISZERO
0x820 DUP1
0x821 ISZERO
0x822 PUSH2 0x838
0x825 JUMPI
---
0x817: JUMPDEST 
0x818: V669 = 0x597b97bf
0x81d: V670 = TIMESTAMP
0x81e: V671 = GT V670 0x597b97bf
0x81f: V672 = ISZERO V671
0x821: V673 = ISZERO V672
0x822: V674 = 0x838
0x825: JUMPI 0x838 V673
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: [V672]
Exit stack: [V12, 0x12d, V672]

================================

Block 0x826
[0x826:0x837]
---
Predecessors: [0x817]
Successors: [0x838]
---
0x826 POP
0x827 PUSH1 0x0
0x829 SLOAD
0x82a PUSH11 0x33b2e3c9fd0803ce800000
0x836 EQ
0x837 ISZERO
---
0x827: V675 = 0x0
0x829: V676 = S[0x0]
0x82a: V677 = 0x33b2e3c9fd0803ce800000
0x836: V678 = EQ 0x33b2e3c9fd0803ce800000 V676
0x837: V679 = ISZERO V678
---
Entry stack: [V12, 0x12d, V672]
Stack pops: 1
Stack additions: [V679]
Exit stack: [V12, 0x12d, V679]

================================

Block 0x838
[0x838:0x83d]
---
Predecessors: [0x817, 0x826]
Successors: [0x83e, 0x843]
---
0x838 JUMPDEST
0x839 ISZERO
0x83a PUSH2 0x843
0x83d JUMPI
---
0x838: JUMPDEST 
0x839: V680 = ISZERO S0
0x83a: V681 = 0x843
0x83d: JUMPI 0x843 V680
---
Entry stack: [V12, 0x12d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0x83e
[0x83e:0x842]
---
Predecessors: [0x838]
Successors: []
---
0x83e PUSH1 0x0
0x840 PUSH1 0x0
0x842 REVERT
---
0x83e: V682 = 0x0
0x840: V683 = 0x0
0x842: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0x843
[0x843:0x880]
---
Predecessors: [0x838]
Successors: [0x129, 0x881]
---
0x843 JUMPDEST
0x844 PUSH1 0x5
0x846 DUP1
0x847 SLOAD
0x848 PUSH1 0xff
0x84a NOT
0x84b AND
0x84c PUSH1 0x1
0x84e OR
0x84f SWAP1
0x850 SSTORE
0x851 PUSH1 0x8
0x853 SLOAD
0x854 PUSH1 0x40
0x856 MLOAD
0x857 PUSH1 0x1
0x859 PUSH1 0xa0
0x85b PUSH1 0x2
0x85d EXP
0x85e SUB
0x85f SWAP2
0x860 DUP3
0x861 AND
0x862 SWAP2
0x863 ADDRESS
0x864 AND
0x865 BALANCE
0x866 DUP1
0x867 ISZERO
0x868 PUSH2 0x8fc
0x86b MUL
0x86c SWAP2
0x86d PUSH1 0x0
0x86f DUP2
0x870 DUP2
0x871 DUP2
0x872 DUP6
0x873 DUP9
0x874 DUP9
0x875 CALL
0x876 SWAP4
0x877 POP
0x878 POP
0x879 POP
0x87a POP
0x87b ISZERO
0x87c ISZERO
0x87d PUSH2 0x129
0x880 JUMPI
---
0x843: JUMPDEST 
0x844: V684 = 0x5
0x847: V685 = S[0x5]
0x848: V686 = 0xff
0x84a: V687 = NOT 0xff
0x84b: V688 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V685
0x84c: V689 = 0x1
0x84e: V690 = OR 0x1 V688
0x850: S[0x5] = V690
0x851: V691 = 0x8
0x853: V692 = S[0x8]
0x854: V693 = 0x40
0x856: V694 = M[0x40]
0x857: V695 = 0x1
0x859: V696 = 0xa0
0x85b: V697 = 0x2
0x85d: V698 = EXP 0x2 0xa0
0x85e: V699 = SUB 0x10000000000000000000000000000000000000000 0x1
0x861: V700 = AND 0xffffffffffffffffffffffffffffffffffffffff V692
0x863: V701 = ADDRESS
0x864: V702 = AND V701 0xffffffffffffffffffffffffffffffffffffffff
0x865: V703 = BALANCE V702
0x867: V704 = ISZERO V703
0x868: V705 = 0x8fc
0x86b: V706 = MUL 0x8fc V704
0x86d: V707 = 0x0
0x875: V708 = CALL V706 V700 V703 V694 0x0 V694 0x0
0x87b: V709 = ISZERO V708
0x87c: V710 = ISZERO V709
0x87d: V711 = 0x129
0x880: JUMPI 0x129 V710
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0x881
[0x881:0x885]
---
Predecessors: [0x843]
Successors: []
---
0x881 PUSH1 0x0
0x883 PUSH1 0x0
0x885 REVERT
---
0x881: V712 = 0x0
0x883: V713 = 0x0
0x885: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d]

================================

Block 0x886
[0x886:0x886]
---
Predecessors: []
Successors: [0x887]
---
0x886 JUMPDEST
---
0x886: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x887
[0x887:0x887]
---
Predecessors: [0x886]
Successors: [0x888]
---
0x887 JUMPDEST
---
0x887: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x888
[0x888:0x889]
---
Predecessors: [0x887]
Successors: []
Has unresolved jump.
---
0x888 JUMPDEST
0x889 JUMP
---
0x888: JUMPDEST 
0x889: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x88a
[0x88a:0x8c9]
---
Predecessors: [0x305]
Successors: [0x8ca, 0x910]
---
0x88a JUMPDEST
0x88b PUSH1 0x4
0x88d DUP1
0x88e SLOAD
0x88f PUSH1 0x40
0x891 DUP1
0x892 MLOAD
0x893 PUSH1 0x20
0x895 PUSH1 0x2
0x897 PUSH1 0x1
0x899 DUP6
0x89a AND
0x89b ISZERO
0x89c PUSH2 0x100
0x89f MUL
0x8a0 PUSH1 0x0
0x8a2 NOT
0x8a3 ADD
0x8a4 SWAP1
0x8a5 SWAP5
0x8a6 AND
0x8a7 SWAP4
0x8a8 SWAP1
0x8a9 SWAP4
0x8aa DIV
0x8ab PUSH1 0x1f
0x8ad DUP2
0x8ae ADD
0x8af DUP5
0x8b0 SWAP1
0x8b1 DIV
0x8b2 DUP5
0x8b3 MUL
0x8b4 DUP3
0x8b5 ADD
0x8b6 DUP5
0x8b7 ADD
0x8b8 SWAP1
0x8b9 SWAP3
0x8ba MSTORE
0x8bb DUP2
0x8bc DUP2
0x8bd MSTORE
0x8be SWAP3
0x8bf SWAP2
0x8c0 DUP4
0x8c1 ADD
0x8c2 DUP3
0x8c3 DUP3
0x8c4 DUP1
0x8c5 ISZERO
0x8c6 PUSH2 0x910
0x8c9 JUMPI
---
0x88a: JUMPDEST 
0x88b: V714 = 0x4
0x88e: V715 = S[0x4]
0x88f: V716 = 0x40
0x892: V717 = M[0x40]
0x893: V718 = 0x20
0x895: V719 = 0x2
0x897: V720 = 0x1
0x89a: V721 = AND V715 0x1
0x89b: V722 = ISZERO V721
0x89c: V723 = 0x100
0x89f: V724 = MUL 0x100 V722
0x8a0: V725 = 0x0
0x8a2: V726 = NOT 0x0
0x8a3: V727 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V724
0x8a6: V728 = AND V715 V727
0x8aa: V729 = DIV V728 0x2
0x8ab: V730 = 0x1f
0x8ae: V731 = ADD V729 0x1f
0x8b1: V732 = DIV V731 0x20
0x8b3: V733 = MUL 0x20 V732
0x8b5: V734 = ADD V717 V733
0x8b7: V735 = ADD 0x20 V734
0x8ba: M[0x40] = V735
0x8bd: M[V717] = V729
0x8c1: V736 = ADD V717 0x20
0x8c5: V737 = ISZERO V729
0x8c6: V738 = 0x910
0x8c9: JUMPI 0x910 V737
---
Entry stack: [V12, 0x13f]
Stack pops: 0
Stack additions: [V717, 0x4, V729, V736, 0x4, V729]
Exit stack: [V12, 0x13f, V717, 0x4, V729, V736, 0x4, V729]

================================

Block 0x8ca
[0x8ca:0x8d1]
---
Predecessors: [0x88a]
Successors: [0x8d2, 0x8e5]
---
0x8ca DUP1
0x8cb PUSH1 0x1f
0x8cd LT
0x8ce PUSH2 0x8e5
0x8d1 JUMPI
---
0x8cb: V739 = 0x1f
0x8cd: V740 = LT 0x1f V729
0x8ce: V741 = 0x8e5
0x8d1: JUMPI 0x8e5 V740
---
Entry stack: [V12, 0x13f, V717, 0x4, V729, V736, 0x4, V729]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x13f, V717, 0x4, V729, V736, 0x4, V729]

================================

Block 0x8d2
[0x8d2:0x8e4]
---
Predecessors: [0x8ca]
Successors: [0x910]
---
0x8d2 PUSH2 0x100
0x8d5 DUP1
0x8d6 DUP4
0x8d7 SLOAD
0x8d8 DIV
0x8d9 MUL
0x8da DUP4
0x8db MSTORE
0x8dc SWAP2
0x8dd PUSH1 0x20
0x8df ADD
0x8e0 SWAP2
0x8e1 PUSH2 0x910
0x8e4 JUMP
---
0x8d2: V742 = 0x100
0x8d7: V743 = S[0x4]
0x8d8: V744 = DIV V743 0x100
0x8d9: V745 = MUL V744 0x100
0x8db: M[V736] = V745
0x8dd: V746 = 0x20
0x8df: V747 = ADD 0x20 V736
0x8e1: V748 = 0x910
0x8e4: JUMP 0x910
---
Entry stack: [V12, 0x13f, V717, 0x4, V729, V736, 0x4, V729]
Stack pops: 3
Stack additions: [V747, S1, S0]
Exit stack: [V12, 0x13f, V717, 0x4, V729, V747, 0x4, V729]

================================

Block 0x8e5
[0x8e5:0x8f2]
---
Predecessors: [0x8ca]
Successors: [0x8f3]
---
0x8e5 JUMPDEST
0x8e6 DUP3
0x8e7 ADD
0x8e8 SWAP2
0x8e9 SWAP1
0x8ea PUSH1 0x0
0x8ec MSTORE
0x8ed PUSH1 0x20
0x8ef PUSH1 0x0
0x8f1 SHA3
0x8f2 SWAP1
---
0x8e5: JUMPDEST 
0x8e7: V749 = ADD V736 V729
0x8ea: V750 = 0x0
0x8ec: M[0x0] = 0x4
0x8ed: V751 = 0x20
0x8ef: V752 = 0x0
0x8f1: V753 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x13f, V717, 0x4, V729, V736, 0x4, V729]
Stack pops: 3
Stack additions: [V749, V753, S2]
Exit stack: [V12, 0x13f, V717, 0x4, V729, V749, V753, V736]

================================

Block 0x8f3
[0x8f3:0x906]
---
Predecessors: [0x8e5, 0x8f3]
Successors: [0x8f3, 0x907]
---
0x8f3 JUMPDEST
0x8f4 DUP2
0x8f5 SLOAD
0x8f6 DUP2
0x8f7 MSTORE
0x8f8 SWAP1
0x8f9 PUSH1 0x1
0x8fb ADD
0x8fc SWAP1
0x8fd PUSH1 0x20
0x8ff ADD
0x900 DUP1
0x901 DUP4
0x902 GT
0x903 PUSH2 0x8f3
0x906 JUMPI
---
0x8f3: JUMPDEST 
0x8f5: V754 = S[S1]
0x8f7: M[S0] = V754
0x8f9: V755 = 0x1
0x8fb: V756 = ADD 0x1 S1
0x8fd: V757 = 0x20
0x8ff: V758 = ADD 0x20 S0
0x902: V759 = GT V749 V758
0x903: V760 = 0x8f3
0x906: JUMPI 0x8f3 V759
---
Entry stack: [V12, 0x13f, V717, 0x4, V729, V749, S1, S0]
Stack pops: 3
Stack additions: [S2, V756, V758]
Exit stack: [V12, 0x13f, V717, 0x4, V729, V749, V756, V758]

================================

Block 0x907
[0x907:0x90f]
---
Predecessors: [0x8f3]
Successors: [0x910]
---
0x907 DUP3
0x908 SWAP1
0x909 SUB
0x90a PUSH1 0x1f
0x90c AND
0x90d DUP3
0x90e ADD
0x90f SWAP2
---
0x909: V761 = SUB V758 V749
0x90a: V762 = 0x1f
0x90c: V763 = AND 0x1f V761
0x90e: V764 = ADD V749 V763
---
Entry stack: [V12, 0x13f, V717, 0x4, V729, V749, V756, V758]
Stack pops: 3
Stack additions: [V764, S1, S2]
Exit stack: [V12, 0x13f, V717, 0x4, V729, V764, V756, V749]

================================

Block 0x910
[0x910:0x917]
---
Predecessors: [0x88a, 0x8d2, 0x907]
Successors: [0x13f]
---
0x910 JUMPDEST
0x911 POP
0x912 POP
0x913 POP
0x914 POP
0x915 POP
0x916 DUP2
0x917 JUMP
---
0x910: JUMPDEST 
0x917: JUMP 0x13f
---
Entry stack: [V12, 0x13f, V717, 0x4, V729, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0x13f, V717]

================================

Block 0x918
[0x918:0x97d]
---
Predecessors: [0x395]
Successors: [0x97e, 0x97f]
---
0x918 JUMPDEST
0x919 PUSH1 0x7
0x91b SLOAD
0x91c PUSH1 0x40
0x91e DUP1
0x91f MLOAD
0x920 PUSH1 0x0
0x922 PUSH1 0x20
0x924 SWAP2
0x925 DUP3
0x926 ADD
0x927 DUP2
0x928 SWAP1
0x929 MSTORE
0x92a DUP3
0x92b MLOAD
0x92c PUSH32 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x94d DUP2
0x94e MSTORE
0x94f SWAP3
0x950 MLOAD
0x951 PUSH1 0x1
0x953 PUSH1 0xa0
0x955 PUSH1 0x2
0x957 EXP
0x958 SUB
0x959 SWAP1
0x95a SWAP5
0x95b AND
0x95c SWAP4
0x95d DUP5
0x95e SWAP4
0x95f PUSH4 0x18160ddd
0x964 SWAP4
0x965 PUSH1 0x4
0x967 DUP1
0x968 DUP4
0x969 ADD
0x96a SWAP5
0x96b SWAP2
0x96c SWAP4
0x96d SWAP3
0x96e DUP4
0x96f SWAP1
0x970 SUB
0x971 ADD
0x972 SWAP1
0x973 DUP3
0x974 SWAP1
0x975 DUP8
0x976 DUP1
0x977 EXTCODESIZE
0x978 ISZERO
0x979 ISZERO
0x97a PUSH2 0x97f
0x97d JUMPI
---
0x918: JUMPDEST 
0x919: V765 = 0x7
0x91b: V766 = S[0x7]
0x91c: V767 = 0x40
0x91f: V768 = M[0x40]
0x920: V769 = 0x0
0x922: V770 = 0x20
0x926: V771 = ADD 0x20 V768
0x929: M[V771] = 0x0
0x92b: V772 = M[0x40]
0x92c: V773 = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x94e: M[V772] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x950: V774 = M[0x40]
0x951: V775 = 0x1
0x953: V776 = 0xa0
0x955: V777 = 0x2
0x957: V778 = EXP 0x2 0xa0
0x958: V779 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95b: V780 = AND V766 0xffffffffffffffffffffffffffffffffffffffff
0x95f: V781 = 0x18160ddd
0x965: V782 = 0x4
0x969: V783 = ADD V772 0x4
0x970: V784 = SUB V772 V774
0x971: V785 = ADD V784 0x4
0x977: V786 = EXTCODESIZE V780
0x978: V787 = ISZERO V786
0x979: V788 = ISZERO V787
0x97a: V789 = 0x97f
0x97d: JUMPI 0x97f V788
---
Entry stack: [V12, 0x12d]
Stack pops: 0
Stack additions: [V780, V780, 0x18160ddd, V783, 0x20, V774, V785, V774, 0x0, V780]
Exit stack: [V12, 0x12d, V780, V780, 0x18160ddd, V783, 0x20, V774, V785, V774, 0x0, V780]

================================

Block 0x97e
[0x97e:0x97e]
---
Predecessors: [0x918]
Successors: []
---
0x97e INVALID
---
0x97e: INVALID 
---
Entry stack: [V12, 0x12d, V780, V780, 0x18160ddd, V783, 0x20, V774, V785, V774, 0x0, V780]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V780, V780, 0x18160ddd, V783, 0x20, V774, V785, V774, 0x0, V780]

================================

Block 0x97f
[0x97f:0x98b]
---
Predecessors: [0x918]
Successors: [0x98c, 0x98d]
---
0x97f JUMPDEST
0x980 PUSH2 0x2c6
0x983 GAS
0x984 SUB
0x985 CALL
0x986 ISZERO
0x987 ISZERO
0x988 PUSH2 0x98d
0x98b JUMPI
---
0x97f: JUMPDEST 
0x980: V790 = 0x2c6
0x983: V791 = GAS
0x984: V792 = SUB V791 0x2c6
0x985: V793 = CALL V792 V780 0x0 V774 V785 V774 0x20
0x986: V794 = ISZERO V793
0x987: V795 = ISZERO V794
0x988: V796 = 0x98d
0x98b: JUMPI 0x98d V795
---
Entry stack: [V12, 0x12d, V780, V780, 0x18160ddd, V783, 0x20, V774, V785, V774, 0x0, V780]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12d, V780, V780, 0x18160ddd, V783]

================================

Block 0x98c
[0x98c:0x98c]
---
Predecessors: [0x97f]
Successors: []
---
0x98c INVALID
---
0x98c: INVALID 
---
Entry stack: [V12, 0x12d, V780, V780, 0x18160ddd, V783]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V780, V780, 0x18160ddd, V783]

================================

Block 0x98d
[0x98d:0x99f]
---
Predecessors: [0x97f]
Successors: [0x9a0, 0x9fd]
---
0x98d JUMPDEST
0x98e POP
0x98f POP
0x990 PUSH1 0x40
0x992 MLOAD
0x993 MLOAD
0x994 PUSH1 0x0
0x996 SLOAD
0x997 EQ
0x998 SWAP1
0x999 POP
0x99a DUP1
0x99b ISZERO
0x99c PUSH2 0x9fd
0x99f JUMPI
---
0x98d: JUMPDEST 
0x990: V797 = 0x40
0x992: V798 = M[0x40]
0x993: V799 = M[V798]
0x994: V800 = 0x0
0x996: V801 = S[0x0]
0x997: V802 = EQ V801 V799
0x99b: V803 = ISZERO V802
0x99c: V804 = 0x9fd
0x99f: JUMPI 0x9fd V803
---
Entry stack: [V12, 0x12d, V780, V780, 0x18160ddd, V783]
Stack pops: 3
Stack additions: [V802]
Exit stack: [V12, 0x12d, V780, V802]

================================

Block 0x9a0
[0x9a0:0x9e4]
---
Predecessors: [0x98d]
Successors: [0x9e5, 0x9e6]
---
0x9a0 POP
0x9a1 DUP1
0x9a2 PUSH1 0x1
0x9a4 PUSH1 0xa0
0x9a6 PUSH1 0x2
0x9a8 EXP
0x9a9 SUB
0x9aa AND
0x9ab PUSH4 0x8d4e4083
0x9b0 PUSH1 0x0
0x9b2 PUSH1 0x40
0x9b4 MLOAD
0x9b5 PUSH1 0x20
0x9b7 ADD
0x9b8 MSTORE
0x9b9 PUSH1 0x40
0x9bb MLOAD
0x9bc DUP2
0x9bd PUSH4 0xffffffff
0x9c2 AND
0x9c3 PUSH1 0xe0
0x9c5 PUSH1 0x2
0x9c7 EXP
0x9c8 MUL
0x9c9 DUP2
0x9ca MSTORE
0x9cb PUSH1 0x4
0x9cd ADD
0x9ce DUP1
0x9cf SWAP1
0x9d0 POP
0x9d1 PUSH1 0x20
0x9d3 PUSH1 0x40
0x9d5 MLOAD
0x9d6 DUP1
0x9d7 DUP4
0x9d8 SUB
0x9d9 DUP2
0x9da PUSH1 0x0
0x9dc DUP8
0x9dd DUP1
0x9de EXTCODESIZE
0x9df ISZERO
0x9e0 ISZERO
0x9e1 PUSH2 0x9e6
0x9e4 JUMPI
---
0x9a2: V805 = 0x1
0x9a4: V806 = 0xa0
0x9a6: V807 = 0x2
0x9a8: V808 = EXP 0x2 0xa0
0x9a9: V809 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9aa: V810 = AND 0xffffffffffffffffffffffffffffffffffffffff V780
0x9ab: V811 = 0x8d4e4083
0x9b0: V812 = 0x0
0x9b2: V813 = 0x40
0x9b4: V814 = M[0x40]
0x9b5: V815 = 0x20
0x9b7: V816 = ADD 0x20 V814
0x9b8: M[V816] = 0x0
0x9b9: V817 = 0x40
0x9bb: V818 = M[0x40]
0x9bd: V819 = 0xffffffff
0x9c2: V820 = AND 0xffffffff 0x8d4e4083
0x9c3: V821 = 0xe0
0x9c5: V822 = 0x2
0x9c7: V823 = EXP 0x2 0xe0
0x9c8: V824 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8d4e4083
0x9ca: M[V818] = 0x8d4e408300000000000000000000000000000000000000000000000000000000
0x9cb: V825 = 0x4
0x9cd: V826 = ADD 0x4 V818
0x9d1: V827 = 0x20
0x9d3: V828 = 0x40
0x9d5: V829 = M[0x40]
0x9d8: V830 = SUB V826 V829
0x9da: V831 = 0x0
0x9de: V832 = EXTCODESIZE V810
0x9df: V833 = ISZERO V832
0x9e0: V834 = ISZERO V833
0x9e1: V835 = 0x9e6
0x9e4: JUMPI 0x9e6 V834
---
Entry stack: [V12, 0x12d, V780, V802]
Stack pops: 2
Stack additions: [S1, V810, 0x8d4e4083, V826, 0x20, V829, V830, V829, 0x0, V810]
Exit stack: [V12, 0x12d, V780, V810, 0x8d4e4083, V826, 0x20, V829, V830, V829, 0x0, V810]

================================

Block 0x9e5
[0x9e5:0x9e5]
---
Predecessors: [0x9a0]
Successors: []
---
0x9e5 INVALID
---
0x9e5: INVALID 
---
Entry stack: [V12, 0x12d, V780, V810, 0x8d4e4083, V826, 0x20, V829, V830, V829, 0x0, V810]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V780, V810, 0x8d4e4083, V826, 0x20, V829, V830, V829, 0x0, V810]

================================

Block 0x9e6
[0x9e6:0x9f2]
---
Predecessors: [0x9a0]
Successors: [0x9f3, 0x9f4]
---
0x9e6 JUMPDEST
0x9e7 PUSH2 0x2c6
0x9ea GAS
0x9eb SUB
0x9ec CALL
0x9ed ISZERO
0x9ee ISZERO
0x9ef PUSH2 0x9f4
0x9f2 JUMPI
---
0x9e6: JUMPDEST 
0x9e7: V836 = 0x2c6
0x9ea: V837 = GAS
0x9eb: V838 = SUB V837 0x2c6
0x9ec: V839 = CALL V838 V810 0x0 V829 V830 V829 0x20
0x9ed: V840 = ISZERO V839
0x9ee: V841 = ISZERO V840
0x9ef: V842 = 0x9f4
0x9f2: JUMPI 0x9f4 V841
---
Entry stack: [V12, 0x12d, V780, V810, 0x8d4e4083, V826, 0x20, V829, V830, V829, 0x0, V810]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12d, V780, V810, 0x8d4e4083, V826]

================================

Block 0x9f3
[0x9f3:0x9f3]
---
Predecessors: [0x9e6]
Successors: []
---
0x9f3 INVALID
---
0x9f3: INVALID 
---
Entry stack: [V12, 0x12d, V780, V810, 0x8d4e4083, V826]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V780, V810, 0x8d4e4083, V826]

================================

Block 0x9f4
[0x9f4:0x9fc]
---
Predecessors: [0x9e6]
Successors: [0x9fd]
---
0x9f4 JUMPDEST
0x9f5 POP
0x9f6 POP
0x9f7 PUSH1 0x40
0x9f9 MLOAD
0x9fa MLOAD
0x9fb SWAP1
0x9fc POP
---
0x9f4: JUMPDEST 
0x9f7: V843 = 0x40
0x9f9: V844 = M[0x40]
0x9fa: V845 = M[V844]
---
Entry stack: [V12, 0x12d, V780, V810, 0x8d4e4083, V826]
Stack pops: 3
Stack additions: [V845]
Exit stack: [V12, 0x12d, V780, V845]

================================

Block 0x9fd
[0x9fd:0xa02]
---
Predecessors: [0x98d, 0x9f4]
Successors: [0xa03, 0xa0b]
---
0x9fd JUMPDEST
0x9fe ISZERO
0x9ff PUSH2 0xa0b
0xa02 JUMPI
---
0x9fd: JUMPDEST 
0x9fe: V846 = ISZERO S0
0x9ff: V847 = 0xa0b
0xa02: JUMPI 0xa0b V846
---
Entry stack: [V12, 0x12d, V780, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x12d, V780]

================================

Block 0xa03
[0xa03:0xa0a]
---
Predecessors: [0x9fd]
Successors: [0xa11]
---
0xa03 TIMESTAMP
0xa04 PUSH1 0x6
0xa06 SSTORE
0xa07 PUSH2 0xa11
0xa0a JUMP
---
0xa03: V848 = TIMESTAMP
0xa04: V849 = 0x6
0xa06: S[0x6] = V848
0xa07: V850 = 0xa11
0xa0a: JUMP 0xa11
---
Entry stack: [V12, 0x12d, V780]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V780]

================================

Block 0xa0b
[0xa0b:0xa10]
---
Predecessors: [0x9fd]
Successors: []
---
0xa0b JUMPDEST
0xa0c PUSH1 0x0
0xa0e PUSH1 0x0
0xa10 REVERT
---
0xa0b: JUMPDEST 
0xa0c: V851 = 0x0
0xa0e: V852 = 0x0
0xa10: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d, V780]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V780]

================================

Block 0xa11
[0xa11:0xa11]
---
Predecessors: [0xa03]
Successors: [0xa12]
---
0xa11 JUMPDEST
---
0xa11: JUMPDEST 
---
Entry stack: [V12, 0x12d, V780]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V780]

================================

Block 0xa12
[0xa12:0xa14]
---
Predecessors: [0xa11]
Successors: [0x12d]
---
0xa12 JUMPDEST
0xa13 POP
0xa14 JUMP
---
0xa12: JUMPDEST 
0xa14: JUMP 0x12d
---
Entry stack: [V12, 0x12d, V780]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xa15
[0xa15:0xa2e]
---
Predecessors: [0x3a7]
Successors: [0xa2f]
---
0xa15 JUMPDEST
0xa16 PUSH1 0x1
0xa18 PUSH1 0xa0
0xa1a PUSH1 0x2
0xa1c EXP
0xa1d SUB
0xa1e DUP2
0xa1f AND
0xa20 PUSH1 0x0
0xa22 SWAP1
0xa23 DUP2
0xa24 MSTORE
0xa25 PUSH1 0x1
0xa27 PUSH1 0x20
0xa29 MSTORE
0xa2a PUSH1 0x40
0xa2c SWAP1
0xa2d SHA3
0xa2e SLOAD
---
0xa15: JUMPDEST 
0xa16: V853 = 0x1
0xa18: V854 = 0xa0
0xa1a: V855 = 0x2
0xa1c: V856 = EXP 0x2 0xa0
0xa1d: V857 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1f: V858 = AND V320 0xffffffffffffffffffffffffffffffffffffffff
0xa20: V859 = 0x0
0xa24: M[0x0] = V858
0xa25: V860 = 0x1
0xa27: V861 = 0x20
0xa29: M[0x20] = 0x1
0xa2a: V862 = 0x40
0xa2d: V863 = SHA3 0x0 0x40
0xa2e: V864 = S[V863]
---
Entry stack: [V12, 0x21c, V320]
Stack pops: 1
Stack additions: [S0, V864]
Exit stack: [V12, 0x21c, V320, V864]

================================

Block 0xa2f
[0xa2f:0xa33]
---
Predecessors: [0xa15]
Successors: [0x21c]
---
0xa2f JUMPDEST
0xa30 SWAP2
0xa31 SWAP1
0xa32 POP
0xa33 JUMP
---
0xa2f: JUMPDEST 
0xa33: JUMP 0x21c
---
Entry stack: [V12, 0x21c, V320, V864]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V864]

================================

Block 0xa34
[0xa34:0xa39]
---
Predecessors: [0x3d5]
Successors: [0x21c]
---
0xa34 JUMPDEST
0xa35 PUSH1 0x6
0xa37 SLOAD
0xa38 DUP2
0xa39 JUMP
---
0xa34: JUMPDEST 
0xa35: V865 = 0x6
0xa37: V866 = S[0x6]
0xa39: JUMP 0x21c
---
Entry stack: [V12, 0x21c]
Stack pops: 1
Stack additions: [S0, V866]
Exit stack: [V12, 0x21c, V866]

================================

Block 0xa3a
[0xa3a:0xa42]
---
Predecessors: [0x3f7]
Successors: [0x2b5]
---
0xa3a JUMPDEST
0xa3b PUSH1 0x5
0xa3d SLOAD
0xa3e PUSH1 0xff
0xa40 AND
0xa41 DUP2
0xa42 JUMP
---
0xa3a: JUMPDEST 
0xa3b: V867 = 0x5
0xa3d: V868 = S[0x5]
0xa3e: V869 = 0xff
0xa40: V870 = AND 0xff V868
0xa42: JUMP 0x2b5
---
Entry stack: [V12, 0x2b5]
Stack pops: 1
Stack additions: [S0, V870]
Exit stack: [V12, 0x2b5, V870]

================================

Block 0xa43
[0xa43:0xa79]
---
Predecessors: [0x41b]
Successors: [0x13f]
---
0xa43 JUMPDEST
0xa44 PUSH1 0x40
0xa46 DUP1
0xa47 MLOAD
0xa48 DUP1
0xa49 DUP3
0xa4a ADD
0xa4b SWAP1
0xa4c SWAP2
0xa4d MSTORE
0xa4e PUSH1 0x3
0xa50 DUP2
0xa51 MSTORE
0xa52 PUSH32 0x5449580000000000000000000000000000000000000000000000000000000000
0xa73 PUSH1 0x20
0xa75 DUP3
0xa76 ADD
0xa77 MSTORE
0xa78 DUP2
0xa79 JUMP
---
0xa43: JUMPDEST 
0xa44: V871 = 0x40
0xa47: V872 = M[0x40]
0xa4a: V873 = ADD 0x40 V872
0xa4d: M[0x40] = V873
0xa4e: V874 = 0x3
0xa51: M[V872] = 0x3
0xa52: V875 = 0x5449580000000000000000000000000000000000000000000000000000000000
0xa73: V876 = 0x20
0xa76: V877 = ADD V872 0x20
0xa77: M[V877] = 0x5449580000000000000000000000000000000000000000000000000000000000
0xa79: JUMP 0x13f
---
Entry stack: [V12, 0x13f]
Stack pops: 1
Stack additions: [S0, V872]
Exit stack: [V12, 0x13f, V872]

================================

Block 0xa7a
[0xa7a:0xa88]
---
Predecessors: [0x4b5]
Successors: [0x1f0]
---
0xa7a JUMPDEST
0xa7b PUSH1 0x8
0xa7d SLOAD
0xa7e PUSH1 0x1
0xa80 PUSH1 0xa0
0xa82 PUSH1 0x2
0xa84 EXP
0xa85 SUB
0xa86 AND
0xa87 DUP2
0xa88 JUMP
---
0xa7a: JUMPDEST 
0xa7b: V878 = 0x8
0xa7d: V879 = S[0x8]
0xa7e: V880 = 0x1
0xa80: V881 = 0xa0
0xa82: V882 = 0x2
0xa84: V883 = EXP 0x2 0xa0
0xa85: V884 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa86: V885 = AND 0xffffffffffffffffffffffffffffffffffffffff V879
0xa88: JUMP 0x1f0
---
Entry stack: [V12, 0x1f0]
Stack pops: 1
Stack additions: [S0, V885]
Exit stack: [V12, 0x1f0, V885]

================================

Block 0xa89
[0xa89:0xa95]
---
Predecessors: [0x4e1]
Successors: [0xa96, 0xa9b]
---
0xa89 JUMPDEST
0xa8a PUSH1 0x5
0xa8c SLOAD
0xa8d PUSH1 0xff
0xa8f AND
0xa90 ISZERO
0xa91 ISZERO
0xa92 PUSH2 0xa9b
0xa95 JUMPI
---
0xa89: JUMPDEST 
0xa8a: V886 = 0x5
0xa8c: V887 = S[0x5]
0xa8d: V888 = 0xff
0xa8f: V889 = AND 0xff V887
0xa90: V890 = ISZERO V889
0xa91: V891 = ISZERO V890
0xa92: V892 = 0xa9b
0xa95: JUMPI 0xa9b V891
---
Entry stack: [V12, 0x12d, V429, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V429, V431]

================================

Block 0xa96
[0xa96:0xa9a]
---
Predecessors: [0xa89]
Successors: []
---
0xa96 PUSH1 0x0
0xa98 PUSH1 0x0
0xa9a REVERT
---
0xa96: V893 = 0x0
0xa98: V894 = 0x0
0xa9a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d, V429, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V429, V431]

================================

Block 0xa9b
[0xa9b:0xaa4]
---
Predecessors: [0xa89]
Successors: [0xdfd]
---
0xa9b JUMPDEST
0xa9c PUSH2 0x778
0xa9f DUP3
0xaa0 DUP3
0xaa1 PUSH2 0xdfd
0xaa4 JUMP
---
0xa9b: JUMPDEST 
0xa9c: V895 = 0x778
0xaa1: V896 = 0xdfd
0xaa4: JUMP 0xdfd
---
Entry stack: [V12, 0x12d, V429, V431]
Stack pops: 2
Stack additions: [S1, S0, 0x778, S1, S0]
Exit stack: [V12, 0x12d, V429, V431, 0x778, V429, V431]

================================

Block 0xaa5
[0xaa5:0xaa5]
---
Predecessors: []
Successors: [0xaa6]
---
0xaa5 JUMPDEST
---
0xaa5: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaa6
[0xaa6:0xaa6]
---
Predecessors: [0xaa5]
Successors: [0xaa7]
---
0xaa6 JUMPDEST
---
0xaa6: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaa7
[0xaa7:0xaaa]
---
Predecessors: [0xaa6]
Successors: []
Has unresolved jump.
---
0xaa7 JUMPDEST
0xaa8 POP
0xaa9 POP
0xaaa JUMP
---
0xaa7: JUMPDEST 
0xaaa: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xaab
[0xaab:0xab9]
---
Predecessors: [0x502]
Successors: [0x21c]
---
0xaab JUMPDEST
0xaac PUSH11 0x33b2e3c9fd0803ce800000
0xab8 DUP2
0xab9 JUMP
---
0xaab: JUMPDEST 
0xaac: V897 = 0x33b2e3c9fd0803ce800000
0xab9: JUMP 0x21c
---
Entry stack: [V12, 0x21c]
Stack pops: 1
Stack additions: [S0, 0x33b2e3c9fd0803ce800000]
Exit stack: [V12, 0x21c, 0x33b2e3c9fd0803ce800000]

================================

Block 0xaba
[0xaba:0xae0]
---
Predecessors: [0x524]
Successors: [0xae1]
---
0xaba JUMPDEST
0xabb PUSH1 0x1
0xabd PUSH1 0xa0
0xabf PUSH1 0x2
0xac1 EXP
0xac2 SUB
0xac3 DUP1
0xac4 DUP4
0xac5 AND
0xac6 PUSH1 0x0
0xac8 SWAP1
0xac9 DUP2
0xaca MSTORE
0xacb PUSH1 0x2
0xacd PUSH1 0x20
0xacf SWAP1
0xad0 DUP2
0xad1 MSTORE
0xad2 PUSH1 0x40
0xad4 DUP1
0xad5 DUP4
0xad6 SHA3
0xad7 SWAP4
0xad8 DUP6
0xad9 AND
0xada DUP4
0xadb MSTORE
0xadc SWAP3
0xadd SWAP1
0xade MSTORE
0xadf SHA3
0xae0 SLOAD
---
0xaba: JUMPDEST 
0xabb: V898 = 0x1
0xabd: V899 = 0xa0
0xabf: V900 = 0x2
0xac1: V901 = EXP 0x2 0xa0
0xac2: V902 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac5: V903 = AND V455 0xffffffffffffffffffffffffffffffffffffffff
0xac6: V904 = 0x0
0xaca: M[0x0] = V903
0xacb: V905 = 0x2
0xacd: V906 = 0x20
0xad1: M[0x20] = 0x2
0xad2: V907 = 0x40
0xad6: V908 = SHA3 0x0 0x40
0xad9: V909 = AND V458 0xffffffffffffffffffffffffffffffffffffffff
0xadb: M[0x0] = V909
0xade: M[0x20] = V908
0xadf: V910 = SHA3 0x0 0x40
0xae0: V911 = S[V910]
---
Entry stack: [V12, 0x21c, V455, V458]
Stack pops: 2
Stack additions: [S1, S0, V911]
Exit stack: [V12, 0x21c, V455, V458, V911]

================================

Block 0xae1
[0xae1:0xae6]
---
Predecessors: [0xaba]
Successors: [0x21c]
---
0xae1 JUMPDEST
0xae2 SWAP3
0xae3 SWAP2
0xae4 POP
0xae5 POP
0xae6 JUMP
---
0xae1: JUMPDEST 
0xae6: JUMP 0x21c
---
Entry stack: [V12, 0x21c, V455, V458, V911]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, V911]

================================

Block 0xae7
[0xae7:0xb4a]
---
Predecessors: [0x558]
Successors: [0xb4b, 0xb4c]
---
0xae7 JUMPDEST
0xae8 PUSH1 0x7
0xaea SLOAD
0xaeb PUSH1 0x40
0xaed DUP1
0xaee MLOAD
0xaef PUSH1 0x0
0xaf1 PUSH1 0x20
0xaf3 SWAP2
0xaf4 DUP3
0xaf5 ADD
0xaf6 DUP2
0xaf7 SWAP1
0xaf8 MSTORE
0xaf9 DUP3
0xafa MLOAD
0xafb PUSH32 0x8d4e408300000000000000000000000000000000000000000000000000000000
0xb1c DUP2
0xb1d MSTORE
0xb1e SWAP3
0xb1f MLOAD
0xb20 PUSH1 0x1
0xb22 PUSH1 0xa0
0xb24 PUSH1 0x2
0xb26 EXP
0xb27 SUB
0xb28 SWAP1
0xb29 SWAP5
0xb2a AND
0xb2b SWAP4
0xb2c SWAP1
0xb2d SWAP3
0xb2e DUP5
0xb2f SWAP3
0xb30 PUSH4 0x8d4e4083
0xb35 SWAP3
0xb36 PUSH1 0x4
0xb38 DUP1
0xb39 DUP5
0xb3a ADD
0xb3b SWAP4
0xb3c DUP3
0xb3d SWAP1
0xb3e SUB
0xb3f ADD
0xb40 DUP2
0xb41 DUP8
0xb42 DUP8
0xb43 DUP1
0xb44 EXTCODESIZE
0xb45 ISZERO
0xb46 ISZERO
0xb47 PUSH2 0xb4c
0xb4a JUMPI
---
0xae7: JUMPDEST 
0xae8: V912 = 0x7
0xaea: V913 = S[0x7]
0xaeb: V914 = 0x40
0xaee: V915 = M[0x40]
0xaef: V916 = 0x0
0xaf1: V917 = 0x20
0xaf5: V918 = ADD 0x20 V915
0xaf8: M[V918] = 0x0
0xafa: V919 = M[0x40]
0xafb: V920 = 0x8d4e408300000000000000000000000000000000000000000000000000000000
0xb1d: M[V919] = 0x8d4e408300000000000000000000000000000000000000000000000000000000
0xb1f: V921 = M[0x40]
0xb20: V922 = 0x1
0xb22: V923 = 0xa0
0xb24: V924 = 0x2
0xb26: V925 = EXP 0x2 0xa0
0xb27: V926 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2a: V927 = AND V913 0xffffffffffffffffffffffffffffffffffffffff
0xb30: V928 = 0x8d4e4083
0xb36: V929 = 0x4
0xb3a: V930 = ADD V919 0x4
0xb3e: V931 = SUB V919 V921
0xb3f: V932 = ADD V931 0x4
0xb44: V933 = EXTCODESIZE V927
0xb45: V934 = ISZERO V933
0xb46: V935 = ISZERO V934
0xb47: V936 = 0xb4c
0xb4a: JUMPI 0xb4c V935
---
Entry stack: [V12, 0x12d, V477]
Stack pops: 0
Stack additions: [V927, 0x0, V927, 0x8d4e4083, V930, 0x20, V921, V932, V921, 0x0, V927]
Exit stack: [V12, 0x12d, V477, V927, 0x0, V927, 0x8d4e4083, V930, 0x20, V921, V932, V921, 0x0, V927]

================================

Block 0xb4b
[0xb4b:0xb4b]
---
Predecessors: [0xae7]
Successors: []
---
0xb4b INVALID
---
0xb4b: INVALID 
---
Entry stack: [V12, 0x12d, V477, V927, 0x0, V927, 0x8d4e4083, V930, 0x20, V921, V932, V921, 0x0, V927]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V477, V927, 0x0, V927, 0x8d4e4083, V930, 0x20, V921, V932, V921, 0x0, V927]

================================

Block 0xb4c
[0xb4c:0xb58]
---
Predecessors: [0xae7]
Successors: [0xb59, 0xb5a]
---
0xb4c JUMPDEST
0xb4d PUSH2 0x2c6
0xb50 GAS
0xb51 SUB
0xb52 CALL
0xb53 ISZERO
0xb54 ISZERO
0xb55 PUSH2 0xb5a
0xb58 JUMPI
---
0xb4c: JUMPDEST 
0xb4d: V937 = 0x2c6
0xb50: V938 = GAS
0xb51: V939 = SUB V938 0x2c6
0xb52: V940 = CALL V939 V927 0x0 V921 V932 V921 0x20
0xb53: V941 = ISZERO V940
0xb54: V942 = ISZERO V941
0xb55: V943 = 0xb5a
0xb58: JUMPI 0xb5a V942
---
Entry stack: [V12, 0x12d, V477, V927, 0x0, V927, 0x8d4e4083, V930, 0x20, V921, V932, V921, 0x0, V927]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12d, V477, V927, 0x0, V927, 0x8d4e4083, V930]

================================

Block 0xb59
[0xb59:0xb59]
---
Predecessors: [0xb4c]
Successors: []
---
0xb59 INVALID
---
0xb59: INVALID 
---
Entry stack: [V12, 0x12d, V477, V927, 0x0, V927, 0x8d4e4083, V930]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V477, V927, 0x0, V927, 0x8d4e4083, V930]

================================

Block 0xb5a
[0xb5a:0xb67]
---
Predecessors: [0xb4c]
Successors: [0xb68, 0xb6d]
---
0xb5a JUMPDEST
0xb5b POP
0xb5c POP
0xb5d PUSH1 0x40
0xb5f MLOAD
0xb60 MLOAD
0xb61 ISZERO
0xb62 SWAP1
0xb63 POP
0xb64 PUSH2 0xb6d
0xb67 JUMPI
---
0xb5a: JUMPDEST 
0xb5d: V944 = 0x40
0xb5f: V945 = M[0x40]
0xb60: V946 = M[V945]
0xb61: V947 = ISZERO V946
0xb64: V948 = 0xb6d
0xb67: JUMPI 0xb6d V947
---
Entry stack: [V12, 0x12d, V477, V927, 0x0, V927, 0x8d4e4083, V930]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x12d, V477, V927, 0x0]

================================

Block 0xb68
[0xb68:0xb6c]
---
Predecessors: [0xb5a]
Successors: []
---
0xb68 PUSH1 0x0
0xb6a PUSH1 0x0
0xb6c REVERT
---
0xb68: V949 = 0x0
0xb6a: V950 = 0x0
0xb6c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d, V477, V927, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V477, V927, 0x0]

================================

Block 0xb6d
[0xb6d:0xb8e]
---
Predecessors: [0xb5a]
Successors: [0xb8f, 0xb94]
---
0xb6d JUMPDEST
0xb6e PUSH1 0x1
0xb70 PUSH1 0xa0
0xb72 PUSH1 0x2
0xb74 EXP
0xb75 SUB
0xb76 DUP4
0xb77 AND
0xb78 PUSH1 0x0
0xb7a SWAP1
0xb7b DUP2
0xb7c MSTORE
0xb7d PUSH1 0x3
0xb7f PUSH1 0x20
0xb81 MSTORE
0xb82 PUSH1 0x40
0xb84 SWAP1
0xb85 SHA3
0xb86 SLOAD
0xb87 PUSH1 0xff
0xb89 AND
0xb8a ISZERO
0xb8b PUSH2 0xb94
0xb8e JUMPI
---
0xb6d: JUMPDEST 
0xb6e: V951 = 0x1
0xb70: V952 = 0xa0
0xb72: V953 = 0x2
0xb74: V954 = EXP 0x2 0xa0
0xb75: V955 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb77: V956 = AND V477 0xffffffffffffffffffffffffffffffffffffffff
0xb78: V957 = 0x0
0xb7c: M[0x0] = V956
0xb7d: V958 = 0x3
0xb7f: V959 = 0x20
0xb81: M[0x20] = 0x3
0xb82: V960 = 0x40
0xb85: V961 = SHA3 0x0 0x40
0xb86: V962 = S[V961]
0xb87: V963 = 0xff
0xb89: V964 = AND 0xff V962
0xb8a: V965 = ISZERO V964
0xb8b: V966 = 0xb94
0xb8e: JUMPI 0xb94 V965
---
Entry stack: [V12, 0x12d, V477, V927, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x12d, V477, V927, 0x0]

================================

Block 0xb8f
[0xb8f:0xb93]
---
Predecessors: [0xb6d]
Successors: []
---
0xb8f PUSH1 0x0
0xb91 PUSH1 0x0
0xb93 REVERT
---
0xb8f: V967 = 0x0
0xb91: V968 = 0x0
0xb93: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d, V477, V927, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V477, V927, 0x0]

================================

Block 0xb94
[0xb94:0xbf2]
---
Predecessors: [0xb6d]
Successors: [0xbf3, 0xbf4]
---
0xb94 JUMPDEST
0xb95 DUP2
0xb96 PUSH1 0x1
0xb98 PUSH1 0xa0
0xb9a PUSH1 0x2
0xb9c EXP
0xb9d SUB
0xb9e AND
0xb9f PUSH4 0x70a08231
0xba4 DUP5
0xba5 PUSH1 0x0
0xba7 PUSH1 0x40
0xba9 MLOAD
0xbaa PUSH1 0x20
0xbac ADD
0xbad MSTORE
0xbae PUSH1 0x40
0xbb0 MLOAD
0xbb1 DUP3
0xbb2 PUSH4 0xffffffff
0xbb7 AND
0xbb8 PUSH1 0xe0
0xbba PUSH1 0x2
0xbbc EXP
0xbbd MUL
0xbbe DUP2
0xbbf MSTORE
0xbc0 PUSH1 0x4
0xbc2 ADD
0xbc3 DUP1
0xbc4 DUP3
0xbc5 PUSH1 0x1
0xbc7 PUSH1 0xa0
0xbc9 PUSH1 0x2
0xbcb EXP
0xbcc SUB
0xbcd AND
0xbce PUSH1 0x1
0xbd0 PUSH1 0xa0
0xbd2 PUSH1 0x2
0xbd4 EXP
0xbd5 SUB
0xbd6 AND
0xbd7 DUP2
0xbd8 MSTORE
0xbd9 PUSH1 0x20
0xbdb ADD
0xbdc SWAP2
0xbdd POP
0xbde POP
0xbdf PUSH1 0x20
0xbe1 PUSH1 0x40
0xbe3 MLOAD
0xbe4 DUP1
0xbe5 DUP4
0xbe6 SUB
0xbe7 DUP2
0xbe8 PUSH1 0x0
0xbea DUP8
0xbeb DUP1
0xbec EXTCODESIZE
0xbed ISZERO
0xbee ISZERO
0xbef PUSH2 0xbf4
0xbf2 JUMPI
---
0xb94: JUMPDEST 
0xb96: V969 = 0x1
0xb98: V970 = 0xa0
0xb9a: V971 = 0x2
0xb9c: V972 = EXP 0x2 0xa0
0xb9d: V973 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9e: V974 = AND 0xffffffffffffffffffffffffffffffffffffffff V927
0xb9f: V975 = 0x70a08231
0xba5: V976 = 0x0
0xba7: V977 = 0x40
0xba9: V978 = M[0x40]
0xbaa: V979 = 0x20
0xbac: V980 = ADD 0x20 V978
0xbad: M[V980] = 0x0
0xbae: V981 = 0x40
0xbb0: V982 = M[0x40]
0xbb2: V983 = 0xffffffff
0xbb7: V984 = AND 0xffffffff 0x70a08231
0xbb8: V985 = 0xe0
0xbba: V986 = 0x2
0xbbc: V987 = EXP 0x2 0xe0
0xbbd: V988 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xbbf: M[V982] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xbc0: V989 = 0x4
0xbc2: V990 = ADD 0x4 V982
0xbc5: V991 = 0x1
0xbc7: V992 = 0xa0
0xbc9: V993 = 0x2
0xbcb: V994 = EXP 0x2 0xa0
0xbcc: V995 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbcd: V996 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0xbce: V997 = 0x1
0xbd0: V998 = 0xa0
0xbd2: V999 = 0x2
0xbd4: V1000 = EXP 0x2 0xa0
0xbd5: V1001 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd6: V1002 = AND 0xffffffffffffffffffffffffffffffffffffffff V996
0xbd8: M[V990] = V1002
0xbd9: V1003 = 0x20
0xbdb: V1004 = ADD 0x20 V990
0xbdf: V1005 = 0x20
0xbe1: V1006 = 0x40
0xbe3: V1007 = M[0x40]
0xbe6: V1008 = SUB V1004 V1007
0xbe8: V1009 = 0x0
0xbec: V1010 = EXTCODESIZE V974
0xbed: V1011 = ISZERO V1010
0xbee: V1012 = ISZERO V1011
0xbef: V1013 = 0xbf4
0xbf2: JUMPI 0xbf4 V1012
---
Entry stack: [V12, 0x12d, V477, V927, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V974, 0x70a08231, V1004, 0x20, V1007, V1008, V1007, 0x0, V974]
Exit stack: [V12, 0x12d, V477, V927, 0x0, V974, 0x70a08231, V1004, 0x20, V1007, V1008, V1007, 0x0, V974]

================================

Block 0xbf3
[0xbf3:0xbf3]
---
Predecessors: [0xb94]
Successors: []
---
0xbf3 INVALID
---
0xbf3: INVALID 
---
Entry stack: [V12, 0x12d, V477, V927, 0x0, V974, 0x70a08231, V1004, 0x20, V1007, V1008, V1007, 0x0, V974]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V477, V927, 0x0, V974, 0x70a08231, V1004, 0x20, V1007, V1008, V1007, 0x0, V974]

================================

Block 0xbf4
[0xbf4:0xc00]
---
Predecessors: [0xb94]
Successors: [0xc01, 0xc02]
---
0xbf4 JUMPDEST
0xbf5 PUSH2 0x2c6
0xbf8 GAS
0xbf9 SUB
0xbfa CALL
0xbfb ISZERO
0xbfc ISZERO
0xbfd PUSH2 0xc02
0xc00 JUMPI
---
0xbf4: JUMPDEST 
0xbf5: V1014 = 0x2c6
0xbf8: V1015 = GAS
0xbf9: V1016 = SUB V1015 0x2c6
0xbfa: V1017 = CALL V1016 V974 0x0 V1007 V1008 V1007 0x20
0xbfb: V1018 = ISZERO V1017
0xbfc: V1019 = ISZERO V1018
0xbfd: V1020 = 0xc02
0xc00: JUMPI 0xc02 V1019
---
Entry stack: [V12, 0x12d, V477, V927, 0x0, V974, 0x70a08231, V1004, 0x20, V1007, V1008, V1007, 0x0, V974]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x12d, V477, V927, 0x0, V974, 0x70a08231, V1004]

================================

Block 0xc01
[0xc01:0xc01]
---
Predecessors: [0xbf4]
Successors: []
---
0xc01 INVALID
---
0xc01: INVALID 
---
Entry stack: [V12, 0x12d, V477, V927, 0x0, V974, 0x70a08231, V1004]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V477, V927, 0x0, V974, 0x70a08231, V1004]

================================

Block 0xc02
[0xc02:0xc13]
---
Predecessors: [0xbf4]
Successors: [0xc14, 0xc19]
---
0xc02 JUMPDEST
0xc03 POP
0xc04 POP
0xc05 PUSH1 0x40
0xc07 MLOAD
0xc08 MLOAD
0xc09 SWAP2
0xc0a POP
0xc0b POP
0xc0c PUSH1 0x0
0xc0e DUP2
0xc0f GT
0xc10 PUSH2 0xc19
0xc13 JUMPI
---
0xc02: JUMPDEST 
0xc05: V1021 = 0x40
0xc07: V1022 = M[0x40]
0xc08: V1023 = M[V1022]
0xc0c: V1024 = 0x0
0xc0f: V1025 = GT V1023 0x0
0xc10: V1026 = 0xc19
0xc13: JUMPI 0xc19 V1025
---
Entry stack: [V12, 0x12d, V477, V927, 0x0, V974, 0x70a08231, V1004]
Stack pops: 4
Stack additions: [V1023]
Exit stack: [V12, 0x12d, V477, V927, V1023]

================================

Block 0xc14
[0xc14:0xc18]
---
Predecessors: [0xc02]
Successors: []
---
0xc14 PUSH1 0x0
0xc16 PUSH1 0x0
0xc18 REVERT
---
0xc14: V1027 = 0x0
0xc16: V1028 = 0x0
0xc18: REVERT 0x0 0x0
---
Entry stack: [V12, 0x12d, V477, V927, V1023]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, V477, V927, V1023]

================================

Block 0xc19
[0xc19:0xc8b]
---
Predecessors: [0xc02]
Successors: [0xc8c]
---
0xc19 JUMPDEST
0xc1a PUSH1 0x1
0xc1c PUSH1 0xa0
0xc1e PUSH1 0x2
0xc20 EXP
0xc21 SUB
0xc22 DUP1
0xc23 DUP5
0xc24 AND
0xc25 PUSH1 0x0
0xc27 DUP2
0xc28 DUP2
0xc29 MSTORE
0xc2a PUSH1 0x3
0xc2c PUSH1 0x20
0xc2e SWAP1
0xc2f DUP2
0xc30 MSTORE
0xc31 PUSH1 0x40
0xc33 DUP1
0xc34 DUP4
0xc35 SHA3
0xc36 DUP1
0xc37 SLOAD
0xc38 PUSH1 0xff
0xc3a NOT
0xc3b AND
0xc3c PUSH1 0x1
0xc3e SWAP1
0xc3f DUP2
0xc40 OR
0xc41 SWAP1
0xc42 SWAP2
0xc43 SSTORE
0xc44 DUP4
0xc45 SLOAD
0xc46 DUP8
0xc47 ADD
0xc48 DUP5
0xc49 SSTORE
0xc4a DUP3
0xc4b MSTORE
0xc4c SWAP2
0xc4d DUP3
0xc4e SWAP1
0xc4f SHA3
0xc50 DUP1
0xc51 SLOAD
0xc52 DUP7
0xc53 ADD
0xc54 SWAP1
0xc55 SSTORE
0xc56 DUP2
0xc57 MLOAD
0xc58 DUP6
0xc59 DUP2
0xc5a MSTORE
0xc5b SWAP2
0xc5c MLOAD
0xc5d SWAP3
0xc5e SWAP4
0xc5f ADDRESS
0xc60 AND
0xc61 SWAP3
0xc62 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc83 SWAP3
0xc84 DUP2
0xc85 SWAP1
0xc86 SUB
0xc87 SWAP1
0xc88 SWAP2
0xc89 ADD
0xc8a SWAP1
0xc8b LOG3
---
0xc19: JUMPDEST 
0xc1a: V1029 = 0x1
0xc1c: V1030 = 0xa0
0xc1e: V1031 = 0x2
0xc20: V1032 = EXP 0x2 0xa0
0xc21: V1033 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc24: V1034 = AND V477 0xffffffffffffffffffffffffffffffffffffffff
0xc25: V1035 = 0x0
0xc29: M[0x0] = V1034
0xc2a: V1036 = 0x3
0xc2c: V1037 = 0x20
0xc30: M[0x20] = 0x3
0xc31: V1038 = 0x40
0xc35: V1039 = SHA3 0x0 0x40
0xc37: V1040 = S[V1039]
0xc38: V1041 = 0xff
0xc3a: V1042 = NOT 0xff
0xc3b: V1043 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1040
0xc3c: V1044 = 0x1
0xc40: V1045 = OR 0x1 V1043
0xc43: S[V1039] = V1045
0xc45: V1046 = S[0x0]
0xc47: V1047 = ADD V1023 V1046
0xc49: S[0x0] = V1047
0xc4b: M[0x20] = 0x1
0xc4f: V1048 = SHA3 0x0 0x40
0xc51: V1049 = S[V1048]
0xc53: V1050 = ADD V1023 V1049
0xc55: S[V1048] = V1050
0xc57: V1051 = M[0x40]
0xc5a: M[V1051] = V1023
0xc5c: V1052 = M[0x40]
0xc5f: V1053 = ADDRESS
0xc60: V1054 = AND V1053 0xffffffffffffffffffffffffffffffffffffffff
0xc62: V1055 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc86: V1056 = SUB V1051 V1052
0xc89: V1057 = ADD 0x20 V1056
0xc8b: LOG V1052 V1057 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1054 V1034
---
Entry stack: [V12, 0x12d, V477, V927, V1023]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x12d, V477, V927, V1023]

================================

Block 0xc8c
[0xc8c:0xc90]
---
Predecessors: [0xc19]
Successors: [0x12d]
---
0xc8c JUMPDEST
0xc8d POP
0xc8e POP
0xc8f POP
0xc90 JUMP
---
0xc8c: JUMPDEST 
0xc90: JUMP 0x12d
---
Entry stack: [V12, 0x12d, V477, V927, V1023]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0xc91
[0xc91:0xc9d]
---
Predecessors: [0x5ce]
Successors: [0xc9e, 0xcad]
---
0xc91 JUMPDEST
0xc92 PUSH1 0x0
0xc94 DUP3
0xc95 DUP3
0xc96 MUL
0xc97 DUP4
0xc98 ISZERO
0xc99 DUP1
0xc9a PUSH2 0xcad
0xc9d JUMPI
---
0xc91: JUMPDEST 
0xc92: V1058 = 0x0
0xc96: V1059 = MUL 0x411 V516
0xc98: V1060 = ISZERO V516
0xc9a: V1061 = 0xcad
0xc9d: JUMPI 0xcad V1060
---
Entry stack: [V12, S9, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, 0x5da, V516, 0x411]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1059, V1060]
Exit stack: [V12, S9, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, 0x5da, V516, 0x411, 0x0, V1059, V1060]

================================

Block 0xc9e
[0xc9e:0xca8]
---
Predecessors: [0xc91]
Successors: [0xca9, 0xcaa]
---
0xc9e POP
0xc9f DUP3
0xca0 DUP5
0xca1 DUP3
0xca2 DUP2
0xca3 ISZERO
0xca4 ISZERO
0xca5 PUSH2 0xcaa
0xca8 JUMPI
---
0xca3: V1062 = ISZERO V516
0xca4: V1063 = ISZERO V1062
0xca5: V1064 = 0xcaa
0xca8: JUMPI 0xcaa V1063
---
Entry stack: [V12, S12, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, 0x5da, V516, 0x411, 0x0, V1059, V1060]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, S12, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, 0x5da, V516, 0x411, 0x0, V1059, 0x411, V516, V1059]

================================

Block 0xca9
[0xca9:0xca9]
---
Predecessors: [0xc9e]
Successors: []
---
0xca9 INVALID
---
0xca9: INVALID 
---
Entry stack: [V12, S14, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, 0x5da, V516, 0x411, 0x0, V1059, 0x411, V516, V1059]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, 0x5da, V516, 0x411, 0x0, V1059, 0x411, V516, V1059]

================================

Block 0xcaa
[0xcaa:0xcac]
---
Predecessors: [0xc9e]
Successors: [0xcad]
---
0xcaa JUMPDEST
0xcab DIV
0xcac EQ
---
0xcaa: JUMPDEST 
0xcab: V1065 = DIV V1059 V516
0xcac: V1066 = EQ V1065 0x411
---
Entry stack: [V12, S14, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, 0x5da, V516, 0x411, 0x0, V1059, 0x411, V516, V1059]
Stack pops: 3
Stack additions: [V1066]
Exit stack: [V12, S14, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, 0x5da, V516, 0x411, 0x0, V1059, V1066]

================================

Block 0xcad
[0xcad:0xcb3]
---
Predecessors: [0xc91, 0xcaa]
Successors: [0xcb4, 0xcb5]
---
0xcad JUMPDEST
0xcae ISZERO
0xcaf ISZERO
0xcb0 PUSH2 0xcb5
0xcb3 JUMPI
---
0xcad: JUMPDEST 
0xcae: V1067 = ISZERO S0
0xcaf: V1068 = ISZERO V1067
0xcb0: V1069 = 0xcb5
0xcb3: JUMPI 0xcb5 V1068
---
Entry stack: [V12, S12, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, 0x5da, V516, 0x411, 0x0, V1059, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, 0x5da, V516, 0x411, 0x0, V1059]

================================

Block 0xcb4
[0xcb4:0xcb4]
---
Predecessors: [0xcad]
Successors: []
---
0xcb4 INVALID
---
0xcb4: INVALID 
---
Entry stack: [V12, S11, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, 0x5da, V516, 0x411, 0x0, V1059]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, {0x129, 0x12d}, 0x0, 0x0, 0x0, V489, 0x597b97bf, 0x5da, V516, 0x411, 0x0, V1059]

================================

Block 0xcb5
[0xcb5:0xcb8]
---
Predecessors: [0xcad, 0xcc0]
Successors: [0xcb9]
---
0xcb5 JUMPDEST
0xcb6 DUP1
0xcb7 SWAP2
0xcb8 POP
---
0xcb5: JUMPDEST 
---
Entry stack: [V12, 0x12d, S12, S11, S10, S9, S8, S7, S6, S5, {0x5da, 0x5e8, 0xd35, 0xe5b}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0x12d, S12, S11, S10, S9, S8, S7, S6, S5, {0x5da, 0x5e8, 0xd35, 0xe5b}, S3, S2, S0, S0]

================================

Block 0xcb9
[0xcb9:0xcbf]
---
Predecessors: [0xcb5]
Successors: [0x5da, 0x5e8, 0xd35, 0xe5b]
---
0xcb9 JUMPDEST
0xcba POP
0xcbb SWAP3
0xcbc SWAP2
0xcbd POP
0xcbe POP
0xcbf JUMP
---
0xcb9: JUMPDEST 
0xcbf: JUMP {0x5da, 0x5e8, 0xd35, 0xe5b}
---
Entry stack: [V12, 0x12d, S12, S11, S10, S9, S8, S7, S6, S5, {0x5da, 0x5e8, 0xd35, 0xe5b}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x12d, S12, S11, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0xcc0
[0xcc0:0xccd]
---
Predecessors: [0x5da, 0xcf1, 0xe26]
Successors: [0xcb5, 0xcce]
---
0xcc0 JUMPDEST
0xcc1 PUSH1 0x0
0xcc3 DUP3
0xcc4 DUP3
0xcc5 ADD
0xcc6 DUP4
0xcc7 DUP2
0xcc8 LT
0xcc9 ISZERO
0xcca PUSH2 0xcb5
0xccd JUMPI
---
0xcc0: JUMPDEST 
0xcc1: V1070 = 0x0
0xcc5: V1071 = ADD S0 S1
0xcc8: V1072 = LT V1071 S1
0xcc9: V1073 = ISZERO V1072
0xcca: V1074 = 0xcb5
0xccd: JUMPI 0xcb5 V1073
---
Entry stack: [V12, 0x12d, S10, S9, S8, S7, S6, S5, S4, S3, {0x5e8, 0xd35, 0xe5b}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1071]
Exit stack: [V12, 0x12d, S10, S9, S8, S7, S6, S5, S4, S3, {0x5e8, 0xd35, 0xe5b}, S1, S0, 0x0, V1071]

================================

Block 0xcce
[0xcce:0xcce]
---
Predecessors: [0xcc0]
Successors: []
---
0xcce INVALID
---
0xcce: INVALID 
---
Entry stack: [V12, 0x12d, S12, S11, S10, S9, S8, S7, S6, S5, {0x5e8, 0xd35, 0xe5b}, S3, S2, 0x0, V1071]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, S12, S11, S10, S9, S8, S7, S6, S5, {0x5e8, 0xd35, 0xe5b}, S3, S2, 0x0, V1071]

================================

Block 0xccf
[0xccf:0xcd2]
---
Predecessors: []
Successors: [0xcd3]
---
0xccf JUMPDEST
0xcd0 DUP1
0xcd1 SWAP2
0xcd2 POP
---
0xccf: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0xcd3
[0xcd3:0xcd9]
---
Predecessors: [0xccf]
Successors: []
Has unresolved jump.
---
0xcd3 JUMPDEST
0xcd4 POP
0xcd5 SWAP3
0xcd6 SWAP2
0xcd7 POP
0xcd8 POP
0xcd9 JUMP
---
0xcd3: JUMPDEST 
0xcd9: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xcda
[0xcda:0xce4]
---
Predecessors: [0x5ff, 0x628, 0x632, 0xd35, 0xd6a, 0xdfd]
Successors: [0xce5, 0xce6]
---
0xcda JUMPDEST
0xcdb PUSH1 0x0
0xcdd DUP3
0xcde DUP3
0xcdf GT
0xce0 ISZERO
0xce1 PUSH2 0xce6
0xce4 JUMPI
---
0xcda: JUMPDEST 
0xcdb: V1075 = 0x0
0xcdf: V1076 = GT S0 S1
0xce0: V1077 = ISZERO V1076
0xce1: V1078 = 0xce6
0xce4: JUMPI 0xce6 V1077
---
Entry stack: [V12, 0x12d, S10, S9, S8, S7, S6, S5, S4, S3, {0x613, 0x632, 0x63e, 0xd6a, 0xd93, 0xe26}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, 0x12d, S10, S9, S8, S7, S6, S5, S4, S3, {0x613, 0x632, 0x63e, 0xd6a, 0xd93, 0xe26}, S1, S0, 0x0]

================================

Block 0xce5
[0xce5:0xce5]
---
Predecessors: [0xcda]
Successors: []
---
0xce5 INVALID
---
0xce5: INVALID 
---
Entry stack: [V12, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, {0x613, 0x632, 0x63e, 0xd6a, 0xd93, 0xe26}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, {0x613, 0x632, 0x63e, 0xd6a, 0xd93, 0xe26}, S2, S1, 0x0]

================================

Block 0xce6
[0xce6:0xcea]
---
Predecessors: [0xcda]
Successors: [0xceb]
---
0xce6 JUMPDEST
0xce7 POP
0xce8 DUP1
0xce9 DUP3
0xcea SUB
---
0xce6: JUMPDEST 
0xcea: V1079 = SUB S2 S1
---
Entry stack: [V12, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, {0x613, 0x632, 0x63e, 0xd6a, 0xd93, 0xe26}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V1079]
Exit stack: [V12, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, {0x613, 0x632, 0x63e, 0xd6a, 0xd93, 0xe26}, S2, S1, V1079]

================================

Block 0xceb
[0xceb:0xcf0]
---
Predecessors: [0xce6]
Successors: [0x613, 0x632, 0x63e, 0xd6a, 0xd93, 0xe26]
---
0xceb JUMPDEST
0xcec SWAP3
0xced SWAP2
0xcee POP
0xcef POP
0xcf0 JUMP
---
0xceb: JUMPDEST 
0xcf0: JUMP {0x613, 0x632, 0x63e, 0xd6a, 0xd93, 0xe26}
---
Entry stack: [V12, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, {0x613, 0x632, 0x63e, 0xd6a, 0xd93, 0xe26}, S2, S1, V1079]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, V1079]

================================

Block 0xcf1
[0xcf1:0xd34]
---
Predecessors: [0x7a3]
Successors: [0xcc0]
---
0xcf1 JUMPDEST
0xcf2 PUSH1 0x1
0xcf4 PUSH1 0xa0
0xcf6 PUSH1 0x2
0xcf8 EXP
0xcf9 SUB
0xcfa DUP1
0xcfb DUP5
0xcfc AND
0xcfd PUSH1 0x0
0xcff SWAP1
0xd00 DUP2
0xd01 MSTORE
0xd02 PUSH1 0x2
0xd04 PUSH1 0x20
0xd06 SWAP1
0xd07 DUP2
0xd08 MSTORE
0xd09 PUSH1 0x40
0xd0b DUP1
0xd0c DUP4
0xd0d SHA3
0xd0e CALLER
0xd0f DUP6
0xd10 AND
0xd11 DUP5
0xd12 MSTORE
0xd13 DUP3
0xd14 MSTORE
0xd15 DUP1
0xd16 DUP4
0xd17 SHA3
0xd18 SLOAD
0xd19 SWAP4
0xd1a DUP7
0xd1b AND
0xd1c DUP4
0xd1d MSTORE
0xd1e PUSH1 0x1
0xd20 SWAP1
0xd21 SWAP2
0xd22 MSTORE
0xd23 SWAP1
0xd24 SHA3
0xd25 SLOAD
0xd26 PUSH2 0xd35
0xd29 SWAP1
0xd2a DUP4
0xd2b PUSH4 0xffffffff
0xd30 PUSH2 0xcc0
0xd33 AND
0xd34 JUMP
---
0xcf1: JUMPDEST 
0xcf2: V1080 = 0x1
0xcf4: V1081 = 0xa0
0xcf6: V1082 = 0x2
0xcf8: V1083 = EXP 0x2 0xa0
0xcf9: V1084 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcfc: V1085 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0xcfd: V1086 = 0x0
0xd01: M[0x0] = V1085
0xd02: V1087 = 0x2
0xd04: V1088 = 0x20
0xd08: M[0x20] = 0x2
0xd09: V1089 = 0x40
0xd0d: V1090 = SHA3 0x0 0x40
0xd0e: V1091 = CALLER
0xd10: V1092 = AND 0xffffffffffffffffffffffffffffffffffffffff V1091
0xd12: M[0x0] = V1092
0xd14: M[0x20] = V1090
0xd17: V1093 = SHA3 0x0 0x40
0xd18: V1094 = S[V1093]
0xd1b: V1095 = AND V194 0xffffffffffffffffffffffffffffffffffffffff
0xd1d: M[0x0] = V1095
0xd1e: V1096 = 0x1
0xd22: M[0x20] = 0x1
0xd24: V1097 = SHA3 0x0 0x40
0xd25: V1098 = S[V1097]
0xd26: V1099 = 0xd35
0xd2b: V1100 = 0xffffffff
0xd30: V1101 = 0xcc0
0xd33: V1102 = AND 0xcc0 0xffffffff
0xd34: JUMP 0xcc0
---
Entry stack: [V12, 0x12d, V191, V194, V196, 0x6a0, V191, V194, V196]
Stack pops: 3
Stack additions: [S2, S1, S0, V1094, 0xd35, V1098, S0]
Exit stack: [V12, 0x12d, V191, V194, V196, 0x6a0, V191, V194, V196, V1094, 0xd35, V1098, V196]

================================

Block 0xd35
[0xd35:0xd69]
---
Predecessors: [0xcb9]
Successors: [0xcda]
---
0xd35 JUMPDEST
0xd36 PUSH1 0x1
0xd38 PUSH1 0xa0
0xd3a PUSH1 0x2
0xd3c EXP
0xd3d SUB
0xd3e DUP1
0xd3f DUP6
0xd40 AND
0xd41 PUSH1 0x0
0xd43 SWAP1
0xd44 DUP2
0xd45 MSTORE
0xd46 PUSH1 0x1
0xd48 PUSH1 0x20
0xd4a MSTORE
0xd4b PUSH1 0x40
0xd4d DUP1
0xd4e DUP3
0xd4f SHA3
0xd50 SWAP4
0xd51 SWAP1
0xd52 SWAP4
0xd53 SSTORE
0xd54 SWAP1
0xd55 DUP7
0xd56 AND
0xd57 DUP2
0xd58 MSTORE
0xd59 SHA3
0xd5a SLOAD
0xd5b PUSH2 0xd6a
0xd5e SWAP1
0xd5f DUP4
0xd60 PUSH4 0xffffffff
0xd65 PUSH2 0xcda
0xd68 AND
0xd69 JUMP
---
0xd35: JUMPDEST 
0xd36: V1103 = 0x1
0xd38: V1104 = 0xa0
0xd3a: V1105 = 0x2
0xd3c: V1106 = EXP 0x2 0xa0
0xd3d: V1107 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd40: V1108 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xd41: V1109 = 0x0
0xd45: M[0x0] = V1108
0xd46: V1110 = 0x1
0xd48: V1111 = 0x20
0xd4a: M[0x20] = 0x1
0xd4b: V1112 = 0x40
0xd4f: V1113 = SHA3 0x0 0x40
0xd53: S[V1113] = S0
0xd56: V1114 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xd58: M[0x0] = V1114
0xd59: V1115 = SHA3 0x0 0x40
0xd5a: V1116 = S[V1115]
0xd5b: V1117 = 0xd6a
0xd60: V1118 = 0xffffffff
0xd65: V1119 = 0xcda
0xd68: V1120 = AND 0xcda 0xffffffff
0xd69: JUMP 0xcda
---
Entry stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0xd6a, V1116, S2]
Exit stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, 0xd6a, V1116, S2]

================================

Block 0xd6a
[0xd6a:0xd92]
---
Predecessors: [0xceb]
Successors: [0xcda]
---
0xd6a JUMPDEST
0xd6b PUSH1 0x1
0xd6d PUSH1 0xa0
0xd6f PUSH1 0x2
0xd71 EXP
0xd72 SUB
0xd73 DUP6
0xd74 AND
0xd75 PUSH1 0x0
0xd77 SWAP1
0xd78 DUP2
0xd79 MSTORE
0xd7a PUSH1 0x1
0xd7c PUSH1 0x20
0xd7e MSTORE
0xd7f PUSH1 0x40
0xd81 SWAP1
0xd82 SHA3
0xd83 SSTORE
0xd84 PUSH2 0xd93
0xd87 DUP2
0xd88 DUP4
0xd89 PUSH4 0xffffffff
0xd8e PUSH2 0xcda
0xd91 AND
0xd92 JUMP
---
0xd6a: JUMPDEST 
0xd6b: V1121 = 0x1
0xd6d: V1122 = 0xa0
0xd6f: V1123 = 0x2
0xd71: V1124 = EXP 0x2 0xa0
0xd72: V1125 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd74: V1126 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xd75: V1127 = 0x0
0xd79: M[0x0] = V1126
0xd7a: V1128 = 0x1
0xd7c: V1129 = 0x20
0xd7e: M[0x20] = 0x1
0xd7f: V1130 = 0x40
0xd82: V1131 = SHA3 0x0 0x40
0xd83: S[V1131] = S0
0xd84: V1132 = 0xd93
0xd89: V1133 = 0xffffffff
0xd8e: V1134 = 0xcda
0xd91: V1135 = AND 0xcda 0xffffffff
0xd92: JUMP 0xcda
---
Entry stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0xd93, S1, S2]
Exit stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, 0xd93, S1, S2]

================================

Block 0xd93
[0xd93:0xdf6]
---
Predecessors: [0xceb]
Successors: [0xdf7]
---
0xd93 JUMPDEST
0xd94 PUSH1 0x1
0xd96 PUSH1 0xa0
0xd98 PUSH1 0x2
0xd9a EXP
0xd9b SUB
0xd9c DUP1
0xd9d DUP7
0xd9e AND
0xd9f PUSH1 0x0
0xda1 DUP2
0xda2 DUP2
0xda3 MSTORE
0xda4 PUSH1 0x2
0xda6 PUSH1 0x20
0xda8 SWAP1
0xda9 DUP2
0xdaa MSTORE
0xdab PUSH1 0x40
0xdad DUP1
0xdae DUP4
0xdaf SHA3
0xdb0 CALLER
0xdb1 DUP7
0xdb2 AND
0xdb3 DUP5
0xdb4 MSTORE
0xdb5 DUP3
0xdb6 MSTORE
0xdb7 SWAP2
0xdb8 DUP3
0xdb9 SWAP1
0xdba SHA3
0xdbb SWAP5
0xdbc SWAP1
0xdbd SWAP5
0xdbe SSTORE
0xdbf DUP1
0xdc0 MLOAD
0xdc1 DUP7
0xdc2 DUP2
0xdc3 MSTORE
0xdc4 SWAP1
0xdc5 MLOAD
0xdc6 SWAP3
0xdc7 DUP8
0xdc8 AND
0xdc9 SWAP4
0xdca SWAP2
0xdcb SWAP3
0xdcc PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xded SWAP3
0xdee SWAP2
0xdef DUP2
0xdf0 SWAP1
0xdf1 SUB
0xdf2 SWAP1
0xdf3 SWAP2
0xdf4 ADD
0xdf5 SWAP1
0xdf6 LOG3
---
0xd93: JUMPDEST 
0xd94: V1136 = 0x1
0xd96: V1137 = 0xa0
0xd98: V1138 = 0x2
0xd9a: V1139 = EXP 0x2 0xa0
0xd9b: V1140 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd9e: V1141 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xd9f: V1142 = 0x0
0xda3: M[0x0] = V1141
0xda4: V1143 = 0x2
0xda6: V1144 = 0x20
0xdaa: M[0x20] = 0x2
0xdab: V1145 = 0x40
0xdaf: V1146 = SHA3 0x0 0x40
0xdb0: V1147 = CALLER
0xdb2: V1148 = AND 0xffffffffffffffffffffffffffffffffffffffff V1147
0xdb4: M[0x0] = V1148
0xdb6: M[0x20] = V1146
0xdba: V1149 = SHA3 0x0 0x40
0xdbe: S[V1149] = S0
0xdc0: V1150 = M[0x40]
0xdc3: M[V1150] = S2
0xdc5: V1151 = M[0x40]
0xdc8: V1152 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xdcc: V1153 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xdf1: V1154 = SUB V1150 V1151
0xdf4: V1155 = ADD 0x20 V1154
0xdf6: LOG V1151 V1155 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1141 V1152
---
Entry stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1]
Exit stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xdf7
[0xdf7:0xdfc]
---
Predecessors: [0xd93]
Successors: [0x6a0]
---
0xdf7 JUMPDEST
0xdf8 POP
0xdf9 POP
0xdfa POP
0xdfb POP
0xdfc JUMP
---
0xdf7: JUMPDEST 
0xdfc: JUMP S4
---
Entry stack: [V12, 0x12d, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x12d, S7, S6, S5]

================================

Block 0xdfd
[0xdfd:0xe25]
---
Predecessors: [0xa9b]
Successors: [0xcda]
---
0xdfd JUMPDEST
0xdfe PUSH1 0x1
0xe00 PUSH1 0xa0
0xe02 PUSH1 0x2
0xe04 EXP
0xe05 SUB
0xe06 CALLER
0xe07 AND
0xe08 PUSH1 0x0
0xe0a SWAP1
0xe0b DUP2
0xe0c MSTORE
0xe0d PUSH1 0x1
0xe0f PUSH1 0x20
0xe11 MSTORE
0xe12 PUSH1 0x40
0xe14 SWAP1
0xe15 SHA3
0xe16 SLOAD
0xe17 PUSH2 0xe26
0xe1a SWAP1
0xe1b DUP3
0xe1c PUSH4 0xffffffff
0xe21 PUSH2 0xcda
0xe24 AND
0xe25 JUMP
---
0xdfd: JUMPDEST 
0xdfe: V1156 = 0x1
0xe00: V1157 = 0xa0
0xe02: V1158 = 0x2
0xe04: V1159 = EXP 0x2 0xa0
0xe05: V1160 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe06: V1161 = CALLER
0xe07: V1162 = AND V1161 0xffffffffffffffffffffffffffffffffffffffff
0xe08: V1163 = 0x0
0xe0c: M[0x0] = V1162
0xe0d: V1164 = 0x1
0xe0f: V1165 = 0x20
0xe11: M[0x20] = 0x1
0xe12: V1166 = 0x40
0xe15: V1167 = SHA3 0x0 0x40
0xe16: V1168 = S[V1167]
0xe17: V1169 = 0xe26
0xe1c: V1170 = 0xffffffff
0xe21: V1171 = 0xcda
0xe24: V1172 = AND 0xcda 0xffffffff
0xe25: JUMP 0xcda
---
Entry stack: [V12, 0x12d, V429, V431, 0x778, V429, V431]
Stack pops: 1
Stack additions: [S0, 0xe26, V1168, S0]
Exit stack: [V12, 0x12d, V429, V431, 0x778, V429, V431, 0xe26, V1168, V431]

================================

Block 0xe26
[0xe26:0xe5a]
---
Predecessors: [0xceb]
Successors: [0xcc0]
---
0xe26 JUMPDEST
0xe27 PUSH1 0x1
0xe29 PUSH1 0xa0
0xe2b PUSH1 0x2
0xe2d EXP
0xe2e SUB
0xe2f CALLER
0xe30 DUP2
0xe31 AND
0xe32 PUSH1 0x0
0xe34 SWAP1
0xe35 DUP2
0xe36 MSTORE
0xe37 PUSH1 0x1
0xe39 PUSH1 0x20
0xe3b MSTORE
0xe3c PUSH1 0x40
0xe3e DUP1
0xe3f DUP3
0xe40 SHA3
0xe41 SWAP4
0xe42 SWAP1
0xe43 SWAP4
0xe44 SSTORE
0xe45 SWAP1
0xe46 DUP5
0xe47 AND
0xe48 DUP2
0xe49 MSTORE
0xe4a SHA3
0xe4b SLOAD
0xe4c PUSH2 0xe5b
0xe4f SWAP1
0xe50 DUP3
0xe51 PUSH4 0xffffffff
0xe56 PUSH2 0xcc0
0xe59 AND
0xe5a JUMP
---
0xe26: JUMPDEST 
0xe27: V1173 = 0x1
0xe29: V1174 = 0xa0
0xe2b: V1175 = 0x2
0xe2d: V1176 = EXP 0x2 0xa0
0xe2e: V1177 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2f: V1178 = CALLER
0xe31: V1179 = AND 0xffffffffffffffffffffffffffffffffffffffff V1178
0xe32: V1180 = 0x0
0xe36: M[0x0] = V1179
0xe37: V1181 = 0x1
0xe39: V1182 = 0x20
0xe3b: M[0x20] = 0x1
0xe3c: V1183 = 0x40
0xe40: V1184 = SHA3 0x0 0x40
0xe44: S[V1184] = S0
0xe47: V1185 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xe49: M[0x0] = V1185
0xe4a: V1186 = SHA3 0x0 0x40
0xe4b: V1187 = S[V1186]
0xe4c: V1188 = 0xe5b
0xe51: V1189 = 0xffffffff
0xe56: V1190 = 0xcc0
0xe59: V1191 = AND 0xcc0 0xffffffff
0xe5a: JUMP 0xcc0
---
Entry stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0xe5b, V1187, S1]
Exit stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, 0xe5b, V1187, S1]

================================

Block 0xe5b
[0xe5b:0xeb3]
---
Predecessors: [0xcb9]
Successors: [0xeb4]
---
0xe5b JUMPDEST
0xe5c PUSH1 0x1
0xe5e PUSH1 0xa0
0xe60 PUSH1 0x2
0xe62 EXP
0xe63 SUB
0xe64 DUP1
0xe65 DUP5
0xe66 AND
0xe67 PUSH1 0x0
0xe69 DUP2
0xe6a DUP2
0xe6b MSTORE
0xe6c PUSH1 0x1
0xe6e PUSH1 0x20
0xe70 SWAP1
0xe71 DUP2
0xe72 MSTORE
0xe73 PUSH1 0x40
0xe75 SWAP2
0xe76 DUP3
0xe77 SWAP1
0xe78 SHA3
0xe79 SWAP5
0xe7a SWAP1
0xe7b SWAP5
0xe7c SSTORE
0xe7d DUP1
0xe7e MLOAD
0xe7f DUP6
0xe80 DUP2
0xe81 MSTORE
0xe82 SWAP1
0xe83 MLOAD
0xe84 SWAP2
0xe85 SWAP4
0xe86 CALLER
0xe87 SWAP1
0xe88 SWAP4
0xe89 AND
0xe8a SWAP3
0xe8b PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xeac SWAP3
0xead SWAP2
0xeae DUP3
0xeaf SWAP1
0xeb0 SUB
0xeb1 ADD
0xeb2 SWAP1
0xeb3 LOG3
---
0xe5b: JUMPDEST 
0xe5c: V1192 = 0x1
0xe5e: V1193 = 0xa0
0xe60: V1194 = 0x2
0xe62: V1195 = EXP 0x2 0xa0
0xe63: V1196 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe66: V1197 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xe67: V1198 = 0x0
0xe6b: M[0x0] = V1197
0xe6c: V1199 = 0x1
0xe6e: V1200 = 0x20
0xe72: M[0x20] = 0x1
0xe73: V1201 = 0x40
0xe78: V1202 = SHA3 0x0 0x40
0xe7c: S[V1202] = S0
0xe7e: V1203 = M[0x40]
0xe81: M[V1203] = S1
0xe83: V1204 = M[0x40]
0xe86: V1205 = CALLER
0xe89: V1206 = AND 0xffffffffffffffffffffffffffffffffffffffff V1205
0xe8b: V1207 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xeb0: V1208 = SUB V1203 V1204
0xeb1: V1209 = ADD V1208 0x20
0xeb3: LOG V1204 V1209 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1206 V1197
---
Entry stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V12, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xeb4
[0xeb4:0xeb7]
---
Predecessors: [0xe5b]
Successors: [0x778]
---
0xeb4 JUMPDEST
0xeb5 POP
0xeb6 POP
0xeb7 JUMP
---
0xeb4: JUMPDEST 
0xeb7: JUMP S2
---
Entry stack: [V12, 0x12d, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x12d, S7, S6, S5, S4, S3]

================================

Block 0xeb8
[0xeb8:0xeea]
---
Predecessors: []
Successors: []
---
0xeb8 STOP
0xeb9 LOG1
0xeba PUSH6 0x627a7a723058
0xec1 SHA3
0xec2 CALLDATALOAD
0xec3 MISSING 0xdb
0xec4 EQ
0xec5 MISSING 0xd9
0xec6 MISSING 0xcd
0xec7 MOD
0xec8 BLOCKHASH
0xec9 MISSING 0xf7
0xeca MISSING 0x5d
0xecb PUSH31 0x5c469a7d86738281fd93b2edce942f922588e600af1a0029
---
0xeb8: STOP 
0xeb9: LOG S0 S1 S2
0xeba: V1210 = 0x627a7a723058
0xec1: V1211 = SHA3 0x627a7a723058 S3
0xec2: V1212 = CALLDATALOAD V1211
0xec3: MISSING 0xdb
0xec4: V1213 = EQ S0 S1
0xec5: MISSING 0xd9
0xec6: MISSING 0xcd
0xec7: V1214 = MOD S0 S1
0xec8: V1215 = BLOCKHASH V1214
0xec9: MISSING 0xf7
0xeca: MISSING 0x5d
0xecb: V1216 = 0x5c469a7d86738281fd93b2edce942f922588e600af1a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1212, V1213, V1215, 0x5c469a7d86738281fd93b2edce942f922588e600af1a0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x12f
Exit block: 0x1b1
Body: 0x12f, 0x136, 0x137, 0x13f, 0x165, 0x173, 0x185, 0x198, 0x1b1, 0x6a5

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x1bf
Exit block: 0x12d
Body: 0x12d, 0x1bf, 0x1c6, 0x1c7, 0x6dc, 0x6e6, 0x70f, 0x715, 0x71a

Function 2:
Public function signature: 0x178a9e2e
Entry block: 0x1e0
Exit block: 0x1f0
Body: 0x1e0, 0x1e7, 0x1e8, 0x1f0, 0x77c

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x20c
Exit block: 0x21c
Body: 0x20c, 0x213, 0x214, 0x21c, 0x78b

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x22e
Exit block: 0xcce
Body: 0x22e, 0x235, 0x236, 0x791, 0x79e, 0x7a3, 0xcce, 0xcf1, 0xd35

Function 5:
Public function signature: 0x313ce567
Entry block: 0x255
Exit block: 0x21c
Body: 0x21c, 0x255, 0x25c, 0x25d, 0x7b5

Function 6:
Public function signature: 0x3197cbb6
Entry block: 0x277
Exit block: 0x21c
Body: 0x21c, 0x277, 0x27e, 0x27f, 0x7ba

Function 7:
Public function signature: 0x3392f927
Entry block: 0x299
Exit block: 0x2b5
Body: 0x299, 0x2a0, 0x2a1, 0x2b5, 0x7c2, 0x7df

Function 8:
Public function signature: 0x4172d080
Entry block: 0x2c9
Exit block: 0x21c
Body: 0x21c, 0x2c9, 0x2d0, 0x2d1, 0x7e4

Function 9:
Public function signature: 0x4bb278f3
Entry block: 0x2eb
Exit block: 0x12d
Body: 0x129, 0x12a, 0x12b, 0x12d, 0x2eb, 0x2f2, 0x2f3, 0x7ea, 0x7f6, 0x7fb, 0x812, 0x817, 0x826, 0x838, 0x83e, 0x843, 0x881

Function 10:
Public function signature: 0x54fd4d50
Entry block: 0x2fd
Exit block: 0x1b1
Body: 0x13f, 0x165, 0x173, 0x185, 0x198, 0x1b1, 0x2fd, 0x304, 0x305, 0x88a, 0x8ca, 0x8d2, 0x8e5, 0x8f3, 0x907, 0x910

Function 11:
Public function signature: 0x6a12b86c
Entry block: 0x38d
Exit block: 0x12d
Body: 0x12d, 0x38d, 0x394, 0x395, 0x918, 0x97e, 0x97f, 0x98c, 0x98d, 0x9a0, 0x9e5, 0x9e6, 0x9f3, 0x9f4, 0x9fd, 0xa03, 0xa0b, 0xa11, 0xa12

Function 12:
Public function signature: 0x70a08231
Entry block: 0x39f
Exit block: 0x21c
Body: 0x21c, 0x39f, 0x3a6, 0x3a7, 0xa15, 0xa2f

Function 13:
Public function signature: 0x78e97925
Entry block: 0x3cd
Exit block: 0x21c
Body: 0x21c, 0x3cd, 0x3d4, 0x3d5, 0xa34

Function 14:
Public function signature: 0x8d4e4083
Entry block: 0x3ef
Exit block: 0x2b5
Body: 0x2b5, 0x3ef, 0x3f6, 0x3f7, 0xa3a

Function 15:
Public function signature: 0x95d89b41
Entry block: 0x413
Exit block: 0x1b1
Body: 0x13f, 0x165, 0x173, 0x185, 0x198, 0x1b1, 0x413, 0x41a, 0x41b, 0xa43

Function 16:
Public function signature: 0xa5e33048
Entry block: 0x4a3
Exit block: 0x12d
Body: 0x12d, 0x4a3

Function 17:
Public function signature: 0xa81c3bdf
Entry block: 0x4ad
Exit block: 0x1f0
Body: 0x1f0, 0x4ad, 0x4b4, 0x4b5, 0xa7a

Function 18:
Public function signature: 0xa9059cbb
Entry block: 0x4d9
Exit block: 0xcce
Body: 0x4d9, 0x4e0, 0x4e1, 0xa89, 0xa96, 0xa9b, 0xcce, 0xdfd, 0xe26

Function 19:
Public function signature: 0xcac12d2d
Entry block: 0x4fa
Exit block: 0x21c
Body: 0x21c, 0x4fa, 0x501, 0x502, 0xaab

Function 20:
Public function signature: 0xdd62ed3e
Entry block: 0x51c
Exit block: 0x21c
Body: 0x21c, 0x51c, 0x523, 0x524, 0xaba, 0xae1

Function 21:
Public function signature: 0xdef2489b
Entry block: 0x550
Exit block: 0x12d
Body: 0x12d, 0x550, 0x557, 0x558, 0xae7, 0xb4b, 0xb4c, 0xb59, 0xb5a, 0xb68, 0xb6d, 0xb8f, 0xb94, 0xbf3, 0xbf4, 0xc01, 0xc02, 0xc14, 0xc19, 0xc8c

Function 22:
Public fallback function
Entry block: 0x10c
Exit block: 0x12d
Body: 0x10c, 0x110, 0x11c, 0x121, 0x129, 0x12a, 0x12b, 0x12d

Function 23:
Private function
Entry block: 0xcc0
Exit block: 0xcb9
Body: 0x5da, 0x5e8, 0x5ff, 0x613, 0x628, 0x632, 0x632, 0xcb5, 0xcb9, 0xcc0, 0xcda, 0xce6, 0xceb, 0xd6a, 0xe26, 0xe5b

Function 24:
Private function
Entry block: 0xcda
Exit block: 0xceb
Body: 0xcda, 0xce6, 0xceb

Function 25:
Private function
Entry block: 0x56e
Exit block: 0x778
Body: 0x56e, 0x586, 0x599, 0x59d, 0x5a5, 0x5b3, 0x5ce, 0x5da, 0x5e8, 0x5ff, 0x613, 0x628, 0x632, 0x632, 0x63e, 0x641, 0x69b, 0x69c, 0x69d, 0x6a0, 0x778, 0xc91, 0xc9e, 0xcaa, 0xcad, 0xcb5, 0xcb9, 0xcda, 0xce6, 0xceb, 0xd35, 0xd6a, 0xd6a, 0xd93, 0xdf7, 0xe26, 0xe5b, 0xeb4

