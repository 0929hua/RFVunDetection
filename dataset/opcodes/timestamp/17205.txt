Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x25]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x25
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x25
0xa: JUMPI 0x25 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x3e]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xf8856b28
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x3e
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xf8856b28
0x20: V14 = EQ V12 0xf8856b28
0x21: V15 = 0x3e
0x24: JUMPI 0x3e V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2a]
---
Predecessors: [0x0, 0xb]
Successors: [0x2b]
---
0x25 JUMPDEST
0x26 CALLVALUE
0x27 PUSH2 0x0
0x2a JUMPI
---
0x25: JUMPDEST 
0x26: V16 = CALLVALUE
0x27: V17 = 0x0
0x2a: THROWI V16
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b
[0x2b:0x2d]
---
Predecessors: [0x25]
Successors: [0x2e]
---
0x2b PUSH2 0x3c
---
0x2b: V18 = 0x3c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3c]
Exit stack: [V12, 0x3c]

================================

Block 0x2e
[0x2e:0x37]
---
Predecessors: [0x2b]
Successors: [0x66]
---
0x2e JUMPDEST
0x2f PUSH2 0x38
0x32 PUSH1 0x0
0x34 PUSH2 0x66
0x37 JUMP
---
0x2e: JUMPDEST 
0x2f: V19 = 0x38
0x32: V20 = 0x0
0x34: V21 = 0x66
0x37: JUMP 0x66
---
Entry stack: [V12, 0x3c]
Stack pops: 0
Stack additions: [0x38, 0x0]
Exit stack: [V12, 0x3c, 0x38, 0x0]

================================

Block 0x38
[0x38:0x39]
---
Predecessors: [0x456]
Successors: [0x3a]
---
0x38 JUMPDEST
0x39 POP
---
0x38: JUMPDEST 
---
Entry stack: [V12, S5, {0x38, 0x52}, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S5, {0x38, 0x52}, S3, S2, S1]

================================

Block 0x3a
[0x3a:0x3b]
---
Predecessors: [0x38]
Successors: [0x3c]
---
0x3a JUMPDEST
0x3b JUMP
---
0x3a: JUMPDEST 
0x3b: JUMP S0
---
Entry stack: [V12, S4, {0x38, 0x52}, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S4, {0x38, 0x52}, S2, S1]

================================

Block 0x3c
[0x3c:0x3d]
---
Predecessors: [0x3a]
Successors: []
---
0x3c JUMPDEST
0x3d STOP
---
0x3c: JUMPDEST 
0x3d: STOP 
---
Entry stack: [V12, S3, {0x38, 0x52}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0x38, 0x52}, S1, S0]

================================

Block 0x3e
[0x3e:0x51]
---
Predecessors: [0xb]
Successors: [0x66]
---
0x3e JUMPDEST
0x3f PUSH2 0x52
0x42 PUSH1 0x1
0x44 PUSH1 0xa0
0x46 PUSH1 0x2
0x48 EXP
0x49 SUB
0x4a PUSH1 0x4
0x4c CALLDATALOAD
0x4d AND
0x4e PUSH2 0x66
0x51 JUMP
---
0x3e: JUMPDEST 
0x3f: V22 = 0x52
0x42: V23 = 0x1
0x44: V24 = 0xa0
0x46: V25 = 0x2
0x48: V26 = EXP 0x2 0xa0
0x49: V27 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a: V28 = 0x4
0x4c: V29 = CALLDATALOAD 0x4
0x4d: V30 = AND V29 0xffffffffffffffffffffffffffffffffffffffff
0x4e: V31 = 0x66
0x51: JUMP 0x66
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x52, V30]
Exit stack: [V12, 0x52, V30]

================================

Block 0x52
[0x52:0x65]
---
Predecessors: [0x456]
Successors: []
---
0x52 JUMPDEST
0x53 PUSH1 0x40
0x55 DUP1
0x56 MLOAD
0x57 SWAP2
0x58 ISZERO
0x59 ISZERO
0x5a DUP3
0x5b MSTORE
0x5c MLOAD
0x5d SWAP1
0x5e DUP2
0x5f SWAP1
0x60 SUB
0x61 PUSH1 0x20
0x63 ADD
0x64 SWAP1
0x65 RETURN
---
0x52: JUMPDEST 
0x53: V32 = 0x40
0x56: V33 = M[0x40]
0x58: V34 = ISZERO {0x0, 0x1}
0x59: V35 = ISZERO V34
0x5b: M[V33] = V35
0x5c: V36 = M[0x40]
0x60: V37 = SUB V33 V36
0x61: V38 = 0x20
0x63: V39 = ADD 0x20 V37
0x65: RETURN V36 V39
---
Entry stack: [V12, S5, {0x38, 0x52}, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S5, {0x38, 0x52}, S3, S2, S1]

================================

Block 0x66
[0x66:0x7b]
---
Predecessors: [0x2e, 0x3e]
Successors: [0x7c, 0x2e2]
---
0x66 JUMPDEST
0x67 PUSH1 0x0
0x69 PUSH1 0x0
0x6b CALLVALUE
0x6c SWAP1
0x6d POP
0x6e TIMESTAMP
0x6f PUSH2 0xa8c0
0x72 PUSH1 0x1
0x74 SLOAD
0x75 ADD
0x76 LT
0x77 ISZERO
0x78 PUSH2 0x2e2
0x7b JUMPI
---
0x66: JUMPDEST 
0x67: V40 = 0x0
0x69: V41 = 0x0
0x6b: V42 = CALLVALUE
0x6e: V43 = TIMESTAMP
0x6f: V44 = 0xa8c0
0x72: V45 = 0x1
0x74: V46 = S[0x1]
0x75: V47 = ADD V46 0xa8c0
0x76: V48 = LT V47 V43
0x77: V49 = ISZERO V48
0x78: V50 = 0x2e2
0x7b: JUMPI 0x2e2 V49
---
Entry stack: [V12, S2, {0x38, 0x52}, S0]
Stack pops: 0
Stack additions: [0x0, V42]
Exit stack: [V12, S2, {0x38, 0x52}, S0, 0x0, V42]

================================

Block 0x7c
[0x7c:0xb4]
---
Predecessors: [0x66]
Successors: [0xb5]
---
0x7c PUSH1 0x40
0x7e MLOAD
0x7f PUSH1 0x1
0x81 PUSH1 0xa0
0x83 PUSH1 0x2
0x85 EXP
0x86 SUB
0x87 CALLER
0x88 AND
0x89 SWAP1
0x8a DUP3
0x8b ISZERO
0x8c PUSH2 0x8fc
0x8f MUL
0x90 SWAP1
0x91 DUP4
0x92 SWAP1
0x93 PUSH1 0x0
0x95 DUP2
0x96 DUP2
0x97 DUP2
0x98 DUP6
0x99 DUP9
0x9a DUP9
0x9b CALL
0x9c POP
0x9d POP
0x9e PUSH1 0x3
0xa0 DUP1
0xa1 SLOAD
0xa2 SWAP1
0xa3 SWAP4
0xa4 POP
0xa5 PUSH1 0x0
0xa7 NOT
0xa8 DUP2
0xa9 ADD
0xaa SWAP3
0xab POP
0xac DUP3
0xad LT
0xae ISZERO
0xaf SWAP1
0xb0 POP
0xb1 PUSH2 0x0
0xb4 JUMPI
---
0x7c: V51 = 0x40
0x7e: V52 = M[0x40]
0x7f: V53 = 0x1
0x81: V54 = 0xa0
0x83: V55 = 0x2
0x85: V56 = EXP 0x2 0xa0
0x86: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0x87: V58 = CALLER
0x88: V59 = AND V58 0xffffffffffffffffffffffffffffffffffffffff
0x8b: V60 = ISZERO V42
0x8c: V61 = 0x8fc
0x8f: V62 = MUL 0x8fc V60
0x93: V63 = 0x0
0x9b: V64 = CALL V62 V59 V42 V52 0x0 V52 0x0
0x9e: V65 = 0x3
0xa1: V66 = S[0x3]
0xa5: V67 = 0x0
0xa7: V68 = NOT 0x0
0xa9: V69 = ADD V66 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xad: V70 = LT V69 V66
0xae: V71 = ISZERO V70
0xb1: V72 = 0x0
0xb4: THROWI V71
---
Entry stack: [V12, S4, {0x38, 0x52}, S2, 0x0, V42]
Stack pops: 1
Stack additions: [S0, 0x3, V69]
Exit stack: [V12, S4, {0x38, 0x52}, S2, 0x0, V42, 0x3, V69]

================================

Block 0xb5
[0xb5:0xc1]
---
Predecessors: [0x7c]
Successors: [0xc2]
---
0xb5 SWAP1
0xb6 PUSH1 0x0
0xb8 MSTORE
0xb9 PUSH1 0x20
0xbb PUSH1 0x0
0xbd SHA3
0xbe SWAP1
0xbf ADD
0xc0 PUSH1 0x0
---
0xb6: V73 = 0x0
0xb8: M[0x0] = 0x3
0xb9: V74 = 0x20
0xbb: V75 = 0x0
0xbd: V76 = SHA3 0x0 0x20
0xbf: V77 = ADD V69 V76
0xc0: V78 = 0x0
---
Entry stack: [V12, S6, {0x38, 0x52}, S4, 0x0, V42, 0x3, V69]
Stack pops: 2
Stack additions: [V77, 0x0]
Exit stack: [V12, S6, {0x38, 0x52}, S4, 0x0, V42, V77, 0x0]

================================

Block 0xc2
[0xc2:0x145]
---
Predecessors: [0xb5]
Successors: [0x146, 0x148]
---
0xc2 JUMPDEST
0xc3 SWAP1
0xc4 SLOAD
0xc5 PUSH1 0x2
0xc7 SLOAD
0xc8 PUSH1 0x40
0xca MLOAD
0xcb PUSH2 0x100
0xce SWAP4
0xcf SWAP1
0xd0 SWAP4
0xd1 EXP
0xd2 SWAP1
0xd3 SWAP2
0xd4 DIV
0xd5 PUSH1 0x1
0xd7 PUSH1 0xa0
0xd9 PUSH1 0x2
0xdb EXP
0xdc SUB
0xdd AND
0xde SWAP2
0xdf PUSH2 0x8fc
0xe2 DUP3
0xe3 ISZERO
0xe4 MUL
0xe5 SWAP2
0xe6 SWAP1
0xe7 PUSH1 0x0
0xe9 DUP2
0xea DUP2
0xeb DUP2
0xec DUP6
0xed DUP9
0xee DUP9
0xef CALL
0xf0 POP
0xf1 POP
0xf2 PUSH1 0x5
0xf4 SLOAD
0xf5 PUSH1 0x40
0xf7 MLOAD
0xf8 PUSH1 0x1
0xfa PUSH1 0xa0
0xfc PUSH1 0x2
0xfe EXP
0xff SUB
0x100 SWAP2
0x101 DUP3
0x102 AND
0x103 SWAP5
0x104 POP
0x105 ADDRESS
0x106 SWAP1
0x107 SWAP2
0x108 AND
0x109 BALANCE
0x10a DUP1
0x10b ISZERO
0x10c PUSH2 0x8fc
0x10f MUL
0x110 SWAP4
0x111 POP
0x112 SWAP2
0x113 POP
0x114 PUSH1 0x0
0x116 DUP2
0x117 DUP2
0x118 DUP2
0x119 DUP6
0x11a DUP9
0x11b DUP9
0x11c CALL
0x11d POP
0x11e POP
0x11f PUSH1 0x0
0x121 DUP1
0x122 SLOAD
0x123 PUSH4 0xffffffff
0x128 NOT
0x129 AND
0x12a DUP2
0x12b SSTORE
0x12c TIMESTAMP
0x12d PUSH1 0x1
0x12f SSTORE
0x130 PUSH1 0x2
0x132 DUP2
0x133 SWAP1
0x134 SSTORE
0x135 PUSH1 0x40
0x137 MLOAD
0x138 SWAP1
0x139 SWAP4
0x13a POP
0x13b SWAP2
0x13c POP
0x13d DUP2
0x13e SWAP1
0x13f POP
0x140 MSIZE
0x141 LT
0x142 PUSH2 0x148
0x145 JUMPI
---
0xc2: JUMPDEST 
0xc4: V79 = S[V77]
0xc5: V80 = 0x2
0xc7: V81 = S[0x2]
0xc8: V82 = 0x40
0xca: V83 = M[0x40]
0xcb: V84 = 0x100
0xd1: V85 = EXP 0x100 0x0
0xd4: V86 = DIV V79 0x1
0xd5: V87 = 0x1
0xd7: V88 = 0xa0
0xd9: V89 = 0x2
0xdb: V90 = EXP 0x2 0xa0
0xdc: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0xdf: V93 = 0x8fc
0xe3: V94 = ISZERO V81
0xe4: V95 = MUL V94 0x8fc
0xe7: V96 = 0x0
0xef: V97 = CALL V95 V92 V81 V83 0x0 V83 0x0
0xf2: V98 = 0x5
0xf4: V99 = S[0x5]
0xf5: V100 = 0x40
0xf7: V101 = M[0x40]
0xf8: V102 = 0x1
0xfa: V103 = 0xa0
0xfc: V104 = 0x2
0xfe: V105 = EXP 0x2 0xa0
0xff: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x102: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x105: V108 = ADDRESS
0x108: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x109: V110 = BALANCE V109
0x10b: V111 = ISZERO V110
0x10c: V112 = 0x8fc
0x10f: V113 = MUL 0x8fc V111
0x114: V114 = 0x0
0x11c: V115 = CALL V113 V107 V110 V101 0x0 V101 0x0
0x11f: V116 = 0x0
0x122: V117 = S[0x0]
0x123: V118 = 0xffffffff
0x128: V119 = NOT 0xffffffff
0x129: V120 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000 V117
0x12b: S[0x0] = V120
0x12c: V121 = TIMESTAMP
0x12d: V122 = 0x1
0x12f: S[0x1] = V121
0x130: V123 = 0x2
0x134: S[0x2] = 0x0
0x135: V124 = 0x40
0x137: V125 = M[0x40]
0x140: V126 = MSIZE
0x141: V127 = LT V126 V125
0x142: V128 = 0x148
0x145: JUMPI 0x148 V127
---
Entry stack: [V12, S6, {0x38, 0x52}, S4, 0x0, V42, V77, 0x0]
Stack pops: 2
Stack additions: [0x0, V125]
Exit stack: [V12, S6, {0x38, 0x52}, S4, 0x0, V42, 0x0, V125]

================================

Block 0x146
[0x146:0x147]
---
Predecessors: [0xc2]
Successors: [0x148]
---
0x146 POP
0x147 MSIZE
---
0x147: V129 = MSIZE
---
Entry stack: [V12, S6, {0x38, 0x52}, S4, 0x0, V42, 0x0, V125]
Stack pops: 1
Stack additions: [V129]
Exit stack: [V12, S6, {0x38, 0x52}, S4, 0x0, V42, 0x0, V129]

================================

Block 0x148
[0x148:0x158]
---
Predecessors: [0xc2, 0x146]
Successors: [0x159]
---
0x148 JUMPDEST
0x149 SWAP1
0x14a DUP1
0x14b DUP3
0x14c MSTORE
0x14d DUP1
0x14e PUSH1 0x20
0x150 MUL
0x151 PUSH1 0x20
0x153 ADD
0x154 DUP3
0x155 ADD
0x156 PUSH1 0x40
0x158 MSTORE
---
0x148: JUMPDEST 
0x14c: M[S0] = 0x0
0x14e: V130 = 0x20
0x150: V131 = MUL 0x20 0x0
0x151: V132 = 0x20
0x153: V133 = ADD 0x20 0x0
0x155: V134 = ADD S0 0x20
0x156: V135 = 0x40
0x158: M[0x40] = V134
---
Entry stack: [V12, S6, {0x38, 0x52}, S4, 0x0, V42, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, S6, {0x38, 0x52}, S4, 0x0, V42, S0, 0x0]

================================

Block 0x159
[0x159:0x19a]
---
Predecessors: [0x148]
Successors: [0x19b, 0x1e3]
---
0x159 JUMPDEST
0x15a POP
0x15b DUP1
0x15c MLOAD
0x15d PUSH1 0x3
0x15f DUP1
0x160 SLOAD
0x161 DUP3
0x162 DUP3
0x163 SSTORE
0x164 PUSH1 0x0
0x166 DUP3
0x167 SWAP1
0x168 MSTORE
0x169 SWAP1
0x16a SWAP3
0x16b PUSH32 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b
0x18c SWAP2
0x18d DUP3
0x18e ADD
0x18f SWAP3
0x190 SWAP2
0x191 SWAP1
0x192 PUSH1 0x20
0x194 ADD
0x195 DUP3
0x196 ISZERO
0x197 PUSH2 0x1e3
0x19a JUMPI
---
0x159: JUMPDEST 
0x15c: V136 = M[S1]
0x15d: V137 = 0x3
0x160: V138 = S[0x3]
0x163: S[0x3] = V136
0x164: V139 = 0x0
0x168: M[0x0] = 0x3
0x16b: V140 = 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b
0x18e: V141 = ADD 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b V138
0x192: V142 = 0x20
0x194: V143 = ADD 0x20 S1
0x196: V144 = ISZERO V136
0x197: V145 = 0x1e3
0x19a: JUMPI 0x1e3 V144
---
Entry stack: [V12, S6, {0x38, 0x52}, S4, 0x0, V42, S1, 0x0]
Stack pops: 2
Stack additions: [0x3, V141, V136, 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b, V143]
Exit stack: [V12, S6, {0x38, 0x52}, S4, 0x0, V42, 0x3, V141, V136, 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b, V143]

================================

Block 0x19b
[0x19b:0x1a0]
---
Predecessors: [0x159]
Successors: [0x1a1]
---
0x19b SWAP2
0x19c PUSH1 0x20
0x19e MUL
0x19f DUP3
0x1a0 ADD
---
0x19c: V146 = 0x20
0x19e: V147 = MUL 0x20 V136
0x1a0: V148 = ADD V143 V147
---
Entry stack: [V12, S9, {0x38, 0x52}, S7, 0x0, V42, 0x3, V141, V136, 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b, V143]
Stack pops: 3
Stack additions: [S0, S1, V148]
Exit stack: [V12, S9, {0x38, 0x52}, S7, 0x0, V42, 0x3, V141, V143, 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b, V148]

================================

Block 0x1a1
[0x1a1:0x1a9]
---
Predecessors: [0x19b, 0x1aa]
Successors: [0x1aa, 0x1e3]
---
0x1a1 JUMPDEST
0x1a2 DUP3
0x1a3 DUP2
0x1a4 GT
0x1a5 ISZERO
0x1a6 PUSH2 0x1e3
0x1a9 JUMPI
---
0x1a1: JUMPDEST 
0x1a4: V149 = GT V148 S2
0x1a5: V150 = ISZERO V149
0x1a6: V151 = 0x1e3
0x1a9: JUMPI 0x1e3 V150
---
Entry stack: [V12, S9, {0x38, 0x52}, S7, 0x0, S5, 0x3, V141, S2, S1, V148]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S9, {0x38, 0x52}, S7, 0x0, S5, 0x3, V141, S2, S1, V148]

================================

Block 0x1aa
[0x1aa:0x1e2]
---
Predecessors: [0x1a1]
Successors: [0x1a1]
---
0x1aa DUP3
0x1ab MLOAD
0x1ac DUP3
0x1ad SLOAD
0x1ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c3 NOT
0x1c4 AND
0x1c5 PUSH1 0x1
0x1c7 PUSH1 0xa0
0x1c9 PUSH1 0x2
0x1cb EXP
0x1cc SUB
0x1cd SWAP1
0x1ce SWAP2
0x1cf AND
0x1d0 OR
0x1d1 DUP3
0x1d2 SSTORE
0x1d3 PUSH1 0x20
0x1d5 SWAP1
0x1d6 SWAP3
0x1d7 ADD
0x1d8 SWAP2
0x1d9 PUSH1 0x1
0x1db SWAP1
0x1dc SWAP2
0x1dd ADD
0x1de SWAP1
0x1df PUSH2 0x1a1
0x1e2 JUMP
---
0x1ab: V152 = M[S2]
0x1ad: V153 = S[S1]
0x1ae: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c3: V155 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1c4: V156 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V153
0x1c5: V157 = 0x1
0x1c7: V158 = 0xa0
0x1c9: V159 = 0x2
0x1cb: V160 = EXP 0x2 0xa0
0x1cc: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cf: V162 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x1d0: V163 = OR V162 V156
0x1d2: S[S1] = V163
0x1d3: V164 = 0x20
0x1d7: V165 = ADD S2 0x20
0x1d9: V166 = 0x1
0x1dd: V167 = ADD S1 0x1
0x1df: V168 = 0x1a1
0x1e2: JUMP 0x1a1
---
Entry stack: [V12, S9, {0x38, 0x52}, S7, 0x0, S5, 0x3, V141, S2, S1, V148]
Stack pops: 3
Stack additions: [V165, V167, S0]
Exit stack: [V12, S9, {0x38, 0x52}, S7, 0x0, S5, 0x3, V141, V165, V167, V148]

================================

Block 0x1e3
[0x1e3:0x1e3]
---
Predecessors: [0x159, 0x1a1]
Successors: [0x1e4]
---
0x1e3 JUMPDEST
---
0x1e3: JUMPDEST 
---
Entry stack: [V12, S9, {0x38, 0x52}, S7, 0x0, S5, 0x3, V141, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, {0x38, 0x52}, S7, 0x0, S5, 0x3, V141, S2, S1, S0]

================================

Block 0x1e4
[0x1e4:0x1eb]
---
Predecessors: [0x1e3]
Successors: [0x1ec]
---
0x1e4 JUMPDEST
0x1e5 POP
0x1e6 PUSH2 0x21b
0x1e9 SWAP3
0x1ea SWAP2
0x1eb POP
---
0x1e4: JUMPDEST 
0x1e6: V169 = 0x21b
---
Entry stack: [V12, S9, {0x38, 0x52}, S7, 0x0, S5, 0x3, V141, S2, S1, S0]
Stack pops: 4
Stack additions: [0x21b, S3, S1]
Exit stack: [V12, S9, {0x38, 0x52}, S7, 0x0, S5, 0x3, 0x21b, V141, S1]

================================

Block 0x1ec
[0x1ec:0x1f4]
---
Predecessors: [0x1e4, 0x1f5]
Successors: [0x1f5, 0x217]
---
0x1ec JUMPDEST
0x1ed DUP1
0x1ee DUP3
0x1ef GT
0x1f0 ISZERO
0x1f1 PUSH2 0x217
0x1f4 JUMPI
---
0x1ec: JUMPDEST 
0x1ef: V170 = GT V141 S0
0x1f0: V171 = ISZERO V170
0x1f1: V172 = 0x217
0x1f4: JUMPI 0x217 V171
---
Entry stack: [V12, S8, {0x38, 0x52}, S6, 0x0, S4, 0x3, 0x21b, V141, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S8, {0x38, 0x52}, S6, 0x0, S4, 0x3, 0x21b, V141, S0]

================================

Block 0x1f5
[0x1f5:0x216]
---
Predecessors: [0x1ec]
Successors: [0x1ec]
---
0x1f5 DUP1
0x1f6 SLOAD
0x1f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20c NOT
0x20d AND
0x20e DUP2
0x20f SSTORE
0x210 PUSH1 0x1
0x212 ADD
0x213 PUSH2 0x1ec
0x216 JUMP
---
0x1f6: V173 = S[S0]
0x1f7: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V175 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V176 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V173
0x20f: S[S0] = V176
0x210: V177 = 0x1
0x212: V178 = ADD 0x1 S0
0x213: V179 = 0x1ec
0x216: JUMP 0x1ec
---
Entry stack: [V12, S8, {0x38, 0x52}, S6, 0x0, S4, 0x3, 0x21b, V141, S0]
Stack pops: 1
Stack additions: [V178]
Exit stack: [V12, S8, {0x38, 0x52}, S6, 0x0, S4, 0x3, 0x21b, V141, V178]

================================

Block 0x217
[0x217:0x21a]
---
Predecessors: [0x1ec, 0x2a9, 0x322, 0x395]
Successors: [0x21b, 0x2c1, 0x33a, 0x3ad]
---
0x217 JUMPDEST
0x218 POP
0x219 SWAP1
0x21a JUMP
---
0x217: JUMPDEST 
0x21a: JUMP {0x21b, 0x2c1, 0x33a, 0x3ad}
---
Entry stack: [V12, S12, {0x38, 0x52}, S10, S9, S8, {0x3, 0x4, 0x38, 0x52}, S6, S5, S4, S3, {0x21b, 0x2c1, 0x33a, 0x3ad}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, S12, {0x38, 0x52}, S10, S9, S8, {0x3, 0x4, 0x38, 0x52}, S6, S5, S4, S3, S1]

================================

Block 0x21b
[0x21b:0x229]
---
Predecessors: [0x217]
Successors: [0x22a, 0x22c]
---
0x21b JUMPDEST
0x21c POP
0x21d POP
0x21e PUSH1 0x0
0x220 PUSH1 0x40
0x222 MLOAD
0x223 DUP1
0x224 MSIZE
0x225 LT
0x226 PUSH2 0x22c
0x229 JUMPI
---
0x21b: JUMPDEST 
0x21e: V180 = 0x0
0x220: V181 = 0x40
0x222: V182 = M[0x40]
0x224: V183 = MSIZE
0x225: V184 = LT V183 V182
0x226: V185 = 0x22c
0x229: JUMPI 0x22c V184
---
Entry stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, {0x3, 0x4, 0x38, 0x52}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [0x0, V182]
Exit stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, {0x3, 0x4, 0x38, 0x52}, S4, S3, S2, 0x0, V182]

================================

Block 0x22a
[0x22a:0x22b]
---
Predecessors: [0x21b]
Successors: [0x22c]
---
0x22a POP
0x22b MSIZE
---
0x22b: V186 = MSIZE
---
Entry stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, {0x3, 0x4, 0x38, 0x52}, S4, S3, S2, 0x0, V182]
Stack pops: 1
Stack additions: [V186]
Exit stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, {0x3, 0x4, 0x38, 0x52}, S4, S3, S2, 0x0, V186]

================================

Block 0x22c
[0x22c:0x23c]
---
Predecessors: [0x21b, 0x22a]
Successors: [0x23d]
---
0x22c JUMPDEST
0x22d SWAP1
0x22e DUP1
0x22f DUP3
0x230 MSTORE
0x231 DUP1
0x232 PUSH1 0x20
0x234 MUL
0x235 PUSH1 0x20
0x237 ADD
0x238 DUP3
0x239 ADD
0x23a PUSH1 0x40
0x23c MSTORE
---
0x22c: JUMPDEST 
0x230: M[S0] = 0x0
0x232: V187 = 0x20
0x234: V188 = MUL 0x20 0x0
0x235: V189 = 0x20
0x237: V190 = ADD 0x20 0x0
0x239: V191 = ADD S0 0x20
0x23a: V192 = 0x40
0x23c: M[0x40] = V191
---
Entry stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, {0x3, 0x4, 0x38, 0x52}, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, {0x3, 0x4, 0x38, 0x52}, S4, S3, S2, S0, 0x0]

================================

Block 0x23d
[0x23d:0x27e]
---
Predecessors: [0x22c]
Successors: [0x27f, 0x2a0]
---
0x23d JUMPDEST
0x23e POP
0x23f DUP1
0x240 MLOAD
0x241 PUSH1 0x4
0x243 DUP1
0x244 SLOAD
0x245 DUP3
0x246 DUP3
0x247 SSTORE
0x248 PUSH1 0x0
0x24a DUP3
0x24b SWAP1
0x24c MSTORE
0x24d SWAP1
0x24e SWAP3
0x24f PUSH32 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x270 SWAP2
0x271 DUP3
0x272 ADD
0x273 SWAP3
0x274 SWAP2
0x275 SWAP1
0x276 PUSH1 0x20
0x278 ADD
0x279 DUP3
0x27a ISZERO
0x27b PUSH2 0x2a0
0x27e JUMPI
---
0x23d: JUMPDEST 
0x240: V193 = M[S1]
0x241: V194 = 0x4
0x244: V195 = S[0x4]
0x247: S[0x4] = V193
0x248: V196 = 0x0
0x24c: M[0x0] = 0x4
0x24f: V197 = 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b
0x272: V198 = ADD 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b V195
0x276: V199 = 0x20
0x278: V200 = ADD 0x20 S1
0x27a: V201 = ISZERO V193
0x27b: V202 = 0x2a0
0x27e: JUMPI 0x2a0 V201
---
Entry stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, {0x3, 0x4, 0x38, 0x52}, S4, S3, S2, S1, 0x0]
Stack pops: 2
Stack additions: [0x4, V198, V193, 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b, V200]
Exit stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, {0x3, 0x4, 0x38, 0x52}, S4, S3, S2, 0x4, V198, V193, 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b, V200]

================================

Block 0x27f
[0x27f:0x284]
---
Predecessors: [0x23d]
Successors: [0x285]
---
0x27f SWAP2
0x280 PUSH1 0x20
0x282 MUL
0x283 DUP3
0x284 ADD
---
0x280: V203 = 0x20
0x282: V204 = MUL 0x20 V193
0x284: V205 = ADD V200 V204
---
Entry stack: [V12, S13, {0x38, 0x52}, S11, S10, S9, {0x3, 0x4, 0x38, 0x52}, S7, S6, S5, 0x4, V198, V193, 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b, V200]
Stack pops: 3
Stack additions: [S0, S1, V205]
Exit stack: [V12, S13, {0x38, 0x52}, S11, S10, S9, {0x3, 0x4, 0x38, 0x52}, S7, S6, S5, 0x4, V198, V200, 0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b, V205]

================================

Block 0x285
[0x285:0x28d]
---
Predecessors: [0x27f, 0x28e]
Successors: [0x28e, 0x2a0]
---
0x285 JUMPDEST
0x286 DUP3
0x287 DUP2
0x288 GT
0x289 ISZERO
0x28a PUSH2 0x2a0
0x28d JUMPI
---
0x285: JUMPDEST 
0x288: V206 = GT V205 S2
0x289: V207 = ISZERO V206
0x28a: V208 = 0x2a0
0x28d: JUMPI 0x2a0 V207
---
Entry stack: [V12, S13, {0x38, 0x52}, S11, S10, S9, {0x3, 0x4, 0x38, 0x52}, S7, S6, S5, 0x4, V198, S2, S1, V205]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S13, {0x38, 0x52}, S11, S10, S9, {0x3, 0x4, 0x38, 0x52}, S7, S6, S5, 0x4, V198, S2, S1, V205]

================================

Block 0x28e
[0x28e:0x29f]
---
Predecessors: [0x285]
Successors: [0x285]
---
0x28e DUP3
0x28f MLOAD
0x290 DUP3
0x291 SSTORE
0x292 SWAP2
0x293 PUSH1 0x20
0x295 ADD
0x296 SWAP2
0x297 SWAP1
0x298 PUSH1 0x1
0x29a ADD
0x29b SWAP1
0x29c PUSH2 0x285
0x29f JUMP
---
0x28f: V209 = M[S2]
0x291: S[S1] = V209
0x293: V210 = 0x20
0x295: V211 = ADD 0x20 S2
0x298: V212 = 0x1
0x29a: V213 = ADD 0x1 S1
0x29c: V214 = 0x285
0x29f: JUMP 0x285
---
Entry stack: [V12, S13, {0x38, 0x52}, S11, S10, S9, {0x3, 0x4, 0x38, 0x52}, S7, S6, S5, 0x4, V198, S2, S1, V205]
Stack pops: 3
Stack additions: [V211, V213, S0]
Exit stack: [V12, S13, {0x38, 0x52}, S11, S10, S9, {0x3, 0x4, 0x38, 0x52}, S7, S6, S5, 0x4, V198, V211, V213, V205]

================================

Block 0x2a0
[0x2a0:0x2a0]
---
Predecessors: [0x23d, 0x285]
Successors: [0x2a1]
---
0x2a0 JUMPDEST
---
0x2a0: JUMPDEST 
---
Entry stack: [V12, S13, {0x38, 0x52}, S11, S10, S9, {0x3, 0x4, 0x38, 0x52}, S7, S6, S5, 0x4, V198, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, {0x38, 0x52}, S11, S10, S9, {0x3, 0x4, 0x38, 0x52}, S7, S6, S5, 0x4, V198, S2, S1, S0]

================================

Block 0x2a1
[0x2a1:0x2a8]
---
Predecessors: [0x2a0]
Successors: [0x2a9]
---
0x2a1 JUMPDEST
0x2a2 POP
0x2a3 PUSH2 0x2c1
0x2a6 SWAP3
0x2a7 SWAP2
0x2a8 POP
---
0x2a1: JUMPDEST 
0x2a3: V215 = 0x2c1
---
Entry stack: [V12, S13, {0x38, 0x52}, S11, S10, S9, {0x3, 0x4, 0x38, 0x52}, S7, S6, S5, 0x4, V198, S2, S1, S0]
Stack pops: 4
Stack additions: [0x2c1, S3, S1]
Exit stack: [V12, S13, {0x38, 0x52}, S11, S10, S9, {0x3, 0x4, 0x38, 0x52}, S7, S6, S5, 0x4, 0x2c1, V198, S1]

================================

Block 0x2a9
[0x2a9:0x2b1]
---
Predecessors: [0x2a1, 0x2b2, 0x32b, 0x39e]
Successors: [0x217, 0x2b2]
---
0x2a9 JUMPDEST
0x2aa DUP1
0x2ab DUP3
0x2ac GT
0x2ad ISZERO
0x2ae PUSH2 0x217
0x2b1 JUMPI
---
0x2a9: JUMPDEST 
0x2ac: V216 = GT S1 S0
0x2ad: V217 = ISZERO V216
0x2ae: V218 = 0x217
0x2b1: JUMPI 0x217 V217
---
Entry stack: [V12, S12, {0x38, 0x52}, S10, S9, S8, {0x3, 0x4, 0x38, 0x52}, S6, S5, S4, S3, {0x2c1, 0x33a, 0x3ad}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S12, {0x38, 0x52}, S10, S9, S8, {0x3, 0x4, 0x38, 0x52}, S6, S5, S4, S3, {0x2c1, 0x33a, 0x3ad}, S1, S0]

================================

Block 0x2b2
[0x2b2:0x2bc]
---
Predecessors: [0x2a9]
Successors: [0x2a9]
---
0x2b2 PUSH1 0x0
0x2b4 DUP2
0x2b5 SSTORE
0x2b6 PUSH1 0x1
0x2b8 ADD
0x2b9 PUSH2 0x2a9
0x2bc JUMP
---
0x2b2: V219 = 0x0
0x2b5: S[S0] = 0x0
0x2b6: V220 = 0x1
0x2b8: V221 = ADD 0x1 S0
0x2b9: V222 = 0x2a9
0x2bc: JUMP 0x2a9
---
Entry stack: [V12, S12, {0x38, 0x52}, S10, S9, S8, {0x3, 0x4, 0x38, 0x52}, S6, S5, S4, S3, {0x2c1, 0x33a, 0x3ad}, S1, S0]
Stack pops: 1
Stack additions: [V221]
Exit stack: [V12, S12, {0x38, 0x52}, S10, S9, S8, {0x3, 0x4, 0x38, 0x52}, S6, S5, S4, S3, {0x2c1, 0x33a, 0x3ad}, S1, V221]

================================

Block 0x2bd
[0x2bd:0x2c0]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x2bd JUMPDEST
0x2be POP
0x2bf SWAP1
0x2c0 JUMP
---
0x2bd: JUMPDEST 
0x2c0: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0x2c1
[0x2c1:0x2e1]
---
Predecessors: [0x217]
Successors: [0x454]
---
0x2c1 JUMPDEST
0x2c2 POP
0x2c3 POP
0x2c4 PUSH1 0x7
0x2c6 DUP1
0x2c7 SLOAD
0x2c8 PUSH1 0xff
0x2ca DUP1
0x2cb DUP3
0x2cc AND
0x2cd PUSH1 0x1
0x2cf ADD
0x2d0 AND
0x2d1 PUSH1 0xff
0x2d3 NOT
0x2d4 SWAP1
0x2d5 SWAP2
0x2d6 AND
0x2d7 OR
0x2d8 SWAP1
0x2d9 SSTORE
0x2da PUSH1 0x0
0x2dc SWAP2
0x2dd POP
0x2de PUSH2 0x454
0x2e1 JUMP
---
0x2c1: JUMPDEST 
0x2c4: V223 = 0x7
0x2c7: V224 = S[0x7]
0x2c8: V225 = 0xff
0x2cc: V226 = AND V224 0xff
0x2cd: V227 = 0x1
0x2cf: V228 = ADD 0x1 V226
0x2d0: V229 = AND V228 0xff
0x2d1: V230 = 0xff
0x2d3: V231 = NOT 0xff
0x2d6: V232 = AND V224 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x2d7: V233 = OR V232 V229
0x2d9: S[0x7] = V233
0x2da: V234 = 0x0
0x2de: V235 = 0x454
0x2e1: JUMP 0x454
---
Entry stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, {0x3, 0x4, 0x38, 0x52}, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x0, S2]
Exit stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, {0x3, 0x4, 0x38, 0x52}, S4, 0x0, S2]

================================

Block 0x2e2
[0x2e2:0x2f1]
---
Predecessors: [0x66]
Successors: [0x2f2, 0x42a]
---
0x2e2 JUMPDEST
0x2e3 PUSH8 0xde0b6b3a7640000
0x2ec DUP2
0x2ed LT
0x2ee PUSH2 0x42a
0x2f1 JUMPI
---
0x2e2: JUMPDEST 
0x2e3: V236 = 0xde0b6b3a7640000
0x2ed: V237 = LT V42 0xde0b6b3a7640000
0x2ee: V238 = 0x42a
0x2f1: JUMPI 0x42a V237
---
Entry stack: [V12, S4, {0x38, 0x52}, S2, 0x0, V42]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S4, {0x38, 0x52}, S2, 0x0, V42]

================================

Block 0x2f2
[0x2f2:0x30f]
---
Predecessors: [0x2e2]
Successors: [0x310, 0x33a]
---
0x2f2 TIMESTAMP
0x2f3 PUSH1 0x1
0x2f5 DUP2
0x2f6 SWAP1
0x2f7 SSTORE
0x2f8 POP
0x2f9 PUSH1 0x3
0x2fb DUP1
0x2fc SLOAD
0x2fd DUP1
0x2fe PUSH1 0x1
0x300 ADD
0x301 DUP3
0x302 DUP2
0x303 DUP2
0x304 SLOAD
0x305 DUP2
0x306 DUP4
0x307 SSTORE
0x308 DUP2
0x309 DUP2
0x30a ISZERO
0x30b GT
0x30c PUSH2 0x33a
0x30f JUMPI
---
0x2f2: V239 = TIMESTAMP
0x2f3: V240 = 0x1
0x2f7: S[0x1] = V239
0x2f9: V241 = 0x3
0x2fc: V242 = S[0x3]
0x2fe: V243 = 0x1
0x300: V244 = ADD 0x1 V242
0x304: V245 = S[0x3]
0x307: S[0x3] = V244
0x30a: V246 = ISZERO V245
0x30b: V247 = GT V246 V244
0x30c: V248 = 0x33a
0x30f: JUMPI 0x33a V247
---
Entry stack: [V12, S4, {0x38, 0x52}, S2, 0x0, V42]
Stack pops: 0
Stack additions: [0x3, V242, V244, 0x3, V244, V245]
Exit stack: [V12, S4, {0x38, 0x52}, S2, 0x0, V42, 0x3, V242, V244, 0x3, V244, V245]

================================

Block 0x310
[0x310:0x321]
---
Predecessors: [0x2f2]
Successors: [0x322]
---
0x310 PUSH1 0x0
0x312 DUP4
0x313 DUP2
0x314 MSTORE
0x315 PUSH1 0x20
0x317 SWAP1
0x318 SHA3
0x319 PUSH2 0x33a
0x31c SWAP2
0x31d DUP2
0x31e ADD
0x31f SWAP1
0x320 DUP4
0x321 ADD
---
0x310: V249 = 0x0
0x314: M[0x0] = 0x3
0x315: V250 = 0x20
0x318: V251 = SHA3 0x0 0x20
0x319: V252 = 0x33a
0x31e: V253 = ADD V251 V245
0x321: V254 = ADD V244 V251
---
Entry stack: [V12, S10, {0x38, 0x52}, S8, 0x0, S6, 0x3, V242, V244, 0x3, V244, V245]
Stack pops: 3
Stack additions: [S2, S1, 0x33a, V253, V254]
Exit stack: [V12, S10, {0x38, 0x52}, S8, 0x0, S6, 0x3, V242, V244, 0x3, V244, 0x33a, V253, V254]

================================

Block 0x322
[0x322:0x32a]
---
Predecessors: [0x310]
Successors: [0x217, 0x32b]
---
0x322 JUMPDEST
0x323 DUP1
0x324 DUP3
0x325 GT
0x326 ISZERO
0x327 PUSH2 0x217
0x32a JUMPI
---
0x322: JUMPDEST 
0x325: V255 = GT V253 V254
0x326: V256 = ISZERO V255
0x327: V257 = 0x217
0x32a: JUMPI 0x217 V256
---
Entry stack: [V12, S12, {0x38, 0x52}, S10, 0x0, S8, 0x3, S6, S5, 0x3, S3, 0x33a, V253, V254]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S12, {0x38, 0x52}, S10, 0x0, S8, 0x3, S6, S5, 0x3, S3, 0x33a, V253, V254]

================================

Block 0x32b
[0x32b:0x335]
---
Predecessors: [0x322]
Successors: [0x2a9]
---
0x32b PUSH1 0x0
0x32d DUP2
0x32e SSTORE
0x32f PUSH1 0x1
0x331 ADD
0x332 PUSH2 0x2a9
0x335 JUMP
---
0x32b: V258 = 0x0
0x32e: S[S0] = 0x0
0x32f: V259 = 0x1
0x331: V260 = ADD 0x1 S0
0x332: V261 = 0x2a9
0x335: JUMP 0x2a9
---
Entry stack: [V12, S12, {0x38, 0x52}, S10, 0x0, S8, 0x3, S6, S5, 0x3, S3, 0x33a, S1, S0]
Stack pops: 1
Stack additions: [V260]
Exit stack: [V12, S12, {0x38, 0x52}, S10, 0x0, S8, 0x3, S6, S5, 0x3, S3, 0x33a, S1, V260]

================================

Block 0x336
[0x336:0x339]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x336 JUMPDEST
0x337 POP
0x338 SWAP1
0x339 JUMP
---
0x336: JUMPDEST 
0x339: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0x33a
[0x33a:0x33a]
---
Predecessors: [0x217, 0x2f2]
Successors: [0x33b]
---
0x33a JUMPDEST
---
0x33a: JUMPDEST 
---
Entry stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, {0x3, 0x4, 0x38, 0x52}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, {0x3, 0x4, 0x38, 0x52}, S4, S3, S2, S1, S0]

================================

Block 0x33b
[0x33b:0x34b]
---
Predecessors: [0x33a]
Successors: [0x34c]
---
0x33b JUMPDEST
0x33c POP
0x33d POP
0x33e POP
0x33f SWAP2
0x340 PUSH1 0x0
0x342 MSTORE
0x343 PUSH1 0x20
0x345 PUSH1 0x0
0x347 SHA3
0x348 SWAP1
0x349 ADD
0x34a PUSH1 0x0
---
0x33b: JUMPDEST 
0x340: V262 = 0x0
0x342: M[0x0] = {0x3, 0x4, 0x38, 0x52}
0x343: V263 = 0x20
0x345: V264 = 0x0
0x347: V265 = SHA3 0x0 0x20
0x349: V266 = ADD S4 V265
0x34a: V267 = 0x0
---
Entry stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, {0x3, 0x4, 0x38, 0x52}, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S3, V266, 0x0]
Exit stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, S3, V266, 0x0]

================================

Block 0x34c
[0x34c:0x382]
---
Predecessors: [0x33b]
Successors: [0x383, 0x3ad]
---
0x34c JUMPDEST
0x34d DUP2
0x34e SLOAD
0x34f PUSH1 0x1
0x351 PUSH1 0xa0
0x353 PUSH1 0x2
0x355 EXP
0x356 SUB
0x357 CALLER
0x358 DUP2
0x359 AND
0x35a PUSH2 0x100
0x35d SWAP4
0x35e SWAP1
0x35f SWAP4
0x360 EXP
0x361 SWAP3
0x362 DUP4
0x363 MUL
0x364 SWAP3
0x365 MUL
0x366 NOT
0x367 AND
0x368 OR
0x369 SWAP1
0x36a SSTORE
0x36b POP
0x36c PUSH1 0x4
0x36e DUP1
0x36f SLOAD
0x370 PUSH1 0x1
0x372 DUP2
0x373 ADD
0x374 DUP1
0x375 DUP4
0x376 SSTORE
0x377 DUP3
0x378 DUP2
0x379 DUP4
0x37a DUP1
0x37b ISZERO
0x37c DUP3
0x37d SWAP1
0x37e GT
0x37f PUSH2 0x3ad
0x382 JUMPI
---
0x34c: JUMPDEST 
0x34e: V268 = S[V266]
0x34f: V269 = 0x1
0x351: V270 = 0xa0
0x353: V271 = 0x2
0x355: V272 = EXP 0x2 0xa0
0x356: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x357: V274 = CALLER
0x359: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x35a: V276 = 0x100
0x360: V277 = EXP 0x100 0x0
0x363: V278 = MUL 0x1 V275
0x365: V279 = MUL 0x1 0xffffffffffffffffffffffffffffffffffffffff
0x366: V280 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x367: V281 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V268
0x368: V282 = OR V281 V278
0x36a: S[V266] = V282
0x36c: V283 = 0x4
0x36f: V284 = S[0x4]
0x370: V285 = 0x1
0x373: V286 = ADD V284 0x1
0x376: S[0x4] = V286
0x37b: V287 = ISZERO V284
0x37e: V288 = GT V287 V286
0x37f: V289 = 0x3ad
0x382: JUMPI 0x3ad V288
---
Entry stack: [V12, S7, {0x38, 0x52}, S5, S4, S3, S2, V266, 0x0]
Stack pops: 3
Stack additions: [0x4, V284, V286, 0x4, V286, V284]
Exit stack: [V12, S7, {0x38, 0x52}, S5, S4, S3, 0x4, V284, V286, 0x4, V286, V284]

================================

Block 0x383
[0x383:0x394]
---
Predecessors: [0x34c]
Successors: [0x395]
---
0x383 PUSH1 0x0
0x385 DUP4
0x386 DUP2
0x387 MSTORE
0x388 PUSH1 0x20
0x38a SWAP1
0x38b SHA3
0x38c PUSH2 0x3ad
0x38f SWAP2
0x390 DUP2
0x391 ADD
0x392 SWAP1
0x393 DUP4
0x394 ADD
---
0x383: V290 = 0x0
0x387: M[0x0] = 0x4
0x388: V291 = 0x20
0x38b: V292 = SHA3 0x0 0x20
0x38c: V293 = 0x3ad
0x391: V294 = ADD V292 V284
0x394: V295 = ADD V286 V292
---
Entry stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, 0x4, V284, V286, 0x4, V286, V284]
Stack pops: 3
Stack additions: [S2, S1, 0x3ad, V294, V295]
Exit stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, 0x4, V284, V286, 0x4, V286, 0x3ad, V294, V295]

================================

Block 0x395
[0x395:0x39d]
---
Predecessors: [0x383]
Successors: [0x217, 0x39e]
---
0x395 JUMPDEST
0x396 DUP1
0x397 DUP3
0x398 GT
0x399 ISZERO
0x39a PUSH2 0x217
0x39d JUMPI
---
0x395: JUMPDEST 
0x398: V296 = GT V294 V295
0x399: V297 = ISZERO V296
0x39a: V298 = 0x217
0x39d: JUMPI 0x217 V297
---
Entry stack: [V12, S12, {0x38, 0x52}, S10, S9, S8, 0x4, S6, S5, 0x4, S3, 0x3ad, V294, V295]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S12, {0x38, 0x52}, S10, S9, S8, 0x4, S6, S5, 0x4, S3, 0x3ad, V294, V295]

================================

Block 0x39e
[0x39e:0x3a8]
---
Predecessors: [0x395]
Successors: [0x2a9]
---
0x39e PUSH1 0x0
0x3a0 DUP2
0x3a1 SSTORE
0x3a2 PUSH1 0x1
0x3a4 ADD
0x3a5 PUSH2 0x2a9
0x3a8 JUMP
---
0x39e: V299 = 0x0
0x3a1: S[S0] = 0x0
0x3a2: V300 = 0x1
0x3a4: V301 = ADD 0x1 S0
0x3a5: V302 = 0x2a9
0x3a8: JUMP 0x2a9
---
Entry stack: [V12, S12, {0x38, 0x52}, S10, S9, S8, 0x4, S6, S5, 0x4, S3, 0x3ad, S1, S0]
Stack pops: 1
Stack additions: [V301]
Exit stack: [V12, S12, {0x38, 0x52}, S10, S9, S8, 0x4, S6, S5, 0x4, S3, 0x3ad, S1, V301]

================================

Block 0x3a9
[0x3a9:0x3ac]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x3a9 JUMPDEST
0x3aa POP
0x3ab SWAP1
0x3ac JUMP
---
0x3a9: JUMPDEST 
0x3ac: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0x3ad
[0x3ad:0x3ad]
---
Predecessors: [0x217, 0x34c]
Successors: [0x3ae]
---
0x3ad JUMPDEST
---
0x3ad: JUMPDEST 
---
Entry stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, {0x3, 0x4, 0x38, 0x52}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, {0x3, 0x4, 0x38, 0x52}, S4, S3, S2, S1, S0]

================================

Block 0x3ae
[0x3ae:0x3be]
---
Predecessors: [0x3ad]
Successors: [0x3bf]
---
0x3ae JUMPDEST
0x3af POP
0x3b0 POP
0x3b1 POP
0x3b2 SWAP2
0x3b3 PUSH1 0x0
0x3b5 MSTORE
0x3b6 PUSH1 0x20
0x3b8 PUSH1 0x0
0x3ba SHA3
0x3bb SWAP1
0x3bc ADD
0x3bd PUSH1 0x0
---
0x3ae: JUMPDEST 
0x3b3: V303 = 0x0
0x3b5: M[0x0] = {0x3, 0x4, 0x38, 0x52}
0x3b6: V304 = 0x20
0x3b8: V305 = 0x0
0x3ba: V306 = SHA3 0x0 0x20
0x3bc: V307 = ADD S4 V306
0x3bd: V308 = 0x0
---
Entry stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, {0x3, 0x4, 0x38, 0x52}, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S3, V307, 0x0]
Exit stack: [V12, S10, {0x38, 0x52}, S8, S7, S6, S3, V307, 0x0]

================================

Block 0x3bf
[0x3bf:0x412]
---
Predecessors: [0x3ae]
Successors: [0x413, 0x421]
---
0x3bf JUMPDEST
0x3c0 PUSH1 0x64
0x3c2 PUSH1 0x6e
0x3c4 DUP6
0x3c5 MUL
0x3c6 DIV
0x3c7 SWAP1
0x3c8 SWAP2
0x3c9 SSTORE
0x3ca POP
0x3cb POP
0x3cc PUSH1 0x5
0x3ce DUP1
0x3cf SLOAD
0x3d0 PUSH1 0x1
0x3d2 PUSH1 0xa0
0x3d4 PUSH1 0x2
0x3d6 EXP
0x3d7 SUB
0x3d8 AND
0x3d9 SWAP1
0x3da PUSH2 0x8fc
0x3dd SWAP1
0x3de PUSH1 0x64
0x3e0 SWAP1
0x3e1 DUP5
0x3e2 MUL
0x3e3 PUSH1 0x40
0x3e5 MLOAD
0x3e6 SWAP2
0x3e7 SWAP1
0x3e8 DIV
0x3e9 DUP1
0x3ea ISZERO
0x3eb SWAP1
0x3ec SWAP3
0x3ed MUL
0x3ee SWAP2
0x3ef SWAP1
0x3f0 PUSH1 0x0
0x3f2 DUP2
0x3f3 DUP2
0x3f4 DUP2
0x3f5 DUP6
0x3f6 DUP9
0x3f7 DUP9
0x3f8 CALL
0x3f9 SWAP4
0x3fa POP
0x3fb POP
0x3fc POP
0x3fd POP
0x3fe POP
0x3ff PUSH10 0x21e19e0c9bab2400000
0x40a PUSH1 0x2
0x40c SLOAD
0x40d LT
0x40e ISZERO
0x40f PUSH2 0x421
0x412 JUMPI
---
0x3bf: JUMPDEST 
0x3c0: V309 = 0x64
0x3c2: V310 = 0x6e
0x3c5: V311 = MUL S3 0x6e
0x3c6: V312 = DIV V311 0x64
0x3c9: S[V307] = V312
0x3cc: V313 = 0x5
0x3cf: V314 = S[0x5]
0x3d0: V315 = 0x1
0x3d2: V316 = 0xa0
0x3d4: V317 = 0x2
0x3d6: V318 = EXP 0x2 0xa0
0x3d7: V319 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d8: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x3da: V321 = 0x8fc
0x3de: V322 = 0x64
0x3e2: V323 = MUL S3 0x5
0x3e3: V324 = 0x40
0x3e5: V325 = M[0x40]
0x3e8: V326 = DIV V323 0x64
0x3ea: V327 = ISZERO V326
0x3ed: V328 = MUL 0x8fc V327
0x3f0: V329 = 0x0
0x3f8: V330 = CALL V328 V320 V326 V325 0x0 V325 0x0
0x3ff: V331 = 0x21e19e0c9bab2400000
0x40a: V332 = 0x2
0x40c: V333 = S[0x2]
0x40d: V334 = LT V333 0x21e19e0c9bab2400000
0x40e: V335 = ISZERO V334
0x40f: V336 = 0x421
0x412: JUMPI 0x421 V335
---
Entry stack: [V12, S7, {0x38, 0x52}, S5, S4, S3, S2, V307, 0x0]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, S7, {0x38, 0x52}, S5, S4, S3]

================================

Block 0x413
[0x413:0x420]
---
Predecessors: [0x3bf]
Successors: [0x421]
---
0x413 PUSH1 0x2
0x415 DUP1
0x416 SLOAD
0x417 PUSH1 0x64
0x419 PUSH1 0x5
0x41b DUP5
0x41c MUL
0x41d DIV
0x41e ADD
0x41f SWAP1
0x420 SSTORE
---
0x413: V337 = 0x2
0x416: V338 = S[0x2]
0x417: V339 = 0x64
0x419: V340 = 0x5
0x41c: V341 = MUL S0 0x5
0x41d: V342 = DIV V341 0x64
0x41e: V343 = ADD V342 V338
0x420: S[0x2] = V343
---
Entry stack: [V12, S4, {0x38, 0x52}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S4, {0x38, 0x52}, S2, S1, S0]

================================

Block 0x421
[0x421:0x429]
---
Predecessors: [0x3bf, 0x413]
Successors: [0x454]
---
0x421 JUMPDEST
0x422 PUSH1 0x1
0x424 SWAP2
0x425 POP
0x426 PUSH2 0x454
0x429 JUMP
---
0x421: JUMPDEST 
0x422: V344 = 0x1
0x426: V345 = 0x454
0x429: JUMP 0x454
---
Entry stack: [V12, S4, {0x38, 0x52}, S2, S1, S0]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V12, S4, {0x38, 0x52}, S2, 0x1, S0]

================================

Block 0x42a
[0x42a:0x453]
---
Predecessors: [0x2e2]
Successors: [0x454]
---
0x42a JUMPDEST
0x42b PUSH1 0x40
0x42d MLOAD
0x42e PUSH1 0x1
0x430 PUSH1 0xa0
0x432 PUSH1 0x2
0x434 EXP
0x435 SUB
0x436 CALLER
0x437 AND
0x438 SWAP1
0x439 DUP3
0x43a ISZERO
0x43b PUSH2 0x8fc
0x43e MUL
0x43f SWAP1
0x440 DUP4
0x441 SWAP1
0x442 PUSH1 0x0
0x444 DUP2
0x445 DUP2
0x446 DUP2
0x447 DUP6
0x448 DUP9
0x449 DUP9
0x44a CALL
0x44b POP
0x44c PUSH1 0x0
0x44e SWAP6
0x44f POP
0x450 POP
0x451 POP
0x452 POP
0x453 POP
---
0x42a: JUMPDEST 
0x42b: V346 = 0x40
0x42d: V347 = M[0x40]
0x42e: V348 = 0x1
0x430: V349 = 0xa0
0x432: V350 = 0x2
0x434: V351 = EXP 0x2 0xa0
0x435: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x436: V353 = CALLER
0x437: V354 = AND V353 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V355 = ISZERO S0
0x43b: V356 = 0x8fc
0x43e: V357 = MUL 0x8fc V355
0x442: V358 = 0x0
0x44a: V359 = CALL V357 V354 S0 V347 0x0 V347 0x0
0x44c: V360 = 0x0
---
Entry stack: [V12, S4, {0x38, 0x52}, S2, 0x0, S0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, S4, {0x38, 0x52}, S2, 0x0, S0]

================================

Block 0x454
[0x454:0x454]
---
Predecessors: [0x2c1, 0x421, 0x42a]
Successors: [0x455]
---
0x454 JUMPDEST
---
0x454: JUMPDEST 
---
Entry stack: [V12, S8, {0x38, 0x52}, S6, S5, S4, {0x3, 0x4, 0x38, 0x52}, S2, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, {0x38, 0x52}, S6, S5, S4, {0x3, 0x4, 0x38, 0x52}, S2, {0x0, 0x1}, S0]

================================

Block 0x455
[0x455:0x455]
---
Predecessors: [0x454]
Successors: [0x456]
---
0x455 JUMPDEST
---
0x455: JUMPDEST 
---
Entry stack: [V12, S8, {0x38, 0x52}, S6, S5, S4, {0x3, 0x4, 0x38, 0x52}, S2, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, {0x38, 0x52}, S6, S5, S4, {0x3, 0x4, 0x38, 0x52}, S2, {0x0, 0x1}, S0]

================================

Block 0x456
[0x456:0x45b]
---
Predecessors: [0x455]
Successors: [0x38, 0x52]
---
0x456 JUMPDEST
0x457 POP
0x458 SWAP2
0x459 SWAP1
0x45a POP
0x45b JUMP
---
0x456: JUMPDEST 
0x45b: JUMP {0x3, 0x4, 0x38, 0x52}
---
Entry stack: [V12, S8, {0x38, 0x52}, S6, S5, S4, {0x3, 0x4, 0x38, 0x52}, S2, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, S8, {0x38, 0x52}, S6, S5, S4, {0x0, 0x1}]

================================

Block 0x45c
[0x45c:0x487]
---
Predecessors: []
Successors: []
---
0x45c STOP
0x45d LOG1
0x45e PUSH6 0x627a7a723058
0x465 SHA3
0x466 MISSING 0xcc
0x467 SLOAD
0x468 MISSING 0xe0
0x469 MISSING 0xb1
0x46a MOD
0x46b MISSING 0x2e
0x46c MISSING 0xe3
0x46d LOG3
0x46e DUP13
0x46f ADDMOD
0x470 PUSH16 0x24ec0022ede1b9785f925754931f0b4e
0x481 DELEGATECALL
0x482 DUP14
0x483 MISSING 0x21
0x484 EQ
0x485 ISZERO
0x486 STOP
0x487 MISSING 0x29
---
0x45c: STOP 
0x45d: LOG S0 S1 S2
0x45e: V361 = 0x627a7a723058
0x465: V362 = SHA3 0x627a7a723058 S3
0x466: MISSING 0xcc
0x467: V363 = S[S0]
0x468: MISSING 0xe0
0x469: MISSING 0xb1
0x46a: V364 = MOD S0 S1
0x46b: MISSING 0x2e
0x46c: MISSING 0xe3
0x46d: LOG S0 S1 S2 S3 S4
0x46f: V365 = ADDMOD S17 S5 S6
0x470: V366 = 0x24ec0022ede1b9785f925754931f0b4e
0x481: V367 = DELEGATECALL 0x24ec0022ede1b9785f925754931f0b4e V365 S7 S8 S9 S10
0x483: MISSING 0x21
0x484: V368 = EQ S0 S1
0x485: V369 = ISZERO V368
0x486: STOP 
0x487: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V362, V363, V364, S23, V367, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, V369]
Exit stack: []

================================

Function 0:
Public function signature: 0xf8856b28
Entry block: 0x3e
Exit block: 0x52
Body: 0x3e, 0x52

Function 1:
Public fallback function
Entry block: 0x25
Exit block: 0x3c
Body: 0x25, 0x2b, 0x2e, 0x38, 0x3a, 0x3c

Function 2:
Private function
Entry block: 0x66
Exit block: 0x456
Body: 0x66, 0x7c, 0xb5, 0xc2, 0x146, 0x148, 0x159, 0x19b, 0x1a1, 0x1aa, 0x1e3, 0x1e4, 0x1ec, 0x1f5, 0x217, 0x21b, 0x22a, 0x22c, 0x23d, 0x27f, 0x285, 0x28e, 0x2a0, 0x2a1, 0x2a9, 0x2b2, 0x2c1, 0x2e2, 0x2f2, 0x310, 0x322, 0x32b, 0x33a, 0x33b, 0x34c, 0x383, 0x395, 0x39e, 0x3ad, 0x3ae, 0x3bf, 0x413, 0x421, 0x42a, 0x454, 0x455, 0x456

