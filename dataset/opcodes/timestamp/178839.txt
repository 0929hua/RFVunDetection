Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x98]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x98
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x98
0xa: JUMPI 0x98 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x111]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x89c22ad
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x111
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x89c22ad
0x1a: V12 = EQ V10 0x89c22ad
0x1b: V13 = 0x111
0x1e: JUMPI 0x111 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x11f]
---
0x1f DUP1
0x20 PUSH4 0x38af3eed
0x25 EQ
0x26 PUSH2 0x11f
0x29 JUMPI
---
0x20: V14 = 0x38af3eed
0x25: V15 = EQ 0x38af3eed V10
0x26: V16 = 0x11f
0x29: JUMPI 0x11f V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x136]
---
0x2a DUP1
0x2b PUSH4 0x4b449cba
0x30 EQ
0x31 PUSH2 0x136
0x34 JUMPI
---
0x2b: V17 = 0x4b449cba
0x30: V18 = EQ 0x4b449cba V10
0x31: V19 = 0x136
0x34: JUMPI 0x136 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x155]
---
0x35 DUP1
0x36 PUSH4 0x4d804e60
0x3b EQ
0x3c PUSH2 0x155
0x3f JUMPI
---
0x36: V20 = 0x4d804e60
0x3b: V21 = EQ 0x4d804e60 V10
0x3c: V22 = 0x155
0x3f: JUMPI 0x155 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x167]
---
0x40 DUP1
0x41 PUSH4 0x4f245ef7
0x46 EQ
0x47 PUSH2 0x167
0x4a JUMPI
---
0x41: V23 = 0x4f245ef7
0x46: V24 = EQ 0x4f245ef7 V10
0x47: V25 = 0x167
0x4a: JUMPI 0x167 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x175]
---
0x4b DUP1
0x4c PUSH4 0x5d7db95d
0x51 EQ
0x52 PUSH2 0x175
0x55 JUMPI
---
0x4c: V26 = 0x5d7db95d
0x51: V27 = EQ 0x5d7db95d V10
0x52: V28 = 0x175
0x55: JUMPI 0x175 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x19a]
---
0x56 DUP1
0x57 PUSH4 0x5f8909bd
0x5c EQ
0x5d PUSH2 0x19a
0x60 JUMPI
---
0x57: V29 = 0x5f8909bd
0x5c: V30 = EQ 0x5f8909bd V10
0x5d: V31 = 0x19a
0x60: JUMPI 0x19a V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1a8]
---
0x61 DUP1
0x62 PUSH4 0x6bd61a66
0x67 EQ
0x68 PUSH2 0x1a8
0x6b JUMPI
---
0x62: V32 = 0x6bd61a66
0x67: V33 = EQ 0x6bd61a66 V10
0x68: V34 = 0x1a8
0x6b: JUMPI 0x1a8 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1b5]
---
0x6c DUP1
0x6d PUSH4 0x7f0a1bed
0x72 EQ
0x73 PUSH2 0x1b5
0x76 JUMPI
---
0x6d: V35 = 0x7f0a1bed
0x72: V36 = EQ 0x7f0a1bed V10
0x73: V37 = 0x1b5
0x76: JUMPI 0x1b5 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1d8]
---
0x77 DUP1
0x78 PUSH4 0x91f90157
0x7d EQ
0x7e PUSH2 0x1d8
0x81 JUMPI
---
0x78: V38 = 0x91f90157
0x7d: V39 = EQ 0x91f90157 V10
0x7e: V40 = 0x1d8
0x81: JUMPI 0x1d8 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x1ef]
---
0x82 DUP1
0x83 PUSH4 0x951504c5
0x88 EQ
0x89 PUSH2 0x1ef
0x8c JUMPI
---
0x83: V41 = 0x951504c5
0x88: V42 = EQ 0x951504c5 V10
0x89: V43 = 0x1ef
0x8c: JUMPI 0x1ef V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x214]
---
0x8d DUP1
0x8e PUSH4 0xd57bde79
0x93 EQ
0x94 PUSH2 0x214
0x97 JUMPI
---
0x8e: V44 = 0xd57bde79
0x93: V45 = EQ 0xd57bde79 V10
0x94: V46 = 0x214
0x97: JUMPI 0x214 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x98
[0x98:0xa9]
---
Predecessors: [0x0, 0x8d]
Successors: [0xaa, 0x224]
---
0x98 JUMPDEST
0x99 PUSH2 0x222
0x9c PUSH6 0x5af3107a4000
0xa3 CALLVALUE
0xa4 EQ
0xa5 ISZERO
0xa6 PUSH2 0x224
0xa9 JUMPI
---
0x98: JUMPDEST 
0x99: V47 = 0x222
0x9c: V48 = 0x5af3107a4000
0xa3: V49 = CALLVALUE
0xa4: V50 = EQ V49 0x5af3107a4000
0xa5: V51 = ISZERO V50
0xa6: V52 = 0x224
0xa9: JUMPI 0x224 V51
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x222]
Exit stack: [V10, 0x222]

================================

Block 0xaa
[0xaa:0xac]
---
Predecessors: [0x98]
Successors: [0xad]
---
0xaa PUSH2 0x22c
---
0xaa: V53 = 0x22c
---
Entry stack: [V10, 0x222]
Stack pops: 0
Stack additions: [0x22c]
Exit stack: [V10, 0x222, 0x22c]

================================

Block 0xad
[0xad:0xce]
---
Predecessors: [0xaa, 0x1ae]
Successors: [0xcf, 0x2b8]
---
0xad JUMPDEST
0xae PUSH1 0x1
0xb0 PUSH1 0xa0
0xb2 PUSH1 0x2
0xb4 EXP
0xb5 SUB
0xb6 CALLER
0xb7 AND
0xb8 PUSH1 0x0
0xba SWAP1
0xbb DUP2
0xbc MSTORE
0xbd PUSH1 0x6
0xbf PUSH1 0x20
0xc1 MSTORE
0xc2 PUSH1 0x40
0xc4 DUP2
0xc5 SHA3
0xc6 SLOAD
0xc7 SWAP1
0xc8 DUP2
0xc9 GT
0xca ISZERO
0xcb PUSH2 0x2b8
0xce JUMPI
---
0xad: JUMPDEST 
0xae: V54 = 0x1
0xb0: V55 = 0xa0
0xb2: V56 = 0x2
0xb4: V57 = EXP 0x2 0xa0
0xb5: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6: V59 = CALLER
0xb7: V60 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V61 = 0x0
0xbc: M[0x0] = V60
0xbd: V62 = 0x6
0xbf: V63 = 0x20
0xc1: M[0x20] = 0x6
0xc2: V64 = 0x40
0xc5: V65 = SHA3 0x0 0x40
0xc6: V66 = S[V65]
0xc9: V67 = GT V66 0x0
0xca: V68 = ISZERO V67
0xcb: V69 = 0x2b8
0xce: JUMPI 0x2b8 V68
---
Entry stack: [V10, S1, {0x222, 0x22c}]
Stack pops: 0
Stack additions: [V66]
Exit stack: [V10, S1, {0x222, 0x22c}, V66]

================================

Block 0xcf
[0xcf:0x10c]
---
Predecessors: [0xad]
Successors: [0x10d, 0x2b8]
---
0xcf PUSH1 0x40
0xd1 PUSH1 0x0
0xd3 DUP2
0xd4 DUP2
0xd5 SHA3
0xd6 PUSH1 0x1
0xd8 PUSH1 0xa0
0xda PUSH1 0x2
0xdc EXP
0xdd SUB
0xde CALLER
0xdf AND
0xe0 DUP1
0xe1 DUP4
0xe2 MSTORE
0xe3 PUSH1 0x6
0xe5 PUSH1 0x20
0xe7 MSTORE
0xe8 SWAP1
0xe9 DUP3
0xea SWAP1
0xeb SSTORE
0xec SWAP2
0xed MLOAD
0xee CALLVALUE
0xef DUP5
0xf0 ADD
0xf1 DUP1
0xf2 ISZERO
0xf3 PUSH2 0x8fc
0xf6 MUL
0xf7 SWAP3
0xf8 SWAP1
0xf9 SWAP2
0xfa SWAP1
0xfb DUP2
0xfc DUP2
0xfd DUP2
0xfe DUP6
0xff DUP9
0x100 DUP9
0x101 CALL
0x102 SWAP4
0x103 POP
0x104 POP
0x105 POP
0x106 POP
0x107 ISZERO
0x108 ISZERO
0x109 PUSH2 0x2b8
0x10c JUMPI
---
0xcf: V70 = 0x40
0xd1: V71 = 0x0
0xd5: V72 = SHA3 0x0 0x40
0xd6: V73 = 0x1
0xd8: V74 = 0xa0
0xda: V75 = 0x2
0xdc: V76 = EXP 0x2 0xa0
0xdd: V77 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde: V78 = CALLER
0xdf: V79 = AND V78 0xffffffffffffffffffffffffffffffffffffffff
0xe2: M[0x0] = V79
0xe3: V80 = 0x6
0xe5: V81 = 0x20
0xe7: M[0x20] = 0x6
0xeb: S[V72] = 0x0
0xed: V82 = M[0x40]
0xee: V83 = CALLVALUE
0xf0: V84 = ADD V66 V83
0xf2: V85 = ISZERO V84
0xf3: V86 = 0x8fc
0xf6: V87 = MUL 0x8fc V85
0x101: V88 = CALL V87 V79 V84 V82 0x0 V82 0x0
0x107: V89 = ISZERO V88
0x108: V90 = ISZERO V89
0x109: V91 = 0x2b8
0x10c: JUMPI 0x2b8 V90
---
Entry stack: [V10, S2, {0x222, 0x22c}, V66]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S2, {0x222, 0x22c}, V66]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0xcf]
Successors: []
---
0x10d PUSH2 0x2
0x110 JUMP
---
0x10d: V92 = 0x2
0x110: THROW 
---
Entry stack: [V10, S2, {0x222, 0x22c}, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, {0x222, 0x22c}, V66]

================================

Block 0x111
[0x111:0x116]
---
Predecessors: [0xb]
Successors: [0x117]
---
0x111 JUMPDEST
0x112 CALLVALUE
0x113 PUSH2 0x2
0x116 JUMPI
---
0x111: JUMPDEST 
0x112: V93 = CALLVALUE
0x113: V94 = 0x2
0x116: THROWI V93
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x117
[0x117:0x11e]
---
Predecessors: [0x111]
Successors: [0x143]
---
0x117 PUSH2 0x143
0x11a PUSH1 0x3
0x11c SLOAD
0x11d DUP2
0x11e JUMP
---
0x117: V95 = 0x143
0x11a: V96 = 0x3
0x11c: V97 = S[0x3]
0x11e: JUMP 0x143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x143, V97]
Exit stack: [V10, 0x143, V97]

================================

Block 0x11f
[0x11f:0x124]
---
Predecessors: [0x1f]
Successors: [0x125]
---
0x11f JUMPDEST
0x120 CALLVALUE
0x121 PUSH2 0x2
0x124 JUMPI
---
0x11f: JUMPDEST 
0x120: V98 = CALLVALUE
0x121: V99 = 0x2
0x124: THROWI V98
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x125
[0x125:0x135]
---
Predecessors: [0x11f]
Successors: [0x22e]
---
0x125 PUSH2 0x22e
0x128 PUSH1 0x0
0x12a SLOAD
0x12b PUSH1 0x1
0x12d PUSH1 0xa0
0x12f PUSH1 0x2
0x131 EXP
0x132 SUB
0x133 AND
0x134 DUP2
0x135 JUMP
---
0x125: V100 = 0x22e
0x128: V101 = 0x0
0x12a: V102 = S[0x0]
0x12b: V103 = 0x1
0x12d: V104 = 0xa0
0x12f: V105 = 0x2
0x131: V106 = EXP 0x2 0xa0
0x132: V107 = SUB 0x10000000000000000000000000000000000000000 0x1
0x133: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x135: JUMP 0x22e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x22e, V108]
Exit stack: [V10, 0x22e, V108]

================================

Block 0x136
[0x136:0x13b]
---
Predecessors: [0x2a]
Successors: [0x13c]
---
0x136 JUMPDEST
0x137 CALLVALUE
0x138 PUSH2 0x2
0x13b JUMPI
---
0x136: JUMPDEST 
0x137: V109 = CALLVALUE
0x138: V110 = 0x2
0x13b: THROWI V109
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13c
[0x13c:0x142]
---
Predecessors: [0x136]
Successors: [0x143]
---
0x13c PUSH1 0x1
0x13e SLOAD
0x13f PUSH1 0x2
0x141 SLOAD
0x142 ADD
---
0x13c: V111 = 0x1
0x13e: V112 = S[0x1]
0x13f: V113 = 0x2
0x141: V114 = S[0x2]
0x142: V115 = ADD V114 V112
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V115]
Exit stack: [V10, V115]

================================

Block 0x143
[0x143:0x154]
---
Predecessors: [0x117, 0x13c, 0x15b, 0x16d, 0x1a0, 0x21a]
Successors: []
---
0x143 JUMPDEST
0x144 PUSH1 0x40
0x146 DUP1
0x147 MLOAD
0x148 SWAP2
0x149 DUP3
0x14a MSTORE
0x14b MLOAD
0x14c SWAP1
0x14d DUP2
0x14e SWAP1
0x14f SUB
0x150 PUSH1 0x20
0x152 ADD
0x153 SWAP1
0x154 RETURN
---
0x143: JUMPDEST 
0x144: V116 = 0x40
0x147: V117 = M[0x40]
0x14a: M[V117] = S0
0x14b: V118 = M[0x40]
0x14f: V119 = SUB V117 V118
0x150: V120 = 0x20
0x152: V121 = ADD 0x20 V119
0x154: RETURN V118 V121
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x155
[0x155:0x15a]
---
Predecessors: [0x35]
Successors: [0x15b]
---
0x155 JUMPDEST
0x156 CALLVALUE
0x157 PUSH2 0x2
0x15a JUMPI
---
0x155: JUMPDEST 
0x156: V122 = CALLVALUE
0x157: V123 = 0x2
0x15a: THROWI V122
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15b
[0x15b:0x166]
---
Predecessors: [0x155]
Successors: [0x143]
---
0x15b PUSH2 0x143
0x15e PUSH6 0x5af3107a4000
0x165 DUP2
0x166 JUMP
---
0x15b: V124 = 0x143
0x15e: V125 = 0x5af3107a4000
0x166: JUMP 0x143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x143, 0x5af3107a4000]
Exit stack: [V10, 0x143, 0x5af3107a4000]

================================

Block 0x167
[0x167:0x16c]
---
Predecessors: [0x40]
Successors: [0x16d]
---
0x167 JUMPDEST
0x168 CALLVALUE
0x169 PUSH2 0x2
0x16c JUMPI
---
0x167: JUMPDEST 
0x168: V126 = CALLVALUE
0x169: V127 = 0x2
0x16c: THROWI V126
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16d
[0x16d:0x174]
---
Predecessors: [0x167]
Successors: [0x143]
---
0x16d PUSH2 0x143
0x170 PUSH1 0x1
0x172 SLOAD
0x173 DUP2
0x174 JUMP
---
0x16d: V128 = 0x143
0x170: V129 = 0x1
0x172: V130 = S[0x1]
0x174: JUMP 0x143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x143, V130]
Exit stack: [V10, 0x143, V130]

================================

Block 0x175
[0x175:0x17a]
---
Predecessors: [0x4b]
Successors: [0x17b]
---
0x175 JUMPDEST
0x176 CALLVALUE
0x177 PUSH2 0x2
0x17a JUMPI
---
0x175: JUMPDEST 
0x176: V131 = CALLVALUE
0x177: V132 = 0x2
0x17a: THROWI V131
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x17b
[0x17b:0x195]
---
Predecessors: [0x175]
Successors: [0x196, 0x370]
---
0x17b PUSH2 0x222
0x17e PUSH1 0x0
0x180 SLOAD
0x181 PUSH1 0x1
0x183 PUSH1 0xa0
0x185 PUSH1 0x2
0x187 EXP
0x188 SUB
0x189 SWAP1
0x18a DUP2
0x18b AND
0x18c CALLER
0x18d SWAP2
0x18e SWAP1
0x18f SWAP2
0x190 AND
0x191 EQ
0x192 PUSH2 0x370
0x195 JUMPI
---
0x17b: V133 = 0x222
0x17e: V134 = 0x0
0x180: V135 = S[0x0]
0x181: V136 = 0x1
0x183: V137 = 0xa0
0x185: V138 = 0x2
0x187: V139 = EXP 0x2 0xa0
0x188: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18b: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x18c: V142 = CALLER
0x190: V143 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x191: V144 = EQ V143 V141
0x192: V145 = 0x370
0x195: JUMPI 0x370 V144
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x222]
Exit stack: [V10, 0x222]

================================

Block 0x196
[0x196:0x199]
---
Predecessors: [0x17b]
Successors: []
---
0x196 PUSH2 0x2
0x199 JUMP
---
0x196: V146 = 0x2
0x199: THROW 
---
Entry stack: [V10, 0x222]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x222]

================================

Block 0x19a
[0x19a:0x19f]
---
Predecessors: [0x56]
Successors: [0x1a0]
---
0x19a JUMPDEST
0x19b CALLVALUE
0x19c PUSH2 0x2
0x19f JUMPI
---
0x19a: JUMPDEST 
0x19b: V147 = CALLVALUE
0x19c: V148 = 0x2
0x19f: THROWI V147
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a0
[0x1a0:0x1a7]
---
Predecessors: [0x19a]
Successors: [0x143]
---
0x1a0 PUSH2 0x143
0x1a3 PUSH1 0x2
0x1a5 SLOAD
0x1a6 DUP2
0x1a7 JUMP
---
0x1a0: V149 = 0x143
0x1a3: V150 = 0x2
0x1a5: V151 = S[0x2]
0x1a7: JUMP 0x143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x143, V151]
Exit stack: [V10, 0x143, V151]

================================

Block 0x1a8
[0x1a8:0x1ad]
---
Predecessors: [0x61]
Successors: [0x1ae]
---
0x1a8 JUMPDEST
0x1a9 CALLVALUE
0x1aa PUSH2 0x2
0x1ad JUMPI
---
0x1a8: JUMPDEST 
0x1a9: V152 = CALLVALUE
0x1aa: V153 = 0x2
0x1ad: THROWI V152
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ae
[0x1ae:0x1b4]
---
Predecessors: [0x1a8]
Successors: [0xad]
---
0x1ae PUSH2 0x222
0x1b1 PUSH2 0xad
0x1b4 JUMP
---
0x1ae: V154 = 0x222
0x1b1: V155 = 0xad
0x1b4: JUMP 0xad
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x222]
Exit stack: [V10, 0x222]

================================

Block 0x1b5
[0x1b5:0x1b8]
---
Predecessors: [0x6c]
Successors: [0x1b9]
---
0x1b5 JUMPDEST
0x1b6 PUSH2 0x222
---
0x1b5: JUMPDEST 
0x1b6: V156 = 0x222
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x222]
Exit stack: [V10, 0x222]

================================

Block 0x1b9
[0x1b9:0x1c3]
---
Predecessors: [0x1b5, 0x224]
Successors: [0x1c4, 0x1ce]
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x1
0x1bc SLOAD
0x1bd TIMESTAMP
0x1be LT
0x1bf DUP1
0x1c0 PUSH2 0x1ce
0x1c3 JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V157 = 0x1
0x1bc: V158 = S[0x1]
0x1bd: V159 = TIMESTAMP
0x1be: V160 = LT V159 V158
0x1c0: V161 = 0x1ce
0x1c3: JUMPI 0x1ce V160
---
Entry stack: [V10, S1, {0x222, 0x22c}]
Stack pops: 0
Stack additions: [V160]
Exit stack: [V10, S1, {0x222, 0x22c}, V160]

================================

Block 0x1c4
[0x1c4:0x1cd]
---
Predecessors: [0x1b9]
Successors: [0x1ce]
---
0x1c4 POP
0x1c5 PUSH1 0x1
0x1c7 SLOAD
0x1c8 PUSH1 0x2
0x1ca SLOAD
0x1cb ADD
0x1cc TIMESTAMP
0x1cd GT
---
0x1c5: V162 = 0x1
0x1c7: V163 = S[0x1]
0x1c8: V164 = 0x2
0x1ca: V165 = S[0x2]
0x1cb: V166 = ADD V165 V163
0x1cc: V167 = TIMESTAMP
0x1cd: V168 = GT V167 V166
---
Entry stack: [V10, S2, {0x222, 0x22c}, V160]
Stack pops: 1
Stack additions: [V168]
Exit stack: [V10, S2, {0x222, 0x22c}, V168]

================================

Block 0x1ce
[0x1ce:0x1d3]
---
Predecessors: [0x1b9, 0x1c4]
Successors: [0x1d4, 0x24b]
---
0x1ce JUMPDEST
0x1cf ISZERO
0x1d0 PUSH2 0x24b
0x1d3 JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V169 = ISZERO S0
0x1d0: V170 = 0x24b
0x1d3: JUMPI 0x24b V169
---
Entry stack: [V10, S2, {0x222, 0x22c}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S2, {0x222, 0x22c}]

================================

Block 0x1d4
[0x1d4:0x1d7]
---
Predecessors: [0x1ce]
Successors: []
---
0x1d4 PUSH2 0x2
0x1d7 JUMP
---
0x1d4: V171 = 0x2
0x1d7: THROW 
---
Entry stack: [V10, S1, {0x222, 0x22c}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x222, 0x22c}]

================================

Block 0x1d8
[0x1d8:0x1dd]
---
Predecessors: [0x77]
Successors: [0x1de]
---
0x1d8 JUMPDEST
0x1d9 CALLVALUE
0x1da PUSH2 0x2
0x1dd JUMPI
---
0x1d8: JUMPDEST 
0x1d9: V172 = CALLVALUE
0x1da: V173 = 0x2
0x1dd: THROWI V172
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1de
[0x1de:0x1ee]
---
Predecessors: [0x1d8]
Successors: [0x22e]
---
0x1de PUSH2 0x22e
0x1e1 PUSH1 0x4
0x1e3 SLOAD
0x1e4 PUSH1 0x1
0x1e6 PUSH1 0xa0
0x1e8 PUSH1 0x2
0x1ea EXP
0x1eb SUB
0x1ec AND
0x1ed DUP2
0x1ee JUMP
---
0x1de: V174 = 0x22e
0x1e1: V175 = 0x4
0x1e3: V176 = S[0x4]
0x1e4: V177 = 0x1
0x1e6: V178 = 0xa0
0x1e8: V179 = 0x2
0x1ea: V180 = EXP 0x2 0xa0
0x1eb: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ec: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x1ee: JUMP 0x22e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x22e, V182]
Exit stack: [V10, 0x22e, V182]

================================

Block 0x1ef
[0x1ef:0x1f4]
---
Predecessors: [0x82]
Successors: [0x1f5]
---
0x1ef JUMPDEST
0x1f0 CALLVALUE
0x1f1 PUSH2 0x2
0x1f4 JUMPI
---
0x1ef: JUMPDEST 
0x1f0: V183 = CALLVALUE
0x1f1: V184 = 0x2
0x1f4: THROWI V183
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f5
[0x1f5:0x20f]
---
Predecessors: [0x1ef]
Successors: [0x210, 0x43c]
---
0x1f5 PUSH2 0x222
0x1f8 PUSH1 0x0
0x1fa SLOAD
0x1fb PUSH1 0x1
0x1fd PUSH1 0xa0
0x1ff PUSH1 0x2
0x201 EXP
0x202 SUB
0x203 SWAP1
0x204 DUP2
0x205 AND
0x206 CALLER
0x207 SWAP2
0x208 SWAP1
0x209 SWAP2
0x20a AND
0x20b EQ
0x20c PUSH2 0x43c
0x20f JUMPI
---
0x1f5: V185 = 0x222
0x1f8: V186 = 0x0
0x1fa: V187 = S[0x0]
0x1fb: V188 = 0x1
0x1fd: V189 = 0xa0
0x1ff: V190 = 0x2
0x201: V191 = EXP 0x2 0xa0
0x202: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x205: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x206: V194 = CALLER
0x20a: V195 = AND V194 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V196 = EQ V195 V193
0x20c: V197 = 0x43c
0x20f: JUMPI 0x43c V196
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x222]
Exit stack: [V10, 0x222]

================================

Block 0x210
[0x210:0x213]
---
Predecessors: [0x1f5]
Successors: []
---
0x210 PUSH2 0x2
0x213 JUMP
---
0x210: V198 = 0x2
0x213: THROW 
---
Entry stack: [V10, 0x222]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x222]

================================

Block 0x214
[0x214:0x219]
---
Predecessors: [0x8d]
Successors: [0x21a]
---
0x214 JUMPDEST
0x215 CALLVALUE
0x216 PUSH2 0x2
0x219 JUMPI
---
0x214: JUMPDEST 
0x215: V199 = CALLVALUE
0x216: V200 = 0x2
0x219: THROWI V199
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21a
[0x21a:0x221]
---
Predecessors: [0x214]
Successors: [0x143]
---
0x21a PUSH2 0x143
0x21d PUSH1 0x5
0x21f SLOAD
0x220 DUP2
0x221 JUMP
---
0x21a: V201 = 0x143
0x21d: V202 = 0x5
0x21f: V203 = S[0x5]
0x221: JUMP 0x143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x143, V203]
Exit stack: [V10, 0x143, V203]

================================

Block 0x222
[0x222:0x223]
---
Predecessors: [0x22c, 0x2b8, 0x301]
Successors: []
---
0x222 JUMPDEST
0x223 STOP
---
0x222: JUMPDEST 
0x223: STOP 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x224
[0x224:0x22b]
---
Predecessors: [0x98]
Successors: [0x1b9]
---
0x224 JUMPDEST
0x225 PUSH2 0x22c
0x228 PUSH2 0x1b9
0x22b JUMP
---
0x224: JUMPDEST 
0x225: V204 = 0x22c
0x228: V205 = 0x1b9
0x22b: JUMP 0x1b9
---
Entry stack: [V10, 0x222]
Stack pops: 0
Stack additions: [0x22c]
Exit stack: [V10, 0x222, 0x22c]

================================

Block 0x22c
[0x22c:0x22d]
---
Predecessors: [0x22c, 0x2b8, 0x301, 0x393, 0x44f]
Successors: [0x222, 0x22c]
---
0x22c JUMPDEST
0x22d JUMP
---
0x22c: JUMPDEST 
0x22d: JUMP S0
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x22e
[0x22e:0x24a]
---
Predecessors: [0x125, 0x1de]
Successors: []
---
0x22e JUMPDEST
0x22f PUSH1 0x40
0x231 DUP1
0x232 MLOAD
0x233 PUSH1 0x1
0x235 PUSH1 0xa0
0x237 PUSH1 0x2
0x239 EXP
0x23a SUB
0x23b SWAP3
0x23c SWAP1
0x23d SWAP3
0x23e AND
0x23f DUP3
0x240 MSTORE
0x241 MLOAD
0x242 SWAP1
0x243 DUP2
0x244 SWAP1
0x245 SUB
0x246 PUSH1 0x20
0x248 ADD
0x249 SWAP1
0x24a RETURN
---
0x22e: JUMPDEST 
0x22f: V206 = 0x40
0x232: V207 = M[0x40]
0x233: V208 = 0x1
0x235: V209 = 0xa0
0x237: V210 = 0x2
0x239: V211 = EXP 0x2 0xa0
0x23a: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23e: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x240: M[V207] = V213
0x241: V214 = M[0x40]
0x245: V215 = SUB V207 V214
0x246: V216 = 0x20
0x248: V217 = ADD 0x20 V215
0x24a: RETURN V214 V217
---
Entry stack: [V10, 0x22e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x22e]

================================

Block 0x24b
[0x24b:0x26a]
---
Predecessors: [0x1ce]
Successors: [0x26b, 0x27f]
---
0x24b JUMPDEST
0x24c PUSH1 0x1
0x24e PUSH1 0xa0
0x250 PUSH1 0x2
0x252 EXP
0x253 SUB
0x254 CALLER
0x255 AND
0x256 PUSH1 0x0
0x258 SWAP1
0x259 DUP2
0x25a MSTORE
0x25b PUSH1 0x6
0x25d PUSH1 0x20
0x25f MSTORE
0x260 PUSH1 0x40
0x262 DUP2
0x263 SHA3
0x264 SLOAD
0x265 GT
0x266 DUP1
0x267 PUSH2 0x27f
0x26a JUMPI
---
0x24b: JUMPDEST 
0x24c: V218 = 0x1
0x24e: V219 = 0xa0
0x250: V220 = 0x2
0x252: V221 = EXP 0x2 0xa0
0x253: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x254: V223 = CALLER
0x255: V224 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x256: V225 = 0x0
0x25a: M[0x0] = V224
0x25b: V226 = 0x6
0x25d: V227 = 0x20
0x25f: M[0x20] = 0x6
0x260: V228 = 0x40
0x263: V229 = SHA3 0x0 0x40
0x264: V230 = S[V229]
0x265: V231 = GT V230 0x0
0x267: V232 = 0x27f
0x26a: JUMPI 0x27f V231
---
Entry stack: [V10, S1, {0x222, 0x22c}]
Stack pops: 0
Stack additions: [V231]
Exit stack: [V10, S1, {0x222, 0x22c}, V231]

================================

Block 0x26b
[0x26b:0x27e]
---
Predecessors: [0x24b]
Successors: [0x27f]
---
0x26b POP
0x26c PUSH1 0x4
0x26e SLOAD
0x26f PUSH1 0x1
0x271 PUSH1 0xa0
0x273 PUSH1 0x2
0x275 EXP
0x276 SUB
0x277 SWAP1
0x278 DUP2
0x279 AND
0x27a CALLER
0x27b SWAP1
0x27c SWAP2
0x27d AND
0x27e EQ
---
0x26c: V233 = 0x4
0x26e: V234 = S[0x4]
0x26f: V235 = 0x1
0x271: V236 = 0xa0
0x273: V237 = 0x2
0x275: V238 = EXP 0x2 0xa0
0x276: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x279: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x27a: V241 = CALLER
0x27d: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x27e: V243 = EQ V242 V240
---
Entry stack: [V10, S2, {0x222, 0x22c}, V231]
Stack pops: 1
Stack additions: [V243]
Exit stack: [V10, S2, {0x222, 0x22c}, V243]

================================

Block 0x27f
[0x27f:0x285]
---
Predecessors: [0x24b, 0x26b]
Successors: [0x286, 0x28b]
---
0x27f JUMPDEST
0x280 DUP1
0x281 ISZERO
0x282 PUSH2 0x28b
0x285 JUMPI
---
0x27f: JUMPDEST 
0x281: V244 = ISZERO S0
0x282: V245 = 0x28b
0x285: JUMPI 0x28b V244
---
Entry stack: [V10, S2, {0x222, 0x22c}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S2, {0x222, 0x22c}, S0]

================================

Block 0x286
[0x286:0x28a]
---
Predecessors: [0x27f]
Successors: [0x28b]
---
0x286 POP
0x287 PUSH1 0x0
0x289 CALLVALUE
0x28a GT
---
0x287: V246 = 0x0
0x289: V247 = CALLVALUE
0x28a: V248 = GT V247 0x0
---
Entry stack: [V10, S2, {0x222, 0x22c}, S0]
Stack pops: 1
Stack additions: [V248]
Exit stack: [V10, S2, {0x222, 0x22c}, V248]

================================

Block 0x28b
[0x28b:0x290]
---
Predecessors: [0x27f, 0x286]
Successors: [0x291, 0x2bb]
---
0x28b JUMPDEST
0x28c ISZERO
0x28d PUSH2 0x2bb
0x290 JUMPI
---
0x28b: JUMPDEST 
0x28c: V249 = ISZERO S0
0x28d: V250 = 0x2bb
0x290: JUMPI 0x2bb V249
---
Entry stack: [V10, S2, {0x222, 0x22c}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S2, {0x222, 0x22c}]

================================

Block 0x291
[0x291:0x2af]
---
Predecessors: [0x28b]
Successors: [0x2b0, 0x488]
---
0x291 PUSH2 0x22c
0x294 PUSH1 0x4
0x296 SLOAD
0x297 PUSH1 0x0
0x299 SWAP1
0x29a PUSH1 0x1
0x29c PUSH1 0xa0
0x29e PUSH1 0x2
0x2a0 EXP
0x2a1 SUB
0x2a2 SWAP1
0x2a3 DUP2
0x2a4 AND
0x2a5 CALLER
0x2a6 SWAP2
0x2a7 SWAP1
0x2a8 SWAP2
0x2a9 AND
0x2aa EQ
0x2ab ISZERO
0x2ac PUSH2 0x488
0x2af JUMPI
---
0x291: V251 = 0x22c
0x294: V252 = 0x4
0x296: V253 = S[0x4]
0x297: V254 = 0x0
0x29a: V255 = 0x1
0x29c: V256 = 0xa0
0x29e: V257 = 0x2
0x2a0: V258 = EXP 0x2 0xa0
0x2a1: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a4: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x2a5: V261 = CALLER
0x2a9: V262 = AND V261 0xffffffffffffffffffffffffffffffffffffffff
0x2aa: V263 = EQ V262 V260
0x2ab: V264 = ISZERO V263
0x2ac: V265 = 0x488
0x2af: JUMPI 0x488 V264
---
Entry stack: [V10, S1, {0x222, 0x22c}]
Stack pops: 0
Stack additions: [0x22c, 0x0]
Exit stack: [V10, S1, {0x222, 0x22c}, 0x22c, 0x0]

================================

Block 0x2b0
[0x2b0:0x2b7]
---
Predecessors: [0x291]
Successors: [0x2b8]
---
0x2b0 PUSH1 0x5
0x2b2 DUP1
0x2b3 SLOAD
0x2b4 CALLVALUE
0x2b5 ADD
0x2b6 SWAP1
0x2b7 SSTORE
---
0x2b0: V266 = 0x5
0x2b3: V267 = S[0x5]
0x2b4: V268 = CALLVALUE
0x2b5: V269 = ADD V268 V267
0x2b7: S[0x5] = V269
---
Entry stack: [V10, S3, {0x222, 0x22c}, 0x22c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x222, 0x22c}, 0x22c, 0x0]

================================

Block 0x2b8
[0x2b8:0x2ba]
---
Predecessors: [0xad, 0xcf, 0x2b0, 0x4ad]
Successors: [0x222, 0x22c]
---
0x2b8 JUMPDEST
0x2b9 POP
0x2ba JUMP
---
0x2b8: JUMPDEST 
0x2ba: JUMP {0x222, 0x22c}
---
Entry stack: [V10, S3, S2, {0x222, 0x22c}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S3, S2]

================================

Block 0x2bb
[0x2bb:0x2c4]
---
Predecessors: [0x28b]
Successors: [0x2c5, 0x2c9]
---
0x2bb JUMPDEST
0x2bc PUSH1 0x5
0x2be SLOAD
0x2bf CALLVALUE
0x2c0 GT
0x2c1 PUSH2 0x2c9
0x2c4 JUMPI
---
0x2bb: JUMPDEST 
0x2bc: V270 = 0x5
0x2be: V271 = S[0x5]
0x2bf: V272 = CALLVALUE
0x2c0: V273 = GT V272 V271
0x2c1: V274 = 0x2c9
0x2c4: JUMPI 0x2c9 V273
---
Entry stack: [V10, S1, {0x222, 0x22c}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x222, 0x22c}]

================================

Block 0x2c5
[0x2c5:0x2c8]
---
Predecessors: [0x2bb]
Successors: []
---
0x2c5 PUSH2 0x2
0x2c8 JUMP
---
0x2c5: V275 = 0x2
0x2c8: THROW 
---
Entry stack: [V10, S1, {0x222, 0x22c}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x222, 0x22c}]

================================

Block 0x2c9
[0x2c9:0x2dc]
---
Predecessors: [0x2bb]
Successors: [0x2dd, 0x301]
---
0x2c9 JUMPDEST
0x2ca PUSH1 0x4
0x2cc SLOAD
0x2cd PUSH1 0x1
0x2cf PUSH1 0xa0
0x2d1 PUSH1 0x2
0x2d3 EXP
0x2d4 SUB
0x2d5 AND
0x2d6 PUSH1 0x0
0x2d8 EQ
0x2d9 PUSH2 0x301
0x2dc JUMPI
---
0x2c9: JUMPDEST 
0x2ca: V276 = 0x4
0x2cc: V277 = S[0x4]
0x2cd: V278 = 0x1
0x2cf: V279 = 0xa0
0x2d1: V280 = 0x2
0x2d3: V281 = EXP 0x2 0xa0
0x2d4: V282 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d5: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x2d6: V284 = 0x0
0x2d8: V285 = EQ 0x0 V283
0x2d9: V286 = 0x301
0x2dc: JUMPI 0x301 V285
---
Entry stack: [V10, S1, {0x222, 0x22c}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x222, 0x22c}]

================================

Block 0x2dd
[0x2dd:0x300]
---
Predecessors: [0x2c9]
Successors: [0x301]
---
0x2dd PUSH1 0x5
0x2df SLOAD
0x2e0 PUSH1 0x4
0x2e2 SLOAD
0x2e3 PUSH1 0x1
0x2e5 PUSH1 0xa0
0x2e7 PUSH1 0x2
0x2e9 EXP
0x2ea SUB
0x2eb AND
0x2ec PUSH1 0x0
0x2ee SWAP1
0x2ef DUP2
0x2f0 MSTORE
0x2f1 PUSH1 0x6
0x2f3 PUSH1 0x20
0x2f5 MSTORE
0x2f6 PUSH1 0x40
0x2f8 SWAP1
0x2f9 SHA3
0x2fa DUP1
0x2fb SLOAD
0x2fc SWAP1
0x2fd SWAP2
0x2fe ADD
0x2ff SWAP1
0x300 SSTORE
---
0x2dd: V287 = 0x5
0x2df: V288 = S[0x5]
0x2e0: V289 = 0x4
0x2e2: V290 = S[0x4]
0x2e3: V291 = 0x1
0x2e5: V292 = 0xa0
0x2e7: V293 = 0x2
0x2e9: V294 = EXP 0x2 0xa0
0x2ea: V295 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2eb: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x2ec: V297 = 0x0
0x2f0: M[0x0] = V296
0x2f1: V298 = 0x6
0x2f3: V299 = 0x20
0x2f5: M[0x20] = 0x6
0x2f6: V300 = 0x40
0x2f9: V301 = SHA3 0x0 0x40
0x2fb: V302 = S[V301]
0x2fe: V303 = ADD V288 V302
0x300: S[V301] = V303
---
Entry stack: [V10, S1, {0x222, 0x22c}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x222, 0x22c}]

================================

Block 0x301
[0x301:0x36f]
---
Predecessors: [0x2c9, 0x2dd]
Successors: [0x222, 0x22c]
---
0x301 JUMPDEST
0x302 PUSH1 0x4
0x304 DUP1
0x305 SLOAD
0x306 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31b NOT
0x31c AND
0x31d CALLER
0x31e SWAP1
0x31f DUP2
0x320 OR
0x321 SWAP1
0x322 SWAP2
0x323 SSTORE
0x324 CALLVALUE
0x325 PUSH1 0x5
0x327 DUP2
0x328 SWAP1
0x329 SSTORE
0x32a PUSH1 0x40
0x32c DUP1
0x32d MLOAD
0x32e PUSH1 0x1
0x330 PUSH1 0xa0
0x332 PUSH1 0x2
0x334 EXP
0x335 SUB
0x336 SWAP1
0x337 SWAP4
0x338 AND
0x339 DUP4
0x33a MSTORE
0x33b PUSH1 0x20
0x33d DUP4
0x33e ADD
0x33f SWAP2
0x340 SWAP1
0x341 SWAP2
0x342 MSTORE
0x343 DUP1
0x344 MLOAD
0x345 PUSH32 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x366 SWAP3
0x367 DUP2
0x368 SWAP1
0x369 SUB
0x36a SWAP1
0x36b SWAP2
0x36c ADD
0x36d SWAP1
0x36e LOG1
0x36f JUMP
---
0x301: JUMPDEST 
0x302: V304 = 0x4
0x305: V305 = S[0x4]
0x306: V306 = 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V307 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x31c: V308 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V305
0x31d: V309 = CALLER
0x320: V310 = OR V309 V308
0x323: S[0x4] = V310
0x324: V311 = CALLVALUE
0x325: V312 = 0x5
0x329: S[0x5] = V311
0x32a: V313 = 0x40
0x32d: V314 = M[0x40]
0x32e: V315 = 0x1
0x330: V316 = 0xa0
0x332: V317 = 0x2
0x334: V318 = EXP 0x2 0xa0
0x335: V319 = SUB 0x10000000000000000000000000000000000000000 0x1
0x338: V320 = AND V309 0xffffffffffffffffffffffffffffffffffffffff
0x33a: M[V314] = V320
0x33b: V321 = 0x20
0x33e: V322 = ADD V314 0x20
0x342: M[V322] = V311
0x344: V323 = M[0x40]
0x345: V324 = 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x369: V325 = SUB V314 V323
0x36c: V326 = ADD 0x40 V325
0x36e: LOG V323 V326 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x36f: JUMP {0x222, 0x22c}
---
Entry stack: [V10, S1, {0x222, 0x22c}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x370
[0x370:0x37e]
---
Predecessors: [0x17b]
Successors: [0x37f, 0x383]
---
0x370 JUMPDEST
0x371 PUSH1 0x1
0x373 SLOAD
0x374 PUSH1 0x2
0x376 SLOAD
0x377 ADD
0x378 TIMESTAMP
0x379 LT
0x37a ISZERO
0x37b PUSH2 0x383
0x37e JUMPI
---
0x370: JUMPDEST 
0x371: V327 = 0x1
0x373: V328 = S[0x1]
0x374: V329 = 0x2
0x376: V330 = S[0x2]
0x377: V331 = ADD V330 V328
0x378: V332 = TIMESTAMP
0x379: V333 = LT V332 V331
0x37a: V334 = ISZERO V333
0x37b: V335 = 0x383
0x37e: JUMPI 0x383 V334
---
Entry stack: [V10, 0x222]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x222]

================================

Block 0x37f
[0x37f:0x382]
---
Predecessors: [0x370]
Successors: []
---
0x37f PUSH2 0x2
0x382 JUMP
---
0x37f: V336 = 0x2
0x382: THROW 
---
Entry stack: [V10, 0x222]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x222]

================================

Block 0x383
[0x383:0x38e]
---
Predecessors: [0x370]
Successors: [0x38f, 0x393]
---
0x383 JUMPDEST
0x384 PUSH1 0x7
0x386 SLOAD
0x387 PUSH1 0xff
0x389 AND
0x38a ISZERO
0x38b PUSH2 0x393
0x38e JUMPI
---
0x383: JUMPDEST 
0x384: V337 = 0x7
0x386: V338 = S[0x7]
0x387: V339 = 0xff
0x389: V340 = AND 0xff V338
0x38a: V341 = ISZERO V340
0x38b: V342 = 0x393
0x38e: JUMPI 0x393 V341
---
Entry stack: [V10, 0x222]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x222]

================================

Block 0x38f
[0x38f:0x392]
---
Predecessors: [0x383]
Successors: []
---
0x38f PUSH2 0x2
0x392 JUMP
---
0x38f: V343 = 0x2
0x392: THROW 
---
Entry stack: [V10, 0x222]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x222]

================================

Block 0x393
[0x393:0x437]
---
Predecessors: [0x383]
Successors: [0x22c, 0x438]
---
0x393 JUMPDEST
0x394 PUSH1 0x7
0x396 DUP1
0x397 SLOAD
0x398 PUSH1 0xff
0x39a NOT
0x39b AND
0x39c PUSH1 0x1
0x39e OR
0x39f SWAP1
0x3a0 SSTORE
0x3a1 PUSH1 0x4
0x3a3 SLOAD
0x3a4 PUSH1 0x5
0x3a6 SLOAD
0x3a7 PUSH1 0x40
0x3a9 DUP1
0x3aa MLOAD
0x3ab PUSH1 0x1
0x3ad PUSH1 0xa0
0x3af PUSH1 0x2
0x3b1 EXP
0x3b2 SUB
0x3b3 SWAP4
0x3b4 SWAP1
0x3b5 SWAP4
0x3b6 AND
0x3b7 DUP4
0x3b8 MSTORE
0x3b9 PUSH1 0x20
0x3bb DUP4
0x3bc ADD
0x3bd SWAP2
0x3be SWAP1
0x3bf SWAP2
0x3c0 MSTORE
0x3c1 DUP1
0x3c2 MLOAD
0x3c3 PUSH32 0x1d78ca6377547e2f5434a04066a4dcac7670fd77e146b686b06bf8fbc06fb435
0x3e4 SWAP3
0x3e5 DUP2
0x3e6 SWAP1
0x3e7 SUB
0x3e8 SWAP1
0x3e9 SWAP2
0x3ea ADD
0x3eb SWAP1
0x3ec LOG1
0x3ed PUSH1 0x0
0x3ef PUSH1 0x0
0x3f1 SWAP1
0x3f2 SLOAD
0x3f3 SWAP1
0x3f4 PUSH2 0x100
0x3f7 EXP
0x3f8 SWAP1
0x3f9 DIV
0x3fa PUSH1 0x1
0x3fc PUSH1 0xa0
0x3fe PUSH1 0x2
0x400 EXP
0x401 SUB
0x402 AND
0x403 PUSH1 0x1
0x405 PUSH1 0xa0
0x407 PUSH1 0x2
0x409 EXP
0x40a SUB
0x40b AND
0x40c PUSH2 0x8fc
0x40f PUSH1 0x5
0x411 PUSH1 0x0
0x413 POP
0x414 SLOAD
0x415 SWAP1
0x416 DUP2
0x417 ISZERO
0x418 MUL
0x419 SWAP1
0x41a PUSH1 0x40
0x41c MLOAD
0x41d DUP1
0x41e SWAP1
0x41f POP
0x420 PUSH1 0x0
0x422 PUSH1 0x40
0x424 MLOAD
0x425 DUP1
0x426 DUP4
0x427 SUB
0x428 DUP2
0x429 DUP6
0x42a DUP9
0x42b DUP9
0x42c CALL
0x42d SWAP4
0x42e POP
0x42f POP
0x430 POP
0x431 POP
0x432 ISZERO
0x433 ISZERO
0x434 PUSH2 0x22c
0x437 JUMPI
---
0x393: JUMPDEST 
0x394: V344 = 0x7
0x397: V345 = S[0x7]
0x398: V346 = 0xff
0x39a: V347 = NOT 0xff
0x39b: V348 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V345
0x39c: V349 = 0x1
0x39e: V350 = OR 0x1 V348
0x3a0: S[0x7] = V350
0x3a1: V351 = 0x4
0x3a3: V352 = S[0x4]
0x3a4: V353 = 0x5
0x3a6: V354 = S[0x5]
0x3a7: V355 = 0x40
0x3aa: V356 = M[0x40]
0x3ab: V357 = 0x1
0x3ad: V358 = 0xa0
0x3af: V359 = 0x2
0x3b1: V360 = EXP 0x2 0xa0
0x3b2: V361 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b6: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0x3b8: M[V356] = V362
0x3b9: V363 = 0x20
0x3bc: V364 = ADD V356 0x20
0x3c0: M[V364] = V354
0x3c2: V365 = M[0x40]
0x3c3: V366 = 0x1d78ca6377547e2f5434a04066a4dcac7670fd77e146b686b06bf8fbc06fb435
0x3e7: V367 = SUB V356 V365
0x3ea: V368 = ADD 0x40 V367
0x3ec: LOG V365 V368 0x1d78ca6377547e2f5434a04066a4dcac7670fd77e146b686b06bf8fbc06fb435
0x3ed: V369 = 0x0
0x3ef: V370 = 0x0
0x3f2: V371 = S[0x0]
0x3f4: V372 = 0x100
0x3f7: V373 = EXP 0x100 0x0
0x3f9: V374 = DIV V371 0x1
0x3fa: V375 = 0x1
0x3fc: V376 = 0xa0
0x3fe: V377 = 0x2
0x400: V378 = EXP 0x2 0xa0
0x401: V379 = SUB 0x10000000000000000000000000000000000000000 0x1
0x402: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x403: V381 = 0x1
0x405: V382 = 0xa0
0x407: V383 = 0x2
0x409: V384 = EXP 0x2 0xa0
0x40a: V385 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40b: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x40c: V387 = 0x8fc
0x40f: V388 = 0x5
0x411: V389 = 0x0
0x414: V390 = S[0x5]
0x417: V391 = ISZERO V390
0x418: V392 = MUL V391 0x8fc
0x41a: V393 = 0x40
0x41c: V394 = M[0x40]
0x420: V395 = 0x0
0x422: V396 = 0x40
0x424: V397 = M[0x40]
0x427: V398 = SUB V394 V397
0x42c: V399 = CALL V392 V386 V390 V397 V398 V397 0x0
0x432: V400 = ISZERO V399
0x433: V401 = ISZERO V400
0x434: V402 = 0x22c
0x437: JUMPI 0x22c V401
---
Entry stack: [V10, 0x222]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x222]

================================

Block 0x438
[0x438:0x43b]
---
Predecessors: [0x393]
Successors: []
---
0x438 PUSH2 0x2
0x43b JUMP
---
0x438: V403 = 0x2
0x43b: THROW 
---
Entry stack: [V10, 0x222]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x222]

================================

Block 0x43c
[0x43c:0x44a]
---
Predecessors: [0x1f5]
Successors: [0x44b, 0x44f]
---
0x43c JUMPDEST
0x43d PUSH1 0x3
0x43f SLOAD
0x440 PUSH1 0x1
0x442 SLOAD
0x443 ADD
0x444 TIMESTAMP
0x445 LT
0x446 ISZERO
0x447 PUSH2 0x44f
0x44a JUMPI
---
0x43c: JUMPDEST 
0x43d: V404 = 0x3
0x43f: V405 = S[0x3]
0x440: V406 = 0x1
0x442: V407 = S[0x1]
0x443: V408 = ADD V407 V405
0x444: V409 = TIMESTAMP
0x445: V410 = LT V409 V408
0x446: V411 = ISZERO V410
0x447: V412 = 0x44f
0x44a: JUMPI 0x44f V411
---
Entry stack: [V10, 0x222]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x222]

================================

Block 0x44b
[0x44b:0x44e]
---
Predecessors: [0x43c]
Successors: []
---
0x44b PUSH2 0x2
0x44e JUMP
---
0x44b: V413 = 0x2
0x44e: THROW 
---
Entry stack: [V10, 0x222]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x222]

================================

Block 0x44f
[0x44f:0x483]
---
Predecessors: [0x43c]
Successors: [0x22c, 0x484]
---
0x44f JUMPDEST
0x450 PUSH1 0x0
0x452 DUP1
0x453 SLOAD
0x454 PUSH1 0x40
0x456 MLOAD
0x457 PUSH1 0x1
0x459 PUSH1 0xa0
0x45b PUSH1 0x2
0x45d EXP
0x45e SUB
0x45f SWAP2
0x460 DUP3
0x461 AND
0x462 SWAP3
0x463 ADDRESS
0x464 SWAP1
0x465 SWAP3
0x466 AND
0x467 BALANCE
0x468 DUP1
0x469 ISZERO
0x46a PUSH2 0x8fc
0x46d MUL
0x46e SWAP3
0x46f SWAP1
0x470 SWAP2
0x471 SWAP1
0x472 DUP2
0x473 DUP2
0x474 DUP2
0x475 DUP6
0x476 DUP9
0x477 DUP9
0x478 CALL
0x479 SWAP4
0x47a POP
0x47b POP
0x47c POP
0x47d POP
0x47e ISZERO
0x47f ISZERO
0x480 PUSH2 0x22c
0x483 JUMPI
---
0x44f: JUMPDEST 
0x450: V414 = 0x0
0x453: V415 = S[0x0]
0x454: V416 = 0x40
0x456: V417 = M[0x40]
0x457: V418 = 0x1
0x459: V419 = 0xa0
0x45b: V420 = 0x2
0x45d: V421 = EXP 0x2 0xa0
0x45e: V422 = SUB 0x10000000000000000000000000000000000000000 0x1
0x461: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x463: V424 = ADDRESS
0x466: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x467: V426 = BALANCE V425
0x469: V427 = ISZERO V426
0x46a: V428 = 0x8fc
0x46d: V429 = MUL 0x8fc V427
0x478: V430 = CALL V429 V423 V426 V417 0x0 V417 0x0
0x47e: V431 = ISZERO V430
0x47f: V432 = ISZERO V431
0x480: V433 = 0x22c
0x483: JUMPI 0x22c V432
---
Entry stack: [V10, 0x222]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x222]

================================

Block 0x484
[0x484:0x487]
---
Predecessors: [0x44f]
Successors: []
---
0x484 PUSH2 0x2
0x487 JUMP
---
0x484: V434 = 0x2
0x487: THROW 
---
Entry stack: [V10, 0x222]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x222]

================================

Block 0x488
[0x488:0x4ac]
---
Predecessors: [0x291]
Successors: [0x4ad, 0x4c2]
---
0x488 JUMPDEST
0x489 PUSH1 0x5
0x48b SLOAD
0x48c PUSH1 0x1
0x48e PUSH1 0xa0
0x490 PUSH1 0x2
0x492 EXP
0x493 SUB
0x494 CALLER
0x495 AND
0x496 PUSH1 0x0
0x498 SWAP1
0x499 DUP2
0x49a MSTORE
0x49b PUSH1 0x6
0x49d PUSH1 0x20
0x49f MSTORE
0x4a0 PUSH1 0x40
0x4a2 SWAP1
0x4a3 SHA3
0x4a4 SLOAD
0x4a5 CALLVALUE
0x4a6 ADD
0x4a7 GT
0x4a8 ISZERO
0x4a9 PUSH2 0x4c2
0x4ac JUMPI
---
0x488: JUMPDEST 
0x489: V435 = 0x5
0x48b: V436 = S[0x5]
0x48c: V437 = 0x1
0x48e: V438 = 0xa0
0x490: V439 = 0x2
0x492: V440 = EXP 0x2 0xa0
0x493: V441 = SUB 0x10000000000000000000000000000000000000000 0x1
0x494: V442 = CALLER
0x495: V443 = AND V442 0xffffffffffffffffffffffffffffffffffffffff
0x496: V444 = 0x0
0x49a: M[0x0] = V443
0x49b: V445 = 0x6
0x49d: V446 = 0x20
0x49f: M[0x20] = 0x6
0x4a0: V447 = 0x40
0x4a3: V448 = SHA3 0x0 0x40
0x4a4: V449 = S[V448]
0x4a5: V450 = CALLVALUE
0x4a6: V451 = ADD V450 V449
0x4a7: V452 = GT V451 V436
0x4a8: V453 = ISZERO V452
0x4a9: V454 = 0x4c2
0x4ac: JUMPI 0x4c2 V453
---
Entry stack: [V10, S3, {0x222, 0x22c}, 0x22c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x222, 0x22c}, 0x22c, 0x0]

================================

Block 0x4ad
[0x4ad:0x4c1]
---
Predecessors: [0x488]
Successors: [0x2b8]
---
0x4ad POP
0x4ae PUSH1 0x40
0x4b0 PUSH1 0x0
0x4b2 SWAP1
0x4b3 DUP2
0x4b4 SHA3
0x4b5 DUP1
0x4b6 SLOAD
0x4b7 SWAP2
0x4b8 SWAP1
0x4b9 SSTORE
0x4ba CALLVALUE
0x4bb PUSH1 0x5
0x4bd SSTORE
0x4be PUSH2 0x2b8
0x4c1 JUMP
---
0x4ae: V455 = 0x40
0x4b0: V456 = 0x0
0x4b4: V457 = SHA3 0x0 0x40
0x4b6: V458 = S[V457]
0x4b9: S[V457] = 0x0
0x4ba: V459 = CALLVALUE
0x4bb: V460 = 0x5
0x4bd: S[0x5] = V459
0x4be: V461 = 0x2b8
0x4c1: JUMP 0x2b8
---
Entry stack: [V10, S3, {0x222, 0x22c}, 0x22c, 0x0]
Stack pops: 1
Stack additions: [V458]
Exit stack: [V10, S3, {0x222, 0x22c}, 0x22c, V458]

================================

Block 0x4c2
[0x4c2:0x4c6]
---
Predecessors: [0x488]
Successors: []
---
0x4c2 JUMPDEST
0x4c3 PUSH2 0x2
0x4c6 JUMP
---
0x4c2: JUMPDEST 
0x4c3: V462 = 0x2
0x4c6: THROW 
---
Entry stack: [V10, S3, {0x222, 0x22c}, 0x22c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x222, 0x22c}, 0x22c, 0x0]

================================

Function 0:
Public function signature: 0x89c22ad
Entry block: 0x111
Exit block: 0x143
Body: 0x111, 0x117, 0x143

Function 1:
Public function signature: 0x38af3eed
Entry block: 0x11f
Exit block: 0x22e
Body: 0x11f, 0x125, 0x22e

Function 2:
Public function signature: 0x4b449cba
Entry block: 0x136
Exit block: 0x143
Body: 0x136, 0x13c, 0x143

Function 3:
Public function signature: 0x4d804e60
Entry block: 0x155
Exit block: 0x143
Body: 0x143, 0x155, 0x15b

Function 4:
Public function signature: 0x4f245ef7
Entry block: 0x167
Exit block: 0x143
Body: 0x143, 0x167, 0x16d

Function 5:
Public function signature: 0x5d7db95d
Entry block: 0x175
Exit block: 0x222
Body: 0x175, 0x17b, 0x196, 0x222, 0x22c, 0x370, 0x37f, 0x383, 0x38f, 0x393, 0x438

Function 6:
Public function signature: 0x5f8909bd
Entry block: 0x19a
Exit block: 0x143
Body: 0x143, 0x19a, 0x1a0

Function 7:
Public function signature: 0x6bd61a66
Entry block: 0x1a8
Exit block: 0x222
Body: 0xad, 0xcf, 0x10d, 0x1a8, 0x1ae, 0x222, 0x22c, 0x2b8

Function 8:
Public function signature: 0x7f0a1bed
Entry block: 0x1b5
Exit block: 0x222
Body: 0x1b5, 0x1b9, 0x1c4, 0x1ce, 0x1d4, 0x222, 0x22c, 0x24b, 0x26b, 0x27f, 0x286, 0x28b, 0x291, 0x2b0, 0x2b8, 0x2bb, 0x2c5, 0x2c9, 0x2dd, 0x301, 0x488, 0x4ad, 0x4c2

Function 9:
Public function signature: 0x91f90157
Entry block: 0x1d8
Exit block: 0x22e
Body: 0x1d8, 0x1de, 0x22e

Function 10:
Public function signature: 0x951504c5
Entry block: 0x1ef
Exit block: 0x222
Body: 0x1ef, 0x1f5, 0x210, 0x222, 0x22c, 0x43c, 0x44b, 0x44f, 0x484

Function 11:
Public function signature: 0xd57bde79
Entry block: 0x214
Exit block: 0x143
Body: 0x143, 0x214, 0x21a

Function 12:
Public fallback function
Entry block: 0x98
Exit block: 0x222
Body: 0x98, 0xaa, 0xad, 0xcf, 0x10d, 0x1b9, 0x1c4, 0x1ce, 0x1d4, 0x222, 0x224, 0x22c, 0x24b, 0x26b, 0x27f, 0x286, 0x28b, 0x291, 0x2b0, 0x2b8, 0x2bb, 0x2c5, 0x2c9, 0x2dd, 0x301, 0x488, 0x4ad, 0x4c2

