Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x53]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x53
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x53
0xa: JUMPI 0x53 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x2ee]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x35f46994
0x34 EQ
0x35 PUSH2 0x2ee
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x35f46994
0x34: V10 = EQ 0x35f46994 V8
0x35: V11 = 0x2ee
0x38: JUMPI 0x2ee V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x2fd]
---
0x39 DUP1
0x3a PUSH4 0x45d03fce
0x3f EQ
0x40 PUSH2 0x2fd
0x43 JUMPI
---
0x3a: V12 = 0x45d03fce
0x3f: V13 = EQ 0x45d03fce V8
0x40: V14 = 0x2fd
0x43: JUMPI 0x2fd V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x336]
---
0x44 DUP1
0x45 PUSH4 0xb4b31bec
0x4a EQ
0x4b PUSH2 0x336
0x4e JUMPI
---
0x45: V15 = 0xb4b31bec
0x4a: V16 = EQ 0xb4b31bec V8
0x4b: V17 = 0x336
0x4e: JUMPI 0x336 V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x52]
---
Predecessors: [0x44]
Successors: [0x53]
---
0x4f PUSH2 0x53
0x52 JUMP
---
0x4f: V18 = 0x53
0x52: JUMP 0x53
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x53
[0x53:0x56]
---
Predecessors: [0x0, 0x4f]
Successors: [0x57]
---
0x53 JUMPDEST
0x54 PUSH2 0x2ec
---
0x53: JUMPDEST 
0x54: V19 = 0x2ec
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x2ec]
Exit stack: [V8, 0x2ec]

================================

Block 0x57
[0x57:0xad]
---
Predecessors: [0x53]
Successors: [0xae, 0xb2]
---
0x57 JUMPDEST
0x58 PUSH1 0x1
0x5a PUSH1 0x0
0x5c SWAP1
0x5d SLOAD
0x5e SWAP1
0x5f PUSH2 0x100
0x62 EXP
0x63 SWAP1
0x64 DIV
0x65 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a AND
0x7b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90 AND
0x91 CALLER
0x92 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7 AND
0xa8 EQ
0xa9 ISZERO
0xaa PUSH2 0xb2
0xad JUMPI
---
0x57: JUMPDEST 
0x58: V20 = 0x1
0x5a: V21 = 0x0
0x5d: V22 = S[0x1]
0x5f: V23 = 0x100
0x62: V24 = EXP 0x100 0x0
0x64: V25 = DIV V22 0x1
0x65: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x7b: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x90: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x91: V30 = CALLER
0x92: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0xa8: V33 = EQ V32 V29
0xa9: V34 = ISZERO V33
0xaa: V35 = 0xb2
0xad: JUMPI 0xb2 V34
---
Entry stack: [V8, 0x2ec]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2ec]

================================

Block 0xae
[0xae:0xb1]
---
Predecessors: [0x57]
Successors: [0x2ea]
---
0xae PUSH2 0x2ea
0xb1 JUMP
---
0xae: V36 = 0x2ea
0xb1: JUMP 0x2ea
---
Entry stack: [V8, 0x2ec]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2ec]

================================

Block 0xb2
[0xb2:0xc8]
---
Predecessors: [0x57]
Successors: [0xc9, 0xd6]
---
0xb2 JUMPDEST
0xb3 PUSH1 0x1
0xb5 PUSH1 0x14
0xb7 SWAP1
0xb8 SLOAD
0xb9 SWAP1
0xba PUSH2 0x100
0xbd EXP
0xbe SWAP1
0xbf DIV
0xc0 PUSH1 0xff
0xc2 AND
0xc3 DUP1
0xc4 ISZERO
0xc5 PUSH2 0xd6
0xc8 JUMPI
---
0xb2: JUMPDEST 
0xb3: V37 = 0x1
0xb5: V38 = 0x14
0xb8: V39 = S[0x1]
0xba: V40 = 0x100
0xbd: V41 = EXP 0x100 0x14
0xbf: V42 = DIV V39 0x10000000000000000000000000000000000000000
0xc0: V43 = 0xff
0xc2: V44 = AND 0xff V42
0xc4: V45 = ISZERO V44
0xc5: V46 = 0xd6
0xc8: JUMPI 0xd6 V45
---
Entry stack: [V8, 0x2ec]
Stack pops: 0
Stack additions: [V44]
Exit stack: [V8, 0x2ec, V44]

================================

Block 0xc9
[0xc9:0xd5]
---
Predecessors: [0xb2]
Successors: [0xd6]
---
0xc9 POP
0xca PUSH2 0x1c20
0xcd PUSH1 0x2
0xcf PUSH1 0x0
0xd1 POP
0xd2 SLOAD
0xd3 TIMESTAMP
0xd4 SUB
0xd5 LT
---
0xca: V47 = 0x1c20
0xcd: V48 = 0x2
0xcf: V49 = 0x0
0xd2: V50 = S[0x2]
0xd3: V51 = TIMESTAMP
0xd4: V52 = SUB V51 V50
0xd5: V53 = LT V52 0x1c20
---
Entry stack: [V8, 0x2ec, V44]
Stack pops: 1
Stack additions: [V53]
Exit stack: [V8, 0x2ec, V53]

================================

Block 0xd6
[0xd6:0xdb]
---
Predecessors: [0xb2, 0xc9]
Successors: [0xdc, 0x113]
---
0xd6 JUMPDEST
0xd7 ISZERO
0xd8 PUSH2 0x113
0xdb JUMPI
---
0xd6: JUMPDEST 
0xd7: V54 = ISZERO S0
0xd8: V55 = 0x113
0xdb: JUMPI 0x113 V54
---
Entry stack: [V8, 0x2ec, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x2ec]

================================

Block 0xdc
[0xdc:0x112]
---
Predecessors: [0xd6]
Successors: [0x2ea]
---
0xdc CALLER
0xdd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf2 AND
0xf3 PUSH1 0x0
0xf5 CALLVALUE
0xf6 PUSH1 0x40
0xf8 MLOAD
0xf9 DUP1
0xfa SWAP1
0xfb POP
0xfc PUSH1 0x0
0xfe PUSH1 0x40
0x100 MLOAD
0x101 DUP1
0x102 DUP4
0x103 SUB
0x104 DUP2
0x105 DUP6
0x106 DUP9
0x107 DUP9
0x108 CALL
0x109 SWAP4
0x10a POP
0x10b POP
0x10c POP
0x10d POP
0x10e POP
0x10f PUSH2 0x2ea
0x112 JUMP
---
0xdc: V56 = CALLER
0xdd: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0xf2: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xf3: V59 = 0x0
0xf5: V60 = CALLVALUE
0xf6: V61 = 0x40
0xf8: V62 = M[0x40]
0xfc: V63 = 0x0
0xfe: V64 = 0x40
0x100: V65 = M[0x40]
0x103: V66 = SUB V62 V65
0x108: V67 = CALL 0x0 V58 V60 V65 V66 V65 0x0
0x10f: V68 = 0x2ea
0x112: JUMP 0x2ea
---
Entry stack: [V8, 0x2ec]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2ec]

================================

Block 0x113
[0x113:0x1d0]
---
Predecessors: [0xd6]
Successors: [0x1d1]
---
0x113 JUMPDEST
0x114 PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x135 PUSH1 0x1
0x137 PUSH1 0x0
0x139 SWAP1
0x13a SLOAD
0x13b SWAP1
0x13c PUSH2 0x100
0x13f EXP
0x140 SWAP1
0x141 DIV
0x142 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x157 AND
0x158 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16d AND
0x16e PUSH4 0x83e78b31
0x173 CALLVALUE
0x174 PUSH3 0x7a120
0x178 SWAP1
0x179 PUSH1 0xb
0x17b PUSH1 0x1
0x17d PUSH1 0x1
0x17f PUSH1 0x40
0x181 MLOAD
0x182 DUP7
0x183 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1a1 MUL
0x1a2 DUP2
0x1a3 MSTORE
0x1a4 PUSH1 0x4
0x1a6 ADD
0x1a7 DUP1
0x1a8 DUP5
0x1a9 DUP2
0x1aa MSTORE
0x1ab PUSH1 0x20
0x1ad ADD
0x1ae DUP4
0x1af DUP2
0x1b0 MSTORE
0x1b1 PUSH1 0x20
0x1b3 ADD
0x1b4 DUP3
0x1b5 DUP2
0x1b6 MSTORE
0x1b7 PUSH1 0x20
0x1b9 ADD
0x1ba SWAP4
0x1bb POP
0x1bc POP
0x1bd POP
0x1be POP
0x1bf PUSH1 0x20
0x1c1 PUSH1 0x40
0x1c3 MLOAD
0x1c4 DUP1
0x1c5 DUP4
0x1c6 SUB
0x1c7 DUP2
0x1c8 DUP6
0x1c9 DUP10
0x1ca DUP9
0x1cb CALL
0x1cc ISZERO
0x1cd PUSH2 0x2
0x1d0 JUMPI
---
0x113: JUMPDEST 
0x114: V69 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x135: V70 = 0x1
0x137: V71 = 0x0
0x13a: V72 = S[0x1]
0x13c: V73 = 0x100
0x13f: V74 = EXP 0x100 0x0
0x141: V75 = DIV V72 0x1
0x142: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x157: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x158: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x16d: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x16e: V80 = 0x83e78b31
0x173: V81 = CALLVALUE
0x174: V82 = 0x7a120
0x179: V83 = 0xb
0x17b: V84 = 0x1
0x17d: V85 = 0x1
0x17f: V86 = 0x40
0x181: V87 = M[0x40]
0x183: V88 = 0x100000000000000000000000000000000000000000000000000000000
0x1a1: V89 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x83e78b31
0x1a3: M[V87] = 0x83e78b3100000000000000000000000000000000000000000000000000000000
0x1a4: V90 = 0x4
0x1a6: V91 = ADD 0x4 V87
0x1aa: M[V91] = 0xb
0x1ab: V92 = 0x20
0x1ad: V93 = ADD 0x20 V91
0x1b0: M[V93] = 0x1
0x1b1: V94 = 0x20
0x1b3: V95 = ADD 0x20 V93
0x1b6: M[V95] = 0x1
0x1b7: V96 = 0x20
0x1b9: V97 = ADD 0x20 V95
0x1bf: V98 = 0x20
0x1c1: V99 = 0x40
0x1c3: V100 = M[0x40]
0x1c6: V101 = SUB V97 V100
0x1cb: V102 = CALL 0x7a120 V79 V81 V100 V101 V100 0x20
0x1cc: V103 = ISZERO V102
0x1cd: V104 = 0x2
0x1d0: THROWI V103
---
Entry stack: [V8, 0x2ec]
Stack pops: 0
Stack additions: [0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, V79, 0x83e78b31, 0x7a120, V81, V97]
Exit stack: [V8, 0x2ec, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, V79, 0x83e78b31, 0x7a120, V81, V97]

================================

Block 0x1d1
[0x1d1:0x1e5]
---
Predecessors: [0x113]
Successors: [0x1e6, 0x21d]
---
0x1d1 POP
0x1d2 POP
0x1d3 POP
0x1d4 POP
0x1d5 POP
0x1d6 PUSH1 0x40
0x1d8 MLOAD
0x1d9 DUP1
0x1da MLOAD
0x1db SWAP1
0x1dc PUSH1 0x20
0x1de ADD
0x1df POP
0x1e0 EQ
0x1e1 ISZERO
0x1e2 PUSH2 0x21d
0x1e5 JUMPI
---
0x1d6: V105 = 0x40
0x1d8: V106 = M[0x40]
0x1da: V107 = M[V106]
0x1dc: V108 = 0x20
0x1de: V109 = ADD 0x20 V106
0x1e0: V110 = EQ V107 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1e1: V111 = ISZERO V110
0x1e2: V112 = 0x21d
0x1e5: JUMPI 0x21d V111
---
Entry stack: [V8, 0x2ec, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, V79, 0x83e78b31, 0x7a120, V81, V97]
Stack pops: 6
Stack additions: []
Exit stack: [V8, 0x2ec]

================================

Block 0x1e6
[0x1e6:0x21c]
---
Predecessors: [0x1d1]
Successors: [0x2ea]
---
0x1e6 CALLER
0x1e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fc AND
0x1fd PUSH1 0x0
0x1ff CALLVALUE
0x200 PUSH1 0x40
0x202 MLOAD
0x203 DUP1
0x204 SWAP1
0x205 POP
0x206 PUSH1 0x0
0x208 PUSH1 0x40
0x20a MLOAD
0x20b DUP1
0x20c DUP4
0x20d SUB
0x20e DUP2
0x20f DUP6
0x210 DUP9
0x211 DUP9
0x212 CALL
0x213 SWAP4
0x214 POP
0x215 POP
0x216 POP
0x217 POP
0x218 POP
0x219 PUSH2 0x2ea
0x21c JUMP
---
0x1e6: V113 = CALLER
0x1e7: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fc: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x1fd: V116 = 0x0
0x1ff: V117 = CALLVALUE
0x200: V118 = 0x40
0x202: V119 = M[0x40]
0x206: V120 = 0x0
0x208: V121 = 0x40
0x20a: V122 = M[0x40]
0x20d: V123 = SUB V119 V122
0x212: V124 = CALL 0x0 V115 V117 V122 V123 V122 0x0
0x219: V125 = 0x2ea
0x21c: JUMP 0x2ea
---
Entry stack: [V8, 0x2ec]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2ec]

================================

Block 0x21d
[0x21d:0x27a]
---
Predecessors: [0x1d1]
Successors: [0x27b, 0x28b]
---
0x21d JUMPDEST
0x21e PUSH1 0x1
0x220 PUSH1 0x1
0x222 PUSH1 0x14
0x224 PUSH2 0x100
0x227 EXP
0x228 DUP2
0x229 SLOAD
0x22a DUP2
0x22b PUSH1 0xff
0x22d MUL
0x22e NOT
0x22f AND
0x230 SWAP1
0x231 DUP4
0x232 MUL
0x233 OR
0x234 SWAP1
0x235 SSTORE
0x236 POP
0x237 TIMESTAMP
0x238 PUSH1 0x2
0x23a PUSH1 0x0
0x23c POP
0x23d DUP2
0x23e SWAP1
0x23f SSTORE
0x240 POP
0x241 PUSH1 0x0
0x243 CALLDATASIZE
0x244 PUSH1 0x3
0x246 PUSH1 0x0
0x248 POP
0x249 SWAP2
0x24a SWAP1
0x24b DUP3
0x24c DUP1
0x24d SLOAD
0x24e PUSH1 0x1
0x250 DUP2
0x251 PUSH1 0x1
0x253 AND
0x254 ISZERO
0x255 PUSH2 0x100
0x258 MUL
0x259 SUB
0x25a AND
0x25b PUSH1 0x2
0x25d SWAP1
0x25e DIV
0x25f SWAP1
0x260 PUSH1 0x0
0x262 MSTORE
0x263 PUSH1 0x20
0x265 PUSH1 0x0
0x267 SHA3
0x268 SWAP1
0x269 PUSH1 0x1f
0x26b ADD
0x26c PUSH1 0x20
0x26e SWAP1
0x26f DIV
0x270 DUP2
0x271 ADD
0x272 SWAP3
0x273 DUP3
0x274 PUSH1 0x1f
0x276 LT
0x277 PUSH2 0x28b
0x27a JUMPI
---
0x21d: JUMPDEST 
0x21e: V126 = 0x1
0x220: V127 = 0x1
0x222: V128 = 0x14
0x224: V129 = 0x100
0x227: V130 = EXP 0x100 0x14
0x229: V131 = S[0x1]
0x22b: V132 = 0xff
0x22d: V133 = MUL 0xff 0x10000000000000000000000000000000000000000
0x22e: V134 = NOT 0xff0000000000000000000000000000000000000000
0x22f: V135 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V131
0x232: V136 = MUL 0x1 0x10000000000000000000000000000000000000000
0x233: V137 = OR 0x10000000000000000000000000000000000000000 V135
0x235: S[0x1] = V137
0x237: V138 = TIMESTAMP
0x238: V139 = 0x2
0x23a: V140 = 0x0
0x23f: S[0x2] = V138
0x241: V141 = 0x0
0x243: V142 = CALLDATASIZE
0x244: V143 = 0x3
0x246: V144 = 0x0
0x24d: V145 = S[0x3]
0x24e: V146 = 0x1
0x251: V147 = 0x1
0x253: V148 = AND 0x1 V145
0x254: V149 = ISZERO V148
0x255: V150 = 0x100
0x258: V151 = MUL 0x100 V149
0x259: V152 = SUB V151 0x1
0x25a: V153 = AND V152 V145
0x25b: V154 = 0x2
0x25e: V155 = DIV V153 0x2
0x260: V156 = 0x0
0x262: M[0x0] = 0x3
0x263: V157 = 0x20
0x265: V158 = 0x0
0x267: V159 = SHA3 0x0 0x20
0x269: V160 = 0x1f
0x26b: V161 = ADD 0x1f V155
0x26c: V162 = 0x20
0x26f: V163 = DIV V161 0x20
0x271: V164 = ADD V159 V163
0x274: V165 = 0x1f
0x276: V166 = LT 0x1f V142
0x277: V167 = 0x28b
0x27a: JUMPI 0x28b V166
---
Entry stack: [V8, 0x2ec]
Stack pops: 0
Stack additions: [0x3, V164, V142, V159, 0x0]
Exit stack: [V8, 0x2ec, 0x3, V164, V142, V159, 0x0]

================================

Block 0x27b
[0x27b:0x28a]
---
Predecessors: [0x21d]
Successors: [0x2bc]
---
0x27b DUP1
0x27c CALLDATALOAD
0x27d PUSH1 0xff
0x27f NOT
0x280 AND
0x281 DUP4
0x282 DUP1
0x283 ADD
0x284 OR
0x285 DUP6
0x286 SSTORE
0x287 PUSH2 0x2bc
0x28a JUMP
---
0x27c: V168 = CALLDATALOAD 0x0
0x27d: V169 = 0xff
0x27f: V170 = NOT 0xff
0x280: V171 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V168
0x283: V172 = ADD V142 V142
0x284: V173 = OR V172 V171
0x286: S[0x3] = V173
0x287: V174 = 0x2bc
0x28a: JUMP 0x2bc
---
Entry stack: [V8, 0x2ec, 0x3, V164, V142, V159, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V8, 0x2ec, 0x3, V164, V142, V159, 0x0]

================================

Block 0x28b
[0x28b:0x299]
---
Predecessors: [0x21d]
Successors: [0x29a, 0x2bc]
---
0x28b JUMPDEST
0x28c DUP3
0x28d DUP1
0x28e ADD
0x28f PUSH1 0x1
0x291 ADD
0x292 DUP6
0x293 SSTORE
0x294 DUP3
0x295 ISZERO
0x296 PUSH2 0x2bc
0x299 JUMPI
---
0x28b: JUMPDEST 
0x28e: V175 = ADD V142 V142
0x28f: V176 = 0x1
0x291: V177 = ADD 0x1 V175
0x293: S[0x3] = V177
0x295: V178 = ISZERO V142
0x296: V179 = 0x2bc
0x299: JUMPI 0x2bc V178
---
Entry stack: [V8, 0x2ec, 0x3, V164, V142, V159, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V8, 0x2ec, 0x3, V164, V142, V159, 0x0]

================================

Block 0x29a
[0x29a:0x29c]
---
Predecessors: [0x28b]
Successors: [0x29d]
---
0x29a SWAP2
0x29b DUP3
0x29c ADD
---
0x29c: V180 = ADD 0x0 V142
---
Entry stack: [V8, 0x2ec, 0x3, V164, V142, V159, 0x0]
Stack pops: 3
Stack additions: [S0, S1, V180]
Exit stack: [V8, 0x2ec, 0x3, V164, 0x0, V159, V180]

================================

Block 0x29d
[0x29d:0x2a5]
---
Predecessors: [0x29a, 0x2a6]
Successors: [0x2a6, 0x2bb]
---
0x29d JUMPDEST
0x29e DUP3
0x29f DUP2
0x2a0 GT
0x2a1 ISZERO
0x2a2 PUSH2 0x2bb
0x2a5 JUMPI
---
0x29d: JUMPDEST 
0x2a0: V181 = GT V180 S2
0x2a1: V182 = ISZERO V181
0x2a2: V183 = 0x2bb
0x2a5: JUMPI 0x2bb V182
---
Entry stack: [V8, 0x2ec, 0x3, V164, S2, S1, V180]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0x2ec, 0x3, V164, S2, S1, V180]

================================

Block 0x2a6
[0x2a6:0x2ba]
---
Predecessors: [0x29d]
Successors: [0x29d]
---
0x2a6 DUP3
0x2a7 CALLDATALOAD
0x2a8 DUP3
0x2a9 PUSH1 0x0
0x2ab POP
0x2ac SSTORE
0x2ad SWAP2
0x2ae PUSH1 0x20
0x2b0 ADD
0x2b1 SWAP2
0x2b2 SWAP1
0x2b3 PUSH1 0x1
0x2b5 ADD
0x2b6 SWAP1
0x2b7 PUSH2 0x29d
0x2ba JUMP
---
0x2a7: V184 = CALLDATALOAD S2
0x2a9: V185 = 0x0
0x2ac: S[S1] = V184
0x2ae: V186 = 0x20
0x2b0: V187 = ADD 0x20 S2
0x2b3: V188 = 0x1
0x2b5: V189 = ADD 0x1 S1
0x2b7: V190 = 0x29d
0x2ba: JUMP 0x29d
---
Entry stack: [V8, 0x2ec, 0x3, V164, S2, S1, V180]
Stack pops: 3
Stack additions: [V187, V189, S0]
Exit stack: [V8, 0x2ec, 0x3, V164, V187, V189, V180]

================================

Block 0x2bb
[0x2bb:0x2bb]
---
Predecessors: [0x29d]
Successors: [0x2bc]
---
0x2bb JUMPDEST
---
0x2bb: JUMPDEST 
---
Entry stack: [V8, 0x2ec, 0x3, V164, S2, S1, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2ec, 0x3, V164, S2, S1, V180]

================================

Block 0x2bc
[0x2bc:0x2c8]
---
Predecessors: [0x27b, 0x28b, 0x2bb]
Successors: [0x2c9]
---
0x2bc JUMPDEST
0x2bd POP
0x2be SWAP1
0x2bf POP
0x2c0 PUSH2 0x2e7
0x2c3 SWAP2
0x2c4 SWAP1
0x2c5 PUSH2 0x2c9
0x2c8 JUMP
---
0x2bc: JUMPDEST 
0x2c0: V191 = 0x2e7
0x2c5: V192 = 0x2c9
0x2c8: JUMP 0x2c9
---
Entry stack: [V8, 0x2ec, 0x3, V164, S2, S1, S0]
Stack pops: 4
Stack additions: [0x2e7, S3, S1]
Exit stack: [V8, 0x2ec, 0x3, 0x2e7, V164, S1]

================================

Block 0x2c9
[0x2c9:0x2d1]
---
Predecessors: [0x2bc, 0x2d2]
Successors: [0x2d2, 0x2e3]
---
0x2c9 JUMPDEST
0x2ca DUP1
0x2cb DUP3
0x2cc GT
0x2cd ISZERO
0x2ce PUSH2 0x2e3
0x2d1 JUMPI
---
0x2c9: JUMPDEST 
0x2cc: V193 = GT V164 S0
0x2cd: V194 = ISZERO V193
0x2ce: V195 = 0x2e3
0x2d1: JUMPI 0x2e3 V194
---
Entry stack: [V8, 0x2ec, 0x3, 0x2e7, V164, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0x2ec, 0x3, 0x2e7, V164, S0]

================================

Block 0x2d2
[0x2d2:0x2e2]
---
Predecessors: [0x2c9]
Successors: [0x2c9]
---
0x2d2 PUSH1 0x0
0x2d4 DUP2
0x2d5 DUP2
0x2d6 POP
0x2d7 PUSH1 0x0
0x2d9 SWAP1
0x2da SSTORE
0x2db POP
0x2dc PUSH1 0x1
0x2de ADD
0x2df PUSH2 0x2c9
0x2e2 JUMP
---
0x2d2: V196 = 0x0
0x2d7: V197 = 0x0
0x2da: S[S0] = 0x0
0x2dc: V198 = 0x1
0x2de: V199 = ADD 0x1 S0
0x2df: V200 = 0x2c9
0x2e2: JUMP 0x2c9
---
Entry stack: [V8, 0x2ec, 0x3, 0x2e7, V164, S0]
Stack pops: 1
Stack additions: [V199]
Exit stack: [V8, 0x2ec, 0x3, 0x2e7, V164, V199]

================================

Block 0x2e3
[0x2e3:0x2e6]
---
Predecessors: [0x2c9]
Successors: [0x2e7]
---
0x2e3 JUMPDEST
0x2e4 POP
0x2e5 SWAP1
0x2e6 JUMP
---
0x2e3: JUMPDEST 
0x2e6: JUMP 0x2e7
---
Entry stack: [V8, 0x2ec, 0x3, 0x2e7, V164, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0x2ec, 0x3, V164]

================================

Block 0x2e7
[0x2e7:0x2e9]
---
Predecessors: [0x2e3]
Successors: [0x2ea]
---
0x2e7 JUMPDEST
0x2e8 POP
0x2e9 POP
---
0x2e7: JUMPDEST 
---
Entry stack: [V8, 0x2ec, 0x3, V164]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0x2ec]

================================

Block 0x2ea
[0x2ea:0x2eb]
---
Predecessors: [0xae, 0xdc, 0x1e6, 0x2e7]
Successors: [0x2ec]
---
0x2ea JUMPDEST
0x2eb JUMP
---
0x2ea: JUMPDEST 
0x2eb: JUMP 0x2ec
---
Entry stack: [V8, 0x2ec]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x2ec
[0x2ec:0x2ed]
---
Predecessors: [0x2ea]
Successors: []
---
0x2ec JUMPDEST
0x2ed STOP
---
0x2ec: JUMPDEST 
0x2ed: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x2ee
[0x2ee:0x2fa]
---
Predecessors: [0xb]
Successors: [0x3bb]
---
0x2ee JUMPDEST
0x2ef PUSH2 0x2fb
0x2f2 PUSH1 0x4
0x2f4 DUP1
0x2f5 POP
0x2f6 POP
0x2f7 PUSH2 0x3bb
0x2fa JUMP
---
0x2ee: JUMPDEST 
0x2ef: V201 = 0x2fb
0x2f2: V202 = 0x4
0x2f7: V203 = 0x3bb
0x2fa: JUMP 0x3bb
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x2fb]
Exit stack: [V8, 0x2fb]

================================

Block 0x2fb
[0x2fb:0x2fc]
---
Predecessors: []
Successors: []
---
0x2fb JUMPDEST
0x2fc STOP
---
0x2fb: JUMPDEST 
0x2fc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2fd
[0x2fd:0x309]
---
Predecessors: [0x39]
Successors: [0x395]
---
0x2fd JUMPDEST
0x2fe PUSH2 0x30a
0x301 PUSH1 0x4
0x303 DUP1
0x304 POP
0x305 POP
0x306 PUSH2 0x395
0x309 JUMP
---
0x2fd: JUMPDEST 
0x2fe: V204 = 0x30a
0x301: V205 = 0x4
0x306: V206 = 0x395
0x309: JUMP 0x395
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x30a]
Exit stack: [V8, 0x30a]

================================

Block 0x30a
[0x30a:0x335]
---
Predecessors: [0x395]
Successors: []
---
0x30a JUMPDEST
0x30b PUSH1 0x40
0x30d MLOAD
0x30e DUP1
0x30f DUP3
0x310 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x325 AND
0x326 DUP2
0x327 MSTORE
0x328 PUSH1 0x20
0x32a ADD
0x32b SWAP2
0x32c POP
0x32d POP
0x32e PUSH1 0x40
0x330 MLOAD
0x331 DUP1
0x332 SWAP2
0x333 SUB
0x334 SWAP1
0x335 RETURN
---
0x30a: JUMPDEST 
0x30b: V207 = 0x40
0x30d: V208 = M[0x40]
0x310: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x325: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x327: M[V208] = V210
0x328: V211 = 0x20
0x32a: V212 = ADD 0x20 V208
0x32e: V213 = 0x40
0x330: V214 = M[0x40]
0x333: V215 = SUB V212 V214
0x335: RETURN V214 V215
---
Entry stack: [V8, 0x30a, V243]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x30a]

================================

Block 0x336
[0x336:0x342]
---
Predecessors: [0x44]
Successors: [0x36f]
---
0x336 JUMPDEST
0x337 PUSH2 0x343
0x33a PUSH1 0x4
0x33c DUP1
0x33d POP
0x33e POP
0x33f PUSH2 0x36f
0x342 JUMP
---
0x336: JUMPDEST 
0x337: V216 = 0x343
0x33a: V217 = 0x4
0x33f: V218 = 0x36f
0x342: JUMP 0x36f
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x343]
Exit stack: [V8, 0x343]

================================

Block 0x343
[0x343:0x36e]
---
Predecessors: [0x36f]
Successors: []
---
0x343 JUMPDEST
0x344 PUSH1 0x40
0x346 MLOAD
0x347 DUP1
0x348 DUP3
0x349 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35e AND
0x35f DUP2
0x360 MSTORE
0x361 PUSH1 0x20
0x363 ADD
0x364 SWAP2
0x365 POP
0x366 POP
0x367 PUSH1 0x40
0x369 MLOAD
0x36a DUP1
0x36b SWAP2
0x36c SUB
0x36d SWAP1
0x36e RETURN
---
0x343: JUMPDEST 
0x344: V219 = 0x40
0x346: V220 = M[0x40]
0x349: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x35e: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x360: M[V220] = V222
0x361: V223 = 0x20
0x363: V224 = ADD 0x20 V220
0x367: V225 = 0x40
0x369: V226 = M[0x40]
0x36c: V227 = SUB V224 V226
0x36e: RETURN V226 V227
---
Entry stack: [V8, 0x343, V235]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x343]

================================

Block 0x36f
[0x36f:0x394]
---
Predecessors: [0x336]
Successors: [0x343]
---
0x36f JUMPDEST
0x370 PUSH1 0x0
0x372 PUSH1 0x0
0x374 SWAP1
0x375 SLOAD
0x376 SWAP1
0x377 PUSH2 0x100
0x37a EXP
0x37b SWAP1
0x37c DIV
0x37d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x392 AND
0x393 DUP2
0x394 JUMP
---
0x36f: JUMPDEST 
0x370: V228 = 0x0
0x372: V229 = 0x0
0x375: V230 = S[0x0]
0x377: V231 = 0x100
0x37a: V232 = EXP 0x100 0x0
0x37c: V233 = DIV V230 0x1
0x37d: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x392: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x394: JUMP 0x343
---
Entry stack: [V8, 0x343]
Stack pops: 1
Stack additions: [S0, V235]
Exit stack: [V8, 0x343, V235]

================================

Block 0x395
[0x395:0x3ba]
---
Predecessors: [0x2fd]
Successors: [0x30a]
---
0x395 JUMPDEST
0x396 PUSH1 0x1
0x398 PUSH1 0x0
0x39a SWAP1
0x39b SLOAD
0x39c SWAP1
0x39d PUSH2 0x100
0x3a0 EXP
0x3a1 SWAP1
0x3a2 DIV
0x3a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b8 AND
0x3b9 DUP2
0x3ba JUMP
---
0x395: JUMPDEST 
0x396: V236 = 0x1
0x398: V237 = 0x0
0x39b: V238 = S[0x1]
0x39d: V239 = 0x100
0x3a0: V240 = EXP 0x100 0x0
0x3a2: V241 = DIV V238 0x1
0x3a3: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b8: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x3ba: JUMP 0x30a
---
Entry stack: [V8, 0x30a]
Stack pops: 1
Stack additions: [S0, V243]
Exit stack: [V8, 0x30a, V243]

================================

Block 0x3bb
[0x3bb:0x3d3]
---
Predecessors: [0x2ee]
Successors: []
---
0x3bb JUMPDEST
0x3bc CALLER
0x3bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d2 AND
0x3d3 SELFDESTRUCT
---
0x3bb: JUMPDEST 
0x3bc: V244 = CALLER
0x3bd: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d2: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x3d3: SELFDESTRUCT V246
---
Entry stack: [V8, 0x2fb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2fb]

================================

Block 0x3d4
[0x3d4:0x3d5]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x3d4 JUMPDEST
0x3d5 JUMP
---
0x3d4: JUMPDEST 
0x3d5: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x35f46994
Entry block: 0x2ee
Exit block: 0x3bb
Body: 0x2ee, 0x3bb

Function 1:
Public function signature: 0x45d03fce
Entry block: 0x2fd
Exit block: 0x30a
Body: 0x2fd, 0x30a, 0x395

Function 2:
Public function signature: 0xb4b31bec
Entry block: 0x336
Exit block: 0x343
Body: 0x336, 0x343, 0x36f

Function 3:
Public fallback function
Entry block: 0x4f
Exit block: 0x2ec
Body: 0x4f, 0x53, 0x57, 0xae, 0xb2, 0xc9, 0xd6, 0xdc, 0x113, 0x1d1, 0x1e6, 0x21d, 0x27b, 0x28b, 0x29a, 0x29d, 0x2a6, 0x2bb, 0x2bc, 0x2c9, 0x2d2, 0x2e3, 0x2e7, 0x2ea, 0x2ec

