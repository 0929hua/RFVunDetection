args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/6/105707.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xba]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xba
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xba
0xc: JUMPI 0xba V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x1c3]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x5540534
0x3c EQ
0x3d PUSH2 0x1c3
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x5540534
0x3c: V13 = EQ 0x5540534 V11
0x3d: V14 = 0x1c3
0x40: JUMPI 0x1c3 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x1fc]
---
0x41 DUP1
0x42 PUSH4 0x23548b8b
0x47 EQ
0x48 PUSH2 0x1fc
0x4b JUMPI
---
0x42: V15 = 0x23548b8b
0x47: V16 = EQ 0x23548b8b V11
0x48: V17 = 0x1fc
0x4b: JUMPI 0x1fc V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x225]
---
0x4c DUP1
0x4d PUSH4 0x37ba682d
0x52 EQ
0x53 PUSH2 0x225
0x56 JUMPI
---
0x4d: V18 = 0x37ba682d
0x52: V19 = EQ 0x37ba682d V11
0x53: V20 = 0x225
0x56: JUMPI 0x225 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x24e]
---
0x57 DUP1
0x58 PUSH4 0x3e9491a2
0x5d EQ
0x5e PUSH2 0x24e
0x61 JUMPI
---
0x58: V21 = 0x3e9491a2
0x5d: V22 = EQ 0x3e9491a2 V11
0x5e: V23 = 0x24e
0x61: JUMPI 0x24e V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x277]
---
0x62 DUP1
0x63 PUSH4 0x4783c35b
0x68 EQ
0x69 PUSH2 0x277
0x6c JUMPI
---
0x63: V24 = 0x4783c35b
0x68: V25 = EQ 0x4783c35b V11
0x69: V26 = 0x277
0x6c: JUMPI 0x277 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x2cc]
---
0x6d DUP1
0x6e PUSH4 0x4a130ddc
0x73 EQ
0x74 PUSH2 0x2cc
0x77 JUMPI
---
0x6e: V27 = 0x4a130ddc
0x73: V28 = EQ 0x4a130ddc V11
0x74: V29 = 0x2cc
0x77: JUMPI 0x2cc V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x2f5]
---
0x78 DUP1
0x79 PUSH4 0x8da5cb5b
0x7e EQ
0x7f PUSH2 0x2f5
0x82 JUMPI
---
0x79: V30 = 0x8da5cb5b
0x7e: V31 = EQ 0x8da5cb5b V11
0x7f: V32 = 0x2f5
0x82: JUMPI 0x2f5 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x34a]
---
0x83 DUP1
0x84 PUSH4 0xc75363b6
0x89 EQ
0x8a PUSH2 0x34a
0x8d JUMPI
---
0x84: V33 = 0xc75363b6
0x89: V34 = EQ 0xc75363b6 V11
0x8a: V35 = 0x34a
0x8d: JUMPI 0x34a V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x373]
---
0x8e DUP1
0x8f PUSH4 0xdfcc3a00
0x94 EQ
0x95 PUSH2 0x373
0x98 JUMPI
---
0x8f: V36 = 0xdfcc3a00
0x94: V37 = EQ 0xdfcc3a00 V11
0x95: V38 = 0x373
0x98: JUMPI 0x373 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x39c]
---
0x99 DUP1
0x9a PUSH4 0xe4c5676c
0x9f EQ
0xa0 PUSH2 0x39c
0xa3 JUMPI
---
0x9a: V39 = 0xe4c5676c
0x9f: V40 = EQ 0xe4c5676c V11
0xa0: V41 = 0x39c
0xa3: JUMPI 0x39c V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x3c5]
---
0xa4 DUP1
0xa5 PUSH4 0xe7bb5233
0xaa EQ
0xab PUSH2 0x3c5
0xae JUMPI
---
0xa5: V42 = 0xe7bb5233
0xaa: V43 = EQ 0xe7bb5233 V11
0xab: V44 = 0x3c5
0xae: JUMPI 0x3c5 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x3fc]
---
0xaf DUP1
0xb0 PUSH4 0xfddf0fc0
0xb5 EQ
0xb6 PUSH2 0x3fc
0xb9 JUMPI
---
0xb0: V45 = 0xfddf0fc0
0xb5: V46 = EQ 0xfddf0fc0 V11
0xb6: V47 = 0x3fc
0xb9: JUMPI 0x3fc V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xce]
---
Predecessors: [0x0, 0xaf]
Successors: [0xcf, 0xd3]
---
0xba JUMPDEST
0xbb PUSH1 0x0
0xbd PUSH8 0x6f05b59d3b20000
0xc6 CALLVALUE
0xc7 LT
0xc8 ISZERO
0xc9 ISZERO
0xca ISZERO
0xcb PUSH2 0xd3
0xce JUMPI
---
0xba: JUMPDEST 
0xbb: V48 = 0x0
0xbd: V49 = 0x6f05b59d3b20000
0xc6: V50 = CALLVALUE
0xc7: V51 = LT V50 0x6f05b59d3b20000
0xc8: V52 = ISZERO V51
0xc9: V53 = ISZERO V52
0xca: V54 = ISZERO V53
0xcb: V55 = 0xd3
0xce: JUMPI 0xd3 V54
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0xcf
[0xcf:0xd2]
---
Predecessors: [0xba]
Successors: []
---
0xcf PUSH1 0x0
0xd1 DUP1
0xd2 REVERT
---
0xcf: V56 = 0x0
0xd2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xd3
[0xd3:0xdd]
---
Predecessors: [0xba]
Successors: [0xde, 0xdf]
---
0xd3 JUMPDEST
0xd4 PUSH1 0x2
0xd6 DUP1
0xd7 DUP2
0xd8 GT
0xd9 ISZERO
0xda PUSH2 0xdf
0xdd JUMPI
---
0xd3: JUMPDEST 
0xd4: V57 = 0x2
0xd8: V58 = GT 0x2 0x2
0xd9: V59 = ISZERO 0x0
0xda: V60 = 0xdf
0xdd: JUMPI 0xdf 0x1
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V11, 0x0, 0x2]

================================

Block 0xde
[0xde:0xde]
---
Predecessors: [0xd3]
Successors: []
---
0xde INVALID
---
0xde: INVALID 
---
Entry stack: [V11, 0x0, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x2]

================================

Block 0xdf
[0xdf:0xf8]
---
Predecessors: [0xd3]
Successors: [0xf9, 0xfa]
---
0xdf JUMPDEST
0xe0 PUSH1 0x8
0xe2 PUSH1 0x0
0xe4 SWAP1
0xe5 SLOAD
0xe6 SWAP1
0xe7 PUSH2 0x100
0xea EXP
0xeb SWAP1
0xec DIV
0xed PUSH1 0xff
0xef AND
0xf0 PUSH1 0x2
0xf2 DUP2
0xf3 GT
0xf4 ISZERO
0xf5 PUSH2 0xfa
0xf8 JUMPI
---
0xdf: JUMPDEST 
0xe0: V61 = 0x8
0xe2: V62 = 0x0
0xe5: V63 = S[0x8]
0xe7: V64 = 0x100
0xea: V65 = EXP 0x100 0x0
0xec: V66 = DIV V63 0x1
0xed: V67 = 0xff
0xef: V68 = AND 0xff V66
0xf0: V69 = 0x2
0xf3: V70 = GT V68 0x2
0xf4: V71 = ISZERO V70
0xf5: V72 = 0xfa
0xf8: JUMPI 0xfa V71
---
Entry stack: [V11, 0x0, 0x2]
Stack pops: 0
Stack additions: [V68]
Exit stack: [V11, 0x0, 0x2, V68]

================================

Block 0xf9
[0xf9:0xf9]
---
Predecessors: [0xdf]
Successors: []
---
0xf9 INVALID
---
0xf9: INVALID 
---
Entry stack: [V11, 0x0, 0x2, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x2, V68]

================================

Block 0xfa
[0xfa:0x102]
---
Predecessors: [0xdf]
Successors: [0x103, 0x107]
---
0xfa JUMPDEST
0xfb EQ
0xfc ISZERO
0xfd ISZERO
0xfe ISZERO
0xff PUSH2 0x107
0x102 JUMPI
---
0xfa: JUMPDEST 
0xfb: V73 = EQ V68 0x2
0xfc: V74 = ISZERO V73
0xfd: V75 = ISZERO V74
0xfe: V76 = ISZERO V75
0xff: V77 = 0x107
0x102: JUMPI 0x107 V76
---
Entry stack: [V11, 0x0, 0x2, V68]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x103
[0x103:0x106]
---
Predecessors: [0xfa]
Successors: []
---
0x103 PUSH1 0x0
0x105 DUP1
0x106 REVERT
---
0x103: V78 = 0x0
0x106: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x107
[0x107:0x10e]
---
Predecessors: [0xfa]
Successors: [0x425]
---
0x107 JUMPDEST
0x108 PUSH2 0x10f
0x10b PUSH2 0x425
0x10e JUMP
---
0x107: JUMPDEST 
0x108: V79 = 0x10f
0x10b: V80 = 0x425
0x10e: JUMP 0x425
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: [0x10f]
Exit stack: [V11, 0x0, 0x10f]

================================

Block 0x10f
[0x10f:0x11c]
---
Predecessors: [0x5ef]
Successors: [0x11d, 0x11e]
---
0x10f JUMPDEST
0x110 SWAP1
0x111 POP
0x112 PUSH1 0x1
0x114 PUSH1 0x2
0x116 DUP2
0x117 GT
0x118 ISZERO
0x119 PUSH2 0x11e
0x11c JUMPI
---
0x10f: JUMPDEST 
0x112: V81 = 0x1
0x114: V82 = 0x2
0x117: V83 = GT 0x1 0x2
0x118: V84 = ISZERO 0x0
0x119: V85 = 0x11e
0x11c: JUMPI 0x11e 0x1
---
Entry stack: [V11, 0x0, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0, 0x1]
Exit stack: [V11, {0x0, 0x1}, 0x1]

================================

Block 0x11d
[0x11d:0x11d]
---
Predecessors: [0x10f]
Successors: []
---
0x11d INVALID
---
0x11d: INVALID 
---
Entry stack: [V11, {0x0, 0x1}, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x0, 0x1}, 0x1]

================================

Block 0x11e
[0x11e:0x137]
---
Predecessors: [0x10f]
Successors: [0x138, 0x139]
---
0x11e JUMPDEST
0x11f PUSH1 0x8
0x121 PUSH1 0x0
0x123 SWAP1
0x124 SLOAD
0x125 SWAP1
0x126 PUSH2 0x100
0x129 EXP
0x12a SWAP1
0x12b DIV
0x12c PUSH1 0xff
0x12e AND
0x12f PUSH1 0x2
0x131 DUP2
0x132 GT
0x133 ISZERO
0x134 PUSH2 0x139
0x137 JUMPI
---
0x11e: JUMPDEST 
0x11f: V86 = 0x8
0x121: V87 = 0x0
0x124: V88 = S[0x8]
0x126: V89 = 0x100
0x129: V90 = EXP 0x100 0x0
0x12b: V91 = DIV V88 0x1
0x12c: V92 = 0xff
0x12e: V93 = AND 0xff V91
0x12f: V94 = 0x2
0x132: V95 = GT V93 0x2
0x133: V96 = ISZERO V95
0x134: V97 = 0x139
0x137: JUMPI 0x139 V96
---
Entry stack: [V11, {0x0, 0x1}, 0x1]
Stack pops: 0
Stack additions: [V93]
Exit stack: [V11, {0x0, 0x1}, 0x1, V93]

================================

Block 0x138
[0x138:0x138]
---
Predecessors: [0x11e]
Successors: []
---
0x138 INVALID
---
0x138: INVALID 
---
Entry stack: [V11, {0x0, 0x1}, 0x1, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x0, 0x1}, 0x1, V93]

================================

Block 0x139
[0x139:0x13f]
---
Predecessors: [0x11e]
Successors: [0x140, 0x1b6]
---
0x139 JUMPDEST
0x13a EQ
0x13b ISZERO
0x13c PUSH2 0x1b6
0x13f JUMPI
---
0x139: JUMPDEST 
0x13a: V98 = EQ V93 0x1
0x13b: V99 = ISZERO V98
0x13c: V100 = 0x1b6
0x13f: JUMPI 0x1b6 V99
---
Entry stack: [V11, {0x0, 0x1}, 0x1, V93]
Stack pops: 2
Stack additions: []
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x140
[0x140:0x1ac]
---
Predecessors: [0x139]
Successors: [0x1ad, 0x1b1]
---
0x140 CALLVALUE
0x141 PUSH1 0x2
0x143 PUSH1 0x0
0x145 DUP3
0x146 DUP3
0x147 SLOAD
0x148 ADD
0x149 SWAP3
0x14a POP
0x14b POP
0x14c DUP2
0x14d SWAP1
0x14e SSTORE
0x14f POP
0x150 PUSH1 0x3
0x152 PUSH1 0x0
0x154 SWAP1
0x155 SLOAD
0x156 SWAP1
0x157 PUSH2 0x100
0x15a EXP
0x15b SWAP1
0x15c DIV
0x15d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x172 AND
0x173 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x188 AND
0x189 PUSH2 0x8fc
0x18c CALLVALUE
0x18d SWAP1
0x18e DUP2
0x18f ISZERO
0x190 MUL
0x191 SWAP1
0x192 PUSH1 0x40
0x194 MLOAD
0x195 PUSH1 0x0
0x197 PUSH1 0x40
0x199 MLOAD
0x19a DUP1
0x19b DUP4
0x19c SUB
0x19d DUP2
0x19e DUP6
0x19f DUP9
0x1a0 DUP9
0x1a1 CALL
0x1a2 SWAP4
0x1a3 POP
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 ISZERO
0x1a8 ISZERO
0x1a9 PUSH2 0x1b1
0x1ac JUMPI
---
0x140: V101 = CALLVALUE
0x141: V102 = 0x2
0x143: V103 = 0x0
0x147: V104 = S[0x2]
0x148: V105 = ADD V104 V101
0x14e: S[0x2] = V105
0x150: V106 = 0x3
0x152: V107 = 0x0
0x155: V108 = S[0x3]
0x157: V109 = 0x100
0x15a: V110 = EXP 0x100 0x0
0x15c: V111 = DIV V108 0x1
0x15d: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x172: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x173: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x188: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x189: V116 = 0x8fc
0x18c: V117 = CALLVALUE
0x18f: V118 = ISZERO V117
0x190: V119 = MUL V118 0x8fc
0x192: V120 = 0x40
0x194: V121 = M[0x40]
0x195: V122 = 0x0
0x197: V123 = 0x40
0x199: V124 = M[0x40]
0x19c: V125 = SUB V121 V124
0x1a1: V126 = CALL V119 V115 V117 V124 V125 V124 0x0
0x1a7: V127 = ISZERO V126
0x1a8: V128 = ISZERO V127
0x1a9: V129 = 0x1b1
0x1ac: JUMPI 0x1b1 V128
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x1ad
[0x1ad:0x1b0]
---
Predecessors: [0x140]
Successors: []
---
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 REVERT
---
0x1ad: V130 = 0x0
0x1b0: REVERT 0x0 0x0
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x1b1
[0x1b1:0x1b5]
---
Predecessors: [0x140]
Successors: [0x1c0]
---
0x1b1 JUMPDEST
0x1b2 PUSH2 0x1c0
0x1b5 JUMP
---
0x1b1: JUMPDEST 
0x1b2: V131 = 0x1c0
0x1b5: JUMP 0x1c0
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x1b6
[0x1b6:0x1be]
---
Predecessors: [0x139]
Successors: [0x5f2]
---
0x1b6 JUMPDEST
0x1b7 PUSH2 0x1bf
0x1ba DUP2
0x1bb PUSH2 0x5f2
0x1be JUMP
---
0x1b6: JUMPDEST 
0x1b7: V132 = 0x1bf
0x1bb: V133 = 0x5f2
0x1be: JUMP 0x5f2
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: [S0, 0x1bf, S0]
Exit stack: [V11, {0x0, 0x1}, 0x1bf, {0x0, 0x1}]

================================

Block 0x1bf
[0x1bf:0x1bf]
---
Predecessors: [0x642]
Successors: [0x1c0]
---
0x1bf JUMPDEST
---
0x1bf: JUMPDEST 
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x1c0
[0x1c0:0x1c2]
---
Predecessors: [0x1b1, 0x1bf]
Successors: []
---
0x1c0 JUMPDEST
0x1c1 POP
0x1c2 STOP
---
0x1c0: JUMPDEST 
0x1c2: STOP 
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c3
[0x1c3:0x1c9]
---
Predecessors: [0xd]
Successors: [0x1ca, 0x1ce]
---
0x1c3 JUMPDEST
0x1c4 CALLVALUE
0x1c5 ISZERO
0x1c6 PUSH2 0x1ce
0x1c9 JUMPI
---
0x1c3: JUMPDEST 
0x1c4: V134 = CALLVALUE
0x1c5: V135 = ISZERO V134
0x1c6: V136 = 0x1ce
0x1c9: JUMPI 0x1ce V135
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ca
[0x1ca:0x1cd]
---
Predecessors: [0x1c3]
Successors: []
---
0x1ca PUSH1 0x0
0x1cc DUP1
0x1cd REVERT
---
0x1ca: V137 = 0x0
0x1cd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ce
[0x1ce:0x1f9]
---
Predecessors: [0x1c3]
Successors: [0x645]
---
0x1ce JUMPDEST
0x1cf PUSH2 0x1fa
0x1d2 PUSH1 0x4
0x1d4 DUP1
0x1d5 DUP1
0x1d6 CALLDATALOAD
0x1d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ec AND
0x1ed SWAP1
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 SWAP1
0x1f2 SWAP2
0x1f3 SWAP1
0x1f4 POP
0x1f5 POP
0x1f6 PUSH2 0x645
0x1f9 JUMP
---
0x1ce: JUMPDEST 
0x1cf: V138 = 0x1fa
0x1d2: V139 = 0x4
0x1d6: V140 = CALLDATALOAD 0x4
0x1d7: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x1ee: V143 = 0x20
0x1f0: V144 = ADD 0x20 0x4
0x1f6: V145 = 0x645
0x1f9: JUMP 0x645
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1fa, V142]
Exit stack: [V11, 0x1fa, V142]

================================

Block 0x1fa
[0x1fa:0x1fb]
---
Predecessors: [0x6a0]
Successors: []
---
0x1fa JUMPDEST
0x1fb STOP
---
0x1fa: JUMPDEST 
0x1fb: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1fc
[0x1fc:0x202]
---
Predecessors: [0x41]
Successors: [0x203, 0x207]
---
0x1fc JUMPDEST
0x1fd CALLVALUE
0x1fe ISZERO
0x1ff PUSH2 0x207
0x202 JUMPI
---
0x1fc: JUMPDEST 
0x1fd: V146 = CALLVALUE
0x1fe: V147 = ISZERO V146
0x1ff: V148 = 0x207
0x202: JUMPI 0x207 V147
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x203
[0x203:0x206]
---
Predecessors: [0x1fc]
Successors: []
---
0x203 PUSH1 0x0
0x205 DUP1
0x206 REVERT
---
0x203: V149 = 0x0
0x206: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x207
[0x207:0x20e]
---
Predecessors: [0x1fc]
Successors: [0x6e4]
---
0x207 JUMPDEST
0x208 PUSH2 0x20f
0x20b PUSH2 0x6e4
0x20e JUMP
---
0x207: JUMPDEST 
0x208: V150 = 0x20f
0x20b: V151 = 0x6e4
0x20e: JUMP 0x6e4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x20f]
Exit stack: [V11, 0x20f]

================================

Block 0x20f
[0x20f:0x224]
---
Predecessors: [0x6e4]
Successors: []
---
0x20f JUMPDEST
0x210 PUSH1 0x40
0x212 MLOAD
0x213 DUP1
0x214 DUP3
0x215 DUP2
0x216 MSTORE
0x217 PUSH1 0x20
0x219 ADD
0x21a SWAP2
0x21b POP
0x21c POP
0x21d PUSH1 0x40
0x21f MLOAD
0x220 DUP1
0x221 SWAP2
0x222 SUB
0x223 SWAP1
0x224 RETURN
---
0x20f: JUMPDEST 
0x210: V152 = 0x40
0x212: V153 = M[0x40]
0x216: M[V153] = V505
0x217: V154 = 0x20
0x219: V155 = ADD 0x20 V153
0x21d: V156 = 0x40
0x21f: V157 = M[0x40]
0x222: V158 = SUB V155 V157
0x224: RETURN V157 V158
---
Entry stack: [V11, 0x20f, V505]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x20f]

================================

Block 0x225
[0x225:0x22b]
---
Predecessors: [0x4c]
Successors: [0x22c, 0x230]
---
0x225 JUMPDEST
0x226 CALLVALUE
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x225: JUMPDEST 
0x226: V159 = CALLVALUE
0x227: V160 = ISZERO V159
0x228: V161 = 0x230
0x22b: JUMPI 0x230 V160
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x225]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V162 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x230
[0x230:0x237]
---
Predecessors: [0x225]
Successors: [0x6ea]
---
0x230 JUMPDEST
0x231 PUSH2 0x238
0x234 PUSH2 0x6ea
0x237 JUMP
---
0x230: JUMPDEST 
0x231: V163 = 0x238
0x234: V164 = 0x6ea
0x237: JUMP 0x6ea
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x238]
Exit stack: [V11, 0x238]

================================

Block 0x238
[0x238:0x24d]
---
Predecessors: [0x6ea]
Successors: []
---
0x238 JUMPDEST
0x239 PUSH1 0x40
0x23b MLOAD
0x23c DUP1
0x23d DUP3
0x23e DUP2
0x23f MSTORE
0x240 PUSH1 0x20
0x242 ADD
0x243 SWAP2
0x244 POP
0x245 POP
0x246 PUSH1 0x40
0x248 MLOAD
0x249 DUP1
0x24a SWAP2
0x24b SUB
0x24c SWAP1
0x24d RETURN
---
0x238: JUMPDEST 
0x239: V165 = 0x40
0x23b: V166 = M[0x40]
0x23f: M[V166] = 0x59fb4100
0x240: V167 = 0x20
0x242: V168 = ADD 0x20 V166
0x246: V169 = 0x40
0x248: V170 = M[0x40]
0x24b: V171 = SUB V168 V170
0x24d: RETURN V170 V171
---
Entry stack: [V11, 0x238, 0x59fb4100]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x238]

================================

Block 0x24e
[0x24e:0x254]
---
Predecessors: [0x57]
Successors: [0x255, 0x259]
---
0x24e JUMPDEST
0x24f CALLVALUE
0x250 ISZERO
0x251 PUSH2 0x259
0x254 JUMPI
---
0x24e: JUMPDEST 
0x24f: V172 = CALLVALUE
0x250: V173 = ISZERO V172
0x251: V174 = 0x259
0x254: JUMPI 0x259 V173
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x255
[0x255:0x258]
---
Predecessors: [0x24e]
Successors: []
---
0x255 PUSH1 0x0
0x257 DUP1
0x258 REVERT
---
0x255: V175 = 0x0
0x258: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x259
[0x259:0x260]
---
Predecessors: [0x24e]
Successors: [0x6f2]
---
0x259 JUMPDEST
0x25a PUSH2 0x261
0x25d PUSH2 0x6f2
0x260 JUMP
---
0x259: JUMPDEST 
0x25a: V176 = 0x261
0x25d: V177 = 0x6f2
0x260: JUMP 0x6f2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x261]
Exit stack: [V11, 0x261]

================================

Block 0x261
[0x261:0x276]
---
Predecessors: [0x6f2]
Successors: []
---
0x261 JUMPDEST
0x262 PUSH1 0x40
0x264 MLOAD
0x265 DUP1
0x266 DUP3
0x267 DUP2
0x268 MSTORE
0x269 PUSH1 0x20
0x26b ADD
0x26c SWAP2
0x26d POP
0x26e POP
0x26f PUSH1 0x40
0x271 MLOAD
0x272 DUP1
0x273 SWAP2
0x274 SUB
0x275 SWAP1
0x276 RETURN
---
0x261: JUMPDEST 
0x262: V178 = 0x40
0x264: V179 = M[0x40]
0x268: M[V179] = V508
0x269: V180 = 0x20
0x26b: V181 = ADD 0x20 V179
0x26f: V182 = 0x40
0x271: V183 = M[0x40]
0x274: V184 = SUB V181 V183
0x276: RETURN V183 V184
---
Entry stack: [V11, 0x261, V508]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x261]

================================

Block 0x277
[0x277:0x27d]
---
Predecessors: [0x62]
Successors: [0x27e, 0x282]
---
0x277 JUMPDEST
0x278 CALLVALUE
0x279 ISZERO
0x27a PUSH2 0x282
0x27d JUMPI
---
0x277: JUMPDEST 
0x278: V185 = CALLVALUE
0x279: V186 = ISZERO V185
0x27a: V187 = 0x282
0x27d: JUMPI 0x282 V186
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x27e
[0x27e:0x281]
---
Predecessors: [0x277]
Successors: []
---
0x27e PUSH1 0x0
0x280 DUP1
0x281 REVERT
---
0x27e: V188 = 0x0
0x281: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x282
[0x282:0x289]
---
Predecessors: [0x277]
Successors: [0x6f8]
---
0x282 JUMPDEST
0x283 PUSH2 0x28a
0x286 PUSH2 0x6f8
0x289 JUMP
---
0x282: JUMPDEST 
0x283: V189 = 0x28a
0x286: V190 = 0x6f8
0x289: JUMP 0x6f8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x28a]
Exit stack: [V11, 0x28a]

================================

Block 0x28a
[0x28a:0x2cb]
---
Predecessors: [0x6f8]
Successors: []
---
0x28a JUMPDEST
0x28b PUSH1 0x40
0x28d MLOAD
0x28e DUP1
0x28f DUP3
0x290 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a5 AND
0x2a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bb AND
0x2bc DUP2
0x2bd MSTORE
0x2be PUSH1 0x20
0x2c0 ADD
0x2c1 SWAP2
0x2c2 POP
0x2c3 POP
0x2c4 PUSH1 0x40
0x2c6 MLOAD
0x2c7 DUP1
0x2c8 SWAP2
0x2c9 SUB
0x2ca SWAP1
0x2cb RETURN
---
0x28a: JUMPDEST 
0x28b: V191 = 0x40
0x28d: V192 = M[0x40]
0x290: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x2a6: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bb: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x2bd: M[V192] = V196
0x2be: V197 = 0x20
0x2c0: V198 = ADD 0x20 V192
0x2c4: V199 = 0x40
0x2c6: V200 = M[0x40]
0x2c9: V201 = SUB V198 V200
0x2cb: RETURN V200 V201
---
Entry stack: [V11, 0x28a, V516]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x28a]

================================

Block 0x2cc
[0x2cc:0x2d2]
---
Predecessors: [0x6d]
Successors: [0x2d3, 0x2d7]
---
0x2cc JUMPDEST
0x2cd CALLVALUE
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x2cc: JUMPDEST 
0x2cd: V202 = CALLVALUE
0x2ce: V203 = ISZERO V202
0x2cf: V204 = 0x2d7
0x2d2: JUMPI 0x2d7 V203
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x2cc]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V205 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2d7
[0x2d7:0x2de]
---
Predecessors: [0x2cc]
Successors: [0x71e]
---
0x2d7 JUMPDEST
0x2d8 PUSH2 0x2df
0x2db PUSH2 0x71e
0x2de JUMP
---
0x2d7: JUMPDEST 
0x2d8: V206 = 0x2df
0x2db: V207 = 0x71e
0x2de: JUMP 0x71e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2df]
Exit stack: [V11, 0x2df]

================================

Block 0x2df
[0x2df:0x2f4]
---
Predecessors: [0x71e]
Successors: []
---
0x2df JUMPDEST
0x2e0 PUSH1 0x40
0x2e2 MLOAD
0x2e3 DUP1
0x2e4 DUP3
0x2e5 DUP2
0x2e6 MSTORE
0x2e7 PUSH1 0x20
0x2e9 ADD
0x2ea SWAP2
0x2eb POP
0x2ec POP
0x2ed PUSH1 0x40
0x2ef MLOAD
0x2f0 DUP1
0x2f1 SWAP2
0x2f2 SUB
0x2f3 SWAP1
0x2f4 RETURN
---
0x2df: JUMPDEST 
0x2e0: V208 = 0x40
0x2e2: V209 = M[0x40]
0x2e6: M[V209] = V518
0x2e7: V210 = 0x20
0x2e9: V211 = ADD 0x20 V209
0x2ed: V212 = 0x40
0x2ef: V213 = M[0x40]
0x2f2: V214 = SUB V211 V213
0x2f4: RETURN V213 V214
---
Entry stack: [V11, 0x2df, V518]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2df]

================================

Block 0x2f5
[0x2f5:0x2fb]
---
Predecessors: [0x78]
Successors: [0x2fc, 0x300]
---
0x2f5 JUMPDEST
0x2f6 CALLVALUE
0x2f7 ISZERO
0x2f8 PUSH2 0x300
0x2fb JUMPI
---
0x2f5: JUMPDEST 
0x2f6: V215 = CALLVALUE
0x2f7: V216 = ISZERO V215
0x2f8: V217 = 0x300
0x2fb: JUMPI 0x300 V216
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2fc
[0x2fc:0x2ff]
---
Predecessors: [0x2f5]
Successors: []
---
0x2fc PUSH1 0x0
0x2fe DUP1
0x2ff REVERT
---
0x2fc: V218 = 0x0
0x2ff: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x300
[0x300:0x307]
---
Predecessors: [0x2f5]
Successors: [0x724]
---
0x300 JUMPDEST
0x301 PUSH2 0x308
0x304 PUSH2 0x724
0x307 JUMP
---
0x300: JUMPDEST 
0x301: V219 = 0x308
0x304: V220 = 0x724
0x307: JUMP 0x724
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x308]
Exit stack: [V11, 0x308]

================================

Block 0x308
[0x308:0x349]
---
Predecessors: [0x724]
Successors: []
---
0x308 JUMPDEST
0x309 PUSH1 0x40
0x30b MLOAD
0x30c DUP1
0x30d DUP3
0x30e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x323 AND
0x324 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x339 AND
0x33a DUP2
0x33b MSTORE
0x33c PUSH1 0x20
0x33e ADD
0x33f SWAP2
0x340 POP
0x341 POP
0x342 PUSH1 0x40
0x344 MLOAD
0x345 DUP1
0x346 SWAP2
0x347 SUB
0x348 SWAP1
0x349 RETURN
---
0x308: JUMPDEST 
0x309: V221 = 0x40
0x30b: V222 = M[0x40]
0x30e: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x323: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x324: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x339: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x33b: M[V222] = V226
0x33c: V227 = 0x20
0x33e: V228 = ADD 0x20 V222
0x342: V229 = 0x40
0x344: V230 = M[0x40]
0x347: V231 = SUB V228 V230
0x349: RETURN V230 V231
---
Entry stack: [V11, 0x308, V525]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x308]

================================

Block 0x34a
[0x34a:0x350]
---
Predecessors: [0x83]
Successors: [0x351, 0x355]
---
0x34a JUMPDEST
0x34b CALLVALUE
0x34c ISZERO
0x34d PUSH2 0x355
0x350 JUMPI
---
0x34a: JUMPDEST 
0x34b: V232 = CALLVALUE
0x34c: V233 = ISZERO V232
0x34d: V234 = 0x355
0x350: JUMPI 0x355 V233
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x351
[0x351:0x354]
---
Predecessors: [0x34a]
Successors: []
---
0x351 PUSH1 0x0
0x353 DUP1
0x354 REVERT
---
0x351: V235 = 0x0
0x354: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x355
[0x355:0x35c]
---
Predecessors: [0x34a]
Successors: [0x749]
---
0x355 JUMPDEST
0x356 PUSH2 0x35d
0x359 PUSH2 0x749
0x35c JUMP
---
0x355: JUMPDEST 
0x356: V236 = 0x35d
0x359: V237 = 0x749
0x35c: JUMP 0x749
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x35d]
Exit stack: [V11, 0x35d]

================================

Block 0x35d
[0x35d:0x372]
---
Predecessors: [0x749]
Successors: []
---
0x35d JUMPDEST
0x35e PUSH1 0x40
0x360 MLOAD
0x361 DUP1
0x362 DUP3
0x363 DUP2
0x364 MSTORE
0x365 PUSH1 0x20
0x367 ADD
0x368 SWAP2
0x369 POP
0x36a POP
0x36b PUSH1 0x40
0x36d MLOAD
0x36e DUP1
0x36f SWAP2
0x370 SUB
0x371 SWAP1
0x372 RETURN
---
0x35d: JUMPDEST 
0x35e: V238 = 0x40
0x360: V239 = M[0x40]
0x364: M[V239] = 0x59f769d1
0x365: V240 = 0x20
0x367: V241 = ADD 0x20 V239
0x36b: V242 = 0x40
0x36d: V243 = M[0x40]
0x370: V244 = SUB V241 V243
0x372: RETURN V243 V244
---
Entry stack: [V11, 0x35d, 0x59f769d1]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x35d]

================================

Block 0x373
[0x373:0x379]
---
Predecessors: [0x8e]
Successors: [0x37a, 0x37e]
---
0x373 JUMPDEST
0x374 CALLVALUE
0x375 ISZERO
0x376 PUSH2 0x37e
0x379 JUMPI
---
0x373: JUMPDEST 
0x374: V245 = CALLVALUE
0x375: V246 = ISZERO V245
0x376: V247 = 0x37e
0x379: JUMPI 0x37e V246
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x37a
[0x37a:0x37d]
---
Predecessors: [0x373]
Successors: []
---
0x37a PUSH1 0x0
0x37c DUP1
0x37d REVERT
---
0x37a: V248 = 0x0
0x37d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x37e
[0x37e:0x385]
---
Predecessors: [0x373]
Successors: [0x751]
---
0x37e JUMPDEST
0x37f PUSH2 0x386
0x382 PUSH2 0x751
0x385 JUMP
---
0x37e: JUMPDEST 
0x37f: V249 = 0x386
0x382: V250 = 0x751
0x385: JUMP 0x751
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x386]
Exit stack: [V11, 0x386]

================================

Block 0x386
[0x386:0x39b]
---
Predecessors: [0x751]
Successors: []
---
0x386 JUMPDEST
0x387 PUSH1 0x40
0x389 MLOAD
0x38a DUP1
0x38b DUP3
0x38c DUP2
0x38d MSTORE
0x38e PUSH1 0x20
0x390 ADD
0x391 SWAP2
0x392 POP
0x393 POP
0x394 PUSH1 0x40
0x396 MLOAD
0x397 DUP1
0x398 SWAP2
0x399 SUB
0x39a SWAP1
0x39b RETURN
---
0x386: JUMPDEST 
0x387: V251 = 0x40
0x389: V252 = M[0x40]
0x38d: M[V252] = V528
0x38e: V253 = 0x20
0x390: V254 = ADD 0x20 V252
0x394: V255 = 0x40
0x396: V256 = M[0x40]
0x399: V257 = SUB V254 V256
0x39b: RETURN V256 V257
---
Entry stack: [V11, 0x386, V528]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x386]

================================

Block 0x39c
[0x39c:0x3a2]
---
Predecessors: [0x99]
Successors: [0x3a3, 0x3a7]
---
0x39c JUMPDEST
0x39d CALLVALUE
0x39e ISZERO
0x39f PUSH2 0x3a7
0x3a2 JUMPI
---
0x39c: JUMPDEST 
0x39d: V258 = CALLVALUE
0x39e: V259 = ISZERO V258
0x39f: V260 = 0x3a7
0x3a2: JUMPI 0x3a7 V259
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3a3
[0x3a3:0x3a6]
---
Predecessors: [0x39c]
Successors: []
---
0x3a3 PUSH1 0x0
0x3a5 DUP1
0x3a6 REVERT
---
0x3a3: V261 = 0x0
0x3a6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3a7
[0x3a7:0x3ae]
---
Predecessors: [0x39c]
Successors: [0x757]
---
0x3a7 JUMPDEST
0x3a8 PUSH2 0x3af
0x3ab PUSH2 0x757
0x3ae JUMP
---
0x3a7: JUMPDEST 
0x3a8: V262 = 0x3af
0x3ab: V263 = 0x757
0x3ae: JUMP 0x757
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3af]
Exit stack: [V11, 0x3af]

================================

Block 0x3af
[0x3af:0x3c4]
---
Predecessors: [0x757]
Successors: []
---
0x3af JUMPDEST
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 DUP1
0x3b4 DUP3
0x3b5 DUP2
0x3b6 MSTORE
0x3b7 PUSH1 0x20
0x3b9 ADD
0x3ba SWAP2
0x3bb POP
0x3bc POP
0x3bd PUSH1 0x40
0x3bf MLOAD
0x3c0 DUP1
0x3c1 SWAP2
0x3c2 SUB
0x3c3 SWAP1
0x3c4 RETURN
---
0x3af: JUMPDEST 
0x3b0: V264 = 0x40
0x3b2: V265 = M[0x40]
0x3b6: M[V265] = V530
0x3b7: V266 = 0x20
0x3b9: V267 = ADD 0x20 V265
0x3bd: V268 = 0x40
0x3bf: V269 = M[0x40]
0x3c2: V270 = SUB V267 V269
0x3c4: RETURN V269 V270
---
Entry stack: [V11, 0x3af, V530]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3af]

================================

Block 0x3c5
[0x3c5:0x3cb]
---
Predecessors: [0xa4]
Successors: [0x3cc, 0x3d0]
---
0x3c5 JUMPDEST
0x3c6 CALLVALUE
0x3c7 ISZERO
0x3c8 PUSH2 0x3d0
0x3cb JUMPI
---
0x3c5: JUMPDEST 
0x3c6: V271 = CALLVALUE
0x3c7: V272 = ISZERO V271
0x3c8: V273 = 0x3d0
0x3cb: JUMPI 0x3d0 V272
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3cc
[0x3cc:0x3cf]
---
Predecessors: [0x3c5]
Successors: []
---
0x3cc PUSH1 0x0
0x3ce DUP1
0x3cf REVERT
---
0x3cc: V274 = 0x0
0x3cf: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3d0
[0x3d0:0x3d7]
---
Predecessors: [0x3c5]
Successors: [0x75d]
---
0x3d0 JUMPDEST
0x3d1 PUSH2 0x3d8
0x3d4 PUSH2 0x75d
0x3d7 JUMP
---
0x3d0: JUMPDEST 
0x3d1: V275 = 0x3d8
0x3d4: V276 = 0x75d
0x3d7: JUMP 0x75d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3d8]
Exit stack: [V11, 0x3d8]

================================

Block 0x3d8
[0x3d8:0x3e6]
---
Predecessors: [0x75d]
Successors: [0x3e7, 0x3e8]
---
0x3d8 JUMPDEST
0x3d9 PUSH1 0x40
0x3db MLOAD
0x3dc DUP1
0x3dd DUP3
0x3de PUSH1 0x2
0x3e0 DUP2
0x3e1 GT
0x3e2 ISZERO
0x3e3 PUSH2 0x3e8
0x3e6 JUMPI
---
0x3d8: JUMPDEST 
0x3d9: V277 = 0x40
0x3db: V278 = M[0x40]
0x3de: V279 = 0x2
0x3e1: V280 = GT V538 0x2
0x3e2: V281 = ISZERO V280
0x3e3: V282 = 0x3e8
0x3e6: JUMPI 0x3e8 V281
---
Entry stack: [V11, 0x3d8, V538]
Stack pops: 1
Stack additions: [S0, V278, V278, S0]
Exit stack: [V11, 0x3d8, V538, V278, V278, V538]

================================

Block 0x3e7
[0x3e7:0x3e7]
---
Predecessors: [0x3d8]
Successors: []
---
0x3e7 INVALID
---
0x3e7: INVALID 
---
Entry stack: [V11, 0x3d8, V538, V278, V278, V538]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3d8, V538, V278, V278, V538]

================================

Block 0x3e8
[0x3e8:0x3fb]
---
Predecessors: [0x3d8]
Successors: []
---
0x3e8 JUMPDEST
0x3e9 PUSH1 0xff
0x3eb AND
0x3ec DUP2
0x3ed MSTORE
0x3ee PUSH1 0x20
0x3f0 ADD
0x3f1 SWAP2
0x3f2 POP
0x3f3 POP
0x3f4 PUSH1 0x40
0x3f6 MLOAD
0x3f7 DUP1
0x3f8 SWAP2
0x3f9 SUB
0x3fa SWAP1
0x3fb RETURN
---
0x3e8: JUMPDEST 
0x3e9: V283 = 0xff
0x3eb: V284 = AND 0xff V538
0x3ed: M[V278] = V284
0x3ee: V285 = 0x20
0x3f0: V286 = ADD 0x20 V278
0x3f4: V287 = 0x40
0x3f6: V288 = M[0x40]
0x3f9: V289 = SUB V286 V288
0x3fb: RETURN V288 V289
---
Entry stack: [V11, 0x3d8, V538, V278, V278, V538]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x3d8]

================================

Block 0x3fc
[0x3fc:0x402]
---
Predecessors: [0xaf]
Successors: [0x403, 0x407]
---
0x3fc JUMPDEST
0x3fd CALLVALUE
0x3fe ISZERO
0x3ff PUSH2 0x407
0x402 JUMPI
---
0x3fc: JUMPDEST 
0x3fd: V290 = CALLVALUE
0x3fe: V291 = ISZERO V290
0x3ff: V292 = 0x407
0x402: JUMPI 0x407 V291
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x403
[0x403:0x406]
---
Predecessors: [0x3fc]
Successors: []
---
0x403 PUSH1 0x0
0x405 DUP1
0x406 REVERT
---
0x403: V293 = 0x0
0x406: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x407
[0x407:0x40e]
---
Predecessors: [0x3fc]
Successors: [0x770]
---
0x407 JUMPDEST
0x408 PUSH2 0x40f
0x40b PUSH2 0x770
0x40e JUMP
---
0x407: JUMPDEST 
0x408: V294 = 0x40f
0x40b: V295 = 0x770
0x40e: JUMP 0x770
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x40f]
Exit stack: [V11, 0x40f]

================================

Block 0x40f
[0x40f:0x424]
---
Predecessors: [0x770]
Successors: []
---
0x40f JUMPDEST
0x410 PUSH1 0x40
0x412 MLOAD
0x413 DUP1
0x414 DUP3
0x415 DUP2
0x416 MSTORE
0x417 PUSH1 0x20
0x419 ADD
0x41a SWAP2
0x41b POP
0x41c POP
0x41d PUSH1 0x40
0x41f MLOAD
0x420 DUP1
0x421 SWAP2
0x422 SUB
0x423 SWAP1
0x424 RETURN
---
0x40f: JUMPDEST 
0x410: V296 = 0x40
0x412: V297 = M[0x40]
0x416: M[V297] = V540
0x417: V298 = 0x20
0x419: V299 = ADD 0x20 V297
0x41d: V300 = 0x40
0x41f: V301 = M[0x40]
0x422: V302 = SUB V299 V301
0x424: RETURN V301 V302
---
Entry stack: [V11, 0x40f, V540]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x40f]

================================

Block 0x425
[0x425:0x435]
---
Predecessors: [0x107]
Successors: [0x436, 0x460]
---
0x425 JUMPDEST
0x426 PUSH1 0x0
0x428 PUSH1 0x1
0x42a SLOAD
0x42b PUSH1 0x2
0x42d SLOAD
0x42e LT
0x42f ISZERO
0x430 DUP1
0x431 ISZERO
0x432 PUSH2 0x460
0x435 JUMPI
---
0x425: JUMPDEST 
0x426: V303 = 0x0
0x428: V304 = 0x1
0x42a: V305 = S[0x1]
0x42b: V306 = 0x2
0x42d: V307 = S[0x2]
0x42e: V308 = LT V307 V305
0x42f: V309 = ISZERO V308
0x431: V310 = ISZERO V309
0x432: V311 = 0x460
0x435: JUMPI 0x460 V310
---
Entry stack: [V11, 0x0, 0x10f]
Stack pops: 0
Stack additions: [0x0, V309]
Exit stack: [V11, 0x0, 0x10f, 0x0, V309]

================================

Block 0x436
[0x436:0x440]
---
Predecessors: [0x425]
Successors: [0x441, 0x442]
---
0x436 POP
0x437 PUSH1 0x2
0x439 DUP1
0x43a DUP2
0x43b GT
0x43c ISZERO
0x43d PUSH2 0x442
0x440 JUMPI
---
0x437: V312 = 0x2
0x43b: V313 = GT 0x2 0x2
0x43c: V314 = ISZERO 0x0
0x43d: V315 = 0x442
0x440: JUMPI 0x442 0x1
---
Entry stack: [V11, 0x0, 0x10f, 0x0, V309]
Stack pops: 1
Stack additions: [0x2]
Exit stack: [V11, 0x0, 0x10f, 0x0, 0x2]

================================

Block 0x441
[0x441:0x441]
---
Predecessors: [0x436]
Successors: []
---
0x441 INVALID
---
0x441: INVALID 
---
Entry stack: [V11, 0x0, 0x10f, 0x0, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x10f, 0x0, 0x2]

================================

Block 0x442
[0x442:0x45b]
---
Predecessors: [0x436]
Successors: [0x45c, 0x45d]
---
0x442 JUMPDEST
0x443 PUSH1 0x8
0x445 PUSH1 0x0
0x447 SWAP1
0x448 SLOAD
0x449 SWAP1
0x44a PUSH2 0x100
0x44d EXP
0x44e SWAP1
0x44f DIV
0x450 PUSH1 0xff
0x452 AND
0x453 PUSH1 0x2
0x455 DUP2
0x456 GT
0x457 ISZERO
0x458 PUSH2 0x45d
0x45b JUMPI
---
0x442: JUMPDEST 
0x443: V316 = 0x8
0x445: V317 = 0x0
0x448: V318 = S[0x8]
0x44a: V319 = 0x100
0x44d: V320 = EXP 0x100 0x0
0x44f: V321 = DIV V318 0x1
0x450: V322 = 0xff
0x452: V323 = AND 0xff V321
0x453: V324 = 0x2
0x456: V325 = GT V323 0x2
0x457: V326 = ISZERO V325
0x458: V327 = 0x45d
0x45b: JUMPI 0x45d V326
---
Entry stack: [V11, 0x0, 0x10f, 0x0, 0x2]
Stack pops: 0
Stack additions: [V323]
Exit stack: [V11, 0x0, 0x10f, 0x0, 0x2, V323]

================================

Block 0x45c
[0x45c:0x45c]
---
Predecessors: [0x442]
Successors: []
---
0x45c INVALID
---
0x45c: INVALID 
---
Entry stack: [V11, 0x0, 0x10f, 0x0, 0x2, V323]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x10f, 0x0, 0x2, V323]

================================

Block 0x45d
[0x45d:0x45f]
---
Predecessors: [0x442]
Successors: [0x460]
---
0x45d JUMPDEST
0x45e EQ
0x45f ISZERO
---
0x45d: JUMPDEST 
0x45e: V328 = EQ V323 0x2
0x45f: V329 = ISZERO V328
---
Entry stack: [V11, 0x0, 0x10f, 0x0, 0x2, V323]
Stack pops: 2
Stack additions: [V329]
Exit stack: [V11, 0x0, 0x10f, 0x0, V329]

================================

Block 0x460
[0x460:0x465]
---
Predecessors: [0x425, 0x45d]
Successors: [0x466, 0x4c9]
---
0x460 JUMPDEST
0x461 ISZERO
0x462 PUSH2 0x4c9
0x465 JUMPI
---
0x460: JUMPDEST 
0x461: V330 = ISZERO S0
0x462: V331 = 0x4c9
0x465: JUMPI 0x4c9 V330
---
Entry stack: [V11, 0x0, 0x10f, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x0, 0x10f, 0x0]

================================

Block 0x466
[0x466:0x482]
---
Predecessors: [0x460]
Successors: [0x483, 0x484]
---
0x466 PUSH1 0x2
0x468 PUSH1 0x8
0x46a PUSH1 0x0
0x46c PUSH2 0x100
0x46f EXP
0x470 DUP2
0x471 SLOAD
0x472 DUP2
0x473 PUSH1 0xff
0x475 MUL
0x476 NOT
0x477 AND
0x478 SWAP1
0x479 DUP4
0x47a PUSH1 0x2
0x47c DUP2
0x47d GT
0x47e ISZERO
0x47f PUSH2 0x484
0x482 JUMPI
---
0x466: V332 = 0x2
0x468: V333 = 0x8
0x46a: V334 = 0x0
0x46c: V335 = 0x100
0x46f: V336 = EXP 0x100 0x0
0x471: V337 = S[0x8]
0x473: V338 = 0xff
0x475: V339 = MUL 0xff 0x1
0x476: V340 = NOT 0xff
0x477: V341 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V337
0x47a: V342 = 0x2
0x47d: V343 = GT 0x2 0x2
0x47e: V344 = ISZERO 0x0
0x47f: V345 = 0x484
0x482: JUMPI 0x484 0x1
---
Entry stack: [V11, 0x0, 0x10f, 0x0]
Stack pops: 0
Stack additions: [0x2, 0x8, V341, 0x1, 0x2]
Exit stack: [V11, 0x0, 0x10f, 0x0, 0x2, 0x8, V341, 0x1, 0x2]

================================

Block 0x483
[0x483:0x483]
---
Predecessors: [0x466]
Successors: []
---
0x483 INVALID
---
0x483: INVALID 
---
Entry stack: [V11, 0x0, 0x10f, 0x0, 0x2, 0x8, V341, 0x1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x10f, 0x0, 0x2, 0x8, V341, 0x1, 0x2]

================================

Block 0x484
[0x484:0x4c8]
---
Predecessors: [0x466]
Successors: [0x5ef]
---
0x484 JUMPDEST
0x485 MUL
0x486 OR
0x487 SWAP1
0x488 SSTORE
0x489 POP
0x48a PUSH32 0x9145a7fd7de2aa5b50a289cf5dd2e2d100aa067911e49855b88f94b5a196f04b
0x4ab NUMBER
0x4ac PUSH1 0x40
0x4ae MLOAD
0x4af DUP1
0x4b0 DUP3
0x4b1 DUP2
0x4b2 MSTORE
0x4b3 PUSH1 0x20
0x4b5 ADD
0x4b6 SWAP2
0x4b7 POP
0x4b8 POP
0x4b9 PUSH1 0x40
0x4bb MLOAD
0x4bc DUP1
0x4bd SWAP2
0x4be SUB
0x4bf SWAP1
0x4c0 LOG1
0x4c1 PUSH1 0x1
0x4c3 SWAP1
0x4c4 POP
0x4c5 PUSH2 0x5ef
0x4c8 JUMP
---
0x484: JUMPDEST 
0x485: V346 = MUL 0x2 0x1
0x486: V347 = OR 0x2 V341
0x488: S[0x8] = V347
0x48a: V348 = 0x9145a7fd7de2aa5b50a289cf5dd2e2d100aa067911e49855b88f94b5a196f04b
0x4ab: V349 = NUMBER
0x4ac: V350 = 0x40
0x4ae: V351 = M[0x40]
0x4b2: M[V351] = V349
0x4b3: V352 = 0x20
0x4b5: V353 = ADD 0x20 V351
0x4b9: V354 = 0x40
0x4bb: V355 = M[0x40]
0x4be: V356 = SUB V353 V355
0x4c0: LOG V355 V356 0x9145a7fd7de2aa5b50a289cf5dd2e2d100aa067911e49855b88f94b5a196f04b
0x4c1: V357 = 0x1
0x4c5: V358 = 0x5ef
0x4c8: JUMP 0x5ef
---
Entry stack: [V11, 0x0, 0x10f, 0x0, 0x2, 0x8, V341, 0x1, 0x2]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V11, 0x0, 0x10f, 0x1]

================================

Block 0x4c9
[0x4c9:0x4d6]
---
Predecessors: [0x460]
Successors: [0x4d7, 0x53a]
---
0x4c9 JUMPDEST
0x4ca PUSH4 0x59fb4100
0x4cf TIMESTAMP
0x4d0 LT
0x4d1 ISZERO
0x4d2 ISZERO
0x4d3 PUSH2 0x53a
0x4d6 JUMPI
---
0x4c9: JUMPDEST 
0x4ca: V359 = 0x59fb4100
0x4cf: V360 = TIMESTAMP
0x4d0: V361 = LT V360 0x59fb4100
0x4d1: V362 = ISZERO V361
0x4d2: V363 = ISZERO V362
0x4d3: V364 = 0x53a
0x4d6: JUMPI 0x53a V363
---
Entry stack: [V11, 0x0, 0x10f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x10f, 0x0]

================================

Block 0x4d7
[0x4d7:0x4f3]
---
Predecessors: [0x4c9]
Successors: [0x4f4, 0x4f5]
---
0x4d7 PUSH1 0x2
0x4d9 PUSH1 0x8
0x4db PUSH1 0x0
0x4dd PUSH2 0x100
0x4e0 EXP
0x4e1 DUP2
0x4e2 SLOAD
0x4e3 DUP2
0x4e4 PUSH1 0xff
0x4e6 MUL
0x4e7 NOT
0x4e8 AND
0x4e9 SWAP1
0x4ea DUP4
0x4eb PUSH1 0x2
0x4ed DUP2
0x4ee GT
0x4ef ISZERO
0x4f0 PUSH2 0x4f5
0x4f3 JUMPI
---
0x4d7: V365 = 0x2
0x4d9: V366 = 0x8
0x4db: V367 = 0x0
0x4dd: V368 = 0x100
0x4e0: V369 = EXP 0x100 0x0
0x4e2: V370 = S[0x8]
0x4e4: V371 = 0xff
0x4e6: V372 = MUL 0xff 0x1
0x4e7: V373 = NOT 0xff
0x4e8: V374 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V370
0x4eb: V375 = 0x2
0x4ee: V376 = GT 0x2 0x2
0x4ef: V377 = ISZERO 0x0
0x4f0: V378 = 0x4f5
0x4f3: JUMPI 0x4f5 0x1
---
Entry stack: [V11, 0x0, 0x10f, 0x0]
Stack pops: 0
Stack additions: [0x2, 0x8, V374, 0x1, 0x2]
Exit stack: [V11, 0x0, 0x10f, 0x0, 0x2, 0x8, V374, 0x1, 0x2]

================================

Block 0x4f4
[0x4f4:0x4f4]
---
Predecessors: [0x4d7]
Successors: []
---
0x4f4 INVALID
---
0x4f4: INVALID 
---
Entry stack: [V11, 0x0, 0x10f, 0x0, 0x2, 0x8, V374, 0x1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x10f, 0x0, 0x2, 0x8, V374, 0x1, 0x2]

================================

Block 0x4f5
[0x4f5:0x539]
---
Predecessors: [0x4d7]
Successors: [0x5ef]
---
0x4f5 JUMPDEST
0x4f6 MUL
0x4f7 OR
0x4f8 SWAP1
0x4f9 SSTORE
0x4fa POP
0x4fb PUSH32 0x9145a7fd7de2aa5b50a289cf5dd2e2d100aa067911e49855b88f94b5a196f04b
0x51c NUMBER
0x51d PUSH1 0x40
0x51f MLOAD
0x520 DUP1
0x521 DUP3
0x522 DUP2
0x523 MSTORE
0x524 PUSH1 0x20
0x526 ADD
0x527 SWAP2
0x528 POP
0x529 POP
0x52a PUSH1 0x40
0x52c MLOAD
0x52d DUP1
0x52e SWAP2
0x52f SUB
0x530 SWAP1
0x531 LOG1
0x532 PUSH1 0x1
0x534 SWAP1
0x535 POP
0x536 PUSH2 0x5ef
0x539 JUMP
---
0x4f5: JUMPDEST 
0x4f6: V379 = MUL 0x2 0x1
0x4f7: V380 = OR 0x2 V374
0x4f9: S[0x8] = V380
0x4fb: V381 = 0x9145a7fd7de2aa5b50a289cf5dd2e2d100aa067911e49855b88f94b5a196f04b
0x51c: V382 = NUMBER
0x51d: V383 = 0x40
0x51f: V384 = M[0x40]
0x523: M[V384] = V382
0x524: V385 = 0x20
0x526: V386 = ADD 0x20 V384
0x52a: V387 = 0x40
0x52c: V388 = M[0x40]
0x52f: V389 = SUB V386 V388
0x531: LOG V388 V389 0x9145a7fd7de2aa5b50a289cf5dd2e2d100aa067911e49855b88f94b5a196f04b
0x532: V390 = 0x1
0x536: V391 = 0x5ef
0x539: JUMP 0x5ef
---
Entry stack: [V11, 0x0, 0x10f, 0x0, 0x2, 0x8, V374, 0x1, 0x2]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V11, 0x0, 0x10f, 0x1]

================================

Block 0x53a
[0x53a:0x548]
---
Predecessors: [0x4c9]
Successors: [0x549, 0x551]
---
0x53a JUMPDEST
0x53b PUSH4 0x59f769d1
0x540 TIMESTAMP
0x541 LT
0x542 ISZERO
0x543 DUP1
0x544 ISZERO
0x545 PUSH2 0x551
0x548 JUMPI
---
0x53a: JUMPDEST 
0x53b: V392 = 0x59f769d1
0x540: V393 = TIMESTAMP
0x541: V394 = LT V393 0x59f769d1
0x542: V395 = ISZERO V394
0x544: V396 = ISZERO V395
0x545: V397 = 0x551
0x548: JUMPI 0x551 V396
---
Entry stack: [V11, 0x0, 0x10f, 0x0]
Stack pops: 0
Stack additions: [V395]
Exit stack: [V11, 0x0, 0x10f, 0x0, V395]

================================

Block 0x549
[0x549:0x550]
---
Predecessors: [0x53a]
Successors: [0x551]
---
0x549 POP
0x54a PUSH4 0x59fb4100
0x54f TIMESTAMP
0x550 LT
---
0x54a: V398 = 0x59fb4100
0x54f: V399 = TIMESTAMP
0x550: V400 = LT V399 0x59fb4100
---
Entry stack: [V11, 0x0, 0x10f, 0x0, V395]
Stack pops: 1
Stack additions: [V400]
Exit stack: [V11, 0x0, 0x10f, 0x0, V400]

================================

Block 0x551
[0x551:0x556]
---
Predecessors: [0x53a, 0x549]
Successors: [0x557, 0x5ea]
---
0x551 JUMPDEST
0x552 ISZERO
0x553 PUSH2 0x5ea
0x556 JUMPI
---
0x551: JUMPDEST 
0x552: V401 = ISZERO S0
0x553: V402 = 0x5ea
0x556: JUMPI 0x5ea V401
---
Entry stack: [V11, 0x0, 0x10f, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x0, 0x10f, 0x0]

================================

Block 0x557
[0x557:0x561]
---
Predecessors: [0x551]
Successors: [0x562, 0x563]
---
0x557 PUSH1 0x1
0x559 PUSH1 0x2
0x55b DUP2
0x55c GT
0x55d ISZERO
0x55e PUSH2 0x563
0x561 JUMPI
---
0x557: V403 = 0x1
0x559: V404 = 0x2
0x55c: V405 = GT 0x1 0x2
0x55d: V406 = ISZERO 0x0
0x55e: V407 = 0x563
0x561: JUMPI 0x563 0x1
---
Entry stack: [V11, 0x0, 0x10f, 0x0]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V11, 0x0, 0x10f, 0x0, 0x1]

================================

Block 0x562
[0x562:0x562]
---
Predecessors: [0x557]
Successors: []
---
0x562 INVALID
---
0x562: INVALID 
---
Entry stack: [V11, 0x0, 0x10f, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x10f, 0x0, 0x1]

================================

Block 0x563
[0x563:0x57c]
---
Predecessors: [0x557]
Successors: [0x57d, 0x57e]
---
0x563 JUMPDEST
0x564 PUSH1 0x8
0x566 PUSH1 0x0
0x568 SWAP1
0x569 SLOAD
0x56a SWAP1
0x56b PUSH2 0x100
0x56e EXP
0x56f SWAP1
0x570 DIV
0x571 PUSH1 0xff
0x573 AND
0x574 PUSH1 0x2
0x576 DUP2
0x577 GT
0x578 ISZERO
0x579 PUSH2 0x57e
0x57c JUMPI
---
0x563: JUMPDEST 
0x564: V408 = 0x8
0x566: V409 = 0x0
0x569: V410 = S[0x8]
0x56b: V411 = 0x100
0x56e: V412 = EXP 0x100 0x0
0x570: V413 = DIV V410 0x1
0x571: V414 = 0xff
0x573: V415 = AND 0xff V413
0x574: V416 = 0x2
0x577: V417 = GT V415 0x2
0x578: V418 = ISZERO V417
0x579: V419 = 0x57e
0x57c: JUMPI 0x57e V418
---
Entry stack: [V11, 0x0, 0x10f, 0x0, 0x1]
Stack pops: 0
Stack additions: [V415]
Exit stack: [V11, 0x0, 0x10f, 0x0, 0x1, V415]

================================

Block 0x57d
[0x57d:0x57d]
---
Predecessors: [0x563]
Successors: []
---
0x57d INVALID
---
0x57d: INVALID 
---
Entry stack: [V11, 0x0, 0x10f, 0x0, 0x1, V415]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x10f, 0x0, 0x1, V415]

================================

Block 0x57e
[0x57e:0x585]
---
Predecessors: [0x563]
Successors: [0x586, 0x5e9]
---
0x57e JUMPDEST
0x57f EQ
0x580 ISZERO
0x581 ISZERO
0x582 PUSH2 0x5e9
0x585 JUMPI
---
0x57e: JUMPDEST 
0x57f: V420 = EQ V415 0x1
0x580: V421 = ISZERO V420
0x581: V422 = ISZERO V421
0x582: V423 = 0x5e9
0x585: JUMPI 0x5e9 V422
---
Entry stack: [V11, 0x0, 0x10f, 0x0, 0x1, V415]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x0, 0x10f, 0x0]

================================

Block 0x586
[0x586:0x5a2]
---
Predecessors: [0x57e]
Successors: [0x5a3, 0x5a4]
---
0x586 PUSH1 0x1
0x588 PUSH1 0x8
0x58a PUSH1 0x0
0x58c PUSH2 0x100
0x58f EXP
0x590 DUP2
0x591 SLOAD
0x592 DUP2
0x593 PUSH1 0xff
0x595 MUL
0x596 NOT
0x597 AND
0x598 SWAP1
0x599 DUP4
0x59a PUSH1 0x2
0x59c DUP2
0x59d GT
0x59e ISZERO
0x59f PUSH2 0x5a4
0x5a2 JUMPI
---
0x586: V424 = 0x1
0x588: V425 = 0x8
0x58a: V426 = 0x0
0x58c: V427 = 0x100
0x58f: V428 = EXP 0x100 0x0
0x591: V429 = S[0x8]
0x593: V430 = 0xff
0x595: V431 = MUL 0xff 0x1
0x596: V432 = NOT 0xff
0x597: V433 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V429
0x59a: V434 = 0x2
0x59d: V435 = GT 0x1 0x2
0x59e: V436 = ISZERO 0x0
0x59f: V437 = 0x5a4
0x5a2: JUMPI 0x5a4 0x1
---
Entry stack: [V11, 0x0, 0x10f, 0x0]
Stack pops: 0
Stack additions: [0x1, 0x8, V433, 0x1, 0x1]
Exit stack: [V11, 0x0, 0x10f, 0x0, 0x1, 0x8, V433, 0x1, 0x1]

================================

Block 0x5a3
[0x5a3:0x5a3]
---
Predecessors: [0x586]
Successors: []
---
0x5a3 INVALID
---
0x5a3: INVALID 
---
Entry stack: [V11, 0x0, 0x10f, 0x0, 0x1, 0x8, V433, 0x1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x10f, 0x0, 0x1, 0x8, V433, 0x1, 0x1]

================================

Block 0x5a4
[0x5a4:0x5e8]
---
Predecessors: [0x586]
Successors: [0x5ef]
---
0x5a4 JUMPDEST
0x5a5 MUL
0x5a6 OR
0x5a7 SWAP1
0x5a8 SSTORE
0x5a9 POP
0x5aa PUSH32 0x712173de1d50109191e0d0671c67415bf3d44508558069796106054c5600d501
0x5cb NUMBER
0x5cc PUSH1 0x40
0x5ce MLOAD
0x5cf DUP1
0x5d0 DUP3
0x5d1 DUP2
0x5d2 MSTORE
0x5d3 PUSH1 0x20
0x5d5 ADD
0x5d6 SWAP2
0x5d7 POP
0x5d8 POP
0x5d9 PUSH1 0x40
0x5db MLOAD
0x5dc DUP1
0x5dd SWAP2
0x5de SUB
0x5df SWAP1
0x5e0 LOG1
0x5e1 PUSH1 0x1
0x5e3 SWAP1
0x5e4 POP
0x5e5 PUSH2 0x5ef
0x5e8 JUMP
---
0x5a4: JUMPDEST 
0x5a5: V438 = MUL 0x1 0x1
0x5a6: V439 = OR 0x1 V433
0x5a8: S[0x8] = V439
0x5aa: V440 = 0x712173de1d50109191e0d0671c67415bf3d44508558069796106054c5600d501
0x5cb: V441 = NUMBER
0x5cc: V442 = 0x40
0x5ce: V443 = M[0x40]
0x5d2: M[V443] = V441
0x5d3: V444 = 0x20
0x5d5: V445 = ADD 0x20 V443
0x5d9: V446 = 0x40
0x5db: V447 = M[0x40]
0x5de: V448 = SUB V445 V447
0x5e0: LOG V447 V448 0x712173de1d50109191e0d0671c67415bf3d44508558069796106054c5600d501
0x5e1: V449 = 0x1
0x5e5: V450 = 0x5ef
0x5e8: JUMP 0x5ef
---
Entry stack: [V11, 0x0, 0x10f, 0x0, 0x1, 0x8, V433, 0x1, 0x1]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V11, 0x0, 0x10f, 0x1]

================================

Block 0x5e9
[0x5e9:0x5e9]
---
Predecessors: [0x57e]
Successors: [0x5ea]
---
0x5e9 JUMPDEST
---
0x5e9: JUMPDEST 
---
Entry stack: [V11, 0x0, 0x10f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x10f, 0x0]

================================

Block 0x5ea
[0x5ea:0x5ee]
---
Predecessors: [0x551, 0x5e9]
Successors: [0x5ef]
---
0x5ea JUMPDEST
0x5eb PUSH1 0x0
0x5ed SWAP1
0x5ee POP
---
0x5ea: JUMPDEST 
0x5eb: V451 = 0x0
---
Entry stack: [V11, 0x0, 0x10f, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x0, 0x10f, 0x0]

================================

Block 0x5ef
[0x5ef:0x5f1]
---
Predecessors: [0x484, 0x4f5, 0x5a4, 0x5ea]
Successors: [0x10f]
---
0x5ef JUMPDEST
0x5f0 SWAP1
0x5f1 JUMP
---
0x5ef: JUMPDEST 
0x5f1: JUMP 0x10f
---
Entry stack: [V11, 0x0, 0x10f, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x0, {0x0, 0x1}]

================================

Block 0x5f2
[0x5f2:0x5f8]
---
Predecessors: [0x1b6]
Successors: [0x5f9, 0x63d]
---
0x5f2 JUMPDEST
0x5f3 DUP1
0x5f4 ISZERO
0x5f5 PUSH2 0x63d
0x5f8 JUMPI
---
0x5f2: JUMPDEST 
0x5f4: V452 = ISZERO {0x0, 0x1}
0x5f5: V453 = 0x63d
0x5f8: JUMPI 0x63d V452
---
Entry stack: [V11, {0x0, 0x1}, 0x1bf, {0x0, 0x1}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}, 0x1bf, {0x0, 0x1}]

================================

Block 0x5f9
[0x5f9:0x633]
---
Predecessors: [0x5f2]
Successors: [0x634, 0x638]
---
0x5f9 CALLER
0x5fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60f AND
0x610 PUSH2 0x8fc
0x613 CALLVALUE
0x614 SWAP1
0x615 DUP2
0x616 ISZERO
0x617 MUL
0x618 SWAP1
0x619 PUSH1 0x40
0x61b MLOAD
0x61c PUSH1 0x0
0x61e PUSH1 0x40
0x620 MLOAD
0x621 DUP1
0x622 DUP4
0x623 SUB
0x624 DUP2
0x625 DUP6
0x626 DUP9
0x627 DUP9
0x628 CALL
0x629 SWAP4
0x62a POP
0x62b POP
0x62c POP
0x62d POP
0x62e ISZERO
0x62f ISZERO
0x630 PUSH2 0x638
0x633 JUMPI
---
0x5f9: V454 = CALLER
0x5fa: V455 = 0xffffffffffffffffffffffffffffffffffffffff
0x60f: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x610: V457 = 0x8fc
0x613: V458 = CALLVALUE
0x616: V459 = ISZERO V458
0x617: V460 = MUL V459 0x8fc
0x619: V461 = 0x40
0x61b: V462 = M[0x40]
0x61c: V463 = 0x0
0x61e: V464 = 0x40
0x620: V465 = M[0x40]
0x623: V466 = SUB V462 V465
0x628: V467 = CALL V460 V456 V458 V465 V466 V465 0x0
0x62e: V468 = ISZERO V467
0x62f: V469 = ISZERO V468
0x630: V470 = 0x638
0x633: JUMPI 0x638 V469
---
Entry stack: [V11, {0x0, 0x1}, 0x1bf, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x0, 0x1}, 0x1bf, {0x0, 0x1}]

================================

Block 0x634
[0x634:0x637]
---
Predecessors: [0x5f9]
Successors: []
---
0x634 PUSH1 0x0
0x636 DUP1
0x637 REVERT
---
0x634: V471 = 0x0
0x637: REVERT 0x0 0x0
---
Entry stack: [V11, {0x0, 0x1}, 0x1bf, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x0, 0x1}, 0x1bf, {0x0, 0x1}]

================================

Block 0x638
[0x638:0x63c]
---
Predecessors: [0x5f9]
Successors: [0x642]
---
0x638 JUMPDEST
0x639 PUSH2 0x642
0x63c JUMP
---
0x638: JUMPDEST 
0x639: V472 = 0x642
0x63c: JUMP 0x642
---
Entry stack: [V11, {0x0, 0x1}, 0x1bf, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x0, 0x1}, 0x1bf, {0x0, 0x1}]

================================

Block 0x63d
[0x63d:0x641]
---
Predecessors: [0x5f2]
Successors: []
---
0x63d JUMPDEST
0x63e PUSH1 0x0
0x640 DUP1
0x641 REVERT
---
0x63d: JUMPDEST 
0x63e: V473 = 0x0
0x641: REVERT 0x0 0x0
---
Entry stack: [V11, {0x0, 0x1}, 0x1bf, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x0, 0x1}, 0x1bf, {0x0, 0x1}]

================================

Block 0x642
[0x642:0x644]
---
Predecessors: [0x638]
Successors: [0x1bf]
---
0x642 JUMPDEST
0x643 POP
0x644 JUMP
---
0x642: JUMPDEST 
0x644: JUMP 0x1bf
---
Entry stack: [V11, {0x0, 0x1}, 0x1bf, {0x0, 0x1}]
Stack pops: 2
Stack additions: []
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x645
[0x645:0x69b]
---
Predecessors: [0x1ce]
Successors: [0x69c, 0x6a0]
---
0x645 JUMPDEST
0x646 PUSH1 0x0
0x648 DUP1
0x649 SWAP1
0x64a SLOAD
0x64b SWAP1
0x64c PUSH2 0x100
0x64f EXP
0x650 SWAP1
0x651 DIV
0x652 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x667 AND
0x668 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67d AND
0x67e CALLER
0x67f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x694 AND
0x695 EQ
0x696 ISZERO
0x697 ISZERO
0x698 PUSH2 0x6a0
0x69b JUMPI
---
0x645: JUMPDEST 
0x646: V474 = 0x0
0x64a: V475 = S[0x0]
0x64c: V476 = 0x100
0x64f: V477 = EXP 0x100 0x0
0x651: V478 = DIV V475 0x1
0x652: V479 = 0xffffffffffffffffffffffffffffffffffffffff
0x667: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff V478
0x668: V481 = 0xffffffffffffffffffffffffffffffffffffffff
0x67d: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x67e: V483 = CALLER
0x67f: V484 = 0xffffffffffffffffffffffffffffffffffffffff
0x694: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x695: V486 = EQ V485 V482
0x696: V487 = ISZERO V486
0x697: V488 = ISZERO V487
0x698: V489 = 0x6a0
0x69b: JUMPI 0x6a0 V488
---
Entry stack: [V11, 0x1fa, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fa, V142]

================================

Block 0x69c
[0x69c:0x69f]
---
Predecessors: [0x645]
Successors: []
---
0x69c PUSH1 0x0
0x69e DUP1
0x69f REVERT
---
0x69c: V490 = 0x0
0x69f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1fa, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fa, V142]

================================

Block 0x6a0
[0x6a0:0x6e3]
---
Predecessors: [0x645]
Successors: [0x1fa]
---
0x6a0 JUMPDEST
0x6a1 DUP1
0x6a2 PUSH1 0x3
0x6a4 PUSH1 0x0
0x6a6 PUSH2 0x100
0x6a9 EXP
0x6aa DUP2
0x6ab SLOAD
0x6ac DUP2
0x6ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c2 MUL
0x6c3 NOT
0x6c4 AND
0x6c5 SWAP1
0x6c6 DUP4
0x6c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6dc AND
0x6dd MUL
0x6de OR
0x6df SWAP1
0x6e0 SSTORE
0x6e1 POP
0x6e2 POP
0x6e3 JUMP
---
0x6a0: JUMPDEST 
0x6a2: V491 = 0x3
0x6a4: V492 = 0x0
0x6a6: V493 = 0x100
0x6a9: V494 = EXP 0x100 0x0
0x6ab: V495 = S[0x3]
0x6ad: V496 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c2: V497 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x6c3: V498 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6c4: V499 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V495
0x6c7: V500 = 0xffffffffffffffffffffffffffffffffffffffff
0x6dc: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x6dd: V502 = MUL V501 0x1
0x6de: V503 = OR V502 V499
0x6e0: S[0x3] = V503
0x6e3: JUMP 0x1fa
---
Entry stack: [V11, 0x1fa, V142]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e4
[0x6e4:0x6e9]
---
Predecessors: [0x207]
Successors: [0x20f]
---
0x6e4 JUMPDEST
0x6e5 PUSH1 0x1
0x6e7 SLOAD
0x6e8 DUP2
0x6e9 JUMP
---
0x6e4: JUMPDEST 
0x6e5: V504 = 0x1
0x6e7: V505 = S[0x1]
0x6e9: JUMP 0x20f
---
Entry stack: [V11, 0x20f]
Stack pops: 1
Stack additions: [S0, V505]
Exit stack: [V11, 0x20f, V505]

================================

Block 0x6ea
[0x6ea:0x6f1]
---
Predecessors: [0x230]
Successors: [0x238]
---
0x6ea JUMPDEST
0x6eb PUSH4 0x59fb4100
0x6f0 DUP2
0x6f1 JUMP
---
0x6ea: JUMPDEST 
0x6eb: V506 = 0x59fb4100
0x6f1: JUMP 0x238
---
Entry stack: [V11, 0x238]
Stack pops: 1
Stack additions: [S0, 0x59fb4100]
Exit stack: [V11, 0x238, 0x59fb4100]

================================

Block 0x6f2
[0x6f2:0x6f7]
---
Predecessors: [0x259]
Successors: [0x261]
---
0x6f2 JUMPDEST
0x6f3 PUSH1 0x5
0x6f5 SLOAD
0x6f6 DUP2
0x6f7 JUMP
---
0x6f2: JUMPDEST 
0x6f3: V507 = 0x5
0x6f5: V508 = S[0x5]
0x6f7: JUMP 0x261
---
Entry stack: [V11, 0x261]
Stack pops: 1
Stack additions: [S0, V508]
Exit stack: [V11, 0x261, V508]

================================

Block 0x6f8
[0x6f8:0x71d]
---
Predecessors: [0x282]
Successors: [0x28a]
---
0x6f8 JUMPDEST
0x6f9 PUSH1 0x3
0x6fb PUSH1 0x0
0x6fd SWAP1
0x6fe SLOAD
0x6ff SWAP1
0x700 PUSH2 0x100
0x703 EXP
0x704 SWAP1
0x705 DIV
0x706 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71b AND
0x71c DUP2
0x71d JUMP
---
0x6f8: JUMPDEST 
0x6f9: V509 = 0x3
0x6fb: V510 = 0x0
0x6fe: V511 = S[0x3]
0x700: V512 = 0x100
0x703: V513 = EXP 0x100 0x0
0x705: V514 = DIV V511 0x1
0x706: V515 = 0xffffffffffffffffffffffffffffffffffffffff
0x71b: V516 = AND 0xffffffffffffffffffffffffffffffffffffffff V514
0x71d: JUMP 0x28a
---
Entry stack: [V11, 0x28a]
Stack pops: 1
Stack additions: [S0, V516]
Exit stack: [V11, 0x28a, V516]

================================

Block 0x71e
[0x71e:0x723]
---
Predecessors: [0x2d7]
Successors: [0x2df]
---
0x71e JUMPDEST
0x71f PUSH1 0x7
0x721 SLOAD
0x722 DUP2
0x723 JUMP
---
0x71e: JUMPDEST 
0x71f: V517 = 0x7
0x721: V518 = S[0x7]
0x723: JUMP 0x2df
---
Entry stack: [V11, 0x2df]
Stack pops: 1
Stack additions: [S0, V518]
Exit stack: [V11, 0x2df, V518]

================================

Block 0x724
[0x724:0x748]
---
Predecessors: [0x300]
Successors: [0x308]
---
0x724 JUMPDEST
0x725 PUSH1 0x0
0x727 DUP1
0x728 SWAP1
0x729 SLOAD
0x72a SWAP1
0x72b PUSH2 0x100
0x72e EXP
0x72f SWAP1
0x730 DIV
0x731 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x746 AND
0x747 DUP2
0x748 JUMP
---
0x724: JUMPDEST 
0x725: V519 = 0x0
0x729: V520 = S[0x0]
0x72b: V521 = 0x100
0x72e: V522 = EXP 0x100 0x0
0x730: V523 = DIV V520 0x1
0x731: V524 = 0xffffffffffffffffffffffffffffffffffffffff
0x746: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V523
0x748: JUMP 0x308
---
Entry stack: [V11, 0x308]
Stack pops: 1
Stack additions: [S0, V525]
Exit stack: [V11, 0x308, V525]

================================

Block 0x749
[0x749:0x750]
---
Predecessors: [0x355]
Successors: [0x35d]
---
0x749 JUMPDEST
0x74a PUSH4 0x59f769d1
0x74f DUP2
0x750 JUMP
---
0x749: JUMPDEST 
0x74a: V526 = 0x59f769d1
0x750: JUMP 0x35d
---
Entry stack: [V11, 0x35d]
Stack pops: 1
Stack additions: [S0, 0x59f769d1]
Exit stack: [V11, 0x35d, 0x59f769d1]

================================

Block 0x751
[0x751:0x756]
---
Predecessors: [0x37e]
Successors: [0x386]
---
0x751 JUMPDEST
0x752 PUSH1 0x4
0x754 SLOAD
0x755 DUP2
0x756 JUMP
---
0x751: JUMPDEST 
0x752: V527 = 0x4
0x754: V528 = S[0x4]
0x756: JUMP 0x386
---
Entry stack: [V11, 0x386]
Stack pops: 1
Stack additions: [S0, V528]
Exit stack: [V11, 0x386, V528]

================================

Block 0x757
[0x757:0x75c]
---
Predecessors: [0x3a7]
Successors: [0x3af]
---
0x757 JUMPDEST
0x758 PUSH1 0x6
0x75a SLOAD
0x75b DUP2
0x75c JUMP
---
0x757: JUMPDEST 
0x758: V529 = 0x6
0x75a: V530 = S[0x6]
0x75c: JUMP 0x3af
---
Entry stack: [V11, 0x3af]
Stack pops: 1
Stack additions: [S0, V530]
Exit stack: [V11, 0x3af, V530]

================================

Block 0x75d
[0x75d:0x76f]
---
Predecessors: [0x3d0]
Successors: [0x3d8]
---
0x75d JUMPDEST
0x75e PUSH1 0x8
0x760 PUSH1 0x0
0x762 SWAP1
0x763 SLOAD
0x764 SWAP1
0x765 PUSH2 0x100
0x768 EXP
0x769 SWAP1
0x76a DIV
0x76b PUSH1 0xff
0x76d AND
0x76e DUP2
0x76f JUMP
---
0x75d: JUMPDEST 
0x75e: V531 = 0x8
0x760: V532 = 0x0
0x763: V533 = S[0x8]
0x765: V534 = 0x100
0x768: V535 = EXP 0x100 0x0
0x76a: V536 = DIV V533 0x1
0x76b: V537 = 0xff
0x76d: V538 = AND 0xff V536
0x76f: JUMP 0x3d8
---
Entry stack: [V11, 0x3d8]
Stack pops: 1
Stack additions: [S0, V538]
Exit stack: [V11, 0x3d8, V538]

================================

Block 0x770
[0x770:0x775]
---
Predecessors: [0x407]
Successors: [0x40f]
---
0x770 JUMPDEST
0x771 PUSH1 0x2
0x773 SLOAD
0x774 DUP2
0x775 JUMP
---
0x770: JUMPDEST 
0x771: V539 = 0x2
0x773: V540 = S[0x2]
0x775: JUMP 0x40f
---
Entry stack: [V11, 0x40f]
Stack pops: 1
Stack additions: [S0, V540]
Exit stack: [V11, 0x40f, V540]

================================

Block 0x776
[0x776:0x7a1]
---
Predecessors: []
Successors: []
---
0x776 STOP
0x777 LOG1
0x778 PUSH6 0x627a7a723058
0x77f SHA3
0x780 MISSING 0xbc
0x781 MISSING 0xd2
0x782 MISSING 0xbf
0x783 MISSING 0xd3
0x784 CALLCODE
0x785 MISSING 0xc3
0x786 ISZERO
0x787 CODECOPY
0x788 PUSH20 0x33a90c22b03660be5e772029a7c72ddbc6463ba
0x79d MISSING 0xd2
0x79e MISSING 0xef
0x79f DIFFICULTY
0x7a0 STOP
0x7a1 MISSING 0x29
---
0x776: STOP 
0x777: LOG S0 S1 S2
0x778: V541 = 0x627a7a723058
0x77f: V542 = SHA3 0x627a7a723058 S3
0x780: MISSING 0xbc
0x781: MISSING 0xd2
0x782: MISSING 0xbf
0x783: MISSING 0xd3
0x784: V543 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x785: MISSING 0xc3
0x786: V544 = ISZERO S0
0x787: CODECOPY V544 S1 S2
0x788: V545 = 0x33a90c22b03660be5e772029a7c72ddbc6463ba
0x79d: MISSING 0xd2
0x79e: MISSING 0xef
0x79f: V546 = DIFFICULTY
0x7a0: STOP 
0x7a1: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V542, V543, 0x33a90c22b03660be5e772029a7c72ddbc6463ba, V546]
Exit stack: []

================================

Function 0:
Public function signature: 0x5540534
Entry block: 0x1c3
Exit block: 0x1fa
Body: 0x1c3, 0x1ca, 0x1ce, 0x1fa, 0x645, 0x69c, 0x6a0

Function 1:
Public function signature: 0x23548b8b
Entry block: 0x1fc
Exit block: 0x20f
Body: 0x1fc, 0x203, 0x207, 0x20f, 0x6e4

Function 2:
Public function signature: 0x37ba682d
Entry block: 0x225
Exit block: 0x238
Body: 0x225, 0x22c, 0x230, 0x238, 0x6ea

Function 3:
Public function signature: 0x3e9491a2
Entry block: 0x24e
Exit block: 0x261
Body: 0x24e, 0x255, 0x259, 0x261, 0x6f2

Function 4:
Public function signature: 0x4783c35b
Entry block: 0x277
Exit block: 0x28a
Body: 0x277, 0x27e, 0x282, 0x28a, 0x6f8

Function 5:
Public function signature: 0x4a130ddc
Entry block: 0x2cc
Exit block: 0x2df
Body: 0x2cc, 0x2d3, 0x2d7, 0x2df, 0x71e

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x2f5
Exit block: 0x308
Body: 0x2f5, 0x2fc, 0x300, 0x308, 0x724

Function 7:
Public function signature: 0xc75363b6
Entry block: 0x34a
Exit block: 0x35d
Body: 0x34a, 0x351, 0x355, 0x35d, 0x749

Function 8:
Public function signature: 0xdfcc3a00
Entry block: 0x373
Exit block: 0x386
Body: 0x373, 0x37a, 0x37e, 0x386, 0x751

Function 9:
Public function signature: 0xe4c5676c
Entry block: 0x39c
Exit block: 0x3af
Body: 0x39c, 0x3a3, 0x3a7, 0x3af, 0x757

Function 10:
Public function signature: 0xe7bb5233
Entry block: 0x3c5
Exit block: 0x3e8
Body: 0x3c5, 0x3cc, 0x3d0, 0x3d8, 0x3e7, 0x3e8, 0x75d

Function 11:
Public function signature: 0xfddf0fc0
Entry block: 0x3fc
Exit block: 0x40f
Body: 0x3fc, 0x403, 0x407, 0x40f, 0x770

Function 12:
Public fallback function
Entry block: 0xba
Exit block: 0x1c0
Body: 0xba, 0xcf, 0xd3, 0xde, 0xdf, 0xf9, 0xfa, 0x103, 0x107, 0x10f, 0x11d, 0x11e, 0x138, 0x139, 0x140, 0x1ad, 0x1b1, 0x1b6, 0x1bf, 0x1c0, 0x425, 0x436, 0x441, 0x442, 0x45c, 0x45d, 0x460, 0x466, 0x483, 0x484, 0x4c9, 0x4d7, 0x4f4, 0x4f5, 0x53a, 0x549, 0x551, 0x557, 0x562, 0x563, 0x57d, 0x57e, 0x586, 0x5a3, 0x5a4, 0x5e9, 0x5ea, 0x5ef, 0x5f2, 0x5f9, 0x634, 0x638, 0x63d, 0x642

