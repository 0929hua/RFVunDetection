Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x9e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x9e
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x9e
0xa: JUMPI 0x9e V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x79f]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x27ebcf0e
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x79f
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x27ebcf0e
0x20: V14 = EQ V12 0x27ebcf0e
0x21: V15 = 0x79f
0x24: JUMPI 0x79f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x7ce]
---
0x25 DUP1
0x26 PUSH4 0x2faa2998
0x2b EQ
0x2c PUSH2 0x7ce
0x2f JUMPI
---
0x26: V16 = 0x2faa2998
0x2b: V17 = EQ 0x2faa2998 V12
0x2c: V18 = 0x7ce
0x2f: JUMPI 0x7ce V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x7f3]
---
0x30 DUP1
0x31 PUSH4 0x30eaa9b5
0x36 EQ
0x37 PUSH2 0x7f3
0x3a JUMPI
---
0x31: V19 = 0x30eaa9b5
0x36: V20 = EQ 0x30eaa9b5 V12
0x37: V21 = 0x7f3
0x3a: JUMPI 0x7f3 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x818]
---
0x3b DUP1
0x3c PUSH4 0x48330262
0x41 EQ
0x42 PUSH2 0x818
0x45 JUMPI
---
0x3c: V22 = 0x48330262
0x41: V23 = EQ 0x48330262 V12
0x42: V24 = 0x818
0x45: JUMPI 0x818 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x83d]
---
0x46 DUP1
0x47 PUSH4 0x497fb5b9
0x4c EQ
0x4d PUSH2 0x83d
0x50 JUMPI
---
0x47: V25 = 0x497fb5b9
0x4c: V26 = EQ 0x497fb5b9 V12
0x4d: V27 = 0x83d
0x50: JUMPI 0x83d V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x864]
---
0x51 DUP1
0x52 PUSH4 0x519ee19e
0x57 EQ
0x58 PUSH2 0x864
0x5b JUMPI
---
0x52: V28 = 0x519ee19e
0x57: V29 = EQ 0x519ee19e V12
0x58: V30 = 0x864
0x5b: JUMPI 0x864 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x889]
---
0x5c DUP1
0x5d PUSH4 0x8da5cb5b
0x62 EQ
0x63 PUSH2 0x889
0x66 JUMPI
---
0x5d: V31 = 0x8da5cb5b
0x62: V32 = EQ 0x8da5cb5b V12
0x63: V33 = 0x889
0x66: JUMPI 0x889 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x8b8]
---
0x67 DUP1
0x68 PUSH4 0x96c5406d
0x6d EQ
0x6e PUSH2 0x8b8
0x71 JUMPI
---
0x68: V34 = 0x96c5406d
0x6d: V35 = EQ 0x96c5406d V12
0x6e: V36 = 0x8b8
0x71: JUMPI 0x8b8 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x8dd]
---
0x72 DUP1
0x73 PUSH4 0xa035b1fe
0x78 EQ
0x79 PUSH2 0x8dd
0x7c JUMPI
---
0x73: V37 = 0xa035b1fe
0x78: V38 = EQ 0xa035b1fe V12
0x79: V39 = 0x8dd
0x7c: JUMPI 0x8dd V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x968]
---
0x7d DUP1
0x7e PUSH4 0xc7a96920
0x83 EQ
0x84 PUSH2 0x968
0x87 JUMPI
---
0x7e: V40 = 0xc7a96920
0x83: V41 = EQ 0xc7a96920 V12
0x84: V42 = 0x968
0x87: JUMPI 0x968 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x98d]
---
0x88 DUP1
0x89 PUSH4 0xccb07cef
0x8e EQ
0x8f PUSH2 0x98d
0x92 JUMPI
---
0x89: V43 = 0xccb07cef
0x8e: V44 = EQ 0xccb07cef V12
0x8f: V45 = 0x98d
0x92: JUMPI 0x98d V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x9b4]
---
0x93 DUP1
0x94 PUSH4 0xf9081ba2
0x99 EQ
0x9a PUSH2 0x9b4
0x9d JUMPI
---
0x94: V46 = 0xf9081ba2
0x99: V47 = EQ 0xf9081ba2 V12
0x9a: V48 = 0x9b4
0x9d: JUMPI 0x9b4 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0x9e]
---
Predecessors: [0x0, 0x93]
Successors: [0x9f]
---
0x9e JUMPDEST
---
0x9e: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9f
[0x9f:0xae]
---
Predecessors: [0x9e]
Successors: [0xaf, 0x106]
---
0x9f JUMPDEST
0xa0 PUSH1 0x0
0xa2 DUP1
0xa3 PUSH1 0x0
0xa5 PUSH1 0x6
0xa7 SLOAD
0xa8 TIMESTAMP
0xa9 GT
0xaa ISZERO
0xab PUSH2 0x106
0xae JUMPI
---
0x9f: JUMPDEST 
0xa0: V49 = 0x0
0xa3: V50 = 0x0
0xa5: V51 = 0x6
0xa7: V52 = S[0x6]
0xa8: V53 = TIMESTAMP
0xa9: V54 = GT V53 V52
0xaa: V55 = ISZERO V54
0xab: V56 = 0x106
0xae: JUMPI 0x106 V55
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xaf
[0xaf:0xf4]
---
Predecessors: [0x9f]
Successors: [0xae9]
---
0xaf PUSH1 0x40
0xb1 DUP1
0xb2 MLOAD
0xb3 SWAP1
0xb4 DUP2
0xb5 ADD
0xb6 PUSH1 0x40
0xb8 MSTORE
0xb9 PUSH1 0x1b
0xbb DUP2
0xbc MSTORE
0xbd PUSH32 0x302e30303720457468657220666f722031206d6963726f4244534d0000000000
0xde PUSH1 0x20
0xe0 DUP3
0xe1 ADD
0xe2 MSTORE
0xe3 PUSH1 0x7
0xe5 SWAP1
0xe6 DUP1
0xe7 MLOAD
0xe8 PUSH2 0xf5
0xeb SWAP3
0xec SWAP2
0xed PUSH1 0x20
0xef ADD
0xf0 SWAP1
0xf1 PUSH2 0xae9
0xf4 JUMP
---
0xaf: V57 = 0x40
0xb2: V58 = M[0x40]
0xb5: V59 = ADD V58 0x40
0xb6: V60 = 0x40
0xb8: M[0x40] = V59
0xb9: V61 = 0x1b
0xbc: M[V58] = 0x1b
0xbd: V62 = 0x302e30303720457468657220666f722031206d6963726f4244534d0000000000
0xde: V63 = 0x20
0xe1: V64 = ADD V58 0x20
0xe2: M[V64] = 0x302e30303720457468657220666f722031206d6963726f4244534d0000000000
0xe3: V65 = 0x7
0xe7: V66 = M[V58]
0xe8: V67 = 0xf5
0xed: V68 = 0x20
0xef: V69 = ADD 0x20 V58
0xf1: V70 = 0xae9
0xf4: JUMP 0xae9
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xf5, 0x7, V69, V66]
Exit stack: [V12, 0x0, 0x0, 0x0, 0xf5, 0x7, V69, V66]

================================

Block 0xf5
[0xf5:0x105]
---
Predecessors: [0xb64]
Successors: [0x164]
---
0xf5 JUMPDEST
0xf6 POP
0xf7 PUSH7 0x18de76816d8000
0xff PUSH1 0x8
0x101 SSTORE
0x102 PUSH2 0x164
0x105 JUMP
---
0xf5: JUMPDEST 
0xf7: V71 = 0x18de76816d8000
0xff: V72 = 0x8
0x101: S[0x8] = 0x18de76816d8000
0x102: V73 = 0x164
0x105: JUMP 0x164
---
Entry stack: [V12, 0x0, 0x0, S4, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S4, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S1]

================================

Block 0x106
[0x106:0x110]
---
Predecessors: [0x9f]
Successors: [0x111, 0x164]
---
0x106 JUMPDEST
0x107 PUSH1 0x5
0x109 SLOAD
0x10a TIMESTAMP
0x10b GT
0x10c ISZERO
0x10d PUSH2 0x164
0x110 JUMPI
---
0x106: JUMPDEST 
0x107: V74 = 0x5
0x109: V75 = S[0x5]
0x10a: V76 = TIMESTAMP
0x10b: V77 = GT V76 V75
0x10c: V78 = ISZERO V77
0x10d: V79 = 0x164
0x110: JUMPI 0x164 V78
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x111
[0x111:0x156]
---
Predecessors: [0x106]
Successors: [0xae9]
---
0x111 PUSH1 0x40
0x113 DUP1
0x114 MLOAD
0x115 SWAP1
0x116 DUP2
0x117 ADD
0x118 PUSH1 0x40
0x11a MSTORE
0x11b PUSH1 0x1d
0x11d DUP2
0x11e MSTORE
0x11f PUSH32 0x302e303035323520457468657220666f722031206d6963726f4244534d000000
0x140 PUSH1 0x20
0x142 DUP3
0x143 ADD
0x144 MSTORE
0x145 PUSH1 0x7
0x147 SWAP1
0x148 DUP1
0x149 MLOAD
0x14a PUSH2 0x157
0x14d SWAP3
0x14e SWAP2
0x14f PUSH1 0x20
0x151 ADD
0x152 SWAP1
0x153 PUSH2 0xae9
0x156 JUMP
---
0x111: V80 = 0x40
0x114: V81 = M[0x40]
0x117: V82 = ADD V81 0x40
0x118: V83 = 0x40
0x11a: M[0x40] = V82
0x11b: V84 = 0x1d
0x11e: M[V81] = 0x1d
0x11f: V85 = 0x302e303035323520457468657220666f722031206d6963726f4244534d000000
0x140: V86 = 0x20
0x143: V87 = ADD V81 0x20
0x144: M[V87] = 0x302e303035323520457468657220666f722031206d6963726f4244534d000000
0x145: V88 = 0x7
0x149: V89 = M[V81]
0x14a: V90 = 0x157
0x14f: V91 = 0x20
0x151: V92 = ADD 0x20 V81
0x153: V93 = 0xae9
0x156: JUMP 0xae9
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x157, 0x7, V92, V89]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x157, 0x7, V92, V89]

================================

Block 0x157
[0x157:0x163]
---
Predecessors: [0xb64]
Successors: [0x164]
---
0x157 JUMPDEST
0x158 POP
0x159 PUSH7 0x12a6d8e1122000
0x161 PUSH1 0x8
0x163 SSTORE
---
0x157: JUMPDEST 
0x159: V94 = 0x12a6d8e1122000
0x161: V95 = 0x8
0x163: S[0x8] = 0x12a6d8e1122000
---
Entry stack: [V12, 0x0, 0x0, S4, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S4, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S1]

================================

Block 0x164
[0x164:0x164]
---
Predecessors: [0xf5, 0x106, 0x157]
Successors: [0x165]
---
0x164 JUMPDEST
---
0x164: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]

================================

Block 0x165
[0x165:0x1bb]
---
Predecessors: [0x164]
Successors: [0x1bc, 0x1c0]
---
0x165 JUMPDEST
0x166 PUSH1 0x0
0x168 DUP1
0x169 SLOAD
0x16a PUSH1 0x1
0x16c PUSH1 0xa0
0x16e PUSH1 0x2
0x170 EXP
0x171 SUB
0x172 AND
0x173 SWAP1
0x174 PUSH4 0x70a08231
0x179 SWAP1
0x17a ADDRESS
0x17b SWAP1
0x17c PUSH1 0x40
0x17e MLOAD
0x17f PUSH1 0x20
0x181 ADD
0x182 MSTORE
0x183 PUSH1 0x40
0x185 MLOAD
0x186 PUSH1 0xe0
0x188 PUSH1 0x2
0x18a EXP
0x18b PUSH4 0xffffffff
0x190 DUP5
0x191 AND
0x192 MUL
0x193 DUP2
0x194 MSTORE
0x195 PUSH1 0x1
0x197 PUSH1 0xa0
0x199 PUSH1 0x2
0x19b EXP
0x19c SUB
0x19d SWAP1
0x19e SWAP2
0x19f AND
0x1a0 PUSH1 0x4
0x1a2 DUP3
0x1a3 ADD
0x1a4 MSTORE
0x1a5 PUSH1 0x24
0x1a7 ADD
0x1a8 PUSH1 0x20
0x1aa PUSH1 0x40
0x1ac MLOAD
0x1ad DUP1
0x1ae DUP4
0x1af SUB
0x1b0 DUP2
0x1b1 PUSH1 0x0
0x1b3 DUP8
0x1b4 DUP1
0x1b5 EXTCODESIZE
0x1b6 ISZERO
0x1b7 ISZERO
0x1b8 PUSH2 0x1c0
0x1bb JUMPI
---
0x165: JUMPDEST 
0x166: V96 = 0x0
0x169: V97 = S[0x0]
0x16a: V98 = 0x1
0x16c: V99 = 0xa0
0x16e: V100 = 0x2
0x170: V101 = EXP 0x2 0xa0
0x171: V102 = SUB 0x10000000000000000000000000000000000000000 0x1
0x172: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x174: V104 = 0x70a08231
0x17a: V105 = ADDRESS
0x17c: V106 = 0x40
0x17e: V107 = M[0x40]
0x17f: V108 = 0x20
0x181: V109 = ADD 0x20 V107
0x182: M[V109] = 0x0
0x183: V110 = 0x40
0x185: V111 = M[0x40]
0x186: V112 = 0xe0
0x188: V113 = 0x2
0x18a: V114 = EXP 0x2 0xe0
0x18b: V115 = 0xffffffff
0x191: V116 = AND 0x70a08231 0xffffffff
0x192: V117 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x194: M[V111] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x195: V118 = 0x1
0x197: V119 = 0xa0
0x199: V120 = 0x2
0x19b: V121 = EXP 0x2 0xa0
0x19c: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19f: V123 = AND V105 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V124 = 0x4
0x1a3: V125 = ADD V111 0x4
0x1a4: M[V125] = V123
0x1a5: V126 = 0x24
0x1a7: V127 = ADD 0x24 V111
0x1a8: V128 = 0x20
0x1aa: V129 = 0x40
0x1ac: V130 = M[0x40]
0x1af: V131 = SUB V127 V130
0x1b1: V132 = 0x0
0x1b5: V133 = EXTCODESIZE V103
0x1b6: V134 = ISZERO V133
0x1b7: V135 = ISZERO V134
0x1b8: V136 = 0x1c0
0x1bb: JUMPI 0x1c0 V135
---
Entry stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: [V103, 0x70a08231, V127, 0x20, V130, V131, V130, 0x0, V103]
Exit stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0, V103, 0x70a08231, V127, 0x20, V130, V131, V130, 0x0, V103]

================================

Block 0x1bc
[0x1bc:0x1bf]
---
Predecessors: [0x165]
Successors: []
---
0x1bc PUSH1 0x0
0x1be DUP1
0x1bf REVERT
---
0x1bc: V137 = 0x0
0x1bf: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S12, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S9, V103, 0x70a08231, V127, 0x20, V130, V131, V130, 0x0, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S12, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S9, V103, 0x70a08231, V127, 0x20, V130, V131, V130, 0x0, V103]

================================

Block 0x1c0
[0x1c0:0x1cc]
---
Predecessors: [0x165]
Successors: [0x1cd, 0x1d1]
---
0x1c0 JUMPDEST
0x1c1 PUSH2 0x2c6
0x1c4 GAS
0x1c5 SUB
0x1c6 CALL
0x1c7 ISZERO
0x1c8 ISZERO
0x1c9 PUSH2 0x1d1
0x1cc JUMPI
---
0x1c0: JUMPDEST 
0x1c1: V138 = 0x2c6
0x1c4: V139 = GAS
0x1c5: V140 = SUB V139 0x2c6
0x1c6: V141 = CALL V140 V103 0x0 V130 V131 V130 0x20
0x1c7: V142 = ISZERO V141
0x1c8: V143 = ISZERO V142
0x1c9: V144 = 0x1d1
0x1cc: JUMPI 0x1d1 V143
---
Entry stack: [V12, 0x0, 0x0, S12, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S9, V103, 0x70a08231, V127, 0x20, V130, V131, V130, 0x0, V103]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S12, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S9, V103, 0x70a08231, V127]

================================

Block 0x1cd
[0x1cd:0x1d0]
---
Predecessors: [0x1c0]
Successors: []
---
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 REVERT
---
0x1cd: V145 = 0x0
0x1d0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3, V103, 0x70a08231, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3, V103, 0x70a08231, V127]

================================

Block 0x1d1
[0x1d1:0x1e7]
---
Predecessors: [0x1c0]
Successors: [0x1e8, 0x21e]
---
0x1d1 JUMPDEST
0x1d2 POP
0x1d3 POP
0x1d4 POP
0x1d5 PUSH1 0x40
0x1d7 MLOAD
0x1d8 DUP1
0x1d9 MLOAD
0x1da PUSH1 0xb
0x1dc SSTORE
0x1dd POP
0x1de PUSH1 0x3
0x1e0 SLOAD
0x1e1 TIMESTAMP
0x1e2 LT
0x1e3 ISZERO
0x1e4 PUSH2 0x21e
0x1e7 JUMPI
---
0x1d1: JUMPDEST 
0x1d5: V146 = 0x40
0x1d7: V147 = M[0x40]
0x1d9: V148 = M[V147]
0x1da: V149 = 0xb
0x1dc: S[0xb] = V148
0x1de: V150 = 0x3
0x1e0: V151 = S[0x3]
0x1e1: V152 = TIMESTAMP
0x1e2: V153 = LT V152 V151
0x1e3: V154 = ISZERO V153
0x1e4: V155 = 0x21e
0x1e7: JUMPI 0x21e V154
---
Entry stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3, V103, 0x70a08231, V127]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3]

================================

Block 0x1e8
[0x1e8:0x214]
---
Predecessors: [0x1d1]
Successors: [0x215, 0x219]
---
0x1e8 PUSH1 0x1
0x1ea PUSH1 0xa0
0x1ec PUSH1 0x2
0x1ee EXP
0x1ef SUB
0x1f0 CALLER
0x1f1 AND
0x1f2 CALLVALUE
0x1f3 DUP1
0x1f4 ISZERO
0x1f5 PUSH2 0x8fc
0x1f8 MUL
0x1f9 SWAP1
0x1fa PUSH1 0x40
0x1fc MLOAD
0x1fd PUSH1 0x0
0x1ff PUSH1 0x40
0x201 MLOAD
0x202 DUP1
0x203 DUP4
0x204 SUB
0x205 DUP2
0x206 DUP6
0x207 DUP9
0x208 DUP9
0x209 CALL
0x20a SWAP4
0x20b POP
0x20c POP
0x20d POP
0x20e POP
0x20f ISZERO
0x210 ISZERO
0x211 PUSH2 0x219
0x214 JUMPI
---
0x1e8: V156 = 0x1
0x1ea: V157 = 0xa0
0x1ec: V158 = 0x2
0x1ee: V159 = EXP 0x2 0xa0
0x1ef: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f0: V161 = CALLER
0x1f1: V162 = AND V161 0xffffffffffffffffffffffffffffffffffffffff
0x1f2: V163 = CALLVALUE
0x1f4: V164 = ISZERO V163
0x1f5: V165 = 0x8fc
0x1f8: V166 = MUL 0x8fc V164
0x1fa: V167 = 0x40
0x1fc: V168 = M[0x40]
0x1fd: V169 = 0x0
0x1ff: V170 = 0x40
0x201: V171 = M[0x40]
0x204: V172 = SUB V168 V171
0x209: V173 = CALL V166 V162 V163 V171 V172 V171 0x0
0x20f: V174 = ISZERO V173
0x210: V175 = ISZERO V174
0x211: V176 = 0x219
0x214: JUMPI 0x219 V175
---
Entry stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]

================================

Block 0x215
[0x215:0x218]
---
Predecessors: [0x1e8]
Successors: []
---
0x215 PUSH1 0x0
0x217 DUP1
0x218 REVERT
---
0x215: V177 = 0x0
0x218: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]

================================

Block 0x219
[0x219:0x21d]
---
Predecessors: [0x1e8, 0x25a, 0x3eb, 0x574]
Successors: [0x726]
---
0x219 JUMPDEST
0x21a PUSH2 0x726
0x21d JUMP
---
0x219: JUMPDEST 
0x21a: V178 = 0x726
0x21d: JUMP 0x726
---
Entry stack: [V12, 0x0, 0x0, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, S2, S1, S0]

================================

Block 0x21e
[0x21e:0x228]
---
Predecessors: [0x1d1]
Successors: [0x229, 0x3df]
---
0x21e JUMPDEST
0x21f PUSH1 0x4
0x221 SLOAD
0x222 TIMESTAMP
0x223 GT
0x224 ISZERO
0x225 PUSH2 0x3df
0x228 JUMPI
---
0x21e: JUMPDEST 
0x21f: V179 = 0x4
0x221: V180 = S[0x4]
0x222: V181 = TIMESTAMP
0x223: V182 = GT V181 V180
0x224: V183 = ISZERO V182
0x225: V184 = 0x3df
0x228: JUMPI 0x3df V183
---
Entry stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]

================================

Block 0x229
[0x229:0x255]
---
Predecessors: [0x21e]
Successors: [0x256, 0x25a]
---
0x229 PUSH1 0x1
0x22b PUSH1 0xa0
0x22d PUSH1 0x2
0x22f EXP
0x230 SUB
0x231 CALLER
0x232 AND
0x233 CALLVALUE
0x234 DUP1
0x235 ISZERO
0x236 PUSH2 0x8fc
0x239 MUL
0x23a SWAP1
0x23b PUSH1 0x40
0x23d MLOAD
0x23e PUSH1 0x0
0x240 PUSH1 0x40
0x242 MLOAD
0x243 DUP1
0x244 DUP4
0x245 SUB
0x246 DUP2
0x247 DUP6
0x248 DUP9
0x249 DUP9
0x24a CALL
0x24b SWAP4
0x24c POP
0x24d POP
0x24e POP
0x24f POP
0x250 ISZERO
0x251 ISZERO
0x252 PUSH2 0x25a
0x255 JUMPI
---
0x229: V185 = 0x1
0x22b: V186 = 0xa0
0x22d: V187 = 0x2
0x22f: V188 = EXP 0x2 0xa0
0x230: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x231: V190 = CALLER
0x232: V191 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x233: V192 = CALLVALUE
0x235: V193 = ISZERO V192
0x236: V194 = 0x8fc
0x239: V195 = MUL 0x8fc V193
0x23b: V196 = 0x40
0x23d: V197 = M[0x40]
0x23e: V198 = 0x0
0x240: V199 = 0x40
0x242: V200 = M[0x40]
0x245: V201 = SUB V197 V200
0x24a: V202 = CALL V195 V191 V192 V200 V201 V200 0x0
0x250: V203 = ISZERO V202
0x251: V204 = ISZERO V203
0x252: V205 = 0x25a
0x255: JUMPI 0x25a V204
---
Entry stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]

================================

Block 0x256
[0x256:0x259]
---
Predecessors: [0x229]
Successors: []
---
0x256 PUSH1 0x0
0x258 DUP1
0x259 REVERT
---
0x256: V206 = 0x0
0x259: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]

================================

Block 0x25a
[0x25a:0x26b]
---
Predecessors: [0x229]
Successors: [0x219, 0x26c]
---
0x25a JUMPDEST
0x25b PUSH1 0xc
0x25d SLOAD
0x25e PUSH2 0x100
0x261 SWAP1
0x262 DIV
0x263 PUSH1 0xff
0x265 AND
0x266 ISZERO
0x267 ISZERO
0x268 PUSH2 0x219
0x26b JUMPI
---
0x25a: JUMPDEST 
0x25b: V207 = 0xc
0x25d: V208 = S[0xc]
0x25e: V209 = 0x100
0x262: V210 = DIV V208 0x100
0x263: V211 = 0xff
0x265: V212 = AND 0xff V210
0x266: V213 = ISZERO V212
0x267: V214 = ISZERO V213
0x268: V215 = 0x219
0x26b: JUMPI 0x219 V214
---
Entry stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]

================================

Block 0x26c
[0x26c:0x2d2]
---
Predecessors: [0x25a]
Successors: [0x2d3, 0x2d7]
---
0x26c PUSH1 0x0
0x26e DUP1
0x26f SLOAD
0x270 PUSH1 0x2
0x272 SLOAD
0x273 PUSH1 0x1
0x275 PUSH1 0xa0
0x277 PUSH1 0x2
0x279 EXP
0x27a SUB
0x27b SWAP2
0x27c DUP3
0x27d AND
0x27e SWAP3
0x27f PUSH4 0xa9059cbb
0x284 SWAP3
0x285 SWAP1
0x286 SWAP2
0x287 AND
0x288 SWAP1
0x289 DUP4
0x28a SWAP1
0x28b PUSH4 0x70a08231
0x290 SWAP1
0x291 ADDRESS
0x292 SWAP1
0x293 PUSH1 0x40
0x295 MLOAD
0x296 PUSH1 0x20
0x298 ADD
0x299 MSTORE
0x29a PUSH1 0x40
0x29c MLOAD
0x29d PUSH1 0xe0
0x29f PUSH1 0x2
0x2a1 EXP
0x2a2 PUSH4 0xffffffff
0x2a7 DUP5
0x2a8 AND
0x2a9 MUL
0x2aa DUP2
0x2ab MSTORE
0x2ac PUSH1 0x1
0x2ae PUSH1 0xa0
0x2b0 PUSH1 0x2
0x2b2 EXP
0x2b3 SUB
0x2b4 SWAP1
0x2b5 SWAP2
0x2b6 AND
0x2b7 PUSH1 0x4
0x2b9 DUP3
0x2ba ADD
0x2bb MSTORE
0x2bc PUSH1 0x24
0x2be ADD
0x2bf PUSH1 0x20
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 DUP1
0x2c5 DUP4
0x2c6 SUB
0x2c7 DUP2
0x2c8 PUSH1 0x0
0x2ca DUP8
0x2cb DUP1
0x2cc EXTCODESIZE
0x2cd ISZERO
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x26c: V216 = 0x0
0x26f: V217 = S[0x0]
0x270: V218 = 0x2
0x272: V219 = S[0x2]
0x273: V220 = 0x1
0x275: V221 = 0xa0
0x277: V222 = 0x2
0x279: V223 = EXP 0x2 0xa0
0x27a: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27d: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x27f: V226 = 0xa9059cbb
0x287: V227 = AND V219 0xffffffffffffffffffffffffffffffffffffffff
0x28b: V228 = 0x70a08231
0x291: V229 = ADDRESS
0x293: V230 = 0x40
0x295: V231 = M[0x40]
0x296: V232 = 0x20
0x298: V233 = ADD 0x20 V231
0x299: M[V233] = 0x0
0x29a: V234 = 0x40
0x29c: V235 = M[0x40]
0x29d: V236 = 0xe0
0x29f: V237 = 0x2
0x2a1: V238 = EXP 0x2 0xe0
0x2a2: V239 = 0xffffffff
0x2a8: V240 = AND 0x70a08231 0xffffffff
0x2a9: V241 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x2ab: M[V235] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2ac: V242 = 0x1
0x2ae: V243 = 0xa0
0x2b0: V244 = 0x2
0x2b2: V245 = EXP 0x2 0xa0
0x2b3: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b6: V247 = AND V229 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V248 = 0x4
0x2ba: V249 = ADD V235 0x4
0x2bb: M[V249] = V247
0x2bc: V250 = 0x24
0x2be: V251 = ADD 0x24 V235
0x2bf: V252 = 0x20
0x2c1: V253 = 0x40
0x2c3: V254 = M[0x40]
0x2c6: V255 = SUB V251 V254
0x2c8: V256 = 0x0
0x2cc: V257 = EXTCODESIZE V225
0x2cd: V258 = ISZERO V257
0x2ce: V259 = ISZERO V258
0x2cf: V260 = 0x2d7
0x2d2: JUMPI 0x2d7 V259
---
Entry stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: [V225, 0xa9059cbb, V227, V225, 0x70a08231, V251, 0x20, V254, V255, V254, 0x0, V225]
Exit stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0, V225, 0xa9059cbb, V227, V225, 0x70a08231, V251, 0x20, V254, V255, V254, 0x0, V225]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x26c]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V261 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S15, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S12, V225, 0xa9059cbb, V227, V225, 0x70a08231, V251, 0x20, V254, V255, V254, 0x0, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S15, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S12, V225, 0xa9059cbb, V227, V225, 0x70a08231, V251, 0x20, V254, V255, V254, 0x0, V225]

================================

Block 0x2d7
[0x2d7:0x2e3]
---
Predecessors: [0x26c]
Successors: [0x2e4, 0x2e8]
---
0x2d7 JUMPDEST
0x2d8 PUSH2 0x2c6
0x2db GAS
0x2dc SUB
0x2dd CALL
0x2de ISZERO
0x2df ISZERO
0x2e0 PUSH2 0x2e8
0x2e3 JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V262 = 0x2c6
0x2db: V263 = GAS
0x2dc: V264 = SUB V263 0x2c6
0x2dd: V265 = CALL V264 V225 0x0 V254 V255 V254 0x20
0x2de: V266 = ISZERO V265
0x2df: V267 = ISZERO V266
0x2e0: V268 = 0x2e8
0x2e3: JUMPI 0x2e8 V267
---
Entry stack: [V12, 0x0, 0x0, S15, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S12, V225, 0xa9059cbb, V227, V225, 0x70a08231, V251, 0x20, V254, V255, V254, 0x0, V225]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S15, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S12, V225, 0xa9059cbb, V227, V225, 0x70a08231, V251]

================================

Block 0x2e4
[0x2e4:0x2e7]
---
Predecessors: [0x2d7]
Successors: []
---
0x2e4 PUSH1 0x0
0x2e6 DUP1
0x2e7 REVERT
---
0x2e4: V269 = 0x0
0x2e7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S9, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S6, V225, 0xa9059cbb, V227, V225, 0x70a08231, V251]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S9, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S6, V225, 0xa9059cbb, V227, V225, 0x70a08231, V251]

================================

Block 0x2e8
[0x2e8:0x330]
---
Predecessors: [0x2d7]
Successors: [0x331, 0x335]
---
0x2e8 JUMPDEST
0x2e9 POP
0x2ea POP
0x2eb POP
0x2ec PUSH1 0x40
0x2ee MLOAD
0x2ef DUP1
0x2f0 MLOAD
0x2f1 SWAP1
0x2f2 POP
0x2f3 PUSH1 0x40
0x2f5 MLOAD
0x2f6 PUSH1 0xe0
0x2f8 PUSH1 0x2
0x2fa EXP
0x2fb PUSH4 0xffffffff
0x300 DUP6
0x301 AND
0x302 MUL
0x303 DUP2
0x304 MSTORE
0x305 PUSH1 0x1
0x307 PUSH1 0xa0
0x309 PUSH1 0x2
0x30b EXP
0x30c SUB
0x30d SWAP1
0x30e SWAP3
0x30f AND
0x310 PUSH1 0x4
0x312 DUP4
0x313 ADD
0x314 MSTORE
0x315 PUSH1 0x24
0x317 DUP3
0x318 ADD
0x319 MSTORE
0x31a PUSH1 0x44
0x31c ADD
0x31d PUSH1 0x0
0x31f PUSH1 0x40
0x321 MLOAD
0x322 DUP1
0x323 DUP4
0x324 SUB
0x325 DUP2
0x326 PUSH1 0x0
0x328 DUP8
0x329 DUP1
0x32a EXTCODESIZE
0x32b ISZERO
0x32c ISZERO
0x32d PUSH2 0x335
0x330 JUMPI
---
0x2e8: JUMPDEST 
0x2ec: V270 = 0x40
0x2ee: V271 = M[0x40]
0x2f0: V272 = M[V271]
0x2f3: V273 = 0x40
0x2f5: V274 = M[0x40]
0x2f6: V275 = 0xe0
0x2f8: V276 = 0x2
0x2fa: V277 = EXP 0x2 0xe0
0x2fb: V278 = 0xffffffff
0x301: V279 = AND 0xa9059cbb 0xffffffff
0x302: V280 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x304: M[V274] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x305: V281 = 0x1
0x307: V282 = 0xa0
0x309: V283 = 0x2
0x30b: V284 = EXP 0x2 0xa0
0x30c: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30f: V286 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x310: V287 = 0x4
0x313: V288 = ADD V274 0x4
0x314: M[V288] = V286
0x315: V289 = 0x24
0x318: V290 = ADD V274 0x24
0x319: M[V290] = V272
0x31a: V291 = 0x44
0x31c: V292 = ADD 0x44 V274
0x31d: V293 = 0x0
0x31f: V294 = 0x40
0x321: V295 = M[0x40]
0x324: V296 = SUB V292 V295
0x326: V297 = 0x0
0x32a: V298 = EXTCODESIZE V225
0x32b: V299 = ISZERO V298
0x32c: V300 = ISZERO V299
0x32d: V301 = 0x335
0x330: JUMPI 0x335 V300
---
Entry stack: [V12, 0x0, 0x0, S9, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S6, V225, 0xa9059cbb, V227, V225, 0x70a08231, V251]
Stack pops: 6
Stack additions: [S5, S4, V292, 0x0, V295, V296, V295, 0x0, S5]
Exit stack: [V12, 0x0, 0x0, S9, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S6, V225, 0xa9059cbb, V292, 0x0, V295, V296, V295, 0x0, V225]

================================

Block 0x331
[0x331:0x334]
---
Predecessors: [0x2e8]
Successors: []
---
0x331 PUSH1 0x0
0x333 DUP1
0x334 REVERT
---
0x331: V302 = 0x0
0x334: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S12, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S9, V225, 0xa9059cbb, V292, 0x0, V295, V296, V295, 0x0, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S12, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S9, V225, 0xa9059cbb, V292, 0x0, V295, V296, V295, 0x0, V225]

================================

Block 0x335
[0x335:0x341]
---
Predecessors: [0x2e8]
Successors: [0x342, 0x346]
---
0x335 JUMPDEST
0x336 PUSH2 0x2c6
0x339 GAS
0x33a SUB
0x33b CALL
0x33c ISZERO
0x33d ISZERO
0x33e PUSH2 0x346
0x341 JUMPI
---
0x335: JUMPDEST 
0x336: V303 = 0x2c6
0x339: V304 = GAS
0x33a: V305 = SUB V304 0x2c6
0x33b: V306 = CALL V305 V225 0x0 V295 V296 V295 0x0
0x33c: V307 = ISZERO V306
0x33d: V308 = ISZERO V307
0x33e: V309 = 0x346
0x341: JUMPI 0x346 V308
---
Entry stack: [V12, 0x0, 0x0, S12, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S9, V225, 0xa9059cbb, V292, 0x0, V295, V296, V295, 0x0, V225]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S12, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S9, V225, 0xa9059cbb, V292]

================================

Block 0x342
[0x342:0x345]
---
Predecessors: [0x335]
Successors: []
---
0x342 PUSH1 0x0
0x344 DUP1
0x345 REVERT
---
0x342: V310 = 0x0
0x345: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3, V225, 0xa9059cbb, V292]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3, V225, 0xa9059cbb, V292]

================================

Block 0x346
[0x346:0x39f]
---
Predecessors: [0x335]
Successors: [0x3a0, 0x3a4]
---
0x346 JUMPDEST
0x347 POP
0x348 POP
0x349 PUSH1 0x0
0x34b DUP1
0x34c SLOAD
0x34d PUSH1 0x1
0x34f PUSH1 0xa0
0x351 PUSH1 0x2
0x353 EXP
0x354 SUB
0x355 AND
0x356 SWAP2
0x357 POP
0x358 PUSH4 0x70a08231
0x35d SWAP1
0x35e ADDRESS
0x35f SWAP1
0x360 PUSH1 0x40
0x362 MLOAD
0x363 PUSH1 0x20
0x365 ADD
0x366 MSTORE
0x367 PUSH1 0x40
0x369 MLOAD
0x36a PUSH1 0xe0
0x36c PUSH1 0x2
0x36e EXP
0x36f PUSH4 0xffffffff
0x374 DUP5
0x375 AND
0x376 MUL
0x377 DUP2
0x378 MSTORE
0x379 PUSH1 0x1
0x37b PUSH1 0xa0
0x37d PUSH1 0x2
0x37f EXP
0x380 SUB
0x381 SWAP1
0x382 SWAP2
0x383 AND
0x384 PUSH1 0x4
0x386 DUP3
0x387 ADD
0x388 MSTORE
0x389 PUSH1 0x24
0x38b ADD
0x38c PUSH1 0x20
0x38e PUSH1 0x40
0x390 MLOAD
0x391 DUP1
0x392 DUP4
0x393 SUB
0x394 DUP2
0x395 PUSH1 0x0
0x397 DUP8
0x398 DUP1
0x399 EXTCODESIZE
0x39a ISZERO
0x39b ISZERO
0x39c PUSH2 0x3a4
0x39f JUMPI
---
0x346: JUMPDEST 
0x349: V311 = 0x0
0x34c: V312 = S[0x0]
0x34d: V313 = 0x1
0x34f: V314 = 0xa0
0x351: V315 = 0x2
0x353: V316 = EXP 0x2 0xa0
0x354: V317 = SUB 0x10000000000000000000000000000000000000000 0x1
0x355: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x358: V319 = 0x70a08231
0x35e: V320 = ADDRESS
0x360: V321 = 0x40
0x362: V322 = M[0x40]
0x363: V323 = 0x20
0x365: V324 = ADD 0x20 V322
0x366: M[V324] = 0x0
0x367: V325 = 0x40
0x369: V326 = M[0x40]
0x36a: V327 = 0xe0
0x36c: V328 = 0x2
0x36e: V329 = EXP 0x2 0xe0
0x36f: V330 = 0xffffffff
0x375: V331 = AND 0x70a08231 0xffffffff
0x376: V332 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x378: M[V326] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x379: V333 = 0x1
0x37b: V334 = 0xa0
0x37d: V335 = 0x2
0x37f: V336 = EXP 0x2 0xa0
0x380: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x383: V338 = AND V320 0xffffffffffffffffffffffffffffffffffffffff
0x384: V339 = 0x4
0x387: V340 = ADD V326 0x4
0x388: M[V340] = V338
0x389: V341 = 0x24
0x38b: V342 = ADD 0x24 V326
0x38c: V343 = 0x20
0x38e: V344 = 0x40
0x390: V345 = M[0x40]
0x393: V346 = SUB V342 V345
0x395: V347 = 0x0
0x399: V348 = EXTCODESIZE V318
0x39a: V349 = ISZERO V348
0x39b: V350 = ISZERO V349
0x39c: V351 = 0x3a4
0x39f: JUMPI 0x3a4 V350
---
Entry stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3, V225, 0xa9059cbb, V292]
Stack pops: 3
Stack additions: [V318, 0x70a08231, V342, 0x20, V345, V346, V345, 0x0, V318]
Exit stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3, V318, 0x70a08231, V342, 0x20, V345, V346, V345, 0x0, V318]

================================

Block 0x3a0
[0x3a0:0x3a3]
---
Predecessors: [0x346]
Successors: []
---
0x3a0 PUSH1 0x0
0x3a2 DUP1
0x3a3 REVERT
---
0x3a0: V352 = 0x0
0x3a3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S12, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S9, V318, 0x70a08231, V342, 0x20, V345, V346, V345, 0x0, V318]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S12, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S9, V318, 0x70a08231, V342, 0x20, V345, V346, V345, 0x0, V318]

================================

Block 0x3a4
[0x3a4:0x3b0]
---
Predecessors: [0x346]
Successors: [0x3b1, 0x3b5]
---
0x3a4 JUMPDEST
0x3a5 PUSH2 0x2c6
0x3a8 GAS
0x3a9 SUB
0x3aa CALL
0x3ab ISZERO
0x3ac ISZERO
0x3ad PUSH2 0x3b5
0x3b0 JUMPI
---
0x3a4: JUMPDEST 
0x3a5: V353 = 0x2c6
0x3a8: V354 = GAS
0x3a9: V355 = SUB V354 0x2c6
0x3aa: V356 = CALL V355 V318 0x0 V345 V346 V345 0x20
0x3ab: V357 = ISZERO V356
0x3ac: V358 = ISZERO V357
0x3ad: V359 = 0x3b5
0x3b0: JUMPI 0x3b5 V358
---
Entry stack: [V12, 0x0, 0x0, S12, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S9, V318, 0x70a08231, V342, 0x20, V345, V346, V345, 0x0, V318]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S12, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S9, V318, 0x70a08231, V342]

================================

Block 0x3b1
[0x3b1:0x3b4]
---
Predecessors: [0x3a4]
Successors: []
---
0x3b1 PUSH1 0x0
0x3b3 DUP1
0x3b4 REVERT
---
0x3b1: V360 = 0x0
0x3b4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3, V318, 0x70a08231, V342]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3, V318, 0x70a08231, V342]

================================

Block 0x3b5
[0x3b5:0x3d9]
---
Predecessors: [0x3a4]
Successors: [0x3da]
---
0x3b5 JUMPDEST
0x3b6 POP
0x3b7 POP
0x3b8 POP
0x3b9 PUSH1 0x40
0x3bb MLOAD
0x3bc DUP1
0x3bd MLOAD
0x3be PUSH1 0xb
0x3c0 SSTORE
0x3c1 POP
0x3c2 PUSH1 0xc
0x3c4 DUP1
0x3c5 SLOAD
0x3c6 PUSH1 0xff
0x3c8 NOT
0x3c9 PUSH2 0xff00
0x3cc NOT
0x3cd SWAP1
0x3ce SWAP2
0x3cf AND
0x3d0 PUSH2 0x100
0x3d3 OR
0x3d4 AND
0x3d5 PUSH1 0x1
0x3d7 OR
0x3d8 SWAP1
0x3d9 SSTORE
---
0x3b5: JUMPDEST 
0x3b9: V361 = 0x40
0x3bb: V362 = M[0x40]
0x3bd: V363 = M[V362]
0x3be: V364 = 0xb
0x3c0: S[0xb] = V363
0x3c2: V365 = 0xc
0x3c5: V366 = S[0xc]
0x3c6: V367 = 0xff
0x3c8: V368 = NOT 0xff
0x3c9: V369 = 0xff00
0x3cc: V370 = NOT 0xff00
0x3cf: V371 = AND V366 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff
0x3d0: V372 = 0x100
0x3d3: V373 = OR 0x100 V371
0x3d4: V374 = AND V373 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x3d5: V375 = 0x1
0x3d7: V376 = OR 0x1 V374
0x3d9: S[0xc] = V376
---
Entry stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3, V318, 0x70a08231, V342]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3]

================================

Block 0x3da
[0x3da:0x3de]
---
Predecessors: [0x3b5]
Successors: [0x726]
---
0x3da JUMPDEST
0x3db PUSH2 0x726
0x3de JUMP
---
0x3da: JUMPDEST 
0x3db: V377 = 0x726
0x3de: JUMP 0x726
---
Entry stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]

================================

Block 0x3df
[0x3df:0x3ea]
---
Predecessors: [0x21e]
Successors: [0x3eb, 0x421]
---
0x3df JUMPDEST
0x3e0 PUSH1 0xc
0x3e2 SLOAD
0x3e3 PUSH1 0xff
0x3e5 AND
0x3e6 ISZERO
0x3e7 PUSH2 0x421
0x3ea JUMPI
---
0x3df: JUMPDEST 
0x3e0: V378 = 0xc
0x3e2: V379 = S[0xc]
0x3e3: V380 = 0xff
0x3e5: V381 = AND 0xff V379
0x3e6: V382 = ISZERO V381
0x3e7: V383 = 0x421
0x3ea: JUMPI 0x421 V382
---
Entry stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]

================================

Block 0x3eb
[0x3eb:0x417]
---
Predecessors: [0x3df]
Successors: [0x219, 0x418]
---
0x3eb PUSH1 0x1
0x3ed PUSH1 0xa0
0x3ef PUSH1 0x2
0x3f1 EXP
0x3f2 SUB
0x3f3 CALLER
0x3f4 AND
0x3f5 CALLVALUE
0x3f6 DUP1
0x3f7 ISZERO
0x3f8 PUSH2 0x8fc
0x3fb MUL
0x3fc SWAP1
0x3fd PUSH1 0x40
0x3ff MLOAD
0x400 PUSH1 0x0
0x402 PUSH1 0x40
0x404 MLOAD
0x405 DUP1
0x406 DUP4
0x407 SUB
0x408 DUP2
0x409 DUP6
0x40a DUP9
0x40b DUP9
0x40c CALL
0x40d SWAP4
0x40e POP
0x40f POP
0x410 POP
0x411 POP
0x412 ISZERO
0x413 ISZERO
0x414 PUSH2 0x219
0x417 JUMPI
---
0x3eb: V384 = 0x1
0x3ed: V385 = 0xa0
0x3ef: V386 = 0x2
0x3f1: V387 = EXP 0x2 0xa0
0x3f2: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f3: V389 = CALLER
0x3f4: V390 = AND V389 0xffffffffffffffffffffffffffffffffffffffff
0x3f5: V391 = CALLVALUE
0x3f7: V392 = ISZERO V391
0x3f8: V393 = 0x8fc
0x3fb: V394 = MUL 0x8fc V392
0x3fd: V395 = 0x40
0x3ff: V396 = M[0x40]
0x400: V397 = 0x0
0x402: V398 = 0x40
0x404: V399 = M[0x40]
0x407: V400 = SUB V396 V399
0x40c: V401 = CALL V394 V390 V391 V399 V400 V399 0x0
0x412: V402 = ISZERO V401
0x413: V403 = ISZERO V402
0x414: V404 = 0x219
0x417: JUMPI 0x219 V403
---
Entry stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]

================================

Block 0x418
[0x418:0x41b]
---
Predecessors: [0x3eb]
Successors: []
---
0x418 PUSH1 0x0
0x41a DUP1
0x41b REVERT
---
0x418: V405 = 0x0
0x41b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]

================================

Block 0x41c
[0x41c:0x420]
---
Predecessors: []
Successors: [0x726]
---
0x41c JUMPDEST
0x41d PUSH2 0x726
0x420 JUMP
---
0x41c: JUMPDEST 
0x41d: V406 = 0x726
0x420: JUMP 0x726
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x421
[0x421:0x42f]
---
Predecessors: [0x3df]
Successors: [0x430, 0x431]
---
0x421 JUMPDEST
0x422 PUSH1 0x9
0x424 SLOAD
0x425 PUSH1 0x8
0x427 SLOAD
0x428 CALLVALUE
0x429 DUP2
0x42a ISZERO
0x42b ISZERO
0x42c PUSH2 0x431
0x42f JUMPI
---
0x421: JUMPDEST 
0x422: V407 = 0x9
0x424: V408 = S[0x9]
0x425: V409 = 0x8
0x427: V410 = S[0x8]
0x428: V411 = CALLVALUE
0x42a: V412 = ISZERO V410
0x42b: V413 = ISZERO V412
0x42c: V414 = 0x431
0x42f: JUMPI 0x431 V413
---
Entry stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: [V408, V410, V411]
Exit stack: [V12, 0x0, 0x0, S3, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0, V408, V410, V411]

================================

Block 0x430
[0x430:0x430]
---
Predecessors: [0x421]
Successors: []
---
0x430 INVALID
---
0x430: INVALID 
---
Entry stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3, V408, V410, V411]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3, V408, V410, V411]

================================

Block 0x431
[0x431:0x43d]
---
Predecessors: [0x421]
Successors: [0x43e, 0x46f]
---
0x431 JUMPDEST
0x432 DIV
0x433 MUL
0x434 SWAP3
0x435 POP
0x436 PUSH1 0x0
0x438 DUP4
0x439 GT
0x43a PUSH2 0x46f
0x43d JUMPI
---
0x431: JUMPDEST 
0x432: V415 = DIV V411 V410
0x433: V416 = MUL V415 V408
0x436: V417 = 0x0
0x439: V418 = GT V416 0x0
0x43a: V419 = 0x46f
0x43d: JUMPI 0x46f V418
---
Entry stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3, V408, V410, V411]
Stack pops: 6
Stack additions: [V416, S4, S3]
Exit stack: [V12, 0x0, 0x0, S6, V416, {0x0, 0x7}, S3]

================================

Block 0x43e
[0x43e:0x46a]
---
Predecessors: [0x431]
Successors: [0x46b, 0x46f]
---
0x43e PUSH1 0x1
0x440 PUSH1 0xa0
0x442 PUSH1 0x2
0x444 EXP
0x445 SUB
0x446 CALLER
0x447 AND
0x448 CALLVALUE
0x449 DUP1
0x44a ISZERO
0x44b PUSH2 0x8fc
0x44e MUL
0x44f SWAP1
0x450 PUSH1 0x40
0x452 MLOAD
0x453 PUSH1 0x0
0x455 PUSH1 0x40
0x457 MLOAD
0x458 DUP1
0x459 DUP4
0x45a SUB
0x45b DUP2
0x45c DUP6
0x45d DUP9
0x45e DUP9
0x45f CALL
0x460 SWAP4
0x461 POP
0x462 POP
0x463 POP
0x464 POP
0x465 ISZERO
0x466 ISZERO
0x467 PUSH2 0x46f
0x46a JUMPI
---
0x43e: V420 = 0x1
0x440: V421 = 0xa0
0x442: V422 = 0x2
0x444: V423 = EXP 0x2 0xa0
0x445: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x446: V425 = CALLER
0x447: V426 = AND V425 0xffffffffffffffffffffffffffffffffffffffff
0x448: V427 = CALLVALUE
0x44a: V428 = ISZERO V427
0x44b: V429 = 0x8fc
0x44e: V430 = MUL 0x8fc V428
0x450: V431 = 0x40
0x452: V432 = M[0x40]
0x453: V433 = 0x0
0x455: V434 = 0x40
0x457: V435 = M[0x40]
0x45a: V436 = SUB V432 V435
0x45f: V437 = CALL V430 V426 V427 V435 V436 V435 0x0
0x465: V438 = ISZERO V437
0x466: V439 = ISZERO V438
0x467: V440 = 0x46f
0x46a: JUMPI 0x46f V439
---
Entry stack: [V12, 0x0, 0x0, S3, V416, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, V416, {0x0, 0x7}, S0]

================================

Block 0x46b
[0x46b:0x46e]
---
Predecessors: [0x43e]
Successors: []
---
0x46b PUSH1 0x0
0x46d DUP1
0x46e REVERT
---
0x46b: V441 = 0x0
0x46e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S3, V416, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, V416, {0x0, 0x7}, S0]

================================

Block 0x46f
[0x46f:0x46f]
---
Predecessors: [0x431, 0x43e]
Successors: [0x470]
---
0x46f JUMPDEST
---
0x46f: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x0, S3, V416, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, V416, {0x0, 0x7}, S0]

================================

Block 0x470
[0x470:0x478]
---
Predecessors: [0x46f]
Successors: [0x479, 0x47d]
---
0x470 JUMPDEST
0x471 PUSH1 0x0
0x473 DUP4
0x474 GT
0x475 PUSH2 0x47d
0x478 JUMPI
---
0x470: JUMPDEST 
0x471: V442 = 0x0
0x474: V443 = GT V416 0x0
0x475: V444 = 0x47d
0x478: JUMPI 0x47d V443
---
Entry stack: [V12, 0x0, 0x0, S3, V416, {0x0, 0x7}, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x0, 0x0, S3, V416, {0x0, 0x7}, S0]

================================

Block 0x479
[0x479:0x47c]
---
Predecessors: [0x470]
Successors: []
---
0x479 PUSH1 0x0
0x47b DUP1
0x47c REVERT
---
0x479: V445 = 0x0
0x47c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S3, V416, {0x0, 0x7}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, V416, {0x0, 0x7}, S0]

================================

Block 0x47d
[0x47d:0x48c]
---
Predecessors: [0x470]
Successors: [0x48d, 0x48e]
---
0x47d JUMPDEST
0x47e PUSH1 0x9
0x480 SLOAD
0x481 PUSH1 0x8
0x483 SLOAD
0x484 DUP5
0x485 MUL
0x486 DUP2
0x487 ISZERO
0x488 ISZERO
0x489 PUSH2 0x48e
0x48c JUMPI
---
0x47d: JUMPDEST 
0x47e: V446 = 0x9
0x480: V447 = S[0x9]
0x481: V448 = 0x8
0x483: V449 = S[0x8]
0x485: V450 = MUL V416 V449
0x487: V451 = ISZERO V447
0x488: V452 = ISZERO V451
0x489: V453 = 0x48e
0x48c: JUMPI 0x48e V452
---
Entry stack: [V12, 0x0, 0x0, S3, V416, {0x0, 0x7}, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V447, V450]
Exit stack: [V12, 0x0, 0x0, S3, V416, {0x0, 0x7}, S0, V447, V450]

================================

Block 0x48d
[0x48d:0x48d]
---
Predecessors: [0x47d]
Successors: []
---
0x48d INVALID
---
0x48d: INVALID 
---
Entry stack: [V12, 0x0, 0x0, S5, V416, {0x0, 0x7}, S2, V447, V450]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S5, V416, {0x0, 0x7}, S2, V447, V450]

================================

Block 0x48e
[0x48e:0x49c]
---
Predecessors: [0x47d]
Successors: [0x49d, 0x5a3]
---
0x48e JUMPDEST
0x48f DIV
0x490 SWAP2
0x491 POP
0x492 DUP3
0x493 PUSH1 0xb
0x495 SLOAD
0x496 LT
0x497 ISZERO
0x498 ISZERO
0x499 PUSH2 0x5a3
0x49c JUMPI
---
0x48e: JUMPDEST 
0x48f: V454 = DIV V450 V447
0x493: V455 = 0xb
0x495: V456 = S[0xb]
0x496: V457 = LT V456 V416
0x497: V458 = ISZERO V457
0x498: V459 = ISZERO V458
0x499: V460 = 0x5a3
0x49c: JUMPI 0x5a3 V459
---
Entry stack: [V12, 0x0, 0x0, S5, V416, {0x0, 0x7}, S2, V447, V450]
Stack pops: 5
Stack additions: [S4, V454, S2]
Exit stack: [V12, 0x0, 0x0, S5, V416, V454, S2]

================================

Block 0x49d
[0x49d:0x4ca]
---
Predecessors: [0x48e]
Successors: [0x4cb, 0x4cf]
---
0x49d PUSH1 0x1
0x49f SLOAD
0x4a0 PUSH1 0x1
0x4a2 PUSH1 0xa0
0x4a4 PUSH1 0x2
0x4a6 EXP
0x4a7 SUB
0x4a8 AND
0x4a9 DUP3
0x4aa ISZERO
0x4ab PUSH2 0x8fc
0x4ae MUL
0x4af DUP4
0x4b0 PUSH1 0x40
0x4b2 MLOAD
0x4b3 PUSH1 0x0
0x4b5 PUSH1 0x40
0x4b7 MLOAD
0x4b8 DUP1
0x4b9 DUP4
0x4ba SUB
0x4bb DUP2
0x4bc DUP6
0x4bd DUP9
0x4be DUP9
0x4bf CALL
0x4c0 SWAP4
0x4c1 POP
0x4c2 POP
0x4c3 POP
0x4c4 POP
0x4c5 ISZERO
0x4c6 ISZERO
0x4c7 PUSH2 0x4cf
0x4ca JUMPI
---
0x49d: V461 = 0x1
0x49f: V462 = S[0x1]
0x4a0: V463 = 0x1
0x4a2: V464 = 0xa0
0x4a4: V465 = 0x2
0x4a6: V466 = EXP 0x2 0xa0
0x4a7: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a8: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x4aa: V469 = ISZERO V454
0x4ab: V470 = 0x8fc
0x4ae: V471 = MUL 0x8fc V469
0x4b0: V472 = 0x40
0x4b2: V473 = M[0x40]
0x4b3: V474 = 0x0
0x4b5: V475 = 0x40
0x4b7: V476 = M[0x40]
0x4ba: V477 = SUB V473 V476
0x4bf: V478 = CALL V471 V468 V454 V476 V477 V476 0x0
0x4c5: V479 = ISZERO V478
0x4c6: V480 = ISZERO V479
0x4c7: V481 = 0x4cf
0x4ca: JUMPI 0x4cf V480
---
Entry stack: [V12, 0x0, 0x0, S3, V416, V454, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x0, 0x0, S3, V416, V454, S0]

================================

Block 0x4cb
[0x4cb:0x4ce]
---
Predecessors: [0x49d]
Successors: []
---
0x4cb PUSH1 0x0
0x4cd DUP1
0x4ce REVERT
---
0x4cb: V482 = 0x0
0x4ce: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S3, V416, V454, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, V416, V454, S0]

================================

Block 0x4cf
[0x4cf:0x4d7]
---
Predecessors: [0x49d]
Successors: [0x4d8, 0x50c]
---
0x4cf JUMPDEST
0x4d0 DUP2
0x4d1 CALLVALUE
0x4d2 GT
0x4d3 ISZERO
0x4d4 PUSH2 0x50c
0x4d7 JUMPI
---
0x4cf: JUMPDEST 
0x4d1: V483 = CALLVALUE
0x4d2: V484 = GT V483 V454
0x4d3: V485 = ISZERO V484
0x4d4: V486 = 0x50c
0x4d7: JUMPI 0x50c V485
---
Entry stack: [V12, 0x0, 0x0, S3, V416, V454, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x0, 0x0, S3, V416, V454, S0]

================================

Block 0x4d8
[0x4d8:0x507]
---
Predecessors: [0x4cf]
Successors: [0x508, 0x50c]
---
0x4d8 CALLER
0x4d9 PUSH1 0x1
0x4db PUSH1 0xa0
0x4dd PUSH1 0x2
0x4df EXP
0x4e0 SUB
0x4e1 AND
0x4e2 PUSH2 0x8fc
0x4e5 DUP4
0x4e6 CALLVALUE
0x4e7 SUB
0x4e8 SWAP1
0x4e9 DUP2
0x4ea ISZERO
0x4eb MUL
0x4ec SWAP1
0x4ed PUSH1 0x40
0x4ef MLOAD
0x4f0 PUSH1 0x0
0x4f2 PUSH1 0x40
0x4f4 MLOAD
0x4f5 DUP1
0x4f6 DUP4
0x4f7 SUB
0x4f8 DUP2
0x4f9 DUP6
0x4fa DUP9
0x4fb DUP9
0x4fc CALL
0x4fd SWAP4
0x4fe POP
0x4ff POP
0x500 POP
0x501 POP
0x502 ISZERO
0x503 ISZERO
0x504 PUSH2 0x50c
0x507 JUMPI
---
0x4d8: V487 = CALLER
0x4d9: V488 = 0x1
0x4db: V489 = 0xa0
0x4dd: V490 = 0x2
0x4df: V491 = EXP 0x2 0xa0
0x4e0: V492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e1: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x4e2: V494 = 0x8fc
0x4e6: V495 = CALLVALUE
0x4e7: V496 = SUB V495 V454
0x4ea: V497 = ISZERO V496
0x4eb: V498 = MUL V497 0x8fc
0x4ed: V499 = 0x40
0x4ef: V500 = M[0x40]
0x4f0: V501 = 0x0
0x4f2: V502 = 0x40
0x4f4: V503 = M[0x40]
0x4f7: V504 = SUB V500 V503
0x4fc: V505 = CALL V498 V493 V496 V503 V504 V503 0x0
0x502: V506 = ISZERO V505
0x503: V507 = ISZERO V506
0x504: V508 = 0x50c
0x507: JUMPI 0x50c V507
---
Entry stack: [V12, 0x0, 0x0, S3, V416, V454, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x0, 0x0, S3, V416, V454, S0]

================================

Block 0x508
[0x508:0x50b]
---
Predecessors: [0x4d8]
Successors: []
---
0x508 PUSH1 0x0
0x50a DUP1
0x50b REVERT
---
0x508: V509 = 0x0
0x50b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S3, V416, V454, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, V416, V454, S0]

================================

Block 0x50c
[0x50c:0x50c]
---
Predecessors: [0x4cf, 0x4d8]
Successors: [0x50d]
---
0x50c JUMPDEST
---
0x50c: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x0, S3, V416, V454, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, V416, V454, S0]

================================

Block 0x50d
[0x50d:0x55e]
---
Predecessors: [0x50c]
Successors: [0x55f, 0x563]
---
0x50d JUMPDEST
0x50e PUSH1 0x0
0x510 SLOAD
0x511 PUSH1 0x1
0x513 PUSH1 0xa0
0x515 PUSH1 0x2
0x517 EXP
0x518 SUB
0x519 AND
0x51a PUSH4 0xa9059cbb
0x51f CALLER
0x520 DUP6
0x521 PUSH1 0x40
0x523 MLOAD
0x524 PUSH1 0xe0
0x526 PUSH1 0x2
0x528 EXP
0x529 PUSH4 0xffffffff
0x52e DUP6
0x52f AND
0x530 MUL
0x531 DUP2
0x532 MSTORE
0x533 PUSH1 0x1
0x535 PUSH1 0xa0
0x537 PUSH1 0x2
0x539 EXP
0x53a SUB
0x53b SWAP1
0x53c SWAP3
0x53d AND
0x53e PUSH1 0x4
0x540 DUP4
0x541 ADD
0x542 MSTORE
0x543 PUSH1 0x24
0x545 DUP3
0x546 ADD
0x547 MSTORE
0x548 PUSH1 0x44
0x54a ADD
0x54b PUSH1 0x0
0x54d PUSH1 0x40
0x54f MLOAD
0x550 DUP1
0x551 DUP4
0x552 SUB
0x553 DUP2
0x554 PUSH1 0x0
0x556 DUP8
0x557 DUP1
0x558 EXTCODESIZE
0x559 ISZERO
0x55a ISZERO
0x55b PUSH2 0x563
0x55e JUMPI
---
0x50d: JUMPDEST 
0x50e: V510 = 0x0
0x510: V511 = S[0x0]
0x511: V512 = 0x1
0x513: V513 = 0xa0
0x515: V514 = 0x2
0x517: V515 = EXP 0x2 0xa0
0x518: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x519: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x51a: V518 = 0xa9059cbb
0x51f: V519 = CALLER
0x521: V520 = 0x40
0x523: V521 = M[0x40]
0x524: V522 = 0xe0
0x526: V523 = 0x2
0x528: V524 = EXP 0x2 0xe0
0x529: V525 = 0xffffffff
0x52f: V526 = AND 0xa9059cbb 0xffffffff
0x530: V527 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x532: M[V521] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x533: V528 = 0x1
0x535: V529 = 0xa0
0x537: V530 = 0x2
0x539: V531 = EXP 0x2 0xa0
0x53a: V532 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53d: V533 = AND V519 0xffffffffffffffffffffffffffffffffffffffff
0x53e: V534 = 0x4
0x541: V535 = ADD V521 0x4
0x542: M[V535] = V533
0x543: V536 = 0x24
0x546: V537 = ADD V521 0x24
0x547: M[V537] = V416
0x548: V538 = 0x44
0x54a: V539 = ADD 0x44 V521
0x54b: V540 = 0x0
0x54d: V541 = 0x40
0x54f: V542 = M[0x40]
0x552: V543 = SUB V539 V542
0x554: V544 = 0x0
0x558: V545 = EXTCODESIZE V517
0x559: V546 = ISZERO V545
0x55a: V547 = ISZERO V546
0x55b: V548 = 0x563
0x55e: JUMPI 0x563 V547
---
Entry stack: [V12, 0x0, 0x0, S3, V416, V454, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V517, 0xa9059cbb, V539, 0x0, V542, V543, V542, 0x0, V517]
Exit stack: [V12, 0x0, 0x0, S3, V416, V454, S0, V517, 0xa9059cbb, V539, 0x0, V542, V543, V542, 0x0, V517]

================================

Block 0x55f
[0x55f:0x562]
---
Predecessors: [0x50d]
Successors: []
---
0x55f PUSH1 0x0
0x561 DUP1
0x562 REVERT
---
0x55f: V549 = 0x0
0x562: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S12, V416, V454, S9, V517, 0xa9059cbb, V539, 0x0, V542, V543, V542, 0x0, V517]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S12, V416, V454, S9, V517, 0xa9059cbb, V539, 0x0, V542, V543, V542, 0x0, V517]

================================

Block 0x563
[0x563:0x56f]
---
Predecessors: [0x50d]
Successors: [0x570, 0x574]
---
0x563 JUMPDEST
0x564 PUSH2 0x2c6
0x567 GAS
0x568 SUB
0x569 CALL
0x56a ISZERO
0x56b ISZERO
0x56c PUSH2 0x574
0x56f JUMPI
---
0x563: JUMPDEST 
0x564: V550 = 0x2c6
0x567: V551 = GAS
0x568: V552 = SUB V551 0x2c6
0x569: V553 = CALL V552 V517 0x0 V542 V543 V542 0x0
0x56a: V554 = ISZERO V553
0x56b: V555 = ISZERO V554
0x56c: V556 = 0x574
0x56f: JUMPI 0x574 V555
---
Entry stack: [V12, 0x0, 0x0, S12, V416, V454, S9, V517, 0xa9059cbb, V539, 0x0, V542, V543, V542, 0x0, V517]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S12, V416, V454, S9, V517, 0xa9059cbb, V539]

================================

Block 0x570
[0x570:0x573]
---
Predecessors: [0x563]
Successors: []
---
0x570 PUSH1 0x0
0x572 DUP1
0x573 REVERT
---
0x570: V557 = 0x0
0x573: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S6, V416, V454, S3, V517, 0xa9059cbb, V539]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S6, V416, V454, S3, V517, 0xa9059cbb, V539]

================================

Block 0x574
[0x574:0x590]
---
Predecessors: [0x563]
Successors: [0x219, 0x591]
---
0x574 JUMPDEST
0x575 POP
0x576 POP
0x577 PUSH1 0xa
0x579 DUP1
0x57a SLOAD
0x57b DUP6
0x57c ADD
0x57d SWAP1
0x57e SSTORE
0x57f POP
0x580 PUSH1 0xb
0x582 DUP1
0x583 SLOAD
0x584 DUP5
0x585 SWAP1
0x586 SUB
0x587 SWAP1
0x588 DUP2
0x589 SWAP1
0x58a SSTORE
0x58b ISZERO
0x58c ISZERO
0x58d PUSH2 0x219
0x590 JUMPI
---
0x574: JUMPDEST 
0x577: V558 = 0xa
0x57a: V559 = S[0xa]
0x57c: V560 = ADD V416 V559
0x57e: S[0xa] = V560
0x580: V561 = 0xb
0x583: V562 = S[0xb]
0x586: V563 = SUB V562 V416
0x58a: S[0xb] = V563
0x58b: V564 = ISZERO V563
0x58c: V565 = ISZERO V564
0x58d: V566 = 0x219
0x590: JUMPI 0x219 V565
---
Entry stack: [V12, 0x0, 0x0, S6, V416, V454, S3, V517, 0xa9059cbb, V539]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, 0x0, 0x0, S6, V416, V454, S3]

================================

Block 0x591
[0x591:0x59d]
---
Predecessors: [0x574]
Successors: [0x59e]
---
0x591 PUSH1 0xc
0x593 DUP1
0x594 SLOAD
0x595 PUSH1 0xff
0x597 NOT
0x598 AND
0x599 PUSH1 0x1
0x59b OR
0x59c SWAP1
0x59d SSTORE
---
0x591: V567 = 0xc
0x594: V568 = S[0xc]
0x595: V569 = 0xff
0x597: V570 = NOT 0xff
0x598: V571 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V568
0x599: V572 = 0x1
0x59b: V573 = OR 0x1 V571
0x59d: S[0xc] = V573
---
Entry stack: [V12, 0x0, 0x0, S3, V416, V454, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, V416, V454, S0]

================================

Block 0x59e
[0x59e:0x5a2]
---
Predecessors: [0x591]
Successors: [0x726]
---
0x59e JUMPDEST
0x59f PUSH2 0x726
0x5a2 JUMP
---
0x59e: JUMPDEST 
0x59f: V574 = 0x726
0x5a2: JUMP 0x726
---
Entry stack: [V12, 0x0, 0x0, S3, V416, V454, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, V416, V454, S0]

================================

Block 0x5a3
[0x5a3:0x5b4]
---
Predecessors: [0x48e]
Successors: [0x5b5, 0x5b6]
---
0x5a3 JUMPDEST
0x5a4 PUSH1 0x9
0x5a6 SLOAD
0x5a7 PUSH1 0x8
0x5a9 SLOAD
0x5aa PUSH1 0xb
0x5ac SLOAD
0x5ad MUL
0x5ae DUP2
0x5af ISZERO
0x5b0 ISZERO
0x5b1 PUSH2 0x5b6
0x5b4 JUMPI
---
0x5a3: JUMPDEST 
0x5a4: V575 = 0x9
0x5a6: V576 = S[0x9]
0x5a7: V577 = 0x8
0x5a9: V578 = S[0x8]
0x5aa: V579 = 0xb
0x5ac: V580 = S[0xb]
0x5ad: V581 = MUL V580 V578
0x5af: V582 = ISZERO V576
0x5b0: V583 = ISZERO V582
0x5b1: V584 = 0x5b6
0x5b4: JUMPI 0x5b6 V583
---
Entry stack: [V12, 0x0, 0x0, S3, V416, V454, S0]
Stack pops: 0
Stack additions: [V576, V581]
Exit stack: [V12, 0x0, 0x0, S3, V416, V454, S0, V576, V581]

================================

Block 0x5b5
[0x5b5:0x5b5]
---
Predecessors: [0x5a3]
Successors: []
---
0x5b5 INVALID
---
0x5b5: INVALID 
---
Entry stack: [V12, 0x0, 0x0, S5, V416, V454, S2, V576, V581]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S5, V416, V454, S2, V576, V581]

================================

Block 0x5b6
[0x5b6:0x5e9]
---
Predecessors: [0x5a3]
Successors: [0x5ea, 0x5ee]
---
0x5b6 JUMPDEST
0x5b7 PUSH1 0x1
0x5b9 SLOAD
0x5ba SWAP2
0x5bb SWAP1
0x5bc DIV
0x5bd SWAP2
0x5be POP
0x5bf PUSH1 0x1
0x5c1 PUSH1 0xa0
0x5c3 PUSH1 0x2
0x5c5 EXP
0x5c6 SUB
0x5c7 AND
0x5c8 DUP2
0x5c9 ISZERO
0x5ca PUSH2 0x8fc
0x5cd MUL
0x5ce DUP3
0x5cf PUSH1 0x40
0x5d1 MLOAD
0x5d2 PUSH1 0x0
0x5d4 PUSH1 0x40
0x5d6 MLOAD
0x5d7 DUP1
0x5d8 DUP4
0x5d9 SUB
0x5da DUP2
0x5db DUP6
0x5dc DUP9
0x5dd DUP9
0x5de CALL
0x5df SWAP4
0x5e0 POP
0x5e1 POP
0x5e2 POP
0x5e3 POP
0x5e4 ISZERO
0x5e5 ISZERO
0x5e6 PUSH2 0x5ee
0x5e9 JUMPI
---
0x5b6: JUMPDEST 
0x5b7: V585 = 0x1
0x5b9: V586 = S[0x1]
0x5bc: V587 = DIV V581 V576
0x5bf: V588 = 0x1
0x5c1: V589 = 0xa0
0x5c3: V590 = 0x2
0x5c5: V591 = EXP 0x2 0xa0
0x5c6: V592 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c7: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V586
0x5c9: V594 = ISZERO V587
0x5ca: V595 = 0x8fc
0x5cd: V596 = MUL 0x8fc V594
0x5cf: V597 = 0x40
0x5d1: V598 = M[0x40]
0x5d2: V599 = 0x0
0x5d4: V600 = 0x40
0x5d6: V601 = M[0x40]
0x5d9: V602 = SUB V598 V601
0x5de: V603 = CALL V596 V593 V587 V601 V602 V601 0x0
0x5e4: V604 = ISZERO V603
0x5e5: V605 = ISZERO V604
0x5e6: V606 = 0x5ee
0x5e9: JUMPI 0x5ee V605
---
Entry stack: [V12, 0x0, 0x0, S5, V416, V454, S2, V576, V581]
Stack pops: 3
Stack additions: [V587]
Exit stack: [V12, 0x0, 0x0, S5, V416, V454, V587]

================================

Block 0x5ea
[0x5ea:0x5ed]
---
Predecessors: [0x5b6]
Successors: []
---
0x5ea PUSH1 0x0
0x5ec DUP1
0x5ed REVERT
---
0x5ea: V607 = 0x0
0x5ed: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S3, V416, V454, V587]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, V416, V454, V587]

================================

Block 0x5ee
[0x5ee:0x646]
---
Predecessors: [0x5b6]
Successors: [0x647, 0x64b]
---
0x5ee JUMPDEST
0x5ef PUSH1 0x0
0x5f1 SLOAD
0x5f2 PUSH1 0xb
0x5f4 SLOAD
0x5f5 PUSH1 0x1
0x5f7 PUSH1 0xa0
0x5f9 PUSH1 0x2
0x5fb EXP
0x5fc SUB
0x5fd SWAP1
0x5fe SWAP2
0x5ff AND
0x600 SWAP1
0x601 PUSH4 0xa9059cbb
0x606 SWAP1
0x607 CALLER
0x608 SWAP1
0x609 PUSH1 0x40
0x60b MLOAD
0x60c PUSH1 0xe0
0x60e PUSH1 0x2
0x610 EXP
0x611 PUSH4 0xffffffff
0x616 DUP6
0x617 AND
0x618 MUL
0x619 DUP2
0x61a MSTORE
0x61b PUSH1 0x1
0x61d PUSH1 0xa0
0x61f PUSH1 0x2
0x621 EXP
0x622 SUB
0x623 SWAP1
0x624 SWAP3
0x625 AND
0x626 PUSH1 0x4
0x628 DUP4
0x629 ADD
0x62a MSTORE
0x62b PUSH1 0x24
0x62d DUP3
0x62e ADD
0x62f MSTORE
0x630 PUSH1 0x44
0x632 ADD
0x633 PUSH1 0x0
0x635 PUSH1 0x40
0x637 MLOAD
0x638 DUP1
0x639 DUP4
0x63a SUB
0x63b DUP2
0x63c PUSH1 0x0
0x63e DUP8
0x63f DUP1
0x640 EXTCODESIZE
0x641 ISZERO
0x642 ISZERO
0x643 PUSH2 0x64b
0x646 JUMPI
---
0x5ee: JUMPDEST 
0x5ef: V608 = 0x0
0x5f1: V609 = S[0x0]
0x5f2: V610 = 0xb
0x5f4: V611 = S[0xb]
0x5f5: V612 = 0x1
0x5f7: V613 = 0xa0
0x5f9: V614 = 0x2
0x5fb: V615 = EXP 0x2 0xa0
0x5fc: V616 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ff: V617 = AND V609 0xffffffffffffffffffffffffffffffffffffffff
0x601: V618 = 0xa9059cbb
0x607: V619 = CALLER
0x609: V620 = 0x40
0x60b: V621 = M[0x40]
0x60c: V622 = 0xe0
0x60e: V623 = 0x2
0x610: V624 = EXP 0x2 0xe0
0x611: V625 = 0xffffffff
0x617: V626 = AND 0xa9059cbb 0xffffffff
0x618: V627 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x61a: M[V621] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x61b: V628 = 0x1
0x61d: V629 = 0xa0
0x61f: V630 = 0x2
0x621: V631 = EXP 0x2 0xa0
0x622: V632 = SUB 0x10000000000000000000000000000000000000000 0x1
0x625: V633 = AND V619 0xffffffffffffffffffffffffffffffffffffffff
0x626: V634 = 0x4
0x629: V635 = ADD V621 0x4
0x62a: M[V635] = V633
0x62b: V636 = 0x24
0x62e: V637 = ADD V621 0x24
0x62f: M[V637] = V611
0x630: V638 = 0x44
0x632: V639 = ADD 0x44 V621
0x633: V640 = 0x0
0x635: V641 = 0x40
0x637: V642 = M[0x40]
0x63a: V643 = SUB V639 V642
0x63c: V644 = 0x0
0x640: V645 = EXTCODESIZE V617
0x641: V646 = ISZERO V645
0x642: V647 = ISZERO V646
0x643: V648 = 0x64b
0x646: JUMPI 0x64b V647
---
Entry stack: [V12, 0x0, 0x0, S3, V416, V454, V587]
Stack pops: 0
Stack additions: [V617, 0xa9059cbb, V639, 0x0, V642, V643, V642, 0x0, V617]
Exit stack: [V12, 0x0, 0x0, S3, V416, V454, V587, V617, 0xa9059cbb, V639, 0x0, V642, V643, V642, 0x0, V617]

================================

Block 0x647
[0x647:0x64a]
---
Predecessors: [0x5ee]
Successors: []
---
0x647 PUSH1 0x0
0x649 DUP1
0x64a REVERT
---
0x647: V649 = 0x0
0x64a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S12, V416, V454, V587, V617, 0xa9059cbb, V639, 0x0, V642, V643, V642, 0x0, V617]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S12, V416, V454, V587, V617, 0xa9059cbb, V639, 0x0, V642, V643, V642, 0x0, V617]

================================

Block 0x64b
[0x64b:0x657]
---
Predecessors: [0x5ee]
Successors: [0x658, 0x65c]
---
0x64b JUMPDEST
0x64c PUSH2 0x2c6
0x64f GAS
0x650 SUB
0x651 CALL
0x652 ISZERO
0x653 ISZERO
0x654 PUSH2 0x65c
0x657 JUMPI
---
0x64b: JUMPDEST 
0x64c: V650 = 0x2c6
0x64f: V651 = GAS
0x650: V652 = SUB V651 0x2c6
0x651: V653 = CALL V652 V617 0x0 V642 V643 V642 0x0
0x652: V654 = ISZERO V653
0x653: V655 = ISZERO V654
0x654: V656 = 0x65c
0x657: JUMPI 0x65c V655
---
Entry stack: [V12, 0x0, 0x0, S12, V416, V454, V587, V617, 0xa9059cbb, V639, 0x0, V642, V643, V642, 0x0, V617]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S12, V416, V454, V587, V617, 0xa9059cbb, V639]

================================

Block 0x658
[0x658:0x65b]
---
Predecessors: [0x64b]
Successors: []
---
0x658 PUSH1 0x0
0x65a DUP1
0x65b REVERT
---
0x658: V657 = 0x0
0x65b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S6, V416, V454, V587, V617, 0xa9059cbb, V639]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S6, V416, V454, V587, V617, 0xa9059cbb, V639]

================================

Block 0x65c
[0x65c:0x68f]
---
Predecessors: [0x64b]
Successors: [0x690, 0x694]
---
0x65c JUMPDEST
0x65d POP
0x65e POP
0x65f POP
0x660 CALLER
0x661 PUSH1 0x1
0x663 PUSH1 0xa0
0x665 PUSH1 0x2
0x667 EXP
0x668 SUB
0x669 AND
0x66a PUSH2 0x8fc
0x66d DUP3
0x66e CALLVALUE
0x66f SUB
0x670 SWAP1
0x671 DUP2
0x672 ISZERO
0x673 MUL
0x674 SWAP1
0x675 PUSH1 0x40
0x677 MLOAD
0x678 PUSH1 0x0
0x67a PUSH1 0x40
0x67c MLOAD
0x67d DUP1
0x67e DUP4
0x67f SUB
0x680 DUP2
0x681 DUP6
0x682 DUP9
0x683 DUP9
0x684 CALL
0x685 SWAP4
0x686 POP
0x687 POP
0x688 POP
0x689 POP
0x68a ISZERO
0x68b ISZERO
0x68c PUSH2 0x694
0x68f JUMPI
---
0x65c: JUMPDEST 
0x660: V658 = CALLER
0x661: V659 = 0x1
0x663: V660 = 0xa0
0x665: V661 = 0x2
0x667: V662 = EXP 0x2 0xa0
0x668: V663 = SUB 0x10000000000000000000000000000000000000000 0x1
0x669: V664 = AND 0xffffffffffffffffffffffffffffffffffffffff V658
0x66a: V665 = 0x8fc
0x66e: V666 = CALLVALUE
0x66f: V667 = SUB V666 V587
0x672: V668 = ISZERO V667
0x673: V669 = MUL V668 0x8fc
0x675: V670 = 0x40
0x677: V671 = M[0x40]
0x678: V672 = 0x0
0x67a: V673 = 0x40
0x67c: V674 = M[0x40]
0x67f: V675 = SUB V671 V674
0x684: V676 = CALL V669 V664 V667 V674 V675 V674 0x0
0x68a: V677 = ISZERO V676
0x68b: V678 = ISZERO V677
0x68c: V679 = 0x694
0x68f: JUMPI 0x694 V678
---
Entry stack: [V12, 0x0, 0x0, S6, V416, V454, V587, V617, 0xa9059cbb, V639]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x0, 0x0, S6, V416, V454, V587]

================================

Block 0x690
[0x690:0x693]
---
Predecessors: [0x65c]
Successors: []
---
0x690 PUSH1 0x0
0x692 DUP1
0x693 REVERT
---
0x690: V680 = 0x0
0x693: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S3, V416, V454, V587]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, V416, V454, V587]

================================

Block 0x694
[0x694:0x6f6]
---
Predecessors: [0x65c]
Successors: [0x6f7, 0x6fb]
---
0x694 JUMPDEST
0x695 PUSH1 0xb
0x697 SLOAD
0x698 PUSH1 0xa
0x69a DUP1
0x69b SLOAD
0x69c SWAP1
0x69d SWAP2
0x69e ADD
0x69f SWAP1
0x6a0 SSTORE
0x6a1 PUSH1 0x0
0x6a3 DUP1
0x6a4 SLOAD
0x6a5 PUSH1 0x1
0x6a7 PUSH1 0xa0
0x6a9 PUSH1 0x2
0x6ab EXP
0x6ac SUB
0x6ad AND
0x6ae SWAP1
0x6af PUSH4 0x70a08231
0x6b4 SWAP1
0x6b5 ADDRESS
0x6b6 SWAP1
0x6b7 PUSH1 0x40
0x6b9 MLOAD
0x6ba PUSH1 0x20
0x6bc ADD
0x6bd MSTORE
0x6be PUSH1 0x40
0x6c0 MLOAD
0x6c1 PUSH1 0xe0
0x6c3 PUSH1 0x2
0x6c5 EXP
0x6c6 PUSH4 0xffffffff
0x6cb DUP5
0x6cc AND
0x6cd MUL
0x6ce DUP2
0x6cf MSTORE
0x6d0 PUSH1 0x1
0x6d2 PUSH1 0xa0
0x6d4 PUSH1 0x2
0x6d6 EXP
0x6d7 SUB
0x6d8 SWAP1
0x6d9 SWAP2
0x6da AND
0x6db PUSH1 0x4
0x6dd DUP3
0x6de ADD
0x6df MSTORE
0x6e0 PUSH1 0x24
0x6e2 ADD
0x6e3 PUSH1 0x20
0x6e5 PUSH1 0x40
0x6e7 MLOAD
0x6e8 DUP1
0x6e9 DUP4
0x6ea SUB
0x6eb DUP2
0x6ec PUSH1 0x0
0x6ee DUP8
0x6ef DUP1
0x6f0 EXTCODESIZE
0x6f1 ISZERO
0x6f2 ISZERO
0x6f3 PUSH2 0x6fb
0x6f6 JUMPI
---
0x694: JUMPDEST 
0x695: V681 = 0xb
0x697: V682 = S[0xb]
0x698: V683 = 0xa
0x69b: V684 = S[0xa]
0x69e: V685 = ADD V682 V684
0x6a0: S[0xa] = V685
0x6a1: V686 = 0x0
0x6a4: V687 = S[0x0]
0x6a5: V688 = 0x1
0x6a7: V689 = 0xa0
0x6a9: V690 = 0x2
0x6ab: V691 = EXP 0x2 0xa0
0x6ac: V692 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ad: V693 = AND 0xffffffffffffffffffffffffffffffffffffffff V687
0x6af: V694 = 0x70a08231
0x6b5: V695 = ADDRESS
0x6b7: V696 = 0x40
0x6b9: V697 = M[0x40]
0x6ba: V698 = 0x20
0x6bc: V699 = ADD 0x20 V697
0x6bd: M[V699] = 0x0
0x6be: V700 = 0x40
0x6c0: V701 = M[0x40]
0x6c1: V702 = 0xe0
0x6c3: V703 = 0x2
0x6c5: V704 = EXP 0x2 0xe0
0x6c6: V705 = 0xffffffff
0x6cc: V706 = AND 0x70a08231 0xffffffff
0x6cd: V707 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x6cf: M[V701] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6d0: V708 = 0x1
0x6d2: V709 = 0xa0
0x6d4: V710 = 0x2
0x6d6: V711 = EXP 0x2 0xa0
0x6d7: V712 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6da: V713 = AND V695 0xffffffffffffffffffffffffffffffffffffffff
0x6db: V714 = 0x4
0x6de: V715 = ADD V701 0x4
0x6df: M[V715] = V713
0x6e0: V716 = 0x24
0x6e2: V717 = ADD 0x24 V701
0x6e3: V718 = 0x20
0x6e5: V719 = 0x40
0x6e7: V720 = M[0x40]
0x6ea: V721 = SUB V717 V720
0x6ec: V722 = 0x0
0x6f0: V723 = EXTCODESIZE V693
0x6f1: V724 = ISZERO V723
0x6f2: V725 = ISZERO V724
0x6f3: V726 = 0x6fb
0x6f6: JUMPI 0x6fb V725
---
Entry stack: [V12, 0x0, 0x0, S3, V416, V454, V587]
Stack pops: 0
Stack additions: [V693, 0x70a08231, V717, 0x20, V720, V721, V720, 0x0, V693]
Exit stack: [V12, 0x0, 0x0, S3, V416, V454, V587, V693, 0x70a08231, V717, 0x20, V720, V721, V720, 0x0, V693]

================================

Block 0x6f7
[0x6f7:0x6fa]
---
Predecessors: [0x694]
Successors: []
---
0x6f7 PUSH1 0x0
0x6f9 DUP1
0x6fa REVERT
---
0x6f7: V727 = 0x0
0x6fa: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S12, V416, V454, V587, V693, 0x70a08231, V717, 0x20, V720, V721, V720, 0x0, V693]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S12, V416, V454, V587, V693, 0x70a08231, V717, 0x20, V720, V721, V720, 0x0, V693]

================================

Block 0x6fb
[0x6fb:0x707]
---
Predecessors: [0x694]
Successors: [0x708, 0x70c]
---
0x6fb JUMPDEST
0x6fc PUSH2 0x2c6
0x6ff GAS
0x700 SUB
0x701 CALL
0x702 ISZERO
0x703 ISZERO
0x704 PUSH2 0x70c
0x707 JUMPI
---
0x6fb: JUMPDEST 
0x6fc: V728 = 0x2c6
0x6ff: V729 = GAS
0x700: V730 = SUB V729 0x2c6
0x701: V731 = CALL V730 V693 0x0 V720 V721 V720 0x20
0x702: V732 = ISZERO V731
0x703: V733 = ISZERO V732
0x704: V734 = 0x70c
0x707: JUMPI 0x70c V733
---
Entry stack: [V12, 0x0, 0x0, S12, V416, V454, V587, V693, 0x70a08231, V717, 0x20, V720, V721, V720, 0x0, V693]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S12, V416, V454, V587, V693, 0x70a08231, V717]

================================

Block 0x708
[0x708:0x70b]
---
Predecessors: [0x6fb]
Successors: []
---
0x708 PUSH1 0x0
0x70a DUP1
0x70b REVERT
---
0x708: V735 = 0x0
0x70b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, S6, V416, V454, V587, V693, 0x70a08231, V717]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S6, V416, V454, V587, V693, 0x70a08231, V717]

================================

Block 0x70c
[0x70c:0x725]
---
Predecessors: [0x6fb]
Successors: [0x726]
---
0x70c JUMPDEST
0x70d POP
0x70e POP
0x70f POP
0x710 PUSH1 0x40
0x712 MLOAD
0x713 DUP1
0x714 MLOAD
0x715 PUSH1 0xb
0x717 SSTORE
0x718 POP
0x719 PUSH1 0xc
0x71b DUP1
0x71c SLOAD
0x71d PUSH1 0xff
0x71f NOT
0x720 AND
0x721 PUSH1 0x1
0x723 OR
0x724 SWAP1
0x725 SSTORE
---
0x70c: JUMPDEST 
0x710: V736 = 0x40
0x712: V737 = M[0x40]
0x714: V738 = M[V737]
0x715: V739 = 0xb
0x717: S[0xb] = V738
0x719: V740 = 0xc
0x71c: V741 = S[0xc]
0x71d: V742 = 0xff
0x71f: V743 = NOT 0xff
0x720: V744 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V741
0x721: V745 = 0x1
0x723: V746 = OR 0x1 V744
0x725: S[0xc] = V746
---
Entry stack: [V12, 0x0, 0x0, S6, V416, V454, V587, V693, 0x70a08231, V717]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S6, V416, V454, V587]

================================

Block 0x726
[0x726:0x726]
---
Predecessors: [0x219, 0x3da, 0x41c, 0x59e, 0x70c]
Successors: [0x727]
---
0x726 JUMPDEST
---
0x726: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x0, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, S2, S1, S0]

================================

Block 0x727
[0x727:0x727]
---
Predecessors: [0x726]
Successors: [0x728]
---
0x727 JUMPDEST
---
0x727: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x0, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, S2, S1, S0]

================================

Block 0x728
[0x728:0x728]
---
Predecessors: [0x727]
Successors: [0x729]
---
0x728 JUMPDEST
---
0x728: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x0, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, S2, S1, S0]

================================

Block 0x729
[0x729:0x799]
---
Predecessors: [0x728]
Successors: [0x79a]
---
0x729 JUMPDEST
0x72a PUSH32 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x74b PUSH1 0xb
0x74d SLOAD
0x74e PUSH1 0x40
0x750 MLOAD
0x751 SWAP1
0x752 DUP2
0x753 MSTORE
0x754 PUSH1 0x20
0x756 ADD
0x757 PUSH1 0x40
0x759 MLOAD
0x75a DUP1
0x75b SWAP2
0x75c SUB
0x75d SWAP1
0x75e LOG1
0x75f PUSH1 0xc
0x761 SLOAD
0x762 PUSH32 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x783 SWAP1
0x784 PUSH1 0xff
0x786 AND
0x787 PUSH1 0x40
0x789 MLOAD
0x78a SWAP1
0x78b ISZERO
0x78c ISZERO
0x78d DUP2
0x78e MSTORE
0x78f PUSH1 0x20
0x791 ADD
0x792 PUSH1 0x40
0x794 MLOAD
0x795 DUP1
0x796 SWAP2
0x797 SUB
0x798 SWAP1
0x799 LOG1
---
0x729: JUMPDEST 
0x72a: V747 = 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x74b: V748 = 0xb
0x74d: V749 = S[0xb]
0x74e: V750 = 0x40
0x750: V751 = M[0x40]
0x753: M[V751] = V749
0x754: V752 = 0x20
0x756: V753 = ADD 0x20 V751
0x757: V754 = 0x40
0x759: V755 = M[0x40]
0x75c: V756 = SUB V753 V755
0x75e: LOG V755 V756 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x75f: V757 = 0xc
0x761: V758 = S[0xc]
0x762: V759 = 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x784: V760 = 0xff
0x786: V761 = AND 0xff V758
0x787: V762 = 0x40
0x789: V763 = M[0x40]
0x78b: V764 = ISZERO V761
0x78c: V765 = ISZERO V764
0x78e: M[V763] = V765
0x78f: V766 = 0x20
0x791: V767 = ADD 0x20 V763
0x792: V768 = 0x40
0x794: V769 = M[0x40]
0x797: V770 = SUB V767 V769
0x799: LOG V769 V770 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
---
Entry stack: [V12, 0x0, 0x0, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3, S2, S1, S0]

================================

Block 0x79a
[0x79a:0x79e]
---
Predecessors: [0x729]
Successors: []
---
0x79a JUMPDEST
0x79b POP
0x79c POP
0x79d POP
0x79e STOP
---
0x79a: JUMPDEST 
0x79e: STOP 
---
Entry stack: [V12, 0x0, 0x0, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, S3]

================================

Block 0x79f
[0x79f:0x7a5]
---
Predecessors: [0xb]
Successors: [0x7a6, 0x7aa]
---
0x79f JUMPDEST
0x7a0 CALLVALUE
0x7a1 ISZERO
0x7a2 PUSH2 0x7aa
0x7a5 JUMPI
---
0x79f: JUMPDEST 
0x7a0: V771 = CALLVALUE
0x7a1: V772 = ISZERO V771
0x7a2: V773 = 0x7aa
0x7a5: JUMPI 0x7aa V772
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7a6
[0x7a6:0x7a9]
---
Predecessors: [0x79f]
Successors: []
---
0x7a6 PUSH1 0x0
0x7a8 DUP1
0x7a9 REVERT
---
0x7a6: V774 = 0x0
0x7a9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7aa
[0x7aa:0x7b1]
---
Predecessors: [0x79f]
Successors: [0x9e3]
---
0x7aa JUMPDEST
0x7ab PUSH2 0x7b2
0x7ae PUSH2 0x9e3
0x7b1 JUMP
---
0x7aa: JUMPDEST 
0x7ab: V775 = 0x7b2
0x7ae: V776 = 0x9e3
0x7b1: JUMP 0x9e3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7b2]
Exit stack: [V12, 0x7b2]

================================

Block 0x7b2
[0x7b2:0x7cd]
---
Predecessors: [0x9e3, 0xa18, 0xada]
Successors: []
---
0x7b2 JUMPDEST
0x7b3 PUSH1 0x40
0x7b5 MLOAD
0x7b6 PUSH1 0x1
0x7b8 PUSH1 0xa0
0x7ba PUSH1 0x2
0x7bc EXP
0x7bd SUB
0x7be SWAP1
0x7bf SWAP2
0x7c0 AND
0x7c1 DUP2
0x7c2 MSTORE
0x7c3 PUSH1 0x20
0x7c5 ADD
0x7c6 PUSH1 0x40
0x7c8 MLOAD
0x7c9 DUP1
0x7ca SWAP2
0x7cb SUB
0x7cc SWAP1
0x7cd RETURN
---
0x7b2: JUMPDEST 
0x7b3: V777 = 0x40
0x7b5: V778 = M[0x40]
0x7b6: V779 = 0x1
0x7b8: V780 = 0xa0
0x7ba: V781 = 0x2
0x7bc: V782 = EXP 0x2 0xa0
0x7bd: V783 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c0: V784 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x7c2: M[V778] = V784
0x7c3: V785 = 0x20
0x7c5: V786 = ADD 0x20 V778
0x7c6: V787 = 0x40
0x7c8: V788 = M[0x40]
0x7cb: V789 = SUB V786 V788
0x7cd: RETURN V788 V789
---
Entry stack: [V12, 0x7b2, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x7b2]

================================

Block 0x7ce
[0x7ce:0x7d4]
---
Predecessors: [0x25]
Successors: [0x7d5, 0x7d9]
---
0x7ce JUMPDEST
0x7cf CALLVALUE
0x7d0 ISZERO
0x7d1 PUSH2 0x7d9
0x7d4 JUMPI
---
0x7ce: JUMPDEST 
0x7cf: V790 = CALLVALUE
0x7d0: V791 = ISZERO V790
0x7d1: V792 = 0x7d9
0x7d4: JUMPI 0x7d9 V791
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d5
[0x7d5:0x7d8]
---
Predecessors: [0x7ce]
Successors: []
---
0x7d5 PUSH1 0x0
0x7d7 DUP1
0x7d8 REVERT
---
0x7d5: V793 = 0x0
0x7d8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d9
[0x7d9:0x7e0]
---
Predecessors: [0x7ce]
Successors: [0x9f2]
---
0x7d9 JUMPDEST
0x7da PUSH2 0x7e1
0x7dd PUSH2 0x9f2
0x7e0 JUMP
---
0x7d9: JUMPDEST 
0x7da: V794 = 0x7e1
0x7dd: V795 = 0x9f2
0x7e0: JUMP 0x9f2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7e1]
Exit stack: [V12, 0x7e1]

================================

Block 0x7e1
[0x7e1:0x7f2]
---
Predecessors: [0x9f2, 0x9f8, 0x9fe, 0xa12, 0xa27, 0xacb]
Successors: []
---
0x7e1 JUMPDEST
0x7e2 PUSH1 0x40
0x7e4 MLOAD
0x7e5 SWAP1
0x7e6 DUP2
0x7e7 MSTORE
0x7e8 PUSH1 0x20
0x7ea ADD
0x7eb PUSH1 0x40
0x7ed MLOAD
0x7ee DUP1
0x7ef SWAP2
0x7f0 SUB
0x7f1 SWAP1
0x7f2 RETURN
---
0x7e1: JUMPDEST 
0x7e2: V796 = 0x40
0x7e4: V797 = M[0x40]
0x7e7: M[V797] = S0
0x7e8: V798 = 0x20
0x7ea: V799 = ADD 0x20 V797
0x7eb: V800 = 0x40
0x7ed: V801 = M[0x40]
0x7f0: V802 = SUB V799 V801
0x7f2: RETURN V801 V802
---
Entry stack: [V12, 0x7e1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x7e1]

================================

Block 0x7f3
[0x7f3:0x7f9]
---
Predecessors: [0x30]
Successors: [0x7fa, 0x7fe]
---
0x7f3 JUMPDEST
0x7f4 CALLVALUE
0x7f5 ISZERO
0x7f6 PUSH2 0x7fe
0x7f9 JUMPI
---
0x7f3: JUMPDEST 
0x7f4: V803 = CALLVALUE
0x7f5: V804 = ISZERO V803
0x7f6: V805 = 0x7fe
0x7f9: JUMPI 0x7fe V804
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7fa
[0x7fa:0x7fd]
---
Predecessors: [0x7f3]
Successors: []
---
0x7fa PUSH1 0x0
0x7fc DUP1
0x7fd REVERT
---
0x7fa: V806 = 0x0
0x7fd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7fe
[0x7fe:0x805]
---
Predecessors: [0x7f3]
Successors: [0x9f8]
---
0x7fe JUMPDEST
0x7ff PUSH2 0x7e1
0x802 PUSH2 0x9f8
0x805 JUMP
---
0x7fe: JUMPDEST 
0x7ff: V807 = 0x7e1
0x802: V808 = 0x9f8
0x805: JUMP 0x9f8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7e1]
Exit stack: [V12, 0x7e1]

================================

Block 0x806
[0x806:0x817]
---
Predecessors: []
Successors: []
---
0x806 JUMPDEST
0x807 PUSH1 0x40
0x809 MLOAD
0x80a SWAP1
0x80b DUP2
0x80c MSTORE
0x80d PUSH1 0x20
0x80f ADD
0x810 PUSH1 0x40
0x812 MLOAD
0x813 DUP1
0x814 SWAP2
0x815 SUB
0x816 SWAP1
0x817 RETURN
---
0x806: JUMPDEST 
0x807: V809 = 0x40
0x809: V810 = M[0x40]
0x80c: M[V810] = S0
0x80d: V811 = 0x20
0x80f: V812 = ADD 0x20 V810
0x810: V813 = 0x40
0x812: V814 = M[0x40]
0x815: V815 = SUB V812 V814
0x817: RETURN V814 V815
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x818
[0x818:0x81e]
---
Predecessors: [0x3b]
Successors: [0x81f, 0x823]
---
0x818 JUMPDEST
0x819 CALLVALUE
0x81a ISZERO
0x81b PUSH2 0x823
0x81e JUMPI
---
0x818: JUMPDEST 
0x819: V816 = CALLVALUE
0x81a: V817 = ISZERO V816
0x81b: V818 = 0x823
0x81e: JUMPI 0x823 V817
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81f
[0x81f:0x822]
---
Predecessors: [0x818]
Successors: []
---
0x81f PUSH1 0x0
0x821 DUP1
0x822 REVERT
---
0x81f: V819 = 0x0
0x822: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x823
[0x823:0x82a]
---
Predecessors: [0x818]
Successors: [0x9fe]
---
0x823 JUMPDEST
0x824 PUSH2 0x7e1
0x827 PUSH2 0x9fe
0x82a JUMP
---
0x823: JUMPDEST 
0x824: V820 = 0x7e1
0x827: V821 = 0x9fe
0x82a: JUMP 0x9fe
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7e1]
Exit stack: [V12, 0x7e1]

================================

Block 0x82b
[0x82b:0x83c]
---
Predecessors: []
Successors: []
---
0x82b JUMPDEST
0x82c PUSH1 0x40
0x82e MLOAD
0x82f SWAP1
0x830 DUP2
0x831 MSTORE
0x832 PUSH1 0x20
0x834 ADD
0x835 PUSH1 0x40
0x837 MLOAD
0x838 DUP1
0x839 SWAP2
0x83a SUB
0x83b SWAP1
0x83c RETURN
---
0x82b: JUMPDEST 
0x82c: V822 = 0x40
0x82e: V823 = M[0x40]
0x831: M[V823] = S0
0x832: V824 = 0x20
0x834: V825 = ADD 0x20 V823
0x835: V826 = 0x40
0x837: V827 = M[0x40]
0x83a: V828 = SUB V825 V827
0x83c: RETURN V827 V828
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x83d
[0x83d:0x843]
---
Predecessors: [0x46]
Successors: [0x844, 0x848]
---
0x83d JUMPDEST
0x83e CALLVALUE
0x83f ISZERO
0x840 PUSH2 0x848
0x843 JUMPI
---
0x83d: JUMPDEST 
0x83e: V829 = CALLVALUE
0x83f: V830 = ISZERO V829
0x840: V831 = 0x848
0x843: JUMPI 0x848 V830
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x844
[0x844:0x847]
---
Predecessors: [0x83d]
Successors: []
---
0x844 PUSH1 0x0
0x846 DUP1
0x847 REVERT
---
0x844: V832 = 0x0
0x847: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x848
[0x848:0x84f]
---
Predecessors: [0x83d]
Successors: [0xa04]
---
0x848 JUMPDEST
0x849 PUSH2 0x850
0x84c PUSH2 0xa04
0x84f JUMP
---
0x848: JUMPDEST 
0x849: V833 = 0x850
0x84c: V834 = 0xa04
0x84f: JUMP 0xa04
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x850]
Exit stack: [V12, 0x850]

================================

Block 0x850
[0x850:0x863]
---
Predecessors: [0xa04, 0xad1]
Successors: []
---
0x850 JUMPDEST
0x851 PUSH1 0x40
0x853 MLOAD
0x854 SWAP1
0x855 ISZERO
0x856 ISZERO
0x857 DUP2
0x858 MSTORE
0x859 PUSH1 0x20
0x85b ADD
0x85c PUSH1 0x40
0x85e MLOAD
0x85f DUP1
0x860 SWAP2
0x861 SUB
0x862 SWAP1
0x863 RETURN
---
0x850: JUMPDEST 
0x851: V835 = 0x40
0x853: V836 = M[0x40]
0x855: V837 = ISZERO S0
0x856: V838 = ISZERO V837
0x858: M[V836] = V838
0x859: V839 = 0x20
0x85b: V840 = ADD 0x20 V836
0x85c: V841 = 0x40
0x85e: V842 = M[0x40]
0x861: V843 = SUB V840 V842
0x863: RETURN V842 V843
---
Entry stack: [V12, 0x850, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x850]

================================

Block 0x864
[0x864:0x86a]
---
Predecessors: [0x51]
Successors: [0x86b, 0x86f]
---
0x864 JUMPDEST
0x865 CALLVALUE
0x866 ISZERO
0x867 PUSH2 0x86f
0x86a JUMPI
---
0x864: JUMPDEST 
0x865: V844 = CALLVALUE
0x866: V845 = ISZERO V844
0x867: V846 = 0x86f
0x86a: JUMPI 0x86f V845
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x86b
[0x86b:0x86e]
---
Predecessors: [0x864]
Successors: []
---
0x86b PUSH1 0x0
0x86d DUP1
0x86e REVERT
---
0x86b: V847 = 0x0
0x86e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x86f
[0x86f:0x876]
---
Predecessors: [0x864]
Successors: [0xa12]
---
0x86f JUMPDEST
0x870 PUSH2 0x7e1
0x873 PUSH2 0xa12
0x876 JUMP
---
0x86f: JUMPDEST 
0x870: V848 = 0x7e1
0x873: V849 = 0xa12
0x876: JUMP 0xa12
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7e1]
Exit stack: [V12, 0x7e1]

================================

Block 0x877
[0x877:0x888]
---
Predecessors: []
Successors: []
---
0x877 JUMPDEST
0x878 PUSH1 0x40
0x87a MLOAD
0x87b SWAP1
0x87c DUP2
0x87d MSTORE
0x87e PUSH1 0x20
0x880 ADD
0x881 PUSH1 0x40
0x883 MLOAD
0x884 DUP1
0x885 SWAP2
0x886 SUB
0x887 SWAP1
0x888 RETURN
---
0x877: JUMPDEST 
0x878: V850 = 0x40
0x87a: V851 = M[0x40]
0x87d: M[V851] = S0
0x87e: V852 = 0x20
0x880: V853 = ADD 0x20 V851
0x881: V854 = 0x40
0x883: V855 = M[0x40]
0x886: V856 = SUB V853 V855
0x888: RETURN V855 V856
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x889
[0x889:0x88f]
---
Predecessors: [0x5c]
Successors: [0x890, 0x894]
---
0x889 JUMPDEST
0x88a CALLVALUE
0x88b ISZERO
0x88c PUSH2 0x894
0x88f JUMPI
---
0x889: JUMPDEST 
0x88a: V857 = CALLVALUE
0x88b: V858 = ISZERO V857
0x88c: V859 = 0x894
0x88f: JUMPI 0x894 V858
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x890
[0x890:0x893]
---
Predecessors: [0x889]
Successors: []
---
0x890 PUSH1 0x0
0x892 DUP1
0x893 REVERT
---
0x890: V860 = 0x0
0x893: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x894
[0x894:0x89b]
---
Predecessors: [0x889]
Successors: [0xa18]
---
0x894 JUMPDEST
0x895 PUSH2 0x7b2
0x898 PUSH2 0xa18
0x89b JUMP
---
0x894: JUMPDEST 
0x895: V861 = 0x7b2
0x898: V862 = 0xa18
0x89b: JUMP 0xa18
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7b2]
Exit stack: [V12, 0x7b2]

================================

Block 0x89c
[0x89c:0x8b7]
---
Predecessors: []
Successors: []
---
0x89c JUMPDEST
0x89d PUSH1 0x40
0x89f MLOAD
0x8a0 PUSH1 0x1
0x8a2 PUSH1 0xa0
0x8a4 PUSH1 0x2
0x8a6 EXP
0x8a7 SUB
0x8a8 SWAP1
0x8a9 SWAP2
0x8aa AND
0x8ab DUP2
0x8ac MSTORE
0x8ad PUSH1 0x20
0x8af ADD
0x8b0 PUSH1 0x40
0x8b2 MLOAD
0x8b3 DUP1
0x8b4 SWAP2
0x8b5 SUB
0x8b6 SWAP1
0x8b7 RETURN
---
0x89c: JUMPDEST 
0x89d: V863 = 0x40
0x89f: V864 = M[0x40]
0x8a0: V865 = 0x1
0x8a2: V866 = 0xa0
0x8a4: V867 = 0x2
0x8a6: V868 = EXP 0x2 0xa0
0x8a7: V869 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8aa: V870 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x8ac: M[V864] = V870
0x8ad: V871 = 0x20
0x8af: V872 = ADD 0x20 V864
0x8b0: V873 = 0x40
0x8b2: V874 = M[0x40]
0x8b5: V875 = SUB V872 V874
0x8b7: RETURN V874 V875
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8b8
[0x8b8:0x8be]
---
Predecessors: [0x67]
Successors: [0x8bf, 0x8c3]
---
0x8b8 JUMPDEST
0x8b9 CALLVALUE
0x8ba ISZERO
0x8bb PUSH2 0x8c3
0x8be JUMPI
---
0x8b8: JUMPDEST 
0x8b9: V876 = CALLVALUE
0x8ba: V877 = ISZERO V876
0x8bb: V878 = 0x8c3
0x8be: JUMPI 0x8c3 V877
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8bf
[0x8bf:0x8c2]
---
Predecessors: [0x8b8]
Successors: []
---
0x8bf PUSH1 0x0
0x8c1 DUP1
0x8c2 REVERT
---
0x8bf: V879 = 0x0
0x8c2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c3
[0x8c3:0x8ca]
---
Predecessors: [0x8b8]
Successors: [0xa27]
---
0x8c3 JUMPDEST
0x8c4 PUSH2 0x7e1
0x8c7 PUSH2 0xa27
0x8ca JUMP
---
0x8c3: JUMPDEST 
0x8c4: V880 = 0x7e1
0x8c7: V881 = 0xa27
0x8ca: JUMP 0xa27
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7e1]
Exit stack: [V12, 0x7e1]

================================

Block 0x8cb
[0x8cb:0x8dc]
---
Predecessors: []
Successors: []
---
0x8cb JUMPDEST
0x8cc PUSH1 0x40
0x8ce MLOAD
0x8cf SWAP1
0x8d0 DUP2
0x8d1 MSTORE
0x8d2 PUSH1 0x20
0x8d4 ADD
0x8d5 PUSH1 0x40
0x8d7 MLOAD
0x8d8 DUP1
0x8d9 SWAP2
0x8da SUB
0x8db SWAP1
0x8dc RETURN
---
0x8cb: JUMPDEST 
0x8cc: V882 = 0x40
0x8ce: V883 = M[0x40]
0x8d1: M[V883] = S0
0x8d2: V884 = 0x20
0x8d4: V885 = ADD 0x20 V883
0x8d5: V886 = 0x40
0x8d7: V887 = M[0x40]
0x8da: V888 = SUB V885 V887
0x8dc: RETURN V887 V888
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8dd
[0x8dd:0x8e3]
---
Predecessors: [0x72]
Successors: [0x8e4, 0x8e8]
---
0x8dd JUMPDEST
0x8de CALLVALUE
0x8df ISZERO
0x8e0 PUSH2 0x8e8
0x8e3 JUMPI
---
0x8dd: JUMPDEST 
0x8de: V889 = CALLVALUE
0x8df: V890 = ISZERO V889
0x8e0: V891 = 0x8e8
0x8e3: JUMPI 0x8e8 V890
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8e4
[0x8e4:0x8e7]
---
Predecessors: [0x8dd]
Successors: []
---
0x8e4 PUSH1 0x0
0x8e6 DUP1
0x8e7 REVERT
---
0x8e4: V892 = 0x0
0x8e7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8e8
[0x8e8:0x8ef]
---
Predecessors: [0x8dd]
Successors: [0xa2d]
---
0x8e8 JUMPDEST
0x8e9 PUSH2 0x8f0
0x8ec PUSH2 0xa2d
0x8ef JUMP
---
0x8e8: JUMPDEST 
0x8e9: V893 = 0x8f0
0x8ec: V894 = 0xa2d
0x8ef: JUMP 0xa2d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x8f0]
Exit stack: [V12, 0x8f0]

================================

Block 0x8f0
[0x8f0:0x913]
---
Predecessors: [0xac3]
Successors: [0x914]
---
0x8f0 JUMPDEST
0x8f1 PUSH1 0x40
0x8f3 MLOAD
0x8f4 PUSH1 0x20
0x8f6 DUP1
0x8f7 DUP3
0x8f8 MSTORE
0x8f9 DUP2
0x8fa SWAP1
0x8fb DUP2
0x8fc ADD
0x8fd DUP4
0x8fe DUP2
0x8ff DUP2
0x900 MLOAD
0x901 DUP2
0x902 MSTORE
0x903 PUSH1 0x20
0x905 ADD
0x906 SWAP2
0x907 POP
0x908 DUP1
0x909 MLOAD
0x90a SWAP1
0x90b PUSH1 0x20
0x90d ADD
0x90e SWAP1
0x90f DUP1
0x910 DUP4
0x911 DUP4
0x912 PUSH1 0x0
---
0x8f0: JUMPDEST 
0x8f1: V895 = 0x40
0x8f3: V896 = M[0x40]
0x8f4: V897 = 0x20
0x8f8: M[V896] = 0x20
0x8fc: V898 = ADD V896 0x20
0x900: V899 = M[V1034]
0x902: M[V898] = V899
0x903: V900 = 0x20
0x905: V901 = ADD 0x20 V898
0x909: V902 = M[V1034]
0x90b: V903 = 0x20
0x90d: V904 = ADD 0x20 V1034
0x912: V905 = 0x0
---
Entry stack: [V12, 0x8f0, V1034]
Stack pops: 1
Stack additions: [S0, V896, V896, V901, V904, V902, V902, V901, V904, 0x0]
Exit stack: [V12, 0x8f0, V1034, V896, V896, V901, V904, V902, V902, V901, V904, 0x0]

================================

Block 0x914
[0x914:0x91c]
---
Predecessors: [0x8f0, 0x925]
Successors: [0x91d, 0x92d]
---
0x914 JUMPDEST
0x915 DUP4
0x916 DUP2
0x917 LT
0x918 ISZERO
0x919 PUSH2 0x92d
0x91c JUMPI
---
0x914: JUMPDEST 
0x917: V906 = LT S0 V902
0x918: V907 = ISZERO V906
0x919: V908 = 0x92d
0x91c: JUMPI 0x92d V907
---
Entry stack: [V12, 0x8f0, V1034, V896, V896, V901, V904, V902, V902, V901, V904, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x8f0, V1034, V896, V896, V901, V904, V902, V902, V901, V904, S0]

================================

Block 0x91d
[0x91d:0x924]
---
Predecessors: [0x914]
Successors: [0x925]
---
0x91d DUP1
0x91e DUP3
0x91f ADD
0x920 MLOAD
0x921 DUP2
0x922 DUP5
0x923 ADD
0x924 MSTORE
---
0x91f: V909 = ADD V904 S0
0x920: V910 = M[V909]
0x923: V911 = ADD V901 S0
0x924: M[V911] = V910
---
Entry stack: [V12, 0x8f0, V1034, V896, V896, V901, V904, V902, V902, V901, V904, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x8f0, V1034, V896, V896, V901, V904, V902, V902, V901, V904, S0]

================================

Block 0x925
[0x925:0x92c]
---
Predecessors: [0x91d]
Successors: [0x914]
---
0x925 JUMPDEST
0x926 PUSH1 0x20
0x928 ADD
0x929 PUSH2 0x914
0x92c JUMP
---
0x925: JUMPDEST 
0x926: V912 = 0x20
0x928: V913 = ADD 0x20 S0
0x929: V914 = 0x914
0x92c: JUMP 0x914
---
Entry stack: [V12, 0x8f0, V1034, V896, V896, V901, V904, V902, V902, V901, V904, S0]
Stack pops: 1
Stack additions: [V913]
Exit stack: [V12, 0x8f0, V1034, V896, V896, V901, V904, V902, V902, V901, V904, V913]

================================

Block 0x92d
[0x92d:0x940]
---
Predecessors: [0x914]
Successors: [0x941, 0x95a]
---
0x92d JUMPDEST
0x92e POP
0x92f POP
0x930 POP
0x931 POP
0x932 SWAP1
0x933 POP
0x934 SWAP1
0x935 DUP2
0x936 ADD
0x937 SWAP1
0x938 PUSH1 0x1f
0x93a AND
0x93b DUP1
0x93c ISZERO
0x93d PUSH2 0x95a
0x940 JUMPI
---
0x92d: JUMPDEST 
0x936: V915 = ADD V902 V901
0x938: V916 = 0x1f
0x93a: V917 = AND 0x1f V902
0x93c: V918 = ISZERO V917
0x93d: V919 = 0x95a
0x940: JUMPI 0x95a V918
---
Entry stack: [V12, 0x8f0, V1034, V896, V896, V901, V904, V902, V902, V901, V904, S0]
Stack pops: 7
Stack additions: [V915, V917]
Exit stack: [V12, 0x8f0, V1034, V896, V896, V915, V917]

================================

Block 0x941
[0x941:0x959]
---
Predecessors: [0x92d]
Successors: [0x95a]
---
0x941 DUP1
0x942 DUP3
0x943 SUB
0x944 DUP1
0x945 MLOAD
0x946 PUSH1 0x1
0x948 DUP4
0x949 PUSH1 0x20
0x94b SUB
0x94c PUSH2 0x100
0x94f EXP
0x950 SUB
0x951 NOT
0x952 AND
0x953 DUP2
0x954 MSTORE
0x955 PUSH1 0x20
0x957 ADD
0x958 SWAP2
0x959 POP
---
0x943: V920 = SUB V915 V917
0x945: V921 = M[V920]
0x946: V922 = 0x1
0x949: V923 = 0x20
0x94b: V924 = SUB 0x20 V917
0x94c: V925 = 0x100
0x94f: V926 = EXP 0x100 V924
0x950: V927 = SUB V926 0x1
0x951: V928 = NOT V927
0x952: V929 = AND V928 V921
0x954: M[V920] = V929
0x955: V930 = 0x20
0x957: V931 = ADD 0x20 V920
---
Entry stack: [V12, 0x8f0, V1034, V896, V896, V915, V917]
Stack pops: 2
Stack additions: [V931, S0]
Exit stack: [V12, 0x8f0, V1034, V896, V896, V931, V917]

================================

Block 0x95a
[0x95a:0x967]
---
Predecessors: [0x92d, 0x941]
Successors: []
---
0x95a JUMPDEST
0x95b POP
0x95c SWAP3
0x95d POP
0x95e POP
0x95f POP
0x960 PUSH1 0x40
0x962 MLOAD
0x963 DUP1
0x964 SWAP2
0x965 SUB
0x966 SWAP1
0x967 RETURN
---
0x95a: JUMPDEST 
0x960: V932 = 0x40
0x962: V933 = M[0x40]
0x965: V934 = SUB S1 V933
0x967: RETURN V933 V934
---
Entry stack: [V12, 0x8f0, V1034, V896, V896, S1, V917]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x8f0]

================================

Block 0x968
[0x968:0x96e]
---
Predecessors: [0x7d]
Successors: [0x96f, 0x973]
---
0x968 JUMPDEST
0x969 CALLVALUE
0x96a ISZERO
0x96b PUSH2 0x973
0x96e JUMPI
---
0x968: JUMPDEST 
0x969: V935 = CALLVALUE
0x96a: V936 = ISZERO V935
0x96b: V937 = 0x973
0x96e: JUMPI 0x973 V936
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x96f
[0x96f:0x972]
---
Predecessors: [0x968]
Successors: []
---
0x96f PUSH1 0x0
0x971 DUP1
0x972 REVERT
---
0x96f: V938 = 0x0
0x972: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x973
[0x973:0x97a]
---
Predecessors: [0x968]
Successors: [0xacb]
---
0x973 JUMPDEST
0x974 PUSH2 0x7e1
0x977 PUSH2 0xacb
0x97a JUMP
---
0x973: JUMPDEST 
0x974: V939 = 0x7e1
0x977: V940 = 0xacb
0x97a: JUMP 0xacb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7e1]
Exit stack: [V12, 0x7e1]

================================

Block 0x97b
[0x97b:0x98c]
---
Predecessors: []
Successors: []
---
0x97b JUMPDEST
0x97c PUSH1 0x40
0x97e MLOAD
0x97f SWAP1
0x980 DUP2
0x981 MSTORE
0x982 PUSH1 0x20
0x984 ADD
0x985 PUSH1 0x40
0x987 MLOAD
0x988 DUP1
0x989 SWAP2
0x98a SUB
0x98b SWAP1
0x98c RETURN
---
0x97b: JUMPDEST 
0x97c: V941 = 0x40
0x97e: V942 = M[0x40]
0x981: M[V942] = S0
0x982: V943 = 0x20
0x984: V944 = ADD 0x20 V942
0x985: V945 = 0x40
0x987: V946 = M[0x40]
0x98a: V947 = SUB V944 V946
0x98c: RETURN V946 V947
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x98d
[0x98d:0x993]
---
Predecessors: [0x88]
Successors: [0x994, 0x998]
---
0x98d JUMPDEST
0x98e CALLVALUE
0x98f ISZERO
0x990 PUSH2 0x998
0x993 JUMPI
---
0x98d: JUMPDEST 
0x98e: V948 = CALLVALUE
0x98f: V949 = ISZERO V948
0x990: V950 = 0x998
0x993: JUMPI 0x998 V949
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x994
[0x994:0x997]
---
Predecessors: [0x98d]
Successors: []
---
0x994 PUSH1 0x0
0x996 DUP1
0x997 REVERT
---
0x994: V951 = 0x0
0x997: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x998
[0x998:0x99f]
---
Predecessors: [0x98d]
Successors: [0xad1]
---
0x998 JUMPDEST
0x999 PUSH2 0x850
0x99c PUSH2 0xad1
0x99f JUMP
---
0x998: JUMPDEST 
0x999: V952 = 0x850
0x99c: V953 = 0xad1
0x99f: JUMP 0xad1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x850]
Exit stack: [V12, 0x850]

================================

Block 0x9a0
[0x9a0:0x9b3]
---
Predecessors: []
Successors: []
---
0x9a0 JUMPDEST
0x9a1 PUSH1 0x40
0x9a3 MLOAD
0x9a4 SWAP1
0x9a5 ISZERO
0x9a6 ISZERO
0x9a7 DUP2
0x9a8 MSTORE
0x9a9 PUSH1 0x20
0x9ab ADD
0x9ac PUSH1 0x40
0x9ae MLOAD
0x9af DUP1
0x9b0 SWAP2
0x9b1 SUB
0x9b2 SWAP1
0x9b3 RETURN
---
0x9a0: JUMPDEST 
0x9a1: V954 = 0x40
0x9a3: V955 = M[0x40]
0x9a5: V956 = ISZERO S0
0x9a6: V957 = ISZERO V956
0x9a8: M[V955] = V957
0x9a9: V958 = 0x20
0x9ab: V959 = ADD 0x20 V955
0x9ac: V960 = 0x40
0x9ae: V961 = M[0x40]
0x9b1: V962 = SUB V959 V961
0x9b3: RETURN V961 V962
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9b4
[0x9b4:0x9ba]
---
Predecessors: [0x93]
Successors: [0x9bb, 0x9bf]
---
0x9b4 JUMPDEST
0x9b5 CALLVALUE
0x9b6 ISZERO
0x9b7 PUSH2 0x9bf
0x9ba JUMPI
---
0x9b4: JUMPDEST 
0x9b5: V963 = CALLVALUE
0x9b6: V964 = ISZERO V963
0x9b7: V965 = 0x9bf
0x9ba: JUMPI 0x9bf V964
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9bb
[0x9bb:0x9be]
---
Predecessors: [0x9b4]
Successors: []
---
0x9bb PUSH1 0x0
0x9bd DUP1
0x9be REVERT
---
0x9bb: V966 = 0x0
0x9be: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9bf
[0x9bf:0x9c6]
---
Predecessors: [0x9b4]
Successors: [0xada]
---
0x9bf JUMPDEST
0x9c0 PUSH2 0x7b2
0x9c3 PUSH2 0xada
0x9c6 JUMP
---
0x9bf: JUMPDEST 
0x9c0: V967 = 0x7b2
0x9c3: V968 = 0xada
0x9c6: JUMP 0xada
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x7b2]
Exit stack: [V12, 0x7b2]

================================

Block 0x9c7
[0x9c7:0x9e2]
---
Predecessors: []
Successors: []
---
0x9c7 JUMPDEST
0x9c8 PUSH1 0x40
0x9ca MLOAD
0x9cb PUSH1 0x1
0x9cd PUSH1 0xa0
0x9cf PUSH1 0x2
0x9d1 EXP
0x9d2 SUB
0x9d3 SWAP1
0x9d4 SWAP2
0x9d5 AND
0x9d6 DUP2
0x9d7 MSTORE
0x9d8 PUSH1 0x20
0x9da ADD
0x9db PUSH1 0x40
0x9dd MLOAD
0x9de DUP1
0x9df SWAP2
0x9e0 SUB
0x9e1 SWAP1
0x9e2 RETURN
---
0x9c7: JUMPDEST 
0x9c8: V969 = 0x40
0x9ca: V970 = M[0x40]
0x9cb: V971 = 0x1
0x9cd: V972 = 0xa0
0x9cf: V973 = 0x2
0x9d1: V974 = EXP 0x2 0xa0
0x9d2: V975 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d5: V976 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x9d7: M[V970] = V976
0x9d8: V977 = 0x20
0x9da: V978 = ADD 0x20 V970
0x9db: V979 = 0x40
0x9dd: V980 = M[0x40]
0x9e0: V981 = SUB V978 V980
0x9e2: RETURN V980 V981
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9e3
[0x9e3:0x9f1]
---
Predecessors: [0x7aa]
Successors: [0x7b2]
---
0x9e3 JUMPDEST
0x9e4 PUSH1 0x0
0x9e6 SLOAD
0x9e7 PUSH1 0x1
0x9e9 PUSH1 0xa0
0x9eb PUSH1 0x2
0x9ed EXP
0x9ee SUB
0x9ef AND
0x9f0 DUP2
0x9f1 JUMP
---
0x9e3: JUMPDEST 
0x9e4: V982 = 0x0
0x9e6: V983 = S[0x0]
0x9e7: V984 = 0x1
0x9e9: V985 = 0xa0
0x9eb: V986 = 0x2
0x9ed: V987 = EXP 0x2 0xa0
0x9ee: V988 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ef: V989 = AND 0xffffffffffffffffffffffffffffffffffffffff V983
0x9f1: JUMP 0x7b2
---
Entry stack: [V12, 0x7b2]
Stack pops: 1
Stack additions: [S0, V989]
Exit stack: [V12, 0x7b2, V989]

================================

Block 0x9f2
[0x9f2:0x9f7]
---
Predecessors: [0x7d9]
Successors: [0x7e1]
---
0x9f2 JUMPDEST
0x9f3 PUSH1 0x3
0x9f5 SLOAD
0x9f6 DUP2
0x9f7 JUMP
---
0x9f2: JUMPDEST 
0x9f3: V990 = 0x3
0x9f5: V991 = S[0x3]
0x9f7: JUMP 0x7e1
---
Entry stack: [V12, 0x7e1]
Stack pops: 1
Stack additions: [S0, V991]
Exit stack: [V12, 0x7e1, V991]

================================

Block 0x9f8
[0x9f8:0x9fd]
---
Predecessors: [0x7fe]
Successors: [0x7e1]
---
0x9f8 JUMPDEST
0x9f9 PUSH1 0x6
0x9fb SLOAD
0x9fc DUP2
0x9fd JUMP
---
0x9f8: JUMPDEST 
0x9f9: V992 = 0x6
0x9fb: V993 = S[0x6]
0x9fd: JUMP 0x7e1
---
Entry stack: [V12, 0x7e1]
Stack pops: 1
Stack additions: [S0, V993]
Exit stack: [V12, 0x7e1, V993]

================================

Block 0x9fe
[0x9fe:0xa03]
---
Predecessors: [0x823]
Successors: [0x7e1]
---
0x9fe JUMPDEST
0x9ff PUSH1 0x5
0xa01 SLOAD
0xa02 DUP2
0xa03 JUMP
---
0x9fe: JUMPDEST 
0x9ff: V994 = 0x5
0xa01: V995 = S[0x5]
0xa03: JUMP 0x7e1
---
Entry stack: [V12, 0x7e1]
Stack pops: 1
Stack additions: [S0, V995]
Exit stack: [V12, 0x7e1, V995]

================================

Block 0xa04
[0xa04:0xa11]
---
Predecessors: [0x848]
Successors: [0x850]
---
0xa04 JUMPDEST
0xa05 PUSH1 0xc
0xa07 SLOAD
0xa08 PUSH2 0x100
0xa0b SWAP1
0xa0c DIV
0xa0d PUSH1 0xff
0xa0f AND
0xa10 DUP2
0xa11 JUMP
---
0xa04: JUMPDEST 
0xa05: V996 = 0xc
0xa07: V997 = S[0xc]
0xa08: V998 = 0x100
0xa0c: V999 = DIV V997 0x100
0xa0d: V1000 = 0xff
0xa0f: V1001 = AND 0xff V999
0xa11: JUMP 0x850
---
Entry stack: [V12, 0x850]
Stack pops: 1
Stack additions: [S0, V1001]
Exit stack: [V12, 0x850, V1001]

================================

Block 0xa12
[0xa12:0xa17]
---
Predecessors: [0x86f]
Successors: [0x7e1]
---
0xa12 JUMPDEST
0xa13 PUSH1 0xa
0xa15 SLOAD
0xa16 DUP2
0xa17 JUMP
---
0xa12: JUMPDEST 
0xa13: V1002 = 0xa
0xa15: V1003 = S[0xa]
0xa17: JUMP 0x7e1
---
Entry stack: [V12, 0x7e1]
Stack pops: 1
Stack additions: [S0, V1003]
Exit stack: [V12, 0x7e1, V1003]

================================

Block 0xa18
[0xa18:0xa26]
---
Predecessors: [0x894]
Successors: [0x7b2]
---
0xa18 JUMPDEST
0xa19 PUSH1 0x1
0xa1b SLOAD
0xa1c PUSH1 0x1
0xa1e PUSH1 0xa0
0xa20 PUSH1 0x2
0xa22 EXP
0xa23 SUB
0xa24 AND
0xa25 DUP2
0xa26 JUMP
---
0xa18: JUMPDEST 
0xa19: V1004 = 0x1
0xa1b: V1005 = S[0x1]
0xa1c: V1006 = 0x1
0xa1e: V1007 = 0xa0
0xa20: V1008 = 0x2
0xa22: V1009 = EXP 0x2 0xa0
0xa23: V1010 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa24: V1011 = AND 0xffffffffffffffffffffffffffffffffffffffff V1005
0xa26: JUMP 0x7b2
---
Entry stack: [V12, 0x7b2]
Stack pops: 1
Stack additions: [S0, V1011]
Exit stack: [V12, 0x7b2, V1011]

================================

Block 0xa27
[0xa27:0xa2c]
---
Predecessors: [0x8c3]
Successors: [0x7e1]
---
0xa27 JUMPDEST
0xa28 PUSH1 0xb
0xa2a SLOAD
0xa2b DUP2
0xa2c JUMP
---
0xa27: JUMPDEST 
0xa28: V1012 = 0xb
0xa2a: V1013 = S[0xb]
0xa2c: JUMP 0x7e1
---
Entry stack: [V12, 0x7e1]
Stack pops: 1
Stack additions: [S0, V1013]
Exit stack: [V12, 0x7e1, V1013]

================================

Block 0xa2d
[0xa2d:0xa7c]
---
Predecessors: [0x8e8]
Successors: [0xa7d, 0xac3]
---
0xa2d JUMPDEST
0xa2e PUSH1 0x7
0xa30 DUP1
0xa31 SLOAD
0xa32 PUSH1 0x1
0xa34 DUP2
0xa35 PUSH1 0x1
0xa37 AND
0xa38 ISZERO
0xa39 PUSH2 0x100
0xa3c MUL
0xa3d SUB
0xa3e AND
0xa3f PUSH1 0x2
0xa41 SWAP1
0xa42 DIV
0xa43 DUP1
0xa44 PUSH1 0x1f
0xa46 ADD
0xa47 PUSH1 0x20
0xa49 DUP1
0xa4a SWAP2
0xa4b DIV
0xa4c MUL
0xa4d PUSH1 0x20
0xa4f ADD
0xa50 PUSH1 0x40
0xa52 MLOAD
0xa53 SWAP1
0xa54 DUP2
0xa55 ADD
0xa56 PUSH1 0x40
0xa58 MSTORE
0xa59 DUP1
0xa5a SWAP3
0xa5b SWAP2
0xa5c SWAP1
0xa5d DUP2
0xa5e DUP2
0xa5f MSTORE
0xa60 PUSH1 0x20
0xa62 ADD
0xa63 DUP3
0xa64 DUP1
0xa65 SLOAD
0xa66 PUSH1 0x1
0xa68 DUP2
0xa69 PUSH1 0x1
0xa6b AND
0xa6c ISZERO
0xa6d PUSH2 0x100
0xa70 MUL
0xa71 SUB
0xa72 AND
0xa73 PUSH1 0x2
0xa75 SWAP1
0xa76 DIV
0xa77 DUP1
0xa78 ISZERO
0xa79 PUSH2 0xac3
0xa7c JUMPI
---
0xa2d: JUMPDEST 
0xa2e: V1014 = 0x7
0xa31: V1015 = S[0x7]
0xa32: V1016 = 0x1
0xa35: V1017 = 0x1
0xa37: V1018 = AND 0x1 V1015
0xa38: V1019 = ISZERO V1018
0xa39: V1020 = 0x100
0xa3c: V1021 = MUL 0x100 V1019
0xa3d: V1022 = SUB V1021 0x1
0xa3e: V1023 = AND V1022 V1015
0xa3f: V1024 = 0x2
0xa42: V1025 = DIV V1023 0x2
0xa44: V1026 = 0x1f
0xa46: V1027 = ADD 0x1f V1025
0xa47: V1028 = 0x20
0xa4b: V1029 = DIV V1027 0x20
0xa4c: V1030 = MUL V1029 0x20
0xa4d: V1031 = 0x20
0xa4f: V1032 = ADD 0x20 V1030
0xa50: V1033 = 0x40
0xa52: V1034 = M[0x40]
0xa55: V1035 = ADD V1034 V1032
0xa56: V1036 = 0x40
0xa58: M[0x40] = V1035
0xa5f: M[V1034] = V1025
0xa60: V1037 = 0x20
0xa62: V1038 = ADD 0x20 V1034
0xa65: V1039 = S[0x7]
0xa66: V1040 = 0x1
0xa69: V1041 = 0x1
0xa6b: V1042 = AND 0x1 V1039
0xa6c: V1043 = ISZERO V1042
0xa6d: V1044 = 0x100
0xa70: V1045 = MUL 0x100 V1043
0xa71: V1046 = SUB V1045 0x1
0xa72: V1047 = AND V1046 V1039
0xa73: V1048 = 0x2
0xa76: V1049 = DIV V1047 0x2
0xa78: V1050 = ISZERO V1049
0xa79: V1051 = 0xac3
0xa7c: JUMPI 0xac3 V1050
---
Entry stack: [V12, 0x8f0]
Stack pops: 0
Stack additions: [V1034, 0x7, V1025, V1038, 0x7, V1049]
Exit stack: [V12, 0x8f0, V1034, 0x7, V1025, V1038, 0x7, V1049]

================================

Block 0xa7d
[0xa7d:0xa84]
---
Predecessors: [0xa2d]
Successors: [0xa85, 0xa98]
---
0xa7d DUP1
0xa7e PUSH1 0x1f
0xa80 LT
0xa81 PUSH2 0xa98
0xa84 JUMPI
---
0xa7e: V1052 = 0x1f
0xa80: V1053 = LT 0x1f V1049
0xa81: V1054 = 0xa98
0xa84: JUMPI 0xa98 V1053
---
Entry stack: [V12, 0x8f0, V1034, 0x7, V1025, V1038, 0x7, V1049]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x8f0, V1034, 0x7, V1025, V1038, 0x7, V1049]

================================

Block 0xa85
[0xa85:0xa97]
---
Predecessors: [0xa7d]
Successors: [0xac3]
---
0xa85 PUSH2 0x100
0xa88 DUP1
0xa89 DUP4
0xa8a SLOAD
0xa8b DIV
0xa8c MUL
0xa8d DUP4
0xa8e MSTORE
0xa8f SWAP2
0xa90 PUSH1 0x20
0xa92 ADD
0xa93 SWAP2
0xa94 PUSH2 0xac3
0xa97 JUMP
---
0xa85: V1055 = 0x100
0xa8a: V1056 = S[0x7]
0xa8b: V1057 = DIV V1056 0x100
0xa8c: V1058 = MUL V1057 0x100
0xa8e: M[V1038] = V1058
0xa90: V1059 = 0x20
0xa92: V1060 = ADD 0x20 V1038
0xa94: V1061 = 0xac3
0xa97: JUMP 0xac3
---
Entry stack: [V12, 0x8f0, V1034, 0x7, V1025, V1038, 0x7, V1049]
Stack pops: 3
Stack additions: [V1060, S1, S0]
Exit stack: [V12, 0x8f0, V1034, 0x7, V1025, V1060, 0x7, V1049]

================================

Block 0xa98
[0xa98:0xaa5]
---
Predecessors: [0xa7d]
Successors: [0xaa6]
---
0xa98 JUMPDEST
0xa99 DUP3
0xa9a ADD
0xa9b SWAP2
0xa9c SWAP1
0xa9d PUSH1 0x0
0xa9f MSTORE
0xaa0 PUSH1 0x20
0xaa2 PUSH1 0x0
0xaa4 SHA3
0xaa5 SWAP1
---
0xa98: JUMPDEST 
0xa9a: V1062 = ADD V1038 V1049
0xa9d: V1063 = 0x0
0xa9f: M[0x0] = 0x7
0xaa0: V1064 = 0x20
0xaa2: V1065 = 0x0
0xaa4: V1066 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x8f0, V1034, 0x7, V1025, V1038, 0x7, V1049]
Stack pops: 3
Stack additions: [V1062, V1066, S2]
Exit stack: [V12, 0x8f0, V1034, 0x7, V1025, V1062, V1066, V1038]

================================

Block 0xaa6
[0xaa6:0xab9]
---
Predecessors: [0xa98, 0xaa6]
Successors: [0xaa6, 0xaba]
---
0xaa6 JUMPDEST
0xaa7 DUP2
0xaa8 SLOAD
0xaa9 DUP2
0xaaa MSTORE
0xaab SWAP1
0xaac PUSH1 0x1
0xaae ADD
0xaaf SWAP1
0xab0 PUSH1 0x20
0xab2 ADD
0xab3 DUP1
0xab4 DUP4
0xab5 GT
0xab6 PUSH2 0xaa6
0xab9 JUMPI
---
0xaa6: JUMPDEST 
0xaa8: V1067 = S[S1]
0xaaa: M[S0] = V1067
0xaac: V1068 = 0x1
0xaae: V1069 = ADD 0x1 S1
0xab0: V1070 = 0x20
0xab2: V1071 = ADD 0x20 S0
0xab5: V1072 = GT V1062 V1071
0xab6: V1073 = 0xaa6
0xab9: JUMPI 0xaa6 V1072
---
Entry stack: [V12, 0x8f0, V1034, 0x7, V1025, V1062, S1, S0]
Stack pops: 3
Stack additions: [S2, V1069, V1071]
Exit stack: [V12, 0x8f0, V1034, 0x7, V1025, V1062, V1069, V1071]

================================

Block 0xaba
[0xaba:0xac2]
---
Predecessors: [0xaa6]
Successors: [0xac3]
---
0xaba DUP3
0xabb SWAP1
0xabc SUB
0xabd PUSH1 0x1f
0xabf AND
0xac0 DUP3
0xac1 ADD
0xac2 SWAP2
---
0xabc: V1074 = SUB V1071 V1062
0xabd: V1075 = 0x1f
0xabf: V1076 = AND 0x1f V1074
0xac1: V1077 = ADD V1062 V1076
---
Entry stack: [V12, 0x8f0, V1034, 0x7, V1025, V1062, V1069, V1071]
Stack pops: 3
Stack additions: [V1077, S1, S2]
Exit stack: [V12, 0x8f0, V1034, 0x7, V1025, V1077, V1069, V1062]

================================

Block 0xac3
[0xac3:0xaca]
---
Predecessors: [0xa2d, 0xa85, 0xaba]
Successors: [0x8f0]
---
0xac3 JUMPDEST
0xac4 POP
0xac5 POP
0xac6 POP
0xac7 POP
0xac8 POP
0xac9 DUP2
0xaca JUMP
---
0xac3: JUMPDEST 
0xaca: JUMP 0x8f0
---
Entry stack: [V12, 0x8f0, V1034, 0x7, V1025, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0x8f0, V1034]

================================

Block 0xacb
[0xacb:0xad0]
---
Predecessors: [0x973]
Successors: [0x7e1]
---
0xacb JUMPDEST
0xacc PUSH1 0x4
0xace SLOAD
0xacf DUP2
0xad0 JUMP
---
0xacb: JUMPDEST 
0xacc: V1078 = 0x4
0xace: V1079 = S[0x4]
0xad0: JUMP 0x7e1
---
Entry stack: [V12, 0x7e1]
Stack pops: 1
Stack additions: [S0, V1079]
Exit stack: [V12, 0x7e1, V1079]

================================

Block 0xad1
[0xad1:0xad9]
---
Predecessors: [0x998]
Successors: [0x850]
---
0xad1 JUMPDEST
0xad2 PUSH1 0xc
0xad4 SLOAD
0xad5 PUSH1 0xff
0xad7 AND
0xad8 DUP2
0xad9 JUMP
---
0xad1: JUMPDEST 
0xad2: V1080 = 0xc
0xad4: V1081 = S[0xc]
0xad5: V1082 = 0xff
0xad7: V1083 = AND 0xff V1081
0xad9: JUMP 0x850
---
Entry stack: [V12, 0x850]
Stack pops: 1
Stack additions: [S0, V1083]
Exit stack: [V12, 0x850, V1083]

================================

Block 0xada
[0xada:0xae8]
---
Predecessors: [0x9bf]
Successors: [0x7b2]
---
0xada JUMPDEST
0xadb PUSH1 0x2
0xadd SLOAD
0xade PUSH1 0x1
0xae0 PUSH1 0xa0
0xae2 PUSH1 0x2
0xae4 EXP
0xae5 SUB
0xae6 AND
0xae7 DUP2
0xae8 JUMP
---
0xada: JUMPDEST 
0xadb: V1084 = 0x2
0xadd: V1085 = S[0x2]
0xade: V1086 = 0x1
0xae0: V1087 = 0xa0
0xae2: V1088 = 0x2
0xae4: V1089 = EXP 0x2 0xa0
0xae5: V1090 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae6: V1091 = AND 0xffffffffffffffffffffffffffffffffffffffff V1085
0xae8: JUMP 0x7b2
---
Entry stack: [V12, 0x7b2]
Stack pops: 1
Stack additions: [S0, V1091]
Exit stack: [V12, 0x7b2, V1091]

================================

Block 0xae9
[0xae9:0xb19]
---
Predecessors: [0xaf, 0x111]
Successors: [0xb1a, 0xb2a]
---
0xae9 JUMPDEST
0xaea DUP3
0xaeb DUP1
0xaec SLOAD
0xaed PUSH1 0x1
0xaef DUP2
0xaf0 PUSH1 0x1
0xaf2 AND
0xaf3 ISZERO
0xaf4 PUSH2 0x100
0xaf7 MUL
0xaf8 SUB
0xaf9 AND
0xafa PUSH1 0x2
0xafc SWAP1
0xafd DIV
0xafe SWAP1
0xaff PUSH1 0x0
0xb01 MSTORE
0xb02 PUSH1 0x20
0xb04 PUSH1 0x0
0xb06 SHA3
0xb07 SWAP1
0xb08 PUSH1 0x1f
0xb0a ADD
0xb0b PUSH1 0x20
0xb0d SWAP1
0xb0e DIV
0xb0f DUP2
0xb10 ADD
0xb11 SWAP3
0xb12 DUP3
0xb13 PUSH1 0x1f
0xb15 LT
0xb16 PUSH2 0xb2a
0xb19 JUMPI
---
0xae9: JUMPDEST 
0xaec: V1092 = S[0x7]
0xaed: V1093 = 0x1
0xaf0: V1094 = 0x1
0xaf2: V1095 = AND 0x1 V1092
0xaf3: V1096 = ISZERO V1095
0xaf4: V1097 = 0x100
0xaf7: V1098 = MUL 0x100 V1096
0xaf8: V1099 = SUB V1098 0x1
0xaf9: V1100 = AND V1099 V1092
0xafa: V1101 = 0x2
0xafd: V1102 = DIV V1100 0x2
0xaff: V1103 = 0x0
0xb01: M[0x0] = 0x7
0xb02: V1104 = 0x20
0xb04: V1105 = 0x0
0xb06: V1106 = SHA3 0x0 0x20
0xb08: V1107 = 0x1f
0xb0a: V1108 = ADD 0x1f V1102
0xb0b: V1109 = 0x20
0xb0e: V1110 = DIV V1108 0x20
0xb10: V1111 = ADD V1106 V1110
0xb13: V1112 = 0x1f
0xb15: V1113 = LT 0x1f S0
0xb16: V1114 = 0xb2a
0xb19: JUMPI 0xb2a V1113
---
Entry stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, S1, S0]
Stack pops: 3
Stack additions: [S2, V1111, S0, V1106, S1]
Exit stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, V1111, S0, V1106, S1]

================================

Block 0xb1a
[0xb1a:0xb29]
---
Predecessors: [0xae9]
Successors: [0xb57]
---
0xb1a DUP1
0xb1b MLOAD
0xb1c PUSH1 0xff
0xb1e NOT
0xb1f AND
0xb20 DUP4
0xb21 DUP1
0xb22 ADD
0xb23 OR
0xb24 DUP6
0xb25 SSTORE
0xb26 PUSH2 0xb57
0xb29 JUMP
---
0xb1b: V1115 = M[S0]
0xb1c: V1116 = 0xff
0xb1e: V1117 = NOT 0xff
0xb1f: V1118 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1115
0xb22: V1119 = ADD S2 S2
0xb23: V1120 = OR V1119 V1118
0xb25: S[0x7] = V1120
0xb26: V1121 = 0xb57
0xb29: JUMP 0xb57
---
Entry stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, V1111, S2, V1106, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, V1111, S2, V1106, S0]

================================

Block 0xb2a
[0xb2a:0xb38]
---
Predecessors: [0xae9]
Successors: [0xb39, 0xb57]
---
0xb2a JUMPDEST
0xb2b DUP3
0xb2c DUP1
0xb2d ADD
0xb2e PUSH1 0x1
0xb30 ADD
0xb31 DUP6
0xb32 SSTORE
0xb33 DUP3
0xb34 ISZERO
0xb35 PUSH2 0xb57
0xb38 JUMPI
---
0xb2a: JUMPDEST 
0xb2d: V1122 = ADD S2 S2
0xb2e: V1123 = 0x1
0xb30: V1124 = ADD 0x1 V1122
0xb32: S[0x7] = V1124
0xb34: V1125 = ISZERO S2
0xb35: V1126 = 0xb57
0xb38: JUMPI 0xb57 V1125
---
Entry stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, V1111, S2, V1106, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, V1111, S2, V1106, S0]

================================

Block 0xb39
[0xb39:0xb3b]
---
Predecessors: [0xb2a]
Successors: [0xb3c]
---
0xb39 SWAP2
0xb3a DUP3
0xb3b ADD
---
0xb3b: V1127 = ADD S0 S2
---
Entry stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, V1111, S2, V1106, S0]
Stack pops: 3
Stack additions: [S0, S1, V1127]
Exit stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, V1111, S0, V1106, V1127]

================================

Block 0xb3c
[0xb3c:0xb44]
---
Predecessors: [0xb39, 0xb45]
Successors: [0xb45, 0xb57]
---
0xb3c JUMPDEST
0xb3d DUP3
0xb3e DUP2
0xb3f GT
0xb40 ISZERO
0xb41 PUSH2 0xb57
0xb44 JUMPI
---
0xb3c: JUMPDEST 
0xb3f: V1128 = GT V1127 S2
0xb40: V1129 = ISZERO V1128
0xb41: V1130 = 0xb57
0xb44: JUMPI 0xb57 V1129
---
Entry stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, V1111, S2, S1, V1127]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, V1111, S2, S1, V1127]

================================

Block 0xb45
[0xb45:0xb56]
---
Predecessors: [0xb3c]
Successors: [0xb3c]
---
0xb45 DUP3
0xb46 MLOAD
0xb47 DUP3
0xb48 SSTORE
0xb49 SWAP2
0xb4a PUSH1 0x20
0xb4c ADD
0xb4d SWAP2
0xb4e SWAP1
0xb4f PUSH1 0x1
0xb51 ADD
0xb52 SWAP1
0xb53 PUSH2 0xb3c
0xb56 JUMP
---
0xb46: V1131 = M[S2]
0xb48: S[S1] = V1131
0xb4a: V1132 = 0x20
0xb4c: V1133 = ADD 0x20 S2
0xb4f: V1134 = 0x1
0xb51: V1135 = ADD 0x1 S1
0xb53: V1136 = 0xb3c
0xb56: JUMP 0xb3c
---
Entry stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, V1111, S2, S1, V1127]
Stack pops: 3
Stack additions: [V1133, V1135, S0]
Exit stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, V1111, V1133, V1135, V1127]

================================

Block 0xb57
[0xb57:0xb57]
---
Predecessors: [0xb1a, 0xb2a, 0xb3c]
Successors: [0xb58]
---
0xb57 JUMPDEST
---
0xb57: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, V1111, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, V1111, S2, S1, S0]

================================

Block 0xb58
[0xb58:0xb63]
---
Predecessors: [0xb57]
Successors: [0xb68]
---
0xb58 JUMPDEST
0xb59 POP
0xb5a PUSH2 0xb64
0xb5d SWAP3
0xb5e SWAP2
0xb5f POP
0xb60 PUSH2 0xb68
0xb63 JUMP
---
0xb58: JUMPDEST 
0xb5a: V1137 = 0xb64
0xb60: V1138 = 0xb68
0xb63: JUMP 0xb68
---
Entry stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, V1111, S2, S1, S0]
Stack pops: 4
Stack additions: [0xb64, S3, S1]
Exit stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, 0xb64, V1111, S1]

================================

Block 0xb64
[0xb64:0xb67]
---
Predecessors: [0xb6e, 0xb86]
Successors: [0xf5, 0x157, 0xb86]
---
0xb64 JUMPDEST
0xb65 POP
0xb66 SWAP1
0xb67 JUMP
---
0xb64: JUMPDEST 
0xb67: JUMP {0x0, 0xf5, 0x157, 0xb86}
---
Entry stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3, {0x0, 0xf5, 0x157, 0xb86}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, 0x0, 0x0, S6, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S3, S1]

================================

Block 0xb68
[0xb68:0xb6d]
---
Predecessors: [0xb58]
Successors: [0xb6e]
---
0xb68 JUMPDEST
0xb69 PUSH2 0xb86
0xb6c SWAP2
0xb6d SWAP1
---
0xb68: JUMPDEST 
0xb69: V1139 = 0xb86
---
Entry stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, 0xb64, V1111, S0]
Stack pops: 2
Stack additions: [0xb86, S1, S0]
Exit stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, 0xb64, 0xb86, V1111, S0]

================================

Block 0xb6e
[0xb6e:0xb76]
---
Predecessors: [0xb68, 0xb77]
Successors: [0xb64, 0xb77]
---
0xb6e JUMPDEST
0xb6f DUP1
0xb70 DUP3
0xb71 GT
0xb72 ISZERO
0xb73 PUSH2 0xb64
0xb76 JUMPI
---
0xb6e: JUMPDEST 
0xb71: V1140 = GT V1111 S0
0xb72: V1141 = ISZERO V1140
0xb73: V1142 = 0xb64
0xb76: JUMPI 0xb64 V1141
---
Entry stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, 0xb64, 0xb86, V1111, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, 0xb64, 0xb86, V1111, S0]

================================

Block 0xb77
[0xb77:0xb81]
---
Predecessors: [0xb6e]
Successors: [0xb6e]
---
0xb77 PUSH1 0x0
0xb79 DUP2
0xb7a SSTORE
0xb7b PUSH1 0x1
0xb7d ADD
0xb7e PUSH2 0xb6e
0xb81 JUMP
---
0xb77: V1143 = 0x0
0xb7a: S[S0] = 0x0
0xb7b: V1144 = 0x1
0xb7d: V1145 = ADD 0x1 S0
0xb7e: V1146 = 0xb6e
0xb81: JUMP 0xb6e
---
Entry stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, 0xb64, 0xb86, V1111, S0]
Stack pops: 1
Stack additions: [V1145]
Exit stack: [V12, 0x0, 0x0, 0x0, {0xf5, 0x157}, 0x7, 0xb64, 0xb86, V1111, V1145]

================================

Block 0xb82
[0xb82:0xb85]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0xb82 JUMPDEST
0xb83 POP
0xb84 SWAP1
0xb85 JUMP
---
0xb82: JUMPDEST 
0xb85: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xb86
[0xb86:0xb88]
---
Predecessors: [0xb64]
Successors: [0xb64]
---
0xb86 JUMPDEST
0xb87 SWAP1
0xb88 JUMP
---
0xb86: JUMPDEST 
0xb88: JUMP S1
---
Entry stack: [V12, 0x0, 0x0, S4, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x0, 0x0, S4, {0x0, 0xf5, 0x157}, {0x0, 0x7}, S0]

================================

Block 0xb89
[0xb89:0xbb9]
---
Predecessors: []
Successors: []
---
0xb89 STOP
0xb8a LOG1
0xb8b PUSH6 0x627a7a723058
0xb92 SHA3
0xb93 MISSING 0xeb
0xb94 AND
0xb95 MSIZE
0xb96 MISSING 0xa8
0xb97 ADDRESS
0xb98 DUP8
0xb99 GASLIMIT
0xb9a MUL
0xb9b ADDRESS
0xb9c PUSH29 0x6db3e1f0daa95c84e27aca420d2943ec2dc0031820d50029
---
0xb89: STOP 
0xb8a: LOG S0 S1 S2
0xb8b: V1147 = 0x627a7a723058
0xb92: V1148 = SHA3 0x627a7a723058 S3
0xb93: MISSING 0xeb
0xb94: V1149 = AND S0 S1
0xb95: V1150 = MSIZE
0xb96: MISSING 0xa8
0xb97: V1151 = ADDRESS
0xb99: V1152 = GASLIMIT
0xb9a: V1153 = MUL V1152 S6
0xb9b: V1154 = ADDRESS
0xb9c: V1155 = 0x6db3e1f0daa95c84e27aca420d2943ec2dc0031820d50029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1148, V1150, V1149, 0x6db3e1f0daa95c84e27aca420d2943ec2dc0031820d50029, V1154, V1153, V1151, S0, S1, S2, S3, S4, S5, S6]
Exit stack: []

================================

Function 0:
Public function signature: 0x27ebcf0e
Entry block: 0x79f
Exit block: 0x7b2
Body: 0x79f, 0x7a6, 0x7aa, 0x7b2, 0x9e3

Function 1:
Public function signature: 0x2faa2998
Entry block: 0x7ce
Exit block: 0x7e1
Body: 0x7ce, 0x7d5, 0x7d9, 0x7e1, 0x9f2

Function 2:
Public function signature: 0x30eaa9b5
Entry block: 0x7f3
Exit block: 0x7e1
Body: 0x7e1, 0x7f3, 0x7fa, 0x7fe, 0x9f8

Function 3:
Public function signature: 0x48330262
Entry block: 0x818
Exit block: 0x7e1
Body: 0x7e1, 0x818, 0x81f, 0x823, 0x9fe

Function 4:
Public function signature: 0x497fb5b9
Entry block: 0x83d
Exit block: 0x850
Body: 0x83d, 0x844, 0x848, 0x850, 0xa04

Function 5:
Public function signature: 0x519ee19e
Entry block: 0x864
Exit block: 0x7e1
Body: 0x7e1, 0x864, 0x86b, 0x86f, 0xa12

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x889
Exit block: 0x7b2
Body: 0x7b2, 0x889, 0x890, 0x894, 0xa18

Function 7:
Public function signature: 0x96c5406d
Entry block: 0x8b8
Exit block: 0x7e1
Body: 0x7e1, 0x8b8, 0x8bf, 0x8c3, 0xa27

Function 8:
Public function signature: 0xa035b1fe
Entry block: 0x8dd
Exit block: 0x95a
Body: 0x8dd, 0x8e4, 0x8e8, 0x8f0, 0x914, 0x91d, 0x925, 0x92d, 0x941, 0x95a, 0xa2d, 0xa7d, 0xa85, 0xa98, 0xaa6, 0xaba, 0xac3

Function 9:
Public function signature: 0xc7a96920
Entry block: 0x968
Exit block: 0x7e1
Body: 0x7e1, 0x968, 0x96f, 0x973, 0xacb

Function 10:
Public function signature: 0xccb07cef
Entry block: 0x98d
Exit block: 0x850
Body: 0x850, 0x98d, 0x994, 0x998, 0xad1

Function 11:
Public function signature: 0xf9081ba2
Entry block: 0x9b4
Exit block: 0x7b2
Body: 0x7b2, 0x9b4, 0x9bb, 0x9bf, 0xada

Function 12:
Public fallback function
Entry block: 0x9e
Exit block: 0x708
Body: 0x9e, 0x9f, 0xaf, 0xf5, 0x106, 0x111, 0x157, 0x164, 0x165, 0x1bc, 0x1c0, 0x1cd, 0x1d1, 0x1e8, 0x215, 0x219, 0x21e, 0x229, 0x256, 0x25a, 0x26c, 0x2d3, 0x2d7, 0x2e4, 0x2e8, 0x331, 0x335, 0x342, 0x346, 0x3a0, 0x3a4, 0x3b1, 0x3b5, 0x3da, 0x3df, 0x3eb, 0x418, 0x421, 0x430, 0x431, 0x43e, 0x46b, 0x46f, 0x470, 0x479, 0x47d, 0x48d, 0x48e, 0x49d, 0x4cb, 0x4cf, 0x4d8, 0x508, 0x50c, 0x50d, 0x55f, 0x563, 0x570, 0x574, 0x591, 0x59e, 0x5a3, 0x5b5, 0x5b6, 0x5ea, 0x5ee, 0x647, 0x64b, 0x658, 0x65c, 0x690, 0x694, 0x6f7, 0x6fb, 0x708, 0x70c, 0x726, 0x727, 0x728, 0x729, 0x79a

Function 13:
Private function
Entry block: 0xae9
Exit block: 0xb64
Body: 0xae9, 0xb1a, 0xb2a, 0xb39, 0xb3c, 0xb45, 0xb57, 0xb58, 0xb64, 0xb68, 0xb6e, 0xb77, 0xb86

