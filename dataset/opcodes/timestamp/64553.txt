Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xe3]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xe3
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xe3
0xa: JUMPI 0xe3 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xf5]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x2d05d3f
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xf5
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x2d05d3f
0x39: V12 = EQ V10 0x2d05d3f
0x3a: V13 = 0xf5
0x3d: JUMPI 0xf5 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x121]
---
0x3e DUP1
0x3f PUSH4 0x29dcb0cf
0x44 EQ
0x45 PUSH2 0x121
0x48 JUMPI
---
0x3f: V14 = 0x29dcb0cf
0x44: V15 = EQ 0x29dcb0cf V10
0x45: V16 = 0x121
0x48: JUMPI 0x121 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x143]
---
0x49 DUP1
0x4a PUSH4 0x38771242
0x4f EQ
0x50 PUSH2 0x143
0x53 JUMPI
---
0x4a: V17 = 0x38771242
0x4f: V18 = EQ 0x38771242 V10
0x50: V19 = 0x143
0x53: JUMPI 0x143 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x165]
---
0x54 DUP1
0x55 PUSH4 0x38af3eed
0x5a EQ
0x5b PUSH2 0x165
0x5e JUMPI
---
0x55: V20 = 0x38af3eed
0x5a: V21 = EQ 0x38af3eed V10
0x5b: V22 = 0x165
0x5e: JUMPI 0x165 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x191]
---
0x5f DUP1
0x60 PUSH4 0x3c8da588
0x65 EQ
0x66 PUSH2 0x191
0x69 JUMPI
---
0x60: V23 = 0x3c8da588
0x65: V24 = EQ 0x3c8da588 V10
0x66: V25 = 0x191
0x69: JUMPI 0x191 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x1b3]
---
0x6a DUP1
0x6b PUSH4 0x6e66f6e9
0x70 EQ
0x71 PUSH2 0x1b3
0x74 JUMPI
---
0x6b: V26 = 0x6e66f6e9
0x70: V27 = EQ 0x6e66f6e9 V10
0x71: V28 = 0x1b3
0x74: JUMPI 0x1b3 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x1df]
---
0x75 DUP1
0x76 PUSH4 0x71ae8f02
0x7b EQ
0x7c PUSH2 0x1df
0x7f JUMPI
---
0x76: V29 = 0x71ae8f02
0x7b: V30 = EQ 0x71ae8f02 V10
0x7c: V31 = 0x1df
0x7f: JUMPI 0x1df V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x201]
---
0x80 DUP1
0x81 PUSH4 0x86f32586
0x86 EQ
0x87 PUSH2 0x201
0x8a JUMPI
---
0x81: V32 = 0x86f32586
0x86: V33 = EQ 0x86f32586 V10
0x87: V34 = 0x201
0x8a: JUMPI 0x201 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x213]
---
0x8b DUP1
0x8c PUSH4 0xaa367664
0x91 EQ
0x92 PUSH2 0x213
0x95 JUMPI
---
0x8c: V35 = 0xaa367664
0x91: V36 = EQ 0xaa367664 V10
0x92: V37 = 0x213
0x95: JUMPI 0x213 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x235]
---
0x96 DUP1
0x97 PUSH4 0xb2d5ae44
0x9c EQ
0x9d PUSH2 0x235
0xa0 JUMPI
---
0x97: V38 = 0xb2d5ae44
0x9c: V39 = EQ 0xb2d5ae44 V10
0x9d: V40 = 0x235
0xa0: JUMPI 0x235 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x259]
---
0xa1 DUP1
0xa2 PUSH4 0xc19d93fb
0xa7 EQ
0xa8 PUSH2 0x259
0xab JUMPI
---
0xa2: V41 = 0xc19d93fb
0xa7: V42 = EQ 0xc19d93fb V10
0xa8: V43 = 0x259
0xab: JUMPI 0x259 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x28d]
---
0xac DUP1
0xad PUSH4 0xc2052403
0xb2 EQ
0xb3 PUSH2 0x28d
0xb6 JUMPI
---
0xad: V44 = 0xc2052403
0xb2: V45 = EQ 0xc2052403 V10
0xb3: V46 = 0x28d
0xb6: JUMPI 0x28d V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x29f]
---
0xb7 DUP1
0xb8 PUSH4 0xc5c4744c
0xbd EQ
0xbe PUSH2 0x29f
0xc1 JUMPI
---
0xb8: V47 = 0xc5c4744c
0xbd: V48 = EQ 0xc5c4744c V10
0xbe: V49 = 0x29f
0xc1: JUMPI 0x29f V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x2c1]
---
0xc2 DUP1
0xc3 PUSH4 0xce845d1d
0xc8 EQ
0xc9 PUSH2 0x2c1
0xcc JUMPI
---
0xc3: V50 = 0xce845d1d
0xc8: V51 = EQ 0xce845d1d V10
0xc9: V52 = 0x2c1
0xcc: JUMPI 0x2c1 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x2e3]
---
0xcd DUP1
0xce PUSH4 0xd7bb99ba
0xd3 EQ
0xd4 PUSH2 0x2e3
0xd7 JUMPI
---
0xce: V53 = 0xd7bb99ba
0xd3: V54 = EQ 0xd7bb99ba V10
0xd4: V55 = 0x2e3
0xd7: JUMPI 0x2e3 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x2fd]
---
0xd8 DUP1
0xd9 PUSH4 0xfe389e09
0xde EQ
0xdf PUSH2 0x2fd
0xe2 JUMPI
---
0xd9: V56 = 0xfe389e09
0xde: V57 = EQ 0xfe389e09 V10
0xdf: V58 = 0x2fd
0xe2: JUMPI 0x2fd V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xe6]
---
Predecessors: [0x0, 0xd8]
Successors: [0xe7]
---
0xe3 JUMPDEST
0xe4 PUSH2 0xf3
---
0xe3: JUMPDEST 
0xe4: V59 = 0xf3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf3]
Exit stack: [V10, 0xf3]

================================

Block 0xe7
[0xe7:0xee]
---
Predecessors: [0xe3]
Successors: [0x30f]
---
0xe7 JUMPDEST
0xe8 PUSH2 0xef
0xeb PUSH2 0x30f
0xee JUMP
---
0xe7: JUMPDEST 
0xe8: V60 = 0xef
0xeb: V61 = 0x30f
0xee: JUMP 0x30f
---
Entry stack: [V10, 0xf3]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V10, 0xf3, 0xef]

================================

Block 0xef
[0xef:0xf0]
---
Predecessors: [0x4c1]
Successors: [0xf1]
---
0xef JUMPDEST
0xf0 POP
---
0xef: JUMPDEST 
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0xf1
[0xf1:0xf2]
---
Predecessors: [0xef, 0x576, 0x57f, 0x5ea]
Successors: [0xf3, 0x4b5]
---
0xf1 JUMPDEST
0xf2 JUMP
---
0xf1: JUMPDEST 
0xf2: JUMP S0
---
Entry stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1]

================================

Block 0xf3
[0xf3:0xf4]
---
Predecessors: [0xf1, 0x60f, 0x835]
Successors: []
---
0xf3 JUMPDEST
0xf4 STOP
---
0xf3: JUMPDEST 
0xf4: STOP 
---
Entry stack: [V10, S5, S4, {0x0, 0xef, 0x131}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x0, 0xef, 0x131}, S2, S1, S0]

================================

Block 0xf5
[0xf5:0xfb]
---
Predecessors: [0xb]
Successors: [0xfc, 0xfd]
---
0xf5 JUMPDEST
0xf6 CALLVALUE
0xf7 ISZERO
0xf8 PUSH2 0xfd
0xfb JUMPI
---
0xf5: JUMPDEST 
0xf6: V62 = CALLVALUE
0xf7: V63 = ISZERO V62
0xf8: V64 = 0xfd
0xfb: JUMPI 0xfd V63
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfc
[0xfc:0xfc]
---
Predecessors: [0xf5]
Successors: []
---
0xfc INVALID
---
0xfc: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfd
[0xfd:0x104]
---
Predecessors: [0xf5]
Successors: [0x4c6]
---
0xfd JUMPDEST
0xfe PUSH2 0x105
0x101 PUSH2 0x4c6
0x104 JUMP
---
0xfd: JUMPDEST 
0xfe: V65 = 0x105
0x101: V66 = 0x4c6
0x104: JUMP 0x4c6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V10, 0x105]

================================

Block 0x105
[0x105:0x120]
---
Predecessors: [0x4c6, 0x4e1, 0x4f6]
Successors: []
---
0x105 JUMPDEST
0x106 PUSH1 0x40
0x108 DUP1
0x109 MLOAD
0x10a PUSH1 0x1
0x10c PUSH1 0xa0
0x10e PUSH1 0x2
0x110 EXP
0x111 SUB
0x112 SWAP1
0x113 SWAP3
0x114 AND
0x115 DUP3
0x116 MSTORE
0x117 MLOAD
0x118 SWAP1
0x119 DUP2
0x11a SWAP1
0x11b SUB
0x11c PUSH1 0x20
0x11e ADD
0x11f SWAP1
0x120 RETURN
---
0x105: JUMPDEST 
0x106: V67 = 0x40
0x109: V68 = M[0x40]
0x10a: V69 = 0x1
0x10c: V70 = 0xa0
0x10e: V71 = 0x2
0x110: V72 = EXP 0x2 0xa0
0x111: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0x114: V74 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x116: M[V68] = V74
0x117: V75 = M[0x40]
0x11b: V76 = SUB V68 V75
0x11c: V77 = 0x20
0x11e: V78 = ADD 0x20 V76
0x120: RETURN V75 V78
---
Entry stack: [V10, 0x105, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x105]

================================

Block 0x121
[0x121:0x127]
---
Predecessors: [0x3e]
Successors: [0x128, 0x129]
---
0x121 JUMPDEST
0x122 CALLVALUE
0x123 ISZERO
0x124 PUSH2 0x129
0x127 JUMPI
---
0x121: JUMPDEST 
0x122: V79 = CALLVALUE
0x123: V80 = ISZERO V79
0x124: V81 = 0x129
0x127: JUMPI 0x129 V80
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x128
[0x128:0x128]
---
Predecessors: [0x121]
Successors: []
---
0x128 INVALID
---
0x128: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x129
[0x129:0x130]
---
Predecessors: [0x121]
Successors: [0x4d5]
---
0x129 JUMPDEST
0x12a PUSH2 0x131
0x12d PUSH2 0x4d5
0x130 JUMP
---
0x129: JUMPDEST 
0x12a: V82 = 0x131
0x12d: V83 = 0x4d5
0x130: JUMP 0x4d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x131]
Exit stack: [V10, 0x131]

================================

Block 0x131
[0x131:0x142]
---
Predecessors: [0x4c1, 0x4d5, 0x4db, 0x4f0, 0x505, 0x611, 0x838, 0x83e]
Successors: []
---
0x131 JUMPDEST
0x132 PUSH1 0x40
0x134 DUP1
0x135 MLOAD
0x136 SWAP2
0x137 DUP3
0x138 MSTORE
0x139 MLOAD
0x13a SWAP1
0x13b DUP2
0x13c SWAP1
0x13d SUB
0x13e PUSH1 0x20
0x140 ADD
0x141 SWAP1
0x142 RETURN
---
0x131: JUMPDEST 
0x132: V84 = 0x40
0x135: V85 = M[0x40]
0x138: M[V85] = S0
0x139: V86 = M[0x40]
0x13d: V87 = SUB V85 V86
0x13e: V88 = 0x20
0x140: V89 = ADD 0x20 V87
0x142: RETURN V86 V89
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x143
[0x143:0x149]
---
Predecessors: [0x49]
Successors: [0x14a, 0x14b]
---
0x143 JUMPDEST
0x144 CALLVALUE
0x145 ISZERO
0x146 PUSH2 0x14b
0x149 JUMPI
---
0x143: JUMPDEST 
0x144: V90 = CALLVALUE
0x145: V91 = ISZERO V90
0x146: V92 = 0x14b
0x149: JUMPI 0x14b V91
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14a
[0x14a:0x14a]
---
Predecessors: [0x143]
Successors: []
---
0x14a INVALID
---
0x14a: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14b
[0x14b:0x152]
---
Predecessors: [0x143]
Successors: [0x4db]
---
0x14b JUMPDEST
0x14c PUSH2 0x131
0x14f PUSH2 0x4db
0x152 JUMP
---
0x14b: JUMPDEST 
0x14c: V93 = 0x131
0x14f: V94 = 0x4db
0x152: JUMP 0x4db
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x131]
Exit stack: [V10, 0x131]

================================

Block 0x153
[0x153:0x164]
---
Predecessors: []
Successors: []
---
0x153 JUMPDEST
0x154 PUSH1 0x40
0x156 DUP1
0x157 MLOAD
0x158 SWAP2
0x159 DUP3
0x15a MSTORE
0x15b MLOAD
0x15c SWAP1
0x15d DUP2
0x15e SWAP1
0x15f SUB
0x160 PUSH1 0x20
0x162 ADD
0x163 SWAP1
0x164 RETURN
---
0x153: JUMPDEST 
0x154: V95 = 0x40
0x157: V96 = M[0x40]
0x15a: M[V96] = S0
0x15b: V97 = M[0x40]
0x15f: V98 = SUB V96 V97
0x160: V99 = 0x20
0x162: V100 = ADD 0x20 V98
0x164: RETURN V97 V100
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x165
[0x165:0x16b]
---
Predecessors: [0x54]
Successors: [0x16c, 0x16d]
---
0x165 JUMPDEST
0x166 CALLVALUE
0x167 ISZERO
0x168 PUSH2 0x16d
0x16b JUMPI
---
0x165: JUMPDEST 
0x166: V101 = CALLVALUE
0x167: V102 = ISZERO V101
0x168: V103 = 0x16d
0x16b: JUMPI 0x16d V102
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16c
[0x16c:0x16c]
---
Predecessors: [0x165]
Successors: []
---
0x16c INVALID
---
0x16c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16d
[0x16d:0x174]
---
Predecessors: [0x165]
Successors: [0x4e1]
---
0x16d JUMPDEST
0x16e PUSH2 0x105
0x171 PUSH2 0x4e1
0x174 JUMP
---
0x16d: JUMPDEST 
0x16e: V104 = 0x105
0x171: V105 = 0x4e1
0x174: JUMP 0x4e1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V10, 0x105]

================================

Block 0x175
[0x175:0x190]
---
Predecessors: []
Successors: []
---
0x175 JUMPDEST
0x176 PUSH1 0x40
0x178 DUP1
0x179 MLOAD
0x17a PUSH1 0x1
0x17c PUSH1 0xa0
0x17e PUSH1 0x2
0x180 EXP
0x181 SUB
0x182 SWAP1
0x183 SWAP3
0x184 AND
0x185 DUP3
0x186 MSTORE
0x187 MLOAD
0x188 SWAP1
0x189 DUP2
0x18a SWAP1
0x18b SUB
0x18c PUSH1 0x20
0x18e ADD
0x18f SWAP1
0x190 RETURN
---
0x175: JUMPDEST 
0x176: V106 = 0x40
0x179: V107 = M[0x40]
0x17a: V108 = 0x1
0x17c: V109 = 0xa0
0x17e: V110 = 0x2
0x180: V111 = EXP 0x2 0xa0
0x181: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x184: V113 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x186: M[V107] = V113
0x187: V114 = M[0x40]
0x18b: V115 = SUB V107 V114
0x18c: V116 = 0x20
0x18e: V117 = ADD 0x20 V115
0x190: RETURN V114 V117
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x191
[0x191:0x197]
---
Predecessors: [0x5f]
Successors: [0x198, 0x199]
---
0x191 JUMPDEST
0x192 CALLVALUE
0x193 ISZERO
0x194 PUSH2 0x199
0x197 JUMPI
---
0x191: JUMPDEST 
0x192: V118 = CALLVALUE
0x193: V119 = ISZERO V118
0x194: V120 = 0x199
0x197: JUMPI 0x199 V119
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x198
[0x198:0x198]
---
Predecessors: [0x191]
Successors: []
---
0x198 INVALID
---
0x198: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x199
[0x199:0x1a0]
---
Predecessors: [0x191]
Successors: [0x4f0]
---
0x199 JUMPDEST
0x19a PUSH2 0x131
0x19d PUSH2 0x4f0
0x1a0 JUMP
---
0x199: JUMPDEST 
0x19a: V121 = 0x131
0x19d: V122 = 0x4f0
0x1a0: JUMP 0x4f0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x131]
Exit stack: [V10, 0x131]

================================

Block 0x1a1
[0x1a1:0x1b2]
---
Predecessors: []
Successors: []
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x40
0x1a4 DUP1
0x1a5 MLOAD
0x1a6 SWAP2
0x1a7 DUP3
0x1a8 MSTORE
0x1a9 MLOAD
0x1aa SWAP1
0x1ab DUP2
0x1ac SWAP1
0x1ad SUB
0x1ae PUSH1 0x20
0x1b0 ADD
0x1b1 SWAP1
0x1b2 RETURN
---
0x1a1: JUMPDEST 
0x1a2: V123 = 0x40
0x1a5: V124 = M[0x40]
0x1a8: M[V124] = S0
0x1a9: V125 = M[0x40]
0x1ad: V126 = SUB V124 V125
0x1ae: V127 = 0x20
0x1b0: V128 = ADD 0x20 V126
0x1b2: RETURN V125 V128
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b3
[0x1b3:0x1b9]
---
Predecessors: [0x6a]
Successors: [0x1ba, 0x1bb]
---
0x1b3 JUMPDEST
0x1b4 CALLVALUE
0x1b5 ISZERO
0x1b6 PUSH2 0x1bb
0x1b9 JUMPI
---
0x1b3: JUMPDEST 
0x1b4: V129 = CALLVALUE
0x1b5: V130 = ISZERO V129
0x1b6: V131 = 0x1bb
0x1b9: JUMPI 0x1bb V130
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ba
[0x1ba:0x1ba]
---
Predecessors: [0x1b3]
Successors: []
---
0x1ba INVALID
---
0x1ba: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1bb
[0x1bb:0x1c2]
---
Predecessors: [0x1b3]
Successors: [0x4f6]
---
0x1bb JUMPDEST
0x1bc PUSH2 0x105
0x1bf PUSH2 0x4f6
0x1c2 JUMP
---
0x1bb: JUMPDEST 
0x1bc: V132 = 0x105
0x1bf: V133 = 0x4f6
0x1c2: JUMP 0x4f6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V10, 0x105]

================================

Block 0x1c3
[0x1c3:0x1de]
---
Predecessors: []
Successors: []
---
0x1c3 JUMPDEST
0x1c4 PUSH1 0x40
0x1c6 DUP1
0x1c7 MLOAD
0x1c8 PUSH1 0x1
0x1ca PUSH1 0xa0
0x1cc PUSH1 0x2
0x1ce EXP
0x1cf SUB
0x1d0 SWAP1
0x1d1 SWAP3
0x1d2 AND
0x1d3 DUP3
0x1d4 MSTORE
0x1d5 MLOAD
0x1d6 SWAP1
0x1d7 DUP2
0x1d8 SWAP1
0x1d9 SUB
0x1da PUSH1 0x20
0x1dc ADD
0x1dd SWAP1
0x1de RETURN
---
0x1c3: JUMPDEST 
0x1c4: V134 = 0x40
0x1c7: V135 = M[0x40]
0x1c8: V136 = 0x1
0x1ca: V137 = 0xa0
0x1cc: V138 = 0x2
0x1ce: V139 = EXP 0x2 0xa0
0x1cf: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d2: V141 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: M[V135] = V141
0x1d5: V142 = M[0x40]
0x1d9: V143 = SUB V135 V142
0x1da: V144 = 0x20
0x1dc: V145 = ADD 0x20 V143
0x1de: RETURN V142 V145
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1df
[0x1df:0x1e5]
---
Predecessors: [0x75]
Successors: [0x1e6, 0x1e7]
---
0x1df JUMPDEST
0x1e0 CALLVALUE
0x1e1 ISZERO
0x1e2 PUSH2 0x1e7
0x1e5 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V146 = CALLVALUE
0x1e1: V147 = ISZERO V146
0x1e2: V148 = 0x1e7
0x1e5: JUMPI 0x1e7 V147
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e6
[0x1e6:0x1e6]
---
Predecessors: [0x1df]
Successors: []
---
0x1e6 INVALID
---
0x1e6: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e7
[0x1e7:0x1ee]
---
Predecessors: [0x1df]
Successors: [0x505]
---
0x1e7 JUMPDEST
0x1e8 PUSH2 0x131
0x1eb PUSH2 0x505
0x1ee JUMP
---
0x1e7: JUMPDEST 
0x1e8: V149 = 0x131
0x1eb: V150 = 0x505
0x1ee: JUMP 0x505
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x131]
Exit stack: [V10, 0x131]

================================

Block 0x1ef
[0x1ef:0x200]
---
Predecessors: []
Successors: []
---
0x1ef JUMPDEST
0x1f0 PUSH1 0x40
0x1f2 DUP1
0x1f3 MLOAD
0x1f4 SWAP2
0x1f5 DUP3
0x1f6 MSTORE
0x1f7 MLOAD
0x1f8 SWAP1
0x1f9 DUP2
0x1fa SWAP1
0x1fb SUB
0x1fc PUSH1 0x20
0x1fe ADD
0x1ff SWAP1
0x200 RETURN
---
0x1ef: JUMPDEST 
0x1f0: V151 = 0x40
0x1f3: V152 = M[0x40]
0x1f6: M[V152] = S0
0x1f7: V153 = M[0x40]
0x1fb: V154 = SUB V152 V153
0x1fc: V155 = 0x20
0x1fe: V156 = ADD 0x20 V154
0x200: RETURN V153 V156
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x201
[0x201:0x207]
---
Predecessors: [0x80]
Successors: [0x208, 0x209]
---
0x201 JUMPDEST
0x202 CALLVALUE
0x203 ISZERO
0x204 PUSH2 0x209
0x207 JUMPI
---
0x201: JUMPDEST 
0x202: V157 = CALLVALUE
0x203: V158 = ISZERO V157
0x204: V159 = 0x209
0x207: JUMPI 0x209 V158
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x208
[0x208:0x208]
---
Predecessors: [0x201]
Successors: []
---
0x208 INVALID
---
0x208: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x209
[0x209:0x210]
---
Predecessors: [0x201]
Successors: [0x50b]
---
0x209 JUMPDEST
0x20a PUSH2 0xf3
0x20d PUSH2 0x50b
0x210 JUMP
---
0x209: JUMPDEST 
0x20a: V160 = 0xf3
0x20d: V161 = 0x50b
0x210: JUMP 0x50b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf3]
Exit stack: [V10, 0xf3]

================================

Block 0x211
[0x211:0x212]
---
Predecessors: []
Successors: []
---
0x211 JUMPDEST
0x212 STOP
---
0x211: JUMPDEST 
0x212: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x213
[0x213:0x219]
---
Predecessors: [0x8b]
Successors: [0x21a, 0x21b]
---
0x213 JUMPDEST
0x214 CALLVALUE
0x215 ISZERO
0x216 PUSH2 0x21b
0x219 JUMPI
---
0x213: JUMPDEST 
0x214: V162 = CALLVALUE
0x215: V163 = ISZERO V162
0x216: V164 = 0x21b
0x219: JUMPI 0x21b V163
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21a
[0x21a:0x21a]
---
Predecessors: [0x213]
Successors: []
---
0x21a INVALID
---
0x21a: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21b
[0x21b:0x222]
---
Predecessors: [0x213]
Successors: [0x611]
---
0x21b JUMPDEST
0x21c PUSH2 0x131
0x21f PUSH2 0x611
0x222 JUMP
---
0x21b: JUMPDEST 
0x21c: V165 = 0x131
0x21f: V166 = 0x611
0x222: JUMP 0x611
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x131]
Exit stack: [V10, 0x131]

================================

Block 0x223
[0x223:0x234]
---
Predecessors: []
Successors: []
---
0x223 JUMPDEST
0x224 PUSH1 0x40
0x226 DUP1
0x227 MLOAD
0x228 SWAP2
0x229 DUP3
0x22a MSTORE
0x22b MLOAD
0x22c SWAP1
0x22d DUP2
0x22e SWAP1
0x22f SUB
0x230 PUSH1 0x20
0x232 ADD
0x233 SWAP1
0x234 RETURN
---
0x223: JUMPDEST 
0x224: V167 = 0x40
0x227: V168 = M[0x40]
0x22a: M[V168] = S0
0x22b: V169 = M[0x40]
0x22f: V170 = SUB V168 V169
0x230: V171 = 0x20
0x232: V172 = ADD 0x20 V170
0x234: RETURN V169 V172
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x235
[0x235:0x23b]
---
Predecessors: [0x96]
Successors: [0x23c, 0x23d]
---
0x235 JUMPDEST
0x236 CALLVALUE
0x237 ISZERO
0x238 PUSH2 0x23d
0x23b JUMPI
---
0x235: JUMPDEST 
0x236: V173 = CALLVALUE
0x237: V174 = ISZERO V173
0x238: V175 = 0x23d
0x23b: JUMPI 0x23d V174
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x23c
[0x23c:0x23c]
---
Predecessors: [0x235]
Successors: []
---
0x23c INVALID
---
0x23c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x23d
[0x23d:0x244]
---
Predecessors: [0x235]
Successors: [0x617]
---
0x23d JUMPDEST
0x23e PUSH2 0x245
0x241 PUSH2 0x617
0x244 JUMP
---
0x23d: JUMPDEST 
0x23e: V176 = 0x245
0x241: V177 = 0x617
0x244: JUMP 0x617
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x245]
Exit stack: [V10, 0x245]

================================

Block 0x245
[0x245:0x258]
---
Predecessors: [0x775]
Successors: []
---
0x245 JUMPDEST
0x246 PUSH1 0x40
0x248 DUP1
0x249 MLOAD
0x24a SWAP2
0x24b ISZERO
0x24c ISZERO
0x24d DUP3
0x24e MSTORE
0x24f MLOAD
0x250 SWAP1
0x251 DUP2
0x252 SWAP1
0x253 SUB
0x254 PUSH1 0x20
0x256 ADD
0x257 SWAP1
0x258 RETURN
---
0x245: JUMPDEST 
0x246: V178 = 0x40
0x249: V179 = M[0x40]
0x24b: V180 = ISZERO {0x0, 0x1}
0x24c: V181 = ISZERO V180
0x24e: M[V179] = V181
0x24f: V182 = M[0x40]
0x253: V183 = SUB V179 V182
0x254: V184 = 0x20
0x256: V185 = ADD 0x20 V183
0x258: RETURN V182 V185
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x259
[0x259:0x25f]
---
Predecessors: [0xa1]
Successors: [0x260, 0x261]
---
0x259 JUMPDEST
0x25a CALLVALUE
0x25b ISZERO
0x25c PUSH2 0x261
0x25f JUMPI
---
0x259: JUMPDEST 
0x25a: V186 = CALLVALUE
0x25b: V187 = ISZERO V186
0x25c: V188 = 0x261
0x25f: JUMPI 0x261 V187
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x260
[0x260:0x260]
---
Predecessors: [0x259]
Successors: []
---
0x260 INVALID
---
0x260: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x261
[0x261:0x268]
---
Predecessors: [0x259]
Successors: [0x77b]
---
0x261 JUMPDEST
0x262 PUSH2 0x269
0x265 PUSH2 0x77b
0x268 JUMP
---
0x261: JUMPDEST 
0x262: V189 = 0x269
0x265: V190 = 0x77b
0x268: JUMP 0x77b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x269]
Exit stack: [V10, 0x269]

================================

Block 0x269
[0x269:0x277]
---
Predecessors: [0x77b]
Successors: [0x278, 0x279]
---
0x269 JUMPDEST
0x26a PUSH1 0x40
0x26c MLOAD
0x26d DUP1
0x26e DUP3
0x26f PUSH1 0x3
0x271 DUP2
0x272 GT
0x273 ISZERO
0x274 PUSH2 0x279
0x277 JUMPI
---
0x269: JUMPDEST 
0x26a: V191 = 0x40
0x26c: V192 = M[0x40]
0x26f: V193 = 0x3
0x272: V194 = GT V643 0x3
0x273: V195 = ISZERO V194
0x274: V196 = 0x279
0x277: JUMPI 0x279 V195
---
Entry stack: [V10, 0x269, V643]
Stack pops: 1
Stack additions: [S0, V192, V192, S0]
Exit stack: [V10, 0x269, V643, V192, V192, V643]

================================

Block 0x278
[0x278:0x278]
---
Predecessors: [0x269]
Successors: []
---
0x278 INVALID
---
0x278: INVALID 
---
Entry stack: [V10, 0x269, V643, V192, V192, V643]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x269, V643, V192, V192, V643]

================================

Block 0x279
[0x279:0x28c]
---
Predecessors: [0x269]
Successors: []
---
0x279 JUMPDEST
0x27a PUSH1 0xff
0x27c AND
0x27d DUP2
0x27e MSTORE
0x27f PUSH1 0x20
0x281 ADD
0x282 SWAP2
0x283 POP
0x284 POP
0x285 PUSH1 0x40
0x287 MLOAD
0x288 DUP1
0x289 SWAP2
0x28a SUB
0x28b SWAP1
0x28c RETURN
---
0x279: JUMPDEST 
0x27a: V197 = 0xff
0x27c: V198 = AND 0xff V643
0x27e: M[V192] = V198
0x27f: V199 = 0x20
0x281: V200 = ADD 0x20 V192
0x285: V201 = 0x40
0x287: V202 = M[0x40]
0x28a: V203 = SUB V200 V202
0x28c: RETURN V202 V203
---
Entry stack: [V10, 0x269, V643, V192, V192, V643]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x269]

================================

Block 0x28d
[0x28d:0x293]
---
Predecessors: [0xac]
Successors: [0x294, 0x295]
---
0x28d JUMPDEST
0x28e CALLVALUE
0x28f ISZERO
0x290 PUSH2 0x295
0x293 JUMPI
---
0x28d: JUMPDEST 
0x28e: V204 = CALLVALUE
0x28f: V205 = ISZERO V204
0x290: V206 = 0x295
0x293: JUMPI 0x295 V205
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x294
[0x294:0x294]
---
Predecessors: [0x28d]
Successors: []
---
0x294 INVALID
---
0x294: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x295
[0x295:0x29c]
---
Predecessors: [0x28d]
Successors: [0x784]
---
0x295 JUMPDEST
0x296 PUSH2 0xf3
0x299 PUSH2 0x784
0x29c JUMP
---
0x295: JUMPDEST 
0x296: V207 = 0xf3
0x299: V208 = 0x784
0x29c: JUMP 0x784
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf3]
Exit stack: [V10, 0xf3]

================================

Block 0x29d
[0x29d:0x29e]
---
Predecessors: []
Successors: []
---
0x29d JUMPDEST
0x29e STOP
---
0x29d: JUMPDEST 
0x29e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x29f
[0x29f:0x2a5]
---
Predecessors: [0xb7]
Successors: [0x2a6, 0x2a7]
---
0x29f JUMPDEST
0x2a0 CALLVALUE
0x2a1 ISZERO
0x2a2 PUSH2 0x2a7
0x2a5 JUMPI
---
0x29f: JUMPDEST 
0x2a0: V209 = CALLVALUE
0x2a1: V210 = ISZERO V209
0x2a2: V211 = 0x2a7
0x2a5: JUMPI 0x2a7 V210
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a6
[0x2a6:0x2a6]
---
Predecessors: [0x29f]
Successors: []
---
0x2a6 INVALID
---
0x2a6: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a7
[0x2a7:0x2ae]
---
Predecessors: [0x29f]
Successors: [0x838]
---
0x2a7 JUMPDEST
0x2a8 PUSH2 0x131
0x2ab PUSH2 0x838
0x2ae JUMP
---
0x2a7: JUMPDEST 
0x2a8: V212 = 0x131
0x2ab: V213 = 0x838
0x2ae: JUMP 0x838
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x131]
Exit stack: [V10, 0x131]

================================

Block 0x2af
[0x2af:0x2c0]
---
Predecessors: []
Successors: []
---
0x2af JUMPDEST
0x2b0 PUSH1 0x40
0x2b2 DUP1
0x2b3 MLOAD
0x2b4 SWAP2
0x2b5 DUP3
0x2b6 MSTORE
0x2b7 MLOAD
0x2b8 SWAP1
0x2b9 DUP2
0x2ba SWAP1
0x2bb SUB
0x2bc PUSH1 0x20
0x2be ADD
0x2bf SWAP1
0x2c0 RETURN
---
0x2af: JUMPDEST 
0x2b0: V214 = 0x40
0x2b3: V215 = M[0x40]
0x2b6: M[V215] = S0
0x2b7: V216 = M[0x40]
0x2bb: V217 = SUB V215 V216
0x2bc: V218 = 0x20
0x2be: V219 = ADD 0x20 V217
0x2c0: RETURN V216 V219
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c1
[0x2c1:0x2c7]
---
Predecessors: [0xc2]
Successors: [0x2c8, 0x2c9]
---
0x2c1 JUMPDEST
0x2c2 CALLVALUE
0x2c3 ISZERO
0x2c4 PUSH2 0x2c9
0x2c7 JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V220 = CALLVALUE
0x2c3: V221 = ISZERO V220
0x2c4: V222 = 0x2c9
0x2c7: JUMPI 0x2c9 V221
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c8
[0x2c8:0x2c8]
---
Predecessors: [0x2c1]
Successors: []
---
0x2c8 INVALID
---
0x2c8: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c9
[0x2c9:0x2d0]
---
Predecessors: [0x2c1]
Successors: [0x83e]
---
0x2c9 JUMPDEST
0x2ca PUSH2 0x131
0x2cd PUSH2 0x83e
0x2d0 JUMP
---
0x2c9: JUMPDEST 
0x2ca: V223 = 0x131
0x2cd: V224 = 0x83e
0x2d0: JUMP 0x83e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x131]
Exit stack: [V10, 0x131]

================================

Block 0x2d1
[0x2d1:0x2e2]
---
Predecessors: []
Successors: []
---
0x2d1 JUMPDEST
0x2d2 PUSH1 0x40
0x2d4 DUP1
0x2d5 MLOAD
0x2d6 SWAP2
0x2d7 DUP3
0x2d8 MSTORE
0x2d9 MLOAD
0x2da SWAP1
0x2db DUP2
0x2dc SWAP1
0x2dd SUB
0x2de PUSH1 0x20
0x2e0 ADD
0x2e1 SWAP1
0x2e2 RETURN
---
0x2d1: JUMPDEST 
0x2d2: V225 = 0x40
0x2d5: V226 = M[0x40]
0x2d8: M[V226] = S0
0x2d9: V227 = M[0x40]
0x2dd: V228 = SUB V226 V227
0x2de: V229 = 0x20
0x2e0: V230 = ADD 0x20 V228
0x2e2: RETURN V227 V230
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e3
[0x2e3:0x2ea]
---
Predecessors: [0xcd]
Successors: [0x30f]
---
0x2e3 JUMPDEST
0x2e4 PUSH2 0x131
0x2e7 PUSH2 0x30f
0x2ea JUMP
---
0x2e3: JUMPDEST 
0x2e4: V231 = 0x131
0x2e7: V232 = 0x30f
0x2ea: JUMP 0x30f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x131]
Exit stack: [V10, 0x131]

================================

Block 0x2eb
[0x2eb:0x2fc]
---
Predecessors: []
Successors: []
---
0x2eb JUMPDEST
0x2ec PUSH1 0x40
0x2ee DUP1
0x2ef MLOAD
0x2f0 SWAP2
0x2f1 DUP3
0x2f2 MSTORE
0x2f3 MLOAD
0x2f4 SWAP1
0x2f5 DUP2
0x2f6 SWAP1
0x2f7 SUB
0x2f8 PUSH1 0x20
0x2fa ADD
0x2fb SWAP1
0x2fc RETURN
---
0x2eb: JUMPDEST 
0x2ec: V233 = 0x40
0x2ef: V234 = M[0x40]
0x2f2: M[V234] = S0
0x2f3: V235 = M[0x40]
0x2f7: V236 = SUB V234 V235
0x2f8: V237 = 0x20
0x2fa: V238 = ADD 0x20 V236
0x2fc: RETURN V235 V238
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2fd
[0x2fd:0x303]
---
Predecessors: [0xd8]
Successors: [0x304, 0x305]
---
0x2fd JUMPDEST
0x2fe CALLVALUE
0x2ff ISZERO
0x300 PUSH2 0x305
0x303 JUMPI
---
0x2fd: JUMPDEST 
0x2fe: V239 = CALLVALUE
0x2ff: V240 = ISZERO V239
0x300: V241 = 0x305
0x303: JUMPI 0x305 V240
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x304
[0x304:0x304]
---
Predecessors: [0x2fd]
Successors: []
---
0x304 INVALID
---
0x304: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x305
[0x305:0x30c]
---
Predecessors: [0x2fd]
Successors: [0x844]
---
0x305 JUMPDEST
0x306 PUSH2 0xf3
0x309 PUSH2 0x844
0x30c JUMP
---
0x305: JUMPDEST 
0x306: V242 = 0xf3
0x309: V243 = 0x844
0x30c: JUMP 0x844
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf3]
Exit stack: [V10, 0xf3]

================================

Block 0x30d
[0x30d:0x30e]
---
Predecessors: []
Successors: []
---
0x30d JUMPDEST
0x30e STOP
---
0x30d: JUMPDEST 
0x30e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x30f
[0x30f:0x314]
---
Predecessors: [0xe7, 0x2e3]
Successors: [0x315]
---
0x30f JUMPDEST
0x310 PUSH1 0x0
0x312 DUP1
0x313 DUP1
0x314 DUP1
---
0x30f: JUMPDEST 
0x310: V244 = 0x0
---
Entry stack: [V10, S1, {0xef, 0x131}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, S1, {0xef, 0x131}, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x315
[0x315:0x324]
---
Predecessors: [0x30f]
Successors: [0x325, 0x326]
---
0x315 JUMPDEST
0x316 PUSH1 0x0
0x318 SLOAD
0x319 PUSH1 0xff
0x31b AND
0x31c PUSH1 0x3
0x31e DUP2
0x31f GT
0x320 ISZERO
0x321 PUSH2 0x326
0x324 JUMPI
---
0x315: JUMPDEST 
0x316: V245 = 0x0
0x318: V246 = S[0x0]
0x319: V247 = 0xff
0x31b: V248 = AND 0xff V246
0x31c: V249 = 0x3
0x31f: V250 = GT V248 0x3
0x320: V251 = ISZERO V250
0x321: V252 = 0x326
0x324: JUMPI 0x326 V251
---
Entry stack: [V10, S5, {0xef, 0x131}, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V248]
Exit stack: [V10, S5, {0xef, 0x131}, 0x0, 0x0, 0x0, 0x0, V248]

================================

Block 0x325
[0x325:0x325]
---
Predecessors: [0x315]
Successors: []
---
0x325 INVALID
---
0x325: INVALID 
---
Entry stack: [V10, S6, {0xef, 0x131}, 0x0, 0x0, 0x0, 0x0, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S6, {0xef, 0x131}, 0x0, 0x0, 0x0, 0x0, V248]

================================

Block 0x326
[0x326:0x32b]
---
Predecessors: [0x315]
Successors: [0x32c, 0x331]
---
0x326 JUMPDEST
0x327 EQ
0x328 PUSH2 0x331
0x32b JUMPI
---
0x326: JUMPDEST 
0x327: V253 = EQ V248 0x0
0x328: V254 = 0x331
0x32b: JUMPI 0x331 V253
---
Entry stack: [V10, S6, {0xef, 0x131}, 0x0, 0x0, 0x0, 0x0, V248]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S6, {0xef, 0x131}, 0x0, 0x0, 0x0]

================================

Block 0x32c
[0x32c:0x330]
---
Predecessors: [0x326]
Successors: []
---
0x32c PUSH1 0x0
0x32e PUSH1 0x0
0x330 REVERT
---
0x32c: V255 = 0x0
0x32e: V256 = 0x0
0x330: REVERT 0x0 0x0
---
Entry stack: [V10, S4, {0xef, 0x131}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xef, 0x131}, 0x0, 0x0, 0x0]

================================

Block 0x331
[0x331:0x33b]
---
Predecessors: [0x326]
Successors: [0x33c, 0x341]
---
0x331 JUMPDEST
0x332 PUSH1 0x6
0x334 SLOAD
0x335 CALLVALUE
0x336 LT
0x337 ISZERO
0x338 PUSH2 0x341
0x33b JUMPI
---
0x331: JUMPDEST 
0x332: V257 = 0x6
0x334: V258 = S[0x6]
0x335: V259 = CALLVALUE
0x336: V260 = LT V259 V258
0x337: V261 = ISZERO V260
0x338: V262 = 0x341
0x33b: JUMPI 0x341 V261
---
Entry stack: [V10, S4, {0xef, 0x131}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xef, 0x131}, 0x0, 0x0, 0x0]

================================

Block 0x33c
[0x33c:0x340]
---
Predecessors: [0x331]
Successors: []
---
0x33c PUSH1 0x0
0x33e PUSH1 0x0
0x340 REVERT
---
0x33c: V263 = 0x0
0x33e: V264 = 0x0
0x340: REVERT 0x0 0x0
---
Entry stack: [V10, S4, {0xef, 0x131}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xef, 0x131}, 0x0, 0x0, 0x0]

================================

Block 0x341
[0x341:0x354]
---
Predecessors: [0x331]
Successors: [0x8be]
---
0x341 JUMPDEST
0x342 PUSH1 0x1
0x344 DUP1
0x345 SLOAD
0x346 CALLVALUE
0x347 SWAP4
0x348 POP
0x349 DUP1
0x34a DUP3
0x34b ADD
0x34c PUSH2 0x355
0x34f DUP4
0x350 DUP3
0x351 PUSH2 0x8be
0x354 JUMP
---
0x341: JUMPDEST 
0x342: V265 = 0x1
0x345: V266 = S[0x1]
0x346: V267 = CALLVALUE
0x34b: V268 = ADD 0x1 V266
0x34c: V269 = 0x355
0x351: V270 = 0x8be
0x354: JUMP 0x8be
---
Entry stack: [V10, S4, {0xef, 0x131}, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [V267, S0, 0x1, V266, V268, 0x355, 0x1, V268]
Exit stack: [V10, S4, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268]

================================

Block 0x355
[0x355:0x365]
---
Predecessors: [0x8eb]
Successors: [0x366]
---
0x355 JUMPDEST
0x356 SWAP2
0x357 PUSH1 0x0
0x359 MSTORE
0x35a PUSH1 0x20
0x35c PUSH1 0x0
0x35e SHA3
0x35f SWAP1
0x360 PUSH1 0x2
0x362 MUL
0x363 ADD
0x364 PUSH1 0x0
---
0x355: JUMPDEST 
0x357: V271 = 0x0
0x359: M[0x0] = 0x1
0x35a: V272 = 0x20
0x35c: V273 = 0x0
0x35e: V274 = SHA3 0x0 0x20
0x360: V275 = 0x2
0x362: V276 = MUL 0x2 V266
0x363: V277 = ADD V276 V274
0x364: V278 = 0x0
---
Entry stack: [V10, S7, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268]
Stack pops: 3
Stack additions: [S0, V277, 0x0]
Exit stack: [V10, S7, {0xef, 0x131}, 0x0, V267, 0x0, V268, V277, 0x0]

================================

Block 0x366
[0x366:0x3c4]
---
Predecessors: [0x355]
Successors: [0x3c5, 0x462]
---
0x366 JUMPDEST
0x367 POP
0x368 PUSH1 0x40
0x36a DUP1
0x36b MLOAD
0x36c DUP1
0x36d DUP3
0x36e ADD
0x36f SWAP1
0x370 SWAP2
0x371 MSTORE
0x372 CALLVALUE
0x373 DUP1
0x374 DUP3
0x375 MSTORE
0x376 PUSH1 0x1
0x378 PUSH1 0xa0
0x37a PUSH1 0x2
0x37c EXP
0x37d SUB
0x37e CALLER
0x37f AND
0x380 PUSH1 0x20
0x382 SWAP1
0x383 SWAP3
0x384 ADD
0x385 DUP3
0x386 SWAP1
0x387 MSTORE
0x388 DUP1
0x389 DUP4
0x38a SSTORE
0x38b PUSH1 0x1
0x38d SWAP1
0x38e SWAP3
0x38f ADD
0x390 DUP1
0x391 SLOAD
0x392 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a7 NOT
0x3a8 AND
0x3a9 SWAP1
0x3aa SWAP2
0x3ab OR
0x3ac SWAP1
0x3ad SSTORE
0x3ae PUSH1 0x2
0x3b0 DUP1
0x3b1 SLOAD
0x3b2 SWAP1
0x3b3 SWAP2
0x3b4 ADD
0x3b5 SWAP1
0x3b6 DUP2
0x3b7 SWAP1
0x3b8 SSTORE
0x3b9 PUSH1 0x3
0x3bb SSTORE
0x3bc POP
0x3bd PUSH1 0x8
0x3bf SLOAD
0x3c0 ISZERO
0x3c1 PUSH2 0x462
0x3c4 JUMPI
---
0x366: JUMPDEST 
0x368: V279 = 0x40
0x36b: V280 = M[0x40]
0x36e: V281 = ADD 0x40 V280
0x371: M[0x40] = V281
0x372: V282 = CALLVALUE
0x375: M[V280] = V282
0x376: V283 = 0x1
0x378: V284 = 0xa0
0x37a: V285 = 0x2
0x37c: V286 = EXP 0x2 0xa0
0x37d: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37e: V288 = CALLER
0x37f: V289 = AND V288 0xffffffffffffffffffffffffffffffffffffffff
0x380: V290 = 0x20
0x384: V291 = ADD V280 0x20
0x387: M[V291] = V289
0x38a: S[V277] = V282
0x38b: V292 = 0x1
0x38f: V293 = ADD V277 0x1
0x391: V294 = S[V293]
0x392: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a7: V296 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3a8: V297 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V294
0x3ab: V298 = OR V289 V297
0x3ad: S[V293] = V298
0x3ae: V299 = 0x2
0x3b1: V300 = S[0x2]
0x3b4: V301 = ADD V282 V300
0x3b8: S[0x2] = V301
0x3b9: V302 = 0x3
0x3bb: S[0x3] = V301
0x3bd: V303 = 0x8
0x3bf: V304 = S[0x8]
0x3c0: V305 = ISZERO V304
0x3c1: V306 = 0x462
0x3c4: JUMPI 0x462 V305
---
Entry stack: [V10, S7, {0xef, 0x131}, 0x0, V267, 0x0, V268, V277, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S7, {0xef, 0x131}, 0x0, V267, 0x0]

================================

Block 0x3c5
[0x3c5:0x3e6]
---
Predecessors: [0x366]
Successors: [0x3e7, 0x3e8]
---
0x3c5 PUSH1 0x9
0x3c7 SLOAD
0x3c8 PUSH1 0x6
0x3ca SLOAD
0x3cb PUSH1 0x1
0x3cd PUSH1 0xa0
0x3cf PUSH1 0x2
0x3d1 EXP
0x3d2 SUB
0x3d3 SWAP1
0x3d4 SWAP2
0x3d5 AND
0x3d6 SWAP1
0x3d7 PUSH4 0x79c65068
0x3dc SWAP1
0x3dd CALLER
0x3de SWAP1
0x3df DUP6
0x3e0 DUP2
0x3e1 ISZERO
0x3e2 ISZERO
0x3e3 PUSH2 0x3e8
0x3e6 JUMPI
---
0x3c5: V307 = 0x9
0x3c7: V308 = S[0x9]
0x3c8: V309 = 0x6
0x3ca: V310 = S[0x6]
0x3cb: V311 = 0x1
0x3cd: V312 = 0xa0
0x3cf: V313 = 0x2
0x3d1: V314 = EXP 0x2 0xa0
0x3d2: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d5: V316 = AND V308 0xffffffffffffffffffffffffffffffffffffffff
0x3d7: V317 = 0x79c65068
0x3dd: V318 = CALLER
0x3e1: V319 = ISZERO V310
0x3e2: V320 = ISZERO V319
0x3e3: V321 = 0x3e8
0x3e6: JUMPI 0x3e8 V320
---
Entry stack: [V10, S4, {0xef, 0x131}, 0x0, V267, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V316, 0x79c65068, V318, V310, S1]
Exit stack: [V10, S4, {0xef, 0x131}, 0x0, V267, 0x0, V316, 0x79c65068, V318, V310, V267]

================================

Block 0x3e7
[0x3e7:0x3e7]
---
Predecessors: [0x3c5]
Successors: []
---
0x3e7 INVALID
---
0x3e7: INVALID 
---
Entry stack: [V10, S9, {0xef, 0x131}, 0x0, V267, 0x0, V316, 0x79c65068, V318, V310, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S9, {0xef, 0x131}, 0x0, V267, 0x0, V316, 0x79c65068, V318, V310, V267]

================================

Block 0x3e8
[0x3e8:0x44e]
---
Predecessors: [0x3c5]
Successors: [0x44f, 0x450]
---
0x3e8 JUMPDEST
0x3e9 DIV
0x3ea PUSH1 0x40
0x3ec MLOAD
0x3ed DUP4
0x3ee PUSH4 0xffffffff
0x3f3 AND
0x3f4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x412 MUL
0x413 DUP2
0x414 MSTORE
0x415 PUSH1 0x4
0x417 ADD
0x418 DUP1
0x419 DUP4
0x41a PUSH1 0x1
0x41c PUSH1 0xa0
0x41e PUSH1 0x2
0x420 EXP
0x421 SUB
0x422 AND
0x423 PUSH1 0x1
0x425 PUSH1 0xa0
0x427 PUSH1 0x2
0x429 EXP
0x42a SUB
0x42b AND
0x42c DUP2
0x42d MSTORE
0x42e PUSH1 0x20
0x430 ADD
0x431 DUP3
0x432 DUP2
0x433 MSTORE
0x434 PUSH1 0x20
0x436 ADD
0x437 SWAP3
0x438 POP
0x439 POP
0x43a POP
0x43b PUSH1 0x0
0x43d PUSH1 0x40
0x43f MLOAD
0x440 DUP1
0x441 DUP4
0x442 SUB
0x443 DUP2
0x444 PUSH1 0x0
0x446 DUP8
0x447 DUP1
0x448 EXTCODESIZE
0x449 ISZERO
0x44a ISZERO
0x44b PUSH2 0x450
0x44e JUMPI
---
0x3e8: JUMPDEST 
0x3e9: V322 = DIV V267 V310
0x3ea: V323 = 0x40
0x3ec: V324 = M[0x40]
0x3ee: V325 = 0xffffffff
0x3f3: V326 = AND 0xffffffff 0x79c65068
0x3f4: V327 = 0x100000000000000000000000000000000000000000000000000000000
0x412: V328 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x79c65068
0x414: M[V324] = 0x79c6506800000000000000000000000000000000000000000000000000000000
0x415: V329 = 0x4
0x417: V330 = ADD 0x4 V324
0x41a: V331 = 0x1
0x41c: V332 = 0xa0
0x41e: V333 = 0x2
0x420: V334 = EXP 0x2 0xa0
0x421: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x422: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x423: V337 = 0x1
0x425: V338 = 0xa0
0x427: V339 = 0x2
0x429: V340 = EXP 0x2 0xa0
0x42a: V341 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42b: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x42d: M[V330] = V342
0x42e: V343 = 0x20
0x430: V344 = ADD 0x20 V330
0x433: M[V344] = V322
0x434: V345 = 0x20
0x436: V346 = ADD 0x20 V344
0x43b: V347 = 0x0
0x43d: V348 = 0x40
0x43f: V349 = M[0x40]
0x442: V350 = SUB V346 V349
0x444: V351 = 0x0
0x448: V352 = EXTCODESIZE V316
0x449: V353 = ISZERO V352
0x44a: V354 = ISZERO V353
0x44b: V355 = 0x450
0x44e: JUMPI 0x450 V354
---
Entry stack: [V10, S9, {0xef, 0x131}, 0x0, V267, 0x0, V316, 0x79c65068, V318, V310, V267]
Stack pops: 5
Stack additions: [S4, S3, V346, 0x0, V349, V350, V349, 0x0, S4]
Exit stack: [V10, S9, {0xef, 0x131}, 0x0, V267, 0x0, V316, 0x79c65068, V346, 0x0, V349, V350, V349, 0x0, V316]

================================

Block 0x44f
[0x44f:0x44f]
---
Predecessors: [0x3e8]
Successors: []
---
0x44f INVALID
---
0x44f: INVALID 
---
Entry stack: [V10, S13, {0xef, 0x131}, 0x0, V267, 0x0, V316, 0x79c65068, V346, 0x0, V349, V350, V349, 0x0, V316]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S13, {0xef, 0x131}, 0x0, V267, 0x0, V316, 0x79c65068, V346, 0x0, V349, V350, V349, 0x0, V316]

================================

Block 0x450
[0x450:0x45c]
---
Predecessors: [0x3e8]
Successors: [0x45d, 0x45e]
---
0x450 JUMPDEST
0x451 PUSH2 0x2c6
0x454 GAS
0x455 SUB
0x456 CALL
0x457 ISZERO
0x458 ISZERO
0x459 PUSH2 0x45e
0x45c JUMPI
---
0x450: JUMPDEST 
0x451: V356 = 0x2c6
0x454: V357 = GAS
0x455: V358 = SUB V357 0x2c6
0x456: V359 = CALL V358 V316 0x0 V349 V350 V349 0x0
0x457: V360 = ISZERO V359
0x458: V361 = ISZERO V360
0x459: V362 = 0x45e
0x45c: JUMPI 0x45e V361
---
Entry stack: [V10, S13, {0xef, 0x131}, 0x0, V267, 0x0, V316, 0x79c65068, V346, 0x0, V349, V350, V349, 0x0, V316]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S13, {0xef, 0x131}, 0x0, V267, 0x0, V316, 0x79c65068, V346]

================================

Block 0x45d
[0x45d:0x45d]
---
Predecessors: [0x450]
Successors: []
---
0x45d INVALID
---
0x45d: INVALID 
---
Entry stack: [V10, S7, {0xef, 0x131}, 0x0, V267, 0x0, V316, 0x79c65068, V346]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xef, 0x131}, 0x0, V267, 0x0, V316, 0x79c65068, V346]

================================

Block 0x45e
[0x45e:0x461]
---
Predecessors: [0x450]
Successors: [0x462]
---
0x45e JUMPDEST
0x45f POP
0x460 POP
0x461 POP
---
0x45e: JUMPDEST 
---
Entry stack: [V10, S7, {0xef, 0x131}, 0x0, V267, 0x0, V316, 0x79c65068, V346]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S7, {0xef, 0x131}, 0x0, V267, 0x0]

================================

Block 0x462
[0x462:0x4b4]
---
Predecessors: [0x366, 0x45e]
Successors: [0x50b]
---
0x462 JUMPDEST
0x463 PUSH1 0x2
0x465 SLOAD
0x466 PUSH1 0x40
0x468 DUP1
0x469 MLOAD
0x46a PUSH1 0x1
0x46c PUSH1 0xa0
0x46e PUSH1 0x2
0x470 EXP
0x471 SUB
0x472 CALLER
0x473 AND
0x474 DUP2
0x475 MSTORE
0x476 CALLVALUE
0x477 PUSH1 0x20
0x479 DUP3
0x47a ADD
0x47b MSTORE
0x47c DUP1
0x47d DUP3
0x47e ADD
0x47f SWAP3
0x480 SWAP1
0x481 SWAP3
0x482 MSTORE
0x483 MLOAD
0x484 PUSH32 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x4a5 SWAP2
0x4a6 DUP2
0x4a7 SWAP1
0x4a8 SUB
0x4a9 PUSH1 0x60
0x4ab ADD
0x4ac SWAP1
0x4ad LOG1
0x4ae PUSH2 0x4b5
0x4b1 PUSH2 0x50b
0x4b4 JUMP
---
0x462: JUMPDEST 
0x463: V363 = 0x2
0x465: V364 = S[0x2]
0x466: V365 = 0x40
0x469: V366 = M[0x40]
0x46a: V367 = 0x1
0x46c: V368 = 0xa0
0x46e: V369 = 0x2
0x470: V370 = EXP 0x2 0xa0
0x471: V371 = SUB 0x10000000000000000000000000000000000000000 0x1
0x472: V372 = CALLER
0x473: V373 = AND V372 0xffffffffffffffffffffffffffffffffffffffff
0x475: M[V366] = V373
0x476: V374 = CALLVALUE
0x477: V375 = 0x20
0x47a: V376 = ADD V366 0x20
0x47b: M[V376] = V374
0x47e: V377 = ADD 0x40 V366
0x482: M[V377] = V364
0x483: V378 = M[0x40]
0x484: V379 = 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x4a8: V380 = SUB V366 V378
0x4a9: V381 = 0x60
0x4ab: V382 = ADD 0x60 V380
0x4ad: LOG V378 V382 0x304e48bb03eae5e9bf3575d270648664895983e116a51773a65e9f3341b3b40e
0x4ae: V383 = 0x4b5
0x4b1: V384 = 0x50b
0x4b4: JUMP 0x50b
---
Entry stack: [V10, S4, {0xef, 0x131}, 0x0, V267, 0x0]
Stack pops: 0
Stack additions: [0x4b5]
Exit stack: [V10, S4, {0xef, 0x131}, 0x0, V267, 0x0, 0x4b5]

================================

Block 0x4b5
[0x4b5:0x4be]
---
Predecessors: [0xf1, 0x60f]
Successors: [0x4bf]
---
0x4b5 JUMPDEST
0x4b6 PUSH1 0x1
0x4b8 SLOAD
0x4b9 PUSH1 0x0
0x4bb NOT
0x4bc ADD
0x4bd SWAP3
0x4be POP
---
0x4b5: JUMPDEST 
0x4b6: V385 = 0x1
0x4b8: V386 = S[0x1]
0x4b9: V387 = 0x0
0x4bb: V388 = NOT 0x0
0x4bc: V389 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V386
---
Entry stack: [V10, S4, {0xef, 0x131}, 0x0, V267, S0]
Stack pops: 3
Stack additions: [V389, S1, S0]
Exit stack: [V10, S4, {0xef, 0x131}, V389, V267, S0]

================================

Block 0x4bf
[0x4bf:0x4bf]
---
Predecessors: [0x4b5]
Successors: [0x4c0]
---
0x4bf JUMPDEST
---
0x4bf: JUMPDEST 
---
Entry stack: [V10, S4, {0xef, 0x131}, V389, V267, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xef, 0x131}, V389, V267, S0]

================================

Block 0x4c0
[0x4c0:0x4c0]
---
Predecessors: [0x4bf]
Successors: [0x4c1]
---
0x4c0 JUMPDEST
---
0x4c0: JUMPDEST 
---
Entry stack: [V10, S4, {0xef, 0x131}, S2, V267, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0xef, 0x131}, S2, V267, S0]

================================

Block 0x4c1
[0x4c1:0x4c5]
---
Predecessors: [0x4c0]
Successors: [0xef, 0x131]
---
0x4c1 JUMPDEST
0x4c2 POP
0x4c3 POP
0x4c4 SWAP1
0x4c5 JUMP
---
0x4c1: JUMPDEST 
0x4c5: JUMP {0xef, 0x131}
---
Entry stack: [V10, S4, {0xef, 0x131}, S2, V267, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V10, S4, S2]

================================

Block 0x4c6
[0x4c6:0x4d4]
---
Predecessors: [0xfd]
Successors: [0x105]
---
0x4c6 JUMPDEST
0x4c7 PUSH1 0xa
0x4c9 SLOAD
0x4ca PUSH1 0x1
0x4cc PUSH1 0xa0
0x4ce PUSH1 0x2
0x4d0 EXP
0x4d1 SUB
0x4d2 AND
0x4d3 DUP2
0x4d4 JUMP
---
0x4c6: JUMPDEST 
0x4c7: V390 = 0xa
0x4c9: V391 = S[0xa]
0x4ca: V392 = 0x1
0x4cc: V393 = 0xa0
0x4ce: V394 = 0x2
0x4d0: V395 = EXP 0x2 0xa0
0x4d1: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d2: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x4d4: JUMP 0x105
---
Entry stack: [V10, 0x105]
Stack pops: 1
Stack additions: [S0, V397]
Exit stack: [V10, 0x105, V397]

================================

Block 0x4d5
[0x4d5:0x4da]
---
Predecessors: [0x129]
Successors: [0x131]
---
0x4d5 JUMPDEST
0x4d6 PUSH1 0x4
0x4d8 SLOAD
0x4d9 DUP2
0x4da JUMP
---
0x4d5: JUMPDEST 
0x4d6: V398 = 0x4
0x4d8: V399 = S[0x4]
0x4da: JUMP 0x131
---
Entry stack: [V10, 0x131]
Stack pops: 1
Stack additions: [S0, V399]
Exit stack: [V10, 0x131, V399]

================================

Block 0x4db
[0x4db:0x4e0]
---
Predecessors: [0x14b]
Successors: [0x131]
---
0x4db JUMPDEST
0x4dc PUSH1 0x5
0x4de SLOAD
0x4df DUP2
0x4e0 JUMP
---
0x4db: JUMPDEST 
0x4dc: V400 = 0x5
0x4de: V401 = S[0x5]
0x4e0: JUMP 0x131
---
Entry stack: [V10, 0x131]
Stack pops: 1
Stack additions: [S0, V401]
Exit stack: [V10, 0x131, V401]

================================

Block 0x4e1
[0x4e1:0x4ef]
---
Predecessors: [0x16d]
Successors: [0x105]
---
0x4e1 JUMPDEST
0x4e2 PUSH1 0xb
0x4e4 SLOAD
0x4e5 PUSH1 0x1
0x4e7 PUSH1 0xa0
0x4e9 PUSH1 0x2
0x4eb EXP
0x4ec SUB
0x4ed AND
0x4ee DUP2
0x4ef JUMP
---
0x4e1: JUMPDEST 
0x4e2: V402 = 0xb
0x4e4: V403 = S[0xb]
0x4e5: V404 = 0x1
0x4e7: V405 = 0xa0
0x4e9: V406 = 0x2
0x4eb: V407 = EXP 0x2 0xa0
0x4ec: V408 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ed: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x4ef: JUMP 0x105
---
Entry stack: [V10, 0x105]
Stack pops: 1
Stack additions: [S0, V409]
Exit stack: [V10, 0x105, V409]

================================

Block 0x4f0
[0x4f0:0x4f5]
---
Predecessors: [0x199]
Successors: [0x131]
---
0x4f0 JUMPDEST
0x4f1 PUSH1 0x6
0x4f3 SLOAD
0x4f4 DUP2
0x4f5 JUMP
---
0x4f0: JUMPDEST 
0x4f1: V410 = 0x6
0x4f3: V411 = S[0x6]
0x4f5: JUMP 0x131
---
Entry stack: [V10, 0x131]
Stack pops: 1
Stack additions: [S0, V411]
Exit stack: [V10, 0x131, V411]

================================

Block 0x4f6
[0x4f6:0x504]
---
Predecessors: [0x1bb]
Successors: [0x105]
---
0x4f6 JUMPDEST
0x4f7 PUSH1 0x9
0x4f9 SLOAD
0x4fa PUSH1 0x1
0x4fc PUSH1 0xa0
0x4fe PUSH1 0x2
0x500 EXP
0x501 SUB
0x502 AND
0x503 DUP2
0x504 JUMP
---
0x4f6: JUMPDEST 
0x4f7: V412 = 0x9
0x4f9: V413 = S[0x9]
0x4fa: V414 = 0x1
0x4fc: V415 = 0xa0
0x4fe: V416 = 0x2
0x500: V417 = EXP 0x2 0xa0
0x501: V418 = SUB 0x10000000000000000000000000000000000000000 0x1
0x502: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V413
0x504: JUMP 0x105
---
Entry stack: [V10, 0x105]
Stack pops: 1
Stack additions: [S0, V419]
Exit stack: [V10, 0x105, V419]

================================

Block 0x505
[0x505:0x50a]
---
Predecessors: [0x1e7]
Successors: [0x131]
---
0x505 JUMPDEST
0x506 PUSH1 0x7
0x508 SLOAD
0x509 DUP2
0x50a JUMP
---
0x505: JUMPDEST 
0x506: V420 = 0x7
0x508: V421 = S[0x7]
0x50a: JUMP 0x131
---
Entry stack: [V10, 0x131]
Stack pops: 1
Stack additions: [S0, V421]
Exit stack: [V10, 0x131, V421]

================================

Block 0x50b
[0x50b:0x516]
---
Predecessors: [0x209, 0x462]
Successors: [0x517, 0x51f]
---
0x50b JUMPDEST
0x50c PUSH1 0x8
0x50e SLOAD
0x50f ISZERO
0x510 DUP1
0x511 ISZERO
0x512 SWAP1
0x513 PUSH2 0x51f
0x516 JUMPI
---
0x50b: JUMPDEST 
0x50c: V422 = 0x8
0x50e: V423 = S[0x8]
0x50f: V424 = ISZERO V423
0x511: V425 = ISZERO V424
0x513: V426 = 0x51f
0x516: JUMPI 0x51f V424
---
Entry stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}]
Stack pops: 0
Stack additions: [V425]
Exit stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}, V425]

================================

Block 0x517
[0x517:0x51e]
---
Predecessors: [0x50b]
Successors: [0x51f]
---
0x517 POP
0x518 PUSH1 0x8
0x51a SLOAD
0x51b PUSH1 0x2
0x51d SLOAD
0x51e GT
---
0x518: V427 = 0x8
0x51a: V428 = S[0x8]
0x51b: V429 = 0x2
0x51d: V430 = S[0x2]
0x51e: V431 = GT V430 V428
---
Entry stack: [V10, S6, {0xef, 0x131}, 0x0, V267, S2, {0xf3, 0x4b5}, V425]
Stack pops: 1
Stack additions: [V431]
Exit stack: [V10, S6, {0xef, 0x131}, 0x0, V267, S2, {0xf3, 0x4b5}, V431]

================================

Block 0x51f
[0x51f:0x524]
---
Predecessors: [0x50b, 0x517]
Successors: [0x525, 0x57f]
---
0x51f JUMPDEST
0x520 ISZERO
0x521 PUSH2 0x57f
0x524 JUMPI
---
0x51f: JUMPDEST 
0x520: V432 = ISZERO S0
0x521: V433 = 0x57f
0x524: JUMPI 0x57f V432
---
Entry stack: [V10, S6, {0xef, 0x131}, 0x0, V267, S2, {0xf3, 0x4b5}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S6, {0xef, 0x131}, 0x0, V267, S2, {0xf3, 0x4b5}]

================================

Block 0x525
[0x525:0x533]
---
Predecessors: [0x51f]
Successors: [0x534]
---
0x525 PUSH1 0x0
0x527 DUP1
0x528 SLOAD
0x529 PUSH1 0x2
0x52b SWAP2
0x52c SWAP1
0x52d PUSH1 0xff
0x52f NOT
0x530 AND
0x531 PUSH1 0x1
0x533 DUP4
---
0x525: V434 = 0x0
0x528: V435 = S[0x0]
0x529: V436 = 0x2
0x52d: V437 = 0xff
0x52f: V438 = NOT 0xff
0x530: V439 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V435
0x531: V440 = 0x1
---
Entry stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}]
Stack pops: 0
Stack additions: [0x2, 0x0, V439, 0x1, 0x2]
Exit stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}, 0x2, 0x0, V439, 0x1, 0x2]

================================

Block 0x534
[0x534:0x575]
---
Predecessors: [0x525, 0x595]
Successors: [0x784]
---
0x534 JUMPDEST
0x535 MUL
0x536 OR
0x537 SWAP1
0x538 SSTORE
0x539 POP
0x53a PUSH1 0x2
0x53c SLOAD
0x53d PUSH1 0x40
0x53f DUP1
0x540 MLOAD
0x541 SWAP2
0x542 DUP3
0x543 MSTORE
0x544 MLOAD
0x545 PUSH32 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x566 SWAP2
0x567 DUP2
0x568 SWAP1
0x569 SUB
0x56a PUSH1 0x20
0x56c ADD
0x56d SWAP1
0x56e LOG1
0x56f PUSH2 0x576
0x572 PUSH2 0x784
0x575 JUMP
---
0x534: JUMPDEST 
0x535: V441 = MUL 0x2 0x1
0x536: V442 = OR 0x2 S2
0x538: S[0x0] = V442
0x53a: V443 = 0x2
0x53c: V444 = S[0x2]
0x53d: V445 = 0x40
0x540: V446 = M[0x40]
0x543: M[V446] = V444
0x544: V447 = M[0x40]
0x545: V448 = 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x569: V449 = SUB V446 V447
0x56a: V450 = 0x20
0x56c: V451 = ADD 0x20 V449
0x56e: LOG V447 V451 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x56f: V452 = 0x576
0x572: V453 = 0x784
0x575: JUMP 0x784
---
Entry stack: [V10, S10, {0xef, 0x131}, 0x0, V267, S6, {0xf3, 0x4b5}, 0x2, 0x0, S2, 0x1, 0x2]
Stack pops: 5
Stack additions: [0x576]
Exit stack: [V10, S10, {0xef, 0x131}, 0x0, V267, S6, {0xf3, 0x4b5}, 0x576]

================================

Block 0x576
[0x576:0x57e]
---
Predecessors: [0x835]
Successors: [0xf1]
---
0x576 JUMPDEST
0x577 TIMESTAMP
0x578 PUSH1 0x5
0x57a SSTORE
0x57b PUSH2 0xf1
0x57e JUMP
---
0x576: JUMPDEST 
0x577: V454 = TIMESTAMP
0x578: V455 = 0x5
0x57a: S[0x5] = V454
0x57b: V456 = 0xf1
0x57e: JUMP 0xf1
---
Entry stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, S0]

================================

Block 0x57f
[0x57f:0x589]
---
Predecessors: [0x51f]
Successors: [0xf1, 0x58a]
---
0x57f JUMPDEST
0x580 PUSH1 0x4
0x582 SLOAD
0x583 TIMESTAMP
0x584 GT
0x585 ISZERO
0x586 PUSH2 0xf1
0x589 JUMPI
---
0x57f: JUMPDEST 
0x580: V457 = 0x4
0x582: V458 = S[0x4]
0x583: V459 = TIMESTAMP
0x584: V460 = GT V459 V458
0x585: V461 = ISZERO V460
0x586: V462 = 0xf1
0x589: JUMPI 0xf1 V461
---
Entry stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}]

================================

Block 0x58a
[0x58a:0x594]
---
Predecessors: [0x57f]
Successors: [0x595, 0x5f3]
---
0x58a PUSH1 0x7
0x58c SLOAD
0x58d PUSH1 0x2
0x58f SLOAD
0x590 LT
0x591 PUSH2 0x5f3
0x594 JUMPI
---
0x58a: V463 = 0x7
0x58c: V464 = S[0x7]
0x58d: V465 = 0x2
0x58f: V466 = S[0x2]
0x590: V467 = LT V466 V464
0x591: V468 = 0x5f3
0x594: JUMPI 0x5f3 V467
---
Entry stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}]

================================

Block 0x595
[0x595:0x5a7]
---
Predecessors: [0x58a]
Successors: [0x534]
---
0x595 PUSH1 0x0
0x597 DUP1
0x598 SLOAD
0x599 PUSH1 0x2
0x59b SWAP2
0x59c SWAP1
0x59d PUSH1 0xff
0x59f NOT
0x5a0 AND
0x5a1 PUSH1 0x1
0x5a3 DUP4
0x5a4 PUSH2 0x534
0x5a7 JUMP
---
0x595: V469 = 0x0
0x598: V470 = S[0x0]
0x599: V471 = 0x2
0x59d: V472 = 0xff
0x59f: V473 = NOT 0xff
0x5a0: V474 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V470
0x5a1: V475 = 0x1
0x5a4: V476 = 0x534
0x5a7: JUMP 0x534
---
Entry stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}]
Stack pops: 0
Stack additions: [0x2, 0x0, V474, 0x1, 0x2]
Exit stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}, 0x2, 0x0, V474, 0x1, 0x2]

================================

Block 0x5a8
[0x5a8:0x5e9]
---
Predecessors: []
Successors: [0x784]
---
0x5a8 JUMPDEST
0x5a9 MUL
0x5aa OR
0x5ab SWAP1
0x5ac SSTORE
0x5ad POP
0x5ae PUSH1 0x2
0x5b0 SLOAD
0x5b1 PUSH1 0x40
0x5b3 DUP1
0x5b4 MLOAD
0x5b5 SWAP2
0x5b6 DUP3
0x5b7 MSTORE
0x5b8 MLOAD
0x5b9 PUSH32 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x5da SWAP2
0x5db DUP2
0x5dc SWAP1
0x5dd SUB
0x5de PUSH1 0x20
0x5e0 ADD
0x5e1 SWAP1
0x5e2 LOG1
0x5e3 PUSH2 0x576
0x5e6 PUSH2 0x784
0x5e9 JUMP
---
0x5a8: JUMPDEST 
0x5a9: V477 = MUL S0 S1
0x5aa: V478 = OR V477 S2
0x5ac: S[S3] = V478
0x5ae: V479 = 0x2
0x5b0: V480 = S[0x2]
0x5b1: V481 = 0x40
0x5b4: V482 = M[0x40]
0x5b7: M[V482] = V480
0x5b8: V483 = M[0x40]
0x5b9: V484 = 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x5dd: V485 = SUB V482 V483
0x5de: V486 = 0x20
0x5e0: V487 = ADD 0x20 V485
0x5e2: LOG V483 V487 0xee94ee98208684c00eeba940c34a6060b93671b249abd182b4771b74bf94e2dd
0x5e3: V488 = 0x576
0x5e6: V489 = 0x784
0x5e9: JUMP 0x784
---
Entry stack: []
Stack pops: 5
Stack additions: [0x576]
Exit stack: [0x576]

================================

Block 0x5ea
[0x5ea:0x5f2]
---
Predecessors: []
Successors: [0xf1]
---
0x5ea JUMPDEST
0x5eb TIMESTAMP
0x5ec PUSH1 0x5
0x5ee SSTORE
0x5ef PUSH2 0xf1
0x5f2 JUMP
---
0x5ea: JUMPDEST 
0x5eb: V490 = TIMESTAMP
0x5ec: V491 = 0x5
0x5ee: S[0x5] = V490
0x5ef: V492 = 0xf1
0x5f2: JUMP 0xf1
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5f3
[0x5f3:0x601]
---
Predecessors: [0x58a]
Successors: [0x602]
---
0x5f3 JUMPDEST
0x5f4 PUSH1 0x0
0x5f6 DUP1
0x5f7 SLOAD
0x5f8 PUSH1 0x1
0x5fa SWAP2
0x5fb SWAP1
0x5fc PUSH1 0xff
0x5fe NOT
0x5ff AND
0x600 DUP3
0x601 DUP1
---
0x5f3: JUMPDEST 
0x5f4: V493 = 0x0
0x5f7: V494 = S[0x0]
0x5f8: V495 = 0x1
0x5fc: V496 = 0xff
0x5fe: V497 = NOT 0xff
0x5ff: V498 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V494
---
Entry stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}]
Stack pops: 0
Stack additions: [0x1, 0x0, V498, 0x1, 0x1]
Exit stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}, 0x1, 0x0, V498, 0x1, 0x1]

================================

Block 0x602
[0x602:0x60b]
---
Predecessors: [0x5f3]
Successors: [0x60c]
---
0x602 JUMPDEST
0x603 MUL
0x604 OR
0x605 SWAP1
0x606 SSTORE
0x607 POP
0x608 TIMESTAMP
0x609 PUSH1 0x5
0x60b SSTORE
---
0x602: JUMPDEST 
0x603: V499 = MUL 0x1 0x1
0x604: V500 = OR 0x1 V498
0x606: S[0x0] = V500
0x608: V501 = TIMESTAMP
0x609: V502 = 0x5
0x60b: S[0x5] = V501
---
Entry stack: [V10, S10, {0xef, 0x131}, 0x0, V267, S6, {0xf3, 0x4b5}, 0x1, 0x0, V498, 0x1, 0x1]
Stack pops: 5
Stack additions: []
Exit stack: [V10, S10, {0xef, 0x131}, 0x0, V267, S6, {0xf3, 0x4b5}]

================================

Block 0x60c
[0x60c:0x60c]
---
Predecessors: [0x602]
Successors: [0x60d]
---
0x60c JUMPDEST
---
0x60c: JUMPDEST 
---
Entry stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}]

================================

Block 0x60d
[0x60d:0x60d]
---
Predecessors: [0x60c]
Successors: [0x60e]
---
0x60d JUMPDEST
---
0x60d: JUMPDEST 
---
Entry stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}]

================================

Block 0x60e
[0x60e:0x60e]
---
Predecessors: [0x60d]
Successors: [0x60f]
---
0x60e JUMPDEST
---
0x60e: JUMPDEST 
---
Entry stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}]

================================

Block 0x60f
[0x60f:0x610]
---
Predecessors: [0x60e]
Successors: [0xf3, 0x4b5]
---
0x60f JUMPDEST
0x610 JUMP
---
0x60f: JUMPDEST 
0x610: JUMP {0xf3, 0x4b5}
---
Entry stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1, {0xf3, 0x4b5}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S5, {0xef, 0x131}, 0x0, V267, S1]

================================

Block 0x611
[0x611:0x616]
---
Predecessors: [0x21b]
Successors: [0x131]
---
0x611 JUMPDEST
0x612 PUSH1 0x8
0x614 SLOAD
0x615 DUP2
0x616 JUMP
---
0x611: JUMPDEST 
0x612: V503 = 0x8
0x614: V504 = S[0x8]
0x616: JUMP 0x131
---
Entry stack: [V10, 0x131]
Stack pops: 1
Stack additions: [S0, V504]
Exit stack: [V10, 0x131, V504]

================================

Block 0x617
[0x617:0x61e]
---
Predecessors: [0x23d]
Successors: [0x61f]
---
0x617 JUMPDEST
0x618 PUSH1 0x0
0x61a DUP1
0x61b DUP1
0x61c PUSH1 0x1
0x61e DUP1
---
0x617: JUMPDEST 
0x618: V505 = 0x0
0x61c: V506 = 0x1
---
Entry stack: [V10, 0x245]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x1, 0x1]
Exit stack: [V10, 0x245, 0x0, 0x0, 0x0, 0x1, 0x1]

================================

Block 0x61f
[0x61f:0x62e]
---
Predecessors: [0x617]
Successors: [0x62f, 0x630]
---
0x61f JUMPDEST
0x620 PUSH1 0x0
0x622 SLOAD
0x623 PUSH1 0xff
0x625 AND
0x626 PUSH1 0x3
0x628 DUP2
0x629 GT
0x62a ISZERO
0x62b PUSH2 0x630
0x62e JUMPI
---
0x61f: JUMPDEST 
0x620: V507 = 0x0
0x622: V508 = S[0x0]
0x623: V509 = 0xff
0x625: V510 = AND 0xff V508
0x626: V511 = 0x3
0x629: V512 = GT V510 0x3
0x62a: V513 = ISZERO V512
0x62b: V514 = 0x630
0x62e: JUMPI 0x630 V513
---
Entry stack: [V10, 0x245, 0x0, 0x0, 0x0, 0x1, 0x1]
Stack pops: 0
Stack additions: [V510]
Exit stack: [V10, 0x245, 0x0, 0x0, 0x0, 0x1, 0x1, V510]

================================

Block 0x62f
[0x62f:0x62f]
---
Predecessors: [0x61f]
Successors: []
---
0x62f INVALID
---
0x62f: INVALID 
---
Entry stack: [V10, 0x245, 0x0, 0x0, 0x0, 0x1, 0x1, V510]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x245, 0x0, 0x0, 0x0, 0x1, 0x1, V510]

================================

Block 0x630
[0x630:0x635]
---
Predecessors: [0x61f]
Successors: [0x636, 0x63b]
---
0x630 JUMPDEST
0x631 EQ
0x632 PUSH2 0x63b
0x635 JUMPI
---
0x630: JUMPDEST 
0x631: V515 = EQ V510 0x1
0x632: V516 = 0x63b
0x635: JUMPI 0x63b V515
---
Entry stack: [V10, 0x245, 0x0, 0x0, 0x0, 0x1, 0x1, V510]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x245, 0x0, 0x0, 0x0, 0x1]

================================

Block 0x636
[0x636:0x63a]
---
Predecessors: [0x630]
Successors: []
---
0x636 PUSH1 0x0
0x638 PUSH1 0x0
0x63a REVERT
---
0x636: V517 = 0x0
0x638: V518 = 0x0
0x63a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x245, 0x0, 0x0, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x245, 0x0, 0x0, 0x0, 0x1]

================================

Block 0x63b
[0x63b:0x63f]
---
Predecessors: [0x630]
Successors: [0x640]
---
0x63b JUMPDEST
0x63c PUSH1 0x0
0x63e SWAP3
0x63f POP
---
0x63b: JUMPDEST 
0x63c: V519 = 0x0
---
Entry stack: [V10, 0x245, 0x0, 0x0, 0x0, 0x1]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V10, 0x245, 0x0, 0x0, 0x0, 0x1]

================================

Block 0x640
[0x640:0x649]
---
Predecessors: [0x63b, 0x764]
Successors: [0x64a, 0x76f]
---
0x640 JUMPDEST
0x641 PUSH1 0x1
0x643 SLOAD
0x644 DUP4
0x645 GT
0x646 PUSH2 0x76f
0x649 JUMPI
---
0x640: JUMPDEST 
0x641: V520 = 0x1
0x643: V521 = S[0x1]
0x645: V522 = GT S2 V521
0x646: V523 = 0x76f
0x649: JUMPI 0x76f V522
---
Entry stack: [V10, 0x245, 0x0, S2, 0x0, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x245, 0x0, S2, 0x0, 0x1]

================================

Block 0x64a
[0x64a:0x660]
---
Predecessors: [0x640]
Successors: [0x661, 0x662]
---
0x64a CALLER
0x64b PUSH1 0x1
0x64d PUSH1 0xa0
0x64f PUSH1 0x2
0x651 EXP
0x652 SUB
0x653 AND
0x654 PUSH1 0x1
0x656 DUP5
0x657 DUP2
0x658 SLOAD
0x659 DUP2
0x65a LT
0x65b ISZERO
0x65c ISZERO
0x65d PUSH2 0x662
0x660 JUMPI
---
0x64a: V524 = CALLER
0x64b: V525 = 0x1
0x64d: V526 = 0xa0
0x64f: V527 = 0x2
0x651: V528 = EXP 0x2 0xa0
0x652: V529 = SUB 0x10000000000000000000000000000000000000000 0x1
0x653: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff V524
0x654: V531 = 0x1
0x658: V532 = S[0x1]
0x65a: V533 = LT S2 V532
0x65b: V534 = ISZERO V533
0x65c: V535 = ISZERO V534
0x65d: V536 = 0x662
0x660: JUMPI 0x662 V535
---
Entry stack: [V10, 0x245, 0x0, S2, 0x0, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0, V530, 0x1, S2]
Exit stack: [V10, 0x245, 0x0, S2, 0x0, 0x1, V530, 0x1, S2]

================================

Block 0x661
[0x661:0x661]
---
Predecessors: [0x64a]
Successors: []
---
0x661 INVALID
---
0x661: INVALID 
---
Entry stack: [V10, 0x245, 0x0, S5, 0x0, 0x1, V530, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x245, 0x0, S5, 0x0, 0x1, V530, 0x1, S0]

================================

Block 0x662
[0x662:0x672]
---
Predecessors: [0x64a]
Successors: [0x673]
---
0x662 JUMPDEST
0x663 SWAP1
0x664 PUSH1 0x0
0x666 MSTORE
0x667 PUSH1 0x20
0x669 PUSH1 0x0
0x66b SHA3
0x66c SWAP1
0x66d PUSH1 0x2
0x66f MUL
0x670 ADD
0x671 PUSH1 0x0
---
0x662: JUMPDEST 
0x664: V537 = 0x0
0x666: M[0x0] = 0x1
0x667: V538 = 0x20
0x669: V539 = 0x0
0x66b: V540 = SHA3 0x0 0x20
0x66d: V541 = 0x2
0x66f: V542 = MUL 0x2 S0
0x670: V543 = ADD V542 V540
0x671: V544 = 0x0
---
Entry stack: [V10, 0x245, 0x0, S5, 0x0, 0x1, V530, 0x1, S0]
Stack pops: 2
Stack additions: [V543, 0x0]
Exit stack: [V10, 0x245, 0x0, S5, 0x0, 0x1, V530, V543, 0x0]

================================

Block 0x673
[0x673:0x687]
---
Predecessors: [0x662]
Successors: [0x688, 0x763]
---
0x673 JUMPDEST
0x674 POP
0x675 PUSH1 0x1
0x677 ADD
0x678 SLOAD
0x679 PUSH1 0x1
0x67b PUSH1 0xa0
0x67d PUSH1 0x2
0x67f EXP
0x680 SUB
0x681 AND
0x682 EQ
0x683 ISZERO
0x684 PUSH2 0x763
0x687 JUMPI
---
0x673: JUMPDEST 
0x675: V545 = 0x1
0x677: V546 = ADD 0x1 V543
0x678: V547 = S[V546]
0x679: V548 = 0x1
0x67b: V549 = 0xa0
0x67d: V550 = 0x2
0x67f: V551 = EXP 0x2 0xa0
0x680: V552 = SUB 0x10000000000000000000000000000000000000000 0x1
0x681: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x682: V554 = EQ V553 V530
0x683: V555 = ISZERO V554
0x684: V556 = 0x763
0x687: JUMPI 0x763 V555
---
Entry stack: [V10, 0x245, 0x0, S5, 0x0, 0x1, V530, V543, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x245, 0x0, S5, 0x0, 0x1]

================================

Block 0x688
[0x688:0x693]
---
Predecessors: [0x673]
Successors: [0x694, 0x695]
---
0x688 PUSH1 0x1
0x68a DUP1
0x68b SLOAD
0x68c DUP5
0x68d SWAP1
0x68e DUP2
0x68f LT
0x690 PUSH2 0x695
0x693 JUMPI
---
0x688: V557 = 0x1
0x68b: V558 = S[0x1]
0x68f: V559 = LT S2 V558
0x690: V560 = 0x695
0x693: JUMPI 0x695 V559
---
Entry stack: [V10, 0x245, 0x0, S2, 0x0, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x1, S2]
Exit stack: [V10, 0x245, 0x0, S2, 0x0, 0x1, 0x1, S2]

================================

Block 0x694
[0x694:0x694]
---
Predecessors: [0x688]
Successors: []
---
0x694 INVALID
---
0x694: INVALID 
---
Entry stack: [V10, 0x245, 0x0, S4, 0x0, 0x1, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x245, 0x0, S4, 0x0, 0x1, 0x1, S0]

================================

Block 0x695
[0x695:0x6a5]
---
Predecessors: [0x688]
Successors: [0x6a6]
---
0x695 JUMPDEST
0x696 SWAP1
0x697 PUSH1 0x0
0x699 MSTORE
0x69a PUSH1 0x20
0x69c PUSH1 0x0
0x69e SHA3
0x69f SWAP1
0x6a0 PUSH1 0x2
0x6a2 MUL
0x6a3 ADD
0x6a4 PUSH1 0x0
---
0x695: JUMPDEST 
0x697: V561 = 0x0
0x699: M[0x0] = 0x1
0x69a: V562 = 0x20
0x69c: V563 = 0x0
0x69e: V564 = SHA3 0x0 0x20
0x6a0: V565 = 0x2
0x6a2: V566 = MUL 0x2 S0
0x6a3: V567 = ADD V566 V564
0x6a4: V568 = 0x0
---
Entry stack: [V10, 0x245, 0x0, S4, 0x0, 0x1, 0x1, S0]
Stack pops: 2
Stack additions: [V567, 0x0]
Exit stack: [V10, 0x245, 0x0, S4, 0x0, 0x1, V567, 0x0]

================================

Block 0x6a6
[0x6a6:0x6ba]
---
Predecessors: [0x695]
Successors: [0x6bb, 0x6bc]
---
0x6a6 JUMPDEST
0x6a7 POP
0x6a8 SLOAD
0x6a9 PUSH1 0x1
0x6ab DUP1
0x6ac SLOAD
0x6ad SWAP2
0x6ae SWAP4
0x6af POP
0x6b0 PUSH1 0x0
0x6b2 SWAP2
0x6b3 DUP6
0x6b4 SWAP1
0x6b5 DUP2
0x6b6 LT
0x6b7 PUSH2 0x6bc
0x6ba JUMPI
---
0x6a6: JUMPDEST 
0x6a8: V569 = S[V567]
0x6a9: V570 = 0x1
0x6ac: V571 = S[0x1]
0x6b0: V572 = 0x0
0x6b6: V573 = LT S4 V571
0x6b7: V574 = 0x6bc
0x6ba: JUMPI 0x6bc V573
---
Entry stack: [V10, 0x245, 0x0, S4, 0x0, 0x1, V567, 0x0]
Stack pops: 5
Stack additions: [S4, V569, S2, 0x0, 0x1, S4]
Exit stack: [V10, 0x245, 0x0, S4, V569, 0x1, 0x0, 0x1, S4]

================================

Block 0x6bb
[0x6bb:0x6bb]
---
Predecessors: [0x6a6]
Successors: []
---
0x6bb INVALID
---
0x6bb: INVALID 
---
Entry stack: [V10, 0x245, 0x0, S5, V569, 0x1, 0x0, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x245, 0x0, S5, V569, 0x1, 0x0, 0x1, S0]

================================

Block 0x6bc
[0x6bc:0x6cc]
---
Predecessors: [0x6a6]
Successors: [0x6cd]
---
0x6bc JUMPDEST
0x6bd SWAP1
0x6be PUSH1 0x0
0x6c0 MSTORE
0x6c1 PUSH1 0x20
0x6c3 PUSH1 0x0
0x6c5 SHA3
0x6c6 SWAP1
0x6c7 PUSH1 0x2
0x6c9 MUL
0x6ca ADD
0x6cb PUSH1 0x0
---
0x6bc: JUMPDEST 
0x6be: V575 = 0x0
0x6c0: M[0x0] = 0x1
0x6c1: V576 = 0x20
0x6c3: V577 = 0x0
0x6c5: V578 = SHA3 0x0 0x20
0x6c7: V579 = 0x2
0x6c9: V580 = MUL 0x2 S0
0x6ca: V581 = ADD V580 V578
0x6cb: V582 = 0x0
---
Entry stack: [V10, 0x245, 0x0, S5, V569, 0x1, 0x0, 0x1, S0]
Stack pops: 2
Stack additions: [V581, 0x0]
Exit stack: [V10, 0x245, 0x0, S5, V569, 0x1, 0x0, V581, 0x0]

================================

Block 0x6cd
[0x6cd:0x6db]
---
Predecessors: [0x6bc]
Successors: [0x6dc, 0x6dd]
---
0x6cd JUMPDEST
0x6ce POP
0x6cf SSTORE
0x6d0 PUSH1 0x1
0x6d2 DUP1
0x6d3 SLOAD
0x6d4 DUP5
0x6d5 SWAP1
0x6d6 DUP2
0x6d7 LT
0x6d8 PUSH2 0x6dd
0x6db JUMPI
---
0x6cd: JUMPDEST 
0x6cf: S[V581] = 0x0
0x6d0: V583 = 0x1
0x6d3: V584 = S[0x1]
0x6d7: V585 = LT S5 V584
0x6d8: V586 = 0x6dd
0x6db: JUMPI 0x6dd V585
---
Entry stack: [V10, 0x245, 0x0, S5, V569, 0x1, 0x0, V581, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, 0x1, S5]
Exit stack: [V10, 0x245, 0x0, S5, V569, 0x1, 0x1, S5]

================================

Block 0x6dc
[0x6dc:0x6dc]
---
Predecessors: [0x6cd]
Successors: []
---
0x6dc INVALID
---
0x6dc: INVALID 
---
Entry stack: [V10, 0x245, 0x0, S4, V569, 0x1, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x245, 0x0, S4, V569, 0x1, 0x1, S0]

================================

Block 0x6dd
[0x6dd:0x6ed]
---
Predecessors: [0x6cd]
Successors: [0x6ee]
---
0x6dd JUMPDEST
0x6de SWAP1
0x6df PUSH1 0x0
0x6e1 MSTORE
0x6e2 PUSH1 0x20
0x6e4 PUSH1 0x0
0x6e6 SHA3
0x6e7 SWAP1
0x6e8 PUSH1 0x2
0x6ea MUL
0x6eb ADD
0x6ec PUSH1 0x0
---
0x6dd: JUMPDEST 
0x6df: V587 = 0x0
0x6e1: M[0x0] = 0x1
0x6e2: V588 = 0x20
0x6e4: V589 = 0x0
0x6e6: V590 = SHA3 0x0 0x20
0x6e8: V591 = 0x2
0x6ea: V592 = MUL 0x2 S0
0x6eb: V593 = ADD V592 V590
0x6ec: V594 = 0x0
---
Entry stack: [V10, 0x245, 0x0, S4, V569, 0x1, 0x1, S0]
Stack pops: 2
Stack additions: [V593, 0x0]
Exit stack: [V10, 0x245, 0x0, S4, V569, 0x1, V593, 0x0]

================================

Block 0x6ee
[0x6ee:0x71f]
---
Predecessors: [0x6dd]
Successors: [0x720, 0x74b]
---
0x6ee JUMPDEST
0x6ef POP
0x6f0 PUSH1 0x1
0x6f2 ADD
0x6f3 SLOAD
0x6f4 PUSH1 0x40
0x6f6 MLOAD
0x6f7 PUSH1 0x1
0x6f9 PUSH1 0xa0
0x6fb PUSH1 0x2
0x6fd EXP
0x6fe SUB
0x6ff SWAP1
0x700 SWAP2
0x701 AND
0x702 SWAP1
0x703 DUP4
0x704 ISZERO
0x705 PUSH2 0x8fc
0x708 MUL
0x709 SWAP1
0x70a DUP5
0x70b SWAP1
0x70c PUSH1 0x0
0x70e DUP2
0x70f DUP2
0x710 DUP2
0x711 DUP6
0x712 DUP9
0x713 DUP9
0x714 CALL
0x715 SWAP4
0x716 POP
0x717 POP
0x718 POP
0x719 POP
0x71a ISZERO
0x71b ISZERO
0x71c PUSH2 0x74b
0x71f JUMPI
---
0x6ee: JUMPDEST 
0x6f0: V595 = 0x1
0x6f2: V596 = ADD 0x1 V593
0x6f3: V597 = S[V596]
0x6f4: V598 = 0x40
0x6f6: V599 = M[0x40]
0x6f7: V600 = 0x1
0x6f9: V601 = 0xa0
0x6fb: V602 = 0x2
0x6fd: V603 = EXP 0x2 0xa0
0x6fe: V604 = SUB 0x10000000000000000000000000000000000000000 0x1
0x701: V605 = AND V597 0xffffffffffffffffffffffffffffffffffffffff
0x704: V606 = ISZERO V569
0x705: V607 = 0x8fc
0x708: V608 = MUL 0x8fc V606
0x70c: V609 = 0x0
0x714: V610 = CALL V608 V605 V569 V599 0x0 V599 0x0
0x71a: V611 = ISZERO V610
0x71b: V612 = ISZERO V611
0x71c: V613 = 0x74b
0x71f: JUMPI 0x74b V612
---
Entry stack: [V10, 0x245, 0x0, S4, V569, 0x1, V593, 0x0]
Stack pops: 4
Stack additions: [S3, S2]
Exit stack: [V10, 0x245, 0x0, S4, V569, 0x1]

================================

Block 0x720
[0x720:0x72d]
---
Predecessors: [0x6ee]
Successors: [0x72e, 0x72f]
---
0x720 DUP2
0x721 PUSH1 0x1
0x723 DUP5
0x724 DUP2
0x725 SLOAD
0x726 DUP2
0x727 LT
0x728 ISZERO
0x729 ISZERO
0x72a PUSH2 0x72f
0x72d JUMPI
---
0x721: V614 = 0x1
0x725: V615 = S[0x1]
0x727: V616 = LT S2 V615
0x728: V617 = ISZERO V616
0x729: V618 = ISZERO V617
0x72a: V619 = 0x72f
0x72d: JUMPI 0x72f V618
---
Entry stack: [V10, 0x245, 0x0, S2, V569, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0, S1, 0x1, S2]
Exit stack: [V10, 0x245, 0x0, S2, V569, 0x1, V569, 0x1, S2]

================================

Block 0x72e
[0x72e:0x72e]
---
Predecessors: [0x720]
Successors: []
---
0x72e INVALID
---
0x72e: INVALID 
---
Entry stack: [V10, 0x245, 0x0, S5, V569, 0x1, V569, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x245, 0x0, S5, V569, 0x1, V569, 0x1, S0]

================================

Block 0x72f
[0x72f:0x73f]
---
Predecessors: [0x720]
Successors: [0x740]
---
0x72f JUMPDEST
0x730 SWAP1
0x731 PUSH1 0x0
0x733 MSTORE
0x734 PUSH1 0x20
0x736 PUSH1 0x0
0x738 SHA3
0x739 SWAP1
0x73a PUSH1 0x2
0x73c MUL
0x73d ADD
0x73e PUSH1 0x0
---
0x72f: JUMPDEST 
0x731: V620 = 0x0
0x733: M[0x0] = 0x1
0x734: V621 = 0x20
0x736: V622 = 0x0
0x738: V623 = SHA3 0x0 0x20
0x73a: V624 = 0x2
0x73c: V625 = MUL 0x2 S0
0x73d: V626 = ADD V625 V623
0x73e: V627 = 0x0
---
Entry stack: [V10, 0x245, 0x0, S5, V569, 0x1, V569, 0x1, S0]
Stack pops: 2
Stack additions: [V626, 0x0]
Exit stack: [V10, 0x245, 0x0, S5, V569, 0x1, V569, V626, 0x0]

================================

Block 0x740
[0x740:0x74a]
---
Predecessors: [0x72f]
Successors: [0x774]
---
0x740 JUMPDEST
0x741 POP
0x742 SSTORE
0x743 PUSH1 0x0
0x745 SWAP4
0x746 POP
0x747 PUSH2 0x774
0x74a JUMP
---
0x740: JUMPDEST 
0x742: S[V626] = V569
0x743: V628 = 0x0
0x747: V629 = 0x774
0x74a: JUMP 0x774
---
Entry stack: [V10, 0x245, 0x0, S5, V569, 0x1, V569, V626, 0x0]
Stack pops: 7
Stack additions: [0x0, S5, S4, S3]
Exit stack: [V10, 0x245, 0x0, S5, V569, 0x1]

================================

Block 0x74b
[0x74b:0x759]
---
Predecessors: [0x6ee]
Successors: [0x75a]
---
0x74b JUMPDEST
0x74c PUSH1 0x2
0x74e DUP1
0x74f SLOAD
0x750 DUP4
0x751 SWAP1
0x752 SUB
0x753 SWAP1
0x754 DUP2
0x755 SWAP1
0x756 SSTORE
0x757 PUSH1 0x3
0x759 SSTORE
---
0x74b: JUMPDEST 
0x74c: V630 = 0x2
0x74f: V631 = S[0x2]
0x752: V632 = SUB V631 V569
0x756: S[0x2] = V632
0x757: V633 = 0x3
0x759: S[0x3] = V632
---
Entry stack: [V10, 0x245, 0x0, S2, V569, 0x1]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x245, 0x0, S2, V569, 0x1]

================================

Block 0x75a
[0x75a:0x762]
---
Predecessors: [0x74b]
Successors: [0x774]
---
0x75a JUMPDEST
0x75b PUSH1 0x1
0x75d SWAP4
0x75e POP
0x75f PUSH2 0x774
0x762 JUMP
---
0x75a: JUMPDEST 
0x75b: V634 = 0x1
0x75f: V635 = 0x774
0x762: JUMP 0x774
---
Entry stack: [V10, 0x245, 0x0, S2, V569, 0x1]
Stack pops: 4
Stack additions: [0x1, S2, S1, S0]
Exit stack: [V10, 0x245, 0x1, S2, V569, 0x1]

================================

Block 0x763
[0x763:0x763]
---
Predecessors: [0x673]
Successors: [0x764]
---
0x763 JUMPDEST
---
0x763: JUMPDEST 
---
Entry stack: [V10, 0x245, 0x0, S2, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x245, 0x0, S2, 0x0, 0x1]

================================

Block 0x764
[0x764:0x76e]
---
Predecessors: [0x763]
Successors: [0x640]
---
0x764 JUMPDEST
0x765 PUSH1 0x1
0x767 SWAP1
0x768 SWAP3
0x769 ADD
0x76a SWAP2
0x76b PUSH2 0x640
0x76e JUMP
---
0x764: JUMPDEST 
0x765: V636 = 0x1
0x769: V637 = ADD S2 0x1
0x76b: V638 = 0x640
0x76e: JUMP 0x640
---
Entry stack: [V10, 0x245, 0x0, S2, 0x0, 0x1]
Stack pops: 3
Stack additions: [V637, S1, S0]
Exit stack: [V10, 0x245, 0x0, V637, 0x0, 0x1]

================================

Block 0x76f
[0x76f:0x773]
---
Predecessors: [0x640]
Successors: [0x774]
---
0x76f JUMPDEST
0x770 PUSH1 0x0
0x772 SWAP4
0x773 POP
---
0x76f: JUMPDEST 
0x770: V639 = 0x0
---
Entry stack: [V10, 0x245, 0x0, S2, 0x0, 0x1]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V10, 0x245, 0x0, S2, 0x0, 0x1]

================================

Block 0x774
[0x774:0x774]
---
Predecessors: [0x740, 0x75a, 0x76f]
Successors: [0x775]
---
0x774 JUMPDEST
---
0x774: JUMPDEST 
---
Entry stack: [V10, 0x245, {0x0, 0x1}, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x245, {0x0, 0x1}, S2, S1, 0x1]

================================

Block 0x775
[0x775:0x77a]
---
Predecessors: [0x774]
Successors: [0x245]
---
0x775 JUMPDEST
0x776 POP
0x777 POP
0x778 POP
0x779 SWAP1
0x77a JUMP
---
0x775: JUMPDEST 
0x77a: JUMP 0x245
---
Entry stack: [V10, 0x245, {0x0, 0x1}, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S3]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x77b
[0x77b:0x783]
---
Predecessors: [0x261]
Successors: [0x269]
---
0x77b JUMPDEST
0x77c PUSH1 0x0
0x77e SLOAD
0x77f PUSH1 0xff
0x781 AND
0x782 DUP2
0x783 JUMP
---
0x77b: JUMPDEST 
0x77c: V640 = 0x0
0x77e: V641 = S[0x0]
0x77f: V642 = 0xff
0x781: V643 = AND 0xff V641
0x783: JUMP 0x269
---
Entry stack: [V10, 0x269]
Stack pops: 1
Stack additions: [S0, V643]
Exit stack: [V10, 0x269, V643]

================================

Block 0x784
[0x784:0x787]
---
Predecessors: [0x295, 0x534, 0x5a8]
Successors: [0x788]
---
0x784 JUMPDEST
0x785 PUSH1 0x2
0x787 DUP1
---
0x784: JUMPDEST 
0x785: V644 = 0x2
---
Entry stack: [V10, S6, {0xef, 0x131}, 0x0, V267, S2, S1, {0xf3, 0x576}]
Stack pops: 0
Stack additions: [0x2, 0x2]
Exit stack: [V10, S6, {0xef, 0x131}, 0x0, V267, S2, S1, {0xf3, 0x576}, 0x2, 0x2]

================================

Block 0x788
[0x788:0x797]
---
Predecessors: [0x784]
Successors: [0x798, 0x799]
---
0x788 JUMPDEST
0x789 PUSH1 0x0
0x78b SLOAD
0x78c PUSH1 0xff
0x78e AND
0x78f PUSH1 0x3
0x791 DUP2
0x792 GT
0x793 ISZERO
0x794 PUSH2 0x799
0x797 JUMPI
---
0x788: JUMPDEST 
0x789: V645 = 0x0
0x78b: V646 = S[0x0]
0x78c: V647 = 0xff
0x78e: V648 = AND 0xff V646
0x78f: V649 = 0x3
0x792: V650 = GT V648 0x3
0x793: V651 = ISZERO V650
0x794: V652 = 0x799
0x797: JUMPI 0x799 V651
---
Entry stack: [V10, S8, {0xef, 0x131}, 0x0, V267, S4, S3, {0xf3, 0x576}, 0x2, 0x2]
Stack pops: 0
Stack additions: [V648]
Exit stack: [V10, S8, {0xef, 0x131}, 0x0, V267, S4, S3, {0xf3, 0x576}, 0x2, 0x2, V648]

================================

Block 0x798
[0x798:0x798]
---
Predecessors: [0x788]
Successors: []
---
0x798 INVALID
---
0x798: INVALID 
---
Entry stack: [V10, S9, {0xef, 0x131}, 0x0, V267, S5, S4, {0xf3, 0x576}, 0x2, 0x2, V648]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S9, {0xef, 0x131}, 0x0, V267, S5, S4, {0xf3, 0x576}, 0x2, 0x2, V648]

================================

Block 0x799
[0x799:0x79e]
---
Predecessors: [0x788]
Successors: [0x79f, 0x7a4]
---
0x799 JUMPDEST
0x79a EQ
0x79b PUSH2 0x7a4
0x79e JUMPI
---
0x799: JUMPDEST 
0x79a: V653 = EQ V648 0x2
0x79b: V654 = 0x7a4
0x79e: JUMPI 0x7a4 V653
---
Entry stack: [V10, S9, {0xef, 0x131}, 0x0, V267, S5, S4, {0xf3, 0x576}, 0x2, 0x2, V648]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S9, {0xef, 0x131}, 0x0, V267, S5, S4, {0xf3, 0x576}, 0x2]

================================

Block 0x79f
[0x79f:0x7a3]
---
Predecessors: [0x799]
Successors: []
---
0x79f PUSH1 0x0
0x7a1 PUSH1 0x0
0x7a3 REVERT
---
0x79f: V655 = 0x0
0x7a1: V656 = 0x0
0x7a3: REVERT 0x0 0x0
---
Entry stack: [V10, S7, {0xef, 0x131}, 0x0, V267, S3, S2, {0xf3, 0x576}, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xef, 0x131}, 0x0, V267, S3, S2, {0xf3, 0x576}, 0x2]

================================

Block 0x7a4
[0x7a4:0x7d4]
---
Predecessors: [0x799]
Successors: [0x7d5, 0x7da]
---
0x7a4 JUMPDEST
0x7a5 PUSH1 0xb
0x7a7 SLOAD
0x7a8 PUSH1 0x40
0x7aa MLOAD
0x7ab PUSH1 0x1
0x7ad PUSH1 0xa0
0x7af PUSH1 0x2
0x7b1 EXP
0x7b2 SUB
0x7b3 SWAP2
0x7b4 DUP3
0x7b5 AND
0x7b6 SWAP2
0x7b7 ADDRESS
0x7b8 AND
0x7b9 BALANCE
0x7ba DUP1
0x7bb ISZERO
0x7bc PUSH2 0x8fc
0x7bf MUL
0x7c0 SWAP2
0x7c1 PUSH1 0x0
0x7c3 DUP2
0x7c4 DUP2
0x7c5 DUP2
0x7c6 DUP6
0x7c7 DUP9
0x7c8 DUP9
0x7c9 CALL
0x7ca SWAP4
0x7cb POP
0x7cc POP
0x7cd POP
0x7ce POP
0x7cf ISZERO
0x7d0 ISZERO
0x7d1 PUSH2 0x7da
0x7d4 JUMPI
---
0x7a4: JUMPDEST 
0x7a5: V657 = 0xb
0x7a7: V658 = S[0xb]
0x7a8: V659 = 0x40
0x7aa: V660 = M[0x40]
0x7ab: V661 = 0x1
0x7ad: V662 = 0xa0
0x7af: V663 = 0x2
0x7b1: V664 = EXP 0x2 0xa0
0x7b2: V665 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b5: V666 = AND 0xffffffffffffffffffffffffffffffffffffffff V658
0x7b7: V667 = ADDRESS
0x7b8: V668 = AND V667 0xffffffffffffffffffffffffffffffffffffffff
0x7b9: V669 = BALANCE V668
0x7bb: V670 = ISZERO V669
0x7bc: V671 = 0x8fc
0x7bf: V672 = MUL 0x8fc V670
0x7c1: V673 = 0x0
0x7c9: V674 = CALL V672 V666 V669 V660 0x0 V660 0x0
0x7cf: V675 = ISZERO V674
0x7d0: V676 = ISZERO V675
0x7d1: V677 = 0x7da
0x7d4: JUMPI 0x7da V676
---
Entry stack: [V10, S7, {0xef, 0x131}, 0x0, V267, S3, S2, {0xf3, 0x576}, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xef, 0x131}, 0x0, V267, S3, S2, {0xf3, 0x576}, 0x2]

================================

Block 0x7d5
[0x7d5:0x7d9]
---
Predecessors: [0x7a4]
Successors: []
---
0x7d5 PUSH1 0x0
0x7d7 PUSH1 0x0
0x7d9 REVERT
---
0x7d5: V678 = 0x0
0x7d7: V679 = 0x0
0x7d9: REVERT 0x0 0x0
---
Entry stack: [V10, S7, {0xef, 0x131}, 0x0, V267, S3, S2, {0xf3, 0x576}, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xef, 0x131}, 0x0, V267, S3, S2, {0xf3, 0x576}, 0x2]

================================

Block 0x7da
[0x7da:0x7e9]
---
Predecessors: [0x7a4]
Successors: [0x7ea]
---
0x7da JUMPDEST
0x7db PUSH1 0x0
0x7dd DUP1
0x7de SLOAD
0x7df PUSH1 0x3
0x7e1 SWAP2
0x7e2 SWAP1
0x7e3 PUSH1 0xff
0x7e5 NOT
0x7e6 AND
0x7e7 PUSH1 0x1
0x7e9 DUP4
---
0x7da: JUMPDEST 
0x7db: V680 = 0x0
0x7de: V681 = S[0x0]
0x7df: V682 = 0x3
0x7e3: V683 = 0xff
0x7e5: V684 = NOT 0xff
0x7e6: V685 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V681
0x7e7: V686 = 0x1
---
Entry stack: [V10, S7, {0xef, 0x131}, 0x0, V267, S3, S2, {0xf3, 0x576}, 0x2]
Stack pops: 0
Stack additions: [0x3, 0x0, V685, 0x1, 0x3]
Exit stack: [V10, S7, {0xef, 0x131}, 0x0, V267, S3, S2, {0xf3, 0x576}, 0x2, 0x3, 0x0, V685, 0x1, 0x3]

================================

Block 0x7ea
[0x7ea:0x833]
---
Predecessors: [0x7da]
Successors: [0x834]
---
0x7ea JUMPDEST
0x7eb MUL
0x7ec OR
0x7ed SWAP1
0x7ee SSTORE
0x7ef POP
0x7f0 PUSH1 0x0
0x7f2 PUSH1 0x3
0x7f4 SSTORE
0x7f5 PUSH1 0xb
0x7f7 SLOAD
0x7f8 PUSH1 0x40
0x7fa DUP1
0x7fb MLOAD
0x7fc PUSH1 0x1
0x7fe PUSH1 0xa0
0x800 PUSH1 0x2
0x802 EXP
0x803 SUB
0x804 SWAP1
0x805 SWAP3
0x806 AND
0x807 DUP3
0x808 MSTORE
0x809 MLOAD
0x80a PUSH32 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
0x82b SWAP2
0x82c DUP2
0x82d SWAP1
0x82e SUB
0x82f PUSH1 0x20
0x831 ADD
0x832 SWAP1
0x833 LOG1
---
0x7ea: JUMPDEST 
0x7eb: V687 = MUL 0x3 0x1
0x7ec: V688 = OR 0x3 V685
0x7ee: S[0x0] = V688
0x7f0: V689 = 0x0
0x7f2: V690 = 0x3
0x7f4: S[0x3] = 0x0
0x7f5: V691 = 0xb
0x7f7: V692 = S[0xb]
0x7f8: V693 = 0x40
0x7fb: V694 = M[0x40]
0x7fc: V695 = 0x1
0x7fe: V696 = 0xa0
0x800: V697 = 0x2
0x802: V698 = EXP 0x2 0xa0
0x803: V699 = SUB 0x10000000000000000000000000000000000000000 0x1
0x806: V700 = AND V692 0xffffffffffffffffffffffffffffffffffffffff
0x808: M[V694] = V700
0x809: V701 = M[0x40]
0x80a: V702 = 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
0x82e: V703 = SUB V694 V701
0x82f: V704 = 0x20
0x831: V705 = ADD 0x20 V703
0x833: LOG V701 V705 0xcc2a9192e91e4dd58845fd890b297de7bfda33e9f07f14bb2e4fe2237c86723d
---
Entry stack: [V10, S12, {0xef, 0x131}, 0x0, V267, S8, S7, {0xf3, 0x576}, 0x2, 0x3, 0x0, V685, 0x1, 0x3]
Stack pops: 5
Stack additions: []
Exit stack: [V10, S12, {0xef, 0x131}, 0x0, V267, S8, S7, {0xf3, 0x576}, 0x2]

================================

Block 0x834
[0x834:0x834]
---
Predecessors: [0x7ea]
Successors: [0x835]
---
0x834 JUMPDEST
---
0x834: JUMPDEST 
---
Entry stack: [V10, S7, {0xef, 0x131}, 0x0, V267, S3, S2, {0xf3, 0x576}, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0xef, 0x131}, 0x0, V267, S3, S2, {0xf3, 0x576}, 0x2]

================================

Block 0x835
[0x835:0x837]
---
Predecessors: [0x834]
Successors: [0xf3, 0x576]
---
0x835 JUMPDEST
0x836 POP
0x837 JUMP
---
0x835: JUMPDEST 
0x837: JUMP {0xf3, 0x576}
---
Entry stack: [V10, S7, {0xef, 0x131}, 0x0, V267, S3, S2, {0xf3, 0x576}, 0x2]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S7, {0xef, 0x131}, 0x0, V267, S3, S2]

================================

Block 0x838
[0x838:0x83d]
---
Predecessors: [0x2a7]
Successors: [0x131]
---
0x838 JUMPDEST
0x839 PUSH1 0x2
0x83b SLOAD
0x83c DUP2
0x83d JUMP
---
0x838: JUMPDEST 
0x839: V706 = 0x2
0x83b: V707 = S[0x2]
0x83d: JUMP 0x131
---
Entry stack: [V10, 0x131]
Stack pops: 1
Stack additions: [S0, V707]
Exit stack: [V10, 0x131, V707]

================================

Block 0x83e
[0x83e:0x843]
---
Predecessors: [0x2c9]
Successors: [0x131]
---
0x83e JUMPDEST
0x83f PUSH1 0x3
0x841 SLOAD
0x842 DUP2
0x843 JUMP
---
0x83e: JUMPDEST 
0x83f: V708 = 0x3
0x841: V709 = S[0x3]
0x843: JUMP 0x131
---
Entry stack: [V10, 0x131]
Stack pops: 1
Stack additions: [S0, V709]
Exit stack: [V10, 0x131, V709]

================================

Block 0x844
[0x844:0x85a]
---
Predecessors: [0x305]
Successors: [0x85b, 0x860]
---
0x844 JUMPDEST
0x845 PUSH1 0xa
0x847 SLOAD
0x848 CALLER
0x849 PUSH1 0x1
0x84b PUSH1 0xa0
0x84d PUSH1 0x2
0x84f EXP
0x850 SUB
0x851 SWAP1
0x852 DUP2
0x853 AND
0x854 SWAP2
0x855 AND
0x856 EQ
0x857 PUSH2 0x860
0x85a JUMPI
---
0x844: JUMPDEST 
0x845: V710 = 0xa
0x847: V711 = S[0xa]
0x848: V712 = CALLER
0x849: V713 = 0x1
0x84b: V714 = 0xa0
0x84d: V715 = 0x2
0x84f: V716 = EXP 0x2 0xa0
0x850: V717 = SUB 0x10000000000000000000000000000000000000000 0x1
0x853: V718 = AND 0xffffffffffffffffffffffffffffffffffffffff V712
0x855: V719 = AND V711 0xffffffffffffffffffffffffffffffffffffffff
0x856: V720 = EQ V719 V718
0x857: V721 = 0x860
0x85a: JUMPI 0x860 V720
---
Entry stack: [V10, 0xf3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf3]

================================

Block 0x85b
[0x85b:0x85f]
---
Predecessors: [0x844]
Successors: []
---
0x85b PUSH1 0x0
0x85d PUSH1 0x0
0x85f REVERT
---
0x85b: V722 = 0x0
0x85d: V723 = 0x0
0x85f: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf3]

================================

Block 0x860
[0x860:0x862]
---
Predecessors: [0x844]
Successors: [0x863]
---
0x860 JUMPDEST
0x861 PUSH1 0x1
---
0x860: JUMPDEST 
0x861: V724 = 0x1
---
Entry stack: [V10, 0xf3]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V10, 0xf3, 0x1]

================================

Block 0x863
[0x863:0x872]
---
Predecessors: [0x860]
Successors: [0x873, 0x874]
---
0x863 JUMPDEST
0x864 PUSH1 0x0
0x866 SLOAD
0x867 PUSH1 0xff
0x869 AND
0x86a PUSH1 0x3
0x86c DUP2
0x86d GT
0x86e ISZERO
0x86f PUSH2 0x874
0x872 JUMPI
---
0x863: JUMPDEST 
0x864: V725 = 0x0
0x866: V726 = S[0x0]
0x867: V727 = 0xff
0x869: V728 = AND 0xff V726
0x86a: V729 = 0x3
0x86d: V730 = GT V728 0x3
0x86e: V731 = ISZERO V730
0x86f: V732 = 0x874
0x872: JUMPI 0x874 V731
---
Entry stack: [V10, 0xf3, 0x1]
Stack pops: 0
Stack additions: [V728]
Exit stack: [V10, 0xf3, 0x1, V728]

================================

Block 0x873
[0x873:0x873]
---
Predecessors: [0x863]
Successors: []
---
0x873 INVALID
---
0x873: INVALID 
---
Entry stack: [V10, 0xf3, 0x1, V728]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf3, 0x1, V728]

================================

Block 0x874
[0x874:0x87a]
---
Predecessors: [0x863]
Successors: [0x87b, 0x891]
---
0x874 JUMPDEST
0x875 EQ
0x876 DUP1
0x877 PUSH2 0x891
0x87a JUMPI
---
0x874: JUMPDEST 
0x875: V733 = EQ V728 0x1
0x877: V734 = 0x891
0x87a: JUMPI 0x891 V733
---
Entry stack: [V10, 0xf3, 0x1, V728]
Stack pops: 2
Stack additions: [V733]
Exit stack: [V10, 0xf3, V733]

================================

Block 0x87b
[0x87b:0x87d]
---
Predecessors: [0x874]
Successors: [0x87e]
---
0x87b POP
0x87c PUSH1 0x2
---
0x87c: V735 = 0x2
---
Entry stack: [V10, 0xf3, V733]
Stack pops: 1
Stack additions: [0x2]
Exit stack: [V10, 0xf3, 0x2]

================================

Block 0x87e
[0x87e:0x88d]
---
Predecessors: [0x87b]
Successors: [0x88e, 0x88f]
---
0x87e JUMPDEST
0x87f PUSH1 0x0
0x881 SLOAD
0x882 PUSH1 0xff
0x884 AND
0x885 PUSH1 0x3
0x887 DUP2
0x888 GT
0x889 ISZERO
0x88a PUSH2 0x88f
0x88d JUMPI
---
0x87e: JUMPDEST 
0x87f: V736 = 0x0
0x881: V737 = S[0x0]
0x882: V738 = 0xff
0x884: V739 = AND 0xff V737
0x885: V740 = 0x3
0x888: V741 = GT V739 0x3
0x889: V742 = ISZERO V741
0x88a: V743 = 0x88f
0x88d: JUMPI 0x88f V742
---
Entry stack: [V10, 0xf3, 0x2]
Stack pops: 0
Stack additions: [V739]
Exit stack: [V10, 0xf3, 0x2, V739]

================================

Block 0x88e
[0x88e:0x88e]
---
Predecessors: [0x87e]
Successors: []
---
0x88e INVALID
---
0x88e: INVALID 
---
Entry stack: [V10, 0xf3, 0x2, V739]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf3, 0x2, V739]

================================

Block 0x88f
[0x88f:0x890]
---
Predecessors: [0x87e]
Successors: [0x891]
---
0x88f JUMPDEST
0x890 EQ
---
0x88f: JUMPDEST 
0x890: V744 = EQ V739 0x2
---
Entry stack: [V10, 0xf3, 0x2, V739]
Stack pops: 2
Stack additions: [V744]
Exit stack: [V10, 0xf3, V744]

================================

Block 0x891
[0x891:0x897]
---
Predecessors: [0x874, 0x88f]
Successors: [0x898, 0x8a2]
---
0x891 JUMPDEST
0x892 DUP1
0x893 ISZERO
0x894 PUSH2 0x8a2
0x897 JUMPI
---
0x891: JUMPDEST 
0x893: V745 = ISZERO S0
0x894: V746 = 0x8a2
0x897: JUMPI 0x8a2 V745
---
Entry stack: [V10, 0xf3, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xf3, S0]

================================

Block 0x898
[0x898:0x8a1]
---
Predecessors: [0x891]
Successors: [0x8a2]
---
0x898 POP
0x899 TIMESTAMP
0x89a PUSH1 0x5
0x89c SLOAD
0x89d PUSH2 0xe10
0x8a0 ADD
0x8a1 LT
---
0x899: V747 = TIMESTAMP
0x89a: V748 = 0x5
0x89c: V749 = S[0x5]
0x89d: V750 = 0xe10
0x8a0: V751 = ADD 0xe10 V749
0x8a1: V752 = LT V751 V747
---
Entry stack: [V10, 0xf3, S0]
Stack pops: 1
Stack additions: [V752]
Exit stack: [V10, 0xf3, V752]

================================

Block 0x8a2
[0x8a2:0x8a8]
---
Predecessors: [0x891, 0x898]
Successors: [0x8a9, 0x8ae]
---
0x8a2 JUMPDEST
0x8a3 ISZERO
0x8a4 ISZERO
0x8a5 PUSH2 0x8ae
0x8a8 JUMPI
---
0x8a2: JUMPDEST 
0x8a3: V753 = ISZERO S0
0x8a4: V754 = ISZERO V753
0x8a5: V755 = 0x8ae
0x8a8: JUMPI 0x8ae V754
---
Entry stack: [V10, 0xf3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xf3]

================================

Block 0x8a9
[0x8a9:0x8ad]
---
Predecessors: [0x8a2]
Successors: []
---
0x8a9 PUSH1 0x0
0x8ab PUSH1 0x0
0x8ad REVERT
---
0x8a9: V756 = 0x0
0x8ab: V757 = 0x0
0x8ad: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf3]

================================

Block 0x8ae
[0x8ae:0x8b9]
---
Predecessors: [0x8a2]
Successors: []
---
0x8ae JUMPDEST
0x8af CALLER
0x8b0 PUSH1 0x1
0x8b2 PUSH1 0xa0
0x8b4 PUSH1 0x2
0x8b6 EXP
0x8b7 SUB
0x8b8 AND
0x8b9 SELFDESTRUCT
---
0x8ae: JUMPDEST 
0x8af: V758 = CALLER
0x8b0: V759 = 0x1
0x8b2: V760 = 0xa0
0x8b4: V761 = 0x2
0x8b6: V762 = EXP 0x2 0xa0
0x8b7: V763 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b8: V764 = AND 0xffffffffffffffffffffffffffffffffffffffff V758
0x8b9: SELFDESTRUCT V764
---
Entry stack: [V10, 0xf3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf3]

================================

Block 0x8ba
[0x8ba:0x8ba]
---
Predecessors: []
Successors: [0x8bb]
---
0x8ba JUMPDEST
---
0x8ba: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8bb
[0x8bb:0x8bb]
---
Predecessors: [0x8ba]
Successors: [0x8bc]
---
0x8bb JUMPDEST
---
0x8bb: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8bc
[0x8bc:0x8bd]
---
Predecessors: [0x8bb]
Successors: []
Has unresolved jump.
---
0x8bc JUMPDEST
0x8bd JUMP
---
0x8bc: JUMPDEST 
0x8bd: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8be
[0x8be:0x8cb]
---
Predecessors: [0x341]
Successors: [0x8cc, 0x8ea]
---
0x8be JUMPDEST
0x8bf DUP2
0x8c0 SLOAD
0x8c1 DUP2
0x8c2 DUP4
0x8c3 SSTORE
0x8c4 DUP2
0x8c5 DUP2
0x8c6 ISZERO
0x8c7 GT
0x8c8 PUSH2 0x8ea
0x8cb JUMPI
---
0x8be: JUMPDEST 
0x8c0: V765 = S[0x1]
0x8c3: S[0x1] = V268
0x8c6: V766 = ISZERO V765
0x8c7: V767 = GT V766 V268
0x8c8: V768 = 0x8ea
0x8cb: JUMPI 0x8ea V767
---
Entry stack: [V10, S10, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268]
Stack pops: 2
Stack additions: [S1, S0, V765]
Exit stack: [V10, S10, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268, V765]

================================

Block 0x8cc
[0x8cc:0x8e9]
---
Predecessors: [0x8be]
Successors: [0x8f0]
---
0x8cc PUSH1 0x2
0x8ce MUL
0x8cf DUP2
0x8d0 PUSH1 0x2
0x8d2 MUL
0x8d3 DUP4
0x8d4 PUSH1 0x0
0x8d6 MSTORE
0x8d7 PUSH1 0x20
0x8d9 PUSH1 0x0
0x8db SHA3
0x8dc SWAP2
0x8dd DUP3
0x8de ADD
0x8df SWAP2
0x8e0 ADD
0x8e1 PUSH2 0x8ea
0x8e4 SWAP2
0x8e5 SWAP1
0x8e6 PUSH2 0x8f0
0x8e9 JUMP
---
0x8cc: V769 = 0x2
0x8ce: V770 = MUL 0x2 V765
0x8d0: V771 = 0x2
0x8d2: V772 = MUL 0x2 V268
0x8d4: V773 = 0x0
0x8d6: M[0x0] = 0x1
0x8d7: V774 = 0x20
0x8d9: V775 = 0x0
0x8db: V776 = SHA3 0x0 0x20
0x8de: V777 = ADD V776 V770
0x8e0: V778 = ADD V776 V772
0x8e1: V779 = 0x8ea
0x8e6: V780 = 0x8f0
0x8e9: JUMP 0x8f0
---
Entry stack: [V10, S11, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268, V765]
Stack pops: 3
Stack additions: [S2, S1, 0x8ea, V777, V778]
Exit stack: [V10, S11, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268, 0x8ea, V777, V778]

================================

Block 0x8ea
[0x8ea:0x8ea]
---
Predecessors: [0x8be, 0x92d]
Successors: [0x8eb]
---
0x8ea JUMPDEST
---
0x8ea: JUMPDEST 
---
Entry stack: [V10, S11, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268, S0]

================================

Block 0x8eb
[0x8eb:0x8ef]
---
Predecessors: [0x8ea]
Successors: [0x355]
---
0x8eb JUMPDEST
0x8ec POP
0x8ed POP
0x8ee POP
0x8ef JUMP
---
0x8eb: JUMPDEST 
0x8ef: JUMP 0x355
---
Entry stack: [V10, S11, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S11, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268]

================================

Block 0x8f0
[0x8f0:0x8f5]
---
Predecessors: [0x8cc]
Successors: [0x8f6]
---
0x8f0 JUMPDEST
0x8f1 PUSH2 0x92d
0x8f4 SWAP2
0x8f5 SWAP1
---
0x8f0: JUMPDEST 
0x8f1: V781 = 0x92d
---
Entry stack: [V10, S13, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268, 0x8ea, V777, V778]
Stack pops: 2
Stack additions: [0x92d, S1, S0]
Exit stack: [V10, S13, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268, 0x8ea, 0x92d, V777, V778]

================================

Block 0x8f6
[0x8f6:0x8fe]
---
Predecessors: [0x8f0, 0x8ff]
Successors: [0x8ff, 0x929]
---
0x8f6 JUMPDEST
0x8f7 DUP1
0x8f8 DUP3
0x8f9 GT
0x8fa ISZERO
0x8fb PUSH2 0x929
0x8fe JUMPI
---
0x8f6: JUMPDEST 
0x8f9: V782 = GT V777 S0
0x8fa: V783 = ISZERO V782
0x8fb: V784 = 0x929
0x8fe: JUMPI 0x929 V783
---
Entry stack: [V10, S14, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268, 0x8ea, 0x92d, V777, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S14, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268, 0x8ea, 0x92d, V777, S0]

================================

Block 0x8ff
[0x8ff:0x928]
---
Predecessors: [0x8f6]
Successors: [0x8f6]
---
0x8ff PUSH1 0x0
0x901 DUP2
0x902 SSTORE
0x903 PUSH1 0x1
0x905 DUP2
0x906 ADD
0x907 DUP1
0x908 SLOAD
0x909 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91e NOT
0x91f AND
0x920 SWAP1
0x921 SSTORE
0x922 PUSH1 0x2
0x924 ADD
0x925 PUSH2 0x8f6
0x928 JUMP
---
0x8ff: V785 = 0x0
0x902: S[S0] = 0x0
0x903: V786 = 0x1
0x906: V787 = ADD S0 0x1
0x908: V788 = S[V787]
0x909: V789 = 0xffffffffffffffffffffffffffffffffffffffff
0x91e: V790 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x91f: V791 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V788
0x921: S[V787] = V791
0x922: V792 = 0x2
0x924: V793 = ADD 0x2 S0
0x925: V794 = 0x8f6
0x928: JUMP 0x8f6
---
Entry stack: [V10, S14, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268, 0x8ea, 0x92d, V777, S0]
Stack pops: 1
Stack additions: [V793]
Exit stack: [V10, S14, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268, 0x8ea, 0x92d, V777, V793]

================================

Block 0x929
[0x929:0x92c]
---
Predecessors: [0x8f6]
Successors: [0x92d]
---
0x929 JUMPDEST
0x92a POP
0x92b SWAP1
0x92c JUMP
---
0x929: JUMPDEST 
0x92c: JUMP 0x92d
---
Entry stack: [V10, S14, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268, 0x8ea, 0x92d, V777, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, S14, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268, 0x8ea, V777]

================================

Block 0x92d
[0x92d:0x92f]
---
Predecessors: [0x929]
Successors: [0x8ea]
---
0x92d JUMPDEST
0x92e SWAP1
0x92f JUMP
---
0x92d: JUMPDEST 
0x92f: JUMP 0x8ea
---
Entry stack: [V10, S12, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268, 0x8ea, V777]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S12, {0xef, 0x131}, 0x0, V267, 0x0, 0x1, V266, V268, 0x355, 0x1, V268, V777]

================================

Block 0x930
[0x930:0x942]
---
Predecessors: []
Successors: [0x943]
---
0x930 STOP
0x931 LOG1
0x932 PUSH6 0x627a7a723058
0x939 SHA3
0x93a CALLVALUE
0x93b MISSING 0xd1
0x93c RETURNDATASIZE
0x93d MISSING 0xc8
0x93e MISSING 0x4b
0x93f MISSING 0xf9
0x940 PUSH1 0x46
0x942 JUMPI
---
0x930: STOP 
0x931: LOG S0 S1 S2
0x932: V795 = 0x627a7a723058
0x939: V796 = SHA3 0x627a7a723058 S3
0x93a: V797 = CALLVALUE
0x93b: MISSING 0xd1
0x93c: V798 = RETURNDATASIZE
0x93d: MISSING 0xc8
0x93e: MISSING 0x4b
0x93f: MISSING 0xf9
0x940: V799 = 0x46
0x942: THROWI S0
---
Entry stack: []
Stack pops: 0
Stack additions: [V797, V796, V798]
Exit stack: []

================================

Block 0x943
[0x943:0x95b]
---
Predecessors: [0x930]
Successors: []
---
0x943 DUP9
0x944 MISSING 0x46
0x945 MISSING 0xc4
0x946 MISSING 0xe3
0x947 MISSING 0xd
0x948 MISSING 0xb5
0x949 MISSING 0x49
0x94a MISSING 0x4f
0x94b MISSING 0xed
0x94c EXP
0x94d SWAP12
0x94e SGT
0x94f SWAP5
0x950 SWAP5
0x951 XOR
0x952 DUP14
0x953 MISSING 0xa5
0x954 MISSING 0x2b
0x955 NUMBER
0x956 PUSH4 0x734d7700
0x95b MISSING 0x29
---
0x944: MISSING 0x46
0x945: MISSING 0xc4
0x946: MISSING 0xe3
0x947: MISSING 0xd
0x948: MISSING 0xb5
0x949: MISSING 0x49
0x94a: MISSING 0x4f
0x94b: MISSING 0xed
0x94c: V800 = EXP S0 S1
0x94e: V801 = SGT S13 S2
0x951: V802 = XOR V801 S3
0x953: MISSING 0xa5
0x954: MISSING 0x2b
0x955: V803 = NUMBER
0x956: V804 = 0x734d7700
0x95b: MISSING 0x29
---
Entry stack: []
Stack pops: 4322
Stack additions: [0x734d7700, V803]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0xf5
Exit block: 0x105
Body: 0xf5, 0xfc, 0xfd, 0x105, 0x4c6

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x121
Exit block: 0x131
Body: 0x121, 0x128, 0x129, 0x131, 0x4d5

Function 2:
Public function signature: 0x38771242
Entry block: 0x143
Exit block: 0x131
Body: 0x131, 0x143, 0x14a, 0x14b, 0x4db

Function 3:
Public function signature: 0x38af3eed
Entry block: 0x165
Exit block: 0x105
Body: 0x105, 0x165, 0x16c, 0x16d, 0x4e1

Function 4:
Public function signature: 0x3c8da588
Entry block: 0x191
Exit block: 0x131
Body: 0x131, 0x191, 0x198, 0x199, 0x4f0

Function 5:
Public function signature: 0x6e66f6e9
Entry block: 0x1b3
Exit block: 0x105
Body: 0x105, 0x1b3, 0x1ba, 0x1bb, 0x4f6

Function 6:
Public function signature: 0x71ae8f02
Entry block: 0x1df
Exit block: 0x131
Body: 0x131, 0x1df, 0x1e6, 0x1e7, 0x505

Function 7:
Public function signature: 0x86f32586
Entry block: 0x201
Exit block: 0x208
Body: 0xf3, 0x201, 0x208, 0x209

Function 8:
Public function signature: 0xaa367664
Entry block: 0x213
Exit block: 0x131
Body: 0x131, 0x213, 0x21a, 0x21b, 0x611

Function 9:
Public function signature: 0xb2d5ae44
Entry block: 0x235
Exit block: 0x72e
Body: 0x235, 0x23c, 0x23d, 0x245, 0x617, 0x61f, 0x62f, 0x630, 0x636, 0x63b, 0x640, 0x64a, 0x661, 0x662, 0x673, 0x688, 0x694, 0x695, 0x6a6, 0x6bb, 0x6bc, 0x6cd, 0x6dc, 0x6dd, 0x6ee, 0x720, 0x72e, 0x72f, 0x740, 0x74b, 0x75a, 0x763, 0x764, 0x76f, 0x774, 0x775

Function 10:
Public function signature: 0xc19d93fb
Entry block: 0x259
Exit block: 0x278
Body: 0x259, 0x260, 0x261, 0x269, 0x278, 0x279, 0x77b

Function 11:
Public function signature: 0xc2052403
Entry block: 0x28d
Exit block: 0xf3
Body: 0xf3, 0x28d, 0x294, 0x295

Function 12:
Public function signature: 0xc5c4744c
Entry block: 0x29f
Exit block: 0x131
Body: 0x131, 0x29f, 0x2a6, 0x2a7, 0x838

Function 13:
Public function signature: 0xce845d1d
Entry block: 0x2c1
Exit block: 0x131
Body: 0x131, 0x2c1, 0x2c8, 0x2c9, 0x83e

Function 14:
Public function signature: 0xd7bb99ba
Entry block: 0x2e3
Exit block: 0x131
Body: 0x131, 0x2e3

Function 15:
Public function signature: 0xfe389e09
Entry block: 0x2fd
Exit block: 0x8a9
Body: 0x2fd, 0x304, 0x305, 0x844, 0x85b, 0x860, 0x863, 0x873, 0x874, 0x87b, 0x87e, 0x88e, 0x88f, 0x891, 0x898, 0x8a2, 0x8a9, 0x8ae

Function 16:
Public fallback function
Entry block: 0xe3
Exit block: 0x131
Body: 0xe3, 0xe7, 0xef, 0x131

Function 17:
Private function
Entry block: 0x50b
Exit block: 0x60f
Body: 0xf1, 0x50b, 0x517, 0x51f, 0x525, 0x534, 0x534, 0x576, 0x57f, 0x58a, 0x595, 0x5f3, 0x602, 0x60c, 0x60d, 0x60e, 0x60f

Function 18:
Private function
Entry block: 0x784
Exit block: 0x835
Body: 0x784, 0x788, 0x799, 0x7a4, 0x7da, 0x7ea, 0x834, 0x835

Function 19:
Private function
Entry block: 0x30f
Exit block: 0x4c1
Body: 0x30f, 0x315, 0x326, 0x331, 0x341, 0x355, 0x366, 0x3c5, 0x3e8, 0x450, 0x45e, 0x462, 0x462, 0x4b5, 0x4bf, 0x4c0, 0x4c1, 0x8be, 0x8cc, 0x8ea, 0x8eb, 0x8f0, 0x8f6, 0x8ff, 0x929, 0x92d

