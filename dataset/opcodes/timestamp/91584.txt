Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x71]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x17c51080
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x71
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x17c51080
0x3b: V13 = EQ V11 0x17c51080
0x3c: V14 = 0x71
0x3f: JUMPI 0x71 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x96]
---
0x40 DUP1
0x41 PUSH4 0x52774565
0x46 EQ
0x47 PUSH2 0x96
0x4a JUMPI
---
0x41: V15 = 0x52774565
0x46: V16 = EQ 0x52774565 V11
0x47: V17 = 0x96
0x4a: JUMPI 0x96 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xa9]
---
0x4b DUP1
0x4c PUSH4 0xbbe4fd50
0x51 EQ
0x52 PUSH2 0xa9
0x55 JUMPI
---
0x4c: V18 = 0xbbe4fd50
0x51: V19 = EQ 0xbbe4fd50 V11
0x52: V20 = 0xa9
0x55: JUMPI 0xa9 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xbc]
---
0x56 DUP1
0x57 PUSH4 0xc2052403
0x5c EQ
0x5d PUSH2 0xbc
0x60 JUMPI
---
0x57: V21 = 0xc2052403
0x5c: V22 = EQ 0xc2052403 V11
0x5d: V23 = 0xbc
0x60: JUMPI 0xbc V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xd1]
---
0x61 DUP1
0x62 PUSH4 0xdf78c1dd
0x67 EQ
0x68 PUSH2 0xd1
0x6b JUMPI
---
0x62: V24 = 0xdf78c1dd
0x67: V25 = EQ 0xdf78c1dd V11
0x68: V26 = 0xd1
0x6b: JUMPI 0xd1 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x70]
---
Predecessors: [0x0, 0x61]
Successors: []
---
0x6c JUMPDEST
0x6d PUSH1 0x0
0x6f DUP1
0x70 REVERT
---
0x6c: JUMPDEST 
0x6d: V27 = 0x0
0x70: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x71
[0x71:0x77]
---
Predecessors: [0xd]
Successors: [0x78, 0x7c]
---
0x71 JUMPDEST
0x72 CALLVALUE
0x73 ISZERO
0x74 PUSH2 0x7c
0x77 JUMPI
---
0x71: JUMPDEST 
0x72: V28 = CALLVALUE
0x73: V29 = ISZERO V28
0x74: V30 = 0x7c
0x77: JUMPI 0x7c V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7b]
---
Predecessors: [0x71]
Successors: []
---
0x78 PUSH1 0x0
0x7a DUP1
0x7b REVERT
---
0x78: V31 = 0x0
0x7b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7c
[0x7c:0x83]
---
Predecessors: [0x71]
Successors: [0xdc]
---
0x7c JUMPDEST
0x7d PUSH2 0x84
0x80 PUSH2 0xdc
0x83 JUMP
---
0x7c: JUMPDEST 
0x7d: V32 = 0x84
0x80: V33 = 0xdc
0x83: JUMP 0xdc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V11, 0x84]

================================

Block 0x84
[0x84:0x95]
---
Predecessors: [0xdc, 0xfb, 0x117]
Successors: []
---
0x84 JUMPDEST
0x85 PUSH1 0x40
0x87 MLOAD
0x88 SWAP1
0x89 DUP2
0x8a MSTORE
0x8b PUSH1 0x20
0x8d ADD
0x8e PUSH1 0x40
0x90 MLOAD
0x91 DUP1
0x92 SWAP2
0x93 SUB
0x94 SWAP1
0x95 RETURN
---
0x84: JUMPDEST 
0x85: V34 = 0x40
0x87: V35 = M[0x40]
0x8a: M[V35] = S0
0x8b: V36 = 0x20
0x8d: V37 = ADD 0x20 V35
0x8e: V38 = 0x40
0x90: V39 = M[0x40]
0x93: V40 = SUB V37 V39
0x95: RETURN V39 V40
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x96
[0x96:0x9c]
---
Predecessors: [0x40]
Successors: [0x9d, 0xa1]
---
0x96 JUMPDEST
0x97 CALLVALUE
0x98 ISZERO
0x99 PUSH2 0xa1
0x9c JUMPI
---
0x96: JUMPDEST 
0x97: V41 = CALLVALUE
0x98: V42 = ISZERO V41
0x99: V43 = 0xa1
0x9c: JUMPI 0xa1 V42
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9d
[0x9d:0xa0]
---
Predecessors: [0x96]
Successors: []
---
0x9d PUSH1 0x0
0x9f DUP1
0xa0 REVERT
---
0x9d: V44 = 0x0
0xa0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa1
[0xa1:0xa8]
---
Predecessors: [0x96]
Successors: [0xfb]
---
0xa1 JUMPDEST
0xa2 PUSH2 0x84
0xa5 PUSH2 0xfb
0xa8 JUMP
---
0xa1: JUMPDEST 
0xa2: V45 = 0x84
0xa5: V46 = 0xfb
0xa8: JUMP 0xfb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V11, 0x84]

================================

Block 0xa9
[0xa9:0xaf]
---
Predecessors: [0x4b]
Successors: [0xb0, 0xb4]
---
0xa9 JUMPDEST
0xaa CALLVALUE
0xab ISZERO
0xac PUSH2 0xb4
0xaf JUMPI
---
0xa9: JUMPDEST 
0xaa: V47 = CALLVALUE
0xab: V48 = ISZERO V47
0xac: V49 = 0xb4
0xaf: JUMPI 0xb4 V48
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb0
[0xb0:0xb3]
---
Predecessors: [0xa9]
Successors: []
---
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 REVERT
---
0xb0: V50 = 0x0
0xb3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb4
[0xb4:0xbb]
---
Predecessors: [0xa9]
Successors: [0x117]
---
0xb4 JUMPDEST
0xb5 PUSH2 0x84
0xb8 PUSH2 0x117
0xbb JUMP
---
0xb4: JUMPDEST 
0xb5: V51 = 0x84
0xb8: V52 = 0x117
0xbb: JUMP 0x117
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V11, 0x84]

================================

Block 0xbc
[0xbc:0xc2]
---
Predecessors: [0x56]
Successors: [0xc3, 0xc7]
---
0xbc JUMPDEST
0xbd CALLVALUE
0xbe ISZERO
0xbf PUSH2 0xc7
0xc2 JUMPI
---
0xbc: JUMPDEST 
0xbd: V53 = CALLVALUE
0xbe: V54 = ISZERO V53
0xbf: V55 = 0xc7
0xc2: JUMPI 0xc7 V54
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc3
[0xc3:0xc6]
---
Predecessors: [0xbc]
Successors: []
---
0xc3 PUSH1 0x0
0xc5 DUP1
0xc6 REVERT
---
0xc3: V56 = 0x0
0xc6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc7
[0xc7:0xce]
---
Predecessors: [0xbc]
Successors: [0x11b]
---
0xc7 JUMPDEST
0xc8 PUSH2 0xcf
0xcb PUSH2 0x11b
0xce JUMP
---
0xc7: JUMPDEST 
0xc8: V57 = 0xcf
0xcb: V58 = 0x11b
0xce: JUMP 0x11b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcf]
Exit stack: [V11, 0xcf]

================================

Block 0xcf
[0xcf:0xd0]
---
Predecessors: [0x1b7, 0x233]
Successors: []
---
0xcf JUMPDEST
0xd0 STOP
---
0xcf: JUMPDEST 
0xd0: STOP 
---
Entry stack: [V11, 0xcf, V61, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V61, S0]

================================

Block 0xd1
[0xd1:0xdb]
---
Predecessors: [0x61]
Successors: [0x1b9]
---
0xd1 JUMPDEST
0xd2 PUSH2 0xcf
0xd5 PUSH1 0x4
0xd7 CALLDATALOAD
0xd8 PUSH2 0x1b9
0xdb JUMP
---
0xd1: JUMPDEST 
0xd2: V59 = 0xcf
0xd5: V60 = 0x4
0xd7: V61 = CALLDATALOAD 0x4
0xd8: V62 = 0x1b9
0xdb: JUMP 0x1b9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcf, V61]
Exit stack: [V11, 0xcf, V61]

================================

Block 0xdc
[0xdc:0xfa]
---
Predecessors: [0x7c]
Successors: [0x84]
---
0xdc JUMPDEST
0xdd PUSH1 0x1
0xdf PUSH1 0xa0
0xe1 PUSH1 0x2
0xe3 EXP
0xe4 SUB
0xe5 CALLER
0xe6 AND
0xe7 PUSH1 0x0
0xe9 SWAP1
0xea DUP2
0xeb MSTORE
0xec PUSH1 0x20
0xee DUP2
0xef SWAP1
0xf0 MSTORE
0xf1 PUSH1 0x40
0xf3 SWAP1
0xf4 SHA3
0xf5 PUSH1 0x1
0xf7 ADD
0xf8 SLOAD
0xf9 SWAP1
0xfa JUMP
---
0xdc: JUMPDEST 
0xdd: V63 = 0x1
0xdf: V64 = 0xa0
0xe1: V65 = 0x2
0xe3: V66 = EXP 0x2 0xa0
0xe4: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe5: V68 = CALLER
0xe6: V69 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0xe7: V70 = 0x0
0xeb: M[0x0] = V69
0xec: V71 = 0x20
0xf0: M[0x20] = 0x0
0xf1: V72 = 0x40
0xf4: V73 = SHA3 0x0 0x40
0xf5: V74 = 0x1
0xf7: V75 = ADD 0x1 V73
0xf8: V76 = S[V75]
0xfa: JUMP 0x84
---
Entry stack: [V11, 0x84]
Stack pops: 1
Stack additions: [V76]
Exit stack: [V11, V76]

================================

Block 0xfb
[0xfb:0x116]
---
Predecessors: [0xa1]
Successors: [0x84]
---
0xfb JUMPDEST
0xfc PUSH1 0x1
0xfe PUSH1 0xa0
0x100 PUSH1 0x2
0x102 EXP
0x103 SUB
0x104 CALLER
0x105 AND
0x106 PUSH1 0x0
0x108 SWAP1
0x109 DUP2
0x10a MSTORE
0x10b PUSH1 0x20
0x10d DUP2
0x10e SWAP1
0x10f MSTORE
0x110 PUSH1 0x40
0x112 SWAP1
0x113 SHA3
0x114 SLOAD
0x115 SWAP1
0x116 JUMP
---
0xfb: JUMPDEST 
0xfc: V77 = 0x1
0xfe: V78 = 0xa0
0x100: V79 = 0x2
0x102: V80 = EXP 0x2 0xa0
0x103: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0x104: V82 = CALLER
0x105: V83 = AND V82 0xffffffffffffffffffffffffffffffffffffffff
0x106: V84 = 0x0
0x10a: M[0x0] = V83
0x10b: V85 = 0x20
0x10f: M[0x20] = 0x0
0x110: V86 = 0x40
0x113: V87 = SHA3 0x0 0x40
0x114: V88 = S[V87]
0x116: JUMP 0x84
---
Entry stack: [V11, 0x84]
Stack pops: 1
Stack additions: [V88]
Exit stack: [V11, V88]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0xb4]
Successors: [0x84]
---
0x117 JUMPDEST
0x118 TIMESTAMP
0x119 SWAP1
0x11a JUMP
---
0x117: JUMPDEST 
0x118: V89 = TIMESTAMP
0x11a: JUMP 0x84
---
Entry stack: [V11, 0x84]
Stack pops: 1
Stack additions: [V89]
Exit stack: [V11, V89]

================================

Block 0x11b
[0x11b:0x13c]
---
Predecessors: [0xc7, 0x1b9]
Successors: [0x13d, 0x15d]
---
0x11b JUMPDEST
0x11c PUSH1 0x1
0x11e PUSH1 0xa0
0x120 PUSH1 0x2
0x122 EXP
0x123 SUB
0x124 CALLER
0x125 AND
0x126 PUSH1 0x0
0x128 SWAP1
0x129 DUP2
0x12a MSTORE
0x12b PUSH1 0x20
0x12d DUP2
0x12e SWAP1
0x12f MSTORE
0x130 PUSH1 0x40
0x132 SWAP1
0x133 SHA3
0x134 SLOAD
0x135 ISZERO
0x136 DUP1
0x137 ISZERO
0x138 SWAP1
0x139 PUSH2 0x15d
0x13c JUMPI
---
0x11b: JUMPDEST 
0x11c: V90 = 0x1
0x11e: V91 = 0xa0
0x120: V92 = 0x2
0x122: V93 = EXP 0x2 0xa0
0x123: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x124: V95 = CALLER
0x125: V96 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0x126: V97 = 0x0
0x12a: M[0x0] = V96
0x12b: V98 = 0x20
0x12f: M[0x20] = 0x0
0x130: V99 = 0x40
0x133: V100 = SHA3 0x0 0x40
0x134: V101 = S[V100]
0x135: V102 = ISZERO V101
0x137: V103 = ISZERO V102
0x139: V104 = 0x15d
0x13c: JUMPI 0x15d V102
---
Entry stack: [V11, 0xcf, V61, S1, {0xcf, 0x1c2}]
Stack pops: 0
Stack additions: [V103]
Exit stack: [V11, 0xcf, V61, S1, {0xcf, 0x1c2}, V103]

================================

Block 0x13d
[0x13d:0x15c]
---
Predecessors: [0x11b]
Successors: [0x15d]
---
0x13d POP
0x13e PUSH1 0x1
0x140 PUSH1 0xa0
0x142 PUSH1 0x2
0x144 EXP
0x145 SUB
0x146 CALLER
0x147 AND
0x148 PUSH1 0x0
0x14a SWAP1
0x14b DUP2
0x14c MSTORE
0x14d PUSH1 0x20
0x14f DUP2
0x150 SWAP1
0x151 MSTORE
0x152 PUSH1 0x40
0x154 SWAP1
0x155 SHA3
0x156 PUSH1 0x1
0x158 ADD
0x159 SLOAD
0x15a TIMESTAMP
0x15b SWAP1
0x15c LT
---
0x13e: V105 = 0x1
0x140: V106 = 0xa0
0x142: V107 = 0x2
0x144: V108 = EXP 0x2 0xa0
0x145: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x146: V110 = CALLER
0x147: V111 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x148: V112 = 0x0
0x14c: M[0x0] = V111
0x14d: V113 = 0x20
0x151: M[0x20] = 0x0
0x152: V114 = 0x40
0x155: V115 = SHA3 0x0 0x40
0x156: V116 = 0x1
0x158: V117 = ADD 0x1 V115
0x159: V118 = S[V117]
0x15a: V119 = TIMESTAMP
0x15c: V120 = LT V118 V119
---
Entry stack: [V11, 0xcf, V61, S2, {0xcf, 0x1c2}, V103]
Stack pops: 1
Stack additions: [V120]
Exit stack: [V11, 0xcf, V61, S2, {0xcf, 0x1c2}, V120]

================================

Block 0x15d
[0x15d:0x162]
---
Predecessors: [0x11b, 0x13d]
Successors: [0x163, 0x1b7]
---
0x15d JUMPDEST
0x15e ISZERO
0x15f PUSH2 0x1b7
0x162 JUMPI
---
0x15d: JUMPDEST 
0x15e: V121 = ISZERO S0
0x15f: V122 = 0x1b7
0x162: JUMPI 0x1b7 V121
---
Entry stack: [V11, 0xcf, V61, S2, {0xcf, 0x1c2}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xcf, V61, S2, {0xcf, 0x1c2}]

================================

Block 0x163
[0x163:0x1b6]
---
Predecessors: [0x15d]
Successors: [0x1b7]
---
0x163 PUSH1 0x1
0x165 PUSH1 0xa0
0x167 PUSH1 0x2
0x169 EXP
0x16a SUB
0x16b CALLER
0x16c AND
0x16d PUSH1 0x0
0x16f DUP2
0x170 DUP2
0x171 MSTORE
0x172 PUSH1 0x20
0x174 DUP2
0x175 SWAP1
0x176 MSTORE
0x177 PUSH1 0x40
0x179 SWAP1
0x17a DUP2
0x17b SWAP1
0x17c SHA3
0x17d SLOAD
0x17e DUP1
0x17f ISZERO
0x180 PUSH2 0x8fc
0x183 MUL
0x184 SWAP2
0x185 MLOAD
0x186 PUSH1 0x0
0x188 PUSH1 0x40
0x18a MLOAD
0x18b DUP1
0x18c DUP4
0x18d SUB
0x18e DUP2
0x18f DUP6
0x190 DUP9
0x191 DUP9
0x192 CALL
0x193 POP
0x194 POP
0x195 POP
0x196 PUSH1 0x1
0x198 PUSH1 0xa0
0x19a PUSH1 0x2
0x19c EXP
0x19d SUB
0x19e CALLER
0x19f AND
0x1a0 PUSH1 0x0
0x1a2 SWAP1
0x1a3 DUP2
0x1a4 MSTORE
0x1a5 PUSH1 0x20
0x1a7 DUP2
0x1a8 SWAP1
0x1a9 MSTORE
0x1aa PUSH1 0x40
0x1ac DUP2
0x1ad SHA3
0x1ae DUP2
0x1af DUP2
0x1b0 SSTORE
0x1b1 PUSH1 0x1
0x1b3 ADD
0x1b4 SSTORE
0x1b5 POP
0x1b6 POP
---
0x163: V123 = 0x1
0x165: V124 = 0xa0
0x167: V125 = 0x2
0x169: V126 = EXP 0x2 0xa0
0x16a: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16b: V128 = CALLER
0x16c: V129 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x16d: V130 = 0x0
0x171: M[0x0] = V129
0x172: V131 = 0x20
0x176: M[0x20] = 0x0
0x177: V132 = 0x40
0x17c: V133 = SHA3 0x0 0x40
0x17d: V134 = S[V133]
0x17f: V135 = ISZERO V134
0x180: V136 = 0x8fc
0x183: V137 = MUL 0x8fc V135
0x185: V138 = M[0x40]
0x186: V139 = 0x0
0x188: V140 = 0x40
0x18a: V141 = M[0x40]
0x18d: V142 = SUB V138 V141
0x192: V143 = CALL V137 V129 V134 V141 V142 V141 0x0
0x196: V144 = 0x1
0x198: V145 = 0xa0
0x19a: V146 = 0x2
0x19c: V147 = EXP 0x2 0xa0
0x19d: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19e: V149 = CALLER
0x19f: V150 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V151 = 0x0
0x1a4: M[0x0] = V150
0x1a5: V152 = 0x20
0x1a9: M[0x20] = 0x0
0x1aa: V153 = 0x40
0x1ad: V154 = SHA3 0x0 0x40
0x1b0: S[V154] = 0x0
0x1b1: V155 = 0x1
0x1b3: V156 = ADD 0x1 V154
0x1b4: S[V156] = 0x0
---
Entry stack: [V11, 0xcf, V61, S1, {0xcf, 0x1c2}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V61, S1, {0xcf, 0x1c2}]

================================

Block 0x1b7
[0x1b7:0x1b8]
---
Predecessors: [0x15d, 0x163]
Successors: [0xcf, 0x1c2]
---
0x1b7 JUMPDEST
0x1b8 JUMP
---
0x1b7: JUMPDEST 
0x1b8: JUMP {0xcf, 0x1c2}
---
Entry stack: [V11, 0xcf, V61, S1, {0xcf, 0x1c2}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xcf, V61, S1]

================================

Block 0x1b9
[0x1b9:0x1c1]
---
Predecessors: [0xd1]
Successors: [0x11b]
---
0x1b9 JUMPDEST
0x1ba CALLVALUE
0x1bb PUSH2 0x1c2
0x1be PUSH2 0x11b
0x1c1 JUMP
---
0x1b9: JUMPDEST 
0x1ba: V157 = CALLVALUE
0x1bb: V158 = 0x1c2
0x1be: V159 = 0x11b
0x1c1: JUMP 0x11b
---
Entry stack: [V11, 0xcf, V61]
Stack pops: 0
Stack additions: [V157, 0x1c2]
Exit stack: [V11, 0xcf, V61, V157, 0x1c2]

================================

Block 0x1c2
[0x1c2:0x1e1]
---
Predecessors: [0x1b7]
Successors: [0x1e2, 0x20e]
---
0x1c2 JUMPDEST
0x1c3 PUSH1 0x1
0x1c5 PUSH1 0xa0
0x1c7 PUSH1 0x2
0x1c9 EXP
0x1ca SUB
0x1cb CALLER
0x1cc AND
0x1cd PUSH1 0x0
0x1cf SWAP1
0x1d0 DUP2
0x1d1 MSTORE
0x1d2 PUSH1 0x20
0x1d4 DUP2
0x1d5 SWAP1
0x1d6 MSTORE
0x1d7 PUSH1 0x40
0x1d9 DUP2
0x1da SHA3
0x1db SLOAD
0x1dc GT
0x1dd ISZERO
0x1de PUSH2 0x20e
0x1e1 JUMPI
---
0x1c2: JUMPDEST 
0x1c3: V160 = 0x1
0x1c5: V161 = 0xa0
0x1c7: V162 = 0x2
0x1c9: V163 = EXP 0x2 0xa0
0x1ca: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cb: V165 = CALLER
0x1cc: V166 = AND V165 0xffffffffffffffffffffffffffffffffffffffff
0x1cd: V167 = 0x0
0x1d1: M[0x0] = V166
0x1d2: V168 = 0x20
0x1d6: M[0x20] = 0x0
0x1d7: V169 = 0x40
0x1da: V170 = SHA3 0x0 0x40
0x1db: V171 = S[V170]
0x1dc: V172 = GT V171 0x0
0x1dd: V173 = ISZERO V172
0x1de: V174 = 0x20e
0x1e1: JUMPI 0x20e V173
---
Entry stack: [V11, 0xcf, V61, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V61, S0]

================================

Block 0x1e2
[0x1e2:0x20d]
---
Predecessors: [0x1c2]
Successors: [0x233]
---
0x1e2 PUSH1 0x1
0x1e4 PUSH1 0xa0
0x1e6 PUSH1 0x2
0x1e8 EXP
0x1e9 SUB
0x1ea CALLER
0x1eb AND
0x1ec CALLVALUE
0x1ed DUP1
0x1ee ISZERO
0x1ef PUSH2 0x8fc
0x1f2 MUL
0x1f3 SWAP1
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 PUSH1 0x0
0x1f9 PUSH1 0x40
0x1fb MLOAD
0x1fc DUP1
0x1fd DUP4
0x1fe SUB
0x1ff DUP2
0x200 DUP6
0x201 DUP9
0x202 DUP9
0x203 CALL
0x204 SWAP4
0x205 POP
0x206 POP
0x207 POP
0x208 POP
0x209 POP
0x20a PUSH2 0x233
0x20d JUMP
---
0x1e2: V175 = 0x1
0x1e4: V176 = 0xa0
0x1e6: V177 = 0x2
0x1e8: V178 = EXP 0x2 0xa0
0x1e9: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ea: V180 = CALLER
0x1eb: V181 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V182 = CALLVALUE
0x1ee: V183 = ISZERO V182
0x1ef: V184 = 0x8fc
0x1f2: V185 = MUL 0x8fc V183
0x1f4: V186 = 0x40
0x1f6: V187 = M[0x40]
0x1f7: V188 = 0x0
0x1f9: V189 = 0x40
0x1fb: V190 = M[0x40]
0x1fe: V191 = SUB V187 V190
0x203: V192 = CALL V185 V181 V182 V190 V191 V190 0x0
0x20a: V193 = 0x233
0x20d: JUMP 0x233
---
Entry stack: [V11, 0xcf, V61, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V61, S0]

================================

Block 0x20e
[0x20e:0x232]
---
Predecessors: [0x1c2]
Successors: [0x233]
---
0x20e JUMPDEST
0x20f PUSH1 0x1
0x211 PUSH1 0xa0
0x213 PUSH1 0x2
0x215 EXP
0x216 SUB
0x217 CALLER
0x218 AND
0x219 PUSH1 0x0
0x21b SWAP1
0x21c DUP2
0x21d MSTORE
0x21e PUSH1 0x20
0x220 DUP2
0x221 SWAP1
0x222 MSTORE
0x223 PUSH1 0x40
0x225 SWAP1
0x226 SHA3
0x227 DUP2
0x228 DUP2
0x229 SSTORE
0x22a TIMESTAMP
0x22b DUP4
0x22c ADD
0x22d PUSH1 0x1
0x22f SWAP1
0x230 SWAP2
0x231 ADD
0x232 SSTORE
---
0x20e: JUMPDEST 
0x20f: V194 = 0x1
0x211: V195 = 0xa0
0x213: V196 = 0x2
0x215: V197 = EXP 0x2 0xa0
0x216: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x217: V199 = CALLER
0x218: V200 = AND V199 0xffffffffffffffffffffffffffffffffffffffff
0x219: V201 = 0x0
0x21d: M[0x0] = V200
0x21e: V202 = 0x20
0x222: M[0x20] = 0x0
0x223: V203 = 0x40
0x226: V204 = SHA3 0x0 0x40
0x229: S[V204] = S0
0x22a: V205 = TIMESTAMP
0x22c: V206 = ADD V61 V205
0x22d: V207 = 0x1
0x231: V208 = ADD V204 0x1
0x232: S[V208] = V206
---
Entry stack: [V11, 0xcf, V61, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xcf, V61, S0]

================================

Block 0x233
[0x233:0x236]
---
Predecessors: [0x1e2, 0x20e]
Successors: [0xcf]
---
0x233 JUMPDEST
0x234 POP
0x235 POP
0x236 JUMP
---
0x233: JUMPDEST 
0x236: JUMP 0xcf
---
Entry stack: [V11, 0xcf, V61, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x237
[0x237:0x262]
---
Predecessors: []
Successors: []
---
0x237 STOP
0x238 LOG1
0x239 PUSH6 0x627a7a723058
0x240 SHA3
0x241 BYTE
0x242 MISSING 0xe2
0x243 EXTCODEHASH
0x244 DIV
0x245 MISSING 0xd9
0x246 COINBASE
0x247 MISSING 0xfb
0x248 MISSING 0x5d
0x249 MISSING 0x21
0x24a MISSING 0xec
0x24b PUSH12 0x1e19d2c0024f9d76e33e24e8
0x258 MISSING 0xbf
0x259 POP
0x25a SWAP14
0x25b INVALID
0x25c GASPRICE
0x25d MISSING 0xa6
0x25e SWAP16
0x25f ADDMOD
0x260 SWAP8
0x261 STOP
0x262 MISSING 0x29
---
0x237: STOP 
0x238: LOG S0 S1 S2
0x239: V209 = 0x627a7a723058
0x240: V210 = SHA3 0x627a7a723058 S3
0x241: V211 = BYTE V210 S4
0x242: MISSING 0xe2
0x243: V212 = EXTCODEHASH S0
0x244: V213 = DIV V212 S1
0x245: MISSING 0xd9
0x246: V214 = COINBASE
0x247: MISSING 0xfb
0x248: MISSING 0x5d
0x249: MISSING 0x21
0x24a: MISSING 0xec
0x24b: V215 = 0x1e19d2c0024f9d76e33e24e8
0x258: MISSING 0xbf
0x25b: INVALID 
0x25c: V216 = GASPRICE
0x25d: MISSING 0xa6
0x25f: V217 = ADDMOD S16 S1 S2
0x261: STOP 
0x262: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V211, V213, V214, 0x1e19d2c0024f9d76e33e24e8, S15, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S1, V216, S10, S3, S4, S5, S6, S7, S8, S9, V217, S11, S12, S13, S14, S15, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x17c51080
Entry block: 0x71
Exit block: 0x84
Body: 0x71, 0x78, 0x7c, 0x84, 0xdc

Function 1:
Public function signature: 0x52774565
Entry block: 0x96
Exit block: 0x84
Body: 0x84, 0x96, 0x9d, 0xa1, 0xfb

Function 2:
Public function signature: 0xbbe4fd50
Entry block: 0xa9
Exit block: 0x84
Body: 0x84, 0xa9, 0xb0, 0xb4, 0x117

Function 3:
Public function signature: 0xc2052403
Entry block: 0xbc
Exit block: 0xc3
Body: 0xbc, 0xc3, 0xc7, 0xcf

Function 4:
Public function signature: 0xdf78c1dd
Entry block: 0xd1
Exit block: 0xcf
Body: 0xcf, 0xd1, 0x1b9, 0x1c2, 0x1e2, 0x20e, 0x233

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0x6c
Body: 0x6c

Function 6:
Private function
Entry block: 0x11b
Exit block: 0x1b7
Body: 0x11b, 0x13d, 0x15d, 0x163, 0x1b7

