Block 0x0
[0x0:0x9]
---
Predecessors: []
Successors: [0xa, 0x27]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH1 0x27
0x9 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x27
0x9: JUMPI 0x27 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa
[0xa:0x1c]
---
Predecessors: [0x0]
Successors: [0x1d, 0x50]
---
0xa PUSH1 0xe0
0xc PUSH1 0x2
0xe EXP
0xf PUSH1 0x0
0x11 CALLDATALOAD
0x12 DIV
0x13 PUSH4 0xcde4efa9
0x18 DUP2
0x19 EQ
0x1a PUSH1 0x50
0x1c JUMPI
---
0xa: V5 = 0xe0
0xc: V6 = 0x2
0xe: V7 = EXP 0x2 0xe0
0xf: V8 = 0x0
0x11: V9 = CALLDATALOAD 0x0
0x12: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x13: V11 = 0xcde4efa9
0x19: V12 = EQ V10 0xcde4efa9
0x1a: V13 = 0x50
0x1c: JUMPI 0x50 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1d
[0x1d:0x26]
---
Predecessors: [0xa]
Successors: [0x27, 0x5b]
---
0x1d DUP1
0x1e PUSH4 0xed88c68e
0x23 EQ
0x24 PUSH1 0x5b
0x26 JUMPI
---
0x1e: V14 = 0xed88c68e
0x23: V15 = EQ 0xed88c68e V10
0x24: V16 = 0x5b
0x26: JUMPI 0x5b V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x27
[0x27:0x4c]
---
Predecessors: [0x0, 0x1d]
Successors: [0x4d, 0x5d]
---
0x27 JUMPDEST
0x28 PUSH1 0x5b
0x2a CALLVALUE
0x2b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40 ADDRESS
0x41 AND
0x42 BALANCE
0x43 PUSH1 0x2
0x45 DUP2
0x46 MUL
0x47 DUP3
0x48 LT
0x49 ISZERO
0x4a PUSH1 0x5d
0x4c JUMPI
---
0x27: JUMPDEST 
0x28: V17 = 0x5b
0x2a: V18 = CALLVALUE
0x2b: V19 = 0xffffffffffffffffffffffffffffffffffffffff
0x40: V20 = ADDRESS
0x41: V21 = AND V20 0xffffffffffffffffffffffffffffffffffffffff
0x42: V22 = BALANCE V21
0x43: V23 = 0x2
0x46: V24 = MUL V22 0x2
0x48: V25 = LT V18 V24
0x49: V26 = ISZERO V25
0x4a: V27 = 0x5d
0x4c: JUMPI 0x5d V26
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5b, V18, V22]
Exit stack: [V10, 0x5b, V18, V22]

================================

Block 0x4d
[0x4d:0x4f]
---
Predecessors: [0x27]
Successors: [0xa6]
---
0x4d PUSH1 0xa6
0x4f JUMP
---
0x4d: V28 = 0xa6
0x4f: JUMP 0xa6
---
Entry stack: [V10, 0x5b, V18, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V18, V22]

================================

Block 0x50
[0x50:0x5a]
---
Predecessors: [0xa]
Successors: [0xaa]
---
0x50 JUMPDEST
0x51 PUSH1 0xaa
0x53 PUSH1 0x0
0x55 SLOAD
0x56 PUSH1 0xff
0x58 AND
0x59 DUP2
0x5a JUMP
---
0x50: JUMPDEST 
0x51: V29 = 0xaa
0x53: V30 = 0x0
0x55: V31 = S[0x0]
0x56: V32 = 0xff
0x58: V33 = AND 0xff V31
0x5a: JUMP 0xaa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xaa, V33]
Exit stack: [V10, 0xaa, V33]

================================

Block 0x5b
[0x5b:0x5c]
---
Predecessors: [0x1d, 0xa6]
Successors: []
---
0x5b JUMPDEST
0x5c STOP
---
0x5b: JUMPDEST 
0x5c: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5d
[0x5d:0x75]
---
Predecessors: [0x27]
Successors: [0x76, 0x79]
---
0x5d JUMPDEST
0x5e PUSH1 0x0
0x60 DUP1
0x61 SLOAD
0x62 PUSH1 0xff
0x64 NOT
0x65 AND
0x66 PUSH1 0x2
0x68 TIMESTAMP
0x69 MOD
0x6a OR
0x6b DUP1
0x6c DUP3
0x6d SSTORE
0x6e PUSH1 0xff
0x70 AND
0x71 EQ
0x72 ISZERO
0x73 PUSH1 0x79
0x75 JUMPI
---
0x5d: JUMPDEST 
0x5e: V34 = 0x0
0x61: V35 = S[0x0]
0x62: V36 = 0xff
0x64: V37 = NOT 0xff
0x65: V38 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V35
0x66: V39 = 0x2
0x68: V40 = TIMESTAMP
0x69: V41 = MOD V40 0x2
0x6a: V42 = OR V41 V38
0x6d: S[0x0] = V42
0x6e: V43 = 0xff
0x70: V44 = AND 0xff V42
0x71: V45 = EQ V44 0x0
0x72: V46 = ISZERO V45
0x73: V47 = 0x79
0x75: JUMPI 0x79 V46
---
Entry stack: [V10, 0x5b, V18, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V18, V22]

================================

Block 0x76
[0x76:0x78]
---
Predecessors: [0x5d]
Successors: [0xa6]
---
0x76 PUSH1 0xa6
0x78 JUMP
---
0x76: V48 = 0xa6
0x78: JUMP 0xa6
---
Entry stack: [V10, 0x5b, V18, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V18, V22]

================================

Block 0x79
[0x79:0xa5]
---
Predecessors: [0x5d]
Successors: [0xa6]
---
0x79 JUMPDEST
0x7a CALLER
0x7b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90 AND
0x91 PUSH1 0x0
0x93 PUSH1 0x2
0x95 DUP5
0x96 MUL
0x97 PUSH1 0x60
0x99 DUP3
0x9a DUP2
0x9b DUP2
0x9c DUP2
0x9d DUP6
0x9e DUP9
0x9f DUP4
0xa0 CALL
0xa1 POP
0xa2 POP
0xa3 POP
0xa4 POP
0xa5 POP
---
0x79: JUMPDEST 
0x7a: V49 = CALLER
0x7b: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0x90: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x91: V52 = 0x0
0x93: V53 = 0x2
0x96: V54 = MUL V18 0x2
0x97: V55 = 0x60
0xa0: V56 = CALL 0x0 V51 V54 0x60 0x0 0x60 0x0
---
Entry stack: [V10, 0x5b, V18, V22]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x5b, V18, V22]

================================

Block 0xa6
[0xa6:0xa9]
---
Predecessors: [0x4d, 0x76, 0x79]
Successors: [0x5b]
---
0xa6 JUMPDEST
0xa7 POP
0xa8 POP
0xa9 JUMP
---
0xa6: JUMPDEST 
0xa9: JUMP 0x5b
---
Entry stack: [V10, 0x5b, V18, V22]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0xaa
[0xaa:0xb3]
---
Predecessors: [0x50]
Successors: []
---
0xaa JUMPDEST
0xab PUSH1 0x60
0xad SWAP1
0xae DUP2
0xaf MSTORE
0xb0 PUSH1 0x20
0xb2 SWAP1
0xb3 RETURN
---
0xaa: JUMPDEST 
0xab: V57 = 0x60
0xaf: M[0x60] = V33
0xb0: V58 = 0x20
0xb3: RETURN 0x60 0x20
---
Entry stack: [V10, 0xaa, V33]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xaa]

================================

Function 0:
Public function signature: 0xcde4efa9
Entry block: 0x50
Exit block: 0xaa
Body: 0x50, 0xaa

Function 1:
Public function signature: 0xed88c68e
Entry block: 0x5b
Exit block: 0x5b
Body: 0x5b

Function 2:
Public fallback function
Entry block: 0x27
Exit block: 0x5b
Body: 0x27, 0x4d, 0x5b, 0x5d, 0x76, 0x79, 0xa6

