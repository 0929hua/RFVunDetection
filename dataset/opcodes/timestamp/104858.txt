args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/5/104858.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x98]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x98
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x98
0xc: JUMPI 0x98 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x241]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1cb3b20
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x241
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1cb3b20
0x3b: V13 = EQ V11 0x1cb3b20
0x3c: V14 = 0x241
0x3f: JUMPI 0x241 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x256]
---
0x40 DUP1
0x41 PUSH4 0x29dcb0cf
0x46 EQ
0x47 PUSH2 0x256
0x4a JUMPI
---
0x41: V15 = 0x29dcb0cf
0x46: V16 = EQ 0x29dcb0cf V11
0x47: V17 = 0x256
0x4a: JUMPI 0x256 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x27b]
---
0x4b DUP1
0x4c PUSH4 0x339689c9
0x51 EQ
0x52 PUSH2 0x27b
0x55 JUMPI
---
0x4c: V18 = 0x339689c9
0x51: V19 = EQ 0x339689c9 V11
0x52: V20 = 0x27b
0x55: JUMPI 0x27b V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x28e]
---
0x56 DUP1
0x57 PUSH4 0x521eb273
0x5c EQ
0x5d PUSH2 0x28e
0x60 JUMPI
---
0x57: V21 = 0x521eb273
0x5c: V22 = EQ 0x521eb273 V11
0x5d: V23 = 0x28e
0x60: JUMPI 0x28e V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x2c0]
---
0x61 DUP1
0x62 PUSH4 0x5a170a3c
0x67 EQ
0x68 PUSH2 0x2c0
0x6b JUMPI
---
0x62: V24 = 0x5a170a3c
0x67: V25 = EQ 0x5a170a3c V11
0x68: V26 = 0x2c0
0x6b: JUMPI 0x2c0 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x2d3]
---
0x6c DUP1
0x6d PUSH4 0x6e66f6e9
0x72 EQ
0x73 PUSH2 0x2d3
0x76 JUMPI
---
0x6d: V27 = 0x6e66f6e9
0x72: V28 = EQ 0x6e66f6e9 V11
0x73: V29 = 0x2d3
0x76: JUMPI 0x2d3 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x2e6]
---
0x77 DUP1
0x78 PUSH4 0x70a08231
0x7d EQ
0x7e PUSH2 0x2e6
0x81 JUMPI
---
0x78: V30 = 0x70a08231
0x7d: V31 = EQ 0x70a08231 V11
0x7e: V32 = 0x2e6
0x81: JUMPI 0x2e6 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x305]
---
0x82 DUP1
0x83 PUSH4 0xa035b1fe
0x88 EQ
0x89 PUSH2 0x305
0x8c JUMPI
---
0x83: V33 = 0xa035b1fe
0x88: V34 = EQ 0xa035b1fe V11
0x89: V35 = 0x305
0x8c: JUMPI 0x305 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x318]
---
0x8d DUP1
0x8e PUSH4 0xfd6b7ef8
0x93 EQ
0x94 PUSH2 0x318
0x97 JUMPI
---
0x8e: V36 = 0xfd6b7ef8
0x93: V37 = EQ 0xfd6b7ef8 V11
0x94: V38 = 0x318
0x97: JUMPI 0x318 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xb1]
---
Predecessors: [0x0, 0x8d]
Successors: [0xb2, 0xb6]
---
0x98 JUMPDEST
0x99 PUSH1 0x0
0x9b PUSH1 0x7
0x9d PUSH1 0x1
0x9f SWAP1
0xa0 SLOAD
0xa1 SWAP1
0xa2 PUSH2 0x100
0xa5 EXP
0xa6 SWAP1
0xa7 DIV
0xa8 PUSH1 0xff
0xaa AND
0xab ISZERO
0xac ISZERO
0xad ISZERO
0xae PUSH2 0xb6
0xb1 JUMPI
---
0x98: JUMPDEST 
0x99: V39 = 0x0
0x9b: V40 = 0x7
0x9d: V41 = 0x1
0xa0: V42 = S[0x7]
0xa2: V43 = 0x100
0xa5: V44 = EXP 0x100 0x1
0xa7: V45 = DIV V42 0x100
0xa8: V46 = 0xff
0xaa: V47 = AND 0xff V45
0xab: V48 = ISZERO V47
0xac: V49 = ISZERO V48
0xad: V50 = ISZERO V49
0xae: V51 = 0xb6
0xb1: JUMPI 0xb6 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0xb2
[0xb2:0xb5]
---
Predecessors: [0x98]
Successors: []
---
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 REVERT
---
0xb2: V52 = 0x0
0xb5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xb6
[0xb6:0xfa]
---
Predecessors: [0x98]
Successors: [0x32b]
---
0xb6 JUMPDEST
0xb7 CALLVALUE
0xb8 PUSH8 0xde0b6b3a7640000
0xc1 MUL
0xc2 SWAP1
0xc3 POP
0xc4 PUSH2 0xfb
0xc7 DUP2
0xc8 PUSH1 0x6
0xca PUSH1 0x0
0xcc CALLER
0xcd PUSH1 0x1
0xcf PUSH1 0xa0
0xd1 PUSH1 0x2
0xd3 EXP
0xd4 SUB
0xd5 AND
0xd6 PUSH1 0x1
0xd8 PUSH1 0xa0
0xda PUSH1 0x2
0xdc EXP
0xdd SUB
0xde AND
0xdf DUP2
0xe0 MSTORE
0xe1 PUSH1 0x20
0xe3 ADD
0xe4 SWAP1
0xe5 DUP2
0xe6 MSTORE
0xe7 PUSH1 0x20
0xe9 ADD
0xea PUSH1 0x0
0xec SHA3
0xed SLOAD
0xee PUSH2 0x32b
0xf1 SWAP1
0xf2 SWAP2
0xf3 SWAP1
0xf4 PUSH4 0xffffffff
0xf9 AND
0xfa JUMP
---
0xb6: JUMPDEST 
0xb7: V53 = CALLVALUE
0xb8: V54 = 0xde0b6b3a7640000
0xc1: V55 = MUL 0xde0b6b3a7640000 V53
0xc4: V56 = 0xfb
0xc8: V57 = 0x6
0xca: V58 = 0x0
0xcc: V59 = CALLER
0xcd: V60 = 0x1
0xcf: V61 = 0xa0
0xd1: V62 = 0x2
0xd3: V63 = EXP 0x2 0xa0
0xd4: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd5: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xd6: V66 = 0x1
0xd8: V67 = 0xa0
0xda: V68 = 0x2
0xdc: V69 = EXP 0x2 0xa0
0xdd: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0xe0: M[0x0] = V71
0xe1: V72 = 0x20
0xe3: V73 = ADD 0x20 0x0
0xe6: M[0x20] = 0x6
0xe7: V74 = 0x20
0xe9: V75 = ADD 0x20 0x20
0xea: V76 = 0x0
0xec: V77 = SHA3 0x0 0x40
0xed: V78 = S[V77]
0xee: V79 = 0x32b
0xf4: V80 = 0xffffffff
0xf9: V81 = AND 0xffffffff 0x32b
0xfa: JUMP 0x32b
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V55, 0xfb, V78, V55]
Exit stack: [V11, V55, 0xfb, V78, V55]

================================

Block 0xfb
[0xfb:0x12c]
---
Predecessors: [0x33c]
Successors: [0x32b]
---
0xfb JUMPDEST
0xfc PUSH1 0x1
0xfe PUSH1 0xa0
0x100 PUSH1 0x2
0x102 EXP
0x103 SUB
0x104 CALLER
0x105 DUP2
0x106 AND
0x107 AND
0x108 PUSH1 0x0
0x10a SWAP1
0x10b DUP2
0x10c MSTORE
0x10d PUSH1 0x6
0x10f PUSH1 0x20
0x111 DUP1
0x112 DUP4
0x113 ADD
0x114 SWAP2
0x115 DUP3
0x116 MSTORE
0x117 ADD
0x118 SWAP1
0x119 SHA3
0x11a SSTORE
0x11b PUSH1 0x2
0x11d SLOAD
0x11e PUSH2 0x12d
0x121 SWAP1
0x122 DUP3
0x123 PUSH4 0xffffffff
0x128 PUSH2 0x32b
0x12b AND
0x12c JUMP
---
0xfb: JUMPDEST 
0xfc: V82 = 0x1
0xfe: V83 = 0xa0
0x100: V84 = 0x2
0x102: V85 = EXP 0x2 0xa0
0x103: V86 = SUB 0x10000000000000000000000000000000000000000 0x1
0x104: V87 = CALLER
0x106: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x107: V89 = AND V88 0xffffffffffffffffffffffffffffffffffffffff
0x108: V90 = 0x0
0x10c: M[0x0] = V89
0x10d: V91 = 0x6
0x10f: V92 = 0x20
0x113: V93 = ADD 0x0 0x20
0x116: M[0x20] = 0x6
0x117: V94 = ADD 0x20 0x20
0x119: V95 = SHA3 0x0 0x40
0x11a: S[V95] = S0
0x11b: V96 = 0x2
0x11d: V97 = S[0x2]
0x11e: V98 = 0x12d
0x123: V99 = 0xffffffff
0x128: V100 = 0x32b
0x12b: V101 = AND 0x32b 0xffffffff
0x12c: JUMP 0x32b
---
Entry stack: [V11, V55, S0]
Stack pops: 2
Stack additions: [S1, 0x12d, V97, S1]
Exit stack: [V11, V55, 0x12d, V97, V55]

================================

Block 0x12d
[0x12d:0x16c]
---
Predecessors: [0x33c]
Successors: [0x343]
---
0x12d JUMPDEST
0x12e PUSH1 0x2
0x130 DUP2
0x131 SWAP1
0x132 SSTORE
0x133 POP
0x134 PUSH1 0x5
0x136 PUSH1 0x0
0x138 SWAP1
0x139 SLOAD
0x13a SWAP1
0x13b PUSH2 0x100
0x13e EXP
0x13f SWAP1
0x140 DIV
0x141 PUSH1 0x1
0x143 PUSH1 0xa0
0x145 PUSH1 0x2
0x147 EXP
0x148 SUB
0x149 AND
0x14a PUSH1 0x1
0x14c PUSH1 0xa0
0x14e PUSH1 0x2
0x150 EXP
0x151 SUB
0x152 AND
0x153 PUSH4 0xa9059cbb
0x158 CALLER
0x159 PUSH2 0x16d
0x15c PUSH1 0x4
0x15e SLOAD
0x15f DUP6
0x160 PUSH2 0x343
0x163 SWAP1
0x164 SWAP2
0x165 SWAP1
0x166 PUSH4 0xffffffff
0x16b AND
0x16c JUMP
---
0x12d: JUMPDEST 
0x12e: V102 = 0x2
0x132: S[0x2] = S0
0x134: V103 = 0x5
0x136: V104 = 0x0
0x139: V105 = S[0x5]
0x13b: V106 = 0x100
0x13e: V107 = EXP 0x100 0x0
0x140: V108 = DIV V105 0x1
0x141: V109 = 0x1
0x143: V110 = 0xa0
0x145: V111 = 0x2
0x147: V112 = EXP 0x2 0xa0
0x148: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x149: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x14a: V115 = 0x1
0x14c: V116 = 0xa0
0x14e: V117 = 0x2
0x150: V118 = EXP 0x2 0xa0
0x151: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x152: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x153: V121 = 0xa9059cbb
0x158: V122 = CALLER
0x159: V123 = 0x16d
0x15c: V124 = 0x4
0x15e: V125 = S[0x4]
0x160: V126 = 0x343
0x166: V127 = 0xffffffff
0x16b: V128 = AND 0xffffffff 0x343
0x16c: JUMP 0x343
---
Entry stack: [V11, V55, S0]
Stack pops: 2
Stack additions: [S1, V120, 0xa9059cbb, V122, 0x16d, S1, V125]
Exit stack: [V11, V55, V120, 0xa9059cbb, V122, 0x16d, V55, V125]

================================

Block 0x16d
[0x16d:0x1d2]
---
Predecessors: [0x351]
Successors: [0x1d3, 0x1d7]
---
0x16d JUMPDEST
0x16e PUSH1 0x40
0x170 MLOAD
0x171 DUP4
0x172 PUSH4 0xffffffff
0x177 AND
0x178 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x196 MUL
0x197 DUP2
0x198 MSTORE
0x199 PUSH1 0x4
0x19b ADD
0x19c DUP1
0x19d DUP4
0x19e PUSH1 0x1
0x1a0 PUSH1 0xa0
0x1a2 PUSH1 0x2
0x1a4 EXP
0x1a5 SUB
0x1a6 AND
0x1a7 PUSH1 0x1
0x1a9 PUSH1 0xa0
0x1ab PUSH1 0x2
0x1ad EXP
0x1ae SUB
0x1af AND
0x1b0 DUP2
0x1b1 MSTORE
0x1b2 PUSH1 0x20
0x1b4 ADD
0x1b5 DUP3
0x1b6 DUP2
0x1b7 MSTORE
0x1b8 PUSH1 0x20
0x1ba ADD
0x1bb SWAP3
0x1bc POP
0x1bd POP
0x1be POP
0x1bf PUSH1 0x0
0x1c1 PUSH1 0x40
0x1c3 MLOAD
0x1c4 DUP1
0x1c5 DUP4
0x1c6 SUB
0x1c7 DUP2
0x1c8 PUSH1 0x0
0x1ca DUP8
0x1cb DUP1
0x1cc EXTCODESIZE
0x1cd ISZERO
0x1ce ISZERO
0x1cf PUSH2 0x1d7
0x1d2 JUMPI
---
0x16d: JUMPDEST 
0x16e: V129 = 0x40
0x170: V130 = M[0x40]
0x172: V131 = 0xffffffff
0x177: V132 = AND 0xffffffff 0xa9059cbb
0x178: V133 = 0x100000000000000000000000000000000000000000000000000000000
0x196: V134 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x198: M[V130] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x199: V135 = 0x4
0x19b: V136 = ADD 0x4 V130
0x19e: V137 = 0x1
0x1a0: V138 = 0xa0
0x1a2: V139 = 0x2
0x1a4: V140 = EXP 0x2 0xa0
0x1a5: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a6: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x1a7: V143 = 0x1
0x1a9: V144 = 0xa0
0x1ab: V145 = 0x2
0x1ad: V146 = EXP 0x2 0xa0
0x1ae: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1af: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x1b1: M[V136] = V148
0x1b2: V149 = 0x20
0x1b4: V150 = ADD 0x20 V136
0x1b7: M[V150] = V288
0x1b8: V151 = 0x20
0x1ba: V152 = ADD 0x20 V150
0x1bf: V153 = 0x0
0x1c1: V154 = 0x40
0x1c3: V155 = M[0x40]
0x1c6: V156 = SUB V152 V155
0x1c8: V157 = 0x0
0x1cc: V158 = EXTCODESIZE V120
0x1cd: V159 = ISZERO V158
0x1ce: V160 = ISZERO V159
0x1cf: V161 = 0x1d7
0x1d2: JUMPI 0x1d7 V160
---
Entry stack: [V11, V55, V120, 0xa9059cbb, V122, V288]
Stack pops: 4
Stack additions: [S3, S2, V152, 0x0, V155, V156, V155, 0x0, S3]
Exit stack: [V11, V55, V120, 0xa9059cbb, V152, 0x0, V155, V156, V155, 0x0, V120]

================================

Block 0x1d3
[0x1d3:0x1d6]
---
Predecessors: [0x16d]
Successors: []
---
0x1d3 PUSH1 0x0
0x1d5 DUP1
0x1d6 REVERT
---
0x1d3: V162 = 0x0
0x1d6: REVERT 0x0 0x0
---
Entry stack: [V11, V55, V120, 0xa9059cbb, V152, 0x0, V155, V156, V155, 0x0, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V55, V120, 0xa9059cbb, V152, 0x0, V155, V156, V155, 0x0, V120]

================================

Block 0x1d7
[0x1d7:0x1e3]
---
Predecessors: [0x16d]
Successors: [0x1e4, 0x1e8]
---
0x1d7 JUMPDEST
0x1d8 PUSH2 0x2c6
0x1db GAS
0x1dc SUB
0x1dd CALL
0x1de ISZERO
0x1df ISZERO
0x1e0 PUSH2 0x1e8
0x1e3 JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V163 = 0x2c6
0x1db: V164 = GAS
0x1dc: V165 = SUB V164 0x2c6
0x1dd: V166 = CALL V165 V120 0x0 V155 V156 V155 0x0
0x1de: V167 = ISZERO V166
0x1df: V168 = ISZERO V167
0x1e0: V169 = 0x1e8
0x1e3: JUMPI 0x1e8 V168
---
Entry stack: [V11, V55, V120, 0xa9059cbb, V152, 0x0, V155, V156, V155, 0x0, V120]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V55, V120, 0xa9059cbb, V152]

================================

Block 0x1e4
[0x1e4:0x1e7]
---
Predecessors: [0x1d7]
Successors: []
---
0x1e4 PUSH1 0x0
0x1e6 DUP1
0x1e7 REVERT
---
0x1e4: V170 = 0x0
0x1e7: REVERT 0x0 0x0
---
Entry stack: [V11, V55, V120, 0xa9059cbb, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V55, V120, 0xa9059cbb, V152]

================================

Block 0x1e8
[0x1e8:0x240]
---
Predecessors: [0x1d7]
Successors: []
---
0x1e8 JUMPDEST
0x1e9 POP
0x1ea POP
0x1eb POP
0x1ec PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x20d CALLER
0x20e DUP3
0x20f PUSH1 0x1
0x211 PUSH1 0x40
0x213 MLOAD
0x214 PUSH1 0x1
0x216 PUSH1 0xa0
0x218 PUSH1 0x2
0x21a EXP
0x21b SUB
0x21c SWAP4
0x21d DUP5
0x21e AND
0x21f SWAP1
0x220 SWAP4
0x221 AND
0x222 DUP4
0x223 MSTORE
0x224 PUSH1 0x20
0x226 SWAP3
0x227 DUP4
0x228 ADD
0x229 SWAP2
0x22a DUP3
0x22b MSTORE
0x22c ISZERO
0x22d ISZERO
0x22e ISZERO
0x22f ISZERO
0x230 SWAP1
0x231 DUP3
0x232 ADD
0x233 SWAP1
0x234 DUP2
0x235 MSTORE
0x236 ADD
0x237 PUSH1 0x40
0x239 MLOAD
0x23a DUP1
0x23b SWAP2
0x23c SUB
0x23d SWAP1
0x23e LOG1
0x23f POP
0x240 STOP
---
0x1e8: JUMPDEST 
0x1ec: V171 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x20d: V172 = CALLER
0x20f: V173 = 0x1
0x211: V174 = 0x40
0x213: V175 = M[0x40]
0x214: V176 = 0x1
0x216: V177 = 0xa0
0x218: V178 = 0x2
0x21a: V179 = EXP 0x2 0xa0
0x21b: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21e: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x221: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x223: M[V175] = V182
0x224: V183 = 0x20
0x228: V184 = ADD 0x20 V175
0x22b: M[V184] = V55
0x22c: V185 = ISZERO 0x1
0x22d: V186 = ISZERO 0x0
0x22e: V187 = ISZERO 0x1
0x22f: V188 = ISZERO 0x0
0x232: V189 = ADD 0x20 V184
0x235: M[V189] = 0x1
0x236: V190 = ADD V189 0x20
0x237: V191 = 0x40
0x239: V192 = M[0x40]
0x23c: V193 = SUB V190 V192
0x23e: LOG V192 V193 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x240: STOP 
---
Entry stack: [V11, V55, V120, 0xa9059cbb, V152]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x241
[0x241:0x247]
---
Predecessors: [0xd]
Successors: [0x248, 0x24c]
---
0x241 JUMPDEST
0x242 CALLVALUE
0x243 ISZERO
0x244 PUSH2 0x24c
0x247 JUMPI
---
0x241: JUMPDEST 
0x242: V194 = CALLVALUE
0x243: V195 = ISZERO V194
0x244: V196 = 0x24c
0x247: JUMPI 0x24c V195
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x248
[0x248:0x24b]
---
Predecessors: [0x241]
Successors: []
---
0x248 PUSH1 0x0
0x24a DUP1
0x24b REVERT
---
0x248: V197 = 0x0
0x24b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x24c
[0x24c:0x253]
---
Predecessors: [0x241]
Successors: [0x35a]
---
0x24c JUMPDEST
0x24d PUSH2 0x254
0x250 PUSH2 0x35a
0x253 JUMP
---
0x24c: JUMPDEST 
0x24d: V198 = 0x254
0x250: V199 = 0x35a
0x253: JUMP 0x35a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x254]
Exit stack: [V11, 0x254]

================================

Block 0x254
[0x254:0x255]
---
Predecessors: [0x407, 0x674]
Successors: []
---
0x254 JUMPDEST
0x255 STOP
---
0x254: JUMPDEST 
0x255: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x256
[0x256:0x25c]
---
Predecessors: [0x40]
Successors: [0x25d, 0x261]
---
0x256 JUMPDEST
0x257 CALLVALUE
0x258 ISZERO
0x259 PUSH2 0x261
0x25c JUMPI
---
0x256: JUMPDEST 
0x257: V200 = CALLVALUE
0x258: V201 = ISZERO V200
0x259: V202 = 0x261
0x25c: JUMPI 0x261 V201
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x25d
[0x25d:0x260]
---
Predecessors: [0x256]
Successors: []
---
0x25d PUSH1 0x0
0x25f DUP1
0x260 REVERT
---
0x25d: V203 = 0x0
0x260: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x261
[0x261:0x268]
---
Predecessors: [0x256]
Successors: [0x409]
---
0x261 JUMPDEST
0x262 PUSH2 0x269
0x265 PUSH2 0x409
0x268 JUMP
---
0x261: JUMPDEST 
0x262: V204 = 0x269
0x265: V205 = 0x409
0x268: JUMP 0x409
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x269]
Exit stack: [V11, 0x269]

================================

Block 0x269
[0x269:0x27a]
---
Predecessors: [0x409, 0x40f, 0x42d, 0x44a, 0x45c]
Successors: []
---
0x269 JUMPDEST
0x26a PUSH1 0x40
0x26c MLOAD
0x26d SWAP1
0x26e DUP2
0x26f MSTORE
0x270 PUSH1 0x20
0x272 ADD
0x273 PUSH1 0x40
0x275 MLOAD
0x276 DUP1
0x277 SWAP2
0x278 SUB
0x279 SWAP1
0x27a RETURN
---
0x269: JUMPDEST 
0x26a: V206 = 0x40
0x26c: V207 = M[0x40]
0x26f: M[V207] = S0
0x270: V208 = 0x20
0x272: V209 = ADD 0x20 V207
0x273: V210 = 0x40
0x275: V211 = M[0x40]
0x278: V212 = SUB V209 V211
0x27a: RETURN V211 V212
---
Entry stack: [V11, 0x269, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x269]

================================

Block 0x27b
[0x27b:0x281]
---
Predecessors: [0x4b]
Successors: [0x282, 0x286]
---
0x27b JUMPDEST
0x27c CALLVALUE
0x27d ISZERO
0x27e PUSH2 0x286
0x281 JUMPI
---
0x27b: JUMPDEST 
0x27c: V213 = CALLVALUE
0x27d: V214 = ISZERO V213
0x27e: V215 = 0x286
0x281: JUMPI 0x286 V214
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x282
[0x282:0x285]
---
Predecessors: [0x27b]
Successors: []
---
0x282 PUSH1 0x0
0x284 DUP1
0x285 REVERT
---
0x282: V216 = 0x0
0x285: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x286
[0x286:0x28d]
---
Predecessors: [0x27b]
Successors: [0x40f]
---
0x286 JUMPDEST
0x287 PUSH2 0x269
0x28a PUSH2 0x40f
0x28d JUMP
---
0x286: JUMPDEST 
0x287: V217 = 0x269
0x28a: V218 = 0x40f
0x28d: JUMP 0x40f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x269]
Exit stack: [V11, 0x269]

================================

Block 0x28e
[0x28e:0x294]
---
Predecessors: [0x56]
Successors: [0x295, 0x299]
---
0x28e JUMPDEST
0x28f CALLVALUE
0x290 ISZERO
0x291 PUSH2 0x299
0x294 JUMPI
---
0x28e: JUMPDEST 
0x28f: V219 = CALLVALUE
0x290: V220 = ISZERO V219
0x291: V221 = 0x299
0x294: JUMPI 0x299 V220
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x295
[0x295:0x298]
---
Predecessors: [0x28e]
Successors: []
---
0x295 PUSH1 0x0
0x297 DUP1
0x298 REVERT
---
0x295: V222 = 0x0
0x298: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x299
[0x299:0x2a0]
---
Predecessors: [0x28e]
Successors: [0x415]
---
0x299 JUMPDEST
0x29a PUSH2 0x2a1
0x29d PUSH2 0x415
0x2a0 JUMP
---
0x299: JUMPDEST 
0x29a: V223 = 0x2a1
0x29d: V224 = 0x415
0x2a0: JUMP 0x415
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2a1]
Exit stack: [V11, 0x2a1]

================================

Block 0x2a1
[0x2a1:0x2bf]
---
Predecessors: [0x415, 0x433]
Successors: []
---
0x2a1 JUMPDEST
0x2a2 PUSH1 0x40
0x2a4 MLOAD
0x2a5 PUSH1 0x1
0x2a7 PUSH1 0xa0
0x2a9 PUSH1 0x2
0x2ab EXP
0x2ac SUB
0x2ad SWAP2
0x2ae DUP3
0x2af AND
0x2b0 SWAP1
0x2b1 SWAP2
0x2b2 AND
0x2b3 DUP2
0x2b4 MSTORE
0x2b5 PUSH1 0x20
0x2b7 ADD
0x2b8 PUSH1 0x40
0x2ba MLOAD
0x2bb DUP1
0x2bc SWAP2
0x2bd SUB
0x2be SWAP1
0x2bf RETURN
---
0x2a1: JUMPDEST 
0x2a2: V225 = 0x40
0x2a4: V226 = M[0x40]
0x2a5: V227 = 0x1
0x2a7: V228 = 0xa0
0x2a9: V229 = 0x2
0x2ab: V230 = EXP 0x2 0xa0
0x2ac: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2af: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x2b2: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x2b4: M[V226] = V233
0x2b5: V234 = 0x20
0x2b7: V235 = ADD 0x20 V226
0x2b8: V236 = 0x40
0x2ba: V237 = M[0x40]
0x2bd: V238 = SUB V235 V237
0x2bf: RETURN V237 V238
---
Entry stack: [V11, 0x2a1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2a1]

================================

Block 0x2c0
[0x2c0:0x2c6]
---
Predecessors: [0x61]
Successors: [0x2c7, 0x2cb]
---
0x2c0 JUMPDEST
0x2c1 CALLVALUE
0x2c2 ISZERO
0x2c3 PUSH2 0x2cb
0x2c6 JUMPI
---
0x2c0: JUMPDEST 
0x2c1: V239 = CALLVALUE
0x2c2: V240 = ISZERO V239
0x2c3: V241 = 0x2cb
0x2c6: JUMPI 0x2cb V240
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c7
[0x2c7:0x2ca]
---
Predecessors: [0x2c0]
Successors: []
---
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca REVERT
---
0x2c7: V242 = 0x0
0x2ca: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2cb
[0x2cb:0x2d2]
---
Predecessors: [0x2c0]
Successors: [0x42d]
---
0x2cb JUMPDEST
0x2cc PUSH2 0x269
0x2cf PUSH2 0x42d
0x2d2 JUMP
---
0x2cb: JUMPDEST 
0x2cc: V243 = 0x269
0x2cf: V244 = 0x42d
0x2d2: JUMP 0x42d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x269]
Exit stack: [V11, 0x269]

================================

Block 0x2d3
[0x2d3:0x2d9]
---
Predecessors: [0x6c]
Successors: [0x2da, 0x2de]
---
0x2d3 JUMPDEST
0x2d4 CALLVALUE
0x2d5 ISZERO
0x2d6 PUSH2 0x2de
0x2d9 JUMPI
---
0x2d3: JUMPDEST 
0x2d4: V245 = CALLVALUE
0x2d5: V246 = ISZERO V245
0x2d6: V247 = 0x2de
0x2d9: JUMPI 0x2de V246
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2da
[0x2da:0x2dd]
---
Predecessors: [0x2d3]
Successors: []
---
0x2da PUSH1 0x0
0x2dc DUP1
0x2dd REVERT
---
0x2da: V248 = 0x0
0x2dd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2de
[0x2de:0x2e5]
---
Predecessors: [0x2d3]
Successors: [0x433]
---
0x2de JUMPDEST
0x2df PUSH2 0x2a1
0x2e2 PUSH2 0x433
0x2e5 JUMP
---
0x2de: JUMPDEST 
0x2df: V249 = 0x2a1
0x2e2: V250 = 0x433
0x2e5: JUMP 0x433
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2a1]
Exit stack: [V11, 0x2a1]

================================

Block 0x2e6
[0x2e6:0x2ec]
---
Predecessors: [0x77]
Successors: [0x2ed, 0x2f1]
---
0x2e6 JUMPDEST
0x2e7 CALLVALUE
0x2e8 ISZERO
0x2e9 PUSH2 0x2f1
0x2ec JUMPI
---
0x2e6: JUMPDEST 
0x2e7: V251 = CALLVALUE
0x2e8: V252 = ISZERO V251
0x2e9: V253 = 0x2f1
0x2ec: JUMPI 0x2f1 V252
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ed
[0x2ed:0x2f0]
---
Predecessors: [0x2e6]
Successors: []
---
0x2ed PUSH1 0x0
0x2ef DUP1
0x2f0 REVERT
---
0x2ed: V254 = 0x0
0x2f0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f1
[0x2f1:0x304]
---
Predecessors: [0x2e6]
Successors: [0x44a]
---
0x2f1 JUMPDEST
0x2f2 PUSH2 0x269
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0xa0
0x2f9 PUSH1 0x2
0x2fb EXP
0x2fc SUB
0x2fd PUSH1 0x4
0x2ff CALLDATALOAD
0x300 AND
0x301 PUSH2 0x44a
0x304 JUMP
---
0x2f1: JUMPDEST 
0x2f2: V255 = 0x269
0x2f5: V256 = 0x1
0x2f7: V257 = 0xa0
0x2f9: V258 = 0x2
0x2fb: V259 = EXP 0x2 0xa0
0x2fc: V260 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fd: V261 = 0x4
0x2ff: V262 = CALLDATALOAD 0x4
0x300: V263 = AND V262 0xffffffffffffffffffffffffffffffffffffffff
0x301: V264 = 0x44a
0x304: JUMP 0x44a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x269, V263]
Exit stack: [V11, 0x269, V263]

================================

Block 0x305
[0x305:0x30b]
---
Predecessors: [0x82]
Successors: [0x30c, 0x310]
---
0x305 JUMPDEST
0x306 CALLVALUE
0x307 ISZERO
0x308 PUSH2 0x310
0x30b JUMPI
---
0x305: JUMPDEST 
0x306: V265 = CALLVALUE
0x307: V266 = ISZERO V265
0x308: V267 = 0x310
0x30b: JUMPI 0x310 V266
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x30c
[0x30c:0x30f]
---
Predecessors: [0x305]
Successors: []
---
0x30c PUSH1 0x0
0x30e DUP1
0x30f REVERT
---
0x30c: V268 = 0x0
0x30f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x310
[0x310:0x317]
---
Predecessors: [0x305]
Successors: [0x45c]
---
0x310 JUMPDEST
0x311 PUSH2 0x269
0x314 PUSH2 0x45c
0x317 JUMP
---
0x310: JUMPDEST 
0x311: V269 = 0x269
0x314: V270 = 0x45c
0x317: JUMP 0x45c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x269]
Exit stack: [V11, 0x269]

================================

Block 0x318
[0x318:0x31e]
---
Predecessors: [0x8d]
Successors: [0x31f, 0x323]
---
0x318 JUMPDEST
0x319 CALLVALUE
0x31a ISZERO
0x31b PUSH2 0x323
0x31e JUMPI
---
0x318: JUMPDEST 
0x319: V271 = CALLVALUE
0x31a: V272 = ISZERO V271
0x31b: V273 = 0x323
0x31e: JUMPI 0x323 V272
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x31f
[0x31f:0x322]
---
Predecessors: [0x318]
Successors: []
---
0x31f PUSH1 0x0
0x321 DUP1
0x322 REVERT
---
0x31f: V274 = 0x0
0x322: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x323
[0x323:0x32a]
---
Predecessors: [0x318]
Successors: [0x462]
---
0x323 JUMPDEST
0x324 PUSH2 0x254
0x327 PUSH2 0x462
0x32a JUMP
---
0x323: JUMPDEST 
0x324: V275 = 0x254
0x327: V276 = 0x462
0x32a: JUMP 0x462
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x254]
Exit stack: [V11, 0x254]

================================

Block 0x32b
[0x32b:0x33a]
---
Predecessors: [0xb6, 0xfb]
Successors: [0x33b, 0x33c]
---
0x32b JUMPDEST
0x32c PUSH1 0x0
0x32e DUP3
0x32f DUP3
0x330 ADD
0x331 DUP4
0x332 DUP2
0x333 LT
0x334 ISZERO
0x335 ISZERO
0x336 ISZERO
0x337 PUSH2 0x33c
0x33a JUMPI
---
0x32b: JUMPDEST 
0x32c: V277 = 0x0
0x330: V278 = ADD V55 S1
0x333: V279 = LT V278 S1
0x334: V280 = ISZERO V279
0x335: V281 = ISZERO V280
0x336: V282 = ISZERO V281
0x337: V283 = 0x33c
0x33a: JUMPI 0x33c V282
---
Entry stack: [V11, V55, {0xfb, 0x12d}, S1, V55]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V278]
Exit stack: [V11, V55, {0xfb, 0x12d}, S1, V55, 0x0, V278]

================================

Block 0x33b
[0x33b:0x33b]
---
Predecessors: [0x32b]
Successors: []
---
0x33b INVALID
---
0x33b: INVALID 
---
Entry stack: [V11, V55, {0xfb, 0x12d}, S3, V55, 0x0, V278]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V55, {0xfb, 0x12d}, S3, V55, 0x0, V278]

================================

Block 0x33c
[0x33c:0x342]
---
Predecessors: [0x32b]
Successors: [0xfb, 0x12d]
---
0x33c JUMPDEST
0x33d SWAP4
0x33e SWAP3
0x33f POP
0x340 POP
0x341 POP
0x342 JUMP
---
0x33c: JUMPDEST 
0x342: JUMP {0xfb, 0x12d}
---
Entry stack: [V11, V55, {0xfb, 0x12d}, S3, V55, 0x0, V278]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, V55, V278]

================================

Block 0x343
[0x343:0x34f]
---
Predecessors: [0x12d]
Successors: [0x350, 0x351]
---
0x343 JUMPDEST
0x344 PUSH1 0x0
0x346 DUP1
0x347 DUP3
0x348 DUP5
0x349 DUP2
0x34a ISZERO
0x34b ISZERO
0x34c PUSH2 0x351
0x34f JUMPI
---
0x343: JUMPDEST 
0x344: V284 = 0x0
0x34a: V285 = ISZERO V125
0x34b: V286 = ISZERO V285
0x34c: V287 = 0x351
0x34f: JUMPI 0x351 V286
---
Entry stack: [V11, V55, V120, 0xa9059cbb, V122, 0x16d, V55, V125]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V11, V55, V120, 0xa9059cbb, V122, 0x16d, V55, V125, 0x0, 0x0, V125, V55]

================================

Block 0x350
[0x350:0x350]
---
Predecessors: [0x343]
Successors: []
---
0x350 INVALID
---
0x350: INVALID 
---
Entry stack: [V11, V55, V120, 0xa9059cbb, V122, 0x16d, V55, V125, 0x0, 0x0, V125, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V55, V120, 0xa9059cbb, V122, 0x16d, V55, V125, 0x0, 0x0, V125, V55]

================================

Block 0x351
[0x351:0x359]
---
Predecessors: [0x343]
Successors: [0x16d]
---
0x351 JUMPDEST
0x352 DIV
0x353 SWAP5
0x354 SWAP4
0x355 POP
0x356 POP
0x357 POP
0x358 POP
0x359 JUMP
---
0x351: JUMPDEST 
0x352: V288 = DIV V55 V125
0x359: JUMP 0x16d
---
Entry stack: [V11, V55, V120, 0xa9059cbb, V122, 0x16d, V55, V125, 0x0, 0x0, V125, V55]
Stack pops: 7
Stack additions: [V288]
Exit stack: [V11, V55, V120, 0xa9059cbb, V122, V288]

================================

Block 0x35a
[0x35a:0x365]
---
Predecessors: [0x24c]
Successors: [0x366, 0x407]
---
0x35a JUMPDEST
0x35b PUSH1 0x3
0x35d SLOAD
0x35e TIMESTAMP
0x35f LT
0x360 ISZERO
0x361 ISZERO
0x362 PUSH2 0x407
0x365 JUMPI
---
0x35a: JUMPDEST 
0x35b: V289 = 0x3
0x35d: V290 = S[0x3]
0x35e: V291 = TIMESTAMP
0x35f: V292 = LT V291 V290
0x360: V293 = ISZERO V292
0x361: V294 = ISZERO V293
0x362: V295 = 0x407
0x365: JUMPI 0x407 V294
---
Entry stack: [V11, 0x254]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x254]

================================

Block 0x366
[0x366:0x372]
---
Predecessors: [0x35a]
Successors: [0x373, 0x3eb]
---
0x366 PUSH1 0x1
0x368 SLOAD
0x369 PUSH1 0x2
0x36b SLOAD
0x36c LT
0x36d ISZERO
0x36e ISZERO
0x36f PUSH2 0x3eb
0x372 JUMPI
---
0x366: V296 = 0x1
0x368: V297 = S[0x1]
0x369: V298 = 0x2
0x36b: V299 = S[0x2]
0x36c: V300 = LT V299 V297
0x36d: V301 = ISZERO V300
0x36e: V302 = ISZERO V301
0x36f: V303 = 0x3eb
0x372: JUMPI 0x3eb V302
---
Entry stack: [V11, 0x254]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x254]

================================

Block 0x373
[0x373:0x3ea]
---
Predecessors: [0x366]
Successors: [0x3eb]
---
0x373 PUSH1 0x1
0x375 PUSH1 0x7
0x377 PUSH1 0x0
0x379 PUSH2 0x100
0x37c EXP
0x37d DUP2
0x37e SLOAD
0x37f DUP2
0x380 PUSH1 0xff
0x382 MUL
0x383 NOT
0x384 AND
0x385 SWAP1
0x386 DUP4
0x387 ISZERO
0x388 ISZERO
0x389 MUL
0x38a OR
0x38b SWAP1
0x38c SSTORE
0x38d POP
0x38e PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x3af PUSH1 0x0
0x3b1 DUP1
0x3b2 SWAP1
0x3b3 SLOAD
0x3b4 SWAP1
0x3b5 PUSH2 0x100
0x3b8 EXP
0x3b9 SWAP1
0x3ba DIV
0x3bb PUSH1 0x1
0x3bd PUSH1 0xa0
0x3bf PUSH1 0x2
0x3c1 EXP
0x3c2 SUB
0x3c3 AND
0x3c4 PUSH1 0x2
0x3c6 SLOAD
0x3c7 PUSH1 0x40
0x3c9 MLOAD
0x3ca PUSH1 0x1
0x3cc PUSH1 0xa0
0x3ce PUSH1 0x2
0x3d0 EXP
0x3d1 SUB
0x3d2 SWAP3
0x3d3 DUP4
0x3d4 AND
0x3d5 SWAP1
0x3d6 SWAP3
0x3d7 AND
0x3d8 DUP3
0x3d9 MSTORE
0x3da PUSH1 0x20
0x3dc SWAP2
0x3dd DUP3
0x3de ADD
0x3df SWAP1
0x3e0 DUP2
0x3e1 MSTORE
0x3e2 ADD
0x3e3 PUSH1 0x40
0x3e5 MLOAD
0x3e6 DUP1
0x3e7 SWAP2
0x3e8 SUB
0x3e9 SWAP1
0x3ea LOG1
---
0x373: V304 = 0x1
0x375: V305 = 0x7
0x377: V306 = 0x0
0x379: V307 = 0x100
0x37c: V308 = EXP 0x100 0x0
0x37e: V309 = S[0x7]
0x380: V310 = 0xff
0x382: V311 = MUL 0xff 0x1
0x383: V312 = NOT 0xff
0x384: V313 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V309
0x387: V314 = ISZERO 0x1
0x388: V315 = ISZERO 0x0
0x389: V316 = MUL 0x1 0x1
0x38a: V317 = OR 0x1 V313
0x38c: S[0x7] = V317
0x38e: V318 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x3af: V319 = 0x0
0x3b3: V320 = S[0x0]
0x3b5: V321 = 0x100
0x3b8: V322 = EXP 0x100 0x0
0x3ba: V323 = DIV V320 0x1
0x3bb: V324 = 0x1
0x3bd: V325 = 0xa0
0x3bf: V326 = 0x2
0x3c1: V327 = EXP 0x2 0xa0
0x3c2: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c3: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x3c4: V330 = 0x2
0x3c6: V331 = S[0x2]
0x3c7: V332 = 0x40
0x3c9: V333 = M[0x40]
0x3ca: V334 = 0x1
0x3cc: V335 = 0xa0
0x3ce: V336 = 0x2
0x3d0: V337 = EXP 0x2 0xa0
0x3d1: V338 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d4: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x3d7: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x3d9: M[V333] = V340
0x3da: V341 = 0x20
0x3de: V342 = ADD 0x20 V333
0x3e1: M[V342] = V331
0x3e2: V343 = ADD V342 0x20
0x3e3: V344 = 0x40
0x3e5: V345 = M[0x40]
0x3e8: V346 = SUB V343 V345
0x3ea: LOG V345 V346 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V11, 0x254]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x254]

================================

Block 0x3eb
[0x3eb:0x406]
---
Predecessors: [0x366, 0x373]
Successors: [0x407]
---
0x3eb JUMPDEST
0x3ec PUSH1 0x1
0x3ee PUSH1 0x7
0x3f0 PUSH1 0x1
0x3f2 PUSH2 0x100
0x3f5 EXP
0x3f6 DUP2
0x3f7 SLOAD
0x3f8 DUP2
0x3f9 PUSH1 0xff
0x3fb MUL
0x3fc NOT
0x3fd AND
0x3fe SWAP1
0x3ff DUP4
0x400 ISZERO
0x401 ISZERO
0x402 MUL
0x403 OR
0x404 SWAP1
0x405 SSTORE
0x406 POP
---
0x3eb: JUMPDEST 
0x3ec: V347 = 0x1
0x3ee: V348 = 0x7
0x3f0: V349 = 0x1
0x3f2: V350 = 0x100
0x3f5: V351 = EXP 0x100 0x1
0x3f7: V352 = S[0x7]
0x3f9: V353 = 0xff
0x3fb: V354 = MUL 0xff 0x100
0x3fc: V355 = NOT 0xff00
0x3fd: V356 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V352
0x400: V357 = ISZERO 0x1
0x401: V358 = ISZERO 0x0
0x402: V359 = MUL 0x1 0x100
0x403: V360 = OR 0x100 V356
0x405: S[0x7] = V360
---
Entry stack: [V11, 0x254]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x254]

================================

Block 0x407
[0x407:0x408]
---
Predecessors: [0x35a, 0x3eb, 0x462, 0x5be, 0x607]
Successors: [0x254]
---
0x407 JUMPDEST
0x408 JUMP
---
0x407: JUMPDEST 
0x408: JUMP 0x254
---
Entry stack: [V11, 0x254]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x409
[0x409:0x40e]
---
Predecessors: [0x261]
Successors: [0x269]
---
0x409 JUMPDEST
0x40a PUSH1 0x3
0x40c SLOAD
0x40d DUP2
0x40e JUMP
---
0x409: JUMPDEST 
0x40a: V361 = 0x3
0x40c: V362 = S[0x3]
0x40e: JUMP 0x269
---
Entry stack: [V11, 0x269]
Stack pops: 1
Stack additions: [S0, V362]
Exit stack: [V11, 0x269, V362]

================================

Block 0x40f
[0x40f:0x414]
---
Predecessors: [0x286]
Successors: [0x269]
---
0x40f JUMPDEST
0x410 PUSH1 0x1
0x412 SLOAD
0x413 DUP2
0x414 JUMP
---
0x40f: JUMPDEST 
0x410: V363 = 0x1
0x412: V364 = S[0x1]
0x414: JUMP 0x269
---
Entry stack: [V11, 0x269]
Stack pops: 1
Stack additions: [S0, V364]
Exit stack: [V11, 0x269, V364]

================================

Block 0x415
[0x415:0x42c]
---
Predecessors: [0x299]
Successors: [0x2a1]
---
0x415 JUMPDEST
0x416 PUSH1 0x0
0x418 DUP1
0x419 SWAP1
0x41a SLOAD
0x41b SWAP1
0x41c PUSH2 0x100
0x41f EXP
0x420 SWAP1
0x421 DIV
0x422 PUSH1 0x1
0x424 PUSH1 0xa0
0x426 PUSH1 0x2
0x428 EXP
0x429 SUB
0x42a AND
0x42b DUP2
0x42c JUMP
---
0x415: JUMPDEST 
0x416: V365 = 0x0
0x41a: V366 = S[0x0]
0x41c: V367 = 0x100
0x41f: V368 = EXP 0x100 0x0
0x421: V369 = DIV V366 0x1
0x422: V370 = 0x1
0x424: V371 = 0xa0
0x426: V372 = 0x2
0x428: V373 = EXP 0x2 0xa0
0x429: V374 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42a: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x42c: JUMP 0x2a1
---
Entry stack: [V11, 0x2a1]
Stack pops: 1
Stack additions: [S0, V375]
Exit stack: [V11, 0x2a1, V375]

================================

Block 0x42d
[0x42d:0x432]
---
Predecessors: [0x2cb]
Successors: [0x269]
---
0x42d JUMPDEST
0x42e PUSH1 0x2
0x430 SLOAD
0x431 DUP2
0x432 JUMP
---
0x42d: JUMPDEST 
0x42e: V376 = 0x2
0x430: V377 = S[0x2]
0x432: JUMP 0x269
---
Entry stack: [V11, 0x269]
Stack pops: 1
Stack additions: [S0, V377]
Exit stack: [V11, 0x269, V377]

================================

Block 0x433
[0x433:0x449]
---
Predecessors: [0x2de]
Successors: [0x2a1]
---
0x433 JUMPDEST
0x434 PUSH1 0x5
0x436 SLOAD
0x437 PUSH1 0x0
0x439 PUSH2 0x100
0x43c EXP
0x43d SWAP1
0x43e DIV
0x43f PUSH1 0x1
0x441 PUSH1 0xa0
0x443 PUSH1 0x2
0x445 EXP
0x446 SUB
0x447 AND
0x448 DUP2
0x449 JUMP
---
0x433: JUMPDEST 
0x434: V378 = 0x5
0x436: V379 = S[0x5]
0x437: V380 = 0x0
0x439: V381 = 0x100
0x43c: V382 = EXP 0x100 0x0
0x43e: V383 = DIV V379 0x1
0x43f: V384 = 0x1
0x441: V385 = 0xa0
0x443: V386 = 0x2
0x445: V387 = EXP 0x2 0xa0
0x446: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x447: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x449: JUMP 0x2a1
---
Entry stack: [V11, 0x2a1]
Stack pops: 1
Stack additions: [S0, V389]
Exit stack: [V11, 0x2a1, V389]

================================

Block 0x44a
[0x44a:0x45b]
---
Predecessors: [0x2f1]
Successors: [0x269]
---
0x44a JUMPDEST
0x44b PUSH1 0x6
0x44d PUSH1 0x20
0x44f MSTORE
0x450 PUSH1 0x0
0x452 SWAP1
0x453 DUP2
0x454 MSTORE
0x455 PUSH1 0x40
0x457 SWAP1
0x458 SHA3
0x459 SLOAD
0x45a DUP2
0x45b JUMP
---
0x44a: JUMPDEST 
0x44b: V390 = 0x6
0x44d: V391 = 0x20
0x44f: M[0x20] = 0x6
0x450: V392 = 0x0
0x454: M[0x0] = V263
0x455: V393 = 0x40
0x458: V394 = SHA3 0x0 0x40
0x459: V395 = S[V394]
0x45b: JUMP 0x269
---
Entry stack: [V11, 0x269, V263]
Stack pops: 2
Stack additions: [S1, V395]
Exit stack: [V11, 0x269, V395]

================================

Block 0x45c
[0x45c:0x461]
---
Predecessors: [0x310]
Successors: [0x269]
---
0x45c JUMPDEST
0x45d PUSH1 0x4
0x45f SLOAD
0x460 DUP2
0x461 JUMP
---
0x45c: JUMPDEST 
0x45d: V396 = 0x4
0x45f: V397 = S[0x4]
0x461: JUMP 0x269
---
Entry stack: [V11, 0x269]
Stack pops: 1
Stack additions: [S0, V397]
Exit stack: [V11, 0x269, V397]

================================

Block 0x462
[0x462:0x46d]
---
Predecessors: [0x323]
Successors: [0x407, 0x46e]
---
0x462 JUMPDEST
0x463 PUSH1 0x3
0x465 SLOAD
0x466 TIMESTAMP
0x467 LT
0x468 ISZERO
0x469 ISZERO
0x46a PUSH2 0x407
0x46d JUMPI
---
0x462: JUMPDEST 
0x463: V398 = 0x3
0x465: V399 = S[0x3]
0x466: V400 = TIMESTAMP
0x467: V401 = LT V400 V399
0x468: V402 = ISZERO V401
0x469: V403 = ISZERO V402
0x46a: V404 = 0x407
0x46d: JUMPI 0x407 V403
---
Entry stack: [V11, 0x254]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x254]

================================

Block 0x46e
[0x46e:0x482]
---
Predecessors: [0x462]
Successors: [0x483, 0x4ad]
---
0x46e PUSH1 0x7
0x470 SLOAD
0x471 PUSH1 0x0
0x473 PUSH2 0x100
0x476 EXP
0x477 SWAP1
0x478 DIV
0x479 PUSH1 0xff
0x47b AND
0x47c ISZERO
0x47d DUP1
0x47e ISZERO
0x47f PUSH2 0x4ad
0x482 JUMPI
---
0x46e: V405 = 0x7
0x470: V406 = S[0x7]
0x471: V407 = 0x0
0x473: V408 = 0x100
0x476: V409 = EXP 0x100 0x0
0x478: V410 = DIV V406 0x1
0x479: V411 = 0xff
0x47b: V412 = AND 0xff V410
0x47c: V413 = ISZERO V412
0x47e: V414 = ISZERO V413
0x47f: V415 = 0x4ad
0x482: JUMPI 0x4ad V414
---
Entry stack: [V11, 0x254]
Stack pops: 0
Stack additions: [V413]
Exit stack: [V11, 0x254, V413]

================================

Block 0x483
[0x483:0x4ac]
---
Predecessors: [0x46e]
Successors: [0x4ad]
---
0x483 POP
0x484 CALLER
0x485 PUSH1 0x1
0x487 PUSH1 0xa0
0x489 PUSH1 0x2
0x48b EXP
0x48c SUB
0x48d AND
0x48e PUSH1 0x0
0x490 DUP1
0x491 SWAP1
0x492 SLOAD
0x493 SWAP1
0x494 PUSH2 0x100
0x497 EXP
0x498 SWAP1
0x499 DIV
0x49a PUSH1 0x1
0x49c PUSH1 0xa0
0x49e PUSH1 0x2
0x4a0 EXP
0x4a1 SUB
0x4a2 AND
0x4a3 PUSH1 0x1
0x4a5 PUSH1 0xa0
0x4a7 PUSH1 0x2
0x4a9 EXP
0x4aa SUB
0x4ab AND
0x4ac EQ
---
0x484: V416 = CALLER
0x485: V417 = 0x1
0x487: V418 = 0xa0
0x489: V419 = 0x2
0x48b: V420 = EXP 0x2 0xa0
0x48c: V421 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48d: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x48e: V423 = 0x0
0x492: V424 = S[0x0]
0x494: V425 = 0x100
0x497: V426 = EXP 0x100 0x0
0x499: V427 = DIV V424 0x1
0x49a: V428 = 0x1
0x49c: V429 = 0xa0
0x49e: V430 = 0x2
0x4a0: V431 = EXP 0x2 0xa0
0x4a1: V432 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a2: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x4a3: V434 = 0x1
0x4a5: V435 = 0xa0
0x4a7: V436 = 0x2
0x4a9: V437 = EXP 0x2 0xa0
0x4aa: V438 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ab: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x4ac: V440 = EQ V439 V422
---
Entry stack: [V11, 0x254, V413]
Stack pops: 1
Stack additions: [V440]
Exit stack: [V11, 0x254, V440]

================================

Block 0x4ad
[0x4ad:0x4b2]
---
Predecessors: [0x46e, 0x483]
Successors: [0x4b3, 0x57f]
---
0x4ad JUMPDEST
0x4ae ISZERO
0x4af PUSH2 0x57f
0x4b2 JUMPI
---
0x4ad: JUMPDEST 
0x4ae: V441 = ISZERO S0
0x4af: V442 = 0x57f
0x4b2: JUMPI 0x57f V441
---
Entry stack: [V11, 0x254, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x254]

================================

Block 0x4b3
[0x4b3:0x4f5]
---
Predecessors: [0x4ad]
Successors: [0x4f6, 0x563]
---
0x4b3 PUSH1 0x0
0x4b5 DUP1
0x4b6 SWAP1
0x4b7 SLOAD
0x4b8 SWAP1
0x4b9 PUSH2 0x100
0x4bc EXP
0x4bd SWAP1
0x4be DIV
0x4bf PUSH1 0x1
0x4c1 PUSH1 0xa0
0x4c3 PUSH1 0x2
0x4c5 EXP
0x4c6 SUB
0x4c7 AND
0x4c8 PUSH1 0x1
0x4ca PUSH1 0xa0
0x4cc PUSH1 0x2
0x4ce EXP
0x4cf SUB
0x4d0 AND
0x4d1 PUSH2 0x8fc
0x4d4 PUSH1 0x2
0x4d6 SLOAD
0x4d7 SWAP1
0x4d8 DUP2
0x4d9 ISZERO
0x4da MUL
0x4db SWAP1
0x4dc PUSH1 0x40
0x4de MLOAD
0x4df PUSH1 0x0
0x4e1 PUSH1 0x40
0x4e3 MLOAD
0x4e4 DUP1
0x4e5 DUP4
0x4e6 SUB
0x4e7 DUP2
0x4e8 DUP6
0x4e9 DUP9
0x4ea DUP9
0x4eb CALL
0x4ec SWAP4
0x4ed POP
0x4ee POP
0x4ef POP
0x4f0 POP
0x4f1 ISZERO
0x4f2 PUSH2 0x563
0x4f5 JUMPI
---
0x4b3: V443 = 0x0
0x4b7: V444 = S[0x0]
0x4b9: V445 = 0x100
0x4bc: V446 = EXP 0x100 0x0
0x4be: V447 = DIV V444 0x1
0x4bf: V448 = 0x1
0x4c1: V449 = 0xa0
0x4c3: V450 = 0x2
0x4c5: V451 = EXP 0x2 0xa0
0x4c6: V452 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c7: V453 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x4c8: V454 = 0x1
0x4ca: V455 = 0xa0
0x4cc: V456 = 0x2
0x4ce: V457 = EXP 0x2 0xa0
0x4cf: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d0: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x4d1: V460 = 0x8fc
0x4d4: V461 = 0x2
0x4d6: V462 = S[0x2]
0x4d9: V463 = ISZERO V462
0x4da: V464 = MUL V463 0x8fc
0x4dc: V465 = 0x40
0x4de: V466 = M[0x40]
0x4df: V467 = 0x0
0x4e1: V468 = 0x40
0x4e3: V469 = M[0x40]
0x4e6: V470 = SUB V466 V469
0x4eb: V471 = CALL V464 V459 V462 V469 V470 V469 0x0
0x4f1: V472 = ISZERO V471
0x4f2: V473 = 0x563
0x4f5: JUMPI 0x563 V472
---
Entry stack: [V11, 0x254]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x254]

================================

Block 0x4f6
[0x4f6:0x562]
---
Predecessors: [0x4b3]
Successors: [0x57f]
---
0x4f6 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x517 PUSH1 0x0
0x519 DUP1
0x51a SWAP1
0x51b SLOAD
0x51c SWAP1
0x51d PUSH2 0x100
0x520 EXP
0x521 SWAP1
0x522 DIV
0x523 PUSH1 0x1
0x525 PUSH1 0xa0
0x527 PUSH1 0x2
0x529 EXP
0x52a SUB
0x52b AND
0x52c PUSH1 0x2
0x52e SLOAD
0x52f PUSH1 0x0
0x531 PUSH1 0x40
0x533 MLOAD
0x534 PUSH1 0x1
0x536 PUSH1 0xa0
0x538 PUSH1 0x2
0x53a EXP
0x53b SUB
0x53c SWAP4
0x53d DUP5
0x53e AND
0x53f SWAP1
0x540 SWAP4
0x541 AND
0x542 DUP4
0x543 MSTORE
0x544 PUSH1 0x20
0x546 SWAP3
0x547 DUP4
0x548 ADD
0x549 SWAP2
0x54a DUP3
0x54b MSTORE
0x54c ISZERO
0x54d ISZERO
0x54e ISZERO
0x54f ISZERO
0x550 SWAP1
0x551 DUP3
0x552 ADD
0x553 SWAP1
0x554 DUP2
0x555 MSTORE
0x556 ADD
0x557 PUSH1 0x40
0x559 MLOAD
0x55a DUP1
0x55b SWAP2
0x55c SUB
0x55d SWAP1
0x55e LOG1
0x55f PUSH2 0x57f
0x562 JUMP
---
0x4f6: V474 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x517: V475 = 0x0
0x51b: V476 = S[0x0]
0x51d: V477 = 0x100
0x520: V478 = EXP 0x100 0x0
0x522: V479 = DIV V476 0x1
0x523: V480 = 0x1
0x525: V481 = 0xa0
0x527: V482 = 0x2
0x529: V483 = EXP 0x2 0xa0
0x52a: V484 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52b: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x52c: V486 = 0x2
0x52e: V487 = S[0x2]
0x52f: V488 = 0x0
0x531: V489 = 0x40
0x533: V490 = M[0x40]
0x534: V491 = 0x1
0x536: V492 = 0xa0
0x538: V493 = 0x2
0x53a: V494 = EXP 0x2 0xa0
0x53b: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53e: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V485
0x541: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x543: M[V490] = V497
0x544: V498 = 0x20
0x548: V499 = ADD 0x20 V490
0x54b: M[V499] = V487
0x54c: V500 = ISZERO 0x0
0x54d: V501 = ISZERO 0x1
0x54e: V502 = ISZERO 0x0
0x54f: V503 = ISZERO 0x1
0x552: V504 = ADD 0x20 V499
0x555: M[V504] = 0x0
0x556: V505 = ADD V504 0x20
0x557: V506 = 0x40
0x559: V507 = M[0x40]
0x55c: V508 = SUB V505 V507
0x55e: LOG V507 V508 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x55f: V509 = 0x57f
0x562: JUMP 0x57f
---
Entry stack: [V11, 0x254]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x254]

================================

Block 0x563
[0x563:0x57e]
---
Predecessors: [0x4b3]
Successors: [0x57f]
---
0x563 JUMPDEST
0x564 PUSH1 0x0
0x566 PUSH1 0x7
0x568 PUSH1 0x0
0x56a PUSH2 0x100
0x56d EXP
0x56e DUP2
0x56f SLOAD
0x570 DUP2
0x571 PUSH1 0xff
0x573 MUL
0x574 NOT
0x575 AND
0x576 SWAP1
0x577 DUP4
0x578 ISZERO
0x579 ISZERO
0x57a MUL
0x57b OR
0x57c SWAP1
0x57d SSTORE
0x57e POP
---
0x563: JUMPDEST 
0x564: V510 = 0x0
0x566: V511 = 0x7
0x568: V512 = 0x0
0x56a: V513 = 0x100
0x56d: V514 = EXP 0x100 0x0
0x56f: V515 = S[0x7]
0x571: V516 = 0xff
0x573: V517 = MUL 0xff 0x1
0x574: V518 = NOT 0xff
0x575: V519 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V515
0x578: V520 = ISZERO 0x0
0x579: V521 = ISZERO 0x1
0x57a: V522 = MUL 0x0 0x1
0x57b: V523 = OR 0x0 V519
0x57d: S[0x7] = V523
---
Entry stack: [V11, 0x254]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x254]

================================

Block 0x57f
[0x57f:0x593]
---
Predecessors: [0x4ad, 0x4f6, 0x563]
Successors: [0x594, 0x5be]
---
0x57f JUMPDEST
0x580 PUSH1 0x7
0x582 SLOAD
0x583 PUSH1 0x0
0x585 PUSH2 0x100
0x588 EXP
0x589 SWAP1
0x58a DIV
0x58b PUSH1 0xff
0x58d AND
0x58e DUP1
0x58f ISZERO
0x590 PUSH2 0x5be
0x593 JUMPI
---
0x57f: JUMPDEST 
0x580: V524 = 0x7
0x582: V525 = S[0x7]
0x583: V526 = 0x0
0x585: V527 = 0x100
0x588: V528 = EXP 0x100 0x0
0x58a: V529 = DIV V525 0x1
0x58b: V530 = 0xff
0x58d: V531 = AND 0xff V529
0x58f: V532 = ISZERO V531
0x590: V533 = 0x5be
0x593: JUMPI 0x5be V532
---
Entry stack: [V11, 0x254]
Stack pops: 0
Stack additions: [V531]
Exit stack: [V11, 0x254, V531]

================================

Block 0x594
[0x594:0x5bd]
---
Predecessors: [0x57f]
Successors: [0x5be]
---
0x594 POP
0x595 CALLER
0x596 PUSH1 0x1
0x598 PUSH1 0xa0
0x59a PUSH1 0x2
0x59c EXP
0x59d SUB
0x59e AND
0x59f PUSH1 0x0
0x5a1 DUP1
0x5a2 SWAP1
0x5a3 SLOAD
0x5a4 SWAP1
0x5a5 PUSH2 0x100
0x5a8 EXP
0x5a9 SWAP1
0x5aa DIV
0x5ab PUSH1 0x1
0x5ad PUSH1 0xa0
0x5af PUSH1 0x2
0x5b1 EXP
0x5b2 SUB
0x5b3 AND
0x5b4 PUSH1 0x1
0x5b6 PUSH1 0xa0
0x5b8 PUSH1 0x2
0x5ba EXP
0x5bb SUB
0x5bc AND
0x5bd EQ
---
0x595: V534 = CALLER
0x596: V535 = 0x1
0x598: V536 = 0xa0
0x59a: V537 = 0x2
0x59c: V538 = EXP 0x2 0xa0
0x59d: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59e: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x59f: V541 = 0x0
0x5a3: V542 = S[0x0]
0x5a5: V543 = 0x100
0x5a8: V544 = EXP 0x100 0x0
0x5aa: V545 = DIV V542 0x1
0x5ab: V546 = 0x1
0x5ad: V547 = 0xa0
0x5af: V548 = 0x2
0x5b1: V549 = EXP 0x2 0xa0
0x5b2: V550 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b3: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V545
0x5b4: V552 = 0x1
0x5b6: V553 = 0xa0
0x5b8: V554 = 0x2
0x5ba: V555 = EXP 0x2 0xa0
0x5bb: V556 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bc: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff V551
0x5bd: V558 = EQ V557 V540
---
Entry stack: [V11, 0x254, V531]
Stack pops: 1
Stack additions: [V558]
Exit stack: [V11, 0x254, V558]

================================

Block 0x5be
[0x5be:0x5c3]
---
Predecessors: [0x57f, 0x594]
Successors: [0x407, 0x5c4]
---
0x5be JUMPDEST
0x5bf ISZERO
0x5c0 PUSH2 0x407
0x5c3 JUMPI
---
0x5be: JUMPDEST 
0x5bf: V559 = ISZERO S0
0x5c0: V560 = 0x407
0x5c3: JUMPI 0x407 V559
---
Entry stack: [V11, 0x254, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x254]

================================

Block 0x5c4
[0x5c4:0x606]
---
Predecessors: [0x5be]
Successors: [0x607, 0x674]
---
0x5c4 PUSH1 0x0
0x5c6 DUP1
0x5c7 SWAP1
0x5c8 SLOAD
0x5c9 SWAP1
0x5ca PUSH2 0x100
0x5cd EXP
0x5ce SWAP1
0x5cf DIV
0x5d0 PUSH1 0x1
0x5d2 PUSH1 0xa0
0x5d4 PUSH1 0x2
0x5d6 EXP
0x5d7 SUB
0x5d8 AND
0x5d9 PUSH1 0x1
0x5db PUSH1 0xa0
0x5dd PUSH1 0x2
0x5df EXP
0x5e0 SUB
0x5e1 AND
0x5e2 PUSH2 0x8fc
0x5e5 PUSH1 0x2
0x5e7 SLOAD
0x5e8 SWAP1
0x5e9 DUP2
0x5ea ISZERO
0x5eb MUL
0x5ec SWAP1
0x5ed PUSH1 0x40
0x5ef MLOAD
0x5f0 PUSH1 0x0
0x5f2 PUSH1 0x40
0x5f4 MLOAD
0x5f5 DUP1
0x5f6 DUP4
0x5f7 SUB
0x5f8 DUP2
0x5f9 DUP6
0x5fa DUP9
0x5fb DUP9
0x5fc CALL
0x5fd SWAP4
0x5fe POP
0x5ff POP
0x600 POP
0x601 POP
0x602 ISZERO
0x603 PUSH2 0x674
0x606 JUMPI
---
0x5c4: V561 = 0x0
0x5c8: V562 = S[0x0]
0x5ca: V563 = 0x100
0x5cd: V564 = EXP 0x100 0x0
0x5cf: V565 = DIV V562 0x1
0x5d0: V566 = 0x1
0x5d2: V567 = 0xa0
0x5d4: V568 = 0x2
0x5d6: V569 = EXP 0x2 0xa0
0x5d7: V570 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d8: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x5d9: V572 = 0x1
0x5db: V573 = 0xa0
0x5dd: V574 = 0x2
0x5df: V575 = EXP 0x2 0xa0
0x5e0: V576 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e1: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0x5e2: V578 = 0x8fc
0x5e5: V579 = 0x2
0x5e7: V580 = S[0x2]
0x5ea: V581 = ISZERO V580
0x5eb: V582 = MUL V581 0x8fc
0x5ed: V583 = 0x40
0x5ef: V584 = M[0x40]
0x5f0: V585 = 0x0
0x5f2: V586 = 0x40
0x5f4: V587 = M[0x40]
0x5f7: V588 = SUB V584 V587
0x5fc: V589 = CALL V582 V577 V580 V587 V588 V587 0x0
0x602: V590 = ISZERO V589
0x603: V591 = 0x674
0x606: JUMPI 0x674 V590
---
Entry stack: [V11, 0x254]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x254]

================================

Block 0x607
[0x607:0x673]
---
Predecessors: [0x5c4]
Successors: [0x407]
---
0x607 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x628 PUSH1 0x0
0x62a DUP1
0x62b SWAP1
0x62c SLOAD
0x62d SWAP1
0x62e PUSH2 0x100
0x631 EXP
0x632 SWAP1
0x633 DIV
0x634 PUSH1 0x1
0x636 PUSH1 0xa0
0x638 PUSH1 0x2
0x63a EXP
0x63b SUB
0x63c AND
0x63d PUSH1 0x2
0x63f SLOAD
0x640 PUSH1 0x0
0x642 PUSH1 0x40
0x644 MLOAD
0x645 PUSH1 0x1
0x647 PUSH1 0xa0
0x649 PUSH1 0x2
0x64b EXP
0x64c SUB
0x64d SWAP4
0x64e DUP5
0x64f AND
0x650 SWAP1
0x651 SWAP4
0x652 AND
0x653 DUP4
0x654 MSTORE
0x655 PUSH1 0x20
0x657 SWAP3
0x658 DUP4
0x659 ADD
0x65a SWAP2
0x65b DUP3
0x65c MSTORE
0x65d ISZERO
0x65e ISZERO
0x65f ISZERO
0x660 ISZERO
0x661 SWAP1
0x662 DUP3
0x663 ADD
0x664 SWAP1
0x665 DUP2
0x666 MSTORE
0x667 ADD
0x668 PUSH1 0x40
0x66a MLOAD
0x66b DUP1
0x66c SWAP2
0x66d SUB
0x66e SWAP1
0x66f LOG1
0x670 PUSH2 0x407
0x673 JUMP
---
0x607: V592 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x628: V593 = 0x0
0x62c: V594 = S[0x0]
0x62e: V595 = 0x100
0x631: V596 = EXP 0x100 0x0
0x633: V597 = DIV V594 0x1
0x634: V598 = 0x1
0x636: V599 = 0xa0
0x638: V600 = 0x2
0x63a: V601 = EXP 0x2 0xa0
0x63b: V602 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63c: V603 = AND 0xffffffffffffffffffffffffffffffffffffffff V597
0x63d: V604 = 0x2
0x63f: V605 = S[0x2]
0x640: V606 = 0x0
0x642: V607 = 0x40
0x644: V608 = M[0x40]
0x645: V609 = 0x1
0x647: V610 = 0xa0
0x649: V611 = 0x2
0x64b: V612 = EXP 0x2 0xa0
0x64c: V613 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64f: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0x652: V615 = AND 0xffffffffffffffffffffffffffffffffffffffff V614
0x654: M[V608] = V615
0x655: V616 = 0x20
0x659: V617 = ADD 0x20 V608
0x65c: M[V617] = V605
0x65d: V618 = ISZERO 0x0
0x65e: V619 = ISZERO 0x1
0x65f: V620 = ISZERO 0x0
0x660: V621 = ISZERO 0x1
0x663: V622 = ADD 0x20 V617
0x666: M[V622] = 0x0
0x667: V623 = ADD V622 0x20
0x668: V624 = 0x40
0x66a: V625 = M[0x40]
0x66d: V626 = SUB V623 V625
0x66f: LOG V625 V626 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x670: V627 = 0x407
0x673: JUMP 0x407
---
Entry stack: [V11, 0x254]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x254]

================================

Block 0x674
[0x674:0x690]
---
Predecessors: [0x5c4]
Successors: [0x254]
---
0x674 JUMPDEST
0x675 PUSH1 0x0
0x677 PUSH1 0x7
0x679 PUSH1 0x0
0x67b PUSH2 0x100
0x67e EXP
0x67f DUP2
0x680 SLOAD
0x681 DUP2
0x682 PUSH1 0xff
0x684 MUL
0x685 NOT
0x686 AND
0x687 SWAP1
0x688 DUP4
0x689 ISZERO
0x68a ISZERO
0x68b MUL
0x68c OR
0x68d SWAP1
0x68e SSTORE
0x68f POP
0x690 JUMP
---
0x674: JUMPDEST 
0x675: V628 = 0x0
0x677: V629 = 0x7
0x679: V630 = 0x0
0x67b: V631 = 0x100
0x67e: V632 = EXP 0x100 0x0
0x680: V633 = S[0x7]
0x682: V634 = 0xff
0x684: V635 = MUL 0xff 0x1
0x685: V636 = NOT 0xff
0x686: V637 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V633
0x689: V638 = ISZERO 0x0
0x68a: V639 = ISZERO 0x1
0x68b: V640 = MUL 0x0 0x1
0x68c: V641 = OR 0x0 V637
0x68e: S[0x7] = V641
0x690: JUMP 0x254
---
Entry stack: [V11, 0x254]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x691
[0x691:0x6c7]
---
Predecessors: []
Successors: []
---
0x691 STOP
0x692 LOG1
0x693 PUSH6 0x627a7a723058
0x69a SHA3
0x69b PUSH14 0xfcc2728267e241f1daa91281144c
0x6aa MISSING 0xba
0x6ab MISSING 0xf7
0x6ac CODESIZE
0x6ad MISSING 0xb5
0x6ae ADD
0x6af PUSH24 0xe0c47bc96ca0ef1ad28bfc0029
---
0x691: STOP 
0x692: LOG S0 S1 S2
0x693: V642 = 0x627a7a723058
0x69a: V643 = SHA3 0x627a7a723058 S3
0x69b: V644 = 0xfcc2728267e241f1daa91281144c
0x6aa: MISSING 0xba
0x6ab: MISSING 0xf7
0x6ac: V645 = CODESIZE
0x6ad: MISSING 0xb5
0x6ae: V646 = ADD S0 S1
0x6af: V647 = 0xe0c47bc96ca0ef1ad28bfc0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xfcc2728267e241f1daa91281144c, V643, V645, 0xe0c47bc96ca0ef1ad28bfc0029, V646]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x241
Exit block: 0x254
Body: 0x241, 0x248, 0x24c, 0x254, 0x35a, 0x366, 0x373, 0x3eb, 0x407

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x256
Exit block: 0x269
Body: 0x256, 0x25d, 0x261, 0x269, 0x409

Function 2:
Public function signature: 0x339689c9
Entry block: 0x27b
Exit block: 0x269
Body: 0x269, 0x27b, 0x282, 0x286, 0x40f

Function 3:
Public function signature: 0x521eb273
Entry block: 0x28e
Exit block: 0x2a1
Body: 0x28e, 0x295, 0x299, 0x2a1, 0x415

Function 4:
Public function signature: 0x5a170a3c
Entry block: 0x2c0
Exit block: 0x269
Body: 0x269, 0x2c0, 0x2c7, 0x2cb, 0x42d

Function 5:
Public function signature: 0x6e66f6e9
Entry block: 0x2d3
Exit block: 0x2a1
Body: 0x2a1, 0x2d3, 0x2da, 0x2de, 0x433

Function 6:
Public function signature: 0x70a08231
Entry block: 0x2e6
Exit block: 0x269
Body: 0x269, 0x2e6, 0x2ed, 0x2f1, 0x44a

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x305
Exit block: 0x269
Body: 0x269, 0x305, 0x30c, 0x310, 0x45c

Function 8:
Public function signature: 0xfd6b7ef8
Entry block: 0x318
Exit block: 0x254
Body: 0x254, 0x318, 0x31f, 0x323, 0x407, 0x462, 0x46e, 0x483, 0x4ad, 0x4b3, 0x4f6, 0x563, 0x57f, 0x594, 0x5be, 0x5c4, 0x607, 0x674

Function 9:
Public fallback function
Entry block: 0x98
Exit block: 0x350
Body: 0x98, 0xb2, 0xb6, 0xfb, 0x350

Function 10:
Private function
Entry block: 0x32b
Exit block: 0x33c
Body: 0x32b, 0x33c

