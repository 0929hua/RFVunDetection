Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xca]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xca
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xca
0xa: JUMPI 0xca V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xd7]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2c4e722e
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xd7
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2c4e722e
0x20: V14 = EQ V12 0x2c4e722e
0x21: V15 = 0xd7
0x24: JUMPI 0xd7 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xfc]
---
0x25 DUP1
0x26 PUSH4 0x3197cbb6
0x2b EQ
0x2c PUSH2 0xfc
0x2f JUMPI
---
0x26: V16 = 0x3197cbb6
0x2b: V17 = EQ 0x3197cbb6 V12
0x2c: V18 = 0xfc
0x2f: JUMPI 0xfc V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x121]
---
0x30 DUP1
0x31 PUSH4 0x355274ea
0x36 EQ
0x37 PUSH2 0x121
0x3a JUMPI
---
0x31: V19 = 0x355274ea
0x36: V20 = EQ 0x355274ea V12
0x37: V21 = 0x121
0x3a: JUMPI 0x121 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x146]
---
0x3b DUP1
0x3c PUSH4 0x3ccfd60b
0x41 EQ
0x42 PUSH2 0x146
0x45 JUMPI
---
0x3c: V22 = 0x3ccfd60b
0x41: V23 = EQ 0x3ccfd60b V12
0x42: V24 = 0x146
0x45: JUMPI 0x146 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x15b]
---
0x46 DUP1
0x47 PUSH4 0x3f4ba83a
0x4c EQ
0x4d PUSH2 0x15b
0x50 JUMPI
---
0x47: V25 = 0x3f4ba83a
0x4c: V26 = EQ 0x3f4ba83a V12
0x4d: V27 = 0x15b
0x50: JUMPI 0x15b V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x170]
---
0x51 DUP1
0x52 PUSH4 0x4042b66f
0x57 EQ
0x58 PUSH2 0x170
0x5b JUMPI
---
0x52: V28 = 0x4042b66f
0x57: V29 = EQ 0x4042b66f V12
0x58: V30 = 0x170
0x5b: JUMPI 0x170 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x195]
---
0x5c DUP1
0x5d PUSH4 0x521eb273
0x62 EQ
0x63 PUSH2 0x195
0x66 JUMPI
---
0x5d: V31 = 0x521eb273
0x62: V32 = EQ 0x521eb273 V12
0x63: V33 = 0x195
0x66: JUMPI 0x195 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1c4]
---
0x67 DUP1
0x68 PUSH4 0x5c975abb
0x6d EQ
0x6e PUSH2 0x1c4
0x71 JUMPI
---
0x68: V34 = 0x5c975abb
0x6d: V35 = EQ 0x5c975abb V12
0x6e: V36 = 0x1c4
0x71: JUMPI 0x1c4 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1eb]
---
0x72 DUP1
0x73 PUSH4 0x78e97925
0x78 EQ
0x79 PUSH2 0x1eb
0x7c JUMPI
---
0x73: V37 = 0x78e97925
0x78: V38 = EQ 0x78e97925 V12
0x79: V39 = 0x1eb
0x7c: JUMPI 0x1eb V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x210]
---
0x7d DUP1
0x7e PUSH4 0x8456cb59
0x83 EQ
0x84 PUSH2 0x210
0x87 JUMPI
---
0x7e: V40 = 0x8456cb59
0x83: V41 = EQ 0x8456cb59 V12
0x84: V42 = 0x210
0x87: JUMPI 0x210 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x225]
---
0x88 DUP1
0x89 PUSH4 0x8da5cb5b
0x8e EQ
0x8f PUSH2 0x225
0x92 JUMPI
---
0x89: V43 = 0x8da5cb5b
0x8e: V44 = EQ 0x8da5cb5b V12
0x8f: V45 = 0x225
0x92: JUMPI 0x225 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x254]
---
0x93 DUP1
0x94 PUSH4 0xbe10862b
0x99 EQ
0x9a PUSH2 0x254
0x9d JUMPI
---
0x94: V46 = 0xbe10862b
0x99: V47 = EQ 0xbe10862b V12
0x9a: V48 = 0x254
0x9d: JUMPI 0x254 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x283]
---
0x9e DUP1
0x9f PUSH4 0xec8ac4d8
0xa4 EQ
0xa5 PUSH2 0x283
0xa8 JUMPI
---
0x9f: V49 = 0xec8ac4d8
0xa4: V50 = EQ 0xec8ac4d8 V12
0xa5: V51 = 0x283
0xa8: JUMPI 0x283 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x299]
---
0xa9 DUP1
0xaa PUSH4 0xecb70fb7
0xaf EQ
0xb0 PUSH2 0x299
0xb3 JUMPI
---
0xaa: V52 = 0xecb70fb7
0xaf: V53 = EQ 0xecb70fb7 V12
0xb0: V54 = 0x299
0xb3: JUMPI 0x299 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x2c0]
---
0xb4 DUP1
0xb5 PUSH4 0xf2fde38b
0xba EQ
0xbb PUSH2 0x2c0
0xbe JUMPI
---
0xb5: V55 = 0xf2fde38b
0xba: V56 = EQ 0xf2fde38b V12
0xbb: V57 = 0x2c0
0xbe: JUMPI 0x2c0 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x2e1]
---
0xbf DUP1
0xc0 PUSH4 0xfc0c546a
0xc5 EQ
0xc6 PUSH2 0x2e1
0xc9 JUMPI
---
0xc0: V58 = 0xfc0c546a
0xc5: V59 = EQ 0xfc0c546a V12
0xc6: V60 = 0x2e1
0xc9: JUMPI 0x2e1 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xca]
---
Predecessors: [0x0, 0xbf]
Successors: [0xcb]
---
0xca JUMPDEST
---
0xca: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcb
[0xcb:0xd3]
---
Predecessors: [0xca]
Successors: [0x310]
---
0xcb JUMPDEST
0xcc PUSH2 0xd4
0xcf CALLER
0xd0 PUSH2 0x310
0xd3 JUMP
---
0xcb: JUMPDEST 
0xcc: V61 = 0xd4
0xcf: V62 = CALLER
0xd0: V63 = 0x310
0xd3: JUMP 0x310
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4, V62]
Exit stack: [V12, 0xd4, V62]

================================

Block 0xd4
[0xd4:0xd4]
---
Predecessors: [0x60b, 0x68e, 0x740, 0x819, 0x95f]
Successors: [0xd5]
---
0xd4 JUMPDEST
---
0xd4: JUMPDEST 
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xd5
[0xd5:0xd6]
---
Predecessors: [0xd4]
Successors: []
---
0xd5 JUMPDEST
0xd6 STOP
---
0xd5: JUMPDEST 
0xd6: STOP 
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xd7
[0xd7:0xdd]
---
Predecessors: [0xb]
Successors: [0xde, 0xe2]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 ISZERO
0xda PUSH2 0xe2
0xdd JUMPI
---
0xd7: JUMPDEST 
0xd8: V64 = CALLVALUE
0xd9: V65 = ISZERO V64
0xda: V66 = 0xe2
0xdd: JUMPI 0xe2 V65
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xde
[0xde:0xe1]
---
Predecessors: [0xd7]
Successors: []
---
0xde PUSH1 0x0
0xe0 DUP1
0xe1 REVERT
---
0xde: V67 = 0x0
0xe1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe2
[0xe2:0xe9]
---
Predecessors: [0xd7]
Successors: [0x55d]
---
0xe2 JUMPDEST
0xe3 PUSH2 0xea
0xe6 PUSH2 0x55d
0xe9 JUMP
---
0xe2: JUMPDEST 
0xe3: V68 = 0xea
0xe6: V69 = 0x55d
0xe9: JUMP 0x55d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xea]
Exit stack: [V12, 0xea]

================================

Block 0xea
[0xea:0xfb]
---
Predecessors: [0x55d, 0x563, 0x569, 0x690, 0x6b5]
Successors: []
---
0xea JUMPDEST
0xeb PUSH1 0x40
0xed MLOAD
0xee SWAP1
0xef DUP2
0xf0 MSTORE
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP1
0xf8 SWAP2
0xf9 SUB
0xfa SWAP1
0xfb RETURN
---
0xea: JUMPDEST 
0xeb: V70 = 0x40
0xed: V71 = M[0x40]
0xf0: M[V71] = S0
0xf1: V72 = 0x20
0xf3: V73 = ADD 0x20 V71
0xf4: V74 = 0x40
0xf6: V75 = M[0x40]
0xf9: V76 = SUB V73 V75
0xfb: RETURN V75 V76
---
Entry stack: [V12, 0xea, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xea]

================================

Block 0xfc
[0xfc:0x102]
---
Predecessors: [0x25]
Successors: [0x103, 0x107]
---
0xfc JUMPDEST
0xfd CALLVALUE
0xfe ISZERO
0xff PUSH2 0x107
0x102 JUMPI
---
0xfc: JUMPDEST 
0xfd: V77 = CALLVALUE
0xfe: V78 = ISZERO V77
0xff: V79 = 0x107
0x102: JUMPI 0x107 V78
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x103
[0x103:0x106]
---
Predecessors: [0xfc]
Successors: []
---
0x103 PUSH1 0x0
0x105 DUP1
0x106 REVERT
---
0x103: V80 = 0x0
0x106: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x107
[0x107:0x10e]
---
Predecessors: [0xfc]
Successors: [0x563]
---
0x107 JUMPDEST
0x108 PUSH2 0xea
0x10b PUSH2 0x563
0x10e JUMP
---
0x107: JUMPDEST 
0x108: V81 = 0xea
0x10b: V82 = 0x563
0x10e: JUMP 0x563
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xea]
Exit stack: [V12, 0xea]

================================

Block 0x10f
[0x10f:0x120]
---
Predecessors: []
Successors: []
---
0x10f JUMPDEST
0x110 PUSH1 0x40
0x112 MLOAD
0x113 SWAP1
0x114 DUP2
0x115 MSTORE
0x116 PUSH1 0x20
0x118 ADD
0x119 PUSH1 0x40
0x11b MLOAD
0x11c DUP1
0x11d SWAP2
0x11e SUB
0x11f SWAP1
0x120 RETURN
---
0x10f: JUMPDEST 
0x110: V83 = 0x40
0x112: V84 = M[0x40]
0x115: M[V84] = S0
0x116: V85 = 0x20
0x118: V86 = ADD 0x20 V84
0x119: V87 = 0x40
0x11b: V88 = M[0x40]
0x11e: V89 = SUB V86 V88
0x120: RETURN V88 V89
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x121
[0x121:0x127]
---
Predecessors: [0x30]
Successors: [0x128, 0x12c]
---
0x121 JUMPDEST
0x122 CALLVALUE
0x123 ISZERO
0x124 PUSH2 0x12c
0x127 JUMPI
---
0x121: JUMPDEST 
0x122: V90 = CALLVALUE
0x123: V91 = ISZERO V90
0x124: V92 = 0x12c
0x127: JUMPI 0x12c V91
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x128
[0x128:0x12b]
---
Predecessors: [0x121]
Successors: []
---
0x128 PUSH1 0x0
0x12a DUP1
0x12b REVERT
---
0x128: V93 = 0x0
0x12b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12c
[0x12c:0x133]
---
Predecessors: [0x121]
Successors: [0x569]
---
0x12c JUMPDEST
0x12d PUSH2 0xea
0x130 PUSH2 0x569
0x133 JUMP
---
0x12c: JUMPDEST 
0x12d: V94 = 0xea
0x130: V95 = 0x569
0x133: JUMP 0x569
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xea]
Exit stack: [V12, 0xea]

================================

Block 0x134
[0x134:0x145]
---
Predecessors: []
Successors: []
---
0x134 JUMPDEST
0x135 PUSH1 0x40
0x137 MLOAD
0x138 SWAP1
0x139 DUP2
0x13a MSTORE
0x13b PUSH1 0x20
0x13d ADD
0x13e PUSH1 0x40
0x140 MLOAD
0x141 DUP1
0x142 SWAP2
0x143 SUB
0x144 SWAP1
0x145 RETURN
---
0x134: JUMPDEST 
0x135: V96 = 0x40
0x137: V97 = M[0x40]
0x13a: M[V97] = S0
0x13b: V98 = 0x20
0x13d: V99 = ADD 0x20 V97
0x13e: V100 = 0x40
0x140: V101 = M[0x40]
0x143: V102 = SUB V99 V101
0x145: RETURN V101 V102
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x146
[0x146:0x14c]
---
Predecessors: [0x3b]
Successors: [0x14d, 0x151]
---
0x146 JUMPDEST
0x147 CALLVALUE
0x148 ISZERO
0x149 PUSH2 0x151
0x14c JUMPI
---
0x146: JUMPDEST 
0x147: V103 = CALLVALUE
0x148: V104 = ISZERO V103
0x149: V105 = 0x151
0x14c: JUMPI 0x151 V104
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14d
[0x14d:0x150]
---
Predecessors: [0x146]
Successors: []
---
0x14d PUSH1 0x0
0x14f DUP1
0x150 REVERT
---
0x14d: V106 = 0x0
0x150: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x151
[0x151:0x158]
---
Predecessors: [0x146]
Successors: [0x56f]
---
0x151 JUMPDEST
0x152 PUSH2 0xd4
0x155 PUSH2 0x56f
0x158 JUMP
---
0x151: JUMPDEST 
0x152: V107 = 0xd4
0x155: V108 = 0x56f
0x158: JUMP 0x56f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0x159
[0x159:0x15a]
---
Predecessors: []
Successors: []
---
0x159 JUMPDEST
0x15a STOP
---
0x159: JUMPDEST 
0x15a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15b
[0x15b:0x161]
---
Predecessors: [0x46]
Successors: [0x162, 0x166]
---
0x15b JUMPDEST
0x15c CALLVALUE
0x15d ISZERO
0x15e PUSH2 0x166
0x161 JUMPI
---
0x15b: JUMPDEST 
0x15c: V109 = CALLVALUE
0x15d: V110 = ISZERO V109
0x15e: V111 = 0x166
0x161: JUMPI 0x166 V110
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x162
[0x162:0x165]
---
Predecessors: [0x15b]
Successors: []
---
0x162 PUSH1 0x0
0x164 DUP1
0x165 REVERT
---
0x162: V112 = 0x0
0x165: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x166
[0x166:0x16d]
---
Predecessors: [0x15b]
Successors: [0x60e]
---
0x166 JUMPDEST
0x167 PUSH2 0xd4
0x16a PUSH2 0x60e
0x16d JUMP
---
0x166: JUMPDEST 
0x167: V113 = 0xd4
0x16a: V114 = 0x60e
0x16d: JUMP 0x60e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0x16e
[0x16e:0x16f]
---
Predecessors: []
Successors: []
---
0x16e JUMPDEST
0x16f STOP
---
0x16e: JUMPDEST 
0x16f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x170
[0x170:0x176]
---
Predecessors: [0x51]
Successors: [0x177, 0x17b]
---
0x170 JUMPDEST
0x171 CALLVALUE
0x172 ISZERO
0x173 PUSH2 0x17b
0x176 JUMPI
---
0x170: JUMPDEST 
0x171: V115 = CALLVALUE
0x172: V116 = ISZERO V115
0x173: V117 = 0x17b
0x176: JUMPI 0x17b V116
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x177
[0x177:0x17a]
---
Predecessors: [0x170]
Successors: []
---
0x177 PUSH1 0x0
0x179 DUP1
0x17a REVERT
---
0x177: V118 = 0x0
0x17a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17b
[0x17b:0x182]
---
Predecessors: [0x170]
Successors: [0x690]
---
0x17b JUMPDEST
0x17c PUSH2 0xea
0x17f PUSH2 0x690
0x182 JUMP
---
0x17b: JUMPDEST 
0x17c: V119 = 0xea
0x17f: V120 = 0x690
0x182: JUMP 0x690
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xea]
Exit stack: [V12, 0xea]

================================

Block 0x183
[0x183:0x194]
---
Predecessors: []
Successors: []
---
0x183 JUMPDEST
0x184 PUSH1 0x40
0x186 MLOAD
0x187 SWAP1
0x188 DUP2
0x189 MSTORE
0x18a PUSH1 0x20
0x18c ADD
0x18d PUSH1 0x40
0x18f MLOAD
0x190 DUP1
0x191 SWAP2
0x192 SUB
0x193 SWAP1
0x194 RETURN
---
0x183: JUMPDEST 
0x184: V121 = 0x40
0x186: V122 = M[0x40]
0x189: M[V122] = S0
0x18a: V123 = 0x20
0x18c: V124 = ADD 0x20 V122
0x18d: V125 = 0x40
0x18f: V126 = M[0x40]
0x192: V127 = SUB V124 V126
0x194: RETURN V126 V127
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x195
[0x195:0x19b]
---
Predecessors: [0x5c]
Successors: [0x19c, 0x1a0]
---
0x195 JUMPDEST
0x196 CALLVALUE
0x197 ISZERO
0x198 PUSH2 0x1a0
0x19b JUMPI
---
0x195: JUMPDEST 
0x196: V128 = CALLVALUE
0x197: V129 = ISZERO V128
0x198: V130 = 0x1a0
0x19b: JUMPI 0x1a0 V129
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19c
[0x19c:0x19f]
---
Predecessors: [0x195]
Successors: []
---
0x19c PUSH1 0x0
0x19e DUP1
0x19f REVERT
---
0x19c: V131 = 0x0
0x19f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a0
[0x1a0:0x1a7]
---
Predecessors: [0x195]
Successors: [0x696]
---
0x1a0 JUMPDEST
0x1a1 PUSH2 0x1a8
0x1a4 PUSH2 0x696
0x1a7 JUMP
---
0x1a0: JUMPDEST 
0x1a1: V132 = 0x1a8
0x1a4: V133 = 0x696
0x1a7: JUMP 0x696
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a8]
Exit stack: [V12, 0x1a8]

================================

Block 0x1a8
[0x1a8:0x1c3]
---
Predecessors: [0x696, 0x742, 0x751, 0x81c]
Successors: []
---
0x1a8 JUMPDEST
0x1a9 PUSH1 0x40
0x1ab MLOAD
0x1ac PUSH1 0x1
0x1ae PUSH1 0xa0
0x1b0 PUSH1 0x2
0x1b2 EXP
0x1b3 SUB
0x1b4 SWAP1
0x1b5 SWAP2
0x1b6 AND
0x1b7 DUP2
0x1b8 MSTORE
0x1b9 PUSH1 0x20
0x1bb ADD
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf DUP1
0x1c0 SWAP2
0x1c1 SUB
0x1c2 SWAP1
0x1c3 RETURN
---
0x1a8: JUMPDEST 
0x1a9: V134 = 0x40
0x1ab: V135 = M[0x40]
0x1ac: V136 = 0x1
0x1ae: V137 = 0xa0
0x1b0: V138 = 0x2
0x1b2: V139 = EXP 0x2 0xa0
0x1b3: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b6: V141 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1b8: M[V135] = V141
0x1b9: V142 = 0x20
0x1bb: V143 = ADD 0x20 V135
0x1bc: V144 = 0x40
0x1be: V145 = M[0x40]
0x1c1: V146 = SUB V143 V145
0x1c3: RETURN V145 V146
---
Entry stack: [V12, 0x1a8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1a8]

================================

Block 0x1c4
[0x1c4:0x1ca]
---
Predecessors: [0x67]
Successors: [0x1cb, 0x1cf]
---
0x1c4 JUMPDEST
0x1c5 CALLVALUE
0x1c6 ISZERO
0x1c7 PUSH2 0x1cf
0x1ca JUMPI
---
0x1c4: JUMPDEST 
0x1c5: V147 = CALLVALUE
0x1c6: V148 = ISZERO V147
0x1c7: V149 = 0x1cf
0x1ca: JUMPI 0x1cf V148
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1cb
[0x1cb:0x1ce]
---
Predecessors: [0x1c4]
Successors: []
---
0x1cb PUSH1 0x0
0x1cd DUP1
0x1ce REVERT
---
0x1cb: V150 = 0x0
0x1ce: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1cf
[0x1cf:0x1d6]
---
Predecessors: [0x1c4]
Successors: [0x6a5]
---
0x1cf JUMPDEST
0x1d0 PUSH2 0x1d7
0x1d3 PUSH2 0x6a5
0x1d6 JUMP
---
0x1cf: JUMPDEST 
0x1d0: V151 = 0x1d7
0x1d3: V152 = 0x6a5
0x1d6: JUMP 0x6a5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d7]
Exit stack: [V12, 0x1d7]

================================

Block 0x1d7
[0x1d7:0x1ea]
---
Predecessors: [0x6a5, 0x77f]
Successors: []
---
0x1d7 JUMPDEST
0x1d8 PUSH1 0x40
0x1da MLOAD
0x1db SWAP1
0x1dc ISZERO
0x1dd ISZERO
0x1de DUP2
0x1df MSTORE
0x1e0 PUSH1 0x20
0x1e2 ADD
0x1e3 PUSH1 0x40
0x1e5 MLOAD
0x1e6 DUP1
0x1e7 SWAP2
0x1e8 SUB
0x1e9 SWAP1
0x1ea RETURN
---
0x1d7: JUMPDEST 
0x1d8: V153 = 0x40
0x1da: V154 = M[0x40]
0x1dc: V155 = ISZERO S0
0x1dd: V156 = ISZERO V155
0x1df: M[V154] = V156
0x1e0: V157 = 0x20
0x1e2: V158 = ADD 0x20 V154
0x1e3: V159 = 0x40
0x1e5: V160 = M[0x40]
0x1e8: V161 = SUB V158 V160
0x1ea: RETURN V160 V161
---
Entry stack: [V12, 0xd4, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xd4, S4, S3, S2, S1]

================================

Block 0x1eb
[0x1eb:0x1f1]
---
Predecessors: [0x72]
Successors: [0x1f2, 0x1f6]
---
0x1eb JUMPDEST
0x1ec CALLVALUE
0x1ed ISZERO
0x1ee PUSH2 0x1f6
0x1f1 JUMPI
---
0x1eb: JUMPDEST 
0x1ec: V162 = CALLVALUE
0x1ed: V163 = ISZERO V162
0x1ee: V164 = 0x1f6
0x1f1: JUMPI 0x1f6 V163
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f2
[0x1f2:0x1f5]
---
Predecessors: [0x1eb]
Successors: []
---
0x1f2 PUSH1 0x0
0x1f4 DUP1
0x1f5 REVERT
---
0x1f2: V165 = 0x0
0x1f5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f6
[0x1f6:0x1fd]
---
Predecessors: [0x1eb]
Successors: [0x6b5]
---
0x1f6 JUMPDEST
0x1f7 PUSH2 0xea
0x1fa PUSH2 0x6b5
0x1fd JUMP
---
0x1f6: JUMPDEST 
0x1f7: V166 = 0xea
0x1fa: V167 = 0x6b5
0x1fd: JUMP 0x6b5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xea]
Exit stack: [V12, 0xea]

================================

Block 0x1fe
[0x1fe:0x20f]
---
Predecessors: []
Successors: []
---
0x1fe JUMPDEST
0x1ff PUSH1 0x40
0x201 MLOAD
0x202 SWAP1
0x203 DUP2
0x204 MSTORE
0x205 PUSH1 0x20
0x207 ADD
0x208 PUSH1 0x40
0x20a MLOAD
0x20b DUP1
0x20c SWAP2
0x20d SUB
0x20e SWAP1
0x20f RETURN
---
0x1fe: JUMPDEST 
0x1ff: V168 = 0x40
0x201: V169 = M[0x40]
0x204: M[V169] = S0
0x205: V170 = 0x20
0x207: V171 = ADD 0x20 V169
0x208: V172 = 0x40
0x20a: V173 = M[0x40]
0x20d: V174 = SUB V171 V173
0x20f: RETURN V173 V174
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x210
[0x210:0x216]
---
Predecessors: [0x7d]
Successors: [0x217, 0x21b]
---
0x210 JUMPDEST
0x211 CALLVALUE
0x212 ISZERO
0x213 PUSH2 0x21b
0x216 JUMPI
---
0x210: JUMPDEST 
0x211: V175 = CALLVALUE
0x212: V176 = ISZERO V175
0x213: V177 = 0x21b
0x216: JUMPI 0x21b V176
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x217
[0x217:0x21a]
---
Predecessors: [0x210]
Successors: []
---
0x217 PUSH1 0x0
0x219 DUP1
0x21a REVERT
---
0x217: V178 = 0x0
0x21a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21b
[0x21b:0x222]
---
Predecessors: [0x210]
Successors: [0x6bb]
---
0x21b JUMPDEST
0x21c PUSH2 0xd4
0x21f PUSH2 0x6bb
0x222 JUMP
---
0x21b: JUMPDEST 
0x21c: V179 = 0xd4
0x21f: V180 = 0x6bb
0x222: JUMP 0x6bb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0x223
[0x223:0x224]
---
Predecessors: []
Successors: []
---
0x223 JUMPDEST
0x224 STOP
---
0x223: JUMPDEST 
0x224: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x225
[0x225:0x22b]
---
Predecessors: [0x88]
Successors: [0x22c, 0x230]
---
0x225 JUMPDEST
0x226 CALLVALUE
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x225: JUMPDEST 
0x226: V181 = CALLVALUE
0x227: V182 = ISZERO V181
0x228: V183 = 0x230
0x22b: JUMPI 0x230 V182
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x225]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V184 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x230
[0x230:0x237]
---
Predecessors: [0x225]
Successors: [0x742]
---
0x230 JUMPDEST
0x231 PUSH2 0x1a8
0x234 PUSH2 0x742
0x237 JUMP
---
0x230: JUMPDEST 
0x231: V185 = 0x1a8
0x234: V186 = 0x742
0x237: JUMP 0x742
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a8]
Exit stack: [V12, 0x1a8]

================================

Block 0x238
[0x238:0x253]
---
Predecessors: []
Successors: []
---
0x238 JUMPDEST
0x239 PUSH1 0x40
0x23b MLOAD
0x23c PUSH1 0x1
0x23e PUSH1 0xa0
0x240 PUSH1 0x2
0x242 EXP
0x243 SUB
0x244 SWAP1
0x245 SWAP2
0x246 AND
0x247 DUP2
0x248 MSTORE
0x249 PUSH1 0x20
0x24b ADD
0x24c PUSH1 0x40
0x24e MLOAD
0x24f DUP1
0x250 SWAP2
0x251 SUB
0x252 SWAP1
0x253 RETURN
---
0x238: JUMPDEST 
0x239: V187 = 0x40
0x23b: V188 = M[0x40]
0x23c: V189 = 0x1
0x23e: V190 = 0xa0
0x240: V191 = 0x2
0x242: V192 = EXP 0x2 0xa0
0x243: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x246: V194 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x248: M[V188] = V194
0x249: V195 = 0x20
0x24b: V196 = ADD 0x20 V188
0x24c: V197 = 0x40
0x24e: V198 = M[0x40]
0x251: V199 = SUB V196 V198
0x253: RETURN V198 V199
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x254
[0x254:0x25a]
---
Predecessors: [0x93]
Successors: [0x25b, 0x25f]
---
0x254 JUMPDEST
0x255 CALLVALUE
0x256 ISZERO
0x257 PUSH2 0x25f
0x25a JUMPI
---
0x254: JUMPDEST 
0x255: V200 = CALLVALUE
0x256: V201 = ISZERO V200
0x257: V202 = 0x25f
0x25a: JUMPI 0x25f V201
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25b
[0x25b:0x25e]
---
Predecessors: [0x254]
Successors: []
---
0x25b PUSH1 0x0
0x25d DUP1
0x25e REVERT
---
0x25b: V203 = 0x0
0x25e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25f
[0x25f:0x266]
---
Predecessors: [0x254]
Successors: [0x751]
---
0x25f JUMPDEST
0x260 PUSH2 0x1a8
0x263 PUSH2 0x751
0x266 JUMP
---
0x25f: JUMPDEST 
0x260: V204 = 0x1a8
0x263: V205 = 0x751
0x266: JUMP 0x751
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a8]
Exit stack: [V12, 0x1a8]

================================

Block 0x267
[0x267:0x282]
---
Predecessors: []
Successors: []
---
0x267 JUMPDEST
0x268 PUSH1 0x40
0x26a MLOAD
0x26b PUSH1 0x1
0x26d PUSH1 0xa0
0x26f PUSH1 0x2
0x271 EXP
0x272 SUB
0x273 SWAP1
0x274 SWAP2
0x275 AND
0x276 DUP2
0x277 MSTORE
0x278 PUSH1 0x20
0x27a ADD
0x27b PUSH1 0x40
0x27d MLOAD
0x27e DUP1
0x27f SWAP2
0x280 SUB
0x281 SWAP1
0x282 RETURN
---
0x267: JUMPDEST 
0x268: V206 = 0x40
0x26a: V207 = M[0x40]
0x26b: V208 = 0x1
0x26d: V209 = 0xa0
0x26f: V210 = 0x2
0x271: V211 = EXP 0x2 0xa0
0x272: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x275: V213 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x277: M[V207] = V213
0x278: V214 = 0x20
0x27a: V215 = ADD 0x20 V207
0x27b: V216 = 0x40
0x27d: V217 = M[0x40]
0x280: V218 = SUB V215 V217
0x282: RETURN V217 V218
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x283
[0x283:0x296]
---
Predecessors: [0x9e]
Successors: [0x310]
---
0x283 JUMPDEST
0x284 PUSH2 0xd4
0x287 PUSH1 0x1
0x289 PUSH1 0xa0
0x28b PUSH1 0x2
0x28d EXP
0x28e SUB
0x28f PUSH1 0x4
0x291 CALLDATALOAD
0x292 AND
0x293 PUSH2 0x310
0x296 JUMP
---
0x283: JUMPDEST 
0x284: V219 = 0xd4
0x287: V220 = 0x1
0x289: V221 = 0xa0
0x28b: V222 = 0x2
0x28d: V223 = EXP 0x2 0xa0
0x28e: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28f: V225 = 0x4
0x291: V226 = CALLDATALOAD 0x4
0x292: V227 = AND V226 0xffffffffffffffffffffffffffffffffffffffff
0x293: V228 = 0x310
0x296: JUMP 0x310
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4, V227]
Exit stack: [V12, 0xd4, V227]

================================

Block 0x297
[0x297:0x298]
---
Predecessors: []
Successors: []
---
0x297 JUMPDEST
0x298 STOP
---
0x297: JUMPDEST 
0x298: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x299
[0x299:0x29f]
---
Predecessors: [0xa9]
Successors: [0x2a0, 0x2a4]
---
0x299 JUMPDEST
0x29a CALLVALUE
0x29b ISZERO
0x29c PUSH2 0x2a4
0x29f JUMPI
---
0x299: JUMPDEST 
0x29a: V229 = CALLVALUE
0x29b: V230 = ISZERO V229
0x29c: V231 = 0x2a4
0x29f: JUMPI 0x2a4 V230
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a0
[0x2a0:0x2a3]
---
Predecessors: [0x299]
Successors: []
---
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 REVERT
---
0x2a0: V232 = 0x0
0x2a3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a4
[0x2a4:0x2ab]
---
Predecessors: [0x299]
Successors: [0x760]
---
0x2a4 JUMPDEST
0x2a5 PUSH2 0x1d7
0x2a8 PUSH2 0x760
0x2ab JUMP
---
0x2a4: JUMPDEST 
0x2a5: V233 = 0x1d7
0x2a8: V234 = 0x760
0x2ab: JUMP 0x760
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d7]
Exit stack: [V12, 0x1d7]

================================

Block 0x2ac
[0x2ac:0x2bf]
---
Predecessors: []
Successors: []
---
0x2ac JUMPDEST
0x2ad PUSH1 0x40
0x2af MLOAD
0x2b0 SWAP1
0x2b1 ISZERO
0x2b2 ISZERO
0x2b3 DUP2
0x2b4 MSTORE
0x2b5 PUSH1 0x20
0x2b7 ADD
0x2b8 PUSH1 0x40
0x2ba MLOAD
0x2bb DUP1
0x2bc SWAP2
0x2bd SUB
0x2be SWAP1
0x2bf RETURN
---
0x2ac: JUMPDEST 
0x2ad: V235 = 0x40
0x2af: V236 = M[0x40]
0x2b1: V237 = ISZERO S0
0x2b2: V238 = ISZERO V237
0x2b4: M[V236] = V238
0x2b5: V239 = 0x20
0x2b7: V240 = ADD 0x20 V236
0x2b8: V241 = 0x40
0x2ba: V242 = M[0x40]
0x2bd: V243 = SUB V240 V242
0x2bf: RETURN V242 V243
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c0
[0x2c0:0x2c6]
---
Predecessors: [0xb4]
Successors: [0x2c7, 0x2cb]
---
0x2c0 JUMPDEST
0x2c1 CALLVALUE
0x2c2 ISZERO
0x2c3 PUSH2 0x2cb
0x2c6 JUMPI
---
0x2c0: JUMPDEST 
0x2c1: V244 = CALLVALUE
0x2c2: V245 = ISZERO V244
0x2c3: V246 = 0x2cb
0x2c6: JUMPI 0x2cb V245
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c7
[0x2c7:0x2ca]
---
Predecessors: [0x2c0]
Successors: []
---
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca REVERT
---
0x2c7: V247 = 0x0
0x2ca: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2cb
[0x2cb:0x2de]
---
Predecessors: [0x2c0]
Successors: [0x783]
---
0x2cb JUMPDEST
0x2cc PUSH2 0xd4
0x2cf PUSH1 0x1
0x2d1 PUSH1 0xa0
0x2d3 PUSH1 0x2
0x2d5 EXP
0x2d6 SUB
0x2d7 PUSH1 0x4
0x2d9 CALLDATALOAD
0x2da AND
0x2db PUSH2 0x783
0x2de JUMP
---
0x2cb: JUMPDEST 
0x2cc: V248 = 0xd4
0x2cf: V249 = 0x1
0x2d1: V250 = 0xa0
0x2d3: V251 = 0x2
0x2d5: V252 = EXP 0x2 0xa0
0x2d6: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d7: V254 = 0x4
0x2d9: V255 = CALLDATALOAD 0x4
0x2da: V256 = AND V255 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V257 = 0x783
0x2de: JUMP 0x783
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4, V256]
Exit stack: [V12, 0xd4, V256]

================================

Block 0x2df
[0x2df:0x2e0]
---
Predecessors: []
Successors: []
---
0x2df JUMPDEST
0x2e0 STOP
---
0x2df: JUMPDEST 
0x2e0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2e1
[0x2e1:0x2e7]
---
Predecessors: [0xbf]
Successors: [0x2e8, 0x2ec]
---
0x2e1 JUMPDEST
0x2e2 CALLVALUE
0x2e3 ISZERO
0x2e4 PUSH2 0x2ec
0x2e7 JUMPI
---
0x2e1: JUMPDEST 
0x2e2: V258 = CALLVALUE
0x2e3: V259 = ISZERO V258
0x2e4: V260 = 0x2ec
0x2e7: JUMPI 0x2ec V259
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e8
[0x2e8:0x2eb]
---
Predecessors: [0x2e1]
Successors: []
---
0x2e8 PUSH1 0x0
0x2ea DUP1
0x2eb REVERT
---
0x2e8: V261 = 0x0
0x2eb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ec
[0x2ec:0x2f3]
---
Predecessors: [0x2e1]
Successors: [0x81c]
---
0x2ec JUMPDEST
0x2ed PUSH2 0x1a8
0x2f0 PUSH2 0x81c
0x2f3 JUMP
---
0x2ec: JUMPDEST 
0x2ed: V262 = 0x1a8
0x2f0: V263 = 0x81c
0x2f3: JUMP 0x81c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a8]
Exit stack: [V12, 0x1a8]

================================

Block 0x2f4
[0x2f4:0x30f]
---
Predecessors: []
Successors: []
---
0x2f4 JUMPDEST
0x2f5 PUSH1 0x40
0x2f7 MLOAD
0x2f8 PUSH1 0x1
0x2fa PUSH1 0xa0
0x2fc PUSH1 0x2
0x2fe EXP
0x2ff SUB
0x300 SWAP1
0x301 SWAP2
0x302 AND
0x303 DUP2
0x304 MSTORE
0x305 PUSH1 0x20
0x307 ADD
0x308 PUSH1 0x40
0x30a MLOAD
0x30b DUP1
0x30c SWAP2
0x30d SUB
0x30e SWAP1
0x30f RETURN
---
0x2f4: JUMPDEST 
0x2f5: V264 = 0x40
0x2f7: V265 = M[0x40]
0x2f8: V266 = 0x1
0x2fa: V267 = 0xa0
0x2fc: V268 = 0x2
0x2fe: V269 = EXP 0x2 0xa0
0x2ff: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x302: V271 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x304: M[V265] = V271
0x305: V272 = 0x20
0x307: V273 = ADD 0x20 V265
0x308: V274 = 0x40
0x30a: V275 = M[0x40]
0x30d: V276 = SUB V273 V275
0x30f: RETURN V275 V276
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x310
[0x310:0x329]
---
Predecessors: [0xcb, 0x283]
Successors: [0x32a, 0x32e]
---
0x310 JUMPDEST
0x311 PUSH1 0x7
0x313 SLOAD
0x314 PUSH1 0x0
0x316 SWAP1
0x317 DUP2
0x318 SWAP1
0x319 DUP2
0x31a SWAP1
0x31b PUSH1 0xa0
0x31d PUSH1 0x2
0x31f EXP
0x320 SWAP1
0x321 DIV
0x322 PUSH1 0xff
0x324 AND
0x325 ISZERO
0x326 PUSH2 0x32e
0x329 JUMPI
---
0x310: JUMPDEST 
0x311: V277 = 0x7
0x313: V278 = S[0x7]
0x314: V279 = 0x0
0x31b: V280 = 0xa0
0x31d: V281 = 0x2
0x31f: V282 = EXP 0x2 0xa0
0x321: V283 = DIV V278 0x10000000000000000000000000000000000000000
0x322: V284 = 0xff
0x324: V285 = AND 0xff V283
0x325: V286 = ISZERO V285
0x326: V287 = 0x32e
0x329: JUMPI 0x32e V286
---
Entry stack: [V12, 0xd4, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0xd4, S0, 0x0, 0x0, 0x0]

================================

Block 0x32a
[0x32a:0x32d]
---
Predecessors: [0x310]
Successors: []
---
0x32a PUSH1 0x0
0x32c DUP1
0x32d REVERT
---
0x32a: V288 = 0x0
0x32d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, S3, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, S3, 0x0, 0x0, 0x0]

================================

Block 0x32e
[0x32e:0x33e]
---
Predecessors: [0x310]
Successors: [0x33f, 0x343]
---
0x32e JUMPDEST
0x32f PUSH1 0x1
0x331 PUSH1 0xa0
0x333 PUSH1 0x2
0x335 EXP
0x336 SUB
0x337 DUP5
0x338 AND
0x339 ISZERO
0x33a ISZERO
0x33b PUSH2 0x343
0x33e JUMPI
---
0x32e: JUMPDEST 
0x32f: V289 = 0x1
0x331: V290 = 0xa0
0x333: V291 = 0x2
0x335: V292 = EXP 0x2 0xa0
0x336: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x338: V294 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x339: V295 = ISZERO V294
0x33a: V296 = ISZERO V295
0x33b: V297 = 0x343
0x33e: JUMPI 0x343 V296
---
Entry stack: [V12, 0xd4, S3, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0xd4, S3, 0x0, 0x0, 0x0]

================================

Block 0x33f
[0x33f:0x342]
---
Predecessors: [0x32e]
Successors: []
---
0x33f PUSH1 0x0
0x341 DUP1
0x342 REVERT
---
0x33f: V298 = 0x0
0x342: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, S3, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, S3, 0x0, 0x0, 0x0]

================================

Block 0x343
[0x343:0x34a]
---
Predecessors: [0x32e]
Successors: [0x82b]
---
0x343 JUMPDEST
0x344 PUSH2 0x34b
0x347 PUSH2 0x82b
0x34a JUMP
---
0x343: JUMPDEST 
0x344: V299 = 0x34b
0x347: V300 = 0x82b
0x34a: JUMP 0x82b
---
Entry stack: [V12, 0xd4, S3, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x34b]
Exit stack: [V12, 0xd4, S3, 0x0, 0x0, 0x0, 0x34b]

================================

Block 0x34b
[0x34b:0x351]
---
Predecessors: [0x557, 0x77f, 0x85e]
Successors: [0x352, 0x356]
---
0x34b JUMPDEST
0x34c ISZERO
0x34d ISZERO
0x34e PUSH2 0x356
0x351 JUMPI
---
0x34b: JUMPDEST 
0x34c: V301 = ISZERO S0
0x34d: V302 = ISZERO V301
0x34e: V303 = 0x356
0x351: JUMPI 0x356 V302
---
Entry stack: [V12, 0xd4, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xd4, S4, S3, S2, S1]

================================

Block 0x352
[0x352:0x355]
---
Predecessors: [0x34b]
Successors: []
---
0x352 PUSH1 0x0
0x354 DUP1
0x355 REVERT
---
0x352: V304 = 0x0
0x355: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, S3, S2, S1, S0]

================================

Block 0x356
[0x356:0x36c]
---
Predecessors: [0x34b]
Successors: [0x862]
---
0x356 JUMPDEST
0x357 PUSH1 0x4
0x359 SLOAD
0x35a CALLVALUE
0x35b SWAP4
0x35c POP
0x35d PUSH2 0x36d
0x360 SWAP1
0x361 DUP5
0x362 SWAP1
0x363 PUSH4 0xffffffff
0x368 PUSH2 0x862
0x36b AND
0x36c JUMP
---
0x356: JUMPDEST 
0x357: V305 = 0x4
0x359: V306 = S[0x4]
0x35a: V307 = CALLVALUE
0x35d: V308 = 0x36d
0x363: V309 = 0xffffffff
0x368: V310 = 0x862
0x36b: V311 = AND 0x862 0xffffffff
0x36c: JUMP 0x862
---
Entry stack: [V12, 0xd4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V307, S1, S0, 0x36d, V307, V306]
Exit stack: [V12, 0xd4, S3, V307, S1, S0, 0x36d, V307, V306]

================================

Block 0x36d
[0x36d:0x382]
---
Predecessors: [0x88a]
Successors: [0x891]
---
0x36d JUMPDEST
0x36e PUSH1 0x5
0x370 SLOAD
0x371 SWAP1
0x372 SWAP3
0x373 POP
0x374 PUSH2 0x383
0x377 SWAP1
0x378 DUP5
0x379 PUSH4 0xffffffff
0x37e PUSH2 0x891
0x381 AND
0x382 JUMP
---
0x36d: JUMPDEST 
0x36e: V312 = 0x5
0x370: V313 = S[0x5]
0x374: V314 = 0x383
0x379: V315 = 0xffffffff
0x37e: V316 = 0x891
0x381: V317 = AND 0x891 0xffffffff
0x382: JUMP 0x891
---
Entry stack: [S12, S11, V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S0, S1, 0x383, V313, S3]
Exit stack: [S12, S11, V12, S9, S8, S7, S6, S5, S4, S3, S0, S1, 0x383, V313, S3]

================================

Block 0x383
[0x383:0x3f3]
---
Predecessors: [0x88a]
Successors: [0x3f4, 0x3f8]
---
0x383 JUMPDEST
0x384 PUSH1 0x5
0x386 SSTORE
0x387 PUSH1 0xd
0x389 SLOAD
0x38a PUSH1 0x2
0x38c SLOAD
0x38d PUSH1 0x9
0x38f SLOAD
0x390 PUSH1 0xa
0x392 SLOAD
0x393 PUSH1 0x1
0x395 PUSH1 0xa0
0x397 PUSH1 0x2
0x399 EXP
0x39a SUB
0x39b SWAP1
0x39c SWAP4
0x39d AND
0x39e SWAP3
0x39f PUSH4 0x665a06f
0x3a4 SWAP3
0x3a5 DUP9
0x3a6 SWAP3
0x3a7 SWAP1
0x3a8 SWAP2
0x3a9 PUSH1 0x40
0x3ab MLOAD
0x3ac PUSH1 0xe0
0x3ae PUSH1 0x2
0x3b0 EXP
0x3b1 PUSH4 0xffffffff
0x3b6 DUP8
0x3b7 AND
0x3b8 MUL
0x3b9 DUP2
0x3ba MSTORE
0x3bb PUSH1 0x1
0x3bd PUSH1 0xa0
0x3bf PUSH1 0x2
0x3c1 EXP
0x3c2 SUB
0x3c3 SWAP1
0x3c4 SWAP5
0x3c5 AND
0x3c6 PUSH1 0x4
0x3c8 DUP6
0x3c9 ADD
0x3ca MSTORE
0x3cb PUSH1 0x24
0x3cd DUP5
0x3ce ADD
0x3cf SWAP3
0x3d0 SWAP1
0x3d1 SWAP3
0x3d2 MSTORE
0x3d3 PUSH1 0x44
0x3d5 DUP4
0x3d6 ADD
0x3d7 MSTORE
0x3d8 PUSH1 0x64
0x3da DUP3
0x3db ADD
0x3dc MSTORE
0x3dd PUSH1 0x84
0x3df ADD
0x3e0 PUSH1 0x0
0x3e2 PUSH1 0x40
0x3e4 MLOAD
0x3e5 DUP1
0x3e6 DUP4
0x3e7 SUB
0x3e8 DUP2
0x3e9 PUSH1 0x0
0x3eb DUP8
0x3ec DUP1
0x3ed EXTCODESIZE
0x3ee ISZERO
0x3ef ISZERO
0x3f0 PUSH2 0x3f8
0x3f3 JUMPI
---
0x383: JUMPDEST 
0x384: V318 = 0x5
0x386: S[0x5] = S0
0x387: V319 = 0xd
0x389: V320 = S[0xd]
0x38a: V321 = 0x2
0x38c: V322 = S[0x2]
0x38d: V323 = 0x9
0x38f: V324 = S[0x9]
0x390: V325 = 0xa
0x392: V326 = S[0xa]
0x393: V327 = 0x1
0x395: V328 = 0xa0
0x397: V329 = 0x2
0x399: V330 = EXP 0x2 0xa0
0x39a: V331 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39d: V332 = AND V320 0xffffffffffffffffffffffffffffffffffffffff
0x39f: V333 = 0x665a06f
0x3a9: V334 = 0x40
0x3ab: V335 = M[0x40]
0x3ac: V336 = 0xe0
0x3ae: V337 = 0x2
0x3b0: V338 = EXP 0x2 0xe0
0x3b1: V339 = 0xffffffff
0x3b7: V340 = AND 0x665a06f 0xffffffff
0x3b8: V341 = MUL 0x665a06f 0x100000000000000000000000000000000000000000000000000000000
0x3ba: M[V335] = 0x665a06f00000000000000000000000000000000000000000000000000000000
0x3bb: V342 = 0x1
0x3bd: V343 = 0xa0
0x3bf: V344 = 0x2
0x3c1: V345 = EXP 0x2 0xa0
0x3c2: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c5: V347 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x3c6: V348 = 0x4
0x3c9: V349 = ADD V335 0x4
0x3ca: M[V349] = V347
0x3cb: V350 = 0x24
0x3ce: V351 = ADD V335 0x24
0x3d2: M[V351] = V322
0x3d3: V352 = 0x44
0x3d6: V353 = ADD V335 0x44
0x3d7: M[V353] = V324
0x3d8: V354 = 0x64
0x3db: V355 = ADD V335 0x64
0x3dc: M[V355] = V326
0x3dd: V356 = 0x84
0x3df: V357 = ADD 0x84 V335
0x3e0: V358 = 0x0
0x3e2: V359 = 0x40
0x3e4: V360 = M[0x40]
0x3e7: V361 = SUB V357 V360
0x3e9: V362 = 0x0
0x3ed: V363 = EXTCODESIZE V332
0x3ee: V364 = ISZERO V363
0x3ef: V365 = ISZERO V364
0x3f0: V366 = 0x3f8
0x3f3: JUMPI 0x3f8 V365
---
Entry stack: [S12, S11, V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V332, 0x665a06f, V357, 0x0, V360, V361, V360, 0x0, V332]
Exit stack: [S8, S7, S6, S5, S4, S3, S2, S1, V332, 0x665a06f, V357, 0x0, V360, V361, V360, 0x0, V332]

================================

Block 0x3f4
[0x3f4:0x3f7]
---
Predecessors: [0x383]
Successors: []
---
0x3f4 PUSH1 0x0
0x3f6 DUP1
0x3f7 REVERT
---
0x3f4: V367 = 0x0
0x3f7: REVERT 0x0 0x0
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, V332, 0x665a06f, V357, 0x0, V360, V361, V360, 0x0, V332]
Stack pops: 0
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, V332, 0x665a06f, V357, 0x0, V360, V361, V360, 0x0, V332]

================================

Block 0x3f8
[0x3f8:0x404]
---
Predecessors: [0x383]
Successors: [0x405, 0x409]
---
0x3f8 JUMPDEST
0x3f9 PUSH2 0x2c6
0x3fc GAS
0x3fd SUB
0x3fe CALL
0x3ff ISZERO
0x400 ISZERO
0x401 PUSH2 0x409
0x404 JUMPI
---
0x3f8: JUMPDEST 
0x3f9: V368 = 0x2c6
0x3fc: V369 = GAS
0x3fd: V370 = SUB V369 0x2c6
0x3fe: V371 = CALL V370 V332 0x0 V360 V361 V360 0x0
0x3ff: V372 = ISZERO V371
0x400: V373 = ISZERO V372
0x401: V374 = 0x409
0x404: JUMPI 0x409 V373
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, V332, 0x665a06f, V357, 0x0, V360, V361, V360, 0x0, V332]
Stack pops: 6
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, V332, 0x665a06f, V357]

================================

Block 0x405
[0x405:0x408]
---
Predecessors: [0x3f8]
Successors: []
---
0x405 PUSH1 0x0
0x407 DUP1
0x408 REVERT
---
0x405: V375 = 0x0
0x408: REVERT 0x0 0x0
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, V332, 0x665a06f, V357]
Stack pops: 0
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, V332, 0x665a06f, V357]

================================

Block 0x409
[0x409:0x461]
---
Predecessors: [0x3f8]
Successors: [0x462, 0x466]
---
0x409 JUMPDEST
0x40a POP
0x40b POP
0x40c PUSH1 0xd
0x40e SLOAD
0x40f PUSH1 0x1
0x411 PUSH1 0xa0
0x413 PUSH1 0x2
0x415 EXP
0x416 SUB
0x417 AND
0x418 SWAP1
0x419 POP
0x41a PUSH4 0xcc49ede7
0x41f DUP6
0x420 PUSH1 0x0
0x422 PUSH1 0x40
0x424 MLOAD
0x425 PUSH1 0x20
0x427 ADD
0x428 MSTORE
0x429 PUSH1 0x40
0x42b MLOAD
0x42c PUSH1 0xe0
0x42e PUSH1 0x2
0x430 EXP
0x431 PUSH4 0xffffffff
0x436 DUP5
0x437 AND
0x438 MUL
0x439 DUP2
0x43a MSTORE
0x43b PUSH1 0x1
0x43d PUSH1 0xa0
0x43f PUSH1 0x2
0x441 EXP
0x442 SUB
0x443 SWAP1
0x444 SWAP2
0x445 AND
0x446 PUSH1 0x4
0x448 DUP3
0x449 ADD
0x44a MSTORE
0x44b PUSH1 0x24
0x44d ADD
0x44e PUSH1 0x20
0x450 PUSH1 0x40
0x452 MLOAD
0x453 DUP1
0x454 DUP4
0x455 SUB
0x456 DUP2
0x457 PUSH1 0x0
0x459 DUP8
0x45a DUP1
0x45b EXTCODESIZE
0x45c ISZERO
0x45d ISZERO
0x45e PUSH2 0x466
0x461 JUMPI
---
0x409: JUMPDEST 
0x40c: V376 = 0xd
0x40e: V377 = S[0xd]
0x40f: V378 = 0x1
0x411: V379 = 0xa0
0x413: V380 = 0x2
0x415: V381 = EXP 0x2 0xa0
0x416: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x417: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x41a: V384 = 0xcc49ede7
0x420: V385 = 0x0
0x422: V386 = 0x40
0x424: V387 = M[0x40]
0x425: V388 = 0x20
0x427: V389 = ADD 0x20 V387
0x428: M[V389] = 0x0
0x429: V390 = 0x40
0x42b: V391 = M[0x40]
0x42c: V392 = 0xe0
0x42e: V393 = 0x2
0x430: V394 = EXP 0x2 0xe0
0x431: V395 = 0xffffffff
0x437: V396 = AND 0xcc49ede7 0xffffffff
0x438: V397 = MUL 0xcc49ede7 0x100000000000000000000000000000000000000000000000000000000
0x43a: M[V391] = 0xcc49ede700000000000000000000000000000000000000000000000000000000
0x43b: V398 = 0x1
0x43d: V399 = 0xa0
0x43f: V400 = 0x2
0x441: V401 = EXP 0x2 0xa0
0x442: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x445: V403 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x446: V404 = 0x4
0x449: V405 = ADD V391 0x4
0x44a: M[V405] = V403
0x44b: V406 = 0x24
0x44d: V407 = ADD 0x24 V391
0x44e: V408 = 0x20
0x450: V409 = 0x40
0x452: V410 = M[0x40]
0x455: V411 = SUB V407 V410
0x457: V412 = 0x0
0x45b: V413 = EXTCODESIZE V383
0x45c: V414 = ISZERO V413
0x45d: V415 = ISZERO V414
0x45e: V416 = 0x466
0x461: JUMPI 0x466 V415
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, V332, 0x665a06f, V357]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V383, 0xcc49ede7, V407, 0x20, V410, V411, V410, 0x0, V383]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, V383, 0xcc49ede7, V407, 0x20, V410, V411, V410, 0x0, V383]

================================

Block 0x462
[0x462:0x465]
---
Predecessors: [0x409]
Successors: []
---
0x462 PUSH1 0x0
0x464 DUP1
0x465 REVERT
---
0x462: V417 = 0x0
0x465: REVERT 0x0 0x0
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, V383, 0xcc49ede7, V407, 0x20, V410, V411, V410, 0x0, V383]
Stack pops: 0
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, V383, 0xcc49ede7, V407, 0x20, V410, V411, V410, 0x0, V383]

================================

Block 0x466
[0x466:0x472]
---
Predecessors: [0x409]
Successors: [0x473, 0x477]
---
0x466 JUMPDEST
0x467 PUSH2 0x2c6
0x46a GAS
0x46b SUB
0x46c CALL
0x46d ISZERO
0x46e ISZERO
0x46f PUSH2 0x477
0x472 JUMPI
---
0x466: JUMPDEST 
0x467: V418 = 0x2c6
0x46a: V419 = GAS
0x46b: V420 = SUB V419 0x2c6
0x46c: V421 = CALL V420 V383 0x0 V410 V411 V410 0x20
0x46d: V422 = ISZERO V421
0x46e: V423 = ISZERO V422
0x46f: V424 = 0x477
0x472: JUMPI 0x477 V423
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, V383, 0xcc49ede7, V407, 0x20, V410, V411, V410, 0x0, V383]
Stack pops: 6
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, V383, 0xcc49ede7, V407]

================================

Block 0x473
[0x473:0x476]
---
Predecessors: [0x466]
Successors: []
---
0x473 PUSH1 0x0
0x475 DUP1
0x476 REVERT
---
0x473: V425 = 0x0
0x476: REVERT 0x0 0x0
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, V383, 0xcc49ede7, V407]
Stack pops: 0
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, V383, 0xcc49ede7, V407]

================================

Block 0x477
[0x477:0x4de]
---
Predecessors: [0x466]
Successors: [0x4df, 0x4e3]
---
0x477 JUMPDEST
0x478 POP
0x479 POP
0x47a POP
0x47b PUSH1 0x40
0x47d MLOAD
0x47e DUP1
0x47f MLOAD
0x480 PUSH1 0xc
0x482 SLOAD
0x483 SWAP1
0x484 SWAP3
0x485 POP
0x486 PUSH1 0x1
0x488 PUSH1 0xa0
0x48a PUSH1 0x2
0x48c EXP
0x48d SUB
0x48e AND
0x48f SWAP1
0x490 POP
0x491 PUSH4 0x40c10f19
0x496 DUP3
0x497 DUP5
0x498 PUSH1 0x0
0x49a PUSH1 0x40
0x49c MLOAD
0x49d PUSH1 0x20
0x49f ADD
0x4a0 MSTORE
0x4a1 PUSH1 0x40
0x4a3 MLOAD
0x4a4 PUSH1 0xe0
0x4a6 PUSH1 0x2
0x4a8 EXP
0x4a9 PUSH4 0xffffffff
0x4ae DUP6
0x4af AND
0x4b0 MUL
0x4b1 DUP2
0x4b2 MSTORE
0x4b3 PUSH1 0x1
0x4b5 PUSH1 0xa0
0x4b7 PUSH1 0x2
0x4b9 EXP
0x4ba SUB
0x4bb SWAP1
0x4bc SWAP3
0x4bd AND
0x4be PUSH1 0x4
0x4c0 DUP4
0x4c1 ADD
0x4c2 MSTORE
0x4c3 PUSH1 0x24
0x4c5 DUP3
0x4c6 ADD
0x4c7 MSTORE
0x4c8 PUSH1 0x44
0x4ca ADD
0x4cb PUSH1 0x20
0x4cd PUSH1 0x40
0x4cf MLOAD
0x4d0 DUP1
0x4d1 DUP4
0x4d2 SUB
0x4d3 DUP2
0x4d4 PUSH1 0x0
0x4d6 DUP8
0x4d7 DUP1
0x4d8 EXTCODESIZE
0x4d9 ISZERO
0x4da ISZERO
0x4db PUSH2 0x4e3
0x4de JUMPI
---
0x477: JUMPDEST 
0x47b: V426 = 0x40
0x47d: V427 = M[0x40]
0x47f: V428 = M[V427]
0x480: V429 = 0xc
0x482: V430 = S[0xc]
0x486: V431 = 0x1
0x488: V432 = 0xa0
0x48a: V433 = 0x2
0x48c: V434 = EXP 0x2 0xa0
0x48d: V435 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48e: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x491: V437 = 0x40c10f19
0x498: V438 = 0x0
0x49a: V439 = 0x40
0x49c: V440 = M[0x40]
0x49d: V441 = 0x20
0x49f: V442 = ADD 0x20 V440
0x4a0: M[V442] = 0x0
0x4a1: V443 = 0x40
0x4a3: V444 = M[0x40]
0x4a4: V445 = 0xe0
0x4a6: V446 = 0x2
0x4a8: V447 = EXP 0x2 0xe0
0x4a9: V448 = 0xffffffff
0x4af: V449 = AND 0x40c10f19 0xffffffff
0x4b0: V450 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x4b2: M[V444] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x4b3: V451 = 0x1
0x4b5: V452 = 0xa0
0x4b7: V453 = 0x2
0x4b9: V454 = EXP 0x2 0xa0
0x4ba: V455 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bd: V456 = AND V428 0xffffffffffffffffffffffffffffffffffffffff
0x4be: V457 = 0x4
0x4c1: V458 = ADD V444 0x4
0x4c2: M[V458] = V456
0x4c3: V459 = 0x24
0x4c6: V460 = ADD V444 0x24
0x4c7: M[V460] = S4
0x4c8: V461 = 0x44
0x4ca: V462 = ADD 0x44 V444
0x4cb: V463 = 0x20
0x4cd: V464 = 0x40
0x4cf: V465 = M[0x40]
0x4d2: V466 = SUB V462 V465
0x4d4: V467 = 0x0
0x4d8: V468 = EXTCODESIZE V436
0x4d9: V469 = ISZERO V468
0x4da: V470 = ISZERO V469
0x4db: V471 = 0x4e3
0x4de: JUMPI 0x4e3 V470
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, V383, 0xcc49ede7, V407]
Stack pops: 5
Stack additions: [S4, V428, V436, 0x40c10f19, V462, 0x20, V465, V466, V465, 0x0, V436]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, V428, V436, 0x40c10f19, V462, 0x20, V465, V466, V465, 0x0, V436]

================================

Block 0x4df
[0x4df:0x4e2]
---
Predecessors: [0x477]
Successors: []
---
0x4df PUSH1 0x0
0x4e1 DUP1
0x4e2 REVERT
---
0x4df: V472 = 0x0
0x4e2: REVERT 0x0 0x0
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, V428, V436, 0x40c10f19, V462, 0x20, V465, V466, V465, 0x0, V436]
Stack pops: 0
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, V428, V436, 0x40c10f19, V462, 0x20, V465, V466, V465, 0x0, V436]

================================

Block 0x4e3
[0x4e3:0x4ef]
---
Predecessors: [0x477]
Successors: [0x4f0, 0x4f4]
---
0x4e3 JUMPDEST
0x4e4 PUSH2 0x2c6
0x4e7 GAS
0x4e8 SUB
0x4e9 CALL
0x4ea ISZERO
0x4eb ISZERO
0x4ec PUSH2 0x4f4
0x4ef JUMPI
---
0x4e3: JUMPDEST 
0x4e4: V473 = 0x2c6
0x4e7: V474 = GAS
0x4e8: V475 = SUB V474 0x2c6
0x4e9: V476 = CALL V475 V436 0x0 V465 V466 V465 0x20
0x4ea: V477 = ISZERO V476
0x4eb: V478 = ISZERO V477
0x4ec: V479 = 0x4f4
0x4ef: JUMPI 0x4f4 V478
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, V428, V436, 0x40c10f19, V462, 0x20, V465, V466, V465, 0x0, V436]
Stack pops: 6
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, V428, V436, 0x40c10f19, V462]

================================

Block 0x4f0
[0x4f0:0x4f3]
---
Predecessors: [0x4e3]
Successors: []
---
0x4f0 PUSH1 0x0
0x4f2 DUP1
0x4f3 REVERT
---
0x4f0: V480 = 0x0
0x4f3: REVERT 0x0 0x0
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, V428, V436, 0x40c10f19, V462]
Stack pops: 0
Stack additions: []
Exit stack: [S10, S9, S8, S7, S6, S5, S4, V428, V436, 0x40c10f19, V462]

================================

Block 0x4f4
[0x4f4:0x554]
---
Predecessors: [0x4e3]
Successors: [0x8ab]
---
0x4f4 JUMPDEST
0x4f5 POP
0x4f6 POP
0x4f7 POP
0x4f8 PUSH1 0x40
0x4fa MLOAD
0x4fb DUP1
0x4fc MLOAD
0x4fd SWAP1
0x4fe POP
0x4ff POP
0x500 DUP4
0x501 PUSH1 0x1
0x503 PUSH1 0xa0
0x505 PUSH1 0x2
0x507 EXP
0x508 SUB
0x509 AND
0x50a CALLER
0x50b PUSH1 0x1
0x50d PUSH1 0xa0
0x50f PUSH1 0x2
0x511 EXP
0x512 SUB
0x513 AND
0x514 PUSH32 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x535 DUP6
0x536 DUP6
0x537 PUSH1 0x40
0x539 MLOAD
0x53a SWAP2
0x53b DUP3
0x53c MSTORE
0x53d PUSH1 0x20
0x53f DUP3
0x540 ADD
0x541 MSTORE
0x542 PUSH1 0x40
0x544 SWAP1
0x545 DUP2
0x546 ADD
0x547 SWAP1
0x548 MLOAD
0x549 DUP1
0x54a SWAP2
0x54b SUB
0x54c SWAP1
0x54d LOG3
0x54e PUSH2 0x555
0x551 PUSH2 0x8ab
0x554 JUMP
---
0x4f4: JUMPDEST 
0x4f8: V481 = 0x40
0x4fa: V482 = M[0x40]
0x4fc: V483 = M[V482]
0x501: V484 = 0x1
0x503: V485 = 0xa0
0x505: V486 = 0x2
0x507: V487 = EXP 0x2 0xa0
0x508: V488 = SUB 0x10000000000000000000000000000000000000000 0x1
0x509: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x50a: V490 = CALLER
0x50b: V491 = 0x1
0x50d: V492 = 0xa0
0x50f: V493 = 0x2
0x511: V494 = EXP 0x2 0xa0
0x512: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x513: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x514: V497 = 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x537: V498 = 0x40
0x539: V499 = M[0x40]
0x53c: M[V499] = S5
0x53d: V500 = 0x20
0x540: V501 = ADD V499 0x20
0x541: M[V501] = S4
0x542: V502 = 0x40
0x546: V503 = ADD 0x40 V499
0x548: V504 = M[0x40]
0x54b: V505 = SUB V503 V504
0x54d: LOG V504 V505 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18 V496 V489
0x54e: V506 = 0x555
0x551: V507 = 0x8ab
0x554: JUMP 0x8ab
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, V428, V436, 0x40c10f19, V462]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, 0x555]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, V428, 0x555]

================================

Block 0x555
[0x555:0x555]
---
Predecessors: [0x557, 0x60b, 0x77f, 0x85e]
Successors: [0x556]
---
0x555 JUMPDEST
---
0x555: JUMPDEST 
---
Entry stack: [S7, V12, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S7, V12, S5, S4, S3, S2, S1, S0]

================================

Block 0x556
[0x556:0x556]
---
Predecessors: [0x555]
Successors: [0x557]
---
0x556 JUMPDEST
---
0x556: JUMPDEST 
---
Entry stack: [S7, V12, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S7, V12, S5, S4, S3, S2, S1, S0]

================================

Block 0x557
[0x557:0x55c]
---
Predecessors: [0x556]
Successors: [0x34b, 0x555]
Has unresolved jump.
---
0x557 JUMPDEST
0x558 POP
0x559 POP
0x55a POP
0x55b POP
0x55c JUMP
---
0x557: JUMPDEST 
0x55c: JUMP S4
---
Entry stack: [S7, V12, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [S7, V12, S5]

================================

Block 0x55d
[0x55d:0x562]
---
Predecessors: [0xe2]
Successors: [0xea]
---
0x55d JUMPDEST
0x55e PUSH1 0x4
0x560 SLOAD
0x561 DUP2
0x562 JUMP
---
0x55d: JUMPDEST 
0x55e: V508 = 0x4
0x560: V509 = S[0x4]
0x562: JUMP 0xea
---
Entry stack: [V12, 0xea]
Stack pops: 1
Stack additions: [S0, V509]
Exit stack: [V12, 0xea, V509]

================================

Block 0x563
[0x563:0x568]
---
Predecessors: [0x107]
Successors: [0xea]
---
0x563 JUMPDEST
0x564 PUSH1 0x2
0x566 SLOAD
0x567 DUP2
0x568 JUMP
---
0x563: JUMPDEST 
0x564: V510 = 0x2
0x566: V511 = S[0x2]
0x568: JUMP 0xea
---
Entry stack: [V12, 0xea]
Stack pops: 1
Stack additions: [S0, V511]
Exit stack: [V12, 0xea, V511]

================================

Block 0x569
[0x569:0x56e]
---
Predecessors: [0x12c]
Successors: [0xea]
---
0x569 JUMPDEST
0x56a PUSH1 0x6
0x56c SLOAD
0x56d DUP2
0x56e JUMP
---
0x569: JUMPDEST 
0x56a: V512 = 0x6
0x56c: V513 = S[0x6]
0x56e: JUMP 0xea
---
Entry stack: [V12, 0xea]
Stack pops: 1
Stack additions: [S0, V513]
Exit stack: [V12, 0xea, V513]

================================

Block 0x56f
[0x56f:0x578]
---
Predecessors: [0x151]
Successors: [0x760]
---
0x56f JUMPDEST
0x570 PUSH1 0x0
0x572 PUSH2 0x579
0x575 PUSH2 0x760
0x578 JUMP
---
0x56f: JUMPDEST 
0x570: V514 = 0x0
0x572: V515 = 0x579
0x575: V516 = 0x760
0x578: JUMP 0x760
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: [0x0, 0x579]
Exit stack: [V12, 0xd4, 0x0, 0x579]

================================

Block 0x579
[0x579:0x57f]
---
Predecessors: [0x77f]
Successors: [0x580, 0x584]
---
0x579 JUMPDEST
0x57a ISZERO
0x57b ISZERO
0x57c PUSH2 0x584
0x57f JUMPI
---
0x579: JUMPDEST 
0x57a: V517 = ISZERO S0
0x57b: V518 = ISZERO V517
0x57c: V519 = 0x584
0x57f: JUMPI 0x584 V518
---
Entry stack: [V12, 0xd4, S4, S3, {0x0, 0xd4}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xd4, S4, S3, {0x0, 0xd4}, S1]

================================

Block 0x580
[0x580:0x583]
---
Predecessors: [0x579]
Successors: []
---
0x580 PUSH1 0x0
0x582 DUP1
0x583 REVERT
---
0x580: V520 = 0x0
0x583: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, S3, S2, {0x0, 0xd4}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, S3, S2, {0x0, 0xd4}, S0]

================================

Block 0x584
[0x584:0x599]
---
Predecessors: [0x579]
Successors: [0x59a, 0x60a]
---
0x584 JUMPDEST
0x585 POP
0x586 PUSH1 0x1
0x588 PUSH1 0xa0
0x58a PUSH1 0x2
0x58c EXP
0x58d SUB
0x58e ADDRESS
0x58f AND
0x590 BALANCE
0x591 PUSH1 0x0
0x593 DUP2
0x594 GT
0x595 ISZERO
0x596 PUSH2 0x60a
0x599 JUMPI
---
0x584: JUMPDEST 
0x586: V521 = 0x1
0x588: V522 = 0xa0
0x58a: V523 = 0x2
0x58c: V524 = EXP 0x2 0xa0
0x58d: V525 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58e: V526 = ADDRESS
0x58f: V527 = AND V526 0xffffffffffffffffffffffffffffffffffffffff
0x590: V528 = BALANCE V527
0x591: V529 = 0x0
0x594: V530 = GT V528 0x0
0x595: V531 = ISZERO V530
0x596: V532 = 0x60a
0x599: JUMPI 0x60a V531
---
Entry stack: [V12, 0xd4, S3, S2, {0x0, 0xd4}, S0]
Stack pops: 1
Stack additions: [V528]
Exit stack: [V12, 0xd4, S3, S2, {0x0, 0xd4}, V528]

================================

Block 0x59a
[0x59a:0x5c7]
---
Predecessors: [0x584]
Successors: [0x5c8, 0x5cc]
---
0x59a PUSH1 0x8
0x59c SLOAD
0x59d PUSH1 0x1
0x59f PUSH1 0xa0
0x5a1 PUSH1 0x2
0x5a3 EXP
0x5a4 SUB
0x5a5 AND
0x5a6 DUP2
0x5a7 ISZERO
0x5a8 PUSH2 0x8fc
0x5ab MUL
0x5ac DUP3
0x5ad PUSH1 0x40
0x5af MLOAD
0x5b0 PUSH1 0x0
0x5b2 PUSH1 0x40
0x5b4 MLOAD
0x5b5 DUP1
0x5b6 DUP4
0x5b7 SUB
0x5b8 DUP2
0x5b9 DUP6
0x5ba DUP9
0x5bb DUP9
0x5bc CALL
0x5bd SWAP4
0x5be POP
0x5bf POP
0x5c0 POP
0x5c1 POP
0x5c2 ISZERO
0x5c3 ISZERO
0x5c4 PUSH2 0x5cc
0x5c7 JUMPI
---
0x59a: V533 = 0x8
0x59c: V534 = S[0x8]
0x59d: V535 = 0x1
0x59f: V536 = 0xa0
0x5a1: V537 = 0x2
0x5a3: V538 = EXP 0x2 0xa0
0x5a4: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a5: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x5a7: V541 = ISZERO V528
0x5a8: V542 = 0x8fc
0x5ab: V543 = MUL 0x8fc V541
0x5ad: V544 = 0x40
0x5af: V545 = M[0x40]
0x5b0: V546 = 0x0
0x5b2: V547 = 0x40
0x5b4: V548 = M[0x40]
0x5b7: V549 = SUB V545 V548
0x5bc: V550 = CALL V543 V540 V528 V548 V549 V548 0x0
0x5c2: V551 = ISZERO V550
0x5c3: V552 = ISZERO V551
0x5c4: V553 = 0x5cc
0x5c7: JUMPI 0x5cc V552
---
Entry stack: [V12, 0xd4, S3, S2, {0x0, 0xd4}, V528]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xd4, S3, S2, {0x0, 0xd4}, V528]

================================

Block 0x5c8
[0x5c8:0x5cb]
---
Predecessors: [0x59a]
Successors: []
---
0x5c8 PUSH1 0x0
0x5ca DUP1
0x5cb REVERT
---
0x5c8: V554 = 0x0
0x5cb: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, S3, S2, {0x0, 0xd4}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, S3, S2, {0x0, 0xd4}, S0]

================================

Block 0x5cc
[0x5cc:0x609]
---
Predecessors: [0x59a]
Successors: [0x60a]
---
0x5cc JUMPDEST
0x5cd CALLER
0x5ce PUSH1 0x1
0x5d0 PUSH1 0xa0
0x5d2 PUSH1 0x2
0x5d4 EXP
0x5d5 SUB
0x5d6 AND
0x5d7 PUSH32 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x5f8 DUP3
0x5f9 PUSH1 0x40
0x5fb MLOAD
0x5fc SWAP1
0x5fd DUP2
0x5fe MSTORE
0x5ff PUSH1 0x20
0x601 ADD
0x602 PUSH1 0x40
0x604 MLOAD
0x605 DUP1
0x606 SWAP2
0x607 SUB
0x608 SWAP1
0x609 LOG2
---
0x5cc: JUMPDEST 
0x5cd: V555 = CALLER
0x5ce: V556 = 0x1
0x5d0: V557 = 0xa0
0x5d2: V558 = 0x2
0x5d4: V559 = EXP 0x2 0xa0
0x5d5: V560 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d6: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x5d7: V562 = 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x5f9: V563 = 0x40
0x5fb: V564 = M[0x40]
0x5fe: M[V564] = S0
0x5ff: V565 = 0x20
0x601: V566 = ADD 0x20 V564
0x602: V567 = 0x40
0x604: V568 = M[0x40]
0x607: V569 = SUB V566 V568
0x609: LOG V568 V569 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65 V561
---
Entry stack: [V12, 0xd4, S3, S2, {0x0, 0xd4}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xd4, S3, S2, {0x0, 0xd4}, S0]

================================

Block 0x60a
[0x60a:0x60a]
---
Predecessors: [0x584, 0x5cc, 0x8d6]
Successors: [0x60b]
---
0x60a JUMPDEST
---
0x60a: JUMPDEST 
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x60b
[0x60b:0x60d]
---
Predecessors: [0x60a]
Successors: [0xd4, 0x555]
---
0x60b JUMPDEST
0x60c POP
0x60d JUMP
---
0x60b: JUMPDEST 
0x60d: JUMP S1
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x60e
[0x60e:0x624]
---
Predecessors: [0x166]
Successors: [0x625, 0x629]
---
0x60e JUMPDEST
0x60f PUSH1 0x7
0x611 SLOAD
0x612 CALLER
0x613 PUSH1 0x1
0x615 PUSH1 0xa0
0x617 PUSH1 0x2
0x619 EXP
0x61a SUB
0x61b SWAP1
0x61c DUP2
0x61d AND
0x61e SWAP2
0x61f AND
0x620 EQ
0x621 PUSH2 0x629
0x624 JUMPI
---
0x60e: JUMPDEST 
0x60f: V570 = 0x7
0x611: V571 = S[0x7]
0x612: V572 = CALLER
0x613: V573 = 0x1
0x615: V574 = 0xa0
0x617: V575 = 0x2
0x619: V576 = EXP 0x2 0xa0
0x61a: V577 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61d: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff V572
0x61f: V579 = AND V571 0xffffffffffffffffffffffffffffffffffffffff
0x620: V580 = EQ V579 V578
0x621: V581 = 0x629
0x624: JUMPI 0x629 V580
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x625
[0x625:0x628]
---
Predecessors: [0x60e]
Successors: []
---
0x625 PUSH1 0x0
0x627 DUP1
0x628 REVERT
---
0x625: V582 = 0x0
0x628: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x629
[0x629:0x63c]
---
Predecessors: [0x60e]
Successors: [0x63d, 0x641]
---
0x629 JUMPDEST
0x62a PUSH1 0x7
0x62c SLOAD
0x62d PUSH1 0xa0
0x62f PUSH1 0x2
0x631 EXP
0x632 SWAP1
0x633 DIV
0x634 PUSH1 0xff
0x636 AND
0x637 ISZERO
0x638 ISZERO
0x639 PUSH2 0x641
0x63c JUMPI
---
0x629: JUMPDEST 
0x62a: V583 = 0x7
0x62c: V584 = S[0x7]
0x62d: V585 = 0xa0
0x62f: V586 = 0x2
0x631: V587 = EXP 0x2 0xa0
0x633: V588 = DIV V584 0x10000000000000000000000000000000000000000
0x634: V589 = 0xff
0x636: V590 = AND 0xff V588
0x637: V591 = ISZERO V590
0x638: V592 = ISZERO V591
0x639: V593 = 0x641
0x63c: JUMPI 0x641 V592
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x63d
[0x63d:0x640]
---
Predecessors: [0x629]
Successors: []
---
0x63d PUSH1 0x0
0x63f DUP1
0x640 REVERT
---
0x63d: V594 = 0x0
0x640: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x641
[0x641:0x68b]
---
Predecessors: [0x629]
Successors: [0x68c]
---
0x641 JUMPDEST
0x642 PUSH1 0x7
0x644 DUP1
0x645 SLOAD
0x646 PUSH21 0xff0000000000000000000000000000000000000000
0x65c NOT
0x65d AND
0x65e SWAP1
0x65f SSTORE
0x660 PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x681 PUSH1 0x40
0x683 MLOAD
0x684 PUSH1 0x40
0x686 MLOAD
0x687 DUP1
0x688 SWAP2
0x689 SUB
0x68a SWAP1
0x68b LOG1
---
0x641: JUMPDEST 
0x642: V595 = 0x7
0x645: V596 = S[0x7]
0x646: V597 = 0xff0000000000000000000000000000000000000000
0x65c: V598 = NOT 0xff0000000000000000000000000000000000000000
0x65d: V599 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V596
0x65f: S[0x7] = V599
0x660: V600 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x681: V601 = 0x40
0x683: V602 = M[0x40]
0x684: V603 = 0x40
0x686: V604 = M[0x40]
0x689: V605 = SUB V602 V604
0x68b: LOG V604 V605 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x68c
[0x68c:0x68c]
---
Predecessors: [0x641]
Successors: [0x68d]
---
0x68c JUMPDEST
---
0x68c: JUMPDEST 
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x68d
[0x68d:0x68d]
---
Predecessors: [0x68c]
Successors: [0x68e]
---
0x68d JUMPDEST
---
0x68d: JUMPDEST 
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x68e
[0x68e:0x68f]
---
Predecessors: [0x68d]
Successors: [0xd4]
---
0x68e JUMPDEST
0x68f JUMP
---
0x68e: JUMPDEST 
0x68f: JUMP 0xd4
---
Entry stack: [V12, 0xd4]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x690
[0x690:0x695]
---
Predecessors: [0x17b]
Successors: [0xea]
---
0x690 JUMPDEST
0x691 PUSH1 0x5
0x693 SLOAD
0x694 DUP2
0x695 JUMP
---
0x690: JUMPDEST 
0x691: V606 = 0x5
0x693: V607 = S[0x5]
0x695: JUMP 0xea
---
Entry stack: [V12, 0xea]
Stack pops: 1
Stack additions: [S0, V607]
Exit stack: [V12, 0xea, V607]

================================

Block 0x696
[0x696:0x6a4]
---
Predecessors: [0x1a0]
Successors: [0x1a8]
---
0x696 JUMPDEST
0x697 PUSH1 0x3
0x699 SLOAD
0x69a PUSH1 0x1
0x69c PUSH1 0xa0
0x69e PUSH1 0x2
0x6a0 EXP
0x6a1 SUB
0x6a2 AND
0x6a3 DUP2
0x6a4 JUMP
---
0x696: JUMPDEST 
0x697: V608 = 0x3
0x699: V609 = S[0x3]
0x69a: V610 = 0x1
0x69c: V611 = 0xa0
0x69e: V612 = 0x2
0x6a0: V613 = EXP 0x2 0xa0
0x6a1: V614 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a2: V615 = AND 0xffffffffffffffffffffffffffffffffffffffff V609
0x6a4: JUMP 0x1a8
---
Entry stack: [V12, 0x1a8]
Stack pops: 1
Stack additions: [S0, V615]
Exit stack: [V12, 0x1a8, V615]

================================

Block 0x6a5
[0x6a5:0x6b4]
---
Predecessors: [0x1cf]
Successors: [0x1d7]
---
0x6a5 JUMPDEST
0x6a6 PUSH1 0x7
0x6a8 SLOAD
0x6a9 PUSH1 0xa0
0x6ab PUSH1 0x2
0x6ad EXP
0x6ae SWAP1
0x6af DIV
0x6b0 PUSH1 0xff
0x6b2 AND
0x6b3 DUP2
0x6b4 JUMP
---
0x6a5: JUMPDEST 
0x6a6: V616 = 0x7
0x6a8: V617 = S[0x7]
0x6a9: V618 = 0xa0
0x6ab: V619 = 0x2
0x6ad: V620 = EXP 0x2 0xa0
0x6af: V621 = DIV V617 0x10000000000000000000000000000000000000000
0x6b0: V622 = 0xff
0x6b2: V623 = AND 0xff V621
0x6b4: JUMP 0x1d7
---
Entry stack: [V12, 0x1d7]
Stack pops: 1
Stack additions: [S0, V623]
Exit stack: [V12, 0x1d7, V623]

================================

Block 0x6b5
[0x6b5:0x6ba]
---
Predecessors: [0x1f6]
Successors: [0xea]
---
0x6b5 JUMPDEST
0x6b6 PUSH1 0x1
0x6b8 SLOAD
0x6b9 DUP2
0x6ba JUMP
---
0x6b5: JUMPDEST 
0x6b6: V624 = 0x1
0x6b8: V625 = S[0x1]
0x6ba: JUMP 0xea
---
Entry stack: [V12, 0xea]
Stack pops: 1
Stack additions: [S0, V625]
Exit stack: [V12, 0xea, V625]

================================

Block 0x6bb
[0x6bb:0x6d1]
---
Predecessors: [0x21b]
Successors: [0x6d2, 0x6d6]
---
0x6bb JUMPDEST
0x6bc PUSH1 0x7
0x6be SLOAD
0x6bf CALLER
0x6c0 PUSH1 0x1
0x6c2 PUSH1 0xa0
0x6c4 PUSH1 0x2
0x6c6 EXP
0x6c7 SUB
0x6c8 SWAP1
0x6c9 DUP2
0x6ca AND
0x6cb SWAP2
0x6cc AND
0x6cd EQ
0x6ce PUSH2 0x6d6
0x6d1 JUMPI
---
0x6bb: JUMPDEST 
0x6bc: V626 = 0x7
0x6be: V627 = S[0x7]
0x6bf: V628 = CALLER
0x6c0: V629 = 0x1
0x6c2: V630 = 0xa0
0x6c4: V631 = 0x2
0x6c6: V632 = EXP 0x2 0xa0
0x6c7: V633 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ca: V634 = AND 0xffffffffffffffffffffffffffffffffffffffff V628
0x6cc: V635 = AND V627 0xffffffffffffffffffffffffffffffffffffffff
0x6cd: V636 = EQ V635 V634
0x6ce: V637 = 0x6d6
0x6d1: JUMPI 0x6d6 V636
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x6d2
[0x6d2:0x6d5]
---
Predecessors: [0x6bb]
Successors: []
---
0x6d2 PUSH1 0x0
0x6d4 DUP1
0x6d5 REVERT
---
0x6d2: V638 = 0x0
0x6d5: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x6d6
[0x6d6:0x6e8]
---
Predecessors: [0x6bb]
Successors: [0x6e9, 0x6ed]
---
0x6d6 JUMPDEST
0x6d7 PUSH1 0x7
0x6d9 SLOAD
0x6da PUSH1 0xa0
0x6dc PUSH1 0x2
0x6de EXP
0x6df SWAP1
0x6e0 DIV
0x6e1 PUSH1 0xff
0x6e3 AND
0x6e4 ISZERO
0x6e5 PUSH2 0x6ed
0x6e8 JUMPI
---
0x6d6: JUMPDEST 
0x6d7: V639 = 0x7
0x6d9: V640 = S[0x7]
0x6da: V641 = 0xa0
0x6dc: V642 = 0x2
0x6de: V643 = EXP 0x2 0xa0
0x6e0: V644 = DIV V640 0x10000000000000000000000000000000000000000
0x6e1: V645 = 0xff
0x6e3: V646 = AND 0xff V644
0x6e4: V647 = ISZERO V646
0x6e5: V648 = 0x6ed
0x6e8: JUMPI 0x6ed V647
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x6e9
[0x6e9:0x6ec]
---
Predecessors: [0x6d6]
Successors: []
---
0x6e9 PUSH1 0x0
0x6eb DUP1
0x6ec REVERT
---
0x6e9: V649 = 0x0
0x6ec: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x6ed
[0x6ed:0x73d]
---
Predecessors: [0x6d6]
Successors: [0x73e]
---
0x6ed JUMPDEST
0x6ee PUSH1 0x7
0x6f0 DUP1
0x6f1 SLOAD
0x6f2 PUSH21 0xff0000000000000000000000000000000000000000
0x708 NOT
0x709 AND
0x70a PUSH1 0xa0
0x70c PUSH1 0x2
0x70e EXP
0x70f OR
0x710 SWAP1
0x711 SSTORE
0x712 PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x733 PUSH1 0x40
0x735 MLOAD
0x736 PUSH1 0x40
0x738 MLOAD
0x739 DUP1
0x73a SWAP2
0x73b SUB
0x73c SWAP1
0x73d LOG1
---
0x6ed: JUMPDEST 
0x6ee: V650 = 0x7
0x6f1: V651 = S[0x7]
0x6f2: V652 = 0xff0000000000000000000000000000000000000000
0x708: V653 = NOT 0xff0000000000000000000000000000000000000000
0x709: V654 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V651
0x70a: V655 = 0xa0
0x70c: V656 = 0x2
0x70e: V657 = EXP 0x2 0xa0
0x70f: V658 = OR 0x10000000000000000000000000000000000000000 V654
0x711: S[0x7] = V658
0x712: V659 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x733: V660 = 0x40
0x735: V661 = M[0x40]
0x736: V662 = 0x40
0x738: V663 = M[0x40]
0x73b: V664 = SUB V661 V663
0x73d: LOG V663 V664 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x73e
[0x73e:0x73e]
---
Predecessors: [0x6ed]
Successors: [0x73f]
---
0x73e JUMPDEST
---
0x73e: JUMPDEST 
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x73f
[0x73f:0x73f]
---
Predecessors: [0x73e]
Successors: [0x740]
---
0x73f JUMPDEST
---
0x73f: JUMPDEST 
---
Entry stack: [V12, 0xd4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0x740
[0x740:0x741]
---
Predecessors: [0x73f]
Successors: [0xd4]
---
0x740 JUMPDEST
0x741 JUMP
---
0x740: JUMPDEST 
0x741: JUMP 0xd4
---
Entry stack: [V12, 0xd4]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x742
[0x742:0x750]
---
Predecessors: [0x230]
Successors: [0x1a8]
---
0x742 JUMPDEST
0x743 PUSH1 0x7
0x745 SLOAD
0x746 PUSH1 0x1
0x748 PUSH1 0xa0
0x74a PUSH1 0x2
0x74c EXP
0x74d SUB
0x74e AND
0x74f DUP2
0x750 JUMP
---
0x742: JUMPDEST 
0x743: V665 = 0x7
0x745: V666 = S[0x7]
0x746: V667 = 0x1
0x748: V668 = 0xa0
0x74a: V669 = 0x2
0x74c: V670 = EXP 0x2 0xa0
0x74d: V671 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74e: V672 = AND 0xffffffffffffffffffffffffffffffffffffffff V666
0x750: JUMP 0x1a8
---
Entry stack: [V12, 0x1a8]
Stack pops: 1
Stack additions: [S0, V672]
Exit stack: [V12, 0x1a8, V672]

================================

Block 0x751
[0x751:0x75f]
---
Predecessors: [0x25f]
Successors: [0x1a8]
---
0x751 JUMPDEST
0x752 PUSH1 0x8
0x754 SLOAD
0x755 PUSH1 0x1
0x757 PUSH1 0xa0
0x759 PUSH1 0x2
0x75b EXP
0x75c SUB
0x75d AND
0x75e DUP2
0x75f JUMP
---
0x751: JUMPDEST 
0x752: V673 = 0x8
0x754: V674 = S[0x8]
0x755: V675 = 0x1
0x757: V676 = 0xa0
0x759: V677 = 0x2
0x75b: V678 = EXP 0x2 0xa0
0x75c: V679 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75d: V680 = AND 0xffffffffffffffffffffffffffffffffffffffff V674
0x75f: JUMP 0x1a8
---
Entry stack: [V12, 0x1a8]
Stack pops: 1
Stack additions: [S0, V680]
Exit stack: [V12, 0x1a8, V680]

================================

Block 0x760
[0x760:0x773]
---
Predecessors: [0x2a4, 0x56f]
Successors: [0x910]
---
0x760 JUMPDEST
0x761 PUSH1 0x6
0x763 SLOAD
0x764 PUSH1 0x5
0x766 SLOAD
0x767 PUSH1 0x0
0x769 SWAP2
0x76a SWAP1
0x76b LT
0x76c ISZERO
0x76d PUSH2 0x774
0x770 PUSH2 0x910
0x773 JUMP
---
0x760: JUMPDEST 
0x761: V681 = 0x6
0x763: V682 = S[0x6]
0x764: V683 = 0x5
0x766: V684 = S[0x5]
0x767: V685 = 0x0
0x76b: V686 = LT V684 V682
0x76c: V687 = ISZERO V686
0x76d: V688 = 0x774
0x770: V689 = 0x910
0x773: JUMP 0x910
---
Entry stack: [V12, 0xd4, S1, {0x1d7, 0x579}]
Stack pops: 0
Stack additions: [0x0, V687, 0x774]
Exit stack: [V12, 0xd4, S1, {0x1d7, 0x579}, 0x0, V687, 0x774]

================================

Block 0x774
[0x774:0x779]
---
Predecessors: [0x916]
Successors: [0x77a, 0x77c]
---
0x774 JUMPDEST
0x775 DUP1
0x776 PUSH2 0x77c
0x779 JUMPI
---
0x774: JUMPDEST 
0x776: V690 = 0x77c
0x779: JUMPI 0x77c V822
---
Entry stack: [V12, 0xd4, S4, {0x1d7, 0x579}, 0x0, V687, V822]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xd4, S4, {0x1d7, 0x579}, 0x0, V687, V822]

================================

Block 0x77a
[0x77a:0x77b]
---
Predecessors: [0x774]
Successors: [0x77c]
---
0x77a POP
0x77b DUP1
---
0x77a: NOP 
---
Entry stack: [V12, 0xd4, S4, {0x1d7, 0x579}, 0x0, V687, V822]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V12, 0xd4, S4, {0x1d7, 0x579}, 0x0, V687, V687]

================================

Block 0x77c
[0x77c:0x77e]
---
Predecessors: [0x774, 0x77a, 0x852]
Successors: [0x77f]
---
0x77c JUMPDEST
0x77d SWAP2
0x77e POP
---
0x77c: JUMPDEST 
---
Entry stack: [V12, 0xd4, S7, S6, {0x0, 0xd4}, S4, {0x1d7, 0x34b, 0x579}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V12, 0xd4, S7, S6, {0x0, 0xd4}, S4, {0x1d7, 0x34b, 0x579}, S0, S1]

================================

Block 0x77f
[0x77f:0x782]
---
Predecessors: [0x77c]
Successors: [0x1d7, 0x34b, 0x555, 0x579]
---
0x77f JUMPDEST
0x780 POP
0x781 SWAP1
0x782 JUMP
---
0x77f: JUMPDEST 
0x782: JUMP {0x1d7, 0x34b, 0x579}
---
Entry stack: [V12, 0xd4, S6, S5, {0x0, 0xd4}, S3, {0x1d7, 0x34b, 0x579}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, 0xd4, S6, S5, {0x0, 0xd4}, S3, S1]

================================

Block 0x783
[0x783:0x799]
---
Predecessors: [0x2cb]
Successors: [0x79a, 0x79e]
---
0x783 JUMPDEST
0x784 PUSH1 0x7
0x786 SLOAD
0x787 CALLER
0x788 PUSH1 0x1
0x78a PUSH1 0xa0
0x78c PUSH1 0x2
0x78e EXP
0x78f SUB
0x790 SWAP1
0x791 DUP2
0x792 AND
0x793 SWAP2
0x794 AND
0x795 EQ
0x796 PUSH2 0x79e
0x799 JUMPI
---
0x783: JUMPDEST 
0x784: V691 = 0x7
0x786: V692 = S[0x7]
0x787: V693 = CALLER
0x788: V694 = 0x1
0x78a: V695 = 0xa0
0x78c: V696 = 0x2
0x78e: V697 = EXP 0x2 0xa0
0x78f: V698 = SUB 0x10000000000000000000000000000000000000000 0x1
0x792: V699 = AND 0xffffffffffffffffffffffffffffffffffffffff V693
0x794: V700 = AND V692 0xffffffffffffffffffffffffffffffffffffffff
0x795: V701 = EQ V700 V699
0x796: V702 = 0x79e
0x799: JUMPI 0x79e V701
---
Entry stack: [V12, 0xd4, V256]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V256]

================================

Block 0x79a
[0x79a:0x79d]
---
Predecessors: [0x783]
Successors: []
---
0x79a PUSH1 0x0
0x79c DUP1
0x79d REVERT
---
0x79a: V703 = 0x0
0x79d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, V256]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V256]

================================

Block 0x79e
[0x79e:0x7ae]
---
Predecessors: [0x783]
Successors: [0x7af, 0x7b3]
---
0x79e JUMPDEST
0x79f PUSH1 0x1
0x7a1 PUSH1 0xa0
0x7a3 PUSH1 0x2
0x7a5 EXP
0x7a6 SUB
0x7a7 DUP2
0x7a8 AND
0x7a9 ISZERO
0x7aa ISZERO
0x7ab PUSH2 0x7b3
0x7ae JUMPI
---
0x79e: JUMPDEST 
0x79f: V704 = 0x1
0x7a1: V705 = 0xa0
0x7a3: V706 = 0x2
0x7a5: V707 = EXP 0x2 0xa0
0x7a6: V708 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a8: V709 = AND V256 0xffffffffffffffffffffffffffffffffffffffff
0x7a9: V710 = ISZERO V709
0x7aa: V711 = ISZERO V710
0x7ab: V712 = 0x7b3
0x7ae: JUMPI 0x7b3 V711
---
Entry stack: [V12, 0xd4, V256]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xd4, V256]

================================

Block 0x7af
[0x7af:0x7b2]
---
Predecessors: [0x79e]
Successors: []
---
0x7af PUSH1 0x0
0x7b1 DUP1
0x7b2 REVERT
---
0x7af: V713 = 0x0
0x7b2: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd4, V256]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V256]

================================

Block 0x7b3
[0x7b3:0x817]
---
Predecessors: [0x79e]
Successors: [0x818]
---
0x7b3 JUMPDEST
0x7b4 PUSH1 0x7
0x7b6 SLOAD
0x7b7 PUSH1 0x1
0x7b9 PUSH1 0xa0
0x7bb PUSH1 0x2
0x7bd EXP
0x7be SUB
0x7bf DUP1
0x7c0 DUP4
0x7c1 AND
0x7c2 SWAP2
0x7c3 AND
0x7c4 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x7e5 PUSH1 0x40
0x7e7 MLOAD
0x7e8 PUSH1 0x40
0x7ea MLOAD
0x7eb DUP1
0x7ec SWAP2
0x7ed SUB
0x7ee SWAP1
0x7ef LOG3
0x7f0 PUSH1 0x7
0x7f2 DUP1
0x7f3 SLOAD
0x7f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x809 NOT
0x80a AND
0x80b PUSH1 0x1
0x80d PUSH1 0xa0
0x80f PUSH1 0x2
0x811 EXP
0x812 SUB
0x813 DUP4
0x814 AND
0x815 OR
0x816 SWAP1
0x817 SSTORE
---
0x7b3: JUMPDEST 
0x7b4: V714 = 0x7
0x7b6: V715 = S[0x7]
0x7b7: V716 = 0x1
0x7b9: V717 = 0xa0
0x7bb: V718 = 0x2
0x7bd: V719 = EXP 0x2 0xa0
0x7be: V720 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c1: V721 = AND V256 0xffffffffffffffffffffffffffffffffffffffff
0x7c3: V722 = AND V715 0xffffffffffffffffffffffffffffffffffffffff
0x7c4: V723 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x7e5: V724 = 0x40
0x7e7: V725 = M[0x40]
0x7e8: V726 = 0x40
0x7ea: V727 = M[0x40]
0x7ed: V728 = SUB V725 V727
0x7ef: LOG V727 V728 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V722 V721
0x7f0: V729 = 0x7
0x7f3: V730 = S[0x7]
0x7f4: V731 = 0xffffffffffffffffffffffffffffffffffffffff
0x809: V732 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x80a: V733 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V730
0x80b: V734 = 0x1
0x80d: V735 = 0xa0
0x80f: V736 = 0x2
0x811: V737 = EXP 0x2 0xa0
0x812: V738 = SUB 0x10000000000000000000000000000000000000000 0x1
0x814: V739 = AND V256 0xffffffffffffffffffffffffffffffffffffffff
0x815: V740 = OR V739 V733
0x817: S[0x7] = V740
---
Entry stack: [V12, 0xd4, V256]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xd4, V256]

================================

Block 0x818
[0x818:0x818]
---
Predecessors: [0x7b3]
Successors: [0x819]
---
0x818 JUMPDEST
---
0x818: JUMPDEST 
---
Entry stack: [V12, 0xd4, V256]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd4, V256]

================================

Block 0x819
[0x819:0x81b]
---
Predecessors: [0x818]
Successors: [0xd4]
---
0x819 JUMPDEST
0x81a POP
0x81b JUMP
---
0x819: JUMPDEST 
0x81b: JUMP 0xd4
---
Entry stack: [V12, 0xd4, V256]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x81c
[0x81c:0x82a]
---
Predecessors: [0x2ec]
Successors: [0x1a8]
---
0x81c JUMPDEST
0x81d PUSH1 0x0
0x81f SLOAD
0x820 PUSH1 0x1
0x822 PUSH1 0xa0
0x824 PUSH1 0x2
0x826 EXP
0x827 SUB
0x828 AND
0x829 DUP2
0x82a JUMP
---
0x81c: JUMPDEST 
0x81d: V741 = 0x0
0x81f: V742 = S[0x0]
0x820: V743 = 0x1
0x822: V744 = 0xa0
0x824: V745 = 0x2
0x826: V746 = EXP 0x2 0xa0
0x827: V747 = SUB 0x10000000000000000000000000000000000000000 0x1
0x828: V748 = AND 0xffffffffffffffffffffffffffffffffffffffff V742
0x82a: JUMP 0x1a8
---
Entry stack: [V12, 0x1a8]
Stack pops: 1
Stack additions: [S0, V748]
Exit stack: [V12, 0x1a8, V748]

================================

Block 0x82b
[0x82b:0x845]
---
Predecessors: [0x343]
Successors: [0x891]
---
0x82b JUMPDEST
0x82c PUSH1 0x0
0x82e DUP1
0x82f PUSH1 0x6
0x831 SLOAD
0x832 PUSH2 0x846
0x835 CALLVALUE
0x836 PUSH1 0x5
0x838 SLOAD
0x839 PUSH2 0x891
0x83c SWAP1
0x83d SWAP2
0x83e SWAP1
0x83f PUSH4 0xffffffff
0x844 AND
0x845 JUMP
---
0x82b: JUMPDEST 
0x82c: V749 = 0x0
0x82f: V750 = 0x6
0x831: V751 = S[0x6]
0x832: V752 = 0x846
0x835: V753 = CALLVALUE
0x836: V754 = 0x5
0x838: V755 = S[0x5]
0x839: V756 = 0x891
0x83f: V757 = 0xffffffff
0x844: V758 = AND 0xffffffff 0x891
0x845: JUMP 0x891
---
Entry stack: [V12, 0xd4, S4, 0x0, 0x0, 0x0, 0x34b]
Stack pops: 0
Stack additions: [0x0, 0x0, V751, 0x846, V755, V753]
Exit stack: [V12, 0xd4, S4, 0x0, 0x0, 0x0, 0x34b, 0x0, 0x0, V751, 0x846, V755, V753]

================================

Block 0x846
[0x846:0x851]
---
Predecessors: [0x88a]
Successors: [0x919]
---
0x846 JUMPDEST
0x847 GT
0x848 ISZERO
0x849 SWAP1
0x84a POP
0x84b PUSH2 0x852
0x84e PUSH2 0x919
0x851 JUMP
---
0x846: JUMPDEST 
0x847: V759 = GT S0 S1
0x848: V760 = ISZERO V759
0x84b: V761 = 0x852
0x84e: V762 = 0x919
0x851: JUMP 0x919
---
Entry stack: [S12, S11, V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V760, 0x852]
Exit stack: [S12, S11, V12, S9, S8, S7, S6, S5, S4, S3, V760, 0x852]

================================

Block 0x852
[0x852:0x858]
---
Predecessors: [0x945]
Successors: [0x77c, 0x859]
---
0x852 JUMPDEST
0x853 DUP1
0x854 ISZERO
0x855 PUSH2 0x77c
0x858 JUMPI
---
0x852: JUMPDEST 
0x854: V763 = ISZERO S0
0x855: V764 = 0x77c
0x858: JUMPI 0x77c V763
---
Entry stack: [V12, 0xd4, S7, 0x0, 0x0, 0x0, 0x34b, 0x0, V760, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xd4, S7, 0x0, 0x0, 0x0, 0x34b, 0x0, V760, S0]

================================

Block 0x859
[0x859:0x85a]
---
Predecessors: [0x852]
Successors: [0x85b]
---
0x859 POP
0x85a DUP1
---
0x859: NOP 
---
Entry stack: [V12, 0xd4, S7, 0x0, 0x0, 0x0, 0x34b, 0x0, V760, S0]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V12, 0xd4, S7, 0x0, 0x0, 0x0, 0x34b, 0x0, V760, V760]

================================

Block 0x85b
[0x85b:0x85d]
---
Predecessors: [0x859]
Successors: [0x85e]
---
0x85b JUMPDEST
0x85c SWAP2
0x85d POP
---
0x85b: JUMPDEST 
---
Entry stack: [V12, 0xd4, S7, 0x0, 0x0, 0x0, 0x34b, 0x0, V760, V760]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V12, 0xd4, S7, 0x0, 0x0, 0x0, 0x34b, V760, V760]

================================

Block 0x85e
[0x85e:0x861]
---
Predecessors: [0x85b]
Successors: [0x34b, 0x555]
---
0x85e JUMPDEST
0x85f POP
0x860 SWAP1
0x861 JUMP
---
0x85e: JUMPDEST 
0x861: JUMP 0x34b
---
Entry stack: [V12, 0xd4, S6, 0x0, 0x0, 0x0, 0x34b, V760, V760]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, 0xd4, S6, 0x0, 0x0, 0x0, V760]

================================

Block 0x862
[0x862:0x86e]
---
Predecessors: [0x356, 0x8ab]
Successors: [0x86f, 0x87e]
---
0x862 JUMPDEST
0x863 PUSH1 0x0
0x865 DUP3
0x866 DUP3
0x867 MUL
0x868 DUP4
0x869 ISZERO
0x86a DUP1
0x86b PUSH2 0x87e
0x86e JUMPI
---
0x862: JUMPDEST 
0x863: V765 = 0x0
0x867: V766 = MUL S0 S1
0x869: V767 = ISZERO S1
0x86b: V768 = 0x87e
0x86e: JUMPI 0x87e V767
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x36d, 0x8ca}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V766, V767]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x36d, 0x8ca}, S1, S0, 0x0, V766, V767]

================================

Block 0x86f
[0x86f:0x879]
---
Predecessors: [0x862]
Successors: [0x87a, 0x87b]
---
0x86f POP
0x870 DUP3
0x871 DUP5
0x872 DUP3
0x873 DUP2
0x874 ISZERO
0x875 ISZERO
0x876 PUSH2 0x87b
0x879 JUMPI
---
0x874: V769 = ISZERO S4
0x875: V770 = ISZERO V769
0x876: V771 = 0x87b
0x879: JUMPI 0x87b V770
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x36d, 0x8ca}, S4, S3, 0x0, V766, V767]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x36d, 0x8ca}, S4, S3, 0x0, V766, S3, S4, V766]

================================

Block 0x87a
[0x87a:0x87a]
---
Predecessors: [0x86f]
Successors: []
---
0x87a INVALID
---
0x87a: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x36d, 0x8ca}, S6, S5, 0x0, V766, S2, S1, V766]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x36d, 0x8ca}, S6, S5, 0x0, V766, S2, S1, V766]

================================

Block 0x87b
[0x87b:0x87d]
---
Predecessors: [0x86f]
Successors: [0x87e]
---
0x87b JUMPDEST
0x87c DIV
0x87d EQ
---
0x87b: JUMPDEST 
0x87c: V772 = DIV V766 S1
0x87d: V773 = EQ V772 S2
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x36d, 0x8ca}, S6, S5, 0x0, V766, S2, S1, V766]
Stack pops: 3
Stack additions: [V773]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x36d, 0x8ca}, S6, S5, 0x0, V766, V773]

================================

Block 0x87e
[0x87e:0x884]
---
Predecessors: [0x862, 0x87b]
Successors: [0x885, 0x886]
---
0x87e JUMPDEST
0x87f ISZERO
0x880 ISZERO
0x881 PUSH2 0x886
0x884 JUMPI
---
0x87e: JUMPDEST 
0x87f: V774 = ISZERO S0
0x880: V775 = ISZERO V774
0x881: V776 = 0x886
0x884: JUMPI 0x886 V775
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x36d, 0x8ca}, S4, S3, 0x0, V766, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x36d, 0x8ca}, S4, S3, 0x0, V766]

================================

Block 0x885
[0x885:0x885]
---
Predecessors: [0x87e]
Successors: []
---
0x885 INVALID
---
0x885: INVALID 
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x36d, 0x8ca}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x36d, 0x8ca}, S3, S2, 0x0, S0]

================================

Block 0x886
[0x886:0x889]
---
Predecessors: [0x87e, 0x891]
Successors: [0x88a]
---
0x886 JUMPDEST
0x887 DUP1
0x888 SWAP2
0x889 POP
---
0x886: JUMPDEST 
---
Entry stack: [S16, S15, V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x36d, 0x383, 0x846, 0x8ca}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S16, S15, V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x36d, 0x383, 0x846, 0x8ca}, S3, S2, S0, S0]

================================

Block 0x88a
[0x88a:0x890]
---
Predecessors: [0x886]
Successors: [0x36d, 0x383, 0x846, 0x8ca]
---
0x88a JUMPDEST
0x88b POP
0x88c SWAP3
0x88d SWAP2
0x88e POP
0x88f POP
0x890 JUMP
---
0x88a: JUMPDEST 
0x890: JUMP {0x36d, 0x383, 0x846, 0x8ca}
---
Entry stack: [S16, S15, V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x36d, 0x383, 0x846, 0x8ca}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S16, S15, V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0x891
[0x891:0x89e]
---
Predecessors: [0x36d, 0x82b]
Successors: [0x886, 0x89f]
---
0x891 JUMPDEST
0x892 PUSH1 0x0
0x894 DUP3
0x895 DUP3
0x896 ADD
0x897 DUP4
0x898 DUP2
0x899 LT
0x89a ISZERO
0x89b PUSH2 0x886
0x89e JUMPI
---
0x891: JUMPDEST 
0x892: V777 = 0x0
0x896: V778 = ADD S0 S1
0x899: V779 = LT V778 S1
0x89a: V780 = ISZERO V779
0x89b: V781 = 0x886
0x89e: JUMPI 0x886 V780
---
Entry stack: [S14, S13, V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x383, 0x846}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V778]
Exit stack: [S14, S13, V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x383, 0x846}, S1, S0, 0x0, V778]

================================

Block 0x89f
[0x89f:0x89f]
---
Predecessors: [0x891]
Successors: []
---
0x89f INVALID
---
0x89f: INVALID 
---
Entry stack: [S16, S15, V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x383, 0x846}, S3, S2, 0x0, V778]
Stack pops: 0
Stack additions: []
Exit stack: [S16, S15, V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x383, 0x846}, S3, S2, 0x0, V778]

================================

Block 0x8a0
[0x8a0:0x8a3]
---
Predecessors: []
Successors: [0x8a4]
---
0x8a0 JUMPDEST
0x8a1 DUP1
0x8a2 SWAP2
0x8a3 POP
---
0x8a0: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0x8a4
[0x8a4:0x8aa]
---
Predecessors: [0x8a0]
Successors: []
Has unresolved jump.
---
0x8a4 JUMPDEST
0x8a5 POP
0x8a6 SWAP3
0x8a7 SWAP2
0x8a8 POP
0x8a9 POP
0x8aa JUMP
---
0x8a4: JUMPDEST 
0x8aa: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0x8ab
[0x8ab:0x8c9]
---
Predecessors: [0x4f4]
Successors: [0x862]
---
0x8ab JUMPDEST
0x8ac PUSH1 0x0
0x8ae PUSH2 0x8d6
0x8b1 PUSH1 0x64
0x8b3 PUSH2 0x8ca
0x8b6 PUSH1 0xb
0x8b8 SLOAD
0x8b9 PUSH1 0x64
0x8bb SUB
0x8bc CALLVALUE
0x8bd PUSH2 0x862
0x8c0 SWAP1
0x8c1 SWAP2
0x8c2 SWAP1
0x8c3 PUSH4 0xffffffff
0x8c8 AND
0x8c9 JUMP
---
0x8ab: JUMPDEST 
0x8ac: V782 = 0x0
0x8ae: V783 = 0x8d6
0x8b1: V784 = 0x64
0x8b3: V785 = 0x8ca
0x8b6: V786 = 0xb
0x8b8: V787 = S[0xb]
0x8b9: V788 = 0x64
0x8bb: V789 = SUB 0x64 V787
0x8bc: V790 = CALLVALUE
0x8bd: V791 = 0x862
0x8c3: V792 = 0xffffffff
0x8c8: V793 = AND 0xffffffff 0x862
0x8c9: JUMP 0x862
---
Entry stack: [S8, S7, S6, S5, S4, S3, S2, V428, 0x555]
Stack pops: 0
Stack additions: [0x0, 0x8d6, 0x64, 0x8ca, V790, V789]
Exit stack: [S8, S7, S6, S5, S4, S3, S2, V428, 0x555, 0x0, 0x8d6, 0x64, 0x8ca, V790, V789]

================================

Block 0x8ca
[0x8ca:0x8d5]
---
Predecessors: [0x88a]
Successors: [0x94a]
---
0x8ca JUMPDEST
0x8cb SWAP1
0x8cc PUSH4 0xffffffff
0x8d1 PUSH2 0x94a
0x8d4 AND
0x8d5 JUMP
---
0x8ca: JUMPDEST 
0x8cc: V794 = 0xffffffff
0x8d1: V795 = 0x94a
0x8d4: V796 = AND 0x94a 0xffffffff
0x8d5: JUMP 0x94a
---
Entry stack: [S12, S11, V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S12, S11, V12, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x8d6
[0x8d6:0x907]
---
Predecessors: [0x95f]
Successors: [0x60a, 0x908]
---
0x8d6 JUMPDEST
0x8d7 PUSH1 0x3
0x8d9 SLOAD
0x8da SWAP1
0x8db SWAP2
0x8dc POP
0x8dd PUSH1 0x1
0x8df PUSH1 0xa0
0x8e1 PUSH1 0x2
0x8e3 EXP
0x8e4 SUB
0x8e5 AND
0x8e6 DUP2
0x8e7 ISZERO
0x8e8 PUSH2 0x8fc
0x8eb MUL
0x8ec DUP3
0x8ed PUSH1 0x40
0x8ef MLOAD
0x8f0 PUSH1 0x0
0x8f2 PUSH1 0x40
0x8f4 MLOAD
0x8f5 DUP1
0x8f6 DUP4
0x8f7 SUB
0x8f8 DUP2
0x8f9 DUP6
0x8fa DUP9
0x8fb DUP9
0x8fc CALL
0x8fd SWAP4
0x8fe POP
0x8ff POP
0x900 POP
0x901 POP
0x902 ISZERO
0x903 ISZERO
0x904 PUSH2 0x60a
0x907 JUMPI
---
0x8d6: JUMPDEST 
0x8d7: V797 = 0x3
0x8d9: V798 = S[0x3]
0x8dd: V799 = 0x1
0x8df: V800 = 0xa0
0x8e1: V801 = 0x2
0x8e3: V802 = EXP 0x2 0xa0
0x8e4: V803 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e5: V804 = AND 0xffffffffffffffffffffffffffffffffffffffff V798
0x8e7: V805 = ISZERO S0
0x8e8: V806 = 0x8fc
0x8eb: V807 = MUL 0x8fc V805
0x8ed: V808 = 0x40
0x8ef: V809 = M[0x40]
0x8f0: V810 = 0x0
0x8f2: V811 = 0x40
0x8f4: V812 = M[0x40]
0x8f7: V813 = SUB V809 V812
0x8fc: V814 = CALL V807 V804 S0 V812 V813 V812 0x0
0x902: V815 = ISZERO V814
0x903: V816 = ISZERO V815
0x904: V817 = 0x60a
0x907: JUMPI 0x60a V816
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x908
[0x908:0x90b]
---
Predecessors: [0x8d6]
Successors: []
---
0x908 PUSH1 0x0
0x90a DUP1
0x90b REVERT
---
0x908: V818 = 0x0
0x90b: REVERT 0x0 0x0
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x90c
[0x90c:0x90c]
---
Predecessors: []
Successors: [0x90d]
---
0x90c JUMPDEST
---
0x90c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x90d
[0x90d:0x90f]
---
Predecessors: [0x90c]
Successors: []
Has unresolved jump.
---
0x90d JUMPDEST
0x90e POP
0x90f JUMP
---
0x90d: JUMPDEST 
0x90f: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x910
[0x910:0x915]
---
Predecessors: [0x760]
Successors: [0x916]
---
0x910 JUMPDEST
0x911 PUSH1 0x2
0x913 SLOAD
0x914 TIMESTAMP
0x915 GT
---
0x910: JUMPDEST 
0x911: V819 = 0x2
0x913: V820 = S[0x2]
0x914: V821 = TIMESTAMP
0x915: V822 = GT V821 V820
---
Entry stack: [V12, 0xd4, S4, {0x1d7, 0x579}, 0x0, V687, 0x774]
Stack pops: 0
Stack additions: [V822]
Exit stack: [V12, 0xd4, S4, {0x1d7, 0x579}, 0x0, V687, 0x774, V822]

================================

Block 0x916
[0x916:0x918]
---
Predecessors: [0x910]
Successors: [0x774]
---
0x916 JUMPDEST
0x917 SWAP1
0x918 JUMP
---
0x916: JUMPDEST 
0x918: JUMP 0x774
---
Entry stack: [V12, 0xd4, S5, {0x1d7, 0x579}, 0x0, V687, 0x774, V822]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0xd4, S5, {0x1d7, 0x579}, 0x0, V687, V822]

================================

Block 0x919
[0x919:0x92a]
---
Predecessors: [0x846]
Successors: [0x92b, 0x932]
---
0x919 JUMPDEST
0x91a PUSH1 0x0
0x91c DUP1
0x91d PUSH1 0x0
0x91f PUSH1 0x1
0x921 SLOAD
0x922 TIMESTAMP
0x923 LT
0x924 ISZERO
0x925 DUP1
0x926 ISZERO
0x927 PUSH2 0x932
0x92a JUMPI
---
0x919: JUMPDEST 
0x91a: V823 = 0x0
0x91d: V824 = 0x0
0x91f: V825 = 0x1
0x921: V826 = S[0x1]
0x922: V827 = TIMESTAMP
0x923: V828 = LT V827 V826
0x924: V829 = ISZERO V828
0x926: V830 = ISZERO V829
0x927: V831 = 0x932
0x92a: JUMPI 0x932 V830
---
Entry stack: [S11, S10, V12, S8, S7, S6, S5, S4, S3, S2, V760, 0x852]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V829]
Exit stack: [S11, S10, V12, S8, S7, S6, S5, S4, S3, S2, V760, 0x852, 0x0, 0x0, 0x0, V829]

================================

Block 0x92b
[0x92b:0x931]
---
Predecessors: [0x919]
Successors: [0x932]
---
0x92b POP
0x92c PUSH1 0x2
0x92e SLOAD
0x92f TIMESTAMP
0x930 GT
0x931 ISZERO
---
0x92c: V832 = 0x2
0x92e: V833 = S[0x2]
0x92f: V834 = TIMESTAMP
0x930: V835 = GT V834 V833
0x931: V836 = ISZERO V835
---
Entry stack: [S15, S14, V12, S12, S11, S10, S9, S8, S7, S6, V760, 0x852, 0x0, 0x0, 0x0, V829]
Stack pops: 1
Stack additions: [V836]
Exit stack: [S15, S14, V12, S12, S11, S10, S9, S8, S7, S6, V760, 0x852, 0x0, 0x0, 0x0, V836]

================================

Block 0x932
[0x932:0x93f]
---
Predecessors: [0x919, 0x92b]
Successors: [0x940, 0x942]
---
0x932 JUMPDEST
0x933 SWAP2
0x934 POP
0x935 POP
0x936 CALLVALUE
0x937 ISZERO
0x938 ISZERO
0x939 DUP2
0x93a DUP1
0x93b ISZERO
0x93c PUSH2 0x942
0x93f JUMPI
---
0x932: JUMPDEST 
0x936: V837 = CALLVALUE
0x937: V838 = ISZERO V837
0x938: V839 = ISZERO V838
0x93b: V840 = ISZERO S0
0x93c: V841 = 0x942
0x93f: JUMPI 0x942 V840
---
Entry stack: [S15, S14, V12, S12, S11, S10, S9, S8, S7, S6, V760, 0x852, 0x0, 0x0, 0x0, S0]
Stack pops: 3
Stack additions: [S0, V839, S0]
Exit stack: [S15, S14, V12, S12, S11, S10, S9, S8, S7, S6, V760, 0x852, 0x0, S0, V839, S0]

================================

Block 0x940
[0x940:0x941]
---
Predecessors: [0x932]
Successors: [0x942]
---
0x940 POP
0x941 DUP1
---
0x940: NOP 
---
Entry stack: [S15, S14, V12, S12, S11, S10, S9, S8, S7, S6, V760, 0x852, 0x0, S2, V839, S0]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [S15, S14, V12, S12, S11, S10, S9, S8, S7, S6, V760, 0x852, 0x0, S2, V839, V839]

================================

Block 0x942
[0x942:0x944]
---
Predecessors: [0x932, 0x940]
Successors: [0x945]
---
0x942 JUMPDEST
0x943 SWAP3
0x944 POP
---
0x942: JUMPDEST 
---
Entry stack: [S15, S14, V12, S12, S11, S10, S9, S8, S7, S6, V760, 0x852, 0x0, S2, S1, S0]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [S15, S14, V12, S12, S11, S10, S9, S8, S7, S6, V760, 0x852, S0, S2, S1]

================================

Block 0x945
[0x945:0x949]
---
Predecessors: [0x942]
Successors: [0x852]
---
0x945 JUMPDEST
0x946 POP
0x947 POP
0x948 SWAP1
0x949 JUMP
---
0x945: JUMPDEST 
0x949: JUMP 0x852
---
Entry stack: [V12, 0xd4, S10, 0x0, 0x0, 0x0, 0x34b, 0x0, V760, 0x852, S2, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, 0xd4, S10, 0x0, 0x0, 0x0, 0x34b, 0x0, V760, S2]

================================

Block 0x94a
[0x94a:0x956]
---
Predecessors: [0x8ca]
Successors: [0x957, 0x958]
---
0x94a JUMPDEST
0x94b PUSH1 0x0
0x94d DUP1
0x94e DUP3
0x94f DUP5
0x950 DUP2
0x951 ISZERO
0x952 ISZERO
0x953 PUSH2 0x958
0x956 JUMPI
---
0x94a: JUMPDEST 
0x94b: V842 = 0x0
0x951: V843 = ISZERO S0
0x952: V844 = ISZERO V843
0x953: V845 = 0x958
0x956: JUMPI 0x958 V844
---
Entry stack: [S12, S11, V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [S12, S11, V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0x957
[0x957:0x957]
---
Predecessors: [0x94a]
Successors: []
---
0x957 INVALID
---
0x957: INVALID 
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x958
[0x958:0x95e]
---
Predecessors: [0x94a]
Successors: [0x95f]
---
0x958 JUMPDEST
0x959 DIV
0x95a SWAP1
0x95b POP
0x95c DUP1
0x95d SWAP2
0x95e POP
---
0x958: JUMPDEST 
0x959: V846 = DIV S0 S1
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 4
Stack additions: [V846, V846]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V846, V846]

================================

Block 0x95f
[0x95f:0x965]
---
Predecessors: [0x958]
Successors: [0xd4, 0x8d6]
---
0x95f JUMPDEST
0x960 POP
0x961 SWAP3
0x962 SWAP2
0x963 POP
0x964 POP
0x965 JUMP
---
0x95f: JUMPDEST 
0x965: JUMP S4
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V846, V846]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V846]

================================

Block 0x966
[0x966:0x968]
---
Predecessors: []
Successors: [0x969]
---
0x966 JUMPDEST
0x967 PUSH1 0x0
---
0x966: JUMPDEST 
0x967: V847 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0]
Exit stack: [0x0]

================================

Block 0x969
[0x969:0x9a1]
---
Predecessors: [0x966]
Successors: []
---
0x969 JUMPDEST
0x96a SWAP1
0x96b JUMP
0x96c STOP
0x96d LOG1
0x96e PUSH6 0x627a7a723058
0x975 SHA3
0x976 MISSING 0xf7
0x977 JUMP
0x978 MISSING 0xca
0x979 MISSING 0x5d
0x97a PUSH8 0x67c854166a83cf1
0x983 MISSING 0xcc
0x984 MISSING 0xb9
0x985 SWAP11
0x986 MISSING 0xdc
0x987 LOG0
0x988 PUSH25 0x8bb88a0aab7e3b1d845ead5c4e0029
---
0x969: JUMPDEST 
0x96b: JUMP S1
0x96c: STOP 
0x96d: LOG S0 S1 S2
0x96e: V848 = 0x627a7a723058
0x975: V849 = SHA3 0x627a7a723058 S3
0x976: MISSING 0xf7
0x977: JUMP S0
0x978: MISSING 0xca
0x979: MISSING 0x5d
0x97a: V850 = 0x67c854166a83cf1
0x983: MISSING 0xcc
0x984: MISSING 0xb9
0x986: MISSING 0xdc
0x987: LOG S0 S1
0x988: V851 = 0x8bb88a0aab7e3b1d845ead5c4e0029
---
Entry stack: [0x0]
Stack pops: 688
Stack additions: [0x8bb88a0aab7e3b1d845ead5c4e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2c4e722e
Entry block: 0xd7
Exit block: 0xea
Body: 0xd7, 0xde, 0xe2, 0xea, 0x55d

Function 1:
Public function signature: 0x3197cbb6
Entry block: 0xfc
Exit block: 0xea
Body: 0xea, 0xfc, 0x103, 0x107, 0x563

Function 2:
Public function signature: 0x355274ea
Entry block: 0x121
Exit block: 0xea
Body: 0xea, 0x121, 0x128, 0x12c, 0x569

Function 3:
Public function signature: 0x3ccfd60b
Entry block: 0x146
Exit block: 0x908
Body: 0x146, 0x14d, 0x151, 0x56f, 0x579, 0x580, 0x908

Function 4:
Public function signature: 0x3f4ba83a
Entry block: 0x15b
Exit block: 0xd5
Body: 0xd4, 0xd5, 0x15b, 0x162, 0x166, 0x60e, 0x625, 0x629, 0x63d, 0x641, 0x68c, 0x68d, 0x68e

Function 5:
Public function signature: 0x4042b66f
Entry block: 0x170
Exit block: 0xea
Body: 0xea, 0x170, 0x177, 0x17b, 0x690

Function 6:
Public function signature: 0x521eb273
Entry block: 0x195
Exit block: 0x1a8
Body: 0x195, 0x19c, 0x1a0, 0x1a8, 0x696

Function 7:
Public function signature: 0x5c975abb
Entry block: 0x1c4
Exit block: 0x1d7
Body: 0x1c4, 0x1cb, 0x1cf, 0x1d7, 0x6a5

Function 8:
Public function signature: 0x78e97925
Entry block: 0x1eb
Exit block: 0xea
Body: 0xea, 0x1eb, 0x1f2, 0x1f6, 0x6b5

Function 9:
Public function signature: 0x8456cb59
Entry block: 0x210
Exit block: 0xd5
Body: 0xd4, 0xd5, 0x210, 0x217, 0x21b, 0x6bb, 0x6d2, 0x6d6, 0x6e9, 0x6ed, 0x73e, 0x73f, 0x740

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x225
Exit block: 0x1a8
Body: 0x1a8, 0x225, 0x22c, 0x230, 0x742

Function 11:
Public function signature: 0xbe10862b
Entry block: 0x254
Exit block: 0x1a8
Body: 0x1a8, 0x254, 0x25b, 0x25f, 0x751

Function 12:
Public function signature: 0xec8ac4d8
Entry block: 0x283
Exit block: 0xd5
Body: 0xd4, 0xd5, 0x283

Function 13:
Public function signature: 0xecb70fb7
Entry block: 0x299
Exit block: 0x2a0
Body: 0x1d7, 0x299, 0x2a0, 0x2a4

Function 14:
Public function signature: 0xf2fde38b
Entry block: 0x2c0
Exit block: 0xd5
Body: 0xd4, 0xd5, 0x2c0, 0x2c7, 0x2cb, 0x783, 0x79a, 0x79e, 0x7af, 0x7b3, 0x818, 0x819

Function 15:
Public function signature: 0xfc0c546a
Entry block: 0x2e1
Exit block: 0x1a8
Body: 0x1a8, 0x2e1, 0x2e8, 0x2ec, 0x81c

Function 16:
Public fallback function
Entry block: 0xca
Exit block: 0xd5
Body: 0xca, 0xcb, 0xd4, 0xd5

Function 17:
Private function
Entry block: 0x862
Exit block: 0x88a
Body: 0x34b, 0x356, 0x36d, 0x383, 0x3f8, 0x409, 0x466, 0x477, 0x4e3, 0x4f4, 0x555, 0x556, 0x557, 0x579, 0x584, 0x59a, 0x5cc, 0x60a, 0x60b, 0x77c, 0x77f, 0x846, 0x852, 0x859, 0x85b, 0x85e, 0x862, 0x86f, 0x87b, 0x87e, 0x886, 0x88a, 0x8ab, 0x8ca, 0x8d6, 0x919, 0x92b, 0x932, 0x940, 0x942, 0x945, 0x94a, 0x958, 0x95f

Function 18:
Private function
Entry block: 0x891
Exit block: 0x88a
Body: 0x34b, 0x356, 0x36d, 0x36d, 0x383, 0x3f8, 0x409, 0x466, 0x477, 0x4e3, 0x4f4, 0x555, 0x556, 0x557, 0x60a, 0x60b, 0x886, 0x88a, 0x891, 0x8ab, 0x8ca, 0x8d6, 0x94a, 0x958, 0x95f

Function 19:
Private function
Entry block: 0x760
Exit block: 0x77f
Body: 0x34b, 0x356, 0x36d, 0x383, 0x3f8, 0x409, 0x466, 0x477, 0x4e3, 0x4f4, 0x555, 0x556, 0x557, 0x60a, 0x60b, 0x760, 0x774, 0x77a, 0x77c, 0x77f, 0x8ab, 0x8ca, 0x8d6, 0x910, 0x916, 0x94a, 0x958, 0x95f

Function 20:
Private function
Entry block: 0x310
Exit block: 0x95f
Body: 0x310, 0x32e, 0x343, 0x34b, 0x356, 0x36d, 0x383, 0x3f8, 0x409, 0x466, 0x477, 0x4e3, 0x4f4, 0x555, 0x556, 0x557, 0x579, 0x584, 0x59a, 0x5cc, 0x60a, 0x60b, 0x77c, 0x77f, 0x82b, 0x846, 0x852, 0x859, 0x85b, 0x85e, 0x8ab, 0x8ca, 0x8d6, 0x919, 0x92b, 0x932, 0x940, 0x942, 0x945, 0x94a, 0x958, 0x95f

