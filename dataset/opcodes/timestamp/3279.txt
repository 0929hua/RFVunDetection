Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x474]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xd6103a1
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x474
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xd6103a1
0x20: V14 = EQ V12 0xd6103a1
0x21: V15 = 0x474
0x24: JUMPI 0x474 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x489]
---
0x25 DUP1
0x26 PUSH4 0x27ebcf0e
0x2b EQ
0x2c PUSH2 0x489
0x2f JUMPI
---
0x26: V16 = 0x27ebcf0e
0x2b: V17 = EQ 0x27ebcf0e V12
0x2c: V18 = 0x489
0x2f: JUMPI 0x489 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x4b8]
---
0x30 DUP1
0x31 PUSH4 0x519ee19e
0x36 EQ
0x37 PUSH2 0x4b8
0x3a JUMPI
---
0x31: V19 = 0x519ee19e
0x36: V20 = EQ 0x519ee19e V12
0x37: V21 = 0x4b8
0x3a: JUMPI 0x4b8 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x4dd]
---
0x3b DUP1
0x3c PUSH4 0x7fa8c158
0x41 EQ
0x42 PUSH2 0x4dd
0x45 JUMPI
---
0x3c: V22 = 0x7fa8c158
0x41: V23 = EQ 0x7fa8c158 V12
0x42: V24 = 0x4dd
0x45: JUMPI 0x4dd V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x502]
---
0x46 DUP1
0x47 PUSH4 0x8da5cb5b
0x4c EQ
0x4d PUSH2 0x502
0x50 JUMPI
---
0x47: V25 = 0x8da5cb5b
0x4c: V26 = EQ 0x8da5cb5b V12
0x4d: V27 = 0x502
0x50: JUMPI 0x502 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x531]
---
0x51 DUP1
0x52 PUSH4 0x96c5406d
0x57 EQ
0x58 PUSH2 0x531
0x5b JUMPI
---
0x52: V28 = 0x96c5406d
0x57: V29 = EQ 0x96c5406d V12
0x58: V30 = 0x531
0x5b: JUMPI 0x531 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x556]
---
0x5c DUP1
0x5d PUSH4 0xa035b1fe
0x62 EQ
0x63 PUSH2 0x556
0x66 JUMPI
---
0x5d: V31 = 0xa035b1fe
0x62: V32 = EQ 0xa035b1fe V12
0x63: V33 = 0x556
0x66: JUMPI 0x556 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x57b]
---
0x67 DUP1
0x68 PUSH4 0xb44eccc9
0x6d EQ
0x6e PUSH2 0x57b
0x71 JUMPI
---
0x68: V34 = 0xb44eccc9
0x6d: V35 = EQ 0xb44eccc9 V12
0x6e: V36 = 0x57b
0x71: JUMPI 0x57b V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x5a0]
---
0x72 DUP1
0x73 PUSH4 0xc8e569a8
0x78 EQ
0x79 PUSH2 0x5a0
0x7c JUMPI
---
0x73: V37 = 0xc8e569a8
0x78: V38 = EQ 0xc8e569a8 V12
0x79: V39 = 0x5a0
0x7c: JUMPI 0x5a0 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x5c5]
---
0x7d DUP1
0x7e PUSH4 0xccb07cef
0x83 EQ
0x84 PUSH2 0x5c5
0x87 JUMPI
---
0x7e: V40 = 0xccb07cef
0x83: V41 = EQ 0xccb07cef V12
0x84: V42 = 0x5c5
0x87: JUMPI 0x5c5 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x0, 0x7d]
Successors: [0x8c]
---
0x88 JUMPDEST
0x89 PUSH2 0x472
---
0x88: JUMPDEST 
0x89: V43 = 0x472
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x472]
Exit stack: [V12, 0x472]

================================

Block 0x8c
[0x8c:0xe4]
---
Predecessors: [0x88]
Successors: [0xe5, 0xe9]
---
0x8c JUMPDEST
0x8d PUSH1 0x0
0x8f DUP1
0x90 SLOAD
0x91 DUP2
0x92 SWAP1
0x93 DUP2
0x94 SWAP1
0x95 PUSH1 0x1
0x97 PUSH1 0xa0
0x99 PUSH1 0x2
0x9b EXP
0x9c SUB
0x9d AND
0x9e PUSH4 0x70a08231
0xa3 ADDRESS
0xa4 DUP4
0xa5 PUSH1 0x40
0xa7 MLOAD
0xa8 PUSH1 0x20
0xaa ADD
0xab MSTORE
0xac PUSH1 0x40
0xae MLOAD
0xaf PUSH1 0xe0
0xb1 PUSH1 0x2
0xb3 EXP
0xb4 PUSH4 0xffffffff
0xb9 DUP5
0xba AND
0xbb MUL
0xbc DUP2
0xbd MSTORE
0xbe PUSH1 0x1
0xc0 PUSH1 0xa0
0xc2 PUSH1 0x2
0xc4 EXP
0xc5 SUB
0xc6 SWAP1
0xc7 SWAP2
0xc8 AND
0xc9 PUSH1 0x4
0xcb DUP3
0xcc ADD
0xcd MSTORE
0xce PUSH1 0x24
0xd0 ADD
0xd1 PUSH1 0x20
0xd3 PUSH1 0x40
0xd5 MLOAD
0xd6 DUP1
0xd7 DUP4
0xd8 SUB
0xd9 DUP2
0xda PUSH1 0x0
0xdc DUP8
0xdd DUP1
0xde EXTCODESIZE
0xdf ISZERO
0xe0 ISZERO
0xe1 PUSH2 0xe9
0xe4 JUMPI
---
0x8c: JUMPDEST 
0x8d: V44 = 0x0
0x90: V45 = S[0x0]
0x95: V46 = 0x1
0x97: V47 = 0xa0
0x99: V48 = 0x2
0x9b: V49 = EXP 0x2 0xa0
0x9c: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0x9e: V52 = 0x70a08231
0xa3: V53 = ADDRESS
0xa5: V54 = 0x40
0xa7: V55 = M[0x40]
0xa8: V56 = 0x20
0xaa: V57 = ADD 0x20 V55
0xab: M[V57] = 0x0
0xac: V58 = 0x40
0xae: V59 = M[0x40]
0xaf: V60 = 0xe0
0xb1: V61 = 0x2
0xb3: V62 = EXP 0x2 0xe0
0xb4: V63 = 0xffffffff
0xba: V64 = AND 0x70a08231 0xffffffff
0xbb: V65 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xbd: M[V59] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xbe: V66 = 0x1
0xc0: V67 = 0xa0
0xc2: V68 = 0x2
0xc4: V69 = EXP 0x2 0xa0
0xc5: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc8: V71 = AND V53 0xffffffffffffffffffffffffffffffffffffffff
0xc9: V72 = 0x4
0xcc: V73 = ADD V59 0x4
0xcd: M[V73] = V71
0xce: V74 = 0x24
0xd0: V75 = ADD 0x24 V59
0xd1: V76 = 0x20
0xd3: V77 = 0x40
0xd5: V78 = M[0x40]
0xd8: V79 = SUB V75 V78
0xda: V80 = 0x0
0xde: V81 = EXTCODESIZE V51
0xdf: V82 = ISZERO V81
0xe0: V83 = ISZERO V82
0xe1: V84 = 0xe9
0xe4: JUMPI 0xe9 V83
---
Entry stack: [V12, 0x472]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V51, 0x70a08231, V75, 0x20, V78, V79, V78, 0x0, V51]
Exit stack: [V12, 0x472, 0x0, 0x0, 0x0, V51, 0x70a08231, V75, 0x20, V78, V79, V78, 0x0, V51]

================================

Block 0xe5
[0xe5:0xe8]
---
Predecessors: [0x8c]
Successors: []
---
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 REVERT
---
0xe5: V85 = 0x0
0xe8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, 0x0, 0x0, 0x0, V51, 0x70a08231, V75, 0x20, V78, V79, V78, 0x0, V51]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, 0x0, 0x0, 0x0, V51, 0x70a08231, V75, 0x20, V78, V79, V78, 0x0, V51]

================================

Block 0xe9
[0xe9:0xf5]
---
Predecessors: [0x8c]
Successors: [0xf6, 0xfa]
---
0xe9 JUMPDEST
0xea PUSH2 0x2c6
0xed GAS
0xee SUB
0xef CALL
0xf0 ISZERO
0xf1 ISZERO
0xf2 PUSH2 0xfa
0xf5 JUMPI
---
0xe9: JUMPDEST 
0xea: V86 = 0x2c6
0xed: V87 = GAS
0xee: V88 = SUB V87 0x2c6
0xef: V89 = CALL V88 V51 0x0 V78 V79 V78 0x20
0xf0: V90 = ISZERO V89
0xf1: V91 = ISZERO V90
0xf2: V92 = 0xfa
0xf5: JUMPI 0xfa V91
---
Entry stack: [V12, 0x472, 0x0, 0x0, 0x0, V51, 0x70a08231, V75, 0x20, V78, V79, V78, 0x0, V51]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x472, 0x0, 0x0, 0x0, V51, 0x70a08231, V75]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0xe9]
Successors: []
---
0xf6 PUSH1 0x0
0xf8 DUP1
0xf9 REVERT
---
0xf6: V93 = 0x0
0xf9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, 0x0, 0x0, 0x0, V51, 0x70a08231, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, 0x0, 0x0, 0x0, V51, 0x70a08231, V75]

================================

Block 0xfa
[0xfa:0x113]
---
Predecessors: [0xe9]
Successors: [0x114, 0x157]
---
0xfa JUMPDEST
0xfb POP
0xfc POP
0xfd POP
0xfe PUSH1 0x40
0x100 MLOAD
0x101 DUP1
0x102 MLOAD
0x103 PUSH1 0x7
0x105 SSTORE
0x106 POP
0x107 PUSH1 0x3
0x109 SLOAD
0x10a PUSH1 0x1
0x10c ADD
0x10d TIMESTAMP
0x10e GT
0x10f ISZERO
0x110 PUSH2 0x157
0x113 JUMPI
---
0xfa: JUMPDEST 
0xfe: V94 = 0x40
0x100: V95 = M[0x40]
0x102: V96 = M[V95]
0x103: V97 = 0x7
0x105: S[0x7] = V96
0x107: V98 = 0x3
0x109: V99 = S[0x3]
0x10a: V100 = 0x1
0x10c: V101 = ADD 0x1 V99
0x10d: V102 = TIMESTAMP
0x10e: V103 = GT V102 V101
0x10f: V104 = ISZERO V103
0x110: V105 = 0x157
0x113: JUMPI 0x157 V104
---
Entry stack: [V12, 0x472, 0x0, 0x0, 0x0, V51, 0x70a08231, V75]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x472, 0x0, 0x0, 0x0]

================================

Block 0x114
[0x114:0x140]
---
Predecessors: [0xfa]
Successors: [0x141, 0x145]
---
0x114 PUSH1 0x1
0x116 PUSH1 0xa0
0x118 PUSH1 0x2
0x11a EXP
0x11b SUB
0x11c CALLER
0x11d AND
0x11e CALLVALUE
0x11f DUP1
0x120 ISZERO
0x121 PUSH2 0x8fc
0x124 MUL
0x125 SWAP1
0x126 PUSH1 0x40
0x128 MLOAD
0x129 PUSH1 0x0
0x12b PUSH1 0x40
0x12d MLOAD
0x12e DUP1
0x12f DUP4
0x130 SUB
0x131 DUP2
0x132 DUP6
0x133 DUP9
0x134 DUP9
0x135 CALL
0x136 SWAP4
0x137 POP
0x138 POP
0x139 POP
0x13a POP
0x13b ISZERO
0x13c ISZERO
0x13d PUSH2 0x145
0x140 JUMPI
---
0x114: V106 = 0x1
0x116: V107 = 0xa0
0x118: V108 = 0x2
0x11a: V109 = EXP 0x2 0xa0
0x11b: V110 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11c: V111 = CALLER
0x11d: V112 = AND V111 0xffffffffffffffffffffffffffffffffffffffff
0x11e: V113 = CALLVALUE
0x120: V114 = ISZERO V113
0x121: V115 = 0x8fc
0x124: V116 = MUL 0x8fc V114
0x126: V117 = 0x40
0x128: V118 = M[0x40]
0x129: V119 = 0x0
0x12b: V120 = 0x40
0x12d: V121 = M[0x40]
0x130: V122 = SUB V118 V121
0x135: V123 = CALL V116 V112 V113 V121 V122 V121 0x0
0x13b: V124 = ISZERO V123
0x13c: V125 = ISZERO V124
0x13d: V126 = 0x145
0x140: JUMPI 0x145 V125
---
Entry stack: [V12, 0x472, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, 0x0, 0x0, 0x0]

================================

Block 0x141
[0x141:0x144]
---
Predecessors: [0x114]
Successors: []
---
0x141 PUSH1 0x0
0x143 DUP1
0x144 REVERT
---
0x141: V127 = 0x0
0x144: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, 0x0, 0x0, 0x0]

================================

Block 0x145
[0x145:0x156]
---
Predecessors: [0x114]
Successors: [0x3fa]
---
0x145 JUMPDEST
0x146 PUSH1 0x8
0x148 DUP1
0x149 SLOAD
0x14a PUSH1 0xff
0x14c NOT
0x14d AND
0x14e PUSH1 0x1
0x150 OR
0x151 SWAP1
0x152 SSTORE
0x153 PUSH2 0x3fa
0x156 JUMP
---
0x145: JUMPDEST 
0x146: V128 = 0x8
0x149: V129 = S[0x8]
0x14a: V130 = 0xff
0x14c: V131 = NOT 0xff
0x14d: V132 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V129
0x14e: V133 = 0x1
0x150: V134 = OR 0x1 V132
0x152: S[0x8] = V134
0x153: V135 = 0x3fa
0x156: JUMP 0x3fa
---
Entry stack: [V12, 0x472, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, 0x0, 0x0, 0x0]

================================

Block 0x157
[0x157:0x162]
---
Predecessors: [0xfa]
Successors: [0x163, 0x199]
---
0x157 JUMPDEST
0x158 PUSH1 0x8
0x15a SLOAD
0x15b PUSH1 0xff
0x15d AND
0x15e ISZERO
0x15f PUSH2 0x199
0x162 JUMPI
---
0x157: JUMPDEST 
0x158: V136 = 0x8
0x15a: V137 = S[0x8]
0x15b: V138 = 0xff
0x15d: V139 = AND 0xff V137
0x15e: V140 = ISZERO V139
0x15f: V141 = 0x199
0x162: JUMPI 0x199 V140
---
Entry stack: [V12, 0x472, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, 0x0, 0x0, 0x0]

================================

Block 0x163
[0x163:0x18f]
---
Predecessors: [0x157]
Successors: [0x190, 0x194]
---
0x163 PUSH1 0x1
0x165 PUSH1 0xa0
0x167 PUSH1 0x2
0x169 EXP
0x16a SUB
0x16b CALLER
0x16c AND
0x16d CALLVALUE
0x16e DUP1
0x16f ISZERO
0x170 PUSH2 0x8fc
0x173 MUL
0x174 SWAP1
0x175 PUSH1 0x40
0x177 MLOAD
0x178 PUSH1 0x0
0x17a PUSH1 0x40
0x17c MLOAD
0x17d DUP1
0x17e DUP4
0x17f SUB
0x180 DUP2
0x181 DUP6
0x182 DUP9
0x183 DUP9
0x184 CALL
0x185 SWAP4
0x186 POP
0x187 POP
0x188 POP
0x189 POP
0x18a ISZERO
0x18b ISZERO
0x18c PUSH2 0x194
0x18f JUMPI
---
0x163: V142 = 0x1
0x165: V143 = 0xa0
0x167: V144 = 0x2
0x169: V145 = EXP 0x2 0xa0
0x16a: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16b: V147 = CALLER
0x16c: V148 = AND V147 0xffffffffffffffffffffffffffffffffffffffff
0x16d: V149 = CALLVALUE
0x16f: V150 = ISZERO V149
0x170: V151 = 0x8fc
0x173: V152 = MUL 0x8fc V150
0x175: V153 = 0x40
0x177: V154 = M[0x40]
0x178: V155 = 0x0
0x17a: V156 = 0x40
0x17c: V157 = M[0x40]
0x17f: V158 = SUB V154 V157
0x184: V159 = CALL V152 V148 V149 V157 V158 V157 0x0
0x18a: V160 = ISZERO V159
0x18b: V161 = ISZERO V160
0x18c: V162 = 0x194
0x18f: JUMPI 0x194 V161
---
Entry stack: [V12, 0x472, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, 0x0, 0x0, 0x0]

================================

Block 0x190
[0x190:0x193]
---
Predecessors: [0x163]
Successors: []
---
0x190 PUSH1 0x0
0x192 DUP1
0x193 REVERT
---
0x190: V163 = 0x0
0x193: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, 0x0, 0x0, 0x0]

================================

Block 0x194
[0x194:0x198]
---
Predecessors: [0x163, 0x2b6]
Successors: [0x3fa]
---
0x194 JUMPDEST
0x195 PUSH2 0x3fa
0x198 JUMP
---
0x194: JUMPDEST 
0x195: V164 = 0x3fa
0x198: JUMP 0x3fa
---
Entry stack: [V12, 0x472, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, S2, S1, 0x0]

================================

Block 0x199
[0x199:0x1a7]
---
Predecessors: [0x157]
Successors: [0x1a8, 0x1a9]
---
0x199 JUMPDEST
0x19a PUSH1 0x5
0x19c SLOAD
0x19d PUSH1 0x4
0x19f SLOAD
0x1a0 CALLVALUE
0x1a1 DUP2
0x1a2 ISZERO
0x1a3 ISZERO
0x1a4 PUSH2 0x1a9
0x1a7 JUMPI
---
0x199: JUMPDEST 
0x19a: V165 = 0x5
0x19c: V166 = S[0x5]
0x19d: V167 = 0x4
0x19f: V168 = S[0x4]
0x1a0: V169 = CALLVALUE
0x1a2: V170 = ISZERO V168
0x1a3: V171 = ISZERO V170
0x1a4: V172 = 0x1a9
0x1a7: JUMPI 0x1a9 V171
---
Entry stack: [V12, 0x472, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V166, V168, V169]
Exit stack: [V12, 0x472, 0x0, 0x0, 0x0, V166, V168, V169]

================================

Block 0x1a8
[0x1a8:0x1a8]
---
Predecessors: [0x199]
Successors: []
---
0x1a8 INVALID
---
0x1a8: INVALID 
---
Entry stack: [V12, 0x472, 0x0, 0x0, 0x0, V166, V168, V169]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, 0x0, 0x0, 0x0, V166, V168, V169]

================================

Block 0x1a9
[0x1a9:0x1b5]
---
Predecessors: [0x199]
Successors: [0x1b6, 0x1ba]
---
0x1a9 JUMPDEST
0x1aa DIV
0x1ab MUL
0x1ac SWAP3
0x1ad POP
0x1ae PUSH1 0x0
0x1b0 DUP4
0x1b1 GT
0x1b2 PUSH2 0x1ba
0x1b5 JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V173 = DIV V169 V168
0x1ab: V174 = MUL V173 V166
0x1ae: V175 = 0x0
0x1b1: V176 = GT V174 0x0
0x1b2: V177 = 0x1ba
0x1b5: JUMPI 0x1ba V176
---
Entry stack: [V12, 0x472, 0x0, 0x0, 0x0, V166, V168, V169]
Stack pops: 6
Stack additions: [V174, S4, S3]
Exit stack: [V12, 0x472, V174, 0x0, 0x0]

================================

Block 0x1b6
[0x1b6:0x1b9]
---
Predecessors: [0x1a9]
Successors: []
---
0x1b6 PUSH1 0x0
0x1b8 DUP1
0x1b9 REVERT
---
0x1b6: V178 = 0x0
0x1b9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, V174, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V174, 0x0, 0x0]

================================

Block 0x1ba
[0x1ba:0x1c9]
---
Predecessors: [0x1a9]
Successors: [0x1ca, 0x1cb]
---
0x1ba JUMPDEST
0x1bb PUSH1 0x5
0x1bd SLOAD
0x1be PUSH1 0x4
0x1c0 SLOAD
0x1c1 DUP5
0x1c2 MUL
0x1c3 DUP2
0x1c4 ISZERO
0x1c5 ISZERO
0x1c6 PUSH2 0x1cb
0x1c9 JUMPI
---
0x1ba: JUMPDEST 
0x1bb: V179 = 0x5
0x1bd: V180 = S[0x5]
0x1be: V181 = 0x4
0x1c0: V182 = S[0x4]
0x1c2: V183 = MUL V174 V182
0x1c4: V184 = ISZERO V180
0x1c5: V185 = ISZERO V184
0x1c6: V186 = 0x1cb
0x1c9: JUMPI 0x1cb V185
---
Entry stack: [V12, 0x472, V174, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V180, V183]
Exit stack: [V12, 0x472, V174, 0x0, 0x0, V180, V183]

================================

Block 0x1ca
[0x1ca:0x1ca]
---
Predecessors: [0x1ba]
Successors: []
---
0x1ca INVALID
---
0x1ca: INVALID 
---
Entry stack: [V12, 0x472, V174, 0x0, 0x0, V180, V183]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V174, 0x0, 0x0, V180, V183]

================================

Block 0x1cb
[0x1cb:0x1d9]
---
Predecessors: [0x1ba]
Successors: [0x1da, 0x2e5]
---
0x1cb JUMPDEST
0x1cc DIV
0x1cd SWAP2
0x1ce POP
0x1cf DUP3
0x1d0 PUSH1 0x7
0x1d2 SLOAD
0x1d3 LT
0x1d4 ISZERO
0x1d5 ISZERO
0x1d6 PUSH2 0x2e5
0x1d9 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V187 = DIV V183 V180
0x1d0: V188 = 0x7
0x1d2: V189 = S[0x7]
0x1d3: V190 = LT V189 V174
0x1d4: V191 = ISZERO V190
0x1d5: V192 = ISZERO V191
0x1d6: V193 = 0x2e5
0x1d9: JUMPI 0x2e5 V192
---
Entry stack: [V12, 0x472, V174, 0x0, 0x0, V180, V183]
Stack pops: 5
Stack additions: [S4, V187, S2]
Exit stack: [V12, 0x472, V174, V187, 0x0]

================================

Block 0x1da
[0x1da:0x20c]
---
Predecessors: [0x1cb]
Successors: [0x20d, 0x211]
---
0x1da PUSH1 0x8
0x1dc SLOAD
0x1dd PUSH2 0x100
0x1e0 SWAP1
0x1e1 DIV
0x1e2 PUSH1 0x1
0x1e4 PUSH1 0xa0
0x1e6 PUSH1 0x2
0x1e8 EXP
0x1e9 SUB
0x1ea AND
0x1eb PUSH2 0x8fc
0x1ee DUP4
0x1ef ISZERO
0x1f0 MUL
0x1f1 DUP4
0x1f2 PUSH1 0x40
0x1f4 MLOAD
0x1f5 PUSH1 0x0
0x1f7 PUSH1 0x40
0x1f9 MLOAD
0x1fa DUP1
0x1fb DUP4
0x1fc SUB
0x1fd DUP2
0x1fe DUP6
0x1ff DUP9
0x200 DUP9
0x201 CALL
0x202 SWAP4
0x203 POP
0x204 POP
0x205 POP
0x206 POP
0x207 ISZERO
0x208 ISZERO
0x209 PUSH2 0x211
0x20c JUMPI
---
0x1da: V194 = 0x8
0x1dc: V195 = S[0x8]
0x1dd: V196 = 0x100
0x1e1: V197 = DIV V195 0x100
0x1e2: V198 = 0x1
0x1e4: V199 = 0xa0
0x1e6: V200 = 0x2
0x1e8: V201 = EXP 0x2 0xa0
0x1e9: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ea: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x1eb: V204 = 0x8fc
0x1ef: V205 = ISZERO V187
0x1f0: V206 = MUL V205 0x8fc
0x1f2: V207 = 0x40
0x1f4: V208 = M[0x40]
0x1f5: V209 = 0x0
0x1f7: V210 = 0x40
0x1f9: V211 = M[0x40]
0x1fc: V212 = SUB V208 V211
0x201: V213 = CALL V206 V203 V187 V211 V212 V211 0x0
0x207: V214 = ISZERO V213
0x208: V215 = ISZERO V214
0x209: V216 = 0x211
0x20c: JUMPI 0x211 V215
---
Entry stack: [V12, 0x472, V174, V187, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x472, V174, V187, 0x0]

================================

Block 0x20d
[0x20d:0x210]
---
Predecessors: [0x1da]
Successors: []
---
0x20d PUSH1 0x0
0x20f DUP1
0x210 REVERT
---
0x20d: V217 = 0x0
0x210: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, V174, V187, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V174, V187, 0x0]

================================

Block 0x211
[0x211:0x219]
---
Predecessors: [0x1da]
Successors: [0x21a, 0x24e]
---
0x211 JUMPDEST
0x212 DUP2
0x213 CALLVALUE
0x214 GT
0x215 ISZERO
0x216 PUSH2 0x24e
0x219 JUMPI
---
0x211: JUMPDEST 
0x213: V218 = CALLVALUE
0x214: V219 = GT V218 V187
0x215: V220 = ISZERO V219
0x216: V221 = 0x24e
0x219: JUMPI 0x24e V220
---
Entry stack: [V12, 0x472, V174, V187, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x472, V174, V187, 0x0]

================================

Block 0x21a
[0x21a:0x249]
---
Predecessors: [0x211]
Successors: [0x24a, 0x24e]
---
0x21a CALLER
0x21b PUSH1 0x1
0x21d PUSH1 0xa0
0x21f PUSH1 0x2
0x221 EXP
0x222 SUB
0x223 AND
0x224 PUSH2 0x8fc
0x227 DUP4
0x228 CALLVALUE
0x229 SUB
0x22a SWAP1
0x22b DUP2
0x22c ISZERO
0x22d MUL
0x22e SWAP1
0x22f PUSH1 0x40
0x231 MLOAD
0x232 PUSH1 0x0
0x234 PUSH1 0x40
0x236 MLOAD
0x237 DUP1
0x238 DUP4
0x239 SUB
0x23a DUP2
0x23b DUP6
0x23c DUP9
0x23d DUP9
0x23e CALL
0x23f SWAP4
0x240 POP
0x241 POP
0x242 POP
0x243 POP
0x244 ISZERO
0x245 ISZERO
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x21a: V222 = CALLER
0x21b: V223 = 0x1
0x21d: V224 = 0xa0
0x21f: V225 = 0x2
0x221: V226 = EXP 0x2 0xa0
0x222: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x223: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x224: V229 = 0x8fc
0x228: V230 = CALLVALUE
0x229: V231 = SUB V230 V187
0x22c: V232 = ISZERO V231
0x22d: V233 = MUL V232 0x8fc
0x22f: V234 = 0x40
0x231: V235 = M[0x40]
0x232: V236 = 0x0
0x234: V237 = 0x40
0x236: V238 = M[0x40]
0x239: V239 = SUB V235 V238
0x23e: V240 = CALL V233 V228 V231 V238 V239 V238 0x0
0x244: V241 = ISZERO V240
0x245: V242 = ISZERO V241
0x246: V243 = 0x24e
0x249: JUMPI 0x24e V242
---
Entry stack: [V12, 0x472, V174, V187, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x472, V174, V187, 0x0]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x21a]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V244 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, V174, V187, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V174, V187, 0x0]

================================

Block 0x24e
[0x24e:0x24e]
---
Predecessors: [0x211, 0x21a]
Successors: [0x24f]
---
0x24e JUMPDEST
---
0x24e: JUMPDEST 
---
Entry stack: [V12, 0x472, V174, V187, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V174, V187, 0x0]

================================

Block 0x24f
[0x24f:0x2a0]
---
Predecessors: [0x24e]
Successors: [0x2a1, 0x2a5]
---
0x24f JUMPDEST
0x250 PUSH1 0x0
0x252 SLOAD
0x253 PUSH1 0x1
0x255 PUSH1 0xa0
0x257 PUSH1 0x2
0x259 EXP
0x25a SUB
0x25b AND
0x25c PUSH4 0xa9059cbb
0x261 CALLER
0x262 DUP6
0x263 PUSH1 0x40
0x265 MLOAD
0x266 PUSH1 0xe0
0x268 PUSH1 0x2
0x26a EXP
0x26b PUSH4 0xffffffff
0x270 DUP6
0x271 AND
0x272 MUL
0x273 DUP2
0x274 MSTORE
0x275 PUSH1 0x1
0x277 PUSH1 0xa0
0x279 PUSH1 0x2
0x27b EXP
0x27c SUB
0x27d SWAP1
0x27e SWAP3
0x27f AND
0x280 PUSH1 0x4
0x282 DUP4
0x283 ADD
0x284 MSTORE
0x285 PUSH1 0x24
0x287 DUP3
0x288 ADD
0x289 MSTORE
0x28a PUSH1 0x44
0x28c ADD
0x28d PUSH1 0x0
0x28f PUSH1 0x40
0x291 MLOAD
0x292 DUP1
0x293 DUP4
0x294 SUB
0x295 DUP2
0x296 PUSH1 0x0
0x298 DUP8
0x299 DUP1
0x29a EXTCODESIZE
0x29b ISZERO
0x29c ISZERO
0x29d PUSH2 0x2a5
0x2a0 JUMPI
---
0x24f: JUMPDEST 
0x250: V245 = 0x0
0x252: V246 = S[0x0]
0x253: V247 = 0x1
0x255: V248 = 0xa0
0x257: V249 = 0x2
0x259: V250 = EXP 0x2 0xa0
0x25a: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25b: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x25c: V253 = 0xa9059cbb
0x261: V254 = CALLER
0x263: V255 = 0x40
0x265: V256 = M[0x40]
0x266: V257 = 0xe0
0x268: V258 = 0x2
0x26a: V259 = EXP 0x2 0xe0
0x26b: V260 = 0xffffffff
0x271: V261 = AND 0xa9059cbb 0xffffffff
0x272: V262 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x274: M[V256] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x275: V263 = 0x1
0x277: V264 = 0xa0
0x279: V265 = 0x2
0x27b: V266 = EXP 0x2 0xa0
0x27c: V267 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27f: V268 = AND V254 0xffffffffffffffffffffffffffffffffffffffff
0x280: V269 = 0x4
0x283: V270 = ADD V256 0x4
0x284: M[V270] = V268
0x285: V271 = 0x24
0x288: V272 = ADD V256 0x24
0x289: M[V272] = V174
0x28a: V273 = 0x44
0x28c: V274 = ADD 0x44 V256
0x28d: V275 = 0x0
0x28f: V276 = 0x40
0x291: V277 = M[0x40]
0x294: V278 = SUB V274 V277
0x296: V279 = 0x0
0x29a: V280 = EXTCODESIZE V252
0x29b: V281 = ISZERO V280
0x29c: V282 = ISZERO V281
0x29d: V283 = 0x2a5
0x2a0: JUMPI 0x2a5 V282
---
Entry stack: [V12, 0x472, V174, V187, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V252, 0xa9059cbb, V274, 0x0, V277, V278, V277, 0x0, V252]
Exit stack: [V12, 0x472, V174, V187, 0x0, V252, 0xa9059cbb, V274, 0x0, V277, V278, V277, 0x0, V252]

================================

Block 0x2a1
[0x2a1:0x2a4]
---
Predecessors: [0x24f]
Successors: []
---
0x2a1 PUSH1 0x0
0x2a3 DUP1
0x2a4 REVERT
---
0x2a1: V284 = 0x0
0x2a4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, V174, V187, 0x0, V252, 0xa9059cbb, V274, 0x0, V277, V278, V277, 0x0, V252]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V174, V187, 0x0, V252, 0xa9059cbb, V274, 0x0, V277, V278, V277, 0x0, V252]

================================

Block 0x2a5
[0x2a5:0x2b1]
---
Predecessors: [0x24f]
Successors: [0x2b2, 0x2b6]
---
0x2a5 JUMPDEST
0x2a6 PUSH2 0x2c6
0x2a9 GAS
0x2aa SUB
0x2ab CALL
0x2ac ISZERO
0x2ad ISZERO
0x2ae PUSH2 0x2b6
0x2b1 JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V285 = 0x2c6
0x2a9: V286 = GAS
0x2aa: V287 = SUB V286 0x2c6
0x2ab: V288 = CALL V287 V252 0x0 V277 V278 V277 0x0
0x2ac: V289 = ISZERO V288
0x2ad: V290 = ISZERO V289
0x2ae: V291 = 0x2b6
0x2b1: JUMPI 0x2b6 V290
---
Entry stack: [V12, 0x472, V174, V187, 0x0, V252, 0xa9059cbb, V274, 0x0, V277, V278, V277, 0x0, V252]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x472, V174, V187, 0x0, V252, 0xa9059cbb, V274]

================================

Block 0x2b2
[0x2b2:0x2b5]
---
Predecessors: [0x2a5]
Successors: []
---
0x2b2 PUSH1 0x0
0x2b4 DUP1
0x2b5 REVERT
---
0x2b2: V292 = 0x0
0x2b5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, V174, V187, 0x0, V252, 0xa9059cbb, V274]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V174, V187, 0x0, V252, 0xa9059cbb, V274]

================================

Block 0x2b6
[0x2b6:0x2d2]
---
Predecessors: [0x2a5]
Successors: [0x194, 0x2d3]
---
0x2b6 JUMPDEST
0x2b7 POP
0x2b8 POP
0x2b9 PUSH1 0x6
0x2bb DUP1
0x2bc SLOAD
0x2bd DUP6
0x2be ADD
0x2bf SWAP1
0x2c0 SSTORE
0x2c1 POP
0x2c2 PUSH1 0x7
0x2c4 DUP1
0x2c5 SLOAD
0x2c6 DUP5
0x2c7 SWAP1
0x2c8 SUB
0x2c9 SWAP1
0x2ca DUP2
0x2cb SWAP1
0x2cc SSTORE
0x2cd ISZERO
0x2ce ISZERO
0x2cf PUSH2 0x194
0x2d2 JUMPI
---
0x2b6: JUMPDEST 
0x2b9: V293 = 0x6
0x2bc: V294 = S[0x6]
0x2be: V295 = ADD V174 V294
0x2c0: S[0x6] = V295
0x2c2: V296 = 0x7
0x2c5: V297 = S[0x7]
0x2c8: V298 = SUB V297 V174
0x2cc: S[0x7] = V298
0x2cd: V299 = ISZERO V298
0x2ce: V300 = ISZERO V299
0x2cf: V301 = 0x194
0x2d2: JUMPI 0x194 V300
---
Entry stack: [V12, 0x472, V174, V187, 0x0, V252, 0xa9059cbb, V274]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, 0x472, V174, V187, 0x0]

================================

Block 0x2d3
[0x2d3:0x2df]
---
Predecessors: [0x2b6]
Successors: [0x2e0]
---
0x2d3 PUSH1 0x8
0x2d5 DUP1
0x2d6 SLOAD
0x2d7 PUSH1 0xff
0x2d9 NOT
0x2da AND
0x2db PUSH1 0x1
0x2dd OR
0x2de SWAP1
0x2df SSTORE
---
0x2d3: V302 = 0x8
0x2d6: V303 = S[0x8]
0x2d7: V304 = 0xff
0x2d9: V305 = NOT 0xff
0x2da: V306 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V303
0x2db: V307 = 0x1
0x2dd: V308 = OR 0x1 V306
0x2df: S[0x8] = V308
---
Entry stack: [V12, 0x472, V174, V187, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V174, V187, 0x0]

================================

Block 0x2e0
[0x2e0:0x2e4]
---
Predecessors: [0x2d3]
Successors: [0x3fa]
---
0x2e0 JUMPDEST
0x2e1 PUSH2 0x3fa
0x2e4 JUMP
---
0x2e0: JUMPDEST 
0x2e1: V309 = 0x3fa
0x2e4: JUMP 0x3fa
---
Entry stack: [V12, 0x472, V174, V187, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V174, V187, 0x0]

================================

Block 0x2e5
[0x2e5:0x2f6]
---
Predecessors: [0x1cb]
Successors: [0x2f7, 0x2f8]
---
0x2e5 JUMPDEST
0x2e6 PUSH1 0x5
0x2e8 SLOAD
0x2e9 PUSH1 0x4
0x2eb SLOAD
0x2ec PUSH1 0x7
0x2ee SLOAD
0x2ef MUL
0x2f0 DUP2
0x2f1 ISZERO
0x2f2 ISZERO
0x2f3 PUSH2 0x2f8
0x2f6 JUMPI
---
0x2e5: JUMPDEST 
0x2e6: V310 = 0x5
0x2e8: V311 = S[0x5]
0x2e9: V312 = 0x4
0x2eb: V313 = S[0x4]
0x2ec: V314 = 0x7
0x2ee: V315 = S[0x7]
0x2ef: V316 = MUL V315 V313
0x2f1: V317 = ISZERO V311
0x2f2: V318 = ISZERO V317
0x2f3: V319 = 0x2f8
0x2f6: JUMPI 0x2f8 V318
---
Entry stack: [V12, 0x472, V174, V187, 0x0]
Stack pops: 0
Stack additions: [V311, V316]
Exit stack: [V12, 0x472, V174, V187, 0x0, V311, V316]

================================

Block 0x2f7
[0x2f7:0x2f7]
---
Predecessors: [0x2e5]
Successors: []
---
0x2f7 INVALID
---
0x2f7: INVALID 
---
Entry stack: [V12, 0x472, V174, V187, 0x0, V311, V316]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V174, V187, 0x0, V311, V316]

================================

Block 0x2f8
[0x2f8:0x330]
---
Predecessors: [0x2e5]
Successors: [0x331, 0x335]
---
0x2f8 JUMPDEST
0x2f9 PUSH1 0x8
0x2fb SLOAD
0x2fc SWAP2
0x2fd SWAP1
0x2fe DIV
0x2ff SWAP2
0x300 POP
0x301 PUSH2 0x100
0x304 SWAP1
0x305 DIV
0x306 PUSH1 0x1
0x308 PUSH1 0xa0
0x30a PUSH1 0x2
0x30c EXP
0x30d SUB
0x30e AND
0x30f PUSH2 0x8fc
0x312 DUP3
0x313 ISZERO
0x314 MUL
0x315 DUP3
0x316 PUSH1 0x40
0x318 MLOAD
0x319 PUSH1 0x0
0x31b PUSH1 0x40
0x31d MLOAD
0x31e DUP1
0x31f DUP4
0x320 SUB
0x321 DUP2
0x322 DUP6
0x323 DUP9
0x324 DUP9
0x325 CALL
0x326 SWAP4
0x327 POP
0x328 POP
0x329 POP
0x32a POP
0x32b ISZERO
0x32c ISZERO
0x32d PUSH2 0x335
0x330 JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V320 = 0x8
0x2fb: V321 = S[0x8]
0x2fe: V322 = DIV V316 V311
0x301: V323 = 0x100
0x305: V324 = DIV V321 0x100
0x306: V325 = 0x1
0x308: V326 = 0xa0
0x30a: V327 = 0x2
0x30c: V328 = EXP 0x2 0xa0
0x30d: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30e: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x30f: V331 = 0x8fc
0x313: V332 = ISZERO V322
0x314: V333 = MUL V332 0x8fc
0x316: V334 = 0x40
0x318: V335 = M[0x40]
0x319: V336 = 0x0
0x31b: V337 = 0x40
0x31d: V338 = M[0x40]
0x320: V339 = SUB V335 V338
0x325: V340 = CALL V333 V330 V322 V338 V339 V338 0x0
0x32b: V341 = ISZERO V340
0x32c: V342 = ISZERO V341
0x32d: V343 = 0x335
0x330: JUMPI 0x335 V342
---
Entry stack: [V12, 0x472, V174, V187, 0x0, V311, V316]
Stack pops: 3
Stack additions: [V322]
Exit stack: [V12, 0x472, V174, V187, V322]

================================

Block 0x331
[0x331:0x334]
---
Predecessors: [0x2f8]
Successors: []
---
0x331 PUSH1 0x0
0x333 DUP1
0x334 REVERT
---
0x331: V344 = 0x0
0x334: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, V174, V187, V322]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V174, V187, V322]

================================

Block 0x335
[0x335:0x38d]
---
Predecessors: [0x2f8]
Successors: [0x38e, 0x392]
---
0x335 JUMPDEST
0x336 PUSH1 0x0
0x338 SLOAD
0x339 PUSH1 0x7
0x33b SLOAD
0x33c PUSH1 0x1
0x33e PUSH1 0xa0
0x340 PUSH1 0x2
0x342 EXP
0x343 SUB
0x344 SWAP1
0x345 SWAP2
0x346 AND
0x347 SWAP1
0x348 PUSH4 0xa9059cbb
0x34d SWAP1
0x34e CALLER
0x34f SWAP1
0x350 PUSH1 0x40
0x352 MLOAD
0x353 PUSH1 0xe0
0x355 PUSH1 0x2
0x357 EXP
0x358 PUSH4 0xffffffff
0x35d DUP6
0x35e AND
0x35f MUL
0x360 DUP2
0x361 MSTORE
0x362 PUSH1 0x1
0x364 PUSH1 0xa0
0x366 PUSH1 0x2
0x368 EXP
0x369 SUB
0x36a SWAP1
0x36b SWAP3
0x36c AND
0x36d PUSH1 0x4
0x36f DUP4
0x370 ADD
0x371 MSTORE
0x372 PUSH1 0x24
0x374 DUP3
0x375 ADD
0x376 MSTORE
0x377 PUSH1 0x44
0x379 ADD
0x37a PUSH1 0x0
0x37c PUSH1 0x40
0x37e MLOAD
0x37f DUP1
0x380 DUP4
0x381 SUB
0x382 DUP2
0x383 PUSH1 0x0
0x385 DUP8
0x386 DUP1
0x387 EXTCODESIZE
0x388 ISZERO
0x389 ISZERO
0x38a PUSH2 0x392
0x38d JUMPI
---
0x335: JUMPDEST 
0x336: V345 = 0x0
0x338: V346 = S[0x0]
0x339: V347 = 0x7
0x33b: V348 = S[0x7]
0x33c: V349 = 0x1
0x33e: V350 = 0xa0
0x340: V351 = 0x2
0x342: V352 = EXP 0x2 0xa0
0x343: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x346: V354 = AND V346 0xffffffffffffffffffffffffffffffffffffffff
0x348: V355 = 0xa9059cbb
0x34e: V356 = CALLER
0x350: V357 = 0x40
0x352: V358 = M[0x40]
0x353: V359 = 0xe0
0x355: V360 = 0x2
0x357: V361 = EXP 0x2 0xe0
0x358: V362 = 0xffffffff
0x35e: V363 = AND 0xa9059cbb 0xffffffff
0x35f: V364 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x361: M[V358] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x362: V365 = 0x1
0x364: V366 = 0xa0
0x366: V367 = 0x2
0x368: V368 = EXP 0x2 0xa0
0x369: V369 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36c: V370 = AND V356 0xffffffffffffffffffffffffffffffffffffffff
0x36d: V371 = 0x4
0x370: V372 = ADD V358 0x4
0x371: M[V372] = V370
0x372: V373 = 0x24
0x375: V374 = ADD V358 0x24
0x376: M[V374] = V348
0x377: V375 = 0x44
0x379: V376 = ADD 0x44 V358
0x37a: V377 = 0x0
0x37c: V378 = 0x40
0x37e: V379 = M[0x40]
0x381: V380 = SUB V376 V379
0x383: V381 = 0x0
0x387: V382 = EXTCODESIZE V354
0x388: V383 = ISZERO V382
0x389: V384 = ISZERO V383
0x38a: V385 = 0x392
0x38d: JUMPI 0x392 V384
---
Entry stack: [V12, 0x472, V174, V187, V322]
Stack pops: 0
Stack additions: [V354, 0xa9059cbb, V376, 0x0, V379, V380, V379, 0x0, V354]
Exit stack: [V12, 0x472, V174, V187, V322, V354, 0xa9059cbb, V376, 0x0, V379, V380, V379, 0x0, V354]

================================

Block 0x38e
[0x38e:0x391]
---
Predecessors: [0x335]
Successors: []
---
0x38e PUSH1 0x0
0x390 DUP1
0x391 REVERT
---
0x38e: V386 = 0x0
0x391: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, V174, V187, V322, V354, 0xa9059cbb, V376, 0x0, V379, V380, V379, 0x0, V354]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V174, V187, V322, V354, 0xa9059cbb, V376, 0x0, V379, V380, V379, 0x0, V354]

================================

Block 0x392
[0x392:0x39e]
---
Predecessors: [0x335]
Successors: [0x39f, 0x3a3]
---
0x392 JUMPDEST
0x393 PUSH2 0x2c6
0x396 GAS
0x397 SUB
0x398 CALL
0x399 ISZERO
0x39a ISZERO
0x39b PUSH2 0x3a3
0x39e JUMPI
---
0x392: JUMPDEST 
0x393: V387 = 0x2c6
0x396: V388 = GAS
0x397: V389 = SUB V388 0x2c6
0x398: V390 = CALL V389 V354 0x0 V379 V380 V379 0x0
0x399: V391 = ISZERO V390
0x39a: V392 = ISZERO V391
0x39b: V393 = 0x3a3
0x39e: JUMPI 0x3a3 V392
---
Entry stack: [V12, 0x472, V174, V187, V322, V354, 0xa9059cbb, V376, 0x0, V379, V380, V379, 0x0, V354]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x472, V174, V187, V322, V354, 0xa9059cbb, V376]

================================

Block 0x39f
[0x39f:0x3a2]
---
Predecessors: [0x392]
Successors: []
---
0x39f PUSH1 0x0
0x3a1 DUP1
0x3a2 REVERT
---
0x39f: V394 = 0x0
0x3a2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, V174, V187, V322, V354, 0xa9059cbb, V376]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V174, V187, V322, V354, 0xa9059cbb, V376]

================================

Block 0x3a3
[0x3a3:0x3d6]
---
Predecessors: [0x392]
Successors: [0x3d7, 0x3db]
---
0x3a3 JUMPDEST
0x3a4 POP
0x3a5 POP
0x3a6 POP
0x3a7 CALLER
0x3a8 PUSH1 0x1
0x3aa PUSH1 0xa0
0x3ac PUSH1 0x2
0x3ae EXP
0x3af SUB
0x3b0 AND
0x3b1 PUSH2 0x8fc
0x3b4 DUP3
0x3b5 CALLVALUE
0x3b6 SUB
0x3b7 SWAP1
0x3b8 DUP2
0x3b9 ISZERO
0x3ba MUL
0x3bb SWAP1
0x3bc PUSH1 0x40
0x3be MLOAD
0x3bf PUSH1 0x0
0x3c1 PUSH1 0x40
0x3c3 MLOAD
0x3c4 DUP1
0x3c5 DUP4
0x3c6 SUB
0x3c7 DUP2
0x3c8 DUP6
0x3c9 DUP9
0x3ca DUP9
0x3cb CALL
0x3cc SWAP4
0x3cd POP
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 ISZERO
0x3d2 ISZERO
0x3d3 PUSH2 0x3db
0x3d6 JUMPI
---
0x3a3: JUMPDEST 
0x3a7: V395 = CALLER
0x3a8: V396 = 0x1
0x3aa: V397 = 0xa0
0x3ac: V398 = 0x2
0x3ae: V399 = EXP 0x2 0xa0
0x3af: V400 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b0: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x3b1: V402 = 0x8fc
0x3b5: V403 = CALLVALUE
0x3b6: V404 = SUB V403 V322
0x3b9: V405 = ISZERO V404
0x3ba: V406 = MUL V405 0x8fc
0x3bc: V407 = 0x40
0x3be: V408 = M[0x40]
0x3bf: V409 = 0x0
0x3c1: V410 = 0x40
0x3c3: V411 = M[0x40]
0x3c6: V412 = SUB V408 V411
0x3cb: V413 = CALL V406 V401 V404 V411 V412 V411 0x0
0x3d1: V414 = ISZERO V413
0x3d2: V415 = ISZERO V414
0x3d3: V416 = 0x3db
0x3d6: JUMPI 0x3db V415
---
Entry stack: [V12, 0x472, V174, V187, V322, V354, 0xa9059cbb, V376]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x472, V174, V187, V322]

================================

Block 0x3d7
[0x3d7:0x3da]
---
Predecessors: [0x3a3]
Successors: []
---
0x3d7 PUSH1 0x0
0x3d9 DUP1
0x3da REVERT
---
0x3d7: V417 = 0x0
0x3da: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, V174, V187, V322]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V174, V187, V322]

================================

Block 0x3db
[0x3db:0x3f9]
---
Predecessors: [0x3a3]
Successors: [0x3fa]
---
0x3db JUMPDEST
0x3dc PUSH1 0x7
0x3de DUP1
0x3df SLOAD
0x3e0 PUSH1 0x6
0x3e2 DUP1
0x3e3 SLOAD
0x3e4 SWAP1
0x3e5 SWAP2
0x3e6 ADD
0x3e7 SWAP1
0x3e8 SSTORE
0x3e9 PUSH1 0x0
0x3eb SWAP1
0x3ec SSTORE
0x3ed PUSH1 0x8
0x3ef DUP1
0x3f0 SLOAD
0x3f1 PUSH1 0xff
0x3f3 NOT
0x3f4 AND
0x3f5 PUSH1 0x1
0x3f7 OR
0x3f8 SWAP1
0x3f9 SSTORE
---
0x3db: JUMPDEST 
0x3dc: V418 = 0x7
0x3df: V419 = S[0x7]
0x3e0: V420 = 0x6
0x3e3: V421 = S[0x6]
0x3e6: V422 = ADD V419 V421
0x3e8: S[0x6] = V422
0x3e9: V423 = 0x0
0x3ec: S[0x7] = 0x0
0x3ed: V424 = 0x8
0x3f0: V425 = S[0x8]
0x3f1: V426 = 0xff
0x3f3: V427 = NOT 0xff
0x3f4: V428 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V425
0x3f5: V429 = 0x1
0x3f7: V430 = OR 0x1 V428
0x3f9: S[0x8] = V430
---
Entry stack: [V12, 0x472, V174, V187, V322]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V174, V187, V322]

================================

Block 0x3fa
[0x3fa:0x3fa]
---
Predecessors: [0x145, 0x194, 0x2e0, 0x3db]
Successors: [0x3fb]
---
0x3fa JUMPDEST
---
0x3fa: JUMPDEST 
---
Entry stack: [V12, 0x472, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, S2, S1, S0]

================================

Block 0x3fb
[0x3fb:0x3fb]
---
Predecessors: [0x3fa]
Successors: [0x3fc]
---
0x3fb JUMPDEST
---
0x3fb: JUMPDEST 
---
Entry stack: [V12, 0x472, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, S2, S1, S0]

================================

Block 0x3fc
[0x3fc:0x46c]
---
Predecessors: [0x3fb]
Successors: [0x46d]
---
0x3fc JUMPDEST
0x3fd PUSH32 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x41e PUSH1 0x7
0x420 SLOAD
0x421 PUSH1 0x40
0x423 MLOAD
0x424 SWAP1
0x425 DUP2
0x426 MSTORE
0x427 PUSH1 0x20
0x429 ADD
0x42a PUSH1 0x40
0x42c MLOAD
0x42d DUP1
0x42e SWAP2
0x42f SUB
0x430 SWAP1
0x431 LOG1
0x432 PUSH1 0x8
0x434 SLOAD
0x435 PUSH32 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x456 SWAP1
0x457 PUSH1 0xff
0x459 AND
0x45a PUSH1 0x40
0x45c MLOAD
0x45d SWAP1
0x45e ISZERO
0x45f ISZERO
0x460 DUP2
0x461 MSTORE
0x462 PUSH1 0x20
0x464 ADD
0x465 PUSH1 0x40
0x467 MLOAD
0x468 DUP1
0x469 SWAP2
0x46a SUB
0x46b SWAP1
0x46c LOG1
---
0x3fc: JUMPDEST 
0x3fd: V431 = 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x41e: V432 = 0x7
0x420: V433 = S[0x7]
0x421: V434 = 0x40
0x423: V435 = M[0x40]
0x426: M[V435] = V433
0x427: V436 = 0x20
0x429: V437 = ADD 0x20 V435
0x42a: V438 = 0x40
0x42c: V439 = M[0x40]
0x42f: V440 = SUB V437 V439
0x431: LOG V439 V440 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x432: V441 = 0x8
0x434: V442 = S[0x8]
0x435: V443 = 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
0x457: V444 = 0xff
0x459: V445 = AND 0xff V442
0x45a: V446 = 0x40
0x45c: V447 = M[0x40]
0x45e: V448 = ISZERO V445
0x45f: V449 = ISZERO V448
0x461: M[V447] = V449
0x462: V450 = 0x20
0x464: V451 = ADD 0x20 V447
0x465: V452 = 0x40
0x467: V453 = M[0x40]
0x46a: V454 = SUB V451 V453
0x46c: LOG V453 V454 0x26c4e8a8234d09f52198046894a4c654d79af230b4b261ac1abde16d6667300d
---
Entry stack: [V12, 0x472, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, S2, S1, S0]

================================

Block 0x46d
[0x46d:0x471]
---
Predecessors: [0x3fc]
Successors: [0x472]
---
0x46d JUMPDEST
0x46e POP
0x46f POP
0x470 POP
0x471 JUMP
---
0x46d: JUMPDEST 
0x471: JUMP 0x472
---
Entry stack: [V12, 0x472, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x472
[0x472:0x473]
---
Predecessors: [0x46d, 0x714]
Successors: []
---
0x472 JUMPDEST
0x473 STOP
---
0x472: JUMPDEST 
0x473: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x474
[0x474:0x47a]
---
Predecessors: [0xb]
Successors: [0x47b, 0x47f]
---
0x474 JUMPDEST
0x475 CALLVALUE
0x476 ISZERO
0x477 PUSH2 0x47f
0x47a JUMPI
---
0x474: JUMPDEST 
0x475: V455 = CALLVALUE
0x476: V456 = ISZERO V455
0x477: V457 = 0x47f
0x47a: JUMPI 0x47f V456
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x47b
[0x47b:0x47e]
---
Predecessors: [0x474]
Successors: []
---
0x47b PUSH1 0x0
0x47d DUP1
0x47e REVERT
---
0x47b: V458 = 0x0
0x47e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x47f
[0x47f:0x486]
---
Predecessors: [0x474]
Successors: [0x5ec]
---
0x47f JUMPDEST
0x480 PUSH2 0x472
0x483 PUSH2 0x5ec
0x486 JUMP
---
0x47f: JUMPDEST 
0x480: V459 = 0x472
0x483: V460 = 0x5ec
0x486: JUMP 0x5ec
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x472]
Exit stack: [V12, 0x472]

================================

Block 0x487
[0x487:0x488]
---
Predecessors: []
Successors: []
---
0x487 JUMPDEST
0x488 STOP
---
0x487: JUMPDEST 
0x488: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x489
[0x489:0x48f]
---
Predecessors: [0x25]
Successors: [0x490, 0x494]
---
0x489 JUMPDEST
0x48a CALLVALUE
0x48b ISZERO
0x48c PUSH2 0x494
0x48f JUMPI
---
0x489: JUMPDEST 
0x48a: V461 = CALLVALUE
0x48b: V462 = ISZERO V461
0x48c: V463 = 0x494
0x48f: JUMPI 0x494 V462
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x490
[0x490:0x493]
---
Predecessors: [0x489]
Successors: []
---
0x490 PUSH1 0x0
0x492 DUP1
0x493 REVERT
---
0x490: V464 = 0x0
0x493: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x494
[0x494:0x49b]
---
Predecessors: [0x489]
Successors: [0x716]
---
0x494 JUMPDEST
0x495 PUSH2 0x49c
0x498 PUSH2 0x716
0x49b JUMP
---
0x494: JUMPDEST 
0x495: V465 = 0x49c
0x498: V466 = 0x716
0x49b: JUMP 0x716
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x49c]
Exit stack: [V12, 0x49c]

================================

Block 0x49c
[0x49c:0x4b7]
---
Predecessors: [0x716, 0x731]
Successors: []
---
0x49c JUMPDEST
0x49d PUSH1 0x40
0x49f MLOAD
0x4a0 PUSH1 0x1
0x4a2 PUSH1 0xa0
0x4a4 PUSH1 0x2
0x4a6 EXP
0x4a7 SUB
0x4a8 SWAP1
0x4a9 SWAP2
0x4aa AND
0x4ab DUP2
0x4ac MSTORE
0x4ad PUSH1 0x20
0x4af ADD
0x4b0 PUSH1 0x40
0x4b2 MLOAD
0x4b3 DUP1
0x4b4 SWAP2
0x4b5 SUB
0x4b6 SWAP1
0x4b7 RETURN
---
0x49c: JUMPDEST 
0x49d: V467 = 0x40
0x49f: V468 = M[0x40]
0x4a0: V469 = 0x1
0x4a2: V470 = 0xa0
0x4a4: V471 = 0x2
0x4a6: V472 = EXP 0x2 0xa0
0x4a7: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4aa: V474 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x4ac: M[V468] = V474
0x4ad: V475 = 0x20
0x4af: V476 = ADD 0x20 V468
0x4b0: V477 = 0x40
0x4b2: V478 = M[0x40]
0x4b5: V479 = SUB V476 V478
0x4b7: RETURN V478 V479
---
Entry stack: [V12, 0x49c, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x49c]

================================

Block 0x4b8
[0x4b8:0x4be]
---
Predecessors: [0x30]
Successors: [0x4bf, 0x4c3]
---
0x4b8 JUMPDEST
0x4b9 CALLVALUE
0x4ba ISZERO
0x4bb PUSH2 0x4c3
0x4be JUMPI
---
0x4b8: JUMPDEST 
0x4b9: V480 = CALLVALUE
0x4ba: V481 = ISZERO V480
0x4bb: V482 = 0x4c3
0x4be: JUMPI 0x4c3 V481
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4bf
[0x4bf:0x4c2]
---
Predecessors: [0x4b8]
Successors: []
---
0x4bf PUSH1 0x0
0x4c1 DUP1
0x4c2 REVERT
---
0x4bf: V483 = 0x0
0x4c2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c3
[0x4c3:0x4ca]
---
Predecessors: [0x4b8]
Successors: [0x725]
---
0x4c3 JUMPDEST
0x4c4 PUSH2 0x4cb
0x4c7 PUSH2 0x725
0x4ca JUMP
---
0x4c3: JUMPDEST 
0x4c4: V484 = 0x4cb
0x4c7: V485 = 0x725
0x4ca: JUMP 0x725
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4cb]
Exit stack: [V12, 0x4cb]

================================

Block 0x4cb
[0x4cb:0x4dc]
---
Predecessors: [0x725, 0x72b, 0x745, 0x74b, 0x751, 0x757]
Successors: []
---
0x4cb JUMPDEST
0x4cc PUSH1 0x40
0x4ce MLOAD
0x4cf SWAP1
0x4d0 DUP2
0x4d1 MSTORE
0x4d2 PUSH1 0x20
0x4d4 ADD
0x4d5 PUSH1 0x40
0x4d7 MLOAD
0x4d8 DUP1
0x4d9 SWAP2
0x4da SUB
0x4db SWAP1
0x4dc RETURN
---
0x4cb: JUMPDEST 
0x4cc: V486 = 0x40
0x4ce: V487 = M[0x40]
0x4d1: M[V487] = S0
0x4d2: V488 = 0x20
0x4d4: V489 = ADD 0x20 V487
0x4d5: V490 = 0x40
0x4d7: V491 = M[0x40]
0x4da: V492 = SUB V489 V491
0x4dc: RETURN V491 V492
---
Entry stack: [V12, 0x4cb, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x4cb]

================================

Block 0x4dd
[0x4dd:0x4e3]
---
Predecessors: [0x3b]
Successors: [0x4e4, 0x4e8]
---
0x4dd JUMPDEST
0x4de CALLVALUE
0x4df ISZERO
0x4e0 PUSH2 0x4e8
0x4e3 JUMPI
---
0x4dd: JUMPDEST 
0x4de: V493 = CALLVALUE
0x4df: V494 = ISZERO V493
0x4e0: V495 = 0x4e8
0x4e3: JUMPI 0x4e8 V494
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e4
[0x4e4:0x4e7]
---
Predecessors: [0x4dd]
Successors: []
---
0x4e4 PUSH1 0x0
0x4e6 DUP1
0x4e7 REVERT
---
0x4e4: V496 = 0x0
0x4e7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e8
[0x4e8:0x4ef]
---
Predecessors: [0x4dd]
Successors: [0x72b]
---
0x4e8 JUMPDEST
0x4e9 PUSH2 0x4cb
0x4ec PUSH2 0x72b
0x4ef JUMP
---
0x4e8: JUMPDEST 
0x4e9: V497 = 0x4cb
0x4ec: V498 = 0x72b
0x4ef: JUMP 0x72b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4cb]
Exit stack: [V12, 0x4cb]

================================

Block 0x4f0
[0x4f0:0x501]
---
Predecessors: []
Successors: []
---
0x4f0 JUMPDEST
0x4f1 PUSH1 0x40
0x4f3 MLOAD
0x4f4 SWAP1
0x4f5 DUP2
0x4f6 MSTORE
0x4f7 PUSH1 0x20
0x4f9 ADD
0x4fa PUSH1 0x40
0x4fc MLOAD
0x4fd DUP1
0x4fe SWAP2
0x4ff SUB
0x500 SWAP1
0x501 RETURN
---
0x4f0: JUMPDEST 
0x4f1: V499 = 0x40
0x4f3: V500 = M[0x40]
0x4f6: M[V500] = S0
0x4f7: V501 = 0x20
0x4f9: V502 = ADD 0x20 V500
0x4fa: V503 = 0x40
0x4fc: V504 = M[0x40]
0x4ff: V505 = SUB V502 V504
0x501: RETURN V504 V505
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x502
[0x502:0x508]
---
Predecessors: [0x46]
Successors: [0x509, 0x50d]
---
0x502 JUMPDEST
0x503 CALLVALUE
0x504 ISZERO
0x505 PUSH2 0x50d
0x508 JUMPI
---
0x502: JUMPDEST 
0x503: V506 = CALLVALUE
0x504: V507 = ISZERO V506
0x505: V508 = 0x50d
0x508: JUMPI 0x50d V507
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x509
[0x509:0x50c]
---
Predecessors: [0x502]
Successors: []
---
0x509 PUSH1 0x0
0x50b DUP1
0x50c REVERT
---
0x509: V509 = 0x0
0x50c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x50d
[0x50d:0x514]
---
Predecessors: [0x502]
Successors: [0x731]
---
0x50d JUMPDEST
0x50e PUSH2 0x49c
0x511 PUSH2 0x731
0x514 JUMP
---
0x50d: JUMPDEST 
0x50e: V510 = 0x49c
0x511: V511 = 0x731
0x514: JUMP 0x731
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x49c]
Exit stack: [V12, 0x49c]

================================

Block 0x515
[0x515:0x530]
---
Predecessors: []
Successors: []
---
0x515 JUMPDEST
0x516 PUSH1 0x40
0x518 MLOAD
0x519 PUSH1 0x1
0x51b PUSH1 0xa0
0x51d PUSH1 0x2
0x51f EXP
0x520 SUB
0x521 SWAP1
0x522 SWAP2
0x523 AND
0x524 DUP2
0x525 MSTORE
0x526 PUSH1 0x20
0x528 ADD
0x529 PUSH1 0x40
0x52b MLOAD
0x52c DUP1
0x52d SWAP2
0x52e SUB
0x52f SWAP1
0x530 RETURN
---
0x515: JUMPDEST 
0x516: V512 = 0x40
0x518: V513 = M[0x40]
0x519: V514 = 0x1
0x51b: V515 = 0xa0
0x51d: V516 = 0x2
0x51f: V517 = EXP 0x2 0xa0
0x520: V518 = SUB 0x10000000000000000000000000000000000000000 0x1
0x523: V519 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x525: M[V513] = V519
0x526: V520 = 0x20
0x528: V521 = ADD 0x20 V513
0x529: V522 = 0x40
0x52b: V523 = M[0x40]
0x52e: V524 = SUB V521 V523
0x530: RETURN V523 V524
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x531
[0x531:0x537]
---
Predecessors: [0x51]
Successors: [0x538, 0x53c]
---
0x531 JUMPDEST
0x532 CALLVALUE
0x533 ISZERO
0x534 PUSH2 0x53c
0x537 JUMPI
---
0x531: JUMPDEST 
0x532: V525 = CALLVALUE
0x533: V526 = ISZERO V525
0x534: V527 = 0x53c
0x537: JUMPI 0x53c V526
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x538
[0x538:0x53b]
---
Predecessors: [0x531]
Successors: []
---
0x538 PUSH1 0x0
0x53a DUP1
0x53b REVERT
---
0x538: V528 = 0x0
0x53b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x53c
[0x53c:0x543]
---
Predecessors: [0x531]
Successors: [0x745]
---
0x53c JUMPDEST
0x53d PUSH2 0x4cb
0x540 PUSH2 0x745
0x543 JUMP
---
0x53c: JUMPDEST 
0x53d: V529 = 0x4cb
0x540: V530 = 0x745
0x543: JUMP 0x745
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4cb]
Exit stack: [V12, 0x4cb]

================================

Block 0x544
[0x544:0x555]
---
Predecessors: []
Successors: []
---
0x544 JUMPDEST
0x545 PUSH1 0x40
0x547 MLOAD
0x548 SWAP1
0x549 DUP2
0x54a MSTORE
0x54b PUSH1 0x20
0x54d ADD
0x54e PUSH1 0x40
0x550 MLOAD
0x551 DUP1
0x552 SWAP2
0x553 SUB
0x554 SWAP1
0x555 RETURN
---
0x544: JUMPDEST 
0x545: V531 = 0x40
0x547: V532 = M[0x40]
0x54a: M[V532] = S0
0x54b: V533 = 0x20
0x54d: V534 = ADD 0x20 V532
0x54e: V535 = 0x40
0x550: V536 = M[0x40]
0x553: V537 = SUB V534 V536
0x555: RETURN V536 V537
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x556
[0x556:0x55c]
---
Predecessors: [0x5c]
Successors: [0x55d, 0x561]
---
0x556 JUMPDEST
0x557 CALLVALUE
0x558 ISZERO
0x559 PUSH2 0x561
0x55c JUMPI
---
0x556: JUMPDEST 
0x557: V538 = CALLVALUE
0x558: V539 = ISZERO V538
0x559: V540 = 0x561
0x55c: JUMPI 0x561 V539
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x55d
[0x55d:0x560]
---
Predecessors: [0x556]
Successors: []
---
0x55d PUSH1 0x0
0x55f DUP1
0x560 REVERT
---
0x55d: V541 = 0x0
0x560: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x561
[0x561:0x568]
---
Predecessors: [0x556]
Successors: [0x74b]
---
0x561 JUMPDEST
0x562 PUSH2 0x4cb
0x565 PUSH2 0x74b
0x568 JUMP
---
0x561: JUMPDEST 
0x562: V542 = 0x4cb
0x565: V543 = 0x74b
0x568: JUMP 0x74b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4cb]
Exit stack: [V12, 0x4cb]

================================

Block 0x569
[0x569:0x57a]
---
Predecessors: []
Successors: []
---
0x569 JUMPDEST
0x56a PUSH1 0x40
0x56c MLOAD
0x56d SWAP1
0x56e DUP2
0x56f MSTORE
0x570 PUSH1 0x20
0x572 ADD
0x573 PUSH1 0x40
0x575 MLOAD
0x576 DUP1
0x577 SWAP2
0x578 SUB
0x579 SWAP1
0x57a RETURN
---
0x569: JUMPDEST 
0x56a: V544 = 0x40
0x56c: V545 = M[0x40]
0x56f: M[V545] = S0
0x570: V546 = 0x20
0x572: V547 = ADD 0x20 V545
0x573: V548 = 0x40
0x575: V549 = M[0x40]
0x578: V550 = SUB V547 V549
0x57a: RETURN V549 V550
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x57b
[0x57b:0x581]
---
Predecessors: [0x67]
Successors: [0x582, 0x586]
---
0x57b JUMPDEST
0x57c CALLVALUE
0x57d ISZERO
0x57e PUSH2 0x586
0x581 JUMPI
---
0x57b: JUMPDEST 
0x57c: V551 = CALLVALUE
0x57d: V552 = ISZERO V551
0x57e: V553 = 0x586
0x581: JUMPI 0x586 V552
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x582
[0x582:0x585]
---
Predecessors: [0x57b]
Successors: []
---
0x582 PUSH1 0x0
0x584 DUP1
0x585 REVERT
---
0x582: V554 = 0x0
0x585: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x586
[0x586:0x58d]
---
Predecessors: [0x57b]
Successors: [0x751]
---
0x586 JUMPDEST
0x587 PUSH2 0x4cb
0x58a PUSH2 0x751
0x58d JUMP
---
0x586: JUMPDEST 
0x587: V555 = 0x4cb
0x58a: V556 = 0x751
0x58d: JUMP 0x751
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4cb]
Exit stack: [V12, 0x4cb]

================================

Block 0x58e
[0x58e:0x59f]
---
Predecessors: []
Successors: []
---
0x58e JUMPDEST
0x58f PUSH1 0x40
0x591 MLOAD
0x592 SWAP1
0x593 DUP2
0x594 MSTORE
0x595 PUSH1 0x20
0x597 ADD
0x598 PUSH1 0x40
0x59a MLOAD
0x59b DUP1
0x59c SWAP2
0x59d SUB
0x59e SWAP1
0x59f RETURN
---
0x58e: JUMPDEST 
0x58f: V557 = 0x40
0x591: V558 = M[0x40]
0x594: M[V558] = S0
0x595: V559 = 0x20
0x597: V560 = ADD 0x20 V558
0x598: V561 = 0x40
0x59a: V562 = M[0x40]
0x59d: V563 = SUB V560 V562
0x59f: RETURN V562 V563
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5a0
[0x5a0:0x5a6]
---
Predecessors: [0x72]
Successors: [0x5a7, 0x5ab]
---
0x5a0 JUMPDEST
0x5a1 CALLVALUE
0x5a2 ISZERO
0x5a3 PUSH2 0x5ab
0x5a6 JUMPI
---
0x5a0: JUMPDEST 
0x5a1: V564 = CALLVALUE
0x5a2: V565 = ISZERO V564
0x5a3: V566 = 0x5ab
0x5a6: JUMPI 0x5ab V565
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5a7
[0x5a7:0x5aa]
---
Predecessors: [0x5a0]
Successors: []
---
0x5a7 PUSH1 0x0
0x5a9 DUP1
0x5aa REVERT
---
0x5a7: V567 = 0x0
0x5aa: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5ab
[0x5ab:0x5b2]
---
Predecessors: [0x5a0]
Successors: [0x757]
---
0x5ab JUMPDEST
0x5ac PUSH2 0x4cb
0x5af PUSH2 0x757
0x5b2 JUMP
---
0x5ab: JUMPDEST 
0x5ac: V568 = 0x4cb
0x5af: V569 = 0x757
0x5b2: JUMP 0x757
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4cb]
Exit stack: [V12, 0x4cb]

================================

Block 0x5b3
[0x5b3:0x5c4]
---
Predecessors: []
Successors: []
---
0x5b3 JUMPDEST
0x5b4 PUSH1 0x40
0x5b6 MLOAD
0x5b7 SWAP1
0x5b8 DUP2
0x5b9 MSTORE
0x5ba PUSH1 0x20
0x5bc ADD
0x5bd PUSH1 0x40
0x5bf MLOAD
0x5c0 DUP1
0x5c1 SWAP2
0x5c2 SUB
0x5c3 SWAP1
0x5c4 RETURN
---
0x5b3: JUMPDEST 
0x5b4: V570 = 0x40
0x5b6: V571 = M[0x40]
0x5b9: M[V571] = S0
0x5ba: V572 = 0x20
0x5bc: V573 = ADD 0x20 V571
0x5bd: V574 = 0x40
0x5bf: V575 = M[0x40]
0x5c2: V576 = SUB V573 V575
0x5c4: RETURN V575 V576
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5c5
[0x5c5:0x5cb]
---
Predecessors: [0x7d]
Successors: [0x5cc, 0x5d0]
---
0x5c5 JUMPDEST
0x5c6 CALLVALUE
0x5c7 ISZERO
0x5c8 PUSH2 0x5d0
0x5cb JUMPI
---
0x5c5: JUMPDEST 
0x5c6: V577 = CALLVALUE
0x5c7: V578 = ISZERO V577
0x5c8: V579 = 0x5d0
0x5cb: JUMPI 0x5d0 V578
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5cc
[0x5cc:0x5cf]
---
Predecessors: [0x5c5]
Successors: []
---
0x5cc PUSH1 0x0
0x5ce DUP1
0x5cf REVERT
---
0x5cc: V580 = 0x0
0x5cf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5d0
[0x5d0:0x5d7]
---
Predecessors: [0x5c5]
Successors: [0x75d]
---
0x5d0 JUMPDEST
0x5d1 PUSH2 0x5d8
0x5d4 PUSH2 0x75d
0x5d7 JUMP
---
0x5d0: JUMPDEST 
0x5d1: V581 = 0x5d8
0x5d4: V582 = 0x75d
0x5d7: JUMP 0x75d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x5d8]
Exit stack: [V12, 0x5d8]

================================

Block 0x5d8
[0x5d8:0x5eb]
---
Predecessors: [0x75d]
Successors: []
---
0x5d8 JUMPDEST
0x5d9 PUSH1 0x40
0x5db MLOAD
0x5dc SWAP1
0x5dd ISZERO
0x5de ISZERO
0x5df DUP2
0x5e0 MSTORE
0x5e1 PUSH1 0x20
0x5e3 ADD
0x5e4 PUSH1 0x40
0x5e6 MLOAD
0x5e7 DUP1
0x5e8 SWAP2
0x5e9 SUB
0x5ea SWAP1
0x5eb RETURN
---
0x5d8: JUMPDEST 
0x5d9: V583 = 0x40
0x5db: V584 = M[0x40]
0x5dd: V585 = ISZERO V754
0x5de: V586 = ISZERO V585
0x5e0: M[V584] = V586
0x5e1: V587 = 0x20
0x5e3: V588 = ADD 0x20 V584
0x5e4: V589 = 0x40
0x5e6: V590 = M[0x40]
0x5e9: V591 = SUB V588 V590
0x5eb: RETURN V590 V591
---
Entry stack: [V12, 0x5d8, V754]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x5d8]

================================

Block 0x5ec
[0x5ec:0x5f8]
---
Predecessors: [0x47f]
Successors: [0x5f9, 0x5fd]
---
0x5ec JUMPDEST
0x5ed PUSH1 0x8
0x5ef SLOAD
0x5f0 PUSH1 0xff
0x5f2 AND
0x5f3 ISZERO
0x5f4 ISZERO
0x5f5 PUSH2 0x5fd
0x5f8 JUMPI
---
0x5ec: JUMPDEST 
0x5ed: V592 = 0x8
0x5ef: V593 = S[0x8]
0x5f0: V594 = 0xff
0x5f2: V595 = AND 0xff V593
0x5f3: V596 = ISZERO V595
0x5f4: V597 = ISZERO V596
0x5f5: V598 = 0x5fd
0x5f8: JUMPI 0x5fd V597
---
Entry stack: [V12, 0x472]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472]

================================

Block 0x5f9
[0x5f9:0x5fc]
---
Predecessors: [0x5ec]
Successors: []
---
0x5f9 PUSH1 0x0
0x5fb DUP1
0x5fc REVERT
---
0x5f9: V599 = 0x0
0x5fc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472]

================================

Block 0x5fd
[0x5fd:0x618]
---
Predecessors: [0x5ec]
Successors: [0x619, 0x61d]
---
0x5fd JUMPDEST
0x5fe PUSH1 0x8
0x600 SLOAD
0x601 CALLER
0x602 PUSH1 0x1
0x604 PUSH1 0xa0
0x606 PUSH1 0x2
0x608 EXP
0x609 SUB
0x60a SWAP1
0x60b DUP2
0x60c AND
0x60d PUSH2 0x100
0x610 SWAP1
0x611 SWAP3
0x612 DIV
0x613 AND
0x614 EQ
0x615 PUSH2 0x61d
0x618 JUMPI
---
0x5fd: JUMPDEST 
0x5fe: V600 = 0x8
0x600: V601 = S[0x8]
0x601: V602 = CALLER
0x602: V603 = 0x1
0x604: V604 = 0xa0
0x606: V605 = 0x2
0x608: V606 = EXP 0x2 0xa0
0x609: V607 = SUB 0x10000000000000000000000000000000000000000 0x1
0x60c: V608 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0x60d: V609 = 0x100
0x612: V610 = DIV V601 0x100
0x613: V611 = AND V610 0xffffffffffffffffffffffffffffffffffffffff
0x614: V612 = EQ V611 V608
0x615: V613 = 0x61d
0x618: JUMPI 0x61d V612
---
Entry stack: [V12, 0x472]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472]

================================

Block 0x619
[0x619:0x61c]
---
Predecessors: [0x5fd]
Successors: []
---
0x619 PUSH1 0x0
0x61b DUP1
0x61c REVERT
---
0x619: V614 = 0x0
0x61c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472]

================================

Block 0x61d
[0x61d:0x68a]
---
Predecessors: [0x5fd]
Successors: [0x68b, 0x68f]
---
0x61d JUMPDEST
0x61e PUSH1 0x0
0x620 DUP1
0x621 SLOAD
0x622 PUSH1 0x8
0x624 SLOAD
0x625 PUSH1 0x1
0x627 PUSH1 0xa0
0x629 PUSH1 0x2
0x62b EXP
0x62c SUB
0x62d SWAP2
0x62e DUP3
0x62f AND
0x630 SWAP3
0x631 PUSH4 0xa9059cbb
0x636 SWAP3
0x637 PUSH2 0x100
0x63a SWAP1
0x63b SWAP3
0x63c DIV
0x63d SWAP1
0x63e SWAP2
0x63f AND
0x640 SWAP1
0x641 DUP4
0x642 SWAP1
0x643 PUSH4 0x70a08231
0x648 SWAP1
0x649 ADDRESS
0x64a SWAP1
0x64b PUSH1 0x40
0x64d MLOAD
0x64e PUSH1 0x20
0x650 ADD
0x651 MSTORE
0x652 PUSH1 0x40
0x654 MLOAD
0x655 PUSH1 0xe0
0x657 PUSH1 0x2
0x659 EXP
0x65a PUSH4 0xffffffff
0x65f DUP5
0x660 AND
0x661 MUL
0x662 DUP2
0x663 MSTORE
0x664 PUSH1 0x1
0x666 PUSH1 0xa0
0x668 PUSH1 0x2
0x66a EXP
0x66b SUB
0x66c SWAP1
0x66d SWAP2
0x66e AND
0x66f PUSH1 0x4
0x671 DUP3
0x672 ADD
0x673 MSTORE
0x674 PUSH1 0x24
0x676 ADD
0x677 PUSH1 0x20
0x679 PUSH1 0x40
0x67b MLOAD
0x67c DUP1
0x67d DUP4
0x67e SUB
0x67f DUP2
0x680 PUSH1 0x0
0x682 DUP8
0x683 DUP1
0x684 EXTCODESIZE
0x685 ISZERO
0x686 ISZERO
0x687 PUSH2 0x68f
0x68a JUMPI
---
0x61d: JUMPDEST 
0x61e: V615 = 0x0
0x621: V616 = S[0x0]
0x622: V617 = 0x8
0x624: V618 = S[0x8]
0x625: V619 = 0x1
0x627: V620 = 0xa0
0x629: V621 = 0x2
0x62b: V622 = EXP 0x2 0xa0
0x62c: V623 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62f: V624 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0x631: V625 = 0xa9059cbb
0x637: V626 = 0x100
0x63c: V627 = DIV V618 0x100
0x63f: V628 = AND 0xffffffffffffffffffffffffffffffffffffffff V627
0x643: V629 = 0x70a08231
0x649: V630 = ADDRESS
0x64b: V631 = 0x40
0x64d: V632 = M[0x40]
0x64e: V633 = 0x20
0x650: V634 = ADD 0x20 V632
0x651: M[V634] = 0x0
0x652: V635 = 0x40
0x654: V636 = M[0x40]
0x655: V637 = 0xe0
0x657: V638 = 0x2
0x659: V639 = EXP 0x2 0xe0
0x65a: V640 = 0xffffffff
0x660: V641 = AND 0x70a08231 0xffffffff
0x661: V642 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x663: M[V636] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x664: V643 = 0x1
0x666: V644 = 0xa0
0x668: V645 = 0x2
0x66a: V646 = EXP 0x2 0xa0
0x66b: V647 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66e: V648 = AND V630 0xffffffffffffffffffffffffffffffffffffffff
0x66f: V649 = 0x4
0x672: V650 = ADD V636 0x4
0x673: M[V650] = V648
0x674: V651 = 0x24
0x676: V652 = ADD 0x24 V636
0x677: V653 = 0x20
0x679: V654 = 0x40
0x67b: V655 = M[0x40]
0x67e: V656 = SUB V652 V655
0x680: V657 = 0x0
0x684: V658 = EXTCODESIZE V624
0x685: V659 = ISZERO V658
0x686: V660 = ISZERO V659
0x687: V661 = 0x68f
0x68a: JUMPI 0x68f V660
---
Entry stack: [V12, 0x472]
Stack pops: 0
Stack additions: [V624, 0xa9059cbb, V628, V624, 0x70a08231, V652, 0x20, V655, V656, V655, 0x0, V624]
Exit stack: [V12, 0x472, V624, 0xa9059cbb, V628, V624, 0x70a08231, V652, 0x20, V655, V656, V655, 0x0, V624]

================================

Block 0x68b
[0x68b:0x68e]
---
Predecessors: [0x61d]
Successors: []
---
0x68b PUSH1 0x0
0x68d DUP1
0x68e REVERT
---
0x68b: V662 = 0x0
0x68e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, V624, 0xa9059cbb, V628, V624, 0x70a08231, V652, 0x20, V655, V656, V655, 0x0, V624]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V624, 0xa9059cbb, V628, V624, 0x70a08231, V652, 0x20, V655, V656, V655, 0x0, V624]

================================

Block 0x68f
[0x68f:0x69b]
---
Predecessors: [0x61d]
Successors: [0x69c, 0x6a0]
---
0x68f JUMPDEST
0x690 PUSH2 0x2c6
0x693 GAS
0x694 SUB
0x695 CALL
0x696 ISZERO
0x697 ISZERO
0x698 PUSH2 0x6a0
0x69b JUMPI
---
0x68f: JUMPDEST 
0x690: V663 = 0x2c6
0x693: V664 = GAS
0x694: V665 = SUB V664 0x2c6
0x695: V666 = CALL V665 V624 0x0 V655 V656 V655 0x20
0x696: V667 = ISZERO V666
0x697: V668 = ISZERO V667
0x698: V669 = 0x6a0
0x69b: JUMPI 0x6a0 V668
---
Entry stack: [V12, 0x472, V624, 0xa9059cbb, V628, V624, 0x70a08231, V652, 0x20, V655, V656, V655, 0x0, V624]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x472, V624, 0xa9059cbb, V628, V624, 0x70a08231, V652]

================================

Block 0x69c
[0x69c:0x69f]
---
Predecessors: [0x68f]
Successors: []
---
0x69c PUSH1 0x0
0x69e DUP1
0x69f REVERT
---
0x69c: V670 = 0x0
0x69f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, V624, 0xa9059cbb, V628, V624, 0x70a08231, V652]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V624, 0xa9059cbb, V628, V624, 0x70a08231, V652]

================================

Block 0x6a0
[0x6a0:0x6e8]
---
Predecessors: [0x68f]
Successors: [0x6e9, 0x6ed]
---
0x6a0 JUMPDEST
0x6a1 POP
0x6a2 POP
0x6a3 POP
0x6a4 PUSH1 0x40
0x6a6 MLOAD
0x6a7 DUP1
0x6a8 MLOAD
0x6a9 SWAP1
0x6aa POP
0x6ab PUSH1 0x40
0x6ad MLOAD
0x6ae PUSH1 0xe0
0x6b0 PUSH1 0x2
0x6b2 EXP
0x6b3 PUSH4 0xffffffff
0x6b8 DUP6
0x6b9 AND
0x6ba MUL
0x6bb DUP2
0x6bc MSTORE
0x6bd PUSH1 0x1
0x6bf PUSH1 0xa0
0x6c1 PUSH1 0x2
0x6c3 EXP
0x6c4 SUB
0x6c5 SWAP1
0x6c6 SWAP3
0x6c7 AND
0x6c8 PUSH1 0x4
0x6ca DUP4
0x6cb ADD
0x6cc MSTORE
0x6cd PUSH1 0x24
0x6cf DUP3
0x6d0 ADD
0x6d1 MSTORE
0x6d2 PUSH1 0x44
0x6d4 ADD
0x6d5 PUSH1 0x0
0x6d7 PUSH1 0x40
0x6d9 MLOAD
0x6da DUP1
0x6db DUP4
0x6dc SUB
0x6dd DUP2
0x6de PUSH1 0x0
0x6e0 DUP8
0x6e1 DUP1
0x6e2 EXTCODESIZE
0x6e3 ISZERO
0x6e4 ISZERO
0x6e5 PUSH2 0x6ed
0x6e8 JUMPI
---
0x6a0: JUMPDEST 
0x6a4: V671 = 0x40
0x6a6: V672 = M[0x40]
0x6a8: V673 = M[V672]
0x6ab: V674 = 0x40
0x6ad: V675 = M[0x40]
0x6ae: V676 = 0xe0
0x6b0: V677 = 0x2
0x6b2: V678 = EXP 0x2 0xe0
0x6b3: V679 = 0xffffffff
0x6b9: V680 = AND 0xa9059cbb 0xffffffff
0x6ba: V681 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x6bc: M[V675] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6bd: V682 = 0x1
0x6bf: V683 = 0xa0
0x6c1: V684 = 0x2
0x6c3: V685 = EXP 0x2 0xa0
0x6c4: V686 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c7: V687 = AND V628 0xffffffffffffffffffffffffffffffffffffffff
0x6c8: V688 = 0x4
0x6cb: V689 = ADD V675 0x4
0x6cc: M[V689] = V687
0x6cd: V690 = 0x24
0x6d0: V691 = ADD V675 0x24
0x6d1: M[V691] = V673
0x6d2: V692 = 0x44
0x6d4: V693 = ADD 0x44 V675
0x6d5: V694 = 0x0
0x6d7: V695 = 0x40
0x6d9: V696 = M[0x40]
0x6dc: V697 = SUB V693 V696
0x6de: V698 = 0x0
0x6e2: V699 = EXTCODESIZE V624
0x6e3: V700 = ISZERO V699
0x6e4: V701 = ISZERO V700
0x6e5: V702 = 0x6ed
0x6e8: JUMPI 0x6ed V701
---
Entry stack: [V12, 0x472, V624, 0xa9059cbb, V628, V624, 0x70a08231, V652]
Stack pops: 6
Stack additions: [S5, S4, V693, 0x0, V696, V697, V696, 0x0, S5]
Exit stack: [V12, 0x472, V624, 0xa9059cbb, V693, 0x0, V696, V697, V696, 0x0, V624]

================================

Block 0x6e9
[0x6e9:0x6ec]
---
Predecessors: [0x6a0]
Successors: []
---
0x6e9 PUSH1 0x0
0x6eb DUP1
0x6ec REVERT
---
0x6e9: V703 = 0x0
0x6ec: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, V624, 0xa9059cbb, V693, 0x0, V696, V697, V696, 0x0, V624]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V624, 0xa9059cbb, V693, 0x0, V696, V697, V696, 0x0, V624]

================================

Block 0x6ed
[0x6ed:0x6f9]
---
Predecessors: [0x6a0]
Successors: [0x6fa, 0x6fe]
---
0x6ed JUMPDEST
0x6ee PUSH2 0x2c6
0x6f1 GAS
0x6f2 SUB
0x6f3 CALL
0x6f4 ISZERO
0x6f5 ISZERO
0x6f6 PUSH2 0x6fe
0x6f9 JUMPI
---
0x6ed: JUMPDEST 
0x6ee: V704 = 0x2c6
0x6f1: V705 = GAS
0x6f2: V706 = SUB V705 0x2c6
0x6f3: V707 = CALL V706 V624 0x0 V696 V697 V696 0x0
0x6f4: V708 = ISZERO V707
0x6f5: V709 = ISZERO V708
0x6f6: V710 = 0x6fe
0x6f9: JUMPI 0x6fe V709
---
Entry stack: [V12, 0x472, V624, 0xa9059cbb, V693, 0x0, V696, V697, V696, 0x0, V624]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x472, V624, 0xa9059cbb, V693]

================================

Block 0x6fa
[0x6fa:0x6fd]
---
Predecessors: [0x6ed]
Successors: []
---
0x6fa PUSH1 0x0
0x6fc DUP1
0x6fd REVERT
---
0x6fa: V711 = 0x0
0x6fd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x472, V624, 0xa9059cbb, V693]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x472, V624, 0xa9059cbb, V693]

================================

Block 0x6fe
[0x6fe:0x713]
---
Predecessors: [0x6ed]
Successors: [0x714]
---
0x6fe JUMPDEST
0x6ff POP
0x700 POP
0x701 PUSH1 0x0
0x703 PUSH1 0x7
0x705 SSTORE
0x706 POP
0x707 PUSH1 0x8
0x709 DUP1
0x70a SLOAD
0x70b PUSH1 0xff
0x70d NOT
0x70e AND
0x70f PUSH1 0x1
0x711 OR
0x712 SWAP1
0x713 SSTORE
---
0x6fe: JUMPDEST 
0x701: V712 = 0x0
0x703: V713 = 0x7
0x705: S[0x7] = 0x0
0x707: V714 = 0x8
0x70a: V715 = S[0x8]
0x70b: V716 = 0xff
0x70d: V717 = NOT 0xff
0x70e: V718 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V715
0x70f: V719 = 0x1
0x711: V720 = OR 0x1 V718
0x713: S[0x8] = V720
---
Entry stack: [V12, 0x472, V624, 0xa9059cbb, V693]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x472]

================================

Block 0x714
[0x714:0x715]
---
Predecessors: [0x6fe]
Successors: [0x472]
---
0x714 JUMPDEST
0x715 JUMP
---
0x714: JUMPDEST 
0x715: JUMP 0x472
---
Entry stack: [V12, 0x472]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x716
[0x716:0x724]
---
Predecessors: [0x494]
Successors: [0x49c]
---
0x716 JUMPDEST
0x717 PUSH1 0x0
0x719 SLOAD
0x71a PUSH1 0x1
0x71c PUSH1 0xa0
0x71e PUSH1 0x2
0x720 EXP
0x721 SUB
0x722 AND
0x723 DUP2
0x724 JUMP
---
0x716: JUMPDEST 
0x717: V721 = 0x0
0x719: V722 = S[0x0]
0x71a: V723 = 0x1
0x71c: V724 = 0xa0
0x71e: V725 = 0x2
0x720: V726 = EXP 0x2 0xa0
0x721: V727 = SUB 0x10000000000000000000000000000000000000000 0x1
0x722: V728 = AND 0xffffffffffffffffffffffffffffffffffffffff V722
0x724: JUMP 0x49c
---
Entry stack: [V12, 0x49c]
Stack pops: 1
Stack additions: [S0, V728]
Exit stack: [V12, 0x49c, V728]

================================

Block 0x725
[0x725:0x72a]
---
Predecessors: [0x4c3]
Successors: [0x4cb]
---
0x725 JUMPDEST
0x726 PUSH1 0x6
0x728 SLOAD
0x729 DUP2
0x72a JUMP
---
0x725: JUMPDEST 
0x726: V729 = 0x6
0x728: V730 = S[0x6]
0x72a: JUMP 0x4cb
---
Entry stack: [V12, 0x4cb]
Stack pops: 1
Stack additions: [S0, V730]
Exit stack: [V12, 0x4cb, V730]

================================

Block 0x72b
[0x72b:0x730]
---
Predecessors: [0x4e8]
Successors: [0x4cb]
---
0x72b JUMPDEST
0x72c PUSH1 0x1
0x72e SLOAD
0x72f DUP2
0x730 JUMP
---
0x72b: JUMPDEST 
0x72c: V731 = 0x1
0x72e: V732 = S[0x1]
0x730: JUMP 0x4cb
---
Entry stack: [V12, 0x4cb]
Stack pops: 1
Stack additions: [S0, V732]
Exit stack: [V12, 0x4cb, V732]

================================

Block 0x731
[0x731:0x744]
---
Predecessors: [0x50d]
Successors: [0x49c]
---
0x731 JUMPDEST
0x732 PUSH1 0x8
0x734 SLOAD
0x735 PUSH2 0x100
0x738 SWAP1
0x739 DIV
0x73a PUSH1 0x1
0x73c PUSH1 0xa0
0x73e PUSH1 0x2
0x740 EXP
0x741 SUB
0x742 AND
0x743 DUP2
0x744 JUMP
---
0x731: JUMPDEST 
0x732: V733 = 0x8
0x734: V734 = S[0x8]
0x735: V735 = 0x100
0x739: V736 = DIV V734 0x100
0x73a: V737 = 0x1
0x73c: V738 = 0xa0
0x73e: V739 = 0x2
0x740: V740 = EXP 0x2 0xa0
0x741: V741 = SUB 0x10000000000000000000000000000000000000000 0x1
0x742: V742 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0x744: JUMP 0x49c
---
Entry stack: [V12, 0x49c]
Stack pops: 1
Stack additions: [S0, V742]
Exit stack: [V12, 0x49c, V742]

================================

Block 0x745
[0x745:0x74a]
---
Predecessors: [0x53c]
Successors: [0x4cb]
---
0x745 JUMPDEST
0x746 PUSH1 0x7
0x748 SLOAD
0x749 DUP2
0x74a JUMP
---
0x745: JUMPDEST 
0x746: V743 = 0x7
0x748: V744 = S[0x7]
0x74a: JUMP 0x4cb
---
Entry stack: [V12, 0x4cb]
Stack pops: 1
Stack additions: [S0, V744]
Exit stack: [V12, 0x4cb, V744]

================================

Block 0x74b
[0x74b:0x750]
---
Predecessors: [0x561]
Successors: [0x4cb]
---
0x74b JUMPDEST
0x74c PUSH1 0x4
0x74e SLOAD
0x74f DUP2
0x750 JUMP
---
0x74b: JUMPDEST 
0x74c: V745 = 0x4
0x74e: V746 = S[0x4]
0x750: JUMP 0x4cb
---
Entry stack: [V12, 0x4cb]
Stack pops: 1
Stack additions: [S0, V746]
Exit stack: [V12, 0x4cb, V746]

================================

Block 0x751
[0x751:0x756]
---
Predecessors: [0x586]
Successors: [0x4cb]
---
0x751 JUMPDEST
0x752 PUSH1 0x2
0x754 SLOAD
0x755 DUP2
0x756 JUMP
---
0x751: JUMPDEST 
0x752: V747 = 0x2
0x754: V748 = S[0x2]
0x756: JUMP 0x4cb
---
Entry stack: [V12, 0x4cb]
Stack pops: 1
Stack additions: [S0, V748]
Exit stack: [V12, 0x4cb, V748]

================================

Block 0x757
[0x757:0x75c]
---
Predecessors: [0x5ab]
Successors: [0x4cb]
---
0x757 JUMPDEST
0x758 PUSH1 0x3
0x75a SLOAD
0x75b DUP2
0x75c JUMP
---
0x757: JUMPDEST 
0x758: V749 = 0x3
0x75a: V750 = S[0x3]
0x75c: JUMP 0x4cb
---
Entry stack: [V12, 0x4cb]
Stack pops: 1
Stack additions: [S0, V750]
Exit stack: [V12, 0x4cb, V750]

================================

Block 0x75d
[0x75d:0x765]
---
Predecessors: [0x5d0]
Successors: [0x5d8]
---
0x75d JUMPDEST
0x75e PUSH1 0x8
0x760 SLOAD
0x761 PUSH1 0xff
0x763 AND
0x764 DUP2
0x765 JUMP
---
0x75d: JUMPDEST 
0x75e: V751 = 0x8
0x760: V752 = S[0x8]
0x761: V753 = 0xff
0x763: V754 = AND 0xff V752
0x765: JUMP 0x5d8
---
Entry stack: [V12, 0x5d8]
Stack pops: 1
Stack additions: [S0, V754]
Exit stack: [V12, 0x5d8, V754]

================================

Block 0x766
[0x766:0x791]
---
Predecessors: []
Successors: []
---
0x766 STOP
0x767 LOG1
0x768 PUSH6 0x627a7a723058
0x76f SHA3
0x770 MISSING 0xd5
0x771 CALLDATACOPY
0x772 MISSING 0xac
0x773 MISSING 0xe5
0x774 DUP8
0x775 MISSING 0xb7
0x776 MISSING 0x47
0x777 SWAP14
0x778 MISSING 0xfb
0x779 MSTORE8
0x77a PUSH9 0x9dced2e591fc0bfd7c
0x784 OR
0x785 MISSING 0xeb
0x786 MISSING 0xb3
0x787 SWAP14
0x788 MISSING 0xd0
0x789 MISSING 0xbd
0x78a SWAP7
0x78b SWAP13
0x78c AND
0x78d MISSING 0x4e
0x78e MISSING 0xea
0x78f ADD
0x790 STOP
0x791 MISSING 0x29
---
0x766: STOP 
0x767: LOG S0 S1 S2
0x768: V755 = 0x627a7a723058
0x76f: V756 = SHA3 0x627a7a723058 S3
0x770: MISSING 0xd5
0x771: CALLDATACOPY S0 S1 S2
0x772: MISSING 0xac
0x773: MISSING 0xe5
0x775: MISSING 0xb7
0x776: MISSING 0x47
0x778: MISSING 0xfb
0x779: M8[S0] = S1
0x77a: V757 = 0x9dced2e591fc0bfd7c
0x784: V758 = OR 0x9dced2e591fc0bfd7c S2
0x785: MISSING 0xeb
0x786: MISSING 0xb3
0x788: MISSING 0xd0
0x789: MISSING 0xbd
0x78c: V759 = AND S13 S1
0x78d: MISSING 0x4e
0x78e: MISSING 0xea
0x78f: V760 = ADD S0 S1
0x790: STOP 
0x791: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V756, S7, S0, S1, S2, S3, S4, S5, S6, S7, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, V758, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, V759, S2, S3, S4, S5, S6, S0, S8, S9, S10, S11, S12, S7, V760]
Exit stack: []

================================

Function 0:
Public function signature: 0xd6103a1
Entry block: 0x474
Exit block: 0x472
Body: 0x472, 0x474, 0x47b, 0x47f, 0x5ec, 0x5f9, 0x5fd, 0x619, 0x61d, 0x68b, 0x68f, 0x69c, 0x6a0, 0x6e9, 0x6ed, 0x6fa, 0x6fe, 0x714

Function 1:
Public function signature: 0x27ebcf0e
Entry block: 0x489
Exit block: 0x49c
Body: 0x489, 0x490, 0x494, 0x49c, 0x716

Function 2:
Public function signature: 0x519ee19e
Entry block: 0x4b8
Exit block: 0x4cb
Body: 0x4b8, 0x4bf, 0x4c3, 0x4cb, 0x725

Function 3:
Public function signature: 0x7fa8c158
Entry block: 0x4dd
Exit block: 0x4cb
Body: 0x4cb, 0x4dd, 0x4e4, 0x4e8, 0x72b

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x502
Exit block: 0x49c
Body: 0x49c, 0x502, 0x509, 0x50d, 0x731

Function 5:
Public function signature: 0x96c5406d
Entry block: 0x531
Exit block: 0x4cb
Body: 0x4cb, 0x531, 0x538, 0x53c, 0x745

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x556
Exit block: 0x4cb
Body: 0x4cb, 0x556, 0x55d, 0x561, 0x74b

Function 7:
Public function signature: 0xb44eccc9
Entry block: 0x57b
Exit block: 0x4cb
Body: 0x4cb, 0x57b, 0x582, 0x586, 0x751

Function 8:
Public function signature: 0xc8e569a8
Entry block: 0x5a0
Exit block: 0x4cb
Body: 0x4cb, 0x5a0, 0x5a7, 0x5ab, 0x757

Function 9:
Public function signature: 0xccb07cef
Entry block: 0x5c5
Exit block: 0x5d8
Body: 0x5c5, 0x5cc, 0x5d0, 0x5d8, 0x75d

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x3d7
Body: 0x88, 0x8c, 0xe5, 0xe9, 0xf6, 0xfa, 0x114, 0x141, 0x145, 0x157, 0x163, 0x190, 0x194, 0x199, 0x1a8, 0x1a9, 0x1b6, 0x1ba, 0x1ca, 0x1cb, 0x1da, 0x20d, 0x211, 0x21a, 0x24a, 0x24e, 0x24f, 0x2a1, 0x2a5, 0x2b2, 0x2b6, 0x2d3, 0x2e0, 0x2e5, 0x2f7, 0x2f8, 0x331, 0x335, 0x38e, 0x392, 0x39f, 0x3a3, 0x3d7, 0x3db, 0x3fa, 0x3fb, 0x3fc, 0x46d, 0x472

