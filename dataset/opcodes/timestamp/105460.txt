args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/6/105460.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8d
0xa: JUMPI 0x8d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x95]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x64ca444
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x95
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x64ca444
0x1a: V12 = EQ V10 0x64ca444
0x1b: V13 = 0x95
0x1e: JUMPI 0x95 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x9e]
---
0x1f DUP1
0x20 PUSH4 0x1c8499e5
0x25 EQ
0x26 PUSH2 0x9e
0x29 JUMPI
---
0x20: V14 = 0x1c8499e5
0x25: V15 = EQ 0x1c8499e5 V10
0x26: V16 = 0x9e
0x29: JUMPI 0x9e V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xc2]
---
0x2a DUP1
0x2b PUSH4 0x2a24f46c
0x30 EQ
0x31 PUSH2 0xc2
0x34 JUMPI
---
0x2b: V17 = 0x2a24f46c
0x30: V18 = EQ 0x2a24f46c V10
0x31: V19 = 0xc2
0x34: JUMPI 0xc2 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xe1]
---
0x35 DUP1
0x36 PUSH4 0x38af3eed
0x3b EQ
0x3c PUSH2 0xe1
0x3f JUMPI
---
0x36: V20 = 0x38af3eed
0x3b: V21 = EQ 0x38af3eed V10
0x3c: V22 = 0xe1
0x3f: JUMPI 0xe1 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0xf3]
---
0x40 DUP1
0x41 PUSH4 0x41c0e1b5
0x46 EQ
0x47 PUSH2 0xf3
0x4a JUMPI
---
0x41: V23 = 0x41c0e1b5
0x46: V24 = EQ 0x41c0e1b5 V10
0x47: V25 = 0xf3
0x4a: JUMPI 0xf3 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x11c]
---
0x4b DUP1
0x4c PUSH4 0x4f245ef7
0x51 EQ
0x52 PUSH2 0x11c
0x55 JUMPI
---
0x4c: V26 = 0x4f245ef7
0x51: V27 = EQ 0x4f245ef7 V10
0x52: V28 = 0x11c
0x55: JUMPI 0x11c V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x125]
---
0x56 DUP1
0x57 PUSH4 0x73344963
0x5c EQ
0x5d PUSH2 0x125
0x60 JUMPI
---
0x57: V29 = 0x73344963
0x5c: V30 = EQ 0x73344963 V10
0x5d: V31 = 0x125
0x60: JUMPI 0x125 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x182]
---
0x61 DUP1
0x62 PUSH4 0x7aef951c
0x67 EQ
0x68 PUSH2 0x182
0x6b JUMPI
---
0x62: V32 = 0x7aef951c
0x67: V33 = EQ 0x7aef951c V10
0x68: V34 = 0x182
0x6b: JUMPI 0x182 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1d5]
---
0x6c DUP1
0x6d PUSH4 0x91f90157
0x72 EQ
0x73 PUSH2 0x1d5
0x76 JUMPI
---
0x6d: V35 = 0x91f90157
0x72: V36 = EQ 0x91f90157 V10
0x73: V37 = 0x1d5
0x76: JUMPI 0x1d5 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1e7]
---
0x77 DUP1
0x78 PUSH4 0xd074a38d
0x7d EQ
0x7e PUSH2 0x1e7
0x81 JUMPI
---
0x78: V38 = 0xd074a38d
0x7d: V39 = EQ 0xd074a38d V10
0x7e: V40 = 0x1e7
0x81: JUMPI 0x1e7 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x1f0]
---
0x82 DUP1
0x83 PUSH4 0xd57bde79
0x88 EQ
0x89 PUSH2 0x1f0
0x8c JUMPI
---
0x83: V41 = 0xd57bde79
0x88: V42 = EQ 0xd57bde79 V10
0x89: V43 = 0x1f0
0x8c: JUMPI 0x1f0 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x94]
---
Predecessors: [0x0, 0x82]
Successors: []
---
0x8d JUMPDEST
0x8e PUSH2 0x1f9
0x91 PUSH2 0x2
0x94 JUMP
---
0x8d: JUMPDEST 
0x8e: V44 = 0x1f9
0x91: V45 = 0x2
0x94: THROW 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f9]
Exit stack: [V10, 0x1f9]

================================

Block 0x95
[0x95:0x9d]
---
Predecessors: [0xb]
Successors: [0x1fd]
---
0x95 JUMPDEST
0x96 PUSH2 0x1fd
0x99 PUSH1 0x7
0x9b SLOAD
0x9c DUP2
0x9d JUMP
---
0x95: JUMPDEST 
0x96: V46 = 0x1fd
0x99: V47 = 0x7
0x9b: V48 = S[0x7]
0x9d: JUMP 0x1fd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fd, V48]
Exit stack: [V10, 0x1fd, V48]

================================

Block 0x9e
[0x9e:0xc1]
---
Predecessors: [0x1f]
Successors: [0x1f9]
---
0x9e JUMPDEST
0x9f PUSH2 0x1f9
0xa2 PUSH1 0x1
0xa4 DUP1
0xa5 SLOAD
0xa6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb NOT
0xbc AND
0xbd CALLER
0xbe OR
0xbf SWAP1
0xc0 SSTORE
0xc1 JUMP
---
0x9e: JUMPDEST 
0x9f: V49 = 0x1f9
0xa2: V50 = 0x1
0xa5: V51 = S[0x1]
0xa6: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xbb: V53 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xbc: V54 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V51
0xbd: V55 = CALLER
0xbe: V56 = OR V55 V54
0xc0: S[0x1] = V56
0xc1: JUMP 0x1f9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xdc]
---
Predecessors: [0x2a]
Successors: [0xdd, 0x438]
---
0xc2 JUMPDEST
0xc3 PUSH2 0x1f9
0xc6 PUSH1 0x1
0xc8 SLOAD
0xc9 PUSH1 0x1
0xcb PUSH1 0xa0
0xcd PUSH1 0x2
0xcf EXP
0xd0 SUB
0xd1 SWAP1
0xd2 DUP2
0xd3 AND
0xd4 CALLER
0xd5 SWAP1
0xd6 SWAP2
0xd7 AND
0xd8 EQ
0xd9 PUSH2 0x438
0xdc JUMPI
---
0xc2: JUMPDEST 
0xc3: V57 = 0x1f9
0xc6: V58 = 0x1
0xc8: V59 = S[0x1]
0xc9: V60 = 0x1
0xcb: V61 = 0xa0
0xcd: V62 = 0x2
0xcf: V63 = EXP 0x2 0xa0
0xd0: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd3: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xd4: V66 = CALLER
0xd7: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0xd8: V68 = EQ V67 V65
0xd9: V69 = 0x438
0xdc: JUMPI 0x438 V68
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f9]
Exit stack: [V10, 0x1f9]

================================

Block 0xdd
[0xdd:0xe0]
---
Predecessors: [0xc2]
Successors: []
---
0xdd PUSH2 0x2
0xe0 JUMP
---
0xdd: V70 = 0x2
0xe0: THROW 
---
Entry stack: [V10, 0x1f9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f9]

================================

Block 0xe1
[0xe1:0xf2]
---
Predecessors: [0x35]
Successors: [0x207]
---
0xe1 JUMPDEST
0xe2 PUSH2 0x207
0xe5 PUSH1 0x0
0xe7 SLOAD
0xe8 PUSH1 0x1
0xea PUSH1 0xa0
0xec PUSH1 0x2
0xee EXP
0xef SUB
0xf0 AND
0xf1 DUP2
0xf2 JUMP
---
0xe1: JUMPDEST 
0xe2: V71 = 0x207
0xe5: V72 = 0x0
0xe7: V73 = S[0x0]
0xe8: V74 = 0x1
0xea: V75 = 0xa0
0xec: V76 = 0x2
0xee: V77 = EXP 0x2 0xa0
0xef: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf0: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0xf2: JUMP 0x207
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x207, V79]
Exit stack: [V10, 0x207, V79]

================================

Block 0xf3
[0xf3:0x10e]
---
Predecessors: [0x40]
Successors: [0x10f, 0x1fb]
---
0xf3 JUMPDEST
0xf4 PUSH2 0x1f9
0xf7 PUSH1 0x1
0xf9 SLOAD
0xfa PUSH1 0x1
0xfc PUSH1 0xa0
0xfe PUSH1 0x2
0x100 EXP
0x101 SUB
0x102 SWAP1
0x103 DUP2
0x104 AND
0x105 CALLER
0x106 SWAP1
0x107 SWAP2
0x108 AND
0x109 EQ
0x10a ISZERO
0x10b PUSH2 0x1fb
0x10e JUMPI
---
0xf3: JUMPDEST 
0xf4: V80 = 0x1f9
0xf7: V81 = 0x1
0xf9: V82 = S[0x1]
0xfa: V83 = 0x1
0xfc: V84 = 0xa0
0xfe: V85 = 0x2
0x100: V86 = EXP 0x2 0xa0
0x101: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0x104: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x105: V89 = CALLER
0x108: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x109: V91 = EQ V90 V88
0x10a: V92 = ISZERO V91
0x10b: V93 = 0x1fb
0x10e: JUMPI 0x1fb V92
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f9]
Exit stack: [V10, 0x1f9]

================================

Block 0x10f
[0x10f:0x11b]
---
Predecessors: [0xf3]
Successors: []
---
0x10f PUSH1 0x1
0x111 SLOAD
0x112 PUSH1 0x1
0x114 PUSH1 0xa0
0x116 PUSH1 0x2
0x118 EXP
0x119 SUB
0x11a AND
0x11b SELFDESTRUCT
---
0x10f: V94 = 0x1
0x111: V95 = S[0x1]
0x112: V96 = 0x1
0x114: V97 = 0xa0
0x116: V98 = 0x2
0x118: V99 = EXP 0x2 0xa0
0x119: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11a: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x11b: SELFDESTRUCT V101
---
Entry stack: [V10, 0x1f9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f9]

================================

Block 0x11c
[0x11c:0x124]
---
Predecessors: [0x4b]
Successors: [0x1fd]
---
0x11c JUMPDEST
0x11d PUSH2 0x1fd
0x120 PUSH1 0x2
0x122 SLOAD
0x123 DUP2
0x124 JUMP
---
0x11c: JUMPDEST 
0x11d: V102 = 0x1fd
0x120: V103 = 0x2
0x122: V104 = S[0x2]
0x124: JUMP 0x1fd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fd, V104]
Exit stack: [V10, 0x1fd, V104]

================================

Block 0x125
[0x125:0x166]
---
Predecessors: [0x56]
Successors: [0x167, 0x2b3]
---
0x125 JUMPDEST
0x126 PUSH2 0x21a
0x129 PUSH1 0x5
0x12b DUP1
0x12c SLOAD
0x12d PUSH1 0x20
0x12f PUSH1 0x2
0x131 PUSH1 0x1
0x133 DUP4
0x134 AND
0x135 ISZERO
0x136 PUSH2 0x100
0x139 MUL
0x13a PUSH1 0x0
0x13c NOT
0x13d ADD
0x13e SWAP1
0x13f SWAP3
0x140 AND
0x141 SWAP2
0x142 SWAP1
0x143 SWAP2
0x144 DIV
0x145 PUSH1 0x1f
0x147 DUP2
0x148 ADD
0x149 DUP3
0x14a SWAP1
0x14b DIV
0x14c SWAP1
0x14d SWAP2
0x14e MUL
0x14f PUSH1 0x80
0x151 SWAP1
0x152 DUP2
0x153 ADD
0x154 PUSH1 0x40
0x156 MSTORE
0x157 PUSH1 0x60
0x159 DUP3
0x15a DUP2
0x15b MSTORE
0x15c SWAP3
0x15d SWAP2
0x15e SWAP1
0x15f DUP3
0x160 DUP3
0x161 DUP1
0x162 ISZERO
0x163 PUSH2 0x2b3
0x166 JUMPI
---
0x125: JUMPDEST 
0x126: V105 = 0x21a
0x129: V106 = 0x5
0x12c: V107 = S[0x5]
0x12d: V108 = 0x20
0x12f: V109 = 0x2
0x131: V110 = 0x1
0x134: V111 = AND V107 0x1
0x135: V112 = ISZERO V111
0x136: V113 = 0x100
0x139: V114 = MUL 0x100 V112
0x13a: V115 = 0x0
0x13c: V116 = NOT 0x0
0x13d: V117 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V114
0x140: V118 = AND V107 V117
0x144: V119 = DIV V118 0x2
0x145: V120 = 0x1f
0x148: V121 = ADD V119 0x1f
0x14b: V122 = DIV V121 0x20
0x14e: V123 = MUL 0x20 V122
0x14f: V124 = 0x80
0x153: V125 = ADD 0x80 V123
0x154: V126 = 0x40
0x156: M[0x40] = V125
0x157: V127 = 0x60
0x15b: M[0x60] = V119
0x162: V128 = ISZERO V119
0x163: V129 = 0x2b3
0x166: JUMPI 0x2b3 V128
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x21a, 0x60, 0x5, V119, 0x80, 0x5, V119]
Exit stack: [V10, 0x21a, 0x60, 0x5, V119, 0x80, 0x5, V119]

================================

Block 0x167
[0x167:0x16e]
---
Predecessors: [0x125]
Successors: [0x16f, 0x288]
---
0x167 DUP1
0x168 PUSH1 0x1f
0x16a LT
0x16b PUSH2 0x288
0x16e JUMPI
---
0x168: V130 = 0x1f
0x16a: V131 = LT 0x1f V119
0x16b: V132 = 0x288
0x16e: JUMPI 0x288 V131
---
Entry stack: [V10, 0x21a, 0x60, 0x5, V119, 0x80, 0x5, V119]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x21a, 0x60, 0x5, V119, 0x80, 0x5, V119]

================================

Block 0x16f
[0x16f:0x181]
---
Predecessors: [0x167]
Successors: [0x2b3]
---
0x16f PUSH2 0x100
0x172 DUP1
0x173 DUP4
0x174 SLOAD
0x175 DIV
0x176 MUL
0x177 DUP4
0x178 MSTORE
0x179 SWAP2
0x17a PUSH1 0x20
0x17c ADD
0x17d SWAP2
0x17e PUSH2 0x2b3
0x181 JUMP
---
0x16f: V133 = 0x100
0x174: V134 = S[0x5]
0x175: V135 = DIV V134 0x100
0x176: V136 = MUL V135 0x100
0x178: M[0x80] = V136
0x17a: V137 = 0x20
0x17c: V138 = ADD 0x20 0x80
0x17e: V139 = 0x2b3
0x181: JUMP 0x2b3
---
Entry stack: [V10, 0x21a, 0x60, 0x5, V119, 0x80, 0x5, V119]
Stack pops: 3
Stack additions: [0xa0, S1, S0]
Exit stack: [V10, 0x21a, 0x60, 0x5, V119, 0xa0, 0x5, V119]

================================

Block 0x182
[0x182:0x1d0]
---
Predecessors: [0x61]
Successors: [0x1d1, 0x2bb]
---
0x182 JUMPDEST
0x183 PUSH1 0x80
0x185 PUSH1 0x20
0x187 PUSH1 0x4
0x189 DUP1
0x18a CALLDATALOAD
0x18b DUP1
0x18c DUP3
0x18d ADD
0x18e CALLDATALOAD
0x18f PUSH1 0x1f
0x191 DUP2
0x192 ADD
0x193 DUP5
0x194 SWAP1
0x195 DIV
0x196 SWAP1
0x197 SWAP4
0x198 MUL
0x199 DUP5
0x19a ADD
0x19b PUSH1 0x40
0x19d MSTORE
0x19e PUSH1 0x60
0x1a0 DUP4
0x1a1 DUP2
0x1a2 MSTORE
0x1a3 PUSH2 0x1f9
0x1a6 SWAP5
0x1a7 SWAP3
0x1a8 SWAP4
0x1a9 PUSH1 0x24
0x1ab SWAP4
0x1ac SWAP2
0x1ad SWAP3
0x1ae DUP5
0x1af ADD
0x1b0 SWAP2
0x1b1 DUP2
0x1b2 SWAP1
0x1b3 DUP4
0x1b4 DUP3
0x1b5 DUP1
0x1b6 DUP3
0x1b7 DUP5
0x1b8 CALLDATACOPY
0x1b9 POP
0x1ba SWAP5
0x1bb SWAP7
0x1bc POP
0x1bd POP
0x1be POP
0x1bf POP
0x1c0 POP
0x1c1 POP
0x1c2 POP
0x1c3 PUSH1 0x3
0x1c5 SLOAD
0x1c6 PUSH1 0x2
0x1c8 SLOAD
0x1c9 ADD
0x1ca TIMESTAMP
0x1cb GT
0x1cc ISZERO
0x1cd PUSH2 0x2bb
0x1d0 JUMPI
---
0x182: JUMPDEST 
0x183: V140 = 0x80
0x185: V141 = 0x20
0x187: V142 = 0x4
0x18a: V143 = CALLDATALOAD 0x4
0x18d: V144 = ADD 0x4 V143
0x18e: V145 = CALLDATALOAD V144
0x18f: V146 = 0x1f
0x192: V147 = ADD V145 0x1f
0x195: V148 = DIV V147 0x20
0x198: V149 = MUL 0x20 V148
0x19a: V150 = ADD 0x80 V149
0x19b: V151 = 0x40
0x19d: M[0x40] = V150
0x19e: V152 = 0x60
0x1a2: M[0x60] = V145
0x1a3: V153 = 0x1f9
0x1a9: V154 = 0x24
0x1af: V155 = ADD 0x24 V143
0x1b8: CALLDATACOPY 0x80 V155 V145
0x1c3: V156 = 0x3
0x1c5: V157 = S[0x3]
0x1c6: V158 = 0x2
0x1c8: V159 = S[0x2]
0x1c9: V160 = ADD V159 V157
0x1ca: V161 = TIMESTAMP
0x1cb: V162 = GT V161 V160
0x1cc: V163 = ISZERO V162
0x1cd: V164 = 0x2bb
0x1d0: JUMPI 0x2bb V163
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f9, 0x60]
Exit stack: [V10, 0x1f9, 0x60]

================================

Block 0x1d1
[0x1d1:0x1d4]
---
Predecessors: [0x182]
Successors: []
---
0x1d1 PUSH2 0x2
0x1d4 JUMP
---
0x1d1: V165 = 0x2
0x1d4: THROW 
---
Entry stack: [V10, 0x1f9, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f9, 0x60]

================================

Block 0x1d5
[0x1d5:0x1e6]
---
Predecessors: [0x6c]
Successors: [0x207]
---
0x1d5 JUMPDEST
0x1d6 PUSH2 0x207
0x1d9 PUSH1 0x4
0x1db SLOAD
0x1dc PUSH1 0x1
0x1de PUSH1 0xa0
0x1e0 PUSH1 0x2
0x1e2 EXP
0x1e3 SUB
0x1e4 AND
0x1e5 DUP2
0x1e6 JUMP
---
0x1d5: JUMPDEST 
0x1d6: V166 = 0x207
0x1d9: V167 = 0x4
0x1db: V168 = S[0x4]
0x1dc: V169 = 0x1
0x1de: V170 = 0xa0
0x1e0: V171 = 0x2
0x1e2: V172 = EXP 0x2 0xa0
0x1e3: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e4: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x1e6: JUMP 0x207
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x207, V174]
Exit stack: [V10, 0x207, V174]

================================

Block 0x1e7
[0x1e7:0x1ef]
---
Predecessors: [0x77]
Successors: [0x1fd]
---
0x1e7 JUMPDEST
0x1e8 PUSH2 0x1fd
0x1eb PUSH1 0x3
0x1ed SLOAD
0x1ee DUP2
0x1ef JUMP
---
0x1e7: JUMPDEST 
0x1e8: V175 = 0x1fd
0x1eb: V176 = 0x3
0x1ed: V177 = S[0x3]
0x1ef: JUMP 0x1fd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fd, V177]
Exit stack: [V10, 0x1fd, V177]

================================

Block 0x1f0
[0x1f0:0x1f8]
---
Predecessors: [0x82]
Successors: [0x1fd]
---
0x1f0 JUMPDEST
0x1f1 PUSH2 0x1fd
0x1f4 PUSH1 0x6
0x1f6 SLOAD
0x1f7 DUP2
0x1f8 JUMP
---
0x1f0: JUMPDEST 
0x1f1: V178 = 0x1fd
0x1f4: V179 = 0x6
0x1f6: V180 = S[0x6]
0x1f8: JUMP 0x1fd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fd, V180]
Exit stack: [V10, 0x1fd, V180]

================================

Block 0x1f9
[0x1f9:0x1fa]
---
Predecessors: [0x9e, 0x1fb, 0x3d8, 0x45a]
Successors: []
---
0x1f9 JUMPDEST
0x1fa STOP
---
0x1f9: JUMPDEST 
0x1fa: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fb
[0x1fb:0x1fc]
---
Predecessors: [0xf3]
Successors: [0x1f9]
---
0x1fb JUMPDEST
0x1fc JUMP
---
0x1fb: JUMPDEST 
0x1fc: JUMP 0x1f9
---
Entry stack: [V10, 0x1f9]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fd
[0x1fd:0x206]
---
Predecessors: [0x95, 0x11c, 0x1e7, 0x1f0]
Successors: []
---
0x1fd JUMPDEST
0x1fe PUSH1 0x60
0x200 SWAP1
0x201 DUP2
0x202 MSTORE
0x203 PUSH1 0x20
0x205 SWAP1
0x206 RETURN
---
0x1fd: JUMPDEST 
0x1fe: V181 = 0x60
0x202: M[0x60] = S0
0x203: V182 = 0x20
0x206: RETURN 0x60 0x20
---
Entry stack: [V10, 0x1fd, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1fd]

================================

Block 0x207
[0x207:0x219]
---
Predecessors: [0xe1, 0x1d5]
Successors: []
---
0x207 JUMPDEST
0x208 PUSH1 0x1
0x20a PUSH1 0xa0
0x20c PUSH1 0x2
0x20e EXP
0x20f SUB
0x210 AND
0x211 PUSH1 0x60
0x213 SWAP1
0x214 DUP2
0x215 MSTORE
0x216 PUSH1 0x20
0x218 SWAP1
0x219 RETURN
---
0x207: JUMPDEST 
0x208: V183 = 0x1
0x20a: V184 = 0xa0
0x20c: V185 = 0x2
0x20e: V186 = EXP 0x2 0xa0
0x20f: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x210: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x211: V189 = 0x60
0x215: M[0x60] = V188
0x216: V190 = 0x20
0x219: RETURN 0x60 0x20
---
Entry stack: [V10, 0x207, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x207]

================================

Block 0x21a
[0x21a:0x260]
---
Predecessors: [0x2b3]
Successors: [0x261, 0x27a]
---
0x21a JUMPDEST
0x21b PUSH1 0x40
0x21d MLOAD
0x21e DUP1
0x21f DUP1
0x220 PUSH1 0x20
0x222 ADD
0x223 DUP3
0x224 DUP2
0x225 SUB
0x226 DUP3
0x227 MSTORE
0x228 DUP4
0x229 DUP2
0x22a DUP2
0x22b MLOAD
0x22c DUP2
0x22d MSTORE
0x22e PUSH1 0x20
0x230 ADD
0x231 SWAP2
0x232 POP
0x233 DUP1
0x234 MLOAD
0x235 SWAP1
0x236 PUSH1 0x20
0x238 ADD
0x239 SWAP1
0x23a DUP1
0x23b DUP4
0x23c DUP4
0x23d DUP3
0x23e SWAP1
0x23f PUSH1 0x0
0x241 PUSH1 0x4
0x243 PUSH1 0x20
0x245 DUP5
0x246 PUSH1 0x1f
0x248 ADD
0x249 DIV
0x24a PUSH1 0xf
0x24c MUL
0x24d PUSH1 0x3
0x24f ADD
0x250 CALL
0x251 POP
0x252 SWAP1
0x253 POP
0x254 SWAP1
0x255 DUP2
0x256 ADD
0x257 SWAP1
0x258 PUSH1 0x1f
0x25a AND
0x25b DUP1
0x25c ISZERO
0x25d PUSH2 0x27a
0x260 JUMPI
---
0x21a: JUMPDEST 
0x21b: V191 = 0x40
0x21d: V192 = M[0x40]
0x220: V193 = 0x20
0x222: V194 = ADD 0x20 V192
0x225: V195 = SUB V194 V192
0x227: M[V192] = V195
0x22b: V196 = M[0x60]
0x22d: M[V194] = V196
0x22e: V197 = 0x20
0x230: V198 = ADD 0x20 V194
0x234: V199 = M[0x60]
0x236: V200 = 0x20
0x238: V201 = ADD 0x20 0x60
0x23f: V202 = 0x0
0x241: V203 = 0x4
0x243: V204 = 0x20
0x246: V205 = 0x1f
0x248: V206 = ADD 0x1f V199
0x249: V207 = DIV V206 0x20
0x24a: V208 = 0xf
0x24c: V209 = MUL 0xf V207
0x24d: V210 = 0x3
0x24f: V211 = ADD 0x3 V209
0x250: V212 = CALL V211 0x4 0x0 0x80 V199 V198 V199
0x256: V213 = ADD V199 V198
0x258: V214 = 0x1f
0x25a: V215 = AND 0x1f V199
0x25c: V216 = ISZERO V215
0x25d: V217 = 0x27a
0x260: JUMPI 0x27a V216
---
Entry stack: [V10, 0x21a, 0x60]
Stack pops: 1
Stack additions: [S0, V192, V192, V213, V215]
Exit stack: [V10, 0x21a, 0x60, V192, V192, V213, V215]

================================

Block 0x261
[0x261:0x279]
---
Predecessors: [0x21a]
Successors: [0x27a]
---
0x261 DUP1
0x262 DUP3
0x263 SUB
0x264 DUP1
0x265 MLOAD
0x266 PUSH1 0x1
0x268 DUP4
0x269 PUSH1 0x20
0x26b SUB
0x26c PUSH2 0x100
0x26f EXP
0x270 SUB
0x271 NOT
0x272 AND
0x273 DUP2
0x274 MSTORE
0x275 PUSH1 0x20
0x277 ADD
0x278 SWAP2
0x279 POP
---
0x263: V218 = SUB V213 V215
0x265: V219 = M[V218]
0x266: V220 = 0x1
0x269: V221 = 0x20
0x26b: V222 = SUB 0x20 V215
0x26c: V223 = 0x100
0x26f: V224 = EXP 0x100 V222
0x270: V225 = SUB V224 0x1
0x271: V226 = NOT V225
0x272: V227 = AND V226 V219
0x274: M[V218] = V227
0x275: V228 = 0x20
0x277: V229 = ADD 0x20 V218
---
Entry stack: [V10, 0x21a, 0x60, V192, V192, V213, V215]
Stack pops: 2
Stack additions: [V229, S0]
Exit stack: [V10, 0x21a, 0x60, V192, V192, V229, V215]

================================

Block 0x27a
[0x27a:0x287]
---
Predecessors: [0x21a, 0x261]
Successors: []
---
0x27a JUMPDEST
0x27b POP
0x27c SWAP3
0x27d POP
0x27e POP
0x27f POP
0x280 PUSH1 0x40
0x282 MLOAD
0x283 DUP1
0x284 SWAP2
0x285 SUB
0x286 SWAP1
0x287 RETURN
---
0x27a: JUMPDEST 
0x280: V230 = 0x40
0x282: V231 = M[0x40]
0x285: V232 = SUB S1 V231
0x287: RETURN V231 V232
---
Entry stack: [V10, 0x21a, 0x60, V192, V192, S1, V215]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x21a]

================================

Block 0x288
[0x288:0x295]
---
Predecessors: [0x167]
Successors: [0x296]
---
0x288 JUMPDEST
0x289 DUP3
0x28a ADD
0x28b SWAP2
0x28c SWAP1
0x28d PUSH1 0x0
0x28f MSTORE
0x290 PUSH1 0x20
0x292 PUSH1 0x0
0x294 SHA3
0x295 SWAP1
---
0x288: JUMPDEST 
0x28a: V233 = ADD 0x80 V119
0x28d: V234 = 0x0
0x28f: M[0x0] = 0x5
0x290: V235 = 0x20
0x292: V236 = 0x0
0x294: V237 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x21a, 0x60, 0x5, V119, 0x80, 0x5, V119]
Stack pops: 3
Stack additions: [V233, V237, S2]
Exit stack: [V10, 0x21a, 0x60, 0x5, V119, V233, V237, 0x80]

================================

Block 0x296
[0x296:0x2a9]
---
Predecessors: [0x288, 0x296]
Successors: [0x296, 0x2aa]
---
0x296 JUMPDEST
0x297 DUP2
0x298 SLOAD
0x299 DUP2
0x29a MSTORE
0x29b SWAP1
0x29c PUSH1 0x1
0x29e ADD
0x29f SWAP1
0x2a0 PUSH1 0x20
0x2a2 ADD
0x2a3 DUP1
0x2a4 DUP4
0x2a5 GT
0x2a6 PUSH2 0x296
0x2a9 JUMPI
---
0x296: JUMPDEST 
0x298: V238 = S[S1]
0x29a: M[S0] = V238
0x29c: V239 = 0x1
0x29e: V240 = ADD 0x1 S1
0x2a0: V241 = 0x20
0x2a2: V242 = ADD 0x20 S0
0x2a5: V243 = GT V233 V242
0x2a6: V244 = 0x296
0x2a9: JUMPI 0x296 V243
---
Entry stack: [V10, 0x21a, 0x60, 0x5, V119, V233, S1, S0]
Stack pops: 3
Stack additions: [S2, V240, V242]
Exit stack: [V10, 0x21a, 0x60, 0x5, V119, V233, V240, V242]

================================

Block 0x2aa
[0x2aa:0x2b2]
---
Predecessors: [0x296]
Successors: [0x2b3]
---
0x2aa DUP3
0x2ab SWAP1
0x2ac SUB
0x2ad PUSH1 0x1f
0x2af AND
0x2b0 DUP3
0x2b1 ADD
0x2b2 SWAP2
---
0x2ac: V245 = SUB V242 V233
0x2ad: V246 = 0x1f
0x2af: V247 = AND 0x1f V245
0x2b1: V248 = ADD V233 V247
---
Entry stack: [V10, 0x21a, 0x60, 0x5, V119, V233, V240, V242]
Stack pops: 3
Stack additions: [V248, S1, S2]
Exit stack: [V10, 0x21a, 0x60, 0x5, V119, V248, V240, V233]

================================

Block 0x2b3
[0x2b3:0x2ba]
---
Predecessors: [0x125, 0x16f, 0x2aa]
Successors: [0x21a]
---
0x2b3 JUMPDEST
0x2b4 POP
0x2b5 POP
0x2b6 POP
0x2b7 POP
0x2b8 POP
0x2b9 DUP2
0x2ba JUMP
---
0x2b3: JUMPDEST 
0x2ba: JUMP 0x21a
---
Entry stack: [V10, 0x21a, 0x60, 0x5, V119, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x21a, 0x60]

================================

Block 0x2bb
[0x2bb:0x2c4]
---
Predecessors: [0x182]
Successors: [0x2c5, 0x2c9]
---
0x2bb JUMPDEST
0x2bc PUSH1 0x6
0x2be SLOAD
0x2bf CALLVALUE
0x2c0 GT
0x2c1 PUSH2 0x2c9
0x2c4 JUMPI
---
0x2bb: JUMPDEST 
0x2bc: V249 = 0x6
0x2be: V250 = S[0x6]
0x2bf: V251 = CALLVALUE
0x2c0: V252 = GT V251 V250
0x2c1: V253 = 0x2c9
0x2c4: JUMPI 0x2c9 V252
---
Entry stack: [V10, 0x1f9, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f9, 0x60]

================================

Block 0x2c5
[0x2c5:0x2c8]
---
Predecessors: [0x2bb]
Successors: []
---
0x2c5 PUSH2 0x2
0x2c8 JUMP
---
0x2c5: V254 = 0x2
0x2c8: THROW 
---
Entry stack: [V10, 0x1f9, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f9, 0x60]

================================

Block 0x2c9
[0x2c9:0x2dc]
---
Predecessors: [0x2bb]
Successors: [0x2dd, 0x303]
---
0x2c9 JUMPDEST
0x2ca PUSH1 0x4
0x2cc SLOAD
0x2cd PUSH1 0x1
0x2cf PUSH1 0xa0
0x2d1 PUSH1 0x2
0x2d3 EXP
0x2d4 SUB
0x2d5 AND
0x2d6 PUSH1 0x0
0x2d8 EQ
0x2d9 PUSH2 0x303
0x2dc JUMPI
---
0x2c9: JUMPDEST 
0x2ca: V255 = 0x4
0x2cc: V256 = S[0x4]
0x2cd: V257 = 0x1
0x2cf: V258 = 0xa0
0x2d1: V259 = 0x2
0x2d3: V260 = EXP 0x2 0xa0
0x2d4: V261 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d5: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x2d6: V263 = 0x0
0x2d8: V264 = EQ 0x0 V262
0x2d9: V265 = 0x303
0x2dc: JUMPI 0x303 V264
---
Entry stack: [V10, 0x1f9, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f9, 0x60]

================================

Block 0x2dd
[0x2dd:0x302]
---
Predecessors: [0x2c9]
Successors: [0x303]
---
0x2dd PUSH1 0x6
0x2df SLOAD
0x2e0 PUSH1 0x4
0x2e2 SLOAD
0x2e3 PUSH1 0x40
0x2e5 MLOAD
0x2e6 PUSH1 0x1
0x2e8 PUSH1 0xa0
0x2ea PUSH1 0x2
0x2ec EXP
0x2ed SUB
0x2ee SWAP2
0x2ef SWAP1
0x2f0 SWAP2
0x2f1 AND
0x2f2 SWAP2
0x2f3 PUSH1 0x0
0x2f5 SWAP2
0x2f6 DUP3
0x2f7 DUP2
0x2f8 DUP2
0x2f9 DUP2
0x2fa DUP6
0x2fb DUP9
0x2fc DUP4
0x2fd CALL
0x2fe POP
0x2ff POP
0x300 POP
0x301 POP
0x302 POP
---
0x2dd: V266 = 0x6
0x2df: V267 = S[0x6]
0x2e0: V268 = 0x4
0x2e2: V269 = S[0x4]
0x2e3: V270 = 0x40
0x2e5: V271 = M[0x40]
0x2e6: V272 = 0x1
0x2e8: V273 = 0xa0
0x2ea: V274 = 0x2
0x2ec: V275 = EXP 0x2 0xa0
0x2ed: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f1: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x2f3: V278 = 0x0
0x2fd: V279 = CALL 0x0 V277 V267 V271 0x0 V271 0x0
---
Entry stack: [V10, 0x1f9, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f9, 0x60]

================================

Block 0x303
[0x303:0x37f]
---
Predecessors: [0x2c9, 0x2dd]
Successors: [0x380, 0x3a8]
---
0x303 JUMPDEST
0x304 PUSH1 0x4
0x306 DUP1
0x307 SLOAD
0x308 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31d NOT
0x31e AND
0x31f CALLER
0x320 OR
0x321 SWAP1
0x322 SSTORE
0x323 DUP1
0x324 MLOAD
0x325 PUSH1 0x5
0x327 DUP1
0x328 SLOAD
0x329 PUSH1 0x0
0x32b DUP3
0x32c SWAP1
0x32d MSTORE
0x32e SWAP1
0x32f SWAP2
0x330 PUSH1 0x20
0x332 PUSH1 0x2
0x334 PUSH1 0x0
0x336 NOT
0x337 PUSH1 0x1
0x339 DUP6
0x33a AND
0x33b ISZERO
0x33c PUSH2 0x100
0x33f MUL
0x340 ADD
0x341 SWAP1
0x342 SWAP4
0x343 AND
0x344 SWAP3
0x345 SWAP1
0x346 SWAP3
0x347 DIV
0x348 PUSH1 0x1f
0x34a SWAP1
0x34b DUP2
0x34c ADD
0x34d SWAP3
0x34e SWAP1
0x34f SWAP3
0x350 DIV
0x351 PUSH32 0x36b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0
0x372 SWAP1
0x373 DUP2
0x374 ADD
0x375 SWAP3
0x376 PUSH1 0x80
0x378 SWAP1
0x379 DUP4
0x37a SWAP1
0x37b LT
0x37c PUSH2 0x3a8
0x37f JUMPI
---
0x303: JUMPDEST 
0x304: V280 = 0x4
0x307: V281 = S[0x4]
0x308: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x31d: V283 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x31e: V284 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V281
0x31f: V285 = CALLER
0x320: V286 = OR V285 V284
0x322: S[0x4] = V286
0x324: V287 = M[0x60]
0x325: V288 = 0x5
0x328: V289 = S[0x5]
0x329: V290 = 0x0
0x32d: M[0x0] = 0x5
0x330: V291 = 0x20
0x332: V292 = 0x2
0x334: V293 = 0x0
0x336: V294 = NOT 0x0
0x337: V295 = 0x1
0x33a: V296 = AND V289 0x1
0x33b: V297 = ISZERO V296
0x33c: V298 = 0x100
0x33f: V299 = MUL 0x100 V297
0x340: V300 = ADD V299 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x343: V301 = AND V289 V300
0x347: V302 = DIV V301 0x2
0x348: V303 = 0x1f
0x34c: V304 = ADD 0x1f V302
0x350: V305 = DIV V304 0x20
0x351: V306 = 0x36b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0
0x374: V307 = ADD 0x36b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0 V305
0x376: V308 = 0x80
0x37b: V309 = LT 0x1f V287
0x37c: V310 = 0x3a8
0x37f: JUMPI 0x3a8 V309
---
Entry stack: [V10, 0x1f9, 0x60]
Stack pops: 1
Stack additions: [S0, 0x5, V307, V287, 0x36b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0, 0x80]
Exit stack: [V10, 0x1f9, 0x60, 0x5, V307, V287, 0x36b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0, 0x80]

================================

Block 0x380
[0x380:0x38b]
---
Predecessors: [0x303]
Successors: [0x38c]
---
0x380 DUP1
0x381 MLOAD
0x382 PUSH1 0xff
0x384 NOT
0x385 AND
0x386 DUP4
0x387 DUP1
0x388 ADD
0x389 OR
0x38a DUP6
0x38b SSTORE
---
0x381: V311 = M[0x80]
0x382: V312 = 0xff
0x384: V313 = NOT 0xff
0x385: V314 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V311
0x388: V315 = ADD V287 V287
0x389: V316 = OR V315 V314
0x38b: S[0x5] = V316
---
Entry stack: [V10, 0x1f9, 0x60, 0x5, V307, V287, 0x36b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0, 0x80]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x1f9, 0x60, 0x5, V307, V287, 0x36b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0, 0x80]

================================

Block 0x38c
[0x38c:0x393]
---
Predecessors: [0x380, 0x3a8, 0x3ba]
Successors: [0x394]
---
0x38c JUMPDEST
0x38d POP
0x38e PUSH2 0x3d8
0x391 SWAP3
0x392 SWAP2
0x393 POP
---
0x38c: JUMPDEST 
0x38e: V317 = 0x3d8
---
Entry stack: [V10, 0x1f9, 0x60, 0x5, V307, S2, S1, S0]
Stack pops: 4
Stack additions: [0x3d8, S3, S1]
Exit stack: [V10, 0x1f9, 0x60, 0x5, 0x3d8, V307, S1]

================================

Block 0x394
[0x394:0x39c]
---
Predecessors: [0x38c, 0x39d]
Successors: [0x39d, 0x434]
---
0x394 JUMPDEST
0x395 DUP1
0x396 DUP3
0x397 GT
0x398 ISZERO
0x399 PUSH2 0x434
0x39c JUMPI
---
0x394: JUMPDEST 
0x397: V318 = GT V307 S0
0x398: V319 = ISZERO V318
0x399: V320 = 0x434
0x39c: JUMPI 0x434 V319
---
Entry stack: [V10, 0x1f9, 0x60, 0x5, 0x3d8, V307, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x1f9, 0x60, 0x5, 0x3d8, V307, S0]

================================

Block 0x39d
[0x39d:0x3a7]
---
Predecessors: [0x394]
Successors: [0x394]
---
0x39d PUSH1 0x0
0x39f DUP2
0x3a0 SSTORE
0x3a1 PUSH1 0x1
0x3a3 ADD
0x3a4 PUSH2 0x394
0x3a7 JUMP
---
0x39d: V321 = 0x0
0x3a0: S[S0] = 0x0
0x3a1: V322 = 0x1
0x3a3: V323 = ADD 0x1 S0
0x3a4: V324 = 0x394
0x3a7: JUMP 0x394
---
Entry stack: [V10, 0x1f9, 0x60, 0x5, 0x3d8, V307, S0]
Stack pops: 1
Stack additions: [V323]
Exit stack: [V10, 0x1f9, 0x60, 0x5, 0x3d8, V307, V323]

================================

Block 0x3a8
[0x3a8:0x3b6]
---
Predecessors: [0x303]
Successors: [0x38c, 0x3b7]
---
0x3a8 JUMPDEST
0x3a9 DUP3
0x3aa DUP1
0x3ab ADD
0x3ac PUSH1 0x1
0x3ae ADD
0x3af DUP6
0x3b0 SSTORE
0x3b1 DUP3
0x3b2 ISZERO
0x3b3 PUSH2 0x38c
0x3b6 JUMPI
---
0x3a8: JUMPDEST 
0x3ab: V325 = ADD V287 V287
0x3ac: V326 = 0x1
0x3ae: V327 = ADD 0x1 V325
0x3b0: S[0x5] = V327
0x3b2: V328 = ISZERO V287
0x3b3: V329 = 0x38c
0x3b6: JUMPI 0x38c V328
---
Entry stack: [V10, 0x1f9, 0x60, 0x5, V307, V287, 0x36b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0, 0x80]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x1f9, 0x60, 0x5, V307, V287, 0x36b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0, 0x80]

================================

Block 0x3b7
[0x3b7:0x3b9]
---
Predecessors: [0x3a8]
Successors: [0x3ba]
---
0x3b7 SWAP2
0x3b8 DUP3
0x3b9 ADD
---
0x3b9: V330 = ADD 0x80 V287
---
Entry stack: [V10, 0x1f9, 0x60, 0x5, V307, V287, 0x36b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0, 0x80]
Stack pops: 3
Stack additions: [S0, S1, V330]
Exit stack: [V10, 0x1f9, 0x60, 0x5, V307, 0x80, 0x36b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0, V330]

================================

Block 0x3ba
[0x3ba:0x3c2]
---
Predecessors: [0x3b7, 0x3c3]
Successors: [0x38c, 0x3c3]
---
0x3ba JUMPDEST
0x3bb DUP3
0x3bc DUP2
0x3bd GT
0x3be ISZERO
0x3bf PUSH2 0x38c
0x3c2 JUMPI
---
0x3ba: JUMPDEST 
0x3bd: V331 = GT V330 S2
0x3be: V332 = ISZERO V331
0x3bf: V333 = 0x38c
0x3c2: JUMPI 0x38c V332
---
Entry stack: [V10, 0x1f9, 0x60, 0x5, V307, S2, S1, V330]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x1f9, 0x60, 0x5, V307, S2, S1, V330]

================================

Block 0x3c3
[0x3c3:0x3d7]
---
Predecessors: [0x3ba]
Successors: [0x3ba]
---
0x3c3 DUP3
0x3c4 MLOAD
0x3c5 DUP3
0x3c6 PUSH1 0x0
0x3c8 POP
0x3c9 SSTORE
0x3ca SWAP2
0x3cb PUSH1 0x20
0x3cd ADD
0x3ce SWAP2
0x3cf SWAP1
0x3d0 PUSH1 0x1
0x3d2 ADD
0x3d3 SWAP1
0x3d4 PUSH2 0x3ba
0x3d7 JUMP
---
0x3c4: V334 = M[S2]
0x3c6: V335 = 0x0
0x3c9: S[S1] = V334
0x3cb: V336 = 0x20
0x3cd: V337 = ADD 0x20 S2
0x3d0: V338 = 0x1
0x3d2: V339 = ADD 0x1 S1
0x3d4: V340 = 0x3ba
0x3d7: JUMP 0x3ba
---
Entry stack: [V10, 0x1f9, 0x60, 0x5, V307, S2, S1, V330]
Stack pops: 3
Stack additions: [V337, V339, S0]
Exit stack: [V10, 0x1f9, 0x60, 0x5, V307, V337, V339, V330]

================================

Block 0x3d8
[0x3d8:0x433]
---
Predecessors: [0x434]
Successors: [0x1f9]
---
0x3d8 JUMPDEST
0x3d9 POP
0x3da POP
0x3db CALLVALUE
0x3dc PUSH1 0x6
0x3de DUP2
0x3df SWAP1
0x3e0 SSTORE
0x3e1 PUSH7 0x25844398d4000
0x3e9 DUP2
0x3ea DIV
0x3eb PUSH1 0x7
0x3ed SSTORE
0x3ee PUSH1 0x40
0x3f0 DUP1
0x3f1 MLOAD
0x3f2 CALLER
0x3f3 PUSH1 0x1
0x3f5 PUSH1 0xa0
0x3f7 PUSH1 0x2
0x3f9 EXP
0x3fa SUB
0x3fb AND
0x3fc DUP2
0x3fd MSTORE
0x3fe PUSH1 0x20
0x400 DUP2
0x401 ADD
0x402 SWAP3
0x403 SWAP1
0x404 SWAP3
0x405 MSTORE
0x406 DUP1
0x407 MLOAD
0x408 PUSH32 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x429 SWAP3
0x42a DUP2
0x42b SWAP1
0x42c SUB
0x42d SWAP1
0x42e SWAP2
0x42f ADD
0x430 SWAP1
0x431 LOG1
0x432 POP
0x433 JUMP
---
0x3d8: JUMPDEST 
0x3db: V341 = CALLVALUE
0x3dc: V342 = 0x6
0x3e0: S[0x6] = V341
0x3e1: V343 = 0x25844398d4000
0x3ea: V344 = DIV V341 0x25844398d4000
0x3eb: V345 = 0x7
0x3ed: S[0x7] = V344
0x3ee: V346 = 0x40
0x3f1: V347 = M[0x40]
0x3f2: V348 = CALLER
0x3f3: V349 = 0x1
0x3f5: V350 = 0xa0
0x3f7: V351 = 0x2
0x3f9: V352 = EXP 0x2 0xa0
0x3fa: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fb: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x3fd: M[V347] = V354
0x3fe: V355 = 0x20
0x401: V356 = ADD V347 0x20
0x405: M[V356] = V341
0x407: V357 = M[0x40]
0x408: V358 = 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x42c: V359 = SUB V347 V357
0x42f: V360 = ADD 0x40 V359
0x431: LOG V357 V360 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x433: JUMP 0x1f9
---
Entry stack: [V10, 0x1f9, 0x60, 0x5, V307]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x434
[0x434:0x437]
---
Predecessors: [0x394]
Successors: [0x3d8]
---
0x434 JUMPDEST
0x435 POP
0x436 SWAP1
0x437 JUMP
---
0x434: JUMPDEST 
0x437: JUMP 0x3d8
---
Entry stack: [V10, 0x1f9, 0x60, 0x5, 0x3d8, V307, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x1f9, 0x60, 0x5, V307]

================================

Block 0x438
[0x438:0x445]
---
Predecessors: [0xc2]
Successors: [0x446, 0x44a]
---
0x438 JUMPDEST
0x439 PUSH1 0x3
0x43b SLOAD
0x43c PUSH1 0x2
0x43e SLOAD
0x43f ADD
0x440 TIMESTAMP
0x441 GT
0x442 PUSH2 0x44a
0x445 JUMPI
---
0x438: JUMPDEST 
0x439: V361 = 0x3
0x43b: V362 = S[0x3]
0x43c: V363 = 0x2
0x43e: V364 = S[0x2]
0x43f: V365 = ADD V364 V362
0x440: V366 = TIMESTAMP
0x441: V367 = GT V366 V365
0x442: V368 = 0x44a
0x445: JUMPI 0x44a V367
---
Entry stack: [V10, 0x1f9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f9]

================================

Block 0x446
[0x446:0x449]
---
Predecessors: [0x438]
Successors: []
---
0x446 PUSH2 0x2
0x449 JUMP
---
0x446: V369 = 0x2
0x449: THROW 
---
Entry stack: [V10, 0x1f9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f9]

================================

Block 0x44a
[0x44a:0x455]
---
Predecessors: [0x438]
Successors: [0x456, 0x45a]
---
0x44a JUMPDEST
0x44b PUSH1 0x8
0x44d SLOAD
0x44e PUSH1 0xff
0x450 AND
0x451 ISZERO
0x452 PUSH2 0x45a
0x455 JUMPI
---
0x44a: JUMPDEST 
0x44b: V370 = 0x8
0x44d: V371 = S[0x8]
0x44e: V372 = 0xff
0x450: V373 = AND 0xff V371
0x451: V374 = ISZERO V373
0x452: V375 = 0x45a
0x455: JUMPI 0x45a V374
---
Entry stack: [V10, 0x1f9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f9]

================================

Block 0x456
[0x456:0x459]
---
Predecessors: [0x44a]
Successors: []
---
0x456 PUSH2 0x2
0x459 JUMP
---
0x456: V376 = 0x2
0x459: THROW 
---
Entry stack: [V10, 0x1f9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f9]

================================

Block 0x45a
[0x45a:0x4cb]
---
Predecessors: [0x44a]
Successors: [0x1f9]
---
0x45a JUMPDEST
0x45b PUSH1 0x6
0x45d SLOAD
0x45e PUSH1 0x4
0x460 SLOAD
0x461 PUSH1 0x1
0x463 PUSH1 0xa0
0x465 PUSH1 0x2
0x467 EXP
0x468 SUB
0x469 AND
0x46a PUSH1 0x60
0x46c SWAP1
0x46d DUP2
0x46e MSTORE
0x46f PUSH1 0x80
0x471 SWAP2
0x472 SWAP1
0x473 SWAP2
0x474 MSTORE
0x475 PUSH32 0xdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda
0x496 SWAP1
0x497 PUSH1 0x40
0x499 SWAP1
0x49a LOG1
0x49b PUSH1 0x0
0x49d DUP1
0x49e SLOAD
0x49f PUSH1 0x1
0x4a1 PUSH1 0xa0
0x4a3 PUSH1 0x2
0x4a5 EXP
0x4a6 SUB
0x4a7 SWAP1
0x4a8 DUP2
0x4a9 AND
0x4aa SWAP2
0x4ab SWAP1
0x4ac ADDRESS
0x4ad AND
0x4ae BALANCE
0x4af PUSH1 0x60
0x4b1 DUP3
0x4b2 DUP2
0x4b3 DUP2
0x4b4 DUP2
0x4b5 DUP6
0x4b6 DUP9
0x4b7 DUP4
0x4b8 CALL
0x4b9 POP
0x4ba POP
0x4bb PUSH1 0x8
0x4bd DUP1
0x4be SLOAD
0x4bf PUSH1 0xff
0x4c1 NOT
0x4c2 AND
0x4c3 PUSH1 0x1
0x4c5 OR
0x4c6 SWAP1
0x4c7 SSTORE
0x4c8 POP
0x4c9 POP
0x4ca POP
0x4cb JUMP
---
0x45a: JUMPDEST 
0x45b: V377 = 0x6
0x45d: V378 = S[0x6]
0x45e: V379 = 0x4
0x460: V380 = S[0x4]
0x461: V381 = 0x1
0x463: V382 = 0xa0
0x465: V383 = 0x2
0x467: V384 = EXP 0x2 0xa0
0x468: V385 = SUB 0x10000000000000000000000000000000000000000 0x1
0x469: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x46a: V387 = 0x60
0x46e: M[0x60] = V386
0x46f: V388 = 0x80
0x474: M[0x80] = V378
0x475: V389 = 0xdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda
0x497: V390 = 0x40
0x49a: LOG 0x60 0x40 0xdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda
0x49b: V391 = 0x0
0x49e: V392 = S[0x0]
0x49f: V393 = 0x1
0x4a1: V394 = 0xa0
0x4a3: V395 = 0x2
0x4a5: V396 = EXP 0x2 0xa0
0x4a6: V397 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a9: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x4ac: V399 = ADDRESS
0x4ad: V400 = AND V399 0xffffffffffffffffffffffffffffffffffffffff
0x4ae: V401 = BALANCE V400
0x4af: V402 = 0x60
0x4b8: V403 = CALL 0x0 V398 V401 0x60 0x0 0x60 0x0
0x4bb: V404 = 0x8
0x4be: V405 = S[0x8]
0x4bf: V406 = 0xff
0x4c1: V407 = NOT 0xff
0x4c2: V408 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V405
0x4c3: V409 = 0x1
0x4c5: V410 = OR 0x1 V408
0x4c7: S[0x8] = V410
0x4cb: JUMP 0x1f9
---
Entry stack: [V10, 0x1f9]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x64ca444
Entry block: 0x95
Exit block: 0x1fd
Body: 0x95, 0x1fd

Function 1:
Public function signature: 0x1c8499e5
Entry block: 0x9e
Exit block: 0x1f9
Body: 0x9e, 0x1f9

Function 2:
Public function signature: 0x2a24f46c
Entry block: 0xc2
Exit block: 0x1f9
Body: 0xc2, 0xdd, 0x1f9, 0x438, 0x446, 0x44a, 0x456, 0x45a

Function 3:
Public function signature: 0x38af3eed
Entry block: 0xe1
Exit block: 0x207
Body: 0xe1, 0x207

Function 4:
Public function signature: 0x41c0e1b5
Entry block: 0xf3
Exit block: 0x1f9
Body: 0xf3, 0x10f, 0x1f9, 0x1fb

Function 5:
Public function signature: 0x4f245ef7
Entry block: 0x11c
Exit block: 0x1fd
Body: 0x11c, 0x1fd

Function 6:
Public function signature: 0x73344963
Entry block: 0x125
Exit block: 0x27a
Body: 0x125, 0x167, 0x16f, 0x21a, 0x261, 0x27a, 0x288, 0x296, 0x2aa, 0x2b3

Function 7:
Public function signature: 0x7aef951c
Entry block: 0x182
Exit block: 0x1f9
Body: 0x182, 0x1d1, 0x1f9, 0x2bb, 0x2c5, 0x2c9, 0x2dd, 0x303, 0x380, 0x38c, 0x394, 0x39d, 0x3a8, 0x3b7, 0x3ba, 0x3c3, 0x3d8, 0x434

Function 8:
Public function signature: 0x91f90157
Entry block: 0x1d5
Exit block: 0x207
Body: 0x1d5, 0x207

Function 9:
Public function signature: 0xd074a38d
Entry block: 0x1e7
Exit block: 0x1fd
Body: 0x1e7, 0x1fd

Function 10:
Public function signature: 0xd57bde79
Entry block: 0x1f0
Exit block: 0x1fd
Body: 0x1f0, 0x1fd

Function 11:
Public fallback function
Entry block: 0x8d
Exit block: 0x8d
Body: 0x8d

