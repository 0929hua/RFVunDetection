Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x139]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x19d8ac61
0x3c EQ
0x3d PUSH2 0x139
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x19d8ac61
0x3c: V13 = EQ 0x19d8ac61 V11
0x3d: V14 = 0x139
0x40: JUMPI 0x139 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x164]
---
0x41 DUP1
0x42 PUSH4 0x1fca5278
0x47 EQ
0x48 PUSH2 0x164
0x4b JUMPI
---
0x42: V15 = 0x1fca5278
0x47: V16 = EQ 0x1fca5278 V11
0x48: V17 = 0x164
0x4b: JUMPI 0x164 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x18f]
---
0x4c DUP1
0x4d PUSH4 0xaabe2fe3
0x52 EQ
0x53 PUSH2 0x18f
0x56 JUMPI
---
0x4d: V18 = 0xaabe2fe3
0x52: V19 = EQ 0xaabe2fe3 V11
0x53: V20 = 0x18f
0x56: JUMPI 0x18f V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1e6]
---
0x57 DUP1
0x58 PUSH4 0xb401faf1
0x5d EQ
0x5e PUSH2 0x1e6
0x61 JUMPI
---
0x58: V21 = 0xb401faf1
0x5d: V22 = EQ 0xb401faf1 V11
0x5e: V23 = 0x1e6
0x61: JUMPI 0x1e6 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x99]
---
Predecessors: [0x0, 0x57]
Successors: [0x9a, 0x9e]
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 ORIGIN
0x66 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b AND
0x7c CALLER
0x7d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92 AND
0x93 EQ
0x94 ISZERO
0x95 ISZERO
0x96 PUSH2 0x9e
0x99 JUMPI
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x65: V25 = ORIGIN
0x66: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x7c: V28 = CALLER
0x7d: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x92: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x93: V31 = EQ V30 V27
0x94: V32 = ISZERO V31
0x95: V33 = ISZERO V32
0x96: V34 = 0x9e
0x99: JUMPI 0x9e V33
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0x9a
[0x9a:0x9d]
---
Predecessors: [0x62]
Successors: []
---
0x9a PUSH1 0x0
0x9c DUP1
0x9d REVERT
---
0x9a: V35 = 0x0
0x9d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x9e
[0x9e:0xaf]
---
Predecessors: [0x62]
Successors: [0xb0, 0xb4]
---
0x9e JUMPDEST
0x9f PUSH7 0x38d7ea4c68000
0xa7 CALLVALUE
0xa8 LT
0xa9 ISZERO
0xaa ISZERO
0xab ISZERO
0xac PUSH2 0xb4
0xaf JUMPI
---
0x9e: JUMPDEST 
0x9f: V36 = 0x38d7ea4c68000
0xa7: V37 = CALLVALUE
0xa8: V38 = LT V37 0x38d7ea4c68000
0xa9: V39 = ISZERO V38
0xaa: V40 = ISZERO V39
0xab: V41 = ISZERO V40
0xac: V42 = 0xb4
0xaf: JUMPI 0xb4 V41
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xb0
[0xb0:0xb3]
---
Predecessors: [0x9e]
Successors: []
---
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 REVERT
---
0xb0: V43 = 0x0
0xb3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xb4
[0xb4:0xe6]
---
Predecessors: [0x9e]
Successors: [0xe7, 0x136]
---
0xb4 JUMPDEST
0xb5 PUSH1 0x1
0xb7 NUMBER
0xb8 SUB
0xb9 BLOCKHASH
0xba PUSH1 0x40
0xbc MLOAD
0xbd DUP1
0xbe DUP3
0xbf PUSH1 0x0
0xc1 NOT
0xc2 AND
0xc3 PUSH1 0x0
0xc5 NOT
0xc6 AND
0xc7 DUP2
0xc8 MSTORE
0xc9 PUSH1 0x20
0xcb ADD
0xcc SWAP2
0xcd POP
0xce POP
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 DUP1
0xd3 SWAP2
0xd4 SUB
0xd5 SWAP1
0xd6 SHA3
0xd7 PUSH1 0x1
0xd9 SWAP1
0xda DIV
0xdb SWAP1
0xdc POP
0xdd PUSH1 0x0
0xdf SLOAD
0xe0 DUP2
0xe1 GT
0xe2 ISZERO
0xe3 PUSH2 0x136
0xe6 JUMPI
---
0xb4: JUMPDEST 
0xb5: V44 = 0x1
0xb7: V45 = NUMBER
0xb8: V46 = SUB V45 0x1
0xb9: V47 = BLOCKHASH V46
0xba: V48 = 0x40
0xbc: V49 = M[0x40]
0xbf: V50 = 0x0
0xc1: V51 = NOT 0x0
0xc2: V52 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V47
0xc3: V53 = 0x0
0xc5: V54 = NOT 0x0
0xc6: V55 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V52
0xc8: M[V49] = V55
0xc9: V56 = 0x20
0xcb: V57 = ADD 0x20 V49
0xcf: V58 = 0x40
0xd1: V59 = M[0x40]
0xd4: V60 = SUB V57 V59
0xd6: V61 = SHA3 V59 V60
0xd7: V62 = 0x1
0xda: V63 = DIV V61 0x1
0xdd: V64 = 0x0
0xdf: V65 = S[0x0]
0xe1: V66 = GT V63 V65
0xe2: V67 = ISZERO V66
0xe3: V68 = 0x136
0xe6: JUMPI 0x136 V67
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V63]
Exit stack: [V11, V63]

================================

Block 0xe7
[0xe7:0x135]
---
Predecessors: [0xb4]
Successors: [0x136]
---
0xe7 CALLER
0xe8 PUSH1 0x1
0xea PUSH1 0x0
0xec PUSH2 0x100
0xef EXP
0xf0 DUP2
0xf1 SLOAD
0xf2 DUP2
0xf3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x108 MUL
0x109 NOT
0x10a AND
0x10b SWAP1
0x10c DUP4
0x10d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x122 AND
0x123 MUL
0x124 OR
0x125 SWAP1
0x126 SSTORE
0x127 POP
0x128 TIMESTAMP
0x129 PUSH1 0x2
0x12b DUP2
0x12c SWAP1
0x12d SSTORE
0x12e POP
0x12f DUP1
0x130 PUSH1 0x0
0x132 DUP2
0x133 SWAP1
0x134 SSTORE
0x135 POP
---
0xe7: V69 = CALLER
0xe8: V70 = 0x1
0xea: V71 = 0x0
0xec: V72 = 0x100
0xef: V73 = EXP 0x100 0x0
0xf1: V74 = S[0x1]
0xf3: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x108: V76 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x109: V77 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x10a: V78 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V74
0x10d: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x122: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x123: V81 = MUL V80 0x1
0x124: V82 = OR V81 V78
0x126: S[0x1] = V82
0x128: V83 = TIMESTAMP
0x129: V84 = 0x2
0x12d: S[0x2] = V83
0x130: V85 = 0x0
0x134: S[0x0] = V63
---
Entry stack: [V11, V63]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, V63]

================================

Block 0x136
[0x136:0x138]
---
Predecessors: [0xb4, 0xe7]
Successors: []
---
0x136 JUMPDEST
0x137 POP
0x138 STOP
---
0x136: JUMPDEST 
0x138: STOP 
---
Entry stack: [V11, V63]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x139
[0x139:0x140]
---
Predecessors: [0xd]
Successors: [0x141, 0x145]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b DUP1
0x13c ISZERO
0x13d PUSH2 0x145
0x140 JUMPI
---
0x139: JUMPDEST 
0x13a: V86 = CALLVALUE
0x13c: V87 = ISZERO V86
0x13d: V88 = 0x145
0x140: JUMPI 0x145 V87
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V11, V86]

================================

Block 0x141
[0x141:0x144]
---
Predecessors: [0x139]
Successors: []
---
0x141 PUSH1 0x0
0x143 DUP1
0x144 REVERT
---
0x141: V89 = 0x0
0x144: REVERT 0x0 0x0
---
Entry stack: [V11, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V86]

================================

Block 0x145
[0x145:0x14d]
---
Predecessors: [0x139]
Successors: [0x1fd]
---
0x145 JUMPDEST
0x146 POP
0x147 PUSH2 0x14e
0x14a PUSH2 0x1fd
0x14d JUMP
---
0x145: JUMPDEST 
0x147: V90 = 0x14e
0x14a: V91 = 0x1fd
0x14d: JUMP 0x1fd
---
Entry stack: [V11, V86]
Stack pops: 1
Stack additions: [0x14e]
Exit stack: [V11, 0x14e]

================================

Block 0x14e
[0x14e:0x163]
---
Predecessors: [0x1fd]
Successors: []
---
0x14e JUMPDEST
0x14f PUSH1 0x40
0x151 MLOAD
0x152 DUP1
0x153 DUP3
0x154 DUP2
0x155 MSTORE
0x156 PUSH1 0x20
0x158 ADD
0x159 SWAP2
0x15a POP
0x15b POP
0x15c PUSH1 0x40
0x15e MLOAD
0x15f DUP1
0x160 SWAP2
0x161 SUB
0x162 SWAP1
0x163 RETURN
---
0x14e: JUMPDEST 
0x14f: V92 = 0x40
0x151: V93 = M[0x40]
0x155: M[V93] = V136
0x156: V94 = 0x20
0x158: V95 = ADD 0x20 V93
0x15c: V96 = 0x40
0x15e: V97 = M[0x40]
0x161: V98 = SUB V95 V97
0x163: RETURN V97 V98
---
Entry stack: [V11, 0x14e, V136]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14e]

================================

Block 0x164
[0x164:0x16b]
---
Predecessors: [0x41]
Successors: [0x16c, 0x170]
---
0x164 JUMPDEST
0x165 CALLVALUE
0x166 DUP1
0x167 ISZERO
0x168 PUSH2 0x170
0x16b JUMPI
---
0x164: JUMPDEST 
0x165: V99 = CALLVALUE
0x167: V100 = ISZERO V99
0x168: V101 = 0x170
0x16b: JUMPI 0x170 V100
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V99]
Exit stack: [V11, V99]

================================

Block 0x16c
[0x16c:0x16f]
---
Predecessors: [0x164]
Successors: []
---
0x16c PUSH1 0x0
0x16e DUP1
0x16f REVERT
---
0x16c: V102 = 0x0
0x16f: REVERT 0x0 0x0
---
Entry stack: [V11, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V99]

================================

Block 0x170
[0x170:0x178]
---
Predecessors: [0x164]
Successors: [0x203]
---
0x170 JUMPDEST
0x171 POP
0x172 PUSH2 0x179
0x175 PUSH2 0x203
0x178 JUMP
---
0x170: JUMPDEST 
0x172: V103 = 0x179
0x175: V104 = 0x203
0x178: JUMP 0x203
---
Entry stack: [V11, V99]
Stack pops: 1
Stack additions: [0x179]
Exit stack: [V11, 0x179]

================================

Block 0x179
[0x179:0x18e]
---
Predecessors: [0x203]
Successors: []
---
0x179 JUMPDEST
0x17a PUSH1 0x40
0x17c MLOAD
0x17d DUP1
0x17e DUP3
0x17f DUP2
0x180 MSTORE
0x181 PUSH1 0x20
0x183 ADD
0x184 SWAP2
0x185 POP
0x186 POP
0x187 PUSH1 0x40
0x189 MLOAD
0x18a DUP1
0x18b SWAP2
0x18c SUB
0x18d SWAP1
0x18e RETURN
---
0x179: JUMPDEST 
0x17a: V105 = 0x40
0x17c: V106 = M[0x40]
0x180: M[V106] = V138
0x181: V107 = 0x20
0x183: V108 = ADD 0x20 V106
0x187: V109 = 0x40
0x189: V110 = M[0x40]
0x18c: V111 = SUB V108 V110
0x18e: RETURN V110 V111
---
Entry stack: [V11, 0x179, V138]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x179]

================================

Block 0x18f
[0x18f:0x196]
---
Predecessors: [0x4c]
Successors: [0x197, 0x19b]
---
0x18f JUMPDEST
0x190 CALLVALUE
0x191 DUP1
0x192 ISZERO
0x193 PUSH2 0x19b
0x196 JUMPI
---
0x18f: JUMPDEST 
0x190: V112 = CALLVALUE
0x192: V113 = ISZERO V112
0x193: V114 = 0x19b
0x196: JUMPI 0x19b V113
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V112]
Exit stack: [V11, V112]

================================

Block 0x197
[0x197:0x19a]
---
Predecessors: [0x18f]
Successors: []
---
0x197 PUSH1 0x0
0x199 DUP1
0x19a REVERT
---
0x197: V115 = 0x0
0x19a: REVERT 0x0 0x0
---
Entry stack: [V11, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V112]

================================

Block 0x19b
[0x19b:0x1a3]
---
Predecessors: [0x18f]
Successors: [0x209]
---
0x19b JUMPDEST
0x19c POP
0x19d PUSH2 0x1a4
0x1a0 PUSH2 0x209
0x1a3 JUMP
---
0x19b: JUMPDEST 
0x19d: V116 = 0x1a4
0x1a0: V117 = 0x209
0x1a3: JUMP 0x209
---
Entry stack: [V11, V112]
Stack pops: 1
Stack additions: [0x1a4]
Exit stack: [V11, 0x1a4]

================================

Block 0x1a4
[0x1a4:0x1e5]
---
Predecessors: [0x209]
Successors: []
---
0x1a4 JUMPDEST
0x1a5 PUSH1 0x40
0x1a7 MLOAD
0x1a8 DUP1
0x1a9 DUP3
0x1aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bf AND
0x1c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d5 AND
0x1d6 DUP2
0x1d7 MSTORE
0x1d8 PUSH1 0x20
0x1da ADD
0x1db SWAP2
0x1dc POP
0x1dd POP
0x1de PUSH1 0x40
0x1e0 MLOAD
0x1e1 DUP1
0x1e2 SWAP2
0x1e3 SUB
0x1e4 SWAP1
0x1e5 RETURN
---
0x1a4: JUMPDEST 
0x1a5: V118 = 0x40
0x1a7: V119 = M[0x40]
0x1aa: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bf: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x1c0: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d5: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x1d7: M[V119] = V123
0x1d8: V124 = 0x20
0x1da: V125 = ADD 0x20 V119
0x1de: V126 = 0x40
0x1e0: V127 = M[0x40]
0x1e3: V128 = SUB V125 V127
0x1e5: RETURN V127 V128
---
Entry stack: [V11, 0x1a4, V146]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1a4]

================================

Block 0x1e6
[0x1e6:0x1ed]
---
Predecessors: [0x57]
Successors: [0x1ee, 0x1f2]
---
0x1e6 JUMPDEST
0x1e7 CALLVALUE
0x1e8 DUP1
0x1e9 ISZERO
0x1ea PUSH2 0x1f2
0x1ed JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V129 = CALLVALUE
0x1e9: V130 = ISZERO V129
0x1ea: V131 = 0x1f2
0x1ed: JUMPI 0x1f2 V130
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V129]
Exit stack: [V11, V129]

================================

Block 0x1ee
[0x1ee:0x1f1]
---
Predecessors: [0x1e6]
Successors: []
---
0x1ee PUSH1 0x0
0x1f0 DUP1
0x1f1 REVERT
---
0x1ee: V132 = 0x0
0x1f1: REVERT 0x0 0x0
---
Entry stack: [V11, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V129]

================================

Block 0x1f2
[0x1f2:0x1fa]
---
Predecessors: [0x1e6]
Successors: [0x22f]
---
0x1f2 JUMPDEST
0x1f3 POP
0x1f4 PUSH2 0x1fb
0x1f7 PUSH2 0x22f
0x1fa JUMP
---
0x1f2: JUMPDEST 
0x1f4: V133 = 0x1fb
0x1f7: V134 = 0x22f
0x1fa: JUMP 0x22f
---
Entry stack: [V11, V129]
Stack pops: 1
Stack additions: [0x1fb]
Exit stack: [V11, 0x1fb]

================================

Block 0x1fb
[0x1fb:0x1fc]
---
Predecessors: [0x2fd]
Successors: []
---
0x1fb JUMPDEST
0x1fc STOP
---
0x1fb: JUMPDEST 
0x1fc: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1fd
[0x1fd:0x202]
---
Predecessors: [0x145]
Successors: [0x14e]
---
0x1fd JUMPDEST
0x1fe PUSH1 0x2
0x200 SLOAD
0x201 DUP2
0x202 JUMP
---
0x1fd: JUMPDEST 
0x1fe: V135 = 0x2
0x200: V136 = S[0x2]
0x202: JUMP 0x14e
---
Entry stack: [V11, 0x14e]
Stack pops: 1
Stack additions: [S0, V136]
Exit stack: [V11, 0x14e, V136]

================================

Block 0x203
[0x203:0x208]
---
Predecessors: [0x170]
Successors: [0x179]
---
0x203 JUMPDEST
0x204 PUSH1 0x0
0x206 SLOAD
0x207 DUP2
0x208 JUMP
---
0x203: JUMPDEST 
0x204: V137 = 0x0
0x206: V138 = S[0x0]
0x208: JUMP 0x179
---
Entry stack: [V11, 0x179]
Stack pops: 1
Stack additions: [S0, V138]
Exit stack: [V11, 0x179, V138]

================================

Block 0x209
[0x209:0x22e]
---
Predecessors: [0x19b]
Successors: [0x1a4]
---
0x209 JUMPDEST
0x20a PUSH1 0x1
0x20c PUSH1 0x0
0x20e SWAP1
0x20f SLOAD
0x210 SWAP1
0x211 PUSH2 0x100
0x214 EXP
0x215 SWAP1
0x216 DIV
0x217 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22c AND
0x22d DUP2
0x22e JUMP
---
0x209: JUMPDEST 
0x20a: V139 = 0x1
0x20c: V140 = 0x0
0x20f: V141 = S[0x1]
0x211: V142 = 0x100
0x214: V143 = EXP 0x100 0x0
0x216: V144 = DIV V141 0x1
0x217: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x22e: JUMP 0x1a4
---
Entry stack: [V11, 0x1a4]
Stack pops: 1
Stack additions: [S0, V146]
Exit stack: [V11, 0x1a4, V146]

================================

Block 0x22f
[0x22f:0x23f]
---
Predecessors: [0x1f2]
Successors: [0x240, 0x244]
---
0x22f JUMPDEST
0x230 PUSH3 0x15180
0x234 PUSH1 0x2
0x236 SLOAD
0x237 ADD
0x238 TIMESTAMP
0x239 GT
0x23a ISZERO
0x23b ISZERO
0x23c PUSH2 0x244
0x23f JUMPI
---
0x22f: JUMPDEST 
0x230: V147 = 0x15180
0x234: V148 = 0x2
0x236: V149 = S[0x2]
0x237: V150 = ADD V149 0x15180
0x238: V151 = TIMESTAMP
0x239: V152 = GT V151 V150
0x23a: V153 = ISZERO V152
0x23b: V154 = ISZERO V153
0x23c: V155 = 0x244
0x23f: JUMPI 0x244 V154
---
Entry stack: [V11, 0x1fb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fb]

================================

Block 0x240
[0x240:0x243]
---
Predecessors: [0x22f]
Successors: []
---
0x240 PUSH1 0x0
0x242 DUP1
0x243 REVERT
---
0x240: V156 = 0x0
0x243: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1fb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fb]

================================

Block 0x244
[0x244:0x29b]
---
Predecessors: [0x22f]
Successors: [0x29c, 0x2a0]
---
0x244 JUMPDEST
0x245 PUSH1 0x1
0x247 PUSH1 0x0
0x249 SWAP1
0x24a SLOAD
0x24b SWAP1
0x24c PUSH2 0x100
0x24f EXP
0x250 SWAP1
0x251 DIV
0x252 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x267 AND
0x268 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27d AND
0x27e CALLER
0x27f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x294 AND
0x295 EQ
0x296 ISZERO
0x297 ISZERO
0x298 PUSH2 0x2a0
0x29b JUMPI
---
0x244: JUMPDEST 
0x245: V157 = 0x1
0x247: V158 = 0x0
0x24a: V159 = S[0x1]
0x24c: V160 = 0x100
0x24f: V161 = EXP 0x100 0x0
0x251: V162 = DIV V159 0x1
0x252: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x267: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x268: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x27d: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x27e: V167 = CALLER
0x27f: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x294: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x295: V170 = EQ V169 V166
0x296: V171 = ISZERO V170
0x297: V172 = ISZERO V171
0x298: V173 = 0x2a0
0x29b: JUMPI 0x2a0 V172
---
Entry stack: [V11, 0x1fb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fb]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x244]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V174 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1fb]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fb]

================================

Block 0x2a0
[0x2a0:0x2f3]
---
Predecessors: [0x244]
Successors: [0x2f4, 0x2fd]
---
0x2a0 JUMPDEST
0x2a1 CALLER
0x2a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b7 AND
0x2b8 PUSH2 0x8fc
0x2bb ADDRESS
0x2bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d1 AND
0x2d2 BALANCE
0x2d3 SWAP1
0x2d4 DUP2
0x2d5 ISZERO
0x2d6 MUL
0x2d7 SWAP1
0x2d8 PUSH1 0x40
0x2da MLOAD
0x2db PUSH1 0x0
0x2dd PUSH1 0x40
0x2df MLOAD
0x2e0 DUP1
0x2e1 DUP4
0x2e2 SUB
0x2e3 DUP2
0x2e4 DUP6
0x2e5 DUP9
0x2e6 DUP9
0x2e7 CALL
0x2e8 SWAP4
0x2e9 POP
0x2ea POP
0x2eb POP
0x2ec POP
0x2ed ISZERO
0x2ee DUP1
0x2ef ISZERO
0x2f0 PUSH2 0x2fd
0x2f3 JUMPI
---
0x2a0: JUMPDEST 
0x2a1: V175 = CALLER
0x2a2: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x2b8: V178 = 0x8fc
0x2bb: V179 = ADDRESS
0x2bc: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d1: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x2d2: V182 = BALANCE V181
0x2d5: V183 = ISZERO V182
0x2d6: V184 = MUL V183 0x8fc
0x2d8: V185 = 0x40
0x2da: V186 = M[0x40]
0x2db: V187 = 0x0
0x2dd: V188 = 0x40
0x2df: V189 = M[0x40]
0x2e2: V190 = SUB V186 V189
0x2e7: V191 = CALL V184 V177 V182 V189 V190 V189 0x0
0x2ed: V192 = ISZERO V191
0x2ef: V193 = ISZERO V192
0x2f0: V194 = 0x2fd
0x2f3: JUMPI 0x2fd V193
---
Entry stack: [V11, 0x1fb]
Stack pops: 0
Stack additions: [V192]
Exit stack: [V11, 0x1fb, V192]

================================

Block 0x2f4
[0x2f4:0x2fc]
---
Predecessors: [0x2a0]
Successors: []
---
0x2f4 RETURNDATASIZE
0x2f5 PUSH1 0x0
0x2f7 DUP1
0x2f8 RETURNDATACOPY
0x2f9 RETURNDATASIZE
0x2fa PUSH1 0x0
0x2fc REVERT
---
0x2f4: V195 = RETURNDATASIZE
0x2f5: V196 = 0x0
0x2f8: RETURNDATACOPY 0x0 0x0 V195
0x2f9: V197 = RETURNDATASIZE
0x2fa: V198 = 0x0
0x2fc: REVERT 0x0 V197
---
Entry stack: [V11, 0x1fb, V192]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fb, V192]

================================

Block 0x2fd
[0x2fd:0x2ff]
---
Predecessors: [0x2a0]
Successors: [0x1fb]
---
0x2fd JUMPDEST
0x2fe POP
0x2ff JUMP
---
0x2fd: JUMPDEST 
0x2ff: JUMP 0x1fb
---
Entry stack: [V11, 0x1fb, V192]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x300
[0x300:0x320]
---
Predecessors: []
Successors: [0x321]
---
0x300 STOP
0x301 LOG1
0x302 PUSH6 0x627a7a723058
0x309 SHA3
0x30a MISSING 0xa8
0x30b SDIV
0x30c MISSING 0x27
0x30d SGT
0x30e MISSING 0xe
0x30f MISSING 0x22
0x310 MISSING 0xdf
0x311 LOG1
0x312 MISSING 0xe4
0x313 ADD
0x314 DUP4
0x315 MISSING 0x21
0x316 CALLVALUE
0x317 MISSING 0xea
0x318 CALLDATASIZE
0x319 SWAP15
0x31a NUMBER
0x31b MISSING 0x29
0x31c EXTCODECOPY
0x31d SWAP13
0x31e MISSING 0x23
0x31f CALL
0x320 SDIV
---
0x300: STOP 
0x301: LOG S0 S1 S2
0x302: V199 = 0x627a7a723058
0x309: V200 = SHA3 0x627a7a723058 S3
0x30a: MISSING 0xa8
0x30b: V201 = SDIV S0 S1
0x30c: MISSING 0x27
0x30d: V202 = SGT S0 S1
0x30e: MISSING 0xe
0x30f: MISSING 0x22
0x310: MISSING 0xdf
0x311: LOG S0 S1 S2
0x312: MISSING 0xe4
0x313: V203 = ADD S0 S1
0x315: MISSING 0x21
0x316: V204 = CALLVALUE
0x317: MISSING 0xea
0x318: V205 = CALLDATASIZE
0x31a: V206 = NUMBER
0x31b: MISSING 0x29
0x31c: EXTCODECOPY S0 S1 S2 S3
0x31e: MISSING 0x23
0x31f: V207 = CALL S0 S1 S2 S3 S4 S5 S6
0x320: V208 = SDIV V207 S7
---
Entry stack: []
Stack pops: 0
Stack additions: [V200, V201, V202, S4, V203, S2, S3, S4, V204, V206, S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V205, S17, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S4, V208]
Exit stack: []

================================

Block 0x321
[0x321:0x32b]
---
Predecessors: [0x300]
Successors: []
---
0x321 JUMPDEST
0x322 MISSING 0x2d
0x323 MISSING 0x48
0x324 MISSING 0xdc
0x325 SWAP5
0x326 MISSING 0xcb
0x327 CALLDATACOPY
0x328 MISSING 0xa6
0x329 DELEGATECALL
0x32a STOP
0x32b MISSING 0x29
---
0x321: JUMPDEST 
0x322: MISSING 0x2d
0x323: MISSING 0x48
0x324: MISSING 0xdc
0x326: MISSING 0xcb
0x327: CALLDATACOPY S0 S1 S2
0x328: MISSING 0xa6
0x329: V209 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x32a: STOP 
0x32b: MISSING 0x29
---
Entry stack: [V208]
Stack pops: 0
Stack additions: [S5, S1, S2, S3, S4, S0, V209]
Exit stack: []

================================

Function 0:
Public function signature: 0x19d8ac61
Entry block: 0x139
Exit block: 0x14e
Body: 0x139, 0x141, 0x145, 0x14e, 0x1fd

Function 1:
Public function signature: 0x1fca5278
Entry block: 0x164
Exit block: 0x179
Body: 0x164, 0x16c, 0x170, 0x179, 0x203

Function 2:
Public function signature: 0xaabe2fe3
Entry block: 0x18f
Exit block: 0x1a4
Body: 0x18f, 0x197, 0x19b, 0x1a4, 0x209

Function 3:
Public function signature: 0xb401faf1
Entry block: 0x1e6
Exit block: 0x1fb
Body: 0x1e6, 0x1ee, 0x1f2, 0x1fb, 0x22f, 0x240, 0x244, 0x29c, 0x2a0, 0x2f4, 0x2fd

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x136
Body: 0x62, 0x9a, 0x9e, 0xb0, 0xb4, 0xe7, 0x136

