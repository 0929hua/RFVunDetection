args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/1/100752.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x159]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x159
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x159
0xa: JUMPI 0x159 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x671]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x671
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x671
0x24: JUMPI 0x671 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x686]
---
0x25 DUP1
0x26 PUSH4 0x10309781
0x2b EQ
0x2c PUSH2 0x686
0x2f JUMPI
---
0x26: V16 = 0x10309781
0x2b: V17 = EQ 0x10309781 V12
0x2c: V18 = 0x686
0x2f: JUMPI 0x686 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x6ab]
---
0x30 DUP1
0x31 PUSH4 0x1fd8ffb0
0x36 EQ
0x37 PUSH2 0x6ab
0x3a JUMPI
---
0x31: V19 = 0x1fd8ffb0
0x36: V20 = EQ 0x1fd8ffb0 V12
0x37: V21 = 0x6ab
0x3a: JUMPI 0x6ab V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x6c3]
---
0x3b DUP1
0x3c PUSH4 0x29dcb0cf
0x41 EQ
0x42 PUSH2 0x6c3
0x45 JUMPI
---
0x3c: V22 = 0x29dcb0cf
0x41: V23 = EQ 0x29dcb0cf V12
0x42: V24 = 0x6c3
0x45: JUMPI 0x6c3 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x6e8]
---
0x46 DUP1
0x47 PUSH4 0x2ec914b5
0x4c EQ
0x4d PUSH2 0x6e8
0x50 JUMPI
---
0x47: V25 = 0x2ec914b5
0x4c: V26 = EQ 0x2ec914b5 V12
0x4d: V27 = 0x6e8
0x50: JUMPI 0x6e8 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x70d]
---
0x51 DUP1
0x52 PUSH4 0x31252103
0x57 EQ
0x58 PUSH2 0x70d
0x5b JUMPI
---
0x52: V28 = 0x31252103
0x57: V29 = EQ 0x31252103 V12
0x58: V30 = 0x70d
0x5b: JUMPI 0x70d V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x732]
---
0x5c DUP1
0x5d PUSH4 0x38af3eed
0x62 EQ
0x63 PUSH2 0x732
0x66 JUMPI
---
0x5d: V31 = 0x38af3eed
0x62: V32 = EQ 0x38af3eed V12
0x63: V33 = 0x732
0x66: JUMPI 0x732 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x761]
---
0x67 DUP1
0x68 PUSH4 0x3b41ddba
0x6d EQ
0x6e PUSH2 0x761
0x71 JUMPI
---
0x68: V34 = 0x3b41ddba
0x6d: V35 = EQ 0x3b41ddba V12
0x6e: V36 = 0x761
0x71: JUMPI 0x761 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x786]
---
0x72 DUP1
0x73 PUSH4 0x4c95f5d0
0x78 EQ
0x79 PUSH2 0x786
0x7c JUMPI
---
0x73: V37 = 0x4c95f5d0
0x78: V38 = EQ 0x4c95f5d0 V12
0x79: V39 = 0x786
0x7c: JUMPI 0x786 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x7ab]
---
0x7d DUP1
0x7e PUSH4 0x4fa34075
0x83 EQ
0x84 PUSH2 0x7ab
0x87 JUMPI
---
0x7e: V40 = 0x4fa34075
0x83: V41 = EQ 0x4fa34075 V12
0x84: V42 = 0x7ab
0x87: JUMPI 0x7ab V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x7c0]
---
0x88 DUP1
0x89 PUSH4 0x5a0254e2
0x8e EQ
0x8f PUSH2 0x7c0
0x92 JUMPI
---
0x89: V43 = 0x5a0254e2
0x8e: V44 = EQ 0x5a0254e2 V12
0x8f: V45 = 0x7c0
0x92: JUMPI 0x7c0 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x7ef]
---
0x93 DUP1
0x94 PUSH4 0x5b54d2d6
0x99 EQ
0x9a PUSH2 0x7ef
0x9d JUMPI
---
0x94: V46 = 0x5b54d2d6
0x99: V47 = EQ 0x5b54d2d6 V12
0x9a: V48 = 0x7ef
0x9d: JUMPI 0x7ef V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x816]
---
0x9e DUP1
0x9f PUSH4 0x6e66f6e9
0xa4 EQ
0xa5 PUSH2 0x816
0xa8 JUMPI
---
0x9f: V49 = 0x6e66f6e9
0xa4: V50 = EQ 0x6e66f6e9 V12
0xa5: V51 = 0x816
0xa8: JUMPI 0x816 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x845]
---
0xa9 DUP1
0xaa PUSH4 0x70a08231
0xaf EQ
0xb0 PUSH2 0x845
0xb3 JUMPI
---
0xaa: V52 = 0x70a08231
0xaf: V53 = EQ 0x70a08231 V12
0xb0: V54 = 0x845
0xb3: JUMPI 0x845 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x876]
---
0xb4 DUP1
0xb5 PUSH4 0x7a3a0e84
0xba EQ
0xbb PUSH2 0x876
0xbe JUMPI
---
0xb5: V55 = 0x7a3a0e84
0xba: V56 = EQ 0x7a3a0e84 V12
0xbb: V57 = 0x876
0xbe: JUMPI 0x876 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x89b]
---
0xbf DUP1
0xc0 PUSH4 0x7b3e5e7b
0xc5 EQ
0xc6 PUSH2 0x89b
0xc9 JUMPI
---
0xc0: V58 = 0x7b3e5e7b
0xc5: V59 = EQ 0x7b3e5e7b V12
0xc6: V60 = 0x89b
0xc9: JUMPI 0x89b V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x8c0]
---
0xca DUP1
0xcb PUSH4 0x827037db
0xd0 EQ
0xd1 PUSH2 0x8c0
0xd4 JUMPI
---
0xcb: V61 = 0x827037db
0xd0: V62 = EQ 0x827037db V12
0xd1: V63 = 0x8c0
0xd4: JUMPI 0x8c0 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x8e5]
---
0xd5 DUP1
0xd6 PUSH4 0x89e66aea
0xdb EQ
0xdc PUSH2 0x8e5
0xdf JUMPI
---
0xd6: V64 = 0x89e66aea
0xdb: V65 = EQ 0x89e66aea V12
0xdc: V66 = 0x8e5
0xdf: JUMPI 0x8e5 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x90a]
---
0xe0 DUP1
0xe1 PUSH4 0x8f48399a
0xe6 EQ
0xe7 PUSH2 0x90a
0xea JUMPI
---
0xe1: V67 = 0x8f48399a
0xe6: V68 = EQ 0x8f48399a V12
0xe7: V69 = 0x90a
0xea: JUMPI 0x90a V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x92f]
---
0xeb DUP1
0xec PUSH4 0x92dcc41c
0xf1 EQ
0xf2 PUSH2 0x92f
0xf5 JUMPI
---
0xec: V70 = 0x92dcc41c
0xf1: V71 = EQ 0x92dcc41c V12
0xf2: V72 = 0x92f
0xf5: JUMPI 0x92f V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x954]
---
0xf6 DUP1
0xf7 PUSH4 0x998936b0
0xfc EQ
0xfd PUSH2 0x954
0x100 JUMPI
---
0xf7: V73 = 0x998936b0
0xfc: V74 = EQ 0x998936b0 V12
0xfd: V75 = 0x954
0x100: JUMPI 0x954 V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0x969]
---
0x101 DUP1
0x102 PUSH4 0xa02d55a3
0x107 EQ
0x108 PUSH2 0x969
0x10b JUMPI
---
0x102: V76 = 0xa02d55a3
0x107: V77 = EQ 0xa02d55a3 V12
0x108: V78 = 0x969
0x10b: JUMPI 0x969 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x116]
---
Predecessors: [0x101]
Successors: [0x117, 0x97e]
---
0x10c DUP1
0x10d PUSH4 0xa8a75b78
0x112 EQ
0x113 PUSH2 0x97e
0x116 JUMPI
---
0x10d: V79 = 0xa8a75b78
0x112: V80 = EQ 0xa8a75b78 V12
0x113: V81 = 0x97e
0x116: JUMPI 0x97e V80
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x117
[0x117:0x121]
---
Predecessors: [0x10c]
Successors: [0x122, 0x9a3]
---
0x117 DUP1
0x118 PUSH4 0xace38f8c
0x11d EQ
0x11e PUSH2 0x9a3
0x121 JUMPI
---
0x118: V82 = 0xace38f8c
0x11d: V83 = EQ 0xace38f8c V12
0x11e: V84 = 0x9a3
0x121: JUMPI 0x9a3 V83
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x122
[0x122:0x12c]
---
Predecessors: [0x117]
Successors: [0x12d, 0x9c8]
---
0x122 DUP1
0x123 PUSH4 0xaff29802
0x128 EQ
0x129 PUSH2 0x9c8
0x12c JUMPI
---
0x123: V85 = 0xaff29802
0x128: V86 = EQ 0xaff29802 V12
0x129: V87 = 0x9c8
0x12c: JUMPI 0x9c8 V86
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x12d
[0x12d:0x137]
---
Predecessors: [0x122]
Successors: [0x138, 0x9ed]
---
0x12d DUP1
0x12e PUSH4 0xccb07cef
0x133 EQ
0x134 PUSH2 0x9ed
0x137 JUMPI
---
0x12e: V88 = 0xccb07cef
0x133: V89 = EQ 0xccb07cef V12
0x134: V90 = 0x9ed
0x137: JUMPI 0x9ed V89
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x138
[0x138:0x142]
---
Predecessors: [0x12d]
Successors: [0x143, 0xa14]
---
0x138 DUP1
0x139 PUSH4 0xd424f628
0x13e EQ
0x13f PUSH2 0xa14
0x142 JUMPI
---
0x139: V91 = 0xd424f628
0x13e: V92 = EQ 0xd424f628 V12
0x13f: V93 = 0xa14
0x142: JUMPI 0xa14 V92
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x143
[0x143:0x14d]
---
Predecessors: [0x138]
Successors: [0x14e, 0xa3b]
---
0x143 DUP1
0x144 PUSH4 0xdcd22c9b
0x149 EQ
0x14a PUSH2 0xa3b
0x14d JUMPI
---
0x144: V94 = 0xdcd22c9b
0x149: V95 = EQ 0xdcd22c9b V12
0x14a: V96 = 0xa3b
0x14d: JUMPI 0xa3b V95
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x14e
[0x14e:0x158]
---
Predecessors: [0x143]
Successors: [0x159, 0xa50]
---
0x14e DUP1
0x14f PUSH4 0xfd6b7ef8
0x154 EQ
0x155 PUSH2 0xa50
0x158 JUMPI
---
0x14f: V97 = 0xfd6b7ef8
0x154: V98 = EQ 0xfd6b7ef8 V12
0x155: V99 = 0xa50
0x158: JUMPI 0xa50 V98
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x159
[0x159:0x159]
---
Predecessors: [0x0, 0x14e]
Successors: [0x15a]
---
0x159 JUMPDEST
---
0x159: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15a
[0x15a:0x16d]
---
Predecessors: [0x159]
Successors: [0x16e, 0x172]
---
0x15a JUMPDEST
0x15b PUSH1 0x13
0x15d SLOAD
0x15e PUSH1 0x0
0x160 SWAP1
0x161 PUSH2 0x100
0x164 SWAP1
0x165 DIV
0x166 PUSH1 0xff
0x168 AND
0x169 ISZERO
0x16a PUSH2 0x172
0x16d JUMPI
---
0x15a: JUMPDEST 
0x15b: V100 = 0x13
0x15d: V101 = S[0x13]
0x15e: V102 = 0x0
0x161: V103 = 0x100
0x165: V104 = DIV V101 0x100
0x166: V105 = 0xff
0x168: V106 = AND 0xff V104
0x169: V107 = ISZERO V106
0x16a: V108 = 0x172
0x16d: JUMPI 0x172 V107
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x0]

================================

Block 0x16e
[0x16e:0x171]
---
Predecessors: [0x15a]
Successors: []
---
0x16e PUSH1 0x0
0x170 DUP1
0x171 REVERT
---
0x16e: V109 = 0x0
0x171: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0x172
[0x172:0x1a6]
---
Predecessors: [0x15a]
Successors: [0x1a7, 0x4ad]
---
0x172 JUMPDEST
0x173 POP
0x174 PUSH1 0x1
0x176 PUSH1 0xa0
0x178 PUSH1 0x2
0x17a EXP
0x17b SUB
0x17c CALLER
0x17d AND
0x17e PUSH1 0x0
0x180 SWAP1
0x181 DUP2
0x182 MSTORE
0x183 PUSH1 0x12
0x185 PUSH1 0x20
0x187 MSTORE
0x188 PUSH1 0x40
0x18a SWAP1
0x18b SHA3
0x18c DUP1
0x18d SLOAD
0x18e CALLVALUE
0x18f SWAP1
0x190 DUP2
0x191 ADD
0x192 SWAP1
0x193 SWAP2
0x194 SSTORE
0x195 PUSH1 0x8
0x197 DUP1
0x198 SLOAD
0x199 DUP3
0x19a ADD
0x19b SWAP1
0x19c SSTORE
0x19d PUSH1 0x1
0x19f SLOAD
0x1a0 TIMESTAMP
0x1a1 LT
0x1a2 ISZERO
0x1a3 PUSH2 0x4ad
0x1a6 JUMPI
---
0x172: JUMPDEST 
0x174: V110 = 0x1
0x176: V111 = 0xa0
0x178: V112 = 0x2
0x17a: V113 = EXP 0x2 0xa0
0x17b: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17c: V115 = CALLER
0x17d: V116 = AND V115 0xffffffffffffffffffffffffffffffffffffffff
0x17e: V117 = 0x0
0x182: M[0x0] = V116
0x183: V118 = 0x12
0x185: V119 = 0x20
0x187: M[0x20] = 0x12
0x188: V120 = 0x40
0x18b: V121 = SHA3 0x0 0x40
0x18d: V122 = S[V121]
0x18e: V123 = CALLVALUE
0x191: V124 = ADD V123 V122
0x194: S[V121] = V124
0x195: V125 = 0x8
0x198: V126 = S[0x8]
0x19a: V127 = ADD V123 V126
0x19c: S[0x8] = V127
0x19d: V128 = 0x1
0x19f: V129 = S[0x1]
0x1a0: V130 = TIMESTAMP
0x1a1: V131 = LT V130 V129
0x1a2: V132 = ISZERO V131
0x1a3: V133 = 0x4ad
0x1a6: JUMPI 0x4ad V132
---
Entry stack: [V12, 0x0]
Stack pops: 1
Stack additions: [V123]
Exit stack: [V12, V123]

================================

Block 0x1a7
[0x1a7:0x1b7]
---
Predecessors: [0x172]
Successors: [0x1b8, 0x234]
---
0x1a7 PUSH9 0x1158e460913d00000
0x1b1 DUP2
0x1b2 LT
0x1b3 ISZERO
0x1b4 PUSH2 0x234
0x1b7 JUMPI
---
0x1a7: V134 = 0x1158e460913d00000
0x1b2: V135 = LT V123 0x1158e460913d00000
0x1b3: V136 = ISZERO V135
0x1b4: V137 = 0x234
0x1b7: JUMPI 0x234 V136
---
Entry stack: [V12, V123]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V123]

================================

Block 0x1b8
[0x1b8:0x1d6]
---
Predecessors: [0x1a7]
Successors: [0x1d7]
---
0x1b8 PUSH1 0x11
0x1ba SLOAD
0x1bb PUSH1 0xc
0x1bd SLOAD
0x1be PUSH1 0x1
0x1c0 PUSH1 0xa0
0x1c2 PUSH1 0x2
0x1c4 EXP
0x1c5 SUB
0x1c6 SWAP1
0x1c7 SWAP2
0x1c8 AND
0x1c9 SWAP1
0x1ca PUSH4 0xa9059cbb
0x1cf SWAP1
0x1d0 CALLER
0x1d1 SWAP1
0x1d2 PUSH1 0xa
0x1d4 SWAP1
0x1d5 DUP6
0x1d6 MUL
---
0x1b8: V138 = 0x11
0x1ba: V139 = S[0x11]
0x1bb: V140 = 0xc
0x1bd: V141 = S[0xc]
0x1be: V142 = 0x1
0x1c0: V143 = 0xa0
0x1c2: V144 = 0x2
0x1c4: V145 = EXP 0x2 0xa0
0x1c5: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c8: V147 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V148 = 0xa9059cbb
0x1d0: V149 = CALLER
0x1d2: V150 = 0xa
0x1d6: V151 = MUL V123 V141
---
Entry stack: [V12, V123]
Stack pops: 1
Stack additions: [S0, V147, 0xa9059cbb, V149, 0xa, V151]
Exit stack: [V12, V123, V147, 0xa9059cbb, V149, 0xa, V151]

================================

Block 0x1d7
[0x1d7:0x216]
---
Predecessors: [0x1b8, 0x246, 0x2d8, 0x36a]
Successors: [0x217, 0x21b]
---
0x1d7 JUMPDEST
0x1d8 DIV
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc PUSH1 0xe0
0x1de PUSH1 0x2
0x1e0 EXP
0x1e1 PUSH4 0xffffffff
0x1e6 DUP6
0x1e7 AND
0x1e8 MUL
0x1e9 DUP2
0x1ea MSTORE
0x1eb PUSH1 0x1
0x1ed PUSH1 0xa0
0x1ef PUSH1 0x2
0x1f1 EXP
0x1f2 SUB
0x1f3 SWAP1
0x1f4 SWAP3
0x1f5 AND
0x1f6 PUSH1 0x4
0x1f8 DUP4
0x1f9 ADD
0x1fa MSTORE
0x1fb PUSH1 0x24
0x1fd DUP3
0x1fe ADD
0x1ff MSTORE
0x200 PUSH1 0x44
0x202 ADD
0x203 PUSH1 0x0
0x205 PUSH1 0x40
0x207 MLOAD
0x208 DUP1
0x209 DUP4
0x20a SUB
0x20b DUP2
0x20c PUSH1 0x0
0x20e DUP8
0x20f DUP1
0x210 EXTCODESIZE
0x211 ISZERO
0x212 ISZERO
0x213 PUSH2 0x21b
0x216 JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V152 = DIV S0 0xa
0x1d9: V153 = 0x40
0x1db: V154 = M[0x40]
0x1dc: V155 = 0xe0
0x1de: V156 = 0x2
0x1e0: V157 = EXP 0x2 0xe0
0x1e1: V158 = 0xffffffff
0x1e7: V159 = AND 0xa9059cbb 0xffffffff
0x1e8: V160 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x1ea: M[V154] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1eb: V161 = 0x1
0x1ed: V162 = 0xa0
0x1ef: V163 = 0x2
0x1f1: V164 = EXP 0x2 0xa0
0x1f2: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f5: V166 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V167 = 0x4
0x1f9: V168 = ADD V154 0x4
0x1fa: M[V168] = V166
0x1fb: V169 = 0x24
0x1fe: V170 = ADD V154 0x24
0x1ff: M[V170] = V152
0x200: V171 = 0x44
0x202: V172 = ADD 0x44 V154
0x203: V173 = 0x0
0x205: V174 = 0x40
0x207: V175 = M[0x40]
0x20a: V176 = SUB V172 V175
0x20c: V177 = 0x0
0x210: V178 = EXTCODESIZE S4
0x211: V179 = ISZERO V178
0x212: V180 = ISZERO V179
0x213: V181 = 0x21b
0x216: JUMPI 0x21b V180
---
Entry stack: [V12, V123, S4, 0xa9059cbb, S2, 0xa, S0]
Stack pops: 5
Stack additions: [S4, S3, V172, 0x0, V175, V176, V175, 0x0, S4]
Exit stack: [V12, V123, S4, 0xa9059cbb, V172, 0x0, V175, V176, V175, 0x0, S4]

================================

Block 0x217
[0x217:0x21a]
---
Predecessors: [0x1d7]
Successors: []
---
0x217 PUSH1 0x0
0x219 DUP1
0x21a REVERT
---
0x217: V182 = 0x0
0x21a: REVERT 0x0 0x0
---
Entry stack: [V12, V123, S8, 0xa9059cbb, V172, 0x0, V175, V176, V175, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V123, S8, 0xa9059cbb, V172, 0x0, V175, V176, V175, 0x0, S0]

================================

Block 0x21b
[0x21b:0x227]
---
Predecessors: [0x1d7, 0x269, 0x2fb, 0x38d]
Successors: [0x228, 0x22c]
---
0x21b JUMPDEST
0x21c PUSH2 0x2c6
0x21f GAS
0x220 SUB
0x221 CALL
0x222 ISZERO
0x223 ISZERO
0x224 PUSH2 0x22c
0x227 JUMPI
---
0x21b: JUMPDEST 
0x21c: V183 = 0x2c6
0x21f: V184 = GAS
0x220: V185 = SUB V184 0x2c6
0x221: V186 = CALL V185 S0 0x0 S2 S3 S4 0x0
0x222: V187 = ISZERO V186
0x223: V188 = ISZERO V187
0x224: V189 = 0x22c
0x227: JUMPI 0x22c V188
---
Entry stack: [V12, V123, S8, S7, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V123, S8, S7, S6]

================================

Block 0x228
[0x228:0x22b]
---
Predecessors: [0x21b]
Successors: []
---
0x228 PUSH1 0x0
0x22a DUP1
0x22b REVERT
---
0x228: V190 = 0x0
0x22b: REVERT 0x0 0x0
---
Entry stack: [V12, V123, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V123, S2, S1, S0]

================================

Block 0x22c
[0x22c:0x233]
---
Predecessors: [0x21b, 0x2a9, 0x33b, 0x3cd]
Successors: [0x463]
---
0x22c JUMPDEST
0x22d POP
0x22e POP
0x22f POP
0x230 PUSH2 0x463
0x233 JUMP
---
0x22c: JUMPDEST 
0x230: V191 = 0x463
0x233: JUMP 0x463
---
Entry stack: [V12, V123, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V123]

================================

Block 0x234
[0x234:0x245]
---
Predecessors: [0x1a7]
Successors: [0x246, 0x2c6]
---
0x234 JUMPDEST
0x235 PUSH9 0x1a055690d9db80000
0x23f DUP2
0x240 LT
0x241 ISZERO
0x242 PUSH2 0x2c6
0x245 JUMPI
---
0x234: JUMPDEST 
0x235: V192 = 0x1a055690d9db80000
0x240: V193 = LT V123 0x1a055690d9db80000
0x241: V194 = ISZERO V193
0x242: V195 = 0x2c6
0x245: JUMPI 0x2c6 V194
---
Entry stack: [V12, V123]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V123]

================================

Block 0x246
[0x246:0x268]
---
Predecessors: [0x234]
Successors: [0x1d7]
---
0x246 PUSH1 0x11
0x248 SLOAD
0x249 PUSH1 0xd
0x24b SLOAD
0x24c PUSH1 0x1
0x24e PUSH1 0xa0
0x250 PUSH1 0x2
0x252 EXP
0x253 SUB
0x254 SWAP1
0x255 SWAP2
0x256 AND
0x257 SWAP1
0x258 PUSH4 0xa9059cbb
0x25d SWAP1
0x25e CALLER
0x25f SWAP1
0x260 PUSH1 0xa
0x262 SWAP1
0x263 DUP6
0x264 MUL
0x265 PUSH2 0x1d7
0x268 JUMP
---
0x246: V196 = 0x11
0x248: V197 = S[0x11]
0x249: V198 = 0xd
0x24b: V199 = S[0xd]
0x24c: V200 = 0x1
0x24e: V201 = 0xa0
0x250: V202 = 0x2
0x252: V203 = EXP 0x2 0xa0
0x253: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x256: V205 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0x258: V206 = 0xa9059cbb
0x25e: V207 = CALLER
0x260: V208 = 0xa
0x264: V209 = MUL V123 V199
0x265: V210 = 0x1d7
0x268: JUMP 0x1d7
---
Entry stack: [V12, V123]
Stack pops: 1
Stack additions: [S0, V205, 0xa9059cbb, V207, 0xa, V209]
Exit stack: [V12, V123, V205, 0xa9059cbb, V207, 0xa, V209]

================================

Block 0x269
[0x269:0x2a8]
---
Predecessors: []
Successors: [0x21b, 0x2a9]
---
0x269 JUMPDEST
0x26a DIV
0x26b PUSH1 0x40
0x26d MLOAD
0x26e PUSH1 0xe0
0x270 PUSH1 0x2
0x272 EXP
0x273 PUSH4 0xffffffff
0x278 DUP6
0x279 AND
0x27a MUL
0x27b DUP2
0x27c MSTORE
0x27d PUSH1 0x1
0x27f PUSH1 0xa0
0x281 PUSH1 0x2
0x283 EXP
0x284 SUB
0x285 SWAP1
0x286 SWAP3
0x287 AND
0x288 PUSH1 0x4
0x28a DUP4
0x28b ADD
0x28c MSTORE
0x28d PUSH1 0x24
0x28f DUP3
0x290 ADD
0x291 MSTORE
0x292 PUSH1 0x44
0x294 ADD
0x295 PUSH1 0x0
0x297 PUSH1 0x40
0x299 MLOAD
0x29a DUP1
0x29b DUP4
0x29c SUB
0x29d DUP2
0x29e PUSH1 0x0
0x2a0 DUP8
0x2a1 DUP1
0x2a2 EXTCODESIZE
0x2a3 ISZERO
0x2a4 ISZERO
0x2a5 PUSH2 0x21b
0x2a8 JUMPI
---
0x269: JUMPDEST 
0x26a: V211 = DIV S0 S1
0x26b: V212 = 0x40
0x26d: V213 = M[0x40]
0x26e: V214 = 0xe0
0x270: V215 = 0x2
0x272: V216 = EXP 0x2 0xe0
0x273: V217 = 0xffffffff
0x279: V218 = AND S3 0xffffffff
0x27a: V219 = MUL V218 0x100000000000000000000000000000000000000000000000000000000
0x27c: M[V213] = V219
0x27d: V220 = 0x1
0x27f: V221 = 0xa0
0x281: V222 = 0x2
0x283: V223 = EXP 0x2 0xa0
0x284: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x287: V225 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x288: V226 = 0x4
0x28b: V227 = ADD V213 0x4
0x28c: M[V227] = V225
0x28d: V228 = 0x24
0x290: V229 = ADD V213 0x24
0x291: M[V229] = V211
0x292: V230 = 0x44
0x294: V231 = ADD 0x44 V213
0x295: V232 = 0x0
0x297: V233 = 0x40
0x299: V234 = M[0x40]
0x29c: V235 = SUB V231 V234
0x29e: V236 = 0x0
0x2a2: V237 = EXTCODESIZE S4
0x2a3: V238 = ISZERO V237
0x2a4: V239 = ISZERO V238
0x2a5: V240 = 0x21b
0x2a8: JUMPI 0x21b V239
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V231, 0x0, V234, V235, V234, 0x0, S4]
Exit stack: [S4, S3, V231, 0x0, V234, V235, V234, 0x0, S4]

================================

Block 0x2a9
[0x2a9:0x2b9]
---
Predecessors: [0x269]
Successors: [0x22c, 0x2ba]
---
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac REVERT
0x2ad JUMPDEST
0x2ae PUSH2 0x2c6
0x2b1 GAS
0x2b2 SUB
0x2b3 CALL
0x2b4 ISZERO
0x2b5 ISZERO
0x2b6 PUSH2 0x22c
0x2b9 JUMPI
---
0x2a9: V241 = 0x0
0x2ac: REVERT 0x0 0x0
0x2ad: JUMPDEST 
0x2ae: V242 = 0x2c6
0x2b1: V243 = GAS
0x2b2: V244 = SUB V243 0x2c6
0x2b3: V245 = CALL V244 S0 S1 S2 S3 S4 S5
0x2b4: V246 = ISZERO V245
0x2b5: V247 = ISZERO V246
0x2b6: V248 = 0x22c
0x2b9: JUMPI 0x22c V247
---
Entry stack: [S8, S7, V231, 0x0, V234, V235, V234, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ba
[0x2ba:0x2c5]
---
Predecessors: [0x2a9]
Successors: [0x463]
---
0x2ba PUSH1 0x0
0x2bc DUP1
0x2bd REVERT
0x2be JUMPDEST
0x2bf POP
0x2c0 POP
0x2c1 POP
0x2c2 PUSH2 0x463
0x2c5 JUMP
---
0x2ba: V249 = 0x0
0x2bd: REVERT 0x0 0x0
0x2be: JUMPDEST 
0x2c2: V250 = 0x463
0x2c5: JUMP 0x463
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2c6
[0x2c6:0x2d7]
---
Predecessors: [0x234]
Successors: [0x2d8, 0x358]
---
0x2c6 JUMPDEST
0x2c7 PUSH9 0x2b5e3af16b1880000
0x2d1 DUP2
0x2d2 LT
0x2d3 ISZERO
0x2d4 PUSH2 0x358
0x2d7 JUMPI
---
0x2c6: JUMPDEST 
0x2c7: V251 = 0x2b5e3af16b1880000
0x2d2: V252 = LT V123 0x2b5e3af16b1880000
0x2d3: V253 = ISZERO V252
0x2d4: V254 = 0x358
0x2d7: JUMPI 0x358 V253
---
Entry stack: [V12, V123]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V123]

================================

Block 0x2d8
[0x2d8:0x2fa]
---
Predecessors: [0x2c6]
Successors: [0x1d7]
---
0x2d8 PUSH1 0x11
0x2da SLOAD
0x2db PUSH1 0xe
0x2dd SLOAD
0x2de PUSH1 0x1
0x2e0 PUSH1 0xa0
0x2e2 PUSH1 0x2
0x2e4 EXP
0x2e5 SUB
0x2e6 SWAP1
0x2e7 SWAP2
0x2e8 AND
0x2e9 SWAP1
0x2ea PUSH4 0xa9059cbb
0x2ef SWAP1
0x2f0 CALLER
0x2f1 SWAP1
0x2f2 PUSH1 0xa
0x2f4 SWAP1
0x2f5 DUP6
0x2f6 MUL
0x2f7 PUSH2 0x1d7
0x2fa JUMP
---
0x2d8: V255 = 0x11
0x2da: V256 = S[0x11]
0x2db: V257 = 0xe
0x2dd: V258 = S[0xe]
0x2de: V259 = 0x1
0x2e0: V260 = 0xa0
0x2e2: V261 = 0x2
0x2e4: V262 = EXP 0x2 0xa0
0x2e5: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e8: V264 = AND V256 0xffffffffffffffffffffffffffffffffffffffff
0x2ea: V265 = 0xa9059cbb
0x2f0: V266 = CALLER
0x2f2: V267 = 0xa
0x2f6: V268 = MUL V123 V258
0x2f7: V269 = 0x1d7
0x2fa: JUMP 0x1d7
---
Entry stack: [V12, V123]
Stack pops: 1
Stack additions: [S0, V264, 0xa9059cbb, V266, 0xa, V268]
Exit stack: [V12, V123, V264, 0xa9059cbb, V266, 0xa, V268]

================================

Block 0x2fb
[0x2fb:0x33a]
---
Predecessors: []
Successors: [0x21b, 0x33b]
---
0x2fb JUMPDEST
0x2fc DIV
0x2fd PUSH1 0x40
0x2ff MLOAD
0x300 PUSH1 0xe0
0x302 PUSH1 0x2
0x304 EXP
0x305 PUSH4 0xffffffff
0x30a DUP6
0x30b AND
0x30c MUL
0x30d DUP2
0x30e MSTORE
0x30f PUSH1 0x1
0x311 PUSH1 0xa0
0x313 PUSH1 0x2
0x315 EXP
0x316 SUB
0x317 SWAP1
0x318 SWAP3
0x319 AND
0x31a PUSH1 0x4
0x31c DUP4
0x31d ADD
0x31e MSTORE
0x31f PUSH1 0x24
0x321 DUP3
0x322 ADD
0x323 MSTORE
0x324 PUSH1 0x44
0x326 ADD
0x327 PUSH1 0x0
0x329 PUSH1 0x40
0x32b MLOAD
0x32c DUP1
0x32d DUP4
0x32e SUB
0x32f DUP2
0x330 PUSH1 0x0
0x332 DUP8
0x333 DUP1
0x334 EXTCODESIZE
0x335 ISZERO
0x336 ISZERO
0x337 PUSH2 0x21b
0x33a JUMPI
---
0x2fb: JUMPDEST 
0x2fc: V270 = DIV S0 S1
0x2fd: V271 = 0x40
0x2ff: V272 = M[0x40]
0x300: V273 = 0xe0
0x302: V274 = 0x2
0x304: V275 = EXP 0x2 0xe0
0x305: V276 = 0xffffffff
0x30b: V277 = AND S3 0xffffffff
0x30c: V278 = MUL V277 0x100000000000000000000000000000000000000000000000000000000
0x30e: M[V272] = V278
0x30f: V279 = 0x1
0x311: V280 = 0xa0
0x313: V281 = 0x2
0x315: V282 = EXP 0x2 0xa0
0x316: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x319: V284 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x31a: V285 = 0x4
0x31d: V286 = ADD V272 0x4
0x31e: M[V286] = V284
0x31f: V287 = 0x24
0x322: V288 = ADD V272 0x24
0x323: M[V288] = V270
0x324: V289 = 0x44
0x326: V290 = ADD 0x44 V272
0x327: V291 = 0x0
0x329: V292 = 0x40
0x32b: V293 = M[0x40]
0x32e: V294 = SUB V290 V293
0x330: V295 = 0x0
0x334: V296 = EXTCODESIZE S4
0x335: V297 = ISZERO V296
0x336: V298 = ISZERO V297
0x337: V299 = 0x21b
0x33a: JUMPI 0x21b V298
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V290, 0x0, V293, V294, V293, 0x0, S4]
Exit stack: [S4, S3, V290, 0x0, V293, V294, V293, 0x0, S4]

================================

Block 0x33b
[0x33b:0x34b]
---
Predecessors: [0x2fb]
Successors: [0x22c, 0x34c]
---
0x33b PUSH1 0x0
0x33d DUP1
0x33e REVERT
0x33f JUMPDEST
0x340 PUSH2 0x2c6
0x343 GAS
0x344 SUB
0x345 CALL
0x346 ISZERO
0x347 ISZERO
0x348 PUSH2 0x22c
0x34b JUMPI
---
0x33b: V300 = 0x0
0x33e: REVERT 0x0 0x0
0x33f: JUMPDEST 
0x340: V301 = 0x2c6
0x343: V302 = GAS
0x344: V303 = SUB V302 0x2c6
0x345: V304 = CALL V303 S0 S1 S2 S3 S4 S5
0x346: V305 = ISZERO V304
0x347: V306 = ISZERO V305
0x348: V307 = 0x22c
0x34b: JUMPI 0x22c V306
---
Entry stack: [S8, S7, V290, 0x0, V293, V294, V293, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x34c
[0x34c:0x357]
---
Predecessors: [0x33b]
Successors: [0x463]
---
0x34c PUSH1 0x0
0x34e DUP1
0x34f REVERT
0x350 JUMPDEST
0x351 POP
0x352 POP
0x353 POP
0x354 PUSH2 0x463
0x357 JUMP
---
0x34c: V308 = 0x0
0x34f: REVERT 0x0 0x0
0x350: JUMPDEST 
0x354: V309 = 0x463
0x357: JUMP 0x463
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x358
[0x358:0x369]
---
Predecessors: [0x2c6]
Successors: [0x36a, 0x3ea]
---
0x358 JUMPDEST
0x359 PUSH9 0x56bc75e2d63100000
0x363 DUP2
0x364 LT
0x365 ISZERO
0x366 PUSH2 0x3ea
0x369 JUMPI
---
0x358: JUMPDEST 
0x359: V310 = 0x56bc75e2d63100000
0x364: V311 = LT V123 0x56bc75e2d63100000
0x365: V312 = ISZERO V311
0x366: V313 = 0x3ea
0x369: JUMPI 0x3ea V312
---
Entry stack: [V12, V123]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V123]

================================

Block 0x36a
[0x36a:0x38c]
---
Predecessors: [0x358]
Successors: [0x1d7]
---
0x36a PUSH1 0x11
0x36c SLOAD
0x36d PUSH1 0xf
0x36f SLOAD
0x370 PUSH1 0x1
0x372 PUSH1 0xa0
0x374 PUSH1 0x2
0x376 EXP
0x377 SUB
0x378 SWAP1
0x379 SWAP2
0x37a AND
0x37b SWAP1
0x37c PUSH4 0xa9059cbb
0x381 SWAP1
0x382 CALLER
0x383 SWAP1
0x384 PUSH1 0xa
0x386 SWAP1
0x387 DUP6
0x388 MUL
0x389 PUSH2 0x1d7
0x38c JUMP
---
0x36a: V314 = 0x11
0x36c: V315 = S[0x11]
0x36d: V316 = 0xf
0x36f: V317 = S[0xf]
0x370: V318 = 0x1
0x372: V319 = 0xa0
0x374: V320 = 0x2
0x376: V321 = EXP 0x2 0xa0
0x377: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37a: V323 = AND V315 0xffffffffffffffffffffffffffffffffffffffff
0x37c: V324 = 0xa9059cbb
0x382: V325 = CALLER
0x384: V326 = 0xa
0x388: V327 = MUL V123 V317
0x389: V328 = 0x1d7
0x38c: JUMP 0x1d7
---
Entry stack: [V12, V123]
Stack pops: 1
Stack additions: [S0, V323, 0xa9059cbb, V325, 0xa, V327]
Exit stack: [V12, V123, V323, 0xa9059cbb, V325, 0xa, V327]

================================

Block 0x38d
[0x38d:0x3cc]
---
Predecessors: []
Successors: [0x21b, 0x3cd]
---
0x38d JUMPDEST
0x38e DIV
0x38f PUSH1 0x40
0x391 MLOAD
0x392 PUSH1 0xe0
0x394 PUSH1 0x2
0x396 EXP
0x397 PUSH4 0xffffffff
0x39c DUP6
0x39d AND
0x39e MUL
0x39f DUP2
0x3a0 MSTORE
0x3a1 PUSH1 0x1
0x3a3 PUSH1 0xa0
0x3a5 PUSH1 0x2
0x3a7 EXP
0x3a8 SUB
0x3a9 SWAP1
0x3aa SWAP3
0x3ab AND
0x3ac PUSH1 0x4
0x3ae DUP4
0x3af ADD
0x3b0 MSTORE
0x3b1 PUSH1 0x24
0x3b3 DUP3
0x3b4 ADD
0x3b5 MSTORE
0x3b6 PUSH1 0x44
0x3b8 ADD
0x3b9 PUSH1 0x0
0x3bb PUSH1 0x40
0x3bd MLOAD
0x3be DUP1
0x3bf DUP4
0x3c0 SUB
0x3c1 DUP2
0x3c2 PUSH1 0x0
0x3c4 DUP8
0x3c5 DUP1
0x3c6 EXTCODESIZE
0x3c7 ISZERO
0x3c8 ISZERO
0x3c9 PUSH2 0x21b
0x3cc JUMPI
---
0x38d: JUMPDEST 
0x38e: V329 = DIV S0 S1
0x38f: V330 = 0x40
0x391: V331 = M[0x40]
0x392: V332 = 0xe0
0x394: V333 = 0x2
0x396: V334 = EXP 0x2 0xe0
0x397: V335 = 0xffffffff
0x39d: V336 = AND S3 0xffffffff
0x39e: V337 = MUL V336 0x100000000000000000000000000000000000000000000000000000000
0x3a0: M[V331] = V337
0x3a1: V338 = 0x1
0x3a3: V339 = 0xa0
0x3a5: V340 = 0x2
0x3a7: V341 = EXP 0x2 0xa0
0x3a8: V342 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ab: V343 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x3ac: V344 = 0x4
0x3af: V345 = ADD V331 0x4
0x3b0: M[V345] = V343
0x3b1: V346 = 0x24
0x3b4: V347 = ADD V331 0x24
0x3b5: M[V347] = V329
0x3b6: V348 = 0x44
0x3b8: V349 = ADD 0x44 V331
0x3b9: V350 = 0x0
0x3bb: V351 = 0x40
0x3bd: V352 = M[0x40]
0x3c0: V353 = SUB V349 V352
0x3c2: V354 = 0x0
0x3c6: V355 = EXTCODESIZE S4
0x3c7: V356 = ISZERO V355
0x3c8: V357 = ISZERO V356
0x3c9: V358 = 0x21b
0x3cc: JUMPI 0x21b V357
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V349, 0x0, V352, V353, V352, 0x0, S4]
Exit stack: [S4, S3, V349, 0x0, V352, V353, V352, 0x0, S4]

================================

Block 0x3cd
[0x3cd:0x3dd]
---
Predecessors: [0x38d]
Successors: [0x22c, 0x3de]
---
0x3cd PUSH1 0x0
0x3cf DUP1
0x3d0 REVERT
0x3d1 JUMPDEST
0x3d2 PUSH2 0x2c6
0x3d5 GAS
0x3d6 SUB
0x3d7 CALL
0x3d8 ISZERO
0x3d9 ISZERO
0x3da PUSH2 0x22c
0x3dd JUMPI
---
0x3cd: V359 = 0x0
0x3d0: REVERT 0x0 0x0
0x3d1: JUMPDEST 
0x3d2: V360 = 0x2c6
0x3d5: V361 = GAS
0x3d6: V362 = SUB V361 0x2c6
0x3d7: V363 = CALL V362 S0 S1 S2 S3 S4 S5
0x3d8: V364 = ISZERO V363
0x3d9: V365 = ISZERO V364
0x3da: V366 = 0x22c
0x3dd: JUMPI 0x22c V365
---
Entry stack: [S8, S7, V349, 0x0, V352, V353, V352, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3de
[0x3de:0x3e9]
---
Predecessors: [0x3cd]
Successors: [0x463]
---
0x3de PUSH1 0x0
0x3e0 DUP1
0x3e1 REVERT
0x3e2 JUMPDEST
0x3e3 POP
0x3e4 POP
0x3e5 POP
0x3e6 PUSH2 0x463
0x3e9 JUMP
---
0x3de: V367 = 0x0
0x3e1: REVERT 0x0 0x0
0x3e2: JUMPDEST 
0x3e6: V368 = 0x463
0x3e9: JUMP 0x463
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3ea
[0x3ea:0x409]
---
Predecessors: [0x358]
Successors: [0x40a]
---
0x3ea JUMPDEST
0x3eb PUSH1 0x11
0x3ed SLOAD
0x3ee PUSH1 0x10
0x3f0 SLOAD
0x3f1 PUSH1 0x1
0x3f3 PUSH1 0xa0
0x3f5 PUSH1 0x2
0x3f7 EXP
0x3f8 SUB
0x3f9 SWAP1
0x3fa SWAP2
0x3fb AND
0x3fc SWAP1
0x3fd PUSH4 0xa9059cbb
0x402 SWAP1
0x403 CALLER
0x404 SWAP1
0x405 PUSH1 0xa
0x407 SWAP1
0x408 DUP6
0x409 MUL
---
0x3ea: JUMPDEST 
0x3eb: V369 = 0x11
0x3ed: V370 = S[0x11]
0x3ee: V371 = 0x10
0x3f0: V372 = S[0x10]
0x3f1: V373 = 0x1
0x3f3: V374 = 0xa0
0x3f5: V375 = 0x2
0x3f7: V376 = EXP 0x2 0xa0
0x3f8: V377 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fb: V378 = AND V370 0xffffffffffffffffffffffffffffffffffffffff
0x3fd: V379 = 0xa9059cbb
0x403: V380 = CALLER
0x405: V381 = 0xa
0x409: V382 = MUL V123 V372
---
Entry stack: [V12, V123]
Stack pops: 1
Stack additions: [S0, V378, 0xa9059cbb, V380, 0xa, V382]
Exit stack: [V12, V123, V378, 0xa9059cbb, V380, 0xa, V382]

================================

Block 0x40a
[0x40a:0x449]
---
Predecessors: [0x3ea]
Successors: [0x44a, 0x44e]
---
0x40a JUMPDEST
0x40b DIV
0x40c PUSH1 0x40
0x40e MLOAD
0x40f PUSH1 0xe0
0x411 PUSH1 0x2
0x413 EXP
0x414 PUSH4 0xffffffff
0x419 DUP6
0x41a AND
0x41b MUL
0x41c DUP2
0x41d MSTORE
0x41e PUSH1 0x1
0x420 PUSH1 0xa0
0x422 PUSH1 0x2
0x424 EXP
0x425 SUB
0x426 SWAP1
0x427 SWAP3
0x428 AND
0x429 PUSH1 0x4
0x42b DUP4
0x42c ADD
0x42d MSTORE
0x42e PUSH1 0x24
0x430 DUP3
0x431 ADD
0x432 MSTORE
0x433 PUSH1 0x44
0x435 ADD
0x436 PUSH1 0x0
0x438 PUSH1 0x40
0x43a MLOAD
0x43b DUP1
0x43c DUP4
0x43d SUB
0x43e DUP2
0x43f PUSH1 0x0
0x441 DUP8
0x442 DUP1
0x443 EXTCODESIZE
0x444 ISZERO
0x445 ISZERO
0x446 PUSH2 0x44e
0x449 JUMPI
---
0x40a: JUMPDEST 
0x40b: V383 = DIV V382 0xa
0x40c: V384 = 0x40
0x40e: V385 = M[0x40]
0x40f: V386 = 0xe0
0x411: V387 = 0x2
0x413: V388 = EXP 0x2 0xe0
0x414: V389 = 0xffffffff
0x41a: V390 = AND 0xa9059cbb 0xffffffff
0x41b: V391 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x41d: M[V385] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x41e: V392 = 0x1
0x420: V393 = 0xa0
0x422: V394 = 0x2
0x424: V395 = EXP 0x2 0xa0
0x425: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x428: V397 = AND V380 0xffffffffffffffffffffffffffffffffffffffff
0x429: V398 = 0x4
0x42c: V399 = ADD V385 0x4
0x42d: M[V399] = V397
0x42e: V400 = 0x24
0x431: V401 = ADD V385 0x24
0x432: M[V401] = V383
0x433: V402 = 0x44
0x435: V403 = ADD 0x44 V385
0x436: V404 = 0x0
0x438: V405 = 0x40
0x43a: V406 = M[0x40]
0x43d: V407 = SUB V403 V406
0x43f: V408 = 0x0
0x443: V409 = EXTCODESIZE V378
0x444: V410 = ISZERO V409
0x445: V411 = ISZERO V410
0x446: V412 = 0x44e
0x449: JUMPI 0x44e V411
---
Entry stack: [V12, V123, V378, 0xa9059cbb, V380, 0xa, V382]
Stack pops: 5
Stack additions: [S4, S3, V403, 0x0, V406, V407, V406, 0x0, S4]
Exit stack: [V12, V123, V378, 0xa9059cbb, V403, 0x0, V406, V407, V406, 0x0, V378]

================================

Block 0x44a
[0x44a:0x44d]
---
Predecessors: [0x40a]
Successors: []
---
0x44a PUSH1 0x0
0x44c DUP1
0x44d REVERT
---
0x44a: V413 = 0x0
0x44d: REVERT 0x0 0x0
---
Entry stack: [V12, V123, V378, 0xa9059cbb, V403, 0x0, V406, V407, V406, 0x0, V378]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V123, V378, 0xa9059cbb, V403, 0x0, V406, V407, V406, 0x0, V378]

================================

Block 0x44e
[0x44e:0x45a]
---
Predecessors: [0x40a]
Successors: [0x45b, 0x45f]
---
0x44e JUMPDEST
0x44f PUSH2 0x2c6
0x452 GAS
0x453 SUB
0x454 CALL
0x455 ISZERO
0x456 ISZERO
0x457 PUSH2 0x45f
0x45a JUMPI
---
0x44e: JUMPDEST 
0x44f: V414 = 0x2c6
0x452: V415 = GAS
0x453: V416 = SUB V415 0x2c6
0x454: V417 = CALL V416 V378 0x0 V406 V407 V406 0x0
0x455: V418 = ISZERO V417
0x456: V419 = ISZERO V418
0x457: V420 = 0x45f
0x45a: JUMPI 0x45f V419
---
Entry stack: [V12, V123, V378, 0xa9059cbb, V403, 0x0, V406, V407, V406, 0x0, V378]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V123, V378, 0xa9059cbb, V403]

================================

Block 0x45b
[0x45b:0x45e]
---
Predecessors: [0x44e]
Successors: []
---
0x45b PUSH1 0x0
0x45d DUP1
0x45e REVERT
---
0x45b: V421 = 0x0
0x45e: REVERT 0x0 0x0
---
Entry stack: [V12, V123, V378, 0xa9059cbb, V403]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V123, V378, 0xa9059cbb, V403]

================================

Block 0x45f
[0x45f:0x462]
---
Predecessors: [0x44e]
Successors: [0x463]
---
0x45f JUMPDEST
0x460 POP
0x461 POP
0x462 POP
---
0x45f: JUMPDEST 
---
Entry stack: [V12, V123, V378, 0xa9059cbb, V403]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V123]

================================

Block 0x463
[0x463:0x463]
---
Predecessors: [0x22c, 0x2ba, 0x34c, 0x3de, 0x45f]
Successors: [0x464]
---
0x463 JUMPDEST
---
0x463: JUMPDEST 
---
Entry stack: [V12, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V123]

================================

Block 0x464
[0x464:0x464]
---
Predecessors: [0x463]
Successors: [0x465]
---
0x464 JUMPDEST
---
0x464: JUMPDEST 
---
Entry stack: [V12, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V123]

================================

Block 0x465
[0x465:0x465]
---
Predecessors: [0x464]
Successors: [0x466]
---
0x465 JUMPDEST
---
0x465: JUMPDEST 
---
Entry stack: [V12, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V123]

================================

Block 0x466
[0x466:0x4ac]
---
Predecessors: [0x465]
Successors: [0x66d]
---
0x466 JUMPDEST
0x467 PUSH1 0x0
0x469 DUP1
0x46a MLOAD
0x46b PUSH1 0x20
0x46d PUSH2 0xe33
0x470 DUP4
0x471 CODECOPY
0x472 DUP2
0x473 MLOAD
0x474 SWAP2
0x475 MSTORE
0x476 CALLER
0x477 DUP3
0x478 PUSH1 0x1
0x47a PUSH1 0x40
0x47c MLOAD
0x47d PUSH1 0x1
0x47f PUSH1 0xa0
0x481 PUSH1 0x2
0x483 EXP
0x484 SUB
0x485 SWAP1
0x486 SWAP4
0x487 AND
0x488 DUP4
0x489 MSTORE
0x48a PUSH1 0x20
0x48c DUP4
0x48d ADD
0x48e SWAP2
0x48f SWAP1
0x490 SWAP2
0x491 MSTORE
0x492 ISZERO
0x493 ISZERO
0x494 PUSH1 0x40
0x496 DUP1
0x497 DUP4
0x498 ADD
0x499 SWAP2
0x49a SWAP1
0x49b SWAP2
0x49c MSTORE
0x49d PUSH1 0x60
0x49f SWAP1
0x4a0 SWAP2
0x4a1 ADD
0x4a2 SWAP1
0x4a3 MLOAD
0x4a4 DUP1
0x4a5 SWAP2
0x4a6 SUB
0x4a7 SWAP1
0x4a8 LOG1
0x4a9 PUSH2 0x66d
0x4ac JUMP
---
0x466: JUMPDEST 
0x467: V422 = 0x0
0x46a: V423 = M[0x0]
0x46b: V424 = 0x20
0x46d: V425 = 0xe33
0x471: CODECOPY 0x0 0xe33 0x20
0x473: V426 = M[0x0]
0x475: M[0x0] = V423
0x476: V427 = CALLER
0x478: V428 = 0x1
0x47a: V429 = 0x40
0x47c: V430 = M[0x40]
0x47d: V431 = 0x1
0x47f: V432 = 0xa0
0x481: V433 = 0x2
0x483: V434 = EXP 0x2 0xa0
0x484: V435 = SUB 0x10000000000000000000000000000000000000000 0x1
0x487: V436 = AND V427 0xffffffffffffffffffffffffffffffffffffffff
0x489: M[V430] = V436
0x48a: V437 = 0x20
0x48d: V438 = ADD V430 0x20
0x491: M[V438] = V123
0x492: V439 = ISZERO 0x1
0x493: V440 = ISZERO 0x0
0x494: V441 = 0x40
0x498: V442 = ADD V430 0x40
0x49c: M[V442] = 0x1
0x49d: V443 = 0x60
0x4a1: V444 = ADD V430 0x60
0x4a3: V445 = M[0x40]
0x4a6: V446 = SUB V444 V445
0x4a8: LOG V445 V446 V426
0x4a9: V447 = 0x66d
0x4ac: JUMP 0x66d
---
Entry stack: [V12, V123]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V123]

================================

Block 0x4ad
[0x4ad:0x4b9]
---
Predecessors: [0x172]
Successors: [0x4ba, 0x531]
---
0x4ad JUMPDEST
0x4ae PUSH1 0x5
0x4b0 SLOAD
0x4b1 PUSH1 0x8
0x4b3 SLOAD
0x4b4 LT
0x4b5 ISZERO
0x4b6 PUSH2 0x531
0x4b9 JUMPI
---
0x4ad: JUMPDEST 
0x4ae: V448 = 0x5
0x4b0: V449 = S[0x5]
0x4b1: V450 = 0x8
0x4b3: V451 = S[0x8]
0x4b4: V452 = LT V451 V449
0x4b5: V453 = ISZERO V452
0x4b6: V454 = 0x531
0x4b9: JUMPI 0x531 V453
---
Entry stack: [V12, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V123]

================================

Block 0x4ba
[0x4ba:0x513]
---
Predecessors: [0x4ad]
Successors: [0x514, 0x518]
---
0x4ba PUSH1 0x11
0x4bc SLOAD
0x4bd PUSH1 0x9
0x4bf SLOAD
0x4c0 PUSH1 0x1
0x4c2 PUSH1 0xa0
0x4c4 PUSH1 0x2
0x4c6 EXP
0x4c7 SUB
0x4c8 SWAP1
0x4c9 SWAP2
0x4ca AND
0x4cb SWAP1
0x4cc PUSH4 0xa9059cbb
0x4d1 SWAP1
0x4d2 CALLER
0x4d3 SWAP1
0x4d4 DUP5
0x4d5 MUL
0x4d6 PUSH1 0x40
0x4d8 MLOAD
0x4d9 PUSH1 0xe0
0x4db PUSH1 0x2
0x4dd EXP
0x4de PUSH4 0xffffffff
0x4e3 DUP6
0x4e4 AND
0x4e5 MUL
0x4e6 DUP2
0x4e7 MSTORE
0x4e8 PUSH1 0x1
0x4ea PUSH1 0xa0
0x4ec PUSH1 0x2
0x4ee EXP
0x4ef SUB
0x4f0 SWAP1
0x4f1 SWAP3
0x4f2 AND
0x4f3 PUSH1 0x4
0x4f5 DUP4
0x4f6 ADD
0x4f7 MSTORE
0x4f8 PUSH1 0x24
0x4fa DUP3
0x4fb ADD
0x4fc MSTORE
0x4fd PUSH1 0x44
0x4ff ADD
0x500 PUSH1 0x0
0x502 PUSH1 0x40
0x504 MLOAD
0x505 DUP1
0x506 DUP4
0x507 SUB
0x508 DUP2
0x509 PUSH1 0x0
0x50b DUP8
0x50c DUP1
0x50d EXTCODESIZE
0x50e ISZERO
0x50f ISZERO
0x510 PUSH2 0x518
0x513 JUMPI
---
0x4ba: V455 = 0x11
0x4bc: V456 = S[0x11]
0x4bd: V457 = 0x9
0x4bf: V458 = S[0x9]
0x4c0: V459 = 0x1
0x4c2: V460 = 0xa0
0x4c4: V461 = 0x2
0x4c6: V462 = EXP 0x2 0xa0
0x4c7: V463 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ca: V464 = AND V456 0xffffffffffffffffffffffffffffffffffffffff
0x4cc: V465 = 0xa9059cbb
0x4d2: V466 = CALLER
0x4d5: V467 = MUL V123 V458
0x4d6: V468 = 0x40
0x4d8: V469 = M[0x40]
0x4d9: V470 = 0xe0
0x4db: V471 = 0x2
0x4dd: V472 = EXP 0x2 0xe0
0x4de: V473 = 0xffffffff
0x4e4: V474 = AND 0xa9059cbb 0xffffffff
0x4e5: V475 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x4e7: M[V469] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4e8: V476 = 0x1
0x4ea: V477 = 0xa0
0x4ec: V478 = 0x2
0x4ee: V479 = EXP 0x2 0xa0
0x4ef: V480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f2: V481 = AND V466 0xffffffffffffffffffffffffffffffffffffffff
0x4f3: V482 = 0x4
0x4f6: V483 = ADD V469 0x4
0x4f7: M[V483] = V481
0x4f8: V484 = 0x24
0x4fb: V485 = ADD V469 0x24
0x4fc: M[V485] = V467
0x4fd: V486 = 0x44
0x4ff: V487 = ADD 0x44 V469
0x500: V488 = 0x0
0x502: V489 = 0x40
0x504: V490 = M[0x40]
0x507: V491 = SUB V487 V490
0x509: V492 = 0x0
0x50d: V493 = EXTCODESIZE V464
0x50e: V494 = ISZERO V493
0x50f: V495 = ISZERO V494
0x510: V496 = 0x518
0x513: JUMPI 0x518 V495
---
Entry stack: [V12, V123]
Stack pops: 1
Stack additions: [S0, V464, 0xa9059cbb, V487, 0x0, V490, V491, V490, 0x0, V464]
Exit stack: [V12, V123, V464, 0xa9059cbb, V487, 0x0, V490, V491, V490, 0x0, V464]

================================

Block 0x514
[0x514:0x517]
---
Predecessors: [0x4ba]
Successors: []
---
0x514 PUSH1 0x0
0x516 DUP1
0x517 REVERT
---
0x514: V497 = 0x0
0x517: REVERT 0x0 0x0
---
Entry stack: [V12, V123, V464, 0xa9059cbb, V487, 0x0, V490, V491, V490, 0x0, V464]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V123, V464, 0xa9059cbb, V487, 0x0, V490, V491, V490, 0x0, V464]

================================

Block 0x518
[0x518:0x524]
---
Predecessors: [0x4ba, 0x53e]
Successors: [0x525, 0x529]
---
0x518 JUMPDEST
0x519 PUSH2 0x2c6
0x51c GAS
0x51d SUB
0x51e CALL
0x51f ISZERO
0x520 ISZERO
0x521 PUSH2 0x529
0x524 JUMPI
---
0x518: JUMPDEST 
0x519: V498 = 0x2c6
0x51c: V499 = GAS
0x51d: V500 = SUB V499 0x2c6
0x51e: V501 = CALL V500 S0 0x0 S2 S3 S4 0x0
0x51f: V502 = ISZERO V501
0x520: V503 = ISZERO V502
0x521: V504 = 0x529
0x524: JUMPI 0x529 V503
---
Entry stack: [V12, V123, S8, 0xa9059cbb, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V123, S8, 0xa9059cbb, S6]

================================

Block 0x525
[0x525:0x528]
---
Predecessors: [0x518]
Successors: []
---
0x525 PUSH1 0x0
0x527 DUP1
0x528 REVERT
---
0x525: V505 = 0x0
0x528: REVERT 0x0 0x0
---
Entry stack: [V12, V123, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V123, S2, 0xa9059cbb, S0]

================================

Block 0x529
[0x529:0x530]
---
Predecessors: [0x518, 0x59c]
Successors: [0x629]
---
0x529 JUMPDEST
0x52a POP
0x52b POP
0x52c POP
0x52d PUSH2 0x629
0x530 JUMP
---
0x529: JUMPDEST 
0x52d: V506 = 0x629
0x530: JUMP 0x629
---
Entry stack: [V12, V123, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V123]

================================

Block 0x531
[0x531:0x53d]
---
Predecessors: [0x4ad]
Successors: [0x53e, 0x5b5]
---
0x531 JUMPDEST
0x532 PUSH1 0x6
0x534 SLOAD
0x535 PUSH1 0x8
0x537 SLOAD
0x538 LT
0x539 ISZERO
0x53a PUSH2 0x5b5
0x53d JUMPI
---
0x531: JUMPDEST 
0x532: V507 = 0x6
0x534: V508 = S[0x6]
0x535: V509 = 0x8
0x537: V510 = S[0x8]
0x538: V511 = LT V510 V508
0x539: V512 = ISZERO V511
0x53a: V513 = 0x5b5
0x53d: JUMPI 0x5b5 V512
---
Entry stack: [V12, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V123]

================================

Block 0x53e
[0x53e:0x597]
---
Predecessors: [0x531]
Successors: [0x518, 0x598]
---
0x53e PUSH1 0x11
0x540 SLOAD
0x541 PUSH1 0xa
0x543 SLOAD
0x544 PUSH1 0x1
0x546 PUSH1 0xa0
0x548 PUSH1 0x2
0x54a EXP
0x54b SUB
0x54c SWAP1
0x54d SWAP2
0x54e AND
0x54f SWAP1
0x550 PUSH4 0xa9059cbb
0x555 SWAP1
0x556 CALLER
0x557 SWAP1
0x558 DUP5
0x559 MUL
0x55a PUSH1 0x40
0x55c MLOAD
0x55d PUSH1 0xe0
0x55f PUSH1 0x2
0x561 EXP
0x562 PUSH4 0xffffffff
0x567 DUP6
0x568 AND
0x569 MUL
0x56a DUP2
0x56b MSTORE
0x56c PUSH1 0x1
0x56e PUSH1 0xa0
0x570 PUSH1 0x2
0x572 EXP
0x573 SUB
0x574 SWAP1
0x575 SWAP3
0x576 AND
0x577 PUSH1 0x4
0x579 DUP4
0x57a ADD
0x57b MSTORE
0x57c PUSH1 0x24
0x57e DUP3
0x57f ADD
0x580 MSTORE
0x581 PUSH1 0x44
0x583 ADD
0x584 PUSH1 0x0
0x586 PUSH1 0x40
0x588 MLOAD
0x589 DUP1
0x58a DUP4
0x58b SUB
0x58c DUP2
0x58d PUSH1 0x0
0x58f DUP8
0x590 DUP1
0x591 EXTCODESIZE
0x592 ISZERO
0x593 ISZERO
0x594 PUSH2 0x518
0x597 JUMPI
---
0x53e: V514 = 0x11
0x540: V515 = S[0x11]
0x541: V516 = 0xa
0x543: V517 = S[0xa]
0x544: V518 = 0x1
0x546: V519 = 0xa0
0x548: V520 = 0x2
0x54a: V521 = EXP 0x2 0xa0
0x54b: V522 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54e: V523 = AND V515 0xffffffffffffffffffffffffffffffffffffffff
0x550: V524 = 0xa9059cbb
0x556: V525 = CALLER
0x559: V526 = MUL V123 V517
0x55a: V527 = 0x40
0x55c: V528 = M[0x40]
0x55d: V529 = 0xe0
0x55f: V530 = 0x2
0x561: V531 = EXP 0x2 0xe0
0x562: V532 = 0xffffffff
0x568: V533 = AND 0xa9059cbb 0xffffffff
0x569: V534 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x56b: M[V528] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x56c: V535 = 0x1
0x56e: V536 = 0xa0
0x570: V537 = 0x2
0x572: V538 = EXP 0x2 0xa0
0x573: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x576: V540 = AND V525 0xffffffffffffffffffffffffffffffffffffffff
0x577: V541 = 0x4
0x57a: V542 = ADD V528 0x4
0x57b: M[V542] = V540
0x57c: V543 = 0x24
0x57f: V544 = ADD V528 0x24
0x580: M[V544] = V526
0x581: V545 = 0x44
0x583: V546 = ADD 0x44 V528
0x584: V547 = 0x0
0x586: V548 = 0x40
0x588: V549 = M[0x40]
0x58b: V550 = SUB V546 V549
0x58d: V551 = 0x0
0x591: V552 = EXTCODESIZE V523
0x592: V553 = ISZERO V552
0x593: V554 = ISZERO V553
0x594: V555 = 0x518
0x597: JUMPI 0x518 V554
---
Entry stack: [V12, V123]
Stack pops: 1
Stack additions: [S0, V523, 0xa9059cbb, V546, 0x0, V549, V550, V549, 0x0, V523]
Exit stack: [V12, V123, V523, 0xa9059cbb, V546, 0x0, V549, V550, V549, 0x0, V523]

================================

Block 0x598
[0x598:0x59b]
---
Predecessors: [0x53e]
Successors: []
---
0x598 PUSH1 0x0
0x59a DUP1
0x59b REVERT
---
0x598: V556 = 0x0
0x59b: REVERT 0x0 0x0
---
Entry stack: [V12, V123, V523, 0xa9059cbb, V546, 0x0, V549, V550, V549, 0x0, V523]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V123, V523, 0xa9059cbb, V546, 0x0, V549, V550, V549, 0x0, V523]

================================

Block 0x59c
[0x59c:0x5a8]
---
Predecessors: []
Successors: [0x529, 0x5a9]
---
0x59c JUMPDEST
0x59d PUSH2 0x2c6
0x5a0 GAS
0x5a1 SUB
0x5a2 CALL
0x5a3 ISZERO
0x5a4 ISZERO
0x5a5 PUSH2 0x529
0x5a8 JUMPI
---
0x59c: JUMPDEST 
0x59d: V557 = 0x2c6
0x5a0: V558 = GAS
0x5a1: V559 = SUB V558 0x2c6
0x5a2: V560 = CALL V559 S0 S1 S2 S3 S4 S5
0x5a3: V561 = ISZERO V560
0x5a4: V562 = ISZERO V561
0x5a5: V563 = 0x529
0x5a8: JUMPI 0x529 V562
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x5a9
[0x5a9:0x5b4]
---
Predecessors: [0x59c]
Successors: [0x629]
---
0x5a9 PUSH1 0x0
0x5ab DUP1
0x5ac REVERT
0x5ad JUMPDEST
0x5ae POP
0x5af POP
0x5b0 POP
0x5b1 PUSH2 0x629
0x5b4 JUMP
---
0x5a9: V564 = 0x0
0x5ac: REVERT 0x0 0x0
0x5ad: JUMPDEST 
0x5b1: V565 = 0x629
0x5b4: JUMP 0x629
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5b5
[0x5b5:0x60f]
---
Predecessors: [0x531]
Successors: [0x610, 0x614]
---
0x5b5 JUMPDEST
0x5b6 PUSH1 0x11
0x5b8 SLOAD
0x5b9 PUSH1 0xb
0x5bb SLOAD
0x5bc PUSH1 0x1
0x5be PUSH1 0xa0
0x5c0 PUSH1 0x2
0x5c2 EXP
0x5c3 SUB
0x5c4 SWAP1
0x5c5 SWAP2
0x5c6 AND
0x5c7 SWAP1
0x5c8 PUSH4 0xa9059cbb
0x5cd SWAP1
0x5ce CALLER
0x5cf SWAP1
0x5d0 DUP5
0x5d1 MUL
0x5d2 PUSH1 0x40
0x5d4 MLOAD
0x5d5 PUSH1 0xe0
0x5d7 PUSH1 0x2
0x5d9 EXP
0x5da PUSH4 0xffffffff
0x5df DUP6
0x5e0 AND
0x5e1 MUL
0x5e2 DUP2
0x5e3 MSTORE
0x5e4 PUSH1 0x1
0x5e6 PUSH1 0xa0
0x5e8 PUSH1 0x2
0x5ea EXP
0x5eb SUB
0x5ec SWAP1
0x5ed SWAP3
0x5ee AND
0x5ef PUSH1 0x4
0x5f1 DUP4
0x5f2 ADD
0x5f3 MSTORE
0x5f4 PUSH1 0x24
0x5f6 DUP3
0x5f7 ADD
0x5f8 MSTORE
0x5f9 PUSH1 0x44
0x5fb ADD
0x5fc PUSH1 0x0
0x5fe PUSH1 0x40
0x600 MLOAD
0x601 DUP1
0x602 DUP4
0x603 SUB
0x604 DUP2
0x605 PUSH1 0x0
0x607 DUP8
0x608 DUP1
0x609 EXTCODESIZE
0x60a ISZERO
0x60b ISZERO
0x60c PUSH2 0x614
0x60f JUMPI
---
0x5b5: JUMPDEST 
0x5b6: V566 = 0x11
0x5b8: V567 = S[0x11]
0x5b9: V568 = 0xb
0x5bb: V569 = S[0xb]
0x5bc: V570 = 0x1
0x5be: V571 = 0xa0
0x5c0: V572 = 0x2
0x5c2: V573 = EXP 0x2 0xa0
0x5c3: V574 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c6: V575 = AND V567 0xffffffffffffffffffffffffffffffffffffffff
0x5c8: V576 = 0xa9059cbb
0x5ce: V577 = CALLER
0x5d1: V578 = MUL V123 V569
0x5d2: V579 = 0x40
0x5d4: V580 = M[0x40]
0x5d5: V581 = 0xe0
0x5d7: V582 = 0x2
0x5d9: V583 = EXP 0x2 0xe0
0x5da: V584 = 0xffffffff
0x5e0: V585 = AND 0xa9059cbb 0xffffffff
0x5e1: V586 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x5e3: M[V580] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5e4: V587 = 0x1
0x5e6: V588 = 0xa0
0x5e8: V589 = 0x2
0x5ea: V590 = EXP 0x2 0xa0
0x5eb: V591 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ee: V592 = AND V577 0xffffffffffffffffffffffffffffffffffffffff
0x5ef: V593 = 0x4
0x5f2: V594 = ADD V580 0x4
0x5f3: M[V594] = V592
0x5f4: V595 = 0x24
0x5f7: V596 = ADD V580 0x24
0x5f8: M[V596] = V578
0x5f9: V597 = 0x44
0x5fb: V598 = ADD 0x44 V580
0x5fc: V599 = 0x0
0x5fe: V600 = 0x40
0x600: V601 = M[0x40]
0x603: V602 = SUB V598 V601
0x605: V603 = 0x0
0x609: V604 = EXTCODESIZE V575
0x60a: V605 = ISZERO V604
0x60b: V606 = ISZERO V605
0x60c: V607 = 0x614
0x60f: JUMPI 0x614 V606
---
Entry stack: [V12, V123]
Stack pops: 1
Stack additions: [S0, V575, 0xa9059cbb, V598, 0x0, V601, V602, V601, 0x0, V575]
Exit stack: [V12, V123, V575, 0xa9059cbb, V598, 0x0, V601, V602, V601, 0x0, V575]

================================

Block 0x610
[0x610:0x613]
---
Predecessors: [0x5b5]
Successors: []
---
0x610 PUSH1 0x0
0x612 DUP1
0x613 REVERT
---
0x610: V608 = 0x0
0x613: REVERT 0x0 0x0
---
Entry stack: [V12, V123, V575, 0xa9059cbb, V598, 0x0, V601, V602, V601, 0x0, V575]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V123, V575, 0xa9059cbb, V598, 0x0, V601, V602, V601, 0x0, V575]

================================

Block 0x614
[0x614:0x620]
---
Predecessors: [0x5b5]
Successors: [0x621, 0x625]
---
0x614 JUMPDEST
0x615 PUSH2 0x2c6
0x618 GAS
0x619 SUB
0x61a CALL
0x61b ISZERO
0x61c ISZERO
0x61d PUSH2 0x625
0x620 JUMPI
---
0x614: JUMPDEST 
0x615: V609 = 0x2c6
0x618: V610 = GAS
0x619: V611 = SUB V610 0x2c6
0x61a: V612 = CALL V611 V575 0x0 V601 V602 V601 0x0
0x61b: V613 = ISZERO V612
0x61c: V614 = ISZERO V613
0x61d: V615 = 0x625
0x620: JUMPI 0x625 V614
---
Entry stack: [V12, V123, V575, 0xa9059cbb, V598, 0x0, V601, V602, V601, 0x0, V575]
Stack pops: 6
Stack additions: []
Exit stack: [V12, V123, V575, 0xa9059cbb, V598]

================================

Block 0x621
[0x621:0x624]
---
Predecessors: [0x614]
Successors: []
---
0x621 PUSH1 0x0
0x623 DUP1
0x624 REVERT
---
0x621: V616 = 0x0
0x624: REVERT 0x0 0x0
---
Entry stack: [V12, V123, V575, 0xa9059cbb, V598]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V123, V575, 0xa9059cbb, V598]

================================

Block 0x625
[0x625:0x628]
---
Predecessors: [0x614]
Successors: [0x629]
---
0x625 JUMPDEST
0x626 POP
0x627 POP
0x628 POP
---
0x625: JUMPDEST 
---
Entry stack: [V12, V123, V575, 0xa9059cbb, V598]
Stack pops: 3
Stack additions: []
Exit stack: [V12, V123]

================================

Block 0x629
[0x629:0x629]
---
Predecessors: [0x529, 0x5a9, 0x625]
Successors: [0x62a]
---
0x629 JUMPDEST
---
0x629: JUMPDEST 
---
Entry stack: [V12, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V123]

================================

Block 0x62a
[0x62a:0x66c]
---
Predecessors: [0x629]
Successors: [0x66d]
---
0x62a JUMPDEST
0x62b PUSH1 0x0
0x62d DUP1
0x62e MLOAD
0x62f PUSH1 0x20
0x631 PUSH2 0xe33
0x634 DUP4
0x635 CODECOPY
0x636 DUP2
0x637 MLOAD
0x638 SWAP2
0x639 MSTORE
0x63a CALLER
0x63b DUP3
0x63c PUSH1 0x1
0x63e PUSH1 0x40
0x640 MLOAD
0x641 PUSH1 0x1
0x643 PUSH1 0xa0
0x645 PUSH1 0x2
0x647 EXP
0x648 SUB
0x649 SWAP1
0x64a SWAP4
0x64b AND
0x64c DUP4
0x64d MSTORE
0x64e PUSH1 0x20
0x650 DUP4
0x651 ADD
0x652 SWAP2
0x653 SWAP1
0x654 SWAP2
0x655 MSTORE
0x656 ISZERO
0x657 ISZERO
0x658 PUSH1 0x40
0x65a DUP1
0x65b DUP4
0x65c ADD
0x65d SWAP2
0x65e SWAP1
0x65f SWAP2
0x660 MSTORE
0x661 PUSH1 0x60
0x663 SWAP1
0x664 SWAP2
0x665 ADD
0x666 SWAP1
0x667 MLOAD
0x668 DUP1
0x669 SWAP2
0x66a SUB
0x66b SWAP1
0x66c LOG1
---
0x62a: JUMPDEST 
0x62b: V617 = 0x0
0x62e: V618 = M[0x0]
0x62f: V619 = 0x20
0x631: V620 = 0xe33
0x635: CODECOPY 0x0 0xe33 0x20
0x637: V621 = M[0x0]
0x639: M[0x0] = V618
0x63a: V622 = CALLER
0x63c: V623 = 0x1
0x63e: V624 = 0x40
0x640: V625 = M[0x40]
0x641: V626 = 0x1
0x643: V627 = 0xa0
0x645: V628 = 0x2
0x647: V629 = EXP 0x2 0xa0
0x648: V630 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64b: V631 = AND V622 0xffffffffffffffffffffffffffffffffffffffff
0x64d: M[V625] = V631
0x64e: V632 = 0x20
0x651: V633 = ADD V625 0x20
0x655: M[V633] = V123
0x656: V634 = ISZERO 0x1
0x657: V635 = ISZERO 0x0
0x658: V636 = 0x40
0x65c: V637 = ADD V625 0x40
0x660: M[V637] = 0x1
0x661: V638 = 0x60
0x665: V639 = ADD V625 0x60
0x667: V640 = M[0x40]
0x66a: V641 = SUB V639 V640
0x66c: LOG V640 V641 V621
---
Entry stack: [V12, V123]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, V123]

================================

Block 0x66d
[0x66d:0x66d]
---
Predecessors: [0x466, 0x62a]
Successors: [0x66e]
---
0x66d JUMPDEST
---
0x66d: JUMPDEST 
---
Entry stack: [V12, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V123]

================================

Block 0x66e
[0x66e:0x670]
---
Predecessors: [0x66d]
Successors: []
---
0x66e JUMPDEST
0x66f POP
0x670 STOP
---
0x66e: JUMPDEST 
0x670: STOP 
---
Entry stack: [V12, V123]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x671
[0x671:0x677]
---
Predecessors: [0xb]
Successors: [0x678, 0x67c]
---
0x671 JUMPDEST
0x672 CALLVALUE
0x673 ISZERO
0x674 PUSH2 0x67c
0x677 JUMPI
---
0x671: JUMPDEST 
0x672: V642 = CALLVALUE
0x673: V643 = ISZERO V642
0x674: V644 = 0x67c
0x677: JUMPI 0x67c V643
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x678
[0x678:0x67b]
---
Predecessors: [0x671]
Successors: []
---
0x678 PUSH1 0x0
0x67a DUP1
0x67b REVERT
---
0x678: V645 = 0x0
0x67b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x67c
[0x67c:0x683]
---
Predecessors: [0x671]
Successors: [0xa65]
---
0x67c JUMPDEST
0x67d PUSH2 0x684
0x680 PUSH2 0xa65
0x683 JUMP
---
0x67c: JUMPDEST 
0x67d: V646 = 0x684
0x680: V647 = 0xa65
0x683: JUMP 0xa65
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x684]
Exit stack: [V12, 0x684]

================================

Block 0x684
[0x684:0x685]
---
Predecessors: [0xaae, 0xb44, 0xb98, 0xc22, 0xc4c, 0xca1, 0xe2f]
Successors: []
---
0x684 JUMPDEST
0x685 STOP
---
0x684: JUMPDEST 
0x685: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x686
[0x686:0x68c]
---
Predecessors: [0x25]
Successors: [0x68d, 0x691]
---
0x686 JUMPDEST
0x687 CALLVALUE
0x688 ISZERO
0x689 PUSH2 0x691
0x68c JUMPI
---
0x686: JUMPDEST 
0x687: V648 = CALLVALUE
0x688: V649 = ISZERO V648
0x689: V650 = 0x691
0x68c: JUMPI 0x691 V649
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x68d
[0x68d:0x690]
---
Predecessors: [0x686]
Successors: []
---
0x68d PUSH1 0x0
0x68f DUP1
0x690 REVERT
---
0x68d: V651 = 0x0
0x690: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x691
[0x691:0x698]
---
Predecessors: [0x686]
Successors: [0xab0]
---
0x691 JUMPDEST
0x692 PUSH2 0x699
0x695 PUSH2 0xab0
0x698 JUMP
---
0x691: JUMPDEST 
0x692: V652 = 0x699
0x695: V653 = 0xab0
0x698: JUMP 0xab0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x699]
Exit stack: [V12, 0x699]

================================

Block 0x699
[0x699:0x6aa]
---
Predecessors: [0xab0, 0xb47, 0xb4d, 0xb53, 0xb68, 0xb6e, 0xbc7, 0xbd9, 0xbdf, 0xbe5, 0xbeb, 0xbf1, 0xbf7, 0xc4e, 0xc54, 0xc5a]
Successors: []
---
0x699 JUMPDEST
0x69a PUSH1 0x40
0x69c MLOAD
0x69d SWAP1
0x69e DUP2
0x69f MSTORE
0x6a0 PUSH1 0x20
0x6a2 ADD
0x6a3 PUSH1 0x40
0x6a5 MLOAD
0x6a6 DUP1
0x6a7 SWAP2
0x6a8 SUB
0x6a9 SWAP1
0x6aa RETURN
---
0x699: JUMPDEST 
0x69a: V654 = 0x40
0x69c: V655 = M[0x40]
0x69f: M[V655] = S0
0x6a0: V656 = 0x20
0x6a2: V657 = ADD 0x20 V655
0x6a3: V658 = 0x40
0x6a5: V659 = M[0x40]
0x6a8: V660 = SUB V657 V659
0x6aa: RETURN V659 V660
---
Entry stack: [V12, 0x699, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x699]

================================

Block 0x6ab
[0x6ab:0x6b1]
---
Predecessors: [0x30]
Successors: [0x6b2, 0x6b6]
---
0x6ab JUMPDEST
0x6ac CALLVALUE
0x6ad ISZERO
0x6ae PUSH2 0x6b6
0x6b1 JUMPI
---
0x6ab: JUMPDEST 
0x6ac: V661 = CALLVALUE
0x6ad: V662 = ISZERO V661
0x6ae: V663 = 0x6b6
0x6b1: JUMPI 0x6b6 V662
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6b2
[0x6b2:0x6b5]
---
Predecessors: [0x6ab]
Successors: []
---
0x6b2 PUSH1 0x0
0x6b4 DUP1
0x6b5 REVERT
---
0x6b2: V664 = 0x0
0x6b5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6b6
[0x6b6:0x6c0]
---
Predecessors: [0x6ab]
Successors: [0xab6]
---
0x6b6 JUMPDEST
0x6b7 PUSH2 0x684
0x6ba PUSH1 0x4
0x6bc CALLDATALOAD
0x6bd PUSH2 0xab6
0x6c0 JUMP
---
0x6b6: JUMPDEST 
0x6b7: V665 = 0x684
0x6ba: V666 = 0x4
0x6bc: V667 = CALLDATALOAD 0x4
0x6bd: V668 = 0xab6
0x6c0: JUMP 0xab6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x684, V667]
Exit stack: [V12, 0x684, V667]

================================

Block 0x6c1
[0x6c1:0x6c2]
---
Predecessors: []
Successors: []
---
0x6c1 JUMPDEST
0x6c2 STOP
---
0x6c1: JUMPDEST 
0x6c2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6c3
[0x6c3:0x6c9]
---
Predecessors: [0x3b]
Successors: [0x6ca, 0x6ce]
---
0x6c3 JUMPDEST
0x6c4 CALLVALUE
0x6c5 ISZERO
0x6c6 PUSH2 0x6ce
0x6c9 JUMPI
---
0x6c3: JUMPDEST 
0x6c4: V669 = CALLVALUE
0x6c5: V670 = ISZERO V669
0x6c6: V671 = 0x6ce
0x6c9: JUMPI 0x6ce V670
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6ca
[0x6ca:0x6cd]
---
Predecessors: [0x6c3]
Successors: []
---
0x6ca PUSH1 0x0
0x6cc DUP1
0x6cd REVERT
---
0x6ca: V672 = 0x0
0x6cd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6ce
[0x6ce:0x6d5]
---
Predecessors: [0x6c3]
Successors: [0xb47]
---
0x6ce JUMPDEST
0x6cf PUSH2 0x699
0x6d2 PUSH2 0xb47
0x6d5 JUMP
---
0x6ce: JUMPDEST 
0x6cf: V673 = 0x699
0x6d2: V674 = 0xb47
0x6d5: JUMP 0xb47
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x699]
Exit stack: [V12, 0x699]

================================

Block 0x6d6
[0x6d6:0x6e7]
---
Predecessors: []
Successors: []
---
0x6d6 JUMPDEST
0x6d7 PUSH1 0x40
0x6d9 MLOAD
0x6da SWAP1
0x6db DUP2
0x6dc MSTORE
0x6dd PUSH1 0x20
0x6df ADD
0x6e0 PUSH1 0x40
0x6e2 MLOAD
0x6e3 DUP1
0x6e4 SWAP2
0x6e5 SUB
0x6e6 SWAP1
0x6e7 RETURN
---
0x6d6: JUMPDEST 
0x6d7: V675 = 0x40
0x6d9: V676 = M[0x40]
0x6dc: M[V676] = S0
0x6dd: V677 = 0x20
0x6df: V678 = ADD 0x20 V676
0x6e0: V679 = 0x40
0x6e2: V680 = M[0x40]
0x6e5: V681 = SUB V678 V680
0x6e7: RETURN V680 V681
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6e8
[0x6e8:0x6ee]
---
Predecessors: [0x46]
Successors: [0x6ef, 0x6f3]
---
0x6e8 JUMPDEST
0x6e9 CALLVALUE
0x6ea ISZERO
0x6eb PUSH2 0x6f3
0x6ee JUMPI
---
0x6e8: JUMPDEST 
0x6e9: V682 = CALLVALUE
0x6ea: V683 = ISZERO V682
0x6eb: V684 = 0x6f3
0x6ee: JUMPI 0x6f3 V683
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6ef
[0x6ef:0x6f2]
---
Predecessors: [0x6e8]
Successors: []
---
0x6ef PUSH1 0x0
0x6f1 DUP1
0x6f2 REVERT
---
0x6ef: V685 = 0x0
0x6f2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6f3
[0x6f3:0x6fa]
---
Predecessors: [0x6e8]
Successors: [0xb4d]
---
0x6f3 JUMPDEST
0x6f4 PUSH2 0x699
0x6f7 PUSH2 0xb4d
0x6fa JUMP
---
0x6f3: JUMPDEST 
0x6f4: V686 = 0x699
0x6f7: V687 = 0xb4d
0x6fa: JUMP 0xb4d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x699]
Exit stack: [V12, 0x699]

================================

Block 0x6fb
[0x6fb:0x70c]
---
Predecessors: []
Successors: []
---
0x6fb JUMPDEST
0x6fc PUSH1 0x40
0x6fe MLOAD
0x6ff SWAP1
0x700 DUP2
0x701 MSTORE
0x702 PUSH1 0x20
0x704 ADD
0x705 PUSH1 0x40
0x707 MLOAD
0x708 DUP1
0x709 SWAP2
0x70a SUB
0x70b SWAP1
0x70c RETURN
---
0x6fb: JUMPDEST 
0x6fc: V688 = 0x40
0x6fe: V689 = M[0x40]
0x701: M[V689] = S0
0x702: V690 = 0x20
0x704: V691 = ADD 0x20 V689
0x705: V692 = 0x40
0x707: V693 = M[0x40]
0x70a: V694 = SUB V691 V693
0x70c: RETURN V693 V694
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x70d
[0x70d:0x713]
---
Predecessors: [0x51]
Successors: [0x714, 0x718]
---
0x70d JUMPDEST
0x70e CALLVALUE
0x70f ISZERO
0x710 PUSH2 0x718
0x713 JUMPI
---
0x70d: JUMPDEST 
0x70e: V695 = CALLVALUE
0x70f: V696 = ISZERO V695
0x710: V697 = 0x718
0x713: JUMPI 0x718 V696
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x714
[0x714:0x717]
---
Predecessors: [0x70d]
Successors: []
---
0x714 PUSH1 0x0
0x716 DUP1
0x717 REVERT
---
0x714: V698 = 0x0
0x717: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x718
[0x718:0x71f]
---
Predecessors: [0x70d]
Successors: [0xb53]
---
0x718 JUMPDEST
0x719 PUSH2 0x699
0x71c PUSH2 0xb53
0x71f JUMP
---
0x718: JUMPDEST 
0x719: V699 = 0x699
0x71c: V700 = 0xb53
0x71f: JUMP 0xb53
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x699]
Exit stack: [V12, 0x699]

================================

Block 0x720
[0x720:0x731]
---
Predecessors: []
Successors: []
---
0x720 JUMPDEST
0x721 PUSH1 0x40
0x723 MLOAD
0x724 SWAP1
0x725 DUP2
0x726 MSTORE
0x727 PUSH1 0x20
0x729 ADD
0x72a PUSH1 0x40
0x72c MLOAD
0x72d DUP1
0x72e SWAP2
0x72f SUB
0x730 SWAP1
0x731 RETURN
---
0x720: JUMPDEST 
0x721: V701 = 0x40
0x723: V702 = M[0x40]
0x726: M[V702] = S0
0x727: V703 = 0x20
0x729: V704 = ADD 0x20 V702
0x72a: V705 = 0x40
0x72c: V706 = M[0x40]
0x72f: V707 = SUB V704 V706
0x731: RETURN V706 V707
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x732
[0x732:0x738]
---
Predecessors: [0x5c]
Successors: [0x739, 0x73d]
---
0x732 JUMPDEST
0x733 CALLVALUE
0x734 ISZERO
0x735 PUSH2 0x73d
0x738 JUMPI
---
0x732: JUMPDEST 
0x733: V708 = CALLVALUE
0x734: V709 = ISZERO V708
0x735: V710 = 0x73d
0x738: JUMPI 0x73d V709
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x739
[0x739:0x73c]
---
Predecessors: [0x732]
Successors: []
---
0x739 PUSH1 0x0
0x73b DUP1
0x73c REVERT
---
0x739: V711 = 0x0
0x73c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x73d
[0x73d:0x744]
---
Predecessors: [0x732]
Successors: [0xb59]
---
0x73d JUMPDEST
0x73e PUSH2 0x745
0x741 PUSH2 0xb59
0x744 JUMP
---
0x73d: JUMPDEST 
0x73e: V712 = 0x745
0x741: V713 = 0xb59
0x744: JUMP 0xb59
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x745]
Exit stack: [V12, 0x745]

================================

Block 0x745
[0x745:0x760]
---
Predecessors: [0xb59, 0xb9a, 0xbb8]
Successors: []
---
0x745 JUMPDEST
0x746 PUSH1 0x40
0x748 MLOAD
0x749 PUSH1 0x1
0x74b PUSH1 0xa0
0x74d PUSH1 0x2
0x74f EXP
0x750 SUB
0x751 SWAP1
0x752 SWAP2
0x753 AND
0x754 DUP2
0x755 MSTORE
0x756 PUSH1 0x20
0x758 ADD
0x759 PUSH1 0x40
0x75b MLOAD
0x75c DUP1
0x75d SWAP2
0x75e SUB
0x75f SWAP1
0x760 RETURN
---
0x745: JUMPDEST 
0x746: V714 = 0x40
0x748: V715 = M[0x40]
0x749: V716 = 0x1
0x74b: V717 = 0xa0
0x74d: V718 = 0x2
0x74f: V719 = EXP 0x2 0xa0
0x750: V720 = SUB 0x10000000000000000000000000000000000000000 0x1
0x753: V721 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x755: M[V715] = V721
0x756: V722 = 0x20
0x758: V723 = ADD 0x20 V715
0x759: V724 = 0x40
0x75b: V725 = M[0x40]
0x75e: V726 = SUB V723 V725
0x760: RETURN V725 V726
---
Entry stack: [V12, 0x745, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x745]

================================

Block 0x761
[0x761:0x767]
---
Predecessors: [0x67]
Successors: [0x768, 0x76c]
---
0x761 JUMPDEST
0x762 CALLVALUE
0x763 ISZERO
0x764 PUSH2 0x76c
0x767 JUMPI
---
0x761: JUMPDEST 
0x762: V727 = CALLVALUE
0x763: V728 = ISZERO V727
0x764: V729 = 0x76c
0x767: JUMPI 0x76c V728
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x768
[0x768:0x76b]
---
Predecessors: [0x761]
Successors: []
---
0x768 PUSH1 0x0
0x76a DUP1
0x76b REVERT
---
0x768: V730 = 0x0
0x76b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x76c
[0x76c:0x773]
---
Predecessors: [0x761]
Successors: [0xb68]
---
0x76c JUMPDEST
0x76d PUSH2 0x699
0x770 PUSH2 0xb68
0x773 JUMP
---
0x76c: JUMPDEST 
0x76d: V731 = 0x699
0x770: V732 = 0xb68
0x773: JUMP 0xb68
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x699]
Exit stack: [V12, 0x699]

================================

Block 0x774
[0x774:0x785]
---
Predecessors: []
Successors: []
---
0x774 JUMPDEST
0x775 PUSH1 0x40
0x777 MLOAD
0x778 SWAP1
0x779 DUP2
0x77a MSTORE
0x77b PUSH1 0x20
0x77d ADD
0x77e PUSH1 0x40
0x780 MLOAD
0x781 DUP1
0x782 SWAP2
0x783 SUB
0x784 SWAP1
0x785 RETURN
---
0x774: JUMPDEST 
0x775: V733 = 0x40
0x777: V734 = M[0x40]
0x77a: M[V734] = S0
0x77b: V735 = 0x20
0x77d: V736 = ADD 0x20 V734
0x77e: V737 = 0x40
0x780: V738 = M[0x40]
0x783: V739 = SUB V736 V738
0x785: RETURN V738 V739
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x786
[0x786:0x78c]
---
Predecessors: [0x72]
Successors: [0x78d, 0x791]
---
0x786 JUMPDEST
0x787 CALLVALUE
0x788 ISZERO
0x789 PUSH2 0x791
0x78c JUMPI
---
0x786: JUMPDEST 
0x787: V740 = CALLVALUE
0x788: V741 = ISZERO V740
0x789: V742 = 0x791
0x78c: JUMPI 0x791 V741
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x78d
[0x78d:0x790]
---
Predecessors: [0x786]
Successors: []
---
0x78d PUSH1 0x0
0x78f DUP1
0x790 REVERT
---
0x78d: V743 = 0x0
0x790: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x791
[0x791:0x798]
---
Predecessors: [0x786]
Successors: [0xb6e]
---
0x791 JUMPDEST
0x792 PUSH2 0x699
0x795 PUSH2 0xb6e
0x798 JUMP
---
0x791: JUMPDEST 
0x792: V744 = 0x699
0x795: V745 = 0xb6e
0x798: JUMP 0xb6e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x699]
Exit stack: [V12, 0x699]

================================

Block 0x799
[0x799:0x7aa]
---
Predecessors: []
Successors: []
---
0x799 JUMPDEST
0x79a PUSH1 0x40
0x79c MLOAD
0x79d SWAP1
0x79e DUP2
0x79f MSTORE
0x7a0 PUSH1 0x20
0x7a2 ADD
0x7a3 PUSH1 0x40
0x7a5 MLOAD
0x7a6 DUP1
0x7a7 SWAP2
0x7a8 SUB
0x7a9 SWAP1
0x7aa RETURN
---
0x799: JUMPDEST 
0x79a: V746 = 0x40
0x79c: V747 = M[0x40]
0x79f: M[V747] = S0
0x7a0: V748 = 0x20
0x7a2: V749 = ADD 0x20 V747
0x7a3: V750 = 0x40
0x7a5: V751 = M[0x40]
0x7a8: V752 = SUB V749 V751
0x7aa: RETURN V751 V752
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7ab
[0x7ab:0x7b1]
---
Predecessors: [0x7d]
Successors: [0x7b2, 0x7b6]
---
0x7ab JUMPDEST
0x7ac CALLVALUE
0x7ad ISZERO
0x7ae PUSH2 0x7b6
0x7b1 JUMPI
---
0x7ab: JUMPDEST 
0x7ac: V753 = CALLVALUE
0x7ad: V754 = ISZERO V753
0x7ae: V755 = 0x7b6
0x7b1: JUMPI 0x7b6 V754
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b2
[0x7b2:0x7b5]
---
Predecessors: [0x7ab]
Successors: []
---
0x7b2 PUSH1 0x0
0x7b4 DUP1
0x7b5 REVERT
---
0x7b2: V756 = 0x0
0x7b5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b6
[0x7b6:0x7bd]
---
Predecessors: [0x7ab]
Successors: [0xb74]
---
0x7b6 JUMPDEST
0x7b7 PUSH2 0x684
0x7ba PUSH2 0xb74
0x7bd JUMP
---
0x7b6: JUMPDEST 
0x7b7: V757 = 0x684
0x7ba: V758 = 0xb74
0x7bd: JUMP 0xb74
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x684]
Exit stack: [V12, 0x684]

================================

Block 0x7be
[0x7be:0x7bf]
---
Predecessors: []
Successors: []
---
0x7be JUMPDEST
0x7bf STOP
---
0x7be: JUMPDEST 
0x7bf: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7c0
[0x7c0:0x7c6]
---
Predecessors: [0x88]
Successors: [0x7c7, 0x7cb]
---
0x7c0 JUMPDEST
0x7c1 CALLVALUE
0x7c2 ISZERO
0x7c3 PUSH2 0x7cb
0x7c6 JUMPI
---
0x7c0: JUMPDEST 
0x7c1: V759 = CALLVALUE
0x7c2: V760 = ISZERO V759
0x7c3: V761 = 0x7cb
0x7c6: JUMPI 0x7cb V760
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7c7
[0x7c7:0x7ca]
---
Predecessors: [0x7c0]
Successors: []
---
0x7c7 PUSH1 0x0
0x7c9 DUP1
0x7ca REVERT
---
0x7c7: V762 = 0x0
0x7ca: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7cb
[0x7cb:0x7d2]
---
Predecessors: [0x7c0]
Successors: [0xb9a]
---
0x7cb JUMPDEST
0x7cc PUSH2 0x745
0x7cf PUSH2 0xb9a
0x7d2 JUMP
---
0x7cb: JUMPDEST 
0x7cc: V763 = 0x745
0x7cf: V764 = 0xb9a
0x7d2: JUMP 0xb9a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x745]
Exit stack: [V12, 0x745]

================================

Block 0x7d3
[0x7d3:0x7ee]
---
Predecessors: []
Successors: []
---
0x7d3 JUMPDEST
0x7d4 PUSH1 0x40
0x7d6 MLOAD
0x7d7 PUSH1 0x1
0x7d9 PUSH1 0xa0
0x7db PUSH1 0x2
0x7dd EXP
0x7de SUB
0x7df SWAP1
0x7e0 SWAP2
0x7e1 AND
0x7e2 DUP2
0x7e3 MSTORE
0x7e4 PUSH1 0x20
0x7e6 ADD
0x7e7 PUSH1 0x40
0x7e9 MLOAD
0x7ea DUP1
0x7eb SWAP2
0x7ec SUB
0x7ed SWAP1
0x7ee RETURN
---
0x7d3: JUMPDEST 
0x7d4: V765 = 0x40
0x7d6: V766 = M[0x40]
0x7d7: V767 = 0x1
0x7d9: V768 = 0xa0
0x7db: V769 = 0x2
0x7dd: V770 = EXP 0x2 0xa0
0x7de: V771 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e1: V772 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x7e3: M[V766] = V772
0x7e4: V773 = 0x20
0x7e6: V774 = ADD 0x20 V766
0x7e7: V775 = 0x40
0x7e9: V776 = M[0x40]
0x7ec: V777 = SUB V774 V776
0x7ee: RETURN V776 V777
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7ef
[0x7ef:0x7f5]
---
Predecessors: [0x93]
Successors: [0x7f6, 0x7fa]
---
0x7ef JUMPDEST
0x7f0 CALLVALUE
0x7f1 ISZERO
0x7f2 PUSH2 0x7fa
0x7f5 JUMPI
---
0x7ef: JUMPDEST 
0x7f0: V778 = CALLVALUE
0x7f1: V779 = ISZERO V778
0x7f2: V780 = 0x7fa
0x7f5: JUMPI 0x7fa V779
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f6
[0x7f6:0x7f9]
---
Predecessors: [0x7ef]
Successors: []
---
0x7f6 PUSH1 0x0
0x7f8 DUP1
0x7f9 REVERT
---
0x7f6: V781 = 0x0
0x7f9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7fa
[0x7fa:0x801]
---
Predecessors: [0x7ef]
Successors: [0xba9]
---
0x7fa JUMPDEST
0x7fb PUSH2 0x802
0x7fe PUSH2 0xba9
0x801 JUMP
---
0x7fa: JUMPDEST 
0x7fb: V782 = 0x802
0x7fe: V783 = 0xba9
0x801: JUMP 0xba9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0x802
[0x802:0x815]
---
Predecessors: [0xba9, 0xc60, 0xc6e]
Successors: []
---
0x802 JUMPDEST
0x803 PUSH1 0x40
0x805 MLOAD
0x806 SWAP1
0x807 ISZERO
0x808 ISZERO
0x809 DUP2
0x80a MSTORE
0x80b PUSH1 0x20
0x80d ADD
0x80e PUSH1 0x40
0x810 MLOAD
0x811 DUP1
0x812 SWAP2
0x813 SUB
0x814 SWAP1
0x815 RETURN
---
0x802: JUMPDEST 
0x803: V784 = 0x40
0x805: V785 = M[0x40]
0x807: V786 = ISZERO S0
0x808: V787 = ISZERO V786
0x80a: M[V785] = V787
0x80b: V788 = 0x20
0x80d: V789 = ADD 0x20 V785
0x80e: V790 = 0x40
0x810: V791 = M[0x40]
0x813: V792 = SUB V789 V791
0x815: RETURN V791 V792
---
Entry stack: [V12, 0x802, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x802]

================================

Block 0x816
[0x816:0x81c]
---
Predecessors: [0x9e]
Successors: [0x81d, 0x821]
---
0x816 JUMPDEST
0x817 CALLVALUE
0x818 ISZERO
0x819 PUSH2 0x821
0x81c JUMPI
---
0x816: JUMPDEST 
0x817: V793 = CALLVALUE
0x818: V794 = ISZERO V793
0x819: V795 = 0x821
0x81c: JUMPI 0x821 V794
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81d
[0x81d:0x820]
---
Predecessors: [0x816]
Successors: []
---
0x81d PUSH1 0x0
0x81f DUP1
0x820 REVERT
---
0x81d: V796 = 0x0
0x820: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x821
[0x821:0x828]
---
Predecessors: [0x816]
Successors: [0xbb8]
---
0x821 JUMPDEST
0x822 PUSH2 0x745
0x825 PUSH2 0xbb8
0x828 JUMP
---
0x821: JUMPDEST 
0x822: V797 = 0x745
0x825: V798 = 0xbb8
0x828: JUMP 0xbb8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x745]
Exit stack: [V12, 0x745]

================================

Block 0x829
[0x829:0x844]
---
Predecessors: []
Successors: []
---
0x829 JUMPDEST
0x82a PUSH1 0x40
0x82c MLOAD
0x82d PUSH1 0x1
0x82f PUSH1 0xa0
0x831 PUSH1 0x2
0x833 EXP
0x834 SUB
0x835 SWAP1
0x836 SWAP2
0x837 AND
0x838 DUP2
0x839 MSTORE
0x83a PUSH1 0x20
0x83c ADD
0x83d PUSH1 0x40
0x83f MLOAD
0x840 DUP1
0x841 SWAP2
0x842 SUB
0x843 SWAP1
0x844 RETURN
---
0x829: JUMPDEST 
0x82a: V799 = 0x40
0x82c: V800 = M[0x40]
0x82d: V801 = 0x1
0x82f: V802 = 0xa0
0x831: V803 = 0x2
0x833: V804 = EXP 0x2 0xa0
0x834: V805 = SUB 0x10000000000000000000000000000000000000000 0x1
0x837: V806 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x839: M[V800] = V806
0x83a: V807 = 0x20
0x83c: V808 = ADD 0x20 V800
0x83d: V809 = 0x40
0x83f: V810 = M[0x40]
0x842: V811 = SUB V808 V810
0x844: RETURN V810 V811
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x845
[0x845:0x84b]
---
Predecessors: [0xa9]
Successors: [0x84c, 0x850]
---
0x845 JUMPDEST
0x846 CALLVALUE
0x847 ISZERO
0x848 PUSH2 0x850
0x84b JUMPI
---
0x845: JUMPDEST 
0x846: V812 = CALLVALUE
0x847: V813 = ISZERO V812
0x848: V814 = 0x850
0x84b: JUMPI 0x850 V813
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x84c
[0x84c:0x84f]
---
Predecessors: [0x845]
Successors: []
---
0x84c PUSH1 0x0
0x84e DUP1
0x84f REVERT
---
0x84c: V815 = 0x0
0x84f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x850
[0x850:0x863]
---
Predecessors: [0x845]
Successors: [0xbc7]
---
0x850 JUMPDEST
0x851 PUSH2 0x699
0x854 PUSH1 0x1
0x856 PUSH1 0xa0
0x858 PUSH1 0x2
0x85a EXP
0x85b SUB
0x85c PUSH1 0x4
0x85e CALLDATALOAD
0x85f AND
0x860 PUSH2 0xbc7
0x863 JUMP
---
0x850: JUMPDEST 
0x851: V816 = 0x699
0x854: V817 = 0x1
0x856: V818 = 0xa0
0x858: V819 = 0x2
0x85a: V820 = EXP 0x2 0xa0
0x85b: V821 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85c: V822 = 0x4
0x85e: V823 = CALLDATALOAD 0x4
0x85f: V824 = AND V823 0xffffffffffffffffffffffffffffffffffffffff
0x860: V825 = 0xbc7
0x863: JUMP 0xbc7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x699, V824]
Exit stack: [V12, 0x699, V824]

================================

Block 0x864
[0x864:0x875]
---
Predecessors: []
Successors: []
---
0x864 JUMPDEST
0x865 PUSH1 0x40
0x867 MLOAD
0x868 SWAP1
0x869 DUP2
0x86a MSTORE
0x86b PUSH1 0x20
0x86d ADD
0x86e PUSH1 0x40
0x870 MLOAD
0x871 DUP1
0x872 SWAP2
0x873 SUB
0x874 SWAP1
0x875 RETURN
---
0x864: JUMPDEST 
0x865: V826 = 0x40
0x867: V827 = M[0x40]
0x86a: M[V827] = S0
0x86b: V828 = 0x20
0x86d: V829 = ADD 0x20 V827
0x86e: V830 = 0x40
0x870: V831 = M[0x40]
0x873: V832 = SUB V829 V831
0x875: RETURN V831 V832
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x876
[0x876:0x87c]
---
Predecessors: [0xb4]
Successors: [0x87d, 0x881]
---
0x876 JUMPDEST
0x877 CALLVALUE
0x878 ISZERO
0x879 PUSH2 0x881
0x87c JUMPI
---
0x876: JUMPDEST 
0x877: V833 = CALLVALUE
0x878: V834 = ISZERO V833
0x879: V835 = 0x881
0x87c: JUMPI 0x881 V834
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x87d
[0x87d:0x880]
---
Predecessors: [0x876]
Successors: []
---
0x87d PUSH1 0x0
0x87f DUP1
0x880 REVERT
---
0x87d: V836 = 0x0
0x880: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x881
[0x881:0x888]
---
Predecessors: [0x876]
Successors: [0xbd9]
---
0x881 JUMPDEST
0x882 PUSH2 0x699
0x885 PUSH2 0xbd9
0x888 JUMP
---
0x881: JUMPDEST 
0x882: V837 = 0x699
0x885: V838 = 0xbd9
0x888: JUMP 0xbd9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x699]
Exit stack: [V12, 0x699]

================================

Block 0x889
[0x889:0x89a]
---
Predecessors: []
Successors: []
---
0x889 JUMPDEST
0x88a PUSH1 0x40
0x88c MLOAD
0x88d SWAP1
0x88e DUP2
0x88f MSTORE
0x890 PUSH1 0x20
0x892 ADD
0x893 PUSH1 0x40
0x895 MLOAD
0x896 DUP1
0x897 SWAP2
0x898 SUB
0x899 SWAP1
0x89a RETURN
---
0x889: JUMPDEST 
0x88a: V839 = 0x40
0x88c: V840 = M[0x40]
0x88f: M[V840] = S0
0x890: V841 = 0x20
0x892: V842 = ADD 0x20 V840
0x893: V843 = 0x40
0x895: V844 = M[0x40]
0x898: V845 = SUB V842 V844
0x89a: RETURN V844 V845
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x89b
[0x89b:0x8a1]
---
Predecessors: [0xbf]
Successors: [0x8a2, 0x8a6]
---
0x89b JUMPDEST
0x89c CALLVALUE
0x89d ISZERO
0x89e PUSH2 0x8a6
0x8a1 JUMPI
---
0x89b: JUMPDEST 
0x89c: V846 = CALLVALUE
0x89d: V847 = ISZERO V846
0x89e: V848 = 0x8a6
0x8a1: JUMPI 0x8a6 V847
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a2
[0x8a2:0x8a5]
---
Predecessors: [0x89b]
Successors: []
---
0x8a2 PUSH1 0x0
0x8a4 DUP1
0x8a5 REVERT
---
0x8a2: V849 = 0x0
0x8a5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a6
[0x8a6:0x8ad]
---
Predecessors: [0x89b]
Successors: [0xbdf]
---
0x8a6 JUMPDEST
0x8a7 PUSH2 0x699
0x8aa PUSH2 0xbdf
0x8ad JUMP
---
0x8a6: JUMPDEST 
0x8a7: V850 = 0x699
0x8aa: V851 = 0xbdf
0x8ad: JUMP 0xbdf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x699]
Exit stack: [V12, 0x699]

================================

Block 0x8ae
[0x8ae:0x8bf]
---
Predecessors: []
Successors: []
---
0x8ae JUMPDEST
0x8af PUSH1 0x40
0x8b1 MLOAD
0x8b2 SWAP1
0x8b3 DUP2
0x8b4 MSTORE
0x8b5 PUSH1 0x20
0x8b7 ADD
0x8b8 PUSH1 0x40
0x8ba MLOAD
0x8bb DUP1
0x8bc SWAP2
0x8bd SUB
0x8be SWAP1
0x8bf RETURN
---
0x8ae: JUMPDEST 
0x8af: V852 = 0x40
0x8b1: V853 = M[0x40]
0x8b4: M[V853] = S0
0x8b5: V854 = 0x20
0x8b7: V855 = ADD 0x20 V853
0x8b8: V856 = 0x40
0x8ba: V857 = M[0x40]
0x8bd: V858 = SUB V855 V857
0x8bf: RETURN V857 V858
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8c0
[0x8c0:0x8c6]
---
Predecessors: [0xca]
Successors: [0x8c7, 0x8cb]
---
0x8c0 JUMPDEST
0x8c1 CALLVALUE
0x8c2 ISZERO
0x8c3 PUSH2 0x8cb
0x8c6 JUMPI
---
0x8c0: JUMPDEST 
0x8c1: V859 = CALLVALUE
0x8c2: V860 = ISZERO V859
0x8c3: V861 = 0x8cb
0x8c6: JUMPI 0x8cb V860
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c7
[0x8c7:0x8ca]
---
Predecessors: [0x8c0]
Successors: []
---
0x8c7 PUSH1 0x0
0x8c9 DUP1
0x8ca REVERT
---
0x8c7: V862 = 0x0
0x8ca: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8cb
[0x8cb:0x8d2]
---
Predecessors: [0x8c0]
Successors: [0xbe5]
---
0x8cb JUMPDEST
0x8cc PUSH2 0x699
0x8cf PUSH2 0xbe5
0x8d2 JUMP
---
0x8cb: JUMPDEST 
0x8cc: V863 = 0x699
0x8cf: V864 = 0xbe5
0x8d2: JUMP 0xbe5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x699]
Exit stack: [V12, 0x699]

================================

Block 0x8d3
[0x8d3:0x8e4]
---
Predecessors: []
Successors: []
---
0x8d3 JUMPDEST
0x8d4 PUSH1 0x40
0x8d6 MLOAD
0x8d7 SWAP1
0x8d8 DUP2
0x8d9 MSTORE
0x8da PUSH1 0x20
0x8dc ADD
0x8dd PUSH1 0x40
0x8df MLOAD
0x8e0 DUP1
0x8e1 SWAP2
0x8e2 SUB
0x8e3 SWAP1
0x8e4 RETURN
---
0x8d3: JUMPDEST 
0x8d4: V865 = 0x40
0x8d6: V866 = M[0x40]
0x8d9: M[V866] = S0
0x8da: V867 = 0x20
0x8dc: V868 = ADD 0x20 V866
0x8dd: V869 = 0x40
0x8df: V870 = M[0x40]
0x8e2: V871 = SUB V868 V870
0x8e4: RETURN V870 V871
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8e5
[0x8e5:0x8eb]
---
Predecessors: [0xd5]
Successors: [0x8ec, 0x8f0]
---
0x8e5 JUMPDEST
0x8e6 CALLVALUE
0x8e7 ISZERO
0x8e8 PUSH2 0x8f0
0x8eb JUMPI
---
0x8e5: JUMPDEST 
0x8e6: V872 = CALLVALUE
0x8e7: V873 = ISZERO V872
0x8e8: V874 = 0x8f0
0x8eb: JUMPI 0x8f0 V873
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8ec
[0x8ec:0x8ef]
---
Predecessors: [0x8e5]
Successors: []
---
0x8ec PUSH1 0x0
0x8ee DUP1
0x8ef REVERT
---
0x8ec: V875 = 0x0
0x8ef: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8f0
[0x8f0:0x8f7]
---
Predecessors: [0x8e5]
Successors: [0xbeb]
---
0x8f0 JUMPDEST
0x8f1 PUSH2 0x699
0x8f4 PUSH2 0xbeb
0x8f7 JUMP
---
0x8f0: JUMPDEST 
0x8f1: V876 = 0x699
0x8f4: V877 = 0xbeb
0x8f7: JUMP 0xbeb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x699]
Exit stack: [V12, 0x699]

================================

Block 0x8f8
[0x8f8:0x909]
---
Predecessors: []
Successors: []
---
0x8f8 JUMPDEST
0x8f9 PUSH1 0x40
0x8fb MLOAD
0x8fc SWAP1
0x8fd DUP2
0x8fe MSTORE
0x8ff PUSH1 0x20
0x901 ADD
0x902 PUSH1 0x40
0x904 MLOAD
0x905 DUP1
0x906 SWAP2
0x907 SUB
0x908 SWAP1
0x909 RETURN
---
0x8f8: JUMPDEST 
0x8f9: V878 = 0x40
0x8fb: V879 = M[0x40]
0x8fe: M[V879] = S0
0x8ff: V880 = 0x20
0x901: V881 = ADD 0x20 V879
0x902: V882 = 0x40
0x904: V883 = M[0x40]
0x907: V884 = SUB V881 V883
0x909: RETURN V883 V884
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x90a
[0x90a:0x910]
---
Predecessors: [0xe0]
Successors: [0x911, 0x915]
---
0x90a JUMPDEST
0x90b CALLVALUE
0x90c ISZERO
0x90d PUSH2 0x915
0x910 JUMPI
---
0x90a: JUMPDEST 
0x90b: V885 = CALLVALUE
0x90c: V886 = ISZERO V885
0x90d: V887 = 0x915
0x910: JUMPI 0x915 V886
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x911
[0x911:0x914]
---
Predecessors: [0x90a]
Successors: []
---
0x911 PUSH1 0x0
0x913 DUP1
0x914 REVERT
---
0x911: V888 = 0x0
0x914: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x915
[0x915:0x91c]
---
Predecessors: [0x90a]
Successors: [0xbf1]
---
0x915 JUMPDEST
0x916 PUSH2 0x699
0x919 PUSH2 0xbf1
0x91c JUMP
---
0x915: JUMPDEST 
0x916: V889 = 0x699
0x919: V890 = 0xbf1
0x91c: JUMP 0xbf1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x699]
Exit stack: [V12, 0x699]

================================

Block 0x91d
[0x91d:0x92e]
---
Predecessors: []
Successors: []
---
0x91d JUMPDEST
0x91e PUSH1 0x40
0x920 MLOAD
0x921 SWAP1
0x922 DUP2
0x923 MSTORE
0x924 PUSH1 0x20
0x926 ADD
0x927 PUSH1 0x40
0x929 MLOAD
0x92a DUP1
0x92b SWAP2
0x92c SUB
0x92d SWAP1
0x92e RETURN
---
0x91d: JUMPDEST 
0x91e: V891 = 0x40
0x920: V892 = M[0x40]
0x923: M[V892] = S0
0x924: V893 = 0x20
0x926: V894 = ADD 0x20 V892
0x927: V895 = 0x40
0x929: V896 = M[0x40]
0x92c: V897 = SUB V894 V896
0x92e: RETURN V896 V897
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x92f
[0x92f:0x935]
---
Predecessors: [0xeb]
Successors: [0x936, 0x93a]
---
0x92f JUMPDEST
0x930 CALLVALUE
0x931 ISZERO
0x932 PUSH2 0x93a
0x935 JUMPI
---
0x92f: JUMPDEST 
0x930: V898 = CALLVALUE
0x931: V899 = ISZERO V898
0x932: V900 = 0x93a
0x935: JUMPI 0x93a V899
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x936
[0x936:0x939]
---
Predecessors: [0x92f]
Successors: []
---
0x936 PUSH1 0x0
0x938 DUP1
0x939 REVERT
---
0x936: V901 = 0x0
0x939: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x93a
[0x93a:0x941]
---
Predecessors: [0x92f]
Successors: [0xbf7]
---
0x93a JUMPDEST
0x93b PUSH2 0x699
0x93e PUSH2 0xbf7
0x941 JUMP
---
0x93a: JUMPDEST 
0x93b: V902 = 0x699
0x93e: V903 = 0xbf7
0x941: JUMP 0xbf7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x699]
Exit stack: [V12, 0x699]

================================

Block 0x942
[0x942:0x953]
---
Predecessors: []
Successors: []
---
0x942 JUMPDEST
0x943 PUSH1 0x40
0x945 MLOAD
0x946 SWAP1
0x947 DUP2
0x948 MSTORE
0x949 PUSH1 0x20
0x94b ADD
0x94c PUSH1 0x40
0x94e MLOAD
0x94f DUP1
0x950 SWAP2
0x951 SUB
0x952 SWAP1
0x953 RETURN
---
0x942: JUMPDEST 
0x943: V904 = 0x40
0x945: V905 = M[0x40]
0x948: M[V905] = S0
0x949: V906 = 0x20
0x94b: V907 = ADD 0x20 V905
0x94c: V908 = 0x40
0x94e: V909 = M[0x40]
0x951: V910 = SUB V907 V909
0x953: RETURN V909 V910
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x954
[0x954:0x95a]
---
Predecessors: [0xf6]
Successors: [0x95b, 0x95f]
---
0x954 JUMPDEST
0x955 CALLVALUE
0x956 ISZERO
0x957 PUSH2 0x95f
0x95a JUMPI
---
0x954: JUMPDEST 
0x955: V911 = CALLVALUE
0x956: V912 = ISZERO V911
0x957: V913 = 0x95f
0x95a: JUMPI 0x95f V912
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x95b
[0x95b:0x95e]
---
Predecessors: [0x954]
Successors: []
---
0x95b PUSH1 0x0
0x95d DUP1
0x95e REVERT
---
0x95b: V914 = 0x0
0x95e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x95f
[0x95f:0x966]
---
Predecessors: [0x954]
Successors: [0xbfd]
---
0x95f JUMPDEST
0x960 PUSH2 0x684
0x963 PUSH2 0xbfd
0x966 JUMP
---
0x95f: JUMPDEST 
0x960: V915 = 0x684
0x963: V916 = 0xbfd
0x966: JUMP 0xbfd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x684]
Exit stack: [V12, 0x684]

================================

Block 0x967
[0x967:0x968]
---
Predecessors: []
Successors: []
---
0x967 JUMPDEST
0x968 STOP
---
0x967: JUMPDEST 
0x968: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x969
[0x969:0x96f]
---
Predecessors: [0x101]
Successors: [0x970, 0x974]
---
0x969 JUMPDEST
0x96a CALLVALUE
0x96b ISZERO
0x96c PUSH2 0x974
0x96f JUMPI
---
0x969: JUMPDEST 
0x96a: V917 = CALLVALUE
0x96b: V918 = ISZERO V917
0x96c: V919 = 0x974
0x96f: JUMPI 0x974 V918
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x970
[0x970:0x973]
---
Predecessors: [0x969]
Successors: []
---
0x970 PUSH1 0x0
0x972 DUP1
0x973 REVERT
---
0x970: V920 = 0x0
0x973: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x974
[0x974:0x97b]
---
Predecessors: [0x969]
Successors: [0xc24]
---
0x974 JUMPDEST
0x975 PUSH2 0x684
0x978 PUSH2 0xc24
0x97b JUMP
---
0x974: JUMPDEST 
0x975: V921 = 0x684
0x978: V922 = 0xc24
0x97b: JUMP 0xc24
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x684]
Exit stack: [V12, 0x684]

================================

Block 0x97c
[0x97c:0x97d]
---
Predecessors: []
Successors: []
---
0x97c JUMPDEST
0x97d STOP
---
0x97c: JUMPDEST 
0x97d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x97e
[0x97e:0x984]
---
Predecessors: [0x10c]
Successors: [0x985, 0x989]
---
0x97e JUMPDEST
0x97f CALLVALUE
0x980 ISZERO
0x981 PUSH2 0x989
0x984 JUMPI
---
0x97e: JUMPDEST 
0x97f: V923 = CALLVALUE
0x980: V924 = ISZERO V923
0x981: V925 = 0x989
0x984: JUMPI 0x989 V924
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x985
[0x985:0x988]
---
Predecessors: [0x97e]
Successors: []
---
0x985 PUSH1 0x0
0x987 DUP1
0x988 REVERT
---
0x985: V926 = 0x0
0x988: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x989
[0x989:0x990]
---
Predecessors: [0x97e]
Successors: [0xc4e]
---
0x989 JUMPDEST
0x98a PUSH2 0x699
0x98d PUSH2 0xc4e
0x990 JUMP
---
0x989: JUMPDEST 
0x98a: V927 = 0x699
0x98d: V928 = 0xc4e
0x990: JUMP 0xc4e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x699]
Exit stack: [V12, 0x699]

================================

Block 0x991
[0x991:0x9a2]
---
Predecessors: []
Successors: []
---
0x991 JUMPDEST
0x992 PUSH1 0x40
0x994 MLOAD
0x995 SWAP1
0x996 DUP2
0x997 MSTORE
0x998 PUSH1 0x20
0x99a ADD
0x99b PUSH1 0x40
0x99d MLOAD
0x99e DUP1
0x99f SWAP2
0x9a0 SUB
0x9a1 SWAP1
0x9a2 RETURN
---
0x991: JUMPDEST 
0x992: V929 = 0x40
0x994: V930 = M[0x40]
0x997: M[V930] = S0
0x998: V931 = 0x20
0x99a: V932 = ADD 0x20 V930
0x99b: V933 = 0x40
0x99d: V934 = M[0x40]
0x9a0: V935 = SUB V932 V934
0x9a2: RETURN V934 V935
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9a3
[0x9a3:0x9a9]
---
Predecessors: [0x117]
Successors: [0x9aa, 0x9ae]
---
0x9a3 JUMPDEST
0x9a4 CALLVALUE
0x9a5 ISZERO
0x9a6 PUSH2 0x9ae
0x9a9 JUMPI
---
0x9a3: JUMPDEST 
0x9a4: V936 = CALLVALUE
0x9a5: V937 = ISZERO V936
0x9a6: V938 = 0x9ae
0x9a9: JUMPI 0x9ae V937
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9aa
[0x9aa:0x9ad]
---
Predecessors: [0x9a3]
Successors: []
---
0x9aa PUSH1 0x0
0x9ac DUP1
0x9ad REVERT
---
0x9aa: V939 = 0x0
0x9ad: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9ae
[0x9ae:0x9b5]
---
Predecessors: [0x9a3]
Successors: [0xc54]
---
0x9ae JUMPDEST
0x9af PUSH2 0x699
0x9b2 PUSH2 0xc54
0x9b5 JUMP
---
0x9ae: JUMPDEST 
0x9af: V940 = 0x699
0x9b2: V941 = 0xc54
0x9b5: JUMP 0xc54
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x699]
Exit stack: [V12, 0x699]

================================

Block 0x9b6
[0x9b6:0x9c7]
---
Predecessors: []
Successors: []
---
0x9b6 JUMPDEST
0x9b7 PUSH1 0x40
0x9b9 MLOAD
0x9ba SWAP1
0x9bb DUP2
0x9bc MSTORE
0x9bd PUSH1 0x20
0x9bf ADD
0x9c0 PUSH1 0x40
0x9c2 MLOAD
0x9c3 DUP1
0x9c4 SWAP2
0x9c5 SUB
0x9c6 SWAP1
0x9c7 RETURN
---
0x9b6: JUMPDEST 
0x9b7: V942 = 0x40
0x9b9: V943 = M[0x40]
0x9bc: M[V943] = S0
0x9bd: V944 = 0x20
0x9bf: V945 = ADD 0x20 V943
0x9c0: V946 = 0x40
0x9c2: V947 = M[0x40]
0x9c5: V948 = SUB V945 V947
0x9c7: RETURN V947 V948
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9c8
[0x9c8:0x9ce]
---
Predecessors: [0x122]
Successors: [0x9cf, 0x9d3]
---
0x9c8 JUMPDEST
0x9c9 CALLVALUE
0x9ca ISZERO
0x9cb PUSH2 0x9d3
0x9ce JUMPI
---
0x9c8: JUMPDEST 
0x9c9: V949 = CALLVALUE
0x9ca: V950 = ISZERO V949
0x9cb: V951 = 0x9d3
0x9ce: JUMPI 0x9d3 V950
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9cf
[0x9cf:0x9d2]
---
Predecessors: [0x9c8]
Successors: []
---
0x9cf PUSH1 0x0
0x9d1 DUP1
0x9d2 REVERT
---
0x9cf: V952 = 0x0
0x9d2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9d3
[0x9d3:0x9da]
---
Predecessors: [0x9c8]
Successors: [0xc5a]
---
0x9d3 JUMPDEST
0x9d4 PUSH2 0x699
0x9d7 PUSH2 0xc5a
0x9da JUMP
---
0x9d3: JUMPDEST 
0x9d4: V953 = 0x699
0x9d7: V954 = 0xc5a
0x9da: JUMP 0xc5a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x699]
Exit stack: [V12, 0x699]

================================

Block 0x9db
[0x9db:0x9ec]
---
Predecessors: []
Successors: []
---
0x9db JUMPDEST
0x9dc PUSH1 0x40
0x9de MLOAD
0x9df SWAP1
0x9e0 DUP2
0x9e1 MSTORE
0x9e2 PUSH1 0x20
0x9e4 ADD
0x9e5 PUSH1 0x40
0x9e7 MLOAD
0x9e8 DUP1
0x9e9 SWAP2
0x9ea SUB
0x9eb SWAP1
0x9ec RETURN
---
0x9db: JUMPDEST 
0x9dc: V955 = 0x40
0x9de: V956 = M[0x40]
0x9e1: M[V956] = S0
0x9e2: V957 = 0x20
0x9e4: V958 = ADD 0x20 V956
0x9e5: V959 = 0x40
0x9e7: V960 = M[0x40]
0x9ea: V961 = SUB V958 V960
0x9ec: RETURN V960 V961
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9ed
[0x9ed:0x9f3]
---
Predecessors: [0x12d]
Successors: [0x9f4, 0x9f8]
---
0x9ed JUMPDEST
0x9ee CALLVALUE
0x9ef ISZERO
0x9f0 PUSH2 0x9f8
0x9f3 JUMPI
---
0x9ed: JUMPDEST 
0x9ee: V962 = CALLVALUE
0x9ef: V963 = ISZERO V962
0x9f0: V964 = 0x9f8
0x9f3: JUMPI 0x9f8 V963
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9f4
[0x9f4:0x9f7]
---
Predecessors: [0x9ed]
Successors: []
---
0x9f4 PUSH1 0x0
0x9f6 DUP1
0x9f7 REVERT
---
0x9f4: V965 = 0x0
0x9f7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9f8
[0x9f8:0x9ff]
---
Predecessors: [0x9ed]
Successors: [0xc60]
---
0x9f8 JUMPDEST
0x9f9 PUSH2 0x802
0x9fc PUSH2 0xc60
0x9ff JUMP
---
0x9f8: JUMPDEST 
0x9f9: V966 = 0x802
0x9fc: V967 = 0xc60
0x9ff: JUMP 0xc60
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0xa00
[0xa00:0xa13]
---
Predecessors: []
Successors: []
---
0xa00 JUMPDEST
0xa01 PUSH1 0x40
0xa03 MLOAD
0xa04 SWAP1
0xa05 ISZERO
0xa06 ISZERO
0xa07 DUP2
0xa08 MSTORE
0xa09 PUSH1 0x20
0xa0b ADD
0xa0c PUSH1 0x40
0xa0e MLOAD
0xa0f DUP1
0xa10 SWAP2
0xa11 SUB
0xa12 SWAP1
0xa13 RETURN
---
0xa00: JUMPDEST 
0xa01: V968 = 0x40
0xa03: V969 = M[0x40]
0xa05: V970 = ISZERO S0
0xa06: V971 = ISZERO V970
0xa08: M[V969] = V971
0xa09: V972 = 0x20
0xa0b: V973 = ADD 0x20 V969
0xa0c: V974 = 0x40
0xa0e: V975 = M[0x40]
0xa11: V976 = SUB V973 V975
0xa13: RETURN V975 V976
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa14
[0xa14:0xa1a]
---
Predecessors: [0x138]
Successors: [0xa1b, 0xa1f]
---
0xa14 JUMPDEST
0xa15 CALLVALUE
0xa16 ISZERO
0xa17 PUSH2 0xa1f
0xa1a JUMPI
---
0xa14: JUMPDEST 
0xa15: V977 = CALLVALUE
0xa16: V978 = ISZERO V977
0xa17: V979 = 0xa1f
0xa1a: JUMPI 0xa1f V978
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa1b
[0xa1b:0xa1e]
---
Predecessors: [0xa14]
Successors: []
---
0xa1b PUSH1 0x0
0xa1d DUP1
0xa1e REVERT
---
0xa1b: V980 = 0x0
0xa1e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa1f
[0xa1f:0xa26]
---
Predecessors: [0xa14]
Successors: [0xc6e]
---
0xa1f JUMPDEST
0xa20 PUSH2 0x802
0xa23 PUSH2 0xc6e
0xa26 JUMP
---
0xa1f: JUMPDEST 
0xa20: V981 = 0x802
0xa23: V982 = 0xc6e
0xa26: JUMP 0xc6e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x802]
Exit stack: [V12, 0x802]

================================

Block 0xa27
[0xa27:0xa3a]
---
Predecessors: []
Successors: []
---
0xa27 JUMPDEST
0xa28 PUSH1 0x40
0xa2a MLOAD
0xa2b SWAP1
0xa2c ISZERO
0xa2d ISZERO
0xa2e DUP2
0xa2f MSTORE
0xa30 PUSH1 0x20
0xa32 ADD
0xa33 PUSH1 0x40
0xa35 MLOAD
0xa36 DUP1
0xa37 SWAP2
0xa38 SUB
0xa39 SWAP1
0xa3a RETURN
---
0xa27: JUMPDEST 
0xa28: V983 = 0x40
0xa2a: V984 = M[0x40]
0xa2c: V985 = ISZERO S0
0xa2d: V986 = ISZERO V985
0xa2f: M[V984] = V986
0xa30: V987 = 0x20
0xa32: V988 = ADD 0x20 V984
0xa33: V989 = 0x40
0xa35: V990 = M[0x40]
0xa38: V991 = SUB V988 V990
0xa3a: RETURN V990 V991
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa3b
[0xa3b:0xa41]
---
Predecessors: [0x143]
Successors: [0xa42, 0xa46]
---
0xa3b JUMPDEST
0xa3c CALLVALUE
0xa3d ISZERO
0xa3e PUSH2 0xa46
0xa41 JUMPI
---
0xa3b: JUMPDEST 
0xa3c: V992 = CALLVALUE
0xa3d: V993 = ISZERO V992
0xa3e: V994 = 0xa46
0xa41: JUMPI 0xa46 V993
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa42
[0xa42:0xa45]
---
Predecessors: [0xa3b]
Successors: []
---
0xa42 PUSH1 0x0
0xa44 DUP1
0xa45 REVERT
---
0xa42: V995 = 0x0
0xa45: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa46
[0xa46:0xa4d]
---
Predecessors: [0xa3b]
Successors: [0xc77]
---
0xa46 JUMPDEST
0xa47 PUSH2 0x684
0xa4a PUSH2 0xc77
0xa4d JUMP
---
0xa46: JUMPDEST 
0xa47: V996 = 0x684
0xa4a: V997 = 0xc77
0xa4d: JUMP 0xc77
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x684]
Exit stack: [V12, 0x684]

================================

Block 0xa4e
[0xa4e:0xa4f]
---
Predecessors: []
Successors: []
---
0xa4e JUMPDEST
0xa4f STOP
---
0xa4e: JUMPDEST 
0xa4f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa50
[0xa50:0xa56]
---
Predecessors: [0x14e]
Successors: [0xa57, 0xa5b]
---
0xa50 JUMPDEST
0xa51 CALLVALUE
0xa52 ISZERO
0xa53 PUSH2 0xa5b
0xa56 JUMPI
---
0xa50: JUMPDEST 
0xa51: V998 = CALLVALUE
0xa52: V999 = ISZERO V998
0xa53: V1000 = 0xa5b
0xa56: JUMPI 0xa5b V999
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa57
[0xa57:0xa5a]
---
Predecessors: [0xa50]
Successors: []
---
0xa57 PUSH1 0x0
0xa59 DUP1
0xa5a REVERT
---
0xa57: V1001 = 0x0
0xa5a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa5b
[0xa5b:0xa62]
---
Predecessors: [0xa50]
Successors: [0xca3]
---
0xa5b JUMPDEST
0xa5c PUSH2 0x684
0xa5f PUSH2 0xca3
0xa62 JUMP
---
0xa5b: JUMPDEST 
0xa5c: V1002 = 0x684
0xa5f: V1003 = 0xca3
0xa62: JUMP 0xca3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x684]
Exit stack: [V12, 0x684]

================================

Block 0xa63
[0xa63:0xa64]
---
Predecessors: []
Successors: []
---
0xa63 JUMPDEST
0xa64 STOP
---
0xa63: JUMPDEST 
0xa64: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa65
[0xa65:0xa6e]
---
Predecessors: [0x67c]
Successors: [0xa6f, 0xaac]
---
0xa65 JUMPDEST
0xa66 PUSH1 0x2
0xa68 SLOAD
0xa69 TIMESTAMP
0xa6a LT
0xa6b PUSH2 0xaac
0xa6e JUMPI
---
0xa65: JUMPDEST 
0xa66: V1004 = 0x2
0xa68: V1005 = S[0x2]
0xa69: V1006 = TIMESTAMP
0xa6a: V1007 = LT V1006 V1005
0xa6b: V1008 = 0xaac
0xa6e: JUMPI 0xaac V1007
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xa6f
[0xa6f:0xa7b]
---
Predecessors: [0xa65]
Successors: [0xa7c, 0xa89]
---
0xa6f PUSH1 0x5
0xa71 SLOAD
0xa72 PUSH1 0x8
0xa74 SLOAD
0xa75 LT
0xa76 ISZERO
0xa77 DUP1
0xa78 PUSH2 0xa89
0xa7b JUMPI
---
0xa6f: V1009 = 0x5
0xa71: V1010 = S[0x5]
0xa72: V1011 = 0x8
0xa74: V1012 = S[0x8]
0xa75: V1013 = LT V1012 V1010
0xa76: V1014 = ISZERO V1013
0xa78: V1015 = 0xa89
0xa7b: JUMPI 0xa89 V1014
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: [V1014]
Exit stack: [V12, 0x684, V1014]

================================

Block 0xa7c
[0xa7c:0xa88]
---
Predecessors: [0xa6f]
Successors: [0xa89]
---
0xa7c POP
0xa7d PUSH1 0x13
0xa7f SLOAD
0xa80 PUSH3 0x10000
0xa84 SWAP1
0xa85 DIV
0xa86 PUSH1 0xff
0xa88 AND
---
0xa7d: V1016 = 0x13
0xa7f: V1017 = S[0x13]
0xa80: V1018 = 0x10000
0xa85: V1019 = DIV V1017 0x10000
0xa86: V1020 = 0xff
0xa88: V1021 = AND 0xff V1019
---
Entry stack: [V12, 0x684, V1014]
Stack pops: 1
Stack additions: [V1021]
Exit stack: [V12, 0x684, V1021]

================================

Block 0xa89
[0xa89:0xa8e]
---
Predecessors: [0xa6f, 0xa7c]
Successors: [0xa8f, 0xa9c]
---
0xa89 JUMPDEST
0xa8a ISZERO
0xa8b PUSH2 0xa9c
0xa8e JUMPI
---
0xa89: JUMPDEST 
0xa8a: V1022 = ISZERO S0
0xa8b: V1023 = 0xa9c
0xa8e: JUMPI 0xa9c V1022
---
Entry stack: [V12, 0x684, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xa8f
[0xa8f:0xa9b]
---
Predecessors: [0xa89]
Successors: [0xa9c]
---
0xa8f PUSH1 0x13
0xa91 DUP1
0xa92 SLOAD
0xa93 PUSH1 0xff
0xa95 NOT
0xa96 AND
0xa97 PUSH1 0x1
0xa99 OR
0xa9a SWAP1
0xa9b SSTORE
---
0xa8f: V1024 = 0x13
0xa92: V1025 = S[0x13]
0xa93: V1026 = 0xff
0xa95: V1027 = NOT 0xff
0xa96: V1028 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1025
0xa97: V1029 = 0x1
0xa99: V1030 = OR 0x1 V1028
0xa9b: S[0x13] = V1030
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xa9c
[0xa9c:0xaab]
---
Predecessors: [0xa89, 0xa8f]
Successors: [0xaac]
---
0xa9c JUMPDEST
0xa9d PUSH1 0x13
0xa9f DUP1
0xaa0 SLOAD
0xaa1 PUSH2 0xff00
0xaa4 NOT
0xaa5 AND
0xaa6 PUSH2 0x100
0xaa9 OR
0xaaa SWAP1
0xaab SSTORE
---
0xa9c: JUMPDEST 
0xa9d: V1031 = 0x13
0xaa0: V1032 = S[0x13]
0xaa1: V1033 = 0xff00
0xaa4: V1034 = NOT 0xff00
0xaa5: V1035 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1032
0xaa6: V1036 = 0x100
0xaa9: V1037 = OR 0x100 V1035
0xaab: S[0x13] = V1037
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xaac
[0xaac:0xaac]
---
Predecessors: [0xa65, 0xa9c, 0xb74, 0xbfd, 0xc24, 0xc77]
Successors: [0xaad]
---
0xaac JUMPDEST
---
0xaac: JUMPDEST 
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xaad
[0xaad:0xaad]
---
Predecessors: [0xaac]
Successors: [0xaae]
---
0xaad JUMPDEST
---
0xaad: JUMPDEST 
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xaae
[0xaae:0xaaf]
---
Predecessors: [0xaad]
Successors: [0x684]
---
0xaae JUMPDEST
0xaaf JUMP
---
0xaae: JUMPDEST 
0xaaf: JUMP 0x684
---
Entry stack: [V12, 0x684]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xab0
[0xab0:0xab5]
---
Predecessors: [0x691]
Successors: [0x699]
---
0xab0 JUMPDEST
0xab1 PUSH1 0x0
0xab3 SLOAD
0xab4 DUP2
0xab5 JUMP
---
0xab0: JUMPDEST 
0xab1: V1038 = 0x0
0xab3: V1039 = S[0x0]
0xab5: JUMP 0x699
---
Entry stack: [V12, 0x699]
Stack pops: 1
Stack additions: [S0, V1039]
Exit stack: [V12, 0x699, V1039]

================================

Block 0xab6
[0xab6:0xabf]
---
Predecessors: [0x6b6]
Successors: [0xac0, 0xb41]
---
0xab6 JUMPDEST
0xab7 PUSH1 0x2
0xab9 SLOAD
0xaba TIMESTAMP
0xabb LT
0xabc PUSH2 0xb41
0xabf JUMPI
---
0xab6: JUMPDEST 
0xab7: V1040 = 0x2
0xab9: V1041 = S[0x2]
0xaba: V1042 = TIMESTAMP
0xabb: V1043 = LT V1042 V1041
0xabc: V1044 = 0xb41
0xabf: JUMPI 0xb41 V1043
---
Entry stack: [V12, 0x684, V667]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, V667]

================================

Block 0xac0
[0xac0:0xad6]
---
Predecessors: [0xab6]
Successors: [0xad7, 0xb41]
---
0xac0 PUSH1 0x4
0xac2 SLOAD
0xac3 CALLER
0xac4 PUSH1 0x1
0xac6 PUSH1 0xa0
0xac8 PUSH1 0x2
0xaca EXP
0xacb SUB
0xacc SWAP1
0xacd DUP2
0xace AND
0xacf SWAP2
0xad0 AND
0xad1 EQ
0xad2 ISZERO
0xad3 PUSH2 0xb41
0xad6 JUMPI
---
0xac0: V1045 = 0x4
0xac2: V1046 = S[0x4]
0xac3: V1047 = CALLER
0xac4: V1048 = 0x1
0xac6: V1049 = 0xa0
0xac8: V1050 = 0x2
0xaca: V1051 = EXP 0x2 0xa0
0xacb: V1052 = SUB 0x10000000000000000000000000000000000000000 0x1
0xace: V1053 = AND 0xffffffffffffffffffffffffffffffffffffffff V1047
0xad0: V1054 = AND V1046 0xffffffffffffffffffffffffffffffffffffffff
0xad1: V1055 = EQ V1054 V1053
0xad2: V1056 = ISZERO V1055
0xad3: V1057 = 0xb41
0xad6: JUMPI 0xb41 V1056
---
Entry stack: [V12, 0x684, V667]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, V667]

================================

Block 0xad7
[0xad7:0xb27]
---
Predecessors: [0xac0]
Successors: [0xb28, 0xb2c]
---
0xad7 PUSH1 0x11
0xad9 SLOAD
0xada PUSH1 0x1
0xadc PUSH1 0xa0
0xade PUSH1 0x2
0xae0 EXP
0xae1 SUB
0xae2 AND
0xae3 PUSH4 0xa9059cbb
0xae8 CALLER
0xae9 DUP4
0xaea PUSH1 0x40
0xaec MLOAD
0xaed PUSH1 0xe0
0xaef PUSH1 0x2
0xaf1 EXP
0xaf2 PUSH4 0xffffffff
0xaf7 DUP6
0xaf8 AND
0xaf9 MUL
0xafa DUP2
0xafb MSTORE
0xafc PUSH1 0x1
0xafe PUSH1 0xa0
0xb00 PUSH1 0x2
0xb02 EXP
0xb03 SUB
0xb04 SWAP1
0xb05 SWAP3
0xb06 AND
0xb07 PUSH1 0x4
0xb09 DUP4
0xb0a ADD
0xb0b MSTORE
0xb0c PUSH1 0x24
0xb0e DUP3
0xb0f ADD
0xb10 MSTORE
0xb11 PUSH1 0x44
0xb13 ADD
0xb14 PUSH1 0x0
0xb16 PUSH1 0x40
0xb18 MLOAD
0xb19 DUP1
0xb1a DUP4
0xb1b SUB
0xb1c DUP2
0xb1d PUSH1 0x0
0xb1f DUP8
0xb20 DUP1
0xb21 EXTCODESIZE
0xb22 ISZERO
0xb23 ISZERO
0xb24 PUSH2 0xb2c
0xb27 JUMPI
---
0xad7: V1058 = 0x11
0xad9: V1059 = S[0x11]
0xada: V1060 = 0x1
0xadc: V1061 = 0xa0
0xade: V1062 = 0x2
0xae0: V1063 = EXP 0x2 0xa0
0xae1: V1064 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae2: V1065 = AND 0xffffffffffffffffffffffffffffffffffffffff V1059
0xae3: V1066 = 0xa9059cbb
0xae8: V1067 = CALLER
0xaea: V1068 = 0x40
0xaec: V1069 = M[0x40]
0xaed: V1070 = 0xe0
0xaef: V1071 = 0x2
0xaf1: V1072 = EXP 0x2 0xe0
0xaf2: V1073 = 0xffffffff
0xaf8: V1074 = AND 0xa9059cbb 0xffffffff
0xaf9: V1075 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xafb: M[V1069] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xafc: V1076 = 0x1
0xafe: V1077 = 0xa0
0xb00: V1078 = 0x2
0xb02: V1079 = EXP 0x2 0xa0
0xb03: V1080 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb06: V1081 = AND V1067 0xffffffffffffffffffffffffffffffffffffffff
0xb07: V1082 = 0x4
0xb0a: V1083 = ADD V1069 0x4
0xb0b: M[V1083] = V1081
0xb0c: V1084 = 0x24
0xb0f: V1085 = ADD V1069 0x24
0xb10: M[V1085] = V667
0xb11: V1086 = 0x44
0xb13: V1087 = ADD 0x44 V1069
0xb14: V1088 = 0x0
0xb16: V1089 = 0x40
0xb18: V1090 = M[0x40]
0xb1b: V1091 = SUB V1087 V1090
0xb1d: V1092 = 0x0
0xb21: V1093 = EXTCODESIZE V1065
0xb22: V1094 = ISZERO V1093
0xb23: V1095 = ISZERO V1094
0xb24: V1096 = 0xb2c
0xb27: JUMPI 0xb2c V1095
---
Entry stack: [V12, 0x684, V667]
Stack pops: 1
Stack additions: [S0, V1065, 0xa9059cbb, V1087, 0x0, V1090, V1091, V1090, 0x0, V1065]
Exit stack: [V12, 0x684, V667, V1065, 0xa9059cbb, V1087, 0x0, V1090, V1091, V1090, 0x0, V1065]

================================

Block 0xb28
[0xb28:0xb2b]
---
Predecessors: [0xad7]
Successors: []
---
0xb28 PUSH1 0x0
0xb2a DUP1
0xb2b REVERT
---
0xb28: V1097 = 0x0
0xb2b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x684, V667, V1065, 0xa9059cbb, V1087, 0x0, V1090, V1091, V1090, 0x0, V1065]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, V667, V1065, 0xa9059cbb, V1087, 0x0, V1090, V1091, V1090, 0x0, V1065]

================================

Block 0xb2c
[0xb2c:0xb38]
---
Predecessors: [0xad7]
Successors: [0xb39, 0xb3d]
---
0xb2c JUMPDEST
0xb2d PUSH2 0x2c6
0xb30 GAS
0xb31 SUB
0xb32 CALL
0xb33 ISZERO
0xb34 ISZERO
0xb35 PUSH2 0xb3d
0xb38 JUMPI
---
0xb2c: JUMPDEST 
0xb2d: V1098 = 0x2c6
0xb30: V1099 = GAS
0xb31: V1100 = SUB V1099 0x2c6
0xb32: V1101 = CALL V1100 V1065 0x0 V1090 V1091 V1090 0x0
0xb33: V1102 = ISZERO V1101
0xb34: V1103 = ISZERO V1102
0xb35: V1104 = 0xb3d
0xb38: JUMPI 0xb3d V1103
---
Entry stack: [V12, 0x684, V667, V1065, 0xa9059cbb, V1087, 0x0, V1090, V1091, V1090, 0x0, V1065]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x684, V667, V1065, 0xa9059cbb, V1087]

================================

Block 0xb39
[0xb39:0xb3c]
---
Predecessors: [0xb2c]
Successors: []
---
0xb39 PUSH1 0x0
0xb3b DUP1
0xb3c REVERT
---
0xb39: V1105 = 0x0
0xb3c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x684, V667, V1065, 0xa9059cbb, V1087]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, V667, V1065, 0xa9059cbb, V1087]

================================

Block 0xb3d
[0xb3d:0xb40]
---
Predecessors: [0xb2c]
Successors: [0xb41]
---
0xb3d JUMPDEST
0xb3e POP
0xb3f POP
0xb40 POP
---
0xb3d: JUMPDEST 
---
Entry stack: [V12, 0x684, V667, V1065, 0xa9059cbb, V1087]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x684, V667]

================================

Block 0xb41
[0xb41:0xb41]
---
Predecessors: [0xab6, 0xac0, 0xb3d, 0xca3, 0xd92, 0xdcb]
Successors: [0xb42]
---
0xb41 JUMPDEST
---
0xb41: JUMPDEST 
---
Entry stack: [V12, 0x684, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, S0]

================================

Block 0xb42
[0xb42:0xb42]
---
Predecessors: [0xb41]
Successors: [0xb43]
---
0xb42 JUMPDEST
---
0xb42: JUMPDEST 
---
Entry stack: [V12, 0x684, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, S0]

================================

Block 0xb43
[0xb43:0xb43]
---
Predecessors: [0xb42]
Successors: [0xb44]
---
0xb43 JUMPDEST
---
0xb43: JUMPDEST 
---
Entry stack: [V12, 0x684, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, S0]

================================

Block 0xb44
[0xb44:0xb46]
---
Predecessors: [0xb43]
Successors: [0x684]
---
0xb44 JUMPDEST
0xb45 POP
0xb46 JUMP
---
0xb44: JUMPDEST 
0xb46: JUMP 0x684
---
Entry stack: [V12, 0x684, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xb47
[0xb47:0xb4c]
---
Predecessors: [0x6ce]
Successors: [0x699]
---
0xb47 JUMPDEST
0xb48 PUSH1 0x2
0xb4a SLOAD
0xb4b DUP2
0xb4c JUMP
---
0xb47: JUMPDEST 
0xb48: V1106 = 0x2
0xb4a: V1107 = S[0x2]
0xb4c: JUMP 0x699
---
Entry stack: [V12, 0x699]
Stack pops: 1
Stack additions: [S0, V1107]
Exit stack: [V12, 0x699, V1107]

================================

Block 0xb4d
[0xb4d:0xb52]
---
Predecessors: [0x6f3]
Successors: [0x699]
---
0xb4d JUMPDEST
0xb4e PUSH1 0x5
0xb50 SLOAD
0xb51 DUP2
0xb52 JUMP
---
0xb4d: JUMPDEST 
0xb4e: V1108 = 0x5
0xb50: V1109 = S[0x5]
0xb52: JUMP 0x699
---
Entry stack: [V12, 0x699]
Stack pops: 1
Stack additions: [S0, V1109]
Exit stack: [V12, 0x699, V1109]

================================

Block 0xb53
[0xb53:0xb58]
---
Predecessors: [0x718]
Successors: [0x699]
---
0xb53 JUMPDEST
0xb54 PUSH1 0xf
0xb56 SLOAD
0xb57 DUP2
0xb58 JUMP
---
0xb53: JUMPDEST 
0xb54: V1110 = 0xf
0xb56: V1111 = S[0xf]
0xb58: JUMP 0x699
---
Entry stack: [V12, 0x699]
Stack pops: 1
Stack additions: [S0, V1111]
Exit stack: [V12, 0x699, V1111]

================================

Block 0xb59
[0xb59:0xb67]
---
Predecessors: [0x73d]
Successors: [0x745]
---
0xb59 JUMPDEST
0xb5a PUSH1 0x3
0xb5c SLOAD
0xb5d PUSH1 0x1
0xb5f PUSH1 0xa0
0xb61 PUSH1 0x2
0xb63 EXP
0xb64 SUB
0xb65 AND
0xb66 DUP2
0xb67 JUMP
---
0xb59: JUMPDEST 
0xb5a: V1112 = 0x3
0xb5c: V1113 = S[0x3]
0xb5d: V1114 = 0x1
0xb5f: V1115 = 0xa0
0xb61: V1116 = 0x2
0xb63: V1117 = EXP 0x2 0xa0
0xb64: V1118 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb65: V1119 = AND 0xffffffffffffffffffffffffffffffffffffffff V1113
0xb67: JUMP 0x745
---
Entry stack: [V12, 0x745]
Stack pops: 1
Stack additions: [S0, V1119]
Exit stack: [V12, 0x745, V1119]

================================

Block 0xb68
[0xb68:0xb6d]
---
Predecessors: [0x76c]
Successors: [0x699]
---
0xb68 JUMPDEST
0xb69 PUSH1 0xd
0xb6b SLOAD
0xb6c DUP2
0xb6d JUMP
---
0xb68: JUMPDEST 
0xb69: V1120 = 0xd
0xb6b: V1121 = S[0xd]
0xb6d: JUMP 0x699
---
Entry stack: [V12, 0x699]
Stack pops: 1
Stack additions: [S0, V1121]
Exit stack: [V12, 0x699, V1121]

================================

Block 0xb6e
[0xb6e:0xb73]
---
Predecessors: [0x791]
Successors: [0x699]
---
0xb6e JUMPDEST
0xb6f PUSH1 0x10
0xb71 SLOAD
0xb72 DUP2
0xb73 JUMP
---
0xb6e: JUMPDEST 
0xb6f: V1122 = 0x10
0xb71: V1123 = S[0x10]
0xb73: JUMP 0x699
---
Entry stack: [V12, 0x699]
Stack pops: 1
Stack additions: [S0, V1123]
Exit stack: [V12, 0x699, V1123]

================================

Block 0xb74
[0xb74:0xb8b]
---
Predecessors: [0x7b6]
Successors: [0xaac, 0xb8c]
---
0xb74 JUMPDEST
0xb75 PUSH1 0x4
0xb77 SLOAD
0xb78 CALLER
0xb79 PUSH1 0x1
0xb7b PUSH1 0xa0
0xb7d PUSH1 0x2
0xb7f EXP
0xb80 SUB
0xb81 SWAP1
0xb82 DUP2
0xb83 AND
0xb84 SWAP2
0xb85 AND
0xb86 EQ
0xb87 ISZERO
0xb88 PUSH2 0xaac
0xb8b JUMPI
---
0xb74: JUMPDEST 
0xb75: V1124 = 0x4
0xb77: V1125 = S[0x4]
0xb78: V1126 = CALLER
0xb79: V1127 = 0x1
0xb7b: V1128 = 0xa0
0xb7d: V1129 = 0x2
0xb7f: V1130 = EXP 0x2 0xa0
0xb80: V1131 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb83: V1132 = AND 0xffffffffffffffffffffffffffffffffffffffff V1126
0xb85: V1133 = AND V1125 0xffffffffffffffffffffffffffffffffffffffff
0xb86: V1134 = EQ V1133 V1132
0xb87: V1135 = ISZERO V1134
0xb88: V1136 = 0xaac
0xb8b: JUMPI 0xaac V1135
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xb8c
[0xb8c:0xb96]
---
Predecessors: [0xb74]
Successors: [0xb97]
---
0xb8c PUSH1 0x13
0xb8e DUP1
0xb8f SLOAD
0xb90 PUSH2 0xff00
0xb93 NOT
0xb94 AND
0xb95 SWAP1
0xb96 SSTORE
---
0xb8c: V1137 = 0x13
0xb8f: V1138 = S[0x13]
0xb90: V1139 = 0xff00
0xb93: V1140 = NOT 0xff00
0xb94: V1141 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1138
0xb96: S[0x13] = V1141
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xb97
[0xb97:0xb97]
---
Predecessors: [0xb8c]
Successors: [0xb98]
---
0xb97 JUMPDEST
---
0xb97: JUMPDEST 
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xb98
[0xb98:0xb99]
---
Predecessors: [0xb97]
Successors: [0x684]
---
0xb98 JUMPDEST
0xb99 JUMP
---
0xb98: JUMPDEST 
0xb99: JUMP 0x684
---
Entry stack: [V12, 0x684]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xb9a
[0xb9a:0xba8]
---
Predecessors: [0x7cb]
Successors: [0x745]
---
0xb9a JUMPDEST
0xb9b PUSH1 0x4
0xb9d SLOAD
0xb9e PUSH1 0x1
0xba0 PUSH1 0xa0
0xba2 PUSH1 0x2
0xba4 EXP
0xba5 SUB
0xba6 AND
0xba7 DUP2
0xba8 JUMP
---
0xb9a: JUMPDEST 
0xb9b: V1142 = 0x4
0xb9d: V1143 = S[0x4]
0xb9e: V1144 = 0x1
0xba0: V1145 = 0xa0
0xba2: V1146 = 0x2
0xba4: V1147 = EXP 0x2 0xa0
0xba5: V1148 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba6: V1149 = AND 0xffffffffffffffffffffffffffffffffffffffff V1143
0xba8: JUMP 0x745
---
Entry stack: [V12, 0x745]
Stack pops: 1
Stack additions: [S0, V1149]
Exit stack: [V12, 0x745, V1149]

================================

Block 0xba9
[0xba9:0xbb7]
---
Predecessors: [0x7fa]
Successors: [0x802]
---
0xba9 JUMPDEST
0xbaa PUSH1 0x13
0xbac SLOAD
0xbad PUSH3 0x10000
0xbb1 SWAP1
0xbb2 DIV
0xbb3 PUSH1 0xff
0xbb5 AND
0xbb6 DUP2
0xbb7 JUMP
---
0xba9: JUMPDEST 
0xbaa: V1150 = 0x13
0xbac: V1151 = S[0x13]
0xbad: V1152 = 0x10000
0xbb2: V1153 = DIV V1151 0x10000
0xbb3: V1154 = 0xff
0xbb5: V1155 = AND 0xff V1153
0xbb7: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1155]
Exit stack: [V12, 0x802, V1155]

================================

Block 0xbb8
[0xbb8:0xbc6]
---
Predecessors: [0x821]
Successors: [0x745]
---
0xbb8 JUMPDEST
0xbb9 PUSH1 0x11
0xbbb SLOAD
0xbbc PUSH1 0x1
0xbbe PUSH1 0xa0
0xbc0 PUSH1 0x2
0xbc2 EXP
0xbc3 SUB
0xbc4 AND
0xbc5 DUP2
0xbc6 JUMP
---
0xbb8: JUMPDEST 
0xbb9: V1156 = 0x11
0xbbb: V1157 = S[0x11]
0xbbc: V1158 = 0x1
0xbbe: V1159 = 0xa0
0xbc0: V1160 = 0x2
0xbc2: V1161 = EXP 0x2 0xa0
0xbc3: V1162 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbc4: V1163 = AND 0xffffffffffffffffffffffffffffffffffffffff V1157
0xbc6: JUMP 0x745
---
Entry stack: [V12, 0x745]
Stack pops: 1
Stack additions: [S0, V1163]
Exit stack: [V12, 0x745, V1163]

================================

Block 0xbc7
[0xbc7:0xbd8]
---
Predecessors: [0x850]
Successors: [0x699]
---
0xbc7 JUMPDEST
0xbc8 PUSH1 0x12
0xbca PUSH1 0x20
0xbcc MSTORE
0xbcd PUSH1 0x0
0xbcf SWAP1
0xbd0 DUP2
0xbd1 MSTORE
0xbd2 PUSH1 0x40
0xbd4 SWAP1
0xbd5 SHA3
0xbd6 SLOAD
0xbd7 DUP2
0xbd8 JUMP
---
0xbc7: JUMPDEST 
0xbc8: V1164 = 0x12
0xbca: V1165 = 0x20
0xbcc: M[0x20] = 0x12
0xbcd: V1166 = 0x0
0xbd1: M[0x0] = V824
0xbd2: V1167 = 0x40
0xbd5: V1168 = SHA3 0x0 0x40
0xbd6: V1169 = S[V1168]
0xbd8: JUMP 0x699
---
Entry stack: [V12, 0x699, V824]
Stack pops: 2
Stack additions: [S1, V1169]
Exit stack: [V12, 0x699, V1169]

================================

Block 0xbd9
[0xbd9:0xbde]
---
Predecessors: [0x881]
Successors: [0x699]
---
0xbd9 JUMPDEST
0xbda PUSH1 0x7
0xbdc SLOAD
0xbdd DUP2
0xbde JUMP
---
0xbd9: JUMPDEST 
0xbda: V1170 = 0x7
0xbdc: V1171 = S[0x7]
0xbde: JUMP 0x699
---
Entry stack: [V12, 0x699]
Stack pops: 1
Stack additions: [S0, V1171]
Exit stack: [V12, 0x699, V1171]

================================

Block 0xbdf
[0xbdf:0xbe4]
---
Predecessors: [0x8a6]
Successors: [0x699]
---
0xbdf JUMPDEST
0xbe0 PUSH1 0x8
0xbe2 SLOAD
0xbe3 DUP2
0xbe4 JUMP
---
0xbdf: JUMPDEST 
0xbe0: V1172 = 0x8
0xbe2: V1173 = S[0x8]
0xbe4: JUMP 0x699
---
Entry stack: [V12, 0x699]
Stack pops: 1
Stack additions: [S0, V1173]
Exit stack: [V12, 0x699, V1173]

================================

Block 0xbe5
[0xbe5:0xbea]
---
Predecessors: [0x8cb]
Successors: [0x699]
---
0xbe5 JUMPDEST
0xbe6 PUSH1 0x1
0xbe8 SLOAD
0xbe9 DUP2
0xbea JUMP
---
0xbe5: JUMPDEST 
0xbe6: V1174 = 0x1
0xbe8: V1175 = S[0x1]
0xbea: JUMP 0x699
---
Entry stack: [V12, 0x699]
Stack pops: 1
Stack additions: [S0, V1175]
Exit stack: [V12, 0x699, V1175]

================================

Block 0xbeb
[0xbeb:0xbf0]
---
Predecessors: [0x8f0]
Successors: [0x699]
---
0xbeb JUMPDEST
0xbec PUSH1 0xe
0xbee SLOAD
0xbef DUP2
0xbf0 JUMP
---
0xbeb: JUMPDEST 
0xbec: V1176 = 0xe
0xbee: V1177 = S[0xe]
0xbf0: JUMP 0x699
---
Entry stack: [V12, 0x699]
Stack pops: 1
Stack additions: [S0, V1177]
Exit stack: [V12, 0x699, V1177]

================================

Block 0xbf1
[0xbf1:0xbf6]
---
Predecessors: [0x915]
Successors: [0x699]
---
0xbf1 JUMPDEST
0xbf2 PUSH1 0x9
0xbf4 SLOAD
0xbf5 DUP2
0xbf6 JUMP
---
0xbf1: JUMPDEST 
0xbf2: V1178 = 0x9
0xbf4: V1179 = S[0x9]
0xbf6: JUMP 0x699
---
Entry stack: [V12, 0x699]
Stack pops: 1
Stack additions: [S0, V1179]
Exit stack: [V12, 0x699, V1179]

================================

Block 0xbf7
[0xbf7:0xbfc]
---
Predecessors: [0x93a]
Successors: [0x699]
---
0xbf7 JUMPDEST
0xbf8 PUSH1 0xa
0xbfa SLOAD
0xbfb DUP2
0xbfc JUMP
---
0xbf7: JUMPDEST 
0xbf8: V1180 = 0xa
0xbfa: V1181 = S[0xa]
0xbfc: JUMP 0x699
---
Entry stack: [V12, 0x699]
Stack pops: 1
Stack additions: [S0, V1181]
Exit stack: [V12, 0x699, V1181]

================================

Block 0xbfd
[0xbfd:0xc14]
---
Predecessors: [0x95f]
Successors: [0xaac, 0xc15]
---
0xbfd JUMPDEST
0xbfe PUSH1 0x4
0xc00 SLOAD
0xc01 CALLER
0xc02 PUSH1 0x1
0xc04 PUSH1 0xa0
0xc06 PUSH1 0x2
0xc08 EXP
0xc09 SUB
0xc0a SWAP1
0xc0b DUP2
0xc0c AND
0xc0d SWAP2
0xc0e AND
0xc0f EQ
0xc10 ISZERO
0xc11 PUSH2 0xaac
0xc14 JUMPI
---
0xbfd: JUMPDEST 
0xbfe: V1182 = 0x4
0xc00: V1183 = S[0x4]
0xc01: V1184 = CALLER
0xc02: V1185 = 0x1
0xc04: V1186 = 0xa0
0xc06: V1187 = 0x2
0xc08: V1188 = EXP 0x2 0xa0
0xc09: V1189 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc0c: V1190 = AND 0xffffffffffffffffffffffffffffffffffffffff V1184
0xc0e: V1191 = AND V1183 0xffffffffffffffffffffffffffffffffffffffff
0xc0f: V1192 = EQ V1191 V1190
0xc10: V1193 = ISZERO V1192
0xc11: V1194 = 0xaac
0xc14: JUMPI 0xaac V1193
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xc15
[0xc15:0xc20]
---
Predecessors: [0xbfd]
Successors: [0xc21]
---
0xc15 PUSH1 0x13
0xc17 DUP1
0xc18 SLOAD
0xc19 PUSH3 0xff0000
0xc1d NOT
0xc1e AND
0xc1f SWAP1
0xc20 SSTORE
---
0xc15: V1195 = 0x13
0xc18: V1196 = S[0x13]
0xc19: V1197 = 0xff0000
0xc1d: V1198 = NOT 0xff0000
0xc1e: V1199 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V1196
0xc20: S[0x13] = V1199
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xc21
[0xc21:0xc21]
---
Predecessors: [0xc15]
Successors: [0xc22]
---
0xc21 JUMPDEST
---
0xc21: JUMPDEST 
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xc22
[0xc22:0xc23]
---
Predecessors: [0xc21]
Successors: [0x684]
---
0xc22 JUMPDEST
0xc23 JUMP
---
0xc22: JUMPDEST 
0xc23: JUMP 0x684
---
Entry stack: [V12, 0x684]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xc24
[0xc24:0xc3b]
---
Predecessors: [0x974]
Successors: [0xaac, 0xc3c]
---
0xc24 JUMPDEST
0xc25 PUSH1 0x4
0xc27 SLOAD
0xc28 CALLER
0xc29 PUSH1 0x1
0xc2b PUSH1 0xa0
0xc2d PUSH1 0x2
0xc2f EXP
0xc30 SUB
0xc31 SWAP1
0xc32 DUP2
0xc33 AND
0xc34 SWAP2
0xc35 AND
0xc36 EQ
0xc37 ISZERO
0xc38 PUSH2 0xaac
0xc3b JUMPI
---
0xc24: JUMPDEST 
0xc25: V1200 = 0x4
0xc27: V1201 = S[0x4]
0xc28: V1202 = CALLER
0xc29: V1203 = 0x1
0xc2b: V1204 = 0xa0
0xc2d: V1205 = 0x2
0xc2f: V1206 = EXP 0x2 0xa0
0xc30: V1207 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc33: V1208 = AND 0xffffffffffffffffffffffffffffffffffffffff V1202
0xc35: V1209 = AND V1201 0xffffffffffffffffffffffffffffffffffffffff
0xc36: V1210 = EQ V1209 V1208
0xc37: V1211 = ISZERO V1210
0xc38: V1212 = 0xaac
0xc3b: JUMPI 0xaac V1211
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xc3c
[0xc3c:0xc4a]
---
Predecessors: [0xc24]
Successors: [0xc4b]
---
0xc3c PUSH1 0x13
0xc3e DUP1
0xc3f SLOAD
0xc40 PUSH2 0xff00
0xc43 NOT
0xc44 AND
0xc45 PUSH2 0x100
0xc48 OR
0xc49 SWAP1
0xc4a SSTORE
---
0xc3c: V1213 = 0x13
0xc3f: V1214 = S[0x13]
0xc40: V1215 = 0xff00
0xc43: V1216 = NOT 0xff00
0xc44: V1217 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1214
0xc45: V1218 = 0x100
0xc48: V1219 = OR 0x100 V1217
0xc4a: S[0x13] = V1219
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xc4b
[0xc4b:0xc4b]
---
Predecessors: [0xc3c]
Successors: [0xc4c]
---
0xc4b JUMPDEST
---
0xc4b: JUMPDEST 
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xc4c
[0xc4c:0xc4d]
---
Predecessors: [0xc4b]
Successors: [0x684]
---
0xc4c JUMPDEST
0xc4d JUMP
---
0xc4c: JUMPDEST 
0xc4d: JUMP 0x684
---
Entry stack: [V12, 0x684]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xc4e
[0xc4e:0xc53]
---
Predecessors: [0x989]
Successors: [0x699]
---
0xc4e JUMPDEST
0xc4f PUSH1 0xc
0xc51 SLOAD
0xc52 DUP2
0xc53 JUMP
---
0xc4e: JUMPDEST 
0xc4f: V1220 = 0xc
0xc51: V1221 = S[0xc]
0xc53: JUMP 0x699
---
Entry stack: [V12, 0x699]
Stack pops: 1
Stack additions: [S0, V1221]
Exit stack: [V12, 0x699, V1221]

================================

Block 0xc54
[0xc54:0xc59]
---
Predecessors: [0x9ae]
Successors: [0x699]
---
0xc54 JUMPDEST
0xc55 PUSH1 0xb
0xc57 SLOAD
0xc58 DUP2
0xc59 JUMP
---
0xc54: JUMPDEST 
0xc55: V1222 = 0xb
0xc57: V1223 = S[0xb]
0xc59: JUMP 0x699
---
Entry stack: [V12, 0x699]
Stack pops: 1
Stack additions: [S0, V1223]
Exit stack: [V12, 0x699, V1223]

================================

Block 0xc5a
[0xc5a:0xc5f]
---
Predecessors: [0x9d3]
Successors: [0x699]
---
0xc5a JUMPDEST
0xc5b PUSH1 0x6
0xc5d SLOAD
0xc5e DUP2
0xc5f JUMP
---
0xc5a: JUMPDEST 
0xc5b: V1224 = 0x6
0xc5d: V1225 = S[0x6]
0xc5f: JUMP 0x699
---
Entry stack: [V12, 0x699]
Stack pops: 1
Stack additions: [S0, V1225]
Exit stack: [V12, 0x699, V1225]

================================

Block 0xc60
[0xc60:0xc6d]
---
Predecessors: [0x9f8]
Successors: [0x802]
---
0xc60 JUMPDEST
0xc61 PUSH1 0x13
0xc63 SLOAD
0xc64 PUSH2 0x100
0xc67 SWAP1
0xc68 DIV
0xc69 PUSH1 0xff
0xc6b AND
0xc6c DUP2
0xc6d JUMP
---
0xc60: JUMPDEST 
0xc61: V1226 = 0x13
0xc63: V1227 = S[0x13]
0xc64: V1228 = 0x100
0xc68: V1229 = DIV V1227 0x100
0xc69: V1230 = 0xff
0xc6b: V1231 = AND 0xff V1229
0xc6d: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1231]
Exit stack: [V12, 0x802, V1231]

================================

Block 0xc6e
[0xc6e:0xc76]
---
Predecessors: [0xa1f]
Successors: [0x802]
---
0xc6e JUMPDEST
0xc6f PUSH1 0x13
0xc71 SLOAD
0xc72 PUSH1 0xff
0xc74 AND
0xc75 DUP2
0xc76 JUMP
---
0xc6e: JUMPDEST 
0xc6f: V1232 = 0x13
0xc71: V1233 = S[0x13]
0xc72: V1234 = 0xff
0xc74: V1235 = AND 0xff V1233
0xc76: JUMP 0x802
---
Entry stack: [V12, 0x802]
Stack pops: 1
Stack additions: [S0, V1235]
Exit stack: [V12, 0x802, V1235]

================================

Block 0xc77
[0xc77:0xc8e]
---
Predecessors: [0xa46]
Successors: [0xaac, 0xc8f]
---
0xc77 JUMPDEST
0xc78 PUSH1 0x4
0xc7a SLOAD
0xc7b CALLER
0xc7c PUSH1 0x1
0xc7e PUSH1 0xa0
0xc80 PUSH1 0x2
0xc82 EXP
0xc83 SUB
0xc84 SWAP1
0xc85 DUP2
0xc86 AND
0xc87 SWAP2
0xc88 AND
0xc89 EQ
0xc8a ISZERO
0xc8b PUSH2 0xaac
0xc8e JUMPI
---
0xc77: JUMPDEST 
0xc78: V1236 = 0x4
0xc7a: V1237 = S[0x4]
0xc7b: V1238 = CALLER
0xc7c: V1239 = 0x1
0xc7e: V1240 = 0xa0
0xc80: V1241 = 0x2
0xc82: V1242 = EXP 0x2 0xa0
0xc83: V1243 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc86: V1244 = AND 0xffffffffffffffffffffffffffffffffffffffff V1238
0xc88: V1245 = AND V1237 0xffffffffffffffffffffffffffffffffffffffff
0xc89: V1246 = EQ V1245 V1244
0xc8a: V1247 = ISZERO V1246
0xc8b: V1248 = 0xaac
0xc8e: JUMPI 0xaac V1247
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xc8f
[0xc8f:0xc9f]
---
Predecessors: [0xc77]
Successors: [0xca0]
---
0xc8f PUSH1 0x13
0xc91 DUP1
0xc92 SLOAD
0xc93 PUSH3 0xff0000
0xc97 NOT
0xc98 AND
0xc99 PUSH3 0x10000
0xc9d OR
0xc9e SWAP1
0xc9f SSTORE
---
0xc8f: V1249 = 0x13
0xc92: V1250 = S[0x13]
0xc93: V1251 = 0xff0000
0xc97: V1252 = NOT 0xff0000
0xc98: V1253 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V1250
0xc99: V1254 = 0x10000
0xc9d: V1255 = OR 0x10000 V1253
0xc9f: S[0x13] = V1255
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xca0
[0xca0:0xca0]
---
Predecessors: [0xc8f]
Successors: [0xca1]
---
0xca0 JUMPDEST
---
0xca0: JUMPDEST 
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684]

================================

Block 0xca1
[0xca1:0xca2]
---
Predecessors: [0xca0]
Successors: [0x684]
---
0xca1 JUMPDEST
0xca2 JUMP
---
0xca1: JUMPDEST 
0xca2: JUMP 0x684
---
Entry stack: [V12, 0x684]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xca3
[0xca3:0xcaf]
---
Predecessors: [0xa5b]
Successors: [0xb41, 0xcb0]
---
0xca3 JUMPDEST
0xca4 PUSH1 0x2
0xca6 SLOAD
0xca7 PUSH1 0x0
0xca9 SWAP1
0xcaa TIMESTAMP
0xcab LT
0xcac PUSH2 0xb41
0xcaf JUMPI
---
0xca3: JUMPDEST 
0xca4: V1256 = 0x2
0xca6: V1257 = S[0x2]
0xca7: V1258 = 0x0
0xcaa: V1259 = TIMESTAMP
0xcab: V1260 = LT V1259 V1257
0xcac: V1261 = 0xb41
0xcaf: JUMPI 0xb41 V1260
---
Entry stack: [V12, 0x684]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x684, 0x0]

================================

Block 0xcb0
[0xcb0:0xcbb]
---
Predecessors: [0xca3]
Successors: [0xcbc, 0xd70]
---
0xcb0 PUSH1 0x13
0xcb2 SLOAD
0xcb3 PUSH1 0xff
0xcb5 AND
0xcb6 ISZERO
0xcb7 ISZERO
0xcb8 PUSH2 0xd70
0xcbb JUMPI
---
0xcb0: V1262 = 0x13
0xcb2: V1263 = S[0x13]
0xcb3: V1264 = 0xff
0xcb5: V1265 = AND 0xff V1263
0xcb6: V1266 = ISZERO V1265
0xcb7: V1267 = ISZERO V1266
0xcb8: V1268 = 0xd70
0xcbb: JUMPI 0xd70 V1267
---
Entry stack: [V12, 0x684, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, 0x0]

================================

Block 0xcbc
[0xcbc:0xce2]
---
Predecessors: [0xcb0]
Successors: [0xce3, 0xd70]
---
0xcbc POP
0xcbd PUSH1 0x1
0xcbf PUSH1 0xa0
0xcc1 PUSH1 0x2
0xcc3 EXP
0xcc4 SUB
0xcc5 CALLER
0xcc6 AND
0xcc7 PUSH1 0x0
0xcc9 SWAP1
0xcca DUP2
0xccb MSTORE
0xccc PUSH1 0x12
0xcce PUSH1 0x20
0xcd0 MSTORE
0xcd1 PUSH1 0x40
0xcd3 DUP2
0xcd4 SHA3
0xcd5 DUP1
0xcd6 SLOAD
0xcd7 SWAP1
0xcd8 DUP3
0xcd9 SWAP1
0xcda SSTORE
0xcdb SWAP1
0xcdc DUP2
0xcdd GT
0xcde ISZERO
0xcdf PUSH2 0xd70
0xce2 JUMPI
---
0xcbd: V1269 = 0x1
0xcbf: V1270 = 0xa0
0xcc1: V1271 = 0x2
0xcc3: V1272 = EXP 0x2 0xa0
0xcc4: V1273 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc5: V1274 = CALLER
0xcc6: V1275 = AND V1274 0xffffffffffffffffffffffffffffffffffffffff
0xcc7: V1276 = 0x0
0xccb: M[0x0] = V1275
0xccc: V1277 = 0x12
0xcce: V1278 = 0x20
0xcd0: M[0x20] = 0x12
0xcd1: V1279 = 0x40
0xcd4: V1280 = SHA3 0x0 0x40
0xcd6: V1281 = S[V1280]
0xcda: S[V1280] = 0x0
0xcdd: V1282 = GT V1281 0x0
0xcde: V1283 = ISZERO V1282
0xcdf: V1284 = 0xd70
0xce2: JUMPI 0xd70 V1283
---
Entry stack: [V12, 0x684, 0x0]
Stack pops: 1
Stack additions: [V1281]
Exit stack: [V12, 0x684, V1281]

================================

Block 0xce3
[0xce3:0xd0d]
---
Predecessors: [0xcbc]
Successors: [0xd0e, 0xd54]
---
0xce3 PUSH1 0x1
0xce5 PUSH1 0xa0
0xce7 PUSH1 0x2
0xce9 EXP
0xcea SUB
0xceb CALLER
0xcec AND
0xced DUP2
0xcee ISZERO
0xcef PUSH2 0x8fc
0xcf2 MUL
0xcf3 DUP3
0xcf4 PUSH1 0x40
0xcf6 MLOAD
0xcf7 PUSH1 0x0
0xcf9 PUSH1 0x40
0xcfb MLOAD
0xcfc DUP1
0xcfd DUP4
0xcfe SUB
0xcff DUP2
0xd00 DUP6
0xd01 DUP9
0xd02 DUP9
0xd03 CALL
0xd04 SWAP4
0xd05 POP
0xd06 POP
0xd07 POP
0xd08 POP
0xd09 ISZERO
0xd0a PUSH2 0xd54
0xd0d JUMPI
---
0xce3: V1285 = 0x1
0xce5: V1286 = 0xa0
0xce7: V1287 = 0x2
0xce9: V1288 = EXP 0x2 0xa0
0xcea: V1289 = SUB 0x10000000000000000000000000000000000000000 0x1
0xceb: V1290 = CALLER
0xcec: V1291 = AND V1290 0xffffffffffffffffffffffffffffffffffffffff
0xcee: V1292 = ISZERO V1281
0xcef: V1293 = 0x8fc
0xcf2: V1294 = MUL 0x8fc V1292
0xcf4: V1295 = 0x40
0xcf6: V1296 = M[0x40]
0xcf7: V1297 = 0x0
0xcf9: V1298 = 0x40
0xcfb: V1299 = M[0x40]
0xcfe: V1300 = SUB V1296 V1299
0xd03: V1301 = CALL V1294 V1291 V1281 V1299 V1300 V1299 0x0
0xd09: V1302 = ISZERO V1301
0xd0a: V1303 = 0xd54
0xd0d: JUMPI 0xd54 V1302
---
Entry stack: [V12, 0x684, V1281]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x684, V1281]

================================

Block 0xd0e
[0xd0e:0xd53]
---
Predecessors: [0xce3]
Successors: [0xd70]
---
0xd0e PUSH1 0x0
0xd10 DUP1
0xd11 MLOAD
0xd12 PUSH1 0x20
0xd14 PUSH2 0xe33
0xd17 DUP4
0xd18 CODECOPY
0xd19 DUP2
0xd1a MLOAD
0xd1b SWAP2
0xd1c MSTORE
0xd1d CALLER
0xd1e DUP3
0xd1f PUSH1 0x0
0xd21 PUSH1 0x40
0xd23 MLOAD
0xd24 PUSH1 0x1
0xd26 PUSH1 0xa0
0xd28 PUSH1 0x2
0xd2a EXP
0xd2b SUB
0xd2c SWAP1
0xd2d SWAP4
0xd2e AND
0xd2f DUP4
0xd30 MSTORE
0xd31 PUSH1 0x20
0xd33 DUP4
0xd34 ADD
0xd35 SWAP2
0xd36 SWAP1
0xd37 SWAP2
0xd38 MSTORE
0xd39 ISZERO
0xd3a ISZERO
0xd3b PUSH1 0x40
0xd3d DUP1
0xd3e DUP4
0xd3f ADD
0xd40 SWAP2
0xd41 SWAP1
0xd42 SWAP2
0xd43 MSTORE
0xd44 PUSH1 0x60
0xd46 SWAP1
0xd47 SWAP2
0xd48 ADD
0xd49 SWAP1
0xd4a MLOAD
0xd4b DUP1
0xd4c SWAP2
0xd4d SUB
0xd4e SWAP1
0xd4f LOG1
0xd50 PUSH2 0xd70
0xd53 JUMP
---
0xd0e: V1304 = 0x0
0xd11: V1305 = M[0x0]
0xd12: V1306 = 0x20
0xd14: V1307 = 0xe33
0xd18: CODECOPY 0x0 0xe33 0x20
0xd1a: V1308 = M[0x0]
0xd1c: M[0x0] = V1305
0xd1d: V1309 = CALLER
0xd1f: V1310 = 0x0
0xd21: V1311 = 0x40
0xd23: V1312 = M[0x40]
0xd24: V1313 = 0x1
0xd26: V1314 = 0xa0
0xd28: V1315 = 0x2
0xd2a: V1316 = EXP 0x2 0xa0
0xd2b: V1317 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd2e: V1318 = AND V1309 0xffffffffffffffffffffffffffffffffffffffff
0xd30: M[V1312] = V1318
0xd31: V1319 = 0x20
0xd34: V1320 = ADD V1312 0x20
0xd38: M[V1320] = V1281
0xd39: V1321 = ISZERO 0x0
0xd3a: V1322 = ISZERO 0x1
0xd3b: V1323 = 0x40
0xd3f: V1324 = ADD V1312 0x40
0xd43: M[V1324] = 0x0
0xd44: V1325 = 0x60
0xd48: V1326 = ADD V1312 0x60
0xd4a: V1327 = M[0x40]
0xd4d: V1328 = SUB V1326 V1327
0xd4f: LOG V1327 V1328 V1308
0xd50: V1329 = 0xd70
0xd53: JUMP 0xd70
---
Entry stack: [V12, 0x684, V1281]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x684, V1281]

================================

Block 0xd54
[0xd54:0xd6f]
---
Predecessors: [0xce3]
Successors: [0xd70]
---
0xd54 JUMPDEST
0xd55 PUSH1 0x1
0xd57 PUSH1 0xa0
0xd59 PUSH1 0x2
0xd5b EXP
0xd5c SUB
0xd5d CALLER
0xd5e AND
0xd5f PUSH1 0x0
0xd61 SWAP1
0xd62 DUP2
0xd63 MSTORE
0xd64 PUSH1 0x12
0xd66 PUSH1 0x20
0xd68 MSTORE
0xd69 PUSH1 0x40
0xd6b SWAP1
0xd6c SHA3
0xd6d DUP2
0xd6e SWAP1
0xd6f SSTORE
---
0xd54: JUMPDEST 
0xd55: V1330 = 0x1
0xd57: V1331 = 0xa0
0xd59: V1332 = 0x2
0xd5b: V1333 = EXP 0x2 0xa0
0xd5c: V1334 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd5d: V1335 = CALLER
0xd5e: V1336 = AND V1335 0xffffffffffffffffffffffffffffffffffffffff
0xd5f: V1337 = 0x0
0xd63: M[0x0] = V1336
0xd64: V1338 = 0x12
0xd66: V1339 = 0x20
0xd68: M[0x20] = 0x12
0xd69: V1340 = 0x40
0xd6c: V1341 = SHA3 0x0 0x40
0xd6f: S[V1341] = V1281
---
Entry stack: [V12, 0x684, V1281]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x684, V1281]

================================

Block 0xd70
[0xd70:0xd70]
---
Predecessors: [0xcb0, 0xcbc, 0xd0e, 0xd54]
Successors: [0xd71]
---
0xd70 JUMPDEST
---
0xd70: JUMPDEST 
---
Entry stack: [V12, 0x684, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, S0]

================================

Block 0xd71
[0xd71:0xd71]
---
Predecessors: [0xd70]
Successors: [0xd72]
---
0xd71 JUMPDEST
---
0xd71: JUMPDEST 
---
Entry stack: [V12, 0x684, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, S0]

================================

Block 0xd72
[0xd72:0xd7e]
---
Predecessors: [0xd71]
Successors: [0xd7f, 0xd92]
---
0xd72 JUMPDEST
0xd73 PUSH1 0x13
0xd75 SLOAD
0xd76 PUSH1 0xff
0xd78 AND
0xd79 DUP1
0xd7a ISZERO
0xd7b PUSH2 0xd92
0xd7e JUMPI
---
0xd72: JUMPDEST 
0xd73: V1342 = 0x13
0xd75: V1343 = S[0x13]
0xd76: V1344 = 0xff
0xd78: V1345 = AND 0xff V1343
0xd7a: V1346 = ISZERO V1345
0xd7b: V1347 = 0xd92
0xd7e: JUMPI 0xd92 V1346
---
Entry stack: [V12, 0x684, S0]
Stack pops: 0
Stack additions: [V1345]
Exit stack: [V12, 0x684, S0, V1345]

================================

Block 0xd7f
[0xd7f:0xd91]
---
Predecessors: [0xd72]
Successors: [0xd92]
---
0xd7f POP
0xd80 PUSH1 0x3
0xd82 SLOAD
0xd83 CALLER
0xd84 PUSH1 0x1
0xd86 PUSH1 0xa0
0xd88 PUSH1 0x2
0xd8a EXP
0xd8b SUB
0xd8c SWAP1
0xd8d DUP2
0xd8e AND
0xd8f SWAP2
0xd90 AND
0xd91 EQ
---
0xd80: V1348 = 0x3
0xd82: V1349 = S[0x3]
0xd83: V1350 = CALLER
0xd84: V1351 = 0x1
0xd86: V1352 = 0xa0
0xd88: V1353 = 0x2
0xd8a: V1354 = EXP 0x2 0xa0
0xd8b: V1355 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8e: V1356 = AND 0xffffffffffffffffffffffffffffffffffffffff V1350
0xd90: V1357 = AND V1349 0xffffffffffffffffffffffffffffffffffffffff
0xd91: V1358 = EQ V1357 V1356
---
Entry stack: [V12, 0x684, S1, V1345]
Stack pops: 1
Stack additions: [V1358]
Exit stack: [V12, 0x684, S1, V1358]

================================

Block 0xd92
[0xd92:0xd97]
---
Predecessors: [0xd72, 0xd7f]
Successors: [0xb41, 0xd98]
---
0xd92 JUMPDEST
0xd93 ISZERO
0xd94 PUSH2 0xb41
0xd97 JUMPI
---
0xd92: JUMPDEST 
0xd93: V1359 = ISZERO S0
0xd94: V1360 = 0xb41
0xd97: JUMPI 0xb41 V1359
---
Entry stack: [V12, 0x684, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x684, S1]

================================

Block 0xd98
[0xd98:0xdca]
---
Predecessors: [0xd92]
Successors: [0xdcb, 0xe20]
---
0xd98 PUSH1 0x3
0xd9a SLOAD
0xd9b PUSH1 0x8
0xd9d SLOAD
0xd9e PUSH1 0x1
0xda0 PUSH1 0xa0
0xda2 PUSH1 0x2
0xda4 EXP
0xda5 SUB
0xda6 SWAP1
0xda7 SWAP2
0xda8 AND
0xda9 SWAP1
0xdaa DUP1
0xdab ISZERO
0xdac PUSH2 0x8fc
0xdaf MUL
0xdb0 SWAP1
0xdb1 PUSH1 0x40
0xdb3 MLOAD
0xdb4 PUSH1 0x0
0xdb6 PUSH1 0x40
0xdb8 MLOAD
0xdb9 DUP1
0xdba DUP4
0xdbb SUB
0xdbc DUP2
0xdbd DUP6
0xdbe DUP9
0xdbf DUP9
0xdc0 CALL
0xdc1 SWAP4
0xdc2 POP
0xdc3 POP
0xdc4 POP
0xdc5 POP
0xdc6 ISZERO
0xdc7 PUSH2 0xe20
0xdca JUMPI
---
0xd98: V1361 = 0x3
0xd9a: V1362 = S[0x3]
0xd9b: V1363 = 0x8
0xd9d: V1364 = S[0x8]
0xd9e: V1365 = 0x1
0xda0: V1366 = 0xa0
0xda2: V1367 = 0x2
0xda4: V1368 = EXP 0x2 0xa0
0xda5: V1369 = SUB 0x10000000000000000000000000000000000000000 0x1
0xda8: V1370 = AND V1362 0xffffffffffffffffffffffffffffffffffffffff
0xdab: V1371 = ISZERO V1364
0xdac: V1372 = 0x8fc
0xdaf: V1373 = MUL 0x8fc V1371
0xdb1: V1374 = 0x40
0xdb3: V1375 = M[0x40]
0xdb4: V1376 = 0x0
0xdb6: V1377 = 0x40
0xdb8: V1378 = M[0x40]
0xdbb: V1379 = SUB V1375 V1378
0xdc0: V1380 = CALL V1373 V1370 V1364 V1378 V1379 V1378 0x0
0xdc6: V1381 = ISZERO V1380
0xdc7: V1382 = 0xe20
0xdca: JUMPI 0xe20 V1381
---
Entry stack: [V12, 0x684, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, S0]

================================

Block 0xdcb
[0xdcb:0xe1f]
---
Predecessors: [0xd98]
Successors: [0xb41]
---
0xdcb PUSH1 0x3
0xdcd SLOAD
0xdce PUSH1 0x8
0xdd0 SLOAD
0xdd1 PUSH1 0x0
0xdd3 DUP1
0xdd4 MLOAD
0xdd5 PUSH1 0x20
0xdd7 PUSH2 0xe33
0xdda DUP4
0xddb CODECOPY
0xddc DUP2
0xddd MLOAD
0xdde SWAP2
0xddf MSTORE
0xde0 SWAP2
0xde1 PUSH1 0x1
0xde3 PUSH1 0xa0
0xde5 PUSH1 0x2
0xde7 EXP
0xde8 SUB
0xde9 AND
0xdea SWAP1
0xdeb PUSH1 0x0
0xded PUSH1 0x40
0xdef MLOAD
0xdf0 PUSH1 0x1
0xdf2 PUSH1 0xa0
0xdf4 PUSH1 0x2
0xdf6 EXP
0xdf7 SUB
0xdf8 SWAP1
0xdf9 SWAP4
0xdfa AND
0xdfb DUP4
0xdfc MSTORE
0xdfd PUSH1 0x20
0xdff DUP4
0xe00 ADD
0xe01 SWAP2
0xe02 SWAP1
0xe03 SWAP2
0xe04 MSTORE
0xe05 ISZERO
0xe06 ISZERO
0xe07 PUSH1 0x40
0xe09 DUP1
0xe0a DUP4
0xe0b ADD
0xe0c SWAP2
0xe0d SWAP1
0xe0e SWAP2
0xe0f MSTORE
0xe10 PUSH1 0x60
0xe12 SWAP1
0xe13 SWAP2
0xe14 ADD
0xe15 SWAP1
0xe16 MLOAD
0xe17 DUP1
0xe18 SWAP2
0xe19 SUB
0xe1a SWAP1
0xe1b LOG1
0xe1c PUSH2 0xb41
0xe1f JUMP
---
0xdcb: V1383 = 0x3
0xdcd: V1384 = S[0x3]
0xdce: V1385 = 0x8
0xdd0: V1386 = S[0x8]
0xdd1: V1387 = 0x0
0xdd4: V1388 = M[0x0]
0xdd5: V1389 = 0x20
0xdd7: V1390 = 0xe33
0xddb: CODECOPY 0x0 0xe33 0x20
0xddd: V1391 = M[0x0]
0xddf: M[0x0] = V1388
0xde1: V1392 = 0x1
0xde3: V1393 = 0xa0
0xde5: V1394 = 0x2
0xde7: V1395 = EXP 0x2 0xa0
0xde8: V1396 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde9: V1397 = AND 0xffffffffffffffffffffffffffffffffffffffff V1384
0xdeb: V1398 = 0x0
0xded: V1399 = 0x40
0xdef: V1400 = M[0x40]
0xdf0: V1401 = 0x1
0xdf2: V1402 = 0xa0
0xdf4: V1403 = 0x2
0xdf6: V1404 = EXP 0x2 0xa0
0xdf7: V1405 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdfa: V1406 = AND V1397 0xffffffffffffffffffffffffffffffffffffffff
0xdfc: M[V1400] = V1406
0xdfd: V1407 = 0x20
0xe00: V1408 = ADD V1400 0x20
0xe04: M[V1408] = V1386
0xe05: V1409 = ISZERO 0x0
0xe06: V1410 = ISZERO 0x1
0xe07: V1411 = 0x40
0xe0b: V1412 = ADD V1400 0x40
0xe0f: M[V1412] = 0x0
0xe10: V1413 = 0x60
0xe14: V1414 = ADD V1400 0x60
0xe16: V1415 = M[0x40]
0xe19: V1416 = SUB V1414 V1415
0xe1b: LOG V1415 V1416 V1391
0xe1c: V1417 = 0xb41
0xe1f: JUMP 0xb41
---
Entry stack: [V12, 0x684, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, S0]

================================

Block 0xe20
[0xe20:0xe2a]
---
Predecessors: [0xd98]
Successors: [0xe2b]
---
0xe20 JUMPDEST
0xe21 PUSH1 0x13
0xe23 DUP1
0xe24 SLOAD
0xe25 PUSH1 0xff
0xe27 NOT
0xe28 AND
0xe29 SWAP1
0xe2a SSTORE
---
0xe20: JUMPDEST 
0xe21: V1418 = 0x13
0xe24: V1419 = S[0x13]
0xe25: V1420 = 0xff
0xe27: V1421 = NOT 0xff
0xe28: V1422 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1419
0xe2a: S[0x13] = V1422
---
Entry stack: [V12, 0x684, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, S0]

================================

Block 0xe2b
[0xe2b:0xe2b]
---
Predecessors: [0xe20]
Successors: [0xe2c]
---
0xe2b JUMPDEST
---
0xe2b: JUMPDEST 
---
Entry stack: [V12, 0x684, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, S0]

================================

Block 0xe2c
[0xe2c:0xe2c]
---
Predecessors: [0xe2b]
Successors: [0xe2d]
---
0xe2c JUMPDEST
---
0xe2c: JUMPDEST 
---
Entry stack: [V12, 0x684, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, S0]

================================

Block 0xe2d
[0xe2d:0xe2d]
---
Predecessors: [0xe2c]
Successors: [0xe2e]
---
0xe2d JUMPDEST
---
0xe2d: JUMPDEST 
---
Entry stack: [V12, 0x684, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, S0]

================================

Block 0xe2e
[0xe2e:0xe2e]
---
Predecessors: [0xe2d]
Successors: [0xe2f]
---
0xe2e JUMPDEST
---
0xe2e: JUMPDEST 
---
Entry stack: [V12, 0x684, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x684, S0]

================================

Block 0xe2f
[0xe2f:0xe31]
---
Predecessors: [0xe2e]
Successors: [0x684]
---
0xe2f JUMPDEST
0xe30 POP
0xe31 JUMP
---
0xe2f: JUMPDEST 
0xe31: JUMP 0x684
---
Entry stack: [V12, 0x684, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xe32
[0xe32:0xe88]
---
Predecessors: []
Successors: []
---
0xe32 STOP
0xe33 MISSING 0xe8
0xe34 TIMESTAMP
0xe35 MISSING 0xae
0xe36 MISSING 0xa7
0xe37 MISSING 0xa5
0xe38 CALL
0xe39 MISSING 0xb0
0xe3a LT
0xe3b MISSING 0x49
0xe3c MISSING 0xd7
0xe3d MSTORE
0xe3e STOP
0xe3f DUP13
0xe40 MSTORE8
0xe41 MISSING 0xc5
0xe42 MISSING 0x28
0xe43 SWAP1
0xe44 MISSING 0xb1
0xe45 MISSING 0xa6
0xe46 MISSING 0xda
0xe47 MISSING 0xf6
0xe48 PUSH1 0xcf
0xe4a CODECOPY
0xe4b MISSING 0xe8
0xe4c MISSING 0xee
0xe4d MISSING 0xc5
0xe4e MOD
0xe4f GT
0xe50 MISSING 0x2b
0xe51 MISSING 0xbd
0xe52 MISSING 0xf6
0xe53 LOG1
0xe54 PUSH6 0x627a7a723058
0xe5b SHA3
0xe5c MISSING 0x4e
0xe5d MISSING 0xb3
0xe5e MISSING 0xeb
0xe5f PUSH12 0x81872070ed8893623f7f6931
0xe6c PUSH28 0xd02c14a8dfb44c84f9336de0274ce80029
---
0xe32: STOP 
0xe33: MISSING 0xe8
0xe34: V1423 = TIMESTAMP
0xe35: MISSING 0xae
0xe36: MISSING 0xa7
0xe37: MISSING 0xa5
0xe38: V1424 = CALL S0 S1 S2 S3 S4 S5 S6
0xe39: MISSING 0xb0
0xe3a: V1425 = LT S0 S1
0xe3b: MISSING 0x49
0xe3c: MISSING 0xd7
0xe3d: M[S0] = S1
0xe3e: STOP 
0xe40: M8[S12] = S0
0xe41: MISSING 0xc5
0xe42: MISSING 0x28
0xe44: MISSING 0xb1
0xe45: MISSING 0xa6
0xe46: MISSING 0xda
0xe47: MISSING 0xf6
0xe48: V1426 = 0xcf
0xe4a: CODECOPY 0xcf S0 S1
0xe4b: MISSING 0xe8
0xe4c: MISSING 0xee
0xe4d: MISSING 0xc5
0xe4e: V1427 = MOD S0 S1
0xe4f: V1428 = GT V1427 S2
0xe50: MISSING 0x2b
0xe51: MISSING 0xbd
0xe52: MISSING 0xf6
0xe53: LOG S0 S1 S2
0xe54: V1429 = 0x627a7a723058
0xe5b: V1430 = SHA3 0x627a7a723058 S3
0xe5c: MISSING 0x4e
0xe5d: MISSING 0xb3
0xe5e: MISSING 0xeb
0xe5f: V1431 = 0x81872070ed8893623f7f6931
0xe6c: V1432 = 0xd02c14a8dfb44c84f9336de0274ce80029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1423, V1424, V1425, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S1, S0, V1428, V1430, 0xd02c14a8dfb44c84f9336de0274ce80029, 0x81872070ed8893623f7f6931]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x671
Exit block: 0x684
Body: 0x671, 0x678, 0x67c, 0x684, 0xa65, 0xa6f, 0xa7c, 0xa89, 0xa8f, 0xa9c, 0xaac, 0xaad, 0xaae

Function 1:
Public function signature: 0x10309781
Entry block: 0x686
Exit block: 0x699
Body: 0x686, 0x68d, 0x691, 0x699, 0xab0

Function 2:
Public function signature: 0x1fd8ffb0
Entry block: 0x6ab
Exit block: 0x684
Body: 0x684, 0x6ab, 0x6b2, 0x6b6, 0xab6, 0xac0, 0xad7, 0xb28, 0xb2c, 0xb39, 0xb3d, 0xb41, 0xb42, 0xb43, 0xb44

Function 3:
Public function signature: 0x29dcb0cf
Entry block: 0x6c3
Exit block: 0x699
Body: 0x699, 0x6c3, 0x6ca, 0x6ce, 0xb47

Function 4:
Public function signature: 0x2ec914b5
Entry block: 0x6e8
Exit block: 0x699
Body: 0x699, 0x6e8, 0x6ef, 0x6f3, 0xb4d

Function 5:
Public function signature: 0x31252103
Entry block: 0x70d
Exit block: 0x699
Body: 0x699, 0x70d, 0x714, 0x718, 0xb53

Function 6:
Public function signature: 0x38af3eed
Entry block: 0x732
Exit block: 0x745
Body: 0x732, 0x739, 0x73d, 0x745, 0xb59

Function 7:
Public function signature: 0x3b41ddba
Entry block: 0x761
Exit block: 0x699
Body: 0x699, 0x761, 0x768, 0x76c, 0xb68

Function 8:
Public function signature: 0x4c95f5d0
Entry block: 0x786
Exit block: 0x699
Body: 0x699, 0x786, 0x78d, 0x791, 0xb6e

Function 9:
Public function signature: 0x4fa34075
Entry block: 0x7ab
Exit block: 0x684
Body: 0x684, 0x7ab, 0x7b2, 0x7b6, 0xaac, 0xaad, 0xaae, 0xb74, 0xb8c, 0xb97, 0xb98

Function 10:
Public function signature: 0x5a0254e2
Entry block: 0x7c0
Exit block: 0x745
Body: 0x745, 0x7c0, 0x7c7, 0x7cb, 0xb9a

Function 11:
Public function signature: 0x5b54d2d6
Entry block: 0x7ef
Exit block: 0x802
Body: 0x7ef, 0x7f6, 0x7fa, 0x802, 0xba9

Function 12:
Public function signature: 0x6e66f6e9
Entry block: 0x816
Exit block: 0x745
Body: 0x745, 0x816, 0x81d, 0x821, 0xbb8

Function 13:
Public function signature: 0x70a08231
Entry block: 0x845
Exit block: 0x699
Body: 0x699, 0x845, 0x84c, 0x850, 0xbc7

Function 14:
Public function signature: 0x7a3a0e84
Entry block: 0x876
Exit block: 0x699
Body: 0x699, 0x876, 0x87d, 0x881, 0xbd9

Function 15:
Public function signature: 0x7b3e5e7b
Entry block: 0x89b
Exit block: 0x699
Body: 0x699, 0x89b, 0x8a2, 0x8a6, 0xbdf

Function 16:
Public function signature: 0x827037db
Entry block: 0x8c0
Exit block: 0x699
Body: 0x699, 0x8c0, 0x8c7, 0x8cb, 0xbe5

Function 17:
Public function signature: 0x89e66aea
Entry block: 0x8e5
Exit block: 0x699
Body: 0x699, 0x8e5, 0x8ec, 0x8f0, 0xbeb

Function 18:
Public function signature: 0x8f48399a
Entry block: 0x90a
Exit block: 0x699
Body: 0x699, 0x90a, 0x911, 0x915, 0xbf1

Function 19:
Public function signature: 0x92dcc41c
Entry block: 0x92f
Exit block: 0x699
Body: 0x699, 0x92f, 0x936, 0x93a, 0xbf7

Function 20:
Public function signature: 0x998936b0
Entry block: 0x954
Exit block: 0x684
Body: 0x684, 0x954, 0x95b, 0x95f, 0xaac, 0xaad, 0xaae, 0xbfd, 0xc15, 0xc21, 0xc22

Function 21:
Public function signature: 0xa02d55a3
Entry block: 0x969
Exit block: 0x684
Body: 0x684, 0x969, 0x970, 0x974, 0xaac, 0xaad, 0xaae, 0xc24, 0xc3c, 0xc4b, 0xc4c

Function 22:
Public function signature: 0xa8a75b78
Entry block: 0x97e
Exit block: 0x699
Body: 0x699, 0x97e, 0x985, 0x989, 0xc4e

Function 23:
Public function signature: 0xace38f8c
Entry block: 0x9a3
Exit block: 0x699
Body: 0x699, 0x9a3, 0x9aa, 0x9ae, 0xc54

Function 24:
Public function signature: 0xaff29802
Entry block: 0x9c8
Exit block: 0x699
Body: 0x699, 0x9c8, 0x9cf, 0x9d3, 0xc5a

Function 25:
Public function signature: 0xccb07cef
Entry block: 0x9ed
Exit block: 0x802
Body: 0x802, 0x9ed, 0x9f4, 0x9f8, 0xc60

Function 26:
Public function signature: 0xd424f628
Entry block: 0xa14
Exit block: 0x802
Body: 0x802, 0xa14, 0xa1b, 0xa1f, 0xc6e

Function 27:
Public function signature: 0xdcd22c9b
Entry block: 0xa3b
Exit block: 0x684
Body: 0x684, 0xa3b, 0xa42, 0xa46, 0xaac, 0xaad, 0xaae, 0xc77, 0xc8f, 0xca0, 0xca1

Function 28:
Public function signature: 0xfd6b7ef8
Entry block: 0xa50
Exit block: 0x684
Body: 0x684, 0xa50, 0xa57, 0xa5b, 0xb41, 0xb42, 0xb43, 0xb44, 0xca3, 0xcb0, 0xcbc, 0xce3, 0xd0e, 0xd54, 0xd70, 0xd71, 0xd72, 0xd7f, 0xd92, 0xd98, 0xdcb, 0xe20, 0xe2b, 0xe2c, 0xe2d, 0xe2e, 0xe2f

Function 29:
Public fallback function
Entry block: 0x159
Exit block: 0x66e
Body: 0x159, 0x15a, 0x16e, 0x172, 0x1a7, 0x1b8, 0x1d7, 0x217, 0x21b, 0x228, 0x22c, 0x234, 0x246, 0x2c6, 0x2d8, 0x358, 0x36a, 0x3ea, 0x40a, 0x44a, 0x44e, 0x45b, 0x45f, 0x463, 0x464, 0x465, 0x466, 0x4ad, 0x4ba, 0x514, 0x518, 0x525, 0x529, 0x531, 0x53e, 0x598, 0x5b5, 0x610, 0x614, 0x621, 0x625, 0x629, 0x62a, 0x66d, 0x66e

