args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/7/106970.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xae]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xae
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xae
0xc: JUMPI 0xae V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x1f6]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2d05d3f
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x1f6
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2d05d3f
0x3b: V13 = EQ V11 0x2d05d3f
0x3c: V14 = 0x1f6
0x3f: JUMPI 0x1f6 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x225]
---
0x40 DUP1
0x41 PUSH4 0xb97bc86
0x46 EQ
0x47 PUSH2 0x225
0x4a JUMPI
---
0x41: V15 = 0xb97bc86
0x46: V16 = EQ 0xb97bc86 V11
0x47: V17 = 0x225
0x4a: JUMPI 0x225 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x24a]
---
0x4b DUP1
0x4c PUSH4 0x13af4035
0x51 EQ
0x52 PUSH2 0x24a
0x55 JUMPI
---
0x4c: V18 = 0x13af4035
0x51: V19 = EQ 0x13af4035 V11
0x52: V20 = 0x24a
0x55: JUMPI 0x24a V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x26b]
---
0x56 DUP1
0x57 PUSH4 0x144fa6d7
0x5c EQ
0x5d PUSH2 0x26b
0x60 JUMPI
---
0x57: V21 = 0x144fa6d7
0x5c: V22 = EQ 0x144fa6d7 V11
0x5d: V23 = 0x26b
0x60: JUMPI 0x26b V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x28a]
---
0x61 DUP1
0x62 PUSH4 0x3f516018
0x67 EQ
0x68 PUSH2 0x28a
0x6b JUMPI
---
0x62: V24 = 0x3f516018
0x67: V25 = EQ 0x3f516018 V11
0x68: V26 = 0x28a
0x6b: JUMPI 0x28a V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x2a9]
---
0x6c DUP1
0x6d PUSH4 0x41c0e1b5
0x72 EQ
0x73 PUSH2 0x2a9
0x76 JUMPI
---
0x6d: V27 = 0x41c0e1b5
0x72: V28 = EQ 0x41c0e1b5 V11
0x73: V29 = 0x2a9
0x76: JUMPI 0x2a9 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x2bc]
---
0x77 DUP1
0x78 PUSH4 0x6e66f6e9
0x7d EQ
0x7e PUSH2 0x2bc
0x81 JUMPI
---
0x78: V30 = 0x6e66f6e9
0x7d: V31 = EQ 0x6e66f6e9 V11
0x7e: V32 = 0x2bc
0x81: JUMPI 0x2bc V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x2cf]
---
0x82 DUP1
0x83 PUSH4 0x82d95df5
0x88 EQ
0x89 PUSH2 0x2cf
0x8c JUMPI
---
0x83: V33 = 0x82d95df5
0x88: V34 = EQ 0x82d95df5 V11
0x89: V35 = 0x2cf
0x8c: JUMPI 0x2cf V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x2e5]
---
0x8d DUP1
0x8e PUSH4 0x8da5cb5b
0x93 EQ
0x94 PUSH2 0x2e5
0x97 JUMPI
---
0x8e: V36 = 0x8da5cb5b
0x93: V37 = EQ 0x8da5cb5b V11
0x94: V38 = 0x2e5
0x97: JUMPI 0x2e5 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x2f8]
---
0x98 DUP1
0x99 PUSH4 0x91b7f5ed
0x9e EQ
0x9f PUSH2 0x2f8
0xa2 JUMPI
---
0x99: V39 = 0x91b7f5ed
0x9e: V40 = EQ 0x91b7f5ed V11
0x9f: V41 = 0x2f8
0xa2: JUMPI 0x2f8 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x30e]
---
0xa3 DUP1
0xa4 PUSH4 0xa035b1fe
0xa9 EQ
0xaa PUSH2 0x30e
0xad JUMPI
---
0xa4: V42 = 0xa035b1fe
0xa9: V43 = EQ 0xa035b1fe V11
0xaa: V44 = 0x30e
0xad: JUMPI 0x30e V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0x0, 0xa3]
Successors: [0xb9, 0xbd]
---
0xae JUMPDEST
0xaf PUSH1 0x0
0xb1 CALLVALUE
0xb2 DUP2
0xb3 SWAP1
0xb4 GT
0xb5 PUSH2 0xbd
0xb8 JUMPI
---
0xae: JUMPDEST 
0xaf: V45 = 0x0
0xb1: V46 = CALLVALUE
0xb4: V47 = GT V46 0x0
0xb5: V48 = 0xbd
0xb8: JUMPI 0xbd V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0xb9
[0xb9:0xbc]
---
Predecessors: [0xae]
Successors: []
---
0xb9 PUSH1 0x0
0xbb DUP1
0xbc REVERT
---
0xb9: V49 = 0x0
0xbc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xbd
[0xbd:0xc6]
---
Predecessors: [0xae]
Successors: [0xc7, 0xcb]
---
0xbd JUMPDEST
0xbe PUSH1 0x4
0xc0 SLOAD
0xc1 TIMESTAMP
0xc2 GT
0xc3 PUSH2 0xcb
0xc6 JUMPI
---
0xbd: JUMPDEST 
0xbe: V50 = 0x4
0xc0: V51 = S[0x4]
0xc1: V52 = TIMESTAMP
0xc2: V53 = GT V52 V51
0xc3: V54 = 0xcb
0xc6: JUMPI 0xcb V53
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xc7
[0xc7:0xca]
---
Predecessors: [0xbd]
Successors: []
---
0xc7 PUSH1 0x0
0xc9 DUP1
0xca REVERT
---
0xc7: V55 = 0x0
0xca: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xcb
[0xcb:0x152]
---
Predecessors: [0xbd]
Successors: [0x153, 0x157]
---
0xcb JUMPDEST
0xcc POP
0xcd PUSH1 0x3
0xcf SLOAD
0xd0 PUSH1 0x0
0xd2 SLOAD
0xd3 PUSH1 0x2
0xd5 SLOAD
0xd6 CALLVALUE
0xd7 SWAP1
0xd8 SWAP3
0xd9 MUL
0xda SWAP2
0xdb PUSH1 0x1
0xdd PUSH1 0xa0
0xdf PUSH1 0x2
0xe1 EXP
0xe2 SUB
0xe3 SWAP2
0xe4 DUP3
0xe5 AND
0xe6 SWAP2
0xe7 PUSH4 0x23b872dd
0xec SWAP2
0xed AND
0xee CALLER
0xef DUP5
0xf0 PUSH1 0x40
0xf2 MLOAD
0xf3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x111 PUSH4 0xffffffff
0x116 DUP7
0x117 AND
0x118 MUL
0x119 DUP2
0x11a MSTORE
0x11b PUSH1 0x1
0x11d PUSH1 0xa0
0x11f PUSH1 0x2
0x121 EXP
0x122 SUB
0x123 SWAP4
0x124 DUP5
0x125 AND
0x126 PUSH1 0x4
0x128 DUP3
0x129 ADD
0x12a MSTORE
0x12b SWAP2
0x12c SWAP1
0x12d SWAP3
0x12e AND
0x12f PUSH1 0x24
0x131 DUP3
0x132 ADD
0x133 MSTORE
0x134 PUSH1 0x44
0x136 DUP2
0x137 ADD
0x138 SWAP2
0x139 SWAP1
0x13a SWAP2
0x13b MSTORE
0x13c PUSH1 0x64
0x13e ADD
0x13f PUSH1 0x0
0x141 PUSH1 0x40
0x143 MLOAD
0x144 DUP1
0x145 DUP4
0x146 SUB
0x147 DUP2
0x148 PUSH1 0x0
0x14a DUP8
0x14b DUP1
0x14c EXTCODESIZE
0x14d ISZERO
0x14e ISZERO
0x14f PUSH2 0x157
0x152 JUMPI
---
0xcb: JUMPDEST 
0xcd: V56 = 0x3
0xcf: V57 = S[0x3]
0xd0: V58 = 0x0
0xd2: V59 = S[0x0]
0xd3: V60 = 0x2
0xd5: V61 = S[0x2]
0xd6: V62 = CALLVALUE
0xd9: V63 = MUL V57 V62
0xdb: V64 = 0x1
0xdd: V65 = 0xa0
0xdf: V66 = 0x2
0xe1: V67 = EXP 0x2 0xa0
0xe2: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe5: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xe7: V70 = 0x23b872dd
0xed: V71 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0xee: V72 = CALLER
0xf0: V73 = 0x40
0xf2: V74 = M[0x40]
0xf3: V75 = 0x100000000000000000000000000000000000000000000000000000000
0x111: V76 = 0xffffffff
0x117: V77 = AND 0x23b872dd 0xffffffff
0x118: V78 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x11a: M[V74] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x11b: V79 = 0x1
0x11d: V80 = 0xa0
0x11f: V81 = 0x2
0x121: V82 = EXP 0x2 0xa0
0x122: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0x125: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x126: V85 = 0x4
0x129: V86 = ADD V74 0x4
0x12a: M[V86] = V84
0x12e: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x12f: V88 = 0x24
0x132: V89 = ADD V74 0x24
0x133: M[V89] = V87
0x134: V90 = 0x44
0x137: V91 = ADD V74 0x44
0x13b: M[V91] = V63
0x13c: V92 = 0x64
0x13e: V93 = ADD 0x64 V74
0x13f: V94 = 0x0
0x141: V95 = 0x40
0x143: V96 = M[0x40]
0x146: V97 = SUB V93 V96
0x148: V98 = 0x0
0x14c: V99 = EXTCODESIZE V69
0x14d: V100 = ISZERO V99
0x14e: V101 = ISZERO V100
0x14f: V102 = 0x157
0x152: JUMPI 0x157 V101
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V63, V69, 0x23b872dd, V93, 0x0, V96, V97, V96, 0x0, V69]
Exit stack: [V11, V63, V69, 0x23b872dd, V93, 0x0, V96, V97, V96, 0x0, V69]

================================

Block 0x153
[0x153:0x156]
---
Predecessors: [0xcb]
Successors: []
---
0x153 PUSH1 0x0
0x155 DUP1
0x156 REVERT
---
0x153: V103 = 0x0
0x156: REVERT 0x0 0x0
---
Entry stack: [V11, V63, V69, 0x23b872dd, V93, 0x0, V96, V97, V96, 0x0, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63, V69, 0x23b872dd, V93, 0x0, V96, V97, V96, 0x0, V69]

================================

Block 0x157
[0x157:0x163]
---
Predecessors: [0xcb]
Successors: [0x164, 0x168]
---
0x157 JUMPDEST
0x158 PUSH2 0x2c6
0x15b GAS
0x15c SUB
0x15d CALL
0x15e ISZERO
0x15f ISZERO
0x160 PUSH2 0x168
0x163 JUMPI
---
0x157: JUMPDEST 
0x158: V104 = 0x2c6
0x15b: V105 = GAS
0x15c: V106 = SUB V105 0x2c6
0x15d: V107 = CALL V106 V69 0x0 V96 V97 V96 0x0
0x15e: V108 = ISZERO V107
0x15f: V109 = ISZERO V108
0x160: V110 = 0x168
0x163: JUMPI 0x168 V109
---
Entry stack: [V11, V63, V69, 0x23b872dd, V93, 0x0, V96, V97, V96, 0x0, V69]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V63, V69, 0x23b872dd, V93]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0x157]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V111 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V11, V63, V69, 0x23b872dd, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63, V69, 0x23b872dd, V93]

================================

Block 0x168
[0x168:0x1ee]
---
Predecessors: [0x157]
Successors: [0x1ef, 0x1f3]
---
0x168 JUMPDEST
0x169 POP
0x16a POP
0x16b POP
0x16c PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x18d CALLER
0x18e DUP3
0x18f PUSH1 0x1
0x191 PUSH1 0x40
0x193 MLOAD
0x194 PUSH1 0x1
0x196 PUSH1 0xa0
0x198 PUSH1 0x2
0x19a EXP
0x19b SUB
0x19c SWAP1
0x19d SWAP4
0x19e AND
0x19f DUP4
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 DUP4
0x1a4 ADD
0x1a5 SWAP2
0x1a6 SWAP1
0x1a7 SWAP2
0x1a8 MSTORE
0x1a9 ISZERO
0x1aa ISZERO
0x1ab PUSH1 0x40
0x1ad DUP1
0x1ae DUP4
0x1af ADD
0x1b0 SWAP2
0x1b1 SWAP1
0x1b2 SWAP2
0x1b3 MSTORE
0x1b4 PUSH1 0x60
0x1b6 SWAP1
0x1b7 SWAP2
0x1b8 ADD
0x1b9 SWAP1
0x1ba MLOAD
0x1bb DUP1
0x1bc SWAP2
0x1bd SUB
0x1be SWAP1
0x1bf LOG1
0x1c0 PUSH1 0x2
0x1c2 SLOAD
0x1c3 PUSH1 0x1
0x1c5 PUSH1 0xa0
0x1c7 PUSH1 0x2
0x1c9 EXP
0x1ca SUB
0x1cb AND
0x1cc CALLVALUE
0x1cd DUP1
0x1ce ISZERO
0x1cf PUSH2 0x8fc
0x1d2 MUL
0x1d3 SWAP1
0x1d4 PUSH1 0x40
0x1d6 MLOAD
0x1d7 PUSH1 0x0
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc DUP1
0x1dd DUP4
0x1de SUB
0x1df DUP2
0x1e0 DUP6
0x1e1 DUP9
0x1e2 DUP9
0x1e3 CALL
0x1e4 SWAP4
0x1e5 POP
0x1e6 POP
0x1e7 POP
0x1e8 POP
0x1e9 ISZERO
0x1ea ISZERO
0x1eb PUSH2 0x1f3
0x1ee JUMPI
---
0x168: JUMPDEST 
0x16c: V112 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x18d: V113 = CALLER
0x18f: V114 = 0x1
0x191: V115 = 0x40
0x193: V116 = M[0x40]
0x194: V117 = 0x1
0x196: V118 = 0xa0
0x198: V119 = 0x2
0x19a: V120 = EXP 0x2 0xa0
0x19b: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19e: V122 = AND V113 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: M[V116] = V122
0x1a1: V123 = 0x20
0x1a4: V124 = ADD V116 0x20
0x1a8: M[V124] = V63
0x1a9: V125 = ISZERO 0x1
0x1aa: V126 = ISZERO 0x0
0x1ab: V127 = 0x40
0x1af: V128 = ADD V116 0x40
0x1b3: M[V128] = 0x1
0x1b4: V129 = 0x60
0x1b8: V130 = ADD V116 0x60
0x1ba: V131 = M[0x40]
0x1bd: V132 = SUB V130 V131
0x1bf: LOG V131 V132 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1c0: V133 = 0x2
0x1c2: V134 = S[0x2]
0x1c3: V135 = 0x1
0x1c5: V136 = 0xa0
0x1c7: V137 = 0x2
0x1c9: V138 = EXP 0x2 0xa0
0x1ca: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cb: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x1cc: V141 = CALLVALUE
0x1ce: V142 = ISZERO V141
0x1cf: V143 = 0x8fc
0x1d2: V144 = MUL 0x8fc V142
0x1d4: V145 = 0x40
0x1d6: V146 = M[0x40]
0x1d7: V147 = 0x0
0x1d9: V148 = 0x40
0x1db: V149 = M[0x40]
0x1de: V150 = SUB V146 V149
0x1e3: V151 = CALL V144 V140 V141 V149 V150 V149 0x0
0x1e9: V152 = ISZERO V151
0x1ea: V153 = ISZERO V152
0x1eb: V154 = 0x1f3
0x1ee: JUMPI 0x1f3 V153
---
Entry stack: [V11, V63, V69, 0x23b872dd, V93]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V11, V63]

================================

Block 0x1ef
[0x1ef:0x1f2]
---
Predecessors: [0x168]
Successors: []
---
0x1ef PUSH1 0x0
0x1f1 DUP1
0x1f2 REVERT
---
0x1ef: V155 = 0x0
0x1f2: REVERT 0x0 0x0
---
Entry stack: [V11, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63]

================================

Block 0x1f3
[0x1f3:0x1f5]
---
Predecessors: [0x168]
Successors: []
---
0x1f3 JUMPDEST
0x1f4 POP
0x1f5 STOP
---
0x1f3: JUMPDEST 
0x1f5: STOP 
---
Entry stack: [V11, V63]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f6
[0x1f6:0x1fc]
---
Predecessors: [0xd]
Successors: [0x1fd, 0x201]
---
0x1f6 JUMPDEST
0x1f7 CALLVALUE
0x1f8 ISZERO
0x1f9 PUSH2 0x201
0x1fc JUMPI
---
0x1f6: JUMPDEST 
0x1f7: V156 = CALLVALUE
0x1f8: V157 = ISZERO V156
0x1f9: V158 = 0x201
0x1fc: JUMPI 0x201 V157
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1fd
[0x1fd:0x200]
---
Predecessors: [0x1f6]
Successors: []
---
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 REVERT
---
0x1fd: V159 = 0x0
0x200: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x201
[0x201:0x208]
---
Predecessors: [0x1f6]
Successors: [0x321]
---
0x201 JUMPDEST
0x202 PUSH2 0x209
0x205 PUSH2 0x321
0x208 JUMP
---
0x201: JUMPDEST 
0x202: V160 = 0x209
0x205: V161 = 0x321
0x208: JUMP 0x321
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x209]
Exit stack: [V11, 0x209]

================================

Block 0x209
[0x209:0x224]
---
Predecessors: [0x321, 0x43d, 0x46c]
Successors: []
---
0x209 JUMPDEST
0x20a PUSH1 0x40
0x20c MLOAD
0x20d PUSH1 0x1
0x20f PUSH1 0xa0
0x211 PUSH1 0x2
0x213 EXP
0x214 SUB
0x215 SWAP1
0x216 SWAP2
0x217 AND
0x218 DUP2
0x219 MSTORE
0x21a PUSH1 0x20
0x21c ADD
0x21d PUSH1 0x40
0x21f MLOAD
0x220 DUP1
0x221 SWAP2
0x222 SUB
0x223 SWAP1
0x224 RETURN
---
0x209: JUMPDEST 
0x20a: V162 = 0x40
0x20c: V163 = M[0x40]
0x20d: V164 = 0x1
0x20f: V165 = 0xa0
0x211: V166 = 0x2
0x213: V167 = EXP 0x2 0xa0
0x214: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x217: V169 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x219: M[V163] = V169
0x21a: V170 = 0x20
0x21c: V171 = ADD 0x20 V163
0x21d: V172 = 0x40
0x21f: V173 = M[0x40]
0x222: V174 = SUB V171 V173
0x224: RETURN V173 V174
---
Entry stack: [V11, 0x209, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x209]

================================

Block 0x225
[0x225:0x22b]
---
Predecessors: [0x40]
Successors: [0x22c, 0x230]
---
0x225 JUMPDEST
0x226 CALLVALUE
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x225: JUMPDEST 
0x226: V175 = CALLVALUE
0x227: V176 = ISZERO V175
0x228: V177 = 0x230
0x22b: JUMPI 0x230 V176
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x225]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V178 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x230
[0x230:0x237]
---
Predecessors: [0x225]
Successors: [0x330]
---
0x230 JUMPDEST
0x231 PUSH2 0x238
0x234 PUSH2 0x330
0x237 JUMP
---
0x230: JUMPDEST 
0x231: V179 = 0x238
0x234: V180 = 0x330
0x237: JUMP 0x330
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x238]
Exit stack: [V11, 0x238]

================================

Block 0x238
[0x238:0x249]
---
Predecessors: [0x330, 0x49b]
Successors: []
---
0x238 JUMPDEST
0x239 PUSH1 0x40
0x23b MLOAD
0x23c SWAP1
0x23d DUP2
0x23e MSTORE
0x23f PUSH1 0x20
0x241 ADD
0x242 PUSH1 0x40
0x244 MLOAD
0x245 DUP1
0x246 SWAP2
0x247 SUB
0x248 SWAP1
0x249 RETURN
---
0x238: JUMPDEST 
0x239: V181 = 0x40
0x23b: V182 = M[0x40]
0x23e: M[V182] = S0
0x23f: V183 = 0x20
0x241: V184 = ADD 0x20 V182
0x242: V185 = 0x40
0x244: V186 = M[0x40]
0x247: V187 = SUB V184 V186
0x249: RETURN V186 V187
---
Entry stack: [V11, 0x238, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x238]

================================

Block 0x24a
[0x24a:0x250]
---
Predecessors: [0x4b]
Successors: [0x251, 0x255]
---
0x24a JUMPDEST
0x24b CALLVALUE
0x24c ISZERO
0x24d PUSH2 0x255
0x250 JUMPI
---
0x24a: JUMPDEST 
0x24b: V188 = CALLVALUE
0x24c: V189 = ISZERO V188
0x24d: V190 = 0x255
0x250: JUMPI 0x255 V189
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x251
[0x251:0x254]
---
Predecessors: [0x24a]
Successors: []
---
0x251 PUSH1 0x0
0x253 DUP1
0x254 REVERT
---
0x251: V191 = 0x0
0x254: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x255
[0x255:0x268]
---
Predecessors: [0x24a]
Successors: [0x336]
---
0x255 JUMPDEST
0x256 PUSH2 0x269
0x259 PUSH1 0x1
0x25b PUSH1 0xa0
0x25d PUSH1 0x2
0x25f EXP
0x260 SUB
0x261 PUSH1 0x4
0x263 CALLDATALOAD
0x264 AND
0x265 PUSH2 0x336
0x268 JUMP
---
0x255: JUMPDEST 
0x256: V192 = 0x269
0x259: V193 = 0x1
0x25b: V194 = 0xa0
0x25d: V195 = 0x2
0x25f: V196 = EXP 0x2 0xa0
0x260: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x261: V198 = 0x4
0x263: V199 = CALLDATALOAD 0x4
0x264: V200 = AND V199 0xffffffffffffffffffffffffffffffffffffffff
0x265: V201 = 0x336
0x268: JUMP 0x336
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x269, V200]
Exit stack: [V11, 0x269, V200]

================================

Block 0x269
[0x269:0x26a]
---
Predecessors: [0x351, 0x39b, 0x3e5, 0x467, 0x496]
Successors: []
---
0x269 JUMPDEST
0x26a STOP
---
0x269: JUMPDEST 
0x26a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x26b
[0x26b:0x271]
---
Predecessors: [0x56]
Successors: [0x272, 0x276]
---
0x26b JUMPDEST
0x26c CALLVALUE
0x26d ISZERO
0x26e PUSH2 0x276
0x271 JUMPI
---
0x26b: JUMPDEST 
0x26c: V202 = CALLVALUE
0x26d: V203 = ISZERO V202
0x26e: V204 = 0x276
0x271: JUMPI 0x276 V203
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x272
[0x272:0x275]
---
Predecessors: [0x26b]
Successors: []
---
0x272 PUSH1 0x0
0x274 DUP1
0x275 REVERT
---
0x272: V205 = 0x0
0x275: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x276
[0x276:0x289]
---
Predecessors: [0x26b]
Successors: [0x380]
---
0x276 JUMPDEST
0x277 PUSH2 0x269
0x27a PUSH1 0x1
0x27c PUSH1 0xa0
0x27e PUSH1 0x2
0x280 EXP
0x281 SUB
0x282 PUSH1 0x4
0x284 CALLDATALOAD
0x285 AND
0x286 PUSH2 0x380
0x289 JUMP
---
0x276: JUMPDEST 
0x277: V206 = 0x269
0x27a: V207 = 0x1
0x27c: V208 = 0xa0
0x27e: V209 = 0x2
0x280: V210 = EXP 0x2 0xa0
0x281: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x282: V212 = 0x4
0x284: V213 = CALLDATALOAD 0x4
0x285: V214 = AND V213 0xffffffffffffffffffffffffffffffffffffffff
0x286: V215 = 0x380
0x289: JUMP 0x380
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x269, V214]
Exit stack: [V11, 0x269, V214]

================================

Block 0x28a
[0x28a:0x290]
---
Predecessors: [0x61]
Successors: [0x291, 0x295]
---
0x28a JUMPDEST
0x28b CALLVALUE
0x28c ISZERO
0x28d PUSH2 0x295
0x290 JUMPI
---
0x28a: JUMPDEST 
0x28b: V216 = CALLVALUE
0x28c: V217 = ISZERO V216
0x28d: V218 = 0x295
0x290: JUMPI 0x295 V217
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x28a]
Successors: []
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
---
0x291: V219 = 0x0
0x294: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x295
[0x295:0x2a8]
---
Predecessors: [0x28a]
Successors: [0x3ca]
---
0x295 JUMPDEST
0x296 PUSH2 0x269
0x299 PUSH1 0x1
0x29b PUSH1 0xa0
0x29d PUSH1 0x2
0x29f EXP
0x2a0 SUB
0x2a1 PUSH1 0x4
0x2a3 CALLDATALOAD
0x2a4 AND
0x2a5 PUSH2 0x3ca
0x2a8 JUMP
---
0x295: JUMPDEST 
0x296: V220 = 0x269
0x299: V221 = 0x1
0x29b: V222 = 0xa0
0x29d: V223 = 0x2
0x29f: V224 = EXP 0x2 0xa0
0x2a0: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a1: V226 = 0x4
0x2a3: V227 = CALLDATALOAD 0x4
0x2a4: V228 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V229 = 0x3ca
0x2a8: JUMP 0x3ca
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x269, V228]
Exit stack: [V11, 0x269, V228]

================================

Block 0x2a9
[0x2a9:0x2af]
---
Predecessors: [0x6c]
Successors: [0x2b0, 0x2b4]
---
0x2a9 JUMPDEST
0x2aa CALLVALUE
0x2ab ISZERO
0x2ac PUSH2 0x2b4
0x2af JUMPI
---
0x2a9: JUMPDEST 
0x2aa: V230 = CALLVALUE
0x2ab: V231 = ISZERO V230
0x2ac: V232 = 0x2b4
0x2af: JUMPI 0x2b4 V231
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b0
[0x2b0:0x2b3]
---
Predecessors: [0x2a9]
Successors: []
---
0x2b0 PUSH1 0x0
0x2b2 DUP1
0x2b3 REVERT
---
0x2b0: V233 = 0x0
0x2b3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b4
[0x2b4:0x2bb]
---
Predecessors: [0x2a9]
Successors: [0x414]
---
0x2b4 JUMPDEST
0x2b5 PUSH2 0x269
0x2b8 PUSH2 0x414
0x2bb JUMP
---
0x2b4: JUMPDEST 
0x2b5: V234 = 0x269
0x2b8: V235 = 0x414
0x2bb: JUMP 0x414
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x269]
Exit stack: [V11, 0x269]

================================

Block 0x2bc
[0x2bc:0x2c2]
---
Predecessors: [0x77]
Successors: [0x2c3, 0x2c7]
---
0x2bc JUMPDEST
0x2bd CALLVALUE
0x2be ISZERO
0x2bf PUSH2 0x2c7
0x2c2 JUMPI
---
0x2bc: JUMPDEST 
0x2bd: V236 = CALLVALUE
0x2be: V237 = ISZERO V236
0x2bf: V238 = 0x2c7
0x2c2: JUMPI 0x2c7 V237
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c3
[0x2c3:0x2c6]
---
Predecessors: [0x2bc]
Successors: []
---
0x2c3 PUSH1 0x0
0x2c5 DUP1
0x2c6 REVERT
---
0x2c3: V239 = 0x0
0x2c6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c7
[0x2c7:0x2ce]
---
Predecessors: [0x2bc]
Successors: [0x43d]
---
0x2c7 JUMPDEST
0x2c8 PUSH2 0x209
0x2cb PUSH2 0x43d
0x2ce JUMP
---
0x2c7: JUMPDEST 
0x2c8: V240 = 0x209
0x2cb: V241 = 0x43d
0x2ce: JUMP 0x43d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x209]
Exit stack: [V11, 0x209]

================================

Block 0x2cf
[0x2cf:0x2d5]
---
Predecessors: [0x82]
Successors: [0x2d6, 0x2da]
---
0x2cf JUMPDEST
0x2d0 CALLVALUE
0x2d1 ISZERO
0x2d2 PUSH2 0x2da
0x2d5 JUMPI
---
0x2cf: JUMPDEST 
0x2d0: V242 = CALLVALUE
0x2d1: V243 = ISZERO V242
0x2d2: V244 = 0x2da
0x2d5: JUMPI 0x2da V243
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2d6
[0x2d6:0x2d9]
---
Predecessors: [0x2cf]
Successors: []
---
0x2d6 PUSH1 0x0
0x2d8 DUP1
0x2d9 REVERT
---
0x2d6: V245 = 0x0
0x2d9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2da
[0x2da:0x2e4]
---
Predecessors: [0x2cf]
Successors: [0x44c]
---
0x2da JUMPDEST
0x2db PUSH2 0x269
0x2de PUSH1 0x4
0x2e0 CALLDATALOAD
0x2e1 PUSH2 0x44c
0x2e4 JUMP
---
0x2da: JUMPDEST 
0x2db: V246 = 0x269
0x2de: V247 = 0x4
0x2e0: V248 = CALLDATALOAD 0x4
0x2e1: V249 = 0x44c
0x2e4: JUMP 0x44c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x269, V248]
Exit stack: [V11, 0x269, V248]

================================

Block 0x2e5
[0x2e5:0x2eb]
---
Predecessors: [0x8d]
Successors: [0x2ec, 0x2f0]
---
0x2e5 JUMPDEST
0x2e6 CALLVALUE
0x2e7 ISZERO
0x2e8 PUSH2 0x2f0
0x2eb JUMPI
---
0x2e5: JUMPDEST 
0x2e6: V250 = CALLVALUE
0x2e7: V251 = ISZERO V250
0x2e8: V252 = 0x2f0
0x2eb: JUMPI 0x2f0 V251
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ec
[0x2ec:0x2ef]
---
Predecessors: [0x2e5]
Successors: []
---
0x2ec PUSH1 0x0
0x2ee DUP1
0x2ef REVERT
---
0x2ec: V253 = 0x0
0x2ef: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f0
[0x2f0:0x2f7]
---
Predecessors: [0x2e5]
Successors: [0x46c]
---
0x2f0 JUMPDEST
0x2f1 PUSH2 0x209
0x2f4 PUSH2 0x46c
0x2f7 JUMP
---
0x2f0: JUMPDEST 
0x2f1: V254 = 0x209
0x2f4: V255 = 0x46c
0x2f7: JUMP 0x46c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x209]
Exit stack: [V11, 0x209]

================================

Block 0x2f8
[0x2f8:0x2fe]
---
Predecessors: [0x98]
Successors: [0x2ff, 0x303]
---
0x2f8 JUMPDEST
0x2f9 CALLVALUE
0x2fa ISZERO
0x2fb PUSH2 0x303
0x2fe JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V256 = CALLVALUE
0x2fa: V257 = ISZERO V256
0x2fb: V258 = 0x303
0x2fe: JUMPI 0x303 V257
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ff
[0x2ff:0x302]
---
Predecessors: [0x2f8]
Successors: []
---
0x2ff PUSH1 0x0
0x301 DUP1
0x302 REVERT
---
0x2ff: V259 = 0x0
0x302: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x303
[0x303:0x30d]
---
Predecessors: [0x2f8]
Successors: [0x47b]
---
0x303 JUMPDEST
0x304 PUSH2 0x269
0x307 PUSH1 0x4
0x309 CALLDATALOAD
0x30a PUSH2 0x47b
0x30d JUMP
---
0x303: JUMPDEST 
0x304: V260 = 0x269
0x307: V261 = 0x4
0x309: V262 = CALLDATALOAD 0x4
0x30a: V263 = 0x47b
0x30d: JUMP 0x47b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x269, V262]
Exit stack: [V11, 0x269, V262]

================================

Block 0x30e
[0x30e:0x314]
---
Predecessors: [0xa3]
Successors: [0x315, 0x319]
---
0x30e JUMPDEST
0x30f CALLVALUE
0x310 ISZERO
0x311 PUSH2 0x319
0x314 JUMPI
---
0x30e: JUMPDEST 
0x30f: V264 = CALLVALUE
0x310: V265 = ISZERO V264
0x311: V266 = 0x319
0x314: JUMPI 0x319 V265
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x315
[0x315:0x318]
---
Predecessors: [0x30e]
Successors: []
---
0x315 PUSH1 0x0
0x317 DUP1
0x318 REVERT
---
0x315: V267 = 0x0
0x318: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x319
[0x319:0x320]
---
Predecessors: [0x30e]
Successors: [0x49b]
---
0x319 JUMPDEST
0x31a PUSH2 0x238
0x31d PUSH2 0x49b
0x320 JUMP
---
0x319: JUMPDEST 
0x31a: V268 = 0x238
0x31d: V269 = 0x49b
0x320: JUMP 0x49b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x238]
Exit stack: [V11, 0x238]

================================

Block 0x321
[0x321:0x32f]
---
Predecessors: [0x201]
Successors: [0x209]
---
0x321 JUMPDEST
0x322 PUSH1 0x1
0x324 SLOAD
0x325 PUSH1 0x1
0x327 PUSH1 0xa0
0x329 PUSH1 0x2
0x32b EXP
0x32c SUB
0x32d AND
0x32e DUP2
0x32f JUMP
---
0x321: JUMPDEST 
0x322: V270 = 0x1
0x324: V271 = S[0x1]
0x325: V272 = 0x1
0x327: V273 = 0xa0
0x329: V274 = 0x2
0x32b: V275 = EXP 0x2 0xa0
0x32c: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32d: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x32f: JUMP 0x209
---
Entry stack: [V11, 0x209]
Stack pops: 1
Stack additions: [S0, V277]
Exit stack: [V11, 0x209, V277]

================================

Block 0x330
[0x330:0x335]
---
Predecessors: [0x230]
Successors: [0x238]
---
0x330 JUMPDEST
0x331 PUSH1 0x4
0x333 SLOAD
0x334 DUP2
0x335 JUMP
---
0x330: JUMPDEST 
0x331: V278 = 0x4
0x333: V279 = S[0x4]
0x335: JUMP 0x238
---
Entry stack: [V11, 0x238]
Stack pops: 1
Stack additions: [S0, V279]
Exit stack: [V11, 0x238, V279]

================================

Block 0x336
[0x336:0x34c]
---
Predecessors: [0x255]
Successors: [0x34d, 0x351]
---
0x336 JUMPDEST
0x337 PUSH1 0x1
0x339 SLOAD
0x33a CALLER
0x33b PUSH1 0x1
0x33d PUSH1 0xa0
0x33f PUSH1 0x2
0x341 EXP
0x342 SUB
0x343 SWAP1
0x344 DUP2
0x345 AND
0x346 SWAP2
0x347 AND
0x348 EQ
0x349 PUSH2 0x351
0x34c JUMPI
---
0x336: JUMPDEST 
0x337: V280 = 0x1
0x339: V281 = S[0x1]
0x33a: V282 = CALLER
0x33b: V283 = 0x1
0x33d: V284 = 0xa0
0x33f: V285 = 0x2
0x341: V286 = EXP 0x2 0xa0
0x342: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x345: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x347: V289 = AND V281 0xffffffffffffffffffffffffffffffffffffffff
0x348: V290 = EQ V289 V288
0x349: V291 = 0x351
0x34c: JUMPI 0x351 V290
---
Entry stack: [V11, 0x269, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x269, V200]

================================

Block 0x34d
[0x34d:0x350]
---
Predecessors: [0x336]
Successors: []
---
0x34d PUSH1 0x0
0x34f DUP1
0x350 REVERT
---
0x34d: V292 = 0x0
0x350: REVERT 0x0 0x0
---
Entry stack: [V11, 0x269, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x269, V200]

================================

Block 0x351
[0x351:0x37f]
---
Predecessors: [0x336]
Successors: [0x269]
---
0x351 JUMPDEST
0x352 PUSH1 0x2
0x354 DUP1
0x355 SLOAD
0x356 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36b NOT
0x36c AND
0x36d PUSH1 0x1
0x36f PUSH1 0xa0
0x371 PUSH1 0x2
0x373 EXP
0x374 SUB
0x375 SWAP3
0x376 SWAP1
0x377 SWAP3
0x378 AND
0x379 SWAP2
0x37a SWAP1
0x37b SWAP2
0x37c OR
0x37d SWAP1
0x37e SSTORE
0x37f JUMP
---
0x351: JUMPDEST 
0x352: V293 = 0x2
0x355: V294 = S[0x2]
0x356: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x36b: V296 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x36c: V297 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V294
0x36d: V298 = 0x1
0x36f: V299 = 0xa0
0x371: V300 = 0x2
0x373: V301 = EXP 0x2 0xa0
0x374: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x378: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x37c: V304 = OR V303 V297
0x37e: S[0x2] = V304
0x37f: JUMP 0x269
---
Entry stack: [V11, 0x269, V200]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x380
[0x380:0x396]
---
Predecessors: [0x276]
Successors: [0x397, 0x39b]
---
0x380 JUMPDEST
0x381 PUSH1 0x1
0x383 SLOAD
0x384 CALLER
0x385 PUSH1 0x1
0x387 PUSH1 0xa0
0x389 PUSH1 0x2
0x38b EXP
0x38c SUB
0x38d SWAP1
0x38e DUP2
0x38f AND
0x390 SWAP2
0x391 AND
0x392 EQ
0x393 PUSH2 0x39b
0x396 JUMPI
---
0x380: JUMPDEST 
0x381: V305 = 0x1
0x383: V306 = S[0x1]
0x384: V307 = CALLER
0x385: V308 = 0x1
0x387: V309 = 0xa0
0x389: V310 = 0x2
0x38b: V311 = EXP 0x2 0xa0
0x38c: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38f: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x391: V314 = AND V306 0xffffffffffffffffffffffffffffffffffffffff
0x392: V315 = EQ V314 V313
0x393: V316 = 0x39b
0x396: JUMPI 0x39b V315
---
Entry stack: [V11, 0x269, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x269, V214]

================================

Block 0x397
[0x397:0x39a]
---
Predecessors: [0x380]
Successors: []
---
0x397 PUSH1 0x0
0x399 DUP1
0x39a REVERT
---
0x397: V317 = 0x0
0x39a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x269, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x269, V214]

================================

Block 0x39b
[0x39b:0x3c9]
---
Predecessors: [0x380]
Successors: [0x269]
---
0x39b JUMPDEST
0x39c PUSH1 0x0
0x39e DUP1
0x39f SLOAD
0x3a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b5 NOT
0x3b6 AND
0x3b7 PUSH1 0x1
0x3b9 PUSH1 0xa0
0x3bb PUSH1 0x2
0x3bd EXP
0x3be SUB
0x3bf SWAP3
0x3c0 SWAP1
0x3c1 SWAP3
0x3c2 AND
0x3c3 SWAP2
0x3c4 SWAP1
0x3c5 SWAP2
0x3c6 OR
0x3c7 SWAP1
0x3c8 SSTORE
0x3c9 JUMP
---
0x39b: JUMPDEST 
0x39c: V318 = 0x0
0x39f: V319 = S[0x0]
0x3a0: V320 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b5: V321 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: V322 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V319
0x3b7: V323 = 0x1
0x3b9: V324 = 0xa0
0x3bb: V325 = 0x2
0x3bd: V326 = EXP 0x2 0xa0
0x3be: V327 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c2: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x3c6: V329 = OR V328 V322
0x3c8: S[0x0] = V329
0x3c9: JUMP 0x269
---
Entry stack: [V11, 0x269, V214]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ca
[0x3ca:0x3e0]
---
Predecessors: [0x295]
Successors: [0x3e1, 0x3e5]
---
0x3ca JUMPDEST
0x3cb PUSH1 0x1
0x3cd SLOAD
0x3ce CALLER
0x3cf PUSH1 0x1
0x3d1 PUSH1 0xa0
0x3d3 PUSH1 0x2
0x3d5 EXP
0x3d6 SUB
0x3d7 SWAP1
0x3d8 DUP2
0x3d9 AND
0x3da SWAP2
0x3db AND
0x3dc EQ
0x3dd PUSH2 0x3e5
0x3e0 JUMPI
---
0x3ca: JUMPDEST 
0x3cb: V330 = 0x1
0x3cd: V331 = S[0x1]
0x3ce: V332 = CALLER
0x3cf: V333 = 0x1
0x3d1: V334 = 0xa0
0x3d3: V335 = 0x2
0x3d5: V336 = EXP 0x2 0xa0
0x3d6: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d9: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x3db: V339 = AND V331 0xffffffffffffffffffffffffffffffffffffffff
0x3dc: V340 = EQ V339 V338
0x3dd: V341 = 0x3e5
0x3e0: JUMPI 0x3e5 V340
---
Entry stack: [V11, 0x269, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x269, V228]

================================

Block 0x3e1
[0x3e1:0x3e4]
---
Predecessors: [0x3ca]
Successors: []
---
0x3e1 PUSH1 0x0
0x3e3 DUP1
0x3e4 REVERT
---
0x3e1: V342 = 0x0
0x3e4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x269, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x269, V228]

================================

Block 0x3e5
[0x3e5:0x413]
---
Predecessors: [0x3ca]
Successors: [0x269]
---
0x3e5 JUMPDEST
0x3e6 PUSH1 0x1
0x3e8 DUP1
0x3e9 SLOAD
0x3ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ff NOT
0x400 AND
0x401 PUSH1 0x1
0x403 PUSH1 0xa0
0x405 PUSH1 0x2
0x407 EXP
0x408 SUB
0x409 SWAP3
0x40a SWAP1
0x40b SWAP3
0x40c AND
0x40d SWAP2
0x40e SWAP1
0x40f SWAP2
0x410 OR
0x411 SWAP1
0x412 SSTORE
0x413 JUMP
---
0x3e5: JUMPDEST 
0x3e6: V343 = 0x1
0x3e9: V344 = S[0x1]
0x3ea: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ff: V346 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x400: V347 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V344
0x401: V348 = 0x1
0x403: V349 = 0xa0
0x405: V350 = 0x2
0x407: V351 = EXP 0x2 0xa0
0x408: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40c: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x410: V354 = OR V353 V347
0x412: S[0x1] = V354
0x413: JUMP 0x269
---
Entry stack: [V11, 0x269, V228]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x414
[0x414:0x42a]
---
Predecessors: [0x2b4]
Successors: [0x42b, 0x42f]
---
0x414 JUMPDEST
0x415 PUSH1 0x1
0x417 SLOAD
0x418 CALLER
0x419 PUSH1 0x1
0x41b PUSH1 0xa0
0x41d PUSH1 0x2
0x41f EXP
0x420 SUB
0x421 SWAP1
0x422 DUP2
0x423 AND
0x424 SWAP2
0x425 AND
0x426 EQ
0x427 PUSH2 0x42f
0x42a JUMPI
---
0x414: JUMPDEST 
0x415: V355 = 0x1
0x417: V356 = S[0x1]
0x418: V357 = CALLER
0x419: V358 = 0x1
0x41b: V359 = 0xa0
0x41d: V360 = 0x2
0x41f: V361 = EXP 0x2 0xa0
0x420: V362 = SUB 0x10000000000000000000000000000000000000000 0x1
0x423: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x425: V364 = AND V356 0xffffffffffffffffffffffffffffffffffffffff
0x426: V365 = EQ V364 V363
0x427: V366 = 0x42f
0x42a: JUMPI 0x42f V365
---
Entry stack: [V11, 0x269]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x269]

================================

Block 0x42b
[0x42b:0x42e]
---
Predecessors: [0x414]
Successors: []
---
0x42b PUSH1 0x0
0x42d DUP1
0x42e REVERT
---
0x42b: V367 = 0x0
0x42e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x269]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x269]

================================

Block 0x42f
[0x42f:0x43c]
---
Predecessors: [0x414]
Successors: []
---
0x42f JUMPDEST
0x430 PUSH1 0x2
0x432 SLOAD
0x433 PUSH1 0x1
0x435 PUSH1 0xa0
0x437 PUSH1 0x2
0x439 EXP
0x43a SUB
0x43b AND
0x43c SELFDESTRUCT
---
0x42f: JUMPDEST 
0x430: V368 = 0x2
0x432: V369 = S[0x2]
0x433: V370 = 0x1
0x435: V371 = 0xa0
0x437: V372 = 0x2
0x439: V373 = EXP 0x2 0xa0
0x43a: V374 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43b: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x43c: SELFDESTRUCT V375
---
Entry stack: [V11, 0x269]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x269]

================================

Block 0x43d
[0x43d:0x44b]
---
Predecessors: [0x2c7]
Successors: [0x209]
---
0x43d JUMPDEST
0x43e PUSH1 0x0
0x440 SLOAD
0x441 PUSH1 0x1
0x443 PUSH1 0xa0
0x445 PUSH1 0x2
0x447 EXP
0x448 SUB
0x449 AND
0x44a DUP2
0x44b JUMP
---
0x43d: JUMPDEST 
0x43e: V376 = 0x0
0x440: V377 = S[0x0]
0x441: V378 = 0x1
0x443: V379 = 0xa0
0x445: V380 = 0x2
0x447: V381 = EXP 0x2 0xa0
0x448: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x449: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x44b: JUMP 0x209
---
Entry stack: [V11, 0x209]
Stack pops: 1
Stack additions: [S0, V383]
Exit stack: [V11, 0x209, V383]

================================

Block 0x44c
[0x44c:0x462]
---
Predecessors: [0x2da]
Successors: [0x463, 0x467]
---
0x44c JUMPDEST
0x44d PUSH1 0x1
0x44f SLOAD
0x450 CALLER
0x451 PUSH1 0x1
0x453 PUSH1 0xa0
0x455 PUSH1 0x2
0x457 EXP
0x458 SUB
0x459 SWAP1
0x45a DUP2
0x45b AND
0x45c SWAP2
0x45d AND
0x45e EQ
0x45f PUSH2 0x467
0x462 JUMPI
---
0x44c: JUMPDEST 
0x44d: V384 = 0x1
0x44f: V385 = S[0x1]
0x450: V386 = CALLER
0x451: V387 = 0x1
0x453: V388 = 0xa0
0x455: V389 = 0x2
0x457: V390 = EXP 0x2 0xa0
0x458: V391 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45b: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V386
0x45d: V393 = AND V385 0xffffffffffffffffffffffffffffffffffffffff
0x45e: V394 = EQ V393 V392
0x45f: V395 = 0x467
0x462: JUMPI 0x467 V394
---
Entry stack: [V11, 0x269, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x269, V248]

================================

Block 0x463
[0x463:0x466]
---
Predecessors: [0x44c]
Successors: []
---
0x463 PUSH1 0x0
0x465 DUP1
0x466 REVERT
---
0x463: V396 = 0x0
0x466: REVERT 0x0 0x0
---
Entry stack: [V11, 0x269, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x269, V248]

================================

Block 0x467
[0x467:0x46b]
---
Predecessors: [0x44c]
Successors: [0x269]
---
0x467 JUMPDEST
0x468 PUSH1 0x4
0x46a SSTORE
0x46b JUMP
---
0x467: JUMPDEST 
0x468: V397 = 0x4
0x46a: S[0x4] = V248
0x46b: JUMP 0x269
---
Entry stack: [V11, 0x269, V248]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x46c
[0x46c:0x47a]
---
Predecessors: [0x2f0]
Successors: [0x209]
---
0x46c JUMPDEST
0x46d PUSH1 0x2
0x46f SLOAD
0x470 PUSH1 0x1
0x472 PUSH1 0xa0
0x474 PUSH1 0x2
0x476 EXP
0x477 SUB
0x478 AND
0x479 DUP2
0x47a JUMP
---
0x46c: JUMPDEST 
0x46d: V398 = 0x2
0x46f: V399 = S[0x2]
0x470: V400 = 0x1
0x472: V401 = 0xa0
0x474: V402 = 0x2
0x476: V403 = EXP 0x2 0xa0
0x477: V404 = SUB 0x10000000000000000000000000000000000000000 0x1
0x478: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x47a: JUMP 0x209
---
Entry stack: [V11, 0x209]
Stack pops: 1
Stack additions: [S0, V405]
Exit stack: [V11, 0x209, V405]

================================

Block 0x47b
[0x47b:0x491]
---
Predecessors: [0x303]
Successors: [0x492, 0x496]
---
0x47b JUMPDEST
0x47c PUSH1 0x1
0x47e SLOAD
0x47f CALLER
0x480 PUSH1 0x1
0x482 PUSH1 0xa0
0x484 PUSH1 0x2
0x486 EXP
0x487 SUB
0x488 SWAP1
0x489 DUP2
0x48a AND
0x48b SWAP2
0x48c AND
0x48d EQ
0x48e PUSH2 0x496
0x491 JUMPI
---
0x47b: JUMPDEST 
0x47c: V406 = 0x1
0x47e: V407 = S[0x1]
0x47f: V408 = CALLER
0x480: V409 = 0x1
0x482: V410 = 0xa0
0x484: V411 = 0x2
0x486: V412 = EXP 0x2 0xa0
0x487: V413 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48a: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V408
0x48c: V415 = AND V407 0xffffffffffffffffffffffffffffffffffffffff
0x48d: V416 = EQ V415 V414
0x48e: V417 = 0x496
0x491: JUMPI 0x496 V416
---
Entry stack: [V11, 0x269, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x269, V262]

================================

Block 0x492
[0x492:0x495]
---
Predecessors: [0x47b]
Successors: []
---
0x492 PUSH1 0x0
0x494 DUP1
0x495 REVERT
---
0x492: V418 = 0x0
0x495: REVERT 0x0 0x0
---
Entry stack: [V11, 0x269, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x269, V262]

================================

Block 0x496
[0x496:0x49a]
---
Predecessors: [0x47b]
Successors: [0x269]
---
0x496 JUMPDEST
0x497 PUSH1 0x3
0x499 SSTORE
0x49a JUMP
---
0x496: JUMPDEST 
0x497: V419 = 0x3
0x499: S[0x3] = V262
0x49a: JUMP 0x269
---
Entry stack: [V11, 0x269, V262]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x49b
[0x49b:0x4a0]
---
Predecessors: [0x319]
Successors: [0x238]
---
0x49b JUMPDEST
0x49c PUSH1 0x3
0x49e SLOAD
0x49f DUP2
0x4a0 JUMP
---
0x49b: JUMPDEST 
0x49c: V420 = 0x3
0x49e: V421 = S[0x3]
0x4a0: JUMP 0x238
---
Entry stack: [V11, 0x238]
Stack pops: 1
Stack additions: [S0, V421]
Exit stack: [V11, 0x238, V421]

================================

Block 0x4a1
[0x4a1:0x4cf]
---
Predecessors: []
Successors: []
---
0x4a1 STOP
0x4a2 LOG1
0x4a3 PUSH6 0x627a7a723058
0x4aa SHA3
0x4ab SIGNEXTEND
0x4ac MISSING 0xd5
0x4ad PUSH4 0xe9928000
0x4b2 PUSH4 0x4ba6ed87
0x4b7 MISSING 0xde
0x4b8 MISSING 0xb1
0x4b9 DUP10
0x4ba DUP12
0x4bb LOG1
0x4bc MISSING 0xe2
0x4bd MISSING 0x1e
0x4be CALLCODE
0x4bf MISSING 0xc1
0x4c0 PUSH3 0x3b38ec
0x4c4 MISSING 0x22
0x4c5 MISSING 0xf8
0x4c6 MISSING 0x1f
0x4c7 MISSING 0xd7
0x4c8 PUSH7 0x865c0029
---
0x4a1: STOP 
0x4a2: LOG S0 S1 S2
0x4a3: V422 = 0x627a7a723058
0x4aa: V423 = SHA3 0x627a7a723058 S3
0x4ab: V424 = SIGNEXTEND V423 S4
0x4ac: MISSING 0xd5
0x4ad: V425 = 0xe9928000
0x4b2: V426 = 0x4ba6ed87
0x4b7: MISSING 0xde
0x4b8: MISSING 0xb1
0x4bb: LOG S10 S9 S0
0x4bc: MISSING 0xe2
0x4bd: MISSING 0x1e
0x4be: V427 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x4bf: MISSING 0xc1
0x4c0: V428 = 0x3b38ec
0x4c4: MISSING 0x22
0x4c5: MISSING 0xf8
0x4c6: MISSING 0x1f
0x4c7: MISSING 0xd7
0x4c8: V429 = 0x865c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V424, 0x4ba6ed87, 0xe9928000, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V427, 0x3b38ec, 0x865c0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x1f6
Exit block: 0x209
Body: 0x1f6, 0x1fd, 0x201, 0x209, 0x321

Function 1:
Public function signature: 0xb97bc86
Entry block: 0x225
Exit block: 0x238
Body: 0x225, 0x22c, 0x230, 0x238, 0x330

Function 2:
Public function signature: 0x13af4035
Entry block: 0x24a
Exit block: 0x269
Body: 0x24a, 0x251, 0x255, 0x269, 0x336, 0x34d, 0x351

Function 3:
Public function signature: 0x144fa6d7
Entry block: 0x26b
Exit block: 0x269
Body: 0x269, 0x26b, 0x272, 0x276, 0x380, 0x397, 0x39b

Function 4:
Public function signature: 0x3f516018
Entry block: 0x28a
Exit block: 0x269
Body: 0x269, 0x28a, 0x291, 0x295, 0x3ca, 0x3e1, 0x3e5

Function 5:
Public function signature: 0x41c0e1b5
Entry block: 0x2a9
Exit block: 0x42f
Body: 0x2a9, 0x2b0, 0x2b4, 0x414, 0x42b, 0x42f

Function 6:
Public function signature: 0x6e66f6e9
Entry block: 0x2bc
Exit block: 0x209
Body: 0x209, 0x2bc, 0x2c3, 0x2c7, 0x43d

Function 7:
Public function signature: 0x82d95df5
Entry block: 0x2cf
Exit block: 0x269
Body: 0x269, 0x2cf, 0x2d6, 0x2da, 0x44c, 0x463, 0x467

Function 8:
Public function signature: 0x8da5cb5b
Entry block: 0x2e5
Exit block: 0x209
Body: 0x209, 0x2e5, 0x2ec, 0x2f0, 0x46c

Function 9:
Public function signature: 0x91b7f5ed
Entry block: 0x2f8
Exit block: 0x269
Body: 0x269, 0x2f8, 0x2ff, 0x303, 0x47b, 0x492, 0x496

Function 10:
Public function signature: 0xa035b1fe
Entry block: 0x30e
Exit block: 0x238
Body: 0x238, 0x30e, 0x315, 0x319, 0x49b

Function 11:
Public fallback function
Entry block: 0xae
Exit block: 0x1ef
Body: 0xae, 0xb9, 0xbd, 0xc7, 0xcb, 0x153, 0x157, 0x164, 0x168, 0x1ef, 0x1f3

