Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6c
0xa: JUMPI 0x6c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x82]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x1cb3b20
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x82
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x1cb3b20
0x1a: V12 = EQ V10 0x1cb3b20
0x1b: V13 = 0x82
0x1e: JUMPI 0x82 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x11f]
---
0x1f DUP1
0x20 PUSH4 0x29dcb0cf
0x25 EQ
0x26 PUSH2 0x11f
0x29 JUMPI
---
0x20: V14 = 0x29dcb0cf
0x25: V15 = EQ 0x29dcb0cf V10
0x26: V16 = 0x11f
0x29: JUMPI 0x11f V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x128]
---
0x2a DUP1
0x2b PUSH4 0x38af3eed
0x30 EQ
0x31 PUSH2 0x128
0x34 JUMPI
---
0x2b: V17 = 0x38af3eed
0x30: V18 = EQ 0x38af3eed V10
0x31: V19 = 0x128
0x34: JUMPI 0x128 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x13a]
---
0x35 DUP1
0x36 PUSH4 0x6e66f6e9
0x3b EQ
0x3c PUSH2 0x13a
0x3f JUMPI
---
0x36: V20 = 0x6e66f6e9
0x3b: V21 = EQ 0x6e66f6e9 V10
0x3c: V22 = 0x13a
0x3f: JUMPI 0x13a V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x14c]
---
0x40 DUP1
0x41 PUSH4 0x7a3a0e84
0x46 EQ
0x47 PUSH2 0x14c
0x4a JUMPI
---
0x41: V23 = 0x7a3a0e84
0x46: V24 = EQ 0x7a3a0e84 V10
0x47: V25 = 0x14c
0x4a: JUMPI 0x14c V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x155]
---
0x4b DUP1
0x4c PUSH4 0x7b3e5e7b
0x51 EQ
0x52 PUSH2 0x155
0x55 JUMPI
---
0x4c: V26 = 0x7b3e5e7b
0x51: V27 = EQ 0x7b3e5e7b V10
0x52: V28 = 0x155
0x55: JUMPI 0x155 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x15e]
---
0x56 DUP1
0x57 PUSH4 0xa035b1fe
0x5c EQ
0x5d PUSH2 0x15e
0x60 JUMPI
---
0x57: V29 = 0xa035b1fe
0x5c: V30 = EQ 0xa035b1fe V10
0x5d: V31 = 0x15e
0x60: JUMPI 0x15e V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x167]
---
0x61 DUP1
0x62 PUSH4 0xdc0d3dff
0x67 EQ
0x68 PUSH2 0x167
0x6b JUMPI
---
0x62: V32 = 0xdc0d3dff
0x67: V33 = EQ 0xdc0d3dff V10
0x68: V34 = 0x167
0x6b: JUMPI 0x167 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x7d]
---
Predecessors: [0x0, 0x61]
Successors: [0x7e, 0x2ec]
---
0x6c JUMPDEST
0x6d PUSH2 0x1db
0x70 PUSH1 0x7
0x72 SLOAD
0x73 PUSH1 0x0
0x75 SWAP1
0x76 PUSH1 0xff
0x78 AND
0x79 ISZERO
0x7a PUSH2 0x2ec
0x7d JUMPI
---
0x6c: JUMPDEST 
0x6d: V35 = 0x1db
0x70: V36 = 0x7
0x72: V37 = S[0x7]
0x73: V38 = 0x0
0x76: V39 = 0xff
0x78: V40 = AND 0xff V37
0x79: V41 = ISZERO V40
0x7a: V42 = 0x2ec
0x7d: JUMPI 0x2ec V41
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1db, 0x0]
Exit stack: [V10, 0x1db, 0x0]

================================

Block 0x7e
[0x7e:0x81]
---
Predecessors: [0x6c]
Successors: []
---
0x7e PUSH2 0x2
0x81 JUMP
---
0x7e: V43 = 0x2
0x81: THROW 
---
Entry stack: [V10, 0x1db, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1db, 0x0]

================================

Block 0x82
[0x82:0x91]
---
Predecessors: [0xb]
Successors: [0x92, 0x2e9]
---
0x82 JUMPDEST
0x83 PUSH2 0x1db
0x86 PUSH1 0x3
0x88 SLOAD
0x89 PUSH1 0x0
0x8b SWAP1
0x8c TIMESTAMP
0x8d LT
0x8e PUSH2 0x2e9
0x91 JUMPI
---
0x82: JUMPDEST 
0x83: V44 = 0x1db
0x86: V45 = 0x3
0x88: V46 = S[0x3]
0x89: V47 = 0x0
0x8c: V48 = TIMESTAMP
0x8d: V49 = LT V48 V46
0x8e: V50 = 0x2e9
0x91: JUMPI 0x2e9 V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1db, 0x0]
Exit stack: [V10, 0x1db, 0x0]

================================

Block 0x92
[0x92:0x9d]
---
Predecessors: [0x82]
Successors: [0x9e, 0x394]
---
0x92 PUSH1 0x2
0x94 SLOAD
0x95 PUSH1 0x1
0x97 SLOAD
0x98 SWAP1
0x99 LT
0x9a PUSH2 0x394
0x9d JUMPI
---
0x92: V51 = 0x2
0x94: V52 = S[0x2]
0x95: V53 = 0x1
0x97: V54 = S[0x1]
0x99: V55 = LT V52 V54
0x9a: V56 = 0x394
0x9d: JUMPI 0x394 V55
---
Entry stack: [V10, 0x1db, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1db, 0x0]

================================

Block 0x9e
[0x9e:0xe8]
---
Predecessors: [0x92]
Successors: [0xe9]
---
0x9e PUSH1 0x2
0xa0 SLOAD
0xa1 DUP2
0xa2 SLOAD
0xa3 PUSH1 0x1
0xa5 PUSH1 0xa0
0xa7 PUSH1 0x2
0xa9 EXP
0xaa SUB
0xab AND
0xac SWAP1
0xad DUP3
0xae SWAP1
0xaf PUSH1 0x60
0xb1 DUP3
0xb2 DUP2
0xb3 DUP2
0xb4 DUP2
0xb5 DUP6
0xb6 DUP9
0xb7 DUP4
0xb8 CALL
0xb9 POP
0xba PUSH1 0x40
0xbc DUP1
0xbd MLOAD
0xbe SWAP5
0xbf DUP6
0xc0 MSTORE
0xc1 PUSH1 0x20
0xc3 DUP6
0xc4 ADD
0xc5 SWAP3
0xc6 SWAP1
0xc7 SWAP3
0xc8 MSTORE
0xc9 DUP4
0xca DUP3
0xcb ADD
0xcc SWAP3
0xcd SWAP1
0xce SWAP3
0xcf MSTORE
0xd0 MLOAD
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 MLOAD
0xd5 PUSH1 0x20
0xd7 PUSH2 0x50b
0xda DUP4
0xdb CODECOPY
0xdc DUP2
0xdd MLOAD
0xde SWAP2
0xdf MSTORE
0xe0 SWAP3
0xe1 DUP2
0xe2 SWAP1
0xe3 SUB
0xe4 SWAP1
0xe5 SWAP2
0xe6 ADD
0xe7 SWAP1
0xe8 LOG1
---
0x9e: V57 = 0x2
0xa0: V58 = S[0x2]
0xa2: V59 = S[0x0]
0xa3: V60 = 0x1
0xa5: V61 = 0xa0
0xa7: V62 = 0x2
0xa9: V63 = EXP 0x2 0xa0
0xaa: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xaf: V66 = 0x60
0xb8: V67 = CALL 0x0 V65 V58 0x60 0x0 0x60 0x0
0xba: V68 = 0x40
0xbd: V69 = M[0x40]
0xc0: M[V69] = V65
0xc1: V70 = 0x20
0xc4: V71 = ADD V69 0x20
0xc8: M[V71] = V58
0xcb: V72 = ADD 0x40 V69
0xcf: M[V72] = 0x0
0xd0: V73 = M[0x40]
0xd1: V74 = 0x0
0xd4: V75 = M[0x0]
0xd5: V76 = 0x20
0xd7: V77 = 0x50b
0xdb: CODECOPY 0x0 0x50b 0x20
0xdd: V78 = M[0x0]
0xdf: M[0x0] = V75
0xe3: V79 = SUB V69 V73
0xe6: V80 = ADD 0x60 V79
0xe8: LOG V73 V80 V78
---
Entry stack: [V10, 0x1db, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1db, 0x0]

================================

Block 0xe9
[0xe9:0x11e]
---
Predecessors: [0x9e, 0x3b6]
Successors: [0x1db]
---
0xe9 JUMPDEST
0xea PUSH1 0x40
0xec MLOAD
0xed PUSH1 0x0
0xef DUP1
0xf0 SLOAD
0xf1 PUSH1 0x1
0xf3 PUSH1 0xa0
0xf5 PUSH1 0x2
0xf7 EXP
0xf8 SUB
0xf9 SWAP1
0xfa DUP2
0xfb AND
0xfc SWAP3
0xfd ADDRESS
0xfe SWAP1
0xff SWAP2
0x100 AND
0x101 BALANCE
0x102 SWAP1
0x103 DUP3
0x104 DUP2
0x105 DUP2
0x106 DUP2
0x107 DUP6
0x108 DUP9
0x109 DUP4
0x10a CALL
0x10b POP
0x10c POP
0x10d PUSH1 0x7
0x10f DUP1
0x110 SLOAD
0x111 PUSH1 0xff
0x113 NOT
0x114 AND
0x115 PUSH1 0x1
0x117 OR
0x118 SWAP1
0x119 SSTORE
0x11a POP
0x11b POP
0x11c POP
0x11d POP
0x11e JUMP
---
0xe9: JUMPDEST 
0xea: V81 = 0x40
0xec: V82 = M[0x40]
0xed: V83 = 0x0
0xf0: V84 = S[0x0]
0xf1: V85 = 0x1
0xf3: V86 = 0xa0
0xf5: V87 = 0x2
0xf7: V88 = EXP 0x2 0xa0
0xf8: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfb: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0xfd: V91 = ADDRESS
0x100: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x101: V93 = BALANCE V92
0x10a: V94 = CALL 0x0 V90 V93 V82 0x0 V82 0x0
0x10d: V95 = 0x7
0x110: V96 = S[0x7]
0x111: V97 = 0xff
0x113: V98 = NOT 0xff
0x114: V99 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V96
0x115: V100 = 0x1
0x117: V101 = OR 0x1 V99
0x119: S[0x7] = V101
0x11e: JUMP 0x1db
---
Entry stack: [V10, 0x1db, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x11f
[0x11f:0x127]
---
Predecessors: [0x1f]
Successors: [0x36a]
---
0x11f JUMPDEST
0x120 PUSH2 0x36a
0x123 PUSH1 0x3
0x125 SLOAD
0x126 DUP2
0x127 JUMP
---
0x11f: JUMPDEST 
0x120: V102 = 0x36a
0x123: V103 = 0x3
0x125: V104 = S[0x3]
0x127: JUMP 0x36a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x36a, V104]
Exit stack: [V10, 0x36a, V104]

================================

Block 0x128
[0x128:0x139]
---
Predecessors: [0x2a]
Successors: [0x374]
---
0x128 JUMPDEST
0x129 PUSH2 0x374
0x12c PUSH1 0x0
0x12e SLOAD
0x12f PUSH1 0x1
0x131 PUSH1 0xa0
0x133 PUSH1 0x2
0x135 EXP
0x136 SUB
0x137 AND
0x138 DUP2
0x139 JUMP
---
0x128: JUMPDEST 
0x129: V105 = 0x374
0x12c: V106 = 0x0
0x12e: V107 = S[0x0]
0x12f: V108 = 0x1
0x131: V109 = 0xa0
0x133: V110 = 0x2
0x135: V111 = EXP 0x2 0xa0
0x136: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x137: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x139: JUMP 0x374
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x374, V113]
Exit stack: [V10, 0x374, V113]

================================

Block 0x13a
[0x13a:0x14b]
---
Predecessors: [0x35]
Successors: [0x374]
---
0x13a JUMPDEST
0x13b PUSH2 0x374
0x13e PUSH1 0x5
0x140 SLOAD
0x141 PUSH1 0x1
0x143 PUSH1 0xa0
0x145 PUSH1 0x2
0x147 EXP
0x148 SUB
0x149 AND
0x14a DUP2
0x14b JUMP
---
0x13a: JUMPDEST 
0x13b: V114 = 0x374
0x13e: V115 = 0x5
0x140: V116 = S[0x5]
0x141: V117 = 0x1
0x143: V118 = 0xa0
0x145: V119 = 0x2
0x147: V120 = EXP 0x2 0xa0
0x148: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x149: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x14b: JUMP 0x374
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x374, V122]
Exit stack: [V10, 0x374, V122]

================================

Block 0x14c
[0x14c:0x154]
---
Predecessors: [0x40]
Successors: [0x36a]
---
0x14c JUMPDEST
0x14d PUSH2 0x36a
0x150 PUSH1 0x1
0x152 SLOAD
0x153 DUP2
0x154 JUMP
---
0x14c: JUMPDEST 
0x14d: V123 = 0x36a
0x150: V124 = 0x1
0x152: V125 = S[0x1]
0x154: JUMP 0x36a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x36a, V125]
Exit stack: [V10, 0x36a, V125]

================================

Block 0x155
[0x155:0x15d]
---
Predecessors: [0x4b]
Successors: [0x36a]
---
0x155 JUMPDEST
0x156 PUSH2 0x36a
0x159 PUSH1 0x2
0x15b SLOAD
0x15c DUP2
0x15d JUMP
---
0x155: JUMPDEST 
0x156: V126 = 0x36a
0x159: V127 = 0x2
0x15b: V128 = S[0x2]
0x15d: JUMP 0x36a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x36a, V128]
Exit stack: [V10, 0x36a, V128]

================================

Block 0x15e
[0x15e:0x166]
---
Predecessors: [0x56]
Successors: [0x36a]
---
0x15e JUMPDEST
0x15f PUSH2 0x36a
0x162 PUSH1 0x4
0x164 SLOAD
0x165 DUP2
0x166 JUMP
---
0x15e: JUMPDEST 
0x15f: V129 = 0x36a
0x162: V130 = 0x4
0x164: V131 = S[0x4]
0x166: JUMP 0x36a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x36a, V131]
Exit stack: [V10, 0x36a, V131]

================================

Block 0x167
[0x167:0x17a]
---
Predecessors: [0x61]
Successors: [0x17b]
---
0x167 JUMPDEST
0x168 PUSH2 0x387
0x16b PUSH1 0x4
0x16d CALLDATALOAD
0x16e PUSH1 0x6
0x170 DUP1
0x171 SLOAD
0x172 DUP3
0x173 SWAP1
0x174 DUP2
0x175 LT
0x176 ISZERO
0x177 PUSH2 0x2
0x17a JUMPI
---
0x167: JUMPDEST 
0x168: V132 = 0x387
0x16b: V133 = 0x4
0x16d: V134 = CALLDATALOAD 0x4
0x16e: V135 = 0x6
0x171: V136 = S[0x6]
0x175: V137 = LT V134 V136
0x176: V138 = ISZERO V137
0x177: V139 = 0x2
0x17a: THROWI V138
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x387, V134, 0x6, V134]
Exit stack: [V10, 0x387, V134, 0x6, V134]

================================

Block 0x17b
[0x17b:0x1da]
---
Predecessors: [0x167]
Successors: [0x387]
---
0x17b POP
0x17c PUSH1 0x0
0x17e MSTORE
0x17f PUSH1 0x2
0x181 MUL
0x182 PUSH32 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f
0x1a3 DUP2
0x1a4 ADD
0x1a5 SLOAD
0x1a6 PUSH32 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40
0x1c7 SWAP2
0x1c8 SWAP1
0x1c9 SWAP2
0x1ca ADD
0x1cb SLOAD
0x1cc PUSH1 0x1
0x1ce PUSH1 0xa0
0x1d0 PUSH1 0x2
0x1d2 EXP
0x1d3 SUB
0x1d4 SWAP2
0x1d5 SWAP1
0x1d6 SWAP2
0x1d7 AND
0x1d8 SWAP1
0x1d9 DUP3
0x1da JUMP
---
0x17c: V140 = 0x0
0x17e: M[0x0] = 0x6
0x17f: V141 = 0x2
0x181: V142 = MUL 0x2 V134
0x182: V143 = 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f
0x1a4: V144 = ADD V142 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f
0x1a5: V145 = S[V144]
0x1a6: V146 = 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40
0x1ca: V147 = ADD 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40 V142
0x1cb: V148 = S[V147]
0x1cc: V149 = 0x1
0x1ce: V150 = 0xa0
0x1d0: V151 = 0x2
0x1d2: V152 = EXP 0x2 0xa0
0x1d3: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d7: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x1da: JUMP 0x387
---
Entry stack: [V10, 0x387, V134, 0x6, V134]
Stack pops: 4
Stack additions: [S3, V154, V148]
Exit stack: [V10, 0x387, V154, V148]

================================

Block 0x1db
[0x1db:0x1dc]
---
Predecessors: [0xe9, 0x2e9]
Successors: []
---
0x1db JUMPDEST
0x1dc STOP
---
0x1db: JUMPDEST 
0x1dc: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1dd
[0x1dd:0x1e9]
---
Predecessors: [0x2ec, 0x366]
Successors: [0x1ea]
---
0x1dd JUMPDEST
0x1de POP
0x1df POP
0x1e0 POP
0x1e1 DUP2
0x1e2 SLOAD
0x1e3 DUP2
0x1e4 LT
0x1e5 ISZERO
0x1e6 PUSH2 0x2
0x1e9 JUMPI
---
0x1dd: JUMPDEST 
0x1e2: V155 = S[0x6]
0x1e4: V156 = LT V278 V155
0x1e5: V157 = ISZERO V156
0x1e6: V158 = 0x2
0x1e9: THROWI V157
---
Entry stack: [V10, 0x1db, V275, 0x60, 0x6, V278, 0x6, V280, S0]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V10, 0x1db, V275, 0x60, 0x6, V278]

================================

Block 0x1ea
[0x1ea:0x2ad]
---
Predecessors: [0x1dd]
Successors: [0x2ae]
---
0x1ea SWAP1
0x1eb PUSH1 0x0
0x1ed MSTORE
0x1ee PUSH1 0x20
0x1f0 PUSH1 0x0
0x1f2 SHA3
0x1f3 SWAP1
0x1f4 PUSH1 0x2
0x1f6 MUL
0x1f7 ADD
0x1f8 PUSH1 0x0
0x1fa POP
0x1fb PUSH1 0x0
0x1fd DUP3
0x1fe ADD
0x1ff MLOAD
0x200 DUP2
0x201 PUSH1 0x0
0x203 ADD
0x204 PUSH1 0x0
0x206 PUSH2 0x100
0x209 EXP
0x20a DUP2
0x20b SLOAD
0x20c DUP2
0x20d PUSH1 0x1
0x20f PUSH1 0xa0
0x211 PUSH1 0x2
0x213 EXP
0x214 SUB
0x215 MUL
0x216 NOT
0x217 AND
0x218 SWAP1
0x219 DUP4
0x21a MUL
0x21b OR
0x21c SWAP1
0x21d SSTORE
0x21e POP
0x21f PUSH1 0x20
0x221 DUP3
0x222 ADD
0x223 MLOAD
0x224 DUP2
0x225 PUSH1 0x1
0x227 ADD
0x228 PUSH1 0x0
0x22a POP
0x22b SSTORE
0x22c SWAP1
0x22d POP
0x22e POP
0x22f DUP1
0x230 PUSH1 0x2
0x232 PUSH1 0x0
0x234 DUP3
0x235 DUP3
0x236 DUP3
0x237 POP
0x238 SLOAD
0x239 ADD
0x23a SWAP3
0x23b POP
0x23c POP
0x23d DUP2
0x23e SWAP1
0x23f SSTORE
0x240 POP
0x241 PUSH1 0x5
0x243 PUSH1 0x0
0x245 SWAP1
0x246 SLOAD
0x247 SWAP1
0x248 PUSH2 0x100
0x24b EXP
0x24c SWAP1
0x24d DIV
0x24e PUSH1 0x1
0x250 PUSH1 0xa0
0x252 PUSH1 0x2
0x254 EXP
0x255 SUB
0x256 AND
0x257 PUSH1 0x1
0x259 PUSH1 0xa0
0x25b PUSH1 0x2
0x25d EXP
0x25e SUB
0x25f AND
0x260 PUSH4 0xa9059cbb
0x265 CALLER
0x266 PUSH1 0x4
0x268 PUSH1 0x0
0x26a POP
0x26b SLOAD
0x26c DUP5
0x26d DIV
0x26e PUSH1 0x40
0x270 MLOAD
0x271 DUP4
0x272 PUSH1 0xe0
0x274 PUSH1 0x2
0x276 EXP
0x277 MUL
0x278 DUP2
0x279 MSTORE
0x27a PUSH1 0x4
0x27c ADD
0x27d DUP1
0x27e DUP4
0x27f PUSH1 0x1
0x281 PUSH1 0xa0
0x283 PUSH1 0x2
0x285 EXP
0x286 SUB
0x287 AND
0x288 DUP2
0x289 MSTORE
0x28a PUSH1 0x20
0x28c ADD
0x28d DUP3
0x28e DUP2
0x28f MSTORE
0x290 PUSH1 0x20
0x292 ADD
0x293 SWAP3
0x294 POP
0x295 POP
0x296 POP
0x297 PUSH1 0x0
0x299 PUSH1 0x40
0x29b MLOAD
0x29c DUP1
0x29d DUP4
0x29e SUB
0x29f DUP2
0x2a0 PUSH1 0x0
0x2a2 DUP8
0x2a3 PUSH2 0x61da
0x2a6 GAS
0x2a7 SUB
0x2a8 CALL
0x2a9 ISZERO
0x2aa PUSH2 0x2
0x2ad JUMPI
---
0x1eb: V159 = 0x0
0x1ed: M[0x0] = 0x6
0x1ee: V160 = 0x20
0x1f0: V161 = 0x0
0x1f2: V162 = SHA3 0x0 0x20
0x1f4: V163 = 0x2
0x1f6: V164 = MUL 0x2 V278
0x1f7: V165 = ADD V164 V162
0x1f8: V166 = 0x0
0x1fb: V167 = 0x0
0x1fe: V168 = ADD 0x60 0x0
0x1ff: V169 = M[0x60]
0x201: V170 = 0x0
0x203: V171 = ADD 0x0 V165
0x204: V172 = 0x0
0x206: V173 = 0x100
0x209: V174 = EXP 0x100 0x0
0x20b: V175 = S[V171]
0x20d: V176 = 0x1
0x20f: V177 = 0xa0
0x211: V178 = 0x2
0x213: V179 = EXP 0x2 0xa0
0x214: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x215: V181 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x216: V182 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x217: V183 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V175
0x21a: V184 = MUL V169 0x1
0x21b: V185 = OR V184 V183
0x21d: S[V171] = V185
0x21f: V186 = 0x20
0x222: V187 = ADD 0x60 0x20
0x223: V188 = M[0x80]
0x225: V189 = 0x1
0x227: V190 = ADD 0x1 V165
0x228: V191 = 0x0
0x22b: S[V190] = V188
0x230: V192 = 0x2
0x232: V193 = 0x0
0x238: V194 = S[0x2]
0x239: V195 = ADD V194 V275
0x23f: S[0x2] = V195
0x241: V196 = 0x5
0x243: V197 = 0x0
0x246: V198 = S[0x5]
0x248: V199 = 0x100
0x24b: V200 = EXP 0x100 0x0
0x24d: V201 = DIV V198 0x1
0x24e: V202 = 0x1
0x250: V203 = 0xa0
0x252: V204 = 0x2
0x254: V205 = EXP 0x2 0xa0
0x255: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x256: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x257: V208 = 0x1
0x259: V209 = 0xa0
0x25b: V210 = 0x2
0x25d: V211 = EXP 0x2 0xa0
0x25e: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25f: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x260: V214 = 0xa9059cbb
0x265: V215 = CALLER
0x266: V216 = 0x4
0x268: V217 = 0x0
0x26b: V218 = S[0x4]
0x26d: V219 = DIV V275 V218
0x26e: V220 = 0x40
0x270: V221 = M[0x40]
0x272: V222 = 0xe0
0x274: V223 = 0x2
0x276: V224 = EXP 0x2 0xe0
0x277: V225 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x279: M[V221] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x27a: V226 = 0x4
0x27c: V227 = ADD 0x4 V221
0x27f: V228 = 0x1
0x281: V229 = 0xa0
0x283: V230 = 0x2
0x285: V231 = EXP 0x2 0xa0
0x286: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x287: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x289: M[V227] = V233
0x28a: V234 = 0x20
0x28c: V235 = ADD 0x20 V227
0x28f: M[V235] = V219
0x290: V236 = 0x20
0x292: V237 = ADD 0x20 V235
0x297: V238 = 0x0
0x299: V239 = 0x40
0x29b: V240 = M[0x40]
0x29e: V241 = SUB V237 V240
0x2a0: V242 = 0x0
0x2a3: V243 = 0x61da
0x2a6: V244 = GAS
0x2a7: V245 = SUB V244 0x61da
0x2a8: V246 = CALL V245 V213 0x0 V240 V241 V240 0x0
0x2a9: V247 = ISZERO V246
0x2aa: V248 = 0x2
0x2ad: THROWI V247
---
Entry stack: [V10, 0x1db, V275, 0x60, 0x6, V278]
Stack pops: 4
Stack additions: [S3, V213, 0xa9059cbb, V237]
Exit stack: [V10, 0x1db, V275, V213, 0xa9059cbb, V237]

================================

Block 0x2ae
[0x2ae:0x2e8]
---
Predecessors: [0x1ea]
Successors: [0x2e9]
---
0x2ae POP
0x2af POP
0x2b0 PUSH1 0x40
0x2b2 DUP1
0x2b3 MLOAD
0x2b4 PUSH1 0x1
0x2b6 PUSH1 0xa0
0x2b8 PUSH1 0x2
0x2ba EXP
0x2bb SUB
0x2bc CALLER
0x2bd AND
0x2be DUP2
0x2bf MSTORE
0x2c0 PUSH1 0x20
0x2c2 DUP2
0x2c3 ADD
0x2c4 DUP5
0x2c5 SWAP1
0x2c6 MSTORE
0x2c7 PUSH1 0x1
0x2c9 DUP2
0x2ca DUP4
0x2cb ADD
0x2cc MSTORE
0x2cd SWAP1
0x2ce MLOAD
0x2cf PUSH1 0x0
0x2d1 DUP1
0x2d2 MLOAD
0x2d3 PUSH1 0x20
0x2d5 PUSH2 0x50b
0x2d8 DUP4
0x2d9 CODECOPY
0x2da DUP2
0x2db MLOAD
0x2dc SWAP2
0x2dd MSTORE
0x2de SWAP3
0x2df POP
0x2e0 SWAP1
0x2e1 DUP2
0x2e2 SWAP1
0x2e3 SUB
0x2e4 PUSH1 0x60
0x2e6 ADD
0x2e7 SWAP1
0x2e8 LOG1
---
0x2b0: V249 = 0x40
0x2b3: V250 = M[0x40]
0x2b4: V251 = 0x1
0x2b6: V252 = 0xa0
0x2b8: V253 = 0x2
0x2ba: V254 = EXP 0x2 0xa0
0x2bb: V255 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bc: V256 = CALLER
0x2bd: V257 = AND V256 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: M[V250] = V257
0x2c0: V258 = 0x20
0x2c3: V259 = ADD V250 0x20
0x2c6: M[V259] = V275
0x2c7: V260 = 0x1
0x2cb: V261 = ADD 0x40 V250
0x2cc: M[V261] = 0x1
0x2ce: V262 = M[0x40]
0x2cf: V263 = 0x0
0x2d2: V264 = M[0x0]
0x2d3: V265 = 0x20
0x2d5: V266 = 0x50b
0x2d9: CODECOPY 0x0 0x50b 0x20
0x2db: V267 = M[0x0]
0x2dd: M[0x0] = V264
0x2e3: V268 = SUB V250 V262
0x2e4: V269 = 0x60
0x2e6: V270 = ADD 0x60 V268
0x2e8: LOG V262 V270 V267
---
Entry stack: [V10, 0x1db, V275, V213, 0xa9059cbb, V237]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x1db, V275]

================================

Block 0x2e9
[0x2e9:0x2eb]
---
Predecessors: [0x82, 0x2ae]
Successors: [0x1db]
---
0x2e9 JUMPDEST
0x2ea POP
0x2eb JUMP
---
0x2e9: JUMPDEST 
0x2eb: JUMP 0x1db
---
Entry stack: [V10, 0x1db, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ec
[0x2ec:0x318]
---
Predecessors: [0x6c]
Successors: [0x1dd, 0x319]
---
0x2ec JUMPDEST
0x2ed POP
0x2ee PUSH1 0xa0
0x2f0 PUSH1 0x40
0x2f2 MSTORE
0x2f3 CALLER
0x2f4 PUSH1 0x60
0x2f6 SWAP1
0x2f7 DUP2
0x2f8 MSTORE
0x2f9 CALLVALUE
0x2fa PUSH1 0x80
0x2fc DUP2
0x2fd SWAP1
0x2fe MSTORE
0x2ff PUSH1 0x6
0x301 DUP1
0x302 SLOAD
0x303 PUSH1 0x1
0x305 DUP2
0x306 ADD
0x307 DUP1
0x308 DUP4
0x309 SSTORE
0x30a SWAP3
0x30b SWAP4
0x30c SWAP3
0x30d DUP3
0x30e SWAP1
0x30f DUP3
0x310 DUP1
0x311 ISZERO
0x312 DUP3
0x313 SWAP1
0x314 GT
0x315 PUSH2 0x1dd
0x318 JUMPI
---
0x2ec: JUMPDEST 
0x2ee: V271 = 0xa0
0x2f0: V272 = 0x40
0x2f2: M[0x40] = 0xa0
0x2f3: V273 = CALLER
0x2f4: V274 = 0x60
0x2f8: M[0x60] = V273
0x2f9: V275 = CALLVALUE
0x2fa: V276 = 0x80
0x2fe: M[0x80] = V275
0x2ff: V277 = 0x6
0x302: V278 = S[0x6]
0x303: V279 = 0x1
0x306: V280 = ADD V278 0x1
0x309: S[0x6] = V280
0x311: V281 = ISZERO V278
0x314: V282 = GT V281 V280
0x315: V283 = 0x1dd
0x318: JUMPI 0x1dd V282
---
Entry stack: [V10, 0x1db, 0x0]
Stack pops: 1
Stack additions: [V275, 0x60, 0x6, V278, 0x6, V280, V278]
Exit stack: [V10, 0x1db, V275, 0x60, 0x6, V278, 0x6, V280, V278]

================================

Block 0x319
[0x319:0x332]
---
Predecessors: [0x2ec]
Successors: [0x333]
---
0x319 PUSH1 0x2
0x31b MUL
0x31c DUP2
0x31d PUSH1 0x2
0x31f MUL
0x320 DUP4
0x321 PUSH1 0x0
0x323 MSTORE
0x324 PUSH1 0x20
0x326 PUSH1 0x0
0x328 SHA3
0x329 SWAP2
0x32a DUP3
0x32b ADD
0x32c SWAP2
0x32d ADD
0x32e PUSH2 0x1dd
0x331 SWAP2
0x332 SWAP1
---
0x319: V284 = 0x2
0x31b: V285 = MUL 0x2 V278
0x31d: V286 = 0x2
0x31f: V287 = MUL 0x2 V280
0x321: V288 = 0x0
0x323: M[0x0] = 0x6
0x324: V289 = 0x20
0x326: V290 = 0x0
0x328: V291 = SHA3 0x0 0x20
0x32b: V292 = ADD V291 V285
0x32d: V293 = ADD V291 V287
0x32e: V294 = 0x1dd
---
Entry stack: [V10, 0x1db, V275, 0x60, 0x6, V278, 0x6, V280, V278]
Stack pops: 3
Stack additions: [S2, S1, 0x1dd, V292, V293]
Exit stack: [V10, 0x1db, V275, 0x60, 0x6, V278, 0x6, V280, 0x1dd, V292, V293]

================================

Block 0x333
[0x333:0x33b]
---
Predecessors: [0x319, 0x33c]
Successors: [0x33c, 0x366]
---
0x333 JUMPDEST
0x334 DUP1
0x335 DUP3
0x336 GT
0x337 ISZERO
0x338 PUSH2 0x366
0x33b JUMPI
---
0x333: JUMPDEST 
0x336: V295 = GT V292 S0
0x337: V296 = ISZERO V295
0x338: V297 = 0x366
0x33b: JUMPI 0x366 V296
---
Entry stack: [V10, 0x1db, V275, 0x60, 0x6, V278, 0x6, V280, 0x1dd, V292, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x1db, V275, 0x60, 0x6, V278, 0x6, V280, 0x1dd, V292, S0]

================================

Block 0x33c
[0x33c:0x365]
---
Predecessors: [0x333]
Successors: [0x333]
---
0x33c DUP1
0x33d SLOAD
0x33e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x353 NOT
0x354 AND
0x355 DUP2
0x356 SSTORE
0x357 PUSH1 0x0
0x359 PUSH1 0x1
0x35b SWAP2
0x35c SWAP1
0x35d SWAP2
0x35e ADD
0x35f SWAP1
0x360 DUP2
0x361 SSTORE
0x362 PUSH2 0x333
0x365 JUMP
---
0x33d: V298 = S[S0]
0x33e: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x353: V300 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x354: V301 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V298
0x356: S[S0] = V301
0x357: V302 = 0x0
0x359: V303 = 0x1
0x35e: V304 = ADD 0x1 S0
0x361: S[V304] = 0x0
0x362: V305 = 0x333
0x365: JUMP 0x333
---
Entry stack: [V10, 0x1db, V275, 0x60, 0x6, V278, 0x6, V280, 0x1dd, V292, S0]
Stack pops: 1
Stack additions: [V304]
Exit stack: [V10, 0x1db, V275, 0x60, 0x6, V278, 0x6, V280, 0x1dd, V292, V304]

================================

Block 0x366
[0x366:0x369]
---
Predecessors: [0x333]
Successors: [0x1dd]
---
0x366 JUMPDEST
0x367 POP
0x368 SWAP1
0x369 JUMP
---
0x366: JUMPDEST 
0x369: JUMP 0x1dd
---
Entry stack: [V10, 0x1db, V275, 0x60, 0x6, V278, 0x6, V280, 0x1dd, V292, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x1db, V275, 0x60, 0x6, V278, 0x6, V280, V292]

================================

Block 0x36a
[0x36a:0x373]
---
Predecessors: [0x11f, 0x14c, 0x155, 0x15e]
Successors: []
---
0x36a JUMPDEST
0x36b PUSH1 0x60
0x36d SWAP1
0x36e DUP2
0x36f MSTORE
0x370 PUSH1 0x20
0x372 SWAP1
0x373 RETURN
---
0x36a: JUMPDEST 
0x36b: V306 = 0x60
0x36f: M[0x60] = S0
0x370: V307 = 0x20
0x373: RETURN 0x60 0x20
---
Entry stack: [V10, 0x36a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x36a]

================================

Block 0x374
[0x374:0x386]
---
Predecessors: [0x128, 0x13a]
Successors: []
---
0x374 JUMPDEST
0x375 PUSH1 0x1
0x377 PUSH1 0xa0
0x379 PUSH1 0x2
0x37b EXP
0x37c SUB
0x37d AND
0x37e PUSH1 0x60
0x380 SWAP1
0x381 DUP2
0x382 MSTORE
0x383 PUSH1 0x20
0x385 SWAP1
0x386 RETURN
---
0x374: JUMPDEST 
0x375: V308 = 0x1
0x377: V309 = 0xa0
0x379: V310 = 0x2
0x37b: V311 = EXP 0x2 0xa0
0x37c: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37d: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x37e: V314 = 0x60
0x382: M[0x60] = V313
0x383: V315 = 0x20
0x386: RETURN 0x60 0x20
---
Entry stack: [V10, 0x374, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x374]

================================

Block 0x387
[0x387:0x393]
---
Predecessors: [0x17b]
Successors: []
---
0x387 JUMPDEST
0x388 PUSH1 0x60
0x38a SWAP2
0x38b DUP3
0x38c MSTORE
0x38d PUSH1 0x80
0x38f MSTORE
0x390 PUSH1 0x40
0x392 SWAP1
0x393 RETURN
---
0x387: JUMPDEST 
0x388: V316 = 0x60
0x38c: M[0x60] = V154
0x38d: V317 = 0x80
0x38f: M[0x80] = V148
0x390: V318 = 0x40
0x393: RETURN 0x60 0x40
---
Entry stack: [V10, 0x387, V154, V148]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x387]

================================

Block 0x394
[0x394:0x3b5]
---
Predecessors: [0x92]
Successors: [0x3b6]
---
0x394 JUMPDEST
0x395 PUSH1 0x60
0x397 DUP2
0x398 DUP2
0x399 MSTORE
0x39a PUSH1 0xb
0x39c PUSH1 0x80
0x39e MSTORE
0x39f PUSH1 0xa0
0x3a1 DUP3
0x3a2 SWAP1
0x3a3 MSTORE
0x3a4 PUSH1 0x0
0x3a6 DUP1
0x3a7 MLOAD
0x3a8 PUSH1 0x20
0x3aa PUSH2 0x50b
0x3ad DUP4
0x3ae CODECOPY
0x3af DUP2
0x3b0 MLOAD
0x3b1 SWAP2
0x3b2 MSTORE
0x3b3 SWAP1
0x3b4 DUP1
0x3b5 LOG1
---
0x394: JUMPDEST 
0x395: V319 = 0x60
0x399: M[0x60] = 0x0
0x39a: V320 = 0xb
0x39c: V321 = 0x80
0x39e: M[0x80] = 0xb
0x39f: V322 = 0xa0
0x3a3: M[0xa0] = 0x0
0x3a4: V323 = 0x0
0x3a7: V324 = M[0x0]
0x3a8: V325 = 0x20
0x3aa: V326 = 0x50b
0x3ae: CODECOPY 0x0 0x50b 0x20
0x3b0: V327 = M[0x0]
0x3b2: M[0x0] = V324
0x3b5: LOG 0x60 0x60 V327
---
Entry stack: [V10, 0x1db, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1db, 0x0]

================================

Block 0x3b6
[0x3b6:0x3c0]
---
Predecessors: [0x394, 0x4b2]
Successors: [0xe9, 0x3c1]
---
0x3b6 JUMPDEST
0x3b7 PUSH1 0x6
0x3b9 SLOAD
0x3ba DUP2
0x3bb LT
0x3bc ISZERO
0x3bd PUSH2 0xe9
0x3c0 JUMPI
---
0x3b6: JUMPDEST 
0x3b7: V328 = 0x6
0x3b9: V329 = S[0x6]
0x3bb: V330 = LT S0 V329
0x3bc: V331 = ISZERO V330
0x3bd: V332 = 0xe9
0x3c0: JUMPI 0xe9 V331
---
Entry stack: [V10, 0x1db, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1db, S0]

================================

Block 0x3c1
[0x3c1:0x3cd]
---
Predecessors: [0x3b6]
Successors: [0x3ce]
---
0x3c1 PUSH1 0x6
0x3c3 DUP1
0x3c4 SLOAD
0x3c5 DUP3
0x3c6 SWAP1
0x3c7 DUP2
0x3c8 LT
0x3c9 ISZERO
0x3ca PUSH2 0x2
0x3cd JUMPI
---
0x3c1: V333 = 0x6
0x3c4: V334 = S[0x6]
0x3c8: V335 = LT S0 V334
0x3c9: V336 = ISZERO V335
0x3ca: V337 = 0x2
0x3cd: THROWI V336
---
Entry stack: [V10, 0x1db, S0]
Stack pops: 1
Stack additions: [S0, 0x6, S0]
Exit stack: [V10, 0x1db, S0, 0x6, S0]

================================

Block 0x3ce
[0x3ce:0x415]
---
Predecessors: [0x3c1]
Successors: [0x416]
---
0x3ce PUSH1 0x0
0x3d0 SWAP2
0x3d1 DUP3
0x3d2 MSTORE
0x3d3 PUSH1 0x2
0x3d5 MUL
0x3d6 PUSH32 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f
0x3f7 ADD
0x3f8 SWAP1
0x3f9 SWAP1
0x3fa SLOAD
0x3fb PUSH1 0x6
0x3fd DUP1
0x3fe SLOAD
0x3ff PUSH1 0x1
0x401 PUSH1 0xa0
0x403 PUSH1 0x2
0x405 EXP
0x406 SUB
0x407 SWAP3
0x408 SWAP1
0x409 SWAP3
0x40a AND
0x40b SWAP3
0x40c SWAP2
0x40d DUP5
0x40e SWAP1
0x40f DUP2
0x410 LT
0x411 ISZERO
0x412 PUSH2 0x2
0x415 JUMPI
---
0x3ce: V338 = 0x0
0x3d2: M[0x0] = 0x6
0x3d3: V339 = 0x2
0x3d5: V340 = MUL 0x2 S0
0x3d6: V341 = 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f
0x3f7: V342 = ADD 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f V340
0x3fa: V343 = S[V342]
0x3fb: V344 = 0x6
0x3fe: V345 = S[0x6]
0x3ff: V346 = 0x1
0x401: V347 = 0xa0
0x403: V348 = 0x2
0x405: V349 = EXP 0x2 0xa0
0x406: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40a: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V343
0x410: V352 = LT S2 V345
0x411: V353 = ISZERO V352
0x412: V354 = 0x2
0x415: THROWI V353
---
Entry stack: [V10, 0x1db, S2, 0x6, S0]
Stack pops: 3
Stack additions: [S2, V351, 0x0, 0x6, S2]
Exit stack: [V10, 0x1db, S2, V351, 0x0, 0x6, S2]

================================

Block 0x416
[0x416:0x46d]
---
Predecessors: [0x3ce]
Successors: [0x46e]
---
0x416 PUSH1 0x2
0x418 MUL
0x419 PUSH32 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40
0x43a ADD
0x43b SLOAD
0x43c PUSH1 0x40
0x43e MLOAD
0x43f SWAP1
0x440 SWAP2
0x441 POP
0x442 DUP3
0x443 DUP2
0x444 DUP2
0x445 DUP2
0x446 DUP6
0x447 DUP9
0x448 DUP4
0x449 CALL
0x44a SWAP4
0x44b POP
0x44c POP
0x44d POP
0x44e POP
0x44f POP
0x450 PUSH1 0x0
0x452 DUP1
0x453 MLOAD
0x454 PUSH1 0x20
0x456 PUSH2 0x50b
0x459 DUP4
0x45a CODECOPY
0x45b DUP2
0x45c MLOAD
0x45d SWAP2
0x45e MSTORE
0x45f PUSH1 0x6
0x461 PUSH1 0x0
0x463 POP
0x464 DUP3
0x465 DUP2
0x466 SLOAD
0x467 DUP2
0x468 LT
0x469 ISZERO
0x46a PUSH2 0x2
0x46d JUMPI
---
0x416: V355 = 0x2
0x418: V356 = MUL 0x2 S0
0x419: V357 = 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40
0x43a: V358 = ADD 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40 V356
0x43b: V359 = S[V358]
0x43c: V360 = 0x40
0x43e: V361 = M[0x40]
0x449: V362 = CALL 0x0 V351 V359 V361 0x0 V361 0x0
0x450: V363 = 0x0
0x453: V364 = M[0x0]
0x454: V365 = 0x20
0x456: V366 = 0x50b
0x45a: CODECOPY 0x0 0x50b 0x20
0x45c: V367 = M[0x0]
0x45e: M[0x0] = V364
0x45f: V368 = 0x6
0x461: V369 = 0x0
0x466: V370 = S[0x6]
0x468: V371 = LT S4 V370
0x469: V372 = ISZERO V371
0x46a: V373 = 0x2
0x46d: THROWI V372
---
Entry stack: [V10, 0x1db, S4, V351, 0x0, 0x6, S0]
Stack pops: 5
Stack additions: [S4, V367, 0x6, S4]
Exit stack: [V10, 0x1db, S4, V367, 0x6, S4]

================================

Block 0x46e
[0x46e:0x4b1]
---
Predecessors: [0x416]
Successors: [0x4b2]
---
0x46e PUSH1 0x0
0x470 DUP3
0x471 SWAP1
0x472 MSTORE
0x473 PUSH1 0x2
0x475 MUL
0x476 PUSH32 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f
0x497 ADD
0x498 SLOAD
0x499 DUP2
0x49a SLOAD
0x49b PUSH1 0x1
0x49d PUSH1 0xa0
0x49f PUSH1 0x2
0x4a1 EXP
0x4a2 SUB
0x4a3 SWAP2
0x4a4 SWAP1
0x4a5 SWAP2
0x4a6 AND
0x4a7 SWAP2
0x4a8 SWAP1
0x4a9 DUP5
0x4aa SWAP1
0x4ab DUP2
0x4ac LT
0x4ad ISZERO
0x4ae PUSH2 0x2
0x4b1 JUMPI
---
0x46e: V374 = 0x0
0x472: M[0x0] = 0x6
0x473: V375 = 0x2
0x475: V376 = MUL 0x2 S0
0x476: V377 = 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f
0x497: V378 = ADD 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f V376
0x498: V379 = S[V378]
0x49a: V380 = S[0x6]
0x49b: V381 = 0x1
0x49d: V382 = 0xa0
0x49f: V383 = 0x2
0x4a1: V384 = EXP 0x2 0xa0
0x4a2: V385 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a6: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x4ac: V387 = LT S3 V380
0x4ad: V388 = ISZERO V387
0x4ae: V389 = 0x2
0x4b1: THROWI V388
---
Entry stack: [V10, 0x1db, S3, V367, 0x6, S0]
Stack pops: 4
Stack additions: [S3, S2, V386, S1, S3]
Exit stack: [V10, 0x1db, S3, V367, V386, 0x6, S3]

================================

Block 0x4b2
[0x4b2:0x50a]
---
Predecessors: [0x46e]
Successors: [0x3b6]
---
0x4b2 PUSH1 0x2
0x4b4 MUL
0x4b5 PUSH32 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40
0x4d6 ADD
0x4d7 SLOAD
0x4d8 PUSH1 0x40
0x4da DUP1
0x4db MLOAD
0x4dc PUSH1 0x1
0x4de PUSH1 0xa0
0x4e0 PUSH1 0x2
0x4e2 EXP
0x4e3 SUB
0x4e4 SWAP5
0x4e5 SWAP1
0x4e6 SWAP5
0x4e7 AND
0x4e8 DUP5
0x4e9 MSTORE
0x4ea PUSH1 0x20
0x4ec DUP5
0x4ed ADD
0x4ee SWAP2
0x4ef SWAP1
0x4f0 SWAP2
0x4f1 MSTORE
0x4f2 PUSH1 0x0
0x4f4 DUP4
0x4f5 DUP3
0x4f6 ADD
0x4f7 MSTORE
0x4f8 MLOAD
0x4f9 SWAP2
0x4fa DUP3
0x4fb SWAP1
0x4fc SUB
0x4fd PUSH1 0x60
0x4ff ADD
0x500 SWAP2
0x501 SWAP1
0x502 POP
0x503 LOG1
0x504 PUSH1 0x1
0x506 ADD
0x507 PUSH2 0x3b6
0x50a JUMP
---
0x4b2: V390 = 0x2
0x4b4: V391 = MUL 0x2 S0
0x4b5: V392 = 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40
0x4d6: V393 = ADD 0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40 V391
0x4d7: V394 = S[V393]
0x4d8: V395 = 0x40
0x4db: V396 = M[0x40]
0x4dc: V397 = 0x1
0x4de: V398 = 0xa0
0x4e0: V399 = 0x2
0x4e2: V400 = EXP 0x2 0xa0
0x4e3: V401 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e7: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V386
0x4e9: M[V396] = V402
0x4ea: V403 = 0x20
0x4ed: V404 = ADD V396 0x20
0x4f1: M[V404] = V394
0x4f2: V405 = 0x0
0x4f6: V406 = ADD 0x40 V396
0x4f7: M[V406] = 0x0
0x4f8: V407 = M[0x40]
0x4fc: V408 = SUB V396 V407
0x4fd: V409 = 0x60
0x4ff: V410 = ADD 0x60 V408
0x503: LOG V407 V410 V367
0x504: V411 = 0x1
0x506: V412 = ADD 0x1 S4
0x507: V413 = 0x3b6
0x50a: JUMP 0x3b6
---
Entry stack: [V10, 0x1db, S4, V367, V386, 0x6, S0]
Stack pops: 5
Stack additions: [V412]
Exit stack: [V10, 0x1db, V412]

================================

Block 0x50b
[0x50b:0x52a]
---
Predecessors: []
Successors: []
---
0x50b MISSING 0xe8
0x50c TIMESTAMP
0x50d MISSING 0xae
0x50e MISSING 0xa7
0x50f MISSING 0xa5
0x510 CALL
0x511 MISSING 0xb0
0x512 LT
0x513 MISSING 0x49
0x514 MISSING 0xd7
0x515 MSTORE
0x516 STOP
0x517 DUP13
0x518 MSTORE8
0x519 MISSING 0xc5
0x51a MISSING 0x28
0x51b SWAP1
0x51c MISSING 0xb1
0x51d MISSING 0xa6
0x51e MISSING 0xda
0x51f MISSING 0xf6
0x520 PUSH1 0xcf
0x522 CODECOPY
0x523 MISSING 0xe8
0x524 MISSING 0xee
0x525 MISSING 0xc5
0x526 MOD
0x527 GT
0x528 MISSING 0x2b
0x529 MISSING 0xbd
0x52a MISSING 0xf6
---
0x50b: MISSING 0xe8
0x50c: V414 = TIMESTAMP
0x50d: MISSING 0xae
0x50e: MISSING 0xa7
0x50f: MISSING 0xa5
0x510: V415 = CALL S0 S1 S2 S3 S4 S5 S6
0x511: MISSING 0xb0
0x512: V416 = LT S0 S1
0x513: MISSING 0x49
0x514: MISSING 0xd7
0x515: M[S0] = S1
0x516: STOP 
0x518: M8[S12] = S0
0x519: MISSING 0xc5
0x51a: MISSING 0x28
0x51c: MISSING 0xb1
0x51d: MISSING 0xa6
0x51e: MISSING 0xda
0x51f: MISSING 0xf6
0x520: V417 = 0xcf
0x522: CODECOPY 0xcf S0 S1
0x523: MISSING 0xe8
0x524: MISSING 0xee
0x525: MISSING 0xc5
0x526: V418 = MOD S0 S1
0x527: V419 = GT V418 S2
0x528: MISSING 0x2b
0x529: MISSING 0xbd
0x52a: MISSING 0xf6
---
Entry stack: []
Stack pops: 0
Stack additions: [V414, V415, V416, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S1, S0, V419]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x82
Exit block: 0x1db
Body: 0x82, 0x92, 0x9e, 0xe9, 0x1db, 0x2e9, 0x394, 0x3b6, 0x3c1, 0x3ce, 0x416, 0x46e, 0x4b2

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x11f
Exit block: 0x36a
Body: 0x11f, 0x36a

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x128
Exit block: 0x374
Body: 0x128, 0x374

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x13a
Exit block: 0x374
Body: 0x13a, 0x374

Function 4:
Public function signature: 0x7a3a0e84
Entry block: 0x14c
Exit block: 0x36a
Body: 0x14c, 0x36a

Function 5:
Public function signature: 0x7b3e5e7b
Entry block: 0x155
Exit block: 0x36a
Body: 0x155, 0x36a

Function 6:
Public function signature: 0xa035b1fe
Entry block: 0x15e
Exit block: 0x36a
Body: 0x15e, 0x36a

Function 7:
Public function signature: 0xdc0d3dff
Entry block: 0x167
Exit block: 0x387
Body: 0x167, 0x17b, 0x387

Function 8:
Public fallback function
Entry block: 0x6c
Exit block: 0x1db
Body: 0x6c, 0x7e, 0x1db, 0x1dd, 0x1ea, 0x2ae, 0x2e9, 0x2ec, 0x319, 0x333, 0x33c, 0x366

