Block 0x0
[0x0:0x18]
---
Predecessors: []
Successors: [0x19, 0x3c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0xe0
0x7 PUSH1 0x2
0x9 EXP
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd DIV
0xe PUSH4 0x17c51080
0x13 DUP2
0x14 EQ
0x15 PUSH2 0x3c
0x18 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xe0
0x7: V3 = 0x2
0x9: V4 = EXP 0x2 0xe0
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0xe: V8 = 0x17c51080
0x14: V9 = EQ V7 0x17c51080
0x15: V10 = 0x3c
0x18: JUMPI 0x3c V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x19
[0x19:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0x5f]
---
0x19 DUP1
0x1a PUSH4 0x52774565
0x1f EQ
0x20 PUSH2 0x5f
0x23 JUMPI
---
0x1a: V11 = 0x52774565
0x1f: V12 = EQ 0x52774565 V7
0x20: V13 = 0x5f
0x23: JUMPI 0x5f V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0x19]
Successors: [0x2f, 0x80]
---
0x24 DUP1
0x25 PUSH4 0xc2052403
0x2a EQ
0x2b PUSH2 0x80
0x2e JUMPI
---
0x25: V14 = 0xc2052403
0x2a: V15 = EQ 0xc2052403 V7
0x2b: V16 = 0x80
0x2e: JUMPI 0x80 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x2f
[0x2f:0x39]
---
Predecessors: [0x24]
Successors: [0x3a, 0xec]
---
0x2f DUP1
0x30 PUSH4 0xdf78c1dd
0x35 EQ
0x36 PUSH2 0xec
0x39 JUMPI
---
0x30: V17 = 0xdf78c1dd
0x35: V18 = EQ 0xdf78c1dd V7
0x36: V19 = 0xec
0x39: JUMPI 0xec V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x3a
[0x3a:0x3b]
---
Predecessors: [0x2f]
Successors: []
---
0x3a JUMPDEST
0x3b STOP
---
0x3a: JUMPDEST 
0x3b: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x3c
[0x3c:0x5b]
---
Predecessors: [0x0]
Successors: [0x5c]
---
0x3c JUMPDEST
0x3d PUSH2 0x11f
0x40 PUSH1 0x1
0x42 PUSH1 0xa0
0x44 PUSH1 0x2
0x46 EXP
0x47 SUB
0x48 CALLER
0x49 AND
0x4a PUSH1 0x0
0x4c SWAP1
0x4d DUP2
0x4e MSTORE
0x4f PUSH1 0x20
0x51 DUP2
0x52 SWAP1
0x53 MSTORE
0x54 PUSH1 0x40
0x56 SWAP1
0x57 SHA3
0x58 PUSH1 0x1
0x5a ADD
0x5b SLOAD
---
0x3c: JUMPDEST 
0x3d: V20 = 0x11f
0x40: V21 = 0x1
0x42: V22 = 0xa0
0x44: V23 = 0x2
0x46: V24 = EXP 0x2 0xa0
0x47: V25 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48: V26 = CALLER
0x49: V27 = AND V26 0xffffffffffffffffffffffffffffffffffffffff
0x4a: V28 = 0x0
0x4e: M[0x0] = V27
0x4f: V29 = 0x20
0x53: M[0x20] = 0x0
0x54: V30 = 0x40
0x57: V31 = SHA3 0x0 0x40
0x58: V32 = 0x1
0x5a: V33 = ADD 0x1 V31
0x5b: V34 = S[V33]
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x11f, V34]
Exit stack: [V7, 0x11f, V34]

================================

Block 0x5c
[0x5c:0x5e]
---
Predecessors: [0x3c, 0x5f, 0xb9, 0x18d]
Successors: [0x11f, 0x15e]
---
0x5c JUMPDEST
0x5d SWAP1
0x5e JUMP
---
0x5c: JUMPDEST 
0x5e: JUMP {0x11f, 0x15e}
---
Entry stack: [V7, 0x11f, V92, 0x0, S2, {0x11f, 0x15e}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, 0x11f, V92, 0x0, S2, S0]

================================

Block 0x5f
[0x5f:0x7f]
---
Predecessors: [0x19]
Successors: [0x5c]
---
0x5f JUMPDEST
0x60 PUSH2 0x11f
0x63 PUSH1 0x1
0x65 PUSH1 0xa0
0x67 PUSH1 0x2
0x69 EXP
0x6a SUB
0x6b CALLER
0x6c AND
0x6d PUSH1 0x0
0x6f SWAP1
0x70 DUP2
0x71 MSTORE
0x72 PUSH1 0x20
0x74 DUP2
0x75 SWAP1
0x76 MSTORE
0x77 PUSH1 0x40
0x79 SWAP1
0x7a SHA3
0x7b SLOAD
0x7c PUSH2 0x5c
0x7f JUMP
---
0x5f: JUMPDEST 
0x60: V35 = 0x11f
0x63: V36 = 0x1
0x65: V37 = 0xa0
0x67: V38 = 0x2
0x69: V39 = EXP 0x2 0xa0
0x6a: V40 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b: V41 = CALLER
0x6c: V42 = AND V41 0xffffffffffffffffffffffffffffffffffffffff
0x6d: V43 = 0x0
0x71: M[0x0] = V42
0x72: V44 = 0x20
0x76: M[0x20] = 0x0
0x77: V45 = 0x40
0x7a: V46 = SHA3 0x0 0x40
0x7b: V47 = S[V46]
0x7c: V48 = 0x5c
0x7f: JUMP 0x5c
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x11f, V47]
Exit stack: [V7, 0x11f, V47]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x24]
Successors: [0x84]
---
0x80 JUMPDEST
0x81 PUSH2 0x11f
---
0x80: JUMPDEST 
0x81: V49 = 0x11f
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x11f]
Exit stack: [V7, 0x11f]

================================

Block 0x84
[0x84:0xa6]
---
Predecessors: [0x80, 0x117]
Successors: [0xa7, 0xb3]
---
0x84 JUMPDEST
0x85 PUSH1 0x40
0x87 PUSH1 0x0
0x89 SWAP1
0x8a DUP2
0x8b SHA3
0x8c PUSH1 0x1
0x8e PUSH1 0xa0
0x90 PUSH1 0x2
0x92 EXP
0x93 SUB
0x94 CALLER
0x95 AND
0x96 DUP3
0x97 MSTORE
0x98 PUSH1 0x20
0x9a DUP3
0x9b SWAP1
0x9c MSTORE
0x9d SLOAD
0x9e DUP2
0x9f EQ
0xa0 DUP1
0xa1 ISZERO
0xa2 SWAP1
0xa3 PUSH2 0xb3
0xa6 JUMPI
---
0x84: JUMPDEST 
0x85: V50 = 0x40
0x87: V51 = 0x0
0x8b: V52 = SHA3 0x0 0x40
0x8c: V53 = 0x1
0x8e: V54 = 0xa0
0x90: V55 = 0x2
0x92: V56 = EXP 0x2 0xa0
0x93: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94: V58 = CALLER
0x95: V59 = AND V58 0xffffffffffffffffffffffffffffffffffffffff
0x97: M[0x0] = V59
0x98: V60 = 0x20
0x9c: M[0x20] = 0x0
0x9d: V61 = S[V52]
0x9f: V62 = EQ 0x0 V61
0xa1: V63 = ISZERO V62
0xa3: V64 = 0xb3
0xa6: JUMPI 0xb3 V62
---
Entry stack: [V7, 0x11f, V92, 0x0, S1, {0x11f, 0x15e}]
Stack pops: 0
Stack additions: [0x0, V63]
Exit stack: [V7, 0x11f, V92, 0x0, S1, {0x11f, 0x15e}, 0x0, V63]

================================

Block 0xa7
[0xa7:0xb2]
---
Predecessors: [0x84]
Successors: [0xb3]
---
0xa7 POP
0xa8 PUSH1 0x40
0xaa DUP2
0xab SHA3
0xac PUSH1 0x1
0xae ADD
0xaf SLOAD
0xb0 TIMESTAMP
0xb1 SWAP1
0xb2 LT
---
0xa8: V65 = 0x40
0xab: V66 = SHA3 0x0 0x40
0xac: V67 = 0x1
0xae: V68 = ADD 0x1 V66
0xaf: V69 = S[V68]
0xb0: V70 = TIMESTAMP
0xb2: V71 = LT V69 V70
---
Entry stack: [V7, 0x11f, V92, 0x0, S3, {0x11f, 0x15e}, 0x0, V63]
Stack pops: 2
Stack additions: [S1, V71]
Exit stack: [V7, 0x11f, V92, 0x0, S3, {0x11f, 0x15e}, 0x0, V71]

================================

Block 0xb3
[0xb3:0xb8]
---
Predecessors: [0x84, 0xa7]
Successors: [0xb9, 0x18d]
---
0xb3 JUMPDEST
0xb4 ISZERO
0xb5 PUSH2 0x18d
0xb8 JUMPI
---
0xb3: JUMPDEST 
0xb4: V72 = ISZERO S0
0xb5: V73 = 0x18d
0xb8: JUMPI 0x18d V72
---
Entry stack: [V7, 0x11f, V92, 0x0, S3, {0x11f, 0x15e}, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x11f, V92, 0x0, S3, {0x11f, 0x15e}, 0x0]

================================

Block 0xb9
[0xb9:0xeb]
---
Predecessors: [0xb3]
Successors: [0x5c]
---
0xb9 PUSH1 0x1
0xbb PUSH1 0xa0
0xbd PUSH1 0x2
0xbf EXP
0xc0 SUB
0xc1 CALLER
0xc2 AND
0xc3 PUSH1 0x0
0xc5 DUP2
0xc6 DUP2
0xc7 MSTORE
0xc8 PUSH1 0x20
0xca DUP2
0xcb SWAP1
0xcc MSTORE
0xcd PUSH1 0x40
0xcf DUP1
0xd0 MLOAD
0xd1 SWAP1
0xd2 DUP3
0xd3 SHA3
0xd4 SLOAD
0xd5 SWAP1
0xd6 DUP3
0xd7 DUP2
0xd8 DUP2
0xd9 DUP2
0xda DUP6
0xdb DUP9
0xdc DUP4
0xdd CALL
0xde SWAP4
0xdf POP
0xe0 POP
0xe1 POP
0xe2 POP
0xe3 POP
0xe4 PUSH1 0x1
0xe6 SWAP1
0xe7 POP
0xe8 PUSH2 0x5c
0xeb JUMP
---
0xb9: V74 = 0x1
0xbb: V75 = 0xa0
0xbd: V76 = 0x2
0xbf: V77 = EXP 0x2 0xa0
0xc0: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1: V79 = CALLER
0xc2: V80 = AND V79 0xffffffffffffffffffffffffffffffffffffffff
0xc3: V81 = 0x0
0xc7: M[0x0] = V80
0xc8: V82 = 0x20
0xcc: M[0x20] = 0x0
0xcd: V83 = 0x40
0xd0: V84 = M[0x40]
0xd3: V85 = SHA3 0x0 0x40
0xd4: V86 = S[V85]
0xdd: V87 = CALL 0x0 V80 V86 V84 0x0 V84 0x0
0xe4: V88 = 0x1
0xe8: V89 = 0x5c
0xeb: JUMP 0x5c
---
Entry stack: [V7, 0x11f, V92, 0x0, S2, {0x11f, 0x15e}, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V7, 0x11f, V92, 0x0, S2, {0x11f, 0x15e}, 0x1]

================================

Block 0xec
[0xec:0x116]
---
Predecessors: [0x2f]
Successors: [0x117, 0x160]
---
0xec JUMPDEST
0xed PUSH2 0x11f
0xf0 PUSH1 0x4
0xf2 CALLDATALOAD
0xf3 PUSH1 0x1
0xf5 PUSH1 0xa0
0xf7 PUSH1 0x2
0xf9 EXP
0xfa SUB
0xfb CALLER
0xfc AND
0xfd PUSH1 0x0
0xff SWAP1
0x100 DUP2
0x101 MSTORE
0x102 PUSH1 0x20
0x104 DUP2
0x105 SWAP1
0x106 MSTORE
0x107 PUSH1 0x40
0x109 DUP2
0x10a SHA3
0x10b SLOAD
0x10c CALLVALUE
0x10d SWAP1
0x10e DUP3
0x10f EQ
0x110 DUP1
0x111 ISZERO
0x112 SWAP1
0x113 PUSH2 0x160
0x116 JUMPI
---
0xec: JUMPDEST 
0xed: V90 = 0x11f
0xf0: V91 = 0x4
0xf2: V92 = CALLDATALOAD 0x4
0xf3: V93 = 0x1
0xf5: V94 = 0xa0
0xf7: V95 = 0x2
0xf9: V96 = EXP 0x2 0xa0
0xfa: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfb: V98 = CALLER
0xfc: V99 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V100 = 0x0
0x101: M[0x0] = V99
0x102: V101 = 0x20
0x106: M[0x20] = 0x0
0x107: V102 = 0x40
0x10a: V103 = SHA3 0x0 0x40
0x10b: V104 = S[V103]
0x10c: V105 = CALLVALUE
0x10f: V106 = EQ 0x0 V104
0x111: V107 = ISZERO V106
0x113: V108 = 0x160
0x116: JUMPI 0x160 V106
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x11f, V92, 0x0, V105, V107]
Exit stack: [V7, 0x11f, V92, 0x0, V105, V107]

================================

Block 0x117
[0x117:0x11e]
---
Predecessors: [0xec]
Successors: [0x84]
---
0x117 POP
0x118 PUSH2 0x15e
0x11b PUSH2 0x84
0x11e JUMP
---
0x118: V109 = 0x15e
0x11b: V110 = 0x84
0x11e: JUMP 0x84
---
Entry stack: [V7, 0x11f, V92, 0x0, V105, V107]
Stack pops: 1
Stack additions: [0x15e]
Exit stack: [V7, 0x11f, V92, 0x0, V105, 0x15e]

================================

Block 0x11f
[0x11f:0x130]
---
Predecessors: [0x5c, 0x158]
Successors: []
---
0x11f JUMPDEST
0x120 PUSH1 0x40
0x122 DUP1
0x123 MLOAD
0x124 SWAP2
0x125 DUP3
0x126 MSTORE
0x127 MLOAD
0x128 SWAP1
0x129 DUP2
0x12a SWAP1
0x12b SUB
0x12c PUSH1 0x20
0x12e ADD
0x12f SWAP1
0x130 RETURN
---
0x11f: JUMPDEST 
0x120: V111 = 0x40
0x123: V112 = M[0x40]
0x126: M[V112] = S0
0x127: V113 = M[0x40]
0x12b: V114 = SUB V112 V113
0x12c: V115 = 0x20
0x12e: V116 = ADD 0x20 V114
0x130: RETURN V113 V116
---
Entry stack: [V7, 0x11f, V92, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x11f, V92, 0x0, S1]

================================

Block 0x131
[0x131:0x157]
---
Predecessors: [0x160]
Successors: [0x158]
---
0x131 JUMPDEST
0x132 PUSH1 0x1
0x134 PUSH1 0xa0
0x136 PUSH1 0x2
0x138 EXP
0x139 SUB
0x13a CALLER
0x13b AND
0x13c PUSH1 0x0
0x13e SWAP1
0x13f DUP2
0x140 MSTORE
0x141 PUSH1 0x20
0x143 DUP2
0x144 SWAP1
0x145 MSTORE
0x146 PUSH1 0x40
0x148 SWAP1
0x149 SHA3
0x14a DUP2
0x14b DUP2
0x14c SSTORE
0x14d TIMESTAMP
0x14e DUP5
0x14f ADD
0x150 PUSH1 0x1
0x152 SWAP2
0x153 DUP3
0x154 ADD
0x155 SSTORE
0x156 SWAP2
0x157 POP
---
0x131: JUMPDEST 
0x132: V117 = 0x1
0x134: V118 = 0xa0
0x136: V119 = 0x2
0x138: V120 = EXP 0x2 0xa0
0x139: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13a: V122 = CALLER
0x13b: V123 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x13c: V124 = 0x0
0x140: M[0x0] = V123
0x141: V125 = 0x20
0x145: M[0x20] = 0x0
0x146: V126 = 0x40
0x149: V127 = SHA3 0x0 0x40
0x14c: S[V127] = S0
0x14d: V128 = TIMESTAMP
0x14f: V129 = ADD V92 V128
0x150: V130 = 0x1
0x154: V131 = ADD 0x1 V127
0x155: S[V131] = V129
---
Entry stack: [V7, 0x11f, V92, 0x0, S0]
Stack pops: 3
Stack additions: [S2, 0x1, S0]
Exit stack: [V7, 0x11f, V92, 0x1, S0]

================================

Block 0x158
[0x158:0x15d]
---
Predecessors: [0x131, 0x166]
Successors: [0x11f]
---
0x158 JUMPDEST
0x159 POP
0x15a SWAP2
0x15b SWAP1
0x15c POP
0x15d JUMP
---
0x158: JUMPDEST 
0x15d: JUMP 0x11f
---
Entry stack: [V7, 0x11f, V92, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V7, {0x0, 0x1}]

================================

Block 0x15e
[0x15e:0x15f]
---
Predecessors: [0x5c]
Successors: [0x160]
---
0x15e JUMPDEST
0x15f ISZERO
---
0x15e: JUMPDEST 
0x15f: V132 = ISZERO S0
---
Entry stack: [V7, 0x11f, V92, 0x0, S1, S0]
Stack pops: 1
Stack additions: [V132]
Exit stack: [V7, 0x11f, V92, 0x0, S1, V132]

================================

Block 0x160
[0x160:0x165]
---
Predecessors: [0xec, 0x15e]
Successors: [0x131, 0x166]
---
0x160 JUMPDEST
0x161 ISZERO
0x162 PUSH2 0x131
0x165 JUMPI
---
0x160: JUMPDEST 
0x161: V133 = ISZERO S0
0x162: V134 = 0x131
0x165: JUMPI 0x131 V133
---
Entry stack: [V7, 0x11f, V92, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x11f, V92, 0x0, S1]

================================

Block 0x166
[0x166:0x18c]
---
Predecessors: [0x160]
Successors: [0x158]
---
0x166 PUSH1 0x40
0x168 MLOAD
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 CALLER
0x172 AND
0x173 SWAP1
0x174 PUSH1 0x0
0x176 SWAP1
0x177 DUP4
0x178 SWAP1
0x179 DUP3
0x17a DUP2
0x17b DUP2
0x17c DUP2
0x17d DUP6
0x17e DUP9
0x17f DUP4
0x180 CALL
0x181 POP
0x182 SWAP2
0x183 SWAP5
0x184 POP
0x185 PUSH2 0x158
0x188 SWAP3
0x189 POP
0x18a POP
0x18b POP
0x18c JUMP
---
0x166: V135 = 0x40
0x168: V136 = M[0x40]
0x169: V137 = 0x1
0x16b: V138 = 0xa0
0x16d: V139 = 0x2
0x16f: V140 = EXP 0x2 0xa0
0x170: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V142 = CALLER
0x172: V143 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x174: V144 = 0x0
0x180: V145 = CALL 0x0 V143 S0 V136 0x0 V136 0x0
0x185: V146 = 0x158
0x18c: JUMP 0x158
---
Entry stack: [V7, 0x11f, V92, 0x0, S0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V7, 0x11f, V92, 0x0, S0]

================================

Block 0x18d
[0x18d:0x194]
---
Predecessors: [0xb3]
Successors: [0x5c]
---
0x18d JUMPDEST
0x18e POP
0x18f PUSH1 0x1
0x191 PUSH2 0x5c
0x194 JUMP
---
0x18d: JUMPDEST 
0x18f: V147 = 0x1
0x191: V148 = 0x5c
0x194: JUMP 0x5c
---
Entry stack: [V7, 0x11f, V92, 0x0, S2, {0x11f, 0x15e}, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V7, 0x11f, V92, 0x0, S2, {0x11f, 0x15e}, 0x1]

================================

Function 0:
Public function signature: 0x17c51080
Entry block: 0x3c
Exit block: 0x11f
Body: 0x3c, 0x11f

Function 1:
Public function signature: 0x52774565
Entry block: 0x5f
Exit block: 0x11f
Body: 0x5f, 0x11f

Function 2:
Public function signature: 0xc2052403
Entry block: 0x80
Exit block: 0x11f
Body: 0x80, 0x84, 0xa7, 0xb3, 0xb9, 0x11f, 0x18d

Function 3:
Public function signature: 0xdf78c1dd
Entry block: 0xec
Exit block: 0x11f
Body: 0x84, 0xa7, 0xb3, 0xb9, 0xec, 0x117, 0x11f, 0x18d

Function 4:
Public fallback function
Entry block: 0x3a
Exit block: 0x3a
Body: 0x3a

Function 5:
Private function
Entry block: 0x5c
Exit block: 0x158
Body: 0x5c, 0x131, 0x158, 0x15e, 0x160, 0x166

