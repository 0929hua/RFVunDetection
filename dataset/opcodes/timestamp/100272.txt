args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/1/100272.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x106]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x106
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x106
0xc: JUMPI 0x106 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x111]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x47fc9aa
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x111
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x47fc9aa
0x3b: V13 = EQ V11 0x47fc9aa
0x3c: V14 = 0x111
0x3f: JUMPI 0x111 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x138]
---
0x40 DUP1
0x41 PUSH4 0xfb5a6b4
0x46 EQ
0x47 PUSH2 0x138
0x4a JUMPI
---
0x41: V15 = 0xfb5a6b4
0x46: V16 = EQ 0xfb5a6b4 V11
0x47: V17 = 0x138
0x4a: JUMPI 0x138 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x14d]
---
0x4b DUP1
0x4c PUSH4 0x1515bc2b
0x51 EQ
0x52 PUSH2 0x14d
0x55 JUMPI
---
0x4c: V18 = 0x1515bc2b
0x51: V19 = EQ 0x1515bc2b V11
0x52: V20 = 0x14d
0x55: JUMPI 0x14d V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x176]
---
0x56 DUP1
0x57 PUSH4 0x2c4e722e
0x5c EQ
0x5d PUSH2 0x176
0x60 JUMPI
---
0x57: V21 = 0x2c4e722e
0x5c: V22 = EQ 0x2c4e722e V11
0x5d: V23 = 0x176
0x60: JUMPI 0x176 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x18b]
---
0x61 DUP1
0x62 PUSH4 0x3f4ba83a
0x67 EQ
0x68 PUSH2 0x18b
0x6b JUMPI
---
0x62: V24 = 0x3f4ba83a
0x67: V25 = EQ 0x3f4ba83a V11
0x68: V26 = 0x18b
0x6b: JUMPI 0x18b V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1a0]
---
0x6c DUP1
0x6d PUSH4 0x4042b66f
0x72 EQ
0x73 PUSH2 0x1a0
0x76 JUMPI
---
0x6d: V27 = 0x4042b66f
0x72: V28 = EQ 0x4042b66f V11
0x73: V29 = 0x1a0
0x76: JUMPI 0x1a0 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1b5]
---
0x77 DUP1
0x78 PUSH4 0x4b6753bc
0x7d EQ
0x7e PUSH2 0x1b5
0x81 JUMPI
---
0x78: V30 = 0x4b6753bc
0x7d: V31 = EQ 0x4b6753bc V11
0x7e: V32 = 0x1b5
0x81: JUMPI 0x1b5 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x1ca]
---
0x82 DUP1
0x83 PUSH4 0x521eb273
0x88 EQ
0x89 PUSH2 0x1ca
0x8c JUMPI
---
0x83: V33 = 0x521eb273
0x88: V34 = EQ 0x521eb273 V11
0x89: V35 = 0x1ca
0x8c: JUMPI 0x1ca V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x1fb]
---
0x8d DUP1
0x8e PUSH4 0x5c975abb
0x93 EQ
0x94 PUSH2 0x1fb
0x97 JUMPI
---
0x8e: V36 = 0x5c975abb
0x93: V37 = EQ 0x5c975abb V11
0x94: V38 = 0x1fb
0x97: JUMPI 0x1fb V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x210]
---
0x98 DUP1
0x99 PUSH4 0x63fd9e38
0x9e EQ
0x9f PUSH2 0x210
0xa2 JUMPI
---
0x99: V39 = 0x63fd9e38
0x9e: V40 = EQ 0x63fd9e38 V11
0x9f: V41 = 0x210
0xa2: JUMPI 0x210 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x225]
---
0xa3 DUP1
0xa4 PUSH4 0x74e7493b
0xa9 EQ
0xaa PUSH2 0x225
0xad JUMPI
---
0xa4: V42 = 0x74e7493b
0xa9: V43 = EQ 0x74e7493b V11
0xaa: V44 = 0x225
0xad: JUMPI 0x225 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x23d]
---
0xae DUP1
0xaf PUSH4 0x8456cb59
0xb4 EQ
0xb5 PUSH2 0x23d
0xb8 JUMPI
---
0xaf: V45 = 0x8456cb59
0xb4: V46 = EQ 0x8456cb59 V11
0xb5: V47 = 0x23d
0xb8: JUMPI 0x23d V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x252]
---
0xb9 DUP1
0xba PUSH4 0x8d8f2adb
0xbf EQ
0xc0 PUSH2 0x252
0xc3 JUMPI
---
0xba: V48 = 0x8d8f2adb
0xbf: V49 = EQ 0x8d8f2adb V11
0xc0: V50 = 0x252
0xc3: JUMPI 0x252 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x267]
---
0xc4 DUP1
0xc5 PUSH4 0x8da5cb5b
0xca EQ
0xcb PUSH2 0x267
0xce JUMPI
---
0xc5: V51 = 0x8da5cb5b
0xca: V52 = EQ 0x8da5cb5b V11
0xcb: V53 = 0x267
0xce: JUMPI 0x267 V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x27c]
---
0xcf DUP1
0xd0 PUSH4 0x95805dad
0xd5 EQ
0xd6 PUSH2 0x27c
0xd9 JUMPI
---
0xd0: V54 = 0x95805dad
0xd5: V55 = EQ 0x95805dad V11
0xd6: V56 = 0x27c
0xd9: JUMPI 0x27c V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0xcf]
Successors: [0xe5, 0x294]
---
0xda DUP1
0xdb PUSH4 0xb7a8807c
0xe0 EQ
0xe1 PUSH2 0x294
0xe4 JUMPI
---
0xdb: V57 = 0xb7a8807c
0xe0: V58 = EQ 0xb7a8807c V11
0xe1: V59 = 0x294
0xe4: JUMPI 0x294 V58
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xef]
---
Predecessors: [0xda]
Successors: [0xf0, 0x2a9]
---
0xe5 DUP1
0xe6 PUSH4 0xec8ac4d8
0xeb EQ
0xec PUSH2 0x2a9
0xef JUMPI
---
0xe6: V60 = 0xec8ac4d8
0xeb: V61 = EQ 0xec8ac4d8 V11
0xec: V62 = 0x2a9
0xef: JUMPI 0x2a9 V61
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xf0
[0xf0:0xfa]
---
Predecessors: [0xe5]
Successors: [0xfb, 0x2bd]
---
0xf0 DUP1
0xf1 PUSH4 0xf2fde38b
0xf6 EQ
0xf7 PUSH2 0x2bd
0xfa JUMPI
---
0xf1: V63 = 0xf2fde38b
0xf6: V64 = EQ 0xf2fde38b V11
0xf7: V65 = 0x2bd
0xfa: JUMPI 0x2bd V64
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xfb
[0xfb:0x105]
---
Predecessors: [0xf0]
Successors: [0x106, 0x2de]
---
0xfb DUP1
0xfc PUSH4 0xfc0c546a
0x101 EQ
0x102 PUSH2 0x2de
0x105 JUMPI
---
0xfc: V66 = 0xfc0c546a
0x101: V67 = EQ 0xfc0c546a V11
0x102: V68 = 0x2de
0x105: JUMPI 0x2de V67
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x106
[0x106:0x10e]
---
Predecessors: [0x0, 0xfb]
Successors: [0x2f3]
---
0x106 JUMPDEST
0x107 PUSH2 0x10f
0x10a CALLER
0x10b PUSH2 0x2f3
0x10e JUMP
---
0x106: JUMPDEST 
0x107: V69 = 0x10f
0x10a: V70 = CALLER
0x10b: V71 = 0x2f3
0x10e: JUMP 0x2f3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10f, V70]
Exit stack: [V11, 0x10f, V70]

================================

Block 0x10f
[0x10f:0x110]
---
Predecessors: [0x37c, 0x3ca, 0x459, 0x48c, 0x648, 0x68b]
Successors: []
---
0x10f JUMPDEST
0x110 STOP
---
0x10f: JUMPDEST 
0x110: STOP 
---
Entry stack: [V11, 0x10f, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, S1, S0]

================================

Block 0x111
[0x111:0x118]
---
Predecessors: [0xd]
Successors: [0x119, 0x11d]
---
0x111 JUMPDEST
0x112 CALLVALUE
0x113 DUP1
0x114 ISZERO
0x115 PUSH2 0x11d
0x118 JUMPI
---
0x111: JUMPDEST 
0x112: V72 = CALLVALUE
0x114: V73 = ISZERO V72
0x115: V74 = 0x11d
0x118: JUMPI 0x11d V73
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V72]
Exit stack: [V11, V72]

================================

Block 0x119
[0x119:0x11c]
---
Predecessors: [0x111]
Successors: []
---
0x119 PUSH1 0x0
0x11b DUP1
0x11c REVERT
---
0x119: V75 = 0x0
0x11c: REVERT 0x0 0x0
---
Entry stack: [V11, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V72]

================================

Block 0x11d
[0x11d:0x125]
---
Predecessors: [0x111]
Successors: [0x381]
---
0x11d JUMPDEST
0x11e POP
0x11f PUSH2 0x126
0x122 PUSH2 0x381
0x125 JUMP
---
0x11d: JUMPDEST 
0x11f: V76 = 0x126
0x122: V77 = 0x381
0x125: JUMP 0x381
---
Entry stack: [V11, V72]
Stack pops: 1
Stack additions: [0x126]
Exit stack: [V11, 0x126]

================================

Block 0x126
[0x126:0x137]
---
Predecessors: [0x381, 0x387, 0x395, 0x411, 0x417, 0x43c, 0x659]
Successors: []
---
0x126 JUMPDEST
0x127 PUSH1 0x40
0x129 DUP1
0x12a MLOAD
0x12b SWAP2
0x12c DUP3
0x12d MSTORE
0x12e MLOAD
0x12f SWAP1
0x130 DUP2
0x131 SWAP1
0x132 SUB
0x133 PUSH1 0x20
0x135 ADD
0x136 SWAP1
0x137 RETURN
---
0x126: JUMPDEST 
0x127: V78 = 0x40
0x12a: V79 = M[0x40]
0x12d: M[V79] = S0
0x12e: V80 = M[0x40]
0x132: V81 = SUB V79 V80
0x133: V82 = 0x20
0x135: V83 = ADD 0x20 V81
0x137: RETURN V80 V83
---
Entry stack: [V11, 0x126, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x126]

================================

Block 0x138
[0x138:0x13f]
---
Predecessors: [0x40]
Successors: [0x140, 0x144]
---
0x138 JUMPDEST
0x139 CALLVALUE
0x13a DUP1
0x13b ISZERO
0x13c PUSH2 0x144
0x13f JUMPI
---
0x138: JUMPDEST 
0x139: V84 = CALLVALUE
0x13b: V85 = ISZERO V84
0x13c: V86 = 0x144
0x13f: JUMPI 0x144 V85
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V84]
Exit stack: [V11, V84]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0x138]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V87 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V11, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84]

================================

Block 0x144
[0x144:0x14c]
---
Predecessors: [0x138]
Successors: [0x387]
---
0x144 JUMPDEST
0x145 POP
0x146 PUSH2 0x126
0x149 PUSH2 0x387
0x14c JUMP
---
0x144: JUMPDEST 
0x146: V88 = 0x126
0x149: V89 = 0x387
0x14c: JUMP 0x387
---
Entry stack: [V11, V84]
Stack pops: 1
Stack additions: [0x126]
Exit stack: [V11, 0x126]

================================

Block 0x14d
[0x14d:0x154]
---
Predecessors: [0x4b]
Successors: [0x155, 0x159]
---
0x14d JUMPDEST
0x14e CALLVALUE
0x14f DUP1
0x150 ISZERO
0x151 PUSH2 0x159
0x154 JUMPI
---
0x14d: JUMPDEST 
0x14e: V90 = CALLVALUE
0x150: V91 = ISZERO V90
0x151: V92 = 0x159
0x154: JUMPI 0x159 V91
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V90]
Exit stack: [V11, V90]

================================

Block 0x155
[0x155:0x158]
---
Predecessors: [0x14d]
Successors: []
---
0x155 PUSH1 0x0
0x157 DUP1
0x158 REVERT
---
0x155: V93 = 0x0
0x158: REVERT 0x0 0x0
---
Entry stack: [V11, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V90]

================================

Block 0x159
[0x159:0x161]
---
Predecessors: [0x14d]
Successors: [0x38d]
---
0x159 JUMPDEST
0x15a POP
0x15b PUSH2 0x162
0x15e PUSH2 0x38d
0x161 JUMP
---
0x159: JUMPDEST 
0x15b: V94 = 0x162
0x15e: V95 = 0x38d
0x161: JUMP 0x38d
---
Entry stack: [V11, V90]
Stack pops: 1
Stack additions: [0x162]
Exit stack: [V11, 0x162]

================================

Block 0x162
[0x162:0x175]
---
Predecessors: [0x38d, 0x42c]
Successors: []
---
0x162 JUMPDEST
0x163 PUSH1 0x40
0x165 DUP1
0x166 MLOAD
0x167 SWAP2
0x168 ISZERO
0x169 ISZERO
0x16a DUP3
0x16b MSTORE
0x16c MLOAD
0x16d SWAP1
0x16e DUP2
0x16f SWAP1
0x170 SUB
0x171 PUSH1 0x20
0x173 ADD
0x174 SWAP1
0x175 RETURN
---
0x162: JUMPDEST 
0x163: V96 = 0x40
0x166: V97 = M[0x40]
0x168: V98 = ISZERO S0
0x169: V99 = ISZERO V98
0x16b: M[V97] = V99
0x16c: V100 = M[0x40]
0x170: V101 = SUB V97 V100
0x171: V102 = 0x20
0x173: V103 = ADD 0x20 V101
0x175: RETURN V100 V103
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x176
[0x176:0x17d]
---
Predecessors: [0x56]
Successors: [0x17e, 0x182]
---
0x176 JUMPDEST
0x177 CALLVALUE
0x178 DUP1
0x179 ISZERO
0x17a PUSH2 0x182
0x17d JUMPI
---
0x176: JUMPDEST 
0x177: V104 = CALLVALUE
0x179: V105 = ISZERO V104
0x17a: V106 = 0x182
0x17d: JUMPI 0x182 V105
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V104]
Exit stack: [V11, V104]

================================

Block 0x17e
[0x17e:0x181]
---
Predecessors: [0x176]
Successors: []
---
0x17e PUSH1 0x0
0x180 DUP1
0x181 REVERT
---
0x17e: V107 = 0x0
0x181: REVERT 0x0 0x0
---
Entry stack: [V11, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V104]

================================

Block 0x182
[0x182:0x18a]
---
Predecessors: [0x176]
Successors: [0x395]
---
0x182 JUMPDEST
0x183 POP
0x184 PUSH2 0x126
0x187 PUSH2 0x395
0x18a JUMP
---
0x182: JUMPDEST 
0x184: V108 = 0x126
0x187: V109 = 0x395
0x18a: JUMP 0x395
---
Entry stack: [V11, V104]
Stack pops: 1
Stack additions: [0x126]
Exit stack: [V11, 0x126]

================================

Block 0x18b
[0x18b:0x192]
---
Predecessors: [0x61]
Successors: [0x193, 0x197]
---
0x18b JUMPDEST
0x18c CALLVALUE
0x18d DUP1
0x18e ISZERO
0x18f PUSH2 0x197
0x192 JUMPI
---
0x18b: JUMPDEST 
0x18c: V110 = CALLVALUE
0x18e: V111 = ISZERO V110
0x18f: V112 = 0x197
0x192: JUMPI 0x197 V111
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V110]
Exit stack: [V11, V110]

================================

Block 0x193
[0x193:0x196]
---
Predecessors: [0x18b]
Successors: []
---
0x193 PUSH1 0x0
0x195 DUP1
0x196 REVERT
---
0x193: V113 = 0x0
0x196: REVERT 0x0 0x0
---
Entry stack: [V11, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V110]

================================

Block 0x197
[0x197:0x19f]
---
Predecessors: [0x18b]
Successors: [0x39b]
---
0x197 JUMPDEST
0x198 POP
0x199 PUSH2 0x10f
0x19c PUSH2 0x39b
0x19f JUMP
---
0x197: JUMPDEST 
0x199: V114 = 0x10f
0x19c: V115 = 0x39b
0x19f: JUMP 0x39b
---
Entry stack: [V11, V110]
Stack pops: 1
Stack additions: [0x10f]
Exit stack: [V11, 0x10f]

================================

Block 0x1a0
[0x1a0:0x1a7]
---
Predecessors: [0x6c]
Successors: [0x1a8, 0x1ac]
---
0x1a0 JUMPDEST
0x1a1 CALLVALUE
0x1a2 DUP1
0x1a3 ISZERO
0x1a4 PUSH2 0x1ac
0x1a7 JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V116 = CALLVALUE
0x1a3: V117 = ISZERO V116
0x1a4: V118 = 0x1ac
0x1a7: JUMPI 0x1ac V117
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V116]
Exit stack: [V11, V116]

================================

Block 0x1a8
[0x1a8:0x1ab]
---
Predecessors: [0x1a0]
Successors: []
---
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab REVERT
---
0x1a8: V119 = 0x0
0x1ab: REVERT 0x0 0x0
---
Entry stack: [V11, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V116]

================================

Block 0x1ac
[0x1ac:0x1b4]
---
Predecessors: [0x1a0]
Successors: [0x411]
---
0x1ac JUMPDEST
0x1ad POP
0x1ae PUSH2 0x126
0x1b1 PUSH2 0x411
0x1b4 JUMP
---
0x1ac: JUMPDEST 
0x1ae: V120 = 0x126
0x1b1: V121 = 0x411
0x1b4: JUMP 0x411
---
Entry stack: [V11, V116]
Stack pops: 1
Stack additions: [0x126]
Exit stack: [V11, 0x126]

================================

Block 0x1b5
[0x1b5:0x1bc]
---
Predecessors: [0x77]
Successors: [0x1bd, 0x1c1]
---
0x1b5 JUMPDEST
0x1b6 CALLVALUE
0x1b7 DUP1
0x1b8 ISZERO
0x1b9 PUSH2 0x1c1
0x1bc JUMPI
---
0x1b5: JUMPDEST 
0x1b6: V122 = CALLVALUE
0x1b8: V123 = ISZERO V122
0x1b9: V124 = 0x1c1
0x1bc: JUMPI 0x1c1 V123
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V122]
Exit stack: [V11, V122]

================================

Block 0x1bd
[0x1bd:0x1c0]
---
Predecessors: [0x1b5]
Successors: []
---
0x1bd PUSH1 0x0
0x1bf DUP1
0x1c0 REVERT
---
0x1bd: V125 = 0x0
0x1c0: REVERT 0x0 0x0
---
Entry stack: [V11, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V122]

================================

Block 0x1c1
[0x1c1:0x1c9]
---
Predecessors: [0x1b5]
Successors: [0x417]
---
0x1c1 JUMPDEST
0x1c2 POP
0x1c3 PUSH2 0x126
0x1c6 PUSH2 0x417
0x1c9 JUMP
---
0x1c1: JUMPDEST 
0x1c3: V126 = 0x126
0x1c6: V127 = 0x417
0x1c9: JUMP 0x417
---
Entry stack: [V11, V122]
Stack pops: 1
Stack additions: [0x126]
Exit stack: [V11, 0x126]

================================

Block 0x1ca
[0x1ca:0x1d1]
---
Predecessors: [0x82]
Successors: [0x1d2, 0x1d6]
---
0x1ca JUMPDEST
0x1cb CALLVALUE
0x1cc DUP1
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V128 = CALLVALUE
0x1cd: V129 = ISZERO V128
0x1ce: V130 = 0x1d6
0x1d1: JUMPI 0x1d6 V129
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V128]
Exit stack: [V11, V128]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1ca]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V131 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V11, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V128]

================================

Block 0x1d6
[0x1d6:0x1de]
---
Predecessors: [0x1ca]
Successors: [0x41d]
---
0x1d6 JUMPDEST
0x1d7 POP
0x1d8 PUSH2 0x1df
0x1db PUSH2 0x41d
0x1de JUMP
---
0x1d6: JUMPDEST 
0x1d8: V132 = 0x1df
0x1db: V133 = 0x41d
0x1de: JUMP 0x41d
---
Entry stack: [V11, V128]
Stack pops: 1
Stack additions: [0x1df]
Exit stack: [V11, 0x1df]

================================

Block 0x1df
[0x1df:0x1fa]
---
Predecessors: [0x41d, 0x622, 0x6f3]
Successors: []
---
0x1df JUMPDEST
0x1e0 PUSH1 0x40
0x1e2 DUP1
0x1e3 MLOAD
0x1e4 PUSH1 0x1
0x1e6 PUSH1 0xa0
0x1e8 PUSH1 0x2
0x1ea EXP
0x1eb SUB
0x1ec SWAP1
0x1ed SWAP3
0x1ee AND
0x1ef DUP3
0x1f0 MSTORE
0x1f1 MLOAD
0x1f2 SWAP1
0x1f3 DUP2
0x1f4 SWAP1
0x1f5 SUB
0x1f6 PUSH1 0x20
0x1f8 ADD
0x1f9 SWAP1
0x1fa RETURN
---
0x1df: JUMPDEST 
0x1e0: V134 = 0x40
0x1e3: V135 = M[0x40]
0x1e4: V136 = 0x1
0x1e6: V137 = 0xa0
0x1e8: V138 = 0x2
0x1ea: V139 = EXP 0x2 0xa0
0x1eb: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ee: V141 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: M[V135] = V141
0x1f1: V142 = M[0x40]
0x1f5: V143 = SUB V135 V142
0x1f6: V144 = 0x20
0x1f8: V145 = ADD 0x20 V143
0x1fa: RETURN V142 V145
---
Entry stack: [V11, 0x1df, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1df]

================================

Block 0x1fb
[0x1fb:0x202]
---
Predecessors: [0x8d]
Successors: [0x203, 0x207]
---
0x1fb JUMPDEST
0x1fc CALLVALUE
0x1fd DUP1
0x1fe ISZERO
0x1ff PUSH2 0x207
0x202 JUMPI
---
0x1fb: JUMPDEST 
0x1fc: V146 = CALLVALUE
0x1fe: V147 = ISZERO V146
0x1ff: V148 = 0x207
0x202: JUMPI 0x207 V147
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V146]
Exit stack: [V11, V146]

================================

Block 0x203
[0x203:0x206]
---
Predecessors: [0x1fb]
Successors: []
---
0x203 PUSH1 0x0
0x205 DUP1
0x206 REVERT
---
0x203: V149 = 0x0
0x206: REVERT 0x0 0x0
---
Entry stack: [V11, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V146]

================================

Block 0x207
[0x207:0x20f]
---
Predecessors: [0x1fb]
Successors: [0x42c]
---
0x207 JUMPDEST
0x208 POP
0x209 PUSH2 0x162
0x20c PUSH2 0x42c
0x20f JUMP
---
0x207: JUMPDEST 
0x209: V150 = 0x162
0x20c: V151 = 0x42c
0x20f: JUMP 0x42c
---
Entry stack: [V11, V146]
Stack pops: 1
Stack additions: [0x162]
Exit stack: [V11, 0x162]

================================

Block 0x210
[0x210:0x217]
---
Predecessors: [0x98]
Successors: [0x218, 0x21c]
---
0x210 JUMPDEST
0x211 CALLVALUE
0x212 DUP1
0x213 ISZERO
0x214 PUSH2 0x21c
0x217 JUMPI
---
0x210: JUMPDEST 
0x211: V152 = CALLVALUE
0x213: V153 = ISZERO V152
0x214: V154 = 0x21c
0x217: JUMPI 0x21c V153
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V152]
Exit stack: [V11, V152]

================================

Block 0x218
[0x218:0x21b]
---
Predecessors: [0x210]
Successors: []
---
0x218 PUSH1 0x0
0x21a DUP1
0x21b REVERT
---
0x218: V155 = 0x0
0x21b: REVERT 0x0 0x0
---
Entry stack: [V11, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V152]

================================

Block 0x21c
[0x21c:0x224]
---
Predecessors: [0x210]
Successors: [0x43c]
---
0x21c JUMPDEST
0x21d POP
0x21e PUSH2 0x126
0x221 PUSH2 0x43c
0x224 JUMP
---
0x21c: JUMPDEST 
0x21e: V156 = 0x126
0x221: V157 = 0x43c
0x224: JUMP 0x43c
---
Entry stack: [V11, V152]
Stack pops: 1
Stack additions: [0x126]
Exit stack: [V11, 0x126]

================================

Block 0x225
[0x225:0x22c]
---
Predecessors: [0xa3]
Successors: [0x22d, 0x231]
---
0x225 JUMPDEST
0x226 CALLVALUE
0x227 DUP1
0x228 ISZERO
0x229 PUSH2 0x231
0x22c JUMPI
---
0x225: JUMPDEST 
0x226: V158 = CALLVALUE
0x228: V159 = ISZERO V158
0x229: V160 = 0x231
0x22c: JUMPI 0x231 V159
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V158]
Exit stack: [V11, V158]

================================

Block 0x22d
[0x22d:0x230]
---
Predecessors: [0x225]
Successors: []
---
0x22d PUSH1 0x0
0x22f DUP1
0x230 REVERT
---
0x22d: V161 = 0x0
0x230: REVERT 0x0 0x0
---
Entry stack: [V11, V158]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V158]

================================

Block 0x231
[0x231:0x23c]
---
Predecessors: [0x225]
Successors: [0x442]
---
0x231 JUMPDEST
0x232 POP
0x233 PUSH2 0x10f
0x236 PUSH1 0x4
0x238 CALLDATALOAD
0x239 PUSH2 0x442
0x23c JUMP
---
0x231: JUMPDEST 
0x233: V162 = 0x10f
0x236: V163 = 0x4
0x238: V164 = CALLDATALOAD 0x4
0x239: V165 = 0x442
0x23c: JUMP 0x442
---
Entry stack: [V11, V158]
Stack pops: 1
Stack additions: [0x10f, V164]
Exit stack: [V11, 0x10f, V164]

================================

Block 0x23d
[0x23d:0x244]
---
Predecessors: [0xae]
Successors: [0x245, 0x249]
---
0x23d JUMPDEST
0x23e CALLVALUE
0x23f DUP1
0x240 ISZERO
0x241 PUSH2 0x249
0x244 JUMPI
---
0x23d: JUMPDEST 
0x23e: V166 = CALLVALUE
0x240: V167 = ISZERO V166
0x241: V168 = 0x249
0x244: JUMPI 0x249 V167
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V166]
Exit stack: [V11, V166]

================================

Block 0x245
[0x245:0x248]
---
Predecessors: [0x23d]
Successors: []
---
0x245 PUSH1 0x0
0x247 DUP1
0x248 REVERT
---
0x245: V169 = 0x0
0x248: REVERT 0x0 0x0
---
Entry stack: [V11, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V166]

================================

Block 0x249
[0x249:0x251]
---
Predecessors: [0x23d]
Successors: [0x45e]
---
0x249 JUMPDEST
0x24a POP
0x24b PUSH2 0x10f
0x24e PUSH2 0x45e
0x251 JUMP
---
0x249: JUMPDEST 
0x24b: V170 = 0x10f
0x24e: V171 = 0x45e
0x251: JUMP 0x45e
---
Entry stack: [V11, V166]
Stack pops: 1
Stack additions: [0x10f]
Exit stack: [V11, 0x10f]

================================

Block 0x252
[0x252:0x259]
---
Predecessors: [0xb9]
Successors: [0x25a, 0x25e]
---
0x252 JUMPDEST
0x253 CALLVALUE
0x254 DUP1
0x255 ISZERO
0x256 PUSH2 0x25e
0x259 JUMPI
---
0x252: JUMPDEST 
0x253: V172 = CALLVALUE
0x255: V173 = ISZERO V172
0x256: V174 = 0x25e
0x259: JUMPI 0x25e V173
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V172]
Exit stack: [V11, V172]

================================

Block 0x25a
[0x25a:0x25d]
---
Predecessors: [0x252]
Successors: []
---
0x25a PUSH1 0x0
0x25c DUP1
0x25d REVERT
---
0x25a: V175 = 0x0
0x25d: REVERT 0x0 0x0
---
Entry stack: [V11, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V172]

================================

Block 0x25e
[0x25e:0x266]
---
Predecessors: [0x252]
Successors: [0x4d9]
---
0x25e JUMPDEST
0x25f POP
0x260 PUSH2 0x10f
0x263 PUSH2 0x4d9
0x266 JUMP
---
0x25e: JUMPDEST 
0x260: V176 = 0x10f
0x263: V177 = 0x4d9
0x266: JUMP 0x4d9
---
Entry stack: [V11, V172]
Stack pops: 1
Stack additions: [0x10f]
Exit stack: [V11, 0x10f]

================================

Block 0x267
[0x267:0x26e]
---
Predecessors: [0xc4]
Successors: [0x26f, 0x273]
---
0x267 JUMPDEST
0x268 CALLVALUE
0x269 DUP1
0x26a ISZERO
0x26b PUSH2 0x273
0x26e JUMPI
---
0x267: JUMPDEST 
0x268: V178 = CALLVALUE
0x26a: V179 = ISZERO V178
0x26b: V180 = 0x273
0x26e: JUMPI 0x273 V179
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V178]
Exit stack: [V11, V178]

================================

Block 0x26f
[0x26f:0x272]
---
Predecessors: [0x267]
Successors: []
---
0x26f PUSH1 0x0
0x271 DUP1
0x272 REVERT
---
0x26f: V181 = 0x0
0x272: REVERT 0x0 0x0
---
Entry stack: [V11, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V178]

================================

Block 0x273
[0x273:0x27b]
---
Predecessors: [0x267]
Successors: [0x622]
---
0x273 JUMPDEST
0x274 POP
0x275 PUSH2 0x1df
0x278 PUSH2 0x622
0x27b JUMP
---
0x273: JUMPDEST 
0x275: V182 = 0x1df
0x278: V183 = 0x622
0x27b: JUMP 0x622
---
Entry stack: [V11, V178]
Stack pops: 1
Stack additions: [0x1df]
Exit stack: [V11, 0x1df]

================================

Block 0x27c
[0x27c:0x283]
---
Predecessors: [0xcf]
Successors: [0x284, 0x288]
---
0x27c JUMPDEST
0x27d CALLVALUE
0x27e DUP1
0x27f ISZERO
0x280 PUSH2 0x288
0x283 JUMPI
---
0x27c: JUMPDEST 
0x27d: V184 = CALLVALUE
0x27f: V185 = ISZERO V184
0x280: V186 = 0x288
0x283: JUMPI 0x288 V185
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V184]
Exit stack: [V11, V184]

================================

Block 0x284
[0x284:0x287]
---
Predecessors: [0x27c]
Successors: []
---
0x284 PUSH1 0x0
0x286 DUP1
0x287 REVERT
---
0x284: V187 = 0x0
0x287: REVERT 0x0 0x0
---
Entry stack: [V11, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V184]

================================

Block 0x288
[0x288:0x293]
---
Predecessors: [0x27c]
Successors: [0x631]
---
0x288 JUMPDEST
0x289 POP
0x28a PUSH2 0x10f
0x28d PUSH1 0x4
0x28f CALLDATALOAD
0x290 PUSH2 0x631
0x293 JUMP
---
0x288: JUMPDEST 
0x28a: V188 = 0x10f
0x28d: V189 = 0x4
0x28f: V190 = CALLDATALOAD 0x4
0x290: V191 = 0x631
0x293: JUMP 0x631
---
Entry stack: [V11, V184]
Stack pops: 1
Stack additions: [0x10f, V190]
Exit stack: [V11, 0x10f, V190]

================================

Block 0x294
[0x294:0x29b]
---
Predecessors: [0xda]
Successors: [0x29c, 0x2a0]
---
0x294 JUMPDEST
0x295 CALLVALUE
0x296 DUP1
0x297 ISZERO
0x298 PUSH2 0x2a0
0x29b JUMPI
---
0x294: JUMPDEST 
0x295: V192 = CALLVALUE
0x297: V193 = ISZERO V192
0x298: V194 = 0x2a0
0x29b: JUMPI 0x2a0 V193
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V192]
Exit stack: [V11, V192]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x294]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V195 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V11, V192]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V192]

================================

Block 0x2a0
[0x2a0:0x2a8]
---
Predecessors: [0x294]
Successors: [0x659]
---
0x2a0 JUMPDEST
0x2a1 POP
0x2a2 PUSH2 0x126
0x2a5 PUSH2 0x659
0x2a8 JUMP
---
0x2a0: JUMPDEST 
0x2a2: V196 = 0x126
0x2a5: V197 = 0x659
0x2a8: JUMP 0x659
---
Entry stack: [V11, V192]
Stack pops: 1
Stack additions: [0x126]
Exit stack: [V11, 0x126]

================================

Block 0x2a9
[0x2a9:0x2bc]
---
Predecessors: [0xe5]
Successors: [0x2f3]
---
0x2a9 JUMPDEST
0x2aa PUSH2 0x10f
0x2ad PUSH1 0x1
0x2af PUSH1 0xa0
0x2b1 PUSH1 0x2
0x2b3 EXP
0x2b4 SUB
0x2b5 PUSH1 0x4
0x2b7 CALLDATALOAD
0x2b8 AND
0x2b9 PUSH2 0x2f3
0x2bc JUMP
---
0x2a9: JUMPDEST 
0x2aa: V198 = 0x10f
0x2ad: V199 = 0x1
0x2af: V200 = 0xa0
0x2b1: V201 = 0x2
0x2b3: V202 = EXP 0x2 0xa0
0x2b4: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b5: V204 = 0x4
0x2b7: V205 = CALLDATALOAD 0x4
0x2b8: V206 = AND V205 0xffffffffffffffffffffffffffffffffffffffff
0x2b9: V207 = 0x2f3
0x2bc: JUMP 0x2f3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10f, V206]
Exit stack: [V11, 0x10f, V206]

================================

Block 0x2bd
[0x2bd:0x2c4]
---
Predecessors: [0xf0]
Successors: [0x2c5, 0x2c9]
---
0x2bd JUMPDEST
0x2be CALLVALUE
0x2bf DUP1
0x2c0 ISZERO
0x2c1 PUSH2 0x2c9
0x2c4 JUMPI
---
0x2bd: JUMPDEST 
0x2be: V208 = CALLVALUE
0x2c0: V209 = ISZERO V208
0x2c1: V210 = 0x2c9
0x2c4: JUMPI 0x2c9 V209
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V208]
Exit stack: [V11, V208]

================================

Block 0x2c5
[0x2c5:0x2c8]
---
Predecessors: [0x2bd]
Successors: []
---
0x2c5 PUSH1 0x0
0x2c7 DUP1
0x2c8 REVERT
---
0x2c5: V211 = 0x0
0x2c8: REVERT 0x0 0x0
---
Entry stack: [V11, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V208]

================================

Block 0x2c9
[0x2c9:0x2dd]
---
Predecessors: [0x2bd]
Successors: [0x65f]
---
0x2c9 JUMPDEST
0x2ca POP
0x2cb PUSH2 0x10f
0x2ce PUSH1 0x1
0x2d0 PUSH1 0xa0
0x2d2 PUSH1 0x2
0x2d4 EXP
0x2d5 SUB
0x2d6 PUSH1 0x4
0x2d8 CALLDATALOAD
0x2d9 AND
0x2da PUSH2 0x65f
0x2dd JUMP
---
0x2c9: JUMPDEST 
0x2cb: V212 = 0x10f
0x2ce: V213 = 0x1
0x2d0: V214 = 0xa0
0x2d2: V215 = 0x2
0x2d4: V216 = EXP 0x2 0xa0
0x2d5: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d6: V218 = 0x4
0x2d8: V219 = CALLDATALOAD 0x4
0x2d9: V220 = AND V219 0xffffffffffffffffffffffffffffffffffffffff
0x2da: V221 = 0x65f
0x2dd: JUMP 0x65f
---
Entry stack: [V11, V208]
Stack pops: 1
Stack additions: [0x10f, V220]
Exit stack: [V11, 0x10f, V220]

================================

Block 0x2de
[0x2de:0x2e5]
---
Predecessors: [0xfb]
Successors: [0x2e6, 0x2ea]
---
0x2de JUMPDEST
0x2df CALLVALUE
0x2e0 DUP1
0x2e1 ISZERO
0x2e2 PUSH2 0x2ea
0x2e5 JUMPI
---
0x2de: JUMPDEST 
0x2df: V222 = CALLVALUE
0x2e1: V223 = ISZERO V222
0x2e2: V224 = 0x2ea
0x2e5: JUMPI 0x2ea V223
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V222]
Exit stack: [V11, V222]

================================

Block 0x2e6
[0x2e6:0x2e9]
---
Predecessors: [0x2de]
Successors: []
---
0x2e6 PUSH1 0x0
0x2e8 DUP1
0x2e9 REVERT
---
0x2e6: V225 = 0x0
0x2e9: REVERT 0x0 0x0
---
Entry stack: [V11, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V222]

================================

Block 0x2ea
[0x2ea:0x2f2]
---
Predecessors: [0x2de]
Successors: [0x6f3]
---
0x2ea JUMPDEST
0x2eb POP
0x2ec PUSH2 0x1df
0x2ef PUSH2 0x6f3
0x2f2 JUMP
---
0x2ea: JUMPDEST 
0x2ec: V226 = 0x1df
0x2ef: V227 = 0x6f3
0x2f2: JUMP 0x6f3
---
Entry stack: [V11, V222]
Stack pops: 1
Stack additions: [0x1df]
Exit stack: [V11, 0x1df]

================================

Block 0x2f3
[0x2f3:0x2ff]
---
Predecessors: [0x106, 0x2a9]
Successors: [0x702]
---
0x2f3 JUMPDEST
0x2f4 CALLVALUE
0x2f5 PUSH1 0x0
0x2f7 PUSH2 0x300
0x2fa DUP4
0x2fb DUP4
0x2fc PUSH2 0x702
0x2ff JUMP
---
0x2f3: JUMPDEST 
0x2f4: V228 = CALLVALUE
0x2f5: V229 = 0x0
0x2f7: V230 = 0x300
0x2fc: V231 = 0x702
0x2ff: JUMP 0x702
---
Entry stack: [V11, 0x10f, S0]
Stack pops: 1
Stack additions: [S0, V228, 0x0, 0x300, S0, V228]
Exit stack: [V11, 0x10f, S0, V228, 0x0, 0x300, S0, V228]

================================

Block 0x300
[0x300:0x308]
---
Predecessors: [0x75c]
Successors: [0x760]
---
0x300 JUMPDEST
0x301 PUSH2 0x309
0x304 DUP3
0x305 PUSH2 0x760
0x308 JUMP
---
0x300: JUMPDEST 
0x301: V232 = 0x309
0x305: V233 = 0x760
0x308: JUMP 0x760
---
Entry stack: [V11, 0x10f, S5, S4, {0x0, 0x10f}, S2, V228, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x309, S1]
Exit stack: [V11, 0x10f, S5, S4, {0x0, 0x10f}, S2, V228, S0, 0x309, V228]

================================

Block 0x309
[0x309:0x31e]
---
Predecessors: [0x777]
Successors: [0x77d]
---
0x309 JUMPDEST
0x30a PUSH1 0x5
0x30c SLOAD
0x30d SWAP1
0x30e SWAP2
0x30f POP
0x310 PUSH2 0x31f
0x313 SWAP1
0x314 DUP4
0x315 PUSH4 0xffffffff
0x31a PUSH2 0x77d
0x31d AND
0x31e JUMP
---
0x309: JUMPDEST 
0x30a: V234 = 0x5
0x30c: V235 = S[0x5]
0x310: V236 = 0x31f
0x315: V237 = 0xffffffff
0x31a: V238 = 0x77d
0x31d: V239 = AND 0x77d 0xffffffff
0x31e: JUMP 0x77d
---
Entry stack: [V11, 0x10f, S3, S2, {0x0, 0x10f}, S0]
Stack pops: 3
Stack additions: [S2, S0, 0x31f, V235, S2]
Exit stack: [V11, 0x10f, S3, S2, S0, 0x31f, V235, S2]

================================

Block 0x31f
[0x31f:0x32b]
---
Predecessors: [0x790]
Successors: [0x797]
---
0x31f JUMPDEST
0x320 PUSH1 0x5
0x322 SSTORE
0x323 PUSH2 0x32c
0x326 DUP4
0x327 DUP3
0x328 PUSH2 0x797
0x32b JUMP
---
0x31f: JUMPDEST 
0x320: V240 = 0x5
0x322: S[0x5] = S0
0x323: V241 = 0x32c
0x328: V242 = 0x797
0x32b: JUMP 0x797
---
Entry stack: [V11, 0x10f, S9, S8, {0x0, 0x10f}, S6, S5, S4, S3, V228, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x32c, S3, S1]
Exit stack: [V11, 0x10f, S9, S8, {0x0, 0x10f}, S6, S5, S4, S3, V228, S1, 0x32c, S3, S1]

================================

Block 0x32c
[0x32c:0x37b]
---
Predecessors: [0x75c]
Successors: [0x7a1]
---
0x32c JUMPDEST
0x32d PUSH1 0x40
0x32f DUP1
0x330 MLOAD
0x331 DUP4
0x332 DUP2
0x333 MSTORE
0x334 PUSH1 0x20
0x336 DUP2
0x337 ADD
0x338 DUP4
0x339 SWAP1
0x33a MSTORE
0x33b DUP2
0x33c MLOAD
0x33d PUSH1 0x1
0x33f PUSH1 0xa0
0x341 PUSH1 0x2
0x343 EXP
0x344 SUB
0x345 DUP7
0x346 AND
0x347 SWAP3
0x348 CALLER
0x349 SWAP3
0x34a PUSH32 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x36b SWAP3
0x36c SWAP1
0x36d DUP2
0x36e SWAP1
0x36f SUB
0x370 SWAP1
0x371 SWAP2
0x372 ADD
0x373 SWAP1
0x374 LOG3
0x375 PUSH2 0x37c
0x378 PUSH2 0x7a1
0x37b JUMP
---
0x32c: JUMPDEST 
0x32d: V243 = 0x40
0x330: V244 = M[0x40]
0x333: M[V244] = V228
0x334: V245 = 0x20
0x337: V246 = ADD V244 0x20
0x33a: M[V246] = S0
0x33c: V247 = M[0x40]
0x33d: V248 = 0x1
0x33f: V249 = 0xa0
0x341: V250 = 0x2
0x343: V251 = EXP 0x2 0xa0
0x344: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x346: V253 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x348: V254 = CALLER
0x34a: V255 = 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x36f: V256 = SUB V244 V247
0x372: V257 = ADD 0x40 V256
0x374: LOG V247 V257 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18 V254 V253
0x375: V258 = 0x37c
0x378: V259 = 0x7a1
0x37b: JUMP 0x7a1
---
Entry stack: [V11, 0x10f, S5, S4, {0x0, 0x10f}, S2, V228, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x37c]
Exit stack: [V11, 0x10f, S5, S4, {0x0, 0x10f}, S2, V228, S0, 0x37c]

================================

Block 0x37c
[0x37c:0x380]
---
Predecessors: [0x60c, 0x7da]
Successors: [0x10f]
---
0x37c JUMPDEST
0x37d POP
0x37e POP
0x37f POP
0x380 JUMP
---
0x37c: JUMPDEST 
0x380: JUMP {0x0, 0x10f}
---
Entry stack: [V11, 0x10f, S5, S4, {0x0, 0x10f}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x10f, S5, S4]

================================

Block 0x381
[0x381:0x386]
---
Predecessors: [0x11d]
Successors: [0x126]
---
0x381 JUMPDEST
0x382 PUSH1 0x3
0x384 SLOAD
0x385 DUP2
0x386 JUMP
---
0x381: JUMPDEST 
0x382: V260 = 0x3
0x384: V261 = S[0x3]
0x386: JUMP 0x126
---
Entry stack: [V11, 0x126]
Stack pops: 1
Stack additions: [S0, V261]
Exit stack: [V11, 0x126, V261]

================================

Block 0x387
[0x387:0x38c]
---
Predecessors: [0x144]
Successors: [0x126]
---
0x387 JUMPDEST
0x388 PUSH1 0x8
0x38a SLOAD
0x38b DUP2
0x38c JUMP
---
0x387: JUMPDEST 
0x388: V262 = 0x8
0x38a: V263 = S[0x8]
0x38c: JUMP 0x126
---
Entry stack: [V11, 0x126]
Stack pops: 1
Stack additions: [S0, V263]
Exit stack: [V11, 0x126, V263]

================================

Block 0x38d
[0x38d:0x394]
---
Predecessors: [0x159]
Successors: [0x162]
---
0x38d JUMPDEST
0x38e PUSH1 0x7
0x390 SLOAD
0x391 TIMESTAMP
0x392 GT
0x393 SWAP1
0x394 JUMP
---
0x38d: JUMPDEST 
0x38e: V264 = 0x7
0x390: V265 = S[0x7]
0x391: V266 = TIMESTAMP
0x392: V267 = GT V266 V265
0x394: JUMP 0x162
---
Entry stack: [V11, 0x162]
Stack pops: 1
Stack additions: [V267]
Exit stack: [V11, V267]

================================

Block 0x395
[0x395:0x39a]
---
Predecessors: [0x182]
Successors: [0x126]
---
0x395 JUMPDEST
0x396 PUSH1 0x4
0x398 SLOAD
0x399 DUP2
0x39a JUMP
---
0x395: JUMPDEST 
0x396: V268 = 0x4
0x398: V269 = S[0x4]
0x39a: JUMP 0x126
---
Entry stack: [V11, 0x126]
Stack pops: 1
Stack additions: [S0, V269]
Exit stack: [V11, 0x126, V269]

================================

Block 0x39b
[0x39b:0x3ad]
---
Predecessors: [0x197]
Successors: [0x3ae, 0x3b2]
---
0x39b JUMPDEST
0x39c PUSH1 0x0
0x39e SLOAD
0x39f PUSH1 0x1
0x3a1 PUSH1 0xa0
0x3a3 PUSH1 0x2
0x3a5 EXP
0x3a6 SUB
0x3a7 AND
0x3a8 CALLER
0x3a9 EQ
0x3aa PUSH2 0x3b2
0x3ad JUMPI
---
0x39b: JUMPDEST 
0x39c: V270 = 0x0
0x39e: V271 = S[0x0]
0x39f: V272 = 0x1
0x3a1: V273 = 0xa0
0x3a3: V274 = 0x2
0x3a5: V275 = EXP 0x2 0xa0
0x3a6: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a7: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x3a8: V278 = CALLER
0x3a9: V279 = EQ V278 V277
0x3aa: V280 = 0x3b2
0x3ad: JUMPI 0x3b2 V279
---
Entry stack: [V11, 0x10f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f]

================================

Block 0x3ae
[0x3ae:0x3b1]
---
Predecessors: [0x39b]
Successors: []
---
0x3ae PUSH1 0x0
0x3b0 DUP1
0x3b1 REVERT
---
0x3ae: V281 = 0x0
0x3b1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f]

================================

Block 0x3b2
[0x3b2:0x3c5]
---
Predecessors: [0x39b]
Successors: [0x3c6, 0x3ca]
---
0x3b2 JUMPDEST
0x3b3 PUSH1 0x0
0x3b5 SLOAD
0x3b6 PUSH1 0xa0
0x3b8 PUSH1 0x2
0x3ba EXP
0x3bb SWAP1
0x3bc DIV
0x3bd PUSH1 0xff
0x3bf AND
0x3c0 ISZERO
0x3c1 ISZERO
0x3c2 PUSH2 0x3ca
0x3c5 JUMPI
---
0x3b2: JUMPDEST 
0x3b3: V282 = 0x0
0x3b5: V283 = S[0x0]
0x3b6: V284 = 0xa0
0x3b8: V285 = 0x2
0x3ba: V286 = EXP 0x2 0xa0
0x3bc: V287 = DIV V283 0x10000000000000000000000000000000000000000
0x3bd: V288 = 0xff
0x3bf: V289 = AND 0xff V287
0x3c0: V290 = ISZERO V289
0x3c1: V291 = ISZERO V290
0x3c2: V292 = 0x3ca
0x3c5: JUMPI 0x3ca V291
---
Entry stack: [V11, 0x10f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f]

================================

Block 0x3c6
[0x3c6:0x3c9]
---
Predecessors: [0x3b2]
Successors: []
---
0x3c6 PUSH1 0x0
0x3c8 DUP1
0x3c9 REVERT
---
0x3c6: V293 = 0x0
0x3c9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f]

================================

Block 0x3ca
[0x3ca:0x410]
---
Predecessors: [0x3b2]
Successors: [0x10f]
---
0x3ca JUMPDEST
0x3cb PUSH1 0x0
0x3cd DUP1
0x3ce SLOAD
0x3cf PUSH21 0xff0000000000000000000000000000000000000000
0x3e5 NOT
0x3e6 AND
0x3e7 DUP2
0x3e8 SSTORE
0x3e9 PUSH1 0x40
0x3eb MLOAD
0x3ec PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x40d SWAP2
0x40e SWAP1
0x40f LOG1
0x410 JUMP
---
0x3ca: JUMPDEST 
0x3cb: V294 = 0x0
0x3ce: V295 = S[0x0]
0x3cf: V296 = 0xff0000000000000000000000000000000000000000
0x3e5: V297 = NOT 0xff0000000000000000000000000000000000000000
0x3e6: V298 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V295
0x3e8: S[0x0] = V298
0x3e9: V299 = 0x40
0x3eb: V300 = M[0x40]
0x3ec: V301 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x40f: LOG V300 0x0 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x410: JUMP 0x10f
---
Entry stack: [V11, 0x10f]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x411
[0x411:0x416]
---
Predecessors: [0x1ac]
Successors: [0x126]
---
0x411 JUMPDEST
0x412 PUSH1 0x5
0x414 SLOAD
0x415 DUP2
0x416 JUMP
---
0x411: JUMPDEST 
0x412: V302 = 0x5
0x414: V303 = S[0x5]
0x416: JUMP 0x126
---
Entry stack: [V11, 0x126]
Stack pops: 1
Stack additions: [S0, V303]
Exit stack: [V11, 0x126, V303]

================================

Block 0x417
[0x417:0x41c]
---
Predecessors: [0x1c1]
Successors: [0x126]
---
0x417 JUMPDEST
0x418 PUSH1 0x7
0x41a SLOAD
0x41b DUP2
0x41c JUMP
---
0x417: JUMPDEST 
0x418: V304 = 0x7
0x41a: V305 = S[0x7]
0x41c: JUMP 0x126
---
Entry stack: [V11, 0x126]
Stack pops: 1
Stack additions: [S0, V305]
Exit stack: [V11, 0x126, V305]

================================

Block 0x41d
[0x41d:0x42b]
---
Predecessors: [0x1d6]
Successors: [0x1df]
---
0x41d JUMPDEST
0x41e PUSH1 0x2
0x420 SLOAD
0x421 PUSH1 0x1
0x423 PUSH1 0xa0
0x425 PUSH1 0x2
0x427 EXP
0x428 SUB
0x429 AND
0x42a DUP2
0x42b JUMP
---
0x41d: JUMPDEST 
0x41e: V306 = 0x2
0x420: V307 = S[0x2]
0x421: V308 = 0x1
0x423: V309 = 0xa0
0x425: V310 = 0x2
0x427: V311 = EXP 0x2 0xa0
0x428: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x429: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x42b: JUMP 0x1df
---
Entry stack: [V11, 0x1df]
Stack pops: 1
Stack additions: [S0, V313]
Exit stack: [V11, 0x1df, V313]

================================

Block 0x42c
[0x42c:0x43b]
---
Predecessors: [0x207]
Successors: [0x162]
---
0x42c JUMPDEST
0x42d PUSH1 0x0
0x42f SLOAD
0x430 PUSH1 0xa0
0x432 PUSH1 0x2
0x434 EXP
0x435 SWAP1
0x436 DIV
0x437 PUSH1 0xff
0x439 AND
0x43a DUP2
0x43b JUMP
---
0x42c: JUMPDEST 
0x42d: V314 = 0x0
0x42f: V315 = S[0x0]
0x430: V316 = 0xa0
0x432: V317 = 0x2
0x434: V318 = EXP 0x2 0xa0
0x436: V319 = DIV V315 0x10000000000000000000000000000000000000000
0x437: V320 = 0xff
0x439: V321 = AND 0xff V319
0x43b: JUMP 0x162
---
Entry stack: [V11, 0x162]
Stack pops: 1
Stack additions: [S0, V321]
Exit stack: [V11, 0x162, V321]

================================

Block 0x43c
[0x43c:0x441]
---
Predecessors: [0x21c]
Successors: [0x126]
---
0x43c JUMPDEST
0x43d PUSH1 0x9
0x43f SLOAD
0x440 DUP2
0x441 JUMP
---
0x43c: JUMPDEST 
0x43d: V322 = 0x9
0x43f: V323 = S[0x9]
0x441: JUMP 0x126
---
Entry stack: [V11, 0x126]
Stack pops: 1
Stack additions: [S0, V323]
Exit stack: [V11, 0x126, V323]

================================

Block 0x442
[0x442:0x454]
---
Predecessors: [0x231]
Successors: [0x455, 0x459]
---
0x442 JUMPDEST
0x443 PUSH1 0x0
0x445 SLOAD
0x446 PUSH1 0x1
0x448 PUSH1 0xa0
0x44a PUSH1 0x2
0x44c EXP
0x44d SUB
0x44e AND
0x44f CALLER
0x450 EQ
0x451 PUSH2 0x459
0x454 JUMPI
---
0x442: JUMPDEST 
0x443: V324 = 0x0
0x445: V325 = S[0x0]
0x446: V326 = 0x1
0x448: V327 = 0xa0
0x44a: V328 = 0x2
0x44c: V329 = EXP 0x2 0xa0
0x44d: V330 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44e: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x44f: V332 = CALLER
0x450: V333 = EQ V332 V331
0x451: V334 = 0x459
0x454: JUMPI 0x459 V333
---
Entry stack: [V11, 0x10f, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, V164]

================================

Block 0x455
[0x455:0x458]
---
Predecessors: [0x442]
Successors: []
---
0x455 PUSH1 0x0
0x457 DUP1
0x458 REVERT
---
0x455: V335 = 0x0
0x458: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, V164]

================================

Block 0x459
[0x459:0x45d]
---
Predecessors: [0x442]
Successors: [0x10f]
---
0x459 JUMPDEST
0x45a PUSH1 0x4
0x45c SSTORE
0x45d JUMP
---
0x459: JUMPDEST 
0x45a: V336 = 0x4
0x45c: S[0x4] = V164
0x45d: JUMP 0x10f
---
Entry stack: [V11, 0x10f, V164]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x45e
[0x45e:0x470]
---
Predecessors: [0x249]
Successors: [0x471, 0x475]
---
0x45e JUMPDEST
0x45f PUSH1 0x0
0x461 SLOAD
0x462 PUSH1 0x1
0x464 PUSH1 0xa0
0x466 PUSH1 0x2
0x468 EXP
0x469 SUB
0x46a AND
0x46b CALLER
0x46c EQ
0x46d PUSH2 0x475
0x470 JUMPI
---
0x45e: JUMPDEST 
0x45f: V337 = 0x0
0x461: V338 = S[0x0]
0x462: V339 = 0x1
0x464: V340 = 0xa0
0x466: V341 = 0x2
0x468: V342 = EXP 0x2 0xa0
0x469: V343 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46a: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x46b: V345 = CALLER
0x46c: V346 = EQ V345 V344
0x46d: V347 = 0x475
0x470: JUMPI 0x475 V346
---
Entry stack: [V11, 0x10f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f]

================================

Block 0x471
[0x471:0x474]
---
Predecessors: [0x45e]
Successors: []
---
0x471 PUSH1 0x0
0x473 DUP1
0x474 REVERT
---
0x471: V348 = 0x0
0x474: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f]

================================

Block 0x475
[0x475:0x487]
---
Predecessors: [0x45e]
Successors: [0x488, 0x48c]
---
0x475 JUMPDEST
0x476 PUSH1 0x0
0x478 SLOAD
0x479 PUSH1 0xa0
0x47b PUSH1 0x2
0x47d EXP
0x47e SWAP1
0x47f DIV
0x480 PUSH1 0xff
0x482 AND
0x483 ISZERO
0x484 PUSH2 0x48c
0x487 JUMPI
---
0x475: JUMPDEST 
0x476: V349 = 0x0
0x478: V350 = S[0x0]
0x479: V351 = 0xa0
0x47b: V352 = 0x2
0x47d: V353 = EXP 0x2 0xa0
0x47f: V354 = DIV V350 0x10000000000000000000000000000000000000000
0x480: V355 = 0xff
0x482: V356 = AND 0xff V354
0x483: V357 = ISZERO V356
0x484: V358 = 0x48c
0x487: JUMPI 0x48c V357
---
Entry stack: [V11, 0x10f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f]

================================

Block 0x488
[0x488:0x48b]
---
Predecessors: [0x475]
Successors: []
---
0x488 PUSH1 0x0
0x48a DUP1
0x48b REVERT
---
0x488: V359 = 0x0
0x48b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f]

================================

Block 0x48c
[0x48c:0x4d8]
---
Predecessors: [0x475]
Successors: [0x10f]
---
0x48c JUMPDEST
0x48d PUSH1 0x0
0x48f DUP1
0x490 SLOAD
0x491 PUSH21 0xff0000000000000000000000000000000000000000
0x4a7 NOT
0x4a8 AND
0x4a9 PUSH1 0xa0
0x4ab PUSH1 0x2
0x4ad EXP
0x4ae OR
0x4af DUP2
0x4b0 SSTORE
0x4b1 PUSH1 0x40
0x4b3 MLOAD
0x4b4 PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x4d5 SWAP2
0x4d6 SWAP1
0x4d7 LOG1
0x4d8 JUMP
---
0x48c: JUMPDEST 
0x48d: V360 = 0x0
0x490: V361 = S[0x0]
0x491: V362 = 0xff0000000000000000000000000000000000000000
0x4a7: V363 = NOT 0xff0000000000000000000000000000000000000000
0x4a8: V364 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V361
0x4a9: V365 = 0xa0
0x4ab: V366 = 0x2
0x4ad: V367 = EXP 0x2 0xa0
0x4ae: V368 = OR 0x10000000000000000000000000000000000000000 V364
0x4b0: S[0x0] = V368
0x4b1: V369 = 0x40
0x4b3: V370 = M[0x40]
0x4b4: V371 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x4d7: LOG V370 0x0 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x4d8: JUMP 0x10f
---
Entry stack: [V11, 0x10f]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4d9
[0x4d9:0x4ec]
---
Predecessors: [0x25e]
Successors: [0x4ed, 0x4f1]
---
0x4d9 JUMPDEST
0x4da PUSH1 0x0
0x4dc DUP1
0x4dd SLOAD
0x4de PUSH1 0x1
0x4e0 PUSH1 0xa0
0x4e2 PUSH1 0x2
0x4e4 EXP
0x4e5 SUB
0x4e6 AND
0x4e7 CALLER
0x4e8 EQ
0x4e9 PUSH2 0x4f1
0x4ec JUMPI
---
0x4d9: JUMPDEST 
0x4da: V372 = 0x0
0x4dd: V373 = S[0x0]
0x4de: V374 = 0x1
0x4e0: V375 = 0xa0
0x4e2: V376 = 0x2
0x4e4: V377 = EXP 0x2 0xa0
0x4e5: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e6: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x4e7: V380 = CALLER
0x4e8: V381 = EQ V380 V379
0x4e9: V382 = 0x4f1
0x4ec: JUMPI 0x4f1 V381
---
Entry stack: [V11, 0x10f]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x10f, 0x0]

================================

Block 0x4ed
[0x4ed:0x4f0]
---
Predecessors: [0x4d9]
Successors: []
---
0x4ed PUSH1 0x0
0x4ef DUP1
0x4f0 REVERT
---
0x4ed: V383 = 0x0
0x4f0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, 0x0]

================================

Block 0x4f1
[0x4f1:0x552]
---
Predecessors: [0x4d9]
Successors: [0x553, 0x557]
---
0x4f1 JUMPDEST
0x4f2 PUSH1 0x1
0x4f4 SLOAD
0x4f5 PUSH1 0x40
0x4f7 DUP1
0x4f8 MLOAD
0x4f9 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x51a DUP2
0x51b MSTORE
0x51c ADDRESS
0x51d PUSH1 0x4
0x51f DUP3
0x520 ADD
0x521 MSTORE
0x522 SWAP1
0x523 MLOAD
0x524 PUSH1 0x1
0x526 PUSH1 0xa0
0x528 PUSH1 0x2
0x52a EXP
0x52b SUB
0x52c SWAP1
0x52d SWAP3
0x52e AND
0x52f SWAP2
0x530 PUSH4 0x70a08231
0x535 SWAP2
0x536 PUSH1 0x24
0x538 DUP1
0x539 DUP3
0x53a ADD
0x53b SWAP3
0x53c PUSH1 0x20
0x53e SWAP3
0x53f SWAP1
0x540 SWAP2
0x541 SWAP1
0x542 DUP3
0x543 SWAP1
0x544 SUB
0x545 ADD
0x546 DUP2
0x547 PUSH1 0x0
0x549 DUP8
0x54a DUP1
0x54b EXTCODESIZE
0x54c ISZERO
0x54d DUP1
0x54e ISZERO
0x54f PUSH2 0x557
0x552 JUMPI
---
0x4f1: JUMPDEST 
0x4f2: V384 = 0x1
0x4f4: V385 = S[0x1]
0x4f5: V386 = 0x40
0x4f8: V387 = M[0x40]
0x4f9: V388 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x51b: M[V387] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x51c: V389 = ADDRESS
0x51d: V390 = 0x4
0x520: V391 = ADD V387 0x4
0x521: M[V391] = V389
0x523: V392 = M[0x40]
0x524: V393 = 0x1
0x526: V394 = 0xa0
0x528: V395 = 0x2
0x52a: V396 = EXP 0x2 0xa0
0x52b: V397 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52e: V398 = AND V385 0xffffffffffffffffffffffffffffffffffffffff
0x530: V399 = 0x70a08231
0x536: V400 = 0x24
0x53a: V401 = ADD V387 0x24
0x53c: V402 = 0x20
0x544: V403 = SUB V387 V392
0x545: V404 = ADD V403 0x24
0x547: V405 = 0x0
0x54b: V406 = EXTCODESIZE V398
0x54c: V407 = ISZERO V406
0x54e: V408 = ISZERO V407
0x54f: V409 = 0x557
0x552: JUMPI 0x557 V408
---
Entry stack: [V11, 0x10f, 0x0]
Stack pops: 0
Stack additions: [V398, 0x70a08231, V401, 0x20, V392, V404, V392, 0x0, V398, V407]
Exit stack: [V11, 0x10f, 0x0, V398, 0x70a08231, V401, 0x20, V392, V404, V392, 0x0, V398, V407]

================================

Block 0x553
[0x553:0x556]
---
Predecessors: [0x4f1]
Successors: []
---
0x553 PUSH1 0x0
0x555 DUP1
0x556 REVERT
---
0x553: V410 = 0x0
0x556: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f, 0x0, V398, 0x70a08231, V401, 0x20, V392, V404, V392, 0x0, V398, V407]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, 0x0, V398, 0x70a08231, V401, 0x20, V392, V404, V392, 0x0, V398, V407]

================================

Block 0x557
[0x557:0x561]
---
Predecessors: [0x4f1]
Successors: [0x562, 0x56b]
---
0x557 JUMPDEST
0x558 POP
0x559 GAS
0x55a CALL
0x55b ISZERO
0x55c DUP1
0x55d ISZERO
0x55e PUSH2 0x56b
0x561 JUMPI
---
0x557: JUMPDEST 
0x559: V411 = GAS
0x55a: V412 = CALL V411 V398 0x0 V392 V404 V392 0x20
0x55b: V413 = ISZERO V412
0x55d: V414 = ISZERO V413
0x55e: V415 = 0x56b
0x561: JUMPI 0x56b V414
---
Entry stack: [V11, 0x10f, 0x0, V398, 0x70a08231, V401, 0x20, V392, V404, V392, 0x0, V398, V407]
Stack pops: 7
Stack additions: [V413]
Exit stack: [V11, 0x10f, 0x0, V398, 0x70a08231, V401, V413]

================================

Block 0x562
[0x562:0x56a]
---
Predecessors: [0x557]
Successors: []
---
0x562 RETURNDATASIZE
0x563 PUSH1 0x0
0x565 DUP1
0x566 RETURNDATACOPY
0x567 RETURNDATASIZE
0x568 PUSH1 0x0
0x56a REVERT
---
0x562: V416 = RETURNDATASIZE
0x563: V417 = 0x0
0x566: RETURNDATACOPY 0x0 0x0 V416
0x567: V418 = RETURNDATASIZE
0x568: V419 = 0x0
0x56a: REVERT 0x0 V418
---
Entry stack: [V11, 0x10f, 0x0, V398, 0x70a08231, V401, V413]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, 0x0, V398, 0x70a08231, V401, V413]

================================

Block 0x56b
[0x56b:0x57c]
---
Predecessors: [0x557]
Successors: [0x57d, 0x581]
---
0x56b JUMPDEST
0x56c POP
0x56d POP
0x56e POP
0x56f POP
0x570 PUSH1 0x40
0x572 MLOAD
0x573 RETURNDATASIZE
0x574 PUSH1 0x20
0x576 DUP2
0x577 LT
0x578 ISZERO
0x579 PUSH2 0x581
0x57c JUMPI
---
0x56b: JUMPDEST 
0x570: V420 = 0x40
0x572: V421 = M[0x40]
0x573: V422 = RETURNDATASIZE
0x574: V423 = 0x20
0x577: V424 = LT V422 0x20
0x578: V425 = ISZERO V424
0x579: V426 = 0x581
0x57c: JUMPI 0x581 V425
---
Entry stack: [V11, 0x10f, 0x0, V398, 0x70a08231, V401, V413]
Stack pops: 4
Stack additions: [V421, V422]
Exit stack: [V11, 0x10f, 0x0, V421, V422]

================================

Block 0x57d
[0x57d:0x580]
---
Predecessors: [0x56b]
Successors: []
---
0x57d PUSH1 0x0
0x57f DUP1
0x580 REVERT
---
0x57d: V427 = 0x0
0x580: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f, 0x0, V421, V422]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, 0x0, V421, V422]

================================

Block 0x581
[0x581:0x5f3]
---
Predecessors: [0x56b]
Successors: [0x5f4, 0x5f8]
---
0x581 JUMPDEST
0x582 POP
0x583 MLOAD
0x584 PUSH1 0x1
0x586 SLOAD
0x587 PUSH1 0x0
0x589 DUP1
0x58a SLOAD
0x58b PUSH1 0x40
0x58d DUP1
0x58e MLOAD
0x58f PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5b0 DUP2
0x5b1 MSTORE
0x5b2 PUSH1 0x1
0x5b4 PUSH1 0xa0
0x5b6 PUSH1 0x2
0x5b8 EXP
0x5b9 SUB
0x5ba SWAP3
0x5bb DUP4
0x5bc AND
0x5bd PUSH1 0x4
0x5bf DUP3
0x5c0 ADD
0x5c1 MSTORE
0x5c2 PUSH1 0x24
0x5c4 DUP2
0x5c5 ADD
0x5c6 DUP7
0x5c7 SWAP1
0x5c8 MSTORE
0x5c9 SWAP1
0x5ca MLOAD
0x5cb SWAP5
0x5cc SWAP6
0x5cd POP
0x5ce SWAP3
0x5cf AND
0x5d0 SWAP3
0x5d1 PUSH4 0xa9059cbb
0x5d6 SWAP3
0x5d7 PUSH1 0x44
0x5d9 DUP1
0x5da DUP3
0x5db ADD
0x5dc SWAP4
0x5dd PUSH1 0x20
0x5df SWAP4
0x5e0 SWAP3
0x5e1 DUP4
0x5e2 SWAP1
0x5e3 SUB
0x5e4 SWAP1
0x5e5 SWAP2
0x5e6 ADD
0x5e7 SWAP1
0x5e8 DUP3
0x5e9 SWAP1
0x5ea DUP8
0x5eb DUP1
0x5ec EXTCODESIZE
0x5ed ISZERO
0x5ee DUP1
0x5ef ISZERO
0x5f0 PUSH2 0x5f8
0x5f3 JUMPI
---
0x581: JUMPDEST 
0x583: V428 = M[V421]
0x584: V429 = 0x1
0x586: V430 = S[0x1]
0x587: V431 = 0x0
0x58a: V432 = S[0x0]
0x58b: V433 = 0x40
0x58e: V434 = M[0x40]
0x58f: V435 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5b1: M[V434] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5b2: V436 = 0x1
0x5b4: V437 = 0xa0
0x5b6: V438 = 0x2
0x5b8: V439 = EXP 0x2 0xa0
0x5b9: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bc: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x5bd: V442 = 0x4
0x5c0: V443 = ADD V434 0x4
0x5c1: M[V443] = V441
0x5c2: V444 = 0x24
0x5c5: V445 = ADD V434 0x24
0x5c8: M[V445] = V428
0x5ca: V446 = M[0x40]
0x5cf: V447 = AND V430 0xffffffffffffffffffffffffffffffffffffffff
0x5d1: V448 = 0xa9059cbb
0x5d7: V449 = 0x44
0x5db: V450 = ADD V434 0x44
0x5dd: V451 = 0x20
0x5e3: V452 = SUB V434 V446
0x5e6: V453 = ADD 0x44 V452
0x5ec: V454 = EXTCODESIZE V447
0x5ed: V455 = ISZERO V454
0x5ef: V456 = ISZERO V455
0x5f0: V457 = 0x5f8
0x5f3: JUMPI 0x5f8 V456
---
Entry stack: [V11, 0x10f, 0x0, V421, V422]
Stack pops: 3
Stack additions: [V428, V447, 0xa9059cbb, V450, 0x20, V446, V453, V446, 0x0, V447, V455]
Exit stack: [V11, 0x10f, V428, V447, 0xa9059cbb, V450, 0x20, V446, V453, V446, 0x0, V447, V455]

================================

Block 0x5f4
[0x5f4:0x5f7]
---
Predecessors: [0x581]
Successors: []
---
0x5f4 PUSH1 0x0
0x5f6 DUP1
0x5f7 REVERT
---
0x5f4: V458 = 0x0
0x5f7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f, V428, V447, 0xa9059cbb, V450, 0x20, V446, V453, V446, 0x0, V447, V455]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, V428, V447, 0xa9059cbb, V450, 0x20, V446, V453, V446, 0x0, V447, V455]

================================

Block 0x5f8
[0x5f8:0x602]
---
Predecessors: [0x581]
Successors: [0x603, 0x60c]
---
0x5f8 JUMPDEST
0x5f9 POP
0x5fa GAS
0x5fb CALL
0x5fc ISZERO
0x5fd DUP1
0x5fe ISZERO
0x5ff PUSH2 0x60c
0x602 JUMPI
---
0x5f8: JUMPDEST 
0x5fa: V459 = GAS
0x5fb: V460 = CALL V459 V447 0x0 V446 V453 V446 0x20
0x5fc: V461 = ISZERO V460
0x5fe: V462 = ISZERO V461
0x5ff: V463 = 0x60c
0x602: JUMPI 0x60c V462
---
Entry stack: [V11, 0x10f, V428, V447, 0xa9059cbb, V450, 0x20, V446, V453, V446, 0x0, V447, V455]
Stack pops: 7
Stack additions: [V461]
Exit stack: [V11, 0x10f, V428, V447, 0xa9059cbb, V450, V461]

================================

Block 0x603
[0x603:0x60b]
---
Predecessors: [0x5f8]
Successors: []
---
0x603 RETURNDATASIZE
0x604 PUSH1 0x0
0x606 DUP1
0x607 RETURNDATACOPY
0x608 RETURNDATASIZE
0x609 PUSH1 0x0
0x60b REVERT
---
0x603: V464 = RETURNDATASIZE
0x604: V465 = 0x0
0x607: RETURNDATACOPY 0x0 0x0 V464
0x608: V466 = RETURNDATASIZE
0x609: V467 = 0x0
0x60b: REVERT 0x0 V466
---
Entry stack: [V11, 0x10f, V428, V447, 0xa9059cbb, V450, V461]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, V428, V447, 0xa9059cbb, V450, V461]

================================

Block 0x60c
[0x60c:0x61d]
---
Predecessors: [0x5f8]
Successors: [0x37c, 0x61e]
---
0x60c JUMPDEST
0x60d POP
0x60e POP
0x60f POP
0x610 POP
0x611 PUSH1 0x40
0x613 MLOAD
0x614 RETURNDATASIZE
0x615 PUSH1 0x20
0x617 DUP2
0x618 LT
0x619 ISZERO
0x61a PUSH2 0x37c
0x61d JUMPI
---
0x60c: JUMPDEST 
0x611: V468 = 0x40
0x613: V469 = M[0x40]
0x614: V470 = RETURNDATASIZE
0x615: V471 = 0x20
0x618: V472 = LT V470 0x20
0x619: V473 = ISZERO V472
0x61a: V474 = 0x37c
0x61d: JUMPI 0x37c V473
---
Entry stack: [V11, 0x10f, V428, V447, 0xa9059cbb, V450, V461]
Stack pops: 4
Stack additions: [V469, V470]
Exit stack: [V11, 0x10f, V428, V469, V470]

================================

Block 0x61e
[0x61e:0x621]
---
Predecessors: [0x60c]
Successors: []
---
0x61e PUSH1 0x0
0x620 DUP1
0x621 REVERT
---
0x61e: V475 = 0x0
0x621: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f, V428, V469, V470]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, V428, V469, V470]

================================

Block 0x622
[0x622:0x630]
---
Predecessors: [0x273]
Successors: [0x1df]
---
0x622 JUMPDEST
0x623 PUSH1 0x0
0x625 SLOAD
0x626 PUSH1 0x1
0x628 PUSH1 0xa0
0x62a PUSH1 0x2
0x62c EXP
0x62d SUB
0x62e AND
0x62f DUP2
0x630 JUMP
---
0x622: JUMPDEST 
0x623: V476 = 0x0
0x625: V477 = S[0x0]
0x626: V478 = 0x1
0x628: V479 = 0xa0
0x62a: V480 = 0x2
0x62c: V481 = EXP 0x2 0xa0
0x62d: V482 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62e: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x630: JUMP 0x1df
---
Entry stack: [V11, 0x1df]
Stack pops: 1
Stack additions: [S0, V483]
Exit stack: [V11, 0x1df, V483]

================================

Block 0x631
[0x631:0x643]
---
Predecessors: [0x288]
Successors: [0x644, 0x648]
---
0x631 JUMPDEST
0x632 PUSH1 0x0
0x634 SLOAD
0x635 PUSH1 0x1
0x637 PUSH1 0xa0
0x639 PUSH1 0x2
0x63b EXP
0x63c SUB
0x63d AND
0x63e CALLER
0x63f EQ
0x640 PUSH2 0x648
0x643 JUMPI
---
0x631: JUMPDEST 
0x632: V484 = 0x0
0x634: V485 = S[0x0]
0x635: V486 = 0x1
0x637: V487 = 0xa0
0x639: V488 = 0x2
0x63b: V489 = EXP 0x2 0xa0
0x63c: V490 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63d: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V485
0x63e: V492 = CALLER
0x63f: V493 = EQ V492 V491
0x640: V494 = 0x648
0x643: JUMPI 0x648 V493
---
Entry stack: [V11, 0x10f, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, V190]

================================

Block 0x644
[0x644:0x647]
---
Predecessors: [0x631]
Successors: []
---
0x644 PUSH1 0x0
0x646 DUP1
0x647 REVERT
---
0x644: V495 = 0x0
0x647: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, V190]

================================

Block 0x648
[0x648:0x658]
---
Predecessors: [0x631]
Successors: [0x10f]
---
0x648 JUMPDEST
0x649 PUSH1 0x8
0x64b DUP2
0x64c SWAP1
0x64d SSTORE
0x64e TIMESTAMP
0x64f PUSH1 0x6
0x651 DUP2
0x652 SWAP1
0x653 SSTORE
0x654 ADD
0x655 PUSH1 0x7
0x657 SSTORE
0x658 JUMP
---
0x648: JUMPDEST 
0x649: V496 = 0x8
0x64d: S[0x8] = V190
0x64e: V497 = TIMESTAMP
0x64f: V498 = 0x6
0x653: S[0x6] = V497
0x654: V499 = ADD V497 V190
0x655: V500 = 0x7
0x657: S[0x7] = V499
0x658: JUMP 0x10f
---
Entry stack: [V11, 0x10f, V190]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x659
[0x659:0x65e]
---
Predecessors: [0x2a0]
Successors: [0x126]
---
0x659 JUMPDEST
0x65a PUSH1 0x6
0x65c SLOAD
0x65d DUP2
0x65e JUMP
---
0x659: JUMPDEST 
0x65a: V501 = 0x6
0x65c: V502 = S[0x6]
0x65e: JUMP 0x126
---
Entry stack: [V11, 0x126]
Stack pops: 1
Stack additions: [S0, V502]
Exit stack: [V11, 0x126, V502]

================================

Block 0x65f
[0x65f:0x671]
---
Predecessors: [0x2c9]
Successors: [0x672, 0x676]
---
0x65f JUMPDEST
0x660 PUSH1 0x0
0x662 SLOAD
0x663 PUSH1 0x1
0x665 PUSH1 0xa0
0x667 PUSH1 0x2
0x669 EXP
0x66a SUB
0x66b AND
0x66c CALLER
0x66d EQ
0x66e PUSH2 0x676
0x671 JUMPI
---
0x65f: JUMPDEST 
0x660: V503 = 0x0
0x662: V504 = S[0x0]
0x663: V505 = 0x1
0x665: V506 = 0xa0
0x667: V507 = 0x2
0x669: V508 = EXP 0x2 0xa0
0x66a: V509 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66b: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x66c: V511 = CALLER
0x66d: V512 = EQ V511 V510
0x66e: V513 = 0x676
0x671: JUMPI 0x676 V512
---
Entry stack: [V11, 0x10f, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, V220]

================================

Block 0x672
[0x672:0x675]
---
Predecessors: [0x65f]
Successors: []
---
0x672 PUSH1 0x0
0x674 DUP1
0x675 REVERT
---
0x672: V514 = 0x0
0x675: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, V220]

================================

Block 0x676
[0x676:0x686]
---
Predecessors: [0x65f]
Successors: [0x687, 0x68b]
---
0x676 JUMPDEST
0x677 PUSH1 0x1
0x679 PUSH1 0xa0
0x67b PUSH1 0x2
0x67d EXP
0x67e SUB
0x67f DUP2
0x680 AND
0x681 ISZERO
0x682 ISZERO
0x683 PUSH2 0x68b
0x686 JUMPI
---
0x676: JUMPDEST 
0x677: V515 = 0x1
0x679: V516 = 0xa0
0x67b: V517 = 0x2
0x67d: V518 = EXP 0x2 0xa0
0x67e: V519 = SUB 0x10000000000000000000000000000000000000000 0x1
0x680: V520 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x681: V521 = ISZERO V520
0x682: V522 = ISZERO V521
0x683: V523 = 0x68b
0x686: JUMPI 0x68b V522
---
Entry stack: [V11, 0x10f, V220]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x10f, V220]

================================

Block 0x687
[0x687:0x68a]
---
Predecessors: [0x676]
Successors: []
---
0x687 PUSH1 0x0
0x689 DUP1
0x68a REVERT
---
0x687: V524 = 0x0
0x68a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, V220]

================================

Block 0x68b
[0x68b:0x6f2]
---
Predecessors: [0x676]
Successors: [0x10f]
---
0x68b JUMPDEST
0x68c PUSH1 0x0
0x68e DUP1
0x68f SLOAD
0x690 PUSH1 0x40
0x692 MLOAD
0x693 PUSH1 0x1
0x695 PUSH1 0xa0
0x697 PUSH1 0x2
0x699 EXP
0x69a SUB
0x69b DUP1
0x69c DUP6
0x69d AND
0x69e SWAP4
0x69f SWAP3
0x6a0 AND
0x6a1 SWAP2
0x6a2 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6c3 SWAP2
0x6c4 LOG3
0x6c5 PUSH1 0x0
0x6c7 DUP1
0x6c8 SLOAD
0x6c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6de NOT
0x6df AND
0x6e0 PUSH1 0x1
0x6e2 PUSH1 0xa0
0x6e4 PUSH1 0x2
0x6e6 EXP
0x6e7 SUB
0x6e8 SWAP3
0x6e9 SWAP1
0x6ea SWAP3
0x6eb AND
0x6ec SWAP2
0x6ed SWAP1
0x6ee SWAP2
0x6ef OR
0x6f0 SWAP1
0x6f1 SSTORE
0x6f2 JUMP
---
0x68b: JUMPDEST 
0x68c: V525 = 0x0
0x68f: V526 = S[0x0]
0x690: V527 = 0x40
0x692: V528 = M[0x40]
0x693: V529 = 0x1
0x695: V530 = 0xa0
0x697: V531 = 0x2
0x699: V532 = EXP 0x2 0xa0
0x69a: V533 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69d: V534 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x6a0: V535 = AND V526 0xffffffffffffffffffffffffffffffffffffffff
0x6a2: V536 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6c4: LOG V528 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V535 V534
0x6c5: V537 = 0x0
0x6c8: V538 = S[0x0]
0x6c9: V539 = 0xffffffffffffffffffffffffffffffffffffffff
0x6de: V540 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6df: V541 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V538
0x6e0: V542 = 0x1
0x6e2: V543 = 0xa0
0x6e4: V544 = 0x2
0x6e6: V545 = EXP 0x2 0xa0
0x6e7: V546 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6eb: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x6ef: V548 = OR V547 V541
0x6f1: S[0x0] = V548
0x6f2: JUMP 0x10f
---
Entry stack: [V11, 0x10f, V220]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f3
[0x6f3:0x701]
---
Predecessors: [0x2ea]
Successors: [0x1df]
---
0x6f3 JUMPDEST
0x6f4 PUSH1 0x1
0x6f6 SLOAD
0x6f7 PUSH1 0x1
0x6f9 PUSH1 0xa0
0x6fb PUSH1 0x2
0x6fd EXP
0x6fe SUB
0x6ff AND
0x700 DUP2
0x701 JUMP
---
0x6f3: JUMPDEST 
0x6f4: V549 = 0x1
0x6f6: V550 = S[0x1]
0x6f7: V551 = 0x1
0x6f9: V552 = 0xa0
0x6fb: V553 = 0x2
0x6fd: V554 = EXP 0x2 0xa0
0x6fe: V555 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ff: V556 = AND 0xffffffffffffffffffffffffffffffffffffffff V550
0x701: JUMP 0x1df
---
Entry stack: [V11, 0x1df]
Stack pops: 1
Stack additions: [S0, V556]
Exit stack: [V11, 0x1df, V556]

================================

Block 0x702
[0x702:0x714]
---
Predecessors: [0x2f3]
Successors: [0x715, 0x719]
---
0x702 JUMPDEST
0x703 PUSH1 0x0
0x705 SLOAD
0x706 PUSH1 0xa0
0x708 PUSH1 0x2
0x70a EXP
0x70b SWAP1
0x70c DIV
0x70d PUSH1 0xff
0x70f AND
0x710 ISZERO
0x711 PUSH2 0x719
0x714 JUMPI
---
0x702: JUMPDEST 
0x703: V557 = 0x0
0x705: V558 = S[0x0]
0x706: V559 = 0xa0
0x708: V560 = 0x2
0x70a: V561 = EXP 0x2 0xa0
0x70c: V562 = DIV V558 0x10000000000000000000000000000000000000000
0x70d: V563 = 0xff
0x70f: V564 = AND 0xff V562
0x710: V565 = ISZERO V564
0x711: V566 = 0x719
0x714: JUMPI 0x719 V565
---
Entry stack: [V11, 0x10f, S5, V228, 0x0, 0x300, S1, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, S5, V228, 0x0, 0x300, S1, V228]

================================

Block 0x715
[0x715:0x718]
---
Predecessors: [0x702]
Successors: []
---
0x715 PUSH1 0x0
0x717 DUP1
0x718 REVERT
---
0x715: V567 = 0x0
0x718: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f, S5, V228, 0x0, 0x300, S1, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, S5, V228, 0x0, 0x300, S1, V228]

================================

Block 0x719
[0x719:0x729]
---
Predecessors: [0x702]
Successors: [0x72a, 0x72e]
---
0x719 JUMPDEST
0x71a PUSH1 0x1
0x71c PUSH1 0xa0
0x71e PUSH1 0x2
0x720 EXP
0x721 SUB
0x722 DUP3
0x723 AND
0x724 ISZERO
0x725 ISZERO
0x726 PUSH2 0x72e
0x729 JUMPI
---
0x719: JUMPDEST 
0x71a: V568 = 0x1
0x71c: V569 = 0xa0
0x71e: V570 = 0x2
0x720: V571 = EXP 0x2 0xa0
0x721: V572 = SUB 0x10000000000000000000000000000000000000000 0x1
0x723: V573 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x724: V574 = ISZERO V573
0x725: V575 = ISZERO V574
0x726: V576 = 0x72e
0x729: JUMPI 0x72e V575
---
Entry stack: [V11, 0x10f, S5, V228, 0x0, 0x300, S1, V228]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x10f, S5, V228, 0x0, 0x300, S1, V228]

================================

Block 0x72a
[0x72a:0x72d]
---
Predecessors: [0x719]
Successors: []
---
0x72a PUSH1 0x0
0x72c DUP1
0x72d REVERT
---
0x72a: V577 = 0x0
0x72d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f, S5, V228, 0x0, 0x300, S1, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, S5, V228, 0x0, 0x300, S1, V228]

================================

Block 0x72e
[0x72e:0x738]
---
Predecessors: [0x719]
Successors: [0x739, 0x73d]
---
0x72e JUMPDEST
0x72f PUSH1 0x9
0x731 SLOAD
0x732 DUP2
0x733 LT
0x734 ISZERO
0x735 PUSH2 0x73d
0x738 JUMPI
---
0x72e: JUMPDEST 
0x72f: V578 = 0x9
0x731: V579 = S[0x9]
0x733: V580 = LT V228 V579
0x734: V581 = ISZERO V580
0x735: V582 = 0x73d
0x738: JUMPI 0x73d V581
---
Entry stack: [V11, 0x10f, S5, V228, 0x0, 0x300, S1, V228]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x10f, S5, V228, 0x0, 0x300, S1, V228]

================================

Block 0x739
[0x739:0x73c]
---
Predecessors: [0x72e]
Successors: []
---
0x739 PUSH1 0x0
0x73b DUP1
0x73c REVERT
---
0x739: V583 = 0x0
0x73c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f, S5, V228, 0x0, 0x300, S1, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, S5, V228, 0x0, 0x300, S1, V228]

================================

Block 0x73d
[0x73d:0x749]
---
Predecessors: [0x72e]
Successors: [0x74a, 0x751]
---
0x73d JUMPDEST
0x73e PUSH1 0x6
0x740 SLOAD
0x741 TIMESTAMP
0x742 LT
0x743 ISZERO
0x744 DUP1
0x745 ISZERO
0x746 PUSH2 0x751
0x749 JUMPI
---
0x73d: JUMPDEST 
0x73e: V584 = 0x6
0x740: V585 = S[0x6]
0x741: V586 = TIMESTAMP
0x742: V587 = LT V586 V585
0x743: V588 = ISZERO V587
0x745: V589 = ISZERO V588
0x746: V590 = 0x751
0x749: JUMPI 0x751 V589
---
Entry stack: [V11, 0x10f, S5, V228, 0x0, 0x300, S1, V228]
Stack pops: 0
Stack additions: [V588]
Exit stack: [V11, 0x10f, S5, V228, 0x0, 0x300, S1, V228, V588]

================================

Block 0x74a
[0x74a:0x750]
---
Predecessors: [0x73d]
Successors: [0x751]
---
0x74a POP
0x74b PUSH1 0x7
0x74d SLOAD
0x74e TIMESTAMP
0x74f GT
0x750 ISZERO
---
0x74b: V591 = 0x7
0x74d: V592 = S[0x7]
0x74e: V593 = TIMESTAMP
0x74f: V594 = GT V593 V592
0x750: V595 = ISZERO V594
---
Entry stack: [V11, 0x10f, S6, V228, 0x0, 0x300, S2, V228, V588]
Stack pops: 1
Stack additions: [V595]
Exit stack: [V11, 0x10f, S6, V228, 0x0, 0x300, S2, V228, V595]

================================

Block 0x751
[0x751:0x757]
---
Predecessors: [0x73d, 0x74a]
Successors: [0x758, 0x75c]
---
0x751 JUMPDEST
0x752 ISZERO
0x753 ISZERO
0x754 PUSH2 0x75c
0x757 JUMPI
---
0x751: JUMPDEST 
0x752: V596 = ISZERO S0
0x753: V597 = ISZERO V596
0x754: V598 = 0x75c
0x757: JUMPI 0x75c V597
---
Entry stack: [V11, 0x10f, S6, V228, 0x0, 0x300, S2, V228, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x10f, S6, V228, 0x0, 0x300, S2, V228]

================================

Block 0x758
[0x758:0x75b]
---
Predecessors: [0x751]
Successors: []
---
0x758 PUSH1 0x0
0x75a DUP1
0x75b REVERT
---
0x758: V599 = 0x0
0x75b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f, S5, V228, 0x0, 0x300, S1, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, S5, V228, 0x0, 0x300, S1, V228]

================================

Block 0x75c
[0x75c:0x75f]
---
Predecessors: [0x751, 0x8a1]
Successors: [0x300, 0x32c]
---
0x75c JUMPDEST
0x75d POP
0x75e POP
0x75f JUMP
---
0x75c: JUMPDEST 
0x75f: JUMP {0x300, 0x32c}
---
Entry stack: [V11, 0x10f, S8, S7, {0x0, 0x10f}, S5, V228, S3, {0x300, 0x32c}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x10f, S8, S7, {0x0, 0x10f}, S5, V228, S3]

================================

Block 0x760
[0x760:0x776]
---
Predecessors: [0x300]
Successors: [0x7dd]
---
0x760 JUMPDEST
0x761 PUSH1 0x0
0x763 PUSH2 0x777
0x766 PUSH1 0x4
0x768 SLOAD
0x769 DUP4
0x76a PUSH2 0x7dd
0x76d SWAP1
0x76e SWAP2
0x76f SWAP1
0x770 PUSH4 0xffffffff
0x775 AND
0x776 JUMP
---
0x760: JUMPDEST 
0x761: V600 = 0x0
0x763: V601 = 0x777
0x766: V602 = 0x4
0x768: V603 = S[0x4]
0x76a: V604 = 0x7dd
0x770: V605 = 0xffffffff
0x775: V606 = AND 0xffffffff 0x7dd
0x776: JUMP 0x7dd
---
Entry stack: [V11, 0x10f, S7, S6, {0x0, 0x10f}, S4, V228, S2, 0x309, V228]
Stack pops: 1
Stack additions: [S0, 0x0, 0x777, S0, V603]
Exit stack: [V11, 0x10f, S7, S6, {0x0, 0x10f}, S4, V228, S2, 0x309, V228, 0x0, 0x777, V228, V603]

================================

Block 0x777
[0x777:0x77c]
---
Predecessors: [0x790]
Successors: [0x309]
---
0x777 JUMPDEST
0x778 SWAP3
0x779 SWAP2
0x77a POP
0x77b POP
0x77c JUMP
---
0x777: JUMPDEST 
0x77c: JUMP S3
---
Entry stack: [V11, 0x10f, S9, S8, {0x0, 0x10f}, S6, S5, S4, S3, V228, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0x10f, S9, S8, {0x0, 0x10f}, S6, S5, S4, S0]

================================

Block 0x77d
[0x77d:0x78a]
---
Predecessors: [0x309]
Successors: [0x78b, 0x78c]
---
0x77d JUMPDEST
0x77e PUSH1 0x0
0x780 DUP3
0x781 DUP3
0x782 ADD
0x783 DUP4
0x784 DUP2
0x785 LT
0x786 ISZERO
0x787 PUSH2 0x78c
0x78a JUMPI
---
0x77d: JUMPDEST 
0x77e: V607 = 0x0
0x782: V608 = ADD S0 V235
0x785: V609 = LT V608 V235
0x786: V610 = ISZERO V609
0x787: V611 = 0x78c
0x78a: JUMPI 0x78c V610
---
Entry stack: [V11, 0x10f, S5, S4, S3, 0x31f, V235, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V608]
Exit stack: [V11, 0x10f, S5, S4, S3, 0x31f, V235, S0, 0x0, V608]

================================

Block 0x78b
[0x78b:0x78b]
---
Predecessors: [0x77d]
Successors: []
---
0x78b INVALID
---
0x78b: INVALID 
---
Entry stack: [V11, 0x10f, S7, S6, S5, 0x31f, V235, S2, 0x0, V608]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, S7, S6, S5, 0x31f, V235, S2, 0x0, V608]

================================

Block 0x78c
[0x78c:0x78f]
---
Predecessors: [0x77d, 0x800]
Successors: [0x790]
---
0x78c JUMPDEST
0x78d DUP1
0x78e SWAP2
0x78f POP
---
0x78c: JUMPDEST 
---
Entry stack: [V11, 0x10f, S13, S12, {0x0, 0x10f}, S10, S9, S8, S7, S6, S5, {0x31f, 0x777}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V11, 0x10f, S13, S12, {0x0, 0x10f}, S10, S9, S8, S7, S6, S5, {0x31f, 0x777}, S3, S2, S0, S0]

================================

Block 0x790
[0x790:0x796]
---
Predecessors: [0x78c, 0x7e8]
Successors: [0x31f, 0x777]
---
0x790 JUMPDEST
0x791 POP
0x792 SWAP3
0x793 SWAP2
0x794 POP
0x795 POP
0x796 JUMP
---
0x790: JUMPDEST 
0x796: JUMP {0x31f, 0x777}
---
Entry stack: [V11, 0x10f, S13, S12, {0x0, 0x10f}, S10, S9, S8, S7, V228, S5, {0x31f, 0x777}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, 0x10f, S13, S12, {0x0, 0x10f}, S10, S9, S8, S7, V228, S5, S1]

================================

Block 0x797
[0x797:0x7a0]
---
Predecessors: [0x31f]
Successors: [0x808]
---
0x797 JUMPDEST
0x798 PUSH2 0x75c
0x79b DUP3
0x79c DUP3
0x79d PUSH2 0x808
0x7a0 JUMP
---
0x797: JUMPDEST 
0x798: V612 = 0x75c
0x79d: V613 = 0x808
0x7a0: JUMP 0x808
---
Entry stack: [V11, 0x10f, S11, S10, {0x0, 0x10f}, S8, S7, S6, S5, V228, S3, 0x32c, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x75c, S1, S0]
Exit stack: [V11, 0x10f, S11, S10, {0x0, 0x10f}, S8, S7, S6, S5, V228, S3, 0x32c, S1, S0, 0x75c, S1, S0]

================================

Block 0x7a1
[0x7a1:0x7d0]
---
Predecessors: [0x32c]
Successors: [0x7d1, 0x7da]
---
0x7a1 JUMPDEST
0x7a2 PUSH1 0x2
0x7a4 SLOAD
0x7a5 PUSH1 0x40
0x7a7 MLOAD
0x7a8 PUSH1 0x1
0x7aa PUSH1 0xa0
0x7ac PUSH1 0x2
0x7ae EXP
0x7af SUB
0x7b0 SWAP1
0x7b1 SWAP2
0x7b2 AND
0x7b3 SWAP1
0x7b4 CALLVALUE
0x7b5 DUP1
0x7b6 ISZERO
0x7b7 PUSH2 0x8fc
0x7ba MUL
0x7bb SWAP2
0x7bc PUSH1 0x0
0x7be DUP2
0x7bf DUP2
0x7c0 DUP2
0x7c1 DUP6
0x7c2 DUP9
0x7c3 DUP9
0x7c4 CALL
0x7c5 SWAP4
0x7c6 POP
0x7c7 POP
0x7c8 POP
0x7c9 POP
0x7ca ISZERO
0x7cb DUP1
0x7cc ISZERO
0x7cd PUSH2 0x7da
0x7d0 JUMPI
---
0x7a1: JUMPDEST 
0x7a2: V614 = 0x2
0x7a4: V615 = S[0x2]
0x7a5: V616 = 0x40
0x7a7: V617 = M[0x40]
0x7a8: V618 = 0x1
0x7aa: V619 = 0xa0
0x7ac: V620 = 0x2
0x7ae: V621 = EXP 0x2 0xa0
0x7af: V622 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b2: V623 = AND V615 0xffffffffffffffffffffffffffffffffffffffff
0x7b4: V624 = CALLVALUE
0x7b6: V625 = ISZERO V624
0x7b7: V626 = 0x8fc
0x7ba: V627 = MUL 0x8fc V625
0x7bc: V628 = 0x0
0x7c4: V629 = CALL V627 V623 V624 V617 0x0 V617 0x0
0x7ca: V630 = ISZERO V629
0x7cc: V631 = ISZERO V630
0x7cd: V632 = 0x7da
0x7d0: JUMPI 0x7da V631
---
Entry stack: [V11, 0x10f, S6, S5, {0x0, 0x10f}, S3, V228, S1, 0x37c]
Stack pops: 0
Stack additions: [V630]
Exit stack: [V11, 0x10f, S6, S5, {0x0, 0x10f}, S3, V228, S1, 0x37c, V630]

================================

Block 0x7d1
[0x7d1:0x7d9]
---
Predecessors: [0x7a1]
Successors: []
---
0x7d1 RETURNDATASIZE
0x7d2 PUSH1 0x0
0x7d4 DUP1
0x7d5 RETURNDATACOPY
0x7d6 RETURNDATASIZE
0x7d7 PUSH1 0x0
0x7d9 REVERT
---
0x7d1: V633 = RETURNDATASIZE
0x7d2: V634 = 0x0
0x7d5: RETURNDATACOPY 0x0 0x0 V633
0x7d6: V635 = RETURNDATASIZE
0x7d7: V636 = 0x0
0x7d9: REVERT 0x0 V635
---
Entry stack: [V11, 0x10f, S7, S6, {0x0, 0x10f}, S4, V228, S2, 0x37c, V630]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, S7, S6, {0x0, 0x10f}, S4, V228, S2, 0x37c, V630]

================================

Block 0x7da
[0x7da:0x7dc]
---
Predecessors: [0x7a1]
Successors: [0x37c]
---
0x7da JUMPDEST
0x7db POP
0x7dc JUMP
---
0x7da: JUMPDEST 
0x7dc: JUMP 0x37c
---
Entry stack: [V11, 0x10f, S7, S6, {0x0, 0x10f}, S4, V228, S2, 0x37c, V630]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x10f, S7, S6, {0x0, 0x10f}, S4, V228, S2]

================================

Block 0x7dd
[0x7dd:0x7e7]
---
Predecessors: [0x760]
Successors: [0x7e8, 0x7f0]
---
0x7dd JUMPDEST
0x7de PUSH1 0x0
0x7e0 DUP1
0x7e1 DUP4
0x7e2 ISZERO
0x7e3 ISZERO
0x7e4 PUSH2 0x7f0
0x7e7 JUMPI
---
0x7dd: JUMPDEST 
0x7de: V637 = 0x0
0x7e2: V638 = ISZERO V228
0x7e3: V639 = ISZERO V638
0x7e4: V640 = 0x7f0
0x7e7: JUMPI 0x7f0 V639
---
Entry stack: [V11, 0x10f, S11, S10, {0x0, 0x10f}, S8, V228, S6, 0x309, V228, 0x0, 0x777, V228, V603]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, 0x10f, S11, S10, {0x0, 0x10f}, S8, V228, S6, 0x309, V228, 0x0, 0x777, V228, V603, 0x0, 0x0]

================================

Block 0x7e8
[0x7e8:0x7ef]
---
Predecessors: [0x7dd]
Successors: [0x790]
---
0x7e8 PUSH1 0x0
0x7ea SWAP2
0x7eb POP
0x7ec PUSH2 0x790
0x7ef JUMP
---
0x7e8: V641 = 0x0
0x7ec: V642 = 0x790
0x7ef: JUMP 0x790
---
Entry stack: [V11, 0x10f, S13, S12, {0x0, 0x10f}, S10, V228, S8, 0x309, V228, 0x0, 0x777, V228, V603, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x10f, S13, S12, {0x0, 0x10f}, S10, V228, S8, 0x309, V228, 0x0, 0x777, V228, V603, 0x0, 0x0]

================================

Block 0x7f0
[0x7f0:0x7fe]
---
Predecessors: [0x7dd]
Successors: [0x7ff, 0x800]
---
0x7f0 JUMPDEST
0x7f1 POP
0x7f2 DUP3
0x7f3 DUP3
0x7f4 MUL
0x7f5 DUP3
0x7f6 DUP5
0x7f7 DUP3
0x7f8 DUP2
0x7f9 ISZERO
0x7fa ISZERO
0x7fb PUSH2 0x800
0x7fe JUMPI
---
0x7f0: JUMPDEST 
0x7f4: V643 = MUL V603 V228
0x7f9: V644 = ISZERO V228
0x7fa: V645 = ISZERO V644
0x7fb: V646 = 0x800
0x7fe: JUMPI 0x800 V645
---
Entry stack: [V11, 0x10f, S13, S12, {0x0, 0x10f}, S10, V228, S8, 0x309, V228, 0x0, 0x777, V228, V603, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V643, S2, S3, V643]
Exit stack: [V11, 0x10f, S13, S12, {0x0, 0x10f}, S10, V228, S8, 0x309, V228, 0x0, 0x777, V228, V603, 0x0, V643, V603, V228, V643]

================================

Block 0x7ff
[0x7ff:0x7ff]
---
Predecessors: [0x7f0]
Successors: []
---
0x7ff INVALID
---
0x7ff: INVALID 
---
Entry stack: [V11, 0x10f, S16, S15, {0x0, 0x10f}, S13, V228, S11, 0x309, V228, 0x0, 0x777, V228, V603, 0x0, V643, V603, V228, V643]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, S16, S15, {0x0, 0x10f}, S13, V228, S11, 0x309, V228, 0x0, 0x777, V228, V603, 0x0, V643, V603, V228, V643]

================================

Block 0x800
[0x800:0x806]
---
Predecessors: [0x7f0]
Successors: [0x78c, 0x807]
---
0x800 JUMPDEST
0x801 DIV
0x802 EQ
0x803 PUSH2 0x78c
0x806 JUMPI
---
0x800: JUMPDEST 
0x801: V647 = DIV V643 V228
0x802: V648 = EQ V647 V603
0x803: V649 = 0x78c
0x806: JUMPI 0x78c V648
---
Entry stack: [V11, 0x10f, S16, S15, {0x0, 0x10f}, S13, V228, S11, 0x309, V228, 0x0, 0x777, V228, V603, 0x0, V643, V603, V228, V643]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x10f, S16, S15, {0x0, 0x10f}, S13, V228, S11, 0x309, V228, 0x0, 0x777, V228, V603, 0x0, V643]

================================

Block 0x807
[0x807:0x807]
---
Predecessors: [0x800]
Successors: []
---
0x807 INVALID
---
0x807: INVALID 
---
Entry stack: [V11, 0x10f, S13, S12, {0x0, 0x10f}, S10, V228, S8, 0x309, V228, 0x0, 0x777, V228, V603, 0x0, V643]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, S13, S12, {0x0, 0x10f}, S10, V228, S8, 0x309, V228, 0x0, 0x777, V228, V603, 0x0, V643]

================================

Block 0x808
[0x808:0x872]
---
Predecessors: [0x797]
Successors: [0x873, 0x877]
---
0x808 JUMPDEST
0x809 PUSH1 0x1
0x80b SLOAD
0x80c PUSH1 0x40
0x80e DUP1
0x80f MLOAD
0x810 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x831 DUP2
0x832 MSTORE
0x833 PUSH1 0x1
0x835 PUSH1 0xa0
0x837 PUSH1 0x2
0x839 EXP
0x83a SUB
0x83b DUP6
0x83c DUP2
0x83d AND
0x83e PUSH1 0x4
0x840 DUP4
0x841 ADD
0x842 MSTORE
0x843 PUSH1 0x24
0x845 DUP3
0x846 ADD
0x847 DUP6
0x848 SWAP1
0x849 MSTORE
0x84a SWAP2
0x84b MLOAD
0x84c SWAP2
0x84d SWAP1
0x84e SWAP3
0x84f AND
0x850 SWAP2
0x851 PUSH4 0xa9059cbb
0x856 SWAP2
0x857 PUSH1 0x44
0x859 DUP1
0x85a DUP4
0x85b ADD
0x85c SWAP3
0x85d PUSH1 0x20
0x85f SWAP3
0x860 SWAP2
0x861 SWAP1
0x862 DUP3
0x863 SWAP1
0x864 SUB
0x865 ADD
0x866 DUP2
0x867 PUSH1 0x0
0x869 DUP8
0x86a DUP1
0x86b EXTCODESIZE
0x86c ISZERO
0x86d DUP1
0x86e ISZERO
0x86f PUSH2 0x877
0x872 JUMPI
---
0x808: JUMPDEST 
0x809: V650 = 0x1
0x80b: V651 = S[0x1]
0x80c: V652 = 0x40
0x80f: V653 = M[0x40]
0x810: V654 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x832: M[V653] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x833: V655 = 0x1
0x835: V656 = 0xa0
0x837: V657 = 0x2
0x839: V658 = EXP 0x2 0xa0
0x83a: V659 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83d: V660 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x83e: V661 = 0x4
0x841: V662 = ADD V653 0x4
0x842: M[V662] = V660
0x843: V663 = 0x24
0x846: V664 = ADD V653 0x24
0x849: M[V664] = S0
0x84b: V665 = M[0x40]
0x84f: V666 = AND V651 0xffffffffffffffffffffffffffffffffffffffff
0x851: V667 = 0xa9059cbb
0x857: V668 = 0x44
0x85b: V669 = ADD V653 0x44
0x85d: V670 = 0x20
0x864: V671 = SUB V653 V665
0x865: V672 = ADD V671 0x44
0x867: V673 = 0x0
0x86b: V674 = EXTCODESIZE V666
0x86c: V675 = ISZERO V674
0x86e: V676 = ISZERO V675
0x86f: V677 = 0x877
0x872: JUMPI 0x877 V676
---
Entry stack: [V11, 0x10f, S11, S10, {0x0, 0x10f}, S8, V228, S6, 0x32c, S4, S3, 0x75c, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V666, 0xa9059cbb, V669, 0x20, V665, V672, V665, 0x0, V666, V675]
Exit stack: [V11, 0x10f, S11, S10, {0x0, 0x10f}, S8, V228, S6, 0x32c, S4, S3, 0x75c, S1, S0, V666, 0xa9059cbb, V669, 0x20, V665, V672, V665, 0x0, V666, V675]

================================

Block 0x873
[0x873:0x876]
---
Predecessors: [0x808]
Successors: []
---
0x873 PUSH1 0x0
0x875 DUP1
0x876 REVERT
---
0x873: V678 = 0x0
0x876: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f, S21, S20, {0x0, 0x10f}, S18, V228, S16, 0x32c, S14, S13, 0x75c, S11, S10, V666, 0xa9059cbb, V669, 0x20, V665, V672, V665, 0x0, V666, V675]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, S21, S20, {0x0, 0x10f}, S18, V228, S16, 0x32c, S14, S13, 0x75c, S11, S10, V666, 0xa9059cbb, V669, 0x20, V665, V672, V665, 0x0, V666, V675]

================================

Block 0x877
[0x877:0x881]
---
Predecessors: [0x808]
Successors: [0x882, 0x88b]
---
0x877 JUMPDEST
0x878 POP
0x879 GAS
0x87a CALL
0x87b ISZERO
0x87c DUP1
0x87d ISZERO
0x87e PUSH2 0x88b
0x881 JUMPI
---
0x877: JUMPDEST 
0x879: V679 = GAS
0x87a: V680 = CALL V679 V666 0x0 V665 V672 V665 0x20
0x87b: V681 = ISZERO V680
0x87d: V682 = ISZERO V681
0x87e: V683 = 0x88b
0x881: JUMPI 0x88b V682
---
Entry stack: [V11, 0x10f, S21, S20, {0x0, 0x10f}, S18, V228, S16, 0x32c, S14, S13, 0x75c, S11, S10, V666, 0xa9059cbb, V669, 0x20, V665, V672, V665, 0x0, V666, V675]
Stack pops: 7
Stack additions: [V681]
Exit stack: [V11, 0x10f, S21, S20, {0x0, 0x10f}, S18, V228, S16, 0x32c, S14, S13, 0x75c, S11, S10, V666, 0xa9059cbb, V669, V681]

================================

Block 0x882
[0x882:0x88a]
---
Predecessors: [0x877]
Successors: []
---
0x882 RETURNDATASIZE
0x883 PUSH1 0x0
0x885 DUP1
0x886 RETURNDATACOPY
0x887 RETURNDATASIZE
0x888 PUSH1 0x0
0x88a REVERT
---
0x882: V684 = RETURNDATASIZE
0x883: V685 = 0x0
0x886: RETURNDATACOPY 0x0 0x0 V684
0x887: V686 = RETURNDATASIZE
0x888: V687 = 0x0
0x88a: REVERT 0x0 V686
---
Entry stack: [V11, 0x10f, S15, S14, {0x0, 0x10f}, S12, V228, S10, 0x32c, S8, S7, 0x75c, S5, S4, S3, 0xa9059cbb, S1, V681]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, S15, S14, {0x0, 0x10f}, S12, V228, S10, 0x32c, S8, S7, 0x75c, S5, S4, S3, 0xa9059cbb, S1, V681]

================================

Block 0x88b
[0x88b:0x89c]
---
Predecessors: [0x877]
Successors: [0x89d, 0x8a1]
---
0x88b JUMPDEST
0x88c POP
0x88d POP
0x88e POP
0x88f POP
0x890 PUSH1 0x40
0x892 MLOAD
0x893 RETURNDATASIZE
0x894 PUSH1 0x20
0x896 DUP2
0x897 LT
0x898 ISZERO
0x899 PUSH2 0x8a1
0x89c JUMPI
---
0x88b: JUMPDEST 
0x890: V688 = 0x40
0x892: V689 = M[0x40]
0x893: V690 = RETURNDATASIZE
0x894: V691 = 0x20
0x897: V692 = LT V690 0x20
0x898: V693 = ISZERO V692
0x899: V694 = 0x8a1
0x89c: JUMPI 0x8a1 V693
---
Entry stack: [V11, 0x10f, S15, S14, {0x0, 0x10f}, S12, V228, S10, 0x32c, S8, S7, 0x75c, S5, S4, S3, 0xa9059cbb, S1, V681]
Stack pops: 4
Stack additions: [V689, V690]
Exit stack: [V11, 0x10f, S15, S14, {0x0, 0x10f}, S12, V228, S10, 0x32c, S8, S7, 0x75c, S5, S4, V689, V690]

================================

Block 0x89d
[0x89d:0x8a0]
---
Predecessors: [0x88b]
Successors: []
---
0x89d PUSH1 0x0
0x89f DUP1
0x8a0 REVERT
---
0x89d: V695 = 0x0
0x8a0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10f, S13, S12, {0x0, 0x10f}, S10, V228, S8, 0x32c, S6, S5, 0x75c, S3, S2, V689, V690]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10f, S13, S12, {0x0, 0x10f}, S10, V228, S8, 0x32c, S6, S5, 0x75c, S3, S2, V689, V690]

================================

Block 0x8a1
[0x8a1:0x8a6]
---
Predecessors: [0x88b]
Successors: [0x75c]
---
0x8a1 JUMPDEST
0x8a2 POP
0x8a3 POP
0x8a4 POP
0x8a5 POP
0x8a6 JUMP
---
0x8a1: JUMPDEST 
0x8a6: JUMP 0x75c
---
Entry stack: [V11, 0x10f, S13, S12, {0x0, 0x10f}, S10, V228, S8, 0x32c, S6, S5, 0x75c, S3, S2, V689, V690]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x10f, S13, S12, {0x0, 0x10f}, S10, V228, S8, 0x32c, S6, S5]

================================

Block 0x8a7
[0x8a7:0x8e7]
---
Predecessors: []
Successors: []
---
0x8a7 STOP
0x8a8 LOG1
0x8a9 PUSH6 0x627a7a723058
0x8b0 SHA3
0x8b1 LOG2
0x8b2 MISSING 0xc1
0x8b3 SAR
0x8b4 GASPRICE
0x8b5 SUB
0x8b6 MISSING 0xc4
0x8b7 MISSING 0xe5
0x8b8 MISSING 0xc4
0x8b9 MISSING 0xb9
0x8ba LOG3
0x8bb MISSING 0xbb
0x8bc MULMOD
0x8bd ORIGIN
0x8be PUSH8 0x8854cc8622a0549a
0x8c7 MISSING 0xb9
0x8c8 CODESIZE
0x8c9 MISSING 0xb8
0x8ca MISSING 0xa5
0x8cb MSTORE8
0x8cc CODESIZE
0x8cd PUSH26 0xf4a2a80029
---
0x8a7: STOP 
0x8a8: LOG S0 S1 S2
0x8a9: V696 = 0x627a7a723058
0x8b0: V697 = SHA3 0x627a7a723058 S3
0x8b1: LOG V697 S4 S5 S6
0x8b2: MISSING 0xc1
0x8b3: V698 = SAR S0 S1
0x8b4: V699 = GASPRICE
0x8b5: V700 = SUB V699 V698
0x8b6: MISSING 0xc4
0x8b7: MISSING 0xe5
0x8b8: MISSING 0xc4
0x8b9: MISSING 0xb9
0x8ba: LOG S0 S1 S2 S3 S4
0x8bb: MISSING 0xbb
0x8bc: V701 = MULMOD S0 S1 S2
0x8bd: V702 = ORIGIN
0x8be: V703 = 0x8854cc8622a0549a
0x8c7: MISSING 0xb9
0x8c8: V704 = CODESIZE
0x8c9: MISSING 0xb8
0x8ca: MISSING 0xa5
0x8cb: M8[S0] = S1
0x8cc: V705 = CODESIZE
0x8cd: V706 = 0xf4a2a80029
---
Entry stack: []
Stack pops: 0
Stack additions: [V700, 0x8854cc8622a0549a, V702, V701, V704, 0xf4a2a80029, V705]
Exit stack: []

================================

Function 0:
Public function signature: 0x47fc9aa
Entry block: 0x111
Exit block: 0x126
Body: 0x111, 0x119, 0x11d, 0x126, 0x381

Function 1:
Public function signature: 0xfb5a6b4
Entry block: 0x138
Exit block: 0x126
Body: 0x126, 0x138, 0x140, 0x144, 0x387

Function 2:
Public function signature: 0x1515bc2b
Entry block: 0x14d
Exit block: 0x162
Body: 0x14d, 0x155, 0x159, 0x162, 0x38d

Function 3:
Public function signature: 0x2c4e722e
Entry block: 0x176
Exit block: 0x126
Body: 0x126, 0x176, 0x17e, 0x182, 0x395

Function 4:
Public function signature: 0x3f4ba83a
Entry block: 0x18b
Exit block: 0x10f
Body: 0x10f, 0x18b, 0x193, 0x197, 0x39b, 0x3ae, 0x3b2, 0x3c6, 0x3ca

Function 5:
Public function signature: 0x4042b66f
Entry block: 0x1a0
Exit block: 0x126
Body: 0x126, 0x1a0, 0x1a8, 0x1ac, 0x411

Function 6:
Public function signature: 0x4b6753bc
Entry block: 0x1b5
Exit block: 0x126
Body: 0x126, 0x1b5, 0x1bd, 0x1c1, 0x417

Function 7:
Public function signature: 0x521eb273
Entry block: 0x1ca
Exit block: 0x1df
Body: 0x1ca, 0x1d2, 0x1d6, 0x1df, 0x41d

Function 8:
Public function signature: 0x5c975abb
Entry block: 0x1fb
Exit block: 0x162
Body: 0x162, 0x1fb, 0x203, 0x207, 0x42c

Function 9:
Public function signature: 0x63fd9e38
Entry block: 0x210
Exit block: 0x126
Body: 0x126, 0x210, 0x218, 0x21c, 0x43c

Function 10:
Public function signature: 0x74e7493b
Entry block: 0x225
Exit block: 0x10f
Body: 0x10f, 0x225, 0x22d, 0x231, 0x442, 0x455, 0x459

Function 11:
Public function signature: 0x8456cb59
Entry block: 0x23d
Exit block: 0x10f
Body: 0x10f, 0x23d, 0x245, 0x249, 0x45e, 0x471, 0x475, 0x488, 0x48c

Function 12:
Public function signature: 0x8d8f2adb
Entry block: 0x252
Exit block: 0x10f
Body: 0x10f, 0x252, 0x25a, 0x25e, 0x4d9, 0x4ed, 0x4f1, 0x553, 0x557, 0x562, 0x56b, 0x57d, 0x581, 0x5f4, 0x5f8, 0x603, 0x60c, 0x61e

Function 13:
Public function signature: 0x8da5cb5b
Entry block: 0x267
Exit block: 0x1df
Body: 0x1df, 0x267, 0x26f, 0x273, 0x622

Function 14:
Public function signature: 0x95805dad
Entry block: 0x27c
Exit block: 0x10f
Body: 0x10f, 0x27c, 0x284, 0x288, 0x631, 0x644, 0x648

Function 15:
Public function signature: 0xb7a8807c
Entry block: 0x294
Exit block: 0x126
Body: 0x126, 0x294, 0x29c, 0x2a0, 0x659

Function 16:
Public function signature: 0xec8ac4d8
Entry block: 0x2a9
Exit block: 0x10f
Body: 0x10f, 0x2a9

Function 17:
Public function signature: 0xf2fde38b
Entry block: 0x2bd
Exit block: 0x10f
Body: 0x10f, 0x2bd, 0x2c5, 0x2c9, 0x65f, 0x672, 0x676, 0x687, 0x68b

Function 18:
Public function signature: 0xfc0c546a
Entry block: 0x2de
Exit block: 0x1df
Body: 0x1df, 0x2de, 0x2e6, 0x2ea, 0x6f3

Function 19:
Public fallback function
Entry block: 0x106
Exit block: 0x10f
Body: 0x106, 0x10f

Function 20:
Private function
Entry block: 0x2f3
Exit block: 0x68b
Body: 0x2f3, 0x300, 0x309, 0x31f, 0x32c, 0x37c, 0x702, 0x719, 0x72e, 0x73d, 0x74a, 0x751, 0x75c, 0x760, 0x777, 0x77d, 0x78c, 0x790, 0x797, 0x7a1, 0x7da, 0x7dd, 0x7e8, 0x7f0, 0x800, 0x808, 0x877, 0x88b, 0x8a1

