Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x96]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x96
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x96
0xa: JUMPI 0x96 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x1a8]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0xe78501f
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x1a8
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0xe78501f
0x39: V12 = EQ V10 0xe78501f
0x3a: V13 = 0x1a8
0x3d: JUMPI 0x1a8 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x1bd]
---
0x3e DUP1
0x3f PUSH4 0x1ffe4cca
0x44 EQ
0x45 PUSH2 0x1bd
0x48 JUMPI
---
0x3f: V14 = 0x1ffe4cca
0x44: V15 = EQ 0x1ffe4cca V10
0x45: V16 = 0x1bd
0x48: JUMPI 0x1bd V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x1df]
---
0x49 DUP1
0x4a PUSH4 0x29dcb0cf
0x4f EQ
0x50 PUSH2 0x1df
0x53 JUMPI
---
0x4a: V17 = 0x29dcb0cf
0x4f: V18 = EQ 0x29dcb0cf V10
0x50: V19 = 0x1df
0x53: JUMPI 0x1df V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x201]
---
0x54 DUP1
0x55 PUSH4 0x38af3eed
0x5a EQ
0x5b PUSH2 0x201
0x5e JUMPI
---
0x55: V20 = 0x38af3eed
0x5a: V21 = EQ 0x38af3eed V10
0x5b: V22 = 0x201
0x5e: JUMPI 0x201 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x22d]
---
0x5f DUP1
0x60 PUSH4 0x6e66f6e9
0x65 EQ
0x66 PUSH2 0x22d
0x69 JUMPI
---
0x60: V23 = 0x6e66f6e9
0x65: V24 = EQ 0x6e66f6e9 V10
0x66: V25 = 0x22d
0x69: JUMPI 0x22d V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x259]
---
0x6a DUP1
0x6b PUSH4 0xa035b1fe
0x70 EQ
0x71 PUSH2 0x259
0x74 JUMPI
---
0x6b: V26 = 0xa035b1fe
0x70: V27 = EQ 0xa035b1fe V10
0x71: V28 = 0x259
0x74: JUMPI 0x259 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x27b]
---
0x75 DUP1
0x76 PUSH4 0xc47af5cf
0x7b EQ
0x7c PUSH2 0x27b
0x7f JUMPI
---
0x76: V29 = 0xc47af5cf
0x7b: V30 = EQ 0xc47af5cf V10
0x7c: V31 = 0x27b
0x7f: JUMPI 0x27b V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x290]
---
0x80 DUP1
0x81 PUSH4 0xda79b80c
0x86 EQ
0x87 PUSH2 0x290
0x8a JUMPI
---
0x81: V32 = 0xda79b80c
0x86: V33 = EQ 0xda79b80c V10
0x87: V34 = 0x290
0x8a: JUMPI 0x290 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x2a5]
---
0x8b DUP1
0x8c PUSH4 0xf72f6826
0x91 EQ
0x92 PUSH2 0x2a5
0x95 JUMPI
---
0x8c: V35 = 0xf72f6826
0x91: V36 = EQ 0xf72f6826 V10
0x92: V37 = 0x2a5
0x95: JUMPI 0x2a5 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0x99]
---
Predecessors: [0x0, 0x8b]
Successors: [0x9a]
---
0x96 JUMPDEST
0x97 PUSH2 0x1a6
---
0x96: JUMPDEST 
0x97: V38 = 0x1a6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a6]
Exit stack: [V10, 0x1a6]

================================

Block 0x9a
[0x9a:0xa6]
---
Predecessors: [0x96]
Successors: [0xa7, 0xac]
---
0x9a JUMPDEST
0x9b PUSH1 0x1
0x9d SLOAD
0x9e PUSH1 0x0
0xa0 SWAP1
0xa1 TIMESTAMP
0xa2 GT
0xa3 PUSH2 0xac
0xa6 JUMPI
---
0x9a: JUMPDEST 
0x9b: V39 = 0x1
0x9d: V40 = S[0x1]
0x9e: V41 = 0x0
0xa1: V42 = TIMESTAMP
0xa2: V43 = GT V42 V40
0xa3: V44 = 0xac
0xa6: JUMPI 0xac V43
---
Entry stack: [V10, 0x1a6]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1a6, 0x0]

================================

Block 0xa7
[0xa7:0xab]
---
Predecessors: [0x9a]
Successors: []
---
0xa7 PUSH1 0x0
0xa9 PUSH1 0x0
0xab REVERT
---
0xa7: V45 = 0x0
0xa9: V46 = 0x0
0xab: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1a6, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, 0x0]

================================

Block 0xac
[0xac:0xb5]
---
Predecessors: [0x9a]
Successors: [0xb6, 0xbb]
---
0xac JUMPDEST
0xad PUSH1 0x2
0xaf SLOAD
0xb0 TIMESTAMP
0xb1 LT
0xb2 PUSH2 0xbb
0xb5 JUMPI
---
0xac: JUMPDEST 
0xad: V47 = 0x2
0xaf: V48 = S[0x2]
0xb0: V49 = TIMESTAMP
0xb1: V50 = LT V49 V48
0xb2: V51 = 0xbb
0xb5: JUMPI 0xbb V50
---
Entry stack: [V10, 0x1a6, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, 0x0]

================================

Block 0xb6
[0xb6:0xba]
---
Predecessors: [0xac]
Successors: []
---
0xb6 PUSH1 0x0
0xb8 PUSH1 0x0
0xba REVERT
---
0xb6: V52 = 0x0
0xb8: V53 = 0x0
0xba: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1a6, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, 0x0]

================================

Block 0xbb
[0xbb:0xc8]
---
Predecessors: [0xac]
Successors: [0xc9, 0xce]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd SWAP1
0xbe POP
0xbf PUSH1 0x3
0xc1 SLOAD
0xc2 DUP2
0xc3 LT
0xc4 ISZERO
0xc5 PUSH2 0xce
0xc8 JUMPI
---
0xbb: JUMPDEST 
0xbc: V54 = CALLVALUE
0xbf: V55 = 0x3
0xc1: V56 = S[0x3]
0xc3: V57 = LT V54 V56
0xc4: V58 = ISZERO V57
0xc5: V59 = 0xce
0xc8: JUMPI 0xce V58
---
Entry stack: [V10, 0x1a6, 0x0]
Stack pops: 1
Stack additions: [V54]
Exit stack: [V10, 0x1a6, V54]

================================

Block 0xc9
[0xc9:0xcd]
---
Predecessors: [0xbb]
Successors: []
---
0xc9 PUSH1 0x0
0xcb PUSH1 0x0
0xcd REVERT
---
0xc9: V60 = 0x0
0xcb: V61 = 0x0
0xcd: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1a6, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V54]

================================

Block 0xce
[0xce:0xf0]
---
Predecessors: [0xbb]
Successors: [0xf1, 0xf2]
---
0xce JUMPDEST
0xcf PUSH1 0x4
0xd1 SLOAD
0xd2 PUSH1 0x3
0xd4 SLOAD
0xd5 PUSH1 0x1
0xd7 PUSH1 0xa0
0xd9 PUSH1 0x2
0xdb EXP
0xdc SUB
0xdd SWAP1
0xde SWAP2
0xdf AND
0xe0 SWAP1
0xe1 PUSH4 0xa9059cbb
0xe6 SWAP1
0xe7 CALLER
0xe8 SWAP1
0xe9 DUP5
0xea DUP2
0xeb ISZERO
0xec ISZERO
0xed PUSH2 0xf2
0xf0 JUMPI
---
0xce: JUMPDEST 
0xcf: V62 = 0x4
0xd1: V63 = S[0x4]
0xd2: V64 = 0x3
0xd4: V65 = S[0x3]
0xd5: V66 = 0x1
0xd7: V67 = 0xa0
0xd9: V68 = 0x2
0xdb: V69 = EXP 0x2 0xa0
0xdc: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf: V71 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0xe1: V72 = 0xa9059cbb
0xe7: V73 = CALLER
0xeb: V74 = ISZERO V65
0xec: V75 = ISZERO V74
0xed: V76 = 0xf2
0xf0: JUMPI 0xf2 V75
---
Entry stack: [V10, 0x1a6, V54]
Stack pops: 1
Stack additions: [S0, V71, 0xa9059cbb, V73, V65, S0]
Exit stack: [V10, 0x1a6, V54, V71, 0xa9059cbb, V73, V65, V54]

================================

Block 0xf1
[0xf1:0xf1]
---
Predecessors: [0xce]
Successors: []
---
0xf1 INVALID
---
0xf1: INVALID 
---
Entry stack: [V10, 0x1a6, V54, V71, 0xa9059cbb, V73, V65, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V54, V71, 0xa9059cbb, V73, V65, V54]

================================

Block 0xf2
[0xf2:0x161]
---
Predecessors: [0xce]
Successors: [0x162, 0x163]
---
0xf2 JUMPDEST
0xf3 DIV
0xf4 PUSH1 0x0
0xf6 PUSH1 0x40
0xf8 MLOAD
0xf9 PUSH1 0x20
0xfb ADD
0xfc MSTORE
0xfd PUSH1 0x40
0xff MLOAD
0x100 DUP4
0x101 PUSH4 0xffffffff
0x106 AND
0x107 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x125 MUL
0x126 DUP2
0x127 MSTORE
0x128 PUSH1 0x4
0x12a ADD
0x12b DUP1
0x12c DUP4
0x12d PUSH1 0x1
0x12f PUSH1 0xa0
0x131 PUSH1 0x2
0x133 EXP
0x134 SUB
0x135 AND
0x136 PUSH1 0x1
0x138 PUSH1 0xa0
0x13a PUSH1 0x2
0x13c EXP
0x13d SUB
0x13e AND
0x13f DUP2
0x140 MSTORE
0x141 PUSH1 0x20
0x143 ADD
0x144 DUP3
0x145 DUP2
0x146 MSTORE
0x147 PUSH1 0x20
0x149 ADD
0x14a SWAP3
0x14b POP
0x14c POP
0x14d POP
0x14e PUSH1 0x20
0x150 PUSH1 0x40
0x152 MLOAD
0x153 DUP1
0x154 DUP4
0x155 SUB
0x156 DUP2
0x157 PUSH1 0x0
0x159 DUP8
0x15a DUP1
0x15b EXTCODESIZE
0x15c ISZERO
0x15d ISZERO
0x15e PUSH2 0x163
0x161 JUMPI
---
0xf2: JUMPDEST 
0xf3: V77 = DIV V54 V65
0xf4: V78 = 0x0
0xf6: V79 = 0x40
0xf8: V80 = M[0x40]
0xf9: V81 = 0x20
0xfb: V82 = ADD 0x20 V80
0xfc: M[V82] = 0x0
0xfd: V83 = 0x40
0xff: V84 = M[0x40]
0x101: V85 = 0xffffffff
0x106: V86 = AND 0xffffffff 0xa9059cbb
0x107: V87 = 0x100000000000000000000000000000000000000000000000000000000
0x125: V88 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x127: M[V84] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x128: V89 = 0x4
0x12a: V90 = ADD 0x4 V84
0x12d: V91 = 0x1
0x12f: V92 = 0xa0
0x131: V93 = 0x2
0x133: V94 = EXP 0x2 0xa0
0x134: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x135: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x136: V97 = 0x1
0x138: V98 = 0xa0
0x13a: V99 = 0x2
0x13c: V100 = EXP 0x2 0xa0
0x13d: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13e: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x140: M[V90] = V102
0x141: V103 = 0x20
0x143: V104 = ADD 0x20 V90
0x146: M[V104] = V77
0x147: V105 = 0x20
0x149: V106 = ADD 0x20 V104
0x14e: V107 = 0x20
0x150: V108 = 0x40
0x152: V109 = M[0x40]
0x155: V110 = SUB V106 V109
0x157: V111 = 0x0
0x15b: V112 = EXTCODESIZE V71
0x15c: V113 = ISZERO V112
0x15d: V114 = ISZERO V113
0x15e: V115 = 0x163
0x161: JUMPI 0x163 V114
---
Entry stack: [V10, 0x1a6, V54, V71, 0xa9059cbb, V73, V65, V54]
Stack pops: 5
Stack additions: [S4, S3, V106, 0x20, V109, V110, V109, 0x0, S4]
Exit stack: [V10, 0x1a6, V54, V71, 0xa9059cbb, V106, 0x20, V109, V110, V109, 0x0, V71]

================================

Block 0x162
[0x162:0x162]
---
Predecessors: [0xf2]
Successors: []
---
0x162 INVALID
---
0x162: INVALID 
---
Entry stack: [V10, 0x1a6, V54, V71, 0xa9059cbb, V106, 0x20, V109, V110, V109, 0x0, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V54, V71, 0xa9059cbb, V106, 0x20, V109, V110, V109, 0x0, V71]

================================

Block 0x163
[0x163:0x16f]
---
Predecessors: [0xf2]
Successors: [0x170, 0x171]
---
0x163 JUMPDEST
0x164 PUSH2 0x2c6
0x167 GAS
0x168 SUB
0x169 CALL
0x16a ISZERO
0x16b ISZERO
0x16c PUSH2 0x171
0x16f JUMPI
---
0x163: JUMPDEST 
0x164: V116 = 0x2c6
0x167: V117 = GAS
0x168: V118 = SUB V117 0x2c6
0x169: V119 = CALL V118 V71 0x0 V109 V110 V109 0x20
0x16a: V120 = ISZERO V119
0x16b: V121 = ISZERO V120
0x16c: V122 = 0x171
0x16f: JUMPI 0x171 V121
---
Entry stack: [V10, 0x1a6, V54, V71, 0xa9059cbb, V106, 0x20, V109, V110, V109, 0x0, V71]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1a6, V54, V71, 0xa9059cbb, V106]

================================

Block 0x170
[0x170:0x170]
---
Predecessors: [0x163]
Successors: []
---
0x170 INVALID
---
0x170: INVALID 
---
Entry stack: [V10, 0x1a6, V54, V71, 0xa9059cbb, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V54, V71, 0xa9059cbb, V106]

================================

Block 0x171
[0x171:0x1a0]
---
Predecessors: [0x163]
Successors: [0x1a1, 0x1a2]
---
0x171 JUMPDEST
0x172 POP
0x173 POP
0x174 PUSH1 0x40
0x176 MLOAD
0x177 PUSH1 0x0
0x179 DUP1
0x17a SLOAD
0x17b PUSH1 0x1
0x17d PUSH1 0xa0
0x17f PUSH1 0x2
0x181 EXP
0x182 SUB
0x183 AND
0x184 SWAP3
0x185 POP
0x186 DUP4
0x187 ISZERO
0x188 PUSH2 0x8fc
0x18b MUL
0x18c SWAP2
0x18d DUP5
0x18e SWAP2
0x18f DUP2
0x190 DUP2
0x191 DUP2
0x192 DUP6
0x193 DUP9
0x194 DUP9
0x195 CALL
0x196 SWAP4
0x197 POP
0x198 POP
0x199 POP
0x19a POP
0x19b ISZERO
0x19c ISZERO
0x19d PUSH2 0x1a2
0x1a0 JUMPI
---
0x171: JUMPDEST 
0x174: V123 = 0x40
0x176: V124 = M[0x40]
0x177: V125 = 0x0
0x17a: V126 = S[0x0]
0x17b: V127 = 0x1
0x17d: V128 = 0xa0
0x17f: V129 = 0x2
0x181: V130 = EXP 0x2 0xa0
0x182: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x183: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x187: V133 = ISZERO V54
0x188: V134 = 0x8fc
0x18b: V135 = MUL 0x8fc V133
0x195: V136 = CALL V135 V132 V54 V124 0x0 V124 0x0
0x19b: V137 = ISZERO V136
0x19c: V138 = ISZERO V137
0x19d: V139 = 0x1a2
0x1a0: JUMPI 0x1a2 V138
---
Entry stack: [V10, 0x1a6, V54, V71, 0xa9059cbb, V106]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x1a6, V54]

================================

Block 0x1a1
[0x1a1:0x1a1]
---
Predecessors: [0x171]
Successors: []
---
0x1a1 INVALID
---
0x1a1: INVALID 
---
Entry stack: [V10, 0x1a6, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V54]

================================

Block 0x1a2
[0x1a2:0x1a2]
---
Predecessors: [0x171]
Successors: [0x1a3]
---
0x1a2 JUMPDEST
---
0x1a2: JUMPDEST 
---
Entry stack: [V10, 0x1a6, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V54]

================================

Block 0x1a3
[0x1a3:0x1a5]
---
Predecessors: [0x1a2]
Successors: [0x1a6]
---
0x1a3 JUMPDEST
0x1a4 POP
0x1a5 JUMP
---
0x1a3: JUMPDEST 
0x1a5: JUMP 0x1a6
---
Entry stack: [V10, 0x1a6, V54]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a6
[0x1a6:0x1a7]
---
Predecessors: [0x1a3, 0x2dc, 0x331, 0x3dc, 0x401]
Successors: []
---
0x1a6 JUMPDEST
0x1a7 STOP
---
0x1a6: JUMPDEST 
0x1a7: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a8
[0x1a8:0x1ae]
---
Predecessors: [0xb]
Successors: [0x1af, 0x1b0]
---
0x1a8 JUMPDEST
0x1a9 CALLVALUE
0x1aa ISZERO
0x1ab PUSH2 0x1b0
0x1ae JUMPI
---
0x1a8: JUMPDEST 
0x1a9: V140 = CALLVALUE
0x1aa: V141 = ISZERO V140
0x1ab: V142 = 0x1b0
0x1ae: JUMPI 0x1b0 V141
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1af
[0x1af:0x1af]
---
Predecessors: [0x1a8]
Successors: []
---
0x1af INVALID
---
0x1af: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b0
[0x1b0:0x1ba]
---
Predecessors: [0x1a8]
Successors: [0x2ba]
---
0x1b0 JUMPDEST
0x1b1 PUSH2 0x1a6
0x1b4 PUSH1 0x4
0x1b6 CALLDATALOAD
0x1b7 PUSH2 0x2ba
0x1ba JUMP
---
0x1b0: JUMPDEST 
0x1b1: V143 = 0x1a6
0x1b4: V144 = 0x4
0x1b6: V145 = CALLDATALOAD 0x4
0x1b7: V146 = 0x2ba
0x1ba: JUMP 0x2ba
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a6, V145]
Exit stack: [V10, 0x1a6, V145]

================================

Block 0x1bb
[0x1bb:0x1bc]
---
Predecessors: []
Successors: []
---
0x1bb JUMPDEST
0x1bc STOP
---
0x1bb: JUMPDEST 
0x1bc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1bd
[0x1bd:0x1c3]
---
Predecessors: [0x3e]
Successors: [0x1c4, 0x1c5]
---
0x1bd JUMPDEST
0x1be CALLVALUE
0x1bf ISZERO
0x1c0 PUSH2 0x1c5
0x1c3 JUMPI
---
0x1bd: JUMPDEST 
0x1be: V147 = CALLVALUE
0x1bf: V148 = ISZERO V147
0x1c0: V149 = 0x1c5
0x1c3: JUMPI 0x1c5 V148
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c4
[0x1c4:0x1c4]
---
Predecessors: [0x1bd]
Successors: []
---
0x1c4 INVALID
---
0x1c4: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c5
[0x1c5:0x1cc]
---
Predecessors: [0x1bd]
Successors: [0x2df]
---
0x1c5 JUMPDEST
0x1c6 PUSH2 0x1cd
0x1c9 PUSH2 0x2df
0x1cc JUMP
---
0x1c5: JUMPDEST 
0x1c6: V150 = 0x1cd
0x1c9: V151 = 0x2df
0x1cc: JUMP 0x2df
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1cd]
Exit stack: [V10, 0x1cd]

================================

Block 0x1cd
[0x1cd:0x1de]
---
Predecessors: [0x2df, 0x2e5, 0x309]
Successors: []
---
0x1cd JUMPDEST
0x1ce PUSH1 0x40
0x1d0 DUP1
0x1d1 MLOAD
0x1d2 SWAP2
0x1d3 DUP3
0x1d4 MSTORE
0x1d5 MLOAD
0x1d6 SWAP1
0x1d7 DUP2
0x1d8 SWAP1
0x1d9 SUB
0x1da PUSH1 0x20
0x1dc ADD
0x1dd SWAP1
0x1de RETURN
---
0x1cd: JUMPDEST 
0x1ce: V152 = 0x40
0x1d1: V153 = M[0x40]
0x1d4: M[V153] = S0
0x1d5: V154 = M[0x40]
0x1d9: V155 = SUB V153 V154
0x1da: V156 = 0x20
0x1dc: V157 = ADD 0x20 V155
0x1de: RETURN V154 V157
---
Entry stack: [V10, 0x1cd, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1cd]

================================

Block 0x1df
[0x1df:0x1e5]
---
Predecessors: [0x49]
Successors: [0x1e6, 0x1e7]
---
0x1df JUMPDEST
0x1e0 CALLVALUE
0x1e1 ISZERO
0x1e2 PUSH2 0x1e7
0x1e5 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V158 = CALLVALUE
0x1e1: V159 = ISZERO V158
0x1e2: V160 = 0x1e7
0x1e5: JUMPI 0x1e7 V159
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e6
[0x1e6:0x1e6]
---
Predecessors: [0x1df]
Successors: []
---
0x1e6 INVALID
---
0x1e6: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e7
[0x1e7:0x1ee]
---
Predecessors: [0x1df]
Successors: [0x2e5]
---
0x1e7 JUMPDEST
0x1e8 PUSH2 0x1cd
0x1eb PUSH2 0x2e5
0x1ee JUMP
---
0x1e7: JUMPDEST 
0x1e8: V161 = 0x1cd
0x1eb: V162 = 0x2e5
0x1ee: JUMP 0x2e5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1cd]
Exit stack: [V10, 0x1cd]

================================

Block 0x1ef
[0x1ef:0x200]
---
Predecessors: []
Successors: []
---
0x1ef JUMPDEST
0x1f0 PUSH1 0x40
0x1f2 DUP1
0x1f3 MLOAD
0x1f4 SWAP2
0x1f5 DUP3
0x1f6 MSTORE
0x1f7 MLOAD
0x1f8 SWAP1
0x1f9 DUP2
0x1fa SWAP1
0x1fb SUB
0x1fc PUSH1 0x20
0x1fe ADD
0x1ff SWAP1
0x200 RETURN
---
0x1ef: JUMPDEST 
0x1f0: V163 = 0x40
0x1f3: V164 = M[0x40]
0x1f6: M[V164] = S0
0x1f7: V165 = M[0x40]
0x1fb: V166 = SUB V164 V165
0x1fc: V167 = 0x20
0x1fe: V168 = ADD 0x20 V166
0x200: RETURN V165 V168
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x201
[0x201:0x207]
---
Predecessors: [0x54]
Successors: [0x208, 0x209]
---
0x201 JUMPDEST
0x202 CALLVALUE
0x203 ISZERO
0x204 PUSH2 0x209
0x207 JUMPI
---
0x201: JUMPDEST 
0x202: V169 = CALLVALUE
0x203: V170 = ISZERO V169
0x204: V171 = 0x209
0x207: JUMPI 0x209 V170
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x208
[0x208:0x208]
---
Predecessors: [0x201]
Successors: []
---
0x208 INVALID
---
0x208: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x209
[0x209:0x210]
---
Predecessors: [0x201]
Successors: [0x2eb]
---
0x209 JUMPDEST
0x20a PUSH2 0x211
0x20d PUSH2 0x2eb
0x210 JUMP
---
0x209: JUMPDEST 
0x20a: V172 = 0x211
0x20d: V173 = 0x2eb
0x210: JUMP 0x2eb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x211]
Exit stack: [V10, 0x211]

================================

Block 0x211
[0x211:0x22c]
---
Predecessors: [0x2eb, 0x2fa]
Successors: []
---
0x211 JUMPDEST
0x212 PUSH1 0x40
0x214 DUP1
0x215 MLOAD
0x216 PUSH1 0x1
0x218 PUSH1 0xa0
0x21a PUSH1 0x2
0x21c EXP
0x21d SUB
0x21e SWAP1
0x21f SWAP3
0x220 AND
0x221 DUP3
0x222 MSTORE
0x223 MLOAD
0x224 SWAP1
0x225 DUP2
0x226 SWAP1
0x227 SUB
0x228 PUSH1 0x20
0x22a ADD
0x22b SWAP1
0x22c RETURN
---
0x211: JUMPDEST 
0x212: V174 = 0x40
0x215: V175 = M[0x40]
0x216: V176 = 0x1
0x218: V177 = 0xa0
0x21a: V178 = 0x2
0x21c: V179 = EXP 0x2 0xa0
0x21d: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x220: V181 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x222: M[V175] = V181
0x223: V182 = M[0x40]
0x227: V183 = SUB V175 V182
0x228: V184 = 0x20
0x22a: V185 = ADD 0x20 V183
0x22c: RETURN V182 V185
---
Entry stack: [V10, 0x211, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x211]

================================

Block 0x22d
[0x22d:0x233]
---
Predecessors: [0x5f]
Successors: [0x234, 0x235]
---
0x22d JUMPDEST
0x22e CALLVALUE
0x22f ISZERO
0x230 PUSH2 0x235
0x233 JUMPI
---
0x22d: JUMPDEST 
0x22e: V186 = CALLVALUE
0x22f: V187 = ISZERO V186
0x230: V188 = 0x235
0x233: JUMPI 0x235 V187
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x234
[0x234:0x234]
---
Predecessors: [0x22d]
Successors: []
---
0x234 INVALID
---
0x234: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x235
[0x235:0x23c]
---
Predecessors: [0x22d]
Successors: [0x2fa]
---
0x235 JUMPDEST
0x236 PUSH2 0x211
0x239 PUSH2 0x2fa
0x23c JUMP
---
0x235: JUMPDEST 
0x236: V189 = 0x211
0x239: V190 = 0x2fa
0x23c: JUMP 0x2fa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x211]
Exit stack: [V10, 0x211]

================================

Block 0x23d
[0x23d:0x258]
---
Predecessors: []
Successors: []
---
0x23d JUMPDEST
0x23e PUSH1 0x40
0x240 DUP1
0x241 MLOAD
0x242 PUSH1 0x1
0x244 PUSH1 0xa0
0x246 PUSH1 0x2
0x248 EXP
0x249 SUB
0x24a SWAP1
0x24b SWAP3
0x24c AND
0x24d DUP3
0x24e MSTORE
0x24f MLOAD
0x250 SWAP1
0x251 DUP2
0x252 SWAP1
0x253 SUB
0x254 PUSH1 0x20
0x256 ADD
0x257 SWAP1
0x258 RETURN
---
0x23d: JUMPDEST 
0x23e: V191 = 0x40
0x241: V192 = M[0x40]
0x242: V193 = 0x1
0x244: V194 = 0xa0
0x246: V195 = 0x2
0x248: V196 = EXP 0x2 0xa0
0x249: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24c: V198 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x24e: M[V192] = V198
0x24f: V199 = M[0x40]
0x253: V200 = SUB V192 V199
0x254: V201 = 0x20
0x256: V202 = ADD 0x20 V200
0x258: RETURN V199 V202
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x259
[0x259:0x25f]
---
Predecessors: [0x6a]
Successors: [0x260, 0x261]
---
0x259 JUMPDEST
0x25a CALLVALUE
0x25b ISZERO
0x25c PUSH2 0x261
0x25f JUMPI
---
0x259: JUMPDEST 
0x25a: V203 = CALLVALUE
0x25b: V204 = ISZERO V203
0x25c: V205 = 0x261
0x25f: JUMPI 0x261 V204
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x260
[0x260:0x260]
---
Predecessors: [0x259]
Successors: []
---
0x260 INVALID
---
0x260: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x261
[0x261:0x268]
---
Predecessors: [0x259]
Successors: [0x309]
---
0x261 JUMPDEST
0x262 PUSH2 0x1cd
0x265 PUSH2 0x309
0x268 JUMP
---
0x261: JUMPDEST 
0x262: V206 = 0x1cd
0x265: V207 = 0x309
0x268: JUMP 0x309
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1cd]
Exit stack: [V10, 0x1cd]

================================

Block 0x269
[0x269:0x27a]
---
Predecessors: []
Successors: []
---
0x269 JUMPDEST
0x26a PUSH1 0x40
0x26c DUP1
0x26d MLOAD
0x26e SWAP2
0x26f DUP3
0x270 MSTORE
0x271 MLOAD
0x272 SWAP1
0x273 DUP2
0x274 SWAP1
0x275 SUB
0x276 PUSH1 0x20
0x278 ADD
0x279 SWAP1
0x27a RETURN
---
0x269: JUMPDEST 
0x26a: V208 = 0x40
0x26d: V209 = M[0x40]
0x270: M[V209] = S0
0x271: V210 = M[0x40]
0x275: V211 = SUB V209 V210
0x276: V212 = 0x20
0x278: V213 = ADD 0x20 V211
0x27a: RETURN V210 V213
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x27b
[0x27b:0x281]
---
Predecessors: [0x75]
Successors: [0x282, 0x283]
---
0x27b JUMPDEST
0x27c CALLVALUE
0x27d ISZERO
0x27e PUSH2 0x283
0x281 JUMPI
---
0x27b: JUMPDEST 
0x27c: V214 = CALLVALUE
0x27d: V215 = ISZERO V214
0x27e: V216 = 0x283
0x281: JUMPI 0x283 V215
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x282
[0x282:0x282]
---
Predecessors: [0x27b]
Successors: []
---
0x282 INVALID
---
0x282: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x283
[0x283:0x28d]
---
Predecessors: [0x27b]
Successors: [0x30f]
---
0x283 JUMPDEST
0x284 PUSH2 0x1a6
0x287 PUSH1 0x4
0x289 CALLDATALOAD
0x28a PUSH2 0x30f
0x28d JUMP
---
0x283: JUMPDEST 
0x284: V217 = 0x1a6
0x287: V218 = 0x4
0x289: V219 = CALLDATALOAD 0x4
0x28a: V220 = 0x30f
0x28d: JUMP 0x30f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a6, V219]
Exit stack: [V10, 0x1a6, V219]

================================

Block 0x28e
[0x28e:0x28f]
---
Predecessors: []
Successors: []
---
0x28e JUMPDEST
0x28f STOP
---
0x28e: JUMPDEST 
0x28f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x290
[0x290:0x296]
---
Predecessors: [0x80]
Successors: [0x297, 0x298]
---
0x290 JUMPDEST
0x291 CALLVALUE
0x292 ISZERO
0x293 PUSH2 0x298
0x296 JUMPI
---
0x290: JUMPDEST 
0x291: V221 = CALLVALUE
0x292: V222 = ISZERO V221
0x293: V223 = 0x298
0x296: JUMPI 0x298 V222
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x297
[0x297:0x297]
---
Predecessors: [0x290]
Successors: []
---
0x297 INVALID
---
0x297: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x298
[0x298:0x2a2]
---
Predecessors: [0x290]
Successors: [0x334]
---
0x298 JUMPDEST
0x299 PUSH2 0x1a6
0x29c PUSH1 0x4
0x29e CALLDATALOAD
0x29f PUSH2 0x334
0x2a2 JUMP
---
0x298: JUMPDEST 
0x299: V224 = 0x1a6
0x29c: V225 = 0x4
0x29e: V226 = CALLDATALOAD 0x4
0x29f: V227 = 0x334
0x2a2: JUMP 0x334
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a6, V226]
Exit stack: [V10, 0x1a6, V226]

================================

Block 0x2a3
[0x2a3:0x2a4]
---
Predecessors: []
Successors: []
---
0x2a3 JUMPDEST
0x2a4 STOP
---
0x2a3: JUMPDEST 
0x2a4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2a5
[0x2a5:0x2ab]
---
Predecessors: [0x8b]
Successors: [0x2ac, 0x2ad]
---
0x2a5 JUMPDEST
0x2a6 CALLVALUE
0x2a7 ISZERO
0x2a8 PUSH2 0x2ad
0x2ab JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V228 = CALLVALUE
0x2a7: V229 = ISZERO V228
0x2a8: V230 = 0x2ad
0x2ab: JUMPI 0x2ad V229
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ac
[0x2ac:0x2ac]
---
Predecessors: [0x2a5]
Successors: []
---
0x2ac INVALID
---
0x2ac: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ad
[0x2ad:0x2b7]
---
Predecessors: [0x2a5]
Successors: [0x3df]
---
0x2ad JUMPDEST
0x2ae PUSH2 0x1a6
0x2b1 PUSH1 0x4
0x2b3 CALLDATALOAD
0x2b4 PUSH2 0x3df
0x2b7 JUMP
---
0x2ad: JUMPDEST 
0x2ae: V231 = 0x1a6
0x2b1: V232 = 0x4
0x2b3: V233 = CALLDATALOAD 0x4
0x2b4: V234 = 0x3df
0x2b7: JUMP 0x3df
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a6, V233]
Exit stack: [V10, 0x1a6, V233]

================================

Block 0x2b8
[0x2b8:0x2b9]
---
Predecessors: []
Successors: []
---
0x2b8 JUMPDEST
0x2b9 STOP
---
0x2b8: JUMPDEST 
0x2b9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ba
[0x2ba:0x2d0]
---
Predecessors: [0x1b0]
Successors: [0x2d1, 0x2d6]
---
0x2ba JUMPDEST
0x2bb PUSH1 0x0
0x2bd SLOAD
0x2be CALLER
0x2bf PUSH1 0x1
0x2c1 PUSH1 0xa0
0x2c3 PUSH1 0x2
0x2c5 EXP
0x2c6 SUB
0x2c7 SWAP1
0x2c8 DUP2
0x2c9 AND
0x2ca SWAP2
0x2cb AND
0x2cc EQ
0x2cd PUSH2 0x2d6
0x2d0 JUMPI
---
0x2ba: JUMPDEST 
0x2bb: V235 = 0x0
0x2bd: V236 = S[0x0]
0x2be: V237 = CALLER
0x2bf: V238 = 0x1
0x2c1: V239 = 0xa0
0x2c3: V240 = 0x2
0x2c5: V241 = EXP 0x2 0xa0
0x2c6: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c9: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x2cb: V244 = AND V236 0xffffffffffffffffffffffffffffffffffffffff
0x2cc: V245 = EQ V244 V243
0x2cd: V246 = 0x2d6
0x2d0: JUMPI 0x2d6 V245
---
Entry stack: [V10, 0x1a6, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V145]

================================

Block 0x2d1
[0x2d1:0x2d5]
---
Predecessors: [0x2ba]
Successors: []
---
0x2d1 PUSH1 0x0
0x2d3 PUSH1 0x0
0x2d5 REVERT
---
0x2d1: V247 = 0x0
0x2d3: V248 = 0x0
0x2d5: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1a6, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V145]

================================

Block 0x2d6
[0x2d6:0x2db]
---
Predecessors: [0x2ba]
Successors: [0x2dc]
---
0x2d6 JUMPDEST
0x2d7 PUSH1 0x1
0x2d9 DUP2
0x2da SWAP1
0x2db SSTORE
---
0x2d6: JUMPDEST 
0x2d7: V249 = 0x1
0x2db: S[0x1] = V145
---
Entry stack: [V10, 0x1a6, V145]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1a6, V145]

================================

Block 0x2dc
[0x2dc:0x2de]
---
Predecessors: [0x2d6]
Successors: [0x1a6]
---
0x2dc JUMPDEST
0x2dd POP
0x2de JUMP
---
0x2dc: JUMPDEST 
0x2de: JUMP 0x1a6
---
Entry stack: [V10, 0x1a6, V145]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2df
[0x2df:0x2e4]
---
Predecessors: [0x1c5]
Successors: [0x1cd]
---
0x2df JUMPDEST
0x2e0 PUSH1 0x1
0x2e2 SLOAD
0x2e3 DUP2
0x2e4 JUMP
---
0x2df: JUMPDEST 
0x2e0: V250 = 0x1
0x2e2: V251 = S[0x1]
0x2e4: JUMP 0x1cd
---
Entry stack: [V10, 0x1cd]
Stack pops: 1
Stack additions: [S0, V251]
Exit stack: [V10, 0x1cd, V251]

================================

Block 0x2e5
[0x2e5:0x2ea]
---
Predecessors: [0x1e7]
Successors: [0x1cd]
---
0x2e5 JUMPDEST
0x2e6 PUSH1 0x2
0x2e8 SLOAD
0x2e9 DUP2
0x2ea JUMP
---
0x2e5: JUMPDEST 
0x2e6: V252 = 0x2
0x2e8: V253 = S[0x2]
0x2ea: JUMP 0x1cd
---
Entry stack: [V10, 0x1cd]
Stack pops: 1
Stack additions: [S0, V253]
Exit stack: [V10, 0x1cd, V253]

================================

Block 0x2eb
[0x2eb:0x2f9]
---
Predecessors: [0x209]
Successors: [0x211]
---
0x2eb JUMPDEST
0x2ec PUSH1 0x0
0x2ee SLOAD
0x2ef PUSH1 0x1
0x2f1 PUSH1 0xa0
0x2f3 PUSH1 0x2
0x2f5 EXP
0x2f6 SUB
0x2f7 AND
0x2f8 DUP2
0x2f9 JUMP
---
0x2eb: JUMPDEST 
0x2ec: V254 = 0x0
0x2ee: V255 = S[0x0]
0x2ef: V256 = 0x1
0x2f1: V257 = 0xa0
0x2f3: V258 = 0x2
0x2f5: V259 = EXP 0x2 0xa0
0x2f6: V260 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f7: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x2f9: JUMP 0x211
---
Entry stack: [V10, 0x211]
Stack pops: 1
Stack additions: [S0, V261]
Exit stack: [V10, 0x211, V261]

================================

Block 0x2fa
[0x2fa:0x308]
---
Predecessors: [0x235]
Successors: [0x211]
---
0x2fa JUMPDEST
0x2fb PUSH1 0x4
0x2fd SLOAD
0x2fe PUSH1 0x1
0x300 PUSH1 0xa0
0x302 PUSH1 0x2
0x304 EXP
0x305 SUB
0x306 AND
0x307 DUP2
0x308 JUMP
---
0x2fa: JUMPDEST 
0x2fb: V262 = 0x4
0x2fd: V263 = S[0x4]
0x2fe: V264 = 0x1
0x300: V265 = 0xa0
0x302: V266 = 0x2
0x304: V267 = EXP 0x2 0xa0
0x305: V268 = SUB 0x10000000000000000000000000000000000000000 0x1
0x306: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x308: JUMP 0x211
---
Entry stack: [V10, 0x211]
Stack pops: 1
Stack additions: [S0, V269]
Exit stack: [V10, 0x211, V269]

================================

Block 0x309
[0x309:0x30e]
---
Predecessors: [0x261]
Successors: [0x1cd]
---
0x309 JUMPDEST
0x30a PUSH1 0x3
0x30c SLOAD
0x30d DUP2
0x30e JUMP
---
0x309: JUMPDEST 
0x30a: V270 = 0x3
0x30c: V271 = S[0x3]
0x30e: JUMP 0x1cd
---
Entry stack: [V10, 0x1cd]
Stack pops: 1
Stack additions: [S0, V271]
Exit stack: [V10, 0x1cd, V271]

================================

Block 0x30f
[0x30f:0x325]
---
Predecessors: [0x283]
Successors: [0x326, 0x32b]
---
0x30f JUMPDEST
0x310 PUSH1 0x0
0x312 SLOAD
0x313 CALLER
0x314 PUSH1 0x1
0x316 PUSH1 0xa0
0x318 PUSH1 0x2
0x31a EXP
0x31b SUB
0x31c SWAP1
0x31d DUP2
0x31e AND
0x31f SWAP2
0x320 AND
0x321 EQ
0x322 PUSH2 0x32b
0x325 JUMPI
---
0x30f: JUMPDEST 
0x310: V272 = 0x0
0x312: V273 = S[0x0]
0x313: V274 = CALLER
0x314: V275 = 0x1
0x316: V276 = 0xa0
0x318: V277 = 0x2
0x31a: V278 = EXP 0x2 0xa0
0x31b: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31e: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x320: V281 = AND V273 0xffffffffffffffffffffffffffffffffffffffff
0x321: V282 = EQ V281 V280
0x322: V283 = 0x32b
0x325: JUMPI 0x32b V282
---
Entry stack: [V10, 0x1a6, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V219]

================================

Block 0x326
[0x326:0x32a]
---
Predecessors: [0x30f]
Successors: []
---
0x326 PUSH1 0x0
0x328 PUSH1 0x0
0x32a REVERT
---
0x326: V284 = 0x0
0x328: V285 = 0x0
0x32a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1a6, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V219]

================================

Block 0x32b
[0x32b:0x330]
---
Predecessors: [0x30f]
Successors: [0x331]
---
0x32b JUMPDEST
0x32c PUSH1 0x3
0x32e DUP2
0x32f SWAP1
0x330 SSTORE
---
0x32b: JUMPDEST 
0x32c: V286 = 0x3
0x330: S[0x3] = V219
---
Entry stack: [V10, 0x1a6, V219]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1a6, V219]

================================

Block 0x331
[0x331:0x333]
---
Predecessors: [0x32b]
Successors: [0x1a6]
---
0x331 JUMPDEST
0x332 POP
0x333 JUMP
---
0x331: JUMPDEST 
0x333: JUMP 0x1a6
---
Entry stack: [V10, 0x1a6, V219]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x334
[0x334:0x34a]
---
Predecessors: [0x298]
Successors: [0x34b, 0x350]
---
0x334 JUMPDEST
0x335 PUSH1 0x0
0x337 SLOAD
0x338 CALLER
0x339 PUSH1 0x1
0x33b PUSH1 0xa0
0x33d PUSH1 0x2
0x33f EXP
0x340 SUB
0x341 SWAP1
0x342 DUP2
0x343 AND
0x344 SWAP2
0x345 AND
0x346 EQ
0x347 PUSH2 0x350
0x34a JUMPI
---
0x334: JUMPDEST 
0x335: V287 = 0x0
0x337: V288 = S[0x0]
0x338: V289 = CALLER
0x339: V290 = 0x1
0x33b: V291 = 0xa0
0x33d: V292 = 0x2
0x33f: V293 = EXP 0x2 0xa0
0x340: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x343: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x345: V296 = AND V288 0xffffffffffffffffffffffffffffffffffffffff
0x346: V297 = EQ V296 V295
0x347: V298 = 0x350
0x34a: JUMPI 0x350 V297
---
Entry stack: [V10, 0x1a6, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V226]

================================

Block 0x34b
[0x34b:0x34f]
---
Predecessors: [0x334]
Successors: []
---
0x34b PUSH1 0x0
0x34d PUSH1 0x0
0x34f REVERT
---
0x34b: V299 = 0x0
0x34d: V300 = 0x0
0x34f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1a6, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V226]

================================

Block 0x350
[0x350:0x3c8]
---
Predecessors: [0x334]
Successors: [0x3c9, 0x3ca]
---
0x350 JUMPDEST
0x351 PUSH1 0x4
0x353 DUP1
0x354 SLOAD
0x355 PUSH1 0x0
0x357 DUP1
0x358 SLOAD
0x359 PUSH1 0x40
0x35b DUP1
0x35c MLOAD
0x35d PUSH1 0x20
0x35f SWAP1
0x360 DUP2
0x361 ADD
0x362 DUP5
0x363 SWAP1
0x364 MSTORE
0x365 DUP2
0x366 MLOAD
0x367 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x388 DUP2
0x389 MSTORE
0x38a PUSH1 0x1
0x38c PUSH1 0xa0
0x38e PUSH1 0x2
0x390 EXP
0x391 SUB
0x392 SWAP4
0x393 DUP5
0x394 AND
0x395 SWAP7
0x396 DUP2
0x397 ADD
0x398 SWAP7
0x399 SWAP1
0x39a SWAP7
0x39b MSTORE
0x39c PUSH1 0x24
0x39e DUP7
0x39f ADD
0x3a0 DUP8
0x3a1 SWAP1
0x3a2 MSTORE
0x3a3 SWAP1
0x3a4 MLOAD
0x3a5 SWAP2
0x3a6 SWAP1
0x3a7 SWAP4
0x3a8 AND
0x3a9 SWAP4
0x3aa PUSH4 0xa9059cbb
0x3af SWAP4
0x3b0 PUSH1 0x44
0x3b2 DUP1
0x3b3 DUP4
0x3b4 ADD
0x3b5 SWAP5
0x3b6 SWAP2
0x3b7 SWAP4
0x3b8 SWAP3
0x3b9 DUP4
0x3ba SWAP1
0x3bb SUB
0x3bc ADD
0x3bd SWAP1
0x3be DUP3
0x3bf SWAP1
0x3c0 DUP8
0x3c1 DUP1
0x3c2 EXTCODESIZE
0x3c3 ISZERO
0x3c4 ISZERO
0x3c5 PUSH2 0x3ca
0x3c8 JUMPI
---
0x350: JUMPDEST 
0x351: V301 = 0x4
0x354: V302 = S[0x4]
0x355: V303 = 0x0
0x358: V304 = S[0x0]
0x359: V305 = 0x40
0x35c: V306 = M[0x40]
0x35d: V307 = 0x20
0x361: V308 = ADD 0x20 V306
0x364: M[V308] = 0x0
0x366: V309 = M[0x40]
0x367: V310 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x389: M[V309] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x38a: V311 = 0x1
0x38c: V312 = 0xa0
0x38e: V313 = 0x2
0x390: V314 = EXP 0x2 0xa0
0x391: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x394: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x397: V317 = ADD V309 0x4
0x39b: M[V317] = V316
0x39c: V318 = 0x24
0x39f: V319 = ADD V309 0x24
0x3a2: M[V319] = V226
0x3a4: V320 = M[0x40]
0x3a8: V321 = AND V302 0xffffffffffffffffffffffffffffffffffffffff
0x3aa: V322 = 0xa9059cbb
0x3b0: V323 = 0x44
0x3b4: V324 = ADD V309 0x44
0x3bb: V325 = SUB V309 V320
0x3bc: V326 = ADD V325 0x44
0x3c2: V327 = EXTCODESIZE V321
0x3c3: V328 = ISZERO V327
0x3c4: V329 = ISZERO V328
0x3c5: V330 = 0x3ca
0x3c8: JUMPI 0x3ca V329
---
Entry stack: [V10, 0x1a6, V226]
Stack pops: 1
Stack additions: [S0, V321, 0xa9059cbb, V324, 0x20, V320, V326, V320, 0x0, V321]
Exit stack: [V10, 0x1a6, V226, V321, 0xa9059cbb, V324, 0x20, V320, V326, V320, 0x0, V321]

================================

Block 0x3c9
[0x3c9:0x3c9]
---
Predecessors: [0x350]
Successors: []
---
0x3c9 INVALID
---
0x3c9: INVALID 
---
Entry stack: [V10, 0x1a6, V226, V321, 0xa9059cbb, V324, 0x20, V320, V326, V320, 0x0, V321]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V226, V321, 0xa9059cbb, V324, 0x20, V320, V326, V320, 0x0, V321]

================================

Block 0x3ca
[0x3ca:0x3d6]
---
Predecessors: [0x350]
Successors: [0x3d7, 0x3d8]
---
0x3ca JUMPDEST
0x3cb PUSH2 0x2c6
0x3ce GAS
0x3cf SUB
0x3d0 CALL
0x3d1 ISZERO
0x3d2 ISZERO
0x3d3 PUSH2 0x3d8
0x3d6 JUMPI
---
0x3ca: JUMPDEST 
0x3cb: V331 = 0x2c6
0x3ce: V332 = GAS
0x3cf: V333 = SUB V332 0x2c6
0x3d0: V334 = CALL V333 V321 0x0 V320 V326 V320 0x20
0x3d1: V335 = ISZERO V334
0x3d2: V336 = ISZERO V335
0x3d3: V337 = 0x3d8
0x3d6: JUMPI 0x3d8 V336
---
Entry stack: [V10, 0x1a6, V226, V321, 0xa9059cbb, V324, 0x20, V320, V326, V320, 0x0, V321]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1a6, V226, V321, 0xa9059cbb, V324]

================================

Block 0x3d7
[0x3d7:0x3d7]
---
Predecessors: [0x3ca]
Successors: []
---
0x3d7 INVALID
---
0x3d7: INVALID 
---
Entry stack: [V10, 0x1a6, V226, V321, 0xa9059cbb, V324]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V226, V321, 0xa9059cbb, V324]

================================

Block 0x3d8
[0x3d8:0x3db]
---
Predecessors: [0x3ca]
Successors: [0x3dc]
---
0x3d8 JUMPDEST
0x3d9 POP
0x3da POP
0x3db POP
---
0x3d8: JUMPDEST 
---
Entry stack: [V10, 0x1a6, V226, V321, 0xa9059cbb, V324]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x1a6, V226]

================================

Block 0x3dc
[0x3dc:0x3de]
---
Predecessors: [0x3d8]
Successors: [0x1a6]
---
0x3dc JUMPDEST
0x3dd POP
0x3de JUMP
---
0x3dc: JUMPDEST 
0x3de: JUMP 0x1a6
---
Entry stack: [V10, 0x1a6, V226]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x3df
[0x3df:0x3f5]
---
Predecessors: [0x2ad]
Successors: [0x3f6, 0x3fb]
---
0x3df JUMPDEST
0x3e0 PUSH1 0x0
0x3e2 SLOAD
0x3e3 CALLER
0x3e4 PUSH1 0x1
0x3e6 PUSH1 0xa0
0x3e8 PUSH1 0x2
0x3ea EXP
0x3eb SUB
0x3ec SWAP1
0x3ed DUP2
0x3ee AND
0x3ef SWAP2
0x3f0 AND
0x3f1 EQ
0x3f2 PUSH2 0x3fb
0x3f5 JUMPI
---
0x3df: JUMPDEST 
0x3e0: V338 = 0x0
0x3e2: V339 = S[0x0]
0x3e3: V340 = CALLER
0x3e4: V341 = 0x1
0x3e6: V342 = 0xa0
0x3e8: V343 = 0x2
0x3ea: V344 = EXP 0x2 0xa0
0x3eb: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ee: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x3f0: V347 = AND V339 0xffffffffffffffffffffffffffffffffffffffff
0x3f1: V348 = EQ V347 V346
0x3f2: V349 = 0x3fb
0x3f5: JUMPI 0x3fb V348
---
Entry stack: [V10, 0x1a6, V233]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V233]

================================

Block 0x3f6
[0x3f6:0x3fa]
---
Predecessors: [0x3df]
Successors: []
---
0x3f6 PUSH1 0x0
0x3f8 PUSH1 0x0
0x3fa REVERT
---
0x3f6: V350 = 0x0
0x3f8: V351 = 0x0
0x3fa: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1a6, V233]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a6, V233]

================================

Block 0x3fb
[0x3fb:0x400]
---
Predecessors: [0x3df]
Successors: [0x401]
---
0x3fb JUMPDEST
0x3fc PUSH1 0x2
0x3fe DUP2
0x3ff SWAP1
0x400 SSTORE
---
0x3fb: JUMPDEST 
0x3fc: V352 = 0x2
0x400: S[0x2] = V233
---
Entry stack: [V10, 0x1a6, V233]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1a6, V233]

================================

Block 0x401
[0x401:0x403]
---
Predecessors: [0x3fb]
Successors: [0x1a6]
---
0x401 JUMPDEST
0x402 POP
0x403 JUMP
---
0x401: JUMPDEST 
0x403: JUMP 0x1a6
---
Entry stack: [V10, 0x1a6, V233]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x404
[0x404:0x449]
---
Predecessors: []
Successors: []
---
0x404 STOP
0x405 LOG1
0x406 PUSH6 0x627a7a723058
0x40d SHA3
0x40e DUP15
0x40f AND
0x410 DIV
0x411 SWAP3
0x412 SWAP9
0x413 MISSING 0x5c
0x414 MISSING 0x47
0x415 CALLDATACOPY
0x416 MISSING 0xa5
0x417 STATICCALL
0x418 EXTCODEHASH
0x419 PUSH16 0x437a42ce5c37e88c609ea3602e693df7
0x42a MISSING 0xf8
0x42b MOD
0x42c DUP8
0x42d PUSH28 0x29
---
0x404: STOP 
0x405: LOG S0 S1 S2
0x406: V353 = 0x627a7a723058
0x40d: V354 = SHA3 0x627a7a723058 S3
0x40f: V355 = AND S17 V354
0x410: V356 = DIV V355 S4
0x413: MISSING 0x5c
0x414: MISSING 0x47
0x415: CALLDATACOPY S0 S1 S2
0x416: MISSING 0xa5
0x417: V357 = STATICCALL S0 S1 S2 S3 S4 S5
0x418: V358 = EXTCODEHASH V357
0x419: V359 = 0x437a42ce5c37e88c609ea3602e693df7
0x42a: MISSING 0xf8
0x42b: V360 = MOD S0 S1
0x42d: V361 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S13, S5, S6, V356, S8, S9, S10, S11, S12, S7, S14, S15, S16, S17, 0x437a42ce5c37e88c609ea3602e693df7, V358, 0x29, S8, V360, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0xe78501f
Entry block: 0x1a8
Exit block: 0x1a6
Body: 0x1a6, 0x1a8, 0x1af, 0x1b0, 0x2ba, 0x2d1, 0x2d6, 0x2dc

Function 1:
Public function signature: 0x1ffe4cca
Entry block: 0x1bd
Exit block: 0x1cd
Body: 0x1bd, 0x1c4, 0x1c5, 0x1cd, 0x2df

Function 2:
Public function signature: 0x29dcb0cf
Entry block: 0x1df
Exit block: 0x1cd
Body: 0x1cd, 0x1df, 0x1e6, 0x1e7, 0x2e5

Function 3:
Public function signature: 0x38af3eed
Entry block: 0x201
Exit block: 0x211
Body: 0x201, 0x208, 0x209, 0x211, 0x2eb

Function 4:
Public function signature: 0x6e66f6e9
Entry block: 0x22d
Exit block: 0x211
Body: 0x211, 0x22d, 0x234, 0x235, 0x2fa

Function 5:
Public function signature: 0xa035b1fe
Entry block: 0x259
Exit block: 0x1cd
Body: 0x1cd, 0x259, 0x260, 0x261, 0x309

Function 6:
Public function signature: 0xc47af5cf
Entry block: 0x27b
Exit block: 0x1a6
Body: 0x1a6, 0x27b, 0x282, 0x283, 0x30f, 0x326, 0x32b, 0x331

Function 7:
Public function signature: 0xda79b80c
Entry block: 0x290
Exit block: 0x1a6
Body: 0x1a6, 0x290, 0x297, 0x298, 0x334, 0x34b, 0x350, 0x3c9, 0x3ca, 0x3d7, 0x3d8, 0x3dc

Function 8:
Public function signature: 0xf72f6826
Entry block: 0x2a5
Exit block: 0x1a6
Body: 0x1a6, 0x2a5, 0x2ac, 0x2ad, 0x3df, 0x3f6, 0x3fb, 0x401

Function 9:
Public fallback function
Entry block: 0x96
Exit block: 0x1a6
Body: 0x96, 0x9a, 0xa7, 0xac, 0xb6, 0xbb, 0xc9, 0xce, 0xf1, 0xf2, 0x162, 0x163, 0x170, 0x171, 0x1a1, 0x1a2, 0x1a3, 0x1a6

