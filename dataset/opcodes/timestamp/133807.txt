Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x93]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x93
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x93
0xa: JUMPI 0x93 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x95]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2d05d3f
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x95
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2d05d3f
0x20: V14 = EQ V12 0x2d05d3f
0x21: V15 = 0x95
0x24: JUMPI 0x95 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xc1]
---
0x25 DUP1
0x26 PUSH4 0x36bdee74
0x2b EQ
0x2c PUSH2 0xc1
0x2f JUMPI
---
0x26: V16 = 0x36bdee74
0x2b: V17 = EQ 0x36bdee74 V12
0x2c: V18 = 0xc1
0x2f: JUMPI 0xc1 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xe3]
---
0x30 DUP1
0x31 PUSH4 0x407a6727
0x36 EQ
0x37 PUSH2 0xe3
0x3a JUMPI
---
0x31: V19 = 0x407a6727
0x36: V20 = EQ 0x407a6727 V12
0x37: V21 = 0xe3
0x3a: JUMPI 0xe3 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x105]
---
0x3b DUP1
0x3c PUSH4 0x416ccd02
0x41 EQ
0x42 PUSH2 0x105
0x45 JUMPI
---
0x3c: V22 = 0x416ccd02
0x41: V23 = EQ 0x416ccd02 V12
0x42: V24 = 0x105
0x45: JUMPI 0x105 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x127]
---
0x46 DUP1
0x47 PUSH4 0x4c12d8b9
0x4c EQ
0x4d PUSH2 0x127
0x50 JUMPI
---
0x47: V25 = 0x4c12d8b9
0x4c: V26 = EQ 0x4c12d8b9 V12
0x4d: V27 = 0x127
0x50: JUMPI 0x127 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x155]
---
0x51 DUP1
0x52 PUSH4 0x583f0ae6
0x57 EQ
0x58 PUSH2 0x155
0x5b JUMPI
---
0x52: V28 = 0x583f0ae6
0x57: V29 = EQ 0x583f0ae6 V12
0x58: V30 = 0x155
0x5b: JUMPI 0x155 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x171]
---
0x5c DUP1
0x5d PUSH4 0x6be00229
0x62 EQ
0x63 PUSH2 0x171
0x66 JUMPI
---
0x5d: V31 = 0x6be00229
0x62: V32 = EQ 0x6be00229 V12
0x63: V33 = 0x171
0x66: JUMPI 0x171 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x19d]
---
0x67 DUP1
0x68 PUSH4 0xbbcd5bbe
0x6d EQ
0x6e PUSH2 0x19d
0x71 JUMPI
---
0x68: V34 = 0xbbcd5bbe
0x6d: V35 = EQ 0xbbcd5bbe V12
0x6e: V36 = 0x19d
0x71: JUMPI 0x19d V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1bb]
---
0x72 DUP1
0x73 PUSH4 0xbe9a6555
0x78 EQ
0x79 PUSH2 0x1bb
0x7c JUMPI
---
0x73: V37 = 0xbe9a6555
0x78: V38 = EQ 0xbe9a6555 V12
0x79: V39 = 0x1bb
0x7c: JUMPI 0x1bb V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x1dd]
---
0x7d DUP1
0x7e PUSH4 0xc851b643
0x83 EQ
0x84 PUSH2 0x1dd
0x87 JUMPI
---
0x7e: V40 = 0xc851b643
0x83: V41 = EQ 0xc851b643 V12
0x84: V42 = 0x1dd
0x87: JUMPI 0x1dd V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x209]
---
0x88 DUP1
0x89 PUSH4 0xcc6da375
0x8e EQ
0x8f PUSH2 0x209
0x92 JUMPI
---
0x89: V43 = 0xcc6da375
0x8e: V44 = EQ 0xcc6da375 V12
0x8f: V45 = 0x209
0x92: JUMPI 0x209 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x94]
---
Predecessors: [0x0, 0x88]
Successors: []
---
0x93 JUMPDEST
0x94 INVALID
---
0x93: JUMPDEST 
0x94: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x95
[0x95:0x9b]
---
Predecessors: [0xb]
Successors: [0x9c, 0x9d]
---
0x95 JUMPDEST
0x96 CALLVALUE
0x97 ISZERO
0x98 PUSH2 0x9d
0x9b JUMPI
---
0x95: JUMPDEST 
0x96: V46 = CALLVALUE
0x97: V47 = ISZERO V46
0x98: V48 = 0x9d
0x9b: JUMPI 0x9d V47
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9c
[0x9c:0x9c]
---
Predecessors: [0x95]
Successors: []
---
0x9c INVALID
---
0x9c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9d
[0x9d:0xa4]
---
Predecessors: [0x95]
Successors: [0x237]
---
0x9d JUMPDEST
0x9e PUSH2 0xa5
0xa1 PUSH2 0x237
0xa4 JUMP
---
0x9d: JUMPDEST 
0x9e: V49 = 0xa5
0xa1: V50 = 0x237
0xa4: JUMP 0x237
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5]
Exit stack: [V12, 0xa5]

================================

Block 0xa5
[0xa5:0xc0]
---
Predecessors: [0x237, 0x472, 0x4e6]
Successors: []
---
0xa5 JUMPDEST
0xa6 PUSH1 0x40
0xa8 DUP1
0xa9 MLOAD
0xaa PUSH1 0x1
0xac PUSH1 0xa0
0xae PUSH1 0x2
0xb0 EXP
0xb1 SUB
0xb2 SWAP1
0xb3 SWAP3
0xb4 AND
0xb5 DUP3
0xb6 MSTORE
0xb7 MLOAD
0xb8 SWAP1
0xb9 DUP2
0xba SWAP1
0xbb SUB
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP1
0xc0 RETURN
---
0xa5: JUMPDEST 
0xa6: V51 = 0x40
0xa9: V52 = M[0x40]
0xaa: V53 = 0x1
0xac: V54 = 0xa0
0xae: V55 = 0x2
0xb0: V56 = EXP 0x2 0xa0
0xb1: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4: V58 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xb6: M[V52] = V58
0xb7: V59 = M[0x40]
0xbb: V60 = SUB V52 V59
0xbc: V61 = 0x20
0xbe: V62 = ADD 0x20 V60
0xc0: RETURN V59 V62
---
Entry stack: [V12, 0xa5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa5]

================================

Block 0xc1
[0xc1:0xc7]
---
Predecessors: [0x25]
Successors: [0xc8, 0xc9]
---
0xc1 JUMPDEST
0xc2 CALLVALUE
0xc3 ISZERO
0xc4 PUSH2 0xc9
0xc7 JUMPI
---
0xc1: JUMPDEST 
0xc2: V63 = CALLVALUE
0xc3: V64 = ISZERO V63
0xc4: V65 = 0xc9
0xc7: JUMPI 0xc9 V64
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc8
[0xc8:0xc8]
---
Predecessors: [0xc1]
Successors: []
---
0xc8 INVALID
---
0xc8: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0xc1]
Successors: [0x246]
---
0xc9 JUMPDEST
0xca PUSH2 0xd1
0xcd PUSH2 0x246
0xd0 JUMP
---
0xc9: JUMPDEST 
0xca: V66 = 0xd1
0xcd: V67 = 0x246
0xd0: JUMP 0x246
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V12, 0xd1]

================================

Block 0xd1
[0xd1:0xe2]
---
Predecessors: [0x246, 0x24c, 0x252, 0x258, 0x4e0, 0x4f5]
Successors: []
---
0xd1 JUMPDEST
0xd2 PUSH1 0x40
0xd4 DUP1
0xd5 MLOAD
0xd6 SWAP2
0xd7 DUP3
0xd8 MSTORE
0xd9 MLOAD
0xda SWAP1
0xdb DUP2
0xdc SWAP1
0xdd SUB
0xde PUSH1 0x20
0xe0 ADD
0xe1 SWAP1
0xe2 RETURN
---
0xd1: JUMPDEST 
0xd2: V68 = 0x40
0xd5: V69 = M[0x40]
0xd8: M[V69] = S0
0xd9: V70 = M[0x40]
0xdd: V71 = SUB V69 V70
0xde: V72 = 0x20
0xe0: V73 = ADD 0x20 V71
0xe2: RETURN V70 V73
---
Entry stack: [V12, 0xd1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xd1]

================================

Block 0xe3
[0xe3:0xe9]
---
Predecessors: [0x30]
Successors: [0xea, 0xeb]
---
0xe3 JUMPDEST
0xe4 CALLVALUE
0xe5 ISZERO
0xe6 PUSH2 0xeb
0xe9 JUMPI
---
0xe3: JUMPDEST 
0xe4: V74 = CALLVALUE
0xe5: V75 = ISZERO V74
0xe6: V76 = 0xeb
0xe9: JUMPI 0xeb V75
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xea
[0xea:0xea]
---
Predecessors: [0xe3]
Successors: []
---
0xea INVALID
---
0xea: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf2]
---
Predecessors: [0xe3]
Successors: [0x24c]
---
0xeb JUMPDEST
0xec PUSH2 0xd1
0xef PUSH2 0x24c
0xf2 JUMP
---
0xeb: JUMPDEST 
0xec: V77 = 0xd1
0xef: V78 = 0x24c
0xf2: JUMP 0x24c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V12, 0xd1]

================================

Block 0xf3
[0xf3:0x104]
---
Predecessors: []
Successors: []
---
0xf3 JUMPDEST
0xf4 PUSH1 0x40
0xf6 DUP1
0xf7 MLOAD
0xf8 SWAP2
0xf9 DUP3
0xfa MSTORE
0xfb MLOAD
0xfc SWAP1
0xfd DUP2
0xfe SWAP1
0xff SUB
0x100 PUSH1 0x20
0x102 ADD
0x103 SWAP1
0x104 RETURN
---
0xf3: JUMPDEST 
0xf4: V79 = 0x40
0xf7: V80 = M[0x40]
0xfa: M[V80] = S0
0xfb: V81 = M[0x40]
0xff: V82 = SUB V80 V81
0x100: V83 = 0x20
0x102: V84 = ADD 0x20 V82
0x104: RETURN V81 V84
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x105
[0x105:0x10b]
---
Predecessors: [0x3b]
Successors: [0x10c, 0x10d]
---
0x105 JUMPDEST
0x106 CALLVALUE
0x107 ISZERO
0x108 PUSH2 0x10d
0x10b JUMPI
---
0x105: JUMPDEST 
0x106: V85 = CALLVALUE
0x107: V86 = ISZERO V85
0x108: V87 = 0x10d
0x10b: JUMPI 0x10d V86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x10c]
---
Predecessors: [0x105]
Successors: []
---
0x10c INVALID
---
0x10c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10d
[0x10d:0x114]
---
Predecessors: [0x105]
Successors: [0x252]
---
0x10d JUMPDEST
0x10e PUSH2 0xd1
0x111 PUSH2 0x252
0x114 JUMP
---
0x10d: JUMPDEST 
0x10e: V88 = 0xd1
0x111: V89 = 0x252
0x114: JUMP 0x252
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V12, 0xd1]

================================

Block 0x115
[0x115:0x126]
---
Predecessors: []
Successors: []
---
0x115 JUMPDEST
0x116 PUSH1 0x40
0x118 DUP1
0x119 MLOAD
0x11a SWAP2
0x11b DUP3
0x11c MSTORE
0x11d MLOAD
0x11e SWAP1
0x11f DUP2
0x120 SWAP1
0x121 SUB
0x122 PUSH1 0x20
0x124 ADD
0x125 SWAP1
0x126 RETURN
---
0x115: JUMPDEST 
0x116: V90 = 0x40
0x119: V91 = M[0x40]
0x11c: M[V91] = S0
0x11d: V92 = M[0x40]
0x121: V93 = SUB V91 V92
0x122: V94 = 0x20
0x124: V95 = ADD 0x20 V93
0x126: RETURN V92 V95
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x127
[0x127:0x12d]
---
Predecessors: [0x46]
Successors: [0x12e, 0x12f]
---
0x127 JUMPDEST
0x128 CALLVALUE
0x129 ISZERO
0x12a PUSH2 0x12f
0x12d JUMPI
---
0x127: JUMPDEST 
0x128: V96 = CALLVALUE
0x129: V97 = ISZERO V96
0x12a: V98 = 0x12f
0x12d: JUMPI 0x12f V97
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12e
[0x12e:0x12e]
---
Predecessors: [0x127]
Successors: []
---
0x12e INVALID
---
0x12e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12f
[0x12f:0x142]
---
Predecessors: [0x127]
Successors: [0x258]
---
0x12f JUMPDEST
0x130 PUSH2 0xd1
0x133 PUSH1 0x1
0x135 PUSH1 0xa0
0x137 PUSH1 0x2
0x139 EXP
0x13a SUB
0x13b PUSH1 0x4
0x13d CALLDATALOAD
0x13e AND
0x13f PUSH2 0x258
0x142 JUMP
---
0x12f: JUMPDEST 
0x130: V99 = 0xd1
0x133: V100 = 0x1
0x135: V101 = 0xa0
0x137: V102 = 0x2
0x139: V103 = EXP 0x2 0xa0
0x13a: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13b: V105 = 0x4
0x13d: V106 = CALLDATALOAD 0x4
0x13e: V107 = AND V106 0xffffffffffffffffffffffffffffffffffffffff
0x13f: V108 = 0x258
0x142: JUMP 0x258
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd1, V107]
Exit stack: [V12, 0xd1, V107]

================================

Block 0x143
[0x143:0x154]
---
Predecessors: []
Successors: []
---
0x143 JUMPDEST
0x144 PUSH1 0x40
0x146 DUP1
0x147 MLOAD
0x148 SWAP2
0x149 DUP3
0x14a MSTORE
0x14b MLOAD
0x14c SWAP1
0x14d DUP2
0x14e SWAP1
0x14f SUB
0x150 PUSH1 0x20
0x152 ADD
0x153 SWAP1
0x154 RETURN
---
0x143: JUMPDEST 
0x144: V109 = 0x40
0x147: V110 = M[0x40]
0x14a: M[V110] = S0
0x14b: V111 = M[0x40]
0x14f: V112 = SUB V110 V111
0x150: V113 = 0x20
0x152: V114 = ADD 0x20 V112
0x154: RETURN V111 V114
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x155
[0x155:0x16e]
---
Predecessors: [0x51]
Successors: [0x26a]
---
0x155 JUMPDEST
0x156 PUSH2 0x16f
0x159 PUSH1 0x1
0x15b PUSH1 0xa0
0x15d PUSH1 0x2
0x15f EXP
0x160 SUB
0x161 PUSH1 0x4
0x163 CALLDATALOAD
0x164 DUP2
0x165 AND
0x166 SWAP1
0x167 PUSH1 0x24
0x169 CALLDATALOAD
0x16a AND
0x16b PUSH2 0x26a
0x16e JUMP
---
0x155: JUMPDEST 
0x156: V115 = 0x16f
0x159: V116 = 0x1
0x15b: V117 = 0xa0
0x15d: V118 = 0x2
0x15f: V119 = EXP 0x2 0xa0
0x160: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x161: V121 = 0x4
0x163: V122 = CALLDATALOAD 0x4
0x165: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x167: V124 = 0x24
0x169: V125 = CALLDATALOAD 0x24
0x16a: V126 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V127 = 0x26a
0x16e: JUMP 0x26a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x16f, V123, V126]
Exit stack: [V12, 0x16f, V123, V126]

================================

Block 0x16f
[0x16f:0x170]
---
Predecessors: [0x46d, 0x4dd]
Successors: []
---
0x16f JUMPDEST
0x170 STOP
---
0x16f: JUMPDEST 
0x170: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x171
[0x171:0x177]
---
Predecessors: [0x5c]
Successors: [0x178, 0x179]
---
0x171 JUMPDEST
0x172 CALLVALUE
0x173 ISZERO
0x174 PUSH2 0x179
0x177 JUMPI
---
0x171: JUMPDEST 
0x172: V128 = CALLVALUE
0x173: V129 = ISZERO V128
0x174: V130 = 0x179
0x177: JUMPI 0x179 V129
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x178
[0x178:0x178]
---
Predecessors: [0x171]
Successors: []
---
0x178 INVALID
---
0x178: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x179
[0x179:0x180]
---
Predecessors: [0x171]
Successors: [0x472]
---
0x179 JUMPDEST
0x17a PUSH2 0xa5
0x17d PUSH2 0x472
0x180 JUMP
---
0x179: JUMPDEST 
0x17a: V131 = 0xa5
0x17d: V132 = 0x472
0x180: JUMP 0x472
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5]
Exit stack: [V12, 0xa5]

================================

Block 0x181
[0x181:0x19c]
---
Predecessors: []
Successors: []
---
0x181 JUMPDEST
0x182 PUSH1 0x40
0x184 DUP1
0x185 MLOAD
0x186 PUSH1 0x1
0x188 PUSH1 0xa0
0x18a PUSH1 0x2
0x18c EXP
0x18d SUB
0x18e SWAP1
0x18f SWAP3
0x190 AND
0x191 DUP3
0x192 MSTORE
0x193 MLOAD
0x194 SWAP1
0x195 DUP2
0x196 SWAP1
0x197 SUB
0x198 PUSH1 0x20
0x19a ADD
0x19b SWAP1
0x19c RETURN
---
0x181: JUMPDEST 
0x182: V133 = 0x40
0x185: V134 = M[0x40]
0x186: V135 = 0x1
0x188: V136 = 0xa0
0x18a: V137 = 0x2
0x18c: V138 = EXP 0x2 0xa0
0x18d: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x190: V140 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x192: M[V134] = V140
0x193: V141 = M[0x40]
0x197: V142 = SUB V134 V141
0x198: V143 = 0x20
0x19a: V144 = ADD 0x20 V142
0x19c: RETURN V141 V144
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x19d
[0x19d:0x1a3]
---
Predecessors: [0x67]
Successors: [0x1a4, 0x1a5]
---
0x19d JUMPDEST
0x19e CALLVALUE
0x19f ISZERO
0x1a0 PUSH2 0x1a5
0x1a3 JUMPI
---
0x19d: JUMPDEST 
0x19e: V145 = CALLVALUE
0x19f: V146 = ISZERO V145
0x1a0: V147 = 0x1a5
0x1a3: JUMPI 0x1a5 V146
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a4
[0x1a4:0x1a4]
---
Predecessors: [0x19d]
Successors: []
---
0x1a4 INVALID
---
0x1a4: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a5
[0x1a5:0x1b8]
---
Predecessors: [0x19d]
Successors: [0x481]
---
0x1a5 JUMPDEST
0x1a6 PUSH2 0x16f
0x1a9 PUSH1 0x1
0x1ab PUSH1 0xa0
0x1ad PUSH1 0x2
0x1af EXP
0x1b0 SUB
0x1b1 PUSH1 0x4
0x1b3 CALLDATALOAD
0x1b4 AND
0x1b5 PUSH2 0x481
0x1b8 JUMP
---
0x1a5: JUMPDEST 
0x1a6: V148 = 0x16f
0x1a9: V149 = 0x1
0x1ab: V150 = 0xa0
0x1ad: V151 = 0x2
0x1af: V152 = EXP 0x2 0xa0
0x1b0: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b1: V154 = 0x4
0x1b3: V155 = CALLDATALOAD 0x4
0x1b4: V156 = AND V155 0xffffffffffffffffffffffffffffffffffffffff
0x1b5: V157 = 0x481
0x1b8: JUMP 0x481
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x16f, V156]
Exit stack: [V12, 0x16f, V156]

================================

Block 0x1b9
[0x1b9:0x1ba]
---
Predecessors: []
Successors: []
---
0x1b9 JUMPDEST
0x1ba STOP
---
0x1b9: JUMPDEST 
0x1ba: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1bb
[0x1bb:0x1c1]
---
Predecessors: [0x72]
Successors: [0x1c2, 0x1c3]
---
0x1bb JUMPDEST
0x1bc CALLVALUE
0x1bd ISZERO
0x1be PUSH2 0x1c3
0x1c1 JUMPI
---
0x1bb: JUMPDEST 
0x1bc: V158 = CALLVALUE
0x1bd: V159 = ISZERO V158
0x1be: V160 = 0x1c3
0x1c1: JUMPI 0x1c3 V159
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c2
[0x1c2:0x1c2]
---
Predecessors: [0x1bb]
Successors: []
---
0x1c2 INVALID
---
0x1c2: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c3
[0x1c3:0x1ca]
---
Predecessors: [0x1bb]
Successors: [0x4e0]
---
0x1c3 JUMPDEST
0x1c4 PUSH2 0xd1
0x1c7 PUSH2 0x4e0
0x1ca JUMP
---
0x1c3: JUMPDEST 
0x1c4: V161 = 0xd1
0x1c7: V162 = 0x4e0
0x1ca: JUMP 0x4e0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V12, 0xd1]

================================

Block 0x1cb
[0x1cb:0x1dc]
---
Predecessors: []
Successors: []
---
0x1cb JUMPDEST
0x1cc PUSH1 0x40
0x1ce DUP1
0x1cf MLOAD
0x1d0 SWAP2
0x1d1 DUP3
0x1d2 MSTORE
0x1d3 MLOAD
0x1d4 SWAP1
0x1d5 DUP2
0x1d6 SWAP1
0x1d7 SUB
0x1d8 PUSH1 0x20
0x1da ADD
0x1db SWAP1
0x1dc RETURN
---
0x1cb: JUMPDEST 
0x1cc: V163 = 0x40
0x1cf: V164 = M[0x40]
0x1d2: M[V164] = S0
0x1d3: V165 = M[0x40]
0x1d7: V166 = SUB V164 V165
0x1d8: V167 = 0x20
0x1da: V168 = ADD 0x20 V166
0x1dc: RETURN V165 V168
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1dd
[0x1dd:0x1e3]
---
Predecessors: [0x7d]
Successors: [0x1e4, 0x1e5]
---
0x1dd JUMPDEST
0x1de CALLVALUE
0x1df ISZERO
0x1e0 PUSH2 0x1e5
0x1e3 JUMPI
---
0x1dd: JUMPDEST 
0x1de: V169 = CALLVALUE
0x1df: V170 = ISZERO V169
0x1e0: V171 = 0x1e5
0x1e3: JUMPI 0x1e5 V170
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e4
[0x1e4:0x1e4]
---
Predecessors: [0x1dd]
Successors: []
---
0x1e4 INVALID
---
0x1e4: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e5
[0x1e5:0x1ec]
---
Predecessors: [0x1dd]
Successors: [0x4e6]
---
0x1e5 JUMPDEST
0x1e6 PUSH2 0xa5
0x1e9 PUSH2 0x4e6
0x1ec JUMP
---
0x1e5: JUMPDEST 
0x1e6: V172 = 0xa5
0x1e9: V173 = 0x4e6
0x1ec: JUMP 0x4e6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa5]
Exit stack: [V12, 0xa5]

================================

Block 0x1ed
[0x1ed:0x208]
---
Predecessors: []
Successors: []
---
0x1ed JUMPDEST
0x1ee PUSH1 0x40
0x1f0 DUP1
0x1f1 MLOAD
0x1f2 PUSH1 0x1
0x1f4 PUSH1 0xa0
0x1f6 PUSH1 0x2
0x1f8 EXP
0x1f9 SUB
0x1fa SWAP1
0x1fb SWAP3
0x1fc AND
0x1fd DUP3
0x1fe MSTORE
0x1ff MLOAD
0x200 SWAP1
0x201 DUP2
0x202 SWAP1
0x203 SUB
0x204 PUSH1 0x20
0x206 ADD
0x207 SWAP1
0x208 RETURN
---
0x1ed: JUMPDEST 
0x1ee: V174 = 0x40
0x1f1: V175 = M[0x40]
0x1f2: V176 = 0x1
0x1f4: V177 = 0xa0
0x1f6: V178 = 0x2
0x1f8: V179 = EXP 0x2 0xa0
0x1f9: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fc: V181 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1fe: M[V175] = V181
0x1ff: V182 = M[0x40]
0x203: V183 = SUB V175 V182
0x204: V184 = 0x20
0x206: V185 = ADD 0x20 V183
0x208: RETURN V182 V185
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x209
[0x209:0x20f]
---
Predecessors: [0x88]
Successors: [0x210, 0x211]
---
0x209 JUMPDEST
0x20a CALLVALUE
0x20b ISZERO
0x20c PUSH2 0x211
0x20f JUMPI
---
0x209: JUMPDEST 
0x20a: V186 = CALLVALUE
0x20b: V187 = ISZERO V186
0x20c: V188 = 0x211
0x20f: JUMPI 0x211 V187
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x210
[0x210:0x210]
---
Predecessors: [0x209]
Successors: []
---
0x210 INVALID
---
0x210: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x211
[0x211:0x224]
---
Predecessors: [0x209]
Successors: [0x4f5]
---
0x211 JUMPDEST
0x212 PUSH2 0xd1
0x215 PUSH1 0x1
0x217 PUSH1 0xa0
0x219 PUSH1 0x2
0x21b EXP
0x21c SUB
0x21d PUSH1 0x4
0x21f CALLDATALOAD
0x220 AND
0x221 PUSH2 0x4f5
0x224 JUMP
---
0x211: JUMPDEST 
0x212: V189 = 0xd1
0x215: V190 = 0x1
0x217: V191 = 0xa0
0x219: V192 = 0x2
0x21b: V193 = EXP 0x2 0xa0
0x21c: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21d: V195 = 0x4
0x21f: V196 = CALLDATALOAD 0x4
0x220: V197 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0x221: V198 = 0x4f5
0x224: JUMP 0x4f5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd1, V197]
Exit stack: [V12, 0xd1, V197]

================================

Block 0x225
[0x225:0x236]
---
Predecessors: []
Successors: []
---
0x225 JUMPDEST
0x226 PUSH1 0x40
0x228 DUP1
0x229 MLOAD
0x22a SWAP2
0x22b DUP3
0x22c MSTORE
0x22d MLOAD
0x22e SWAP1
0x22f DUP2
0x230 SWAP1
0x231 SUB
0x232 PUSH1 0x20
0x234 ADD
0x235 SWAP1
0x236 RETURN
---
0x225: JUMPDEST 
0x226: V199 = 0x40
0x229: V200 = M[0x40]
0x22c: M[V200] = S0
0x22d: V201 = M[0x40]
0x231: V202 = SUB V200 V201
0x232: V203 = 0x20
0x234: V204 = ADD 0x20 V202
0x236: RETURN V201 V204
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x237
[0x237:0x245]
---
Predecessors: [0x9d]
Successors: [0xa5]
---
0x237 JUMPDEST
0x238 PUSH1 0x0
0x23a SLOAD
0x23b PUSH1 0x1
0x23d PUSH1 0xa0
0x23f PUSH1 0x2
0x241 EXP
0x242 SUB
0x243 AND
0x244 DUP2
0x245 JUMP
---
0x237: JUMPDEST 
0x238: V205 = 0x0
0x23a: V206 = S[0x0]
0x23b: V207 = 0x1
0x23d: V208 = 0xa0
0x23f: V209 = 0x2
0x241: V210 = EXP 0x2 0xa0
0x242: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x243: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x245: JUMP 0xa5
---
Entry stack: [V12, 0xa5]
Stack pops: 1
Stack additions: [S0, V212]
Exit stack: [V12, 0xa5, V212]

================================

Block 0x246
[0x246:0x24b]
---
Predecessors: [0xc9]
Successors: [0xd1]
---
0x246 JUMPDEST
0x247 PUSH1 0x7
0x249 SLOAD
0x24a DUP2
0x24b JUMP
---
0x246: JUMPDEST 
0x247: V213 = 0x7
0x249: V214 = S[0x7]
0x24b: JUMP 0xd1
---
Entry stack: [V12, 0xd1]
Stack pops: 1
Stack additions: [S0, V214]
Exit stack: [V12, 0xd1, V214]

================================

Block 0x24c
[0x24c:0x251]
---
Predecessors: [0xeb]
Successors: [0xd1]
---
0x24c JUMPDEST
0x24d PUSH1 0x8
0x24f SLOAD
0x250 DUP2
0x251 JUMP
---
0x24c: JUMPDEST 
0x24d: V215 = 0x8
0x24f: V216 = S[0x8]
0x251: JUMP 0xd1
---
Entry stack: [V12, 0xd1]
Stack pops: 1
Stack additions: [S0, V216]
Exit stack: [V12, 0xd1, V216]

================================

Block 0x252
[0x252:0x257]
---
Predecessors: [0x10d]
Successors: [0xd1]
---
0x252 JUMPDEST
0x253 PUSH1 0x3
0x255 SLOAD
0x256 DUP2
0x257 JUMP
---
0x252: JUMPDEST 
0x253: V217 = 0x3
0x255: V218 = S[0x3]
0x257: JUMP 0xd1
---
Entry stack: [V12, 0xd1]
Stack pops: 1
Stack additions: [S0, V218]
Exit stack: [V12, 0xd1, V218]

================================

Block 0x258
[0x258:0x269]
---
Predecessors: [0x12f]
Successors: [0xd1]
---
0x258 JUMPDEST
0x259 PUSH1 0x5
0x25b PUSH1 0x20
0x25d MSTORE
0x25e PUSH1 0x0
0x260 SWAP1
0x261 DUP2
0x262 MSTORE
0x263 PUSH1 0x40
0x265 SWAP1
0x266 SHA3
0x267 SLOAD
0x268 DUP2
0x269 JUMP
---
0x258: JUMPDEST 
0x259: V219 = 0x5
0x25b: V220 = 0x20
0x25d: M[0x20] = 0x5
0x25e: V221 = 0x0
0x262: M[0x0] = V107
0x263: V222 = 0x40
0x266: V223 = SHA3 0x0 0x40
0x267: V224 = S[V223]
0x269: JUMP 0xd1
---
Entry stack: [V12, 0xd1, V107]
Stack pops: 2
Stack additions: [S1, V224]
Exit stack: [V12, 0xd1, V224]

================================

Block 0x26a
[0x26a:0x27f]
---
Predecessors: [0x155]
Successors: [0x280, 0x284]
---
0x26a JUMPDEST
0x26b PUSH1 0x4
0x26d SLOAD
0x26e PUSH1 0x0
0x270 SWAP1
0x271 PUSH1 0x1
0x273 PUSH1 0xa0
0x275 PUSH1 0x2
0x277 EXP
0x278 SUB
0x279 AND
0x27a ISZERO
0x27b ISZERO
0x27c PUSH2 0x284
0x27f JUMPI
---
0x26a: JUMPDEST 
0x26b: V225 = 0x4
0x26d: V226 = S[0x4]
0x26e: V227 = 0x0
0x271: V228 = 0x1
0x273: V229 = 0xa0
0x275: V230 = 0x2
0x277: V231 = EXP 0x2 0xa0
0x278: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x279: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x27a: V234 = ISZERO V233
0x27b: V235 = ISZERO V234
0x27c: V236 = 0x284
0x27f: JUMPI 0x284 V235
---
Entry stack: [V12, 0x16f, V123, V126]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x16f, V123, V126, 0x0]

================================

Block 0x280
[0x280:0x283]
---
Predecessors: [0x26a]
Successors: []
---
0x280 PUSH2 0x0
0x283 JUMP
---
0x280: V237 = 0x0
0x283: THROW 
---
Entry stack: [V12, 0x16f, V123, V126, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, 0x0]

================================

Block 0x284
[0x284:0x28e]
---
Predecessors: [0x26a]
Successors: [0x28f, 0x293]
---
0x284 JUMPDEST
0x285 PUSH1 0x2
0x287 SLOAD
0x288 TIMESTAMP
0x289 LT
0x28a ISZERO
0x28b PUSH2 0x293
0x28e JUMPI
---
0x284: JUMPDEST 
0x285: V238 = 0x2
0x287: V239 = S[0x2]
0x288: V240 = TIMESTAMP
0x289: V241 = LT V240 V239
0x28a: V242 = ISZERO V241
0x28b: V243 = 0x293
0x28e: JUMPI 0x293 V242
---
Entry stack: [V12, 0x16f, V123, V126, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, 0x0]

================================

Block 0x28f
[0x28f:0x292]
---
Predecessors: [0x284]
Successors: []
---
0x28f PUSH2 0x0
0x292 JUMP
---
0x28f: V244 = 0x0
0x292: THROW 
---
Entry stack: [V12, 0x16f, V123, V126, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, 0x0]

================================

Block 0x293
[0x293:0x29a]
---
Predecessors: [0x284]
Successors: [0x29b, 0x29f]
---
0x293 JUMPDEST
0x294 CALLVALUE
0x295 ISZERO
0x296 ISZERO
0x297 PUSH2 0x29f
0x29a JUMPI
---
0x293: JUMPDEST 
0x294: V245 = CALLVALUE
0x295: V246 = ISZERO V245
0x296: V247 = ISZERO V246
0x297: V248 = 0x29f
0x29a: JUMPI 0x29f V247
---
Entry stack: [V12, 0x16f, V123, V126, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, 0x0]

================================

Block 0x29b
[0x29b:0x29e]
---
Predecessors: [0x293]
Successors: []
---
0x29b PUSH2 0x0
0x29e JUMP
---
0x29b: V249 = 0x0
0x29e: THROW 
---
Entry stack: [V12, 0x16f, V123, V126, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, 0x0]

================================

Block 0x29f
[0x29f:0x2b0]
---
Predecessors: [0x293]
Successors: [0x2b1, 0x2c7]
---
0x29f JUMPDEST
0x2a0 DUP2
0x2a1 PUSH1 0x1
0x2a3 PUSH1 0xa0
0x2a5 PUSH1 0x2
0x2a7 EXP
0x2a8 SUB
0x2a9 DUP2
0x2aa AND
0x2ab ISZERO
0x2ac DUP1
0x2ad PUSH2 0x2c7
0x2b0 JUMPI
---
0x29f: JUMPDEST 
0x2a1: V250 = 0x1
0x2a3: V251 = 0xa0
0x2a5: V252 = 0x2
0x2a7: V253 = EXP 0x2 0xa0
0x2a8: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2aa: V255 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V256 = ISZERO V255
0x2ad: V257 = 0x2c7
0x2b0: JUMPI 0x2c7 V256
---
Entry stack: [V12, 0x16f, V123, V126, 0x0]
Stack pops: 2
Stack additions: [S1, S0, S1, V256]
Exit stack: [V12, 0x16f, V123, V126, 0x0, V126, V256]

================================

Block 0x2b1
[0x2b1:0x2c6]
---
Predecessors: [0x29f]
Successors: [0x2c7]
---
0x2b1 POP
0x2b2 ADDRESS
0x2b3 PUSH1 0x1
0x2b5 PUSH1 0xa0
0x2b7 PUSH1 0x2
0x2b9 EXP
0x2ba SUB
0x2bb AND
0x2bc DUP2
0x2bd PUSH1 0x1
0x2bf PUSH1 0xa0
0x2c1 PUSH1 0x2
0x2c3 EXP
0x2c4 SUB
0x2c5 AND
0x2c6 EQ
---
0x2b2: V258 = ADDRESS
0x2b3: V259 = 0x1
0x2b5: V260 = 0xa0
0x2b7: V261 = 0x2
0x2b9: V262 = EXP 0x2 0xa0
0x2ba: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bb: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x2bd: V265 = 0x1
0x2bf: V266 = 0xa0
0x2c1: V267 = 0x2
0x2c3: V268 = EXP 0x2 0xa0
0x2c4: V269 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c5: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x2c6: V271 = EQ V270 V264
---
Entry stack: [V12, 0x16f, V123, V126, 0x0, V126, V256]
Stack pops: 2
Stack additions: [S1, V271]
Exit stack: [V12, 0x16f, V123, V126, 0x0, V126, V271]

================================

Block 0x2c7
[0x2c7:0x2cc]
---
Predecessors: [0x29f, 0x2b1]
Successors: [0x2cd, 0x2d1]
---
0x2c7 JUMPDEST
0x2c8 ISZERO
0x2c9 PUSH2 0x2d1
0x2cc JUMPI
---
0x2c7: JUMPDEST 
0x2c8: V272 = ISZERO S0
0x2c9: V273 = 0x2d1
0x2cc: JUMPI 0x2d1 V272
---
Entry stack: [V12, 0x16f, V123, V126, 0x0, V126, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, 0x0, V126]

================================

Block 0x2cd
[0x2cd:0x2d0]
---
Predecessors: [0x2c7]
Successors: []
---
0x2cd PUSH2 0x0
0x2d0 JUMP
---
0x2cd: V274 = 0x0
0x2d0: THROW 
---
Entry stack: [V12, 0x16f, V123, V126, 0x0, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, 0x0, V126]

================================

Block 0x2d1
[0x2d1:0x2e7]
---
Predecessors: [0x2c7]
Successors: [0x2e8, 0x2ec]
---
0x2d1 JUMPDEST
0x2d2 PUSH1 0x4
0x2d4 SLOAD
0x2d5 CALLER
0x2d6 PUSH1 0x1
0x2d8 PUSH1 0xa0
0x2da PUSH1 0x2
0x2dc EXP
0x2dd SUB
0x2de SWAP1
0x2df DUP2
0x2e0 AND
0x2e1 SWAP2
0x2e2 AND
0x2e3 EQ
0x2e4 PUSH2 0x2ec
0x2e7 JUMPI
---
0x2d1: JUMPDEST 
0x2d2: V275 = 0x4
0x2d4: V276 = S[0x4]
0x2d5: V277 = CALLER
0x2d6: V278 = 0x1
0x2d8: V279 = 0xa0
0x2da: V280 = 0x2
0x2dc: V281 = EXP 0x2 0xa0
0x2dd: V282 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e0: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x2e2: V284 = AND V276 0xffffffffffffffffffffffffffffffffffffffff
0x2e3: V285 = EQ V284 V283
0x2e4: V286 = 0x2ec
0x2e7: JUMPI 0x2ec V285
---
Entry stack: [V12, 0x16f, V123, V126, 0x0, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, 0x0, V126]

================================

Block 0x2e8
[0x2e8:0x2eb]
---
Predecessors: [0x2d1]
Successors: []
---
0x2e8 PUSH2 0x0
0x2eb JUMP
---
0x2e8: V287 = 0x0
0x2eb: THROW 
---
Entry stack: [V12, 0x16f, V123, V126, 0x0, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, 0x0, V126]

================================

Block 0x2ec
[0x2ec:0x31a]
---
Predecessors: [0x2d1]
Successors: [0x31b, 0x31f]
---
0x2ec JUMPDEST
0x2ed PUSH1 0x1
0x2ef SLOAD
0x2f0 PUSH1 0x40
0x2f2 MLOAD
0x2f3 PUSH1 0x1
0x2f5 PUSH1 0xa0
0x2f7 PUSH1 0x2
0x2f9 EXP
0x2fa SUB
0x2fb SWAP1
0x2fc SWAP2
0x2fd AND
0x2fe SWAP1
0x2ff CALLVALUE
0x300 DUP1
0x301 ISZERO
0x302 PUSH2 0x8fc
0x305 MUL
0x306 SWAP2
0x307 PUSH1 0x0
0x309 DUP2
0x30a DUP2
0x30b DUP2
0x30c DUP6
0x30d DUP9
0x30e DUP9
0x30f CALL
0x310 SWAP4
0x311 POP
0x312 POP
0x313 POP
0x314 POP
0x315 ISZERO
0x316 ISZERO
0x317 PUSH2 0x31f
0x31a JUMPI
---
0x2ec: JUMPDEST 
0x2ed: V288 = 0x1
0x2ef: V289 = S[0x1]
0x2f0: V290 = 0x40
0x2f2: V291 = M[0x40]
0x2f3: V292 = 0x1
0x2f5: V293 = 0xa0
0x2f7: V294 = 0x2
0x2f9: V295 = EXP 0x2 0xa0
0x2fa: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fd: V297 = AND V289 0xffffffffffffffffffffffffffffffffffffffff
0x2ff: V298 = CALLVALUE
0x301: V299 = ISZERO V298
0x302: V300 = 0x8fc
0x305: V301 = MUL 0x8fc V299
0x307: V302 = 0x0
0x30f: V303 = CALL V301 V297 V298 V291 0x0 V291 0x0
0x315: V304 = ISZERO V303
0x316: V305 = ISZERO V304
0x317: V306 = 0x31f
0x31a: JUMPI 0x31f V305
---
Entry stack: [V12, 0x16f, V123, V126, 0x0, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, 0x0, V126]

================================

Block 0x31b
[0x31b:0x31e]
---
Predecessors: [0x2ec]
Successors: []
---
0x31b PUSH2 0x0
0x31e JUMP
---
0x31b: V307 = 0x0
0x31e: THROW 
---
Entry stack: [V12, 0x16f, V123, V126, 0x0, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, 0x0, V126]

================================

Block 0x31f
[0x31f:0x361]
---
Predecessors: [0x2ec]
Successors: [0x362, 0x36c]
---
0x31f JUMPDEST
0x320 PUSH1 0x1
0x322 PUSH1 0xa0
0x324 PUSH1 0x2
0x326 EXP
0x327 SUB
0x328 DUP4
0x329 AND
0x32a PUSH1 0x0
0x32c SWAP1
0x32d DUP2
0x32e MSTORE
0x32f PUSH1 0x5
0x331 PUSH1 0x20
0x333 MSTORE
0x334 PUSH1 0x40
0x336 SWAP1
0x337 SHA3
0x338 DUP1
0x339 SLOAD
0x33a CALLVALUE
0x33b SWAP1
0x33c DUP2
0x33d ADD
0x33e SWAP1
0x33f SWAP2
0x340 SSTORE
0x341 PUSH1 0x7
0x343 DUP1
0x344 SLOAD
0x345 DUP3
0x346 ADD
0x347 SWAP1
0x348 SSTORE
0x349 PUSH1 0x2
0x34b SLOAD
0x34c PUSH1 0xc
0x34e SWAP1
0x34f SWAP2
0x350 MUL
0x351 SWAP3
0x352 POP
0x353 PUSH3 0x127500
0x357 TIMESTAMP
0x358 SWAP2
0x359 SWAP1
0x35a SWAP2
0x35b SUB
0x35c LT
0x35d ISZERO
0x35e PUSH2 0x36c
0x361 JUMPI
---
0x31f: JUMPDEST 
0x320: V308 = 0x1
0x322: V309 = 0xa0
0x324: V310 = 0x2
0x326: V311 = EXP 0x2 0xa0
0x327: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x329: V313 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x32a: V314 = 0x0
0x32e: M[0x0] = V313
0x32f: V315 = 0x5
0x331: V316 = 0x20
0x333: M[0x20] = 0x5
0x334: V317 = 0x40
0x337: V318 = SHA3 0x0 0x40
0x339: V319 = S[V318]
0x33a: V320 = CALLVALUE
0x33d: V321 = ADD V320 V319
0x340: S[V318] = V321
0x341: V322 = 0x7
0x344: V323 = S[0x7]
0x346: V324 = ADD V320 V323
0x348: S[0x7] = V324
0x349: V325 = 0x2
0x34b: V326 = S[0x2]
0x34c: V327 = 0xc
0x350: V328 = MUL V320 0xc
0x353: V329 = 0x127500
0x357: V330 = TIMESTAMP
0x35b: V331 = SUB V330 V326
0x35c: V332 = LT V331 0x127500
0x35d: V333 = ISZERO V332
0x35e: V334 = 0x36c
0x361: JUMPI 0x36c V333
---
Entry stack: [V12, 0x16f, V123, V126, 0x0, V126]
Stack pops: 3
Stack additions: [S2, V328, S0]
Exit stack: [V12, 0x16f, V123, V126, V328, V126]

================================

Block 0x362
[0x362:0x367]
---
Predecessors: [0x31f]
Successors: [0x368]
---
0x362 PUSH1 0x9
0x364 PUSH1 0xa
0x366 DUP4
0x367 MUL
---
0x362: V335 = 0x9
0x364: V336 = 0xa
0x367: V337 = MUL V328 0xa
---
Entry stack: [V12, 0x16f, V123, V126, V328, V126]
Stack pops: 2
Stack additions: [S1, S0, 0x9, V337]
Exit stack: [V12, 0x16f, V123, V126, V328, V126, 0x9, V337]

================================

Block 0x368
[0x368:0x36b]
---
Predecessors: [0x362]
Successors: [0x36c]
---
0x368 JUMPDEST
0x369 DIV
0x36a SWAP2
0x36b POP
---
0x368: JUMPDEST 
0x369: V338 = DIV V337 0x9
---
Entry stack: [V12, 0x16f, V123, V126, V328, V126, 0x9, V337]
Stack pops: 4
Stack additions: [V338, S2]
Exit stack: [V12, 0x16f, V123, V126, V338, V126]

================================

Block 0x36c
[0x36c:0x39e]
---
Predecessors: [0x31f, 0x368]
Successors: [0x39f, 0x3a3]
---
0x36c JUMPDEST
0x36d PUSH1 0x1
0x36f PUSH1 0xa0
0x371 PUSH1 0x2
0x373 EXP
0x374 SUB
0x375 DUP4
0x376 AND
0x377 PUSH1 0x0
0x379 SWAP1
0x37a DUP2
0x37b MSTORE
0x37c PUSH1 0x6
0x37e PUSH1 0x20
0x380 MSTORE
0x381 PUSH1 0x40
0x383 SWAP1
0x384 SHA3
0x385 DUP1
0x386 SLOAD
0x387 DUP4
0x388 ADD
0x389 SWAP1
0x38a SSTORE
0x38b PUSH1 0x8
0x38d DUP1
0x38e SLOAD
0x38f DUP4
0x390 ADD
0x391 SWAP1
0x392 DUP2
0x393 SWAP1
0x394 SSTORE
0x395 PUSH1 0x3
0x397 SLOAD
0x398 SWAP1
0x399 GT
0x39a ISZERO
0x39b PUSH2 0x3a3
0x39e JUMPI
---
0x36c: JUMPDEST 
0x36d: V339 = 0x1
0x36f: V340 = 0xa0
0x371: V341 = 0x2
0x373: V342 = EXP 0x2 0xa0
0x374: V343 = SUB 0x10000000000000000000000000000000000000000 0x1
0x376: V344 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x377: V345 = 0x0
0x37b: M[0x0] = V344
0x37c: V346 = 0x6
0x37e: V347 = 0x20
0x380: M[0x20] = 0x6
0x381: V348 = 0x40
0x384: V349 = SHA3 0x0 0x40
0x386: V350 = S[V349]
0x388: V351 = ADD S1 V350
0x38a: S[V349] = V351
0x38b: V352 = 0x8
0x38e: V353 = S[0x8]
0x390: V354 = ADD S1 V353
0x394: S[0x8] = V354
0x395: V355 = 0x3
0x397: V356 = S[0x3]
0x399: V357 = GT V354 V356
0x39a: V358 = ISZERO V357
0x39b: V359 = 0x3a3
0x39e: JUMPI 0x3a3 V358
---
Entry stack: [V12, 0x16f, V123, V126, S1, V126]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x16f, V123, V126, S1, V126]

================================

Block 0x39f
[0x39f:0x3a2]
---
Predecessors: [0x36c]
Successors: []
---
0x39f PUSH2 0x0
0x3a2 JUMP
---
0x39f: V360 = 0x0
0x3a2: THROW 
---
Entry stack: [V12, 0x16f, V123, V126, S1, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, S1, V126]

================================

Block 0x3a3
[0x3a3:0x40f]
---
Predecessors: [0x36c]
Successors: [0x410, 0x411]
---
0x3a3 JUMPDEST
0x3a4 PUSH1 0x4
0x3a6 DUP1
0x3a7 SLOAD
0x3a8 PUSH1 0x40
0x3aa DUP1
0x3ab MLOAD
0x3ac PUSH32 0x6039fbdb00000000000000000000000000000000000000000000000000000000
0x3cd DUP2
0x3ce MSTORE
0x3cf PUSH1 0x1
0x3d1 PUSH1 0xa0
0x3d3 PUSH1 0x2
0x3d5 EXP
0x3d6 SUB
0x3d7 DUP8
0x3d8 DUP2
0x3d9 AND
0x3da SWAP5
0x3db DUP3
0x3dc ADD
0x3dd SWAP5
0x3de SWAP1
0x3df SWAP5
0x3e0 MSTORE
0x3e1 PUSH1 0x24
0x3e3 DUP2
0x3e4 ADD
0x3e5 DUP7
0x3e6 SWAP1
0x3e7 MSTORE
0x3e8 SWAP1
0x3e9 MLOAD
0x3ea SWAP3
0x3eb SWAP1
0x3ec SWAP2
0x3ed AND
0x3ee SWAP2
0x3ef PUSH4 0x6039fbdb
0x3f4 SWAP2
0x3f5 PUSH1 0x44
0x3f7 DUP1
0x3f8 DUP3
0x3f9 ADD
0x3fa SWAP3
0x3fb PUSH1 0x0
0x3fd SWAP3
0x3fe SWAP1
0x3ff SWAP2
0x400 SWAP1
0x401 DUP3
0x402 SWAP1
0x403 SUB
0x404 ADD
0x405 DUP2
0x406 DUP4
0x407 DUP8
0x408 DUP1
0x409 EXTCODESIZE
0x40a ISZERO
0x40b ISZERO
0x40c PUSH2 0x411
0x40f JUMPI
---
0x3a3: JUMPDEST 
0x3a4: V361 = 0x4
0x3a7: V362 = S[0x4]
0x3a8: V363 = 0x40
0x3ab: V364 = M[0x40]
0x3ac: V365 = 0x6039fbdb00000000000000000000000000000000000000000000000000000000
0x3ce: M[V364] = 0x6039fbdb00000000000000000000000000000000000000000000000000000000
0x3cf: V366 = 0x1
0x3d1: V367 = 0xa0
0x3d3: V368 = 0x2
0x3d5: V369 = EXP 0x2 0xa0
0x3d6: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d9: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x3dc: V372 = ADD V364 0x4
0x3e0: M[V372] = V371
0x3e1: V373 = 0x24
0x3e4: V374 = ADD V364 0x24
0x3e7: M[V374] = S1
0x3e9: V375 = M[0x40]
0x3ed: V376 = AND V362 0xffffffffffffffffffffffffffffffffffffffff
0x3ef: V377 = 0x6039fbdb
0x3f5: V378 = 0x44
0x3f9: V379 = ADD V364 0x44
0x3fb: V380 = 0x0
0x403: V381 = SUB V364 V375
0x404: V382 = ADD V381 0x44
0x409: V383 = EXTCODESIZE V376
0x40a: V384 = ISZERO V383
0x40b: V385 = ISZERO V384
0x40c: V386 = 0x411
0x40f: JUMPI 0x411 V385
---
Entry stack: [V12, 0x16f, V123, V126, S1, V126]
Stack pops: 3
Stack additions: [S2, S1, S0, V376, 0x6039fbdb, V379, 0x0, V375, V382, V375, 0x0, V376]
Exit stack: [V12, 0x16f, V123, V126, S1, V126, V376, 0x6039fbdb, V379, 0x0, V375, V382, V375, 0x0, V376]

================================

Block 0x410
[0x410:0x410]
---
Predecessors: [0x3a3]
Successors: []
---
0x410 INVALID
---
0x410: INVALID 
---
Entry stack: [V12, 0x16f, V123, V126, S10, V126, V376, 0x6039fbdb, V379, 0x0, V375, V382, V375, 0x0, V376]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, S10, V126, V376, 0x6039fbdb, V379, 0x0, V375, V382, V375, 0x0, V376]

================================

Block 0x411
[0x411:0x41c]
---
Predecessors: [0x3a3]
Successors: [0x41d, 0x41e]
---
0x411 JUMPDEST
0x412 PUSH1 0x32
0x414 GAS
0x415 SUB
0x416 CALL
0x417 ISZERO
0x418 ISZERO
0x419 PUSH2 0x41e
0x41c JUMPI
---
0x411: JUMPDEST 
0x412: V387 = 0x32
0x414: V388 = GAS
0x415: V389 = SUB V388 0x32
0x416: V390 = CALL V389 V376 0x0 V375 V382 V375 0x0
0x417: V391 = ISZERO V390
0x418: V392 = ISZERO V391
0x419: V393 = 0x41e
0x41c: JUMPI 0x41e V392
---
Entry stack: [V12, 0x16f, V123, V126, S10, V126, V376, 0x6039fbdb, V379, 0x0, V375, V382, V375, 0x0, V376]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, S10, V126, V376, 0x6039fbdb, V379]

================================

Block 0x41d
[0x41d:0x41d]
---
Predecessors: [0x411]
Successors: []
---
0x41d INVALID
---
0x41d: INVALID 
---
Entry stack: [V12, 0x16f, V123, V126, S4, V126, V376, 0x6039fbdb, V379]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, S4, V126, V376, 0x6039fbdb, V379]

================================

Block 0x41e
[0x41e:0x468]
---
Predecessors: [0x411]
Successors: [0x469]
---
0x41e JUMPDEST
0x41f POP
0x420 POP
0x421 PUSH1 0x40
0x423 DUP1
0x424 MLOAD
0x425 CALLVALUE
0x426 DUP2
0x427 MSTORE
0x428 PUSH1 0x20
0x42a DUP2
0x42b ADD
0x42c DUP6
0x42d SWAP1
0x42e MSTORE
0x42f DUP2
0x430 MLOAD
0x431 PUSH1 0x1
0x433 PUSH1 0xa0
0x435 PUSH1 0x2
0x437 EXP
0x438 SUB
0x439 DUP1
0x43a DUP9
0x43b AND
0x43c SWAP5
0x43d POP
0x43e DUP9
0x43f AND
0x440 SWAP3
0x441 PUSH32 0xa8b57f15ffe511f633f9bd512e6fdb2e692b54ff870617cfcc2f63f1f1b1d326
0x462 SWAP3
0x463 DUP3
0x464 SWAP1
0x465 SUB
0x466 ADD
0x467 SWAP1
0x468 LOG3
---
0x41e: JUMPDEST 
0x421: V394 = 0x40
0x424: V395 = M[0x40]
0x425: V396 = CALLVALUE
0x427: M[V395] = V396
0x428: V397 = 0x20
0x42b: V398 = ADD V395 0x20
0x42e: M[V398] = S4
0x430: V399 = M[0x40]
0x431: V400 = 0x1
0x433: V401 = 0xa0
0x435: V402 = 0x2
0x437: V403 = EXP 0x2 0xa0
0x438: V404 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43b: V405 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x43f: V406 = AND V123 0xffffffffffffffffffffffffffffffffffffffff
0x441: V407 = 0xa8b57f15ffe511f633f9bd512e6fdb2e692b54ff870617cfcc2f63f1f1b1d326
0x465: V408 = SUB V395 V399
0x466: V409 = ADD V408 0x40
0x468: LOG V399 V409 0xa8b57f15ffe511f633f9bd512e6fdb2e692b54ff870617cfcc2f63f1f1b1d326 V406 V405
---
Entry stack: [V12, 0x16f, V123, V126, S4, V126, V376, 0x6039fbdb, V379]
Stack pops: 7
Stack additions: [S6, S5, S4, S3]
Exit stack: [V12, 0x16f, V123, V126, S4, V126]

================================

Block 0x469
[0x469:0x469]
---
Predecessors: [0x41e]
Successors: [0x46a]
---
0x469 JUMPDEST
---
0x469: JUMPDEST 
---
Entry stack: [V12, 0x16f, V123, V126, S1, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, S1, V126]

================================

Block 0x46a
[0x46a:0x46b]
---
Predecessors: [0x469]
Successors: [0x46c]
---
0x46a JUMPDEST
0x46b POP
---
0x46a: JUMPDEST 
---
Entry stack: [V12, 0x16f, V123, V126, S1, V126]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, S1]

================================

Block 0x46c
[0x46c:0x46c]
---
Predecessors: [0x46a]
Successors: [0x46d]
---
0x46c JUMPDEST
---
0x46c: JUMPDEST 
---
Entry stack: [V12, 0x16f, V123, V126, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V123, V126, S0]

================================

Block 0x46d
[0x46d:0x471]
---
Predecessors: [0x46c]
Successors: [0x16f]
---
0x46d JUMPDEST
0x46e POP
0x46f POP
0x470 POP
0x471 JUMP
---
0x46d: JUMPDEST 
0x471: JUMP 0x16f
---
Entry stack: [V12, 0x16f, V123, V126, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x472
[0x472:0x480]
---
Predecessors: [0x179]
Successors: [0xa5]
---
0x472 JUMPDEST
0x473 PUSH1 0x1
0x475 SLOAD
0x476 PUSH1 0x1
0x478 PUSH1 0xa0
0x47a PUSH1 0x2
0x47c EXP
0x47d SUB
0x47e AND
0x47f DUP2
0x480 JUMP
---
0x472: JUMPDEST 
0x473: V410 = 0x1
0x475: V411 = S[0x1]
0x476: V412 = 0x1
0x478: V413 = 0xa0
0x47a: V414 = 0x2
0x47c: V415 = EXP 0x2 0xa0
0x47d: V416 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47e: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x480: JUMP 0xa5
---
Entry stack: [V12, 0xa5]
Stack pops: 1
Stack additions: [S0, V417]
Exit stack: [V12, 0xa5, V417]

================================

Block 0x481
[0x481:0x497]
---
Predecessors: [0x1a5]
Successors: [0x498, 0x49c]
---
0x481 JUMPDEST
0x482 PUSH1 0x0
0x484 SLOAD
0x485 CALLER
0x486 PUSH1 0x1
0x488 PUSH1 0xa0
0x48a PUSH1 0x2
0x48c EXP
0x48d SUB
0x48e SWAP1
0x48f DUP2
0x490 AND
0x491 SWAP2
0x492 AND
0x493 EQ
0x494 PUSH2 0x49c
0x497 JUMPI
---
0x481: JUMPDEST 
0x482: V418 = 0x0
0x484: V419 = S[0x0]
0x485: V420 = CALLER
0x486: V421 = 0x1
0x488: V422 = 0xa0
0x48a: V423 = 0x2
0x48c: V424 = EXP 0x2 0xa0
0x48d: V425 = SUB 0x10000000000000000000000000000000000000000 0x1
0x490: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0x492: V427 = AND V419 0xffffffffffffffffffffffffffffffffffffffff
0x493: V428 = EQ V427 V426
0x494: V429 = 0x49c
0x497: JUMPI 0x49c V428
---
Entry stack: [V12, 0x16f, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V156]

================================

Block 0x498
[0x498:0x49b]
---
Predecessors: [0x481]
Successors: []
---
0x498 PUSH2 0x0
0x49b JUMP
---
0x498: V430 = 0x0
0x49b: THROW 
---
Entry stack: [V12, 0x16f, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V156]

================================

Block 0x49c
[0x49c:0x4ad]
---
Predecessors: [0x481]
Successors: [0x4ae, 0x4b2]
---
0x49c JUMPDEST
0x49d PUSH1 0x4
0x49f SLOAD
0x4a0 PUSH1 0x1
0x4a2 PUSH1 0xa0
0x4a4 PUSH1 0x2
0x4a6 EXP
0x4a7 SUB
0x4a8 AND
0x4a9 ISZERO
0x4aa PUSH2 0x4b2
0x4ad JUMPI
---
0x49c: JUMPDEST 
0x49d: V431 = 0x4
0x49f: V432 = S[0x4]
0x4a0: V433 = 0x1
0x4a2: V434 = 0xa0
0x4a4: V435 = 0x2
0x4a6: V436 = EXP 0x2 0xa0
0x4a7: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a8: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x4a9: V439 = ISZERO V438
0x4aa: V440 = 0x4b2
0x4ad: JUMPI 0x4b2 V439
---
Entry stack: [V12, 0x16f, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V156]

================================

Block 0x4ae
[0x4ae:0x4b1]
---
Predecessors: [0x49c]
Successors: []
---
0x4ae PUSH2 0x0
0x4b1 JUMP
---
0x4ae: V441 = 0x0
0x4b1: THROW 
---
Entry stack: [V12, 0x16f, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V156]

================================

Block 0x4b2
[0x4b2:0x4da]
---
Predecessors: [0x49c]
Successors: [0x4db]
---
0x4b2 JUMPDEST
0x4b3 PUSH1 0x4
0x4b5 DUP1
0x4b6 SLOAD
0x4b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cc NOT
0x4cd AND
0x4ce PUSH1 0x1
0x4d0 PUSH1 0xa0
0x4d2 PUSH1 0x2
0x4d4 EXP
0x4d5 SUB
0x4d6 DUP4
0x4d7 AND
0x4d8 OR
0x4d9 SWAP1
0x4da SSTORE
---
0x4b2: JUMPDEST 
0x4b3: V442 = 0x4
0x4b6: V443 = S[0x4]
0x4b7: V444 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cc: V445 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4cd: V446 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V443
0x4ce: V447 = 0x1
0x4d0: V448 = 0xa0
0x4d2: V449 = 0x2
0x4d4: V450 = EXP 0x2 0xa0
0x4d5: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d7: V452 = AND V156 0xffffffffffffffffffffffffffffffffffffffff
0x4d8: V453 = OR V452 V446
0x4da: S[0x4] = V453
---
Entry stack: [V12, 0x16f, V156]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x16f, V156]

================================

Block 0x4db
[0x4db:0x4db]
---
Predecessors: [0x4b2]
Successors: [0x4dc]
---
0x4db JUMPDEST
---
0x4db: JUMPDEST 
---
Entry stack: [V12, 0x16f, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V156]

================================

Block 0x4dc
[0x4dc:0x4dc]
---
Predecessors: [0x4db]
Successors: [0x4dd]
---
0x4dc JUMPDEST
---
0x4dc: JUMPDEST 
---
Entry stack: [V12, 0x16f, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x16f, V156]

================================

Block 0x4dd
[0x4dd:0x4df]
---
Predecessors: [0x4dc]
Successors: [0x16f]
---
0x4dd JUMPDEST
0x4de POP
0x4df JUMP
---
0x4dd: JUMPDEST 
0x4df: JUMP 0x16f
---
Entry stack: [V12, 0x16f, V156]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e0
[0x4e0:0x4e5]
---
Predecessors: [0x1c3]
Successors: [0xd1]
---
0x4e0 JUMPDEST
0x4e1 PUSH1 0x2
0x4e3 SLOAD
0x4e4 DUP2
0x4e5 JUMP
---
0x4e0: JUMPDEST 
0x4e1: V454 = 0x2
0x4e3: V455 = S[0x2]
0x4e5: JUMP 0xd1
---
Entry stack: [V12, 0xd1]
Stack pops: 1
Stack additions: [S0, V455]
Exit stack: [V12, 0xd1, V455]

================================

Block 0x4e6
[0x4e6:0x4f4]
---
Predecessors: [0x1e5]
Successors: [0xa5]
---
0x4e6 JUMPDEST
0x4e7 PUSH1 0x4
0x4e9 SLOAD
0x4ea PUSH1 0x1
0x4ec PUSH1 0xa0
0x4ee PUSH1 0x2
0x4f0 EXP
0x4f1 SUB
0x4f2 AND
0x4f3 DUP2
0x4f4 JUMP
---
0x4e6: JUMPDEST 
0x4e7: V456 = 0x4
0x4e9: V457 = S[0x4]
0x4ea: V458 = 0x1
0x4ec: V459 = 0xa0
0x4ee: V460 = 0x2
0x4f0: V461 = EXP 0x2 0xa0
0x4f1: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f2: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x4f4: JUMP 0xa5
---
Entry stack: [V12, 0xa5]
Stack pops: 1
Stack additions: [S0, V463]
Exit stack: [V12, 0xa5, V463]

================================

Block 0x4f5
[0x4f5:0x506]
---
Predecessors: [0x211]
Successors: [0xd1]
---
0x4f5 JUMPDEST
0x4f6 PUSH1 0x6
0x4f8 PUSH1 0x20
0x4fa MSTORE
0x4fb PUSH1 0x0
0x4fd SWAP1
0x4fe DUP2
0x4ff MSTORE
0x500 PUSH1 0x40
0x502 SWAP1
0x503 SHA3
0x504 SLOAD
0x505 DUP2
0x506 JUMP
---
0x4f5: JUMPDEST 
0x4f6: V464 = 0x6
0x4f8: V465 = 0x20
0x4fa: M[0x20] = 0x6
0x4fb: V466 = 0x0
0x4ff: M[0x0] = V197
0x500: V467 = 0x40
0x503: V468 = SHA3 0x0 0x40
0x504: V469 = S[V468]
0x506: JUMP 0xd1
---
Entry stack: [V12, 0xd1, V197]
Stack pops: 2
Stack additions: [S1, V469]
Exit stack: [V12, 0xd1, V469]

================================

Block 0x507
[0x507:0x54c]
---
Predecessors: []
Successors: []
---
0x507 STOP
0x508 LOG1
0x509 PUSH6 0x627a7a723058
0x510 SHA3
0x511 SELFDESTRUCT
0x512 SHR
0x513 EXTCODEHASH
0x514 MISSING 0xac
0x515 MISSING 0x2c
0x516 ADDRESS
0x517 MISSING 0xfb
0x518 GT
0x519 MISSING 0xe5
0x51a MISSING 0xaa
0x51b MISSING 0xbd
0x51c PUSH12 0xde32f366c786aa2167549dd5
0x529 MSIZE
0x52a CREATE2
0x52b SLOAD
0x52c MISSING 0x23
0x52d AND
0x52e MISSING 0xd3
0x52f PUSH29 0xb20029
---
0x507: STOP 
0x508: LOG S0 S1 S2
0x509: V470 = 0x627a7a723058
0x510: V471 = SHA3 0x627a7a723058 S3
0x511: SELFDESTRUCT V471
0x512: V472 = SHR S0 S1
0x513: V473 = EXTCODEHASH V472
0x514: MISSING 0xac
0x515: MISSING 0x2c
0x516: V474 = ADDRESS
0x517: MISSING 0xfb
0x518: V475 = GT S0 S1
0x519: MISSING 0xe5
0x51a: MISSING 0xaa
0x51b: MISSING 0xbd
0x51c: V476 = 0xde32f366c786aa2167549dd5
0x529: V477 = MSIZE
0x52a: V478 = CREATE2 V477 0xde32f366c786aa2167549dd5 S0 S1
0x52b: V479 = S[V478]
0x52c: MISSING 0x23
0x52d: V480 = AND S0 S1
0x52e: MISSING 0xd3
0x52f: V481 = 0xb20029
---
Entry stack: []
Stack pops: 0
Stack additions: [V473, V474, V475, V479, V480, 0xb20029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x95
Exit block: 0xa5
Body: 0x95, 0x9c, 0x9d, 0xa5, 0x237

Function 1:
Public function signature: 0x36bdee74
Entry block: 0xc1
Exit block: 0xd1
Body: 0xc1, 0xc8, 0xc9, 0xd1, 0x246

Function 2:
Public function signature: 0x407a6727
Entry block: 0xe3
Exit block: 0xd1
Body: 0xd1, 0xe3, 0xea, 0xeb, 0x24c

Function 3:
Public function signature: 0x416ccd02
Entry block: 0x105
Exit block: 0xd1
Body: 0xd1, 0x105, 0x10c, 0x10d, 0x252

Function 4:
Public function signature: 0x4c12d8b9
Entry block: 0x127
Exit block: 0xd1
Body: 0xd1, 0x127, 0x12e, 0x12f, 0x258

Function 5:
Public function signature: 0x583f0ae6
Entry block: 0x155
Exit block: 0x16f
Body: 0x155, 0x16f, 0x26a, 0x280, 0x284, 0x28f, 0x293, 0x29b, 0x29f, 0x2b1, 0x2c7, 0x2cd, 0x2d1, 0x2e8, 0x2ec, 0x31b, 0x31f, 0x362, 0x368, 0x36c, 0x39f, 0x3a3, 0x410, 0x411, 0x41d, 0x41e, 0x469, 0x46a, 0x46c, 0x46d

Function 6:
Public function signature: 0x6be00229
Entry block: 0x171
Exit block: 0xa5
Body: 0xa5, 0x171, 0x178, 0x179, 0x472

Function 7:
Public function signature: 0xbbcd5bbe
Entry block: 0x19d
Exit block: 0x16f
Body: 0x16f, 0x19d, 0x1a4, 0x1a5, 0x481, 0x498, 0x49c, 0x4ae, 0x4b2, 0x4db, 0x4dc, 0x4dd

Function 8:
Public function signature: 0xbe9a6555
Entry block: 0x1bb
Exit block: 0xd1
Body: 0xd1, 0x1bb, 0x1c2, 0x1c3, 0x4e0

Function 9:
Public function signature: 0xc851b643
Entry block: 0x1dd
Exit block: 0xa5
Body: 0xa5, 0x1dd, 0x1e4, 0x1e5, 0x4e6

Function 10:
Public function signature: 0xcc6da375
Entry block: 0x209
Exit block: 0xd1
Body: 0xd1, 0x209, 0x210, 0x211, 0x4f5

Function 11:
Public fallback function
Entry block: 0x93
Exit block: 0x93
Body: 0x93

