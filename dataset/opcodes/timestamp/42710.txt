Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x382cf0a6
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x382cf0a6
0x3b: V13 = EQ V11 0x382cf0a6
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xb1]
---
0x40 DUP1
0x41 PUSH4 0x41c0e1b5
0x46 EQ
0x47 PUSH2 0xb1
0x4a JUMPI
---
0x41: V15 = 0x41c0e1b5
0x46: V16 = EQ 0x41c0e1b5 V11
0x47: V17 = 0xb1
0x4a: JUMPI 0xb1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xc4]
---
0x4b DUP1
0x4c PUSH4 0x6898f82b
0x51 EQ
0x52 PUSH2 0xc4
0x55 JUMPI
---
0x4c: V18 = 0x6898f82b
0x51: V19 = EQ 0x6898f82b V11
0x52: V20 = 0xc4
0x55: JUMPI 0xc4 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xcf]
---
0x56 DUP1
0x57 PUSH4 0x9c675eaa
0x5c EQ
0x5d PUSH2 0xcf
0x60 JUMPI
---
0x57: V21 = 0x9c675eaa
0x5c: V22 = EQ 0x9c675eaa V11
0x5d: V23 = 0xcf
0x60: JUMPI 0xcf V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xfe]
---
0x61 DUP1
0x62 PUSH4 0xc5339132
0x67 EQ
0x68 PUSH2 0xfe
0x6b JUMPI
---
0x62: V24 = 0xc5339132
0x67: V25 = EQ 0xc5339132 V11
0x68: V26 = 0xfe
0x6b: JUMPI 0xfe V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x123]
---
0x6c DUP1
0x6d PUSH4 0xcfd8a175
0x72 EQ
0x73 PUSH2 0x123
0x76 JUMPI
---
0x6d: V27 = 0xcfd8a175
0x72: V28 = EQ 0xcfd8a175 V11
0x73: V29 = 0x123
0x76: JUMPI 0x123 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x1a1, 0x295]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x7f]
---
Predecessors: [0xd]
Successors: [0x80, 0x84]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b ISZERO
0x7c PUSH2 0x84
0x7f JUMPI
---
0x79: JUMPDEST 
0x7a: V30 = CALLVALUE
0x7b: V31 = ISZERO V30
0x7c: V32 = 0x84
0x7f: JUMPI 0x84 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x79]
Successors: []
---
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x80: V33 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x8e]
---
Predecessors: [0x79]
Successors: [0x136]
---
0x84 JUMPDEST
0x85 PUSH2 0x8f
0x88 PUSH1 0x4
0x8a CALLDATALOAD
0x8b PUSH2 0x136
0x8e JUMP
---
0x84: JUMPDEST 
0x85: V34 = 0x8f
0x88: V35 = 0x4
0x8a: V36 = CALLDATALOAD 0x4
0x8b: V37 = 0x136
0x8e: JUMP 0x136
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8f, V36]
Exit stack: [V11, 0x8f, V36]

================================

Block 0x8f
[0x8f:0xb0]
---
Predecessors: [0x144]
Successors: []
---
0x8f JUMPDEST
0x90 PUSH1 0x40
0x92 MLOAD
0x93 PUSH1 0x1
0x95 PUSH1 0xa0
0x97 PUSH1 0x2
0x99 EXP
0x9a SUB
0x9b SWAP1
0x9c SWAP3
0x9d AND
0x9e DUP3
0x9f MSTORE
0xa0 PUSH1 0x20
0xa2 DUP3
0xa3 ADD
0xa4 MSTORE
0xa5 PUSH1 0x40
0xa7 SWAP1
0xa8 DUP2
0xa9 ADD
0xaa SWAP1
0xab MLOAD
0xac DUP1
0xad SWAP2
0xae SUB
0xaf SWAP1
0xb0 RETURN
---
0x8f: JUMPDEST 
0x90: V38 = 0x40
0x92: V39 = M[0x40]
0x93: V40 = 0x1
0x95: V41 = 0xa0
0x97: V42 = 0x2
0x99: V43 = EXP 0x2 0xa0
0x9a: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d: V45 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x9f: M[V39] = V45
0xa0: V46 = 0x20
0xa3: V47 = ADD V39 0x20
0xa4: M[V47] = V113
0xa5: V48 = 0x40
0xa9: V49 = ADD 0x40 V39
0xab: V50 = M[0x40]
0xae: V51 = SUB V49 V50
0xb0: RETURN V50 V51
---
Entry stack: [V11, 0x8f, V119, V113]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x8f]

================================

Block 0xb1
[0xb1:0xb7]
---
Predecessors: [0x40]
Successors: [0xb8, 0xbc]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 ISZERO
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xb1: JUMPDEST 
0xb2: V52 = CALLVALUE
0xb3: V53 = ISZERO V52
0xb4: V54 = 0xbc
0xb7: JUMPI 0xbc V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xb1]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V55 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbc
[0xbc:0xc3]
---
Predecessors: [0xb1]
Successors: [0x16c]
---
0xbc JUMPDEST
0xbd PUSH2 0x77
0xc0 PUSH2 0x16c
0xc3 JUMP
---
0xbc: JUMPDEST 
0xbd: V56 = 0x77
0xc0: V57 = 0x16c
0xc3: JUMP 0x16c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0x4b]
Successors: [0x1a3]
---
0xc4 JUMPDEST
0xc5 PUSH2 0x77
0xc8 PUSH1 0x4
0xca CALLDATALOAD
0xcb PUSH2 0x1a3
0xce JUMP
---
0xc4: JUMPDEST 
0xc5: V58 = 0x77
0xc8: V59 = 0x4
0xca: V60 = CALLDATALOAD 0x4
0xcb: V61 = 0x1a3
0xce: JUMP 0x1a3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V60]
Exit stack: [V11, 0x77, V60]

================================

Block 0xcf
[0xcf:0xd5]
---
Predecessors: [0x56]
Successors: [0xd6, 0xda]
---
0xcf JUMPDEST
0xd0 CALLVALUE
0xd1 ISZERO
0xd2 PUSH2 0xda
0xd5 JUMPI
---
0xcf: JUMPDEST 
0xd0: V62 = CALLVALUE
0xd1: V63 = ISZERO V62
0xd2: V64 = 0xda
0xd5: JUMPI 0xda V63
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd6
[0xd6:0xd9]
---
Predecessors: [0xcf]
Successors: []
---
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 REVERT
---
0xd6: V65 = 0x0
0xd9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe1]
---
Predecessors: [0xcf]
Successors: [0x29d]
---
0xda JUMPDEST
0xdb PUSH2 0xe2
0xde PUSH2 0x29d
0xe1 JUMP
---
0xda: JUMPDEST 
0xdb: V66 = 0xe2
0xde: V67 = 0x29d
0xe1: JUMP 0x29d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe2]
Exit stack: [V11, 0xe2]

================================

Block 0xe2
[0xe2:0xfd]
---
Predecessors: [0x29d]
Successors: []
---
0xe2 JUMPDEST
0xe3 PUSH1 0x40
0xe5 MLOAD
0xe6 PUSH1 0x1
0xe8 PUSH1 0xa0
0xea PUSH1 0x2
0xec EXP
0xed SUB
0xee SWAP1
0xef SWAP2
0xf0 AND
0xf1 DUP2
0xf2 MSTORE
0xf3 PUSH1 0x20
0xf5 ADD
0xf6 PUSH1 0x40
0xf8 MLOAD
0xf9 DUP1
0xfa SWAP2
0xfb SUB
0xfc SWAP1
0xfd RETURN
---
0xe2: JUMPDEST 
0xe3: V68 = 0x40
0xe5: V69 = M[0x40]
0xe6: V70 = 0x1
0xe8: V71 = 0xa0
0xea: V72 = 0x2
0xec: V73 = EXP 0x2 0xa0
0xed: V74 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf0: V75 = AND V248 0xffffffffffffffffffffffffffffffffffffffff
0xf2: M[V69] = V75
0xf3: V76 = 0x20
0xf5: V77 = ADD 0x20 V69
0xf6: V78 = 0x40
0xf8: V79 = M[0x40]
0xfb: V80 = SUB V77 V79
0xfd: RETURN V79 V80
---
Entry stack: [V11, 0xe2, V248]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe2]

================================

Block 0xfe
[0xfe:0x104]
---
Predecessors: [0x61]
Successors: [0x105, 0x109]
---
0xfe JUMPDEST
0xff CALLVALUE
0x100 ISZERO
0x101 PUSH2 0x109
0x104 JUMPI
---
0xfe: JUMPDEST 
0xff: V81 = CALLVALUE
0x100: V82 = ISZERO V81
0x101: V83 = 0x109
0x104: JUMPI 0x109 V82
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x105
[0x105:0x108]
---
Predecessors: [0xfe]
Successors: []
---
0x105 PUSH1 0x0
0x107 DUP1
0x108 REVERT
---
0x105: V84 = 0x0
0x108: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x109
[0x109:0x110]
---
Predecessors: [0xfe]
Successors: [0x2ac]
---
0x109 JUMPDEST
0x10a PUSH2 0x111
0x10d PUSH2 0x2ac
0x110 JUMP
---
0x109: JUMPDEST 
0x10a: V85 = 0x111
0x10d: V86 = 0x2ac
0x110: JUMP 0x2ac
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x111]
Exit stack: [V11, 0x111]

================================

Block 0x111
[0x111:0x122]
---
Predecessors: [0x2ac, 0x2b2]
Successors: []
---
0x111 JUMPDEST
0x112 PUSH1 0x40
0x114 MLOAD
0x115 SWAP1
0x116 DUP2
0x117 MSTORE
0x118 PUSH1 0x20
0x11a ADD
0x11b PUSH1 0x40
0x11d MLOAD
0x11e DUP1
0x11f SWAP2
0x120 SUB
0x121 SWAP1
0x122 RETURN
---
0x111: JUMPDEST 
0x112: V87 = 0x40
0x114: V88 = M[0x40]
0x117: M[V88] = S0
0x118: V89 = 0x20
0x11a: V90 = ADD 0x20 V88
0x11b: V91 = 0x40
0x11d: V92 = M[0x40]
0x120: V93 = SUB V90 V92
0x122: RETURN V92 V93
---
Entry stack: [V11, 0x111, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x111]

================================

Block 0x123
[0x123:0x129]
---
Predecessors: [0x6c]
Successors: [0x12a, 0x12e]
---
0x123 JUMPDEST
0x124 CALLVALUE
0x125 ISZERO
0x126 PUSH2 0x12e
0x129 JUMPI
---
0x123: JUMPDEST 
0x124: V94 = CALLVALUE
0x125: V95 = ISZERO V94
0x126: V96 = 0x12e
0x129: JUMPI 0x12e V95
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12a
[0x12a:0x12d]
---
Predecessors: [0x123]
Successors: []
---
0x12a PUSH1 0x0
0x12c DUP1
0x12d REVERT
---
0x12a: V97 = 0x0
0x12d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12e
[0x12e:0x135]
---
Predecessors: [0x123]
Successors: [0x2b2]
---
0x12e JUMPDEST
0x12f PUSH2 0x111
0x132 PUSH2 0x2b2
0x135 JUMP
---
0x12e: JUMPDEST 
0x12f: V98 = 0x111
0x132: V99 = 0x2b2
0x135: JUMP 0x2b2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x111]
Exit stack: [V11, 0x111]

================================

Block 0x136
[0x136:0x142]
---
Predecessors: [0x84]
Successors: [0x143, 0x144]
---
0x136 JUMPDEST
0x137 PUSH1 0x4
0x139 DUP1
0x13a SLOAD
0x13b DUP3
0x13c SWAP1
0x13d DUP2
0x13e LT
0x13f PUSH2 0x144
0x142 JUMPI
---
0x136: JUMPDEST 
0x137: V100 = 0x4
0x13a: V101 = S[0x4]
0x13e: V102 = LT V36 V101
0x13f: V103 = 0x144
0x142: JUMPI 0x144 V102
---
Entry stack: [V11, 0x8f, V36]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V11, 0x8f, V36, 0x4, V36]

================================

Block 0x143
[0x143:0x143]
---
Predecessors: [0x136]
Successors: []
---
0x143 INVALID
---
0x143: INVALID 
---
Entry stack: [V11, 0x8f, V36, 0x4, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f, V36, 0x4, V36]

================================

Block 0x144
[0x144:0x16b]
---
Predecessors: [0x136]
Successors: [0x8f]
---
0x144 JUMPDEST
0x145 PUSH1 0x0
0x147 SWAP2
0x148 DUP3
0x149 MSTORE
0x14a PUSH1 0x20
0x14c SWAP1
0x14d SWAP2
0x14e SHA3
0x14f PUSH1 0x2
0x151 SWAP1
0x152 SWAP2
0x153 MUL
0x154 ADD
0x155 DUP1
0x156 SLOAD
0x157 PUSH1 0x1
0x159 SWAP1
0x15a SWAP2
0x15b ADD
0x15c SLOAD
0x15d PUSH1 0x1
0x15f PUSH1 0xa0
0x161 PUSH1 0x2
0x163 EXP
0x164 SUB
0x165 SWAP1
0x166 SWAP2
0x167 AND
0x168 SWAP2
0x169 POP
0x16a DUP3
0x16b JUMP
---
0x144: JUMPDEST 
0x145: V104 = 0x0
0x149: M[0x0] = 0x4
0x14a: V105 = 0x20
0x14e: V106 = SHA3 0x0 0x20
0x14f: V107 = 0x2
0x153: V108 = MUL V36 0x2
0x154: V109 = ADD V108 V106
0x156: V110 = S[V109]
0x157: V111 = 0x1
0x15b: V112 = ADD V109 0x1
0x15c: V113 = S[V112]
0x15d: V114 = 0x1
0x15f: V115 = 0xa0
0x161: V116 = 0x2
0x163: V117 = EXP 0x2 0xa0
0x164: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x167: V119 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x16b: JUMP 0x8f
---
Entry stack: [V11, 0x8f, V36, 0x4, V36]
Stack pops: 4
Stack additions: [S3, V119, V113]
Exit stack: [V11, 0x8f, V119, V113]

================================

Block 0x16c
[0x16c:0x184]
---
Predecessors: [0xbc]
Successors: [0x185, 0x190]
---
0x16c JUMPDEST
0x16d PUSH1 0x3
0x16f SLOAD
0x170 CALLER
0x171 PUSH1 0x1
0x173 PUSH1 0xa0
0x175 PUSH1 0x2
0x177 EXP
0x178 SUB
0x179 SWAP1
0x17a DUP2
0x17b AND
0x17c SWAP2
0x17d AND
0x17e EQ
0x17f DUP1
0x180 ISZERO
0x181 PUSH2 0x190
0x184 JUMPI
---
0x16c: JUMPDEST 
0x16d: V120 = 0x3
0x16f: V121 = S[0x3]
0x170: V122 = CALLER
0x171: V123 = 0x1
0x173: V124 = 0xa0
0x175: V125 = 0x2
0x177: V126 = EXP 0x2 0xa0
0x178: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17b: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x17d: V129 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x17e: V130 = EQ V129 V128
0x180: V131 = ISZERO V130
0x181: V132 = 0x190
0x184: JUMPI 0x190 V131
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: [V130]
Exit stack: [V11, 0x77, V130]

================================

Block 0x185
[0x185:0x18f]
---
Predecessors: [0x16c]
Successors: [0x190]
---
0x185 POP
0x186 PUSH1 0x1
0x188 SLOAD
0x189 PUSH3 0x15180
0x18d ADD
0x18e TIMESTAMP
0x18f GT
---
0x186: V133 = 0x1
0x188: V134 = S[0x1]
0x189: V135 = 0x15180
0x18d: V136 = ADD 0x15180 V134
0x18e: V137 = TIMESTAMP
0x18f: V138 = GT V137 V136
---
Entry stack: [V11, 0x77, V130]
Stack pops: 1
Stack additions: [V138]
Exit stack: [V11, 0x77, V138]

================================

Block 0x190
[0x190:0x195]
---
Predecessors: [0x16c, 0x185]
Successors: [0x196, 0x1a1]
---
0x190 JUMPDEST
0x191 ISZERO
0x192 PUSH2 0x1a1
0x195 JUMPI
---
0x190: JUMPDEST 
0x191: V139 = ISZERO S0
0x192: V140 = 0x1a1
0x195: JUMPI 0x1a1 V139
---
Entry stack: [V11, 0x77, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x196
[0x196:0x1a0]
---
Predecessors: [0x190]
Successors: []
---
0x196 CALLER
0x197 PUSH1 0x1
0x199 PUSH1 0xa0
0x19b PUSH1 0x2
0x19d EXP
0x19e SUB
0x19f AND
0x1a0 SELFDESTRUCT
---
0x196: V141 = CALLER
0x197: V142 = 0x1
0x199: V143 = 0xa0
0x19b: V144 = 0x2
0x19d: V145 = EXP 0x2 0xa0
0x19e: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19f: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x1a0: SELFDESTRUCT V147
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x1a1
[0x1a1:0x1a2]
---
Predecessors: [0x190]
Successors: [0x77]
---
0x1a1 JUMPDEST
0x1a2 JUMP
---
0x1a1: JUMPDEST 
0x1a2: JUMP 0x77
---
Entry stack: [V11, 0x77]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a3
[0x1a3:0x1b1]
---
Predecessors: [0xc4]
Successors: [0x1b2, 0x1b8]
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x0
0x1a6 PUSH1 0x2
0x1a8 SLOAD
0x1a9 CALLVALUE
0x1aa LT
0x1ab ISZERO
0x1ac DUP1
0x1ad ISZERO
0x1ae PUSH2 0x1b8
0x1b1 JUMPI
---
0x1a3: JUMPDEST 
0x1a4: V148 = 0x0
0x1a6: V149 = 0x2
0x1a8: V150 = S[0x2]
0x1a9: V151 = CALLVALUE
0x1aa: V152 = LT V151 V150
0x1ab: V153 = ISZERO V152
0x1ad: V154 = ISZERO V153
0x1ae: V155 = 0x1b8
0x1b1: JUMPI 0x1b8 V154
---
Entry stack: [V11, 0x77, V60]
Stack pops: 0
Stack additions: [0x0, V153]
Exit stack: [V11, 0x77, V60, 0x0, V153]

================================

Block 0x1b2
[0x1b2:0x1b7]
---
Predecessors: [0x1a3]
Successors: [0x1b8]
---
0x1b2 POP
0x1b3 PUSH1 0xa
0x1b5 DUP3
0x1b6 GT
0x1b7 ISZERO
---
0x1b3: V156 = 0xa
0x1b6: V157 = GT V60 0xa
0x1b7: V158 = ISZERO V157
---
Entry stack: [V11, 0x77, V60, 0x0, V153]
Stack pops: 3
Stack additions: [S2, S1, V158]
Exit stack: [V11, 0x77, V60, 0x0, V158]

================================

Block 0x1b8
[0x1b8:0x1be]
---
Predecessors: [0x1a3, 0x1b2]
Successors: [0x1bf, 0x1c3]
---
0x1b8 JUMPDEST
0x1b9 ISZERO
0x1ba ISZERO
0x1bb PUSH2 0x1c3
0x1be JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V159 = ISZERO S0
0x1ba: V160 = ISZERO V159
0x1bb: V161 = 0x1c3
0x1be: JUMPI 0x1c3 V160
---
Entry stack: [V11, 0x77, V60, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V60, 0x0]

================================

Block 0x1bf
[0x1bf:0x1c2]
---
Predecessors: [0x1b8]
Successors: []
---
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 REVERT
---
0x1bf: V162 = 0x0
0x1c2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V60, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V60, 0x0]

================================

Block 0x1c3
[0x1c3:0x202]
---
Predecessors: [0x1b8]
Successors: [0x2f3]
---
0x1c3 JUMPDEST
0x1c4 DUP1
0x1c5 SLOAD
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db NOT
0x1dc AND
0x1dd CALLER
0x1de PUSH1 0x1
0x1e0 PUSH1 0xa0
0x1e2 PUSH1 0x2
0x1e4 EXP
0x1e5 SUB
0x1e6 AND
0x1e7 OR
0x1e8 DUP2
0x1e9 SSTORE
0x1ea PUSH1 0x1
0x1ec DUP1
0x1ed DUP3
0x1ee ADD
0x1ef DUP4
0x1f0 SWAP1
0x1f1 SSTORE
0x1f2 PUSH1 0x4
0x1f4 DUP1
0x1f5 SLOAD
0x1f6 SWAP1
0x1f7 SWAP2
0x1f8 DUP2
0x1f9 ADD
0x1fa PUSH2 0x203
0x1fd DUP4
0x1fe DUP3
0x1ff PUSH2 0x2f3
0x202 JUMP
---
0x1c3: JUMPDEST 
0x1c5: V163 = S[0x0]
0x1c6: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V165 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1dc: V166 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V163
0x1dd: V167 = CALLER
0x1de: V168 = 0x1
0x1e0: V169 = 0xa0
0x1e2: V170 = 0x2
0x1e4: V171 = EXP 0x2 0xa0
0x1e5: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e6: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x1e7: V174 = OR V173 V166
0x1e9: S[0x0] = V174
0x1ea: V175 = 0x1
0x1ee: V176 = ADD 0x0 0x1
0x1f1: S[0x1] = V60
0x1f2: V177 = 0x4
0x1f5: V178 = S[0x4]
0x1f9: V179 = ADD V178 0x1
0x1fa: V180 = 0x203
0x1ff: V181 = 0x2f3
0x202: JUMP 0x2f3
---
Entry stack: [V11, 0x77, V60, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x4, V178, V179, 0x203, 0x4, V179]
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179, 0x203, 0x4, V179]

================================

Block 0x203
[0x203:0x250]
---
Predecessors: [0x31f]
Successors: [0x251, 0x28d]
---
0x203 JUMPDEST
0x204 POP
0x205 PUSH1 0x0
0x207 SWAP2
0x208 DUP3
0x209 MSTORE
0x20a PUSH1 0x20
0x20c DUP3
0x20d SHA3
0x20e DUP4
0x20f SLOAD
0x210 PUSH1 0x2
0x212 SWAP1
0x213 SWAP3
0x214 MUL
0x215 ADD
0x216 DUP1
0x217 SLOAD
0x218 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22d NOT
0x22e AND
0x22f PUSH1 0x1
0x231 PUSH1 0xa0
0x233 PUSH1 0x2
0x235 EXP
0x236 SUB
0x237 SWAP1
0x238 SWAP3
0x239 AND
0x23a SWAP2
0x23b SWAP1
0x23c SWAP2
0x23d OR
0x23e DUP2
0x23f SSTORE
0x240 PUSH1 0x1
0x242 DUP1
0x243 DUP5
0x244 ADD
0x245 SLOAD
0x246 SWAP2
0x247 ADD
0x248 SSTORE
0x249 SLOAD
0x24a DUP3
0x24b EQ
0x24c ISZERO
0x24d PUSH2 0x28d
0x250 JUMPI
---
0x203: JUMPDEST 
0x205: V182 = 0x0
0x209: M[0x0] = 0x4
0x20a: V183 = 0x20
0x20d: V184 = SHA3 0x0 0x20
0x20f: V185 = S[0x0]
0x210: V186 = 0x2
0x214: V187 = MUL V178 0x2
0x215: V188 = ADD V187 V184
0x217: V189 = S[V188]
0x218: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x22d: V191 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x22e: V192 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V189
0x22f: V193 = 0x1
0x231: V194 = 0xa0
0x233: V195 = 0x2
0x235: V196 = EXP 0x2 0xa0
0x236: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x239: V198 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x23d: V199 = OR V198 V192
0x23f: S[V188] = V199
0x240: V200 = 0x1
0x244: V201 = ADD 0x0 0x1
0x245: V202 = S[0x1]
0x247: V203 = ADD V188 0x1
0x248: S[V203] = V202
0x249: V204 = S[0x0]
0x24b: V205 = EQ V60 V204
0x24c: V206 = ISZERO V205
0x24d: V207 = 0x28d
0x250: JUMPI 0x28d V206
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V11, 0x77, V60, 0x0]

================================

Block 0x251
[0x251:0x288]
---
Predecessors: [0x203]
Successors: [0x289, 0x28d]
---
0x251 CALLER
0x252 PUSH1 0x1
0x254 PUSH1 0xa0
0x256 PUSH1 0x2
0x258 EXP
0x259 SUB
0x25a AND
0x25b PUSH2 0x8fc
0x25e ADDRESS
0x25f PUSH1 0x1
0x261 PUSH1 0xa0
0x263 PUSH1 0x2
0x265 EXP
0x266 SUB
0x267 AND
0x268 BALANCE
0x269 SWAP1
0x26a DUP2
0x26b ISZERO
0x26c MUL
0x26d SWAP1
0x26e PUSH1 0x40
0x270 MLOAD
0x271 PUSH1 0x0
0x273 PUSH1 0x40
0x275 MLOAD
0x276 DUP1
0x277 DUP4
0x278 SUB
0x279 DUP2
0x27a DUP6
0x27b DUP9
0x27c DUP9
0x27d CALL
0x27e SWAP4
0x27f POP
0x280 POP
0x281 POP
0x282 POP
0x283 ISZERO
0x284 ISZERO
0x285 PUSH2 0x28d
0x288 JUMPI
---
0x251: V208 = CALLER
0x252: V209 = 0x1
0x254: V210 = 0xa0
0x256: V211 = 0x2
0x258: V212 = EXP 0x2 0xa0
0x259: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25a: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x25b: V215 = 0x8fc
0x25e: V216 = ADDRESS
0x25f: V217 = 0x1
0x261: V218 = 0xa0
0x263: V219 = 0x2
0x265: V220 = EXP 0x2 0xa0
0x266: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x267: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x268: V223 = BALANCE V222
0x26b: V224 = ISZERO V223
0x26c: V225 = MUL V224 0x8fc
0x26e: V226 = 0x40
0x270: V227 = M[0x40]
0x271: V228 = 0x0
0x273: V229 = 0x40
0x275: V230 = M[0x40]
0x278: V231 = SUB V227 V230
0x27d: V232 = CALL V225 V214 V223 V230 V231 V230 0x0
0x283: V233 = ISZERO V232
0x284: V234 = ISZERO V233
0x285: V235 = 0x28d
0x288: JUMPI 0x28d V234
---
Entry stack: [V11, 0x77, V60, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V60, 0x0]

================================

Block 0x289
[0x289:0x28c]
---
Predecessors: [0x251]
Successors: []
---
0x289 PUSH1 0x0
0x28b DUP1
0x28c REVERT
---
0x289: V236 = 0x0
0x28c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V60, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V60, 0x0]

================================

Block 0x28d
[0x28d:0x294]
---
Predecessors: [0x203, 0x251]
Successors: [0x2b8]
---
0x28d JUMPDEST
0x28e PUSH2 0x295
0x291 PUSH2 0x2b8
0x294 JUMP
---
0x28d: JUMPDEST 
0x28e: V237 = 0x295
0x291: V238 = 0x2b8
0x294: JUMP 0x2b8
---
Entry stack: [V11, 0x77, V60, 0x0]
Stack pops: 0
Stack additions: [0x295]
Exit stack: [V11, 0x77, V60, 0x0, 0x295]

================================

Block 0x295
[0x295:0x29c]
---
Predecessors: [0x2e4]
Successors: [0x77]
---
0x295 JUMPDEST
0x296 POP
0x297 POP
0x298 TIMESTAMP
0x299 PUSH1 0x1
0x29b SSTORE
0x29c JUMP
---
0x295: JUMPDEST 
0x298: V239 = TIMESTAMP
0x299: V240 = 0x1
0x29b: S[0x1] = V239
0x29c: JUMP 0x77
---
Entry stack: [V11, 0x77, V60, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x29d
[0x29d:0x2ab]
---
Predecessors: [0xda]
Successors: [0xe2]
---
0x29d JUMPDEST
0x29e PUSH1 0x3
0x2a0 SLOAD
0x2a1 PUSH1 0x1
0x2a3 PUSH1 0xa0
0x2a5 PUSH1 0x2
0x2a7 EXP
0x2a8 SUB
0x2a9 AND
0x2aa DUP2
0x2ab JUMP
---
0x29d: JUMPDEST 
0x29e: V241 = 0x3
0x2a0: V242 = S[0x3]
0x2a1: V243 = 0x1
0x2a3: V244 = 0xa0
0x2a5: V245 = 0x2
0x2a7: V246 = EXP 0x2 0xa0
0x2a8: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a9: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x2ab: JUMP 0xe2
---
Entry stack: [V11, 0xe2]
Stack pops: 1
Stack additions: [S0, V248]
Exit stack: [V11, 0xe2, V248]

================================

Block 0x2ac
[0x2ac:0x2b1]
---
Predecessors: [0x109]
Successors: [0x111]
---
0x2ac JUMPDEST
0x2ad PUSH1 0x1
0x2af SLOAD
0x2b0 DUP2
0x2b1 JUMP
---
0x2ac: JUMPDEST 
0x2ad: V249 = 0x1
0x2af: V250 = S[0x1]
0x2b1: JUMP 0x111
---
Entry stack: [V11, 0x111]
Stack pops: 1
Stack additions: [S0, V250]
Exit stack: [V11, 0x111, V250]

================================

Block 0x2b2
[0x2b2:0x2b7]
---
Predecessors: [0x12e]
Successors: [0x111]
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x2
0x2b5 SLOAD
0x2b6 DUP2
0x2b7 JUMP
---
0x2b2: JUMPDEST 
0x2b3: V251 = 0x2
0x2b5: V252 = S[0x2]
0x2b7: JUMP 0x111
---
Entry stack: [V11, 0x111]
Stack pops: 1
Stack additions: [S0, V252]
Exit stack: [V11, 0x111, V252]

================================

Block 0x2b8
[0x2b8:0x2e2]
---
Predecessors: [0x28d]
Successors: [0x2e3, 0x2e4]
---
0x2b8 JUMPDEST
0x2b9 PUSH1 0xa
0x2bb TIMESTAMP
0x2bc PUSH1 0x1
0x2be NUMBER
0x2bf SUB
0x2c0 BLOCKHASH
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 SWAP2
0x2c5 DUP3
0x2c6 MSTORE
0x2c7 PUSH1 0x20
0x2c9 DUP3
0x2ca ADD
0x2cb MSTORE
0x2cc PUSH1 0x40
0x2ce SWAP1
0x2cf DUP2
0x2d0 ADD
0x2d1 SWAP1
0x2d2 MLOAD
0x2d3 SWAP1
0x2d4 DUP2
0x2d5 SWAP1
0x2d6 SUB
0x2d7 SWAP1
0x2d8 SHA3
0x2d9 PUSH1 0xff
0x2db AND
0x2dc DUP2
0x2dd ISZERO
0x2de ISZERO
0x2df PUSH2 0x2e4
0x2e2 JUMPI
---
0x2b8: JUMPDEST 
0x2b9: V253 = 0xa
0x2bb: V254 = TIMESTAMP
0x2bc: V255 = 0x1
0x2be: V256 = NUMBER
0x2bf: V257 = SUB V256 0x1
0x2c0: V258 = BLOCKHASH V257
0x2c1: V259 = 0x40
0x2c3: V260 = M[0x40]
0x2c6: M[V260] = V254
0x2c7: V261 = 0x20
0x2ca: V262 = ADD V260 0x20
0x2cb: M[V262] = V258
0x2cc: V263 = 0x40
0x2d0: V264 = ADD 0x40 V260
0x2d2: V265 = M[0x40]
0x2d6: V266 = SUB V264 V265
0x2d8: V267 = SHA3 V265 V266
0x2d9: V268 = 0xff
0x2db: V269 = AND 0xff V267
0x2dd: V270 = ISZERO 0xa
0x2de: V271 = ISZERO 0x0
0x2df: V272 = 0x2e4
0x2e2: JUMPI 0x2e4 0x1
---
Entry stack: [V11, 0x77, V60, 0x0, 0x295]
Stack pops: 0
Stack additions: [0xa, V269]
Exit stack: [V11, 0x77, V60, 0x0, 0x295, 0xa, V269]

================================

Block 0x2e3
[0x2e3:0x2e3]
---
Predecessors: [0x2b8]
Successors: []
---
0x2e3 INVALID
---
0x2e3: INVALID 
---
Entry stack: [V11, 0x77, V60, 0x0, 0x295, 0xa, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V60, 0x0, 0x295, 0xa, V269]

================================

Block 0x2e4
[0x2e4:0x2f2]
---
Predecessors: [0x2b8]
Successors: [0x295]
---
0x2e4 JUMPDEST
0x2e5 MOD
0x2e6 PUSH1 0x1
0x2e8 ADD
0x2e9 PUSH1 0xff
0x2eb AND
0x2ec PUSH1 0x0
0x2ee DUP2
0x2ef SWAP1
0x2f0 SSTORE
0x2f1 POP
0x2f2 JUMP
---
0x2e4: JUMPDEST 
0x2e5: V273 = MOD V269 0xa
0x2e6: V274 = 0x1
0x2e8: V275 = ADD 0x1 V273
0x2e9: V276 = 0xff
0x2eb: V277 = AND 0xff V275
0x2ec: V278 = 0x0
0x2f0: S[0x0] = V277
0x2f2: JUMP 0x295
---
Entry stack: [V11, 0x77, V60, 0x0, 0x295, 0xa, V269]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x77, V60, 0x0]

================================

Block 0x2f3
[0x2f3:0x300]
---
Predecessors: [0x1c3]
Successors: [0x301, 0x31f]
---
0x2f3 JUMPDEST
0x2f4 DUP2
0x2f5 SLOAD
0x2f6 DUP2
0x2f7 DUP4
0x2f8 SSTORE
0x2f9 DUP2
0x2fa DUP2
0x2fb ISZERO
0x2fc GT
0x2fd PUSH2 0x31f
0x300 JUMPI
---
0x2f3: JUMPDEST 
0x2f5: V279 = S[0x4]
0x2f8: S[0x4] = V179
0x2fb: V280 = ISZERO V279
0x2fc: V281 = GT V280 V179
0x2fd: V282 = 0x31f
0x300: JUMPI 0x31f V281
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179, 0x203, 0x4, V179]
Stack pops: 2
Stack additions: [S1, S0, V279]
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179, 0x203, 0x4, V179, V279]

================================

Block 0x301
[0x301:0x31e]
---
Predecessors: [0x2f3]
Successors: [0x324]
---
0x301 PUSH1 0x2
0x303 MUL
0x304 DUP2
0x305 PUSH1 0x2
0x307 MUL
0x308 DUP4
0x309 PUSH1 0x0
0x30b MSTORE
0x30c PUSH1 0x20
0x30e PUSH1 0x0
0x310 SHA3
0x311 SWAP2
0x312 DUP3
0x313 ADD
0x314 SWAP2
0x315 ADD
0x316 PUSH2 0x31f
0x319 SWAP2
0x31a SWAP1
0x31b PUSH2 0x324
0x31e JUMP
---
0x301: V283 = 0x2
0x303: V284 = MUL 0x2 V279
0x305: V285 = 0x2
0x307: V286 = MUL 0x2 V179
0x309: V287 = 0x0
0x30b: M[0x0] = 0x4
0x30c: V288 = 0x20
0x30e: V289 = 0x0
0x310: V290 = SHA3 0x0 0x20
0x313: V291 = ADD V290 V284
0x315: V292 = ADD V290 V286
0x316: V293 = 0x31f
0x31b: V294 = 0x324
0x31e: JUMP 0x324
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179, 0x203, 0x4, V179, V279]
Stack pops: 3
Stack additions: [S2, S1, 0x31f, V291, V292]
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179, 0x203, 0x4, V179, 0x31f, V291, V292]

================================

Block 0x31f
[0x31f:0x323]
---
Predecessors: [0x2f3, 0x360]
Successors: [0x203]
---
0x31f JUMPDEST
0x320 POP
0x321 POP
0x322 POP
0x323 JUMP
---
0x31f: JUMPDEST 
0x323: JUMP 0x203
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179, 0x203, 0x4, V179, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179]

================================

Block 0x324
[0x324:0x329]
---
Predecessors: [0x301]
Successors: [0x32a]
---
0x324 JUMPDEST
0x325 PUSH2 0x360
0x328 SWAP2
0x329 SWAP1
---
0x324: JUMPDEST 
0x325: V295 = 0x360
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179, 0x203, 0x4, V179, 0x31f, V291, V292]
Stack pops: 2
Stack additions: [0x360, S1, S0]
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179, 0x203, 0x4, V179, 0x31f, 0x360, V291, V292]

================================

Block 0x32a
[0x32a:0x332]
---
Predecessors: [0x324, 0x333]
Successors: [0x333, 0x35c]
---
0x32a JUMPDEST
0x32b DUP1
0x32c DUP3
0x32d GT
0x32e ISZERO
0x32f PUSH2 0x35c
0x332 JUMPI
---
0x32a: JUMPDEST 
0x32d: V296 = GT V291 S0
0x32e: V297 = ISZERO V296
0x32f: V298 = 0x35c
0x332: JUMPI 0x35c V297
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179, 0x203, 0x4, V179, 0x31f, 0x360, V291, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179, 0x203, 0x4, V179, 0x31f, 0x360, V291, S0]

================================

Block 0x333
[0x333:0x35b]
---
Predecessors: [0x32a]
Successors: [0x32a]
---
0x333 DUP1
0x334 SLOAD
0x335 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34a NOT
0x34b AND
0x34c DUP2
0x34d SSTORE
0x34e PUSH1 0x0
0x350 PUSH1 0x1
0x352 DUP3
0x353 ADD
0x354 SSTORE
0x355 PUSH1 0x2
0x357 ADD
0x358 PUSH2 0x32a
0x35b JUMP
---
0x334: V299 = S[S0]
0x335: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x34a: V301 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x34b: V302 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V299
0x34d: S[S0] = V302
0x34e: V303 = 0x0
0x350: V304 = 0x1
0x353: V305 = ADD S0 0x1
0x354: S[V305] = 0x0
0x355: V306 = 0x2
0x357: V307 = ADD 0x2 S0
0x358: V308 = 0x32a
0x35b: JUMP 0x32a
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179, 0x203, 0x4, V179, 0x31f, 0x360, V291, S0]
Stack pops: 1
Stack additions: [V307]
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179, 0x203, 0x4, V179, 0x31f, 0x360, V291, V307]

================================

Block 0x35c
[0x35c:0x35f]
---
Predecessors: [0x32a]
Successors: [0x360]
---
0x35c JUMPDEST
0x35d POP
0x35e SWAP1
0x35f JUMP
---
0x35c: JUMPDEST 
0x35f: JUMP 0x360
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179, 0x203, 0x4, V179, 0x31f, 0x360, V291, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179, 0x203, 0x4, V179, 0x31f, V291]

================================

Block 0x360
[0x360:0x362]
---
Predecessors: [0x35c]
Successors: [0x31f]
---
0x360 JUMPDEST
0x361 SWAP1
0x362 JUMP
---
0x360: JUMPDEST 
0x362: JUMP 0x31f
---
Entry stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179, 0x203, 0x4, V179, 0x31f, V291]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x77, V60, 0x0, 0x4, V178, V179, 0x203, 0x4, V179, V291]

================================

Block 0x363
[0x363:0x38f]
---
Predecessors: []
Successors: []
---
0x363 STOP
0x364 LOG1
0x365 PUSH6 0x627a7a723058
0x36c SHA3
0x36d DUP7
0x36e MISSING 0xf
0x36f MISSING 0x4b
0x370 RETURN
0x371 MISSING 0x21
0x372 SUB
0x373 SWAP10
0x374 SWAP11
0x375 MISSING 0xda
0x376 JUMPDEST
0x377 PUSH24 0x29963d9a8f4e5b5064fe9d46d6ab9d749b89387f400029
---
0x363: STOP 
0x364: LOG S0 S1 S2
0x365: V309 = 0x627a7a723058
0x36c: V310 = SHA3 0x627a7a723058 S3
0x36e: MISSING 0xf
0x36f: MISSING 0x4b
0x370: RETURN S0 S1
0x371: MISSING 0x21
0x372: V311 = SUB S0 S1
0x375: MISSING 0xda
0x376: JUMPDEST 
0x377: V312 = 0x29963d9a8f4e5b5064fe9d46d6ab9d749b89387f400029
---
Entry stack: []
Stack pops: 0
Stack additions: [S9, V310, S4, S5, S6, S7, S8, S9, S12, S2, S3, S4, S5, S6, S7, S8, S9, S10, V311, S11, 0x29963d9a8f4e5b5064fe9d46d6ab9d749b89387f400029]
Exit stack: []

================================

Function 0:
Public function signature: 0x382cf0a6
Entry block: 0x79
Exit block: 0x8f
Body: 0x79, 0x80, 0x84, 0x8f, 0x136, 0x143, 0x144

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xb1
Exit block: 0x77
Body: 0x77, 0xb1, 0xb8, 0xbc, 0x16c, 0x185, 0x190, 0x196, 0x1a1

Function 2:
Public function signature: 0x6898f82b
Entry block: 0xc4
Exit block: 0x77
Body: 0x77, 0xc4, 0x1a3, 0x1b2, 0x1b8, 0x1bf, 0x1c3, 0x203, 0x251, 0x289, 0x28d, 0x295, 0x2b8, 0x2e3, 0x2e4, 0x2f3, 0x301, 0x31f, 0x324, 0x32a, 0x333, 0x35c, 0x360

Function 3:
Public function signature: 0x9c675eaa
Entry block: 0xcf
Exit block: 0xe2
Body: 0xcf, 0xd6, 0xda, 0xe2, 0x29d

Function 4:
Public function signature: 0xc5339132
Entry block: 0xfe
Exit block: 0x111
Body: 0xfe, 0x105, 0x109, 0x111, 0x2ac

Function 5:
Public function signature: 0xcfd8a175
Entry block: 0x123
Exit block: 0x111
Body: 0x111, 0x123, 0x12a, 0x12e, 0x2b2

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

