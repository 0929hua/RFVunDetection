args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/2/101939.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x99]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x99
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x99
0xc: JUMPI 0x99 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x9b]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x12065fe0
0x3c EQ
0x3d PUSH2 0x9b
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x12065fe0
0x3c: V13 = EQ 0x12065fe0 V11
0x3d: V14 = 0x9b
0x40: JUMPI 0x9b V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xc4]
---
0x41 DUP1
0x42 PUSH4 0x389eb9f9
0x47 EQ
0x48 PUSH2 0xc4
0x4b JUMPI
---
0x42: V15 = 0x389eb9f9
0x47: V16 = EQ 0x389eb9f9 V11
0x48: V17 = 0xc4
0x4b: JUMPI 0xc4 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xed]
---
0x4c DUP1
0x4d PUSH4 0x3ccfd60b
0x52 EQ
0x53 PUSH2 0xed
0x56 JUMPI
---
0x4d: V18 = 0x3ccfd60b
0x52: V19 = EQ 0x3ccfd60b V11
0x53: V20 = 0xed
0x56: JUMPI 0xed V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x102]
---
0x57 DUP1
0x58 PUSH4 0x8da5cb5b
0x5d EQ
0x5e PUSH2 0x102
0x61 JUMPI
---
0x58: V21 = 0x8da5cb5b
0x5d: V22 = EQ 0x8da5cb5b V11
0x5e: V23 = 0x102
0x61: JUMPI 0x102 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x157]
---
0x62 DUP1
0x63 PUSH4 0xb6af3643
0x68 EQ
0x69 PUSH2 0x157
0x6c JUMPI
---
0x63: V24 = 0xb6af3643
0x68: V25 = EQ 0xb6af3643 V11
0x69: V26 = 0x157
0x6c: JUMPI 0x157 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x17a]
---
0x6d DUP1
0x6e PUSH4 0xc947db81
0x73 EQ
0x74 PUSH2 0x17a
0x77 JUMPI
---
0x6e: V27 = 0xc947db81
0x73: V28 = EQ 0xc947db81 V11
0x74: V29 = 0x17a
0x77: JUMPI 0x17a V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x1a3]
---
0x78 DUP1
0x79 PUSH4 0xd0e30db0
0x7e EQ
0x7f PUSH2 0x1a3
0x82 JUMPI
---
0x79: V30 = 0xd0e30db0
0x7e: V31 = EQ 0xd0e30db0 V11
0x7f: V32 = 0x1a3
0x82: JUMPI 0x1a3 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x1ad]
---
0x83 DUP1
0x84 PUSH4 0xf2fde38b
0x89 EQ
0x8a PUSH2 0x1ad
0x8d JUMPI
---
0x84: V33 = 0xf2fde38b
0x89: V34 = EQ 0xf2fde38b V11
0x8a: V35 = 0x1ad
0x8d: JUMPI 0x1ad V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x1e6]
---
0x8e DUP1
0x8f PUSH4 0xff50abdc
0x94 EQ
0x95 PUSH2 0x1e6
0x98 JUMPI
---
0x8f: V36 = 0xff50abdc
0x94: V37 = EQ 0xff50abdc V11
0x95: V38 = 0x1e6
0x98: JUMPI 0x1e6 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0x9a]
---
Predecessors: [0x0, 0x8e]
Successors: []
---
0x99 JUMPDEST
0x9a STOP
---
0x99: JUMPDEST 
0x9a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9b
[0x9b:0xa1]
---
Predecessors: [0xd]
Successors: [0xa2, 0xa6]
---
0x9b JUMPDEST
0x9c CALLVALUE
0x9d ISZERO
0x9e PUSH2 0xa6
0xa1 JUMPI
---
0x9b: JUMPDEST 
0x9c: V39 = CALLVALUE
0x9d: V40 = ISZERO V39
0x9e: V41 = 0xa6
0xa1: JUMPI 0xa6 V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa2
[0xa2:0xa5]
---
Predecessors: [0x9b]
Successors: []
---
0xa2 PUSH1 0x0
0xa4 DUP1
0xa5 REVERT
---
0xa2: V42 = 0x0
0xa5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa6
[0xa6:0xad]
---
Predecessors: [0x9b]
Successors: [0x20f]
---
0xa6 JUMPDEST
0xa7 PUSH2 0xae
0xaa PUSH2 0x20f
0xad JUMP
---
0xa6: JUMPDEST 
0xa7: V43 = 0xae
0xaa: V44 = 0x20f
0xad: JUMP 0x20f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xae]
Exit stack: [V11, 0xae]

================================

Block 0xae
[0xae:0xc3]
---
Predecessors: [0x20f]
Successors: []
---
0xae JUMPDEST
0xaf PUSH1 0x40
0xb1 MLOAD
0xb2 DUP1
0xb3 DUP3
0xb4 DUP2
0xb5 MSTORE
0xb6 PUSH1 0x20
0xb8 ADD
0xb9 SWAP2
0xba POP
0xbb POP
0xbc PUSH1 0x40
0xbe MLOAD
0xbf DUP1
0xc0 SWAP2
0xc1 SUB
0xc2 SWAP1
0xc3 RETURN
---
0xae: JUMPDEST 
0xaf: V45 = 0x40
0xb1: V46 = M[0x40]
0xb5: M[V46] = V152
0xb6: V47 = 0x20
0xb8: V48 = ADD 0x20 V46
0xbc: V49 = 0x40
0xbe: V50 = M[0x40]
0xc1: V51 = SUB V48 V50
0xc3: RETURN V50 V51
---
Entry stack: [V11, V152]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xca]
---
Predecessors: [0x41]
Successors: [0xcb, 0xcf]
---
0xc4 JUMPDEST
0xc5 CALLVALUE
0xc6 ISZERO
0xc7 PUSH2 0xcf
0xca JUMPI
---
0xc4: JUMPDEST 
0xc5: V52 = CALLVALUE
0xc6: V53 = ISZERO V52
0xc7: V54 = 0xcf
0xca: JUMPI 0xcf V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcb
[0xcb:0xce]
---
Predecessors: [0xc4]
Successors: []
---
0xcb PUSH1 0x0
0xcd DUP1
0xce REVERT
---
0xcb: V55 = 0x0
0xce: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd6]
---
Predecessors: [0xc4]
Successors: [0x256]
---
0xcf JUMPDEST
0xd0 PUSH2 0xd7
0xd3 PUSH2 0x256
0xd6 JUMP
---
0xcf: JUMPDEST 
0xd0: V56 = 0xd7
0xd3: V57 = 0x256
0xd6: JUMP 0x256
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd7]
Exit stack: [V11, 0xd7]

================================

Block 0xd7
[0xd7:0xec]
---
Predecessors: [0x256]
Successors: []
---
0xd7 JUMPDEST
0xd8 PUSH1 0x40
0xda MLOAD
0xdb DUP1
0xdc DUP3
0xdd DUP2
0xde MSTORE
0xdf PUSH1 0x20
0xe1 ADD
0xe2 SWAP2
0xe3 POP
0xe4 POP
0xe5 PUSH1 0x40
0xe7 MLOAD
0xe8 DUP1
0xe9 SWAP2
0xea SUB
0xeb SWAP1
0xec RETURN
---
0xd7: JUMPDEST 
0xd8: V58 = 0x40
0xda: V59 = M[0x40]
0xde: M[V59] = V154
0xdf: V60 = 0x20
0xe1: V61 = ADD 0x20 V59
0xe5: V62 = 0x40
0xe7: V63 = M[0x40]
0xea: V64 = SUB V61 V63
0xec: RETURN V63 V64
---
Entry stack: [V11, 0xd7, V154]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd7]

================================

Block 0xed
[0xed:0xf3]
---
Predecessors: [0x4c]
Successors: [0xf4, 0xf8]
---
0xed JUMPDEST
0xee CALLVALUE
0xef ISZERO
0xf0 PUSH2 0xf8
0xf3 JUMPI
---
0xed: JUMPDEST 
0xee: V65 = CALLVALUE
0xef: V66 = ISZERO V65
0xf0: V67 = 0xf8
0xf3: JUMPI 0xf8 V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf4
[0xf4:0xf7]
---
Predecessors: [0xed]
Successors: []
---
0xf4 PUSH1 0x0
0xf6 DUP1
0xf7 REVERT
---
0xf4: V68 = 0x0
0xf7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf8
[0xf8:0xff]
---
Predecessors: [0xed]
Successors: [0x25c]
---
0xf8 JUMPDEST
0xf9 PUSH2 0x100
0xfc PUSH2 0x25c
0xff JUMP
---
0xf8: JUMPDEST 
0xf9: V69 = 0x100
0xfc: V70 = 0x25c
0xff: JUMP 0x25c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x100]
Exit stack: [V11, 0x100]

================================

Block 0x100
[0x100:0x101]
---
Predecessors: [0x475]
Successors: []
---
0x100 JUMPDEST
0x101 STOP
---
0x100: JUMPDEST 
0x101: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x102
[0x102:0x108]
---
Predecessors: [0x57]
Successors: [0x109, 0x10d]
---
0x102 JUMPDEST
0x103 CALLVALUE
0x104 ISZERO
0x105 PUSH2 0x10d
0x108 JUMPI
---
0x102: JUMPDEST 
0x103: V71 = CALLVALUE
0x104: V72 = ISZERO V71
0x105: V73 = 0x10d
0x108: JUMPI 0x10d V72
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x109
[0x109:0x10c]
---
Predecessors: [0x102]
Successors: []
---
0x109 PUSH1 0x0
0x10b DUP1
0x10c REVERT
---
0x109: V74 = 0x0
0x10c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10d
[0x10d:0x114]
---
Predecessors: [0x102]
Successors: [0x478]
---
0x10d JUMPDEST
0x10e PUSH2 0x115
0x111 PUSH2 0x478
0x114 JUMP
---
0x10d: JUMPDEST 
0x10e: V75 = 0x115
0x111: V76 = 0x478
0x114: JUMP 0x478
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x115]
Exit stack: [V11, 0x115]

================================

Block 0x115
[0x115:0x156]
---
Predecessors: [0x478]
Successors: []
---
0x115 JUMPDEST
0x116 PUSH1 0x40
0x118 MLOAD
0x119 DUP1
0x11a DUP3
0x11b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x130 AND
0x131 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x146 AND
0x147 DUP2
0x148 MSTORE
0x149 PUSH1 0x20
0x14b ADD
0x14c SWAP2
0x14d POP
0x14e POP
0x14f PUSH1 0x40
0x151 MLOAD
0x152 DUP1
0x153 SWAP2
0x154 SUB
0x155 SWAP1
0x156 RETURN
---
0x115: JUMPDEST 
0x116: V77 = 0x40
0x118: V78 = M[0x40]
0x11b: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x130: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x131: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x146: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x148: M[V78] = V82
0x149: V83 = 0x20
0x14b: V84 = ADD 0x20 V78
0x14f: V85 = 0x40
0x151: V86 = M[0x40]
0x154: V87 = SUB V84 V86
0x156: RETURN V86 V87
---
Entry stack: [V11, 0x115, V284]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x115]

================================

Block 0x157
[0x157:0x15d]
---
Predecessors: [0x62]
Successors: [0x15e, 0x162]
---
0x157 JUMPDEST
0x158 CALLVALUE
0x159 ISZERO
0x15a PUSH2 0x162
0x15d JUMPI
---
0x157: JUMPDEST 
0x158: V88 = CALLVALUE
0x159: V89 = ISZERO V88
0x15a: V90 = 0x162
0x15d: JUMPI 0x162 V89
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15e
[0x15e:0x161]
---
Predecessors: [0x157]
Successors: []
---
0x15e PUSH1 0x0
0x160 DUP1
0x161 REVERT
---
0x15e: V91 = 0x0
0x161: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x162
[0x162:0x177]
---
Predecessors: [0x157]
Successors: [0x49d]
---
0x162 JUMPDEST
0x163 PUSH2 0x178
0x166 PUSH1 0x4
0x168 DUP1
0x169 DUP1
0x16a CALLDATALOAD
0x16b SWAP1
0x16c PUSH1 0x20
0x16e ADD
0x16f SWAP1
0x170 SWAP2
0x171 SWAP1
0x172 POP
0x173 POP
0x174 PUSH2 0x49d
0x177 JUMP
---
0x162: JUMPDEST 
0x163: V92 = 0x178
0x166: V93 = 0x4
0x16a: V94 = CALLDATALOAD 0x4
0x16c: V95 = 0x20
0x16e: V96 = ADD 0x20 0x4
0x174: V97 = 0x49d
0x177: JUMP 0x49d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x178, V94]
Exit stack: [V11, 0x178, V94]

================================

Block 0x178
[0x178:0x179]
---
Predecessors: [0x4f8]
Successors: []
---
0x178 JUMPDEST
0x179 STOP
---
0x178: JUMPDEST 
0x179: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x17a
[0x17a:0x180]
---
Predecessors: [0x6d]
Successors: [0x181, 0x185]
---
0x17a JUMPDEST
0x17b CALLVALUE
0x17c ISZERO
0x17d PUSH2 0x185
0x180 JUMPI
---
0x17a: JUMPDEST 
0x17b: V98 = CALLVALUE
0x17c: V99 = ISZERO V98
0x17d: V100 = 0x185
0x180: JUMPI 0x185 V99
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x181
[0x181:0x184]
---
Predecessors: [0x17a]
Successors: []
---
0x181 PUSH1 0x0
0x183 DUP1
0x184 REVERT
---
0x181: V101 = 0x0
0x184: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x185
[0x185:0x18c]
---
Predecessors: [0x17a]
Successors: [0x502]
---
0x185 JUMPDEST
0x186 PUSH2 0x18d
0x189 PUSH2 0x502
0x18c JUMP
---
0x185: JUMPDEST 
0x186: V102 = 0x18d
0x189: V103 = 0x502
0x18c: JUMP 0x502
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x18d]
Exit stack: [V11, 0x18d]

================================

Block 0x18d
[0x18d:0x1a2]
---
Predecessors: [0x502]
Successors: []
---
0x18d JUMPDEST
0x18e PUSH1 0x40
0x190 MLOAD
0x191 DUP1
0x192 DUP3
0x193 DUP2
0x194 MSTORE
0x195 PUSH1 0x20
0x197 ADD
0x198 SWAP2
0x199 POP
0x19a POP
0x19b PUSH1 0x40
0x19d MLOAD
0x19e DUP1
0x19f SWAP2
0x1a0 SUB
0x1a1 SWAP1
0x1a2 RETURN
---
0x18d: JUMPDEST 
0x18e: V104 = 0x40
0x190: V105 = M[0x40]
0x194: M[V105] = V304
0x195: V106 = 0x20
0x197: V107 = ADD 0x20 V105
0x19b: V108 = 0x40
0x19d: V109 = M[0x40]
0x1a0: V110 = SUB V107 V109
0x1a2: RETURN V109 V110
---
Entry stack: [V11, 0x18d, V304]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x18d]

================================

Block 0x1a3
[0x1a3:0x1aa]
---
Predecessors: [0x78]
Successors: [0x508]
---
0x1a3 JUMPDEST
0x1a4 PUSH2 0x1ab
0x1a7 PUSH2 0x508
0x1aa JUMP
---
0x1a3: JUMPDEST 
0x1a4: V111 = 0x1ab
0x1a7: V112 = 0x508
0x1aa: JUMP 0x508
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1ab]
Exit stack: [V11, 0x1ab]

================================

Block 0x1ab
[0x1ab:0x1ac]
---
Predecessors: [0x575]
Successors: []
---
0x1ab JUMPDEST
0x1ac STOP
---
0x1ab: JUMPDEST 
0x1ac: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x1ad
[0x1ad:0x1b3]
---
Predecessors: [0x83]
Successors: [0x1b4, 0x1b8]
---
0x1ad JUMPDEST
0x1ae CALLVALUE
0x1af ISZERO
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0x1ad: JUMPDEST 
0x1ae: V113 = CALLVALUE
0x1af: V114 = ISZERO V113
0x1b0: V115 = 0x1b8
0x1b3: JUMPI 0x1b8 V114
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x1ad]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V116 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b8
[0x1b8:0x1e3]
---
Predecessors: [0x1ad]
Successors: [0x5ba]
---
0x1b8 JUMPDEST
0x1b9 PUSH2 0x1e4
0x1bc PUSH1 0x4
0x1be DUP1
0x1bf DUP1
0x1c0 CALLDATALOAD
0x1c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d6 AND
0x1d7 SWAP1
0x1d8 PUSH1 0x20
0x1da ADD
0x1db SWAP1
0x1dc SWAP2
0x1dd SWAP1
0x1de POP
0x1df POP
0x1e0 PUSH2 0x5ba
0x1e3 JUMP
---
0x1b8: JUMPDEST 
0x1b9: V117 = 0x1e4
0x1bc: V118 = 0x4
0x1c0: V119 = CALLDATALOAD 0x4
0x1c1: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d6: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x1d8: V122 = 0x20
0x1da: V123 = ADD 0x20 0x4
0x1e0: V124 = 0x5ba
0x1e3: JUMP 0x5ba
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1e4, V121]
Exit stack: [V11, 0x1e4, V121]

================================

Block 0x1e4
[0x1e4:0x1e5]
---
Predecessors: [0x651]
Successors: []
---
0x1e4 JUMPDEST
0x1e5 STOP
---
0x1e4: JUMPDEST 
0x1e5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e6
[0x1e6:0x1ec]
---
Predecessors: [0x8e]
Successors: [0x1ed, 0x1f1]
---
0x1e6 JUMPDEST
0x1e7 CALLVALUE
0x1e8 ISZERO
0x1e9 PUSH2 0x1f1
0x1ec JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V125 = CALLVALUE
0x1e8: V126 = ISZERO V125
0x1e9: V127 = 0x1f1
0x1ec: JUMPI 0x1f1 V126
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ed
[0x1ed:0x1f0]
---
Predecessors: [0x1e6]
Successors: []
---
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 REVERT
---
0x1ed: V128 = 0x0
0x1f0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f1
[0x1f1:0x1f8]
---
Predecessors: [0x1e6]
Successors: [0x70f]
---
0x1f1 JUMPDEST
0x1f2 PUSH2 0x1f9
0x1f5 PUSH2 0x70f
0x1f8 JUMP
---
0x1f1: JUMPDEST 
0x1f2: V129 = 0x1f9
0x1f5: V130 = 0x70f
0x1f8: JUMP 0x70f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1f9]
Exit stack: [V11, 0x1f9]

================================

Block 0x1f9
[0x1f9:0x20e]
---
Predecessors: [0x70f]
Successors: []
---
0x1f9 JUMPDEST
0x1fa PUSH1 0x40
0x1fc MLOAD
0x1fd DUP1
0x1fe DUP3
0x1ff DUP2
0x200 MSTORE
0x201 PUSH1 0x20
0x203 ADD
0x204 SWAP2
0x205 POP
0x206 POP
0x207 PUSH1 0x40
0x209 MLOAD
0x20a DUP1
0x20b SWAP2
0x20c SUB
0x20d SWAP1
0x20e RETURN
---
0x1f9: JUMPDEST 
0x1fa: V131 = 0x40
0x1fc: V132 = M[0x40]
0x200: M[V132] = V403
0x201: V133 = 0x20
0x203: V134 = ADD 0x20 V132
0x207: V135 = 0x40
0x209: V136 = M[0x40]
0x20c: V137 = SUB V134 V136
0x20e: RETURN V136 V137
---
Entry stack: [V11, 0x1f9, V403]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1f9]

================================

Block 0x20f
[0x20f:0x255]
---
Predecessors: [0xa6]
Successors: [0xae]
---
0x20f JUMPDEST
0x210 PUSH1 0x0
0x212 PUSH1 0x4
0x214 PUSH1 0x0
0x216 CALLER
0x217 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22c AND
0x22d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x242 AND
0x243 DUP2
0x244 MSTORE
0x245 PUSH1 0x20
0x247 ADD
0x248 SWAP1
0x249 DUP2
0x24a MSTORE
0x24b PUSH1 0x20
0x24d ADD
0x24e PUSH1 0x0
0x250 SHA3
0x251 SLOAD
0x252 SWAP1
0x253 POP
0x254 SWAP1
0x255 JUMP
---
0x20f: JUMPDEST 
0x210: V138 = 0x0
0x212: V139 = 0x4
0x214: V140 = 0x0
0x216: V141 = CALLER
0x217: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x22d: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x242: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x244: M[0x0] = V145
0x245: V146 = 0x20
0x247: V147 = ADD 0x20 0x0
0x24a: M[0x20] = 0x4
0x24b: V148 = 0x20
0x24d: V149 = ADD 0x20 0x20
0x24e: V150 = 0x0
0x250: V151 = SHA3 0x0 0x40
0x251: V152 = S[V151]
0x255: JUMP 0xae
---
Entry stack: [V11, 0xae]
Stack pops: 1
Stack additions: [V152]
Exit stack: [V11, V152]

================================

Block 0x256
[0x256:0x25b]
---
Predecessors: [0xcf]
Successors: [0xd7]
---
0x256 JUMPDEST
0x257 PUSH1 0x1
0x259 SLOAD
0x25a DUP2
0x25b JUMP
---
0x256: JUMPDEST 
0x257: V153 = 0x1
0x259: V154 = S[0x1]
0x25b: JUMP 0xd7
---
Entry stack: [V11, 0xd7]
Stack pops: 1
Stack additions: [S0, V154]
Exit stack: [V11, 0xd7, V154]

================================

Block 0x25c
[0x25c:0x2aa]
---
Predecessors: [0xf8]
Successors: [0x2ab, 0x3f0]
---
0x25c JUMPDEST
0x25d PUSH1 0x0
0x25f PUSH1 0x4
0x261 PUSH1 0x0
0x263 CALLER
0x264 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x279 AND
0x27a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28f AND
0x290 DUP2
0x291 MSTORE
0x292 PUSH1 0x20
0x294 ADD
0x295 SWAP1
0x296 DUP2
0x297 MSTORE
0x298 PUSH1 0x20
0x29a ADD
0x29b PUSH1 0x0
0x29d SHA3
0x29e SLOAD
0x29f SWAP1
0x2a0 POP
0x2a1 PUSH1 0x1
0x2a3 SLOAD
0x2a4 TIMESTAMP
0x2a5 LT
0x2a6 ISZERO
0x2a7 PUSH2 0x3f0
0x2aa JUMPI
---
0x25c: JUMPDEST 
0x25d: V155 = 0x0
0x25f: V156 = 0x4
0x261: V157 = 0x0
0x263: V158 = CALLER
0x264: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x279: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x27a: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x291: M[0x0] = V162
0x292: V163 = 0x20
0x294: V164 = ADD 0x20 0x0
0x297: M[0x20] = 0x4
0x298: V165 = 0x20
0x29a: V166 = ADD 0x20 0x20
0x29b: V167 = 0x0
0x29d: V168 = SHA3 0x0 0x40
0x29e: V169 = S[V168]
0x2a1: V170 = 0x1
0x2a3: V171 = S[0x1]
0x2a4: V172 = TIMESTAMP
0x2a5: V173 = LT V172 V171
0x2a6: V174 = ISZERO V173
0x2a7: V175 = 0x3f0
0x2aa: JUMPI 0x3f0 V174
---
Entry stack: [V11, 0x100]
Stack pops: 0
Stack additions: [V169]
Exit stack: [V11, 0x100, V169]

================================

Block 0x2ab
[0x2ab:0x2c6]
---
Predecessors: [0x25c]
Successors: [0x715]
---
0x2ab PUSH2 0x2d5
0x2ae PUSH1 0x64
0x2b0 PUSH2 0x2c7
0x2b3 PUSH1 0x2
0x2b5 SLOAD
0x2b6 PUSH1 0x64
0x2b8 SUB
0x2b9 DUP5
0x2ba PUSH2 0x715
0x2bd SWAP1
0x2be SWAP2
0x2bf SWAP1
0x2c0 PUSH4 0xffffffff
0x2c5 AND
0x2c6 JUMP
---
0x2ab: V176 = 0x2d5
0x2ae: V177 = 0x64
0x2b0: V178 = 0x2c7
0x2b3: V179 = 0x2
0x2b5: V180 = S[0x2]
0x2b6: V181 = 0x64
0x2b8: V182 = SUB 0x64 V180
0x2ba: V183 = 0x715
0x2c0: V184 = 0xffffffff
0x2c5: V185 = AND 0xffffffff 0x715
0x2c6: JUMP 0x715
---
Entry stack: [V11, 0x100, V169]
Stack pops: 1
Stack additions: [S0, 0x2d5, 0x64, 0x2c7, S0, V182]
Exit stack: [V11, 0x100, V169, 0x2d5, 0x64, 0x2c7, V169, V182]

================================

Block 0x2c7
[0x2c7:0x2d4]
---
Predecessors: [0x749]
Successors: [0x750]
---
0x2c7 JUMPDEST
0x2c8 PUSH2 0x750
0x2cb SWAP1
0x2cc SWAP2
0x2cd SWAP1
0x2ce PUSH4 0xffffffff
0x2d3 AND
0x2d4 JUMP
---
0x2c7: JUMPDEST 
0x2c8: V186 = 0x750
0x2ce: V187 = 0xffffffff
0x2d3: V188 = AND 0xffffffff 0x750
0x2d4: JUMP 0x750
---
Entry stack: [V11, 0x100, V169, 0x2d5, 0x64, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V11, 0x100, V169, 0x2d5, S0, 0x64]

================================

Block 0x2d5
[0x2d5:0x38a]
---
Predecessors: [0x75e]
Successors: [0x76b]
---
0x2d5 JUMPDEST
0x2d6 SWAP1
0x2d7 POP
0x2d8 PUSH2 0x38b
0x2db DUP2
0x2dc PUSH1 0x4
0x2de PUSH1 0x0
0x2e0 CALLER
0x2e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f6 AND
0x2f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30c AND
0x30d DUP2
0x30e MSTORE
0x30f PUSH1 0x20
0x311 ADD
0x312 SWAP1
0x313 DUP2
0x314 MSTORE
0x315 PUSH1 0x20
0x317 ADD
0x318 PUSH1 0x0
0x31a SHA3
0x31b SLOAD
0x31c SUB
0x31d PUSH1 0x4
0x31f PUSH1 0x0
0x321 DUP1
0x322 PUSH1 0x0
0x324 SWAP1
0x325 SLOAD
0x326 SWAP1
0x327 PUSH2 0x100
0x32a EXP
0x32b SWAP1
0x32c DIV
0x32d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x342 AND
0x343 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x358 AND
0x359 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36e AND
0x36f DUP2
0x370 MSTORE
0x371 PUSH1 0x20
0x373 ADD
0x374 SWAP1
0x375 DUP2
0x376 MSTORE
0x377 PUSH1 0x20
0x379 ADD
0x37a PUSH1 0x0
0x37c SHA3
0x37d SLOAD
0x37e PUSH2 0x76b
0x381 SWAP1
0x382 SWAP2
0x383 SWAP1
0x384 PUSH4 0xffffffff
0x389 AND
0x38a JUMP
---
0x2d5: JUMPDEST 
0x2d8: V189 = 0x38b
0x2dc: V190 = 0x4
0x2de: V191 = 0x0
0x2e0: V192 = CALLER
0x2e1: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f6: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x2f7: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x30c: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x30e: M[0x0] = V196
0x30f: V197 = 0x20
0x311: V198 = ADD 0x20 0x0
0x314: M[0x20] = 0x4
0x315: V199 = 0x20
0x317: V200 = ADD 0x20 0x20
0x318: V201 = 0x0
0x31a: V202 = SHA3 0x0 0x40
0x31b: V203 = S[V202]
0x31c: V204 = SUB V203 V424
0x31d: V205 = 0x4
0x31f: V206 = 0x0
0x322: V207 = 0x0
0x325: V208 = S[0x0]
0x327: V209 = 0x100
0x32a: V210 = EXP 0x100 0x0
0x32c: V211 = DIV V208 0x1
0x32d: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x342: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x343: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x358: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x359: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x36e: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x370: M[0x0] = V217
0x371: V218 = 0x20
0x373: V219 = ADD 0x20 0x0
0x376: M[0x20] = 0x4
0x377: V220 = 0x20
0x379: V221 = ADD 0x20 0x20
0x37a: V222 = 0x0
0x37c: V223 = SHA3 0x0 0x40
0x37d: V224 = S[V223]
0x37e: V225 = 0x76b
0x384: V226 = 0xffffffff
0x389: V227 = AND 0xffffffff 0x76b
0x38a: JUMP 0x76b
---
Entry stack: [V11, 0x100, V169, V424]
Stack pops: 2
Stack additions: [S0, 0x38b, V224, V204]
Exit stack: [V11, 0x100, V424, 0x38b, V224, V204]

================================

Block 0x38b
[0x38b:0x3ef]
---
Predecessors: [0x77f]
Successors: [0x3f0]
---
0x38b JUMPDEST
0x38c PUSH1 0x4
0x38e PUSH1 0x0
0x390 DUP1
0x391 PUSH1 0x0
0x393 SWAP1
0x394 SLOAD
0x395 SWAP1
0x396 PUSH2 0x100
0x399 EXP
0x39a SWAP1
0x39b DIV
0x39c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b1 AND
0x3b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c7 AND
0x3c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3dd AND
0x3de DUP2
0x3df MSTORE
0x3e0 PUSH1 0x20
0x3e2 ADD
0x3e3 SWAP1
0x3e4 DUP2
0x3e5 MSTORE
0x3e6 PUSH1 0x20
0x3e8 ADD
0x3e9 PUSH1 0x0
0x3eb SHA3
0x3ec DUP2
0x3ed SWAP1
0x3ee SSTORE
0x3ef POP
---
0x38b: JUMPDEST 
0x38c: V228 = 0x4
0x38e: V229 = 0x0
0x391: V230 = 0x0
0x394: V231 = S[0x0]
0x396: V232 = 0x100
0x399: V233 = EXP 0x100 0x0
0x39b: V234 = DIV V231 0x1
0x39c: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b1: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x3b2: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c7: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x3c8: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x3dd: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x3df: M[0x0] = V240
0x3e0: V241 = 0x20
0x3e2: V242 = ADD 0x20 0x0
0x3e5: M[0x20] = 0x4
0x3e6: V243 = 0x20
0x3e8: V244 = ADD 0x20 0x20
0x3e9: V245 = 0x0
0x3eb: V246 = SHA3 0x0 0x40
0x3ee: S[V246] = S0
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S2, S1]

================================

Block 0x3f0
[0x3f0:0x470]
---
Predecessors: [0x25c, 0x38b]
Successors: [0x471, 0x475]
---
0x3f0 JUMPDEST
0x3f1 PUSH1 0x0
0x3f3 PUSH1 0x4
0x3f5 PUSH1 0x0
0x3f7 CALLER
0x3f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40d AND
0x40e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x423 AND
0x424 DUP2
0x425 MSTORE
0x426 PUSH1 0x20
0x428 ADD
0x429 SWAP1
0x42a DUP2
0x42b MSTORE
0x42c PUSH1 0x20
0x42e ADD
0x42f PUSH1 0x0
0x431 SHA3
0x432 DUP2
0x433 SWAP1
0x434 SSTORE
0x435 POP
0x436 CALLER
0x437 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44c AND
0x44d PUSH2 0x8fc
0x450 DUP3
0x451 SWAP1
0x452 DUP2
0x453 ISZERO
0x454 MUL
0x455 SWAP1
0x456 PUSH1 0x40
0x458 MLOAD
0x459 PUSH1 0x0
0x45b PUSH1 0x40
0x45d MLOAD
0x45e DUP1
0x45f DUP4
0x460 SUB
0x461 DUP2
0x462 DUP6
0x463 DUP9
0x464 DUP9
0x465 CALL
0x466 SWAP4
0x467 POP
0x468 POP
0x469 POP
0x46a POP
0x46b ISZERO
0x46c ISZERO
0x46d PUSH2 0x475
0x470 JUMPI
---
0x3f0: JUMPDEST 
0x3f1: V247 = 0x0
0x3f3: V248 = 0x4
0x3f5: V249 = 0x0
0x3f7: V250 = CALLER
0x3f8: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x40d: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x40e: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x423: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x425: M[0x0] = V254
0x426: V255 = 0x20
0x428: V256 = ADD 0x20 0x0
0x42b: M[0x20] = 0x4
0x42c: V257 = 0x20
0x42e: V258 = ADD 0x20 0x20
0x42f: V259 = 0x0
0x431: V260 = SHA3 0x0 0x40
0x434: S[V260] = 0x0
0x436: V261 = CALLER
0x437: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x44c: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x44d: V264 = 0x8fc
0x453: V265 = ISZERO S0
0x454: V266 = MUL V265 0x8fc
0x456: V267 = 0x40
0x458: V268 = M[0x40]
0x459: V269 = 0x0
0x45b: V270 = 0x40
0x45d: V271 = M[0x40]
0x460: V272 = SUB V268 V271
0x465: V273 = CALL V266 V263 S0 V271 V272 V271 0x0
0x46b: V274 = ISZERO V273
0x46c: V275 = ISZERO V274
0x46d: V276 = 0x475
0x470: JUMPI 0x475 V275
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S1, S0]

================================

Block 0x471
[0x471:0x474]
---
Predecessors: [0x3f0]
Successors: []
---
0x471 PUSH1 0x0
0x473 DUP1
0x474 REVERT
---
0x471: V277 = 0x0
0x474: REVERT 0x0 0x0
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0x475
[0x475:0x477]
---
Predecessors: [0x3f0]
Successors: [0x100]
---
0x475 JUMPDEST
0x476 POP
0x477 JUMP
---
0x475: JUMPDEST 
0x477: JUMP S1
---
Entry stack: [V11, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x478
[0x478:0x49c]
---
Predecessors: [0x10d]
Successors: [0x115]
---
0x478 JUMPDEST
0x479 PUSH1 0x0
0x47b DUP1
0x47c SWAP1
0x47d SLOAD
0x47e SWAP1
0x47f PUSH2 0x100
0x482 EXP
0x483 SWAP1
0x484 DIV
0x485 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49a AND
0x49b DUP2
0x49c JUMP
---
0x478: JUMPDEST 
0x479: V278 = 0x0
0x47d: V279 = S[0x0]
0x47f: V280 = 0x100
0x482: V281 = EXP 0x100 0x0
0x484: V282 = DIV V279 0x1
0x485: V283 = 0xffffffffffffffffffffffffffffffffffffffff
0x49a: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x49c: JUMP 0x115
---
Entry stack: [V11, 0x115]
Stack pops: 1
Stack additions: [S0, V284]
Exit stack: [V11, 0x115, V284]

================================

Block 0x49d
[0x49d:0x4f3]
---
Predecessors: [0x162]
Successors: [0x4f4, 0x4f8]
---
0x49d JUMPDEST
0x49e PUSH1 0x0
0x4a0 DUP1
0x4a1 SWAP1
0x4a2 SLOAD
0x4a3 SWAP1
0x4a4 PUSH2 0x100
0x4a7 EXP
0x4a8 SWAP1
0x4a9 DIV
0x4aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bf AND
0x4c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d5 AND
0x4d6 CALLER
0x4d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ec AND
0x4ed EQ
0x4ee ISZERO
0x4ef ISZERO
0x4f0 PUSH2 0x4f8
0x4f3 JUMPI
---
0x49d: JUMPDEST 
0x49e: V285 = 0x0
0x4a2: V286 = S[0x0]
0x4a4: V287 = 0x100
0x4a7: V288 = EXP 0x100 0x0
0x4a9: V289 = DIV V286 0x1
0x4aa: V290 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bf: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x4c0: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d5: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x4d6: V294 = CALLER
0x4d7: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ec: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x4ed: V297 = EQ V296 V293
0x4ee: V298 = ISZERO V297
0x4ef: V299 = ISZERO V298
0x4f0: V300 = 0x4f8
0x4f3: JUMPI 0x4f8 V299
---
Entry stack: [V11, 0x178, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x178, V94]

================================

Block 0x4f4
[0x4f4:0x4f7]
---
Predecessors: [0x49d]
Successors: []
---
0x4f4 PUSH1 0x0
0x4f6 DUP1
0x4f7 REVERT
---
0x4f4: V301 = 0x0
0x4f7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x178, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x178, V94]

================================

Block 0x4f8
[0x4f8:0x501]
---
Predecessors: [0x49d]
Successors: [0x178]
---
0x4f8 JUMPDEST
0x4f9 DUP1
0x4fa PUSH1 0x1
0x4fc DUP2
0x4fd SWAP1
0x4fe SSTORE
0x4ff POP
0x500 POP
0x501 JUMP
---
0x4f8: JUMPDEST 
0x4fa: V302 = 0x1
0x4fe: S[0x1] = V94
0x501: JUMP 0x178
---
Entry stack: [V11, 0x178, V94]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x502
[0x502:0x507]
---
Predecessors: [0x185]
Successors: [0x18d]
---
0x502 JUMPDEST
0x503 PUSH1 0x2
0x505 SLOAD
0x506 DUP2
0x507 JUMP
---
0x502: JUMPDEST 
0x503: V303 = 0x2
0x505: V304 = S[0x2]
0x507: JUMP 0x18d
---
Entry stack: [V11, 0x18d]
Stack pops: 1
Stack additions: [S0, V304]
Exit stack: [V11, 0x18d, V304]

================================

Block 0x508
[0x508:0x51c]
---
Predecessors: [0x1a3]
Successors: [0x76b]
---
0x508 JUMPDEST
0x509 PUSH2 0x51d
0x50c CALLVALUE
0x50d PUSH1 0x3
0x50f SLOAD
0x510 PUSH2 0x76b
0x513 SWAP1
0x514 SWAP2
0x515 SWAP1
0x516 PUSH4 0xffffffff
0x51b AND
0x51c JUMP
---
0x508: JUMPDEST 
0x509: V305 = 0x51d
0x50c: V306 = CALLVALUE
0x50d: V307 = 0x3
0x50f: V308 = S[0x3]
0x510: V309 = 0x76b
0x516: V310 = 0xffffffff
0x51b: V311 = AND 0xffffffff 0x76b
0x51c: JUMP 0x76b
---
Entry stack: [V11, 0x1ab]
Stack pops: 0
Stack additions: [0x51d, V308, V306]
Exit stack: [V11, 0x1ab, 0x51d, V308, V306]

================================

Block 0x51d
[0x51d:0x574]
---
Predecessors: [0x77f]
Successors: [0x76b]
---
0x51d JUMPDEST
0x51e PUSH1 0x3
0x520 DUP2
0x521 SWAP1
0x522 SSTORE
0x523 POP
0x524 PUSH2 0x575
0x527 CALLVALUE
0x528 PUSH1 0x4
0x52a PUSH1 0x0
0x52c CALLER
0x52d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x542 AND
0x543 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x558 AND
0x559 DUP2
0x55a MSTORE
0x55b PUSH1 0x20
0x55d ADD
0x55e SWAP1
0x55f DUP2
0x560 MSTORE
0x561 PUSH1 0x20
0x563 ADD
0x564 PUSH1 0x0
0x566 SHA3
0x567 SLOAD
0x568 PUSH2 0x76b
0x56b SWAP1
0x56c SWAP2
0x56d SWAP1
0x56e PUSH4 0xffffffff
0x573 AND
0x574 JUMP
---
0x51d: JUMPDEST 
0x51e: V312 = 0x3
0x522: S[0x3] = S0
0x524: V313 = 0x575
0x527: V314 = CALLVALUE
0x528: V315 = 0x4
0x52a: V316 = 0x0
0x52c: V317 = CALLER
0x52d: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x542: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x543: V320 = 0xffffffffffffffffffffffffffffffffffffffff
0x558: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V319
0x55a: M[0x0] = V321
0x55b: V322 = 0x20
0x55d: V323 = ADD 0x20 0x0
0x560: M[0x20] = 0x4
0x561: V324 = 0x20
0x563: V325 = ADD 0x20 0x20
0x564: V326 = 0x0
0x566: V327 = SHA3 0x0 0x40
0x567: V328 = S[V327]
0x568: V329 = 0x76b
0x56e: V330 = 0xffffffff
0x573: V331 = AND 0xffffffff 0x76b
0x574: JUMP 0x76b
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 1
Stack additions: [0x575, V328, V314]
Exit stack: [V11, S2, S1, 0x575, V328, V314]

================================

Block 0x575
[0x575:0x5b9]
---
Predecessors: [0x77f]
Successors: [0x1ab]
---
0x575 JUMPDEST
0x576 PUSH1 0x4
0x578 PUSH1 0x0
0x57a CALLER
0x57b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x590 AND
0x591 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a6 AND
0x5a7 DUP2
0x5a8 MSTORE
0x5a9 PUSH1 0x20
0x5ab ADD
0x5ac SWAP1
0x5ad DUP2
0x5ae MSTORE
0x5af PUSH1 0x20
0x5b1 ADD
0x5b2 PUSH1 0x0
0x5b4 SHA3
0x5b5 DUP2
0x5b6 SWAP1
0x5b7 SSTORE
0x5b8 POP
0x5b9 JUMP
---
0x575: JUMPDEST 
0x576: V332 = 0x4
0x578: V333 = 0x0
0x57a: V334 = CALLER
0x57b: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x590: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x591: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a6: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x5a8: M[0x0] = V338
0x5a9: V339 = 0x20
0x5ab: V340 = ADD 0x20 0x0
0x5ae: M[0x20] = 0x4
0x5af: V341 = 0x20
0x5b1: V342 = ADD 0x20 0x20
0x5b2: V343 = 0x0
0x5b4: V344 = SHA3 0x0 0x40
0x5b7: S[V344] = S0
0x5b9: JUMP S1
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S2]

================================

Block 0x5ba
[0x5ba:0x610]
---
Predecessors: [0x1b8]
Successors: [0x611, 0x615]
---
0x5ba JUMPDEST
0x5bb PUSH1 0x0
0x5bd DUP1
0x5be SWAP1
0x5bf SLOAD
0x5c0 SWAP1
0x5c1 PUSH2 0x100
0x5c4 EXP
0x5c5 SWAP1
0x5c6 DIV
0x5c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5dc AND
0x5dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f2 AND
0x5f3 CALLER
0x5f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x609 AND
0x60a EQ
0x60b ISZERO
0x60c ISZERO
0x60d PUSH2 0x615
0x610 JUMPI
---
0x5ba: JUMPDEST 
0x5bb: V345 = 0x0
0x5bf: V346 = S[0x0]
0x5c1: V347 = 0x100
0x5c4: V348 = EXP 0x100 0x0
0x5c6: V349 = DIV V346 0x1
0x5c7: V350 = 0xffffffffffffffffffffffffffffffffffffffff
0x5dc: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x5dd: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f2: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x5f3: V354 = CALLER
0x5f4: V355 = 0xffffffffffffffffffffffffffffffffffffffff
0x609: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0x60a: V357 = EQ V356 V353
0x60b: V358 = ISZERO V357
0x60c: V359 = ISZERO V358
0x60d: V360 = 0x615
0x610: JUMPI 0x615 V359
---
Entry stack: [V11, 0x1e4, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e4, V121]

================================

Block 0x611
[0x611:0x614]
---
Predecessors: [0x5ba]
Successors: []
---
0x611 PUSH1 0x0
0x613 DUP1
0x614 REVERT
---
0x611: V361 = 0x0
0x614: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1e4, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e4, V121]

================================

Block 0x615
[0x615:0x64c]
---
Predecessors: [0x5ba]
Successors: [0x64d, 0x651]
---
0x615 JUMPDEST
0x616 PUSH1 0x0
0x618 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62d AND
0x62e DUP2
0x62f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x644 AND
0x645 EQ
0x646 ISZERO
0x647 ISZERO
0x648 ISZERO
0x649 PUSH2 0x651
0x64c JUMPI
---
0x615: JUMPDEST 
0x616: V362 = 0x0
0x618: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x62d: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x62f: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x644: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x645: V367 = EQ V366 0x0
0x646: V368 = ISZERO V367
0x647: V369 = ISZERO V368
0x648: V370 = ISZERO V369
0x649: V371 = 0x651
0x64c: JUMPI 0x651 V370
---
Entry stack: [V11, 0x1e4, V121]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1e4, V121]

================================

Block 0x64d
[0x64d:0x650]
---
Predecessors: [0x615]
Successors: []
---
0x64d PUSH1 0x0
0x64f DUP1
0x650 REVERT
---
0x64d: V372 = 0x0
0x650: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1e4, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e4, V121]

================================

Block 0x651
[0x651:0x70e]
---
Predecessors: [0x615]
Successors: [0x1e4]
---
0x651 JUMPDEST
0x652 DUP1
0x653 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x668 AND
0x669 PUSH1 0x0
0x66b DUP1
0x66c SWAP1
0x66d SLOAD
0x66e SWAP1
0x66f PUSH2 0x100
0x672 EXP
0x673 SWAP1
0x674 DIV
0x675 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68a AND
0x68b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a0 AND
0x6a1 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6c2 PUSH1 0x40
0x6c4 MLOAD
0x6c5 PUSH1 0x40
0x6c7 MLOAD
0x6c8 DUP1
0x6c9 SWAP2
0x6ca SUB
0x6cb SWAP1
0x6cc LOG3
0x6cd DUP1
0x6ce PUSH1 0x0
0x6d0 DUP1
0x6d1 PUSH2 0x100
0x6d4 EXP
0x6d5 DUP2
0x6d6 SLOAD
0x6d7 DUP2
0x6d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ed MUL
0x6ee NOT
0x6ef AND
0x6f0 SWAP1
0x6f1 DUP4
0x6f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x707 AND
0x708 MUL
0x709 OR
0x70a SWAP1
0x70b SSTORE
0x70c POP
0x70d POP
0x70e JUMP
---
0x651: JUMPDEST 
0x653: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x668: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x669: V375 = 0x0
0x66d: V376 = S[0x0]
0x66f: V377 = 0x100
0x672: V378 = EXP 0x100 0x0
0x674: V379 = DIV V376 0x1
0x675: V380 = 0xffffffffffffffffffffffffffffffffffffffff
0x68a: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x68b: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a0: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x6a1: V384 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6c2: V385 = 0x40
0x6c4: V386 = M[0x40]
0x6c5: V387 = 0x40
0x6c7: V388 = M[0x40]
0x6ca: V389 = SUB V386 V388
0x6cc: LOG V388 V389 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V383 V374
0x6ce: V390 = 0x0
0x6d1: V391 = 0x100
0x6d4: V392 = EXP 0x100 0x0
0x6d6: V393 = S[0x0]
0x6d8: V394 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ed: V395 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x6ee: V396 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6ef: V397 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V393
0x6f2: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x707: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x708: V400 = MUL V399 0x1
0x709: V401 = OR V400 V397
0x70b: S[0x0] = V401
0x70e: JUMP 0x1e4
---
Entry stack: [V11, 0x1e4, V121]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x70f
[0x70f:0x714]
---
Predecessors: [0x1f1]
Successors: [0x1f9]
---
0x70f JUMPDEST
0x710 PUSH1 0x3
0x712 SLOAD
0x713 DUP2
0x714 JUMP
---
0x70f: JUMPDEST 
0x710: V402 = 0x3
0x712: V403 = S[0x3]
0x714: JUMP 0x1f9
---
Entry stack: [V11, 0x1f9]
Stack pops: 1
Stack additions: [S0, V403]
Exit stack: [V11, 0x1f9, V403]

================================

Block 0x715
[0x715:0x721]
---
Predecessors: [0x2ab]
Successors: [0x722, 0x72a]
---
0x715 JUMPDEST
0x716 PUSH1 0x0
0x718 DUP1
0x719 PUSH1 0x0
0x71b DUP5
0x71c EQ
0x71d ISZERO
0x71e PUSH2 0x72a
0x721 JUMPI
---
0x715: JUMPDEST 
0x716: V404 = 0x0
0x719: V405 = 0x0
0x71c: V406 = EQ V169 0x0
0x71d: V407 = ISZERO V406
0x71e: V408 = 0x72a
0x721: JUMPI 0x72a V407
---
Entry stack: [V11, 0x100, V169, 0x2d5, 0x64, 0x2c7, V169, V182]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, 0x100, V169, 0x2d5, 0x64, 0x2c7, V169, V182, 0x0, 0x0]

================================

Block 0x722
[0x722:0x729]
---
Predecessors: [0x715]
Successors: [0x749]
---
0x722 PUSH1 0x0
0x724 SWAP2
0x725 POP
0x726 PUSH2 0x749
0x729 JUMP
---
0x722: V409 = 0x0
0x726: V410 = 0x749
0x729: JUMP 0x749
---
Entry stack: [V11, 0x100, V169, 0x2d5, 0x64, 0x2c7, V169, V182, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x100, V169, 0x2d5, 0x64, 0x2c7, V169, V182, 0x0, 0x0]

================================

Block 0x72a
[0x72a:0x739]
---
Predecessors: [0x715]
Successors: [0x73a, 0x73b]
---
0x72a JUMPDEST
0x72b DUP3
0x72c DUP5
0x72d MUL
0x72e SWAP1
0x72f POP
0x730 DUP3
0x731 DUP5
0x732 DUP3
0x733 DUP2
0x734 ISZERO
0x735 ISZERO
0x736 PUSH2 0x73b
0x739 JUMPI
---
0x72a: JUMPDEST 
0x72d: V411 = MUL V169 V182
0x734: V412 = ISZERO V169
0x735: V413 = ISZERO V412
0x736: V414 = 0x73b
0x739: JUMPI 0x73b V413
---
Entry stack: [V11, 0x100, V169, 0x2d5, 0x64, 0x2c7, V169, V182, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V411, S2, S3, V411]
Exit stack: [V11, 0x100, V169, 0x2d5, 0x64, 0x2c7, V169, V182, 0x0, V411, V182, V169, V411]

================================

Block 0x73a
[0x73a:0x73a]
---
Predecessors: [0x72a]
Successors: []
---
0x73a INVALID
---
0x73a: INVALID 
---
Entry stack: [V11, 0x100, V169, 0x2d5, 0x64, 0x2c7, V169, V182, 0x0, V411, V182, V169, V411]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x100, V169, 0x2d5, 0x64, 0x2c7, V169, V182, 0x0, V411, V182, V169, V411]

================================

Block 0x73b
[0x73b:0x743]
---
Predecessors: [0x72a]
Successors: [0x744, 0x745]
---
0x73b JUMPDEST
0x73c DIV
0x73d EQ
0x73e ISZERO
0x73f ISZERO
0x740 PUSH2 0x745
0x743 JUMPI
---
0x73b: JUMPDEST 
0x73c: V415 = DIV V411 V169
0x73d: V416 = EQ V415 V182
0x73e: V417 = ISZERO V416
0x73f: V418 = ISZERO V417
0x740: V419 = 0x745
0x743: JUMPI 0x745 V418
---
Entry stack: [V11, 0x100, V169, 0x2d5, 0x64, 0x2c7, V169, V182, 0x0, V411, V182, V169, V411]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x100, V169, 0x2d5, 0x64, 0x2c7, V169, V182, 0x0, V411]

================================

Block 0x744
[0x744:0x744]
---
Predecessors: [0x73b]
Successors: []
---
0x744 INVALID
---
0x744: INVALID 
---
Entry stack: [V11, 0x100, V169, 0x2d5, 0x64, 0x2c7, V169, V182, 0x0, V411]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x100, V169, 0x2d5, 0x64, 0x2c7, V169, V182, 0x0, V411]

================================

Block 0x745
[0x745:0x748]
---
Predecessors: [0x73b]
Successors: [0x749]
---
0x745 JUMPDEST
0x746 DUP1
0x747 SWAP2
0x748 POP
---
0x745: JUMPDEST 
---
Entry stack: [V11, 0x100, V169, 0x2d5, 0x64, 0x2c7, V169, V182, 0x0, V411]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V11, 0x100, V169, 0x2d5, 0x64, 0x2c7, V169, V182, V411, V411]

================================

Block 0x749
[0x749:0x74f]
---
Predecessors: [0x722, 0x745]
Successors: [0x2c7]
---
0x749 JUMPDEST
0x74a POP
0x74b SWAP3
0x74c SWAP2
0x74d POP
0x74e POP
0x74f JUMP
---
0x749: JUMPDEST 
0x74f: JUMP 0x2c7
---
Entry stack: [V11, 0x100, V169, 0x2d5, 0x64, 0x2c7, V169, V182, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, 0x100, V169, 0x2d5, 0x64, S1]

================================

Block 0x750
[0x750:0x75c]
---
Predecessors: [0x2c7]
Successors: [0x75d, 0x75e]
---
0x750 JUMPDEST
0x751 PUSH1 0x0
0x753 DUP1
0x754 DUP3
0x755 DUP5
0x756 DUP2
0x757 ISZERO
0x758 ISZERO
0x759 PUSH2 0x75e
0x75c JUMPI
---
0x750: JUMPDEST 
0x751: V420 = 0x0
0x757: V421 = ISZERO 0x64
0x758: V422 = ISZERO 0x0
0x759: V423 = 0x75e
0x75c: JUMPI 0x75e 0x1
---
Entry stack: [V11, 0x100, V169, 0x2d5, S1, 0x64]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V11, 0x100, V169, 0x2d5, S1, 0x64, 0x0, 0x0, 0x64, S1]

================================

Block 0x75d
[0x75d:0x75d]
---
Predecessors: [0x750]
Successors: []
---
0x75d INVALID
---
0x75d: INVALID 
---
Entry stack: [V11, 0x100, V169, 0x2d5, S5, 0x64, 0x0, 0x0, 0x64, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x100, V169, 0x2d5, S5, 0x64, 0x0, 0x0, 0x64, S0]

================================

Block 0x75e
[0x75e:0x76a]
---
Predecessors: [0x750]
Successors: [0x2d5]
---
0x75e JUMPDEST
0x75f DIV
0x760 SWAP1
0x761 POP
0x762 DUP1
0x763 SWAP2
0x764 POP
0x765 POP
0x766 SWAP3
0x767 SWAP2
0x768 POP
0x769 POP
0x76a JUMP
---
0x75e: JUMPDEST 
0x75f: V424 = DIV S0 0x64
0x76a: JUMP 0x2d5
---
Entry stack: [V11, 0x100, V169, 0x2d5, S5, 0x64, 0x0, 0x0, 0x64, S0]
Stack pops: 7
Stack additions: [V424]
Exit stack: [V11, 0x100, V169, V424]

================================

Block 0x76b
[0x76b:0x77d]
---
Predecessors: [0x2d5, 0x508, 0x51d]
Successors: [0x77e, 0x77f]
---
0x76b JUMPDEST
0x76c PUSH1 0x0
0x76e DUP1
0x76f DUP3
0x770 DUP5
0x771 ADD
0x772 SWAP1
0x773 POP
0x774 DUP4
0x775 DUP2
0x776 LT
0x777 ISZERO
0x778 ISZERO
0x779 ISZERO
0x77a PUSH2 0x77f
0x77d JUMPI
---
0x76b: JUMPDEST 
0x76c: V425 = 0x0
0x771: V426 = ADD S1 S0
0x776: V427 = LT V426 S1
0x777: V428 = ISZERO V427
0x778: V429 = ISZERO V428
0x779: V430 = ISZERO V429
0x77a: V431 = 0x77f
0x77d: JUMPI 0x77f V430
---
Entry stack: [V11, S4, S3, {0x38b, 0x51d, 0x575}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V426]
Exit stack: [V11, S4, S3, {0x38b, 0x51d, 0x575}, S1, S0, 0x0, V426]

================================

Block 0x77e
[0x77e:0x77e]
---
Predecessors: [0x76b]
Successors: []
---
0x77e INVALID
---
0x77e: INVALID 
---
Entry stack: [V11, S6, S5, {0x38b, 0x51d, 0x575}, S3, S2, 0x0, V426]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, S5, {0x38b, 0x51d, 0x575}, S3, S2, 0x0, V426]

================================

Block 0x77f
[0x77f:0x788]
---
Predecessors: [0x76b]
Successors: [0x38b, 0x51d, 0x575]
---
0x77f JUMPDEST
0x780 DUP1
0x781 SWAP2
0x782 POP
0x783 POP
0x784 SWAP3
0x785 SWAP2
0x786 POP
0x787 POP
0x788 JUMP
---
0x77f: JUMPDEST 
0x788: JUMP {0x38b, 0x51d, 0x575}
---
Entry stack: [V11, S6, S5, {0x38b, 0x51d, 0x575}, S3, S2, 0x0, V426]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, S6, S5, V426]

================================

Block 0x789
[0x789:0x7bc]
---
Predecessors: []
Successors: []
---
0x789 STOP
0x78a LOG1
0x78b PUSH6 0x627a7a723058
0x792 SHA3
0x793 MISSING 0x21
0x794 MISSING 0xea
0x795 MISSING 0x27
0x796 MISSING 0xd7
0x797 MISSING 0xd5
0x798 CREATE
0x799 MISSING 0x4d
0x79a BYTE
0x79b MISSING 0xb1
0x79c PUSH3 0xb131ab
0x7a0 PUSH12 0x6ef72e56cffe05a557ca512a
0x7ad MISSING 0xd5
0x7ae DUP2
0x7af MSIZE
0x7b0 MISSING 0xca
0x7b1 MISSING 0xa7
0x7b2 PUSH10 0x29
---
0x789: STOP 
0x78a: LOG S0 S1 S2
0x78b: V432 = 0x627a7a723058
0x792: V433 = SHA3 0x627a7a723058 S3
0x793: MISSING 0x21
0x794: MISSING 0xea
0x795: MISSING 0x27
0x796: MISSING 0xd7
0x797: MISSING 0xd5
0x798: V434 = CREATE S0 S1 S2
0x799: MISSING 0x4d
0x79a: V435 = BYTE S0 S1
0x79b: MISSING 0xb1
0x79c: V436 = 0xb131ab
0x7a0: V437 = 0x6ef72e56cffe05a557ca512a
0x7ad: MISSING 0xd5
0x7af: V438 = MSIZE
0x7b0: MISSING 0xca
0x7b1: MISSING 0xa7
0x7b2: V439 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V433, V434, V435, 0x6ef72e56cffe05a557ca512a, 0xb131ab, V438, S1, S0, S1, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x12065fe0
Entry block: 0x9b
Exit block: 0xae
Body: 0x9b, 0xa2, 0xa6, 0xae, 0x20f

Function 1:
Public function signature: 0x389eb9f9
Entry block: 0xc4
Exit block: 0xd7
Body: 0xc4, 0xcb, 0xcf, 0xd7, 0x256

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0xed
Exit block: 0x75d
Body: 0xed, 0xf4, 0xf8, 0x100, 0x25c, 0x2ab, 0x2c7, 0x2d5, 0x38b, 0x3f0, 0x471, 0x475, 0x715, 0x722, 0x72a, 0x73a, 0x73b, 0x744, 0x745, 0x749, 0x750, 0x75d, 0x75e

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x102
Exit block: 0x115
Body: 0x102, 0x109, 0x10d, 0x115, 0x478

Function 4:
Public function signature: 0xb6af3643
Entry block: 0x157
Exit block: 0x178
Body: 0x157, 0x15e, 0x162, 0x178, 0x49d, 0x4f4, 0x4f8

Function 5:
Public function signature: 0xc947db81
Entry block: 0x17a
Exit block: 0x18d
Body: 0x17a, 0x181, 0x185, 0x18d, 0x502

Function 6:
Public function signature: 0xd0e30db0
Entry block: 0x1a3
Exit block: 0x1ab
Body: 0x1a3, 0x1ab, 0x508, 0x51d

Function 7:
Public function signature: 0xf2fde38b
Entry block: 0x1ad
Exit block: 0x1e4
Body: 0x1ad, 0x1b4, 0x1b8, 0x1e4, 0x5ba, 0x611, 0x615, 0x64d, 0x651

Function 8:
Public function signature: 0xff50abdc
Entry block: 0x1e6
Exit block: 0x1f9
Body: 0x1e6, 0x1ed, 0x1f1, 0x1f9, 0x70f

Function 9:
Public fallback function
Entry block: 0x99
Exit block: 0x99
Body: 0x99

Function 10:
Private function
Entry block: 0x76b
Exit block: 0x77f
Body: 0x76b, 0x77f

