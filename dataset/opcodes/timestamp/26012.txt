Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x237]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x237
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x237
0x24: JUMPI 0x237 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x249]
---
0x25 DUP1
0x26 PUSH4 0x29dcb0cf
0x2b EQ
0x2c PUSH2 0x249
0x2f JUMPI
---
0x26: V16 = 0x29dcb0cf
0x2b: V17 = EQ 0x29dcb0cf V12
0x2c: V18 = 0x249
0x2f: JUMPI 0x249 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x26b]
---
0x30 DUP1
0x31 PUSH4 0x38af3eed
0x36 EQ
0x37 PUSH2 0x26b
0x3a JUMPI
---
0x31: V19 = 0x38af3eed
0x36: V20 = EQ 0x38af3eed V12
0x37: V21 = 0x26b
0x3a: JUMPI 0x26b V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x297]
---
0x3b DUP1
0x3c PUSH4 0x6e66f6e9
0x41 EQ
0x42 PUSH2 0x297
0x45 JUMPI
---
0x3c: V22 = 0x6e66f6e9
0x41: V23 = EQ 0x6e66f6e9 V12
0x42: V24 = 0x297
0x45: JUMPI 0x297 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x2c3]
---
0x46 DUP1
0x47 PUSH4 0x70a08231
0x4c EQ
0x4d PUSH2 0x2c3
0x50 JUMPI
---
0x47: V25 = 0x70a08231
0x4c: V26 = EQ 0x70a08231 V12
0x4d: V27 = 0x2c3
0x50: JUMPI 0x2c3 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x2f1]
---
0x51 DUP1
0x52 PUSH4 0x7a3a0e84
0x57 EQ
0x58 PUSH2 0x2f1
0x5b JUMPI
---
0x52: V28 = 0x7a3a0e84
0x57: V29 = EQ 0x7a3a0e84 V12
0x58: V30 = 0x2f1
0x5b: JUMPI 0x2f1 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x313]
---
0x5c DUP1
0x5d PUSH4 0x7b3e5e7b
0x62 EQ
0x63 PUSH2 0x313
0x66 JUMPI
---
0x5d: V31 = 0x7b3e5e7b
0x62: V32 = EQ 0x7b3e5e7b V12
0x63: V33 = 0x313
0x66: JUMPI 0x313 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x335]
---
0x67 DUP1
0x68 PUSH4 0xa035b1fe
0x6d EQ
0x6e PUSH2 0x335
0x71 JUMPI
---
0x68: V34 = 0xa035b1fe
0x6d: V35 = EQ 0xa035b1fe V12
0x6e: V36 = 0x335
0x71: JUMPI 0x335 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x357]
---
0x72 DUP1
0x73 PUSH4 0xfd6b7ef8
0x78 EQ
0x79 PUSH2 0x357
0x7c JUMPI
---
0x73: V37 = 0xfd6b7ef8
0x78: V38 = EQ 0xfd6b7ef8 V12
0x79: V39 = 0x357
0x7c: JUMPI 0x357 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x0, 0x72]
Successors: [0x81]
---
0x7d JUMPDEST
0x7e PUSH2 0x235
---
0x7d: JUMPDEST 
0x7e: V40 = 0x235
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x235]
Exit stack: [V12, 0x235]

================================

Block 0x81
[0x81:0x94]
---
Predecessors: [0x7d]
Successors: [0x95, 0x9a]
---
0x81 JUMPDEST
0x82 PUSH1 0x7
0x84 SLOAD
0x85 PUSH1 0x0
0x87 SWAP1
0x88 PUSH2 0x100
0x8b SWAP1
0x8c DIV
0x8d PUSH1 0xff
0x8f AND
0x90 ISZERO
0x91 PUSH2 0x9a
0x94 JUMPI
---
0x81: JUMPDEST 
0x82: V41 = 0x7
0x84: V42 = S[0x7]
0x85: V43 = 0x0
0x88: V44 = 0x100
0x8c: V45 = DIV V42 0x100
0x8d: V46 = 0xff
0x8f: V47 = AND 0xff V45
0x90: V48 = ISZERO V47
0x91: V49 = 0x9a
0x94: JUMPI 0x9a V48
---
Entry stack: [V12, 0x235]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x235, 0x0]

================================

Block 0x95
[0x95:0x99]
---
Predecessors: [0x81]
Successors: []
---
0x95 PUSH1 0x0
0x97 PUSH1 0x0
0x99 REVERT
---
0x95: V50 = 0x0
0x97: V51 = 0x0
0x99: REVERT 0x0 0x0
---
Entry stack: [V12, 0x235, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, 0x0]

================================

Block 0x9a
[0x9a:0xce]
---
Predecessors: [0x81]
Successors: [0xcf, 0x15d]
---
0x9a JUMPDEST
0x9b POP
0x9c PUSH1 0x1
0x9e PUSH1 0xa0
0xa0 PUSH1 0x2
0xa2 EXP
0xa3 SUB
0xa4 CALLER
0xa5 AND
0xa6 PUSH1 0x0
0xa8 SWAP1
0xa9 DUP2
0xaa MSTORE
0xab PUSH1 0x6
0xad PUSH1 0x20
0xaf MSTORE
0xb0 PUSH1 0x40
0xb2 SWAP1
0xb3 SHA3
0xb4 CALLVALUE
0xb5 SWAP1
0xb6 DUP2
0xb7 SWAP1
0xb8 SSTORE
0xb9 PUSH1 0x2
0xbb DUP1
0xbc SLOAD
0xbd DUP3
0xbe ADD
0xbf SWAP1
0xc0 SSTORE
0xc1 PUSH1 0x3
0xc3 SLOAD
0xc4 PUSH2 0x12b
0xc7 NOT
0xc8 ADD
0xc9 TIMESTAMP
0xca GT
0xcb PUSH2 0x15d
0xce JUMPI
---
0x9a: JUMPDEST 
0x9c: V52 = 0x1
0x9e: V53 = 0xa0
0xa0: V54 = 0x2
0xa2: V55 = EXP 0x2 0xa0
0xa3: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4: V57 = CALLER
0xa5: V58 = AND V57 0xffffffffffffffffffffffffffffffffffffffff
0xa6: V59 = 0x0
0xaa: M[0x0] = V58
0xab: V60 = 0x6
0xad: V61 = 0x20
0xaf: M[0x20] = 0x6
0xb0: V62 = 0x40
0xb3: V63 = SHA3 0x0 0x40
0xb4: V64 = CALLVALUE
0xb8: S[V63] = V64
0xb9: V65 = 0x2
0xbc: V66 = S[0x2]
0xbe: V67 = ADD V64 V66
0xc0: S[0x2] = V67
0xc1: V68 = 0x3
0xc3: V69 = S[0x3]
0xc4: V70 = 0x12b
0xc7: V71 = NOT 0x12b
0xc8: V72 = ADD 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed4 V69
0xc9: V73 = TIMESTAMP
0xca: V74 = GT V73 V72
0xcb: V75 = 0x15d
0xce: JUMPI 0x15d V74
---
Entry stack: [V12, 0x235, 0x0]
Stack pops: 1
Stack additions: [V64]
Exit stack: [V12, 0x235, V64]

================================

Block 0xcf
[0xcf:0xf6]
---
Predecessors: [0x9a]
Successors: [0xf7, 0xf8]
---
0xcf PUSH1 0x5
0xd1 SLOAD
0xd2 PUSH1 0x4
0xd4 SLOAD
0xd5 PUSH1 0x1
0xd7 PUSH1 0xa0
0xd9 PUSH1 0x2
0xdb EXP
0xdc SUB
0xdd SWAP1
0xde SWAP2
0xdf AND
0xe0 SWAP1
0xe1 PUSH4 0xa9059cbb
0xe6 SWAP1
0xe7 CALLER
0xe8 SWAP1
0xe9 PUSH4 0x4d7c6d00
0xee DUP6
0xef MUL
0xf0 DUP2
0xf1 ISZERO
0xf2 ISZERO
0xf3 PUSH2 0xf8
0xf6 JUMPI
---
0xcf: V76 = 0x5
0xd1: V77 = S[0x5]
0xd2: V78 = 0x4
0xd4: V79 = S[0x4]
0xd5: V80 = 0x1
0xd7: V81 = 0xa0
0xd9: V82 = 0x2
0xdb: V83 = EXP 0x2 0xa0
0xdc: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf: V85 = AND V77 0xffffffffffffffffffffffffffffffffffffffff
0xe1: V86 = 0xa9059cbb
0xe7: V87 = CALLER
0xe9: V88 = 0x4d7c6d00
0xef: V89 = MUL V64 0x4d7c6d00
0xf1: V90 = ISZERO V79
0xf2: V91 = ISZERO V90
0xf3: V92 = 0xf8
0xf6: JUMPI 0xf8 V91
---
Entry stack: [V12, 0x235, V64]
Stack pops: 1
Stack additions: [S0, V85, 0xa9059cbb, V87, V79, V89]
Exit stack: [V12, 0x235, V64, V85, 0xa9059cbb, V87, V79, V89]

================================

Block 0xf7
[0xf7:0xf7]
---
Predecessors: [0xcf]
Successors: []
---
0xf7 INVALID
---
0xf7: INVALID 
---
Entry stack: [V12, 0x235, V64, V85, 0xa9059cbb, V87, V79, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, V64, V85, 0xa9059cbb, V87, V79, V89]

================================

Block 0xf8
[0xf8:0x145]
---
Predecessors: [0xcf]
Successors: [0x146, 0x147]
---
0xf8 JUMPDEST
0xf9 DIV
0xfa PUSH1 0x40
0xfc MLOAD
0xfd DUP4
0xfe PUSH4 0xffffffff
0x103 AND
0x104 PUSH1 0xe0
0x106 PUSH1 0x2
0x108 EXP
0x109 MUL
0x10a DUP2
0x10b MSTORE
0x10c PUSH1 0x4
0x10e ADD
0x10f DUP1
0x110 DUP4
0x111 PUSH1 0x1
0x113 PUSH1 0xa0
0x115 PUSH1 0x2
0x117 EXP
0x118 SUB
0x119 AND
0x11a PUSH1 0x1
0x11c PUSH1 0xa0
0x11e PUSH1 0x2
0x120 EXP
0x121 SUB
0x122 AND
0x123 DUP2
0x124 MSTORE
0x125 PUSH1 0x20
0x127 ADD
0x128 DUP3
0x129 DUP2
0x12a MSTORE
0x12b PUSH1 0x20
0x12d ADD
0x12e SWAP3
0x12f POP
0x130 POP
0x131 POP
0x132 PUSH1 0x0
0x134 PUSH1 0x40
0x136 MLOAD
0x137 DUP1
0x138 DUP4
0x139 SUB
0x13a DUP2
0x13b PUSH1 0x0
0x13d DUP8
0x13e DUP1
0x13f EXTCODESIZE
0x140 ISZERO
0x141 ISZERO
0x142 PUSH2 0x147
0x145 JUMPI
---
0xf8: JUMPDEST 
0xf9: V93 = DIV V89 V79
0xfa: V94 = 0x40
0xfc: V95 = M[0x40]
0xfe: V96 = 0xffffffff
0x103: V97 = AND 0xffffffff 0xa9059cbb
0x104: V98 = 0xe0
0x106: V99 = 0x2
0x108: V100 = EXP 0x2 0xe0
0x109: V101 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x10b: M[V95] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x10c: V102 = 0x4
0x10e: V103 = ADD 0x4 V95
0x111: V104 = 0x1
0x113: V105 = 0xa0
0x115: V106 = 0x2
0x117: V107 = EXP 0x2 0xa0
0x118: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x119: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x11a: V110 = 0x1
0x11c: V111 = 0xa0
0x11e: V112 = 0x2
0x120: V113 = EXP 0x2 0xa0
0x121: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x122: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x124: M[V103] = V115
0x125: V116 = 0x20
0x127: V117 = ADD 0x20 V103
0x12a: M[V117] = V93
0x12b: V118 = 0x20
0x12d: V119 = ADD 0x20 V117
0x132: V120 = 0x0
0x134: V121 = 0x40
0x136: V122 = M[0x40]
0x139: V123 = SUB V119 V122
0x13b: V124 = 0x0
0x13f: V125 = EXTCODESIZE V85
0x140: V126 = ISZERO V125
0x141: V127 = ISZERO V126
0x142: V128 = 0x147
0x145: JUMPI 0x147 V127
---
Entry stack: [V12, 0x235, V64, V85, 0xa9059cbb, V87, V79, V89]
Stack pops: 5
Stack additions: [S4, S3, V119, 0x0, V122, V123, V122, 0x0, S4]
Exit stack: [V12, 0x235, V64, V85, 0xa9059cbb, V119, 0x0, V122, V123, V122, 0x0, V85]

================================

Block 0x146
[0x146:0x146]
---
Predecessors: [0xf8]
Successors: []
---
0x146 INVALID
---
0x146: INVALID 
---
Entry stack: [V12, 0x235, V64, V85, 0xa9059cbb, V119, 0x0, V122, V123, V122, 0x0, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, V64, V85, 0xa9059cbb, V119, 0x0, V122, V123, V122, 0x0, V85]

================================

Block 0x147
[0x147:0x153]
---
Predecessors: [0xf8]
Successors: [0x154, 0x155]
---
0x147 JUMPDEST
0x148 PUSH2 0x2c6
0x14b GAS
0x14c SUB
0x14d CALL
0x14e ISZERO
0x14f ISZERO
0x150 PUSH2 0x155
0x153 JUMPI
---
0x147: JUMPDEST 
0x148: V129 = 0x2c6
0x14b: V130 = GAS
0x14c: V131 = SUB V130 0x2c6
0x14d: V132 = CALL V131 V85 0x0 V122 V123 V122 0x0
0x14e: V133 = ISZERO V132
0x14f: V134 = ISZERO V133
0x150: V135 = 0x155
0x153: JUMPI 0x155 V134
---
Entry stack: [V12, 0x235, V64, V85, 0xa9059cbb, V119, 0x0, V122, V123, V122, 0x0, V85]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x235, V64, V85, 0xa9059cbb, V119]

================================

Block 0x154
[0x154:0x154]
---
Predecessors: [0x147]
Successors: []
---
0x154 INVALID
---
0x154: INVALID 
---
Entry stack: [V12, 0x235, V64, V85, 0xa9059cbb, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, V64, V85, 0xa9059cbb, V119]

================================

Block 0x155
[0x155:0x15c]
---
Predecessors: [0x147]
Successors: [0x1e8]
---
0x155 JUMPDEST
0x156 POP
0x157 POP
0x158 POP
0x159 PUSH2 0x1e8
0x15c JUMP
---
0x155: JUMPDEST 
0x159: V136 = 0x1e8
0x15c: JUMP 0x1e8
---
Entry stack: [V12, 0x235, V64, V85, 0xa9059cbb, V119]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x235, V64]

================================

Block 0x15d
[0x15d:0x185]
---
Predecessors: [0x9a]
Successors: [0x186, 0x187]
---
0x15d JUMPDEST
0x15e PUSH1 0x5
0x160 SLOAD
0x161 PUSH1 0x4
0x163 SLOAD
0x164 PUSH1 0x1
0x166 PUSH1 0xa0
0x168 PUSH1 0x2
0x16a EXP
0x16b SUB
0x16c SWAP1
0x16d SWAP2
0x16e AND
0x16f SWAP1
0x170 PUSH4 0xa9059cbb
0x175 SWAP1
0x176 CALLER
0x177 SWAP1
0x178 PUSH4 0x3b9aca00
0x17d DUP6
0x17e MUL
0x17f DUP2
0x180 ISZERO
0x181 ISZERO
0x182 PUSH2 0x187
0x185 JUMPI
---
0x15d: JUMPDEST 
0x15e: V137 = 0x5
0x160: V138 = S[0x5]
0x161: V139 = 0x4
0x163: V140 = S[0x4]
0x164: V141 = 0x1
0x166: V142 = 0xa0
0x168: V143 = 0x2
0x16a: V144 = EXP 0x2 0xa0
0x16b: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16e: V146 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x170: V147 = 0xa9059cbb
0x176: V148 = CALLER
0x178: V149 = 0x3b9aca00
0x17e: V150 = MUL V64 0x3b9aca00
0x180: V151 = ISZERO V140
0x181: V152 = ISZERO V151
0x182: V153 = 0x187
0x185: JUMPI 0x187 V152
---
Entry stack: [V12, 0x235, V64]
Stack pops: 1
Stack additions: [S0, V146, 0xa9059cbb, V148, V140, V150]
Exit stack: [V12, 0x235, V64, V146, 0xa9059cbb, V148, V140, V150]

================================

Block 0x186
[0x186:0x186]
---
Predecessors: [0x15d]
Successors: []
---
0x186 INVALID
---
0x186: INVALID 
---
Entry stack: [V12, 0x235, V64, V146, 0xa9059cbb, V148, V140, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, V64, V146, 0xa9059cbb, V148, V140, V150]

================================

Block 0x187
[0x187:0x1d4]
---
Predecessors: [0x15d]
Successors: [0x1d5, 0x1d6]
---
0x187 JUMPDEST
0x188 DIV
0x189 PUSH1 0x40
0x18b MLOAD
0x18c DUP4
0x18d PUSH4 0xffffffff
0x192 AND
0x193 PUSH1 0xe0
0x195 PUSH1 0x2
0x197 EXP
0x198 MUL
0x199 DUP2
0x19a MSTORE
0x19b PUSH1 0x4
0x19d ADD
0x19e DUP1
0x19f DUP4
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0xa0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 SUB
0x1a8 AND
0x1a9 PUSH1 0x1
0x1ab PUSH1 0xa0
0x1ad PUSH1 0x2
0x1af EXP
0x1b0 SUB
0x1b1 AND
0x1b2 DUP2
0x1b3 MSTORE
0x1b4 PUSH1 0x20
0x1b6 ADD
0x1b7 DUP3
0x1b8 DUP2
0x1b9 MSTORE
0x1ba PUSH1 0x20
0x1bc ADD
0x1bd SWAP3
0x1be POP
0x1bf POP
0x1c0 POP
0x1c1 PUSH1 0x0
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 DUP4
0x1c8 SUB
0x1c9 DUP2
0x1ca PUSH1 0x0
0x1cc DUP8
0x1cd DUP1
0x1ce EXTCODESIZE
0x1cf ISZERO
0x1d0 ISZERO
0x1d1 PUSH2 0x1d6
0x1d4 JUMPI
---
0x187: JUMPDEST 
0x188: V154 = DIV V150 V140
0x189: V155 = 0x40
0x18b: V156 = M[0x40]
0x18d: V157 = 0xffffffff
0x192: V158 = AND 0xffffffff 0xa9059cbb
0x193: V159 = 0xe0
0x195: V160 = 0x2
0x197: V161 = EXP 0x2 0xe0
0x198: V162 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x19a: M[V156] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x19b: V163 = 0x4
0x19d: V164 = ADD 0x4 V156
0x1a0: V165 = 0x1
0x1a2: V166 = 0xa0
0x1a4: V167 = 0x2
0x1a6: V168 = EXP 0x2 0xa0
0x1a7: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a8: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x1a9: V171 = 0x1
0x1ab: V172 = 0xa0
0x1ad: V173 = 0x2
0x1af: V174 = EXP 0x2 0xa0
0x1b0: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b1: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x1b3: M[V164] = V176
0x1b4: V177 = 0x20
0x1b6: V178 = ADD 0x20 V164
0x1b9: M[V178] = V154
0x1ba: V179 = 0x20
0x1bc: V180 = ADD 0x20 V178
0x1c1: V181 = 0x0
0x1c3: V182 = 0x40
0x1c5: V183 = M[0x40]
0x1c8: V184 = SUB V180 V183
0x1ca: V185 = 0x0
0x1ce: V186 = EXTCODESIZE V146
0x1cf: V187 = ISZERO V186
0x1d0: V188 = ISZERO V187
0x1d1: V189 = 0x1d6
0x1d4: JUMPI 0x1d6 V188
---
Entry stack: [V12, 0x235, V64, V146, 0xa9059cbb, V148, V140, V150]
Stack pops: 5
Stack additions: [S4, S3, V180, 0x0, V183, V184, V183, 0x0, S4]
Exit stack: [V12, 0x235, V64, V146, 0xa9059cbb, V180, 0x0, V183, V184, V183, 0x0, V146]

================================

Block 0x1d5
[0x1d5:0x1d5]
---
Predecessors: [0x187]
Successors: []
---
0x1d5 INVALID
---
0x1d5: INVALID 
---
Entry stack: [V12, 0x235, V64, V146, 0xa9059cbb, V180, 0x0, V183, V184, V183, 0x0, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, V64, V146, 0xa9059cbb, V180, 0x0, V183, V184, V183, 0x0, V146]

================================

Block 0x1d6
[0x1d6:0x1e2]
---
Predecessors: [0x187]
Successors: [0x1e3, 0x1e4]
---
0x1d6 JUMPDEST
0x1d7 PUSH2 0x2c6
0x1da GAS
0x1db SUB
0x1dc CALL
0x1dd ISZERO
0x1de ISZERO
0x1df PUSH2 0x1e4
0x1e2 JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V190 = 0x2c6
0x1da: V191 = GAS
0x1db: V192 = SUB V191 0x2c6
0x1dc: V193 = CALL V192 V146 0x0 V183 V184 V183 0x0
0x1dd: V194 = ISZERO V193
0x1de: V195 = ISZERO V194
0x1df: V196 = 0x1e4
0x1e2: JUMPI 0x1e4 V195
---
Entry stack: [V12, 0x235, V64, V146, 0xa9059cbb, V180, 0x0, V183, V184, V183, 0x0, V146]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x235, V64, V146, 0xa9059cbb, V180]

================================

Block 0x1e3
[0x1e3:0x1e3]
---
Predecessors: [0x1d6]
Successors: []
---
0x1e3 INVALID
---
0x1e3: INVALID 
---
Entry stack: [V12, 0x235, V64, V146, 0xa9059cbb, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, V64, V146, 0xa9059cbb, V180]

================================

Block 0x1e4
[0x1e4:0x1e7]
---
Predecessors: [0x1d6]
Successors: [0x1e8]
---
0x1e4 JUMPDEST
0x1e5 POP
0x1e6 POP
0x1e7 POP
---
0x1e4: JUMPDEST 
---
Entry stack: [V12, 0x235, V64, V146, 0xa9059cbb, V180]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x235, V64]

================================

Block 0x1e8
[0x1e8:0x231]
---
Predecessors: [0x155, 0x1e4]
Successors: [0x232]
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x40
0x1eb DUP1
0x1ec MLOAD
0x1ed PUSH1 0x1
0x1ef PUSH1 0xa0
0x1f1 PUSH1 0x2
0x1f3 EXP
0x1f4 SUB
0x1f5 CALLER
0x1f6 AND
0x1f7 DUP2
0x1f8 MSTORE
0x1f9 PUSH1 0x20
0x1fb DUP2
0x1fc ADD
0x1fd DUP4
0x1fe SWAP1
0x1ff MSTORE
0x200 PUSH1 0x1
0x202 DUP2
0x203 DUP4
0x204 ADD
0x205 MSTORE
0x206 SWAP1
0x207 MLOAD
0x208 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x229 SWAP2
0x22a DUP2
0x22b SWAP1
0x22c SUB
0x22d PUSH1 0x60
0x22f ADD
0x230 SWAP1
0x231 LOG1
---
0x1e8: JUMPDEST 
0x1e9: V197 = 0x40
0x1ec: V198 = M[0x40]
0x1ed: V199 = 0x1
0x1ef: V200 = 0xa0
0x1f1: V201 = 0x2
0x1f3: V202 = EXP 0x2 0xa0
0x1f4: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f5: V204 = CALLER
0x1f6: V205 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: M[V198] = V205
0x1f9: V206 = 0x20
0x1fc: V207 = ADD V198 0x20
0x1ff: M[V207] = V64
0x200: V208 = 0x1
0x204: V209 = ADD 0x40 V198
0x205: M[V209] = 0x1
0x207: V210 = M[0x40]
0x208: V211 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x22c: V212 = SUB V198 V210
0x22d: V213 = 0x60
0x22f: V214 = ADD 0x60 V212
0x231: LOG V210 V214 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V12, 0x235, V64]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x235, V64]

================================

Block 0x232
[0x232:0x234]
---
Predecessors: [0x1e8, 0x426, 0x51b, 0x550]
Successors: [0x235]
---
0x232 JUMPDEST
0x233 POP
0x234 JUMP
---
0x232: JUMPDEST 
0x234: JUMP 0x235
---
Entry stack: [V12, 0x235, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x235
[0x235:0x236]
---
Predecessors: [0x232, 0x3dc, 0x5b6]
Successors: []
---
0x235 JUMPDEST
0x236 STOP
---
0x235: JUMPDEST 
0x236: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x237
[0x237:0x23d]
---
Predecessors: [0xb]
Successors: [0x23e, 0x23f]
---
0x237 JUMPDEST
0x238 CALLVALUE
0x239 ISZERO
0x23a PUSH2 0x23f
0x23d JUMPI
---
0x237: JUMPDEST 
0x238: V215 = CALLVALUE
0x239: V216 = ISZERO V215
0x23a: V217 = 0x23f
0x23d: JUMPI 0x23f V216
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23e
[0x23e:0x23e]
---
Predecessors: [0x237]
Successors: []
---
0x23e INVALID
---
0x23e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23f
[0x23f:0x246]
---
Predecessors: [0x237]
Successors: [0x369]
---
0x23f JUMPDEST
0x240 PUSH2 0x235
0x243 PUSH2 0x369
0x246 JUMP
---
0x23f: JUMPDEST 
0x240: V218 = 0x235
0x243: V219 = 0x369
0x246: JUMP 0x369
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x235]
Exit stack: [V12, 0x235]

================================

Block 0x247
[0x247:0x248]
---
Predecessors: []
Successors: []
---
0x247 JUMPDEST
0x248 STOP
---
0x247: JUMPDEST 
0x248: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x249
[0x249:0x24f]
---
Predecessors: [0x25]
Successors: [0x250, 0x251]
---
0x249 JUMPDEST
0x24a CALLVALUE
0x24b ISZERO
0x24c PUSH2 0x251
0x24f JUMPI
---
0x249: JUMPDEST 
0x24a: V220 = CALLVALUE
0x24b: V221 = ISZERO V220
0x24c: V222 = 0x251
0x24f: JUMPI 0x251 V221
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x250
[0x250:0x250]
---
Predecessors: [0x249]
Successors: []
---
0x250 INVALID
---
0x250: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x251
[0x251:0x258]
---
Predecessors: [0x249]
Successors: [0x3de]
---
0x251 JUMPDEST
0x252 PUSH2 0x259
0x255 PUSH2 0x3de
0x258 JUMP
---
0x251: JUMPDEST 
0x252: V223 = 0x259
0x255: V224 = 0x3de
0x258: JUMP 0x3de
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x259]
Exit stack: [V12, 0x259]

================================

Block 0x259
[0x259:0x26a]
---
Predecessors: [0x3de, 0x402, 0x414, 0x41a, 0x420]
Successors: []
---
0x259 JUMPDEST
0x25a PUSH1 0x40
0x25c DUP1
0x25d MLOAD
0x25e SWAP2
0x25f DUP3
0x260 MSTORE
0x261 MLOAD
0x262 SWAP1
0x263 DUP2
0x264 SWAP1
0x265 SUB
0x266 PUSH1 0x20
0x268 ADD
0x269 SWAP1
0x26a RETURN
---
0x259: JUMPDEST 
0x25a: V225 = 0x40
0x25d: V226 = M[0x40]
0x260: M[V226] = S0
0x261: V227 = M[0x40]
0x265: V228 = SUB V226 V227
0x266: V229 = 0x20
0x268: V230 = ADD 0x20 V228
0x26a: RETURN V227 V230
---
Entry stack: [V12, 0x259, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x259]

================================

Block 0x26b
[0x26b:0x271]
---
Predecessors: [0x30]
Successors: [0x272, 0x273]
---
0x26b JUMPDEST
0x26c CALLVALUE
0x26d ISZERO
0x26e PUSH2 0x273
0x271 JUMPI
---
0x26b: JUMPDEST 
0x26c: V231 = CALLVALUE
0x26d: V232 = ISZERO V231
0x26e: V233 = 0x273
0x271: JUMPI 0x273 V232
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x272
[0x272:0x272]
---
Predecessors: [0x26b]
Successors: []
---
0x272 INVALID
---
0x272: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x273
[0x273:0x27a]
---
Predecessors: [0x26b]
Successors: [0x3e4]
---
0x273 JUMPDEST
0x274 PUSH2 0x27b
0x277 PUSH2 0x3e4
0x27a JUMP
---
0x273: JUMPDEST 
0x274: V234 = 0x27b
0x277: V235 = 0x3e4
0x27a: JUMP 0x3e4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27b]
Exit stack: [V12, 0x27b]

================================

Block 0x27b
[0x27b:0x296]
---
Predecessors: [0x3e4, 0x3f3]
Successors: []
---
0x27b JUMPDEST
0x27c PUSH1 0x40
0x27e DUP1
0x27f MLOAD
0x280 PUSH1 0x1
0x282 PUSH1 0xa0
0x284 PUSH1 0x2
0x286 EXP
0x287 SUB
0x288 SWAP1
0x289 SWAP3
0x28a AND
0x28b DUP3
0x28c MSTORE
0x28d MLOAD
0x28e SWAP1
0x28f DUP2
0x290 SWAP1
0x291 SUB
0x292 PUSH1 0x20
0x294 ADD
0x295 SWAP1
0x296 RETURN
---
0x27b: JUMPDEST 
0x27c: V236 = 0x40
0x27f: V237 = M[0x40]
0x280: V238 = 0x1
0x282: V239 = 0xa0
0x284: V240 = 0x2
0x286: V241 = EXP 0x2 0xa0
0x287: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28a: V243 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x28c: M[V237] = V243
0x28d: V244 = M[0x40]
0x291: V245 = SUB V237 V244
0x292: V246 = 0x20
0x294: V247 = ADD 0x20 V245
0x296: RETURN V244 V247
---
Entry stack: [V12, 0x27b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x27b]

================================

Block 0x297
[0x297:0x29d]
---
Predecessors: [0x3b]
Successors: [0x29e, 0x29f]
---
0x297 JUMPDEST
0x298 CALLVALUE
0x299 ISZERO
0x29a PUSH2 0x29f
0x29d JUMPI
---
0x297: JUMPDEST 
0x298: V248 = CALLVALUE
0x299: V249 = ISZERO V248
0x29a: V250 = 0x29f
0x29d: JUMPI 0x29f V249
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29e
[0x29e:0x29e]
---
Predecessors: [0x297]
Successors: []
---
0x29e INVALID
---
0x29e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29f
[0x29f:0x2a6]
---
Predecessors: [0x297]
Successors: [0x3f3]
---
0x29f JUMPDEST
0x2a0 PUSH2 0x27b
0x2a3 PUSH2 0x3f3
0x2a6 JUMP
---
0x29f: JUMPDEST 
0x2a0: V251 = 0x27b
0x2a3: V252 = 0x3f3
0x2a6: JUMP 0x3f3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27b]
Exit stack: [V12, 0x27b]

================================

Block 0x2a7
[0x2a7:0x2c2]
---
Predecessors: []
Successors: []
---
0x2a7 JUMPDEST
0x2a8 PUSH1 0x40
0x2aa DUP1
0x2ab MLOAD
0x2ac PUSH1 0x1
0x2ae PUSH1 0xa0
0x2b0 PUSH1 0x2
0x2b2 EXP
0x2b3 SUB
0x2b4 SWAP1
0x2b5 SWAP3
0x2b6 AND
0x2b7 DUP3
0x2b8 MSTORE
0x2b9 MLOAD
0x2ba SWAP1
0x2bb DUP2
0x2bc SWAP1
0x2bd SUB
0x2be PUSH1 0x20
0x2c0 ADD
0x2c1 SWAP1
0x2c2 RETURN
---
0x2a7: JUMPDEST 
0x2a8: V253 = 0x40
0x2ab: V254 = M[0x40]
0x2ac: V255 = 0x1
0x2ae: V256 = 0xa0
0x2b0: V257 = 0x2
0x2b2: V258 = EXP 0x2 0xa0
0x2b3: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b6: V260 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2b8: M[V254] = V260
0x2b9: V261 = M[0x40]
0x2bd: V262 = SUB V254 V261
0x2be: V263 = 0x20
0x2c0: V264 = ADD 0x20 V262
0x2c2: RETURN V261 V264
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c3
[0x2c3:0x2c9]
---
Predecessors: [0x46]
Successors: [0x2ca, 0x2cb]
---
0x2c3 JUMPDEST
0x2c4 CALLVALUE
0x2c5 ISZERO
0x2c6 PUSH2 0x2cb
0x2c9 JUMPI
---
0x2c3: JUMPDEST 
0x2c4: V265 = CALLVALUE
0x2c5: V266 = ISZERO V265
0x2c6: V267 = 0x2cb
0x2c9: JUMPI 0x2cb V266
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ca
[0x2ca:0x2ca]
---
Predecessors: [0x2c3]
Successors: []
---
0x2ca INVALID
---
0x2ca: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2cb
[0x2cb:0x2de]
---
Predecessors: [0x2c3]
Successors: [0x402]
---
0x2cb JUMPDEST
0x2cc PUSH2 0x259
0x2cf PUSH1 0x1
0x2d1 PUSH1 0xa0
0x2d3 PUSH1 0x2
0x2d5 EXP
0x2d6 SUB
0x2d7 PUSH1 0x4
0x2d9 CALLDATALOAD
0x2da AND
0x2db PUSH2 0x402
0x2de JUMP
---
0x2cb: JUMPDEST 
0x2cc: V268 = 0x259
0x2cf: V269 = 0x1
0x2d1: V270 = 0xa0
0x2d3: V271 = 0x2
0x2d5: V272 = EXP 0x2 0xa0
0x2d6: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d7: V274 = 0x4
0x2d9: V275 = CALLDATALOAD 0x4
0x2da: V276 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V277 = 0x402
0x2de: JUMP 0x402
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x259, V276]
Exit stack: [V12, 0x259, V276]

================================

Block 0x2df
[0x2df:0x2f0]
---
Predecessors: []
Successors: []
---
0x2df JUMPDEST
0x2e0 PUSH1 0x40
0x2e2 DUP1
0x2e3 MLOAD
0x2e4 SWAP2
0x2e5 DUP3
0x2e6 MSTORE
0x2e7 MLOAD
0x2e8 SWAP1
0x2e9 DUP2
0x2ea SWAP1
0x2eb SUB
0x2ec PUSH1 0x20
0x2ee ADD
0x2ef SWAP1
0x2f0 RETURN
---
0x2df: JUMPDEST 
0x2e0: V278 = 0x40
0x2e3: V279 = M[0x40]
0x2e6: M[V279] = S0
0x2e7: V280 = M[0x40]
0x2eb: V281 = SUB V279 V280
0x2ec: V282 = 0x20
0x2ee: V283 = ADD 0x20 V281
0x2f0: RETURN V280 V283
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f1
[0x2f1:0x2f7]
---
Predecessors: [0x51]
Successors: [0x2f8, 0x2f9]
---
0x2f1 JUMPDEST
0x2f2 CALLVALUE
0x2f3 ISZERO
0x2f4 PUSH2 0x2f9
0x2f7 JUMPI
---
0x2f1: JUMPDEST 
0x2f2: V284 = CALLVALUE
0x2f3: V285 = ISZERO V284
0x2f4: V286 = 0x2f9
0x2f7: JUMPI 0x2f9 V285
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f8
[0x2f8:0x2f8]
---
Predecessors: [0x2f1]
Successors: []
---
0x2f8 INVALID
---
0x2f8: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f9
[0x2f9:0x300]
---
Predecessors: [0x2f1]
Successors: [0x414]
---
0x2f9 JUMPDEST
0x2fa PUSH2 0x259
0x2fd PUSH2 0x414
0x300 JUMP
---
0x2f9: JUMPDEST 
0x2fa: V287 = 0x259
0x2fd: V288 = 0x414
0x300: JUMP 0x414
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x259]
Exit stack: [V12, 0x259]

================================

Block 0x301
[0x301:0x312]
---
Predecessors: []
Successors: []
---
0x301 JUMPDEST
0x302 PUSH1 0x40
0x304 DUP1
0x305 MLOAD
0x306 SWAP2
0x307 DUP3
0x308 MSTORE
0x309 MLOAD
0x30a SWAP1
0x30b DUP2
0x30c SWAP1
0x30d SUB
0x30e PUSH1 0x20
0x310 ADD
0x311 SWAP1
0x312 RETURN
---
0x301: JUMPDEST 
0x302: V289 = 0x40
0x305: V290 = M[0x40]
0x308: M[V290] = S0
0x309: V291 = M[0x40]
0x30d: V292 = SUB V290 V291
0x30e: V293 = 0x20
0x310: V294 = ADD 0x20 V292
0x312: RETURN V291 V294
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x313
[0x313:0x319]
---
Predecessors: [0x5c]
Successors: [0x31a, 0x31b]
---
0x313 JUMPDEST
0x314 CALLVALUE
0x315 ISZERO
0x316 PUSH2 0x31b
0x319 JUMPI
---
0x313: JUMPDEST 
0x314: V295 = CALLVALUE
0x315: V296 = ISZERO V295
0x316: V297 = 0x31b
0x319: JUMPI 0x31b V296
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31a
[0x31a:0x31a]
---
Predecessors: [0x313]
Successors: []
---
0x31a INVALID
---
0x31a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31b
[0x31b:0x322]
---
Predecessors: [0x313]
Successors: [0x41a]
---
0x31b JUMPDEST
0x31c PUSH2 0x259
0x31f PUSH2 0x41a
0x322 JUMP
---
0x31b: JUMPDEST 
0x31c: V298 = 0x259
0x31f: V299 = 0x41a
0x322: JUMP 0x41a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x259]
Exit stack: [V12, 0x259]

================================

Block 0x323
[0x323:0x334]
---
Predecessors: []
Successors: []
---
0x323 JUMPDEST
0x324 PUSH1 0x40
0x326 DUP1
0x327 MLOAD
0x328 SWAP2
0x329 DUP3
0x32a MSTORE
0x32b MLOAD
0x32c SWAP1
0x32d DUP2
0x32e SWAP1
0x32f SUB
0x330 PUSH1 0x20
0x332 ADD
0x333 SWAP1
0x334 RETURN
---
0x323: JUMPDEST 
0x324: V300 = 0x40
0x327: V301 = M[0x40]
0x32a: M[V301] = S0
0x32b: V302 = M[0x40]
0x32f: V303 = SUB V301 V302
0x330: V304 = 0x20
0x332: V305 = ADD 0x20 V303
0x334: RETURN V302 V305
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x335
[0x335:0x33b]
---
Predecessors: [0x67]
Successors: [0x33c, 0x33d]
---
0x335 JUMPDEST
0x336 CALLVALUE
0x337 ISZERO
0x338 PUSH2 0x33d
0x33b JUMPI
---
0x335: JUMPDEST 
0x336: V306 = CALLVALUE
0x337: V307 = ISZERO V306
0x338: V308 = 0x33d
0x33b: JUMPI 0x33d V307
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33c
[0x33c:0x33c]
---
Predecessors: [0x335]
Successors: []
---
0x33c INVALID
---
0x33c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33d
[0x33d:0x344]
---
Predecessors: [0x335]
Successors: [0x420]
---
0x33d JUMPDEST
0x33e PUSH2 0x259
0x341 PUSH2 0x420
0x344 JUMP
---
0x33d: JUMPDEST 
0x33e: V309 = 0x259
0x341: V310 = 0x420
0x344: JUMP 0x420
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x259]
Exit stack: [V12, 0x259]

================================

Block 0x345
[0x345:0x356]
---
Predecessors: []
Successors: []
---
0x345 JUMPDEST
0x346 PUSH1 0x40
0x348 DUP1
0x349 MLOAD
0x34a SWAP2
0x34b DUP3
0x34c MSTORE
0x34d MLOAD
0x34e SWAP1
0x34f DUP2
0x350 SWAP1
0x351 SUB
0x352 PUSH1 0x20
0x354 ADD
0x355 SWAP1
0x356 RETURN
---
0x345: JUMPDEST 
0x346: V311 = 0x40
0x349: V312 = M[0x40]
0x34c: M[V312] = S0
0x34d: V313 = M[0x40]
0x351: V314 = SUB V312 V313
0x352: V315 = 0x20
0x354: V316 = ADD 0x20 V314
0x356: RETURN V313 V316
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x357
[0x357:0x35d]
---
Predecessors: [0x72]
Successors: [0x35e, 0x35f]
---
0x357 JUMPDEST
0x358 CALLVALUE
0x359 ISZERO
0x35a PUSH2 0x35f
0x35d JUMPI
---
0x357: JUMPDEST 
0x358: V317 = CALLVALUE
0x359: V318 = ISZERO V317
0x35a: V319 = 0x35f
0x35d: JUMPI 0x35f V318
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35e
[0x35e:0x35e]
---
Predecessors: [0x357]
Successors: []
---
0x35e INVALID
---
0x35e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35f
[0x35f:0x366]
---
Predecessors: [0x357]
Successors: [0x426]
---
0x35f JUMPDEST
0x360 PUSH2 0x235
0x363 PUSH2 0x426
0x366 JUMP
---
0x35f: JUMPDEST 
0x360: V320 = 0x235
0x363: V321 = 0x426
0x366: JUMP 0x426
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x235]
Exit stack: [V12, 0x235]

================================

Block 0x367
[0x367:0x368]
---
Predecessors: []
Successors: []
---
0x367 JUMPDEST
0x368 STOP
---
0x367: JUMPDEST 
0x368: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x369
[0x369:0x372]
---
Predecessors: [0x23f]
Successors: [0x373, 0x3da]
---
0x369 JUMPDEST
0x36a PUSH1 0x3
0x36c SLOAD
0x36d TIMESTAMP
0x36e LT
0x36f PUSH2 0x3da
0x372 JUMPI
---
0x369: JUMPDEST 
0x36a: V322 = 0x3
0x36c: V323 = S[0x3]
0x36d: V324 = TIMESTAMP
0x36e: V325 = LT V324 V323
0x36f: V326 = 0x3da
0x372: JUMPI 0x3da V325
---
Entry stack: [V12, 0x235]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235]

================================

Block 0x373
[0x373:0x3d9]
---
Predecessors: [0x369]
Successors: [0x3da]
---
0x373 PUSH1 0x7
0x375 DUP1
0x376 SLOAD
0x377 PUSH1 0xff
0x379 NOT
0x37a AND
0x37b PUSH1 0x1
0x37d OR
0x37e SWAP1
0x37f SSTORE
0x380 PUSH1 0x0
0x382 SLOAD
0x383 PUSH1 0x2
0x385 SLOAD
0x386 PUSH1 0x40
0x388 DUP1
0x389 MLOAD
0x38a PUSH1 0x1
0x38c PUSH1 0xa0
0x38e PUSH1 0x2
0x390 EXP
0x391 SUB
0x392 SWAP1
0x393 SWAP4
0x394 AND
0x395 DUP4
0x396 MSTORE
0x397 PUSH1 0x20
0x399 DUP4
0x39a ADD
0x39b SWAP2
0x39c SWAP1
0x39d SWAP2
0x39e MSTORE
0x39f DUP1
0x3a0 MLOAD
0x3a1 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x3c2 SWAP3
0x3c3 DUP2
0x3c4 SWAP1
0x3c5 SUB
0x3c6 SWAP1
0x3c7 SWAP2
0x3c8 ADD
0x3c9 SWAP1
0x3ca LOG1
0x3cb PUSH1 0x7
0x3cd DUP1
0x3ce SLOAD
0x3cf PUSH2 0xff00
0x3d2 NOT
0x3d3 AND
0x3d4 PUSH2 0x100
0x3d7 OR
0x3d8 SWAP1
0x3d9 SSTORE
---
0x373: V327 = 0x7
0x376: V328 = S[0x7]
0x377: V329 = 0xff
0x379: V330 = NOT 0xff
0x37a: V331 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V328
0x37b: V332 = 0x1
0x37d: V333 = OR 0x1 V331
0x37f: S[0x7] = V333
0x380: V334 = 0x0
0x382: V335 = S[0x0]
0x383: V336 = 0x2
0x385: V337 = S[0x2]
0x386: V338 = 0x40
0x389: V339 = M[0x40]
0x38a: V340 = 0x1
0x38c: V341 = 0xa0
0x38e: V342 = 0x2
0x390: V343 = EXP 0x2 0xa0
0x391: V344 = SUB 0x10000000000000000000000000000000000000000 0x1
0x394: V345 = AND V335 0xffffffffffffffffffffffffffffffffffffffff
0x396: M[V339] = V345
0x397: V346 = 0x20
0x39a: V347 = ADD V339 0x20
0x39e: M[V347] = V337
0x3a0: V348 = M[0x40]
0x3a1: V349 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x3c5: V350 = SUB V339 V348
0x3c8: V351 = ADD 0x40 V350
0x3ca: LOG V348 V351 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x3cb: V352 = 0x7
0x3ce: V353 = S[0x7]
0x3cf: V354 = 0xff00
0x3d2: V355 = NOT 0xff00
0x3d3: V356 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V353
0x3d4: V357 = 0x100
0x3d7: V358 = OR 0x100 V356
0x3d9: S[0x7] = V358
---
Entry stack: [V12, 0x235]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235]

================================

Block 0x3da
[0x3da:0x3da]
---
Predecessors: [0x369, 0x373]
Successors: [0x3db]
---
0x3da JUMPDEST
---
0x3da: JUMPDEST 
---
Entry stack: [V12, 0x235]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235]

================================

Block 0x3db
[0x3db:0x3db]
---
Predecessors: [0x3da]
Successors: [0x3dc]
---
0x3db JUMPDEST
---
0x3db: JUMPDEST 
---
Entry stack: [V12, 0x235]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235]

================================

Block 0x3dc
[0x3dc:0x3dd]
---
Predecessors: [0x3db]
Successors: [0x235]
---
0x3dc JUMPDEST
0x3dd JUMP
---
0x3dc: JUMPDEST 
0x3dd: JUMP 0x235
---
Entry stack: [V12, 0x235]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x3de
[0x3de:0x3e3]
---
Predecessors: [0x251]
Successors: [0x259]
---
0x3de JUMPDEST
0x3df PUSH1 0x3
0x3e1 SLOAD
0x3e2 DUP2
0x3e3 JUMP
---
0x3de: JUMPDEST 
0x3df: V359 = 0x3
0x3e1: V360 = S[0x3]
0x3e3: JUMP 0x259
---
Entry stack: [V12, 0x259]
Stack pops: 1
Stack additions: [S0, V360]
Exit stack: [V12, 0x259, V360]

================================

Block 0x3e4
[0x3e4:0x3f2]
---
Predecessors: [0x273]
Successors: [0x27b]
---
0x3e4 JUMPDEST
0x3e5 PUSH1 0x0
0x3e7 SLOAD
0x3e8 PUSH1 0x1
0x3ea PUSH1 0xa0
0x3ec PUSH1 0x2
0x3ee EXP
0x3ef SUB
0x3f0 AND
0x3f1 DUP2
0x3f2 JUMP
---
0x3e4: JUMPDEST 
0x3e5: V361 = 0x0
0x3e7: V362 = S[0x0]
0x3e8: V363 = 0x1
0x3ea: V364 = 0xa0
0x3ec: V365 = 0x2
0x3ee: V366 = EXP 0x2 0xa0
0x3ef: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f0: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x3f2: JUMP 0x27b
---
Entry stack: [V12, 0x27b]
Stack pops: 1
Stack additions: [S0, V368]
Exit stack: [V12, 0x27b, V368]

================================

Block 0x3f3
[0x3f3:0x401]
---
Predecessors: [0x29f]
Successors: [0x27b]
---
0x3f3 JUMPDEST
0x3f4 PUSH1 0x5
0x3f6 SLOAD
0x3f7 PUSH1 0x1
0x3f9 PUSH1 0xa0
0x3fb PUSH1 0x2
0x3fd EXP
0x3fe SUB
0x3ff AND
0x400 DUP2
0x401 JUMP
---
0x3f3: JUMPDEST 
0x3f4: V369 = 0x5
0x3f6: V370 = S[0x5]
0x3f7: V371 = 0x1
0x3f9: V372 = 0xa0
0x3fb: V373 = 0x2
0x3fd: V374 = EXP 0x2 0xa0
0x3fe: V375 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ff: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x401: JUMP 0x27b
---
Entry stack: [V12, 0x27b]
Stack pops: 1
Stack additions: [S0, V376]
Exit stack: [V12, 0x27b, V376]

================================

Block 0x402
[0x402:0x413]
---
Predecessors: [0x2cb]
Successors: [0x259]
---
0x402 JUMPDEST
0x403 PUSH1 0x6
0x405 PUSH1 0x20
0x407 MSTORE
0x408 PUSH1 0x0
0x40a SWAP1
0x40b DUP2
0x40c MSTORE
0x40d PUSH1 0x40
0x40f SWAP1
0x410 SHA3
0x411 SLOAD
0x412 DUP2
0x413 JUMP
---
0x402: JUMPDEST 
0x403: V377 = 0x6
0x405: V378 = 0x20
0x407: M[0x20] = 0x6
0x408: V379 = 0x0
0x40c: M[0x0] = V276
0x40d: V380 = 0x40
0x410: V381 = SHA3 0x0 0x40
0x411: V382 = S[V381]
0x413: JUMP 0x259
---
Entry stack: [V12, 0x259, V276]
Stack pops: 2
Stack additions: [S1, V382]
Exit stack: [V12, 0x259, V382]

================================

Block 0x414
[0x414:0x419]
---
Predecessors: [0x2f9]
Successors: [0x259]
---
0x414 JUMPDEST
0x415 PUSH1 0x1
0x417 SLOAD
0x418 DUP2
0x419 JUMP
---
0x414: JUMPDEST 
0x415: V383 = 0x1
0x417: V384 = S[0x1]
0x419: JUMP 0x259
---
Entry stack: [V12, 0x259]
Stack pops: 1
Stack additions: [S0, V384]
Exit stack: [V12, 0x259, V384]

================================

Block 0x41a
[0x41a:0x41f]
---
Predecessors: [0x31b]
Successors: [0x259]
---
0x41a JUMPDEST
0x41b PUSH1 0x2
0x41d SLOAD
0x41e DUP2
0x41f JUMP
---
0x41a: JUMPDEST 
0x41b: V385 = 0x2
0x41d: V386 = S[0x2]
0x41f: JUMP 0x259
---
Entry stack: [V12, 0x259]
Stack pops: 1
Stack additions: [S0, V386]
Exit stack: [V12, 0x259, V386]

================================

Block 0x420
[0x420:0x425]
---
Predecessors: [0x33d]
Successors: [0x259]
---
0x420 JUMPDEST
0x421 PUSH1 0x4
0x423 SLOAD
0x424 DUP2
0x425 JUMP
---
0x420: JUMPDEST 
0x421: V387 = 0x4
0x423: V388 = S[0x4]
0x425: JUMP 0x259
---
Entry stack: [V12, 0x259]
Stack pops: 1
Stack additions: [S0, V388]
Exit stack: [V12, 0x259, V388]

================================

Block 0x426
[0x426:0x432]
---
Predecessors: [0x35f]
Successors: [0x232, 0x433]
---
0x426 JUMPDEST
0x427 PUSH1 0x3
0x429 SLOAD
0x42a PUSH1 0x0
0x42c SWAP1
0x42d TIMESTAMP
0x42e LT
0x42f PUSH2 0x232
0x432 JUMPI
---
0x426: JUMPDEST 
0x427: V389 = 0x3
0x429: V390 = S[0x3]
0x42a: V391 = 0x0
0x42d: V392 = TIMESTAMP
0x42e: V393 = LT V392 V390
0x42f: V394 = 0x232
0x432: JUMPI 0x232 V393
---
Entry stack: [V12, 0x235]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x235, 0x0]

================================

Block 0x433
[0x433:0x43e]
---
Predecessors: [0x426]
Successors: [0x43f, 0x4f9]
---
0x433 PUSH1 0x7
0x435 SLOAD
0x436 PUSH1 0xff
0x438 AND
0x439 ISZERO
0x43a ISZERO
0x43b PUSH2 0x4f9
0x43e JUMPI
---
0x433: V395 = 0x7
0x435: V396 = S[0x7]
0x436: V397 = 0xff
0x438: V398 = AND 0xff V396
0x439: V399 = ISZERO V398
0x43a: V400 = ISZERO V399
0x43b: V401 = 0x4f9
0x43e: JUMPI 0x4f9 V400
---
Entry stack: [V12, 0x235, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, 0x0]

================================

Block 0x43f
[0x43f:0x465]
---
Predecessors: [0x433]
Successors: [0x466, 0x4f9]
---
0x43f POP
0x440 PUSH1 0x1
0x442 PUSH1 0xa0
0x444 PUSH1 0x2
0x446 EXP
0x447 SUB
0x448 CALLER
0x449 AND
0x44a PUSH1 0x0
0x44c SWAP1
0x44d DUP2
0x44e MSTORE
0x44f PUSH1 0x6
0x451 PUSH1 0x20
0x453 MSTORE
0x454 PUSH1 0x40
0x456 DUP2
0x457 SHA3
0x458 DUP1
0x459 SLOAD
0x45a SWAP1
0x45b DUP3
0x45c SWAP1
0x45d SSTORE
0x45e SWAP1
0x45f DUP2
0x460 GT
0x461 ISZERO
0x462 PUSH2 0x4f9
0x465 JUMPI
---
0x440: V402 = 0x1
0x442: V403 = 0xa0
0x444: V404 = 0x2
0x446: V405 = EXP 0x2 0xa0
0x447: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x448: V407 = CALLER
0x449: V408 = AND V407 0xffffffffffffffffffffffffffffffffffffffff
0x44a: V409 = 0x0
0x44e: M[0x0] = V408
0x44f: V410 = 0x6
0x451: V411 = 0x20
0x453: M[0x20] = 0x6
0x454: V412 = 0x40
0x457: V413 = SHA3 0x0 0x40
0x459: V414 = S[V413]
0x45d: S[V413] = 0x0
0x460: V415 = GT V414 0x0
0x461: V416 = ISZERO V415
0x462: V417 = 0x4f9
0x465: JUMPI 0x4f9 V416
---
Entry stack: [V12, 0x235, 0x0]
Stack pops: 1
Stack additions: [V414]
Exit stack: [V12, 0x235, V414]

================================

Block 0x466
[0x466:0x48f]
---
Predecessors: [0x43f]
Successors: [0x490, 0x4dd]
---
0x466 PUSH1 0x40
0x468 MLOAD
0x469 PUSH1 0x1
0x46b PUSH1 0xa0
0x46d PUSH1 0x2
0x46f EXP
0x470 SUB
0x471 CALLER
0x472 AND
0x473 SWAP1
0x474 DUP3
0x475 ISZERO
0x476 PUSH2 0x8fc
0x479 MUL
0x47a SWAP1
0x47b DUP4
0x47c SWAP1
0x47d PUSH1 0x0
0x47f DUP2
0x480 DUP2
0x481 DUP2
0x482 DUP6
0x483 DUP9
0x484 DUP9
0x485 CALL
0x486 SWAP4
0x487 POP
0x488 POP
0x489 POP
0x48a POP
0x48b ISZERO
0x48c PUSH2 0x4dd
0x48f JUMPI
---
0x466: V418 = 0x40
0x468: V419 = M[0x40]
0x469: V420 = 0x1
0x46b: V421 = 0xa0
0x46d: V422 = 0x2
0x46f: V423 = EXP 0x2 0xa0
0x470: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x471: V425 = CALLER
0x472: V426 = AND V425 0xffffffffffffffffffffffffffffffffffffffff
0x475: V427 = ISZERO V414
0x476: V428 = 0x8fc
0x479: V429 = MUL 0x8fc V427
0x47d: V430 = 0x0
0x485: V431 = CALL V429 V426 V414 V419 0x0 V419 0x0
0x48b: V432 = ISZERO V431
0x48c: V433 = 0x4dd
0x48f: JUMPI 0x4dd V432
---
Entry stack: [V12, 0x235, V414]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x235, V414]

================================

Block 0x490
[0x490:0x4dc]
---
Predecessors: [0x466]
Successors: [0x4f9]
---
0x490 PUSH1 0x40
0x492 DUP1
0x493 MLOAD
0x494 PUSH1 0x1
0x496 PUSH1 0xa0
0x498 PUSH1 0x2
0x49a EXP
0x49b SUB
0x49c CALLER
0x49d AND
0x49e DUP2
0x49f MSTORE
0x4a0 PUSH1 0x20
0x4a2 DUP2
0x4a3 ADD
0x4a4 DUP4
0x4a5 SWAP1
0x4a6 MSTORE
0x4a7 PUSH1 0x0
0x4a9 DUP2
0x4aa DUP4
0x4ab ADD
0x4ac MSTORE
0x4ad SWAP1
0x4ae MLOAD
0x4af PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4d0 SWAP2
0x4d1 DUP2
0x4d2 SWAP1
0x4d3 SUB
0x4d4 PUSH1 0x60
0x4d6 ADD
0x4d7 SWAP1
0x4d8 LOG1
0x4d9 PUSH2 0x4f9
0x4dc JUMP
---
0x490: V434 = 0x40
0x493: V435 = M[0x40]
0x494: V436 = 0x1
0x496: V437 = 0xa0
0x498: V438 = 0x2
0x49a: V439 = EXP 0x2 0xa0
0x49b: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49c: V441 = CALLER
0x49d: V442 = AND V441 0xffffffffffffffffffffffffffffffffffffffff
0x49f: M[V435] = V442
0x4a0: V443 = 0x20
0x4a3: V444 = ADD V435 0x20
0x4a6: M[V444] = V414
0x4a7: V445 = 0x0
0x4ab: V446 = ADD 0x40 V435
0x4ac: M[V446] = 0x0
0x4ae: V447 = M[0x40]
0x4af: V448 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4d3: V449 = SUB V435 V447
0x4d4: V450 = 0x60
0x4d6: V451 = ADD 0x60 V449
0x4d8: LOG V447 V451 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x4d9: V452 = 0x4f9
0x4dc: JUMP 0x4f9
---
Entry stack: [V12, 0x235, V414]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x235, V414]

================================

Block 0x4dd
[0x4dd:0x4f8]
---
Predecessors: [0x466]
Successors: [0x4f9]
---
0x4dd JUMPDEST
0x4de PUSH1 0x1
0x4e0 PUSH1 0xa0
0x4e2 PUSH1 0x2
0x4e4 EXP
0x4e5 SUB
0x4e6 CALLER
0x4e7 AND
0x4e8 PUSH1 0x0
0x4ea SWAP1
0x4eb DUP2
0x4ec MSTORE
0x4ed PUSH1 0x6
0x4ef PUSH1 0x20
0x4f1 MSTORE
0x4f2 PUSH1 0x40
0x4f4 SWAP1
0x4f5 SHA3
0x4f6 DUP2
0x4f7 SWAP1
0x4f8 SSTORE
---
0x4dd: JUMPDEST 
0x4de: V453 = 0x1
0x4e0: V454 = 0xa0
0x4e2: V455 = 0x2
0x4e4: V456 = EXP 0x2 0xa0
0x4e5: V457 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e6: V458 = CALLER
0x4e7: V459 = AND V458 0xffffffffffffffffffffffffffffffffffffffff
0x4e8: V460 = 0x0
0x4ec: M[0x0] = V459
0x4ed: V461 = 0x6
0x4ef: V462 = 0x20
0x4f1: M[0x20] = 0x6
0x4f2: V463 = 0x40
0x4f5: V464 = SHA3 0x0 0x40
0x4f8: S[V464] = V414
---
Entry stack: [V12, 0x235, V414]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x235, V414]

================================

Block 0x4f9
[0x4f9:0x4f9]
---
Predecessors: [0x433, 0x43f, 0x490, 0x4dd]
Successors: [0x4fa]
---
0x4f9 JUMPDEST
---
0x4f9: JUMPDEST 
---
Entry stack: [V12, 0x235, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, S0]

================================

Block 0x4fa
[0x4fa:0x4fa]
---
Predecessors: [0x4f9]
Successors: [0x4fb]
---
0x4fa JUMPDEST
---
0x4fa: JUMPDEST 
---
Entry stack: [V12, 0x235, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, S0]

================================

Block 0x4fb
[0x4fb:0x507]
---
Predecessors: [0x4fa]
Successors: [0x508, 0x51b]
---
0x4fb JUMPDEST
0x4fc PUSH1 0x7
0x4fe SLOAD
0x4ff PUSH1 0xff
0x501 AND
0x502 DUP1
0x503 ISZERO
0x504 PUSH2 0x51b
0x507 JUMPI
---
0x4fb: JUMPDEST 
0x4fc: V465 = 0x7
0x4fe: V466 = S[0x7]
0x4ff: V467 = 0xff
0x501: V468 = AND 0xff V466
0x503: V469 = ISZERO V468
0x504: V470 = 0x51b
0x507: JUMPI 0x51b V469
---
Entry stack: [V12, 0x235, S0]
Stack pops: 0
Stack additions: [V468]
Exit stack: [V12, 0x235, S0, V468]

================================

Block 0x508
[0x508:0x51a]
---
Predecessors: [0x4fb]
Successors: [0x51b]
---
0x508 POP
0x509 PUSH1 0x0
0x50b SLOAD
0x50c CALLER
0x50d PUSH1 0x1
0x50f PUSH1 0xa0
0x511 PUSH1 0x2
0x513 EXP
0x514 SUB
0x515 SWAP1
0x516 DUP2
0x517 AND
0x518 SWAP2
0x519 AND
0x51a EQ
---
0x509: V471 = 0x0
0x50b: V472 = S[0x0]
0x50c: V473 = CALLER
0x50d: V474 = 0x1
0x50f: V475 = 0xa0
0x511: V476 = 0x2
0x513: V477 = EXP 0x2 0xa0
0x514: V478 = SUB 0x10000000000000000000000000000000000000000 0x1
0x517: V479 = AND 0xffffffffffffffffffffffffffffffffffffffff V473
0x519: V480 = AND V472 0xffffffffffffffffffffffffffffffffffffffff
0x51a: V481 = EQ V480 V479
---
Entry stack: [V12, 0x235, S1, V468]
Stack pops: 1
Stack additions: [V481]
Exit stack: [V12, 0x235, S1, V481]

================================

Block 0x51b
[0x51b:0x520]
---
Predecessors: [0x4fb, 0x508]
Successors: [0x232, 0x521]
---
0x51b JUMPDEST
0x51c ISZERO
0x51d PUSH2 0x232
0x520 JUMPI
---
0x51b: JUMPDEST 
0x51c: V482 = ISZERO S0
0x51d: V483 = 0x232
0x520: JUMPI 0x232 V482
---
Entry stack: [V12, 0x235, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x235, S1]

================================

Block 0x521
[0x521:0x54f]
---
Predecessors: [0x51b]
Successors: [0x550, 0x5a7]
---
0x521 PUSH1 0x0
0x523 DUP1
0x524 SLOAD
0x525 PUSH1 0x2
0x527 SLOAD
0x528 PUSH1 0x40
0x52a MLOAD
0x52b PUSH1 0x1
0x52d PUSH1 0xa0
0x52f PUSH1 0x2
0x531 EXP
0x532 SUB
0x533 SWAP1
0x534 SWAP3
0x535 AND
0x536 SWAP3
0x537 DUP2
0x538 ISZERO
0x539 PUSH2 0x8fc
0x53c MUL
0x53d SWAP3
0x53e SWAP1
0x53f DUP2
0x540 DUP2
0x541 DUP2
0x542 DUP6
0x543 DUP9
0x544 DUP9
0x545 CALL
0x546 SWAP4
0x547 POP
0x548 POP
0x549 POP
0x54a POP
0x54b ISZERO
0x54c PUSH2 0x5a7
0x54f JUMPI
---
0x521: V484 = 0x0
0x524: V485 = S[0x0]
0x525: V486 = 0x2
0x527: V487 = S[0x2]
0x528: V488 = 0x40
0x52a: V489 = M[0x40]
0x52b: V490 = 0x1
0x52d: V491 = 0xa0
0x52f: V492 = 0x2
0x531: V493 = EXP 0x2 0xa0
0x532: V494 = SUB 0x10000000000000000000000000000000000000000 0x1
0x535: V495 = AND V485 0xffffffffffffffffffffffffffffffffffffffff
0x538: V496 = ISZERO V487
0x539: V497 = 0x8fc
0x53c: V498 = MUL 0x8fc V496
0x545: V499 = CALL V498 V495 V487 V489 0x0 V489 0x0
0x54b: V500 = ISZERO V499
0x54c: V501 = 0x5a7
0x54f: JUMPI 0x5a7 V500
---
Entry stack: [V12, 0x235, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, S0]

================================

Block 0x550
[0x550:0x5a6]
---
Predecessors: [0x521]
Successors: [0x232]
---
0x550 PUSH1 0x0
0x552 DUP1
0x553 SLOAD
0x554 PUSH1 0x2
0x556 SLOAD
0x557 PUSH1 0x40
0x559 DUP1
0x55a MLOAD
0x55b PUSH1 0x1
0x55d PUSH1 0xa0
0x55f PUSH1 0x2
0x561 EXP
0x562 SUB
0x563 SWAP1
0x564 SWAP4
0x565 AND
0x566 DUP4
0x567 MSTORE
0x568 PUSH1 0x20
0x56a DUP4
0x56b ADD
0x56c SWAP2
0x56d SWAP1
0x56e SWAP2
0x56f MSTORE
0x570 DUP2
0x571 DUP2
0x572 ADD
0x573 SWAP3
0x574 SWAP1
0x575 SWAP3
0x576 MSTORE
0x577 SWAP1
0x578 MLOAD
0x579 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x59a SWAP2
0x59b DUP2
0x59c SWAP1
0x59d SUB
0x59e PUSH1 0x60
0x5a0 ADD
0x5a1 SWAP1
0x5a2 LOG1
0x5a3 PUSH2 0x232
0x5a6 JUMP
---
0x550: V502 = 0x0
0x553: V503 = S[0x0]
0x554: V504 = 0x2
0x556: V505 = S[0x2]
0x557: V506 = 0x40
0x55a: V507 = M[0x40]
0x55b: V508 = 0x1
0x55d: V509 = 0xa0
0x55f: V510 = 0x2
0x561: V511 = EXP 0x2 0xa0
0x562: V512 = SUB 0x10000000000000000000000000000000000000000 0x1
0x565: V513 = AND V503 0xffffffffffffffffffffffffffffffffffffffff
0x567: M[V507] = V513
0x568: V514 = 0x20
0x56b: V515 = ADD V507 0x20
0x56f: M[V515] = V505
0x572: V516 = ADD 0x40 V507
0x576: M[V516] = 0x0
0x578: V517 = M[0x40]
0x579: V518 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x59d: V519 = SUB V507 V517
0x59e: V520 = 0x60
0x5a0: V521 = ADD 0x60 V519
0x5a2: LOG V517 V521 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x5a3: V522 = 0x232
0x5a6: JUMP 0x232
---
Entry stack: [V12, 0x235, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, S0]

================================

Block 0x5a7
[0x5a7:0x5b1]
---
Predecessors: [0x521]
Successors: [0x5b2]
---
0x5a7 JUMPDEST
0x5a8 PUSH1 0x7
0x5aa DUP1
0x5ab SLOAD
0x5ac PUSH1 0xff
0x5ae NOT
0x5af AND
0x5b0 SWAP1
0x5b1 SSTORE
---
0x5a7: JUMPDEST 
0x5a8: V523 = 0x7
0x5ab: V524 = S[0x7]
0x5ac: V525 = 0xff
0x5ae: V526 = NOT 0xff
0x5af: V527 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V524
0x5b1: S[0x7] = V527
---
Entry stack: [V12, 0x235, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, S0]

================================

Block 0x5b2
[0x5b2:0x5b2]
---
Predecessors: [0x5a7]
Successors: [0x5b3]
---
0x5b2 JUMPDEST
---
0x5b2: JUMPDEST 
---
Entry stack: [V12, 0x235, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, S0]

================================

Block 0x5b3
[0x5b3:0x5b3]
---
Predecessors: [0x5b2]
Successors: [0x5b4]
---
0x5b3 JUMPDEST
---
0x5b3: JUMPDEST 
---
Entry stack: [V12, 0x235, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, S0]

================================

Block 0x5b4
[0x5b4:0x5b4]
---
Predecessors: [0x5b3]
Successors: [0x5b5]
---
0x5b4 JUMPDEST
---
0x5b4: JUMPDEST 
---
Entry stack: [V12, 0x235, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, S0]

================================

Block 0x5b5
[0x5b5:0x5b5]
---
Predecessors: [0x5b4]
Successors: [0x5b6]
---
0x5b5 JUMPDEST
---
0x5b5: JUMPDEST 
---
Entry stack: [V12, 0x235, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x235, S0]

================================

Block 0x5b6
[0x5b6:0x5b8]
---
Predecessors: [0x5b5]
Successors: [0x235]
---
0x5b6 JUMPDEST
0x5b7 POP
0x5b8 JUMP
---
0x5b6: JUMPDEST 
0x5b8: JUMP 0x235
---
Entry stack: [V12, 0x235, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x5b9
[0x5b9:0x5f7]
---
Predecessors: []
Successors: []
---
0x5b9 STOP
0x5ba LOG1
0x5bb PUSH6 0x627a7a723058
0x5c2 SHA3
0x5c3 SWAP6
0x5c4 PC
0x5c5 POP
0x5c6 PUSH15 0x92359663b4df329119acefad28a0a8
0x5d6 ADD
0x5d7 SWAP6
0x5d8 DUP13
0x5d9 MISSING 0xb7
0x5da DUP6
0x5db PC
0x5dc CALLDATALOAD
0x5dd MLOAD
0x5de DUP1
0x5df MISSING 0xa5
0x5e0 MISSING 0xec
0x5e1 PUSH22 0x320029
---
0x5b9: STOP 
0x5ba: LOG S0 S1 S2
0x5bb: V528 = 0x627a7a723058
0x5c2: V529 = SHA3 0x627a7a723058 S3
0x5c4: V530 = PC
0x5c6: V531 = 0x92359663b4df329119acefad28a0a8
0x5d6: V532 = ADD 0x92359663b4df329119acefad28a0a8 S9
0x5d9: MISSING 0xb7
0x5db: V533 = PC
0x5dc: V534 = CALLDATALOAD V533
0x5dd: V535 = M[V534]
0x5df: MISSING 0xa5
0x5e0: MISSING 0xec
0x5e1: V536 = 0x320029
---
Entry stack: []
Stack pops: 0
Stack additions: [S15, V529, S4, S5, S6, S7, S8, V532, S10, S11, S12, S13, S14, S15, V535, V535, S5, S0, S1, S2, S3, S4, S5, 0x320029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x237
Exit block: 0x235
Body: 0x235, 0x237, 0x23e, 0x23f, 0x369, 0x373, 0x3da, 0x3db, 0x3dc

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x249
Exit block: 0x259
Body: 0x249, 0x250, 0x251, 0x259, 0x3de

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x26b
Exit block: 0x27b
Body: 0x26b, 0x272, 0x273, 0x27b, 0x3e4

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x297
Exit block: 0x27b
Body: 0x27b, 0x297, 0x29e, 0x29f, 0x3f3

Function 4:
Public function signature: 0x70a08231
Entry block: 0x2c3
Exit block: 0x259
Body: 0x259, 0x2c3, 0x2ca, 0x2cb, 0x402

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x2f1
Exit block: 0x259
Body: 0x259, 0x2f1, 0x2f8, 0x2f9, 0x414

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x313
Exit block: 0x259
Body: 0x259, 0x313, 0x31a, 0x31b, 0x41a

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x335
Exit block: 0x259
Body: 0x259, 0x335, 0x33c, 0x33d, 0x420

Function 8:
Public function signature: 0xfd6b7ef8
Entry block: 0x357
Exit block: 0x235
Body: 0x232, 0x235, 0x357, 0x35e, 0x35f, 0x426, 0x433, 0x43f, 0x466, 0x490, 0x4dd, 0x4f9, 0x4fa, 0x4fb, 0x508, 0x51b, 0x521, 0x550, 0x5a7, 0x5b2, 0x5b3, 0x5b4, 0x5b5, 0x5b6

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x235
Body: 0x7d, 0x81, 0x95, 0x9a, 0xcf, 0xf7, 0xf8, 0x146, 0x147, 0x154, 0x155, 0x15d, 0x186, 0x187, 0x1d5, 0x1d6, 0x1e3, 0x1e4, 0x1e8, 0x232, 0x235

