Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xe0]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xe0
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xe0
0xa: JUMPI 0xe0 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xe2]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1194ed46
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xe2
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1194ed46
0x20: V14 = EQ V12 0x1194ed46
0x21: V15 = 0xe2
0x24: JUMPI 0xe2 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x172]
---
0x25 DUP1
0x26 PUSH4 0x123119cd
0x2b EQ
0x2c PUSH2 0x172
0x2f JUMPI
---
0x26: V16 = 0x123119cd
0x2b: V17 = EQ 0x123119cd V12
0x2c: V18 = 0x172
0x2f: JUMPI 0x172 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x19e]
---
0x30 DUP1
0x31 PUSH4 0x37bdc99b
0x36 EQ
0x37 PUSH2 0x19e
0x3a JUMPI
---
0x31: V19 = 0x37bdc99b
0x36: V20 = EQ 0x37bdc99b V12
0x37: V21 = 0x19e
0x3a: JUMPI 0x19e V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1c5]
---
0x3b DUP1
0x3c PUSH4 0x3c7a3aff
0x41 EQ
0x42 PUSH2 0x1c5
0x45 JUMPI
---
0x3c: V22 = 0x3c7a3aff
0x41: V23 = EQ 0x3c7a3aff V12
0x42: V24 = 0x1c5
0x45: JUMPI 0x1c5 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1cf]
---
0x46 DUP1
0x47 PUSH4 0x42966c68
0x4c EQ
0x4d PUSH2 0x1cf
0x50 JUMPI
---
0x47: V25 = 0x42966c68
0x4c: V26 = EQ 0x42966c68 V12
0x4d: V27 = 0x1cf
0x50: JUMPI 0x1cf V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1f6]
---
0x51 DUP1
0x52 PUSH4 0x4585ad02
0x57 EQ
0x58 PUSH2 0x1f6
0x5b JUMPI
---
0x52: V28 = 0x4585ad02
0x57: V29 = EQ 0x4585ad02 V12
0x58: V30 = 0x1f6
0x5b: JUMPI 0x1f6 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x208]
---
0x5c DUP1
0x5d PUSH4 0x66d003ac
0x62 EQ
0x63 PUSH2 0x208
0x66 JUMPI
---
0x5d: V31 = 0x66d003ac
0x62: V32 = EQ 0x66d003ac V12
0x63: V33 = 0x208
0x66: JUMPI 0x208 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x234]
---
0x67 DUP1
0x68 PUSH4 0x68163034
0x6d EQ
0x6e PUSH2 0x234
0x71 JUMPI
---
0x68: V34 = 0x68163034
0x6d: V35 = EQ 0x68163034 V12
0x6e: V36 = 0x234
0x71: JUMPI 0x234 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x256]
---
0x72 DUP1
0x73 PUSH4 0x6d295e24
0x78 EQ
0x79 PUSH2 0x256
0x7c JUMPI
---
0x73: V37 = 0x6d295e24
0x78: V38 = EQ 0x6d295e24 V12
0x79: V39 = 0x256
0x7c: JUMPI 0x256 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x268]
---
0x7d DUP1
0x7e PUSH4 0x9472eb76
0x83 EQ
0x84 PUSH2 0x268
0x87 JUMPI
---
0x7e: V40 = 0x9472eb76
0x83: V41 = EQ 0x9472eb76 V12
0x84: V42 = 0x268
0x87: JUMPI 0x268 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2c0]
---
0x88 DUP1
0x89 PUSH4 0xa26759cb
0x8e EQ
0x8f PUSH2 0x2c0
0x92 JUMPI
---
0x89: V43 = 0xa26759cb
0x8e: V44 = EQ 0xa26759cb V12
0x8f: V45 = 0x2c0
0x92: JUMPI 0x2c0 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2ca]
---
0x93 DUP1
0x94 PUSH4 0xb2e7c288
0x99 EQ
0x9a PUSH2 0x2ca
0x9d JUMPI
---
0x94: V46 = 0xb2e7c288
0x99: V47 = EQ 0xb2e7c288 V12
0x9a: V48 = 0x2ca
0x9d: JUMPI 0x2ca V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x35a]
---
0x9e DUP1
0x9f PUSH4 0xb79550be
0xa4 EQ
0xa5 PUSH2 0x35a
0xa8 JUMPI
---
0x9f: V49 = 0xb79550be
0xa4: V50 = EQ 0xb79550be V12
0xa5: V51 = 0x35a
0xa8: JUMPI 0x35a V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x36c]
---
0xa9 DUP1
0xaa PUSH4 0xc19d93fb
0xaf EQ
0xb0 PUSH2 0x36c
0xb3 JUMPI
---
0xaa: V52 = 0xc19d93fb
0xaf: V53 = EQ 0xc19d93fb V12
0xb0: V54 = 0x36c
0xb3: JUMPI 0x36c V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x3a0]
---
0xb4 DUP1
0xb5 PUSH4 0xc75e8d55
0xba EQ
0xbb PUSH2 0x3a0
0xbe JUMPI
---
0xb5: V55 = 0xc75e8d55
0xba: V56 = EQ 0xc75e8d55 V12
0xbb: V57 = 0x3a0
0xbe: JUMPI 0x3a0 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x3f8]
---
0xbf DUP1
0xc0 PUSH4 0xcf19461f
0xc5 EQ
0xc6 PUSH2 0x3f8
0xc9 JUMPI
---
0xc0: V58 = 0xcf19461f
0xc5: V59 = EQ 0xcf19461f V12
0xc6: V60 = 0x3f8
0xc9: JUMPI 0x3f8 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x42c]
---
0xca DUP1
0xcb PUSH4 0xe3d0252b
0xd0 EQ
0xd1 PUSH2 0x42c
0xd4 JUMPI
---
0xcb: V61 = 0xe3d0252b
0xd0: V62 = EQ 0xe3d0252b V12
0xd1: V63 = 0x42c
0xd4: JUMPI 0x42c V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x44e]
---
0xd5 DUP1
0xd6 PUSH4 0xec1e74a7
0xdb EQ
0xdc PUSH2 0x44e
0xdf JUMPI
---
0xd6: V64 = 0xec1e74a7
0xdb: V65 = EQ 0xec1e74a7 V12
0xdc: V66 = 0x44e
0xdf: JUMPI 0x44e V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xe1]
---
Predecessors: [0x0, 0xd5]
Successors: []
---
0xe0 JUMPDEST
0xe1 INVALID
---
0xe0: JUMPDEST 
0xe1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe2
[0xe2:0xe8]
---
Predecessors: [0xb]
Successors: [0xe9, 0xea]
---
0xe2 JUMPDEST
0xe3 CALLVALUE
0xe4 ISZERO
0xe5 PUSH2 0xea
0xe8 JUMPI
---
0xe2: JUMPDEST 
0xe3: V67 = CALLVALUE
0xe4: V68 = ISZERO V67
0xe5: V69 = 0xea
0xe8: JUMPI 0xea V68
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe9
[0xe9:0xe9]
---
Predecessors: [0xe2]
Successors: []
---
0xe9 INVALID
---
0xe9: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xea
[0xea:0xf1]
---
Predecessors: [0xe2]
Successors: [0x470]
---
0xea JUMPDEST
0xeb PUSH2 0xf2
0xee PUSH2 0x470
0xf1 JUMP
---
0xea: JUMPDEST 
0xeb: V70 = 0xf2
0xee: V71 = 0x470
0xf1: JUMP 0x470
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf2]
Exit stack: [V12, 0xf2]

================================

Block 0xf2
[0xf2:0x117]
---
Predecessors: [0x4f3]
Successors: [0x118, 0x138]
---
0xf2 JUMPDEST
0xf3 PUSH1 0x40
0xf5 DUP1
0xf6 MLOAD
0xf7 PUSH1 0x20
0xf9 DUP1
0xfa DUP3
0xfb MSTORE
0xfc DUP4
0xfd MLOAD
0xfe DUP2
0xff DUP4
0x100 ADD
0x101 MSTORE
0x102 DUP4
0x103 MLOAD
0x104 SWAP2
0x105 SWAP3
0x106 DUP4
0x107 SWAP3
0x108 SWAP1
0x109 DUP4
0x10a ADD
0x10b SWAP2
0x10c DUP6
0x10d ADD
0x10e SWAP1
0x10f DUP1
0x110 DUP4
0x111 DUP4
0x112 DUP3
0x113 ISZERO
0x114 PUSH2 0x138
0x117 JUMPI
---
0xf2: JUMPDEST 
0xf3: V72 = 0x40
0xf6: V73 = M[0x40]
0xf7: V74 = 0x20
0xfb: M[V73] = 0x20
0xfd: V75 = M[S0]
0x100: V76 = ADD V73 0x20
0x101: M[V76] = V75
0x103: V77 = M[S0]
0x10a: V78 = ADD V73 0x40
0x10d: V79 = ADD S0 0x20
0x113: V80 = ISZERO V77
0x114: V81 = 0x138
0x117: JUMPI 0x138 V80
---
Entry stack: [V12, 0xf2, S0]
Stack pops: 1
Stack additions: [S0, V73, V73, V78, V79, V77, V77, V78, V79]
Exit stack: [V12, 0xf2, S0, V73, V73, V78, V79, V77, V77, V78, V79]

================================

Block 0x118
[0x118:0x125]
---
Predecessors: [0xf2, 0x126, 0x30e]
Successors: [0x126, 0x138]
---
0x118 JUMPDEST
0x119 DUP1
0x11a MLOAD
0x11b DUP3
0x11c MSTORE
0x11d PUSH1 0x20
0x11f DUP4
0x120 GT
0x121 ISZERO
0x122 PUSH2 0x138
0x125 JUMPI
---
0x118: JUMPDEST 
0x11a: V82 = M[S0]
0x11c: M[S1] = V82
0x11d: V83 = 0x20
0x120: V84 = GT S2 0x20
0x121: V85 = ISZERO V84
0x122: V86 = 0x138
0x125: JUMPI 0x138 V85
---
Entry stack: [V12, 0xf2, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xf2, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x126
[0x126:0x137]
---
Predecessors: [0x118]
Successors: [0x118]
---
0x126 PUSH1 0x1f
0x128 NOT
0x129 SWAP1
0x12a SWAP3
0x12b ADD
0x12c SWAP2
0x12d PUSH1 0x20
0x12f SWAP2
0x130 DUP3
0x131 ADD
0x132 SWAP2
0x133 ADD
0x134 PUSH2 0x118
0x137 JUMP
---
0x126: V87 = 0x1f
0x128: V88 = NOT 0x1f
0x12b: V89 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x12d: V90 = 0x20
0x131: V91 = ADD 0x20 S1
0x133: V92 = ADD 0x20 S0
0x134: V93 = 0x118
0x137: JUMP 0x118
---
Entry stack: [V12, 0xf2, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V89, V91, V92]
Exit stack: [V12, 0xf2, S8, S7, S6, S5, S4, S3, V89, V91, V92]

================================

Block 0x138
[0x138:0x14a]
---
Predecessors: [0xf2, 0x118, 0x2da, 0x300]
Successors: [0x14b, 0x164]
---
0x138 JUMPDEST
0x139 POP
0x13a POP
0x13b POP
0x13c SWAP1
0x13d POP
0x13e SWAP1
0x13f DUP2
0x140 ADD
0x141 SWAP1
0x142 PUSH1 0x1f
0x144 AND
0x145 DUP1
0x146 ISZERO
0x147 PUSH2 0x164
0x14a JUMPI
---
0x138: JUMPDEST 
0x140: V94 = ADD S3 S5
0x142: V95 = 0x1f
0x144: V96 = AND 0x1f S3
0x146: V97 = ISZERO V96
0x147: V98 = 0x164
0x14a: JUMPI 0x164 V97
---
Entry stack: [V12, 0xf2, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V94, V96]
Exit stack: [V12, 0xf2, S8, S7, S6, V94, V96]

================================

Block 0x14b
[0x14b:0x163]
---
Predecessors: [0x138]
Successors: [0x164]
---
0x14b DUP1
0x14c DUP3
0x14d SUB
0x14e DUP1
0x14f MLOAD
0x150 PUSH1 0x1
0x152 DUP4
0x153 PUSH1 0x20
0x155 SUB
0x156 PUSH2 0x100
0x159 EXP
0x15a SUB
0x15b NOT
0x15c AND
0x15d DUP2
0x15e MSTORE
0x15f PUSH1 0x20
0x161 ADD
0x162 SWAP2
0x163 POP
---
0x14d: V99 = SUB V94 V96
0x14f: V100 = M[V99]
0x150: V101 = 0x1
0x153: V102 = 0x20
0x155: V103 = SUB 0x20 V96
0x156: V104 = 0x100
0x159: V105 = EXP 0x100 V103
0x15a: V106 = SUB V105 0x1
0x15b: V107 = NOT V106
0x15c: V108 = AND V107 V100
0x15e: M[V99] = V108
0x15f: V109 = 0x20
0x161: V110 = ADD 0x20 V99
---
Entry stack: [V12, 0xf2, S4, S3, S2, V94, V96]
Stack pops: 2
Stack additions: [V110, S0]
Exit stack: [V12, 0xf2, S4, S3, S2, V110, V96]

================================

Block 0x164
[0x164:0x171]
---
Predecessors: [0x138, 0x14b, 0x320]
Successors: []
---
0x164 JUMPDEST
0x165 POP
0x166 SWAP3
0x167 POP
0x168 POP
0x169 POP
0x16a PUSH1 0x40
0x16c MLOAD
0x16d DUP1
0x16e SWAP2
0x16f SUB
0x170 SWAP1
0x171 RETURN
---
0x164: JUMPDEST 
0x16a: V111 = 0x40
0x16c: V112 = M[0x40]
0x16f: V113 = SUB S1 V112
0x171: RETURN V112 V113
---
Entry stack: [V12, 0xf2, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0xf2]

================================

Block 0x172
[0x172:0x178]
---
Predecessors: [0x25]
Successors: [0x179, 0x17a]
---
0x172 JUMPDEST
0x173 CALLVALUE
0x174 ISZERO
0x175 PUSH2 0x17a
0x178 JUMPI
---
0x172: JUMPDEST 
0x173: V114 = CALLVALUE
0x174: V115 = ISZERO V114
0x175: V116 = 0x17a
0x178: JUMPI 0x17a V115
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x179
[0x179:0x179]
---
Predecessors: [0x172]
Successors: []
---
0x179 INVALID
---
0x179: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17a
[0x17a:0x181]
---
Predecessors: [0x172]
Successors: [0x4fb]
---
0x17a JUMPDEST
0x17b PUSH2 0x182
0x17e PUSH2 0x4fb
0x181 JUMP
---
0x17a: JUMPDEST 
0x17b: V117 = 0x182
0x17e: V118 = 0x4fb
0x181: JUMP 0x4fb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x182]
Exit stack: [V12, 0x182]

================================

Block 0x182
[0x182:0x19d]
---
Predecessors: [0x4fb, 0x75a]
Successors: []
---
0x182 JUMPDEST
0x183 PUSH1 0x40
0x185 DUP1
0x186 MLOAD
0x187 PUSH1 0x1
0x189 PUSH1 0xa0
0x18b PUSH1 0x2
0x18d EXP
0x18e SUB
0x18f SWAP1
0x190 SWAP3
0x191 AND
0x192 DUP3
0x193 MSTORE
0x194 MLOAD
0x195 SWAP1
0x196 DUP2
0x197 SWAP1
0x198 SUB
0x199 PUSH1 0x20
0x19b ADD
0x19c SWAP1
0x19d RETURN
---
0x182: JUMPDEST 
0x183: V119 = 0x40
0x186: V120 = M[0x40]
0x187: V121 = 0x1
0x189: V122 = 0xa0
0x18b: V123 = 0x2
0x18d: V124 = EXP 0x2 0xa0
0x18e: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x191: V126 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x193: M[V120] = V126
0x194: V127 = M[0x40]
0x198: V128 = SUB V120 V127
0x199: V129 = 0x20
0x19b: V130 = ADD 0x20 V128
0x19d: RETURN V127 V130
---
Entry stack: [V12, 0x182, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x182]

================================

Block 0x19e
[0x19e:0x1a4]
---
Predecessors: [0x30]
Successors: [0x1a5, 0x1a6]
---
0x19e JUMPDEST
0x19f CALLVALUE
0x1a0 ISZERO
0x1a1 PUSH2 0x1a6
0x1a4 JUMPI
---
0x19e: JUMPDEST 
0x19f: V131 = CALLVALUE
0x1a0: V132 = ISZERO V131
0x1a1: V133 = 0x1a6
0x1a4: JUMPI 0x1a6 V132
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a5
[0x1a5:0x1a5]
---
Predecessors: [0x19e]
Successors: []
---
0x1a5 INVALID
---
0x1a5: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a6
[0x1a6:0x1b0]
---
Predecessors: [0x19e]
Successors: [0x50a]
---
0x1a6 JUMPDEST
0x1a7 PUSH2 0x1b1
0x1aa PUSH1 0x4
0x1ac CALLDATALOAD
0x1ad PUSH2 0x50a
0x1b0 JUMP
---
0x1a6: JUMPDEST 
0x1a7: V134 = 0x1b1
0x1aa: V135 = 0x4
0x1ac: V136 = CALLDATALOAD 0x4
0x1ad: V137 = 0x50a
0x1b0: JUMP 0x50a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b1, V136]
Exit stack: [V12, 0x1b1, V136]

================================

Block 0x1b1
[0x1b1:0x1c4]
---
Predecessors: [0x562]
Successors: []
---
0x1b1 JUMPDEST
0x1b2 PUSH1 0x40
0x1b4 DUP1
0x1b5 MLOAD
0x1b6 SWAP2
0x1b7 ISZERO
0x1b8 ISZERO
0x1b9 DUP3
0x1ba MSTORE
0x1bb MLOAD
0x1bc SWAP1
0x1bd DUP2
0x1be SWAP1
0x1bf SUB
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 SWAP1
0x1c4 RETURN
---
0x1b1: JUMPDEST 
0x1b2: V138 = 0x40
0x1b5: V139 = M[0x40]
0x1b7: V140 = ISZERO S0
0x1b8: V141 = ISZERO V140
0x1ba: M[V139] = V141
0x1bb: V142 = M[0x40]
0x1bf: V143 = SUB V139 V142
0x1c0: V144 = 0x20
0x1c2: V145 = ADD 0x20 V143
0x1c4: RETURN V142 V145
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c5
[0x1c5:0x1cc]
---
Predecessors: [0x3b]
Successors: [0x568]
---
0x1c5 JUMPDEST
0x1c6 PUSH2 0x1cd
0x1c9 PUSH2 0x568
0x1cc JUMP
---
0x1c5: JUMPDEST 
0x1c6: V146 = 0x1cd
0x1c9: V147 = 0x568
0x1cc: JUMP 0x568
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1cd]
Exit stack: [V12, 0x1cd]

================================

Block 0x1cd
[0x1cd:0x1ce]
---
Predecessors: [0x63e, 0x758, 0x893, 0x972, 0xa2b]
Successors: []
---
0x1cd JUMPDEST
0x1ce STOP
---
0x1cd: JUMPDEST 
0x1ce: STOP 
---
Entry stack: [V12, 0x1b1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S0]

================================

Block 0x1cf
[0x1cf:0x1d5]
---
Predecessors: [0x46]
Successors: [0x1d6, 0x1d7]
---
0x1cf JUMPDEST
0x1d0 CALLVALUE
0x1d1 ISZERO
0x1d2 PUSH2 0x1d7
0x1d5 JUMPI
---
0x1cf: JUMPDEST 
0x1d0: V148 = CALLVALUE
0x1d1: V149 = ISZERO V148
0x1d2: V150 = 0x1d7
0x1d5: JUMPI 0x1d7 V149
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d6
[0x1d6:0x1d6]
---
Predecessors: [0x1cf]
Successors: []
---
0x1d6 INVALID
---
0x1d6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d7
[0x1d7:0x1e1]
---
Predecessors: [0x1cf]
Successors: [0x641]
---
0x1d7 JUMPDEST
0x1d8 PUSH2 0x1b1
0x1db PUSH1 0x4
0x1dd CALLDATALOAD
0x1de PUSH2 0x641
0x1e1 JUMP
---
0x1d7: JUMPDEST 
0x1d8: V151 = 0x1b1
0x1db: V152 = 0x4
0x1dd: V153 = CALLDATALOAD 0x4
0x1de: V154 = 0x641
0x1e1: JUMP 0x641
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b1, V153]
Exit stack: [V12, 0x1b1, V153]

================================

Block 0x1e2
[0x1e2:0x1f5]
---
Predecessors: []
Successors: []
---
0x1e2 JUMPDEST
0x1e3 PUSH1 0x40
0x1e5 DUP1
0x1e6 MLOAD
0x1e7 SWAP2
0x1e8 ISZERO
0x1e9 ISZERO
0x1ea DUP3
0x1eb MSTORE
0x1ec MLOAD
0x1ed SWAP1
0x1ee DUP2
0x1ef SWAP1
0x1f0 SUB
0x1f1 PUSH1 0x20
0x1f3 ADD
0x1f4 SWAP1
0x1f5 RETURN
---
0x1e2: JUMPDEST 
0x1e3: V155 = 0x40
0x1e6: V156 = M[0x40]
0x1e8: V157 = ISZERO S0
0x1e9: V158 = ISZERO V157
0x1eb: M[V156] = V158
0x1ec: V159 = M[0x40]
0x1f0: V160 = SUB V156 V159
0x1f1: V161 = 0x20
0x1f3: V162 = ADD 0x20 V160
0x1f5: RETURN V159 V162
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1f6
[0x1f6:0x1fc]
---
Predecessors: [0x51]
Successors: [0x1fd, 0x1fe]
---
0x1f6 JUMPDEST
0x1f7 CALLVALUE
0x1f8 ISZERO
0x1f9 PUSH2 0x1fe
0x1fc JUMPI
---
0x1f6: JUMPDEST 
0x1f7: V163 = CALLVALUE
0x1f8: V164 = ISZERO V163
0x1f9: V165 = 0x1fe
0x1fc: JUMPI 0x1fe V164
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fd
[0x1fd:0x1fd]
---
Predecessors: [0x1f6]
Successors: []
---
0x1fd INVALID
---
0x1fd: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fe
[0x1fe:0x205]
---
Predecessors: [0x1f6]
Successors: [0x69f]
---
0x1fe JUMPDEST
0x1ff PUSH2 0x1cd
0x202 PUSH2 0x69f
0x205 JUMP
---
0x1fe: JUMPDEST 
0x1ff: V166 = 0x1cd
0x202: V167 = 0x69f
0x205: JUMP 0x69f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1cd]
Exit stack: [V12, 0x1cd]

================================

Block 0x206
[0x206:0x207]
---
Predecessors: []
Successors: []
---
0x206 JUMPDEST
0x207 STOP
---
0x206: JUMPDEST 
0x207: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x208
[0x208:0x20e]
---
Predecessors: [0x5c]
Successors: [0x20f, 0x210]
---
0x208 JUMPDEST
0x209 CALLVALUE
0x20a ISZERO
0x20b PUSH2 0x210
0x20e JUMPI
---
0x208: JUMPDEST 
0x209: V168 = CALLVALUE
0x20a: V169 = ISZERO V168
0x20b: V170 = 0x210
0x20e: JUMPI 0x210 V169
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20f
[0x20f:0x20f]
---
Predecessors: [0x208]
Successors: []
---
0x20f INVALID
---
0x20f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x210
[0x210:0x217]
---
Predecessors: [0x208]
Successors: [0x75a]
---
0x210 JUMPDEST
0x211 PUSH2 0x182
0x214 PUSH2 0x75a
0x217 JUMP
---
0x210: JUMPDEST 
0x211: V171 = 0x182
0x214: V172 = 0x75a
0x217: JUMP 0x75a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x182]
Exit stack: [V12, 0x182]

================================

Block 0x218
[0x218:0x233]
---
Predecessors: []
Successors: []
---
0x218 JUMPDEST
0x219 PUSH1 0x40
0x21b DUP1
0x21c MLOAD
0x21d PUSH1 0x1
0x21f PUSH1 0xa0
0x221 PUSH1 0x2
0x223 EXP
0x224 SUB
0x225 SWAP1
0x226 SWAP3
0x227 AND
0x228 DUP3
0x229 MSTORE
0x22a MLOAD
0x22b SWAP1
0x22c DUP2
0x22d SWAP1
0x22e SUB
0x22f PUSH1 0x20
0x231 ADD
0x232 SWAP1
0x233 RETURN
---
0x218: JUMPDEST 
0x219: V173 = 0x40
0x21c: V174 = M[0x40]
0x21d: V175 = 0x1
0x21f: V176 = 0xa0
0x221: V177 = 0x2
0x223: V178 = EXP 0x2 0xa0
0x224: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x227: V180 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x229: M[V174] = V180
0x22a: V181 = M[0x40]
0x22e: V182 = SUB V174 V181
0x22f: V183 = 0x20
0x231: V184 = ADD 0x20 V182
0x233: RETURN V181 V184
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x234
[0x234:0x23a]
---
Predecessors: [0x67]
Successors: [0x23b, 0x23c]
---
0x234 JUMPDEST
0x235 CALLVALUE
0x236 ISZERO
0x237 PUSH2 0x23c
0x23a JUMPI
---
0x234: JUMPDEST 
0x235: V185 = CALLVALUE
0x236: V186 = ISZERO V185
0x237: V187 = 0x23c
0x23a: JUMPI 0x23c V186
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23b
[0x23b:0x23b]
---
Predecessors: [0x234]
Successors: []
---
0x23b INVALID
---
0x23b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23c
[0x23c:0x243]
---
Predecessors: [0x234]
Successors: [0x769]
---
0x23c JUMPDEST
0x23d PUSH2 0x244
0x240 PUSH2 0x769
0x243 JUMP
---
0x23c: JUMPDEST 
0x23d: V188 = 0x244
0x240: V189 = 0x769
0x243: JUMP 0x769
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x244]
Exit stack: [V12, 0x244]

================================

Block 0x244
[0x244:0x255]
---
Predecessors: [0x769, 0xc32, 0xc38]
Successors: []
---
0x244 JUMPDEST
0x245 PUSH1 0x40
0x247 DUP1
0x248 MLOAD
0x249 SWAP2
0x24a DUP3
0x24b MSTORE
0x24c MLOAD
0x24d SWAP1
0x24e DUP2
0x24f SWAP1
0x250 SUB
0x251 PUSH1 0x20
0x253 ADD
0x254 SWAP1
0x255 RETURN
---
0x244: JUMPDEST 
0x245: V190 = 0x40
0x248: V191 = M[0x40]
0x24b: M[V191] = S0
0x24c: V192 = M[0x40]
0x250: V193 = SUB V191 V192
0x251: V194 = 0x20
0x253: V195 = ADD 0x20 V193
0x255: RETURN V192 V195
---
Entry stack: [V12, 0x244, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x244]

================================

Block 0x256
[0x256:0x25c]
---
Predecessors: [0x72]
Successors: [0x25d, 0x25e]
---
0x256 JUMPDEST
0x257 CALLVALUE
0x258 ISZERO
0x259 PUSH2 0x25e
0x25c JUMPI
---
0x256: JUMPDEST 
0x257: V196 = CALLVALUE
0x258: V197 = ISZERO V196
0x259: V198 = 0x25e
0x25c: JUMPI 0x25e V197
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25d
[0x25d:0x25d]
---
Predecessors: [0x256]
Successors: []
---
0x25d INVALID
---
0x25d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25e
[0x25e:0x265]
---
Predecessors: [0x256]
Successors: [0x76f]
---
0x25e JUMPDEST
0x25f PUSH2 0x1cd
0x262 PUSH2 0x76f
0x265 JUMP
---
0x25e: JUMPDEST 
0x25f: V199 = 0x1cd
0x262: V200 = 0x76f
0x265: JUMP 0x76f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1cd]
Exit stack: [V12, 0x1cd]

================================

Block 0x266
[0x266:0x267]
---
Predecessors: []
Successors: []
---
0x266 JUMPDEST
0x267 STOP
---
0x266: JUMPDEST 
0x267: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x268
[0x268:0x26e]
---
Predecessors: [0x7d]
Successors: [0x26f, 0x270]
---
0x268 JUMPDEST
0x269 CALLVALUE
0x26a ISZERO
0x26b PUSH2 0x270
0x26e JUMPI
---
0x268: JUMPDEST 
0x269: V201 = CALLVALUE
0x26a: V202 = ISZERO V201
0x26b: V203 = 0x270
0x26e: JUMPI 0x270 V202
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26f
[0x26f:0x26f]
---
Predecessors: [0x268]
Successors: []
---
0x26f INVALID
---
0x26f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x270
[0x270:0x2bd]
---
Predecessors: [0x268]
Successors: [0x895]
---
0x270 JUMPDEST
0x271 PUSH2 0x1cd
0x274 PUSH1 0x4
0x276 DUP1
0x277 DUP1
0x278 CALLDATALOAD
0x279 SWAP1
0x27a PUSH1 0x20
0x27c ADD
0x27d SWAP1
0x27e DUP3
0x27f ADD
0x280 DUP1
0x281 CALLDATALOAD
0x282 SWAP1
0x283 PUSH1 0x20
0x285 ADD
0x286 SWAP1
0x287 DUP1
0x288 DUP1
0x289 PUSH1 0x1f
0x28b ADD
0x28c PUSH1 0x20
0x28e DUP1
0x28f SWAP2
0x290 DIV
0x291 MUL
0x292 PUSH1 0x20
0x294 ADD
0x295 PUSH1 0x40
0x297 MLOAD
0x298 SWAP1
0x299 DUP2
0x29a ADD
0x29b PUSH1 0x40
0x29d MSTORE
0x29e DUP1
0x29f SWAP4
0x2a0 SWAP3
0x2a1 SWAP2
0x2a2 SWAP1
0x2a3 DUP2
0x2a4 DUP2
0x2a5 MSTORE
0x2a6 PUSH1 0x20
0x2a8 ADD
0x2a9 DUP4
0x2aa DUP4
0x2ab DUP1
0x2ac DUP3
0x2ad DUP5
0x2ae CALLDATACOPY
0x2af POP
0x2b0 SWAP5
0x2b1 SWAP7
0x2b2 POP
0x2b3 PUSH2 0x895
0x2b6 SWAP6
0x2b7 POP
0x2b8 POP
0x2b9 POP
0x2ba POP
0x2bb POP
0x2bc POP
0x2bd JUMP
---
0x270: JUMPDEST 
0x271: V204 = 0x1cd
0x274: V205 = 0x4
0x278: V206 = CALLDATALOAD 0x4
0x27a: V207 = 0x20
0x27c: V208 = ADD 0x20 0x4
0x27f: V209 = ADD 0x4 V206
0x281: V210 = CALLDATALOAD V209
0x283: V211 = 0x20
0x285: V212 = ADD 0x20 V209
0x289: V213 = 0x1f
0x28b: V214 = ADD 0x1f V210
0x28c: V215 = 0x20
0x290: V216 = DIV V214 0x20
0x291: V217 = MUL V216 0x20
0x292: V218 = 0x20
0x294: V219 = ADD 0x20 V217
0x295: V220 = 0x40
0x297: V221 = M[0x40]
0x29a: V222 = ADD V221 V219
0x29b: V223 = 0x40
0x29d: M[0x40] = V222
0x2a5: M[V221] = V210
0x2a6: V224 = 0x20
0x2a8: V225 = ADD 0x20 V221
0x2ae: CALLDATACOPY V225 V212 V210
0x2b3: V226 = 0x895
0x2bd: JUMP 0x895
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1cd, V221]
Exit stack: [V12, 0x1cd, V221]

================================

Block 0x2be
[0x2be:0x2bf]
---
Predecessors: []
Successors: []
---
0x2be JUMPDEST
0x2bf STOP
---
0x2be: JUMPDEST 
0x2bf: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2c0
[0x2c0:0x2c7]
---
Predecessors: [0x88]
Successors: [0x975]
---
0x2c0 JUMPDEST
0x2c1 PUSH2 0x1cd
0x2c4 PUSH2 0x975
0x2c7 JUMP
---
0x2c0: JUMPDEST 
0x2c1: V227 = 0x1cd
0x2c4: V228 = 0x975
0x2c7: JUMP 0x975
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1cd]
Exit stack: [V12, 0x1cd]

================================

Block 0x2c8
[0x2c8:0x2c9]
---
Predecessors: []
Successors: []
---
0x2c8 JUMPDEST
0x2c9 STOP
---
0x2c8: JUMPDEST 
0x2c9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ca
[0x2ca:0x2d0]
---
Predecessors: [0x93]
Successors: [0x2d1, 0x2d2]
---
0x2ca JUMPDEST
0x2cb CALLVALUE
0x2cc ISZERO
0x2cd PUSH2 0x2d2
0x2d0 JUMPI
---
0x2ca: JUMPDEST 
0x2cb: V229 = CALLVALUE
0x2cc: V230 = ISZERO V229
0x2cd: V231 = 0x2d2
0x2d0: JUMPI 0x2d2 V230
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d1
[0x2d1:0x2d1]
---
Predecessors: [0x2ca]
Successors: []
---
0x2d1 INVALID
---
0x2d1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d2
[0x2d2:0x2d9]
---
Predecessors: [0x2ca]
Successors: [0xa2d]
---
0x2d2 JUMPDEST
0x2d3 PUSH2 0xf2
0x2d6 PUSH2 0xa2d
0x2d9 JUMP
---
0x2d2: JUMPDEST 
0x2d3: V232 = 0xf2
0x2d6: V233 = 0xa2d
0x2d9: JUMP 0xa2d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf2]
Exit stack: [V12, 0xf2]

================================

Block 0x2da
[0x2da:0x2ff]
---
Predecessors: []
Successors: [0x138, 0x300]
---
0x2da JUMPDEST
0x2db PUSH1 0x40
0x2dd DUP1
0x2de MLOAD
0x2df PUSH1 0x20
0x2e1 DUP1
0x2e2 DUP3
0x2e3 MSTORE
0x2e4 DUP4
0x2e5 MLOAD
0x2e6 DUP2
0x2e7 DUP4
0x2e8 ADD
0x2e9 MSTORE
0x2ea DUP4
0x2eb MLOAD
0x2ec SWAP2
0x2ed SWAP3
0x2ee DUP4
0x2ef SWAP3
0x2f0 SWAP1
0x2f1 DUP4
0x2f2 ADD
0x2f3 SWAP2
0x2f4 DUP6
0x2f5 ADD
0x2f6 SWAP1
0x2f7 DUP1
0x2f8 DUP4
0x2f9 DUP4
0x2fa DUP3
0x2fb ISZERO
0x2fc PUSH2 0x138
0x2ff JUMPI
---
0x2da: JUMPDEST 
0x2db: V234 = 0x40
0x2de: V235 = M[0x40]
0x2df: V236 = 0x20
0x2e3: M[V235] = 0x20
0x2e5: V237 = M[S0]
0x2e8: V238 = ADD V235 0x20
0x2e9: M[V238] = V237
0x2eb: V239 = M[S0]
0x2f2: V240 = ADD V235 0x40
0x2f5: V241 = ADD S0 0x20
0x2fb: V242 = ISZERO V239
0x2fc: V243 = 0x138
0x2ff: JUMPI 0x138 V242
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V235, V235, V240, V241, V239, V239, V240, V241]
Exit stack: [S0, V235, V235, V240, V241, V239, V239, V240, V241]

================================

Block 0x300
[0x300:0x30d]
---
Predecessors: [0x2da]
Successors: [0x138, 0x30e]
---
0x300 JUMPDEST
0x301 DUP1
0x302 MLOAD
0x303 DUP3
0x304 MSTORE
0x305 PUSH1 0x20
0x307 DUP4
0x308 GT
0x309 ISZERO
0x30a PUSH2 0x138
0x30d JUMPI
---
0x300: JUMPDEST 
0x302: V244 = M[V241]
0x304: M[V240] = V244
0x305: V245 = 0x20
0x308: V246 = GT V239 0x20
0x309: V247 = ISZERO V246
0x30a: V248 = 0x138
0x30d: JUMPI 0x138 V247
---
Entry stack: [S8, V235, V235, V240, V241, V239, V239, V240, V241]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V235, V235, V240, V241, V239, V239, V240, V241]

================================

Block 0x30e
[0x30e:0x31f]
---
Predecessors: [0x300]
Successors: [0x118]
---
0x30e PUSH1 0x1f
0x310 NOT
0x311 SWAP1
0x312 SWAP3
0x313 ADD
0x314 SWAP2
0x315 PUSH1 0x20
0x317 SWAP2
0x318 DUP3
0x319 ADD
0x31a SWAP2
0x31b ADD
0x31c PUSH2 0x118
0x31f JUMP
---
0x30e: V249 = 0x1f
0x310: V250 = NOT 0x1f
0x313: V251 = ADD V239 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x315: V252 = 0x20
0x319: V253 = ADD 0x20 V240
0x31b: V254 = ADD 0x20 V241
0x31c: V255 = 0x118
0x31f: JUMP 0x118
---
Entry stack: [S8, V235, V235, V240, V241, V239, V239, V240, V241]
Stack pops: 3
Stack additions: [V251, V253, V254]
Exit stack: [S8, V235, V235, V240, V241, V239, V251, V253, V254]

================================

Block 0x320
[0x320:0x332]
---
Predecessors: []
Successors: [0x164, 0x333]
---
0x320 JUMPDEST
0x321 POP
0x322 POP
0x323 POP
0x324 SWAP1
0x325 POP
0x326 SWAP1
0x327 DUP2
0x328 ADD
0x329 SWAP1
0x32a PUSH1 0x1f
0x32c AND
0x32d DUP1
0x32e ISZERO
0x32f PUSH2 0x164
0x332 JUMPI
---
0x320: JUMPDEST 
0x328: V256 = ADD S3 S5
0x32a: V257 = 0x1f
0x32c: V258 = AND 0x1f S3
0x32e: V259 = ISZERO V258
0x32f: V260 = 0x164
0x332: JUMPI 0x164 V259
---
Entry stack: []
Stack pops: 6
Stack additions: [V256, V258]
Exit stack: [V256, V258]

================================

Block 0x333
[0x333:0x34b]
---
Predecessors: [0x320]
Successors: [0x34c]
---
0x333 DUP1
0x334 DUP3
0x335 SUB
0x336 DUP1
0x337 MLOAD
0x338 PUSH1 0x1
0x33a DUP4
0x33b PUSH1 0x20
0x33d SUB
0x33e PUSH2 0x100
0x341 EXP
0x342 SUB
0x343 NOT
0x344 AND
0x345 DUP2
0x346 MSTORE
0x347 PUSH1 0x20
0x349 ADD
0x34a SWAP2
0x34b POP
---
0x335: V261 = SUB V256 V258
0x337: V262 = M[V261]
0x338: V263 = 0x1
0x33b: V264 = 0x20
0x33d: V265 = SUB 0x20 V258
0x33e: V266 = 0x100
0x341: V267 = EXP 0x100 V265
0x342: V268 = SUB V267 0x1
0x343: V269 = NOT V268
0x344: V270 = AND V269 V262
0x346: M[V261] = V270
0x347: V271 = 0x20
0x349: V272 = ADD 0x20 V261
---
Entry stack: [V256, V258]
Stack pops: 2
Stack additions: [V272, S0]
Exit stack: [V272, V258]

================================

Block 0x34c
[0x34c:0x359]
---
Predecessors: [0x333]
Successors: []
---
0x34c JUMPDEST
0x34d POP
0x34e SWAP3
0x34f POP
0x350 POP
0x351 POP
0x352 PUSH1 0x40
0x354 MLOAD
0x355 DUP1
0x356 SWAP2
0x357 SUB
0x358 SWAP1
0x359 RETURN
---
0x34c: JUMPDEST 
0x352: V273 = 0x40
0x354: V274 = M[0x40]
0x357: V275 = SUB V272 V274
0x359: RETURN V274 V275
---
Entry stack: [V272, V258]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x35a
[0x35a:0x360]
---
Predecessors: [0x9e]
Successors: [0x361, 0x362]
---
0x35a JUMPDEST
0x35b CALLVALUE
0x35c ISZERO
0x35d PUSH2 0x362
0x360 JUMPI
---
0x35a: JUMPDEST 
0x35b: V276 = CALLVALUE
0x35c: V277 = ISZERO V276
0x35d: V278 = 0x362
0x360: JUMPI 0x362 V277
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x361
[0x361:0x361]
---
Predecessors: [0x35a]
Successors: []
---
0x361 INVALID
---
0x361: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x362
[0x362:0x369]
---
Predecessors: [0x35a]
Successors: [0xabb]
---
0x362 JUMPDEST
0x363 PUSH2 0x1cd
0x366 PUSH2 0xabb
0x369 JUMP
---
0x362: JUMPDEST 
0x363: V279 = 0x1cd
0x366: V280 = 0xabb
0x369: JUMP 0xabb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1cd]
Exit stack: [V12, 0x1cd]

================================

Block 0x36a
[0x36a:0x36b]
---
Predecessors: []
Successors: []
---
0x36a JUMPDEST
0x36b STOP
---
0x36a: JUMPDEST 
0x36b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x36c
[0x36c:0x372]
---
Predecessors: [0xa9]
Successors: [0x373, 0x374]
---
0x36c JUMPDEST
0x36d CALLVALUE
0x36e ISZERO
0x36f PUSH2 0x374
0x372 JUMPI
---
0x36c: JUMPDEST 
0x36d: V281 = CALLVALUE
0x36e: V282 = ISZERO V281
0x36f: V283 = 0x374
0x372: JUMPI 0x374 V282
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x373
[0x373:0x373]
---
Predecessors: [0x36c]
Successors: []
---
0x373 INVALID
---
0x373: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x374
[0x374:0x37b]
---
Predecessors: [0x36c]
Successors: [0xb3e]
---
0x374 JUMPDEST
0x375 PUSH2 0x37c
0x378 PUSH2 0xb3e
0x37b JUMP
---
0x374: JUMPDEST 
0x375: V284 = 0x37c
0x378: V285 = 0xb3e
0x37b: JUMP 0xb3e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x37c]
Exit stack: [V12, 0x37c]

================================

Block 0x37c
[0x37c:0x38a]
---
Predecessors: [0xb3e, 0xc29]
Successors: [0x38b, 0x38c]
---
0x37c JUMPDEST
0x37d PUSH1 0x40
0x37f MLOAD
0x380 DUP1
0x381 DUP3
0x382 PUSH1 0x2
0x384 DUP2
0x385 GT
0x386 ISZERO
0x387 PUSH2 0x38c
0x38a JUMPI
---
0x37c: JUMPDEST 
0x37d: V286 = 0x40
0x37f: V287 = M[0x40]
0x382: V288 = 0x2
0x385: V289 = GT S0 0x2
0x386: V290 = ISZERO V289
0x387: V291 = 0x38c
0x38a: JUMPI 0x38c V290
---
Entry stack: [V12, 0x37c, S0]
Stack pops: 1
Stack additions: [S0, V287, V287, S0]
Exit stack: [V12, 0x37c, S0, V287, V287, S0]

================================

Block 0x38b
[0x38b:0x38b]
---
Predecessors: [0x37c]
Successors: []
---
0x38b INVALID
---
0x38b: INVALID 
---
Entry stack: [V12, 0x37c, S3, V287, V287, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x37c, S3, V287, V287, S0]

================================

Block 0x38c
[0x38c:0x39f]
---
Predecessors: [0x37c, 0x408]
Successors: []
---
0x38c JUMPDEST
0x38d PUSH1 0xff
0x38f AND
0x390 DUP2
0x391 MSTORE
0x392 PUSH1 0x20
0x394 ADD
0x395 SWAP2
0x396 POP
0x397 POP
0x398 PUSH1 0x40
0x39a MLOAD
0x39b DUP1
0x39c SWAP2
0x39d SUB
0x39e SWAP1
0x39f RETURN
---
0x38c: JUMPDEST 
0x38d: V292 = 0xff
0x38f: V293 = AND 0xff S0
0x391: M[S1] = V293
0x392: V294 = 0x20
0x394: V295 = ADD 0x20 S1
0x398: V296 = 0x40
0x39a: V297 = M[0x40]
0x39d: V298 = SUB V295 V297
0x39f: RETURN V297 V298
---
Entry stack: [V12, 0x37c, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x37c]

================================

Block 0x3a0
[0x3a0:0x3a6]
---
Predecessors: [0xb4]
Successors: [0x3a7, 0x3a8]
---
0x3a0 JUMPDEST
0x3a1 CALLVALUE
0x3a2 ISZERO
0x3a3 PUSH2 0x3a8
0x3a6 JUMPI
---
0x3a0: JUMPDEST 
0x3a1: V299 = CALLVALUE
0x3a2: V300 = ISZERO V299
0x3a3: V301 = 0x3a8
0x3a6: JUMPI 0x3a8 V300
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a7
[0x3a7:0x3a7]
---
Predecessors: [0x3a0]
Successors: []
---
0x3a7 INVALID
---
0x3a7: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a8
[0x3a8:0x3f5]
---
Predecessors: [0x3a0]
Successors: [0xb47]
---
0x3a8 JUMPDEST
0x3a9 PUSH2 0x1cd
0x3ac PUSH1 0x4
0x3ae DUP1
0x3af DUP1
0x3b0 CALLDATALOAD
0x3b1 SWAP1
0x3b2 PUSH1 0x20
0x3b4 ADD
0x3b5 SWAP1
0x3b6 DUP3
0x3b7 ADD
0x3b8 DUP1
0x3b9 CALLDATALOAD
0x3ba SWAP1
0x3bb PUSH1 0x20
0x3bd ADD
0x3be SWAP1
0x3bf DUP1
0x3c0 DUP1
0x3c1 PUSH1 0x1f
0x3c3 ADD
0x3c4 PUSH1 0x20
0x3c6 DUP1
0x3c7 SWAP2
0x3c8 DIV
0x3c9 MUL
0x3ca PUSH1 0x20
0x3cc ADD
0x3cd PUSH1 0x40
0x3cf MLOAD
0x3d0 SWAP1
0x3d1 DUP2
0x3d2 ADD
0x3d3 PUSH1 0x40
0x3d5 MSTORE
0x3d6 DUP1
0x3d7 SWAP4
0x3d8 SWAP3
0x3d9 SWAP2
0x3da SWAP1
0x3db DUP2
0x3dc DUP2
0x3dd MSTORE
0x3de PUSH1 0x20
0x3e0 ADD
0x3e1 DUP4
0x3e2 DUP4
0x3e3 DUP1
0x3e4 DUP3
0x3e5 DUP5
0x3e6 CALLDATACOPY
0x3e7 POP
0x3e8 SWAP5
0x3e9 SWAP7
0x3ea POP
0x3eb PUSH2 0xb47
0x3ee SWAP6
0x3ef POP
0x3f0 POP
0x3f1 POP
0x3f2 POP
0x3f3 POP
0x3f4 POP
0x3f5 JUMP
---
0x3a8: JUMPDEST 
0x3a9: V302 = 0x1cd
0x3ac: V303 = 0x4
0x3b0: V304 = CALLDATALOAD 0x4
0x3b2: V305 = 0x20
0x3b4: V306 = ADD 0x20 0x4
0x3b7: V307 = ADD 0x4 V304
0x3b9: V308 = CALLDATALOAD V307
0x3bb: V309 = 0x20
0x3bd: V310 = ADD 0x20 V307
0x3c1: V311 = 0x1f
0x3c3: V312 = ADD 0x1f V308
0x3c4: V313 = 0x20
0x3c8: V314 = DIV V312 0x20
0x3c9: V315 = MUL V314 0x20
0x3ca: V316 = 0x20
0x3cc: V317 = ADD 0x20 V315
0x3cd: V318 = 0x40
0x3cf: V319 = M[0x40]
0x3d2: V320 = ADD V319 V317
0x3d3: V321 = 0x40
0x3d5: M[0x40] = V320
0x3dd: M[V319] = V308
0x3de: V322 = 0x20
0x3e0: V323 = ADD 0x20 V319
0x3e6: CALLDATACOPY V323 V310 V308
0x3eb: V324 = 0xb47
0x3f5: JUMP 0xb47
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1cd, V319]
Exit stack: [V12, 0x1cd, V319]

================================

Block 0x3f6
[0x3f6:0x3f7]
---
Predecessors: []
Successors: []
---
0x3f6 JUMPDEST
0x3f7 STOP
---
0x3f6: JUMPDEST 
0x3f7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3f8
[0x3f8:0x3fe]
---
Predecessors: [0xbf]
Successors: [0x3ff, 0x400]
---
0x3f8 JUMPDEST
0x3f9 CALLVALUE
0x3fa ISZERO
0x3fb PUSH2 0x400
0x3fe JUMPI
---
0x3f8: JUMPDEST 
0x3f9: V325 = CALLVALUE
0x3fa: V326 = ISZERO V325
0x3fb: V327 = 0x400
0x3fe: JUMPI 0x400 V326
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ff
[0x3ff:0x3ff]
---
Predecessors: [0x3f8]
Successors: []
---
0x3ff INVALID
---
0x3ff: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x400
[0x400:0x407]
---
Predecessors: [0x3f8]
Successors: [0xc29]
---
0x400 JUMPDEST
0x401 PUSH2 0x37c
0x404 PUSH2 0xc29
0x407 JUMP
---
0x400: JUMPDEST 
0x401: V328 = 0x37c
0x404: V329 = 0xc29
0x407: JUMP 0xc29
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x37c]
Exit stack: [V12, 0x37c]

================================

Block 0x408
[0x408:0x416]
---
Predecessors: []
Successors: [0x38c, 0x417]
---
0x408 JUMPDEST
0x409 PUSH1 0x40
0x40b MLOAD
0x40c DUP1
0x40d DUP3
0x40e PUSH1 0x2
0x410 DUP2
0x411 GT
0x412 ISZERO
0x413 PUSH2 0x38c
0x416 JUMPI
---
0x408: JUMPDEST 
0x409: V330 = 0x40
0x40b: V331 = M[0x40]
0x40e: V332 = 0x2
0x411: V333 = GT S0 0x2
0x412: V334 = ISZERO V333
0x413: V335 = 0x38c
0x416: JUMPI 0x38c V334
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V331, V331, S0]
Exit stack: [S0, V331, V331, S0]

================================

Block 0x417
[0x417:0x42b]
---
Predecessors: [0x408]
Successors: []
---
0x417 INVALID
0x418 JUMPDEST
0x419 PUSH1 0xff
0x41b AND
0x41c DUP2
0x41d MSTORE
0x41e PUSH1 0x20
0x420 ADD
0x421 SWAP2
0x422 POP
0x423 POP
0x424 PUSH1 0x40
0x426 MLOAD
0x427 DUP1
0x428 SWAP2
0x429 SUB
0x42a SWAP1
0x42b RETURN
---
0x417: INVALID 
0x418: JUMPDEST 
0x419: V336 = 0xff
0x41b: V337 = AND 0xff S0
0x41d: M[S1] = V337
0x41e: V338 = 0x20
0x420: V339 = ADD 0x20 S1
0x424: V340 = 0x40
0x426: V341 = M[0x40]
0x429: V342 = SUB V339 V341
0x42b: RETURN V341 V342
---
Entry stack: [S3, V331, V331, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x42c
[0x42c:0x432]
---
Predecessors: [0xca]
Successors: [0x433, 0x434]
---
0x42c JUMPDEST
0x42d CALLVALUE
0x42e ISZERO
0x42f PUSH2 0x434
0x432 JUMPI
---
0x42c: JUMPDEST 
0x42d: V343 = CALLVALUE
0x42e: V344 = ISZERO V343
0x42f: V345 = 0x434
0x432: JUMPI 0x434 V344
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x433
[0x433:0x433]
---
Predecessors: [0x42c]
Successors: []
---
0x433 INVALID
---
0x433: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x434
[0x434:0x43b]
---
Predecessors: [0x42c]
Successors: [0xc32]
---
0x434 JUMPDEST
0x435 PUSH2 0x244
0x438 PUSH2 0xc32
0x43b JUMP
---
0x434: JUMPDEST 
0x435: V346 = 0x244
0x438: V347 = 0xc32
0x43b: JUMP 0xc32
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x244]
Exit stack: [V12, 0x244]

================================

Block 0x43c
[0x43c:0x44d]
---
Predecessors: []
Successors: []
---
0x43c JUMPDEST
0x43d PUSH1 0x40
0x43f DUP1
0x440 MLOAD
0x441 SWAP2
0x442 DUP3
0x443 MSTORE
0x444 MLOAD
0x445 SWAP1
0x446 DUP2
0x447 SWAP1
0x448 SUB
0x449 PUSH1 0x20
0x44b ADD
0x44c SWAP1
0x44d RETURN
---
0x43c: JUMPDEST 
0x43d: V348 = 0x40
0x440: V349 = M[0x40]
0x443: M[V349] = S0
0x444: V350 = M[0x40]
0x448: V351 = SUB V349 V350
0x449: V352 = 0x20
0x44b: V353 = ADD 0x20 V351
0x44d: RETURN V350 V353
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x44e
[0x44e:0x454]
---
Predecessors: [0xd5]
Successors: [0x455, 0x456]
---
0x44e JUMPDEST
0x44f CALLVALUE
0x450 ISZERO
0x451 PUSH2 0x456
0x454 JUMPI
---
0x44e: JUMPDEST 
0x44f: V354 = CALLVALUE
0x450: V355 = ISZERO V354
0x451: V356 = 0x456
0x454: JUMPI 0x456 V355
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x455
[0x455:0x455]
---
Predecessors: [0x44e]
Successors: []
---
0x455 INVALID
---
0x455: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x456
[0x456:0x45d]
---
Predecessors: [0x44e]
Successors: [0xc38]
---
0x456 JUMPDEST
0x457 PUSH2 0x244
0x45a PUSH2 0xc38
0x45d JUMP
---
0x456: JUMPDEST 
0x457: V357 = 0x244
0x45a: V358 = 0xc38
0x45d: JUMP 0xc38
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x244]
Exit stack: [V12, 0x244]

================================

Block 0x45e
[0x45e:0x46f]
---
Predecessors: []
Successors: []
---
0x45e JUMPDEST
0x45f PUSH1 0x40
0x461 DUP1
0x462 MLOAD
0x463 SWAP2
0x464 DUP3
0x465 MSTORE
0x466 MLOAD
0x467 SWAP1
0x468 DUP2
0x469 SWAP1
0x46a SUB
0x46b PUSH1 0x20
0x46d ADD
0x46e SWAP1
0x46f RETURN
---
0x45e: JUMPDEST 
0x45f: V359 = 0x40
0x462: V360 = M[0x40]
0x465: M[V360] = S0
0x466: V361 = M[0x40]
0x46a: V362 = SUB V360 V361
0x46b: V363 = 0x20
0x46d: V364 = ADD 0x20 V362
0x46f: RETURN V361 V364
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x470
[0x470:0x4ac]
---
Predecessors: [0xea]
Successors: [0x4ad, 0x4f3]
---
0x470 JUMPDEST
0x471 PUSH1 0x2
0x473 DUP1
0x474 SLOAD
0x475 PUSH1 0x40
0x477 DUP1
0x478 MLOAD
0x479 PUSH1 0x20
0x47b PUSH1 0x1
0x47d DUP5
0x47e AND
0x47f ISZERO
0x480 PUSH2 0x100
0x483 MUL
0x484 PUSH1 0x0
0x486 NOT
0x487 ADD
0x488 SWAP1
0x489 SWAP4
0x48a AND
0x48b DUP5
0x48c SWAP1
0x48d DIV
0x48e PUSH1 0x1f
0x490 DUP2
0x491 ADD
0x492 DUP5
0x493 SWAP1
0x494 DIV
0x495 DUP5
0x496 MUL
0x497 DUP3
0x498 ADD
0x499 DUP5
0x49a ADD
0x49b SWAP1
0x49c SWAP3
0x49d MSTORE
0x49e DUP2
0x49f DUP2
0x4a0 MSTORE
0x4a1 SWAP3
0x4a2 SWAP2
0x4a3 DUP4
0x4a4 ADD
0x4a5 DUP3
0x4a6 DUP3
0x4a7 DUP1
0x4a8 ISZERO
0x4a9 PUSH2 0x4f3
0x4ac JUMPI
---
0x470: JUMPDEST 
0x471: V365 = 0x2
0x474: V366 = S[0x2]
0x475: V367 = 0x40
0x478: V368 = M[0x40]
0x479: V369 = 0x20
0x47b: V370 = 0x1
0x47e: V371 = AND V366 0x1
0x47f: V372 = ISZERO V371
0x480: V373 = 0x100
0x483: V374 = MUL 0x100 V372
0x484: V375 = 0x0
0x486: V376 = NOT 0x0
0x487: V377 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V374
0x48a: V378 = AND V366 V377
0x48d: V379 = DIV V378 0x2
0x48e: V380 = 0x1f
0x491: V381 = ADD V379 0x1f
0x494: V382 = DIV V381 0x20
0x496: V383 = MUL 0x20 V382
0x498: V384 = ADD V368 V383
0x49a: V385 = ADD 0x20 V384
0x49d: M[0x40] = V385
0x4a0: M[V368] = V379
0x4a4: V386 = ADD V368 0x20
0x4a8: V387 = ISZERO V379
0x4a9: V388 = 0x4f3
0x4ac: JUMPI 0x4f3 V387
---
Entry stack: [V12, 0xf2]
Stack pops: 0
Stack additions: [V368, 0x2, V379, V386, 0x2, V379]
Exit stack: [V12, 0xf2, V368, 0x2, V379, V386, 0x2, V379]

================================

Block 0x4ad
[0x4ad:0x4b4]
---
Predecessors: [0x470]
Successors: [0x4b5, 0x4c8]
---
0x4ad DUP1
0x4ae PUSH1 0x1f
0x4b0 LT
0x4b1 PUSH2 0x4c8
0x4b4 JUMPI
---
0x4ae: V389 = 0x1f
0x4b0: V390 = LT 0x1f V379
0x4b1: V391 = 0x4c8
0x4b4: JUMPI 0x4c8 V390
---
Entry stack: [V12, 0xf2, V368, 0x2, V379, V386, 0x2, V379]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xf2, V368, 0x2, V379, V386, 0x2, V379]

================================

Block 0x4b5
[0x4b5:0x4c7]
---
Predecessors: [0x4ad]
Successors: [0x4f3]
---
0x4b5 PUSH2 0x100
0x4b8 DUP1
0x4b9 DUP4
0x4ba SLOAD
0x4bb DIV
0x4bc MUL
0x4bd DUP4
0x4be MSTORE
0x4bf SWAP2
0x4c0 PUSH1 0x20
0x4c2 ADD
0x4c3 SWAP2
0x4c4 PUSH2 0x4f3
0x4c7 JUMP
---
0x4b5: V392 = 0x100
0x4ba: V393 = S[0x2]
0x4bb: V394 = DIV V393 0x100
0x4bc: V395 = MUL V394 0x100
0x4be: M[V386] = V395
0x4c0: V396 = 0x20
0x4c2: V397 = ADD 0x20 V386
0x4c4: V398 = 0x4f3
0x4c7: JUMP 0x4f3
---
Entry stack: [V12, 0xf2, V368, 0x2, V379, V386, 0x2, V379]
Stack pops: 3
Stack additions: [V397, S1, S0]
Exit stack: [V12, 0xf2, V368, 0x2, V379, V397, 0x2, V379]

================================

Block 0x4c8
[0x4c8:0x4d5]
---
Predecessors: [0x4ad, 0xa6d]
Successors: [0x4d6]
---
0x4c8 JUMPDEST
0x4c9 DUP3
0x4ca ADD
0x4cb SWAP2
0x4cc SWAP1
0x4cd PUSH1 0x0
0x4cf MSTORE
0x4d0 PUSH1 0x20
0x4d2 PUSH1 0x0
0x4d4 SHA3
0x4d5 SWAP1
---
0x4c8: JUMPDEST 
0x4ca: V399 = ADD S2 S0
0x4cd: V400 = 0x0
0x4cf: M[0x0] = {0x2, 0x3}
0x4d0: V401 = 0x20
0x4d2: V402 = 0x0
0x4d4: V403 = SHA3 0x0 0x20
---
Entry stack: [V12, 0xf2, S5, {0x2, 0x3}, S3, S2, {0x2, 0x3}, S0]
Stack pops: 3
Stack additions: [V399, V403, S2]
Exit stack: [V12, 0xf2, S5, {0x2, 0x3}, S3, V399, V403, S2]

================================

Block 0x4d6
[0x4d6:0x4e9]
---
Predecessors: [0x4c8, 0x4d6, 0xa96]
Successors: [0x4d6, 0x4ea]
---
0x4d6 JUMPDEST
0x4d7 DUP2
0x4d8 SLOAD
0x4d9 DUP2
0x4da MSTORE
0x4db SWAP1
0x4dc PUSH1 0x1
0x4de ADD
0x4df SWAP1
0x4e0 PUSH1 0x20
0x4e2 ADD
0x4e3 DUP1
0x4e4 DUP4
0x4e5 GT
0x4e6 PUSH2 0x4d6
0x4e9 JUMPI
---
0x4d6: JUMPDEST 
0x4d8: V404 = S[S1]
0x4da: M[S0] = V404
0x4dc: V405 = 0x1
0x4de: V406 = ADD 0x1 S1
0x4e0: V407 = 0x20
0x4e2: V408 = ADD 0x20 S0
0x4e5: V409 = GT S2 V408
0x4e6: V410 = 0x4d6
0x4e9: JUMPI 0x4d6 V409
---
Entry stack: [V12, 0xf2, S5, {0x2, 0x3}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, V406, V408]
Exit stack: [V12, 0xf2, S5, {0x2, 0x3}, S3, S2, V406, V408]

================================

Block 0x4ea
[0x4ea:0x4f2]
---
Predecessors: [0x4d6]
Successors: [0x4f3]
---
0x4ea DUP3
0x4eb SWAP1
0x4ec SUB
0x4ed PUSH1 0x1f
0x4ef AND
0x4f0 DUP3
0x4f1 ADD
0x4f2 SWAP2
---
0x4ec: V411 = SUB V408 S2
0x4ed: V412 = 0x1f
0x4ef: V413 = AND 0x1f V411
0x4f1: V414 = ADD S2 V413
---
Entry stack: [V12, 0xf2, S5, {0x2, 0x3}, S3, S2, V406, V408]
Stack pops: 3
Stack additions: [V414, S1, S2]
Exit stack: [V12, 0xf2, S5, {0x2, 0x3}, S3, V414, V406, S2]

================================

Block 0x4f3
[0x4f3:0x4fa]
---
Predecessors: [0x470, 0x4b5, 0x4ea, 0xa2d, 0xa75]
Successors: [0xf2]
---
0x4f3 JUMPDEST
0x4f4 POP
0x4f5 POP
0x4f6 POP
0x4f7 POP
0x4f8 POP
0x4f9 DUP2
0x4fa JUMP
---
0x4f3: JUMPDEST 
0x4fa: JUMP 0xf2
---
Entry stack: [V12, 0xf2, S5, {0x2, 0x3}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0xf2, S5]

================================

Block 0x4fb
[0x4fb:0x509]
---
Predecessors: [0x17a]
Successors: [0x182]
---
0x4fb JUMPDEST
0x4fc PUSH1 0x0
0x4fe SLOAD
0x4ff PUSH1 0x1
0x501 PUSH1 0xa0
0x503 PUSH1 0x2
0x505 EXP
0x506 SUB
0x507 AND
0x508 DUP2
0x509 JUMP
---
0x4fb: JUMPDEST 
0x4fc: V415 = 0x0
0x4fe: V416 = S[0x0]
0x4ff: V417 = 0x1
0x501: V418 = 0xa0
0x503: V419 = 0x2
0x505: V420 = EXP 0x2 0xa0
0x506: V421 = SUB 0x10000000000000000000000000000000000000000 0x1
0x507: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x509: JUMP 0x182
---
Entry stack: [V12, 0x182]
Stack pops: 1
Stack additions: [S0, V422]
Exit stack: [V12, 0x182, V422]

================================

Block 0x50a
[0x50a:0x51f]
---
Predecessors: [0x1a6]
Successors: [0x520, 0x521]
---
0x50a JUMPDEST
0x50b PUSH1 0x8
0x50d SLOAD
0x50e PUSH1 0x0
0x510 SWAP1
0x511 PUSH1 0x1
0x513 SWAP1
0x514 PUSH1 0xff
0x516 AND
0x517 PUSH1 0x2
0x519 DUP2
0x51a GT
0x51b ISZERO
0x51c PUSH2 0x521
0x51f JUMPI
---
0x50a: JUMPDEST 
0x50b: V423 = 0x8
0x50d: V424 = S[0x8]
0x50e: V425 = 0x0
0x511: V426 = 0x1
0x514: V427 = 0xff
0x516: V428 = AND 0xff V424
0x517: V429 = 0x2
0x51a: V430 = GT V428 0x2
0x51b: V431 = ISZERO V430
0x51c: V432 = 0x521
0x51f: JUMPI 0x521 V431
---
Entry stack: [V12, 0x1b1, V136]
Stack pops: 0
Stack additions: [0x0, 0x1, V428]
Exit stack: [V12, 0x1b1, V136, 0x0, 0x1, V428]

================================

Block 0x520
[0x520:0x520]
---
Predecessors: [0x50a]
Successors: []
---
0x520 INVALID
---
0x520: INVALID 
---
Entry stack: [V12, 0x1b1, V136, 0x0, 0x1, V428]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, V136, 0x0, 0x1, V428]

================================

Block 0x521
[0x521:0x52b]
---
Predecessors: [0x50a]
Successors: [0x52c, 0x52d]
---
0x521 JUMPDEST
0x522 DUP2
0x523 PUSH1 0x2
0x525 DUP2
0x526 GT
0x527 ISZERO
0x528 PUSH2 0x52d
0x52b JUMPI
---
0x521: JUMPDEST 
0x523: V433 = 0x2
0x526: V434 = GT 0x1 0x2
0x527: V435 = ISZERO 0x0
0x528: V436 = 0x52d
0x52b: JUMPI 0x52d 0x1
---
Entry stack: [V12, 0x1b1, V136, 0x0, 0x1, V428]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V12, 0x1b1, V136, 0x0, 0x1, V428, 0x1]

================================

Block 0x52c
[0x52c:0x52c]
---
Predecessors: [0x521]
Successors: []
---
0x52c INVALID
---
0x52c: INVALID 
---
Entry stack: [V12, 0x1b1, V136, 0x0, 0x1, V428, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, V136, 0x0, 0x1, V428, 0x1]

================================

Block 0x52d
[0x52d:0x532]
---
Predecessors: [0x521]
Successors: [0x533, 0x538]
---
0x52d JUMPDEST
0x52e EQ
0x52f PUSH2 0x538
0x532 JUMPI
---
0x52d: JUMPDEST 
0x52e: V437 = EQ 0x1 V428
0x52f: V438 = 0x538
0x532: JUMPI 0x538 V437
---
Entry stack: [V12, 0x1b1, V136, 0x0, 0x1, V428, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x1b1, V136, 0x0, 0x1]

================================

Block 0x533
[0x533:0x537]
---
Predecessors: [0x52d]
Successors: []
---
0x533 PUSH1 0x0
0x535 PUSH1 0x0
0x537 REVERT
---
0x533: V439 = 0x0
0x535: V440 = 0x0
0x537: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1b1, V136, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, V136, 0x0, 0x1]

================================

Block 0x538
[0x538:0x54e]
---
Predecessors: [0x52d]
Successors: [0x54f, 0x554]
---
0x538 JUMPDEST
0x539 PUSH1 0x0
0x53b SLOAD
0x53c CALLER
0x53d PUSH1 0x1
0x53f PUSH1 0xa0
0x541 PUSH1 0x2
0x543 EXP
0x544 SUB
0x545 SWAP1
0x546 DUP2
0x547 AND
0x548 SWAP2
0x549 AND
0x54a EQ
0x54b PUSH2 0x554
0x54e JUMPI
---
0x538: JUMPDEST 
0x539: V441 = 0x0
0x53b: V442 = S[0x0]
0x53c: V443 = CALLER
0x53d: V444 = 0x1
0x53f: V445 = 0xa0
0x541: V446 = 0x2
0x543: V447 = EXP 0x2 0xa0
0x544: V448 = SUB 0x10000000000000000000000000000000000000000 0x1
0x547: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff V443
0x549: V450 = AND V442 0xffffffffffffffffffffffffffffffffffffffff
0x54a: V451 = EQ V450 V449
0x54b: V452 = 0x554
0x54e: JUMPI 0x554 V451
---
Entry stack: [V12, 0x1b1, V136, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, V136, 0x0, 0x1]

================================

Block 0x54f
[0x54f:0x553]
---
Predecessors: [0x538]
Successors: []
---
0x54f PUSH1 0x0
0x551 PUSH1 0x0
0x553 REVERT
---
0x54f: V453 = 0x0
0x551: V454 = 0x0
0x553: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1b1, V136, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, V136, 0x0, 0x1]

================================

Block 0x554
[0x554:0x55c]
---
Predecessors: [0x538]
Successors: [0xc3e]
---
0x554 JUMPDEST
0x555 PUSH2 0x55d
0x558 DUP4
0x559 PUSH2 0xc3e
0x55c JUMP
---
0x554: JUMPDEST 
0x555: V455 = 0x55d
0x559: V456 = 0xc3e
0x55c: JUMP 0xc3e
---
Entry stack: [V12, 0x1b1, V136, 0x0, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x55d, S2]
Exit stack: [V12, 0x1b1, V136, 0x0, 0x1, 0x55d, V136]

================================

Block 0x55d
[0x55d:0x55f]
---
Predecessors: [0xd28]
Successors: [0x560]
---
0x55d JUMPDEST
0x55e SWAP2
0x55f POP
---
0x55d: JUMPDEST 
---
Entry stack: [V12, 0x1b1, S3, {0x0, 0x1cd}, 0x1, S0]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V12, 0x1b1, S3, S0, 0x1]

================================

Block 0x560
[0x560:0x560]
---
Predecessors: [0x55d]
Successors: [0x561]
---
0x560 JUMPDEST
---
0x560: JUMPDEST 
---
Entry stack: [V12, 0x1b1, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S2, S1, 0x1]

================================

Block 0x561
[0x561:0x561]
---
Predecessors: [0x560]
Successors: [0x562]
---
0x561 JUMPDEST
---
0x561: JUMPDEST 
---
Entry stack: [V12, 0x1b1, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S2, S1, 0x1]

================================

Block 0x562
[0x562:0x567]
---
Predecessors: [0x561]
Successors: [0x1b1]
---
0x562 JUMPDEST
0x563 POP
0x564 SWAP2
0x565 SWAP1
0x566 POP
0x567 JUMP
---
0x562: JUMPDEST 
0x567: JUMP 0x1b1
---
Entry stack: [V12, 0x1b1, S2, S1, 0x1]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, S1]

================================

Block 0x568
[0x568:0x57a]
---
Predecessors: [0x1c5]
Successors: [0x57b, 0x57c]
---
0x568 JUMPDEST
0x569 PUSH1 0x8
0x56b SLOAD
0x56c PUSH1 0x0
0x56e SWAP1
0x56f PUSH1 0xff
0x571 AND
0x572 PUSH1 0x2
0x574 DUP2
0x575 GT
0x576 ISZERO
0x577 PUSH2 0x57c
0x57a JUMPI
---
0x568: JUMPDEST 
0x569: V457 = 0x8
0x56b: V458 = S[0x8]
0x56c: V459 = 0x0
0x56f: V460 = 0xff
0x571: V461 = AND 0xff V458
0x572: V462 = 0x2
0x575: V463 = GT V461 0x2
0x576: V464 = ISZERO V463
0x577: V465 = 0x57c
0x57a: JUMPI 0x57c V464
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: [0x0, V461]
Exit stack: [V12, 0x1cd, 0x0, V461]

================================

Block 0x57b
[0x57b:0x57b]
---
Predecessors: [0x568]
Successors: []
---
0x57b INVALID
---
0x57b: INVALID 
---
Entry stack: [V12, 0x1cd, 0x0, V461]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x0, V461]

================================

Block 0x57c
[0x57c:0x586]
---
Predecessors: [0x568]
Successors: [0x587, 0x588]
---
0x57c JUMPDEST
0x57d DUP2
0x57e PUSH1 0x2
0x580 DUP2
0x581 GT
0x582 ISZERO
0x583 PUSH2 0x588
0x586 JUMPI
---
0x57c: JUMPDEST 
0x57e: V466 = 0x2
0x581: V467 = GT 0x0 0x2
0x582: V468 = ISZERO 0x0
0x583: V469 = 0x588
0x586: JUMPI 0x588 0x1
---
Entry stack: [V12, 0x1cd, 0x0, V461]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V12, 0x1cd, 0x0, V461, 0x0]

================================

Block 0x587
[0x587:0x587]
---
Predecessors: [0x57c]
Successors: []
---
0x587 INVALID
---
0x587: INVALID 
---
Entry stack: [V12, 0x1cd, 0x0, V461, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x0, V461, 0x0]

================================

Block 0x588
[0x588:0x58d]
---
Predecessors: [0x57c]
Successors: [0x58e, 0x593]
---
0x588 JUMPDEST
0x589 EQ
0x58a PUSH2 0x593
0x58d JUMPI
---
0x588: JUMPDEST 
0x589: V470 = EQ 0x0 V461
0x58a: V471 = 0x593
0x58d: JUMPI 0x593 V470
---
Entry stack: [V12, 0x1cd, 0x0, V461, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x1cd, 0x0]

================================

Block 0x58e
[0x58e:0x592]
---
Predecessors: [0x588]
Successors: []
---
0x58e PUSH1 0x0
0x590 PUSH1 0x0
0x592 REVERT
---
0x58e: V472 = 0x0
0x590: V473 = 0x0
0x592: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x0]

================================

Block 0x593
[0x593:0x59d]
---
Predecessors: [0x588]
Successors: [0x59e, 0x5a3]
---
0x593 JUMPDEST
0x594 PUSH1 0x4
0x596 SLOAD
0x597 CALLVALUE
0x598 LT
0x599 ISZERO
0x59a PUSH2 0x5a3
0x59d JUMPI
---
0x593: JUMPDEST 
0x594: V474 = 0x4
0x596: V475 = S[0x4]
0x597: V476 = CALLVALUE
0x598: V477 = LT V476 V475
0x599: V478 = ISZERO V477
0x59a: V479 = 0x5a3
0x59d: JUMPI 0x5a3 V478
---
Entry stack: [V12, 0x1cd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x0]

================================

Block 0x59e
[0x59e:0x5a2]
---
Predecessors: [0x593]
Successors: []
---
0x59e PUSH1 0x0
0x5a0 PUSH1 0x0
0x5a2 REVERT
---
0x59e: V480 = 0x0
0x5a0: V481 = 0x0
0x5a2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x0]

================================

Block 0x5a3
[0x5a3:0x5d5]
---
Predecessors: [0x593]
Successors: [0x5d6]
---
0x5a3 JUMPDEST
0x5a4 PUSH1 0x1
0x5a6 DUP1
0x5a7 SLOAD
0x5a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bd NOT
0x5be AND
0x5bf CALLER
0x5c0 PUSH1 0x1
0x5c2 PUSH1 0xa0
0x5c4 PUSH1 0x2
0x5c6 EXP
0x5c7 SUB
0x5c8 AND
0x5c9 OR
0x5ca DUP2
0x5cb SSTORE
0x5cc PUSH1 0x8
0x5ce DUP1
0x5cf SLOAD
0x5d0 PUSH1 0xff
0x5d2 NOT
0x5d3 AND
0x5d4 DUP3
0x5d5 DUP1
---
0x5a3: JUMPDEST 
0x5a4: V482 = 0x1
0x5a7: V483 = S[0x1]
0x5a8: V484 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bd: V485 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5be: V486 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V483
0x5bf: V487 = CALLER
0x5c0: V488 = 0x1
0x5c2: V489 = 0xa0
0x5c4: V490 = 0x2
0x5c6: V491 = EXP 0x2 0xa0
0x5c7: V492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c8: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x5c9: V494 = OR V493 V486
0x5cb: S[0x1] = V494
0x5cc: V495 = 0x8
0x5cf: V496 = S[0x8]
0x5d0: V497 = 0xff
0x5d2: V498 = NOT 0xff
0x5d3: V499 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V496
---
Entry stack: [V12, 0x1cd, 0x0]
Stack pops: 0
Stack additions: [0x1, 0x8, V499, 0x1, 0x1]
Exit stack: [V12, 0x1cd, 0x0, 0x1, 0x8, V499, 0x1, 0x1]

================================

Block 0x5d6
[0x5d6:0x61c]
---
Predecessors: [0x5a3]
Successors: [0x61d]
---
0x5d6 JUMPDEST
0x5d7 MUL
0x5d8 OR
0x5d9 SWAP1
0x5da SSTORE
0x5db POP
0x5dc PUSH1 0x1
0x5de SLOAD
0x5df PUSH1 0x40
0x5e1 DUP1
0x5e2 MLOAD
0x5e3 PUSH1 0x1
0x5e5 PUSH1 0xa0
0x5e7 PUSH1 0x2
0x5e9 EXP
0x5ea SUB
0x5eb SWAP1
0x5ec SWAP3
0x5ed AND
0x5ee DUP3
0x5ef MSTORE
0x5f0 MLOAD
0x5f1 PUSH32 0x385d85909904c479680cfb49104dd25dd686a79a13b842e5ab5f1fab8fa0fb2a
0x612 SWAP2
0x613 DUP2
0x614 SWAP1
0x615 SUB
0x616 PUSH1 0x20
0x618 ADD
0x619 SWAP1
0x61a LOG1
0x61b PUSH1 0x0
---
0x5d6: JUMPDEST 
0x5d7: V500 = MUL 0x1 0x1
0x5d8: V501 = OR 0x1 V499
0x5da: S[0x8] = V501
0x5dc: V502 = 0x1
0x5de: V503 = S[0x1]
0x5df: V504 = 0x40
0x5e2: V505 = M[0x40]
0x5e3: V506 = 0x1
0x5e5: V507 = 0xa0
0x5e7: V508 = 0x2
0x5e9: V509 = EXP 0x2 0xa0
0x5ea: V510 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ed: V511 = AND V503 0xffffffffffffffffffffffffffffffffffffffff
0x5ef: M[V505] = V511
0x5f0: V512 = M[0x40]
0x5f1: V513 = 0x385d85909904c479680cfb49104dd25dd686a79a13b842e5ab5f1fab8fa0fb2a
0x615: V514 = SUB V505 V512
0x616: V515 = 0x20
0x618: V516 = ADD 0x20 V514
0x61a: LOG V512 V516 0x385d85909904c479680cfb49104dd25dd686a79a13b842e5ab5f1fab8fa0fb2a
0x61b: V517 = 0x0
---
Entry stack: [V12, 0x1cd, 0x0, 0x1, 0x8, V499, 0x1, 0x1]
Stack pops: 5
Stack additions: [0x0]
Exit stack: [V12, 0x1cd, 0x0, 0x0]

================================

Block 0x61d
[0x61d:0x62c]
---
Predecessors: [0x5d6]
Successors: [0x62d, 0x62e]
---
0x61d JUMPDEST
0x61e PUSH1 0x5
0x620 SLOAD
0x621 PUSH1 0xff
0x623 AND
0x624 PUSH1 0x2
0x626 DUP2
0x627 GT
0x628 ISZERO
0x629 PUSH2 0x62e
0x62c JUMPI
---
0x61d: JUMPDEST 
0x61e: V518 = 0x5
0x620: V519 = S[0x5]
0x621: V520 = 0xff
0x623: V521 = AND 0xff V519
0x624: V522 = 0x2
0x627: V523 = GT V521 0x2
0x628: V524 = ISZERO V523
0x629: V525 = 0x62e
0x62c: JUMPI 0x62e V524
---
Entry stack: [V12, 0x1cd, 0x0, 0x0]
Stack pops: 0
Stack additions: [V521]
Exit stack: [V12, 0x1cd, 0x0, 0x0, V521]

================================

Block 0x62d
[0x62d:0x62d]
---
Predecessors: [0x61d]
Successors: []
---
0x62d INVALID
---
0x62d: INVALID 
---
Entry stack: [V12, 0x1cd, 0x0, 0x0, V521]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x0, 0x0, V521]

================================

Block 0x62e
[0x62e:0x633]
---
Predecessors: [0x61d]
Successors: [0x634, 0x63c]
---
0x62e JUMPDEST
0x62f EQ
0x630 PUSH2 0x63c
0x633 JUMPI
---
0x62e: JUMPDEST 
0x62f: V526 = EQ V521 0x0
0x630: V527 = 0x63c
0x633: JUMPI 0x63c V526
---
Entry stack: [V12, 0x1cd, 0x0, 0x0, V521]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x1cd, 0x0]

================================

Block 0x634
[0x634:0x63b]
---
Predecessors: [0x62e]
Successors: [0x63c]
---
0x634 PUSH1 0x6
0x636 SLOAD
0x637 TIMESTAMP
0x638 ADD
0x639 PUSH1 0x7
0x63b SSTORE
---
0x634: V528 = 0x6
0x636: V529 = S[0x6]
0x637: V530 = TIMESTAMP
0x638: V531 = ADD V530 V529
0x639: V532 = 0x7
0x63b: S[0x7] = V531
---
Entry stack: [V12, 0x1cd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x0]

================================

Block 0x63c
[0x63c:0x63c]
---
Predecessors: [0x62e, 0x634, 0x859, 0x873]
Successors: [0x63d]
---
0x63c JUMPDEST
---
0x63c: JUMPDEST 
---
Entry stack: [V12, 0x1b1, S2, {0x0, 0x1cd}, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S2, {0x0, 0x1cd}, {0x0, 0x1}]

================================

Block 0x63d
[0x63d:0x63d]
---
Predecessors: [0x63c]
Successors: [0x63e]
---
0x63d JUMPDEST
---
0x63d: JUMPDEST 
---
Entry stack: [V12, 0x1b1, S2, {0x0, 0x1cd}, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S2, {0x0, 0x1cd}, {0x0, 0x1}]

================================

Block 0x63e
[0x63e:0x640]
---
Predecessors: [0x63d]
Successors: [0x1cd]
---
0x63e JUMPDEST
0x63f POP
0x640 JUMP
---
0x63e: JUMPDEST 
0x640: JUMP {0x0, 0x1cd}
---
Entry stack: [V12, 0x1b1, S2, {0x0, 0x1cd}, {0x0, 0x1}]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x1b1, S2]

================================

Block 0x641
[0x641:0x656]
---
Predecessors: [0x1d7]
Successors: [0x657, 0x658]
---
0x641 JUMPDEST
0x642 PUSH1 0x8
0x644 SLOAD
0x645 PUSH1 0x0
0x647 SWAP1
0x648 PUSH1 0x1
0x64a SWAP1
0x64b PUSH1 0xff
0x64d AND
0x64e PUSH1 0x2
0x650 DUP2
0x651 GT
0x652 ISZERO
0x653 PUSH2 0x658
0x656 JUMPI
---
0x641: JUMPDEST 
0x642: V533 = 0x8
0x644: V534 = S[0x8]
0x645: V535 = 0x0
0x648: V536 = 0x1
0x64b: V537 = 0xff
0x64d: V538 = AND 0xff V534
0x64e: V539 = 0x2
0x651: V540 = GT V538 0x2
0x652: V541 = ISZERO V540
0x653: V542 = 0x658
0x656: JUMPI 0x658 V541
---
Entry stack: [V12, 0x1b1, V153]
Stack pops: 0
Stack additions: [0x0, 0x1, V538]
Exit stack: [V12, 0x1b1, V153, 0x0, 0x1, V538]

================================

Block 0x657
[0x657:0x657]
---
Predecessors: [0x641]
Successors: []
---
0x657 INVALID
---
0x657: INVALID 
---
Entry stack: [V12, 0x1b1, V153, 0x0, 0x1, V538]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, V153, 0x0, 0x1, V538]

================================

Block 0x658
[0x658:0x662]
---
Predecessors: [0x641]
Successors: [0x663, 0x664]
---
0x658 JUMPDEST
0x659 DUP2
0x65a PUSH1 0x2
0x65c DUP2
0x65d GT
0x65e ISZERO
0x65f PUSH2 0x664
0x662 JUMPI
---
0x658: JUMPDEST 
0x65a: V543 = 0x2
0x65d: V544 = GT 0x1 0x2
0x65e: V545 = ISZERO 0x0
0x65f: V546 = 0x664
0x662: JUMPI 0x664 0x1
---
Entry stack: [V12, 0x1b1, V153, 0x0, 0x1, V538]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V12, 0x1b1, V153, 0x0, 0x1, V538, 0x1]

================================

Block 0x663
[0x663:0x663]
---
Predecessors: [0x658]
Successors: []
---
0x663 INVALID
---
0x663: INVALID 
---
Entry stack: [V12, 0x1b1, V153, 0x0, 0x1, V538, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, V153, 0x0, 0x1, V538, 0x1]

================================

Block 0x664
[0x664:0x669]
---
Predecessors: [0x658]
Successors: [0x66a, 0x66f]
---
0x664 JUMPDEST
0x665 EQ
0x666 PUSH2 0x66f
0x669 JUMPI
---
0x664: JUMPDEST 
0x665: V547 = EQ 0x1 V538
0x666: V548 = 0x66f
0x669: JUMPI 0x66f V547
---
Entry stack: [V12, 0x1b1, V153, 0x0, 0x1, V538, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x1b1, V153, 0x0, 0x1]

================================

Block 0x66a
[0x66a:0x66e]
---
Predecessors: [0x664]
Successors: []
---
0x66a PUSH1 0x0
0x66c PUSH1 0x0
0x66e REVERT
---
0x66a: V549 = 0x0
0x66c: V550 = 0x0
0x66e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1b1, V153, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, V153, 0x0, 0x1]

================================

Block 0x66f
[0x66f:0x685]
---
Predecessors: [0x664]
Successors: [0x686, 0x68b]
---
0x66f JUMPDEST
0x670 PUSH1 0x0
0x672 SLOAD
0x673 CALLER
0x674 PUSH1 0x1
0x676 PUSH1 0xa0
0x678 PUSH1 0x2
0x67a EXP
0x67b SUB
0x67c SWAP1
0x67d DUP2
0x67e AND
0x67f SWAP2
0x680 AND
0x681 EQ
0x682 PUSH2 0x68b
0x685 JUMPI
---
0x66f: JUMPDEST 
0x670: V551 = 0x0
0x672: V552 = S[0x0]
0x673: V553 = CALLER
0x674: V554 = 0x1
0x676: V555 = 0xa0
0x678: V556 = 0x2
0x67a: V557 = EXP 0x2 0xa0
0x67b: V558 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67e: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V553
0x680: V560 = AND V552 0xffffffffffffffffffffffffffffffffffffffff
0x681: V561 = EQ V560 V559
0x682: V562 = 0x68b
0x685: JUMPI 0x68b V561
---
Entry stack: [V12, 0x1b1, V153, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, V153, 0x0, 0x1]

================================

Block 0x686
[0x686:0x68a]
---
Predecessors: [0x66f]
Successors: []
---
0x686 PUSH1 0x0
0x688 PUSH1 0x0
0x68a REVERT
---
0x686: V563 = 0x0
0x688: V564 = 0x0
0x68a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1b1, V153, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, V153, 0x0, 0x1]

================================

Block 0x68b
[0x68b:0x693]
---
Predecessors: [0x66f]
Successors: [0xd2f]
---
0x68b JUMPDEST
0x68c PUSH2 0x55d
0x68f DUP4
0x690 PUSH2 0xd2f
0x693 JUMP
---
0x68b: JUMPDEST 
0x68c: V565 = 0x55d
0x690: V566 = 0xd2f
0x693: JUMP 0xd2f
---
Entry stack: [V12, 0x1b1, V153, 0x0, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x55d, S2]
Exit stack: [V12, 0x1b1, V153, 0x0, 0x1, 0x55d, V153]

================================

Block 0x694
[0x694:0x696]
---
Predecessors: []
Successors: [0x697]
---
0x694 JUMPDEST
0x695 SWAP2
0x696 POP
---
0x694: JUMPDEST 
---
Entry stack: []
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [S0, S1]

================================

Block 0x697
[0x697:0x697]
---
Predecessors: [0x694]
Successors: [0x698]
---
0x697 JUMPDEST
---
0x697: JUMPDEST 
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S1, S0]

================================

Block 0x698
[0x698:0x698]
---
Predecessors: [0x697]
Successors: [0x699]
---
0x698 JUMPDEST
---
0x698: JUMPDEST 
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S1, S0]

================================

Block 0x699
[0x699:0x69e]
---
Predecessors: [0x698]
Successors: []
Has unresolved jump.
---
0x699 JUMPDEST
0x69a POP
0x69b SWAP2
0x69c SWAP1
0x69d POP
0x69e JUMP
---
0x699: JUMPDEST 
0x69e: JUMP S3
---
Entry stack: [S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0x69f
[0x69f:0x6b8]
---
Predecessors: [0x1fe]
Successors: [0x6b9, 0x6cd]
---
0x69f JUMPDEST
0x6a0 PUSH1 0x0
0x6a2 SLOAD
0x6a3 CALLER
0x6a4 PUSH1 0x1
0x6a6 PUSH1 0xa0
0x6a8 PUSH1 0x2
0x6aa EXP
0x6ab SUB
0x6ac SWAP1
0x6ad DUP2
0x6ae AND
0x6af SWAP2
0x6b0 AND
0x6b1 EQ
0x6b2 DUP1
0x6b3 ISZERO
0x6b4 SWAP1
0x6b5 PUSH2 0x6cd
0x6b8 JUMPI
---
0x69f: JUMPDEST 
0x6a0: V567 = 0x0
0x6a2: V568 = S[0x0]
0x6a3: V569 = CALLER
0x6a4: V570 = 0x1
0x6a6: V571 = 0xa0
0x6a8: V572 = 0x2
0x6aa: V573 = EXP 0x2 0xa0
0x6ab: V574 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ae: V575 = AND 0xffffffffffffffffffffffffffffffffffffffff V569
0x6b0: V576 = AND V568 0xffffffffffffffffffffffffffffffffffffffff
0x6b1: V577 = EQ V576 V575
0x6b3: V578 = ISZERO V577
0x6b5: V579 = 0x6cd
0x6b8: JUMPI 0x6cd V577
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: [V578]
Exit stack: [V12, 0x1cd, V578]

================================

Block 0x6b9
[0x6b9:0x6cc]
---
Predecessors: [0x69f]
Successors: [0x6cd]
---
0x6b9 POP
0x6ba PUSH1 0x1
0x6bc SLOAD
0x6bd CALLER
0x6be PUSH1 0x1
0x6c0 PUSH1 0xa0
0x6c2 PUSH1 0x2
0x6c4 EXP
0x6c5 SUB
0x6c6 SWAP1
0x6c7 DUP2
0x6c8 AND
0x6c9 SWAP2
0x6ca AND
0x6cb EQ
0x6cc ISZERO
---
0x6ba: V580 = 0x1
0x6bc: V581 = S[0x1]
0x6bd: V582 = CALLER
0x6be: V583 = 0x1
0x6c0: V584 = 0xa0
0x6c2: V585 = 0x2
0x6c4: V586 = EXP 0x2 0xa0
0x6c5: V587 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c8: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0x6ca: V589 = AND V581 0xffffffffffffffffffffffffffffffffffffffff
0x6cb: V590 = EQ V589 V588
0x6cc: V591 = ISZERO V590
---
Entry stack: [V12, 0x1cd, V578]
Stack pops: 1
Stack additions: [V591]
Exit stack: [V12, 0x1cd, V591]

================================

Block 0x6cd
[0x6cd:0x6d2]
---
Predecessors: [0x69f, 0x6b9]
Successors: [0x6d3, 0x6d8]
---
0x6cd JUMPDEST
0x6ce ISZERO
0x6cf PUSH2 0x6d8
0x6d2 JUMPI
---
0x6cd: JUMPDEST 
0x6ce: V592 = ISZERO S0
0x6cf: V593 = 0x6d8
0x6d2: JUMPI 0x6d8 V592
---
Entry stack: [V12, 0x1cd, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1cd]

================================

Block 0x6d3
[0x6d3:0x6d7]
---
Predecessors: [0x6cd]
Successors: []
---
0x6d3 PUSH1 0x0
0x6d5 PUSH1 0x0
0x6d7 REVERT
---
0x6d3: V594 = 0x0
0x6d5: V595 = 0x0
0x6d7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd]

================================

Block 0x6d8
[0x6d8:0x6ea]
---
Predecessors: [0x6cd]
Successors: [0x6eb, 0x6ec]
---
0x6d8 JUMPDEST
0x6d9 PUSH1 0x8
0x6db SLOAD
0x6dc PUSH1 0x1
0x6de SWAP1
0x6df PUSH1 0xff
0x6e1 AND
0x6e2 PUSH1 0x2
0x6e4 DUP2
0x6e5 GT
0x6e6 ISZERO
0x6e7 PUSH2 0x6ec
0x6ea JUMPI
---
0x6d8: JUMPDEST 
0x6d9: V596 = 0x8
0x6db: V597 = S[0x8]
0x6dc: V598 = 0x1
0x6df: V599 = 0xff
0x6e1: V600 = AND 0xff V597
0x6e2: V601 = 0x2
0x6e5: V602 = GT V600 0x2
0x6e6: V603 = ISZERO V602
0x6e7: V604 = 0x6ec
0x6ea: JUMPI 0x6ec V603
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: [0x1, V600]
Exit stack: [V12, 0x1cd, 0x1, V600]

================================

Block 0x6eb
[0x6eb:0x6eb]
---
Predecessors: [0x6d8]
Successors: []
---
0x6eb INVALID
---
0x6eb: INVALID 
---
Entry stack: [V12, 0x1cd, 0x1, V600]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1, V600]

================================

Block 0x6ec
[0x6ec:0x6f6]
---
Predecessors: [0x6d8]
Successors: [0x6f7, 0x6f8]
---
0x6ec JUMPDEST
0x6ed DUP2
0x6ee PUSH1 0x2
0x6f0 DUP2
0x6f1 GT
0x6f2 ISZERO
0x6f3 PUSH2 0x6f8
0x6f6 JUMPI
---
0x6ec: JUMPDEST 
0x6ee: V605 = 0x2
0x6f1: V606 = GT 0x1 0x2
0x6f2: V607 = ISZERO 0x0
0x6f3: V608 = 0x6f8
0x6f6: JUMPI 0x6f8 0x1
---
Entry stack: [V12, 0x1cd, 0x1, V600]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V12, 0x1cd, 0x1, V600, 0x1]

================================

Block 0x6f7
[0x6f7:0x6f7]
---
Predecessors: [0x6ec]
Successors: []
---
0x6f7 INVALID
---
0x6f7: INVALID 
---
Entry stack: [V12, 0x1cd, 0x1, V600, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1, V600, 0x1]

================================

Block 0x6f8
[0x6f8:0x6fd]
---
Predecessors: [0x6ec]
Successors: [0x6fe, 0x703]
---
0x6f8 JUMPDEST
0x6f9 EQ
0x6fa PUSH2 0x703
0x6fd JUMPI
---
0x6f8: JUMPDEST 
0x6f9: V609 = EQ 0x1 V600
0x6fa: V610 = 0x703
0x6fd: JUMPI 0x703 V609
---
Entry stack: [V12, 0x1cd, 0x1, V600, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1]

================================

Block 0x6fe
[0x6fe:0x702]
---
Predecessors: [0x6f8]
Successors: []
---
0x6fe PUSH1 0x0
0x700 PUSH1 0x0
0x702 REVERT
---
0x6fe: V611 = 0x0
0x700: V612 = 0x0
0x702: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cd, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1]

================================

Block 0x703
[0x703:0x705]
---
Predecessors: [0x6f8]
Successors: [0x706]
---
0x703 JUMPDEST
0x704 PUSH1 0x0
---
0x703: JUMPDEST 
0x704: V613 = 0x0
---
Entry stack: [V12, 0x1cd, 0x1]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x1cd, 0x1, 0x0]

================================

Block 0x706
[0x706:0x715]
---
Predecessors: [0x703]
Successors: [0x716, 0x717]
---
0x706 JUMPDEST
0x707 PUSH1 0x5
0x709 SLOAD
0x70a PUSH1 0xff
0x70c AND
0x70d PUSH1 0x2
0x70f DUP2
0x710 GT
0x711 ISZERO
0x712 PUSH2 0x717
0x715 JUMPI
---
0x706: JUMPDEST 
0x707: V614 = 0x5
0x709: V615 = S[0x5]
0x70a: V616 = 0xff
0x70c: V617 = AND 0xff V615
0x70d: V618 = 0x2
0x710: V619 = GT V617 0x2
0x711: V620 = ISZERO V619
0x712: V621 = 0x717
0x715: JUMPI 0x717 V620
---
Entry stack: [V12, 0x1cd, 0x1, 0x0]
Stack pops: 0
Stack additions: [V617]
Exit stack: [V12, 0x1cd, 0x1, 0x0, V617]

================================

Block 0x716
[0x716:0x716]
---
Predecessors: [0x706]
Successors: []
---
0x716 INVALID
---
0x716: INVALID 
---
Entry stack: [V12, 0x1cd, 0x1, 0x0, V617]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1, 0x0, V617]

================================

Block 0x717
[0x717:0x71d]
---
Predecessors: [0x706]
Successors: [0x71e, 0x723]
---
0x717 JUMPDEST
0x718 EQ
0x719 ISZERO
0x71a PUSH2 0x723
0x71d JUMPI
---
0x717: JUMPDEST 
0x718: V622 = EQ V617 0x0
0x719: V623 = ISZERO V622
0x71a: V624 = 0x723
0x71d: JUMPI 0x723 V623
---
Entry stack: [V12, 0x1cd, 0x1, 0x0, V617]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1]

================================

Block 0x71e
[0x71e:0x722]
---
Predecessors: [0x717]
Successors: []
---
0x71e PUSH1 0x0
0x720 PUSH1 0x0
0x722 REVERT
---
0x71e: V625 = 0x0
0x720: V626 = 0x0
0x722: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cd, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1]

================================

Block 0x723
[0x723:0x754]
---
Predecessors: [0x717]
Successors: [0x755]
---
0x723 JUMPDEST
0x724 PUSH1 0x40
0x726 MLOAD
0x727 PUSH32 0xbf4aaf86a66fe4360f58a0c5db181f702658bd2d75fa86cb7da62417db0b1aeb
0x748 SWAP1
0x749 PUSH1 0x0
0x74b SWAP1
0x74c LOG1
0x74d PUSH1 0x6
0x74f SLOAD
0x750 TIMESTAMP
0x751 ADD
0x752 PUSH1 0x7
0x754 SSTORE
---
0x723: JUMPDEST 
0x724: V627 = 0x40
0x726: V628 = M[0x40]
0x727: V629 = 0xbf4aaf86a66fe4360f58a0c5db181f702658bd2d75fa86cb7da62417db0b1aeb
0x749: V630 = 0x0
0x74c: LOG V628 0x0 0xbf4aaf86a66fe4360f58a0c5db181f702658bd2d75fa86cb7da62417db0b1aeb
0x74d: V631 = 0x6
0x74f: V632 = S[0x6]
0x750: V633 = TIMESTAMP
0x751: V634 = ADD V633 V632
0x752: V635 = 0x7
0x754: S[0x7] = V634
---
Entry stack: [V12, 0x1cd, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1]

================================

Block 0x755
[0x755:0x755]
---
Predecessors: [0x723]
Successors: [0x756]
---
0x755 JUMPDEST
---
0x755: JUMPDEST 
---
Entry stack: [V12, 0x1cd, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1]

================================

Block 0x756
[0x756:0x757]
---
Predecessors: [0x755]
Successors: [0x758]
---
0x756 JUMPDEST
0x757 POP
---
0x756: JUMPDEST 
---
Entry stack: [V12, 0x1cd, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1cd]

================================

Block 0x758
[0x758:0x759]
---
Predecessors: [0x756, 0x9e5]
Successors: [0x1cd]
---
0x758 JUMPDEST
0x759 JUMP
---
0x758: JUMPDEST 
0x759: JUMP 0x1cd
---
Entry stack: [V12, 0x1cd]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x75a
[0x75a:0x768]
---
Predecessors: [0x210]
Successors: [0x182]
---
0x75a JUMPDEST
0x75b PUSH1 0x1
0x75d SLOAD
0x75e PUSH1 0x1
0x760 PUSH1 0xa0
0x762 PUSH1 0x2
0x764 EXP
0x765 SUB
0x766 AND
0x767 DUP2
0x768 JUMP
---
0x75a: JUMPDEST 
0x75b: V636 = 0x1
0x75d: V637 = S[0x1]
0x75e: V638 = 0x1
0x760: V639 = 0xa0
0x762: V640 = 0x2
0x764: V641 = EXP 0x2 0xa0
0x765: V642 = SUB 0x10000000000000000000000000000000000000000 0x1
0x766: V643 = AND 0xffffffffffffffffffffffffffffffffffffffff V637
0x768: JUMP 0x182
---
Entry stack: [V12, 0x182]
Stack pops: 1
Stack additions: [S0, V643]
Exit stack: [V12, 0x182, V643]

================================

Block 0x769
[0x769:0x76e]
---
Predecessors: [0x23c]
Successors: [0x244]
---
0x769 JUMPDEST
0x76a PUSH1 0x6
0x76c SLOAD
0x76d DUP2
0x76e JUMP
---
0x769: JUMPDEST 
0x76a: V644 = 0x6
0x76c: V645 = S[0x6]
0x76e: JUMP 0x244
---
Entry stack: [V12, 0x244]
Stack pops: 1
Stack additions: [S0, V645]
Exit stack: [V12, 0x244, V645]

================================

Block 0x76f
[0x76f:0x788]
---
Predecessors: [0x25e]
Successors: [0x789, 0x79d]
---
0x76f JUMPDEST
0x770 PUSH1 0x0
0x772 SLOAD
0x773 CALLER
0x774 PUSH1 0x1
0x776 PUSH1 0xa0
0x778 PUSH1 0x2
0x77a EXP
0x77b SUB
0x77c SWAP1
0x77d DUP2
0x77e AND
0x77f SWAP2
0x780 AND
0x781 EQ
0x782 DUP1
0x783 ISZERO
0x784 SWAP1
0x785 PUSH2 0x79d
0x788 JUMPI
---
0x76f: JUMPDEST 
0x770: V646 = 0x0
0x772: V647 = S[0x0]
0x773: V648 = CALLER
0x774: V649 = 0x1
0x776: V650 = 0xa0
0x778: V651 = 0x2
0x77a: V652 = EXP 0x2 0xa0
0x77b: V653 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77e: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff V648
0x780: V655 = AND V647 0xffffffffffffffffffffffffffffffffffffffff
0x781: V656 = EQ V655 V654
0x783: V657 = ISZERO V656
0x785: V658 = 0x79d
0x788: JUMPI 0x79d V656
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: [V657]
Exit stack: [V12, 0x1cd, V657]

================================

Block 0x789
[0x789:0x79c]
---
Predecessors: [0x76f]
Successors: [0x79d]
---
0x789 POP
0x78a PUSH1 0x1
0x78c SLOAD
0x78d CALLER
0x78e PUSH1 0x1
0x790 PUSH1 0xa0
0x792 PUSH1 0x2
0x794 EXP
0x795 SUB
0x796 SWAP1
0x797 DUP2
0x798 AND
0x799 SWAP2
0x79a AND
0x79b EQ
0x79c ISZERO
---
0x78a: V659 = 0x1
0x78c: V660 = S[0x1]
0x78d: V661 = CALLER
0x78e: V662 = 0x1
0x790: V663 = 0xa0
0x792: V664 = 0x2
0x794: V665 = EXP 0x2 0xa0
0x795: V666 = SUB 0x10000000000000000000000000000000000000000 0x1
0x798: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V661
0x79a: V668 = AND V660 0xffffffffffffffffffffffffffffffffffffffff
0x79b: V669 = EQ V668 V667
0x79c: V670 = ISZERO V669
---
Entry stack: [V12, 0x1cd, V657]
Stack pops: 1
Stack additions: [V670]
Exit stack: [V12, 0x1cd, V670]

================================

Block 0x79d
[0x79d:0x7a2]
---
Predecessors: [0x76f, 0x789]
Successors: [0x7a3, 0x7a8]
---
0x79d JUMPDEST
0x79e ISZERO
0x79f PUSH2 0x7a8
0x7a2 JUMPI
---
0x79d: JUMPDEST 
0x79e: V671 = ISZERO S0
0x79f: V672 = 0x7a8
0x7a2: JUMPI 0x7a8 V671
---
Entry stack: [V12, 0x1cd, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1cd]

================================

Block 0x7a3
[0x7a3:0x7a7]
---
Predecessors: [0x79d]
Successors: []
---
0x7a3 PUSH1 0x0
0x7a5 PUSH1 0x0
0x7a7 REVERT
---
0x7a3: V673 = 0x0
0x7a5: V674 = 0x0
0x7a7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd]

================================

Block 0x7a8
[0x7a8:0x7ba]
---
Predecessors: [0x79d]
Successors: [0x7bb, 0x7bc]
---
0x7a8 JUMPDEST
0x7a9 PUSH1 0x8
0x7ab SLOAD
0x7ac PUSH1 0x1
0x7ae SWAP1
0x7af PUSH1 0xff
0x7b1 AND
0x7b2 PUSH1 0x2
0x7b4 DUP2
0x7b5 GT
0x7b6 ISZERO
0x7b7 PUSH2 0x7bc
0x7ba JUMPI
---
0x7a8: JUMPDEST 
0x7a9: V675 = 0x8
0x7ab: V676 = S[0x8]
0x7ac: V677 = 0x1
0x7af: V678 = 0xff
0x7b1: V679 = AND 0xff V676
0x7b2: V680 = 0x2
0x7b5: V681 = GT V679 0x2
0x7b6: V682 = ISZERO V681
0x7b7: V683 = 0x7bc
0x7ba: JUMPI 0x7bc V682
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: [0x1, V679]
Exit stack: [V12, 0x1cd, 0x1, V679]

================================

Block 0x7bb
[0x7bb:0x7bb]
---
Predecessors: [0x7a8]
Successors: []
---
0x7bb INVALID
---
0x7bb: INVALID 
---
Entry stack: [V12, 0x1cd, 0x1, V679]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1, V679]

================================

Block 0x7bc
[0x7bc:0x7c6]
---
Predecessors: [0x7a8]
Successors: [0x7c7, 0x7c8]
---
0x7bc JUMPDEST
0x7bd DUP2
0x7be PUSH1 0x2
0x7c0 DUP2
0x7c1 GT
0x7c2 ISZERO
0x7c3 PUSH2 0x7c8
0x7c6 JUMPI
---
0x7bc: JUMPDEST 
0x7be: V684 = 0x2
0x7c1: V685 = GT 0x1 0x2
0x7c2: V686 = ISZERO 0x0
0x7c3: V687 = 0x7c8
0x7c6: JUMPI 0x7c8 0x1
---
Entry stack: [V12, 0x1cd, 0x1, V679]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V12, 0x1cd, 0x1, V679, 0x1]

================================

Block 0x7c7
[0x7c7:0x7c7]
---
Predecessors: [0x7bc]
Successors: []
---
0x7c7 INVALID
---
0x7c7: INVALID 
---
Entry stack: [V12, 0x1cd, 0x1, V679, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1, V679, 0x1]

================================

Block 0x7c8
[0x7c8:0x7cd]
---
Predecessors: [0x7bc]
Successors: [0x7ce, 0x7d3]
---
0x7c8 JUMPDEST
0x7c9 EQ
0x7ca PUSH2 0x7d3
0x7cd JUMPI
---
0x7c8: JUMPDEST 
0x7c9: V688 = EQ 0x1 V679
0x7ca: V689 = 0x7d3
0x7cd: JUMPI 0x7d3 V688
---
Entry stack: [V12, 0x1cd, 0x1, V679, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1]

================================

Block 0x7ce
[0x7ce:0x7d2]
---
Predecessors: [0x7c8]
Successors: []
---
0x7ce PUSH1 0x0
0x7d0 PUSH1 0x0
0x7d2 REVERT
---
0x7ce: V690 = 0x0
0x7d0: V691 = 0x0
0x7d2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cd, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1]

================================

Block 0x7d3
[0x7d3:0x7d5]
---
Predecessors: [0x7c8]
Successors: [0x7d6]
---
0x7d3 JUMPDEST
0x7d4 PUSH1 0x0
---
0x7d3: JUMPDEST 
0x7d4: V692 = 0x0
---
Entry stack: [V12, 0x1cd, 0x1]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x1cd, 0x1, 0x0]

================================

Block 0x7d6
[0x7d6:0x7e5]
---
Predecessors: [0x7d3]
Successors: [0x7e6, 0x7e7]
---
0x7d6 JUMPDEST
0x7d7 PUSH1 0x5
0x7d9 SLOAD
0x7da PUSH1 0xff
0x7dc AND
0x7dd PUSH1 0x2
0x7df DUP2
0x7e0 GT
0x7e1 ISZERO
0x7e2 PUSH2 0x7e7
0x7e5 JUMPI
---
0x7d6: JUMPDEST 
0x7d7: V693 = 0x5
0x7d9: V694 = S[0x5]
0x7da: V695 = 0xff
0x7dc: V696 = AND 0xff V694
0x7dd: V697 = 0x2
0x7e0: V698 = GT V696 0x2
0x7e1: V699 = ISZERO V698
0x7e2: V700 = 0x7e7
0x7e5: JUMPI 0x7e7 V699
---
Entry stack: [V12, 0x1cd, 0x1, 0x0]
Stack pops: 0
Stack additions: [V696]
Exit stack: [V12, 0x1cd, 0x1, 0x0, V696]

================================

Block 0x7e6
[0x7e6:0x7e6]
---
Predecessors: [0x7d6]
Successors: []
---
0x7e6 INVALID
---
0x7e6: INVALID 
---
Entry stack: [V12, 0x1cd, 0x1, 0x0, V696]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1, 0x0, V696]

================================

Block 0x7e7
[0x7e7:0x7ed]
---
Predecessors: [0x7d6]
Successors: [0x7ee, 0x7f3]
---
0x7e7 JUMPDEST
0x7e8 EQ
0x7e9 ISZERO
0x7ea PUSH2 0x7f3
0x7ed JUMPI
---
0x7e7: JUMPDEST 
0x7e8: V701 = EQ V696 0x0
0x7e9: V702 = ISZERO V701
0x7ea: V703 = 0x7f3
0x7ed: JUMPI 0x7f3 V702
---
Entry stack: [V12, 0x1cd, 0x1, 0x0, V696]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1]

================================

Block 0x7ee
[0x7ee:0x7f2]
---
Predecessors: [0x7e7]
Successors: []
---
0x7ee PUSH1 0x0
0x7f0 PUSH1 0x0
0x7f2 REVERT
---
0x7ee: V704 = 0x0
0x7f0: V705 = 0x0
0x7f2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cd, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1]

================================

Block 0x7f3
[0x7f3:0x7fd]
---
Predecessors: [0x7e7]
Successors: [0x7fe, 0x803]
---
0x7f3 JUMPDEST
0x7f4 PUSH1 0x7
0x7f6 SLOAD
0x7f7 TIMESTAMP
0x7f8 LT
0x7f9 ISZERO
0x7fa PUSH2 0x803
0x7fd JUMPI
---
0x7f3: JUMPDEST 
0x7f4: V706 = 0x7
0x7f6: V707 = S[0x7]
0x7f7: V708 = TIMESTAMP
0x7f8: V709 = LT V708 V707
0x7f9: V710 = ISZERO V709
0x7fa: V711 = 0x803
0x7fd: JUMPI 0x803 V710
---
Entry stack: [V12, 0x1cd, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1]

================================

Block 0x7fe
[0x7fe:0x802]
---
Predecessors: [0x7f3]
Successors: []
---
0x7fe PUSH1 0x0
0x800 PUSH1 0x0
0x802 REVERT
---
0x7fe: V712 = 0x0
0x800: V713 = 0x0
0x802: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cd, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1]

================================

Block 0x803
[0x803:0x82e]
---
Predecessors: [0x7f3]
Successors: [0x82f]
---
0x803 JUMPDEST
0x804 PUSH1 0x40
0x806 MLOAD
0x807 PUSH32 0xc23de9628df4b204a0f8de48c685c23e1e8d89d4c940e482158caa45124b9c46
0x828 SWAP1
0x829 PUSH1 0x0
0x82b SWAP1
0x82c LOG1
0x82d PUSH1 0x2
---
0x803: JUMPDEST 
0x804: V714 = 0x40
0x806: V715 = M[0x40]
0x807: V716 = 0xc23de9628df4b204a0f8de48c685c23e1e8d89d4c940e482158caa45124b9c46
0x829: V717 = 0x0
0x82c: LOG V715 0x0 0xc23de9628df4b204a0f8de48c685c23e1e8d89d4c940e482158caa45124b9c46
0x82d: V718 = 0x2
---
Entry stack: [V12, 0x1cd, 0x1]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V12, 0x1cd, 0x1, 0x2]

================================

Block 0x82f
[0x82f:0x83e]
---
Predecessors: [0x803]
Successors: [0x83f, 0x840]
---
0x82f JUMPDEST
0x830 PUSH1 0x5
0x832 SLOAD
0x833 PUSH1 0xff
0x835 AND
0x836 PUSH1 0x2
0x838 DUP2
0x839 GT
0x83a ISZERO
0x83b PUSH2 0x840
0x83e JUMPI
---
0x82f: JUMPDEST 
0x830: V719 = 0x5
0x832: V720 = S[0x5]
0x833: V721 = 0xff
0x835: V722 = AND 0xff V720
0x836: V723 = 0x2
0x839: V724 = GT V722 0x2
0x83a: V725 = ISZERO V724
0x83b: V726 = 0x840
0x83e: JUMPI 0x840 V725
---
Entry stack: [V12, 0x1cd, 0x1, 0x2]
Stack pops: 0
Stack additions: [V722]
Exit stack: [V12, 0x1cd, 0x1, 0x2, V722]

================================

Block 0x83f
[0x83f:0x83f]
---
Predecessors: [0x82f]
Successors: []
---
0x83f INVALID
---
0x83f: INVALID 
---
Entry stack: [V12, 0x1cd, 0x1, 0x2, V722]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1, 0x2, V722]

================================

Block 0x840
[0x840:0x846]
---
Predecessors: [0x82f]
Successors: [0x847, 0x85f]
---
0x840 JUMPDEST
0x841 EQ
0x842 ISZERO
0x843 PUSH2 0x85f
0x846 JUMPI
---
0x840: JUMPDEST 
0x841: V727 = EQ V722 0x2
0x842: V728 = ISZERO V727
0x843: V729 = 0x85f
0x846: JUMPI 0x85f V728
---
Entry stack: [V12, 0x1cd, 0x1, 0x2, V722]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1]

================================

Block 0x847
[0x847:0x858]
---
Predecessors: [0x840]
Successors: [0xd2f]
---
0x847 PUSH2 0x859
0x84a ADDRESS
0x84b PUSH1 0x1
0x84d PUSH1 0xa0
0x84f PUSH1 0x2
0x851 EXP
0x852 SUB
0x853 AND
0x854 BALANCE
0x855 PUSH2 0xd2f
0x858 JUMP
---
0x847: V730 = 0x859
0x84a: V731 = ADDRESS
0x84b: V732 = 0x1
0x84d: V733 = 0xa0
0x84f: V734 = 0x2
0x851: V735 = EXP 0x2 0xa0
0x852: V736 = SUB 0x10000000000000000000000000000000000000000 0x1
0x853: V737 = AND 0xffffffffffffffffffffffffffffffffffffffff V731
0x854: V738 = BALANCE V737
0x855: V739 = 0xd2f
0x858: JUMP 0xd2f
---
Entry stack: [V12, 0x1cd, 0x1]
Stack pops: 0
Stack additions: [0x859, V738]
Exit stack: [V12, 0x1cd, 0x1, 0x859, V738]

================================

Block 0x859
[0x859:0x85e]
---
Predecessors: [0xd28]
Successors: [0x63c]
---
0x859 JUMPDEST
0x85a POP
0x85b PUSH2 0x63c
0x85e JUMP
---
0x859: JUMPDEST 
0x85b: V740 = 0x63c
0x85e: JUMP 0x63c
---
Entry stack: [V12, 0x1b1, S3, {0x0, 0x1cd}, 0x1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1b1, S3, {0x0, 0x1cd}, 0x1]

================================

Block 0x85f
[0x85f:0x861]
---
Predecessors: [0x840]
Successors: [0x862]
---
0x85f JUMPDEST
0x860 PUSH1 0x1
---
0x85f: JUMPDEST 
0x860: V741 = 0x1
---
Entry stack: [V12, 0x1cd, 0x1]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x1cd, 0x1, 0x1]

================================

Block 0x862
[0x862:0x871]
---
Predecessors: [0x85f]
Successors: [0x872, 0x873]
---
0x862 JUMPDEST
0x863 PUSH1 0x5
0x865 SLOAD
0x866 PUSH1 0xff
0x868 AND
0x869 PUSH1 0x2
0x86b DUP2
0x86c GT
0x86d ISZERO
0x86e PUSH2 0x873
0x871 JUMPI
---
0x862: JUMPDEST 
0x863: V742 = 0x5
0x865: V743 = S[0x5]
0x866: V744 = 0xff
0x868: V745 = AND 0xff V743
0x869: V746 = 0x2
0x86c: V747 = GT V745 0x2
0x86d: V748 = ISZERO V747
0x86e: V749 = 0x873
0x871: JUMPI 0x873 V748
---
Entry stack: [V12, 0x1cd, 0x1, 0x1]
Stack pops: 0
Stack additions: [V745]
Exit stack: [V12, 0x1cd, 0x1, 0x1, V745]

================================

Block 0x872
[0x872:0x872]
---
Predecessors: [0x862]
Successors: []
---
0x872 INVALID
---
0x872: INVALID 
---
Entry stack: [V12, 0x1cd, 0x1, 0x1, V745]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1, 0x1, V745]

================================

Block 0x873
[0x873:0x879]
---
Predecessors: [0x862]
Successors: [0x63c, 0x87a]
---
0x873 JUMPDEST
0x874 EQ
0x875 ISZERO
0x876 PUSH2 0x63c
0x879 JUMPI
---
0x873: JUMPDEST 
0x874: V750 = EQ V745 0x1
0x875: V751 = ISZERO V750
0x876: V752 = 0x63c
0x879: JUMPI 0x63c V751
---
Entry stack: [V12, 0x1cd, 0x1, 0x1, V745]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x1cd, 0x1]

================================

Block 0x87a
[0x87a:0x88b]
---
Predecessors: [0x873]
Successors: [0xc3e]
---
0x87a PUSH2 0x88c
0x87d ADDRESS
0x87e PUSH1 0x1
0x880 PUSH1 0xa0
0x882 PUSH1 0x2
0x884 EXP
0x885 SUB
0x886 AND
0x887 BALANCE
0x888 PUSH2 0xc3e
0x88b JUMP
---
0x87a: V753 = 0x88c
0x87d: V754 = ADDRESS
0x87e: V755 = 0x1
0x880: V756 = 0xa0
0x882: V757 = 0x2
0x884: V758 = EXP 0x2 0xa0
0x885: V759 = SUB 0x10000000000000000000000000000000000000000 0x1
0x886: V760 = AND 0xffffffffffffffffffffffffffffffffffffffff V754
0x887: V761 = BALANCE V760
0x888: V762 = 0xc3e
0x88b: JUMP 0xc3e
---
Entry stack: [V12, 0x1cd, 0x1]
Stack pops: 0
Stack additions: [0x88c, V761]
Exit stack: [V12, 0x1cd, 0x1, 0x88c, V761]

================================

Block 0x88c
[0x88c:0x88d]
---
Predecessors: [0xd28]
Successors: [0x88e]
---
0x88c JUMPDEST
0x88d POP
---
0x88c: JUMPDEST 
---
Entry stack: [V12, 0x1b1, S3, {0x0, 0x1cd}, 0x1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1b1, S3, {0x0, 0x1cd}, 0x1]

================================

Block 0x88e
[0x88e:0x88e]
---
Predecessors: [0x88c]
Successors: [0x88f]
---
0x88e JUMPDEST
---
0x88e: JUMPDEST 
---
Entry stack: [V12, 0x1b1, S2, {0x0, 0x1cd}, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S2, {0x0, 0x1cd}, 0x1]

================================

Block 0x88f
[0x88f:0x88f]
---
Predecessors: [0x88e]
Successors: [0x890]
---
0x88f JUMPDEST
---
0x88f: JUMPDEST 
---
Entry stack: [V12, 0x1b1, S2, {0x0, 0x1cd}, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S2, {0x0, 0x1cd}, 0x1]

================================

Block 0x890
[0x890:0x890]
---
Predecessors: [0x88f]
Successors: [0x891]
---
0x890 JUMPDEST
---
0x890: JUMPDEST 
---
Entry stack: [V12, 0x1b1, S2, {0x0, 0x1cd}, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S2, {0x0, 0x1cd}, 0x1]

================================

Block 0x891
[0x891:0x892]
---
Predecessors: [0x890]
Successors: [0x893]
---
0x891 JUMPDEST
0x892 POP
---
0x891: JUMPDEST 
---
Entry stack: [V12, 0x1b1, S2, {0x0, 0x1cd}, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1b1, S2, {0x0, 0x1cd}]

================================

Block 0x893
[0x893:0x894]
---
Predecessors: [0x891]
Successors: [0x1cd]
---
0x893 JUMPDEST
0x894 JUMP
---
0x893: JUMPDEST 
0x894: JUMP {0x0, 0x1cd}
---
Entry stack: [V12, 0x1b1, S1, {0x0, 0x1cd}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1b1, S1]

================================

Block 0x895
[0x895:0x8ab]
---
Predecessors: [0x270]
Successors: [0x8ac, 0x8b1]
---
0x895 JUMPDEST
0x896 PUSH1 0x0
0x898 SLOAD
0x899 CALLER
0x89a PUSH1 0x1
0x89c PUSH1 0xa0
0x89e PUSH1 0x2
0x8a0 EXP
0x8a1 SUB
0x8a2 SWAP1
0x8a3 DUP2
0x8a4 AND
0x8a5 SWAP2
0x8a6 AND
0x8a7 EQ
0x8a8 PUSH2 0x8b1
0x8ab JUMPI
---
0x895: JUMPDEST 
0x896: V763 = 0x0
0x898: V764 = S[0x0]
0x899: V765 = CALLER
0x89a: V766 = 0x1
0x89c: V767 = 0xa0
0x89e: V768 = 0x2
0x8a0: V769 = EXP 0x2 0xa0
0x8a1: V770 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a4: V771 = AND 0xffffffffffffffffffffffffffffffffffffffff V765
0x8a6: V772 = AND V764 0xffffffffffffffffffffffffffffffffffffffff
0x8a7: V773 = EQ V772 V771
0x8a8: V774 = 0x8b1
0x8ab: JUMPI 0x8b1 V773
---
Entry stack: [V12, 0x1cd, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, V221]

================================

Block 0x8ac
[0x8ac:0x8b0]
---
Predecessors: [0x895]
Successors: []
---
0x8ac PUSH1 0x0
0x8ae PUSH1 0x0
0x8b0 REVERT
---
0x8ac: V775 = 0x0
0x8ae: V776 = 0x0
0x8b0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cd, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, V221]

================================

Block 0x8b1
[0x8b1:0x8c3]
---
Predecessors: [0x895]
Successors: [0xe17]
---
0x8b1 JUMPDEST
0x8b2 DUP1
0x8b3 MLOAD
0x8b4 PUSH2 0x8c4
0x8b7 SWAP1
0x8b8 PUSH1 0x2
0x8ba SWAP1
0x8bb PUSH1 0x20
0x8bd DUP5
0x8be ADD
0x8bf SWAP1
0x8c0 PUSH2 0xe17
0x8c3 JUMP
---
0x8b1: JUMPDEST 
0x8b3: V777 = M[V221]
0x8b4: V778 = 0x8c4
0x8b8: V779 = 0x2
0x8bb: V780 = 0x20
0x8be: V781 = ADD V221 0x20
0x8c0: V782 = 0xe17
0x8c3: JUMP 0xe17
---
Entry stack: [V12, 0x1cd, V221]
Stack pops: 1
Stack additions: [S0, 0x8c4, 0x2, V781, V777]
Exit stack: [V12, 0x1cd, V221, 0x8c4, 0x2, V781, V777]

================================

Block 0x8c4
[0x8c4:0x91b]
---
Predecessors: [0xe92]
Successors: [0x91c, 0x962]
---
0x8c4 JUMPDEST
0x8c5 POP
0x8c6 PUSH1 0x40
0x8c8 DUP1
0x8c9 MLOAD
0x8ca PUSH1 0x20
0x8cc DUP1
0x8cd DUP3
0x8ce MSTORE
0x8cf PUSH1 0x2
0x8d1 DUP1
0x8d2 SLOAD
0x8d3 PUSH1 0x0
0x8d5 NOT
0x8d6 PUSH2 0x100
0x8d9 PUSH1 0x1
0x8db DUP4
0x8dc AND
0x8dd ISZERO
0x8de MUL
0x8df ADD
0x8e0 AND
0x8e1 DUP2
0x8e2 SWAP1
0x8e3 DIV
0x8e4 SWAP2
0x8e5 DUP4
0x8e6 ADD
0x8e7 DUP3
0x8e8 SWAP1
0x8e9 MSTORE
0x8ea PUSH32 0xdc91ea68d03b0572213a54d6505b782a13653e806090b342af10ba023fe5437f
0x90b SWAP4
0x90c SWAP1
0x90d SWAP3
0x90e SWAP2
0x90f DUP3
0x910 SWAP2
0x911 DUP3
0x912 ADD
0x913 SWAP1
0x914 DUP5
0x915 SWAP1
0x916 DUP1
0x917 ISZERO
0x918 PUSH2 0x962
0x91b JUMPI
---
0x8c4: JUMPDEST 
0x8c6: V783 = 0x40
0x8c9: V784 = M[0x40]
0x8ca: V785 = 0x20
0x8ce: M[V784] = 0x20
0x8cf: V786 = 0x2
0x8d2: V787 = S[0x2]
0x8d3: V788 = 0x0
0x8d5: V789 = NOT 0x0
0x8d6: V790 = 0x100
0x8d9: V791 = 0x1
0x8dc: V792 = AND V787 0x1
0x8dd: V793 = ISZERO V792
0x8de: V794 = MUL V793 0x100
0x8df: V795 = ADD V794 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x8e0: V796 = AND V795 V787
0x8e3: V797 = DIV V796 0x2
0x8e6: V798 = ADD V784 0x20
0x8e9: M[V798] = V797
0x8ea: V799 = 0xdc91ea68d03b0572213a54d6505b782a13653e806090b342af10ba023fe5437f
0x912: V800 = ADD V784 0x40
0x917: V801 = ISZERO V797
0x918: V802 = 0x962
0x91b: JUMPI 0x962 V801
---
Entry stack: [V12, 0x1cd, S4, S3, {0x2, 0x3, 0x1cd}, S1, S0]
Stack pops: 1
Stack additions: [0xdc91ea68d03b0572213a54d6505b782a13653e806090b342af10ba023fe5437f, 0x2, V784, V784, V800, 0x2, V797]
Exit stack: [V12, 0x1cd, S4, S3, {0x2, 0x3, 0x1cd}, S1, 0xdc91ea68d03b0572213a54d6505b782a13653e806090b342af10ba023fe5437f, 0x2, V784, V784, V800, 0x2, V797]

================================

Block 0x91c
[0x91c:0x923]
---
Predecessors: [0x8c4]
Successors: [0x924, 0x937]
---
0x91c DUP1
0x91d PUSH1 0x1f
0x91f LT
0x920 PUSH2 0x937
0x923 JUMPI
---
0x91d: V803 = 0x1f
0x91f: V804 = LT 0x1f V797
0x920: V805 = 0x937
0x923: JUMPI 0x937 V804
---
Entry stack: [V12, 0x1cd, S10, S9, {0x2, 0x3, 0x1cd}, S7, 0xdc91ea68d03b0572213a54d6505b782a13653e806090b342af10ba023fe5437f, 0x2, V784, V784, V800, 0x2, V797]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1cd, S10, S9, {0x2, 0x3, 0x1cd}, S7, 0xdc91ea68d03b0572213a54d6505b782a13653e806090b342af10ba023fe5437f, 0x2, V784, V784, V800, 0x2, V797]

================================

Block 0x924
[0x924:0x936]
---
Predecessors: [0x91c]
Successors: [0x962]
---
0x924 PUSH2 0x100
0x927 DUP1
0x928 DUP4
0x929 SLOAD
0x92a DIV
0x92b MUL
0x92c DUP4
0x92d MSTORE
0x92e SWAP2
0x92f PUSH1 0x20
0x931 ADD
0x932 SWAP2
0x933 PUSH2 0x962
0x936 JUMP
---
0x924: V806 = 0x100
0x929: V807 = S[0x2]
0x92a: V808 = DIV V807 0x100
0x92b: V809 = MUL V808 0x100
0x92d: M[V800] = V809
0x92f: V810 = 0x20
0x931: V811 = ADD 0x20 V800
0x933: V812 = 0x962
0x936: JUMP 0x962
---
Entry stack: [V12, 0x1cd, S10, S9, {0x2, 0x3, 0x1cd}, S7, 0xdc91ea68d03b0572213a54d6505b782a13653e806090b342af10ba023fe5437f, 0x2, V784, V784, V800, 0x2, V797]
Stack pops: 3
Stack additions: [V811, S1, S0]
Exit stack: [V12, 0x1cd, S10, S9, {0x2, 0x3, 0x1cd}, S7, 0xdc91ea68d03b0572213a54d6505b782a13653e806090b342af10ba023fe5437f, 0x2, V784, V784, V811, 0x2, V797]

================================

Block 0x937
[0x937:0x944]
---
Predecessors: [0x91c, 0xbd0]
Successors: [0x945]
---
0x937 JUMPDEST
0x938 DUP3
0x939 ADD
0x93a SWAP2
0x93b SWAP1
0x93c PUSH1 0x0
0x93e MSTORE
0x93f PUSH1 0x20
0x941 PUSH1 0x0
0x943 SHA3
0x944 SWAP1
---
0x937: JUMPDEST 
0x939: V813 = ADD S2 S0
0x93c: V814 = 0x0
0x93e: M[0x0] = {0x2, 0x3}
0x93f: V815 = 0x20
0x941: V816 = 0x0
0x943: V817 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x1cd, S10, S9, {0x2, 0x3, 0x1cd}, S7, {0xdc91ea68d03b0572213a54d6505b782a13653e806090b342af10ba023fe5437f, 0xe5113280d1468809ce30542fd53d4a93070097c06690906f55f0ff2a52fa5803}, {0x2, 0x3}, S4, S3, S2, {0x2, 0x3}, S0]
Stack pops: 3
Stack additions: [V813, V817, S2]
Exit stack: [V12, 0x1cd, S10, S9, {0x2, 0x3, 0x1cd}, S7, {0xdc91ea68d03b0572213a54d6505b782a13653e806090b342af10ba023fe5437f, 0xe5113280d1468809ce30542fd53d4a93070097c06690906f55f0ff2a52fa5803}, {0x2, 0x3}, S4, S3, V813, V817, S2]

================================

Block 0x945
[0x945:0x958]
---
Predecessors: [0x937, 0x945, 0xbf9]
Successors: [0x945, 0x959]
---
0x945 JUMPDEST
0x946 DUP2
0x947 SLOAD
0x948 DUP2
0x949 MSTORE
0x94a SWAP1
0x94b PUSH1 0x1
0x94d ADD
0x94e SWAP1
0x94f PUSH1 0x20
0x951 ADD
0x952 DUP1
0x953 DUP4
0x954 GT
0x955 PUSH2 0x945
0x958 JUMPI
---
0x945: JUMPDEST 
0x947: V818 = S[S1]
0x949: M[S0] = V818
0x94b: V819 = 0x1
0x94d: V820 = ADD 0x1 S1
0x94f: V821 = 0x20
0x951: V822 = ADD 0x20 S0
0x954: V823 = GT S2 V822
0x955: V824 = 0x945
0x958: JUMPI 0x945 V823
---
Entry stack: [V12, 0x1cd, S10, S9, {0x2, 0x3, 0x1cd}, S7, {0xdc91ea68d03b0572213a54d6505b782a13653e806090b342af10ba023fe5437f, 0xe5113280d1468809ce30542fd53d4a93070097c06690906f55f0ff2a52fa5803}, {0x2, 0x3}, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, V820, V822]
Exit stack: [V12, 0x1cd, S10, S9, {0x2, 0x3, 0x1cd}, S7, {0xdc91ea68d03b0572213a54d6505b782a13653e806090b342af10ba023fe5437f, 0xe5113280d1468809ce30542fd53d4a93070097c06690906f55f0ff2a52fa5803}, {0x2, 0x3}, S4, S3, S2, V820, V822]

================================

Block 0x959
[0x959:0x961]
---
Predecessors: [0x945]
Successors: [0x962]
---
0x959 DUP3
0x95a SWAP1
0x95b SUB
0x95c PUSH1 0x1f
0x95e AND
0x95f DUP3
0x960 ADD
0x961 SWAP2
---
0x95b: V825 = SUB V822 S2
0x95c: V826 = 0x1f
0x95e: V827 = AND 0x1f V825
0x960: V828 = ADD S2 V827
---
Entry stack: [V12, 0x1cd, S10, S9, {0x2, 0x3, 0x1cd}, S7, {0xdc91ea68d03b0572213a54d6505b782a13653e806090b342af10ba023fe5437f, 0xe5113280d1468809ce30542fd53d4a93070097c06690906f55f0ff2a52fa5803}, {0x2, 0x3}, S4, S3, S2, V820, V822]
Stack pops: 3
Stack additions: [V828, S1, S2]
Exit stack: [V12, 0x1cd, S10, S9, {0x2, 0x3, 0x1cd}, S7, {0xdc91ea68d03b0572213a54d6505b782a13653e806090b342af10ba023fe5437f, 0xe5113280d1468809ce30542fd53d4a93070097c06690906f55f0ff2a52fa5803}, {0x2, 0x3}, S4, S3, V828, V820, S2]

================================

Block 0x962
[0x962:0x970]
---
Predecessors: [0x8c4, 0x924, 0x959, 0xb76, 0xbd8]
Successors: [0x971]
---
0x962 JUMPDEST
0x963 POP
0x964 POP
0x965 SWAP3
0x966 POP
0x967 POP
0x968 POP
0x969 PUSH1 0x40
0x96b MLOAD
0x96c DUP1
0x96d SWAP2
0x96e SUB
0x96f SWAP1
0x970 LOG1
---
0x962: JUMPDEST 
0x969: V829 = 0x40
0x96b: V830 = M[0x40]
0x96e: V831 = SUB S2 V830
0x970: LOG V830 V831 {0xdc91ea68d03b0572213a54d6505b782a13653e806090b342af10ba023fe5437f, 0xe5113280d1468809ce30542fd53d4a93070097c06690906f55f0ff2a52fa5803}
---
Entry stack: [V12, 0x1cd, S10, S9, {0x2, 0x3, 0x1cd}, S7, {0xdc91ea68d03b0572213a54d6505b782a13653e806090b342af10ba023fe5437f, 0xe5113280d1468809ce30542fd53d4a93070097c06690906f55f0ff2a52fa5803}, {0x2, 0x3}, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V12, 0x1cd, S10, S9, {0x2, 0x3, 0x1cd}, S7]

================================

Block 0x971
[0x971:0x971]
---
Predecessors: [0x962]
Successors: [0x972]
---
0x971 JUMPDEST
---
0x971: JUMPDEST 
---
Entry stack: [V12, 0x1cd, S3, S2, {0x2, 0x3, 0x1cd}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, S3, S2, {0x2, 0x3, 0x1cd}, S0]

================================

Block 0x972
[0x972:0x974]
---
Predecessors: [0x971]
Successors: [0x1cd]
---
0x972 JUMPDEST
0x973 POP
0x974 JUMP
---
0x972: JUMPDEST 
0x974: JUMP 0x1cd
---
Entry stack: [V12, 0x1cd, V221]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x975
[0x975:0x98b]
---
Predecessors: [0x2c0]
Successors: [0x98c, 0x991]
---
0x975 JUMPDEST
0x976 PUSH1 0x0
0x978 SLOAD
0x979 CALLER
0x97a PUSH1 0x1
0x97c PUSH1 0xa0
0x97e PUSH1 0x2
0x980 EXP
0x981 SUB
0x982 SWAP1
0x983 DUP2
0x984 AND
0x985 SWAP2
0x986 AND
0x987 EQ
0x988 PUSH2 0x991
0x98b JUMPI
---
0x975: JUMPDEST 
0x976: V832 = 0x0
0x978: V833 = S[0x0]
0x979: V834 = CALLER
0x97a: V835 = 0x1
0x97c: V836 = 0xa0
0x97e: V837 = 0x2
0x980: V838 = EXP 0x2 0xa0
0x981: V839 = SUB 0x10000000000000000000000000000000000000000 0x1
0x984: V840 = AND 0xffffffffffffffffffffffffffffffffffffffff V834
0x986: V841 = AND V833 0xffffffffffffffffffffffffffffffffffffffff
0x987: V842 = EQ V841 V840
0x988: V843 = 0x991
0x98b: JUMPI 0x991 V842
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd]

================================

Block 0x98c
[0x98c:0x990]
---
Predecessors: [0x975]
Successors: []
---
0x98c PUSH1 0x0
0x98e PUSH1 0x0
0x990 REVERT
---
0x98c: V844 = 0x0
0x98e: V845 = 0x0
0x990: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd]

================================

Block 0x991
[0x991:0x998]
---
Predecessors: [0x975]
Successors: [0x999, 0x99e]
---
0x991 JUMPDEST
0x992 CALLVALUE
0x993 ISZERO
0x994 ISZERO
0x995 PUSH2 0x99e
0x998 JUMPI
---
0x991: JUMPDEST 
0x992: V846 = CALLVALUE
0x993: V847 = ISZERO V846
0x994: V848 = ISZERO V847
0x995: V849 = 0x99e
0x998: JUMPI 0x99e V848
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd]

================================

Block 0x999
[0x999:0x99d]
---
Predecessors: [0x991]
Successors: []
---
0x999 PUSH1 0x0
0x99b PUSH1 0x0
0x99d REVERT
---
0x999: V850 = 0x0
0x99b: V851 = 0x0
0x99d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd]

================================

Block 0x99e
[0x99e:0x9d3]
---
Predecessors: [0x991]
Successors: [0x9d4]
---
0x99e JUMPDEST
0x99f PUSH1 0x40
0x9a1 DUP1
0x9a2 MLOAD
0x9a3 CALLVALUE
0x9a4 DUP2
0x9a5 MSTORE
0x9a6 SWAP1
0x9a7 MLOAD
0x9a8 PUSH32 0xd30fc8a1b5907be76206421a3040262f1f6aed0d418c05312ef5ff8de0c9ae4c
0x9c9 SWAP2
0x9ca DUP2
0x9cb SWAP1
0x9cc SUB
0x9cd PUSH1 0x20
0x9cf ADD
0x9d0 SWAP1
0x9d1 LOG1
0x9d2 PUSH1 0x2
---
0x99e: JUMPDEST 
0x99f: V852 = 0x40
0x9a2: V853 = M[0x40]
0x9a3: V854 = CALLVALUE
0x9a5: M[V853] = V854
0x9a7: V855 = M[0x40]
0x9a8: V856 = 0xd30fc8a1b5907be76206421a3040262f1f6aed0d418c05312ef5ff8de0c9ae4c
0x9cc: V857 = SUB V853 V855
0x9cd: V858 = 0x20
0x9cf: V859 = ADD 0x20 V857
0x9d1: LOG V855 V859 0xd30fc8a1b5907be76206421a3040262f1f6aed0d418c05312ef5ff8de0c9ae4c
0x9d2: V860 = 0x2
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V12, 0x1cd, 0x2]

================================

Block 0x9d4
[0x9d4:0x9e3]
---
Predecessors: [0x99e]
Successors: [0x9e4, 0x9e5]
---
0x9d4 JUMPDEST
0x9d5 PUSH1 0x8
0x9d7 SLOAD
0x9d8 PUSH1 0xff
0x9da AND
0x9db PUSH1 0x2
0x9dd DUP2
0x9de GT
0x9df ISZERO
0x9e0 PUSH2 0x9e5
0x9e3 JUMPI
---
0x9d4: JUMPDEST 
0x9d5: V861 = 0x8
0x9d7: V862 = S[0x8]
0x9d8: V863 = 0xff
0x9da: V864 = AND 0xff V862
0x9db: V865 = 0x2
0x9de: V866 = GT V864 0x2
0x9df: V867 = ISZERO V866
0x9e0: V868 = 0x9e5
0x9e3: JUMPI 0x9e5 V867
---
Entry stack: [V12, 0x1cd, 0x2]
Stack pops: 0
Stack additions: [V864]
Exit stack: [V12, 0x1cd, 0x2, V864]

================================

Block 0x9e4
[0x9e4:0x9e4]
---
Predecessors: [0x9d4]
Successors: []
---
0x9e4 INVALID
---
0x9e4: INVALID 
---
Entry stack: [V12, 0x1cd, 0x2, V864]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x2, V864]

================================

Block 0x9e5
[0x9e5:0x9eb]
---
Predecessors: [0x9d4]
Successors: [0x758, 0x9ec]
---
0x9e5 JUMPDEST
0x9e6 EQ
0x9e7 ISZERO
0x9e8 PUSH2 0x758
0x9eb JUMPI
---
0x9e5: JUMPDEST 
0x9e6: V869 = EQ V864 0x2
0x9e7: V870 = ISZERO V869
0x9e8: V871 = 0x758
0x9eb: JUMPI 0x758 V870
---
Entry stack: [V12, 0x1cd, 0x2, V864]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x1cd]

================================

Block 0x9ec
[0x9ec:0x9f9]
---
Predecessors: [0x9e5]
Successors: [0x9fa]
---
0x9ec PUSH1 0x8
0x9ee DUP1
0x9ef SLOAD
0x9f0 PUSH1 0x1
0x9f2 SWAP2
0x9f3 SWAP1
0x9f4 PUSH1 0xff
0x9f6 NOT
0x9f7 AND
0x9f8 DUP3
0x9f9 DUP1
---
0x9ec: V872 = 0x8
0x9ef: V873 = S[0x8]
0x9f0: V874 = 0x1
0x9f4: V875 = 0xff
0x9f6: V876 = NOT 0xff
0x9f7: V877 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V873
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: [0x1, 0x8, V877, 0x1, 0x1]
Exit stack: [V12, 0x1cd, 0x1, 0x8, V877, 0x1, 0x1]

================================

Block 0x9fa
[0x9fa:0xa28]
---
Predecessors: [0x9ec]
Successors: [0xa29]
---
0x9fa JUMPDEST
0x9fb MUL
0x9fc OR
0x9fd SWAP1
0x9fe SSTORE
0x9ff POP
0xa00 PUSH1 0x40
0xa02 MLOAD
0xa03 PUSH32 0xc72486d2cbd21793af2e783cfbec8fa23574ac76994847abdd0ef5f07e899a95
0xa24 SWAP1
0xa25 PUSH1 0x0
0xa27 SWAP1
0xa28 LOG1
---
0x9fa: JUMPDEST 
0x9fb: V878 = MUL 0x1 0x1
0x9fc: V879 = OR 0x1 V877
0x9fe: S[0x8] = V879
0xa00: V880 = 0x40
0xa02: V881 = M[0x40]
0xa03: V882 = 0xc72486d2cbd21793af2e783cfbec8fa23574ac76994847abdd0ef5f07e899a95
0xa25: V883 = 0x0
0xa28: LOG V881 0x0 0xc72486d2cbd21793af2e783cfbec8fa23574ac76994847abdd0ef5f07e899a95
---
Entry stack: [V12, 0x1cd, 0x1, 0x8, V877, 0x1, 0x1]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x1cd]

================================

Block 0xa29
[0xa29:0xa29]
---
Predecessors: [0x9fa]
Successors: [0xa2a]
---
0xa29 JUMPDEST
---
0xa29: JUMPDEST 
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd]

================================

Block 0xa2a
[0xa2a:0xa2a]
---
Predecessors: [0xa29]
Successors: [0xa2b]
---
0xa2a JUMPDEST
---
0xa2a: JUMPDEST 
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd]

================================

Block 0xa2b
[0xa2b:0xa2c]
---
Predecessors: [0xa2a]
Successors: [0x1cd]
---
0xa2b JUMPDEST
0xa2c JUMP
---
0xa2b: JUMPDEST 
0xa2c: JUMP 0x1cd
---
Entry stack: [V12, 0x1cd]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xa2d
[0xa2d:0xa6c]
---
Predecessors: [0x2d2]
Successors: [0x4f3, 0xa6d]
---
0xa2d JUMPDEST
0xa2e PUSH1 0x3
0xa30 DUP1
0xa31 SLOAD
0xa32 PUSH1 0x40
0xa34 DUP1
0xa35 MLOAD
0xa36 PUSH1 0x20
0xa38 PUSH1 0x2
0xa3a PUSH1 0x1
0xa3c DUP6
0xa3d AND
0xa3e ISZERO
0xa3f PUSH2 0x100
0xa42 MUL
0xa43 PUSH1 0x0
0xa45 NOT
0xa46 ADD
0xa47 SWAP1
0xa48 SWAP5
0xa49 AND
0xa4a SWAP4
0xa4b SWAP1
0xa4c SWAP4
0xa4d DIV
0xa4e PUSH1 0x1f
0xa50 DUP2
0xa51 ADD
0xa52 DUP5
0xa53 SWAP1
0xa54 DIV
0xa55 DUP5
0xa56 MUL
0xa57 DUP3
0xa58 ADD
0xa59 DUP5
0xa5a ADD
0xa5b SWAP1
0xa5c SWAP3
0xa5d MSTORE
0xa5e DUP2
0xa5f DUP2
0xa60 MSTORE
0xa61 SWAP3
0xa62 SWAP2
0xa63 DUP4
0xa64 ADD
0xa65 DUP3
0xa66 DUP3
0xa67 DUP1
0xa68 ISZERO
0xa69 PUSH2 0x4f3
0xa6c JUMPI
---
0xa2d: JUMPDEST 
0xa2e: V884 = 0x3
0xa31: V885 = S[0x3]
0xa32: V886 = 0x40
0xa35: V887 = M[0x40]
0xa36: V888 = 0x20
0xa38: V889 = 0x2
0xa3a: V890 = 0x1
0xa3d: V891 = AND V885 0x1
0xa3e: V892 = ISZERO V891
0xa3f: V893 = 0x100
0xa42: V894 = MUL 0x100 V892
0xa43: V895 = 0x0
0xa45: V896 = NOT 0x0
0xa46: V897 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V894
0xa49: V898 = AND V885 V897
0xa4d: V899 = DIV V898 0x2
0xa4e: V900 = 0x1f
0xa51: V901 = ADD V899 0x1f
0xa54: V902 = DIV V901 0x20
0xa56: V903 = MUL 0x20 V902
0xa58: V904 = ADD V887 V903
0xa5a: V905 = ADD 0x20 V904
0xa5d: M[0x40] = V905
0xa60: M[V887] = V899
0xa64: V906 = ADD V887 0x20
0xa68: V907 = ISZERO V899
0xa69: V908 = 0x4f3
0xa6c: JUMPI 0x4f3 V907
---
Entry stack: [V12, 0xf2]
Stack pops: 0
Stack additions: [V887, 0x3, V899, V906, 0x3, V899]
Exit stack: [V12, 0xf2, V887, 0x3, V899, V906, 0x3, V899]

================================

Block 0xa6d
[0xa6d:0xa74]
---
Predecessors: [0xa2d]
Successors: [0x4c8, 0xa75]
---
0xa6d DUP1
0xa6e PUSH1 0x1f
0xa70 LT
0xa71 PUSH2 0x4c8
0xa74 JUMPI
---
0xa6e: V909 = 0x1f
0xa70: V910 = LT 0x1f V899
0xa71: V911 = 0x4c8
0xa74: JUMPI 0x4c8 V910
---
Entry stack: [V12, 0xf2, V887, 0x3, V899, V906, 0x3, V899]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xf2, V887, 0x3, V899, V906, 0x3, V899]

================================

Block 0xa75
[0xa75:0xa87]
---
Predecessors: [0xa6d]
Successors: [0x4f3]
---
0xa75 PUSH2 0x100
0xa78 DUP1
0xa79 DUP4
0xa7a SLOAD
0xa7b DIV
0xa7c MUL
0xa7d DUP4
0xa7e MSTORE
0xa7f SWAP2
0xa80 PUSH1 0x20
0xa82 ADD
0xa83 SWAP2
0xa84 PUSH2 0x4f3
0xa87 JUMP
---
0xa75: V912 = 0x100
0xa7a: V913 = S[0x3]
0xa7b: V914 = DIV V913 0x100
0xa7c: V915 = MUL V914 0x100
0xa7e: M[V906] = V915
0xa80: V916 = 0x20
0xa82: V917 = ADD 0x20 V906
0xa84: V918 = 0x4f3
0xa87: JUMP 0x4f3
---
Entry stack: [V12, 0xf2, V887, 0x3, V899, V906, 0x3, V899]
Stack pops: 3
Stack additions: [V917, S1, S0]
Exit stack: [V12, 0xf2, V887, 0x3, V899, V917, 0x3, V899]

================================

Block 0xa88
[0xa88:0xa95]
---
Predecessors: []
Successors: [0xa96]
---
0xa88 JUMPDEST
0xa89 DUP3
0xa8a ADD
0xa8b SWAP2
0xa8c SWAP1
0xa8d PUSH1 0x0
0xa8f MSTORE
0xa90 PUSH1 0x20
0xa92 PUSH1 0x0
0xa94 SHA3
0xa95 SWAP1
---
0xa88: JUMPDEST 
0xa8a: V919 = ADD S2 S0
0xa8d: V920 = 0x0
0xa8f: M[0x0] = S1
0xa90: V921 = 0x20
0xa92: V922 = 0x0
0xa94: V923 = SHA3 0x0 0x20
---
Entry stack: []
Stack pops: 3
Stack additions: [V919, V923, S2]
Exit stack: [V919, V923, S2]

================================

Block 0xa96
[0xa96:0xaa9]
---
Predecessors: [0xa88]
Successors: [0x4d6, 0xaaa]
---
0xa96 JUMPDEST
0xa97 DUP2
0xa98 SLOAD
0xa99 DUP2
0xa9a MSTORE
0xa9b SWAP1
0xa9c PUSH1 0x1
0xa9e ADD
0xa9f SWAP1
0xaa0 PUSH1 0x20
0xaa2 ADD
0xaa3 DUP1
0xaa4 DUP4
0xaa5 GT
0xaa6 PUSH2 0x4d6
0xaa9 JUMPI
---
0xa96: JUMPDEST 
0xa98: V924 = S[V923]
0xa9a: M[S0] = V924
0xa9c: V925 = 0x1
0xa9e: V926 = ADD 0x1 V923
0xaa0: V927 = 0x20
0xaa2: V928 = ADD 0x20 S0
0xaa5: V929 = GT V919 V928
0xaa6: V930 = 0x4d6
0xaa9: JUMPI 0x4d6 V929
---
Entry stack: [V919, V923, S0]
Stack pops: 3
Stack additions: [S2, V926, V928]
Exit stack: [V919, V926, V928]

================================

Block 0xaaa
[0xaaa:0xab2]
---
Predecessors: [0xa96]
Successors: [0xab3]
---
0xaaa DUP3
0xaab SWAP1
0xaac SUB
0xaad PUSH1 0x1f
0xaaf AND
0xab0 DUP3
0xab1 ADD
0xab2 SWAP2
---
0xaac: V931 = SUB V928 V919
0xaad: V932 = 0x1f
0xaaf: V933 = AND 0x1f V931
0xab1: V934 = ADD V919 V933
---
Entry stack: [V919, V926, V928]
Stack pops: 3
Stack additions: [V934, S1, S2]
Exit stack: [V934, V926, V919]

================================

Block 0xab3
[0xab3:0xaba]
---
Predecessors: [0xaaa]
Successors: []
Has unresolved jump.
---
0xab3 JUMPDEST
0xab4 POP
0xab5 POP
0xab6 POP
0xab7 POP
0xab8 POP
0xab9 DUP2
0xaba JUMP
---
0xab3: JUMPDEST 
0xaba: JUMP S6
---
Entry stack: [V934, V926, V919]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [S3, S2]

================================

Block 0xabb
[0xabb:0xad1]
---
Predecessors: [0x362]
Successors: [0xad2, 0xad7]
---
0xabb JUMPDEST
0xabc PUSH1 0x0
0xabe SLOAD
0xabf CALLER
0xac0 PUSH1 0x1
0xac2 PUSH1 0xa0
0xac4 PUSH1 0x2
0xac6 EXP
0xac7 SUB
0xac8 SWAP1
0xac9 DUP2
0xaca AND
0xacb SWAP2
0xacc AND
0xacd EQ
0xace PUSH2 0xad7
0xad1 JUMPI
---
0xabb: JUMPDEST 
0xabc: V935 = 0x0
0xabe: V936 = S[0x0]
0xabf: V937 = CALLER
0xac0: V938 = 0x1
0xac2: V939 = 0xa0
0xac4: V940 = 0x2
0xac6: V941 = EXP 0x2 0xa0
0xac7: V942 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaca: V943 = AND 0xffffffffffffffffffffffffffffffffffffffff V937
0xacc: V944 = AND V936 0xffffffffffffffffffffffffffffffffffffffff
0xacd: V945 = EQ V944 V943
0xace: V946 = 0xad7
0xad1: JUMPI 0xad7 V945
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd]

================================

Block 0xad2
[0xad2:0xad6]
---
Predecessors: [0xabb]
Successors: []
---
0xad2 PUSH1 0x0
0xad4 PUSH1 0x0
0xad6 REVERT
---
0xad2: V947 = 0x0
0xad4: V948 = 0x0
0xad6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd]

================================

Block 0xad7
[0xad7:0xae9]
---
Predecessors: [0xabb]
Successors: [0xaea, 0xaeb]
---
0xad7 JUMPDEST
0xad8 PUSH1 0x8
0xada SLOAD
0xadb PUSH1 0x0
0xadd SWAP1
0xade PUSH1 0xff
0xae0 AND
0xae1 PUSH1 0x2
0xae3 DUP2
0xae4 GT
0xae5 ISZERO
0xae6 PUSH2 0xaeb
0xae9 JUMPI
---
0xad7: JUMPDEST 
0xad8: V949 = 0x8
0xada: V950 = S[0x8]
0xadb: V951 = 0x0
0xade: V952 = 0xff
0xae0: V953 = AND 0xff V950
0xae1: V954 = 0x2
0xae4: V955 = GT V953 0x2
0xae5: V956 = ISZERO V955
0xae6: V957 = 0xaeb
0xae9: JUMPI 0xaeb V956
---
Entry stack: [V12, 0x1cd]
Stack pops: 0
Stack additions: [0x0, V953]
Exit stack: [V12, 0x1cd, 0x0, V953]

================================

Block 0xaea
[0xaea:0xaea]
---
Predecessors: [0xad7]
Successors: []
---
0xaea INVALID
---
0xaea: INVALID 
---
Entry stack: [V12, 0x1cd, 0x0, V953]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x0, V953]

================================

Block 0xaeb
[0xaeb:0xaf5]
---
Predecessors: [0xad7]
Successors: [0xaf6, 0xaf7]
---
0xaeb JUMPDEST
0xaec DUP2
0xaed PUSH1 0x2
0xaef DUP2
0xaf0 GT
0xaf1 ISZERO
0xaf2 PUSH2 0xaf7
0xaf5 JUMPI
---
0xaeb: JUMPDEST 
0xaed: V958 = 0x2
0xaf0: V959 = GT 0x0 0x2
0xaf1: V960 = ISZERO 0x0
0xaf2: V961 = 0xaf7
0xaf5: JUMPI 0xaf7 0x1
---
Entry stack: [V12, 0x1cd, 0x0, V953]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V12, 0x1cd, 0x0, V953, 0x0]

================================

Block 0xaf6
[0xaf6:0xaf6]
---
Predecessors: [0xaeb]
Successors: []
---
0xaf6 INVALID
---
0xaf6: INVALID 
---
Entry stack: [V12, 0x1cd, 0x0, V953, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x0, V953, 0x0]

================================

Block 0xaf7
[0xaf7:0xafc]
---
Predecessors: [0xaeb]
Successors: [0xafd, 0xb02]
---
0xaf7 JUMPDEST
0xaf8 EQ
0xaf9 PUSH2 0xb02
0xafc JUMPI
---
0xaf7: JUMPDEST 
0xaf8: V962 = EQ 0x0 V953
0xaf9: V963 = 0xb02
0xafc: JUMPI 0xb02 V962
---
Entry stack: [V12, 0x1cd, 0x0, V953, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x1cd, 0x0]

================================

Block 0xafd
[0xafd:0xb01]
---
Predecessors: [0xaf7]
Successors: []
---
0xafd PUSH1 0x0
0xaff PUSH1 0x0
0xb01 REVERT
---
0xafd: V964 = 0x0
0xaff: V965 = 0x0
0xb01: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x0]

================================

Block 0xb02
[0xb02:0xb38]
---
Predecessors: [0xaf7]
Successors: []
---
0xb02 JUMPDEST
0xb03 PUSH1 0x40
0xb05 MLOAD
0xb06 PUSH32 0x8bc5aab0b8d1d51bcc031c58eb657027aac7eaa971cc1038d29846400ca22fc5
0xb27 SWAP1
0xb28 PUSH1 0x0
0xb2a SWAP1
0xb2b LOG1
0xb2c PUSH1 0x0
0xb2e SLOAD
0xb2f PUSH1 0x1
0xb31 PUSH1 0xa0
0xb33 PUSH1 0x2
0xb35 EXP
0xb36 SUB
0xb37 AND
0xb38 SELFDESTRUCT
---
0xb02: JUMPDEST 
0xb03: V966 = 0x40
0xb05: V967 = M[0x40]
0xb06: V968 = 0x8bc5aab0b8d1d51bcc031c58eb657027aac7eaa971cc1038d29846400ca22fc5
0xb28: V969 = 0x0
0xb2b: LOG V967 0x0 0x8bc5aab0b8d1d51bcc031c58eb657027aac7eaa971cc1038d29846400ca22fc5
0xb2c: V970 = 0x0
0xb2e: V971 = S[0x0]
0xb2f: V972 = 0x1
0xb31: V973 = 0xa0
0xb33: V974 = 0x2
0xb35: V975 = EXP 0x2 0xa0
0xb36: V976 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb37: V977 = AND 0xffffffffffffffffffffffffffffffffffffffff V971
0xb38: SELFDESTRUCT V977
---
Entry stack: [V12, 0x1cd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, 0x0]

================================

Block 0xb39
[0xb39:0xb39]
---
Predecessors: []
Successors: [0xb3a]
---
0xb39 JUMPDEST
---
0xb39: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb3a
[0xb3a:0xb3b]
---
Predecessors: [0xb39]
Successors: [0xb3c]
---
0xb3a JUMPDEST
0xb3b POP
---
0xb3a: JUMPDEST 
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb3c
[0xb3c:0xb3d]
---
Predecessors: [0xb3a]
Successors: []
Has unresolved jump.
---
0xb3c JUMPDEST
0xb3d JUMP
---
0xb3c: JUMPDEST 
0xb3d: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb3e
[0xb3e:0xb46]
---
Predecessors: [0x374]
Successors: [0x37c]
---
0xb3e JUMPDEST
0xb3f PUSH1 0x8
0xb41 SLOAD
0xb42 PUSH1 0xff
0xb44 AND
0xb45 DUP2
0xb46 JUMP
---
0xb3e: JUMPDEST 
0xb3f: V978 = 0x8
0xb41: V979 = S[0x8]
0xb42: V980 = 0xff
0xb44: V981 = AND 0xff V979
0xb46: JUMP 0x37c
---
Entry stack: [V12, 0x37c]
Stack pops: 1
Stack additions: [S0, V981]
Exit stack: [V12, 0x37c, V981]

================================

Block 0xb47
[0xb47:0xb5d]
---
Predecessors: [0x3a8]
Successors: [0xb5e, 0xb63]
---
0xb47 JUMPDEST
0xb48 PUSH1 0x1
0xb4a SLOAD
0xb4b CALLER
0xb4c PUSH1 0x1
0xb4e PUSH1 0xa0
0xb50 PUSH1 0x2
0xb52 EXP
0xb53 SUB
0xb54 SWAP1
0xb55 DUP2
0xb56 AND
0xb57 SWAP2
0xb58 AND
0xb59 EQ
0xb5a PUSH2 0xb63
0xb5d JUMPI
---
0xb47: JUMPDEST 
0xb48: V982 = 0x1
0xb4a: V983 = S[0x1]
0xb4b: V984 = CALLER
0xb4c: V985 = 0x1
0xb4e: V986 = 0xa0
0xb50: V987 = 0x2
0xb52: V988 = EXP 0x2 0xa0
0xb53: V989 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb56: V990 = AND 0xffffffffffffffffffffffffffffffffffffffff V984
0xb58: V991 = AND V983 0xffffffffffffffffffffffffffffffffffffffff
0xb59: V992 = EQ V991 V990
0xb5a: V993 = 0xb63
0xb5d: JUMPI 0xb63 V992
---
Entry stack: [V12, 0x1cd, V319]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, V319]

================================

Block 0xb5e
[0xb5e:0xb62]
---
Predecessors: [0xb47]
Successors: []
---
0xb5e PUSH1 0x0
0xb60 PUSH1 0x0
0xb62 REVERT
---
0xb5e: V994 = 0x0
0xb60: V995 = 0x0
0xb62: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1cd, V319]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, V319]

================================

Block 0xb63
[0xb63:0xb75]
---
Predecessors: [0xb47]
Successors: [0xe17]
---
0xb63 JUMPDEST
0xb64 DUP1
0xb65 MLOAD
0xb66 PUSH2 0xb76
0xb69 SWAP1
0xb6a PUSH1 0x3
0xb6c SWAP1
0xb6d PUSH1 0x20
0xb6f DUP5
0xb70 ADD
0xb71 SWAP1
0xb72 PUSH2 0xe17
0xb75 JUMP
---
0xb63: JUMPDEST 
0xb65: V996 = M[V319]
0xb66: V997 = 0xb76
0xb6a: V998 = 0x3
0xb6d: V999 = 0x20
0xb70: V1000 = ADD V319 0x20
0xb72: V1001 = 0xe17
0xb75: JUMP 0xe17
---
Entry stack: [V12, 0x1cd, V319]
Stack pops: 1
Stack additions: [S0, 0xb76, 0x3, V1000, V996]
Exit stack: [V12, 0x1cd, V319, 0xb76, 0x3, V1000, V996]

================================

Block 0xb76
[0xb76:0xbcf]
---
Predecessors: [0xe92]
Successors: [0x962, 0xbd0]
---
0xb76 JUMPDEST
0xb77 POP
0xb78 PUSH1 0x40
0xb7a DUP1
0xb7b MLOAD
0xb7c PUSH1 0x20
0xb7e DUP1
0xb7f DUP3
0xb80 MSTORE
0xb81 PUSH1 0x3
0xb83 DUP1
0xb84 SLOAD
0xb85 PUSH1 0x2
0xb87 PUSH1 0x0
0xb89 NOT
0xb8a PUSH2 0x100
0xb8d PUSH1 0x1
0xb8f DUP5
0xb90 AND
0xb91 ISZERO
0xb92 MUL
0xb93 ADD
0xb94 SWAP1
0xb95 SWAP2
0xb96 AND
0xb97 DIV
0xb98 SWAP2
0xb99 DUP4
0xb9a ADD
0xb9b DUP3
0xb9c SWAP1
0xb9d MSTORE
0xb9e PUSH32 0xe5113280d1468809ce30542fd53d4a93070097c06690906f55f0ff2a52fa5803
0xbbf SWAP4
0xbc0 SWAP1
0xbc1 SWAP3
0xbc2 SWAP2
0xbc3 DUP3
0xbc4 SWAP2
0xbc5 DUP3
0xbc6 ADD
0xbc7 SWAP1
0xbc8 DUP5
0xbc9 SWAP1
0xbca DUP1
0xbcb ISZERO
0xbcc PUSH2 0x962
0xbcf JUMPI
---
0xb76: JUMPDEST 
0xb78: V1002 = 0x40
0xb7b: V1003 = M[0x40]
0xb7c: V1004 = 0x20
0xb80: M[V1003] = 0x20
0xb81: V1005 = 0x3
0xb84: V1006 = S[0x3]
0xb85: V1007 = 0x2
0xb87: V1008 = 0x0
0xb89: V1009 = NOT 0x0
0xb8a: V1010 = 0x100
0xb8d: V1011 = 0x1
0xb90: V1012 = AND V1006 0x1
0xb91: V1013 = ISZERO V1012
0xb92: V1014 = MUL V1013 0x100
0xb93: V1015 = ADD V1014 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xb96: V1016 = AND V1006 V1015
0xb97: V1017 = DIV V1016 0x2
0xb9a: V1018 = ADD V1003 0x20
0xb9d: M[V1018] = V1017
0xb9e: V1019 = 0xe5113280d1468809ce30542fd53d4a93070097c06690906f55f0ff2a52fa5803
0xbc6: V1020 = ADD V1003 0x40
0xbcb: V1021 = ISZERO V1017
0xbcc: V1022 = 0x962
0xbcf: JUMPI 0x962 V1021
---
Entry stack: [V12, 0x1cd, S4, S3, {0x2, 0x3, 0x1cd}, S1, S0]
Stack pops: 1
Stack additions: [0xe5113280d1468809ce30542fd53d4a93070097c06690906f55f0ff2a52fa5803, 0x3, V1003, V1003, V1020, 0x3, V1017]
Exit stack: [V12, 0x1cd, S4, S3, {0x2, 0x3, 0x1cd}, S1, 0xe5113280d1468809ce30542fd53d4a93070097c06690906f55f0ff2a52fa5803, 0x3, V1003, V1003, V1020, 0x3, V1017]

================================

Block 0xbd0
[0xbd0:0xbd7]
---
Predecessors: [0xb76]
Successors: [0x937, 0xbd8]
---
0xbd0 DUP1
0xbd1 PUSH1 0x1f
0xbd3 LT
0xbd4 PUSH2 0x937
0xbd7 JUMPI
---
0xbd1: V1023 = 0x1f
0xbd3: V1024 = LT 0x1f V1017
0xbd4: V1025 = 0x937
0xbd7: JUMPI 0x937 V1024
---
Entry stack: [V12, 0x1cd, S10, S9, {0x2, 0x3, 0x1cd}, S7, 0xe5113280d1468809ce30542fd53d4a93070097c06690906f55f0ff2a52fa5803, 0x3, V1003, V1003, V1020, 0x3, V1017]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1cd, S10, S9, {0x2, 0x3, 0x1cd}, S7, 0xe5113280d1468809ce30542fd53d4a93070097c06690906f55f0ff2a52fa5803, 0x3, V1003, V1003, V1020, 0x3, V1017]

================================

Block 0xbd8
[0xbd8:0xbea]
---
Predecessors: [0xbd0]
Successors: [0x962]
---
0xbd8 PUSH2 0x100
0xbdb DUP1
0xbdc DUP4
0xbdd SLOAD
0xbde DIV
0xbdf MUL
0xbe0 DUP4
0xbe1 MSTORE
0xbe2 SWAP2
0xbe3 PUSH1 0x20
0xbe5 ADD
0xbe6 SWAP2
0xbe7 PUSH2 0x962
0xbea JUMP
---
0xbd8: V1026 = 0x100
0xbdd: V1027 = S[0x3]
0xbde: V1028 = DIV V1027 0x100
0xbdf: V1029 = MUL V1028 0x100
0xbe1: M[V1020] = V1029
0xbe3: V1030 = 0x20
0xbe5: V1031 = ADD 0x20 V1020
0xbe7: V1032 = 0x962
0xbea: JUMP 0x962
---
Entry stack: [V12, 0x1cd, S10, S9, {0x2, 0x3, 0x1cd}, S7, 0xe5113280d1468809ce30542fd53d4a93070097c06690906f55f0ff2a52fa5803, 0x3, V1003, V1003, V1020, 0x3, V1017]
Stack pops: 3
Stack additions: [V1031, S1, S0]
Exit stack: [V12, 0x1cd, S10, S9, {0x2, 0x3, 0x1cd}, S7, 0xe5113280d1468809ce30542fd53d4a93070097c06690906f55f0ff2a52fa5803, 0x3, V1003, V1003, V1031, 0x3, V1017]

================================

Block 0xbeb
[0xbeb:0xbf8]
---
Predecessors: []
Successors: [0xbf9]
---
0xbeb JUMPDEST
0xbec DUP3
0xbed ADD
0xbee SWAP2
0xbef SWAP1
0xbf0 PUSH1 0x0
0xbf2 MSTORE
0xbf3 PUSH1 0x20
0xbf5 PUSH1 0x0
0xbf7 SHA3
0xbf8 SWAP1
---
0xbeb: JUMPDEST 
0xbed: V1033 = ADD S2 S0
0xbf0: V1034 = 0x0
0xbf2: M[0x0] = S1
0xbf3: V1035 = 0x20
0xbf5: V1036 = 0x0
0xbf7: V1037 = SHA3 0x0 0x20
---
Entry stack: []
Stack pops: 3
Stack additions: [V1033, V1037, S2]
Exit stack: [V1033, V1037, S2]

================================

Block 0xbf9
[0xbf9:0xc0c]
---
Predecessors: [0xbeb]
Successors: [0x945, 0xc0d]
---
0xbf9 JUMPDEST
0xbfa DUP2
0xbfb SLOAD
0xbfc DUP2
0xbfd MSTORE
0xbfe SWAP1
0xbff PUSH1 0x1
0xc01 ADD
0xc02 SWAP1
0xc03 PUSH1 0x20
0xc05 ADD
0xc06 DUP1
0xc07 DUP4
0xc08 GT
0xc09 PUSH2 0x945
0xc0c JUMPI
---
0xbf9: JUMPDEST 
0xbfb: V1038 = S[V1037]
0xbfd: M[S0] = V1038
0xbff: V1039 = 0x1
0xc01: V1040 = ADD 0x1 V1037
0xc03: V1041 = 0x20
0xc05: V1042 = ADD 0x20 S0
0xc08: V1043 = GT V1033 V1042
0xc09: V1044 = 0x945
0xc0c: JUMPI 0x945 V1043
---
Entry stack: [V1033, V1037, S0]
Stack pops: 3
Stack additions: [S2, V1040, V1042]
Exit stack: [V1033, V1040, V1042]

================================

Block 0xc0d
[0xc0d:0xc15]
---
Predecessors: [0xbf9]
Successors: [0xc16]
---
0xc0d DUP3
0xc0e SWAP1
0xc0f SUB
0xc10 PUSH1 0x1f
0xc12 AND
0xc13 DUP3
0xc14 ADD
0xc15 SWAP2
---
0xc0f: V1045 = SUB V1042 V1033
0xc10: V1046 = 0x1f
0xc12: V1047 = AND 0x1f V1045
0xc14: V1048 = ADD V1033 V1047
---
Entry stack: [V1033, V1040, V1042]
Stack pops: 3
Stack additions: [V1048, S1, S2]
Exit stack: [V1048, V1040, V1033]

================================

Block 0xc16
[0xc16:0xc24]
---
Predecessors: [0xc0d]
Successors: [0xc25]
---
0xc16 JUMPDEST
0xc17 POP
0xc18 POP
0xc19 SWAP3
0xc1a POP
0xc1b POP
0xc1c POP
0xc1d PUSH1 0x40
0xc1f MLOAD
0xc20 DUP1
0xc21 SWAP2
0xc22 SUB
0xc23 SWAP1
0xc24 LOG1
---
0xc16: JUMPDEST 
0xc1d: V1049 = 0x40
0xc1f: V1050 = M[0x40]
0xc22: V1051 = SUB V1048 V1050
0xc24: LOG V1050 V1051 S6
---
Entry stack: [V1048, V1040, V1033]
Stack pops: 7
Stack additions: []
Exit stack: []

================================

Block 0xc25
[0xc25:0xc25]
---
Predecessors: [0xc16]
Successors: [0xc26]
---
0xc25 JUMPDEST
---
0xc25: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc26
[0xc26:0xc28]
---
Predecessors: [0xc25]
Successors: []
Has unresolved jump.
---
0xc26 JUMPDEST
0xc27 POP
0xc28 JUMP
---
0xc26: JUMPDEST 
0xc28: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xc29
[0xc29:0xc31]
---
Predecessors: [0x400]
Successors: [0x37c]
---
0xc29 JUMPDEST
0xc2a PUSH1 0x5
0xc2c SLOAD
0xc2d PUSH1 0xff
0xc2f AND
0xc30 DUP2
0xc31 JUMP
---
0xc29: JUMPDEST 
0xc2a: V1052 = 0x5
0xc2c: V1053 = S[0x5]
0xc2d: V1054 = 0xff
0xc2f: V1055 = AND 0xff V1053
0xc31: JUMP 0x37c
---
Entry stack: [V12, 0x37c]
Stack pops: 1
Stack additions: [S0, V1055]
Exit stack: [V12, 0x37c, V1055]

================================

Block 0xc32
[0xc32:0xc37]
---
Predecessors: [0x434]
Successors: [0x244]
---
0xc32 JUMPDEST
0xc33 PUSH1 0x7
0xc35 SLOAD
0xc36 DUP2
0xc37 JUMP
---
0xc32: JUMPDEST 
0xc33: V1056 = 0x7
0xc35: V1057 = S[0x7]
0xc37: JUMP 0x244
---
Entry stack: [V12, 0x244]
Stack pops: 1
Stack additions: [S0, V1057]
Exit stack: [V12, 0x244, V1057]

================================

Block 0xc38
[0xc38:0xc3d]
---
Predecessors: [0x456]
Successors: [0x244]
---
0xc38 JUMPDEST
0xc39 PUSH1 0x4
0xc3b SLOAD
0xc3c DUP2
0xc3d JUMP
---
0xc38: JUMPDEST 
0xc39: V1058 = 0x4
0xc3b: V1059 = S[0x4]
0xc3d: JUMP 0x244
---
Entry stack: [V12, 0x244]
Stack pops: 1
Stack additions: [S0, V1059]
Exit stack: [V12, 0x244, V1059]

================================

Block 0xc3e
[0xc3e:0xc55]
---
Predecessors: [0x554, 0x87a]
Successors: [0xc56, 0xc57]
---
0xc3e JUMPDEST
0xc3f PUSH1 0x8
0xc41 SLOAD
0xc42 PUSH1 0x0
0xc44 SWAP1
0xc45 DUP2
0xc46 SWAP1
0xc47 PUSH1 0x1
0xc49 SWAP1
0xc4a PUSH1 0xff
0xc4c AND
0xc4d PUSH1 0x2
0xc4f DUP2
0xc50 GT
0xc51 ISZERO
0xc52 PUSH2 0xc57
0xc55 JUMPI
---
0xc3e: JUMPDEST 
0xc3f: V1060 = 0x8
0xc41: V1061 = S[0x8]
0xc42: V1062 = 0x0
0xc47: V1063 = 0x1
0xc4a: V1064 = 0xff
0xc4c: V1065 = AND 0xff V1061
0xc4d: V1066 = 0x2
0xc50: V1067 = GT V1065 0x2
0xc51: V1068 = ISZERO V1067
0xc52: V1069 = 0xc57
0xc55: JUMPI 0xc57 V1068
---
Entry stack: [V12, 0x1b1, S4, {0x0, 0x1cd}, 0x1, {0x55d, 0x88c}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x1, V1065]
Exit stack: [V12, 0x1b1, S4, {0x0, 0x1cd}, 0x1, {0x55d, 0x88c}, S0, 0x0, 0x0, 0x1, V1065]

================================

Block 0xc56
[0xc56:0xc56]
---
Predecessors: [0xc3e]
Successors: []
---
0xc56 INVALID
---
0xc56: INVALID 
---
Entry stack: [V12, 0x1b1, S8, {0x0, 0x1cd}, 0x1, {0x55d, 0x88c}, S4, 0x0, 0x0, 0x1, V1065]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S8, {0x0, 0x1cd}, 0x1, {0x55d, 0x88c}, S4, 0x0, 0x0, 0x1, V1065]

================================

Block 0xc57
[0xc57:0xc61]
---
Predecessors: [0xc3e]
Successors: [0xc62, 0xc63]
---
0xc57 JUMPDEST
0xc58 DUP2
0xc59 PUSH1 0x2
0xc5b DUP2
0xc5c GT
0xc5d ISZERO
0xc5e PUSH2 0xc63
0xc61 JUMPI
---
0xc57: JUMPDEST 
0xc59: V1070 = 0x2
0xc5c: V1071 = GT 0x1 0x2
0xc5d: V1072 = ISZERO 0x0
0xc5e: V1073 = 0xc63
0xc61: JUMPI 0xc63 0x1
---
Entry stack: [V12, 0x1b1, S8, {0x0, 0x1cd}, 0x1, {0x55d, 0x88c}, S4, 0x0, 0x0, 0x1, V1065]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V12, 0x1b1, S8, {0x0, 0x1cd}, 0x1, {0x55d, 0x88c}, S4, 0x0, 0x0, 0x1, V1065, 0x1]

================================

Block 0xc62
[0xc62:0xc62]
---
Predecessors: [0xc57]
Successors: []
---
0xc62 INVALID
---
0xc62: INVALID 
---
Entry stack: [V12, 0x1b1, S9, {0x0, 0x1cd}, 0x1, {0x55d, 0x88c}, S5, 0x0, 0x0, 0x1, V1065, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S9, {0x0, 0x1cd}, 0x1, {0x55d, 0x88c}, S5, 0x0, 0x0, 0x1, V1065, 0x1]

================================

Block 0xc63
[0xc63:0xc68]
---
Predecessors: [0xc57]
Successors: [0xc69, 0xc6e]
---
0xc63 JUMPDEST
0xc64 EQ
0xc65 PUSH2 0xc6e
0xc68 JUMPI
---
0xc63: JUMPDEST 
0xc64: V1074 = EQ 0x1 V1065
0xc65: V1075 = 0xc6e
0xc68: JUMPI 0xc6e V1074
---
Entry stack: [V12, 0x1b1, S9, {0x0, 0x1cd}, 0x1, {0x55d, 0x88c}, S5, 0x0, 0x0, 0x1, V1065, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x1b1, S9, {0x0, 0x1cd}, 0x1, {0x55d, 0x88c}, S5, 0x0, 0x0, 0x1]

================================

Block 0xc69
[0xc69:0xc6d]
---
Predecessors: [0xc63]
Successors: []
---
0xc69 PUSH1 0x0
0xc6b PUSH1 0x0
0xc6d REVERT
---
0xc69: V1076 = 0x0
0xc6b: V1077 = 0x0
0xc6d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x88c}, S3, 0x0, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x88c}, S3, 0x0, 0x0, 0x1]

================================

Block 0xc6e
[0xc6e:0xc9f]
---
Predecessors: [0xc63]
Successors: [0xca0, 0xcd3]
---
0xc6e JUMPDEST
0xc6f PUSH1 0x1
0xc71 SLOAD
0xc72 PUSH1 0x40
0xc74 MLOAD
0xc75 PUSH1 0x1
0xc77 PUSH1 0xa0
0xc79 PUSH1 0x2
0xc7b EXP
0xc7c SUB
0xc7d SWAP1
0xc7e SWAP2
0xc7f AND
0xc80 SWAP1
0xc81 DUP6
0xc82 ISZERO
0xc83 PUSH2 0x8fc
0xc86 MUL
0xc87 SWAP1
0xc88 DUP7
0xc89 SWAP1
0xc8a PUSH1 0x0
0xc8c DUP2
0xc8d DUP2
0xc8e DUP2
0xc8f DUP6
0xc90 DUP9
0xc91 DUP9
0xc92 CALL
0xc93 SWAP4
0xc94 POP
0xc95 POP
0xc96 POP
0xc97 POP
0xc98 SWAP2
0xc99 POP
0xc9a DUP2
0xc9b ISZERO
0xc9c PUSH2 0xcd3
0xc9f JUMPI
---
0xc6e: JUMPDEST 
0xc6f: V1078 = 0x1
0xc71: V1079 = S[0x1]
0xc72: V1080 = 0x40
0xc74: V1081 = M[0x40]
0xc75: V1082 = 0x1
0xc77: V1083 = 0xa0
0xc79: V1084 = 0x2
0xc7b: V1085 = EXP 0x2 0xa0
0xc7c: V1086 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7f: V1087 = AND V1079 0xffffffffffffffffffffffffffffffffffffffff
0xc82: V1088 = ISZERO S3
0xc83: V1089 = 0x8fc
0xc86: V1090 = MUL 0x8fc V1088
0xc8a: V1091 = 0x0
0xc92: V1092 = CALL V1090 V1087 S3 V1081 0x0 V1081 0x0
0xc9b: V1093 = ISZERO V1092
0xc9c: V1094 = 0xcd3
0xc9f: JUMPI 0xcd3 V1093
---
Entry stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x88c}, S3, 0x0, 0x0, 0x1]
Stack pops: 4
Stack additions: [S3, S2, V1092, S0]
Exit stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x88c}, S3, 0x0, V1092, 0x1]

================================

Block 0xca0
[0xca0:0xcd2]
---
Predecessors: [0xc6e]
Successors: [0xcd3]
---
0xca0 PUSH1 0x40
0xca2 DUP1
0xca3 MLOAD
0xca4 DUP6
0xca5 DUP2
0xca6 MSTORE
0xca7 SWAP1
0xca8 MLOAD
0xca9 PUSH32 0x952b264c8e0a06cddb4bbaa6d6af1d565145329fd95bbe72cb2b53942b2dc966
0xcca SWAP2
0xccb DUP2
0xccc SWAP1
0xccd SUB
0xcce PUSH1 0x20
0xcd0 ADD
0xcd1 SWAP1
0xcd2 LOG1
---
0xca0: V1095 = 0x40
0xca3: V1096 = M[0x40]
0xca6: M[V1096] = S3
0xca8: V1097 = M[0x40]
0xca9: V1098 = 0x952b264c8e0a06cddb4bbaa6d6af1d565145329fd95bbe72cb2b53942b2dc966
0xccd: V1099 = SUB V1096 V1097
0xcce: V1100 = 0x20
0xcd0: V1101 = ADD 0x20 V1099
0xcd2: LOG V1097 V1101 0x952b264c8e0a06cddb4bbaa6d6af1d565145329fd95bbe72cb2b53942b2dc966
---
Entry stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x88c}, S3, 0x0, V1092, 0x1]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x88c}, S3, 0x0, V1092, 0x1]

================================

Block 0xcd3
[0xcd3:0xce4]
---
Predecessors: [0xc6e, 0xca0, 0xd5f]
Successors: [0xce5, 0xd23]
---
0xcd3 JUMPDEST
0xcd4 PUSH1 0x1
0xcd6 PUSH1 0xa0
0xcd8 PUSH1 0x2
0xcda EXP
0xcdb SUB
0xcdc ADDRESS
0xcdd AND
0xcde BALANCE
0xcdf ISZERO
0xce0 ISZERO
0xce1 PUSH2 0xd23
0xce4 JUMPI
---
0xcd3: JUMPDEST 
0xcd4: V1102 = 0x1
0xcd6: V1103 = 0xa0
0xcd8: V1104 = 0x2
0xcda: V1105 = EXP 0x2 0xa0
0xcdb: V1106 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcdc: V1107 = ADDRESS
0xcdd: V1108 = AND V1107 0xffffffffffffffffffffffffffffffffffffffff
0xcde: V1109 = BALANCE V1108
0xcdf: V1110 = ISZERO V1109
0xce0: V1111 = ISZERO V1110
0xce1: V1112 = 0xd23
0xce4: JUMPI 0xd23 V1111
---
Entry stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859, 0x88c}, S3, 0x0, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859, 0x88c}, S3, 0x0, S1, 0x1]

================================

Block 0xce5
[0xce5:0xcf3]
---
Predecessors: [0xcd3]
Successors: [0xcf4]
---
0xce5 PUSH1 0x8
0xce7 DUP1
0xce8 SLOAD
0xce9 PUSH1 0x2
0xceb SWAP2
0xcec SWAP1
0xced PUSH1 0xff
0xcef NOT
0xcf0 AND
0xcf1 PUSH1 0x1
0xcf3 DUP4
---
0xce5: V1113 = 0x8
0xce8: V1114 = S[0x8]
0xce9: V1115 = 0x2
0xced: V1116 = 0xff
0xcef: V1117 = NOT 0xff
0xcf0: V1118 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1114
0xcf1: V1119 = 0x1
---
Entry stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859, 0x88c}, S3, 0x0, S1, 0x1]
Stack pops: 0
Stack additions: [0x2, 0x8, V1118, 0x1, 0x2]
Exit stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859, 0x88c}, S3, 0x0, S1, 0x1, 0x2, 0x8, V1118, 0x1, 0x2]

================================

Block 0xcf4
[0xcf4:0xd22]
---
Predecessors: [0xce5, 0xdc9]
Successors: [0xd23]
---
0xcf4 JUMPDEST
0xcf5 MUL
0xcf6 OR
0xcf7 SWAP1
0xcf8 SSTORE
0xcf9 POP
0xcfa PUSH1 0x40
0xcfc MLOAD
0xcfd PUSH32 0xb3927eeb902aeb8cad05167b0e03a7cc876d56b1a6f31003747f8d195dab5e19
0xd1e SWAP1
0xd1f PUSH1 0x0
0xd21 SWAP1
0xd22 LOG1
---
0xcf4: JUMPDEST 
0xcf5: V1120 = MUL 0x2 0x1
0xcf6: V1121 = OR 0x2 S2
0xcf8: S[0x8] = V1121
0xcfa: V1122 = 0x40
0xcfc: V1123 = M[0x40]
0xcfd: V1124 = 0xb3927eeb902aeb8cad05167b0e03a7cc876d56b1a6f31003747f8d195dab5e19
0xd1f: V1125 = 0x0
0xd22: LOG V1123 0x0 0xb3927eeb902aeb8cad05167b0e03a7cc876d56b1a6f31003747f8d195dab5e19
---
Entry stack: [V12, 0x1b1, S12, {0x0, 0x1cd}, 0x1, {0x55d, 0x859, 0x88c}, S8, 0x0, S6, 0x1, 0x2, 0x8, S2, 0x1, 0x2]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x1b1, S12, {0x0, 0x1cd}, 0x1, {0x55d, 0x859, 0x88c}, S8, 0x0, S6, 0x1]

================================

Block 0xd23
[0xd23:0xd26]
---
Predecessors: [0xcd3, 0xcf4, 0xdb7]
Successors: [0xd27]
---
0xd23 JUMPDEST
0xd24 DUP2
0xd25 SWAP3
0xd26 POP
---
0xd23: JUMPDEST 
---
Entry stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859, 0x88c}, S3, 0x0, S1, 0x1]
Stack pops: 3
Stack additions: [S1, S1, S0]
Exit stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859, 0x88c}, S3, S1, S1, 0x1]

================================

Block 0xd27
[0xd27:0xd27]
---
Predecessors: [0xd23]
Successors: [0xd28]
---
0xd27 JUMPDEST
---
0xd27: JUMPDEST 
---
Entry stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859, 0x88c}, S3, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859, 0x88c}, S3, S2, S1, 0x1]

================================

Block 0xd28
[0xd28:0xd2e]
---
Predecessors: [0xd27]
Successors: [0x55d, 0x859, 0x88c]
---
0xd28 JUMPDEST
0xd29 POP
0xd2a POP
0xd2b SWAP2
0xd2c SWAP1
0xd2d POP
0xd2e JUMP
---
0xd28: JUMPDEST 
0xd2e: JUMP {0x55d, 0x859, 0x88c}
---
Entry stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859, 0x88c}, S3, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, S2]

================================

Block 0xd2f
[0xd2f:0xd46]
---
Predecessors: [0x68b, 0x847]
Successors: [0xd47, 0xd48]
---
0xd2f JUMPDEST
0xd30 PUSH1 0x8
0xd32 SLOAD
0xd33 PUSH1 0x0
0xd35 SWAP1
0xd36 DUP2
0xd37 SWAP1
0xd38 PUSH1 0x1
0xd3a SWAP1
0xd3b PUSH1 0xff
0xd3d AND
0xd3e PUSH1 0x2
0xd40 DUP2
0xd41 GT
0xd42 ISZERO
0xd43 PUSH2 0xd48
0xd46 JUMPI
---
0xd2f: JUMPDEST 
0xd30: V1126 = 0x8
0xd32: V1127 = S[0x8]
0xd33: V1128 = 0x0
0xd38: V1129 = 0x1
0xd3b: V1130 = 0xff
0xd3d: V1131 = AND 0xff V1127
0xd3e: V1132 = 0x2
0xd41: V1133 = GT V1131 0x2
0xd42: V1134 = ISZERO V1133
0xd43: V1135 = 0xd48
0xd46: JUMPI 0xd48 V1134
---
Entry stack: [V12, 0x1b1, S4, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x1, V1131]
Exit stack: [V12, 0x1b1, S4, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S0, 0x0, 0x0, 0x1, V1131]

================================

Block 0xd47
[0xd47:0xd47]
---
Predecessors: [0xd2f]
Successors: []
---
0xd47 INVALID
---
0xd47: INVALID 
---
Entry stack: [V12, 0x1b1, S8, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S4, 0x0, 0x0, 0x1, V1131]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S8, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S4, 0x0, 0x0, 0x1, V1131]

================================

Block 0xd48
[0xd48:0xd52]
---
Predecessors: [0xd2f]
Successors: [0xd53, 0xd54]
---
0xd48 JUMPDEST
0xd49 DUP2
0xd4a PUSH1 0x2
0xd4c DUP2
0xd4d GT
0xd4e ISZERO
0xd4f PUSH2 0xd54
0xd52 JUMPI
---
0xd48: JUMPDEST 
0xd4a: V1136 = 0x2
0xd4d: V1137 = GT 0x1 0x2
0xd4e: V1138 = ISZERO 0x0
0xd4f: V1139 = 0xd54
0xd52: JUMPI 0xd54 0x1
---
Entry stack: [V12, 0x1b1, S8, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S4, 0x0, 0x0, 0x1, V1131]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V12, 0x1b1, S8, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S4, 0x0, 0x0, 0x1, V1131, 0x1]

================================

Block 0xd53
[0xd53:0xd53]
---
Predecessors: [0xd48]
Successors: []
---
0xd53 INVALID
---
0xd53: INVALID 
---
Entry stack: [V12, 0x1b1, S9, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S5, 0x0, 0x0, 0x1, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S9, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S5, 0x0, 0x0, 0x1, S1, 0x1]

================================

Block 0xd54
[0xd54:0xd59]
---
Predecessors: [0xd48]
Successors: [0xd5a, 0xd5f]
---
0xd54 JUMPDEST
0xd55 EQ
0xd56 PUSH2 0xd5f
0xd59 JUMPI
---
0xd54: JUMPDEST 
0xd55: V1140 = EQ 0x1 S1
0xd56: V1141 = 0xd5f
0xd59: JUMPI 0xd5f V1140
---
Entry stack: [V12, 0x1b1, S9, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S5, 0x0, 0x0, 0x1, S1, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x1b1, S9, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S5, 0x0, 0x0, 0x1]

================================

Block 0xd5a
[0xd5a:0xd5e]
---
Predecessors: [0xd54]
Successors: []
---
0xd5a PUSH1 0x0
0xd5c PUSH1 0x0
0xd5e REVERT
---
0xd5a: V1142 = 0x0
0xd5c: V1143 = 0x0
0xd5e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S3, 0x0, 0x0, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S3, 0x0, 0x0, 0x1]

================================

Block 0xd5f
[0xd5f:0xd83]
---
Predecessors: [0xd54]
Successors: [0xcd3, 0xd84]
---
0xd5f JUMPDEST
0xd60 PUSH1 0x40
0xd62 MLOAD
0xd63 PUSH1 0x0
0xd65 SWAP1
0xd66 DUP6
0xd67 ISZERO
0xd68 PUSH2 0x8fc
0xd6b MUL
0xd6c SWAP1
0xd6d DUP7
0xd6e SWAP1
0xd6f DUP4
0xd70 DUP2
0xd71 DUP2
0xd72 DUP2
0xd73 DUP6
0xd74 DUP3
0xd75 DUP9
0xd76 CALL
0xd77 SWAP4
0xd78 POP
0xd79 POP
0xd7a POP
0xd7b POP
0xd7c SWAP2
0xd7d POP
0xd7e DUP2
0xd7f ISZERO
0xd80 PUSH2 0xcd3
0xd83 JUMPI
---
0xd5f: JUMPDEST 
0xd60: V1144 = 0x40
0xd62: V1145 = M[0x40]
0xd63: V1146 = 0x0
0xd67: V1147 = ISZERO S3
0xd68: V1148 = 0x8fc
0xd6b: V1149 = MUL 0x8fc V1147
0xd76: V1150 = CALL V1149 0x0 S3 V1145 0x0 V1145 0x0
0xd7f: V1151 = ISZERO V1150
0xd80: V1152 = 0xcd3
0xd83: JUMPI 0xcd3 V1151
---
Entry stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S3, 0x0, 0x0, 0x1]
Stack pops: 4
Stack additions: [S3, S2, V1150, S0]
Exit stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S3, 0x0, V1150, 0x1]

================================

Block 0xd84
[0xd84:0xdb6]
---
Predecessors: [0xd5f]
Successors: [0xdb7]
---
0xd84 PUSH1 0x40
0xd86 DUP1
0xd87 MLOAD
0xd88 DUP6
0xd89 DUP2
0xd8a MSTORE
0xd8b SWAP1
0xd8c MLOAD
0xd8d PUSH32 0xe2a0d56d128408deff6c63b30ce69c78024280bc67a251ee2bb096dc08ff1c1e
0xdae SWAP2
0xdaf DUP2
0xdb0 SWAP1
0xdb1 SUB
0xdb2 PUSH1 0x20
0xdb4 ADD
0xdb5 SWAP1
0xdb6 LOG1
---
0xd84: V1153 = 0x40
0xd87: V1154 = M[0x40]
0xd8a: M[V1154] = S3
0xd8c: V1155 = M[0x40]
0xd8d: V1156 = 0xe2a0d56d128408deff6c63b30ce69c78024280bc67a251ee2bb096dc08ff1c1e
0xdb1: V1157 = SUB V1154 V1155
0xdb2: V1158 = 0x20
0xdb4: V1159 = ADD 0x20 V1157
0xdb6: LOG V1155 V1159 0xe2a0d56d128408deff6c63b30ce69c78024280bc67a251ee2bb096dc08ff1c1e
---
Entry stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S3, 0x0, V1150, 0x1]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S3, 0x0, V1150, 0x1]

================================

Block 0xdb7
[0xdb7:0xdc8]
---
Predecessors: [0xd84]
Successors: [0xd23, 0xdc9]
---
0xdb7 JUMPDEST
0xdb8 PUSH1 0x1
0xdba PUSH1 0xa0
0xdbc PUSH1 0x2
0xdbe EXP
0xdbf SUB
0xdc0 ADDRESS
0xdc1 AND
0xdc2 BALANCE
0xdc3 ISZERO
0xdc4 ISZERO
0xdc5 PUSH2 0xd23
0xdc8 JUMPI
---
0xdb7: JUMPDEST 
0xdb8: V1160 = 0x1
0xdba: V1161 = 0xa0
0xdbc: V1162 = 0x2
0xdbe: V1163 = EXP 0x2 0xa0
0xdbf: V1164 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdc0: V1165 = ADDRESS
0xdc1: V1166 = AND V1165 0xffffffffffffffffffffffffffffffffffffffff
0xdc2: V1167 = BALANCE V1166
0xdc3: V1168 = ISZERO V1167
0xdc4: V1169 = ISZERO V1168
0xdc5: V1170 = 0xd23
0xdc8: JUMPI 0xd23 V1169
---
Entry stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S3, 0x0, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S3, 0x0, S1, 0x1]

================================

Block 0xdc9
[0xdc9:0xddb]
---
Predecessors: [0xdb7]
Successors: [0xcf4]
---
0xdc9 PUSH1 0x8
0xdcb DUP1
0xdcc SLOAD
0xdcd PUSH1 0x2
0xdcf SWAP2
0xdd0 SWAP1
0xdd1 PUSH1 0xff
0xdd3 NOT
0xdd4 AND
0xdd5 PUSH1 0x1
0xdd7 DUP4
0xdd8 PUSH2 0xcf4
0xddb JUMP
---
0xdc9: V1171 = 0x8
0xdcc: V1172 = S[0x8]
0xdcd: V1173 = 0x2
0xdd1: V1174 = 0xff
0xdd3: V1175 = NOT 0xff
0xdd4: V1176 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1172
0xdd5: V1177 = 0x1
0xdd8: V1178 = 0xcf4
0xddb: JUMP 0xcf4
---
Entry stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S3, 0x0, S1, 0x1]
Stack pops: 0
Stack additions: [0x2, 0x8, V1176, 0x1, 0x2]
Exit stack: [V12, 0x1b1, S7, {0x0, 0x1cd}, 0x1, {0x55d, 0x859}, S3, 0x0, S1, 0x1, 0x2, 0x8, V1176, 0x1, 0x2]

================================

Block 0xddc
[0xddc:0xe0a]
---
Predecessors: []
Successors: [0xe0b]
---
0xddc JUMPDEST
0xddd MUL
0xdde OR
0xddf SWAP1
0xde0 SSTORE
0xde1 POP
0xde2 PUSH1 0x40
0xde4 MLOAD
0xde5 PUSH32 0xb3927eeb902aeb8cad05167b0e03a7cc876d56b1a6f31003747f8d195dab5e19
0xe06 SWAP1
0xe07 PUSH1 0x0
0xe09 SWAP1
0xe0a LOG1
---
0xddc: JUMPDEST 
0xddd: V1179 = MUL S0 S1
0xdde: V1180 = OR V1179 S2
0xde0: S[S3] = V1180
0xde2: V1181 = 0x40
0xde4: V1182 = M[0x40]
0xde5: V1183 = 0xb3927eeb902aeb8cad05167b0e03a7cc876d56b1a6f31003747f8d195dab5e19
0xe07: V1184 = 0x0
0xe0a: LOG V1182 0x0 0xb3927eeb902aeb8cad05167b0e03a7cc876d56b1a6f31003747f8d195dab5e19
---
Entry stack: []
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0xe0b
[0xe0b:0xe0e]
---
Predecessors: [0xddc]
Successors: [0xe0f]
---
0xe0b JUMPDEST
0xe0c DUP2
0xe0d SWAP3
0xe0e POP
---
0xe0b: JUMPDEST 
---
Entry stack: []
Stack pops: 3
Stack additions: [S1, S1, S0]
Exit stack: [S1, S1, S0]

================================

Block 0xe0f
[0xe0f:0xe0f]
---
Predecessors: [0xe0b]
Successors: [0xe10]
---
0xe0f JUMPDEST
---
0xe0f: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0xe10
[0xe10:0xe16]
---
Predecessors: [0xe0f]
Successors: []
Has unresolved jump.
---
0xe10 JUMPDEST
0xe11 POP
0xe12 POP
0xe13 SWAP2
0xe14 SWAP1
0xe15 POP
0xe16 JUMP
---
0xe10: JUMPDEST 
0xe16: JUMP S4
---
Entry stack: [S2, S1, S0]
Stack pops: 5
Stack additions: [S2]
Exit stack: [S2]

================================

Block 0xe17
[0xe17:0xe47]
---
Predecessors: [0x8b1, 0xb63]
Successors: [0xe48, 0xe58]
---
0xe17 JUMPDEST
0xe18 DUP3
0xe19 DUP1
0xe1a SLOAD
0xe1b PUSH1 0x1
0xe1d DUP2
0xe1e PUSH1 0x1
0xe20 AND
0xe21 ISZERO
0xe22 PUSH2 0x100
0xe25 MUL
0xe26 SUB
0xe27 AND
0xe28 PUSH1 0x2
0xe2a SWAP1
0xe2b DIV
0xe2c SWAP1
0xe2d PUSH1 0x0
0xe2f MSTORE
0xe30 PUSH1 0x20
0xe32 PUSH1 0x0
0xe34 SHA3
0xe35 SWAP1
0xe36 PUSH1 0x1f
0xe38 ADD
0xe39 PUSH1 0x20
0xe3b SWAP1
0xe3c DIV
0xe3d DUP2
0xe3e ADD
0xe3f SWAP3
0xe40 DUP3
0xe41 PUSH1 0x1f
0xe43 LT
0xe44 PUSH2 0xe58
0xe47 JUMPI
---
0xe17: JUMPDEST 
0xe1a: V1185 = S[{0x2, 0x3}]
0xe1b: V1186 = 0x1
0xe1e: V1187 = 0x1
0xe20: V1188 = AND 0x1 V1185
0xe21: V1189 = ISZERO V1188
0xe22: V1190 = 0x100
0xe25: V1191 = MUL 0x100 V1189
0xe26: V1192 = SUB V1191 0x1
0xe27: V1193 = AND V1192 V1185
0xe28: V1194 = 0x2
0xe2b: V1195 = DIV V1193 0x2
0xe2d: V1196 = 0x0
0xe2f: M[0x0] = {0x2, 0x3}
0xe30: V1197 = 0x20
0xe32: V1198 = 0x0
0xe34: V1199 = SHA3 0x0 0x20
0xe36: V1200 = 0x1f
0xe38: V1201 = ADD 0x1f V1195
0xe39: V1202 = 0x20
0xe3c: V1203 = DIV V1201 0x20
0xe3e: V1204 = ADD V1199 V1203
0xe41: V1205 = 0x1f
0xe43: V1206 = LT 0x1f S0
0xe44: V1207 = 0xe58
0xe47: JUMPI 0xe58 V1206
---
Entry stack: [V12, 0x1cd, S4, {0x8c4, 0xb76}, {0x2, 0x3}, S1, S0]
Stack pops: 3
Stack additions: [S2, V1204, S0, V1199, S1]
Exit stack: [V12, 0x1cd, S4, {0x8c4, 0xb76}, {0x2, 0x3}, V1204, S0, V1199, S1]

================================

Block 0xe48
[0xe48:0xe57]
---
Predecessors: [0xe17]
Successors: [0xe85]
---
0xe48 DUP1
0xe49 MLOAD
0xe4a PUSH1 0xff
0xe4c NOT
0xe4d AND
0xe4e DUP4
0xe4f DUP1
0xe50 ADD
0xe51 OR
0xe52 DUP6
0xe53 SSTORE
0xe54 PUSH2 0xe85
0xe57 JUMP
---
0xe49: V1208 = M[S0]
0xe4a: V1209 = 0xff
0xe4c: V1210 = NOT 0xff
0xe4d: V1211 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1208
0xe50: V1212 = ADD S2 S2
0xe51: V1213 = OR V1212 V1211
0xe53: S[{0x2, 0x3}] = V1213
0xe54: V1214 = 0xe85
0xe57: JUMP 0xe85
---
Entry stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, V1204, S2, V1199, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, V1204, S2, V1199, S0]

================================

Block 0xe58
[0xe58:0xe66]
---
Predecessors: [0xe17]
Successors: [0xe67, 0xe85]
---
0xe58 JUMPDEST
0xe59 DUP3
0xe5a DUP1
0xe5b ADD
0xe5c PUSH1 0x1
0xe5e ADD
0xe5f DUP6
0xe60 SSTORE
0xe61 DUP3
0xe62 ISZERO
0xe63 PUSH2 0xe85
0xe66 JUMPI
---
0xe58: JUMPDEST 
0xe5b: V1215 = ADD S2 S2
0xe5c: V1216 = 0x1
0xe5e: V1217 = ADD 0x1 V1215
0xe60: S[{0x2, 0x3}] = V1217
0xe62: V1218 = ISZERO S2
0xe63: V1219 = 0xe85
0xe66: JUMPI 0xe85 V1218
---
Entry stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, V1204, S2, V1199, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, V1204, S2, V1199, S0]

================================

Block 0xe67
[0xe67:0xe69]
---
Predecessors: [0xe58]
Successors: [0xe6a]
---
0xe67 SWAP2
0xe68 DUP3
0xe69 ADD
---
0xe69: V1220 = ADD S0 S2
---
Entry stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, V1204, S2, V1199, S0]
Stack pops: 3
Stack additions: [S0, S1, V1220]
Exit stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, V1204, S0, V1199, V1220]

================================

Block 0xe6a
[0xe6a:0xe72]
---
Predecessors: [0xe67, 0xe73]
Successors: [0xe73, 0xe85]
---
0xe6a JUMPDEST
0xe6b DUP3
0xe6c DUP2
0xe6d GT
0xe6e ISZERO
0xe6f PUSH2 0xe85
0xe72 JUMPI
---
0xe6a: JUMPDEST 
0xe6d: V1221 = GT V1220 S2
0xe6e: V1222 = ISZERO V1221
0xe6f: V1223 = 0xe85
0xe72: JUMPI 0xe85 V1222
---
Entry stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, V1204, S2, S1, V1220]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, V1204, S2, S1, V1220]

================================

Block 0xe73
[0xe73:0xe84]
---
Predecessors: [0xe6a]
Successors: [0xe6a]
---
0xe73 DUP3
0xe74 MLOAD
0xe75 DUP3
0xe76 SSTORE
0xe77 SWAP2
0xe78 PUSH1 0x20
0xe7a ADD
0xe7b SWAP2
0xe7c SWAP1
0xe7d PUSH1 0x1
0xe7f ADD
0xe80 SWAP1
0xe81 PUSH2 0xe6a
0xe84 JUMP
---
0xe74: V1224 = M[S2]
0xe76: S[S1] = V1224
0xe78: V1225 = 0x20
0xe7a: V1226 = ADD 0x20 S2
0xe7d: V1227 = 0x1
0xe7f: V1228 = ADD 0x1 S1
0xe81: V1229 = 0xe6a
0xe84: JUMP 0xe6a
---
Entry stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, V1204, S2, S1, V1220]
Stack pops: 3
Stack additions: [V1226, V1228, S0]
Exit stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, V1204, V1226, V1228, V1220]

================================

Block 0xe85
[0xe85:0xe85]
---
Predecessors: [0xe48, 0xe58, 0xe6a]
Successors: [0xe86]
---
0xe85 JUMPDEST
---
0xe85: JUMPDEST 
---
Entry stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, V1204, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, V1204, S2, S1, S0]

================================

Block 0xe86
[0xe86:0xe91]
---
Predecessors: [0xe85]
Successors: [0xe96]
---
0xe86 JUMPDEST
0xe87 POP
0xe88 PUSH2 0xe92
0xe8b SWAP3
0xe8c SWAP2
0xe8d POP
0xe8e PUSH2 0xe96
0xe91 JUMP
---
0xe86: JUMPDEST 
0xe88: V1230 = 0xe92
0xe8e: V1231 = 0xe96
0xe91: JUMP 0xe96
---
Entry stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, V1204, S2, S1, S0]
Stack pops: 4
Stack additions: [0xe92, S3, S1]
Exit stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, 0xe92, V1204, S1]

================================

Block 0xe92
[0xe92:0xe95]
---
Predecessors: [0xe9c, 0xeb4]
Successors: [0x8c4, 0xb76, 0xeb4]
---
0xe92 JUMPDEST
0xe93 POP
0xe94 SWAP1
0xe95 JUMP
---
0xe92: JUMPDEST 
0xe95: JUMP S2
---
Entry stack: [V12, 0x1cd, S6, S5, {0x2, 0x3, 0x1cd}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, 0x1cd, S6, S5, {0x2, 0x3, 0x1cd}, S3, S1]

================================

Block 0xe96
[0xe96:0xe9b]
---
Predecessors: [0xe86]
Successors: [0xe9c]
---
0xe96 JUMPDEST
0xe97 PUSH2 0xeb4
0xe9a SWAP2
0xe9b SWAP1
---
0xe96: JUMPDEST 
0xe97: V1232 = 0xeb4
---
Entry stack: [V12, 0x1cd, S5, {0x8c4, 0xb76}, {0x2, 0x3}, 0xe92, V1204, S0]
Stack pops: 2
Stack additions: [0xeb4, S1, S0]
Exit stack: [V12, 0x1cd, S5, {0x8c4, 0xb76}, {0x2, 0x3}, 0xe92, 0xeb4, V1204, S0]

================================

Block 0xe9c
[0xe9c:0xea4]
---
Predecessors: [0xe96, 0xea5]
Successors: [0xe92, 0xea5]
---
0xe9c JUMPDEST
0xe9d DUP1
0xe9e DUP3
0xe9f GT
0xea0 ISZERO
0xea1 PUSH2 0xe92
0xea4 JUMPI
---
0xe9c: JUMPDEST 
0xe9f: V1233 = GT V1204 S0
0xea0: V1234 = ISZERO V1233
0xea1: V1235 = 0xe92
0xea4: JUMPI 0xe92 V1234
---
Entry stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, 0xe92, 0xeb4, V1204, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, 0xe92, 0xeb4, V1204, S0]

================================

Block 0xea5
[0xea5:0xeaf]
---
Predecessors: [0xe9c]
Successors: [0xe9c]
---
0xea5 PUSH1 0x0
0xea7 DUP2
0xea8 SSTORE
0xea9 PUSH1 0x1
0xeab ADD
0xeac PUSH2 0xe9c
0xeaf JUMP
---
0xea5: V1236 = 0x0
0xea8: S[S0] = 0x0
0xea9: V1237 = 0x1
0xeab: V1238 = ADD 0x1 S0
0xeac: V1239 = 0xe9c
0xeaf: JUMP 0xe9c
---
Entry stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, 0xe92, 0xeb4, V1204, S0]
Stack pops: 1
Stack additions: [V1238]
Exit stack: [V12, 0x1cd, S6, {0x8c4, 0xb76}, {0x2, 0x3}, 0xe92, 0xeb4, V1204, V1238]

================================

Block 0xeb0
[0xeb0:0xeb3]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0xeb0 JUMPDEST
0xeb1 POP
0xeb2 SWAP1
0xeb3 JUMP
---
0xeb0: JUMPDEST 
0xeb3: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xeb4
[0xeb4:0xeb6]
---
Predecessors: [0xe92]
Successors: [0xe92]
---
0xeb4 JUMPDEST
0xeb5 SWAP1
0xeb6 JUMP
---
0xeb4: JUMPDEST 
0xeb6: JUMP S1
---
Entry stack: [V12, 0x1cd, S4, S3, {0x2, 0x3, 0x1cd}, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x1cd, S4, S3, {0x2, 0x3, 0x1cd}, S0]

================================

Block 0xeb7
[0xeb7:0xee3]
---
Predecessors: []
Successors: []
---
0xeb7 STOP
0xeb8 LOG1
0xeb9 PUSH6 0x627a7a723058
0xec0 SHA3
0xec1 BALANCE
0xec2 SLOAD
0xec3 PUSH32 0x42da1fadbe7a4da346cfcc04e2b454d8d20af1c434a437812b4e655c2b0029
---
0xeb7: STOP 
0xeb8: LOG S0 S1 S2
0xeb9: V1240 = 0x627a7a723058
0xec0: V1241 = SHA3 0x627a7a723058 S3
0xec1: V1242 = BALANCE V1241
0xec2: V1243 = S[V1242]
0xec3: V1244 = 0x42da1fadbe7a4da346cfcc04e2b454d8d20af1c434a437812b4e655c2b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x42da1fadbe7a4da346cfcc04e2b454d8d20af1c434a437812b4e655c2b0029, V1243]
Exit stack: []

================================

Function 0:
Public function signature: 0x1194ed46
Entry block: 0xe2
Exit block: 0x164
Body: 0xe2, 0xe9, 0xea, 0xf2, 0x118, 0x126, 0x138, 0x14b, 0x164, 0x470, 0x4ad, 0x4b5, 0x4c8, 0x4d6, 0x4ea, 0x4f3

Function 1:
Public function signature: 0x123119cd
Entry block: 0x172
Exit block: 0x182
Body: 0x172, 0x179, 0x17a, 0x182, 0x4fb

Function 2:
Public function signature: 0x37bdc99b
Entry block: 0x19e
Exit block: 0x1b1
Body: 0x19e, 0x1a5, 0x1a6, 0x1b1, 0x50a, 0x520, 0x521, 0x52c, 0x52d, 0x533, 0x538, 0x54f, 0x554, 0x55d, 0x560, 0x561, 0x562

Function 3:
Public function signature: 0x3c7a3aff
Entry block: 0x1c5
Exit block: 0x1cd
Body: 0x1c5, 0x1cd, 0x568, 0x57b, 0x57c, 0x587, 0x588, 0x58e, 0x593, 0x59e, 0x5a3, 0x5d6, 0x61d, 0x62d, 0x62e, 0x634, 0x63c, 0x63d, 0x63e

Function 4:
Public function signature: 0x42966c68
Entry block: 0x1cf
Exit block: 0x1b1
Body: 0x1b1, 0x1cf, 0x1d6, 0x1d7, 0x55d, 0x560, 0x561, 0x562, 0x641, 0x657, 0x658, 0x663, 0x664, 0x66a, 0x66f, 0x686, 0x68b

Function 5:
Public function signature: 0x4585ad02
Entry block: 0x1f6
Exit block: 0x1cd
Body: 0x1cd, 0x1f6, 0x1fd, 0x1fe, 0x69f, 0x6b9, 0x6cd, 0x6d3, 0x6d8, 0x6eb, 0x6ec, 0x6f7, 0x6f8, 0x6fe, 0x703, 0x706, 0x716, 0x717, 0x71e, 0x723, 0x755, 0x756, 0x758

Function 6:
Public function signature: 0x66d003ac
Entry block: 0x208
Exit block: 0x182
Body: 0x182, 0x208, 0x20f, 0x210, 0x75a

Function 7:
Public function signature: 0x68163034
Entry block: 0x234
Exit block: 0x244
Body: 0x234, 0x23b, 0x23c, 0x244, 0x769

Function 8:
Public function signature: 0x6d295e24
Entry block: 0x256
Exit block: 0x1cd
Body: 0x1cd, 0x256, 0x25d, 0x25e, 0x63c, 0x63d, 0x63e, 0x76f, 0x789, 0x79d, 0x7a3, 0x7a8, 0x7bb, 0x7bc, 0x7c7, 0x7c8, 0x7ce, 0x7d3, 0x7d6, 0x7e6, 0x7e7, 0x7ee, 0x7f3, 0x7fe, 0x803, 0x82f, 0x83f, 0x840, 0x847, 0x859, 0x85f, 0x862, 0x872, 0x873, 0x87a, 0x88c, 0x88e, 0x88f, 0x890, 0x891, 0x893

Function 9:
Public function signature: 0x9472eb76
Entry block: 0x268
Exit block: 0x1cd
Body: 0x1cd, 0x268, 0x26f, 0x270, 0x895, 0x8ac, 0x8b1, 0x8c4, 0x91c, 0x924, 0x937, 0x945, 0x959, 0x962, 0x971, 0x972

Function 10:
Public function signature: 0xa26759cb
Entry block: 0x2c0
Exit block: 0x1cd
Body: 0x1cd, 0x2c0, 0x758, 0x975, 0x98c, 0x991, 0x999, 0x99e, 0x9d4, 0x9e4, 0x9e5, 0x9ec, 0x9fa, 0xa29, 0xa2a, 0xa2b

Function 11:
Public function signature: 0xb2e7c288
Entry block: 0x2ca
Exit block: 0x164
Body: 0xf2, 0x118, 0x126, 0x138, 0x14b, 0x164, 0x2ca, 0x2d1, 0x2d2, 0x4c8, 0x4d6, 0x4ea, 0x4f3, 0xa2d, 0xa6d, 0xa75

Function 12:
Public function signature: 0xb79550be
Entry block: 0x35a
Exit block: 0xb02
Body: 0x35a, 0x361, 0x362, 0xabb, 0xad2, 0xad7, 0xaea, 0xaeb, 0xaf6, 0xaf7, 0xafd, 0xb02

Function 13:
Public function signature: 0xc19d93fb
Entry block: 0x36c
Exit block: 0x38b
Body: 0x36c, 0x373, 0x374, 0x37c, 0x38b, 0x38c, 0xb3e

Function 14:
Public function signature: 0xc75e8d55
Entry block: 0x3a0
Exit block: 0x1cd
Body: 0x1cd, 0x3a0, 0x3a7, 0x3a8, 0x937, 0x945, 0x959, 0x962, 0x971, 0x972, 0xb47, 0xb5e, 0xb63, 0xb76, 0xbd0, 0xbd8

Function 15:
Public function signature: 0xcf19461f
Entry block: 0x3f8
Exit block: 0x38b
Body: 0x37c, 0x38b, 0x38c, 0x3f8, 0x3ff, 0x400, 0xc29

Function 16:
Public function signature: 0xe3d0252b
Entry block: 0x42c
Exit block: 0x244
Body: 0x244, 0x42c, 0x433, 0x434, 0xc32

Function 17:
Public function signature: 0xec1e74a7
Entry block: 0x44e
Exit block: 0x244
Body: 0x244, 0x44e, 0x455, 0x456, 0xc38

Function 18:
Public fallback function
Entry block: 0xe0
Exit block: 0xe0
Body: 0xe0

Function 19:
Private function
Entry block: 0xd2f
Exit block: 0xd28
Body: 0xcd3, 0xce5, 0xcf4, 0xd23, 0xd27, 0xd28, 0xd2f, 0xd48, 0xd54, 0xd5f, 0xd84, 0xdb7, 0xdc9

Function 20:
Private function
Entry block: 0xe17
Exit block: 0xe92
Body: 0xe17, 0xe48, 0xe58, 0xe67, 0xe6a, 0xe73, 0xe85, 0xe86, 0xe92, 0xe96, 0xe9c, 0xea5, 0xeb4

Function 21:
Private function
Entry block: 0xc3e
Exit block: 0xd28
Body: 0xc3e, 0xc57, 0xc63, 0xc6e, 0xca0, 0xcd3, 0xce5, 0xcf4, 0xd23, 0xd27, 0xd28

