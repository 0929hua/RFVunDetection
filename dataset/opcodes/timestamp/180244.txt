Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x2aa]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xc1f679f
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x2aa
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xc1f679f
0x20: V14 = EQ V12 0xc1f679f
0x21: V15 = 0x2aa
0x24: JUMPI 0x2aa V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x2bf]
---
0x25 DUP1
0x26 PUSH4 0x29dcb0cf
0x2b EQ
0x2c PUSH2 0x2bf
0x2f JUMPI
---
0x26: V16 = 0x29dcb0cf
0x2b: V17 = EQ 0x29dcb0cf V12
0x2c: V18 = 0x2bf
0x2f: JUMPI 0x2bf V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x2e4]
---
0x30 DUP1
0x31 PUSH4 0x4260c779
0x36 EQ
0x37 PUSH2 0x2e4
0x3a JUMPI
---
0x31: V19 = 0x4260c779
0x36: V20 = EQ 0x4260c779 V12
0x37: V21 = 0x2e4
0x3a: JUMPI 0x2e4 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x309]
---
0x3b DUP1
0x3c PUSH4 0x6e66f6e9
0x41 EQ
0x42 PUSH2 0x309
0x45 JUMPI
---
0x3c: V22 = 0x6e66f6e9
0x41: V23 = EQ 0x6e66f6e9 V12
0x42: V24 = 0x309
0x45: JUMPI 0x309 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x338]
---
0x46 DUP1
0x47 PUSH4 0x801db9cc
0x4c EQ
0x4d PUSH2 0x338
0x50 JUMPI
---
0x47: V25 = 0x801db9cc
0x4c: V26 = EQ 0x801db9cc V12
0x4d: V27 = 0x338
0x50: JUMPI 0x338 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x35d]
---
0x51 DUP1
0x52 PUSH4 0x836e8180
0x57 EQ
0x58 PUSH2 0x35d
0x5b JUMPI
---
0x52: V28 = 0x836e8180
0x57: V29 = EQ 0x836e8180 V12
0x58: V30 = 0x35d
0x5b: JUMPI 0x35d V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x382]
---
0x5c DUP1
0x5d PUSH4 0x98d5fdca
0x62 EQ
0x63 PUSH2 0x382
0x66 JUMPI
---
0x5d: V31 = 0x98d5fdca
0x62: V32 = EQ 0x98d5fdca V12
0x63: V33 = 0x382
0x66: JUMPI 0x382 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x3a7]
---
0x67 DUP1
0x68 PUSH4 0xd424f628
0x6d EQ
0x6e PUSH2 0x3a7
0x71 JUMPI
---
0x68: V34 = 0xd424f628
0x6d: V35 = EQ 0xd424f628 V12
0x6e: V36 = 0x3a7
0x71: JUMPI 0x3a7 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x3ce]
---
0x72 DUP1
0x73 PUSH4 0xeeb92294
0x78 EQ
0x79 PUSH2 0x3ce
0x7c JUMPI
---
0x73: V37 = 0xeeb92294
0x78: V38 = EQ 0xeeb92294 V12
0x79: V39 = 0x3ce
0x7c: JUMPI 0x3ce V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x3e3]
---
0x7d DUP1
0x7e PUSH4 0xfd6b7ef8
0x83 EQ
0x84 PUSH2 0x3e3
0x87 JUMPI
---
0x7e: V40 = 0xfd6b7ef8
0x83: V41 = EQ 0xfd6b7ef8 V12
0x84: V42 = 0x3e3
0x87: JUMPI 0x3e3 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x0, 0x7d]
Successors: [0x8c]
---
0x88 JUMPDEST
0x89 PUSH2 0x2a8
---
0x88: JUMPDEST 
0x89: V43 = 0x2a8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a8]
Exit stack: [V12, 0x2a8]

================================

Block 0x8c
[0x8c:0x99]
---
Predecessors: [0x88]
Successors: [0x9a, 0x9b]
---
0x8c JUMPDEST
0x8d PUSH1 0x2
0x8f SLOAD
0x90 PUSH1 0x0
0x92 SWAP1
0x93 TIMESTAMP
0x94 GT
0x95 ISZERO
0x96 PUSH2 0x9b
0x99 JUMPI
---
0x8c: JUMPDEST 
0x8d: V44 = 0x2
0x8f: V45 = S[0x2]
0x90: V46 = 0x0
0x93: V47 = TIMESTAMP
0x94: V48 = GT V47 V45
0x95: V49 = ISZERO V48
0x96: V50 = 0x9b
0x99: JUMPI 0x9b V49
---
Entry stack: [V12, 0x2a8]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x2a8, 0x0]

================================

Block 0x9a
[0x9a:0x9a]
---
Predecessors: [0x8c]
Successors: []
---
0x9a INVALID
---
0x9a: INVALID 
---
Entry stack: [V12, 0x2a8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, 0x0]

================================

Block 0x9b
[0x9b:0xae]
---
Predecessors: [0x8c]
Successors: [0x3f8]
---
0x9b JUMPDEST
0x9c PUSH8 0xde0b6b3a7640000
0xa5 PUSH1 0x9
0xa7 SLOAD
0xa8 PUSH2 0xaf
0xab PUSH2 0x3f8
0xae JUMP
---
0x9b: JUMPDEST 
0x9c: V51 = 0xde0b6b3a7640000
0xa5: V52 = 0x9
0xa7: V53 = S[0x9]
0xa8: V54 = 0xaf
0xab: V55 = 0x3f8
0xae: JUMP 0x3f8
---
Entry stack: [V12, 0x2a8, 0x0]
Stack pops: 0
Stack additions: [0xde0b6b3a7640000, V53, 0xaf]
Exit stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, V53, 0xaf]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0x424]
Successors: [0xba, 0xbb]
---
0xaf JUMPDEST
0xb0 CALLVALUE
0xb1 MUL
0xb2 MUL
0xb3 DUP2
0xb4 ISZERO
0xb5 ISZERO
0xb6 PUSH2 0xbb
0xb9 JUMPI
---
0xaf: JUMPDEST 
0xb0: V56 = CALLVALUE
0xb1: V57 = MUL V56 S0
0xb2: V58 = MUL V57 S1
0xb4: V59 = ISZERO 0xde0b6b3a7640000
0xb5: V60 = ISZERO 0x0
0xb6: V61 = 0xbb
0xb9: JUMPI 0xbb 0x1
---
Entry stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S1, S0]
Stack pops: 3
Stack additions: [S2, V58]
Exit stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, V58]

================================

Block 0xba
[0xba:0xba]
---
Predecessors: [0xaf]
Successors: []
---
0xba INVALID
---
0xba: INVALID 
---
Entry stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, V58]

================================

Block 0xbb
[0xbb:0x116]
---
Predecessors: [0xaf]
Successors: [0x117, 0x11b]
---
0xbb JUMPDEST
0xbc PUSH1 0x4
0xbe SLOAD
0xbf SWAP2
0xc0 SWAP1
0xc1 DIV
0xc2 SWAP2
0xc3 POP
0xc4 DUP2
0xc5 SWAP1
0xc6 PUSH1 0x1
0xc8 PUSH1 0xa0
0xca PUSH1 0x2
0xcc EXP
0xcd SUB
0xce AND
0xcf PUSH4 0x70a08231
0xd4 ADDRESS
0xd5 PUSH1 0x0
0xd7 PUSH1 0x40
0xd9 MLOAD
0xda PUSH1 0x20
0xdc ADD
0xdd MSTORE
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 PUSH1 0xe0
0xe3 PUSH1 0x2
0xe5 EXP
0xe6 PUSH4 0xffffffff
0xeb DUP5
0xec AND
0xed MUL
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x1
0xf2 PUSH1 0xa0
0xf4 PUSH1 0x2
0xf6 EXP
0xf7 SUB
0xf8 SWAP1
0xf9 SWAP2
0xfa AND
0xfb PUSH1 0x4
0xfd DUP3
0xfe ADD
0xff MSTORE
0x100 PUSH1 0x24
0x102 ADD
0x103 PUSH1 0x20
0x105 PUSH1 0x40
0x107 MLOAD
0x108 DUP1
0x109 DUP4
0x10a SUB
0x10b DUP2
0x10c PUSH1 0x0
0x10e DUP8
0x10f DUP1
0x110 EXTCODESIZE
0x111 ISZERO
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0xbb: JUMPDEST 
0xbc: V62 = 0x4
0xbe: V63 = S[0x4]
0xc1: V64 = DIV V58 0xde0b6b3a7640000
0xc6: V65 = 0x1
0xc8: V66 = 0xa0
0xca: V67 = 0x2
0xcc: V68 = EXP 0x2 0xa0
0xcd: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xcf: V71 = 0x70a08231
0xd4: V72 = ADDRESS
0xd5: V73 = 0x0
0xd7: V74 = 0x40
0xd9: V75 = M[0x40]
0xda: V76 = 0x20
0xdc: V77 = ADD 0x20 V75
0xdd: M[V77] = 0x0
0xde: V78 = 0x40
0xe0: V79 = M[0x40]
0xe1: V80 = 0xe0
0xe3: V81 = 0x2
0xe5: V82 = EXP 0x2 0xe0
0xe6: V83 = 0xffffffff
0xec: V84 = AND 0x70a08231 0xffffffff
0xed: V85 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xef: M[V79] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xf0: V86 = 0x1
0xf2: V87 = 0xa0
0xf4: V88 = 0x2
0xf6: V89 = EXP 0x2 0xa0
0xf7: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfa: V91 = AND V72 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V92 = 0x4
0xfe: V93 = ADD V79 0x4
0xff: M[V93] = V91
0x100: V94 = 0x24
0x102: V95 = ADD 0x24 V79
0x103: V96 = 0x20
0x105: V97 = 0x40
0x107: V98 = M[0x40]
0x10a: V99 = SUB V95 V98
0x10c: V100 = 0x0
0x110: V101 = EXTCODESIZE V70
0x111: V102 = ISZERO V101
0x112: V103 = ISZERO V102
0x113: V104 = 0x11b
0x116: JUMPI 0x11b V103
---
Entry stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, V58]
Stack pops: 3
Stack additions: [V64, V64, V70, 0x70a08231, V95, 0x20, V98, V99, V98, 0x0, V70]
Exit stack: [V12, 0x2a8, V64, V64, V70, 0x70a08231, V95, 0x20, V98, V99, V98, 0x0, V70]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0xbb]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V105 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a8, V64, V64, V70, 0x70a08231, V95, 0x20, V98, V99, V98, 0x0, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V64, V64, V70, 0x70a08231, V95, 0x20, V98, V99, V98, 0x0, V70]

================================

Block 0x11b
[0x11b:0x127]
---
Predecessors: [0xbb]
Successors: [0x128, 0x12c]
---
0x11b JUMPDEST
0x11c PUSH2 0x2c6
0x11f GAS
0x120 SUB
0x121 CALL
0x122 ISZERO
0x123 ISZERO
0x124 PUSH2 0x12c
0x127 JUMPI
---
0x11b: JUMPDEST 
0x11c: V106 = 0x2c6
0x11f: V107 = GAS
0x120: V108 = SUB V107 0x2c6
0x121: V109 = CALL V108 V70 0x0 V98 V99 V98 0x20
0x122: V110 = ISZERO V109
0x123: V111 = ISZERO V110
0x124: V112 = 0x12c
0x127: JUMPI 0x12c V111
---
Entry stack: [V12, 0x2a8, V64, V64, V70, 0x70a08231, V95, 0x20, V98, V99, V98, 0x0, V70]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x2a8, V64, V64, V70, 0x70a08231, V95]

================================

Block 0x128
[0x128:0x12b]
---
Predecessors: [0x11b]
Successors: []
---
0x128 PUSH1 0x0
0x12a DUP1
0x12b REVERT
---
0x128: V113 = 0x0
0x12b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a8, V64, V64, V70, 0x70a08231, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V64, V64, V70, 0x70a08231, V95]

================================

Block 0x12c
[0x12c:0x13e]
---
Predecessors: [0x11b]
Successors: [0x13f, 0x140]
---
0x12c JUMPDEST
0x12d POP
0x12e POP
0x12f POP
0x130 PUSH1 0x40
0x132 MLOAD
0x133 DUP1
0x134 MLOAD
0x135 SWAP1
0x136 POP
0x137 LT
0x138 ISZERO
0x139 ISZERO
0x13a ISZERO
0x13b PUSH2 0x140
0x13e JUMPI
---
0x12c: JUMPDEST 
0x130: V114 = 0x40
0x132: V115 = M[0x40]
0x134: V116 = M[V115]
0x137: V117 = LT V116 V64
0x138: V118 = ISZERO V117
0x139: V119 = ISZERO V118
0x13a: V120 = ISZERO V119
0x13b: V121 = 0x140
0x13e: JUMPI 0x140 V120
---
Entry stack: [V12, 0x2a8, V64, V64, V70, 0x70a08231, V95]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x2a8, V64]

================================

Block 0x13f
[0x13f:0x13f]
---
Predecessors: [0x12c]
Successors: []
---
0x13f INVALID
---
0x13f: INVALID 
---
Entry stack: [V12, 0x2a8, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V64]

================================

Block 0x140
[0x140:0x1c0]
---
Predecessors: [0x12c]
Successors: [0x1c1, 0x1c5]
---
0x140 JUMPDEST
0x141 PUSH1 0x3
0x143 DUP1
0x144 SLOAD
0x145 CALLVALUE
0x146 SWAP1
0x147 DUP2
0x148 ADD
0x149 SWAP1
0x14a SWAP2
0x14b SSTORE
0x14c PUSH1 0x1
0x14e PUSH1 0xa0
0x150 PUSH1 0x2
0x152 EXP
0x153 SUB
0x154 CALLER
0x155 DUP2
0x156 DUP2
0x157 AND
0x158 PUSH1 0x0
0x15a SWAP1
0x15b DUP2
0x15c MSTORE
0x15d PUSH1 0xa
0x15f PUSH1 0x20
0x161 MSTORE
0x162 PUSH1 0x40
0x164 DUP1
0x165 DUP3
0x166 SHA3
0x167 DUP1
0x168 SLOAD
0x169 SWAP1
0x16a SWAP6
0x16b ADD
0x16c SWAP1
0x16d SWAP5
0x16e SSTORE
0x16f PUSH1 0x4
0x171 SLOAD
0x172 SWAP1
0x173 SWAP3
0x174 AND
0x175 SWAP3
0x176 PUSH4 0xa9059cbb
0x17b SWAP3
0x17c DUP6
0x17d SWAP2
0x17e MLOAD
0x17f PUSH1 0x20
0x181 ADD
0x182 MSTORE
0x183 PUSH1 0x40
0x185 MLOAD
0x186 PUSH1 0xe0
0x188 PUSH1 0x2
0x18a EXP
0x18b PUSH4 0xffffffff
0x190 DUP6
0x191 AND
0x192 MUL
0x193 DUP2
0x194 MSTORE
0x195 PUSH1 0x1
0x197 PUSH1 0xa0
0x199 PUSH1 0x2
0x19b EXP
0x19c SUB
0x19d SWAP1
0x19e SWAP3
0x19f AND
0x1a0 PUSH1 0x4
0x1a2 DUP4
0x1a3 ADD
0x1a4 MSTORE
0x1a5 PUSH1 0x24
0x1a7 DUP3
0x1a8 ADD
0x1a9 MSTORE
0x1aa PUSH1 0x44
0x1ac ADD
0x1ad PUSH1 0x20
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 DUP1
0x1b3 DUP4
0x1b4 SUB
0x1b5 DUP2
0x1b6 PUSH1 0x0
0x1b8 DUP8
0x1b9 DUP1
0x1ba EXTCODESIZE
0x1bb ISZERO
0x1bc ISZERO
0x1bd PUSH2 0x1c5
0x1c0 JUMPI
---
0x140: JUMPDEST 
0x141: V122 = 0x3
0x144: V123 = S[0x3]
0x145: V124 = CALLVALUE
0x148: V125 = ADD V124 V123
0x14b: S[0x3] = V125
0x14c: V126 = 0x1
0x14e: V127 = 0xa0
0x150: V128 = 0x2
0x152: V129 = EXP 0x2 0xa0
0x153: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x154: V131 = CALLER
0x157: V132 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x158: V133 = 0x0
0x15c: M[0x0] = V132
0x15d: V134 = 0xa
0x15f: V135 = 0x20
0x161: M[0x20] = 0xa
0x162: V136 = 0x40
0x166: V137 = SHA3 0x0 0x40
0x168: V138 = S[V137]
0x16b: V139 = ADD V124 V138
0x16e: S[V137] = V139
0x16f: V140 = 0x4
0x171: V141 = S[0x4]
0x174: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x176: V143 = 0xa9059cbb
0x17e: V144 = M[0x40]
0x17f: V145 = 0x20
0x181: V146 = ADD 0x20 V144
0x182: M[V146] = 0x0
0x183: V147 = 0x40
0x185: V148 = M[0x40]
0x186: V149 = 0xe0
0x188: V150 = 0x2
0x18a: V151 = EXP 0x2 0xe0
0x18b: V152 = 0xffffffff
0x191: V153 = AND 0xa9059cbb 0xffffffff
0x192: V154 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x194: M[V148] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x195: V155 = 0x1
0x197: V156 = 0xa0
0x199: V157 = 0x2
0x19b: V158 = EXP 0x2 0xa0
0x19c: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19f: V160 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V161 = 0x4
0x1a3: V162 = ADD V148 0x4
0x1a4: M[V162] = V160
0x1a5: V163 = 0x24
0x1a8: V164 = ADD V148 0x24
0x1a9: M[V164] = V64
0x1aa: V165 = 0x44
0x1ac: V166 = ADD 0x44 V148
0x1ad: V167 = 0x20
0x1af: V168 = 0x40
0x1b1: V169 = M[0x40]
0x1b4: V170 = SUB V166 V169
0x1b6: V171 = 0x0
0x1ba: V172 = EXTCODESIZE V142
0x1bb: V173 = ISZERO V172
0x1bc: V174 = ISZERO V173
0x1bd: V175 = 0x1c5
0x1c0: JUMPI 0x1c5 V174
---
Entry stack: [V12, 0x2a8, V64]
Stack pops: 1
Stack additions: [S0, V142, 0xa9059cbb, V166, 0x20, V169, V170, V169, 0x0, V142]
Exit stack: [V12, 0x2a8, V64, V142, 0xa9059cbb, V166, 0x20, V169, V170, V169, 0x0, V142]

================================

Block 0x1c1
[0x1c1:0x1c4]
---
Predecessors: [0x140]
Successors: []
---
0x1c1 PUSH1 0x0
0x1c3 DUP1
0x1c4 REVERT
---
0x1c1: V176 = 0x0
0x1c4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a8, V64, V142, 0xa9059cbb, V166, 0x20, V169, V170, V169, 0x0, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V64, V142, 0xa9059cbb, V166, 0x20, V169, V170, V169, 0x0, V142]

================================

Block 0x1c5
[0x1c5:0x1d1]
---
Predecessors: [0x140]
Successors: [0x1d2, 0x1d6]
---
0x1c5 JUMPDEST
0x1c6 PUSH2 0x2c6
0x1c9 GAS
0x1ca SUB
0x1cb CALL
0x1cc ISZERO
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1c5: JUMPDEST 
0x1c6: V177 = 0x2c6
0x1c9: V178 = GAS
0x1ca: V179 = SUB V178 0x2c6
0x1cb: V180 = CALL V179 V142 0x0 V169 V170 V169 0x20
0x1cc: V181 = ISZERO V180
0x1cd: V182 = ISZERO V181
0x1ce: V183 = 0x1d6
0x1d1: JUMPI 0x1d6 V182
---
Entry stack: [V12, 0x2a8, V64, V142, 0xa9059cbb, V166, 0x20, V169, V170, V169, 0x0, V142]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x2a8, V64, V142, 0xa9059cbb, V166]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1c5]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V184 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a8, V64, V142, 0xa9059cbb, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V64, V142, 0xa9059cbb, V166]

================================

Block 0x1d6
[0x1d6:0x1f3]
---
Predecessors: [0x1c5]
Successors: [0x1f4, 0x22c]
---
0x1d6 JUMPDEST
0x1d7 POP
0x1d8 POP
0x1d9 POP
0x1da PUSH1 0x40
0x1dc MLOAD
0x1dd DUP1
0x1de MLOAD
0x1df POP
0x1e0 POP
0x1e1 PUSH1 0x4
0x1e3 SLOAD
0x1e4 PUSH1 0xa8
0x1e6 PUSH1 0x2
0x1e8 EXP
0x1e9 SWAP1
0x1ea DIV
0x1eb PUSH1 0xff
0x1ed AND
0x1ee ISZERO
0x1ef ISZERO
0x1f0 PUSH2 0x22c
0x1f3 JUMPI
---
0x1d6: JUMPDEST 
0x1da: V185 = 0x40
0x1dc: V186 = M[0x40]
0x1de: V187 = M[V186]
0x1e1: V188 = 0x4
0x1e3: V189 = S[0x4]
0x1e4: V190 = 0xa8
0x1e6: V191 = 0x2
0x1e8: V192 = EXP 0x2 0xa8
0x1ea: V193 = DIV V189 0x1000000000000000000000000000000000000000000
0x1eb: V194 = 0xff
0x1ed: V195 = AND 0xff V193
0x1ee: V196 = ISZERO V195
0x1ef: V197 = ISZERO V196
0x1f0: V198 = 0x22c
0x1f3: JUMPI 0x22c V197
---
Entry stack: [V12, 0x2a8, V64, V142, 0xa9059cbb, V166]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x2a8, V64]

================================

Block 0x1f4
[0x1f4:0x206]
---
Predecessors: [0x1d6]
Successors: [0x207, 0x22c]
---
0x1f4 PUSH1 0x3
0x1f6 SLOAD
0x1f7 PUSH9 0x5c283d410394100000
0x201 SWAP1
0x202 LT
0x203 PUSH2 0x22c
0x206 JUMPI
---
0x1f4: V199 = 0x3
0x1f6: V200 = S[0x3]
0x1f7: V201 = 0x5c283d410394100000
0x202: V202 = LT V200 0x5c283d410394100000
0x203: V203 = 0x22c
0x206: JUMPI 0x22c V202
---
Entry stack: [V12, 0x2a8, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V64]

================================

Block 0x207
[0x207:0x22b]
---
Predecessors: [0x1f4]
Successors: [0x22c]
---
0x207 PUSH1 0x4
0x209 DUP1
0x20a SLOAD
0x20b PUSH22 0xff000000000000000000000000000000000000000000
0x222 NOT
0x223 AND
0x224 PUSH1 0xa8
0x226 PUSH1 0x2
0x228 EXP
0x229 OR
0x22a SWAP1
0x22b SSTORE
---
0x207: V204 = 0x4
0x20a: V205 = S[0x4]
0x20b: V206 = 0xff000000000000000000000000000000000000000000
0x222: V207 = NOT 0xff000000000000000000000000000000000000000000
0x223: V208 = AND 0xffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff V205
0x224: V209 = 0xa8
0x226: V210 = 0x2
0x228: V211 = EXP 0x2 0xa8
0x229: V212 = OR 0x1000000000000000000000000000000000000000000 V208
0x22b: S[0x4] = V212
---
Entry stack: [V12, 0x2a8, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V64]

================================

Block 0x22c
[0x22c:0x22c]
---
Predecessors: [0x1d6, 0x1f4, 0x207]
Successors: [0x22d]
---
0x22c JUMPDEST
---
0x22c: JUMPDEST 
---
Entry stack: [V12, 0x2a8, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V64]

================================

Block 0x22d
[0x22d:0x2a4]
---
Predecessors: [0x22c]
Successors: [0x2a5]
---
0x22d JUMPDEST
0x22e PUSH32 0x8e8b80d6591b853a9fde8a5bbdeee1584b0af61efe3f402d9136d15f94c04a00
0x24f DUP2
0x250 PUSH1 0x40
0x252 MLOAD
0x253 SWAP1
0x254 DUP2
0x255 MSTORE
0x256 PUSH1 0x20
0x258 ADD
0x259 PUSH1 0x40
0x25b MLOAD
0x25c DUP1
0x25d SWAP2
0x25e SUB
0x25f SWAP1
0x260 LOG1
0x261 PUSH32 0x97c35397cb6acebd9df368c206404479fc4c80dd6034d1b28943aaf582631870
0x282 CALLER
0x283 CALLVALUE
0x284 PUSH1 0x40
0x286 MLOAD
0x287 PUSH1 0x1
0x289 PUSH1 0xa0
0x28b PUSH1 0x2
0x28d EXP
0x28e SUB
0x28f SWAP1
0x290 SWAP3
0x291 AND
0x292 DUP3
0x293 MSTORE
0x294 PUSH1 0x20
0x296 DUP3
0x297 ADD
0x298 MSTORE
0x299 PUSH1 0x40
0x29b SWAP1
0x29c DUP2
0x29d ADD
0x29e SWAP1
0x29f MLOAD
0x2a0 DUP1
0x2a1 SWAP2
0x2a2 SUB
0x2a3 SWAP1
0x2a4 LOG1
---
0x22d: JUMPDEST 
0x22e: V213 = 0x8e8b80d6591b853a9fde8a5bbdeee1584b0af61efe3f402d9136d15f94c04a00
0x250: V214 = 0x40
0x252: V215 = M[0x40]
0x255: M[V215] = V64
0x256: V216 = 0x20
0x258: V217 = ADD 0x20 V215
0x259: V218 = 0x40
0x25b: V219 = M[0x40]
0x25e: V220 = SUB V217 V219
0x260: LOG V219 V220 0x8e8b80d6591b853a9fde8a5bbdeee1584b0af61efe3f402d9136d15f94c04a00
0x261: V221 = 0x97c35397cb6acebd9df368c206404479fc4c80dd6034d1b28943aaf582631870
0x282: V222 = CALLER
0x283: V223 = CALLVALUE
0x284: V224 = 0x40
0x286: V225 = M[0x40]
0x287: V226 = 0x1
0x289: V227 = 0xa0
0x28b: V228 = 0x2
0x28d: V229 = EXP 0x2 0xa0
0x28e: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x291: V231 = AND V222 0xffffffffffffffffffffffffffffffffffffffff
0x293: M[V225] = V231
0x294: V232 = 0x20
0x297: V233 = ADD V225 0x20
0x298: M[V233] = V223
0x299: V234 = 0x40
0x29d: V235 = ADD 0x40 V225
0x29f: V236 = M[0x40]
0x2a2: V237 = SUB V235 V236
0x2a4: LOG V236 V237 0x97c35397cb6acebd9df368c206404479fc4c80dd6034d1b28943aaf582631870
---
Entry stack: [V12, 0x2a8, V64]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2a8, V64]

================================

Block 0x2a5
[0x2a5:0x2a7]
---
Predecessors: [0x22d, 0x64b, 0x658, 0x66b, 0x6bd]
Successors: [0x2a8]
---
0x2a5 JUMPDEST
0x2a6 POP
0x2a7 JUMP
---
0x2a5: JUMPDEST 
0x2a7: JUMP 0x2a8
---
Entry stack: [V12, 0x2a8, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a8
[0x2a8:0x2a9]
---
Predecessors: [0x2a5, 0x52e, 0x649, 0x726]
Successors: []
---
0x2a8 JUMPDEST
0x2a9 STOP
---
0x2a8: JUMPDEST 
0x2a9: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2aa
[0x2aa:0x2b0]
---
Predecessors: [0xb]
Successors: [0x2b1, 0x2b5]
---
0x2aa JUMPDEST
0x2ab CALLVALUE
0x2ac ISZERO
0x2ad PUSH2 0x2b5
0x2b0 JUMPI
---
0x2aa: JUMPDEST 
0x2ab: V238 = CALLVALUE
0x2ac: V239 = ISZERO V238
0x2ad: V240 = 0x2b5
0x2b0: JUMPI 0x2b5 V239
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b1
[0x2b1:0x2b4]
---
Predecessors: [0x2aa]
Successors: []
---
0x2b1 PUSH1 0x0
0x2b3 DUP1
0x2b4 REVERT
---
0x2b1: V241 = 0x0
0x2b4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b5
[0x2b5:0x2bc]
---
Predecessors: [0x2aa]
Successors: [0x427]
---
0x2b5 JUMPDEST
0x2b6 PUSH2 0x2a8
0x2b9 PUSH2 0x427
0x2bc JUMP
---
0x2b5: JUMPDEST 
0x2b6: V242 = 0x2a8
0x2b9: V243 = 0x427
0x2bc: JUMP 0x427
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a8]
Exit stack: [V12, 0x2a8]

================================

Block 0x2bd
[0x2bd:0x2be]
---
Predecessors: []
Successors: []
---
0x2bd JUMPDEST
0x2be STOP
---
0x2bd: JUMPDEST 
0x2be: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2bf
[0x2bf:0x2c5]
---
Predecessors: [0x25]
Successors: [0x2c6, 0x2ca]
---
0x2bf JUMPDEST
0x2c0 CALLVALUE
0x2c1 ISZERO
0x2c2 PUSH2 0x2ca
0x2c5 JUMPI
---
0x2bf: JUMPDEST 
0x2c0: V244 = CALLVALUE
0x2c1: V245 = ISZERO V244
0x2c2: V246 = 0x2ca
0x2c5: JUMPI 0x2ca V245
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c6
[0x2c6:0x2c9]
---
Predecessors: [0x2bf]
Successors: []
---
0x2c6 PUSH1 0x0
0x2c8 DUP1
0x2c9 REVERT
---
0x2c6: V247 = 0x0
0x2c9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ca
[0x2ca:0x2d1]
---
Predecessors: [0x2bf]
Successors: [0x530]
---
0x2ca JUMPDEST
0x2cb PUSH2 0x2d2
0x2ce PUSH2 0x530
0x2d1 JUMP
---
0x2ca: JUMPDEST 
0x2cb: V248 = 0x2d2
0x2ce: V249 = 0x530
0x2d1: JUMP 0x530
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d2]
Exit stack: [V12, 0x2d2]

================================

Block 0x2d2
[0x2d2:0x2e3]
---
Predecessors: [0x424, 0x530, 0x536, 0x54b, 0x558]
Successors: []
---
0x2d2 JUMPDEST
0x2d3 PUSH1 0x40
0x2d5 MLOAD
0x2d6 SWAP1
0x2d7 DUP2
0x2d8 MSTORE
0x2d9 PUSH1 0x20
0x2db ADD
0x2dc PUSH1 0x40
0x2de MLOAD
0x2df DUP1
0x2e0 SWAP2
0x2e1 SUB
0x2e2 SWAP1
0x2e3 RETURN
---
0x2d2: JUMPDEST 
0x2d3: V250 = 0x40
0x2d5: V251 = M[0x40]
0x2d8: M[V251] = S0
0x2d9: V252 = 0x20
0x2db: V253 = ADD 0x20 V251
0x2dc: V254 = 0x40
0x2de: V255 = M[0x40]
0x2e1: V256 = SUB V253 V255
0x2e3: RETURN V255 V256
---
Entry stack: [V12, 0x2a8, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2a8, 0x0, S2, S1]

================================

Block 0x2e4
[0x2e4:0x2ea]
---
Predecessors: [0x30]
Successors: [0x2eb, 0x2ef]
---
0x2e4 JUMPDEST
0x2e5 CALLVALUE
0x2e6 ISZERO
0x2e7 PUSH2 0x2ef
0x2ea JUMPI
---
0x2e4: JUMPDEST 
0x2e5: V257 = CALLVALUE
0x2e6: V258 = ISZERO V257
0x2e7: V259 = 0x2ef
0x2ea: JUMPI 0x2ef V258
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2eb
[0x2eb:0x2ee]
---
Predecessors: [0x2e4]
Successors: []
---
0x2eb PUSH1 0x0
0x2ed DUP1
0x2ee REVERT
---
0x2eb: V260 = 0x0
0x2ee: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ef
[0x2ef:0x2f6]
---
Predecessors: [0x2e4]
Successors: [0x536]
---
0x2ef JUMPDEST
0x2f0 PUSH2 0x2d2
0x2f3 PUSH2 0x536
0x2f6 JUMP
---
0x2ef: JUMPDEST 
0x2f0: V261 = 0x2d2
0x2f3: V262 = 0x536
0x2f6: JUMP 0x536
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d2]
Exit stack: [V12, 0x2d2]

================================

Block 0x2f7
[0x2f7:0x308]
---
Predecessors: []
Successors: []
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0x40
0x2fa MLOAD
0x2fb SWAP1
0x2fc DUP2
0x2fd MSTORE
0x2fe PUSH1 0x20
0x300 ADD
0x301 PUSH1 0x40
0x303 MLOAD
0x304 DUP1
0x305 SWAP2
0x306 SUB
0x307 SWAP1
0x308 RETURN
---
0x2f7: JUMPDEST 
0x2f8: V263 = 0x40
0x2fa: V264 = M[0x40]
0x2fd: M[V264] = S0
0x2fe: V265 = 0x20
0x300: V266 = ADD 0x20 V264
0x301: V267 = 0x40
0x303: V268 = M[0x40]
0x306: V269 = SUB V266 V268
0x308: RETURN V268 V269
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x309
[0x309:0x30f]
---
Predecessors: [0x3b]
Successors: [0x310, 0x314]
---
0x309 JUMPDEST
0x30a CALLVALUE
0x30b ISZERO
0x30c PUSH2 0x314
0x30f JUMPI
---
0x309: JUMPDEST 
0x30a: V270 = CALLVALUE
0x30b: V271 = ISZERO V270
0x30c: V272 = 0x314
0x30f: JUMPI 0x314 V271
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x310
[0x310:0x313]
---
Predecessors: [0x309]
Successors: []
---
0x310 PUSH1 0x0
0x312 DUP1
0x313 REVERT
---
0x310: V273 = 0x0
0x313: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x314
[0x314:0x31b]
---
Predecessors: [0x309]
Successors: [0x53c]
---
0x314 JUMPDEST
0x315 PUSH2 0x31c
0x318 PUSH2 0x53c
0x31b JUMP
---
0x314: JUMPDEST 
0x315: V274 = 0x31c
0x318: V275 = 0x53c
0x31b: JUMP 0x53c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x31c]
Exit stack: [V12, 0x31c]

================================

Block 0x31c
[0x31c:0x337]
---
Predecessors: [0x53c]
Successors: []
---
0x31c JUMPDEST
0x31d PUSH1 0x40
0x31f MLOAD
0x320 PUSH1 0x1
0x322 PUSH1 0xa0
0x324 PUSH1 0x2
0x326 EXP
0x327 SUB
0x328 SWAP1
0x329 SWAP2
0x32a AND
0x32b DUP2
0x32c MSTORE
0x32d PUSH1 0x20
0x32f ADD
0x330 PUSH1 0x40
0x332 MLOAD
0x333 DUP1
0x334 SWAP2
0x335 SUB
0x336 SWAP1
0x337 RETURN
---
0x31c: JUMPDEST 
0x31d: V276 = 0x40
0x31f: V277 = M[0x40]
0x320: V278 = 0x1
0x322: V279 = 0xa0
0x324: V280 = 0x2
0x326: V281 = EXP 0x2 0xa0
0x327: V282 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32a: V283 = AND V503 0xffffffffffffffffffffffffffffffffffffffff
0x32c: M[V277] = V283
0x32d: V284 = 0x20
0x32f: V285 = ADD 0x20 V277
0x330: V286 = 0x40
0x332: V287 = M[0x40]
0x335: V288 = SUB V285 V287
0x337: RETURN V287 V288
---
Entry stack: [V12, 0x31c, V503]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x31c]

================================

Block 0x338
[0x338:0x33e]
---
Predecessors: [0x46]
Successors: [0x33f, 0x343]
---
0x338 JUMPDEST
0x339 CALLVALUE
0x33a ISZERO
0x33b PUSH2 0x343
0x33e JUMPI
---
0x338: JUMPDEST 
0x339: V289 = CALLVALUE
0x33a: V290 = ISZERO V289
0x33b: V291 = 0x343
0x33e: JUMPI 0x343 V290
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33f
[0x33f:0x342]
---
Predecessors: [0x338]
Successors: []
---
0x33f PUSH1 0x0
0x341 DUP1
0x342 REVERT
---
0x33f: V292 = 0x0
0x342: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x343
[0x343:0x34a]
---
Predecessors: [0x338]
Successors: [0x54b]
---
0x343 JUMPDEST
0x344 PUSH2 0x2d2
0x347 PUSH2 0x54b
0x34a JUMP
---
0x343: JUMPDEST 
0x344: V293 = 0x2d2
0x347: V294 = 0x54b
0x34a: JUMP 0x54b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d2]
Exit stack: [V12, 0x2d2]

================================

Block 0x34b
[0x34b:0x35c]
---
Predecessors: []
Successors: []
---
0x34b JUMPDEST
0x34c PUSH1 0x40
0x34e MLOAD
0x34f SWAP1
0x350 DUP2
0x351 MSTORE
0x352 PUSH1 0x20
0x354 ADD
0x355 PUSH1 0x40
0x357 MLOAD
0x358 DUP1
0x359 SWAP2
0x35a SUB
0x35b SWAP1
0x35c RETURN
---
0x34b: JUMPDEST 
0x34c: V295 = 0x40
0x34e: V296 = M[0x40]
0x351: M[V296] = S0
0x352: V297 = 0x20
0x354: V298 = ADD 0x20 V296
0x355: V299 = 0x40
0x357: V300 = M[0x40]
0x35a: V301 = SUB V298 V300
0x35c: RETURN V300 V301
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x35d
[0x35d:0x363]
---
Predecessors: [0x51]
Successors: [0x364, 0x368]
---
0x35d JUMPDEST
0x35e CALLVALUE
0x35f ISZERO
0x360 PUSH2 0x368
0x363 JUMPI
---
0x35d: JUMPDEST 
0x35e: V302 = CALLVALUE
0x35f: V303 = ISZERO V302
0x360: V304 = 0x368
0x363: JUMPI 0x368 V303
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x364
[0x364:0x367]
---
Predecessors: [0x35d]
Successors: []
---
0x364 PUSH1 0x0
0x366 DUP1
0x367 REVERT
---
0x364: V305 = 0x0
0x367: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x368
[0x368:0x36f]
---
Predecessors: [0x35d]
Successors: [0x558]
---
0x368 JUMPDEST
0x369 PUSH2 0x2d2
0x36c PUSH2 0x558
0x36f JUMP
---
0x368: JUMPDEST 
0x369: V306 = 0x2d2
0x36c: V307 = 0x558
0x36f: JUMP 0x558
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d2]
Exit stack: [V12, 0x2d2]

================================

Block 0x370
[0x370:0x381]
---
Predecessors: []
Successors: []
---
0x370 JUMPDEST
0x371 PUSH1 0x40
0x373 MLOAD
0x374 SWAP1
0x375 DUP2
0x376 MSTORE
0x377 PUSH1 0x20
0x379 ADD
0x37a PUSH1 0x40
0x37c MLOAD
0x37d DUP1
0x37e SWAP2
0x37f SUB
0x380 SWAP1
0x381 RETURN
---
0x370: JUMPDEST 
0x371: V308 = 0x40
0x373: V309 = M[0x40]
0x376: M[V309] = S0
0x377: V310 = 0x20
0x379: V311 = ADD 0x20 V309
0x37a: V312 = 0x40
0x37c: V313 = M[0x40]
0x37f: V314 = SUB V311 V313
0x381: RETURN V313 V314
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x382
[0x382:0x388]
---
Predecessors: [0x5c]
Successors: [0x389, 0x38d]
---
0x382 JUMPDEST
0x383 CALLVALUE
0x384 ISZERO
0x385 PUSH2 0x38d
0x388 JUMPI
---
0x382: JUMPDEST 
0x383: V315 = CALLVALUE
0x384: V316 = ISZERO V315
0x385: V317 = 0x38d
0x388: JUMPI 0x38d V316
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x389
[0x389:0x38c]
---
Predecessors: [0x382]
Successors: []
---
0x389 PUSH1 0x0
0x38b DUP1
0x38c REVERT
---
0x389: V318 = 0x0
0x38c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x38d
[0x38d:0x394]
---
Predecessors: [0x382]
Successors: [0x3f8]
---
0x38d JUMPDEST
0x38e PUSH2 0x2d2
0x391 PUSH2 0x3f8
0x394 JUMP
---
0x38d: JUMPDEST 
0x38e: V319 = 0x2d2
0x391: V320 = 0x3f8
0x394: JUMP 0x3f8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d2]
Exit stack: [V12, 0x2d2]

================================

Block 0x395
[0x395:0x3a6]
---
Predecessors: []
Successors: []
---
0x395 JUMPDEST
0x396 PUSH1 0x40
0x398 MLOAD
0x399 SWAP1
0x39a DUP2
0x39b MSTORE
0x39c PUSH1 0x20
0x39e ADD
0x39f PUSH1 0x40
0x3a1 MLOAD
0x3a2 DUP1
0x3a3 SWAP2
0x3a4 SUB
0x3a5 SWAP1
0x3a6 RETURN
---
0x395: JUMPDEST 
0x396: V321 = 0x40
0x398: V322 = M[0x40]
0x39b: M[V322] = S0
0x39c: V323 = 0x20
0x39e: V324 = ADD 0x20 V322
0x39f: V325 = 0x40
0x3a1: V326 = M[0x40]
0x3a4: V327 = SUB V324 V326
0x3a6: RETURN V326 V327
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3a7
[0x3a7:0x3ad]
---
Predecessors: [0x67]
Successors: [0x3ae, 0x3b2]
---
0x3a7 JUMPDEST
0x3a8 CALLVALUE
0x3a9 ISZERO
0x3aa PUSH2 0x3b2
0x3ad JUMPI
---
0x3a7: JUMPDEST 
0x3a8: V328 = CALLVALUE
0x3a9: V329 = ISZERO V328
0x3aa: V330 = 0x3b2
0x3ad: JUMPI 0x3b2 V329
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ae
[0x3ae:0x3b1]
---
Predecessors: [0x3a7]
Successors: []
---
0x3ae PUSH1 0x0
0x3b0 DUP1
0x3b1 REVERT
---
0x3ae: V331 = 0x0
0x3b1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b2
[0x3b2:0x3b9]
---
Predecessors: [0x3a7]
Successors: [0x55e]
---
0x3b2 JUMPDEST
0x3b3 PUSH2 0x3ba
0x3b6 PUSH2 0x55e
0x3b9 JUMP
---
0x3b2: JUMPDEST 
0x3b3: V332 = 0x3ba
0x3b6: V333 = 0x55e
0x3b9: JUMP 0x55e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3ba]
Exit stack: [V12, 0x3ba]

================================

Block 0x3ba
[0x3ba:0x3cd]
---
Predecessors: [0x55e]
Successors: []
---
0x3ba JUMPDEST
0x3bb PUSH1 0x40
0x3bd MLOAD
0x3be SWAP1
0x3bf ISZERO
0x3c0 ISZERO
0x3c1 DUP2
0x3c2 MSTORE
0x3c3 PUSH1 0x20
0x3c5 ADD
0x3c6 PUSH1 0x40
0x3c8 MLOAD
0x3c9 DUP1
0x3ca SWAP2
0x3cb SUB
0x3cc SWAP1
0x3cd RETURN
---
0x3ba: JUMPDEST 
0x3bb: V334 = 0x40
0x3bd: V335 = M[0x40]
0x3bf: V336 = ISZERO V514
0x3c0: V337 = ISZERO V336
0x3c2: M[V335] = V337
0x3c3: V338 = 0x20
0x3c5: V339 = ADD 0x20 V335
0x3c6: V340 = 0x40
0x3c8: V341 = M[0x40]
0x3cb: V342 = SUB V339 V341
0x3cd: RETURN V341 V342
---
Entry stack: [V12, 0x3ba, V514]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x3ba]

================================

Block 0x3ce
[0x3ce:0x3d4]
---
Predecessors: [0x72]
Successors: [0x3d5, 0x3d9]
---
0x3ce JUMPDEST
0x3cf CALLVALUE
0x3d0 ISZERO
0x3d1 PUSH2 0x3d9
0x3d4 JUMPI
---
0x3ce: JUMPDEST 
0x3cf: V343 = CALLVALUE
0x3d0: V344 = ISZERO V343
0x3d1: V345 = 0x3d9
0x3d4: JUMPI 0x3d9 V344
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d5
[0x3d5:0x3d8]
---
Predecessors: [0x3ce]
Successors: []
---
0x3d5 PUSH1 0x0
0x3d7 DUP1
0x3d8 REVERT
---
0x3d5: V346 = 0x0
0x3d8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d9
[0x3d9:0x3e0]
---
Predecessors: [0x3ce]
Successors: [0x56e]
---
0x3d9 JUMPDEST
0x3da PUSH2 0x2a8
0x3dd PUSH2 0x56e
0x3e0 JUMP
---
0x3d9: JUMPDEST 
0x3da: V347 = 0x2a8
0x3dd: V348 = 0x56e
0x3e0: JUMP 0x56e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a8]
Exit stack: [V12, 0x2a8]

================================

Block 0x3e1
[0x3e1:0x3e2]
---
Predecessors: []
Successors: []
---
0x3e1 JUMPDEST
0x3e2 STOP
---
0x3e1: JUMPDEST 
0x3e2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3e3
[0x3e3:0x3e9]
---
Predecessors: [0x7d]
Successors: [0x3ea, 0x3ee]
---
0x3e3 JUMPDEST
0x3e4 CALLVALUE
0x3e5 ISZERO
0x3e6 PUSH2 0x3ee
0x3e9 JUMPI
---
0x3e3: JUMPDEST 
0x3e4: V349 = CALLVALUE
0x3e5: V350 = ISZERO V349
0x3e6: V351 = 0x3ee
0x3e9: JUMPI 0x3ee V350
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ea
[0x3ea:0x3ed]
---
Predecessors: [0x3e3]
Successors: []
---
0x3ea PUSH1 0x0
0x3ec DUP1
0x3ed REVERT
---
0x3ea: V352 = 0x0
0x3ed: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ee
[0x3ee:0x3f5]
---
Predecessors: [0x3e3]
Successors: [0x64b]
---
0x3ee JUMPDEST
0x3ef PUSH2 0x2a8
0x3f2 PUSH2 0x64b
0x3f5 JUMP
---
0x3ee: JUMPDEST 
0x3ef: V353 = 0x2a8
0x3f2: V354 = 0x64b
0x3f5: JUMP 0x64b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a8]
Exit stack: [V12, 0x2a8]

================================

Block 0x3f6
[0x3f6:0x3f7]
---
Predecessors: []
Successors: []
---
0x3f6 JUMPDEST
0x3f7 STOP
---
0x3f6: JUMPDEST 
0x3f7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3f8
[0x3f8:0x402]
---
Predecessors: [0x9b, 0x38d]
Successors: [0x403, 0x40b]
---
0x3f8 JUMPDEST
0x3f9 PUSH1 0x0
0x3fb DUP1
0x3fc SLOAD
0x3fd TIMESTAMP
0x3fe GT
0x3ff PUSH2 0x40b
0x402 JUMPI
---
0x3f8: JUMPDEST 
0x3f9: V355 = 0x0
0x3fc: V356 = S[0x0]
0x3fd: V357 = TIMESTAMP
0x3fe: V358 = GT V357 V356
0x3ff: V359 = 0x40b
0x402: JUMPI 0x40b V358
---
Entry stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S1, {0xaf, 0x2d2}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S1, {0xaf, 0x2d2}, 0x0]

================================

Block 0x403
[0x403:0x40a]
---
Predecessors: [0x3f8]
Successors: [0x422]
---
0x403 POP
0x404 PUSH1 0x6
0x406 SLOAD
0x407 PUSH2 0x422
0x40a JUMP
---
0x404: V360 = 0x6
0x406: V361 = S[0x6]
0x407: V362 = 0x422
0x40a: JUMP 0x422
---
Entry stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S2, {0xaf, 0x2d2}, 0x0]
Stack pops: 1
Stack additions: [V361]
Exit stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S2, {0xaf, 0x2d2}, V361]

================================

Block 0x40b
[0x40b:0x414]
---
Predecessors: [0x3f8]
Successors: [0x415, 0x41d]
---
0x40b JUMPDEST
0x40c PUSH1 0x1
0x40e SLOAD
0x40f TIMESTAMP
0x410 GT
0x411 PUSH2 0x41d
0x414 JUMPI
---
0x40b: JUMPDEST 
0x40c: V363 = 0x1
0x40e: V364 = S[0x1]
0x40f: V365 = TIMESTAMP
0x410: V366 = GT V365 V364
0x411: V367 = 0x41d
0x414: JUMPI 0x41d V366
---
Entry stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S2, {0xaf, 0x2d2}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S2, {0xaf, 0x2d2}, 0x0]

================================

Block 0x415
[0x415:0x41c]
---
Predecessors: [0x40b]
Successors: [0x422]
---
0x415 POP
0x416 PUSH1 0x7
0x418 SLOAD
0x419 PUSH2 0x422
0x41c JUMP
---
0x416: V368 = 0x7
0x418: V369 = S[0x7]
0x419: V370 = 0x422
0x41c: JUMP 0x422
---
Entry stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S2, {0xaf, 0x2d2}, 0x0]
Stack pops: 1
Stack additions: [V369]
Exit stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S2, {0xaf, 0x2d2}, V369]

================================

Block 0x41d
[0x41d:0x421]
---
Predecessors: [0x40b]
Successors: [0x422]
---
0x41d JUMPDEST
0x41e POP
0x41f PUSH1 0x8
0x421 SLOAD
---
0x41d: JUMPDEST 
0x41f: V371 = 0x8
0x421: V372 = S[0x8]
---
Entry stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S2, {0xaf, 0x2d2}, 0x0]
Stack pops: 1
Stack additions: [V372]
Exit stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S2, {0xaf, 0x2d2}, V372]

================================

Block 0x422
[0x422:0x422]
---
Predecessors: [0x403, 0x415, 0x41d]
Successors: [0x423]
---
0x422 JUMPDEST
---
0x422: JUMPDEST 
---
Entry stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S2, {0xaf, 0x2d2}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S2, {0xaf, 0x2d2}, S0]

================================

Block 0x423
[0x423:0x423]
---
Predecessors: [0x422]
Successors: [0x424]
---
0x423 JUMPDEST
---
0x423: JUMPDEST 
---
Entry stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S2, {0xaf, 0x2d2}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S2, {0xaf, 0x2d2}, S0]

================================

Block 0x424
[0x424:0x426]
---
Predecessors: [0x423]
Successors: [0xaf, 0x2d2]
---
0x424 JUMPDEST
0x425 SWAP1
0x426 JUMP
---
0x424: JUMPDEST 
0x426: JUMP {0xaf, 0x2d2}
---
Entry stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S2, {0xaf, 0x2d2}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x2a8, 0x0, 0xde0b6b3a7640000, S2, S0]

================================

Block 0x427
[0x427:0x43d]
---
Predecessors: [0x2b5]
Successors: [0x43e, 0x43f]
---
0x427 JUMPDEST
0x428 PUSH1 0x5
0x42a SLOAD
0x42b CALLER
0x42c PUSH1 0x1
0x42e PUSH1 0xa0
0x430 PUSH1 0x2
0x432 EXP
0x433 SUB
0x434 SWAP1
0x435 DUP2
0x436 AND
0x437 SWAP2
0x438 AND
0x439 EQ
0x43a PUSH2 0x43f
0x43d JUMPI
---
0x427: JUMPDEST 
0x428: V373 = 0x5
0x42a: V374 = S[0x5]
0x42b: V375 = CALLER
0x42c: V376 = 0x1
0x42e: V377 = 0xa0
0x430: V378 = 0x2
0x432: V379 = EXP 0x2 0xa0
0x433: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x436: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x438: V382 = AND V374 0xffffffffffffffffffffffffffffffffffffffff
0x439: V383 = EQ V382 V381
0x43a: V384 = 0x43f
0x43d: JUMPI 0x43f V383
---
Entry stack: [V12, 0x2a8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8]

================================

Block 0x43e
[0x43e:0x43e]
---
Predecessors: [0x427]
Successors: []
---
0x43e INVALID
---
0x43e: INVALID 
---
Entry stack: [V12, 0x2a8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8]

================================

Block 0x43f
[0x43f:0x448]
---
Predecessors: [0x427]
Successors: [0x449, 0x44a]
---
0x43f JUMPDEST
0x440 PUSH1 0x2
0x442 SLOAD
0x443 TIMESTAMP
0x444 GT
0x445 PUSH2 0x44a
0x448 JUMPI
---
0x43f: JUMPDEST 
0x440: V385 = 0x2
0x442: V386 = S[0x2]
0x443: V387 = TIMESTAMP
0x444: V388 = GT V387 V386
0x445: V389 = 0x44a
0x448: JUMPI 0x44a V388
---
Entry stack: [V12, 0x2a8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8]

================================

Block 0x449
[0x449:0x449]
---
Predecessors: [0x43f]
Successors: []
---
0x449 INVALID
---
0x449: INVALID 
---
Entry stack: [V12, 0x2a8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8]

================================

Block 0x44a
[0x44a:0x4a5]
---
Predecessors: [0x43f]
Successors: [0x4a6, 0x4aa]
---
0x44a JUMPDEST
0x44b PUSH1 0x4
0x44d SLOAD
0x44e PUSH1 0x1
0x450 PUSH1 0xa0
0x452 PUSH1 0x2
0x454 EXP
0x455 SUB
0x456 AND
0x457 PUSH4 0x77757fc
0x45c CALLER
0x45d DUP3
0x45e PUSH4 0x70a08231
0x463 ADDRESS
0x464 PUSH1 0x0
0x466 PUSH1 0x40
0x468 MLOAD
0x469 PUSH1 0x20
0x46b ADD
0x46c MSTORE
0x46d PUSH1 0x40
0x46f MLOAD
0x470 PUSH1 0xe0
0x472 PUSH1 0x2
0x474 EXP
0x475 PUSH4 0xffffffff
0x47a DUP5
0x47b AND
0x47c MUL
0x47d DUP2
0x47e MSTORE
0x47f PUSH1 0x1
0x481 PUSH1 0xa0
0x483 PUSH1 0x2
0x485 EXP
0x486 SUB
0x487 SWAP1
0x488 SWAP2
0x489 AND
0x48a PUSH1 0x4
0x48c DUP3
0x48d ADD
0x48e MSTORE
0x48f PUSH1 0x24
0x491 ADD
0x492 PUSH1 0x20
0x494 PUSH1 0x40
0x496 MLOAD
0x497 DUP1
0x498 DUP4
0x499 SUB
0x49a DUP2
0x49b PUSH1 0x0
0x49d DUP8
0x49e DUP1
0x49f EXTCODESIZE
0x4a0 ISZERO
0x4a1 ISZERO
0x4a2 PUSH2 0x4aa
0x4a5 JUMPI
---
0x44a: JUMPDEST 
0x44b: V390 = 0x4
0x44d: V391 = S[0x4]
0x44e: V392 = 0x1
0x450: V393 = 0xa0
0x452: V394 = 0x2
0x454: V395 = EXP 0x2 0xa0
0x455: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x456: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x457: V398 = 0x77757fc
0x45c: V399 = CALLER
0x45e: V400 = 0x70a08231
0x463: V401 = ADDRESS
0x464: V402 = 0x0
0x466: V403 = 0x40
0x468: V404 = M[0x40]
0x469: V405 = 0x20
0x46b: V406 = ADD 0x20 V404
0x46c: M[V406] = 0x0
0x46d: V407 = 0x40
0x46f: V408 = M[0x40]
0x470: V409 = 0xe0
0x472: V410 = 0x2
0x474: V411 = EXP 0x2 0xe0
0x475: V412 = 0xffffffff
0x47b: V413 = AND 0x70a08231 0xffffffff
0x47c: V414 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x47e: M[V408] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x47f: V415 = 0x1
0x481: V416 = 0xa0
0x483: V417 = 0x2
0x485: V418 = EXP 0x2 0xa0
0x486: V419 = SUB 0x10000000000000000000000000000000000000000 0x1
0x489: V420 = AND V401 0xffffffffffffffffffffffffffffffffffffffff
0x48a: V421 = 0x4
0x48d: V422 = ADD V408 0x4
0x48e: M[V422] = V420
0x48f: V423 = 0x24
0x491: V424 = ADD 0x24 V408
0x492: V425 = 0x20
0x494: V426 = 0x40
0x496: V427 = M[0x40]
0x499: V428 = SUB V424 V427
0x49b: V429 = 0x0
0x49f: V430 = EXTCODESIZE V397
0x4a0: V431 = ISZERO V430
0x4a1: V432 = ISZERO V431
0x4a2: V433 = 0x4aa
0x4a5: JUMPI 0x4aa V432
---
Entry stack: [V12, 0x2a8]
Stack pops: 0
Stack additions: [V397, 0x77757fc, V399, V397, 0x70a08231, V424, 0x20, V427, V428, V427, 0x0, V397]
Exit stack: [V12, 0x2a8, V397, 0x77757fc, V399, V397, 0x70a08231, V424, 0x20, V427, V428, V427, 0x0, V397]

================================

Block 0x4a6
[0x4a6:0x4a9]
---
Predecessors: [0x44a]
Successors: []
---
0x4a6 PUSH1 0x0
0x4a8 DUP1
0x4a9 REVERT
---
0x4a6: V434 = 0x0
0x4a9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a8, V397, 0x77757fc, V399, V397, 0x70a08231, V424, 0x20, V427, V428, V427, 0x0, V397]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V397, 0x77757fc, V399, V397, 0x70a08231, V424, 0x20, V427, V428, V427, 0x0, V397]

================================

Block 0x4aa
[0x4aa:0x4b6]
---
Predecessors: [0x44a]
Successors: [0x4b7, 0x4bb]
---
0x4aa JUMPDEST
0x4ab PUSH2 0x2c6
0x4ae GAS
0x4af SUB
0x4b0 CALL
0x4b1 ISZERO
0x4b2 ISZERO
0x4b3 PUSH2 0x4bb
0x4b6 JUMPI
---
0x4aa: JUMPDEST 
0x4ab: V435 = 0x2c6
0x4ae: V436 = GAS
0x4af: V437 = SUB V436 0x2c6
0x4b0: V438 = CALL V437 V397 0x0 V427 V428 V427 0x20
0x4b1: V439 = ISZERO V438
0x4b2: V440 = ISZERO V439
0x4b3: V441 = 0x4bb
0x4b6: JUMPI 0x4bb V440
---
Entry stack: [V12, 0x2a8, V397, 0x77757fc, V399, V397, 0x70a08231, V424, 0x20, V427, V428, V427, 0x0, V397]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x2a8, V397, 0x77757fc, V399, V397, 0x70a08231, V424]

================================

Block 0x4b7
[0x4b7:0x4ba]
---
Predecessors: [0x4aa]
Successors: []
---
0x4b7 PUSH1 0x0
0x4b9 DUP1
0x4ba REVERT
---
0x4b7: V442 = 0x0
0x4ba: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a8, V397, 0x77757fc, V399, V397, 0x70a08231, V424]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V397, 0x77757fc, V399, V397, 0x70a08231, V424]

================================

Block 0x4bb
[0x4bb:0x50c]
---
Predecessors: [0x4aa]
Successors: [0x50d, 0x511]
---
0x4bb JUMPDEST
0x4bc POP
0x4bd POP
0x4be POP
0x4bf PUSH1 0x40
0x4c1 MLOAD
0x4c2 DUP1
0x4c3 MLOAD
0x4c4 SWAP1
0x4c5 POP
0x4c6 PUSH1 0x0
0x4c8 PUSH1 0x40
0x4ca MLOAD
0x4cb PUSH1 0x20
0x4cd ADD
0x4ce MSTORE
0x4cf PUSH1 0x40
0x4d1 MLOAD
0x4d2 PUSH1 0xe0
0x4d4 PUSH1 0x2
0x4d6 EXP
0x4d7 PUSH4 0xffffffff
0x4dc DUP6
0x4dd AND
0x4de MUL
0x4df DUP2
0x4e0 MSTORE
0x4e1 PUSH1 0x1
0x4e3 PUSH1 0xa0
0x4e5 PUSH1 0x2
0x4e7 EXP
0x4e8 SUB
0x4e9 SWAP1
0x4ea SWAP3
0x4eb AND
0x4ec PUSH1 0x4
0x4ee DUP4
0x4ef ADD
0x4f0 MSTORE
0x4f1 PUSH1 0x24
0x4f3 DUP3
0x4f4 ADD
0x4f5 MSTORE
0x4f6 PUSH1 0x44
0x4f8 ADD
0x4f9 PUSH1 0x20
0x4fb PUSH1 0x40
0x4fd MLOAD
0x4fe DUP1
0x4ff DUP4
0x500 SUB
0x501 DUP2
0x502 PUSH1 0x0
0x504 DUP8
0x505 DUP1
0x506 EXTCODESIZE
0x507 ISZERO
0x508 ISZERO
0x509 PUSH2 0x511
0x50c JUMPI
---
0x4bb: JUMPDEST 
0x4bf: V443 = 0x40
0x4c1: V444 = M[0x40]
0x4c3: V445 = M[V444]
0x4c6: V446 = 0x0
0x4c8: V447 = 0x40
0x4ca: V448 = M[0x40]
0x4cb: V449 = 0x20
0x4cd: V450 = ADD 0x20 V448
0x4ce: M[V450] = 0x0
0x4cf: V451 = 0x40
0x4d1: V452 = M[0x40]
0x4d2: V453 = 0xe0
0x4d4: V454 = 0x2
0x4d6: V455 = EXP 0x2 0xe0
0x4d7: V456 = 0xffffffff
0x4dd: V457 = AND 0x77757fc 0xffffffff
0x4de: V458 = MUL 0x77757fc 0x100000000000000000000000000000000000000000000000000000000
0x4e0: M[V452] = 0x77757fc00000000000000000000000000000000000000000000000000000000
0x4e1: V459 = 0x1
0x4e3: V460 = 0xa0
0x4e5: V461 = 0x2
0x4e7: V462 = EXP 0x2 0xa0
0x4e8: V463 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4eb: V464 = AND V399 0xffffffffffffffffffffffffffffffffffffffff
0x4ec: V465 = 0x4
0x4ef: V466 = ADD V452 0x4
0x4f0: M[V466] = V464
0x4f1: V467 = 0x24
0x4f4: V468 = ADD V452 0x24
0x4f5: M[V468] = V445
0x4f6: V469 = 0x44
0x4f8: V470 = ADD 0x44 V452
0x4f9: V471 = 0x20
0x4fb: V472 = 0x40
0x4fd: V473 = M[0x40]
0x500: V474 = SUB V470 V473
0x502: V475 = 0x0
0x506: V476 = EXTCODESIZE V397
0x507: V477 = ISZERO V476
0x508: V478 = ISZERO V477
0x509: V479 = 0x511
0x50c: JUMPI 0x511 V478
---
Entry stack: [V12, 0x2a8, V397, 0x77757fc, V399, V397, 0x70a08231, V424]
Stack pops: 6
Stack additions: [S5, S4, V470, 0x20, V473, V474, V473, 0x0, S5]
Exit stack: [V12, 0x2a8, V397, 0x77757fc, V470, 0x20, V473, V474, V473, 0x0, V397]

================================

Block 0x50d
[0x50d:0x510]
---
Predecessors: [0x4bb]
Successors: []
---
0x50d PUSH1 0x0
0x50f DUP1
0x510 REVERT
---
0x50d: V480 = 0x0
0x510: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a8, V397, 0x77757fc, V470, 0x20, V473, V474, V473, 0x0, V397]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V397, 0x77757fc, V470, 0x20, V473, V474, V473, 0x0, V397]

================================

Block 0x511
[0x511:0x51d]
---
Predecessors: [0x4bb]
Successors: [0x51e, 0x522]
---
0x511 JUMPDEST
0x512 PUSH2 0x2c6
0x515 GAS
0x516 SUB
0x517 CALL
0x518 ISZERO
0x519 ISZERO
0x51a PUSH2 0x522
0x51d JUMPI
---
0x511: JUMPDEST 
0x512: V481 = 0x2c6
0x515: V482 = GAS
0x516: V483 = SUB V482 0x2c6
0x517: V484 = CALL V483 V397 0x0 V473 V474 V473 0x20
0x518: V485 = ISZERO V484
0x519: V486 = ISZERO V485
0x51a: V487 = 0x522
0x51d: JUMPI 0x522 V486
---
Entry stack: [V12, 0x2a8, V397, 0x77757fc, V470, 0x20, V473, V474, V473, 0x0, V397]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x2a8, V397, 0x77757fc, V470]

================================

Block 0x51e
[0x51e:0x521]
---
Predecessors: [0x511]
Successors: []
---
0x51e PUSH1 0x0
0x520 DUP1
0x521 REVERT
---
0x51e: V488 = 0x0
0x521: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a8, V397, 0x77757fc, V470]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V397, 0x77757fc, V470]

================================

Block 0x522
[0x522:0x52c]
---
Predecessors: [0x511]
Successors: [0x52d]
---
0x522 JUMPDEST
0x523 POP
0x524 POP
0x525 POP
0x526 PUSH1 0x40
0x528 MLOAD
0x529 DUP1
0x52a MLOAD
0x52b POP
0x52c POP
---
0x522: JUMPDEST 
0x526: V489 = 0x40
0x528: V490 = M[0x40]
0x52a: V491 = M[V490]
---
Entry stack: [V12, 0x2a8, V397, 0x77757fc, V470]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x2a8]

================================

Block 0x52d
[0x52d:0x52d]
---
Predecessors: [0x522, 0x5d1]
Successors: [0x52e]
---
0x52d JUMPDEST
---
0x52d: JUMPDEST 
---
Entry stack: [V12, 0x2a8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8]

================================

Block 0x52e
[0x52e:0x52f]
---
Predecessors: [0x52d]
Successors: [0x2a8]
---
0x52e JUMPDEST
0x52f JUMP
---
0x52e: JUMPDEST 
0x52f: JUMP 0x2a8
---
Entry stack: [V12, 0x2a8]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x530
[0x530:0x535]
---
Predecessors: [0x2ca]
Successors: [0x2d2]
---
0x530 JUMPDEST
0x531 PUSH1 0x2
0x533 SLOAD
0x534 DUP2
0x535 JUMP
---
0x530: JUMPDEST 
0x531: V492 = 0x2
0x533: V493 = S[0x2]
0x535: JUMP 0x2d2
---
Entry stack: [V12, 0x2d2]
Stack pops: 1
Stack additions: [S0, V493]
Exit stack: [V12, 0x2d2, V493]

================================

Block 0x536
[0x536:0x53b]
---
Predecessors: [0x2ef]
Successors: [0x2d2]
---
0x536 JUMPDEST
0x537 PUSH1 0x0
0x539 SLOAD
0x53a DUP2
0x53b JUMP
---
0x536: JUMPDEST 
0x537: V494 = 0x0
0x539: V495 = S[0x0]
0x53b: JUMP 0x2d2
---
Entry stack: [V12, 0x2d2]
Stack pops: 1
Stack additions: [S0, V495]
Exit stack: [V12, 0x2d2, V495]

================================

Block 0x53c
[0x53c:0x54a]
---
Predecessors: [0x314]
Successors: [0x31c]
---
0x53c JUMPDEST
0x53d PUSH1 0x4
0x53f SLOAD
0x540 PUSH1 0x1
0x542 PUSH1 0xa0
0x544 PUSH1 0x2
0x546 EXP
0x547 SUB
0x548 AND
0x549 DUP2
0x54a JUMP
---
0x53c: JUMPDEST 
0x53d: V496 = 0x4
0x53f: V497 = S[0x4]
0x540: V498 = 0x1
0x542: V499 = 0xa0
0x544: V500 = 0x2
0x546: V501 = EXP 0x2 0xa0
0x547: V502 = SUB 0x10000000000000000000000000000000000000000 0x1
0x548: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x54a: JUMP 0x31c
---
Entry stack: [V12, 0x31c]
Stack pops: 1
Stack additions: [S0, V503]
Exit stack: [V12, 0x31c, V503]

================================

Block 0x54b
[0x54b:0x557]
---
Predecessors: [0x343]
Successors: [0x2d2]
---
0x54b JUMPDEST
0x54c PUSH9 0x5c283d410394100000
0x556 DUP2
0x557 JUMP
---
0x54b: JUMPDEST 
0x54c: V504 = 0x5c283d410394100000
0x557: JUMP 0x2d2
---
Entry stack: [V12, 0x2d2]
Stack pops: 1
Stack additions: [S0, 0x5c283d410394100000]
Exit stack: [V12, 0x2d2, 0x5c283d410394100000]

================================

Block 0x558
[0x558:0x55d]
---
Predecessors: [0x368]
Successors: [0x2d2]
---
0x558 JUMPDEST
0x559 PUSH1 0x1
0x55b SLOAD
0x55c DUP2
0x55d JUMP
---
0x558: JUMPDEST 
0x559: V505 = 0x1
0x55b: V506 = S[0x1]
0x55d: JUMP 0x2d2
---
Entry stack: [V12, 0x2d2]
Stack pops: 1
Stack additions: [S0, V506]
Exit stack: [V12, 0x2d2, V506]

================================

Block 0x55e
[0x55e:0x56d]
---
Predecessors: [0x3b2]
Successors: [0x3ba]
---
0x55e JUMPDEST
0x55f PUSH1 0x4
0x561 SLOAD
0x562 PUSH1 0xa8
0x564 PUSH1 0x2
0x566 EXP
0x567 SWAP1
0x568 DIV
0x569 PUSH1 0xff
0x56b AND
0x56c DUP2
0x56d JUMP
---
0x55e: JUMPDEST 
0x55f: V507 = 0x4
0x561: V508 = S[0x4]
0x562: V509 = 0xa8
0x564: V510 = 0x2
0x566: V511 = EXP 0x2 0xa8
0x568: V512 = DIV V508 0x1000000000000000000000000000000000000000000
0x569: V513 = 0xff
0x56b: V514 = AND 0xff V512
0x56d: JUMP 0x3ba
---
Entry stack: [V12, 0x3ba]
Stack pops: 1
Stack additions: [S0, V514]
Exit stack: [V12, 0x3ba, V514]

================================

Block 0x56e
[0x56e:0x581]
---
Predecessors: [0x3d9]
Successors: [0x582, 0x595]
---
0x56e JUMPDEST
0x56f PUSH1 0x4
0x571 SLOAD
0x572 PUSH1 0xa8
0x574 PUSH1 0x2
0x576 EXP
0x577 SWAP1
0x578 DIV
0x579 PUSH1 0xff
0x57b AND
0x57c DUP1
0x57d ISZERO
0x57e PUSH2 0x595
0x581 JUMPI
---
0x56e: JUMPDEST 
0x56f: V515 = 0x4
0x571: V516 = S[0x4]
0x572: V517 = 0xa8
0x574: V518 = 0x2
0x576: V519 = EXP 0x2 0xa8
0x578: V520 = DIV V516 0x1000000000000000000000000000000000000000000
0x579: V521 = 0xff
0x57b: V522 = AND 0xff V520
0x57d: V523 = ISZERO V522
0x57e: V524 = 0x595
0x581: JUMPI 0x595 V523
---
Entry stack: [V12, 0x2a8]
Stack pops: 0
Stack additions: [V522]
Exit stack: [V12, 0x2a8, V522]

================================

Block 0x582
[0x582:0x594]
---
Predecessors: [0x56e]
Successors: [0x595]
---
0x582 POP
0x583 PUSH1 0x5
0x585 SLOAD
0x586 CALLER
0x587 PUSH1 0x1
0x589 PUSH1 0xa0
0x58b PUSH1 0x2
0x58d EXP
0x58e SUB
0x58f SWAP1
0x590 DUP2
0x591 AND
0x592 SWAP2
0x593 AND
0x594 EQ
---
0x583: V525 = 0x5
0x585: V526 = S[0x5]
0x586: V527 = CALLER
0x587: V528 = 0x1
0x589: V529 = 0xa0
0x58b: V530 = 0x2
0x58d: V531 = EXP 0x2 0xa0
0x58e: V532 = SUB 0x10000000000000000000000000000000000000000 0x1
0x591: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff V527
0x593: V534 = AND V526 0xffffffffffffffffffffffffffffffffffffffff
0x594: V535 = EQ V534 V533
---
Entry stack: [V12, 0x2a8, V522]
Stack pops: 1
Stack additions: [V535]
Exit stack: [V12, 0x2a8, V535]

================================

Block 0x595
[0x595:0x59b]
---
Predecessors: [0x56e, 0x582]
Successors: [0x59c, 0x59d]
---
0x595 JUMPDEST
0x596 ISZERO
0x597 ISZERO
0x598 PUSH2 0x59d
0x59b JUMPI
---
0x595: JUMPDEST 
0x596: V536 = ISZERO S0
0x597: V537 = ISZERO V536
0x598: V538 = 0x59d
0x59b: JUMPI 0x59d V537
---
Entry stack: [V12, 0x2a8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2a8]

================================

Block 0x59c
[0x59c:0x59c]
---
Predecessors: [0x595]
Successors: []
---
0x59c INVALID
---
0x59c: INVALID 
---
Entry stack: [V12, 0x2a8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8]

================================

Block 0x59d
[0x59d:0x5d0]
---
Predecessors: [0x595]
Successors: [0x5d1, 0x628]
---
0x59d JUMPDEST
0x59e PUSH1 0x5
0x5a0 SLOAD
0x5a1 PUSH1 0x3
0x5a3 SLOAD
0x5a4 PUSH1 0x1
0x5a6 PUSH1 0xa0
0x5a8 PUSH1 0x2
0x5aa EXP
0x5ab SUB
0x5ac SWAP1
0x5ad SWAP2
0x5ae AND
0x5af SWAP1
0x5b0 DUP1
0x5b1 ISZERO
0x5b2 PUSH2 0x8fc
0x5b5 MUL
0x5b6 SWAP1
0x5b7 PUSH1 0x40
0x5b9 MLOAD
0x5ba PUSH1 0x0
0x5bc PUSH1 0x40
0x5be MLOAD
0x5bf DUP1
0x5c0 DUP4
0x5c1 SUB
0x5c2 DUP2
0x5c3 DUP6
0x5c4 DUP9
0x5c5 DUP9
0x5c6 CALL
0x5c7 SWAP4
0x5c8 POP
0x5c9 POP
0x5ca POP
0x5cb POP
0x5cc ISZERO
0x5cd PUSH2 0x628
0x5d0 JUMPI
---
0x59d: JUMPDEST 
0x59e: V539 = 0x5
0x5a0: V540 = S[0x5]
0x5a1: V541 = 0x3
0x5a3: V542 = S[0x3]
0x5a4: V543 = 0x1
0x5a6: V544 = 0xa0
0x5a8: V545 = 0x2
0x5aa: V546 = EXP 0x2 0xa0
0x5ab: V547 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ae: V548 = AND V540 0xffffffffffffffffffffffffffffffffffffffff
0x5b1: V549 = ISZERO V542
0x5b2: V550 = 0x8fc
0x5b5: V551 = MUL 0x8fc V549
0x5b7: V552 = 0x40
0x5b9: V553 = M[0x40]
0x5ba: V554 = 0x0
0x5bc: V555 = 0x40
0x5be: V556 = M[0x40]
0x5c1: V557 = SUB V553 V556
0x5c6: V558 = CALL V551 V548 V542 V556 V557 V556 0x0
0x5cc: V559 = ISZERO V558
0x5cd: V560 = 0x628
0x5d0: JUMPI 0x628 V559
---
Entry stack: [V12, 0x2a8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8]

================================

Block 0x5d1
[0x5d1:0x627]
---
Predecessors: [0x59d]
Successors: [0x52d]
---
0x5d1 PUSH1 0x5
0x5d3 SLOAD
0x5d4 PUSH1 0x3
0x5d6 SLOAD
0x5d7 PUSH32 0x97c35397cb6acebd9df368c206404479fc4c80dd6034d1b28943aaf582631870
0x5f8 SWAP2
0x5f9 PUSH1 0x1
0x5fb PUSH1 0xa0
0x5fd PUSH1 0x2
0x5ff EXP
0x600 SUB
0x601 AND
0x602 SWAP1
0x603 PUSH1 0x40
0x605 MLOAD
0x606 PUSH1 0x1
0x608 PUSH1 0xa0
0x60a PUSH1 0x2
0x60c EXP
0x60d SUB
0x60e SWAP1
0x60f SWAP3
0x610 AND
0x611 DUP3
0x612 MSTORE
0x613 PUSH1 0x20
0x615 DUP3
0x616 ADD
0x617 MSTORE
0x618 PUSH1 0x40
0x61a SWAP1
0x61b DUP2
0x61c ADD
0x61d SWAP1
0x61e MLOAD
0x61f DUP1
0x620 SWAP2
0x621 SUB
0x622 SWAP1
0x623 LOG1
0x624 PUSH2 0x52d
0x627 JUMP
---
0x5d1: V561 = 0x5
0x5d3: V562 = S[0x5]
0x5d4: V563 = 0x3
0x5d6: V564 = S[0x3]
0x5d7: V565 = 0x97c35397cb6acebd9df368c206404479fc4c80dd6034d1b28943aaf582631870
0x5f9: V566 = 0x1
0x5fb: V567 = 0xa0
0x5fd: V568 = 0x2
0x5ff: V569 = EXP 0x2 0xa0
0x600: V570 = SUB 0x10000000000000000000000000000000000000000 0x1
0x601: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0x603: V572 = 0x40
0x605: V573 = M[0x40]
0x606: V574 = 0x1
0x608: V575 = 0xa0
0x60a: V576 = 0x2
0x60c: V577 = EXP 0x2 0xa0
0x60d: V578 = SUB 0x10000000000000000000000000000000000000000 0x1
0x610: V579 = AND V571 0xffffffffffffffffffffffffffffffffffffffff
0x612: M[V573] = V579
0x613: V580 = 0x20
0x616: V581 = ADD V573 0x20
0x617: M[V581] = V564
0x618: V582 = 0x40
0x61c: V583 = ADD 0x40 V573
0x61e: V584 = M[0x40]
0x621: V585 = SUB V583 V584
0x623: LOG V584 V585 0x97c35397cb6acebd9df368c206404479fc4c80dd6034d1b28943aaf582631870
0x624: V586 = 0x52d
0x627: JUMP 0x52d
---
Entry stack: [V12, 0x2a8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8]

================================

Block 0x628
[0x628:0x647]
---
Predecessors: [0x59d]
Successors: [0x648]
---
0x628 JUMPDEST
0x629 PUSH1 0x4
0x62b DUP1
0x62c SLOAD
0x62d PUSH22 0xff000000000000000000000000000000000000000000
0x644 NOT
0x645 AND
0x646 SWAP1
0x647 SSTORE
---
0x628: JUMPDEST 
0x629: V587 = 0x4
0x62c: V588 = S[0x4]
0x62d: V589 = 0xff000000000000000000000000000000000000000000
0x644: V590 = NOT 0xff000000000000000000000000000000000000000000
0x645: V591 = AND 0xffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff V588
0x647: S[0x4] = V591
---
Entry stack: [V12, 0x2a8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8]

================================

Block 0x648
[0x648:0x648]
---
Predecessors: [0x628]
Successors: [0x649]
---
0x648 JUMPDEST
---
0x648: JUMPDEST 
---
Entry stack: [V12, 0x2a8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8]

================================

Block 0x649
[0x649:0x64a]
---
Predecessors: [0x648]
Successors: [0x2a8]
---
0x649 JUMPDEST
0x64a JUMP
---
0x649: JUMPDEST 
0x64a: JUMP 0x2a8
---
Entry stack: [V12, 0x2a8]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x64b
[0x64b:0x657]
---
Predecessors: [0x3ee]
Successors: [0x2a5, 0x658]
---
0x64b JUMPDEST
0x64c PUSH1 0x2
0x64e SLOAD
0x64f PUSH1 0x0
0x651 SWAP1
0x652 TIMESTAMP
0x653 LT
0x654 PUSH2 0x2a5
0x657 JUMPI
---
0x64b: JUMPDEST 
0x64c: V592 = 0x2
0x64e: V593 = S[0x2]
0x64f: V594 = 0x0
0x652: V595 = TIMESTAMP
0x653: V596 = LT V595 V593
0x654: V597 = 0x2a5
0x657: JUMPI 0x2a5 V596
---
Entry stack: [V12, 0x2a8]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x2a8, 0x0]

================================

Block 0x658
[0x658:0x66a]
---
Predecessors: [0x64b]
Successors: [0x2a5, 0x66b]
---
0x658 PUSH1 0x4
0x65a SLOAD
0x65b PUSH1 0xa8
0x65d PUSH1 0x2
0x65f EXP
0x660 SWAP1
0x661 DIV
0x662 PUSH1 0xff
0x664 AND
0x665 ISZERO
0x666 ISZERO
0x667 PUSH2 0x2a5
0x66a JUMPI
---
0x658: V598 = 0x4
0x65a: V599 = S[0x4]
0x65b: V600 = 0xa8
0x65d: V601 = 0x2
0x65f: V602 = EXP 0x2 0xa8
0x661: V603 = DIV V599 0x1000000000000000000000000000000000000000000
0x662: V604 = 0xff
0x664: V605 = AND 0xff V603
0x665: V606 = ISZERO V605
0x666: V607 = ISZERO V606
0x667: V608 = 0x2a5
0x66a: JUMPI 0x2a5 V607
---
Entry stack: [V12, 0x2a8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, 0x0]

================================

Block 0x66b
[0x66b:0x691]
---
Predecessors: [0x658]
Successors: [0x2a5, 0x692]
---
0x66b POP
0x66c PUSH1 0x1
0x66e PUSH1 0xa0
0x670 PUSH1 0x2
0x672 EXP
0x673 SUB
0x674 CALLER
0x675 AND
0x676 PUSH1 0x0
0x678 SWAP1
0x679 DUP2
0x67a MSTORE
0x67b PUSH1 0xa
0x67d PUSH1 0x20
0x67f MSTORE
0x680 PUSH1 0x40
0x682 DUP2
0x683 SHA3
0x684 DUP1
0x685 SLOAD
0x686 SWAP1
0x687 DUP3
0x688 SWAP1
0x689 SSTORE
0x68a SWAP1
0x68b DUP2
0x68c GT
0x68d ISZERO
0x68e PUSH2 0x2a5
0x691 JUMPI
---
0x66c: V609 = 0x1
0x66e: V610 = 0xa0
0x670: V611 = 0x2
0x672: V612 = EXP 0x2 0xa0
0x673: V613 = SUB 0x10000000000000000000000000000000000000000 0x1
0x674: V614 = CALLER
0x675: V615 = AND V614 0xffffffffffffffffffffffffffffffffffffffff
0x676: V616 = 0x0
0x67a: M[0x0] = V615
0x67b: V617 = 0xa
0x67d: V618 = 0x20
0x67f: M[0x20] = 0xa
0x680: V619 = 0x40
0x683: V620 = SHA3 0x0 0x40
0x685: V621 = S[V620]
0x689: S[V620] = 0x0
0x68c: V622 = GT V621 0x0
0x68d: V623 = ISZERO V622
0x68e: V624 = 0x2a5
0x691: JUMPI 0x2a5 V623
---
Entry stack: [V12, 0x2a8, 0x0]
Stack pops: 1
Stack additions: [V621]
Exit stack: [V12, 0x2a8, V621]

================================

Block 0x692
[0x692:0x6bc]
---
Predecessors: [0x66b]
Successors: [0x6bd, 0x705]
---
0x692 PUSH1 0x1
0x694 PUSH1 0xa0
0x696 PUSH1 0x2
0x698 EXP
0x699 SUB
0x69a CALLER
0x69b AND
0x69c DUP2
0x69d ISZERO
0x69e PUSH2 0x8fc
0x6a1 MUL
0x6a2 DUP3
0x6a3 PUSH1 0x40
0x6a5 MLOAD
0x6a6 PUSH1 0x0
0x6a8 PUSH1 0x40
0x6aa MLOAD
0x6ab DUP1
0x6ac DUP4
0x6ad SUB
0x6ae DUP2
0x6af DUP6
0x6b0 DUP9
0x6b1 DUP9
0x6b2 CALL
0x6b3 SWAP4
0x6b4 POP
0x6b5 POP
0x6b6 POP
0x6b7 POP
0x6b8 ISZERO
0x6b9 PUSH2 0x705
0x6bc JUMPI
---
0x692: V625 = 0x1
0x694: V626 = 0xa0
0x696: V627 = 0x2
0x698: V628 = EXP 0x2 0xa0
0x699: V629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69a: V630 = CALLER
0x69b: V631 = AND V630 0xffffffffffffffffffffffffffffffffffffffff
0x69d: V632 = ISZERO V621
0x69e: V633 = 0x8fc
0x6a1: V634 = MUL 0x8fc V632
0x6a3: V635 = 0x40
0x6a5: V636 = M[0x40]
0x6a6: V637 = 0x0
0x6a8: V638 = 0x40
0x6aa: V639 = M[0x40]
0x6ad: V640 = SUB V636 V639
0x6b2: V641 = CALL V634 V631 V621 V639 V640 V639 0x0
0x6b8: V642 = ISZERO V641
0x6b9: V643 = 0x705
0x6bc: JUMPI 0x705 V642
---
Entry stack: [V12, 0x2a8, V621]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2a8, V621]

================================

Block 0x6bd
[0x6bd:0x704]
---
Predecessors: [0x692]
Successors: [0x2a5]
---
0x6bd PUSH32 0x97c35397cb6acebd9df368c206404479fc4c80dd6034d1b28943aaf582631870
0x6de CALLER
0x6df DUP3
0x6e0 PUSH1 0x40
0x6e2 MLOAD
0x6e3 PUSH1 0x1
0x6e5 PUSH1 0xa0
0x6e7 PUSH1 0x2
0x6e9 EXP
0x6ea SUB
0x6eb SWAP1
0x6ec SWAP3
0x6ed AND
0x6ee DUP3
0x6ef MSTORE
0x6f0 PUSH1 0x20
0x6f2 DUP3
0x6f3 ADD
0x6f4 MSTORE
0x6f5 PUSH1 0x40
0x6f7 SWAP1
0x6f8 DUP2
0x6f9 ADD
0x6fa SWAP1
0x6fb MLOAD
0x6fc DUP1
0x6fd SWAP2
0x6fe SUB
0x6ff SWAP1
0x700 LOG1
0x701 PUSH2 0x2a5
0x704 JUMP
---
0x6bd: V644 = 0x97c35397cb6acebd9df368c206404479fc4c80dd6034d1b28943aaf582631870
0x6de: V645 = CALLER
0x6e0: V646 = 0x40
0x6e2: V647 = M[0x40]
0x6e3: V648 = 0x1
0x6e5: V649 = 0xa0
0x6e7: V650 = 0x2
0x6e9: V651 = EXP 0x2 0xa0
0x6ea: V652 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ed: V653 = AND V645 0xffffffffffffffffffffffffffffffffffffffff
0x6ef: M[V647] = V653
0x6f0: V654 = 0x20
0x6f3: V655 = ADD V647 0x20
0x6f4: M[V655] = V621
0x6f5: V656 = 0x40
0x6f9: V657 = ADD 0x40 V647
0x6fb: V658 = M[0x40]
0x6fe: V659 = SUB V657 V658
0x700: LOG V658 V659 0x97c35397cb6acebd9df368c206404479fc4c80dd6034d1b28943aaf582631870
0x701: V660 = 0x2a5
0x704: JUMP 0x2a5
---
Entry stack: [V12, 0x2a8, V621]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2a8, V621]

================================

Block 0x705
[0x705:0x720]
---
Predecessors: [0x692]
Successors: [0x721]
---
0x705 JUMPDEST
0x706 PUSH1 0x1
0x708 PUSH1 0xa0
0x70a PUSH1 0x2
0x70c EXP
0x70d SUB
0x70e CALLER
0x70f AND
0x710 PUSH1 0x0
0x712 SWAP1
0x713 DUP2
0x714 MSTORE
0x715 PUSH1 0xa
0x717 PUSH1 0x20
0x719 MSTORE
0x71a PUSH1 0x40
0x71c SWAP1
0x71d SHA3
0x71e DUP2
0x71f SWAP1
0x720 SSTORE
---
0x705: JUMPDEST 
0x706: V661 = 0x1
0x708: V662 = 0xa0
0x70a: V663 = 0x2
0x70c: V664 = EXP 0x2 0xa0
0x70d: V665 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70e: V666 = CALLER
0x70f: V667 = AND V666 0xffffffffffffffffffffffffffffffffffffffff
0x710: V668 = 0x0
0x714: M[0x0] = V667
0x715: V669 = 0xa
0x717: V670 = 0x20
0x719: M[0x20] = 0xa
0x71a: V671 = 0x40
0x71d: V672 = SHA3 0x0 0x40
0x720: S[V672] = V621
---
Entry stack: [V12, 0x2a8, V621]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2a8, V621]

================================

Block 0x721
[0x721:0x721]
---
Predecessors: [0x705]
Successors: [0x722]
---
0x721 JUMPDEST
---
0x721: JUMPDEST 
---
Entry stack: [V12, 0x2a8, V621]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V621]

================================

Block 0x722
[0x722:0x722]
---
Predecessors: [0x721]
Successors: [0x723]
---
0x722 JUMPDEST
---
0x722: JUMPDEST 
---
Entry stack: [V12, 0x2a8, V621]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V621]

================================

Block 0x723
[0x723:0x723]
---
Predecessors: [0x722]
Successors: [0x724]
---
0x723 JUMPDEST
---
0x723: JUMPDEST 
---
Entry stack: [V12, 0x2a8, V621]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V621]

================================

Block 0x724
[0x724:0x724]
---
Predecessors: [0x723]
Successors: [0x725]
---
0x724 JUMPDEST
---
0x724: JUMPDEST 
---
Entry stack: [V12, 0x2a8, V621]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V621]

================================

Block 0x725
[0x725:0x725]
---
Predecessors: [0x724]
Successors: [0x726]
---
0x725 JUMPDEST
---
0x725: JUMPDEST 
---
Entry stack: [V12, 0x2a8, V621]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a8, V621]

================================

Block 0x726
[0x726:0x728]
---
Predecessors: [0x725]
Successors: [0x2a8]
---
0x726 JUMPDEST
0x727 POP
0x728 JUMP
---
0x726: JUMPDEST 
0x728: JUMP 0x2a8
---
Entry stack: [V12, 0x2a8, V621]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x729
[0x729:0x75a]
---
Predecessors: []
Successors: []
---
0x729 STOP
0x72a LOG1
0x72b PUSH6 0x627a7a723058
0x732 SHA3
0x733 MISSING 0xd7
0x734 MSIZE
0x735 MISSING 0xcc
0x736 MISSING 0xf7
0x737 MISSING 0xe6
0x738 MISSING 0xe
0x739 CREATE2
0x73a MISSING 0xe
0x73b MISSING 0xac
0x73c MISSING 0x1e
0x73d PUSH3 0xbeee42
0x741 MISSING 0x2a
0x742 DUP2
0x743 DUP6
0x744 PUSH22 0xb333f27acc1e72c5d8d1895c556c0029
---
0x729: STOP 
0x72a: LOG S0 S1 S2
0x72b: V673 = 0x627a7a723058
0x732: V674 = SHA3 0x627a7a723058 S3
0x733: MISSING 0xd7
0x734: V675 = MSIZE
0x735: MISSING 0xcc
0x736: MISSING 0xf7
0x737: MISSING 0xe6
0x738: MISSING 0xe
0x739: V676 = CREATE2 S0 S1 S2 S3
0x73a: MISSING 0xe
0x73b: MISSING 0xac
0x73c: MISSING 0x1e
0x73d: V677 = 0xbeee42
0x741: MISSING 0x2a
0x744: V678 = 0xb333f27acc1e72c5d8d1895c556c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V674, V675, V676, 0xbeee42, 0xb333f27acc1e72c5d8d1895c556c0029, S4, S1, S0, S1, S2, S3, S4]
Exit stack: []

================================

Function 0:
Public function signature: 0xc1f679f
Entry block: 0x2aa
Exit block: 0x2a8
Body: 0x2a8, 0x2aa, 0x2b1, 0x2b5, 0x427, 0x43e, 0x43f, 0x449, 0x44a, 0x4a6, 0x4aa, 0x4b7, 0x4bb, 0x50d, 0x511, 0x51e, 0x522, 0x52d, 0x52e

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x2bf
Exit block: 0x2d2
Body: 0x2bf, 0x2c6, 0x2ca, 0x2d2, 0x530

Function 2:
Public function signature: 0x4260c779
Entry block: 0x2e4
Exit block: 0x2d2
Body: 0x2d2, 0x2e4, 0x2eb, 0x2ef, 0x536

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x309
Exit block: 0x31c
Body: 0x309, 0x310, 0x314, 0x31c, 0x53c

Function 4:
Public function signature: 0x801db9cc
Entry block: 0x338
Exit block: 0x2d2
Body: 0x2d2, 0x338, 0x33f, 0x343, 0x54b

Function 5:
Public function signature: 0x836e8180
Entry block: 0x35d
Exit block: 0x2d2
Body: 0x2d2, 0x35d, 0x364, 0x368, 0x558

Function 6:
Public function signature: 0x98d5fdca
Entry block: 0x382
Exit block: 0x389
Body: 0x2d2, 0x382, 0x389, 0x38d

Function 7:
Public function signature: 0xd424f628
Entry block: 0x3a7
Exit block: 0x3ba
Body: 0x3a7, 0x3ae, 0x3b2, 0x3ba, 0x55e

Function 8:
Public function signature: 0xeeb92294
Entry block: 0x3ce
Exit block: 0x2a8
Body: 0x2a8, 0x3ce, 0x3d5, 0x3d9, 0x52d, 0x52e, 0x56e, 0x582, 0x595, 0x59c, 0x59d, 0x5d1, 0x628, 0x648, 0x649

Function 9:
Public function signature: 0xfd6b7ef8
Entry block: 0x3e3
Exit block: 0x2a8
Body: 0x2a5, 0x2a8, 0x3e3, 0x3ea, 0x3ee, 0x64b, 0x658, 0x66b, 0x692, 0x6bd, 0x705, 0x721, 0x722, 0x723, 0x724, 0x725, 0x726

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x2a8
Body: 0x88, 0x8c, 0x9a, 0x9b, 0xaf, 0xba, 0xbb, 0x117, 0x11b, 0x128, 0x12c, 0x13f, 0x140, 0x1c1, 0x1c5, 0x1d2, 0x1d6, 0x1f4, 0x207, 0x22c, 0x22d, 0x2a5, 0x2a8

Function 11:
Private function
Entry block: 0x3f8
Exit block: 0x424
Body: 0x3f8, 0x403, 0x40b, 0x415, 0x41d, 0x422, 0x423, 0x424

