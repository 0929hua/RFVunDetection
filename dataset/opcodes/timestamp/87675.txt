Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x7337c993
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x7337c993
0x3c: V13 = EQ 0x7337c993 V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xe9]
---
0x41 DUP1
0x42 PUSH4 0xe2ca481c
0x47 EQ
0x48 PUSH2 0xe9
0x4b JUMPI
---
0x42: V15 = 0xe2ca481c
0x47: V16 = EQ 0xe2ca481c V11
0x48: V17 = 0xe9
0x4b: JUMPI 0xe9 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x204]
---
0x4c DUP1
0x4d PUSH4 0xeda1122c
0x52 EQ
0x53 PUSH2 0x204
0x56 JUMPI
---
0x4d: V18 = 0xeda1122c
0x52: V19 = EQ 0xeda1122c V11
0x53: V20 = 0x204
0x56: JUMPI 0x204 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x22b]
---
0x57 DUP1
0x58 PUSH4 0xf66c75e5
0x5d EQ
0x5e PUSH2 0x22b
0x61 JUMPI
---
0x58: V21 = 0xf66c75e5
0x5d: V22 = EQ 0xf66c75e5 V11
0x5e: V23 = 0x22b
0x61: JUMPI 0x22b V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0xe6]
---
Predecessors: [0xd]
Successors: [0x27c]
---
0x67 JUMPDEST
0x68 PUSH2 0xe7
0x6b PUSH1 0x4
0x6d DUP1
0x6e DUP1
0x6f CALLDATALOAD
0x70 SWAP1
0x71 PUSH1 0x20
0x73 ADD
0x74 SWAP1
0x75 SWAP2
0x76 SWAP1
0x77 DUP1
0x78 CALLDATALOAD
0x79 PUSH12 0xffffffffffffffffffffffff
0x86 NOT
0x87 AND
0x88 SWAP1
0x89 PUSH1 0x20
0x8b ADD
0x8c SWAP1
0x8d SWAP2
0x8e SWAP1
0x8f DUP1
0x90 CALLDATALOAD
0x91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6 AND
0xa7 SWAP1
0xa8 PUSH1 0x20
0xaa ADD
0xab SWAP1
0xac SWAP2
0xad SWAP1
0xae DUP1
0xaf CALLDATALOAD
0xb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5 AND
0xc6 SWAP1
0xc7 PUSH1 0x20
0xc9 ADD
0xca SWAP1
0xcb SWAP2
0xcc SWAP1
0xcd DUP1
0xce CALLDATALOAD
0xcf ISZERO
0xd0 ISZERO
0xd1 SWAP1
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 SWAP1
0xd6 SWAP2
0xd7 SWAP1
0xd8 DUP1
0xd9 CALLDATALOAD
0xda SWAP1
0xdb PUSH1 0x20
0xdd ADD
0xde SWAP1
0xdf SWAP2
0xe0 SWAP1
0xe1 POP
0xe2 POP
0xe3 PUSH2 0x27c
0xe6 JUMP
---
0x67: JUMPDEST 
0x68: V25 = 0xe7
0x6b: V26 = 0x4
0x6f: V27 = CALLDATALOAD 0x4
0x71: V28 = 0x20
0x73: V29 = ADD 0x20 0x4
0x78: V30 = CALLDATALOAD 0x24
0x79: V31 = 0xffffffffffffffffffffffff
0x86: V32 = NOT 0xffffffffffffffffffffffff
0x87: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V30
0x89: V34 = 0x20
0x8b: V35 = ADD 0x20 0x24
0x90: V36 = CALLDATALOAD 0x44
0x91: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xa8: V39 = 0x20
0xaa: V40 = ADD 0x20 0x44
0xaf: V41 = CALLDATALOAD 0x64
0xb0: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xc7: V44 = 0x20
0xc9: V45 = ADD 0x20 0x64
0xce: V46 = CALLDATALOAD 0x84
0xcf: V47 = ISZERO V46
0xd0: V48 = ISZERO V47
0xd2: V49 = 0x20
0xd4: V50 = ADD 0x20 0x84
0xd9: V51 = CALLDATALOAD 0xa4
0xdb: V52 = 0x20
0xdd: V53 = ADD 0x20 0xa4
0xe3: V54 = 0x27c
0xe6: JUMP 0x27c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe7, V27, V33, V38, V43, V48, V51]
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51]

================================

Block 0xe7
[0xe7:0xe8]
---
Predecessors: [0x57b]
Successors: []
---
0xe7 JUMPDEST
0xe8 STOP
---
0xe7: JUMPDEST 
0xe8: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe9
[0xe9:0xef]
---
Predecessors: [0x41]
Successors: [0xf0, 0xf4]
---
0xe9 JUMPDEST
0xea CALLVALUE
0xeb ISZERO
0xec PUSH2 0xf4
0xef JUMPI
---
0xe9: JUMPDEST 
0xea: V55 = CALLVALUE
0xeb: V56 = ISZERO V55
0xec: V57 = 0xf4
0xef: JUMPI 0xf4 V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf0
[0xf0:0xf3]
---
Predecessors: [0xe9]
Successors: []
---
0xf0 PUSH1 0x0
0xf2 DUP1
0xf3 REVERT
---
0xf0: V58 = 0x0
0xf3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf4
[0xf4:0x137]
---
Predecessors: [0xe9]
Successors: [0x74e]
---
0xf4 JUMPDEST
0xf5 PUSH2 0x138
0xf8 PUSH1 0x4
0xfa DUP1
0xfb DUP1
0xfc CALLDATALOAD
0xfd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x112 AND
0x113 SWAP1
0x114 PUSH1 0x20
0x116 ADD
0x117 SWAP1
0x118 SWAP2
0x119 SWAP1
0x11a DUP1
0x11b CALLDATALOAD
0x11c PUSH12 0xffffffffffffffffffffffff
0x129 NOT
0x12a AND
0x12b SWAP1
0x12c PUSH1 0x20
0x12e ADD
0x12f SWAP1
0x130 SWAP2
0x131 SWAP1
0x132 POP
0x133 POP
0x134 PUSH2 0x74e
0x137 JUMP
---
0xf4: JUMPDEST 
0xf5: V59 = 0x138
0xf8: V60 = 0x4
0xfc: V61 = CALLDATALOAD 0x4
0xfd: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x112: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x114: V64 = 0x20
0x116: V65 = ADD 0x20 0x4
0x11b: V66 = CALLDATALOAD 0x24
0x11c: V67 = 0xffffffffffffffffffffffff
0x129: V68 = NOT 0xffffffffffffffffffffffff
0x12a: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V66
0x12c: V70 = 0x20
0x12e: V71 = ADD 0x20 0x24
0x134: V72 = 0x74e
0x137: JUMP 0x74e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x138, V63, V69]
Exit stack: [V11, 0x138, V63, V69]

================================

Block 0x138
[0x138:0x203]
---
Predecessors: [0x74e]
Successors: []
---
0x138 JUMPDEST
0x139 PUSH1 0x40
0x13b MLOAD
0x13c DUP1
0x13d DUP9
0x13e DUP2
0x13f MSTORE
0x140 PUSH1 0x20
0x142 ADD
0x143 DUP8
0x144 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x159 AND
0x15a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16f AND
0x170 DUP2
0x171 MSTORE
0x172 PUSH1 0x20
0x174 ADD
0x175 DUP7
0x176 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18b AND
0x18c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a1 AND
0x1a2 DUP2
0x1a3 MSTORE
0x1a4 PUSH1 0x20
0x1a6 ADD
0x1a7 DUP6
0x1a8 DUP2
0x1a9 MSTORE
0x1aa PUSH1 0x20
0x1ac ADD
0x1ad DUP5
0x1ae ISZERO
0x1af ISZERO
0x1b0 ISZERO
0x1b1 ISZERO
0x1b2 DUP2
0x1b3 MSTORE
0x1b4 PUSH1 0x20
0x1b6 ADD
0x1b7 DUP4
0x1b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cd AND
0x1ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e3 AND
0x1e4 DUP2
0x1e5 MSTORE
0x1e6 PUSH1 0x20
0x1e8 ADD
0x1e9 DUP3
0x1ea ISZERO
0x1eb ISZERO
0x1ec ISZERO
0x1ed ISZERO
0x1ee DUP2
0x1ef MSTORE
0x1f0 PUSH1 0x20
0x1f2 ADD
0x1f3 SWAP8
0x1f4 POP
0x1f5 POP
0x1f6 POP
0x1f7 POP
0x1f8 POP
0x1f9 POP
0x1fa POP
0x1fb POP
0x1fc PUSH1 0x40
0x1fe MLOAD
0x1ff DUP1
0x200 SWAP2
0x201 SUB
0x202 SWAP1
0x203 RETURN
---
0x138: JUMPDEST 
0x139: V73 = 0x40
0x13b: V74 = M[0x40]
0x13f: M[V74] = V469
0x140: V75 = 0x20
0x142: V76 = ADD 0x20 V74
0x144: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x159: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V478
0x15a: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x16f: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x171: M[V76] = V80
0x172: V81 = 0x20
0x174: V82 = ADD 0x20 V76
0x176: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x18b: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x18c: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a1: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x1a3: M[V82] = V86
0x1a4: V87 = 0x20
0x1a6: V88 = ADD 0x20 V82
0x1a9: M[V88] = V490
0x1aa: V89 = 0x20
0x1ac: V90 = ADD 0x20 V88
0x1ae: V91 = ISZERO V499
0x1af: V92 = ISZERO V91
0x1b0: V93 = ISZERO V92
0x1b1: V94 = ISZERO V93
0x1b3: M[V90] = V94
0x1b4: V95 = 0x20
0x1b6: V96 = ADD 0x20 V90
0x1b8: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cd: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x1ce: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1e5: M[V96] = V100
0x1e6: V101 = 0x20
0x1e8: V102 = ADD 0x20 V96
0x1ea: V103 = ISZERO V517
0x1eb: V104 = ISZERO V103
0x1ec: V105 = ISZERO V104
0x1ed: V106 = ISZERO V105
0x1ef: M[V102] = V106
0x1f0: V107 = 0x20
0x1f2: V108 = ADD 0x20 V102
0x1fc: V109 = 0x40
0x1fe: V110 = M[0x40]
0x201: V111 = SUB V108 V110
0x203: RETURN V110 V111
---
Entry stack: [V11, 0x138, V469, V478, V487, V490, V499, V508, V517]
Stack pops: 7
Stack additions: []
Exit stack: [V11, 0x138]

================================

Block 0x204
[0x204:0x20a]
---
Predecessors: [0x4c]
Successors: [0x20b, 0x20f]
---
0x204 JUMPDEST
0x205 CALLVALUE
0x206 ISZERO
0x207 PUSH2 0x20f
0x20a JUMPI
---
0x204: JUMPDEST 
0x205: V112 = CALLVALUE
0x206: V113 = ISZERO V112
0x207: V114 = 0x20f
0x20a: JUMPI 0x20f V113
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x20b
[0x20b:0x20e]
---
Predecessors: [0x204]
Successors: []
---
0x20b PUSH1 0x0
0x20d DUP1
0x20e REVERT
---
0x20b: V115 = 0x0
0x20e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x20f
[0x20f:0x228]
---
Predecessors: [0x204]
Successors: [0x817]
---
0x20f JUMPDEST
0x210 PUSH2 0x229
0x213 PUSH1 0x4
0x215 DUP1
0x216 DUP1
0x217 CALLDATALOAD
0x218 PUSH1 0x0
0x21a NOT
0x21b AND
0x21c SWAP1
0x21d PUSH1 0x20
0x21f ADD
0x220 SWAP1
0x221 SWAP2
0x222 SWAP1
0x223 POP
0x224 POP
0x225 PUSH2 0x817
0x228 JUMP
---
0x20f: JUMPDEST 
0x210: V116 = 0x229
0x213: V117 = 0x4
0x217: V118 = CALLDATALOAD 0x4
0x218: V119 = 0x0
0x21a: V120 = NOT 0x0
0x21b: V121 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V118
0x21d: V122 = 0x20
0x21f: V123 = ADD 0x20 0x4
0x225: V124 = 0x817
0x228: JUMP 0x817
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x229, V121]
Exit stack: [V11, 0x229, V121]

================================

Block 0x229
[0x229:0x22a]
---
Predecessors: [0xa7f]
Successors: []
---
0x229 JUMPDEST
0x22a STOP
---
0x229: JUMPDEST 
0x22a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x22b
[0x22b:0x231]
---
Predecessors: [0x57]
Successors: [0x232, 0x236]
---
0x22b JUMPDEST
0x22c CALLVALUE
0x22d ISZERO
0x22e PUSH2 0x236
0x231 JUMPI
---
0x22b: JUMPDEST 
0x22c: V125 = CALLVALUE
0x22d: V126 = ISZERO V125
0x22e: V127 = 0x236
0x231: JUMPI 0x236 V126
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x232
[0x232:0x235]
---
Predecessors: [0x22b]
Successors: []
---
0x232 PUSH1 0x0
0x234 DUP1
0x235 REVERT
---
0x232: V128 = 0x0
0x235: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x236
[0x236:0x279]
---
Predecessors: [0x22b]
Successors: [0xa85]
---
0x236 JUMPDEST
0x237 PUSH2 0x27a
0x23a PUSH1 0x4
0x23c DUP1
0x23d DUP1
0x23e CALLDATALOAD
0x23f PUSH12 0xffffffffffffffffffffffff
0x24c NOT
0x24d AND
0x24e SWAP1
0x24f PUSH1 0x20
0x251 ADD
0x252 SWAP1
0x253 SWAP2
0x254 SWAP1
0x255 DUP1
0x256 CALLDATALOAD
0x257 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26c AND
0x26d SWAP1
0x26e PUSH1 0x20
0x270 ADD
0x271 SWAP1
0x272 SWAP2
0x273 SWAP1
0x274 POP
0x275 POP
0x276 PUSH2 0xa85
0x279 JUMP
---
0x236: JUMPDEST 
0x237: V129 = 0x27a
0x23a: V130 = 0x4
0x23e: V131 = CALLDATALOAD 0x4
0x23f: V132 = 0xffffffffffffffffffffffff
0x24c: V133 = NOT 0xffffffffffffffffffffffff
0x24d: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V131
0x24f: V135 = 0x20
0x251: V136 = ADD 0x20 0x4
0x256: V137 = CALLDATALOAD 0x24
0x257: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x26e: V140 = 0x20
0x270: V141 = ADD 0x20 0x24
0x276: V142 = 0xa85
0x279: JUMP 0xa85
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x27a, V134, V139]
Exit stack: [V11, 0x27a, V134, V139]

================================

Block 0x27a
[0x27a:0x27b]
---
Predecessors: [0xcf4]
Successors: []
---
0x27a JUMPDEST
0x27b STOP
---
0x27a: JUMPDEST 
0x27b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x27c
[0x27c:0x30d]
---
Predecessors: [0x67]
Successors: [0x30e, 0x312]
---
0x27c JUMPDEST
0x27d PUSH1 0x0
0x27f DUP1
0x280 PUSH1 0x0
0x282 DUP1
0x283 DUP8
0x284 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x299 AND
0x29a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2af AND
0x2b0 DUP2
0x2b1 MSTORE
0x2b2 PUSH1 0x20
0x2b4 ADD
0x2b5 SWAP1
0x2b6 DUP2
0x2b7 MSTORE
0x2b8 PUSH1 0x20
0x2ba ADD
0x2bb PUSH1 0x0
0x2bd SHA3
0x2be PUSH1 0x0
0x2c0 DUP9
0x2c1 PUSH12 0xffffffffffffffffffffffff
0x2ce NOT
0x2cf AND
0x2d0 PUSH12 0xffffffffffffffffffffffff
0x2dd NOT
0x2de AND
0x2df DUP2
0x2e0 MSTORE
0x2e1 PUSH1 0x20
0x2e3 ADD
0x2e4 SWAP1
0x2e5 DUP2
0x2e6 MSTORE
0x2e7 PUSH1 0x20
0x2e9 ADD
0x2ea PUSH1 0x0
0x2ec SHA3
0x2ed SWAP2
0x2ee POP
0x2ef PUSH1 0x0
0x2f1 ISZERO
0x2f2 ISZERO
0x2f3 DUP3
0x2f4 PUSH1 0x4
0x2f6 ADD
0x2f7 PUSH1 0x15
0x2f9 SWAP1
0x2fa SLOAD
0x2fb SWAP1
0x2fc PUSH2 0x100
0x2ff EXP
0x300 SWAP1
0x301 DIV
0x302 PUSH1 0xff
0x304 AND
0x305 ISZERO
0x306 ISZERO
0x307 EQ
0x308 ISZERO
0x309 ISZERO
0x30a PUSH2 0x312
0x30d JUMPI
---
0x27c: JUMPDEST 
0x27d: V143 = 0x0
0x280: V144 = 0x0
0x284: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x299: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x29a: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x2af: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x2b1: M[0x0] = V148
0x2b2: V149 = 0x20
0x2b4: V150 = ADD 0x20 0x0
0x2b7: M[0x20] = 0x0
0x2b8: V151 = 0x20
0x2ba: V152 = ADD 0x20 0x20
0x2bb: V153 = 0x0
0x2bd: V154 = SHA3 0x0 0x40
0x2be: V155 = 0x0
0x2c1: V156 = 0xffffffffffffffffffffffff
0x2ce: V157 = NOT 0xffffffffffffffffffffffff
0x2cf: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V33
0x2d0: V159 = 0xffffffffffffffffffffffff
0x2dd: V160 = NOT 0xffffffffffffffffffffffff
0x2de: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V158
0x2e0: M[0x0] = V161
0x2e1: V162 = 0x20
0x2e3: V163 = ADD 0x20 0x0
0x2e6: M[0x20] = V154
0x2e7: V164 = 0x20
0x2e9: V165 = ADD 0x20 0x20
0x2ea: V166 = 0x0
0x2ec: V167 = SHA3 0x0 0x40
0x2ef: V168 = 0x0
0x2f1: V169 = ISZERO 0x0
0x2f2: V170 = ISZERO 0x1
0x2f4: V171 = 0x4
0x2f6: V172 = ADD 0x4 V167
0x2f7: V173 = 0x15
0x2fa: V174 = S[V172]
0x2fc: V175 = 0x100
0x2ff: V176 = EXP 0x100 0x15
0x301: V177 = DIV V174 0x1000000000000000000000000000000000000000000
0x302: V178 = 0xff
0x304: V179 = AND 0xff V177
0x305: V180 = ISZERO V179
0x306: V181 = ISZERO V180
0x307: V182 = EQ V181 0x0
0x308: V183 = ISZERO V182
0x309: V184 = ISZERO V183
0x30a: V185 = 0x312
0x30d: JUMPI 0x312 V184
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V167, 0x0]
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, 0x0]

================================

Block 0x30e
[0x30e:0x311]
---
Predecessors: [0x27c]
Successors: []
---
0x30e PUSH1 0x0
0x310 DUP1
0x311 REVERT
---
0x30e: V186 = 0x0
0x311: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, 0x0]

================================

Block 0x312
[0x312:0x31b]
---
Predecessors: [0x27c]
Successors: [0x31c, 0x320]
---
0x312 JUMPDEST
0x313 DUP8
0x314 TIMESTAMP
0x315 LT
0x316 ISZERO
0x317 ISZERO
0x318 PUSH2 0x320
0x31b JUMPI
---
0x312: JUMPDEST 
0x314: V187 = TIMESTAMP
0x315: V188 = LT V187 V27
0x316: V189 = ISZERO V188
0x317: V190 = ISZERO V189
0x318: V191 = 0x320
0x31b: JUMPI 0x320 V190
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, 0x0]

================================

Block 0x31c
[0x31c:0x31f]
---
Predecessors: [0x312]
Successors: []
---
0x31c PUSH1 0x0
0x31e DUP1
0x31f REVERT
---
0x31c: V192 = 0x0
0x31f: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, 0x0]

================================

Block 0x320
[0x320:0x326]
---
Predecessors: [0x312]
Successors: [0x327, 0x524]
---
0x320 JUMPDEST
0x321 DUP4
0x322 ISZERO
0x323 PUSH2 0x524
0x326 JUMPI
---
0x320: JUMPDEST 
0x322: V193 = ISZERO V48
0x323: V194 = 0x524
0x326: JUMPI 0x524 V193
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, 0x0]

================================

Block 0x327
[0x327:0x3fc]
---
Predecessors: [0x320]
Successors: [0x3fd, 0x401]
---
0x327 DUP5
0x328 SWAP1
0x329 POP
0x32a DUP3
0x32b DUP2
0x32c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x341 AND
0x342 PUSH4 0xdd62ed3e
0x347 CALLER
0x348 ADDRESS
0x349 PUSH1 0x0
0x34b PUSH1 0x40
0x34d MLOAD
0x34e PUSH1 0x20
0x350 ADD
0x351 MSTORE
0x352 PUSH1 0x40
0x354 MLOAD
0x355 DUP4
0x356 PUSH4 0xffffffff
0x35b AND
0x35c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x37a MUL
0x37b DUP2
0x37c MSTORE
0x37d PUSH1 0x4
0x37f ADD
0x380 DUP1
0x381 DUP4
0x382 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x397 AND
0x398 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ad AND
0x3ae DUP2
0x3af MSTORE
0x3b0 PUSH1 0x20
0x3b2 ADD
0x3b3 DUP3
0x3b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c9 AND
0x3ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3df AND
0x3e0 DUP2
0x3e1 MSTORE
0x3e2 PUSH1 0x20
0x3e4 ADD
0x3e5 SWAP3
0x3e6 POP
0x3e7 POP
0x3e8 POP
0x3e9 PUSH1 0x20
0x3eb PUSH1 0x40
0x3ed MLOAD
0x3ee DUP1
0x3ef DUP4
0x3f0 SUB
0x3f1 DUP2
0x3f2 PUSH1 0x0
0x3f4 DUP8
0x3f5 DUP1
0x3f6 EXTCODESIZE
0x3f7 ISZERO
0x3f8 ISZERO
0x3f9 PUSH2 0x401
0x3fc JUMPI
---
0x32c: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x341: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x342: V197 = 0xdd62ed3e
0x347: V198 = CALLER
0x348: V199 = ADDRESS
0x349: V200 = 0x0
0x34b: V201 = 0x40
0x34d: V202 = M[0x40]
0x34e: V203 = 0x20
0x350: V204 = ADD 0x20 V202
0x351: M[V204] = 0x0
0x352: V205 = 0x40
0x354: V206 = M[0x40]
0x356: V207 = 0xffffffff
0x35b: V208 = AND 0xffffffff 0xdd62ed3e
0x35c: V209 = 0x100000000000000000000000000000000000000000000000000000000
0x37a: V210 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xdd62ed3e
0x37c: M[V206] = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x37d: V211 = 0x4
0x37f: V212 = ADD 0x4 V206
0x382: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x397: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x398: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ad: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x3af: M[V212] = V216
0x3b0: V217 = 0x20
0x3b2: V218 = ADD 0x20 V212
0x3b4: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c9: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x3ca: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x3df: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x3e1: M[V218] = V222
0x3e2: V223 = 0x20
0x3e4: V224 = ADD 0x20 V218
0x3e9: V225 = 0x20
0x3eb: V226 = 0x40
0x3ed: V227 = M[0x40]
0x3f0: V228 = SUB V224 V227
0x3f2: V229 = 0x0
0x3f6: V230 = EXTCODESIZE V196
0x3f7: V231 = ISZERO V230
0x3f8: V232 = ISZERO V231
0x3f9: V233 = 0x401
0x3fc: JUMPI 0x401 V232
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S4, S2, V196, 0xdd62ed3e, V224, 0x20, V227, V228, V227, 0x0, V196]
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43, V51, V196, 0xdd62ed3e, V224, 0x20, V227, V228, V227, 0x0, V196]

================================

Block 0x3fd
[0x3fd:0x400]
---
Predecessors: [0x327]
Successors: []
---
0x3fd PUSH1 0x0
0x3ff DUP1
0x400 REVERT
---
0x3fd: V234 = 0x0
0x400: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43, V51, V196, 0xdd62ed3e, V224, 0x20, V227, V228, V227, 0x0, V196]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43, V51, V196, 0xdd62ed3e, V224, 0x20, V227, V228, V227, 0x0, V196]

================================

Block 0x401
[0x401:0x40d]
---
Predecessors: [0x327]
Successors: [0x40e, 0x412]
---
0x401 JUMPDEST
0x402 PUSH2 0x2c6
0x405 GAS
0x406 SUB
0x407 CALL
0x408 ISZERO
0x409 ISZERO
0x40a PUSH2 0x412
0x40d JUMPI
---
0x401: JUMPDEST 
0x402: V235 = 0x2c6
0x405: V236 = GAS
0x406: V237 = SUB V236 0x2c6
0x407: V238 = CALL V237 V196 0x0 V227 V228 V227 0x20
0x408: V239 = ISZERO V238
0x409: V240 = ISZERO V239
0x40a: V241 = 0x412
0x40d: JUMPI 0x412 V240
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43, V51, V196, 0xdd62ed3e, V224, 0x20, V227, V228, V227, 0x0, V196]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43, V51, V196, 0xdd62ed3e, V224]

================================

Block 0x40e
[0x40e:0x411]
---
Predecessors: [0x401]
Successors: []
---
0x40e PUSH1 0x0
0x410 DUP1
0x411 REVERT
---
0x40e: V242 = 0x0
0x411: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43, V51, V196, 0xdd62ed3e, V224]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43, V51, V196, 0xdd62ed3e, V224]

================================

Block 0x412
[0x412:0x423]
---
Predecessors: [0x401]
Successors: [0x424, 0x428]
---
0x412 JUMPDEST
0x413 POP
0x414 POP
0x415 POP
0x416 PUSH1 0x40
0x418 MLOAD
0x419 DUP1
0x41a MLOAD
0x41b SWAP1
0x41c POP
0x41d EQ
0x41e ISZERO
0x41f ISZERO
0x420 PUSH2 0x428
0x423 JUMPI
---
0x412: JUMPDEST 
0x416: V243 = 0x40
0x418: V244 = M[0x40]
0x41a: V245 = M[V244]
0x41d: V246 = EQ V245 V51
0x41e: V247 = ISZERO V246
0x41f: V248 = ISZERO V247
0x420: V249 = 0x428
0x423: JUMPI 0x428 V248
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43, V51, V196, 0xdd62ed3e, V224]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43]

================================

Block 0x424
[0x424:0x427]
---
Predecessors: [0x412]
Successors: []
---
0x424 PUSH1 0x0
0x426 DUP1
0x427 REVERT
---
0x424: V250 = 0x0
0x427: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43]

================================

Block 0x428
[0x428:0x502]
---
Predecessors: [0x412]
Successors: [0x503, 0x507]
---
0x428 JUMPDEST
0x429 DUP1
0x42a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43f AND
0x440 PUSH4 0x23b872dd
0x445 CALLER
0x446 ADDRESS
0x447 DUP7
0x448 PUSH1 0x0
0x44a PUSH1 0x40
0x44c MLOAD
0x44d PUSH1 0x20
0x44f ADD
0x450 MSTORE
0x451 PUSH1 0x40
0x453 MLOAD
0x454 DUP5
0x455 PUSH4 0xffffffff
0x45a AND
0x45b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x479 MUL
0x47a DUP2
0x47b MSTORE
0x47c PUSH1 0x4
0x47e ADD
0x47f DUP1
0x480 DUP5
0x481 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x496 AND
0x497 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ac AND
0x4ad DUP2
0x4ae MSTORE
0x4af PUSH1 0x20
0x4b1 ADD
0x4b2 DUP4
0x4b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c8 AND
0x4c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4de AND
0x4df DUP2
0x4e0 MSTORE
0x4e1 PUSH1 0x20
0x4e3 ADD
0x4e4 DUP3
0x4e5 DUP2
0x4e6 MSTORE
0x4e7 PUSH1 0x20
0x4e9 ADD
0x4ea SWAP4
0x4eb POP
0x4ec POP
0x4ed POP
0x4ee POP
0x4ef PUSH1 0x20
0x4f1 PUSH1 0x40
0x4f3 MLOAD
0x4f4 DUP1
0x4f5 DUP4
0x4f6 SUB
0x4f7 DUP2
0x4f8 PUSH1 0x0
0x4fa DUP8
0x4fb DUP1
0x4fc EXTCODESIZE
0x4fd ISZERO
0x4fe ISZERO
0x4ff PUSH2 0x507
0x502 JUMPI
---
0x428: JUMPDEST 
0x42a: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x43f: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x440: V253 = 0x23b872dd
0x445: V254 = CALLER
0x446: V255 = ADDRESS
0x448: V256 = 0x0
0x44a: V257 = 0x40
0x44c: V258 = M[0x40]
0x44d: V259 = 0x20
0x44f: V260 = ADD 0x20 V258
0x450: M[V260] = 0x0
0x451: V261 = 0x40
0x453: V262 = M[0x40]
0x455: V263 = 0xffffffff
0x45a: V264 = AND 0xffffffff 0x23b872dd
0x45b: V265 = 0x100000000000000000000000000000000000000000000000000000000
0x479: V266 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x47b: M[V262] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x47c: V267 = 0x4
0x47e: V268 = ADD 0x4 V262
0x481: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x496: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x497: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ac: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x4ae: M[V268] = V272
0x4af: V273 = 0x20
0x4b1: V274 = ADD 0x20 V268
0x4b3: V275 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c8: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x4c9: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x4de: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x4e0: M[V274] = V278
0x4e1: V279 = 0x20
0x4e3: V280 = ADD 0x20 V274
0x4e6: M[V280] = V51
0x4e7: V281 = 0x20
0x4e9: V282 = ADD 0x20 V280
0x4ef: V283 = 0x20
0x4f1: V284 = 0x40
0x4f3: V285 = M[0x40]
0x4f6: V286 = SUB V282 V285
0x4f8: V287 = 0x0
0x4fc: V288 = EXTCODESIZE V252
0x4fd: V289 = ISZERO V288
0x4fe: V290 = ISZERO V289
0x4ff: V291 = 0x507
0x502: JUMPI 0x507 V290
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43]
Stack pops: 3
Stack additions: [S2, S1, S0, V252, 0x23b872dd, V282, 0x20, V285, V286, V285, 0x0, V252]
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43, V252, 0x23b872dd, V282, 0x20, V285, V286, V285, 0x0, V252]

================================

Block 0x503
[0x503:0x506]
---
Predecessors: [0x428]
Successors: []
---
0x503 PUSH1 0x0
0x505 DUP1
0x506 REVERT
---
0x503: V292 = 0x0
0x506: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43, V252, 0x23b872dd, V282, 0x20, V285, V286, V285, 0x0, V252]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43, V252, 0x23b872dd, V282, 0x20, V285, V286, V285, 0x0, V252]

================================

Block 0x507
[0x507:0x513]
---
Predecessors: [0x428]
Successors: [0x514, 0x518]
---
0x507 JUMPDEST
0x508 PUSH2 0x2c6
0x50b GAS
0x50c SUB
0x50d CALL
0x50e ISZERO
0x50f ISZERO
0x510 PUSH2 0x518
0x513 JUMPI
---
0x507: JUMPDEST 
0x508: V293 = 0x2c6
0x50b: V294 = GAS
0x50c: V295 = SUB V294 0x2c6
0x50d: V296 = CALL V295 V252 0x0 V285 V286 V285 0x20
0x50e: V297 = ISZERO V296
0x50f: V298 = ISZERO V297
0x510: V299 = 0x518
0x513: JUMPI 0x518 V298
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43, V252, 0x23b872dd, V282, 0x20, V285, V286, V285, 0x0, V252]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43, V252, 0x23b872dd, V282]

================================

Block 0x514
[0x514:0x517]
---
Predecessors: [0x507]
Successors: []
---
0x514 PUSH1 0x0
0x516 DUP1
0x517 REVERT
---
0x514: V300 = 0x0
0x517: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43, V252, 0x23b872dd, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43, V252, 0x23b872dd, V282]

================================

Block 0x518
[0x518:0x523]
---
Predecessors: [0x507]
Successors: [0x524]
---
0x518 JUMPDEST
0x519 POP
0x51a POP
0x51b POP
0x51c PUSH1 0x40
0x51e MLOAD
0x51f DUP1
0x520 MLOAD
0x521 SWAP1
0x522 POP
0x523 POP
---
0x518: JUMPDEST 
0x51c: V301 = 0x40
0x51e: V302 = M[0x40]
0x520: V303 = M[V302]
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43, V252, 0x23b872dd, V282]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, V43]

================================

Block 0x524
[0x524:0x573]
---
Predecessors: [0x320, 0x518]
Successors: [0x574, 0x579]
---
0x524 JUMPDEST
0x525 PUSH1 0xe0
0x527 PUSH1 0x40
0x529 MLOAD
0x52a SWAP1
0x52b DUP2
0x52c ADD
0x52d PUSH1 0x40
0x52f MSTORE
0x530 DUP1
0x531 DUP10
0x532 DUP2
0x533 MSTORE
0x534 PUSH1 0x20
0x536 ADD
0x537 CALLER
0x538 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54d AND
0x54e DUP2
0x54f MSTORE
0x550 PUSH1 0x20
0x552 ADD
0x553 DUP8
0x554 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x569 AND
0x56a DUP2
0x56b MSTORE
0x56c PUSH1 0x20
0x56e ADD
0x56f DUP6
0x570 PUSH2 0x579
0x573 JUMPI
---
0x524: JUMPDEST 
0x525: V304 = 0xe0
0x527: V305 = 0x40
0x529: V306 = M[0x40]
0x52c: V307 = ADD V306 0xe0
0x52d: V308 = 0x40
0x52f: M[0x40] = V307
0x533: M[V306] = V27
0x534: V309 = 0x20
0x536: V310 = ADD 0x20 V306
0x537: V311 = CALLER
0x538: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x54d: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x54f: M[V310] = V313
0x550: V314 = 0x20
0x552: V315 = ADD 0x20 V310
0x554: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x569: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x56b: M[V315] = V317
0x56c: V318 = 0x20
0x56e: V319 = ADD 0x20 V315
0x570: V320 = 0x579
0x573: JUMPI 0x579 V48
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, V306, V319]
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, S0, V306, V319]

================================

Block 0x574
[0x574:0x578]
---
Predecessors: [0x524]
Successors: [0x57b]
---
0x574 CALLVALUE
0x575 PUSH2 0x57b
0x578 JUMP
---
0x574: V321 = CALLVALUE
0x575: V322 = 0x57b
0x578: JUMP 0x57b
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, S2, V306, V319]
Stack pops: 0
Stack additions: [V321]
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, S2, V306, V319, V321]

================================

Block 0x579
[0x579:0x57a]
---
Predecessors: [0x524]
Successors: [0x57b]
---
0x579 JUMPDEST
0x57a DUP5
---
0x579: JUMPDEST 
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, S2, V306, V319]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4]
Exit stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, S2, V306, V319, V51]

================================

Block 0x57b
[0x57b:0x74d]
---
Predecessors: [0x574, 0x579]
Successors: [0xe7]
---
0x57b JUMPDEST
0x57c DUP2
0x57d MSTORE
0x57e PUSH1 0x20
0x580 ADD
0x581 DUP6
0x582 ISZERO
0x583 ISZERO
0x584 DUP2
0x585 MSTORE
0x586 PUSH1 0x20
0x588 ADD
0x589 DUP7
0x58a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59f AND
0x5a0 DUP2
0x5a1 MSTORE
0x5a2 PUSH1 0x20
0x5a4 ADD
0x5a5 PUSH1 0x1
0x5a7 ISZERO
0x5a8 ISZERO
0x5a9 DUP2
0x5aa MSTORE
0x5ab POP
0x5ac PUSH1 0x0
0x5ae DUP1
0x5af DUP9
0x5b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c5 AND
0x5c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5db AND
0x5dc DUP2
0x5dd MSTORE
0x5de PUSH1 0x20
0x5e0 ADD
0x5e1 SWAP1
0x5e2 DUP2
0x5e3 MSTORE
0x5e4 PUSH1 0x20
0x5e6 ADD
0x5e7 PUSH1 0x0
0x5e9 SHA3
0x5ea PUSH1 0x0
0x5ec DUP10
0x5ed PUSH12 0xffffffffffffffffffffffff
0x5fa NOT
0x5fb AND
0x5fc PUSH12 0xffffffffffffffffffffffff
0x609 NOT
0x60a AND
0x60b DUP2
0x60c MSTORE
0x60d PUSH1 0x20
0x60f ADD
0x610 SWAP1
0x611 DUP2
0x612 MSTORE
0x613 PUSH1 0x20
0x615 ADD
0x616 PUSH1 0x0
0x618 SHA3
0x619 PUSH1 0x0
0x61b DUP3
0x61c ADD
0x61d MLOAD
0x61e DUP2
0x61f PUSH1 0x0
0x621 ADD
0x622 SSTORE
0x623 PUSH1 0x20
0x625 DUP3
0x626 ADD
0x627 MLOAD
0x628 DUP2
0x629 PUSH1 0x1
0x62b ADD
0x62c PUSH1 0x0
0x62e PUSH2 0x100
0x631 EXP
0x632 DUP2
0x633 SLOAD
0x634 DUP2
0x635 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64a MUL
0x64b NOT
0x64c AND
0x64d SWAP1
0x64e DUP4
0x64f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x664 AND
0x665 MUL
0x666 OR
0x667 SWAP1
0x668 SSTORE
0x669 POP
0x66a PUSH1 0x40
0x66c DUP3
0x66d ADD
0x66e MLOAD
0x66f DUP2
0x670 PUSH1 0x2
0x672 ADD
0x673 PUSH1 0x0
0x675 PUSH2 0x100
0x678 EXP
0x679 DUP2
0x67a SLOAD
0x67b DUP2
0x67c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x691 MUL
0x692 NOT
0x693 AND
0x694 SWAP1
0x695 DUP4
0x696 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ab AND
0x6ac MUL
0x6ad OR
0x6ae SWAP1
0x6af SSTORE
0x6b0 POP
0x6b1 PUSH1 0x60
0x6b3 DUP3
0x6b4 ADD
0x6b5 MLOAD
0x6b6 DUP2
0x6b7 PUSH1 0x3
0x6b9 ADD
0x6ba SSTORE
0x6bb PUSH1 0x80
0x6bd DUP3
0x6be ADD
0x6bf MLOAD
0x6c0 DUP2
0x6c1 PUSH1 0x4
0x6c3 ADD
0x6c4 PUSH1 0x0
0x6c6 PUSH2 0x100
0x6c9 EXP
0x6ca DUP2
0x6cb SLOAD
0x6cc DUP2
0x6cd PUSH1 0xff
0x6cf MUL
0x6d0 NOT
0x6d1 AND
0x6d2 SWAP1
0x6d3 DUP4
0x6d4 ISZERO
0x6d5 ISZERO
0x6d6 MUL
0x6d7 OR
0x6d8 SWAP1
0x6d9 SSTORE
0x6da POP
0x6db PUSH1 0xa0
0x6dd DUP3
0x6de ADD
0x6df MLOAD
0x6e0 DUP2
0x6e1 PUSH1 0x4
0x6e3 ADD
0x6e4 PUSH1 0x1
0x6e6 PUSH2 0x100
0x6e9 EXP
0x6ea DUP2
0x6eb SLOAD
0x6ec DUP2
0x6ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x702 MUL
0x703 NOT
0x704 AND
0x705 SWAP1
0x706 DUP4
0x707 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71c AND
0x71d MUL
0x71e OR
0x71f SWAP1
0x720 SSTORE
0x721 POP
0x722 PUSH1 0xc0
0x724 DUP3
0x725 ADD
0x726 MLOAD
0x727 DUP2
0x728 PUSH1 0x4
0x72a ADD
0x72b PUSH1 0x15
0x72d PUSH2 0x100
0x730 EXP
0x731 DUP2
0x732 SLOAD
0x733 DUP2
0x734 PUSH1 0xff
0x736 MUL
0x737 NOT
0x738 AND
0x739 SWAP1
0x73a DUP4
0x73b ISZERO
0x73c ISZERO
0x73d MUL
0x73e OR
0x73f SWAP1
0x740 SSTORE
0x741 POP
0x742 SWAP1
0x743 POP
0x744 POP
0x745 POP
0x746 POP
0x747 POP
0x748 POP
0x749 POP
0x74a POP
0x74b POP
0x74c POP
0x74d JUMP
---
0x57b: JUMPDEST 
0x57d: M[V319] = S0
0x57e: V323 = 0x20
0x580: V324 = ADD 0x20 V319
0x582: V325 = ISZERO V48
0x583: V326 = ISZERO V325
0x585: M[V324] = V326
0x586: V327 = 0x20
0x588: V328 = ADD 0x20 V324
0x58a: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x59f: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x5a1: M[V328] = V330
0x5a2: V331 = 0x20
0x5a4: V332 = ADD 0x20 V328
0x5a5: V333 = 0x1
0x5a7: V334 = ISZERO 0x1
0x5a8: V335 = ISZERO 0x0
0x5aa: M[V332] = 0x1
0x5ac: V336 = 0x0
0x5b0: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c5: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x5c6: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x5db: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x5dd: M[0x0] = V340
0x5de: V341 = 0x20
0x5e0: V342 = ADD 0x20 0x0
0x5e3: M[0x20] = 0x0
0x5e4: V343 = 0x20
0x5e6: V344 = ADD 0x20 0x20
0x5e7: V345 = 0x0
0x5e9: V346 = SHA3 0x0 0x40
0x5ea: V347 = 0x0
0x5ed: V348 = 0xffffffffffffffffffffffff
0x5fa: V349 = NOT 0xffffffffffffffffffffffff
0x5fb: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V33
0x5fc: V351 = 0xffffffffffffffffffffffff
0x609: V352 = NOT 0xffffffffffffffffffffffff
0x60a: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V350
0x60c: M[0x0] = V353
0x60d: V354 = 0x20
0x60f: V355 = ADD 0x20 0x0
0x612: M[0x20] = V346
0x613: V356 = 0x20
0x615: V357 = ADD 0x20 0x20
0x616: V358 = 0x0
0x618: V359 = SHA3 0x0 0x40
0x619: V360 = 0x0
0x61c: V361 = ADD V306 0x0
0x61d: V362 = M[V361]
0x61f: V363 = 0x0
0x621: V364 = ADD 0x0 V359
0x622: S[V364] = V362
0x623: V365 = 0x20
0x626: V366 = ADD V306 0x20
0x627: V367 = M[V366]
0x629: V368 = 0x1
0x62b: V369 = ADD 0x1 V359
0x62c: V370 = 0x0
0x62e: V371 = 0x100
0x631: V372 = EXP 0x100 0x0
0x633: V373 = S[V369]
0x635: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x64a: V375 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x64b: V376 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x64c: V377 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V373
0x64f: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x664: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V367
0x665: V380 = MUL V379 0x1
0x666: V381 = OR V380 V377
0x668: S[V369] = V381
0x66a: V382 = 0x40
0x66d: V383 = ADD V306 0x40
0x66e: V384 = M[V383]
0x670: V385 = 0x2
0x672: V386 = ADD 0x2 V359
0x673: V387 = 0x0
0x675: V388 = 0x100
0x678: V389 = EXP 0x100 0x0
0x67a: V390 = S[V386]
0x67c: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x691: V392 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x692: V393 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x693: V394 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V390
0x696: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ab: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x6ac: V397 = MUL V396 0x1
0x6ad: V398 = OR V397 V394
0x6af: S[V386] = V398
0x6b1: V399 = 0x60
0x6b4: V400 = ADD V306 0x60
0x6b5: V401 = M[V400]
0x6b7: V402 = 0x3
0x6b9: V403 = ADD 0x3 V359
0x6ba: S[V403] = V401
0x6bb: V404 = 0x80
0x6be: V405 = ADD V306 0x80
0x6bf: V406 = M[V405]
0x6c1: V407 = 0x4
0x6c3: V408 = ADD 0x4 V359
0x6c4: V409 = 0x0
0x6c6: V410 = 0x100
0x6c9: V411 = EXP 0x100 0x0
0x6cb: V412 = S[V408]
0x6cd: V413 = 0xff
0x6cf: V414 = MUL 0xff 0x1
0x6d0: V415 = NOT 0xff
0x6d1: V416 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V412
0x6d4: V417 = ISZERO V406
0x6d5: V418 = ISZERO V417
0x6d6: V419 = MUL V418 0x1
0x6d7: V420 = OR V419 V416
0x6d9: S[V408] = V420
0x6db: V421 = 0xa0
0x6de: V422 = ADD V306 0xa0
0x6df: V423 = M[V422]
0x6e1: V424 = 0x4
0x6e3: V425 = ADD 0x4 V359
0x6e4: V426 = 0x1
0x6e6: V427 = 0x100
0x6e9: V428 = EXP 0x100 0x1
0x6eb: V429 = S[V425]
0x6ed: V430 = 0xffffffffffffffffffffffffffffffffffffffff
0x702: V431 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x100
0x703: V432 = NOT 0xffffffffffffffffffffffffffffffffffffffff00
0x704: V433 = AND 0xffffffffffffffffffffff0000000000000000000000000000000000000000ff V429
0x707: V434 = 0xffffffffffffffffffffffffffffffffffffffff
0x71c: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x71d: V436 = MUL V435 0x100
0x71e: V437 = OR V436 V433
0x720: S[V425] = V437
0x722: V438 = 0xc0
0x725: V439 = ADD V306 0xc0
0x726: V440 = M[V439]
0x728: V441 = 0x4
0x72a: V442 = ADD 0x4 V359
0x72b: V443 = 0x15
0x72d: V444 = 0x100
0x730: V445 = EXP 0x100 0x15
0x732: V446 = S[V442]
0x734: V447 = 0xff
0x736: V448 = MUL 0xff 0x1000000000000000000000000000000000000000000
0x737: V449 = NOT 0xff000000000000000000000000000000000000000000
0x738: V450 = AND 0xffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff V446
0x73b: V451 = ISZERO V440
0x73c: V452 = ISZERO V451
0x73d: V453 = MUL V452 0x1000000000000000000000000000000000000000000
0x73e: V454 = OR V453 V450
0x740: S[V442] = V454
0x74d: JUMP 0xe7
---
Entry stack: [V11, 0xe7, V27, V33, V38, V43, V48, V51, V167, S3, V306, V319, S0]
Stack pops: 12
Stack additions: []
Exit stack: [V11]

================================

Block 0x74e
[0x74e:0x816]
---
Predecessors: [0xf4]
Successors: [0x138]
---
0x74e JUMPDEST
0x74f PUSH1 0x0
0x751 PUSH1 0x20
0x753 MSTORE
0x754 DUP2
0x755 PUSH1 0x0
0x757 MSTORE
0x758 PUSH1 0x40
0x75a PUSH1 0x0
0x75c SHA3
0x75d PUSH1 0x20
0x75f MSTORE
0x760 DUP1
0x761 PUSH1 0x0
0x763 MSTORE
0x764 PUSH1 0x40
0x766 PUSH1 0x0
0x768 SHA3
0x769 PUSH1 0x0
0x76b SWAP2
0x76c POP
0x76d SWAP2
0x76e POP
0x76f POP
0x770 DUP1
0x771 PUSH1 0x0
0x773 ADD
0x774 SLOAD
0x775 SWAP1
0x776 DUP1
0x777 PUSH1 0x1
0x779 ADD
0x77a PUSH1 0x0
0x77c SWAP1
0x77d SLOAD
0x77e SWAP1
0x77f PUSH2 0x100
0x782 EXP
0x783 SWAP1
0x784 DIV
0x785 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79a AND
0x79b SWAP1
0x79c DUP1
0x79d PUSH1 0x2
0x79f ADD
0x7a0 PUSH1 0x0
0x7a2 SWAP1
0x7a3 SLOAD
0x7a4 SWAP1
0x7a5 PUSH2 0x100
0x7a8 EXP
0x7a9 SWAP1
0x7aa DIV
0x7ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c0 AND
0x7c1 SWAP1
0x7c2 DUP1
0x7c3 PUSH1 0x3
0x7c5 ADD
0x7c6 SLOAD
0x7c7 SWAP1
0x7c8 DUP1
0x7c9 PUSH1 0x4
0x7cb ADD
0x7cc PUSH1 0x0
0x7ce SWAP1
0x7cf SLOAD
0x7d0 SWAP1
0x7d1 PUSH2 0x100
0x7d4 EXP
0x7d5 SWAP1
0x7d6 DIV
0x7d7 PUSH1 0xff
0x7d9 AND
0x7da SWAP1
0x7db DUP1
0x7dc PUSH1 0x4
0x7de ADD
0x7df PUSH1 0x1
0x7e1 SWAP1
0x7e2 SLOAD
0x7e3 SWAP1
0x7e4 PUSH2 0x100
0x7e7 EXP
0x7e8 SWAP1
0x7e9 DIV
0x7ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ff AND
0x800 SWAP1
0x801 DUP1
0x802 PUSH1 0x4
0x804 ADD
0x805 PUSH1 0x15
0x807 SWAP1
0x808 SLOAD
0x809 SWAP1
0x80a PUSH2 0x100
0x80d EXP
0x80e SWAP1
0x80f DIV
0x810 PUSH1 0xff
0x812 AND
0x813 SWAP1
0x814 POP
0x815 DUP8
0x816 JUMP
---
0x74e: JUMPDEST 
0x74f: V455 = 0x0
0x751: V456 = 0x20
0x753: M[0x20] = 0x0
0x755: V457 = 0x0
0x757: M[0x0] = V63
0x758: V458 = 0x40
0x75a: V459 = 0x0
0x75c: V460 = SHA3 0x0 0x40
0x75d: V461 = 0x20
0x75f: M[0x20] = V460
0x761: V462 = 0x0
0x763: M[0x0] = V69
0x764: V463 = 0x40
0x766: V464 = 0x0
0x768: V465 = SHA3 0x0 0x40
0x769: V466 = 0x0
0x771: V467 = 0x0
0x773: V468 = ADD 0x0 V465
0x774: V469 = S[V468]
0x777: V470 = 0x1
0x779: V471 = ADD 0x1 V465
0x77a: V472 = 0x0
0x77d: V473 = S[V471]
0x77f: V474 = 0x100
0x782: V475 = EXP 0x100 0x0
0x784: V476 = DIV V473 0x1
0x785: V477 = 0xffffffffffffffffffffffffffffffffffffffff
0x79a: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x79d: V479 = 0x2
0x79f: V480 = ADD 0x2 V465
0x7a0: V481 = 0x0
0x7a3: V482 = S[V480]
0x7a5: V483 = 0x100
0x7a8: V484 = EXP 0x100 0x0
0x7aa: V485 = DIV V482 0x1
0x7ab: V486 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c0: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff V485
0x7c3: V488 = 0x3
0x7c5: V489 = ADD 0x3 V465
0x7c6: V490 = S[V489]
0x7c9: V491 = 0x4
0x7cb: V492 = ADD 0x4 V465
0x7cc: V493 = 0x0
0x7cf: V494 = S[V492]
0x7d1: V495 = 0x100
0x7d4: V496 = EXP 0x100 0x0
0x7d6: V497 = DIV V494 0x1
0x7d7: V498 = 0xff
0x7d9: V499 = AND 0xff V497
0x7dc: V500 = 0x4
0x7de: V501 = ADD 0x4 V465
0x7df: V502 = 0x1
0x7e2: V503 = S[V501]
0x7e4: V504 = 0x100
0x7e7: V505 = EXP 0x100 0x1
0x7e9: V506 = DIV V503 0x100
0x7ea: V507 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ff: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x802: V509 = 0x4
0x804: V510 = ADD 0x4 V465
0x805: V511 = 0x15
0x808: V512 = S[V510]
0x80a: V513 = 0x100
0x80d: V514 = EXP 0x100 0x15
0x80f: V515 = DIV V512 0x1000000000000000000000000000000000000000000
0x810: V516 = 0xff
0x812: V517 = AND 0xff V515
0x816: JUMP 0x138
---
Entry stack: [V11, 0x138, V63, V69]
Stack pops: 3
Stack additions: [S2, V469, V478, V487, V490, V499, V508, V517]
Exit stack: [V11, 0x138, V469, V478, V487, V490, V499, V508, V517]

================================

Block 0x817
[0x817:0x855]
---
Predecessors: [0x20f]
Successors: [0x856, 0x85a]
---
0x817 JUMPDEST
0x818 PUSH1 0x0
0x81a DUP1
0x81b PUSH1 0x0
0x81d PUSH1 0x3
0x81f DUP5
0x820 PUSH1 0x0
0x822 PUSH1 0x40
0x824 MLOAD
0x825 PUSH1 0x20
0x827 ADD
0x828 MSTORE
0x829 PUSH1 0x40
0x82b MLOAD
0x82c DUP1
0x82d DUP3
0x82e PUSH1 0x0
0x830 NOT
0x831 AND
0x832 PUSH1 0x0
0x834 NOT
0x835 AND
0x836 DUP2
0x837 MSTORE
0x838 PUSH1 0x20
0x83a ADD
0x83b SWAP2
0x83c POP
0x83d POP
0x83e PUSH1 0x20
0x840 PUSH1 0x40
0x842 MLOAD
0x843 DUP1
0x844 DUP4
0x845 SUB
0x846 DUP2
0x847 PUSH1 0x0
0x849 DUP7
0x84a PUSH2 0x646e
0x84d GAS
0x84e SUB
0x84f CALL
0x850 ISZERO
0x851 ISZERO
0x852 PUSH2 0x85a
0x855 JUMPI
---
0x817: JUMPDEST 
0x818: V518 = 0x0
0x81b: V519 = 0x0
0x81d: V520 = 0x3
0x820: V521 = 0x0
0x822: V522 = 0x40
0x824: V523 = M[0x40]
0x825: V524 = 0x20
0x827: V525 = ADD 0x20 V523
0x828: M[V525] = 0x0
0x829: V526 = 0x40
0x82b: V527 = M[0x40]
0x82e: V528 = 0x0
0x830: V529 = NOT 0x0
0x831: V530 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V121
0x832: V531 = 0x0
0x834: V532 = NOT 0x0
0x835: V533 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V530
0x837: M[V527] = V533
0x838: V534 = 0x20
0x83a: V535 = ADD 0x20 V527
0x83e: V536 = 0x20
0x840: V537 = 0x40
0x842: V538 = M[0x40]
0x845: V539 = SUB V535 V538
0x847: V540 = 0x0
0x84a: V541 = 0x646e
0x84d: V542 = GAS
0x84e: V543 = SUB V542 0x646e
0x84f: V544 = CALL V543 0x3 0x0 V538 V539 V538 0x20
0x850: V545 = ISZERO V544
0x851: V546 = ISZERO V545
0x852: V547 = 0x85a
0x855: JUMPI 0x85a V546
---
Entry stack: [V11, 0x229, V121]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x3, V535]
Exit stack: [V11, 0x229, V121, 0x0, 0x0, 0x0, 0x3, V535]

================================

Block 0x856
[0x856:0x859]
---
Predecessors: [0x817]
Successors: []
---
0x856 PUSH1 0x0
0x858 DUP1
0x859 REVERT
---
0x856: V548 = 0x0
0x859: REVERT 0x0 0x0
---
Entry stack: [V11, 0x229, V121, 0x0, 0x0, 0x0, 0x3, V535]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x229, V121, 0x0, 0x0, 0x0, 0x3, V535]

================================

Block 0x85a
[0x85a:0x8f8]
---
Predecessors: [0x817]
Successors: [0x8f9, 0x8fd]
---
0x85a JUMPDEST
0x85b POP
0x85c POP
0x85d PUSH1 0x40
0x85f MLOAD
0x860 MLOAD
0x861 PUSH13 0x1000000000000000000000000
0x86f MUL
0x870 SWAP3
0x871 POP
0x872 PUSH1 0x0
0x874 DUP1
0x875 CALLER
0x876 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88b AND
0x88c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a1 AND
0x8a2 DUP2
0x8a3 MSTORE
0x8a4 PUSH1 0x20
0x8a6 ADD
0x8a7 SWAP1
0x8a8 DUP2
0x8a9 MSTORE
0x8aa PUSH1 0x20
0x8ac ADD
0x8ad PUSH1 0x0
0x8af SHA3
0x8b0 PUSH1 0x0
0x8b2 DUP5
0x8b3 PUSH12 0xffffffffffffffffffffffff
0x8c0 NOT
0x8c1 AND
0x8c2 PUSH12 0xffffffffffffffffffffffff
0x8cf NOT
0x8d0 AND
0x8d1 DUP2
0x8d2 MSTORE
0x8d3 PUSH1 0x20
0x8d5 ADD
0x8d6 SWAP1
0x8d7 DUP2
0x8d8 MSTORE
0x8d9 PUSH1 0x20
0x8db ADD
0x8dc PUSH1 0x0
0x8de SHA3
0x8df SWAP2
0x8e0 POP
0x8e1 DUP2
0x8e2 PUSH1 0x4
0x8e4 ADD
0x8e5 PUSH1 0x15
0x8e7 SWAP1
0x8e8 SLOAD
0x8e9 SWAP1
0x8ea PUSH2 0x100
0x8ed EXP
0x8ee SWAP1
0x8ef DIV
0x8f0 PUSH1 0xff
0x8f2 AND
0x8f3 ISZERO
0x8f4 ISZERO
0x8f5 PUSH2 0x8fd
0x8f8 JUMPI
---
0x85a: JUMPDEST 
0x85d: V549 = 0x40
0x85f: V550 = M[0x40]
0x860: V551 = M[V550]
0x861: V552 = 0x1000000000000000000000000
0x86f: V553 = MUL 0x1000000000000000000000000 V551
0x872: V554 = 0x0
0x875: V555 = CALLER
0x876: V556 = 0xffffffffffffffffffffffffffffffffffffffff
0x88b: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x88c: V558 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a1: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0x8a3: M[0x0] = V559
0x8a4: V560 = 0x20
0x8a6: V561 = ADD 0x20 0x0
0x8a9: M[0x20] = 0x0
0x8aa: V562 = 0x20
0x8ac: V563 = ADD 0x20 0x20
0x8ad: V564 = 0x0
0x8af: V565 = SHA3 0x0 0x40
0x8b0: V566 = 0x0
0x8b3: V567 = 0xffffffffffffffffffffffff
0x8c0: V568 = NOT 0xffffffffffffffffffffffff
0x8c1: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V553
0x8c2: V570 = 0xffffffffffffffffffffffff
0x8cf: V571 = NOT 0xffffffffffffffffffffffff
0x8d0: V572 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V569
0x8d2: M[0x0] = V572
0x8d3: V573 = 0x20
0x8d5: V574 = ADD 0x20 0x0
0x8d8: M[0x20] = V565
0x8d9: V575 = 0x20
0x8db: V576 = ADD 0x20 0x20
0x8dc: V577 = 0x0
0x8de: V578 = SHA3 0x0 0x40
0x8e2: V579 = 0x4
0x8e4: V580 = ADD 0x4 V578
0x8e5: V581 = 0x15
0x8e8: V582 = S[V580]
0x8ea: V583 = 0x100
0x8ed: V584 = EXP 0x100 0x15
0x8ef: V585 = DIV V582 0x1000000000000000000000000000000000000000000
0x8f0: V586 = 0xff
0x8f2: V587 = AND 0xff V585
0x8f3: V588 = ISZERO V587
0x8f4: V589 = ISZERO V588
0x8f5: V590 = 0x8fd
0x8f8: JUMPI 0x8fd V589
---
Entry stack: [V11, 0x229, V121, 0x0, 0x0, 0x0, 0x3, V535]
Stack pops: 5
Stack additions: [V553, V578, S2]
Exit stack: [V11, 0x229, V121, V553, V578, 0x0]

================================

Block 0x8f9
[0x8f9:0x8fc]
---
Predecessors: [0x85a]
Successors: []
---
0x8f9 PUSH1 0x0
0x8fb DUP1
0x8fc REVERT
---
0x8f9: V591 = 0x0
0x8fc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x229, V121, V553, V578, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x229, V121, V553, V578, 0x0]

================================

Block 0x8fd
[0x8fd:0x90a]
---
Predecessors: [0x85a]
Successors: [0x90b, 0x90f]
---
0x8fd JUMPDEST
0x8fe DUP2
0x8ff PUSH1 0x0
0x901 ADD
0x902 SLOAD
0x903 TIMESTAMP
0x904 LT
0x905 ISZERO
0x906 ISZERO
0x907 PUSH2 0x90f
0x90a JUMPI
---
0x8fd: JUMPDEST 
0x8ff: V592 = 0x0
0x901: V593 = ADD 0x0 V578
0x902: V594 = S[V593]
0x903: V595 = TIMESTAMP
0x904: V596 = LT V595 V594
0x905: V597 = ISZERO V596
0x906: V598 = ISZERO V597
0x907: V599 = 0x90f
0x90a: JUMPI 0x90f V598
---
Entry stack: [V11, 0x229, V121, V553, V578, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x229, V121, V553, V578, 0x0]

================================

Block 0x90b
[0x90b:0x90e]
---
Predecessors: [0x8fd]
Successors: []
---
0x90b PUSH1 0x0
0x90d DUP1
0x90e REVERT
---
0x90b: V600 = 0x0
0x90e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x229, V121, V553, V578, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x229, V121, V553, V578, 0x0]

================================

Block 0x90f
[0x90f:0x943]
---
Predecessors: [0x8fd]
Successors: [0x944, 0xa3a]
---
0x90f JUMPDEST
0x910 PUSH1 0x0
0x912 DUP3
0x913 PUSH1 0x4
0x915 ADD
0x916 PUSH1 0x15
0x918 PUSH2 0x100
0x91b EXP
0x91c DUP2
0x91d SLOAD
0x91e DUP2
0x91f PUSH1 0xff
0x921 MUL
0x922 NOT
0x923 AND
0x924 SWAP1
0x925 DUP4
0x926 ISZERO
0x927 ISZERO
0x928 MUL
0x929 OR
0x92a SWAP1
0x92b SSTORE
0x92c POP
0x92d DUP2
0x92e PUSH1 0x4
0x930 ADD
0x931 PUSH1 0x0
0x933 SWAP1
0x934 SLOAD
0x935 SWAP1
0x936 PUSH2 0x100
0x939 EXP
0x93a SWAP1
0x93b DIV
0x93c PUSH1 0xff
0x93e AND
0x93f ISZERO
0x940 PUSH2 0xa3a
0x943 JUMPI
---
0x90f: JUMPDEST 
0x910: V601 = 0x0
0x913: V602 = 0x4
0x915: V603 = ADD 0x4 V578
0x916: V604 = 0x15
0x918: V605 = 0x100
0x91b: V606 = EXP 0x100 0x15
0x91d: V607 = S[V603]
0x91f: V608 = 0xff
0x921: V609 = MUL 0xff 0x1000000000000000000000000000000000000000000
0x922: V610 = NOT 0xff000000000000000000000000000000000000000000
0x923: V611 = AND 0xffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff V607
0x926: V612 = ISZERO 0x0
0x927: V613 = ISZERO 0x1
0x928: V614 = MUL 0x0 0x1000000000000000000000000000000000000000000
0x929: V615 = OR 0x0 V611
0x92b: S[V603] = V615
0x92e: V616 = 0x4
0x930: V617 = ADD 0x4 V578
0x931: V618 = 0x0
0x934: V619 = S[V617]
0x936: V620 = 0x100
0x939: V621 = EXP 0x100 0x0
0x93b: V622 = DIV V619 0x1
0x93c: V623 = 0xff
0x93e: V624 = AND 0xff V622
0x93f: V625 = ISZERO V624
0x940: V626 = 0xa3a
0x943: JUMPI 0xa3a V625
---
Entry stack: [V11, 0x229, V121, V553, V578, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x229, V121, V553, V578, 0x0]

================================

Block 0x944
[0x944:0xa14]
---
Predecessors: [0x90f]
Successors: [0xa15, 0xa19]
---
0x944 DUP2
0x945 PUSH1 0x4
0x947 ADD
0x948 PUSH1 0x1
0x94a SWAP1
0x94b SLOAD
0x94c SWAP1
0x94d PUSH2 0x100
0x950 EXP
0x951 SWAP1
0x952 DIV
0x953 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x968 AND
0x969 SWAP1
0x96a POP
0x96b DUP1
0x96c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x981 AND
0x982 PUSH4 0xa9059cbb
0x987 CALLER
0x988 DUP5
0x989 PUSH1 0x3
0x98b ADD
0x98c SLOAD
0x98d PUSH1 0x0
0x98f PUSH1 0x40
0x991 MLOAD
0x992 PUSH1 0x20
0x994 ADD
0x995 MSTORE
0x996 PUSH1 0x40
0x998 MLOAD
0x999 DUP4
0x99a PUSH4 0xffffffff
0x99f AND
0x9a0 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x9be MUL
0x9bf DUP2
0x9c0 MSTORE
0x9c1 PUSH1 0x4
0x9c3 ADD
0x9c4 DUP1
0x9c5 DUP4
0x9c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9db AND
0x9dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f1 AND
0x9f2 DUP2
0x9f3 MSTORE
0x9f4 PUSH1 0x20
0x9f6 ADD
0x9f7 DUP3
0x9f8 DUP2
0x9f9 MSTORE
0x9fa PUSH1 0x20
0x9fc ADD
0x9fd SWAP3
0x9fe POP
0x9ff POP
0xa00 POP
0xa01 PUSH1 0x20
0xa03 PUSH1 0x40
0xa05 MLOAD
0xa06 DUP1
0xa07 DUP4
0xa08 SUB
0xa09 DUP2
0xa0a PUSH1 0x0
0xa0c DUP8
0xa0d DUP1
0xa0e EXTCODESIZE
0xa0f ISZERO
0xa10 ISZERO
0xa11 PUSH2 0xa19
0xa14 JUMPI
---
0x945: V627 = 0x4
0x947: V628 = ADD 0x4 V578
0x948: V629 = 0x1
0x94b: V630 = S[V628]
0x94d: V631 = 0x100
0x950: V632 = EXP 0x100 0x1
0x952: V633 = DIV V630 0x100
0x953: V634 = 0xffffffffffffffffffffffffffffffffffffffff
0x968: V635 = AND 0xffffffffffffffffffffffffffffffffffffffff V633
0x96c: V636 = 0xffffffffffffffffffffffffffffffffffffffff
0x981: V637 = AND 0xffffffffffffffffffffffffffffffffffffffff V635
0x982: V638 = 0xa9059cbb
0x987: V639 = CALLER
0x989: V640 = 0x3
0x98b: V641 = ADD 0x3 V578
0x98c: V642 = S[V641]
0x98d: V643 = 0x0
0x98f: V644 = 0x40
0x991: V645 = M[0x40]
0x992: V646 = 0x20
0x994: V647 = ADD 0x20 V645
0x995: M[V647] = 0x0
0x996: V648 = 0x40
0x998: V649 = M[0x40]
0x99a: V650 = 0xffffffff
0x99f: V651 = AND 0xffffffff 0xa9059cbb
0x9a0: V652 = 0x100000000000000000000000000000000000000000000000000000000
0x9be: V653 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x9c0: M[V649] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x9c1: V654 = 0x4
0x9c3: V655 = ADD 0x4 V649
0x9c6: V656 = 0xffffffffffffffffffffffffffffffffffffffff
0x9db: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V639
0x9dc: V658 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f1: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff V657
0x9f3: M[V655] = V659
0x9f4: V660 = 0x20
0x9f6: V661 = ADD 0x20 V655
0x9f9: M[V661] = V642
0x9fa: V662 = 0x20
0x9fc: V663 = ADD 0x20 V661
0xa01: V664 = 0x20
0xa03: V665 = 0x40
0xa05: V666 = M[0x40]
0xa08: V667 = SUB V663 V666
0xa0a: V668 = 0x0
0xa0e: V669 = EXTCODESIZE V637
0xa0f: V670 = ISZERO V669
0xa10: V671 = ISZERO V670
0xa11: V672 = 0xa19
0xa14: JUMPI 0xa19 V671
---
Entry stack: [V11, 0x229, V121, V553, V578, 0x0]
Stack pops: 2
Stack additions: [S1, V635, V637, 0xa9059cbb, V663, 0x20, V666, V667, V666, 0x0, V637]
Exit stack: [V11, 0x229, V121, V553, V578, V635, V637, 0xa9059cbb, V663, 0x20, V666, V667, V666, 0x0, V637]

================================

Block 0xa15
[0xa15:0xa18]
---
Predecessors: [0x944]
Successors: []
---
0xa15 PUSH1 0x0
0xa17 DUP1
0xa18 REVERT
---
0xa15: V673 = 0x0
0xa18: REVERT 0x0 0x0
---
Entry stack: [V11, 0x229, V121, V553, V578, V635, V637, 0xa9059cbb, V663, 0x20, V666, V667, V666, 0x0, V637]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x229, V121, V553, V578, V635, V637, 0xa9059cbb, V663, 0x20, V666, V667, V666, 0x0, V637]

================================

Block 0xa19
[0xa19:0xa25]
---
Predecessors: [0x944]
Successors: [0xa26, 0xa2a]
---
0xa19 JUMPDEST
0xa1a PUSH2 0x2c6
0xa1d GAS
0xa1e SUB
0xa1f CALL
0xa20 ISZERO
0xa21 ISZERO
0xa22 PUSH2 0xa2a
0xa25 JUMPI
---
0xa19: JUMPDEST 
0xa1a: V674 = 0x2c6
0xa1d: V675 = GAS
0xa1e: V676 = SUB V675 0x2c6
0xa1f: V677 = CALL V676 V637 0x0 V666 V667 V666 0x20
0xa20: V678 = ISZERO V677
0xa21: V679 = ISZERO V678
0xa22: V680 = 0xa2a
0xa25: JUMPI 0xa2a V679
---
Entry stack: [V11, 0x229, V121, V553, V578, V635, V637, 0xa9059cbb, V663, 0x20, V666, V667, V666, 0x0, V637]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x229, V121, V553, V578, V635, V637, 0xa9059cbb, V663]

================================

Block 0xa26
[0xa26:0xa29]
---
Predecessors: [0xa19]
Successors: []
---
0xa26 PUSH1 0x0
0xa28 DUP1
0xa29 REVERT
---
0xa26: V681 = 0x0
0xa29: REVERT 0x0 0x0
---
Entry stack: [V11, 0x229, V121, V553, V578, V635, V637, 0xa9059cbb, V663]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x229, V121, V553, V578, V635, V637, 0xa9059cbb, V663]

================================

Block 0xa2a
[0xa2a:0xa39]
---
Predecessors: [0xa19]
Successors: [0xa7f]
---
0xa2a JUMPDEST
0xa2b POP
0xa2c POP
0xa2d POP
0xa2e PUSH1 0x40
0xa30 MLOAD
0xa31 DUP1
0xa32 MLOAD
0xa33 SWAP1
0xa34 POP
0xa35 POP
0xa36 PUSH2 0xa7f
0xa39 JUMP
---
0xa2a: JUMPDEST 
0xa2e: V682 = 0x40
0xa30: V683 = M[0x40]
0xa32: V684 = M[V683]
0xa36: V685 = 0xa7f
0xa39: JUMP 0xa7f
---
Entry stack: [V11, 0x229, V121, V553, V578, V635, V637, 0xa9059cbb, V663]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x229, V121, V553, V578, V635]

================================

Block 0xa3a
[0xa3a:0xa79]
---
Predecessors: [0x90f]
Successors: [0xa7a, 0xa7e]
---
0xa3a JUMPDEST
0xa3b CALLER
0xa3c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa51 AND
0xa52 PUSH2 0x8fc
0xa55 DUP4
0xa56 PUSH1 0x3
0xa58 ADD
0xa59 SLOAD
0xa5a SWAP1
0xa5b DUP2
0xa5c ISZERO
0xa5d MUL
0xa5e SWAP1
0xa5f PUSH1 0x40
0xa61 MLOAD
0xa62 PUSH1 0x0
0xa64 PUSH1 0x40
0xa66 MLOAD
0xa67 DUP1
0xa68 DUP4
0xa69 SUB
0xa6a DUP2
0xa6b DUP6
0xa6c DUP9
0xa6d DUP9
0xa6e CALL
0xa6f SWAP4
0xa70 POP
0xa71 POP
0xa72 POP
0xa73 POP
0xa74 ISZERO
0xa75 ISZERO
0xa76 PUSH2 0xa7e
0xa79 JUMPI
---
0xa3a: JUMPDEST 
0xa3b: V686 = CALLER
0xa3c: V687 = 0xffffffffffffffffffffffffffffffffffffffff
0xa51: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff V686
0xa52: V689 = 0x8fc
0xa56: V690 = 0x3
0xa58: V691 = ADD 0x3 V578
0xa59: V692 = S[V691]
0xa5c: V693 = ISZERO V692
0xa5d: V694 = MUL V693 0x8fc
0xa5f: V695 = 0x40
0xa61: V696 = M[0x40]
0xa62: V697 = 0x0
0xa64: V698 = 0x40
0xa66: V699 = M[0x40]
0xa69: V700 = SUB V696 V699
0xa6e: V701 = CALL V694 V688 V692 V699 V700 V699 0x0
0xa74: V702 = ISZERO V701
0xa75: V703 = ISZERO V702
0xa76: V704 = 0xa7e
0xa79: JUMPI 0xa7e V703
---
Entry stack: [V11, 0x229, V121, V553, V578, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x229, V121, V553, V578, 0x0]

================================

Block 0xa7a
[0xa7a:0xa7d]
---
Predecessors: [0xa3a]
Successors: []
---
0xa7a PUSH1 0x0
0xa7c DUP1
0xa7d REVERT
---
0xa7a: V705 = 0x0
0xa7d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x229, V121, V553, V578, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x229, V121, V553, V578, 0x0]

================================

Block 0xa7e
[0xa7e:0xa7e]
---
Predecessors: [0xa3a]
Successors: [0xa7f]
---
0xa7e JUMPDEST
---
0xa7e: JUMPDEST 
---
Entry stack: [V11, 0x229, V121, V553, V578, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x229, V121, V553, V578, 0x0]

================================

Block 0xa7f
[0xa7f:0xa84]
---
Predecessors: [0xa2a, 0xa7e]
Successors: [0x229]
---
0xa7f JUMPDEST
0xa80 POP
0xa81 POP
0xa82 POP
0xa83 POP
0xa84 JUMP
---
0xa7f: JUMPDEST 
0xa84: JUMP 0x229
---
Entry stack: [V11, 0x229, V121, V553, V578, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0xa85
[0xa85:0xb04]
---
Predecessors: [0x236]
Successors: [0xb05, 0xb09]
---
0xa85 JUMPDEST
0xa86 PUSH1 0x0
0xa88 DUP1
0xa89 PUSH1 0x0
0xa8b DUP1
0xa8c DUP5
0xa8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa2 AND
0xaa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab8 AND
0xab9 DUP2
0xaba MSTORE
0xabb PUSH1 0x20
0xabd ADD
0xabe SWAP1
0xabf DUP2
0xac0 MSTORE
0xac1 PUSH1 0x20
0xac3 ADD
0xac4 PUSH1 0x0
0xac6 SHA3
0xac7 PUSH1 0x0
0xac9 DUP6
0xaca PUSH12 0xffffffffffffffffffffffff
0xad7 NOT
0xad8 AND
0xad9 PUSH12 0xffffffffffffffffffffffff
0xae6 NOT
0xae7 AND
0xae8 DUP2
0xae9 MSTORE
0xaea PUSH1 0x20
0xaec ADD
0xaed SWAP1
0xaee DUP2
0xaef MSTORE
0xaf0 PUSH1 0x20
0xaf2 ADD
0xaf3 PUSH1 0x0
0xaf5 SHA3
0xaf6 SWAP2
0xaf7 POP
0xaf8 DUP2
0xaf9 PUSH1 0x0
0xafb ADD
0xafc SLOAD
0xafd TIMESTAMP
0xafe GT
0xaff ISZERO
0xb00 ISZERO
0xb01 PUSH2 0xb09
0xb04 JUMPI
---
0xa85: JUMPDEST 
0xa86: V706 = 0x0
0xa89: V707 = 0x0
0xa8d: V708 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa2: V709 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0xaa3: V710 = 0xffffffffffffffffffffffffffffffffffffffff
0xab8: V711 = AND 0xffffffffffffffffffffffffffffffffffffffff V709
0xaba: M[0x0] = V711
0xabb: V712 = 0x20
0xabd: V713 = ADD 0x20 0x0
0xac0: M[0x20] = 0x0
0xac1: V714 = 0x20
0xac3: V715 = ADD 0x20 0x20
0xac4: V716 = 0x0
0xac6: V717 = SHA3 0x0 0x40
0xac7: V718 = 0x0
0xaca: V719 = 0xffffffffffffffffffffffff
0xad7: V720 = NOT 0xffffffffffffffffffffffff
0xad8: V721 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V134
0xad9: V722 = 0xffffffffffffffffffffffff
0xae6: V723 = NOT 0xffffffffffffffffffffffff
0xae7: V724 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V721
0xae9: M[0x0] = V724
0xaea: V725 = 0x20
0xaec: V726 = ADD 0x20 0x0
0xaef: M[0x20] = V717
0xaf0: V727 = 0x20
0xaf2: V728 = ADD 0x20 0x20
0xaf3: V729 = 0x0
0xaf5: V730 = SHA3 0x0 0x40
0xaf9: V731 = 0x0
0xafb: V732 = ADD 0x0 V730
0xafc: V733 = S[V732]
0xafd: V734 = TIMESTAMP
0xafe: V735 = GT V734 V733
0xaff: V736 = ISZERO V735
0xb00: V737 = ISZERO V736
0xb01: V738 = 0xb09
0xb04: JUMPI 0xb09 V737
---
Entry stack: [V11, 0x27a, V134, V139]
Stack pops: 2
Stack additions: [S1, S0, V730, 0x0]
Exit stack: [V11, 0x27a, V134, V139, V730, 0x0]

================================

Block 0xb05
[0xb05:0xb08]
---
Predecessors: [0xa85]
Successors: []
---
0xb05 PUSH1 0x0
0xb07 DUP1
0xb08 REVERT
---
0xb05: V739 = 0x0
0xb08: REVERT 0x0 0x0
---
Entry stack: [V11, 0x27a, V134, V139, V730, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x27a, V134, V139, V730, 0x0]

================================

Block 0xb09
[0xb09:0xb62]
---
Predecessors: [0xa85]
Successors: [0xb63, 0xb67]
---
0xb09 JUMPDEST
0xb0a DUP2
0xb0b PUSH1 0x1
0xb0d ADD
0xb0e PUSH1 0x0
0xb10 SWAP1
0xb11 SLOAD
0xb12 SWAP1
0xb13 PUSH2 0x100
0xb16 EXP
0xb17 SWAP1
0xb18 DIV
0xb19 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2e AND
0xb2f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb44 AND
0xb45 CALLER
0xb46 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5b AND
0xb5c EQ
0xb5d ISZERO
0xb5e ISZERO
0xb5f PUSH2 0xb67
0xb62 JUMPI
---
0xb09: JUMPDEST 
0xb0b: V740 = 0x1
0xb0d: V741 = ADD 0x1 V730
0xb0e: V742 = 0x0
0xb11: V743 = S[V741]
0xb13: V744 = 0x100
0xb16: V745 = EXP 0x100 0x0
0xb18: V746 = DIV V743 0x1
0xb19: V747 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2e: V748 = AND 0xffffffffffffffffffffffffffffffffffffffff V746
0xb2f: V749 = 0xffffffffffffffffffffffffffffffffffffffff
0xb44: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff V748
0xb45: V751 = CALLER
0xb46: V752 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5b: V753 = AND 0xffffffffffffffffffffffffffffffffffffffff V751
0xb5c: V754 = EQ V753 V750
0xb5d: V755 = ISZERO V754
0xb5e: V756 = ISZERO V755
0xb5f: V757 = 0xb67
0xb62: JUMPI 0xb67 V756
---
Entry stack: [V11, 0x27a, V134, V139, V730, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x27a, V134, V139, V730, 0x0]

================================

Block 0xb63
[0xb63:0xb66]
---
Predecessors: [0xb09]
Successors: []
---
0xb63 PUSH1 0x0
0xb65 DUP1
0xb66 REVERT
---
0xb63: V758 = 0x0
0xb66: REVERT 0x0 0x0
---
Entry stack: [V11, 0x27a, V134, V139, V730, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x27a, V134, V139, V730, 0x0]

================================

Block 0xb67
[0xb67:0xb7f]
---
Predecessors: [0xb09]
Successors: [0xb80, 0xb84]
---
0xb67 JUMPDEST
0xb68 DUP2
0xb69 PUSH1 0x4
0xb6b ADD
0xb6c PUSH1 0x15
0xb6e SWAP1
0xb6f SLOAD
0xb70 SWAP1
0xb71 PUSH2 0x100
0xb74 EXP
0xb75 SWAP1
0xb76 DIV
0xb77 PUSH1 0xff
0xb79 AND
0xb7a ISZERO
0xb7b ISZERO
0xb7c PUSH2 0xb84
0xb7f JUMPI
---
0xb67: JUMPDEST 
0xb69: V759 = 0x4
0xb6b: V760 = ADD 0x4 V730
0xb6c: V761 = 0x15
0xb6f: V762 = S[V760]
0xb71: V763 = 0x100
0xb74: V764 = EXP 0x100 0x15
0xb76: V765 = DIV V762 0x1000000000000000000000000000000000000000000
0xb77: V766 = 0xff
0xb79: V767 = AND 0xff V765
0xb7a: V768 = ISZERO V767
0xb7b: V769 = ISZERO V768
0xb7c: V770 = 0xb84
0xb7f: JUMPI 0xb84 V769
---
Entry stack: [V11, 0x27a, V134, V139, V730, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x27a, V134, V139, V730, 0x0]

================================

Block 0xb80
[0xb80:0xb83]
---
Predecessors: [0xb67]
Successors: []
---
0xb80 PUSH1 0x0
0xb82 DUP1
0xb83 REVERT
---
0xb80: V771 = 0x0
0xb83: REVERT 0x0 0x0
---
Entry stack: [V11, 0x27a, V134, V139, V730, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x27a, V134, V139, V730, 0x0]

================================

Block 0xb84
[0xb84:0xbb8]
---
Predecessors: [0xb67]
Successors: [0xbb9, 0xcaf]
---
0xb84 JUMPDEST
0xb85 PUSH1 0x0
0xb87 DUP3
0xb88 PUSH1 0x4
0xb8a ADD
0xb8b PUSH1 0x15
0xb8d PUSH2 0x100
0xb90 EXP
0xb91 DUP2
0xb92 SLOAD
0xb93 DUP2
0xb94 PUSH1 0xff
0xb96 MUL
0xb97 NOT
0xb98 AND
0xb99 SWAP1
0xb9a DUP4
0xb9b ISZERO
0xb9c ISZERO
0xb9d MUL
0xb9e OR
0xb9f SWAP1
0xba0 SSTORE
0xba1 POP
0xba2 DUP2
0xba3 PUSH1 0x4
0xba5 ADD
0xba6 PUSH1 0x0
0xba8 SWAP1
0xba9 SLOAD
0xbaa SWAP1
0xbab PUSH2 0x100
0xbae EXP
0xbaf SWAP1
0xbb0 DIV
0xbb1 PUSH1 0xff
0xbb3 AND
0xbb4 ISZERO
0xbb5 PUSH2 0xcaf
0xbb8 JUMPI
---
0xb84: JUMPDEST 
0xb85: V772 = 0x0
0xb88: V773 = 0x4
0xb8a: V774 = ADD 0x4 V730
0xb8b: V775 = 0x15
0xb8d: V776 = 0x100
0xb90: V777 = EXP 0x100 0x15
0xb92: V778 = S[V774]
0xb94: V779 = 0xff
0xb96: V780 = MUL 0xff 0x1000000000000000000000000000000000000000000
0xb97: V781 = NOT 0xff000000000000000000000000000000000000000000
0xb98: V782 = AND 0xffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff V778
0xb9b: V783 = ISZERO 0x0
0xb9c: V784 = ISZERO 0x1
0xb9d: V785 = MUL 0x0 0x1000000000000000000000000000000000000000000
0xb9e: V786 = OR 0x0 V782
0xba0: S[V774] = V786
0xba3: V787 = 0x4
0xba5: V788 = ADD 0x4 V730
0xba6: V789 = 0x0
0xba9: V790 = S[V788]
0xbab: V791 = 0x100
0xbae: V792 = EXP 0x100 0x0
0xbb0: V793 = DIV V790 0x1
0xbb1: V794 = 0xff
0xbb3: V795 = AND 0xff V793
0xbb4: V796 = ISZERO V795
0xbb5: V797 = 0xcaf
0xbb8: JUMPI 0xcaf V796
---
Entry stack: [V11, 0x27a, V134, V139, V730, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x27a, V134, V139, V730, 0x0]

================================

Block 0xbb9
[0xbb9:0xc89]
---
Predecessors: [0xb84]
Successors: [0xc8a, 0xc8e]
---
0xbb9 DUP2
0xbba PUSH1 0x4
0xbbc ADD
0xbbd PUSH1 0x1
0xbbf SWAP1
0xbc0 SLOAD
0xbc1 SWAP1
0xbc2 PUSH2 0x100
0xbc5 EXP
0xbc6 SWAP1
0xbc7 DIV
0xbc8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbdd AND
0xbde SWAP1
0xbdf POP
0xbe0 DUP1
0xbe1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf6 AND
0xbf7 PUSH4 0xa9059cbb
0xbfc CALLER
0xbfd DUP5
0xbfe PUSH1 0x3
0xc00 ADD
0xc01 SLOAD
0xc02 PUSH1 0x0
0xc04 PUSH1 0x40
0xc06 MLOAD
0xc07 PUSH1 0x20
0xc09 ADD
0xc0a MSTORE
0xc0b PUSH1 0x40
0xc0d MLOAD
0xc0e DUP4
0xc0f PUSH4 0xffffffff
0xc14 AND
0xc15 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc33 MUL
0xc34 DUP2
0xc35 MSTORE
0xc36 PUSH1 0x4
0xc38 ADD
0xc39 DUP1
0xc3a DUP4
0xc3b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc50 AND
0xc51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc66 AND
0xc67 DUP2
0xc68 MSTORE
0xc69 PUSH1 0x20
0xc6b ADD
0xc6c DUP3
0xc6d DUP2
0xc6e MSTORE
0xc6f PUSH1 0x20
0xc71 ADD
0xc72 SWAP3
0xc73 POP
0xc74 POP
0xc75 POP
0xc76 PUSH1 0x20
0xc78 PUSH1 0x40
0xc7a MLOAD
0xc7b DUP1
0xc7c DUP4
0xc7d SUB
0xc7e DUP2
0xc7f PUSH1 0x0
0xc81 DUP8
0xc82 DUP1
0xc83 EXTCODESIZE
0xc84 ISZERO
0xc85 ISZERO
0xc86 PUSH2 0xc8e
0xc89 JUMPI
---
0xbba: V798 = 0x4
0xbbc: V799 = ADD 0x4 V730
0xbbd: V800 = 0x1
0xbc0: V801 = S[V799]
0xbc2: V802 = 0x100
0xbc5: V803 = EXP 0x100 0x1
0xbc7: V804 = DIV V801 0x100
0xbc8: V805 = 0xffffffffffffffffffffffffffffffffffffffff
0xbdd: V806 = AND 0xffffffffffffffffffffffffffffffffffffffff V804
0xbe1: V807 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf6: V808 = AND 0xffffffffffffffffffffffffffffffffffffffff V806
0xbf7: V809 = 0xa9059cbb
0xbfc: V810 = CALLER
0xbfe: V811 = 0x3
0xc00: V812 = ADD 0x3 V730
0xc01: V813 = S[V812]
0xc02: V814 = 0x0
0xc04: V815 = 0x40
0xc06: V816 = M[0x40]
0xc07: V817 = 0x20
0xc09: V818 = ADD 0x20 V816
0xc0a: M[V818] = 0x0
0xc0b: V819 = 0x40
0xc0d: V820 = M[0x40]
0xc0f: V821 = 0xffffffff
0xc14: V822 = AND 0xffffffff 0xa9059cbb
0xc15: V823 = 0x100000000000000000000000000000000000000000000000000000000
0xc33: V824 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xc35: M[V820] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc36: V825 = 0x4
0xc38: V826 = ADD 0x4 V820
0xc3b: V827 = 0xffffffffffffffffffffffffffffffffffffffff
0xc50: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff V810
0xc51: V829 = 0xffffffffffffffffffffffffffffffffffffffff
0xc66: V830 = AND 0xffffffffffffffffffffffffffffffffffffffff V828
0xc68: M[V826] = V830
0xc69: V831 = 0x20
0xc6b: V832 = ADD 0x20 V826
0xc6e: M[V832] = V813
0xc6f: V833 = 0x20
0xc71: V834 = ADD 0x20 V832
0xc76: V835 = 0x20
0xc78: V836 = 0x40
0xc7a: V837 = M[0x40]
0xc7d: V838 = SUB V834 V837
0xc7f: V839 = 0x0
0xc83: V840 = EXTCODESIZE V808
0xc84: V841 = ISZERO V840
0xc85: V842 = ISZERO V841
0xc86: V843 = 0xc8e
0xc89: JUMPI 0xc8e V842
---
Entry stack: [V11, 0x27a, V134, V139, V730, 0x0]
Stack pops: 2
Stack additions: [S1, V806, V808, 0xa9059cbb, V834, 0x20, V837, V838, V837, 0x0, V808]
Exit stack: [V11, 0x27a, V134, V139, V730, V806, V808, 0xa9059cbb, V834, 0x20, V837, V838, V837, 0x0, V808]

================================

Block 0xc8a
[0xc8a:0xc8d]
---
Predecessors: [0xbb9]
Successors: []
---
0xc8a PUSH1 0x0
0xc8c DUP1
0xc8d REVERT
---
0xc8a: V844 = 0x0
0xc8d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x27a, V134, V139, V730, V806, V808, 0xa9059cbb, V834, 0x20, V837, V838, V837, 0x0, V808]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x27a, V134, V139, V730, V806, V808, 0xa9059cbb, V834, 0x20, V837, V838, V837, 0x0, V808]

================================

Block 0xc8e
[0xc8e:0xc9a]
---
Predecessors: [0xbb9]
Successors: [0xc9b, 0xc9f]
---
0xc8e JUMPDEST
0xc8f PUSH2 0x2c6
0xc92 GAS
0xc93 SUB
0xc94 CALL
0xc95 ISZERO
0xc96 ISZERO
0xc97 PUSH2 0xc9f
0xc9a JUMPI
---
0xc8e: JUMPDEST 
0xc8f: V845 = 0x2c6
0xc92: V846 = GAS
0xc93: V847 = SUB V846 0x2c6
0xc94: V848 = CALL V847 V808 0x0 V837 V838 V837 0x20
0xc95: V849 = ISZERO V848
0xc96: V850 = ISZERO V849
0xc97: V851 = 0xc9f
0xc9a: JUMPI 0xc9f V850
---
Entry stack: [V11, 0x27a, V134, V139, V730, V806, V808, 0xa9059cbb, V834, 0x20, V837, V838, V837, 0x0, V808]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x27a, V134, V139, V730, V806, V808, 0xa9059cbb, V834]

================================

Block 0xc9b
[0xc9b:0xc9e]
---
Predecessors: [0xc8e]
Successors: []
---
0xc9b PUSH1 0x0
0xc9d DUP1
0xc9e REVERT
---
0xc9b: V852 = 0x0
0xc9e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x27a, V134, V139, V730, V806, V808, 0xa9059cbb, V834]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x27a, V134, V139, V730, V806, V808, 0xa9059cbb, V834]

================================

Block 0xc9f
[0xc9f:0xcae]
---
Predecessors: [0xc8e]
Successors: [0xcf4]
---
0xc9f JUMPDEST
0xca0 POP
0xca1 POP
0xca2 POP
0xca3 PUSH1 0x40
0xca5 MLOAD
0xca6 DUP1
0xca7 MLOAD
0xca8 SWAP1
0xca9 POP
0xcaa POP
0xcab PUSH2 0xcf4
0xcae JUMP
---
0xc9f: JUMPDEST 
0xca3: V853 = 0x40
0xca5: V854 = M[0x40]
0xca7: V855 = M[V854]
0xcab: V856 = 0xcf4
0xcae: JUMP 0xcf4
---
Entry stack: [V11, 0x27a, V134, V139, V730, V806, V808, 0xa9059cbb, V834]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x27a, V134, V139, V730, V806]

================================

Block 0xcaf
[0xcaf:0xcee]
---
Predecessors: [0xb84]
Successors: [0xcef, 0xcf3]
---
0xcaf JUMPDEST
0xcb0 CALLER
0xcb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcc6 AND
0xcc7 PUSH2 0x8fc
0xcca DUP4
0xccb PUSH1 0x3
0xccd ADD
0xcce SLOAD
0xccf SWAP1
0xcd0 DUP2
0xcd1 ISZERO
0xcd2 MUL
0xcd3 SWAP1
0xcd4 PUSH1 0x40
0xcd6 MLOAD
0xcd7 PUSH1 0x0
0xcd9 PUSH1 0x40
0xcdb MLOAD
0xcdc DUP1
0xcdd DUP4
0xcde SUB
0xcdf DUP2
0xce0 DUP6
0xce1 DUP9
0xce2 DUP9
0xce3 CALL
0xce4 SWAP4
0xce5 POP
0xce6 POP
0xce7 POP
0xce8 POP
0xce9 ISZERO
0xcea ISZERO
0xceb PUSH2 0xcf3
0xcee JUMPI
---
0xcaf: JUMPDEST 
0xcb0: V857 = CALLER
0xcb1: V858 = 0xffffffffffffffffffffffffffffffffffffffff
0xcc6: V859 = AND 0xffffffffffffffffffffffffffffffffffffffff V857
0xcc7: V860 = 0x8fc
0xccb: V861 = 0x3
0xccd: V862 = ADD 0x3 V730
0xcce: V863 = S[V862]
0xcd1: V864 = ISZERO V863
0xcd2: V865 = MUL V864 0x8fc
0xcd4: V866 = 0x40
0xcd6: V867 = M[0x40]
0xcd7: V868 = 0x0
0xcd9: V869 = 0x40
0xcdb: V870 = M[0x40]
0xcde: V871 = SUB V867 V870
0xce3: V872 = CALL V865 V859 V863 V870 V871 V870 0x0
0xce9: V873 = ISZERO V872
0xcea: V874 = ISZERO V873
0xceb: V875 = 0xcf3
0xcee: JUMPI 0xcf3 V874
---
Entry stack: [V11, 0x27a, V134, V139, V730, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x27a, V134, V139, V730, 0x0]

================================

Block 0xcef
[0xcef:0xcf2]
---
Predecessors: [0xcaf]
Successors: []
---
0xcef PUSH1 0x0
0xcf1 DUP1
0xcf2 REVERT
---
0xcef: V876 = 0x0
0xcf2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x27a, V134, V139, V730, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x27a, V134, V139, V730, 0x0]

================================

Block 0xcf3
[0xcf3:0xcf3]
---
Predecessors: [0xcaf]
Successors: [0xcf4]
---
0xcf3 JUMPDEST
---
0xcf3: JUMPDEST 
---
Entry stack: [V11, 0x27a, V134, V139, V730, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x27a, V134, V139, V730, 0x0]

================================

Block 0xcf4
[0xcf4:0xcf9]
---
Predecessors: [0xc9f, 0xcf3]
Successors: [0x27a]
---
0xcf4 JUMPDEST
0xcf5 POP
0xcf6 POP
0xcf7 POP
0xcf8 POP
0xcf9 JUMP
---
0xcf4: JUMPDEST 
0xcf9: JUMP 0x27a
---
Entry stack: [V11, 0x27a, V134, V139, V730, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0xcfa
[0xcfa:0xd25]
---
Predecessors: []
Successors: []
---
0xcfa STOP
0xcfb LOG1
0xcfc PUSH6 0x627a7a723058
0xd03 SHA3
0xd04 DUP1
0xd05 MISSING 0xc2
0xd06 DUP6
0xd07 SWAP1
0xd08 MISSING 0xda
0xd09 MISSING 0xee
0xd0a TIMESTAMP
0xd0b XOR
0xd0c PUSH24 0x3406d0edfd8b337dede21fdd2c4ccf23ee33cd4440936900
0xd25 MISSING 0x29
---
0xcfa: STOP 
0xcfb: LOG S0 S1 S2
0xcfc: V877 = 0x627a7a723058
0xd03: V878 = SHA3 0x627a7a723058 S3
0xd05: MISSING 0xc2
0xd08: MISSING 0xda
0xd09: MISSING 0xee
0xd0a: V879 = TIMESTAMP
0xd0b: V880 = XOR V879 S0
0xd0c: V881 = 0x3406d0edfd8b337dede21fdd2c4ccf23ee33cd4440936900
0xd25: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V878, V878, S0, S5, S1, S2, S3, S4, S5, 0x3406d0edfd8b337dede21fdd2c4ccf23ee33cd4440936900, V880]
Exit stack: []

================================

Function 0:
Public function signature: 0x7337c993
Entry block: 0x67
Exit block: 0x514
Body: 0x67, 0xe7, 0x27c, 0x30e, 0x312, 0x31c, 0x320, 0x327, 0x3fd, 0x401, 0x40e, 0x412, 0x424, 0x428, 0x503, 0x507, 0x514, 0x518, 0x524, 0x574, 0x579, 0x57b

Function 1:
Public function signature: 0xe2ca481c
Entry block: 0xe9
Exit block: 0x138
Body: 0xe9, 0xf0, 0xf4, 0x138, 0x74e

Function 2:
Public function signature: 0xeda1122c
Entry block: 0x204
Exit block: 0x229
Body: 0x204, 0x20b, 0x20f, 0x229, 0x817, 0x856, 0x85a, 0x8f9, 0x8fd, 0x90b, 0x90f, 0x944, 0xa15, 0xa19, 0xa26, 0xa2a, 0xa3a, 0xa7a, 0xa7e, 0xa7f

Function 3:
Public function signature: 0xf66c75e5
Entry block: 0x22b
Exit block: 0x27a
Body: 0x22b, 0x232, 0x236, 0x27a, 0xa85, 0xb05, 0xb09, 0xb63, 0xb67, 0xb80, 0xb84, 0xbb9, 0xc8a, 0xc8e, 0xc9b, 0xc9f, 0xcaf, 0xcef, 0xcf3, 0xcf4

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

