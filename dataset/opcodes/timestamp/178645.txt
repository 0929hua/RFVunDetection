Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x82]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x82
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x82
0xa: JUMPI 0x82 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x8a]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x1998aeef
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x8a
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x1998aeef
0x1a: V12 = EQ V10 0x1998aeef
0x1b: V13 = 0x8a
0x1e: JUMPI 0x8a V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xa0]
---
0x1f DUP1
0x20 PUSH4 0x2a24f46c
0x25 EQ
0x26 PUSH2 0xa0
0x29 JUMPI
---
0x20: V14 = 0x2a24f46c
0x25: V15 = EQ 0x2a24f46c V10
0x26: V16 = 0xa0
0x29: JUMPI 0xa0 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xba]
---
0x2a DUP1
0x2b PUSH4 0x38af3eed
0x30 EQ
0x31 PUSH2 0xba
0x34 JUMPI
---
0x2b: V17 = 0x38af3eed
0x30: V18 = EQ 0x38af3eed V10
0x31: V19 = 0xba
0x34: JUMPI 0xba V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xd1]
---
0x35 DUP1
0x36 PUSH4 0x3ccfd60b
0x3b EQ
0x3c PUSH2 0xd1
0x3f JUMPI
---
0x36: V20 = 0x3ccfd60b
0x3b: V21 = EQ 0x3ccfd60b V10
0x3c: V22 = 0xd1
0x3f: JUMPI 0xd1 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x15a]
---
0x40 DUP1
0x41 PUSH4 0x4f245ef7
0x46 EQ
0x47 PUSH2 0x15a
0x4a JUMPI
---
0x41: V23 = 0x4f245ef7
0x46: V24 = EQ 0x4f245ef7 V10
0x47: V25 = 0x15a
0x4a: JUMPI 0x15a V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x168]
---
0x4b DUP1
0x4c PUSH4 0x630c60c9
0x51 EQ
0x52 PUSH2 0x168
0x55 JUMPI
---
0x4c: V26 = 0x630c60c9
0x51: V27 = EQ 0x630c60c9 V10
0x52: V28 = 0x168
0x55: JUMPI 0x168 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x176]
---
0x56 DUP1
0x57 PUSH4 0x6899d8c2
0x5c EQ
0x5d PUSH2 0x176
0x60 JUMPI
---
0x57: V29 = 0x6899d8c2
0x5c: V30 = EQ 0x6899d8c2 V10
0x5d: V31 = 0x176
0x60: JUMPI 0x176 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x194]
---
0x61 DUP1
0x62 PUSH4 0x91f90157
0x67 EQ
0x68 PUSH2 0x194
0x6b JUMPI
---
0x62: V32 = 0x91f90157
0x67: V33 = EQ 0x91f90157 V10
0x68: V34 = 0x194
0x6b: JUMPI 0x194 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1ab]
---
0x6c DUP1
0x6d PUSH4 0xd074a38d
0x72 EQ
0x73 PUSH2 0x1ab
0x76 JUMPI
---
0x6d: V35 = 0xd074a38d
0x72: V36 = EQ 0xd074a38d V10
0x73: V37 = 0x1ab
0x76: JUMPI 0x1ab V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1b9]
---
0x77 DUP1
0x78 PUSH4 0xd57bde79
0x7d EQ
0x7e PUSH2 0x1b9
0x81 JUMPI
---
0x78: V38 = 0xd57bde79
0x7d: V39 = EQ 0xd57bde79 V10
0x7e: V40 = 0x1b9
0x81: JUMPI 0x1b9 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x89]
---
Predecessors: [0x0, 0x77]
Successors: []
---
0x82 JUMPDEST
0x83 PUSH2 0x1c7
0x86 PUSH2 0x2
0x89 JUMP
---
0x82: JUMPDEST 
0x83: V41 = 0x1c7
0x86: V42 = 0x2
0x89: THROW 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c7]
Exit stack: [V10, 0x1c7]

================================

Block 0x8a
[0x8a:0x9b]
---
Predecessors: [0xb]
Successors: [0x9c, 0x2b8]
---
0x8a JUMPDEST
0x8b PUSH2 0x1c7
0x8e PUSH1 0x1
0x90 SLOAD
0x91 PUSH1 0x2
0x93 SLOAD
0x94 ADD
0x95 TIMESTAMP
0x96 GT
0x97 ISZERO
0x98 PUSH2 0x2b8
0x9b JUMPI
---
0x8a: JUMPDEST 
0x8b: V43 = 0x1c7
0x8e: V44 = 0x1
0x90: V45 = S[0x1]
0x91: V46 = 0x2
0x93: V47 = S[0x2]
0x94: V48 = ADD V47 V45
0x95: V49 = TIMESTAMP
0x96: V50 = GT V49 V48
0x97: V51 = ISZERO V50
0x98: V52 = 0x2b8
0x9b: JUMPI 0x2b8 V51
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c7]
Exit stack: [V10, 0x1c7]

================================

Block 0x9c
[0x9c:0x9f]
---
Predecessors: [0x8a]
Successors: []
---
0x9c PUSH2 0x2
0x9f JUMP
---
0x9c: V53 = 0x2
0x9f: THROW 
---
Entry stack: [V10, 0x1c7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c7]

================================

Block 0xa0
[0xa0:0xa5]
---
Predecessors: [0x1f]
Successors: [0xa6]
---
0xa0 JUMPDEST
0xa1 CALLVALUE
0xa2 PUSH2 0x2
0xa5 JUMPI
---
0xa0: JUMPDEST 
0xa1: V54 = CALLVALUE
0xa2: V55 = 0x2
0xa5: THROWI V54
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa6
[0xa6:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x2c6]
---
0xa6 PUSH2 0x1c7
0xa9 PUSH1 0x1
0xab SLOAD
0xac PUSH1 0x2
0xae SLOAD
0xaf ADD
0xb0 TIMESTAMP
0xb1 GT
0xb2 PUSH2 0x2c6
0xb5 JUMPI
---
0xa6: V56 = 0x1c7
0xa9: V57 = 0x1
0xab: V58 = S[0x1]
0xac: V59 = 0x2
0xae: V60 = S[0x2]
0xaf: V61 = ADD V60 V58
0xb0: V62 = TIMESTAMP
0xb1: V63 = GT V62 V61
0xb2: V64 = 0x2c6
0xb5: JUMPI 0x2c6 V63
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c7]
Exit stack: [V10, 0x1c7]

================================

Block 0xb6
[0xb6:0xb9]
---
Predecessors: [0xa6]
Successors: []
---
0xb6 PUSH2 0x2
0xb9 JUMP
---
0xb6: V65 = 0x2
0xb9: THROW 
---
Entry stack: [V10, 0x1c7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c7]

================================

Block 0xba
[0xba:0xbf]
---
Predecessors: [0x2a]
Successors: [0xc0]
---
0xba JUMPDEST
0xbb CALLVALUE
0xbc PUSH2 0x2
0xbf JUMPI
---
0xba: JUMPDEST 
0xbb: V66 = CALLVALUE
0xbc: V67 = 0x2
0xbf: THROWI V66
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc0
[0xc0:0xd0]
---
Predecessors: [0xba]
Successors: [0x1cb]
---
0xc0 PUSH2 0x1cb
0xc3 PUSH1 0x0
0xc5 SLOAD
0xc6 PUSH1 0x1
0xc8 PUSH1 0xa0
0xca PUSH1 0x2
0xcc EXP
0xcd SUB
0xce AND
0xcf DUP2
0xd0 JUMP
---
0xc0: V68 = 0x1cb
0xc3: V69 = 0x0
0xc5: V70 = S[0x0]
0xc6: V71 = 0x1
0xc8: V72 = 0xa0
0xca: V73 = 0x2
0xcc: V74 = EXP 0x2 0xa0
0xcd: V75 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0xd0: JUMP 0x1cb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1cb, V76]
Exit stack: [V10, 0x1cb, V76]

================================

Block 0xd1
[0xd1:0xd6]
---
Predecessors: [0x35]
Successors: [0xd7]
---
0xd1 JUMPDEST
0xd2 CALLVALUE
0xd3 PUSH2 0x2
0xd6 JUMPI
---
0xd1: JUMPDEST 
0xd2: V77 = CALLVALUE
0xd3: V78 = 0x2
0xd6: THROWI V77
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd7
[0xd7:0xfa]
---
Predecessors: [0xd1]
Successors: [0xfb, 0x37c]
---
0xd7 PUSH2 0x1e7
0xda CALLER
0xdb PUSH1 0x1
0xdd PUSH1 0xa0
0xdf PUSH1 0x2
0xe1 EXP
0xe2 SUB
0xe3 AND
0xe4 PUSH1 0x0
0xe6 SWAP1
0xe7 DUP2
0xe8 MSTORE
0xe9 PUSH1 0x6
0xeb PUSH1 0x20
0xed MSTORE
0xee PUSH1 0x40
0xf0 DUP2
0xf1 SHA3
0xf2 SLOAD
0xf3 DUP2
0xf4 DUP2
0xf5 GT
0xf6 ISZERO
0xf7 PUSH2 0x37c
0xfa JUMPI
---
0xd7: V79 = 0x1e7
0xda: V80 = CALLER
0xdb: V81 = 0x1
0xdd: V82 = 0xa0
0xdf: V83 = 0x2
0xe1: V84 = EXP 0x2 0xa0
0xe2: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe3: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0xe4: V87 = 0x0
0xe8: M[0x0] = V86
0xe9: V88 = 0x6
0xeb: V89 = 0x20
0xed: M[0x20] = 0x6
0xee: V90 = 0x40
0xf1: V91 = SHA3 0x0 0x40
0xf2: V92 = S[V91]
0xf5: V93 = GT V92 0x0
0xf6: V94 = ISZERO V93
0xf7: V95 = 0x37c
0xfa: JUMPI 0x37c V94
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e7, 0x0, V92]
Exit stack: [V10, 0x1e7, 0x0, V92]

================================

Block 0xfb
[0xfb:0x12a]
---
Predecessors: [0xd7]
Successors: [0x12b, 0x37c]
---
0xfb PUSH1 0x40
0xfd DUP1
0xfe DUP4
0xff SHA3
0x100 DUP4
0x101 SWAP1
0x102 SSTORE
0x103 MLOAD
0x104 CALLER
0x105 PUSH1 0x1
0x107 PUSH1 0xa0
0x109 PUSH1 0x2
0x10b EXP
0x10c SUB
0x10d AND
0x10e SWAP1
0x10f DUP3
0x110 ISZERO
0x111 PUSH2 0x8fc
0x114 MUL
0x115 SWAP1
0x116 DUP4
0x117 SWAP1
0x118 DUP6
0x119 DUP2
0x11a DUP2
0x11b DUP2
0x11c DUP6
0x11d DUP9
0x11e DUP9
0x11f CALL
0x120 SWAP4
0x121 POP
0x122 POP
0x123 POP
0x124 POP
0x125 ISZERO
0x126 ISZERO
0x127 PUSH2 0x37c
0x12a JUMPI
---
0xfb: V96 = 0x40
0xff: V97 = SHA3 0x0 0x40
0x102: S[V97] = 0x0
0x103: V98 = M[0x40]
0x104: V99 = CALLER
0x105: V100 = 0x1
0x107: V101 = 0xa0
0x109: V102 = 0x2
0x10b: V103 = EXP 0x2 0xa0
0x10c: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10d: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x110: V106 = ISZERO V92
0x111: V107 = 0x8fc
0x114: V108 = MUL 0x8fc V106
0x11f: V109 = CALL V108 V105 V92 V98 0x0 V98 0x0
0x125: V110 = ISZERO V109
0x126: V111 = ISZERO V110
0x127: V112 = 0x37c
0x12a: JUMPI 0x37c V111
---
Entry stack: [V10, 0x1e7, 0x0, V92]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x1e7, 0x0, V92]

================================

Block 0x12b
[0x12b:0x159]
---
Predecessors: [0xfb]
Successors: [0x381]
---
0x12b DUP1
0x12c PUSH1 0x6
0x12e PUSH1 0x0
0x130 POP
0x131 PUSH1 0x0
0x133 CALLER
0x134 PUSH1 0x1
0x136 PUSH1 0xa0
0x138 PUSH1 0x2
0x13a EXP
0x13b SUB
0x13c AND
0x13d DUP2
0x13e MSTORE
0x13f PUSH1 0x20
0x141 ADD
0x142 SWAP1
0x143 DUP2
0x144 MSTORE
0x145 PUSH1 0x20
0x147 ADD
0x148 PUSH1 0x0
0x14a SHA3
0x14b PUSH1 0x0
0x14d POP
0x14e DUP2
0x14f SWAP1
0x150 SSTORE
0x151 POP
0x152 PUSH1 0x0
0x154 SWAP2
0x155 POP
0x156 PUSH2 0x381
0x159 JUMP
---
0x12c: V113 = 0x6
0x12e: V114 = 0x0
0x131: V115 = 0x0
0x133: V116 = CALLER
0x134: V117 = 0x1
0x136: V118 = 0xa0
0x138: V119 = 0x2
0x13a: V120 = EXP 0x2 0xa0
0x13b: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13c: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x13e: M[0x0] = V122
0x13f: V123 = 0x20
0x141: V124 = ADD 0x20 0x0
0x144: M[0x20] = 0x6
0x145: V125 = 0x20
0x147: V126 = ADD 0x20 0x20
0x148: V127 = 0x0
0x14a: V128 = SHA3 0x0 0x40
0x14b: V129 = 0x0
0x150: S[V128] = V92
0x152: V130 = 0x0
0x156: V131 = 0x381
0x159: JUMP 0x381
---
Entry stack: [V10, 0x1e7, 0x0, V92]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x1e7, 0x0, V92]

================================

Block 0x15a
[0x15a:0x15f]
---
Predecessors: [0x40]
Successors: [0x160]
---
0x15a JUMPDEST
0x15b CALLVALUE
0x15c PUSH2 0x2
0x15f JUMPI
---
0x15a: JUMPDEST 
0x15b: V132 = CALLVALUE
0x15c: V133 = 0x2
0x15f: THROWI V132
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x160
[0x160:0x167]
---
Predecessors: [0x15a]
Successors: [0x1fb]
---
0x160 PUSH2 0x1fb
0x163 PUSH1 0x1
0x165 SLOAD
0x166 DUP2
0x167 JUMP
---
0x160: V134 = 0x1fb
0x163: V135 = 0x1
0x165: V136 = S[0x1]
0x167: JUMP 0x1fb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fb, V136]
Exit stack: [V10, 0x1fb, V136]

================================

Block 0x168
[0x168:0x16d]
---
Predecessors: [0x4b]
Successors: [0x16e]
---
0x168 JUMPDEST
0x169 CALLVALUE
0x16a PUSH2 0x2
0x16d JUMPI
---
0x168: JUMPDEST 
0x169: V137 = CALLVALUE
0x16a: V138 = 0x2
0x16d: THROWI V137
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16e
[0x16e:0x175]
---
Predecessors: [0x168]
Successors: [0x1fb]
---
0x16e PUSH2 0x1fb
0x171 PUSH1 0x3
0x173 SLOAD
0x174 DUP2
0x175 JUMP
---
0x16e: V139 = 0x1fb
0x171: V140 = 0x3
0x173: V141 = S[0x3]
0x175: JUMP 0x1fb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fb, V141]
Exit stack: [V10, 0x1fb, V141]

================================

Block 0x176
[0x176:0x17b]
---
Predecessors: [0x56]
Successors: [0x17c]
---
0x176 JUMPDEST
0x177 CALLVALUE
0x178 PUSH2 0x2
0x17b JUMPI
---
0x176: JUMPDEST 
0x177: V142 = CALLVALUE
0x178: V143 = 0x2
0x17b: THROWI V142
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x17c
[0x17c:0x18f]
---
Predecessors: [0x176]
Successors: [0x190, 0x38c]
---
0x17c PUSH2 0x1e7
0x17f PUSH1 0x3
0x181 SLOAD
0x182 PUSH1 0x1
0x184 SLOAD
0x185 PUSH1 0x0
0x187 SWAP2
0x188 ADD
0x189 TIMESTAMP
0x18a LT
0x18b ISZERO
0x18c PUSH2 0x38c
0x18f JUMPI
---
0x17c: V144 = 0x1e7
0x17f: V145 = 0x3
0x181: V146 = S[0x3]
0x182: V147 = 0x1
0x184: V148 = S[0x1]
0x185: V149 = 0x0
0x188: V150 = ADD V146 V148
0x189: V151 = TIMESTAMP
0x18a: V152 = LT V151 V150
0x18b: V153 = ISZERO V152
0x18c: V154 = 0x38c
0x18f: JUMPI 0x38c V153
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e7, 0x0]
Exit stack: [V10, 0x1e7, 0x0]

================================

Block 0x190
[0x190:0x193]
---
Predecessors: [0x17c]
Successors: []
---
0x190 PUSH2 0x2
0x193 JUMP
---
0x190: V155 = 0x2
0x193: THROW 
---
Entry stack: [V10, 0x1e7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, 0x0]

================================

Block 0x194
[0x194:0x199]
---
Predecessors: [0x61]
Successors: [0x19a]
---
0x194 JUMPDEST
0x195 CALLVALUE
0x196 PUSH2 0x2
0x199 JUMPI
---
0x194: JUMPDEST 
0x195: V156 = CALLVALUE
0x196: V157 = 0x2
0x199: THROWI V156
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x19a
[0x19a:0x1aa]
---
Predecessors: [0x194]
Successors: [0x1cb]
---
0x19a PUSH2 0x1cb
0x19d PUSH1 0x4
0x19f SLOAD
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0xa0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 SUB
0x1a8 AND
0x1a9 DUP2
0x1aa JUMP
---
0x19a: V158 = 0x1cb
0x19d: V159 = 0x4
0x19f: V160 = S[0x4]
0x1a0: V161 = 0x1
0x1a2: V162 = 0xa0
0x1a4: V163 = 0x2
0x1a6: V164 = EXP 0x2 0xa0
0x1a7: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a8: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x1aa: JUMP 0x1cb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1cb, V166]
Exit stack: [V10, 0x1cb, V166]

================================

Block 0x1ab
[0x1ab:0x1b0]
---
Predecessors: [0x6c]
Successors: [0x1b1]
---
0x1ab JUMPDEST
0x1ac CALLVALUE
0x1ad PUSH2 0x2
0x1b0 JUMPI
---
0x1ab: JUMPDEST 
0x1ac: V167 = CALLVALUE
0x1ad: V168 = 0x2
0x1b0: THROWI V167
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b1
[0x1b1:0x1b8]
---
Predecessors: [0x1ab]
Successors: [0x1fb]
---
0x1b1 PUSH2 0x1fb
0x1b4 PUSH1 0x2
0x1b6 SLOAD
0x1b7 DUP2
0x1b8 JUMP
---
0x1b1: V169 = 0x1fb
0x1b4: V170 = 0x2
0x1b6: V171 = S[0x2]
0x1b8: JUMP 0x1fb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fb, V171]
Exit stack: [V10, 0x1fb, V171]

================================

Block 0x1b9
[0x1b9:0x1be]
---
Predecessors: [0x77]
Successors: [0x1bf]
---
0x1b9 JUMPDEST
0x1ba CALLVALUE
0x1bb PUSH2 0x2
0x1be JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V172 = CALLVALUE
0x1bb: V173 = 0x2
0x1be: THROWI V172
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1bf
[0x1bf:0x1c6]
---
Predecessors: [0x1b9]
Successors: [0x1fb]
---
0x1bf PUSH2 0x1fb
0x1c2 PUSH1 0x5
0x1c4 SLOAD
0x1c5 DUP2
0x1c6 JUMP
---
0x1bf: V174 = 0x1fb
0x1c2: V175 = 0x5
0x1c4: V176 = S[0x5]
0x1c6: JUMP 0x1fb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fb, V176]
Exit stack: [V10, 0x1fb, V176]

================================

Block 0x1c7
[0x1c7:0x1c8]
---
Predecessors: [0x1c9, 0x248]
Successors: []
---
0x1c7 JUMPDEST
0x1c8 STOP
---
0x1c7: JUMPDEST 
0x1c8: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c9
[0x1c9:0x1ca]
---
Predecessors: [0x2d6]
Successors: [0x1c7]
---
0x1c9 JUMPDEST
0x1ca JUMP
---
0x1c9: JUMPDEST 
0x1ca: JUMP 0x1c7
---
Entry stack: [V10, 0x1c7]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cb
[0x1cb:0x1e6]
---
Predecessors: [0xc0, 0x19a]
Successors: []
---
0x1cb JUMPDEST
0x1cc PUSH1 0x40
0x1ce DUP1
0x1cf MLOAD
0x1d0 PUSH1 0x1
0x1d2 PUSH1 0xa0
0x1d4 PUSH1 0x2
0x1d6 EXP
0x1d7 SUB
0x1d8 SWAP1
0x1d9 SWAP3
0x1da AND
0x1db DUP3
0x1dc MSTORE
0x1dd MLOAD
0x1de SWAP1
0x1df DUP2
0x1e0 SWAP1
0x1e1 SUB
0x1e2 PUSH1 0x20
0x1e4 ADD
0x1e5 SWAP1
0x1e6 RETURN
---
0x1cb: JUMPDEST 
0x1cc: V177 = 0x40
0x1cf: V178 = M[0x40]
0x1d0: V179 = 0x1
0x1d2: V180 = 0xa0
0x1d4: V181 = 0x2
0x1d6: V182 = EXP 0x2 0xa0
0x1d7: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1da: V184 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1dc: M[V178] = V184
0x1dd: V185 = M[0x40]
0x1e1: V186 = SUB V178 V185
0x1e2: V187 = 0x20
0x1e4: V188 = ADD 0x20 V186
0x1e6: RETURN V185 V188
---
Entry stack: [V10, 0x1cb, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1cb]

================================

Block 0x1e7
[0x1e7:0x1fa]
---
Predecessors: [0x381, 0x389]
Successors: []
---
0x1e7 JUMPDEST
0x1e8 PUSH1 0x40
0x1ea DUP1
0x1eb MLOAD
0x1ec SWAP2
0x1ed ISZERO
0x1ee ISZERO
0x1ef DUP3
0x1f0 MSTORE
0x1f1 MLOAD
0x1f2 SWAP1
0x1f3 DUP2
0x1f4 SWAP1
0x1f5 SUB
0x1f6 PUSH1 0x20
0x1f8 ADD
0x1f9 SWAP1
0x1fa RETURN
---
0x1e7: JUMPDEST 
0x1e8: V189 = 0x40
0x1eb: V190 = M[0x40]
0x1ed: V191 = ISZERO {0x0, 0x1}
0x1ee: V192 = ISZERO V191
0x1f0: M[V190] = V192
0x1f1: V193 = M[0x40]
0x1f5: V194 = SUB V190 V193
0x1f6: V195 = 0x20
0x1f8: V196 = ADD 0x20 V194
0x1fa: RETURN V193 V196
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fb
[0x1fb:0x20c]
---
Predecessors: [0x160, 0x16e, 0x1b1, 0x1bf]
Successors: []
---
0x1fb JUMPDEST
0x1fc PUSH1 0x40
0x1fe DUP1
0x1ff MLOAD
0x200 SWAP2
0x201 DUP3
0x202 MSTORE
0x203 MLOAD
0x204 SWAP1
0x205 DUP2
0x206 SWAP1
0x207 SUB
0x208 PUSH1 0x20
0x20a ADD
0x20b SWAP1
0x20c RETURN
---
0x1fb: JUMPDEST 
0x1fc: V197 = 0x40
0x1ff: V198 = M[0x40]
0x202: M[V198] = S0
0x203: V199 = M[0x40]
0x207: V200 = SUB V198 V199
0x208: V201 = 0x20
0x20a: V202 = ADD 0x20 V200
0x20c: RETURN V199 V202
---
Entry stack: [V10, 0x1fb, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1fb]

================================

Block 0x20d
[0x20d:0x220]
---
Predecessors: [0x2b8]
Successors: [0x221, 0x248]
---
0x20d JUMPDEST
0x20e PUSH1 0x4
0x210 SLOAD
0x211 PUSH1 0x1
0x213 PUSH1 0xa0
0x215 PUSH1 0x2
0x217 EXP
0x218 SUB
0x219 AND
0x21a PUSH1 0x0
0x21c EQ
0x21d PUSH2 0x248
0x220 JUMPI
---
0x20d: JUMPDEST 
0x20e: V203 = 0x4
0x210: V204 = S[0x4]
0x211: V205 = 0x1
0x213: V206 = 0xa0
0x215: V207 = 0x2
0x217: V208 = EXP 0x2 0xa0
0x218: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x219: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x21a: V211 = 0x0
0x21c: V212 = EQ 0x0 V210
0x21d: V213 = 0x248
0x220: JUMPI 0x248 V212
---
Entry stack: [V10, 0x1c7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c7]

================================

Block 0x221
[0x221:0x247]
---
Predecessors: [0x20d]
Successors: [0x248]
---
0x221 PUSH1 0x4
0x223 SLOAD
0x224 PUSH1 0x5
0x226 SLOAD
0x227 PUSH1 0x1
0x229 PUSH1 0xa0
0x22b PUSH1 0x2
0x22d EXP
0x22e SUB
0x22f SWAP2
0x230 SWAP1
0x231 SWAP2
0x232 AND
0x233 PUSH1 0x0
0x235 SWAP1
0x236 DUP2
0x237 MSTORE
0x238 PUSH1 0x6
0x23a PUSH1 0x20
0x23c MSTORE
0x23d PUSH1 0x40
0x23f SWAP1
0x240 SHA3
0x241 DUP1
0x242 SLOAD
0x243 SWAP1
0x244 SWAP2
0x245 ADD
0x246 SWAP1
0x247 SSTORE
---
0x221: V214 = 0x4
0x223: V215 = S[0x4]
0x224: V216 = 0x5
0x226: V217 = S[0x5]
0x227: V218 = 0x1
0x229: V219 = 0xa0
0x22b: V220 = 0x2
0x22d: V221 = EXP 0x2 0xa0
0x22e: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x232: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x233: V224 = 0x0
0x237: M[0x0] = V223
0x238: V225 = 0x6
0x23a: V226 = 0x20
0x23c: M[0x20] = 0x6
0x23d: V227 = 0x40
0x240: V228 = SHA3 0x0 0x40
0x242: V229 = S[V228]
0x245: V230 = ADD V217 V229
0x247: S[V228] = V230
---
Entry stack: [V10, 0x1c7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c7]

================================

Block 0x248
[0x248:0x2b7]
---
Predecessors: [0x20d, 0x221]
Successors: [0x1c7]
---
0x248 JUMPDEST
0x249 PUSH1 0x4
0x24b DUP1
0x24c SLOAD
0x24d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x262 NOT
0x263 AND
0x264 CALLER
0x265 SWAP1
0x266 DUP2
0x267 OR
0x268 SWAP1
0x269 SWAP2
0x26a SSTORE
0x26b CALLVALUE
0x26c PUSH1 0x5
0x26e DUP2
0x26f SWAP1
0x270 SSTORE
0x271 PUSH1 0x40
0x273 DUP1
0x274 MLOAD
0x275 PUSH1 0x1
0x277 PUSH1 0xa0
0x279 PUSH1 0x2
0x27b EXP
0x27c SUB
0x27d SWAP4
0x27e SWAP1
0x27f SWAP4
0x280 AND
0x281 DUP4
0x282 MSTORE
0x283 PUSH1 0x20
0x285 DUP4
0x286 ADD
0x287 SWAP2
0x288 SWAP1
0x289 SWAP2
0x28a MSTORE
0x28b DUP1
0x28c MLOAD
0x28d PUSH32 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x2ae SWAP3
0x2af DUP2
0x2b0 SWAP1
0x2b1 SUB
0x2b2 SWAP1
0x2b3 SWAP2
0x2b4 ADD
0x2b5 SWAP1
0x2b6 LOG1
0x2b7 JUMP
---
0x248: JUMPDEST 
0x249: V231 = 0x4
0x24c: V232 = S[0x4]
0x24d: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x262: V234 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x263: V235 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V232
0x264: V236 = CALLER
0x267: V237 = OR V236 V235
0x26a: S[0x4] = V237
0x26b: V238 = CALLVALUE
0x26c: V239 = 0x5
0x270: S[0x5] = V238
0x271: V240 = 0x40
0x274: V241 = M[0x40]
0x275: V242 = 0x1
0x277: V243 = 0xa0
0x279: V244 = 0x2
0x27b: V245 = EXP 0x2 0xa0
0x27c: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x280: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x282: M[V241] = V247
0x283: V248 = 0x20
0x286: V249 = ADD V241 0x20
0x28a: M[V249] = V238
0x28c: V250 = M[0x40]
0x28d: V251 = 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x2b1: V252 = SUB V241 V250
0x2b4: V253 = ADD 0x40 V252
0x2b6: LOG V250 V253 0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300
0x2b7: JUMP 0x1c7
---
Entry stack: [V10, 0x1c7]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b8
[0x2b8:0x2c1]
---
Predecessors: [0x8a]
Successors: [0x20d, 0x2c2]
---
0x2b8 JUMPDEST
0x2b9 PUSH1 0x5
0x2bb SLOAD
0x2bc CALLVALUE
0x2bd GT
0x2be PUSH2 0x20d
0x2c1 JUMPI
---
0x2b8: JUMPDEST 
0x2b9: V254 = 0x5
0x2bb: V255 = S[0x5]
0x2bc: V256 = CALLVALUE
0x2bd: V257 = GT V256 V255
0x2be: V258 = 0x20d
0x2c1: JUMPI 0x20d V257
---
Entry stack: [V10, 0x1c7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c7]

================================

Block 0x2c2
[0x2c2:0x2c5]
---
Predecessors: [0x2b8]
Successors: []
---
0x2c2 PUSH2 0x2
0x2c5 JUMP
---
0x2c2: V259 = 0x2
0x2c5: THROW 
---
Entry stack: [V10, 0x1c7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c7]

================================

Block 0x2c6
[0x2c6:0x2d1]
---
Predecessors: [0xa6]
Successors: [0x2d2, 0x2d6]
---
0x2c6 JUMPDEST
0x2c7 PUSH1 0x7
0x2c9 SLOAD
0x2ca PUSH1 0xff
0x2cc AND
0x2cd ISZERO
0x2ce PUSH2 0x2d6
0x2d1 JUMPI
---
0x2c6: JUMPDEST 
0x2c7: V260 = 0x7
0x2c9: V261 = S[0x7]
0x2ca: V262 = 0xff
0x2cc: V263 = AND 0xff V261
0x2cd: V264 = ISZERO V263
0x2ce: V265 = 0x2d6
0x2d1: JUMPI 0x2d6 V264
---
Entry stack: [V10, 0x1c7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c7]

================================

Block 0x2d2
[0x2d2:0x2d5]
---
Predecessors: [0x2c6]
Successors: []
---
0x2d2 PUSH2 0x2
0x2d5 JUMP
---
0x2d2: V266 = 0x2
0x2d5: THROW 
---
Entry stack: [V10, 0x1c7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c7]

================================

Block 0x2d6
[0x2d6:0x377]
---
Predecessors: [0x2c6]
Successors: [0x1c9, 0x378]
---
0x2d6 JUMPDEST
0x2d7 PUSH1 0x7
0x2d9 DUP1
0x2da SLOAD
0x2db PUSH1 0xff
0x2dd NOT
0x2de AND
0x2df PUSH1 0x1
0x2e1 OR
0x2e2 SWAP1
0x2e3 SSTORE
0x2e4 PUSH1 0x5
0x2e6 SLOAD
0x2e7 PUSH1 0x40
0x2e9 DUP1
0x2ea MLOAD
0x2eb PUSH1 0x4
0x2ed SLOAD
0x2ee PUSH1 0x1
0x2f0 PUSH1 0xa0
0x2f2 PUSH1 0x2
0x2f4 EXP
0x2f5 SUB
0x2f6 AND
0x2f7 DUP2
0x2f8 MSTORE
0x2f9 PUSH1 0x20
0x2fb DUP2
0x2fc ADD
0x2fd SWAP3
0x2fe SWAP1
0x2ff SWAP3
0x300 MSTORE
0x301 DUP1
0x302 MLOAD
0x303 PUSH32 0xdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda
0x324 SWAP3
0x325 DUP2
0x326 SWAP1
0x327 SUB
0x328 SWAP1
0x329 SWAP2
0x32a ADD
0x32b SWAP1
0x32c LOG1
0x32d PUSH1 0x0
0x32f PUSH1 0x0
0x331 SWAP1
0x332 SLOAD
0x333 SWAP1
0x334 PUSH2 0x100
0x337 EXP
0x338 SWAP1
0x339 DIV
0x33a PUSH1 0x1
0x33c PUSH1 0xa0
0x33e PUSH1 0x2
0x340 EXP
0x341 SUB
0x342 AND
0x343 PUSH1 0x1
0x345 PUSH1 0xa0
0x347 PUSH1 0x2
0x349 EXP
0x34a SUB
0x34b AND
0x34c PUSH2 0x8fc
0x34f PUSH1 0x5
0x351 PUSH1 0x0
0x353 POP
0x354 SLOAD
0x355 SWAP1
0x356 DUP2
0x357 ISZERO
0x358 MUL
0x359 SWAP1
0x35a PUSH1 0x40
0x35c MLOAD
0x35d DUP1
0x35e SWAP1
0x35f POP
0x360 PUSH1 0x0
0x362 PUSH1 0x40
0x364 MLOAD
0x365 DUP1
0x366 DUP4
0x367 SUB
0x368 DUP2
0x369 DUP6
0x36a DUP9
0x36b DUP9
0x36c CALL
0x36d SWAP4
0x36e POP
0x36f POP
0x370 POP
0x371 POP
0x372 ISZERO
0x373 ISZERO
0x374 PUSH2 0x1c9
0x377 JUMPI
---
0x2d6: JUMPDEST 
0x2d7: V267 = 0x7
0x2da: V268 = S[0x7]
0x2db: V269 = 0xff
0x2dd: V270 = NOT 0xff
0x2de: V271 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V268
0x2df: V272 = 0x1
0x2e1: V273 = OR 0x1 V271
0x2e3: S[0x7] = V273
0x2e4: V274 = 0x5
0x2e6: V275 = S[0x5]
0x2e7: V276 = 0x40
0x2ea: V277 = M[0x40]
0x2eb: V278 = 0x4
0x2ed: V279 = S[0x4]
0x2ee: V280 = 0x1
0x2f0: V281 = 0xa0
0x2f2: V282 = 0x2
0x2f4: V283 = EXP 0x2 0xa0
0x2f5: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f6: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x2f8: M[V277] = V285
0x2f9: V286 = 0x20
0x2fc: V287 = ADD V277 0x20
0x300: M[V287] = V275
0x302: V288 = M[0x40]
0x303: V289 = 0xdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda
0x327: V290 = SUB V277 V288
0x32a: V291 = ADD 0x40 V290
0x32c: LOG V288 V291 0xdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda
0x32d: V292 = 0x0
0x32f: V293 = 0x0
0x332: V294 = S[0x0]
0x334: V295 = 0x100
0x337: V296 = EXP 0x100 0x0
0x339: V297 = DIV V294 0x1
0x33a: V298 = 0x1
0x33c: V299 = 0xa0
0x33e: V300 = 0x2
0x340: V301 = EXP 0x2 0xa0
0x341: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x342: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x343: V304 = 0x1
0x345: V305 = 0xa0
0x347: V306 = 0x2
0x349: V307 = EXP 0x2 0xa0
0x34a: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34b: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x34c: V310 = 0x8fc
0x34f: V311 = 0x5
0x351: V312 = 0x0
0x354: V313 = S[0x5]
0x357: V314 = ISZERO V313
0x358: V315 = MUL V314 0x8fc
0x35a: V316 = 0x40
0x35c: V317 = M[0x40]
0x360: V318 = 0x0
0x362: V319 = 0x40
0x364: V320 = M[0x40]
0x367: V321 = SUB V317 V320
0x36c: V322 = CALL V315 V309 V313 V320 V321 V320 0x0
0x372: V323 = ISZERO V322
0x373: V324 = ISZERO V323
0x374: V325 = 0x1c9
0x377: JUMPI 0x1c9 V324
---
Entry stack: [V10, 0x1c7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c7]

================================

Block 0x378
[0x378:0x37b]
---
Predecessors: [0x2d6]
Successors: []
---
0x378 PUSH2 0x2
0x37b JUMP
---
0x378: V326 = 0x2
0x37b: THROW 
---
Entry stack: [V10, 0x1c7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1c7]

================================

Block 0x37c
[0x37c:0x380]
---
Predecessors: [0xd7, 0xfb]
Successors: [0x381]
---
0x37c JUMPDEST
0x37d PUSH1 0x1
0x37f SWAP2
0x380 POP
---
0x37c: JUMPDEST 
0x37d: V327 = 0x1
---
Entry stack: [V10, 0x1e7, 0x0, V92]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V10, 0x1e7, 0x1, V92]

================================

Block 0x381
[0x381:0x384]
---
Predecessors: [0x12b, 0x37c]
Successors: [0x1e7]
---
0x381 JUMPDEST
0x382 POP
0x383 SWAP1
0x384 JUMP
---
0x381: JUMPDEST 
0x384: JUMP 0x1e7
---
Entry stack: [V10, 0x1e7, {0x0, 0x1}, V92]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x385
[0x385:0x388]
---
Predecessors: [0x3a7]
Successors: [0x389]
---
0x385 JUMPDEST
0x386 POP
0x387 PUSH1 0x1
---
0x385: JUMPDEST 
0x387: V328 = 0x1
---
Entry stack: [V10, 0x1e7, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x1e7, 0x1]

================================

Block 0x389
[0x389:0x38b]
---
Predecessors: [0x385, 0x3dc]
Successors: [0x1e7]
---
0x389 JUMPDEST
0x38a SWAP1
0x38b JUMP
---
0x389: JUMPDEST 
0x38b: JUMP 0x1e7
---
Entry stack: [V10, 0x1e7, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x38c
[0x38c:0x3a2]
---
Predecessors: [0x17c]
Successors: [0x3a3, 0x3a7]
---
0x38c JUMPDEST
0x38d PUSH1 0x0
0x38f SLOAD
0x390 CALLER
0x391 PUSH1 0x1
0x393 PUSH1 0xa0
0x395 PUSH1 0x2
0x397 EXP
0x398 SUB
0x399 SWAP1
0x39a DUP2
0x39b AND
0x39c SWAP2
0x39d AND
0x39e EQ
0x39f PUSH2 0x3a7
0x3a2 JUMPI
---
0x38c: JUMPDEST 
0x38d: V329 = 0x0
0x38f: V330 = S[0x0]
0x390: V331 = CALLER
0x391: V332 = 0x1
0x393: V333 = 0xa0
0x395: V334 = 0x2
0x397: V335 = EXP 0x2 0xa0
0x398: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39b: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x39d: V338 = AND V330 0xffffffffffffffffffffffffffffffffffffffff
0x39e: V339 = EQ V338 V337
0x39f: V340 = 0x3a7
0x3a2: JUMPI 0x3a7 V339
---
Entry stack: [V10, 0x1e7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, 0x0]

================================

Block 0x3a3
[0x3a3:0x3a6]
---
Predecessors: [0x38c]
Successors: []
---
0x3a3 PUSH2 0x2
0x3a6 JUMP
---
0x3a3: V341 = 0x2
0x3a6: THROW 
---
Entry stack: [V10, 0x1e7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, 0x0]

================================

Block 0x3a7
[0x3a7:0x3db]
---
Predecessors: [0x38c]
Successors: [0x385, 0x3dc]
---
0x3a7 JUMPDEST
0x3a8 PUSH1 0x40
0x3aa MLOAD
0x3ab PUSH1 0x0
0x3ad DUP1
0x3ae SLOAD
0x3af PUSH1 0x1
0x3b1 PUSH1 0xa0
0x3b3 PUSH1 0x2
0x3b5 EXP
0x3b6 SUB
0x3b7 SWAP1
0x3b8 DUP2
0x3b9 AND
0x3ba SWAP3
0x3bb ADDRESS
0x3bc SWAP1
0x3bd SWAP2
0x3be AND
0x3bf BALANCE
0x3c0 DUP1
0x3c1 ISZERO
0x3c2 PUSH2 0x8fc
0x3c5 MUL
0x3c6 SWAP3
0x3c7 SWAP1
0x3c8 SWAP2
0x3c9 SWAP1
0x3ca DUP2
0x3cb DUP2
0x3cc DUP2
0x3cd DUP6
0x3ce DUP9
0x3cf DUP9
0x3d0 CALL
0x3d1 SWAP4
0x3d2 POP
0x3d3 POP
0x3d4 POP
0x3d5 POP
0x3d6 ISZERO
0x3d7 ISZERO
0x3d8 PUSH2 0x385
0x3db JUMPI
---
0x3a7: JUMPDEST 
0x3a8: V342 = 0x40
0x3aa: V343 = M[0x40]
0x3ab: V344 = 0x0
0x3ae: V345 = S[0x0]
0x3af: V346 = 0x1
0x3b1: V347 = 0xa0
0x3b3: V348 = 0x2
0x3b5: V349 = EXP 0x2 0xa0
0x3b6: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b9: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x3bb: V352 = ADDRESS
0x3be: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0x3bf: V354 = BALANCE V353
0x3c1: V355 = ISZERO V354
0x3c2: V356 = 0x8fc
0x3c5: V357 = MUL 0x8fc V355
0x3d0: V358 = CALL V357 V351 V354 V343 0x0 V343 0x0
0x3d6: V359 = ISZERO V358
0x3d7: V360 = ISZERO V359
0x3d8: V361 = 0x385
0x3db: JUMPI 0x385 V360
---
Entry stack: [V10, 0x1e7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e7, 0x0]

================================

Block 0x3dc
[0x3dc:0x3e2]
---
Predecessors: [0x3a7]
Successors: [0x389]
---
0x3dc POP
0x3dd PUSH1 0x0
0x3df PUSH2 0x389
0x3e2 JUMP
---
0x3dd: V362 = 0x0
0x3df: V363 = 0x389
0x3e2: JUMP 0x389
---
Entry stack: [V10, 0x1e7, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x1e7, 0x0]

================================

Function 0:
Public function signature: 0x1998aeef
Entry block: 0x8a
Exit block: 0x1c7
Body: 0x8a, 0x9c, 0x1c7, 0x20d, 0x221, 0x248, 0x2b8, 0x2c2

Function 1:
Public function signature: 0x2a24f46c
Entry block: 0xa0
Exit block: 0x1c7
Body: 0xa0, 0xa6, 0xb6, 0x1c7, 0x1c9, 0x2c6, 0x2d2, 0x2d6, 0x378

Function 2:
Public function signature: 0x38af3eed
Entry block: 0xba
Exit block: 0x1cb
Body: 0xba, 0xc0, 0x1cb

Function 3:
Public function signature: 0x3ccfd60b
Entry block: 0xd1
Exit block: 0x1e7
Body: 0xd1, 0xd7, 0xfb, 0x12b, 0x1e7, 0x37c, 0x381

Function 4:
Public function signature: 0x4f245ef7
Entry block: 0x15a
Exit block: 0x1fb
Body: 0x15a, 0x160, 0x1fb

Function 5:
Public function signature: 0x630c60c9
Entry block: 0x168
Exit block: 0x1fb
Body: 0x168, 0x16e, 0x1fb

Function 6:
Public function signature: 0x6899d8c2
Entry block: 0x176
Exit block: 0x1e7
Body: 0x176, 0x17c, 0x190, 0x1e7, 0x385, 0x389, 0x38c, 0x3a3, 0x3a7, 0x3dc

Function 7:
Public function signature: 0x91f90157
Entry block: 0x194
Exit block: 0x1cb
Body: 0x194, 0x19a, 0x1cb

Function 8:
Public function signature: 0xd074a38d
Entry block: 0x1ab
Exit block: 0x1fb
Body: 0x1ab, 0x1b1, 0x1fb

Function 9:
Public function signature: 0xd57bde79
Entry block: 0x1b9
Exit block: 0x1fb
Body: 0x1b9, 0x1bf, 0x1fb

Function 10:
Public fallback function
Entry block: 0x82
Exit block: 0x82
Body: 0x82

