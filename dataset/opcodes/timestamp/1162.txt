Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xf9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xf9
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xf9
0xa: JUMPI 0xf9 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x13e]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x6fdde03
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x13e
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x6fdde03
0x39: V12 = EQ V10 0x6fdde03
0x3a: V13 = 0x13e
0x3d: JUMPI 0x13e V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x1c9]
---
0x3e DUP1
0x3f PUSH4 0x95ea7b3
0x44 EQ
0x45 PUSH2 0x1c9
0x48 JUMPI
---
0x3f: V14 = 0x95ea7b3
0x44: V15 = EQ 0x95ea7b3 V10
0x45: V16 = 0x1c9
0x48: JUMPI 0x1c9 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x1ff]
---
0x49 DUP1
0x4a PUSH4 0x18160ddd
0x4f EQ
0x50 PUSH2 0x1ff
0x53 JUMPI
---
0x4a: V17 = 0x18160ddd
0x4f: V18 = EQ 0x18160ddd V10
0x50: V19 = 0x1ff
0x53: JUMPI 0x1ff V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x224]
---
0x54 DUP1
0x55 PUSH4 0x2182ff7e
0x5a EQ
0x5b PUSH2 0x224
0x5e JUMPI
---
0x55: V20 = 0x2182ff7e
0x5a: V21 = EQ 0x2182ff7e V10
0x5b: V22 = 0x224
0x5e: JUMPI 0x224 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x23c]
---
0x5f DUP1
0x60 PUSH4 0x23b872dd
0x65 EQ
0x66 PUSH2 0x23c
0x69 JUMPI
---
0x60: V23 = 0x23b872dd
0x65: V24 = EQ 0x23b872dd V10
0x66: V25 = 0x23c
0x69: JUMPI 0x23c V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x278]
---
0x6a DUP1
0x6b PUSH4 0x313ce567
0x70 EQ
0x71 PUSH2 0x278
0x74 JUMPI
---
0x6b: V26 = 0x313ce567
0x70: V27 = EQ 0x313ce567 V10
0x71: V28 = 0x278
0x74: JUMPI 0x278 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x2a1]
---
0x75 DUP1
0x76 PUSH4 0x3ccfd60b
0x7b EQ
0x7c PUSH2 0x2a1
0x7f JUMPI
---
0x76: V29 = 0x3ccfd60b
0x7b: V30 = EQ 0x3ccfd60b V10
0x7c: V31 = 0x2a1
0x7f: JUMPI 0x2a1 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x2b6]
---
0x80 DUP1
0x81 PUSH4 0x41c0e1b5
0x86 EQ
0x87 PUSH2 0x2b6
0x8a JUMPI
---
0x81: V32 = 0x41c0e1b5
0x86: V33 = EQ 0x41c0e1b5 V10
0x87: V34 = 0x2b6
0x8a: JUMPI 0x2b6 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x2cb]
---
0x8b DUP1
0x8c PUSH4 0x45db72ff
0x91 EQ
0x92 PUSH2 0x2cb
0x95 JUMPI
---
0x8c: V35 = 0x45db72ff
0x91: V36 = EQ 0x45db72ff V10
0x92: V37 = 0x2cb
0x95: JUMPI 0x2cb V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x356]
---
0x96 DUP1
0x97 PUSH4 0x4fa6a6d5
0x9c EQ
0x9d PUSH2 0x356
0xa0 JUMPI
---
0x97: V38 = 0x4fa6a6d5
0x9c: V39 = EQ 0x4fa6a6d5 V10
0x9d: V40 = 0x356
0xa0: JUMPI 0x356 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x37b]
---
0xa1 DUP1
0xa2 PUSH4 0x5453095b
0xa7 EQ
0xa8 PUSH2 0x37b
0xab JUMPI
---
0xa2: V41 = 0x5453095b
0xa7: V42 = EQ 0x5453095b V10
0xa8: V43 = 0x37b
0xab: JUMPI 0x37b V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x3c3]
---
0xac DUP1
0xad PUSH4 0x70a08231
0xb2 EQ
0xb3 PUSH2 0x3c3
0xb6 JUMPI
---
0xad: V44 = 0x70a08231
0xb2: V45 = EQ 0x70a08231 V10
0xb3: V46 = 0x3c3
0xb6: JUMPI 0x3c3 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x3f4]
---
0xb7 DUP1
0xb8 PUSH4 0x823c82ca
0xbd EQ
0xbe PUSH2 0x3f4
0xc1 JUMPI
---
0xb8: V47 = 0x823c82ca
0xbd: V48 = EQ 0x823c82ca V10
0xbe: V49 = 0x3f4
0xc1: JUMPI 0x3f4 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x419]
---
0xc2 DUP1
0xc3 PUSH4 0x8da5cb5b
0xc8 EQ
0xc9 PUSH2 0x419
0xcc JUMPI
---
0xc3: V50 = 0x8da5cb5b
0xc8: V51 = EQ 0x8da5cb5b V10
0xc9: V52 = 0x419
0xcc: JUMPI 0x419 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x448]
---
0xcd DUP1
0xce PUSH4 0x95d89b41
0xd3 EQ
0xd4 PUSH2 0x448
0xd7 JUMPI
---
0xce: V53 = 0x95d89b41
0xd3: V54 = EQ 0x95d89b41 V10
0xd4: V55 = 0x448
0xd7: JUMPI 0x448 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x4d3]
---
0xd8 DUP1
0xd9 PUSH4 0xa9059cbb
0xde EQ
0xdf PUSH2 0x4d3
0xe2 JUMPI
---
0xd9: V56 = 0xa9059cbb
0xde: V57 = EQ 0xa9059cbb V10
0xdf: V58 = 0x4d3
0xe2: JUMPI 0x4d3 V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xed]
---
Predecessors: [0xd8]
Successors: [0xee, 0x509]
---
0xe3 DUP1
0xe4 PUSH4 0xdd62ed3e
0xe9 EQ
0xea PUSH2 0x509
0xed JUMPI
---
0xe4: V59 = 0xdd62ed3e
0xe9: V60 = EQ 0xdd62ed3e V10
0xea: V61 = 0x509
0xed: JUMPI 0x509 V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf8]
---
Predecessors: [0xe3]
Successors: [0xf9, 0x540]
---
0xee DUP1
0xef PUSH4 0xf2fde38b
0xf4 EQ
0xf5 PUSH2 0x540
0xf8 JUMPI
---
0xef: V62 = 0xf2fde38b
0xf4: V63 = EQ 0xf2fde38b V10
0xf5: V64 = 0x540
0xf8: JUMPI 0x540 V63
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xf9
[0xf9:0xfc]
---
Predecessors: [0x0, 0xee]
Successors: [0xfd]
---
0xf9 JUMPDEST
0xfa PUSH2 0x13c
---
0xf9: JUMPDEST 
0xfa: V65 = 0x13c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x13c]
Exit stack: [V10, 0x13c]

================================

Block 0xfd
[0xfd:0x138]
---
Predecessors: [0xf9]
Successors: [0x561]
---
0xfd JUMPDEST
0xfe PUSH2 0x139
0x101 PUSH1 0x40
0x103 DUP1
0x104 MLOAD
0x105 SWAP1
0x106 DUP2
0x107 ADD
0x108 PUSH1 0x40
0x10a MSTORE
0x10b PUSH1 0x19
0x10d DUP2
0x10e MSTORE
0x10f PUSH32 0x486921204920616d20616e6f6e796d6f757320686f6c64657200000000000000
0x130 PUSH1 0x20
0x132 DUP3
0x133 ADD
0x134 MSTORE
0x135 PUSH2 0x561
0x138 JUMP
---
0xfd: JUMPDEST 
0xfe: V66 = 0x139
0x101: V67 = 0x40
0x104: V68 = M[0x40]
0x107: V69 = ADD V68 0x40
0x108: V70 = 0x40
0x10a: M[0x40] = V69
0x10b: V71 = 0x19
0x10e: M[V68] = 0x19
0x10f: V72 = 0x486921204920616d20616e6f6e796d6f757320686f6c64657200000000000000
0x130: V73 = 0x20
0x133: V74 = ADD V68 0x20
0x134: M[V74] = 0x486921204920616d20616e6f6e796d6f757320686f6c64657200000000000000
0x135: V75 = 0x561
0x138: JUMP 0x561
---
Entry stack: [V10, 0x13c]
Stack pops: 0
Stack additions: [0x139, V68]
Exit stack: [V10, 0x13c, 0x139, V68]

================================

Block 0x139
[0x139:0x139]
---
Predecessors: [0x5bf, 0x844]
Successors: [0x13a]
---
0x139 JUMPDEST
---
0x139: JUMPDEST 
---
Entry stack: [V10, S3, {0x139, 0x13c}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x139, 0x13c}, S1, S0]

================================

Block 0x13a
[0x13a:0x13b]
---
Predecessors: [0x139]
Successors: [0x13c, 0x5bd]
---
0x13a JUMPDEST
0x13b JUMP
---
0x13a: JUMPDEST 
0x13b: JUMP S0
---
Entry stack: [V10, S3, {0x139, 0x13c}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S3, {0x139, 0x13c}, S1]

================================

Block 0x13c
[0x13c:0x13d]
---
Predecessors: [0x13a, 0x5bf, 0xaff, 0xb7d]
Successors: []
---
0x13c JUMPDEST
0x13d STOP
---
0x13c: JUMPDEST 
0x13d: STOP 
---
Entry stack: [V10, S6, {0x139, 0x13c}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S6, {0x139, 0x13c}, S4, S3, S2, S1, S0]

================================

Block 0x13e
[0x13e:0x144]
---
Predecessors: [0xb]
Successors: [0x145, 0x149]
---
0x13e JUMPDEST
0x13f CALLVALUE
0x140 ISZERO
0x141 PUSH2 0x149
0x144 JUMPI
---
0x13e: JUMPDEST 
0x13f: V76 = CALLVALUE
0x140: V77 = ISZERO V76
0x141: V78 = 0x149
0x144: JUMPI 0x149 V77
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x145
[0x145:0x148]
---
Predecessors: [0x13e]
Successors: []
---
0x145 PUSH1 0x0
0x147 DUP1
0x148 REVERT
---
0x145: V79 = 0x0
0x148: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x149
[0x149:0x150]
---
Predecessors: [0x13e]
Successors: [0x5c2]
---
0x149 JUMPDEST
0x14a PUSH2 0x151
0x14d PUSH2 0x5c2
0x150 JUMP
---
0x149: JUMPDEST 
0x14a: V80 = 0x151
0x14d: V81 = 0x5c2
0x150: JUMP 0x5c2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x151]
Exit stack: [V10, 0x151]

================================

Block 0x151
[0x151:0x174]
---
Predecessors: [0x5c2, 0x943, 0x987]
Successors: [0x175]
---
0x151 JUMPDEST
0x152 PUSH1 0x40
0x154 MLOAD
0x155 PUSH1 0x20
0x157 DUP1
0x158 DUP3
0x159 MSTORE
0x15a DUP2
0x15b SWAP1
0x15c DUP2
0x15d ADD
0x15e DUP4
0x15f DUP2
0x160 DUP2
0x161 MLOAD
0x162 DUP2
0x163 MSTORE
0x164 PUSH1 0x20
0x166 ADD
0x167 SWAP2
0x168 POP
0x169 DUP1
0x16a MLOAD
0x16b SWAP1
0x16c PUSH1 0x20
0x16e ADD
0x16f SWAP1
0x170 DUP1
0x171 DUP4
0x172 DUP4
0x173 PUSH1 0x0
---
0x151: JUMPDEST 
0x152: V82 = 0x40
0x154: V83 = M[0x40]
0x155: V84 = 0x20
0x159: M[V83] = 0x20
0x15d: V85 = ADD V83 0x20
0x161: V86 = M[S0]
0x163: M[V85] = V86
0x164: V87 = 0x20
0x166: V88 = ADD 0x20 V85
0x16a: V89 = M[S0]
0x16c: V90 = 0x20
0x16e: V91 = ADD 0x20 S0
0x173: V92 = 0x0
---
Entry stack: [V10, 0x151, S0]
Stack pops: 1
Stack additions: [S0, V83, V83, V88, V91, V89, V89, V88, V91, 0x0]
Exit stack: [V10, 0x151, S0, V83, V83, V88, V91, V89, V89, V88, V91, 0x0]

================================

Block 0x175
[0x175:0x17d]
---
Predecessors: [0x151, 0x186, 0x313, 0x490]
Successors: [0x17e, 0x18e]
---
0x175 JUMPDEST
0x176 DUP4
0x177 DUP2
0x178 LT
0x179 ISZERO
0x17a PUSH2 0x18e
0x17d JUMPI
---
0x175: JUMPDEST 
0x178: V93 = LT S0 S3
0x179: V94 = ISZERO V93
0x17a: V95 = 0x18e
0x17d: JUMPI 0x18e V94
---
Entry stack: [V10, 0x151, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x151, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x17e
[0x17e:0x185]
---
Predecessors: [0x175]
Successors: [0x186]
---
0x17e DUP1
0x17f DUP3
0x180 ADD
0x181 MLOAD
0x182 DUP2
0x183 DUP5
0x184 ADD
0x185 MSTORE
---
0x180: V96 = ADD S1 S0
0x181: V97 = M[V96]
0x184: V98 = ADD S2 S0
0x185: M[V98] = V97
---
Entry stack: [V10, 0x151, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x151, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x186
[0x186:0x18d]
---
Predecessors: [0x17e]
Successors: [0x175]
---
0x186 JUMPDEST
0x187 PUSH1 0x20
0x189 ADD
0x18a PUSH2 0x175
0x18d JUMP
---
0x186: JUMPDEST 
0x187: V99 = 0x20
0x189: V100 = ADD 0x20 S0
0x18a: V101 = 0x175
0x18d: JUMP 0x175
---
Entry stack: [V10, 0x151, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V100]
Exit stack: [V10, 0x151, S9, S8, S7, S6, S5, S4, S3, S2, S1, V100]

================================

Block 0x18e
[0x18e:0x1a1]
---
Predecessors: [0x175, 0x302, 0x47f]
Successors: [0x1a2, 0x1bb]
---
0x18e JUMPDEST
0x18f POP
0x190 POP
0x191 POP
0x192 POP
0x193 SWAP1
0x194 POP
0x195 SWAP1
0x196 DUP2
0x197 ADD
0x198 SWAP1
0x199 PUSH1 0x1f
0x19b AND
0x19c DUP1
0x19d ISZERO
0x19e PUSH2 0x1bb
0x1a1 JUMPI
---
0x18e: JUMPDEST 
0x197: V102 = ADD S4 S6
0x199: V103 = 0x1f
0x19b: V104 = AND 0x1f S4
0x19d: V105 = ISZERO V104
0x19e: V106 = 0x1bb
0x1a1: JUMPI 0x1bb V105
---
Entry stack: [V10, 0x151, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V102, V104]
Exit stack: [V10, 0x151, S9, S8, S7, V102, V104]

================================

Block 0x1a2
[0x1a2:0x1ba]
---
Predecessors: [0x18e]
Successors: [0x1bb]
---
0x1a2 DUP1
0x1a3 DUP3
0x1a4 SUB
0x1a5 DUP1
0x1a6 MLOAD
0x1a7 PUSH1 0x1
0x1a9 DUP4
0x1aa PUSH1 0x20
0x1ac SUB
0x1ad PUSH2 0x100
0x1b0 EXP
0x1b1 SUB
0x1b2 NOT
0x1b3 AND
0x1b4 DUP2
0x1b5 MSTORE
0x1b6 PUSH1 0x20
0x1b8 ADD
0x1b9 SWAP2
0x1ba POP
---
0x1a4: V107 = SUB V102 V104
0x1a6: V108 = M[V107]
0x1a7: V109 = 0x1
0x1aa: V110 = 0x20
0x1ac: V111 = SUB 0x20 V104
0x1ad: V112 = 0x100
0x1b0: V113 = EXP 0x100 V111
0x1b1: V114 = SUB V113 0x1
0x1b2: V115 = NOT V114
0x1b3: V116 = AND V115 V108
0x1b5: M[V107] = V116
0x1b6: V117 = 0x20
0x1b8: V118 = ADD 0x20 V107
---
Entry stack: [V10, 0x151, S4, S3, S2, V102, V104]
Stack pops: 2
Stack additions: [V118, S0]
Exit stack: [V10, 0x151, S4, S3, S2, V118, V104]

================================

Block 0x1bb
[0x1bb:0x1c8]
---
Predecessors: [0x18e, 0x1a2, 0x31b, 0x498]
Successors: []
---
0x1bb JUMPDEST
0x1bc POP
0x1bd SWAP3
0x1be POP
0x1bf POP
0x1c0 POP
0x1c1 PUSH1 0x40
0x1c3 MLOAD
0x1c4 DUP1
0x1c5 SWAP2
0x1c6 SUB
0x1c7 SWAP1
0x1c8 RETURN
---
0x1bb: JUMPDEST 
0x1c1: V119 = 0x40
0x1c3: V120 = M[0x40]
0x1c6: V121 = SUB S1 V120
0x1c8: RETURN V120 V121
---
Entry stack: [V10, 0x151, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x151]

================================

Block 0x1c9
[0x1c9:0x1cf]
---
Predecessors: [0x3e]
Successors: [0x1d0, 0x1d4]
---
0x1c9 JUMPDEST
0x1ca CALLVALUE
0x1cb ISZERO
0x1cc PUSH2 0x1d4
0x1cf JUMPI
---
0x1c9: JUMPDEST 
0x1ca: V122 = CALLVALUE
0x1cb: V123 = ISZERO V122
0x1cc: V124 = 0x1d4
0x1cf: JUMPI 0x1d4 V123
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d0
[0x1d0:0x1d3]
---
Predecessors: [0x1c9]
Successors: []
---
0x1d0 PUSH1 0x0
0x1d2 DUP1
0x1d3 REVERT
---
0x1d0: V125 = 0x0
0x1d3: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d4
[0x1d4:0x1ea]
---
Predecessors: [0x1c9]
Successors: [0x5f9]
---
0x1d4 JUMPDEST
0x1d5 PUSH2 0x1eb
0x1d8 PUSH1 0x1
0x1da PUSH1 0xa0
0x1dc PUSH1 0x2
0x1de EXP
0x1df SUB
0x1e0 PUSH1 0x4
0x1e2 CALLDATALOAD
0x1e3 AND
0x1e4 PUSH1 0x24
0x1e6 CALLDATALOAD
0x1e7 PUSH2 0x5f9
0x1ea JUMP
---
0x1d4: JUMPDEST 
0x1d5: V126 = 0x1eb
0x1d8: V127 = 0x1
0x1da: V128 = 0xa0
0x1dc: V129 = 0x2
0x1de: V130 = EXP 0x2 0xa0
0x1df: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e0: V132 = 0x4
0x1e2: V133 = CALLDATALOAD 0x4
0x1e3: V134 = AND V133 0xffffffffffffffffffffffffffffffffffffffff
0x1e4: V135 = 0x24
0x1e6: V136 = CALLDATALOAD 0x24
0x1e7: V137 = 0x5f9
0x1ea: JUMP 0x5f9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1eb, V134, V136]
Exit stack: [V10, 0x1eb, V134, V136]

================================

Block 0x1eb
[0x1eb:0x1fe]
---
Predecessors: [0x660, 0x810]
Successors: []
---
0x1eb JUMPDEST
0x1ec PUSH1 0x40
0x1ee MLOAD
0x1ef SWAP1
0x1f0 ISZERO
0x1f1 ISZERO
0x1f2 DUP2
0x1f3 MSTORE
0x1f4 PUSH1 0x20
0x1f6 ADD
0x1f7 PUSH1 0x40
0x1f9 MLOAD
0x1fa DUP1
0x1fb SWAP2
0x1fc SUB
0x1fd SWAP1
0x1fe RETURN
---
0x1eb: JUMPDEST 
0x1ec: V138 = 0x40
0x1ee: V139 = M[0x40]
0x1f0: V140 = ISZERO {0x0, 0x1}
0x1f1: V141 = ISZERO V140
0x1f3: M[V139] = V141
0x1f4: V142 = 0x20
0x1f6: V143 = ADD 0x20 V139
0x1f7: V144 = 0x40
0x1f9: V145 = M[0x40]
0x1fc: V146 = SUB V143 V145
0x1fe: RETURN V145 V146
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ff
[0x1ff:0x205]
---
Predecessors: [0x49]
Successors: [0x206, 0x20a]
---
0x1ff JUMPDEST
0x200 CALLVALUE
0x201 ISZERO
0x202 PUSH2 0x20a
0x205 JUMPI
---
0x1ff: JUMPDEST 
0x200: V147 = CALLVALUE
0x201: V148 = ISZERO V147
0x202: V149 = 0x20a
0x205: JUMPI 0x20a V148
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x206
[0x206:0x209]
---
Predecessors: [0x1ff]
Successors: []
---
0x206 PUSH1 0x0
0x208 DUP1
0x209 REVERT
---
0x206: V150 = 0x0
0x209: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x20a
[0x20a:0x211]
---
Predecessors: [0x1ff]
Successors: [0x666]
---
0x20a JUMPDEST
0x20b PUSH2 0x212
0x20e PUSH2 0x666
0x211 JUMP
---
0x20a: JUMPDEST 
0x20b: V151 = 0x212
0x20e: V152 = 0x666
0x211: JUMP 0x666
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x212]
Exit stack: [V10, 0x212]

================================

Block 0x212
[0x212:0x223]
---
Predecessors: [0x66a, 0x94b, 0x96b, 0x970, 0xab4]
Successors: []
---
0x212 JUMPDEST
0x213 PUSH1 0x40
0x215 MLOAD
0x216 SWAP1
0x217 DUP2
0x218 MSTORE
0x219 PUSH1 0x20
0x21b ADD
0x21c PUSH1 0x40
0x21e MLOAD
0x21f DUP1
0x220 SWAP2
0x221 SUB
0x222 SWAP1
0x223 RETURN
---
0x212: JUMPDEST 
0x213: V153 = 0x40
0x215: V154 = M[0x40]
0x218: M[V154] = S0
0x219: V155 = 0x20
0x21b: V156 = ADD 0x20 V154
0x21c: V157 = 0x40
0x21e: V158 = M[0x40]
0x221: V159 = SUB V156 V158
0x223: RETURN V158 V159
---
Entry stack: [V10, S5, {0x139, 0x13c}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S5, {0x139, 0x13c}, S3, S2, S1]

================================

Block 0x224
[0x224:0x22a]
---
Predecessors: [0x54]
Successors: [0x22b, 0x22f]
---
0x224 JUMPDEST
0x225 CALLVALUE
0x226 ISZERO
0x227 PUSH2 0x22f
0x22a JUMPI
---
0x224: JUMPDEST 
0x225: V160 = CALLVALUE
0x226: V161 = ISZERO V160
0x227: V162 = 0x22f
0x22a: JUMPI 0x22f V161
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22b
[0x22b:0x22e]
---
Predecessors: [0x224]
Successors: []
---
0x22b PUSH1 0x0
0x22d DUP1
0x22e REVERT
---
0x22b: V163 = 0x0
0x22e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22f
[0x22f:0x239]
---
Predecessors: [0x224]
Successors: [0x66d]
---
0x22f JUMPDEST
0x230 PUSH2 0x13c
0x233 PUSH1 0x4
0x235 CALLDATALOAD
0x236 PUSH2 0x66d
0x239 JUMP
---
0x22f: JUMPDEST 
0x230: V164 = 0x13c
0x233: V165 = 0x4
0x235: V166 = CALLDATALOAD 0x4
0x236: V167 = 0x66d
0x239: JUMP 0x66d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x13c, V166]
Exit stack: [V10, 0x13c, V166]

================================

Block 0x23a
[0x23a:0x23b]
---
Predecessors: []
Successors: []
---
0x23a JUMPDEST
0x23b STOP
---
0x23a: JUMPDEST 
0x23b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x23c
[0x23c:0x242]
---
Predecessors: [0x5f]
Successors: [0x243, 0x247]
---
0x23c JUMPDEST
0x23d CALLVALUE
0x23e ISZERO
0x23f PUSH2 0x247
0x242 JUMPI
---
0x23c: JUMPDEST 
0x23d: V168 = CALLVALUE
0x23e: V169 = ISZERO V168
0x23f: V170 = 0x247
0x242: JUMPI 0x247 V169
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x243
[0x243:0x246]
---
Predecessors: [0x23c]
Successors: []
---
0x243 PUSH1 0x0
0x245 DUP1
0x246 REVERT
---
0x243: V171 = 0x0
0x246: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x247
[0x247:0x263]
---
Predecessors: [0x23c]
Successors: [0x6fb]
---
0x247 JUMPDEST
0x248 PUSH2 0x1eb
0x24b PUSH1 0x1
0x24d PUSH1 0xa0
0x24f PUSH1 0x2
0x251 EXP
0x252 SUB
0x253 PUSH1 0x4
0x255 CALLDATALOAD
0x256 DUP2
0x257 AND
0x258 SWAP1
0x259 PUSH1 0x24
0x25b CALLDATALOAD
0x25c AND
0x25d PUSH1 0x44
0x25f CALLDATALOAD
0x260 PUSH2 0x6fb
0x263 JUMP
---
0x247: JUMPDEST 
0x248: V172 = 0x1eb
0x24b: V173 = 0x1
0x24d: V174 = 0xa0
0x24f: V175 = 0x2
0x251: V176 = EXP 0x2 0xa0
0x252: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x253: V178 = 0x4
0x255: V179 = CALLDATALOAD 0x4
0x257: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x259: V181 = 0x24
0x25b: V182 = CALLDATALOAD 0x24
0x25c: V183 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V184 = 0x44
0x25f: V185 = CALLDATALOAD 0x44
0x260: V186 = 0x6fb
0x263: JUMP 0x6fb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1eb, V180, V183, V185]
Exit stack: [V10, 0x1eb, V180, V183, V185]

================================

Block 0x264
[0x264:0x277]
---
Predecessors: []
Successors: []
---
0x264 JUMPDEST
0x265 PUSH1 0x40
0x267 MLOAD
0x268 SWAP1
0x269 ISZERO
0x26a ISZERO
0x26b DUP2
0x26c MSTORE
0x26d PUSH1 0x20
0x26f ADD
0x270 PUSH1 0x40
0x272 MLOAD
0x273 DUP1
0x274 SWAP2
0x275 SUB
0x276 SWAP1
0x277 RETURN
---
0x264: JUMPDEST 
0x265: V187 = 0x40
0x267: V188 = M[0x40]
0x269: V189 = ISZERO S0
0x26a: V190 = ISZERO V189
0x26c: M[V188] = V190
0x26d: V191 = 0x20
0x26f: V192 = ADD 0x20 V188
0x270: V193 = 0x40
0x272: V194 = M[0x40]
0x275: V195 = SUB V192 V194
0x277: RETURN V194 V195
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x278
[0x278:0x27e]
---
Predecessors: [0x6a]
Successors: [0x27f, 0x283]
---
0x278 JUMPDEST
0x279 CALLVALUE
0x27a ISZERO
0x27b PUSH2 0x283
0x27e JUMPI
---
0x278: JUMPDEST 
0x279: V196 = CALLVALUE
0x27a: V197 = ISZERO V196
0x27b: V198 = 0x283
0x27e: JUMPI 0x283 V197
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27f
[0x27f:0x282]
---
Predecessors: [0x278]
Successors: []
---
0x27f PUSH1 0x0
0x281 DUP1
0x282 REVERT
---
0x27f: V199 = 0x0
0x282: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x283
[0x283:0x28a]
---
Predecessors: [0x278]
Successors: [0x817]
---
0x283 JUMPDEST
0x284 PUSH2 0x28b
0x287 PUSH2 0x817
0x28a JUMP
---
0x283: JUMPDEST 
0x284: V200 = 0x28b
0x287: V201 = 0x817
0x28a: JUMP 0x817
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x28b]
Exit stack: [V10, 0x28b]

================================

Block 0x28b
[0x28b:0x2a0]
---
Predecessors: [0x817]
Successors: []
---
0x28b JUMPDEST
0x28c PUSH1 0x40
0x28e MLOAD
0x28f PUSH1 0xff
0x291 SWAP1
0x292 SWAP2
0x293 AND
0x294 DUP2
0x295 MSTORE
0x296 PUSH1 0x20
0x298 ADD
0x299 PUSH1 0x40
0x29b MLOAD
0x29c DUP1
0x29d SWAP2
0x29e SUB
0x29f SWAP1
0x2a0 RETURN
---
0x28b: JUMPDEST 
0x28c: V202 = 0x40
0x28e: V203 = M[0x40]
0x28f: V204 = 0xff
0x293: V205 = AND 0x12 0xff
0x295: M[V203] = 0x12
0x296: V206 = 0x20
0x298: V207 = ADD 0x20 V203
0x299: V208 = 0x40
0x29b: V209 = M[0x40]
0x29e: V210 = SUB V207 V209
0x2a0: RETURN V209 V210
---
Entry stack: [V10, 0x28b, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x28b]

================================

Block 0x2a1
[0x2a1:0x2a7]
---
Predecessors: [0x75]
Successors: [0x2a8, 0x2ac]
---
0x2a1 JUMPDEST
0x2a2 CALLVALUE
0x2a3 ISZERO
0x2a4 PUSH2 0x2ac
0x2a7 JUMPI
---
0x2a1: JUMPDEST 
0x2a2: V211 = CALLVALUE
0x2a3: V212 = ISZERO V211
0x2a4: V213 = 0x2ac
0x2a7: JUMPI 0x2ac V212
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a8
[0x2a8:0x2ab]
---
Predecessors: [0x2a1]
Successors: []
---
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab REVERT
---
0x2a8: V214 = 0x0
0x2ab: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ac
[0x2ac:0x2b3]
---
Predecessors: [0x2a1]
Successors: [0x81c]
---
0x2ac JUMPDEST
0x2ad PUSH2 0x13c
0x2b0 PUSH2 0x81c
0x2b3 JUMP
---
0x2ac: JUMPDEST 
0x2ad: V215 = 0x13c
0x2b0: V216 = 0x81c
0x2b3: JUMP 0x81c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x13c]
Exit stack: [V10, 0x13c]

================================

Block 0x2b4
[0x2b4:0x2b5]
---
Predecessors: []
Successors: []
---
0x2b4 JUMPDEST
0x2b5 STOP
---
0x2b4: JUMPDEST 
0x2b5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2b6
[0x2b6:0x2bc]
---
Predecessors: [0x80]
Successors: [0x2bd, 0x2c1]
---
0x2b6 JUMPDEST
0x2b7 CALLVALUE
0x2b8 ISZERO
0x2b9 PUSH2 0x2c1
0x2bc JUMPI
---
0x2b6: JUMPDEST 
0x2b7: V217 = CALLVALUE
0x2b8: V218 = ISZERO V217
0x2b9: V219 = 0x2c1
0x2bc: JUMPI 0x2c1 V218
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2bd
[0x2bd:0x2c0]
---
Predecessors: [0x2b6]
Successors: []
---
0x2bd PUSH1 0x0
0x2bf DUP1
0x2c0 REVERT
---
0x2bd: V220 = 0x0
0x2c0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c1
[0x2c1:0x2c8]
---
Predecessors: [0x2b6]
Successors: [0x881]
---
0x2c1 JUMPDEST
0x2c2 PUSH2 0x13c
0x2c5 PUSH2 0x881
0x2c8 JUMP
---
0x2c1: JUMPDEST 
0x2c2: V221 = 0x13c
0x2c5: V222 = 0x881
0x2c8: JUMP 0x881
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x13c]
Exit stack: [V10, 0x13c]

================================

Block 0x2c9
[0x2c9:0x2ca]
---
Predecessors: []
Successors: []
---
0x2c9 JUMPDEST
0x2ca STOP
---
0x2c9: JUMPDEST 
0x2ca: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2cb
[0x2cb:0x2d1]
---
Predecessors: [0x8b]
Successors: [0x2d2, 0x2d6]
---
0x2cb JUMPDEST
0x2cc CALLVALUE
0x2cd ISZERO
0x2ce PUSH2 0x2d6
0x2d1 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V223 = CALLVALUE
0x2cd: V224 = ISZERO V223
0x2ce: V225 = 0x2d6
0x2d1: JUMPI 0x2d6 V224
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d2
[0x2d2:0x2d5]
---
Predecessors: [0x2cb]
Successors: []
---
0x2d2 PUSH1 0x0
0x2d4 DUP1
0x2d5 REVERT
---
0x2d2: V226 = 0x0
0x2d5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d6
[0x2d6:0x2dd]
---
Predecessors: [0x2cb]
Successors: [0x8ad]
---
0x2d6 JUMPDEST
0x2d7 PUSH2 0x151
0x2da PUSH2 0x8ad
0x2dd JUMP
---
0x2d6: JUMPDEST 
0x2d7: V227 = 0x151
0x2da: V228 = 0x8ad
0x2dd: JUMP 0x8ad
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x151]
Exit stack: [V10, 0x151]

================================

Block 0x2de
[0x2de:0x301]
---
Predecessors: []
Successors: [0x302]
---
0x2de JUMPDEST
0x2df PUSH1 0x40
0x2e1 MLOAD
0x2e2 PUSH1 0x20
0x2e4 DUP1
0x2e5 DUP3
0x2e6 MSTORE
0x2e7 DUP2
0x2e8 SWAP1
0x2e9 DUP2
0x2ea ADD
0x2eb DUP4
0x2ec DUP2
0x2ed DUP2
0x2ee MLOAD
0x2ef DUP2
0x2f0 MSTORE
0x2f1 PUSH1 0x20
0x2f3 ADD
0x2f4 SWAP2
0x2f5 POP
0x2f6 DUP1
0x2f7 MLOAD
0x2f8 SWAP1
0x2f9 PUSH1 0x20
0x2fb ADD
0x2fc SWAP1
0x2fd DUP1
0x2fe DUP4
0x2ff DUP4
0x300 PUSH1 0x0
---
0x2de: JUMPDEST 
0x2df: V229 = 0x40
0x2e1: V230 = M[0x40]
0x2e2: V231 = 0x20
0x2e6: M[V230] = 0x20
0x2ea: V232 = ADD V230 0x20
0x2ee: V233 = M[S0]
0x2f0: M[V232] = V233
0x2f1: V234 = 0x20
0x2f3: V235 = ADD 0x20 V232
0x2f7: V236 = M[S0]
0x2f9: V237 = 0x20
0x2fb: V238 = ADD 0x20 S0
0x300: V239 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V230, V230, V235, V238, V236, V236, V235, V238, 0x0]
Exit stack: [S0, V230, V230, V235, V238, V236, V236, V235, V238, 0x0]

================================

Block 0x302
[0x302:0x30a]
---
Predecessors: [0x2de]
Successors: [0x18e, 0x30b]
---
0x302 JUMPDEST
0x303 DUP4
0x304 DUP2
0x305 LT
0x306 ISZERO
0x307 PUSH2 0x18e
0x30a JUMPI
---
0x302: JUMPDEST 
0x305: V240 = LT 0x0 V236
0x306: V241 = ISZERO V240
0x307: V242 = 0x18e
0x30a: JUMPI 0x18e V241
---
Entry stack: [S9, V230, V230, V235, V238, V236, V236, V235, V238, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V230, V230, V235, V238, V236, V236, V235, V238, 0x0]

================================

Block 0x30b
[0x30b:0x312]
---
Predecessors: [0x302]
Successors: [0x313]
---
0x30b DUP1
0x30c DUP3
0x30d ADD
0x30e MLOAD
0x30f DUP2
0x310 DUP5
0x311 ADD
0x312 MSTORE
---
0x30d: V243 = ADD V238 0x0
0x30e: V244 = M[V243]
0x311: V245 = ADD V235 0x0
0x312: M[V245] = V244
---
Entry stack: [S9, V230, V230, V235, V238, V236, V236, V235, V238, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V230, V230, V235, V238, V236, V236, V235, V238, 0x0]

================================

Block 0x313
[0x313:0x31a]
---
Predecessors: [0x30b]
Successors: [0x175]
---
0x313 JUMPDEST
0x314 PUSH1 0x20
0x316 ADD
0x317 PUSH2 0x175
0x31a JUMP
---
0x313: JUMPDEST 
0x314: V246 = 0x20
0x316: V247 = ADD 0x20 0x0
0x317: V248 = 0x175
0x31a: JUMP 0x175
---
Entry stack: [S9, V230, V230, V235, V238, V236, V236, V235, V238, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V230, V230, V235, V238, V236, V236, V235, V238, 0x20]

================================

Block 0x31b
[0x31b:0x32e]
---
Predecessors: []
Successors: [0x1bb, 0x32f]
---
0x31b JUMPDEST
0x31c POP
0x31d POP
0x31e POP
0x31f POP
0x320 SWAP1
0x321 POP
0x322 SWAP1
0x323 DUP2
0x324 ADD
0x325 SWAP1
0x326 PUSH1 0x1f
0x328 AND
0x329 DUP1
0x32a ISZERO
0x32b PUSH2 0x1bb
0x32e JUMPI
---
0x31b: JUMPDEST 
0x324: V249 = ADD S4 S6
0x326: V250 = 0x1f
0x328: V251 = AND 0x1f S4
0x32a: V252 = ISZERO V251
0x32b: V253 = 0x1bb
0x32e: JUMPI 0x1bb V252
---
Entry stack: []
Stack pops: 7
Stack additions: [V249, V251]
Exit stack: [V249, V251]

================================

Block 0x32f
[0x32f:0x347]
---
Predecessors: [0x31b]
Successors: [0x348]
---
0x32f DUP1
0x330 DUP3
0x331 SUB
0x332 DUP1
0x333 MLOAD
0x334 PUSH1 0x1
0x336 DUP4
0x337 PUSH1 0x20
0x339 SUB
0x33a PUSH2 0x100
0x33d EXP
0x33e SUB
0x33f NOT
0x340 AND
0x341 DUP2
0x342 MSTORE
0x343 PUSH1 0x20
0x345 ADD
0x346 SWAP2
0x347 POP
---
0x331: V254 = SUB V249 V251
0x333: V255 = M[V254]
0x334: V256 = 0x1
0x337: V257 = 0x20
0x339: V258 = SUB 0x20 V251
0x33a: V259 = 0x100
0x33d: V260 = EXP 0x100 V258
0x33e: V261 = SUB V260 0x1
0x33f: V262 = NOT V261
0x340: V263 = AND V262 V255
0x342: M[V254] = V263
0x343: V264 = 0x20
0x345: V265 = ADD 0x20 V254
---
Entry stack: [V249, V251]
Stack pops: 2
Stack additions: [V265, S0]
Exit stack: [V265, V251]

================================

Block 0x348
[0x348:0x355]
---
Predecessors: [0x32f]
Successors: []
---
0x348 JUMPDEST
0x349 POP
0x34a SWAP3
0x34b POP
0x34c POP
0x34d POP
0x34e PUSH1 0x40
0x350 MLOAD
0x351 DUP1
0x352 SWAP2
0x353 SUB
0x354 SWAP1
0x355 RETURN
---
0x348: JUMPDEST 
0x34e: V266 = 0x40
0x350: V267 = M[0x40]
0x353: V268 = SUB V265 V267
0x355: RETURN V267 V268
---
Entry stack: [V265, V251]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x356
[0x356:0x35c]
---
Predecessors: [0x96]
Successors: [0x35d, 0x361]
---
0x356 JUMPDEST
0x357 CALLVALUE
0x358 ISZERO
0x359 PUSH2 0x361
0x35c JUMPI
---
0x356: JUMPDEST 
0x357: V269 = CALLVALUE
0x358: V270 = ISZERO V269
0x359: V271 = 0x361
0x35c: JUMPI 0x361 V270
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x35d
[0x35d:0x360]
---
Predecessors: [0x356]
Successors: []
---
0x35d PUSH1 0x0
0x35f DUP1
0x360 REVERT
---
0x35d: V272 = 0x0
0x360: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x361
[0x361:0x368]
---
Predecessors: [0x356]
Successors: [0x94b]
---
0x361 JUMPDEST
0x362 PUSH2 0x212
0x365 PUSH2 0x94b
0x368 JUMP
---
0x361: JUMPDEST 
0x362: V273 = 0x212
0x365: V274 = 0x94b
0x368: JUMP 0x94b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x212]
Exit stack: [V10, 0x212]

================================

Block 0x369
[0x369:0x37a]
---
Predecessors: []
Successors: []
---
0x369 JUMPDEST
0x36a PUSH1 0x40
0x36c MLOAD
0x36d SWAP1
0x36e DUP2
0x36f MSTORE
0x370 PUSH1 0x20
0x372 ADD
0x373 PUSH1 0x40
0x375 MLOAD
0x376 DUP1
0x377 SWAP2
0x378 SUB
0x379 SWAP1
0x37a RETURN
---
0x369: JUMPDEST 
0x36a: V275 = 0x40
0x36c: V276 = M[0x40]
0x36f: M[V276] = S0
0x370: V277 = 0x20
0x372: V278 = ADD 0x20 V276
0x373: V279 = 0x40
0x375: V280 = M[0x40]
0x378: V281 = SUB V278 V280
0x37a: RETURN V280 V281
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x37b
[0x37b:0x3c0]
---
Predecessors: [0xa1]
Successors: [0x561]
---
0x37b JUMPDEST
0x37c PUSH2 0x13c
0x37f PUSH1 0x4
0x381 PUSH1 0x24
0x383 DUP2
0x384 CALLDATALOAD
0x385 DUP2
0x386 DUP2
0x387 ADD
0x388 SWAP1
0x389 DUP4
0x38a ADD
0x38b CALLDATALOAD
0x38c DUP1
0x38d PUSH1 0x20
0x38f PUSH1 0x1f
0x391 DUP3
0x392 ADD
0x393 DUP2
0x394 SWAP1
0x395 DIV
0x396 DUP2
0x397 MUL
0x398 ADD
0x399 PUSH1 0x40
0x39b MLOAD
0x39c SWAP1
0x39d DUP2
0x39e ADD
0x39f PUSH1 0x40
0x3a1 MSTORE
0x3a2 DUP2
0x3a3 DUP2
0x3a4 MSTORE
0x3a5 SWAP3
0x3a6 SWAP2
0x3a7 SWAP1
0x3a8 PUSH1 0x20
0x3aa DUP5
0x3ab ADD
0x3ac DUP4
0x3ad DUP4
0x3ae DUP1
0x3af DUP3
0x3b0 DUP5
0x3b1 CALLDATACOPY
0x3b2 POP
0x3b3 SWAP5
0x3b4 SWAP7
0x3b5 POP
0x3b6 PUSH2 0x561
0x3b9 SWAP6
0x3ba POP
0x3bb POP
0x3bc POP
0x3bd POP
0x3be POP
0x3bf POP
0x3c0 JUMP
---
0x37b: JUMPDEST 
0x37c: V282 = 0x13c
0x37f: V283 = 0x4
0x381: V284 = 0x24
0x384: V285 = CALLDATALOAD 0x4
0x387: V286 = ADD V285 0x24
0x38a: V287 = ADD 0x4 V285
0x38b: V288 = CALLDATALOAD V287
0x38d: V289 = 0x20
0x38f: V290 = 0x1f
0x392: V291 = ADD V288 0x1f
0x395: V292 = DIV V291 0x20
0x397: V293 = MUL 0x20 V292
0x398: V294 = ADD V293 0x20
0x399: V295 = 0x40
0x39b: V296 = M[0x40]
0x39e: V297 = ADD V296 V294
0x39f: V298 = 0x40
0x3a1: M[0x40] = V297
0x3a4: M[V296] = V288
0x3a8: V299 = 0x20
0x3ab: V300 = ADD V296 0x20
0x3b1: CALLDATACOPY V300 V286 V288
0x3b6: V301 = 0x561
0x3c0: JUMP 0x561
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x13c, V296]
Exit stack: [V10, 0x13c, V296]

================================

Block 0x3c1
[0x3c1:0x3c2]
---
Predecessors: []
Successors: []
---
0x3c1 JUMPDEST
0x3c2 STOP
---
0x3c1: JUMPDEST 
0x3c2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3c3
[0x3c3:0x3c9]
---
Predecessors: [0xac]
Successors: [0x3ca, 0x3ce]
---
0x3c3 JUMPDEST
0x3c4 CALLVALUE
0x3c5 ISZERO
0x3c6 PUSH2 0x3ce
0x3c9 JUMPI
---
0x3c3: JUMPDEST 
0x3c4: V302 = CALLVALUE
0x3c5: V303 = ISZERO V302
0x3c6: V304 = 0x3ce
0x3c9: JUMPI 0x3ce V303
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ca
[0x3ca:0x3cd]
---
Predecessors: [0x3c3]
Successors: []
---
0x3ca PUSH1 0x0
0x3cc DUP1
0x3cd REVERT
---
0x3ca: V305 = 0x0
0x3cd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ce
[0x3ce:0x3e1]
---
Predecessors: [0x3c3]
Successors: [0x951]
---
0x3ce JUMPDEST
0x3cf PUSH2 0x212
0x3d2 PUSH1 0x1
0x3d4 PUSH1 0xa0
0x3d6 PUSH1 0x2
0x3d8 EXP
0x3d9 SUB
0x3da PUSH1 0x4
0x3dc CALLDATALOAD
0x3dd AND
0x3de PUSH2 0x951
0x3e1 JUMP
---
0x3ce: JUMPDEST 
0x3cf: V306 = 0x212
0x3d2: V307 = 0x1
0x3d4: V308 = 0xa0
0x3d6: V309 = 0x2
0x3d8: V310 = EXP 0x2 0xa0
0x3d9: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3da: V312 = 0x4
0x3dc: V313 = CALLDATALOAD 0x4
0x3dd: V314 = AND V313 0xffffffffffffffffffffffffffffffffffffffff
0x3de: V315 = 0x951
0x3e1: JUMP 0x951
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x212, V314]
Exit stack: [V10, 0x212, V314]

================================

Block 0x3e2
[0x3e2:0x3f3]
---
Predecessors: []
Successors: []
---
0x3e2 JUMPDEST
0x3e3 PUSH1 0x40
0x3e5 MLOAD
0x3e6 SWAP1
0x3e7 DUP2
0x3e8 MSTORE
0x3e9 PUSH1 0x20
0x3eb ADD
0x3ec PUSH1 0x40
0x3ee MLOAD
0x3ef DUP1
0x3f0 SWAP2
0x3f1 SUB
0x3f2 SWAP1
0x3f3 RETURN
---
0x3e2: JUMPDEST 
0x3e3: V316 = 0x40
0x3e5: V317 = M[0x40]
0x3e8: M[V317] = S0
0x3e9: V318 = 0x20
0x3eb: V319 = ADD 0x20 V317
0x3ec: V320 = 0x40
0x3ee: V321 = M[0x40]
0x3f1: V322 = SUB V319 V321
0x3f3: RETURN V321 V322
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3f4
[0x3f4:0x3fa]
---
Predecessors: [0xb7]
Successors: [0x3fb, 0x3ff]
---
0x3f4 JUMPDEST
0x3f5 CALLVALUE
0x3f6 ISZERO
0x3f7 PUSH2 0x3ff
0x3fa JUMPI
---
0x3f4: JUMPDEST 
0x3f5: V323 = CALLVALUE
0x3f6: V324 = ISZERO V323
0x3f7: V325 = 0x3ff
0x3fa: JUMPI 0x3ff V324
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3fb
[0x3fb:0x3fe]
---
Predecessors: [0x3f4]
Successors: []
---
0x3fb PUSH1 0x0
0x3fd DUP1
0x3fe REVERT
---
0x3fb: V326 = 0x0
0x3fe: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ff
[0x3ff:0x406]
---
Predecessors: [0x3f4]
Successors: [0x970]
---
0x3ff JUMPDEST
0x400 PUSH2 0x212
0x403 PUSH2 0x970
0x406 JUMP
---
0x3ff: JUMPDEST 
0x400: V327 = 0x212
0x403: V328 = 0x970
0x406: JUMP 0x970
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x212]
Exit stack: [V10, 0x212]

================================

Block 0x407
[0x407:0x418]
---
Predecessors: []
Successors: []
---
0x407 JUMPDEST
0x408 PUSH1 0x40
0x40a MLOAD
0x40b SWAP1
0x40c DUP2
0x40d MSTORE
0x40e PUSH1 0x20
0x410 ADD
0x411 PUSH1 0x40
0x413 MLOAD
0x414 DUP1
0x415 SWAP2
0x416 SUB
0x417 SWAP1
0x418 RETURN
---
0x407: JUMPDEST 
0x408: V329 = 0x40
0x40a: V330 = M[0x40]
0x40d: M[V330] = S0
0x40e: V331 = 0x20
0x410: V332 = ADD 0x20 V330
0x411: V333 = 0x40
0x413: V334 = M[0x40]
0x416: V335 = SUB V332 V334
0x418: RETURN V334 V335
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x419
[0x419:0x41f]
---
Predecessors: [0xc2]
Successors: [0x420, 0x424]
---
0x419 JUMPDEST
0x41a CALLVALUE
0x41b ISZERO
0x41c PUSH2 0x424
0x41f JUMPI
---
0x419: JUMPDEST 
0x41a: V336 = CALLVALUE
0x41b: V337 = ISZERO V336
0x41c: V338 = 0x424
0x41f: JUMPI 0x424 V337
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x420
[0x420:0x423]
---
Predecessors: [0x419]
Successors: []
---
0x420 PUSH1 0x0
0x422 DUP1
0x423 REVERT
---
0x420: V339 = 0x0
0x423: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x424
[0x424:0x42b]
---
Predecessors: [0x419]
Successors: [0x978]
---
0x424 JUMPDEST
0x425 PUSH2 0x42c
0x428 PUSH2 0x978
0x42b JUMP
---
0x424: JUMPDEST 
0x425: V340 = 0x42c
0x428: V341 = 0x978
0x42b: JUMP 0x978
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x42c]
Exit stack: [V10, 0x42c]

================================

Block 0x42c
[0x42c:0x447]
---
Predecessors: [0x978]
Successors: []
---
0x42c JUMPDEST
0x42d PUSH1 0x40
0x42f MLOAD
0x430 PUSH1 0x1
0x432 PUSH1 0xa0
0x434 PUSH1 0x2
0x436 EXP
0x437 SUB
0x438 SWAP1
0x439 SWAP2
0x43a AND
0x43b DUP2
0x43c MSTORE
0x43d PUSH1 0x20
0x43f ADD
0x440 PUSH1 0x40
0x442 MLOAD
0x443 DUP1
0x444 SWAP2
0x445 SUB
0x446 SWAP1
0x447 RETURN
---
0x42c: JUMPDEST 
0x42d: V342 = 0x40
0x42f: V343 = M[0x40]
0x430: V344 = 0x1
0x432: V345 = 0xa0
0x434: V346 = 0x2
0x436: V347 = EXP 0x2 0xa0
0x437: V348 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43a: V349 = AND V827 0xffffffffffffffffffffffffffffffffffffffff
0x43c: M[V343] = V349
0x43d: V350 = 0x20
0x43f: V351 = ADD 0x20 V343
0x440: V352 = 0x40
0x442: V353 = M[0x40]
0x445: V354 = SUB V351 V353
0x447: RETURN V353 V354
---
Entry stack: [V10, 0x42c, V827]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x42c]

================================

Block 0x448
[0x448:0x44e]
---
Predecessors: [0xcd]
Successors: [0x44f, 0x453]
---
0x448 JUMPDEST
0x449 CALLVALUE
0x44a ISZERO
0x44b PUSH2 0x453
0x44e JUMPI
---
0x448: JUMPDEST 
0x449: V355 = CALLVALUE
0x44a: V356 = ISZERO V355
0x44b: V357 = 0x453
0x44e: JUMPI 0x453 V356
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x44f
[0x44f:0x452]
---
Predecessors: [0x448]
Successors: []
---
0x44f PUSH1 0x0
0x451 DUP1
0x452 REVERT
---
0x44f: V358 = 0x0
0x452: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x453
[0x453:0x45a]
---
Predecessors: [0x448]
Successors: [0x987]
---
0x453 JUMPDEST
0x454 PUSH2 0x151
0x457 PUSH2 0x987
0x45a JUMP
---
0x453: JUMPDEST 
0x454: V359 = 0x151
0x457: V360 = 0x987
0x45a: JUMP 0x987
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x151]
Exit stack: [V10, 0x151]

================================

Block 0x45b
[0x45b:0x47e]
---
Predecessors: []
Successors: [0x47f]
---
0x45b JUMPDEST
0x45c PUSH1 0x40
0x45e MLOAD
0x45f PUSH1 0x20
0x461 DUP1
0x462 DUP3
0x463 MSTORE
0x464 DUP2
0x465 SWAP1
0x466 DUP2
0x467 ADD
0x468 DUP4
0x469 DUP2
0x46a DUP2
0x46b MLOAD
0x46c DUP2
0x46d MSTORE
0x46e PUSH1 0x20
0x470 ADD
0x471 SWAP2
0x472 POP
0x473 DUP1
0x474 MLOAD
0x475 SWAP1
0x476 PUSH1 0x20
0x478 ADD
0x479 SWAP1
0x47a DUP1
0x47b DUP4
0x47c DUP4
0x47d PUSH1 0x0
---
0x45b: JUMPDEST 
0x45c: V361 = 0x40
0x45e: V362 = M[0x40]
0x45f: V363 = 0x20
0x463: M[V362] = 0x20
0x467: V364 = ADD V362 0x20
0x46b: V365 = M[S0]
0x46d: M[V364] = V365
0x46e: V366 = 0x20
0x470: V367 = ADD 0x20 V364
0x474: V368 = M[S0]
0x476: V369 = 0x20
0x478: V370 = ADD 0x20 S0
0x47d: V371 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V362, V362, V367, V370, V368, V368, V367, V370, 0x0]
Exit stack: [S0, V362, V362, V367, V370, V368, V368, V367, V370, 0x0]

================================

Block 0x47f
[0x47f:0x487]
---
Predecessors: [0x45b]
Successors: [0x18e, 0x488]
---
0x47f JUMPDEST
0x480 DUP4
0x481 DUP2
0x482 LT
0x483 ISZERO
0x484 PUSH2 0x18e
0x487 JUMPI
---
0x47f: JUMPDEST 
0x482: V372 = LT 0x0 V368
0x483: V373 = ISZERO V372
0x484: V374 = 0x18e
0x487: JUMPI 0x18e V373
---
Entry stack: [S9, V362, V362, V367, V370, V368, V368, V367, V370, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V362, V362, V367, V370, V368, V368, V367, V370, 0x0]

================================

Block 0x488
[0x488:0x48f]
---
Predecessors: [0x47f]
Successors: [0x490]
---
0x488 DUP1
0x489 DUP3
0x48a ADD
0x48b MLOAD
0x48c DUP2
0x48d DUP5
0x48e ADD
0x48f MSTORE
---
0x48a: V375 = ADD V370 0x0
0x48b: V376 = M[V375]
0x48e: V377 = ADD V367 0x0
0x48f: M[V377] = V376
---
Entry stack: [S9, V362, V362, V367, V370, V368, V368, V367, V370, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V362, V362, V367, V370, V368, V368, V367, V370, 0x0]

================================

Block 0x490
[0x490:0x497]
---
Predecessors: [0x488]
Successors: [0x175]
---
0x490 JUMPDEST
0x491 PUSH1 0x20
0x493 ADD
0x494 PUSH2 0x175
0x497 JUMP
---
0x490: JUMPDEST 
0x491: V378 = 0x20
0x493: V379 = ADD 0x20 0x0
0x494: V380 = 0x175
0x497: JUMP 0x175
---
Entry stack: [S9, V362, V362, V367, V370, V368, V368, V367, V370, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V362, V362, V367, V370, V368, V368, V367, V370, 0x20]

================================

Block 0x498
[0x498:0x4ab]
---
Predecessors: []
Successors: [0x1bb, 0x4ac]
---
0x498 JUMPDEST
0x499 POP
0x49a POP
0x49b POP
0x49c POP
0x49d SWAP1
0x49e POP
0x49f SWAP1
0x4a0 DUP2
0x4a1 ADD
0x4a2 SWAP1
0x4a3 PUSH1 0x1f
0x4a5 AND
0x4a6 DUP1
0x4a7 ISZERO
0x4a8 PUSH2 0x1bb
0x4ab JUMPI
---
0x498: JUMPDEST 
0x4a1: V381 = ADD S4 S6
0x4a3: V382 = 0x1f
0x4a5: V383 = AND 0x1f S4
0x4a7: V384 = ISZERO V383
0x4a8: V385 = 0x1bb
0x4ab: JUMPI 0x1bb V384
---
Entry stack: []
Stack pops: 7
Stack additions: [V381, V383]
Exit stack: [V381, V383]

================================

Block 0x4ac
[0x4ac:0x4c4]
---
Predecessors: [0x498]
Successors: [0x4c5]
---
0x4ac DUP1
0x4ad DUP3
0x4ae SUB
0x4af DUP1
0x4b0 MLOAD
0x4b1 PUSH1 0x1
0x4b3 DUP4
0x4b4 PUSH1 0x20
0x4b6 SUB
0x4b7 PUSH2 0x100
0x4ba EXP
0x4bb SUB
0x4bc NOT
0x4bd AND
0x4be DUP2
0x4bf MSTORE
0x4c0 PUSH1 0x20
0x4c2 ADD
0x4c3 SWAP2
0x4c4 POP
---
0x4ae: V386 = SUB V381 V383
0x4b0: V387 = M[V386]
0x4b1: V388 = 0x1
0x4b4: V389 = 0x20
0x4b6: V390 = SUB 0x20 V383
0x4b7: V391 = 0x100
0x4ba: V392 = EXP 0x100 V390
0x4bb: V393 = SUB V392 0x1
0x4bc: V394 = NOT V393
0x4bd: V395 = AND V394 V387
0x4bf: M[V386] = V395
0x4c0: V396 = 0x20
0x4c2: V397 = ADD 0x20 V386
---
Entry stack: [V381, V383]
Stack pops: 2
Stack additions: [V397, S0]
Exit stack: [V397, V383]

================================

Block 0x4c5
[0x4c5:0x4d2]
---
Predecessors: [0x4ac]
Successors: []
---
0x4c5 JUMPDEST
0x4c6 POP
0x4c7 SWAP3
0x4c8 POP
0x4c9 POP
0x4ca POP
0x4cb PUSH1 0x40
0x4cd MLOAD
0x4ce DUP1
0x4cf SWAP2
0x4d0 SUB
0x4d1 SWAP1
0x4d2 RETURN
---
0x4c5: JUMPDEST 
0x4cb: V398 = 0x40
0x4cd: V399 = M[0x40]
0x4d0: V400 = SUB V397 V399
0x4d2: RETURN V399 V400
---
Entry stack: [V397, V383]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x4d3
[0x4d3:0x4d9]
---
Predecessors: [0xd8]
Successors: [0x4da, 0x4de]
---
0x4d3 JUMPDEST
0x4d4 CALLVALUE
0x4d5 ISZERO
0x4d6 PUSH2 0x4de
0x4d9 JUMPI
---
0x4d3: JUMPDEST 
0x4d4: V401 = CALLVALUE
0x4d5: V402 = ISZERO V401
0x4d6: V403 = 0x4de
0x4d9: JUMPI 0x4de V402
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4da
[0x4da:0x4dd]
---
Predecessors: [0x4d3]
Successors: []
---
0x4da PUSH1 0x0
0x4dc DUP1
0x4dd REVERT
---
0x4da: V404 = 0x0
0x4dd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4de
[0x4de:0x4f4]
---
Predecessors: [0x4d3]
Successors: [0x9be]
---
0x4de JUMPDEST
0x4df PUSH2 0x1eb
0x4e2 PUSH1 0x1
0x4e4 PUSH1 0xa0
0x4e6 PUSH1 0x2
0x4e8 EXP
0x4e9 SUB
0x4ea PUSH1 0x4
0x4ec CALLDATALOAD
0x4ed AND
0x4ee PUSH1 0x24
0x4f0 CALLDATALOAD
0x4f1 PUSH2 0x9be
0x4f4 JUMP
---
0x4de: JUMPDEST 
0x4df: V405 = 0x1eb
0x4e2: V406 = 0x1
0x4e4: V407 = 0xa0
0x4e6: V408 = 0x2
0x4e8: V409 = EXP 0x2 0xa0
0x4e9: V410 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ea: V411 = 0x4
0x4ec: V412 = CALLDATALOAD 0x4
0x4ed: V413 = AND V412 0xffffffffffffffffffffffffffffffffffffffff
0x4ee: V414 = 0x24
0x4f0: V415 = CALLDATALOAD 0x24
0x4f1: V416 = 0x9be
0x4f4: JUMP 0x9be
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1eb, V413, V415]
Exit stack: [V10, 0x1eb, V413, V415]

================================

Block 0x4f5
[0x4f5:0x508]
---
Predecessors: []
Successors: []
---
0x4f5 JUMPDEST
0x4f6 PUSH1 0x40
0x4f8 MLOAD
0x4f9 SWAP1
0x4fa ISZERO
0x4fb ISZERO
0x4fc DUP2
0x4fd MSTORE
0x4fe PUSH1 0x20
0x500 ADD
0x501 PUSH1 0x40
0x503 MLOAD
0x504 DUP1
0x505 SWAP2
0x506 SUB
0x507 SWAP1
0x508 RETURN
---
0x4f5: JUMPDEST 
0x4f6: V417 = 0x40
0x4f8: V418 = M[0x40]
0x4fa: V419 = ISZERO S0
0x4fb: V420 = ISZERO V419
0x4fd: M[V418] = V420
0x4fe: V421 = 0x20
0x500: V422 = ADD 0x20 V418
0x501: V423 = 0x40
0x503: V424 = M[0x40]
0x506: V425 = SUB V422 V424
0x508: RETURN V424 V425
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x509
[0x509:0x50f]
---
Predecessors: [0xe3]
Successors: [0x510, 0x514]
---
0x509 JUMPDEST
0x50a CALLVALUE
0x50b ISZERO
0x50c PUSH2 0x514
0x50f JUMPI
---
0x509: JUMPDEST 
0x50a: V426 = CALLVALUE
0x50b: V427 = ISZERO V426
0x50c: V428 = 0x514
0x50f: JUMPI 0x514 V427
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x510
[0x510:0x513]
---
Predecessors: [0x509]
Successors: []
---
0x510 PUSH1 0x0
0x512 DUP1
0x513 REVERT
---
0x510: V429 = 0x0
0x513: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x514
[0x514:0x52d]
---
Predecessors: [0x509]
Successors: [0xa8d]
---
0x514 JUMPDEST
0x515 PUSH2 0x212
0x518 PUSH1 0x1
0x51a PUSH1 0xa0
0x51c PUSH1 0x2
0x51e EXP
0x51f SUB
0x520 PUSH1 0x4
0x522 CALLDATALOAD
0x523 DUP2
0x524 AND
0x525 SWAP1
0x526 PUSH1 0x24
0x528 CALLDATALOAD
0x529 AND
0x52a PUSH2 0xa8d
0x52d JUMP
---
0x514: JUMPDEST 
0x515: V430 = 0x212
0x518: V431 = 0x1
0x51a: V432 = 0xa0
0x51c: V433 = 0x2
0x51e: V434 = EXP 0x2 0xa0
0x51f: V435 = SUB 0x10000000000000000000000000000000000000000 0x1
0x520: V436 = 0x4
0x522: V437 = CALLDATALOAD 0x4
0x524: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x526: V439 = 0x24
0x528: V440 = CALLDATALOAD 0x24
0x529: V441 = AND V440 0xffffffffffffffffffffffffffffffffffffffff
0x52a: V442 = 0xa8d
0x52d: JUMP 0xa8d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x212, V438, V441]
Exit stack: [V10, 0x212, V438, V441]

================================

Block 0x52e
[0x52e:0x53f]
---
Predecessors: []
Successors: []
---
0x52e JUMPDEST
0x52f PUSH1 0x40
0x531 MLOAD
0x532 SWAP1
0x533 DUP2
0x534 MSTORE
0x535 PUSH1 0x20
0x537 ADD
0x538 PUSH1 0x40
0x53a MLOAD
0x53b DUP1
0x53c SWAP2
0x53d SUB
0x53e SWAP1
0x53f RETURN
---
0x52e: JUMPDEST 
0x52f: V443 = 0x40
0x531: V444 = M[0x40]
0x534: M[V444] = S0
0x535: V445 = 0x20
0x537: V446 = ADD 0x20 V444
0x538: V447 = 0x40
0x53a: V448 = M[0x40]
0x53d: V449 = SUB V446 V448
0x53f: RETURN V448 V449
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x540
[0x540:0x546]
---
Predecessors: [0xee]
Successors: [0x547, 0x54b]
---
0x540 JUMPDEST
0x541 CALLVALUE
0x542 ISZERO
0x543 PUSH2 0x54b
0x546 JUMPI
---
0x540: JUMPDEST 
0x541: V450 = CALLVALUE
0x542: V451 = ISZERO V450
0x543: V452 = 0x54b
0x546: JUMPI 0x54b V451
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x547
[0x547:0x54a]
---
Predecessors: [0x540]
Successors: []
---
0x547 PUSH1 0x0
0x549 DUP1
0x54a REVERT
---
0x547: V453 = 0x0
0x54a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x54b
[0x54b:0x55e]
---
Predecessors: [0x540]
Successors: [0xaba]
---
0x54b JUMPDEST
0x54c PUSH2 0x13c
0x54f PUSH1 0x1
0x551 PUSH1 0xa0
0x553 PUSH1 0x2
0x555 EXP
0x556 SUB
0x557 PUSH1 0x4
0x559 CALLDATALOAD
0x55a AND
0x55b PUSH2 0xaba
0x55e JUMP
---
0x54b: JUMPDEST 
0x54c: V454 = 0x13c
0x54f: V455 = 0x1
0x551: V456 = 0xa0
0x553: V457 = 0x2
0x555: V458 = EXP 0x2 0xa0
0x556: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x557: V460 = 0x4
0x559: V461 = CALLDATALOAD 0x4
0x55a: V462 = AND V461 0xffffffffffffffffffffffffffffffffffffffff
0x55b: V463 = 0xaba
0x55e: JUMP 0xaba
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x13c, V462]
Exit stack: [V10, 0x13c, V462]

================================

Block 0x55f
[0x55f:0x560]
---
Predecessors: []
Successors: []
---
0x55f JUMPDEST
0x560 STOP
---
0x55f: JUMPDEST 
0x560: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x561
[0x561:0x56a]
---
Predecessors: [0xfd, 0x37b]
Successors: [0x56b, 0x56f]
---
0x561 JUMPDEST
0x562 PUSH1 0x2
0x564 SLOAD
0x565 TIMESTAMP
0x566 GT
0x567 PUSH2 0x56f
0x56a JUMPI
---
0x561: JUMPDEST 
0x562: V464 = 0x2
0x564: V465 = S[0x2]
0x565: V466 = TIMESTAMP
0x566: V467 = GT V466 V465
0x567: V468 = 0x56f
0x56a: JUMPI 0x56f V467
---
Entry stack: [V10, S2, {0x139, 0x13c}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, {0x139, 0x13c}, S0]

================================

Block 0x56b
[0x56b:0x56e]
---
Predecessors: [0x561]
Successors: []
---
0x56b PUSH1 0x0
0x56d DUP1
0x56e REVERT
---
0x56b: V469 = 0x0
0x56e: REVERT 0x0 0x0
---
Entry stack: [V10, S2, {0x139, 0x13c}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, {0x139, 0x13c}, S0]

================================

Block 0x56f
[0x56f:0x57a]
---
Predecessors: [0x561]
Successors: [0x57b, 0x57f]
---
0x56f JUMPDEST
0x570 PUSH1 0x1
0x572 SLOAD
0x573 CALLVALUE
0x574 SWAP1
0x575 LT
0x576 ISZERO
0x577 PUSH2 0x57f
0x57a JUMPI
---
0x56f: JUMPDEST 
0x570: V470 = 0x1
0x572: V471 = S[0x1]
0x573: V472 = CALLVALUE
0x575: V473 = LT V471 V472
0x576: V474 = ISZERO V473
0x577: V475 = 0x57f
0x57a: JUMPI 0x57f V474
---
Entry stack: [V10, S2, {0x139, 0x13c}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, {0x139, 0x13c}, S0]

================================

Block 0x57b
[0x57b:0x57e]
---
Predecessors: [0x56f]
Successors: []
---
0x57b PUSH1 0x0
0x57d DUP1
0x57e REVERT
---
0x57b: V476 = 0x0
0x57e: REVERT 0x0 0x0
---
Entry stack: [V10, S2, {0x139, 0x13c}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, {0x139, 0x13c}, S0]

================================

Block 0x57f
[0x57f:0x5bc]
---
Predecessors: [0x56f]
Successors: [0xb02]
---
0x57f JUMPDEST
0x580 PUSH1 0x1
0x582 PUSH1 0xa0
0x584 PUSH1 0x2
0x586 EXP
0x587 SUB
0x588 CALLER
0x589 AND
0x58a PUSH1 0x0
0x58c SWAP1
0x58d DUP2
0x58e MSTORE
0x58f PUSH1 0x4
0x591 PUSH1 0x20
0x593 MSTORE
0x594 PUSH1 0x40
0x596 SWAP1
0x597 SHA3
0x598 DUP1
0x599 SLOAD
0x59a CALLVALUE
0x59b SWAP1
0x59c DUP2
0x59d ADD
0x59e SWAP1
0x59f SWAP2
0x5a0 SSTORE
0x5a1 PUSH1 0x1
0x5a3 DUP1
0x5a4 SLOAD
0x5a5 SWAP2
0x5a6 SWAP1
0x5a7 SWAP2
0x5a8 SUB
0x5a9 SWAP1
0x5aa SSTORE
0x5ab PUSH1 0x3
0x5ad DUP2
0x5ae DUP1
0x5af MLOAD
0x5b0 PUSH2 0x5bd
0x5b3 SWAP3
0x5b4 SWAP2
0x5b5 PUSH1 0x20
0x5b7 ADD
0x5b8 SWAP1
0x5b9 PUSH2 0xb02
0x5bc JUMP
---
0x57f: JUMPDEST 
0x580: V477 = 0x1
0x582: V478 = 0xa0
0x584: V479 = 0x2
0x586: V480 = EXP 0x2 0xa0
0x587: V481 = SUB 0x10000000000000000000000000000000000000000 0x1
0x588: V482 = CALLER
0x589: V483 = AND V482 0xffffffffffffffffffffffffffffffffffffffff
0x58a: V484 = 0x0
0x58e: M[0x0] = V483
0x58f: V485 = 0x4
0x591: V486 = 0x20
0x593: M[0x20] = 0x4
0x594: V487 = 0x40
0x597: V488 = SHA3 0x0 0x40
0x599: V489 = S[V488]
0x59a: V490 = CALLVALUE
0x59d: V491 = ADD V490 V489
0x5a0: S[V488] = V491
0x5a1: V492 = 0x1
0x5a4: V493 = S[0x1]
0x5a8: V494 = SUB V493 V490
0x5aa: S[0x1] = V494
0x5ab: V495 = 0x3
0x5af: V496 = M[S0]
0x5b0: V497 = 0x5bd
0x5b5: V498 = 0x20
0x5b7: V499 = ADD 0x20 S0
0x5b9: V500 = 0xb02
0x5bc: JUMP 0xb02
---
Entry stack: [V10, S2, {0x139, 0x13c}, S0]
Stack pops: 1
Stack additions: [S0, 0x5bd, 0x3, V499, V496]
Exit stack: [V10, S2, {0x139, 0x13c}, S0, 0x5bd, 0x3, V499, V496]

================================

Block 0x5bd
[0x5bd:0x5be]
---
Predecessors: [0x13a, 0xb7d]
Successors: [0x5bf]
---
0x5bd JUMPDEST
0x5be POP
---
0x5bd: JUMPDEST 
---
Entry stack: [V10, S6, {0x139, 0x13c}, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S6, {0x139, 0x13c}, S4, S3, S2, S1]

================================

Block 0x5bf
[0x5bf:0x5c1]
---
Predecessors: [0x5bd, 0x6a7]
Successors: [0x139, 0x13c]
---
0x5bf JUMPDEST
0x5c0 POP
0x5c1 JUMP
---
0x5bf: JUMPDEST 
0x5c1: JUMP S1
---
Entry stack: [V10, S5, {0x139, 0x13c}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S5, {0x139, 0x13c}, S3, S2]

================================

Block 0x5c2
[0x5c2:0x5f8]
---
Predecessors: [0x149]
Successors: [0x151]
---
0x5c2 JUMPDEST
0x5c3 PUSH1 0x40
0x5c5 DUP1
0x5c6 MLOAD
0x5c7 SWAP1
0x5c8 DUP2
0x5c9 ADD
0x5ca PUSH1 0x40
0x5cc MSTORE
0x5cd PUSH1 0x9
0x5cf DUP2
0x5d0 MSTORE
0x5d1 PUSH32 0x3134383820436f696e0000000000000000000000000000000000000000000000
0x5f2 PUSH1 0x20
0x5f4 DUP3
0x5f5 ADD
0x5f6 MSTORE
0x5f7 DUP2
0x5f8 JUMP
---
0x5c2: JUMPDEST 
0x5c3: V501 = 0x40
0x5c6: V502 = M[0x40]
0x5c9: V503 = ADD V502 0x40
0x5ca: V504 = 0x40
0x5cc: M[0x40] = V503
0x5cd: V505 = 0x9
0x5d0: M[V502] = 0x9
0x5d1: V506 = 0x3134383820436f696e0000000000000000000000000000000000000000000000
0x5f2: V507 = 0x20
0x5f5: V508 = ADD V502 0x20
0x5f6: M[V508] = 0x3134383820436f696e0000000000000000000000000000000000000000000000
0x5f8: JUMP 0x151
---
Entry stack: [V10, 0x151]
Stack pops: 1
Stack additions: [S0, V502]
Exit stack: [V10, 0x151, V502]

================================

Block 0x5f9
[0x5f9:0x65f]
---
Predecessors: [0x1d4]
Successors: [0x660]
---
0x5f9 JUMPDEST
0x5fa PUSH1 0x1
0x5fc PUSH1 0xa0
0x5fe PUSH1 0x2
0x600 EXP
0x601 SUB
0x602 CALLER
0x603 DUP2
0x604 AND
0x605 PUSH1 0x0
0x607 DUP2
0x608 DUP2
0x609 MSTORE
0x60a PUSH1 0x5
0x60c PUSH1 0x20
0x60e SWAP1
0x60f DUP2
0x610 MSTORE
0x611 PUSH1 0x40
0x613 DUP1
0x614 DUP4
0x615 SHA3
0x616 SWAP5
0x617 DUP8
0x618 AND
0x619 DUP1
0x61a DUP5
0x61b MSTORE
0x61c SWAP5
0x61d SWAP1
0x61e SWAP2
0x61f MSTORE
0x620 DUP1
0x621 DUP3
0x622 SHA3
0x623 DUP6
0x624 SWAP1
0x625 SSTORE
0x626 SWAP1
0x627 SWAP3
0x628 SWAP2
0x629 SWAP1
0x62a PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x64b SWAP1
0x64c DUP6
0x64d SWAP1
0x64e MLOAD
0x64f SWAP1
0x650 DUP2
0x651 MSTORE
0x652 PUSH1 0x20
0x654 ADD
0x655 PUSH1 0x40
0x657 MLOAD
0x658 DUP1
0x659 SWAP2
0x65a SUB
0x65b SWAP1
0x65c LOG3
0x65d POP
0x65e PUSH1 0x1
---
0x5f9: JUMPDEST 
0x5fa: V509 = 0x1
0x5fc: V510 = 0xa0
0x5fe: V511 = 0x2
0x600: V512 = EXP 0x2 0xa0
0x601: V513 = SUB 0x10000000000000000000000000000000000000000 0x1
0x602: V514 = CALLER
0x604: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V514
0x605: V516 = 0x0
0x609: M[0x0] = V515
0x60a: V517 = 0x5
0x60c: V518 = 0x20
0x610: M[0x20] = 0x5
0x611: V519 = 0x40
0x615: V520 = SHA3 0x0 0x40
0x618: V521 = AND V134 0xffffffffffffffffffffffffffffffffffffffff
0x61b: M[0x0] = V521
0x61f: M[0x20] = V520
0x622: V522 = SHA3 0x0 0x40
0x625: S[V522] = V136
0x62a: V523 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x64e: V524 = M[0x40]
0x651: M[V524] = V136
0x652: V525 = 0x20
0x654: V526 = ADD 0x20 V524
0x655: V527 = 0x40
0x657: V528 = M[0x40]
0x65a: V529 = SUB V526 V528
0x65c: LOG V528 V529 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V515 V521
0x65e: V530 = 0x1
---
Entry stack: [V10, 0x1eb, V134, V136]
Stack pops: 2
Stack additions: [S1, S0, 0x1]
Exit stack: [V10, 0x1eb, V134, V136, 0x1]

================================

Block 0x660
[0x660:0x665]
---
Predecessors: [0x5f9, 0xa12, 0xa7e]
Successors: [0x1eb]
---
0x660 JUMPDEST
0x661 SWAP3
0x662 SWAP2
0x663 POP
0x664 POP
0x665 JUMP
---
0x660: JUMPDEST 
0x665: JUMP 0x1eb
---
Entry stack: [V10, 0x1eb, S2, S1, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x666
[0x666:0x669]
---
Predecessors: [0x20a]
Successors: [0x66a]
---
0x666 JUMPDEST
0x667 PUSH1 0x1
0x669 SLOAD
---
0x666: JUMPDEST 
0x667: V531 = 0x1
0x669: V532 = S[0x1]
---
Entry stack: [V10, 0x212]
Stack pops: 0
Stack additions: [V532]
Exit stack: [V10, 0x212, V532]

================================

Block 0x66a
[0x66a:0x66c]
---
Predecessors: [0x666, 0xb7d]
Successors: [0x212, 0xb7d]
---
0x66a JUMPDEST
0x66b SWAP1
0x66c JUMP
---
0x66a: JUMPDEST 
0x66c: JUMP S1
---
Entry stack: [V10, S6, {0x139, 0x13c}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S6, {0x139, 0x13c}, S4, S3, S2, S0]

================================

Block 0x66d
[0x66d:0x67c]
---
Predecessors: [0x22f]
Successors: [0x67d, 0x681]
---
0x66d JUMPDEST
0x66e PUSH1 0x2
0x670 SLOAD
0x671 PUSH4 0x1e13380
0x676 ADD
0x677 TIMESTAMP
0x678 GT
0x679 PUSH2 0x681
0x67c JUMPI
---
0x66d: JUMPDEST 
0x66e: V533 = 0x2
0x670: V534 = S[0x2]
0x671: V535 = 0x1e13380
0x676: V536 = ADD 0x1e13380 V534
0x677: V537 = TIMESTAMP
0x678: V538 = GT V537 V536
0x679: V539 = 0x681
0x67c: JUMPI 0x681 V538
---
Entry stack: [V10, 0x13c, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13c, V166]

================================

Block 0x67d
[0x67d:0x680]
---
Predecessors: [0x66d]
Successors: []
---
0x67d PUSH1 0x0
0x67f DUP1
0x680 REVERT
---
0x67d: V540 = 0x0
0x680: REVERT 0x0 0x0
---
Entry stack: [V10, 0x13c, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13c, V166]

================================

Block 0x681
[0x681:0x6a2]
---
Predecessors: [0x66d]
Successors: [0x6a3, 0x6a7]
---
0x681 JUMPDEST
0x682 PUSH1 0x1
0x684 PUSH1 0xa0
0x686 PUSH1 0x2
0x688 EXP
0x689 SUB
0x68a CALLER
0x68b AND
0x68c PUSH1 0x0
0x68e SWAP1
0x68f DUP2
0x690 MSTORE
0x691 PUSH1 0x4
0x693 PUSH1 0x20
0x695 MSTORE
0x696 PUSH1 0x40
0x698 SWAP1
0x699 SHA3
0x69a SLOAD
0x69b DUP2
0x69c SWAP1
0x69d LT
0x69e ISZERO
0x69f PUSH2 0x6a7
0x6a2 JUMPI
---
0x681: JUMPDEST 
0x682: V541 = 0x1
0x684: V542 = 0xa0
0x686: V543 = 0x2
0x688: V544 = EXP 0x2 0xa0
0x689: V545 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68a: V546 = CALLER
0x68b: V547 = AND V546 0xffffffffffffffffffffffffffffffffffffffff
0x68c: V548 = 0x0
0x690: M[0x0] = V547
0x691: V549 = 0x4
0x693: V550 = 0x20
0x695: M[0x20] = 0x4
0x696: V551 = 0x40
0x699: V552 = SHA3 0x0 0x40
0x69a: V553 = S[V552]
0x69d: V554 = LT V553 V166
0x69e: V555 = ISZERO V554
0x69f: V556 = 0x6a7
0x6a2: JUMPI 0x6a7 V555
---
Entry stack: [V10, 0x13c, V166]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x13c, V166]

================================

Block 0x6a3
[0x6a3:0x6a6]
---
Predecessors: [0x681]
Successors: []
---
0x6a3 PUSH1 0x0
0x6a5 DUP1
0x6a6 REVERT
---
0x6a3: V557 = 0x0
0x6a6: REVERT 0x0 0x0
---
Entry stack: [V10, 0x13c, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13c, V166]

================================

Block 0x6a7
[0x6a7:0x6f2]
---
Predecessors: [0x681]
Successors: [0x5bf, 0x6f3]
---
0x6a7 JUMPDEST
0x6a8 PUSH1 0x1
0x6aa PUSH1 0xa0
0x6ac PUSH1 0x2
0x6ae EXP
0x6af SUB
0x6b0 CALLER
0x6b1 AND
0x6b2 PUSH1 0x0
0x6b4 DUP2
0x6b5 DUP2
0x6b6 MSTORE
0x6b7 PUSH1 0x4
0x6b9 PUSH1 0x20
0x6bb MSTORE
0x6bc PUSH1 0x40
0x6be SWAP1
0x6bf DUP2
0x6c0 SWAP1
0x6c1 SHA3
0x6c2 DUP1
0x6c3 SLOAD
0x6c4 DUP5
0x6c5 SWAP1
0x6c6 SUB
0x6c7 SWAP1
0x6c8 SSTORE
0x6c9 PUSH1 0x1
0x6cb DUP1
0x6cc SLOAD
0x6cd DUP5
0x6ce ADD
0x6cf SWAP1
0x6d0 SSTORE
0x6d1 DUP3
0x6d2 ISZERO
0x6d3 PUSH2 0x8fc
0x6d6 MUL
0x6d7 SWAP1
0x6d8 DUP4
0x6d9 SWAP1
0x6da MLOAD
0x6db PUSH1 0x0
0x6dd PUSH1 0x40
0x6df MLOAD
0x6e0 DUP1
0x6e1 DUP4
0x6e2 SUB
0x6e3 DUP2
0x6e4 DUP6
0x6e5 DUP9
0x6e6 DUP9
0x6e7 CALL
0x6e8 SWAP4
0x6e9 POP
0x6ea POP
0x6eb POP
0x6ec POP
0x6ed ISZERO
0x6ee ISZERO
0x6ef PUSH2 0x5bf
0x6f2 JUMPI
---
0x6a7: JUMPDEST 
0x6a8: V558 = 0x1
0x6aa: V559 = 0xa0
0x6ac: V560 = 0x2
0x6ae: V561 = EXP 0x2 0xa0
0x6af: V562 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b0: V563 = CALLER
0x6b1: V564 = AND V563 0xffffffffffffffffffffffffffffffffffffffff
0x6b2: V565 = 0x0
0x6b6: M[0x0] = V564
0x6b7: V566 = 0x4
0x6b9: V567 = 0x20
0x6bb: M[0x20] = 0x4
0x6bc: V568 = 0x40
0x6c1: V569 = SHA3 0x0 0x40
0x6c3: V570 = S[V569]
0x6c6: V571 = SUB V570 V166
0x6c8: S[V569] = V571
0x6c9: V572 = 0x1
0x6cc: V573 = S[0x1]
0x6ce: V574 = ADD V166 V573
0x6d0: S[0x1] = V574
0x6d2: V575 = ISZERO V166
0x6d3: V576 = 0x8fc
0x6d6: V577 = MUL 0x8fc V575
0x6da: V578 = M[0x40]
0x6db: V579 = 0x0
0x6dd: V580 = 0x40
0x6df: V581 = M[0x40]
0x6e2: V582 = SUB V578 V581
0x6e7: V583 = CALL V577 V564 V166 V581 V582 V581 0x0
0x6ed: V584 = ISZERO V583
0x6ee: V585 = ISZERO V584
0x6ef: V586 = 0x5bf
0x6f2: JUMPI 0x5bf V585
---
Entry stack: [V10, 0x13c, V166]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x13c, V166]

================================

Block 0x6f3
[0x6f3:0x6f6]
---
Predecessors: [0x6a7]
Successors: []
---
0x6f3 PUSH1 0x0
0x6f5 DUP1
0x6f6 REVERT
---
0x6f3: V587 = 0x0
0x6f6: REVERT 0x0 0x0
---
Entry stack: [V10, 0x13c, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13c, V166]

================================

Block 0x6f7
[0x6f7:0x6f7]
---
Predecessors: []
Successors: [0x6f8]
---
0x6f7 JUMPDEST
---
0x6f7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6f8
[0x6f8:0x6fa]
---
Predecessors: [0x6f7]
Successors: []
Has unresolved jump.
---
0x6f8 JUMPDEST
0x6f9 POP
0x6fa JUMP
---
0x6f8: JUMPDEST 
0x6fa: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x6fb
[0x6fb:0x71e]
---
Predecessors: [0x247]
Successors: [0x71f, 0x74b]
---
0x6fb JUMPDEST
0x6fc PUSH1 0x1
0x6fe PUSH1 0xa0
0x700 PUSH1 0x2
0x702 EXP
0x703 SUB
0x704 DUP4
0x705 AND
0x706 PUSH1 0x0
0x708 SWAP1
0x709 DUP2
0x70a MSTORE
0x70b PUSH1 0x4
0x70d PUSH1 0x20
0x70f MSTORE
0x710 PUSH1 0x40
0x712 DUP2
0x713 SHA3
0x714 SLOAD
0x715 DUP3
0x716 SWAP1
0x717 LT
0x718 DUP1
0x719 ISZERO
0x71a SWAP1
0x71b PUSH2 0x74b
0x71e JUMPI
---
0x6fb: JUMPDEST 
0x6fc: V588 = 0x1
0x6fe: V589 = 0xa0
0x700: V590 = 0x2
0x702: V591 = EXP 0x2 0xa0
0x703: V592 = SUB 0x10000000000000000000000000000000000000000 0x1
0x705: V593 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x706: V594 = 0x0
0x70a: M[0x0] = V593
0x70b: V595 = 0x4
0x70d: V596 = 0x20
0x70f: M[0x20] = 0x4
0x710: V597 = 0x40
0x713: V598 = SHA3 0x0 0x40
0x714: V599 = S[V598]
0x717: V600 = LT V599 V185
0x719: V601 = ISZERO V600
0x71b: V602 = 0x74b
0x71e: JUMPI 0x74b V600
---
Entry stack: [V10, 0x1eb, V180, V183, V185]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V601]
Exit stack: [V10, 0x1eb, V180, V183, V185, 0x0, V601]

================================

Block 0x71f
[0x71f:0x74a]
---
Predecessors: [0x6fb]
Successors: [0x74b]
---
0x71f POP
0x720 PUSH1 0x1
0x722 PUSH1 0xa0
0x724 PUSH1 0x2
0x726 EXP
0x727 SUB
0x728 DUP1
0x729 DUP6
0x72a AND
0x72b PUSH1 0x0
0x72d SWAP1
0x72e DUP2
0x72f MSTORE
0x730 PUSH1 0x5
0x732 PUSH1 0x20
0x734 SWAP1
0x735 DUP2
0x736 MSTORE
0x737 PUSH1 0x40
0x739 DUP1
0x73a DUP4
0x73b SHA3
0x73c CALLER
0x73d SWAP1
0x73e SWAP5
0x73f AND
0x740 DUP4
0x741 MSTORE
0x742 SWAP3
0x743 SWAP1
0x744 MSTORE
0x745 SHA3
0x746 SLOAD
0x747 DUP3
0x748 SWAP1
0x749 LT
0x74a ISZERO
---
0x720: V603 = 0x1
0x722: V604 = 0xa0
0x724: V605 = 0x2
0x726: V606 = EXP 0x2 0xa0
0x727: V607 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72a: V608 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x72b: V609 = 0x0
0x72f: M[0x0] = V608
0x730: V610 = 0x5
0x732: V611 = 0x20
0x736: M[0x20] = 0x5
0x737: V612 = 0x40
0x73b: V613 = SHA3 0x0 0x40
0x73c: V614 = CALLER
0x73f: V615 = AND 0xffffffffffffffffffffffffffffffffffffffff V614
0x741: M[0x0] = V615
0x744: M[0x20] = V613
0x745: V616 = SHA3 0x0 0x40
0x746: V617 = S[V616]
0x749: V618 = LT V617 V185
0x74a: V619 = ISZERO V618
---
Entry stack: [V10, 0x1eb, V180, V183, V185, 0x0, V601]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V619]
Exit stack: [V10, 0x1eb, V180, V183, V185, 0x0, V619]

================================

Block 0x74b
[0x74b:0x751]
---
Predecessors: [0x6fb, 0x71f]
Successors: [0x752, 0x757]
---
0x74b JUMPDEST
0x74c DUP1
0x74d ISZERO
0x74e PUSH2 0x757
0x751 JUMPI
---
0x74b: JUMPDEST 
0x74d: V620 = ISZERO S0
0x74e: V621 = 0x757
0x751: JUMPI 0x757 V620
---
Entry stack: [V10, 0x1eb, V180, V183, V185, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1eb, V180, V183, V185, 0x0, S0]

================================

Block 0x752
[0x752:0x756]
---
Predecessors: [0x74b]
Successors: [0x757]
---
0x752 POP
0x753 PUSH1 0x0
0x755 DUP3
0x756 GT
---
0x753: V622 = 0x0
0x756: V623 = GT V185 0x0
---
Entry stack: [V10, 0x1eb, V180, V183, V185, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, V623]
Exit stack: [V10, 0x1eb, V180, V183, V185, 0x0, V623]

================================

Block 0x757
[0x757:0x75d]
---
Predecessors: [0x74b, 0x752]
Successors: [0x75e, 0x77c]
---
0x757 JUMPDEST
0x758 DUP1
0x759 ISZERO
0x75a PUSH2 0x77c
0x75d JUMPI
---
0x757: JUMPDEST 
0x759: V624 = ISZERO S0
0x75a: V625 = 0x77c
0x75d: JUMPI 0x77c V624
---
Entry stack: [V10, 0x1eb, V180, V183, V185, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1eb, V180, V183, V185, 0x0, S0]

================================

Block 0x75e
[0x75e:0x77b]
---
Predecessors: [0x757]
Successors: [0x77c]
---
0x75e POP
0x75f PUSH1 0x1
0x761 PUSH1 0xa0
0x763 PUSH1 0x2
0x765 EXP
0x766 SUB
0x767 DUP4
0x768 AND
0x769 PUSH1 0x0
0x76b SWAP1
0x76c DUP2
0x76d MSTORE
0x76e PUSH1 0x4
0x770 PUSH1 0x20
0x772 MSTORE
0x773 PUSH1 0x40
0x775 SWAP1
0x776 SHA3
0x777 SLOAD
0x778 DUP3
0x779 DUP2
0x77a ADD
0x77b GT
---
0x75f: V626 = 0x1
0x761: V627 = 0xa0
0x763: V628 = 0x2
0x765: V629 = EXP 0x2 0xa0
0x766: V630 = SUB 0x10000000000000000000000000000000000000000 0x1
0x768: V631 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x769: V632 = 0x0
0x76d: M[0x0] = V631
0x76e: V633 = 0x4
0x770: V634 = 0x20
0x772: M[0x20] = 0x4
0x773: V635 = 0x40
0x776: V636 = SHA3 0x0 0x40
0x777: V637 = S[V636]
0x77a: V638 = ADD V637 V185
0x77b: V639 = GT V638 V637
---
Entry stack: [V10, 0x1eb, V180, V183, V185, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V639]
Exit stack: [V10, 0x1eb, V180, V183, V185, 0x0, V639]

================================

Block 0x77c
[0x77c:0x781]
---
Predecessors: [0x757, 0x75e]
Successors: [0x782, 0x80b]
---
0x77c JUMPDEST
0x77d ISZERO
0x77e PUSH2 0x80b
0x781 JUMPI
---
0x77c: JUMPDEST 
0x77d: V640 = ISZERO S0
0x77e: V641 = 0x80b
0x781: JUMPI 0x80b V640
---
Entry stack: [V10, 0x1eb, V180, V183, V185, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1eb, V180, V183, V185, 0x0]

================================

Block 0x782
[0x782:0x80a]
---
Predecessors: [0x77c]
Successors: [0x80f]
---
0x782 PUSH1 0x1
0x784 PUSH1 0xa0
0x786 PUSH1 0x2
0x788 EXP
0x789 SUB
0x78a DUP1
0x78b DUP6
0x78c AND
0x78d PUSH1 0x0
0x78f DUP2
0x790 DUP2
0x791 MSTORE
0x792 PUSH1 0x4
0x794 PUSH1 0x20
0x796 DUP2
0x797 DUP2
0x798 MSTORE
0x799 PUSH1 0x40
0x79b DUP1
0x79c DUP5
0x79d SHA3
0x79e DUP1
0x79f SLOAD
0x7a0 DUP10
0x7a1 SWAP1
0x7a2 SUB
0x7a3 SWAP1
0x7a4 SSTORE
0x7a5 PUSH1 0x5
0x7a7 DUP3
0x7a8 MSTORE
0x7a9 DUP1
0x7aa DUP5
0x7ab SHA3
0x7ac CALLER
0x7ad DUP8
0x7ae AND
0x7af DUP6
0x7b0 MSTORE
0x7b1 DUP3
0x7b2 MSTORE
0x7b3 DUP1
0x7b4 DUP5
0x7b5 SHA3
0x7b6 DUP1
0x7b7 SLOAD
0x7b8 DUP10
0x7b9 SWAP1
0x7ba SUB
0x7bb SWAP1
0x7bc SSTORE
0x7bd SWAP5
0x7be DUP9
0x7bf AND
0x7c0 DUP1
0x7c1 DUP5
0x7c2 MSTORE
0x7c3 SWAP2
0x7c4 SWAP1
0x7c5 MSTORE
0x7c6 SWAP1
0x7c7 DUP4
0x7c8 SWAP1
0x7c9 SHA3
0x7ca DUP1
0x7cb SLOAD
0x7cc DUP7
0x7cd ADD
0x7ce SWAP1
0x7cf SSTORE
0x7d0 SWAP2
0x7d1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x7f2 SWAP1
0x7f3 DUP6
0x7f4 SWAP1
0x7f5 MLOAD
0x7f6 SWAP1
0x7f7 DUP2
0x7f8 MSTORE
0x7f9 PUSH1 0x20
0x7fb ADD
0x7fc PUSH1 0x40
0x7fe MLOAD
0x7ff DUP1
0x800 SWAP2
0x801 SUB
0x802 SWAP1
0x803 LOG3
0x804 POP
0x805 PUSH1 0x1
0x807 PUSH2 0x80f
0x80a JUMP
---
0x782: V642 = 0x1
0x784: V643 = 0xa0
0x786: V644 = 0x2
0x788: V645 = EXP 0x2 0xa0
0x789: V646 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78c: V647 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x78d: V648 = 0x0
0x791: M[0x0] = V647
0x792: V649 = 0x4
0x794: V650 = 0x20
0x798: M[0x20] = 0x4
0x799: V651 = 0x40
0x79d: V652 = SHA3 0x0 0x40
0x79f: V653 = S[V652]
0x7a2: V654 = SUB V653 V185
0x7a4: S[V652] = V654
0x7a5: V655 = 0x5
0x7a8: M[0x20] = 0x5
0x7ab: V656 = SHA3 0x0 0x40
0x7ac: V657 = CALLER
0x7ae: V658 = AND 0xffffffffffffffffffffffffffffffffffffffff V657
0x7b0: M[0x0] = V658
0x7b2: M[0x20] = V656
0x7b5: V659 = SHA3 0x0 0x40
0x7b7: V660 = S[V659]
0x7ba: V661 = SUB V660 V185
0x7bc: S[V659] = V661
0x7bf: V662 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x7c2: M[0x0] = V662
0x7c5: M[0x20] = 0x4
0x7c9: V663 = SHA3 0x0 0x40
0x7cb: V664 = S[V663]
0x7cd: V665 = ADD V185 V664
0x7cf: S[V663] = V665
0x7d1: V666 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x7f5: V667 = M[0x40]
0x7f8: M[V667] = V185
0x7f9: V668 = 0x20
0x7fb: V669 = ADD 0x20 V667
0x7fc: V670 = 0x40
0x7fe: V671 = M[0x40]
0x801: V672 = SUB V669 V671
0x803: LOG V671 V672 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V647 V662
0x805: V673 = 0x1
0x807: V674 = 0x80f
0x80a: JUMP 0x80f
---
Entry stack: [V10, 0x1eb, V180, V183, V185, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x1]
Exit stack: [V10, 0x1eb, V180, V183, V185, 0x1]

================================

Block 0x80b
[0x80b:0x80e]
---
Predecessors: [0x77c]
Successors: [0x80f]
---
0x80b JUMPDEST
0x80c POP
0x80d PUSH1 0x0
---
0x80b: JUMPDEST 
0x80d: V675 = 0x0
---
Entry stack: [V10, 0x1eb, V180, V183, V185, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x1eb, V180, V183, V185, 0x0]

================================

Block 0x80f
[0x80f:0x80f]
---
Predecessors: [0x782, 0x80b]
Successors: [0x810]
---
0x80f JUMPDEST
---
0x80f: JUMPDEST 
---
Entry stack: [V10, 0x1eb, V180, V183, V185, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1eb, V180, V183, V185, {0x0, 0x1}]

================================

Block 0x810
[0x810:0x816]
---
Predecessors: [0x80f]
Successors: [0x1eb]
---
0x810 JUMPDEST
0x811 SWAP4
0x812 SWAP3
0x813 POP
0x814 POP
0x815 POP
0x816 JUMP
---
0x810: JUMPDEST 
0x816: JUMP 0x1eb
---
Entry stack: [V10, 0x1eb, V180, V183, V185, {0x0, 0x1}]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x817
[0x817:0x81b]
---
Predecessors: [0x283]
Successors: [0x28b]
---
0x817 JUMPDEST
0x818 PUSH1 0x12
0x81a DUP2
0x81b JUMP
---
0x817: JUMPDEST 
0x818: V676 = 0x12
0x81b: JUMP 0x28b
---
Entry stack: [V10, 0x28b]
Stack pops: 1
Stack additions: [S0, 0x12]
Exit stack: [V10, 0x28b, 0x12]

================================

Block 0x81c
[0x81c:0x832]
---
Predecessors: [0x2ac]
Successors: [0x833, 0x837]
---
0x81c JUMPDEST
0x81d PUSH1 0x0
0x81f SLOAD
0x820 CALLER
0x821 PUSH1 0x1
0x823 PUSH1 0xa0
0x825 PUSH1 0x2
0x827 EXP
0x828 SUB
0x829 SWAP1
0x82a DUP2
0x82b AND
0x82c SWAP2
0x82d AND
0x82e EQ
0x82f PUSH2 0x837
0x832 JUMPI
---
0x81c: JUMPDEST 
0x81d: V677 = 0x0
0x81f: V678 = S[0x0]
0x820: V679 = CALLER
0x821: V680 = 0x1
0x823: V681 = 0xa0
0x825: V682 = 0x2
0x827: V683 = EXP 0x2 0xa0
0x828: V684 = SUB 0x10000000000000000000000000000000000000000 0x1
0x82b: V685 = AND 0xffffffffffffffffffffffffffffffffffffffff V679
0x82d: V686 = AND V678 0xffffffffffffffffffffffffffffffffffffffff
0x82e: V687 = EQ V686 V685
0x82f: V688 = 0x837
0x832: JUMPI 0x837 V687
---
Entry stack: [V10, 0x13c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13c]

================================

Block 0x833
[0x833:0x836]
---
Predecessors: [0x81c]
Successors: []
---
0x833 PUSH1 0x0
0x835 DUP1
0x836 REVERT
---
0x833: V689 = 0x0
0x836: REVERT 0x0 0x0
---
Entry stack: [V10, 0x13c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13c]

================================

Block 0x837
[0x837:0x83f]
---
Predecessors: [0x81c]
Successors: [0x840, 0x844]
---
0x837 JUMPDEST
0x838 PUSH1 0x1
0x83a SLOAD
0x83b ISZERO
0x83c PUSH2 0x844
0x83f JUMPI
---
0x837: JUMPDEST 
0x838: V690 = 0x1
0x83a: V691 = S[0x1]
0x83b: V692 = ISZERO V691
0x83c: V693 = 0x844
0x83f: JUMPI 0x844 V692
---
Entry stack: [V10, 0x13c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13c]

================================

Block 0x840
[0x840:0x843]
---
Predecessors: [0x837]
Successors: []
---
0x840 PUSH1 0x0
0x842 DUP1
0x843 REVERT
---
0x840: V694 = 0x0
0x843: REVERT 0x0 0x0
---
Entry stack: [V10, 0x13c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13c]

================================

Block 0x844
[0x844:0x878]
---
Predecessors: [0x837]
Successors: [0x139, 0x879]
---
0x844 JUMPDEST
0x845 PUSH1 0x0
0x847 SLOAD
0x848 PUSH1 0x1
0x84a PUSH1 0xa0
0x84c PUSH1 0x2
0x84e EXP
0x84f SUB
0x850 SWAP1
0x851 DUP2
0x852 AND
0x853 SWAP1
0x854 ADDRESS
0x855 AND
0x856 BALANCE
0x857 DUP1
0x858 ISZERO
0x859 PUSH2 0x8fc
0x85c MUL
0x85d SWAP1
0x85e PUSH1 0x40
0x860 MLOAD
0x861 PUSH1 0x0
0x863 PUSH1 0x40
0x865 MLOAD
0x866 DUP1
0x867 DUP4
0x868 SUB
0x869 DUP2
0x86a DUP6
0x86b DUP9
0x86c DUP9
0x86d CALL
0x86e SWAP4
0x86f POP
0x870 POP
0x871 POP
0x872 POP
0x873 ISZERO
0x874 ISZERO
0x875 PUSH2 0x139
0x878 JUMPI
---
0x844: JUMPDEST 
0x845: V695 = 0x0
0x847: V696 = S[0x0]
0x848: V697 = 0x1
0x84a: V698 = 0xa0
0x84c: V699 = 0x2
0x84e: V700 = EXP 0x2 0xa0
0x84f: V701 = SUB 0x10000000000000000000000000000000000000000 0x1
0x852: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff V696
0x854: V703 = ADDRESS
0x855: V704 = AND V703 0xffffffffffffffffffffffffffffffffffffffff
0x856: V705 = BALANCE V704
0x858: V706 = ISZERO V705
0x859: V707 = 0x8fc
0x85c: V708 = MUL 0x8fc V706
0x85e: V709 = 0x40
0x860: V710 = M[0x40]
0x861: V711 = 0x0
0x863: V712 = 0x40
0x865: V713 = M[0x40]
0x868: V714 = SUB V710 V713
0x86d: V715 = CALL V708 V702 V705 V713 V714 V713 0x0
0x873: V716 = ISZERO V715
0x874: V717 = ISZERO V716
0x875: V718 = 0x139
0x878: JUMPI 0x139 V717
---
Entry stack: [V10, 0x13c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13c]

================================

Block 0x879
[0x879:0x87c]
---
Predecessors: [0x844]
Successors: []
---
0x879 PUSH1 0x0
0x87b DUP1
0x87c REVERT
---
0x879: V719 = 0x0
0x87c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x13c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13c]

================================

Block 0x87d
[0x87d:0x87d]
---
Predecessors: []
Successors: [0x87e]
---
0x87d JUMPDEST
---
0x87d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x87e
[0x87e:0x87e]
---
Predecessors: [0x87d]
Successors: [0x87f]
---
0x87e JUMPDEST
---
0x87e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x87f
[0x87f:0x880]
---
Predecessors: [0x87e]
Successors: []
Has unresolved jump.
---
0x87f JUMPDEST
0x880 JUMP
---
0x87f: JUMPDEST 
0x880: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x881
[0x881:0x897]
---
Predecessors: [0x2c1]
Successors: [0x898, 0x89c]
---
0x881 JUMPDEST
0x882 PUSH1 0x0
0x884 SLOAD
0x885 CALLER
0x886 PUSH1 0x1
0x888 PUSH1 0xa0
0x88a PUSH1 0x2
0x88c EXP
0x88d SUB
0x88e SWAP1
0x88f DUP2
0x890 AND
0x891 SWAP2
0x892 AND
0x893 EQ
0x894 PUSH2 0x89c
0x897 JUMPI
---
0x881: JUMPDEST 
0x882: V720 = 0x0
0x884: V721 = S[0x0]
0x885: V722 = CALLER
0x886: V723 = 0x1
0x888: V724 = 0xa0
0x88a: V725 = 0x2
0x88c: V726 = EXP 0x2 0xa0
0x88d: V727 = SUB 0x10000000000000000000000000000000000000000 0x1
0x890: V728 = AND 0xffffffffffffffffffffffffffffffffffffffff V722
0x892: V729 = AND V721 0xffffffffffffffffffffffffffffffffffffffff
0x893: V730 = EQ V729 V728
0x894: V731 = 0x89c
0x897: JUMPI 0x89c V730
---
Entry stack: [V10, 0x13c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13c]

================================

Block 0x898
[0x898:0x89b]
---
Predecessors: [0x881]
Successors: []
---
0x898 PUSH1 0x0
0x89a DUP1
0x89b REVERT
---
0x898: V732 = 0x0
0x89b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x13c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13c]

================================

Block 0x89c
[0x89c:0x8a9]
---
Predecessors: [0x881]
Successors: []
---
0x89c JUMPDEST
0x89d PUSH1 0x0
0x89f SLOAD
0x8a0 PUSH1 0x1
0x8a2 PUSH1 0xa0
0x8a4 PUSH1 0x2
0x8a6 EXP
0x8a7 SUB
0x8a8 AND
0x8a9 SELFDESTRUCT
---
0x89c: JUMPDEST 
0x89d: V733 = 0x0
0x89f: V734 = S[0x0]
0x8a0: V735 = 0x1
0x8a2: V736 = 0xa0
0x8a4: V737 = 0x2
0x8a6: V738 = EXP 0x2 0xa0
0x8a7: V739 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a8: V740 = AND 0xffffffffffffffffffffffffffffffffffffffff V734
0x8a9: SELFDESTRUCT V740
---
Entry stack: [V10, 0x13c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13c]

================================

Block 0x8aa
[0x8aa:0x8aa]
---
Predecessors: []
Successors: [0x8ab]
---
0x8aa JUMPDEST
---
0x8aa: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8ab
[0x8ab:0x8ac]
---
Predecessors: [0x8aa]
Successors: []
Has unresolved jump.
---
0x8ab JUMPDEST
0x8ac JUMP
---
0x8ab: JUMPDEST 
0x8ac: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8ad
[0x8ad:0x8fc]
---
Predecessors: [0x2d6]
Successors: [0x8fd, 0x943]
---
0x8ad JUMPDEST
0x8ae PUSH1 0x3
0x8b0 DUP1
0x8b1 SLOAD
0x8b2 PUSH1 0x1
0x8b4 DUP2
0x8b5 PUSH1 0x1
0x8b7 AND
0x8b8 ISZERO
0x8b9 PUSH2 0x100
0x8bc MUL
0x8bd SUB
0x8be AND
0x8bf PUSH1 0x2
0x8c1 SWAP1
0x8c2 DIV
0x8c3 DUP1
0x8c4 PUSH1 0x1f
0x8c6 ADD
0x8c7 PUSH1 0x20
0x8c9 DUP1
0x8ca SWAP2
0x8cb DIV
0x8cc MUL
0x8cd PUSH1 0x20
0x8cf ADD
0x8d0 PUSH1 0x40
0x8d2 MLOAD
0x8d3 SWAP1
0x8d4 DUP2
0x8d5 ADD
0x8d6 PUSH1 0x40
0x8d8 MSTORE
0x8d9 DUP1
0x8da SWAP3
0x8db SWAP2
0x8dc SWAP1
0x8dd DUP2
0x8de DUP2
0x8df MSTORE
0x8e0 PUSH1 0x20
0x8e2 ADD
0x8e3 DUP3
0x8e4 DUP1
0x8e5 SLOAD
0x8e6 PUSH1 0x1
0x8e8 DUP2
0x8e9 PUSH1 0x1
0x8eb AND
0x8ec ISZERO
0x8ed PUSH2 0x100
0x8f0 MUL
0x8f1 SUB
0x8f2 AND
0x8f3 PUSH1 0x2
0x8f5 SWAP1
0x8f6 DIV
0x8f7 DUP1
0x8f8 ISZERO
0x8f9 PUSH2 0x943
0x8fc JUMPI
---
0x8ad: JUMPDEST 
0x8ae: V741 = 0x3
0x8b1: V742 = S[0x3]
0x8b2: V743 = 0x1
0x8b5: V744 = 0x1
0x8b7: V745 = AND 0x1 V742
0x8b8: V746 = ISZERO V745
0x8b9: V747 = 0x100
0x8bc: V748 = MUL 0x100 V746
0x8bd: V749 = SUB V748 0x1
0x8be: V750 = AND V749 V742
0x8bf: V751 = 0x2
0x8c2: V752 = DIV V750 0x2
0x8c4: V753 = 0x1f
0x8c6: V754 = ADD 0x1f V752
0x8c7: V755 = 0x20
0x8cb: V756 = DIV V754 0x20
0x8cc: V757 = MUL V756 0x20
0x8cd: V758 = 0x20
0x8cf: V759 = ADD 0x20 V757
0x8d0: V760 = 0x40
0x8d2: V761 = M[0x40]
0x8d5: V762 = ADD V761 V759
0x8d6: V763 = 0x40
0x8d8: M[0x40] = V762
0x8df: M[V761] = V752
0x8e0: V764 = 0x20
0x8e2: V765 = ADD 0x20 V761
0x8e5: V766 = S[0x3]
0x8e6: V767 = 0x1
0x8e9: V768 = 0x1
0x8eb: V769 = AND 0x1 V766
0x8ec: V770 = ISZERO V769
0x8ed: V771 = 0x100
0x8f0: V772 = MUL 0x100 V770
0x8f1: V773 = SUB V772 0x1
0x8f2: V774 = AND V773 V766
0x8f3: V775 = 0x2
0x8f6: V776 = DIV V774 0x2
0x8f8: V777 = ISZERO V776
0x8f9: V778 = 0x943
0x8fc: JUMPI 0x943 V777
---
Entry stack: [V10, 0x151]
Stack pops: 0
Stack additions: [V761, 0x3, V752, V765, 0x3, V776]
Exit stack: [V10, 0x151, V761, 0x3, V752, V765, 0x3, V776]

================================

Block 0x8fd
[0x8fd:0x904]
---
Predecessors: [0x8ad]
Successors: [0x905, 0x918]
---
0x8fd DUP1
0x8fe PUSH1 0x1f
0x900 LT
0x901 PUSH2 0x918
0x904 JUMPI
---
0x8fe: V779 = 0x1f
0x900: V780 = LT 0x1f V776
0x901: V781 = 0x918
0x904: JUMPI 0x918 V780
---
Entry stack: [V10, 0x151, V761, 0x3, V752, V765, 0x3, V776]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x151, V761, 0x3, V752, V765, 0x3, V776]

================================

Block 0x905
[0x905:0x917]
---
Predecessors: [0x8fd]
Successors: [0x943]
---
0x905 PUSH2 0x100
0x908 DUP1
0x909 DUP4
0x90a SLOAD
0x90b DIV
0x90c MUL
0x90d DUP4
0x90e MSTORE
0x90f SWAP2
0x910 PUSH1 0x20
0x912 ADD
0x913 SWAP2
0x914 PUSH2 0x943
0x917 JUMP
---
0x905: V782 = 0x100
0x90a: V783 = S[0x3]
0x90b: V784 = DIV V783 0x100
0x90c: V785 = MUL V784 0x100
0x90e: M[V765] = V785
0x910: V786 = 0x20
0x912: V787 = ADD 0x20 V765
0x914: V788 = 0x943
0x917: JUMP 0x943
---
Entry stack: [V10, 0x151, V761, 0x3, V752, V765, 0x3, V776]
Stack pops: 3
Stack additions: [V787, S1, S0]
Exit stack: [V10, 0x151, V761, 0x3, V752, V787, 0x3, V776]

================================

Block 0x918
[0x918:0x925]
---
Predecessors: [0x8fd]
Successors: [0x926]
---
0x918 JUMPDEST
0x919 DUP3
0x91a ADD
0x91b SWAP2
0x91c SWAP1
0x91d PUSH1 0x0
0x91f MSTORE
0x920 PUSH1 0x20
0x922 PUSH1 0x0
0x924 SHA3
0x925 SWAP1
---
0x918: JUMPDEST 
0x91a: V789 = ADD V765 V776
0x91d: V790 = 0x0
0x91f: M[0x0] = 0x3
0x920: V791 = 0x20
0x922: V792 = 0x0
0x924: V793 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x151, V761, 0x3, V752, V765, 0x3, V776]
Stack pops: 3
Stack additions: [V789, V793, S2]
Exit stack: [V10, 0x151, V761, 0x3, V752, V789, V793, V765]

================================

Block 0x926
[0x926:0x939]
---
Predecessors: [0x918, 0x926]
Successors: [0x926, 0x93a]
---
0x926 JUMPDEST
0x927 DUP2
0x928 SLOAD
0x929 DUP2
0x92a MSTORE
0x92b SWAP1
0x92c PUSH1 0x1
0x92e ADD
0x92f SWAP1
0x930 PUSH1 0x20
0x932 ADD
0x933 DUP1
0x934 DUP4
0x935 GT
0x936 PUSH2 0x926
0x939 JUMPI
---
0x926: JUMPDEST 
0x928: V794 = S[S1]
0x92a: M[S0] = V794
0x92c: V795 = 0x1
0x92e: V796 = ADD 0x1 S1
0x930: V797 = 0x20
0x932: V798 = ADD 0x20 S0
0x935: V799 = GT V789 V798
0x936: V800 = 0x926
0x939: JUMPI 0x926 V799
---
Entry stack: [V10, 0x151, V761, 0x3, V752, V789, S1, S0]
Stack pops: 3
Stack additions: [S2, V796, V798]
Exit stack: [V10, 0x151, V761, 0x3, V752, V789, V796, V798]

================================

Block 0x93a
[0x93a:0x942]
---
Predecessors: [0x926]
Successors: [0x943]
---
0x93a DUP3
0x93b SWAP1
0x93c SUB
0x93d PUSH1 0x1f
0x93f AND
0x940 DUP3
0x941 ADD
0x942 SWAP2
---
0x93c: V801 = SUB V798 V789
0x93d: V802 = 0x1f
0x93f: V803 = AND 0x1f V801
0x941: V804 = ADD V789 V803
---
Entry stack: [V10, 0x151, V761, 0x3, V752, V789, V796, V798]
Stack pops: 3
Stack additions: [V804, S1, S2]
Exit stack: [V10, 0x151, V761, 0x3, V752, V804, V796, V789]

================================

Block 0x943
[0x943:0x94a]
---
Predecessors: [0x8ad, 0x905, 0x93a]
Successors: [0x151]
---
0x943 JUMPDEST
0x944 POP
0x945 POP
0x946 POP
0x947 POP
0x948 POP
0x949 DUP2
0x94a JUMP
---
0x943: JUMPDEST 
0x94a: JUMP 0x151
---
Entry stack: [V10, 0x151, V761, 0x3, V752, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x151, V761]

================================

Block 0x94b
[0x94b:0x950]
---
Predecessors: [0x361]
Successors: [0x212]
---
0x94b JUMPDEST
0x94c PUSH1 0x2
0x94e SLOAD
0x94f DUP2
0x950 JUMP
---
0x94b: JUMPDEST 
0x94c: V805 = 0x2
0x94e: V806 = S[0x2]
0x950: JUMP 0x212
---
Entry stack: [V10, 0x212]
Stack pops: 1
Stack additions: [S0, V806]
Exit stack: [V10, 0x212, V806]

================================

Block 0x951
[0x951:0x96a]
---
Predecessors: [0x3ce]
Successors: [0x96b]
---
0x951 JUMPDEST
0x952 PUSH1 0x1
0x954 PUSH1 0xa0
0x956 PUSH1 0x2
0x958 EXP
0x959 SUB
0x95a DUP2
0x95b AND
0x95c PUSH1 0x0
0x95e SWAP1
0x95f DUP2
0x960 MSTORE
0x961 PUSH1 0x4
0x963 PUSH1 0x20
0x965 MSTORE
0x966 PUSH1 0x40
0x968 SWAP1
0x969 SHA3
0x96a SLOAD
---
0x951: JUMPDEST 
0x952: V807 = 0x1
0x954: V808 = 0xa0
0x956: V809 = 0x2
0x958: V810 = EXP 0x2 0xa0
0x959: V811 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95b: V812 = AND V314 0xffffffffffffffffffffffffffffffffffffffff
0x95c: V813 = 0x0
0x960: M[0x0] = V812
0x961: V814 = 0x4
0x963: V815 = 0x20
0x965: M[0x20] = 0x4
0x966: V816 = 0x40
0x969: V817 = SHA3 0x0 0x40
0x96a: V818 = S[V817]
---
Entry stack: [V10, 0x212, V314]
Stack pops: 1
Stack additions: [S0, V818]
Exit stack: [V10, 0x212, V314, V818]

================================

Block 0x96b
[0x96b:0x96f]
---
Predecessors: [0x951]
Successors: [0x212]
---
0x96b JUMPDEST
0x96c SWAP2
0x96d SWAP1
0x96e POP
0x96f JUMP
---
0x96b: JUMPDEST 
0x96f: JUMP 0x212
---
Entry stack: [V10, 0x212, V314, V818]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V818]

================================

Block 0x970
[0x970:0x977]
---
Predecessors: [0x3ff]
Successors: [0x212]
---
0x970 JUMPDEST
0x971 PUSH4 0x1e13380
0x976 DUP2
0x977 JUMP
---
0x970: JUMPDEST 
0x971: V819 = 0x1e13380
0x977: JUMP 0x212
---
Entry stack: [V10, 0x212]
Stack pops: 1
Stack additions: [S0, 0x1e13380]
Exit stack: [V10, 0x212, 0x1e13380]

================================

Block 0x978
[0x978:0x986]
---
Predecessors: [0x424]
Successors: [0x42c]
---
0x978 JUMPDEST
0x979 PUSH1 0x0
0x97b SLOAD
0x97c PUSH1 0x1
0x97e PUSH1 0xa0
0x980 PUSH1 0x2
0x982 EXP
0x983 SUB
0x984 AND
0x985 DUP2
0x986 JUMP
---
0x978: JUMPDEST 
0x979: V820 = 0x0
0x97b: V821 = S[0x0]
0x97c: V822 = 0x1
0x97e: V823 = 0xa0
0x980: V824 = 0x2
0x982: V825 = EXP 0x2 0xa0
0x983: V826 = SUB 0x10000000000000000000000000000000000000000 0x1
0x984: V827 = AND 0xffffffffffffffffffffffffffffffffffffffff V821
0x986: JUMP 0x42c
---
Entry stack: [V10, 0x42c]
Stack pops: 1
Stack additions: [S0, V827]
Exit stack: [V10, 0x42c, V827]

================================

Block 0x987
[0x987:0x9bd]
---
Predecessors: [0x453]
Successors: [0x151]
---
0x987 JUMPDEST
0x988 PUSH1 0x40
0x98a DUP1
0x98b MLOAD
0x98c SWAP1
0x98d DUP2
0x98e ADD
0x98f PUSH1 0x40
0x991 MSTORE
0x992 PUSH1 0x4
0x994 DUP2
0x995 MSTORE
0x996 PUSH32 0x4e415a4900000000000000000000000000000000000000000000000000000000
0x9b7 PUSH1 0x20
0x9b9 DUP3
0x9ba ADD
0x9bb MSTORE
0x9bc DUP2
0x9bd JUMP
---
0x987: JUMPDEST 
0x988: V828 = 0x40
0x98b: V829 = M[0x40]
0x98e: V830 = ADD V829 0x40
0x98f: V831 = 0x40
0x991: M[0x40] = V830
0x992: V832 = 0x4
0x995: M[V829] = 0x4
0x996: V833 = 0x4e415a4900000000000000000000000000000000000000000000000000000000
0x9b7: V834 = 0x20
0x9ba: V835 = ADD V829 0x20
0x9bb: M[V835] = 0x4e415a4900000000000000000000000000000000000000000000000000000000
0x9bd: JUMP 0x151
---
Entry stack: [V10, 0x151]
Stack pops: 1
Stack additions: [S0, V829]
Exit stack: [V10, 0x151, V829]

================================

Block 0x9be
[0x9be:0x9e1]
---
Predecessors: [0x4de]
Successors: [0x9e2, 0x9e7]
---
0x9be JUMPDEST
0x9bf PUSH1 0x1
0x9c1 PUSH1 0xa0
0x9c3 PUSH1 0x2
0x9c5 EXP
0x9c6 SUB
0x9c7 CALLER
0x9c8 AND
0x9c9 PUSH1 0x0
0x9cb SWAP1
0x9cc DUP2
0x9cd MSTORE
0x9ce PUSH1 0x4
0x9d0 PUSH1 0x20
0x9d2 MSTORE
0x9d3 PUSH1 0x40
0x9d5 DUP2
0x9d6 SHA3
0x9d7 SLOAD
0x9d8 DUP3
0x9d9 SWAP1
0x9da LT
0x9db DUP1
0x9dc ISZERO
0x9dd SWAP1
0x9de PUSH2 0x9e7
0x9e1 JUMPI
---
0x9be: JUMPDEST 
0x9bf: V836 = 0x1
0x9c1: V837 = 0xa0
0x9c3: V838 = 0x2
0x9c5: V839 = EXP 0x2 0xa0
0x9c6: V840 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c7: V841 = CALLER
0x9c8: V842 = AND V841 0xffffffffffffffffffffffffffffffffffffffff
0x9c9: V843 = 0x0
0x9cd: M[0x0] = V842
0x9ce: V844 = 0x4
0x9d0: V845 = 0x20
0x9d2: M[0x20] = 0x4
0x9d3: V846 = 0x40
0x9d6: V847 = SHA3 0x0 0x40
0x9d7: V848 = S[V847]
0x9da: V849 = LT V848 V415
0x9dc: V850 = ISZERO V849
0x9de: V851 = 0x9e7
0x9e1: JUMPI 0x9e7 V849
---
Entry stack: [V10, 0x1eb, V413, V415]
Stack pops: 1
Stack additions: [S0, 0x0, V850]
Exit stack: [V10, 0x1eb, V413, V415, 0x0, V850]

================================

Block 0x9e2
[0x9e2:0x9e6]
---
Predecessors: [0x9be]
Successors: [0x9e7]
---
0x9e2 POP
0x9e3 PUSH1 0x0
0x9e5 DUP3
0x9e6 GT
---
0x9e3: V852 = 0x0
0x9e6: V853 = GT V415 0x0
---
Entry stack: [V10, 0x1eb, V413, V415, 0x0, V850]
Stack pops: 3
Stack additions: [S2, S1, V853]
Exit stack: [V10, 0x1eb, V413, V415, 0x0, V853]

================================

Block 0x9e7
[0x9e7:0x9ed]
---
Predecessors: [0x9be, 0x9e2]
Successors: [0x9ee, 0xa0c]
---
0x9e7 JUMPDEST
0x9e8 DUP1
0x9e9 ISZERO
0x9ea PUSH2 0xa0c
0x9ed JUMPI
---
0x9e7: JUMPDEST 
0x9e9: V854 = ISZERO S0
0x9ea: V855 = 0xa0c
0x9ed: JUMPI 0xa0c V854
---
Entry stack: [V10, 0x1eb, V413, V415, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1eb, V413, V415, 0x0, S0]

================================

Block 0x9ee
[0x9ee:0xa0b]
---
Predecessors: [0x9e7]
Successors: [0xa0c]
---
0x9ee POP
0x9ef PUSH1 0x1
0x9f1 PUSH1 0xa0
0x9f3 PUSH1 0x2
0x9f5 EXP
0x9f6 SUB
0x9f7 DUP4
0x9f8 AND
0x9f9 PUSH1 0x0
0x9fb SWAP1
0x9fc DUP2
0x9fd MSTORE
0x9fe PUSH1 0x4
0xa00 PUSH1 0x20
0xa02 MSTORE
0xa03 PUSH1 0x40
0xa05 SWAP1
0xa06 SHA3
0xa07 SLOAD
0xa08 DUP3
0xa09 DUP2
0xa0a ADD
0xa0b GT
---
0x9ef: V856 = 0x1
0x9f1: V857 = 0xa0
0x9f3: V858 = 0x2
0x9f5: V859 = EXP 0x2 0xa0
0x9f6: V860 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f8: V861 = AND V413 0xffffffffffffffffffffffffffffffffffffffff
0x9f9: V862 = 0x0
0x9fd: M[0x0] = V861
0x9fe: V863 = 0x4
0xa00: V864 = 0x20
0xa02: M[0x20] = 0x4
0xa03: V865 = 0x40
0xa06: V866 = SHA3 0x0 0x40
0xa07: V867 = S[V866]
0xa0a: V868 = ADD V867 V415
0xa0b: V869 = GT V868 V867
---
Entry stack: [V10, 0x1eb, V413, V415, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V869]
Exit stack: [V10, 0x1eb, V413, V415, 0x0, V869]

================================

Block 0xa0c
[0xa0c:0xa11]
---
Predecessors: [0x9e7, 0x9ee]
Successors: [0xa12, 0xa7e]
---
0xa0c JUMPDEST
0xa0d ISZERO
0xa0e PUSH2 0xa7e
0xa11 JUMPI
---
0xa0c: JUMPDEST 
0xa0d: V870 = ISZERO S0
0xa0e: V871 = 0xa7e
0xa11: JUMPI 0xa7e V870
---
Entry stack: [V10, 0x1eb, V413, V415, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1eb, V413, V415, 0x0]

================================

Block 0xa12
[0xa12:0xa7d]
---
Predecessors: [0xa0c]
Successors: [0x660]
---
0xa12 PUSH1 0x1
0xa14 PUSH1 0xa0
0xa16 PUSH1 0x2
0xa18 EXP
0xa19 SUB
0xa1a CALLER
0xa1b DUP2
0xa1c AND
0xa1d PUSH1 0x0
0xa1f DUP2
0xa20 DUP2
0xa21 MSTORE
0xa22 PUSH1 0x4
0xa24 PUSH1 0x20
0xa26 MSTORE
0xa27 PUSH1 0x40
0xa29 DUP1
0xa2a DUP3
0xa2b SHA3
0xa2c DUP1
0xa2d SLOAD
0xa2e DUP8
0xa2f SWAP1
0xa30 SUB
0xa31 SWAP1
0xa32 SSTORE
0xa33 SWAP3
0xa34 DUP7
0xa35 AND
0xa36 DUP1
0xa37 DUP3
0xa38 MSTORE
0xa39 SWAP1
0xa3a DUP4
0xa3b SWAP1
0xa3c SHA3
0xa3d DUP1
0xa3e SLOAD
0xa3f DUP7
0xa40 ADD
0xa41 SWAP1
0xa42 SSTORE
0xa43 SWAP2
0xa44 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa65 SWAP1
0xa66 DUP6
0xa67 SWAP1
0xa68 MLOAD
0xa69 SWAP1
0xa6a DUP2
0xa6b MSTORE
0xa6c PUSH1 0x20
0xa6e ADD
0xa6f PUSH1 0x40
0xa71 MLOAD
0xa72 DUP1
0xa73 SWAP2
0xa74 SUB
0xa75 SWAP1
0xa76 LOG3
0xa77 POP
0xa78 PUSH1 0x1
0xa7a PUSH2 0x660
0xa7d JUMP
---
0xa12: V872 = 0x1
0xa14: V873 = 0xa0
0xa16: V874 = 0x2
0xa18: V875 = EXP 0x2 0xa0
0xa19: V876 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1a: V877 = CALLER
0xa1c: V878 = AND 0xffffffffffffffffffffffffffffffffffffffff V877
0xa1d: V879 = 0x0
0xa21: M[0x0] = V878
0xa22: V880 = 0x4
0xa24: V881 = 0x20
0xa26: M[0x20] = 0x4
0xa27: V882 = 0x40
0xa2b: V883 = SHA3 0x0 0x40
0xa2d: V884 = S[V883]
0xa30: V885 = SUB V884 V415
0xa32: S[V883] = V885
0xa35: V886 = AND V413 0xffffffffffffffffffffffffffffffffffffffff
0xa38: M[0x0] = V886
0xa3c: V887 = SHA3 0x0 0x40
0xa3e: V888 = S[V887]
0xa40: V889 = ADD V415 V888
0xa42: S[V887] = V889
0xa44: V890 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa68: V891 = M[0x40]
0xa6b: M[V891] = V415
0xa6c: V892 = 0x20
0xa6e: V893 = ADD 0x20 V891
0xa6f: V894 = 0x40
0xa71: V895 = M[0x40]
0xa74: V896 = SUB V893 V895
0xa76: LOG V895 V896 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V878 V886
0xa78: V897 = 0x1
0xa7a: V898 = 0x660
0xa7d: JUMP 0x660
---
Entry stack: [V10, 0x1eb, V413, V415, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x1eb, V413, V415, 0x1]

================================

Block 0xa7e
[0xa7e:0xa85]
---
Predecessors: [0xa0c]
Successors: [0x660]
---
0xa7e JUMPDEST
0xa7f POP
0xa80 PUSH1 0x0
0xa82 PUSH2 0x660
0xa85 JUMP
---
0xa7e: JUMPDEST 
0xa80: V899 = 0x0
0xa82: V900 = 0x660
0xa85: JUMP 0x660
---
Entry stack: [V10, 0x1eb, V413, V415, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x1eb, V413, V415, 0x0]

================================

Block 0xa86
[0xa86:0xa86]
---
Predecessors: []
Successors: [0xa87]
---
0xa86 JUMPDEST
---
0xa86: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa87
[0xa87:0xa8c]
---
Predecessors: [0xa86]
Successors: []
Has unresolved jump.
---
0xa87 JUMPDEST
0xa88 SWAP3
0xa89 SWAP2
0xa8a POP
0xa8b POP
0xa8c JUMP
---
0xa87: JUMPDEST 
0xa8c: JUMP S3
---
Entry stack: []
Stack pops: 4
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xa8d
[0xa8d:0xab3]
---
Predecessors: [0x514]
Successors: [0xab4]
---
0xa8d JUMPDEST
0xa8e PUSH1 0x1
0xa90 PUSH1 0xa0
0xa92 PUSH1 0x2
0xa94 EXP
0xa95 SUB
0xa96 DUP1
0xa97 DUP4
0xa98 AND
0xa99 PUSH1 0x0
0xa9b SWAP1
0xa9c DUP2
0xa9d MSTORE
0xa9e PUSH1 0x5
0xaa0 PUSH1 0x20
0xaa2 SWAP1
0xaa3 DUP2
0xaa4 MSTORE
0xaa5 PUSH1 0x40
0xaa7 DUP1
0xaa8 DUP4
0xaa9 SHA3
0xaaa SWAP4
0xaab DUP6
0xaac AND
0xaad DUP4
0xaae MSTORE
0xaaf SWAP3
0xab0 SWAP1
0xab1 MSTORE
0xab2 SHA3
0xab3 SLOAD
---
0xa8d: JUMPDEST 
0xa8e: V901 = 0x1
0xa90: V902 = 0xa0
0xa92: V903 = 0x2
0xa94: V904 = EXP 0x2 0xa0
0xa95: V905 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa98: V906 = AND V438 0xffffffffffffffffffffffffffffffffffffffff
0xa99: V907 = 0x0
0xa9d: M[0x0] = V906
0xa9e: V908 = 0x5
0xaa0: V909 = 0x20
0xaa4: M[0x20] = 0x5
0xaa5: V910 = 0x40
0xaa9: V911 = SHA3 0x0 0x40
0xaac: V912 = AND V441 0xffffffffffffffffffffffffffffffffffffffff
0xaae: M[0x0] = V912
0xab1: M[0x20] = V911
0xab2: V913 = SHA3 0x0 0x40
0xab3: V914 = S[V913]
---
Entry stack: [V10, 0x212, V438, V441]
Stack pops: 2
Stack additions: [S1, S0, V914]
Exit stack: [V10, 0x212, V438, V441, V914]

================================

Block 0xab4
[0xab4:0xab9]
---
Predecessors: [0xa8d]
Successors: [0x212]
---
0xab4 JUMPDEST
0xab5 SWAP3
0xab6 SWAP2
0xab7 POP
0xab8 POP
0xab9 JUMP
---
0xab4: JUMPDEST 
0xab9: JUMP 0x212
---
Entry stack: [V10, 0x212, V438, V441, V914]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V914]

================================

Block 0xaba
[0xaba:0xad0]
---
Predecessors: [0x54b]
Successors: [0xad1, 0xad5]
---
0xaba JUMPDEST
0xabb PUSH1 0x0
0xabd SLOAD
0xabe CALLER
0xabf PUSH1 0x1
0xac1 PUSH1 0xa0
0xac3 PUSH1 0x2
0xac5 EXP
0xac6 SUB
0xac7 SWAP1
0xac8 DUP2
0xac9 AND
0xaca SWAP2
0xacb AND
0xacc EQ
0xacd PUSH2 0xad5
0xad0 JUMPI
---
0xaba: JUMPDEST 
0xabb: V915 = 0x0
0xabd: V916 = S[0x0]
0xabe: V917 = CALLER
0xabf: V918 = 0x1
0xac1: V919 = 0xa0
0xac3: V920 = 0x2
0xac5: V921 = EXP 0x2 0xa0
0xac6: V922 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac9: V923 = AND 0xffffffffffffffffffffffffffffffffffffffff V917
0xacb: V924 = AND V916 0xffffffffffffffffffffffffffffffffffffffff
0xacc: V925 = EQ V924 V923
0xacd: V926 = 0xad5
0xad0: JUMPI 0xad5 V925
---
Entry stack: [V10, 0x13c, V462]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13c, V462]

================================

Block 0xad1
[0xad1:0xad4]
---
Predecessors: [0xaba]
Successors: []
---
0xad1 PUSH1 0x0
0xad3 DUP1
0xad4 REVERT
---
0xad1: V927 = 0x0
0xad4: REVERT 0x0 0x0
---
Entry stack: [V10, 0x13c, V462]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13c, V462]

================================

Block 0xad5
[0xad5:0xafd]
---
Predecessors: [0xaba]
Successors: [0xafe]
---
0xad5 JUMPDEST
0xad6 PUSH1 0x0
0xad8 DUP1
0xad9 SLOAD
0xada PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaef NOT
0xaf0 AND
0xaf1 PUSH1 0x1
0xaf3 PUSH1 0xa0
0xaf5 PUSH1 0x2
0xaf7 EXP
0xaf8 SUB
0xaf9 DUP4
0xafa AND
0xafb OR
0xafc SWAP1
0xafd SSTORE
---
0xad5: JUMPDEST 
0xad6: V928 = 0x0
0xad9: V929 = S[0x0]
0xada: V930 = 0xffffffffffffffffffffffffffffffffffffffff
0xaef: V931 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xaf0: V932 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V929
0xaf1: V933 = 0x1
0xaf3: V934 = 0xa0
0xaf5: V935 = 0x2
0xaf7: V936 = EXP 0x2 0xa0
0xaf8: V937 = SUB 0x10000000000000000000000000000000000000000 0x1
0xafa: V938 = AND V462 0xffffffffffffffffffffffffffffffffffffffff
0xafb: V939 = OR V938 V932
0xafd: S[0x0] = V939
---
Entry stack: [V10, 0x13c, V462]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x13c, V462]

================================

Block 0xafe
[0xafe:0xafe]
---
Predecessors: [0xad5]
Successors: [0xaff]
---
0xafe JUMPDEST
---
0xafe: JUMPDEST 
---
Entry stack: [V10, 0x13c, V462]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13c, V462]

================================

Block 0xaff
[0xaff:0xb01]
---
Predecessors: [0xafe]
Successors: [0x13c]
---
0xaff JUMPDEST
0xb00 POP
0xb01 JUMP
---
0xaff: JUMPDEST 
0xb01: JUMP 0x13c
---
Entry stack: [V10, 0x13c, V462]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xb02
[0xb02:0xb32]
---
Predecessors: [0x57f]
Successors: [0xb33, 0xb43]
---
0xb02 JUMPDEST
0xb03 DUP3
0xb04 DUP1
0xb05 SLOAD
0xb06 PUSH1 0x1
0xb08 DUP2
0xb09 PUSH1 0x1
0xb0b AND
0xb0c ISZERO
0xb0d PUSH2 0x100
0xb10 MUL
0xb11 SUB
0xb12 AND
0xb13 PUSH1 0x2
0xb15 SWAP1
0xb16 DIV
0xb17 SWAP1
0xb18 PUSH1 0x0
0xb1a MSTORE
0xb1b PUSH1 0x20
0xb1d PUSH1 0x0
0xb1f SHA3
0xb20 SWAP1
0xb21 PUSH1 0x1f
0xb23 ADD
0xb24 PUSH1 0x20
0xb26 SWAP1
0xb27 DIV
0xb28 DUP2
0xb29 ADD
0xb2a SWAP3
0xb2b DUP3
0xb2c PUSH1 0x1f
0xb2e LT
0xb2f PUSH2 0xb43
0xb32 JUMPI
---
0xb02: JUMPDEST 
0xb05: V940 = S[0x3]
0xb06: V941 = 0x1
0xb09: V942 = 0x1
0xb0b: V943 = AND 0x1 V940
0xb0c: V944 = ISZERO V943
0xb0d: V945 = 0x100
0xb10: V946 = MUL 0x100 V944
0xb11: V947 = SUB V946 0x1
0xb12: V948 = AND V947 V940
0xb13: V949 = 0x2
0xb16: V950 = DIV V948 0x2
0xb18: V951 = 0x0
0xb1a: M[0x0] = 0x3
0xb1b: V952 = 0x20
0xb1d: V953 = 0x0
0xb1f: V954 = SHA3 0x0 0x20
0xb21: V955 = 0x1f
0xb23: V956 = ADD 0x1f V950
0xb24: V957 = 0x20
0xb27: V958 = DIV V956 0x20
0xb29: V959 = ADD V954 V958
0xb2c: V960 = 0x1f
0xb2e: V961 = LT 0x1f V496
0xb2f: V962 = 0xb43
0xb32: JUMPI 0xb43 V961
---
Entry stack: [V10, S6, {0x139, 0x13c}, S4, 0x5bd, 0x3, V499, V496]
Stack pops: 3
Stack additions: [S2, V959, S0, V954, S1]
Exit stack: [V10, S6, {0x139, 0x13c}, S4, 0x5bd, 0x3, V959, V496, V954, V499]

================================

Block 0xb33
[0xb33:0xb42]
---
Predecessors: [0xb02]
Successors: [0xb70]
---
0xb33 DUP1
0xb34 MLOAD
0xb35 PUSH1 0xff
0xb37 NOT
0xb38 AND
0xb39 DUP4
0xb3a DUP1
0xb3b ADD
0xb3c OR
0xb3d DUP6
0xb3e SSTORE
0xb3f PUSH2 0xb70
0xb42 JUMP
---
0xb34: V963 = M[V499]
0xb35: V964 = 0xff
0xb37: V965 = NOT 0xff
0xb38: V966 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V963
0xb3b: V967 = ADD V496 V496
0xb3c: V968 = OR V967 V966
0xb3e: S[0x3] = V968
0xb3f: V969 = 0xb70
0xb42: JUMP 0xb70
---
Entry stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, V959, V496, V954, V499]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, V959, V496, V954, V499]

================================

Block 0xb43
[0xb43:0xb51]
---
Predecessors: [0xb02]
Successors: [0xb52, 0xb70]
---
0xb43 JUMPDEST
0xb44 DUP3
0xb45 DUP1
0xb46 ADD
0xb47 PUSH1 0x1
0xb49 ADD
0xb4a DUP6
0xb4b SSTORE
0xb4c DUP3
0xb4d ISZERO
0xb4e PUSH2 0xb70
0xb51 JUMPI
---
0xb43: JUMPDEST 
0xb46: V970 = ADD V496 V496
0xb47: V971 = 0x1
0xb49: V972 = ADD 0x1 V970
0xb4b: S[0x3] = V972
0xb4d: V973 = ISZERO V496
0xb4e: V974 = 0xb70
0xb51: JUMPI 0xb70 V973
---
Entry stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, V959, V496, V954, V499]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, V959, V496, V954, V499]

================================

Block 0xb52
[0xb52:0xb54]
---
Predecessors: [0xb43]
Successors: [0xb55]
---
0xb52 SWAP2
0xb53 DUP3
0xb54 ADD
---
0xb54: V975 = ADD V499 V496
---
Entry stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, V959, V496, V954, V499]
Stack pops: 3
Stack additions: [S0, S1, V975]
Exit stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, V959, V499, V954, V975]

================================

Block 0xb55
[0xb55:0xb5d]
---
Predecessors: [0xb52, 0xb5e]
Successors: [0xb5e, 0xb70]
---
0xb55 JUMPDEST
0xb56 DUP3
0xb57 DUP2
0xb58 GT
0xb59 ISZERO
0xb5a PUSH2 0xb70
0xb5d JUMPI
---
0xb55: JUMPDEST 
0xb58: V976 = GT V975 S2
0xb59: V977 = ISZERO V976
0xb5a: V978 = 0xb70
0xb5d: JUMPI 0xb70 V977
---
Entry stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, V959, S2, S1, V975]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, V959, S2, S1, V975]

================================

Block 0xb5e
[0xb5e:0xb6f]
---
Predecessors: [0xb55]
Successors: [0xb55]
---
0xb5e DUP3
0xb5f MLOAD
0xb60 DUP3
0xb61 SSTORE
0xb62 SWAP2
0xb63 PUSH1 0x20
0xb65 ADD
0xb66 SWAP2
0xb67 SWAP1
0xb68 PUSH1 0x1
0xb6a ADD
0xb6b SWAP1
0xb6c PUSH2 0xb55
0xb6f JUMP
---
0xb5f: V979 = M[S2]
0xb61: S[S1] = V979
0xb63: V980 = 0x20
0xb65: V981 = ADD 0x20 S2
0xb68: V982 = 0x1
0xb6a: V983 = ADD 0x1 S1
0xb6c: V984 = 0xb55
0xb6f: JUMP 0xb55
---
Entry stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, V959, S2, S1, V975]
Stack pops: 3
Stack additions: [V981, V983, S0]
Exit stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, V959, V981, V983, V975]

================================

Block 0xb70
[0xb70:0xb70]
---
Predecessors: [0xb33, 0xb43, 0xb55]
Successors: [0xb71]
---
0xb70 JUMPDEST
---
0xb70: JUMPDEST 
---
Entry stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, V959, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, V959, S2, S1, S0]

================================

Block 0xb71
[0xb71:0xb7c]
---
Predecessors: [0xb70]
Successors: [0xb81]
---
0xb71 JUMPDEST
0xb72 POP
0xb73 PUSH2 0xb7d
0xb76 SWAP3
0xb77 SWAP2
0xb78 POP
0xb79 PUSH2 0xb81
0xb7c JUMP
---
0xb71: JUMPDEST 
0xb73: V985 = 0xb7d
0xb79: V986 = 0xb81
0xb7c: JUMP 0xb81
---
Entry stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, V959, S2, S1, S0]
Stack pops: 4
Stack additions: [0xb7d, S3, S1]
Exit stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, 0xb7d, V959, S1]

================================

Block 0xb7d
[0xb7d:0xb80]
---
Predecessors: [0x66a, 0xb87]
Successors: [0x13c, 0x5bd, 0x66a]
---
0xb7d JUMPDEST
0xb7e POP
0xb7f SWAP1
0xb80 JUMP
---
0xb7d: JUMPDEST 
0xb80: JUMP S2
---
Entry stack: [V10, S8, {0x139, 0x13c}, S6, S5, {0x3, 0x139, 0x13c}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, S8, {0x139, 0x13c}, S6, S5, {0x3, 0x139, 0x13c}, S3, S1]

================================

Block 0xb81
[0xb81:0xb86]
---
Predecessors: [0xb71]
Successors: [0xb87]
---
0xb81 JUMPDEST
0xb82 PUSH2 0x66a
0xb85 SWAP2
0xb86 SWAP1
---
0xb81: JUMPDEST 
0xb82: V987 = 0x66a
---
Entry stack: [V10, S7, {0x139, 0x13c}, S5, 0x5bd, 0x3, 0xb7d, V959, S0]
Stack pops: 2
Stack additions: [0x66a, S1, S0]
Exit stack: [V10, S7, {0x139, 0x13c}, S5, 0x5bd, 0x3, 0xb7d, 0x66a, V959, S0]

================================

Block 0xb87
[0xb87:0xb8f]
---
Predecessors: [0xb81, 0xb90]
Successors: [0xb7d, 0xb90]
---
0xb87 JUMPDEST
0xb88 DUP1
0xb89 DUP3
0xb8a GT
0xb8b ISZERO
0xb8c PUSH2 0xb7d
0xb8f JUMPI
---
0xb87: JUMPDEST 
0xb8a: V988 = GT V959 S0
0xb8b: V989 = ISZERO V988
0xb8c: V990 = 0xb7d
0xb8f: JUMPI 0xb7d V989
---
Entry stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, 0xb7d, 0x66a, V959, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, 0xb7d, 0x66a, V959, S0]

================================

Block 0xb90
[0xb90:0xb9a]
---
Predecessors: [0xb87]
Successors: [0xb87]
---
0xb90 PUSH1 0x0
0xb92 DUP2
0xb93 SSTORE
0xb94 PUSH1 0x1
0xb96 ADD
0xb97 PUSH2 0xb87
0xb9a JUMP
---
0xb90: V991 = 0x0
0xb93: S[S0] = 0x0
0xb94: V992 = 0x1
0xb96: V993 = ADD 0x1 S0
0xb97: V994 = 0xb87
0xb9a: JUMP 0xb87
---
Entry stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, 0xb7d, 0x66a, V959, S0]
Stack pops: 1
Stack additions: [V993]
Exit stack: [V10, S8, {0x139, 0x13c}, S6, 0x5bd, 0x3, 0xb7d, 0x66a, V959, V993]

================================

Block 0xb9b
[0xb9b:0xbcd]
---
Predecessors: []
Successors: []
---
0xb9b JUMPDEST
0xb9c POP
0xb9d SWAP1
0xb9e JUMP
0xb9f JUMPDEST
0xba0 SWAP1
0xba1 JUMP
0xba2 STOP
0xba3 LOG1
0xba4 PUSH6 0x627a7a723058
0xbab SHA3
0xbac PUSH21 0x542e04f45c84449850c1346f80dedcbff732a591b9
0xbc2 MISSING 0xd7
0xbc3 MISSING 0xcb
0xbc4 MISSING 0x4d
0xbc5 DUP3
0xbc6 PUSH6 0x28cc491c0900
0xbcd MISSING 0x29
---
0xb9b: JUMPDEST 
0xb9e: JUMP S2
0xb9f: JUMPDEST 
0xba1: JUMP S1
0xba2: STOP 
0xba3: LOG S0 S1 S2
0xba4: V995 = 0x627a7a723058
0xbab: V996 = SHA3 0x627a7a723058 S3
0xbac: V997 = 0x542e04f45c84449850c1346f80dedcbff732a591b9
0xbc2: MISSING 0xd7
0xbc3: MISSING 0xcb
0xbc4: MISSING 0x4d
0xbc6: V998 = 0x28cc491c0900
0xbcd: MISSING 0x29
---
Entry stack: []
Stack pops: 136
Stack additions: [0x28cc491c0900, S2, S0, S1, S2]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x13e
Exit block: 0x1bb
Body: 0x13e, 0x145, 0x149, 0x151, 0x175, 0x17e, 0x186, 0x18e, 0x1a2, 0x1bb, 0x5c2

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x1c9
Exit block: 0x1eb
Body: 0x1c9, 0x1d0, 0x1d4, 0x1eb, 0x5f9, 0x660

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1ff
Exit block: 0x13c
Body: 0x13c, 0x1ff, 0x206, 0x20a, 0x666

Function 3:
Public function signature: 0x2182ff7e
Entry block: 0x224
Exit block: 0x13c
Body: 0x13c, 0x224, 0x22b, 0x22f, 0x66d, 0x67d, 0x681, 0x6a3, 0x6a7, 0x6f3

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x23c
Exit block: 0x1eb
Body: 0x1eb, 0x23c, 0x243, 0x247, 0x6fb, 0x71f, 0x74b, 0x752, 0x757, 0x75e, 0x77c, 0x782, 0x80b, 0x80f, 0x810

Function 5:
Public function signature: 0x313ce567
Entry block: 0x278
Exit block: 0x28b
Body: 0x278, 0x27f, 0x283, 0x28b, 0x817

Function 6:
Public function signature: 0x3ccfd60b
Entry block: 0x2a1
Exit block: 0x13c
Body: 0x139, 0x13a, 0x13c, 0x2a1, 0x2a8, 0x2ac, 0x81c, 0x833, 0x837, 0x840, 0x844, 0x879

Function 7:
Public function signature: 0x41c0e1b5
Entry block: 0x2b6
Exit block: 0x898
Body: 0x2b6, 0x2bd, 0x2c1, 0x881, 0x898, 0x89c

Function 8:
Public function signature: 0x45db72ff
Entry block: 0x2cb
Exit block: 0x1bb
Body: 0x151, 0x175, 0x17e, 0x186, 0x18e, 0x1a2, 0x1bb, 0x2cb, 0x2d2, 0x2d6, 0x8ad, 0x8fd, 0x905, 0x918, 0x926, 0x93a, 0x943

Function 9:
Public function signature: 0x4fa6a6d5
Entry block: 0x356
Exit block: 0x212
Body: 0x212, 0x356, 0x35d, 0x361, 0x94b

Function 10:
Public function signature: 0x5453095b
Entry block: 0x37b
Exit block: 0x13c
Body: 0x13c, 0x37b

Function 11:
Public function signature: 0x70a08231
Entry block: 0x3c3
Exit block: 0x212
Body: 0x212, 0x3c3, 0x3ca, 0x3ce, 0x951, 0x96b

Function 12:
Public function signature: 0x823c82ca
Entry block: 0x3f4
Exit block: 0x212
Body: 0x212, 0x3f4, 0x3fb, 0x3ff, 0x970

Function 13:
Public function signature: 0x8da5cb5b
Entry block: 0x419
Exit block: 0x42c
Body: 0x419, 0x420, 0x424, 0x42c, 0x978

Function 14:
Public function signature: 0x95d89b41
Entry block: 0x448
Exit block: 0x1bb
Body: 0x151, 0x175, 0x17e, 0x186, 0x18e, 0x1a2, 0x1bb, 0x448, 0x44f, 0x453, 0x987

Function 15:
Public function signature: 0xa9059cbb
Entry block: 0x4d3
Exit block: 0x1eb
Body: 0x1eb, 0x4d3, 0x4da, 0x4de, 0x660, 0x9be, 0x9e2, 0x9e7, 0x9ee, 0xa0c, 0xa12, 0xa7e

Function 16:
Public function signature: 0xdd62ed3e
Entry block: 0x509
Exit block: 0x212
Body: 0x212, 0x509, 0x510, 0x514, 0xa8d, 0xab4

Function 17:
Public function signature: 0xf2fde38b
Entry block: 0x540
Exit block: 0x13c
Body: 0x13c, 0x540, 0x547, 0x54b, 0xaba, 0xad1, 0xad5, 0xafe, 0xaff

Function 18:
Public fallback function
Entry block: 0xf9
Exit block: 0x13c
Body: 0xf9, 0xfd, 0x139, 0x13a, 0x13c

Function 19:
Private function
Entry block: 0x561
Exit block: 0x5bf
Body: 0x561, 0x56f, 0x57f, 0x5bd, 0x5bf, 0x66a, 0xb02, 0xb33, 0xb43, 0xb52, 0xb55, 0xb5e, 0xb70, 0xb71, 0xb7d, 0xb81, 0xb87, 0xb90

