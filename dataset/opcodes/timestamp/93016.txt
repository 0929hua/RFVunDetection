Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb4]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb4
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb4
0xa: JUMPI 0xb4 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x226]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x9799c01
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x226
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x9799c01
0x20: V14 = EQ V12 0x9799c01
0x21: V15 = 0x226
0x24: JUMPI 0x226 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x24b]
---
0x25 DUP1
0x26 PUSH4 0xb97bc86
0x2b EQ
0x2c PUSH2 0x24b
0x2f JUMPI
---
0x26: V16 = 0xb97bc86
0x2b: V17 = EQ 0xb97bc86 V12
0x2c: V18 = 0x24b
0x2f: JUMPI 0x24b V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x270]
---
0x30 DUP1
0x31 PUSH4 0x68428a1b
0x36 EQ
0x37 PUSH2 0x270
0x3a JUMPI
---
0x31: V19 = 0x68428a1b
0x36: V20 = EQ 0x68428a1b V12
0x37: V21 = 0x270
0x3a: JUMPI 0x270 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x297]
---
0x3b DUP1
0x3c PUSH4 0x69043895
0x41 EQ
0x42 PUSH2 0x297
0x45 JUMPI
---
0x3c: V22 = 0x69043895
0x41: V23 = EQ 0x69043895 V12
0x42: V24 = 0x297
0x45: JUMPI 0x297 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x2b8]
---
0x46 DUP1
0x47 PUSH4 0x70a08231
0x4c EQ
0x4d PUSH2 0x2b8
0x50 JUMPI
---
0x47: V25 = 0x70a08231
0x4c: V26 = EQ 0x70a08231 V12
0x4d: V27 = 0x2b8
0x50: JUMPI 0x2b8 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x2e9]
---
0x51 DUP1
0x52 PUSH4 0x7a3a0e84
0x57 EQ
0x58 PUSH2 0x2e9
0x5b JUMPI
---
0x52: V28 = 0x7a3a0e84
0x57: V29 = EQ 0x7a3a0e84 V12
0x58: V30 = 0x2e9
0x5b: JUMPI 0x2e9 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x30e]
---
0x5c DUP1
0x5d PUSH4 0x7b3e5e7b
0x62 EQ
0x63 PUSH2 0x30e
0x66 JUMPI
---
0x5d: V31 = 0x7b3e5e7b
0x62: V32 = EQ 0x7b3e5e7b V12
0x63: V33 = 0x30e
0x66: JUMPI 0x30e V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x333]
---
0x67 DUP1
0x68 PUSH4 0x83197ef0
0x6d EQ
0x6e PUSH2 0x333
0x71 JUMPI
---
0x68: V34 = 0x83197ef0
0x6d: V35 = EQ 0x83197ef0 V12
0x6e: V36 = 0x333
0x71: JUMPI 0x333 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x348]
---
0x72 DUP1
0x73 PUSH4 0x982e5721
0x78 EQ
0x79 PUSH2 0x348
0x7c JUMPI
---
0x73: V37 = 0x982e5721
0x78: V38 = EQ 0x982e5721 V12
0x79: V39 = 0x348
0x7c: JUMPI 0x348 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x36d]
---
0x7d DUP1
0x7e PUSH4 0xb52e0dc8
0x83 EQ
0x84 PUSH2 0x36d
0x87 JUMPI
---
0x7e: V40 = 0xb52e0dc8
0x83: V41 = EQ 0xb52e0dc8 V12
0x84: V42 = 0x36d
0x87: JUMPI 0x36d V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x395]
---
0x88 DUP1
0x89 PUSH4 0xc10b9358
0x8e EQ
0x8f PUSH2 0x395
0x92 JUMPI
---
0x89: V43 = 0xc10b9358
0x8e: V44 = EQ 0xc10b9358 V12
0x8f: V45 = 0x395
0x92: JUMPI 0x395 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x3aa]
---
0x93 DUP1
0x94 PUSH4 0xc8e706e2
0x99 EQ
0x9a PUSH2 0x3aa
0x9d JUMPI
---
0x94: V46 = 0xc8e706e2
0x99: V47 = EQ 0xc8e706e2 V12
0x9a: V48 = 0x3aa
0x9d: JUMPI 0x3aa V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x3d9]
---
0x9e DUP1
0x9f PUSH4 0xce606ee0
0xa4 EQ
0xa5 PUSH2 0x3d9
0xa8 JUMPI
---
0x9f: V49 = 0xce606ee0
0xa4: V50 = EQ 0xce606ee0 V12
0xa5: V51 = 0x3d9
0xa8: JUMPI 0x3d9 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x408]
---
0xa9 DUP1
0xaa PUSH4 0xfb03735e
0xaf EQ
0xb0 PUSH2 0x408
0xb3 JUMPI
---
0xaa: V52 = 0xfb03735e
0xaf: V53 = EQ 0xfb03735e V12
0xb0: V54 = 0x408
0xb3: JUMPI 0x408 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xb4]
---
Predecessors: [0x0, 0xa9]
Successors: [0xb5]
---
0xb4 JUMPDEST
---
0xb4: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb5
[0xb5:0xbf]
---
Predecessors: [0xb4]
Successors: [0x437]
---
0xb5 JUMPDEST
0xb6 PUSH1 0x0
0xb8 DUP1
0xb9 PUSH2 0xc0
0xbc PUSH2 0x437
0xbf JUMP
---
0xb5: JUMPDEST 
0xb6: V55 = 0x0
0xb9: V56 = 0xc0
0xbc: V57 = 0x437
0xbf: JUMP 0x437
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x0, 0xc0]
Exit stack: [V12, 0x0, 0x0, 0xc0]

================================

Block 0xc0
[0xc0:0xc6]
---
Predecessors: [0x45f]
Successors: [0xc7, 0xcb]
---
0xc0 JUMPDEST
0xc1 ISZERO
0xc2 ISZERO
0xc3 PUSH2 0xcb
0xc6 JUMPI
---
0xc0: JUMPDEST 
0xc1: V58 = ISZERO S0
0xc2: V59 = ISZERO V58
0xc3: V60 = 0xcb
0xc6: JUMPI 0xcb V59
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S2, S1]

================================

Block 0xc7
[0xc7:0xca]
---
Predecessors: [0xc0]
Successors: []
---
0xc7 PUSH1 0x0
0xc9 DUP1
0xca REVERT
---
0xc7: V61 = 0x0
0xca: REVERT 0x0 0x0
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0xcb
[0xcb:0xd6]
---
Predecessors: [0xc0]
Successors: [0xd7, 0xdb]
---
0xcb JUMPDEST
0xcc PUSH1 0x3
0xce SLOAD
0xcf PUSH1 0x4
0xd1 SLOAD
0xd2 LT
0xd3 PUSH2 0xdb
0xd6 JUMPI
---
0xcb: JUMPDEST 
0xcc: V62 = 0x3
0xce: V63 = S[0x3]
0xcf: V64 = 0x4
0xd1: V65 = S[0x4]
0xd2: V66 = LT V65 V63
0xd3: V67 = 0xdb
0xd6: JUMPI 0xdb V66
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0xd7
[0xd7:0xda]
---
Predecessors: [0xcb]
Successors: []
---
0xd7 PUSH1 0x0
0xd9 DUP1
0xda REVERT
---
0xd7: V68 = 0x0
0xda: REVERT 0x0 0x0
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0xdb
[0xdb:0x10e]
---
Predecessors: [0xcb]
Successors: [0x462]
---
0xdb JUMPDEST
0xdc PUSH1 0x1
0xde PUSH1 0xa0
0xe0 PUSH1 0x2
0xe2 EXP
0xe3 SUB
0xe4 CALLER
0xe5 AND
0xe6 PUSH1 0x0
0xe8 SWAP1
0xe9 DUP2
0xea MSTORE
0xeb PUSH1 0x7
0xed PUSH1 0x20
0xef MSTORE
0xf0 PUSH1 0x40
0xf2 SWAP1
0xf3 SHA3
0xf4 DUP1
0xf5 SLOAD
0xf6 CALLVALUE
0xf7 SWAP1
0xf8 DUP2
0xf9 ADD
0xfa SWAP1
0xfb SWAP2
0xfc SSTORE
0xfd PUSH1 0x4
0xff DUP1
0x100 SLOAD
0x101 DUP3
0x102 ADD
0x103 SWAP1
0x104 SSTORE
0x105 SWAP2
0x106 POP
0x107 PUSH2 0x10f
0x10a TIMESTAMP
0x10b PUSH2 0x462
0x10e JUMP
---
0xdb: JUMPDEST 
0xdc: V69 = 0x1
0xde: V70 = 0xa0
0xe0: V71 = 0x2
0xe2: V72 = EXP 0x2 0xa0
0xe3: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe4: V74 = CALLER
0xe5: V75 = AND V74 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V76 = 0x0
0xea: M[0x0] = V75
0xeb: V77 = 0x7
0xed: V78 = 0x20
0xef: M[0x20] = 0x7
0xf0: V79 = 0x40
0xf3: V80 = SHA3 0x0 0x40
0xf5: V81 = S[V80]
0xf6: V82 = CALLVALUE
0xf9: V83 = ADD V82 V81
0xfc: S[V80] = V83
0xfd: V84 = 0x4
0x100: V85 = S[0x4]
0x102: V86 = ADD V82 V85
0x104: S[0x4] = V86
0x107: V87 = 0x10f
0x10a: V88 = TIMESTAMP
0x10b: V89 = 0x462
0x10e: JUMP 0x462
---
Entry stack: [V12, S1, S0]
Stack pops: 2
Stack additions: [V82, S0, 0x10f, V88]
Exit stack: [V12, V82, S0, 0x10f, V88]

================================

Block 0x10f
[0x10f:0x11d]
---
Predecessors: [0x4e4]
Successors: [0x11e, 0x11f]
---
0x10f JUMPDEST
0x110 PUSH6 0x5af3107a4000
0x117 DUP2
0x118 ISZERO
0x119 ISZERO
0x11a PUSH2 0x11f
0x11d JUMPI
---
0x10f: JUMPDEST 
0x110: V90 = 0x5af3107a4000
0x118: V91 = ISZERO {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}
0x119: V92 = ISZERO V91
0x11a: V93 = 0x11f
0x11d: JUMPI 0x11f V92
---
Entry stack: [V12, S2, S1, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}]
Stack pops: 1
Stack additions: [S0, 0x5af3107a4000]
Exit stack: [V12, S2, S1, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}, 0x5af3107a4000]

================================

Block 0x11e
[0x11e:0x11e]
---
Predecessors: [0x10f]
Successors: []
---
0x11e INVALID
---
0x11e: INVALID 
---
Entry stack: [V12, S3, S2, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}, 0x5af3107a4000]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}, 0x5af3107a4000]

================================

Block 0x11f
[0x11f:0x13f]
---
Predecessors: [0x10f]
Successors: [0x140, 0x141]
---
0x11f JUMPDEST
0x120 PUSH1 0x5
0x122 SLOAD
0x123 SWAP2
0x124 SWAP1
0x125 DIV
0x126 SWAP2
0x127 POP
0x128 PUSH1 0x1
0x12a PUSH1 0xa0
0x12c PUSH1 0x2
0x12e EXP
0x12f SUB
0x130 AND
0x131 PUSH4 0xa9059cbb
0x136 CALLER
0x137 DUP4
0x138 DUP6
0x139 DUP2
0x13a ISZERO
0x13b ISZERO
0x13c PUSH2 0x141
0x13f JUMPI
---
0x11f: JUMPDEST 
0x120: V94 = 0x5
0x122: V95 = S[0x5]
0x125: V96 = DIV 0x5af3107a4000 {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}
0x128: V97 = 0x1
0x12a: V98 = 0xa0
0x12c: V99 = 0x2
0x12e: V100 = EXP 0x2 0xa0
0x12f: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x130: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x131: V103 = 0xa9059cbb
0x136: V104 = CALLER
0x13a: V105 = ISZERO V96
0x13b: V106 = ISZERO V105
0x13c: V107 = 0x141
0x13f: JUMPI 0x141 V106
---
Entry stack: [V12, S3, S2, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}, 0x5af3107a4000]
Stack pops: 4
Stack additions: [S3, V96, V102, 0xa9059cbb, V104, V96, S3]
Exit stack: [V12, S3, V96, V102, 0xa9059cbb, V104, V96, S3]

================================

Block 0x140
[0x140:0x140]
---
Predecessors: [0x11f]
Successors: []
---
0x140 INVALID
---
0x140: INVALID 
---
Entry stack: [V12, S6, V96, V102, 0xa9059cbb, V104, V96, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, V96, V102, 0xa9059cbb, V104, V96, S0]

================================

Block 0x141
[0x141:0x180]
---
Predecessors: [0x11f]
Successors: [0x181, 0x185]
---
0x141 JUMPDEST
0x142 DIV
0x143 PUSH1 0x40
0x145 MLOAD
0x146 PUSH1 0xe0
0x148 PUSH1 0x2
0x14a EXP
0x14b PUSH4 0xffffffff
0x150 DUP6
0x151 AND
0x152 MUL
0x153 DUP2
0x154 MSTORE
0x155 PUSH1 0x1
0x157 PUSH1 0xa0
0x159 PUSH1 0x2
0x15b EXP
0x15c SUB
0x15d SWAP1
0x15e SWAP3
0x15f AND
0x160 PUSH1 0x4
0x162 DUP4
0x163 ADD
0x164 MSTORE
0x165 PUSH1 0x24
0x167 DUP3
0x168 ADD
0x169 MSTORE
0x16a PUSH1 0x44
0x16c ADD
0x16d PUSH1 0x0
0x16f PUSH1 0x40
0x171 MLOAD
0x172 DUP1
0x173 DUP4
0x174 SUB
0x175 DUP2
0x176 PUSH1 0x0
0x178 DUP8
0x179 DUP1
0x17a EXTCODESIZE
0x17b ISZERO
0x17c ISZERO
0x17d PUSH2 0x185
0x180 JUMPI
---
0x141: JUMPDEST 
0x142: V108 = DIV S0 V96
0x143: V109 = 0x40
0x145: V110 = M[0x40]
0x146: V111 = 0xe0
0x148: V112 = 0x2
0x14a: V113 = EXP 0x2 0xe0
0x14b: V114 = 0xffffffff
0x151: V115 = AND 0xa9059cbb 0xffffffff
0x152: V116 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x154: M[V110] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x155: V117 = 0x1
0x157: V118 = 0xa0
0x159: V119 = 0x2
0x15b: V120 = EXP 0x2 0xa0
0x15c: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15f: V122 = AND V104 0xffffffffffffffffffffffffffffffffffffffff
0x160: V123 = 0x4
0x163: V124 = ADD V110 0x4
0x164: M[V124] = V122
0x165: V125 = 0x24
0x168: V126 = ADD V110 0x24
0x169: M[V126] = V108
0x16a: V127 = 0x44
0x16c: V128 = ADD 0x44 V110
0x16d: V129 = 0x0
0x16f: V130 = 0x40
0x171: V131 = M[0x40]
0x174: V132 = SUB V128 V131
0x176: V133 = 0x0
0x17a: V134 = EXTCODESIZE V102
0x17b: V135 = ISZERO V134
0x17c: V136 = ISZERO V135
0x17d: V137 = 0x185
0x180: JUMPI 0x185 V136
---
Entry stack: [V12, S6, V96, V102, 0xa9059cbb, V104, V96, S0]
Stack pops: 5
Stack additions: [S4, S3, V128, 0x0, V131, V132, V131, 0x0, S4]
Exit stack: [V12, S6, V96, V102, 0xa9059cbb, V128, 0x0, V131, V132, V131, 0x0, V102]

================================

Block 0x181
[0x181:0x184]
---
Predecessors: [0x141]
Successors: []
---
0x181 PUSH1 0x0
0x183 DUP1
0x184 REVERT
---
0x181: V138 = 0x0
0x184: REVERT 0x0 0x0
---
Entry stack: [V12, S10, V96, V102, 0xa9059cbb, V128, 0x0, V131, V132, V131, 0x0, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, V96, V102, 0xa9059cbb, V128, 0x0, V131, V132, V131, 0x0, V102]

================================

Block 0x185
[0x185:0x191]
---
Predecessors: [0x141]
Successors: [0x192, 0x196]
---
0x185 JUMPDEST
0x186 PUSH2 0x2c6
0x189 GAS
0x18a SUB
0x18b CALL
0x18c ISZERO
0x18d ISZERO
0x18e PUSH2 0x196
0x191 JUMPI
---
0x185: JUMPDEST 
0x186: V139 = 0x2c6
0x189: V140 = GAS
0x18a: V141 = SUB V140 0x2c6
0x18b: V142 = CALL V141 V102 0x0 V131 V132 V131 0x0
0x18c: V143 = ISZERO V142
0x18d: V144 = ISZERO V143
0x18e: V145 = 0x196
0x191: JUMPI 0x196 V144
---
Entry stack: [V12, S10, V96, V102, 0xa9059cbb, V128, 0x0, V131, V132, V131, 0x0, V102]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S10, V96, V102, 0xa9059cbb, V128]

================================

Block 0x192
[0x192:0x195]
---
Predecessors: [0x185]
Successors: []
---
0x192 PUSH1 0x0
0x194 DUP1
0x195 REVERT
---
0x192: V146 = 0x0
0x195: REVERT 0x0 0x0
---
Entry stack: [V12, S4, V96, V102, 0xa9059cbb, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, V96, V102, 0xa9059cbb, V128]

================================

Block 0x196
[0x196:0x21c]
---
Predecessors: [0x185]
Successors: [0x21d, 0x221]
---
0x196 JUMPDEST
0x197 POP
0x198 POP
0x199 POP
0x19a PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1bb CALLER
0x1bc DUP4
0x1bd PUSH1 0x1
0x1bf PUSH1 0x40
0x1c1 MLOAD
0x1c2 PUSH1 0x1
0x1c4 PUSH1 0xa0
0x1c6 PUSH1 0x2
0x1c8 EXP
0x1c9 SUB
0x1ca SWAP1
0x1cb SWAP4
0x1cc AND
0x1cd DUP4
0x1ce MSTORE
0x1cf PUSH1 0x20
0x1d1 DUP4
0x1d2 ADD
0x1d3 SWAP2
0x1d4 SWAP1
0x1d5 SWAP2
0x1d6 MSTORE
0x1d7 ISZERO
0x1d8 ISZERO
0x1d9 PUSH1 0x40
0x1db DUP1
0x1dc DUP4
0x1dd ADD
0x1de SWAP2
0x1df SWAP1
0x1e0 SWAP2
0x1e1 MSTORE
0x1e2 PUSH1 0x60
0x1e4 SWAP1
0x1e5 SWAP2
0x1e6 ADD
0x1e7 SWAP1
0x1e8 MLOAD
0x1e9 DUP1
0x1ea SWAP2
0x1eb SUB
0x1ec SWAP1
0x1ed LOG1
0x1ee PUSH1 0x6
0x1f0 SLOAD
0x1f1 PUSH1 0x1
0x1f3 PUSH1 0xa0
0x1f5 PUSH1 0x2
0x1f7 EXP
0x1f8 SUB
0x1f9 AND
0x1fa CALLVALUE
0x1fb DUP1
0x1fc ISZERO
0x1fd PUSH2 0x8fc
0x200 MUL
0x201 SWAP1
0x202 PUSH1 0x40
0x204 MLOAD
0x205 PUSH1 0x0
0x207 PUSH1 0x40
0x209 MLOAD
0x20a DUP1
0x20b DUP4
0x20c SUB
0x20d DUP2
0x20e DUP6
0x20f DUP9
0x210 DUP9
0x211 CALL
0x212 SWAP4
0x213 POP
0x214 POP
0x215 POP
0x216 POP
0x217 ISZERO
0x218 ISZERO
0x219 PUSH2 0x221
0x21c JUMPI
---
0x196: JUMPDEST 
0x19a: V147 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1bb: V148 = CALLER
0x1bd: V149 = 0x1
0x1bf: V150 = 0x40
0x1c1: V151 = M[0x40]
0x1c2: V152 = 0x1
0x1c4: V153 = 0xa0
0x1c6: V154 = 0x2
0x1c8: V155 = EXP 0x2 0xa0
0x1c9: V156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cc: V157 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x1ce: M[V151] = V157
0x1cf: V158 = 0x20
0x1d2: V159 = ADD V151 0x20
0x1d6: M[V159] = S4
0x1d7: V160 = ISZERO 0x1
0x1d8: V161 = ISZERO 0x0
0x1d9: V162 = 0x40
0x1dd: V163 = ADD V151 0x40
0x1e1: M[V163] = 0x1
0x1e2: V164 = 0x60
0x1e6: V165 = ADD V151 0x60
0x1e8: V166 = M[0x40]
0x1eb: V167 = SUB V165 V166
0x1ed: LOG V166 V167 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1ee: V168 = 0x6
0x1f0: V169 = S[0x6]
0x1f1: V170 = 0x1
0x1f3: V171 = 0xa0
0x1f5: V172 = 0x2
0x1f7: V173 = EXP 0x2 0xa0
0x1f8: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f9: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x1fa: V176 = CALLVALUE
0x1fc: V177 = ISZERO V176
0x1fd: V178 = 0x8fc
0x200: V179 = MUL 0x8fc V177
0x202: V180 = 0x40
0x204: V181 = M[0x40]
0x205: V182 = 0x0
0x207: V183 = 0x40
0x209: V184 = M[0x40]
0x20c: V185 = SUB V181 V184
0x211: V186 = CALL V179 V175 V176 V184 V185 V184 0x0
0x217: V187 = ISZERO V186
0x218: V188 = ISZERO V187
0x219: V189 = 0x221
0x21c: JUMPI 0x221 V188
---
Entry stack: [V12, S4, V96, V102, 0xa9059cbb, V128]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V12, S4, V96]

================================

Block 0x21d
[0x21d:0x220]
---
Predecessors: [0x196]
Successors: []
---
0x21d PUSH1 0x0
0x21f DUP1
0x220 REVERT
---
0x21d: V190 = 0x0
0x220: REVERT 0x0 0x0
---
Entry stack: [V12, S1, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, V96]

================================

Block 0x221
[0x221:0x221]
---
Predecessors: [0x196]
Successors: [0x222]
---
0x221 JUMPDEST
---
0x221: JUMPDEST 
---
Entry stack: [V12, S1, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, V96]

================================

Block 0x222
[0x222:0x225]
---
Predecessors: [0x221]
Successors: []
---
0x222 JUMPDEST
0x223 POP
0x224 POP
0x225 STOP
---
0x222: JUMPDEST 
0x225: STOP 
---
Entry stack: [V12, S1, V96]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x226
[0x226:0x22c]
---
Predecessors: [0xb]
Successors: [0x22d, 0x231]
---
0x226 JUMPDEST
0x227 CALLVALUE
0x228 ISZERO
0x229 PUSH2 0x231
0x22c JUMPI
---
0x226: JUMPDEST 
0x227: V191 = CALLVALUE
0x228: V192 = ISZERO V191
0x229: V193 = 0x231
0x22c: JUMPI 0x231 V192
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22d
[0x22d:0x230]
---
Predecessors: [0x226]
Successors: []
---
0x22d PUSH1 0x0
0x22f DUP1
0x230 REVERT
---
0x22d: V194 = 0x0
0x230: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x231
[0x231:0x238]
---
Predecessors: [0x226]
Successors: [0x4e9]
---
0x231 JUMPDEST
0x232 PUSH2 0x239
0x235 PUSH2 0x4e9
0x238 JUMP
---
0x231: JUMPDEST 
0x232: V195 = 0x239
0x235: V196 = 0x4e9
0x238: JUMP 0x4e9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x239]
Exit stack: [V12, 0x239]

================================

Block 0x239
[0x239:0x24a]
---
Predecessors: [0x45f, 0x4e4, 0x4e9, 0x4ef, 0x53d, 0x54f, 0x555]
Successors: []
---
0x239 JUMPDEST
0x23a PUSH1 0x40
0x23c MLOAD
0x23d SWAP1
0x23e DUP2
0x23f MSTORE
0x240 PUSH1 0x20
0x242 ADD
0x243 PUSH1 0x40
0x245 MLOAD
0x246 DUP1
0x247 SWAP2
0x248 SUB
0x249 SWAP1
0x24a RETURN
---
0x239: JUMPDEST 
0x23a: V197 = 0x40
0x23c: V198 = M[0x40]
0x23f: M[V198] = S0
0x240: V199 = 0x20
0x242: V200 = ADD 0x20 V198
0x243: V201 = 0x40
0x245: V202 = M[0x40]
0x248: V203 = SUB V200 V202
0x24a: RETURN V202 V203
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S2, S1]

================================

Block 0x24b
[0x24b:0x251]
---
Predecessors: [0x25]
Successors: [0x252, 0x256]
---
0x24b JUMPDEST
0x24c CALLVALUE
0x24d ISZERO
0x24e PUSH2 0x256
0x251 JUMPI
---
0x24b: JUMPDEST 
0x24c: V204 = CALLVALUE
0x24d: V205 = ISZERO V204
0x24e: V206 = 0x256
0x251: JUMPI 0x256 V205
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x252
[0x252:0x255]
---
Predecessors: [0x24b]
Successors: []
---
0x252 PUSH1 0x0
0x254 DUP1
0x255 REVERT
---
0x252: V207 = 0x0
0x255: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x256
[0x256:0x25d]
---
Predecessors: [0x24b]
Successors: [0x4ef]
---
0x256 JUMPDEST
0x257 PUSH2 0x239
0x25a PUSH2 0x4ef
0x25d JUMP
---
0x256: JUMPDEST 
0x257: V208 = 0x239
0x25a: V209 = 0x4ef
0x25d: JUMP 0x4ef
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x239]
Exit stack: [V12, 0x239]

================================

Block 0x25e
[0x25e:0x26f]
---
Predecessors: []
Successors: []
---
0x25e JUMPDEST
0x25f PUSH1 0x40
0x261 MLOAD
0x262 SWAP1
0x263 DUP2
0x264 MSTORE
0x265 PUSH1 0x20
0x267 ADD
0x268 PUSH1 0x40
0x26a MLOAD
0x26b DUP1
0x26c SWAP2
0x26d SUB
0x26e SWAP1
0x26f RETURN
---
0x25e: JUMPDEST 
0x25f: V210 = 0x40
0x261: V211 = M[0x40]
0x264: M[V211] = S0
0x265: V212 = 0x20
0x267: V213 = ADD 0x20 V211
0x268: V214 = 0x40
0x26a: V215 = M[0x40]
0x26d: V216 = SUB V213 V215
0x26f: RETURN V215 V216
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x270
[0x270:0x276]
---
Predecessors: [0x30]
Successors: [0x277, 0x27b]
---
0x270 JUMPDEST
0x271 CALLVALUE
0x272 ISZERO
0x273 PUSH2 0x27b
0x276 JUMPI
---
0x270: JUMPDEST 
0x271: V217 = CALLVALUE
0x272: V218 = ISZERO V217
0x273: V219 = 0x27b
0x276: JUMPI 0x27b V218
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x277
[0x277:0x27a]
---
Predecessors: [0x270]
Successors: []
---
0x277 PUSH1 0x0
0x279 DUP1
0x27a REVERT
---
0x277: V220 = 0x0
0x27a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27b
[0x27b:0x282]
---
Predecessors: [0x270]
Successors: [0x437]
---
0x27b JUMPDEST
0x27c PUSH2 0x283
0x27f PUSH2 0x437
0x282 JUMP
---
0x27b: JUMPDEST 
0x27c: V221 = 0x283
0x27f: V222 = 0x437
0x282: JUMP 0x437
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x283]
Exit stack: [V12, 0x283]

================================

Block 0x283
[0x283:0x296]
---
Predecessors: [0x45f]
Successors: []
---
0x283 JUMPDEST
0x284 PUSH1 0x40
0x286 MLOAD
0x287 SWAP1
0x288 ISZERO
0x289 ISZERO
0x28a DUP2
0x28b MSTORE
0x28c PUSH1 0x20
0x28e ADD
0x28f PUSH1 0x40
0x291 MLOAD
0x292 DUP1
0x293 SWAP2
0x294 SUB
0x295 SWAP1
0x296 RETURN
---
0x283: JUMPDEST 
0x284: V223 = 0x40
0x286: V224 = M[0x40]
0x288: V225 = ISZERO S0
0x289: V226 = ISZERO V225
0x28b: M[V224] = V226
0x28c: V227 = 0x20
0x28e: V228 = ADD 0x20 V224
0x28f: V229 = 0x40
0x291: V230 = M[0x40]
0x294: V231 = SUB V228 V230
0x296: RETURN V230 V231
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S2, S1]

================================

Block 0x297
[0x297:0x29d]
---
Predecessors: [0x3b]
Successors: [0x29e, 0x2a2]
---
0x297 JUMPDEST
0x298 CALLVALUE
0x299 ISZERO
0x29a PUSH2 0x2a2
0x29d JUMPI
---
0x297: JUMPDEST 
0x298: V232 = CALLVALUE
0x299: V233 = ISZERO V232
0x29a: V234 = 0x2a2
0x29d: JUMPI 0x2a2 V233
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29e
[0x29e:0x2a1]
---
Predecessors: [0x297]
Successors: []
---
0x29e PUSH1 0x0
0x2a0 DUP1
0x2a1 REVERT
---
0x29e: V235 = 0x0
0x2a1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a2
[0x2a2:0x2b5]
---
Predecessors: [0x297]
Successors: [0x4f5]
---
0x2a2 JUMPDEST
0x2a3 PUSH2 0x2b6
0x2a6 PUSH1 0x1
0x2a8 PUSH1 0xa0
0x2aa PUSH1 0x2
0x2ac EXP
0x2ad SUB
0x2ae PUSH1 0x4
0x2b0 CALLDATALOAD
0x2b1 AND
0x2b2 PUSH2 0x4f5
0x2b5 JUMP
---
0x2a2: JUMPDEST 
0x2a3: V236 = 0x2b6
0x2a6: V237 = 0x1
0x2a8: V238 = 0xa0
0x2aa: V239 = 0x2
0x2ac: V240 = EXP 0x2 0xa0
0x2ad: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ae: V242 = 0x4
0x2b0: V243 = CALLDATALOAD 0x4
0x2b1: V244 = AND V243 0xffffffffffffffffffffffffffffffffffffffff
0x2b2: V245 = 0x4f5
0x2b5: JUMP 0x4f5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2b6, V244]
Exit stack: [V12, 0x2b6, V244]

================================

Block 0x2b6
[0x2b6:0x2b7]
---
Predecessors: [0x53a, 0x596]
Successors: []
---
0x2b6 JUMPDEST
0x2b7 STOP
---
0x2b6: JUMPDEST 
0x2b7: STOP 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0x2b8
[0x2b8:0x2be]
---
Predecessors: [0x46]
Successors: [0x2bf, 0x2c3]
---
0x2b8 JUMPDEST
0x2b9 CALLVALUE
0x2ba ISZERO
0x2bb PUSH2 0x2c3
0x2be JUMPI
---
0x2b8: JUMPDEST 
0x2b9: V246 = CALLVALUE
0x2ba: V247 = ISZERO V246
0x2bb: V248 = 0x2c3
0x2be: JUMPI 0x2c3 V247
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bf
[0x2bf:0x2c2]
---
Predecessors: [0x2b8]
Successors: []
---
0x2bf PUSH1 0x0
0x2c1 DUP1
0x2c2 REVERT
---
0x2bf: V249 = 0x0
0x2c2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c3
[0x2c3:0x2d6]
---
Predecessors: [0x2b8]
Successors: [0x53d]
---
0x2c3 JUMPDEST
0x2c4 PUSH2 0x239
0x2c7 PUSH1 0x1
0x2c9 PUSH1 0xa0
0x2cb PUSH1 0x2
0x2cd EXP
0x2ce SUB
0x2cf PUSH1 0x4
0x2d1 CALLDATALOAD
0x2d2 AND
0x2d3 PUSH2 0x53d
0x2d6 JUMP
---
0x2c3: JUMPDEST 
0x2c4: V250 = 0x239
0x2c7: V251 = 0x1
0x2c9: V252 = 0xa0
0x2cb: V253 = 0x2
0x2cd: V254 = EXP 0x2 0xa0
0x2ce: V255 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cf: V256 = 0x4
0x2d1: V257 = CALLDATALOAD 0x4
0x2d2: V258 = AND V257 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V259 = 0x53d
0x2d6: JUMP 0x53d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x239, V258]
Exit stack: [V12, 0x239, V258]

================================

Block 0x2d7
[0x2d7:0x2e8]
---
Predecessors: []
Successors: []
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x40
0x2da MLOAD
0x2db SWAP1
0x2dc DUP2
0x2dd MSTORE
0x2de PUSH1 0x20
0x2e0 ADD
0x2e1 PUSH1 0x40
0x2e3 MLOAD
0x2e4 DUP1
0x2e5 SWAP2
0x2e6 SUB
0x2e7 SWAP1
0x2e8 RETURN
---
0x2d7: JUMPDEST 
0x2d8: V260 = 0x40
0x2da: V261 = M[0x40]
0x2dd: M[V261] = S0
0x2de: V262 = 0x20
0x2e0: V263 = ADD 0x20 V261
0x2e1: V264 = 0x40
0x2e3: V265 = M[0x40]
0x2e6: V266 = SUB V263 V265
0x2e8: RETURN V265 V266
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e9
[0x2e9:0x2ef]
---
Predecessors: [0x51]
Successors: [0x2f0, 0x2f4]
---
0x2e9 JUMPDEST
0x2ea CALLVALUE
0x2eb ISZERO
0x2ec PUSH2 0x2f4
0x2ef JUMPI
---
0x2e9: JUMPDEST 
0x2ea: V267 = CALLVALUE
0x2eb: V268 = ISZERO V267
0x2ec: V269 = 0x2f4
0x2ef: JUMPI 0x2f4 V268
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f0
[0x2f0:0x2f3]
---
Predecessors: [0x2e9]
Successors: []
---
0x2f0 PUSH1 0x0
0x2f2 DUP1
0x2f3 REVERT
---
0x2f0: V270 = 0x0
0x2f3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f4
[0x2f4:0x2fb]
---
Predecessors: [0x2e9]
Successors: [0x54f]
---
0x2f4 JUMPDEST
0x2f5 PUSH2 0x239
0x2f8 PUSH2 0x54f
0x2fb JUMP
---
0x2f4: JUMPDEST 
0x2f5: V271 = 0x239
0x2f8: V272 = 0x54f
0x2fb: JUMP 0x54f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x239]
Exit stack: [V12, 0x239]

================================

Block 0x2fc
[0x2fc:0x30d]
---
Predecessors: []
Successors: []
---
0x2fc JUMPDEST
0x2fd PUSH1 0x40
0x2ff MLOAD
0x300 SWAP1
0x301 DUP2
0x302 MSTORE
0x303 PUSH1 0x20
0x305 ADD
0x306 PUSH1 0x40
0x308 MLOAD
0x309 DUP1
0x30a SWAP2
0x30b SUB
0x30c SWAP1
0x30d RETURN
---
0x2fc: JUMPDEST 
0x2fd: V273 = 0x40
0x2ff: V274 = M[0x40]
0x302: M[V274] = S0
0x303: V275 = 0x20
0x305: V276 = ADD 0x20 V274
0x306: V277 = 0x40
0x308: V278 = M[0x40]
0x30b: V279 = SUB V276 V278
0x30d: RETURN V278 V279
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x30e
[0x30e:0x314]
---
Predecessors: [0x5c]
Successors: [0x315, 0x319]
---
0x30e JUMPDEST
0x30f CALLVALUE
0x310 ISZERO
0x311 PUSH2 0x319
0x314 JUMPI
---
0x30e: JUMPDEST 
0x30f: V280 = CALLVALUE
0x310: V281 = ISZERO V280
0x311: V282 = 0x319
0x314: JUMPI 0x319 V281
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x315
[0x315:0x318]
---
Predecessors: [0x30e]
Successors: []
---
0x315 PUSH1 0x0
0x317 DUP1
0x318 REVERT
---
0x315: V283 = 0x0
0x318: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x319
[0x319:0x320]
---
Predecessors: [0x30e]
Successors: [0x555]
---
0x319 JUMPDEST
0x31a PUSH2 0x239
0x31d PUSH2 0x555
0x320 JUMP
---
0x319: JUMPDEST 
0x31a: V284 = 0x239
0x31d: V285 = 0x555
0x320: JUMP 0x555
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x239]
Exit stack: [V12, 0x239]

================================

Block 0x321
[0x321:0x332]
---
Predecessors: []
Successors: []
---
0x321 JUMPDEST
0x322 PUSH1 0x40
0x324 MLOAD
0x325 SWAP1
0x326 DUP2
0x327 MSTORE
0x328 PUSH1 0x20
0x32a ADD
0x32b PUSH1 0x40
0x32d MLOAD
0x32e DUP1
0x32f SWAP2
0x330 SUB
0x331 SWAP1
0x332 RETURN
---
0x321: JUMPDEST 
0x322: V286 = 0x40
0x324: V287 = M[0x40]
0x327: M[V287] = S0
0x328: V288 = 0x20
0x32a: V289 = ADD 0x20 V287
0x32b: V290 = 0x40
0x32d: V291 = M[0x40]
0x330: V292 = SUB V289 V291
0x332: RETURN V291 V292
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x333
[0x333:0x339]
---
Predecessors: [0x67]
Successors: [0x33a, 0x33e]
---
0x333 JUMPDEST
0x334 CALLVALUE
0x335 ISZERO
0x336 PUSH2 0x33e
0x339 JUMPI
---
0x333: JUMPDEST 
0x334: V293 = CALLVALUE
0x335: V294 = ISZERO V293
0x336: V295 = 0x33e
0x339: JUMPI 0x33e V294
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33a
[0x33a:0x33d]
---
Predecessors: [0x333]
Successors: []
---
0x33a PUSH1 0x0
0x33c DUP1
0x33d REVERT
---
0x33a: V296 = 0x0
0x33d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33e
[0x33e:0x345]
---
Predecessors: [0x333]
Successors: [0x55b]
---
0x33e JUMPDEST
0x33f PUSH2 0x2b6
0x342 PUSH2 0x55b
0x345 JUMP
---
0x33e: JUMPDEST 
0x33f: V297 = 0x2b6
0x342: V298 = 0x55b
0x345: JUMP 0x55b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2b6]
Exit stack: [V12, 0x2b6]

================================

Block 0x346
[0x346:0x347]
---
Predecessors: []
Successors: []
---
0x346 JUMPDEST
0x347 STOP
---
0x346: JUMPDEST 
0x347: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x348
[0x348:0x34e]
---
Predecessors: [0x72]
Successors: [0x34f, 0x353]
---
0x348 JUMPDEST
0x349 CALLVALUE
0x34a ISZERO
0x34b PUSH2 0x353
0x34e JUMPI
---
0x348: JUMPDEST 
0x349: V299 = CALLVALUE
0x34a: V300 = ISZERO V299
0x34b: V301 = 0x353
0x34e: JUMPI 0x353 V300
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x34f
[0x34f:0x352]
---
Predecessors: [0x348]
Successors: []
---
0x34f PUSH1 0x0
0x351 DUP1
0x352 REVERT
---
0x34f: V302 = 0x0
0x352: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x353
[0x353:0x35a]
---
Predecessors: [0x348]
Successors: [0x598]
---
0x353 JUMPDEST
0x354 PUSH2 0x239
0x357 PUSH2 0x598
0x35a JUMP
---
0x353: JUMPDEST 
0x354: V303 = 0x239
0x357: V304 = 0x598
0x35a: JUMP 0x598
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x239]
Exit stack: [V12, 0x239]

================================

Block 0x35b
[0x35b:0x36c]
---
Predecessors: []
Successors: []
---
0x35b JUMPDEST
0x35c PUSH1 0x40
0x35e MLOAD
0x35f SWAP1
0x360 DUP2
0x361 MSTORE
0x362 PUSH1 0x20
0x364 ADD
0x365 PUSH1 0x40
0x367 MLOAD
0x368 DUP1
0x369 SWAP2
0x36a SUB
0x36b SWAP1
0x36c RETURN
---
0x35b: JUMPDEST 
0x35c: V305 = 0x40
0x35e: V306 = M[0x40]
0x361: M[V306] = S0
0x362: V307 = 0x20
0x364: V308 = ADD 0x20 V306
0x365: V309 = 0x40
0x367: V310 = M[0x40]
0x36a: V311 = SUB V308 V310
0x36c: RETURN V310 V311
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x36d
[0x36d:0x373]
---
Predecessors: [0x7d]
Successors: [0x374, 0x378]
---
0x36d JUMPDEST
0x36e CALLVALUE
0x36f ISZERO
0x370 PUSH2 0x378
0x373 JUMPI
---
0x36d: JUMPDEST 
0x36e: V312 = CALLVALUE
0x36f: V313 = ISZERO V312
0x370: V314 = 0x378
0x373: JUMPI 0x378 V313
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x374
[0x374:0x377]
---
Predecessors: [0x36d]
Successors: []
---
0x374 PUSH1 0x0
0x376 DUP1
0x377 REVERT
---
0x374: V315 = 0x0
0x377: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x378
[0x378:0x382]
---
Predecessors: [0x36d]
Successors: [0x462]
---
0x378 JUMPDEST
0x379 PUSH2 0x239
0x37c PUSH1 0x4
0x37e CALLDATALOAD
0x37f PUSH2 0x462
0x382 JUMP
---
0x378: JUMPDEST 
0x379: V316 = 0x239
0x37c: V317 = 0x4
0x37e: V318 = CALLDATALOAD 0x4
0x37f: V319 = 0x462
0x382: JUMP 0x462
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x239, V318]
Exit stack: [V12, 0x239, V318]

================================

Block 0x383
[0x383:0x394]
---
Predecessors: []
Successors: []
---
0x383 JUMPDEST
0x384 PUSH1 0x40
0x386 MLOAD
0x387 SWAP1
0x388 DUP2
0x389 MSTORE
0x38a PUSH1 0x20
0x38c ADD
0x38d PUSH1 0x40
0x38f MLOAD
0x390 DUP1
0x391 SWAP2
0x392 SUB
0x393 SWAP1
0x394 RETURN
---
0x383: JUMPDEST 
0x384: V320 = 0x40
0x386: V321 = M[0x40]
0x389: M[V321] = S0
0x38a: V322 = 0x20
0x38c: V323 = ADD 0x20 V321
0x38d: V324 = 0x40
0x38f: V325 = M[0x40]
0x392: V326 = SUB V323 V325
0x394: RETURN V325 V326
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x395
[0x395:0x39b]
---
Predecessors: [0x88]
Successors: [0x39c, 0x3a0]
---
0x395 JUMPDEST
0x396 CALLVALUE
0x397 ISZERO
0x398 PUSH2 0x3a0
0x39b JUMPI
---
0x395: JUMPDEST 
0x396: V327 = CALLVALUE
0x397: V328 = ISZERO V327
0x398: V329 = 0x3a0
0x39b: JUMPI 0x3a0 V328
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39c
[0x39c:0x39f]
---
Predecessors: [0x395]
Successors: []
---
0x39c PUSH1 0x0
0x39e DUP1
0x39f REVERT
---
0x39c: V330 = 0x0
0x39f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a0
[0x3a0:0x3a7]
---
Predecessors: [0x395]
Successors: [0x5a9]
---
0x3a0 JUMPDEST
0x3a1 PUSH2 0x2b6
0x3a4 PUSH2 0x5a9
0x3a7 JUMP
---
0x3a0: JUMPDEST 
0x3a1: V331 = 0x2b6
0x3a4: V332 = 0x5a9
0x3a7: JUMP 0x5a9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2b6]
Exit stack: [V12, 0x2b6]

================================

Block 0x3a8
[0x3a8:0x3a9]
---
Predecessors: []
Successors: []
---
0x3a8 JUMPDEST
0x3a9 STOP
---
0x3a8: JUMPDEST 
0x3a9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3aa
[0x3aa:0x3b0]
---
Predecessors: [0x93]
Successors: [0x3b1, 0x3b5]
---
0x3aa JUMPDEST
0x3ab CALLVALUE
0x3ac ISZERO
0x3ad PUSH2 0x3b5
0x3b0 JUMPI
---
0x3aa: JUMPDEST 
0x3ab: V333 = CALLVALUE
0x3ac: V334 = ISZERO V333
0x3ad: V335 = 0x3b5
0x3b0: JUMPI 0x3b5 V334
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b1
[0x3b1:0x3b4]
---
Predecessors: [0x3aa]
Successors: []
---
0x3b1 PUSH1 0x0
0x3b3 DUP1
0x3b4 REVERT
---
0x3b1: V336 = 0x0
0x3b4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b5
[0x3b5:0x3bc]
---
Predecessors: [0x3aa]
Successors: [0x696]
---
0x3b5 JUMPDEST
0x3b6 PUSH2 0x3bd
0x3b9 PUSH2 0x696
0x3bc JUMP
---
0x3b5: JUMPDEST 
0x3b6: V337 = 0x3bd
0x3b9: V338 = 0x696
0x3bc: JUMP 0x696
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3bd]
Exit stack: [V12, 0x3bd]

================================

Block 0x3bd
[0x3bd:0x3d8]
---
Predecessors: [0x696, 0x6a5, 0x6b4]
Successors: []
---
0x3bd JUMPDEST
0x3be PUSH1 0x40
0x3c0 MLOAD
0x3c1 PUSH1 0x1
0x3c3 PUSH1 0xa0
0x3c5 PUSH1 0x2
0x3c7 EXP
0x3c8 SUB
0x3c9 SWAP1
0x3ca SWAP2
0x3cb AND
0x3cc DUP2
0x3cd MSTORE
0x3ce PUSH1 0x20
0x3d0 ADD
0x3d1 PUSH1 0x40
0x3d3 MLOAD
0x3d4 DUP1
0x3d5 SWAP2
0x3d6 SUB
0x3d7 SWAP1
0x3d8 RETURN
---
0x3bd: JUMPDEST 
0x3be: V339 = 0x40
0x3c0: V340 = M[0x40]
0x3c1: V341 = 0x1
0x3c3: V342 = 0xa0
0x3c5: V343 = 0x2
0x3c7: V344 = EXP 0x2 0xa0
0x3c8: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cb: V346 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3cd: M[V340] = V346
0x3ce: V347 = 0x20
0x3d0: V348 = ADD 0x20 V340
0x3d1: V349 = 0x40
0x3d3: V350 = M[0x40]
0x3d6: V351 = SUB V348 V350
0x3d8: RETURN V350 V351
---
Entry stack: [V12, 0x3bd, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x3bd]

================================

Block 0x3d9
[0x3d9:0x3df]
---
Predecessors: [0x9e]
Successors: [0x3e0, 0x3e4]
---
0x3d9 JUMPDEST
0x3da CALLVALUE
0x3db ISZERO
0x3dc PUSH2 0x3e4
0x3df JUMPI
---
0x3d9: JUMPDEST 
0x3da: V352 = CALLVALUE
0x3db: V353 = ISZERO V352
0x3dc: V354 = 0x3e4
0x3df: JUMPI 0x3e4 V353
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e0
[0x3e0:0x3e3]
---
Predecessors: [0x3d9]
Successors: []
---
0x3e0 PUSH1 0x0
0x3e2 DUP1
0x3e3 REVERT
---
0x3e0: V355 = 0x0
0x3e3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e4
[0x3e4:0x3eb]
---
Predecessors: [0x3d9]
Successors: [0x6a5]
---
0x3e4 JUMPDEST
0x3e5 PUSH2 0x3bd
0x3e8 PUSH2 0x6a5
0x3eb JUMP
---
0x3e4: JUMPDEST 
0x3e5: V356 = 0x3bd
0x3e8: V357 = 0x6a5
0x3eb: JUMP 0x6a5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3bd]
Exit stack: [V12, 0x3bd]

================================

Block 0x3ec
[0x3ec:0x407]
---
Predecessors: []
Successors: []
---
0x3ec JUMPDEST
0x3ed PUSH1 0x40
0x3ef MLOAD
0x3f0 PUSH1 0x1
0x3f2 PUSH1 0xa0
0x3f4 PUSH1 0x2
0x3f6 EXP
0x3f7 SUB
0x3f8 SWAP1
0x3f9 SWAP2
0x3fa AND
0x3fb DUP2
0x3fc MSTORE
0x3fd PUSH1 0x20
0x3ff ADD
0x400 PUSH1 0x40
0x402 MLOAD
0x403 DUP1
0x404 SWAP2
0x405 SUB
0x406 SWAP1
0x407 RETURN
---
0x3ec: JUMPDEST 
0x3ed: V358 = 0x40
0x3ef: V359 = M[0x40]
0x3f0: V360 = 0x1
0x3f2: V361 = 0xa0
0x3f4: V362 = 0x2
0x3f6: V363 = EXP 0x2 0xa0
0x3f7: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fa: V365 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3fc: M[V359] = V365
0x3fd: V366 = 0x20
0x3ff: V367 = ADD 0x20 V359
0x400: V368 = 0x40
0x402: V369 = M[0x40]
0x405: V370 = SUB V367 V369
0x407: RETURN V369 V370
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x408
[0x408:0x40e]
---
Predecessors: [0xa9]
Successors: [0x40f, 0x413]
---
0x408 JUMPDEST
0x409 CALLVALUE
0x40a ISZERO
0x40b PUSH2 0x413
0x40e JUMPI
---
0x408: JUMPDEST 
0x409: V371 = CALLVALUE
0x40a: V372 = ISZERO V371
0x40b: V373 = 0x413
0x40e: JUMPI 0x413 V372
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x40f
[0x40f:0x412]
---
Predecessors: [0x408]
Successors: []
---
0x40f PUSH1 0x0
0x411 DUP1
0x412 REVERT
---
0x40f: V374 = 0x0
0x412: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x413
[0x413:0x41a]
---
Predecessors: [0x408]
Successors: [0x6b4]
---
0x413 JUMPDEST
0x414 PUSH2 0x3bd
0x417 PUSH2 0x6b4
0x41a JUMP
---
0x413: JUMPDEST 
0x414: V375 = 0x3bd
0x417: V376 = 0x6b4
0x41a: JUMP 0x6b4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3bd]
Exit stack: [V12, 0x3bd]

================================

Block 0x41b
[0x41b:0x436]
---
Predecessors: []
Successors: []
---
0x41b JUMPDEST
0x41c PUSH1 0x40
0x41e MLOAD
0x41f PUSH1 0x1
0x421 PUSH1 0xa0
0x423 PUSH1 0x2
0x425 EXP
0x426 SUB
0x427 SWAP1
0x428 SWAP2
0x429 AND
0x42a DUP2
0x42b MSTORE
0x42c PUSH1 0x20
0x42e ADD
0x42f PUSH1 0x40
0x431 MLOAD
0x432 DUP1
0x433 SWAP2
0x434 SUB
0x435 SWAP1
0x436 RETURN
---
0x41b: JUMPDEST 
0x41c: V377 = 0x40
0x41e: V378 = M[0x40]
0x41f: V379 = 0x1
0x421: V380 = 0xa0
0x423: V381 = 0x2
0x425: V382 = EXP 0x2 0xa0
0x426: V383 = SUB 0x10000000000000000000000000000000000000000 0x1
0x429: V384 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x42b: M[V378] = V384
0x42c: V385 = 0x20
0x42e: V386 = ADD 0x20 V378
0x42f: V387 = 0x40
0x431: V388 = M[0x40]
0x434: V389 = SUB V386 V388
0x436: RETURN V388 V389
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x437
[0x437:0x445]
---
Predecessors: [0xb5, 0x27b, 0x5c4]
Successors: [0x446, 0x44d]
---
0x437 JUMPDEST
0x438 PUSH1 0x0
0x43a PUSH1 0x1
0x43c SLOAD
0x43d TIMESTAMP
0x43e LT
0x43f ISZERO
0x440 DUP1
0x441 ISZERO
0x442 PUSH2 0x44d
0x445 JUMPI
---
0x437: JUMPDEST 
0x438: V390 = 0x0
0x43a: V391 = 0x1
0x43c: V392 = S[0x1]
0x43d: V393 = TIMESTAMP
0x43e: V394 = LT V393 V392
0x43f: V395 = ISZERO V394
0x441: V396 = ISZERO V395
0x442: V397 = 0x44d
0x445: JUMPI 0x44d V396
---
Entry stack: [V12, S2, S1, {0xc0, 0x283, 0x5cc}]
Stack pops: 0
Stack additions: [0x0, V395]
Exit stack: [V12, S2, S1, {0xc0, 0x283, 0x5cc}, 0x0, V395]

================================

Block 0x446
[0x446:0x44c]
---
Predecessors: [0x437]
Successors: [0x44d]
---
0x446 POP
0x447 PUSH1 0x2
0x449 SLOAD
0x44a TIMESTAMP
0x44b GT
0x44c ISZERO
---
0x447: V398 = 0x2
0x449: V399 = S[0x2]
0x44a: V400 = TIMESTAMP
0x44b: V401 = GT V400 V399
0x44c: V402 = ISZERO V401
---
Entry stack: [V12, S4, S3, {0xc0, 0x283, 0x5cc}, 0x0, V395]
Stack pops: 1
Stack additions: [V402]
Exit stack: [V12, S4, S3, {0xc0, 0x283, 0x5cc}, 0x0, V402]

================================

Block 0x44d
[0x44d:0x453]
---
Predecessors: [0x437, 0x446]
Successors: [0x454, 0x45c]
---
0x44d JUMPDEST
0x44e DUP1
0x44f ISZERO
0x450 PUSH2 0x45c
0x453 JUMPI
---
0x44d: JUMPDEST 
0x44f: V403 = ISZERO S0
0x450: V404 = 0x45c
0x453: JUMPI 0x45c V403
---
Entry stack: [V12, S4, S3, {0xc0, 0x283, 0x5cc}, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S4, S3, {0xc0, 0x283, 0x5cc}, 0x0, S0]

================================

Block 0x454
[0x454:0x45b]
---
Predecessors: [0x44d]
Successors: [0x45c]
---
0x454 POP
0x455 PUSH1 0x3
0x457 SLOAD
0x458 PUSH1 0x4
0x45a SLOAD
0x45b LT
---
0x455: V405 = 0x3
0x457: V406 = S[0x3]
0x458: V407 = 0x4
0x45a: V408 = S[0x4]
0x45b: V409 = LT V408 V406
---
Entry stack: [V12, S4, S3, {0xc0, 0x283, 0x5cc}, 0x0, S0]
Stack pops: 1
Stack additions: [V409]
Exit stack: [V12, S4, S3, {0xc0, 0x283, 0x5cc}, 0x0, V409]

================================

Block 0x45c
[0x45c:0x45e]
---
Predecessors: [0x44d, 0x454, 0x4e4]
Successors: [0x45f]
---
0x45c JUMPDEST
0x45d SWAP1
0x45e POP
---
0x45c: JUMPDEST 
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S4, S3, S2, S0]

================================

Block 0x45f
[0x45f:0x461]
---
Predecessors: [0x45c]
Successors: [0xc0, 0x239, 0x283, 0x5cc]
---
0x45f JUMPDEST
0x460 SWAP1
0x461 JUMP
---
0x45f: JUMPDEST 
0x461: JUMP S1
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S3, S2, S0]

================================

Block 0x462
[0x462:0x46e]
---
Predecessors: [0xdb, 0x378, 0x598]
Successors: [0x46f, 0x476]
---
0x462 JUMPDEST
0x463 PUSH1 0x0
0x465 PUSH1 0x1
0x467 SLOAD
0x468 DUP3
0x469 LT
0x46a ISZERO
0x46b PUSH2 0x476
0x46e JUMPI
---
0x462: JUMPDEST 
0x463: V410 = 0x0
0x465: V411 = 0x1
0x467: V412 = S[0x1]
0x469: V413 = LT S0 V412
0x46a: V414 = ISZERO V413
0x46b: V415 = 0x476
0x46e: JUMPI 0x476 V414
---
Entry stack: [V12, S3, S2, {0x10f, 0x239, 0x45c}, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V12, S3, S2, {0x10f, 0x239, 0x45c}, S0, 0x0]

================================

Block 0x46f
[0x46f:0x475]
---
Predecessors: [0x462]
Successors: [0x4de]
---
0x46f POP
0x470 PUSH1 0x0
0x472 PUSH2 0x4de
0x475 JUMP
---
0x470: V416 = 0x0
0x472: V417 = 0x4de
0x475: JUMP 0x4de
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]

================================

Block 0x476
[0x476:0x485]
---
Predecessors: [0x462]
Successors: [0x486, 0x48e]
---
0x476 JUMPDEST
0x477 PUSH1 0x1
0x479 SLOAD
0x47a PUSH3 0x83d60
0x47e ADD
0x47f DUP3
0x480 LT
0x481 ISZERO
0x482 PUSH2 0x48e
0x485 JUMPI
---
0x476: JUMPDEST 
0x477: V418 = 0x1
0x479: V419 = S[0x1]
0x47a: V420 = 0x83d60
0x47e: V421 = ADD 0x83d60 V419
0x480: V422 = LT S1 V421
0x481: V423 = ISZERO V422
0x482: V424 = 0x48e
0x485: JUMPI 0x48e V423
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]

================================

Block 0x486
[0x486:0x48d]
---
Predecessors: [0x476]
Successors: [0x4de]
---
0x486 POP
0x487 PUSH2 0x1103
0x48a PUSH2 0x4de
0x48d JUMP
---
0x487: V425 = 0x1103
0x48a: V426 = 0x4de
0x48d: JUMP 0x4de
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]
Stack pops: 1
Stack additions: [0x1103]
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x1103]

================================

Block 0x48e
[0x48e:0x49d]
---
Predecessors: [0x476]
Successors: [0x49e, 0x4a6]
---
0x48e JUMPDEST
0x48f PUSH1 0x1
0x491 SLOAD
0x492 PUSH3 0x1177e0
0x496 ADD
0x497 DUP3
0x498 LT
0x499 ISZERO
0x49a PUSH2 0x4a6
0x49d JUMPI
---
0x48e: JUMPDEST 
0x48f: V427 = 0x1
0x491: V428 = S[0x1]
0x492: V429 = 0x1177e0
0x496: V430 = ADD 0x1177e0 V428
0x498: V431 = LT S1 V430
0x499: V432 = ISZERO V431
0x49a: V433 = 0x4a6
0x49d: JUMPI 0x4a6 V432
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]

================================

Block 0x49e
[0x49e:0x4a5]
---
Predecessors: [0x48e]
Successors: [0x4de]
---
0x49e POP
0x49f PUSH2 0xf50
0x4a2 PUSH2 0x4de
0x4a5 JUMP
---
0x49f: V434 = 0xf50
0x4a2: V435 = 0x4de
0x4a5: JUMP 0x4de
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]
Stack pops: 1
Stack additions: [0xf50]
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0xf50]

================================

Block 0x4a6
[0x4a6:0x4b5]
---
Predecessors: [0x48e]
Successors: [0x4b6, 0x4be]
---
0x4a6 JUMPDEST
0x4a7 PUSH1 0x1
0x4a9 SLOAD
0x4aa PUSH3 0x1ab260
0x4ae ADD
0x4af DUP3
0x4b0 LT
0x4b1 ISZERO
0x4b2 PUSH2 0x4be
0x4b5 JUMPI
---
0x4a6: JUMPDEST 
0x4a7: V436 = 0x1
0x4a9: V437 = S[0x1]
0x4aa: V438 = 0x1ab260
0x4ae: V439 = ADD 0x1ab260 V437
0x4b0: V440 = LT S1 V439
0x4b1: V441 = ISZERO V440
0x4b2: V442 = 0x4be
0x4b5: JUMPI 0x4be V441
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]

================================

Block 0x4b6
[0x4b6:0x4bd]
---
Predecessors: [0x4a6]
Successors: [0x4de]
---
0x4b6 POP
0x4b7 PUSH2 0xdc8
0x4ba PUSH2 0x4de
0x4bd JUMP
---
0x4b7: V443 = 0xdc8
0x4ba: V444 = 0x4de
0x4bd: JUMP 0x4de
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]
Stack pops: 1
Stack additions: [0xdc8]
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0xdc8]

================================

Block 0x4be
[0x4be:0x4c7]
---
Predecessors: [0x4a6]
Successors: [0x4c8, 0x4d0]
---
0x4be JUMPDEST
0x4bf PUSH1 0x2
0x4c1 SLOAD
0x4c2 DUP3
0x4c3 GT
0x4c4 PUSH2 0x4d0
0x4c7 JUMPI
---
0x4be: JUMPDEST 
0x4bf: V445 = 0x2
0x4c1: V446 = S[0x2]
0x4c3: V447 = GT S1 V446
0x4c4: V448 = 0x4d0
0x4c7: JUMPI 0x4d0 V447
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]

================================

Block 0x4c8
[0x4c8:0x4cf]
---
Predecessors: [0x4be]
Successors: [0x4de]
---
0x4c8 POP
0x4c9 PUSH2 0xc68
0x4cc PUSH2 0x4de
0x4cf JUMP
---
0x4c9: V449 = 0xc68
0x4cc: V450 = 0x4de
0x4cf: JUMP 0x4de
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]
Stack pops: 1
Stack additions: [0xc68]
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0xc68]

================================

Block 0x4d0
[0x4d0:0x4da]
---
Predecessors: [0x4be]
Successors: [0x4db, 0x4de]
---
0x4d0 JUMPDEST
0x4d1 PUSH1 0x2
0x4d3 SLOAD
0x4d4 DUP3
0x4d5 GT
0x4d6 ISZERO
0x4d7 PUSH2 0x4de
0x4da JUMPI
---
0x4d0: JUMPDEST 
0x4d1: V451 = 0x2
0x4d3: V452 = S[0x2]
0x4d5: V453 = GT S1 V452
0x4d6: V454 = ISZERO V453
0x4d7: V455 = 0x4de
0x4da: JUMPI 0x4de V454
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]

================================

Block 0x4db
[0x4db:0x4dd]
---
Predecessors: [0x4d0]
Successors: [0x4de]
---
0x4db POP
0x4dc PUSH1 0x0
---
0x4dc: V456 = 0x0
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, 0x0]

================================

Block 0x4de
[0x4de:0x4de]
---
Predecessors: [0x46f, 0x486, 0x49e, 0x4b6, 0x4c8, 0x4d0, 0x4db]
Successors: [0x4df]
---
0x4de JUMPDEST
---
0x4de: JUMPDEST 
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}]

================================

Block 0x4df
[0x4df:0x4df]
---
Predecessors: [0x4de]
Successors: [0x4e0]
---
0x4df JUMPDEST
---
0x4df: JUMPDEST 
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}]

================================

Block 0x4e0
[0x4e0:0x4e0]
---
Predecessors: [0x4df]
Successors: [0x4e1]
---
0x4e0 JUMPDEST
---
0x4e0: JUMPDEST 
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}]

================================

Block 0x4e1
[0x4e1:0x4e1]
---
Predecessors: [0x4e0]
Successors: [0x4e2]
---
0x4e1 JUMPDEST
---
0x4e1: JUMPDEST 
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}]

================================

Block 0x4e2
[0x4e2:0x4e2]
---
Predecessors: [0x4e1]
Successors: [0x4e3]
---
0x4e2 JUMPDEST
---
0x4e2: JUMPDEST 
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}]

================================

Block 0x4e3
[0x4e3:0x4e3]
---
Predecessors: [0x4e2]
Successors: [0x4e4]
---
0x4e3 JUMPDEST
---
0x4e3: JUMPDEST 
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}]

================================

Block 0x4e4
[0x4e4:0x4e8]
---
Predecessors: [0x4e3]
Successors: [0x10f, 0x239, 0x45c]
---
0x4e4 JUMPDEST
0x4e5 SWAP2
0x4e6 SWAP1
0x4e7 POP
0x4e8 JUMP
---
0x4e4: JUMPDEST 
0x4e8: JUMP {0x10f, 0x239, 0x45c}
---
Entry stack: [V12, S4, S3, {0x10f, 0x239, 0x45c}, S1, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S4, S3, {0x0, 0xc68, 0xdc8, 0xf50, 0x1103}]

================================

Block 0x4e9
[0x4e9:0x4ee]
---
Predecessors: [0x231]
Successors: [0x239]
---
0x4e9 JUMPDEST
0x4ea PUSH1 0x2
0x4ec SLOAD
0x4ed DUP2
0x4ee JUMP
---
0x4e9: JUMPDEST 
0x4ea: V457 = 0x2
0x4ec: V458 = S[0x2]
0x4ee: JUMP 0x239
---
Entry stack: [V12, 0x239]
Stack pops: 1
Stack additions: [S0, V458]
Exit stack: [V12, 0x239, V458]

================================

Block 0x4ef
[0x4ef:0x4f4]
---
Predecessors: [0x256]
Successors: [0x239]
---
0x4ef JUMPDEST
0x4f0 PUSH1 0x1
0x4f2 SLOAD
0x4f3 DUP2
0x4f4 JUMP
---
0x4ef: JUMPDEST 
0x4f0: V459 = 0x1
0x4f2: V460 = S[0x1]
0x4f4: JUMP 0x239
---
Entry stack: [V12, 0x239]
Stack pops: 1
Stack additions: [S0, V460]
Exit stack: [V12, 0x239, V460]

================================

Block 0x4f5
[0x4f5:0x50b]
---
Predecessors: [0x2a2]
Successors: [0x50c, 0x510]
---
0x4f5 JUMPDEST
0x4f6 PUSH1 0x0
0x4f8 SLOAD
0x4f9 CALLER
0x4fa PUSH1 0x1
0x4fc PUSH1 0xa0
0x4fe PUSH1 0x2
0x500 EXP
0x501 SUB
0x502 SWAP1
0x503 DUP2
0x504 AND
0x505 SWAP2
0x506 AND
0x507 EQ
0x508 PUSH2 0x510
0x50b JUMPI
---
0x4f5: JUMPDEST 
0x4f6: V461 = 0x0
0x4f8: V462 = S[0x0]
0x4f9: V463 = CALLER
0x4fa: V464 = 0x1
0x4fc: V465 = 0xa0
0x4fe: V466 = 0x2
0x500: V467 = EXP 0x2 0xa0
0x501: V468 = SUB 0x10000000000000000000000000000000000000000 0x1
0x504: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V463
0x506: V470 = AND V462 0xffffffffffffffffffffffffffffffffffffffff
0x507: V471 = EQ V470 V469
0x508: V472 = 0x510
0x50b: JUMPI 0x510 V471
---
Entry stack: [V12, 0x2b6, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2b6, V244]

================================

Block 0x50c
[0x50c:0x50f]
---
Predecessors: [0x4f5]
Successors: []
---
0x50c PUSH1 0x0
0x50e DUP1
0x50f REVERT
---
0x50c: V473 = 0x0
0x50f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2b6, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2b6, V244]

================================

Block 0x510
[0x510:0x538]
---
Predecessors: [0x4f5]
Successors: [0x539]
---
0x510 JUMPDEST
0x511 PUSH1 0x0
0x513 DUP1
0x514 SLOAD
0x515 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52a NOT
0x52b AND
0x52c PUSH1 0x1
0x52e PUSH1 0xa0
0x530 PUSH1 0x2
0x532 EXP
0x533 SUB
0x534 DUP4
0x535 AND
0x536 OR
0x537 SWAP1
0x538 SSTORE
---
0x510: JUMPDEST 
0x511: V474 = 0x0
0x514: V475 = S[0x0]
0x515: V476 = 0xffffffffffffffffffffffffffffffffffffffff
0x52a: V477 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x52b: V478 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V475
0x52c: V479 = 0x1
0x52e: V480 = 0xa0
0x530: V481 = 0x2
0x532: V482 = EXP 0x2 0xa0
0x533: V483 = SUB 0x10000000000000000000000000000000000000000 0x1
0x535: V484 = AND V244 0xffffffffffffffffffffffffffffffffffffffff
0x536: V485 = OR V484 V478
0x538: S[0x0] = V485
---
Entry stack: [V12, 0x2b6, V244]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2b6, V244]

================================

Block 0x539
[0x539:0x539]
---
Predecessors: [0x510]
Successors: [0x53a]
---
0x539 JUMPDEST
---
0x539: JUMPDEST 
---
Entry stack: [V12, 0x2b6, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2b6, V244]

================================

Block 0x53a
[0x53a:0x53c]
---
Predecessors: [0x539]
Successors: [0x2b6]
---
0x53a JUMPDEST
0x53b POP
0x53c JUMP
---
0x53a: JUMPDEST 
0x53c: JUMP 0x2b6
---
Entry stack: [V12, 0x2b6, V244]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x53d
[0x53d:0x54e]
---
Predecessors: [0x2c3]
Successors: [0x239]
---
0x53d JUMPDEST
0x53e PUSH1 0x7
0x540 PUSH1 0x20
0x542 MSTORE
0x543 PUSH1 0x0
0x545 SWAP1
0x546 DUP2
0x547 MSTORE
0x548 PUSH1 0x40
0x54a SWAP1
0x54b SHA3
0x54c SLOAD
0x54d DUP2
0x54e JUMP
---
0x53d: JUMPDEST 
0x53e: V486 = 0x7
0x540: V487 = 0x20
0x542: M[0x20] = 0x7
0x543: V488 = 0x0
0x547: M[0x0] = V258
0x548: V489 = 0x40
0x54b: V490 = SHA3 0x0 0x40
0x54c: V491 = S[V490]
0x54e: JUMP 0x239
---
Entry stack: [V12, 0x239, V258]
Stack pops: 2
Stack additions: [S1, V491]
Exit stack: [V12, 0x239, V491]

================================

Block 0x54f
[0x54f:0x554]
---
Predecessors: [0x2f4]
Successors: [0x239]
---
0x54f JUMPDEST
0x550 PUSH1 0x3
0x552 SLOAD
0x553 DUP2
0x554 JUMP
---
0x54f: JUMPDEST 
0x550: V492 = 0x3
0x552: V493 = S[0x3]
0x554: JUMP 0x239
---
Entry stack: [V12, 0x239]
Stack pops: 1
Stack additions: [S0, V493]
Exit stack: [V12, 0x239, V493]

================================

Block 0x555
[0x555:0x55a]
---
Predecessors: [0x319]
Successors: [0x239]
---
0x555 JUMPDEST
0x556 PUSH1 0x4
0x558 SLOAD
0x559 DUP2
0x55a JUMP
---
0x555: JUMPDEST 
0x556: V494 = 0x4
0x558: V495 = S[0x4]
0x55a: JUMP 0x239
---
Entry stack: [V12, 0x239]
Stack pops: 1
Stack additions: [S0, V495]
Exit stack: [V12, 0x239, V495]

================================

Block 0x55b
[0x55b:0x572]
---
Predecessors: [0x33e]
Successors: [0x573, 0x595]
---
0x55b JUMPDEST
0x55c PUSH1 0x6
0x55e SLOAD
0x55f CALLER
0x560 PUSH1 0x1
0x562 PUSH1 0xa0
0x564 PUSH1 0x2
0x566 EXP
0x567 SUB
0x568 SWAP1
0x569 DUP2
0x56a AND
0x56b SWAP2
0x56c AND
0x56d EQ
0x56e ISZERO
0x56f PUSH2 0x595
0x572 JUMPI
---
0x55b: JUMPDEST 
0x55c: V496 = 0x6
0x55e: V497 = S[0x6]
0x55f: V498 = CALLER
0x560: V499 = 0x1
0x562: V500 = 0xa0
0x564: V501 = 0x2
0x566: V502 = EXP 0x2 0xa0
0x567: V503 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56a: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x56c: V505 = AND V497 0xffffffffffffffffffffffffffffffffffffffff
0x56d: V506 = EQ V505 V504
0x56e: V507 = ISZERO V506
0x56f: V508 = 0x595
0x572: JUMPI 0x595 V507
---
Entry stack: [V12, 0x2b6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2b6]

================================

Block 0x573
[0x573:0x57f]
---
Predecessors: [0x55b]
Successors: []
---
0x573 PUSH1 0x6
0x575 SLOAD
0x576 PUSH1 0x1
0x578 PUSH1 0xa0
0x57a PUSH1 0x2
0x57c EXP
0x57d SUB
0x57e AND
0x57f SELFDESTRUCT
---
0x573: V509 = 0x6
0x575: V510 = S[0x6]
0x576: V511 = 0x1
0x578: V512 = 0xa0
0x57a: V513 = 0x2
0x57c: V514 = EXP 0x2 0xa0
0x57d: V515 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57e: V516 = AND 0xffffffffffffffffffffffffffffffffffffffff V510
0x57f: SELFDESTRUCT V516
---
Entry stack: [V12, 0x2b6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2b6]

================================

Block 0x580
[0x580:0x58c]
---
Predecessors: [0x61d]
Successors: [0x58d, 0x591]
---
0x580 JUMPDEST
0x581 PUSH2 0x2c6
0x584 GAS
0x585 SUB
0x586 CALL
0x587 ISZERO
0x588 ISZERO
0x589 PUSH2 0x591
0x58c JUMPI
---
0x580: JUMPDEST 
0x581: V517 = 0x2c6
0x584: V518 = GAS
0x585: V519 = SUB V518 0x2c6
0x586: V520 = CALL V519 V587 0x0 V615 V616 V615 0x0
0x587: V521 = ISZERO V520
0x588: V522 = ISZERO V521
0x589: V523 = 0x591
0x58c: JUMPI 0x591 V522
---
Entry stack: [V12, S10, S9, V587, 0xa9059cbb, V612, 0x0, V615, V616, V615, 0x0, V587]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S10, S9, V587, 0xa9059cbb, V612]

================================

Block 0x58d
[0x58d:0x590]
---
Predecessors: [0x580]
Successors: []
---
0x58d PUSH1 0x0
0x58f DUP1
0x590 REVERT
---
0x58d: V524 = 0x0
0x590: REVERT 0x0 0x0
---
Entry stack: [V12, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0x591
[0x591:0x594]
---
Predecessors: [0x580, 0x67e]
Successors: [0x595]
---
0x591 JUMPDEST
0x592 POP
0x593 POP
0x594 POP
---
0x591: JUMPDEST 
---
Entry stack: [V12, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S4, S3]

================================

Block 0x595
[0x595:0x595]
---
Predecessors: [0x55b, 0x591]
Successors: [0x596]
---
0x595 JUMPDEST
---
0x595: JUMPDEST 
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x596
[0x596:0x597]
---
Predecessors: [0x595]
Successors: [0x2b6]
---
0x596 JUMPDEST
0x597 JUMP
---
0x596: JUMPDEST 
0x597: JUMP S0
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x598
[0x598:0x5a2]
---
Predecessors: [0x353]
Successors: [0x462]
---
0x598 JUMPDEST
0x599 PUSH1 0x0
0x59b PUSH2 0x45c
0x59e TIMESTAMP
0x59f PUSH2 0x462
0x5a2 JUMP
---
0x598: JUMPDEST 
0x599: V525 = 0x0
0x59b: V526 = 0x45c
0x59e: V527 = TIMESTAMP
0x59f: V528 = 0x462
0x5a2: JUMP 0x462
---
Entry stack: [V12, 0x239]
Stack pops: 0
Stack additions: [0x0, 0x45c, V527]
Exit stack: [V12, 0x239, 0x0, 0x45c, V527]

================================

Block 0x5a3
[0x5a3:0x5a5]
---
Predecessors: []
Successors: [0x5a6]
---
0x5a3 JUMPDEST
0x5a4 SWAP1
0x5a5 POP
---
0x5a3: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x5a6
[0x5a6:0x5a8]
---
Predecessors: [0x5a3]
Successors: []
Has unresolved jump.
---
0x5a6 JUMPDEST
0x5a7 SWAP1
0x5a8 JUMP
---
0x5a6: JUMPDEST 
0x5a8: JUMP S1
---
Entry stack: [S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x5a9
[0x5a9:0x5bf]
---
Predecessors: [0x3a0]
Successors: [0x5c0, 0x5c4]
---
0x5a9 JUMPDEST
0x5aa PUSH1 0x0
0x5ac SLOAD
0x5ad CALLER
0x5ae PUSH1 0x1
0x5b0 PUSH1 0xa0
0x5b2 PUSH1 0x2
0x5b4 EXP
0x5b5 SUB
0x5b6 SWAP1
0x5b7 DUP2
0x5b8 AND
0x5b9 SWAP2
0x5ba AND
0x5bb EQ
0x5bc PUSH2 0x5c4
0x5bf JUMPI
---
0x5a9: JUMPDEST 
0x5aa: V529 = 0x0
0x5ac: V530 = S[0x0]
0x5ad: V531 = CALLER
0x5ae: V532 = 0x1
0x5b0: V533 = 0xa0
0x5b2: V534 = 0x2
0x5b4: V535 = EXP 0x2 0xa0
0x5b5: V536 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b8: V537 = AND 0xffffffffffffffffffffffffffffffffffffffff V531
0x5ba: V538 = AND V530 0xffffffffffffffffffffffffffffffffffffffff
0x5bb: V539 = EQ V538 V537
0x5bc: V540 = 0x5c4
0x5bf: JUMPI 0x5c4 V539
---
Entry stack: [V12, 0x2b6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2b6]

================================

Block 0x5c0
[0x5c0:0x5c3]
---
Predecessors: [0x5a9]
Successors: []
---
0x5c0 PUSH1 0x0
0x5c2 DUP1
0x5c3 REVERT
---
0x5c0: V541 = 0x0
0x5c3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2b6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2b6]

================================

Block 0x5c4
[0x5c4:0x5cb]
---
Predecessors: [0x5a9]
Successors: [0x437]
---
0x5c4 JUMPDEST
0x5c5 PUSH2 0x5cc
0x5c8 PUSH2 0x437
0x5cb JUMP
---
0x5c4: JUMPDEST 
0x5c5: V542 = 0x5cc
0x5c8: V543 = 0x437
0x5cb: JUMP 0x437
---
Entry stack: [V12, 0x2b6]
Stack pops: 0
Stack additions: [0x5cc]
Exit stack: [V12, 0x2b6, 0x5cc]

================================

Block 0x5cc
[0x5cc:0x5d1]
---
Predecessors: [0x45f]
Successors: [0x5d2, 0x5d6]
---
0x5cc JUMPDEST
0x5cd ISZERO
0x5ce PUSH2 0x5d6
0x5d1 JUMPI
---
0x5cc: JUMPDEST 
0x5cd: V544 = ISZERO S0
0x5ce: V545 = 0x5d6
0x5d1: JUMPI 0x5d6 V544
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S2, S1]

================================

Block 0x5d2
[0x5d2:0x5d5]
---
Predecessors: [0x5cc]
Successors: []
---
0x5d2 PUSH1 0x0
0x5d4 DUP1
0x5d5 REVERT
---
0x5d2: V546 = 0x0
0x5d5: REVERT 0x0 0x0
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x5d6
[0x5d6:0x5df]
---
Predecessors: [0x5cc]
Successors: [0x5e0, 0x5e4]
---
0x5d6 JUMPDEST
0x5d7 PUSH1 0x2
0x5d9 SLOAD
0x5da TIMESTAMP
0x5db GT
0x5dc PUSH2 0x5e4
0x5df JUMPI
---
0x5d6: JUMPDEST 
0x5d7: V547 = 0x2
0x5d9: V548 = S[0x2]
0x5da: V549 = TIMESTAMP
0x5db: V550 = GT V549 V548
0x5dc: V551 = 0x5e4
0x5df: JUMPI 0x5e4 V550
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x5e0
[0x5e0:0x5e3]
---
Predecessors: [0x5d6]
Successors: []
---
0x5e0 PUSH1 0x0
0x5e2 DUP1
0x5e3 REVERT
---
0x5e0: V552 = 0x0
0x5e3: REVERT 0x0 0x0
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x5e4
[0x5e4:0x618]
---
Predecessors: [0x5d6]
Successors: [0x619, 0x61d]
---
0x5e4 JUMPDEST
0x5e5 PUSH1 0x6
0x5e7 SLOAD
0x5e8 PUSH1 0x1
0x5ea PUSH1 0xa0
0x5ec PUSH1 0x2
0x5ee EXP
0x5ef SUB
0x5f0 SWAP1
0x5f1 DUP2
0x5f2 AND
0x5f3 SWAP1
0x5f4 ADDRESS
0x5f5 AND
0x5f6 BALANCE
0x5f7 DUP1
0x5f8 ISZERO
0x5f9 PUSH2 0x8fc
0x5fc MUL
0x5fd SWAP1
0x5fe PUSH1 0x40
0x600 MLOAD
0x601 PUSH1 0x0
0x603 PUSH1 0x40
0x605 MLOAD
0x606 DUP1
0x607 DUP4
0x608 SUB
0x609 DUP2
0x60a DUP6
0x60b DUP9
0x60c DUP9
0x60d CALL
0x60e SWAP4
0x60f POP
0x610 POP
0x611 POP
0x612 POP
0x613 ISZERO
0x614 ISZERO
0x615 PUSH2 0x61d
0x618 JUMPI
---
0x5e4: JUMPDEST 
0x5e5: V553 = 0x6
0x5e7: V554 = S[0x6]
0x5e8: V555 = 0x1
0x5ea: V556 = 0xa0
0x5ec: V557 = 0x2
0x5ee: V558 = EXP 0x2 0xa0
0x5ef: V559 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f2: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff V554
0x5f4: V561 = ADDRESS
0x5f5: V562 = AND V561 0xffffffffffffffffffffffffffffffffffffffff
0x5f6: V563 = BALANCE V562
0x5f8: V564 = ISZERO V563
0x5f9: V565 = 0x8fc
0x5fc: V566 = MUL 0x8fc V564
0x5fe: V567 = 0x40
0x600: V568 = M[0x40]
0x601: V569 = 0x0
0x603: V570 = 0x40
0x605: V571 = M[0x40]
0x608: V572 = SUB V568 V571
0x60d: V573 = CALL V566 V560 V563 V571 V572 V571 0x0
0x613: V574 = ISZERO V573
0x614: V575 = ISZERO V574
0x615: V576 = 0x61d
0x618: JUMPI 0x61d V575
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x619
[0x619:0x61c]
---
Predecessors: [0x5e4]
Successors: []
---
0x619 PUSH1 0x0
0x61b DUP1
0x61c REVERT
---
0x619: V577 = 0x0
0x61c: REVERT 0x0 0x0
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x61d
[0x61d:0x679]
---
Predecessors: [0x5e4]
Successors: [0x580, 0x67a]
---
0x61d JUMPDEST
0x61e PUSH1 0x5
0x620 SLOAD
0x621 PUSH1 0x6
0x623 SLOAD
0x624 PUSH1 0x1
0x626 PUSH1 0xa0
0x628 PUSH1 0x2
0x62a EXP
0x62b SUB
0x62c SWAP2
0x62d DUP3
0x62e AND
0x62f SWAP2
0x630 PUSH4 0xa9059cbb
0x635 SWAP2
0x636 DUP2
0x637 AND
0x638 SWAP1
0x639 ADDRESS
0x63a AND
0x63b BALANCE
0x63c PUSH1 0x40
0x63e MLOAD
0x63f PUSH1 0xe0
0x641 PUSH1 0x2
0x643 EXP
0x644 PUSH4 0xffffffff
0x649 DUP6
0x64a AND
0x64b MUL
0x64c DUP2
0x64d MSTORE
0x64e PUSH1 0x1
0x650 PUSH1 0xa0
0x652 PUSH1 0x2
0x654 EXP
0x655 SUB
0x656 SWAP1
0x657 SWAP3
0x658 AND
0x659 PUSH1 0x4
0x65b DUP4
0x65c ADD
0x65d MSTORE
0x65e PUSH1 0x24
0x660 DUP3
0x661 ADD
0x662 MSTORE
0x663 PUSH1 0x44
0x665 ADD
0x666 PUSH1 0x0
0x668 PUSH1 0x40
0x66a MLOAD
0x66b DUP1
0x66c DUP4
0x66d SUB
0x66e DUP2
0x66f PUSH1 0x0
0x671 DUP8
0x672 DUP1
0x673 EXTCODESIZE
0x674 ISZERO
0x675 ISZERO
0x676 PUSH2 0x580
0x679 JUMPI
---
0x61d: JUMPDEST 
0x61e: V578 = 0x5
0x620: V579 = S[0x5]
0x621: V580 = 0x6
0x623: V581 = S[0x6]
0x624: V582 = 0x1
0x626: V583 = 0xa0
0x628: V584 = 0x2
0x62a: V585 = EXP 0x2 0xa0
0x62b: V586 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62e: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V579
0x630: V588 = 0xa9059cbb
0x637: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x639: V590 = ADDRESS
0x63a: V591 = AND V590 0xffffffffffffffffffffffffffffffffffffffff
0x63b: V592 = BALANCE V591
0x63c: V593 = 0x40
0x63e: V594 = M[0x40]
0x63f: V595 = 0xe0
0x641: V596 = 0x2
0x643: V597 = EXP 0x2 0xe0
0x644: V598 = 0xffffffff
0x64a: V599 = AND 0xa9059cbb 0xffffffff
0x64b: V600 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x64d: M[V594] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x64e: V601 = 0x1
0x650: V602 = 0xa0
0x652: V603 = 0x2
0x654: V604 = EXP 0x2 0xa0
0x655: V605 = SUB 0x10000000000000000000000000000000000000000 0x1
0x658: V606 = AND V589 0xffffffffffffffffffffffffffffffffffffffff
0x659: V607 = 0x4
0x65c: V608 = ADD V594 0x4
0x65d: M[V608] = V606
0x65e: V609 = 0x24
0x661: V610 = ADD V594 0x24
0x662: M[V610] = V592
0x663: V611 = 0x44
0x665: V612 = ADD 0x44 V594
0x666: V613 = 0x0
0x668: V614 = 0x40
0x66a: V615 = M[0x40]
0x66d: V616 = SUB V612 V615
0x66f: V617 = 0x0
0x673: V618 = EXTCODESIZE V587
0x674: V619 = ISZERO V618
0x675: V620 = ISZERO V619
0x676: V621 = 0x580
0x679: JUMPI 0x580 V620
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: [V587, 0xa9059cbb, V612, 0x0, V615, V616, V615, 0x0, V587]
Exit stack: [V12, S1, S0, V587, 0xa9059cbb, V612, 0x0, V615, V616, V615, 0x0, V587]

================================

Block 0x67a
[0x67a:0x67d]
---
Predecessors: [0x61d]
Successors: []
---
0x67a PUSH1 0x0
0x67c DUP1
0x67d REVERT
---
0x67a: V622 = 0x0
0x67d: REVERT 0x0 0x0
---
Entry stack: [V12, S10, S9, V587, 0xa9059cbb, V612, 0x0, V615, V616, V615, 0x0, V587]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, V587, 0xa9059cbb, V612, 0x0, V615, V616, V615, 0x0, V587]

================================

Block 0x67e
[0x67e:0x68a]
---
Predecessors: []
Successors: [0x591, 0x68b]
---
0x67e JUMPDEST
0x67f PUSH2 0x2c6
0x682 GAS
0x683 SUB
0x684 CALL
0x685 ISZERO
0x686 ISZERO
0x687 PUSH2 0x591
0x68a JUMPI
---
0x67e: JUMPDEST 
0x67f: V623 = 0x2c6
0x682: V624 = GAS
0x683: V625 = SUB V624 0x2c6
0x684: V626 = CALL V625 S0 S1 S2 S3 S4 S5
0x685: V627 = ISZERO V626
0x686: V628 = ISZERO V627
0x687: V629 = 0x591
0x68a: JUMPI 0x591 V628
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x68b
[0x68b:0x692]
---
Predecessors: [0x67e]
Successors: [0x693]
---
0x68b PUSH1 0x0
0x68d DUP1
0x68e REVERT
0x68f JUMPDEST
0x690 POP
0x691 POP
0x692 POP
---
0x68b: V630 = 0x0
0x68e: REVERT 0x0 0x0
0x68f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x693
[0x693:0x693]
---
Predecessors: [0x68b]
Successors: [0x694]
---
0x693 JUMPDEST
---
0x693: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x694
[0x694:0x695]
---
Predecessors: [0x693]
Successors: []
Has unresolved jump.
---
0x694 JUMPDEST
0x695 JUMP
---
0x694: JUMPDEST 
0x695: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x696
[0x696:0x6a4]
---
Predecessors: [0x3b5]
Successors: [0x3bd]
---
0x696 JUMPDEST
0x697 PUSH1 0x6
0x699 SLOAD
0x69a PUSH1 0x1
0x69c PUSH1 0xa0
0x69e PUSH1 0x2
0x6a0 EXP
0x6a1 SUB
0x6a2 AND
0x6a3 DUP2
0x6a4 JUMP
---
0x696: JUMPDEST 
0x697: V631 = 0x6
0x699: V632 = S[0x6]
0x69a: V633 = 0x1
0x69c: V634 = 0xa0
0x69e: V635 = 0x2
0x6a0: V636 = EXP 0x2 0xa0
0x6a1: V637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a2: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0x6a4: JUMP 0x3bd
---
Entry stack: [V12, 0x3bd]
Stack pops: 1
Stack additions: [S0, V638]
Exit stack: [V12, 0x3bd, V638]

================================

Block 0x6a5
[0x6a5:0x6b3]
---
Predecessors: [0x3e4]
Successors: [0x3bd]
---
0x6a5 JUMPDEST
0x6a6 PUSH1 0x0
0x6a8 SLOAD
0x6a9 PUSH1 0x1
0x6ab PUSH1 0xa0
0x6ad PUSH1 0x2
0x6af EXP
0x6b0 SUB
0x6b1 AND
0x6b2 DUP2
0x6b3 JUMP
---
0x6a5: JUMPDEST 
0x6a6: V639 = 0x0
0x6a8: V640 = S[0x0]
0x6a9: V641 = 0x1
0x6ab: V642 = 0xa0
0x6ad: V643 = 0x2
0x6af: V644 = EXP 0x2 0xa0
0x6b0: V645 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b1: V646 = AND 0xffffffffffffffffffffffffffffffffffffffff V640
0x6b3: JUMP 0x3bd
---
Entry stack: [V12, 0x3bd]
Stack pops: 1
Stack additions: [S0, V646]
Exit stack: [V12, 0x3bd, V646]

================================

Block 0x6b4
[0x6b4:0x6c2]
---
Predecessors: [0x413]
Successors: [0x3bd]
---
0x6b4 JUMPDEST
0x6b5 PUSH1 0x5
0x6b7 SLOAD
0x6b8 PUSH1 0x1
0x6ba PUSH1 0xa0
0x6bc PUSH1 0x2
0x6be EXP
0x6bf SUB
0x6c0 AND
0x6c1 DUP2
0x6c2 JUMP
---
0x6b4: JUMPDEST 
0x6b5: V647 = 0x5
0x6b7: V648 = S[0x5]
0x6b8: V649 = 0x1
0x6ba: V650 = 0xa0
0x6bc: V651 = 0x2
0x6be: V652 = EXP 0x2 0xa0
0x6bf: V653 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c0: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff V648
0x6c2: JUMP 0x3bd
---
Entry stack: [V12, 0x3bd]
Stack pops: 1
Stack additions: [S0, V654]
Exit stack: [V12, 0x3bd, V654]

================================

Block 0x6c3
[0x6c3:0x6ee]
---
Predecessors: []
Successors: []
---
0x6c3 STOP
0x6c4 LOG1
0x6c5 PUSH6 0x627a7a723058
0x6cc SHA3
0x6cd DUP13
0x6ce RETURNDATASIZE
0x6cf MISSING 0xa7
0x6d0 MISSING 0xd5
0x6d1 OR
0x6d2 MISSING 0xc3
0x6d3 MISSING 0xb6
0x6d4 PUSH15 0xcd5498700ea59695102364ea9cd0b6
0x6e4 MISSING 0xdb
0x6e5 MISSING 0xf8
0x6e6 MISSING 0xaa
0x6e7 SWAP7
0x6e8 MISSING 0xb3
0x6e9 ORIGIN
0x6ea DUP14
0x6eb MISSING 0xdd
0x6ec CREATE2
0x6ed STOP
0x6ee MISSING 0x29
---
0x6c3: STOP 
0x6c4: LOG S0 S1 S2
0x6c5: V655 = 0x627a7a723058
0x6cc: V656 = SHA3 0x627a7a723058 S3
0x6ce: V657 = RETURNDATASIZE
0x6cf: MISSING 0xa7
0x6d0: MISSING 0xd5
0x6d1: V658 = OR S0 S1
0x6d2: MISSING 0xc3
0x6d3: MISSING 0xb6
0x6d4: V659 = 0xcd5498700ea59695102364ea9cd0b6
0x6e4: MISSING 0xdb
0x6e5: MISSING 0xf8
0x6e6: MISSING 0xaa
0x6e8: MISSING 0xb3
0x6e9: V660 = ORIGIN
0x6eb: MISSING 0xdd
0x6ec: V661 = CREATE2 S0 S1 S2 S3
0x6ed: STOP 
0x6ee: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V657, S15, V656, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V658, 0xcd5498700ea59695102364ea9cd0b6, S7, S1, S2, S3, S4, S5, S6, S0, S12, V660, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V661]
Exit stack: []

================================

Function 0:
Public function signature: 0x9799c01
Entry block: 0x226
Exit block: 0x239
Body: 0x226, 0x22d, 0x231, 0x239, 0x4e9

Function 1:
Public function signature: 0xb97bc86
Entry block: 0x24b
Exit block: 0x239
Body: 0x239, 0x24b, 0x252, 0x256, 0x4ef

Function 2:
Public function signature: 0x68428a1b
Entry block: 0x270
Exit block: 0x277
Body: 0x270, 0x277, 0x27b, 0x283

Function 3:
Public function signature: 0x69043895
Entry block: 0x297
Exit block: 0x2b6
Body: 0x297, 0x29e, 0x2a2, 0x2b6, 0x4f5, 0x50c, 0x510, 0x539, 0x53a

Function 4:
Public function signature: 0x70a08231
Entry block: 0x2b8
Exit block: 0x239
Body: 0x239, 0x2b8, 0x2bf, 0x2c3, 0x53d

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x2e9
Exit block: 0x239
Body: 0x239, 0x2e9, 0x2f0, 0x2f4, 0x54f

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x30e
Exit block: 0x239
Body: 0x239, 0x30e, 0x315, 0x319, 0x555

Function 7:
Public function signature: 0x83197ef0
Entry block: 0x333
Exit block: 0x2b6
Body: 0x2b6, 0x333, 0x33a, 0x33e, 0x55b, 0x573, 0x595, 0x596

Function 8:
Public function signature: 0x982e5721
Entry block: 0x348
Exit block: 0x67a
Body: 0x348, 0x34f, 0x353, 0x45c, 0x598, 0x67a

Function 9:
Public function signature: 0xb52e0dc8
Entry block: 0x36d
Exit block: 0x239
Body: 0x239, 0x36d, 0x374, 0x378

Function 10:
Public function signature: 0xc10b9358
Entry block: 0x395
Exit block: 0x2b6
Body: 0x2b6, 0x395, 0x39c, 0x3a0, 0x580, 0x58d, 0x591, 0x595, 0x596, 0x5a9, 0x5c0, 0x5c4, 0x5cc, 0x5d2, 0x5d6, 0x5e0, 0x5e4, 0x619, 0x61d, 0x67a

Function 11:
Public function signature: 0xc8e706e2
Entry block: 0x3aa
Exit block: 0x3bd
Body: 0x3aa, 0x3b1, 0x3b5, 0x3bd, 0x696

Function 12:
Public function signature: 0xce606ee0
Entry block: 0x3d9
Exit block: 0x3bd
Body: 0x3bd, 0x3d9, 0x3e0, 0x3e4, 0x6a5

Function 13:
Public function signature: 0xfb03735e
Entry block: 0x408
Exit block: 0x3bd
Body: 0x3bd, 0x408, 0x40f, 0x413, 0x6b4

Function 14:
Public fallback function
Entry block: 0xb4
Exit block: 0x222
Body: 0xb4, 0xb5, 0xc0, 0xc7, 0xcb, 0xd7, 0xdb, 0x10f, 0x11e, 0x11f, 0x140, 0x141, 0x181, 0x185, 0x192, 0x196, 0x21d, 0x221, 0x222

Function 15:
Private function
Entry block: 0x462
Exit block: 0x4e4
Body: 0x462, 0x46f, 0x476, 0x486, 0x48e, 0x49e, 0x4a6, 0x4b6, 0x4be, 0x4c8, 0x4d0, 0x4db, 0x4de, 0x4df, 0x4e0, 0x4e1, 0x4e2, 0x4e3, 0x4e4

Function 16:
Private function
Entry block: 0x437
Exit block: 0x45f
Body: 0x437, 0x446, 0x44d, 0x454, 0x45c, 0x45f

