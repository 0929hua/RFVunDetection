Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x61
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x61
0xa: JUMPI 0x61 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0xaf]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x1f81ba6
0x19 DUP2
0x1a EQ
0x1b PUSH2 0xaf
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x1f81ba6
0x1a: V12 = EQ V10 0x1f81ba6
0x1b: V13 = 0xaf
0x1e: JUMPI 0xaf V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xd7]
---
0x1f DUP1
0x20 PUSH4 0x6fc3c817
0x25 EQ
0x26 PUSH2 0xd7
0x29 JUMPI
---
0x20: V14 = 0x6fc3c817
0x25: V15 = EQ 0x6fc3c817 V10
0x26: V16 = 0xd7
0x29: JUMPI 0xd7 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xee]
---
0x2a DUP1
0x2b PUSH4 0x70a08231
0x30 EQ
0x31 PUSH2 0xee
0x34 JUMPI
---
0x2b: V17 = 0x70a08231
0x30: V18 = EQ 0x70a08231 V10
0x31: V19 = 0xee
0x34: JUMPI 0xee V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x122]
---
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH2 0x122
0x3f JUMPI
---
0x36: V20 = 0x8da5cb5b
0x3b: V21 = EQ 0x8da5cb5b V10
0x3c: V22 = 0x122
0x3f: JUMPI 0x122 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x139]
---
0x40 DUP1
0x41 PUSH4 0xa9059cbb
0x46 EQ
0x47 PUSH2 0x139
0x4a JUMPI
---
0x41: V23 = 0xa9059cbb
0x46: V24 = EQ 0xa9059cbb V10
0x47: V25 = 0x139
0x4a: JUMPI 0x139 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x165]
---
0x4b DUP1
0x4c PUSH4 0xbaa49301
0x51 EQ
0x52 PUSH2 0x165
0x55 JUMPI
---
0x4c: V26 = 0xbaa49301
0x51: V27 = EQ 0xbaa49301 V10
0x52: V28 = 0x165
0x55: JUMPI 0x165 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x18a]
---
0x56 DUP1
0x57 PUSH4 0xcd5295d3
0x5c EQ
0x5d PUSH2 0x18a
0x60 JUMPI
---
0x57: V29 = 0xcd5295d3
0x5c: V30 = EQ 0xcd5295d3 V10
0x5d: V31 = 0x18a
0x60: JUMPI 0x18a V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6d]
---
Predecessors: [0x0, 0x56]
Successors: [0x6e, 0xad]
---
0x61 JUMPDEST
0x62 PUSH2 0x1b2
0x65 PUSH1 0x0
0x67 CALLVALUE
0x68 GT
0x69 ISZERO
0x6a PUSH2 0xad
0x6d JUMPI
---
0x61: JUMPDEST 
0x62: V32 = 0x1b2
0x65: V33 = 0x0
0x67: V34 = CALLVALUE
0x68: V35 = GT V34 0x0
0x69: V36 = ISZERO V35
0x6a: V37 = 0xad
0x6d: JUMPI 0xad V36
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b2]
Exit stack: [V10, 0x1b2]

================================

Block 0x6e
[0x6e:0xac]
---
Predecessors: [0x61]
Successors: [0xad]
---
0x6e PUSH1 0x40
0x70 DUP1
0x71 MLOAD
0x72 CALLVALUE
0x73 DUP2
0x74 MSTORE
0x75 SWAP1
0x76 MLOAD
0x77 PUSH1 0x1
0x79 PUSH1 0xa0
0x7b PUSH1 0x2
0x7d EXP
0x7e SUB
0x7f CALLER
0x80 AND
0x81 SWAP2
0x82 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xa3 SWAP2
0xa4 SWAP1
0xa5 DUP2
0xa6 SWAP1
0xa7 SUB
0xa8 PUSH1 0x20
0xaa ADD
0xab SWAP1
0xac LOG2
---
0x6e: V38 = 0x40
0x71: V39 = M[0x40]
0x72: V40 = CALLVALUE
0x74: M[V39] = V40
0x76: V41 = M[0x40]
0x77: V42 = 0x1
0x79: V43 = 0xa0
0x7b: V44 = 0x2
0x7d: V45 = EXP 0x2 0xa0
0x7e: V46 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f: V47 = CALLER
0x80: V48 = AND V47 0xffffffffffffffffffffffffffffffffffffffff
0x82: V49 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xa7: V50 = SUB V39 V41
0xa8: V51 = 0x20
0xaa: V52 = ADD 0x20 V50
0xac: LOG V41 V52 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V48
---
Entry stack: [V10, 0x1b2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2]

================================

Block 0xad
[0xad:0xae]
---
Predecessors: [0x61, 0x6e, 0x2dd, 0x318, 0x34d, 0x3a0]
Successors: [0x1b2]
---
0xad JUMPDEST
0xae JUMP
---
0xad: JUMPDEST 
0xae: JUMP 0x1b2
---
Entry stack: [V10, 0x1b2]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xaf
[0xaf:0xb4]
---
Predecessors: [0xb]
Successors: [0xb5]
---
0xaf JUMPDEST
0xb0 CALLVALUE
0xb1 PUSH2 0x2
0xb4 JUMPI
---
0xaf: JUMPDEST 
0xb0: V53 = CALLVALUE
0xb1: V54 = 0x2
0xb4: THROWI V53
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb5
[0xb5:0xd2]
---
Predecessors: [0xaf]
Successors: [0xd3, 0x1fa]
---
0xb5 PUSH2 0x1b2
0xb8 PUSH1 0x4
0xba CALLDATALOAD
0xbb PUSH1 0x1
0xbd SLOAD
0xbe PUSH1 0x1
0xc0 PUSH1 0xa0
0xc2 PUSH1 0x2
0xc4 EXP
0xc5 SUB
0xc6 SWAP1
0xc7 DUP2
0xc8 AND
0xc9 CALLER
0xca SWAP2
0xcb SWAP1
0xcc SWAP2
0xcd AND
0xce EQ
0xcf PUSH2 0x1fa
0xd2 JUMPI
---
0xb5: V55 = 0x1b2
0xb8: V56 = 0x4
0xba: V57 = CALLDATALOAD 0x4
0xbb: V58 = 0x1
0xbd: V59 = S[0x1]
0xbe: V60 = 0x1
0xc0: V61 = 0xa0
0xc2: V62 = 0x2
0xc4: V63 = EXP 0x2 0xa0
0xc5: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc8: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xc9: V66 = CALLER
0xcd: V67 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0xce: V68 = EQ V67 V65
0xcf: V69 = 0x1fa
0xd2: JUMPI 0x1fa V68
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b2, V57]
Exit stack: [V10, 0x1b2, V57]

================================

Block 0xd3
[0xd3:0xd6]
---
Predecessors: [0xb5]
Successors: []
---
0xd3 PUSH2 0x2
0xd6 JUMP
---
0xd3: V70 = 0x2
0xd6: THROW 
---
Entry stack: [V10, 0x1b2, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V57]

================================

Block 0xd7
[0xd7:0xdc]
---
Predecessors: [0x1f]
Successors: [0xdd]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 PUSH2 0x2
0xdc JUMPI
---
0xd7: JUMPDEST 
0xd8: V71 = CALLVALUE
0xd9: V72 = 0x2
0xdc: THROWI V71
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdd
[0xdd:0xed]
---
Predecessors: [0xd7]
Successors: [0x1b4]
---
0xdd PUSH2 0x1b4
0xe0 PUSH1 0x1
0xe2 SLOAD
0xe3 PUSH1 0x1
0xe5 PUSH1 0xa0
0xe7 PUSH1 0x2
0xe9 EXP
0xea SUB
0xeb AND
0xec DUP2
0xed JUMP
---
0xdd: V73 = 0x1b4
0xe0: V74 = 0x1
0xe2: V75 = S[0x1]
0xe3: V76 = 0x1
0xe5: V77 = 0xa0
0xe7: V78 = 0x2
0xe9: V79 = EXP 0x2 0xa0
0xea: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeb: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0xed: JUMP 0x1b4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b4, V81]
Exit stack: [V10, 0x1b4, V81]

================================

Block 0xee
[0xee:0xf3]
---
Predecessors: [0x2a]
Successors: [0xf4]
---
0xee JUMPDEST
0xef CALLVALUE
0xf0 PUSH2 0x2
0xf3 JUMPI
---
0xee: JUMPDEST 
0xef: V82 = CALLVALUE
0xf0: V83 = 0x2
0xf3: THROWI V82
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf4
[0xf4:0x111]
---
Predecessors: [0xee]
Successors: [0x112, 0x21c]
---
0xf4 PUSH2 0x1d1
0xf7 PUSH1 0x4
0xf9 CALLDATALOAD
0xfa PUSH1 0x0
0xfc DUP1
0xfd SLOAD
0xfe PUSH1 0x1
0x100 PUSH1 0xa0
0x102 PUSH1 0x2
0x104 EXP
0x105 SUB
0x106 SWAP1
0x107 DUP2
0x108 AND
0x109 SWAP1
0x10a DUP4
0x10b AND
0x10c EQ
0x10d ISZERO
0x10e PUSH2 0x21c
0x111 JUMPI
---
0xf4: V84 = 0x1d1
0xf7: V85 = 0x4
0xf9: V86 = CALLDATALOAD 0x4
0xfa: V87 = 0x0
0xfd: V88 = S[0x0]
0xfe: V89 = 0x1
0x100: V90 = 0xa0
0x102: V91 = 0x2
0x104: V92 = EXP 0x2 0xa0
0x105: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0x108: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x10b: V95 = AND V86 0xffffffffffffffffffffffffffffffffffffffff
0x10c: V96 = EQ V95 V94
0x10d: V97 = ISZERO V96
0x10e: V98 = 0x21c
0x111: JUMPI 0x21c V97
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d1, V86, 0x0]
Exit stack: [V10, 0x1d1, V86, 0x0]

================================

Block 0x112
[0x112:0x121]
---
Predecessors: [0xf4]
Successors: [0x220]
---
0x112 POP
0x113 ADDRESS
0x114 PUSH1 0x1
0x116 PUSH1 0xa0
0x118 PUSH1 0x2
0x11a EXP
0x11b SUB
0x11c AND
0x11d BALANCE
0x11e PUSH2 0x220
0x121 JUMP
---
0x113: V99 = ADDRESS
0x114: V100 = 0x1
0x116: V101 = 0xa0
0x118: V102 = 0x2
0x11a: V103 = EXP 0x2 0xa0
0x11b: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11c: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x11d: V106 = BALANCE V105
0x11e: V107 = 0x220
0x121: JUMP 0x220
---
Entry stack: [V10, 0x1d1, V86, 0x0]
Stack pops: 1
Stack additions: [V106]
Exit stack: [V10, 0x1d1, V86, V106]

================================

Block 0x122
[0x122:0x127]
---
Predecessors: [0x35]
Successors: [0x128]
---
0x122 JUMPDEST
0x123 CALLVALUE
0x124 PUSH2 0x2
0x127 JUMPI
---
0x122: JUMPDEST 
0x123: V108 = CALLVALUE
0x124: V109 = 0x2
0x127: THROWI V108
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x128
[0x128:0x138]
---
Predecessors: [0x122]
Successors: [0x1b4]
---
0x128 PUSH2 0x1b4
0x12b PUSH1 0x0
0x12d SLOAD
0x12e PUSH1 0x1
0x130 PUSH1 0xa0
0x132 PUSH1 0x2
0x134 EXP
0x135 SUB
0x136 AND
0x137 DUP2
0x138 JUMP
---
0x128: V110 = 0x1b4
0x12b: V111 = 0x0
0x12d: V112 = S[0x0]
0x12e: V113 = 0x1
0x130: V114 = 0xa0
0x132: V115 = 0x2
0x134: V116 = EXP 0x2 0xa0
0x135: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x136: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x138: JUMP 0x1b4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b4, V118]
Exit stack: [V10, 0x1b4, V118]

================================

Block 0x139
[0x139:0x13e]
---
Predecessors: [0x40]
Successors: [0x13f]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b PUSH2 0x2
0x13e JUMPI
---
0x139: JUMPDEST 
0x13a: V119 = CALLVALUE
0x13b: V120 = 0x2
0x13e: THROWI V119
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13f
[0x13f:0x160]
---
Predecessors: [0x139]
Successors: [0x161, 0x225]
---
0x13f PUSH2 0x1e3
0x142 PUSH1 0x4
0x144 CALLDATALOAD
0x145 PUSH1 0x24
0x147 CALLDATALOAD
0x148 PUSH1 0x0
0x14a DUP1
0x14b SLOAD
0x14c PUSH1 0x1
0x14e PUSH1 0xa0
0x150 PUSH1 0x2
0x152 EXP
0x153 SUB
0x154 SWAP1
0x155 DUP2
0x156 AND
0x157 CALLER
0x158 SWAP2
0x159 SWAP1
0x15a SWAP2
0x15b AND
0x15c EQ
0x15d PUSH2 0x225
0x160 JUMPI
---
0x13f: V121 = 0x1e3
0x142: V122 = 0x4
0x144: V123 = CALLDATALOAD 0x4
0x145: V124 = 0x24
0x147: V125 = CALLDATALOAD 0x24
0x148: V126 = 0x0
0x14b: V127 = S[0x0]
0x14c: V128 = 0x1
0x14e: V129 = 0xa0
0x150: V130 = 0x2
0x152: V131 = EXP 0x2 0xa0
0x153: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x156: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x157: V134 = CALLER
0x15b: V135 = AND V134 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V136 = EQ V135 V133
0x15d: V137 = 0x225
0x160: JUMPI 0x225 V136
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e3, V123, V125, 0x0]
Exit stack: [V10, 0x1e3, V123, V125, 0x0]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x13f]
Successors: []
---
0x161 PUSH2 0x2
0x164 JUMP
---
0x161: V138 = 0x2
0x164: THROW 
---
Entry stack: [V10, 0x1e3, V123, V125, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e3, V123, V125, 0x0]

================================

Block 0x165
[0x165:0x16a]
---
Predecessors: [0x4b]
Successors: [0x16b]
---
0x165 JUMPDEST
0x166 CALLVALUE
0x167 PUSH2 0x2
0x16a JUMPI
---
0x165: JUMPDEST 
0x166: V139 = CALLVALUE
0x167: V140 = 0x2
0x16a: THROWI V139
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16b
[0x16b:0x185]
---
Predecessors: [0x165]
Successors: [0x186, 0x2cc]
---
0x16b PUSH2 0x1b2
0x16e PUSH1 0x1
0x170 SLOAD
0x171 PUSH1 0x1
0x173 PUSH1 0xa0
0x175 PUSH1 0x2
0x177 EXP
0x178 SUB
0x179 SWAP1
0x17a DUP2
0x17b AND
0x17c CALLER
0x17d SWAP2
0x17e SWAP1
0x17f SWAP2
0x180 AND
0x181 EQ
0x182 PUSH2 0x2cc
0x185 JUMPI
---
0x16b: V141 = 0x1b2
0x16e: V142 = 0x1
0x170: V143 = S[0x1]
0x171: V144 = 0x1
0x173: V145 = 0xa0
0x175: V146 = 0x2
0x177: V147 = EXP 0x2 0xa0
0x178: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17b: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x17c: V150 = CALLER
0x180: V151 = AND V150 0xffffffffffffffffffffffffffffffffffffffff
0x181: V152 = EQ V151 V149
0x182: V153 = 0x2cc
0x185: JUMPI 0x2cc V152
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b2]
Exit stack: [V10, 0x1b2]

================================

Block 0x186
[0x186:0x189]
---
Predecessors: [0x16b]
Successors: []
---
0x186 PUSH2 0x2
0x189 JUMP
---
0x186: V154 = 0x2
0x189: THROW 
---
Entry stack: [V10, 0x1b2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2]

================================

Block 0x18a
[0x18a:0x18f]
---
Predecessors: [0x56]
Successors: [0x190]
---
0x18a JUMPDEST
0x18b CALLVALUE
0x18c PUSH2 0x2
0x18f JUMPI
---
0x18a: JUMPDEST 
0x18b: V155 = CALLVALUE
0x18c: V156 = 0x2
0x18f: THROWI V155
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x190
[0x190:0x1ad]
---
Predecessors: [0x18a]
Successors: [0x1ae, 0x3f6]
---
0x190 PUSH2 0x1b2
0x193 PUSH1 0x4
0x195 CALLDATALOAD
0x196 PUSH1 0x0
0x198 SLOAD
0x199 PUSH1 0x1
0x19b PUSH1 0xa0
0x19d PUSH1 0x2
0x19f EXP
0x1a0 SUB
0x1a1 SWAP1
0x1a2 DUP2
0x1a3 AND
0x1a4 CALLER
0x1a5 SWAP2
0x1a6 SWAP1
0x1a7 SWAP2
0x1a8 AND
0x1a9 EQ
0x1aa PUSH2 0x3f6
0x1ad JUMPI
---
0x190: V157 = 0x1b2
0x193: V158 = 0x4
0x195: V159 = CALLDATALOAD 0x4
0x196: V160 = 0x0
0x198: V161 = S[0x0]
0x199: V162 = 0x1
0x19b: V163 = 0xa0
0x19d: V164 = 0x2
0x19f: V165 = EXP 0x2 0xa0
0x1a0: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a3: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x1a4: V168 = CALLER
0x1a8: V169 = AND V168 0xffffffffffffffffffffffffffffffffffffffff
0x1a9: V170 = EQ V169 V167
0x1aa: V171 = 0x3f6
0x1ad: JUMPI 0x3f6 V170
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b2, V159]
Exit stack: [V10, 0x1b2, V159]

================================

Block 0x1ae
[0x1ae:0x1b1]
---
Predecessors: [0x190]
Successors: []
---
0x1ae PUSH2 0x2
0x1b1 JUMP
---
0x1ae: V172 = 0x2
0x1b1: THROW 
---
Entry stack: [V10, 0x1b2, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2, V159]

================================

Block 0x1b2
[0x1b2:0x1b3]
---
Predecessors: [0xad, 0x1f7, 0x2a8, 0x3f6]
Successors: []
---
0x1b2 JUMPDEST
0x1b3 STOP
---
0x1b2: JUMPDEST 
0x1b3: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b4
[0x1b4:0x1d0]
---
Predecessors: [0xdd, 0x128]
Successors: []
---
0x1b4 JUMPDEST
0x1b5 PUSH1 0x40
0x1b7 DUP1
0x1b8 MLOAD
0x1b9 PUSH1 0x1
0x1bb PUSH1 0xa0
0x1bd PUSH1 0x2
0x1bf EXP
0x1c0 SUB
0x1c1 SWAP3
0x1c2 SWAP1
0x1c3 SWAP3
0x1c4 AND
0x1c5 DUP3
0x1c6 MSTORE
0x1c7 MLOAD
0x1c8 SWAP1
0x1c9 DUP2
0x1ca SWAP1
0x1cb SUB
0x1cc PUSH1 0x20
0x1ce ADD
0x1cf SWAP1
0x1d0 RETURN
---
0x1b4: JUMPDEST 
0x1b5: V173 = 0x40
0x1b8: V174 = M[0x40]
0x1b9: V175 = 0x1
0x1bb: V176 = 0xa0
0x1bd: V177 = 0x2
0x1bf: V178 = EXP 0x2 0xa0
0x1c0: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c4: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1c6: M[V174] = V180
0x1c7: V181 = M[0x40]
0x1cb: V182 = SUB V174 V181
0x1cc: V183 = 0x20
0x1ce: V184 = ADD 0x20 V182
0x1d0: RETURN V181 V184
---
Entry stack: [V10, 0x1b4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b4]

================================

Block 0x1d1
[0x1d1:0x1e2]
---
Predecessors: [0x220]
Successors: []
---
0x1d1 JUMPDEST
0x1d2 PUSH1 0x40
0x1d4 DUP1
0x1d5 MLOAD
0x1d6 SWAP2
0x1d7 DUP3
0x1d8 MSTORE
0x1d9 MLOAD
0x1da SWAP1
0x1db DUP2
0x1dc SWAP1
0x1dd SUB
0x1de PUSH1 0x20
0x1e0 ADD
0x1e1 SWAP1
0x1e2 RETURN
---
0x1d1: JUMPDEST 
0x1d2: V185 = 0x40
0x1d5: V186 = M[0x40]
0x1d8: M[V186] = S0
0x1d9: V187 = M[0x40]
0x1dd: V188 = SUB V186 V187
0x1de: V189 = 0x20
0x1e0: V190 = ADD 0x20 V188
0x1e2: RETURN V187 V190
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e3
[0x1e3:0x1f6]
---
Predecessors: [0x225]
Successors: []
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x40
0x1e6 DUP1
0x1e7 MLOAD
0x1e8 SWAP2
0x1e9 ISZERO
0x1ea ISZERO
0x1eb DUP3
0x1ec MSTORE
0x1ed MLOAD
0x1ee SWAP1
0x1ef DUP2
0x1f0 SWAP1
0x1f1 SUB
0x1f2 PUSH1 0x20
0x1f4 ADD
0x1f5 SWAP1
0x1f6 RETURN
---
0x1e3: JUMPDEST 
0x1e4: V191 = 0x40
0x1e7: V192 = M[0x40]
0x1e9: V193 = ISZERO 0x1
0x1ea: V194 = ISZERO 0x0
0x1ec: M[V192] = 0x1
0x1ed: V195 = M[0x40]
0x1f1: V196 = SUB V192 V195
0x1f2: V197 = 0x20
0x1f4: V198 = ADD 0x20 V196
0x1f6: RETURN V195 V198
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f7
[0x1f7:0x1f9]
---
Predecessors: [0x1fa]
Successors: [0x1b2]
---
0x1f7 JUMPDEST
0x1f8 POP
0x1f9 JUMP
---
0x1f7: JUMPDEST 
0x1f9: JUMP 0x1b2
---
Entry stack: [V10, 0x1b2, V57]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fa
[0x1fa:0x210]
---
Predecessors: [0xb5]
Successors: [0x1f7, 0x211]
---
0x1fa JUMPDEST
0x1fb PUSH1 0x2
0x1fd SLOAD
0x1fe PUSH1 0x1
0x200 PUSH1 0xa0
0x202 PUSH1 0x2
0x204 EXP
0x205 SUB
0x206 DUP3
0x207 DUP2
0x208 AND
0x209 SWAP2
0x20a AND
0x20b EQ
0x20c ISZERO
0x20d PUSH2 0x1f7
0x210 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V199 = 0x2
0x1fd: V200 = S[0x2]
0x1fe: V201 = 0x1
0x200: V202 = 0xa0
0x202: V203 = 0x2
0x204: V204 = EXP 0x2 0xa0
0x205: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x208: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x20a: V207 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V208 = EQ V207 V206
0x20c: V209 = ISZERO V208
0x20d: V210 = 0x1f7
0x210: JUMPI 0x1f7 V209
---
Entry stack: [V10, 0x1b2, V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1b2, V57]

================================

Block 0x211
[0x211:0x21b]
---
Predecessors: [0x1fa]
Successors: []
---
0x211 DUP1
0x212 PUSH1 0x1
0x214 PUSH1 0xa0
0x216 PUSH1 0x2
0x218 EXP
0x219 SUB
0x21a AND
0x21b SELFDESTRUCT
---
0x212: V211 = 0x1
0x214: V212 = 0xa0
0x216: V213 = 0x2
0x218: V214 = EXP 0x2 0xa0
0x219: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21a: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x21b: SELFDESTRUCT V216
---
Entry stack: [V10, 0x1b2, V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1b2, V57]

================================

Block 0x21c
[0x21c:0x21f]
---
Predecessors: [0xf4]
Successors: [0x220]
---
0x21c JUMPDEST
0x21d POP
0x21e PUSH1 0x0
---
0x21c: JUMPDEST 
0x21e: V217 = 0x0
---
Entry stack: [V10, 0x1d1, V86, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x1d1, V86, 0x0]

================================

Block 0x220
[0x220:0x224]
---
Predecessors: [0x112, 0x21c]
Successors: [0x1d1]
---
0x220 JUMPDEST
0x221 SWAP2
0x222 SWAP1
0x223 POP
0x224 JUMP
---
0x220: JUMPDEST 
0x224: JUMP 0x1d1
---
Entry stack: [V10, 0x1d1, V86, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x225
[0x225:0x2a7]
---
Predecessors: [0x13f]
Successors: [0x1e3]
---
0x225 JUMPDEST
0x226 TIMESTAMP
0x227 PUSH1 0x3
0x229 SSTORE
0x22a PUSH1 0x4
0x22c DUP1
0x22d SLOAD
0x22e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x243 NOT
0x244 AND
0x245 DUP5
0x246 OR
0x247 SWAP1
0x248 DUP2
0x249 SWAP1
0x24a SSTORE
0x24b PUSH1 0x5
0x24d DUP4
0x24e SWAP1
0x24f SSTORE
0x250 PUSH1 0x6
0x252 DUP1
0x253 SLOAD
0x254 PUSH1 0xff
0x256 NOT
0x257 AND
0x258 PUSH1 0x1
0x25a OR
0x25b SWAP1
0x25c SSTORE
0x25d PUSH1 0x40
0x25f DUP1
0x260 MLOAD
0x261 DUP5
0x262 DUP2
0x263 MSTORE
0x264 SWAP1
0x265 MLOAD
0x266 PUSH1 0x1
0x268 PUSH1 0xa0
0x26a PUSH1 0x2
0x26c EXP
0x26d SUB
0x26e SWAP3
0x26f DUP4
0x270 AND
0x271 SWAP3
0x272 CALLER
0x273 AND
0x274 SWAP2
0x275 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x296 SWAP2
0x297 SWAP1
0x298 DUP2
0x299 SWAP1
0x29a SUB
0x29b PUSH1 0x20
0x29d ADD
0x29e SWAP1
0x29f LOG3
0x2a0 POP
0x2a1 PUSH1 0x1
0x2a3 SWAP3
0x2a4 SWAP2
0x2a5 POP
0x2a6 POP
0x2a7 JUMP
---
0x225: JUMPDEST 
0x226: V218 = TIMESTAMP
0x227: V219 = 0x3
0x229: S[0x3] = V218
0x22a: V220 = 0x4
0x22d: V221 = S[0x4]
0x22e: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x243: V223 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x244: V224 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V221
0x246: V225 = OR V123 V224
0x24a: S[0x4] = V225
0x24b: V226 = 0x5
0x24f: S[0x5] = V125
0x250: V227 = 0x6
0x253: V228 = S[0x6]
0x254: V229 = 0xff
0x256: V230 = NOT 0xff
0x257: V231 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V228
0x258: V232 = 0x1
0x25a: V233 = OR 0x1 V231
0x25c: S[0x6] = V233
0x25d: V234 = 0x40
0x260: V235 = M[0x40]
0x263: M[V235] = V125
0x265: V236 = M[0x40]
0x266: V237 = 0x1
0x268: V238 = 0xa0
0x26a: V239 = 0x2
0x26c: V240 = EXP 0x2 0xa0
0x26d: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x270: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x272: V243 = CALLER
0x273: V244 = AND V243 0xffffffffffffffffffffffffffffffffffffffff
0x275: V245 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x29a: V246 = SUB V235 V236
0x29b: V247 = 0x20
0x29d: V248 = ADD 0x20 V246
0x29f: LOG V236 V248 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V244 V242
0x2a1: V249 = 0x1
0x2a7: JUMP 0x1e3
---
Entry stack: [V10, 0x1e3, V123, V125, 0x0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V10, 0x1]

================================

Block 0x2a8
[0x2a8:0x2cb]
---
Predecessors: [0x373]
Successors: [0x1b2]
---
0x2a8 JUMPDEST
0x2a9 PUSH1 0x40
0x2ab DUP1
0x2ac MLOAD
0x2ad PUSH1 0x4
0x2af DUP2
0x2b0 MSTORE
0x2b1 SWAP1
0x2b2 MLOAD
0x2b3 PUSH1 0x0
0x2b5 DUP1
0x2b6 MLOAD
0x2b7 PUSH1 0x20
0x2b9 PUSH2 0x418
0x2bc DUP4
0x2bd CODECOPY
0x2be DUP2
0x2bf MLOAD
0x2c0 SWAP2
0x2c1 MSTORE
0x2c2 SWAP2
0x2c3 DUP2
0x2c4 SWAP1
0x2c5 SUB
0x2c6 PUSH1 0x20
0x2c8 ADD
0x2c9 SWAP1
0x2ca LOG1
0x2cb JUMP
---
0x2a8: JUMPDEST 
0x2a9: V250 = 0x40
0x2ac: V251 = M[0x40]
0x2ad: V252 = 0x4
0x2b0: M[V251] = 0x4
0x2b2: V253 = M[0x40]
0x2b3: V254 = 0x0
0x2b6: V255 = M[0x0]
0x2b7: V256 = 0x20
0x2b9: V257 = 0x418
0x2bd: CODECOPY 0x0 0x418 0x20
0x2bf: V258 = M[0x0]
0x2c1: M[0x0] = V255
0x2c5: V259 = SUB V251 V253
0x2c6: V260 = 0x20
0x2c8: V261 = ADD 0x20 V259
0x2ca: LOG V253 V261 V258
0x2cb: JUMP 0x1b2
---
Entry stack: [V10, 0x1b2]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cc
[0x2cc:0x2dc]
---
Predecessors: [0x16b]
Successors: [0x2dd, 0x303]
---
0x2cc JUMPDEST
0x2cd PUSH1 0x6
0x2cf SLOAD
0x2d0 PUSH1 0xff
0x2d2 AND
0x2d3 ISZERO
0x2d4 ISZERO
0x2d5 PUSH1 0x0
0x2d7 EQ
0x2d8 ISZERO
0x2d9 PUSH2 0x303
0x2dc JUMPI
---
0x2cc: JUMPDEST 
0x2cd: V262 = 0x6
0x2cf: V263 = S[0x6]
0x2d0: V264 = 0xff
0x2d2: V265 = AND 0xff V263
0x2d3: V266 = ISZERO V265
0x2d4: V267 = ISZERO V266
0x2d5: V268 = 0x0
0x2d7: V269 = EQ 0x0 V267
0x2d8: V270 = ISZERO V269
0x2d9: V271 = 0x303
0x2dc: JUMPI 0x303 V270
---
Entry stack: [V10, 0x1b2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2]

================================

Block 0x2dd
[0x2dd:0x302]
---
Predecessors: [0x2cc]
Successors: [0xad]
---
0x2dd PUSH1 0x40
0x2df DUP1
0x2e0 MLOAD
0x2e1 PUSH1 0x5
0x2e3 DUP2
0x2e4 MSTORE
0x2e5 SWAP1
0x2e6 MLOAD
0x2e7 PUSH1 0x0
0x2e9 DUP1
0x2ea MLOAD
0x2eb PUSH1 0x20
0x2ed PUSH2 0x418
0x2f0 DUP4
0x2f1 CODECOPY
0x2f2 DUP2
0x2f3 MLOAD
0x2f4 SWAP2
0x2f5 MSTORE
0x2f6 SWAP2
0x2f7 DUP2
0x2f8 SWAP1
0x2f9 SUB
0x2fa PUSH1 0x20
0x2fc ADD
0x2fd SWAP1
0x2fe LOG1
0x2ff PUSH2 0xad
0x302 JUMP
---
0x2dd: V272 = 0x40
0x2e0: V273 = M[0x40]
0x2e1: V274 = 0x5
0x2e4: M[V273] = 0x5
0x2e6: V275 = M[0x40]
0x2e7: V276 = 0x0
0x2ea: V277 = M[0x0]
0x2eb: V278 = 0x20
0x2ed: V279 = 0x418
0x2f1: CODECOPY 0x0 0x418 0x20
0x2f3: V280 = M[0x0]
0x2f5: M[0x0] = V277
0x2f9: V281 = SUB V273 V275
0x2fa: V282 = 0x20
0x2fc: V283 = ADD 0x20 V281
0x2fe: LOG V275 V283 V280
0x2ff: V284 = 0xad
0x302: JUMP 0xad
---
Entry stack: [V10, 0x1b2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2]

================================

Block 0x303
[0x303:0x317]
---
Predecessors: [0x2cc]
Successors: [0x318, 0x33e]
---
0x303 JUMPDEST
0x304 PUSH1 0x4
0x306 SLOAD
0x307 PUSH1 0x1
0x309 PUSH1 0xa0
0x30b PUSH1 0x2
0x30d EXP
0x30e SUB
0x30f AND
0x310 PUSH1 0x0
0x312 EQ
0x313 ISZERO
0x314 PUSH2 0x33e
0x317 JUMPI
---
0x303: JUMPDEST 
0x304: V285 = 0x4
0x306: V286 = S[0x4]
0x307: V287 = 0x1
0x309: V288 = 0xa0
0x30b: V289 = 0x2
0x30d: V290 = EXP 0x2 0xa0
0x30e: V291 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30f: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x310: V293 = 0x0
0x312: V294 = EQ 0x0 V292
0x313: V295 = ISZERO V294
0x314: V296 = 0x33e
0x317: JUMPI 0x33e V295
---
Entry stack: [V10, 0x1b2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2]

================================

Block 0x318
[0x318:0x33d]
---
Predecessors: [0x303]
Successors: [0xad]
---
0x318 PUSH1 0x40
0x31a DUP1
0x31b MLOAD
0x31c PUSH1 0x2
0x31e DUP2
0x31f MSTORE
0x320 SWAP1
0x321 MLOAD
0x322 PUSH1 0x0
0x324 DUP1
0x325 MLOAD
0x326 PUSH1 0x20
0x328 PUSH2 0x418
0x32b DUP4
0x32c CODECOPY
0x32d DUP2
0x32e MLOAD
0x32f SWAP2
0x330 MSTORE
0x331 SWAP2
0x332 DUP2
0x333 SWAP1
0x334 SUB
0x335 PUSH1 0x20
0x337 ADD
0x338 SWAP1
0x339 LOG1
0x33a PUSH2 0xad
0x33d JUMP
---
0x318: V297 = 0x40
0x31b: V298 = M[0x40]
0x31c: V299 = 0x2
0x31f: M[V298] = 0x2
0x321: V300 = M[0x40]
0x322: V301 = 0x0
0x325: V302 = M[0x0]
0x326: V303 = 0x20
0x328: V304 = 0x418
0x32c: CODECOPY 0x0 0x418 0x20
0x32e: V305 = M[0x0]
0x330: M[0x0] = V302
0x334: V306 = SUB V298 V300
0x335: V307 = 0x20
0x337: V308 = ADD 0x20 V306
0x339: LOG V300 V308 V305
0x33a: V309 = 0xad
0x33d: JUMP 0xad
---
Entry stack: [V10, 0x1b2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2]

================================

Block 0x33e
[0x33e:0x34c]
---
Predecessors: [0x303]
Successors: [0x34d, 0x373]
---
0x33e JUMPDEST
0x33f PUSH1 0x3
0x341 SLOAD
0x342 PUSH2 0xe10
0x345 ADD
0x346 TIMESTAMP
0x347 GT
0x348 ISZERO
0x349 PUSH2 0x373
0x34c JUMPI
---
0x33e: JUMPDEST 
0x33f: V310 = 0x3
0x341: V311 = S[0x3]
0x342: V312 = 0xe10
0x345: V313 = ADD 0xe10 V311
0x346: V314 = TIMESTAMP
0x347: V315 = GT V314 V313
0x348: V316 = ISZERO V315
0x349: V317 = 0x373
0x34c: JUMPI 0x373 V316
---
Entry stack: [V10, 0x1b2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2]

================================

Block 0x34d
[0x34d:0x372]
---
Predecessors: [0x33e]
Successors: [0xad]
---
0x34d PUSH1 0x40
0x34f DUP1
0x350 MLOAD
0x351 PUSH1 0x3
0x353 DUP2
0x354 MSTORE
0x355 SWAP1
0x356 MLOAD
0x357 PUSH1 0x0
0x359 DUP1
0x35a MLOAD
0x35b PUSH1 0x20
0x35d PUSH2 0x418
0x360 DUP4
0x361 CODECOPY
0x362 DUP2
0x363 MLOAD
0x364 SWAP2
0x365 MSTORE
0x366 SWAP2
0x367 DUP2
0x368 SWAP1
0x369 SUB
0x36a PUSH1 0x20
0x36c ADD
0x36d SWAP1
0x36e LOG1
0x36f PUSH2 0xad
0x372 JUMP
---
0x34d: V318 = 0x40
0x350: V319 = M[0x40]
0x351: V320 = 0x3
0x354: M[V319] = 0x3
0x356: V321 = M[0x40]
0x357: V322 = 0x0
0x35a: V323 = M[0x0]
0x35b: V324 = 0x20
0x35d: V325 = 0x418
0x361: CODECOPY 0x0 0x418 0x20
0x363: V326 = M[0x0]
0x365: M[0x0] = V323
0x369: V327 = SUB V319 V321
0x36a: V328 = 0x20
0x36c: V329 = ADD 0x20 V327
0x36e: LOG V321 V329 V326
0x36f: V330 = 0xad
0x372: JUMP 0xad
---
Entry stack: [V10, 0x1b2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2]

================================

Block 0x373
[0x373:0x39f]
---
Predecessors: [0x33e]
Successors: [0x2a8, 0x3a0]
---
0x373 JUMPDEST
0x374 PUSH1 0x40
0x376 MLOAD
0x377 PUSH1 0x4
0x379 SLOAD
0x37a PUSH1 0x5
0x37c SLOAD
0x37d PUSH1 0x1
0x37f PUSH1 0xa0
0x381 PUSH1 0x2
0x383 EXP
0x384 SUB
0x385 SWAP2
0x386 SWAP1
0x387 SWAP2
0x388 AND
0x389 SWAP2
0x38a PUSH1 0x0
0x38c DUP2
0x38d DUP2
0x38e DUP2
0x38f DUP6
0x390 DUP8
0x391 PUSH2 0x8502
0x394 GAS
0x395 SUB
0x396 CALL
0x397 SWAP3
0x398 POP
0x399 POP
0x39a POP
0x39b ISZERO
0x39c PUSH2 0x2a8
0x39f JUMPI
---
0x373: JUMPDEST 
0x374: V331 = 0x40
0x376: V332 = M[0x40]
0x377: V333 = 0x4
0x379: V334 = S[0x4]
0x37a: V335 = 0x5
0x37c: V336 = S[0x5]
0x37d: V337 = 0x1
0x37f: V338 = 0xa0
0x381: V339 = 0x2
0x383: V340 = EXP 0x2 0xa0
0x384: V341 = SUB 0x10000000000000000000000000000000000000000 0x1
0x388: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x38a: V343 = 0x0
0x391: V344 = 0x8502
0x394: V345 = GAS
0x395: V346 = SUB V345 0x8502
0x396: V347 = CALL V346 V342 V336 V332 0x0 V332 0x0
0x39b: V348 = ISZERO V347
0x39c: V349 = 0x2a8
0x39f: JUMPI 0x2a8 V348
---
Entry stack: [V10, 0x1b2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2]

================================

Block 0x3a0
[0x3a0:0x3f5]
---
Predecessors: [0x373]
Successors: [0xad]
---
0x3a0 PUSH1 0x40
0x3a2 DUP1
0x3a3 MLOAD
0x3a4 PUSH1 0x4
0x3a6 SLOAD
0x3a7 PUSH1 0x5
0x3a9 SLOAD
0x3aa DUP3
0x3ab MSTORE
0x3ac SWAP2
0x3ad MLOAD
0x3ae PUSH1 0x1
0x3b0 PUSH1 0xa0
0x3b2 PUSH1 0x2
0x3b4 EXP
0x3b5 SUB
0x3b6 SWAP3
0x3b7 DUP4
0x3b8 AND
0x3b9 SWAP3
0x3ba CALLER
0x3bb AND
0x3bc SWAP2
0x3bd PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x3de SWAP2
0x3df SWAP1
0x3e0 DUP2
0x3e1 SWAP1
0x3e2 SUB
0x3e3 PUSH1 0x20
0x3e5 ADD
0x3e6 SWAP1
0x3e7 LOG3
0x3e8 PUSH1 0x6
0x3ea DUP1
0x3eb SLOAD
0x3ec PUSH1 0xff
0x3ee NOT
0x3ef AND
0x3f0 SWAP1
0x3f1 SSTORE
0x3f2 PUSH2 0xad
0x3f5 JUMP
---
0x3a0: V350 = 0x40
0x3a3: V351 = M[0x40]
0x3a4: V352 = 0x4
0x3a6: V353 = S[0x4]
0x3a7: V354 = 0x5
0x3a9: V355 = S[0x5]
0x3ab: M[V351] = V355
0x3ad: V356 = M[0x40]
0x3ae: V357 = 0x1
0x3b0: V358 = 0xa0
0x3b2: V359 = 0x2
0x3b4: V360 = EXP 0x2 0xa0
0x3b5: V361 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b8: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x3ba: V363 = CALLER
0x3bb: V364 = AND V363 0xffffffffffffffffffffffffffffffffffffffff
0x3bd: V365 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x3e2: V366 = SUB V351 V356
0x3e3: V367 = 0x20
0x3e5: V368 = ADD 0x20 V366
0x3e7: LOG V356 V368 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V364 V362
0x3e8: V369 = 0x6
0x3eb: V370 = S[0x6]
0x3ec: V371 = 0xff
0x3ee: V372 = NOT 0xff
0x3ef: V373 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V370
0x3f1: S[0x6] = V373
0x3f2: V374 = 0xad
0x3f5: JUMP 0xad
---
Entry stack: [V10, 0x1b2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b2]

================================

Block 0x3f6
[0x3f6:0x417]
---
Predecessors: [0x190]
Successors: [0x1b2]
---
0x3f6 JUMPDEST
0x3f7 PUSH1 0x2
0x3f9 DUP1
0x3fa SLOAD
0x3fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x410 NOT
0x411 AND
0x412 DUP3
0x413 OR
0x414 SWAP1
0x415 SSTORE
0x416 POP
0x417 JUMP
---
0x3f6: JUMPDEST 
0x3f7: V375 = 0x2
0x3fa: V376 = S[0x2]
0x3fb: V377 = 0xffffffffffffffffffffffffffffffffffffffff
0x410: V378 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x411: V379 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V376
0x413: V380 = OR V159 V379
0x415: S[0x2] = V380
0x417: JUMP 0x1b2
---
Entry stack: [V10, 0x1b2, V159]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x418
[0x418:0x442]
---
Predecessors: []
Successors: []
---
0x418 MISSING 0xb8
0x419 MISSING 0xb9
0x41a MISSING 0xaa
0x41b MSIZE
0x41c DIFFICULTY
0x41d MISSING 0x24
0x41e ORIGIN
0x41f MISSING 0x5c
0x420 MSTORE
0x421 AND
0x422 MISSING 0xe1
0x423 PUSH31 0x5ad757fe48fc4454865949c8c7d02a7f58e00359
---
0x418: MISSING 0xb8
0x419: MISSING 0xb9
0x41a: MISSING 0xaa
0x41b: V381 = MSIZE
0x41c: V382 = DIFFICULTY
0x41d: MISSING 0x24
0x41e: V383 = ORIGIN
0x41f: MISSING 0x5c
0x420: M[S0] = S1
0x421: V384 = AND S2 S3
0x422: MISSING 0xe1
0x423: V385 = 0x5ad757fe48fc4454865949c8c7d02a7f58e00359
---
Entry stack: []
Stack pops: 0
Stack additions: [V382, V381, V383, V384, 0x5ad757fe48fc4454865949c8c7d02a7f58e00359]
Exit stack: []

================================

Function 0:
Public function signature: 0x1f81ba6
Entry block: 0xaf
Exit block: 0x1b2
Body: 0xaf, 0xb5, 0xd3, 0x1b2, 0x1f7, 0x1fa, 0x211

Function 1:
Public function signature: 0x6fc3c817
Entry block: 0xd7
Exit block: 0x1b4
Body: 0xd7, 0xdd, 0x1b4

Function 2:
Public function signature: 0x70a08231
Entry block: 0xee
Exit block: 0x1d1
Body: 0xee, 0xf4, 0x112, 0x1d1, 0x21c, 0x220

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x122
Exit block: 0x1b4
Body: 0x122, 0x128, 0x1b4

Function 4:
Public function signature: 0xa9059cbb
Entry block: 0x139
Exit block: 0x1e3
Body: 0x139, 0x13f, 0x161, 0x1e3, 0x225

Function 5:
Public function signature: 0xbaa49301
Entry block: 0x165
Exit block: 0x1b2
Body: 0xad, 0x165, 0x16b, 0x186, 0x1b2, 0x2a8, 0x2cc, 0x2dd, 0x303, 0x318, 0x33e, 0x34d, 0x373, 0x3a0

Function 6:
Public function signature: 0xcd5295d3
Entry block: 0x18a
Exit block: 0x1b2
Body: 0x18a, 0x190, 0x1ae, 0x1b2, 0x3f6

Function 7:
Public fallback function
Entry block: 0x61
Exit block: 0x1b2
Body: 0x61, 0x6e, 0xad, 0x1b2

