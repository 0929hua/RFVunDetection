Block 0x0
[0x0:0x18]
---
Predecessors: []
Successors: [0x19, 0x47]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0xe0
0x7 PUSH1 0x2
0x9 EXP
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd DIV
0xe PUSH4 0x17c51080
0x13 DUP2
0x14 EQ
0x15 PUSH2 0x47
0x18 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xe0
0x7: V3 = 0x2
0x9: V4 = EXP 0x2 0xe0
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0xe: V8 = 0x17c51080
0x14: V9 = EQ V7 0x17c51080
0x15: V10 = 0x47
0x18: JUMPI 0x47 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x19
[0x19:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0x6a]
---
0x19 DUP1
0x1a PUSH4 0x52774565
0x1f EQ
0x20 PUSH2 0x6a
0x23 JUMPI
---
0x1a: V11 = 0x52774565
0x1f: V12 = EQ 0x52774565 V7
0x20: V13 = 0x6a
0x23: JUMPI 0x6a V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0x19]
Successors: [0x2f, 0x8b]
---
0x24 DUP1
0x25 PUSH4 0xbbe4fd50
0x2a EQ
0x2b PUSH2 0x8b
0x2e JUMPI
---
0x25: V14 = 0xbbe4fd50
0x2a: V15 = EQ 0xbbe4fd50 V7
0x2b: V16 = 0x8b
0x2e: JUMPI 0x8b V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x2f
[0x2f:0x39]
---
Predecessors: [0x24]
Successors: [0x3a, 0x94]
---
0x2f DUP1
0x30 PUSH4 0xc2052403
0x35 EQ
0x36 PUSH2 0x94
0x39 JUMPI
---
0x30: V17 = 0xc2052403
0x35: V18 = EQ 0xc2052403 V7
0x36: V19 = 0x94
0x39: JUMPI 0x94 V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x3a
[0x3a:0x44]
---
Predecessors: [0x2f]
Successors: [0x45, 0x10c]
---
0x3a DUP1
0x3b PUSH4 0xdf78c1dd
0x40 EQ
0x41 PUSH2 0x10c
0x44 JUMPI
---
0x3b: V20 = 0xdf78c1dd
0x40: V21 = EQ 0xdf78c1dd V7
0x41: V22 = 0x10c
0x44: JUMPI 0x10c V21
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x45
[0x45:0x46]
---
Predecessors: [0x3a, 0x10a, 0x153]
Successors: []
---
0x45 JUMPDEST
0x46 STOP
---
0x45: JUMPDEST 
0x46: STOP 
---
Entry stack: [V7, 0x45, V102, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x45, V102, S0]

================================

Block 0x47
[0x47:0x66]
---
Predecessors: [0x0]
Successors: [0x67]
---
0x47 JUMPDEST
0x48 PUSH2 0x11b
0x4b PUSH1 0x1
0x4d PUSH1 0xa0
0x4f PUSH1 0x2
0x51 EXP
0x52 SUB
0x53 CALLER
0x54 AND
0x55 PUSH1 0x0
0x57 SWAP1
0x58 DUP2
0x59 MSTORE
0x5a PUSH1 0x20
0x5c DUP2
0x5d SWAP1
0x5e MSTORE
0x5f PUSH1 0x40
0x61 SWAP1
0x62 SHA3
0x63 PUSH1 0x1
0x65 ADD
0x66 SLOAD
---
0x47: JUMPDEST 
0x48: V23 = 0x11b
0x4b: V24 = 0x1
0x4d: V25 = 0xa0
0x4f: V26 = 0x2
0x51: V27 = EXP 0x2 0xa0
0x52: V28 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53: V29 = CALLER
0x54: V30 = AND V29 0xffffffffffffffffffffffffffffffffffffffff
0x55: V31 = 0x0
0x59: M[0x0] = V30
0x5a: V32 = 0x20
0x5e: M[0x20] = 0x0
0x5f: V33 = 0x40
0x62: V34 = SHA3 0x0 0x40
0x63: V35 = 0x1
0x65: V36 = ADD 0x1 V34
0x66: V37 = S[V36]
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x11b, V37]
Exit stack: [V7, 0x11b, V37]

================================

Block 0x67
[0x67:0x69]
---
Predecessors: [0x47, 0x6a, 0x8b]
Successors: [0x11b]
---
0x67 JUMPDEST
0x68 SWAP1
0x69 JUMP
---
0x67: JUMPDEST 
0x69: JUMP 0x11b
---
Entry stack: [V7, 0x11b, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, S0]

================================

Block 0x6a
[0x6a:0x8a]
---
Predecessors: [0x19]
Successors: [0x67]
---
0x6a JUMPDEST
0x6b PUSH2 0x11b
0x6e PUSH1 0x1
0x70 PUSH1 0xa0
0x72 PUSH1 0x2
0x74 EXP
0x75 SUB
0x76 CALLER
0x77 AND
0x78 PUSH1 0x0
0x7a SWAP1
0x7b DUP2
0x7c MSTORE
0x7d PUSH1 0x20
0x7f DUP2
0x80 SWAP1
0x81 MSTORE
0x82 PUSH1 0x40
0x84 SWAP1
0x85 SHA3
0x86 SLOAD
0x87 PUSH2 0x67
0x8a JUMP
---
0x6a: JUMPDEST 
0x6b: V38 = 0x11b
0x6e: V39 = 0x1
0x70: V40 = 0xa0
0x72: V41 = 0x2
0x74: V42 = EXP 0x2 0xa0
0x75: V43 = SUB 0x10000000000000000000000000000000000000000 0x1
0x76: V44 = CALLER
0x77: V45 = AND V44 0xffffffffffffffffffffffffffffffffffffffff
0x78: V46 = 0x0
0x7c: M[0x0] = V45
0x7d: V47 = 0x20
0x81: M[0x20] = 0x0
0x82: V48 = 0x40
0x85: V49 = SHA3 0x0 0x40
0x86: V50 = S[V49]
0x87: V51 = 0x67
0x8a: JUMP 0x67
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x11b, V50]
Exit stack: [V7, 0x11b, V50]

================================

Block 0x8b
[0x8b:0x93]
---
Predecessors: [0x24]
Successors: [0x67]
---
0x8b JUMPDEST
0x8c PUSH2 0x11b
0x8f TIMESTAMP
0x90 PUSH2 0x67
0x93 JUMP
---
0x8b: JUMPDEST 
0x8c: V52 = 0x11b
0x8f: V53 = TIMESTAMP
0x90: V54 = 0x67
0x93: JUMP 0x67
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x11b, V53]
Exit stack: [V7, 0x11b, V53]

================================

Block 0x94
[0x94:0x97]
---
Predecessors: [0x2f]
Successors: [0x98]
---
0x94 JUMPDEST
0x95 PUSH2 0x45
---
0x94: JUMPDEST 
0x95: V55 = 0x45
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x45]
Exit stack: [V7, 0x45]

================================

Block 0x98
[0x98:0xb9]
---
Predecessors: [0x94, 0x10c]
Successors: [0xba, 0xc7]
---
0x98 JUMPDEST
0x99 PUSH1 0x1
0x9b PUSH1 0xa0
0x9d PUSH1 0x2
0x9f EXP
0xa0 SUB
0xa1 CALLER
0xa2 AND
0xa3 PUSH1 0x0
0xa5 SWAP1
0xa6 DUP2
0xa7 MSTORE
0xa8 PUSH1 0x20
0xaa DUP2
0xab SWAP1
0xac MSTORE
0xad PUSH1 0x40
0xaf DUP2
0xb0 SHA3
0xb1 SLOAD
0xb2 EQ
0xb3 DUP1
0xb4 ISZERO
0xb5 SWAP1
0xb6 PUSH2 0xc7
0xb9 JUMPI
---
0x98: JUMPDEST 
0x99: V56 = 0x1
0x9b: V57 = 0xa0
0x9d: V58 = 0x2
0x9f: V59 = EXP 0x2 0xa0
0xa0: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1: V61 = CALLER
0xa2: V62 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0xa3: V63 = 0x0
0xa7: M[0x0] = V62
0xa8: V64 = 0x20
0xac: M[0x20] = 0x0
0xad: V65 = 0x40
0xb0: V66 = SHA3 0x0 0x40
0xb1: V67 = S[V66]
0xb2: V68 = EQ V67 0x0
0xb4: V69 = ISZERO V68
0xb6: V70 = 0xc7
0xb9: JUMPI 0xc7 V68
---
Entry stack: [V7, 0x45, V102, S1, {0x45, 0x157}]
Stack pops: 0
Stack additions: [V69]
Exit stack: [V7, 0x45, V102, S1, {0x45, 0x157}, V69]

================================

Block 0xba
[0xba:0xc6]
---
Predecessors: [0x98]
Successors: [0xc7]
---
0xba POP
0xbb PUSH1 0x40
0xbd PUSH1 0x0
0xbf SHA3
0xc0 PUSH1 0x1
0xc2 ADD
0xc3 SLOAD
0xc4 TIMESTAMP
0xc5 SWAP1
0xc6 LT
---
0xbb: V71 = 0x40
0xbd: V72 = 0x0
0xbf: V73 = SHA3 0x0 0x40
0xc0: V74 = 0x1
0xc2: V75 = ADD 0x1 V73
0xc3: V76 = S[V75]
0xc4: V77 = TIMESTAMP
0xc6: V78 = LT V76 V77
---
Entry stack: [V7, 0x45, V102, S2, {0x45, 0x157}, V69]
Stack pops: 1
Stack additions: [V78]
Exit stack: [V7, 0x45, V102, S2, {0x45, 0x157}, V78]

================================

Block 0xc7
[0xc7:0xcc]
---
Predecessors: [0x98, 0xba]
Successors: [0xcd, 0x10a]
---
0xc7 JUMPDEST
0xc8 ISZERO
0xc9 PUSH2 0x10a
0xcc JUMPI
---
0xc7: JUMPDEST 
0xc8: V79 = ISZERO S0
0xc9: V80 = 0x10a
0xcc: JUMPI 0x10a V79
---
Entry stack: [V7, 0x45, V102, S2, {0x45, 0x157}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x45, V102, S2, {0x45, 0x157}]

================================

Block 0xcd
[0xcd:0x109]
---
Predecessors: [0xc7]
Successors: [0x10a]
---
0xcd PUSH1 0x1
0xcf PUSH1 0xa0
0xd1 PUSH1 0x2
0xd3 EXP
0xd4 SUB
0xd5 CALLER
0xd6 AND
0xd7 PUSH1 0x0
0xd9 DUP2
0xda DUP2
0xdb MSTORE
0xdc PUSH1 0x20
0xde DUP2
0xdf SWAP1
0xe0 MSTORE
0xe1 PUSH1 0x40
0xe3 DUP1
0xe4 DUP3
0xe5 SHA3
0xe6 SLOAD
0xe7 SWAP1
0xe8 MLOAD
0xe9 DUP3
0xea DUP2
0xeb DUP2
0xec DUP2
0xed DUP6
0xee DUP9
0xef DUP4
0xf0 CALL
0xf1 POP
0xf2 POP
0xf3 PUSH1 0x40
0xf5 DUP3
0xf6 SHA3
0xf7 SWAP3
0xf8 DUP3
0xf9 MSTORE
0xfa POP
0xfb PUSH1 0x20
0xfd DUP2
0xfe SWAP1
0xff MSTORE
0x100 DUP1
0x101 DUP3
0x102 SSTORE
0x103 PUSH1 0x1
0x105 SWAP2
0x106 SWAP1
0x107 SWAP2
0x108 ADD
0x109 SSTORE
---
0xcd: V81 = 0x1
0xcf: V82 = 0xa0
0xd1: V83 = 0x2
0xd3: V84 = EXP 0x2 0xa0
0xd4: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd5: V86 = CALLER
0xd6: V87 = AND V86 0xffffffffffffffffffffffffffffffffffffffff
0xd7: V88 = 0x0
0xdb: M[0x0] = V87
0xdc: V89 = 0x20
0xe0: M[0x20] = 0x0
0xe1: V90 = 0x40
0xe5: V91 = SHA3 0x0 0x40
0xe6: V92 = S[V91]
0xe8: V93 = M[0x40]
0xf0: V94 = CALL 0x0 V87 V92 V93 0x0 V93 0x0
0xf3: V95 = 0x40
0xf6: V96 = SHA3 0x0 0x40
0xf9: M[0x0] = V87
0xfb: V97 = 0x20
0xff: M[0x20] = 0x0
0x102: S[V96] = 0x0
0x103: V98 = 0x1
0x108: V99 = ADD 0x1 V96
0x109: S[V99] = 0x0
---
Entry stack: [V7, 0x45, V102, S1, {0x45, 0x157}]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x45, V102, S1, {0x45, 0x157}]

================================

Block 0x10a
[0x10a:0x10b]
---
Predecessors: [0xc7, 0xcd]
Successors: [0x45, 0x157]
---
0x10a JUMPDEST
0x10b JUMP
---
0x10a: JUMPDEST 
0x10b: JUMP {0x45, 0x157}
---
Entry stack: [V7, 0x45, V102, S1, {0x45, 0x157}]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x45, V102, S1]

================================

Block 0x10c
[0x10c:0x11a]
---
Predecessors: [0x3a]
Successors: [0x98]
---
0x10c JUMPDEST
0x10d PUSH2 0x45
0x110 PUSH1 0x4
0x112 CALLDATALOAD
0x113 CALLVALUE
0x114 PUSH2 0x157
0x117 PUSH2 0x98
0x11a JUMP
---
0x10c: JUMPDEST 
0x10d: V100 = 0x45
0x110: V101 = 0x4
0x112: V102 = CALLDATALOAD 0x4
0x113: V103 = CALLVALUE
0x114: V104 = 0x157
0x117: V105 = 0x98
0x11a: JUMP 0x98
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x45, V102, V103, 0x157]
Exit stack: [V7, 0x45, V102, V103, 0x157]

================================

Block 0x11b
[0x11b:0x12c]
---
Predecessors: [0x67]
Successors: []
---
0x11b JUMPDEST
0x11c PUSH1 0x40
0x11e DUP1
0x11f MLOAD
0x120 SWAP2
0x121 DUP3
0x122 MSTORE
0x123 MLOAD
0x124 SWAP1
0x125 DUP2
0x126 SWAP1
0x127 SUB
0x128 PUSH1 0x20
0x12a ADD
0x12b SWAP1
0x12c RETURN
---
0x11b: JUMPDEST 
0x11c: V106 = 0x40
0x11f: V107 = M[0x40]
0x122: M[V107] = S0
0x123: V108 = M[0x40]
0x127: V109 = SUB V107 V108
0x128: V110 = 0x20
0x12a: V111 = ADD 0x20 V109
0x12c: RETURN V108 V111
---
Entry stack: [V7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x12d
[0x12d:0x152]
---
Predecessors: [0x157]
Successors: [0x153]
---
0x12d JUMPDEST
0x12e PUSH1 0x1
0x130 PUSH1 0xa0
0x132 PUSH1 0x2
0x134 EXP
0x135 SUB
0x136 CALLER
0x137 AND
0x138 PUSH1 0x0
0x13a SWAP1
0x13b DUP2
0x13c MSTORE
0x13d PUSH1 0x20
0x13f DUP2
0x140 SWAP1
0x141 MSTORE
0x142 PUSH1 0x40
0x144 SWAP1
0x145 SHA3
0x146 DUP2
0x147 DUP2
0x148 SSTORE
0x149 TIMESTAMP
0x14a DUP4
0x14b ADD
0x14c PUSH1 0x1
0x14e SWAP2
0x14f SWAP1
0x150 SWAP2
0x151 ADD
0x152 SSTORE
---
0x12d: JUMPDEST 
0x12e: V112 = 0x1
0x130: V113 = 0xa0
0x132: V114 = 0x2
0x134: V115 = EXP 0x2 0xa0
0x135: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x136: V117 = CALLER
0x137: V118 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x138: V119 = 0x0
0x13c: M[0x0] = V118
0x13d: V120 = 0x20
0x141: M[0x20] = 0x0
0x142: V121 = 0x40
0x145: V122 = SHA3 0x0 0x40
0x148: S[V122] = S0
0x149: V123 = TIMESTAMP
0x14b: V124 = ADD V102 V123
0x14c: V125 = 0x1
0x151: V126 = ADD 0x1 V122
0x152: S[V126] = V124
---
Entry stack: [V7, 0x45, V102, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0x45, V102, S0]

================================

Block 0x153
[0x153:0x156]
---
Predecessors: [0x12d, 0x177]
Successors: [0x45]
---
0x153 JUMPDEST
0x154 POP
0x155 POP
0x156 JUMP
---
0x153: JUMPDEST 
0x156: JUMP 0x45
---
Entry stack: [V7, 0x45, V102, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V7]

================================

Block 0x157
[0x157:0x176]
---
Predecessors: [0x10a]
Successors: [0x12d, 0x177]
---
0x157 JUMPDEST
0x158 PUSH1 0x1
0x15a PUSH1 0xa0
0x15c PUSH1 0x2
0x15e EXP
0x15f SUB
0x160 CALLER
0x161 AND
0x162 PUSH1 0x0
0x164 SWAP1
0x165 DUP2
0x166 MSTORE
0x167 PUSH1 0x20
0x169 DUP2
0x16a SWAP1
0x16b MSTORE
0x16c PUSH1 0x40
0x16e DUP2
0x16f SHA3
0x170 SLOAD
0x171 GT
0x172 ISZERO
0x173 PUSH2 0x12d
0x176 JUMPI
---
0x157: JUMPDEST 
0x158: V127 = 0x1
0x15a: V128 = 0xa0
0x15c: V129 = 0x2
0x15e: V130 = EXP 0x2 0xa0
0x15f: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x160: V132 = CALLER
0x161: V133 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x162: V134 = 0x0
0x166: M[0x0] = V133
0x167: V135 = 0x20
0x16b: M[0x20] = 0x0
0x16c: V136 = 0x40
0x16f: V137 = SHA3 0x0 0x40
0x170: V138 = S[V137]
0x171: V139 = GT V138 0x0
0x172: V140 = ISZERO V139
0x173: V141 = 0x12d
0x176: JUMPI 0x12d V140
---
Entry stack: [V7, 0x45, V102, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x45, V102, S0]

================================

Block 0x177
[0x177:0x19b]
---
Predecessors: [0x157]
Successors: [0x153]
---
0x177 PUSH1 0x40
0x179 MLOAD
0x17a PUSH1 0x1
0x17c PUSH1 0xa0
0x17e PUSH1 0x2
0x180 EXP
0x181 SUB
0x182 CALLER
0x183 AND
0x184 SWAP1
0x185 PUSH1 0x0
0x187 SWAP1
0x188 CALLVALUE
0x189 SWAP1
0x18a DUP3
0x18b DUP2
0x18c DUP2
0x18d DUP2
0x18e DUP6
0x18f DUP9
0x190 DUP4
0x191 CALL
0x192 SWAP4
0x193 POP
0x194 POP
0x195 POP
0x196 POP
0x197 POP
0x198 PUSH2 0x153
0x19b JUMP
---
0x177: V142 = 0x40
0x179: V143 = M[0x40]
0x17a: V144 = 0x1
0x17c: V145 = 0xa0
0x17e: V146 = 0x2
0x180: V147 = EXP 0x2 0xa0
0x181: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x182: V149 = CALLER
0x183: V150 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x185: V151 = 0x0
0x188: V152 = CALLVALUE
0x191: V153 = CALL 0x0 V150 V152 V143 0x0 V143 0x0
0x198: V154 = 0x153
0x19b: JUMP 0x153
---
Entry stack: [V7, 0x45, V102, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x45, V102, S0]

================================

Function 0:
Public function signature: 0x17c51080
Entry block: 0x47
Exit block: 0x11b
Body: 0x47, 0x11b

Function 1:
Public function signature: 0x52774565
Entry block: 0x6a
Exit block: 0x11b
Body: 0x6a, 0x11b

Function 2:
Public function signature: 0xbbe4fd50
Entry block: 0x8b
Exit block: 0x11b
Body: 0x8b, 0x11b

Function 3:
Public function signature: 0xc2052403
Entry block: 0x94
Exit block: 0x45
Body: 0x45, 0x94, 0x98, 0xba, 0xc7, 0xcd, 0x10a, 0x12d, 0x153, 0x157, 0x177

Function 4:
Public function signature: 0xdf78c1dd
Entry block: 0x10c
Exit block: 0x45
Body: 0x45, 0x98, 0xba, 0xc7, 0xcd, 0x10a, 0x10c, 0x12d, 0x153, 0x157, 0x177

Function 5:
Public fallback function
Entry block: 0x45
Exit block: 0x45
Body: 0x45

