Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x48]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x48
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x48
0xa: JUMPI 0x48 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x41b]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x45d03fce
0x34 EQ
0x35 PUSH2 0x41b
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x45d03fce
0x34: V10 = EQ 0x45d03fce V8
0x35: V11 = 0x41b
0x38: JUMPI 0x41b V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x454]
---
0x39 DUP1
0x3a PUSH4 0xb4b31bec
0x3f EQ
0x40 PUSH2 0x454
0x43 JUMPI
---
0x3a: V12 = 0xb4b31bec
0x3f: V13 = EQ 0xb4b31bec V8
0x40: V14 = 0x454
0x43: JUMPI 0x454 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x47]
---
Predecessors: [0x39]
Successors: [0x48]
---
0x44 PUSH2 0x48
0x47 JUMP
---
0x44: V15 = 0x48
0x47: JUMP 0x48
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x48
[0x48:0x4b]
---
Predecessors: [0x0, 0x44]
Successors: [0x4c]
---
0x48 JUMPDEST
0x49 PUSH2 0x419
---
0x48: JUMPDEST 
0x49: V16 = 0x419
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x419]
Exit stack: [V8, 0x419]

================================

Block 0x4c
[0x4c:0xa3]
---
Predecessors: [0x48]
Successors: [0xa4, 0x2df]
---
0x4c JUMPDEST
0x4d PUSH1 0x1
0x4f PUSH1 0x0
0x51 SWAP1
0x52 SLOAD
0x53 SWAP1
0x54 PUSH2 0x100
0x57 EXP
0x58 SWAP1
0x59 DIV
0x5a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f AND
0x70 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85 AND
0x86 CALLER
0x87 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c AND
0x9d EQ
0x9e ISZERO
0x9f ISZERO
0xa0 PUSH2 0x2df
0xa3 JUMPI
---
0x4c: JUMPDEST 
0x4d: V17 = 0x1
0x4f: V18 = 0x0
0x52: V19 = S[0x1]
0x54: V20 = 0x100
0x57: V21 = EXP 0x100 0x0
0x59: V22 = DIV V19 0x1
0x5a: V23 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f: V24 = AND 0xffffffffffffffffffffffffffffffffffffffff V22
0x70: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x85: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x86: V27 = CALLER
0x87: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x9d: V30 = EQ V29 V26
0x9e: V31 = ISZERO V30
0x9f: V32 = ISZERO V31
0xa0: V33 = 0x2df
0xa3: JUMPI 0x2df V32
---
Entry stack: [V8, 0x419]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x419]

================================

Block 0xa4
[0xa4:0xb9]
---
Predecessors: [0x4c]
Successors: [0xba, 0xc7]
---
0xa4 PUSH1 0x1
0xa6 PUSH1 0x14
0xa8 SWAP1
0xa9 SLOAD
0xaa SWAP1
0xab PUSH2 0x100
0xae EXP
0xaf SWAP1
0xb0 DIV
0xb1 PUSH1 0xff
0xb3 AND
0xb4 DUP1
0xb5 ISZERO
0xb6 PUSH2 0xc7
0xb9 JUMPI
---
0xa4: V34 = 0x1
0xa6: V35 = 0x14
0xa9: V36 = S[0x1]
0xab: V37 = 0x100
0xae: V38 = EXP 0x100 0x14
0xb0: V39 = DIV V36 0x10000000000000000000000000000000000000000
0xb1: V40 = 0xff
0xb3: V41 = AND 0xff V39
0xb5: V42 = ISZERO V41
0xb6: V43 = 0xc7
0xb9: JUMPI 0xc7 V42
---
Entry stack: [V8, 0x419]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V8, 0x419, V41]

================================

Block 0xba
[0xba:0xc6]
---
Predecessors: [0xa4]
Successors: [0xc7]
---
0xba POP
0xbb PUSH2 0x1c20
0xbe PUSH1 0x2
0xc0 PUSH1 0x0
0xc2 POP
0xc3 SLOAD
0xc4 TIMESTAMP
0xc5 SUB
0xc6 LT
---
0xbb: V44 = 0x1c20
0xbe: V45 = 0x2
0xc0: V46 = 0x0
0xc3: V47 = S[0x2]
0xc4: V48 = TIMESTAMP
0xc5: V49 = SUB V48 V47
0xc6: V50 = LT V49 0x1c20
---
Entry stack: [V8, 0x419, V41]
Stack pops: 1
Stack additions: [V50]
Exit stack: [V8, 0x419, V50]

================================

Block 0xc7
[0xc7:0xcc]
---
Predecessors: [0xa4, 0xba]
Successors: [0xcd, 0x104]
---
0xc7 JUMPDEST
0xc8 ISZERO
0xc9 PUSH2 0x104
0xcc JUMPI
---
0xc7: JUMPDEST 
0xc8: V51 = ISZERO S0
0xc9: V52 = 0x104
0xcc: JUMPI 0x104 V51
---
Entry stack: [V8, 0x419, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x419]

================================

Block 0xcd
[0xcd:0x103]
---
Predecessors: [0xc7]
Successors: [0x417]
---
0xcd CALLER
0xce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3 AND
0xe4 PUSH1 0x0
0xe6 CALLVALUE
0xe7 PUSH1 0x40
0xe9 MLOAD
0xea DUP1
0xeb SWAP1
0xec POP
0xed PUSH1 0x0
0xef PUSH1 0x40
0xf1 MLOAD
0xf2 DUP1
0xf3 DUP4
0xf4 SUB
0xf5 DUP2
0xf6 DUP6
0xf7 DUP9
0xf8 DUP9
0xf9 CALL
0xfa SWAP4
0xfb POP
0xfc POP
0xfd POP
0xfe POP
0xff POP
0x100 PUSH2 0x417
0x103 JUMP
---
0xcd: V53 = CALLER
0xce: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xe4: V56 = 0x0
0xe6: V57 = CALLVALUE
0xe7: V58 = 0x40
0xe9: V59 = M[0x40]
0xed: V60 = 0x0
0xef: V61 = 0x40
0xf1: V62 = M[0x40]
0xf4: V63 = SUB V59 V62
0xf9: V64 = CALL 0x0 V55 V57 V62 V63 V62 0x0
0x100: V65 = 0x417
0x103: JUMP 0x417
---
Entry stack: [V8, 0x419]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x419]

================================

Block 0x104
[0x104:0x1c1]
---
Predecessors: [0xc7]
Successors: [0x1c2]
---
0x104 JUMPDEST
0x105 PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x126 PUSH1 0x1
0x128 PUSH1 0x0
0x12a SWAP1
0x12b SLOAD
0x12c SWAP1
0x12d PUSH2 0x100
0x130 EXP
0x131 SWAP1
0x132 DIV
0x133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x148 AND
0x149 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15e AND
0x15f PUSH4 0x83e78b31
0x164 CALLVALUE
0x165 PUSH3 0x7a120
0x169 SWAP1
0x16a PUSH1 0xb
0x16c PUSH1 0x1
0x16e PUSH1 0x1
0x170 PUSH1 0x40
0x172 MLOAD
0x173 DUP7
0x174 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x192 MUL
0x193 DUP2
0x194 MSTORE
0x195 PUSH1 0x4
0x197 ADD
0x198 DUP1
0x199 DUP5
0x19a DUP2
0x19b MSTORE
0x19c PUSH1 0x20
0x19e ADD
0x19f DUP4
0x1a0 DUP2
0x1a1 MSTORE
0x1a2 PUSH1 0x20
0x1a4 ADD
0x1a5 DUP3
0x1a6 DUP2
0x1a7 MSTORE
0x1a8 PUSH1 0x20
0x1aa ADD
0x1ab SWAP4
0x1ac POP
0x1ad POP
0x1ae POP
0x1af POP
0x1b0 PUSH1 0x20
0x1b2 PUSH1 0x40
0x1b4 MLOAD
0x1b5 DUP1
0x1b6 DUP4
0x1b7 SUB
0x1b8 DUP2
0x1b9 DUP6
0x1ba DUP10
0x1bb DUP9
0x1bc CALL
0x1bd ISZERO
0x1be PUSH2 0x2
0x1c1 JUMPI
---
0x104: JUMPDEST 
0x105: V66 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x126: V67 = 0x1
0x128: V68 = 0x0
0x12b: V69 = S[0x1]
0x12d: V70 = 0x100
0x130: V71 = EXP 0x100 0x0
0x132: V72 = DIV V69 0x1
0x133: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x148: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x149: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x15f: V77 = 0x83e78b31
0x164: V78 = CALLVALUE
0x165: V79 = 0x7a120
0x16a: V80 = 0xb
0x16c: V81 = 0x1
0x16e: V82 = 0x1
0x170: V83 = 0x40
0x172: V84 = M[0x40]
0x174: V85 = 0x100000000000000000000000000000000000000000000000000000000
0x192: V86 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x83e78b31
0x194: M[V84] = 0x83e78b3100000000000000000000000000000000000000000000000000000000
0x195: V87 = 0x4
0x197: V88 = ADD 0x4 V84
0x19b: M[V88] = 0xb
0x19c: V89 = 0x20
0x19e: V90 = ADD 0x20 V88
0x1a1: M[V90] = 0x1
0x1a2: V91 = 0x20
0x1a4: V92 = ADD 0x20 V90
0x1a7: M[V92] = 0x1
0x1a8: V93 = 0x20
0x1aa: V94 = ADD 0x20 V92
0x1b0: V95 = 0x20
0x1b2: V96 = 0x40
0x1b4: V97 = M[0x40]
0x1b7: V98 = SUB V94 V97
0x1bc: V99 = CALL 0x7a120 V76 V78 V97 V98 V97 0x20
0x1bd: V100 = ISZERO V99
0x1be: V101 = 0x2
0x1c1: THROWI V100
---
Entry stack: [V8, 0x419]
Stack pops: 0
Stack additions: [0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, V76, 0x83e78b31, 0x7a120, V78, V94]
Exit stack: [V8, 0x419, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, V76, 0x83e78b31, 0x7a120, V78, V94]

================================

Block 0x1c2
[0x1c2:0x1d6]
---
Predecessors: [0x104]
Successors: [0x1d7, 0x20e]
---
0x1c2 POP
0x1c3 POP
0x1c4 POP
0x1c5 POP
0x1c6 POP
0x1c7 PUSH1 0x40
0x1c9 MLOAD
0x1ca DUP1
0x1cb MLOAD
0x1cc SWAP1
0x1cd PUSH1 0x20
0x1cf ADD
0x1d0 POP
0x1d1 EQ
0x1d2 ISZERO
0x1d3 PUSH2 0x20e
0x1d6 JUMPI
---
0x1c7: V102 = 0x40
0x1c9: V103 = M[0x40]
0x1cb: V104 = M[V103]
0x1cd: V105 = 0x20
0x1cf: V106 = ADD 0x20 V103
0x1d1: V107 = EQ V104 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1d2: V108 = ISZERO V107
0x1d3: V109 = 0x20e
0x1d6: JUMPI 0x20e V108
---
Entry stack: [V8, 0x419, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, V76, 0x83e78b31, 0x7a120, V78, V94]
Stack pops: 6
Stack additions: []
Exit stack: [V8, 0x419]

================================

Block 0x1d7
[0x1d7:0x20d]
---
Predecessors: [0x1c2]
Successors: [0x417]
---
0x1d7 CALLER
0x1d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ed AND
0x1ee PUSH1 0x0
0x1f0 CALLVALUE
0x1f1 PUSH1 0x40
0x1f3 MLOAD
0x1f4 DUP1
0x1f5 SWAP1
0x1f6 POP
0x1f7 PUSH1 0x0
0x1f9 PUSH1 0x40
0x1fb MLOAD
0x1fc DUP1
0x1fd DUP4
0x1fe SUB
0x1ff DUP2
0x200 DUP6
0x201 DUP9
0x202 DUP9
0x203 CALL
0x204 SWAP4
0x205 POP
0x206 POP
0x207 POP
0x208 POP
0x209 POP
0x20a PUSH2 0x417
0x20d JUMP
---
0x1d7: V110 = CALLER
0x1d8: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ed: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1ee: V113 = 0x0
0x1f0: V114 = CALLVALUE
0x1f1: V115 = 0x40
0x1f3: V116 = M[0x40]
0x1f7: V117 = 0x0
0x1f9: V118 = 0x40
0x1fb: V119 = M[0x40]
0x1fe: V120 = SUB V116 V119
0x203: V121 = CALL 0x0 V112 V114 V119 V120 V119 0x0
0x20a: V122 = 0x417
0x20d: JUMP 0x417
---
Entry stack: [V8, 0x419]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x419]

================================

Block 0x20e
[0x20e:0x26b]
---
Predecessors: [0x1c2]
Successors: [0x26c, 0x27c]
---
0x20e JUMPDEST
0x20f PUSH1 0x1
0x211 PUSH1 0x1
0x213 PUSH1 0x14
0x215 PUSH2 0x100
0x218 EXP
0x219 DUP2
0x21a SLOAD
0x21b DUP2
0x21c PUSH1 0xff
0x21e MUL
0x21f NOT
0x220 AND
0x221 SWAP1
0x222 DUP4
0x223 MUL
0x224 OR
0x225 SWAP1
0x226 SSTORE
0x227 POP
0x228 TIMESTAMP
0x229 PUSH1 0x2
0x22b PUSH1 0x0
0x22d POP
0x22e DUP2
0x22f SWAP1
0x230 SSTORE
0x231 POP
0x232 PUSH1 0x0
0x234 CALLDATASIZE
0x235 PUSH1 0x3
0x237 PUSH1 0x0
0x239 POP
0x23a SWAP2
0x23b SWAP1
0x23c DUP3
0x23d DUP1
0x23e SLOAD
0x23f PUSH1 0x1
0x241 DUP2
0x242 PUSH1 0x1
0x244 AND
0x245 ISZERO
0x246 PUSH2 0x100
0x249 MUL
0x24a SUB
0x24b AND
0x24c PUSH1 0x2
0x24e SWAP1
0x24f DIV
0x250 SWAP1
0x251 PUSH1 0x0
0x253 MSTORE
0x254 PUSH1 0x20
0x256 PUSH1 0x0
0x258 SHA3
0x259 SWAP1
0x25a PUSH1 0x1f
0x25c ADD
0x25d PUSH1 0x20
0x25f SWAP1
0x260 DIV
0x261 DUP2
0x262 ADD
0x263 SWAP3
0x264 DUP3
0x265 PUSH1 0x1f
0x267 LT
0x268 PUSH2 0x27c
0x26b JUMPI
---
0x20e: JUMPDEST 
0x20f: V123 = 0x1
0x211: V124 = 0x1
0x213: V125 = 0x14
0x215: V126 = 0x100
0x218: V127 = EXP 0x100 0x14
0x21a: V128 = S[0x1]
0x21c: V129 = 0xff
0x21e: V130 = MUL 0xff 0x10000000000000000000000000000000000000000
0x21f: V131 = NOT 0xff0000000000000000000000000000000000000000
0x220: V132 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V128
0x223: V133 = MUL 0x1 0x10000000000000000000000000000000000000000
0x224: V134 = OR 0x10000000000000000000000000000000000000000 V132
0x226: S[0x1] = V134
0x228: V135 = TIMESTAMP
0x229: V136 = 0x2
0x22b: V137 = 0x0
0x230: S[0x2] = V135
0x232: V138 = 0x0
0x234: V139 = CALLDATASIZE
0x235: V140 = 0x3
0x237: V141 = 0x0
0x23e: V142 = S[0x3]
0x23f: V143 = 0x1
0x242: V144 = 0x1
0x244: V145 = AND 0x1 V142
0x245: V146 = ISZERO V145
0x246: V147 = 0x100
0x249: V148 = MUL 0x100 V146
0x24a: V149 = SUB V148 0x1
0x24b: V150 = AND V149 V142
0x24c: V151 = 0x2
0x24f: V152 = DIV V150 0x2
0x251: V153 = 0x0
0x253: M[0x0] = 0x3
0x254: V154 = 0x20
0x256: V155 = 0x0
0x258: V156 = SHA3 0x0 0x20
0x25a: V157 = 0x1f
0x25c: V158 = ADD 0x1f V152
0x25d: V159 = 0x20
0x260: V160 = DIV V158 0x20
0x262: V161 = ADD V156 V160
0x265: V162 = 0x1f
0x267: V163 = LT 0x1f V139
0x268: V164 = 0x27c
0x26b: JUMPI 0x27c V163
---
Entry stack: [V8, 0x419]
Stack pops: 0
Stack additions: [0x3, V161, V139, V156, 0x0]
Exit stack: [V8, 0x419, 0x3, V161, V139, V156, 0x0]

================================

Block 0x26c
[0x26c:0x27b]
---
Predecessors: [0x20e]
Successors: [0x2ad]
---
0x26c DUP1
0x26d CALLDATALOAD
0x26e PUSH1 0xff
0x270 NOT
0x271 AND
0x272 DUP4
0x273 DUP1
0x274 ADD
0x275 OR
0x276 DUP6
0x277 SSTORE
0x278 PUSH2 0x2ad
0x27b JUMP
---
0x26d: V165 = CALLDATALOAD 0x0
0x26e: V166 = 0xff
0x270: V167 = NOT 0xff
0x271: V168 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V165
0x274: V169 = ADD V139 V139
0x275: V170 = OR V169 V168
0x277: S[0x3] = V170
0x278: V171 = 0x2ad
0x27b: JUMP 0x2ad
---
Entry stack: [V8, 0x419, 0x3, V161, V139, V156, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V8, 0x419, 0x3, V161, V139, V156, 0x0]

================================

Block 0x27c
[0x27c:0x28a]
---
Predecessors: [0x20e]
Successors: [0x28b, 0x2ad]
---
0x27c JUMPDEST
0x27d DUP3
0x27e DUP1
0x27f ADD
0x280 PUSH1 0x1
0x282 ADD
0x283 DUP6
0x284 SSTORE
0x285 DUP3
0x286 ISZERO
0x287 PUSH2 0x2ad
0x28a JUMPI
---
0x27c: JUMPDEST 
0x27f: V172 = ADD V139 V139
0x280: V173 = 0x1
0x282: V174 = ADD 0x1 V172
0x284: S[0x3] = V174
0x286: V175 = ISZERO V139
0x287: V176 = 0x2ad
0x28a: JUMPI 0x2ad V175
---
Entry stack: [V8, 0x419, 0x3, V161, V139, V156, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V8, 0x419, 0x3, V161, V139, V156, 0x0]

================================

Block 0x28b
[0x28b:0x28d]
---
Predecessors: [0x27c]
Successors: [0x28e]
---
0x28b SWAP2
0x28c DUP3
0x28d ADD
---
0x28d: V177 = ADD 0x0 V139
---
Entry stack: [V8, 0x419, 0x3, V161, V139, V156, 0x0]
Stack pops: 3
Stack additions: [S0, S1, V177]
Exit stack: [V8, 0x419, 0x3, V161, 0x0, V156, V177]

================================

Block 0x28e
[0x28e:0x296]
---
Predecessors: [0x28b, 0x297]
Successors: [0x297, 0x2ac]
---
0x28e JUMPDEST
0x28f DUP3
0x290 DUP2
0x291 GT
0x292 ISZERO
0x293 PUSH2 0x2ac
0x296 JUMPI
---
0x28e: JUMPDEST 
0x291: V178 = GT V177 S2
0x292: V179 = ISZERO V178
0x293: V180 = 0x2ac
0x296: JUMPI 0x2ac V179
---
Entry stack: [V8, 0x419, 0x3, V161, S2, S1, V177]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0x419, 0x3, V161, S2, S1, V177]

================================

Block 0x297
[0x297:0x2ab]
---
Predecessors: [0x28e]
Successors: [0x28e]
---
0x297 DUP3
0x298 CALLDATALOAD
0x299 DUP3
0x29a PUSH1 0x0
0x29c POP
0x29d SSTORE
0x29e SWAP2
0x29f PUSH1 0x20
0x2a1 ADD
0x2a2 SWAP2
0x2a3 SWAP1
0x2a4 PUSH1 0x1
0x2a6 ADD
0x2a7 SWAP1
0x2a8 PUSH2 0x28e
0x2ab JUMP
---
0x298: V181 = CALLDATALOAD S2
0x29a: V182 = 0x0
0x29d: S[S1] = V181
0x29f: V183 = 0x20
0x2a1: V184 = ADD 0x20 S2
0x2a4: V185 = 0x1
0x2a6: V186 = ADD 0x1 S1
0x2a8: V187 = 0x28e
0x2ab: JUMP 0x28e
---
Entry stack: [V8, 0x419, 0x3, V161, S2, S1, V177]
Stack pops: 3
Stack additions: [V184, V186, S0]
Exit stack: [V8, 0x419, 0x3, V161, V184, V186, V177]

================================

Block 0x2ac
[0x2ac:0x2ac]
---
Predecessors: [0x28e]
Successors: [0x2ad]
---
0x2ac JUMPDEST
---
0x2ac: JUMPDEST 
---
Entry stack: [V8, 0x419, 0x3, V161, S2, S1, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x419, 0x3, V161, S2, S1, V177]

================================

Block 0x2ad
[0x2ad:0x2b9]
---
Predecessors: [0x26c, 0x27c, 0x2ac]
Successors: [0x2ba]
---
0x2ad JUMPDEST
0x2ae POP
0x2af SWAP1
0x2b0 POP
0x2b1 PUSH2 0x2d8
0x2b4 SWAP2
0x2b5 SWAP1
0x2b6 PUSH2 0x2ba
0x2b9 JUMP
---
0x2ad: JUMPDEST 
0x2b1: V188 = 0x2d8
0x2b6: V189 = 0x2ba
0x2b9: JUMP 0x2ba
---
Entry stack: [V8, 0x419, 0x3, V161, S2, S1, S0]
Stack pops: 4
Stack additions: [0x2d8, S3, S1]
Exit stack: [V8, 0x419, 0x3, 0x2d8, V161, S1]

================================

Block 0x2ba
[0x2ba:0x2c2]
---
Predecessors: [0x2ad, 0x2c3]
Successors: [0x2c3, 0x2d4]
---
0x2ba JUMPDEST
0x2bb DUP1
0x2bc DUP3
0x2bd GT
0x2be ISZERO
0x2bf PUSH2 0x2d4
0x2c2 JUMPI
---
0x2ba: JUMPDEST 
0x2bd: V190 = GT V161 S0
0x2be: V191 = ISZERO V190
0x2bf: V192 = 0x2d4
0x2c2: JUMPI 0x2d4 V191
---
Entry stack: [V8, 0x419, 0x3, 0x2d8, V161, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0x419, 0x3, 0x2d8, V161, S0]

================================

Block 0x2c3
[0x2c3:0x2d3]
---
Predecessors: [0x2ba]
Successors: [0x2ba]
---
0x2c3 PUSH1 0x0
0x2c5 DUP2
0x2c6 DUP2
0x2c7 POP
0x2c8 PUSH1 0x0
0x2ca SWAP1
0x2cb SSTORE
0x2cc POP
0x2cd PUSH1 0x1
0x2cf ADD
0x2d0 PUSH2 0x2ba
0x2d3 JUMP
---
0x2c3: V193 = 0x0
0x2c8: V194 = 0x0
0x2cb: S[S0] = 0x0
0x2cd: V195 = 0x1
0x2cf: V196 = ADD 0x1 S0
0x2d0: V197 = 0x2ba
0x2d3: JUMP 0x2ba
---
Entry stack: [V8, 0x419, 0x3, 0x2d8, V161, S0]
Stack pops: 1
Stack additions: [V196]
Exit stack: [V8, 0x419, 0x3, 0x2d8, V161, V196]

================================

Block 0x2d4
[0x2d4:0x2d7]
---
Predecessors: [0x2ba]
Successors: [0x2d8]
---
0x2d4 JUMPDEST
0x2d5 POP
0x2d6 SWAP1
0x2d7 JUMP
---
0x2d4: JUMPDEST 
0x2d7: JUMP 0x2d8
---
Entry stack: [V8, 0x419, 0x3, 0x2d8, V161, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0x419, 0x3, V161]

================================

Block 0x2d8
[0x2d8:0x2de]
---
Predecessors: [0x2d4]
Successors: [0x416]
---
0x2d8 JUMPDEST
0x2d9 POP
0x2da POP
0x2db PUSH2 0x416
0x2de JUMP
---
0x2d8: JUMPDEST 
0x2db: V198 = 0x416
0x2de: JUMP 0x416
---
Entry stack: [V8, 0x419, 0x3, V161]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0x419]

================================

Block 0x2df
[0x2df:0x38a]
---
Predecessors: [0x4c]
Successors: [0x38b, 0x3d1]
---
0x2df JUMPDEST
0x2e0 PUSH1 0x0
0x2e2 PUSH1 0x0
0x2e4 SWAP1
0x2e5 SLOAD
0x2e6 SWAP1
0x2e7 PUSH2 0x100
0x2ea EXP
0x2eb SWAP1
0x2ec DIV
0x2ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x302 AND
0x303 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x318 AND
0x319 PUSH4 0x2dc2e1d
0x31e CALLVALUE
0x31f PUSH1 0x3
0x321 PUSH1 0x0
0x323 POP
0x324 PUSH1 0x40
0x326 MLOAD
0x327 DUP4
0x328 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x346 MUL
0x347 DUP2
0x348 MSTORE
0x349 PUSH1 0x4
0x34b ADD
0x34c DUP1
0x34d DUP1
0x34e PUSH1 0x20
0x350 ADD
0x351 DUP3
0x352 DUP2
0x353 SUB
0x354 DUP3
0x355 MSTORE
0x356 DUP4
0x357 DUP2
0x358 DUP2
0x359 SLOAD
0x35a PUSH1 0x1
0x35c DUP2
0x35d PUSH1 0x1
0x35f AND
0x360 ISZERO
0x361 PUSH2 0x100
0x364 MUL
0x365 SUB
0x366 AND
0x367 PUSH1 0x2
0x369 SWAP1
0x36a DIV
0x36b DUP2
0x36c MSTORE
0x36d PUSH1 0x20
0x36f ADD
0x370 SWAP2
0x371 POP
0x372 DUP1
0x373 SLOAD
0x374 PUSH1 0x1
0x376 DUP2
0x377 PUSH1 0x1
0x379 AND
0x37a ISZERO
0x37b PUSH2 0x100
0x37e MUL
0x37f SUB
0x380 AND
0x381 PUSH1 0x2
0x383 SWAP1
0x384 DIV
0x385 DUP1
0x386 ISZERO
0x387 PUSH2 0x3d1
0x38a JUMPI
---
0x2df: JUMPDEST 
0x2e0: V199 = 0x0
0x2e2: V200 = 0x0
0x2e5: V201 = S[0x0]
0x2e7: V202 = 0x100
0x2ea: V203 = EXP 0x100 0x0
0x2ec: V204 = DIV V201 0x1
0x2ed: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x302: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x303: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x318: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x319: V209 = 0x2dc2e1d
0x31e: V210 = CALLVALUE
0x31f: V211 = 0x3
0x321: V212 = 0x0
0x324: V213 = 0x40
0x326: V214 = M[0x40]
0x328: V215 = 0x100000000000000000000000000000000000000000000000000000000
0x346: V216 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x2dc2e1d
0x348: M[V214] = 0x2dc2e1d00000000000000000000000000000000000000000000000000000000
0x349: V217 = 0x4
0x34b: V218 = ADD 0x4 V214
0x34e: V219 = 0x20
0x350: V220 = ADD 0x20 V218
0x353: V221 = SUB V220 V218
0x355: M[V218] = V221
0x359: V222 = S[0x3]
0x35a: V223 = 0x1
0x35d: V224 = 0x1
0x35f: V225 = AND 0x1 V222
0x360: V226 = ISZERO V225
0x361: V227 = 0x100
0x364: V228 = MUL 0x100 V226
0x365: V229 = SUB V228 0x1
0x366: V230 = AND V229 V222
0x367: V231 = 0x2
0x36a: V232 = DIV V230 0x2
0x36c: M[V220] = V232
0x36d: V233 = 0x20
0x36f: V234 = ADD 0x20 V220
0x373: V235 = S[0x3]
0x374: V236 = 0x1
0x377: V237 = 0x1
0x379: V238 = AND 0x1 V235
0x37a: V239 = ISZERO V238
0x37b: V240 = 0x100
0x37e: V241 = MUL 0x100 V239
0x37f: V242 = SUB V241 0x1
0x380: V243 = AND V242 V235
0x381: V244 = 0x2
0x384: V245 = DIV V243 0x2
0x386: V246 = ISZERO V245
0x387: V247 = 0x3d1
0x38a: JUMPI 0x3d1 V246
---
Entry stack: [V8, 0x419]
Stack pops: 0
Stack additions: [V208, 0x2dc2e1d, V210, 0x3, V218, V218, V234, 0x3, V245]
Exit stack: [V8, 0x419, V208, 0x2dc2e1d, V210, 0x3, V218, V218, V234, 0x3, V245]

================================

Block 0x38b
[0x38b:0x392]
---
Predecessors: [0x2df]
Successors: [0x393, 0x3a6]
---
0x38b DUP1
0x38c PUSH1 0x1f
0x38e LT
0x38f PUSH2 0x3a6
0x392 JUMPI
---
0x38c: V248 = 0x1f
0x38e: V249 = LT 0x1f V245
0x38f: V250 = 0x3a6
0x392: JUMPI 0x3a6 V249
---
Entry stack: [V8, 0x419, V208, 0x2dc2e1d, V210, 0x3, V218, V218, V234, 0x3, V245]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x419, V208, 0x2dc2e1d, V210, 0x3, V218, V218, V234, 0x3, V245]

================================

Block 0x393
[0x393:0x3a5]
---
Predecessors: [0x38b]
Successors: [0x3d1]
---
0x393 PUSH2 0x100
0x396 DUP1
0x397 DUP4
0x398 SLOAD
0x399 DIV
0x39a MUL
0x39b DUP4
0x39c MSTORE
0x39d SWAP2
0x39e PUSH1 0x20
0x3a0 ADD
0x3a1 SWAP2
0x3a2 PUSH2 0x3d1
0x3a5 JUMP
---
0x393: V251 = 0x100
0x398: V252 = S[0x3]
0x399: V253 = DIV V252 0x100
0x39a: V254 = MUL V253 0x100
0x39c: M[V234] = V254
0x39e: V255 = 0x20
0x3a0: V256 = ADD 0x20 V234
0x3a2: V257 = 0x3d1
0x3a5: JUMP 0x3d1
---
Entry stack: [V8, 0x419, V208, 0x2dc2e1d, V210, 0x3, V218, V218, V234, 0x3, V245]
Stack pops: 3
Stack additions: [V256, S1, S0]
Exit stack: [V8, 0x419, V208, 0x2dc2e1d, V210, 0x3, V218, V218, V256, 0x3, V245]

================================

Block 0x3a6
[0x3a6:0x3b3]
---
Predecessors: [0x38b]
Successors: [0x3b4]
---
0x3a6 JUMPDEST
0x3a7 DUP3
0x3a8 ADD
0x3a9 SWAP2
0x3aa SWAP1
0x3ab PUSH1 0x0
0x3ad MSTORE
0x3ae PUSH1 0x20
0x3b0 PUSH1 0x0
0x3b2 SHA3
0x3b3 SWAP1
---
0x3a6: JUMPDEST 
0x3a8: V258 = ADD V234 V245
0x3ab: V259 = 0x0
0x3ad: M[0x0] = 0x3
0x3ae: V260 = 0x20
0x3b0: V261 = 0x0
0x3b2: V262 = SHA3 0x0 0x20
---
Entry stack: [V8, 0x419, V208, 0x2dc2e1d, V210, 0x3, V218, V218, V234, 0x3, V245]
Stack pops: 3
Stack additions: [V258, V262, S2]
Exit stack: [V8, 0x419, V208, 0x2dc2e1d, V210, 0x3, V218, V218, V258, V262, V234]

================================

Block 0x3b4
[0x3b4:0x3c7]
---
Predecessors: [0x3a6, 0x3b4]
Successors: [0x3b4, 0x3c8]
---
0x3b4 JUMPDEST
0x3b5 DUP2
0x3b6 SLOAD
0x3b7 DUP2
0x3b8 MSTORE
0x3b9 SWAP1
0x3ba PUSH1 0x1
0x3bc ADD
0x3bd SWAP1
0x3be PUSH1 0x20
0x3c0 ADD
0x3c1 DUP1
0x3c2 DUP4
0x3c3 GT
0x3c4 PUSH2 0x3b4
0x3c7 JUMPI
---
0x3b4: JUMPDEST 
0x3b6: V263 = S[S1]
0x3b8: M[S0] = V263
0x3ba: V264 = 0x1
0x3bc: V265 = ADD 0x1 S1
0x3be: V266 = 0x20
0x3c0: V267 = ADD 0x20 S0
0x3c3: V268 = GT V258 V267
0x3c4: V269 = 0x3b4
0x3c7: JUMPI 0x3b4 V268
---
Entry stack: [V8, 0x419, V208, 0x2dc2e1d, V210, 0x3, V218, V218, V258, S1, S0]
Stack pops: 3
Stack additions: [S2, V265, V267]
Exit stack: [V8, 0x419, V208, 0x2dc2e1d, V210, 0x3, V218, V218, V258, V265, V267]

================================

Block 0x3c8
[0x3c8:0x3d0]
---
Predecessors: [0x3b4]
Successors: [0x3d1]
---
0x3c8 DUP3
0x3c9 SWAP1
0x3ca SUB
0x3cb PUSH1 0x1f
0x3cd AND
0x3ce DUP3
0x3cf ADD
0x3d0 SWAP2
---
0x3ca: V270 = SUB V267 V258
0x3cb: V271 = 0x1f
0x3cd: V272 = AND 0x1f V270
0x3cf: V273 = ADD V258 V272
---
Entry stack: [V8, 0x419, V208, 0x2dc2e1d, V210, 0x3, V218, V218, V258, V265, V267]
Stack pops: 3
Stack additions: [V273, S1, S2]
Exit stack: [V8, 0x419, V208, 0x2dc2e1d, V210, 0x3, V218, V218, V273, V265, V258]

================================

Block 0x3d1
[0x3d1:0x3ed]
---
Predecessors: [0x2df, 0x393, 0x3c8]
Successors: [0x3ee]
---
0x3d1 JUMPDEST
0x3d2 POP
0x3d3 POP
0x3d4 SWAP3
0x3d5 POP
0x3d6 POP
0x3d7 POP
0x3d8 PUSH1 0x20
0x3da PUSH1 0x40
0x3dc MLOAD
0x3dd DUP1
0x3de DUP4
0x3df SUB
0x3e0 DUP2
0x3e1 DUP6
0x3e2 DUP9
0x3e3 PUSH2 0x8502
0x3e6 GAS
0x3e7 SUB
0x3e8 CALL
0x3e9 ISZERO
0x3ea PUSH2 0x2
0x3ed JUMPI
---
0x3d1: JUMPDEST 
0x3d8: V274 = 0x20
0x3da: V275 = 0x40
0x3dc: V276 = M[0x40]
0x3df: V277 = SUB S2 V276
0x3e3: V278 = 0x8502
0x3e6: V279 = GAS
0x3e7: V280 = SUB V279 0x8502
0x3e8: V281 = CALL V280 V208 V210 V276 V277 V276 0x20
0x3e9: V282 = ISZERO V281
0x3ea: V283 = 0x2
0x3ed: THROWI V282
---
Entry stack: [V8, 0x419, V208, 0x2dc2e1d, V210, 0x3, V218, V218, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S2]
Exit stack: [V8, 0x419, V208, 0x2dc2e1d, V210, S2]

================================

Block 0x3ee
[0x3ee:0x415]
---
Predecessors: [0x3d1]
Successors: [0x416]
---
0x3ee POP
0x3ef POP
0x3f0 POP
0x3f1 POP
0x3f2 PUSH1 0x40
0x3f4 MLOAD
0x3f5 DUP1
0x3f6 MLOAD
0x3f7 SWAP1
0x3f8 PUSH1 0x20
0x3fa ADD
0x3fb POP
0x3fc POP
0x3fd PUSH1 0x0
0x3ff PUSH1 0x1
0x401 PUSH1 0x14
0x403 PUSH2 0x100
0x406 EXP
0x407 DUP2
0x408 SLOAD
0x409 DUP2
0x40a PUSH1 0xff
0x40c MUL
0x40d NOT
0x40e AND
0x40f SWAP1
0x410 DUP4
0x411 MUL
0x412 OR
0x413 SWAP1
0x414 SSTORE
0x415 POP
---
0x3f2: V284 = 0x40
0x3f4: V285 = M[0x40]
0x3f6: V286 = M[V285]
0x3f8: V287 = 0x20
0x3fa: V288 = ADD 0x20 V285
0x3fd: V289 = 0x0
0x3ff: V290 = 0x1
0x401: V291 = 0x14
0x403: V292 = 0x100
0x406: V293 = EXP 0x100 0x14
0x408: V294 = S[0x1]
0x40a: V295 = 0xff
0x40c: V296 = MUL 0xff 0x10000000000000000000000000000000000000000
0x40d: V297 = NOT 0xff0000000000000000000000000000000000000000
0x40e: V298 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V294
0x411: V299 = MUL 0x0 0x10000000000000000000000000000000000000000
0x412: V300 = OR 0x0 V298
0x414: S[0x1] = V300
---
Entry stack: [V8, 0x419, V208, 0x2dc2e1d, V210, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V8, 0x419]

================================

Block 0x416
[0x416:0x416]
---
Predecessors: [0x2d8, 0x3ee]
Successors: [0x417]
---
0x416 JUMPDEST
---
0x416: JUMPDEST 
---
Entry stack: [V8, 0x419]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x419]

================================

Block 0x417
[0x417:0x418]
---
Predecessors: [0xcd, 0x1d7, 0x416]
Successors: [0x419]
---
0x417 JUMPDEST
0x418 JUMP
---
0x417: JUMPDEST 
0x418: JUMP 0x419
---
Entry stack: [V8, 0x419]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x419
[0x419:0x41a]
---
Predecessors: [0x417]
Successors: []
---
0x419 JUMPDEST
0x41a STOP
---
0x419: JUMPDEST 
0x41a: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x41b
[0x41b:0x427]
---
Predecessors: [0xb]
Successors: [0x4b3]
---
0x41b JUMPDEST
0x41c PUSH2 0x428
0x41f PUSH1 0x4
0x421 DUP1
0x422 POP
0x423 POP
0x424 PUSH2 0x4b3
0x427 JUMP
---
0x41b: JUMPDEST 
0x41c: V301 = 0x428
0x41f: V302 = 0x4
0x424: V303 = 0x4b3
0x427: JUMP 0x4b3
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x428]
Exit stack: [V8, 0x428]

================================

Block 0x428
[0x428:0x453]
---
Predecessors: [0x4b3]
Successors: []
---
0x428 JUMPDEST
0x429 PUSH1 0x40
0x42b MLOAD
0x42c DUP1
0x42d DUP3
0x42e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x443 AND
0x444 DUP2
0x445 MSTORE
0x446 PUSH1 0x20
0x448 ADD
0x449 SWAP2
0x44a POP
0x44b POP
0x44c PUSH1 0x40
0x44e MLOAD
0x44f DUP1
0x450 SWAP2
0x451 SUB
0x452 SWAP1
0x453 RETURN
---
0x428: JUMPDEST 
0x429: V304 = 0x40
0x42b: V305 = M[0x40]
0x42e: V306 = 0xffffffffffffffffffffffffffffffffffffffff
0x443: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x445: M[V305] = V307
0x446: V308 = 0x20
0x448: V309 = ADD 0x20 V305
0x44c: V310 = 0x40
0x44e: V311 = M[0x40]
0x451: V312 = SUB V309 V311
0x453: RETURN V311 V312
---
Entry stack: [V8, 0x428, V340]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x428]

================================

Block 0x454
[0x454:0x460]
---
Predecessors: [0x39]
Successors: [0x48d]
---
0x454 JUMPDEST
0x455 PUSH2 0x461
0x458 PUSH1 0x4
0x45a DUP1
0x45b POP
0x45c POP
0x45d PUSH2 0x48d
0x460 JUMP
---
0x454: JUMPDEST 
0x455: V313 = 0x461
0x458: V314 = 0x4
0x45d: V315 = 0x48d
0x460: JUMP 0x48d
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x461]
Exit stack: [V8, 0x461]

================================

Block 0x461
[0x461:0x48c]
---
Predecessors: [0x48d]
Successors: []
---
0x461 JUMPDEST
0x462 PUSH1 0x40
0x464 MLOAD
0x465 DUP1
0x466 DUP3
0x467 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47c AND
0x47d DUP2
0x47e MSTORE
0x47f PUSH1 0x20
0x481 ADD
0x482 SWAP2
0x483 POP
0x484 POP
0x485 PUSH1 0x40
0x487 MLOAD
0x488 DUP1
0x489 SWAP2
0x48a SUB
0x48b SWAP1
0x48c RETURN
---
0x461: JUMPDEST 
0x462: V316 = 0x40
0x464: V317 = M[0x40]
0x467: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x47c: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x47e: M[V317] = V319
0x47f: V320 = 0x20
0x481: V321 = ADD 0x20 V317
0x485: V322 = 0x40
0x487: V323 = M[0x40]
0x48a: V324 = SUB V321 V323
0x48c: RETURN V323 V324
---
Entry stack: [V8, 0x461, V332]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x461]

================================

Block 0x48d
[0x48d:0x4b2]
---
Predecessors: [0x454]
Successors: [0x461]
---
0x48d JUMPDEST
0x48e PUSH1 0x0
0x490 PUSH1 0x0
0x492 SWAP1
0x493 SLOAD
0x494 SWAP1
0x495 PUSH2 0x100
0x498 EXP
0x499 SWAP1
0x49a DIV
0x49b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b0 AND
0x4b1 DUP2
0x4b2 JUMP
---
0x48d: JUMPDEST 
0x48e: V325 = 0x0
0x490: V326 = 0x0
0x493: V327 = S[0x0]
0x495: V328 = 0x100
0x498: V329 = EXP 0x100 0x0
0x49a: V330 = DIV V327 0x1
0x49b: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b0: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x4b2: JUMP 0x461
---
Entry stack: [V8, 0x461]
Stack pops: 1
Stack additions: [S0, V332]
Exit stack: [V8, 0x461, V332]

================================

Block 0x4b3
[0x4b3:0x4d8]
---
Predecessors: [0x41b]
Successors: [0x428]
---
0x4b3 JUMPDEST
0x4b4 PUSH1 0x1
0x4b6 PUSH1 0x0
0x4b8 SWAP1
0x4b9 SLOAD
0x4ba SWAP1
0x4bb PUSH2 0x100
0x4be EXP
0x4bf SWAP1
0x4c0 DIV
0x4c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d6 AND
0x4d7 DUP2
0x4d8 JUMP
---
0x4b3: JUMPDEST 
0x4b4: V333 = 0x1
0x4b6: V334 = 0x0
0x4b9: V335 = S[0x1]
0x4bb: V336 = 0x100
0x4be: V337 = EXP 0x100 0x0
0x4c0: V338 = DIV V335 0x1
0x4c1: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d6: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x4d8: JUMP 0x428
---
Entry stack: [V8, 0x428]
Stack pops: 1
Stack additions: [S0, V340]
Exit stack: [V8, 0x428, V340]

================================

Function 0:
Public function signature: 0x45d03fce
Entry block: 0x41b
Exit block: 0x428
Body: 0x41b, 0x428, 0x4b3

Function 1:
Public function signature: 0xb4b31bec
Entry block: 0x454
Exit block: 0x461
Body: 0x454, 0x461, 0x48d

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0x419
Body: 0x44, 0x48, 0x4c, 0xa4, 0xba, 0xc7, 0xcd, 0x104, 0x1c2, 0x1d7, 0x20e, 0x26c, 0x27c, 0x28b, 0x28e, 0x297, 0x2ac, 0x2ad, 0x2ba, 0x2c3, 0x2d4, 0x2d8, 0x2df, 0x38b, 0x393, 0x3a6, 0x3b4, 0x3c8, 0x3d1, 0x3ee, 0x416, 0x417, 0x419

