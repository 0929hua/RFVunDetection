Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x77]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x77
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x77
0xa: JUMPI 0x77 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x93]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x1cb3b20
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x93
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x1cb3b20
0x1a: V12 = EQ V10 0x1cb3b20
0x1b: V13 = 0x93
0x1e: JUMPI 0x93 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x22a]
---
0x1f DUP1
0x20 PUSH4 0x29dcb0cf
0x25 EQ
0x26 PUSH2 0x22a
0x29 JUMPI
---
0x20: V14 = 0x29dcb0cf
0x25: V15 = EQ 0x29dcb0cf V10
0x26: V16 = 0x22a
0x29: JUMPI 0x22a V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x238]
---
0x2a DUP1
0x2b PUSH4 0x38af3eed
0x30 EQ
0x31 PUSH2 0x238
0x34 JUMPI
---
0x2b: V17 = 0x38af3eed
0x30: V18 = EQ 0x38af3eed V10
0x31: V19 = 0x238
0x34: JUMPI 0x238 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x24f]
---
0x35 DUP1
0x36 PUSH4 0x6e66f6e9
0x3b EQ
0x3c PUSH2 0x24f
0x3f JUMPI
---
0x36: V20 = 0x6e66f6e9
0x3b: V21 = EQ 0x6e66f6e9 V10
0x3c: V22 = 0x24f
0x3f: JUMPI 0x24f V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x266]
---
0x40 DUP1
0x41 PUSH4 0x70a08231
0x46 EQ
0x47 PUSH2 0x266
0x4a JUMPI
---
0x41: V23 = 0x70a08231
0x46: V24 = EQ 0x70a08231 V10
0x47: V25 = 0x266
0x4a: JUMPI 0x266 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x283]
---
0x4b DUP1
0x4c PUSH4 0x7a3a0e84
0x51 EQ
0x52 PUSH2 0x283
0x55 JUMPI
---
0x4c: V26 = 0x7a3a0e84
0x51: V27 = EQ 0x7a3a0e84 V10
0x52: V28 = 0x283
0x55: JUMPI 0x283 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x291]
---
0x56 DUP1
0x57 PUSH4 0x7b3e5e7b
0x5c EQ
0x5d PUSH2 0x291
0x60 JUMPI
---
0x57: V29 = 0x7b3e5e7b
0x5c: V30 = EQ 0x7b3e5e7b V10
0x5d: V31 = 0x291
0x60: JUMPI 0x291 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x29f]
---
0x61 DUP1
0x62 PUSH4 0xa035b1fe
0x67 EQ
0x68 PUSH2 0x29f
0x6b JUMPI
---
0x62: V32 = 0xa035b1fe
0x67: V33 = EQ 0xa035b1fe V10
0x68: V34 = 0x29f
0x6b: JUMPI 0x29f V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x2ad]
---
0x6c DUP1
0x6d PUSH4 0xfd6b7ef8
0x72 EQ
0x73 PUSH2 0x2ad
0x76 JUMPI
---
0x6d: V35 = 0xfd6b7ef8
0x72: V36 = EQ 0xfd6b7ef8 V10
0x73: V37 = 0x2ad
0x76: JUMPI 0x2ad V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x8e]
---
Predecessors: [0x0, 0x6c]
Successors: [0x8f, 0x36e]
---
0x77 JUMPDEST
0x78 PUSH2 0x36c
0x7b PUSH1 0x7
0x7d SLOAD
0x7e PUSH1 0x0
0x80 SWAP1
0x81 PUSH1 0xff
0x83 PUSH2 0x100
0x86 SWAP1
0x87 SWAP2
0x88 DIV
0x89 AND
0x8a ISZERO
0x8b PUSH2 0x36e
0x8e JUMPI
---
0x77: JUMPDEST 
0x78: V38 = 0x36c
0x7b: V39 = 0x7
0x7d: V40 = S[0x7]
0x7e: V41 = 0x0
0x81: V42 = 0xff
0x83: V43 = 0x100
0x88: V44 = DIV V40 0x100
0x89: V45 = AND V44 0xff
0x8a: V46 = ISZERO V45
0x8b: V47 = 0x36e
0x8e: JUMPI 0x36e V46
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x36c, 0x0]
Exit stack: [V10, 0x36c, 0x0]

================================

Block 0x8f
[0x8f:0x92]
---
Predecessors: [0x77]
Successors: []
---
0x8f PUSH2 0x2
0x92 JUMP
---
0x8f: V48 = 0x2
0x92: THROW 
---
Entry stack: [V10, 0x36c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x36c, 0x0]

================================

Block 0x93
[0x93:0x98]
---
Predecessors: [0xb]
Successors: [0x99]
---
0x93 JUMPDEST
0x94 CALLVALUE
0x95 PUSH2 0x2
0x98 JUMPI
---
0x93: JUMPDEST 
0x94: V49 = CALLVALUE
0x95: V50 = 0x2
0x98: THROWI V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x99
[0x99:0xa9]
---
Predecessors: [0x93]
Successors: [0xaa, 0x226]
---
0x99 PUSH2 0x36c
0x9c PUSH1 0x3
0x9e SLOAD
0x9f PUSH1 0x0
0xa1 SWAP1
0xa2 DUP2
0xa3 SWAP1
0xa4 TIMESTAMP
0xa5 LT
0xa6 PUSH2 0x226
0xa9 JUMPI
---
0x99: V51 = 0x36c
0x9c: V52 = 0x3
0x9e: V53 = S[0x3]
0x9f: V54 = 0x0
0xa4: V55 = TIMESTAMP
0xa5: V56 = LT V55 V53
0xa6: V57 = 0x226
0xa9: JUMPI 0x226 V56
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x36c, 0x0, 0x0]
Exit stack: [V10, 0x36c, 0x0, 0x0]

================================

Block 0xaa
[0xaa:0xcc]
---
Predecessors: [0x99]
Successors: [0xcd, 0x125]
---
0xaa PUSH1 0x2
0xac SLOAD
0xad PUSH1 0x1
0xaf SLOAD
0xb0 PUSH20 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
0xc5 SWAP4
0xc6 POP
0xc7 SWAP1
0xc8 LT
0xc9 PUSH2 0x125
0xcc JUMPI
---
0xaa: V58 = 0x2
0xac: V59 = S[0x2]
0xad: V60 = 0x1
0xaf: V61 = S[0x1]
0xb0: V62 = 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
0xc8: V63 = LT V59 V61
0xc9: V64 = 0x125
0xcc: JUMPI 0x125 V63
---
Entry stack: [V10, 0x36c, 0x0, 0x0]
Stack pops: 2
Stack additions: [0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, S0]
Exit stack: [V10, 0x36c, 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, 0x0]

================================

Block 0xcd
[0xcd:0x124]
---
Predecessors: [0xaa]
Successors: [0x125]
---
0xcd PUSH1 0x7
0xcf DUP1
0xd0 SLOAD
0xd1 PUSH1 0x2
0xd3 SLOAD
0xd4 PUSH1 0xff
0xd6 NOT
0xd7 SWAP1
0xd8 SWAP2
0xd9 AND
0xda PUSH1 0x1
0xdc OR
0xdd SWAP1
0xde SWAP2
0xdf SSTORE
0xe0 PUSH1 0x40
0xe2 DUP1
0xe3 MLOAD
0xe4 DUP4
0xe5 SLOAD
0xe6 PUSH1 0x1
0xe8 PUSH1 0xa0
0xea PUSH1 0x2
0xec EXP
0xed SUB
0xee AND
0xef DUP2
0xf0 MSTORE
0xf1 PUSH1 0x20
0xf3 DUP2
0xf4 ADD
0xf5 SWAP3
0xf6 SWAP1
0xf7 SWAP3
0xf8 MSTORE
0xf9 DUP1
0xfa MLOAD
0xfb PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x11c SWAP3
0x11d DUP2
0x11e SWAP1
0x11f SUB
0x120 SWAP1
0x121 SWAP2
0x122 ADD
0x123 SWAP1
0x124 LOG1
---
0xcd: V65 = 0x7
0xd0: V66 = S[0x7]
0xd1: V67 = 0x2
0xd3: V68 = S[0x2]
0xd4: V69 = 0xff
0xd6: V70 = NOT 0xff
0xd9: V71 = AND V66 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0xda: V72 = 0x1
0xdc: V73 = OR 0x1 V71
0xdf: S[0x7] = V73
0xe0: V74 = 0x40
0xe3: V75 = M[0x40]
0xe5: V76 = S[0x0]
0xe6: V77 = 0x1
0xe8: V78 = 0xa0
0xea: V79 = 0x2
0xec: V80 = EXP 0x2 0xa0
0xed: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0xee: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0xf0: M[V75] = V82
0xf1: V83 = 0x20
0xf4: V84 = ADD V75 0x20
0xf8: M[V84] = V68
0xfa: V85 = M[0x40]
0xfb: V86 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x11f: V87 = SUB V75 V85
0x122: V88 = ADD 0x40 V87
0x124: LOG V85 V88 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V10, 0x36c, 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x36c, 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, 0x0]

================================

Block 0x125
[0x125:0x19f]
---
Predecessors: [0xaa, 0xcd]
Successors: [0x1a0]
---
0x125 JUMPDEST
0x126 PUSH1 0x7
0x128 DUP1
0x129 SLOAD
0x12a PUSH2 0xff00
0x12d NOT
0x12e AND
0x12f PUSH2 0x100
0x132 OR
0x133 SWAP1
0x134 SSTORE
0x135 PUSH1 0x5
0x137 SLOAD
0x138 PUSH1 0x40
0x13a DUP1
0x13b MLOAD
0x13c PUSH1 0x0
0x13e PUSH1 0x20
0x140 SWAP2
0x141 DUP3
0x142 ADD
0x143 DUP2
0x144 SWAP1
0x145 MSTORE
0x146 DUP3
0x147 MLOAD
0x148 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x169 DUP2
0x16a MSTORE
0x16b ADDRESS
0x16c PUSH1 0x1
0x16e PUSH1 0xa0
0x170 PUSH1 0x2
0x172 EXP
0x173 SUB
0x174 SWAP1
0x175 DUP2
0x176 AND
0x177 PUSH1 0x4
0x179 DUP4
0x17a ADD
0x17b MSTORE
0x17c SWAP4
0x17d MLOAD
0x17e SWAP5
0x17f SWAP1
0x180 SWAP4
0x181 AND
0x182 SWAP4
0x183 PUSH4 0x70a08231
0x188 SWAP4
0x189 PUSH1 0x24
0x18b DUP1
0x18c DUP3
0x18d ADD
0x18e SWAP5
0x18f SWAP4
0x190 SWAP2
0x191 DUP4
0x192 SWAP1
0x193 SUB
0x194 ADD
0x195 SWAP1
0x196 DUP3
0x197 SWAP1
0x198 DUP8
0x199 DUP1
0x19a EXTCODESIZE
0x19b ISZERO
0x19c PUSH2 0x2
0x19f JUMPI
---
0x125: JUMPDEST 
0x126: V89 = 0x7
0x129: V90 = S[0x7]
0x12a: V91 = 0xff00
0x12d: V92 = NOT 0xff00
0x12e: V93 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V90
0x12f: V94 = 0x100
0x132: V95 = OR 0x100 V93
0x134: S[0x7] = V95
0x135: V96 = 0x5
0x137: V97 = S[0x5]
0x138: V98 = 0x40
0x13b: V99 = M[0x40]
0x13c: V100 = 0x0
0x13e: V101 = 0x20
0x142: V102 = ADD 0x20 V99
0x145: M[V102] = 0x0
0x147: V103 = M[0x40]
0x148: V104 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x16a: M[V103] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x16b: V105 = ADDRESS
0x16c: V106 = 0x1
0x16e: V107 = 0xa0
0x170: V108 = 0x2
0x172: V109 = EXP 0x2 0xa0
0x173: V110 = SUB 0x10000000000000000000000000000000000000000 0x1
0x176: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x177: V112 = 0x4
0x17a: V113 = ADD V103 0x4
0x17b: M[V113] = V111
0x17d: V114 = M[0x40]
0x181: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x183: V116 = 0x70a08231
0x189: V117 = 0x24
0x18d: V118 = ADD V103 0x24
0x193: V119 = SUB V103 V114
0x194: V120 = ADD V119 0x24
0x19a: V121 = EXTCODESIZE V115
0x19b: V122 = ISZERO V121
0x19c: V123 = 0x2
0x19f: THROWI V122
---
Entry stack: [V10, 0x36c, 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, 0x0]
Stack pops: 0
Stack additions: [V115, 0x70a08231, V118, 0x20, V114, V120, V114, 0x0, V115]
Exit stack: [V10, 0x36c, 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, 0x0, V115, 0x70a08231, V118, 0x20, V114, V120, V114, 0x0, V115]

================================

Block 0x1a0
[0x1a0:0x1a9]
---
Predecessors: [0x125]
Successors: [0x1aa]
---
0x1a0 PUSH1 0x32
0x1a2 GAS
0x1a3 SUB
0x1a4 CALL
0x1a5 ISZERO
0x1a6 PUSH2 0x2
0x1a9 JUMPI
---
0x1a0: V124 = 0x32
0x1a2: V125 = GAS
0x1a3: V126 = SUB V125 0x32
0x1a4: V127 = CALL V126 V115 0x0 V114 V120 V114 0x20
0x1a5: V128 = ISZERO V127
0x1a6: V129 = 0x2
0x1a9: THROWI V128
---
Entry stack: [V10, 0x36c, 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, 0x0, V115, 0x70a08231, V118, 0x20, V114, V120, V114, 0x0, V115]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x36c, 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, 0x0, V115, 0x70a08231, V118]

================================

Block 0x1aa
[0x1aa:0x218]
---
Predecessors: [0x1a0]
Successors: [0x219]
---
0x1aa POP
0x1ab POP
0x1ac PUSH1 0x5
0x1ae SLOAD
0x1af PUSH1 0x40
0x1b1 DUP1
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 MLOAD
0x1b5 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1d6 DUP3
0x1d7 MSTORE
0x1d8 PUSH1 0x1
0x1da PUSH1 0xa0
0x1dc PUSH1 0x2
0x1de EXP
0x1df SUB
0x1e0 DUP8
0x1e1 DUP2
0x1e2 AND
0x1e3 PUSH1 0x4
0x1e5 DUP5
0x1e6 ADD
0x1e7 MSTORE
0x1e8 PUSH1 0x24
0x1ea DUP4
0x1eb ADD
0x1ec DUP3
0x1ed SWAP1
0x1ee MSTORE
0x1ef SWAP3
0x1f0 MLOAD
0x1f1 SWAP1
0x1f2 SWAP6
0x1f3 POP
0x1f4 SWAP3
0x1f5 SWAP1
0x1f6 SWAP2
0x1f7 AND
0x1f8 SWAP3
0x1f9 POP
0x1fa PUSH4 0xa9059cbb
0x1ff SWAP2
0x200 PUSH1 0x44
0x202 DUP3
0x203 DUP2
0x204 ADD
0x205 SWAP3
0x206 PUSH1 0x0
0x208 SWAP3
0x209 SWAP2
0x20a SWAP1
0x20b DUP3
0x20c SWAP1
0x20d SUB
0x20e ADD
0x20f DUP2
0x210 DUP4
0x211 DUP8
0x212 DUP1
0x213 EXTCODESIZE
0x214 ISZERO
0x215 PUSH2 0x2
0x218 JUMPI
---
0x1ac: V130 = 0x5
0x1ae: V131 = S[0x5]
0x1af: V132 = 0x40
0x1b2: V133 = M[0x40]
0x1b4: V134 = M[V133]
0x1b5: V135 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1d7: M[V133] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1d8: V136 = 0x1
0x1da: V137 = 0xa0
0x1dc: V138 = 0x2
0x1de: V139 = EXP 0x2 0xa0
0x1df: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e2: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
0x1e3: V142 = 0x4
0x1e6: V143 = ADD V133 0x4
0x1e7: M[V143] = 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
0x1e8: V144 = 0x24
0x1eb: V145 = ADD V133 0x24
0x1ee: M[V145] = V134
0x1f0: V146 = M[0x40]
0x1f7: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x1fa: V148 = 0xa9059cbb
0x200: V149 = 0x44
0x204: V150 = ADD 0x44 V133
0x206: V151 = 0x0
0x20d: V152 = SUB V133 V146
0x20e: V153 = ADD V152 0x44
0x213: V154 = EXTCODESIZE V147
0x214: V155 = ISZERO V154
0x215: V156 = 0x2
0x218: THROWI V155
---
Entry stack: [V10, 0x36c, 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, 0x0, V115, 0x70a08231, V118]
Stack pops: 5
Stack additions: [S4, V134, V147, 0xa9059cbb, V150, 0x0, V146, V153, V146, 0x0, V147]
Exit stack: [V10, 0x36c, 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, V134, V147, 0xa9059cbb, V150, 0x0, V146, V153, V146, 0x0, V147]

================================

Block 0x219
[0x219:0x222]
---
Predecessors: [0x1aa]
Successors: [0x223]
---
0x219 PUSH1 0x32
0x21b GAS
0x21c SUB
0x21d CALL
0x21e ISZERO
0x21f PUSH2 0x2
0x222 JUMPI
---
0x219: V157 = 0x32
0x21b: V158 = GAS
0x21c: V159 = SUB V158 0x32
0x21d: V160 = CALL V159 V147 0x0 V146 V153 V146 0x0
0x21e: V161 = ISZERO V160
0x21f: V162 = 0x2
0x222: THROWI V161
---
Entry stack: [V10, 0x36c, 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, V134, V147, 0xa9059cbb, V150, 0x0, V146, V153, V146, 0x0, V147]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x36c, 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, V134, V147, 0xa9059cbb, V150]

================================

Block 0x223
[0x223:0x225]
---
Predecessors: [0x219]
Successors: [0x226]
---
0x223 POP
0x224 POP
0x225 POP
---
0x223: NOP 
---
Entry stack: [V10, 0x36c, 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, V134, V147, 0xa9059cbb, V150]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x36c, 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, V134]

================================

Block 0x226
[0x226:0x229]
---
Predecessors: [0x99, 0x223]
Successors: [0x36c]
---
0x226 JUMPDEST
0x227 POP
0x228 POP
0x229 JUMP
---
0x226: JUMPDEST 
0x229: JUMP 0x36c
---
Entry stack: [V10, 0x36c, {0x0, 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef}, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x22a
[0x22a:0x22f]
---
Predecessors: [0x1f]
Successors: [0x230]
---
0x22a JUMPDEST
0x22b CALLVALUE
0x22c PUSH2 0x2
0x22f JUMPI
---
0x22a: JUMPDEST 
0x22b: V163 = CALLVALUE
0x22c: V164 = 0x2
0x22f: THROWI V163
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x230
[0x230:0x237]
---
Predecessors: [0x22a]
Successors: [0x445]
---
0x230 PUSH2 0x445
0x233 PUSH1 0x3
0x235 SLOAD
0x236 DUP2
0x237 JUMP
---
0x230: V165 = 0x445
0x233: V166 = 0x3
0x235: V167 = S[0x3]
0x237: JUMP 0x445
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x445, V167]
Exit stack: [V10, 0x445, V167]

================================

Block 0x238
[0x238:0x23d]
---
Predecessors: [0x2a]
Successors: [0x23e]
---
0x238 JUMPDEST
0x239 CALLVALUE
0x23a PUSH2 0x2
0x23d JUMPI
---
0x238: JUMPDEST 
0x239: V168 = CALLVALUE
0x23a: V169 = 0x2
0x23d: THROWI V168
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x23e
[0x23e:0x24e]
---
Predecessors: [0x238]
Successors: [0x457]
---
0x23e PUSH2 0x457
0x241 PUSH1 0x0
0x243 SLOAD
0x244 PUSH1 0x1
0x246 PUSH1 0xa0
0x248 PUSH1 0x2
0x24a EXP
0x24b SUB
0x24c AND
0x24d DUP2
0x24e JUMP
---
0x23e: V170 = 0x457
0x241: V171 = 0x0
0x243: V172 = S[0x0]
0x244: V173 = 0x1
0x246: V174 = 0xa0
0x248: V175 = 0x2
0x24a: V176 = EXP 0x2 0xa0
0x24b: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24c: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x24e: JUMP 0x457
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x457, V178]
Exit stack: [V10, 0x457, V178]

================================

Block 0x24f
[0x24f:0x254]
---
Predecessors: [0x35]
Successors: [0x255]
---
0x24f JUMPDEST
0x250 CALLVALUE
0x251 PUSH2 0x2
0x254 JUMPI
---
0x24f: JUMPDEST 
0x250: V179 = CALLVALUE
0x251: V180 = 0x2
0x254: THROWI V179
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x255
[0x255:0x265]
---
Predecessors: [0x24f]
Successors: [0x457]
---
0x255 PUSH2 0x457
0x258 PUSH1 0x5
0x25a SLOAD
0x25b PUSH1 0x1
0x25d PUSH1 0xa0
0x25f PUSH1 0x2
0x261 EXP
0x262 SUB
0x263 AND
0x264 DUP2
0x265 JUMP
---
0x255: V181 = 0x457
0x258: V182 = 0x5
0x25a: V183 = S[0x5]
0x25b: V184 = 0x1
0x25d: V185 = 0xa0
0x25f: V186 = 0x2
0x261: V187 = EXP 0x2 0xa0
0x262: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x263: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x265: JUMP 0x457
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x457, V189]
Exit stack: [V10, 0x457, V189]

================================

Block 0x266
[0x266:0x26b]
---
Predecessors: [0x40]
Successors: [0x26c]
---
0x266 JUMPDEST
0x267 CALLVALUE
0x268 PUSH2 0x2
0x26b JUMPI
---
0x266: JUMPDEST 
0x267: V190 = CALLVALUE
0x268: V191 = 0x2
0x26b: THROWI V190
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26c
[0x26c:0x282]
---
Predecessors: [0x266]
Successors: [0x445]
---
0x26c PUSH2 0x445
0x26f PUSH1 0x4
0x271 CALLDATALOAD
0x272 PUSH1 0x6
0x274 PUSH1 0x20
0x276 MSTORE
0x277 PUSH1 0x0
0x279 SWAP1
0x27a DUP2
0x27b MSTORE
0x27c PUSH1 0x40
0x27e SWAP1
0x27f SHA3
0x280 SLOAD
0x281 DUP2
0x282 JUMP
---
0x26c: V192 = 0x445
0x26f: V193 = 0x4
0x271: V194 = CALLDATALOAD 0x4
0x272: V195 = 0x6
0x274: V196 = 0x20
0x276: M[0x20] = 0x6
0x277: V197 = 0x0
0x27b: M[0x0] = V194
0x27c: V198 = 0x40
0x27f: V199 = SHA3 0x0 0x40
0x280: V200 = S[V199]
0x282: JUMP 0x445
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x445, V200]
Exit stack: [V10, 0x445, V200]

================================

Block 0x283
[0x283:0x288]
---
Predecessors: [0x4b]
Successors: [0x289]
---
0x283 JUMPDEST
0x284 CALLVALUE
0x285 PUSH2 0x2
0x288 JUMPI
---
0x283: JUMPDEST 
0x284: V201 = CALLVALUE
0x285: V202 = 0x2
0x288: THROWI V201
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x289
[0x289:0x290]
---
Predecessors: [0x283]
Successors: [0x445]
---
0x289 PUSH2 0x445
0x28c PUSH1 0x1
0x28e SLOAD
0x28f DUP2
0x290 JUMP
---
0x289: V203 = 0x445
0x28c: V204 = 0x1
0x28e: V205 = S[0x1]
0x290: JUMP 0x445
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x445, V205]
Exit stack: [V10, 0x445, V205]

================================

Block 0x291
[0x291:0x296]
---
Predecessors: [0x56]
Successors: [0x297]
---
0x291 JUMPDEST
0x292 CALLVALUE
0x293 PUSH2 0x2
0x296 JUMPI
---
0x291: JUMPDEST 
0x292: V206 = CALLVALUE
0x293: V207 = 0x2
0x296: THROWI V206
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x297
[0x297:0x29e]
---
Predecessors: [0x291]
Successors: [0x445]
---
0x297 PUSH2 0x445
0x29a PUSH1 0x2
0x29c SLOAD
0x29d DUP2
0x29e JUMP
---
0x297: V208 = 0x445
0x29a: V209 = 0x2
0x29c: V210 = S[0x2]
0x29e: JUMP 0x445
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x445, V210]
Exit stack: [V10, 0x445, V210]

================================

Block 0x29f
[0x29f:0x2a4]
---
Predecessors: [0x61]
Successors: [0x2a5]
---
0x29f JUMPDEST
0x2a0 CALLVALUE
0x2a1 PUSH2 0x2
0x2a4 JUMPI
---
0x29f: JUMPDEST 
0x2a0: V211 = CALLVALUE
0x2a1: V212 = 0x2
0x2a4: THROWI V211
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a5
[0x2a5:0x2ac]
---
Predecessors: [0x29f]
Successors: [0x445]
---
0x2a5 PUSH2 0x445
0x2a8 PUSH1 0x4
0x2aa SLOAD
0x2ab DUP2
0x2ac JUMP
---
0x2a5: V213 = 0x445
0x2a8: V214 = 0x4
0x2aa: V215 = S[0x4]
0x2ac: JUMP 0x445
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x445, V215]
Exit stack: [V10, 0x445, V215]

================================

Block 0x2ad
[0x2ad:0x2b2]
---
Predecessors: [0x6c]
Successors: [0x2b3]
---
0x2ad JUMPDEST
0x2ae CALLVALUE
0x2af PUSH2 0x2
0x2b2 JUMPI
---
0x2ad: JUMPDEST 
0x2ae: V216 = CALLVALUE
0x2af: V217 = 0x2
0x2b2: THROWI V216
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b3
[0x2b3:0x2c1]
---
Predecessors: [0x2ad]
Successors: [0x2c2, 0x442]
---
0x2b3 PUSH2 0x36c
0x2b6 PUSH1 0x3
0x2b8 SLOAD
0x2b9 PUSH1 0x0
0x2bb SWAP1
0x2bc TIMESTAMP
0x2bd LT
0x2be PUSH2 0x442
0x2c1 JUMPI
---
0x2b3: V218 = 0x36c
0x2b6: V219 = 0x3
0x2b8: V220 = S[0x3]
0x2b9: V221 = 0x0
0x2bc: V222 = TIMESTAMP
0x2bd: V223 = LT V222 V220
0x2be: V224 = 0x442
0x2c1: JUMPI 0x442 V223
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x36c, 0x0]
Exit stack: [V10, 0x36c, 0x0]

================================

Block 0x2c2
[0x2c2:0x2cd]
---
Predecessors: [0x2b3]
Successors: [0x2ce, 0x490]
---
0x2c2 PUSH1 0x7
0x2c4 SLOAD
0x2c5 PUSH1 0xff
0x2c7 AND
0x2c8 ISZERO
0x2c9 ISZERO
0x2ca PUSH2 0x490
0x2cd JUMPI
---
0x2c2: V225 = 0x7
0x2c4: V226 = S[0x7]
0x2c5: V227 = 0xff
0x2c7: V228 = AND 0xff V226
0x2c8: V229 = ISZERO V228
0x2c9: V230 = ISZERO V229
0x2ca: V231 = 0x490
0x2cd: JUMPI 0x490 V230
---
Entry stack: [V10, 0x36c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x36c, 0x0]

================================

Block 0x2ce
[0x2ce:0x2f4]
---
Predecessors: [0x2c2]
Successors: [0x2f5, 0x490]
---
0x2ce POP
0x2cf PUSH1 0x1
0x2d1 PUSH1 0xa0
0x2d3 PUSH1 0x2
0x2d5 EXP
0x2d6 SUB
0x2d7 CALLER
0x2d8 AND
0x2d9 PUSH1 0x0
0x2db SWAP1
0x2dc DUP2
0x2dd MSTORE
0x2de PUSH1 0x6
0x2e0 PUSH1 0x20
0x2e2 MSTORE
0x2e3 PUSH1 0x40
0x2e5 DUP2
0x2e6 SHA3
0x2e7 DUP1
0x2e8 SLOAD
0x2e9 SWAP1
0x2ea DUP3
0x2eb SWAP1
0x2ec SSTORE
0x2ed SWAP1
0x2ee DUP2
0x2ef GT
0x2f0 ISZERO
0x2f1 PUSH2 0x490
0x2f4 JUMPI
---
0x2cf: V232 = 0x1
0x2d1: V233 = 0xa0
0x2d3: V234 = 0x2
0x2d5: V235 = EXP 0x2 0xa0
0x2d6: V236 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d7: V237 = CALLER
0x2d8: V238 = AND V237 0xffffffffffffffffffffffffffffffffffffffff
0x2d9: V239 = 0x0
0x2dd: M[0x0] = V238
0x2de: V240 = 0x6
0x2e0: V241 = 0x20
0x2e2: M[0x20] = 0x6
0x2e3: V242 = 0x40
0x2e6: V243 = SHA3 0x0 0x40
0x2e8: V244 = S[V243]
0x2ec: S[V243] = 0x0
0x2ef: V245 = GT V244 0x0
0x2f0: V246 = ISZERO V245
0x2f1: V247 = 0x490
0x2f4: JUMPI 0x490 V246
---
Entry stack: [V10, 0x36c, 0x0]
Stack pops: 1
Stack additions: [V244]
Exit stack: [V10, 0x36c, V244]

================================

Block 0x2f5
[0x2f5:0x31e]
---
Predecessors: [0x2ce]
Successors: [0x31f, 0x474]
---
0x2f5 PUSH1 0x40
0x2f7 MLOAD
0x2f8 PUSH1 0x1
0x2fa PUSH1 0xa0
0x2fc PUSH1 0x2
0x2fe EXP
0x2ff SUB
0x300 CALLER
0x301 AND
0x302 SWAP1
0x303 DUP3
0x304 ISZERO
0x305 PUSH2 0x8fc
0x308 MUL
0x309 SWAP1
0x30a DUP4
0x30b SWAP1
0x30c PUSH1 0x0
0x30e DUP2
0x30f DUP2
0x310 DUP2
0x311 DUP6
0x312 DUP9
0x313 DUP9
0x314 CALL
0x315 SWAP4
0x316 POP
0x317 POP
0x318 POP
0x319 POP
0x31a ISZERO
0x31b PUSH2 0x474
0x31e JUMPI
---
0x2f5: V248 = 0x40
0x2f7: V249 = M[0x40]
0x2f8: V250 = 0x1
0x2fa: V251 = 0xa0
0x2fc: V252 = 0x2
0x2fe: V253 = EXP 0x2 0xa0
0x2ff: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x300: V255 = CALLER
0x301: V256 = AND V255 0xffffffffffffffffffffffffffffffffffffffff
0x304: V257 = ISZERO V244
0x305: V258 = 0x8fc
0x308: V259 = MUL 0x8fc V257
0x30c: V260 = 0x0
0x314: V261 = CALL V259 V256 V244 V249 0x0 V249 0x0
0x31a: V262 = ISZERO V261
0x31b: V263 = 0x474
0x31e: JUMPI 0x474 V262
---
Entry stack: [V10, 0x36c, V244]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x36c, V244]

================================

Block 0x31f
[0x31f:0x36b]
---
Predecessors: [0x2f5]
Successors: [0x490]
---
0x31f PUSH1 0x40
0x321 DUP1
0x322 MLOAD
0x323 PUSH1 0x1
0x325 PUSH1 0xa0
0x327 PUSH1 0x2
0x329 EXP
0x32a SUB
0x32b CALLER
0x32c AND
0x32d DUP2
0x32e MSTORE
0x32f PUSH1 0x20
0x331 DUP2
0x332 ADD
0x333 DUP4
0x334 SWAP1
0x335 MSTORE
0x336 PUSH1 0x0
0x338 DUP2
0x339 DUP4
0x33a ADD
0x33b MSTORE
0x33c SWAP1
0x33d MLOAD
0x33e PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x35f SWAP2
0x360 DUP2
0x361 SWAP1
0x362 SUB
0x363 PUSH1 0x60
0x365 ADD
0x366 SWAP1
0x367 LOG1
0x368 PUSH2 0x490
0x36b JUMP
---
0x31f: V264 = 0x40
0x322: V265 = M[0x40]
0x323: V266 = 0x1
0x325: V267 = 0xa0
0x327: V268 = 0x2
0x329: V269 = EXP 0x2 0xa0
0x32a: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32b: V271 = CALLER
0x32c: V272 = AND V271 0xffffffffffffffffffffffffffffffffffffffff
0x32e: M[V265] = V272
0x32f: V273 = 0x20
0x332: V274 = ADD V265 0x20
0x335: M[V274] = V244
0x336: V275 = 0x0
0x33a: V276 = ADD 0x40 V265
0x33b: M[V276] = 0x0
0x33d: V277 = M[0x40]
0x33e: V278 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x362: V279 = SUB V265 V277
0x363: V280 = 0x60
0x365: V281 = ADD 0x60 V279
0x367: LOG V277 V281 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x368: V282 = 0x490
0x36b: JUMP 0x490
---
Entry stack: [V10, 0x36c, V244]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x36c, V244]

================================

Block 0x36c
[0x36c:0x36d]
---
Predecessors: [0x226, 0x442, 0x538]
Successors: []
---
0x36c JUMPDEST
0x36d STOP
---
0x36c: JUMPDEST 
0x36d: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x36e
[0x36e:0x3ad]
---
Predecessors: [0x77]
Successors: [0x3ae]
---
0x36e JUMPDEST
0x36f POP
0x370 PUSH1 0x1
0x372 PUSH1 0xa0
0x374 PUSH1 0x2
0x376 EXP
0x377 SUB
0x378 CALLER
0x379 DUP2
0x37a DUP2
0x37b AND
0x37c PUSH1 0x0
0x37e SWAP1
0x37f DUP2
0x380 MSTORE
0x381 PUSH1 0x6
0x383 PUSH1 0x20
0x385 MSTORE
0x386 PUSH1 0x40
0x388 SWAP1
0x389 SHA3
0x38a CALLVALUE
0x38b SWAP1
0x38c DUP2
0x38d SWAP1
0x38e SSTORE
0x38f PUSH1 0x2
0x391 DUP1
0x392 SLOAD
0x393 DUP3
0x394 ADD
0x395 SWAP1
0x396 SSTORE
0x397 PUSH1 0x5
0x399 SLOAD
0x39a PUSH1 0x4
0x39c SLOAD
0x39d SWAP2
0x39e SWAP4
0x39f AND
0x3a0 SWAP2
0x3a1 PUSH4 0xa9059cbb
0x3a6 SWAP2
0x3a7 DUP5
0x3a8 DUP2
0x3a9 ISZERO
0x3aa PUSH2 0x2
0x3ad JUMPI
---
0x36e: JUMPDEST 
0x370: V283 = 0x1
0x372: V284 = 0xa0
0x374: V285 = 0x2
0x376: V286 = EXP 0x2 0xa0
0x377: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x378: V288 = CALLER
0x37b: V289 = AND V288 0xffffffffffffffffffffffffffffffffffffffff
0x37c: V290 = 0x0
0x380: M[0x0] = V289
0x381: V291 = 0x6
0x383: V292 = 0x20
0x385: M[0x20] = 0x6
0x386: V293 = 0x40
0x389: V294 = SHA3 0x0 0x40
0x38a: V295 = CALLVALUE
0x38e: S[V294] = V295
0x38f: V296 = 0x2
0x392: V297 = S[0x2]
0x394: V298 = ADD V295 V297
0x396: S[0x2] = V298
0x397: V299 = 0x5
0x399: V300 = S[0x5]
0x39a: V301 = 0x4
0x39c: V302 = S[0x4]
0x39f: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x3a1: V304 = 0xa9059cbb
0x3a9: V305 = ISZERO V302
0x3aa: V306 = 0x2
0x3ad: THROWI V305
---
Entry stack: [V10, 0x36c, 0x0]
Stack pops: 1
Stack additions: [V295, V303, 0xa9059cbb, V288, V302, V295]
Exit stack: [V10, 0x36c, V295, V303, 0xa9059cbb, V288, V302, V295]

================================

Block 0x3ae
[0x3ae:0x3ea]
---
Predecessors: [0x36e]
Successors: [0x3eb]
---
0x3ae DIV
0x3af PUSH1 0x40
0x3b1 MLOAD
0x3b2 DUP4
0x3b3 PUSH1 0xe0
0x3b5 PUSH1 0x2
0x3b7 EXP
0x3b8 MUL
0x3b9 DUP2
0x3ba MSTORE
0x3bb PUSH1 0x4
0x3bd ADD
0x3be DUP1
0x3bf DUP4
0x3c0 PUSH1 0x1
0x3c2 PUSH1 0xa0
0x3c4 PUSH1 0x2
0x3c6 EXP
0x3c7 SUB
0x3c8 AND
0x3c9 DUP2
0x3ca MSTORE
0x3cb PUSH1 0x20
0x3cd ADD
0x3ce DUP3
0x3cf DUP2
0x3d0 MSTORE
0x3d1 PUSH1 0x20
0x3d3 ADD
0x3d4 SWAP3
0x3d5 POP
0x3d6 POP
0x3d7 POP
0x3d8 PUSH1 0x0
0x3da PUSH1 0x40
0x3dc MLOAD
0x3dd DUP1
0x3de DUP4
0x3df SUB
0x3e0 DUP2
0x3e1 PUSH1 0x0
0x3e3 DUP8
0x3e4 DUP1
0x3e5 EXTCODESIZE
0x3e6 ISZERO
0x3e7 PUSH2 0x2
0x3ea JUMPI
---
0x3ae: V307 = DIV V295 V302
0x3af: V308 = 0x40
0x3b1: V309 = M[0x40]
0x3b3: V310 = 0xe0
0x3b5: V311 = 0x2
0x3b7: V312 = EXP 0x2 0xe0
0x3b8: V313 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x3ba: M[V309] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3bb: V314 = 0x4
0x3bd: V315 = ADD 0x4 V309
0x3c0: V316 = 0x1
0x3c2: V317 = 0xa0
0x3c4: V318 = 0x2
0x3c6: V319 = EXP 0x2 0xa0
0x3c7: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c8: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x3ca: M[V315] = V321
0x3cb: V322 = 0x20
0x3cd: V323 = ADD 0x20 V315
0x3d0: M[V323] = V307
0x3d1: V324 = 0x20
0x3d3: V325 = ADD 0x20 V323
0x3d8: V326 = 0x0
0x3da: V327 = 0x40
0x3dc: V328 = M[0x40]
0x3df: V329 = SUB V325 V328
0x3e1: V330 = 0x0
0x3e5: V331 = EXTCODESIZE V303
0x3e6: V332 = ISZERO V331
0x3e7: V333 = 0x2
0x3ea: THROWI V332
---
Entry stack: [V10, 0x36c, V295, V303, 0xa9059cbb, V288, V302, V295]
Stack pops: 5
Stack additions: [S4, S3, V325, 0x0, V328, V329, V328, 0x0, S4]
Exit stack: [V10, 0x36c, V295, V303, 0xa9059cbb, V325, 0x0, V328, V329, V328, 0x0, V303]

================================

Block 0x3eb
[0x3eb:0x3f4]
---
Predecessors: [0x3ae]
Successors: [0x3f5]
---
0x3eb PUSH1 0x32
0x3ed GAS
0x3ee SUB
0x3ef CALL
0x3f0 ISZERO
0x3f1 PUSH2 0x2
0x3f4 JUMPI
---
0x3eb: V334 = 0x32
0x3ed: V335 = GAS
0x3ee: V336 = SUB V335 0x32
0x3ef: V337 = CALL V336 V303 0x0 V328 V329 V328 0x0
0x3f0: V338 = ISZERO V337
0x3f1: V339 = 0x2
0x3f4: THROWI V338
---
Entry stack: [V10, 0x36c, V295, V303, 0xa9059cbb, V325, 0x0, V328, V329, V328, 0x0, V303]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x36c, V295, V303, 0xa9059cbb, V325]

================================

Block 0x3f5
[0x3f5:0x441]
---
Predecessors: [0x3eb]
Successors: [0x442]
---
0x3f5 POP
0x3f6 POP
0x3f7 PUSH1 0x40
0x3f9 DUP1
0x3fa MLOAD
0x3fb PUSH1 0x1
0x3fd PUSH1 0xa0
0x3ff PUSH1 0x2
0x401 EXP
0x402 SUB
0x403 CALLER
0x404 AND
0x405 DUP2
0x406 MSTORE
0x407 PUSH1 0x20
0x409 DUP2
0x40a ADD
0x40b DUP5
0x40c SWAP1
0x40d MSTORE
0x40e PUSH1 0x1
0x410 DUP2
0x411 DUP4
0x412 ADD
0x413 MSTORE
0x414 SWAP1
0x415 MLOAD
0x416 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x437 SWAP3
0x438 POP
0x439 SWAP1
0x43a DUP2
0x43b SWAP1
0x43c SUB
0x43d PUSH1 0x60
0x43f ADD
0x440 SWAP1
0x441 LOG1
---
0x3f7: V340 = 0x40
0x3fa: V341 = M[0x40]
0x3fb: V342 = 0x1
0x3fd: V343 = 0xa0
0x3ff: V344 = 0x2
0x401: V345 = EXP 0x2 0xa0
0x402: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x403: V347 = CALLER
0x404: V348 = AND V347 0xffffffffffffffffffffffffffffffffffffffff
0x406: M[V341] = V348
0x407: V349 = 0x20
0x40a: V350 = ADD V341 0x20
0x40d: M[V350] = V295
0x40e: V351 = 0x1
0x412: V352 = ADD 0x40 V341
0x413: M[V352] = 0x1
0x415: V353 = M[0x40]
0x416: V354 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x43c: V355 = SUB V341 V353
0x43d: V356 = 0x60
0x43f: V357 = ADD 0x60 V355
0x441: LOG V353 V357 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
---
Entry stack: [V10, 0x36c, V295, V303, 0xa9059cbb, V325]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x36c, V295]

================================

Block 0x442
[0x442:0x444]
---
Predecessors: [0x2b3, 0x3f5, 0x4b1, 0x4e6]
Successors: [0x36c]
---
0x442 JUMPDEST
0x443 POP
0x444 JUMP
---
0x442: JUMPDEST 
0x444: JUMP 0x36c
---
Entry stack: [V10, 0x36c, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x445
[0x445:0x456]
---
Predecessors: [0x230, 0x26c, 0x289, 0x297, 0x2a5]
Successors: []
---
0x445 JUMPDEST
0x446 PUSH1 0x40
0x448 DUP1
0x449 MLOAD
0x44a SWAP2
0x44b DUP3
0x44c MSTORE
0x44d MLOAD
0x44e SWAP1
0x44f DUP2
0x450 SWAP1
0x451 SUB
0x452 PUSH1 0x20
0x454 ADD
0x455 SWAP1
0x456 RETURN
---
0x445: JUMPDEST 
0x446: V358 = 0x40
0x449: V359 = M[0x40]
0x44c: M[V359] = S0
0x44d: V360 = M[0x40]
0x451: V361 = SUB V359 V360
0x452: V362 = 0x20
0x454: V363 = ADD 0x20 V361
0x456: RETURN V360 V363
---
Entry stack: [V10, 0x445, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x445]

================================

Block 0x457
[0x457:0x473]
---
Predecessors: [0x23e, 0x255]
Successors: []
---
0x457 JUMPDEST
0x458 PUSH1 0x40
0x45a DUP1
0x45b MLOAD
0x45c PUSH1 0x1
0x45e PUSH1 0xa0
0x460 PUSH1 0x2
0x462 EXP
0x463 SUB
0x464 SWAP3
0x465 SWAP1
0x466 SWAP3
0x467 AND
0x468 DUP3
0x469 MSTORE
0x46a MLOAD
0x46b SWAP1
0x46c DUP2
0x46d SWAP1
0x46e SUB
0x46f PUSH1 0x20
0x471 ADD
0x472 SWAP1
0x473 RETURN
---
0x457: JUMPDEST 
0x458: V364 = 0x40
0x45b: V365 = M[0x40]
0x45c: V366 = 0x1
0x45e: V367 = 0xa0
0x460: V368 = 0x2
0x462: V369 = EXP 0x2 0xa0
0x463: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x467: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x469: M[V365] = V371
0x46a: V372 = M[0x40]
0x46e: V373 = SUB V365 V372
0x46f: V374 = 0x20
0x471: V375 = ADD 0x20 V373
0x473: RETURN V372 V375
---
Entry stack: [V10, 0x457, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x457]

================================

Block 0x474
[0x474:0x48f]
---
Predecessors: [0x2f5]
Successors: [0x490]
---
0x474 JUMPDEST
0x475 PUSH1 0x1
0x477 PUSH1 0xa0
0x479 PUSH1 0x2
0x47b EXP
0x47c SUB
0x47d CALLER
0x47e AND
0x47f PUSH1 0x0
0x481 SWAP1
0x482 DUP2
0x483 MSTORE
0x484 PUSH1 0x6
0x486 PUSH1 0x20
0x488 MSTORE
0x489 PUSH1 0x40
0x48b SWAP1
0x48c SHA3
0x48d DUP2
0x48e SWAP1
0x48f SSTORE
---
0x474: JUMPDEST 
0x475: V376 = 0x1
0x477: V377 = 0xa0
0x479: V378 = 0x2
0x47b: V379 = EXP 0x2 0xa0
0x47c: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47d: V381 = CALLER
0x47e: V382 = AND V381 0xffffffffffffffffffffffffffffffffffffffff
0x47f: V383 = 0x0
0x483: M[0x0] = V382
0x484: V384 = 0x6
0x486: V385 = 0x20
0x488: M[0x20] = 0x6
0x489: V386 = 0x40
0x48c: V387 = SHA3 0x0 0x40
0x48f: S[V387] = V244
---
Entry stack: [V10, 0x36c, V244]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x36c, V244]

================================

Block 0x490
[0x490:0x49c]
---
Predecessors: [0x2c2, 0x2ce, 0x31f, 0x474]
Successors: [0x49d, 0x4b1]
---
0x490 JUMPDEST
0x491 PUSH1 0x7
0x493 SLOAD
0x494 PUSH1 0xff
0x496 AND
0x497 DUP1
0x498 ISZERO
0x499 PUSH2 0x4b1
0x49c JUMPI
---
0x490: JUMPDEST 
0x491: V388 = 0x7
0x493: V389 = S[0x7]
0x494: V390 = 0xff
0x496: V391 = AND 0xff V389
0x498: V392 = ISZERO V391
0x499: V393 = 0x4b1
0x49c: JUMPI 0x4b1 V392
---
Entry stack: [V10, 0x36c, S0]
Stack pops: 0
Stack additions: [V391]
Exit stack: [V10, 0x36c, S0, V391]

================================

Block 0x49d
[0x49d:0x4b0]
---
Predecessors: [0x490]
Successors: [0x4b1]
---
0x49d POP
0x49e PUSH1 0x0
0x4a0 SLOAD
0x4a1 PUSH1 0x1
0x4a3 PUSH1 0xa0
0x4a5 PUSH1 0x2
0x4a7 EXP
0x4a8 SUB
0x4a9 SWAP1
0x4aa DUP2
0x4ab AND
0x4ac CALLER
0x4ad SWAP1
0x4ae SWAP2
0x4af AND
0x4b0 EQ
---
0x49e: V394 = 0x0
0x4a0: V395 = S[0x0]
0x4a1: V396 = 0x1
0x4a3: V397 = 0xa0
0x4a5: V398 = 0x2
0x4a7: V399 = EXP 0x2 0xa0
0x4a8: V400 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ab: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x4ac: V402 = CALLER
0x4af: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x4b0: V404 = EQ V403 V401
---
Entry stack: [V10, 0x36c, S1, V391]
Stack pops: 1
Stack additions: [V404]
Exit stack: [V10, 0x36c, S1, V404]

================================

Block 0x4b1
[0x4b1:0x4b6]
---
Predecessors: [0x490, 0x49d]
Successors: [0x442, 0x4b7]
---
0x4b1 JUMPDEST
0x4b2 ISZERO
0x4b3 PUSH2 0x442
0x4b6 JUMPI
---
0x4b1: JUMPDEST 
0x4b2: V405 = ISZERO S0
0x4b3: V406 = 0x442
0x4b6: JUMPI 0x442 V405
---
Entry stack: [V10, 0x36c, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x36c, S1]

================================

Block 0x4b7
[0x4b7:0x4e5]
---
Predecessors: [0x4b1]
Successors: [0x4e6, 0x538]
---
0x4b7 PUSH1 0x40
0x4b9 MLOAD
0x4ba PUSH1 0x0
0x4bc DUP1
0x4bd SLOAD
0x4be PUSH1 0x2
0x4c0 SLOAD
0x4c1 PUSH1 0x1
0x4c3 PUSH1 0xa0
0x4c5 PUSH1 0x2
0x4c7 EXP
0x4c8 SUB
0x4c9 SWAP2
0x4ca SWAP1
0x4cb SWAP2
0x4cc AND
0x4cd SWAP3
0x4ce DUP2
0x4cf ISZERO
0x4d0 PUSH2 0x8fc
0x4d3 MUL
0x4d4 SWAP3
0x4d5 DUP2
0x4d6 DUP2
0x4d7 DUP2
0x4d8 DUP6
0x4d9 DUP9
0x4da DUP9
0x4db CALL
0x4dc SWAP4
0x4dd POP
0x4de POP
0x4df POP
0x4e0 POP
0x4e1 ISZERO
0x4e2 PUSH2 0x538
0x4e5 JUMPI
---
0x4b7: V407 = 0x40
0x4b9: V408 = M[0x40]
0x4ba: V409 = 0x0
0x4bd: V410 = S[0x0]
0x4be: V411 = 0x2
0x4c0: V412 = S[0x2]
0x4c1: V413 = 0x1
0x4c3: V414 = 0xa0
0x4c5: V415 = 0x2
0x4c7: V416 = EXP 0x2 0xa0
0x4c8: V417 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cc: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V410
0x4cf: V419 = ISZERO V412
0x4d0: V420 = 0x8fc
0x4d3: V421 = MUL 0x8fc V419
0x4db: V422 = CALL V421 V418 V412 V408 0x0 V408 0x0
0x4e1: V423 = ISZERO V422
0x4e2: V424 = 0x538
0x4e5: JUMPI 0x538 V423
---
Entry stack: [V10, 0x36c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x36c, S0]

================================

Block 0x4e6
[0x4e6:0x537]
---
Predecessors: [0x4b7]
Successors: [0x442]
---
0x4e6 PUSH1 0x40
0x4e8 DUP1
0x4e9 MLOAD
0x4ea PUSH1 0x0
0x4ec DUP1
0x4ed SLOAD
0x4ee PUSH1 0x2
0x4f0 SLOAD
0x4f1 PUSH1 0x1
0x4f3 PUSH1 0xa0
0x4f5 PUSH1 0x2
0x4f7 EXP
0x4f8 SUB
0x4f9 SWAP2
0x4fa SWAP1
0x4fb SWAP2
0x4fc AND
0x4fd DUP4
0x4fe MSTORE
0x4ff PUSH1 0x20
0x501 DUP4
0x502 ADD
0x503 MSTORE
0x504 DUP2
0x505 DUP4
0x506 ADD
0x507 MSTORE
0x508 SWAP1
0x509 MLOAD
0x50a PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x52b SWAP2
0x52c DUP2
0x52d SWAP1
0x52e SUB
0x52f PUSH1 0x60
0x531 ADD
0x532 SWAP1
0x533 LOG1
0x534 PUSH2 0x442
0x537 JUMP
---
0x4e6: V425 = 0x40
0x4e9: V426 = M[0x40]
0x4ea: V427 = 0x0
0x4ed: V428 = S[0x0]
0x4ee: V429 = 0x2
0x4f0: V430 = S[0x2]
0x4f1: V431 = 0x1
0x4f3: V432 = 0xa0
0x4f5: V433 = 0x2
0x4f7: V434 = EXP 0x2 0xa0
0x4f8: V435 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fc: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x4fe: M[V426] = V436
0x4ff: V437 = 0x20
0x502: V438 = ADD V426 0x20
0x503: M[V438] = V430
0x506: V439 = ADD 0x40 V426
0x507: M[V439] = 0x0
0x509: V440 = M[0x40]
0x50a: V441 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x52e: V442 = SUB V426 V440
0x52f: V443 = 0x60
0x531: V444 = ADD 0x60 V442
0x533: LOG V440 V444 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x534: V445 = 0x442
0x537: JUMP 0x442
---
Entry stack: [V10, 0x36c, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x36c, S0]

================================

Block 0x538
[0x538:0x544]
---
Predecessors: [0x4b7]
Successors: [0x36c]
---
0x538 JUMPDEST
0x539 PUSH1 0x7
0x53b DUP1
0x53c SLOAD
0x53d PUSH1 0xff
0x53f NOT
0x540 AND
0x541 SWAP1
0x542 SSTORE
0x543 POP
0x544 JUMP
---
0x538: JUMPDEST 
0x539: V446 = 0x7
0x53c: V447 = S[0x7]
0x53d: V448 = 0xff
0x53f: V449 = NOT 0xff
0x540: V450 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V447
0x542: S[0x7] = V450
0x544: JUMP 0x36c
---
Entry stack: [V10, 0x36c, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x93
Exit block: 0x36c
Body: 0x93, 0x99, 0xaa, 0xcd, 0x125, 0x1a0, 0x1aa, 0x219, 0x223, 0x226, 0x36c

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x22a
Exit block: 0x445
Body: 0x22a, 0x230, 0x445

Function 2:
Public function signature: 0x38af3eed
Entry block: 0x238
Exit block: 0x457
Body: 0x238, 0x23e, 0x457

Function 3:
Public function signature: 0x6e66f6e9
Entry block: 0x24f
Exit block: 0x457
Body: 0x24f, 0x255, 0x457

Function 4:
Public function signature: 0x70a08231
Entry block: 0x266
Exit block: 0x445
Body: 0x266, 0x26c, 0x445

Function 5:
Public function signature: 0x7a3a0e84
Entry block: 0x283
Exit block: 0x445
Body: 0x283, 0x289, 0x445

Function 6:
Public function signature: 0x7b3e5e7b
Entry block: 0x291
Exit block: 0x445
Body: 0x291, 0x297, 0x445

Function 7:
Public function signature: 0xa035b1fe
Entry block: 0x29f
Exit block: 0x445
Body: 0x29f, 0x2a5, 0x445

Function 8:
Public function signature: 0xfd6b7ef8
Entry block: 0x2ad
Exit block: 0x36c
Body: 0x2ad, 0x2b3, 0x2c2, 0x2ce, 0x2f5, 0x31f, 0x36c, 0x442, 0x474, 0x490, 0x49d, 0x4b1, 0x4b7, 0x4e6, 0x538

Function 9:
Public fallback function
Entry block: 0x77
Exit block: 0x36c
Body: 0x77, 0x8f, 0x36c, 0x36e, 0x3ae, 0x3eb, 0x3f5, 0x442

