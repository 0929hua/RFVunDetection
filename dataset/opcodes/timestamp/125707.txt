Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x7f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x7f
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x7f
0xc: JUMPI 0x7f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x1a9]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x29dcb0cf
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x1a9
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x29dcb0cf
0x22: V15 = EQ V13 0x29dcb0cf
0x23: V16 = 0x1a9
0x26: JUMPI 0x1a9 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x1ce]
---
0x27 DUP1
0x28 PUSH4 0x38af3eed
0x2d EQ
0x2e PUSH2 0x1ce
0x31 JUMPI
---
0x28: V17 = 0x38af3eed
0x2d: V18 = EQ 0x38af3eed V13
0x2e: V19 = 0x1ce
0x31: JUMPI 0x1ce V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x1fd]
---
0x32 DUP1
0x33 PUSH4 0x6e66f6e9
0x38 EQ
0x39 PUSH2 0x1fd
0x3c JUMPI
---
0x33: V20 = 0x6e66f6e9
0x38: V21 = EQ 0x6e66f6e9 V13
0x39: V22 = 0x1fd
0x3c: JUMPI 0x1fd V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x210]
---
0x3d DUP1
0x3e PUSH4 0x7b3e5e7b
0x43 EQ
0x44 PUSH2 0x210
0x47 JUMPI
---
0x3e: V23 = 0x7b3e5e7b
0x43: V24 = EQ 0x7b3e5e7b V13
0x44: V25 = 0x210
0x47: JUMPI 0x210 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x223]
---
0x48 DUP1
0x49 PUSH4 0x827037db
0x4e EQ
0x4f PUSH2 0x223
0x52 JUMPI
---
0x49: V26 = 0x827037db
0x4e: V27 = EQ 0x827037db V13
0x4f: V28 = 0x223
0x52: JUMPI 0x223 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x238]
---
0x53 DUP1
0x54 PUSH4 0x8da5cb5b
0x59 EQ
0x5a PUSH2 0x238
0x5d JUMPI
---
0x54: V29 = 0x8da5cb5b
0x59: V30 = EQ 0x8da5cb5b V13
0x5a: V31 = 0x238
0x5d: JUMPI 0x238 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x24b]
---
0x5e DUP1
0x5f PUSH4 0xb531a872
0x64 EQ
0x65 PUSH2 0x24b
0x68 JUMPI
---
0x5f: V32 = 0xb531a872
0x64: V33 = EQ 0xb531a872 V13
0x65: V34 = 0x24b
0x68: JUMPI 0x24b V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x25e]
---
0x69 DUP1
0x6a PUSH4 0xccb07cef
0x6f EQ
0x70 PUSH2 0x25e
0x73 JUMPI
---
0x6a: V35 = 0xccb07cef
0x6f: V36 = EQ 0xccb07cef V13
0x70: V37 = 0x25e
0x73: JUMPI 0x25e V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x285]
---
0x74 DUP1
0x75 PUSH4 0xd4e93292
0x7a EQ
0x7b PUSH2 0x285
0x7e JUMPI
---
0x75: V38 = 0xd4e93292
0x7a: V39 = EQ 0xd4e93292 V13
0x7b: V40 = 0x285
0x7e: JUMPI 0x285 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x9e]
---
Predecessors: [0x0, 0x74]
Successors: [0x9f, 0x10d]
---
0x7f JUMPDEST
0x80 PUSH1 0x4
0x82 SLOAD
0x83 CALLVALUE
0x84 SWAP1
0x85 PUSH7 0x2386f26fc10000
0x8d DUP3
0x8e DIV
0x8f SWAP1
0x90 PUSH1 0xa0
0x92 PUSH1 0x2
0x94 EXP
0x95 SWAP1
0x96 DIV
0x97 PUSH1 0xff
0x99 AND
0x9a ISZERO
0x9b PUSH2 0x10d
0x9e JUMPI
---
0x7f: JUMPDEST 
0x80: V41 = 0x4
0x82: V42 = S[0x4]
0x83: V43 = CALLVALUE
0x85: V44 = 0x2386f26fc10000
0x8e: V45 = DIV V43 0x2386f26fc10000
0x90: V46 = 0xa0
0x92: V47 = 0x2
0x94: V48 = EXP 0x2 0xa0
0x96: V49 = DIV V42 0x10000000000000000000000000000000000000000
0x97: V50 = 0xff
0x99: V51 = AND 0xff V49
0x9a: V52 = ISZERO V51
0x9b: V53 = 0x10d
0x9e: JUMPI 0x10d V52
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V43, V45]
Exit stack: [V13, V43, V45]

================================

Block 0x9f
[0x9f:0xef]
---
Predecessors: [0x7f]
Successors: [0xf0, 0xf4]
---
0x9f PUSH1 0x4
0xa1 SLOAD
0xa2 PUSH1 0x1
0xa4 PUSH1 0xa0
0xa6 PUSH1 0x2
0xa8 EXP
0xa9 SUB
0xaa AND
0xab PUSH4 0xa9059cbb
0xb0 CALLER
0xb1 DUP4
0xb2 PUSH1 0x40
0xb4 MLOAD
0xb5 PUSH1 0xe0
0xb7 PUSH1 0x2
0xb9 EXP
0xba PUSH4 0xffffffff
0xbf DUP6
0xc0 AND
0xc1 MUL
0xc2 DUP2
0xc3 MSTORE
0xc4 PUSH1 0x1
0xc6 PUSH1 0xa0
0xc8 PUSH1 0x2
0xca EXP
0xcb SUB
0xcc SWAP1
0xcd SWAP3
0xce AND
0xcf PUSH1 0x4
0xd1 DUP4
0xd2 ADD
0xd3 MSTORE
0xd4 PUSH1 0x24
0xd6 DUP3
0xd7 ADD
0xd8 MSTORE
0xd9 PUSH1 0x44
0xdb ADD
0xdc PUSH1 0x0
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP1
0xe2 DUP4
0xe3 SUB
0xe4 DUP2
0xe5 PUSH1 0x0
0xe7 DUP8
0xe8 DUP1
0xe9 EXTCODESIZE
0xea ISZERO
0xeb ISZERO
0xec PUSH2 0xf4
0xef JUMPI
---
0x9f: V54 = 0x4
0xa1: V55 = S[0x4]
0xa2: V56 = 0x1
0xa4: V57 = 0xa0
0xa6: V58 = 0x2
0xa8: V59 = EXP 0x2 0xa0
0xa9: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xab: V62 = 0xa9059cbb
0xb0: V63 = CALLER
0xb2: V64 = 0x40
0xb4: V65 = M[0x40]
0xb5: V66 = 0xe0
0xb7: V67 = 0x2
0xb9: V68 = EXP 0x2 0xe0
0xba: V69 = 0xffffffff
0xc0: V70 = AND 0xa9059cbb 0xffffffff
0xc1: V71 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xc3: M[V65] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc4: V72 = 0x1
0xc6: V73 = 0xa0
0xc8: V74 = 0x2
0xca: V75 = EXP 0x2 0xa0
0xcb: V76 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce: V77 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V78 = 0x4
0xd2: V79 = ADD V65 0x4
0xd3: M[V79] = V77
0xd4: V80 = 0x24
0xd7: V81 = ADD V65 0x24
0xd8: M[V81] = V45
0xd9: V82 = 0x44
0xdb: V83 = ADD 0x44 V65
0xdc: V84 = 0x0
0xde: V85 = 0x40
0xe0: V86 = M[0x40]
0xe3: V87 = SUB V83 V86
0xe5: V88 = 0x0
0xe9: V89 = EXTCODESIZE V61
0xea: V90 = ISZERO V89
0xeb: V91 = ISZERO V90
0xec: V92 = 0xf4
0xef: JUMPI 0xf4 V91
---
Entry stack: [V13, V43, V45]
Stack pops: 1
Stack additions: [S0, V61, 0xa9059cbb, V83, 0x0, V86, V87, V86, 0x0, V61]
Exit stack: [V13, V43, V45, V61, 0xa9059cbb, V83, 0x0, V86, V87, V86, 0x0, V61]

================================

Block 0xf0
[0xf0:0xf3]
---
Predecessors: [0x9f]
Successors: []
---
0xf0 PUSH1 0x0
0xf2 DUP1
0xf3 REVERT
---
0xf0: V93 = 0x0
0xf3: REVERT 0x0 0x0
---
Entry stack: [V13, V43, V45, V61, 0xa9059cbb, V83, 0x0, V86, V87, V86, 0x0, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V43, V45, V61, 0xa9059cbb, V83, 0x0, V86, V87, V86, 0x0, V61]

================================

Block 0xf4
[0xf4:0x100]
---
Predecessors: [0x9f]
Successors: [0x101, 0x105]
---
0xf4 JUMPDEST
0xf5 PUSH2 0x2c6
0xf8 GAS
0xf9 SUB
0xfa CALL
0xfb ISZERO
0xfc ISZERO
0xfd PUSH2 0x105
0x100 JUMPI
---
0xf4: JUMPDEST 
0xf5: V94 = 0x2c6
0xf8: V95 = GAS
0xf9: V96 = SUB V95 0x2c6
0xfa: V97 = CALL V96 V61 0x0 V86 V87 V86 0x0
0xfb: V98 = ISZERO V97
0xfc: V99 = ISZERO V98
0xfd: V100 = 0x105
0x100: JUMPI 0x105 V99
---
Entry stack: [V13, V43, V45, V61, 0xa9059cbb, V83, 0x0, V86, V87, V86, 0x0, V61]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V43, V45, V61, 0xa9059cbb, V83]

================================

Block 0x101
[0x101:0x104]
---
Predecessors: [0xf4]
Successors: []
---
0x101 PUSH1 0x0
0x103 DUP1
0x104 REVERT
---
0x101: V101 = 0x0
0x104: REVERT 0x0 0x0
---
Entry stack: [V13, V43, V45, V61, 0xa9059cbb, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V43, V45, V61, 0xa9059cbb, V83]

================================

Block 0x105
[0x105:0x10c]
---
Predecessors: [0xf4]
Successors: [0x19d]
---
0x105 JUMPDEST
0x106 POP
0x107 POP
0x108 POP
0x109 PUSH2 0x19d
0x10c JUMP
---
0x105: JUMPDEST 
0x109: V102 = 0x19d
0x10c: JUMP 0x19d
---
Entry stack: [V13, V43, V45, V61, 0xa9059cbb, V83]
Stack pops: 3
Stack additions: []
Exit stack: [V13, V43, V45]

================================

Block 0x10d
[0x10d:0x116]
---
Predecessors: [0x7f]
Successors: [0x117, 0x11e]
---
0x10d JUMPDEST
0x10e PUSH2 0x12c
0x111 DUP2
0x112 LT
0x113 PUSH2 0x11e
0x116 JUMPI
---
0x10d: JUMPDEST 
0x10e: V103 = 0x12c
0x112: V104 = LT V45 0x12c
0x113: V105 = 0x11e
0x116: JUMPI 0x11e V104
---
Entry stack: [V13, V43, V45]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, V43, V45]

================================

Block 0x117
[0x117:0x11d]
---
Predecessors: [0x10d]
Successors: [0x132]
---
0x117 PUSH1 0x4
0x119 MUL
0x11a PUSH2 0x132
0x11d JUMP
---
0x117: V106 = 0x4
0x119: V107 = MUL 0x4 V45
0x11a: V108 = 0x132
0x11d: JUMP 0x132
---
Entry stack: [V13, V43, V45]
Stack pops: 1
Stack additions: [V107]
Exit stack: [V13, V43, V107]

================================

Block 0x11e
[0x11e:0x126]
---
Predecessors: [0x10d]
Successors: [0x127, 0x12e]
---
0x11e JUMPDEST
0x11f PUSH1 0xc8
0x121 DUP2
0x122 LT
0x123 PUSH2 0x12e
0x126 JUMPI
---
0x11e: JUMPDEST 
0x11f: V109 = 0xc8
0x122: V110 = LT V45 0xc8
0x123: V111 = 0x12e
0x126: JUMPI 0x12e V110
---
Entry stack: [V13, V43, V45]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, V43, V45]

================================

Block 0x127
[0x127:0x12d]
---
Predecessors: [0x11e]
Successors: [0x132]
---
0x127 PUSH1 0x3
0x129 MUL
0x12a PUSH2 0x132
0x12d JUMP
---
0x127: V112 = 0x3
0x129: V113 = MUL 0x3 V45
0x12a: V114 = 0x132
0x12d: JUMP 0x132
---
Entry stack: [V13, V43, V45]
Stack pops: 1
Stack additions: [V113]
Exit stack: [V13, V43, V113]

================================

Block 0x12e
[0x12e:0x131]
---
Predecessors: [0x11e]
Successors: [0x132]
---
0x12e JUMPDEST
0x12f PUSH1 0x2
0x131 MUL
---
0x12e: JUMPDEST 
0x12f: V115 = 0x2
0x131: V116 = MUL 0x2 V45
---
Entry stack: [V13, V43, V45]
Stack pops: 1
Stack additions: [V116]
Exit stack: [V13, V43, V116]

================================

Block 0x132
[0x132:0x183]
---
Predecessors: [0x117, 0x127, 0x12e]
Successors: [0x184, 0x188]
---
0x132 JUMPDEST
0x133 PUSH1 0x4
0x135 SLOAD
0x136 PUSH1 0x1
0x138 PUSH1 0xa0
0x13a PUSH1 0x2
0x13c EXP
0x13d SUB
0x13e AND
0x13f PUSH4 0xa9059cbb
0x144 CALLER
0x145 DUP4
0x146 PUSH1 0x40
0x148 MLOAD
0x149 PUSH1 0xe0
0x14b PUSH1 0x2
0x14d EXP
0x14e PUSH4 0xffffffff
0x153 DUP6
0x154 AND
0x155 MUL
0x156 DUP2
0x157 MSTORE
0x158 PUSH1 0x1
0x15a PUSH1 0xa0
0x15c PUSH1 0x2
0x15e EXP
0x15f SUB
0x160 SWAP1
0x161 SWAP3
0x162 AND
0x163 PUSH1 0x4
0x165 DUP4
0x166 ADD
0x167 MSTORE
0x168 PUSH1 0x24
0x16a DUP3
0x16b ADD
0x16c MSTORE
0x16d PUSH1 0x44
0x16f ADD
0x170 PUSH1 0x0
0x172 PUSH1 0x40
0x174 MLOAD
0x175 DUP1
0x176 DUP4
0x177 SUB
0x178 DUP2
0x179 PUSH1 0x0
0x17b DUP8
0x17c DUP1
0x17d EXTCODESIZE
0x17e ISZERO
0x17f ISZERO
0x180 PUSH2 0x188
0x183 JUMPI
---
0x132: JUMPDEST 
0x133: V117 = 0x4
0x135: V118 = S[0x4]
0x136: V119 = 0x1
0x138: V120 = 0xa0
0x13a: V121 = 0x2
0x13c: V122 = EXP 0x2 0xa0
0x13d: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13e: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x13f: V125 = 0xa9059cbb
0x144: V126 = CALLER
0x146: V127 = 0x40
0x148: V128 = M[0x40]
0x149: V129 = 0xe0
0x14b: V130 = 0x2
0x14d: V131 = EXP 0x2 0xe0
0x14e: V132 = 0xffffffff
0x154: V133 = AND 0xa9059cbb 0xffffffff
0x155: V134 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x157: M[V128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x158: V135 = 0x1
0x15a: V136 = 0xa0
0x15c: V137 = 0x2
0x15e: V138 = EXP 0x2 0xa0
0x15f: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x162: V140 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x163: V141 = 0x4
0x166: V142 = ADD V128 0x4
0x167: M[V142] = V140
0x168: V143 = 0x24
0x16b: V144 = ADD V128 0x24
0x16c: M[V144] = S0
0x16d: V145 = 0x44
0x16f: V146 = ADD 0x44 V128
0x170: V147 = 0x0
0x172: V148 = 0x40
0x174: V149 = M[0x40]
0x177: V150 = SUB V146 V149
0x179: V151 = 0x0
0x17d: V152 = EXTCODESIZE V124
0x17e: V153 = ISZERO V152
0x17f: V154 = ISZERO V153
0x180: V155 = 0x188
0x183: JUMPI 0x188 V154
---
Entry stack: [V13, V43, S0]
Stack pops: 1
Stack additions: [S0, V124, 0xa9059cbb, V146, 0x0, V149, V150, V149, 0x0, V124]
Exit stack: [V13, V43, S0, V124, 0xa9059cbb, V146, 0x0, V149, V150, V149, 0x0, V124]

================================

Block 0x184
[0x184:0x187]
---
Predecessors: [0x132]
Successors: []
---
0x184 PUSH1 0x0
0x186 DUP1
0x187 REVERT
---
0x184: V156 = 0x0
0x187: REVERT 0x0 0x0
---
Entry stack: [V13, V43, S9, V124, 0xa9059cbb, V146, 0x0, V149, V150, V149, 0x0, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V43, S9, V124, 0xa9059cbb, V146, 0x0, V149, V150, V149, 0x0, V124]

================================

Block 0x188
[0x188:0x194]
---
Predecessors: [0x132]
Successors: [0x195, 0x199]
---
0x188 JUMPDEST
0x189 PUSH2 0x2c6
0x18c GAS
0x18d SUB
0x18e CALL
0x18f ISZERO
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x188: JUMPDEST 
0x189: V157 = 0x2c6
0x18c: V158 = GAS
0x18d: V159 = SUB V158 0x2c6
0x18e: V160 = CALL V159 V124 0x0 V149 V150 V149 0x0
0x18f: V161 = ISZERO V160
0x190: V162 = ISZERO V161
0x191: V163 = 0x199
0x194: JUMPI 0x199 V162
---
Entry stack: [V13, V43, S9, V124, 0xa9059cbb, V146, 0x0, V149, V150, V149, 0x0, V124]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V43, S9, V124, 0xa9059cbb, V146]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x188]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V164 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V13, V43, S3, V124, 0xa9059cbb, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V43, S3, V124, 0xa9059cbb, V146]

================================

Block 0x199
[0x199:0x19c]
---
Predecessors: [0x188]
Successors: [0x19d]
---
0x199 JUMPDEST
0x19a POP
0x19b POP
0x19c POP
---
0x199: JUMPDEST 
---
Entry stack: [V13, V43, S3, V124, 0xa9059cbb, V146]
Stack pops: 3
Stack additions: []
Exit stack: [V13, V43, S3]

================================

Block 0x19d
[0x19d:0x1a8]
---
Predecessors: [0x105, 0x199]
Successors: []
---
0x19d JUMPDEST
0x19e POP
0x19f PUSH1 0x2
0x1a1 DUP1
0x1a2 SLOAD
0x1a3 SWAP1
0x1a4 SWAP2
0x1a5 ADD
0x1a6 SWAP1
0x1a7 SSTORE
0x1a8 STOP
---
0x19d: JUMPDEST 
0x19f: V165 = 0x2
0x1a2: V166 = S[0x2]
0x1a5: V167 = ADD V43 V166
0x1a7: S[0x2] = V167
0x1a8: STOP 
---
Entry stack: [V13, V43, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a9
[0x1a9:0x1af]
---
Predecessors: [0xd]
Successors: [0x1b0, 0x1b4]
---
0x1a9 JUMPDEST
0x1aa CALLVALUE
0x1ab ISZERO
0x1ac PUSH2 0x1b4
0x1af JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V168 = CALLVALUE
0x1ab: V169 = ISZERO V168
0x1ac: V170 = 0x1b4
0x1af: JUMPI 0x1b4 V169
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1b0
[0x1b0:0x1b3]
---
Predecessors: [0x1a9]
Successors: []
---
0x1b0 PUSH1 0x0
0x1b2 DUP1
0x1b3 REVERT
---
0x1b0: V171 = 0x0
0x1b3: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1b4
[0x1b4:0x1bb]
---
Predecessors: [0x1a9]
Successors: [0x298]
---
0x1b4 JUMPDEST
0x1b5 PUSH2 0x1bc
0x1b8 PUSH2 0x298
0x1bb JUMP
---
0x1b4: JUMPDEST 
0x1b5: V172 = 0x1bc
0x1b8: V173 = 0x298
0x1bb: JUMP 0x298
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1bc]
Exit stack: [V13, 0x1bc]

================================

Block 0x1bc
[0x1bc:0x1cd]
---
Predecessors: [0x298, 0x2bc]
Successors: []
---
0x1bc JUMPDEST
0x1bd PUSH1 0x40
0x1bf MLOAD
0x1c0 SWAP1
0x1c1 DUP2
0x1c2 MSTORE
0x1c3 PUSH1 0x20
0x1c5 ADD
0x1c6 PUSH1 0x40
0x1c8 MLOAD
0x1c9 DUP1
0x1ca SWAP2
0x1cb SUB
0x1cc SWAP1
0x1cd RETURN
---
0x1bc: JUMPDEST 
0x1bd: V174 = 0x40
0x1bf: V175 = M[0x40]
0x1c2: M[V175] = S0
0x1c3: V176 = 0x20
0x1c5: V177 = ADD 0x20 V175
0x1c6: V178 = 0x40
0x1c8: V179 = M[0x40]
0x1cb: V180 = SUB V177 V179
0x1cd: RETURN V179 V180
---
Entry stack: [V13, 0x1bc, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1bc]

================================

Block 0x1ce
[0x1ce:0x1d4]
---
Predecessors: [0x27]
Successors: [0x1d5, 0x1d9]
---
0x1ce JUMPDEST
0x1cf CALLVALUE
0x1d0 ISZERO
0x1d1 PUSH2 0x1d9
0x1d4 JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V181 = CALLVALUE
0x1d0: V182 = ISZERO V181
0x1d1: V183 = 0x1d9
0x1d4: JUMPI 0x1d9 V182
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d5
[0x1d5:0x1d8]
---
Predecessors: [0x1ce]
Successors: []
---
0x1d5 PUSH1 0x0
0x1d7 DUP1
0x1d8 REVERT
---
0x1d5: V184 = 0x0
0x1d8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d9
[0x1d9:0x1e0]
---
Predecessors: [0x1ce]
Successors: [0x29e]
---
0x1d9 JUMPDEST
0x1da PUSH2 0x1e1
0x1dd PUSH2 0x29e
0x1e0 JUMP
---
0x1d9: JUMPDEST 
0x1da: V185 = 0x1e1
0x1dd: V186 = 0x29e
0x1e0: JUMP 0x29e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1e1]
Exit stack: [V13, 0x1e1]

================================

Block 0x1e1
[0x1e1:0x1fc]
---
Predecessors: [0x29e, 0x2ad, 0x2fd]
Successors: []
---
0x1e1 JUMPDEST
0x1e2 PUSH1 0x40
0x1e4 MLOAD
0x1e5 PUSH1 0x1
0x1e7 PUSH1 0xa0
0x1e9 PUSH1 0x2
0x1eb EXP
0x1ec SUB
0x1ed SWAP1
0x1ee SWAP2
0x1ef AND
0x1f0 DUP2
0x1f1 MSTORE
0x1f2 PUSH1 0x20
0x1f4 ADD
0x1f5 PUSH1 0x40
0x1f7 MLOAD
0x1f8 DUP1
0x1f9 SWAP2
0x1fa SUB
0x1fb SWAP1
0x1fc RETURN
---
0x1e1: JUMPDEST 
0x1e2: V187 = 0x40
0x1e4: V188 = M[0x40]
0x1e5: V189 = 0x1
0x1e7: V190 = 0xa0
0x1e9: V191 = 0x2
0x1eb: V192 = EXP 0x2 0xa0
0x1ec: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ef: V194 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: M[V188] = V194
0x1f2: V195 = 0x20
0x1f4: V196 = ADD 0x20 V188
0x1f5: V197 = 0x40
0x1f7: V198 = M[0x40]
0x1fa: V199 = SUB V196 V198
0x1fc: RETURN V198 V199
---
Entry stack: [V13, 0x1e1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1e1]

================================

Block 0x1fd
[0x1fd:0x203]
---
Predecessors: [0x32]
Successors: [0x204, 0x208]
---
0x1fd JUMPDEST
0x1fe CALLVALUE
0x1ff ISZERO
0x200 PUSH2 0x208
0x203 JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V200 = CALLVALUE
0x1ff: V201 = ISZERO V200
0x200: V202 = 0x208
0x203: JUMPI 0x208 V201
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x204
[0x204:0x207]
---
Predecessors: [0x1fd]
Successors: []
---
0x204 PUSH1 0x0
0x206 DUP1
0x207 REVERT
---
0x204: V203 = 0x0
0x207: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x208
[0x208:0x20f]
---
Predecessors: [0x1fd]
Successors: [0x2ad]
---
0x208 JUMPDEST
0x209 PUSH2 0x1e1
0x20c PUSH2 0x2ad
0x20f JUMP
---
0x208: JUMPDEST 
0x209: V204 = 0x1e1
0x20c: V205 = 0x2ad
0x20f: JUMP 0x2ad
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1e1]
Exit stack: [V13, 0x1e1]

================================

Block 0x210
[0x210:0x216]
---
Predecessors: [0x3d]
Successors: [0x217, 0x21b]
---
0x210 JUMPDEST
0x211 CALLVALUE
0x212 ISZERO
0x213 PUSH2 0x21b
0x216 JUMPI
---
0x210: JUMPDEST 
0x211: V206 = CALLVALUE
0x212: V207 = ISZERO V206
0x213: V208 = 0x21b
0x216: JUMPI 0x21b V207
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x217
[0x217:0x21a]
---
Predecessors: [0x210]
Successors: []
---
0x217 PUSH1 0x0
0x219 DUP1
0x21a REVERT
---
0x217: V209 = 0x0
0x21a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x21b
[0x21b:0x222]
---
Predecessors: [0x210]
Successors: [0x2bc]
---
0x21b JUMPDEST
0x21c PUSH2 0x1bc
0x21f PUSH2 0x2bc
0x222 JUMP
---
0x21b: JUMPDEST 
0x21c: V210 = 0x1bc
0x21f: V211 = 0x2bc
0x222: JUMP 0x2bc
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1bc]
Exit stack: [V13, 0x1bc]

================================

Block 0x223
[0x223:0x229]
---
Predecessors: [0x48]
Successors: [0x22a, 0x22e]
---
0x223 JUMPDEST
0x224 CALLVALUE
0x225 ISZERO
0x226 PUSH2 0x22e
0x229 JUMPI
---
0x223: JUMPDEST 
0x224: V212 = CALLVALUE
0x225: V213 = ISZERO V212
0x226: V214 = 0x22e
0x229: JUMPI 0x22e V213
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x22a
[0x22a:0x22d]
---
Predecessors: [0x223]
Successors: []
---
0x22a PUSH1 0x0
0x22c DUP1
0x22d REVERT
---
0x22a: V215 = 0x0
0x22d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x22e
[0x22e:0x235]
---
Predecessors: [0x223]
Successors: [0x2c2]
---
0x22e JUMPDEST
0x22f PUSH2 0x236
0x232 PUSH2 0x2c2
0x235 JUMP
---
0x22e: JUMPDEST 
0x22f: V216 = 0x236
0x232: V217 = 0x2c2
0x235: JUMP 0x2c2
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x236]
Exit stack: [V13, 0x236]

================================

Block 0x236
[0x236:0x237]
---
Predecessors: [0x2dd, 0x327, 0x3e4]
Successors: []
---
0x236 JUMPDEST
0x237 STOP
---
0x236: JUMPDEST 
0x237: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x238
[0x238:0x23e]
---
Predecessors: [0x53]
Successors: [0x23f, 0x243]
---
0x238 JUMPDEST
0x239 CALLVALUE
0x23a ISZERO
0x23b PUSH2 0x243
0x23e JUMPI
---
0x238: JUMPDEST 
0x239: V218 = CALLVALUE
0x23a: V219 = ISZERO V218
0x23b: V220 = 0x243
0x23e: JUMPI 0x243 V219
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x23f
[0x23f:0x242]
---
Predecessors: [0x238]
Successors: []
---
0x23f PUSH1 0x0
0x241 DUP1
0x242 REVERT
---
0x23f: V221 = 0x0
0x242: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x243
[0x243:0x24a]
---
Predecessors: [0x238]
Successors: [0x2fd]
---
0x243 JUMPDEST
0x244 PUSH2 0x1e1
0x247 PUSH2 0x2fd
0x24a JUMP
---
0x243: JUMPDEST 
0x244: V222 = 0x1e1
0x247: V223 = 0x2fd
0x24a: JUMP 0x2fd
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1e1]
Exit stack: [V13, 0x1e1]

================================

Block 0x24b
[0x24b:0x251]
---
Predecessors: [0x5e]
Successors: [0x252, 0x256]
---
0x24b JUMPDEST
0x24c CALLVALUE
0x24d ISZERO
0x24e PUSH2 0x256
0x251 JUMPI
---
0x24b: JUMPDEST 
0x24c: V224 = CALLVALUE
0x24d: V225 = ISZERO V224
0x24e: V226 = 0x256
0x251: JUMPI 0x256 V225
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x252
[0x252:0x255]
---
Predecessors: [0x24b]
Successors: []
---
0x252 PUSH1 0x0
0x254 DUP1
0x255 REVERT
---
0x252: V227 = 0x0
0x255: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x256
[0x256:0x25d]
---
Predecessors: [0x24b]
Successors: [0x30c]
---
0x256 JUMPDEST
0x257 PUSH2 0x236
0x25a PUSH2 0x30c
0x25d JUMP
---
0x256: JUMPDEST 
0x257: V228 = 0x236
0x25a: V229 = 0x30c
0x25d: JUMP 0x30c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x236]
Exit stack: [V13, 0x236]

================================

Block 0x25e
[0x25e:0x264]
---
Predecessors: [0x69]
Successors: [0x265, 0x269]
---
0x25e JUMPDEST
0x25f CALLVALUE
0x260 ISZERO
0x261 PUSH2 0x269
0x264 JUMPI
---
0x25e: JUMPDEST 
0x25f: V230 = CALLVALUE
0x260: V231 = ISZERO V230
0x261: V232 = 0x269
0x264: JUMPI 0x269 V231
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x265
[0x265:0x268]
---
Predecessors: [0x25e]
Successors: []
---
0x265 PUSH1 0x0
0x267 DUP1
0x268 REVERT
---
0x265: V233 = 0x0
0x268: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x269
[0x269:0x270]
---
Predecessors: [0x25e]
Successors: [0x34d]
---
0x269 JUMPDEST
0x26a PUSH2 0x271
0x26d PUSH2 0x34d
0x270 JUMP
---
0x269: JUMPDEST 
0x26a: V234 = 0x271
0x26d: V235 = 0x34d
0x270: JUMP 0x34d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x271]
Exit stack: [V13, 0x271]

================================

Block 0x271
[0x271:0x284]
---
Predecessors: [0x34d]
Successors: []
---
0x271 JUMPDEST
0x272 PUSH1 0x40
0x274 MLOAD
0x275 SWAP1
0x276 ISZERO
0x277 ISZERO
0x278 DUP2
0x279 MSTORE
0x27a PUSH1 0x20
0x27c ADD
0x27d PUSH1 0x40
0x27f MLOAD
0x280 DUP1
0x281 SWAP2
0x282 SUB
0x283 SWAP1
0x284 RETURN
---
0x271: JUMPDEST 
0x272: V236 = 0x40
0x274: V237 = M[0x40]
0x276: V238 = ISZERO V326
0x277: V239 = ISZERO V238
0x279: M[V237] = V239
0x27a: V240 = 0x20
0x27c: V241 = ADD 0x20 V237
0x27d: V242 = 0x40
0x27f: V243 = M[0x40]
0x282: V244 = SUB V241 V243
0x284: RETURN V243 V244
---
Entry stack: [V13, 0x271, V326]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x271]

================================

Block 0x285
[0x285:0x28b]
---
Predecessors: [0x74]
Successors: [0x28c, 0x290]
---
0x285 JUMPDEST
0x286 CALLVALUE
0x287 ISZERO
0x288 PUSH2 0x290
0x28b JUMPI
---
0x285: JUMPDEST 
0x286: V245 = CALLVALUE
0x287: V246 = ISZERO V245
0x288: V247 = 0x290
0x28b: JUMPI 0x290 V246
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x28c
[0x28c:0x28f]
---
Predecessors: [0x285]
Successors: []
---
0x28c PUSH1 0x0
0x28e DUP1
0x28f REVERT
---
0x28c: V248 = 0x0
0x28f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x290
[0x290:0x297]
---
Predecessors: [0x285]
Successors: [0x35d]
---
0x290 JUMPDEST
0x291 PUSH2 0x236
0x294 PUSH2 0x35d
0x297 JUMP
---
0x290: JUMPDEST 
0x291: V249 = 0x236
0x294: V250 = 0x35d
0x297: JUMP 0x35d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x236]
Exit stack: [V13, 0x236]

================================

Block 0x298
[0x298:0x29d]
---
Predecessors: [0x1b4]
Successors: [0x1bc]
---
0x298 JUMPDEST
0x299 PUSH1 0x3
0x29b SLOAD
0x29c DUP2
0x29d JUMP
---
0x298: JUMPDEST 
0x299: V251 = 0x3
0x29b: V252 = S[0x3]
0x29d: JUMP 0x1bc
---
Entry stack: [V13, 0x1bc]
Stack pops: 1
Stack additions: [S0, V252]
Exit stack: [V13, 0x1bc, V252]

================================

Block 0x29e
[0x29e:0x2ac]
---
Predecessors: [0x1d9]
Successors: [0x1e1]
---
0x29e JUMPDEST
0x29f PUSH1 0x0
0x2a1 SLOAD
0x2a2 PUSH1 0x1
0x2a4 PUSH1 0xa0
0x2a6 PUSH1 0x2
0x2a8 EXP
0x2a9 SUB
0x2aa AND
0x2ab DUP2
0x2ac JUMP
---
0x29e: JUMPDEST 
0x29f: V253 = 0x0
0x2a1: V254 = S[0x0]
0x2a2: V255 = 0x1
0x2a4: V256 = 0xa0
0x2a6: V257 = 0x2
0x2a8: V258 = EXP 0x2 0xa0
0x2a9: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2aa: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x2ac: JUMP 0x1e1
---
Entry stack: [V13, 0x1e1]
Stack pops: 1
Stack additions: [S0, V260]
Exit stack: [V13, 0x1e1, V260]

================================

Block 0x2ad
[0x2ad:0x2bb]
---
Predecessors: [0x208]
Successors: [0x1e1]
---
0x2ad JUMPDEST
0x2ae PUSH1 0x4
0x2b0 SLOAD
0x2b1 PUSH1 0x1
0x2b3 PUSH1 0xa0
0x2b5 PUSH1 0x2
0x2b7 EXP
0x2b8 SUB
0x2b9 AND
0x2ba DUP2
0x2bb JUMP
---
0x2ad: JUMPDEST 
0x2ae: V261 = 0x4
0x2b0: V262 = S[0x4]
0x2b1: V263 = 0x1
0x2b3: V264 = 0xa0
0x2b5: V265 = 0x2
0x2b7: V266 = EXP 0x2 0xa0
0x2b8: V267 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b9: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x2bb: JUMP 0x1e1
---
Entry stack: [V13, 0x1e1]
Stack pops: 1
Stack additions: [S0, V268]
Exit stack: [V13, 0x1e1, V268]

================================

Block 0x2bc
[0x2bc:0x2c1]
---
Predecessors: [0x21b]
Successors: [0x1bc]
---
0x2bc JUMPDEST
0x2bd PUSH1 0x2
0x2bf SLOAD
0x2c0 DUP2
0x2c1 JUMP
---
0x2bc: JUMPDEST 
0x2bd: V269 = 0x2
0x2bf: V270 = S[0x2]
0x2c1: JUMP 0x1bc
---
Entry stack: [V13, 0x1bc]
Stack pops: 1
Stack additions: [S0, V270]
Exit stack: [V13, 0x1bc, V270]

================================

Block 0x2c2
[0x2c2:0x2d8]
---
Predecessors: [0x22e]
Successors: [0x2d9, 0x2dd]
---
0x2c2 JUMPDEST
0x2c3 PUSH1 0x1
0x2c5 SLOAD
0x2c6 CALLER
0x2c7 PUSH1 0x1
0x2c9 PUSH1 0xa0
0x2cb PUSH1 0x2
0x2cd EXP
0x2ce SUB
0x2cf SWAP1
0x2d0 DUP2
0x2d1 AND
0x2d2 SWAP2
0x2d3 AND
0x2d4 EQ
0x2d5 PUSH2 0x2dd
0x2d8 JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V271 = 0x1
0x2c5: V272 = S[0x1]
0x2c6: V273 = CALLER
0x2c7: V274 = 0x1
0x2c9: V275 = 0xa0
0x2cb: V276 = 0x2
0x2cd: V277 = EXP 0x2 0xa0
0x2ce: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d1: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x2d3: V280 = AND V272 0xffffffffffffffffffffffffffffffffffffffff
0x2d4: V281 = EQ V280 V279
0x2d5: V282 = 0x2dd
0x2d8: JUMPI 0x2dd V281
---
Entry stack: [V13, 0x236]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x236]

================================

Block 0x2d9
[0x2d9:0x2dc]
---
Predecessors: [0x2c2]
Successors: []
---
0x2d9 PUSH1 0x0
0x2db DUP1
0x2dc REVERT
---
0x2d9: V283 = 0x0
0x2dc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x236]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x236]

================================

Block 0x2dd
[0x2dd:0x2fc]
---
Predecessors: [0x2c2]
Successors: [0x236]
---
0x2dd JUMPDEST
0x2de PUSH1 0x4
0x2e0 DUP1
0x2e1 SLOAD
0x2e2 PUSH21 0xff0000000000000000000000000000000000000000
0x2f8 NOT
0x2f9 AND
0x2fa SWAP1
0x2fb SSTORE
0x2fc JUMP
---
0x2dd: JUMPDEST 
0x2de: V284 = 0x4
0x2e1: V285 = S[0x4]
0x2e2: V286 = 0xff0000000000000000000000000000000000000000
0x2f8: V287 = NOT 0xff0000000000000000000000000000000000000000
0x2f9: V288 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V285
0x2fb: S[0x4] = V288
0x2fc: JUMP 0x236
---
Entry stack: [V13, 0x236]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x2fd
[0x2fd:0x30b]
---
Predecessors: [0x243]
Successors: [0x1e1]
---
0x2fd JUMPDEST
0x2fe PUSH1 0x1
0x300 SLOAD
0x301 PUSH1 0x1
0x303 PUSH1 0xa0
0x305 PUSH1 0x2
0x307 EXP
0x308 SUB
0x309 AND
0x30a DUP2
0x30b JUMP
---
0x2fd: JUMPDEST 
0x2fe: V289 = 0x1
0x300: V290 = S[0x1]
0x301: V291 = 0x1
0x303: V292 = 0xa0
0x305: V293 = 0x2
0x307: V294 = EXP 0x2 0xa0
0x308: V295 = SUB 0x10000000000000000000000000000000000000000 0x1
0x309: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x30b: JUMP 0x1e1
---
Entry stack: [V13, 0x1e1]
Stack pops: 1
Stack additions: [S0, V296]
Exit stack: [V13, 0x1e1, V296]

================================

Block 0x30c
[0x30c:0x322]
---
Predecessors: [0x256]
Successors: [0x323, 0x327]
---
0x30c JUMPDEST
0x30d PUSH1 0x1
0x30f SLOAD
0x310 CALLER
0x311 PUSH1 0x1
0x313 PUSH1 0xa0
0x315 PUSH1 0x2
0x317 EXP
0x318 SUB
0x319 SWAP1
0x31a DUP2
0x31b AND
0x31c SWAP2
0x31d AND
0x31e EQ
0x31f PUSH2 0x327
0x322 JUMPI
---
0x30c: JUMPDEST 
0x30d: V297 = 0x1
0x30f: V298 = S[0x1]
0x310: V299 = CALLER
0x311: V300 = 0x1
0x313: V301 = 0xa0
0x315: V302 = 0x2
0x317: V303 = EXP 0x2 0xa0
0x318: V304 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31b: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x31d: V306 = AND V298 0xffffffffffffffffffffffffffffffffffffffff
0x31e: V307 = EQ V306 V305
0x31f: V308 = 0x327
0x322: JUMPI 0x327 V307
---
Entry stack: [V13, 0x236]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x236]

================================

Block 0x323
[0x323:0x326]
---
Predecessors: [0x30c]
Successors: []
---
0x323 PUSH1 0x0
0x325 DUP1
0x326 REVERT
---
0x323: V309 = 0x0
0x326: REVERT 0x0 0x0
---
Entry stack: [V13, 0x236]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x236]

================================

Block 0x327
[0x327:0x34c]
---
Predecessors: [0x30c]
Successors: [0x236]
---
0x327 JUMPDEST
0x328 PUSH1 0x4
0x32a DUP1
0x32b SLOAD
0x32c PUSH21 0xff0000000000000000000000000000000000000000
0x342 NOT
0x343 AND
0x344 PUSH1 0xa0
0x346 PUSH1 0x2
0x348 EXP
0x349 OR
0x34a SWAP1
0x34b SSTORE
0x34c JUMP
---
0x327: JUMPDEST 
0x328: V310 = 0x4
0x32b: V311 = S[0x4]
0x32c: V312 = 0xff0000000000000000000000000000000000000000
0x342: V313 = NOT 0xff0000000000000000000000000000000000000000
0x343: V314 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V311
0x344: V315 = 0xa0
0x346: V316 = 0x2
0x348: V317 = EXP 0x2 0xa0
0x349: V318 = OR 0x10000000000000000000000000000000000000000 V314
0x34b: S[0x4] = V318
0x34c: JUMP 0x236
---
Entry stack: [V13, 0x236]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x34d
[0x34d:0x35c]
---
Predecessors: [0x269]
Successors: [0x271]
---
0x34d JUMPDEST
0x34e PUSH1 0x4
0x350 SLOAD
0x351 PUSH1 0xa0
0x353 PUSH1 0x2
0x355 EXP
0x356 SWAP1
0x357 DIV
0x358 PUSH1 0xff
0x35a AND
0x35b DUP2
0x35c JUMP
---
0x34d: JUMPDEST 
0x34e: V319 = 0x4
0x350: V320 = S[0x4]
0x351: V321 = 0xa0
0x353: V322 = 0x2
0x355: V323 = EXP 0x2 0xa0
0x357: V324 = DIV V320 0x10000000000000000000000000000000000000000
0x358: V325 = 0xff
0x35a: V326 = AND 0xff V324
0x35c: JUMP 0x271
---
Entry stack: [V13, 0x271]
Stack pops: 1
Stack additions: [S0, V326]
Exit stack: [V13, 0x271, V326]

================================

Block 0x35d
[0x35d:0x366]
---
Predecessors: [0x290]
Successors: [0x367, 0x3e4]
---
0x35d JUMPDEST
0x35e PUSH1 0x3
0x360 SLOAD
0x361 TIMESTAMP
0x362 LT
0x363 PUSH2 0x3e4
0x366 JUMPI
---
0x35d: JUMPDEST 
0x35e: V327 = 0x3
0x360: V328 = S[0x3]
0x361: V329 = TIMESTAMP
0x362: V330 = LT V329 V328
0x363: V331 = 0x3e4
0x366: JUMPI 0x3e4 V330
---
Entry stack: [V13, 0x236]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x236]

================================

Block 0x367
[0x367:0x37c]
---
Predecessors: [0x35d]
Successors: [0x37d, 0x381]
---
0x367 PUSH1 0x1
0x369 SLOAD
0x36a CALLER
0x36b PUSH1 0x1
0x36d PUSH1 0xa0
0x36f PUSH1 0x2
0x371 EXP
0x372 SUB
0x373 SWAP1
0x374 DUP2
0x375 AND
0x376 SWAP2
0x377 AND
0x378 EQ
0x379 PUSH2 0x381
0x37c JUMPI
---
0x367: V332 = 0x1
0x369: V333 = S[0x1]
0x36a: V334 = CALLER
0x36b: V335 = 0x1
0x36d: V336 = 0xa0
0x36f: V337 = 0x2
0x371: V338 = EXP 0x2 0xa0
0x372: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x375: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x377: V341 = AND V333 0xffffffffffffffffffffffffffffffffffffffff
0x378: V342 = EQ V341 V340
0x379: V343 = 0x381
0x37c: JUMPI 0x381 V342
---
Entry stack: [V13, 0x236]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x236]

================================

Block 0x37d
[0x37d:0x380]
---
Predecessors: [0x367]
Successors: []
---
0x37d PUSH1 0x0
0x37f DUP1
0x380 REVERT
---
0x37d: V344 = 0x0
0x380: REVERT 0x0 0x0
---
Entry stack: [V13, 0x236]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x236]

================================

Block 0x381
[0x381:0x3d9]
---
Predecessors: [0x367]
Successors: [0x3da, 0x3de]
---
0x381 JUMPDEST
0x382 PUSH1 0x4
0x384 DUP1
0x385 SLOAD
0x386 PUSH21 0xff0000000000000000000000000000000000000000
0x39c NOT
0x39d AND
0x39e PUSH1 0xa0
0x3a0 PUSH1 0x2
0x3a2 EXP
0x3a3 OR
0x3a4 SWAP1
0x3a5 SSTORE
0x3a6 PUSH1 0x0
0x3a8 SLOAD
0x3a9 PUSH1 0x2
0x3ab SLOAD
0x3ac PUSH1 0x1
0x3ae PUSH1 0xa0
0x3b0 PUSH1 0x2
0x3b2 EXP
0x3b3 SUB
0x3b4 SWAP1
0x3b5 SWAP2
0x3b6 AND
0x3b7 SWAP1
0x3b8 DUP1
0x3b9 ISZERO
0x3ba PUSH2 0x8fc
0x3bd MUL
0x3be SWAP1
0x3bf PUSH1 0x40
0x3c1 MLOAD
0x3c2 PUSH1 0x0
0x3c4 PUSH1 0x40
0x3c6 MLOAD
0x3c7 DUP1
0x3c8 DUP4
0x3c9 SUB
0x3ca DUP2
0x3cb DUP6
0x3cc DUP9
0x3cd DUP9
0x3ce CALL
0x3cf SWAP4
0x3d0 POP
0x3d1 POP
0x3d2 POP
0x3d3 POP
0x3d4 ISZERO
0x3d5 ISZERO
0x3d6 PUSH2 0x3de
0x3d9 JUMPI
---
0x381: JUMPDEST 
0x382: V345 = 0x4
0x385: V346 = S[0x4]
0x386: V347 = 0xff0000000000000000000000000000000000000000
0x39c: V348 = NOT 0xff0000000000000000000000000000000000000000
0x39d: V349 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V346
0x39e: V350 = 0xa0
0x3a0: V351 = 0x2
0x3a2: V352 = EXP 0x2 0xa0
0x3a3: V353 = OR 0x10000000000000000000000000000000000000000 V349
0x3a5: S[0x4] = V353
0x3a6: V354 = 0x0
0x3a8: V355 = S[0x0]
0x3a9: V356 = 0x2
0x3ab: V357 = S[0x2]
0x3ac: V358 = 0x1
0x3ae: V359 = 0xa0
0x3b0: V360 = 0x2
0x3b2: V361 = EXP 0x2 0xa0
0x3b3: V362 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b6: V363 = AND V355 0xffffffffffffffffffffffffffffffffffffffff
0x3b9: V364 = ISZERO V357
0x3ba: V365 = 0x8fc
0x3bd: V366 = MUL 0x8fc V364
0x3bf: V367 = 0x40
0x3c1: V368 = M[0x40]
0x3c2: V369 = 0x0
0x3c4: V370 = 0x40
0x3c6: V371 = M[0x40]
0x3c9: V372 = SUB V368 V371
0x3ce: V373 = CALL V366 V363 V357 V371 V372 V371 0x0
0x3d4: V374 = ISZERO V373
0x3d5: V375 = ISZERO V374
0x3d6: V376 = 0x3de
0x3d9: JUMPI 0x3de V375
---
Entry stack: [V13, 0x236]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x236]

================================

Block 0x3da
[0x3da:0x3dd]
---
Predecessors: [0x381]
Successors: []
---
0x3da PUSH1 0x0
0x3dc DUP1
0x3dd REVERT
---
0x3da: V377 = 0x0
0x3dd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x236]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x236]

================================

Block 0x3de
[0x3de:0x3e3]
---
Predecessors: [0x381]
Successors: [0x3e4]
---
0x3de JUMPDEST
0x3df PUSH1 0x0
0x3e1 PUSH1 0x2
0x3e3 SSTORE
---
0x3de: JUMPDEST 
0x3df: V378 = 0x0
0x3e1: V379 = 0x2
0x3e3: S[0x2] = 0x0
---
Entry stack: [V13, 0x236]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x236]

================================

Block 0x3e4
[0x3e4:0x3e5]
---
Predecessors: [0x35d, 0x3de]
Successors: [0x236]
---
0x3e4 JUMPDEST
0x3e5 JUMP
---
0x3e4: JUMPDEST 
0x3e5: JUMP 0x236
---
Entry stack: [V13, 0x236]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x3e6
[0x3e6:0x411]
---
Predecessors: []
Successors: []
---
0x3e6 STOP
0x3e7 LOG1
0x3e8 PUSH6 0x627a7a723058
0x3ef SHA3
0x3f0 PUSH31 0xaffad2b885dc6fe0d1456b517209e2eb4a506bd5b042e6403d5719f76dc7ae
0x410 STOP
0x411 MISSING 0x29
---
0x3e6: STOP 
0x3e7: LOG S0 S1 S2
0x3e8: V380 = 0x627a7a723058
0x3ef: V381 = SHA3 0x627a7a723058 S3
0x3f0: V382 = 0xaffad2b885dc6fe0d1456b517209e2eb4a506bd5b042e6403d5719f76dc7ae
0x410: STOP 
0x411: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xaffad2b885dc6fe0d1456b517209e2eb4a506bd5b042e6403d5719f76dc7ae, V381]
Exit stack: []

================================

Function 0:
Public function signature: 0x29dcb0cf
Entry block: 0x1a9
Exit block: 0x1bc
Body: 0x1a9, 0x1b0, 0x1b4, 0x1bc, 0x298

Function 1:
Public function signature: 0x38af3eed
Entry block: 0x1ce
Exit block: 0x1e1
Body: 0x1ce, 0x1d5, 0x1d9, 0x1e1, 0x29e

Function 2:
Public function signature: 0x6e66f6e9
Entry block: 0x1fd
Exit block: 0x1e1
Body: 0x1e1, 0x1fd, 0x204, 0x208, 0x2ad

Function 3:
Public function signature: 0x7b3e5e7b
Entry block: 0x210
Exit block: 0x1bc
Body: 0x1bc, 0x210, 0x217, 0x21b, 0x2bc

Function 4:
Public function signature: 0x827037db
Entry block: 0x223
Exit block: 0x236
Body: 0x223, 0x22a, 0x22e, 0x236, 0x2c2, 0x2d9, 0x2dd

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x238
Exit block: 0x1e1
Body: 0x1e1, 0x238, 0x23f, 0x243, 0x2fd

Function 6:
Public function signature: 0xb531a872
Entry block: 0x24b
Exit block: 0x236
Body: 0x236, 0x24b, 0x252, 0x256, 0x30c, 0x323, 0x327

Function 7:
Public function signature: 0xccb07cef
Entry block: 0x25e
Exit block: 0x271
Body: 0x25e, 0x265, 0x269, 0x271, 0x34d

Function 8:
Public function signature: 0xd4e93292
Entry block: 0x285
Exit block: 0x3da
Body: 0x236, 0x285, 0x28c, 0x290, 0x35d, 0x367, 0x37d, 0x381, 0x3da, 0x3de, 0x3e4

Function 9:
Public fallback function
Entry block: 0x7f
Exit block: 0x19d
Body: 0x7f, 0x9f, 0xf0, 0xf4, 0x101, 0x105, 0x10d, 0x117, 0x11e, 0x127, 0x12e, 0x132, 0x184, 0x188, 0x195, 0x199, 0x19d

