Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xbf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xbf
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xbf
0xa: JUMPI 0xbf V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x107]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x12ea965d
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x107
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x12ea965d
0x20: V14 = EQ V12 0x12ea965d
0x21: V15 = 0x107
0x24: JUMPI 0x107 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x129]
---
0x25 DUP1
0x26 PUSH4 0x43062ea7
0x2b EQ
0x2c PUSH2 0x129
0x2f JUMPI
---
0x26: V16 = 0x43062ea7
0x2b: V17 = EQ 0x43062ea7 V12
0x2c: V18 = 0x129
0x2f: JUMPI 0x129 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x13e]
---
0x30 DUP1
0x31 PUSH4 0x49df728c
0x36 EQ
0x37 PUSH2 0x13e
0x3a JUMPI
---
0x31: V19 = 0x49df728c
0x36: V20 = EQ 0x49df728c V12
0x37: V21 = 0x13e
0x3a: JUMPI 0x13e V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x15c]
---
0x3b DUP1
0x3c PUSH4 0x68d324e7
0x41 EQ
0x42 PUSH2 0x15c
0x45 JUMPI
---
0x3c: V22 = 0x68d324e7
0x41: V23 = EQ 0x68d324e7 V12
0x42: V24 = 0x15c
0x45: JUMPI 0x15c V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x17a]
---
0x46 DUP1
0x47 PUSH4 0x7362377b
0x4c EQ
0x4d PUSH2 0x17a
0x50 JUMPI
---
0x47: V25 = 0x7362377b
0x4c: V26 = EQ 0x7362377b V12
0x4d: V27 = 0x17a
0x50: JUMPI 0x17a V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x18c]
---
0x51 DUP1
0x52 PUSH4 0x7770bd15
0x57 EQ
0x58 PUSH2 0x18c
0x5b JUMPI
---
0x52: V28 = 0x7770bd15
0x57: V29 = EQ 0x7770bd15 V12
0x58: V30 = 0x18c
0x5b: JUMPI 0x18c V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1b8]
---
0x5c DUP1
0x5d PUSH4 0x89826963
0x62 EQ
0x63 PUSH2 0x1b8
0x66 JUMPI
---
0x5d: V31 = 0x89826963
0x62: V32 = EQ 0x89826963 V12
0x63: V33 = 0x1b8
0x66: JUMPI 0x1b8 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1cd]
---
0x67 DUP1
0x68 PUSH4 0x8da5cb5b
0x6d EQ
0x6e PUSH2 0x1cd
0x71 JUMPI
---
0x68: V34 = 0x8da5cb5b
0x6d: V35 = EQ 0x8da5cb5b V12
0x6e: V36 = 0x1cd
0x71: JUMPI 0x1cd V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1f9]
---
0x72 DUP1
0x73 PUSH4 0x9665b658
0x78 EQ
0x79 PUSH2 0x1f9
0x7c JUMPI
---
0x73: V37 = 0x9665b658
0x78: V38 = EQ 0x9665b658 V12
0x79: V39 = 0x1f9
0x7c: JUMPI 0x1f9 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x217]
---
0x7d DUP1
0x7e PUSH4 0xa7c3d71b
0x83 EQ
0x84 PUSH2 0x217
0x87 JUMPI
---
0x7e: V40 = 0xa7c3d71b
0x83: V41 = EQ 0xa7c3d71b V12
0x84: V42 = 0x217
0x87: JUMPI 0x217 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x239]
---
0x88 DUP1
0x89 PUSH4 0xab0fe874
0x8e EQ
0x8f PUSH2 0x239
0x92 JUMPI
---
0x89: V43 = 0xab0fe874
0x8e: V44 = EQ 0xab0fe874 V12
0x8f: V45 = 0x239
0x92: JUMPI 0x239 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x25b]
---
0x93 DUP1
0x94 PUSH4 0xc34c08e5
0x99 EQ
0x9a PUSH2 0x25b
0x9d JUMPI
---
0x94: V46 = 0xc34c08e5
0x99: V47 = EQ 0xc34c08e5 V12
0x9a: V48 = 0x25b
0x9d: JUMPI 0x25b V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x287]
---
0x9e DUP1
0x9f PUSH4 0xc59b5562
0xa4 EQ
0xa5 PUSH2 0x287
0xa8 JUMPI
---
0x9f: V49 = 0xc59b5562
0xa4: V50 = EQ 0xc59b5562 V12
0xa5: V51 = 0x287
0xa8: JUMPI 0x287 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x299]
---
0xa9 DUP1
0xaa PUSH4 0xe52c0f24
0xaf EQ
0xb0 PUSH2 0x299
0xb3 JUMPI
---
0xaa: V52 = 0xe52c0f24
0xaf: V53 = EQ 0xe52c0f24 V12
0xb0: V54 = 0x299
0xb3: JUMPI 0x299 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x2ae]
---
0xb4 DUP1
0xb5 PUSH4 0xf2fde38b
0xba EQ
0xbb PUSH2 0x2ae
0xbe JUMPI
---
0xb5: V55 = 0xf2fde38b
0xba: V56 = EQ 0xf2fde38b V12
0xbb: V57 = 0x2ae
0xbe: JUMPI 0x2ae V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0x0, 0xb4]
Successors: [0xc3]
---
0xbf JUMPDEST
0xc0 PUSH2 0x105
---
0xbf: JUMPDEST 
0xc0: V58 = 0x105
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V12, 0x105]

================================

Block 0xc3
[0xc3:0x102]
---
Predecessors: [0xbf]
Successors: [0x103]
---
0xc3 JUMPDEST
0xc4 PUSH1 0x40
0xc6 DUP1
0xc7 MLOAD
0xc8 CALLVALUE
0xc9 DUP2
0xca MSTORE
0xcb SWAP1
0xcc MLOAD
0xcd PUSH1 0x1
0xcf PUSH1 0xa0
0xd1 PUSH1 0x2
0xd3 EXP
0xd4 SUB
0xd5 CALLER
0xd6 AND
0xd7 SWAP2
0xd8 PUSH32 0x1e57e3bb474320be3d2c77138f75b7c3941292d647f5f9634e33a8e94e0e069b
0xf9 SWAP2
0xfa SWAP1
0xfb DUP2
0xfc SWAP1
0xfd SUB
0xfe PUSH1 0x20
0x100 ADD
0x101 SWAP1
0x102 LOG2
---
0xc3: JUMPDEST 
0xc4: V59 = 0x40
0xc7: V60 = M[0x40]
0xc8: V61 = CALLVALUE
0xca: M[V60] = V61
0xcc: V62 = M[0x40]
0xcd: V63 = 0x1
0xcf: V64 = 0xa0
0xd1: V65 = 0x2
0xd3: V66 = EXP 0x2 0xa0
0xd4: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd5: V68 = CALLER
0xd6: V69 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0xd8: V70 = 0x1e57e3bb474320be3d2c77138f75b7c3941292d647f5f9634e33a8e94e0e069b
0xfd: V71 = SUB V60 V62
0xfe: V72 = 0x20
0x100: V73 = ADD 0x20 V71
0x102: LOG V62 V73 0x1e57e3bb474320be3d2c77138f75b7c3941292d647f5f9634e33a8e94e0e069b V69
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x103
[0x103:0x104]
---
Predecessors: [0xc3]
Successors: [0x105]
---
0x103 JUMPDEST
0x104 JUMP
---
0x103: JUMPDEST 
0x104: JUMP 0x105
---
Entry stack: [V12, 0x105]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x105
[0x105:0x106]
---
Predecessors: [0x103, 0x328, 0x481, 0x4fb, 0x5a6, 0x628, 0x6a9, 0x7d6, 0x84a, 0x896]
Successors: []
---
0x105 JUMPDEST
0x106 STOP
---
0x105: JUMPDEST 
0x106: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x107
[0x107:0x10d]
---
Predecessors: [0xb]
Successors: [0x10e, 0x10f]
---
0x107 JUMPDEST
0x108 CALLVALUE
0x109 ISZERO
0x10a PUSH2 0x10f
0x10d JUMPI
---
0x107: JUMPDEST 
0x108: V74 = CALLVALUE
0x109: V75 = ISZERO V74
0x10a: V76 = 0x10f
0x10d: JUMPI 0x10f V75
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10e
[0x10e:0x10e]
---
Predecessors: [0x107]
Successors: []
---
0x10e INVALID
---
0x10e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10f
[0x10f:0x116]
---
Predecessors: [0x107]
Successors: [0x2cc]
---
0x10f JUMPDEST
0x110 PUSH2 0x117
0x113 PUSH2 0x2cc
0x116 JUMP
---
0x10f: JUMPDEST 
0x110: V77 = 0x117
0x113: V78 = 0x2cc
0x116: JUMP 0x2cc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x117]
Exit stack: [V12, 0x117]

================================

Block 0x117
[0x117:0x128]
---
Predecessors: [0x2cc, 0x6ac, 0x6b2]
Successors: []
---
0x117 JUMPDEST
0x118 PUSH1 0x40
0x11a DUP1
0x11b MLOAD
0x11c SWAP2
0x11d DUP3
0x11e MSTORE
0x11f MLOAD
0x120 SWAP1
0x121 DUP2
0x122 SWAP1
0x123 SUB
0x124 PUSH1 0x20
0x126 ADD
0x127 SWAP1
0x128 RETURN
---
0x117: JUMPDEST 
0x118: V79 = 0x40
0x11b: V80 = M[0x40]
0x11e: M[V80] = S0
0x11f: V81 = M[0x40]
0x123: V82 = SUB V80 V81
0x124: V83 = 0x20
0x126: V84 = ADD 0x20 V82
0x128: RETURN V81 V84
---
Entry stack: [V12, 0x117, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x117]

================================

Block 0x129
[0x129:0x12f]
---
Predecessors: [0x25]
Successors: [0x130, 0x131]
---
0x129 JUMPDEST
0x12a CALLVALUE
0x12b ISZERO
0x12c PUSH2 0x131
0x12f JUMPI
---
0x129: JUMPDEST 
0x12a: V85 = CALLVALUE
0x12b: V86 = ISZERO V85
0x12c: V87 = 0x131
0x12f: JUMPI 0x131 V86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x130
[0x130:0x130]
---
Predecessors: [0x129]
Successors: []
---
0x130 INVALID
---
0x130: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x131
[0x131:0x13b]
---
Predecessors: [0x129]
Successors: [0x2d2]
---
0x131 JUMPDEST
0x132 PUSH2 0x105
0x135 PUSH1 0x4
0x137 CALLDATALOAD
0x138 PUSH2 0x2d2
0x13b JUMP
---
0x131: JUMPDEST 
0x132: V88 = 0x105
0x135: V89 = 0x4
0x137: V90 = CALLDATALOAD 0x4
0x138: V91 = 0x2d2
0x13b: JUMP 0x2d2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105, V90]
Exit stack: [V12, 0x105, V90]

================================

Block 0x13c
[0x13c:0x13d]
---
Predecessors: []
Successors: []
---
0x13c JUMPDEST
0x13d STOP
---
0x13c: JUMPDEST 
0x13d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13e
[0x13e:0x144]
---
Predecessors: [0x30]
Successors: [0x145, 0x146]
---
0x13e JUMPDEST
0x13f CALLVALUE
0x140 ISZERO
0x141 PUSH2 0x146
0x144 JUMPI
---
0x13e: JUMPDEST 
0x13f: V92 = CALLVALUE
0x140: V93 = ISZERO V92
0x141: V94 = 0x146
0x144: JUMPI 0x146 V93
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x145
[0x145:0x145]
---
Predecessors: [0x13e]
Successors: []
---
0x145 INVALID
---
0x145: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x146
[0x146:0x159]
---
Predecessors: [0x13e]
Successors: [0x32b]
---
0x146 JUMPDEST
0x147 PUSH2 0x105
0x14a PUSH1 0x1
0x14c PUSH1 0xa0
0x14e PUSH1 0x2
0x150 EXP
0x151 SUB
0x152 PUSH1 0x4
0x154 CALLDATALOAD
0x155 AND
0x156 PUSH2 0x32b
0x159 JUMP
---
0x146: JUMPDEST 
0x147: V95 = 0x105
0x14a: V96 = 0x1
0x14c: V97 = 0xa0
0x14e: V98 = 0x2
0x150: V99 = EXP 0x2 0xa0
0x151: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x152: V101 = 0x4
0x154: V102 = CALLDATALOAD 0x4
0x155: V103 = AND V102 0xffffffffffffffffffffffffffffffffffffffff
0x156: V104 = 0x32b
0x159: JUMP 0x32b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105, V103]
Exit stack: [V12, 0x105, V103]

================================

Block 0x15a
[0x15a:0x15b]
---
Predecessors: []
Successors: []
---
0x15a JUMPDEST
0x15b STOP
---
0x15a: JUMPDEST 
0x15b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15c
[0x15c:0x162]
---
Predecessors: [0x3b]
Successors: [0x163, 0x164]
---
0x15c JUMPDEST
0x15d CALLVALUE
0x15e ISZERO
0x15f PUSH2 0x164
0x162 JUMPI
---
0x15c: JUMPDEST 
0x15d: V105 = CALLVALUE
0x15e: V106 = ISZERO V105
0x15f: V107 = 0x164
0x162: JUMPI 0x164 V106
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x163
[0x163:0x163]
---
Predecessors: [0x15c]
Successors: []
---
0x163 INVALID
---
0x163: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x164
[0x164:0x177]
---
Predecessors: [0x15c]
Successors: [0x486]
---
0x164 JUMPDEST
0x165 PUSH2 0x105
0x168 PUSH1 0x1
0x16a PUSH1 0xa0
0x16c PUSH1 0x2
0x16e EXP
0x16f SUB
0x170 PUSH1 0x4
0x172 CALLDATALOAD
0x173 AND
0x174 PUSH2 0x486
0x177 JUMP
---
0x164: JUMPDEST 
0x165: V108 = 0x105
0x168: V109 = 0x1
0x16a: V110 = 0xa0
0x16c: V111 = 0x2
0x16e: V112 = EXP 0x2 0xa0
0x16f: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x170: V114 = 0x4
0x172: V115 = CALLDATALOAD 0x4
0x173: V116 = AND V115 0xffffffffffffffffffffffffffffffffffffffff
0x174: V117 = 0x486
0x177: JUMP 0x486
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105, V116]
Exit stack: [V12, 0x105, V116]

================================

Block 0x178
[0x178:0x179]
---
Predecessors: []
Successors: []
---
0x178 JUMPDEST
0x179 STOP
---
0x178: JUMPDEST 
0x179: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x17a
[0x17a:0x180]
---
Predecessors: [0x46]
Successors: [0x181, 0x182]
---
0x17a JUMPDEST
0x17b CALLVALUE
0x17c ISZERO
0x17d PUSH2 0x182
0x180 JUMPI
---
0x17a: JUMPDEST 
0x17b: V118 = CALLVALUE
0x17c: V119 = ISZERO V118
0x17d: V120 = 0x182
0x180: JUMPI 0x182 V119
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x181
[0x181:0x181]
---
Predecessors: [0x17a]
Successors: []
---
0x181 INVALID
---
0x181: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x182
[0x182:0x189]
---
Predecessors: [0x17a]
Successors: [0x4fe]
---
0x182 JUMPDEST
0x183 PUSH2 0x105
0x186 PUSH2 0x4fe
0x189 JUMP
---
0x182: JUMPDEST 
0x183: V121 = 0x105
0x186: V122 = 0x4fe
0x189: JUMP 0x4fe
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V12, 0x105]

================================

Block 0x18a
[0x18a:0x18b]
---
Predecessors: []
Successors: []
---
0x18a JUMPDEST
0x18b STOP
---
0x18a: JUMPDEST 
0x18b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x18c
[0x18c:0x192]
---
Predecessors: [0x51]
Successors: [0x193, 0x194]
---
0x18c JUMPDEST
0x18d CALLVALUE
0x18e ISZERO
0x18f PUSH2 0x194
0x192 JUMPI
---
0x18c: JUMPDEST 
0x18d: V123 = CALLVALUE
0x18e: V124 = ISZERO V123
0x18f: V125 = 0x194
0x192: JUMPI 0x194 V124
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x193
[0x193:0x193]
---
Predecessors: [0x18c]
Successors: []
---
0x193 INVALID
---
0x193: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x194
[0x194:0x19b]
---
Predecessors: [0x18c]
Successors: [0x5a8]
---
0x194 JUMPDEST
0x195 PUSH2 0x19c
0x198 PUSH2 0x5a8
0x19b JUMP
---
0x194: JUMPDEST 
0x195: V126 = 0x19c
0x198: V127 = 0x5a8
0x19b: JUMP 0x5a8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x19c]
Exit stack: [V12, 0x19c]

================================

Block 0x19c
[0x19c:0x1b7]
---
Predecessors: [0x5a8, 0x62b, 0x6b8]
Successors: []
---
0x19c JUMPDEST
0x19d PUSH1 0x40
0x19f DUP1
0x1a0 MLOAD
0x1a1 PUSH1 0x1
0x1a3 PUSH1 0xa0
0x1a5 PUSH1 0x2
0x1a7 EXP
0x1a8 SUB
0x1a9 SWAP1
0x1aa SWAP3
0x1ab AND
0x1ac DUP3
0x1ad MSTORE
0x1ae MLOAD
0x1af SWAP1
0x1b0 DUP2
0x1b1 SWAP1
0x1b2 SUB
0x1b3 PUSH1 0x20
0x1b5 ADD
0x1b6 SWAP1
0x1b7 RETURN
---
0x19c: JUMPDEST 
0x19d: V128 = 0x40
0x1a0: V129 = M[0x40]
0x1a1: V130 = 0x1
0x1a3: V131 = 0xa0
0x1a5: V132 = 0x2
0x1a7: V133 = EXP 0x2 0xa0
0x1a8: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ab: V135 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1ad: M[V129] = V135
0x1ae: V136 = M[0x40]
0x1b2: V137 = SUB V129 V136
0x1b3: V138 = 0x20
0x1b5: V139 = ADD 0x20 V137
0x1b7: RETURN V136 V139
---
Entry stack: [V12, 0x19c, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x19c]

================================

Block 0x1b8
[0x1b8:0x1be]
---
Predecessors: [0x5c]
Successors: [0x1bf, 0x1c0]
---
0x1b8 JUMPDEST
0x1b9 CALLVALUE
0x1ba ISZERO
0x1bb PUSH2 0x1c0
0x1be JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V140 = CALLVALUE
0x1ba: V141 = ISZERO V140
0x1bb: V142 = 0x1c0
0x1be: JUMPI 0x1c0 V141
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bf
[0x1bf:0x1bf]
---
Predecessors: [0x1b8]
Successors: []
---
0x1bf INVALID
---
0x1bf: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c0
[0x1c0:0x1ca]
---
Predecessors: [0x1b8]
Successors: [0x5b7]
---
0x1c0 JUMPDEST
0x1c1 PUSH2 0x105
0x1c4 PUSH1 0x4
0x1c6 CALLDATALOAD
0x1c7 PUSH2 0x5b7
0x1ca JUMP
---
0x1c0: JUMPDEST 
0x1c1: V143 = 0x105
0x1c4: V144 = 0x4
0x1c6: V145 = CALLDATALOAD 0x4
0x1c7: V146 = 0x5b7
0x1ca: JUMP 0x5b7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105, V145]
Exit stack: [V12, 0x105, V145]

================================

Block 0x1cb
[0x1cb:0x1cc]
---
Predecessors: []
Successors: []
---
0x1cb JUMPDEST
0x1cc STOP
---
0x1cb: JUMPDEST 
0x1cc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1cd
[0x1cd:0x1d3]
---
Predecessors: [0x67]
Successors: [0x1d4, 0x1d5]
---
0x1cd JUMPDEST
0x1ce CALLVALUE
0x1cf ISZERO
0x1d0 PUSH2 0x1d5
0x1d3 JUMPI
---
0x1cd: JUMPDEST 
0x1ce: V147 = CALLVALUE
0x1cf: V148 = ISZERO V147
0x1d0: V149 = 0x1d5
0x1d3: JUMPI 0x1d5 V148
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d4
[0x1d4:0x1d4]
---
Predecessors: [0x1cd]
Successors: []
---
0x1d4 INVALID
---
0x1d4: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d5
[0x1d5:0x1dc]
---
Predecessors: [0x1cd]
Successors: [0x62b]
---
0x1d5 JUMPDEST
0x1d6 PUSH2 0x19c
0x1d9 PUSH2 0x62b
0x1dc JUMP
---
0x1d5: JUMPDEST 
0x1d6: V150 = 0x19c
0x1d9: V151 = 0x62b
0x1dc: JUMP 0x62b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x19c]
Exit stack: [V12, 0x19c]

================================

Block 0x1dd
[0x1dd:0x1f8]
---
Predecessors: []
Successors: []
---
0x1dd JUMPDEST
0x1de PUSH1 0x40
0x1e0 DUP1
0x1e1 MLOAD
0x1e2 PUSH1 0x1
0x1e4 PUSH1 0xa0
0x1e6 PUSH1 0x2
0x1e8 EXP
0x1e9 SUB
0x1ea SWAP1
0x1eb SWAP3
0x1ec AND
0x1ed DUP3
0x1ee MSTORE
0x1ef MLOAD
0x1f0 SWAP1
0x1f1 DUP2
0x1f2 SWAP1
0x1f3 SUB
0x1f4 PUSH1 0x20
0x1f6 ADD
0x1f7 SWAP1
0x1f8 RETURN
---
0x1dd: JUMPDEST 
0x1de: V152 = 0x40
0x1e1: V153 = M[0x40]
0x1e2: V154 = 0x1
0x1e4: V155 = 0xa0
0x1e6: V156 = 0x2
0x1e8: V157 = EXP 0x2 0xa0
0x1e9: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ec: V159 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: M[V153] = V159
0x1ef: V160 = M[0x40]
0x1f3: V161 = SUB V153 V160
0x1f4: V162 = 0x20
0x1f6: V163 = ADD 0x20 V161
0x1f8: RETURN V160 V163
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1f9
[0x1f9:0x1ff]
---
Predecessors: [0x72]
Successors: [0x200, 0x201]
---
0x1f9 JUMPDEST
0x1fa CALLVALUE
0x1fb ISZERO
0x1fc PUSH2 0x201
0x1ff JUMPI
---
0x1f9: JUMPDEST 
0x1fa: V164 = CALLVALUE
0x1fb: V165 = ISZERO V164
0x1fc: V166 = 0x201
0x1ff: JUMPI 0x201 V165
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x200
[0x200:0x200]
---
Predecessors: [0x1f9]
Successors: []
---
0x200 INVALID
---
0x200: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x201
[0x201:0x214]
---
Predecessors: [0x1f9]
Successors: [0x63a]
---
0x201 JUMPDEST
0x202 PUSH2 0x105
0x205 PUSH1 0x1
0x207 PUSH1 0xa0
0x209 PUSH1 0x2
0x20b EXP
0x20c SUB
0x20d PUSH1 0x4
0x20f CALLDATALOAD
0x210 AND
0x211 PUSH2 0x63a
0x214 JUMP
---
0x201: JUMPDEST 
0x202: V167 = 0x105
0x205: V168 = 0x1
0x207: V169 = 0xa0
0x209: V170 = 0x2
0x20b: V171 = EXP 0x2 0xa0
0x20c: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20d: V173 = 0x4
0x20f: V174 = CALLDATALOAD 0x4
0x210: V175 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x211: V176 = 0x63a
0x214: JUMP 0x63a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105, V175]
Exit stack: [V12, 0x105, V175]

================================

Block 0x215
[0x215:0x216]
---
Predecessors: []
Successors: []
---
0x215 JUMPDEST
0x216 STOP
---
0x215: JUMPDEST 
0x216: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x217
[0x217:0x21d]
---
Predecessors: [0x7d]
Successors: [0x21e, 0x21f]
---
0x217 JUMPDEST
0x218 CALLVALUE
0x219 ISZERO
0x21a PUSH2 0x21f
0x21d JUMPI
---
0x217: JUMPDEST 
0x218: V177 = CALLVALUE
0x219: V178 = ISZERO V177
0x21a: V179 = 0x21f
0x21d: JUMPI 0x21f V178
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21e
[0x21e:0x21e]
---
Predecessors: [0x217]
Successors: []
---
0x21e INVALID
---
0x21e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21f
[0x21f:0x226]
---
Predecessors: [0x217]
Successors: [0x6ac]
---
0x21f JUMPDEST
0x220 PUSH2 0x117
0x223 PUSH2 0x6ac
0x226 JUMP
---
0x21f: JUMPDEST 
0x220: V180 = 0x117
0x223: V181 = 0x6ac
0x226: JUMP 0x6ac
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x117]
Exit stack: [V12, 0x117]

================================

Block 0x227
[0x227:0x238]
---
Predecessors: []
Successors: []
---
0x227 JUMPDEST
0x228 PUSH1 0x40
0x22a DUP1
0x22b MLOAD
0x22c SWAP2
0x22d DUP3
0x22e MSTORE
0x22f MLOAD
0x230 SWAP1
0x231 DUP2
0x232 SWAP1
0x233 SUB
0x234 PUSH1 0x20
0x236 ADD
0x237 SWAP1
0x238 RETURN
---
0x227: JUMPDEST 
0x228: V182 = 0x40
0x22b: V183 = M[0x40]
0x22e: M[V183] = S0
0x22f: V184 = M[0x40]
0x233: V185 = SUB V183 V184
0x234: V186 = 0x20
0x236: V187 = ADD 0x20 V185
0x238: RETURN V184 V187
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x239
[0x239:0x23f]
---
Predecessors: [0x88]
Successors: [0x240, 0x241]
---
0x239 JUMPDEST
0x23a CALLVALUE
0x23b ISZERO
0x23c PUSH2 0x241
0x23f JUMPI
---
0x239: JUMPDEST 
0x23a: V188 = CALLVALUE
0x23b: V189 = ISZERO V188
0x23c: V190 = 0x241
0x23f: JUMPI 0x241 V189
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x240
[0x240:0x240]
---
Predecessors: [0x239]
Successors: []
---
0x240 INVALID
---
0x240: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x241
[0x241:0x248]
---
Predecessors: [0x239]
Successors: [0x6b2]
---
0x241 JUMPDEST
0x242 PUSH2 0x117
0x245 PUSH2 0x6b2
0x248 JUMP
---
0x241: JUMPDEST 
0x242: V191 = 0x117
0x245: V192 = 0x6b2
0x248: JUMP 0x6b2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x117]
Exit stack: [V12, 0x117]

================================

Block 0x249
[0x249:0x25a]
---
Predecessors: []
Successors: []
---
0x249 JUMPDEST
0x24a PUSH1 0x40
0x24c DUP1
0x24d MLOAD
0x24e SWAP2
0x24f DUP3
0x250 MSTORE
0x251 MLOAD
0x252 SWAP1
0x253 DUP2
0x254 SWAP1
0x255 SUB
0x256 PUSH1 0x20
0x258 ADD
0x259 SWAP1
0x25a RETURN
---
0x249: JUMPDEST 
0x24a: V193 = 0x40
0x24d: V194 = M[0x40]
0x250: M[V194] = S0
0x251: V195 = M[0x40]
0x255: V196 = SUB V194 V195
0x256: V197 = 0x20
0x258: V198 = ADD 0x20 V196
0x25a: RETURN V195 V198
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x25b
[0x25b:0x261]
---
Predecessors: [0x93]
Successors: [0x262, 0x263]
---
0x25b JUMPDEST
0x25c CALLVALUE
0x25d ISZERO
0x25e PUSH2 0x263
0x261 JUMPI
---
0x25b: JUMPDEST 
0x25c: V199 = CALLVALUE
0x25d: V200 = ISZERO V199
0x25e: V201 = 0x263
0x261: JUMPI 0x263 V200
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x262
[0x262:0x262]
---
Predecessors: [0x25b]
Successors: []
---
0x262 INVALID
---
0x262: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x263
[0x263:0x26a]
---
Predecessors: [0x25b]
Successors: [0x6b8]
---
0x263 JUMPDEST
0x264 PUSH2 0x19c
0x267 PUSH2 0x6b8
0x26a JUMP
---
0x263: JUMPDEST 
0x264: V202 = 0x19c
0x267: V203 = 0x6b8
0x26a: JUMP 0x6b8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x19c]
Exit stack: [V12, 0x19c]

================================

Block 0x26b
[0x26b:0x286]
---
Predecessors: []
Successors: []
---
0x26b JUMPDEST
0x26c PUSH1 0x40
0x26e DUP1
0x26f MLOAD
0x270 PUSH1 0x1
0x272 PUSH1 0xa0
0x274 PUSH1 0x2
0x276 EXP
0x277 SUB
0x278 SWAP1
0x279 SWAP3
0x27a AND
0x27b DUP3
0x27c MSTORE
0x27d MLOAD
0x27e SWAP1
0x27f DUP2
0x280 SWAP1
0x281 SUB
0x282 PUSH1 0x20
0x284 ADD
0x285 SWAP1
0x286 RETURN
---
0x26b: JUMPDEST 
0x26c: V204 = 0x40
0x26f: V205 = M[0x40]
0x270: V206 = 0x1
0x272: V207 = 0xa0
0x274: V208 = 0x2
0x276: V209 = EXP 0x2 0xa0
0x277: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27a: V211 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x27c: M[V205] = V211
0x27d: V212 = M[0x40]
0x281: V213 = SUB V205 V212
0x282: V214 = 0x20
0x284: V215 = ADD 0x20 V213
0x286: RETURN V212 V215
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x287
[0x287:0x28d]
---
Predecessors: [0x9e]
Successors: [0x28e, 0x28f]
---
0x287 JUMPDEST
0x288 CALLVALUE
0x289 ISZERO
0x28a PUSH2 0x28f
0x28d JUMPI
---
0x287: JUMPDEST 
0x288: V216 = CALLVALUE
0x289: V217 = ISZERO V216
0x28a: V218 = 0x28f
0x28d: JUMPI 0x28f V217
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28e
[0x28e:0x28e]
---
Predecessors: [0x287]
Successors: []
---
0x28e INVALID
---
0x28e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28f
[0x28f:0x296]
---
Predecessors: [0x287]
Successors: [0x6c7]
---
0x28f JUMPDEST
0x290 PUSH2 0x105
0x293 PUSH2 0x6c7
0x296 JUMP
---
0x28f: JUMPDEST 
0x290: V219 = 0x105
0x293: V220 = 0x6c7
0x296: JUMP 0x6c7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V12, 0x105]

================================

Block 0x297
[0x297:0x298]
---
Predecessors: []
Successors: []
---
0x297 JUMPDEST
0x298 STOP
---
0x297: JUMPDEST 
0x298: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x299
[0x299:0x29f]
---
Predecessors: [0xa9]
Successors: [0x2a0, 0x2a1]
---
0x299 JUMPDEST
0x29a CALLVALUE
0x29b ISZERO
0x29c PUSH2 0x2a1
0x29f JUMPI
---
0x299: JUMPDEST 
0x29a: V221 = CALLVALUE
0x29b: V222 = ISZERO V221
0x29c: V223 = 0x2a1
0x29f: JUMPI 0x2a1 V222
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a0
[0x2a0:0x2a0]
---
Predecessors: [0x299]
Successors: []
---
0x2a0 INVALID
---
0x2a0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a1
[0x2a1:0x2ab]
---
Predecessors: [0x299]
Successors: [0x7d9]
---
0x2a1 JUMPDEST
0x2a2 PUSH2 0x105
0x2a5 PUSH1 0x4
0x2a7 CALLDATALOAD
0x2a8 PUSH2 0x7d9
0x2ab JUMP
---
0x2a1: JUMPDEST 
0x2a2: V224 = 0x105
0x2a5: V225 = 0x4
0x2a7: V226 = CALLDATALOAD 0x4
0x2a8: V227 = 0x7d9
0x2ab: JUMP 0x7d9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105, V226]
Exit stack: [V12, 0x105, V226]

================================

Block 0x2ac
[0x2ac:0x2ad]
---
Predecessors: []
Successors: []
---
0x2ac JUMPDEST
0x2ad STOP
---
0x2ac: JUMPDEST 
0x2ad: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ae
[0x2ae:0x2b4]
---
Predecessors: [0xb4]
Successors: [0x2b5, 0x2b6]
---
0x2ae JUMPDEST
0x2af CALLVALUE
0x2b0 ISZERO
0x2b1 PUSH2 0x2b6
0x2b4 JUMPI
---
0x2ae: JUMPDEST 
0x2af: V228 = CALLVALUE
0x2b0: V229 = ISZERO V228
0x2b1: V230 = 0x2b6
0x2b4: JUMPI 0x2b6 V229
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b5
[0x2b5:0x2b5]
---
Predecessors: [0x2ae]
Successors: []
---
0x2b5 INVALID
---
0x2b5: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b6
[0x2b6:0x2c9]
---
Predecessors: [0x2ae]
Successors: [0x84d]
---
0x2b6 JUMPDEST
0x2b7 PUSH2 0x105
0x2ba PUSH1 0x1
0x2bc PUSH1 0xa0
0x2be PUSH1 0x2
0x2c0 EXP
0x2c1 SUB
0x2c2 PUSH1 0x4
0x2c4 CALLDATALOAD
0x2c5 AND
0x2c6 PUSH2 0x84d
0x2c9 JUMP
---
0x2b6: JUMPDEST 
0x2b7: V231 = 0x105
0x2ba: V232 = 0x1
0x2bc: V233 = 0xa0
0x2be: V234 = 0x2
0x2c0: V235 = EXP 0x2 0xa0
0x2c1: V236 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c2: V237 = 0x4
0x2c4: V238 = CALLDATALOAD 0x4
0x2c5: V239 = AND V238 0xffffffffffffffffffffffffffffffffffffffff
0x2c6: V240 = 0x84d
0x2c9: JUMP 0x84d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x105, V239]
Exit stack: [V12, 0x105, V239]

================================

Block 0x2ca
[0x2ca:0x2cb]
---
Predecessors: []
Successors: []
---
0x2ca JUMPDEST
0x2cb STOP
---
0x2ca: JUMPDEST 
0x2cb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2cc
[0x2cc:0x2d1]
---
Predecessors: [0x10f]
Successors: [0x117]
---
0x2cc JUMPDEST
0x2cd PUSH1 0x1
0x2cf SLOAD
0x2d0 DUP2
0x2d1 JUMP
---
0x2cc: JUMPDEST 
0x2cd: V241 = 0x1
0x2cf: V242 = S[0x1]
0x2d1: JUMP 0x117
---
Entry stack: [V12, 0x117]
Stack pops: 1
Stack additions: [S0, V242]
Exit stack: [V12, 0x117, V242]

================================

Block 0x2d2
[0x2d2:0x2e8]
---
Predecessors: [0x131]
Successors: [0x2e9, 0x2ee]
---
0x2d2 JUMPDEST
0x2d3 PUSH1 0x0
0x2d5 SLOAD
0x2d6 CALLER
0x2d7 PUSH1 0x1
0x2d9 PUSH1 0xa0
0x2db PUSH1 0x2
0x2dd EXP
0x2de SUB
0x2df SWAP1
0x2e0 DUP2
0x2e1 AND
0x2e2 SWAP2
0x2e3 AND
0x2e4 EQ
0x2e5 PUSH2 0x2ee
0x2e8 JUMPI
---
0x2d2: JUMPDEST 
0x2d3: V243 = 0x0
0x2d5: V244 = S[0x0]
0x2d6: V245 = CALLER
0x2d7: V246 = 0x1
0x2d9: V247 = 0xa0
0x2db: V248 = 0x2
0x2dd: V249 = EXP 0x2 0xa0
0x2de: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e1: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x2e3: V252 = AND V244 0xffffffffffffffffffffffffffffffffffffffff
0x2e4: V253 = EQ V252 V251
0x2e5: V254 = 0x2ee
0x2e8: JUMPI 0x2ee V253
---
Entry stack: [V12, 0x105, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V90]

================================

Block 0x2e9
[0x2e9:0x2ed]
---
Predecessors: [0x2d2]
Successors: []
---
0x2e9 PUSH1 0x0
0x2eb PUSH1 0x0
0x2ed REVERT
---
0x2e9: V255 = 0x0
0x2eb: V256 = 0x0
0x2ed: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V90]

================================

Block 0x2ee
[0x2ee:0x326]
---
Predecessors: [0x2d2]
Successors: [0x327]
---
0x2ee JUMPDEST
0x2ef PUSH1 0x5
0x2f1 DUP2
0x2f2 SWAP1
0x2f3 SSTORE
0x2f4 PUSH1 0x40
0x2f6 DUP1
0x2f7 MLOAD
0x2f8 DUP3
0x2f9 DUP2
0x2fa MSTORE
0x2fb SWAP1
0x2fc MLOAD
0x2fd PUSH32 0x23eb383159943d100968a603a73e7002356a9a2e41de1f638a137c58b9282fe6
0x31e SWAP2
0x31f DUP2
0x320 SWAP1
0x321 SUB
0x322 PUSH1 0x20
0x324 ADD
0x325 SWAP1
0x326 LOG1
---
0x2ee: JUMPDEST 
0x2ef: V257 = 0x5
0x2f3: S[0x5] = V90
0x2f4: V258 = 0x40
0x2f7: V259 = M[0x40]
0x2fa: M[V259] = V90
0x2fc: V260 = M[0x40]
0x2fd: V261 = 0x23eb383159943d100968a603a73e7002356a9a2e41de1f638a137c58b9282fe6
0x321: V262 = SUB V259 V260
0x322: V263 = 0x20
0x324: V264 = ADD 0x20 V262
0x326: LOG V260 V264 0x23eb383159943d100968a603a73e7002356a9a2e41de1f638a137c58b9282fe6
---
Entry stack: [V12, 0x105, V90]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x105, V90]

================================

Block 0x327
[0x327:0x327]
---
Predecessors: [0x2ee, 0x720, 0x743, 0x759, 0x869]
Successors: [0x328]
---
0x327 JUMPDEST
---
0x327: JUMPDEST 
---
Entry stack: [V12, 0x105, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, S0]

================================

Block 0x328
[0x328:0x32a]
---
Predecessors: [0x327]
Successors: [0x105]
---
0x328 JUMPDEST
0x329 POP
0x32a JUMP
---
0x328: JUMPDEST 
0x32a: JUMP 0x105
---
Entry stack: [V12, 0x105, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x32b
[0x32b:0x344]
---
Predecessors: [0x146]
Successors: [0x345, 0x34a]
---
0x32b JUMPDEST
0x32c PUSH1 0x0
0x32e DUP1
0x32f SLOAD
0x330 DUP2
0x331 SWAP1
0x332 CALLER
0x333 PUSH1 0x1
0x335 PUSH1 0xa0
0x337 PUSH1 0x2
0x339 EXP
0x33a SUB
0x33b SWAP1
0x33c DUP2
0x33d AND
0x33e SWAP2
0x33f AND
0x340 EQ
0x341 PUSH2 0x34a
0x344 JUMPI
---
0x32b: JUMPDEST 
0x32c: V265 = 0x0
0x32f: V266 = S[0x0]
0x332: V267 = CALLER
0x333: V268 = 0x1
0x335: V269 = 0xa0
0x337: V270 = 0x2
0x339: V271 = EXP 0x2 0xa0
0x33a: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33d: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x33f: V274 = AND V266 0xffffffffffffffffffffffffffffffffffffffff
0x340: V275 = EQ V274 V273
0x341: V276 = 0x34a
0x344: JUMPI 0x34a V275
---
Entry stack: [V12, 0x105, V103]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x105, V103, 0x0, 0x0]

================================

Block 0x345
[0x345:0x349]
---
Predecessors: [0x32b]
Successors: []
---
0x345 PUSH1 0x0
0x347 PUSH1 0x0
0x349 REVERT
---
0x345: V277 = 0x0
0x347: V278 = 0x0
0x349: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, V103, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V103, 0x0, 0x0]

================================

Block 0x34a
[0x34a:0x3ab]
---
Predecessors: [0x32b]
Successors: [0x3ac, 0x3ad]
---
0x34a JUMPDEST
0x34b DUP3
0x34c SWAP2
0x34d POP
0x34e DUP2
0x34f PUSH1 0x1
0x351 PUSH1 0xa0
0x353 PUSH1 0x2
0x355 EXP
0x356 SUB
0x357 AND
0x358 PUSH4 0x70a08231
0x35d ADDRESS
0x35e PUSH1 0x0
0x360 PUSH1 0x40
0x362 MLOAD
0x363 PUSH1 0x20
0x365 ADD
0x366 MSTORE
0x367 PUSH1 0x40
0x369 MLOAD
0x36a DUP3
0x36b PUSH4 0xffffffff
0x370 AND
0x371 PUSH1 0xe0
0x373 PUSH1 0x2
0x375 EXP
0x376 MUL
0x377 DUP2
0x378 MSTORE
0x379 PUSH1 0x4
0x37b ADD
0x37c DUP1
0x37d DUP3
0x37e PUSH1 0x1
0x380 PUSH1 0xa0
0x382 PUSH1 0x2
0x384 EXP
0x385 SUB
0x386 AND
0x387 PUSH1 0x1
0x389 PUSH1 0xa0
0x38b PUSH1 0x2
0x38d EXP
0x38e SUB
0x38f AND
0x390 DUP2
0x391 MSTORE
0x392 PUSH1 0x20
0x394 ADD
0x395 SWAP2
0x396 POP
0x397 POP
0x398 PUSH1 0x20
0x39a PUSH1 0x40
0x39c MLOAD
0x39d DUP1
0x39e DUP4
0x39f SUB
0x3a0 DUP2
0x3a1 PUSH1 0x0
0x3a3 DUP8
0x3a4 DUP1
0x3a5 EXTCODESIZE
0x3a6 ISZERO
0x3a7 ISZERO
0x3a8 PUSH2 0x3ad
0x3ab JUMPI
---
0x34a: JUMPDEST 
0x34f: V279 = 0x1
0x351: V280 = 0xa0
0x353: V281 = 0x2
0x355: V282 = EXP 0x2 0xa0
0x356: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x357: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x358: V285 = 0x70a08231
0x35d: V286 = ADDRESS
0x35e: V287 = 0x0
0x360: V288 = 0x40
0x362: V289 = M[0x40]
0x363: V290 = 0x20
0x365: V291 = ADD 0x20 V289
0x366: M[V291] = 0x0
0x367: V292 = 0x40
0x369: V293 = M[0x40]
0x36b: V294 = 0xffffffff
0x370: V295 = AND 0xffffffff 0x70a08231
0x371: V296 = 0xe0
0x373: V297 = 0x2
0x375: V298 = EXP 0x2 0xe0
0x376: V299 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x378: M[V293] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x379: V300 = 0x4
0x37b: V301 = ADD 0x4 V293
0x37e: V302 = 0x1
0x380: V303 = 0xa0
0x382: V304 = 0x2
0x384: V305 = EXP 0x2 0xa0
0x385: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x386: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x387: V308 = 0x1
0x389: V309 = 0xa0
0x38b: V310 = 0x2
0x38d: V311 = EXP 0x2 0xa0
0x38e: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38f: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x391: M[V301] = V313
0x392: V314 = 0x20
0x394: V315 = ADD 0x20 V301
0x398: V316 = 0x20
0x39a: V317 = 0x40
0x39c: V318 = M[0x40]
0x39f: V319 = SUB V315 V318
0x3a1: V320 = 0x0
0x3a5: V321 = EXTCODESIZE V284
0x3a6: V322 = ISZERO V321
0x3a7: V323 = ISZERO V322
0x3a8: V324 = 0x3ad
0x3ab: JUMPI 0x3ad V323
---
Entry stack: [V12, 0x105, V103, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S2, S0, V284, 0x70a08231, V315, 0x20, V318, V319, V318, 0x0, V284]
Exit stack: [V12, 0x105, V103, V103, 0x0, V284, 0x70a08231, V315, 0x20, V318, V319, V318, 0x0, V284]

================================

Block 0x3ac
[0x3ac:0x3ac]
---
Predecessors: [0x34a]
Successors: []
---
0x3ac INVALID
---
0x3ac: INVALID 
---
Entry stack: [V12, 0x105, V103, V103, 0x0, V284, 0x70a08231, V315, 0x20, V318, V319, V318, 0x0, V284]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V103, V103, 0x0, V284, 0x70a08231, V315, 0x20, V318, V319, V318, 0x0, V284]

================================

Block 0x3ad
[0x3ad:0x3b9]
---
Predecessors: [0x34a]
Successors: [0x3ba, 0x3bb]
---
0x3ad JUMPDEST
0x3ae PUSH2 0x2c6
0x3b1 GAS
0x3b2 SUB
0x3b3 CALL
0x3b4 ISZERO
0x3b5 ISZERO
0x3b6 PUSH2 0x3bb
0x3b9 JUMPI
---
0x3ad: JUMPDEST 
0x3ae: V325 = 0x2c6
0x3b1: V326 = GAS
0x3b2: V327 = SUB V326 0x2c6
0x3b3: V328 = CALL V327 V284 0x0 V318 V319 V318 0x20
0x3b4: V329 = ISZERO V328
0x3b5: V330 = ISZERO V329
0x3b6: V331 = 0x3bb
0x3b9: JUMPI 0x3bb V330
---
Entry stack: [V12, 0x105, V103, V103, 0x0, V284, 0x70a08231, V315, 0x20, V318, V319, V318, 0x0, V284]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x105, V103, V103, 0x0, V284, 0x70a08231, V315]

================================

Block 0x3ba
[0x3ba:0x3ba]
---
Predecessors: [0x3ad]
Successors: []
---
0x3ba INVALID
---
0x3ba: INVALID 
---
Entry stack: [V12, 0x105, V103, V103, 0x0, V284, 0x70a08231, V315]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V103, V103, 0x0, V284, 0x70a08231, V315]

================================

Block 0x3bb
[0x3bb:0x3cb]
---
Predecessors: [0x3ad]
Successors: [0x3cc, 0x3d1]
---
0x3bb JUMPDEST
0x3bc POP
0x3bd POP
0x3be PUSH1 0x40
0x3c0 MLOAD
0x3c1 MLOAD
0x3c2 SWAP2
0x3c3 POP
0x3c4 POP
0x3c5 DUP1
0x3c6 ISZERO
0x3c7 ISZERO
0x3c8 PUSH2 0x3d1
0x3cb JUMPI
---
0x3bb: JUMPDEST 
0x3be: V332 = 0x40
0x3c0: V333 = M[0x40]
0x3c1: V334 = M[V333]
0x3c6: V335 = ISZERO V334
0x3c7: V336 = ISZERO V335
0x3c8: V337 = 0x3d1
0x3cb: JUMPI 0x3d1 V336
---
Entry stack: [V12, 0x105, V103, V103, 0x0, V284, 0x70a08231, V315]
Stack pops: 4
Stack additions: [V334]
Exit stack: [V12, 0x105, V103, V103, V334]

================================

Block 0x3cc
[0x3cc:0x3d0]
---
Predecessors: [0x3bb]
Successors: []
---
0x3cc PUSH1 0x0
0x3ce PUSH1 0x0
0x3d0 REVERT
---
0x3cc: V338 = 0x0
0x3ce: V339 = 0x0
0x3d0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, V103, V103, V334]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V103, V103, V334]

================================

Block 0x3d1
[0x3d1:0x42c]
---
Predecessors: [0x3bb]
Successors: [0x42d, 0x42e]
---
0x3d1 JUMPDEST
0x3d2 PUSH1 0x0
0x3d4 DUP1
0x3d5 SLOAD
0x3d6 PUSH1 0x40
0x3d8 DUP1
0x3d9 MLOAD
0x3da PUSH1 0x20
0x3dc SWAP1
0x3dd DUP2
0x3de ADD
0x3df DUP5
0x3e0 SWAP1
0x3e1 MSTORE
0x3e2 DUP2
0x3e3 MLOAD
0x3e4 PUSH1 0xe0
0x3e6 PUSH1 0x2
0x3e8 EXP
0x3e9 PUSH4 0xa9059cbb
0x3ee MUL
0x3ef DUP2
0x3f0 MSTORE
0x3f1 PUSH1 0x1
0x3f3 PUSH1 0xa0
0x3f5 PUSH1 0x2
0x3f7 EXP
0x3f8 SUB
0x3f9 SWAP4
0x3fa DUP5
0x3fb AND
0x3fc PUSH1 0x4
0x3fe DUP3
0x3ff ADD
0x400 MSTORE
0x401 PUSH1 0x24
0x403 DUP2
0x404 ADD
0x405 DUP7
0x406 SWAP1
0x407 MSTORE
0x408 SWAP2
0x409 MLOAD
0x40a SWAP3
0x40b DUP7
0x40c AND
0x40d SWAP4
0x40e PUSH4 0xa9059cbb
0x413 SWAP4
0x414 PUSH1 0x44
0x416 DUP1
0x417 DUP6
0x418 ADD
0x419 SWAP5
0x41a SWAP2
0x41b SWAP3
0x41c SWAP2
0x41d DUP4
0x41e SWAP1
0x41f SUB
0x420 ADD
0x421 SWAP1
0x422 DUP3
0x423 SWAP1
0x424 DUP8
0x425 DUP1
0x426 EXTCODESIZE
0x427 ISZERO
0x428 ISZERO
0x429 PUSH2 0x42e
0x42c JUMPI
---
0x3d1: JUMPDEST 
0x3d2: V340 = 0x0
0x3d5: V341 = S[0x0]
0x3d6: V342 = 0x40
0x3d9: V343 = M[0x40]
0x3da: V344 = 0x20
0x3de: V345 = ADD 0x20 V343
0x3e1: M[V345] = 0x0
0x3e3: V346 = M[0x40]
0x3e4: V347 = 0xe0
0x3e6: V348 = 0x2
0x3e8: V349 = EXP 0x2 0xe0
0x3e9: V350 = 0xa9059cbb
0x3ee: V351 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x3f0: M[V346] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3f1: V352 = 0x1
0x3f3: V353 = 0xa0
0x3f5: V354 = 0x2
0x3f7: V355 = EXP 0x2 0xa0
0x3f8: V356 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fb: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x3fc: V358 = 0x4
0x3ff: V359 = ADD V346 0x4
0x400: M[V359] = V357
0x401: V360 = 0x24
0x404: V361 = ADD V346 0x24
0x407: M[V361] = V334
0x409: V362 = M[0x40]
0x40c: V363 = AND V103 0xffffffffffffffffffffffffffffffffffffffff
0x40e: V364 = 0xa9059cbb
0x414: V365 = 0x44
0x418: V366 = ADD V346 0x44
0x41f: V367 = SUB V346 V362
0x420: V368 = ADD V367 0x44
0x426: V369 = EXTCODESIZE V363
0x427: V370 = ISZERO V369
0x428: V371 = ISZERO V370
0x429: V372 = 0x42e
0x42c: JUMPI 0x42e V371
---
Entry stack: [V12, 0x105, V103, V103, V334]
Stack pops: 2
Stack additions: [S1, S0, V363, 0xa9059cbb, V366, 0x20, V362, V368, V362, 0x0, V363]
Exit stack: [V12, 0x105, V103, V103, V334, V363, 0xa9059cbb, V366, 0x20, V362, V368, V362, 0x0, V363]

================================

Block 0x42d
[0x42d:0x42d]
---
Predecessors: [0x3d1]
Successors: []
---
0x42d INVALID
---
0x42d: INVALID 
---
Entry stack: [V12, 0x105, V103, V103, V334, V363, 0xa9059cbb, V366, 0x20, V362, V368, V362, 0x0, V363]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V103, V103, V334, V363, 0xa9059cbb, V366, 0x20, V362, V368, V362, 0x0, V363]

================================

Block 0x42e
[0x42e:0x43a]
---
Predecessors: [0x3d1]
Successors: [0x43b, 0x43c]
---
0x42e JUMPDEST
0x42f PUSH2 0x2c6
0x432 GAS
0x433 SUB
0x434 CALL
0x435 ISZERO
0x436 ISZERO
0x437 PUSH2 0x43c
0x43a JUMPI
---
0x42e: JUMPDEST 
0x42f: V373 = 0x2c6
0x432: V374 = GAS
0x433: V375 = SUB V374 0x2c6
0x434: V376 = CALL V375 V363 0x0 V362 V368 V362 0x20
0x435: V377 = ISZERO V376
0x436: V378 = ISZERO V377
0x437: V379 = 0x43c
0x43a: JUMPI 0x43c V378
---
Entry stack: [V12, 0x105, V103, V103, V334, V363, 0xa9059cbb, V366, 0x20, V362, V368, V362, 0x0, V363]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x105, V103, V103, V334, V363, 0xa9059cbb, V366]

================================

Block 0x43b
[0x43b:0x43b]
---
Predecessors: [0x42e]
Successors: []
---
0x43b INVALID
---
0x43b: INVALID 
---
Entry stack: [V12, 0x105, V103, V103, V334, V363, 0xa9059cbb, V366]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V103, V103, V334, V363, 0xa9059cbb, V366]

================================

Block 0x43c
[0x43c:0x44a]
---
Predecessors: [0x42e]
Successors: [0x44b, 0x44c]
---
0x43c JUMPDEST
0x43d POP
0x43e POP
0x43f PUSH1 0x40
0x441 MLOAD
0x442 MLOAD
0x443 ISZERO
0x444 ISZERO
0x445 SWAP1
0x446 POP
0x447 PUSH2 0x44c
0x44a JUMPI
---
0x43c: JUMPDEST 
0x43f: V380 = 0x40
0x441: V381 = M[0x40]
0x442: V382 = M[V381]
0x443: V383 = ISZERO V382
0x444: V384 = ISZERO V383
0x447: V385 = 0x44c
0x44a: JUMPI 0x44c V384
---
Entry stack: [V12, 0x105, V103, V103, V334, V363, 0xa9059cbb, V366]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x105, V103, V103, V334]

================================

Block 0x44b
[0x44b:0x44b]
---
Predecessors: [0x43c]
Successors: []
---
0x44b INVALID
---
0x44b: INVALID 
---
Entry stack: [V12, 0x105, V103, V103, V334]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V103, V103, V334]

================================

Block 0x44c
[0x44c:0x47f]
---
Predecessors: [0x43c]
Successors: [0x480]
---
0x44c JUMPDEST
0x44d PUSH1 0x40
0x44f DUP1
0x450 MLOAD
0x451 DUP3
0x452 DUP2
0x453 MSTORE
0x454 SWAP1
0x455 MLOAD
0x456 PUSH32 0x9c6393f251205f9e03559951cab4c9ae71767b6174f77944a5b0c2fa51fbda9f
0x477 SWAP2
0x478 DUP2
0x479 SWAP1
0x47a SUB
0x47b PUSH1 0x20
0x47d ADD
0x47e SWAP1
0x47f LOG1
---
0x44c: JUMPDEST 
0x44d: V386 = 0x40
0x450: V387 = M[0x40]
0x453: M[V387] = V334
0x455: V388 = M[0x40]
0x456: V389 = 0x9c6393f251205f9e03559951cab4c9ae71767b6174f77944a5b0c2fa51fbda9f
0x47a: V390 = SUB V387 V388
0x47b: V391 = 0x20
0x47d: V392 = ADD 0x20 V390
0x47f: LOG V388 V392 0x9c6393f251205f9e03559951cab4c9ae71767b6174f77944a5b0c2fa51fbda9f
---
Entry stack: [V12, 0x105, V103, V103, V334]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x105, V103, V103, V334]

================================

Block 0x480
[0x480:0x480]
---
Predecessors: [0x44c]
Successors: [0x481]
---
0x480 JUMPDEST
---
0x480: JUMPDEST 
---
Entry stack: [V12, 0x105, V103, V103, V334]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V103, V103, V334]

================================

Block 0x481
[0x481:0x485]
---
Predecessors: [0x480]
Successors: [0x105]
---
0x481 JUMPDEST
0x482 POP
0x483 POP
0x484 POP
0x485 JUMP
---
0x481: JUMPDEST 
0x485: JUMP 0x105
---
Entry stack: [V12, 0x105, V103, V103, V334]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x486
[0x486:0x49c]
---
Predecessors: [0x164]
Successors: [0x49d, 0x4a2]
---
0x486 JUMPDEST
0x487 PUSH1 0x0
0x489 SLOAD
0x48a CALLER
0x48b PUSH1 0x1
0x48d PUSH1 0xa0
0x48f PUSH1 0x2
0x491 EXP
0x492 SUB
0x493 SWAP1
0x494 DUP2
0x495 AND
0x496 SWAP2
0x497 AND
0x498 EQ
0x499 PUSH2 0x4a2
0x49c JUMPI
---
0x486: JUMPDEST 
0x487: V393 = 0x0
0x489: V394 = S[0x0]
0x48a: V395 = CALLER
0x48b: V396 = 0x1
0x48d: V397 = 0xa0
0x48f: V398 = 0x2
0x491: V399 = EXP 0x2 0xa0
0x492: V400 = SUB 0x10000000000000000000000000000000000000000 0x1
0x495: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x497: V402 = AND V394 0xffffffffffffffffffffffffffffffffffffffff
0x498: V403 = EQ V402 V401
0x499: V404 = 0x4a2
0x49c: JUMPI 0x4a2 V403
---
Entry stack: [V12, 0x105, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V116]

================================

Block 0x49d
[0x49d:0x4a1]
---
Predecessors: [0x486]
Successors: []
---
0x49d PUSH1 0x0
0x49f PUSH1 0x0
0x4a1 REVERT
---
0x49d: V405 = 0x0
0x49f: V406 = 0x0
0x4a1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V116]

================================

Block 0x4a2
[0x4a2:0x4f9]
---
Predecessors: [0x486]
Successors: [0x4fa]
---
0x4a2 JUMPDEST
0x4a3 PUSH1 0x3
0x4a5 DUP1
0x4a6 SLOAD
0x4a7 PUSH1 0x1
0x4a9 PUSH1 0xa0
0x4ab PUSH1 0x2
0x4ad EXP
0x4ae SUB
0x4af NOT
0x4b0 AND
0x4b1 PUSH1 0x1
0x4b3 PUSH1 0xa0
0x4b5 PUSH1 0x2
0x4b7 EXP
0x4b8 SUB
0x4b9 DUP4
0x4ba DUP2
0x4bb AND
0x4bc SWAP2
0x4bd SWAP1
0x4be SWAP2
0x4bf OR
0x4c0 SWAP2
0x4c1 DUP3
0x4c2 SWAP1
0x4c3 SSTORE
0x4c4 PUSH1 0x40
0x4c6 DUP1
0x4c7 MLOAD
0x4c8 SWAP3
0x4c9 SWAP1
0x4ca SWAP2
0x4cb AND
0x4cc DUP3
0x4cd MSTORE
0x4ce MLOAD
0x4cf PUSH32 0x2ac7f8ce86335c3676136e12258df31ce11dc5b133c40661ee6517da6254a31e
0x4f0 SWAP2
0x4f1 PUSH1 0x20
0x4f3 SWAP1
0x4f4 DUP3
0x4f5 SWAP1
0x4f6 SUB
0x4f7 ADD
0x4f8 SWAP1
0x4f9 LOG1
---
0x4a2: JUMPDEST 
0x4a3: V407 = 0x3
0x4a6: V408 = S[0x3]
0x4a7: V409 = 0x1
0x4a9: V410 = 0xa0
0x4ab: V411 = 0x2
0x4ad: V412 = EXP 0x2 0xa0
0x4ae: V413 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4af: V414 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4b0: V415 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V408
0x4b1: V416 = 0x1
0x4b3: V417 = 0xa0
0x4b5: V418 = 0x2
0x4b7: V419 = EXP 0x2 0xa0
0x4b8: V420 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bb: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x4bf: V422 = OR V421 V415
0x4c3: S[0x3] = V422
0x4c4: V423 = 0x40
0x4c7: V424 = M[0x40]
0x4cb: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x4cd: M[V424] = V425
0x4ce: V426 = M[0x40]
0x4cf: V427 = 0x2ac7f8ce86335c3676136e12258df31ce11dc5b133c40661ee6517da6254a31e
0x4f1: V428 = 0x20
0x4f6: V429 = SUB V424 V426
0x4f7: V430 = ADD V429 0x20
0x4f9: LOG V426 V430 0x2ac7f8ce86335c3676136e12258df31ce11dc5b133c40661ee6517da6254a31e
---
Entry stack: [V12, 0x105, V116]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x105, V116]

================================

Block 0x4fa
[0x4fa:0x4fa]
---
Predecessors: [0x4a2]
Successors: [0x4fb]
---
0x4fa JUMPDEST
---
0x4fa: JUMPDEST 
---
Entry stack: [V12, 0x105, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V116]

================================

Block 0x4fb
[0x4fb:0x4fd]
---
Predecessors: [0x4fa]
Successors: [0x105]
---
0x4fb JUMPDEST
0x4fc POP
0x4fd JUMP
---
0x4fb: JUMPDEST 
0x4fd: JUMP 0x105
---
Entry stack: [V12, 0x105, V116]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x4fe
[0x4fe:0x514]
---
Predecessors: [0x182]
Successors: [0x515, 0x51a]
---
0x4fe JUMPDEST
0x4ff PUSH1 0x0
0x501 SLOAD
0x502 CALLER
0x503 PUSH1 0x1
0x505 PUSH1 0xa0
0x507 PUSH1 0x2
0x509 EXP
0x50a SUB
0x50b SWAP1
0x50c DUP2
0x50d AND
0x50e SWAP2
0x50f AND
0x510 EQ
0x511 PUSH2 0x51a
0x514 JUMPI
---
0x4fe: JUMPDEST 
0x4ff: V431 = 0x0
0x501: V432 = S[0x0]
0x502: V433 = CALLER
0x503: V434 = 0x1
0x505: V435 = 0xa0
0x507: V436 = 0x2
0x509: V437 = EXP 0x2 0xa0
0x50a: V438 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50d: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x50f: V440 = AND V432 0xffffffffffffffffffffffffffffffffffffffff
0x510: V441 = EQ V440 V439
0x511: V442 = 0x51a
0x514: JUMPI 0x51a V441
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x515
[0x515:0x519]
---
Predecessors: [0x4fe]
Successors: []
---
0x515 PUSH1 0x0
0x517 PUSH1 0x0
0x519 REVERT
---
0x515: V443 = 0x0
0x517: V444 = 0x0
0x519: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x51a
[0x51a:0x52b]
---
Predecessors: [0x4fe]
Successors: [0x52c, 0x531]
---
0x51a JUMPDEST
0x51b PUSH1 0x1
0x51d PUSH1 0xa0
0x51f PUSH1 0x2
0x521 EXP
0x522 SUB
0x523 ADDRESS
0x524 AND
0x525 BALANCE
0x526 ISZERO
0x527 ISZERO
0x528 PUSH2 0x531
0x52b JUMPI
---
0x51a: JUMPDEST 
0x51b: V445 = 0x1
0x51d: V446 = 0xa0
0x51f: V447 = 0x2
0x521: V448 = EXP 0x2 0xa0
0x522: V449 = SUB 0x10000000000000000000000000000000000000000 0x1
0x523: V450 = ADDRESS
0x524: V451 = AND V450 0xffffffffffffffffffffffffffffffffffffffff
0x525: V452 = BALANCE V451
0x526: V453 = ISZERO V452
0x527: V454 = ISZERO V453
0x528: V455 = 0x531
0x52b: JUMPI 0x531 V454
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x52c
[0x52c:0x530]
---
Predecessors: [0x51a]
Successors: []
---
0x52c PUSH1 0x0
0x52e PUSH1 0x0
0x530 REVERT
---
0x52c: V456 = 0x0
0x52e: V457 = 0x0
0x530: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x531
[0x531:0x565]
---
Predecessors: [0x51a]
Successors: [0x566, 0x567]
---
0x531 JUMPDEST
0x532 PUSH1 0x0
0x534 DUP1
0x535 SLOAD
0x536 PUSH1 0x40
0x538 MLOAD
0x539 PUSH1 0x1
0x53b PUSH1 0xa0
0x53d PUSH1 0x2
0x53f EXP
0x540 SUB
0x541 SWAP2
0x542 DUP3
0x543 AND
0x544 SWAP3
0x545 ADDRESS
0x546 SWAP1
0x547 SWAP3
0x548 AND
0x549 BALANCE
0x54a DUP1
0x54b ISZERO
0x54c PUSH2 0x8fc
0x54f MUL
0x550 SWAP3
0x551 SWAP1
0x552 SWAP2
0x553 SWAP1
0x554 DUP2
0x555 DUP2
0x556 DUP2
0x557 DUP6
0x558 DUP9
0x559 DUP9
0x55a CALL
0x55b SWAP4
0x55c POP
0x55d POP
0x55e POP
0x55f POP
0x560 ISZERO
0x561 ISZERO
0x562 PUSH2 0x567
0x565 JUMPI
---
0x531: JUMPDEST 
0x532: V458 = 0x0
0x535: V459 = S[0x0]
0x536: V460 = 0x40
0x538: V461 = M[0x40]
0x539: V462 = 0x1
0x53b: V463 = 0xa0
0x53d: V464 = 0x2
0x53f: V465 = EXP 0x2 0xa0
0x540: V466 = SUB 0x10000000000000000000000000000000000000000 0x1
0x543: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V459
0x545: V468 = ADDRESS
0x548: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x549: V470 = BALANCE V469
0x54b: V471 = ISZERO V470
0x54c: V472 = 0x8fc
0x54f: V473 = MUL 0x8fc V471
0x55a: V474 = CALL V473 V467 V470 V461 0x0 V461 0x0
0x560: V475 = ISZERO V474
0x561: V476 = ISZERO V475
0x562: V477 = 0x567
0x565: JUMPI 0x567 V476
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x566
[0x566:0x566]
---
Predecessors: [0x531]
Successors: []
---
0x566 INVALID
---
0x566: INVALID 
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x567
[0x567:0x5a4]
---
Predecessors: [0x531]
Successors: [0x5a5]
---
0x567 JUMPDEST
0x568 PUSH1 0x40
0x56a DUP1
0x56b MLOAD
0x56c PUSH1 0x1
0x56e PUSH1 0xa0
0x570 PUSH1 0x2
0x572 EXP
0x573 SUB
0x574 ADDRESS
0x575 AND
0x576 BALANCE
0x577 DUP2
0x578 MSTORE
0x579 SWAP1
0x57a MLOAD
0x57b PUSH32 0x4590a28d5a843588aa29cd0037e47b18e8e1223898c124a04ab7165d68d826f
0x59c SWAP2
0x59d DUP2
0x59e SWAP1
0x59f SUB
0x5a0 PUSH1 0x20
0x5a2 ADD
0x5a3 SWAP1
0x5a4 LOG1
---
0x567: JUMPDEST 
0x568: V478 = 0x40
0x56b: V479 = M[0x40]
0x56c: V480 = 0x1
0x56e: V481 = 0xa0
0x570: V482 = 0x2
0x572: V483 = EXP 0x2 0xa0
0x573: V484 = SUB 0x10000000000000000000000000000000000000000 0x1
0x574: V485 = ADDRESS
0x575: V486 = AND V485 0xffffffffffffffffffffffffffffffffffffffff
0x576: V487 = BALANCE V486
0x578: M[V479] = V487
0x57a: V488 = M[0x40]
0x57b: V489 = 0x4590a28d5a843588aa29cd0037e47b18e8e1223898c124a04ab7165d68d826f
0x59f: V490 = SUB V479 V488
0x5a0: V491 = 0x20
0x5a2: V492 = ADD 0x20 V490
0x5a4: LOG V488 V492 0x4590a28d5a843588aa29cd0037e47b18e8e1223898c124a04ab7165d68d826f
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x5a5
[0x5a5:0x5a5]
---
Predecessors: [0x567]
Successors: [0x5a6]
---
0x5a5 JUMPDEST
---
0x5a5: JUMPDEST 
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105]

================================

Block 0x5a6
[0x5a6:0x5a7]
---
Predecessors: [0x5a5]
Successors: [0x105]
---
0x5a6 JUMPDEST
0x5a7 JUMP
---
0x5a6: JUMPDEST 
0x5a7: JUMP 0x105
---
Entry stack: [V12, 0x105]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x5a8
[0x5a8:0x5b6]
---
Predecessors: [0x194]
Successors: [0x19c]
---
0x5a8 JUMPDEST
0x5a9 PUSH1 0x3
0x5ab SLOAD
0x5ac PUSH1 0x1
0x5ae PUSH1 0xa0
0x5b0 PUSH1 0x2
0x5b2 EXP
0x5b3 SUB
0x5b4 AND
0x5b5 DUP2
0x5b6 JUMP
---
0x5a8: JUMPDEST 
0x5a9: V493 = 0x3
0x5ab: V494 = S[0x3]
0x5ac: V495 = 0x1
0x5ae: V496 = 0xa0
0x5b0: V497 = 0x2
0x5b2: V498 = EXP 0x2 0xa0
0x5b3: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b4: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x5b6: JUMP 0x19c
---
Entry stack: [V12, 0x19c]
Stack pops: 1
Stack additions: [S0, V500]
Exit stack: [V12, 0x19c, V500]

================================

Block 0x5b7
[0x5b7:0x5ce]
---
Predecessors: [0x1c0]
Successors: [0x5cf, 0x5e2]
---
0x5b7 JUMPDEST
0x5b8 PUSH1 0x4
0x5ba SLOAD
0x5bb CALLER
0x5bc PUSH1 0x1
0x5be PUSH1 0xa0
0x5c0 PUSH1 0x2
0x5c2 EXP
0x5c3 SUB
0x5c4 SWAP1
0x5c5 DUP2
0x5c6 AND
0x5c7 SWAP2
0x5c8 AND
0x5c9 EQ
0x5ca DUP1
0x5cb PUSH2 0x5e2
0x5ce JUMPI
---
0x5b7: JUMPDEST 
0x5b8: V501 = 0x4
0x5ba: V502 = S[0x4]
0x5bb: V503 = CALLER
0x5bc: V504 = 0x1
0x5be: V505 = 0xa0
0x5c0: V506 = 0x2
0x5c2: V507 = EXP 0x2 0xa0
0x5c3: V508 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c6: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff V503
0x5c8: V510 = AND V502 0xffffffffffffffffffffffffffffffffffffffff
0x5c9: V511 = EQ V510 V509
0x5cb: V512 = 0x5e2
0x5ce: JUMPI 0x5e2 V511
---
Entry stack: [V12, 0x105, V145]
Stack pops: 0
Stack additions: [V511]
Exit stack: [V12, 0x105, V145, V511]

================================

Block 0x5cf
[0x5cf:0x5e1]
---
Predecessors: [0x5b7]
Successors: [0x5e2]
---
0x5cf POP
0x5d0 PUSH1 0x0
0x5d2 SLOAD
0x5d3 CALLER
0x5d4 PUSH1 0x1
0x5d6 PUSH1 0xa0
0x5d8 PUSH1 0x2
0x5da EXP
0x5db SUB
0x5dc SWAP1
0x5dd DUP2
0x5de AND
0x5df SWAP2
0x5e0 AND
0x5e1 EQ
---
0x5d0: V513 = 0x0
0x5d2: V514 = S[0x0]
0x5d3: V515 = CALLER
0x5d4: V516 = 0x1
0x5d6: V517 = 0xa0
0x5d8: V518 = 0x2
0x5da: V519 = EXP 0x2 0xa0
0x5db: V520 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5de: V521 = AND 0xffffffffffffffffffffffffffffffffffffffff V515
0x5e0: V522 = AND V514 0xffffffffffffffffffffffffffffffffffffffff
0x5e1: V523 = EQ V522 V521
---
Entry stack: [V12, 0x105, V145, V511]
Stack pops: 1
Stack additions: [V523]
Exit stack: [V12, 0x105, V145, V523]

================================

Block 0x5e2
[0x5e2:0x5e8]
---
Predecessors: [0x5b7, 0x5cf]
Successors: [0x5e9, 0x5ee]
---
0x5e2 JUMPDEST
0x5e3 ISZERO
0x5e4 ISZERO
0x5e5 PUSH2 0x5ee
0x5e8 JUMPI
---
0x5e2: JUMPDEST 
0x5e3: V524 = ISZERO S0
0x5e4: V525 = ISZERO V524
0x5e5: V526 = 0x5ee
0x5e8: JUMPI 0x5ee V525
---
Entry stack: [V12, 0x105, V145, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x105, V145]

================================

Block 0x5e9
[0x5e9:0x5ed]
---
Predecessors: [0x5e2]
Successors: []
---
0x5e9 PUSH1 0x0
0x5eb PUSH1 0x0
0x5ed REVERT
---
0x5e9: V527 = 0x0
0x5eb: V528 = 0x0
0x5ed: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V145]

================================

Block 0x5ee
[0x5ee:0x626]
---
Predecessors: [0x5e2]
Successors: [0x627]
---
0x5ee JUMPDEST
0x5ef PUSH1 0x2
0x5f1 DUP2
0x5f2 SWAP1
0x5f3 SSTORE
0x5f4 PUSH1 0x40
0x5f6 DUP1
0x5f7 MLOAD
0x5f8 DUP3
0x5f9 DUP2
0x5fa MSTORE
0x5fb SWAP1
0x5fc MLOAD
0x5fd PUSH32 0xcc754a289e42a5e969b6e18a311b961599852cc7cc1197286c8ed525ea76530e
0x61e SWAP2
0x61f DUP2
0x620 SWAP1
0x621 SUB
0x622 PUSH1 0x20
0x624 ADD
0x625 SWAP1
0x626 LOG1
---
0x5ee: JUMPDEST 
0x5ef: V529 = 0x2
0x5f3: S[0x2] = V145
0x5f4: V530 = 0x40
0x5f7: V531 = M[0x40]
0x5fa: M[V531] = V145
0x5fc: V532 = M[0x40]
0x5fd: V533 = 0xcc754a289e42a5e969b6e18a311b961599852cc7cc1197286c8ed525ea76530e
0x621: V534 = SUB V531 V532
0x622: V535 = 0x20
0x624: V536 = ADD 0x20 V534
0x626: LOG V532 V536 0xcc754a289e42a5e969b6e18a311b961599852cc7cc1197286c8ed525ea76530e
---
Entry stack: [V12, 0x105, V145]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x105, V145]

================================

Block 0x627
[0x627:0x627]
---
Predecessors: [0x5ee]
Successors: [0x628]
---
0x627 JUMPDEST
---
0x627: JUMPDEST 
---
Entry stack: [V12, 0x105, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V145]

================================

Block 0x628
[0x628:0x62a]
---
Predecessors: [0x627]
Successors: [0x105]
---
0x628 JUMPDEST
0x629 POP
0x62a JUMP
---
0x628: JUMPDEST 
0x62a: JUMP 0x105
---
Entry stack: [V12, 0x105, V145]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x62b
[0x62b:0x639]
---
Predecessors: [0x1d5]
Successors: [0x19c]
---
0x62b JUMPDEST
0x62c PUSH1 0x0
0x62e SLOAD
0x62f PUSH1 0x1
0x631 PUSH1 0xa0
0x633 PUSH1 0x2
0x635 EXP
0x636 SUB
0x637 AND
0x638 DUP2
0x639 JUMP
---
0x62b: JUMPDEST 
0x62c: V537 = 0x0
0x62e: V538 = S[0x0]
0x62f: V539 = 0x1
0x631: V540 = 0xa0
0x633: V541 = 0x2
0x635: V542 = EXP 0x2 0xa0
0x636: V543 = SUB 0x10000000000000000000000000000000000000000 0x1
0x637: V544 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0x639: JUMP 0x19c
---
Entry stack: [V12, 0x19c]
Stack pops: 1
Stack additions: [S0, V544]
Exit stack: [V12, 0x19c, V544]

================================

Block 0x63a
[0x63a:0x650]
---
Predecessors: [0x201]
Successors: [0x651, 0x656]
---
0x63a JUMPDEST
0x63b PUSH1 0x0
0x63d SLOAD
0x63e CALLER
0x63f PUSH1 0x1
0x641 PUSH1 0xa0
0x643 PUSH1 0x2
0x645 EXP
0x646 SUB
0x647 SWAP1
0x648 DUP2
0x649 AND
0x64a SWAP2
0x64b AND
0x64c EQ
0x64d PUSH2 0x656
0x650 JUMPI
---
0x63a: JUMPDEST 
0x63b: V545 = 0x0
0x63d: V546 = S[0x0]
0x63e: V547 = CALLER
0x63f: V548 = 0x1
0x641: V549 = 0xa0
0x643: V550 = 0x2
0x645: V551 = EXP 0x2 0xa0
0x646: V552 = SUB 0x10000000000000000000000000000000000000000 0x1
0x649: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x64b: V554 = AND V546 0xffffffffffffffffffffffffffffffffffffffff
0x64c: V555 = EQ V554 V553
0x64d: V556 = 0x656
0x650: JUMPI 0x656 V555
---
Entry stack: [V12, 0x105, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V175]

================================

Block 0x651
[0x651:0x655]
---
Predecessors: [0x63a]
Successors: []
---
0x651 PUSH1 0x0
0x653 PUSH1 0x0
0x655 REVERT
---
0x651: V557 = 0x0
0x653: V558 = 0x0
0x655: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V175]

================================

Block 0x656
[0x656:0x6a7]
---
Predecessors: [0x63a]
Successors: [0x6a8]
---
0x656 JUMPDEST
0x657 PUSH1 0x4
0x659 DUP1
0x65a SLOAD
0x65b PUSH1 0x1
0x65d PUSH1 0xa0
0x65f PUSH1 0x2
0x661 EXP
0x662 SUB
0x663 DUP4
0x664 AND
0x665 PUSH1 0x1
0x667 PUSH1 0xa0
0x669 PUSH1 0x2
0x66b EXP
0x66c SUB
0x66d NOT
0x66e SWAP1
0x66f SWAP2
0x670 AND
0x671 DUP2
0x672 OR
0x673 SWAP1
0x674 SWAP2
0x675 SSTORE
0x676 PUSH1 0x40
0x678 DUP1
0x679 MLOAD
0x67a SWAP2
0x67b DUP3
0x67c MSTORE
0x67d MLOAD
0x67e PUSH32 0x408d9e356c18d649d8224da0d79ce6ee4aa98ecd1b418caa86cc110341dcfcd6
0x69f SWAP2
0x6a0 DUP2
0x6a1 SWAP1
0x6a2 SUB
0x6a3 PUSH1 0x20
0x6a5 ADD
0x6a6 SWAP1
0x6a7 LOG1
---
0x656: JUMPDEST 
0x657: V559 = 0x4
0x65a: V560 = S[0x4]
0x65b: V561 = 0x1
0x65d: V562 = 0xa0
0x65f: V563 = 0x2
0x661: V564 = EXP 0x2 0xa0
0x662: V565 = SUB 0x10000000000000000000000000000000000000000 0x1
0x664: V566 = AND V175 0xffffffffffffffffffffffffffffffffffffffff
0x665: V567 = 0x1
0x667: V568 = 0xa0
0x669: V569 = 0x2
0x66b: V570 = EXP 0x2 0xa0
0x66c: V571 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66d: V572 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x670: V573 = AND V560 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x672: V574 = OR V566 V573
0x675: S[0x4] = V574
0x676: V575 = 0x40
0x679: V576 = M[0x40]
0x67c: M[V576] = V566
0x67d: V577 = M[0x40]
0x67e: V578 = 0x408d9e356c18d649d8224da0d79ce6ee4aa98ecd1b418caa86cc110341dcfcd6
0x6a2: V579 = SUB V576 V577
0x6a3: V580 = 0x20
0x6a5: V581 = ADD 0x20 V579
0x6a7: LOG V577 V581 0x408d9e356c18d649d8224da0d79ce6ee4aa98ecd1b418caa86cc110341dcfcd6
---
Entry stack: [V12, 0x105, V175]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x105, V175]

================================

Block 0x6a8
[0x6a8:0x6a8]
---
Predecessors: [0x656]
Successors: [0x6a9]
---
0x6a8 JUMPDEST
---
0x6a8: JUMPDEST 
---
Entry stack: [V12, 0x105, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V175]

================================

Block 0x6a9
[0x6a9:0x6ab]
---
Predecessors: [0x6a8]
Successors: [0x105]
---
0x6a9 JUMPDEST
0x6aa POP
0x6ab JUMP
---
0x6a9: JUMPDEST 
0x6ab: JUMP 0x105
---
Entry stack: [V12, 0x105, V175]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x6ac
[0x6ac:0x6b1]
---
Predecessors: [0x21f]
Successors: [0x117]
---
0x6ac JUMPDEST
0x6ad PUSH1 0x2
0x6af SLOAD
0x6b0 DUP2
0x6b1 JUMP
---
0x6ac: JUMPDEST 
0x6ad: V582 = 0x2
0x6af: V583 = S[0x2]
0x6b1: JUMP 0x117
---
Entry stack: [V12, 0x117]
Stack pops: 1
Stack additions: [S0, V583]
Exit stack: [V12, 0x117, V583]

================================

Block 0x6b2
[0x6b2:0x6b7]
---
Predecessors: [0x241]
Successors: [0x117]
---
0x6b2 JUMPDEST
0x6b3 PUSH1 0x5
0x6b5 SLOAD
0x6b6 DUP2
0x6b7 JUMP
---
0x6b2: JUMPDEST 
0x6b3: V584 = 0x5
0x6b5: V585 = S[0x5]
0x6b7: JUMP 0x117
---
Entry stack: [V12, 0x117]
Stack pops: 1
Stack additions: [S0, V585]
Exit stack: [V12, 0x117, V585]

================================

Block 0x6b8
[0x6b8:0x6c6]
---
Predecessors: [0x263]
Successors: [0x19c]
---
0x6b8 JUMPDEST
0x6b9 PUSH1 0x4
0x6bb SLOAD
0x6bc PUSH1 0x1
0x6be PUSH1 0xa0
0x6c0 PUSH1 0x2
0x6c2 EXP
0x6c3 SUB
0x6c4 AND
0x6c5 DUP2
0x6c6 JUMP
---
0x6b8: JUMPDEST 
0x6b9: V586 = 0x4
0x6bb: V587 = S[0x4]
0x6bc: V588 = 0x1
0x6be: V589 = 0xa0
0x6c0: V590 = 0x2
0x6c2: V591 = EXP 0x2 0xa0
0x6c3: V592 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c4: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V587
0x6c6: JUMP 0x19c
---
Entry stack: [V12, 0x19c]
Stack pops: 1
Stack additions: [S0, V593]
Exit stack: [V12, 0x19c, V593]

================================

Block 0x6c7
[0x6c7:0x6e1]
---
Predecessors: [0x28f]
Successors: [0x6e2, 0x6f5]
---
0x6c7 JUMPDEST
0x6c8 PUSH1 0x4
0x6ca SLOAD
0x6cb PUSH1 0x0
0x6cd SWAP1
0x6ce CALLER
0x6cf PUSH1 0x1
0x6d1 PUSH1 0xa0
0x6d3 PUSH1 0x2
0x6d5 EXP
0x6d6 SUB
0x6d7 SWAP1
0x6d8 DUP2
0x6d9 AND
0x6da SWAP2
0x6db AND
0x6dc EQ
0x6dd DUP1
0x6de PUSH2 0x6f5
0x6e1 JUMPI
---
0x6c7: JUMPDEST 
0x6c8: V594 = 0x4
0x6ca: V595 = S[0x4]
0x6cb: V596 = 0x0
0x6ce: V597 = CALLER
0x6cf: V598 = 0x1
0x6d1: V599 = 0xa0
0x6d3: V600 = 0x2
0x6d5: V601 = EXP 0x2 0xa0
0x6d6: V602 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d9: V603 = AND 0xffffffffffffffffffffffffffffffffffffffff V597
0x6db: V604 = AND V595 0xffffffffffffffffffffffffffffffffffffffff
0x6dc: V605 = EQ V604 V603
0x6de: V606 = 0x6f5
0x6e1: JUMPI 0x6f5 V605
---
Entry stack: [V12, 0x105]
Stack pops: 0
Stack additions: [0x0, V605]
Exit stack: [V12, 0x105, 0x0, V605]

================================

Block 0x6e2
[0x6e2:0x6f4]
---
Predecessors: [0x6c7]
Successors: [0x6f5]
---
0x6e2 POP
0x6e3 PUSH1 0x0
0x6e5 SLOAD
0x6e6 CALLER
0x6e7 PUSH1 0x1
0x6e9 PUSH1 0xa0
0x6eb PUSH1 0x2
0x6ed EXP
0x6ee SUB
0x6ef SWAP1
0x6f0 DUP2
0x6f1 AND
0x6f2 SWAP2
0x6f3 AND
0x6f4 EQ
---
0x6e3: V607 = 0x0
0x6e5: V608 = S[0x0]
0x6e6: V609 = CALLER
0x6e7: V610 = 0x1
0x6e9: V611 = 0xa0
0x6eb: V612 = 0x2
0x6ed: V613 = EXP 0x2 0xa0
0x6ee: V614 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f1: V615 = AND 0xffffffffffffffffffffffffffffffffffffffff V609
0x6f3: V616 = AND V608 0xffffffffffffffffffffffffffffffffffffffff
0x6f4: V617 = EQ V616 V615
---
Entry stack: [V12, 0x105, 0x0, V605]
Stack pops: 1
Stack additions: [V617]
Exit stack: [V12, 0x105, 0x0, V617]

================================

Block 0x6f5
[0x6f5:0x6fb]
---
Predecessors: [0x6c7, 0x6e2]
Successors: [0x6fc, 0x701]
---
0x6f5 JUMPDEST
0x6f6 ISZERO
0x6f7 ISZERO
0x6f8 PUSH2 0x701
0x6fb JUMPI
---
0x6f5: JUMPDEST 
0x6f6: V618 = ISZERO S0
0x6f7: V619 = ISZERO V618
0x6f8: V620 = 0x701
0x6fb: JUMPI 0x701 V619
---
Entry stack: [V12, 0x105, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x105, 0x0]

================================

Block 0x6fc
[0x6fc:0x700]
---
Predecessors: [0x6f5]
Successors: []
---
0x6fc PUSH1 0x0
0x6fe PUSH1 0x0
0x700 REVERT
---
0x6fc: V621 = 0x0
0x6fe: V622 = 0x0
0x700: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, 0x0]

================================

Block 0x701
[0x701:0x70c]
---
Predecessors: [0x6f5]
Successors: [0x70d, 0x71a]
---
0x701 JUMPDEST
0x702 PUSH1 0x1
0x704 SLOAD
0x705 ISZERO
0x706 DUP1
0x707 ISZERO
0x708 SWAP1
0x709 PUSH2 0x71a
0x70c JUMPI
---
0x701: JUMPDEST 
0x702: V623 = 0x1
0x704: V624 = S[0x1]
0x705: V625 = ISZERO V624
0x707: V626 = ISZERO V625
0x709: V627 = 0x71a
0x70c: JUMPI 0x71a V625
---
Entry stack: [V12, 0x105, 0x0]
Stack pops: 0
Stack additions: [V626]
Exit stack: [V12, 0x105, 0x0, V626]

================================

Block 0x70d
[0x70d:0x717]
---
Predecessors: [0x701]
Successors: [0x899]
---
0x70d POP
0x70e PUSH1 0x1
0x710 SLOAD
0x711 PUSH2 0x718
0x714 PUSH2 0x899
0x717 JUMP
---
0x70e: V628 = 0x1
0x710: V629 = S[0x1]
0x711: V630 = 0x718
0x714: V631 = 0x899
0x717: JUMP 0x899
---
Entry stack: [V12, 0x105, 0x0, V626]
Stack pops: 1
Stack additions: [V629, 0x718]
Exit stack: [V12, 0x105, 0x0, V629, 0x718]

================================

Block 0x718
[0x718:0x719]
---
Predecessors: [0x89b]
Successors: [0x71a]
---
0x718 JUMPDEST
0x719 LT
---
0x718: JUMPDEST 
0x719: V632 = LT V772 V629
---
Entry stack: [V12, 0x105, 0x0, V629, V772]
Stack pops: 2
Stack additions: [V632]
Exit stack: [V12, 0x105, 0x0, V632]

================================

Block 0x71a
[0x71a:0x71f]
---
Predecessors: [0x701, 0x718]
Successors: [0x720, 0x724]
---
0x71a JUMPDEST
0x71b ISZERO
0x71c PUSH2 0x724
0x71f JUMPI
---
0x71a: JUMPDEST 
0x71b: V633 = ISZERO S0
0x71c: V634 = 0x724
0x71f: JUMPI 0x724 V633
---
Entry stack: [V12, 0x105, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x105, 0x0]

================================

Block 0x720
[0x720:0x723]
---
Predecessors: [0x71a]
Successors: [0x327]
---
0x720 PUSH2 0x327
0x723 JUMP
---
0x720: V635 = 0x327
0x723: JUMP 0x327
---
Entry stack: [V12, 0x105, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, 0x0]

================================

Block 0x724
[0x724:0x72f]
---
Predecessors: [0x71a]
Successors: [0x730, 0x73d]
---
0x724 JUMPDEST
0x725 PUSH1 0x2
0x727 SLOAD
0x728 ISZERO
0x729 DUP1
0x72a ISZERO
0x72b SWAP1
0x72c PUSH2 0x73d
0x72f JUMPI
---
0x724: JUMPDEST 
0x725: V636 = 0x2
0x727: V637 = S[0x2]
0x728: V638 = ISZERO V637
0x72a: V639 = ISZERO V638
0x72c: V640 = 0x73d
0x72f: JUMPI 0x73d V638
---
Entry stack: [V12, 0x105, 0x0]
Stack pops: 0
Stack additions: [V639]
Exit stack: [V12, 0x105, 0x0, V639]

================================

Block 0x730
[0x730:0x73a]
---
Predecessors: [0x724]
Successors: [0x89e]
---
0x730 POP
0x731 PUSH1 0x2
0x733 SLOAD
0x734 PUSH2 0x73b
0x737 PUSH2 0x89e
0x73a JUMP
---
0x731: V641 = 0x2
0x733: V642 = S[0x2]
0x734: V643 = 0x73b
0x737: V644 = 0x89e
0x73a: JUMP 0x89e
---
Entry stack: [V12, 0x105, 0x0, V639]
Stack pops: 1
Stack additions: [V642, 0x73b]
Exit stack: [V12, 0x105, 0x0, V642, 0x73b]

================================

Block 0x73b
[0x73b:0x73c]
---
Predecessors: [0x8a0]
Successors: [0x73d]
---
0x73b JUMPDEST
0x73c LT
---
0x73b: JUMPDEST 
0x73c: V645 = LT V773 V642
---
Entry stack: [V12, 0x105, 0x0, V642, V773]
Stack pops: 2
Stack additions: [V645]
Exit stack: [V12, 0x105, 0x0, V645]

================================

Block 0x73d
[0x73d:0x742]
---
Predecessors: [0x724, 0x73b]
Successors: [0x743, 0x747]
---
0x73d JUMPDEST
0x73e ISZERO
0x73f PUSH2 0x747
0x742 JUMPI
---
0x73d: JUMPDEST 
0x73e: V646 = ISZERO S0
0x73f: V647 = 0x747
0x742: JUMPI 0x747 V646
---
Entry stack: [V12, 0x105, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x105, 0x0]

================================

Block 0x743
[0x743:0x746]
---
Predecessors: [0x73d]
Successors: [0x327]
---
0x743 PUSH2 0x327
0x746 JUMP
---
0x743: V648 = 0x327
0x746: JUMP 0x327
---
Entry stack: [V12, 0x105, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, 0x0]

================================

Block 0x747
[0x747:0x758]
---
Predecessors: [0x73d]
Successors: [0x759, 0x75d]
---
0x747 JUMPDEST
0x748 PUSH1 0x1
0x74a PUSH1 0xa0
0x74c PUSH1 0x2
0x74e EXP
0x74f SUB
0x750 ADDRESS
0x751 AND
0x752 BALANCE
0x753 ISZERO
0x754 ISZERO
0x755 PUSH2 0x75d
0x758 JUMPI
---
0x747: JUMPDEST 
0x748: V649 = 0x1
0x74a: V650 = 0xa0
0x74c: V651 = 0x2
0x74e: V652 = EXP 0x2 0xa0
0x74f: V653 = SUB 0x10000000000000000000000000000000000000000 0x1
0x750: V654 = ADDRESS
0x751: V655 = AND V654 0xffffffffffffffffffffffffffffffffffffffff
0x752: V656 = BALANCE V655
0x753: V657 = ISZERO V656
0x754: V658 = ISZERO V657
0x755: V659 = 0x75d
0x758: JUMPI 0x75d V658
---
Entry stack: [V12, 0x105, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, 0x0]

================================

Block 0x759
[0x759:0x75c]
---
Predecessors: [0x747]
Successors: [0x327]
---
0x759 PUSH2 0x327
0x75c JUMP
---
0x759: V660 = 0x327
0x75c: JUMP 0x327
---
Entry stack: [V12, 0x105, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, 0x0]

================================

Block 0x75d
[0x75d:0x772]
---
Predecessors: [0x747]
Successors: [0x8a3]
---
0x75d JUMPDEST
0x75e PUSH2 0x773
0x761 ADDRESS
0x762 PUSH1 0x1
0x764 PUSH1 0xa0
0x766 PUSH1 0x2
0x768 EXP
0x769 SUB
0x76a AND
0x76b BALANCE
0x76c PUSH1 0x5
0x76e SLOAD
0x76f PUSH2 0x8a3
0x772 JUMP
---
0x75d: JUMPDEST 
0x75e: V661 = 0x773
0x761: V662 = ADDRESS
0x762: V663 = 0x1
0x764: V664 = 0xa0
0x766: V665 = 0x2
0x768: V666 = EXP 0x2 0xa0
0x769: V667 = SUB 0x10000000000000000000000000000000000000000 0x1
0x76a: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff V662
0x76b: V669 = BALANCE V668
0x76c: V670 = 0x5
0x76e: V671 = S[0x5]
0x76f: V672 = 0x8a3
0x772: JUMP 0x8a3
---
Entry stack: [V12, 0x105, 0x0]
Stack pops: 0
Stack additions: [0x773, V669, V671]
Exit stack: [V12, 0x105, 0x0, 0x773, V669, V671]

================================

Block 0x773
[0x773:0x79f]
---
Predecessors: [0x8b7]
Successors: [0x7a0, 0x7a1]
---
0x773 JUMPDEST
0x774 PUSH1 0x3
0x776 SLOAD
0x777 PUSH1 0x40
0x779 MLOAD
0x77a SWAP2
0x77b SWAP3
0x77c POP
0x77d PUSH1 0x1
0x77f PUSH1 0xa0
0x781 PUSH1 0x2
0x783 EXP
0x784 SUB
0x785 AND
0x786 SWAP1
0x787 DUP3
0x788 SWAP1
0x789 PUSH1 0x0
0x78b DUP2
0x78c DUP2
0x78d DUP2
0x78e DUP6
0x78f DUP8
0x790 PUSH2 0x8796
0x793 GAS
0x794 SUB
0x795 CALL
0x796 SWAP3
0x797 POP
0x798 POP
0x799 POP
0x79a ISZERO
0x79b ISZERO
0x79c PUSH2 0x7a1
0x79f JUMPI
---
0x773: JUMPDEST 
0x774: V673 = 0x3
0x776: V674 = S[0x3]
0x777: V675 = 0x40
0x779: V676 = M[0x40]
0x77d: V677 = 0x1
0x77f: V678 = 0xa0
0x781: V679 = 0x2
0x783: V680 = EXP 0x2 0xa0
0x784: V681 = SUB 0x10000000000000000000000000000000000000000 0x1
0x785: V682 = AND 0xffffffffffffffffffffffffffffffffffffffff V674
0x789: V683 = 0x0
0x790: V684 = 0x8796
0x793: V685 = GAS
0x794: V686 = SUB V685 0x8796
0x795: V687 = CALL V686 V682 S0 V676 0x0 V676 0x0
0x79a: V688 = ISZERO V687
0x79b: V689 = ISZERO V688
0x79c: V690 = 0x7a1
0x79f: JUMPI 0x7a1 V689
---
Entry stack: [V12, 0x105, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x105, S0]

================================

Block 0x7a0
[0x7a0:0x7a0]
---
Predecessors: [0x773]
Successors: []
---
0x7a0 INVALID
---
0x7a0: INVALID 
---
Entry stack: [V12, 0x105, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, S0]

================================

Block 0x7a1
[0x7a1:0x7d4]
---
Predecessors: [0x773]
Successors: [0x7d5]
---
0x7a1 JUMPDEST
0x7a2 PUSH1 0x40
0x7a4 DUP1
0x7a5 MLOAD
0x7a6 DUP3
0x7a7 DUP2
0x7a8 MSTORE
0x7a9 SWAP1
0x7aa MLOAD
0x7ab PUSH32 0x2cc7fc366e6223ae7f11c4ff0e58bcf1ca186735e7bcbd46dd39db0ff902f272
0x7cc SWAP2
0x7cd DUP2
0x7ce SWAP1
0x7cf SUB
0x7d0 PUSH1 0x20
0x7d2 ADD
0x7d3 SWAP1
0x7d4 LOG1
---
0x7a1: JUMPDEST 
0x7a2: V691 = 0x40
0x7a5: V692 = M[0x40]
0x7a8: M[V692] = S0
0x7aa: V693 = M[0x40]
0x7ab: V694 = 0x2cc7fc366e6223ae7f11c4ff0e58bcf1ca186735e7bcbd46dd39db0ff902f272
0x7cf: V695 = SUB V692 V693
0x7d0: V696 = 0x20
0x7d2: V697 = ADD 0x20 V695
0x7d4: LOG V693 V697 0x2cc7fc366e6223ae7f11c4ff0e58bcf1ca186735e7bcbd46dd39db0ff902f272
---
Entry stack: [V12, 0x105, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x105, S0]

================================

Block 0x7d5
[0x7d5:0x7d5]
---
Predecessors: [0x7a1]
Successors: [0x7d6]
---
0x7d5 JUMPDEST
---
0x7d5: JUMPDEST 
---
Entry stack: [V12, 0x105, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, S0]

================================

Block 0x7d6
[0x7d6:0x7d8]
---
Predecessors: [0x7d5]
Successors: [0x105]
---
0x7d6 JUMPDEST
0x7d7 POP
0x7d8 JUMP
---
0x7d6: JUMPDEST 
0x7d8: JUMP 0x105
---
Entry stack: [V12, 0x105, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d9
[0x7d9:0x7f0]
---
Predecessors: [0x2a1]
Successors: [0x7f1, 0x804]
---
0x7d9 JUMPDEST
0x7da PUSH1 0x4
0x7dc SLOAD
0x7dd CALLER
0x7de PUSH1 0x1
0x7e0 PUSH1 0xa0
0x7e2 PUSH1 0x2
0x7e4 EXP
0x7e5 SUB
0x7e6 SWAP1
0x7e7 DUP2
0x7e8 AND
0x7e9 SWAP2
0x7ea AND
0x7eb EQ
0x7ec DUP1
0x7ed PUSH2 0x804
0x7f0 JUMPI
---
0x7d9: JUMPDEST 
0x7da: V698 = 0x4
0x7dc: V699 = S[0x4]
0x7dd: V700 = CALLER
0x7de: V701 = 0x1
0x7e0: V702 = 0xa0
0x7e2: V703 = 0x2
0x7e4: V704 = EXP 0x2 0xa0
0x7e5: V705 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e8: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff V700
0x7ea: V707 = AND V699 0xffffffffffffffffffffffffffffffffffffffff
0x7eb: V708 = EQ V707 V706
0x7ed: V709 = 0x804
0x7f0: JUMPI 0x804 V708
---
Entry stack: [V12, 0x105, V226]
Stack pops: 0
Stack additions: [V708]
Exit stack: [V12, 0x105, V226, V708]

================================

Block 0x7f1
[0x7f1:0x803]
---
Predecessors: [0x7d9]
Successors: [0x804]
---
0x7f1 POP
0x7f2 PUSH1 0x0
0x7f4 SLOAD
0x7f5 CALLER
0x7f6 PUSH1 0x1
0x7f8 PUSH1 0xa0
0x7fa PUSH1 0x2
0x7fc EXP
0x7fd SUB
0x7fe SWAP1
0x7ff DUP2
0x800 AND
0x801 SWAP2
0x802 AND
0x803 EQ
---
0x7f2: V710 = 0x0
0x7f4: V711 = S[0x0]
0x7f5: V712 = CALLER
0x7f6: V713 = 0x1
0x7f8: V714 = 0xa0
0x7fa: V715 = 0x2
0x7fc: V716 = EXP 0x2 0xa0
0x7fd: V717 = SUB 0x10000000000000000000000000000000000000000 0x1
0x800: V718 = AND 0xffffffffffffffffffffffffffffffffffffffff V712
0x802: V719 = AND V711 0xffffffffffffffffffffffffffffffffffffffff
0x803: V720 = EQ V719 V718
---
Entry stack: [V12, 0x105, V226, V708]
Stack pops: 1
Stack additions: [V720]
Exit stack: [V12, 0x105, V226, V720]

================================

Block 0x804
[0x804:0x80a]
---
Predecessors: [0x7d9, 0x7f1]
Successors: [0x80b, 0x810]
---
0x804 JUMPDEST
0x805 ISZERO
0x806 ISZERO
0x807 PUSH2 0x810
0x80a JUMPI
---
0x804: JUMPDEST 
0x805: V721 = ISZERO S0
0x806: V722 = ISZERO V721
0x807: V723 = 0x810
0x80a: JUMPI 0x810 V722
---
Entry stack: [V12, 0x105, V226, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x105, V226]

================================

Block 0x80b
[0x80b:0x80f]
---
Predecessors: [0x804]
Successors: []
---
0x80b PUSH1 0x0
0x80d PUSH1 0x0
0x80f REVERT
---
0x80b: V724 = 0x0
0x80d: V725 = 0x0
0x80f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V226]

================================

Block 0x810
[0x810:0x848]
---
Predecessors: [0x804]
Successors: [0x849]
---
0x810 JUMPDEST
0x811 PUSH1 0x1
0x813 DUP2
0x814 SWAP1
0x815 SSTORE
0x816 PUSH1 0x40
0x818 DUP1
0x819 MLOAD
0x81a DUP3
0x81b DUP2
0x81c MSTORE
0x81d SWAP1
0x81e MLOAD
0x81f PUSH32 0xfb961571b8d150a406487babca627336c6c0acca51fe987ea0075864d5688279
0x840 SWAP2
0x841 DUP2
0x842 SWAP1
0x843 SUB
0x844 PUSH1 0x20
0x846 ADD
0x847 SWAP1
0x848 LOG1
---
0x810: JUMPDEST 
0x811: V726 = 0x1
0x815: S[0x1] = V226
0x816: V727 = 0x40
0x819: V728 = M[0x40]
0x81c: M[V728] = V226
0x81e: V729 = M[0x40]
0x81f: V730 = 0xfb961571b8d150a406487babca627336c6c0acca51fe987ea0075864d5688279
0x843: V731 = SUB V728 V729
0x844: V732 = 0x20
0x846: V733 = ADD 0x20 V731
0x848: LOG V729 V733 0xfb961571b8d150a406487babca627336c6c0acca51fe987ea0075864d5688279
---
Entry stack: [V12, 0x105, V226]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x105, V226]

================================

Block 0x849
[0x849:0x849]
---
Predecessors: [0x810]
Successors: [0x84a]
---
0x849 JUMPDEST
---
0x849: JUMPDEST 
---
Entry stack: [V12, 0x105, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V226]

================================

Block 0x84a
[0x84a:0x84c]
---
Predecessors: [0x849]
Successors: [0x105]
---
0x84a JUMPDEST
0x84b POP
0x84c JUMP
---
0x84a: JUMPDEST 
0x84c: JUMP 0x105
---
Entry stack: [V12, 0x105, V226]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x84d
[0x84d:0x863]
---
Predecessors: [0x2b6]
Successors: [0x864, 0x869]
---
0x84d JUMPDEST
0x84e PUSH1 0x0
0x850 SLOAD
0x851 CALLER
0x852 PUSH1 0x1
0x854 PUSH1 0xa0
0x856 PUSH1 0x2
0x858 EXP
0x859 SUB
0x85a SWAP1
0x85b DUP2
0x85c AND
0x85d SWAP2
0x85e AND
0x85f EQ
0x860 PUSH2 0x869
0x863 JUMPI
---
0x84d: JUMPDEST 
0x84e: V734 = 0x0
0x850: V735 = S[0x0]
0x851: V736 = CALLER
0x852: V737 = 0x1
0x854: V738 = 0xa0
0x856: V739 = 0x2
0x858: V740 = EXP 0x2 0xa0
0x859: V741 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85c: V742 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0x85e: V743 = AND V735 0xffffffffffffffffffffffffffffffffffffffff
0x85f: V744 = EQ V743 V742
0x860: V745 = 0x869
0x863: JUMPI 0x869 V744
---
Entry stack: [V12, 0x105, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V239]

================================

Block 0x864
[0x864:0x868]
---
Predecessors: [0x84d]
Successors: []
---
0x864 PUSH1 0x0
0x866 PUSH1 0x0
0x868 REVERT
---
0x864: V746 = 0x0
0x866: V747 = 0x0
0x868: REVERT 0x0 0x0
---
Entry stack: [V12, 0x105, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V239]

================================

Block 0x869
[0x869:0x878]
---
Predecessors: [0x84d]
Successors: [0x327, 0x879]
---
0x869 JUMPDEST
0x86a PUSH1 0x1
0x86c PUSH1 0xa0
0x86e PUSH1 0x2
0x870 EXP
0x871 SUB
0x872 DUP2
0x873 AND
0x874 ISZERO
0x875 PUSH2 0x327
0x878 JUMPI
---
0x869: JUMPDEST 
0x86a: V748 = 0x1
0x86c: V749 = 0xa0
0x86e: V750 = 0x2
0x870: V751 = EXP 0x2 0xa0
0x871: V752 = SUB 0x10000000000000000000000000000000000000000 0x1
0x873: V753 = AND V239 0xffffffffffffffffffffffffffffffffffffffff
0x874: V754 = ISZERO V753
0x875: V755 = 0x327
0x878: JUMPI 0x327 V754
---
Entry stack: [V12, 0x105, V239]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x105, V239]

================================

Block 0x879
[0x879:0x893]
---
Predecessors: [0x869]
Successors: [0x894]
---
0x879 PUSH1 0x0
0x87b DUP1
0x87c SLOAD
0x87d PUSH1 0x1
0x87f PUSH1 0xa0
0x881 PUSH1 0x2
0x883 EXP
0x884 SUB
0x885 NOT
0x886 AND
0x887 PUSH1 0x1
0x889 PUSH1 0xa0
0x88b PUSH1 0x2
0x88d EXP
0x88e SUB
0x88f DUP4
0x890 AND
0x891 OR
0x892 SWAP1
0x893 SSTORE
---
0x879: V756 = 0x0
0x87c: V757 = S[0x0]
0x87d: V758 = 0x1
0x87f: V759 = 0xa0
0x881: V760 = 0x2
0x883: V761 = EXP 0x2 0xa0
0x884: V762 = SUB 0x10000000000000000000000000000000000000000 0x1
0x885: V763 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x886: V764 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V757
0x887: V765 = 0x1
0x889: V766 = 0xa0
0x88b: V767 = 0x2
0x88d: V768 = EXP 0x2 0xa0
0x88e: V769 = SUB 0x10000000000000000000000000000000000000000 0x1
0x890: V770 = AND V239 0xffffffffffffffffffffffffffffffffffffffff
0x891: V771 = OR V770 V764
0x893: S[0x0] = V771
---
Entry stack: [V12, 0x105, V239]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x105, V239]

================================

Block 0x894
[0x894:0x894]
---
Predecessors: [0x879]
Successors: [0x895]
---
0x894 JUMPDEST
---
0x894: JUMPDEST 
---
Entry stack: [V12, 0x105, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V239]

================================

Block 0x895
[0x895:0x895]
---
Predecessors: [0x894]
Successors: [0x896]
---
0x895 JUMPDEST
---
0x895: JUMPDEST 
---
Entry stack: [V12, 0x105, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x105, V239]

================================

Block 0x896
[0x896:0x898]
---
Predecessors: [0x895]
Successors: [0x105]
---
0x896 JUMPDEST
0x897 POP
0x898 JUMP
---
0x896: JUMPDEST 
0x898: JUMP 0x105
---
Entry stack: [V12, 0x105, V239]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x899
[0x899:0x89a]
---
Predecessors: [0x70d]
Successors: [0x89b]
---
0x899 JUMPDEST
0x89a NUMBER
---
0x899: JUMPDEST 
0x89a: V772 = NUMBER
---
Entry stack: [V12, 0x105, 0x0, V629, 0x718]
Stack pops: 0
Stack additions: [V772]
Exit stack: [V12, 0x105, 0x0, V629, 0x718, V772]

================================

Block 0x89b
[0x89b:0x89d]
---
Predecessors: [0x899]
Successors: [0x718]
---
0x89b JUMPDEST
0x89c SWAP1
0x89d JUMP
---
0x89b: JUMPDEST 
0x89d: JUMP 0x718
---
Entry stack: [V12, 0x105, 0x0, V629, 0x718, V772]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x105, 0x0, V629, V772]

================================

Block 0x89e
[0x89e:0x89f]
---
Predecessors: [0x730]
Successors: [0x8a0]
---
0x89e JUMPDEST
0x89f TIMESTAMP
---
0x89e: JUMPDEST 
0x89f: V773 = TIMESTAMP
---
Entry stack: [V12, 0x105, 0x0, V642, 0x73b]
Stack pops: 0
Stack additions: [V773]
Exit stack: [V12, 0x105, 0x0, V642, 0x73b, V773]

================================

Block 0x8a0
[0x8a0:0x8a2]
---
Predecessors: [0x89e]
Successors: [0x73b]
---
0x8a0 JUMPDEST
0x8a1 SWAP1
0x8a2 JUMP
---
0x8a0: JUMPDEST 
0x8a2: JUMP 0x73b
---
Entry stack: [V12, 0x105, 0x0, V642, 0x73b, V773]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x105, 0x0, V642, V773]

================================

Block 0x8a3
[0x8a3:0x8ac]
---
Predecessors: [0x75d]
Successors: [0x8ad, 0x8b2]
---
0x8a3 JUMPDEST
0x8a4 PUSH1 0x0
0x8a6 DUP2
0x8a7 DUP4
0x8a8 LT
0x8a9 PUSH2 0x8b2
0x8ac JUMPI
---
0x8a3: JUMPDEST 
0x8a4: V774 = 0x0
0x8a8: V775 = LT V669 V671
0x8a9: V776 = 0x8b2
0x8ac: JUMPI 0x8b2 V775
---
Entry stack: [V12, 0x105, 0x0, 0x773, V669, V671]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, 0x105, 0x0, 0x773, V669, V671, 0x0]

================================

Block 0x8ad
[0x8ad:0x8b1]
---
Predecessors: [0x8a3]
Successors: [0x8b4]
---
0x8ad DUP2
0x8ae PUSH2 0x8b4
0x8b1 JUMP
---
0x8ae: V777 = 0x8b4
0x8b1: JUMP 0x8b4
---
Entry stack: [V12, 0x105, 0x0, 0x773, V669, V671, 0x0]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V12, 0x105, 0x0, 0x773, V669, V671, 0x0, V671]

================================

Block 0x8b2
[0x8b2:0x8b3]
---
Predecessors: [0x8a3]
Successors: [0x8b4]
---
0x8b2 JUMPDEST
0x8b3 DUP3
---
0x8b2: JUMPDEST 
---
Entry stack: [V12, 0x105, 0x0, 0x773, V669, V671, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V12, 0x105, 0x0, 0x773, V669, V671, 0x0, V669]

================================

Block 0x8b4
[0x8b4:0x8b6]
---
Predecessors: [0x8ad, 0x8b2]
Successors: [0x8b7]
---
0x8b4 JUMPDEST
0x8b5 SWAP1
0x8b6 POP
---
0x8b4: JUMPDEST 
---
Entry stack: [V12, 0x105, 0x0, 0x773, V669, V671, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x105, 0x0, 0x773, V669, V671, S0]

================================

Block 0x8b7
[0x8b7:0x8bc]
---
Predecessors: [0x8b4]
Successors: [0x773]
---
0x8b7 JUMPDEST
0x8b8 SWAP3
0x8b9 SWAP2
0x8ba POP
0x8bb POP
0x8bc JUMP
---
0x8b7: JUMPDEST 
0x8bc: JUMP 0x773
---
Entry stack: [V12, 0x105, 0x0, 0x773, V669, V671, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0x105, 0x0, S0]

================================

Block 0x8bd
[0x8bd:0x8e8]
---
Predecessors: []
Successors: []
---
0x8bd STOP
0x8be LOG1
0x8bf PUSH6 0x627a7a723058
0x8c6 SHA3
0x8c7 MSIZE
0x8c8 SWAP7
0x8c9 SWAP8
0x8ca SWAP2
0x8cb MOD
0x8cc SWAP2
0x8cd DUP13
0x8ce MISSING 0x2f
0x8cf SWAP10
0x8d0 SWAP9
0x8d1 CALLDATALOAD
0x8d2 MISSING 0xca
0x8d3 DUP6
0x8d4 CALLDATACOPY
0x8d5 MISSING 0xed
0x8d6 MISSING 0xdf
0x8d7 BALANCE
0x8d8 MISSING 0x4f
0x8d9 MSTORE
0x8da MISSING 0x5e
0x8db MISSING 0xb9
0x8dc PUSH6 0x2f53d442475a
0x8e3 SWAP5
0x8e4 MISSING 0xb4
0x8e5 MISSING 0x2a
0x8e6 MISSING 0x2c
0x8e7 STOP
0x8e8 MISSING 0x29
---
0x8bd: STOP 
0x8be: LOG S0 S1 S2
0x8bf: V778 = 0x627a7a723058
0x8c6: V779 = SHA3 0x627a7a723058 S3
0x8c7: V780 = MSIZE
0x8cb: V781 = MOD S4 V779
0x8ce: MISSING 0x2f
0x8d1: V782 = CALLDATALOAD S9
0x8d2: MISSING 0xca
0x8d4: CALLDATACOPY S5 S0 S1
0x8d5: MISSING 0xed
0x8d6: MISSING 0xdf
0x8d7: V783 = BALANCE S0
0x8d8: MISSING 0x4f
0x8d9: M[S0] = S1
0x8da: MISSING 0x5e
0x8db: MISSING 0xb9
0x8dc: V784 = 0x2f53d442475a
0x8e4: MISSING 0xb4
0x8e5: MISSING 0x2a
0x8e6: MISSING 0x2c
0x8e7: STOP 
0x8e8: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S15, S5, S10, V781, S6, S7, S8, V780, S9, S11, S12, S13, S14, S15, V782, S1, S2, S3, S4, S5, S6, S7, S8, S10, S0, S2, S3, S4, S5, V783, S4, S0, S1, S2, S3, 0x2f53d442475a]
Exit stack: []

================================

Function 0:
Public function signature: 0x12ea965d
Entry block: 0x107
Exit block: 0x117
Body: 0x107, 0x10e, 0x10f, 0x117, 0x2cc

Function 1:
Public function signature: 0x43062ea7
Entry block: 0x129
Exit block: 0x105
Body: 0x105, 0x129, 0x130, 0x131, 0x2d2, 0x2e9, 0x2ee, 0x327, 0x328

Function 2:
Public function signature: 0x49df728c
Entry block: 0x13e
Exit block: 0x105
Body: 0x105, 0x13e, 0x145, 0x146, 0x32b, 0x345, 0x34a, 0x3ac, 0x3ad, 0x3ba, 0x3bb, 0x3cc, 0x3d1, 0x42d, 0x42e, 0x43b, 0x43c, 0x44b, 0x44c, 0x480, 0x481

Function 3:
Public function signature: 0x68d324e7
Entry block: 0x15c
Exit block: 0x105
Body: 0x105, 0x15c, 0x163, 0x164, 0x486, 0x49d, 0x4a2, 0x4fa, 0x4fb

Function 4:
Public function signature: 0x7362377b
Entry block: 0x17a
Exit block: 0x105
Body: 0x105, 0x17a, 0x181, 0x182, 0x4fe, 0x515, 0x51a, 0x52c, 0x531, 0x566, 0x567, 0x5a5, 0x5a6

Function 5:
Public function signature: 0x7770bd15
Entry block: 0x18c
Exit block: 0x19c
Body: 0x18c, 0x193, 0x194, 0x19c, 0x5a8

Function 6:
Public function signature: 0x89826963
Entry block: 0x1b8
Exit block: 0x105
Body: 0x105, 0x1b8, 0x1bf, 0x1c0, 0x5b7, 0x5cf, 0x5e2, 0x5e9, 0x5ee, 0x627, 0x628

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x1cd
Exit block: 0x19c
Body: 0x19c, 0x1cd, 0x1d4, 0x1d5, 0x62b

Function 8:
Public function signature: 0x9665b658
Entry block: 0x1f9
Exit block: 0x105
Body: 0x105, 0x1f9, 0x200, 0x201, 0x63a, 0x651, 0x656, 0x6a8, 0x6a9

Function 9:
Public function signature: 0xa7c3d71b
Entry block: 0x217
Exit block: 0x117
Body: 0x117, 0x217, 0x21e, 0x21f, 0x6ac

Function 10:
Public function signature: 0xab0fe874
Entry block: 0x239
Exit block: 0x117
Body: 0x117, 0x239, 0x240, 0x241, 0x6b2

Function 11:
Public function signature: 0xc34c08e5
Entry block: 0x25b
Exit block: 0x19c
Body: 0x19c, 0x25b, 0x262, 0x263, 0x6b8

Function 12:
Public function signature: 0xc59b5562
Entry block: 0x287
Exit block: 0x105
Body: 0x105, 0x287, 0x28e, 0x28f, 0x327, 0x328, 0x6c7, 0x6e2, 0x6f5, 0x6fc, 0x701, 0x70d, 0x718, 0x71a, 0x720, 0x724, 0x730, 0x73b, 0x73d, 0x743, 0x747, 0x759, 0x75d, 0x773, 0x7a0, 0x7a1, 0x7d5, 0x7d6, 0x899, 0x89b, 0x89e, 0x8a0, 0x8a3, 0x8ad, 0x8b2, 0x8b4, 0x8b7

Function 13:
Public function signature: 0xe52c0f24
Entry block: 0x299
Exit block: 0x105
Body: 0x105, 0x299, 0x2a0, 0x2a1, 0x7d9, 0x7f1, 0x804, 0x80b, 0x810, 0x849, 0x84a

Function 14:
Public function signature: 0xf2fde38b
Entry block: 0x2ae
Exit block: 0x105
Body: 0x105, 0x2ae, 0x2b5, 0x2b6, 0x327, 0x328, 0x84d, 0x864, 0x869, 0x879, 0x894, 0x895, 0x896

Function 15:
Public fallback function
Entry block: 0xbf
Exit block: 0x105
Body: 0xbf, 0xc3, 0x103, 0x105

