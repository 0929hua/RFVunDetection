Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x242]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xb97bc86
0x3c EQ
0x3d PUSH2 0x242
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xb97bc86
0x3c: V13 = EQ 0xb97bc86 V11
0x3d: V14 = 0x242
0x40: JUMPI 0x242 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x26b]
---
0x41 DUP1
0x42 PUSH4 0x6e66f6e9
0x47 EQ
0x48 PUSH2 0x26b
0x4b JUMPI
---
0x42: V15 = 0x6e66f6e9
0x47: V16 = EQ 0x6e66f6e9 V11
0x48: V17 = 0x26b
0x4b: JUMPI 0x26b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x2c0]
---
0x4c DUP1
0x4d PUSH4 0xc24a0f8b
0x52 EQ
0x53 PUSH2 0x2c0
0x56 JUMPI
---
0x4d: V18 = 0xc24a0f8b
0x52: V19 = EQ 0xc24a0f8b V11
0x53: V20 = 0x2c0
0x56: JUMPI 0x2c0 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x62]
---
Predecessors: [0x0, 0x4c]
Successors: [0x63, 0x67]
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b CALLVALUE
0x5c GT
0x5d ISZERO
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: V22 = CALLVALUE
0x5c: V23 = GT V22 0x0
0x5d: V24 = ISZERO V23
0x5e: V25 = ISZERO V24
0x5f: V26 = 0x67
0x62: JUMPI 0x67 V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x57]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V27 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x67
[0x67:0x72]
---
Predecessors: [0x57]
Successors: [0x73, 0x77]
---
0x67 JUMPDEST
0x68 PUSH1 0x2
0x6a SLOAD
0x6b TIMESTAMP
0x6c GT
0x6d ISZERO
0x6e ISZERO
0x6f PUSH2 0x77
0x72 JUMPI
---
0x67: JUMPDEST 
0x68: V28 = 0x2
0x6a: V29 = S[0x2]
0x6b: V30 = TIMESTAMP
0x6c: V31 = GT V30 V29
0x6d: V32 = ISZERO V31
0x6e: V33 = ISZERO V32
0x6f: V34 = 0x77
0x72: JUMPI 0x77 V33
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x73
[0x73:0x76]
---
Predecessors: [0x67]
Successors: []
---
0x73 PUSH1 0x0
0x75 DUP1
0x76 REVERT
---
0x73: V35 = 0x0
0x76: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x77
[0x77:0x82]
---
Predecessors: [0x67]
Successors: [0x83, 0x87]
---
0x77 JUMPDEST
0x78 PUSH1 0x3
0x7a SLOAD
0x7b TIMESTAMP
0x7c LT
0x7d ISZERO
0x7e ISZERO
0x7f PUSH2 0x87
0x82 JUMPI
---
0x77: JUMPDEST 
0x78: V36 = 0x3
0x7a: V37 = S[0x3]
0x7b: V38 = TIMESTAMP
0x7c: V39 = LT V38 V37
0x7d: V40 = ISZERO V39
0x7e: V41 = ISZERO V40
0x7f: V42 = 0x87
0x82: JUMPI 0x87 V41
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x83
[0x83:0x86]
---
Predecessors: [0x77]
Successors: []
---
0x83 PUSH1 0x0
0x85 DUP1
0x86 REVERT
---
0x83: V43 = 0x0
0x86: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x87
[0x87:0x14c]
---
Predecessors: [0x77]
Successors: [0x14d, 0x151]
---
0x87 JUMPDEST
0x88 PUSH2 0x4e20
0x8b CALLVALUE
0x8c MUL
0x8d SWAP1
0x8e POP
0x8f PUSH1 0x0
0x91 DUP1
0x92 SWAP1
0x93 SLOAD
0x94 SWAP1
0x95 PUSH2 0x100
0x98 EXP
0x99 SWAP1
0x9a DIV
0x9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0 AND
0xb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc6 AND
0xc7 PUSH4 0xa9059cbb
0xcc CALLER
0xcd DUP4
0xce PUSH1 0x40
0xd0 MLOAD
0xd1 DUP4
0xd2 PUSH4 0xffffffff
0xd7 AND
0xd8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xf6 MUL
0xf7 DUP2
0xf8 MSTORE
0xf9 PUSH1 0x4
0xfb ADD
0xfc DUP1
0xfd DUP4
0xfe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x113 AND
0x114 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x129 AND
0x12a DUP2
0x12b MSTORE
0x12c PUSH1 0x20
0x12e ADD
0x12f DUP3
0x130 DUP2
0x131 MSTORE
0x132 PUSH1 0x20
0x134 ADD
0x135 SWAP3
0x136 POP
0x137 POP
0x138 POP
0x139 PUSH1 0x0
0x13b PUSH1 0x40
0x13d MLOAD
0x13e DUP1
0x13f DUP4
0x140 SUB
0x141 DUP2
0x142 PUSH1 0x0
0x144 DUP8
0x145 DUP1
0x146 EXTCODESIZE
0x147 ISZERO
0x148 ISZERO
0x149 PUSH2 0x151
0x14c JUMPI
---
0x87: JUMPDEST 
0x88: V44 = 0x4e20
0x8b: V45 = CALLVALUE
0x8c: V46 = MUL V45 0x4e20
0x8f: V47 = 0x0
0x93: V48 = S[0x0]
0x95: V49 = 0x100
0x98: V50 = EXP 0x100 0x0
0x9a: V51 = DIV V48 0x1
0x9b: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xb1: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xc7: V56 = 0xa9059cbb
0xcc: V57 = CALLER
0xce: V58 = 0x40
0xd0: V59 = M[0x40]
0xd2: V60 = 0xffffffff
0xd7: V61 = AND 0xffffffff 0xa9059cbb
0xd8: V62 = 0x100000000000000000000000000000000000000000000000000000000
0xf6: V63 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xf8: M[V59] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xf9: V64 = 0x4
0xfb: V65 = ADD 0x4 V59
0xfe: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x113: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x114: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x129: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x12b: M[V65] = V69
0x12c: V70 = 0x20
0x12e: V71 = ADD 0x20 V65
0x131: M[V71] = V46
0x132: V72 = 0x20
0x134: V73 = ADD 0x20 V71
0x139: V74 = 0x0
0x13b: V75 = 0x40
0x13d: V76 = M[0x40]
0x140: V77 = SUB V73 V76
0x142: V78 = 0x0
0x146: V79 = EXTCODESIZE V55
0x147: V80 = ISZERO V79
0x148: V81 = ISZERO V80
0x149: V82 = 0x151
0x14c: JUMPI 0x151 V81
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V46, V55, 0xa9059cbb, V73, 0x0, V76, V77, V76, 0x0, V55]
Exit stack: [V11, V46, V55, 0xa9059cbb, V73, 0x0, V76, V77, V76, 0x0, V55]

================================

Block 0x14d
[0x14d:0x150]
---
Predecessors: [0x87]
Successors: []
---
0x14d PUSH1 0x0
0x14f DUP1
0x150 REVERT
---
0x14d: V83 = 0x0
0x150: REVERT 0x0 0x0
---
Entry stack: [V11, V46, V55, 0xa9059cbb, V73, 0x0, V76, V77, V76, 0x0, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V46, V55, 0xa9059cbb, V73, 0x0, V76, V77, V76, 0x0, V55]

================================

Block 0x151
[0x151:0x15d]
---
Predecessors: [0x87]
Successors: [0x15e, 0x162]
---
0x151 JUMPDEST
0x152 PUSH2 0x2c6
0x155 GAS
0x156 SUB
0x157 CALL
0x158 ISZERO
0x159 ISZERO
0x15a PUSH2 0x162
0x15d JUMPI
---
0x151: JUMPDEST 
0x152: V84 = 0x2c6
0x155: V85 = GAS
0x156: V86 = SUB V85 0x2c6
0x157: V87 = CALL V86 V55 0x0 V76 V77 V76 0x0
0x158: V88 = ISZERO V87
0x159: V89 = ISZERO V88
0x15a: V90 = 0x162
0x15d: JUMPI 0x162 V89
---
Entry stack: [V11, V46, V55, 0xa9059cbb, V73, 0x0, V76, V77, V76, 0x0, V55]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V46, V55, 0xa9059cbb, V73]

================================

Block 0x15e
[0x15e:0x161]
---
Predecessors: [0x151]
Successors: []
---
0x15e PUSH1 0x0
0x160 DUP1
0x161 REVERT
---
0x15e: V91 = 0x0
0x161: REVERT 0x0 0x0
---
Entry stack: [V11, V46, V55, 0xa9059cbb, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V46, V55, 0xa9059cbb, V73]

================================

Block 0x162
[0x162:0x23a]
---
Predecessors: [0x151]
Successors: [0x23b, 0x23f]
---
0x162 JUMPDEST
0x163 POP
0x164 POP
0x165 POP
0x166 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x187 CALLER
0x188 DUP3
0x189 PUSH1 0x1
0x18b PUSH1 0x40
0x18d MLOAD
0x18e DUP1
0x18f DUP5
0x190 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a5 AND
0x1a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bb AND
0x1bc DUP2
0x1bd MSTORE
0x1be PUSH1 0x20
0x1c0 ADD
0x1c1 DUP4
0x1c2 DUP2
0x1c3 MSTORE
0x1c4 PUSH1 0x20
0x1c6 ADD
0x1c7 DUP3
0x1c8 ISZERO
0x1c9 ISZERO
0x1ca ISZERO
0x1cb ISZERO
0x1cc DUP2
0x1cd MSTORE
0x1ce PUSH1 0x20
0x1d0 ADD
0x1d1 SWAP4
0x1d2 POP
0x1d3 POP
0x1d4 POP
0x1d5 POP
0x1d6 PUSH1 0x40
0x1d8 MLOAD
0x1d9 DUP1
0x1da SWAP2
0x1db SUB
0x1dc SWAP1
0x1dd LOG1
0x1de PUSH1 0x1
0x1e0 PUSH1 0x0
0x1e2 SWAP1
0x1e3 SLOAD
0x1e4 SWAP1
0x1e5 PUSH2 0x100
0x1e8 EXP
0x1e9 SWAP1
0x1ea DIV
0x1eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x200 AND
0x201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x216 AND
0x217 PUSH2 0x8fc
0x21a CALLVALUE
0x21b SWAP1
0x21c DUP2
0x21d ISZERO
0x21e MUL
0x21f SWAP1
0x220 PUSH1 0x40
0x222 MLOAD
0x223 PUSH1 0x0
0x225 PUSH1 0x40
0x227 MLOAD
0x228 DUP1
0x229 DUP4
0x22a SUB
0x22b DUP2
0x22c DUP6
0x22d DUP9
0x22e DUP9
0x22f CALL
0x230 SWAP4
0x231 POP
0x232 POP
0x233 POP
0x234 POP
0x235 ISZERO
0x236 ISZERO
0x237 PUSH2 0x23f
0x23a JUMPI
---
0x162: JUMPDEST 
0x166: V92 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x187: V93 = CALLER
0x189: V94 = 0x1
0x18b: V95 = 0x40
0x18d: V96 = M[0x40]
0x190: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a5: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1a6: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1bd: M[V96] = V100
0x1be: V101 = 0x20
0x1c0: V102 = ADD 0x20 V96
0x1c3: M[V102] = V46
0x1c4: V103 = 0x20
0x1c6: V104 = ADD 0x20 V102
0x1c8: V105 = ISZERO 0x1
0x1c9: V106 = ISZERO 0x0
0x1ca: V107 = ISZERO 0x1
0x1cb: V108 = ISZERO 0x0
0x1cd: M[V104] = 0x1
0x1ce: V109 = 0x20
0x1d0: V110 = ADD 0x20 V104
0x1d6: V111 = 0x40
0x1d8: V112 = M[0x40]
0x1db: V113 = SUB V110 V112
0x1dd: LOG V112 V113 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x1de: V114 = 0x1
0x1e0: V115 = 0x0
0x1e3: V116 = S[0x1]
0x1e5: V117 = 0x100
0x1e8: V118 = EXP 0x100 0x0
0x1ea: V119 = DIV V116 0x1
0x1eb: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x200: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x201: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x216: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x217: V124 = 0x8fc
0x21a: V125 = CALLVALUE
0x21d: V126 = ISZERO V125
0x21e: V127 = MUL V126 0x8fc
0x220: V128 = 0x40
0x222: V129 = M[0x40]
0x223: V130 = 0x0
0x225: V131 = 0x40
0x227: V132 = M[0x40]
0x22a: V133 = SUB V129 V132
0x22f: V134 = CALL V127 V123 V125 V132 V133 V132 0x0
0x235: V135 = ISZERO V134
0x236: V136 = ISZERO V135
0x237: V137 = 0x23f
0x23a: JUMPI 0x23f V136
---
Entry stack: [V11, V46, V55, 0xa9059cbb, V73]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V11, V46]

================================

Block 0x23b
[0x23b:0x23e]
---
Predecessors: [0x162]
Successors: []
---
0x23b PUSH1 0x0
0x23d DUP1
0x23e REVERT
---
0x23b: V138 = 0x0
0x23e: REVERT 0x0 0x0
---
Entry stack: [V11, V46]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V46]

================================

Block 0x23f
[0x23f:0x241]
---
Predecessors: [0x162]
Successors: []
---
0x23f JUMPDEST
0x240 POP
0x241 STOP
---
0x23f: JUMPDEST 
0x241: STOP 
---
Entry stack: [V11, V46]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x242
[0x242:0x248]
---
Predecessors: [0xd]
Successors: [0x249, 0x24d]
---
0x242 JUMPDEST
0x243 CALLVALUE
0x244 ISZERO
0x245 PUSH2 0x24d
0x248 JUMPI
---
0x242: JUMPDEST 
0x243: V139 = CALLVALUE
0x244: V140 = ISZERO V139
0x245: V141 = 0x24d
0x248: JUMPI 0x24d V140
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x249
[0x249:0x24c]
---
Predecessors: [0x242]
Successors: []
---
0x249 PUSH1 0x0
0x24b DUP1
0x24c REVERT
---
0x249: V142 = 0x0
0x24c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x24d
[0x24d:0x254]
---
Predecessors: [0x242]
Successors: [0x2e9]
---
0x24d JUMPDEST
0x24e PUSH2 0x255
0x251 PUSH2 0x2e9
0x254 JUMP
---
0x24d: JUMPDEST 
0x24e: V143 = 0x255
0x251: V144 = 0x2e9
0x254: JUMP 0x2e9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x255]
Exit stack: [V11, 0x255]

================================

Block 0x255
[0x255:0x26a]
---
Predecessors: [0x2e9]
Successors: []
---
0x255 JUMPDEST
0x256 PUSH1 0x40
0x258 MLOAD
0x259 DUP1
0x25a DUP3
0x25b DUP2
0x25c MSTORE
0x25d PUSH1 0x20
0x25f ADD
0x260 SWAP2
0x261 POP
0x262 POP
0x263 PUSH1 0x40
0x265 MLOAD
0x266 DUP1
0x267 SWAP2
0x268 SUB
0x269 SWAP1
0x26a RETURN
---
0x255: JUMPDEST 
0x256: V145 = 0x40
0x258: V146 = M[0x40]
0x25c: M[V146] = V183
0x25d: V147 = 0x20
0x25f: V148 = ADD 0x20 V146
0x263: V149 = 0x40
0x265: V150 = M[0x40]
0x268: V151 = SUB V148 V150
0x26a: RETURN V150 V151
---
Entry stack: [V11, 0x255, V183]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x255]

================================

Block 0x26b
[0x26b:0x271]
---
Predecessors: [0x41]
Successors: [0x272, 0x276]
---
0x26b JUMPDEST
0x26c CALLVALUE
0x26d ISZERO
0x26e PUSH2 0x276
0x271 JUMPI
---
0x26b: JUMPDEST 
0x26c: V152 = CALLVALUE
0x26d: V153 = ISZERO V152
0x26e: V154 = 0x276
0x271: JUMPI 0x276 V153
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x272
[0x272:0x275]
---
Predecessors: [0x26b]
Successors: []
---
0x272 PUSH1 0x0
0x274 DUP1
0x275 REVERT
---
0x272: V155 = 0x0
0x275: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x276
[0x276:0x27d]
---
Predecessors: [0x26b]
Successors: [0x2ef]
---
0x276 JUMPDEST
0x277 PUSH2 0x27e
0x27a PUSH2 0x2ef
0x27d JUMP
---
0x276: JUMPDEST 
0x277: V156 = 0x27e
0x27a: V157 = 0x2ef
0x27d: JUMP 0x2ef
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x27e]
Exit stack: [V11, 0x27e]

================================

Block 0x27e
[0x27e:0x2bf]
---
Predecessors: [0x2ef]
Successors: []
---
0x27e JUMPDEST
0x27f PUSH1 0x40
0x281 MLOAD
0x282 DUP1
0x283 DUP3
0x284 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x299 AND
0x29a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2af AND
0x2b0 DUP2
0x2b1 MSTORE
0x2b2 PUSH1 0x20
0x2b4 ADD
0x2b5 SWAP2
0x2b6 POP
0x2b7 POP
0x2b8 PUSH1 0x40
0x2ba MLOAD
0x2bb DUP1
0x2bc SWAP2
0x2bd SUB
0x2be SWAP1
0x2bf RETURN
---
0x27e: JUMPDEST 
0x27f: V158 = 0x40
0x281: V159 = M[0x40]
0x284: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x299: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x29a: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x2af: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x2b1: M[V159] = V163
0x2b2: V164 = 0x20
0x2b4: V165 = ADD 0x20 V159
0x2b8: V166 = 0x40
0x2ba: V167 = M[0x40]
0x2bd: V168 = SUB V165 V167
0x2bf: RETURN V167 V168
---
Entry stack: [V11, 0x27e, V190]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x27e]

================================

Block 0x2c0
[0x2c0:0x2c6]
---
Predecessors: [0x4c]
Successors: [0x2c7, 0x2cb]
---
0x2c0 JUMPDEST
0x2c1 CALLVALUE
0x2c2 ISZERO
0x2c3 PUSH2 0x2cb
0x2c6 JUMPI
---
0x2c0: JUMPDEST 
0x2c1: V169 = CALLVALUE
0x2c2: V170 = ISZERO V169
0x2c3: V171 = 0x2cb
0x2c6: JUMPI 0x2cb V170
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c7
[0x2c7:0x2ca]
---
Predecessors: [0x2c0]
Successors: []
---
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca REVERT
---
0x2c7: V172 = 0x0
0x2ca: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2cb
[0x2cb:0x2d2]
---
Predecessors: [0x2c0]
Successors: [0x314]
---
0x2cb JUMPDEST
0x2cc PUSH2 0x2d3
0x2cf PUSH2 0x314
0x2d2 JUMP
---
0x2cb: JUMPDEST 
0x2cc: V173 = 0x2d3
0x2cf: V174 = 0x314
0x2d2: JUMP 0x314
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2d3]
Exit stack: [V11, 0x2d3]

================================

Block 0x2d3
[0x2d3:0x2e8]
---
Predecessors: [0x314]
Successors: []
---
0x2d3 JUMPDEST
0x2d4 PUSH1 0x40
0x2d6 MLOAD
0x2d7 DUP1
0x2d8 DUP3
0x2d9 DUP2
0x2da MSTORE
0x2db PUSH1 0x20
0x2dd ADD
0x2de SWAP2
0x2df POP
0x2e0 POP
0x2e1 PUSH1 0x40
0x2e3 MLOAD
0x2e4 DUP1
0x2e5 SWAP2
0x2e6 SUB
0x2e7 SWAP1
0x2e8 RETURN
---
0x2d3: JUMPDEST 
0x2d4: V175 = 0x40
0x2d6: V176 = M[0x40]
0x2da: M[V176] = V192
0x2db: V177 = 0x20
0x2dd: V178 = ADD 0x20 V176
0x2e1: V179 = 0x40
0x2e3: V180 = M[0x40]
0x2e6: V181 = SUB V178 V180
0x2e8: RETURN V180 V181
---
Entry stack: [V11, 0x2d3, V192]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2d3]

================================

Block 0x2e9
[0x2e9:0x2ee]
---
Predecessors: [0x24d]
Successors: [0x255]
---
0x2e9 JUMPDEST
0x2ea PUSH1 0x2
0x2ec SLOAD
0x2ed DUP2
0x2ee JUMP
---
0x2e9: JUMPDEST 
0x2ea: V182 = 0x2
0x2ec: V183 = S[0x2]
0x2ee: JUMP 0x255
---
Entry stack: [V11, 0x255]
Stack pops: 1
Stack additions: [S0, V183]
Exit stack: [V11, 0x255, V183]

================================

Block 0x2ef
[0x2ef:0x313]
---
Predecessors: [0x276]
Successors: [0x27e]
---
0x2ef JUMPDEST
0x2f0 PUSH1 0x0
0x2f2 DUP1
0x2f3 SWAP1
0x2f4 SLOAD
0x2f5 SWAP1
0x2f6 PUSH2 0x100
0x2f9 EXP
0x2fa SWAP1
0x2fb DIV
0x2fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x311 AND
0x312 DUP2
0x313 JUMP
---
0x2ef: JUMPDEST 
0x2f0: V184 = 0x0
0x2f4: V185 = S[0x0]
0x2f6: V186 = 0x100
0x2f9: V187 = EXP 0x100 0x0
0x2fb: V188 = DIV V185 0x1
0x2fc: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x311: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x313: JUMP 0x27e
---
Entry stack: [V11, 0x27e]
Stack pops: 1
Stack additions: [S0, V190]
Exit stack: [V11, 0x27e, V190]

================================

Block 0x314
[0x314:0x319]
---
Predecessors: [0x2cb]
Successors: [0x2d3]
---
0x314 JUMPDEST
0x315 PUSH1 0x3
0x317 SLOAD
0x318 DUP2
0x319 JUMP
---
0x314: JUMPDEST 
0x315: V191 = 0x3
0x317: V192 = S[0x3]
0x319: JUMP 0x2d3
---
Entry stack: [V11, 0x2d3]
Stack pops: 1
Stack additions: [S0, V192]
Exit stack: [V11, 0x2d3, V192]

================================

Block 0x31a
[0x31a:0x345]
---
Predecessors: []
Successors: []
---
0x31a STOP
0x31b LOG1
0x31c PUSH6 0x627a7a723058
0x323 SHA3
0x324 POP
0x325 NUMBER
0x326 INVALID
0x327 MISSING 0xbf
0x328 MISSING 0xf6
0x329 MISSING 0xd2
0x32a MISSING 0xb6
0x32b MISSING 0xa5
0x32c PC
0x32d DUP10
0x32e MISSING 0xe1
0x32f ORIGIN
0x330 MISSING 0xe4
0x331 ADDMOD
0x332 ADD
0x333 MISSING 0xee
0x334 CALLCODE
0x335 STATICCALL
0x336 MISSING 0xa7
0x337 SWAP16
0x338 SLT
0x339 PUSH11 0x389cc437f4fbe461fdd000
0x345 MISSING 0x29
---
0x31a: STOP 
0x31b: LOG S0 S1 S2
0x31c: V193 = 0x627a7a723058
0x323: V194 = SHA3 0x627a7a723058 S3
0x325: V195 = NUMBER
0x326: INVALID 
0x327: MISSING 0xbf
0x328: MISSING 0xf6
0x329: MISSING 0xd2
0x32a: MISSING 0xb6
0x32b: MISSING 0xa5
0x32c: V196 = PC
0x32e: MISSING 0xe1
0x32f: V197 = ORIGIN
0x330: MISSING 0xe4
0x331: V198 = ADDMOD S0 S1 S2
0x332: V199 = ADD V198 S3
0x333: MISSING 0xee
0x334: V200 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x335: V201 = STATICCALL V200 S7 S8 S9 S10 S11
0x336: MISSING 0xa7
0x338: V202 = SLT S16 S1
0x339: V203 = 0x389cc437f4fbe461fdd000
0x345: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V195, S8, V196, S0, S1, S2, S3, S4, S5, S6, S7, S8, V197, V199, V201, 0x389cc437f4fbe461fdd000, V202, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0xb97bc86
Entry block: 0x242
Exit block: 0x255
Body: 0x242, 0x249, 0x24d, 0x255, 0x2e9

Function 1:
Public function signature: 0x6e66f6e9
Entry block: 0x26b
Exit block: 0x27e
Body: 0x26b, 0x272, 0x276, 0x27e, 0x2ef

Function 2:
Public function signature: 0xc24a0f8b
Entry block: 0x2c0
Exit block: 0x2d3
Body: 0x2c0, 0x2c7, 0x2cb, 0x2d3, 0x314

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x23b
Body: 0x57, 0x63, 0x67, 0x73, 0x77, 0x83, 0x87, 0x14d, 0x151, 0x15e, 0x162, 0x23b, 0x23f

