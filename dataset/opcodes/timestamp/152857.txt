Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xb6]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xb6
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xb6
0xc: JUMPI 0xb6 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xc1]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x12065fe0
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xc1
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x12065fe0
0x22: V15 = EQ V13 0x12065fe0
0x23: V16 = 0xc1
0x26: JUMPI 0xc1 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xe6]
---
0x27 DUP1
0x28 PUSH4 0x3aedfb8b
0x2d EQ
0x2e PUSH2 0xe6
0x31 JUMPI
---
0x28: V17 = 0x3aedfb8b
0x2d: V18 = EQ 0x3aedfb8b V13
0x2e: V19 = 0xe6
0x31: JUMPI 0xe6 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xf9]
---
0x32 DUP1
0x33 PUSH4 0x3cecd719
0x38 EQ
0x39 PUSH2 0xf9
0x3c JUMPI
---
0x33: V20 = 0x3cecd719
0x38: V21 = EQ 0x3cecd719 V13
0x39: V22 = 0xf9
0x3c: JUMPI 0xf9 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x10c]
---
0x3d DUP1
0x3e PUSH4 0x51c69b12
0x43 EQ
0x44 PUSH2 0x10c
0x47 JUMPI
---
0x3e: V23 = 0x51c69b12
0x43: V24 = EQ 0x51c69b12 V13
0x44: V25 = 0x10c
0x47: JUMPI 0x10c V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x11f]
---
0x48 DUP1
0x49 PUSH4 0x590e1ae3
0x4e EQ
0x4f PUSH2 0x11f
0x52 JUMPI
---
0x49: V26 = 0x590e1ae3
0x4e: V27 = EQ 0x590e1ae3 V13
0x4f: V28 = 0x11f
0x52: JUMPI 0x11f V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x132]
---
0x53 DUP1
0x54 PUSH4 0x83197ef0
0x59 EQ
0x5a PUSH2 0x132
0x5d JUMPI
---
0x54: V29 = 0x83197ef0
0x59: V30 = EQ 0x83197ef0 V13
0x5a: V31 = 0x132
0x5d: JUMPI 0x132 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x145]
---
0x5e DUP1
0x5f PUSH4 0x8d6cc56d
0x64 EQ
0x65 PUSH2 0x145
0x68 JUMPI
---
0x5f: V32 = 0x8d6cc56d
0x64: V33 = EQ 0x8d6cc56d V13
0x65: V34 = 0x145
0x68: JUMPI 0x145 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x15b]
---
0x69 DUP1
0x6a PUSH4 0x8da5cb5b
0x6f EQ
0x70 PUSH2 0x15b
0x73 JUMPI
---
0x6a: V35 = 0x8da5cb5b
0x6f: V36 = EQ 0x8da5cb5b V13
0x70: V37 = 0x15b
0x73: JUMPI 0x15b V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x18a]
---
0x74 DUP1
0x75 PUSH4 0xbe9a6555
0x7a EQ
0x7b PUSH2 0x18a
0x7e JUMPI
---
0x75: V38 = 0xbe9a6555
0x7a: V39 = EQ 0xbe9a6555 V13
0x7b: V40 = 0x18a
0x7e: JUMPI 0x18a V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x19d]
---
0x7f DUP1
0x80 PUSH4 0xcedbbeee
0x85 EQ
0x86 PUSH2 0x19d
0x89 JUMPI
---
0x80: V41 = 0xcedbbeee
0x85: V42 = EQ 0xcedbbeee V13
0x86: V43 = 0x19d
0x89: JUMPI 0x19d V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x1b1]
---
0x8a DUP1
0x8b PUSH4 0xefbe1c1c
0x90 EQ
0x91 PUSH2 0x1b1
0x94 JUMPI
---
0x8b: V44 = 0xefbe1c1c
0x90: V45 = EQ 0xefbe1c1c V13
0x91: V46 = 0x1b1
0x94: JUMPI 0x1b1 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x1c4]
---
0x95 DUP1
0x96 PUSH4 0xf2fde38b
0x9b EQ
0x9c PUSH2 0x1c4
0x9f JUMPI
---
0x96: V47 = 0xf2fde38b
0x9b: V48 = EQ 0xf2fde38b V13
0x9c: V49 = 0x1c4
0x9f: JUMPI 0x1c4 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x1e3]
---
0xa0 DUP1
0xa1 PUSH4 0xfbfa77cf
0xa6 EQ
0xa7 PUSH2 0x1e3
0xaa JUMPI
---
0xa1: V50 = 0xfbfa77cf
0xa6: V51 = EQ 0xfbfa77cf V13
0xa7: V52 = 0x1e3
0xaa: JUMPI 0x1e3 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x1f6]
---
0xab DUP1
0xac PUSH4 0xfc0c546a
0xb1 EQ
0xb2 PUSH2 0x1f6
0xb5 JUMPI
---
0xac: V53 = 0xfc0c546a
0xb1: V54 = EQ 0xfc0c546a V13
0xb2: V55 = 0x1f6
0xb5: JUMPI 0x1f6 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xbe]
---
Predecessors: [0x0, 0xab]
Successors: [0x209]
---
0xb6 JUMPDEST
0xb7 PUSH2 0xbf
0xba CALLER
0xbb PUSH2 0x209
0xbe JUMP
---
0xb6: JUMPDEST 
0xb7: V56 = 0xbf
0xba: V57 = CALLER
0xbb: V58 = 0x209
0xbe: JUMP 0x209
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xbf, V57]
Exit stack: [V13, 0xbf, V57]

================================

Block 0xbf
[0xbf:0xc0]
---
Predecessors: [0x464, 0x698, 0x799, 0xa65, 0xb0e]
Successors: []
---
0xbf JUMPDEST
0xc0 STOP
---
0xbf: JUMPDEST 
0xc0: STOP 
---
Entry stack: [V13, 0xbf, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S1, S0]

================================

Block 0xc1
[0xc1:0xc7]
---
Predecessors: [0xd]
Successors: [0xc8, 0xcc]
---
0xc1 JUMPDEST
0xc2 CALLVALUE
0xc3 ISZERO
0xc4 PUSH2 0xcc
0xc7 JUMPI
---
0xc1: JUMPDEST 
0xc2: V59 = CALLVALUE
0xc3: V60 = ISZERO V59
0xc4: V61 = 0xcc
0xc7: JUMPI 0xcc V60
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc8
[0xc8:0xcb]
---
Predecessors: [0xc1]
Successors: []
---
0xc8 PUSH1 0x0
0xca DUP1
0xcb REVERT
---
0xc8: V62 = 0x0
0xcb: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd3]
---
Predecessors: [0xc1]
Successors: [0x4d0]
---
0xcc JUMPDEST
0xcd PUSH2 0xd4
0xd0 PUSH2 0x4d0
0xd3 JUMP
---
0xcc: JUMPDEST 
0xcd: V63 = 0xd4
0xd0: V64 = 0x4d0
0xd3: JUMP 0x4d0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V13, 0xd4]

================================

Block 0xd4
[0xd4:0xe5]
---
Predecessors: [0x4d0, 0x79e, 0xaaf, 0xab5]
Successors: []
---
0xd4 JUMPDEST
0xd5 PUSH1 0x40
0xd7 MLOAD
0xd8 SWAP1
0xd9 DUP2
0xda MSTORE
0xdb PUSH1 0x20
0xdd ADD
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP1
0xe2 SWAP2
0xe3 SUB
0xe4 SWAP1
0xe5 RETURN
---
0xd4: JUMPDEST 
0xd5: V65 = 0x40
0xd7: V66 = M[0x40]
0xda: M[V66] = S0
0xdb: V67 = 0x20
0xdd: V68 = ADD 0x20 V66
0xde: V69 = 0x40
0xe0: V70 = M[0x40]
0xe3: V71 = SUB V68 V70
0xe5: RETURN V70 V71
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0xe6
[0xe6:0xec]
---
Predecessors: [0x27]
Successors: [0xed, 0xf1]
---
0xe6 JUMPDEST
0xe7 CALLVALUE
0xe8 ISZERO
0xe9 PUSH2 0xf1
0xec JUMPI
---
0xe6: JUMPDEST 
0xe7: V72 = CALLVALUE
0xe8: V73 = ISZERO V72
0xe9: V74 = 0xf1
0xec: JUMPI 0xf1 V73
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0xe6]
Successors: []
---
0xed PUSH1 0x0
0xef DUP1
0xf0 REVERT
---
0xed: V75 = 0x0
0xf0: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf1
[0xf1:0xf8]
---
Predecessors: [0xe6]
Successors: [0x4de]
---
0xf1 JUMPDEST
0xf2 PUSH2 0xbf
0xf5 PUSH2 0x4de
0xf8 JUMP
---
0xf1: JUMPDEST 
0xf2: V76 = 0xbf
0xf5: V77 = 0x4de
0xf8: JUMP 0x4de
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xbf]
Exit stack: [V13, 0xbf]

================================

Block 0xf9
[0xf9:0xff]
---
Predecessors: [0x32]
Successors: [0x100, 0x104]
---
0xf9 JUMPDEST
0xfa CALLVALUE
0xfb ISZERO
0xfc PUSH2 0x104
0xff JUMPI
---
0xf9: JUMPDEST 
0xfa: V78 = CALLVALUE
0xfb: V79 = ISZERO V78
0xfc: V80 = 0x104
0xff: JUMPI 0x104 V79
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x100
[0x100:0x103]
---
Predecessors: [0xf9]
Successors: []
---
0x100 PUSH1 0x0
0x102 DUP1
0x103 REVERT
---
0x100: V81 = 0x0
0x103: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x104
[0x104:0x10b]
---
Predecessors: [0xf9]
Successors: [0x69f]
---
0x104 JUMPDEST
0x105 PUSH2 0xbf
0x108 PUSH2 0x69f
0x10b JUMP
---
0x104: JUMPDEST 
0x105: V82 = 0xbf
0x108: V83 = 0x69f
0x10b: JUMP 0x69f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xbf]
Exit stack: [V13, 0xbf]

================================

Block 0x10c
[0x10c:0x112]
---
Predecessors: [0x3d]
Successors: [0x113, 0x117]
---
0x10c JUMPDEST
0x10d CALLVALUE
0x10e ISZERO
0x10f PUSH2 0x117
0x112 JUMPI
---
0x10c: JUMPDEST 
0x10d: V84 = CALLVALUE
0x10e: V85 = ISZERO V84
0x10f: V86 = 0x117
0x112: JUMPI 0x117 V85
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x113
[0x113:0x116]
---
Predecessors: [0x10c]
Successors: []
---
0x113 PUSH1 0x0
0x115 DUP1
0x116 REVERT
---
0x113: V87 = 0x0
0x116: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x117
[0x117:0x11e]
---
Predecessors: [0x10c]
Successors: [0x79e]
---
0x117 JUMPDEST
0x118 PUSH2 0xd4
0x11b PUSH2 0x79e
0x11e JUMP
---
0x117: JUMPDEST 
0x118: V88 = 0xd4
0x11b: V89 = 0x79e
0x11e: JUMP 0x79e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V13, 0xd4]

================================

Block 0x11f
[0x11f:0x125]
---
Predecessors: [0x48]
Successors: [0x126, 0x12a]
---
0x11f JUMPDEST
0x120 CALLVALUE
0x121 ISZERO
0x122 PUSH2 0x12a
0x125 JUMPI
---
0x11f: JUMPDEST 
0x120: V90 = CALLVALUE
0x121: V91 = ISZERO V90
0x122: V92 = 0x12a
0x125: JUMPI 0x12a V91
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x126
[0x126:0x129]
---
Predecessors: [0x11f]
Successors: []
---
0x126 PUSH1 0x0
0x128 DUP1
0x129 REVERT
---
0x126: V93 = 0x0
0x129: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x12a
[0x12a:0x131]
---
Predecessors: [0x11f]
Successors: [0x7a4]
---
0x12a JUMPDEST
0x12b PUSH2 0xbf
0x12e PUSH2 0x7a4
0x131 JUMP
---
0x12a: JUMPDEST 
0x12b: V94 = 0xbf
0x12e: V95 = 0x7a4
0x131: JUMP 0x7a4
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xbf]
Exit stack: [V13, 0xbf]

================================

Block 0x132
[0x132:0x138]
---
Predecessors: [0x53]
Successors: [0x139, 0x13d]
---
0x132 JUMPDEST
0x133 CALLVALUE
0x134 ISZERO
0x135 PUSH2 0x13d
0x138 JUMPI
---
0x132: JUMPDEST 
0x133: V96 = CALLVALUE
0x134: V97 = ISZERO V96
0x135: V98 = 0x13d
0x138: JUMPI 0x13d V97
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x139
[0x139:0x13c]
---
Predecessors: [0x132]
Successors: []
---
0x139 PUSH1 0x0
0x13b DUP1
0x13c REVERT
---
0x139: V99 = 0x0
0x13c: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x13d
[0x13d:0x144]
---
Predecessors: [0x132]
Successors: [0x8e3]
---
0x13d JUMPDEST
0x13e PUSH2 0xbf
0x141 PUSH2 0x8e3
0x144 JUMP
---
0x13d: JUMPDEST 
0x13e: V100 = 0xbf
0x141: V101 = 0x8e3
0x144: JUMP 0x8e3
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xbf]
Exit stack: [V13, 0xbf]

================================

Block 0x145
[0x145:0x14b]
---
Predecessors: [0x5e]
Successors: [0x14c, 0x150]
---
0x145 JUMPDEST
0x146 CALLVALUE
0x147 ISZERO
0x148 PUSH2 0x150
0x14b JUMPI
---
0x145: JUMPDEST 
0x146: V102 = CALLVALUE
0x147: V103 = ISZERO V102
0x148: V104 = 0x150
0x14b: JUMPI 0x150 V103
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x14c
[0x14c:0x14f]
---
Predecessors: [0x145]
Successors: []
---
0x14c PUSH1 0x0
0x14e DUP1
0x14f REVERT
---
0x14c: V105 = 0x0
0x14f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x150
[0x150:0x15a]
---
Predecessors: [0x145]
Successors: [0xa3c]
---
0x150 JUMPDEST
0x151 PUSH2 0xbf
0x154 PUSH1 0x4
0x156 CALLDATALOAD
0x157 PUSH2 0xa3c
0x15a JUMP
---
0x150: JUMPDEST 
0x151: V106 = 0xbf
0x154: V107 = 0x4
0x156: V108 = CALLDATALOAD 0x4
0x157: V109 = 0xa3c
0x15a: JUMP 0xa3c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xbf, V108]
Exit stack: [V13, 0xbf, V108]

================================

Block 0x15b
[0x15b:0x161]
---
Predecessors: [0x69]
Successors: [0x162, 0x166]
---
0x15b JUMPDEST
0x15c CALLVALUE
0x15d ISZERO
0x15e PUSH2 0x166
0x161 JUMPI
---
0x15b: JUMPDEST 
0x15c: V110 = CALLVALUE
0x15d: V111 = ISZERO V110
0x15e: V112 = 0x166
0x161: JUMPI 0x166 V111
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x162
[0x162:0x165]
---
Predecessors: [0x15b]
Successors: []
---
0x162 PUSH1 0x0
0x164 DUP1
0x165 REVERT
---
0x162: V113 = 0x0
0x165: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x166
[0x166:0x16d]
---
Predecessors: [0x15b]
Successors: [0xaa0]
---
0x166 JUMPDEST
0x167 PUSH2 0x16e
0x16a PUSH2 0xaa0
0x16d JUMP
---
0x166: JUMPDEST 
0x167: V114 = 0x16e
0x16a: V115 = 0xaa0
0x16d: JUMP 0xaa0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x16e]
Exit stack: [V13, 0x16e]

================================

Block 0x16e
[0x16e:0x189]
---
Predecessors: [0xaa0, 0xb11, 0xb20]
Successors: []
---
0x16e JUMPDEST
0x16f PUSH1 0x40
0x171 MLOAD
0x172 PUSH1 0x1
0x174 PUSH1 0xa0
0x176 PUSH1 0x2
0x178 EXP
0x179 SUB
0x17a SWAP1
0x17b SWAP2
0x17c AND
0x17d DUP2
0x17e MSTORE
0x17f PUSH1 0x20
0x181 ADD
0x182 PUSH1 0x40
0x184 MLOAD
0x185 DUP1
0x186 SWAP2
0x187 SUB
0x188 SWAP1
0x189 RETURN
---
0x16e: JUMPDEST 
0x16f: V116 = 0x40
0x171: V117 = M[0x40]
0x172: V118 = 0x1
0x174: V119 = 0xa0
0x176: V120 = 0x2
0x178: V121 = EXP 0x2 0xa0
0x179: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17c: V123 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x17e: M[V117] = V123
0x17f: V124 = 0x20
0x181: V125 = ADD 0x20 V117
0x182: V126 = 0x40
0x184: V127 = M[0x40]
0x187: V128 = SUB V125 V127
0x189: RETURN V127 V128
---
Entry stack: [V13, 0x16e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x16e]

================================

Block 0x18a
[0x18a:0x190]
---
Predecessors: [0x74]
Successors: [0x191, 0x195]
---
0x18a JUMPDEST
0x18b CALLVALUE
0x18c ISZERO
0x18d PUSH2 0x195
0x190 JUMPI
---
0x18a: JUMPDEST 
0x18b: V129 = CALLVALUE
0x18c: V130 = ISZERO V129
0x18d: V131 = 0x195
0x190: JUMPI 0x195 V130
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x191
[0x191:0x194]
---
Predecessors: [0x18a]
Successors: []
---
0x191 PUSH1 0x0
0x193 DUP1
0x194 REVERT
---
0x191: V132 = 0x0
0x194: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x195
[0x195:0x19c]
---
Predecessors: [0x18a]
Successors: [0xaaf]
---
0x195 JUMPDEST
0x196 PUSH2 0xd4
0x199 PUSH2 0xaaf
0x19c JUMP
---
0x195: JUMPDEST 
0x196: V133 = 0xd4
0x199: V134 = 0xaaf
0x19c: JUMP 0xaaf
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V13, 0xd4]

================================

Block 0x19d
[0x19d:0x1b0]
---
Predecessors: [0x7f]
Successors: [0x209]
---
0x19d JUMPDEST
0x19e PUSH2 0xbf
0x1a1 PUSH1 0x1
0x1a3 PUSH1 0xa0
0x1a5 PUSH1 0x2
0x1a7 EXP
0x1a8 SUB
0x1a9 PUSH1 0x4
0x1ab CALLDATALOAD
0x1ac AND
0x1ad PUSH2 0x209
0x1b0 JUMP
---
0x19d: JUMPDEST 
0x19e: V135 = 0xbf
0x1a1: V136 = 0x1
0x1a3: V137 = 0xa0
0x1a5: V138 = 0x2
0x1a7: V139 = EXP 0x2 0xa0
0x1a8: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a9: V141 = 0x4
0x1ab: V142 = CALLDATALOAD 0x4
0x1ac: V143 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x1ad: V144 = 0x209
0x1b0: JUMP 0x209
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xbf, V143]
Exit stack: [V13, 0xbf, V143]

================================

Block 0x1b1
[0x1b1:0x1b7]
---
Predecessors: [0x8a]
Successors: [0x1b8, 0x1bc]
---
0x1b1 JUMPDEST
0x1b2 CALLVALUE
0x1b3 ISZERO
0x1b4 PUSH2 0x1bc
0x1b7 JUMPI
---
0x1b1: JUMPDEST 
0x1b2: V145 = CALLVALUE
0x1b3: V146 = ISZERO V145
0x1b4: V147 = 0x1bc
0x1b7: JUMPI 0x1bc V146
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1b8
[0x1b8:0x1bb]
---
Predecessors: [0x1b1]
Successors: []
---
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb REVERT
---
0x1b8: V148 = 0x0
0x1bb: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1bc
[0x1bc:0x1c3]
---
Predecessors: [0x1b1]
Successors: [0xab5]
---
0x1bc JUMPDEST
0x1bd PUSH2 0xd4
0x1c0 PUSH2 0xab5
0x1c3 JUMP
---
0x1bc: JUMPDEST 
0x1bd: V149 = 0xd4
0x1c0: V150 = 0xab5
0x1c3: JUMP 0xab5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V13, 0xd4]

================================

Block 0x1c4
[0x1c4:0x1ca]
---
Predecessors: [0x95]
Successors: [0x1cb, 0x1cf]
---
0x1c4 JUMPDEST
0x1c5 CALLVALUE
0x1c6 ISZERO
0x1c7 PUSH2 0x1cf
0x1ca JUMPI
---
0x1c4: JUMPDEST 
0x1c5: V151 = CALLVALUE
0x1c6: V152 = ISZERO V151
0x1c7: V153 = 0x1cf
0x1ca: JUMPI 0x1cf V152
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1cb
[0x1cb:0x1ce]
---
Predecessors: [0x1c4]
Successors: []
---
0x1cb PUSH1 0x0
0x1cd DUP1
0x1ce REVERT
---
0x1cb: V154 = 0x0
0x1ce: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1cf
[0x1cf:0x1e2]
---
Predecessors: [0x1c4]
Successors: [0xabb]
---
0x1cf JUMPDEST
0x1d0 PUSH2 0xbf
0x1d3 PUSH1 0x1
0x1d5 PUSH1 0xa0
0x1d7 PUSH1 0x2
0x1d9 EXP
0x1da SUB
0x1db PUSH1 0x4
0x1dd CALLDATALOAD
0x1de AND
0x1df PUSH2 0xabb
0x1e2 JUMP
---
0x1cf: JUMPDEST 
0x1d0: V155 = 0xbf
0x1d3: V156 = 0x1
0x1d5: V157 = 0xa0
0x1d7: V158 = 0x2
0x1d9: V159 = EXP 0x2 0xa0
0x1da: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1db: V161 = 0x4
0x1dd: V162 = CALLDATALOAD 0x4
0x1de: V163 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x1df: V164 = 0xabb
0x1e2: JUMP 0xabb
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xbf, V163]
Exit stack: [V13, 0xbf, V163]

================================

Block 0x1e3
[0x1e3:0x1e9]
---
Predecessors: [0xa0]
Successors: [0x1ea, 0x1ee]
---
0x1e3 JUMPDEST
0x1e4 CALLVALUE
0x1e5 ISZERO
0x1e6 PUSH2 0x1ee
0x1e9 JUMPI
---
0x1e3: JUMPDEST 
0x1e4: V165 = CALLVALUE
0x1e5: V166 = ISZERO V165
0x1e6: V167 = 0x1ee
0x1e9: JUMPI 0x1ee V166
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ea
[0x1ea:0x1ed]
---
Predecessors: [0x1e3]
Successors: []
---
0x1ea PUSH1 0x0
0x1ec DUP1
0x1ed REVERT
---
0x1ea: V168 = 0x0
0x1ed: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ee
[0x1ee:0x1f5]
---
Predecessors: [0x1e3]
Successors: [0xb11]
---
0x1ee JUMPDEST
0x1ef PUSH2 0x16e
0x1f2 PUSH2 0xb11
0x1f5 JUMP
---
0x1ee: JUMPDEST 
0x1ef: V169 = 0x16e
0x1f2: V170 = 0xb11
0x1f5: JUMP 0xb11
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x16e]
Exit stack: [V13, 0x16e]

================================

Block 0x1f6
[0x1f6:0x1fc]
---
Predecessors: [0xab]
Successors: [0x1fd, 0x201]
---
0x1f6 JUMPDEST
0x1f7 CALLVALUE
0x1f8 ISZERO
0x1f9 PUSH2 0x201
0x1fc JUMPI
---
0x1f6: JUMPDEST 
0x1f7: V171 = CALLVALUE
0x1f8: V172 = ISZERO V171
0x1f9: V173 = 0x201
0x1fc: JUMPI 0x201 V172
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1fd
[0x1fd:0x200]
---
Predecessors: [0x1f6]
Successors: []
---
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 REVERT
---
0x1fd: V174 = 0x0
0x200: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x201
[0x201:0x208]
---
Predecessors: [0x1f6]
Successors: [0xb20]
---
0x201 JUMPDEST
0x202 PUSH2 0x16e
0x205 PUSH2 0xb20
0x208 JUMP
---
0x201: JUMPDEST 
0x202: V175 = 0x16e
0x205: V176 = 0xb20
0x208: JUMP 0xb20
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x16e]
Exit stack: [V13, 0x16e]

================================

Block 0x209
[0x209:0x25b]
---
Predecessors: [0xb6, 0x19d]
Successors: [0x25c, 0x260]
---
0x209 JUMPDEST
0x20a PUSH1 0x1
0x20c SLOAD
0x20d PUSH1 0x8
0x20f SLOAD
0x210 PUSH1 0x0
0x212 SWAP2
0x213 DUP3
0x214 SWAP2
0x215 DUP3
0x216 SWAP2
0x217 DUP3
0x218 SWAP2
0x219 PUSH2 0x2eb
0x21c SWAP1
0x21d PUSH1 0x1
0x21f PUSH1 0xa0
0x221 PUSH1 0x2
0x223 EXP
0x224 SUB
0x225 AND
0x226 PUSH4 0x860f5048
0x22b DUP5
0x22c PUSH1 0x40
0x22e MLOAD
0x22f PUSH1 0x20
0x231 ADD
0x232 MSTORE
0x233 PUSH1 0x40
0x235 MLOAD
0x236 DUP2
0x237 PUSH4 0xffffffff
0x23c AND
0x23d PUSH1 0xe0
0x23f PUSH1 0x2
0x241 EXP
0x242 MUL
0x243 DUP2
0x244 MSTORE
0x245 PUSH1 0x4
0x247 ADD
0x248 PUSH1 0x20
0x24a PUSH1 0x40
0x24c MLOAD
0x24d DUP1
0x24e DUP4
0x24f SUB
0x250 DUP2
0x251 PUSH1 0x0
0x253 DUP8
0x254 DUP1
0x255 EXTCODESIZE
0x256 ISZERO
0x257 ISZERO
0x258 PUSH2 0x260
0x25b JUMPI
---
0x209: JUMPDEST 
0x20a: V177 = 0x1
0x20c: V178 = S[0x1]
0x20d: V179 = 0x8
0x20f: V180 = S[0x8]
0x210: V181 = 0x0
0x219: V182 = 0x2eb
0x21d: V183 = 0x1
0x21f: V184 = 0xa0
0x221: V185 = 0x2
0x223: V186 = EXP 0x2 0xa0
0x224: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x225: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x226: V189 = 0x860f5048
0x22c: V190 = 0x40
0x22e: V191 = M[0x40]
0x22f: V192 = 0x20
0x231: V193 = ADD 0x20 V191
0x232: M[V193] = 0x0
0x233: V194 = 0x40
0x235: V195 = M[0x40]
0x237: V196 = 0xffffffff
0x23c: V197 = AND 0xffffffff 0x860f5048
0x23d: V198 = 0xe0
0x23f: V199 = 0x2
0x241: V200 = EXP 0x2 0xe0
0x242: V201 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x860f5048
0x244: M[V195] = 0x860f504800000000000000000000000000000000000000000000000000000000
0x245: V202 = 0x4
0x247: V203 = ADD 0x4 V195
0x248: V204 = 0x20
0x24a: V205 = 0x40
0x24c: V206 = M[0x40]
0x24f: V207 = SUB V203 V206
0x251: V208 = 0x0
0x255: V209 = EXTCODESIZE V188
0x256: V210 = ISZERO V209
0x257: V211 = ISZERO V210
0x258: V212 = 0x260
0x25b: JUMPI 0x260 V211
---
Entry stack: [V13, 0xbf, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, V178, 0x2eb, V188, 0x860f5048, V203, 0x20, V206, V207, V206, 0x0, V188]
Exit stack: [V13, 0xbf, S0, 0x0, 0x0, 0x0, 0x0, V178, 0x2eb, V188, 0x860f5048, V203, 0x20, V206, V207, V206, 0x0, V188]

================================

Block 0x25c
[0x25c:0x25f]
---
Predecessors: [0x209]
Successors: []
---
0x25c PUSH1 0x0
0x25e DUP1
0x25f REVERT
---
0x25c: V213 = 0x0
0x25f: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, S15, 0x0, 0x0, 0x0, 0x0, V178, 0x2eb, V188, 0x860f5048, V203, 0x20, V206, V207, V206, 0x0, V188]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S15, 0x0, 0x0, 0x0, 0x0, V178, 0x2eb, V188, 0x860f5048, V203, 0x20, V206, V207, V206, 0x0, V188]

================================

Block 0x260
[0x260:0x26c]
---
Predecessors: [0x209, 0x32e, 0x4de, 0x54c, 0x7a4, 0x813]
Successors: [0x26d, 0x271]
---
0x260 JUMPDEST
0x261 PUSH2 0x2c6
0x264 GAS
0x265 SUB
0x266 CALL
0x267 ISZERO
0x268 ISZERO
0x269 PUSH2 0x271
0x26c JUMPI
---
0x260: JUMPDEST 
0x261: V214 = 0x2c6
0x264: V215 = GAS
0x265: V216 = SUB V215 0x2c6
0x266: V217 = CALL V216 S0 0x0 S2 S3 S4 0x20
0x267: V218 = ISZERO V217
0x268: V219 = ISZERO V218
0x269: V220 = 0x271
0x26c: JUMPI 0x271 V219
---
Entry stack: [V13, S17, S16, S15, S14, S13, S12, S11, S10, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865}, S8, 0x860f5048, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S17, S16, S15, S14, S13, S12, S11, S10, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865}, S8, 0x860f5048, S6]

================================

Block 0x26d
[0x26d:0x270]
---
Predecessors: [0x260]
Successors: []
---
0x26d PUSH1 0x0
0x26f DUP1
0x270 REVERT
---
0x26d: V221 = 0x0
0x270: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865}, S2, 0x860f5048, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865}, S2, 0x860f5048, S0]

================================

Block 0x271
[0x271:0x2bf]
---
Predecessors: [0x260]
Successors: [0x2c0, 0x2c4]
---
0x271 JUMPDEST
0x272 POP
0x273 POP
0x274 POP
0x275 PUSH1 0x40
0x277 MLOAD
0x278 DUP1
0x279 MLOAD
0x27a PUSH1 0x8
0x27c SLOAD
0x27d SWAP1
0x27e SWAP2
0x27f POP
0x280 PUSH1 0x1
0x282 PUSH1 0xa0
0x284 PUSH1 0x2
0x286 EXP
0x287 SUB
0x288 AND
0x289 PUSH4 0x18160ddd
0x28e PUSH1 0x0
0x290 PUSH1 0x40
0x292 MLOAD
0x293 PUSH1 0x20
0x295 ADD
0x296 MSTORE
0x297 PUSH1 0x40
0x299 MLOAD
0x29a DUP2
0x29b PUSH4 0xffffffff
0x2a0 AND
0x2a1 PUSH1 0xe0
0x2a3 PUSH1 0x2
0x2a5 EXP
0x2a6 MUL
0x2a7 DUP2
0x2a8 MSTORE
0x2a9 PUSH1 0x4
0x2ab ADD
0x2ac PUSH1 0x20
0x2ae PUSH1 0x40
0x2b0 MLOAD
0x2b1 DUP1
0x2b2 DUP4
0x2b3 SUB
0x2b4 DUP2
0x2b5 PUSH1 0x0
0x2b7 DUP8
0x2b8 DUP1
0x2b9 EXTCODESIZE
0x2ba ISZERO
0x2bb ISZERO
0x2bc PUSH2 0x2c4
0x2bf JUMPI
---
0x271: JUMPDEST 
0x275: V222 = 0x40
0x277: V223 = M[0x40]
0x279: V224 = M[V223]
0x27a: V225 = 0x8
0x27c: V226 = S[0x8]
0x280: V227 = 0x1
0x282: V228 = 0xa0
0x284: V229 = 0x2
0x286: V230 = EXP 0x2 0xa0
0x287: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x288: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x289: V233 = 0x18160ddd
0x28e: V234 = 0x0
0x290: V235 = 0x40
0x292: V236 = M[0x40]
0x293: V237 = 0x20
0x295: V238 = ADD 0x20 V236
0x296: M[V238] = 0x0
0x297: V239 = 0x40
0x299: V240 = M[0x40]
0x29b: V241 = 0xffffffff
0x2a0: V242 = AND 0xffffffff 0x18160ddd
0x2a1: V243 = 0xe0
0x2a3: V244 = 0x2
0x2a5: V245 = EXP 0x2 0xe0
0x2a6: V246 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0x2a8: M[V240] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x2a9: V247 = 0x4
0x2ab: V248 = ADD 0x4 V240
0x2ac: V249 = 0x20
0x2ae: V250 = 0x40
0x2b0: V251 = M[0x40]
0x2b3: V252 = SUB V248 V251
0x2b5: V253 = 0x0
0x2b9: V254 = EXTCODESIZE V232
0x2ba: V255 = ISZERO V254
0x2bb: V256 = ISZERO V255
0x2bc: V257 = 0x2c4
0x2bf: JUMPI 0x2c4 V256
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865}, S2, 0x860f5048, S0]
Stack pops: 3
Stack additions: [V224, V232, 0x18160ddd, V248, 0x20, V251, V252, V251, 0x0, V232]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865}, V224, V232, 0x18160ddd, V248, 0x20, V251, V252, V251, 0x0, V232]

================================

Block 0x2c0
[0x2c0:0x2c3]
---
Predecessors: [0x271]
Successors: []
---
0x2c0 PUSH1 0x0
0x2c2 DUP1
0x2c3 REVERT
---
0x2c0: V258 = 0x0
0x2c3: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, S16, S15, S14, S13, S12, S11, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865}, V224, V232, 0x18160ddd, V248, 0x20, V251, V252, V251, 0x0, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S16, S15, S14, S13, S12, S11, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865}, V224, V232, 0x18160ddd, V248, 0x20, V251, V252, V251, 0x0, V232]

================================

Block 0x2c4
[0x2c4:0x2d0]
---
Predecessors: [0x271]
Successors: [0x2d1, 0x2d5]
---
0x2c4 JUMPDEST
0x2c5 PUSH2 0x2c6
0x2c8 GAS
0x2c9 SUB
0x2ca CALL
0x2cb ISZERO
0x2cc ISZERO
0x2cd PUSH2 0x2d5
0x2d0 JUMPI
---
0x2c4: JUMPDEST 
0x2c5: V259 = 0x2c6
0x2c8: V260 = GAS
0x2c9: V261 = SUB V260 0x2c6
0x2ca: V262 = CALL V261 V232 0x0 V251 V252 V251 0x20
0x2cb: V263 = ISZERO V262
0x2cc: V264 = ISZERO V263
0x2cd: V265 = 0x2d5
0x2d0: JUMPI 0x2d5 V264
---
Entry stack: [V13, 0xbf, S16, S15, S14, S13, S12, S11, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865}, V224, V232, 0x18160ddd, V248, 0x20, V251, V252, V251, 0x0, V232]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xbf, S16, S15, S14, S13, S12, S11, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865}, V224, V232, 0x18160ddd, V248]

================================

Block 0x2d1
[0x2d1:0x2d4]
---
Predecessors: [0x2c4]
Successors: []
---
0x2d1 PUSH1 0x0
0x2d3 DUP1
0x2d4 REVERT
---
0x2d1: V266 = 0x0
0x2d4: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, S10, S9, S8, S7, S6, S5, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865}, S3, S2, 0x18160ddd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S10, S9, S8, S7, S6, S5, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865}, S3, S2, 0x18160ddd, S0]

================================

Block 0x2d5
[0x2d5:0x2ea]
---
Predecessors: [0x2c4]
Successors: [0xb2f]
---
0x2d5 JUMPDEST
0x2d6 POP
0x2d7 POP
0x2d8 POP
0x2d9 PUSH1 0x40
0x2db MLOAD
0x2dc DUP1
0x2dd MLOAD
0x2de SWAP2
0x2df SWAP1
0x2e0 POP
0x2e1 PUSH4 0xffffffff
0x2e6 PUSH2 0xb2f
0x2e9 AND
0x2ea JUMP
---
0x2d5: JUMPDEST 
0x2d9: V267 = 0x40
0x2db: V268 = M[0x40]
0x2dd: V269 = M[V268]
0x2e1: V270 = 0xffffffff
0x2e6: V271 = 0xb2f
0x2e9: V272 = AND 0xb2f 0xffffffff
0x2ea: JUMP 0xb2f
---
Entry stack: [V13, 0xbf, S10, S9, S8, S7, S6, S5, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865}, S3, S2, 0x18160ddd, S0]
Stack pops: 4
Stack additions: [V269, S3]
Exit stack: [V13, 0xbf, S10, S9, S8, S7, S6, S5, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865}, V269, S3]

================================

Block 0x2eb
[0x2eb:0x2f4]
---
Predecessors: [0xb3b]
Successors: [0x2f5, 0x2f9]
---
0x2eb JUMPDEST
0x2ec GT
0x2ed ISZERO
0x2ee SWAP1
0x2ef POP
0x2f0 DUP1
0x2f1 PUSH2 0x2f9
0x2f4 JUMPI
---
0x2eb: JUMPDEST 
0x2ec: V273 = GT V1148 S1
0x2ed: V274 = ISZERO V273
0x2f1: V275 = 0x2f9
0x2f4: JUMPI 0x2f9 V274
---
Entry stack: [V13, 0xbf, S6, S5, S4, S3, S2, S1, V1148]
Stack pops: 3
Stack additions: [V274]
Exit stack: [V13, 0xbf, S6, S5, S4, S3, V274]

================================

Block 0x2f5
[0x2f5:0x2f8]
---
Predecessors: [0x2eb]
Successors: []
---
0x2f5 PUSH1 0x0
0x2f7 DUP1
0x2f8 REVERT
---
0x2f5: V276 = 0x0
0x2f8: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, S4, S3, S2, S1, V274]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S4, S3, S2, S1, V274]

================================

Block 0x2f9
[0x2f9:0x305]
---
Predecessors: [0x2eb]
Successors: [0x306, 0x30d]
---
0x2f9 JUMPDEST
0x2fa PUSH1 0x5
0x2fc SLOAD
0x2fd TIMESTAMP
0x2fe LT
0x2ff ISZERO
0x300 DUP1
0x301 ISZERO
0x302 PUSH2 0x30d
0x305 JUMPI
---
0x2f9: JUMPDEST 
0x2fa: V277 = 0x5
0x2fc: V278 = S[0x5]
0x2fd: V279 = TIMESTAMP
0x2fe: V280 = LT V279 V278
0x2ff: V281 = ISZERO V280
0x301: V282 = ISZERO V281
0x302: V283 = 0x30d
0x305: JUMPI 0x30d V282
---
Entry stack: [V13, 0xbf, S4, S3, S2, S1, V274]
Stack pops: 0
Stack additions: [V281]
Exit stack: [V13, 0xbf, S4, S3, S2, S1, V274, V281]

================================

Block 0x306
[0x306:0x30c]
---
Predecessors: [0x2f9]
Successors: [0x30d]
---
0x306 POP
0x307 PUSH1 0x6
0x309 SLOAD
0x30a TIMESTAMP
0x30b GT
0x30c ISZERO
---
0x307: V284 = 0x6
0x309: V285 = S[0x6]
0x30a: V286 = TIMESTAMP
0x30b: V287 = GT V286 V285
0x30c: V288 = ISZERO V287
---
Entry stack: [V13, 0xbf, S5, S4, S3, S2, V274, V281]
Stack pops: 1
Stack additions: [V288]
Exit stack: [V13, 0xbf, S5, S4, S3, S2, V274, V288]

================================

Block 0x30d
[0x30d:0x313]
---
Predecessors: [0x2f9, 0x306]
Successors: [0x314, 0x318]
---
0x30d JUMPDEST
0x30e ISZERO
0x30f ISZERO
0x310 PUSH2 0x318
0x313 JUMPI
---
0x30d: JUMPDEST 
0x30e: V289 = ISZERO S0
0x30f: V290 = ISZERO V289
0x310: V291 = 0x318
0x313: JUMPI 0x318 V290
---
Entry stack: [V13, 0xbf, S5, S4, S3, S2, V274, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xbf, S5, S4, S3, S2, V274]

================================

Block 0x314
[0x314:0x317]
---
Predecessors: [0x30d]
Successors: []
---
0x314 PUSH1 0x0
0x316 DUP1
0x317 REVERT
---
0x314: V292 = 0x0
0x317: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, S4, S3, S2, S1, V274]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S4, S3, S2, S1, V274]

================================

Block 0x318
[0x318:0x32d]
---
Predecessors: [0x30d]
Successors: [0xb41]
---
0x318 JUMPDEST
0x319 PUSH1 0x4
0x31b SLOAD
0x31c CALLVALUE
0x31d SWAP5
0x31e POP
0x31f PUSH2 0x32e
0x322 SWAP1
0x323 DUP6
0x324 PUSH4 0xffffffff
0x329 PUSH2 0xb41
0x32c AND
0x32d JUMP
---
0x318: JUMPDEST 
0x319: V293 = 0x4
0x31b: V294 = S[0x4]
0x31c: V295 = CALLVALUE
0x31f: V296 = 0x32e
0x324: V297 = 0xffffffff
0x329: V298 = 0xb41
0x32c: V299 = AND 0xb41 0xffffffff
0x32d: JUMP 0xb41
---
Entry stack: [V13, 0xbf, S4, S3, S2, S1, V274]
Stack pops: 4
Stack additions: [V295, S2, S1, S0, 0x32e, V294, V295]
Exit stack: [V13, 0xbf, S4, V295, S2, S1, V274, 0x32e, V294, V295]

================================

Block 0x32e
[0x32e:0x37f]
---
Predecessors: [0xb65]
Successors: [0x260, 0x380]
---
0x32e JUMPDEST
0x32f PUSH1 0x3
0x331 SLOAD
0x332 PUSH1 0x8
0x334 SLOAD
0x335 SWAP2
0x336 SWAP5
0x337 POP
0x338 PUSH1 0x0
0x33a SWAP4
0x33b POP
0x33c SWAP1
0x33d PUSH2 0x384
0x340 SWAP1
0x341 PUSH1 0x1
0x343 PUSH1 0xa0
0x345 PUSH1 0x2
0x347 EXP
0x348 SUB
0x349 AND
0x34a PUSH4 0x860f5048
0x34f DUP6
0x350 PUSH1 0x40
0x352 MLOAD
0x353 PUSH1 0x20
0x355 ADD
0x356 MSTORE
0x357 PUSH1 0x40
0x359 MLOAD
0x35a DUP2
0x35b PUSH4 0xffffffff
0x360 AND
0x361 PUSH1 0xe0
0x363 PUSH1 0x2
0x365 EXP
0x366 MUL
0x367 DUP2
0x368 MSTORE
0x369 PUSH1 0x4
0x36b ADD
0x36c PUSH1 0x20
0x36e PUSH1 0x40
0x370 MLOAD
0x371 DUP1
0x372 DUP4
0x373 SUB
0x374 DUP2
0x375 PUSH1 0x0
0x377 DUP8
0x378 DUP1
0x379 EXTCODESIZE
0x37a ISZERO
0x37b ISZERO
0x37c PUSH2 0x260
0x37f JUMPI
---
0x32e: JUMPDEST 
0x32f: V300 = 0x3
0x331: V301 = S[0x3]
0x332: V302 = 0x8
0x334: V303 = S[0x8]
0x338: V304 = 0x0
0x33d: V305 = 0x384
0x341: V306 = 0x1
0x343: V307 = 0xa0
0x345: V308 = 0x2
0x347: V309 = EXP 0x2 0xa0
0x348: V310 = SUB 0x10000000000000000000000000000000000000000 0x1
0x349: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x34a: V312 = 0x860f5048
0x350: V313 = 0x40
0x352: V314 = M[0x40]
0x353: V315 = 0x20
0x355: V316 = ADD 0x20 V314
0x356: M[V316] = 0x0
0x357: V317 = 0x40
0x359: V318 = M[0x40]
0x35b: V319 = 0xffffffff
0x360: V320 = AND 0xffffffff 0x860f5048
0x361: V321 = 0xe0
0x363: V322 = 0x2
0x365: V323 = EXP 0x2 0xe0
0x366: V324 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x860f5048
0x368: M[V318] = 0x860f504800000000000000000000000000000000000000000000000000000000
0x369: V325 = 0x4
0x36b: V326 = ADD 0x4 V318
0x36c: V327 = 0x20
0x36e: V328 = 0x40
0x370: V329 = M[0x40]
0x373: V330 = SUB V326 V329
0x375: V331 = 0x0
0x379: V332 = EXTCODESIZE V311
0x37a: V333 = ISZERO V332
0x37b: V334 = ISZERO V333
0x37c: V335 = 0x260
0x37f: JUMPI 0x260 V334
---
Entry stack: [V13, 0xbf, S5, V295, S3, {0x0, 0x1}, V274, S0]
Stack pops: 4
Stack additions: [S0, 0x0, S1, V301, 0x384, V311, 0x860f5048, V326, 0x20, V329, V330, V329, 0x0, V311]
Exit stack: [V13, 0xbf, S5, V295, S0, 0x0, V274, V301, 0x384, V311, 0x860f5048, V326, 0x20, V329, V330, V329, 0x0, V311]

================================

Block 0x380
[0x380:0x383]
---
Predecessors: [0x32e]
Successors: []
---
0x380 PUSH1 0x0
0x382 DUP1
0x383 REVERT
---
0x380: V336 = 0x0
0x383: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, S15, V295, S13, 0x0, V274, V301, 0x384, V311, 0x860f5048, V326, 0x20, V329, V330, V329, 0x0, V311]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S15, V295, S13, 0x0, V274, V301, 0x384, V311, 0x860f5048, V326, 0x20, V329, V330, V329, 0x0, V311]

================================

Block 0x384
[0x384:0x38a]
---
Predecessors: [0xb3b]
Successors: [0x38b, 0x3b2]
---
0x384 JUMPDEST
0x385 LT
0x386 ISZERO
0x387 PUSH2 0x3b2
0x38a JUMPI
---
0x384: JUMPDEST 
0x385: V337 = LT V1148 S1
0x386: V338 = ISZERO V337
0x387: V339 = 0x3b2
0x38a: JUMPI 0x3b2 V338
---
Entry stack: [V13, 0xbf, S6, S5, S4, S3, S2, S1, V1148]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xbf, S6, S5, S4, S3, S2]

================================

Block 0x38b
[0x38b:0x3a1]
---
Predecessors: [0x384]
Successors: [0xb6c]
---
0x38b PUSH1 0x1
0x38d SWAP2
0x38e POP
0x38f PUSH2 0x3af
0x392 PUSH2 0x3a2
0x395 DUP5
0x396 PUSH1 0x5
0x398 PUSH4 0xffffffff
0x39d PUSH2 0xb6c
0x3a0 AND
0x3a1 JUMP
---
0x38b: V340 = 0x1
0x38f: V341 = 0x3af
0x392: V342 = 0x3a2
0x396: V343 = 0x5
0x398: V344 = 0xffffffff
0x39d: V345 = 0xb6c
0x3a0: V346 = AND 0xb6c 0xffffffff
0x3a1: JUMP 0xb6c
---
Entry stack: [V13, 0xbf, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, 0x1, S0, 0x3af, 0x3a2, S2, 0x5]
Exit stack: [V13, 0xbf, S4, S3, S2, 0x1, S0, 0x3af, 0x3a2, S2, 0x5]

================================

Block 0x3a2
[0x3a2:0x3ae]
---
Predecessors: [0xb83]
Successors: [0xb8c]
---
0x3a2 JUMPDEST
0x3a3 DUP5
0x3a4 SWAP1
0x3a5 PUSH4 0xffffffff
0x3aa PUSH2 0xb8c
0x3ad AND
0x3ae JUMP
---
0x3a2: JUMPDEST 
0x3a5: V347 = 0xffffffff
0x3aa: V348 = 0xb8c
0x3ad: V349 = AND 0xb8c 0xffffffff
0x3ae: JUMP 0xb8c
---
Entry stack: [V13, 0xbf, S6, S5, S4, 0x1, S2, 0x3af, V1167]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S4, S0]
Exit stack: [V13, 0xbf, S6, S5, S4, 0x1, S2, 0x3af, S4, V1167]

================================

Block 0x3af
[0x3af:0x3b1]
---
Predecessors: [0xb65]
Successors: [0x3b2]
---
0x3af JUMPDEST
0x3b0 SWAP3
0x3b1 POP
---
0x3af: JUMPDEST 
---
Entry stack: [V13, 0xbf, S5, V295, S3, {0x0, 0x1}, V274, S0]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [V13, 0xbf, S5, V295, S0, {0x0, 0x1}, V274]

================================

Block 0x3b2
[0x3b2:0x3da]
---
Predecessors: [0x384, 0x3af]
Successors: [0xb8c]
---
0x3b2 JUMPDEST
0x3b3 PUSH1 0x1
0x3b5 PUSH1 0xa0
0x3b7 PUSH1 0x2
0x3b9 EXP
0x3ba SUB
0x3bb CALLER
0x3bc AND
0x3bd PUSH1 0x0
0x3bf SWAP1
0x3c0 DUP2
0x3c1 MSTORE
0x3c2 PUSH1 0xa
0x3c4 PUSH1 0x20
0x3c6 MSTORE
0x3c7 PUSH1 0x40
0x3c9 SWAP1
0x3ca SHA3
0x3cb SLOAD
0x3cc PUSH2 0x3db
0x3cf SWAP1
0x3d0 CALLVALUE
0x3d1 PUSH4 0xffffffff
0x3d6 PUSH2 0xb8c
0x3d9 AND
0x3da JUMP
---
0x3b2: JUMPDEST 
0x3b3: V350 = 0x1
0x3b5: V351 = 0xa0
0x3b7: V352 = 0x2
0x3b9: V353 = EXP 0x2 0xa0
0x3ba: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bb: V355 = CALLER
0x3bc: V356 = AND V355 0xffffffffffffffffffffffffffffffffffffffff
0x3bd: V357 = 0x0
0x3c1: M[0x0] = V356
0x3c2: V358 = 0xa
0x3c4: V359 = 0x20
0x3c6: M[0x20] = 0xa
0x3c7: V360 = 0x40
0x3ca: V361 = SHA3 0x0 0x40
0x3cb: V362 = S[V361]
0x3cc: V363 = 0x3db
0x3d0: V364 = CALLVALUE
0x3d1: V365 = 0xffffffff
0x3d6: V366 = 0xb8c
0x3d9: V367 = AND 0xb8c 0xffffffff
0x3da: JUMP 0xb8c
---
Entry stack: [V13, 0xbf, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x3db, V362, V364]
Exit stack: [V13, 0xbf, S4, S3, S2, S1, S0, 0x3db, V362, V364]

================================

Block 0x3db
[0x3db:0x44e]
---
Predecessors: [0xb65]
Successors: [0x44f, 0x453]
---
0x3db JUMPDEST
0x3dc PUSH1 0x1
0x3de PUSH1 0xa0
0x3e0 PUSH1 0x2
0x3e2 EXP
0x3e3 SUB
0x3e4 CALLER
0x3e5 DUP2
0x3e6 AND
0x3e7 PUSH1 0x0
0x3e9 SWAP1
0x3ea DUP2
0x3eb MSTORE
0x3ec PUSH1 0xa
0x3ee PUSH1 0x20
0x3f0 MSTORE
0x3f1 PUSH1 0x40
0x3f3 DUP1
0x3f4 DUP3
0x3f5 SHA3
0x3f6 SWAP4
0x3f7 SWAP1
0x3f8 SWAP4
0x3f9 SSTORE
0x3fa PUSH1 0x8
0x3fc SLOAD
0x3fd SWAP1
0x3fe SWAP2
0x3ff AND
0x400 SWAP2
0x401 PUSH4 0x40c10f19
0x406 SWAP2
0x407 DUP9
0x408 SWAP2
0x409 DUP8
0x40a SWAP2
0x40b SWAP1
0x40c MLOAD
0x40d PUSH1 0x20
0x40f ADD
0x410 MSTORE
0x411 PUSH1 0x40
0x413 MLOAD
0x414 PUSH1 0xe0
0x416 PUSH1 0x2
0x418 EXP
0x419 PUSH4 0xffffffff
0x41e DUP6
0x41f AND
0x420 MUL
0x421 DUP2
0x422 MSTORE
0x423 PUSH1 0x1
0x425 PUSH1 0xa0
0x427 PUSH1 0x2
0x429 EXP
0x42a SUB
0x42b SWAP1
0x42c SWAP3
0x42d AND
0x42e PUSH1 0x4
0x430 DUP4
0x431 ADD
0x432 MSTORE
0x433 PUSH1 0x24
0x435 DUP3
0x436 ADD
0x437 MSTORE
0x438 PUSH1 0x44
0x43a ADD
0x43b PUSH1 0x20
0x43d PUSH1 0x40
0x43f MLOAD
0x440 DUP1
0x441 DUP4
0x442 SUB
0x443 DUP2
0x444 PUSH1 0x0
0x446 DUP8
0x447 DUP1
0x448 EXTCODESIZE
0x449 ISZERO
0x44a ISZERO
0x44b PUSH2 0x453
0x44e JUMPI
---
0x3db: JUMPDEST 
0x3dc: V368 = 0x1
0x3de: V369 = 0xa0
0x3e0: V370 = 0x2
0x3e2: V371 = EXP 0x2 0xa0
0x3e3: V372 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e4: V373 = CALLER
0x3e6: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x3e7: V375 = 0x0
0x3eb: M[0x0] = V374
0x3ec: V376 = 0xa
0x3ee: V377 = 0x20
0x3f0: M[0x20] = 0xa
0x3f1: V378 = 0x40
0x3f5: V379 = SHA3 0x0 0x40
0x3f9: S[V379] = S0
0x3fa: V380 = 0x8
0x3fc: V381 = S[0x8]
0x3ff: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x401: V383 = 0x40c10f19
0x40c: V384 = M[0x40]
0x40d: V385 = 0x20
0x40f: V386 = ADD 0x20 V384
0x410: M[V386] = 0x0
0x411: V387 = 0x40
0x413: V388 = M[0x40]
0x414: V389 = 0xe0
0x416: V390 = 0x2
0x418: V391 = EXP 0x2 0xe0
0x419: V392 = 0xffffffff
0x41f: V393 = AND 0x40c10f19 0xffffffff
0x420: V394 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x422: M[V388] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x423: V395 = 0x1
0x425: V396 = 0xa0
0x427: V397 = 0x2
0x429: V398 = EXP 0x2 0xa0
0x42a: V399 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42d: V400 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x42e: V401 = 0x4
0x431: V402 = ADD V388 0x4
0x432: M[V402] = V400
0x433: V403 = 0x24
0x436: V404 = ADD V388 0x24
0x437: M[V404] = S3
0x438: V405 = 0x44
0x43a: V406 = ADD 0x44 V388
0x43b: V407 = 0x20
0x43d: V408 = 0x40
0x43f: V409 = M[0x40]
0x442: V410 = SUB V406 V409
0x444: V411 = 0x0
0x448: V412 = EXTCODESIZE V382
0x449: V413 = ISZERO V412
0x44a: V414 = ISZERO V413
0x44b: V415 = 0x453
0x44e: JUMPI 0x453 V414
---
Entry stack: [V13, 0xbf, S5, V295, S3, {0x0, 0x1}, V274, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V382, 0x40c10f19, V406, 0x20, V409, V410, V409, 0x0, V382]
Exit stack: [V13, 0xbf, S5, V295, S3, {0x0, 0x1}, V274, V382, 0x40c10f19, V406, 0x20, V409, V410, V409, 0x0, V382]

================================

Block 0x44f
[0x44f:0x452]
---
Predecessors: [0x3db]
Successors: []
---
0x44f PUSH1 0x0
0x451 DUP1
0x452 REVERT
---
0x44f: V416 = 0x0
0x452: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, S13, V295, S11, {0x0, 0x1}, V274, V382, 0x40c10f19, V406, 0x20, V409, V410, V409, 0x0, V382]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S13, V295, S11, {0x0, 0x1}, V274, V382, 0x40c10f19, V406, 0x20, V409, V410, V409, 0x0, V382]

================================

Block 0x453
[0x453:0x45f]
---
Predecessors: [0x3db]
Successors: [0x460, 0x464]
---
0x453 JUMPDEST
0x454 PUSH2 0x2c6
0x457 GAS
0x458 SUB
0x459 CALL
0x45a ISZERO
0x45b ISZERO
0x45c PUSH2 0x464
0x45f JUMPI
---
0x453: JUMPDEST 
0x454: V417 = 0x2c6
0x457: V418 = GAS
0x458: V419 = SUB V418 0x2c6
0x459: V420 = CALL V419 V382 0x0 V409 V410 V409 0x20
0x45a: V421 = ISZERO V420
0x45b: V422 = ISZERO V421
0x45c: V423 = 0x464
0x45f: JUMPI 0x464 V422
---
Entry stack: [V13, 0xbf, S13, V295, S11, {0x0, 0x1}, V274, V382, 0x40c10f19, V406, 0x20, V409, V410, V409, 0x0, V382]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xbf, S13, V295, S11, {0x0, 0x1}, V274, V382, 0x40c10f19, V406]

================================

Block 0x460
[0x460:0x463]
---
Predecessors: [0x453]
Successors: []
---
0x460 PUSH1 0x0
0x462 DUP1
0x463 REVERT
---
0x460: V424 = 0x0
0x463: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, S7, V295, S5, {0x0, 0x1}, V274, S2, 0x40c10f19, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S7, V295, S5, {0x0, 0x1}, V274, S2, 0x40c10f19, S0]

================================

Block 0x464
[0x464:0x4cf]
---
Predecessors: [0x453]
Successors: [0xbf]
---
0x464 JUMPDEST
0x465 POP
0x466 POP
0x467 POP
0x468 PUSH1 0x40
0x46a MLOAD
0x46b DUP1
0x46c MLOAD
0x46d SWAP1
0x46e POP
0x46f POP
0x470 PUSH32 0x6fd9227efb406575ac675c8524b7e4bbdf5f627fabce44a9ebd0b4bcefa08197
0x491 DUP6
0x492 DUP6
0x493 DUP6
0x494 DUP6
0x495 PUSH1 0x40
0x497 MLOAD
0x498 PUSH1 0x1
0x49a PUSH1 0xa0
0x49c PUSH1 0x2
0x49e EXP
0x49f SUB
0x4a0 SWAP1
0x4a1 SWAP5
0x4a2 AND
0x4a3 DUP5
0x4a4 MSTORE
0x4a5 PUSH1 0x20
0x4a7 DUP5
0x4a8 ADD
0x4a9 SWAP3
0x4aa SWAP1
0x4ab SWAP3
0x4ac MSTORE
0x4ad PUSH1 0x40
0x4af DUP1
0x4b0 DUP5
0x4b1 ADD
0x4b2 SWAP2
0x4b3 SWAP1
0x4b4 SWAP2
0x4b5 MSTORE
0x4b6 SWAP1
0x4b7 ISZERO
0x4b8 ISZERO
0x4b9 PUSH1 0x60
0x4bb DUP4
0x4bc ADD
0x4bd MSTORE
0x4be PUSH1 0x80
0x4c0 SWAP1
0x4c1 SWAP2
0x4c2 ADD
0x4c3 SWAP1
0x4c4 MLOAD
0x4c5 DUP1
0x4c6 SWAP2
0x4c7 SUB
0x4c8 SWAP1
0x4c9 LOG1
0x4ca POP
0x4cb POP
0x4cc POP
0x4cd POP
0x4ce POP
0x4cf JUMP
---
0x464: JUMPDEST 
0x468: V425 = 0x40
0x46a: V426 = M[0x40]
0x46c: V427 = M[V426]
0x470: V428 = 0x6fd9227efb406575ac675c8524b7e4bbdf5f627fabce44a9ebd0b4bcefa08197
0x495: V429 = 0x40
0x497: V430 = M[0x40]
0x498: V431 = 0x1
0x49a: V432 = 0xa0
0x49c: V433 = 0x2
0x49e: V434 = EXP 0x2 0xa0
0x49f: V435 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a2: V436 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0x4a4: M[V430] = V436
0x4a5: V437 = 0x20
0x4a8: V438 = ADD V430 0x20
0x4ac: M[V438] = V295
0x4ad: V439 = 0x40
0x4b1: V440 = ADD V430 0x40
0x4b5: M[V440] = S5
0x4b7: V441 = ISZERO {0x0, 0x1}
0x4b8: V442 = ISZERO V441
0x4b9: V443 = 0x60
0x4bc: V444 = ADD V430 0x60
0x4bd: M[V444] = V442
0x4be: V445 = 0x80
0x4c2: V446 = ADD V430 0x80
0x4c4: V447 = M[0x40]
0x4c7: V448 = SUB V446 V447
0x4c9: LOG V447 V448 0x6fd9227efb406575ac675c8524b7e4bbdf5f627fabce44a9ebd0b4bcefa08197
0x4cf: JUMP 0xbf
---
Entry stack: [V13, 0xbf, S7, V295, S5, {0x0, 0x1}, V274, S2, 0x40c10f19, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V13]

================================

Block 0x4d0
[0x4d0:0x4dd]
---
Predecessors: [0xcc]
Successors: [0xd4]
---
0x4d0 JUMPDEST
0x4d1 PUSH1 0x1
0x4d3 PUSH1 0xa0
0x4d5 PUSH1 0x2
0x4d7 EXP
0x4d8 SUB
0x4d9 ADDRESS
0x4da AND
0x4db BALANCE
0x4dc SWAP1
0x4dd JUMP
---
0x4d0: JUMPDEST 
0x4d1: V449 = 0x1
0x4d3: V450 = 0xa0
0x4d5: V451 = 0x2
0x4d7: V452 = EXP 0x2 0xa0
0x4d8: V453 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d9: V454 = ADDRESS
0x4da: V455 = AND V454 0xffffffffffffffffffffffffffffffffffffffff
0x4db: V456 = BALANCE V455
0x4dd: JUMP 0xd4
---
Entry stack: [V13, 0xd4]
Stack pops: 1
Stack additions: [V456]
Exit stack: [V13, V456]

================================

Block 0x4de
[0x4de:0x52b]
---
Predecessors: [0xf1]
Successors: [0x260, 0x52c]
---
0x4de JUMPDEST
0x4df PUSH1 0x1
0x4e1 SLOAD
0x4e2 PUSH1 0x8
0x4e4 SLOAD
0x4e5 PUSH1 0x0
0x4e7 SWAP2
0x4e8 SWAP1
0x4e9 PUSH2 0x530
0x4ec SWAP1
0x4ed PUSH1 0x1
0x4ef PUSH1 0xa0
0x4f1 PUSH1 0x2
0x4f3 EXP
0x4f4 SUB
0x4f5 AND
0x4f6 PUSH4 0x860f5048
0x4fb DUP5
0x4fc PUSH1 0x40
0x4fe MLOAD
0x4ff PUSH1 0x20
0x501 ADD
0x502 MSTORE
0x503 PUSH1 0x40
0x505 MLOAD
0x506 DUP2
0x507 PUSH4 0xffffffff
0x50c AND
0x50d PUSH1 0xe0
0x50f PUSH1 0x2
0x511 EXP
0x512 MUL
0x513 DUP2
0x514 MSTORE
0x515 PUSH1 0x4
0x517 ADD
0x518 PUSH1 0x20
0x51a PUSH1 0x40
0x51c MLOAD
0x51d DUP1
0x51e DUP4
0x51f SUB
0x520 DUP2
0x521 PUSH1 0x0
0x523 DUP8
0x524 DUP1
0x525 EXTCODESIZE
0x526 ISZERO
0x527 ISZERO
0x528 PUSH2 0x260
0x52b JUMPI
---
0x4de: JUMPDEST 
0x4df: V457 = 0x1
0x4e1: V458 = S[0x1]
0x4e2: V459 = 0x8
0x4e4: V460 = S[0x8]
0x4e5: V461 = 0x0
0x4e9: V462 = 0x530
0x4ed: V463 = 0x1
0x4ef: V464 = 0xa0
0x4f1: V465 = 0x2
0x4f3: V466 = EXP 0x2 0xa0
0x4f4: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f5: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x4f6: V469 = 0x860f5048
0x4fc: V470 = 0x40
0x4fe: V471 = M[0x40]
0x4ff: V472 = 0x20
0x501: V473 = ADD 0x20 V471
0x502: M[V473] = 0x0
0x503: V474 = 0x40
0x505: V475 = M[0x40]
0x507: V476 = 0xffffffff
0x50c: V477 = AND 0xffffffff 0x860f5048
0x50d: V478 = 0xe0
0x50f: V479 = 0x2
0x511: V480 = EXP 0x2 0xe0
0x512: V481 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x860f5048
0x514: M[V475] = 0x860f504800000000000000000000000000000000000000000000000000000000
0x515: V482 = 0x4
0x517: V483 = ADD 0x4 V475
0x518: V484 = 0x20
0x51a: V485 = 0x40
0x51c: V486 = M[0x40]
0x51f: V487 = SUB V483 V486
0x521: V488 = 0x0
0x525: V489 = EXTCODESIZE V468
0x526: V490 = ISZERO V489
0x527: V491 = ISZERO V490
0x528: V492 = 0x260
0x52b: JUMPI 0x260 V491
---
Entry stack: [V13, 0xbf]
Stack pops: 0
Stack additions: [0x0, V458, 0x530, V468, 0x860f5048, V483, 0x20, V486, V487, V486, 0x0, V468]
Exit stack: [V13, 0xbf, 0x0, V458, 0x530, V468, 0x860f5048, V483, 0x20, V486, V487, V486, 0x0, V468]

================================

Block 0x52c
[0x52c:0x52f]
---
Predecessors: [0x4de]
Successors: []
---
0x52c PUSH1 0x0
0x52e DUP1
0x52f REVERT
---
0x52c: V493 = 0x0
0x52f: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, 0x0, V458, 0x530, V468, 0x860f5048, V483, 0x20, V486, V487, V486, 0x0, V468]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, 0x0, V458, 0x530, V468, 0x860f5048, V483, 0x20, V486, V487, V486, 0x0, V468]

================================

Block 0x530
[0x530:0x53e]
---
Predecessors: [0xb3b]
Successors: [0x53f, 0x541]
---
0x530 JUMPDEST
0x531 LT
0x532 ISZERO
0x533 SWAP1
0x534 POP
0x535 PUSH1 0x6
0x537 SLOAD
0x538 TIMESTAMP
0x539 GT
0x53a DUP1
0x53b PUSH2 0x541
0x53e JUMPI
---
0x530: JUMPDEST 
0x531: V494 = LT V1148 S1
0x532: V495 = ISZERO V494
0x535: V496 = 0x6
0x537: V497 = S[0x6]
0x538: V498 = TIMESTAMP
0x539: V499 = GT V498 V497
0x53b: V500 = 0x541
0x53e: JUMPI 0x541 V499
---
Entry stack: [V13, 0xbf, S6, S5, S4, S3, S2, S1, V1148]
Stack pops: 3
Stack additions: [V495, V499]
Exit stack: [V13, 0xbf, S6, S5, S4, S3, V495, V499]

================================

Block 0x53f
[0x53f:0x540]
---
Predecessors: [0x530]
Successors: [0x541]
---
0x53f POP
0x540 DUP1
---
0x53f: NOP 
---
Entry stack: [V13, 0xbf, S5, S4, S3, S2, V495, V499]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V13, 0xbf, S5, S4, S3, S2, V495, V495]

================================

Block 0x541
[0x541:0x547]
---
Predecessors: [0x530, 0x53f]
Successors: [0x548, 0x54c]
---
0x541 JUMPDEST
0x542 ISZERO
0x543 ISZERO
0x544 PUSH2 0x54c
0x547 JUMPI
---
0x541: JUMPDEST 
0x542: V501 = ISZERO S0
0x543: V502 = ISZERO V501
0x544: V503 = 0x54c
0x547: JUMPI 0x54c V502
---
Entry stack: [V13, 0xbf, S5, S4, S3, S2, V495, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xbf, S5, S4, S3, S2, V495]

================================

Block 0x548
[0x548:0x54b]
---
Predecessors: [0x541]
Successors: []
---
0x548 PUSH1 0x0
0x54a DUP1
0x54b REVERT
---
0x548: V504 = 0x0
0x54b: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, S4, S3, S2, S1, V495]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S4, S3, S2, S1, V495]

================================

Block 0x54c
[0x54c:0x599]
---
Predecessors: [0x541]
Successors: [0x260, 0x59a]
---
0x54c JUMPDEST
0x54d PUSH1 0x2
0x54f SLOAD
0x550 PUSH1 0x8
0x552 SLOAD
0x553 PUSH1 0x0
0x555 SWAP2
0x556 SWAP1
0x557 PUSH2 0x59e
0x55a SWAP1
0x55b PUSH1 0x1
0x55d PUSH1 0xa0
0x55f PUSH1 0x2
0x561 EXP
0x562 SUB
0x563 AND
0x564 PUSH4 0x860f5048
0x569 DUP5
0x56a PUSH1 0x40
0x56c MLOAD
0x56d PUSH1 0x20
0x56f ADD
0x570 MSTORE
0x571 PUSH1 0x40
0x573 MLOAD
0x574 DUP2
0x575 PUSH4 0xffffffff
0x57a AND
0x57b PUSH1 0xe0
0x57d PUSH1 0x2
0x57f EXP
0x580 MUL
0x581 DUP2
0x582 MSTORE
0x583 PUSH1 0x4
0x585 ADD
0x586 PUSH1 0x20
0x588 PUSH1 0x40
0x58a MLOAD
0x58b DUP1
0x58c DUP4
0x58d SUB
0x58e DUP2
0x58f PUSH1 0x0
0x591 DUP8
0x592 DUP1
0x593 EXTCODESIZE
0x594 ISZERO
0x595 ISZERO
0x596 PUSH2 0x260
0x599 JUMPI
---
0x54c: JUMPDEST 
0x54d: V505 = 0x2
0x54f: V506 = S[0x2]
0x550: V507 = 0x8
0x552: V508 = S[0x8]
0x553: V509 = 0x0
0x557: V510 = 0x59e
0x55b: V511 = 0x1
0x55d: V512 = 0xa0
0x55f: V513 = 0x2
0x561: V514 = EXP 0x2 0xa0
0x562: V515 = SUB 0x10000000000000000000000000000000000000000 0x1
0x563: V516 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x564: V517 = 0x860f5048
0x56a: V518 = 0x40
0x56c: V519 = M[0x40]
0x56d: V520 = 0x20
0x56f: V521 = ADD 0x20 V519
0x570: M[V521] = 0x0
0x571: V522 = 0x40
0x573: V523 = M[0x40]
0x575: V524 = 0xffffffff
0x57a: V525 = AND 0xffffffff 0x860f5048
0x57b: V526 = 0xe0
0x57d: V527 = 0x2
0x57f: V528 = EXP 0x2 0xe0
0x580: V529 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x860f5048
0x582: M[V523] = 0x860f504800000000000000000000000000000000000000000000000000000000
0x583: V530 = 0x4
0x585: V531 = ADD 0x4 V523
0x586: V532 = 0x20
0x588: V533 = 0x40
0x58a: V534 = M[0x40]
0x58d: V535 = SUB V531 V534
0x58f: V536 = 0x0
0x593: V537 = EXTCODESIZE V516
0x594: V538 = ISZERO V537
0x595: V539 = ISZERO V538
0x596: V540 = 0x260
0x599: JUMPI 0x260 V539
---
Entry stack: [V13, 0xbf, S4, S3, S2, S1, V495]
Stack pops: 0
Stack additions: [0x0, V506, 0x59e, V516, 0x860f5048, V531, 0x20, V534, V535, V534, 0x0, V516]
Exit stack: [V13, 0xbf, S4, S3, S2, S1, V495, 0x0, V506, 0x59e, V516, 0x860f5048, V531, 0x20, V534, V535, V534, 0x0, V516]

================================

Block 0x59a
[0x59a:0x59d]
---
Predecessors: [0x54c]
Successors: []
---
0x59a PUSH1 0x0
0x59c DUP1
0x59d REVERT
---
0x59a: V541 = 0x0
0x59d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, S16, S15, S14, S13, V495, 0x0, V506, 0x59e, V516, 0x860f5048, V531, 0x20, V534, V535, V534, 0x0, V516]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S16, S15, S14, S13, V495, 0x0, V506, 0x59e, V516, 0x860f5048, V531, 0x20, V534, V535, V534, 0x0, V516]

================================

Block 0x59e
[0x59e:0x5a7]
---
Predecessors: [0xb3b]
Successors: [0x5a8, 0x5ac]
---
0x59e JUMPDEST
0x59f LT
0x5a0 ISZERO
0x5a1 SWAP1
0x5a2 POP
0x5a3 DUP1
0x5a4 PUSH2 0x5ac
0x5a7 JUMPI
---
0x59e: JUMPDEST 
0x59f: V542 = LT V1148 S1
0x5a0: V543 = ISZERO V542
0x5a4: V544 = 0x5ac
0x5a7: JUMPI 0x5ac V543
---
Entry stack: [V13, 0xbf, S6, S5, S4, S3, S2, S1, V1148]
Stack pops: 3
Stack additions: [V543]
Exit stack: [V13, 0xbf, S6, S5, S4, S3, V543]

================================

Block 0x5a8
[0x5a8:0x5ab]
---
Predecessors: [0x59e]
Successors: []
---
0x5a8 PUSH1 0x0
0x5aa DUP1
0x5ab REVERT
---
0x5a8: V545 = 0x0
0x5ab: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, S4, S3, S2, S1, V543]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S4, S3, S2, S1, V543]

================================

Block 0x5ac
[0x5ac:0x5e0]
---
Predecessors: [0x59e]
Successors: [0x5e1, 0x5e5]
---
0x5ac JUMPDEST
0x5ad PUSH1 0x9
0x5af SLOAD
0x5b0 PUSH1 0x1
0x5b2 PUSH1 0xa0
0x5b4 PUSH1 0x2
0x5b6 EXP
0x5b7 SUB
0x5b8 SWAP1
0x5b9 DUP2
0x5ba AND
0x5bb SWAP1
0x5bc ADDRESS
0x5bd AND
0x5be BALANCE
0x5bf DUP1
0x5c0 ISZERO
0x5c1 PUSH2 0x8fc
0x5c4 MUL
0x5c5 SWAP1
0x5c6 PUSH1 0x40
0x5c8 MLOAD
0x5c9 PUSH1 0x0
0x5cb PUSH1 0x40
0x5cd MLOAD
0x5ce DUP1
0x5cf DUP4
0x5d0 SUB
0x5d1 DUP2
0x5d2 DUP6
0x5d3 DUP9
0x5d4 DUP9
0x5d5 CALL
0x5d6 SWAP4
0x5d7 POP
0x5d8 POP
0x5d9 POP
0x5da POP
0x5db ISZERO
0x5dc ISZERO
0x5dd PUSH2 0x5e5
0x5e0 JUMPI
---
0x5ac: JUMPDEST 
0x5ad: V546 = 0x9
0x5af: V547 = S[0x9]
0x5b0: V548 = 0x1
0x5b2: V549 = 0xa0
0x5b4: V550 = 0x2
0x5b6: V551 = EXP 0x2 0xa0
0x5b7: V552 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ba: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x5bc: V554 = ADDRESS
0x5bd: V555 = AND V554 0xffffffffffffffffffffffffffffffffffffffff
0x5be: V556 = BALANCE V555
0x5c0: V557 = ISZERO V556
0x5c1: V558 = 0x8fc
0x5c4: V559 = MUL 0x8fc V557
0x5c6: V560 = 0x40
0x5c8: V561 = M[0x40]
0x5c9: V562 = 0x0
0x5cb: V563 = 0x40
0x5cd: V564 = M[0x40]
0x5d0: V565 = SUB V561 V564
0x5d5: V566 = CALL V559 V553 V556 V564 V565 V564 0x0
0x5db: V567 = ISZERO V566
0x5dc: V568 = ISZERO V567
0x5dd: V569 = 0x5e5
0x5e0: JUMPI 0x5e5 V568
---
Entry stack: [V13, 0xbf, S4, S3, S2, S1, V543]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S4, S3, S2, S1, V543]

================================

Block 0x5e1
[0x5e1:0x5e4]
---
Predecessors: [0x5ac]
Successors: []
---
0x5e1 PUSH1 0x0
0x5e3 DUP1
0x5e4 REVERT
---
0x5e1: V570 = 0x0
0x5e4: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S1, S0]

================================

Block 0x5e5
[0x5e5:0x628]
---
Predecessors: [0x5ac]
Successors: [0x629, 0x62d]
---
0x5e5 JUMPDEST
0x5e6 PUSH1 0x8
0x5e8 SLOAD
0x5e9 PUSH1 0x1
0x5eb PUSH1 0xa0
0x5ed PUSH1 0x2
0x5ef EXP
0x5f0 SUB
0x5f1 AND
0x5f2 PUSH4 0x7d64bcb4
0x5f7 PUSH1 0x0
0x5f9 PUSH1 0x40
0x5fb MLOAD
0x5fc PUSH1 0x20
0x5fe ADD
0x5ff MSTORE
0x600 PUSH1 0x40
0x602 MLOAD
0x603 DUP2
0x604 PUSH4 0xffffffff
0x609 AND
0x60a PUSH1 0xe0
0x60c PUSH1 0x2
0x60e EXP
0x60f MUL
0x610 DUP2
0x611 MSTORE
0x612 PUSH1 0x4
0x614 ADD
0x615 PUSH1 0x20
0x617 PUSH1 0x40
0x619 MLOAD
0x61a DUP1
0x61b DUP4
0x61c SUB
0x61d DUP2
0x61e PUSH1 0x0
0x620 DUP8
0x621 DUP1
0x622 EXTCODESIZE
0x623 ISZERO
0x624 ISZERO
0x625 PUSH2 0x62d
0x628 JUMPI
---
0x5e5: JUMPDEST 
0x5e6: V571 = 0x8
0x5e8: V572 = S[0x8]
0x5e9: V573 = 0x1
0x5eb: V574 = 0xa0
0x5ed: V575 = 0x2
0x5ef: V576 = EXP 0x2 0xa0
0x5f0: V577 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f1: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff V572
0x5f2: V579 = 0x7d64bcb4
0x5f7: V580 = 0x0
0x5f9: V581 = 0x40
0x5fb: V582 = M[0x40]
0x5fc: V583 = 0x20
0x5fe: V584 = ADD 0x20 V582
0x5ff: M[V584] = 0x0
0x600: V585 = 0x40
0x602: V586 = M[0x40]
0x604: V587 = 0xffffffff
0x609: V588 = AND 0xffffffff 0x7d64bcb4
0x60a: V589 = 0xe0
0x60c: V590 = 0x2
0x60e: V591 = EXP 0x2 0xe0
0x60f: V592 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7d64bcb4
0x611: M[V586] = 0x7d64bcb400000000000000000000000000000000000000000000000000000000
0x612: V593 = 0x4
0x614: V594 = ADD 0x4 V586
0x615: V595 = 0x20
0x617: V596 = 0x40
0x619: V597 = M[0x40]
0x61c: V598 = SUB V594 V597
0x61e: V599 = 0x0
0x622: V600 = EXTCODESIZE V578
0x623: V601 = ISZERO V600
0x624: V602 = ISZERO V601
0x625: V603 = 0x62d
0x628: JUMPI 0x62d V602
---
Entry stack: [V13, 0xbf, S1, S0]
Stack pops: 0
Stack additions: [V578, 0x7d64bcb4, V594, 0x20, V597, V598, V597, 0x0, V578]
Exit stack: [V13, 0xbf, S1, S0, V578, 0x7d64bcb4, V594, 0x20, V597, V598, V597, 0x0, V578]

================================

Block 0x629
[0x629:0x62c]
---
Predecessors: [0x5e5]
Successors: []
---
0x629 PUSH1 0x0
0x62b DUP1
0x62c REVERT
---
0x629: V604 = 0x0
0x62c: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V495, S9, V578, 0x7d64bcb4, V594, 0x20, V597, V598, V597, 0x0, V578]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V495, S9, V578, 0x7d64bcb4, V594, 0x20, V597, V598, V597, 0x0, V578]

================================

Block 0x62d
[0x62d:0x639]
---
Predecessors: [0x5e5]
Successors: [0x63a, 0x63e]
---
0x62d JUMPDEST
0x62e PUSH2 0x2c6
0x631 GAS
0x632 SUB
0x633 CALL
0x634 ISZERO
0x635 ISZERO
0x636 PUSH2 0x63e
0x639 JUMPI
---
0x62d: JUMPDEST 
0x62e: V605 = 0x2c6
0x631: V606 = GAS
0x632: V607 = SUB V606 0x2c6
0x633: V608 = CALL V607 V578 0x0 V597 V598 V597 0x20
0x634: V609 = ISZERO V608
0x635: V610 = ISZERO V609
0x636: V611 = 0x63e
0x639: JUMPI 0x63e V610
---
Entry stack: [V13, 0xbf, V495, S9, V578, 0x7d64bcb4, V594, 0x20, V597, V598, V597, 0x0, V578]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xbf, V495, S9, V578, 0x7d64bcb4, V594]

================================

Block 0x63a
[0x63a:0x63d]
---
Predecessors: [0x62d]
Successors: []
---
0x63a PUSH1 0x0
0x63c DUP1
0x63d REVERT
---
0x63a: V612 = 0x0
0x63d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V495, S3, S2, 0x7d64bcb4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V495, S3, S2, 0x7d64bcb4, S0]

================================

Block 0x63e
[0x63e:0x682]
---
Predecessors: [0x62d]
Successors: [0x683, 0x687]
---
0x63e JUMPDEST
0x63f POP
0x640 POP
0x641 POP
0x642 PUSH1 0x40
0x644 MLOAD
0x645 DUP1
0x646 MLOAD
0x647 POP
0x648 POP
0x649 PUSH1 0x8
0x64b SLOAD
0x64c PUSH1 0x1
0x64e PUSH1 0xa0
0x650 PUSH1 0x2
0x652 EXP
0x653 SUB
0x654 AND
0x655 PUSH4 0xb1b68fad
0x65a PUSH1 0x40
0x65c MLOAD
0x65d DUP2
0x65e PUSH4 0xffffffff
0x663 AND
0x664 PUSH1 0xe0
0x666 PUSH1 0x2
0x668 EXP
0x669 MUL
0x66a DUP2
0x66b MSTORE
0x66c PUSH1 0x4
0x66e ADD
0x66f PUSH1 0x0
0x671 PUSH1 0x40
0x673 MLOAD
0x674 DUP1
0x675 DUP4
0x676 SUB
0x677 DUP2
0x678 PUSH1 0x0
0x67a DUP8
0x67b DUP1
0x67c EXTCODESIZE
0x67d ISZERO
0x67e ISZERO
0x67f PUSH2 0x687
0x682 JUMPI
---
0x63e: JUMPDEST 
0x642: V613 = 0x40
0x644: V614 = M[0x40]
0x646: V615 = M[V614]
0x649: V616 = 0x8
0x64b: V617 = S[0x8]
0x64c: V618 = 0x1
0x64e: V619 = 0xa0
0x650: V620 = 0x2
0x652: V621 = EXP 0x2 0xa0
0x653: V622 = SUB 0x10000000000000000000000000000000000000000 0x1
0x654: V623 = AND 0xffffffffffffffffffffffffffffffffffffffff V617
0x655: V624 = 0xb1b68fad
0x65a: V625 = 0x40
0x65c: V626 = M[0x40]
0x65e: V627 = 0xffffffff
0x663: V628 = AND 0xffffffff 0xb1b68fad
0x664: V629 = 0xe0
0x666: V630 = 0x2
0x668: V631 = EXP 0x2 0xe0
0x669: V632 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb1b68fad
0x66b: M[V626] = 0xb1b68fad00000000000000000000000000000000000000000000000000000000
0x66c: V633 = 0x4
0x66e: V634 = ADD 0x4 V626
0x66f: V635 = 0x0
0x671: V636 = 0x40
0x673: V637 = M[0x40]
0x676: V638 = SUB V634 V637
0x678: V639 = 0x0
0x67c: V640 = EXTCODESIZE V623
0x67d: V641 = ISZERO V640
0x67e: V642 = ISZERO V641
0x67f: V643 = 0x687
0x682: JUMPI 0x687 V642
---
Entry stack: [V13, 0xbf, V495, S3, S2, 0x7d64bcb4, S0]
Stack pops: 3
Stack additions: [V623, 0xb1b68fad, V634, 0x0, V637, V638, V637, 0x0, V623]
Exit stack: [V13, 0xbf, V495, S3, V623, 0xb1b68fad, V634, 0x0, V637, V638, V637, 0x0, V623]

================================

Block 0x683
[0x683:0x686]
---
Predecessors: [0x63e]
Successors: []
---
0x683 PUSH1 0x0
0x685 DUP1
0x686 REVERT
---
0x683: V644 = 0x0
0x686: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V495, S9, V623, 0xb1b68fad, V634, 0x0, V637, V638, V637, 0x0, V623]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V495, S9, V623, 0xb1b68fad, V634, 0x0, V637, V638, V637, 0x0, V623]

================================

Block 0x687
[0x687:0x693]
---
Predecessors: [0x63e]
Successors: [0x694, 0x698]
---
0x687 JUMPDEST
0x688 PUSH2 0x2c6
0x68b GAS
0x68c SUB
0x68d CALL
0x68e ISZERO
0x68f ISZERO
0x690 PUSH2 0x698
0x693 JUMPI
---
0x687: JUMPDEST 
0x688: V645 = 0x2c6
0x68b: V646 = GAS
0x68c: V647 = SUB V646 0x2c6
0x68d: V648 = CALL V647 V623 0x0 V637 V638 V637 0x0
0x68e: V649 = ISZERO V648
0x68f: V650 = ISZERO V649
0x690: V651 = 0x698
0x693: JUMPI 0x698 V650
---
Entry stack: [V13, 0xbf, V495, S9, V623, 0xb1b68fad, V634, 0x0, V637, V638, V637, 0x0, V623]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xbf, V495, S9, V623, 0xb1b68fad, V634]

================================

Block 0x694
[0x694:0x697]
---
Predecessors: [0x687]
Successors: []
---
0x694 PUSH1 0x0
0x696 DUP1
0x697 REVERT
---
0x694: V652 = 0x0
0x697: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V495, S3, S2, 0xb1b68fad, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V495, S3, S2, 0xb1b68fad, S0]

================================

Block 0x698
[0x698:0x69e]
---
Predecessors: [0x687]
Successors: [0xbf]
---
0x698 JUMPDEST
0x699 POP
0x69a POP
0x69b POP
0x69c POP
0x69d POP
0x69e JUMP
---
0x698: JUMPDEST 
0x69e: JUMP 0xbf
---
Entry stack: [V13, 0xbf, V495, S3, S2, 0xb1b68fad, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x69f
[0x69f:0x6a8]
---
Predecessors: [0x104]
Successors: [0x6a9, 0x6ad]
---
0x69f JUMPDEST
0x6a0 PUSH1 0x7
0x6a2 SLOAD
0x6a3 TIMESTAMP
0x6a4 GT
0x6a5 PUSH2 0x6ad
0x6a8 JUMPI
---
0x69f: JUMPDEST 
0x6a0: V653 = 0x7
0x6a2: V654 = S[0x7]
0x6a3: V655 = TIMESTAMP
0x6a4: V656 = GT V655 V654
0x6a5: V657 = 0x6ad
0x6a8: JUMPI 0x6ad V656
---
Entry stack: [V13, 0xbf]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf]

================================

Block 0x6a9
[0x6a9:0x6ac]
---
Predecessors: [0x69f]
Successors: []
---
0x6a9 PUSH1 0x0
0x6ab DUP1
0x6ac REVERT
---
0x6a9: V658 = 0x0
0x6ac: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf]

================================

Block 0x6ad
[0x6ad:0x6e1]
---
Predecessors: [0x69f]
Successors: [0x6e2, 0x6e6]
---
0x6ad JUMPDEST
0x6ae PUSH1 0x9
0x6b0 SLOAD
0x6b1 PUSH1 0x1
0x6b3 PUSH1 0xa0
0x6b5 PUSH1 0x2
0x6b7 EXP
0x6b8 SUB
0x6b9 SWAP1
0x6ba DUP2
0x6bb AND
0x6bc SWAP1
0x6bd ADDRESS
0x6be AND
0x6bf BALANCE
0x6c0 DUP1
0x6c1 ISZERO
0x6c2 PUSH2 0x8fc
0x6c5 MUL
0x6c6 SWAP1
0x6c7 PUSH1 0x40
0x6c9 MLOAD
0x6ca PUSH1 0x0
0x6cc PUSH1 0x40
0x6ce MLOAD
0x6cf DUP1
0x6d0 DUP4
0x6d1 SUB
0x6d2 DUP2
0x6d3 DUP6
0x6d4 DUP9
0x6d5 DUP9
0x6d6 CALL
0x6d7 SWAP4
0x6d8 POP
0x6d9 POP
0x6da POP
0x6db POP
0x6dc ISZERO
0x6dd ISZERO
0x6de PUSH2 0x6e6
0x6e1 JUMPI
---
0x6ad: JUMPDEST 
0x6ae: V659 = 0x9
0x6b0: V660 = S[0x9]
0x6b1: V661 = 0x1
0x6b3: V662 = 0xa0
0x6b5: V663 = 0x2
0x6b7: V664 = EXP 0x2 0xa0
0x6b8: V665 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6bb: V666 = AND 0xffffffffffffffffffffffffffffffffffffffff V660
0x6bd: V667 = ADDRESS
0x6be: V668 = AND V667 0xffffffffffffffffffffffffffffffffffffffff
0x6bf: V669 = BALANCE V668
0x6c1: V670 = ISZERO V669
0x6c2: V671 = 0x8fc
0x6c5: V672 = MUL 0x8fc V670
0x6c7: V673 = 0x40
0x6c9: V674 = M[0x40]
0x6ca: V675 = 0x0
0x6cc: V676 = 0x40
0x6ce: V677 = M[0x40]
0x6d1: V678 = SUB V674 V677
0x6d6: V679 = CALL V672 V666 V669 V677 V678 V677 0x0
0x6dc: V680 = ISZERO V679
0x6dd: V681 = ISZERO V680
0x6de: V682 = 0x6e6
0x6e1: JUMPI 0x6e6 V681
---
Entry stack: [V13, 0xbf]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf]

================================

Block 0x6e2
[0x6e2:0x6e5]
---
Predecessors: [0x6ad]
Successors: []
---
0x6e2 PUSH1 0x0
0x6e4 DUP1
0x6e5 REVERT
---
0x6e2: V683 = 0x0
0x6e5: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf]

================================

Block 0x6e6
[0x6e6:0x729]
---
Predecessors: [0x6ad]
Successors: [0x72a, 0x72e]
---
0x6e6 JUMPDEST
0x6e7 PUSH1 0x8
0x6e9 SLOAD
0x6ea PUSH1 0x1
0x6ec PUSH1 0xa0
0x6ee PUSH1 0x2
0x6f0 EXP
0x6f1 SUB
0x6f2 AND
0x6f3 PUSH4 0x7d64bcb4
0x6f8 PUSH1 0x0
0x6fa PUSH1 0x40
0x6fc MLOAD
0x6fd PUSH1 0x20
0x6ff ADD
0x700 MSTORE
0x701 PUSH1 0x40
0x703 MLOAD
0x704 DUP2
0x705 PUSH4 0xffffffff
0x70a AND
0x70b PUSH1 0xe0
0x70d PUSH1 0x2
0x70f EXP
0x710 MUL
0x711 DUP2
0x712 MSTORE
0x713 PUSH1 0x4
0x715 ADD
0x716 PUSH1 0x20
0x718 PUSH1 0x40
0x71a MLOAD
0x71b DUP1
0x71c DUP4
0x71d SUB
0x71e DUP2
0x71f PUSH1 0x0
0x721 DUP8
0x722 DUP1
0x723 EXTCODESIZE
0x724 ISZERO
0x725 ISZERO
0x726 PUSH2 0x72e
0x729 JUMPI
---
0x6e6: JUMPDEST 
0x6e7: V684 = 0x8
0x6e9: V685 = S[0x8]
0x6ea: V686 = 0x1
0x6ec: V687 = 0xa0
0x6ee: V688 = 0x2
0x6f0: V689 = EXP 0x2 0xa0
0x6f1: V690 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f2: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff V685
0x6f3: V692 = 0x7d64bcb4
0x6f8: V693 = 0x0
0x6fa: V694 = 0x40
0x6fc: V695 = M[0x40]
0x6fd: V696 = 0x20
0x6ff: V697 = ADD 0x20 V695
0x700: M[V697] = 0x0
0x701: V698 = 0x40
0x703: V699 = M[0x40]
0x705: V700 = 0xffffffff
0x70a: V701 = AND 0xffffffff 0x7d64bcb4
0x70b: V702 = 0xe0
0x70d: V703 = 0x2
0x70f: V704 = EXP 0x2 0xe0
0x710: V705 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7d64bcb4
0x712: M[V699] = 0x7d64bcb400000000000000000000000000000000000000000000000000000000
0x713: V706 = 0x4
0x715: V707 = ADD 0x4 V699
0x716: V708 = 0x20
0x718: V709 = 0x40
0x71a: V710 = M[0x40]
0x71d: V711 = SUB V707 V710
0x71f: V712 = 0x0
0x723: V713 = EXTCODESIZE V691
0x724: V714 = ISZERO V713
0x725: V715 = ISZERO V714
0x726: V716 = 0x72e
0x729: JUMPI 0x72e V715
---
Entry stack: [V13, 0xbf]
Stack pops: 0
Stack additions: [V691, 0x7d64bcb4, V707, 0x20, V710, V711, V710, 0x0, V691]
Exit stack: [V13, 0xbf, V691, 0x7d64bcb4, V707, 0x20, V710, V711, V710, 0x0, V691]

================================

Block 0x72a
[0x72a:0x72d]
---
Predecessors: [0x6e6]
Successors: []
---
0x72a PUSH1 0x0
0x72c DUP1
0x72d REVERT
---
0x72a: V717 = 0x0
0x72d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V691, 0x7d64bcb4, V707, 0x20, V710, V711, V710, 0x0, V691]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V691, 0x7d64bcb4, V707, 0x20, V710, V711, V710, 0x0, V691]

================================

Block 0x72e
[0x72e:0x73a]
---
Predecessors: [0x6e6]
Successors: [0x73b, 0x73f]
---
0x72e JUMPDEST
0x72f PUSH2 0x2c6
0x732 GAS
0x733 SUB
0x734 CALL
0x735 ISZERO
0x736 ISZERO
0x737 PUSH2 0x73f
0x73a JUMPI
---
0x72e: JUMPDEST 
0x72f: V718 = 0x2c6
0x732: V719 = GAS
0x733: V720 = SUB V719 0x2c6
0x734: V721 = CALL V720 V691 0x0 V710 V711 V710 0x20
0x735: V722 = ISZERO V721
0x736: V723 = ISZERO V722
0x737: V724 = 0x73f
0x73a: JUMPI 0x73f V723
---
Entry stack: [V13, 0xbf, V691, 0x7d64bcb4, V707, 0x20, V710, V711, V710, 0x0, V691]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xbf, V691, 0x7d64bcb4, V707]

================================

Block 0x73b
[0x73b:0x73e]
---
Predecessors: [0x72e]
Successors: []
---
0x73b PUSH1 0x0
0x73d DUP1
0x73e REVERT
---
0x73b: V725 = 0x0
0x73e: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V691, 0x7d64bcb4, V707]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V691, 0x7d64bcb4, V707]

================================

Block 0x73f
[0x73f:0x783]
---
Predecessors: [0x72e]
Successors: [0x784, 0x788]
---
0x73f JUMPDEST
0x740 POP
0x741 POP
0x742 POP
0x743 PUSH1 0x40
0x745 MLOAD
0x746 DUP1
0x747 MLOAD
0x748 POP
0x749 POP
0x74a PUSH1 0x8
0x74c SLOAD
0x74d PUSH1 0x1
0x74f PUSH1 0xa0
0x751 PUSH1 0x2
0x753 EXP
0x754 SUB
0x755 AND
0x756 PUSH4 0xb1b68fad
0x75b PUSH1 0x40
0x75d MLOAD
0x75e DUP2
0x75f PUSH4 0xffffffff
0x764 AND
0x765 PUSH1 0xe0
0x767 PUSH1 0x2
0x769 EXP
0x76a MUL
0x76b DUP2
0x76c MSTORE
0x76d PUSH1 0x4
0x76f ADD
0x770 PUSH1 0x0
0x772 PUSH1 0x40
0x774 MLOAD
0x775 DUP1
0x776 DUP4
0x777 SUB
0x778 DUP2
0x779 PUSH1 0x0
0x77b DUP8
0x77c DUP1
0x77d EXTCODESIZE
0x77e ISZERO
0x77f ISZERO
0x780 PUSH2 0x788
0x783 JUMPI
---
0x73f: JUMPDEST 
0x743: V726 = 0x40
0x745: V727 = M[0x40]
0x747: V728 = M[V727]
0x74a: V729 = 0x8
0x74c: V730 = S[0x8]
0x74d: V731 = 0x1
0x74f: V732 = 0xa0
0x751: V733 = 0x2
0x753: V734 = EXP 0x2 0xa0
0x754: V735 = SUB 0x10000000000000000000000000000000000000000 0x1
0x755: V736 = AND 0xffffffffffffffffffffffffffffffffffffffff V730
0x756: V737 = 0xb1b68fad
0x75b: V738 = 0x40
0x75d: V739 = M[0x40]
0x75f: V740 = 0xffffffff
0x764: V741 = AND 0xffffffff 0xb1b68fad
0x765: V742 = 0xe0
0x767: V743 = 0x2
0x769: V744 = EXP 0x2 0xe0
0x76a: V745 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb1b68fad
0x76c: M[V739] = 0xb1b68fad00000000000000000000000000000000000000000000000000000000
0x76d: V746 = 0x4
0x76f: V747 = ADD 0x4 V739
0x770: V748 = 0x0
0x772: V749 = 0x40
0x774: V750 = M[0x40]
0x777: V751 = SUB V747 V750
0x779: V752 = 0x0
0x77d: V753 = EXTCODESIZE V736
0x77e: V754 = ISZERO V753
0x77f: V755 = ISZERO V754
0x780: V756 = 0x788
0x783: JUMPI 0x788 V755
---
Entry stack: [V13, 0xbf, V691, 0x7d64bcb4, V707]
Stack pops: 3
Stack additions: [V736, 0xb1b68fad, V747, 0x0, V750, V751, V750, 0x0, V736]
Exit stack: [V13, 0xbf, V736, 0xb1b68fad, V747, 0x0, V750, V751, V750, 0x0, V736]

================================

Block 0x784
[0x784:0x787]
---
Predecessors: [0x73f]
Successors: []
---
0x784 PUSH1 0x0
0x786 DUP1
0x787 REVERT
---
0x784: V757 = 0x0
0x787: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V736, 0xb1b68fad, V747, 0x0, V750, V751, V750, 0x0, V736]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V736, 0xb1b68fad, V747, 0x0, V750, V751, V750, 0x0, V736]

================================

Block 0x788
[0x788:0x794]
---
Predecessors: [0x73f]
Successors: [0x795, 0x799]
---
0x788 JUMPDEST
0x789 PUSH2 0x2c6
0x78c GAS
0x78d SUB
0x78e CALL
0x78f ISZERO
0x790 ISZERO
0x791 PUSH2 0x799
0x794 JUMPI
---
0x788: JUMPDEST 
0x789: V758 = 0x2c6
0x78c: V759 = GAS
0x78d: V760 = SUB V759 0x2c6
0x78e: V761 = CALL V760 V736 0x0 V750 V751 V750 0x0
0x78f: V762 = ISZERO V761
0x790: V763 = ISZERO V762
0x791: V764 = 0x799
0x794: JUMPI 0x799 V763
---
Entry stack: [V13, 0xbf, V736, 0xb1b68fad, V747, 0x0, V750, V751, V750, 0x0, V736]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xbf, V736, 0xb1b68fad, V747]

================================

Block 0x795
[0x795:0x798]
---
Predecessors: [0x788]
Successors: []
---
0x795 PUSH1 0x0
0x797 DUP1
0x798 REVERT
---
0x795: V765 = 0x0
0x798: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V736, 0xb1b68fad, V747]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V736, 0xb1b68fad, V747]

================================

Block 0x799
[0x799:0x79d]
---
Predecessors: [0x788, 0x89d]
Successors: [0xbf]
---
0x799 JUMPDEST
0x79a POP
0x79b POP
0x79c POP
0x79d JUMP
---
0x799: JUMPDEST 
0x79d: JUMP S3
---
Entry stack: [V13, 0xbf, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0xbf, S5, S4]

================================

Block 0x79e
[0x79e:0x7a3]
---
Predecessors: [0x117]
Successors: [0xd4]
---
0x79e JUMPDEST
0x79f PUSH1 0x7
0x7a1 SLOAD
0x7a2 DUP2
0x7a3 JUMP
---
0x79e: JUMPDEST 
0x79f: V766 = 0x7
0x7a1: V767 = S[0x7]
0x7a3: JUMP 0xd4
---
Entry stack: [V13, 0xd4]
Stack pops: 1
Stack additions: [S0, V767]
Exit stack: [V13, 0xd4, V767]

================================

Block 0x7a4
[0x7a4:0x7f2]
---
Predecessors: [0x12a]
Successors: [0x260, 0x7f3]
---
0x7a4 JUMPDEST
0x7a5 PUSH1 0x1
0x7a7 SLOAD
0x7a8 PUSH1 0x8
0x7aa SLOAD
0x7ab PUSH1 0x0
0x7ad SWAP2
0x7ae DUP3
0x7af SWAP2
0x7b0 PUSH2 0x7f7
0x7b3 SWAP1
0x7b4 PUSH1 0x1
0x7b6 PUSH1 0xa0
0x7b8 PUSH1 0x2
0x7ba EXP
0x7bb SUB
0x7bc AND
0x7bd PUSH4 0x860f5048
0x7c2 DUP5
0x7c3 PUSH1 0x40
0x7c5 MLOAD
0x7c6 PUSH1 0x20
0x7c8 ADD
0x7c9 MSTORE
0x7ca PUSH1 0x40
0x7cc MLOAD
0x7cd DUP2
0x7ce PUSH4 0xffffffff
0x7d3 AND
0x7d4 PUSH1 0xe0
0x7d6 PUSH1 0x2
0x7d8 EXP
0x7d9 MUL
0x7da DUP2
0x7db MSTORE
0x7dc PUSH1 0x4
0x7de ADD
0x7df PUSH1 0x20
0x7e1 PUSH1 0x40
0x7e3 MLOAD
0x7e4 DUP1
0x7e5 DUP4
0x7e6 SUB
0x7e7 DUP2
0x7e8 PUSH1 0x0
0x7ea DUP8
0x7eb DUP1
0x7ec EXTCODESIZE
0x7ed ISZERO
0x7ee ISZERO
0x7ef PUSH2 0x260
0x7f2 JUMPI
---
0x7a4: JUMPDEST 
0x7a5: V768 = 0x1
0x7a7: V769 = S[0x1]
0x7a8: V770 = 0x8
0x7aa: V771 = S[0x8]
0x7ab: V772 = 0x0
0x7b0: V773 = 0x7f7
0x7b4: V774 = 0x1
0x7b6: V775 = 0xa0
0x7b8: V776 = 0x2
0x7ba: V777 = EXP 0x2 0xa0
0x7bb: V778 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7bc: V779 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0x7bd: V780 = 0x860f5048
0x7c3: V781 = 0x40
0x7c5: V782 = M[0x40]
0x7c6: V783 = 0x20
0x7c8: V784 = ADD 0x20 V782
0x7c9: M[V784] = 0x0
0x7ca: V785 = 0x40
0x7cc: V786 = M[0x40]
0x7ce: V787 = 0xffffffff
0x7d3: V788 = AND 0xffffffff 0x860f5048
0x7d4: V789 = 0xe0
0x7d6: V790 = 0x2
0x7d8: V791 = EXP 0x2 0xe0
0x7d9: V792 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x860f5048
0x7db: M[V786] = 0x860f504800000000000000000000000000000000000000000000000000000000
0x7dc: V793 = 0x4
0x7de: V794 = ADD 0x4 V786
0x7df: V795 = 0x20
0x7e1: V796 = 0x40
0x7e3: V797 = M[0x40]
0x7e6: V798 = SUB V794 V797
0x7e8: V799 = 0x0
0x7ec: V800 = EXTCODESIZE V779
0x7ed: V801 = ISZERO V800
0x7ee: V802 = ISZERO V801
0x7ef: V803 = 0x260
0x7f2: JUMPI 0x260 V802
---
Entry stack: [V13, 0xbf]
Stack pops: 0
Stack additions: [0x0, 0x0, V769, 0x7f7, V779, 0x860f5048, V794, 0x20, V797, V798, V797, 0x0, V779]
Exit stack: [V13, 0xbf, 0x0, 0x0, V769, 0x7f7, V779, 0x860f5048, V794, 0x20, V797, V798, V797, 0x0, V779]

================================

Block 0x7f3
[0x7f3:0x7f6]
---
Predecessors: [0x7a4]
Successors: []
---
0x7f3 PUSH1 0x0
0x7f5 DUP1
0x7f6 REVERT
---
0x7f3: V804 = 0x0
0x7f6: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, 0x0, 0x0, V769, 0x7f7, V779, 0x860f5048, V794, 0x20, V797, V798, V797, 0x0, V779]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, 0x0, 0x0, V769, 0x7f7, V779, 0x860f5048, V794, 0x20, V797, V798, V797, 0x0, V779]

================================

Block 0x7f7
[0x7f7:0x805]
---
Predecessors: [0xb3b]
Successors: [0x806, 0x808]
---
0x7f7 JUMPDEST
0x7f8 LT
0x7f9 ISZERO
0x7fa SWAP1
0x7fb POP
0x7fc PUSH1 0x6
0x7fe SLOAD
0x7ff TIMESTAMP
0x800 GT
0x801 DUP1
0x802 PUSH2 0x808
0x805 JUMPI
---
0x7f7: JUMPDEST 
0x7f8: V805 = LT V1148 S1
0x7f9: V806 = ISZERO V805
0x7fc: V807 = 0x6
0x7fe: V808 = S[0x6]
0x7ff: V809 = TIMESTAMP
0x800: V810 = GT V809 V808
0x802: V811 = 0x808
0x805: JUMPI 0x808 V810
---
Entry stack: [V13, 0xbf, S6, S5, S4, S3, S2, S1, V1148]
Stack pops: 3
Stack additions: [V806, V810]
Exit stack: [V13, 0xbf, S6, S5, S4, S3, V806, V810]

================================

Block 0x806
[0x806:0x807]
---
Predecessors: [0x7f7]
Successors: [0x808]
---
0x806 POP
0x807 DUP1
---
0x806: NOP 
---
Entry stack: [V13, 0xbf, S5, S4, S3, S2, V806, V810]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V13, 0xbf, S5, S4, S3, S2, V806, V806]

================================

Block 0x808
[0x808:0x80e]
---
Predecessors: [0x7f7, 0x806]
Successors: [0x80f, 0x813]
---
0x808 JUMPDEST
0x809 ISZERO
0x80a ISZERO
0x80b PUSH2 0x813
0x80e JUMPI
---
0x808: JUMPDEST 
0x809: V812 = ISZERO S0
0x80a: V813 = ISZERO V812
0x80b: V814 = 0x813
0x80e: JUMPI 0x813 V813
---
Entry stack: [V13, 0xbf, S5, S4, S3, S2, V806, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xbf, S5, S4, S3, S2, V806]

================================

Block 0x80f
[0x80f:0x812]
---
Predecessors: [0x808]
Successors: []
---
0x80f PUSH1 0x0
0x811 DUP1
0x812 REVERT
---
0x80f: V815 = 0x0
0x812: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, S4, S3, S2, S1, V806]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S4, S3, S2, S1, V806]

================================

Block 0x813
[0x813:0x860]
---
Predecessors: [0x808]
Successors: [0x260, 0x861]
---
0x813 JUMPDEST
0x814 PUSH1 0x2
0x816 SLOAD
0x817 PUSH1 0x8
0x819 SLOAD
0x81a PUSH1 0x0
0x81c SWAP2
0x81d SWAP1
0x81e PUSH2 0x865
0x821 SWAP1
0x822 PUSH1 0x1
0x824 PUSH1 0xa0
0x826 PUSH1 0x2
0x828 EXP
0x829 SUB
0x82a AND
0x82b PUSH4 0x860f5048
0x830 DUP5
0x831 PUSH1 0x40
0x833 MLOAD
0x834 PUSH1 0x20
0x836 ADD
0x837 MSTORE
0x838 PUSH1 0x40
0x83a MLOAD
0x83b DUP2
0x83c PUSH4 0xffffffff
0x841 AND
0x842 PUSH1 0xe0
0x844 PUSH1 0x2
0x846 EXP
0x847 MUL
0x848 DUP2
0x849 MSTORE
0x84a PUSH1 0x4
0x84c ADD
0x84d PUSH1 0x20
0x84f PUSH1 0x40
0x851 MLOAD
0x852 DUP1
0x853 DUP4
0x854 SUB
0x855 DUP2
0x856 PUSH1 0x0
0x858 DUP8
0x859 DUP1
0x85a EXTCODESIZE
0x85b ISZERO
0x85c ISZERO
0x85d PUSH2 0x260
0x860 JUMPI
---
0x813: JUMPDEST 
0x814: V816 = 0x2
0x816: V817 = S[0x2]
0x817: V818 = 0x8
0x819: V819 = S[0x8]
0x81a: V820 = 0x0
0x81e: V821 = 0x865
0x822: V822 = 0x1
0x824: V823 = 0xa0
0x826: V824 = 0x2
0x828: V825 = EXP 0x2 0xa0
0x829: V826 = SUB 0x10000000000000000000000000000000000000000 0x1
0x82a: V827 = AND 0xffffffffffffffffffffffffffffffffffffffff V819
0x82b: V828 = 0x860f5048
0x831: V829 = 0x40
0x833: V830 = M[0x40]
0x834: V831 = 0x20
0x836: V832 = ADD 0x20 V830
0x837: M[V832] = 0x0
0x838: V833 = 0x40
0x83a: V834 = M[0x40]
0x83c: V835 = 0xffffffff
0x841: V836 = AND 0xffffffff 0x860f5048
0x842: V837 = 0xe0
0x844: V838 = 0x2
0x846: V839 = EXP 0x2 0xe0
0x847: V840 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x860f5048
0x849: M[V834] = 0x860f504800000000000000000000000000000000000000000000000000000000
0x84a: V841 = 0x4
0x84c: V842 = ADD 0x4 V834
0x84d: V843 = 0x20
0x84f: V844 = 0x40
0x851: V845 = M[0x40]
0x854: V846 = SUB V842 V845
0x856: V847 = 0x0
0x85a: V848 = EXTCODESIZE V827
0x85b: V849 = ISZERO V848
0x85c: V850 = ISZERO V849
0x85d: V851 = 0x260
0x860: JUMPI 0x260 V850
---
Entry stack: [V13, 0xbf, S4, S3, S2, S1, V806]
Stack pops: 0
Stack additions: [0x0, V817, 0x865, V827, 0x860f5048, V842, 0x20, V845, V846, V845, 0x0, V827]
Exit stack: [V13, 0xbf, S4, S3, S2, S1, V806, 0x0, V817, 0x865, V827, 0x860f5048, V842, 0x20, V845, V846, V845, 0x0, V827]

================================

Block 0x861
[0x861:0x864]
---
Predecessors: [0x813]
Successors: []
---
0x861 PUSH1 0x0
0x863 DUP1
0x864 REVERT
---
0x861: V852 = 0x0
0x864: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, S16, S15, S14, S13, V806, 0x0, V817, 0x865, V827, 0x860f5048, V842, 0x20, V845, V846, V845, 0x0, V827]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S16, S15, S14, S13, V806, 0x0, V817, 0x865, V827, 0x860f5048, V842, 0x20, V845, V846, V845, 0x0, V827]

================================

Block 0x865
[0x865:0x86d]
---
Predecessors: [0xb3b]
Successors: [0x86e, 0x872]
---
0x865 JUMPDEST
0x866 LT
0x867 SWAP1
0x868 POP
0x869 DUP1
0x86a PUSH2 0x872
0x86d JUMPI
---
0x865: JUMPDEST 
0x866: V853 = LT V1148 S1
0x86a: V854 = 0x872
0x86d: JUMPI 0x872 V853
---
Entry stack: [V13, 0xbf, S6, S5, S4, S3, S2, S1, V1148]
Stack pops: 3
Stack additions: [V853]
Exit stack: [V13, 0xbf, S6, S5, S4, S3, V853]

================================

Block 0x86e
[0x86e:0x871]
---
Predecessors: [0x865]
Successors: []
---
0x86e PUSH1 0x0
0x870 DUP1
0x871 REVERT
---
0x86e: V855 = 0x0
0x871: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, S4, S3, S2, S1, V853]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S4, S3, S2, S1, V853]

================================

Block 0x872
[0x872:0x89c]
---
Predecessors: [0x865]
Successors: [0xb2f]
---
0x872 JUMPDEST
0x873 PUSH1 0x1
0x875 PUSH1 0xa0
0x877 PUSH1 0x2
0x879 EXP
0x87a SUB
0x87b CALLER
0x87c AND
0x87d PUSH1 0x0
0x87f SWAP1
0x880 DUP2
0x881 MSTORE
0x882 PUSH1 0xa
0x884 PUSH1 0x20
0x886 MSTORE
0x887 PUSH1 0x40
0x889 SWAP1
0x88a SHA3
0x88b SLOAD
0x88c SWAP3
0x88d POP
0x88e PUSH2 0x89d
0x891 DUP4
0x892 DUP1
0x893 PUSH4 0xffffffff
0x898 PUSH2 0xb2f
0x89b AND
0x89c JUMP
---
0x872: JUMPDEST 
0x873: V856 = 0x1
0x875: V857 = 0xa0
0x877: V858 = 0x2
0x879: V859 = EXP 0x2 0xa0
0x87a: V860 = SUB 0x10000000000000000000000000000000000000000 0x1
0x87b: V861 = CALLER
0x87c: V862 = AND V861 0xffffffffffffffffffffffffffffffffffffffff
0x87d: V863 = 0x0
0x881: M[0x0] = V862
0x882: V864 = 0xa
0x884: V865 = 0x20
0x886: M[0x20] = 0xa
0x887: V866 = 0x40
0x88a: V867 = SHA3 0x0 0x40
0x88b: V868 = S[V867]
0x88e: V869 = 0x89d
0x893: V870 = 0xffffffff
0x898: V871 = 0xb2f
0x89b: V872 = AND 0xb2f 0xffffffff
0x89c: JUMP 0xb2f
---
Entry stack: [V13, 0xbf, S4, S3, S2, S1, V853]
Stack pops: 3
Stack additions: [V868, S1, S0, 0x89d, V868, V868]
Exit stack: [V13, 0xbf, S4, S3, V868, S1, V853, 0x89d, V868, V868]

================================

Block 0x89d
[0x89d:0x8de]
---
Predecessors: [0xb3b]
Successors: [0x799, 0x8df]
---
0x89d JUMPDEST
0x89e PUSH1 0x1
0x8a0 PUSH1 0xa0
0x8a2 PUSH1 0x2
0x8a4 EXP
0x8a5 SUB
0x8a6 CALLER
0x8a7 AND
0x8a8 PUSH1 0x0
0x8aa DUP2
0x8ab DUP2
0x8ac MSTORE
0x8ad PUSH1 0xa
0x8af PUSH1 0x20
0x8b1 MSTORE
0x8b2 PUSH1 0x40
0x8b4 SWAP1
0x8b5 DUP2
0x8b6 SWAP1
0x8b7 SHA3
0x8b8 SWAP3
0x8b9 SWAP1
0x8ba SWAP3
0x8bb SSTORE
0x8bc SWAP1
0x8bd DUP5
0x8be ISZERO
0x8bf PUSH2 0x8fc
0x8c2 MUL
0x8c3 SWAP1
0x8c4 DUP6
0x8c5 SWAP1
0x8c6 MLOAD
0x8c7 PUSH1 0x0
0x8c9 PUSH1 0x40
0x8cb MLOAD
0x8cc DUP1
0x8cd DUP4
0x8ce SUB
0x8cf DUP2
0x8d0 DUP6
0x8d1 DUP9
0x8d2 DUP9
0x8d3 CALL
0x8d4 SWAP4
0x8d5 POP
0x8d6 POP
0x8d7 POP
0x8d8 POP
0x8d9 ISZERO
0x8da ISZERO
0x8db PUSH2 0x799
0x8de JUMPI
---
0x89d: JUMPDEST 
0x89e: V873 = 0x1
0x8a0: V874 = 0xa0
0x8a2: V875 = 0x2
0x8a4: V876 = EXP 0x2 0xa0
0x8a5: V877 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a6: V878 = CALLER
0x8a7: V879 = AND V878 0xffffffffffffffffffffffffffffffffffffffff
0x8a8: V880 = 0x0
0x8ac: M[0x0] = V879
0x8ad: V881 = 0xa
0x8af: V882 = 0x20
0x8b1: M[0x20] = 0xa
0x8b2: V883 = 0x40
0x8b7: V884 = SHA3 0x0 0x40
0x8bb: S[V884] = V1148
0x8be: V885 = ISZERO S3
0x8bf: V886 = 0x8fc
0x8c2: V887 = MUL 0x8fc V885
0x8c6: V888 = M[0x40]
0x8c7: V889 = 0x0
0x8c9: V890 = 0x40
0x8cb: V891 = M[0x40]
0x8ce: V892 = SUB V888 V891
0x8d3: V893 = CALL V887 V879 S3 V891 V892 V891 0x0
0x8d9: V894 = ISZERO V893
0x8da: V895 = ISZERO V894
0x8db: V896 = 0x799
0x8de: JUMPI 0x799 V895
---
Entry stack: [V13, 0xbf, S6, S5, S4, S3, S2, S1, V1148]
Stack pops: 4
Stack additions: [S3, S2, S1]
Exit stack: [V13, 0xbf, S6, S5, S4, S3, S2, S1]

================================

Block 0x8df
[0x8df:0x8e2]
---
Predecessors: [0x89d]
Successors: []
---
0x8df PUSH1 0x0
0x8e1 DUP1
0x8e2 REVERT
---
0x8df: V897 = 0x0
0x8e2: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S5, S4, S3, S2, S1, S0]

================================

Block 0x8e3
[0x8e3:0x8f9]
---
Predecessors: [0x13d]
Successors: [0x8fa, 0x8fe]
---
0x8e3 JUMPDEST
0x8e4 PUSH1 0x0
0x8e6 SLOAD
0x8e7 CALLER
0x8e8 PUSH1 0x1
0x8ea PUSH1 0xa0
0x8ec PUSH1 0x2
0x8ee EXP
0x8ef SUB
0x8f0 SWAP1
0x8f1 DUP2
0x8f2 AND
0x8f3 SWAP2
0x8f4 AND
0x8f5 EQ
0x8f6 PUSH2 0x8fe
0x8f9 JUMPI
---
0x8e3: JUMPDEST 
0x8e4: V898 = 0x0
0x8e6: V899 = S[0x0]
0x8e7: V900 = CALLER
0x8e8: V901 = 0x1
0x8ea: V902 = 0xa0
0x8ec: V903 = 0x2
0x8ee: V904 = EXP 0x2 0xa0
0x8ef: V905 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f2: V906 = AND 0xffffffffffffffffffffffffffffffffffffffff V900
0x8f4: V907 = AND V899 0xffffffffffffffffffffffffffffffffffffffff
0x8f5: V908 = EQ V907 V906
0x8f6: V909 = 0x8fe
0x8f9: JUMPI 0x8fe V908
---
Entry stack: [V13, 0xbf]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf]

================================

Block 0x8fa
[0x8fa:0x8fd]
---
Predecessors: [0x8e3]
Successors: []
---
0x8fa PUSH1 0x0
0x8fc DUP1
0x8fd REVERT
---
0x8fa: V910 = 0x0
0x8fd: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf]

================================

Block 0x8fe
[0x8fe:0x907]
---
Predecessors: [0x8e3]
Successors: [0x908, 0x90c]
---
0x8fe JUMPDEST
0x8ff PUSH1 0x7
0x901 SLOAD
0x902 TIMESTAMP
0x903 GT
0x904 PUSH2 0x90c
0x907 JUMPI
---
0x8fe: JUMPDEST 
0x8ff: V911 = 0x7
0x901: V912 = S[0x7]
0x902: V913 = TIMESTAMP
0x903: V914 = GT V913 V912
0x904: V915 = 0x90c
0x907: JUMPI 0x90c V914
---
Entry stack: [V13, 0xbf]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf]

================================

Block 0x908
[0x908:0x90b]
---
Predecessors: [0x8fe]
Successors: []
---
0x908 PUSH1 0x0
0x90a DUP1
0x90b REVERT
---
0x908: V916 = 0x0
0x90b: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf]

================================

Block 0x90c
[0x90c:0x94f]
---
Predecessors: [0x8fe]
Successors: [0x950, 0x954]
---
0x90c JUMPDEST
0x90d PUSH1 0x8
0x90f SLOAD
0x910 PUSH1 0x1
0x912 PUSH1 0xa0
0x914 PUSH1 0x2
0x916 EXP
0x917 SUB
0x918 AND
0x919 PUSH4 0x7d64bcb4
0x91e PUSH1 0x0
0x920 PUSH1 0x40
0x922 MLOAD
0x923 PUSH1 0x20
0x925 ADD
0x926 MSTORE
0x927 PUSH1 0x40
0x929 MLOAD
0x92a DUP2
0x92b PUSH4 0xffffffff
0x930 AND
0x931 PUSH1 0xe0
0x933 PUSH1 0x2
0x935 EXP
0x936 MUL
0x937 DUP2
0x938 MSTORE
0x939 PUSH1 0x4
0x93b ADD
0x93c PUSH1 0x20
0x93e PUSH1 0x40
0x940 MLOAD
0x941 DUP1
0x942 DUP4
0x943 SUB
0x944 DUP2
0x945 PUSH1 0x0
0x947 DUP8
0x948 DUP1
0x949 EXTCODESIZE
0x94a ISZERO
0x94b ISZERO
0x94c PUSH2 0x954
0x94f JUMPI
---
0x90c: JUMPDEST 
0x90d: V917 = 0x8
0x90f: V918 = S[0x8]
0x910: V919 = 0x1
0x912: V920 = 0xa0
0x914: V921 = 0x2
0x916: V922 = EXP 0x2 0xa0
0x917: V923 = SUB 0x10000000000000000000000000000000000000000 0x1
0x918: V924 = AND 0xffffffffffffffffffffffffffffffffffffffff V918
0x919: V925 = 0x7d64bcb4
0x91e: V926 = 0x0
0x920: V927 = 0x40
0x922: V928 = M[0x40]
0x923: V929 = 0x20
0x925: V930 = ADD 0x20 V928
0x926: M[V930] = 0x0
0x927: V931 = 0x40
0x929: V932 = M[0x40]
0x92b: V933 = 0xffffffff
0x930: V934 = AND 0xffffffff 0x7d64bcb4
0x931: V935 = 0xe0
0x933: V936 = 0x2
0x935: V937 = EXP 0x2 0xe0
0x936: V938 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7d64bcb4
0x938: M[V932] = 0x7d64bcb400000000000000000000000000000000000000000000000000000000
0x939: V939 = 0x4
0x93b: V940 = ADD 0x4 V932
0x93c: V941 = 0x20
0x93e: V942 = 0x40
0x940: V943 = M[0x40]
0x943: V944 = SUB V940 V943
0x945: V945 = 0x0
0x949: V946 = EXTCODESIZE V924
0x94a: V947 = ISZERO V946
0x94b: V948 = ISZERO V947
0x94c: V949 = 0x954
0x94f: JUMPI 0x954 V948
---
Entry stack: [V13, 0xbf]
Stack pops: 0
Stack additions: [V924, 0x7d64bcb4, V940, 0x20, V943, V944, V943, 0x0, V924]
Exit stack: [V13, 0xbf, V924, 0x7d64bcb4, V940, 0x20, V943, V944, V943, 0x0, V924]

================================

Block 0x950
[0x950:0x953]
---
Predecessors: [0x90c]
Successors: []
---
0x950 PUSH1 0x0
0x952 DUP1
0x953 REVERT
---
0x950: V950 = 0x0
0x953: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V924, 0x7d64bcb4, V940, 0x20, V943, V944, V943, 0x0, V924]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V924, 0x7d64bcb4, V940, 0x20, V943, V944, V943, 0x0, V924]

================================

Block 0x954
[0x954:0x960]
---
Predecessors: [0x90c]
Successors: [0x961, 0x965]
---
0x954 JUMPDEST
0x955 PUSH2 0x2c6
0x958 GAS
0x959 SUB
0x95a CALL
0x95b ISZERO
0x95c ISZERO
0x95d PUSH2 0x965
0x960 JUMPI
---
0x954: JUMPDEST 
0x955: V951 = 0x2c6
0x958: V952 = GAS
0x959: V953 = SUB V952 0x2c6
0x95a: V954 = CALL V953 V924 0x0 V943 V944 V943 0x20
0x95b: V955 = ISZERO V954
0x95c: V956 = ISZERO V955
0x95d: V957 = 0x965
0x960: JUMPI 0x965 V956
---
Entry stack: [V13, 0xbf, V924, 0x7d64bcb4, V940, 0x20, V943, V944, V943, 0x0, V924]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xbf, V924, 0x7d64bcb4, V940]

================================

Block 0x961
[0x961:0x964]
---
Predecessors: [0x954]
Successors: []
---
0x961 PUSH1 0x0
0x963 DUP1
0x964 REVERT
---
0x961: V958 = 0x0
0x964: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V924, 0x7d64bcb4, V940]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V924, 0x7d64bcb4, V940]

================================

Block 0x965
[0x965:0x9a9]
---
Predecessors: [0x954]
Successors: [0x9aa, 0x9ae]
---
0x965 JUMPDEST
0x966 POP
0x967 POP
0x968 POP
0x969 PUSH1 0x40
0x96b MLOAD
0x96c DUP1
0x96d MLOAD
0x96e POP
0x96f POP
0x970 PUSH1 0x8
0x972 SLOAD
0x973 PUSH1 0x1
0x975 PUSH1 0xa0
0x977 PUSH1 0x2
0x979 EXP
0x97a SUB
0x97b AND
0x97c PUSH4 0xb1b68fad
0x981 PUSH1 0x40
0x983 MLOAD
0x984 DUP2
0x985 PUSH4 0xffffffff
0x98a AND
0x98b PUSH1 0xe0
0x98d PUSH1 0x2
0x98f EXP
0x990 MUL
0x991 DUP2
0x992 MSTORE
0x993 PUSH1 0x4
0x995 ADD
0x996 PUSH1 0x0
0x998 PUSH1 0x40
0x99a MLOAD
0x99b DUP1
0x99c DUP4
0x99d SUB
0x99e DUP2
0x99f PUSH1 0x0
0x9a1 DUP8
0x9a2 DUP1
0x9a3 EXTCODESIZE
0x9a4 ISZERO
0x9a5 ISZERO
0x9a6 PUSH2 0x9ae
0x9a9 JUMPI
---
0x965: JUMPDEST 
0x969: V959 = 0x40
0x96b: V960 = M[0x40]
0x96d: V961 = M[V960]
0x970: V962 = 0x8
0x972: V963 = S[0x8]
0x973: V964 = 0x1
0x975: V965 = 0xa0
0x977: V966 = 0x2
0x979: V967 = EXP 0x2 0xa0
0x97a: V968 = SUB 0x10000000000000000000000000000000000000000 0x1
0x97b: V969 = AND 0xffffffffffffffffffffffffffffffffffffffff V963
0x97c: V970 = 0xb1b68fad
0x981: V971 = 0x40
0x983: V972 = M[0x40]
0x985: V973 = 0xffffffff
0x98a: V974 = AND 0xffffffff 0xb1b68fad
0x98b: V975 = 0xe0
0x98d: V976 = 0x2
0x98f: V977 = EXP 0x2 0xe0
0x990: V978 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb1b68fad
0x992: M[V972] = 0xb1b68fad00000000000000000000000000000000000000000000000000000000
0x993: V979 = 0x4
0x995: V980 = ADD 0x4 V972
0x996: V981 = 0x0
0x998: V982 = 0x40
0x99a: V983 = M[0x40]
0x99d: V984 = SUB V980 V983
0x99f: V985 = 0x0
0x9a3: V986 = EXTCODESIZE V969
0x9a4: V987 = ISZERO V986
0x9a5: V988 = ISZERO V987
0x9a6: V989 = 0x9ae
0x9a9: JUMPI 0x9ae V988
---
Entry stack: [V13, 0xbf, V924, 0x7d64bcb4, V940]
Stack pops: 3
Stack additions: [V969, 0xb1b68fad, V980, 0x0, V983, V984, V983, 0x0, V969]
Exit stack: [V13, 0xbf, V969, 0xb1b68fad, V980, 0x0, V983, V984, V983, 0x0, V969]

================================

Block 0x9aa
[0x9aa:0x9ad]
---
Predecessors: [0x965]
Successors: []
---
0x9aa PUSH1 0x0
0x9ac DUP1
0x9ad REVERT
---
0x9aa: V990 = 0x0
0x9ad: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V969, 0xb1b68fad, V980, 0x0, V983, V984, V983, 0x0, V969]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V969, 0xb1b68fad, V980, 0x0, V983, V984, V983, 0x0, V969]

================================

Block 0x9ae
[0x9ae:0x9ba]
---
Predecessors: [0x965]
Successors: [0x9bb, 0x9bf]
---
0x9ae JUMPDEST
0x9af PUSH2 0x2c6
0x9b2 GAS
0x9b3 SUB
0x9b4 CALL
0x9b5 ISZERO
0x9b6 ISZERO
0x9b7 PUSH2 0x9bf
0x9ba JUMPI
---
0x9ae: JUMPDEST 
0x9af: V991 = 0x2c6
0x9b2: V992 = GAS
0x9b3: V993 = SUB V992 0x2c6
0x9b4: V994 = CALL V993 V969 0x0 V983 V984 V983 0x0
0x9b5: V995 = ISZERO V994
0x9b6: V996 = ISZERO V995
0x9b7: V997 = 0x9bf
0x9ba: JUMPI 0x9bf V996
---
Entry stack: [V13, 0xbf, V969, 0xb1b68fad, V980, 0x0, V983, V984, V983, 0x0, V969]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xbf, V969, 0xb1b68fad, V980]

================================

Block 0x9bb
[0x9bb:0x9be]
---
Predecessors: [0x9ae]
Successors: []
---
0x9bb PUSH1 0x0
0x9bd DUP1
0x9be REVERT
---
0x9bb: V998 = 0x0
0x9be: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V969, 0xb1b68fad, V980]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V969, 0xb1b68fad, V980]

================================

Block 0x9bf
[0x9bf:0xa14]
---
Predecessors: [0x9ae]
Successors: [0xa15, 0xa19]
---
0x9bf JUMPDEST
0x9c0 POP
0x9c1 POP
0x9c2 PUSH1 0x8
0x9c4 SLOAD
0x9c5 PUSH1 0x0
0x9c7 SLOAD
0x9c8 PUSH1 0x1
0x9ca PUSH1 0xa0
0x9cc PUSH1 0x2
0x9ce EXP
0x9cf SUB
0x9d0 SWAP2
0x9d1 DUP3
0x9d2 AND
0x9d3 SWAP3
0x9d4 POP
0x9d5 PUSH4 0xf2fde38b
0x9da SWAP2
0x9db AND
0x9dc PUSH1 0x40
0x9de MLOAD
0x9df PUSH1 0xe0
0x9e1 PUSH1 0x2
0x9e3 EXP
0x9e4 PUSH4 0xffffffff
0x9e9 DUP5
0x9ea AND
0x9eb MUL
0x9ec DUP2
0x9ed MSTORE
0x9ee PUSH1 0x1
0x9f0 PUSH1 0xa0
0x9f2 PUSH1 0x2
0x9f4 EXP
0x9f5 SUB
0x9f6 SWAP1
0x9f7 SWAP2
0x9f8 AND
0x9f9 PUSH1 0x4
0x9fb DUP3
0x9fc ADD
0x9fd MSTORE
0x9fe PUSH1 0x24
0xa00 ADD
0xa01 PUSH1 0x0
0xa03 PUSH1 0x40
0xa05 MLOAD
0xa06 DUP1
0xa07 DUP4
0xa08 SUB
0xa09 DUP2
0xa0a PUSH1 0x0
0xa0c DUP8
0xa0d DUP1
0xa0e EXTCODESIZE
0xa0f ISZERO
0xa10 ISZERO
0xa11 PUSH2 0xa19
0xa14 JUMPI
---
0x9bf: JUMPDEST 
0x9c2: V999 = 0x8
0x9c4: V1000 = S[0x8]
0x9c5: V1001 = 0x0
0x9c7: V1002 = S[0x0]
0x9c8: V1003 = 0x1
0x9ca: V1004 = 0xa0
0x9cc: V1005 = 0x2
0x9ce: V1006 = EXP 0x2 0xa0
0x9cf: V1007 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d2: V1008 = AND 0xffffffffffffffffffffffffffffffffffffffff V1000
0x9d5: V1009 = 0xf2fde38b
0x9db: V1010 = AND 0xffffffffffffffffffffffffffffffffffffffff V1002
0x9dc: V1011 = 0x40
0x9de: V1012 = M[0x40]
0x9df: V1013 = 0xe0
0x9e1: V1014 = 0x2
0x9e3: V1015 = EXP 0x2 0xe0
0x9e4: V1016 = 0xffffffff
0x9ea: V1017 = AND 0xf2fde38b 0xffffffff
0x9eb: V1018 = MUL 0xf2fde38b 0x100000000000000000000000000000000000000000000000000000000
0x9ed: M[V1012] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x9ee: V1019 = 0x1
0x9f0: V1020 = 0xa0
0x9f2: V1021 = 0x2
0x9f4: V1022 = EXP 0x2 0xa0
0x9f5: V1023 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f8: V1024 = AND V1010 0xffffffffffffffffffffffffffffffffffffffff
0x9f9: V1025 = 0x4
0x9fc: V1026 = ADD V1012 0x4
0x9fd: M[V1026] = V1024
0x9fe: V1027 = 0x24
0xa00: V1028 = ADD 0x24 V1012
0xa01: V1029 = 0x0
0xa03: V1030 = 0x40
0xa05: V1031 = M[0x40]
0xa08: V1032 = SUB V1028 V1031
0xa0a: V1033 = 0x0
0xa0e: V1034 = EXTCODESIZE V1008
0xa0f: V1035 = ISZERO V1034
0xa10: V1036 = ISZERO V1035
0xa11: V1037 = 0xa19
0xa14: JUMPI 0xa19 V1036
---
Entry stack: [V13, 0xbf, V969, 0xb1b68fad, V980]
Stack pops: 3
Stack additions: [V1008, 0xf2fde38b, V1028, 0x0, V1031, V1032, V1031, 0x0, V1008]
Exit stack: [V13, 0xbf, V1008, 0xf2fde38b, V1028, 0x0, V1031, V1032, V1031, 0x0, V1008]

================================

Block 0xa15
[0xa15:0xa18]
---
Predecessors: [0x9bf]
Successors: []
---
0xa15 PUSH1 0x0
0xa17 DUP1
0xa18 REVERT
---
0xa15: V1038 = 0x0
0xa18: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V1008, 0xf2fde38b, V1028, 0x0, V1031, V1032, V1031, 0x0, V1008]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V1008, 0xf2fde38b, V1028, 0x0, V1031, V1032, V1031, 0x0, V1008]

================================

Block 0xa19
[0xa19:0xa25]
---
Predecessors: [0x9bf]
Successors: [0xa26, 0xa2a]
---
0xa19 JUMPDEST
0xa1a PUSH2 0x2c6
0xa1d GAS
0xa1e SUB
0xa1f CALL
0xa20 ISZERO
0xa21 ISZERO
0xa22 PUSH2 0xa2a
0xa25 JUMPI
---
0xa19: JUMPDEST 
0xa1a: V1039 = 0x2c6
0xa1d: V1040 = GAS
0xa1e: V1041 = SUB V1040 0x2c6
0xa1f: V1042 = CALL V1041 V1008 0x0 V1031 V1032 V1031 0x0
0xa20: V1043 = ISZERO V1042
0xa21: V1044 = ISZERO V1043
0xa22: V1045 = 0xa2a
0xa25: JUMPI 0xa2a V1044
---
Entry stack: [V13, 0xbf, V1008, 0xf2fde38b, V1028, 0x0, V1031, V1032, V1031, 0x0, V1008]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xbf, V1008, 0xf2fde38b, V1028]

================================

Block 0xa26
[0xa26:0xa29]
---
Predecessors: [0xa19]
Successors: []
---
0xa26 PUSH1 0x0
0xa28 DUP1
0xa29 REVERT
---
0xa26: V1046 = 0x0
0xa29: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V1008, 0xf2fde38b, V1028]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V1008, 0xf2fde38b, V1028]

================================

Block 0xa2a
[0xa2a:0xa3b]
---
Predecessors: [0xa19]
Successors: []
---
0xa2a JUMPDEST
0xa2b POP
0xa2c POP
0xa2d PUSH1 0x9
0xa2f SLOAD
0xa30 PUSH1 0x1
0xa32 PUSH1 0xa0
0xa34 PUSH1 0x2
0xa36 EXP
0xa37 SUB
0xa38 AND
0xa39 SWAP1
0xa3a POP
0xa3b SELFDESTRUCT
---
0xa2a: JUMPDEST 
0xa2d: V1047 = 0x9
0xa2f: V1048 = S[0x9]
0xa30: V1049 = 0x1
0xa32: V1050 = 0xa0
0xa34: V1051 = 0x2
0xa36: V1052 = EXP 0x2 0xa0
0xa37: V1053 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa38: V1054 = AND 0xffffffffffffffffffffffffffffffffffffffff V1048
0xa3b: SELFDESTRUCT V1054
---
Entry stack: [V13, 0xbf, V1008, 0xf2fde38b, V1028]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xbf]

================================

Block 0xa3c
[0xa3c:0xa52]
---
Predecessors: [0x150]
Successors: [0xa53, 0xa57]
---
0xa3c JUMPDEST
0xa3d PUSH1 0x0
0xa3f SLOAD
0xa40 CALLER
0xa41 PUSH1 0x1
0xa43 PUSH1 0xa0
0xa45 PUSH1 0x2
0xa47 EXP
0xa48 SUB
0xa49 SWAP1
0xa4a DUP2
0xa4b AND
0xa4c SWAP2
0xa4d AND
0xa4e EQ
0xa4f PUSH2 0xa57
0xa52 JUMPI
---
0xa3c: JUMPDEST 
0xa3d: V1055 = 0x0
0xa3f: V1056 = S[0x0]
0xa40: V1057 = CALLER
0xa41: V1058 = 0x1
0xa43: V1059 = 0xa0
0xa45: V1060 = 0x2
0xa47: V1061 = EXP 0x2 0xa0
0xa48: V1062 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4b: V1063 = AND 0xffffffffffffffffffffffffffffffffffffffff V1057
0xa4d: V1064 = AND V1056 0xffffffffffffffffffffffffffffffffffffffff
0xa4e: V1065 = EQ V1064 V1063
0xa4f: V1066 = 0xa57
0xa52: JUMPI 0xa57 V1065
---
Entry stack: [V13, 0xbf, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V108]

================================

Block 0xa53
[0xa53:0xa56]
---
Predecessors: [0xa3c]
Successors: []
---
0xa53 PUSH1 0x0
0xa55 DUP1
0xa56 REVERT
---
0xa53: V1067 = 0x0
0xa56: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V108]

================================

Block 0xa57
[0xa57:0xa60]
---
Predecessors: [0xa3c]
Successors: [0xa61, 0xa65]
---
0xa57 JUMPDEST
0xa58 PUSH1 0x5
0xa5a SLOAD
0xa5b TIMESTAMP
0xa5c LT
0xa5d PUSH2 0xa65
0xa60 JUMPI
---
0xa57: JUMPDEST 
0xa58: V1068 = 0x5
0xa5a: V1069 = S[0x5]
0xa5b: V1070 = TIMESTAMP
0xa5c: V1071 = LT V1070 V1069
0xa5d: V1072 = 0xa65
0xa60: JUMPI 0xa65 V1071
---
Entry stack: [V13, 0xbf, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V108]

================================

Block 0xa61
[0xa61:0xa64]
---
Predecessors: [0xa57]
Successors: []
---
0xa61 PUSH1 0x0
0xa63 DUP1
0xa64 REVERT
---
0xa61: V1073 = 0x0
0xa64: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V108]

================================

Block 0xa65
[0xa65:0xa9f]
---
Predecessors: [0xa57]
Successors: [0xbf]
---
0xa65 JUMPDEST
0xa66 PUSH1 0x4
0xa68 DUP2
0xa69 SWAP1
0xa6a SSTORE
0xa6b PUSH32 0x66cbca4f3c64fecf1dcb9ce094abcf7f68c3450a1d4e3a8e917dd621edb4ebe0
0xa8c DUP2
0xa8d PUSH1 0x40
0xa8f MLOAD
0xa90 SWAP1
0xa91 DUP2
0xa92 MSTORE
0xa93 PUSH1 0x20
0xa95 ADD
0xa96 PUSH1 0x40
0xa98 MLOAD
0xa99 DUP1
0xa9a SWAP2
0xa9b SUB
0xa9c SWAP1
0xa9d LOG1
0xa9e POP
0xa9f JUMP
---
0xa65: JUMPDEST 
0xa66: V1074 = 0x4
0xa6a: S[0x4] = V108
0xa6b: V1075 = 0x66cbca4f3c64fecf1dcb9ce094abcf7f68c3450a1d4e3a8e917dd621edb4ebe0
0xa8d: V1076 = 0x40
0xa8f: V1077 = M[0x40]
0xa92: M[V1077] = V108
0xa93: V1078 = 0x20
0xa95: V1079 = ADD 0x20 V1077
0xa96: V1080 = 0x40
0xa98: V1081 = M[0x40]
0xa9b: V1082 = SUB V1079 V1081
0xa9d: LOG V1081 V1082 0x66cbca4f3c64fecf1dcb9ce094abcf7f68c3450a1d4e3a8e917dd621edb4ebe0
0xa9f: JUMP 0xbf
---
Entry stack: [V13, 0xbf, V108]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xaa0
[0xaa0:0xaae]
---
Predecessors: [0x166]
Successors: [0x16e]
---
0xaa0 JUMPDEST
0xaa1 PUSH1 0x0
0xaa3 SLOAD
0xaa4 PUSH1 0x1
0xaa6 PUSH1 0xa0
0xaa8 PUSH1 0x2
0xaaa EXP
0xaab SUB
0xaac AND
0xaad DUP2
0xaae JUMP
---
0xaa0: JUMPDEST 
0xaa1: V1083 = 0x0
0xaa3: V1084 = S[0x0]
0xaa4: V1085 = 0x1
0xaa6: V1086 = 0xa0
0xaa8: V1087 = 0x2
0xaaa: V1088 = EXP 0x2 0xa0
0xaab: V1089 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaac: V1090 = AND 0xffffffffffffffffffffffffffffffffffffffff V1084
0xaae: JUMP 0x16e
---
Entry stack: [V13, 0x16e]
Stack pops: 1
Stack additions: [S0, V1090]
Exit stack: [V13, 0x16e, V1090]

================================

Block 0xaaf
[0xaaf:0xab4]
---
Predecessors: [0x195]
Successors: [0xd4]
---
0xaaf JUMPDEST
0xab0 PUSH1 0x5
0xab2 SLOAD
0xab3 DUP2
0xab4 JUMP
---
0xaaf: JUMPDEST 
0xab0: V1091 = 0x5
0xab2: V1092 = S[0x5]
0xab4: JUMP 0xd4
---
Entry stack: [V13, 0xd4]
Stack pops: 1
Stack additions: [S0, V1092]
Exit stack: [V13, 0xd4, V1092]

================================

Block 0xab5
[0xab5:0xaba]
---
Predecessors: [0x1bc]
Successors: [0xd4]
---
0xab5 JUMPDEST
0xab6 PUSH1 0x6
0xab8 SLOAD
0xab9 DUP2
0xaba JUMP
---
0xab5: JUMPDEST 
0xab6: V1093 = 0x6
0xab8: V1094 = S[0x6]
0xaba: JUMP 0xd4
---
Entry stack: [V13, 0xd4]
Stack pops: 1
Stack additions: [S0, V1094]
Exit stack: [V13, 0xd4, V1094]

================================

Block 0xabb
[0xabb:0xad1]
---
Predecessors: [0x1cf]
Successors: [0xad2, 0xad6]
---
0xabb JUMPDEST
0xabc PUSH1 0x0
0xabe SLOAD
0xabf CALLER
0xac0 PUSH1 0x1
0xac2 PUSH1 0xa0
0xac4 PUSH1 0x2
0xac6 EXP
0xac7 SUB
0xac8 SWAP1
0xac9 DUP2
0xaca AND
0xacb SWAP2
0xacc AND
0xacd EQ
0xace PUSH2 0xad6
0xad1 JUMPI
---
0xabb: JUMPDEST 
0xabc: V1095 = 0x0
0xabe: V1096 = S[0x0]
0xabf: V1097 = CALLER
0xac0: V1098 = 0x1
0xac2: V1099 = 0xa0
0xac4: V1100 = 0x2
0xac6: V1101 = EXP 0x2 0xa0
0xac7: V1102 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaca: V1103 = AND 0xffffffffffffffffffffffffffffffffffffffff V1097
0xacc: V1104 = AND V1096 0xffffffffffffffffffffffffffffffffffffffff
0xacd: V1105 = EQ V1104 V1103
0xace: V1106 = 0xad6
0xad1: JUMPI 0xad6 V1105
---
Entry stack: [V13, 0xbf, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V163]

================================

Block 0xad2
[0xad2:0xad5]
---
Predecessors: [0xabb]
Successors: []
---
0xad2 PUSH1 0x0
0xad4 DUP1
0xad5 REVERT
---
0xad2: V1107 = 0x0
0xad5: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbf, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, V163]

================================

Block 0xad6
[0xad6:0xae5]
---
Predecessors: [0xabb]
Successors: [0xae6, 0xb0e]
---
0xad6 JUMPDEST
0xad7 PUSH1 0x1
0xad9 PUSH1 0xa0
0xadb PUSH1 0x2
0xadd EXP
0xade SUB
0xadf DUP2
0xae0 AND
0xae1 ISZERO
0xae2 PUSH2 0xb0e
0xae5 JUMPI
---
0xad6: JUMPDEST 
0xad7: V1108 = 0x1
0xad9: V1109 = 0xa0
0xadb: V1110 = 0x2
0xadd: V1111 = EXP 0x2 0xa0
0xade: V1112 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae0: V1113 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0xae1: V1114 = ISZERO V1113
0xae2: V1115 = 0xb0e
0xae5: JUMPI 0xb0e V1114
---
Entry stack: [V13, 0xbf, V163]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xbf, V163]

================================

Block 0xae6
[0xae6:0xb0d]
---
Predecessors: [0xad6]
Successors: [0xb0e]
---
0xae6 PUSH1 0x0
0xae8 DUP1
0xae9 SLOAD
0xaea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaff NOT
0xb00 AND
0xb01 PUSH1 0x1
0xb03 PUSH1 0xa0
0xb05 PUSH1 0x2
0xb07 EXP
0xb08 SUB
0xb09 DUP4
0xb0a AND
0xb0b OR
0xb0c SWAP1
0xb0d SSTORE
---
0xae6: V1116 = 0x0
0xae9: V1117 = S[0x0]
0xaea: V1118 = 0xffffffffffffffffffffffffffffffffffffffff
0xaff: V1119 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb00: V1120 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1117
0xb01: V1121 = 0x1
0xb03: V1122 = 0xa0
0xb05: V1123 = 0x2
0xb07: V1124 = EXP 0x2 0xa0
0xb08: V1125 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0a: V1126 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0xb0b: V1127 = OR V1126 V1120
0xb0d: S[0x0] = V1127
---
Entry stack: [V13, 0xbf, V163]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xbf, V163]

================================

Block 0xb0e
[0xb0e:0xb10]
---
Predecessors: [0xad6, 0xae6]
Successors: [0xbf]
---
0xb0e JUMPDEST
0xb0f POP
0xb10 JUMP
---
0xb0e: JUMPDEST 
0xb10: JUMP 0xbf
---
Entry stack: [V13, 0xbf, V163]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xb11
[0xb11:0xb1f]
---
Predecessors: [0x1ee]
Successors: [0x16e]
---
0xb11 JUMPDEST
0xb12 PUSH1 0x9
0xb14 SLOAD
0xb15 PUSH1 0x1
0xb17 PUSH1 0xa0
0xb19 PUSH1 0x2
0xb1b EXP
0xb1c SUB
0xb1d AND
0xb1e DUP2
0xb1f JUMP
---
0xb11: JUMPDEST 
0xb12: V1128 = 0x9
0xb14: V1129 = S[0x9]
0xb15: V1130 = 0x1
0xb17: V1131 = 0xa0
0xb19: V1132 = 0x2
0xb1b: V1133 = EXP 0x2 0xa0
0xb1c: V1134 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1d: V1135 = AND 0xffffffffffffffffffffffffffffffffffffffff V1129
0xb1f: JUMP 0x16e
---
Entry stack: [V13, 0x16e]
Stack pops: 1
Stack additions: [S0, V1135]
Exit stack: [V13, 0x16e, V1135]

================================

Block 0xb20
[0xb20:0xb2e]
---
Predecessors: [0x201]
Successors: [0x16e]
---
0xb20 JUMPDEST
0xb21 PUSH1 0x8
0xb23 SLOAD
0xb24 PUSH1 0x1
0xb26 PUSH1 0xa0
0xb28 PUSH1 0x2
0xb2a EXP
0xb2b SUB
0xb2c AND
0xb2d DUP2
0xb2e JUMP
---
0xb20: JUMPDEST 
0xb21: V1136 = 0x8
0xb23: V1137 = S[0x8]
0xb24: V1138 = 0x1
0xb26: V1139 = 0xa0
0xb28: V1140 = 0x2
0xb2a: V1141 = EXP 0x2 0xa0
0xb2b: V1142 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2c: V1143 = AND 0xffffffffffffffffffffffffffffffffffffffff V1137
0xb2e: JUMP 0x16e
---
Entry stack: [V13, 0x16e]
Stack pops: 1
Stack additions: [S0, V1143]
Exit stack: [V13, 0x16e, V1143]

================================

Block 0xb2f
[0xb2f:0xb39]
---
Predecessors: [0x2d5, 0x872]
Successors: [0xb3a, 0xb3b]
---
0xb2f JUMPDEST
0xb30 PUSH1 0x0
0xb32 DUP3
0xb33 DUP3
0xb34 GT
0xb35 ISZERO
0xb36 PUSH2 0xb3b
0xb39 JUMPI
---
0xb2f: JUMPDEST 
0xb30: V1144 = 0x0
0xb34: V1145 = GT S0 S1
0xb35: V1146 = ISZERO V1145
0xb36: V1147 = 0xb3b
0xb39: JUMPI 0xb3b V1146
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865, 0x89d}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865, 0x89d}, S1, S0, 0x0]

================================

Block 0xb3a
[0xb3a:0xb3a]
---
Predecessors: [0xb2f]
Successors: []
---
0xb3a INVALID
---
0xb3a: INVALID 
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865, 0x89d}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865, 0x89d}, S2, S1, 0x0]

================================

Block 0xb3b
[0xb3b:0xb40]
---
Predecessors: [0xb2f]
Successors: [0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865, 0x89d]
---
0xb3b JUMPDEST
0xb3c POP
0xb3d SWAP1
0xb3e SUB
0xb3f SWAP1
0xb40 JUMP
---
0xb3b: JUMPDEST 
0xb3e: V1148 = SUB S2 S1
0xb40: JUMP {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865, 0x89d}
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, {0x2eb, 0x384, 0x530, 0x59e, 0x7f7, 0x865, 0x89d}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1148]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, V1148]

================================

Block 0xb41
[0xb41:0xb4d]
---
Predecessors: [0x318]
Successors: [0xb4e, 0xb5d]
---
0xb41 JUMPDEST
0xb42 PUSH1 0x0
0xb44 DUP3
0xb45 DUP3
0xb46 MUL
0xb47 DUP4
0xb48 ISZERO
0xb49 DUP1
0xb4a PUSH2 0xb5d
0xb4d JUMPI
---
0xb41: JUMPDEST 
0xb42: V1149 = 0x0
0xb46: V1150 = MUL V295 V294
0xb48: V1151 = ISZERO V294
0xb4a: V1152 = 0xb5d
0xb4d: JUMPI 0xb5d V1151
---
Entry stack: [V13, 0xbf, S7, V295, S5, S4, V274, 0x32e, V294, V295]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1150, V1151]
Exit stack: [V13, 0xbf, S7, V295, S5, S4, V274, 0x32e, V294, V295, 0x0, V1150, V1151]

================================

Block 0xb4e
[0xb4e:0xb58]
---
Predecessors: [0xb41]
Successors: [0xb59, 0xb5a]
---
0xb4e POP
0xb4f DUP3
0xb50 DUP5
0xb51 DUP3
0xb52 DUP2
0xb53 ISZERO
0xb54 ISZERO
0xb55 PUSH2 0xb5a
0xb58 JUMPI
---
0xb53: V1153 = ISZERO V294
0xb54: V1154 = ISZERO V1153
0xb55: V1155 = 0xb5a
0xb58: JUMPI 0xb5a V1154
---
Entry stack: [V13, 0xbf, S10, V295, S8, S7, V274, 0x32e, V294, V295, 0x0, V1150, V1151]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V13, 0xbf, S10, V295, S8, S7, V274, 0x32e, V294, V295, 0x0, V1150, V295, V294, V1150]

================================

Block 0xb59
[0xb59:0xb59]
---
Predecessors: [0xb4e]
Successors: []
---
0xb59 INVALID
---
0xb59: INVALID 
---
Entry stack: [V13, 0xbf, S12, V295, S10, S9, V274, 0x32e, V294, V295, 0x0, V1150, V295, V294, V1150]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S12, V295, S10, S9, V274, 0x32e, V294, V295, 0x0, V1150, V295, V294, V1150]

================================

Block 0xb5a
[0xb5a:0xb5c]
---
Predecessors: [0xb4e]
Successors: [0xb5d]
---
0xb5a JUMPDEST
0xb5b DIV
0xb5c EQ
---
0xb5a: JUMPDEST 
0xb5b: V1156 = DIV V1150 V294
0xb5c: V1157 = EQ V1156 V295
---
Entry stack: [V13, 0xbf, S12, V295, S10, S9, V274, 0x32e, V294, V295, 0x0, V1150, V295, V294, V1150]
Stack pops: 3
Stack additions: [V1157]
Exit stack: [V13, 0xbf, S12, V295, S10, S9, V274, 0x32e, V294, V295, 0x0, V1150, V1157]

================================

Block 0xb5d
[0xb5d:0xb63]
---
Predecessors: [0xb41, 0xb5a]
Successors: [0xb64, 0xb65]
---
0xb5d JUMPDEST
0xb5e ISZERO
0xb5f ISZERO
0xb60 PUSH2 0xb65
0xb63 JUMPI
---
0xb5d: JUMPDEST 
0xb5e: V1158 = ISZERO S0
0xb5f: V1159 = ISZERO V1158
0xb60: V1160 = 0xb65
0xb63: JUMPI 0xb65 V1159
---
Entry stack: [V13, 0xbf, S10, V295, S8, S7, V274, 0x32e, V294, V295, 0x0, V1150, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xbf, S10, V295, S8, S7, V274, 0x32e, V294, V295, 0x0, V1150]

================================

Block 0xb64
[0xb64:0xb64]
---
Predecessors: [0xb5d]
Successors: []
---
0xb64 INVALID
---
0xb64: INVALID 
---
Entry stack: [V13, 0xbf, S9, V295, S7, S6, V274, 0x32e, V294, V295, 0x0, V1150]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S9, V295, S7, S6, V274, 0x32e, V294, V295, 0x0, V1150]

================================

Block 0xb65
[0xb65:0xb6b]
---
Predecessors: [0xb5d, 0xb8c]
Successors: [0x32e, 0x3af, 0x3db]
---
0xb65 JUMPDEST
0xb66 SWAP4
0xb67 SWAP3
0xb68 POP
0xb69 POP
0xb6a POP
0xb6b JUMP
---
0xb65: JUMPDEST 
0xb6b: JUMP {0x32e, 0x3af, 0x3db}
---
Entry stack: [V13, 0xbf, S9, S8, S7, S6, S5, {0x32e, 0x3af, 0x3db}, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, 0xbf, S9, S8, S7, S6, S5, S0]

================================

Block 0xb6c
[0xb6c:0xb76]
---
Predecessors: [0x38b]
Successors: [0xb77, 0xb78]
---
0xb6c JUMPDEST
0xb6d PUSH1 0x0
0xb6f DUP1
0xb70 DUP1
0xb71 DUP4
0xb72 GT
0xb73 PUSH2 0xb78
0xb76 JUMPI
---
0xb6c: JUMPDEST 
0xb6d: V1161 = 0x0
0xb72: V1162 = GT 0x5 0x0
0xb73: V1163 = 0xb78
0xb76: JUMPI 0xb78 0x1
---
Entry stack: [V13, 0xbf, S8, S7, S6, 0x1, S4, 0x3af, 0x3a2, S1, 0x5]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V13, 0xbf, S8, S7, S6, 0x1, S4, 0x3af, 0x3a2, S1, 0x5, 0x0, 0x0]

================================

Block 0xb77
[0xb77:0xb77]
---
Predecessors: [0xb6c]
Successors: []
---
0xb77 INVALID
---
0xb77: INVALID 
---
Entry stack: [V13, 0xbf, S10, S9, S8, 0x1, S6, 0x3af, 0x3a2, S3, 0x5, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S10, S9, S8, 0x1, S6, 0x3af, 0x3a2, S3, 0x5, 0x0, 0x0]

================================

Block 0xb78
[0xb78:0xb81]
---
Predecessors: [0xb6c]
Successors: [0xb82, 0xb83]
---
0xb78 JUMPDEST
0xb79 DUP3
0xb7a DUP5
0xb7b DUP2
0xb7c ISZERO
0xb7d ISZERO
0xb7e PUSH2 0xb83
0xb81 JUMPI
---
0xb78: JUMPDEST 
0xb7c: V1164 = ISZERO 0x5
0xb7d: V1165 = ISZERO 0x0
0xb7e: V1166 = 0xb83
0xb81: JUMPI 0xb83 0x1
---
Entry stack: [V13, 0xbf, S10, S9, S8, 0x1, S6, 0x3af, 0x3a2, S3, 0x5, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S2, S3]
Exit stack: [V13, 0xbf, S10, S9, S8, 0x1, S6, 0x3af, 0x3a2, S3, 0x5, 0x0, 0x0, 0x5, S3]

================================

Block 0xb82
[0xb82:0xb82]
---
Predecessors: [0xb78]
Successors: []
---
0xb82 INVALID
---
0xb82: INVALID 
---
Entry stack: [V13, 0xbf, S12, S11, S10, 0x1, S8, 0x3af, 0x3a2, S5, 0x5, 0x0, 0x0, 0x5, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S12, S11, S10, 0x1, S8, 0x3af, 0x3a2, S5, 0x5, 0x0, 0x0, 0x5, S0]

================================

Block 0xb83
[0xb83:0xb8b]
---
Predecessors: [0xb78]
Successors: [0x3a2]
---
0xb83 JUMPDEST
0xb84 DIV
0xb85 SWAP5
0xb86 SWAP4
0xb87 POP
0xb88 POP
0xb89 POP
0xb8a POP
0xb8b JUMP
---
0xb83: JUMPDEST 
0xb84: V1167 = DIV S0 0x5
0xb8b: JUMP 0x3a2
---
Entry stack: [V13, 0xbf, S12, S11, S10, 0x1, S8, 0x3af, 0x3a2, S5, 0x5, 0x0, 0x0, 0x5, S0]
Stack pops: 7
Stack additions: [V1167]
Exit stack: [V13, 0xbf, S12, S11, S10, 0x1, S8, 0x3af, V1167]

================================

Block 0xb8c
[0xb8c:0xb99]
---
Predecessors: [0x3a2, 0x3b2]
Successors: [0xb65, 0xb9a]
---
0xb8c JUMPDEST
0xb8d PUSH1 0x0
0xb8f DUP3
0xb90 DUP3
0xb91 ADD
0xb92 DUP4
0xb93 DUP2
0xb94 LT
0xb95 ISZERO
0xb96 PUSH2 0xb65
0xb99 JUMPI
---
0xb8c: JUMPDEST 
0xb8d: V1168 = 0x0
0xb91: V1169 = ADD S0 S1
0xb94: V1170 = LT V1169 S1
0xb95: V1171 = ISZERO V1170
0xb96: V1172 = 0xb65
0xb99: JUMPI 0xb65 V1171
---
Entry stack: [V13, 0xbf, S7, S6, S5, S4, S3, {0x3af, 0x3db}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1169]
Exit stack: [V13, 0xbf, S7, S6, S5, S4, S3, {0x3af, 0x3db}, S1, S0, 0x0, V1169]

================================

Block 0xb9a
[0xb9a:0xb9a]
---
Predecessors: [0xb8c]
Successors: []
---
0xb9a INVALID
---
0xb9a: INVALID 
---
Entry stack: [V13, 0xbf, S9, S8, S7, S6, S5, {0x3af, 0x3db}, S3, S2, 0x0, V1169]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbf, S9, S8, S7, S6, S5, {0x3af, 0x3db}, S3, S2, 0x0, V1169]

================================

Block 0xb9b
[0xb9b:0xbc6]
---
Predecessors: []
Successors: []
---
0xb9b STOP
0xb9c LOG1
0xb9d PUSH6 0x627a7a723058
0xba4 SHA3
0xba5 DUP12
0xba6 PUSH9 0x570ea952943ad99574
0xbb0 DUP1
0xbb1 MISSING 0xce
0xbb2 MISSING 0xb6
0xbb3 MISSING 0xb0
0xbb4 MISSING 0xe
0xbb5 SWAP9
0xbb6 RETURNDATASIZE
0xbb7 MISSING 0xec
0xbb8 DUP1
0xbb9 SWAP3
0xbba LOG4
0xbbb MISSING 0xb3
0xbbc LOG4
0xbbd MISSING 0x4f
0xbbe SWAP4
0xbbf COINBASE
0xbc0 CALLVALUE
0xbc1 MISSING 0xb6
0xbc2 MISSING 0xeb
0xbc3 MISSING 0xf7
0xbc4 DUP11
0xbc5 STOP
0xbc6 MISSING 0x29
---
0xb9b: STOP 
0xb9c: LOG S0 S1 S2
0xb9d: V1173 = 0x627a7a723058
0xba4: V1174 = SHA3 0x627a7a723058 S3
0xba6: V1175 = 0x570ea952943ad99574
0xbb1: MISSING 0xce
0xbb2: MISSING 0xb6
0xbb3: MISSING 0xb0
0xbb4: MISSING 0xe
0xbb6: V1176 = RETURNDATASIZE
0xbb7: MISSING 0xec
0xbba: LOG S2 S0 S1 S0 S3 S4
0xbbb: MISSING 0xb3
0xbbc: LOG S0 S1 S2 S3 S4 S5
0xbbd: MISSING 0x4f
0xbbf: V1177 = COINBASE
0xbc0: V1178 = CALLVALUE
0xbc1: MISSING 0xb6
0xbc2: MISSING 0xeb
0xbc3: MISSING 0xf7
0xbc5: STOP 
0xbc6: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x570ea952943ad99574, 0x570ea952943ad99574, S14, V1174, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V1176, S9, S1, S2, S3, S4, S5, S6, S7, S8, S0, V1178, V1177, S4, S1, S2, S3, S0, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10]
Exit stack: []

================================

Function 0:
Public function signature: 0x12065fe0
Entry block: 0xc1
Exit block: 0xd4
Body: 0xc1, 0xc8, 0xcc, 0xd4, 0x4d0

Function 1:
Public function signature: 0x3aedfb8b
Entry block: 0xe6
Exit block: 0xbf
Body: 0xbf, 0xe6, 0xed, 0xf1, 0x4de, 0x530, 0x53f, 0x541, 0x548, 0x54c, 0x59e, 0x5a8, 0x5ac, 0x5e1, 0x5e5, 0x629, 0x62d, 0x63a, 0x63e, 0x683, 0x687, 0x694, 0x698

Function 2:
Public function signature: 0x3cecd719
Entry block: 0xf9
Exit block: 0xbf
Body: 0xbf, 0xf9, 0x100, 0x104, 0x69f, 0x6a9, 0x6ad, 0x6e2, 0x6e6, 0x72a, 0x72e, 0x73b, 0x73f, 0x784, 0x788, 0x795, 0x799

Function 3:
Public function signature: 0x51c69b12
Entry block: 0x10c
Exit block: 0xd4
Body: 0xd4, 0x10c, 0x113, 0x117, 0x79e

Function 4:
Public function signature: 0x590e1ae3
Entry block: 0x11f
Exit block: 0xbf
Body: 0xbf, 0x11f, 0x126, 0x12a, 0x7a4, 0x7f7, 0x806, 0x808, 0x80f, 0x813, 0x865, 0x86e, 0x872

Function 5:
Public function signature: 0x83197ef0
Entry block: 0x132
Exit block: 0xa26
Body: 0x132, 0x139, 0x13d, 0x8e3, 0x8fa, 0x8fe, 0x908, 0x90c, 0x950, 0x954, 0x961, 0x965, 0x9aa, 0x9ae, 0x9bb, 0x9bf, 0xa15, 0xa19, 0xa26, 0xa2a

Function 6:
Public function signature: 0x8d6cc56d
Entry block: 0x145
Exit block: 0xbf
Body: 0xbf, 0x145, 0x14c, 0x150, 0xa3c, 0xa53, 0xa57, 0xa61, 0xa65

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x15b
Exit block: 0x16e
Body: 0x15b, 0x162, 0x166, 0x16e, 0xaa0

Function 8:
Public function signature: 0xbe9a6555
Entry block: 0x18a
Exit block: 0xd4
Body: 0xd4, 0x18a, 0x191, 0x195, 0xaaf

Function 9:
Public function signature: 0xcedbbeee
Entry block: 0x19d
Exit block: 0xbf
Body: 0xbf, 0x19d

Function 10:
Public function signature: 0xefbe1c1c
Entry block: 0x1b1
Exit block: 0xd4
Body: 0xd4, 0x1b1, 0x1b8, 0x1bc, 0xab5

Function 11:
Public function signature: 0xf2fde38b
Entry block: 0x1c4
Exit block: 0xbf
Body: 0xbf, 0x1c4, 0x1cb, 0x1cf, 0xabb, 0xad2, 0xad6, 0xae6, 0xb0e

Function 12:
Public function signature: 0xfbfa77cf
Entry block: 0x1e3
Exit block: 0x16e
Body: 0x16e, 0x1e3, 0x1ea, 0x1ee, 0xb11

Function 13:
Public function signature: 0xfc0c546a
Entry block: 0x1f6
Exit block: 0x16e
Body: 0x16e, 0x1f6, 0x1fd, 0x201, 0xb20

Function 14:
Public fallback function
Entry block: 0xb6
Exit block: 0xbf
Body: 0xb6, 0xbf

Function 15:
Private function
Entry block: 0x260
Exit block: 0xb3b
Body: 0x260, 0x271, 0x2c4, 0x2d5, 0xb2f, 0xb3b

Function 16:
Private function
Entry block: 0x209
Exit block: 0xb0e
Body: 0x209, 0x2eb, 0x2f9, 0x306, 0x30d, 0x318, 0x32e, 0x384, 0x38b, 0x3a2, 0x3af, 0x3b2, 0x3db, 0x453, 0x464, 0xb41, 0xb4e, 0xb5a, 0xb5d, 0xb65, 0xb6c, 0xb78, 0xb83, 0xb8c

