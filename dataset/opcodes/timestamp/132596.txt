Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x5f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x5f
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x5f
0xa: JUMPI 0x5f V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x77]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x29750e85
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x77
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x29750e85
0x39: V12 = EQ V10 0x29750e85
0x3a: V13 = 0x77
0x3d: JUMPI 0x77 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xa8]
---
0x3e DUP1
0x3f PUSH4 0x57ea89b6
0x44 EQ
0x45 PUSH2 0xa8
0x48 JUMPI
---
0x3f: V14 = 0x57ea89b6
0x44: V15 = EQ 0x57ea89b6 V10
0x45: V16 = 0xa8
0x48: JUMPI 0xa8 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xcf]
---
0x49 DUP1
0x4a PUSH4 0xd45baeab
0x4f EQ
0x50 PUSH2 0xcf
0x53 JUMPI
---
0x4a: V17 = 0xd45baeab
0x4f: V18 = EQ 0xd45baeab V10
0x50: V19 = 0xcf
0x53: JUMPI 0xcf V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0xf1]
---
0x54 DUP1
0x55 PUSH4 0xfc7e286d
0x5a EQ
0x5b PUSH2 0xf1
0x5e JUMPI
---
0x55: V20 = 0xfc7e286d
0x5a: V21 = EQ 0xfc7e286d V10
0x5b: V22 = 0xf1
0x5e: JUMPI 0xf1 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x65]
---
Predecessors: [0x0, 0x54]
Successors: [0x66, 0x6a]
---
0x5f JUMPDEST
0x60 CALLVALUE
0x61 ISZERO
0x62 PUSH2 0x6a
0x65 JUMPI
---
0x5f: JUMPDEST 
0x60: V23 = CALLVALUE
0x61: V24 = ISZERO V23
0x62: V25 = 0x6a
0x65: JUMPI 0x6a V24
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x66
[0x66:0x69]
---
Predecessors: [0x5f]
Successors: []
---
0x66 PUSH1 0x0
0x68 DUP1
0x69 REVERT
---
0x66: V26 = 0x0
0x69: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x6d]
---
Predecessors: [0x5f]
Successors: [0x6e]
---
0x6a JUMPDEST
0x6b PUSH2 0x75
---
0x6a: JUMPDEST 
0x6b: V27 = 0x75
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x75]
Exit stack: [V10, 0x75]

================================

Block 0x6e
[0x6e:0x72]
---
Predecessors: [0x6a]
Successors: []
---
0x6e JUMPDEST
0x6f PUSH1 0x0
0x71 DUP1
0x72 REVERT
---
0x6e: JUMPDEST 
0x6f: V28 = 0x0
0x72: REVERT 0x0 0x0
---
Entry stack: [V10, 0x75]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x75]

================================

Block 0x73
[0x73:0x76]
---
Predecessors: []
Successors: []
---
0x73 JUMPDEST
0x74 JUMP
0x75 JUMPDEST
0x76 STOP
---
0x73: JUMPDEST 
0x74: JUMP S0
0x75: JUMPDEST 
0x76: STOP 
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x77
[0x77:0x7d]
---
Predecessors: [0xb]
Successors: [0x7e, 0x82]
---
0x77 JUMPDEST
0x78 CALLVALUE
0x79 ISZERO
0x7a PUSH2 0x82
0x7d JUMPI
---
0x77: JUMPDEST 
0x78: V29 = CALLVALUE
0x79: V30 = ISZERO V29
0x7a: V31 = 0x82
0x7d: JUMPI 0x82 V30
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7e
[0x7e:0x81]
---
Predecessors: [0x77]
Successors: []
---
0x7e PUSH1 0x0
0x80 DUP1
0x81 REVERT
---
0x7e: V32 = 0x0
0x81: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x82
[0x82:0x95]
---
Predecessors: [0x77]
Successors: [0x122]
---
0x82 JUMPDEST
0x83 PUSH2 0x96
0x86 PUSH1 0x1
0x88 PUSH1 0xa0
0x8a PUSH1 0x2
0x8c EXP
0x8d SUB
0x8e PUSH1 0x4
0x90 CALLDATALOAD
0x91 AND
0x92 PUSH2 0x122
0x95 JUMP
---
0x82: JUMPDEST 
0x83: V33 = 0x96
0x86: V34 = 0x1
0x88: V35 = 0xa0
0x8a: V36 = 0x2
0x8c: V37 = EXP 0x2 0xa0
0x8d: V38 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e: V39 = 0x4
0x90: V40 = CALLDATALOAD 0x4
0x91: V41 = AND V40 0xffffffffffffffffffffffffffffffffffffffff
0x92: V42 = 0x122
0x95: JUMP 0x122
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x96, V41]
Exit stack: [V10, 0x96, V41]

================================

Block 0x96
[0x96:0xa7]
---
Predecessors: [0x122, 0x298]
Successors: []
---
0x96 JUMPDEST
0x97 PUSH1 0x40
0x99 MLOAD
0x9a SWAP1
0x9b DUP2
0x9c MSTORE
0x9d PUSH1 0x20
0x9f ADD
0xa0 PUSH1 0x40
0xa2 MLOAD
0xa3 DUP1
0xa4 SWAP2
0xa5 SUB
0xa6 SWAP1
0xa7 RETURN
---
0x96: JUMPDEST 
0x97: V43 = 0x40
0x99: V44 = M[0x40]
0x9c: M[V44] = S0
0x9d: V45 = 0x20
0x9f: V46 = ADD 0x20 V44
0xa0: V47 = 0x40
0xa2: V48 = M[0x40]
0xa5: V49 = SUB V46 V48
0xa7: RETURN V48 V49
---
Entry stack: [V10, 0x96, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x96]

================================

Block 0xa8
[0xa8:0xae]
---
Predecessors: [0x3e]
Successors: [0xaf, 0xb3]
---
0xa8 JUMPDEST
0xa9 CALLVALUE
0xaa ISZERO
0xab PUSH2 0xb3
0xae JUMPI
---
0xa8: JUMPDEST 
0xa9: V50 = CALLVALUE
0xaa: V51 = ISZERO V50
0xab: V52 = 0xb3
0xae: JUMPI 0xb3 V51
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xaf
[0xaf:0xb2]
---
Predecessors: [0xa8]
Successors: []
---
0xaf PUSH1 0x0
0xb1 DUP1
0xb2 REVERT
---
0xaf: V53 = 0x0
0xb2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb3
[0xb3:0xba]
---
Predecessors: [0xa8]
Successors: [0x134]
---
0xb3 JUMPDEST
0xb4 PUSH2 0xbb
0xb7 PUSH2 0x134
0xba JUMP
---
0xb3: JUMPDEST 
0xb4: V54 = 0xbb
0xb7: V55 = 0x134
0xba: JUMP 0x134
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xbb]
Exit stack: [V10, 0xbb]

================================

Block 0xbb
[0xbb:0xce]
---
Predecessors: [0x1fb, 0x290]
Successors: []
---
0xbb JUMPDEST
0xbc PUSH1 0x40
0xbe MLOAD
0xbf SWAP1
0xc0 ISZERO
0xc1 ISZERO
0xc2 DUP2
0xc3 MSTORE
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca DUP1
0xcb SWAP2
0xcc SUB
0xcd SWAP1
0xce RETURN
---
0xbb: JUMPDEST 
0xbc: V56 = 0x40
0xbe: V57 = M[0x40]
0xc0: V58 = ISZERO {0x0, 0x1}
0xc1: V59 = ISZERO V58
0xc3: M[V57] = V59
0xc4: V60 = 0x20
0xc6: V61 = ADD 0x20 V57
0xc7: V62 = 0x40
0xc9: V63 = M[0x40]
0xcc: V64 = SUB V61 V63
0xce: RETURN V63 V64
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xcf
[0xcf:0xdc]
---
Predecessors: [0x49]
Successors: [0x200]
---
0xcf JUMPDEST
0xd0 PUSH2 0xbb
0xd3 PUSH1 0xff
0xd5 PUSH1 0x4
0xd7 CALLDATALOAD
0xd8 AND
0xd9 PUSH2 0x200
0xdc JUMP
---
0xcf: JUMPDEST 
0xd0: V65 = 0xbb
0xd3: V66 = 0xff
0xd5: V67 = 0x4
0xd7: V68 = CALLDATALOAD 0x4
0xd8: V69 = AND V68 0xff
0xd9: V70 = 0x200
0xdc: JUMP 0x200
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xbb, V69]
Exit stack: [V10, 0xbb, V69]

================================

Block 0xdd
[0xdd:0xf0]
---
Predecessors: []
Successors: []
---
0xdd JUMPDEST
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 SWAP1
0xe2 ISZERO
0xe3 ISZERO
0xe4 DUP2
0xe5 MSTORE
0xe6 PUSH1 0x20
0xe8 ADD
0xe9 PUSH1 0x40
0xeb MLOAD
0xec DUP1
0xed SWAP2
0xee SUB
0xef SWAP1
0xf0 RETURN
---
0xdd: JUMPDEST 
0xde: V71 = 0x40
0xe0: V72 = M[0x40]
0xe2: V73 = ISZERO S0
0xe3: V74 = ISZERO V73
0xe5: M[V72] = V74
0xe6: V75 = 0x20
0xe8: V76 = ADD 0x20 V72
0xe9: V77 = 0x40
0xeb: V78 = M[0x40]
0xee: V79 = SUB V76 V78
0xf0: RETURN V78 V79
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0x54]
Successors: [0xf8, 0xfc]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 ISZERO
0xf4 PUSH2 0xfc
0xf7 JUMPI
---
0xf1: JUMPDEST 
0xf2: V80 = CALLVALUE
0xf3: V81 = ISZERO V80
0xf4: V82 = 0xfc
0xf7: JUMPI 0xfc V81
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf8
[0xf8:0xfb]
---
Predecessors: [0xf1]
Successors: []
---
0xf8 PUSH1 0x0
0xfa DUP1
0xfb REVERT
---
0xf8: V83 = 0x0
0xfb: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfc
[0xfc:0x10f]
---
Predecessors: [0xf1]
Successors: [0x298]
---
0xfc JUMPDEST
0xfd PUSH2 0x96
0x100 PUSH1 0x1
0x102 PUSH1 0xa0
0x104 PUSH1 0x2
0x106 EXP
0x107 SUB
0x108 PUSH1 0x4
0x10a CALLDATALOAD
0x10b AND
0x10c PUSH2 0x298
0x10f JUMP
---
0xfc: JUMPDEST 
0xfd: V84 = 0x96
0x100: V85 = 0x1
0x102: V86 = 0xa0
0x104: V87 = 0x2
0x106: V88 = EXP 0x2 0xa0
0x107: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0x108: V90 = 0x4
0x10a: V91 = CALLDATALOAD 0x4
0x10b: V92 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0x10c: V93 = 0x298
0x10f: JUMP 0x298
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x96, V92]
Exit stack: [V10, 0x96, V92]

================================

Block 0x110
[0x110:0x121]
---
Predecessors: []
Successors: []
---
0x110 JUMPDEST
0x111 PUSH1 0x40
0x113 MLOAD
0x114 SWAP1
0x115 DUP2
0x116 MSTORE
0x117 PUSH1 0x20
0x119 ADD
0x11a PUSH1 0x40
0x11c MLOAD
0x11d DUP1
0x11e SWAP2
0x11f SUB
0x120 SWAP1
0x121 RETURN
---
0x110: JUMPDEST 
0x111: V94 = 0x40
0x113: V95 = M[0x40]
0x116: M[V95] = S0
0x117: V96 = 0x20
0x119: V97 = ADD 0x20 V95
0x11a: V98 = 0x40
0x11c: V99 = M[0x40]
0x11f: V100 = SUB V97 V99
0x121: RETURN V99 V100
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x122
[0x122:0x133]
---
Predecessors: [0x82]
Successors: [0x96]
---
0x122 JUMPDEST
0x123 PUSH1 0x1
0x125 PUSH1 0x20
0x127 MSTORE
0x128 PUSH1 0x0
0x12a SWAP1
0x12b DUP2
0x12c MSTORE
0x12d PUSH1 0x40
0x12f SWAP1
0x130 SHA3
0x131 SLOAD
0x132 DUP2
0x133 JUMP
---
0x122: JUMPDEST 
0x123: V101 = 0x1
0x125: V102 = 0x20
0x127: M[0x20] = 0x1
0x128: V103 = 0x0
0x12c: M[0x0] = V41
0x12d: V104 = 0x40
0x130: V105 = SHA3 0x0 0x40
0x131: V106 = S[V105]
0x133: JUMP 0x96
---
Entry stack: [V10, 0x96, V41]
Stack pops: 2
Stack additions: [S1, V106]
Exit stack: [V10, 0x96, V106]

================================

Block 0x134
[0x134:0x15c]
---
Predecessors: [0xb3]
Successors: [0x15d, 0x179]
---
0x134 JUMPDEST
0x135 CALLER
0x136 PUSH1 0x1
0x138 PUSH1 0xa0
0x13a PUSH1 0x2
0x13c EXP
0x13d SUB
0x13e DUP2
0x13f AND
0x140 PUSH1 0x0
0x142 SWAP1
0x143 DUP2
0x144 MSTORE
0x145 PUSH1 0x1
0x147 PUSH1 0x20
0x149 MSTORE
0x14a PUSH1 0x40
0x14c DUP2
0x14d SHA3
0x14e SLOAD
0x14f SWAP1
0x150 SWAP2
0x151 SWAP1
0x152 DUP3
0x153 SWAP1
0x154 DUP2
0x155 SWAP1
0x156 GT
0x157 DUP1
0x158 ISZERO
0x159 PUSH2 0x179
0x15c JUMPI
---
0x134: JUMPDEST 
0x135: V107 = CALLER
0x136: V108 = 0x1
0x138: V109 = 0xa0
0x13a: V110 = 0x2
0x13c: V111 = EXP 0x2 0xa0
0x13d: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13f: V113 = AND V107 0xffffffffffffffffffffffffffffffffffffffff
0x140: V114 = 0x0
0x144: M[0x0] = V113
0x145: V115 = 0x1
0x147: V116 = 0x20
0x149: M[0x20] = 0x1
0x14a: V117 = 0x40
0x14d: V118 = SHA3 0x0 0x40
0x14e: V119 = S[V118]
0x156: V120 = GT V119 0x0
0x158: V121 = ISZERO V120
0x159: V122 = 0x179
0x15c: JUMPI 0x179 V121
---
Entry stack: [V10, 0xbb]
Stack pops: 0
Stack additions: [0x0, V107, 0x0, V120]
Exit stack: [V10, 0xbb, 0x0, V107, 0x0, V120]

================================

Block 0x15d
[0x15d:0x178]
---
Predecessors: [0x134]
Successors: [0x179]
---
0x15d POP
0x15e PUSH1 0x1
0x160 PUSH1 0xa0
0x162 PUSH1 0x2
0x164 EXP
0x165 SUB
0x166 DUP3
0x167 AND
0x168 PUSH1 0x0
0x16a SWAP1
0x16b DUP2
0x16c MSTORE
0x16d PUSH1 0x1
0x16f PUSH1 0x20
0x171 MSTORE
0x172 PUSH1 0x40
0x174 SWAP1
0x175 SHA3
0x176 SLOAD
0x177 TIMESTAMP
0x178 GT
---
0x15e: V123 = 0x1
0x160: V124 = 0xa0
0x162: V125 = 0x2
0x164: V126 = EXP 0x2 0xa0
0x165: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x167: V128 = AND V107 0xffffffffffffffffffffffffffffffffffffffff
0x168: V129 = 0x0
0x16c: M[0x0] = V128
0x16d: V130 = 0x1
0x16f: V131 = 0x20
0x171: M[0x20] = 0x1
0x172: V132 = 0x40
0x175: V133 = SHA3 0x0 0x40
0x176: V134 = S[V133]
0x177: V135 = TIMESTAMP
0x178: V136 = GT V135 V134
---
Entry stack: [V10, 0xbb, 0x0, V107, 0x0, V120]
Stack pops: 3
Stack additions: [S2, S1, V136]
Exit stack: [V10, 0xbb, 0x0, V107, 0x0, V136]

================================

Block 0x179
[0x179:0x17f]
---
Predecessors: [0x134, 0x15d]
Successors: [0x180, 0x19b]
---
0x179 JUMPDEST
0x17a DUP1
0x17b ISZERO
0x17c PUSH2 0x19b
0x17f JUMPI
---
0x179: JUMPDEST 
0x17b: V137 = ISZERO S0
0x17c: V138 = 0x19b
0x17f: JUMPI 0x19b V137
---
Entry stack: [V10, 0xbb, 0x0, V107, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xbb, 0x0, V107, 0x0, S0]

================================

Block 0x180
[0x180:0x19a]
---
Predecessors: [0x179]
Successors: [0x19b]
---
0x180 POP
0x181 PUSH1 0x1
0x183 PUSH1 0xa0
0x185 PUSH1 0x2
0x187 EXP
0x188 SUB
0x189 DUP3
0x18a AND
0x18b PUSH1 0x0
0x18d SWAP1
0x18e DUP2
0x18f MSTORE
0x190 PUSH1 0x20
0x192 DUP2
0x193 SWAP1
0x194 MSTORE
0x195 PUSH1 0x40
0x197 DUP2
0x198 SHA3
0x199 SLOAD
0x19a GT
---
0x181: V139 = 0x1
0x183: V140 = 0xa0
0x185: V141 = 0x2
0x187: V142 = EXP 0x2 0xa0
0x188: V143 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18a: V144 = AND V107 0xffffffffffffffffffffffffffffffffffffffff
0x18b: V145 = 0x0
0x18f: M[0x0] = V144
0x190: V146 = 0x20
0x194: M[0x20] = 0x0
0x195: V147 = 0x40
0x198: V148 = SHA3 0x0 0x40
0x199: V149 = S[V148]
0x19a: V150 = GT V149 0x0
---
Entry stack: [V10, 0xbb, 0x0, V107, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, V150]
Exit stack: [V10, 0xbb, 0x0, V107, 0x0, V150]

================================

Block 0x19b
[0x19b:0x1a0]
---
Predecessors: [0x179, 0x180]
Successors: [0x1a1, 0x1f5]
---
0x19b JUMPDEST
0x19c ISZERO
0x19d PUSH2 0x1f5
0x1a0 JUMPI
---
0x19b: JUMPDEST 
0x19c: V151 = ISZERO S0
0x19d: V152 = 0x1f5
0x1a0: JUMPI 0x1f5 V151
---
Entry stack: [V10, 0xbb, 0x0, V107, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xbb, 0x0, V107, 0x0]

================================

Block 0x1a1
[0x1a1:0x1e7]
---
Predecessors: [0x19b]
Successors: [0x1e8, 0x1ec]
---
0x1a1 POP
0x1a2 PUSH1 0x1
0x1a4 PUSH1 0xa0
0x1a6 PUSH1 0x2
0x1a8 EXP
0x1a9 SUB
0x1aa DUP1
0x1ab DUP3
0x1ac AND
0x1ad PUSH1 0x0
0x1af SWAP1
0x1b0 DUP2
0x1b1 MSTORE
0x1b2 PUSH1 0x20
0x1b4 DUP2
0x1b5 SWAP1
0x1b6 MSTORE
0x1b7 PUSH1 0x40
0x1b9 DUP1
0x1ba DUP3
0x1bb SHA3
0x1bc DUP1
0x1bd SLOAD
0x1be SWAP3
0x1bf SWAP1
0x1c0 SSTORE
0x1c1 SWAP1
0x1c2 SWAP2
0x1c3 CALLER
0x1c4 AND
0x1c5 SWAP1
0x1c6 DUP3
0x1c7 ISZERO
0x1c8 PUSH2 0x8fc
0x1cb MUL
0x1cc SWAP1
0x1cd DUP4
0x1ce SWAP1
0x1cf MLOAD
0x1d0 PUSH1 0x0
0x1d2 PUSH1 0x40
0x1d4 MLOAD
0x1d5 DUP1
0x1d6 DUP4
0x1d7 SUB
0x1d8 DUP2
0x1d9 DUP6
0x1da DUP9
0x1db DUP9
0x1dc CALL
0x1dd SWAP4
0x1de POP
0x1df POP
0x1e0 POP
0x1e1 POP
0x1e2 ISZERO
0x1e3 ISZERO
0x1e4 PUSH2 0x1ec
0x1e7 JUMPI
---
0x1a2: V153 = 0x1
0x1a4: V154 = 0xa0
0x1a6: V155 = 0x2
0x1a8: V156 = EXP 0x2 0xa0
0x1a9: V157 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ac: V158 = AND V107 0xffffffffffffffffffffffffffffffffffffffff
0x1ad: V159 = 0x0
0x1b1: M[0x0] = V158
0x1b2: V160 = 0x20
0x1b6: M[0x20] = 0x0
0x1b7: V161 = 0x40
0x1bb: V162 = SHA3 0x0 0x40
0x1bd: V163 = S[V162]
0x1c0: S[V162] = 0x0
0x1c3: V164 = CALLER
0x1c4: V165 = AND V164 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: V166 = ISZERO V163
0x1c8: V167 = 0x8fc
0x1cb: V168 = MUL 0x8fc V166
0x1cf: V169 = M[0x40]
0x1d0: V170 = 0x0
0x1d2: V171 = 0x40
0x1d4: V172 = M[0x40]
0x1d7: V173 = SUB V169 V172
0x1dc: V174 = CALL V168 V165 V163 V172 V173 V172 0x0
0x1e2: V175 = ISZERO V174
0x1e3: V176 = ISZERO V175
0x1e4: V177 = 0x1ec
0x1e7: JUMPI 0x1ec V176
---
Entry stack: [V10, 0xbb, 0x0, V107, 0x0]
Stack pops: 2
Stack additions: [S1, V163]
Exit stack: [V10, 0xbb, 0x0, V107, V163]

================================

Block 0x1e8
[0x1e8:0x1eb]
---
Predecessors: [0x1a1]
Successors: []
---
0x1e8 PUSH1 0x0
0x1ea DUP1
0x1eb REVERT
---
0x1e8: V178 = 0x0
0x1eb: REVERT 0x0 0x0
---
Entry stack: [V10, 0xbb, 0x0, V107, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xbb, 0x0, V107, V163]

================================

Block 0x1ec
[0x1ec:0x1f4]
---
Predecessors: [0x1a1]
Successors: [0x1fa]
---
0x1ec JUMPDEST
0x1ed PUSH1 0x1
0x1ef SWAP3
0x1f0 POP
0x1f1 PUSH2 0x1fa
0x1f4 JUMP
---
0x1ec: JUMPDEST 
0x1ed: V179 = 0x1
0x1f1: V180 = 0x1fa
0x1f4: JUMP 0x1fa
---
Entry stack: [V10, 0xbb, 0x0, V107, V163]
Stack pops: 3
Stack additions: [0x1, S1, S0]
Exit stack: [V10, 0xbb, 0x1, V107, V163]

================================

Block 0x1f5
[0x1f5:0x1f9]
---
Predecessors: [0x19b]
Successors: [0x1fa]
---
0x1f5 JUMPDEST
0x1f6 PUSH1 0x0
0x1f8 SWAP3
0x1f9 POP
---
0x1f5: JUMPDEST 
0x1f6: V181 = 0x0
---
Entry stack: [V10, 0xbb, 0x0, V107, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V10, 0xbb, 0x0, V107, 0x0]

================================

Block 0x1fa
[0x1fa:0x1fa]
---
Predecessors: [0x1ec, 0x1f5]
Successors: [0x1fb]
---
0x1fa JUMPDEST
---
0x1fa: JUMPDEST 
---
Entry stack: [V10, 0xbb, {0x0, 0x1}, V107, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xbb, {0x0, 0x1}, V107, S0]

================================

Block 0x1fb
[0x1fb:0x1ff]
---
Predecessors: [0x1fa]
Successors: [0xbb]
---
0x1fb JUMPDEST
0x1fc POP
0x1fd POP
0x1fe SWAP1
0x1ff JUMP
---
0x1fb: JUMPDEST 
0x1ff: JUMP 0xbb
---
Entry stack: [V10, 0xbb, {0x0, 0x1}, V107, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x200
[0x200:0x238]
---
Predecessors: [0xcf]
Successors: [0x239, 0x262]
---
0x200 JUMPDEST
0x201 CALLER
0x202 PUSH1 0x1
0x204 PUSH1 0xa0
0x206 PUSH1 0x2
0x208 EXP
0x209 SUB
0x20a DUP2
0x20b AND
0x20c PUSH1 0x0
0x20e SWAP1
0x20f DUP2
0x210 MSTORE
0x211 PUSH1 0x20
0x213 DUP2
0x214 SWAP1
0x215 MSTORE
0x216 PUSH1 0x40
0x218 DUP2
0x219 SHA3
0x21a SLOAD
0x21b SWAP1
0x21c SWAP2
0x21d SWAP1
0x21e CALLVALUE
0x21f SWAP1
0x220 PUSH1 0xff
0x222 DUP6
0x223 AND
0x224 PUSH3 0x93a80
0x228 MUL
0x229 PUSH3 0xffffff
0x22d AND
0x22e TIMESTAMP
0x22f ADD
0x230 SWAP1
0x231 DUP5
0x232 SWAP1
0x233 GT
0x234 ISZERO
0x235 PUSH2 0x262
0x238 JUMPI
---
0x200: JUMPDEST 
0x201: V182 = CALLER
0x202: V183 = 0x1
0x204: V184 = 0xa0
0x206: V185 = 0x2
0x208: V186 = EXP 0x2 0xa0
0x209: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20b: V188 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V189 = 0x0
0x210: M[0x0] = V188
0x211: V190 = 0x20
0x215: M[0x20] = 0x0
0x216: V191 = 0x40
0x219: V192 = SHA3 0x0 0x40
0x21a: V193 = S[V192]
0x21e: V194 = CALLVALUE
0x220: V195 = 0xff
0x223: V196 = AND V69 0xff
0x224: V197 = 0x93a80
0x228: V198 = MUL 0x93a80 V196
0x229: V199 = 0xffffff
0x22d: V200 = AND 0xffffff V198
0x22e: V201 = TIMESTAMP
0x22f: V202 = ADD V201 V200
0x233: V203 = GT V193 0x0
0x234: V204 = ISZERO V203
0x235: V205 = 0x262
0x238: JUMPI 0x262 V204
---
Entry stack: [V10, 0xbb, V69]
Stack pops: 1
Stack additions: [S0, 0x0, V182, V194, V202]
Exit stack: [V10, 0xbb, V69, 0x0, V182, V194, V202]

================================

Block 0x239
[0x239:0x261]
---
Predecessors: [0x200]
Successors: [0x262]
---
0x239 POP
0x23a PUSH1 0x1
0x23c PUSH1 0xa0
0x23e PUSH1 0x2
0x240 EXP
0x241 SUB
0x242 DUP3
0x243 AND
0x244 PUSH1 0x0
0x246 SWAP1
0x247 DUP2
0x248 MSTORE
0x249 PUSH1 0x1
0x24b PUSH1 0x20
0x24d MSTORE
0x24e PUSH1 0x40
0x250 SWAP1
0x251 SHA3
0x252 SLOAD
0x253 PUSH3 0xffffff
0x257 PUSH3 0x93a80
0x25b PUSH1 0xff
0x25d DUP8
0x25e AND
0x25f MUL
0x260 AND
0x261 ADD
---
0x23a: V206 = 0x1
0x23c: V207 = 0xa0
0x23e: V208 = 0x2
0x240: V209 = EXP 0x2 0xa0
0x241: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x243: V211 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x244: V212 = 0x0
0x248: M[0x0] = V211
0x249: V213 = 0x1
0x24b: V214 = 0x20
0x24d: M[0x20] = 0x1
0x24e: V215 = 0x40
0x251: V216 = SHA3 0x0 0x40
0x252: V217 = S[V216]
0x253: V218 = 0xffffff
0x257: V219 = 0x93a80
0x25b: V220 = 0xff
0x25e: V221 = AND V69 0xff
0x25f: V222 = MUL V221 0x93a80
0x260: V223 = AND V222 0xffffff
0x261: V224 = ADD V223 V217
---
Entry stack: [V10, 0xbb, V69, 0x0, V182, V194, V202]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V224]
Exit stack: [V10, 0xbb, V69, 0x0, V182, V194, V224]

================================

Block 0x262
[0x262:0x28f]
---
Predecessors: [0x200, 0x239]
Successors: [0x290]
---
0x262 JUMPDEST
0x263 PUSH1 0x1
0x265 PUSH1 0xa0
0x267 PUSH1 0x2
0x269 EXP
0x26a SUB
0x26b DUP4
0x26c AND
0x26d PUSH1 0x0
0x26f SWAP1
0x270 DUP2
0x271 MSTORE
0x272 PUSH1 0x1
0x274 PUSH1 0x20
0x276 DUP2
0x277 DUP2
0x278 MSTORE
0x279 PUSH1 0x40
0x27b DUP1
0x27c DUP5
0x27d SHA3
0x27e DUP6
0x27f SWAP1
0x280 SSTORE
0x281 SWAP1
0x282 DUP4
0x283 SWAP1
0x284 MSTORE
0x285 SWAP1
0x286 SWAP2
0x287 SHA3
0x288 DUP1
0x289 SLOAD
0x28a DUP5
0x28b ADD
0x28c SWAP1
0x28d SSTORE
0x28e SWAP4
0x28f POP
---
0x262: JUMPDEST 
0x263: V225 = 0x1
0x265: V226 = 0xa0
0x267: V227 = 0x2
0x269: V228 = EXP 0x2 0xa0
0x26a: V229 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26c: V230 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x26d: V231 = 0x0
0x271: M[0x0] = V230
0x272: V232 = 0x1
0x274: V233 = 0x20
0x278: M[0x20] = 0x1
0x279: V234 = 0x40
0x27d: V235 = SHA3 0x0 0x40
0x280: S[V235] = S0
0x284: M[0x20] = 0x0
0x287: V236 = SHA3 0x0 0x40
0x289: V237 = S[V236]
0x28b: V238 = ADD V194 V237
0x28d: S[V236] = V238
---
Entry stack: [V10, 0xbb, V69, 0x0, V182, V194, S0]
Stack pops: 4
Stack additions: [0x1, S2, S1, S0]
Exit stack: [V10, 0xbb, V69, 0x1, V182, V194, S0]

================================

Block 0x290
[0x290:0x297]
---
Predecessors: [0x262]
Successors: [0xbb]
---
0x290 JUMPDEST
0x291 POP
0x292 POP
0x293 POP
0x294 SWAP2
0x295 SWAP1
0x296 POP
0x297 JUMP
---
0x290: JUMPDEST 
0x297: JUMP 0xbb
---
Entry stack: [V10, 0xbb, V69, 0x1, V182, V194, S0]
Stack pops: 6
Stack additions: [S3]
Exit stack: [V10, 0x1]

================================

Block 0x298
[0x298:0x2a9]
---
Predecessors: [0xfc]
Successors: [0x96]
---
0x298 JUMPDEST
0x299 PUSH1 0x0
0x29b PUSH1 0x20
0x29d DUP2
0x29e SWAP1
0x29f MSTORE
0x2a0 SWAP1
0x2a1 DUP2
0x2a2 MSTORE
0x2a3 PUSH1 0x40
0x2a5 SWAP1
0x2a6 SHA3
0x2a7 SLOAD
0x2a8 DUP2
0x2a9 JUMP
---
0x298: JUMPDEST 
0x299: V239 = 0x0
0x29b: V240 = 0x20
0x29f: M[0x20] = 0x0
0x2a2: M[0x0] = V92
0x2a3: V241 = 0x40
0x2a6: V242 = SHA3 0x0 0x40
0x2a7: V243 = S[V242]
0x2a9: JUMP 0x96
---
Entry stack: [V10, 0x96, V92]
Stack pops: 2
Stack additions: [S1, V243]
Exit stack: [V10, 0x96, V243]

================================

Block 0x2aa
[0x2aa:0x2d5]
---
Predecessors: []
Successors: []
---
0x2aa STOP
0x2ab LOG1
0x2ac PUSH6 0x627a7a723058
0x2b3 SHA3
0x2b4 XOR
0x2b5 DUP10
0x2b6 MISSING 0xef
0x2b7 CALLDATALOAD
0x2b8 MULMOD
0x2b9 MISSING 0xe7
0x2ba MISSING 0xac
0x2bb SMOD
0x2bc SWAP16
0x2bd MISSING 0x4c
0x2be PUSH20 0x948a28fd5d091d310dcd88f79d2bac5394046d6c
0x2d3 MISSING 0x4a
0x2d4 STOP
0x2d5 MISSING 0x29
---
0x2aa: STOP 
0x2ab: LOG S0 S1 S2
0x2ac: V244 = 0x627a7a723058
0x2b3: V245 = SHA3 0x627a7a723058 S3
0x2b4: V246 = XOR V245 S4
0x2b6: MISSING 0xef
0x2b7: V247 = CALLDATALOAD S0
0x2b8: V248 = MULMOD V247 S1 S2
0x2b9: MISSING 0xe7
0x2ba: MISSING 0xac
0x2bb: V249 = SMOD S0 S1
0x2bd: MISSING 0x4c
0x2be: V250 = 0x948a28fd5d091d310dcd88f79d2bac5394046d6c
0x2d3: MISSING 0x4a
0x2d4: STOP 
0x2d5: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S13, V246, S5, S6, S7, S8, S9, S10, S11, S12, S13, V248, S17, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, V249, 0x948a28fd5d091d310dcd88f79d2bac5394046d6c]
Exit stack: []

================================

Function 0:
Public function signature: 0x29750e85
Entry block: 0x77
Exit block: 0x96
Body: 0x77, 0x7e, 0x82, 0x96, 0x122

Function 1:
Public function signature: 0x57ea89b6
Entry block: 0xa8
Exit block: 0xbb
Body: 0xa8, 0xaf, 0xb3, 0xbb, 0x134, 0x15d, 0x179, 0x180, 0x19b, 0x1a1, 0x1e8, 0x1ec, 0x1f5, 0x1fa, 0x1fb

Function 2:
Public function signature: 0xd45baeab
Entry block: 0xcf
Exit block: 0xbb
Body: 0xbb, 0xcf, 0x200, 0x239, 0x262, 0x290

Function 3:
Public function signature: 0xfc7e286d
Entry block: 0xf1
Exit block: 0x96
Body: 0x96, 0xf1, 0xf8, 0xfc, 0x298

Function 4:
Public fallback function
Entry block: 0x5f
Exit block: 0x6e
Body: 0x5f, 0x66, 0x6a, 0x6e

