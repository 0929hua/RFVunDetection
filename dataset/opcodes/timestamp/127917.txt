Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xaf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xaf
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xaf
0xc: JUMPI 0xaf V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x299]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x14a8bd0d
0x3c EQ
0x3d PUSH2 0x299
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x14a8bd0d
0x3c: V13 = EQ 0x14a8bd0d V11
0x3d: V14 = 0x299
0x40: JUMPI 0x299 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x2c2]
---
0x41 DUP1
0x42 PUSH4 0x29dcb0cf
0x47 EQ
0x48 PUSH2 0x2c2
0x4b JUMPI
---
0x42: V15 = 0x29dcb0cf
0x47: V16 = EQ 0x29dcb0cf V11
0x48: V17 = 0x2c2
0x4b: JUMPI 0x2c2 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x2eb]
---
0x4c DUP1
0x4d PUSH4 0x2d7dc81c
0x52 EQ
0x53 PUSH2 0x2eb
0x56 JUMPI
---
0x4d: V18 = 0x2d7dc81c
0x52: V19 = EQ 0x2d7dc81c V11
0x53: V20 = 0x2eb
0x56: JUMPI 0x2eb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x303]
---
0x57 DUP1
0x58 PUSH4 0x60659a92
0x5d EQ
0x5e PUSH2 0x303
0x61 JUMPI
---
0x58: V21 = 0x60659a92
0x5d: V22 = EQ 0x60659a92 V11
0x5e: V23 = 0x303
0x61: JUMPI 0x303 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x32c]
---
0x62 DUP1
0x63 PUSH4 0x6df7f38f
0x68 EQ
0x69 PUSH2 0x32c
0x6c JUMPI
---
0x63: V24 = 0x6df7f38f
0x68: V25 = EQ 0x6df7f38f V11
0x69: V26 = 0x32c
0x6c: JUMPI 0x32c V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x363]
---
0x6d DUP1
0x6e PUSH4 0x6e66f6e9
0x73 EQ
0x74 PUSH2 0x363
0x77 JUMPI
---
0x6e: V27 = 0x6e66f6e9
0x73: V28 = EQ 0x6e66f6e9 V11
0x74: V29 = 0x363
0x77: JUMPI 0x363 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x3b8]
---
0x78 DUP1
0x79 PUSH4 0x70a08231
0x7e EQ
0x7f PUSH2 0x3b8
0x82 JUMPI
---
0x79: V30 = 0x70a08231
0x7e: V31 = EQ 0x70a08231 V11
0x7f: V32 = 0x3b8
0x82: JUMPI 0x3b8 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x405]
---
0x83 DUP1
0x84 PUSH4 0x7b3e5e7b
0x89 EQ
0x8a PUSH2 0x405
0x8d JUMPI
---
0x84: V33 = 0x7b3e5e7b
0x89: V34 = EQ 0x7b3e5e7b V11
0x8a: V35 = 0x405
0x8d: JUMPI 0x405 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x42e]
---
0x8e DUP1
0x8f PUSH4 0x8da5cb5b
0x94 EQ
0x95 PUSH2 0x42e
0x98 JUMPI
---
0x8f: V36 = 0x8da5cb5b
0x94: V37 = EQ 0x8da5cb5b V11
0x95: V38 = 0x42e
0x98: JUMPI 0x42e V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x483]
---
0x99 DUP1
0x9a PUSH4 0xa035b1fe
0x9f EQ
0xa0 PUSH2 0x483
0xa3 JUMPI
---
0x9a: V39 = 0xa035b1fe
0x9f: V40 = EQ 0xa035b1fe V11
0xa0: V41 = 0x483
0xa3: JUMPI 0x483 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x4ac]
---
0xa4 DUP1
0xa5 PUSH4 0xba9a061a
0xaa EQ
0xab PUSH2 0x4ac
0xae JUMPI
---
0xa5: V42 = 0xba9a061a
0xaa: V43 = EQ 0xba9a061a V11
0xab: V44 = 0x4ac
0xae: JUMPI 0x4ac V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xbc]
---
Predecessors: [0x0, 0xa4]
Successors: [0xbd, 0xc6]
---
0xaf JUMPDEST
0xb0 PUSH1 0x0
0xb2 PUSH1 0x5
0xb4 SLOAD
0xb5 TIMESTAMP
0xb6 LT
0xb7 DUP1
0xb8 ISZERO
0xb9 PUSH2 0xc6
0xbc JUMPI
---
0xaf: JUMPDEST 
0xb0: V45 = 0x0
0xb2: V46 = 0x5
0xb4: V47 = S[0x5]
0xb5: V48 = TIMESTAMP
0xb6: V49 = LT V48 V47
0xb8: V50 = ISZERO V49
0xb9: V51 = 0xc6
0xbc: JUMPI 0xc6 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, V49]
Exit stack: [V11, 0x0, V49]

================================

Block 0xbd
[0xbd:0xc5]
---
Predecessors: [0xaf]
Successors: [0xc6]
---
0xbd POP
0xbe PUSH4 0x5a350ac0
0xc3 TIMESTAMP
0xc4 LT
0xc5 ISZERO
---
0xbe: V52 = 0x5a350ac0
0xc3: V53 = TIMESTAMP
0xc4: V54 = LT V53 0x5a350ac0
0xc5: V55 = ISZERO V54
---
Entry stack: [V11, 0x0, V49]
Stack pops: 1
Stack additions: [V55]
Exit stack: [V11, 0x0, V55]

================================

Block 0xc6
[0xc6:0xcc]
---
Predecessors: [0xaf, 0xbd]
Successors: [0xcd, 0xd1]
---
0xc6 JUMPDEST
0xc7 ISZERO
0xc8 ISZERO
0xc9 PUSH2 0xd1
0xcc JUMPI
---
0xc6: JUMPDEST 
0xc7: V56 = ISZERO S0
0xc8: V57 = ISZERO V56
0xc9: V58 = 0xd1
0xcc: JUMPI 0xd1 V57
---
Entry stack: [V11, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0xc6]
Successors: []
---
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
---
0xcd: V59 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xd1
[0xd1:0xe3]
---
Predecessors: [0xc6]
Successors: [0xe4, 0xe8]
---
0xd1 JUMPDEST
0xd2 PUSH8 0x29a2241af62c0000
0xdb CALLVALUE
0xdc LT
0xdd ISZERO
0xde ISZERO
0xdf ISZERO
0xe0 PUSH2 0xe8
0xe3 JUMPI
---
0xd1: JUMPDEST 
0xd2: V60 = 0x29a2241af62c0000
0xdb: V61 = CALLVALUE
0xdc: V62 = LT V61 0x29a2241af62c0000
0xdd: V63 = ISZERO V62
0xde: V64 = ISZERO V63
0xdf: V65 = ISZERO V64
0xe0: V66 = 0xe8
0xe3: JUMPI 0xe8 V65
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xe4
[0xe4:0xe7]
---
Predecessors: [0xd1]
Successors: []
---
0xe4 PUSH1 0x0
0xe6 DUP1
0xe7 REVERT
---
0xe4: V67 = 0x0
0xe7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xe8
[0xe8:0x21b]
---
Predecessors: [0xd1]
Successors: [0x21c, 0x220]
---
0xe8 JUMPDEST
0xe9 CALLVALUE
0xea SWAP1
0xeb POP
0xec DUP1
0xed PUSH1 0x8
0xef PUSH1 0x0
0xf1 CALLER
0xf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107 AND
0x108 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11d AND
0x11e DUP2
0x11f MSTORE
0x120 PUSH1 0x20
0x122 ADD
0x123 SWAP1
0x124 DUP2
0x125 MSTORE
0x126 PUSH1 0x20
0x128 ADD
0x129 PUSH1 0x0
0x12b SHA3
0x12c PUSH1 0x0
0x12e DUP3
0x12f DUP3
0x130 SLOAD
0x131 ADD
0x132 SWAP3
0x133 POP
0x134 POP
0x135 DUP2
0x136 SWAP1
0x137 SSTORE
0x138 POP
0x139 DUP1
0x13a PUSH1 0x4
0x13c PUSH1 0x0
0x13e DUP3
0x13f DUP3
0x140 SLOAD
0x141 ADD
0x142 SWAP3
0x143 POP
0x144 POP
0x145 DUP2
0x146 SWAP1
0x147 SSTORE
0x148 POP
0x149 DUP1
0x14a PUSH1 0x1
0x14c PUSH1 0x0
0x14e DUP3
0x14f DUP3
0x150 SLOAD
0x151 SUB
0x152 SWAP3
0x153 POP
0x154 POP
0x155 DUP2
0x156 SWAP1
0x157 SSTORE
0x158 POP
0x159 PUSH1 0x7
0x15b PUSH1 0x0
0x15d SWAP1
0x15e SLOAD
0x15f SWAP1
0x160 PUSH2 0x100
0x163 EXP
0x164 SWAP1
0x165 DIV
0x166 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17b AND
0x17c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x191 AND
0x192 PUSH4 0xa9059cbb
0x197 CALLER
0x198 PUSH2 0x2bc
0x19b DUP5
0x19c MUL
0x19d PUSH1 0x40
0x19f MLOAD
0x1a0 DUP4
0x1a1 PUSH4 0xffffffff
0x1a6 AND
0x1a7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1c5 MUL
0x1c6 DUP2
0x1c7 MSTORE
0x1c8 PUSH1 0x4
0x1ca ADD
0x1cb DUP1
0x1cc DUP4
0x1cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e2 AND
0x1e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f8 AND
0x1f9 DUP2
0x1fa MSTORE
0x1fb PUSH1 0x20
0x1fd ADD
0x1fe DUP3
0x1ff DUP2
0x200 MSTORE
0x201 PUSH1 0x20
0x203 ADD
0x204 SWAP3
0x205 POP
0x206 POP
0x207 POP
0x208 PUSH1 0x0
0x20a PUSH1 0x40
0x20c MLOAD
0x20d DUP1
0x20e DUP4
0x20f SUB
0x210 DUP2
0x211 PUSH1 0x0
0x213 DUP8
0x214 DUP1
0x215 EXTCODESIZE
0x216 ISZERO
0x217 ISZERO
0x218 PUSH2 0x220
0x21b JUMPI
---
0xe8: JUMPDEST 
0xe9: V68 = CALLVALUE
0xed: V69 = 0x8
0xef: V70 = 0x0
0xf1: V71 = CALLER
0xf2: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x107: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x108: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x11d: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x11f: M[0x0] = V75
0x120: V76 = 0x20
0x122: V77 = ADD 0x20 0x0
0x125: M[0x20] = 0x8
0x126: V78 = 0x20
0x128: V79 = ADD 0x20 0x20
0x129: V80 = 0x0
0x12b: V81 = SHA3 0x0 0x40
0x12c: V82 = 0x0
0x130: V83 = S[V81]
0x131: V84 = ADD V83 V68
0x137: S[V81] = V84
0x13a: V85 = 0x4
0x13c: V86 = 0x0
0x140: V87 = S[0x4]
0x141: V88 = ADD V87 V68
0x147: S[0x4] = V88
0x14a: V89 = 0x1
0x14c: V90 = 0x0
0x150: V91 = S[0x1]
0x151: V92 = SUB V91 V68
0x157: S[0x1] = V92
0x159: V93 = 0x7
0x15b: V94 = 0x0
0x15e: V95 = S[0x7]
0x160: V96 = 0x100
0x163: V97 = EXP 0x100 0x0
0x165: V98 = DIV V95 0x1
0x166: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x17b: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x17c: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x191: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x192: V103 = 0xa9059cbb
0x197: V104 = CALLER
0x198: V105 = 0x2bc
0x19c: V106 = MUL V68 0x2bc
0x19d: V107 = 0x40
0x19f: V108 = M[0x40]
0x1a1: V109 = 0xffffffff
0x1a6: V110 = AND 0xffffffff 0xa9059cbb
0x1a7: V111 = 0x100000000000000000000000000000000000000000000000000000000
0x1c5: V112 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x1c7: M[V108] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1c8: V113 = 0x4
0x1ca: V114 = ADD 0x4 V108
0x1cd: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e2: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1e3: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x1fa: M[V114] = V118
0x1fb: V119 = 0x20
0x1fd: V120 = ADD 0x20 V114
0x200: M[V120] = V106
0x201: V121 = 0x20
0x203: V122 = ADD 0x20 V120
0x208: V123 = 0x0
0x20a: V124 = 0x40
0x20c: V125 = M[0x40]
0x20f: V126 = SUB V122 V125
0x211: V127 = 0x0
0x215: V128 = EXTCODESIZE V102
0x216: V129 = ISZERO V128
0x217: V130 = ISZERO V129
0x218: V131 = 0x220
0x21b: JUMPI 0x220 V130
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V68, V102, 0xa9059cbb, V122, 0x0, V125, V126, V125, 0x0, V102]
Exit stack: [V11, V68, V102, 0xa9059cbb, V122, 0x0, V125, V126, V125, 0x0, V102]

================================

Block 0x21c
[0x21c:0x21f]
---
Predecessors: [0xe8]
Successors: []
---
0x21c PUSH1 0x0
0x21e DUP1
0x21f REVERT
---
0x21c: V132 = 0x0
0x21f: REVERT 0x0 0x0
---
Entry stack: [V11, V68, V102, 0xa9059cbb, V122, 0x0, V125, V126, V125, 0x0, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68, V102, 0xa9059cbb, V122, 0x0, V125, V126, V125, 0x0, V102]

================================

Block 0x220
[0x220:0x22c]
---
Predecessors: [0xe8]
Successors: [0x22d, 0x231]
---
0x220 JUMPDEST
0x221 PUSH2 0x2c6
0x224 GAS
0x225 SUB
0x226 CALL
0x227 ISZERO
0x228 ISZERO
0x229 PUSH2 0x231
0x22c JUMPI
---
0x220: JUMPDEST 
0x221: V133 = 0x2c6
0x224: V134 = GAS
0x225: V135 = SUB V134 0x2c6
0x226: V136 = CALL V135 V102 0x0 V125 V126 V125 0x0
0x227: V137 = ISZERO V136
0x228: V138 = ISZERO V137
0x229: V139 = 0x231
0x22c: JUMPI 0x231 V138
---
Entry stack: [V11, V68, V102, 0xa9059cbb, V122, 0x0, V125, V126, V125, 0x0, V102]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V68, V102, 0xa9059cbb, V122]

================================

Block 0x22d
[0x22d:0x230]
---
Predecessors: [0x220]
Successors: []
---
0x22d PUSH1 0x0
0x22f DUP1
0x230 REVERT
---
0x22d: V140 = 0x0
0x230: REVERT 0x0 0x0
---
Entry stack: [V11, V68, V102, 0xa9059cbb, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68, V102, 0xa9059cbb, V122]

================================

Block 0x231
[0x231:0x291]
---
Predecessors: [0x220]
Successors: [0x292, 0x296]
---
0x231 JUMPDEST
0x232 POP
0x233 POP
0x234 POP
0x235 PUSH1 0x2
0x237 PUSH1 0x0
0x239 SWAP1
0x23a SLOAD
0x23b SWAP1
0x23c PUSH2 0x100
0x23f EXP
0x240 SWAP1
0x241 DIV
0x242 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x257 AND
0x258 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26d AND
0x26e PUSH2 0x8fc
0x271 DUP3
0x272 SWAP1
0x273 DUP2
0x274 ISZERO
0x275 MUL
0x276 SWAP1
0x277 PUSH1 0x40
0x279 MLOAD
0x27a PUSH1 0x0
0x27c PUSH1 0x40
0x27e MLOAD
0x27f DUP1
0x280 DUP4
0x281 SUB
0x282 DUP2
0x283 DUP6
0x284 DUP9
0x285 DUP9
0x286 CALL
0x287 SWAP4
0x288 POP
0x289 POP
0x28a POP
0x28b POP
0x28c ISZERO
0x28d ISZERO
0x28e PUSH2 0x296
0x291 JUMPI
---
0x231: JUMPDEST 
0x235: V141 = 0x2
0x237: V142 = 0x0
0x23a: V143 = S[0x2]
0x23c: V144 = 0x100
0x23f: V145 = EXP 0x100 0x0
0x241: V146 = DIV V143 0x1
0x242: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x257: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x258: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x26d: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x26e: V151 = 0x8fc
0x274: V152 = ISZERO V68
0x275: V153 = MUL V152 0x8fc
0x277: V154 = 0x40
0x279: V155 = M[0x40]
0x27a: V156 = 0x0
0x27c: V157 = 0x40
0x27e: V158 = M[0x40]
0x281: V159 = SUB V155 V158
0x286: V160 = CALL V153 V150 V68 V158 V159 V158 0x0
0x28c: V161 = ISZERO V160
0x28d: V162 = ISZERO V161
0x28e: V163 = 0x296
0x291: JUMPI 0x296 V162
---
Entry stack: [V11, V68, V102, 0xa9059cbb, V122]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V11, V68]

================================

Block 0x292
[0x292:0x295]
---
Predecessors: [0x231]
Successors: []
---
0x292 PUSH1 0x0
0x294 DUP1
0x295 REVERT
---
0x292: V164 = 0x0
0x295: REVERT 0x0 0x0
---
Entry stack: [V11, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68]

================================

Block 0x296
[0x296:0x298]
---
Predecessors: [0x231]
Successors: []
---
0x296 JUMPDEST
0x297 POP
0x298 STOP
---
0x296: JUMPDEST 
0x298: STOP 
---
Entry stack: [V11, V68]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x299
[0x299:0x29f]
---
Predecessors: [0xd]
Successors: [0x2a0, 0x2a4]
---
0x299 JUMPDEST
0x29a CALLVALUE
0x29b ISZERO
0x29c PUSH2 0x2a4
0x29f JUMPI
---
0x299: JUMPDEST 
0x29a: V165 = CALLVALUE
0x29b: V166 = ISZERO V165
0x29c: V167 = 0x2a4
0x29f: JUMPI 0x2a4 V166
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a0
[0x2a0:0x2a3]
---
Predecessors: [0x299]
Successors: []
---
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 REVERT
---
0x2a0: V168 = 0x0
0x2a3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a4
[0x2a4:0x2ab]
---
Predecessors: [0x299]
Successors: [0x4d5]
---
0x2a4 JUMPDEST
0x2a5 PUSH2 0x2ac
0x2a8 PUSH2 0x4d5
0x2ab JUMP
---
0x2a4: JUMPDEST 
0x2a5: V169 = 0x2ac
0x2a8: V170 = 0x4d5
0x2ab: JUMP 0x4d5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2ac]
Exit stack: [V11, 0x2ac]

================================

Block 0x2ac
[0x2ac:0x2c1]
---
Predecessors: [0x4d5]
Successors: []
---
0x2ac JUMPDEST
0x2ad PUSH1 0x40
0x2af MLOAD
0x2b0 DUP1
0x2b1 DUP3
0x2b2 DUP2
0x2b3 MSTORE
0x2b4 PUSH1 0x20
0x2b6 ADD
0x2b7 SWAP2
0x2b8 POP
0x2b9 POP
0x2ba PUSH1 0x40
0x2bc MLOAD
0x2bd DUP1
0x2be SWAP2
0x2bf SUB
0x2c0 SWAP1
0x2c1 RETURN
---
0x2ac: JUMPDEST 
0x2ad: V171 = 0x40
0x2af: V172 = M[0x40]
0x2b3: M[V172] = 0x2bc
0x2b4: V173 = 0x20
0x2b6: V174 = ADD 0x20 V172
0x2ba: V175 = 0x40
0x2bc: V176 = M[0x40]
0x2bf: V177 = SUB V174 V176
0x2c1: RETURN V176 V177
---
Entry stack: [V11, 0x2ac, 0x2bc]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2ac]

================================

Block 0x2c2
[0x2c2:0x2c8]
---
Predecessors: [0x41]
Successors: [0x2c9, 0x2cd]
---
0x2c2 JUMPDEST
0x2c3 CALLVALUE
0x2c4 ISZERO
0x2c5 PUSH2 0x2cd
0x2c8 JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V178 = CALLVALUE
0x2c4: V179 = ISZERO V178
0x2c5: V180 = 0x2cd
0x2c8: JUMPI 0x2cd V179
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c9
[0x2c9:0x2cc]
---
Predecessors: [0x2c2]
Successors: []
---
0x2c9 PUSH1 0x0
0x2cb DUP1
0x2cc REVERT
---
0x2c9: V181 = 0x0
0x2cc: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2cd
[0x2cd:0x2d4]
---
Predecessors: [0x2c2]
Successors: [0x4db]
---
0x2cd JUMPDEST
0x2ce PUSH2 0x2d5
0x2d1 PUSH2 0x4db
0x2d4 JUMP
---
0x2cd: JUMPDEST 
0x2ce: V182 = 0x2d5
0x2d1: V183 = 0x4db
0x2d4: JUMP 0x4db
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2d5]
Exit stack: [V11, 0x2d5]

================================

Block 0x2d5
[0x2d5:0x2ea]
---
Predecessors: [0x4db]
Successors: []
---
0x2d5 JUMPDEST
0x2d6 PUSH1 0x40
0x2d8 MLOAD
0x2d9 DUP1
0x2da DUP3
0x2db DUP2
0x2dc MSTORE
0x2dd PUSH1 0x20
0x2df ADD
0x2e0 SWAP2
0x2e1 POP
0x2e2 POP
0x2e3 PUSH1 0x40
0x2e5 MLOAD
0x2e6 DUP1
0x2e7 SWAP2
0x2e8 SUB
0x2e9 SWAP1
0x2ea RETURN
---
0x2d5: JUMPDEST 
0x2d6: V184 = 0x40
0x2d8: V185 = M[0x40]
0x2dc: M[V185] = V315
0x2dd: V186 = 0x20
0x2df: V187 = ADD 0x20 V185
0x2e3: V188 = 0x40
0x2e5: V189 = M[0x40]
0x2e8: V190 = SUB V187 V189
0x2ea: RETURN V189 V190
---
Entry stack: [V11, 0x2d5, V315]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2d5]

================================

Block 0x2eb
[0x2eb:0x300]
---
Predecessors: [0x4c]
Successors: [0x4e1]
---
0x2eb JUMPDEST
0x2ec PUSH2 0x301
0x2ef PUSH1 0x4
0x2f1 DUP1
0x2f2 DUP1
0x2f3 CALLDATALOAD
0x2f4 SWAP1
0x2f5 PUSH1 0x20
0x2f7 ADD
0x2f8 SWAP1
0x2f9 SWAP2
0x2fa SWAP1
0x2fb POP
0x2fc POP
0x2fd PUSH2 0x4e1
0x300 JUMP
---
0x2eb: JUMPDEST 
0x2ec: V191 = 0x301
0x2ef: V192 = 0x4
0x2f3: V193 = CALLDATALOAD 0x4
0x2f5: V194 = 0x20
0x2f7: V195 = ADD 0x20 0x4
0x2fd: V196 = 0x4e1
0x300: JUMP 0x4e1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x301, V193]
Exit stack: [V11, 0x301, V193]

================================

Block 0x301
[0x301:0x302]
---
Predecessors: [0x644]
Successors: []
---
0x301 JUMPDEST
0x302 STOP
---
0x301: JUMPDEST 
0x302: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x303
[0x303:0x309]
---
Predecessors: [0x57]
Successors: [0x30a, 0x30e]
---
0x303 JUMPDEST
0x304 CALLVALUE
0x305 ISZERO
0x306 PUSH2 0x30e
0x309 JUMPI
---
0x303: JUMPDEST 
0x304: V197 = CALLVALUE
0x305: V198 = ISZERO V197
0x306: V199 = 0x30e
0x309: JUMPI 0x30e V198
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x30a
[0x30a:0x30d]
---
Predecessors: [0x303]
Successors: []
---
0x30a PUSH1 0x0
0x30c DUP1
0x30d REVERT
---
0x30a: V200 = 0x0
0x30d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x30e
[0x30e:0x315]
---
Predecessors: [0x303]
Successors: [0x64a]
---
0x30e JUMPDEST
0x30f PUSH2 0x316
0x312 PUSH2 0x64a
0x315 JUMP
---
0x30e: JUMPDEST 
0x30f: V201 = 0x316
0x312: V202 = 0x64a
0x315: JUMP 0x64a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x316]
Exit stack: [V11, 0x316]

================================

Block 0x316
[0x316:0x32b]
---
Predecessors: [0x64a]
Successors: []
---
0x316 JUMPDEST
0x317 PUSH1 0x40
0x319 MLOAD
0x31a DUP1
0x31b DUP3
0x31c DUP2
0x31d MSTORE
0x31e PUSH1 0x20
0x320 ADD
0x321 SWAP2
0x322 POP
0x323 POP
0x324 PUSH1 0x40
0x326 MLOAD
0x327 DUP1
0x328 SWAP2
0x329 SUB
0x32a SWAP1
0x32b RETURN
---
0x316: JUMPDEST 
0x317: V203 = 0x40
0x319: V204 = M[0x40]
0x31d: M[V204] = V397
0x31e: V205 = 0x20
0x320: V206 = ADD 0x20 V204
0x324: V207 = 0x40
0x326: V208 = M[0x40]
0x329: V209 = SUB V206 V208
0x32b: RETURN V208 V209
---
Entry stack: [V11, V397]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x32c
[0x32c:0x360]
---
Predecessors: [0x62]
Successors: [0x654]
---
0x32c JUMPDEST
0x32d PUSH2 0x361
0x330 PUSH1 0x4
0x332 DUP1
0x333 DUP1
0x334 CALLDATALOAD
0x335 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34a AND
0x34b SWAP1
0x34c PUSH1 0x20
0x34e ADD
0x34f SWAP1
0x350 SWAP2
0x351 SWAP1
0x352 DUP1
0x353 CALLDATALOAD
0x354 SWAP1
0x355 PUSH1 0x20
0x357 ADD
0x358 SWAP1
0x359 SWAP2
0x35a SWAP1
0x35b POP
0x35c POP
0x35d PUSH2 0x654
0x360 JUMP
---
0x32c: JUMPDEST 
0x32d: V210 = 0x361
0x330: V211 = 0x4
0x334: V212 = CALLDATALOAD 0x4
0x335: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x34a: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x34c: V215 = 0x20
0x34e: V216 = ADD 0x20 0x4
0x353: V217 = CALLDATALOAD 0x24
0x355: V218 = 0x20
0x357: V219 = ADD 0x20 0x24
0x35d: V220 = 0x654
0x360: JUMP 0x654
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x361, V214, V217]
Exit stack: [V11, 0x361, V214, V217]

================================

Block 0x361
[0x361:0x362]
---
Predecessors: [0x784]
Successors: []
---
0x361 JUMPDEST
0x362 STOP
---
0x361: JUMPDEST 
0x362: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x363
[0x363:0x369]
---
Predecessors: [0x6d]
Successors: [0x36a, 0x36e]
---
0x363 JUMPDEST
0x364 CALLVALUE
0x365 ISZERO
0x366 PUSH2 0x36e
0x369 JUMPI
---
0x363: JUMPDEST 
0x364: V221 = CALLVALUE
0x365: V222 = ISZERO V221
0x366: V223 = 0x36e
0x369: JUMPI 0x36e V222
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x36a
[0x36a:0x36d]
---
Predecessors: [0x363]
Successors: []
---
0x36a PUSH1 0x0
0x36c DUP1
0x36d REVERT
---
0x36a: V224 = 0x0
0x36d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x36e
[0x36e:0x375]
---
Predecessors: [0x363]
Successors: [0x78b]
---
0x36e JUMPDEST
0x36f PUSH2 0x376
0x372 PUSH2 0x78b
0x375 JUMP
---
0x36e: JUMPDEST 
0x36f: V225 = 0x376
0x372: V226 = 0x78b
0x375: JUMP 0x78b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x376]
Exit stack: [V11, 0x376]

================================

Block 0x376
[0x376:0x3b7]
---
Predecessors: [0x78b]
Successors: []
---
0x376 JUMPDEST
0x377 PUSH1 0x40
0x379 MLOAD
0x37a DUP1
0x37b DUP3
0x37c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x391 AND
0x392 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a7 AND
0x3a8 DUP2
0x3a9 MSTORE
0x3aa PUSH1 0x20
0x3ac ADD
0x3ad SWAP2
0x3ae POP
0x3af POP
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 DUP1
0x3b4 SWAP2
0x3b5 SUB
0x3b6 SWAP1
0x3b7 RETURN
---
0x376: JUMPDEST 
0x377: V227 = 0x40
0x379: V228 = M[0x40]
0x37c: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x391: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x392: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a7: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x3a9: M[V228] = V232
0x3aa: V233 = 0x20
0x3ac: V234 = ADD 0x20 V228
0x3b0: V235 = 0x40
0x3b2: V236 = M[0x40]
0x3b5: V237 = SUB V234 V236
0x3b7: RETURN V236 V237
---
Entry stack: [V11, 0x376, V467]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x376]

================================

Block 0x3b8
[0x3b8:0x3be]
---
Predecessors: [0x78]
Successors: [0x3bf, 0x3c3]
---
0x3b8 JUMPDEST
0x3b9 CALLVALUE
0x3ba ISZERO
0x3bb PUSH2 0x3c3
0x3be JUMPI
---
0x3b8: JUMPDEST 
0x3b9: V238 = CALLVALUE
0x3ba: V239 = ISZERO V238
0x3bb: V240 = 0x3c3
0x3be: JUMPI 0x3c3 V239
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3bf
[0x3bf:0x3c2]
---
Predecessors: [0x3b8]
Successors: []
---
0x3bf PUSH1 0x0
0x3c1 DUP1
0x3c2 REVERT
---
0x3bf: V241 = 0x0
0x3c2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c3
[0x3c3:0x3ee]
---
Predecessors: [0x3b8]
Successors: [0x7b1]
---
0x3c3 JUMPDEST
0x3c4 PUSH2 0x3ef
0x3c7 PUSH1 0x4
0x3c9 DUP1
0x3ca DUP1
0x3cb CALLDATALOAD
0x3cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e1 AND
0x3e2 SWAP1
0x3e3 PUSH1 0x20
0x3e5 ADD
0x3e6 SWAP1
0x3e7 SWAP2
0x3e8 SWAP1
0x3e9 POP
0x3ea POP
0x3eb PUSH2 0x7b1
0x3ee JUMP
---
0x3c3: JUMPDEST 
0x3c4: V242 = 0x3ef
0x3c7: V243 = 0x4
0x3cb: V244 = CALLDATALOAD 0x4
0x3cc: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e1: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x3e3: V247 = 0x20
0x3e5: V248 = ADD 0x20 0x4
0x3eb: V249 = 0x7b1
0x3ee: JUMP 0x7b1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3ef, V246]
Exit stack: [V11, 0x3ef, V246]

================================

Block 0x3ef
[0x3ef:0x404]
---
Predecessors: [0x7b1]
Successors: []
---
0x3ef JUMPDEST
0x3f0 PUSH1 0x40
0x3f2 MLOAD
0x3f3 DUP1
0x3f4 DUP3
0x3f5 DUP2
0x3f6 MSTORE
0x3f7 PUSH1 0x20
0x3f9 ADD
0x3fa SWAP2
0x3fb POP
0x3fc POP
0x3fd PUSH1 0x40
0x3ff MLOAD
0x400 DUP1
0x401 SWAP2
0x402 SUB
0x403 SWAP1
0x404 RETURN
---
0x3ef: JUMPDEST 
0x3f0: V250 = 0x40
0x3f2: V251 = M[0x40]
0x3f6: M[V251] = V475
0x3f7: V252 = 0x20
0x3f9: V253 = ADD 0x20 V251
0x3fd: V254 = 0x40
0x3ff: V255 = M[0x40]
0x402: V256 = SUB V253 V255
0x404: RETURN V255 V256
---
Entry stack: [V11, 0x3ef, V475]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3ef]

================================

Block 0x405
[0x405:0x40b]
---
Predecessors: [0x83]
Successors: [0x40c, 0x410]
---
0x405 JUMPDEST
0x406 CALLVALUE
0x407 ISZERO
0x408 PUSH2 0x410
0x40b JUMPI
---
0x405: JUMPDEST 
0x406: V257 = CALLVALUE
0x407: V258 = ISZERO V257
0x408: V259 = 0x410
0x40b: JUMPI 0x410 V258
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x40c
[0x40c:0x40f]
---
Predecessors: [0x405]
Successors: []
---
0x40c PUSH1 0x0
0x40e DUP1
0x40f REVERT
---
0x40c: V260 = 0x0
0x40f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x410
[0x410:0x417]
---
Predecessors: [0x405]
Successors: [0x7c9]
---
0x410 JUMPDEST
0x411 PUSH2 0x418
0x414 PUSH2 0x7c9
0x417 JUMP
---
0x410: JUMPDEST 
0x411: V261 = 0x418
0x414: V262 = 0x7c9
0x417: JUMP 0x7c9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x418]
Exit stack: [V11, 0x418]

================================

Block 0x418
[0x418:0x42d]
---
Predecessors: [0x7c9]
Successors: []
---
0x418 JUMPDEST
0x419 PUSH1 0x40
0x41b MLOAD
0x41c DUP1
0x41d DUP3
0x41e DUP2
0x41f MSTORE
0x420 PUSH1 0x20
0x422 ADD
0x423 SWAP2
0x424 POP
0x425 POP
0x426 PUSH1 0x40
0x428 MLOAD
0x429 DUP1
0x42a SWAP2
0x42b SUB
0x42c SWAP1
0x42d RETURN
---
0x418: JUMPDEST 
0x419: V263 = 0x40
0x41b: V264 = M[0x40]
0x41f: M[V264] = V477
0x420: V265 = 0x20
0x422: V266 = ADD 0x20 V264
0x426: V267 = 0x40
0x428: V268 = M[0x40]
0x42b: V269 = SUB V266 V268
0x42d: RETURN V268 V269
---
Entry stack: [V11, 0x418, V477]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x418]

================================

Block 0x42e
[0x42e:0x434]
---
Predecessors: [0x8e]
Successors: [0x435, 0x439]
---
0x42e JUMPDEST
0x42f CALLVALUE
0x430 ISZERO
0x431 PUSH2 0x439
0x434 JUMPI
---
0x42e: JUMPDEST 
0x42f: V270 = CALLVALUE
0x430: V271 = ISZERO V270
0x431: V272 = 0x439
0x434: JUMPI 0x439 V271
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x435
[0x435:0x438]
---
Predecessors: [0x42e]
Successors: []
---
0x435 PUSH1 0x0
0x437 DUP1
0x438 REVERT
---
0x435: V273 = 0x0
0x438: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x439
[0x439:0x440]
---
Predecessors: [0x42e]
Successors: [0x7cf]
---
0x439 JUMPDEST
0x43a PUSH2 0x441
0x43d PUSH2 0x7cf
0x440 JUMP
---
0x439: JUMPDEST 
0x43a: V274 = 0x441
0x43d: V275 = 0x7cf
0x440: JUMP 0x7cf
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x441]
Exit stack: [V11, 0x441]

================================

Block 0x441
[0x441:0x482]
---
Predecessors: [0x7cf]
Successors: []
---
0x441 JUMPDEST
0x442 PUSH1 0x40
0x444 MLOAD
0x445 DUP1
0x446 DUP3
0x447 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45c AND
0x45d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x472 AND
0x473 DUP2
0x474 MSTORE
0x475 PUSH1 0x20
0x477 ADD
0x478 SWAP2
0x479 POP
0x47a POP
0x47b PUSH1 0x40
0x47d MLOAD
0x47e DUP1
0x47f SWAP2
0x480 SUB
0x481 SWAP1
0x482 RETURN
---
0x441: JUMPDEST 
0x442: V276 = 0x40
0x444: V277 = M[0x40]
0x447: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x45c: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0x45d: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x472: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x474: M[V277] = V281
0x475: V282 = 0x20
0x477: V283 = ADD 0x20 V277
0x47b: V284 = 0x40
0x47d: V285 = M[0x40]
0x480: V286 = SUB V283 V285
0x482: RETURN V285 V286
---
Entry stack: [V11, 0x441, V484]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x441]

================================

Block 0x483
[0x483:0x489]
---
Predecessors: [0x99]
Successors: [0x48a, 0x48e]
---
0x483 JUMPDEST
0x484 CALLVALUE
0x485 ISZERO
0x486 PUSH2 0x48e
0x489 JUMPI
---
0x483: JUMPDEST 
0x484: V287 = CALLVALUE
0x485: V288 = ISZERO V287
0x486: V289 = 0x48e
0x489: JUMPI 0x48e V288
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x48a
[0x48a:0x48d]
---
Predecessors: [0x483]
Successors: []
---
0x48a PUSH1 0x0
0x48c DUP1
0x48d REVERT
---
0x48a: V290 = 0x0
0x48d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x48e
[0x48e:0x495]
---
Predecessors: [0x483]
Successors: [0x7f4]
---
0x48e JUMPDEST
0x48f PUSH2 0x496
0x492 PUSH2 0x7f4
0x495 JUMP
---
0x48e: JUMPDEST 
0x48f: V291 = 0x496
0x492: V292 = 0x7f4
0x495: JUMP 0x7f4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x496]
Exit stack: [V11, 0x496]

================================

Block 0x496
[0x496:0x4ab]
---
Predecessors: [0x7f4]
Successors: []
---
0x496 JUMPDEST
0x497 PUSH1 0x40
0x499 MLOAD
0x49a DUP1
0x49b DUP3
0x49c DUP2
0x49d MSTORE
0x49e PUSH1 0x20
0x4a0 ADD
0x4a1 SWAP2
0x4a2 POP
0x4a3 POP
0x4a4 PUSH1 0x40
0x4a6 MLOAD
0x4a7 DUP1
0x4a8 SWAP2
0x4a9 SUB
0x4aa SWAP1
0x4ab RETURN
---
0x496: JUMPDEST 
0x497: V293 = 0x40
0x499: V294 = M[0x40]
0x49d: M[V294] = V486
0x49e: V295 = 0x20
0x4a0: V296 = ADD 0x20 V294
0x4a4: V297 = 0x40
0x4a6: V298 = M[0x40]
0x4a9: V299 = SUB V296 V298
0x4ab: RETURN V298 V299
---
Entry stack: [V11, 0x496, V486]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x496]

================================

Block 0x4ac
[0x4ac:0x4b2]
---
Predecessors: [0xa4]
Successors: [0x4b3, 0x4b7]
---
0x4ac JUMPDEST
0x4ad CALLVALUE
0x4ae ISZERO
0x4af PUSH2 0x4b7
0x4b2 JUMPI
---
0x4ac: JUMPDEST 
0x4ad: V300 = CALLVALUE
0x4ae: V301 = ISZERO V300
0x4af: V302 = 0x4b7
0x4b2: JUMPI 0x4b7 V301
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4b3
[0x4b3:0x4b6]
---
Predecessors: [0x4ac]
Successors: []
---
0x4b3 PUSH1 0x0
0x4b5 DUP1
0x4b6 REVERT
---
0x4b3: V303 = 0x0
0x4b6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4b7
[0x4b7:0x4be]
---
Predecessors: [0x4ac]
Successors: [0x7fa]
---
0x4b7 JUMPDEST
0x4b8 PUSH2 0x4bf
0x4bb PUSH2 0x7fa
0x4be JUMP
---
0x4b7: JUMPDEST 
0x4b8: V304 = 0x4bf
0x4bb: V305 = 0x7fa
0x4be: JUMP 0x7fa
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x4bf]
Exit stack: [V11, 0x4bf]

================================

Block 0x4bf
[0x4bf:0x4d4]
---
Predecessors: [0x7fa]
Successors: []
---
0x4bf JUMPDEST
0x4c0 PUSH1 0x40
0x4c2 MLOAD
0x4c3 DUP1
0x4c4 DUP3
0x4c5 DUP2
0x4c6 MSTORE
0x4c7 PUSH1 0x20
0x4c9 ADD
0x4ca SWAP2
0x4cb POP
0x4cc POP
0x4cd PUSH1 0x40
0x4cf MLOAD
0x4d0 DUP1
0x4d1 SWAP2
0x4d2 SUB
0x4d3 SWAP1
0x4d4 RETURN
---
0x4bf: JUMPDEST 
0x4c0: V306 = 0x40
0x4c2: V307 = M[0x40]
0x4c6: M[V307] = 0x5a350ac0
0x4c7: V308 = 0x20
0x4c9: V309 = ADD 0x20 V307
0x4cd: V310 = 0x40
0x4cf: V311 = M[0x40]
0x4d2: V312 = SUB V309 V311
0x4d4: RETURN V311 V312
---
Entry stack: [V11, 0x4bf, 0x5a350ac0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4bf]

================================

Block 0x4d5
[0x4d5:0x4da]
---
Predecessors: [0x2a4]
Successors: [0x2ac]
---
0x4d5 JUMPDEST
0x4d6 PUSH2 0x2bc
0x4d9 DUP2
0x4da JUMP
---
0x4d5: JUMPDEST 
0x4d6: V313 = 0x2bc
0x4da: JUMP 0x2ac
---
Entry stack: [V11, 0x2ac]
Stack pops: 1
Stack additions: [S0, 0x2bc]
Exit stack: [V11, 0x2ac, 0x2bc]

================================

Block 0x4db
[0x4db:0x4e0]
---
Predecessors: [0x2cd]
Successors: [0x2d5]
---
0x4db JUMPDEST
0x4dc PUSH1 0x5
0x4de SLOAD
0x4df DUP2
0x4e0 JUMP
---
0x4db: JUMPDEST 
0x4dc: V314 = 0x5
0x4de: V315 = S[0x5]
0x4e0: JUMP 0x2d5
---
Entry stack: [V11, 0x2d5]
Stack pops: 1
Stack additions: [S0, V315]
Exit stack: [V11, 0x2d5, V315]

================================

Block 0x4e1
[0x4e1:0x537]
---
Predecessors: [0x2eb]
Successors: [0x538, 0x53c]
---
0x4e1 JUMPDEST
0x4e2 PUSH1 0x0
0x4e4 DUP1
0x4e5 SWAP1
0x4e6 SLOAD
0x4e7 SWAP1
0x4e8 PUSH2 0x100
0x4eb EXP
0x4ec SWAP1
0x4ed DIV
0x4ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x503 AND
0x504 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x519 AND
0x51a CALLER
0x51b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x530 AND
0x531 EQ
0x532 ISZERO
0x533 ISZERO
0x534 PUSH2 0x53c
0x537 JUMPI
---
0x4e1: JUMPDEST 
0x4e2: V316 = 0x0
0x4e6: V317 = S[0x0]
0x4e8: V318 = 0x100
0x4eb: V319 = EXP 0x100 0x0
0x4ed: V320 = DIV V317 0x1
0x4ee: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x503: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x504: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x519: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x51a: V325 = CALLER
0x51b: V326 = 0xffffffffffffffffffffffffffffffffffffffff
0x530: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x531: V328 = EQ V327 V324
0x532: V329 = ISZERO V328
0x533: V330 = ISZERO V329
0x534: V331 = 0x53c
0x537: JUMPI 0x53c V330
---
Entry stack: [V11, 0x301, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x301, V193]

================================

Block 0x538
[0x538:0x53b]
---
Predecessors: [0x4e1]
Successors: []
---
0x538 PUSH1 0x0
0x53a DUP1
0x53b REVERT
---
0x538: V332 = 0x0
0x53b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x301, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x301, V193]

================================

Block 0x53c
[0x53c:0x548]
---
Predecessors: [0x4e1]
Successors: [0x549, 0x54d]
---
0x53c JUMPDEST
0x53d PUSH1 0x5
0x53f SLOAD
0x540 TIMESTAMP
0x541 LT
0x542 ISZERO
0x543 ISZERO
0x544 ISZERO
0x545 PUSH2 0x54d
0x548 JUMPI
---
0x53c: JUMPDEST 
0x53d: V333 = 0x5
0x53f: V334 = S[0x5]
0x540: V335 = TIMESTAMP
0x541: V336 = LT V335 V334
0x542: V337 = ISZERO V336
0x543: V338 = ISZERO V337
0x544: V339 = ISZERO V338
0x545: V340 = 0x54d
0x548: JUMPI 0x54d V339
---
Entry stack: [V11, 0x301, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x301, V193]

================================

Block 0x549
[0x549:0x54c]
---
Predecessors: [0x53c]
Successors: []
---
0x549 PUSH1 0x0
0x54b DUP1
0x54c REVERT
---
0x549: V341 = 0x0
0x54c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x301, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x301, V193]

================================

Block 0x54d
[0x54d:0x62e]
---
Predecessors: [0x53c]
Successors: [0x62f, 0x633]
---
0x54d JUMPDEST
0x54e PUSH1 0x7
0x550 PUSH1 0x0
0x552 SWAP1
0x553 SLOAD
0x554 SWAP1
0x555 PUSH2 0x100
0x558 EXP
0x559 SWAP1
0x55a DIV
0x55b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x570 AND
0x571 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x586 AND
0x587 PUSH4 0xa9059cbb
0x58c PUSH1 0x3
0x58e PUSH1 0x0
0x590 SWAP1
0x591 SLOAD
0x592 SWAP1
0x593 PUSH2 0x100
0x596 EXP
0x597 SWAP1
0x598 DIV
0x599 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ae AND
0x5af DUP4
0x5b0 PUSH1 0x40
0x5b2 MLOAD
0x5b3 DUP4
0x5b4 PUSH4 0xffffffff
0x5b9 AND
0x5ba PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5d8 MUL
0x5d9 DUP2
0x5da MSTORE
0x5db PUSH1 0x4
0x5dd ADD
0x5de DUP1
0x5df DUP4
0x5e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f5 AND
0x5f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60b AND
0x60c DUP2
0x60d MSTORE
0x60e PUSH1 0x20
0x610 ADD
0x611 DUP3
0x612 DUP2
0x613 MSTORE
0x614 PUSH1 0x20
0x616 ADD
0x617 SWAP3
0x618 POP
0x619 POP
0x61a POP
0x61b PUSH1 0x0
0x61d PUSH1 0x40
0x61f MLOAD
0x620 DUP1
0x621 DUP4
0x622 SUB
0x623 DUP2
0x624 PUSH1 0x0
0x626 DUP8
0x627 DUP1
0x628 EXTCODESIZE
0x629 ISZERO
0x62a ISZERO
0x62b PUSH2 0x633
0x62e JUMPI
---
0x54d: JUMPDEST 
0x54e: V342 = 0x7
0x550: V343 = 0x0
0x553: V344 = S[0x7]
0x555: V345 = 0x100
0x558: V346 = EXP 0x100 0x0
0x55a: V347 = DIV V344 0x1
0x55b: V348 = 0xffffffffffffffffffffffffffffffffffffffff
0x570: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff V347
0x571: V350 = 0xffffffffffffffffffffffffffffffffffffffff
0x586: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x587: V352 = 0xa9059cbb
0x58c: V353 = 0x3
0x58e: V354 = 0x0
0x591: V355 = S[0x3]
0x593: V356 = 0x100
0x596: V357 = EXP 0x100 0x0
0x598: V358 = DIV V355 0x1
0x599: V359 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ae: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x5b0: V361 = 0x40
0x5b2: V362 = M[0x40]
0x5b4: V363 = 0xffffffff
0x5b9: V364 = AND 0xffffffff 0xa9059cbb
0x5ba: V365 = 0x100000000000000000000000000000000000000000000000000000000
0x5d8: V366 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x5da: M[V362] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5db: V367 = 0x4
0x5dd: V368 = ADD 0x4 V362
0x5e0: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f5: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x5f6: V371 = 0xffffffffffffffffffffffffffffffffffffffff
0x60b: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x60d: M[V368] = V372
0x60e: V373 = 0x20
0x610: V374 = ADD 0x20 V368
0x613: M[V374] = V193
0x614: V375 = 0x20
0x616: V376 = ADD 0x20 V374
0x61b: V377 = 0x0
0x61d: V378 = 0x40
0x61f: V379 = M[0x40]
0x622: V380 = SUB V376 V379
0x624: V381 = 0x0
0x628: V382 = EXTCODESIZE V351
0x629: V383 = ISZERO V382
0x62a: V384 = ISZERO V383
0x62b: V385 = 0x633
0x62e: JUMPI 0x633 V384
---
Entry stack: [V11, 0x301, V193]
Stack pops: 1
Stack additions: [S0, V351, 0xa9059cbb, V376, 0x0, V379, V380, V379, 0x0, V351]
Exit stack: [V11, 0x301, V193, V351, 0xa9059cbb, V376, 0x0, V379, V380, V379, 0x0, V351]

================================

Block 0x62f
[0x62f:0x632]
---
Predecessors: [0x54d]
Successors: []
---
0x62f PUSH1 0x0
0x631 DUP1
0x632 REVERT
---
0x62f: V386 = 0x0
0x632: REVERT 0x0 0x0
---
Entry stack: [V11, 0x301, V193, V351, 0xa9059cbb, V376, 0x0, V379, V380, V379, 0x0, V351]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x301, V193, V351, 0xa9059cbb, V376, 0x0, V379, V380, V379, 0x0, V351]

================================

Block 0x633
[0x633:0x63f]
---
Predecessors: [0x54d]
Successors: [0x640, 0x644]
---
0x633 JUMPDEST
0x634 PUSH2 0x2c6
0x637 GAS
0x638 SUB
0x639 CALL
0x63a ISZERO
0x63b ISZERO
0x63c PUSH2 0x644
0x63f JUMPI
---
0x633: JUMPDEST 
0x634: V387 = 0x2c6
0x637: V388 = GAS
0x638: V389 = SUB V388 0x2c6
0x639: V390 = CALL V389 V351 0x0 V379 V380 V379 0x0
0x63a: V391 = ISZERO V390
0x63b: V392 = ISZERO V391
0x63c: V393 = 0x644
0x63f: JUMPI 0x644 V392
---
Entry stack: [V11, 0x301, V193, V351, 0xa9059cbb, V376, 0x0, V379, V380, V379, 0x0, V351]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x301, V193, V351, 0xa9059cbb, V376]

================================

Block 0x640
[0x640:0x643]
---
Predecessors: [0x633]
Successors: []
---
0x640 PUSH1 0x0
0x642 DUP1
0x643 REVERT
---
0x640: V394 = 0x0
0x643: REVERT 0x0 0x0
---
Entry stack: [V11, 0x301, V193, V351, 0xa9059cbb, V376]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x301, V193, V351, 0xa9059cbb, V376]

================================

Block 0x644
[0x644:0x649]
---
Predecessors: [0x633]
Successors: [0x301]
---
0x644 JUMPDEST
0x645 POP
0x646 POP
0x647 POP
0x648 POP
0x649 JUMP
---
0x644: JUMPDEST 
0x649: JUMP 0x301
---
Entry stack: [V11, 0x301, V193, V351, 0xa9059cbb, V376]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x64a
[0x64a:0x653]
---
Predecessors: [0x30e]
Successors: [0x316]
---
0x64a JUMPDEST
0x64b PUSH1 0x0
0x64d PUSH1 0x1
0x64f SLOAD
0x650 SWAP1
0x651 POP
0x652 SWAP1
0x653 JUMP
---
0x64a: JUMPDEST 
0x64b: V395 = 0x0
0x64d: V396 = 0x1
0x64f: V397 = S[0x1]
0x653: JUMP 0x316
---
Entry stack: [V11, 0x316]
Stack pops: 1
Stack additions: [V397]
Exit stack: [V11, V397]

================================

Block 0x654
[0x654:0x6aa]
---
Predecessors: [0x32c]
Successors: [0x6ab, 0x6af]
---
0x654 JUMPDEST
0x655 PUSH1 0x0
0x657 DUP1
0x658 SWAP1
0x659 SLOAD
0x65a SWAP1
0x65b PUSH2 0x100
0x65e EXP
0x65f SWAP1
0x660 DIV
0x661 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x676 AND
0x677 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68c AND
0x68d CALLER
0x68e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a3 AND
0x6a4 EQ
0x6a5 ISZERO
0x6a6 ISZERO
0x6a7 PUSH2 0x6af
0x6aa JUMPI
---
0x654: JUMPDEST 
0x655: V398 = 0x0
0x659: V399 = S[0x0]
0x65b: V400 = 0x100
0x65e: V401 = EXP 0x100 0x0
0x660: V402 = DIV V399 0x1
0x661: V403 = 0xffffffffffffffffffffffffffffffffffffffff
0x676: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x677: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x68c: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x68d: V407 = CALLER
0x68e: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a3: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x6a4: V410 = EQ V409 V406
0x6a5: V411 = ISZERO V410
0x6a6: V412 = ISZERO V411
0x6a7: V413 = 0x6af
0x6aa: JUMPI 0x6af V412
---
Entry stack: [V11, 0x361, V214, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x361, V214, V217]

================================

Block 0x6ab
[0x6ab:0x6ae]
---
Predecessors: [0x654]
Successors: []
---
0x6ab PUSH1 0x0
0x6ad DUP1
0x6ae REVERT
---
0x6ab: V414 = 0x0
0x6ae: REVERT 0x0 0x0
---
Entry stack: [V11, 0x361, V214, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x361, V214, V217]

================================

Block 0x6af
[0x6af:0x76e]
---
Predecessors: [0x654]
Successors: [0x76f, 0x773]
---
0x6af JUMPDEST
0x6b0 PUSH1 0x7
0x6b2 PUSH1 0x0
0x6b4 SWAP1
0x6b5 SLOAD
0x6b6 SWAP1
0x6b7 PUSH2 0x100
0x6ba EXP
0x6bb SWAP1
0x6bc DIV
0x6bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d2 AND
0x6d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e8 AND
0x6e9 PUSH4 0xa9059cbb
0x6ee DUP4
0x6ef DUP4
0x6f0 PUSH1 0x40
0x6f2 MLOAD
0x6f3 DUP4
0x6f4 PUSH4 0xffffffff
0x6f9 AND
0x6fa PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x718 MUL
0x719 DUP2
0x71a MSTORE
0x71b PUSH1 0x4
0x71d ADD
0x71e DUP1
0x71f DUP4
0x720 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x735 AND
0x736 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74b AND
0x74c DUP2
0x74d MSTORE
0x74e PUSH1 0x20
0x750 ADD
0x751 DUP3
0x752 DUP2
0x753 MSTORE
0x754 PUSH1 0x20
0x756 ADD
0x757 SWAP3
0x758 POP
0x759 POP
0x75a POP
0x75b PUSH1 0x0
0x75d PUSH1 0x40
0x75f MLOAD
0x760 DUP1
0x761 DUP4
0x762 SUB
0x763 DUP2
0x764 PUSH1 0x0
0x766 DUP8
0x767 DUP1
0x768 EXTCODESIZE
0x769 ISZERO
0x76a ISZERO
0x76b PUSH2 0x773
0x76e JUMPI
---
0x6af: JUMPDEST 
0x6b0: V415 = 0x7
0x6b2: V416 = 0x0
0x6b5: V417 = S[0x7]
0x6b7: V418 = 0x100
0x6ba: V419 = EXP 0x100 0x0
0x6bc: V420 = DIV V417 0x1
0x6bd: V421 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d2: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0x6d3: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e8: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x6e9: V425 = 0xa9059cbb
0x6f0: V426 = 0x40
0x6f2: V427 = M[0x40]
0x6f4: V428 = 0xffffffff
0x6f9: V429 = AND 0xffffffff 0xa9059cbb
0x6fa: V430 = 0x100000000000000000000000000000000000000000000000000000000
0x718: V431 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x71a: M[V427] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x71b: V432 = 0x4
0x71d: V433 = ADD 0x4 V427
0x720: V434 = 0xffffffffffffffffffffffffffffffffffffffff
0x735: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x736: V436 = 0xffffffffffffffffffffffffffffffffffffffff
0x74b: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x74d: M[V433] = V437
0x74e: V438 = 0x20
0x750: V439 = ADD 0x20 V433
0x753: M[V439] = V217
0x754: V440 = 0x20
0x756: V441 = ADD 0x20 V439
0x75b: V442 = 0x0
0x75d: V443 = 0x40
0x75f: V444 = M[0x40]
0x762: V445 = SUB V441 V444
0x764: V446 = 0x0
0x768: V447 = EXTCODESIZE V424
0x769: V448 = ISZERO V447
0x76a: V449 = ISZERO V448
0x76b: V450 = 0x773
0x76e: JUMPI 0x773 V449
---
Entry stack: [V11, 0x361, V214, V217]
Stack pops: 2
Stack additions: [S1, S0, V424, 0xa9059cbb, V441, 0x0, V444, V445, V444, 0x0, V424]
Exit stack: [V11, 0x361, V214, V217, V424, 0xa9059cbb, V441, 0x0, V444, V445, V444, 0x0, V424]

================================

Block 0x76f
[0x76f:0x772]
---
Predecessors: [0x6af]
Successors: []
---
0x76f PUSH1 0x0
0x771 DUP1
0x772 REVERT
---
0x76f: V451 = 0x0
0x772: REVERT 0x0 0x0
---
Entry stack: [V11, 0x361, V214, V217, V424, 0xa9059cbb, V441, 0x0, V444, V445, V444, 0x0, V424]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x361, V214, V217, V424, 0xa9059cbb, V441, 0x0, V444, V445, V444, 0x0, V424]

================================

Block 0x773
[0x773:0x77f]
---
Predecessors: [0x6af]
Successors: [0x780, 0x784]
---
0x773 JUMPDEST
0x774 PUSH2 0x2c6
0x777 GAS
0x778 SUB
0x779 CALL
0x77a ISZERO
0x77b ISZERO
0x77c PUSH2 0x784
0x77f JUMPI
---
0x773: JUMPDEST 
0x774: V452 = 0x2c6
0x777: V453 = GAS
0x778: V454 = SUB V453 0x2c6
0x779: V455 = CALL V454 V424 0x0 V444 V445 V444 0x0
0x77a: V456 = ISZERO V455
0x77b: V457 = ISZERO V456
0x77c: V458 = 0x784
0x77f: JUMPI 0x784 V457
---
Entry stack: [V11, 0x361, V214, V217, V424, 0xa9059cbb, V441, 0x0, V444, V445, V444, 0x0, V424]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x361, V214, V217, V424, 0xa9059cbb, V441]

================================

Block 0x780
[0x780:0x783]
---
Predecessors: [0x773]
Successors: []
---
0x780 PUSH1 0x0
0x782 DUP1
0x783 REVERT
---
0x780: V459 = 0x0
0x783: REVERT 0x0 0x0
---
Entry stack: [V11, 0x361, V214, V217, V424, 0xa9059cbb, V441]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x361, V214, V217, V424, 0xa9059cbb, V441]

================================

Block 0x784
[0x784:0x78a]
---
Predecessors: [0x773]
Successors: [0x361]
---
0x784 JUMPDEST
0x785 POP
0x786 POP
0x787 POP
0x788 POP
0x789 POP
0x78a JUMP
---
0x784: JUMPDEST 
0x78a: JUMP 0x361
---
Entry stack: [V11, 0x361, V214, V217, V424, 0xa9059cbb, V441]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x78b
[0x78b:0x7b0]
---
Predecessors: [0x36e]
Successors: [0x376]
---
0x78b JUMPDEST
0x78c PUSH1 0x7
0x78e PUSH1 0x0
0x790 SWAP1
0x791 SLOAD
0x792 SWAP1
0x793 PUSH2 0x100
0x796 EXP
0x797 SWAP1
0x798 DIV
0x799 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ae AND
0x7af DUP2
0x7b0 JUMP
---
0x78b: JUMPDEST 
0x78c: V460 = 0x7
0x78e: V461 = 0x0
0x791: V462 = S[0x7]
0x793: V463 = 0x100
0x796: V464 = EXP 0x100 0x0
0x798: V465 = DIV V462 0x1
0x799: V466 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ae: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V465
0x7b0: JUMP 0x376
---
Entry stack: [V11, 0x376]
Stack pops: 1
Stack additions: [S0, V467]
Exit stack: [V11, 0x376, V467]

================================

Block 0x7b1
[0x7b1:0x7c8]
---
Predecessors: [0x3c3]
Successors: [0x3ef]
---
0x7b1 JUMPDEST
0x7b2 PUSH1 0x8
0x7b4 PUSH1 0x20
0x7b6 MSTORE
0x7b7 DUP1
0x7b8 PUSH1 0x0
0x7ba MSTORE
0x7bb PUSH1 0x40
0x7bd PUSH1 0x0
0x7bf SHA3
0x7c0 PUSH1 0x0
0x7c2 SWAP2
0x7c3 POP
0x7c4 SWAP1
0x7c5 POP
0x7c6 SLOAD
0x7c7 DUP2
0x7c8 JUMP
---
0x7b1: JUMPDEST 
0x7b2: V468 = 0x8
0x7b4: V469 = 0x20
0x7b6: M[0x20] = 0x8
0x7b8: V470 = 0x0
0x7ba: M[0x0] = V246
0x7bb: V471 = 0x40
0x7bd: V472 = 0x0
0x7bf: V473 = SHA3 0x0 0x40
0x7c0: V474 = 0x0
0x7c6: V475 = S[V473]
0x7c8: JUMP 0x3ef
---
Entry stack: [V11, 0x3ef, V246]
Stack pops: 2
Stack additions: [S1, V475]
Exit stack: [V11, 0x3ef, V475]

================================

Block 0x7c9
[0x7c9:0x7ce]
---
Predecessors: [0x410]
Successors: [0x418]
---
0x7c9 JUMPDEST
0x7ca PUSH1 0x4
0x7cc SLOAD
0x7cd DUP2
0x7ce JUMP
---
0x7c9: JUMPDEST 
0x7ca: V476 = 0x4
0x7cc: V477 = S[0x4]
0x7ce: JUMP 0x418
---
Entry stack: [V11, 0x418]
Stack pops: 1
Stack additions: [S0, V477]
Exit stack: [V11, 0x418, V477]

================================

Block 0x7cf
[0x7cf:0x7f3]
---
Predecessors: [0x439]
Successors: [0x441]
---
0x7cf JUMPDEST
0x7d0 PUSH1 0x0
0x7d2 DUP1
0x7d3 SWAP1
0x7d4 SLOAD
0x7d5 SWAP1
0x7d6 PUSH2 0x100
0x7d9 EXP
0x7da SWAP1
0x7db DIV
0x7dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f1 AND
0x7f2 DUP2
0x7f3 JUMP
---
0x7cf: JUMPDEST 
0x7d0: V478 = 0x0
0x7d4: V479 = S[0x0]
0x7d6: V480 = 0x100
0x7d9: V481 = EXP 0x100 0x0
0x7db: V482 = DIV V479 0x1
0x7dc: V483 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f1: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x7f3: JUMP 0x441
---
Entry stack: [V11, 0x441]
Stack pops: 1
Stack additions: [S0, V484]
Exit stack: [V11, 0x441, V484]

================================

Block 0x7f4
[0x7f4:0x7f9]
---
Predecessors: [0x48e]
Successors: [0x496]
---
0x7f4 JUMPDEST
0x7f5 PUSH1 0x6
0x7f7 SLOAD
0x7f8 DUP2
0x7f9 JUMP
---
0x7f4: JUMPDEST 
0x7f5: V485 = 0x6
0x7f7: V486 = S[0x6]
0x7f9: JUMP 0x496
---
Entry stack: [V11, 0x496]
Stack pops: 1
Stack additions: [S0, V486]
Exit stack: [V11, 0x496, V486]

================================

Block 0x7fa
[0x7fa:0x801]
---
Predecessors: [0x4b7]
Successors: [0x4bf]
---
0x7fa JUMPDEST
0x7fb PUSH4 0x5a350ac0
0x800 DUP2
0x801 JUMP
---
0x7fa: JUMPDEST 
0x7fb: V487 = 0x5a350ac0
0x801: JUMP 0x4bf
---
Entry stack: [V11, 0x4bf]
Stack pops: 1
Stack additions: [S0, 0x5a350ac0]
Exit stack: [V11, 0x4bf, 0x5a350ac0]

================================

Block 0x802
[0x802:0x82d]
---
Predecessors: []
Successors: []
---
0x802 STOP
0x803 LOG1
0x804 PUSH6 0x627a7a723058
0x80b SHA3
0x80c MISSING 0xe1
0x80d MISSING 0x5e
0x80e SELFDESTRUCT
0x80f REVERT
0x810 ADDMOD
0x811 MISSING 0xeb
0x812 MISSING 0xe4
0x813 MISSING 0xd2
0x814 SWAP5
0x815 MISSING 0xba
0x816 RETURNDATASIZE
0x817 CALLER
0x818 STATICCALL
0x819 MISSING 0xe4
0x81a STATICCALL
0x81b MISSING 0x24
0x81c MISSING 0xb1
0x81d MULMOD
0x81e MISSING 0xf
0x81f MISSING 0xc1
0x820 PUSH8 0x8474e1c1c26cd644
0x829 MISSING 0xce
0x82a MISSING 0xbb
0x82b MISSING 0xd9
0x82c STOP
0x82d MISSING 0x29
---
0x802: STOP 
0x803: LOG S0 S1 S2
0x804: V488 = 0x627a7a723058
0x80b: V489 = SHA3 0x627a7a723058 S3
0x80c: MISSING 0xe1
0x80d: MISSING 0x5e
0x80e: SELFDESTRUCT S0
0x80f: REVERT S0 S1
0x810: V490 = ADDMOD S0 S1 S2
0x811: MISSING 0xeb
0x812: MISSING 0xe4
0x813: MISSING 0xd2
0x815: MISSING 0xba
0x816: V491 = RETURNDATASIZE
0x817: V492 = CALLER
0x818: V493 = STATICCALL V492 V491 S0 S1 S2 S3
0x819: MISSING 0xe4
0x81a: V494 = STATICCALL S0 S1 S2 S3 S4 S5
0x81b: MISSING 0x24
0x81c: MISSING 0xb1
0x81d: V495 = MULMOD S0 S1 S2
0x81e: MISSING 0xf
0x81f: MISSING 0xc1
0x820: V496 = 0x8474e1c1c26cd644
0x829: MISSING 0xce
0x82a: MISSING 0xbb
0x82b: MISSING 0xd9
0x82c: STOP 
0x82d: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V489, V490, S5, S1, S2, S3, S4, S0, V493, V494, V495, 0x8474e1c1c26cd644]
Exit stack: []

================================

Function 0:
Public function signature: 0x14a8bd0d
Entry block: 0x299
Exit block: 0x2ac
Body: 0x299, 0x2a0, 0x2a4, 0x2ac, 0x4d5

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x2c2
Exit block: 0x2d5
Body: 0x2c2, 0x2c9, 0x2cd, 0x2d5, 0x4db

Function 2:
Public function signature: 0x2d7dc81c
Entry block: 0x2eb
Exit block: 0x301
Body: 0x2eb, 0x301, 0x4e1, 0x538, 0x53c, 0x549, 0x54d, 0x62f, 0x633, 0x640, 0x644

Function 3:
Public function signature: 0x60659a92
Entry block: 0x303
Exit block: 0x316
Body: 0x303, 0x30a, 0x30e, 0x316, 0x64a

Function 4:
Public function signature: 0x6df7f38f
Entry block: 0x32c
Exit block: 0x361
Body: 0x32c, 0x361, 0x654, 0x6ab, 0x6af, 0x76f, 0x773, 0x780, 0x784

Function 5:
Public function signature: 0x6e66f6e9
Entry block: 0x363
Exit block: 0x376
Body: 0x363, 0x36a, 0x36e, 0x376, 0x78b

Function 6:
Public function signature: 0x70a08231
Entry block: 0x3b8
Exit block: 0x3ef
Body: 0x3b8, 0x3bf, 0x3c3, 0x3ef, 0x7b1

Function 7:
Public function signature: 0x7b3e5e7b
Entry block: 0x405
Exit block: 0x418
Body: 0x405, 0x40c, 0x410, 0x418, 0x7c9

Function 8:
Public function signature: 0x8da5cb5b
Entry block: 0x42e
Exit block: 0x441
Body: 0x42e, 0x435, 0x439, 0x441, 0x7cf

Function 9:
Public function signature: 0xa035b1fe
Entry block: 0x483
Exit block: 0x496
Body: 0x483, 0x48a, 0x48e, 0x496, 0x7f4

Function 10:
Public function signature: 0xba9a061a
Entry block: 0x4ac
Exit block: 0x4bf
Body: 0x4ac, 0x4b3, 0x4b7, 0x4bf, 0x7fa

Function 11:
Public fallback function
Entry block: 0xaf
Exit block: 0x296
Body: 0xaf, 0xbd, 0xc6, 0xcd, 0xd1, 0xe4, 0xe8, 0x21c, 0x220, 0x22d, 0x231, 0x292, 0x296

