Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x98]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x98
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x98
0xc: JUMPI 0x98 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x1d5]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1a495edd
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x1d5
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1a495edd
0x3b: V13 = EQ V11 0x1a495edd
0x3c: V14 = 0x1d5
0x3f: JUMPI 0x1d5 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x1fa]
---
0x40 DUP1
0x41 PUSH4 0x2ca126f8
0x46 EQ
0x47 PUSH2 0x1fa
0x4a JUMPI
---
0x41: V15 = 0x2ca126f8
0x46: V16 = EQ 0x2ca126f8 V11
0x47: V17 = 0x1fa
0x4a: JUMPI 0x1fa V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x20d]
---
0x4b DUP1
0x4c PUSH4 0x6e66f6e9
0x51 EQ
0x52 PUSH2 0x20d
0x55 JUMPI
---
0x4c: V18 = 0x6e66f6e9
0x51: V19 = EQ 0x6e66f6e9 V11
0x52: V20 = 0x20d
0x55: JUMPI 0x20d V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x23c]
---
0x56 DUP1
0x57 PUSH4 0x767800de
0x5c EQ
0x5d PUSH2 0x23c
0x60 JUMPI
---
0x57: V21 = 0x767800de
0x5c: V22 = EQ 0x767800de V11
0x5d: V23 = 0x23c
0x60: JUMPI 0x23c V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x24f]
---
0x61 DUP1
0x62 PUSH4 0x7ac1cb30
0x67 EQ
0x68 PUSH2 0x24f
0x6b JUMPI
---
0x62: V24 = 0x7ac1cb30
0x67: V25 = EQ 0x7ac1cb30 V11
0x68: V26 = 0x24f
0x6b: JUMPI 0x24f V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x27c]
---
0x6c DUP1
0x6d PUSH4 0x8de38f98
0x72 EQ
0x73 PUSH2 0x27c
0x76 JUMPI
---
0x6d: V27 = 0x8de38f98
0x72: V28 = EQ 0x8de38f98 V11
0x73: V29 = 0x27c
0x76: JUMPI 0x27c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x28f]
---
0x77 DUP1
0x78 PUSH4 0xaa8c217c
0x7d EQ
0x7e PUSH2 0x28f
0x81 JUMPI
---
0x78: V30 = 0xaa8c217c
0x7d: V31 = EQ 0xaa8c217c V11
0x7e: V32 = 0x28f
0x81: JUMPI 0x28f V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x2a2]
---
0x82 DUP1
0x83 PUSH4 0xf2fde38b
0x88 EQ
0x89 PUSH2 0x2a2
0x8c JUMPI
---
0x83: V33 = 0xf2fde38b
0x88: V34 = EQ 0xf2fde38b V11
0x89: V35 = 0x2a2
0x8c: JUMPI 0x2a2 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x2c3]
---
0x8d DUP1
0x8e PUSH4 0xf851a440
0x93 EQ
0x94 PUSH2 0x2c3
0x97 JUMPI
---
0x8e: V36 = 0xf851a440
0x93: V37 = EQ 0xf851a440 V11
0x94: V38 = 0x2c3
0x97: JUMPI 0x2c3 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xb1]
---
Predecessors: [0x0, 0x8d]
Successors: [0xb2, 0xbb]
---
0x98 JUMPDEST
0x99 PUSH1 0x0
0x9b PUSH11 0x295be96e64066972000000
0xa7 PUSH1 0x5
0xa9 SLOAD
0xaa GT
0xab ISZERO
0xac DUP1
0xad ISZERO
0xae PUSH2 0xbb
0xb1 JUMPI
---
0x98: JUMPDEST 
0x99: V39 = 0x0
0x9b: V40 = 0x295be96e64066972000000
0xa7: V41 = 0x5
0xa9: V42 = S[0x5]
0xaa: V43 = GT V42 0x295be96e64066972000000
0xab: V44 = ISZERO V43
0xad: V45 = ISZERO V44
0xae: V46 = 0xbb
0xb1: JUMPI 0xbb V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, V44]
Exit stack: [V11, 0x0, V44]

================================

Block 0xb2
[0xb2:0xba]
---
Predecessors: [0x98]
Successors: [0xbb]
---
0xb2 POP
0xb3 PUSH4 0x5bcb50ff
0xb8 TIMESTAMP
0xb9 GT
0xba ISZERO
---
0xb3: V47 = 0x5bcb50ff
0xb8: V48 = TIMESTAMP
0xb9: V49 = GT V48 0x5bcb50ff
0xba: V50 = ISZERO V49
---
Entry stack: [V11, 0x0, V44]
Stack pops: 1
Stack additions: [V50]
Exit stack: [V11, 0x0, V50]

================================

Block 0xbb
[0xbb:0xc0]
---
Predecessors: [0x98, 0xb2]
Successors: [0xc1, 0x1d2]
---
0xbb JUMPDEST
0xbc ISZERO
0xbd PUSH2 0x1d2
0xc0 JUMPI
---
0xbb: JUMPDEST 
0xbc: V51 = ISZERO S0
0xbd: V52 = 0x1d2
0xc0: JUMPI 0x1d2 V51
---
Entry stack: [V11, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xc1
[0xc1:0xf2]
---
Predecessors: [0xbb]
Successors: [0xf3, 0xf7]
---
0xc1 PUSH1 0x7
0xc3 SLOAD
0xc4 PUSH1 0x1
0xc6 PUSH1 0xa0
0xc8 PUSH1 0x2
0xca EXP
0xcb SUB
0xcc AND
0xcd PUSH1 0x2
0xcf CALLVALUE
0xd0 DIV
0xd1 DUP1
0xd2 ISZERO
0xd3 PUSH2 0x8fc
0xd6 MUL
0xd7 SWAP1
0xd8 PUSH1 0x40
0xda MLOAD
0xdb PUSH1 0x0
0xdd PUSH1 0x40
0xdf MLOAD
0xe0 DUP1
0xe1 DUP4
0xe2 SUB
0xe3 DUP2
0xe4 DUP6
0xe5 DUP9
0xe6 DUP9
0xe7 CALL
0xe8 SWAP4
0xe9 POP
0xea POP
0xeb POP
0xec POP
0xed ISZERO
0xee ISZERO
0xef PUSH2 0xf7
0xf2 JUMPI
---
0xc1: V53 = 0x7
0xc3: V54 = S[0x7]
0xc4: V55 = 0x1
0xc6: V56 = 0xa0
0xc8: V57 = 0x2
0xca: V58 = EXP 0x2 0xa0
0xcb: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xcd: V61 = 0x2
0xcf: V62 = CALLVALUE
0xd0: V63 = DIV V62 0x2
0xd2: V64 = ISZERO V63
0xd3: V65 = 0x8fc
0xd6: V66 = MUL 0x8fc V64
0xd8: V67 = 0x40
0xda: V68 = M[0x40]
0xdb: V69 = 0x0
0xdd: V70 = 0x40
0xdf: V71 = M[0x40]
0xe2: V72 = SUB V68 V71
0xe7: V73 = CALL V66 V60 V63 V71 V72 V71 0x0
0xed: V74 = ISZERO V73
0xee: V75 = ISZERO V74
0xef: V76 = 0xf7
0xf2: JUMPI 0xf7 V75
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xf3
[0xf3:0xf6]
---
Predecessors: [0xc1]
Successors: []
---
0xf3 PUSH1 0x0
0xf5 DUP1
0xf6 REVERT
---
0xf3: V77 = 0x0
0xf6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xf7
[0xf7:0x129]
---
Predecessors: [0xc1]
Successors: [0x12a, 0x12e]
---
0xf7 JUMPDEST
0xf8 PUSH1 0x6
0xfa SLOAD
0xfb PUSH1 0x1
0xfd PUSH1 0xa0
0xff PUSH1 0x2
0x101 EXP
0x102 SUB
0x103 AND
0x104 PUSH1 0x2
0x106 CALLVALUE
0x107 DIV
0x108 DUP1
0x109 ISZERO
0x10a PUSH2 0x8fc
0x10d MUL
0x10e SWAP1
0x10f PUSH1 0x40
0x111 MLOAD
0x112 PUSH1 0x0
0x114 PUSH1 0x40
0x116 MLOAD
0x117 DUP1
0x118 DUP4
0x119 SUB
0x11a DUP2
0x11b DUP6
0x11c DUP9
0x11d DUP9
0x11e CALL
0x11f SWAP4
0x120 POP
0x121 POP
0x122 POP
0x123 POP
0x124 ISZERO
0x125 ISZERO
0x126 PUSH2 0x12e
0x129 JUMPI
---
0xf7: JUMPDEST 
0xf8: V78 = 0x6
0xfa: V79 = S[0x6]
0xfb: V80 = 0x1
0xfd: V81 = 0xa0
0xff: V82 = 0x2
0x101: V83 = EXP 0x2 0xa0
0x102: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0x103: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x104: V86 = 0x2
0x106: V87 = CALLVALUE
0x107: V88 = DIV V87 0x2
0x109: V89 = ISZERO V88
0x10a: V90 = 0x8fc
0x10d: V91 = MUL 0x8fc V89
0x10f: V92 = 0x40
0x111: V93 = M[0x40]
0x112: V94 = 0x0
0x114: V95 = 0x40
0x116: V96 = M[0x40]
0x119: V97 = SUB V93 V96
0x11e: V98 = CALL V91 V85 V88 V96 V97 V96 0x0
0x124: V99 = ISZERO V98
0x125: V100 = ISZERO V99
0x126: V101 = 0x12e
0x129: JUMPI 0x12e V100
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x12a
[0x12a:0x12d]
---
Predecessors: [0xf7]
Successors: []
---
0x12a PUSH1 0x0
0x12c DUP1
0x12d REVERT
---
0x12a: V102 = 0x0
0x12d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x12e
[0x12e:0x1b5]
---
Predecessors: [0xf7]
Successors: [0x1b6, 0x1ba]
---
0x12e JUMPDEST
0x12f POP
0x130 PUSH1 0x3
0x132 SLOAD
0x133 PUSH1 0x5
0x135 DUP1
0x136 SLOAD
0x137 CALLVALUE
0x138 SWAP1
0x139 SWAP3
0x13a MUL
0x13b SWAP2
0x13c DUP3
0x13d ADD
0x13e SWAP1
0x13f SSTORE
0x140 PUSH1 0x2
0x142 SLOAD
0x143 PUSH1 0x1
0x145 PUSH1 0xa0
0x147 PUSH1 0x2
0x149 EXP
0x14a SUB
0x14b AND
0x14c PUSH4 0xaac756b8
0x151 CALLER
0x152 DUP4
0x153 PUSH1 0x1
0x155 PUSH1 0x40
0x157 MLOAD
0x158 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x176 PUSH4 0xffffffff
0x17b DUP7
0x17c AND
0x17d MUL
0x17e DUP2
0x17f MSTORE
0x180 PUSH1 0x1
0x182 PUSH1 0xa0
0x184 PUSH1 0x2
0x186 EXP
0x187 SUB
0x188 SWAP1
0x189 SWAP4
0x18a AND
0x18b PUSH1 0x4
0x18d DUP5
0x18e ADD
0x18f MSTORE
0x190 PUSH1 0x24
0x192 DUP4
0x193 ADD
0x194 SWAP2
0x195 SWAP1
0x196 SWAP2
0x197 MSTORE
0x198 ISZERO
0x199 ISZERO
0x19a PUSH1 0x44
0x19c DUP3
0x19d ADD
0x19e MSTORE
0x19f PUSH1 0x64
0x1a1 ADD
0x1a2 PUSH1 0x20
0x1a4 PUSH1 0x40
0x1a6 MLOAD
0x1a7 DUP1
0x1a8 DUP4
0x1a9 SUB
0x1aa DUP2
0x1ab PUSH1 0x0
0x1ad DUP8
0x1ae DUP1
0x1af EXTCODESIZE
0x1b0 ISZERO
0x1b1 ISZERO
0x1b2 PUSH2 0x1ba
0x1b5 JUMPI
---
0x12e: JUMPDEST 
0x130: V103 = 0x3
0x132: V104 = S[0x3]
0x133: V105 = 0x5
0x136: V106 = S[0x5]
0x137: V107 = CALLVALUE
0x13a: V108 = MUL V104 V107
0x13d: V109 = ADD V108 V106
0x13f: S[0x5] = V109
0x140: V110 = 0x2
0x142: V111 = S[0x2]
0x143: V112 = 0x1
0x145: V113 = 0xa0
0x147: V114 = 0x2
0x149: V115 = EXP 0x2 0xa0
0x14a: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14b: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x14c: V118 = 0xaac756b8
0x151: V119 = CALLER
0x153: V120 = 0x1
0x155: V121 = 0x40
0x157: V122 = M[0x40]
0x158: V123 = 0x100000000000000000000000000000000000000000000000000000000
0x176: V124 = 0xffffffff
0x17c: V125 = AND 0xaac756b8 0xffffffff
0x17d: V126 = MUL 0xaac756b8 0x100000000000000000000000000000000000000000000000000000000
0x17f: M[V122] = 0xaac756b800000000000000000000000000000000000000000000000000000000
0x180: V127 = 0x1
0x182: V128 = 0xa0
0x184: V129 = 0x2
0x186: V130 = EXP 0x2 0xa0
0x187: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18a: V132 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x18b: V133 = 0x4
0x18e: V134 = ADD V122 0x4
0x18f: M[V134] = V132
0x190: V135 = 0x24
0x193: V136 = ADD V122 0x24
0x197: M[V136] = V108
0x198: V137 = ISZERO 0x1
0x199: V138 = ISZERO 0x0
0x19a: V139 = 0x44
0x19d: V140 = ADD V122 0x44
0x19e: M[V140] = 0x1
0x19f: V141 = 0x64
0x1a1: V142 = ADD 0x64 V122
0x1a2: V143 = 0x20
0x1a4: V144 = 0x40
0x1a6: V145 = M[0x40]
0x1a9: V146 = SUB V142 V145
0x1ab: V147 = 0x0
0x1af: V148 = EXTCODESIZE V117
0x1b0: V149 = ISZERO V148
0x1b1: V150 = ISZERO V149
0x1b2: V151 = 0x1ba
0x1b5: JUMPI 0x1ba V150
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V108, V117, 0xaac756b8, V142, 0x20, V145, V146, V145, 0x0, V117]
Exit stack: [V11, V108, V117, 0xaac756b8, V142, 0x20, V145, V146, V145, 0x0, V117]

================================

Block 0x1b6
[0x1b6:0x1b9]
---
Predecessors: [0x12e]
Successors: []
---
0x1b6 PUSH1 0x0
0x1b8 DUP1
0x1b9 REVERT
---
0x1b6: V152 = 0x0
0x1b9: REVERT 0x0 0x0
---
Entry stack: [V11, V108, V117, 0xaac756b8, V142, 0x20, V145, V146, V145, 0x0, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V108, V117, 0xaac756b8, V142, 0x20, V145, V146, V145, 0x0, V117]

================================

Block 0x1ba
[0x1ba:0x1c2]
---
Predecessors: [0x12e]
Successors: [0x1c3, 0x1c7]
---
0x1ba JUMPDEST
0x1bb GAS
0x1bc CALL
0x1bd ISZERO
0x1be ISZERO
0x1bf PUSH2 0x1c7
0x1c2 JUMPI
---
0x1ba: JUMPDEST 
0x1bb: V153 = GAS
0x1bc: V154 = CALL V153 V117 0x0 V145 V146 V145 0x20
0x1bd: V155 = ISZERO V154
0x1be: V156 = ISZERO V155
0x1bf: V157 = 0x1c7
0x1c2: JUMPI 0x1c7 V156
---
Entry stack: [V11, V108, V117, 0xaac756b8, V142, 0x20, V145, V146, V145, 0x0, V117]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V108, V117, 0xaac756b8, V142]

================================

Block 0x1c3
[0x1c3:0x1c6]
---
Predecessors: [0x1ba]
Successors: []
---
0x1c3 PUSH1 0x0
0x1c5 DUP1
0x1c6 REVERT
---
0x1c3: V158 = 0x0
0x1c6: REVERT 0x0 0x0
---
Entry stack: [V11, V108, V117, 0xaac756b8, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V108, V117, 0xaac756b8, V142]

================================

Block 0x1c7
[0x1c7:0x1d1]
---
Predecessors: [0x1ba]
Successors: [0x1d2]
---
0x1c7 JUMPDEST
0x1c8 POP
0x1c9 POP
0x1ca POP
0x1cb PUSH1 0x40
0x1cd MLOAD
0x1ce DUP1
0x1cf MLOAD
0x1d0 POP
0x1d1 POP
---
0x1c7: JUMPDEST 
0x1cb: V159 = 0x40
0x1cd: V160 = M[0x40]
0x1cf: V161 = M[V160]
---
Entry stack: [V11, V108, V117, 0xaac756b8, V142]
Stack pops: 3
Stack additions: []
Exit stack: [V11, V108]

================================

Block 0x1d2
[0x1d2:0x1d4]
---
Predecessors: [0xbb, 0x1c7]
Successors: []
---
0x1d2 JUMPDEST
0x1d3 POP
0x1d4 STOP
---
0x1d2: JUMPDEST 
0x1d4: STOP 
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d5
[0x1d5:0x1db]
---
Predecessors: [0xd]
Successors: [0x1dc, 0x1e0]
---
0x1d5 JUMPDEST
0x1d6 CALLVALUE
0x1d7 ISZERO
0x1d8 PUSH2 0x1e0
0x1db JUMPI
---
0x1d5: JUMPDEST 
0x1d6: V162 = CALLVALUE
0x1d7: V163 = ISZERO V162
0x1d8: V164 = 0x1e0
0x1db: JUMPI 0x1e0 V163
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1dc
[0x1dc:0x1df]
---
Predecessors: [0x1d5]
Successors: []
---
0x1dc PUSH1 0x0
0x1de DUP1
0x1df REVERT
---
0x1dc: V165 = 0x0
0x1df: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e0
[0x1e0:0x1e7]
---
Predecessors: [0x1d5]
Successors: [0x2d6]
---
0x1e0 JUMPDEST
0x1e1 PUSH2 0x1e8
0x1e4 PUSH2 0x2d6
0x1e7 JUMP
---
0x1e0: JUMPDEST 
0x1e1: V166 = 0x1e8
0x1e4: V167 = 0x2d6
0x1e7: JUMP 0x2d6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1e8]
Exit stack: [V11, 0x1e8]

================================

Block 0x1e8
[0x1e8:0x1f9]
---
Predecessors: [0x2d6, 0x2dc, 0x355]
Successors: []
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x40
0x1eb MLOAD
0x1ec SWAP1
0x1ed DUP2
0x1ee MSTORE
0x1ef PUSH1 0x20
0x1f1 ADD
0x1f2 PUSH1 0x40
0x1f4 MLOAD
0x1f5 DUP1
0x1f6 SWAP2
0x1f7 SUB
0x1f8 SWAP1
0x1f9 RETURN
---
0x1e8: JUMPDEST 
0x1e9: V168 = 0x40
0x1eb: V169 = M[0x40]
0x1ee: M[V169] = S0
0x1ef: V170 = 0x20
0x1f1: V171 = ADD 0x20 V169
0x1f2: V172 = 0x40
0x1f4: V173 = M[0x40]
0x1f7: V174 = SUB V171 V173
0x1f9: RETURN V173 V174
---
Entry stack: [V11, 0x1e8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1e8]

================================

Block 0x1fa
[0x1fa:0x200]
---
Predecessors: [0x40]
Successors: [0x201, 0x205]
---
0x1fa JUMPDEST
0x1fb CALLVALUE
0x1fc ISZERO
0x1fd PUSH2 0x205
0x200 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V175 = CALLVALUE
0x1fc: V176 = ISZERO V175
0x1fd: V177 = 0x205
0x200: JUMPI 0x205 V176
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x201
[0x201:0x204]
---
Predecessors: [0x1fa]
Successors: []
---
0x201 PUSH1 0x0
0x203 DUP1
0x204 REVERT
---
0x201: V178 = 0x0
0x204: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x205
[0x205:0x20c]
---
Predecessors: [0x1fa]
Successors: [0x2dc]
---
0x205 JUMPDEST
0x206 PUSH2 0x1e8
0x209 PUSH2 0x2dc
0x20c JUMP
---
0x205: JUMPDEST 
0x206: V179 = 0x1e8
0x209: V180 = 0x2dc
0x20c: JUMP 0x2dc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1e8]
Exit stack: [V11, 0x1e8]

================================

Block 0x20d
[0x20d:0x213]
---
Predecessors: [0x4b]
Successors: [0x214, 0x218]
---
0x20d JUMPDEST
0x20e CALLVALUE
0x20f ISZERO
0x210 PUSH2 0x218
0x213 JUMPI
---
0x20d: JUMPDEST 
0x20e: V181 = CALLVALUE
0x20f: V182 = ISZERO V181
0x210: V183 = 0x218
0x213: JUMPI 0x218 V182
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x214
[0x214:0x217]
---
Predecessors: [0x20d]
Successors: []
---
0x214 PUSH1 0x0
0x216 DUP1
0x217 REVERT
---
0x214: V184 = 0x0
0x217: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x218
[0x218:0x21f]
---
Predecessors: [0x20d]
Successors: [0x2e2]
---
0x218 JUMPDEST
0x219 PUSH2 0x220
0x21c PUSH2 0x2e2
0x21f JUMP
---
0x218: JUMPDEST 
0x219: V185 = 0x220
0x21c: V186 = 0x2e2
0x21f: JUMP 0x2e2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x220]
Exit stack: [V11, 0x220]

================================

Block 0x220
[0x220:0x23b]
---
Predecessors: [0x2e2, 0x2f1, 0x346, 0x411]
Successors: []
---
0x220 JUMPDEST
0x221 PUSH1 0x40
0x223 MLOAD
0x224 PUSH1 0x1
0x226 PUSH1 0xa0
0x228 PUSH1 0x2
0x22a EXP
0x22b SUB
0x22c SWAP1
0x22d SWAP2
0x22e AND
0x22f DUP2
0x230 MSTORE
0x231 PUSH1 0x20
0x233 ADD
0x234 PUSH1 0x40
0x236 MLOAD
0x237 DUP1
0x238 SWAP2
0x239 SUB
0x23a SWAP1
0x23b RETURN
---
0x220: JUMPDEST 
0x221: V187 = 0x40
0x223: V188 = M[0x40]
0x224: V189 = 0x1
0x226: V190 = 0xa0
0x228: V191 = 0x2
0x22a: V192 = EXP 0x2 0xa0
0x22b: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22e: V194 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x230: M[V188] = V194
0x231: V195 = 0x20
0x233: V196 = ADD 0x20 V188
0x234: V197 = 0x40
0x236: V198 = M[0x40]
0x239: V199 = SUB V196 V198
0x23b: RETURN V198 V199
---
Entry stack: [V11, 0x220, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x220]

================================

Block 0x23c
[0x23c:0x242]
---
Predecessors: [0x56]
Successors: [0x243, 0x247]
---
0x23c JUMPDEST
0x23d CALLVALUE
0x23e ISZERO
0x23f PUSH2 0x247
0x242 JUMPI
---
0x23c: JUMPDEST 
0x23d: V200 = CALLVALUE
0x23e: V201 = ISZERO V200
0x23f: V202 = 0x247
0x242: JUMPI 0x247 V201
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x243
[0x243:0x246]
---
Predecessors: [0x23c]
Successors: []
---
0x243 PUSH1 0x0
0x245 DUP1
0x246 REVERT
---
0x243: V203 = 0x0
0x246: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x247
[0x247:0x24e]
---
Predecessors: [0x23c]
Successors: [0x2f1]
---
0x247 JUMPDEST
0x248 PUSH2 0x220
0x24b PUSH2 0x2f1
0x24e JUMP
---
0x247: JUMPDEST 
0x248: V204 = 0x220
0x24b: V205 = 0x2f1
0x24e: JUMP 0x2f1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x220]
Exit stack: [V11, 0x220]

================================

Block 0x24f
[0x24f:0x255]
---
Predecessors: [0x61]
Successors: [0x256, 0x25a]
---
0x24f JUMPDEST
0x250 CALLVALUE
0x251 ISZERO
0x252 PUSH2 0x25a
0x255 JUMPI
---
0x24f: JUMPDEST 
0x250: V206 = CALLVALUE
0x251: V207 = ISZERO V206
0x252: V208 = 0x25a
0x255: JUMPI 0x25a V207
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x256
[0x256:0x259]
---
Predecessors: [0x24f]
Successors: []
---
0x256 PUSH1 0x0
0x258 DUP1
0x259 REVERT
---
0x256: V209 = 0x0
0x259: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x25a
[0x25a:0x267]
---
Predecessors: [0x24f]
Successors: [0x300]
---
0x25a JUMPDEST
0x25b PUSH2 0x268
0x25e PUSH1 0x4
0x260 CALLDATALOAD
0x261 PUSH1 0x24
0x263 CALLDATALOAD
0x264 PUSH2 0x300
0x267 JUMP
---
0x25a: JUMPDEST 
0x25b: V210 = 0x268
0x25e: V211 = 0x4
0x260: V212 = CALLDATALOAD 0x4
0x261: V213 = 0x24
0x263: V214 = CALLDATALOAD 0x24
0x264: V215 = 0x300
0x267: JUMP 0x300
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x268, V212, V214]
Exit stack: [V11, 0x268, V212, V214]

================================

Block 0x268
[0x268:0x27b]
---
Predecessors: [0x337]
Successors: []
---
0x268 JUMPDEST
0x269 PUSH1 0x40
0x26b MLOAD
0x26c SWAP1
0x26d ISZERO
0x26e ISZERO
0x26f DUP2
0x270 MSTORE
0x271 PUSH1 0x20
0x273 ADD
0x274 PUSH1 0x40
0x276 MLOAD
0x277 DUP1
0x278 SWAP2
0x279 SUB
0x27a SWAP1
0x27b RETURN
---
0x268: JUMPDEST 
0x269: V216 = 0x40
0x26b: V217 = M[0x40]
0x26d: V218 = ISZERO 0x1
0x26e: V219 = ISZERO 0x0
0x270: M[V217] = 0x1
0x271: V220 = 0x20
0x273: V221 = ADD 0x20 V217
0x274: V222 = 0x40
0x276: V223 = M[0x40]
0x279: V224 = SUB V221 V223
0x27b: RETURN V223 V224
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x27c
[0x27c:0x282]
---
Predecessors: [0x6c]
Successors: [0x283, 0x287]
---
0x27c JUMPDEST
0x27d CALLVALUE
0x27e ISZERO
0x27f PUSH2 0x287
0x282 JUMPI
---
0x27c: JUMPDEST 
0x27d: V225 = CALLVALUE
0x27e: V226 = ISZERO V225
0x27f: V227 = 0x287
0x282: JUMPI 0x287 V226
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x283
[0x283:0x286]
---
Predecessors: [0x27c]
Successors: []
---
0x283 PUSH1 0x0
0x285 DUP1
0x286 REVERT
---
0x283: V228 = 0x0
0x286: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x287
[0x287:0x28e]
---
Predecessors: [0x27c]
Successors: [0x346]
---
0x287 JUMPDEST
0x288 PUSH2 0x220
0x28b PUSH2 0x346
0x28e JUMP
---
0x287: JUMPDEST 
0x288: V229 = 0x220
0x28b: V230 = 0x346
0x28e: JUMP 0x346
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x220]
Exit stack: [V11, 0x220]

================================

Block 0x28f
[0x28f:0x295]
---
Predecessors: [0x77]
Successors: [0x296, 0x29a]
---
0x28f JUMPDEST
0x290 CALLVALUE
0x291 ISZERO
0x292 PUSH2 0x29a
0x295 JUMPI
---
0x28f: JUMPDEST 
0x290: V231 = CALLVALUE
0x291: V232 = ISZERO V231
0x292: V233 = 0x29a
0x295: JUMPI 0x29a V232
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x296
[0x296:0x299]
---
Predecessors: [0x28f]
Successors: []
---
0x296 PUSH1 0x0
0x298 DUP1
0x299 REVERT
---
0x296: V234 = 0x0
0x299: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x29a
[0x29a:0x2a1]
---
Predecessors: [0x28f]
Successors: [0x355]
---
0x29a JUMPDEST
0x29b PUSH2 0x1e8
0x29e PUSH2 0x355
0x2a1 JUMP
---
0x29a: JUMPDEST 
0x29b: V235 = 0x1e8
0x29e: V236 = 0x355
0x2a1: JUMP 0x355
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1e8]
Exit stack: [V11, 0x1e8]

================================

Block 0x2a2
[0x2a2:0x2a8]
---
Predecessors: [0x82]
Successors: [0x2a9, 0x2ad]
---
0x2a2 JUMPDEST
0x2a3 CALLVALUE
0x2a4 ISZERO
0x2a5 PUSH2 0x2ad
0x2a8 JUMPI
---
0x2a2: JUMPDEST 
0x2a3: V237 = CALLVALUE
0x2a4: V238 = ISZERO V237
0x2a5: V239 = 0x2ad
0x2a8: JUMPI 0x2ad V238
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a9
[0x2a9:0x2ac]
---
Predecessors: [0x2a2]
Successors: []
---
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac REVERT
---
0x2a9: V240 = 0x0
0x2ac: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ad
[0x2ad:0x2c0]
---
Predecessors: [0x2a2]
Successors: [0x35b]
---
0x2ad JUMPDEST
0x2ae PUSH2 0x2c1
0x2b1 PUSH1 0x1
0x2b3 PUSH1 0xa0
0x2b5 PUSH1 0x2
0x2b7 EXP
0x2b8 SUB
0x2b9 PUSH1 0x4
0x2bb CALLDATALOAD
0x2bc AND
0x2bd PUSH2 0x35b
0x2c0 JUMP
---
0x2ad: JUMPDEST 
0x2ae: V241 = 0x2c1
0x2b1: V242 = 0x1
0x2b3: V243 = 0xa0
0x2b5: V244 = 0x2
0x2b7: V245 = EXP 0x2 0xa0
0x2b8: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b9: V247 = 0x4
0x2bb: V248 = CALLDATALOAD 0x4
0x2bc: V249 = AND V248 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V250 = 0x35b
0x2c0: JUMP 0x35b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2c1, V249]
Exit stack: [V11, 0x2c1, V249]

================================

Block 0x2c1
[0x2c1:0x2c2]
---
Predecessors: [0x3a6]
Successors: []
---
0x2c1 JUMPDEST
0x2c2 STOP
---
0x2c1: JUMPDEST 
0x2c2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c3
[0x2c3:0x2c9]
---
Predecessors: [0x8d]
Successors: [0x2ca, 0x2ce]
---
0x2c3 JUMPDEST
0x2c4 CALLVALUE
0x2c5 ISZERO
0x2c6 PUSH2 0x2ce
0x2c9 JUMPI
---
0x2c3: JUMPDEST 
0x2c4: V251 = CALLVALUE
0x2c5: V252 = ISZERO V251
0x2c6: V253 = 0x2ce
0x2c9: JUMPI 0x2ce V252
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ca
[0x2ca:0x2cd]
---
Predecessors: [0x2c3]
Successors: []
---
0x2ca PUSH1 0x0
0x2cc DUP1
0x2cd REVERT
---
0x2ca: V254 = 0x0
0x2cd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ce
[0x2ce:0x2d5]
---
Predecessors: [0x2c3]
Successors: [0x411]
---
0x2ce JUMPDEST
0x2cf PUSH2 0x220
0x2d2 PUSH2 0x411
0x2d5 JUMP
---
0x2ce: JUMPDEST 
0x2cf: V255 = 0x220
0x2d2: V256 = 0x411
0x2d5: JUMP 0x411
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x220]
Exit stack: [V11, 0x220]

================================

Block 0x2d6
[0x2d6:0x2db]
---
Predecessors: [0x1e0]
Successors: [0x1e8]
---
0x2d6 JUMPDEST
0x2d7 PUSH1 0x3
0x2d9 SLOAD
0x2da DUP2
0x2db JUMP
---
0x2d6: JUMPDEST 
0x2d7: V257 = 0x3
0x2d9: V258 = S[0x3]
0x2db: JUMP 0x1e8
---
Entry stack: [V11, 0x1e8]
Stack pops: 1
Stack additions: [S0, V258]
Exit stack: [V11, 0x1e8, V258]

================================

Block 0x2dc
[0x2dc:0x2e1]
---
Predecessors: [0x205]
Successors: [0x1e8]
---
0x2dc JUMPDEST
0x2dd PUSH1 0x4
0x2df SLOAD
0x2e0 DUP2
0x2e1 JUMP
---
0x2dc: JUMPDEST 
0x2dd: V259 = 0x4
0x2df: V260 = S[0x4]
0x2e1: JUMP 0x1e8
---
Entry stack: [V11, 0x1e8]
Stack pops: 1
Stack additions: [S0, V260]
Exit stack: [V11, 0x1e8, V260]

================================

Block 0x2e2
[0x2e2:0x2f0]
---
Predecessors: [0x218]
Successors: [0x220]
---
0x2e2 JUMPDEST
0x2e3 PUSH1 0x2
0x2e5 SLOAD
0x2e6 PUSH1 0x1
0x2e8 PUSH1 0xa0
0x2ea PUSH1 0x2
0x2ec EXP
0x2ed SUB
0x2ee AND
0x2ef DUP2
0x2f0 JUMP
---
0x2e2: JUMPDEST 
0x2e3: V261 = 0x2
0x2e5: V262 = S[0x2]
0x2e6: V263 = 0x1
0x2e8: V264 = 0xa0
0x2ea: V265 = 0x2
0x2ec: V266 = EXP 0x2 0xa0
0x2ed: V267 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ee: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x2f0: JUMP 0x220
---
Entry stack: [V11, 0x220]
Stack pops: 1
Stack additions: [S0, V268]
Exit stack: [V11, 0x220, V268]

================================

Block 0x2f1
[0x2f1:0x2ff]
---
Predecessors: [0x247]
Successors: [0x220]
---
0x2f1 JUMPDEST
0x2f2 PUSH1 0x6
0x2f4 SLOAD
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0xa0
0x2f9 PUSH1 0x2
0x2fb EXP
0x2fc SUB
0x2fd AND
0x2fe DUP2
0x2ff JUMP
---
0x2f1: JUMPDEST 
0x2f2: V269 = 0x6
0x2f4: V270 = S[0x6]
0x2f5: V271 = 0x1
0x2f7: V272 = 0xa0
0x2f9: V273 = 0x2
0x2fb: V274 = EXP 0x2 0xa0
0x2fc: V275 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fd: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x2ff: JUMP 0x220
---
Entry stack: [V11, 0x220]
Stack pops: 1
Stack additions: [S0, V276]
Exit stack: [V11, 0x220, V276]

================================

Block 0x300
[0x300:0x318]
---
Predecessors: [0x25a]
Successors: [0x319, 0x32c]
---
0x300 JUMPDEST
0x301 PUSH1 0x0
0x303 DUP1
0x304 SLOAD
0x305 CALLER
0x306 PUSH1 0x1
0x308 PUSH1 0xa0
0x30a PUSH1 0x2
0x30c EXP
0x30d SUB
0x30e SWAP1
0x30f DUP2
0x310 AND
0x311 SWAP2
0x312 AND
0x313 EQ
0x314 DUP1
0x315 PUSH2 0x32c
0x318 JUMPI
---
0x300: JUMPDEST 
0x301: V277 = 0x0
0x304: V278 = S[0x0]
0x305: V279 = CALLER
0x306: V280 = 0x1
0x308: V281 = 0xa0
0x30a: V282 = 0x2
0x30c: V283 = EXP 0x2 0xa0
0x30d: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x310: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x312: V286 = AND V278 0xffffffffffffffffffffffffffffffffffffffff
0x313: V287 = EQ V286 V285
0x315: V288 = 0x32c
0x318: JUMPI 0x32c V287
---
Entry stack: [V11, 0x268, V212, V214]
Stack pops: 0
Stack additions: [0x0, V287]
Exit stack: [V11, 0x268, V212, V214, 0x0, V287]

================================

Block 0x319
[0x319:0x32b]
---
Predecessors: [0x300]
Successors: [0x32c]
---
0x319 POP
0x31a PUSH1 0x1
0x31c SLOAD
0x31d CALLER
0x31e PUSH1 0x1
0x320 PUSH1 0xa0
0x322 PUSH1 0x2
0x324 EXP
0x325 SUB
0x326 SWAP1
0x327 DUP2
0x328 AND
0x329 SWAP2
0x32a AND
0x32b EQ
---
0x31a: V289 = 0x1
0x31c: V290 = S[0x1]
0x31d: V291 = CALLER
0x31e: V292 = 0x1
0x320: V293 = 0xa0
0x322: V294 = 0x2
0x324: V295 = EXP 0x2 0xa0
0x325: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x328: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x32a: V298 = AND V290 0xffffffffffffffffffffffffffffffffffffffff
0x32b: V299 = EQ V298 V297
---
Entry stack: [V11, 0x268, V212, V214, 0x0, V287]
Stack pops: 1
Stack additions: [V299]
Exit stack: [V11, 0x268, V212, V214, 0x0, V299]

================================

Block 0x32c
[0x32c:0x332]
---
Predecessors: [0x300, 0x319]
Successors: [0x333, 0x337]
---
0x32c JUMPDEST
0x32d ISZERO
0x32e ISZERO
0x32f PUSH2 0x337
0x332 JUMPI
---
0x32c: JUMPDEST 
0x32d: V300 = ISZERO S0
0x32e: V301 = ISZERO V300
0x32f: V302 = 0x337
0x332: JUMPI 0x337 V301
---
Entry stack: [V11, 0x268, V212, V214, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x268, V212, V214, 0x0]

================================

Block 0x333
[0x333:0x336]
---
Predecessors: [0x32c]
Successors: []
---
0x333 PUSH1 0x0
0x335 DUP1
0x336 REVERT
---
0x333: V303 = 0x0
0x336: REVERT 0x0 0x0
---
Entry stack: [V11, 0x268, V212, V214, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x268, V212, V214, 0x0]

================================

Block 0x337
[0x337:0x345]
---
Predecessors: [0x32c]
Successors: [0x268]
---
0x337 JUMPDEST
0x338 POP
0x339 PUSH1 0x3
0x33b SWAP2
0x33c SWAP1
0x33d SWAP2
0x33e SSTORE
0x33f PUSH1 0x4
0x341 SSTORE
0x342 PUSH1 0x1
0x344 SWAP1
0x345 JUMP
---
0x337: JUMPDEST 
0x339: V304 = 0x3
0x33e: S[0x3] = V212
0x33f: V305 = 0x4
0x341: S[0x4] = V214
0x342: V306 = 0x1
0x345: JUMP 0x268
---
Entry stack: [V11, 0x268, V212, V214, 0x0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x346
[0x346:0x354]
---
Predecessors: [0x287]
Successors: [0x220]
---
0x346 JUMPDEST
0x347 PUSH1 0x7
0x349 SLOAD
0x34a PUSH1 0x1
0x34c PUSH1 0xa0
0x34e PUSH1 0x2
0x350 EXP
0x351 SUB
0x352 AND
0x353 DUP2
0x354 JUMP
---
0x346: JUMPDEST 
0x347: V307 = 0x7
0x349: V308 = S[0x7]
0x34a: V309 = 0x1
0x34c: V310 = 0xa0
0x34e: V311 = 0x2
0x350: V312 = EXP 0x2 0xa0
0x351: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x352: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x354: JUMP 0x220
---
Entry stack: [V11, 0x220]
Stack pops: 1
Stack additions: [S0, V314]
Exit stack: [V11, 0x220, V314]

================================

Block 0x355
[0x355:0x35a]
---
Predecessors: [0x29a]
Successors: [0x1e8]
---
0x355 JUMPDEST
0x356 PUSH1 0x5
0x358 SLOAD
0x359 DUP2
0x35a JUMP
---
0x355: JUMPDEST 
0x356: V315 = 0x5
0x358: V316 = S[0x5]
0x35a: JUMP 0x1e8
---
Entry stack: [V11, 0x1e8]
Stack pops: 1
Stack additions: [S0, V316]
Exit stack: [V11, 0x1e8, V316]

================================

Block 0x35b
[0x35b:0x372]
---
Predecessors: [0x2ad]
Successors: [0x373, 0x386]
---
0x35b JUMPDEST
0x35c PUSH1 0x0
0x35e SLOAD
0x35f CALLER
0x360 PUSH1 0x1
0x362 PUSH1 0xa0
0x364 PUSH1 0x2
0x366 EXP
0x367 SUB
0x368 SWAP1
0x369 DUP2
0x36a AND
0x36b SWAP2
0x36c AND
0x36d EQ
0x36e DUP1
0x36f PUSH2 0x386
0x372 JUMPI
---
0x35b: JUMPDEST 
0x35c: V317 = 0x0
0x35e: V318 = S[0x0]
0x35f: V319 = CALLER
0x360: V320 = 0x1
0x362: V321 = 0xa0
0x364: V322 = 0x2
0x366: V323 = EXP 0x2 0xa0
0x367: V324 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36a: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V319
0x36c: V326 = AND V318 0xffffffffffffffffffffffffffffffffffffffff
0x36d: V327 = EQ V326 V325
0x36f: V328 = 0x386
0x372: JUMPI 0x386 V327
---
Entry stack: [V11, 0x2c1, V249]
Stack pops: 0
Stack additions: [V327]
Exit stack: [V11, 0x2c1, V249, V327]

================================

Block 0x373
[0x373:0x385]
---
Predecessors: [0x35b]
Successors: [0x386]
---
0x373 POP
0x374 PUSH1 0x1
0x376 SLOAD
0x377 CALLER
0x378 PUSH1 0x1
0x37a PUSH1 0xa0
0x37c PUSH1 0x2
0x37e EXP
0x37f SUB
0x380 SWAP1
0x381 DUP2
0x382 AND
0x383 SWAP2
0x384 AND
0x385 EQ
---
0x374: V329 = 0x1
0x376: V330 = S[0x1]
0x377: V331 = CALLER
0x378: V332 = 0x1
0x37a: V333 = 0xa0
0x37c: V334 = 0x2
0x37e: V335 = EXP 0x2 0xa0
0x37f: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x382: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x384: V338 = AND V330 0xffffffffffffffffffffffffffffffffffffffff
0x385: V339 = EQ V338 V337
---
Entry stack: [V11, 0x2c1, V249, V327]
Stack pops: 1
Stack additions: [V339]
Exit stack: [V11, 0x2c1, V249, V339]

================================

Block 0x386
[0x386:0x38c]
---
Predecessors: [0x35b, 0x373]
Successors: [0x38d, 0x391]
---
0x386 JUMPDEST
0x387 ISZERO
0x388 ISZERO
0x389 PUSH2 0x391
0x38c JUMPI
---
0x386: JUMPDEST 
0x387: V340 = ISZERO S0
0x388: V341 = ISZERO V340
0x389: V342 = 0x391
0x38c: JUMPI 0x391 V341
---
Entry stack: [V11, 0x2c1, V249, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2c1, V249]

================================

Block 0x38d
[0x38d:0x390]
---
Predecessors: [0x386]
Successors: []
---
0x38d PUSH1 0x0
0x38f DUP1
0x390 REVERT
---
0x38d: V343 = 0x0
0x390: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2c1, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2c1, V249]

================================

Block 0x391
[0x391:0x3a1]
---
Predecessors: [0x386]
Successors: [0x3a2, 0x3a6]
---
0x391 JUMPDEST
0x392 PUSH1 0x1
0x394 PUSH1 0xa0
0x396 PUSH1 0x2
0x398 EXP
0x399 SUB
0x39a DUP2
0x39b AND
0x39c ISZERO
0x39d ISZERO
0x39e PUSH2 0x3a6
0x3a1 JUMPI
---
0x391: JUMPDEST 
0x392: V344 = 0x1
0x394: V345 = 0xa0
0x396: V346 = 0x2
0x398: V347 = EXP 0x2 0xa0
0x399: V348 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39b: V349 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0x39c: V350 = ISZERO V349
0x39d: V351 = ISZERO V350
0x39e: V352 = 0x3a6
0x3a1: JUMPI 0x3a6 V351
---
Entry stack: [V11, 0x2c1, V249]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x2c1, V249]

================================

Block 0x3a2
[0x3a2:0x3a5]
---
Predecessors: [0x391]
Successors: []
---
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 REVERT
---
0x3a2: V353 = 0x0
0x3a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2c1, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2c1, V249]

================================

Block 0x3a6
[0x3a6:0x410]
---
Predecessors: [0x391]
Successors: [0x2c1]
---
0x3a6 JUMPDEST
0x3a7 PUSH1 0x0
0x3a9 SLOAD
0x3aa PUSH1 0x1
0x3ac PUSH1 0xa0
0x3ae PUSH1 0x2
0x3b0 EXP
0x3b1 SUB
0x3b2 DUP1
0x3b3 DUP4
0x3b4 AND
0x3b5 SWAP2
0x3b6 AND
0x3b7 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x3d8 PUSH1 0x40
0x3da MLOAD
0x3db PUSH1 0x40
0x3dd MLOAD
0x3de DUP1
0x3df SWAP2
0x3e0 SUB
0x3e1 SWAP1
0x3e2 LOG3
0x3e3 PUSH1 0x1
0x3e5 DUP1
0x3e6 SLOAD
0x3e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fc NOT
0x3fd AND
0x3fe PUSH1 0x1
0x400 PUSH1 0xa0
0x402 PUSH1 0x2
0x404 EXP
0x405 SUB
0x406 SWAP3
0x407 SWAP1
0x408 SWAP3
0x409 AND
0x40a SWAP2
0x40b SWAP1
0x40c SWAP2
0x40d OR
0x40e SWAP1
0x40f SSTORE
0x410 JUMP
---
0x3a6: JUMPDEST 
0x3a7: V354 = 0x0
0x3a9: V355 = S[0x0]
0x3aa: V356 = 0x1
0x3ac: V357 = 0xa0
0x3ae: V358 = 0x2
0x3b0: V359 = EXP 0x2 0xa0
0x3b1: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b4: V361 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: V362 = AND V355 0xffffffffffffffffffffffffffffffffffffffff
0x3b7: V363 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x3d8: V364 = 0x40
0x3da: V365 = M[0x40]
0x3db: V366 = 0x40
0x3dd: V367 = M[0x40]
0x3e0: V368 = SUB V365 V367
0x3e2: LOG V367 V368 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V362 V361
0x3e3: V369 = 0x1
0x3e6: V370 = S[0x1]
0x3e7: V371 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fc: V372 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3fd: V373 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V370
0x3fe: V374 = 0x1
0x400: V375 = 0xa0
0x402: V376 = 0x2
0x404: V377 = EXP 0x2 0xa0
0x405: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x409: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x40d: V380 = OR V379 V373
0x40f: S[0x1] = V380
0x410: JUMP 0x2c1
---
Entry stack: [V11, 0x2c1, V249]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x411
[0x411:0x41f]
---
Predecessors: [0x2ce]
Successors: [0x220]
---
0x411 JUMPDEST
0x412 PUSH1 0x1
0x414 SLOAD
0x415 PUSH1 0x1
0x417 PUSH1 0xa0
0x419 PUSH1 0x2
0x41b EXP
0x41c SUB
0x41d AND
0x41e DUP2
0x41f JUMP
---
0x411: JUMPDEST 
0x412: V381 = 0x1
0x414: V382 = S[0x1]
0x415: V383 = 0x1
0x417: V384 = 0xa0
0x419: V385 = 0x2
0x41b: V386 = EXP 0x2 0xa0
0x41c: V387 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41d: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x41f: JUMP 0x220
---
Entry stack: [V11, 0x220]
Stack pops: 1
Stack additions: [S0, V388]
Exit stack: [V11, 0x220, V388]

================================

Block 0x420
[0x420:0x44b]
---
Predecessors: []
Successors: []
---
0x420 STOP
0x421 LOG1
0x422 PUSH6 0x627a7a723058
0x429 SHA3
0x42a DUP5
0x42b SWAP8
0x42c SMOD
0x42d MISSING 0x5f
0x42e MISSING 0x26
0x42f MISSING 0xb5
0x430 MISSING 0x1f
0x431 MISSING 0xaf
0x432 MISSING 0xd7
0x433 MISSING 0xd3
0x434 PUSH21 0x8a64c5abedafa392f1ae59c6798fedcbe0faf37df1
0x44a STOP
0x44b MISSING 0x29
---
0x420: STOP 
0x421: LOG S0 S1 S2
0x422: V389 = 0x627a7a723058
0x429: V390 = SHA3 0x627a7a723058 S3
0x42c: V391 = SMOD S10 V390
0x42d: MISSING 0x5f
0x42e: MISSING 0x26
0x42f: MISSING 0xb5
0x430: MISSING 0x1f
0x431: MISSING 0xaf
0x432: MISSING 0xd7
0x433: MISSING 0xd3
0x434: V392 = 0x8a64c5abedafa392f1ae59c6798fedcbe0faf37df1
0x44a: STOP 
0x44b: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V391, S4, S5, S6, S7, S8, S9, S7, 0x8a64c5abedafa392f1ae59c6798fedcbe0faf37df1]
Exit stack: []

================================

Function 0:
Public function signature: 0x1a495edd
Entry block: 0x1d5
Exit block: 0x1e8
Body: 0x1d5, 0x1dc, 0x1e0, 0x1e8, 0x2d6

Function 1:
Public function signature: 0x2ca126f8
Entry block: 0x1fa
Exit block: 0x1e8
Body: 0x1e8, 0x1fa, 0x201, 0x205, 0x2dc

Function 2:
Public function signature: 0x6e66f6e9
Entry block: 0x20d
Exit block: 0x220
Body: 0x20d, 0x214, 0x218, 0x220, 0x2e2

Function 3:
Public function signature: 0x767800de
Entry block: 0x23c
Exit block: 0x220
Body: 0x220, 0x23c, 0x243, 0x247, 0x2f1

Function 4:
Public function signature: 0x7ac1cb30
Entry block: 0x24f
Exit block: 0x268
Body: 0x24f, 0x256, 0x25a, 0x268, 0x300, 0x319, 0x32c, 0x333, 0x337

Function 5:
Public function signature: 0x8de38f98
Entry block: 0x27c
Exit block: 0x220
Body: 0x220, 0x27c, 0x283, 0x287, 0x346

Function 6:
Public function signature: 0xaa8c217c
Entry block: 0x28f
Exit block: 0x1e8
Body: 0x1e8, 0x28f, 0x296, 0x29a, 0x355

Function 7:
Public function signature: 0xf2fde38b
Entry block: 0x2a2
Exit block: 0x2c1
Body: 0x2a2, 0x2a9, 0x2ad, 0x2c1, 0x35b, 0x373, 0x386, 0x38d, 0x391, 0x3a2, 0x3a6

Function 8:
Public function signature: 0xf851a440
Entry block: 0x2c3
Exit block: 0x220
Body: 0x220, 0x2c3, 0x2ca, 0x2ce, 0x411

Function 9:
Public fallback function
Entry block: 0x98
Exit block: 0x1d2
Body: 0x98, 0xb2, 0xbb, 0xc1, 0xf3, 0xf7, 0x12a, 0x12e, 0x1b6, 0x1ba, 0x1c3, 0x1c7, 0x1d2

