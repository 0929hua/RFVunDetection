Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x66]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1b385f34
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x66
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1b385f34
0x3b: V13 = EQ V11 0x1b385f34
0x3c: V14 = 0x66
0x3f: JUMPI 0x66 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x70]
---
0x40 DUP1
0x41 PUSH4 0x3ccfd60b
0x46 EQ
0x47 PUSH2 0x70
0x4a JUMPI
---
0x41: V15 = 0x3ccfd60b
0x46: V16 = EQ 0x3ccfd60b V11
0x47: V17 = 0x70
0x4a: JUMPI 0x70 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x83]
---
0x4b DUP1
0x4c PUSH4 0x4bdb7369
0x51 EQ
0x52 PUSH2 0x83
0x55 JUMPI
---
0x4c: V18 = 0x4bdb7369
0x51: V19 = EQ 0x4bdb7369 V11
0x52: V20 = 0x83
0x55: JUMPI 0x83 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xb6]
---
0x56 DUP1
0x57 PUSH4 0xcf0e4be5
0x5c EQ
0x5d PUSH2 0xb6
0x60 JUMPI
---
0x57: V21 = 0xcf0e4be5
0x5c: V22 = EQ 0xcf0e4be5 V11
0x5d: V23 = 0xb6
0x60: JUMPI 0xb6 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x65]
---
Predecessors: [0x0, 0x56]
Successors: []
---
0x61 JUMPDEST
0x62 PUSH1 0x0
0x64 DUP1
0x65 REVERT
---
0x61: JUMPDEST 
0x62: V24 = 0x0
0x65: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x66
[0x66:0x6d]
---
Predecessors: [0xd]
Successors: [0xe5]
---
0x66 JUMPDEST
0x67 PUSH2 0x6e
0x6a PUSH2 0xe5
0x6d JUMP
---
0x66: JUMPDEST 
0x67: V25 = 0x6e
0x6a: V26 = 0xe5
0x6d: JUMP 0xe5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6e]
Exit stack: [V11, 0x6e]

================================

Block 0x6e
[0x6e:0x6f]
---
Predecessors: [0x237, 0x29f]
Successors: []
---
0x6e JUMPDEST
0x6f STOP
---
0x6e: JUMPDEST 
0x6f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x70
[0x70:0x76]
---
Predecessors: [0x40]
Successors: [0x77, 0x7b]
---
0x70 JUMPDEST
0x71 CALLVALUE
0x72 ISZERO
0x73 PUSH2 0x7b
0x76 JUMPI
---
0x70: JUMPDEST 
0x71: V27 = CALLVALUE
0x72: V28 = ISZERO V27
0x73: V29 = 0x7b
0x76: JUMPI 0x7b V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x77
[0x77:0x7a]
---
Predecessors: [0x70]
Successors: []
---
0x77 PUSH1 0x0
0x79 DUP1
0x7a REVERT
---
0x77: V30 = 0x0
0x7a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7b
[0x7b:0x82]
---
Predecessors: [0x70]
Successors: [0x23a]
---
0x7b JUMPDEST
0x7c PUSH2 0x6e
0x7f PUSH2 0x23a
0x82 JUMP
---
0x7b: JUMPDEST 
0x7c: V31 = 0x6e
0x7f: V32 = 0x23a
0x82: JUMP 0x23a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6e]
Exit stack: [V11, 0x6e]

================================

Block 0x83
[0x83:0x89]
---
Predecessors: [0x4b]
Successors: [0x8a, 0x8e]
---
0x83 JUMPDEST
0x84 CALLVALUE
0x85 ISZERO
0x86 PUSH2 0x8e
0x89 JUMPI
---
0x83: JUMPDEST 
0x84: V33 = CALLVALUE
0x85: V34 = ISZERO V33
0x86: V35 = 0x8e
0x89: JUMPI 0x8e V34
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8a
[0x8a:0x8d]
---
Predecessors: [0x83]
Successors: []
---
0x8a PUSH1 0x0
0x8c DUP1
0x8d REVERT
---
0x8a: V36 = 0x0
0x8d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0xa1]
---
Predecessors: [0x83]
Successors: [0x2a1]
---
0x8e JUMPDEST
0x8f PUSH2 0xa2
0x92 PUSH1 0x1
0x94 PUSH1 0xa0
0x96 PUSH1 0x2
0x98 EXP
0x99 SUB
0x9a PUSH1 0x4
0x9c CALLDATALOAD
0x9d AND
0x9e PUSH2 0x2a1
0xa1 JUMP
---
0x8e: JUMPDEST 
0x8f: V37 = 0xa2
0x92: V38 = 0x1
0x94: V39 = 0xa0
0x96: V40 = 0x2
0x98: V41 = EXP 0x2 0xa0
0x99: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a: V43 = 0x4
0x9c: V44 = CALLDATALOAD 0x4
0x9d: V45 = AND V44 0xffffffffffffffffffffffffffffffffffffffff
0x9e: V46 = 0x2a1
0xa1: JUMP 0x2a1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa2, V45]
Exit stack: [V11, 0xa2, V45]

================================

Block 0xa2
[0xa2:0xb5]
---
Predecessors: [0x2a1]
Successors: []
---
0xa2 JUMPDEST
0xa3 PUSH1 0x40
0xa5 MLOAD
0xa6 SWAP1
0xa7 ISZERO
0xa8 ISZERO
0xa9 DUP2
0xaa MSTORE
0xab PUSH1 0x20
0xad ADD
0xae PUSH1 0x40
0xb0 MLOAD
0xb1 DUP1
0xb2 SWAP2
0xb3 SUB
0xb4 SWAP1
0xb5 RETURN
---
0xa2: JUMPDEST 
0xa3: V47 = 0x40
0xa5: V48 = M[0x40]
0xa7: V49 = ISZERO V254
0xa8: V50 = ISZERO V49
0xaa: M[V48] = V50
0xab: V51 = 0x20
0xad: V52 = ADD 0x20 V48
0xae: V53 = 0x40
0xb0: V54 = M[0x40]
0xb3: V55 = SUB V52 V54
0xb5: RETURN V54 V55
---
Entry stack: [V11, V254]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xb6
[0xb6:0xbc]
---
Predecessors: [0x56]
Successors: [0xbd, 0xc1]
---
0xb6 JUMPDEST
0xb7 CALLVALUE
0xb8 ISZERO
0xb9 PUSH2 0xc1
0xbc JUMPI
---
0xb6: JUMPDEST 
0xb7: V56 = CALLVALUE
0xb8: V57 = ISZERO V56
0xb9: V58 = 0xc1
0xbc: JUMPI 0xc1 V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbd
[0xbd:0xc0]
---
Predecessors: [0xb6]
Successors: []
---
0xbd PUSH1 0x0
0xbf DUP1
0xc0 REVERT
---
0xbd: V59 = 0x0
0xc0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc1
[0xc1:0xce]
---
Predecessors: [0xb6]
Successors: [0x2c4]
---
0xc1 JUMPDEST
0xc2 PUSH2 0xcf
0xc5 PUSH1 0xff
0xc7 PUSH1 0x4
0xc9 CALLDATALOAD
0xca AND
0xcb PUSH2 0x2c4
0xce JUMP
---
0xc1: JUMPDEST 
0xc2: V60 = 0xcf
0xc5: V61 = 0xff
0xc7: V62 = 0x4
0xc9: V63 = CALLDATALOAD 0x4
0xca: V64 = AND V63 0xff
0xcb: V65 = 0x2c4
0xce: JUMP 0x2c4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcf, V64]
Exit stack: [V11, 0xcf, V64]

================================

Block 0xcf
[0xcf:0xe4]
---
Predecessors: [0x2c4]
Successors: []
---
0xcf JUMPDEST
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 PUSH1 0xff
0xd5 SWAP1
0xd6 SWAP2
0xd7 AND
0xd8 DUP2
0xd9 MSTORE
0xda PUSH1 0x20
0xdc ADD
0xdd PUSH1 0x40
0xdf MLOAD
0xe0 DUP1
0xe1 SWAP2
0xe2 SUB
0xe3 SWAP1
0xe4 RETURN
---
0xcf: JUMPDEST 
0xd0: V66 = 0x40
0xd2: V67 = M[0x40]
0xd3: V68 = 0xff
0xd7: V69 = AND V263 0xff
0xd9: M[V67] = V69
0xda: V70 = 0x20
0xdc: V71 = ADD 0x20 V67
0xdd: V72 = 0x40
0xdf: V73 = M[0x40]
0xe2: V74 = SUB V71 V73
0xe4: RETURN V73 V74
---
Entry stack: [V11, V263]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xf7]
---
Predecessors: [0x66]
Successors: [0xf8, 0xfc]
---
0xe5 JUMPDEST
0xe6 PUSH1 0x0
0xe8 PUSH8 0x13fbe85edc90000
0xf1 CALLVALUE
0xf2 LT
0xf3 ISZERO
0xf4 PUSH2 0xfc
0xf7 JUMPI
---
0xe5: JUMPDEST 
0xe6: V75 = 0x0
0xe8: V76 = 0x13fbe85edc90000
0xf1: V77 = CALLVALUE
0xf2: V78 = LT V77 0x13fbe85edc90000
0xf3: V79 = ISZERO V78
0xf4: V80 = 0xfc
0xf7: JUMPI 0xfc V79
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x6e, 0x0]

================================

Block 0xf8
[0xf8:0xfb]
---
Predecessors: [0xe5]
Successors: []
---
0xf8 PUSH1 0x0
0xfa DUP1
0xfb REVERT
---
0xf8: V81 = 0x0
0xfb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e, 0x0]

================================

Block 0xfc
[0xfc:0x10a]
---
Predecessors: [0xe5]
Successors: [0x10b, 0x113]
---
0xfc JUMPDEST
0xfd TIMESTAMP
0xfe PUSH4 0x5a8181c0
0x103 GT
0x104 ISZERO
0x105 DUP1
0x106 ISZERO
0x107 PUSH2 0x113
0x10a JUMPI
---
0xfc: JUMPDEST 
0xfd: V82 = TIMESTAMP
0xfe: V83 = 0x5a8181c0
0x103: V84 = GT 0x5a8181c0 V82
0x104: V85 = ISZERO V84
0x106: V86 = ISZERO V85
0x107: V87 = 0x113
0x10a: JUMPI 0x113 V86
---
Entry stack: [V11, 0x6e, 0x0]
Stack pops: 0
Stack additions: [V85]
Exit stack: [V11, 0x6e, 0x0, V85]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0xfc]
Successors: [0x113]
---
0x10b POP
0x10c PUSH4 0x5a881940
0x111 TIMESTAMP
0x112 LT
---
0x10c: V88 = 0x5a881940
0x111: V89 = TIMESTAMP
0x112: V90 = LT V89 0x5a881940
---
Entry stack: [V11, 0x6e, 0x0, V85]
Stack pops: 1
Stack additions: [V90]
Exit stack: [V11, 0x6e, 0x0, V90]

================================

Block 0x113
[0x113:0x119]
---
Predecessors: [0xfc, 0x10b]
Successors: [0x11a, 0x11e]
---
0x113 JUMPDEST
0x114 ISZERO
0x115 ISZERO
0x116 PUSH2 0x11e
0x119 JUMPI
---
0x113: JUMPDEST 
0x114: V91 = ISZERO S0
0x115: V92 = ISZERO V91
0x116: V93 = 0x11e
0x119: JUMPI 0x11e V92
---
Entry stack: [V11, 0x6e, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6e, 0x0]

================================

Block 0x11a
[0x11a:0x11d]
---
Predecessors: [0x113]
Successors: []
---
0x11a PUSH1 0x0
0x11c DUP1
0x11d REVERT
---
0x11a: V94 = 0x0
0x11d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e, 0x0]

================================

Block 0x11e
[0x11e:0x13f]
---
Predecessors: [0x113]
Successors: [0x140, 0x144]
---
0x11e JUMPDEST
0x11f PUSH1 0x1
0x121 PUSH1 0xa0
0x123 PUSH1 0x2
0x125 EXP
0x126 SUB
0x127 CALLER
0x128 AND
0x129 PUSH1 0x0
0x12b SWAP1
0x12c DUP2
0x12d MSTORE
0x12e PUSH1 0x2
0x130 PUSH1 0x20
0x132 MSTORE
0x133 PUSH1 0x40
0x135 SWAP1
0x136 SHA3
0x137 SLOAD
0x138 PUSH1 0xff
0x13a AND
0x13b ISZERO
0x13c PUSH2 0x144
0x13f JUMPI
---
0x11e: JUMPDEST 
0x11f: V95 = 0x1
0x121: V96 = 0xa0
0x123: V97 = 0x2
0x125: V98 = EXP 0x2 0xa0
0x126: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0x127: V100 = CALLER
0x128: V101 = AND V100 0xffffffffffffffffffffffffffffffffffffffff
0x129: V102 = 0x0
0x12d: M[0x0] = V101
0x12e: V103 = 0x2
0x130: V104 = 0x20
0x132: M[0x20] = 0x2
0x133: V105 = 0x40
0x136: V106 = SHA3 0x0 0x40
0x137: V107 = S[V106]
0x138: V108 = 0xff
0x13a: V109 = AND 0xff V107
0x13b: V110 = ISZERO V109
0x13c: V111 = 0x144
0x13f: JUMPI 0x144 V110
---
Entry stack: [V11, 0x6e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e, 0x0]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0x11e]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V112 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e, 0x0]

================================

Block 0x144
[0x144:0x14c]
---
Predecessors: [0x11e]
Successors: [0x2dc]
---
0x144 JUMPDEST
0x145 PUSH2 0x14d
0x148 TIMESTAMP
0x149 PUSH2 0x2dc
0x14c JUMP
---
0x144: JUMPDEST 
0x145: V113 = 0x14d
0x148: V114 = TIMESTAMP
0x149: V115 = 0x2dc
0x14c: JUMP 0x2dc
---
Entry stack: [V11, 0x6e, 0x0]
Stack pops: 0
Stack additions: [0x14d, V114]
Exit stack: [V11, 0x6e, 0x0, 0x14d, V114]

================================

Block 0x14d
[0x14d:0x16b]
---
Predecessors: [0x2dc]
Successors: [0x16c, 0x170]
---
0x14d JUMPDEST
0x14e PUSH1 0xff
0x150 DUP1
0x151 DUP3
0x152 AND
0x153 PUSH1 0x0
0x155 SWAP1
0x156 DUP2
0x157 MSTORE
0x158 PUSH1 0x1
0x15a PUSH1 0x20
0x15c MSTORE
0x15d PUSH1 0x40
0x15f DUP2
0x160 SHA3
0x161 SLOAD
0x162 SWAP3
0x163 SWAP4
0x164 POP
0x165 SWAP2
0x166 AND
0x167 GT
0x168 PUSH2 0x170
0x16b JUMPI
---
0x14d: JUMPDEST 
0x14e: V116 = 0xff
0x152: V117 = AND V268 0xff
0x153: V118 = 0x0
0x157: M[0x0] = V117
0x158: V119 = 0x1
0x15a: V120 = 0x20
0x15c: M[0x20] = 0x1
0x15d: V121 = 0x40
0x160: V122 = SHA3 0x0 0x40
0x161: V123 = S[V122]
0x166: V124 = AND V123 0xff
0x167: V125 = GT V124 0x0
0x168: V126 = 0x170
0x16b: JUMPI 0x170 V125
---
Entry stack: [V11, 0x6e, 0x0, V268]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x6e, V268]

================================

Block 0x16c
[0x16c:0x16f]
---
Predecessors: [0x14d]
Successors: []
---
0x16c PUSH1 0x0
0x16e DUP1
0x16f REVERT
---
0x16c: V127 = 0x0
0x16f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e, V268]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e, V268]

================================

Block 0x170
[0x170:0x1fa]
---
Predecessors: [0x14d]
Successors: [0x1fb, 0x237]
---
0x170 JUMPDEST
0x171 PUSH1 0xff
0x173 DUP1
0x174 DUP3
0x175 AND
0x176 PUSH1 0x0
0x178 SWAP1
0x179 DUP2
0x17a MSTORE
0x17b PUSH1 0x1
0x17d PUSH1 0x20
0x17f DUP2
0x180 DUP2
0x181 MSTORE
0x182 PUSH1 0x40
0x184 DUP1
0x185 DUP5
0x186 SHA3
0x187 DUP1
0x188 SLOAD
0x189 PUSH1 0x0
0x18b NOT
0x18c DUP2
0x18d DUP9
0x18e AND
0x18f ADD
0x190 SWAP1
0x191 SWAP7
0x192 AND
0x193 PUSH1 0xff
0x195 NOT
0x196 SWAP7
0x197 DUP8
0x198 AND
0x199 OR
0x19a SWAP1
0x19b SSTORE
0x19c PUSH1 0x1
0x19e PUSH1 0xa0
0x1a0 PUSH1 0x2
0x1a2 EXP
0x1a3 SUB
0x1a4 CALLER
0x1a5 AND
0x1a6 DUP1
0x1a7 DUP6
0x1a8 MSTORE
0x1a9 PUSH1 0x2
0x1ab SWAP1
0x1ac SWAP3
0x1ad MSTORE
0x1ae SWAP3
0x1af DUP4
0x1b0 SWAP1
0x1b1 SHA3
0x1b2 DUP1
0x1b3 SLOAD
0x1b4 SWAP1
0x1b5 SWAP5
0x1b6 AND
0x1b7 SWAP1
0x1b8 SWAP2
0x1b9 OR
0x1ba SWAP1
0x1bb SWAP3
0x1bc SSTORE
0x1bd TIMESTAMP
0x1be SWAP2
0x1bf SWAP1
0x1c0 PUSH32 0xe1b92b217616ca0c171bde453cbfc625cdf98b3a09fa7643b026771746c90c8e
0x1e1 SWAP1
0x1e2 MLOAD
0x1e3 PUSH1 0x40
0x1e5 MLOAD
0x1e6 DUP1
0x1e7 SWAP2
0x1e8 SUB
0x1e9 SWAP1
0x1ea LOG3
0x1eb PUSH8 0x13fbe85edc90000
0x1f4 CALLVALUE
0x1f5 GT
0x1f6 ISZERO
0x1f7 PUSH2 0x237
0x1fa JUMPI
---
0x170: JUMPDEST 
0x171: V128 = 0xff
0x175: V129 = AND V268 0xff
0x176: V130 = 0x0
0x17a: M[0x0] = V129
0x17b: V131 = 0x1
0x17d: V132 = 0x20
0x181: M[0x20] = 0x1
0x182: V133 = 0x40
0x186: V134 = SHA3 0x0 0x40
0x188: V135 = S[V134]
0x189: V136 = 0x0
0x18b: V137 = NOT 0x0
0x18e: V138 = AND 0xff V135
0x18f: V139 = ADD V138 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x192: V140 = AND 0xff V139
0x193: V141 = 0xff
0x195: V142 = NOT 0xff
0x198: V143 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V135
0x199: V144 = OR V143 V140
0x19b: S[V134] = V144
0x19c: V145 = 0x1
0x19e: V146 = 0xa0
0x1a0: V147 = 0x2
0x1a2: V148 = EXP 0x2 0xa0
0x1a3: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a4: V150 = CALLER
0x1a5: V151 = AND V150 0xffffffffffffffffffffffffffffffffffffffff
0x1a8: M[0x0] = V151
0x1a9: V152 = 0x2
0x1ad: M[0x20] = 0x2
0x1b1: V153 = SHA3 0x0 0x40
0x1b3: V154 = S[V153]
0x1b6: V155 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V154
0x1b9: V156 = OR 0x1 V155
0x1bc: S[V153] = V156
0x1bd: V157 = TIMESTAMP
0x1c0: V158 = 0xe1b92b217616ca0c171bde453cbfc625cdf98b3a09fa7643b026771746c90c8e
0x1e2: V159 = M[0x40]
0x1e3: V160 = 0x40
0x1e5: V161 = M[0x40]
0x1e8: V162 = SUB V159 V161
0x1ea: LOG V161 V162 0xe1b92b217616ca0c171bde453cbfc625cdf98b3a09fa7643b026771746c90c8e V151 V157
0x1eb: V163 = 0x13fbe85edc90000
0x1f4: V164 = CALLVALUE
0x1f5: V165 = GT V164 0x13fbe85edc90000
0x1f6: V166 = ISZERO V165
0x1f7: V167 = 0x237
0x1fa: JUMPI 0x237 V166
---
Entry stack: [V11, 0x6e, V268]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x6e, V268]

================================

Block 0x1fb
[0x1fb:0x232]
---
Predecessors: [0x170]
Successors: [0x233, 0x237]
---
0x1fb PUSH1 0x1
0x1fd PUSH1 0xa0
0x1ff PUSH1 0x2
0x201 EXP
0x202 SUB
0x203 CALLER
0x204 AND
0x205 PUSH8 0x13fbe85edc8ffff
0x20e NOT
0x20f CALLVALUE
0x210 ADD
0x211 DUP1
0x212 ISZERO
0x213 PUSH2 0x8fc
0x216 MUL
0x217 SWAP1
0x218 PUSH1 0x40
0x21a MLOAD
0x21b PUSH1 0x0
0x21d PUSH1 0x40
0x21f MLOAD
0x220 DUP1
0x221 DUP4
0x222 SUB
0x223 DUP2
0x224 DUP6
0x225 DUP9
0x226 DUP9
0x227 CALL
0x228 SWAP4
0x229 POP
0x22a POP
0x22b POP
0x22c POP
0x22d ISZERO
0x22e ISZERO
0x22f PUSH2 0x237
0x232 JUMPI
---
0x1fb: V168 = 0x1
0x1fd: V169 = 0xa0
0x1ff: V170 = 0x2
0x201: V171 = EXP 0x2 0xa0
0x202: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x203: V173 = CALLER
0x204: V174 = AND V173 0xffffffffffffffffffffffffffffffffffffffff
0x205: V175 = 0x13fbe85edc8ffff
0x20e: V176 = NOT 0x13fbe85edc8ffff
0x20f: V177 = CALLVALUE
0x210: V178 = ADD V177 0xfffffffffffffffffffffffffffffffffffffffffffffffffec0417a12370000
0x212: V179 = ISZERO V178
0x213: V180 = 0x8fc
0x216: V181 = MUL 0x8fc V179
0x218: V182 = 0x40
0x21a: V183 = M[0x40]
0x21b: V184 = 0x0
0x21d: V185 = 0x40
0x21f: V186 = M[0x40]
0x222: V187 = SUB V183 V186
0x227: V188 = CALL V181 V174 V178 V186 V187 V186 0x0
0x22d: V189 = ISZERO V188
0x22e: V190 = ISZERO V189
0x22f: V191 = 0x237
0x232: JUMPI 0x237 V190
---
Entry stack: [V11, 0x6e, V268]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e, V268]

================================

Block 0x233
[0x233:0x236]
---
Predecessors: [0x1fb]
Successors: []
---
0x233 PUSH1 0x0
0x235 DUP1
0x236 REVERT
---
0x233: V192 = 0x0
0x236: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e, V268]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e, V268]

================================

Block 0x237
[0x237:0x239]
---
Predecessors: [0x170, 0x1fb]
Successors: [0x6e]
---
0x237 JUMPDEST
0x238 POP
0x239 JUMP
---
0x237: JUMPDEST 
0x239: JUMP 0x6e
---
Entry stack: [V11, 0x6e, V268]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x23a
[0x23a:0x250]
---
Predecessors: [0x7b]
Successors: [0x251, 0x255]
---
0x23a JUMPDEST
0x23b PUSH1 0x0
0x23d SLOAD
0x23e CALLER
0x23f PUSH1 0x1
0x241 PUSH1 0xa0
0x243 PUSH1 0x2
0x245 EXP
0x246 SUB
0x247 SWAP1
0x248 DUP2
0x249 AND
0x24a SWAP2
0x24b AND
0x24c EQ
0x24d PUSH2 0x255
0x250 JUMPI
---
0x23a: JUMPDEST 
0x23b: V193 = 0x0
0x23d: V194 = S[0x0]
0x23e: V195 = CALLER
0x23f: V196 = 0x1
0x241: V197 = 0xa0
0x243: V198 = 0x2
0x245: V199 = EXP 0x2 0xa0
0x246: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x249: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x24b: V202 = AND V194 0xffffffffffffffffffffffffffffffffffffffff
0x24c: V203 = EQ V202 V201
0x24d: V204 = 0x255
0x250: JUMPI 0x255 V203
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x251
[0x251:0x254]
---
Predecessors: [0x23a]
Successors: []
---
0x251 PUSH1 0x0
0x253 DUP1
0x254 REVERT
---
0x251: V205 = 0x0
0x254: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x255
[0x255:0x261]
---
Predecessors: [0x23a]
Successors: [0x262, 0x266]
---
0x255 JUMPDEST
0x256 PUSH4 0x5a881940
0x25b TIMESTAMP
0x25c LT
0x25d ISZERO
0x25e PUSH2 0x266
0x261 JUMPI
---
0x255: JUMPDEST 
0x256: V206 = 0x5a881940
0x25b: V207 = TIMESTAMP
0x25c: V208 = LT V207 0x5a881940
0x25d: V209 = ISZERO V208
0x25e: V210 = 0x266
0x261: JUMPI 0x266 V209
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x262
[0x262:0x265]
---
Predecessors: [0x255]
Successors: []
---
0x262 PUSH1 0x0
0x264 DUP1
0x265 REVERT
---
0x262: V211 = 0x0
0x265: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x266
[0x266:0x29a]
---
Predecessors: [0x255]
Successors: [0x29b, 0x29f]
---
0x266 JUMPDEST
0x267 PUSH1 0x0
0x269 SLOAD
0x26a PUSH1 0x1
0x26c PUSH1 0xa0
0x26e PUSH1 0x2
0x270 EXP
0x271 SUB
0x272 SWAP1
0x273 DUP2
0x274 AND
0x275 SWAP1
0x276 ADDRESS
0x277 AND
0x278 BALANCE
0x279 DUP1
0x27a ISZERO
0x27b PUSH2 0x8fc
0x27e MUL
0x27f SWAP1
0x280 PUSH1 0x40
0x282 MLOAD
0x283 PUSH1 0x0
0x285 PUSH1 0x40
0x287 MLOAD
0x288 DUP1
0x289 DUP4
0x28a SUB
0x28b DUP2
0x28c DUP6
0x28d DUP9
0x28e DUP9
0x28f CALL
0x290 SWAP4
0x291 POP
0x292 POP
0x293 POP
0x294 POP
0x295 ISZERO
0x296 ISZERO
0x297 PUSH2 0x29f
0x29a JUMPI
---
0x266: JUMPDEST 
0x267: V212 = 0x0
0x269: V213 = S[0x0]
0x26a: V214 = 0x1
0x26c: V215 = 0xa0
0x26e: V216 = 0x2
0x270: V217 = EXP 0x2 0xa0
0x271: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x274: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x276: V220 = ADDRESS
0x277: V221 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x278: V222 = BALANCE V221
0x27a: V223 = ISZERO V222
0x27b: V224 = 0x8fc
0x27e: V225 = MUL 0x8fc V223
0x280: V226 = 0x40
0x282: V227 = M[0x40]
0x283: V228 = 0x0
0x285: V229 = 0x40
0x287: V230 = M[0x40]
0x28a: V231 = SUB V227 V230
0x28f: V232 = CALL V225 V219 V222 V230 V231 V230 0x0
0x295: V233 = ISZERO V232
0x296: V234 = ISZERO V233
0x297: V235 = 0x29f
0x29a: JUMPI 0x29f V234
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x29b
[0x29b:0x29e]
---
Predecessors: [0x266]
Successors: []
---
0x29b PUSH1 0x0
0x29d DUP1
0x29e REVERT
---
0x29b: V236 = 0x0
0x29e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e]

================================

Block 0x29f
[0x29f:0x2a0]
---
Predecessors: [0x266]
Successors: [0x6e]
---
0x29f JUMPDEST
0x2a0 JUMP
---
0x29f: JUMPDEST 
0x2a0: JUMP 0x6e
---
Entry stack: [V11, 0x6e]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a1
[0x2a1:0x2c3]
---
Predecessors: [0x8e]
Successors: [0xa2]
---
0x2a1 JUMPDEST
0x2a2 PUSH1 0x1
0x2a4 PUSH1 0xa0
0x2a6 PUSH1 0x2
0x2a8 EXP
0x2a9 SUB
0x2aa AND
0x2ab PUSH1 0x0
0x2ad SWAP1
0x2ae DUP2
0x2af MSTORE
0x2b0 PUSH1 0x2
0x2b2 PUSH1 0x20
0x2b4 MSTORE
0x2b5 PUSH1 0x40
0x2b7 SWAP1
0x2b8 SHA3
0x2b9 SLOAD
0x2ba PUSH1 0xff
0x2bc AND
0x2bd ISZERO
0x2be ISZERO
0x2bf PUSH1 0x1
0x2c1 EQ
0x2c2 SWAP1
0x2c3 JUMP
---
0x2a1: JUMPDEST 
0x2a2: V237 = 0x1
0x2a4: V238 = 0xa0
0x2a6: V239 = 0x2
0x2a8: V240 = EXP 0x2 0xa0
0x2a9: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2aa: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0x2ab: V243 = 0x0
0x2af: M[0x0] = V242
0x2b0: V244 = 0x2
0x2b2: V245 = 0x20
0x2b4: M[0x20] = 0x2
0x2b5: V246 = 0x40
0x2b8: V247 = SHA3 0x0 0x40
0x2b9: V248 = S[V247]
0x2ba: V249 = 0xff
0x2bc: V250 = AND 0xff V248
0x2bd: V251 = ISZERO V250
0x2be: V252 = ISZERO V251
0x2bf: V253 = 0x1
0x2c1: V254 = EQ 0x1 V252
0x2c3: JUMP 0xa2
---
Entry stack: [V11, 0xa2, V45]
Stack pops: 2
Stack additions: [V254]
Exit stack: [V11, V254]

================================

Block 0x2c4
[0x2c4:0x2db]
---
Predecessors: [0xc1]
Successors: [0xcf]
---
0x2c4 JUMPDEST
0x2c5 PUSH1 0xff
0x2c7 SWAP1
0x2c8 DUP2
0x2c9 AND
0x2ca PUSH1 0x0
0x2cc SWAP1
0x2cd DUP2
0x2ce MSTORE
0x2cf PUSH1 0x1
0x2d1 PUSH1 0x20
0x2d3 MSTORE
0x2d4 PUSH1 0x40
0x2d6 SWAP1
0x2d7 SHA3
0x2d8 SLOAD
0x2d9 AND
0x2da SWAP1
0x2db JUMP
---
0x2c4: JUMPDEST 
0x2c5: V255 = 0xff
0x2c9: V256 = AND 0xff V64
0x2ca: V257 = 0x0
0x2ce: M[0x0] = V256
0x2cf: V258 = 0x1
0x2d1: V259 = 0x20
0x2d3: M[0x20] = 0x1
0x2d4: V260 = 0x40
0x2d7: V261 = SHA3 0x0 0x40
0x2d8: V262 = S[V261]
0x2d9: V263 = AND V262 0xff
0x2db: JUMP 0xcf
---
Entry stack: [V11, 0xcf, V64]
Stack pops: 2
Stack additions: [V263]
Exit stack: [V11, V263]

================================

Block 0x2dc
[0x2dc:0x2ec]
---
Predecessors: [0x144]
Successors: [0x14d]
---
0x2dc JUMPDEST
0x2dd PUSH2 0x1c20
0x2e0 PUSH4 0x5a8181bf
0x2e5 NOT
0x2e6 SWAP2
0x2e7 SWAP1
0x2e8 SWAP2
0x2e9 ADD
0x2ea DIV
0x2eb SWAP1
0x2ec JUMP
---
0x2dc: JUMPDEST 
0x2dd: V264 = 0x1c20
0x2e0: V265 = 0x5a8181bf
0x2e5: V266 = NOT 0x5a8181bf
0x2e9: V267 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffa57e7e40 V114
0x2ea: V268 = DIV V267 0x1c20
0x2ec: JUMP 0x14d
---
Entry stack: [V11, 0x6e, 0x0, 0x14d, V114]
Stack pops: 2
Stack additions: [V268]
Exit stack: [V11, 0x6e, 0x0, V268]

================================

Block 0x2ed
[0x2ed:0x32e]
---
Predecessors: []
Successors: []
---
0x2ed STOP
0x2ee LOG1
0x2ef PUSH6 0x627a7a723058
0x2f6 SHA3
0x2f7 PUSH7 0xa4cd53722dc936
0x2ff PUSH15 0x1822e1a1f43f08302dadfb741b0a0a
0x30f MISSING 0xcf
0x310 PUSH30 0x1948fc2841390029
---
0x2ed: STOP 
0x2ee: LOG S0 S1 S2
0x2ef: V269 = 0x627a7a723058
0x2f6: V270 = SHA3 0x627a7a723058 S3
0x2f7: V271 = 0xa4cd53722dc936
0x2ff: V272 = 0x1822e1a1f43f08302dadfb741b0a0a
0x30f: MISSING 0xcf
0x310: V273 = 0x1948fc2841390029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1822e1a1f43f08302dadfb741b0a0a, 0xa4cd53722dc936, V270, 0x1948fc2841390029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1b385f34
Entry block: 0x66
Exit block: 0x233
Body: 0x66, 0x6e, 0xe5, 0xf8, 0xfc, 0x10b, 0x113, 0x11a, 0x11e, 0x140, 0x144, 0x14d, 0x16c, 0x170, 0x1fb, 0x233, 0x237, 0x2dc

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x70
Exit block: 0x6e
Body: 0x6e, 0x70, 0x77, 0x7b, 0x23a, 0x251, 0x255, 0x262, 0x266, 0x29b, 0x29f

Function 2:
Public function signature: 0x4bdb7369
Entry block: 0x83
Exit block: 0xa2
Body: 0x83, 0x8a, 0x8e, 0xa2, 0x2a1

Function 3:
Public function signature: 0xcf0e4be5
Entry block: 0xb6
Exit block: 0xcf
Body: 0xb6, 0xbd, 0xc1, 0xcf, 0x2c4

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

