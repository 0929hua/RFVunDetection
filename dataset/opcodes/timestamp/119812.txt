Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x9c]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2f58015
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x9c
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2f58015
0x20: V14 = EQ V12 0x2f58015
0x21: V15 = 0x9c
0x24: JUMPI 0x9c V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xb1]
---
0x25 DUP1
0x26 PUSH4 0x40fee2c8
0x2b EQ
0x2c PUSH2 0xb1
0x2f JUMPI
---
0x26: V16 = 0x40fee2c8
0x2b: V17 = EQ 0x40fee2c8 V12
0x2c: V18 = 0xb1
0x2f: JUMPI 0xb1 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xd2]
---
0x30 DUP1
0x31 PUSH4 0x6360fc3f
0x36 EQ
0x37 PUSH2 0xd2
0x3a JUMPI
---
0x31: V19 = 0x6360fc3f
0x36: V20 = EQ 0x6360fc3f V12
0x37: V21 = 0xd2
0x3a: JUMPI 0xd2 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xf9]
---
0x3b DUP1
0x3c PUSH4 0x6ad1fe02
0x41 EQ
0x42 PUSH2 0xf9
0x45 JUMPI
---
0x3c: V22 = 0x6ad1fe02
0x41: V23 = EQ 0x6ad1fe02 V12
0x42: V24 = 0xf9
0x45: JUMPI 0xf9 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x128]
---
0x46 DUP1
0x47 PUSH4 0x6eaa9fe9
0x4c EQ
0x4d PUSH2 0x128
0x50 JUMPI
---
0x47: V25 = 0x6eaa9fe9
0x4c: V26 = EQ 0x6eaa9fe9 V12
0x4d: V27 = 0x128
0x50: JUMPI 0x128 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x157]
---
0x51 DUP1
0x52 PUSH4 0x84726a36
0x57 EQ
0x58 PUSH2 0x157
0x5b JUMPI
---
0x52: V28 = 0x84726a36
0x57: V29 = EQ 0x84726a36 V12
0x58: V30 = 0x157
0x5b: JUMPI 0x157 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x178]
---
0x5c DUP1
0x5d PUSH4 0xc42bb1e4
0x62 EQ
0x63 PUSH2 0x178
0x66 JUMPI
---
0x5d: V31 = 0xc42bb1e4
0x62: V32 = EQ 0xc42bb1e4 V12
0x63: V33 = 0x178
0x66: JUMPI 0x178 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x19d]
---
0x67 DUP1
0x68 PUSH4 0xca4b208b
0x6d EQ
0x6e PUSH2 0x19d
0x71 JUMPI
---
0x68: V34 = 0xca4b208b
0x6d: V35 = EQ 0xca4b208b V12
0x6e: V36 = 0x19d
0x71: JUMPI 0x19d V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1cc]
---
0x72 DUP1
0x73 PUSH4 0xf79dcf8d
0x78 EQ
0x79 PUSH2 0x1cc
0x7c JUMPI
---
0x73: V37 = 0xf79dcf8d
0x78: V38 = EQ 0xf79dcf8d V12
0x79: V39 = 0x1cc
0x7c: JUMPI 0x1cc V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x1f1]
---
0x7d DUP1
0x7e PUSH4 0xfc0c546a
0x83 EQ
0x84 PUSH2 0x1f1
0x87 JUMPI
---
0x7e: V40 = 0xfc0c546a
0x83: V41 = EQ 0xfc0c546a V12
0x84: V42 = 0x1f1
0x87: JUMPI 0x1f1 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x88]
---
Predecessors: [0x0, 0x7d]
Successors: [0x89]
---
0x88 JUMPDEST
---
0x88: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x89
[0x89:0x94]
---
Predecessors: [0x88]
Successors: [0x95, 0x99]
---
0x89 JUMPDEST
0x8a PUSH1 0x0
0x8c SLOAD
0x8d PUSH1 0xff
0x8f AND
0x90 ISZERO
0x91 PUSH2 0x99
0x94 JUMPI
---
0x89: JUMPDEST 
0x8a: V43 = 0x0
0x8c: V44 = S[0x0]
0x8d: V45 = 0xff
0x8f: V46 = AND 0xff V44
0x90: V47 = ISZERO V46
0x91: V48 = 0x99
0x94: JUMPI 0x99 V47
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x95
[0x95:0x98]
---
Predecessors: [0x89]
Successors: []
---
0x95 PUSH1 0x0
0x97 DUP1
0x98 REVERT
---
0x95: V49 = 0x0
0x98: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x99
[0x99:0x99]
---
Predecessors: [0x89, 0x29f, 0x2fa, 0x383, 0x4ae]
Successors: [0x9a]
---
0x99 JUMPDEST
---
0x99: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9a
[0x9a:0x9b]
---
Predecessors: [0x99]
Successors: []
---
0x9a JUMPDEST
0x9b STOP
---
0x9a: JUMPDEST 
0x9b: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9c
[0x9c:0xa2]
---
Predecessors: [0xb]
Successors: [0xa3, 0xa7]
---
0x9c JUMPDEST
0x9d CALLVALUE
0x9e ISZERO
0x9f PUSH2 0xa7
0xa2 JUMPI
---
0x9c: JUMPDEST 
0x9d: V50 = CALLVALUE
0x9e: V51 = ISZERO V50
0x9f: V52 = 0xa7
0xa2: JUMPI 0xa7 V51
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa3
[0xa3:0xa6]
---
Predecessors: [0x9c]
Successors: []
---
0xa3 PUSH1 0x0
0xa5 DUP1
0xa6 REVERT
---
0xa3: V53 = 0x0
0xa6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa7
[0xa7:0xae]
---
Predecessors: [0x9c]
Successors: [0x220]
---
0xa7 JUMPDEST
0xa8 PUSH2 0x99
0xab PUSH2 0x220
0xae JUMP
---
0xa7: JUMPDEST 
0xa8: V54 = 0x99
0xab: V55 = 0x220
0xae: JUMP 0x220
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x99]
Exit stack: [V12, 0x99]

================================

Block 0xaf
[0xaf:0xb0]
---
Predecessors: []
Successors: []
---
0xaf JUMPDEST
0xb0 STOP
---
0xaf: JUMPDEST 
0xb0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb1
[0xb1:0xb7]
---
Predecessors: [0x25]
Successors: [0xb8, 0xbc]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 ISZERO
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xb1: JUMPDEST 
0xb2: V56 = CALLVALUE
0xb3: V57 = ISZERO V56
0xb4: V58 = 0xbc
0xb7: JUMPI 0xbc V57
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xb1]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V59 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbc
[0xbc:0xcf]
---
Predecessors: [0xb1]
Successors: [0x2a1]
---
0xbc JUMPDEST
0xbd PUSH2 0x99
0xc0 PUSH1 0x1
0xc2 PUSH1 0xa0
0xc4 PUSH1 0x2
0xc6 EXP
0xc7 SUB
0xc8 PUSH1 0x4
0xca CALLDATALOAD
0xcb AND
0xcc PUSH2 0x2a1
0xcf JUMP
---
0xbc: JUMPDEST 
0xbd: V60 = 0x99
0xc0: V61 = 0x1
0xc2: V62 = 0xa0
0xc4: V63 = 0x2
0xc6: V64 = EXP 0x2 0xa0
0xc7: V65 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc8: V66 = 0x4
0xca: V67 = CALLDATALOAD 0x4
0xcb: V68 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0xcc: V69 = 0x2a1
0xcf: JUMP 0x2a1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x99, V68]
Exit stack: [V12, 0x99, V68]

================================

Block 0xd0
[0xd0:0xd1]
---
Predecessors: []
Successors: []
---
0xd0 JUMPDEST
0xd1 STOP
---
0xd0: JUMPDEST 
0xd1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd2
[0xd2:0xd8]
---
Predecessors: [0x30]
Successors: [0xd9, 0xdd]
---
0xd2 JUMPDEST
0xd3 CALLVALUE
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd2: JUMPDEST 
0xd3: V70 = CALLVALUE
0xd4: V71 = ISZERO V70
0xd5: V72 = 0xdd
0xd8: JUMPI 0xdd V71
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd2]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V73 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdd
[0xdd:0xe4]
---
Predecessors: [0xd2]
Successors: [0x2fd]
---
0xdd JUMPDEST
0xde PUSH2 0xe5
0xe1 PUSH2 0x2fd
0xe4 JUMP
---
0xdd: JUMPDEST 
0xde: V74 = 0xe5
0xe1: V75 = 0x2fd
0xe4: JUMP 0x2fd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xe5]
Exit stack: [V12, 0xe5]

================================

Block 0xe5
[0xe5:0xf8]
---
Predecessors: [0x2fd]
Successors: []
---
0xe5 JUMPDEST
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 SWAP1
0xea ISZERO
0xeb ISZERO
0xec DUP2
0xed MSTORE
0xee PUSH1 0x20
0xf0 ADD
0xf1 PUSH1 0x40
0xf3 MLOAD
0xf4 DUP1
0xf5 SWAP2
0xf6 SUB
0xf7 SWAP1
0xf8 RETURN
---
0xe5: JUMPDEST 
0xe6: V76 = 0x40
0xe8: V77 = M[0x40]
0xea: V78 = ISZERO V307
0xeb: V79 = ISZERO V78
0xed: M[V77] = V79
0xee: V80 = 0x20
0xf0: V81 = ADD 0x20 V77
0xf1: V82 = 0x40
0xf3: V83 = M[0x40]
0xf6: V84 = SUB V81 V83
0xf8: RETURN V83 V84
---
Entry stack: [V12, 0xe5, V307]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xe5]

================================

Block 0xf9
[0xf9:0xff]
---
Predecessors: [0x3b]
Successors: [0x100, 0x104]
---
0xf9 JUMPDEST
0xfa CALLVALUE
0xfb ISZERO
0xfc PUSH2 0x104
0xff JUMPI
---
0xf9: JUMPDEST 
0xfa: V85 = CALLVALUE
0xfb: V86 = ISZERO V85
0xfc: V87 = 0x104
0xff: JUMPI 0x104 V86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x100
[0x100:0x103]
---
Predecessors: [0xf9]
Successors: []
---
0x100 PUSH1 0x0
0x102 DUP1
0x103 REVERT
---
0x100: V88 = 0x0
0x103: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x104
[0x104:0x10b]
---
Predecessors: [0xf9]
Successors: [0x306]
---
0x104 JUMPDEST
0x105 PUSH2 0x10c
0x108 PUSH2 0x306
0x10b JUMP
---
0x104: JUMPDEST 
0x105: V89 = 0x10c
0x108: V90 = 0x306
0x10b: JUMP 0x306
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10c]
Exit stack: [V12, 0x10c]

================================

Block 0x10c
[0x10c:0x127]
---
Predecessors: [0x306, 0x4b8, 0x4cd]
Successors: []
---
0x10c JUMPDEST
0x10d PUSH1 0x40
0x10f MLOAD
0x110 PUSH1 0x1
0x112 PUSH1 0xa0
0x114 PUSH1 0x2
0x116 EXP
0x117 SUB
0x118 SWAP1
0x119 SWAP2
0x11a AND
0x11b DUP2
0x11c MSTORE
0x11d PUSH1 0x20
0x11f ADD
0x120 PUSH1 0x40
0x122 MLOAD
0x123 DUP1
0x124 SWAP2
0x125 SUB
0x126 SWAP1
0x127 RETURN
---
0x10c: JUMPDEST 
0x10d: V91 = 0x40
0x10f: V92 = M[0x40]
0x110: V93 = 0x1
0x112: V94 = 0xa0
0x114: V95 = 0x2
0x116: V96 = EXP 0x2 0xa0
0x117: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11a: V98 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x11c: M[V92] = V98
0x11d: V99 = 0x20
0x11f: V100 = ADD 0x20 V92
0x120: V101 = 0x40
0x122: V102 = M[0x40]
0x125: V103 = SUB V100 V102
0x127: RETURN V102 V103
---
Entry stack: [V12, 0x10c, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x10c]

================================

Block 0x128
[0x128:0x12e]
---
Predecessors: [0x46]
Successors: [0x12f, 0x133]
---
0x128 JUMPDEST
0x129 CALLVALUE
0x12a ISZERO
0x12b PUSH2 0x133
0x12e JUMPI
---
0x128: JUMPDEST 
0x129: V104 = CALLVALUE
0x12a: V105 = ISZERO V104
0x12b: V106 = 0x133
0x12e: JUMPI 0x133 V105
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12f
[0x12f:0x132]
---
Predecessors: [0x128]
Successors: []
---
0x12f PUSH1 0x0
0x131 DUP1
0x132 REVERT
---
0x12f: V107 = 0x0
0x132: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x133
[0x133:0x154]
---
Predecessors: [0x128]
Successors: [0x315]
---
0x133 JUMPDEST
0x134 PUSH2 0x99
0x137 PUSH1 0x1
0x139 PUSH1 0xa0
0x13b PUSH1 0x2
0x13d EXP
0x13e SUB
0x13f PUSH1 0x4
0x141 CALLDATALOAD
0x142 DUP2
0x143 AND
0x144 SWAP1
0x145 PUSH1 0x24
0x147 CALLDATALOAD
0x148 AND
0x149 PUSH1 0x44
0x14b CALLDATALOAD
0x14c PUSH1 0x64
0x14e CALLDATALOAD
0x14f ISZERO
0x150 ISZERO
0x151 PUSH2 0x315
0x154 JUMP
---
0x133: JUMPDEST 
0x134: V108 = 0x99
0x137: V109 = 0x1
0x139: V110 = 0xa0
0x13b: V111 = 0x2
0x13d: V112 = EXP 0x2 0xa0
0x13e: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13f: V114 = 0x4
0x141: V115 = CALLDATALOAD 0x4
0x143: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x145: V117 = 0x24
0x147: V118 = CALLDATALOAD 0x24
0x148: V119 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x149: V120 = 0x44
0x14b: V121 = CALLDATALOAD 0x44
0x14c: V122 = 0x64
0x14e: V123 = CALLDATALOAD 0x64
0x14f: V124 = ISZERO V123
0x150: V125 = ISZERO V124
0x151: V126 = 0x315
0x154: JUMP 0x315
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x99, V116, V119, V121, V125]
Exit stack: [V12, 0x99, V116, V119, V121, V125]

================================

Block 0x155
[0x155:0x156]
---
Predecessors: []
Successors: []
---
0x155 JUMPDEST
0x156 STOP
---
0x155: JUMPDEST 
0x156: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x157
[0x157:0x15d]
---
Predecessors: [0x51]
Successors: [0x15e, 0x162]
---
0x157 JUMPDEST
0x158 CALLVALUE
0x159 ISZERO
0x15a PUSH2 0x162
0x15d JUMPI
---
0x157: JUMPDEST 
0x158: V127 = CALLVALUE
0x159: V128 = ISZERO V127
0x15a: V129 = 0x162
0x15d: JUMPI 0x162 V128
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15e
[0x15e:0x161]
---
Predecessors: [0x157]
Successors: []
---
0x15e PUSH1 0x0
0x160 DUP1
0x161 REVERT
---
0x15e: V130 = 0x0
0x161: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x162
[0x162:0x175]
---
Predecessors: [0x157]
Successors: [0x389]
---
0x162 JUMPDEST
0x163 PUSH2 0x99
0x166 PUSH1 0x1
0x168 PUSH1 0xa0
0x16a PUSH1 0x2
0x16c EXP
0x16d SUB
0x16e PUSH1 0x4
0x170 CALLDATALOAD
0x171 AND
0x172 PUSH2 0x389
0x175 JUMP
---
0x162: JUMPDEST 
0x163: V131 = 0x99
0x166: V132 = 0x1
0x168: V133 = 0xa0
0x16a: V134 = 0x2
0x16c: V135 = EXP 0x2 0xa0
0x16d: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16e: V137 = 0x4
0x170: V138 = CALLDATALOAD 0x4
0x171: V139 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x172: V140 = 0x389
0x175: JUMP 0x389
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x99, V139]
Exit stack: [V12, 0x99, V139]

================================

Block 0x176
[0x176:0x177]
---
Predecessors: []
Successors: []
---
0x176 JUMPDEST
0x177 STOP
---
0x176: JUMPDEST 
0x177: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x178
[0x178:0x17e]
---
Predecessors: [0x5c]
Successors: [0x17f, 0x183]
---
0x178 JUMPDEST
0x179 CALLVALUE
0x17a ISZERO
0x17b PUSH2 0x183
0x17e JUMPI
---
0x178: JUMPDEST 
0x179: V141 = CALLVALUE
0x17a: V142 = ISZERO V141
0x17b: V143 = 0x183
0x17e: JUMPI 0x183 V142
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17f
[0x17f:0x182]
---
Predecessors: [0x178]
Successors: []
---
0x17f PUSH1 0x0
0x181 DUP1
0x182 REVERT
---
0x17f: V144 = 0x0
0x182: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x183
[0x183:0x18a]
---
Predecessors: [0x178]
Successors: [0x4b2]
---
0x183 JUMPDEST
0x184 PUSH2 0x18b
0x187 PUSH2 0x4b2
0x18a JUMP
---
0x183: JUMPDEST 
0x184: V145 = 0x18b
0x187: V146 = 0x4b2
0x18a: JUMP 0x4b2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18b]
Exit stack: [V12, 0x18b]

================================

Block 0x18b
[0x18b:0x19c]
---
Predecessors: [0x4b2, 0x4c7]
Successors: []
---
0x18b JUMPDEST
0x18c PUSH1 0x40
0x18e MLOAD
0x18f SWAP1
0x190 DUP2
0x191 MSTORE
0x192 PUSH1 0x20
0x194 ADD
0x195 PUSH1 0x40
0x197 MLOAD
0x198 DUP1
0x199 SWAP2
0x19a SUB
0x19b SWAP1
0x19c RETURN
---
0x18b: JUMPDEST 
0x18c: V147 = 0x40
0x18e: V148 = M[0x40]
0x191: M[V148] = S0
0x192: V149 = 0x20
0x194: V150 = ADD 0x20 V148
0x195: V151 = 0x40
0x197: V152 = M[0x40]
0x19a: V153 = SUB V150 V152
0x19c: RETURN V152 V153
---
Entry stack: [V12, 0x18b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x18b]

================================

Block 0x19d
[0x19d:0x1a3]
---
Predecessors: [0x67]
Successors: [0x1a4, 0x1a8]
---
0x19d JUMPDEST
0x19e CALLVALUE
0x19f ISZERO
0x1a0 PUSH2 0x1a8
0x1a3 JUMPI
---
0x19d: JUMPDEST 
0x19e: V154 = CALLVALUE
0x19f: V155 = ISZERO V154
0x1a0: V156 = 0x1a8
0x1a3: JUMPI 0x1a8 V155
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a4
[0x1a4:0x1a7]
---
Predecessors: [0x19d]
Successors: []
---
0x1a4 PUSH1 0x0
0x1a6 DUP1
0x1a7 REVERT
---
0x1a4: V157 = 0x0
0x1a7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a8
[0x1a8:0x1af]
---
Predecessors: [0x19d]
Successors: [0x4b8]
---
0x1a8 JUMPDEST
0x1a9 PUSH2 0x10c
0x1ac PUSH2 0x4b8
0x1af JUMP
---
0x1a8: JUMPDEST 
0x1a9: V158 = 0x10c
0x1ac: V159 = 0x4b8
0x1af: JUMP 0x4b8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10c]
Exit stack: [V12, 0x10c]

================================

Block 0x1b0
[0x1b0:0x1cb]
---
Predecessors: []
Successors: []
---
0x1b0 JUMPDEST
0x1b1 PUSH1 0x40
0x1b3 MLOAD
0x1b4 PUSH1 0x1
0x1b6 PUSH1 0xa0
0x1b8 PUSH1 0x2
0x1ba EXP
0x1bb SUB
0x1bc SWAP1
0x1bd SWAP2
0x1be AND
0x1bf DUP2
0x1c0 MSTORE
0x1c1 PUSH1 0x20
0x1c3 ADD
0x1c4 PUSH1 0x40
0x1c6 MLOAD
0x1c7 DUP1
0x1c8 SWAP2
0x1c9 SUB
0x1ca SWAP1
0x1cb RETURN
---
0x1b0: JUMPDEST 
0x1b1: V160 = 0x40
0x1b3: V161 = M[0x40]
0x1b4: V162 = 0x1
0x1b6: V163 = 0xa0
0x1b8: V164 = 0x2
0x1ba: V165 = EXP 0x2 0xa0
0x1bb: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1be: V167 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: M[V161] = V167
0x1c1: V168 = 0x20
0x1c3: V169 = ADD 0x20 V161
0x1c4: V170 = 0x40
0x1c6: V171 = M[0x40]
0x1c9: V172 = SUB V169 V171
0x1cb: RETURN V171 V172
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1cc
[0x1cc:0x1d2]
---
Predecessors: [0x72]
Successors: [0x1d3, 0x1d7]
---
0x1cc JUMPDEST
0x1cd CALLVALUE
0x1ce ISZERO
0x1cf PUSH2 0x1d7
0x1d2 JUMPI
---
0x1cc: JUMPDEST 
0x1cd: V173 = CALLVALUE
0x1ce: V174 = ISZERO V173
0x1cf: V175 = 0x1d7
0x1d2: JUMPI 0x1d7 V174
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d3
[0x1d3:0x1d6]
---
Predecessors: [0x1cc]
Successors: []
---
0x1d3 PUSH1 0x0
0x1d5 DUP1
0x1d6 REVERT
---
0x1d3: V176 = 0x0
0x1d6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d7
[0x1d7:0x1de]
---
Predecessors: [0x1cc]
Successors: [0x4c7]
---
0x1d7 JUMPDEST
0x1d8 PUSH2 0x18b
0x1db PUSH2 0x4c7
0x1de JUMP
---
0x1d7: JUMPDEST 
0x1d8: V177 = 0x18b
0x1db: V178 = 0x4c7
0x1de: JUMP 0x4c7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18b]
Exit stack: [V12, 0x18b]

================================

Block 0x1df
[0x1df:0x1f0]
---
Predecessors: []
Successors: []
---
0x1df JUMPDEST
0x1e0 PUSH1 0x40
0x1e2 MLOAD
0x1e3 SWAP1
0x1e4 DUP2
0x1e5 MSTORE
0x1e6 PUSH1 0x20
0x1e8 ADD
0x1e9 PUSH1 0x40
0x1eb MLOAD
0x1ec DUP1
0x1ed SWAP2
0x1ee SUB
0x1ef SWAP1
0x1f0 RETURN
---
0x1df: JUMPDEST 
0x1e0: V179 = 0x40
0x1e2: V180 = M[0x40]
0x1e5: M[V180] = S0
0x1e6: V181 = 0x20
0x1e8: V182 = ADD 0x20 V180
0x1e9: V183 = 0x40
0x1eb: V184 = M[0x40]
0x1ee: V185 = SUB V182 V184
0x1f0: RETURN V184 V185
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1f1
[0x1f1:0x1f7]
---
Predecessors: [0x7d]
Successors: [0x1f8, 0x1fc]
---
0x1f1 JUMPDEST
0x1f2 CALLVALUE
0x1f3 ISZERO
0x1f4 PUSH2 0x1fc
0x1f7 JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V186 = CALLVALUE
0x1f3: V187 = ISZERO V186
0x1f4: V188 = 0x1fc
0x1f7: JUMPI 0x1fc V187
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f8
[0x1f8:0x1fb]
---
Predecessors: [0x1f1]
Successors: []
---
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb REVERT
---
0x1f8: V189 = 0x0
0x1fb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fc
[0x1fc:0x203]
---
Predecessors: [0x1f1]
Successors: [0x4cd]
---
0x1fc JUMPDEST
0x1fd PUSH2 0x10c
0x200 PUSH2 0x4cd
0x203 JUMP
---
0x1fc: JUMPDEST 
0x1fd: V190 = 0x10c
0x200: V191 = 0x4cd
0x203: JUMP 0x4cd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10c]
Exit stack: [V12, 0x10c]

================================

Block 0x204
[0x204:0x21f]
---
Predecessors: []
Successors: []
---
0x204 JUMPDEST
0x205 PUSH1 0x40
0x207 MLOAD
0x208 PUSH1 0x1
0x20a PUSH1 0xa0
0x20c PUSH1 0x2
0x20e EXP
0x20f SUB
0x210 SWAP1
0x211 SWAP2
0x212 AND
0x213 DUP2
0x214 MSTORE
0x215 PUSH1 0x20
0x217 ADD
0x218 PUSH1 0x40
0x21a MLOAD
0x21b DUP1
0x21c SWAP2
0x21d SUB
0x21e SWAP1
0x21f RETURN
---
0x204: JUMPDEST 
0x205: V192 = 0x40
0x207: V193 = M[0x40]
0x208: V194 = 0x1
0x20a: V195 = 0xa0
0x20c: V196 = 0x2
0x20e: V197 = EXP 0x2 0xa0
0x20f: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x212: V199 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x214: M[V193] = V199
0x215: V200 = 0x20
0x217: V201 = ADD 0x20 V193
0x218: V202 = 0x40
0x21a: V203 = M[0x40]
0x21d: V204 = SUB V201 V203
0x21f: RETURN V203 V204
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x220
[0x220:0x22b]
---
Predecessors: [0xa7]
Successors: [0x22c, 0x230]
---
0x220 JUMPDEST
0x221 PUSH1 0x0
0x223 SLOAD
0x224 PUSH1 0xff
0x226 AND
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x220: JUMPDEST 
0x221: V205 = 0x0
0x223: V206 = S[0x0]
0x224: V207 = 0xff
0x226: V208 = AND 0xff V206
0x227: V209 = ISZERO V208
0x228: V210 = 0x230
0x22b: JUMPI 0x230 V209
---
Entry stack: [V12, 0x99]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x220]
Successors: [0x29e]
---
0x22c PUSH2 0x29e
0x22f JUMP
---
0x22c: V211 = 0x29e
0x22f: JUMP 0x29e
---
Entry stack: [V12, 0x99]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99]

================================

Block 0x230
[0x230:0x23a]
---
Predecessors: [0x220]
Successors: [0x23b, 0x23f]
---
0x230 JUMPDEST
0x231 PUSH1 0x2
0x233 SLOAD
0x234 TIMESTAMP
0x235 LT
0x236 ISZERO
0x237 PUSH2 0x23f
0x23a JUMPI
---
0x230: JUMPDEST 
0x231: V212 = 0x2
0x233: V213 = S[0x2]
0x234: V214 = TIMESTAMP
0x235: V215 = LT V214 V213
0x236: V216 = ISZERO V215
0x237: V217 = 0x23f
0x23a: JUMPI 0x23f V216
---
Entry stack: [V12, 0x99]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99]

================================

Block 0x23b
[0x23b:0x23e]
---
Predecessors: [0x230]
Successors: [0x29e]
---
0x23b PUSH2 0x29e
0x23e JUMP
---
0x23b: V218 = 0x29e
0x23e: JUMP 0x29e
---
Entry stack: [V12, 0x99]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99]

================================

Block 0x23f
[0x23f:0x251]
---
Predecessors: [0x230]
Successors: [0x252, 0x256]
---
0x23f JUMPDEST
0x240 PUSH1 0x4
0x242 SLOAD
0x243 PUSH1 0x1
0x245 PUSH1 0xa0
0x247 PUSH1 0x2
0x249 EXP
0x24a SUB
0x24b AND
0x24c ISZERO
0x24d ISZERO
0x24e PUSH2 0x256
0x251 JUMPI
---
0x23f: JUMPDEST 
0x240: V219 = 0x4
0x242: V220 = S[0x4]
0x243: V221 = 0x1
0x245: V222 = 0xa0
0x247: V223 = 0x2
0x249: V224 = EXP 0x2 0xa0
0x24a: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24b: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x24c: V227 = ISZERO V226
0x24d: V228 = ISZERO V227
0x24e: V229 = 0x256
0x251: JUMPI 0x256 V228
---
Entry stack: [V12, 0x99]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99]

================================

Block 0x252
[0x252:0x255]
---
Predecessors: [0x23f]
Successors: []
---
0x252 PUSH1 0x0
0x254 DUP1
0x255 REVERT
---
0x252: V230 = 0x0
0x255: REVERT 0x0 0x0
---
Entry stack: [V12, 0x99]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99]

================================

Block 0x256
[0x256:0x299]
---
Predecessors: [0x23f]
Successors: [0x29a, 0x29e]
---
0x256 JUMPDEST
0x257 PUSH1 0x0
0x259 DUP1
0x25a SLOAD
0x25b PUSH1 0xff
0x25d NOT
0x25e AND
0x25f PUSH1 0x1
0x261 SWAP1
0x262 DUP2
0x263 OR
0x264 SWAP1
0x265 SWAP2
0x266 SSTORE
0x267 PUSH1 0x1
0x269 PUSH1 0xa0
0x26b PUSH1 0x2
0x26d EXP
0x26e SUB
0x26f ADDRESS
0x270 DUP2
0x271 AND
0x272 BALANCE
0x273 SWAP2
0x274 DUP3
0x275 SWAP1
0x276 SSTORE
0x277 PUSH1 0x4
0x279 SLOAD
0x27a AND
0x27b SWAP1
0x27c PUSH1 0x40
0x27e MLOAD
0x27f PUSH1 0x0
0x281 PUSH1 0x40
0x283 MLOAD
0x284 DUP1
0x285 DUP4
0x286 SUB
0x287 DUP2
0x288 DUP6
0x289 DUP8
0x28a PUSH2 0x8796
0x28d GAS
0x28e SUB
0x28f CALL
0x290 SWAP3
0x291 POP
0x292 POP
0x293 POP
0x294 ISZERO
0x295 ISZERO
0x296 PUSH2 0x29e
0x299 JUMPI
---
0x256: JUMPDEST 
0x257: V231 = 0x0
0x25a: V232 = S[0x0]
0x25b: V233 = 0xff
0x25d: V234 = NOT 0xff
0x25e: V235 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V232
0x25f: V236 = 0x1
0x263: V237 = OR 0x1 V235
0x266: S[0x0] = V237
0x267: V238 = 0x1
0x269: V239 = 0xa0
0x26b: V240 = 0x2
0x26d: V241 = EXP 0x2 0xa0
0x26e: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26f: V243 = ADDRESS
0x271: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x272: V245 = BALANCE V244
0x276: S[0x1] = V245
0x277: V246 = 0x4
0x279: V247 = S[0x4]
0x27a: V248 = AND V247 0xffffffffffffffffffffffffffffffffffffffff
0x27c: V249 = 0x40
0x27e: V250 = M[0x40]
0x27f: V251 = 0x0
0x281: V252 = 0x40
0x283: V253 = M[0x40]
0x286: V254 = SUB V250 V253
0x28a: V255 = 0x8796
0x28d: V256 = GAS
0x28e: V257 = SUB V256 0x8796
0x28f: V258 = CALL V257 V248 V245 V253 V254 V253 0x0
0x294: V259 = ISZERO V258
0x295: V260 = ISZERO V259
0x296: V261 = 0x29e
0x299: JUMPI 0x29e V260
---
Entry stack: [V12, 0x99]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99]

================================

Block 0x29a
[0x29a:0x29d]
---
Predecessors: [0x256]
Successors: []
---
0x29a PUSH1 0x0
0x29c DUP1
0x29d REVERT
---
0x29a: V262 = 0x0
0x29d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x99]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99]

================================

Block 0x29e
[0x29e:0x29e]
---
Predecessors: [0x22c, 0x23b, 0x256]
Successors: [0x29f]
---
0x29e JUMPDEST
---
0x29e: JUMPDEST 
---
Entry stack: [V12, 0x99]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99]

================================

Block 0x29f
[0x29f:0x2a0]
---
Predecessors: [0x29e]
Successors: [0x99]
---
0x29f JUMPDEST
0x2a0 JUMP
---
0x29f: JUMPDEST 
0x2a0: JUMP 0x99
---
Entry stack: [V12, 0x99]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a1
[0x2a1:0x2b7]
---
Predecessors: [0xbc]
Successors: [0x2b8, 0x2bc]
---
0x2a1 JUMPDEST
0x2a2 PUSH1 0x3
0x2a4 SLOAD
0x2a5 CALLER
0x2a6 PUSH1 0x1
0x2a8 PUSH1 0xa0
0x2aa PUSH1 0x2
0x2ac EXP
0x2ad SUB
0x2ae SWAP1
0x2af DUP2
0x2b0 AND
0x2b1 SWAP2
0x2b2 AND
0x2b3 EQ
0x2b4 PUSH2 0x2bc
0x2b7 JUMPI
---
0x2a1: JUMPDEST 
0x2a2: V263 = 0x3
0x2a4: V264 = S[0x3]
0x2a5: V265 = CALLER
0x2a6: V266 = 0x1
0x2a8: V267 = 0xa0
0x2aa: V268 = 0x2
0x2ac: V269 = EXP 0x2 0xa0
0x2ad: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b0: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x2b2: V272 = AND V264 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V273 = EQ V272 V271
0x2b4: V274 = 0x2bc
0x2b7: JUMPI 0x2bc V273
---
Entry stack: [V12, 0x99, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99, V68]

================================

Block 0x2b8
[0x2b8:0x2bb]
---
Predecessors: [0x2a1]
Successors: []
---
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb REVERT
---
0x2b8: V275 = 0x0
0x2bb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x99, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99, V68]

================================

Block 0x2bc
[0x2bc:0x2f4]
---
Predecessors: [0x2a1]
Successors: [0x2f5, 0x2f9]
---
0x2bc JUMPDEST
0x2bd DUP1
0x2be PUSH1 0x1
0x2c0 PUSH1 0xa0
0x2c2 PUSH1 0x2
0x2c4 EXP
0x2c5 SUB
0x2c6 AND
0x2c7 PUSH2 0x8fc
0x2ca ADDRESS
0x2cb PUSH1 0x1
0x2cd PUSH1 0xa0
0x2cf PUSH1 0x2
0x2d1 EXP
0x2d2 SUB
0x2d3 AND
0x2d4 BALANCE
0x2d5 SWAP1
0x2d6 DUP2
0x2d7 ISZERO
0x2d8 MUL
0x2d9 SWAP1
0x2da PUSH1 0x40
0x2dc MLOAD
0x2dd PUSH1 0x0
0x2df PUSH1 0x40
0x2e1 MLOAD
0x2e2 DUP1
0x2e3 DUP4
0x2e4 SUB
0x2e5 DUP2
0x2e6 DUP6
0x2e7 DUP9
0x2e8 DUP9
0x2e9 CALL
0x2ea SWAP4
0x2eb POP
0x2ec POP
0x2ed POP
0x2ee POP
0x2ef ISZERO
0x2f0 ISZERO
0x2f1 PUSH2 0x2f9
0x2f4 JUMPI
---
0x2bc: JUMPDEST 
0x2be: V276 = 0x1
0x2c0: V277 = 0xa0
0x2c2: V278 = 0x2
0x2c4: V279 = EXP 0x2 0xa0
0x2c5: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c6: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x2c7: V282 = 0x8fc
0x2ca: V283 = ADDRESS
0x2cb: V284 = 0x1
0x2cd: V285 = 0xa0
0x2cf: V286 = 0x2
0x2d1: V287 = EXP 0x2 0xa0
0x2d2: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d3: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x2d4: V290 = BALANCE V289
0x2d7: V291 = ISZERO V290
0x2d8: V292 = MUL V291 0x8fc
0x2da: V293 = 0x40
0x2dc: V294 = M[0x40]
0x2dd: V295 = 0x0
0x2df: V296 = 0x40
0x2e1: V297 = M[0x40]
0x2e4: V298 = SUB V294 V297
0x2e9: V299 = CALL V292 V281 V290 V297 V298 V297 0x0
0x2ef: V300 = ISZERO V299
0x2f0: V301 = ISZERO V300
0x2f1: V302 = 0x2f9
0x2f4: JUMPI 0x2f9 V301
---
Entry stack: [V12, 0x99, V68]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x99, V68]

================================

Block 0x2f5
[0x2f5:0x2f8]
---
Predecessors: [0x2bc]
Successors: []
---
0x2f5 PUSH1 0x0
0x2f7 DUP1
0x2f8 REVERT
---
0x2f5: V303 = 0x0
0x2f8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x99, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99, V68]

================================

Block 0x2f9
[0x2f9:0x2f9]
---
Predecessors: [0x2bc]
Successors: [0x2fa]
---
0x2f9 JUMPDEST
---
0x2f9: JUMPDEST 
---
Entry stack: [V12, 0x99, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99, V68]

================================

Block 0x2fa
[0x2fa:0x2fc]
---
Predecessors: [0x2f9]
Successors: [0x99]
---
0x2fa JUMPDEST
0x2fb POP
0x2fc JUMP
---
0x2fa: JUMPDEST 
0x2fc: JUMP 0x99
---
Entry stack: [V12, 0x99, V68]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fd
[0x2fd:0x305]
---
Predecessors: [0xdd]
Successors: [0xe5]
---
0x2fd JUMPDEST
0x2fe PUSH1 0x0
0x300 SLOAD
0x301 PUSH1 0xff
0x303 AND
0x304 DUP2
0x305 JUMP
---
0x2fd: JUMPDEST 
0x2fe: V304 = 0x0
0x300: V305 = S[0x0]
0x301: V306 = 0xff
0x303: V307 = AND 0xff V305
0x305: JUMP 0xe5
---
Entry stack: [V12, 0xe5]
Stack pops: 1
Stack additions: [S0, V307]
Exit stack: [V12, 0xe5, V307]

================================

Block 0x306
[0x306:0x314]
---
Predecessors: [0x104]
Successors: [0x10c]
---
0x306 JUMPDEST
0x307 PUSH1 0x4
0x309 SLOAD
0x30a PUSH1 0x1
0x30c PUSH1 0xa0
0x30e PUSH1 0x2
0x310 EXP
0x311 SUB
0x312 AND
0x313 DUP2
0x314 JUMP
---
0x306: JUMPDEST 
0x307: V308 = 0x4
0x309: V309 = S[0x4]
0x30a: V310 = 0x1
0x30c: V311 = 0xa0
0x30e: V312 = 0x2
0x310: V313 = EXP 0x2 0xa0
0x311: V314 = SUB 0x10000000000000000000000000000000000000000 0x1
0x312: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x314: JUMP 0x10c
---
Entry stack: [V12, 0x10c]
Stack pops: 1
Stack additions: [S0, V315]
Exit stack: [V12, 0x10c, V315]

================================

Block 0x315
[0x315:0x32b]
---
Predecessors: [0x133]
Successors: [0x32c, 0x330]
---
0x315 JUMPDEST
0x316 PUSH1 0x3
0x318 SLOAD
0x319 CALLER
0x31a PUSH1 0x1
0x31c PUSH1 0xa0
0x31e PUSH1 0x2
0x320 EXP
0x321 SUB
0x322 SWAP1
0x323 DUP2
0x324 AND
0x325 SWAP2
0x326 AND
0x327 EQ
0x328 PUSH2 0x330
0x32b JUMPI
---
0x315: JUMPDEST 
0x316: V316 = 0x3
0x318: V317 = S[0x3]
0x319: V318 = CALLER
0x31a: V319 = 0x1
0x31c: V320 = 0xa0
0x31e: V321 = 0x2
0x320: V322 = EXP 0x2 0xa0
0x321: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x324: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x326: V325 = AND V317 0xffffffffffffffffffffffffffffffffffffffff
0x327: V326 = EQ V325 V324
0x328: V327 = 0x330
0x32b: JUMPI 0x330 V326
---
Entry stack: [V12, 0x99, V116, V119, V121, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99, V116, V119, V121, V125]

================================

Block 0x32c
[0x32c:0x32f]
---
Predecessors: [0x315]
Successors: []
---
0x32c PUSH1 0x0
0x32e DUP1
0x32f REVERT
---
0x32c: V328 = 0x0
0x32f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x99, V116, V119, V121, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99, V116, V119, V121, V125]

================================

Block 0x330
[0x330:0x382]
---
Predecessors: [0x315]
Successors: [0x383]
---
0x330 JUMPDEST
0x331 PUSH1 0x4
0x333 DUP1
0x334 SLOAD
0x335 PUSH1 0x1
0x337 PUSH1 0xa0
0x339 PUSH1 0x2
0x33b EXP
0x33c SUB
0x33d DUP1
0x33e DUP8
0x33f AND
0x340 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x355 NOT
0x356 SWAP3
0x357 DUP4
0x358 AND
0x359 OR
0x35a SWAP1
0x35b SWAP3
0x35c SSTORE
0x35d PUSH1 0x5
0x35f DUP1
0x360 SLOAD
0x361 SWAP3
0x362 DUP7
0x363 AND
0x364 SWAP3
0x365 SWAP1
0x366 SWAP2
0x367 AND
0x368 SWAP2
0x369 SWAP1
0x36a SWAP2
0x36b OR
0x36c SWAP1
0x36d SSTORE
0x36e PUSH1 0x2
0x370 DUP3
0x371 SWAP1
0x372 SSTORE
0x373 PUSH1 0x0
0x375 DUP1
0x376 SLOAD
0x377 DUP3
0x378 ISZERO
0x379 ISZERO
0x37a PUSH1 0xff
0x37c NOT
0x37d SWAP1
0x37e SWAP2
0x37f AND
0x380 OR
0x381 SWAP1
0x382 SSTORE
---
0x330: JUMPDEST 
0x331: V329 = 0x4
0x334: V330 = S[0x4]
0x335: V331 = 0x1
0x337: V332 = 0xa0
0x339: V333 = 0x2
0x33b: V334 = EXP 0x2 0xa0
0x33c: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33f: V336 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x340: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x355: V338 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x358: V339 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V330
0x359: V340 = OR V339 V336
0x35c: S[0x4] = V340
0x35d: V341 = 0x5
0x360: V342 = S[0x5]
0x363: V343 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x367: V344 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V342
0x36b: V345 = OR V344 V343
0x36d: S[0x5] = V345
0x36e: V346 = 0x2
0x372: S[0x2] = V121
0x373: V347 = 0x0
0x376: V348 = S[0x0]
0x378: V349 = ISZERO V125
0x379: V350 = ISZERO V349
0x37a: V351 = 0xff
0x37c: V352 = NOT 0xff
0x37f: V353 = AND V348 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x380: V354 = OR V353 V350
0x382: S[0x0] = V354
---
Entry stack: [V12, 0x99, V116, V119, V121, V125]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x99, V116, V119, V121, V125]

================================

Block 0x383
[0x383:0x388]
---
Predecessors: [0x330]
Successors: [0x99]
---
0x383 JUMPDEST
0x384 POP
0x385 POP
0x386 POP
0x387 POP
0x388 JUMP
---
0x383: JUMPDEST 
0x388: JUMP 0x99
---
Entry stack: [V12, 0x99, V116, V119, V121, V125]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x389
[0x389:0x3a2]
---
Predecessors: [0x162]
Successors: [0x3a3, 0x3a7]
---
0x389 JUMPDEST
0x38a PUSH1 0x3
0x38c SLOAD
0x38d PUSH1 0x0
0x38f SWAP1
0x390 CALLER
0x391 PUSH1 0x1
0x393 PUSH1 0xa0
0x395 PUSH1 0x2
0x397 EXP
0x398 SUB
0x399 SWAP1
0x39a DUP2
0x39b AND
0x39c SWAP2
0x39d AND
0x39e EQ
0x39f PUSH2 0x3a7
0x3a2 JUMPI
---
0x389: JUMPDEST 
0x38a: V355 = 0x3
0x38c: V356 = S[0x3]
0x38d: V357 = 0x0
0x390: V358 = CALLER
0x391: V359 = 0x1
0x393: V360 = 0xa0
0x395: V361 = 0x2
0x397: V362 = EXP 0x2 0xa0
0x398: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39b: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x39d: V365 = AND V356 0xffffffffffffffffffffffffffffffffffffffff
0x39e: V366 = EQ V365 V364
0x39f: V367 = 0x3a7
0x3a2: JUMPI 0x3a7 V366
---
Entry stack: [V12, 0x99, V139]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x99, V139, 0x0]

================================

Block 0x3a3
[0x3a3:0x3a6]
---
Predecessors: [0x389]
Successors: []
---
0x3a3 PUSH1 0x0
0x3a5 DUP1
0x3a6 REVERT
---
0x3a3: V368 = 0x0
0x3a6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x99, V139, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99, V139, 0x0]

================================

Block 0x3a7
[0x3a7:0x3fb]
---
Predecessors: [0x389]
Successors: [0x3fc, 0x400]
---
0x3a7 JUMPDEST
0x3a8 PUSH1 0x5
0x3aa SLOAD
0x3ab PUSH1 0x1
0x3ad PUSH1 0xa0
0x3af PUSH1 0x2
0x3b1 EXP
0x3b2 SUB
0x3b3 AND
0x3b4 PUSH4 0x70a08231
0x3b9 ADDRESS
0x3ba PUSH1 0x0
0x3bc PUSH1 0x40
0x3be MLOAD
0x3bf PUSH1 0x20
0x3c1 ADD
0x3c2 MSTORE
0x3c3 PUSH1 0x40
0x3c5 MLOAD
0x3c6 PUSH1 0xe0
0x3c8 PUSH1 0x2
0x3ca EXP
0x3cb PUSH4 0xffffffff
0x3d0 DUP5
0x3d1 AND
0x3d2 MUL
0x3d3 DUP2
0x3d4 MSTORE
0x3d5 PUSH1 0x1
0x3d7 PUSH1 0xa0
0x3d9 PUSH1 0x2
0x3db EXP
0x3dc SUB
0x3dd SWAP1
0x3de SWAP2
0x3df AND
0x3e0 PUSH1 0x4
0x3e2 DUP3
0x3e3 ADD
0x3e4 MSTORE
0x3e5 PUSH1 0x24
0x3e7 ADD
0x3e8 PUSH1 0x20
0x3ea PUSH1 0x40
0x3ec MLOAD
0x3ed DUP1
0x3ee DUP4
0x3ef SUB
0x3f0 DUP2
0x3f1 PUSH1 0x0
0x3f3 DUP8
0x3f4 DUP1
0x3f5 EXTCODESIZE
0x3f6 ISZERO
0x3f7 ISZERO
0x3f8 PUSH2 0x400
0x3fb JUMPI
---
0x3a7: JUMPDEST 
0x3a8: V369 = 0x5
0x3aa: V370 = S[0x5]
0x3ab: V371 = 0x1
0x3ad: V372 = 0xa0
0x3af: V373 = 0x2
0x3b1: V374 = EXP 0x2 0xa0
0x3b2: V375 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b3: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x3b4: V377 = 0x70a08231
0x3b9: V378 = ADDRESS
0x3ba: V379 = 0x0
0x3bc: V380 = 0x40
0x3be: V381 = M[0x40]
0x3bf: V382 = 0x20
0x3c1: V383 = ADD 0x20 V381
0x3c2: M[V383] = 0x0
0x3c3: V384 = 0x40
0x3c5: V385 = M[0x40]
0x3c6: V386 = 0xe0
0x3c8: V387 = 0x2
0x3ca: V388 = EXP 0x2 0xe0
0x3cb: V389 = 0xffffffff
0x3d1: V390 = AND 0x70a08231 0xffffffff
0x3d2: V391 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x3d4: M[V385] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3d5: V392 = 0x1
0x3d7: V393 = 0xa0
0x3d9: V394 = 0x2
0x3db: V395 = EXP 0x2 0xa0
0x3dc: V396 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3df: V397 = AND V378 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V398 = 0x4
0x3e3: V399 = ADD V385 0x4
0x3e4: M[V399] = V397
0x3e5: V400 = 0x24
0x3e7: V401 = ADD 0x24 V385
0x3e8: V402 = 0x20
0x3ea: V403 = 0x40
0x3ec: V404 = M[0x40]
0x3ef: V405 = SUB V401 V404
0x3f1: V406 = 0x0
0x3f5: V407 = EXTCODESIZE V376
0x3f6: V408 = ISZERO V407
0x3f7: V409 = ISZERO V408
0x3f8: V410 = 0x400
0x3fb: JUMPI 0x400 V409
---
Entry stack: [V12, 0x99, V139, 0x0]
Stack pops: 0
Stack additions: [V376, 0x70a08231, V401, 0x20, V404, V405, V404, 0x0, V376]
Exit stack: [V12, 0x99, V139, 0x0, V376, 0x70a08231, V401, 0x20, V404, V405, V404, 0x0, V376]

================================

Block 0x3fc
[0x3fc:0x3ff]
---
Predecessors: [0x3a7]
Successors: []
---
0x3fc PUSH1 0x0
0x3fe DUP1
0x3ff REVERT
---
0x3fc: V411 = 0x0
0x3ff: REVERT 0x0 0x0
---
Entry stack: [V12, 0x99, V139, 0x0, V376, 0x70a08231, V401, 0x20, V404, V405, V404, 0x0, V376]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99, V139, 0x0, V376, 0x70a08231, V401, 0x20, V404, V405, V404, 0x0, V376]

================================

Block 0x400
[0x400:0x40c]
---
Predecessors: [0x3a7]
Successors: [0x40d, 0x411]
---
0x400 JUMPDEST
0x401 PUSH2 0x2c6
0x404 GAS
0x405 SUB
0x406 CALL
0x407 ISZERO
0x408 ISZERO
0x409 PUSH2 0x411
0x40c JUMPI
---
0x400: JUMPDEST 
0x401: V412 = 0x2c6
0x404: V413 = GAS
0x405: V414 = SUB V413 0x2c6
0x406: V415 = CALL V414 V376 0x0 V404 V405 V404 0x20
0x407: V416 = ISZERO V415
0x408: V417 = ISZERO V416
0x409: V418 = 0x411
0x40c: JUMPI 0x411 V417
---
Entry stack: [V12, 0x99, V139, 0x0, V376, 0x70a08231, V401, 0x20, V404, V405, V404, 0x0, V376]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x99, V139, 0x0, V376, 0x70a08231, V401]

================================

Block 0x40d
[0x40d:0x410]
---
Predecessors: [0x400]
Successors: []
---
0x40d PUSH1 0x0
0x40f DUP1
0x410 REVERT
---
0x40d: V419 = 0x0
0x410: REVERT 0x0 0x0
---
Entry stack: [V12, 0x99, V139, 0x0, V376, 0x70a08231, V401]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99, V139, 0x0, V376, 0x70a08231, V401]

================================

Block 0x411
[0x411:0x423]
---
Predecessors: [0x400]
Successors: [0x424, 0x428]
---
0x411 JUMPDEST
0x412 POP
0x413 POP
0x414 POP
0x415 PUSH1 0x40
0x417 MLOAD
0x418 DUP1
0x419 MLOAD
0x41a SWAP2
0x41b POP
0x41c POP
0x41d DUP1
0x41e ISZERO
0x41f ISZERO
0x420 PUSH2 0x428
0x423 JUMPI
---
0x411: JUMPDEST 
0x415: V420 = 0x40
0x417: V421 = M[0x40]
0x419: V422 = M[V421]
0x41e: V423 = ISZERO V422
0x41f: V424 = ISZERO V423
0x420: V425 = 0x428
0x423: JUMPI 0x428 V424
---
Entry stack: [V12, 0x99, V139, 0x0, V376, 0x70a08231, V401]
Stack pops: 4
Stack additions: [V422]
Exit stack: [V12, 0x99, V139, V422]

================================

Block 0x424
[0x424:0x427]
---
Predecessors: [0x411]
Successors: []
---
0x424 PUSH1 0x0
0x426 DUP1
0x427 REVERT
---
0x424: V426 = 0x0
0x427: REVERT 0x0 0x0
---
Entry stack: [V12, 0x99, V139, V422]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99, V139, V422]

================================

Block 0x428
[0x428:0x482]
---
Predecessors: [0x411]
Successors: [0x483, 0x487]
---
0x428 JUMPDEST
0x429 PUSH1 0x5
0x42b SLOAD
0x42c PUSH1 0x1
0x42e PUSH1 0xa0
0x430 PUSH1 0x2
0x432 EXP
0x433 SUB
0x434 AND
0x435 PUSH4 0xa9059cbb
0x43a DUP4
0x43b DUP4
0x43c PUSH1 0x0
0x43e PUSH1 0x40
0x440 MLOAD
0x441 PUSH1 0x20
0x443 ADD
0x444 MSTORE
0x445 PUSH1 0x40
0x447 MLOAD
0x448 PUSH1 0xe0
0x44a PUSH1 0x2
0x44c EXP
0x44d PUSH4 0xffffffff
0x452 DUP6
0x453 AND
0x454 MUL
0x455 DUP2
0x456 MSTORE
0x457 PUSH1 0x1
0x459 PUSH1 0xa0
0x45b PUSH1 0x2
0x45d EXP
0x45e SUB
0x45f SWAP1
0x460 SWAP3
0x461 AND
0x462 PUSH1 0x4
0x464 DUP4
0x465 ADD
0x466 MSTORE
0x467 PUSH1 0x24
0x469 DUP3
0x46a ADD
0x46b MSTORE
0x46c PUSH1 0x44
0x46e ADD
0x46f PUSH1 0x20
0x471 PUSH1 0x40
0x473 MLOAD
0x474 DUP1
0x475 DUP4
0x476 SUB
0x477 DUP2
0x478 PUSH1 0x0
0x47a DUP8
0x47b DUP1
0x47c EXTCODESIZE
0x47d ISZERO
0x47e ISZERO
0x47f PUSH2 0x487
0x482 JUMPI
---
0x428: JUMPDEST 
0x429: V427 = 0x5
0x42b: V428 = S[0x5]
0x42c: V429 = 0x1
0x42e: V430 = 0xa0
0x430: V431 = 0x2
0x432: V432 = EXP 0x2 0xa0
0x433: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x434: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x435: V435 = 0xa9059cbb
0x43c: V436 = 0x0
0x43e: V437 = 0x40
0x440: V438 = M[0x40]
0x441: V439 = 0x20
0x443: V440 = ADD 0x20 V438
0x444: M[V440] = 0x0
0x445: V441 = 0x40
0x447: V442 = M[0x40]
0x448: V443 = 0xe0
0x44a: V444 = 0x2
0x44c: V445 = EXP 0x2 0xe0
0x44d: V446 = 0xffffffff
0x453: V447 = AND 0xa9059cbb 0xffffffff
0x454: V448 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x456: M[V442] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x457: V449 = 0x1
0x459: V450 = 0xa0
0x45b: V451 = 0x2
0x45d: V452 = EXP 0x2 0xa0
0x45e: V453 = SUB 0x10000000000000000000000000000000000000000 0x1
0x461: V454 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x462: V455 = 0x4
0x465: V456 = ADD V442 0x4
0x466: M[V456] = V454
0x467: V457 = 0x24
0x46a: V458 = ADD V442 0x24
0x46b: M[V458] = V422
0x46c: V459 = 0x44
0x46e: V460 = ADD 0x44 V442
0x46f: V461 = 0x20
0x471: V462 = 0x40
0x473: V463 = M[0x40]
0x476: V464 = SUB V460 V463
0x478: V465 = 0x0
0x47c: V466 = EXTCODESIZE V434
0x47d: V467 = ISZERO V466
0x47e: V468 = ISZERO V467
0x47f: V469 = 0x487
0x482: JUMPI 0x487 V468
---
Entry stack: [V12, 0x99, V139, V422]
Stack pops: 2
Stack additions: [S1, S0, V434, 0xa9059cbb, V460, 0x20, V463, V464, V463, 0x0, V434]
Exit stack: [V12, 0x99, V139, V422, V434, 0xa9059cbb, V460, 0x20, V463, V464, V463, 0x0, V434]

================================

Block 0x483
[0x483:0x486]
---
Predecessors: [0x428]
Successors: []
---
0x483 PUSH1 0x0
0x485 DUP1
0x486 REVERT
---
0x483: V470 = 0x0
0x486: REVERT 0x0 0x0
---
Entry stack: [V12, 0x99, V139, V422, V434, 0xa9059cbb, V460, 0x20, V463, V464, V463, 0x0, V434]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99, V139, V422, V434, 0xa9059cbb, V460, 0x20, V463, V464, V463, 0x0, V434]

================================

Block 0x487
[0x487:0x493]
---
Predecessors: [0x428]
Successors: [0x494, 0x498]
---
0x487 JUMPDEST
0x488 PUSH2 0x2c6
0x48b GAS
0x48c SUB
0x48d CALL
0x48e ISZERO
0x48f ISZERO
0x490 PUSH2 0x498
0x493 JUMPI
---
0x487: JUMPDEST 
0x488: V471 = 0x2c6
0x48b: V472 = GAS
0x48c: V473 = SUB V472 0x2c6
0x48d: V474 = CALL V473 V434 0x0 V463 V464 V463 0x20
0x48e: V475 = ISZERO V474
0x48f: V476 = ISZERO V475
0x490: V477 = 0x498
0x493: JUMPI 0x498 V476
---
Entry stack: [V12, 0x99, V139, V422, V434, 0xa9059cbb, V460, 0x20, V463, V464, V463, 0x0, V434]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x99, V139, V422, V434, 0xa9059cbb, V460]

================================

Block 0x494
[0x494:0x497]
---
Predecessors: [0x487]
Successors: []
---
0x494 PUSH1 0x0
0x496 DUP1
0x497 REVERT
---
0x494: V478 = 0x0
0x497: REVERT 0x0 0x0
---
Entry stack: [V12, 0x99, V139, V422, V434, 0xa9059cbb, V460]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99, V139, V422, V434, 0xa9059cbb, V460]

================================

Block 0x498
[0x498:0x4a8]
---
Predecessors: [0x487]
Successors: [0x4a9, 0x4ad]
---
0x498 JUMPDEST
0x499 POP
0x49a POP
0x49b POP
0x49c PUSH1 0x40
0x49e MLOAD
0x49f DUP1
0x4a0 MLOAD
0x4a1 SWAP1
0x4a2 POP
0x4a3 ISZERO
0x4a4 ISZERO
0x4a5 PUSH2 0x4ad
0x4a8 JUMPI
---
0x498: JUMPDEST 
0x49c: V479 = 0x40
0x49e: V480 = M[0x40]
0x4a0: V481 = M[V480]
0x4a3: V482 = ISZERO V481
0x4a4: V483 = ISZERO V482
0x4a5: V484 = 0x4ad
0x4a8: JUMPI 0x4ad V483
---
Entry stack: [V12, 0x99, V139, V422, V434, 0xa9059cbb, V460]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x99, V139, V422]

================================

Block 0x4a9
[0x4a9:0x4ac]
---
Predecessors: [0x498]
Successors: []
---
0x4a9 PUSH1 0x0
0x4ab DUP1
0x4ac REVERT
---
0x4a9: V485 = 0x0
0x4ac: REVERT 0x0 0x0
---
Entry stack: [V12, 0x99, V139, V422]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99, V139, V422]

================================

Block 0x4ad
[0x4ad:0x4ad]
---
Predecessors: [0x498]
Successors: [0x4ae]
---
0x4ad JUMPDEST
---
0x4ad: JUMPDEST 
---
Entry stack: [V12, 0x99, V139, V422]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x99, V139, V422]

================================

Block 0x4ae
[0x4ae:0x4b1]
---
Predecessors: [0x4ad]
Successors: [0x99]
---
0x4ae JUMPDEST
0x4af POP
0x4b0 POP
0x4b1 JUMP
---
0x4ae: JUMPDEST 
0x4b1: JUMP 0x99
---
Entry stack: [V12, 0x99, V139, V422]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b2
[0x4b2:0x4b7]
---
Predecessors: [0x183]
Successors: [0x18b]
---
0x4b2 JUMPDEST
0x4b3 PUSH1 0x1
0x4b5 SLOAD
0x4b6 DUP2
0x4b7 JUMP
---
0x4b2: JUMPDEST 
0x4b3: V486 = 0x1
0x4b5: V487 = S[0x1]
0x4b7: JUMP 0x18b
---
Entry stack: [V12, 0x18b]
Stack pops: 1
Stack additions: [S0, V487]
Exit stack: [V12, 0x18b, V487]

================================

Block 0x4b8
[0x4b8:0x4c6]
---
Predecessors: [0x1a8]
Successors: [0x10c]
---
0x4b8 JUMPDEST
0x4b9 PUSH1 0x3
0x4bb SLOAD
0x4bc PUSH1 0x1
0x4be PUSH1 0xa0
0x4c0 PUSH1 0x2
0x4c2 EXP
0x4c3 SUB
0x4c4 AND
0x4c5 DUP2
0x4c6 JUMP
---
0x4b8: JUMPDEST 
0x4b9: V488 = 0x3
0x4bb: V489 = S[0x3]
0x4bc: V490 = 0x1
0x4be: V491 = 0xa0
0x4c0: V492 = 0x2
0x4c2: V493 = EXP 0x2 0xa0
0x4c3: V494 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c4: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V489
0x4c6: JUMP 0x10c
---
Entry stack: [V12, 0x10c]
Stack pops: 1
Stack additions: [S0, V495]
Exit stack: [V12, 0x10c, V495]

================================

Block 0x4c7
[0x4c7:0x4cc]
---
Predecessors: [0x1d7]
Successors: [0x18b]
---
0x4c7 JUMPDEST
0x4c8 PUSH1 0x2
0x4ca SLOAD
0x4cb DUP2
0x4cc JUMP
---
0x4c7: JUMPDEST 
0x4c8: V496 = 0x2
0x4ca: V497 = S[0x2]
0x4cc: JUMP 0x18b
---
Entry stack: [V12, 0x18b]
Stack pops: 1
Stack additions: [S0, V497]
Exit stack: [V12, 0x18b, V497]

================================

Block 0x4cd
[0x4cd:0x4db]
---
Predecessors: [0x1fc]
Successors: [0x10c]
---
0x4cd JUMPDEST
0x4ce PUSH1 0x5
0x4d0 SLOAD
0x4d1 PUSH1 0x1
0x4d3 PUSH1 0xa0
0x4d5 PUSH1 0x2
0x4d7 EXP
0x4d8 SUB
0x4d9 AND
0x4da DUP2
0x4db JUMP
---
0x4cd: JUMPDEST 
0x4ce: V498 = 0x5
0x4d0: V499 = S[0x5]
0x4d1: V500 = 0x1
0x4d3: V501 = 0xa0
0x4d5: V502 = 0x2
0x4d7: V503 = EXP 0x2 0xa0
0x4d8: V504 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d9: V505 = AND 0xffffffffffffffffffffffffffffffffffffffff V499
0x4db: JUMP 0x10c
---
Entry stack: [V12, 0x10c]
Stack pops: 1
Stack additions: [S0, V505]
Exit stack: [V12, 0x10c, V505]

================================

Block 0x4dc
[0x4dc:0x518]
---
Predecessors: []
Successors: []
---
0x4dc STOP
0x4dd LOG1
0x4de PUSH6 0x627a7a723058
0x4e5 SHA3
0x4e6 MISSING 0x25
0x4e7 MISSING 0xb8
0x4e8 ORIGIN
0x4e9 CALLDATACOPY
0x4ea MLOAD
0x4eb PUSH7 0x6d3b93ba6f9419
0x4f3 MISSING 0xea
0x4f4 SELFDESTRUCT
0x4f5 MISSING 0xec
0x4f6 MISSING 0xa6
0x4f7 DUP15
0x4f8 PUSH32 0xe5eea9a110868a6c495ce101dd0029
---
0x4dc: STOP 
0x4dd: LOG S0 S1 S2
0x4de: V506 = 0x627a7a723058
0x4e5: V507 = SHA3 0x627a7a723058 S3
0x4e6: MISSING 0x25
0x4e7: MISSING 0xb8
0x4e8: V508 = ORIGIN
0x4e9: CALLDATACOPY V508 S0 S1
0x4ea: V509 = M[S2]
0x4eb: V510 = 0x6d3b93ba6f9419
0x4f3: MISSING 0xea
0x4f4: SELFDESTRUCT S0
0x4f5: MISSING 0xec
0x4f6: MISSING 0xa6
0x4f8: V511 = 0xe5eea9a110868a6c495ce101dd0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V507, 0x6d3b93ba6f9419, V509, 0xe5eea9a110868a6c495ce101dd0029, S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14]
Exit stack: []

================================

Function 0:
Public function signature: 0x2f58015
Entry block: 0x9c
Exit block: 0x9a
Body: 0x99, 0x9a, 0x9c, 0xa3, 0xa7, 0x220, 0x22c, 0x230, 0x23b, 0x23f, 0x252, 0x256, 0x29a, 0x29e, 0x29f

Function 1:
Public function signature: 0x40fee2c8
Entry block: 0xb1
Exit block: 0x9a
Body: 0x99, 0x9a, 0xb1, 0xb8, 0xbc, 0x2a1, 0x2b8, 0x2bc, 0x2f5, 0x2f9, 0x2fa

Function 2:
Public function signature: 0x6360fc3f
Entry block: 0xd2
Exit block: 0xe5
Body: 0xd2, 0xd9, 0xdd, 0xe5, 0x2fd

Function 3:
Public function signature: 0x6ad1fe02
Entry block: 0xf9
Exit block: 0x10c
Body: 0xf9, 0x100, 0x104, 0x10c, 0x306

Function 4:
Public function signature: 0x6eaa9fe9
Entry block: 0x128
Exit block: 0x9a
Body: 0x99, 0x9a, 0x128, 0x12f, 0x133, 0x315, 0x32c, 0x330, 0x383

Function 5:
Public function signature: 0x84726a36
Entry block: 0x157
Exit block: 0x9a
Body: 0x99, 0x9a, 0x157, 0x15e, 0x162, 0x389, 0x3a3, 0x3a7, 0x3fc, 0x400, 0x40d, 0x411, 0x424, 0x428, 0x483, 0x487, 0x494, 0x498, 0x4a9, 0x4ad, 0x4ae

Function 6:
Public function signature: 0xc42bb1e4
Entry block: 0x178
Exit block: 0x18b
Body: 0x178, 0x17f, 0x183, 0x18b, 0x4b2

Function 7:
Public function signature: 0xca4b208b
Entry block: 0x19d
Exit block: 0x10c
Body: 0x10c, 0x19d, 0x1a4, 0x1a8, 0x4b8

Function 8:
Public function signature: 0xf79dcf8d
Entry block: 0x1cc
Exit block: 0x18b
Body: 0x18b, 0x1cc, 0x1d3, 0x1d7, 0x4c7

Function 9:
Public function signature: 0xfc0c546a
Entry block: 0x1f1
Exit block: 0x10c
Body: 0x10c, 0x1f1, 0x1f8, 0x1fc, 0x4cd

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x9a
Body: 0x88, 0x89, 0x95, 0x99, 0x9a

