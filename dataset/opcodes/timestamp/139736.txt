Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x101]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x101
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x101
0xa: JUMPI 0x101 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x10e]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x18ad9260
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x10e
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x18ad9260
0x20: V14 = EQ V12 0x18ad9260
0x21: V15 = 0x10e
0x24: JUMPI 0x10e V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x13d]
---
0x25 DUP1
0x26 PUSH4 0x1d85de4f
0x2b EQ
0x2c PUSH2 0x13d
0x2f JUMPI
---
0x26: V16 = 0x1d85de4f
0x2b: V17 = EQ 0x1d85de4f V12
0x2c: V18 = 0x13d
0x2f: JUMPI 0x13d V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x162]
---
0x30 DUP1
0x31 PUSH4 0x28d1226a
0x36 EQ
0x37 PUSH2 0x162
0x3a JUMPI
---
0x31: V19 = 0x28d1226a
0x36: V20 = EQ 0x28d1226a V12
0x37: V21 = 0x162
0x3a: JUMPI 0x162 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x187]
---
0x3b DUP1
0x3c PUSH4 0x3197cbb6
0x41 EQ
0x42 PUSH2 0x187
0x45 JUMPI
---
0x3c: V22 = 0x3197cbb6
0x41: V23 = EQ 0x3197cbb6 V12
0x42: V24 = 0x187
0x45: JUMPI 0x187 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1ac]
---
0x46 DUP1
0x47 PUSH4 0x361c3308
0x4c EQ
0x4d PUSH2 0x1ac
0x50 JUMPI
---
0x47: V25 = 0x361c3308
0x4c: V26 = EQ 0x361c3308 V12
0x4d: V27 = 0x1ac
0x50: JUMPI 0x1ac V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1d1]
---
0x51 DUP1
0x52 PUSH4 0x41c0e1b5
0x57 EQ
0x58 PUSH2 0x1d1
0x5b JUMPI
---
0x52: V28 = 0x41c0e1b5
0x57: V29 = EQ 0x41c0e1b5 V12
0x58: V30 = 0x1d1
0x5b: JUMPI 0x1d1 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1e6]
---
0x5c DUP1
0x5d PUSH4 0x45e05f43
0x62 EQ
0x63 PUSH2 0x1e6
0x66 JUMPI
---
0x5d: V31 = 0x45e05f43
0x62: V32 = EQ 0x45e05f43 V12
0x63: V33 = 0x1e6
0x66: JUMPI 0x1e6 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x215]
---
0x67 DUP1
0x68 PUSH4 0x4bb278f3
0x6d EQ
0x6e PUSH2 0x215
0x71 JUMPI
---
0x68: V34 = 0x4bb278f3
0x6d: V35 = EQ 0x4bb278f3 V12
0x6e: V36 = 0x215
0x71: JUMPI 0x215 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x23c]
---
0x72 DUP1
0x73 PUSH4 0x63b20117
0x78 EQ
0x79 PUSH2 0x23c
0x7c JUMPI
---
0x73: V37 = 0x63b20117
0x78: V38 = EQ 0x63b20117 V12
0x79: V39 = 0x23c
0x7c: JUMPI 0x23c V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x261]
---
0x7d DUP1
0x7e PUSH4 0x63bd1d4a
0x83 EQ
0x84 PUSH2 0x261
0x87 JUMPI
---
0x7e: V40 = 0x63bd1d4a
0x83: V41 = EQ 0x63bd1d4a V12
0x84: V42 = 0x261
0x87: JUMPI 0x261 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x290]
---
0x88 DUP1
0x89 PUSH4 0x78e97925
0x8e EQ
0x8f PUSH2 0x290
0x92 JUMPI
---
0x89: V43 = 0x78e97925
0x8e: V44 = EQ 0x78e97925 V12
0x8f: V45 = 0x290
0x92: JUMPI 0x290 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2b5]
---
0x93 DUP1
0x94 PUSH4 0x7bb98a68
0x99 EQ
0x9a PUSH2 0x2b5
0x9d JUMPI
---
0x94: V46 = 0x7bb98a68
0x99: V47 = EQ 0x7bb98a68 V12
0x9a: V48 = 0x2b5
0x9d: JUMPI 0x2b5 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2e4]
---
0x9e DUP1
0x9f PUSH4 0x8ba47bdd
0xa4 EQ
0xa5 PUSH2 0x2e4
0xa8 JUMPI
---
0x9f: V49 = 0x8ba47bdd
0xa4: V50 = EQ 0x8ba47bdd V12
0xa5: V51 = 0x2e4
0xa8: JUMPI 0x2e4 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x36f]
---
0xa9 DUP1
0xaa PUSH4 0x8d4e4083
0xaf EQ
0xb0 PUSH2 0x36f
0xb3 JUMPI
---
0xaa: V52 = 0x8d4e4083
0xaf: V53 = EQ 0x8d4e4083 V12
0xb0: V54 = 0x36f
0xb3: JUMPI 0x36f V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x396]
---
0xb4 DUP1
0xb5 PUSH4 0xa4d66daf
0xba EQ
0xbb PUSH2 0x396
0xbe JUMPI
---
0xb5: V55 = 0xa4d66daf
0xba: V56 = EQ 0xa4d66daf V12
0xbb: V57 = 0x396
0xbe: JUMPI 0x396 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x3bb]
---
0xbf DUP1
0xc0 PUSH4 0xb4427263
0xc5 EQ
0xc6 PUSH2 0x3bb
0xc9 JUMPI
---
0xc0: V58 = 0xb4427263
0xc5: V59 = EQ 0xb4427263 V12
0xc6: V60 = 0x3bb
0xc9: JUMPI 0x3bb V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x3d7]
---
0xca DUP1
0xcb PUSH4 0xc296302a
0xd0 EQ
0xd1 PUSH2 0x3d7
0xd4 JUMPI
---
0xcb: V61 = 0xc296302a
0xd0: V62 = EQ 0xc296302a V12
0xd1: V63 = 0x3d7
0xd4: JUMPI 0x3d7 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x3f8]
---
0xd5 DUP1
0xd6 PUSH4 0xccb98ffc
0xdb EQ
0xdc PUSH2 0x3f8
0xdf JUMPI
---
0xd6: V64 = 0xccb98ffc
0xdb: V65 = EQ 0xccb98ffc V12
0xdc: V66 = 0x3f8
0xdf: JUMPI 0x3f8 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x410]
---
0xe0 DUP1
0xe1 PUSH4 0xd3419bf3
0xe6 EQ
0xe7 PUSH2 0x410
0xea JUMPI
---
0xe1: V67 = 0xd3419bf3
0xe6: V68 = EQ 0xd3419bf3 V12
0xe7: V69 = 0x410
0xea: JUMPI 0x410 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x43f]
---
0xeb DUP1
0xec PUSH4 0xebf0c717
0xf1 EQ
0xf2 PUSH2 0x43f
0xf5 JUMPI
---
0xec: V70 = 0xebf0c717
0xf1: V71 = EQ 0xebf0c717 V12
0xf2: V72 = 0x43f
0xf5: JUMPI 0x43f V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x46e]
---
0xf6 DUP1
0xf7 PUSH4 0xf2a75fe4
0xfc EQ
0xfd PUSH2 0x46e
0x100 JUMPI
---
0xf7: V73 = 0xf2a75fe4
0xfc: V74 = EQ 0xf2a75fe4 V12
0xfd: V75 = 0x46e
0x100: JUMPI 0x46e V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x101]
---
Predecessors: [0x0, 0xf6]
Successors: [0x102]
---
0x101 JUMPDEST
---
0x101: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x102
[0x102:0x109]
---
Predecessors: [0x101]
Successors: [0x483]
---
0x102 JUMPDEST
0x103 PUSH2 0x10a
0x106 PUSH2 0x483
0x109 JUMP
---
0x102: JUMPDEST 
0x103: V76 = 0x10a
0x106: V77 = 0x483
0x109: JUMP 0x483
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10a]
Exit stack: [V12, 0x10a]

================================

Block 0x10a
[0x10a:0x10b]
---
Predecessors: [0x751]
Successors: [0x10c]
---
0x10a JUMPDEST
0x10b POP
---
0x10a: JUMPDEST 
---
Entry stack: [V12, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x10d]
---
Predecessors: [0x10a, 0x7a7, 0xa30, 0xa55]
Successors: []
---
0x10c JUMPDEST
0x10d STOP
---
0x10c: JUMPDEST 
0x10d: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10e
[0x10e:0x114]
---
Predecessors: [0xb]
Successors: [0x115, 0x119]
---
0x10e JUMPDEST
0x10f CALLVALUE
0x110 ISZERO
0x111 PUSH2 0x119
0x114 JUMPI
---
0x10e: JUMPDEST 
0x10f: V78 = CALLVALUE
0x110: V79 = ISZERO V78
0x111: V80 = 0x119
0x114: JUMPI 0x119 V79
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x115
[0x115:0x118]
---
Predecessors: [0x10e]
Successors: []
---
0x115 PUSH1 0x0
0x117 DUP1
0x118 REVERT
---
0x115: V81 = 0x0
0x118: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x119
[0x119:0x120]
---
Predecessors: [0x10e]
Successors: [0x756]
---
0x119 JUMPDEST
0x11a PUSH2 0x121
0x11d PUSH2 0x756
0x120 JUMP
---
0x119: JUMPDEST 
0x11a: V82 = 0x121
0x11d: V83 = 0x756
0x120: JUMP 0x756
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x121]
Exit stack: [V12, 0x121]

================================

Block 0x121
[0x121:0x13c]
---
Predecessors: [0x756, 0x7a9, 0x91a, 0x92f, 0xa58, 0xa67]
Successors: []
---
0x121 JUMPDEST
0x122 PUSH1 0x40
0x124 MLOAD
0x125 PUSH1 0x1
0x127 PUSH1 0xa0
0x129 PUSH1 0x2
0x12b EXP
0x12c SUB
0x12d SWAP1
0x12e SWAP2
0x12f AND
0x130 DUP2
0x131 MSTORE
0x132 PUSH1 0x20
0x134 ADD
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 SWAP2
0x13a SUB
0x13b SWAP1
0x13c RETURN
---
0x121: JUMPDEST 
0x122: V84 = 0x40
0x124: V85 = M[0x40]
0x125: V86 = 0x1
0x127: V87 = 0xa0
0x129: V88 = 0x2
0x12b: V89 = EXP 0x2 0xa0
0x12c: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12f: V91 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x131: M[V85] = V91
0x132: V92 = 0x20
0x134: V93 = ADD 0x20 V85
0x135: V94 = 0x40
0x137: V95 = M[0x40]
0x13a: V96 = SUB V93 V95
0x13c: RETURN V95 V96
---
Entry stack: [V12, 0x121, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x121]

================================

Block 0x13d
[0x13d:0x143]
---
Predecessors: [0x25]
Successors: [0x144, 0x148]
---
0x13d JUMPDEST
0x13e CALLVALUE
0x13f ISZERO
0x140 PUSH2 0x148
0x143 JUMPI
---
0x13d: JUMPDEST 
0x13e: V97 = CALLVALUE
0x13f: V98 = ISZERO V97
0x140: V99 = 0x148
0x143: JUMPI 0x148 V98
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x144
[0x144:0x147]
---
Predecessors: [0x13d]
Successors: []
---
0x144 PUSH1 0x0
0x146 DUP1
0x147 REVERT
---
0x144: V100 = 0x0
0x147: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x148
[0x148:0x14f]
---
Predecessors: [0x13d]
Successors: [0x765]
---
0x148 JUMPDEST
0x149 PUSH2 0x150
0x14c PUSH2 0x765
0x14f JUMP
---
0x148: JUMPDEST 
0x149: V101 = 0x150
0x14c: V102 = 0x765
0x14f: JUMP 0x765
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V12, 0x150]

================================

Block 0x150
[0x150:0x161]
---
Predecessors: [0x765, 0x76b, 0x771, 0x777, 0x914, 0x929, 0x9e5]
Successors: []
---
0x150 JUMPDEST
0x151 PUSH1 0x40
0x153 MLOAD
0x154 SWAP1
0x155 DUP2
0x156 MSTORE
0x157 PUSH1 0x20
0x159 ADD
0x15a PUSH1 0x40
0x15c MLOAD
0x15d DUP1
0x15e SWAP2
0x15f SUB
0x160 SWAP1
0x161 RETURN
---
0x150: JUMPDEST 
0x151: V103 = 0x40
0x153: V104 = M[0x40]
0x156: M[V104] = S0
0x157: V105 = 0x20
0x159: V106 = ADD 0x20 V104
0x15a: V107 = 0x40
0x15c: V108 = M[0x40]
0x15f: V109 = SUB V106 V108
0x161: RETURN V108 V109
---
Entry stack: [V12, 0x150, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x150]

================================

Block 0x162
[0x162:0x168]
---
Predecessors: [0x30]
Successors: [0x169, 0x16d]
---
0x162 JUMPDEST
0x163 CALLVALUE
0x164 ISZERO
0x165 PUSH2 0x16d
0x168 JUMPI
---
0x162: JUMPDEST 
0x163: V110 = CALLVALUE
0x164: V111 = ISZERO V110
0x165: V112 = 0x16d
0x168: JUMPI 0x16d V111
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x169
[0x169:0x16c]
---
Predecessors: [0x162]
Successors: []
---
0x169 PUSH1 0x0
0x16b DUP1
0x16c REVERT
---
0x169: V113 = 0x0
0x16c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16d
[0x16d:0x174]
---
Predecessors: [0x162]
Successors: [0x76b]
---
0x16d JUMPDEST
0x16e PUSH2 0x150
0x171 PUSH2 0x76b
0x174 JUMP
---
0x16d: JUMPDEST 
0x16e: V114 = 0x150
0x171: V115 = 0x76b
0x174: JUMP 0x76b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V12, 0x150]

================================

Block 0x175
[0x175:0x186]
---
Predecessors: []
Successors: []
---
0x175 JUMPDEST
0x176 PUSH1 0x40
0x178 MLOAD
0x179 SWAP1
0x17a DUP2
0x17b MSTORE
0x17c PUSH1 0x20
0x17e ADD
0x17f PUSH1 0x40
0x181 MLOAD
0x182 DUP1
0x183 SWAP2
0x184 SUB
0x185 SWAP1
0x186 RETURN
---
0x175: JUMPDEST 
0x176: V116 = 0x40
0x178: V117 = M[0x40]
0x17b: M[V117] = S0
0x17c: V118 = 0x20
0x17e: V119 = ADD 0x20 V117
0x17f: V120 = 0x40
0x181: V121 = M[0x40]
0x184: V122 = SUB V119 V121
0x186: RETURN V121 V122
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x187
[0x187:0x18d]
---
Predecessors: [0x3b]
Successors: [0x18e, 0x192]
---
0x187 JUMPDEST
0x188 CALLVALUE
0x189 ISZERO
0x18a PUSH2 0x192
0x18d JUMPI
---
0x187: JUMPDEST 
0x188: V123 = CALLVALUE
0x189: V124 = ISZERO V123
0x18a: V125 = 0x192
0x18d: JUMPI 0x192 V124
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18e
[0x18e:0x191]
---
Predecessors: [0x187]
Successors: []
---
0x18e PUSH1 0x0
0x190 DUP1
0x191 REVERT
---
0x18e: V126 = 0x0
0x191: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x192
[0x192:0x199]
---
Predecessors: [0x187]
Successors: [0x771]
---
0x192 JUMPDEST
0x193 PUSH2 0x150
0x196 PUSH2 0x771
0x199 JUMP
---
0x192: JUMPDEST 
0x193: V127 = 0x150
0x196: V128 = 0x771
0x199: JUMP 0x771
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V12, 0x150]

================================

Block 0x19a
[0x19a:0x1ab]
---
Predecessors: []
Successors: []
---
0x19a JUMPDEST
0x19b PUSH1 0x40
0x19d MLOAD
0x19e SWAP1
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 PUSH1 0x40
0x1a6 MLOAD
0x1a7 DUP1
0x1a8 SWAP2
0x1a9 SUB
0x1aa SWAP1
0x1ab RETURN
---
0x19a: JUMPDEST 
0x19b: V129 = 0x40
0x19d: V130 = M[0x40]
0x1a0: M[V130] = S0
0x1a1: V131 = 0x20
0x1a3: V132 = ADD 0x20 V130
0x1a4: V133 = 0x40
0x1a6: V134 = M[0x40]
0x1a9: V135 = SUB V132 V134
0x1ab: RETURN V134 V135
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1ac
[0x1ac:0x1b2]
---
Predecessors: [0x46]
Successors: [0x1b3, 0x1b7]
---
0x1ac JUMPDEST
0x1ad CALLVALUE
0x1ae ISZERO
0x1af PUSH2 0x1b7
0x1b2 JUMPI
---
0x1ac: JUMPDEST 
0x1ad: V136 = CALLVALUE
0x1ae: V137 = ISZERO V136
0x1af: V138 = 0x1b7
0x1b2: JUMPI 0x1b7 V137
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b3
[0x1b3:0x1b6]
---
Predecessors: [0x1ac]
Successors: []
---
0x1b3 PUSH1 0x0
0x1b5 DUP1
0x1b6 REVERT
---
0x1b3: V139 = 0x0
0x1b6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b7
[0x1b7:0x1be]
---
Predecessors: [0x1ac]
Successors: [0x777]
---
0x1b7 JUMPDEST
0x1b8 PUSH2 0x150
0x1bb PUSH2 0x777
0x1be JUMP
---
0x1b7: JUMPDEST 
0x1b8: V140 = 0x150
0x1bb: V141 = 0x777
0x1be: JUMP 0x777
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V12, 0x150]

================================

Block 0x1bf
[0x1bf:0x1d0]
---
Predecessors: []
Successors: []
---
0x1bf JUMPDEST
0x1c0 PUSH1 0x40
0x1c2 MLOAD
0x1c3 SWAP1
0x1c4 DUP2
0x1c5 MSTORE
0x1c6 PUSH1 0x20
0x1c8 ADD
0x1c9 PUSH1 0x40
0x1cb MLOAD
0x1cc DUP1
0x1cd SWAP2
0x1ce SUB
0x1cf SWAP1
0x1d0 RETURN
---
0x1bf: JUMPDEST 
0x1c0: V142 = 0x40
0x1c2: V143 = M[0x40]
0x1c5: M[V143] = S0
0x1c6: V144 = 0x20
0x1c8: V145 = ADD 0x20 V143
0x1c9: V146 = 0x40
0x1cb: V147 = M[0x40]
0x1ce: V148 = SUB V145 V147
0x1d0: RETURN V147 V148
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d1
[0x1d1:0x1d7]
---
Predecessors: [0x51]
Successors: [0x1d8, 0x1dc]
---
0x1d1 JUMPDEST
0x1d2 CALLVALUE
0x1d3 ISZERO
0x1d4 PUSH2 0x1dc
0x1d7 JUMPI
---
0x1d1: JUMPDEST 
0x1d2: V149 = CALLVALUE
0x1d3: V150 = ISZERO V149
0x1d4: V151 = 0x1dc
0x1d7: JUMPI 0x1dc V150
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d8
[0x1d8:0x1db]
---
Predecessors: [0x1d1]
Successors: []
---
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db REVERT
---
0x1d8: V152 = 0x0
0x1db: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1dc
[0x1dc:0x1e3]
---
Predecessors: [0x1d1]
Successors: [0x77d]
---
0x1dc JUMPDEST
0x1dd PUSH2 0x10c
0x1e0 PUSH2 0x77d
0x1e3 JUMP
---
0x1dc: JUMPDEST 
0x1dd: V153 = 0x10c
0x1e0: V154 = 0x77d
0x1e3: JUMP 0x77d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10c]
Exit stack: [V12, 0x10c]

================================

Block 0x1e4
[0x1e4:0x1e5]
---
Predecessors: []
Successors: []
---
0x1e4 JUMPDEST
0x1e5 STOP
---
0x1e4: JUMPDEST 
0x1e5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e6
[0x1e6:0x1ec]
---
Predecessors: [0x5c]
Successors: [0x1ed, 0x1f1]
---
0x1e6 JUMPDEST
0x1e7 CALLVALUE
0x1e8 ISZERO
0x1e9 PUSH2 0x1f1
0x1ec JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V155 = CALLVALUE
0x1e8: V156 = ISZERO V155
0x1e9: V157 = 0x1f1
0x1ec: JUMPI 0x1f1 V156
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ed
[0x1ed:0x1f0]
---
Predecessors: [0x1e6]
Successors: []
---
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 REVERT
---
0x1ed: V158 = 0x0
0x1f0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f1
[0x1f1:0x1f8]
---
Predecessors: [0x1e6]
Successors: [0x7a9]
---
0x1f1 JUMPDEST
0x1f2 PUSH2 0x121
0x1f5 PUSH2 0x7a9
0x1f8 JUMP
---
0x1f1: JUMPDEST 
0x1f2: V159 = 0x121
0x1f5: V160 = 0x7a9
0x1f8: JUMP 0x7a9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x121]
Exit stack: [V12, 0x121]

================================

Block 0x1f9
[0x1f9:0x214]
---
Predecessors: []
Successors: []
---
0x1f9 JUMPDEST
0x1fa PUSH1 0x40
0x1fc MLOAD
0x1fd PUSH1 0x1
0x1ff PUSH1 0xa0
0x201 PUSH1 0x2
0x203 EXP
0x204 SUB
0x205 SWAP1
0x206 SWAP2
0x207 AND
0x208 DUP2
0x209 MSTORE
0x20a PUSH1 0x20
0x20c ADD
0x20d PUSH1 0x40
0x20f MLOAD
0x210 DUP1
0x211 SWAP2
0x212 SUB
0x213 SWAP1
0x214 RETURN
---
0x1f9: JUMPDEST 
0x1fa: V161 = 0x40
0x1fc: V162 = M[0x40]
0x1fd: V163 = 0x1
0x1ff: V164 = 0xa0
0x201: V165 = 0x2
0x203: V166 = EXP 0x2 0xa0
0x204: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x207: V168 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x209: M[V162] = V168
0x20a: V169 = 0x20
0x20c: V170 = ADD 0x20 V162
0x20d: V171 = 0x40
0x20f: V172 = M[0x40]
0x212: V173 = SUB V170 V172
0x214: RETURN V172 V173
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x215
[0x215:0x21b]
---
Predecessors: [0x67]
Successors: [0x21c, 0x220]
---
0x215 JUMPDEST
0x216 CALLVALUE
0x217 ISZERO
0x218 PUSH2 0x220
0x21b JUMPI
---
0x215: JUMPDEST 
0x216: V174 = CALLVALUE
0x217: V175 = ISZERO V174
0x218: V176 = 0x220
0x21b: JUMPI 0x220 V175
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21c
[0x21c:0x21f]
---
Predecessors: [0x215]
Successors: []
---
0x21c PUSH1 0x0
0x21e DUP1
0x21f REVERT
---
0x21c: V177 = 0x0
0x21f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x220
[0x220:0x227]
---
Predecessors: [0x215]
Successors: [0x7b8]
---
0x220 JUMPDEST
0x221 PUSH2 0x228
0x224 PUSH2 0x7b8
0x227 JUMP
---
0x220: JUMPDEST 
0x221: V178 = 0x228
0x224: V179 = 0x7b8
0x227: JUMP 0x7b8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x228]
Exit stack: [V12, 0x228]

================================

Block 0x228
[0x228:0x23b]
---
Predecessors: [0x751, 0x90f, 0x9dc]
Successors: []
---
0x228 JUMPDEST
0x229 PUSH1 0x40
0x22b MLOAD
0x22c SWAP1
0x22d ISZERO
0x22e ISZERO
0x22f DUP2
0x230 MSTORE
0x231 PUSH1 0x20
0x233 ADD
0x234 PUSH1 0x40
0x236 MLOAD
0x237 DUP1
0x238 SWAP2
0x239 SUB
0x23a SWAP1
0x23b RETURN
---
0x228: JUMPDEST 
0x229: V180 = 0x40
0x22b: V181 = M[0x40]
0x22d: V182 = ISZERO S0
0x22e: V183 = ISZERO V182
0x230: M[V181] = V183
0x231: V184 = 0x20
0x233: V185 = ADD 0x20 V181
0x234: V186 = 0x40
0x236: V187 = M[0x40]
0x239: V188 = SUB V185 V187
0x23b: RETURN V187 V188
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x23c
[0x23c:0x242]
---
Predecessors: [0x72]
Successors: [0x243, 0x247]
---
0x23c JUMPDEST
0x23d CALLVALUE
0x23e ISZERO
0x23f PUSH2 0x247
0x242 JUMPI
---
0x23c: JUMPDEST 
0x23d: V189 = CALLVALUE
0x23e: V190 = ISZERO V189
0x23f: V191 = 0x247
0x242: JUMPI 0x247 V190
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x243
[0x243:0x246]
---
Predecessors: [0x23c]
Successors: []
---
0x243 PUSH1 0x0
0x245 DUP1
0x246 REVERT
---
0x243: V192 = 0x0
0x246: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x247
[0x247:0x24e]
---
Predecessors: [0x23c]
Successors: [0x914]
---
0x247 JUMPDEST
0x248 PUSH2 0x150
0x24b PUSH2 0x914
0x24e JUMP
---
0x247: JUMPDEST 
0x248: V193 = 0x150
0x24b: V194 = 0x914
0x24e: JUMP 0x914
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V12, 0x150]

================================

Block 0x24f
[0x24f:0x260]
---
Predecessors: []
Successors: []
---
0x24f JUMPDEST
0x250 PUSH1 0x40
0x252 MLOAD
0x253 SWAP1
0x254 DUP2
0x255 MSTORE
0x256 PUSH1 0x20
0x258 ADD
0x259 PUSH1 0x40
0x25b MLOAD
0x25c DUP1
0x25d SWAP2
0x25e SUB
0x25f SWAP1
0x260 RETURN
---
0x24f: JUMPDEST 
0x250: V195 = 0x40
0x252: V196 = M[0x40]
0x255: M[V196] = S0
0x256: V197 = 0x20
0x258: V198 = ADD 0x20 V196
0x259: V199 = 0x40
0x25b: V200 = M[0x40]
0x25e: V201 = SUB V198 V200
0x260: RETURN V200 V201
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x261
[0x261:0x267]
---
Predecessors: [0x7d]
Successors: [0x268, 0x26c]
---
0x261 JUMPDEST
0x262 CALLVALUE
0x263 ISZERO
0x264 PUSH2 0x26c
0x267 JUMPI
---
0x261: JUMPDEST 
0x262: V202 = CALLVALUE
0x263: V203 = ISZERO V202
0x264: V204 = 0x26c
0x267: JUMPI 0x26c V203
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x268
[0x268:0x26b]
---
Predecessors: [0x261]
Successors: []
---
0x268 PUSH1 0x0
0x26a DUP1
0x26b REVERT
---
0x268: V205 = 0x0
0x26b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26c
[0x26c:0x273]
---
Predecessors: [0x261]
Successors: [0x91a]
---
0x26c JUMPDEST
0x26d PUSH2 0x121
0x270 PUSH2 0x91a
0x273 JUMP
---
0x26c: JUMPDEST 
0x26d: V206 = 0x121
0x270: V207 = 0x91a
0x273: JUMP 0x91a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x121]
Exit stack: [V12, 0x121]

================================

Block 0x274
[0x274:0x28f]
---
Predecessors: []
Successors: []
---
0x274 JUMPDEST
0x275 PUSH1 0x40
0x277 MLOAD
0x278 PUSH1 0x1
0x27a PUSH1 0xa0
0x27c PUSH1 0x2
0x27e EXP
0x27f SUB
0x280 SWAP1
0x281 SWAP2
0x282 AND
0x283 DUP2
0x284 MSTORE
0x285 PUSH1 0x20
0x287 ADD
0x288 PUSH1 0x40
0x28a MLOAD
0x28b DUP1
0x28c SWAP2
0x28d SUB
0x28e SWAP1
0x28f RETURN
---
0x274: JUMPDEST 
0x275: V208 = 0x40
0x277: V209 = M[0x40]
0x278: V210 = 0x1
0x27a: V211 = 0xa0
0x27c: V212 = 0x2
0x27e: V213 = EXP 0x2 0xa0
0x27f: V214 = SUB 0x10000000000000000000000000000000000000000 0x1
0x282: V215 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x284: M[V209] = V215
0x285: V216 = 0x20
0x287: V217 = ADD 0x20 V209
0x288: V218 = 0x40
0x28a: V219 = M[0x40]
0x28d: V220 = SUB V217 V219
0x28f: RETURN V219 V220
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x290
[0x290:0x296]
---
Predecessors: [0x88]
Successors: [0x297, 0x29b]
---
0x290 JUMPDEST
0x291 CALLVALUE
0x292 ISZERO
0x293 PUSH2 0x29b
0x296 JUMPI
---
0x290: JUMPDEST 
0x291: V221 = CALLVALUE
0x292: V222 = ISZERO V221
0x293: V223 = 0x29b
0x296: JUMPI 0x29b V222
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x297
[0x297:0x29a]
---
Predecessors: [0x290]
Successors: []
---
0x297 PUSH1 0x0
0x299 DUP1
0x29a REVERT
---
0x297: V224 = 0x0
0x29a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29b
[0x29b:0x2a2]
---
Predecessors: [0x290]
Successors: [0x929]
---
0x29b JUMPDEST
0x29c PUSH2 0x150
0x29f PUSH2 0x929
0x2a2 JUMP
---
0x29b: JUMPDEST 
0x29c: V225 = 0x150
0x29f: V226 = 0x929
0x2a2: JUMP 0x929
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V12, 0x150]

================================

Block 0x2a3
[0x2a3:0x2b4]
---
Predecessors: []
Successors: []
---
0x2a3 JUMPDEST
0x2a4 PUSH1 0x40
0x2a6 MLOAD
0x2a7 SWAP1
0x2a8 DUP2
0x2a9 MSTORE
0x2aa PUSH1 0x20
0x2ac ADD
0x2ad PUSH1 0x40
0x2af MLOAD
0x2b0 DUP1
0x2b1 SWAP2
0x2b2 SUB
0x2b3 SWAP1
0x2b4 RETURN
---
0x2a3: JUMPDEST 
0x2a4: V227 = 0x40
0x2a6: V228 = M[0x40]
0x2a9: M[V228] = S0
0x2aa: V229 = 0x20
0x2ac: V230 = ADD 0x20 V228
0x2ad: V231 = 0x40
0x2af: V232 = M[0x40]
0x2b2: V233 = SUB V230 V232
0x2b4: RETURN V232 V233
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b5
[0x2b5:0x2bb]
---
Predecessors: [0x93]
Successors: [0x2bc, 0x2c0]
---
0x2b5 JUMPDEST
0x2b6 CALLVALUE
0x2b7 ISZERO
0x2b8 PUSH2 0x2c0
0x2bb JUMPI
---
0x2b5: JUMPDEST 
0x2b6: V234 = CALLVALUE
0x2b7: V235 = ISZERO V234
0x2b8: V236 = 0x2c0
0x2bb: JUMPI 0x2c0 V235
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bc
[0x2bc:0x2bf]
---
Predecessors: [0x2b5]
Successors: []
---
0x2bc PUSH1 0x0
0x2be DUP1
0x2bf REVERT
---
0x2bc: V237 = 0x0
0x2bf: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c0
[0x2c0:0x2c7]
---
Predecessors: [0x2b5]
Successors: [0x92f]
---
0x2c0 JUMPDEST
0x2c1 PUSH2 0x121
0x2c4 PUSH2 0x92f
0x2c7 JUMP
---
0x2c0: JUMPDEST 
0x2c1: V238 = 0x121
0x2c4: V239 = 0x92f
0x2c7: JUMP 0x92f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x121]
Exit stack: [V12, 0x121]

================================

Block 0x2c8
[0x2c8:0x2e3]
---
Predecessors: []
Successors: []
---
0x2c8 JUMPDEST
0x2c9 PUSH1 0x40
0x2cb MLOAD
0x2cc PUSH1 0x1
0x2ce PUSH1 0xa0
0x2d0 PUSH1 0x2
0x2d2 EXP
0x2d3 SUB
0x2d4 SWAP1
0x2d5 SWAP2
0x2d6 AND
0x2d7 DUP2
0x2d8 MSTORE
0x2d9 PUSH1 0x20
0x2db ADD
0x2dc PUSH1 0x40
0x2de MLOAD
0x2df DUP1
0x2e0 SWAP2
0x2e1 SUB
0x2e2 SWAP1
0x2e3 RETURN
---
0x2c8: JUMPDEST 
0x2c9: V240 = 0x40
0x2cb: V241 = M[0x40]
0x2cc: V242 = 0x1
0x2ce: V243 = 0xa0
0x2d0: V244 = 0x2
0x2d2: V245 = EXP 0x2 0xa0
0x2d3: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d6: V247 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2d8: M[V241] = V247
0x2d9: V248 = 0x20
0x2db: V249 = ADD 0x20 V241
0x2dc: V250 = 0x40
0x2de: V251 = M[0x40]
0x2e1: V252 = SUB V249 V251
0x2e3: RETURN V251 V252
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e4
[0x2e4:0x2ea]
---
Predecessors: [0x9e]
Successors: [0x2eb, 0x2ef]
---
0x2e4 JUMPDEST
0x2e5 CALLVALUE
0x2e6 ISZERO
0x2e7 PUSH2 0x2ef
0x2ea JUMPI
---
0x2e4: JUMPDEST 
0x2e5: V253 = CALLVALUE
0x2e6: V254 = ISZERO V253
0x2e7: V255 = 0x2ef
0x2ea: JUMPI 0x2ef V254
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2eb
[0x2eb:0x2ee]
---
Predecessors: [0x2e4]
Successors: []
---
0x2eb PUSH1 0x0
0x2ed DUP1
0x2ee REVERT
---
0x2eb: V256 = 0x0
0x2ee: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ef
[0x2ef:0x2f6]
---
Predecessors: [0x2e4]
Successors: [0x93e]
---
0x2ef JUMPDEST
0x2f0 PUSH2 0x2f7
0x2f3 PUSH2 0x93e
0x2f6 JUMP
---
0x2ef: JUMPDEST 
0x2f0: V257 = 0x2f7
0x2f3: V258 = 0x93e
0x2f6: JUMP 0x93e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2f7]
Exit stack: [V12, 0x2f7]

================================

Block 0x2f7
[0x2f7:0x31a]
---
Predecessors: [0x9d4]
Successors: [0x31b]
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0x40
0x2fa MLOAD
0x2fb PUSH1 0x20
0x2fd DUP1
0x2fe DUP3
0x2ff MSTORE
0x300 DUP2
0x301 SWAP1
0x302 DUP2
0x303 ADD
0x304 DUP4
0x305 DUP2
0x306 DUP2
0x307 MLOAD
0x308 DUP2
0x309 MSTORE
0x30a PUSH1 0x20
0x30c ADD
0x30d SWAP2
0x30e POP
0x30f DUP1
0x310 MLOAD
0x311 SWAP1
0x312 PUSH1 0x20
0x314 ADD
0x315 SWAP1
0x316 DUP1
0x317 DUP4
0x318 DUP4
0x319 PUSH1 0x0
---
0x2f7: JUMPDEST 
0x2f8: V259 = 0x40
0x2fa: V260 = M[0x40]
0x2fb: V261 = 0x20
0x2ff: M[V260] = 0x20
0x303: V262 = ADD V260 0x20
0x307: V263 = M[V916]
0x309: M[V262] = V263
0x30a: V264 = 0x20
0x30c: V265 = ADD 0x20 V262
0x310: V266 = M[V916]
0x312: V267 = 0x20
0x314: V268 = ADD 0x20 V916
0x319: V269 = 0x0
---
Entry stack: [V12, 0x2f7, V916]
Stack pops: 1
Stack additions: [S0, V260, V260, V265, V268, V266, V266, V265, V268, 0x0]
Exit stack: [V12, 0x2f7, V916, V260, V260, V265, V268, V266, V266, V265, V268, 0x0]

================================

Block 0x31b
[0x31b:0x323]
---
Predecessors: [0x2f7, 0x32c]
Successors: [0x324, 0x334]
---
0x31b JUMPDEST
0x31c DUP4
0x31d DUP2
0x31e LT
0x31f ISZERO
0x320 PUSH2 0x334
0x323 JUMPI
---
0x31b: JUMPDEST 
0x31e: V270 = LT S0 V266
0x31f: V271 = ISZERO V270
0x320: V272 = 0x334
0x323: JUMPI 0x334 V271
---
Entry stack: [V12, 0x2f7, V916, V260, V260, V265, V268, V266, V266, V265, V268, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x2f7, V916, V260, V260, V265, V268, V266, V266, V265, V268, S0]

================================

Block 0x324
[0x324:0x32b]
---
Predecessors: [0x31b]
Successors: [0x32c]
---
0x324 DUP1
0x325 DUP3
0x326 ADD
0x327 MLOAD
0x328 DUP2
0x329 DUP5
0x32a ADD
0x32b MSTORE
---
0x326: V273 = ADD V268 S0
0x327: V274 = M[V273]
0x32a: V275 = ADD V265 S0
0x32b: M[V275] = V274
---
Entry stack: [V12, 0x2f7, V916, V260, V260, V265, V268, V266, V266, V265, V268, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x2f7, V916, V260, V260, V265, V268, V266, V266, V265, V268, S0]

================================

Block 0x32c
[0x32c:0x333]
---
Predecessors: [0x324]
Successors: [0x31b]
---
0x32c JUMPDEST
0x32d PUSH1 0x20
0x32f ADD
0x330 PUSH2 0x31b
0x333 JUMP
---
0x32c: JUMPDEST 
0x32d: V276 = 0x20
0x32f: V277 = ADD 0x20 S0
0x330: V278 = 0x31b
0x333: JUMP 0x31b
---
Entry stack: [V12, 0x2f7, V916, V260, V260, V265, V268, V266, V266, V265, V268, S0]
Stack pops: 1
Stack additions: [V277]
Exit stack: [V12, 0x2f7, V916, V260, V260, V265, V268, V266, V266, V265, V268, V277]

================================

Block 0x334
[0x334:0x347]
---
Predecessors: [0x31b]
Successors: [0x348, 0x361]
---
0x334 JUMPDEST
0x335 POP
0x336 POP
0x337 POP
0x338 POP
0x339 SWAP1
0x33a POP
0x33b SWAP1
0x33c DUP2
0x33d ADD
0x33e SWAP1
0x33f PUSH1 0x1f
0x341 AND
0x342 DUP1
0x343 ISZERO
0x344 PUSH2 0x361
0x347 JUMPI
---
0x334: JUMPDEST 
0x33d: V279 = ADD V266 V265
0x33f: V280 = 0x1f
0x341: V281 = AND 0x1f V266
0x343: V282 = ISZERO V281
0x344: V283 = 0x361
0x347: JUMPI 0x361 V282
---
Entry stack: [V12, 0x2f7, V916, V260, V260, V265, V268, V266, V266, V265, V268, S0]
Stack pops: 7
Stack additions: [V279, V281]
Exit stack: [V12, 0x2f7, V916, V260, V260, V279, V281]

================================

Block 0x348
[0x348:0x360]
---
Predecessors: [0x334]
Successors: [0x361]
---
0x348 DUP1
0x349 DUP3
0x34a SUB
0x34b DUP1
0x34c MLOAD
0x34d PUSH1 0x1
0x34f DUP4
0x350 PUSH1 0x20
0x352 SUB
0x353 PUSH2 0x100
0x356 EXP
0x357 SUB
0x358 NOT
0x359 AND
0x35a DUP2
0x35b MSTORE
0x35c PUSH1 0x20
0x35e ADD
0x35f SWAP2
0x360 POP
---
0x34a: V284 = SUB V279 V281
0x34c: V285 = M[V284]
0x34d: V286 = 0x1
0x350: V287 = 0x20
0x352: V288 = SUB 0x20 V281
0x353: V289 = 0x100
0x356: V290 = EXP 0x100 V288
0x357: V291 = SUB V290 0x1
0x358: V292 = NOT V291
0x359: V293 = AND V292 V285
0x35b: M[V284] = V293
0x35c: V294 = 0x20
0x35e: V295 = ADD 0x20 V284
---
Entry stack: [V12, 0x2f7, V916, V260, V260, V279, V281]
Stack pops: 2
Stack additions: [V295, S0]
Exit stack: [V12, 0x2f7, V916, V260, V260, V295, V281]

================================

Block 0x361
[0x361:0x36e]
---
Predecessors: [0x334, 0x348]
Successors: []
---
0x361 JUMPDEST
0x362 POP
0x363 SWAP3
0x364 POP
0x365 POP
0x366 POP
0x367 PUSH1 0x40
0x369 MLOAD
0x36a DUP1
0x36b SWAP2
0x36c SUB
0x36d SWAP1
0x36e RETURN
---
0x361: JUMPDEST 
0x367: V296 = 0x40
0x369: V297 = M[0x40]
0x36c: V298 = SUB S1 V297
0x36e: RETURN V297 V298
---
Entry stack: [V12, 0x2f7, V916, V260, V260, S1, V281]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x2f7]

================================

Block 0x36f
[0x36f:0x375]
---
Predecessors: [0xa9]
Successors: [0x376, 0x37a]
---
0x36f JUMPDEST
0x370 CALLVALUE
0x371 ISZERO
0x372 PUSH2 0x37a
0x375 JUMPI
---
0x36f: JUMPDEST 
0x370: V299 = CALLVALUE
0x371: V300 = ISZERO V299
0x372: V301 = 0x37a
0x375: JUMPI 0x37a V300
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x376
[0x376:0x379]
---
Predecessors: [0x36f]
Successors: []
---
0x376 PUSH1 0x0
0x378 DUP1
0x379 REVERT
---
0x376: V302 = 0x0
0x379: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37a
[0x37a:0x381]
---
Predecessors: [0x36f]
Successors: [0x9dc]
---
0x37a JUMPDEST
0x37b PUSH2 0x228
0x37e PUSH2 0x9dc
0x381 JUMP
---
0x37a: JUMPDEST 
0x37b: V303 = 0x228
0x37e: V304 = 0x9dc
0x381: JUMP 0x9dc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x228]
Exit stack: [V12, 0x228]

================================

Block 0x382
[0x382:0x395]
---
Predecessors: []
Successors: []
---
0x382 JUMPDEST
0x383 PUSH1 0x40
0x385 MLOAD
0x386 SWAP1
0x387 ISZERO
0x388 ISZERO
0x389 DUP2
0x38a MSTORE
0x38b PUSH1 0x20
0x38d ADD
0x38e PUSH1 0x40
0x390 MLOAD
0x391 DUP1
0x392 SWAP2
0x393 SUB
0x394 SWAP1
0x395 RETURN
---
0x382: JUMPDEST 
0x383: V305 = 0x40
0x385: V306 = M[0x40]
0x387: V307 = ISZERO S0
0x388: V308 = ISZERO V307
0x38a: M[V306] = V308
0x38b: V309 = 0x20
0x38d: V310 = ADD 0x20 V306
0x38e: V311 = 0x40
0x390: V312 = M[0x40]
0x393: V313 = SUB V310 V312
0x395: RETURN V312 V313
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x396
[0x396:0x39c]
---
Predecessors: [0xb4]
Successors: [0x39d, 0x3a1]
---
0x396 JUMPDEST
0x397 CALLVALUE
0x398 ISZERO
0x399 PUSH2 0x3a1
0x39c JUMPI
---
0x396: JUMPDEST 
0x397: V314 = CALLVALUE
0x398: V315 = ISZERO V314
0x399: V316 = 0x3a1
0x39c: JUMPI 0x3a1 V315
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39d
[0x39d:0x3a0]
---
Predecessors: [0x396]
Successors: []
---
0x39d PUSH1 0x0
0x39f DUP1
0x3a0 REVERT
---
0x39d: V317 = 0x0
0x3a0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a1
[0x3a1:0x3a8]
---
Predecessors: [0x396]
Successors: [0x9e5]
---
0x3a1 JUMPDEST
0x3a2 PUSH2 0x150
0x3a5 PUSH2 0x9e5
0x3a8 JUMP
---
0x3a1: JUMPDEST 
0x3a2: V318 = 0x150
0x3a5: V319 = 0x9e5
0x3a8: JUMP 0x9e5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x150]
Exit stack: [V12, 0x150]

================================

Block 0x3a9
[0x3a9:0x3ba]
---
Predecessors: []
Successors: []
---
0x3a9 JUMPDEST
0x3aa PUSH1 0x40
0x3ac MLOAD
0x3ad SWAP1
0x3ae DUP2
0x3af MSTORE
0x3b0 PUSH1 0x20
0x3b2 ADD
0x3b3 PUSH1 0x40
0x3b5 MLOAD
0x3b6 DUP1
0x3b7 SWAP2
0x3b8 SUB
0x3b9 SWAP1
0x3ba RETURN
---
0x3a9: JUMPDEST 
0x3aa: V320 = 0x40
0x3ac: V321 = M[0x40]
0x3af: M[V321] = S0
0x3b0: V322 = 0x20
0x3b2: V323 = ADD 0x20 V321
0x3b3: V324 = 0x40
0x3b5: V325 = M[0x40]
0x3b8: V326 = SUB V323 V325
0x3ba: RETURN V325 V326
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3bb
[0x3bb:0x3c2]
---
Predecessors: [0xbf]
Successors: [0x483]
---
0x3bb JUMPDEST
0x3bc PUSH2 0x228
0x3bf PUSH2 0x483
0x3c2 JUMP
---
0x3bb: JUMPDEST 
0x3bc: V327 = 0x228
0x3bf: V328 = 0x483
0x3c2: JUMP 0x483
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x228]
Exit stack: [V12, 0x228]

================================

Block 0x3c3
[0x3c3:0x3d6]
---
Predecessors: []
Successors: []
---
0x3c3 JUMPDEST
0x3c4 PUSH1 0x40
0x3c6 MLOAD
0x3c7 SWAP1
0x3c8 ISZERO
0x3c9 ISZERO
0x3ca DUP2
0x3cb MSTORE
0x3cc PUSH1 0x20
0x3ce ADD
0x3cf PUSH1 0x40
0x3d1 MLOAD
0x3d2 DUP1
0x3d3 SWAP2
0x3d4 SUB
0x3d5 SWAP1
0x3d6 RETURN
---
0x3c3: JUMPDEST 
0x3c4: V329 = 0x40
0x3c6: V330 = M[0x40]
0x3c8: V331 = ISZERO S0
0x3c9: V332 = ISZERO V331
0x3cb: M[V330] = V332
0x3cc: V333 = 0x20
0x3ce: V334 = ADD 0x20 V330
0x3cf: V335 = 0x40
0x3d1: V336 = M[0x40]
0x3d4: V337 = SUB V334 V336
0x3d6: RETURN V336 V337
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3d7
[0x3d7:0x3dd]
---
Predecessors: [0xca]
Successors: [0x3de, 0x3e2]
---
0x3d7 JUMPDEST
0x3d8 CALLVALUE
0x3d9 ISZERO
0x3da PUSH2 0x3e2
0x3dd JUMPI
---
0x3d7: JUMPDEST 
0x3d8: V338 = CALLVALUE
0x3d9: V339 = ISZERO V338
0x3da: V340 = 0x3e2
0x3dd: JUMPI 0x3e2 V339
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3de
[0x3de:0x3e1]
---
Predecessors: [0x3d7]
Successors: []
---
0x3de PUSH1 0x0
0x3e0 DUP1
0x3e1 REVERT
---
0x3de: V341 = 0x0
0x3e1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e2
[0x3e2:0x3f5]
---
Predecessors: [0x3d7]
Successors: [0x9eb]
---
0x3e2 JUMPDEST
0x3e3 PUSH2 0x10c
0x3e6 PUSH1 0x1
0x3e8 PUSH1 0xa0
0x3ea PUSH1 0x2
0x3ec EXP
0x3ed SUB
0x3ee PUSH1 0x4
0x3f0 CALLDATALOAD
0x3f1 AND
0x3f2 PUSH2 0x9eb
0x3f5 JUMP
---
0x3e2: JUMPDEST 
0x3e3: V342 = 0x10c
0x3e6: V343 = 0x1
0x3e8: V344 = 0xa0
0x3ea: V345 = 0x2
0x3ec: V346 = EXP 0x2 0xa0
0x3ed: V347 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ee: V348 = 0x4
0x3f0: V349 = CALLDATALOAD 0x4
0x3f1: V350 = AND V349 0xffffffffffffffffffffffffffffffffffffffff
0x3f2: V351 = 0x9eb
0x3f5: JUMP 0x9eb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10c, V350]
Exit stack: [V12, 0x10c, V350]

================================

Block 0x3f6
[0x3f6:0x3f7]
---
Predecessors: []
Successors: []
---
0x3f6 JUMPDEST
0x3f7 STOP
---
0x3f6: JUMPDEST 
0x3f7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3f8
[0x3f8:0x3fe]
---
Predecessors: [0xd5]
Successors: [0x3ff, 0x403]
---
0x3f8 JUMPDEST
0x3f9 CALLVALUE
0x3fa ISZERO
0x3fb PUSH2 0x403
0x3fe JUMPI
---
0x3f8: JUMPDEST 
0x3f9: V352 = CALLVALUE
0x3fa: V353 = ISZERO V352
0x3fb: V354 = 0x403
0x3fe: JUMPI 0x403 V353
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ff
[0x3ff:0x402]
---
Predecessors: [0x3f8]
Successors: []
---
0x3ff PUSH1 0x0
0x401 DUP1
0x402 REVERT
---
0x3ff: V355 = 0x0
0x402: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x403
[0x403:0x40d]
---
Predecessors: [0x3f8]
Successors: [0xa33]
---
0x403 JUMPDEST
0x404 PUSH2 0x10c
0x407 PUSH1 0x4
0x409 CALLDATALOAD
0x40a PUSH2 0xa33
0x40d JUMP
---
0x403: JUMPDEST 
0x404: V356 = 0x10c
0x407: V357 = 0x4
0x409: V358 = CALLDATALOAD 0x4
0x40a: V359 = 0xa33
0x40d: JUMP 0xa33
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10c, V358]
Exit stack: [V12, 0x10c, V358]

================================

Block 0x40e
[0x40e:0x40f]
---
Predecessors: []
Successors: []
---
0x40e JUMPDEST
0x40f STOP
---
0x40e: JUMPDEST 
0x40f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x410
[0x410:0x416]
---
Predecessors: [0xe0]
Successors: [0x417, 0x41b]
---
0x410 JUMPDEST
0x411 CALLVALUE
0x412 ISZERO
0x413 PUSH2 0x41b
0x416 JUMPI
---
0x410: JUMPDEST 
0x411: V360 = CALLVALUE
0x412: V361 = ISZERO V360
0x413: V362 = 0x41b
0x416: JUMPI 0x41b V361
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x417
[0x417:0x41a]
---
Predecessors: [0x410]
Successors: []
---
0x417 PUSH1 0x0
0x419 DUP1
0x41a REVERT
---
0x417: V363 = 0x0
0x41a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x41b
[0x41b:0x422]
---
Predecessors: [0x410]
Successors: [0xa58]
---
0x41b JUMPDEST
0x41c PUSH2 0x121
0x41f PUSH2 0xa58
0x422 JUMP
---
0x41b: JUMPDEST 
0x41c: V364 = 0x121
0x41f: V365 = 0xa58
0x422: JUMP 0xa58
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x121]
Exit stack: [V12, 0x121]

================================

Block 0x423
[0x423:0x43e]
---
Predecessors: []
Successors: []
---
0x423 JUMPDEST
0x424 PUSH1 0x40
0x426 MLOAD
0x427 PUSH1 0x1
0x429 PUSH1 0xa0
0x42b PUSH1 0x2
0x42d EXP
0x42e SUB
0x42f SWAP1
0x430 SWAP2
0x431 AND
0x432 DUP2
0x433 MSTORE
0x434 PUSH1 0x20
0x436 ADD
0x437 PUSH1 0x40
0x439 MLOAD
0x43a DUP1
0x43b SWAP2
0x43c SUB
0x43d SWAP1
0x43e RETURN
---
0x423: JUMPDEST 
0x424: V366 = 0x40
0x426: V367 = M[0x40]
0x427: V368 = 0x1
0x429: V369 = 0xa0
0x42b: V370 = 0x2
0x42d: V371 = EXP 0x2 0xa0
0x42e: V372 = SUB 0x10000000000000000000000000000000000000000 0x1
0x431: V373 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x433: M[V367] = V373
0x434: V374 = 0x20
0x436: V375 = ADD 0x20 V367
0x437: V376 = 0x40
0x439: V377 = M[0x40]
0x43c: V378 = SUB V375 V377
0x43e: RETURN V377 V378
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x43f
[0x43f:0x445]
---
Predecessors: [0xeb]
Successors: [0x446, 0x44a]
---
0x43f JUMPDEST
0x440 CALLVALUE
0x441 ISZERO
0x442 PUSH2 0x44a
0x445 JUMPI
---
0x43f: JUMPDEST 
0x440: V379 = CALLVALUE
0x441: V380 = ISZERO V379
0x442: V381 = 0x44a
0x445: JUMPI 0x44a V380
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x446
[0x446:0x449]
---
Predecessors: [0x43f]
Successors: []
---
0x446 PUSH1 0x0
0x448 DUP1
0x449 REVERT
---
0x446: V382 = 0x0
0x449: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x44a
[0x44a:0x451]
---
Predecessors: [0x43f]
Successors: [0xa67]
---
0x44a JUMPDEST
0x44b PUSH2 0x121
0x44e PUSH2 0xa67
0x451 JUMP
---
0x44a: JUMPDEST 
0x44b: V383 = 0x121
0x44e: V384 = 0xa67
0x451: JUMP 0xa67
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x121]
Exit stack: [V12, 0x121]

================================

Block 0x452
[0x452:0x46d]
---
Predecessors: []
Successors: []
---
0x452 JUMPDEST
0x453 PUSH1 0x40
0x455 MLOAD
0x456 PUSH1 0x1
0x458 PUSH1 0xa0
0x45a PUSH1 0x2
0x45c EXP
0x45d SUB
0x45e SWAP1
0x45f SWAP2
0x460 AND
0x461 DUP2
0x462 MSTORE
0x463 PUSH1 0x20
0x465 ADD
0x466 PUSH1 0x40
0x468 MLOAD
0x469 DUP1
0x46a SWAP2
0x46b SUB
0x46c SWAP1
0x46d RETURN
---
0x452: JUMPDEST 
0x453: V385 = 0x40
0x455: V386 = M[0x40]
0x456: V387 = 0x1
0x458: V388 = 0xa0
0x45a: V389 = 0x2
0x45c: V390 = EXP 0x2 0xa0
0x45d: V391 = SUB 0x10000000000000000000000000000000000000000 0x1
0x460: V392 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x462: M[V386] = V392
0x463: V393 = 0x20
0x465: V394 = ADD 0x20 V386
0x466: V395 = 0x40
0x468: V396 = M[0x40]
0x46b: V397 = SUB V394 V396
0x46d: RETURN V396 V397
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x46e
[0x46e:0x474]
---
Predecessors: [0xf6]
Successors: [0x475, 0x479]
---
0x46e JUMPDEST
0x46f CALLVALUE
0x470 ISZERO
0x471 PUSH2 0x479
0x474 JUMPI
---
0x46e: JUMPDEST 
0x46f: V398 = CALLVALUE
0x470: V399 = ISZERO V398
0x471: V400 = 0x479
0x474: JUMPI 0x479 V399
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x475
[0x475:0x478]
---
Predecessors: [0x46e]
Successors: []
---
0x475 PUSH1 0x0
0x477 DUP1
0x478 REVERT
---
0x475: V401 = 0x0
0x478: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x479
[0x479:0x480]
---
Predecessors: [0x46e]
Successors: [0xa76]
---
0x479 JUMPDEST
0x47a PUSH2 0x10c
0x47d PUSH2 0xa76
0x480 JUMP
---
0x479: JUMPDEST 
0x47a: V402 = 0x10c
0x47d: V403 = 0xa76
0x480: JUMP 0xa76
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10c]
Exit stack: [V12, 0x10c]

================================

Block 0x481
[0x481:0x482]
---
Predecessors: []
Successors: []
---
0x481 JUMPDEST
0x482 STOP
---
0x481: JUMPDEST 
0x482: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x483
[0x483:0x48f]
---
Predecessors: [0x102, 0x3bb]
Successors: [0x490, 0x494]
---
0x483 JUMPDEST
0x484 PUSH1 0x0
0x486 DUP1
0x487 DUP1
0x488 CALLVALUE
0x489 DUP2
0x48a SWAP1
0x48b GT
0x48c PUSH2 0x494
0x48f JUMPI
---
0x483: JUMPDEST 
0x484: V404 = 0x0
0x488: V405 = CALLVALUE
0x48b: V406 = GT V405 0x0
0x48c: V407 = 0x494
0x48f: JUMPI 0x494 V406
---
Entry stack: [V12, {0x10a, 0x228}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0]

================================

Block 0x490
[0x490:0x493]
---
Predecessors: [0x483]
Successors: []
---
0x490 PUSH1 0x0
0x492 DUP1
0x493 REVERT
---
0x490: V408 = 0x0
0x493: REVERT 0x0 0x0
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0]

================================

Block 0x494
[0x494:0x4a0]
---
Predecessors: [0x483]
Successors: [0x4a1, 0x4a8]
---
0x494 JUMPDEST
0x495 PUSH1 0x7
0x497 SLOAD
0x498 TIMESTAMP
0x499 LT
0x49a ISZERO
0x49b DUP1
0x49c ISZERO
0x49d PUSH2 0x4a8
0x4a0 JUMPI
---
0x494: JUMPDEST 
0x495: V409 = 0x7
0x497: V410 = S[0x7]
0x498: V411 = TIMESTAMP
0x499: V412 = LT V411 V410
0x49a: V413 = ISZERO V412
0x49c: V414 = ISZERO V413
0x49d: V415 = 0x4a8
0x4a0: JUMPI 0x4a8 V414
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V413]
Exit stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0, V413]

================================

Block 0x4a1
[0x4a1:0x4a7]
---
Predecessors: [0x494]
Successors: [0x4a8]
---
0x4a1 POP
0x4a2 PUSH1 0x8
0x4a4 SLOAD
0x4a5 TIMESTAMP
0x4a6 GT
0x4a7 ISZERO
---
0x4a2: V416 = 0x8
0x4a4: V417 = S[0x8]
0x4a5: V418 = TIMESTAMP
0x4a6: V419 = GT V418 V417
0x4a7: V420 = ISZERO V419
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0, V413]
Stack pops: 1
Stack additions: [V420]
Exit stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0, V420]

================================

Block 0x4a8
[0x4a8:0x4ae]
---
Predecessors: [0x494, 0x4a1]
Successors: [0x4af, 0x4b3]
---
0x4a8 JUMPDEST
0x4a9 ISZERO
0x4aa ISZERO
0x4ab PUSH2 0x4b3
0x4ae JUMPI
---
0x4a8: JUMPDEST 
0x4a9: V421 = ISZERO S0
0x4aa: V422 = ISZERO V421
0x4ab: V423 = 0x4b3
0x4ae: JUMPI 0x4b3 V422
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0]

================================

Block 0x4af
[0x4af:0x4b2]
---
Predecessors: [0x4a8]
Successors: []
---
0x4af PUSH1 0x0
0x4b1 DUP1
0x4b2 REVERT
---
0x4af: V424 = 0x0
0x4b2: REVERT 0x0 0x0
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0]

================================

Block 0x4b3
[0x4b3:0x500]
---
Predecessors: [0x4a8]
Successors: [0x501, 0x505]
---
0x4b3 JUMPDEST
0x4b4 PUSH1 0xe
0x4b6 SLOAD
0x4b7 PUSH8 0xde0b6b3a7640000
0x4c0 SWAP1
0x4c1 PUSH1 0x1
0x4c3 PUSH1 0xa0
0x4c5 PUSH1 0x2
0x4c7 EXP
0x4c8 SUB
0x4c9 AND
0x4ca PUSH4 0x98d5fdca
0x4cf PUSH1 0x0
0x4d1 PUSH1 0x40
0x4d3 MLOAD
0x4d4 PUSH1 0x20
0x4d6 ADD
0x4d7 MSTORE
0x4d8 PUSH1 0x40
0x4da MLOAD
0x4db DUP2
0x4dc PUSH4 0xffffffff
0x4e1 AND
0x4e2 PUSH1 0xe0
0x4e4 PUSH1 0x2
0x4e6 EXP
0x4e7 MUL
0x4e8 DUP2
0x4e9 MSTORE
0x4ea PUSH1 0x4
0x4ec ADD
0x4ed PUSH1 0x20
0x4ef PUSH1 0x40
0x4f1 MLOAD
0x4f2 DUP1
0x4f3 DUP4
0x4f4 SUB
0x4f5 DUP2
0x4f6 PUSH1 0x0
0x4f8 DUP8
0x4f9 DUP1
0x4fa EXTCODESIZE
0x4fb ISZERO
0x4fc ISZERO
0x4fd PUSH2 0x505
0x500 JUMPI
---
0x4b3: JUMPDEST 
0x4b4: V425 = 0xe
0x4b6: V426 = S[0xe]
0x4b7: V427 = 0xde0b6b3a7640000
0x4c1: V428 = 0x1
0x4c3: V429 = 0xa0
0x4c5: V430 = 0x2
0x4c7: V431 = EXP 0x2 0xa0
0x4c8: V432 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c9: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x4ca: V434 = 0x98d5fdca
0x4cf: V435 = 0x0
0x4d1: V436 = 0x40
0x4d3: V437 = M[0x40]
0x4d4: V438 = 0x20
0x4d6: V439 = ADD 0x20 V437
0x4d7: M[V439] = 0x0
0x4d8: V440 = 0x40
0x4da: V441 = M[0x40]
0x4dc: V442 = 0xffffffff
0x4e1: V443 = AND 0xffffffff 0x98d5fdca
0x4e2: V444 = 0xe0
0x4e4: V445 = 0x2
0x4e6: V446 = EXP 0x2 0xe0
0x4e7: V447 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x98d5fdca
0x4e9: M[V441] = 0x98d5fdca00000000000000000000000000000000000000000000000000000000
0x4ea: V448 = 0x4
0x4ec: V449 = ADD 0x4 V441
0x4ed: V450 = 0x20
0x4ef: V451 = 0x40
0x4f1: V452 = M[0x40]
0x4f4: V453 = SUB V449 V452
0x4f6: V454 = 0x0
0x4fa: V455 = EXTCODESIZE V433
0x4fb: V456 = ISZERO V455
0x4fc: V457 = ISZERO V456
0x4fd: V458 = 0x505
0x500: JUMPI 0x505 V457
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xde0b6b3a7640000, V433, 0x98d5fdca, V449, 0x20, V452, V453, V452, 0x0, V433]
Exit stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V433, 0x98d5fdca, V449, 0x20, V452, V453, V452, 0x0, V433]

================================

Block 0x501
[0x501:0x504]
---
Predecessors: [0x4b3]
Successors: []
---
0x501 PUSH1 0x0
0x503 DUP1
0x504 REVERT
---
0x501: V459 = 0x0
0x504: REVERT 0x0 0x0
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V433, 0x98d5fdca, V449, 0x20, V452, V453, V452, 0x0, V433]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V433, 0x98d5fdca, V449, 0x20, V452, V453, V452, 0x0, V433]

================================

Block 0x505
[0x505:0x511]
---
Predecessors: [0x4b3]
Successors: [0x512, 0x516]
---
0x505 JUMPDEST
0x506 PUSH2 0x2c6
0x509 GAS
0x50a SUB
0x50b CALL
0x50c ISZERO
0x50d ISZERO
0x50e PUSH2 0x516
0x511 JUMPI
---
0x505: JUMPDEST 
0x506: V460 = 0x2c6
0x509: V461 = GAS
0x50a: V462 = SUB V461 0x2c6
0x50b: V463 = CALL V462 V433 0x0 V452 V453 V452 0x20
0x50c: V464 = ISZERO V463
0x50d: V465 = ISZERO V464
0x50e: V466 = 0x516
0x511: JUMPI 0x516 V465
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V433, 0x98d5fdca, V449, 0x20, V452, V453, V452, 0x0, V433]
Stack pops: 6
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V433, 0x98d5fdca, V449]

================================

Block 0x512
[0x512:0x515]
---
Predecessors: [0x505]
Successors: []
---
0x512 PUSH1 0x0
0x514 DUP1
0x515 REVERT
---
0x512: V467 = 0x0
0x515: REVERT 0x0 0x0
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V433, 0x98d5fdca, V449]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V433, 0x98d5fdca, V449]

================================

Block 0x516
[0x516:0x527]
---
Predecessors: [0x505]
Successors: [0x528, 0x529]
---
0x516 JUMPDEST
0x517 POP
0x518 POP
0x519 POP
0x51a PUSH1 0x40
0x51c MLOAD
0x51d DUP1
0x51e MLOAD
0x51f SWAP1
0x520 POP
0x521 DUP2
0x522 ISZERO
0x523 ISZERO
0x524 PUSH2 0x529
0x527 JUMPI
---
0x516: JUMPDEST 
0x51a: V468 = 0x40
0x51c: V469 = M[0x40]
0x51e: V470 = M[V469]
0x522: V471 = ISZERO 0xde0b6b3a7640000
0x523: V472 = ISZERO 0x0
0x524: V473 = 0x529
0x527: JUMPI 0x529 0x1
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V433, 0x98d5fdca, V449]
Stack pops: 4
Stack additions: [S3, V470]
Exit stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V470]

================================

Block 0x528
[0x528:0x528]
---
Predecessors: [0x516]
Successors: []
---
0x528 INVALID
---
0x528: INVALID 
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V470]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V470]

================================

Block 0x529
[0x529:0x540]
---
Predecessors: [0x516]
Successors: [0xace]
---
0x529 JUMPDEST
0x52a PUSH1 0x9
0x52c SLOAD
0x52d SWAP2
0x52e SWAP1
0x52f DIV
0x530 SWAP3
0x531 POP
0x532 PUSH2 0x541
0x535 CALLVALUE
0x536 DUP5
0x537 PUSH4 0xffffffff
0x53c PUSH2 0xace
0x53f AND
0x540 JUMP
---
0x529: JUMPDEST 
0x52a: V474 = 0x9
0x52c: V475 = S[0x9]
0x52f: V476 = DIV V470 0xde0b6b3a7640000
0x532: V477 = 0x541
0x535: V478 = CALLVALUE
0x537: V479 = 0xffffffff
0x53c: V480 = 0xace
0x53f: V481 = AND 0xace 0xffffffff
0x540: JUMP 0xace
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, 0x0, 0x0, 0xde0b6b3a7640000, V470]
Stack pops: 4
Stack additions: [V476, S2, V475, 0x541, V478, V476]
Exit stack: [V12, {0x10a, 0x228}, 0x0, V476, 0x0, V475, 0x541, V478, V476]

================================

Block 0x541
[0x541:0x548]
---
Predecessors: [0xaf6]
Successors: [0x549, 0x54a]
---
0x541 JUMPDEST
0x542 DUP2
0x543 ISZERO
0x544 ISZERO
0x545 PUSH2 0x54a
0x548 JUMPI
---
0x541: JUMPDEST 
0x543: V482 = ISZERO S1
0x544: V483 = ISZERO V482
0x545: V484 = 0x54a
0x548: JUMPI 0x54a V483
---
Entry stack: [V12, S5, {0x0, 0x10a, 0x228}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S5, {0x0, 0x10a, 0x228}, S3, S2, S1, S0]

================================

Block 0x549
[0x549:0x549]
---
Predecessors: [0x541]
Successors: []
---
0x549 INVALID
---
0x549: INVALID 
---
Entry stack: [V12, S5, {0x0, 0x10a, 0x228}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S5, {0x0, 0x10a, 0x228}, S3, S2, S1, S0]

================================

Block 0x54a
[0x54a:0x59b]
---
Predecessors: [0x541]
Successors: [0x59c, 0x5a0]
---
0x54a JUMPDEST
0x54b PUSH1 0xa
0x54d SLOAD
0x54e PUSH1 0xd
0x550 SLOAD
0x551 SWAP3
0x552 SWAP1
0x553 SWAP2
0x554 DIV
0x555 SWAP3
0x556 POP
0x557 SWAP1
0x558 PUSH2 0x5c7
0x55b SWAP1
0x55c PUSH1 0x1
0x55e PUSH1 0xa0
0x560 PUSH1 0x2
0x562 EXP
0x563 SUB
0x564 AND
0x565 PUSH4 0xc4e41b22
0x56a PUSH1 0x0
0x56c PUSH1 0x40
0x56e MLOAD
0x56f PUSH1 0x20
0x571 ADD
0x572 MSTORE
0x573 PUSH1 0x40
0x575 MLOAD
0x576 DUP2
0x577 PUSH4 0xffffffff
0x57c AND
0x57d PUSH1 0xe0
0x57f PUSH1 0x2
0x581 EXP
0x582 MUL
0x583 DUP2
0x584 MSTORE
0x585 PUSH1 0x4
0x587 ADD
0x588 PUSH1 0x20
0x58a PUSH1 0x40
0x58c MLOAD
0x58d DUP1
0x58e DUP4
0x58f SUB
0x590 DUP2
0x591 PUSH1 0x0
0x593 DUP8
0x594 DUP1
0x595 EXTCODESIZE
0x596 ISZERO
0x597 ISZERO
0x598 PUSH2 0x5a0
0x59b JUMPI
---
0x54a: JUMPDEST 
0x54b: V485 = 0xa
0x54d: V486 = S[0xa]
0x54e: V487 = 0xd
0x550: V488 = S[0xd]
0x554: V489 = DIV S0 S1
0x558: V490 = 0x5c7
0x55c: V491 = 0x1
0x55e: V492 = 0xa0
0x560: V493 = 0x2
0x562: V494 = EXP 0x2 0xa0
0x563: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x564: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x565: V497 = 0xc4e41b22
0x56a: V498 = 0x0
0x56c: V499 = 0x40
0x56e: V500 = M[0x40]
0x56f: V501 = 0x20
0x571: V502 = ADD 0x20 V500
0x572: M[V502] = 0x0
0x573: V503 = 0x40
0x575: V504 = M[0x40]
0x577: V505 = 0xffffffff
0x57c: V506 = AND 0xffffffff 0xc4e41b22
0x57d: V507 = 0xe0
0x57f: V508 = 0x2
0x581: V509 = EXP 0x2 0xe0
0x582: V510 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xc4e41b22
0x584: M[V504] = 0xc4e41b2200000000000000000000000000000000000000000000000000000000
0x585: V511 = 0x4
0x587: V512 = ADD 0x4 V504
0x588: V513 = 0x20
0x58a: V514 = 0x40
0x58c: V515 = M[0x40]
0x58f: V516 = SUB V512 V515
0x591: V517 = 0x0
0x595: V518 = EXTCODESIZE V496
0x596: V519 = ISZERO V518
0x597: V520 = ISZERO V519
0x598: V521 = 0x5a0
0x59b: JUMPI 0x5a0 V520
---
Entry stack: [V12, S5, {0x0, 0x10a, 0x228}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V489, V486, 0x5c7, V496, 0xc4e41b22, V512, 0x20, V515, V516, V515, 0x0, V496]
Exit stack: [V12, S5, {0x0, 0x10a, 0x228}, S3, V489, V486, 0x5c7, V496, 0xc4e41b22, V512, 0x20, V515, V516, V515, 0x0, V496]

================================

Block 0x59c
[0x59c:0x59f]
---
Predecessors: [0x54a]
Successors: []
---
0x59c PUSH1 0x0
0x59e DUP1
0x59f REVERT
---
0x59c: V522 = 0x0
0x59f: REVERT 0x0 0x0
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, V476, V489, V486, 0x5c7, V496, 0xc4e41b22, V512, 0x20, V515, V516, V515, 0x0, V496]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, V476, V489, V486, 0x5c7, V496, 0xc4e41b22, V512, 0x20, V515, V516, V515, 0x0, V496]

================================

Block 0x5a0
[0x5a0:0x5ac]
---
Predecessors: [0x54a]
Successors: [0x5ad, 0x5b1]
---
0x5a0 JUMPDEST
0x5a1 PUSH2 0x2c6
0x5a4 GAS
0x5a5 SUB
0x5a6 CALL
0x5a7 ISZERO
0x5a8 ISZERO
0x5a9 PUSH2 0x5b1
0x5ac JUMPI
---
0x5a0: JUMPDEST 
0x5a1: V523 = 0x2c6
0x5a4: V524 = GAS
0x5a5: V525 = SUB V524 0x2c6
0x5a6: V526 = CALL V525 V496 0x0 V515 V516 V515 0x20
0x5a7: V527 = ISZERO V526
0x5a8: V528 = ISZERO V527
0x5a9: V529 = 0x5b1
0x5ac: JUMPI 0x5b1 V528
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, V476, V489, V486, 0x5c7, V496, 0xc4e41b22, V512, 0x20, V515, V516, V515, 0x0, V496]
Stack pops: 6
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, V476, V489, V486, 0x5c7, V496, 0xc4e41b22, V512]

================================

Block 0x5ad
[0x5ad:0x5b0]
---
Predecessors: [0x5a0]
Successors: []
---
0x5ad PUSH1 0x0
0x5af DUP1
0x5b0 REVERT
---
0x5ad: V530 = 0x0
0x5b0: REVERT 0x0 0x0
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, V476, S5, S4, 0x5c7, S2, 0xc4e41b22, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, V476, S5, S4, 0x5c7, S2, 0xc4e41b22, S0]

================================

Block 0x5b1
[0x5b1:0x5c6]
---
Predecessors: [0x5a0]
Successors: [0xafd]
---
0x5b1 JUMPDEST
0x5b2 POP
0x5b3 POP
0x5b4 POP
0x5b5 PUSH1 0x40
0x5b7 MLOAD
0x5b8 DUP1
0x5b9 MLOAD
0x5ba DUP5
0x5bb SWAP2
0x5bc POP
0x5bd PUSH4 0xffffffff
0x5c2 PUSH2 0xafd
0x5c5 AND
0x5c6 JUMP
---
0x5b1: JUMPDEST 
0x5b5: V531 = 0x40
0x5b7: V532 = M[0x40]
0x5b9: V533 = M[V532]
0x5bd: V534 = 0xffffffff
0x5c2: V535 = 0xafd
0x5c5: V536 = AND 0xafd 0xffffffff
0x5c6: JUMP 0xafd
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, V476, S5, S4, 0x5c7, S2, 0xc4e41b22, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S5, V533]
Exit stack: [V12, {0x10a, 0x228}, 0x0, V476, S5, S4, 0x5c7, S5, V533]

================================

Block 0x5c7
[0x5c7:0x5cd]
---
Predecessors: [0xaf6]
Successors: [0x5ce, 0x5d2]
---
0x5c7 JUMPDEST
0x5c8 GT
0x5c9 ISZERO
0x5ca PUSH2 0x5d2
0x5cd JUMPI
---
0x5c7: JUMPDEST 
0x5c8: V537 = GT S0 S1
0x5c9: V538 = ISZERO V537
0x5ca: V539 = 0x5d2
0x5cd: JUMPI 0x5d2 V538
---
Entry stack: [V12, S5, {0x0, 0x10a, 0x228}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S5, {0x0, 0x10a, 0x228}, S3, S2]

================================

Block 0x5ce
[0x5ce:0x5d1]
---
Predecessors: [0x5c7]
Successors: []
---
0x5ce PUSH1 0x0
0x5d0 DUP1
0x5d1 REVERT
---
0x5ce: V540 = 0x0
0x5d1: REVERT 0x0 0x0
---
Entry stack: [V12, S3, {0x0, 0x10a, 0x228}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0x0, 0x10a, 0x228}, S1, S0]

================================

Block 0x5d2
[0x5d2:0x5e4]
---
Predecessors: [0x5c7]
Successors: [0xafd]
---
0x5d2 JUMPDEST
0x5d3 PUSH1 0x4
0x5d5 SLOAD
0x5d6 PUSH2 0x5e5
0x5d9 SWAP1
0x5da DUP3
0x5db PUSH4 0xffffffff
0x5e0 PUSH2 0xafd
0x5e3 AND
0x5e4 JUMP
---
0x5d2: JUMPDEST 
0x5d3: V541 = 0x4
0x5d5: V542 = S[0x4]
0x5d6: V543 = 0x5e5
0x5db: V544 = 0xffffffff
0x5e0: V545 = 0xafd
0x5e3: V546 = AND 0xafd 0xffffffff
0x5e4: JUMP 0xafd
---
Entry stack: [V12, S3, {0x0, 0x10a, 0x228}, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x5e5, V542, S0]
Exit stack: [V12, S3, {0x0, 0x10a, 0x228}, S1, S0, 0x5e5, V542, S0]

================================

Block 0x5e5
[0x5e5:0x642]
---
Predecessors: [0xaf6]
Successors: [0x643, 0x647]
---
0x5e5 JUMPDEST
0x5e6 PUSH1 0x4
0x5e8 SSTORE
0x5e9 PUSH1 0xd
0x5eb SLOAD
0x5ec PUSH1 0x1
0x5ee PUSH1 0xa0
0x5f0 PUSH1 0x2
0x5f2 EXP
0x5f3 SUB
0x5f4 AND
0x5f5 PUSH4 0x66e7ea0f
0x5fa CALLER
0x5fb DUP4
0x5fc PUSH1 0x0
0x5fe PUSH1 0x40
0x600 MLOAD
0x601 PUSH1 0x20
0x603 ADD
0x604 MSTORE
0x605 PUSH1 0x40
0x607 MLOAD
0x608 PUSH1 0xe0
0x60a PUSH1 0x2
0x60c EXP
0x60d PUSH4 0xffffffff
0x612 DUP6
0x613 AND
0x614 MUL
0x615 DUP2
0x616 MSTORE
0x617 PUSH1 0x1
0x619 PUSH1 0xa0
0x61b PUSH1 0x2
0x61d EXP
0x61e SUB
0x61f SWAP1
0x620 SWAP3
0x621 AND
0x622 PUSH1 0x4
0x624 DUP4
0x625 ADD
0x626 MSTORE
0x627 PUSH1 0x24
0x629 DUP3
0x62a ADD
0x62b MSTORE
0x62c PUSH1 0x44
0x62e ADD
0x62f PUSH1 0x20
0x631 PUSH1 0x40
0x633 MLOAD
0x634 DUP1
0x635 DUP4
0x636 SUB
0x637 DUP2
0x638 PUSH1 0x0
0x63a DUP8
0x63b DUP1
0x63c EXTCODESIZE
0x63d ISZERO
0x63e ISZERO
0x63f PUSH2 0x647
0x642 JUMPI
---
0x5e5: JUMPDEST 
0x5e6: V547 = 0x4
0x5e8: S[0x4] = S0
0x5e9: V548 = 0xd
0x5eb: V549 = S[0xd]
0x5ec: V550 = 0x1
0x5ee: V551 = 0xa0
0x5f0: V552 = 0x2
0x5f2: V553 = EXP 0x2 0xa0
0x5f3: V554 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f4: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x5f5: V556 = 0x66e7ea0f
0x5fa: V557 = CALLER
0x5fc: V558 = 0x0
0x5fe: V559 = 0x40
0x600: V560 = M[0x40]
0x601: V561 = 0x20
0x603: V562 = ADD 0x20 V560
0x604: M[V562] = 0x0
0x605: V563 = 0x40
0x607: V564 = M[0x40]
0x608: V565 = 0xe0
0x60a: V566 = 0x2
0x60c: V567 = EXP 0x2 0xe0
0x60d: V568 = 0xffffffff
0x613: V569 = AND 0x66e7ea0f 0xffffffff
0x614: V570 = MUL 0x66e7ea0f 0x100000000000000000000000000000000000000000000000000000000
0x616: M[V564] = 0x66e7ea0f00000000000000000000000000000000000000000000000000000000
0x617: V571 = 0x1
0x619: V572 = 0xa0
0x61b: V573 = 0x2
0x61d: V574 = EXP 0x2 0xa0
0x61e: V575 = SUB 0x10000000000000000000000000000000000000000 0x1
0x621: V576 = AND V557 0xffffffffffffffffffffffffffffffffffffffff
0x622: V577 = 0x4
0x625: V578 = ADD V564 0x4
0x626: M[V578] = V576
0x627: V579 = 0x24
0x62a: V580 = ADD V564 0x24
0x62b: M[V580] = S1
0x62c: V581 = 0x44
0x62e: V582 = ADD 0x44 V564
0x62f: V583 = 0x20
0x631: V584 = 0x40
0x633: V585 = M[0x40]
0x636: V586 = SUB V582 V585
0x638: V587 = 0x0
0x63c: V588 = EXTCODESIZE V555
0x63d: V589 = ISZERO V588
0x63e: V590 = ISZERO V589
0x63f: V591 = 0x647
0x642: JUMPI 0x647 V590
---
Entry stack: [V12, S5, {0x0, 0x10a, 0x228}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V555, 0x66e7ea0f, V582, 0x20, V585, V586, V585, 0x0, V555]
Exit stack: [V12, S5, {0x0, 0x10a, 0x228}, S3, S2, S1, V555, 0x66e7ea0f, V582, 0x20, V585, V586, V585, 0x0, V555]

================================

Block 0x643
[0x643:0x646]
---
Predecessors: [0x5e5]
Successors: []
---
0x643 PUSH1 0x0
0x645 DUP1
0x646 REVERT
---
0x643: V592 = 0x0
0x646: REVERT 0x0 0x0
---
Entry stack: [V12, S13, {0x0, 0x10a, 0x228}, S11, S10, S9, V555, 0x66e7ea0f, V582, 0x20, V585, V586, V585, 0x0, V555]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S13, {0x0, 0x10a, 0x228}, S11, S10, S9, V555, 0x66e7ea0f, V582, 0x20, V585, V586, V585, 0x0, V555]

================================

Block 0x647
[0x647:0x653]
---
Predecessors: [0x5e5]
Successors: [0x654, 0x658]
---
0x647 JUMPDEST
0x648 PUSH2 0x2c6
0x64b GAS
0x64c SUB
0x64d CALL
0x64e ISZERO
0x64f ISZERO
0x650 PUSH2 0x658
0x653 JUMPI
---
0x647: JUMPDEST 
0x648: V593 = 0x2c6
0x64b: V594 = GAS
0x64c: V595 = SUB V594 0x2c6
0x64d: V596 = CALL V595 V555 0x0 V585 V586 V585 0x20
0x64e: V597 = ISZERO V596
0x64f: V598 = ISZERO V597
0x650: V599 = 0x658
0x653: JUMPI 0x658 V598
---
Entry stack: [V12, S13, {0x0, 0x10a, 0x228}, S11, S10, S9, V555, 0x66e7ea0f, V582, 0x20, V585, V586, V585, 0x0, V555]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S13, {0x0, 0x10a, 0x228}, S11, S10, S9, V555, 0x66e7ea0f, V582]

================================

Block 0x654
[0x654:0x657]
---
Predecessors: [0x647]
Successors: []
---
0x654 PUSH1 0x0
0x656 DUP1
0x657 REVERT
---
0x654: V600 = 0x0
0x657: REVERT 0x0 0x0
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, V476, S3, S2, 0x66e7ea0f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, V476, S3, S2, 0x66e7ea0f, S0]

================================

Block 0x658
[0x658:0x6ae]
---
Predecessors: [0x647]
Successors: [0x6af, 0x6b3]
---
0x658 JUMPDEST
0x659 POP
0x65a POP
0x65b POP
0x65c PUSH1 0x40
0x65e MLOAD
0x65f DUP1
0x660 MLOAD
0x661 POP
0x662 POP
0x663 PUSH1 0xd
0x665 SLOAD
0x666 PUSH1 0x1
0x668 PUSH1 0xa0
0x66a PUSH1 0x2
0x66c EXP
0x66d SUB
0x66e AND
0x66f PUSH4 0xecfc5964
0x674 DUP3
0x675 PUSH1 0x0
0x677 PUSH1 0x40
0x679 MLOAD
0x67a PUSH1 0x20
0x67c ADD
0x67d MSTORE
0x67e PUSH1 0x40
0x680 MLOAD
0x681 PUSH1 0xe0
0x683 PUSH1 0x2
0x685 EXP
0x686 PUSH4 0xffffffff
0x68b DUP5
0x68c AND
0x68d MUL
0x68e DUP2
0x68f MSTORE
0x690 PUSH1 0x4
0x692 DUP2
0x693 ADD
0x694 SWAP2
0x695 SWAP1
0x696 SWAP2
0x697 MSTORE
0x698 PUSH1 0x24
0x69a ADD
0x69b PUSH1 0x20
0x69d PUSH1 0x40
0x69f MLOAD
0x6a0 DUP1
0x6a1 DUP4
0x6a2 SUB
0x6a3 DUP2
0x6a4 PUSH1 0x0
0x6a6 DUP8
0x6a7 DUP1
0x6a8 EXTCODESIZE
0x6a9 ISZERO
0x6aa ISZERO
0x6ab PUSH2 0x6b3
0x6ae JUMPI
---
0x658: JUMPDEST 
0x65c: V601 = 0x40
0x65e: V602 = M[0x40]
0x660: V603 = M[V602]
0x663: V604 = 0xd
0x665: V605 = S[0xd]
0x666: V606 = 0x1
0x668: V607 = 0xa0
0x66a: V608 = 0x2
0x66c: V609 = EXP 0x2 0xa0
0x66d: V610 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66e: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x66f: V612 = 0xecfc5964
0x675: V613 = 0x0
0x677: V614 = 0x40
0x679: V615 = M[0x40]
0x67a: V616 = 0x20
0x67c: V617 = ADD 0x20 V615
0x67d: M[V617] = 0x0
0x67e: V618 = 0x40
0x680: V619 = M[0x40]
0x681: V620 = 0xe0
0x683: V621 = 0x2
0x685: V622 = EXP 0x2 0xe0
0x686: V623 = 0xffffffff
0x68c: V624 = AND 0xecfc5964 0xffffffff
0x68d: V625 = MUL 0xecfc5964 0x100000000000000000000000000000000000000000000000000000000
0x68f: M[V619] = 0xecfc596400000000000000000000000000000000000000000000000000000000
0x690: V626 = 0x4
0x693: V627 = ADD V619 0x4
0x697: M[V627] = S3
0x698: V628 = 0x24
0x69a: V629 = ADD 0x24 V619
0x69b: V630 = 0x20
0x69d: V631 = 0x40
0x69f: V632 = M[0x40]
0x6a2: V633 = SUB V629 V632
0x6a4: V634 = 0x0
0x6a8: V635 = EXTCODESIZE V611
0x6a9: V636 = ISZERO V635
0x6aa: V637 = ISZERO V636
0x6ab: V638 = 0x6b3
0x6ae: JUMPI 0x6b3 V637
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, V476, S3, S2, 0x66e7ea0f, S0]
Stack pops: 4
Stack additions: [S3, V611, 0xecfc5964, V629, 0x20, V632, V633, V632, 0x0, V611]
Exit stack: [V12, {0x10a, 0x228}, 0x0, V476, S3, V611, 0xecfc5964, V629, 0x20, V632, V633, V632, 0x0, V611]

================================

Block 0x6af
[0x6af:0x6b2]
---
Predecessors: [0x658]
Successors: []
---
0x6af PUSH1 0x0
0x6b1 DUP1
0x6b2 REVERT
---
0x6af: V639 = 0x0
0x6b2: REVERT 0x0 0x0
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, V476, S9, V611, 0xecfc5964, V629, 0x20, V632, V633, V632, 0x0, V611]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, V476, S9, V611, 0xecfc5964, V629, 0x20, V632, V633, V632, 0x0, V611]

================================

Block 0x6b3
[0x6b3:0x6bf]
---
Predecessors: [0x658]
Successors: [0x6c0, 0x6c4]
---
0x6b3 JUMPDEST
0x6b4 PUSH2 0x2c6
0x6b7 GAS
0x6b8 SUB
0x6b9 CALL
0x6ba ISZERO
0x6bb ISZERO
0x6bc PUSH2 0x6c4
0x6bf JUMPI
---
0x6b3: JUMPDEST 
0x6b4: V640 = 0x2c6
0x6b7: V641 = GAS
0x6b8: V642 = SUB V641 0x2c6
0x6b9: V643 = CALL V642 V611 0x0 V632 V633 V632 0x20
0x6ba: V644 = ISZERO V643
0x6bb: V645 = ISZERO V644
0x6bc: V646 = 0x6c4
0x6bf: JUMPI 0x6c4 V645
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, V476, S9, V611, 0xecfc5964, V629, 0x20, V632, V633, V632, 0x0, V611]
Stack pops: 6
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, V476, S9, V611, 0xecfc5964, V629]

================================

Block 0x6c0
[0x6c0:0x6c3]
---
Predecessors: [0x6b3]
Successors: []
---
0x6c0 PUSH1 0x0
0x6c2 DUP1
0x6c3 REVERT
---
0x6c0: V647 = 0x0
0x6c3: REVERT 0x0 0x0
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, V476, S3, S2, 0xecfc5964, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, V476, S3, S2, 0xecfc5964, S0]

================================

Block 0x6c4
[0x6c4:0x750]
---
Predecessors: [0x6b3]
Successors: [0x751]
---
0x6c4 JUMPDEST
0x6c5 POP
0x6c6 POP
0x6c7 POP
0x6c8 PUSH1 0x40
0x6ca MLOAD
0x6cb DUP1
0x6cc MLOAD
0x6cd POP
0x6ce POP
0x6cf PUSH1 0x1
0x6d1 PUSH1 0xa0
0x6d3 PUSH1 0x2
0x6d5 EXP
0x6d6 SUB
0x6d7 CALLER
0x6d8 AND
0x6d9 PUSH32 0xc4b201a5eb8ab63e539f373c349eafada81e6c7bc25c071fe334c289f17ed7d
0x6fa DUP3
0x6fb DUP5
0x6fc PUSH1 0x40
0x6fe MLOAD
0x6ff PUSH1 0x20
0x701 DUP2
0x702 ADD
0x703 SWAP3
0x704 SWAP1
0x705 SWAP3
0x706 MSTORE
0x707 PUSH1 0x40
0x709 DUP1
0x70a DUP4
0x70b ADD
0x70c SWAP2
0x70d SWAP1
0x70e SWAP2
0x70f MSTORE
0x710 PUSH1 0x60
0x712 DUP1
0x713 DUP4
0x714 MSTORE
0x715 PUSH1 0x4
0x717 SWAP1
0x718 DUP4
0x719 ADD
0x71a MSTORE
0x71b PUSH32 0x6d696e7400000000000000000000000000000000000000000000000000000000
0x73c PUSH1 0x80
0x73e DUP4
0x73f ADD
0x740 MSTORE
0x741 PUSH1 0xa0
0x743 SWAP1
0x744 SWAP2
0x745 ADD
0x746 SWAP1
0x747 MLOAD
0x748 DUP1
0x749 SWAP2
0x74a SUB
0x74b SWAP1
0x74c LOG2
0x74d PUSH1 0x1
0x74f SWAP3
0x750 POP
---
0x6c4: JUMPDEST 
0x6c8: V648 = 0x40
0x6ca: V649 = M[0x40]
0x6cc: V650 = M[V649]
0x6cf: V651 = 0x1
0x6d1: V652 = 0xa0
0x6d3: V653 = 0x2
0x6d5: V654 = EXP 0x2 0xa0
0x6d6: V655 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d7: V656 = CALLER
0x6d8: V657 = AND V656 0xffffffffffffffffffffffffffffffffffffffff
0x6d9: V658 = 0xc4b201a5eb8ab63e539f373c349eafada81e6c7bc25c071fe334c289f17ed7d
0x6fc: V659 = 0x40
0x6fe: V660 = M[0x40]
0x6ff: V661 = 0x20
0x702: V662 = ADD V660 0x20
0x706: M[V662] = S3
0x707: V663 = 0x40
0x70b: V664 = ADD V660 0x40
0x70f: M[V664] = V476
0x710: V665 = 0x60
0x714: M[V660] = 0x60
0x715: V666 = 0x4
0x719: V667 = ADD V660 0x60
0x71a: M[V667] = 0x4
0x71b: V668 = 0x6d696e7400000000000000000000000000000000000000000000000000000000
0x73c: V669 = 0x80
0x73f: V670 = ADD V660 0x80
0x740: M[V670] = 0x6d696e7400000000000000000000000000000000000000000000000000000000
0x741: V671 = 0xa0
0x745: V672 = ADD V660 0xa0
0x747: V673 = M[0x40]
0x74a: V674 = SUB V672 V673
0x74c: LOG V673 V674 0xc4b201a5eb8ab63e539f373c349eafada81e6c7bc25c071fe334c289f17ed7d V657
0x74d: V675 = 0x1
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, V476, S3, S2, 0xecfc5964, S0]
Stack pops: 6
Stack additions: [0x1, S4, S3]
Exit stack: [V12, {0x10a, 0x228}, 0x1, V476, S3]

================================

Block 0x751
[0x751:0x755]
---
Predecessors: [0x6c4]
Successors: [0x10a, 0x228]
---
0x751 JUMPDEST
0x752 POP
0x753 POP
0x754 SWAP1
0x755 JUMP
---
0x751: JUMPDEST 
0x755: THROW 
---
Entry stack: [V12, {0x10a, 0x228}, 0x1, V476, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, 0x1]

================================

Block 0x756
[0x756:0x764]
---
Predecessors: [0x119]
Successors: [0x121]
---
0x756 JUMPDEST
0x757 PUSH1 0x2
0x759 SLOAD
0x75a PUSH1 0x1
0x75c PUSH1 0xa0
0x75e PUSH1 0x2
0x760 EXP
0x761 SUB
0x762 AND
0x763 DUP2
0x764 JUMP
---
0x756: JUMPDEST 
0x757: V676 = 0x2
0x759: V677 = S[0x2]
0x75a: V678 = 0x1
0x75c: V679 = 0xa0
0x75e: V680 = 0x2
0x760: V681 = EXP 0x2 0xa0
0x761: V682 = SUB 0x10000000000000000000000000000000000000000 0x1
0x762: V683 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0x764: JUMP 0x121
---
Entry stack: [V12, 0x121]
Stack pops: 1
Stack additions: [S0, V683]
Exit stack: [V12, 0x121, V683]

================================

Block 0x765
[0x765:0x76a]
---
Predecessors: [0x148]
Successors: [0x150]
---
0x765 JUMPDEST
0x766 PUSH1 0x9
0x768 SLOAD
0x769 DUP2
0x76a JUMP
---
0x765: JUMPDEST 
0x766: V684 = 0x9
0x768: V685 = S[0x9]
0x76a: JUMP 0x150
---
Entry stack: [V12, 0x150]
Stack pops: 1
Stack additions: [S0, V685]
Exit stack: [V12, 0x150, V685]

================================

Block 0x76b
[0x76b:0x770]
---
Predecessors: [0x16d]
Successors: [0x150]
---
0x76b JUMPDEST
0x76c PUSH1 0x6
0x76e SLOAD
0x76f DUP2
0x770 JUMP
---
0x76b: JUMPDEST 
0x76c: V686 = 0x6
0x76e: V687 = S[0x6]
0x770: JUMP 0x150
---
Entry stack: [V12, 0x150]
Stack pops: 1
Stack additions: [S0, V687]
Exit stack: [V12, 0x150, V687]

================================

Block 0x771
[0x771:0x776]
---
Predecessors: [0x192]
Successors: [0x150]
---
0x771 JUMPDEST
0x772 PUSH1 0x8
0x774 SLOAD
0x775 DUP2
0x776 JUMP
---
0x771: JUMPDEST 
0x772: V688 = 0x8
0x774: V689 = S[0x8]
0x776: JUMP 0x150
---
Entry stack: [V12, 0x150]
Stack pops: 1
Stack additions: [S0, V689]
Exit stack: [V12, 0x150, V689]

================================

Block 0x777
[0x777:0x77c]
---
Predecessors: [0x1b7]
Successors: [0x150]
---
0x777 JUMPDEST
0x778 PUSH1 0x5
0x77a SLOAD
0x77b DUP2
0x77c JUMP
---
0x777: JUMPDEST 
0x778: V690 = 0x5
0x77a: V691 = S[0x5]
0x77c: JUMP 0x150
---
Entry stack: [V12, 0x150]
Stack pops: 1
Stack additions: [S0, V691]
Exit stack: [V12, 0x150, V691]

================================

Block 0x77d
[0x77d:0x793]
---
Predecessors: [0x1dc]
Successors: [0x794, 0x798]
---
0x77d JUMPDEST
0x77e PUSH1 0x0
0x780 SLOAD
0x781 CALLER
0x782 PUSH1 0x1
0x784 PUSH1 0xa0
0x786 PUSH1 0x2
0x788 EXP
0x789 SUB
0x78a SWAP1
0x78b DUP2
0x78c AND
0x78d SWAP2
0x78e AND
0x78f EQ
0x790 PUSH2 0x798
0x793 JUMPI
---
0x77d: JUMPDEST 
0x77e: V692 = 0x0
0x780: V693 = S[0x0]
0x781: V694 = CALLER
0x782: V695 = 0x1
0x784: V696 = 0xa0
0x786: V697 = 0x2
0x788: V698 = EXP 0x2 0xa0
0x789: V699 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78c: V700 = AND 0xffffffffffffffffffffffffffffffffffffffff V694
0x78e: V701 = AND V693 0xffffffffffffffffffffffffffffffffffffffff
0x78f: V702 = EQ V701 V700
0x790: V703 = 0x798
0x793: JUMPI 0x798 V702
---
Entry stack: [V12, 0x10c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c]

================================

Block 0x794
[0x794:0x797]
---
Predecessors: [0x77d]
Successors: []
---
0x794 PUSH1 0x0
0x796 DUP1
0x797 REVERT
---
0x794: V704 = 0x0
0x797: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c]

================================

Block 0x798
[0x798:0x7a5]
---
Predecessors: [0x77d]
Successors: []
---
0x798 JUMPDEST
0x799 PUSH1 0x2
0x79b SLOAD
0x79c PUSH1 0x1
0x79e PUSH1 0xa0
0x7a0 PUSH1 0x2
0x7a2 EXP
0x7a3 SUB
0x7a4 AND
0x7a5 SELFDESTRUCT
---
0x798: JUMPDEST 
0x799: V705 = 0x2
0x79b: V706 = S[0x2]
0x79c: V707 = 0x1
0x79e: V708 = 0xa0
0x7a0: V709 = 0x2
0x7a2: V710 = EXP 0x2 0xa0
0x7a3: V711 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a4: V712 = AND 0xffffffffffffffffffffffffffffffffffffffff V706
0x7a5: SELFDESTRUCT V712
---
Entry stack: [V12, 0x10c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c]

================================

Block 0x7a6
[0x7a6:0x7a6]
---
Predecessors: [0xa91]
Successors: [0x7a7]
---
0x7a6 JUMPDEST
---
0x7a6: JUMPDEST 
---
Entry stack: [V12, 0x10c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c]

================================

Block 0x7a7
[0x7a7:0x7a8]
---
Predecessors: [0x7a6]
Successors: [0x10c]
---
0x7a7 JUMPDEST
0x7a8 JUMP
---
0x7a7: JUMPDEST 
0x7a8: JUMP 0x10c
---
Entry stack: [V12, 0x10c]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x7a9
[0x7a9:0x7b7]
---
Predecessors: [0x1f1]
Successors: [0x121]
---
0x7a9 JUMPDEST
0x7aa PUSH1 0x3
0x7ac SLOAD
0x7ad PUSH1 0x1
0x7af PUSH1 0xa0
0x7b1 PUSH1 0x2
0x7b3 EXP
0x7b4 SUB
0x7b5 AND
0x7b6 DUP2
0x7b7 JUMP
---
0x7a9: JUMPDEST 
0x7aa: V713 = 0x3
0x7ac: V714 = S[0x3]
0x7ad: V715 = 0x1
0x7af: V716 = 0xa0
0x7b1: V717 = 0x2
0x7b3: V718 = EXP 0x2 0xa0
0x7b4: V719 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b5: V720 = AND 0xffffffffffffffffffffffffffffffffffffffff V714
0x7b7: JUMP 0x121
---
Entry stack: [V12, 0x121]
Stack pops: 1
Stack additions: [S0, V720]
Exit stack: [V12, 0x121, V720]

================================

Block 0x7b8
[0x7b8:0x7d3]
---
Predecessors: [0x220]
Successors: [0x7d4, 0x7d8]
---
0x7b8 JUMPDEST
0x7b9 PUSH1 0x0
0x7bb DUP1
0x7bc SLOAD
0x7bd DUP2
0x7be SWAP1
0x7bf DUP2
0x7c0 SWAP1
0x7c1 CALLER
0x7c2 PUSH1 0x1
0x7c4 PUSH1 0xa0
0x7c6 PUSH1 0x2
0x7c8 EXP
0x7c9 SUB
0x7ca SWAP1
0x7cb DUP2
0x7cc AND
0x7cd SWAP2
0x7ce AND
0x7cf EQ
0x7d0 PUSH2 0x7d8
0x7d3 JUMPI
---
0x7b8: JUMPDEST 
0x7b9: V721 = 0x0
0x7bc: V722 = S[0x0]
0x7c1: V723 = CALLER
0x7c2: V724 = 0x1
0x7c4: V725 = 0xa0
0x7c6: V726 = 0x2
0x7c8: V727 = EXP 0x2 0xa0
0x7c9: V728 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7cc: V729 = AND 0xffffffffffffffffffffffffffffffffffffffff V723
0x7ce: V730 = AND V722 0xffffffffffffffffffffffffffffffffffffffff
0x7cf: V731 = EQ V730 V729
0x7d0: V732 = 0x7d8
0x7d3: JUMPI 0x7d8 V731
---
Entry stack: [V12, 0x228]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x228, 0x0, 0x0, 0x0]

================================

Block 0x7d4
[0x7d4:0x7d7]
---
Predecessors: [0x7b8]
Successors: []
---
0x7d4 PUSH1 0x0
0x7d6 DUP1
0x7d7 REVERT
---
0x7d4: V733 = 0x0
0x7d7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x228, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x228, 0x0, 0x0, 0x0]

================================

Block 0x7d8
[0x7d8:0x7e1]
---
Predecessors: [0x7b8]
Successors: [0x7e2, 0x7e6]
---
0x7d8 JUMPDEST
0x7d9 PUSH1 0x8
0x7db SLOAD
0x7dc TIMESTAMP
0x7dd GT
0x7de PUSH2 0x7e6
0x7e1 JUMPI
---
0x7d8: JUMPDEST 
0x7d9: V734 = 0x8
0x7db: V735 = S[0x8]
0x7dc: V736 = TIMESTAMP
0x7dd: V737 = GT V736 V735
0x7de: V738 = 0x7e6
0x7e1: JUMPI 0x7e6 V737
---
Entry stack: [V12, 0x228, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x228, 0x0, 0x0, 0x0]

================================

Block 0x7e2
[0x7e2:0x7e5]
---
Predecessors: [0x7d8]
Successors: []
---
0x7e2 PUSH1 0x0
0x7e4 DUP1
0x7e5 REVERT
---
0x7e2: V739 = 0x0
0x7e5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x228, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x228, 0x0, 0x0, 0x0]

================================

Block 0x7e6
[0x7e6:0x806]
---
Predecessors: [0x7d8]
Successors: [0x807]
---
0x7e6 JUMPDEST
0x7e7 PUSH1 0xb
0x7e9 DUP1
0x7ea SLOAD
0x7eb PUSH1 0xff
0x7ed NOT
0x7ee AND
0x7ef PUSH1 0x1
0x7f1 OR
0x7f2 SWAP1
0x7f3 SSTORE
0x7f4 PUSH1 0x5
0x7f6 SLOAD
0x7f7 PUSH2 0x3e8
0x7fa SWAP1
0x7fb PUSH1 0x1
0x7fd PUSH1 0xa0
0x7ff PUSH1 0x2
0x801 EXP
0x802 SUB
0x803 ADDRESS
0x804 AND
0x805 BALANCE
0x806 MUL
---
0x7e6: JUMPDEST 
0x7e7: V740 = 0xb
0x7ea: V741 = S[0xb]
0x7eb: V742 = 0xff
0x7ed: V743 = NOT 0xff
0x7ee: V744 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V741
0x7ef: V745 = 0x1
0x7f1: V746 = OR 0x1 V744
0x7f3: S[0xb] = V746
0x7f4: V747 = 0x5
0x7f6: V748 = S[0x5]
0x7f7: V749 = 0x3e8
0x7fb: V750 = 0x1
0x7fd: V751 = 0xa0
0x7ff: V752 = 0x2
0x801: V753 = EXP 0x2 0xa0
0x802: V754 = SUB 0x10000000000000000000000000000000000000000 0x1
0x803: V755 = ADDRESS
0x804: V756 = AND V755 0xffffffffffffffffffffffffffffffffffffffff
0x805: V757 = BALANCE V756
0x806: V758 = MUL V757 V748
---
Entry stack: [V12, 0x228, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3e8, V758]
Exit stack: [V12, 0x228, 0x0, 0x0, 0x0, 0x3e8, V758]

================================

Block 0x807
[0x807:0x823]
---
Predecessors: [0x7e6]
Successors: [0x824, 0x825]
---
0x807 JUMPDEST
0x808 DIV
0x809 SWAP2
0x80a POP
0x80b PUSH2 0x3e8
0x80e PUSH1 0x6
0x810 SLOAD
0x811 ADDRESS
0x812 PUSH1 0x1
0x814 PUSH1 0xa0
0x816 PUSH1 0x2
0x818 EXP
0x819 SUB
0x81a AND
0x81b BALANCE
0x81c MUL
0x81d DUP2
0x81e ISZERO
0x81f ISZERO
0x820 PUSH2 0x825
0x823 JUMPI
---
0x807: JUMPDEST 
0x808: V759 = DIV V758 0x3e8
0x80b: V760 = 0x3e8
0x80e: V761 = 0x6
0x810: V762 = S[0x6]
0x811: V763 = ADDRESS
0x812: V764 = 0x1
0x814: V765 = 0xa0
0x816: V766 = 0x2
0x818: V767 = EXP 0x2 0xa0
0x819: V768 = SUB 0x10000000000000000000000000000000000000000 0x1
0x81a: V769 = AND 0xffffffffffffffffffffffffffffffffffffffff V763
0x81b: V770 = BALANCE V769
0x81c: V771 = MUL V770 V762
0x81e: V772 = ISZERO 0x3e8
0x81f: V773 = ISZERO 0x0
0x820: V774 = 0x825
0x823: JUMPI 0x825 0x1
---
Entry stack: [V12, 0x228, 0x0, 0x0, 0x0, 0x3e8, V758]
Stack pops: 4
Stack additions: [V759, S2, 0x3e8, V771]
Exit stack: [V12, 0x228, 0x0, V759, 0x0, 0x3e8, V771]

================================

Block 0x824
[0x824:0x824]
---
Predecessors: [0x807]
Successors: []
---
0x824 INVALID
---
0x824: INVALID 
---
Entry stack: [V12, 0x228, 0x0, V759, 0x0, 0x3e8, V771]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x228, 0x0, V759, 0x0, 0x3e8, V771]

================================

Block 0x825
[0x825:0x83e]
---
Predecessors: [0x807]
Successors: [0x83f, 0x844]
---
0x825 JUMPDEST
0x826 PUSH1 0x2
0x828 SLOAD
0x829 SWAP2
0x82a SWAP1
0x82b DIV
0x82c SWAP2
0x82d POP
0x82e PUSH1 0x1
0x830 PUSH1 0xa0
0x832 PUSH1 0x2
0x834 EXP
0x835 SUB
0x836 AND
0x837 ISZERO
0x838 DUP1
0x839 ISZERO
0x83a SWAP1
0x83b PUSH2 0x844
0x83e JUMPI
---
0x825: JUMPDEST 
0x826: V775 = 0x2
0x828: V776 = S[0x2]
0x82b: V777 = DIV V771 0x3e8
0x82e: V778 = 0x1
0x830: V779 = 0xa0
0x832: V780 = 0x2
0x834: V781 = EXP 0x2 0xa0
0x835: V782 = SUB 0x10000000000000000000000000000000000000000 0x1
0x836: V783 = AND 0xffffffffffffffffffffffffffffffffffffffff V776
0x837: V784 = ISZERO V783
0x839: V785 = ISZERO V784
0x83b: V786 = 0x844
0x83e: JUMPI 0x844 V784
---
Entry stack: [V12, 0x228, 0x0, V759, 0x0, 0x3e8, V771]
Stack pops: 3
Stack additions: [V777, V785]
Exit stack: [V12, 0x228, 0x0, V759, V777, V785]

================================

Block 0x83f
[0x83f:0x843]
---
Predecessors: [0x825]
Successors: [0x844]
---
0x83f POP
0x840 PUSH1 0x0
0x842 DUP3
0x843 GT
---
0x840: V787 = 0x0
0x843: V788 = GT V759 0x0
---
Entry stack: [V12, 0x228, 0x0, V759, V777, V785]
Stack pops: 3
Stack additions: [S2, S1, V788]
Exit stack: [V12, 0x228, 0x0, V759, V777, V788]

================================

Block 0x844
[0x844:0x849]
---
Predecessors: [0x825, 0x83f]
Successors: [0x84a, 0x87c]
---
0x844 JUMPDEST
0x845 ISZERO
0x846 PUSH2 0x87c
0x849 JUMPI
---
0x844: JUMPDEST 
0x845: V789 = ISZERO S0
0x846: V790 = 0x87c
0x849: JUMPI 0x87c V789
---
Entry stack: [V12, 0x228, 0x0, V759, V777, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x228, 0x0, V759, V777]

================================

Block 0x84a
[0x84a:0x877]
---
Predecessors: [0x844]
Successors: [0x878, 0x87c]
---
0x84a PUSH1 0x2
0x84c SLOAD
0x84d PUSH1 0x1
0x84f PUSH1 0xa0
0x851 PUSH1 0x2
0x853 EXP
0x854 SUB
0x855 AND
0x856 DUP3
0x857 ISZERO
0x858 PUSH2 0x8fc
0x85b MUL
0x85c DUP4
0x85d PUSH1 0x40
0x85f MLOAD
0x860 PUSH1 0x0
0x862 PUSH1 0x40
0x864 MLOAD
0x865 DUP1
0x866 DUP4
0x867 SUB
0x868 DUP2
0x869 DUP6
0x86a DUP9
0x86b DUP9
0x86c CALL
0x86d SWAP4
0x86e POP
0x86f POP
0x870 POP
0x871 POP
0x872 ISZERO
0x873 ISZERO
0x874 PUSH2 0x87c
0x877 JUMPI
---
0x84a: V791 = 0x2
0x84c: V792 = S[0x2]
0x84d: V793 = 0x1
0x84f: V794 = 0xa0
0x851: V795 = 0x2
0x853: V796 = EXP 0x2 0xa0
0x854: V797 = SUB 0x10000000000000000000000000000000000000000 0x1
0x855: V798 = AND 0xffffffffffffffffffffffffffffffffffffffff V792
0x857: V799 = ISZERO V759
0x858: V800 = 0x8fc
0x85b: V801 = MUL 0x8fc V799
0x85d: V802 = 0x40
0x85f: V803 = M[0x40]
0x860: V804 = 0x0
0x862: V805 = 0x40
0x864: V806 = M[0x40]
0x867: V807 = SUB V803 V806
0x86c: V808 = CALL V801 V798 V759 V806 V807 V806 0x0
0x872: V809 = ISZERO V808
0x873: V810 = ISZERO V809
0x874: V811 = 0x87c
0x877: JUMPI 0x87c V810
---
Entry stack: [V12, 0x228, 0x0, V759, V777]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x228, 0x0, V759, V777]

================================

Block 0x878
[0x878:0x87b]
---
Predecessors: [0x84a]
Successors: []
---
0x878 PUSH1 0x0
0x87a DUP1
0x87b REVERT
---
0x878: V812 = 0x0
0x87b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x228, 0x0, V759, V777]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x228, 0x0, V759, V777]

================================

Block 0x87c
[0x87c:0x87c]
---
Predecessors: [0x844, 0x84a]
Successors: [0x87d]
---
0x87c JUMPDEST
---
0x87c: JUMPDEST 
---
Entry stack: [V12, 0x228, 0x0, V759, V777]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x228, 0x0, V759, V777]

================================

Block 0x87d
[0x87d:0x891]
---
Predecessors: [0x87c]
Successors: [0x892, 0x897]
---
0x87d JUMPDEST
0x87e PUSH1 0x3
0x880 SLOAD
0x881 PUSH1 0x1
0x883 PUSH1 0xa0
0x885 PUSH1 0x2
0x887 EXP
0x888 SUB
0x889 AND
0x88a ISZERO
0x88b DUP1
0x88c ISZERO
0x88d SWAP1
0x88e PUSH2 0x897
0x891 JUMPI
---
0x87d: JUMPDEST 
0x87e: V813 = 0x3
0x880: V814 = S[0x3]
0x881: V815 = 0x1
0x883: V816 = 0xa0
0x885: V817 = 0x2
0x887: V818 = EXP 0x2 0xa0
0x888: V819 = SUB 0x10000000000000000000000000000000000000000 0x1
0x889: V820 = AND 0xffffffffffffffffffffffffffffffffffffffff V814
0x88a: V821 = ISZERO V820
0x88c: V822 = ISZERO V821
0x88e: V823 = 0x897
0x891: JUMPI 0x897 V821
---
Entry stack: [V12, 0x228, 0x0, V759, V777]
Stack pops: 0
Stack additions: [V822]
Exit stack: [V12, 0x228, 0x0, V759, V777, V822]

================================

Block 0x892
[0x892:0x896]
---
Predecessors: [0x87d]
Successors: [0x897]
---
0x892 POP
0x893 PUSH1 0x0
0x895 DUP2
0x896 GT
---
0x893: V824 = 0x0
0x896: V825 = GT V777 0x0
---
Entry stack: [V12, 0x228, 0x0, V759, V777, V822]
Stack pops: 2
Stack additions: [S1, V825]
Exit stack: [V12, 0x228, 0x0, V759, V777, V825]

================================

Block 0x897
[0x897:0x89c]
---
Predecessors: [0x87d, 0x892]
Successors: [0x89d, 0x8cf]
---
0x897 JUMPDEST
0x898 ISZERO
0x899 PUSH2 0x8cf
0x89c JUMPI
---
0x897: JUMPDEST 
0x898: V826 = ISZERO S0
0x899: V827 = 0x8cf
0x89c: JUMPI 0x8cf V826
---
Entry stack: [V12, 0x228, 0x0, V759, V777, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x228, 0x0, V759, V777]

================================

Block 0x89d
[0x89d:0x8ca]
---
Predecessors: [0x897]
Successors: [0x8cb, 0x8cf]
---
0x89d PUSH1 0x3
0x89f SLOAD
0x8a0 PUSH1 0x1
0x8a2 PUSH1 0xa0
0x8a4 PUSH1 0x2
0x8a6 EXP
0x8a7 SUB
0x8a8 AND
0x8a9 DUP2
0x8aa ISZERO
0x8ab PUSH2 0x8fc
0x8ae MUL
0x8af DUP3
0x8b0 PUSH1 0x40
0x8b2 MLOAD
0x8b3 PUSH1 0x0
0x8b5 PUSH1 0x40
0x8b7 MLOAD
0x8b8 DUP1
0x8b9 DUP4
0x8ba SUB
0x8bb DUP2
0x8bc DUP6
0x8bd DUP9
0x8be DUP9
0x8bf CALL
0x8c0 SWAP4
0x8c1 POP
0x8c2 POP
0x8c3 POP
0x8c4 POP
0x8c5 ISZERO
0x8c6 ISZERO
0x8c7 PUSH2 0x8cf
0x8ca JUMPI
---
0x89d: V828 = 0x3
0x89f: V829 = S[0x3]
0x8a0: V830 = 0x1
0x8a2: V831 = 0xa0
0x8a4: V832 = 0x2
0x8a6: V833 = EXP 0x2 0xa0
0x8a7: V834 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a8: V835 = AND 0xffffffffffffffffffffffffffffffffffffffff V829
0x8aa: V836 = ISZERO V777
0x8ab: V837 = 0x8fc
0x8ae: V838 = MUL 0x8fc V836
0x8b0: V839 = 0x40
0x8b2: V840 = M[0x40]
0x8b3: V841 = 0x0
0x8b5: V842 = 0x40
0x8b7: V843 = M[0x40]
0x8ba: V844 = SUB V840 V843
0x8bf: V845 = CALL V838 V835 V777 V843 V844 V843 0x0
0x8c5: V846 = ISZERO V845
0x8c6: V847 = ISZERO V846
0x8c7: V848 = 0x8cf
0x8ca: JUMPI 0x8cf V847
---
Entry stack: [V12, 0x228, 0x0, V759, V777]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x228, 0x0, V759, V777]

================================

Block 0x8cb
[0x8cb:0x8ce]
---
Predecessors: [0x89d]
Successors: []
---
0x8cb PUSH1 0x0
0x8cd DUP1
0x8ce REVERT
---
0x8cb: V849 = 0x0
0x8ce: REVERT 0x0 0x0
---
Entry stack: [V12, 0x228, 0x0, V759, V777]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x228, 0x0, V759, V777]

================================

Block 0x8cf
[0x8cf:0x8cf]
---
Predecessors: [0x897, 0x89d]
Successors: [0x8d0]
---
0x8cf JUMPDEST
---
0x8cf: JUMPDEST 
---
Entry stack: [V12, 0x228, 0x0, V759, V777]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x228, 0x0, V759, V777]

================================

Block 0x8d0
[0x8d0:0x904]
---
Predecessors: [0x8cf]
Successors: [0x905, 0x909]
---
0x8d0 JUMPDEST
0x8d1 PUSH1 0x1
0x8d3 SLOAD
0x8d4 PUSH1 0x1
0x8d6 PUSH1 0xa0
0x8d8 PUSH1 0x2
0x8da EXP
0x8db SUB
0x8dc SWAP1
0x8dd DUP2
0x8de AND
0x8df SWAP1
0x8e0 ADDRESS
0x8e1 AND
0x8e2 BALANCE
0x8e3 DUP1
0x8e4 ISZERO
0x8e5 PUSH2 0x8fc
0x8e8 MUL
0x8e9 SWAP1
0x8ea PUSH1 0x40
0x8ec MLOAD
0x8ed PUSH1 0x0
0x8ef PUSH1 0x40
0x8f1 MLOAD
0x8f2 DUP1
0x8f3 DUP4
0x8f4 SUB
0x8f5 DUP2
0x8f6 DUP6
0x8f7 DUP9
0x8f8 DUP9
0x8f9 CALL
0x8fa SWAP4
0x8fb POP
0x8fc POP
0x8fd POP
0x8fe POP
0x8ff ISZERO
0x900 ISZERO
0x901 PUSH2 0x909
0x904 JUMPI
---
0x8d0: JUMPDEST 
0x8d1: V850 = 0x1
0x8d3: V851 = S[0x1]
0x8d4: V852 = 0x1
0x8d6: V853 = 0xa0
0x8d8: V854 = 0x2
0x8da: V855 = EXP 0x2 0xa0
0x8db: V856 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8de: V857 = AND 0xffffffffffffffffffffffffffffffffffffffff V851
0x8e0: V858 = ADDRESS
0x8e1: V859 = AND V858 0xffffffffffffffffffffffffffffffffffffffff
0x8e2: V860 = BALANCE V859
0x8e4: V861 = ISZERO V860
0x8e5: V862 = 0x8fc
0x8e8: V863 = MUL 0x8fc V861
0x8ea: V864 = 0x40
0x8ec: V865 = M[0x40]
0x8ed: V866 = 0x0
0x8ef: V867 = 0x40
0x8f1: V868 = M[0x40]
0x8f4: V869 = SUB V865 V868
0x8f9: V870 = CALL V863 V857 V860 V868 V869 V868 0x0
0x8ff: V871 = ISZERO V870
0x900: V872 = ISZERO V871
0x901: V873 = 0x909
0x904: JUMPI 0x909 V872
---
Entry stack: [V12, 0x228, 0x0, V759, V777]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x228, 0x0, V759, V777]

================================

Block 0x905
[0x905:0x908]
---
Predecessors: [0x8d0]
Successors: []
---
0x905 PUSH1 0x0
0x907 DUP1
0x908 REVERT
---
0x905: V874 = 0x0
0x908: REVERT 0x0 0x0
---
Entry stack: [V12, 0x228, 0x0, V759, V777]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x228, 0x0, V759, V777]

================================

Block 0x909
[0x909:0x90d]
---
Predecessors: [0x8d0]
Successors: [0x90e]
---
0x909 JUMPDEST
0x90a PUSH1 0x1
0x90c SWAP3
0x90d POP
---
0x909: JUMPDEST 
0x90a: V875 = 0x1
---
Entry stack: [V12, 0x228, 0x0, V759, V777]
Stack pops: 3
Stack additions: [0x1, S1, S0]
Exit stack: [V12, 0x228, 0x1, V759, V777]

================================

Block 0x90e
[0x90e:0x90e]
---
Predecessors: [0x909]
Successors: [0x90f]
---
0x90e JUMPDEST
---
0x90e: JUMPDEST 
---
Entry stack: [V12, 0x228, 0x1, V759, V777]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x228, 0x1, V759, V777]

================================

Block 0x90f
[0x90f:0x913]
---
Predecessors: [0x90e]
Successors: [0x228]
---
0x90f JUMPDEST
0x910 POP
0x911 POP
0x912 SWAP1
0x913 JUMP
---
0x90f: JUMPDEST 
0x913: JUMP 0x228
---
Entry stack: [V12, 0x228, 0x1, V759, V777]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, 0x1]

================================

Block 0x914
[0x914:0x919]
---
Predecessors: [0x247]
Successors: [0x150]
---
0x914 JUMPDEST
0x915 PUSH1 0x4
0x917 SLOAD
0x918 DUP2
0x919 JUMP
---
0x914: JUMPDEST 
0x915: V876 = 0x4
0x917: V877 = S[0x4]
0x919: JUMP 0x150
---
Entry stack: [V12, 0x150]
Stack pops: 1
Stack additions: [S0, V877]
Exit stack: [V12, 0x150, V877]

================================

Block 0x91a
[0x91a:0x928]
---
Predecessors: [0x26c]
Successors: [0x121]
---
0x91a JUMPDEST
0x91b PUSH1 0x1
0x91d SLOAD
0x91e PUSH1 0x1
0x920 PUSH1 0xa0
0x922 PUSH1 0x2
0x924 EXP
0x925 SUB
0x926 AND
0x927 DUP2
0x928 JUMP
---
0x91a: JUMPDEST 
0x91b: V878 = 0x1
0x91d: V879 = S[0x1]
0x91e: V880 = 0x1
0x920: V881 = 0xa0
0x922: V882 = 0x2
0x924: V883 = EXP 0x2 0xa0
0x925: V884 = SUB 0x10000000000000000000000000000000000000000 0x1
0x926: V885 = AND 0xffffffffffffffffffffffffffffffffffffffff V879
0x928: JUMP 0x121
---
Entry stack: [V12, 0x121]
Stack pops: 1
Stack additions: [S0, V885]
Exit stack: [V12, 0x121, V885]

================================

Block 0x929
[0x929:0x92e]
---
Predecessors: [0x29b]
Successors: [0x150]
---
0x929 JUMPDEST
0x92a PUSH1 0x7
0x92c SLOAD
0x92d DUP2
0x92e JUMP
---
0x929: JUMPDEST 
0x92a: V886 = 0x7
0x92c: V887 = S[0x7]
0x92e: JUMP 0x150
---
Entry stack: [V12, 0x150]
Stack pops: 1
Stack additions: [S0, V887]
Exit stack: [V12, 0x150, V887]

================================

Block 0x92f
[0x92f:0x93d]
---
Predecessors: [0x2c0]
Successors: [0x121]
---
0x92f JUMPDEST
0x930 PUSH1 0xd
0x932 SLOAD
0x933 PUSH1 0x1
0x935 PUSH1 0xa0
0x937 PUSH1 0x2
0x939 EXP
0x93a SUB
0x93b AND
0x93c DUP2
0x93d JUMP
---
0x92f: JUMPDEST 
0x930: V888 = 0xd
0x932: V889 = S[0xd]
0x933: V890 = 0x1
0x935: V891 = 0xa0
0x937: V892 = 0x2
0x939: V893 = EXP 0x2 0xa0
0x93a: V894 = SUB 0x10000000000000000000000000000000000000000 0x1
0x93b: V895 = AND 0xffffffffffffffffffffffffffffffffffffffff V889
0x93d: JUMP 0x121
---
Entry stack: [V12, 0x121]
Stack pops: 1
Stack additions: [S0, V895]
Exit stack: [V12, 0x121, V895]

================================

Block 0x93e
[0x93e:0x98d]
---
Predecessors: [0x2ef]
Successors: [0x98e, 0x9d4]
---
0x93e JUMPDEST
0x93f PUSH1 0xc
0x941 DUP1
0x942 SLOAD
0x943 PUSH1 0x1
0x945 DUP2
0x946 PUSH1 0x1
0x948 AND
0x949 ISZERO
0x94a PUSH2 0x100
0x94d MUL
0x94e SUB
0x94f AND
0x950 PUSH1 0x2
0x952 SWAP1
0x953 DIV
0x954 DUP1
0x955 PUSH1 0x1f
0x957 ADD
0x958 PUSH1 0x20
0x95a DUP1
0x95b SWAP2
0x95c DIV
0x95d MUL
0x95e PUSH1 0x20
0x960 ADD
0x961 PUSH1 0x40
0x963 MLOAD
0x964 SWAP1
0x965 DUP2
0x966 ADD
0x967 PUSH1 0x40
0x969 MSTORE
0x96a DUP1
0x96b SWAP3
0x96c SWAP2
0x96d SWAP1
0x96e DUP2
0x96f DUP2
0x970 MSTORE
0x971 PUSH1 0x20
0x973 ADD
0x974 DUP3
0x975 DUP1
0x976 SLOAD
0x977 PUSH1 0x1
0x979 DUP2
0x97a PUSH1 0x1
0x97c AND
0x97d ISZERO
0x97e PUSH2 0x100
0x981 MUL
0x982 SUB
0x983 AND
0x984 PUSH1 0x2
0x986 SWAP1
0x987 DIV
0x988 DUP1
0x989 ISZERO
0x98a PUSH2 0x9d4
0x98d JUMPI
---
0x93e: JUMPDEST 
0x93f: V896 = 0xc
0x942: V897 = S[0xc]
0x943: V898 = 0x1
0x946: V899 = 0x1
0x948: V900 = AND 0x1 V897
0x949: V901 = ISZERO V900
0x94a: V902 = 0x100
0x94d: V903 = MUL 0x100 V901
0x94e: V904 = SUB V903 0x1
0x94f: V905 = AND V904 V897
0x950: V906 = 0x2
0x953: V907 = DIV V905 0x2
0x955: V908 = 0x1f
0x957: V909 = ADD 0x1f V907
0x958: V910 = 0x20
0x95c: V911 = DIV V909 0x20
0x95d: V912 = MUL V911 0x20
0x95e: V913 = 0x20
0x960: V914 = ADD 0x20 V912
0x961: V915 = 0x40
0x963: V916 = M[0x40]
0x966: V917 = ADD V916 V914
0x967: V918 = 0x40
0x969: M[0x40] = V917
0x970: M[V916] = V907
0x971: V919 = 0x20
0x973: V920 = ADD 0x20 V916
0x976: V921 = S[0xc]
0x977: V922 = 0x1
0x97a: V923 = 0x1
0x97c: V924 = AND 0x1 V921
0x97d: V925 = ISZERO V924
0x97e: V926 = 0x100
0x981: V927 = MUL 0x100 V925
0x982: V928 = SUB V927 0x1
0x983: V929 = AND V928 V921
0x984: V930 = 0x2
0x987: V931 = DIV V929 0x2
0x989: V932 = ISZERO V931
0x98a: V933 = 0x9d4
0x98d: JUMPI 0x9d4 V932
---
Entry stack: [V12, 0x2f7]
Stack pops: 0
Stack additions: [V916, 0xc, V907, V920, 0xc, V931]
Exit stack: [V12, 0x2f7, V916, 0xc, V907, V920, 0xc, V931]

================================

Block 0x98e
[0x98e:0x995]
---
Predecessors: [0x93e]
Successors: [0x996, 0x9a9]
---
0x98e DUP1
0x98f PUSH1 0x1f
0x991 LT
0x992 PUSH2 0x9a9
0x995 JUMPI
---
0x98f: V934 = 0x1f
0x991: V935 = LT 0x1f V931
0x992: V936 = 0x9a9
0x995: JUMPI 0x9a9 V935
---
Entry stack: [V12, 0x2f7, V916, 0xc, V907, V920, 0xc, V931]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2f7, V916, 0xc, V907, V920, 0xc, V931]

================================

Block 0x996
[0x996:0x9a8]
---
Predecessors: [0x98e]
Successors: [0x9d4]
---
0x996 PUSH2 0x100
0x999 DUP1
0x99a DUP4
0x99b SLOAD
0x99c DIV
0x99d MUL
0x99e DUP4
0x99f MSTORE
0x9a0 SWAP2
0x9a1 PUSH1 0x20
0x9a3 ADD
0x9a4 SWAP2
0x9a5 PUSH2 0x9d4
0x9a8 JUMP
---
0x996: V937 = 0x100
0x99b: V938 = S[0xc]
0x99c: V939 = DIV V938 0x100
0x99d: V940 = MUL V939 0x100
0x99f: M[V920] = V940
0x9a1: V941 = 0x20
0x9a3: V942 = ADD 0x20 V920
0x9a5: V943 = 0x9d4
0x9a8: JUMP 0x9d4
---
Entry stack: [V12, 0x2f7, V916, 0xc, V907, V920, 0xc, V931]
Stack pops: 3
Stack additions: [V942, S1, S0]
Exit stack: [V12, 0x2f7, V916, 0xc, V907, V942, 0xc, V931]

================================

Block 0x9a9
[0x9a9:0x9b6]
---
Predecessors: [0x98e]
Successors: [0x9b7]
---
0x9a9 JUMPDEST
0x9aa DUP3
0x9ab ADD
0x9ac SWAP2
0x9ad SWAP1
0x9ae PUSH1 0x0
0x9b0 MSTORE
0x9b1 PUSH1 0x20
0x9b3 PUSH1 0x0
0x9b5 SHA3
0x9b6 SWAP1
---
0x9a9: JUMPDEST 
0x9ab: V944 = ADD V920 V931
0x9ae: V945 = 0x0
0x9b0: M[0x0] = 0xc
0x9b1: V946 = 0x20
0x9b3: V947 = 0x0
0x9b5: V948 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x2f7, V916, 0xc, V907, V920, 0xc, V931]
Stack pops: 3
Stack additions: [V944, V948, S2]
Exit stack: [V12, 0x2f7, V916, 0xc, V907, V944, V948, V920]

================================

Block 0x9b7
[0x9b7:0x9ca]
---
Predecessors: [0x9a9, 0x9b7]
Successors: [0x9b7, 0x9cb]
---
0x9b7 JUMPDEST
0x9b8 DUP2
0x9b9 SLOAD
0x9ba DUP2
0x9bb MSTORE
0x9bc SWAP1
0x9bd PUSH1 0x1
0x9bf ADD
0x9c0 SWAP1
0x9c1 PUSH1 0x20
0x9c3 ADD
0x9c4 DUP1
0x9c5 DUP4
0x9c6 GT
0x9c7 PUSH2 0x9b7
0x9ca JUMPI
---
0x9b7: JUMPDEST 
0x9b9: V949 = S[S1]
0x9bb: M[S0] = V949
0x9bd: V950 = 0x1
0x9bf: V951 = ADD 0x1 S1
0x9c1: V952 = 0x20
0x9c3: V953 = ADD 0x20 S0
0x9c6: V954 = GT V944 V953
0x9c7: V955 = 0x9b7
0x9ca: JUMPI 0x9b7 V954
---
Entry stack: [V12, 0x2f7, V916, 0xc, V907, V944, S1, S0]
Stack pops: 3
Stack additions: [S2, V951, V953]
Exit stack: [V12, 0x2f7, V916, 0xc, V907, V944, V951, V953]

================================

Block 0x9cb
[0x9cb:0x9d3]
---
Predecessors: [0x9b7]
Successors: [0x9d4]
---
0x9cb DUP3
0x9cc SWAP1
0x9cd SUB
0x9ce PUSH1 0x1f
0x9d0 AND
0x9d1 DUP3
0x9d2 ADD
0x9d3 SWAP2
---
0x9cd: V956 = SUB V953 V944
0x9ce: V957 = 0x1f
0x9d0: V958 = AND 0x1f V956
0x9d2: V959 = ADD V944 V958
---
Entry stack: [V12, 0x2f7, V916, 0xc, V907, V944, V951, V953]
Stack pops: 3
Stack additions: [V959, S1, S2]
Exit stack: [V12, 0x2f7, V916, 0xc, V907, V959, V951, V944]

================================

Block 0x9d4
[0x9d4:0x9db]
---
Predecessors: [0x93e, 0x996, 0x9cb]
Successors: [0x2f7]
---
0x9d4 JUMPDEST
0x9d5 POP
0x9d6 POP
0x9d7 POP
0x9d8 POP
0x9d9 POP
0x9da DUP2
0x9db JUMP
---
0x9d4: JUMPDEST 
0x9db: JUMP 0x2f7
---
Entry stack: [V12, 0x2f7, V916, 0xc, V907, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0x2f7, V916]

================================

Block 0x9dc
[0x9dc:0x9e4]
---
Predecessors: [0x37a]
Successors: [0x228]
---
0x9dc JUMPDEST
0x9dd PUSH1 0xb
0x9df SLOAD
0x9e0 PUSH1 0xff
0x9e2 AND
0x9e3 DUP2
0x9e4 JUMP
---
0x9dc: JUMPDEST 
0x9dd: V960 = 0xb
0x9df: V961 = S[0xb]
0x9e0: V962 = 0xff
0x9e2: V963 = AND 0xff V961
0x9e4: JUMP 0x228
---
Entry stack: [V12, 0x228]
Stack pops: 1
Stack additions: [S0, V963]
Exit stack: [V12, 0x228, V963]

================================

Block 0x9e5
[0x9e5:0x9ea]
---
Predecessors: [0x3a1]
Successors: [0x150]
---
0x9e5 JUMPDEST
0x9e6 PUSH1 0xa
0x9e8 SLOAD
0x9e9 DUP2
0x9ea JUMP
---
0x9e5: JUMPDEST 
0x9e6: V964 = 0xa
0x9e8: V965 = S[0xa]
0x9ea: JUMP 0x150
---
Entry stack: [V12, 0x150]
Stack pops: 1
Stack additions: [S0, V965]
Exit stack: [V12, 0x150, V965]

================================

Block 0x9eb
[0x9eb:0xa01]
---
Predecessors: [0x3e2]
Successors: [0xa02, 0xa06]
---
0x9eb JUMPDEST
0x9ec PUSH1 0x0
0x9ee SLOAD
0x9ef CALLER
0x9f0 PUSH1 0x1
0x9f2 PUSH1 0xa0
0x9f4 PUSH1 0x2
0x9f6 EXP
0x9f7 SUB
0x9f8 SWAP1
0x9f9 DUP2
0x9fa AND
0x9fb SWAP2
0x9fc AND
0x9fd EQ
0x9fe PUSH2 0xa06
0xa01 JUMPI
---
0x9eb: JUMPDEST 
0x9ec: V966 = 0x0
0x9ee: V967 = S[0x0]
0x9ef: V968 = CALLER
0x9f0: V969 = 0x1
0x9f2: V970 = 0xa0
0x9f4: V971 = 0x2
0x9f6: V972 = EXP 0x2 0xa0
0x9f7: V973 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9fa: V974 = AND 0xffffffffffffffffffffffffffffffffffffffff V968
0x9fc: V975 = AND V967 0xffffffffffffffffffffffffffffffffffffffff
0x9fd: V976 = EQ V975 V974
0x9fe: V977 = 0xa06
0xa01: JUMPI 0xa06 V976
---
Entry stack: [V12, 0x10c, V350]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V350]

================================

Block 0xa02
[0xa02:0xa05]
---
Predecessors: [0x9eb]
Successors: []
---
0xa02 PUSH1 0x0
0xa04 DUP1
0xa05 REVERT
---
0xa02: V978 = 0x0
0xa05: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10c, V350]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V350]

================================

Block 0xa06
[0xa06:0xa2e]
---
Predecessors: [0x9eb]
Successors: [0xa2f]
---
0xa06 JUMPDEST
0xa07 PUSH1 0x0
0xa09 DUP1
0xa0a SLOAD
0xa0b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa20 NOT
0xa21 AND
0xa22 PUSH1 0x1
0xa24 PUSH1 0xa0
0xa26 PUSH1 0x2
0xa28 EXP
0xa29 SUB
0xa2a DUP4
0xa2b AND
0xa2c OR
0xa2d SWAP1
0xa2e SSTORE
---
0xa06: JUMPDEST 
0xa07: V979 = 0x0
0xa0a: V980 = S[0x0]
0xa0b: V981 = 0xffffffffffffffffffffffffffffffffffffffff
0xa20: V982 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa21: V983 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V980
0xa22: V984 = 0x1
0xa24: V985 = 0xa0
0xa26: V986 = 0x2
0xa28: V987 = EXP 0x2 0xa0
0xa29: V988 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2b: V989 = AND V350 0xffffffffffffffffffffffffffffffffffffffff
0xa2c: V990 = OR V989 V983
0xa2e: S[0x0] = V990
---
Entry stack: [V12, 0x10c, V350]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x10c, V350]

================================

Block 0xa2f
[0xa2f:0xa2f]
---
Predecessors: [0xa06]
Successors: [0xa30]
---
0xa2f JUMPDEST
---
0xa2f: JUMPDEST 
---
Entry stack: [V12, 0x10c, V350]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V350]

================================

Block 0xa30
[0xa30:0xa32]
---
Predecessors: [0xa2f]
Successors: [0x10c]
---
0xa30 JUMPDEST
0xa31 POP
0xa32 JUMP
---
0xa30: JUMPDEST 
0xa32: JUMP 0x10c
---
Entry stack: [V12, 0x10c, V350]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xa33
[0xa33:0xa49]
---
Predecessors: [0x403]
Successors: [0xa4a, 0xa4e]
---
0xa33 JUMPDEST
0xa34 PUSH1 0x0
0xa36 SLOAD
0xa37 CALLER
0xa38 PUSH1 0x1
0xa3a PUSH1 0xa0
0xa3c PUSH1 0x2
0xa3e EXP
0xa3f SUB
0xa40 SWAP1
0xa41 DUP2
0xa42 AND
0xa43 SWAP2
0xa44 AND
0xa45 EQ
0xa46 PUSH2 0xa4e
0xa49 JUMPI
---
0xa33: JUMPDEST 
0xa34: V991 = 0x0
0xa36: V992 = S[0x0]
0xa37: V993 = CALLER
0xa38: V994 = 0x1
0xa3a: V995 = 0xa0
0xa3c: V996 = 0x2
0xa3e: V997 = EXP 0x2 0xa0
0xa3f: V998 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa42: V999 = AND 0xffffffffffffffffffffffffffffffffffffffff V993
0xa44: V1000 = AND V992 0xffffffffffffffffffffffffffffffffffffffff
0xa45: V1001 = EQ V1000 V999
0xa46: V1002 = 0xa4e
0xa49: JUMPI 0xa4e V1001
---
Entry stack: [V12, 0x10c, V358]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V358]

================================

Block 0xa4a
[0xa4a:0xa4d]
---
Predecessors: [0xa33]
Successors: []
---
0xa4a PUSH1 0x0
0xa4c DUP1
0xa4d REVERT
---
0xa4a: V1003 = 0x0
0xa4d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10c, V358]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V358]

================================

Block 0xa4e
[0xa4e:0xa53]
---
Predecessors: [0xa33]
Successors: [0xa54]
---
0xa4e JUMPDEST
0xa4f PUSH1 0x8
0xa51 DUP2
0xa52 SWAP1
0xa53 SSTORE
---
0xa4e: JUMPDEST 
0xa4f: V1004 = 0x8
0xa53: S[0x8] = V358
---
Entry stack: [V12, 0x10c, V358]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x10c, V358]

================================

Block 0xa54
[0xa54:0xa54]
---
Predecessors: [0xa4e]
Successors: [0xa55]
---
0xa54 JUMPDEST
---
0xa54: JUMPDEST 
---
Entry stack: [V12, 0x10c, V358]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V358]

================================

Block 0xa55
[0xa55:0xa57]
---
Predecessors: [0xa54]
Successors: [0x10c]
---
0xa55 JUMPDEST
0xa56 POP
0xa57 JUMP
---
0xa55: JUMPDEST 
0xa57: JUMP 0x10c
---
Entry stack: [V12, 0x10c, V358]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xa58
[0xa58:0xa66]
---
Predecessors: [0x41b]
Successors: [0x121]
---
0xa58 JUMPDEST
0xa59 PUSH1 0xe
0xa5b SLOAD
0xa5c PUSH1 0x1
0xa5e PUSH1 0xa0
0xa60 PUSH1 0x2
0xa62 EXP
0xa63 SUB
0xa64 AND
0xa65 DUP2
0xa66 JUMP
---
0xa58: JUMPDEST 
0xa59: V1005 = 0xe
0xa5b: V1006 = S[0xe]
0xa5c: V1007 = 0x1
0xa5e: V1008 = 0xa0
0xa60: V1009 = 0x2
0xa62: V1010 = EXP 0x2 0xa0
0xa63: V1011 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa64: V1012 = AND 0xffffffffffffffffffffffffffffffffffffffff V1006
0xa66: JUMP 0x121
---
Entry stack: [V12, 0x121]
Stack pops: 1
Stack additions: [S0, V1012]
Exit stack: [V12, 0x121, V1012]

================================

Block 0xa67
[0xa67:0xa75]
---
Predecessors: [0x44a]
Successors: [0x121]
---
0xa67 JUMPDEST
0xa68 PUSH1 0x0
0xa6a SLOAD
0xa6b PUSH1 0x1
0xa6d PUSH1 0xa0
0xa6f PUSH1 0x2
0xa71 EXP
0xa72 SUB
0xa73 AND
0xa74 DUP2
0xa75 JUMP
---
0xa67: JUMPDEST 
0xa68: V1013 = 0x0
0xa6a: V1014 = S[0x0]
0xa6b: V1015 = 0x1
0xa6d: V1016 = 0xa0
0xa6f: V1017 = 0x2
0xa71: V1018 = EXP 0x2 0xa0
0xa72: V1019 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa73: V1020 = AND 0xffffffffffffffffffffffffffffffffffffffff V1014
0xa75: JUMP 0x121
---
Entry stack: [V12, 0x121]
Stack pops: 1
Stack additions: [S0, V1020]
Exit stack: [V12, 0x121, V1020]

================================

Block 0xa76
[0xa76:0xa8c]
---
Predecessors: [0x479]
Successors: [0xa8d, 0xa91]
---
0xa76 JUMPDEST
0xa77 PUSH1 0x0
0xa79 SLOAD
0xa7a CALLER
0xa7b PUSH1 0x1
0xa7d PUSH1 0xa0
0xa7f PUSH1 0x2
0xa81 EXP
0xa82 SUB
0xa83 SWAP1
0xa84 DUP2
0xa85 AND
0xa86 SWAP2
0xa87 AND
0xa88 EQ
0xa89 PUSH2 0xa91
0xa8c JUMPI
---
0xa76: JUMPDEST 
0xa77: V1021 = 0x0
0xa79: V1022 = S[0x0]
0xa7a: V1023 = CALLER
0xa7b: V1024 = 0x1
0xa7d: V1025 = 0xa0
0xa7f: V1026 = 0x2
0xa81: V1027 = EXP 0x2 0xa0
0xa82: V1028 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa85: V1029 = AND 0xffffffffffffffffffffffffffffffffffffffff V1023
0xa87: V1030 = AND V1022 0xffffffffffffffffffffffffffffffffffffffff
0xa88: V1031 = EQ V1030 V1029
0xa89: V1032 = 0xa91
0xa8c: JUMPI 0xa91 V1031
---
Entry stack: [V12, 0x10c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c]

================================

Block 0xa8d
[0xa8d:0xa90]
---
Predecessors: [0xa76]
Successors: []
---
0xa8d PUSH1 0x0
0xa8f DUP1
0xa90 REVERT
---
0xa8d: V1033 = 0x0
0xa90: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c]

================================

Block 0xa91
[0xa91:0xac5]
---
Predecessors: [0xa76]
Successors: [0x7a6, 0xac6]
---
0xa91 JUMPDEST
0xa92 PUSH1 0x2
0xa94 SLOAD
0xa95 PUSH1 0x1
0xa97 PUSH1 0xa0
0xa99 PUSH1 0x2
0xa9b EXP
0xa9c SUB
0xa9d SWAP1
0xa9e DUP2
0xa9f AND
0xaa0 SWAP1
0xaa1 ADDRESS
0xaa2 AND
0xaa3 BALANCE
0xaa4 DUP1
0xaa5 ISZERO
0xaa6 PUSH2 0x8fc
0xaa9 MUL
0xaaa SWAP1
0xaab PUSH1 0x40
0xaad MLOAD
0xaae PUSH1 0x0
0xab0 PUSH1 0x40
0xab2 MLOAD
0xab3 DUP1
0xab4 DUP4
0xab5 SUB
0xab6 DUP2
0xab7 DUP6
0xab8 DUP9
0xab9 DUP9
0xaba CALL
0xabb SWAP4
0xabc POP
0xabd POP
0xabe POP
0xabf POP
0xac0 ISZERO
0xac1 ISZERO
0xac2 PUSH2 0x7a6
0xac5 JUMPI
---
0xa91: JUMPDEST 
0xa92: V1034 = 0x2
0xa94: V1035 = S[0x2]
0xa95: V1036 = 0x1
0xa97: V1037 = 0xa0
0xa99: V1038 = 0x2
0xa9b: V1039 = EXP 0x2 0xa0
0xa9c: V1040 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa9f: V1041 = AND 0xffffffffffffffffffffffffffffffffffffffff V1035
0xaa1: V1042 = ADDRESS
0xaa2: V1043 = AND V1042 0xffffffffffffffffffffffffffffffffffffffff
0xaa3: V1044 = BALANCE V1043
0xaa5: V1045 = ISZERO V1044
0xaa6: V1046 = 0x8fc
0xaa9: V1047 = MUL 0x8fc V1045
0xaab: V1048 = 0x40
0xaad: V1049 = M[0x40]
0xaae: V1050 = 0x0
0xab0: V1051 = 0x40
0xab2: V1052 = M[0x40]
0xab5: V1053 = SUB V1049 V1052
0xaba: V1054 = CALL V1047 V1041 V1044 V1052 V1053 V1052 0x0
0xac0: V1055 = ISZERO V1054
0xac1: V1056 = ISZERO V1055
0xac2: V1057 = 0x7a6
0xac5: JUMPI 0x7a6 V1056
---
Entry stack: [V12, 0x10c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c]

================================

Block 0xac6
[0xac6:0xac9]
---
Predecessors: [0xa91]
Successors: []
---
0xac6 PUSH1 0x0
0xac8 DUP1
0xac9 REVERT
---
0xac6: V1058 = 0x0
0xac9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c]

================================

Block 0xaca
[0xaca:0xaca]
---
Predecessors: []
Successors: [0xacb]
---
0xaca JUMPDEST
---
0xaca: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xacb
[0xacb:0xacb]
---
Predecessors: [0xaca]
Successors: [0xacc]
---
0xacb JUMPDEST
---
0xacb: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xacc
[0xacc:0xacd]
---
Predecessors: [0xacb]
Successors: []
Has unresolved jump.
---
0xacc JUMPDEST
0xacd JUMP
---
0xacc: JUMPDEST 
0xacd: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xace
[0xace:0xada]
---
Predecessors: [0x529]
Successors: [0xadb, 0xaea]
---
0xace JUMPDEST
0xacf PUSH1 0x0
0xad1 DUP3
0xad2 DUP3
0xad3 MUL
0xad4 DUP4
0xad5 ISZERO
0xad6 DUP1
0xad7 PUSH2 0xaea
0xada JUMPI
---
0xace: JUMPDEST 
0xacf: V1059 = 0x0
0xad3: V1060 = MUL V476 V478
0xad5: V1061 = ISZERO V478
0xad7: V1062 = 0xaea
0xada: JUMPI 0xaea V1061
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, V476, 0x0, V475, 0x541, V478, V476]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1060, V1061]
Exit stack: [V12, {0x10a, 0x228}, 0x0, V476, 0x0, V475, 0x541, V478, V476, 0x0, V1060, V1061]

================================

Block 0xadb
[0xadb:0xae5]
---
Predecessors: [0xace]
Successors: [0xae6, 0xae7]
---
0xadb POP
0xadc DUP3
0xadd DUP5
0xade DUP3
0xadf DUP2
0xae0 ISZERO
0xae1 ISZERO
0xae2 PUSH2 0xae7
0xae5 JUMPI
---
0xae0: V1063 = ISZERO V478
0xae1: V1064 = ISZERO V1063
0xae2: V1065 = 0xae7
0xae5: JUMPI 0xae7 V1064
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, V476, 0x0, V475, 0x541, V478, V476, 0x0, V1060, V1061]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, {0x10a, 0x228}, 0x0, V476, 0x0, V475, 0x541, V478, V476, 0x0, V1060, V476, V478, V1060]

================================

Block 0xae6
[0xae6:0xae6]
---
Predecessors: [0xadb]
Successors: []
---
0xae6 INVALID
---
0xae6: INVALID 
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, V476, 0x0, V475, 0x541, V478, V476, 0x0, V1060, V476, V478, V1060]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, V476, 0x0, V475, 0x541, V478, V476, 0x0, V1060, V476, V478, V1060]

================================

Block 0xae7
[0xae7:0xae9]
---
Predecessors: [0xadb]
Successors: [0xaea]
---
0xae7 JUMPDEST
0xae8 DIV
0xae9 EQ
---
0xae7: JUMPDEST 
0xae8: V1066 = DIV V1060 V478
0xae9: V1067 = EQ V1066 V476
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, V476, 0x0, V475, 0x541, V478, V476, 0x0, V1060, V476, V478, V1060]
Stack pops: 3
Stack additions: [V1067]
Exit stack: [V12, {0x10a, 0x228}, 0x0, V476, 0x0, V475, 0x541, V478, V476, 0x0, V1060, V1067]

================================

Block 0xaea
[0xaea:0xaf0]
---
Predecessors: [0xace, 0xae7]
Successors: [0xaf1, 0xaf2]
---
0xaea JUMPDEST
0xaeb ISZERO
0xaec ISZERO
0xaed PUSH2 0xaf2
0xaf0 JUMPI
---
0xaea: JUMPDEST 
0xaeb: V1068 = ISZERO S0
0xaec: V1069 = ISZERO V1068
0xaed: V1070 = 0xaf2
0xaf0: JUMPI 0xaf2 V1069
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, V476, 0x0, V475, 0x541, V478, V476, 0x0, V1060, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, V476, 0x0, V475, 0x541, V478, V476, 0x0, V1060]

================================

Block 0xaf1
[0xaf1:0xaf1]
---
Predecessors: [0xaea]
Successors: []
---
0xaf1 INVALID
---
0xaf1: INVALID 
---
Entry stack: [V12, {0x10a, 0x228}, 0x0, V476, 0x0, V475, 0x541, V478, V476, 0x0, V1060]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x10a, 0x228}, 0x0, V476, 0x0, V475, 0x541, V478, V476, 0x0, V1060]

================================

Block 0xaf2
[0xaf2:0xaf5]
---
Predecessors: [0xaea, 0xafd]
Successors: [0xaf6]
---
0xaf2 JUMPDEST
0xaf3 DUP1
0xaf4 SWAP2
0xaf5 POP
---
0xaf2: JUMPDEST 
---
Entry stack: [V12, S9, {0x0, 0x10a, 0x228}, S7, S6, S5, {0x541, 0x5c7, 0x5e5}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, S9, {0x0, 0x10a, 0x228}, S7, S6, S5, {0x541, 0x5c7, 0x5e5}, S3, S2, S0, S0]

================================

Block 0xaf6
[0xaf6:0xafc]
---
Predecessors: [0xaf2]
Successors: [0x541, 0x5c7, 0x5e5]
---
0xaf6 JUMPDEST
0xaf7 POP
0xaf8 SWAP3
0xaf9 SWAP2
0xafa POP
0xafb POP
0xafc JUMP
---
0xaf6: JUMPDEST 
0xafc: JUMP {0x541, 0x5c7, 0x5e5}
---
Entry stack: [V12, S9, {0x0, 0x10a, 0x228}, S7, S6, S5, {0x541, 0x5c7, 0x5e5}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, S9, {0x0, 0x10a, 0x228}, S7, S6, S5, S1]

================================

Block 0xafd
[0xafd:0xb0a]
---
Predecessors: [0x5b1, 0x5d2]
Successors: [0xaf2, 0xb0b]
---
0xafd JUMPDEST
0xafe PUSH1 0x0
0xb00 DUP3
0xb01 DUP3
0xb02 ADD
0xb03 DUP4
0xb04 DUP2
0xb05 LT
0xb06 ISZERO
0xb07 PUSH2 0xaf2
0xb0a JUMPI
---
0xafd: JUMPDEST 
0xafe: V1071 = 0x0
0xb02: V1072 = ADD S0 S1
0xb05: V1073 = LT V1072 S1
0xb06: V1074 = ISZERO V1073
0xb07: V1075 = 0xaf2
0xb0a: JUMPI 0xaf2 V1074
---
Entry stack: [V12, S7, {0x0, 0x10a, 0x228}, S5, S4, S3, {0x5c7, 0x5e5}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1072]
Exit stack: [V12, S7, {0x0, 0x10a, 0x228}, S5, S4, S3, {0x5c7, 0x5e5}, S1, S0, 0x0, V1072]

================================

Block 0xb0b
[0xb0b:0xb0b]
---
Predecessors: [0xafd]
Successors: []
---
0xb0b INVALID
---
0xb0b: INVALID 
---
Entry stack: [V12, S9, {0x0, 0x10a, 0x228}, S7, S6, S5, {0x5c7, 0x5e5}, S3, S2, 0x0, V1072]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, {0x0, 0x10a, 0x228}, S7, S6, S5, {0x5c7, 0x5e5}, S3, S2, 0x0, V1072]

================================

Block 0xb0c
[0xb0c:0xb0f]
---
Predecessors: []
Successors: [0xb10]
---
0xb0c JUMPDEST
0xb0d DUP1
0xb0e SWAP2
0xb0f POP
---
0xb0c: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0xb10
[0xb10:0xb55]
---
Predecessors: [0xb0c]
Successors: []
---
0xb10 JUMPDEST
0xb11 POP
0xb12 SWAP3
0xb13 SWAP2
0xb14 POP
0xb15 POP
0xb16 JUMP
0xb17 STOP
0xb18 LOG1
0xb19 PUSH6 0x627a7a723058
0xb20 SHA3
0xb21 MISSING 0x2c
0xb22 SHL
0xb23 CALLDATASIZE
0xb24 MISSING 0xc1
0xb25 MISSING 0xc6
0xb26 PUSH6 0xaf990f0bb543
0xb2d DUP10
0xb2e MISSING 0xd7
0xb2f MISSING 0x5f
0xb30 POP
0xb31 MISSING 0xbb
0xb32 DUP4
0xb33 MISSING 0xd2
0xb34 MISSING 0xd0
0xb35 CALLDATACOPY
0xb36 MISSING 0xc0
0xb37 DUP15
0xb38 MISSING 0xce
0xb39 MISSING 0xbe
0xb3a PUSH27 0x8f2be3cadca50029
---
0xb10: JUMPDEST 
0xb16: JUMP S4
0xb17: STOP 
0xb18: LOG S0 S1 S2
0xb19: V1076 = 0x627a7a723058
0xb20: V1077 = SHA3 0x627a7a723058 S3
0xb21: MISSING 0x2c
0xb22: V1078 = SHL S0 S1
0xb23: V1079 = CALLDATASIZE
0xb24: MISSING 0xc1
0xb25: MISSING 0xc6
0xb26: V1080 = 0xaf990f0bb543
0xb2e: MISSING 0xd7
0xb2f: MISSING 0x5f
0xb31: MISSING 0xbb
0xb33: MISSING 0xd2
0xb34: MISSING 0xd0
0xb35: CALLDATACOPY S0 S1 S2
0xb36: MISSING 0xc0
0xb38: MISSING 0xce
0xb39: MISSING 0xbe
0xb3a: V1081 = 0x8f2be3cadca50029
---
Entry stack: [S1, S0]
Stack pops: 33296
Stack additions: [0x8f2be3cadca50029]
Exit stack: []

================================

Function 0:
Public function signature: 0x18ad9260
Entry block: 0x10e
Exit block: 0x121
Body: 0x10e, 0x115, 0x119, 0x121, 0x756

Function 1:
Public function signature: 0x1d85de4f
Entry block: 0x13d
Exit block: 0x150
Body: 0x13d, 0x144, 0x148, 0x150, 0x765

Function 2:
Public function signature: 0x28d1226a
Entry block: 0x162
Exit block: 0x150
Body: 0x150, 0x162, 0x169, 0x16d, 0x76b

Function 3:
Public function signature: 0x3197cbb6
Entry block: 0x187
Exit block: 0x150
Body: 0x150, 0x187, 0x18e, 0x192, 0x771

Function 4:
Public function signature: 0x361c3308
Entry block: 0x1ac
Exit block: 0x150
Body: 0x150, 0x1ac, 0x1b3, 0x1b7, 0x777

Function 5:
Public function signature: 0x41c0e1b5
Entry block: 0x1d1
Exit block: 0x798
Body: 0x1d1, 0x1d8, 0x1dc, 0x77d, 0x794, 0x798

Function 6:
Public function signature: 0x45e05f43
Entry block: 0x1e6
Exit block: 0x121
Body: 0x121, 0x1e6, 0x1ed, 0x1f1, 0x7a9

Function 7:
Public function signature: 0x4bb278f3
Entry block: 0x215
Exit block: 0x228
Body: 0x215, 0x21c, 0x220, 0x228, 0x7b8, 0x7d4, 0x7d8, 0x7e2, 0x7e6, 0x807, 0x824, 0x825, 0x83f, 0x844, 0x84a, 0x878, 0x87c, 0x87d, 0x892, 0x897, 0x89d, 0x8cb, 0x8cf, 0x8d0, 0x905, 0x909, 0x90e, 0x90f

Function 8:
Public function signature: 0x63b20117
Entry block: 0x23c
Exit block: 0x150
Body: 0x150, 0x23c, 0x243, 0x247, 0x914

Function 9:
Public function signature: 0x63bd1d4a
Entry block: 0x261
Exit block: 0x121
Body: 0x121, 0x261, 0x268, 0x26c, 0x91a

Function 10:
Public function signature: 0x78e97925
Entry block: 0x290
Exit block: 0x150
Body: 0x150, 0x290, 0x297, 0x29b, 0x929

Function 11:
Public function signature: 0x7bb98a68
Entry block: 0x2b5
Exit block: 0x121
Body: 0x121, 0x2b5, 0x2bc, 0x2c0, 0x92f

Function 12:
Public function signature: 0x8ba47bdd
Entry block: 0x2e4
Exit block: 0x361
Body: 0x2e4, 0x2eb, 0x2ef, 0x2f7, 0x31b, 0x324, 0x32c, 0x334, 0x348, 0x361, 0x93e, 0x98e, 0x996, 0x9a9, 0x9b7, 0x9cb, 0x9d4

Function 13:
Public function signature: 0x8d4e4083
Entry block: 0x36f
Exit block: 0x228
Body: 0x228, 0x36f, 0x376, 0x37a, 0x9dc

Function 14:
Public function signature: 0xa4d66daf
Entry block: 0x396
Exit block: 0x150
Body: 0x150, 0x396, 0x39d, 0x3a1, 0x9e5

Function 15:
Public function signature: 0xb4427263
Entry block: 0x3bb
Exit block: 0x228
Body: 0x228, 0x3bb

Function 16:
Public function signature: 0xc296302a
Entry block: 0x3d7
Exit block: 0x10c
Body: 0x10c, 0x3d7, 0x3de, 0x3e2, 0x9eb, 0xa02, 0xa06, 0xa2f, 0xa30

Function 17:
Public function signature: 0xccb98ffc
Entry block: 0x3f8
Exit block: 0x10c
Body: 0x10c, 0x3f8, 0x3ff, 0x403, 0xa33, 0xa4a, 0xa4e, 0xa54, 0xa55

Function 18:
Public function signature: 0xd3419bf3
Entry block: 0x410
Exit block: 0x121
Body: 0x121, 0x410, 0x417, 0x41b, 0xa58

Function 19:
Public function signature: 0xebf0c717
Entry block: 0x43f
Exit block: 0x121
Body: 0x121, 0x43f, 0x446, 0x44a, 0xa67

Function 20:
Public function signature: 0xf2a75fe4
Entry block: 0x46e
Exit block: 0x10c
Body: 0x10c, 0x46e, 0x475, 0x479, 0x7a6, 0x7a7, 0xa76, 0xa8d, 0xa91, 0xac6

Function 21:
Public fallback function
Entry block: 0x101
Exit block: 0x10c
Body: 0x101, 0x102, 0x10a, 0x10c

Function 22:
Private function
Entry block: 0x483
Exit block: 0x751
Body: 0x483, 0x494, 0x4a1, 0x4a8, 0x4b3, 0x505, 0x516, 0x529, 0x541, 0x54a, 0x5a0, 0x5b1, 0x5c7, 0x5d2, 0x5e5, 0x647, 0x658, 0x6b3, 0x6c4, 0x751, 0xace, 0xadb, 0xae7, 0xaea, 0xaf2, 0xaf6, 0xafd

