Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xbf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xbf
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xbf
0xa: JUMPI 0xbf V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xfb]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x3f9c793
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xfb
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x3f9c793
0x20: V14 = EQ V12 0x3f9c793
0x21: V15 = 0xfb
0x24: JUMPI 0xfb V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x111]
---
0x25 DUP1
0x26 PUSH4 0x1f6d4942
0x2b EQ
0x2c PUSH2 0x111
0x2f JUMPI
---
0x26: V16 = 0x1f6d4942
0x2b: V17 = EQ 0x1f6d4942 V12
0x2c: V18 = 0x111
0x2f: JUMPI 0x111 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x142]
---
0x30 DUP1
0x31 PUSH4 0x3fa615b0
0x36 EQ
0x37 PUSH2 0x142
0x3a JUMPI
---
0x31: V19 = 0x3fa615b0
0x36: V20 = EQ 0x3fa615b0 V12
0x37: V21 = 0x142
0x3a: JUMPI 0x142 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x167]
---
0x3b DUP1
0x3c PUSH4 0x5d2c53a7
0x41 EQ
0x42 PUSH2 0x167
0x45 JUMPI
---
0x3c: V22 = 0x5d2c53a7
0x41: V23 = EQ 0x5d2c53a7 V12
0x42: V24 = 0x167
0x45: JUMPI 0x167 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x17f]
---
0x46 DUP1
0x47 PUSH4 0x68955fb1
0x4c EQ
0x4d PUSH2 0x17f
0x50 JUMPI
---
0x47: V25 = 0x68955fb1
0x4c: V26 = EQ 0x68955fb1 V12
0x4d: V27 = 0x17f
0x50: JUMPI 0x17f V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1a6]
---
0x51 DUP1
0x52 PUSH4 0x7e1055b6
0x57 EQ
0x58 PUSH2 0x1a6
0x5b JUMPI
---
0x52: V28 = 0x7e1055b6
0x57: V29 = EQ 0x7e1055b6 V12
0x58: V30 = 0x1a6
0x5b: JUMPI 0x1a6 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1cb]
---
0x5c DUP1
0x5d PUSH4 0x84883795
0x62 EQ
0x63 PUSH2 0x1cb
0x66 JUMPI
---
0x5d: V31 = 0x84883795
0x62: V32 = EQ 0x84883795 V12
0x63: V33 = 0x1cb
0x66: JUMPI 0x1cb V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1f2]
---
0x67 DUP1
0x68 PUSH4 0x97ab5baa
0x6d EQ
0x6e PUSH2 0x1f2
0x71 JUMPI
---
0x68: V34 = 0x97ab5baa
0x6d: V35 = EQ 0x97ab5baa V12
0x6e: V36 = 0x1f2
0x71: JUMPI 0x1f2 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x207]
---
0x72 DUP1
0x73 PUSH4 0xa7c3d71b
0x78 EQ
0x79 PUSH2 0x207
0x7c JUMPI
---
0x73: V37 = 0xa7c3d71b
0x78: V38 = EQ 0xa7c3d71b V12
0x79: V39 = 0x207
0x7c: JUMPI 0x207 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x22c]
---
0x7d DUP1
0x7e PUSH4 0xbb3f0390
0x83 EQ
0x84 PUSH2 0x22c
0x87 JUMPI
---
0x7e: V40 = 0xbb3f0390
0x83: V41 = EQ 0xbb3f0390 V12
0x84: V42 = 0x22c
0x87: JUMPI 0x22c V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x251]
---
0x88 DUP1
0x89 PUSH4 0xcc63a3c9
0x8e EQ
0x8f PUSH2 0x251
0x92 JUMPI
---
0x89: V43 = 0xcc63a3c9
0x8e: V44 = EQ 0xcc63a3c9 V12
0x8f: V45 = 0x251
0x92: JUMPI 0x251 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x272]
---
0x93 DUP1
0x94 PUSH4 0xd28fa960
0x99 EQ
0x9a PUSH2 0x272
0x9d JUMPI
---
0x94: V46 = 0xd28fa960
0x99: V47 = EQ 0xd28fa960 V12
0x9a: V48 = 0x272
0x9d: JUMPI 0x272 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x287]
---
0x9e DUP1
0x9f PUSH4 0xefbe1c1c
0xa4 EQ
0xa5 PUSH2 0x287
0xa8 JUMPI
---
0x9f: V49 = 0xefbe1c1c
0xa4: V50 = EQ 0xefbe1c1c V12
0xa5: V51 = 0x287
0xa8: JUMPI 0x287 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x29c]
---
0xa9 DUP1
0xaa PUSH4 0xf3a504f2
0xaf EQ
0xb0 PUSH2 0x29c
0xb3 JUMPI
---
0xaa: V52 = 0xf3a504f2
0xaf: V53 = EQ 0xf3a504f2 V12
0xb0: V54 = 0x29c
0xb3: JUMPI 0x29c V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x2c1]
---
0xb4 DUP1
0xb5 PUSH4 0xfc0c546a
0xba EQ
0xbb PUSH2 0x2c1
0xbe JUMPI
---
0xb5: V55 = 0xfc0c546a
0xba: V56 = EQ 0xfc0c546a V12
0xbb: V57 = 0x2c1
0xbe: JUMPI 0x2c1 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xbf]
---
Predecessors: [0x0, 0xb4]
Successors: [0xc0]
---
0xbf JUMPDEST
---
0xbf: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc0
[0xc0:0xcc]
---
Predecessors: [0xbf]
Successors: [0xcd, 0xd1]
---
0xc0 JUMPDEST
0xc1 PUSH1 0x7
0xc3 SLOAD
0xc4 PUSH1 0xff
0xc6 AND
0xc7 ISZERO
0xc8 ISZERO
0xc9 PUSH2 0xd1
0xcc JUMPI
---
0xc0: JUMPDEST 
0xc1: V58 = 0x7
0xc3: V59 = S[0x7]
0xc4: V60 = 0xff
0xc6: V61 = AND 0xff V59
0xc7: V62 = ISZERO V61
0xc8: V63 = ISZERO V62
0xc9: V64 = 0xd1
0xcc: JUMPI 0xd1 V63
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0xc0]
Successors: []
---
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
---
0xcd: V65 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd1
[0xd1:0xdc]
---
Predecessors: [0xc0]
Successors: [0xdd, 0xe3]
---
0xd1 JUMPDEST
0xd2 PUSH1 0x3
0xd4 SLOAD
0xd5 TIMESTAMP
0xd6 LT
0xd7 DUP1
0xd8 ISZERO
0xd9 PUSH2 0xe3
0xdc JUMPI
---
0xd1: JUMPDEST 
0xd2: V66 = 0x3
0xd4: V67 = S[0x3]
0xd5: V68 = TIMESTAMP
0xd6: V69 = LT V68 V67
0xd8: V70 = ISZERO V69
0xd9: V71 = 0xe3
0xdc: JUMPI 0xe3 V70
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [V69]
Exit stack: [V12, V69]

================================

Block 0xdd
[0xdd:0xe2]
---
Predecessors: [0xd1]
Successors: [0xe3]
---
0xdd POP
0xde PUSH1 0x2
0xe0 SLOAD
0xe1 TIMESTAMP
0xe2 GT
---
0xde: V72 = 0x2
0xe0: V73 = S[0x2]
0xe1: V74 = TIMESTAMP
0xe2: V75 = GT V74 V73
---
Entry stack: [V12, V69]
Stack pops: 1
Stack additions: [V75]
Exit stack: [V12, V75]

================================

Block 0xe3
[0xe3:0xe9]
---
Predecessors: [0xd1, 0xdd]
Successors: [0xea, 0xee]
---
0xe3 JUMPDEST
0xe4 ISZERO
0xe5 ISZERO
0xe6 PUSH2 0xee
0xe9 JUMPI
---
0xe3: JUMPDEST 
0xe4: V76 = ISZERO S0
0xe5: V77 = ISZERO V76
0xe6: V78 = 0xee
0xe9: JUMPI 0xee V77
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xea
[0xea:0xed]
---
Predecessors: [0xe3]
Successors: []
---
0xea PUSH1 0x0
0xec DUP1
0xed REVERT
---
0xea: V79 = 0x0
0xed: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xee
[0xee:0xf6]
---
Predecessors: [0xe3]
Successors: [0x2f0]
---
0xee JUMPDEST
0xef PUSH2 0xf7
0xf2 CALLER
0xf3 PUSH2 0x2f0
0xf6 JUMP
---
0xee: JUMPDEST 
0xef: V80 = 0xf7
0xf2: V81 = CALLER
0xf3: V82 = 0x2f0
0xf6: JUMP 0x2f0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf7, V81]
Exit stack: [V12, 0xf7, V81]

================================

Block 0xf7
[0xf7:0xf7]
---
Predecessors: [0x47d, 0x566, 0x707, 0x7c8, 0x890]
Successors: [0xf8]
---
0xf7 JUMPDEST
---
0xf7: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf8
[0xf8:0xf8]
---
Predecessors: [0xf7]
Successors: [0xf9]
---
0xf8 JUMPDEST
---
0xf8: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf9
[0xf9:0xfa]
---
Predecessors: [0xf8]
Successors: []
---
0xf9 JUMPDEST
0xfa STOP
---
0xf9: JUMPDEST 
0xfa: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfb
[0xfb:0x10e]
---
Predecessors: [0xb]
Successors: [0x2f0]
---
0xfb JUMPDEST
0xfc PUSH2 0xf7
0xff PUSH1 0x1
0x101 PUSH1 0xa0
0x103 PUSH1 0x2
0x105 EXP
0x106 SUB
0x107 PUSH1 0x4
0x109 CALLDATALOAD
0x10a AND
0x10b PUSH2 0x2f0
0x10e JUMP
---
0xfb: JUMPDEST 
0xfc: V83 = 0xf7
0xff: V84 = 0x1
0x101: V85 = 0xa0
0x103: V86 = 0x2
0x105: V87 = EXP 0x2 0xa0
0x106: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0x107: V89 = 0x4
0x109: V90 = CALLDATALOAD 0x4
0x10a: V91 = AND V90 0xffffffffffffffffffffffffffffffffffffffff
0x10b: V92 = 0x2f0
0x10e: JUMP 0x2f0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf7, V91]
Exit stack: [V12, 0xf7, V91]

================================

Block 0x10f
[0x10f:0x110]
---
Predecessors: []
Successors: []
---
0x10f JUMPDEST
0x110 STOP
---
0x10f: JUMPDEST 
0x110: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x111
[0x111:0x117]
---
Predecessors: [0x25]
Successors: [0x118, 0x11c]
---
0x111 JUMPDEST
0x112 CALLVALUE
0x113 ISZERO
0x114 PUSH2 0x11c
0x117 JUMPI
---
0x111: JUMPDEST 
0x112: V93 = CALLVALUE
0x113: V94 = ISZERO V93
0x114: V95 = 0x11c
0x117: JUMPI 0x11c V94
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x118
[0x118:0x11b]
---
Predecessors: [0x111]
Successors: []
---
0x118 PUSH1 0x0
0x11a DUP1
0x11b REVERT
---
0x118: V96 = 0x0
0x11b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11c
[0x11c:0x12f]
---
Predecessors: [0x111]
Successors: [0x484]
---
0x11c JUMPDEST
0x11d PUSH2 0x130
0x120 PUSH1 0x1
0x122 PUSH1 0xa0
0x124 PUSH1 0x2
0x126 EXP
0x127 SUB
0x128 PUSH1 0x4
0x12a CALLDATALOAD
0x12b AND
0x12c PUSH2 0x484
0x12f JUMP
---
0x11c: JUMPDEST 
0x11d: V97 = 0x130
0x120: V98 = 0x1
0x122: V99 = 0xa0
0x124: V100 = 0x2
0x126: V101 = EXP 0x2 0xa0
0x127: V102 = SUB 0x10000000000000000000000000000000000000000 0x1
0x128: V103 = 0x4
0x12a: V104 = CALLDATALOAD 0x4
0x12b: V105 = AND V104 0xffffffffffffffffffffffffffffffffffffffff
0x12c: V106 = 0x484
0x12f: JUMP 0x484
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x130, V105]
Exit stack: [V12, 0x130, V105]

================================

Block 0x130
[0x130:0x141]
---
Predecessors: [0x484, 0x496, 0x572, 0x652, 0x658, 0x892]
Successors: []
---
0x130 JUMPDEST
0x131 PUSH1 0x40
0x133 MLOAD
0x134 SWAP1
0x135 DUP2
0x136 MSTORE
0x137 PUSH1 0x20
0x139 ADD
0x13a PUSH1 0x40
0x13c MLOAD
0x13d DUP1
0x13e SWAP2
0x13f SUB
0x140 SWAP1
0x141 RETURN
---
0x130: JUMPDEST 
0x131: V107 = 0x40
0x133: V108 = M[0x40]
0x136: M[V108] = S0
0x137: V109 = 0x20
0x139: V110 = ADD 0x20 V108
0x13a: V111 = 0x40
0x13c: V112 = M[0x40]
0x13f: V113 = SUB V110 V112
0x141: RETURN V112 V113
---
Entry stack: [V12, 0x130, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x130]

================================

Block 0x142
[0x142:0x148]
---
Predecessors: [0x30]
Successors: [0x149, 0x14d]
---
0x142 JUMPDEST
0x143 CALLVALUE
0x144 ISZERO
0x145 PUSH2 0x14d
0x148 JUMPI
---
0x142: JUMPDEST 
0x143: V114 = CALLVALUE
0x144: V115 = ISZERO V114
0x145: V116 = 0x14d
0x148: JUMPI 0x14d V115
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x149
[0x149:0x14c]
---
Predecessors: [0x142]
Successors: []
---
0x149 PUSH1 0x0
0x14b DUP1
0x14c REVERT
---
0x149: V117 = 0x0
0x14c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14d
[0x14d:0x154]
---
Predecessors: [0x142]
Successors: [0x496]
---
0x14d JUMPDEST
0x14e PUSH2 0x130
0x151 PUSH2 0x496
0x154 JUMP
---
0x14d: JUMPDEST 
0x14e: V118 = 0x130
0x151: V119 = 0x496
0x154: JUMP 0x496
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x130]
Exit stack: [V12, 0x130]

================================

Block 0x155
[0x155:0x166]
---
Predecessors: []
Successors: []
---
0x155 JUMPDEST
0x156 PUSH1 0x40
0x158 MLOAD
0x159 SWAP1
0x15a DUP2
0x15b MSTORE
0x15c PUSH1 0x20
0x15e ADD
0x15f PUSH1 0x40
0x161 MLOAD
0x162 DUP1
0x163 SWAP2
0x164 SUB
0x165 SWAP1
0x166 RETURN
---
0x155: JUMPDEST 
0x156: V120 = 0x40
0x158: V121 = M[0x40]
0x15b: M[V121] = S0
0x15c: V122 = 0x20
0x15e: V123 = ADD 0x20 V121
0x15f: V124 = 0x40
0x161: V125 = M[0x40]
0x164: V126 = SUB V123 V125
0x166: RETURN V125 V126
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x167
[0x167:0x16d]
---
Predecessors: [0x3b]
Successors: [0x16e, 0x172]
---
0x167 JUMPDEST
0x168 CALLVALUE
0x169 ISZERO
0x16a PUSH2 0x172
0x16d JUMPI
---
0x167: JUMPDEST 
0x168: V127 = CALLVALUE
0x169: V128 = ISZERO V127
0x16a: V129 = 0x172
0x16d: JUMPI 0x172 V128
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16e
[0x16e:0x171]
---
Predecessors: [0x167]
Successors: []
---
0x16e PUSH1 0x0
0x170 DUP1
0x171 REVERT
---
0x16e: V130 = 0x0
0x171: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x172
[0x172:0x17c]
---
Predecessors: [0x167]
Successors: [0x49c]
---
0x172 JUMPDEST
0x173 PUSH2 0xf7
0x176 PUSH1 0x4
0x178 CALLDATALOAD
0x179 PUSH2 0x49c
0x17c JUMP
---
0x172: JUMPDEST 
0x173: V131 = 0xf7
0x176: V132 = 0x4
0x178: V133 = CALLDATALOAD 0x4
0x179: V134 = 0x49c
0x17c: JUMP 0x49c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf7, V133]
Exit stack: [V12, 0xf7, V133]

================================

Block 0x17d
[0x17d:0x17e]
---
Predecessors: []
Successors: []
---
0x17d JUMPDEST
0x17e STOP
---
0x17d: JUMPDEST 
0x17e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x17f
[0x17f:0x185]
---
Predecessors: [0x46]
Successors: [0x186, 0x18a]
---
0x17f JUMPDEST
0x180 CALLVALUE
0x181 ISZERO
0x182 PUSH2 0x18a
0x185 JUMPI
---
0x17f: JUMPDEST 
0x180: V135 = CALLVALUE
0x181: V136 = ISZERO V135
0x182: V137 = 0x18a
0x185: JUMPI 0x18a V136
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x186
[0x186:0x189]
---
Predecessors: [0x17f]
Successors: []
---
0x186 PUSH1 0x0
0x188 DUP1
0x189 REVERT
---
0x186: V138 = 0x0
0x189: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18a
[0x18a:0x191]
---
Predecessors: [0x17f]
Successors: [0x569]
---
0x18a JUMPDEST
0x18b PUSH2 0x192
0x18e PUSH2 0x569
0x191 JUMP
---
0x18a: JUMPDEST 
0x18b: V139 = 0x192
0x18e: V140 = 0x569
0x191: JUMP 0x569
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x192]
Exit stack: [V12, 0x192]

================================

Block 0x192
[0x192:0x1a5]
---
Predecessors: [0x569, 0x578]
Successors: []
---
0x192 JUMPDEST
0x193 PUSH1 0x40
0x195 MLOAD
0x196 SWAP1
0x197 ISZERO
0x198 ISZERO
0x199 DUP2
0x19a MSTORE
0x19b PUSH1 0x20
0x19d ADD
0x19e PUSH1 0x40
0x1a0 MLOAD
0x1a1 DUP1
0x1a2 SWAP2
0x1a3 SUB
0x1a4 SWAP1
0x1a5 RETURN
---
0x192: JUMPDEST 
0x193: V141 = 0x40
0x195: V142 = M[0x40]
0x197: V143 = ISZERO S0
0x198: V144 = ISZERO V143
0x19a: M[V142] = V144
0x19b: V145 = 0x20
0x19d: V146 = ADD 0x20 V142
0x19e: V147 = 0x40
0x1a0: V148 = M[0x40]
0x1a3: V149 = SUB V146 V148
0x1a5: RETURN V148 V149
---
Entry stack: [V12, 0x192, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x192]

================================

Block 0x1a6
[0x1a6:0x1ac]
---
Predecessors: [0x51]
Successors: [0x1ad, 0x1b1]
---
0x1a6 JUMPDEST
0x1a7 CALLVALUE
0x1a8 ISZERO
0x1a9 PUSH2 0x1b1
0x1ac JUMPI
---
0x1a6: JUMPDEST 
0x1a7: V150 = CALLVALUE
0x1a8: V151 = ISZERO V150
0x1a9: V152 = 0x1b1
0x1ac: JUMPI 0x1b1 V151
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ad
[0x1ad:0x1b0]
---
Predecessors: [0x1a6]
Successors: []
---
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 REVERT
---
0x1ad: V153 = 0x0
0x1b0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b1
[0x1b1:0x1b8]
---
Predecessors: [0x1a6]
Successors: [0x572]
---
0x1b1 JUMPDEST
0x1b2 PUSH2 0x130
0x1b5 PUSH2 0x572
0x1b8 JUMP
---
0x1b1: JUMPDEST 
0x1b2: V154 = 0x130
0x1b5: V155 = 0x572
0x1b8: JUMP 0x572
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x130]
Exit stack: [V12, 0x130]

================================

Block 0x1b9
[0x1b9:0x1ca]
---
Predecessors: []
Successors: []
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd SWAP1
0x1be DUP2
0x1bf MSTORE
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 SWAP2
0x1c8 SUB
0x1c9 SWAP1
0x1ca RETURN
---
0x1b9: JUMPDEST 
0x1ba: V156 = 0x40
0x1bc: V157 = M[0x40]
0x1bf: M[V157] = S0
0x1c0: V158 = 0x20
0x1c2: V159 = ADD 0x20 V157
0x1c3: V160 = 0x40
0x1c5: V161 = M[0x40]
0x1c8: V162 = SUB V159 V161
0x1ca: RETURN V161 V162
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1cb
[0x1cb:0x1d1]
---
Predecessors: [0x5c]
Successors: [0x1d2, 0x1d6]
---
0x1cb JUMPDEST
0x1cc CALLVALUE
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V163 = CALLVALUE
0x1cd: V164 = ISZERO V163
0x1ce: V165 = 0x1d6
0x1d1: JUMPI 0x1d6 V164
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1cb]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V166 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d6
[0x1d6:0x1dd]
---
Predecessors: [0x1cb]
Successors: [0x578]
---
0x1d6 JUMPDEST
0x1d7 PUSH2 0x192
0x1da PUSH2 0x578
0x1dd JUMP
---
0x1d6: JUMPDEST 
0x1d7: V167 = 0x192
0x1da: V168 = 0x578
0x1dd: JUMP 0x578
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x192]
Exit stack: [V12, 0x192]

================================

Block 0x1de
[0x1de:0x1f1]
---
Predecessors: []
Successors: []
---
0x1de JUMPDEST
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 SWAP1
0x1e3 ISZERO
0x1e4 ISZERO
0x1e5 DUP2
0x1e6 MSTORE
0x1e7 PUSH1 0x20
0x1e9 ADD
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed DUP1
0x1ee SWAP2
0x1ef SUB
0x1f0 SWAP1
0x1f1 RETURN
---
0x1de: JUMPDEST 
0x1df: V169 = 0x40
0x1e1: V170 = M[0x40]
0x1e3: V171 = ISZERO S0
0x1e4: V172 = ISZERO V171
0x1e6: M[V170] = V172
0x1e7: V173 = 0x20
0x1e9: V174 = ADD 0x20 V170
0x1ea: V175 = 0x40
0x1ec: V176 = M[0x40]
0x1ef: V177 = SUB V174 V176
0x1f1: RETURN V176 V177
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1f2
[0x1f2:0x1f8]
---
Predecessors: [0x67]
Successors: [0x1f9, 0x1fd]
---
0x1f2 JUMPDEST
0x1f3 CALLVALUE
0x1f4 ISZERO
0x1f5 PUSH2 0x1fd
0x1f8 JUMPI
---
0x1f2: JUMPDEST 
0x1f3: V178 = CALLVALUE
0x1f4: V179 = ISZERO V178
0x1f5: V180 = 0x1fd
0x1f8: JUMPI 0x1fd V179
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f9
[0x1f9:0x1fc]
---
Predecessors: [0x1f2]
Successors: []
---
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc REVERT
---
0x1f9: V181 = 0x0
0x1fc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fd
[0x1fd:0x204]
---
Predecessors: [0x1f2]
Successors: [0x586]
---
0x1fd JUMPDEST
0x1fe PUSH2 0xf7
0x201 PUSH2 0x586
0x204 JUMP
---
0x1fd: JUMPDEST 
0x1fe: V182 = 0xf7
0x201: V183 = 0x586
0x204: JUMP 0x586
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V12, 0xf7]

================================

Block 0x205
[0x205:0x206]
---
Predecessors: []
Successors: []
---
0x205 JUMPDEST
0x206 STOP
---
0x205: JUMPDEST 
0x206: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x207
[0x207:0x20d]
---
Predecessors: [0x72]
Successors: [0x20e, 0x212]
---
0x207 JUMPDEST
0x208 CALLVALUE
0x209 ISZERO
0x20a PUSH2 0x212
0x20d JUMPI
---
0x207: JUMPDEST 
0x208: V184 = CALLVALUE
0x209: V185 = ISZERO V184
0x20a: V186 = 0x212
0x20d: JUMPI 0x212 V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: [0x207]
Successors: []
---
0x20e PUSH1 0x0
0x210 DUP1
0x211 REVERT
---
0x20e: V187 = 0x0
0x211: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x212
[0x212:0x219]
---
Predecessors: [0x207]
Successors: [0x652]
---
0x212 JUMPDEST
0x213 PUSH2 0x130
0x216 PUSH2 0x652
0x219 JUMP
---
0x212: JUMPDEST 
0x213: V188 = 0x130
0x216: V189 = 0x652
0x219: JUMP 0x652
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x130]
Exit stack: [V12, 0x130]

================================

Block 0x21a
[0x21a:0x22b]
---
Predecessors: []
Successors: []
---
0x21a JUMPDEST
0x21b PUSH1 0x40
0x21d MLOAD
0x21e SWAP1
0x21f DUP2
0x220 MSTORE
0x221 PUSH1 0x20
0x223 ADD
0x224 PUSH1 0x40
0x226 MLOAD
0x227 DUP1
0x228 SWAP2
0x229 SUB
0x22a SWAP1
0x22b RETURN
---
0x21a: JUMPDEST 
0x21b: V190 = 0x40
0x21d: V191 = M[0x40]
0x220: M[V191] = S0
0x221: V192 = 0x20
0x223: V193 = ADD 0x20 V191
0x224: V194 = 0x40
0x226: V195 = M[0x40]
0x229: V196 = SUB V193 V195
0x22b: RETURN V195 V196
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x22c
[0x22c:0x232]
---
Predecessors: [0x7d]
Successors: [0x233, 0x237]
---
0x22c JUMPDEST
0x22d CALLVALUE
0x22e ISZERO
0x22f PUSH2 0x237
0x232 JUMPI
---
0x22c: JUMPDEST 
0x22d: V197 = CALLVALUE
0x22e: V198 = ISZERO V197
0x22f: V199 = 0x237
0x232: JUMPI 0x237 V198
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x233
[0x233:0x236]
---
Predecessors: [0x22c]
Successors: []
---
0x233 PUSH1 0x0
0x235 DUP1
0x236 REVERT
---
0x233: V200 = 0x0
0x236: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x237
[0x237:0x23e]
---
Predecessors: [0x22c]
Successors: [0x658]
---
0x237 JUMPDEST
0x238 PUSH2 0x130
0x23b PUSH2 0x658
0x23e JUMP
---
0x237: JUMPDEST 
0x238: V201 = 0x130
0x23b: V202 = 0x658
0x23e: JUMP 0x658
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x130]
Exit stack: [V12, 0x130]

================================

Block 0x23f
[0x23f:0x250]
---
Predecessors: []
Successors: []
---
0x23f JUMPDEST
0x240 PUSH1 0x40
0x242 MLOAD
0x243 SWAP1
0x244 DUP2
0x245 MSTORE
0x246 PUSH1 0x20
0x248 ADD
0x249 PUSH1 0x40
0x24b MLOAD
0x24c DUP1
0x24d SWAP2
0x24e SUB
0x24f SWAP1
0x250 RETURN
---
0x23f: JUMPDEST 
0x240: V203 = 0x40
0x242: V204 = M[0x40]
0x245: M[V204] = S0
0x246: V205 = 0x20
0x248: V206 = ADD 0x20 V204
0x249: V207 = 0x40
0x24b: V208 = M[0x40]
0x24e: V209 = SUB V206 V208
0x250: RETURN V208 V209
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x251
[0x251:0x257]
---
Predecessors: [0x88]
Successors: [0x258, 0x25c]
---
0x251 JUMPDEST
0x252 CALLVALUE
0x253 ISZERO
0x254 PUSH2 0x25c
0x257 JUMPI
---
0x251: JUMPDEST 
0x252: V210 = CALLVALUE
0x253: V211 = ISZERO V210
0x254: V212 = 0x25c
0x257: JUMPI 0x25c V211
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x258
[0x258:0x25b]
---
Predecessors: [0x251]
Successors: []
---
0x258 PUSH1 0x0
0x25a DUP1
0x25b REVERT
---
0x258: V213 = 0x0
0x25b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25c
[0x25c:0x26f]
---
Predecessors: [0x251]
Successors: [0x65e]
---
0x25c JUMPDEST
0x25d PUSH2 0xf7
0x260 PUSH1 0x1
0x262 PUSH1 0xa0
0x264 PUSH1 0x2
0x266 EXP
0x267 SUB
0x268 PUSH1 0x4
0x26a CALLDATALOAD
0x26b AND
0x26c PUSH2 0x65e
0x26f JUMP
---
0x25c: JUMPDEST 
0x25d: V214 = 0xf7
0x260: V215 = 0x1
0x262: V216 = 0xa0
0x264: V217 = 0x2
0x266: V218 = EXP 0x2 0xa0
0x267: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x268: V220 = 0x4
0x26a: V221 = CALLDATALOAD 0x4
0x26b: V222 = AND V221 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V223 = 0x65e
0x26f: JUMP 0x65e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf7, V222]
Exit stack: [V12, 0xf7, V222]

================================

Block 0x270
[0x270:0x271]
---
Predecessors: []
Successors: []
---
0x270 JUMPDEST
0x271 STOP
---
0x270: JUMPDEST 
0x271: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x272
[0x272:0x278]
---
Predecessors: [0x93]
Successors: [0x279, 0x27d]
---
0x272 JUMPDEST
0x273 CALLVALUE
0x274 ISZERO
0x275 PUSH2 0x27d
0x278 JUMPI
---
0x272: JUMPDEST 
0x273: V224 = CALLVALUE
0x274: V225 = ISZERO V224
0x275: V226 = 0x27d
0x278: JUMPI 0x27d V225
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x279
[0x279:0x27c]
---
Predecessors: [0x272]
Successors: []
---
0x279 PUSH1 0x0
0x27b DUP1
0x27c REVERT
---
0x279: V227 = 0x0
0x27c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27d
[0x27d:0x284]
---
Predecessors: [0x272]
Successors: [0x70a]
---
0x27d JUMPDEST
0x27e PUSH2 0xf7
0x281 PUSH2 0x70a
0x284 JUMP
---
0x27d: JUMPDEST 
0x27e: V228 = 0xf7
0x281: V229 = 0x70a
0x284: JUMP 0x70a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V12, 0xf7]

================================

Block 0x285
[0x285:0x286]
---
Predecessors: []
Successors: []
---
0x285 JUMPDEST
0x286 STOP
---
0x285: JUMPDEST 
0x286: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x287
[0x287:0x28d]
---
Predecessors: [0x9e]
Successors: [0x28e, 0x292]
---
0x287 JUMPDEST
0x288 CALLVALUE
0x289 ISZERO
0x28a PUSH2 0x292
0x28d JUMPI
---
0x287: JUMPDEST 
0x288: V230 = CALLVALUE
0x289: V231 = ISZERO V230
0x28a: V232 = 0x292
0x28d: JUMPI 0x292 V231
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28e
[0x28e:0x291]
---
Predecessors: [0x287]
Successors: []
---
0x28e PUSH1 0x0
0x290 DUP1
0x291 REVERT
---
0x28e: V233 = 0x0
0x291: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x292
[0x292:0x299]
---
Predecessors: [0x287]
Successors: [0x7ca]
---
0x292 JUMPDEST
0x293 PUSH2 0xf7
0x296 PUSH2 0x7ca
0x299 JUMP
---
0x292: JUMPDEST 
0x293: V234 = 0xf7
0x296: V235 = 0x7ca
0x299: JUMP 0x7ca
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V12, 0xf7]

================================

Block 0x29a
[0x29a:0x29b]
---
Predecessors: []
Successors: []
---
0x29a JUMPDEST
0x29b STOP
---
0x29a: JUMPDEST 
0x29b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x29c
[0x29c:0x2a2]
---
Predecessors: [0xa9]
Successors: [0x2a3, 0x2a7]
---
0x29c JUMPDEST
0x29d CALLVALUE
0x29e ISZERO
0x29f PUSH2 0x2a7
0x2a2 JUMPI
---
0x29c: JUMPDEST 
0x29d: V236 = CALLVALUE
0x29e: V237 = ISZERO V236
0x29f: V238 = 0x2a7
0x2a2: JUMPI 0x2a7 V237
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a3
[0x2a3:0x2a6]
---
Predecessors: [0x29c]
Successors: []
---
0x2a3 PUSH1 0x0
0x2a5 DUP1
0x2a6 REVERT
---
0x2a3: V239 = 0x0
0x2a6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a7
[0x2a7:0x2ae]
---
Predecessors: [0x29c]
Successors: [0x892]
---
0x2a7 JUMPDEST
0x2a8 PUSH2 0x130
0x2ab PUSH2 0x892
0x2ae JUMP
---
0x2a7: JUMPDEST 
0x2a8: V240 = 0x130
0x2ab: V241 = 0x892
0x2ae: JUMP 0x892
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x130]
Exit stack: [V12, 0x130]

================================

Block 0x2af
[0x2af:0x2c0]
---
Predecessors: []
Successors: []
---
0x2af JUMPDEST
0x2b0 PUSH1 0x40
0x2b2 MLOAD
0x2b3 SWAP1
0x2b4 DUP2
0x2b5 MSTORE
0x2b6 PUSH1 0x20
0x2b8 ADD
0x2b9 PUSH1 0x40
0x2bb MLOAD
0x2bc DUP1
0x2bd SWAP2
0x2be SUB
0x2bf SWAP1
0x2c0 RETURN
---
0x2af: JUMPDEST 
0x2b0: V242 = 0x40
0x2b2: V243 = M[0x40]
0x2b5: M[V243] = S0
0x2b6: V244 = 0x20
0x2b8: V245 = ADD 0x20 V243
0x2b9: V246 = 0x40
0x2bb: V247 = M[0x40]
0x2be: V248 = SUB V245 V247
0x2c0: RETURN V247 V248
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c1
[0x2c1:0x2c7]
---
Predecessors: [0xb4]
Successors: [0x2c8, 0x2cc]
---
0x2c1 JUMPDEST
0x2c2 CALLVALUE
0x2c3 ISZERO
0x2c4 PUSH2 0x2cc
0x2c7 JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V249 = CALLVALUE
0x2c3: V250 = ISZERO V249
0x2c4: V251 = 0x2cc
0x2c7: JUMPI 0x2cc V250
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c8
[0x2c8:0x2cb]
---
Predecessors: [0x2c1]
Successors: []
---
0x2c8 PUSH1 0x0
0x2ca DUP1
0x2cb REVERT
---
0x2c8: V252 = 0x0
0x2cb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2cc
[0x2cc:0x2d3]
---
Predecessors: [0x2c1]
Successors: [0x898]
---
0x2cc JUMPDEST
0x2cd PUSH2 0x2d4
0x2d0 PUSH2 0x898
0x2d3 JUMP
---
0x2cc: JUMPDEST 
0x2cd: V253 = 0x2d4
0x2d0: V254 = 0x898
0x2d3: JUMP 0x898
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d4]
Exit stack: [V12, 0x2d4]

================================

Block 0x2d4
[0x2d4:0x2ef]
---
Predecessors: [0x898]
Successors: []
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x40
0x2d7 MLOAD
0x2d8 PUSH1 0x1
0x2da PUSH1 0xa0
0x2dc PUSH1 0x2
0x2de EXP
0x2df SUB
0x2e0 SWAP1
0x2e1 SWAP2
0x2e2 AND
0x2e3 DUP2
0x2e4 MSTORE
0x2e5 PUSH1 0x20
0x2e7 ADD
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb DUP1
0x2ec SWAP2
0x2ed SUB
0x2ee SWAP1
0x2ef RETURN
---
0x2d4: JUMPDEST 
0x2d5: V255 = 0x40
0x2d7: V256 = M[0x40]
0x2d8: V257 = 0x1
0x2da: V258 = 0xa0
0x2dc: V259 = 0x2
0x2de: V260 = EXP 0x2 0xa0
0x2df: V261 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e2: V262 = AND V864 0xffffffffffffffffffffffffffffffffffffffff
0x2e4: M[V256] = V262
0x2e5: V263 = 0x20
0x2e7: V264 = ADD 0x20 V256
0x2e8: V265 = 0x40
0x2ea: V266 = M[0x40]
0x2ed: V267 = SUB V264 V266
0x2ef: RETURN V266 V267
---
Entry stack: [V12, 0x2d4, V864]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2d4]

================================

Block 0x2f0
[0x2f0:0x305]
---
Predecessors: [0xee, 0xfb]
Successors: [0x306, 0x30a]
---
0x2f0 JUMPDEST
0x2f1 PUSH1 0x7
0x2f3 SLOAD
0x2f4 PUSH1 0x0
0x2f6 SWAP1
0x2f7 DUP2
0x2f8 SWAP1
0x2f9 DUP2
0x2fa SWAP1
0x2fb DUP2
0x2fc SWAP1
0x2fd PUSH1 0xff
0x2ff AND
0x300 ISZERO
0x301 ISZERO
0x302 PUSH2 0x30a
0x305 JUMPI
---
0x2f0: JUMPDEST 
0x2f1: V268 = 0x7
0x2f3: V269 = S[0x7]
0x2f4: V270 = 0x0
0x2fd: V271 = 0xff
0x2ff: V272 = AND 0xff V269
0x300: V273 = ISZERO V272
0x301: V274 = ISZERO V273
0x302: V275 = 0x30a
0x305: JUMPI 0x30a V274
---
Entry stack: [V12, 0xf7, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0xf7, S0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x306
[0x306:0x309]
---
Predecessors: [0x2f0]
Successors: []
---
0x306 PUSH1 0x0
0x308 DUP1
0x309 REVERT
---
0x306: V276 = 0x0
0x309: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x30a
[0x30a:0x315]
---
Predecessors: [0x2f0]
Successors: [0x316, 0x31c]
---
0x30a JUMPDEST
0x30b PUSH1 0x3
0x30d SLOAD
0x30e TIMESTAMP
0x30f LT
0x310 DUP1
0x311 ISZERO
0x312 PUSH2 0x31c
0x315 JUMPI
---
0x30a: JUMPDEST 
0x30b: V277 = 0x3
0x30d: V278 = S[0x3]
0x30e: V279 = TIMESTAMP
0x30f: V280 = LT V279 V278
0x311: V281 = ISZERO V280
0x312: V282 = 0x31c
0x315: JUMPI 0x31c V281
---
Entry stack: [V12, 0xf7, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V280]
Exit stack: [V12, 0xf7, S4, 0x0, 0x0, 0x0, 0x0, V280]

================================

Block 0x316
[0x316:0x31b]
---
Predecessors: [0x30a]
Successors: [0x31c]
---
0x316 POP
0x317 PUSH1 0x2
0x319 SLOAD
0x31a TIMESTAMP
0x31b GT
---
0x317: V283 = 0x2
0x319: V284 = S[0x2]
0x31a: V285 = TIMESTAMP
0x31b: V286 = GT V285 V284
---
Entry stack: [V12, 0xf7, S5, 0x0, 0x0, 0x0, 0x0, V280]
Stack pops: 1
Stack additions: [V286]
Exit stack: [V12, 0xf7, S5, 0x0, 0x0, 0x0, 0x0, V286]

================================

Block 0x31c
[0x31c:0x322]
---
Predecessors: [0x30a, 0x316]
Successors: [0x323, 0x327]
---
0x31c JUMPDEST
0x31d ISZERO
0x31e ISZERO
0x31f PUSH2 0x327
0x322 JUMPI
---
0x31c: JUMPDEST 
0x31d: V287 = ISZERO S0
0x31e: V288 = ISZERO V287
0x31f: V289 = 0x327
0x322: JUMPI 0x327 V288
---
Entry stack: [V12, 0xf7, S5, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xf7, S5, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x323
[0x323:0x326]
---
Predecessors: [0x31c]
Successors: []
---
0x323 PUSH1 0x0
0x325 DUP1
0x326 REVERT
---
0x323: V290 = 0x0
0x326: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x327
[0x327:0x352]
---
Predecessors: [0x31c]
Successors: [0x8a7]
---
0x327 JUMPDEST
0x328 PUSH1 0x1
0x32a PUSH1 0xa0
0x32c PUSH1 0x2
0x32e EXP
0x32f SUB
0x330 DUP6
0x331 AND
0x332 PUSH1 0x0
0x334 SWAP1
0x335 DUP2
0x336 MSTORE
0x337 PUSH1 0x8
0x339 PUSH1 0x20
0x33b MSTORE
0x33c PUSH1 0x40
0x33e SWAP1
0x33f SHA3
0x340 SLOAD
0x341 CALLVALUE
0x342 SWAP5
0x343 POP
0x344 PUSH2 0x353
0x347 SWAP1
0x348 DUP6
0x349 PUSH4 0xffffffff
0x34e PUSH2 0x8a7
0x351 AND
0x352 JUMP
---
0x327: JUMPDEST 
0x328: V291 = 0x1
0x32a: V292 = 0xa0
0x32c: V293 = 0x2
0x32e: V294 = EXP 0x2 0xa0
0x32f: V295 = SUB 0x10000000000000000000000000000000000000000 0x1
0x331: V296 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x332: V297 = 0x0
0x336: M[0x0] = V296
0x337: V298 = 0x8
0x339: V299 = 0x20
0x33b: M[0x20] = 0x8
0x33c: V300 = 0x40
0x33f: V301 = SHA3 0x0 0x40
0x340: V302 = S[V301]
0x341: V303 = CALLVALUE
0x344: V304 = 0x353
0x349: V305 = 0xffffffff
0x34e: V306 = 0x8a7
0x351: V307 = AND 0x8a7 0xffffffff
0x352: JUMP 0x8a7
---
Entry stack: [V12, 0xf7, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, V303, S2, S1, S0, 0x353, V302, V303]
Exit stack: [V12, 0xf7, S4, V303, 0x0, 0x0, 0x0, 0x353, V302, V303]

================================

Block 0x353
[0x353:0x376]
---
Predecessors: [0x8ba]
Successors: [0x377, 0x37b]
---
0x353 JUMPDEST
0x354 PUSH1 0x1
0x356 PUSH1 0xa0
0x358 PUSH1 0x2
0x35a EXP
0x35b SUB
0x35c DUP7
0x35d AND
0x35e PUSH1 0x0
0x360 SWAP1
0x361 DUP2
0x362 MSTORE
0x363 PUSH1 0x8
0x365 PUSH1 0x20
0x367 MSTORE
0x368 PUSH1 0x40
0x36a SWAP1
0x36b SHA3
0x36c SSTORE
0x36d PUSH1 0x4
0x36f SLOAD
0x370 DUP5
0x371 LT
0x372 ISZERO
0x373 PUSH2 0x37b
0x376 JUMPI
---
0x353: JUMPDEST 
0x354: V308 = 0x1
0x356: V309 = 0xa0
0x358: V310 = 0x2
0x35a: V311 = EXP 0x2 0xa0
0x35b: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35d: V313 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0x35e: V314 = 0x0
0x362: M[0x0] = V313
0x363: V315 = 0x8
0x365: V316 = 0x20
0x367: M[0x20] = 0x8
0x368: V317 = 0x40
0x36b: V318 = SHA3 0x0 0x40
0x36c: S[V318] = S0
0x36d: V319 = 0x4
0x36f: V320 = S[0x4]
0x371: V321 = LT V303 V320
0x372: V322 = ISZERO V321
0x373: V323 = 0x37b
0x376: JUMPI 0x37b V322
---
Entry stack: [V12, 0xf7, V91, V303, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1]
Exit stack: [V12, 0xf7, V91, V303, S3, S2, 0x0]

================================

Block 0x377
[0x377:0x37a]
---
Predecessors: [0x353]
Successors: []
---
0x377 PUSH1 0x0
0x379 DUP1
0x37a REVERT
---
0x377: V324 = 0x0
0x37a: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V91, V303, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V91, V303, S2, S1, 0x0]

================================

Block 0x37b
[0x37b:0x38e]
---
Predecessors: [0x353]
Successors: [0x8c1]
---
0x37b JUMPDEST
0x37c PUSH1 0x1
0x37e SLOAD
0x37f PUSH2 0x38f
0x382 SWAP1
0x383 DUP6
0x384 SWAP1
0x385 PUSH4 0xffffffff
0x38a PUSH2 0x8c1
0x38d AND
0x38e JUMP
---
0x37b: JUMPDEST 
0x37c: V325 = 0x1
0x37e: V326 = S[0x1]
0x37f: V327 = 0x38f
0x385: V328 = 0xffffffff
0x38a: V329 = 0x8c1
0x38d: V330 = AND 0x8c1 0xffffffff
0x38e: JUMP 0x8c1
---
Entry stack: [V12, 0xf7, V91, V303, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x38f, S3, V326]
Exit stack: [V12, 0xf7, V91, V303, S2, S1, 0x0, 0x38f, V303, V326]

================================

Block 0x38f
[0x38f:0x3a0]
---
Predecessors: [0x8ba]
Successors: [0x8f5]
---
0x38f JUMPDEST
0x390 SWAP3
0x391 POP
0x392 PUSH2 0x3a1
0x395 DUP5
0x396 DUP5
0x397 PUSH4 0xffffffff
0x39c PUSH2 0x8f5
0x39f AND
0x3a0 JUMP
---
0x38f: JUMPDEST 
0x392: V331 = 0x3a1
0x397: V332 = 0xffffffff
0x39c: V333 = 0x8f5
0x39f: V334 = AND 0x8f5 0xffffffff
0x3a0: JUMP 0x8f5
---
Entry stack: [V12, 0xf7, V91, V303, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S0, S2, S1, 0x3a1, S4, S0]
Exit stack: [V12, 0xf7, V91, V303, S0, S2, 0x0, 0x3a1, V303, S0]

================================

Block 0x3a1
[0x3a1:0x3b6]
---
Predecessors: [0x906]
Successors: [0x8a7]
---
0x3a1 JUMPDEST
0x3a2 PUSH1 0x6
0x3a4 SLOAD
0x3a5 SWAP1
0x3a6 SWAP3
0x3a7 POP
0x3a8 PUSH2 0x3b7
0x3ab SWAP1
0x3ac DUP4
0x3ad PUSH4 0xffffffff
0x3b2 PUSH2 0x8a7
0x3b5 AND
0x3b6 JUMP
---
0x3a1: JUMPDEST 
0x3a2: V335 = 0x6
0x3a4: V336 = S[0x6]
0x3a8: V337 = 0x3b7
0x3ad: V338 = 0xffffffff
0x3b2: V339 = 0x8a7
0x3b5: V340 = AND 0x8a7 0xffffffff
0x3b6: JUMP 0x8a7
---
Entry stack: [V12, 0xf7, V91, V303, S3, S2, 0x0, V887]
Stack pops: 3
Stack additions: [S0, S1, 0x3b7, V336, S0]
Exit stack: [V12, 0xf7, V91, V303, S3, V887, 0x0, 0x3b7, V336, V887]

================================

Block 0x3b7
[0x3b7:0x3cd]
---
Predecessors: [0x8ba]
Successors: [0x90c]
---
0x3b7 JUMPDEST
0x3b8 PUSH1 0x6
0x3ba SSTORE
0x3bb PUSH1 0x1
0x3bd SLOAD
0x3be PUSH2 0x3ce
0x3c1 SWAP1
0x3c2 DUP4
0x3c3 SWAP1
0x3c4 PUSH4 0xffffffff
0x3c9 PUSH2 0x90c
0x3cc AND
0x3cd JUMP
---
0x3b7: JUMPDEST 
0x3b8: V341 = 0x6
0x3ba: S[0x6] = S0
0x3bb: V342 = 0x1
0x3bd: V343 = S[0x1]
0x3be: V344 = 0x3ce
0x3c4: V345 = 0xffffffff
0x3c9: V346 = 0x90c
0x3cc: V347 = AND 0x90c 0xffffffff
0x3cd: JUMP 0x90c
---
Entry stack: [V12, 0xf7, V91, V303, S3, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x3ce, S2, V343]
Exit stack: [V12, 0xf7, V91, V303, S3, S2, 0x0, 0x3ce, S2, V343]

================================

Block 0x3ce
[0x3ce:0x3fc]
---
Predecessors: [0x921]
Successors: [0x3fd, 0x401]
---
0x3ce JUMPDEST
0x3cf SWAP1
0x3d0 POP
0x3d1 PUSH1 0x1
0x3d3 PUSH1 0xa0
0x3d5 PUSH1 0x2
0x3d7 EXP
0x3d8 SUB
0x3d9 DUP6
0x3da AND
0x3db DUP4
0x3dc ISZERO
0x3dd PUSH2 0x8fc
0x3e0 MUL
0x3e1 DUP5
0x3e2 PUSH1 0x40
0x3e4 MLOAD
0x3e5 PUSH1 0x0
0x3e7 PUSH1 0x40
0x3e9 MLOAD
0x3ea DUP1
0x3eb DUP4
0x3ec SUB
0x3ed DUP2
0x3ee DUP6
0x3ef DUP9
0x3f0 DUP9
0x3f1 CALL
0x3f2 SWAP4
0x3f3 POP
0x3f4 POP
0x3f5 POP
0x3f6 POP
0x3f7 ISZERO
0x3f8 ISZERO
0x3f9 PUSH2 0x401
0x3fc JUMPI
---
0x3ce: JUMPDEST 
0x3d1: V348 = 0x1
0x3d3: V349 = 0xa0
0x3d5: V350 = 0x2
0x3d7: V351 = EXP 0x2 0xa0
0x3d8: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3da: V353 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0x3dc: V354 = ISZERO S3
0x3dd: V355 = 0x8fc
0x3e0: V356 = MUL 0x8fc V354
0x3e2: V357 = 0x40
0x3e4: V358 = M[0x40]
0x3e5: V359 = 0x0
0x3e7: V360 = 0x40
0x3e9: V361 = M[0x40]
0x3ec: V362 = SUB V358 V361
0x3f1: V363 = CALL V356 V353 S3 V361 V362 V361 0x0
0x3f7: V364 = ISZERO V363
0x3f8: V365 = ISZERO V364
0x3f9: V366 = 0x401
0x3fc: JUMPI 0x401 V365
---
Entry stack: [V12, 0xf7, V91, V303, S3, S2, 0x0, V892]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S0]
Exit stack: [V12, 0xf7, V91, V303, S3, S2, V892]

================================

Block 0x3fd
[0x3fd:0x400]
---
Predecessors: [0x3ce]
Successors: []
---
0x3fd PUSH1 0x0
0x3ff DUP1
0x400 REVERT
---
0x3fd: V367 = 0x0
0x400: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V91, V303, S2, S1, V892]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V91, V303, S2, S1, V892]

================================

Block 0x401
[0x401:0x45b]
---
Predecessors: [0x3ce]
Successors: [0x45c, 0x460]
---
0x401 JUMPDEST
0x402 PUSH1 0x9
0x404 SLOAD
0x405 PUSH1 0x1
0x407 PUSH1 0xa0
0x409 PUSH1 0x2
0x40b EXP
0x40c SUB
0x40d AND
0x40e PUSH4 0x40c10f19
0x413 DUP7
0x414 DUP4
0x415 PUSH1 0x0
0x417 PUSH1 0x40
0x419 MLOAD
0x41a PUSH1 0x20
0x41c ADD
0x41d MSTORE
0x41e PUSH1 0x40
0x420 MLOAD
0x421 PUSH1 0xe0
0x423 PUSH1 0x2
0x425 EXP
0x426 PUSH4 0xffffffff
0x42b DUP6
0x42c AND
0x42d MUL
0x42e DUP2
0x42f MSTORE
0x430 PUSH1 0x1
0x432 PUSH1 0xa0
0x434 PUSH1 0x2
0x436 EXP
0x437 SUB
0x438 SWAP1
0x439 SWAP3
0x43a AND
0x43b PUSH1 0x4
0x43d DUP4
0x43e ADD
0x43f MSTORE
0x440 PUSH1 0x24
0x442 DUP3
0x443 ADD
0x444 MSTORE
0x445 PUSH1 0x44
0x447 ADD
0x448 PUSH1 0x20
0x44a PUSH1 0x40
0x44c MLOAD
0x44d DUP1
0x44e DUP4
0x44f SUB
0x450 DUP2
0x451 PUSH1 0x0
0x453 DUP8
0x454 DUP1
0x455 EXTCODESIZE
0x456 ISZERO
0x457 ISZERO
0x458 PUSH2 0x460
0x45b JUMPI
---
0x401: JUMPDEST 
0x402: V368 = 0x9
0x404: V369 = S[0x9]
0x405: V370 = 0x1
0x407: V371 = 0xa0
0x409: V372 = 0x2
0x40b: V373 = EXP 0x2 0xa0
0x40c: V374 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40d: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x40e: V376 = 0x40c10f19
0x415: V377 = 0x0
0x417: V378 = 0x40
0x419: V379 = M[0x40]
0x41a: V380 = 0x20
0x41c: V381 = ADD 0x20 V379
0x41d: M[V381] = 0x0
0x41e: V382 = 0x40
0x420: V383 = M[0x40]
0x421: V384 = 0xe0
0x423: V385 = 0x2
0x425: V386 = EXP 0x2 0xe0
0x426: V387 = 0xffffffff
0x42c: V388 = AND 0x40c10f19 0xffffffff
0x42d: V389 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x42f: M[V383] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x430: V390 = 0x1
0x432: V391 = 0xa0
0x434: V392 = 0x2
0x436: V393 = EXP 0x2 0xa0
0x437: V394 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43a: V395 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0x43b: V396 = 0x4
0x43e: V397 = ADD V383 0x4
0x43f: M[V397] = V395
0x440: V398 = 0x24
0x443: V399 = ADD V383 0x24
0x444: M[V399] = V892
0x445: V400 = 0x44
0x447: V401 = ADD 0x44 V383
0x448: V402 = 0x20
0x44a: V403 = 0x40
0x44c: V404 = M[0x40]
0x44f: V405 = SUB V401 V404
0x451: V406 = 0x0
0x455: V407 = EXTCODESIZE V375
0x456: V408 = ISZERO V407
0x457: V409 = ISZERO V408
0x458: V410 = 0x460
0x45b: JUMPI 0x460 V409
---
Entry stack: [V12, 0xf7, V91, V303, S2, S1, V892]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V375, 0x40c10f19, V401, 0x20, V404, V405, V404, 0x0, V375]
Exit stack: [V12, 0xf7, V91, V303, S2, S1, V892, V375, 0x40c10f19, V401, 0x20, V404, V405, V404, 0x0, V375]

================================

Block 0x45c
[0x45c:0x45f]
---
Predecessors: [0x401]
Successors: []
---
0x45c PUSH1 0x0
0x45e DUP1
0x45f REVERT
---
0x45c: V411 = 0x0
0x45f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V91, V303, S11, S10, V892, V375, 0x40c10f19, V401, 0x20, V404, V405, V404, 0x0, V375]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V91, V303, S11, S10, V892, V375, 0x40c10f19, V401, 0x20, V404, V405, V404, 0x0, V375]

================================

Block 0x460
[0x460:0x46c]
---
Predecessors: [0x401]
Successors: [0x46d, 0x471]
---
0x460 JUMPDEST
0x461 PUSH2 0x2c6
0x464 GAS
0x465 SUB
0x466 CALL
0x467 ISZERO
0x468 ISZERO
0x469 PUSH2 0x471
0x46c JUMPI
---
0x460: JUMPDEST 
0x461: V412 = 0x2c6
0x464: V413 = GAS
0x465: V414 = SUB V413 0x2c6
0x466: V415 = CALL V414 V375 0x0 V404 V405 V404 0x20
0x467: V416 = ISZERO V415
0x468: V417 = ISZERO V416
0x469: V418 = 0x471
0x46c: JUMPI 0x471 V417
---
Entry stack: [V12, 0xf7, V91, V303, S11, S10, V892, V375, 0x40c10f19, V401, 0x20, V404, V405, V404, 0x0, V375]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xf7, V91, V303, S11, S10, V892, V375, 0x40c10f19, V401]

================================

Block 0x46d
[0x46d:0x470]
---
Predecessors: [0x460]
Successors: []
---
0x46d PUSH1 0x0
0x46f DUP1
0x470 REVERT
---
0x46d: V419 = 0x0
0x470: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V91, V303, S5, S4, V892, V375, 0x40c10f19, V401]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V91, V303, S5, S4, V892, V375, 0x40c10f19, V401]

================================

Block 0x471
[0x471:0x47b]
---
Predecessors: [0x460]
Successors: [0x47c]
---
0x471 JUMPDEST
0x472 POP
0x473 POP
0x474 POP
0x475 PUSH1 0x40
0x477 MLOAD
0x478 DUP1
0x479 MLOAD
0x47a POP
0x47b POP
---
0x471: JUMPDEST 
0x475: V420 = 0x40
0x477: V421 = M[0x40]
0x479: V422 = M[V421]
---
Entry stack: [V12, 0xf7, V91, V303, S5, S4, V892, V375, 0x40c10f19, V401]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xf7, V91, V303, S5, S4, V892]

================================

Block 0x47c
[0x47c:0x47c]
---
Predecessors: [0x471]
Successors: [0x47d]
---
0x47c JUMPDEST
---
0x47c: JUMPDEST 
---
Entry stack: [V12, 0xf7, V91, V303, S2, S1, V892]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V91, V303, S2, S1, V892]

================================

Block 0x47d
[0x47d:0x483]
---
Predecessors: [0x47c]
Successors: [0xf7]
---
0x47d JUMPDEST
0x47e POP
0x47f POP
0x480 POP
0x481 POP
0x482 POP
0x483 JUMP
---
0x47d: JUMPDEST 
0x483: JUMP 0xf7
---
Entry stack: [V12, 0xf7, V91, V303, S2, S1, V892]
Stack pops: 6
Stack additions: []
Exit stack: [V12]

================================

Block 0x484
[0x484:0x495]
---
Predecessors: [0x11c]
Successors: [0x130]
---
0x484 JUMPDEST
0x485 PUSH1 0x8
0x487 PUSH1 0x20
0x489 MSTORE
0x48a PUSH1 0x0
0x48c SWAP1
0x48d DUP2
0x48e MSTORE
0x48f PUSH1 0x40
0x491 SWAP1
0x492 SHA3
0x493 SLOAD
0x494 DUP2
0x495 JUMP
---
0x484: JUMPDEST 
0x485: V423 = 0x8
0x487: V424 = 0x20
0x489: M[0x20] = 0x8
0x48a: V425 = 0x0
0x48e: M[0x0] = V105
0x48f: V426 = 0x40
0x492: V427 = SHA3 0x0 0x40
0x493: V428 = S[V427]
0x495: JUMP 0x130
---
Entry stack: [V12, 0x130, V105]
Stack pops: 2
Stack additions: [S1, V428]
Exit stack: [V12, 0x130, V428]

================================

Block 0x496
[0x496:0x49b]
---
Predecessors: [0x14d]
Successors: [0x130]
---
0x496 JUMPDEST
0x497 PUSH1 0x5
0x499 SLOAD
0x49a DUP2
0x49b JUMP
---
0x496: JUMPDEST 
0x497: V429 = 0x5
0x499: V430 = S[0x5]
0x49b: JUMP 0x130
---
Entry stack: [V12, 0x130]
Stack pops: 1
Stack additions: [S0, V430]
Exit stack: [V12, 0x130, V430]

================================

Block 0x49c
[0x49c:0x4f0]
---
Predecessors: [0x172]
Successors: [0x4f1, 0x4f5]
---
0x49c JUMPDEST
0x49d PUSH1 0xa
0x49f SLOAD
0x4a0 PUSH1 0x1
0x4a2 PUSH1 0xa0
0x4a4 PUSH1 0x2
0x4a6 EXP
0x4a7 SUB
0x4a8 AND
0x4a9 PUSH4 0xbbb896ad
0x4ae CALLER
0x4af PUSH1 0x0
0x4b1 PUSH1 0x40
0x4b3 MLOAD
0x4b4 PUSH1 0x20
0x4b6 ADD
0x4b7 MSTORE
0x4b8 PUSH1 0x40
0x4ba MLOAD
0x4bb PUSH1 0xe0
0x4bd PUSH1 0x2
0x4bf EXP
0x4c0 PUSH4 0xffffffff
0x4c5 DUP5
0x4c6 AND
0x4c7 MUL
0x4c8 DUP2
0x4c9 MSTORE
0x4ca PUSH1 0x1
0x4cc PUSH1 0xa0
0x4ce PUSH1 0x2
0x4d0 EXP
0x4d1 SUB
0x4d2 SWAP1
0x4d3 SWAP2
0x4d4 AND
0x4d5 PUSH1 0x4
0x4d7 DUP3
0x4d8 ADD
0x4d9 MSTORE
0x4da PUSH1 0x24
0x4dc ADD
0x4dd PUSH1 0x20
0x4df PUSH1 0x40
0x4e1 MLOAD
0x4e2 DUP1
0x4e3 DUP4
0x4e4 SUB
0x4e5 DUP2
0x4e6 PUSH1 0x0
0x4e8 DUP8
0x4e9 DUP1
0x4ea EXTCODESIZE
0x4eb ISZERO
0x4ec ISZERO
0x4ed PUSH2 0x4f5
0x4f0 JUMPI
---
0x49c: JUMPDEST 
0x49d: V431 = 0xa
0x49f: V432 = S[0xa]
0x4a0: V433 = 0x1
0x4a2: V434 = 0xa0
0x4a4: V435 = 0x2
0x4a6: V436 = EXP 0x2 0xa0
0x4a7: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a8: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x4a9: V439 = 0xbbb896ad
0x4ae: V440 = CALLER
0x4af: V441 = 0x0
0x4b1: V442 = 0x40
0x4b3: V443 = M[0x40]
0x4b4: V444 = 0x20
0x4b6: V445 = ADD 0x20 V443
0x4b7: M[V445] = 0x0
0x4b8: V446 = 0x40
0x4ba: V447 = M[0x40]
0x4bb: V448 = 0xe0
0x4bd: V449 = 0x2
0x4bf: V450 = EXP 0x2 0xe0
0x4c0: V451 = 0xffffffff
0x4c6: V452 = AND 0xbbb896ad 0xffffffff
0x4c7: V453 = MUL 0xbbb896ad 0x100000000000000000000000000000000000000000000000000000000
0x4c9: M[V447] = 0xbbb896ad00000000000000000000000000000000000000000000000000000000
0x4ca: V454 = 0x1
0x4cc: V455 = 0xa0
0x4ce: V456 = 0x2
0x4d0: V457 = EXP 0x2 0xa0
0x4d1: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d4: V459 = AND V440 0xffffffffffffffffffffffffffffffffffffffff
0x4d5: V460 = 0x4
0x4d8: V461 = ADD V447 0x4
0x4d9: M[V461] = V459
0x4da: V462 = 0x24
0x4dc: V463 = ADD 0x24 V447
0x4dd: V464 = 0x20
0x4df: V465 = 0x40
0x4e1: V466 = M[0x40]
0x4e4: V467 = SUB V463 V466
0x4e6: V468 = 0x0
0x4ea: V469 = EXTCODESIZE V438
0x4eb: V470 = ISZERO V469
0x4ec: V471 = ISZERO V470
0x4ed: V472 = 0x4f5
0x4f0: JUMPI 0x4f5 V471
---
Entry stack: [V12, 0xf7, V133]
Stack pops: 0
Stack additions: [V438, 0xbbb896ad, V463, 0x20, V466, V467, V466, 0x0, V438]
Exit stack: [V12, 0xf7, V133, V438, 0xbbb896ad, V463, 0x20, V466, V467, V466, 0x0, V438]

================================

Block 0x4f1
[0x4f1:0x4f4]
---
Predecessors: [0x49c]
Successors: []
---
0x4f1 PUSH1 0x0
0x4f3 DUP1
0x4f4 REVERT
---
0x4f1: V473 = 0x0
0x4f4: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V133, V438, 0xbbb896ad, V463, 0x20, V466, V467, V466, 0x0, V438]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V133, V438, 0xbbb896ad, V463, 0x20, V466, V467, V466, 0x0, V438]

================================

Block 0x4f5
[0x4f5:0x501]
---
Predecessors: [0x49c]
Successors: [0x502, 0x506]
---
0x4f5 JUMPDEST
0x4f6 PUSH2 0x2c6
0x4f9 GAS
0x4fa SUB
0x4fb CALL
0x4fc ISZERO
0x4fd ISZERO
0x4fe PUSH2 0x506
0x501 JUMPI
---
0x4f5: JUMPDEST 
0x4f6: V474 = 0x2c6
0x4f9: V475 = GAS
0x4fa: V476 = SUB V475 0x2c6
0x4fb: V477 = CALL V476 V438 0x0 V466 V467 V466 0x20
0x4fc: V478 = ISZERO V477
0x4fd: V479 = ISZERO V478
0x4fe: V480 = 0x506
0x501: JUMPI 0x506 V479
---
Entry stack: [V12, 0xf7, V133, V438, 0xbbb896ad, V463, 0x20, V466, V467, V466, 0x0, V438]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xf7, V133, V438, 0xbbb896ad, V463]

================================

Block 0x502
[0x502:0x505]
---
Predecessors: [0x4f5]
Successors: []
---
0x502 PUSH1 0x0
0x504 DUP1
0x505 REVERT
---
0x502: V481 = 0x0
0x505: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V133, V438, 0xbbb896ad, V463]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V133, V438, 0xbbb896ad, V463]

================================

Block 0x506
[0x506:0x516]
---
Predecessors: [0x4f5]
Successors: [0x517, 0x51b]
---
0x506 JUMPDEST
0x507 POP
0x508 POP
0x509 POP
0x50a PUSH1 0x40
0x50c MLOAD
0x50d DUP1
0x50e MLOAD
0x50f SWAP1
0x510 POP
0x511 ISZERO
0x512 ISZERO
0x513 PUSH2 0x51b
0x516 JUMPI
---
0x506: JUMPDEST 
0x50a: V482 = 0x40
0x50c: V483 = M[0x40]
0x50e: V484 = M[V483]
0x511: V485 = ISZERO V484
0x512: V486 = ISZERO V485
0x513: V487 = 0x51b
0x516: JUMPI 0x51b V486
---
Entry stack: [V12, 0xf7, V133, V438, 0xbbb896ad, V463]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xf7, V133]

================================

Block 0x517
[0x517:0x51a]
---
Predecessors: [0x506]
Successors: []
---
0x517 PUSH1 0x0
0x519 DUP1
0x51a REVERT
---
0x517: V488 = 0x0
0x51a: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V133]

================================

Block 0x51b
[0x51b:0x52e]
---
Predecessors: [0x506]
Successors: [0x52f, 0x533]
---
0x51b JUMPDEST
0x51c PUSH1 0x1
0x51e PUSH1 0xa0
0x520 PUSH1 0x2
0x522 EXP
0x523 SUB
0x524 ADDRESS
0x525 AND
0x526 BALANCE
0x527 DUP2
0x528 SWAP1
0x529 LT
0x52a ISZERO
0x52b PUSH2 0x533
0x52e JUMPI
---
0x51b: JUMPDEST 
0x51c: V489 = 0x1
0x51e: V490 = 0xa0
0x520: V491 = 0x2
0x522: V492 = EXP 0x2 0xa0
0x523: V493 = SUB 0x10000000000000000000000000000000000000000 0x1
0x524: V494 = ADDRESS
0x525: V495 = AND V494 0xffffffffffffffffffffffffffffffffffffffff
0x526: V496 = BALANCE V495
0x529: V497 = LT V496 V133
0x52a: V498 = ISZERO V497
0x52b: V499 = 0x533
0x52e: JUMPI 0x533 V498
---
Entry stack: [V12, 0xf7, V133]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xf7, V133]

================================

Block 0x52f
[0x52f:0x532]
---
Predecessors: [0x51b]
Successors: []
---
0x52f PUSH1 0x0
0x531 DUP1
0x532 REVERT
---
0x52f: V500 = 0x0
0x532: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V133]

================================

Block 0x533
[0x533:0x55f]
---
Predecessors: [0x51b]
Successors: [0x560, 0x564]
---
0x533 JUMPDEST
0x534 PUSH1 0x1
0x536 PUSH1 0xa0
0x538 PUSH1 0x2
0x53a EXP
0x53b SUB
0x53c CALLER
0x53d AND
0x53e DUP2
0x53f ISZERO
0x540 PUSH2 0x8fc
0x543 MUL
0x544 DUP3
0x545 PUSH1 0x40
0x547 MLOAD
0x548 PUSH1 0x0
0x54a PUSH1 0x40
0x54c MLOAD
0x54d DUP1
0x54e DUP4
0x54f SUB
0x550 DUP2
0x551 DUP6
0x552 DUP9
0x553 DUP9
0x554 CALL
0x555 SWAP4
0x556 POP
0x557 POP
0x558 POP
0x559 POP
0x55a ISZERO
0x55b ISZERO
0x55c PUSH2 0x564
0x55f JUMPI
---
0x533: JUMPDEST 
0x534: V501 = 0x1
0x536: V502 = 0xa0
0x538: V503 = 0x2
0x53a: V504 = EXP 0x2 0xa0
0x53b: V505 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53c: V506 = CALLER
0x53d: V507 = AND V506 0xffffffffffffffffffffffffffffffffffffffff
0x53f: V508 = ISZERO V133
0x540: V509 = 0x8fc
0x543: V510 = MUL 0x8fc V508
0x545: V511 = 0x40
0x547: V512 = M[0x40]
0x548: V513 = 0x0
0x54a: V514 = 0x40
0x54c: V515 = M[0x40]
0x54f: V516 = SUB V512 V515
0x554: V517 = CALL V510 V507 V133 V515 V516 V515 0x0
0x55a: V518 = ISZERO V517
0x55b: V519 = ISZERO V518
0x55c: V520 = 0x564
0x55f: JUMPI 0x564 V519
---
Entry stack: [V12, 0xf7, V133]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xf7, V133]

================================

Block 0x560
[0x560:0x563]
---
Predecessors: [0x533]
Successors: []
---
0x560 PUSH1 0x0
0x562 DUP1
0x563 REVERT
---
0x560: V521 = 0x0
0x563: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V133]

================================

Block 0x564
[0x564:0x564]
---
Predecessors: [0x533, 0x605]
Successors: [0x565]
---
0x564 JUMPDEST
---
0x564: JUMPDEST 
---
Entry stack: [V12, 0xf7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, S0]

================================

Block 0x565
[0x565:0x565]
---
Predecessors: [0x564]
Successors: [0x566]
---
0x565 JUMPDEST
---
0x565: JUMPDEST 
---
Entry stack: [V12, 0xf7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, S0]

================================

Block 0x566
[0x566:0x568]
---
Predecessors: [0x565]
Successors: [0xf7]
---
0x566 JUMPDEST
0x567 POP
0x568 JUMP
---
0x566: JUMPDEST 
0x568: JUMP 0xf7
---
Entry stack: [V12, 0xf7, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x569
[0x569:0x571]
---
Predecessors: [0x18a]
Successors: [0x192]
---
0x569 JUMPDEST
0x56a PUSH1 0x7
0x56c SLOAD
0x56d PUSH1 0xff
0x56f AND
0x570 DUP2
0x571 JUMP
---
0x569: JUMPDEST 
0x56a: V522 = 0x7
0x56c: V523 = S[0x7]
0x56d: V524 = 0xff
0x56f: V525 = AND 0xff V523
0x571: JUMP 0x192
---
Entry stack: [V12, 0x192]
Stack pops: 1
Stack additions: [S0, V525]
Exit stack: [V12, 0x192, V525]

================================

Block 0x572
[0x572:0x577]
---
Predecessors: [0x1b1]
Successors: [0x130]
---
0x572 JUMPDEST
0x573 PUSH1 0x3
0x575 SLOAD
0x576 DUP2
0x577 JUMP
---
0x572: JUMPDEST 
0x573: V526 = 0x3
0x575: V527 = S[0x3]
0x577: JUMP 0x130
---
Entry stack: [V12, 0x130]
Stack pops: 1
Stack additions: [S0, V527]
Exit stack: [V12, 0x130, V527]

================================

Block 0x578
[0x578:0x585]
---
Predecessors: [0x1d6]
Successors: [0x192]
---
0x578 JUMPDEST
0x579 PUSH1 0x7
0x57b SLOAD
0x57c PUSH2 0x100
0x57f SWAP1
0x580 DIV
0x581 PUSH1 0xff
0x583 AND
0x584 DUP2
0x585 JUMP
---
0x578: JUMPDEST 
0x579: V528 = 0x7
0x57b: V529 = S[0x7]
0x57c: V530 = 0x100
0x580: V531 = DIV V529 0x100
0x581: V532 = 0xff
0x583: V533 = AND 0xff V531
0x585: JUMP 0x192
---
Entry stack: [V12, 0x192]
Stack pops: 1
Stack additions: [S0, V533]
Exit stack: [V12, 0x192, V533]

================================

Block 0x586
[0x586:0x592]
---
Predecessors: [0x1fd]
Successors: [0x593, 0x597]
---
0x586 JUMPDEST
0x587 PUSH1 0x3
0x589 SLOAD
0x58a PUSH1 0x0
0x58c SWAP1
0x58d TIMESTAMP
0x58e GT
0x58f PUSH2 0x597
0x592 JUMPI
---
0x586: JUMPDEST 
0x587: V534 = 0x3
0x589: V535 = S[0x3]
0x58a: V536 = 0x0
0x58d: V537 = TIMESTAMP
0x58e: V538 = GT V537 V535
0x58f: V539 = 0x597
0x592: JUMPI 0x597 V538
---
Entry stack: [V12, 0xf7]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xf7, 0x0]

================================

Block 0x593
[0x593:0x596]
---
Predecessors: [0x586]
Successors: []
---
0x593 PUSH1 0x0
0x595 DUP1
0x596 REVERT
---
0x593: V540 = 0x0
0x596: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, 0x0]

================================

Block 0x597
[0x597:0x5a2]
---
Predecessors: [0x586]
Successors: [0x5a3, 0x5a7]
---
0x597 JUMPDEST
0x598 PUSH1 0x5
0x59a SLOAD
0x59b PUSH1 0x6
0x59d SLOAD
0x59e LT
0x59f PUSH2 0x5a7
0x5a2 JUMPI
---
0x597: JUMPDEST 
0x598: V541 = 0x5
0x59a: V542 = S[0x5]
0x59b: V543 = 0x6
0x59d: V544 = S[0x6]
0x59e: V545 = LT V544 V542
0x59f: V546 = 0x5a7
0x5a2: JUMPI 0x5a7 V545
---
Entry stack: [V12, 0xf7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, 0x0]

================================

Block 0x5a3
[0x5a3:0x5a6]
---
Predecessors: [0x597]
Successors: []
---
0x5a3 PUSH1 0x0
0x5a5 DUP1
0x5a6 REVERT
---
0x5a3: V547 = 0x0
0x5a6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, 0x0]

================================

Block 0x5a7
[0x5a7:0x5b2]
---
Predecessors: [0x597]
Successors: [0x5b3, 0x5b7]
---
0x5a7 JUMPDEST
0x5a8 PUSH1 0x7
0x5aa SLOAD
0x5ab PUSH1 0xff
0x5ad AND
0x5ae ISZERO
0x5af PUSH2 0x5b7
0x5b2 JUMPI
---
0x5a7: JUMPDEST 
0x5a8: V548 = 0x7
0x5aa: V549 = S[0x7]
0x5ab: V550 = 0xff
0x5ad: V551 = AND 0xff V549
0x5ae: V552 = ISZERO V551
0x5af: V553 = 0x5b7
0x5b2: JUMPI 0x5b7 V552
---
Entry stack: [V12, 0xf7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, 0x0]

================================

Block 0x5b3
[0x5b3:0x5b6]
---
Predecessors: [0x5a7]
Successors: []
---
0x5b3 PUSH1 0x0
0x5b5 DUP1
0x5b6 REVERT
---
0x5b3: V554 = 0x0
0x5b6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, 0x0]

================================

Block 0x5b7
[0x5b7:0x5d6]
---
Predecessors: [0x5a7]
Successors: [0x5d7, 0x5db]
---
0x5b7 JUMPDEST
0x5b8 PUSH1 0x1
0x5ba PUSH1 0xa0
0x5bc PUSH1 0x2
0x5be EXP
0x5bf SUB
0x5c0 CALLER
0x5c1 AND
0x5c2 PUSH1 0x0
0x5c4 SWAP1
0x5c5 DUP2
0x5c6 MSTORE
0x5c7 PUSH1 0x8
0x5c9 PUSH1 0x20
0x5cb MSTORE
0x5cc PUSH1 0x40
0x5ce SWAP1
0x5cf SHA3
0x5d0 SLOAD
0x5d1 ISZERO
0x5d2 ISZERO
0x5d3 PUSH2 0x5db
0x5d6 JUMPI
---
0x5b7: JUMPDEST 
0x5b8: V555 = 0x1
0x5ba: V556 = 0xa0
0x5bc: V557 = 0x2
0x5be: V558 = EXP 0x2 0xa0
0x5bf: V559 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c0: V560 = CALLER
0x5c1: V561 = AND V560 0xffffffffffffffffffffffffffffffffffffffff
0x5c2: V562 = 0x0
0x5c6: M[0x0] = V561
0x5c7: V563 = 0x8
0x5c9: V564 = 0x20
0x5cb: M[0x20] = 0x8
0x5cc: V565 = 0x40
0x5cf: V566 = SHA3 0x0 0x40
0x5d0: V567 = S[V566]
0x5d1: V568 = ISZERO V567
0x5d2: V569 = ISZERO V568
0x5d3: V570 = 0x5db
0x5d6: JUMPI 0x5db V569
---
Entry stack: [V12, 0xf7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, 0x0]

================================

Block 0x5d7
[0x5d7:0x5da]
---
Predecessors: [0x5b7]
Successors: []
---
0x5d7 PUSH1 0x0
0x5d9 DUP1
0x5da REVERT
---
0x5d7: V571 = 0x0
0x5da: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, 0x0]

================================

Block 0x5db
[0x5db:0x600]
---
Predecessors: [0x5b7]
Successors: [0x601, 0x605]
---
0x5db JUMPDEST
0x5dc PUSH1 0x1
0x5de PUSH1 0xa0
0x5e0 PUSH1 0x2
0x5e2 EXP
0x5e3 SUB
0x5e4 CALLER
0x5e5 DUP2
0x5e6 AND
0x5e7 PUSH1 0x0
0x5e9 SWAP1
0x5ea DUP2
0x5eb MSTORE
0x5ec PUSH1 0x8
0x5ee PUSH1 0x20
0x5f0 MSTORE
0x5f1 PUSH1 0x40
0x5f3 SWAP1
0x5f4 SHA3
0x5f5 SLOAD
0x5f6 ADDRESS
0x5f7 SWAP1
0x5f8 SWAP2
0x5f9 AND
0x5fa BALANCE
0x5fb LT
0x5fc ISZERO
0x5fd PUSH2 0x605
0x600 JUMPI
---
0x5db: JUMPDEST 
0x5dc: V572 = 0x1
0x5de: V573 = 0xa0
0x5e0: V574 = 0x2
0x5e2: V575 = EXP 0x2 0xa0
0x5e3: V576 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e4: V577 = CALLER
0x5e6: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff V577
0x5e7: V579 = 0x0
0x5eb: M[0x0] = V578
0x5ec: V580 = 0x8
0x5ee: V581 = 0x20
0x5f0: M[0x20] = 0x8
0x5f1: V582 = 0x40
0x5f4: V583 = SHA3 0x0 0x40
0x5f5: V584 = S[V583]
0x5f6: V585 = ADDRESS
0x5f9: V586 = AND 0xffffffffffffffffffffffffffffffffffffffff V585
0x5fa: V587 = BALANCE V586
0x5fb: V588 = LT V587 V584
0x5fc: V589 = ISZERO V588
0x5fd: V590 = 0x605
0x600: JUMPI 0x605 V589
---
Entry stack: [V12, 0xf7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, 0x0]

================================

Block 0x601
[0x601:0x604]
---
Predecessors: [0x5db]
Successors: []
---
0x601 PUSH1 0x0
0x603 DUP1
0x604 REVERT
---
0x601: V591 = 0x0
0x604: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, 0x0]

================================

Block 0x605
[0x605:0x649]
---
Predecessors: [0x5db]
Successors: [0x564, 0x64a]
---
0x605 JUMPDEST
0x606 POP
0x607 PUSH1 0x1
0x609 PUSH1 0xa0
0x60b PUSH1 0x2
0x60d EXP
0x60e SUB
0x60f CALLER
0x610 AND
0x611 PUSH1 0x0
0x613 DUP2
0x614 DUP2
0x615 MSTORE
0x616 PUSH1 0x8
0x618 PUSH1 0x20
0x61a MSTORE
0x61b PUSH1 0x40
0x61d DUP1
0x61e DUP3
0x61f SHA3
0x620 DUP1
0x621 SLOAD
0x622 SWAP3
0x623 SWAP1
0x624 SSTORE
0x625 SWAP1
0x626 SWAP2
0x627 SWAP1
0x628 DUP3
0x629 ISZERO
0x62a PUSH2 0x8fc
0x62d MUL
0x62e SWAP1
0x62f DUP4
0x630 SWAP1
0x631 MLOAD
0x632 PUSH1 0x0
0x634 PUSH1 0x40
0x636 MLOAD
0x637 DUP1
0x638 DUP4
0x639 SUB
0x63a DUP2
0x63b DUP6
0x63c DUP9
0x63d DUP9
0x63e CALL
0x63f SWAP4
0x640 POP
0x641 POP
0x642 POP
0x643 POP
0x644 ISZERO
0x645 ISZERO
0x646 PUSH2 0x564
0x649 JUMPI
---
0x605: JUMPDEST 
0x607: V592 = 0x1
0x609: V593 = 0xa0
0x60b: V594 = 0x2
0x60d: V595 = EXP 0x2 0xa0
0x60e: V596 = SUB 0x10000000000000000000000000000000000000000 0x1
0x60f: V597 = CALLER
0x610: V598 = AND V597 0xffffffffffffffffffffffffffffffffffffffff
0x611: V599 = 0x0
0x615: M[0x0] = V598
0x616: V600 = 0x8
0x618: V601 = 0x20
0x61a: M[0x20] = 0x8
0x61b: V602 = 0x40
0x61f: V603 = SHA3 0x0 0x40
0x621: V604 = S[V603]
0x624: S[V603] = 0x0
0x629: V605 = ISZERO V604
0x62a: V606 = 0x8fc
0x62d: V607 = MUL 0x8fc V605
0x631: V608 = M[0x40]
0x632: V609 = 0x0
0x634: V610 = 0x40
0x636: V611 = M[0x40]
0x639: V612 = SUB V608 V611
0x63e: V613 = CALL V607 V598 V604 V611 V612 V611 0x0
0x644: V614 = ISZERO V613
0x645: V615 = ISZERO V614
0x646: V616 = 0x564
0x649: JUMPI 0x564 V615
---
Entry stack: [V12, 0xf7, 0x0]
Stack pops: 1
Stack additions: [V604]
Exit stack: [V12, 0xf7, V604]

================================

Block 0x64a
[0x64a:0x64d]
---
Predecessors: [0x605]
Successors: []
---
0x64a PUSH1 0x0
0x64c DUP1
0x64d REVERT
---
0x64a: V617 = 0x0
0x64d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V604]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V604]

================================

Block 0x64e
[0x64e:0x64e]
---
Predecessors: []
Successors: [0x64f]
---
0x64e JUMPDEST
---
0x64e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x64f
[0x64f:0x651]
---
Predecessors: [0x64e]
Successors: []
Has unresolved jump.
---
0x64f JUMPDEST
0x650 POP
0x651 JUMP
---
0x64f: JUMPDEST 
0x651: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x652
[0x652:0x657]
---
Predecessors: [0x212]
Successors: [0x130]
---
0x652 JUMPDEST
0x653 PUSH1 0x2
0x655 SLOAD
0x656 DUP2
0x657 JUMP
---
0x652: JUMPDEST 
0x653: V618 = 0x2
0x655: V619 = S[0x2]
0x657: JUMP 0x130
---
Entry stack: [V12, 0x130]
Stack pops: 1
Stack additions: [S0, V619]
Exit stack: [V12, 0x130, V619]

================================

Block 0x658
[0x658:0x65d]
---
Predecessors: [0x237]
Successors: [0x130]
---
0x658 JUMPDEST
0x659 PUSH1 0x4
0x65b SLOAD
0x65c DUP2
0x65d JUMP
---
0x658: JUMPDEST 
0x659: V620 = 0x4
0x65b: V621 = S[0x4]
0x65d: JUMP 0x130
---
Entry stack: [V12, 0x130]
Stack pops: 1
Stack additions: [S0, V621]
Exit stack: [V12, 0x130, V621]

================================

Block 0x65e
[0x65e:0x6b2]
---
Predecessors: [0x25c]
Successors: [0x6b3, 0x6b7]
---
0x65e JUMPDEST
0x65f PUSH1 0xa
0x661 SLOAD
0x662 PUSH1 0x1
0x664 PUSH1 0xa0
0x666 PUSH1 0x2
0x668 EXP
0x669 SUB
0x66a AND
0x66b PUSH4 0xbbb896ad
0x670 CALLER
0x671 PUSH1 0x0
0x673 PUSH1 0x40
0x675 MLOAD
0x676 PUSH1 0x20
0x678 ADD
0x679 MSTORE
0x67a PUSH1 0x40
0x67c MLOAD
0x67d PUSH1 0xe0
0x67f PUSH1 0x2
0x681 EXP
0x682 PUSH4 0xffffffff
0x687 DUP5
0x688 AND
0x689 MUL
0x68a DUP2
0x68b MSTORE
0x68c PUSH1 0x1
0x68e PUSH1 0xa0
0x690 PUSH1 0x2
0x692 EXP
0x693 SUB
0x694 SWAP1
0x695 SWAP2
0x696 AND
0x697 PUSH1 0x4
0x699 DUP3
0x69a ADD
0x69b MSTORE
0x69c PUSH1 0x24
0x69e ADD
0x69f PUSH1 0x20
0x6a1 PUSH1 0x40
0x6a3 MLOAD
0x6a4 DUP1
0x6a5 DUP4
0x6a6 SUB
0x6a7 DUP2
0x6a8 PUSH1 0x0
0x6aa DUP8
0x6ab DUP1
0x6ac EXTCODESIZE
0x6ad ISZERO
0x6ae ISZERO
0x6af PUSH2 0x6b7
0x6b2 JUMPI
---
0x65e: JUMPDEST 
0x65f: V622 = 0xa
0x661: V623 = S[0xa]
0x662: V624 = 0x1
0x664: V625 = 0xa0
0x666: V626 = 0x2
0x668: V627 = EXP 0x2 0xa0
0x669: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66a: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V623
0x66b: V630 = 0xbbb896ad
0x670: V631 = CALLER
0x671: V632 = 0x0
0x673: V633 = 0x40
0x675: V634 = M[0x40]
0x676: V635 = 0x20
0x678: V636 = ADD 0x20 V634
0x679: M[V636] = 0x0
0x67a: V637 = 0x40
0x67c: V638 = M[0x40]
0x67d: V639 = 0xe0
0x67f: V640 = 0x2
0x681: V641 = EXP 0x2 0xe0
0x682: V642 = 0xffffffff
0x688: V643 = AND 0xbbb896ad 0xffffffff
0x689: V644 = MUL 0xbbb896ad 0x100000000000000000000000000000000000000000000000000000000
0x68b: M[V638] = 0xbbb896ad00000000000000000000000000000000000000000000000000000000
0x68c: V645 = 0x1
0x68e: V646 = 0xa0
0x690: V647 = 0x2
0x692: V648 = EXP 0x2 0xa0
0x693: V649 = SUB 0x10000000000000000000000000000000000000000 0x1
0x696: V650 = AND V631 0xffffffffffffffffffffffffffffffffffffffff
0x697: V651 = 0x4
0x69a: V652 = ADD V638 0x4
0x69b: M[V652] = V650
0x69c: V653 = 0x24
0x69e: V654 = ADD 0x24 V638
0x69f: V655 = 0x20
0x6a1: V656 = 0x40
0x6a3: V657 = M[0x40]
0x6a6: V658 = SUB V654 V657
0x6a8: V659 = 0x0
0x6ac: V660 = EXTCODESIZE V629
0x6ad: V661 = ISZERO V660
0x6ae: V662 = ISZERO V661
0x6af: V663 = 0x6b7
0x6b2: JUMPI 0x6b7 V662
---
Entry stack: [V12, 0xf7, V222]
Stack pops: 0
Stack additions: [V629, 0xbbb896ad, V654, 0x20, V657, V658, V657, 0x0, V629]
Exit stack: [V12, 0xf7, V222, V629, 0xbbb896ad, V654, 0x20, V657, V658, V657, 0x0, V629]

================================

Block 0x6b3
[0x6b3:0x6b6]
---
Predecessors: [0x65e]
Successors: []
---
0x6b3 PUSH1 0x0
0x6b5 DUP1
0x6b6 REVERT
---
0x6b3: V664 = 0x0
0x6b6: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V222, V629, 0xbbb896ad, V654, 0x20, V657, V658, V657, 0x0, V629]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V222, V629, 0xbbb896ad, V654, 0x20, V657, V658, V657, 0x0, V629]

================================

Block 0x6b7
[0x6b7:0x6c3]
---
Predecessors: [0x65e]
Successors: [0x6c4, 0x6c8]
---
0x6b7 JUMPDEST
0x6b8 PUSH2 0x2c6
0x6bb GAS
0x6bc SUB
0x6bd CALL
0x6be ISZERO
0x6bf ISZERO
0x6c0 PUSH2 0x6c8
0x6c3 JUMPI
---
0x6b7: JUMPDEST 
0x6b8: V665 = 0x2c6
0x6bb: V666 = GAS
0x6bc: V667 = SUB V666 0x2c6
0x6bd: V668 = CALL V667 V629 0x0 V657 V658 V657 0x20
0x6be: V669 = ISZERO V668
0x6bf: V670 = ISZERO V669
0x6c0: V671 = 0x6c8
0x6c3: JUMPI 0x6c8 V670
---
Entry stack: [V12, 0xf7, V222, V629, 0xbbb896ad, V654, 0x20, V657, V658, V657, 0x0, V629]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xf7, V222, V629, 0xbbb896ad, V654]

================================

Block 0x6c4
[0x6c4:0x6c7]
---
Predecessors: [0x6b7]
Successors: []
---
0x6c4 PUSH1 0x0
0x6c6 DUP1
0x6c7 REVERT
---
0x6c4: V672 = 0x0
0x6c7: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V222, V629, 0xbbb896ad, V654]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V222, V629, 0xbbb896ad, V654]

================================

Block 0x6c8
[0x6c8:0x6d8]
---
Predecessors: [0x6b7]
Successors: [0x6d9, 0x6dd]
---
0x6c8 JUMPDEST
0x6c9 POP
0x6ca POP
0x6cb POP
0x6cc PUSH1 0x40
0x6ce MLOAD
0x6cf DUP1
0x6d0 MLOAD
0x6d1 SWAP1
0x6d2 POP
0x6d3 ISZERO
0x6d4 ISZERO
0x6d5 PUSH2 0x6dd
0x6d8 JUMPI
---
0x6c8: JUMPDEST 
0x6cc: V673 = 0x40
0x6ce: V674 = M[0x40]
0x6d0: V675 = M[V674]
0x6d3: V676 = ISZERO V675
0x6d4: V677 = ISZERO V676
0x6d5: V678 = 0x6dd
0x6d8: JUMPI 0x6dd V677
---
Entry stack: [V12, 0xf7, V222, V629, 0xbbb896ad, V654]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xf7, V222]

================================

Block 0x6d9
[0x6d9:0x6dc]
---
Predecessors: [0x6c8]
Successors: []
---
0x6d9 PUSH1 0x0
0x6db DUP1
0x6dc REVERT
---
0x6d9: V679 = 0x0
0x6dc: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V222]

================================

Block 0x6dd
[0x6dd:0x705]
---
Predecessors: [0x6c8]
Successors: [0x706]
---
0x6dd JUMPDEST
0x6de PUSH1 0x9
0x6e0 DUP1
0x6e1 SLOAD
0x6e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f7 NOT
0x6f8 AND
0x6f9 PUSH1 0x1
0x6fb PUSH1 0xa0
0x6fd PUSH1 0x2
0x6ff EXP
0x700 SUB
0x701 DUP4
0x702 AND
0x703 OR
0x704 SWAP1
0x705 SSTORE
---
0x6dd: JUMPDEST 
0x6de: V680 = 0x9
0x6e1: V681 = S[0x9]
0x6e2: V682 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f7: V683 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6f8: V684 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V681
0x6f9: V685 = 0x1
0x6fb: V686 = 0xa0
0x6fd: V687 = 0x2
0x6ff: V688 = EXP 0x2 0xa0
0x700: V689 = SUB 0x10000000000000000000000000000000000000000 0x1
0x702: V690 = AND V222 0xffffffffffffffffffffffffffffffffffffffff
0x703: V691 = OR V690 V684
0x705: S[0x9] = V691
---
Entry stack: [V12, 0xf7, V222]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xf7, V222]

================================

Block 0x706
[0x706:0x706]
---
Predecessors: [0x6dd]
Successors: [0x707]
---
0x706 JUMPDEST
---
0x706: JUMPDEST 
---
Entry stack: [V12, 0xf7, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V222]

================================

Block 0x707
[0x707:0x709]
---
Predecessors: [0x706]
Successors: [0xf7]
---
0x707 JUMPDEST
0x708 POP
0x709 JUMP
---
0x707: JUMPDEST 
0x709: JUMP 0xf7
---
Entry stack: [V12, 0xf7, V222]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x70a
[0x70a:0x75e]
---
Predecessors: [0x27d]
Successors: [0x75f, 0x763]
---
0x70a JUMPDEST
0x70b PUSH1 0xa
0x70d SLOAD
0x70e PUSH1 0x1
0x710 PUSH1 0xa0
0x712 PUSH1 0x2
0x714 EXP
0x715 SUB
0x716 AND
0x717 PUSH4 0xbbb896ad
0x71c CALLER
0x71d PUSH1 0x0
0x71f PUSH1 0x40
0x721 MLOAD
0x722 PUSH1 0x20
0x724 ADD
0x725 MSTORE
0x726 PUSH1 0x40
0x728 MLOAD
0x729 PUSH1 0xe0
0x72b PUSH1 0x2
0x72d EXP
0x72e PUSH4 0xffffffff
0x733 DUP5
0x734 AND
0x735 MUL
0x736 DUP2
0x737 MSTORE
0x738 PUSH1 0x1
0x73a PUSH1 0xa0
0x73c PUSH1 0x2
0x73e EXP
0x73f SUB
0x740 SWAP1
0x741 SWAP2
0x742 AND
0x743 PUSH1 0x4
0x745 DUP3
0x746 ADD
0x747 MSTORE
0x748 PUSH1 0x24
0x74a ADD
0x74b PUSH1 0x20
0x74d PUSH1 0x40
0x74f MLOAD
0x750 DUP1
0x751 DUP4
0x752 SUB
0x753 DUP2
0x754 PUSH1 0x0
0x756 DUP8
0x757 DUP1
0x758 EXTCODESIZE
0x759 ISZERO
0x75a ISZERO
0x75b PUSH2 0x763
0x75e JUMPI
---
0x70a: JUMPDEST 
0x70b: V692 = 0xa
0x70d: V693 = S[0xa]
0x70e: V694 = 0x1
0x710: V695 = 0xa0
0x712: V696 = 0x2
0x714: V697 = EXP 0x2 0xa0
0x715: V698 = SUB 0x10000000000000000000000000000000000000000 0x1
0x716: V699 = AND 0xffffffffffffffffffffffffffffffffffffffff V693
0x717: V700 = 0xbbb896ad
0x71c: V701 = CALLER
0x71d: V702 = 0x0
0x71f: V703 = 0x40
0x721: V704 = M[0x40]
0x722: V705 = 0x20
0x724: V706 = ADD 0x20 V704
0x725: M[V706] = 0x0
0x726: V707 = 0x40
0x728: V708 = M[0x40]
0x729: V709 = 0xe0
0x72b: V710 = 0x2
0x72d: V711 = EXP 0x2 0xe0
0x72e: V712 = 0xffffffff
0x734: V713 = AND 0xbbb896ad 0xffffffff
0x735: V714 = MUL 0xbbb896ad 0x100000000000000000000000000000000000000000000000000000000
0x737: M[V708] = 0xbbb896ad00000000000000000000000000000000000000000000000000000000
0x738: V715 = 0x1
0x73a: V716 = 0xa0
0x73c: V717 = 0x2
0x73e: V718 = EXP 0x2 0xa0
0x73f: V719 = SUB 0x10000000000000000000000000000000000000000 0x1
0x742: V720 = AND V701 0xffffffffffffffffffffffffffffffffffffffff
0x743: V721 = 0x4
0x746: V722 = ADD V708 0x4
0x747: M[V722] = V720
0x748: V723 = 0x24
0x74a: V724 = ADD 0x24 V708
0x74b: V725 = 0x20
0x74d: V726 = 0x40
0x74f: V727 = M[0x40]
0x752: V728 = SUB V724 V727
0x754: V729 = 0x0
0x758: V730 = EXTCODESIZE V699
0x759: V731 = ISZERO V730
0x75a: V732 = ISZERO V731
0x75b: V733 = 0x763
0x75e: JUMPI 0x763 V732
---
Entry stack: [V12, 0xf7]
Stack pops: 0
Stack additions: [V699, 0xbbb896ad, V724, 0x20, V727, V728, V727, 0x0, V699]
Exit stack: [V12, 0xf7, V699, 0xbbb896ad, V724, 0x20, V727, V728, V727, 0x0, V699]

================================

Block 0x75f
[0x75f:0x762]
---
Predecessors: [0x70a]
Successors: []
---
0x75f PUSH1 0x0
0x761 DUP1
0x762 REVERT
---
0x75f: V734 = 0x0
0x762: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V699, 0xbbb896ad, V724, 0x20, V727, V728, V727, 0x0, V699]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V699, 0xbbb896ad, V724, 0x20, V727, V728, V727, 0x0, V699]

================================

Block 0x763
[0x763:0x76f]
---
Predecessors: [0x70a]
Successors: [0x770, 0x774]
---
0x763 JUMPDEST
0x764 PUSH2 0x2c6
0x767 GAS
0x768 SUB
0x769 CALL
0x76a ISZERO
0x76b ISZERO
0x76c PUSH2 0x774
0x76f JUMPI
---
0x763: JUMPDEST 
0x764: V735 = 0x2c6
0x767: V736 = GAS
0x768: V737 = SUB V736 0x2c6
0x769: V738 = CALL V737 V699 0x0 V727 V728 V727 0x20
0x76a: V739 = ISZERO V738
0x76b: V740 = ISZERO V739
0x76c: V741 = 0x774
0x76f: JUMPI 0x774 V740
---
Entry stack: [V12, 0xf7, V699, 0xbbb896ad, V724, 0x20, V727, V728, V727, 0x0, V699]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xf7, V699, 0xbbb896ad, V724]

================================

Block 0x770
[0x770:0x773]
---
Predecessors: [0x763]
Successors: []
---
0x770 PUSH1 0x0
0x772 DUP1
0x773 REVERT
---
0x770: V742 = 0x0
0x773: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V699, 0xbbb896ad, V724]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V699, 0xbbb896ad, V724]

================================

Block 0x774
[0x774:0x784]
---
Predecessors: [0x763]
Successors: [0x785, 0x789]
---
0x774 JUMPDEST
0x775 POP
0x776 POP
0x777 POP
0x778 PUSH1 0x40
0x77a MLOAD
0x77b DUP1
0x77c MLOAD
0x77d SWAP1
0x77e POP
0x77f ISZERO
0x780 ISZERO
0x781 PUSH2 0x789
0x784 JUMPI
---
0x774: JUMPDEST 
0x778: V743 = 0x40
0x77a: V744 = M[0x40]
0x77c: V745 = M[V744]
0x77f: V746 = ISZERO V745
0x780: V747 = ISZERO V746
0x781: V748 = 0x789
0x784: JUMPI 0x789 V747
---
Entry stack: [V12, 0xf7, V699, 0xbbb896ad, V724]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xf7]

================================

Block 0x785
[0x785:0x788]
---
Predecessors: [0x774]
Successors: []
---
0x785 PUSH1 0x0
0x787 DUP1
0x788 REVERT
---
0x785: V749 = 0x0
0x788: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7]

================================

Block 0x789
[0x789:0x7c1]
---
Predecessors: [0x774]
Successors: [0x7c2, 0x7c6]
---
0x789 JUMPDEST
0x78a CALLER
0x78b PUSH1 0x1
0x78d PUSH1 0xa0
0x78f PUSH1 0x2
0x791 EXP
0x792 SUB
0x793 AND
0x794 PUSH2 0x8fc
0x797 ADDRESS
0x798 PUSH1 0x1
0x79a PUSH1 0xa0
0x79c PUSH1 0x2
0x79e EXP
0x79f SUB
0x7a0 AND
0x7a1 BALANCE
0x7a2 SWAP1
0x7a3 DUP2
0x7a4 ISZERO
0x7a5 MUL
0x7a6 SWAP1
0x7a7 PUSH1 0x40
0x7a9 MLOAD
0x7aa PUSH1 0x0
0x7ac PUSH1 0x40
0x7ae MLOAD
0x7af DUP1
0x7b0 DUP4
0x7b1 SUB
0x7b2 DUP2
0x7b3 DUP6
0x7b4 DUP9
0x7b5 DUP9
0x7b6 CALL
0x7b7 SWAP4
0x7b8 POP
0x7b9 POP
0x7ba POP
0x7bb POP
0x7bc ISZERO
0x7bd ISZERO
0x7be PUSH2 0x7c6
0x7c1 JUMPI
---
0x789: JUMPDEST 
0x78a: V750 = CALLER
0x78b: V751 = 0x1
0x78d: V752 = 0xa0
0x78f: V753 = 0x2
0x791: V754 = EXP 0x2 0xa0
0x792: V755 = SUB 0x10000000000000000000000000000000000000000 0x1
0x793: V756 = AND 0xffffffffffffffffffffffffffffffffffffffff V750
0x794: V757 = 0x8fc
0x797: V758 = ADDRESS
0x798: V759 = 0x1
0x79a: V760 = 0xa0
0x79c: V761 = 0x2
0x79e: V762 = EXP 0x2 0xa0
0x79f: V763 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a0: V764 = AND 0xffffffffffffffffffffffffffffffffffffffff V758
0x7a1: V765 = BALANCE V764
0x7a4: V766 = ISZERO V765
0x7a5: V767 = MUL V766 0x8fc
0x7a7: V768 = 0x40
0x7a9: V769 = M[0x40]
0x7aa: V770 = 0x0
0x7ac: V771 = 0x40
0x7ae: V772 = M[0x40]
0x7b1: V773 = SUB V769 V772
0x7b6: V774 = CALL V767 V756 V765 V772 V773 V772 0x0
0x7bc: V775 = ISZERO V774
0x7bd: V776 = ISZERO V775
0x7be: V777 = 0x7c6
0x7c1: JUMPI 0x7c6 V776
---
Entry stack: [V12, 0xf7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7]

================================

Block 0x7c2
[0x7c2:0x7c5]
---
Predecessors: [0x789]
Successors: []
---
0x7c2 PUSH1 0x0
0x7c4 DUP1
0x7c5 REVERT
---
0x7c2: V778 = 0x0
0x7c5: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7]

================================

Block 0x7c6
[0x7c6:0x7c6]
---
Predecessors: [0x789]
Successors: [0x7c7]
---
0x7c6 JUMPDEST
---
0x7c6: JUMPDEST 
---
Entry stack: [V12, 0xf7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7]

================================

Block 0x7c7
[0x7c7:0x7c7]
---
Predecessors: [0x7c6]
Successors: [0x7c8]
---
0x7c7 JUMPDEST
---
0x7c7: JUMPDEST 
---
Entry stack: [V12, 0xf7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7]

================================

Block 0x7c8
[0x7c8:0x7c9]
---
Predecessors: [0x7c7]
Successors: [0xf7]
---
0x7c8 JUMPDEST
0x7c9 JUMP
---
0x7c8: JUMPDEST 
0x7c9: JUMP 0xf7
---
Entry stack: [V12, 0xf7]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x7ca
[0x7ca:0x81e]
---
Predecessors: [0x292]
Successors: [0x81f, 0x823]
---
0x7ca JUMPDEST
0x7cb PUSH1 0xa
0x7cd SLOAD
0x7ce PUSH1 0x1
0x7d0 PUSH1 0xa0
0x7d2 PUSH1 0x2
0x7d4 EXP
0x7d5 SUB
0x7d6 AND
0x7d7 PUSH4 0xbbb896ad
0x7dc CALLER
0x7dd PUSH1 0x0
0x7df PUSH1 0x40
0x7e1 MLOAD
0x7e2 PUSH1 0x20
0x7e4 ADD
0x7e5 MSTORE
0x7e6 PUSH1 0x40
0x7e8 MLOAD
0x7e9 PUSH1 0xe0
0x7eb PUSH1 0x2
0x7ed EXP
0x7ee PUSH4 0xffffffff
0x7f3 DUP5
0x7f4 AND
0x7f5 MUL
0x7f6 DUP2
0x7f7 MSTORE
0x7f8 PUSH1 0x1
0x7fa PUSH1 0xa0
0x7fc PUSH1 0x2
0x7fe EXP
0x7ff SUB
0x800 SWAP1
0x801 SWAP2
0x802 AND
0x803 PUSH1 0x4
0x805 DUP3
0x806 ADD
0x807 MSTORE
0x808 PUSH1 0x24
0x80a ADD
0x80b PUSH1 0x20
0x80d PUSH1 0x40
0x80f MLOAD
0x810 DUP1
0x811 DUP4
0x812 SUB
0x813 DUP2
0x814 PUSH1 0x0
0x816 DUP8
0x817 DUP1
0x818 EXTCODESIZE
0x819 ISZERO
0x81a ISZERO
0x81b PUSH2 0x823
0x81e JUMPI
---
0x7ca: JUMPDEST 
0x7cb: V779 = 0xa
0x7cd: V780 = S[0xa]
0x7ce: V781 = 0x1
0x7d0: V782 = 0xa0
0x7d2: V783 = 0x2
0x7d4: V784 = EXP 0x2 0xa0
0x7d5: V785 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d6: V786 = AND 0xffffffffffffffffffffffffffffffffffffffff V780
0x7d7: V787 = 0xbbb896ad
0x7dc: V788 = CALLER
0x7dd: V789 = 0x0
0x7df: V790 = 0x40
0x7e1: V791 = M[0x40]
0x7e2: V792 = 0x20
0x7e4: V793 = ADD 0x20 V791
0x7e5: M[V793] = 0x0
0x7e6: V794 = 0x40
0x7e8: V795 = M[0x40]
0x7e9: V796 = 0xe0
0x7eb: V797 = 0x2
0x7ed: V798 = EXP 0x2 0xe0
0x7ee: V799 = 0xffffffff
0x7f4: V800 = AND 0xbbb896ad 0xffffffff
0x7f5: V801 = MUL 0xbbb896ad 0x100000000000000000000000000000000000000000000000000000000
0x7f7: M[V795] = 0xbbb896ad00000000000000000000000000000000000000000000000000000000
0x7f8: V802 = 0x1
0x7fa: V803 = 0xa0
0x7fc: V804 = 0x2
0x7fe: V805 = EXP 0x2 0xa0
0x7ff: V806 = SUB 0x10000000000000000000000000000000000000000 0x1
0x802: V807 = AND V788 0xffffffffffffffffffffffffffffffffffffffff
0x803: V808 = 0x4
0x806: V809 = ADD V795 0x4
0x807: M[V809] = V807
0x808: V810 = 0x24
0x80a: V811 = ADD 0x24 V795
0x80b: V812 = 0x20
0x80d: V813 = 0x40
0x80f: V814 = M[0x40]
0x812: V815 = SUB V811 V814
0x814: V816 = 0x0
0x818: V817 = EXTCODESIZE V786
0x819: V818 = ISZERO V817
0x81a: V819 = ISZERO V818
0x81b: V820 = 0x823
0x81e: JUMPI 0x823 V819
---
Entry stack: [V12, 0xf7]
Stack pops: 0
Stack additions: [V786, 0xbbb896ad, V811, 0x20, V814, V815, V814, 0x0, V786]
Exit stack: [V12, 0xf7, V786, 0xbbb896ad, V811, 0x20, V814, V815, V814, 0x0, V786]

================================

Block 0x81f
[0x81f:0x822]
---
Predecessors: [0x7ca]
Successors: []
---
0x81f PUSH1 0x0
0x821 DUP1
0x822 REVERT
---
0x81f: V821 = 0x0
0x822: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V786, 0xbbb896ad, V811, 0x20, V814, V815, V814, 0x0, V786]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V786, 0xbbb896ad, V811, 0x20, V814, V815, V814, 0x0, V786]

================================

Block 0x823
[0x823:0x82f]
---
Predecessors: [0x7ca]
Successors: [0x830, 0x834]
---
0x823 JUMPDEST
0x824 PUSH2 0x2c6
0x827 GAS
0x828 SUB
0x829 CALL
0x82a ISZERO
0x82b ISZERO
0x82c PUSH2 0x834
0x82f JUMPI
---
0x823: JUMPDEST 
0x824: V822 = 0x2c6
0x827: V823 = GAS
0x828: V824 = SUB V823 0x2c6
0x829: V825 = CALL V824 V786 0x0 V814 V815 V814 0x20
0x82a: V826 = ISZERO V825
0x82b: V827 = ISZERO V826
0x82c: V828 = 0x834
0x82f: JUMPI 0x834 V827
---
Entry stack: [V12, 0xf7, V786, 0xbbb896ad, V811, 0x20, V814, V815, V814, 0x0, V786]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xf7, V786, 0xbbb896ad, V811]

================================

Block 0x830
[0x830:0x833]
---
Predecessors: [0x823]
Successors: []
---
0x830 PUSH1 0x0
0x832 DUP1
0x833 REVERT
---
0x830: V829 = 0x0
0x833: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7, V786, 0xbbb896ad, V811]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V786, 0xbbb896ad, V811]

================================

Block 0x834
[0x834:0x844]
---
Predecessors: [0x823]
Successors: [0x845, 0x849]
---
0x834 JUMPDEST
0x835 POP
0x836 POP
0x837 POP
0x838 PUSH1 0x40
0x83a MLOAD
0x83b DUP1
0x83c MLOAD
0x83d SWAP1
0x83e POP
0x83f ISZERO
0x840 ISZERO
0x841 PUSH2 0x849
0x844 JUMPI
---
0x834: JUMPDEST 
0x838: V830 = 0x40
0x83a: V831 = M[0x40]
0x83c: V832 = M[V831]
0x83f: V833 = ISZERO V832
0x840: V834 = ISZERO V833
0x841: V835 = 0x849
0x844: JUMPI 0x849 V834
---
Entry stack: [V12, 0xf7, V786, 0xbbb896ad, V811]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xf7]

================================

Block 0x845
[0x845:0x848]
---
Predecessors: [0x834]
Successors: []
---
0x845 PUSH1 0x0
0x847 DUP1
0x848 REVERT
---
0x845: V836 = 0x0
0x848: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7]

================================

Block 0x849
[0x849:0x853]
---
Predecessors: [0x834]
Successors: [0x854, 0x858]
---
0x849 JUMPDEST
0x84a PUSH1 0x3
0x84c SLOAD
0x84d TIMESTAMP
0x84e LT
0x84f ISZERO
0x850 PUSH2 0x858
0x853 JUMPI
---
0x849: JUMPDEST 
0x84a: V837 = 0x3
0x84c: V838 = S[0x3]
0x84d: V839 = TIMESTAMP
0x84e: V840 = LT V839 V838
0x84f: V841 = ISZERO V840
0x850: V842 = 0x858
0x853: JUMPI 0x858 V841
---
Entry stack: [V12, 0xf7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7]

================================

Block 0x854
[0x854:0x857]
---
Predecessors: [0x849]
Successors: []
---
0x854 PUSH1 0x0
0x856 DUP1
0x857 REVERT
---
0x854: V843 = 0x0
0x857: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7]

================================

Block 0x858
[0x858:0x88e]
---
Predecessors: [0x849]
Successors: [0x88f]
---
0x858 JUMPDEST
0x859 PUSH1 0x7
0x85b DUP1
0x85c SLOAD
0x85d PUSH1 0xff
0x85f NOT
0x860 AND
0x861 SWAP1
0x862 SSTORE
0x863 PUSH32 0x3d67f74d80cbb53f6334f3c56adaa75b4e5594e1e50136705f6d98dc552663a0
0x884 PUSH1 0x40
0x886 MLOAD
0x887 PUSH1 0x40
0x889 MLOAD
0x88a DUP1
0x88b SWAP2
0x88c SUB
0x88d SWAP1
0x88e LOG1
---
0x858: JUMPDEST 
0x859: V844 = 0x7
0x85c: V845 = S[0x7]
0x85d: V846 = 0xff
0x85f: V847 = NOT 0xff
0x860: V848 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V845
0x862: S[0x7] = V848
0x863: V849 = 0x3d67f74d80cbb53f6334f3c56adaa75b4e5594e1e50136705f6d98dc552663a0
0x884: V850 = 0x40
0x886: V851 = M[0x40]
0x887: V852 = 0x40
0x889: V853 = M[0x40]
0x88c: V854 = SUB V851 V853
0x88e: LOG V853 V854 0x3d67f74d80cbb53f6334f3c56adaa75b4e5594e1e50136705f6d98dc552663a0
---
Entry stack: [V12, 0xf7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7]

================================

Block 0x88f
[0x88f:0x88f]
---
Predecessors: [0x858]
Successors: [0x890]
---
0x88f JUMPDEST
---
0x88f: JUMPDEST 
---
Entry stack: [V12, 0xf7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7]

================================

Block 0x890
[0x890:0x891]
---
Predecessors: [0x88f]
Successors: [0xf7]
---
0x890 JUMPDEST
0x891 JUMP
---
0x890: JUMPDEST 
0x891: JUMP 0xf7
---
Entry stack: [V12, 0xf7]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x892
[0x892:0x897]
---
Predecessors: [0x2a7]
Successors: [0x130]
---
0x892 JUMPDEST
0x893 PUSH1 0x6
0x895 SLOAD
0x896 DUP2
0x897 JUMP
---
0x892: JUMPDEST 
0x893: V855 = 0x6
0x895: V856 = S[0x6]
0x897: JUMP 0x130
---
Entry stack: [V12, 0x130]
Stack pops: 1
Stack additions: [S0, V856]
Exit stack: [V12, 0x130, V856]

================================

Block 0x898
[0x898:0x8a6]
---
Predecessors: [0x2cc]
Successors: [0x2d4]
---
0x898 JUMPDEST
0x899 PUSH1 0x9
0x89b SLOAD
0x89c PUSH1 0x1
0x89e PUSH1 0xa0
0x8a0 PUSH1 0x2
0x8a2 EXP
0x8a3 SUB
0x8a4 AND
0x8a5 DUP2
0x8a6 JUMP
---
0x898: JUMPDEST 
0x899: V857 = 0x9
0x89b: V858 = S[0x9]
0x89c: V859 = 0x1
0x89e: V860 = 0xa0
0x8a0: V861 = 0x2
0x8a2: V862 = EXP 0x2 0xa0
0x8a3: V863 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a4: V864 = AND 0xffffffffffffffffffffffffffffffffffffffff V858
0x8a6: JUMP 0x2d4
---
Entry stack: [V12, 0x2d4]
Stack pops: 1
Stack additions: [S0, V864]
Exit stack: [V12, 0x2d4, V864]

================================

Block 0x8a7
[0x8a7:0x8b4]
---
Predecessors: [0x327, 0x3a1]
Successors: [0x8b5, 0x8b6]
---
0x8a7 JUMPDEST
0x8a8 PUSH1 0x0
0x8aa DUP3
0x8ab DUP3
0x8ac ADD
0x8ad DUP4
0x8ae DUP2
0x8af LT
0x8b0 ISZERO
0x8b1 PUSH2 0x8b6
0x8b4 JUMPI
---
0x8a7: JUMPDEST 
0x8a8: V865 = 0x0
0x8ac: V866 = ADD S0 S1
0x8af: V867 = LT V866 S1
0x8b0: V868 = ISZERO V867
0x8b1: V869 = 0x8b6
0x8b4: JUMPI 0x8b6 V868
---
Entry stack: [V12, 0xf7, S7, V303, S5, S4, 0x0, {0x353, 0x3b7}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V866]
Exit stack: [V12, 0xf7, S7, V303, S5, S4, 0x0, {0x353, 0x3b7}, S1, S0, 0x0, V866]

================================

Block 0x8b5
[0x8b5:0x8b5]
---
Predecessors: [0x8a7]
Successors: []
---
0x8b5 INVALID
---
0x8b5: INVALID 
---
Entry stack: [V12, 0xf7, S9, V303, S7, S6, 0x0, {0x353, 0x3b7}, S3, S2, 0x0, V866]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, S9, V303, S7, S6, 0x0, {0x353, 0x3b7}, S3, S2, 0x0, V866]

================================

Block 0x8b6
[0x8b6:0x8b9]
---
Predecessors: [0x8a7, 0x8df]
Successors: [0x8ba]
---
0x8b6 JUMPDEST
0x8b7 DUP1
0x8b8 SWAP2
0x8b9 POP
---
0x8b6: JUMPDEST 
---
Entry stack: [V12, 0xf7, S9, V303, S7, S6, 0x0, {0x353, 0x38f, 0x3b7}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0xf7, S9, V303, S7, S6, 0x0, {0x353, 0x38f, 0x3b7}, S3, S2, S0, S0]

================================

Block 0x8ba
[0x8ba:0x8c0]
---
Predecessors: [0x8b6]
Successors: [0x353, 0x38f, 0x3b7]
---
0x8ba JUMPDEST
0x8bb POP
0x8bc SWAP3
0x8bd SWAP2
0x8be POP
0x8bf POP
0x8c0 JUMP
---
0x8ba: JUMPDEST 
0x8c0: JUMP {0x353, 0x38f, 0x3b7}
---
Entry stack: [V12, 0xf7, V91, V303, S7, S6, 0x0, {0x353, 0x38f, 0x3b7}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0xf7, V91, V303, S7, S6, 0x0, S1]

================================

Block 0x8c1
[0x8c1:0x8cd]
---
Predecessors: [0x37b]
Successors: [0x8ce, 0x8cf]
---
0x8c1 JUMPDEST
0x8c2 PUSH1 0x0
0x8c4 DUP1
0x8c5 DUP3
0x8c6 DUP5
0x8c7 DUP2
0x8c8 ISZERO
0x8c9 ISZERO
0x8ca PUSH2 0x8cf
0x8cd JUMPI
---
0x8c1: JUMPDEST 
0x8c2: V870 = 0x0
0x8c8: V871 = ISZERO V326
0x8c9: V872 = ISZERO V871
0x8ca: V873 = 0x8cf
0x8cd: JUMPI 0x8cf V872
---
Entry stack: [V12, 0xf7, V91, V303, S5, S4, 0x0, 0x38f, V303, V326]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V12, 0xf7, V91, V303, S5, S4, 0x0, 0x38f, V303, V326, 0x0, 0x0, V326, V303]

================================

Block 0x8ce
[0x8ce:0x8ce]
---
Predecessors: [0x8c1]
Successors: []
---
0x8ce INVALID
---
0x8ce: INVALID 
---
Entry stack: [V12, 0xf7, V91, V303, S9, S8, 0x0, 0x38f, V303, V326, 0x0, 0x0, V326, V303]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V91, V303, S9, S8, 0x0, 0x38f, V303, V326, 0x0, 0x0, V326, V303]

================================

Block 0x8cf
[0x8cf:0x8dd]
---
Predecessors: [0x8c1]
Successors: [0x8de, 0x8df]
---
0x8cf JUMPDEST
0x8d0 MOD
0x8d1 SWAP1
0x8d2 POP
0x8d3 DUP1
0x8d4 DUP4
0x8d5 DUP5
0x8d6 DUP7
0x8d7 DUP2
0x8d8 ISZERO
0x8d9 ISZERO
0x8da PUSH2 0x8df
0x8dd JUMPI
---
0x8cf: JUMPDEST 
0x8d0: V874 = MOD V303 V326
0x8d8: V875 = ISZERO V326
0x8d9: V876 = ISZERO V875
0x8da: V877 = 0x8df
0x8dd: JUMPI 0x8df V876
---
Entry stack: [V12, 0xf7, V91, V303, S9, S8, 0x0, 0x38f, V303, V326, 0x0, 0x0, V326, V303]
Stack pops: 6
Stack additions: [S5, S4, S3, V874, V874, S4, S4, S5]
Exit stack: [V12, 0xf7, V91, V303, S9, S8, 0x0, 0x38f, V303, V326, 0x0, V874, V874, V326, V326, V303]

================================

Block 0x8de
[0x8de:0x8de]
---
Predecessors: [0x8cf]
Successors: []
---
0x8de INVALID
---
0x8de: INVALID 
---
Entry stack: [V12, 0xf7, V91, V303, S11, S10, 0x0, 0x38f, V303, V326, 0x0, V874, V874, V326, V326, V303]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V91, V303, S11, S10, 0x0, 0x38f, V303, V326, 0x0, V874, V874, V326, V326, V303]

================================

Block 0x8df
[0x8df:0x8e8]
---
Predecessors: [0x8cf]
Successors: [0x8b6, 0x8e9]
---
0x8df JUMPDEST
0x8e0 DIV
0x8e1 MUL
0x8e2 ADD
0x8e3 DUP5
0x8e4 EQ
0x8e5 PUSH2 0x8b6
0x8e8 JUMPI
---
0x8df: JUMPDEST 
0x8e0: V878 = DIV V303 V326
0x8e1: V879 = MUL V878 V326
0x8e2: V880 = ADD V879 V874
0x8e4: V881 = EQ V303 V880
0x8e5: V882 = 0x8b6
0x8e8: JUMPI 0x8b6 V881
---
Entry stack: [V12, 0xf7, V91, V303, S11, S10, 0x0, 0x38f, V303, V326, 0x0, V874, V874, V326, V326, V303]
Stack pops: 8
Stack additions: [S7, S6, S5, S4]
Exit stack: [V12, 0xf7, V91, V303, S11, S10, 0x0, 0x38f, V303, V326, 0x0, V874]

================================

Block 0x8e9
[0x8e9:0x8e9]
---
Predecessors: [0x8df]
Successors: []
---
0x8e9 INVALID
---
0x8e9: INVALID 
---
Entry stack: [V12, 0xf7, V91, V303, S7, S6, 0x0, 0x38f, V303, V326, 0x0, V874]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V91, V303, S7, S6, 0x0, 0x38f, V303, V326, 0x0, V874]

================================

Block 0x8ea
[0x8ea:0x8ed]
---
Predecessors: []
Successors: [0x8ee]
---
0x8ea JUMPDEST
0x8eb DUP1
0x8ec SWAP2
0x8ed POP
---
0x8ea: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0x8ee
[0x8ee:0x8f4]
---
Predecessors: [0x8ea]
Successors: []
Has unresolved jump.
---
0x8ee JUMPDEST
0x8ef POP
0x8f0 SWAP3
0x8f1 SWAP2
0x8f2 POP
0x8f3 POP
0x8f4 JUMP
---
0x8ee: JUMPDEST 
0x8f4: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0x8f5
[0x8f5:0x8ff]
---
Predecessors: [0x38f]
Successors: [0x900, 0x901]
---
0x8f5 JUMPDEST
0x8f6 PUSH1 0x0
0x8f8 DUP3
0x8f9 DUP3
0x8fa GT
0x8fb ISZERO
0x8fc PUSH2 0x901
0x8ff JUMPI
---
0x8f5: JUMPDEST 
0x8f6: V883 = 0x0
0x8fa: V884 = GT S0 V303
0x8fb: V885 = ISZERO V884
0x8fc: V886 = 0x901
0x8ff: JUMPI 0x901 V885
---
Entry stack: [V12, 0xf7, V91, V303, S5, S4, 0x0, 0x3a1, V303, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, 0xf7, V91, V303, S5, S4, 0x0, 0x3a1, V303, S0, 0x0]

================================

Block 0x900
[0x900:0x900]
---
Predecessors: [0x8f5]
Successors: []
---
0x900 INVALID
---
0x900: INVALID 
---
Entry stack: [V12, 0xf7, V91, V303, S6, S5, 0x0, 0x3a1, V303, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V91, V303, S6, S5, 0x0, 0x3a1, V303, S1, 0x0]

================================

Block 0x901
[0x901:0x905]
---
Predecessors: [0x8f5]
Successors: [0x906]
---
0x901 JUMPDEST
0x902 POP
0x903 DUP1
0x904 DUP3
0x905 SUB
---
0x901: JUMPDEST 
0x905: V887 = SUB V303 S1
---
Entry stack: [V12, 0xf7, V91, V303, S6, S5, 0x0, 0x3a1, V303, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V887]
Exit stack: [V12, 0xf7, V91, V303, S6, S5, 0x0, 0x3a1, V303, S1, V887]

================================

Block 0x906
[0x906:0x90b]
---
Predecessors: [0x901]
Successors: [0x3a1]
---
0x906 JUMPDEST
0x907 SWAP3
0x908 SWAP2
0x909 POP
0x90a POP
0x90b JUMP
---
0x906: JUMPDEST 
0x90b: JUMP 0x3a1
---
Entry stack: [V12, 0xf7, V91, V303, S6, S5, 0x0, 0x3a1, V303, S1, V887]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0xf7, V91, V303, S6, S5, 0x0, V887]

================================

Block 0x90c
[0x90c:0x918]
---
Predecessors: [0x3b7]
Successors: [0x919, 0x91a]
---
0x90c JUMPDEST
0x90d PUSH1 0x0
0x90f DUP1
0x910 DUP3
0x911 DUP5
0x912 DUP2
0x913 ISZERO
0x914 ISZERO
0x915 PUSH2 0x91a
0x918 JUMPI
---
0x90c: JUMPDEST 
0x90d: V888 = 0x0
0x913: V889 = ISZERO V343
0x914: V890 = ISZERO V889
0x915: V891 = 0x91a
0x918: JUMPI 0x91a V890
---
Entry stack: [V12, 0xf7, V91, V303, S5, S4, 0x0, 0x3ce, S1, V343]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V12, 0xf7, V91, V303, S5, S4, 0x0, 0x3ce, S1, V343, 0x0, 0x0, V343, S1]

================================

Block 0x919
[0x919:0x919]
---
Predecessors: [0x90c]
Successors: []
---
0x919 INVALID
---
0x919: INVALID 
---
Entry stack: [V12, 0xf7, V91, V303, S9, S8, 0x0, 0x3ce, S5, V343, 0x0, 0x0, V343, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf7, V91, V303, S9, S8, 0x0, 0x3ce, S5, V343, 0x0, 0x0, V343, S0]

================================

Block 0x91a
[0x91a:0x920]
---
Predecessors: [0x90c]
Successors: [0x921]
---
0x91a JUMPDEST
0x91b DIV
0x91c SWAP1
0x91d POP
0x91e DUP1
0x91f SWAP2
0x920 POP
---
0x91a: JUMPDEST 
0x91b: V892 = DIV S0 V343
---
Entry stack: [V12, 0xf7, V91, V303, S9, S8, 0x0, 0x3ce, S5, V343, 0x0, 0x0, V343, S0]
Stack pops: 4
Stack additions: [V892, V892]
Exit stack: [V12, 0xf7, V91, V303, S9, S8, 0x0, 0x3ce, S5, V343, V892, V892]

================================

Block 0x921
[0x921:0x927]
---
Predecessors: [0x91a]
Successors: [0x3ce]
---
0x921 JUMPDEST
0x922 POP
0x923 SWAP3
0x924 SWAP2
0x925 POP
0x926 POP
0x927 JUMP
---
0x921: JUMPDEST 
0x927: JUMP 0x3ce
---
Entry stack: [V12, 0xf7, V91, V303, S7, S6, 0x0, 0x3ce, S3, V343, V892, V892]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0xf7, V91, V303, S7, S6, 0x0, V892]

================================

Block 0x928
[0x928:0x953]
---
Predecessors: []
Successors: []
---
0x928 STOP
0x929 LOG1
0x92a PUSH6 0x627a7a723058
0x931 SHA3
0x932 MISSING 0xfc
0x933 MOD
0x934 PUSH17 0x33e4f1fb97911bf351eeff7a5cdeebb101
0x946 NOT
0x947 MISSING 0x24
0x948 GT
0x949 DUP12
0x94a MOD
0x94b AND
0x94c MISSING 0xca
0x94d SMOD
0x94e MISSING 0x46
0x94f MISSING 0xe8
0x950 LT
0x951 MISSING 0xc
0x952 STOP
0x953 MISSING 0x29
---
0x928: STOP 
0x929: LOG S0 S1 S2
0x92a: V893 = 0x627a7a723058
0x931: V894 = SHA3 0x627a7a723058 S3
0x932: MISSING 0xfc
0x933: V895 = MOD S0 S1
0x934: V896 = 0x33e4f1fb97911bf351eeff7a5cdeebb101
0x946: V897 = NOT 0x33e4f1fb97911bf351eeff7a5cdeebb101
0x947: MISSING 0x24
0x948: V898 = GT S0 S1
0x94a: V899 = MOD S12 V898
0x94b: V900 = AND V899 S2
0x94c: MISSING 0xca
0x94d: V901 = SMOD S0 S1
0x94e: MISSING 0x46
0x94f: MISSING 0xe8
0x950: V902 = LT S0 S1
0x951: MISSING 0xc
0x952: STOP 
0x953: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V894, 0xffffffffffffffffffffffffffffffcc1b0e04686ee40cae110085a321144efe, V895, V900, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V901, V902]
Exit stack: []

================================

Function 0:
Public function signature: 0x3f9c793
Entry block: 0xfb
Exit block: 0xf9
Body: 0xf7, 0xf8, 0xf9, 0xfb

Function 1:
Public function signature: 0x1f6d4942
Entry block: 0x111
Exit block: 0x130
Body: 0x111, 0x118, 0x11c, 0x130, 0x484

Function 2:
Public function signature: 0x3fa615b0
Entry block: 0x142
Exit block: 0x130
Body: 0x130, 0x142, 0x149, 0x14d, 0x496

Function 3:
Public function signature: 0x5d2c53a7
Entry block: 0x167
Exit block: 0xf9
Body: 0xf7, 0xf8, 0xf9, 0x167, 0x16e, 0x172, 0x49c, 0x4f1, 0x4f5, 0x502, 0x506, 0x517, 0x51b, 0x52f, 0x533, 0x560, 0x564, 0x565, 0x566

Function 4:
Public function signature: 0x68955fb1
Entry block: 0x17f
Exit block: 0x192
Body: 0x17f, 0x186, 0x18a, 0x192, 0x569

Function 5:
Public function signature: 0x7e1055b6
Entry block: 0x1a6
Exit block: 0x130
Body: 0x130, 0x1a6, 0x1ad, 0x1b1, 0x572

Function 6:
Public function signature: 0x84883795
Entry block: 0x1cb
Exit block: 0x192
Body: 0x192, 0x1cb, 0x1d2, 0x1d6, 0x578

Function 7:
Public function signature: 0x97ab5baa
Entry block: 0x1f2
Exit block: 0xf9
Body: 0xf7, 0xf8, 0xf9, 0x1f2, 0x1f9, 0x1fd, 0x564, 0x565, 0x566, 0x586, 0x593, 0x597, 0x5a3, 0x5a7, 0x5b3, 0x5b7, 0x5d7, 0x5db, 0x601, 0x605, 0x64a

Function 8:
Public function signature: 0xa7c3d71b
Entry block: 0x207
Exit block: 0x130
Body: 0x130, 0x207, 0x20e, 0x212, 0x652

Function 9:
Public function signature: 0xbb3f0390
Entry block: 0x22c
Exit block: 0x130
Body: 0x130, 0x22c, 0x233, 0x237, 0x658

Function 10:
Public function signature: 0xcc63a3c9
Entry block: 0x251
Exit block: 0xf9
Body: 0xf7, 0xf8, 0xf9, 0x251, 0x258, 0x25c, 0x65e, 0x6b3, 0x6b7, 0x6c4, 0x6c8, 0x6d9, 0x6dd, 0x706, 0x707

Function 11:
Public function signature: 0xd28fa960
Entry block: 0x272
Exit block: 0xf9
Body: 0xf7, 0xf8, 0xf9, 0x272, 0x279, 0x27d, 0x70a, 0x75f, 0x763, 0x770, 0x774, 0x785, 0x789, 0x7c2, 0x7c6, 0x7c7, 0x7c8

Function 12:
Public function signature: 0xefbe1c1c
Entry block: 0x287
Exit block: 0xf9
Body: 0xf7, 0xf8, 0xf9, 0x287, 0x28e, 0x292, 0x7ca, 0x81f, 0x823, 0x830, 0x834, 0x845, 0x849, 0x854, 0x858, 0x88f, 0x890

Function 13:
Public function signature: 0xf3a504f2
Entry block: 0x29c
Exit block: 0x130
Body: 0x130, 0x29c, 0x2a3, 0x2a7, 0x892

Function 14:
Public function signature: 0xfc0c546a
Entry block: 0x2c1
Exit block: 0x2d4
Body: 0x2c1, 0x2c8, 0x2cc, 0x2d4, 0x898

Function 15:
Public fallback function
Entry block: 0xbf
Exit block: 0xf9
Body: 0xbf, 0xc0, 0xcd, 0xd1, 0xdd, 0xe3, 0xea, 0xee, 0xf7, 0xf8, 0xf9

Function 16:
Private function
Entry block: 0x8a7
Exit block: 0x8ba
Body: 0x38f, 0x3a1, 0x3b7, 0x8a7, 0x8b6, 0x8ba, 0x8f5, 0x901, 0x906

Function 17:
Private function
Entry block: 0x2f0
Exit block: 0x890
Body: 0x2f0, 0x30a, 0x316, 0x31c, 0x327, 0x353, 0x37b, 0x38f, 0x3a1, 0x3b7, 0x3ce, 0x401, 0x460, 0x471, 0x47c, 0x47d, 0x8b6, 0x8ba, 0x8c1, 0x8cf, 0x8df, 0x8f5, 0x901, 0x906, 0x90c, 0x91a, 0x921

