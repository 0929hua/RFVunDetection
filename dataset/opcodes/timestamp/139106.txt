Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xf6]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xf6
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xf6
0xa: JUMPI 0xf6 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xfb]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x69fae2a
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xfb
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x69fae2a
0x20: V14 = EQ V12 0x69fae2a
0x21: V15 = 0xfb
0x24: JUMPI 0xfb V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x143]
---
0x25 DUP1
0x26 PUSH4 0xc7ac7b6
0x2b EQ
0x2c PUSH2 0x143
0x2f JUMPI
---
0x26: V16 = 0xc7ac7b6
0x2b: V17 = EQ 0xc7ac7b6 V12
0x2c: V18 = 0x143
0x2f: JUMPI 0x143 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x1ce]
---
0x30 DUP1
0x31 PUSH4 0x10e1d8ca
0x36 EQ
0x37 PUSH2 0x1ce
0x3a JUMPI
---
0x31: V19 = 0x10e1d8ca
0x36: V20 = EQ 0x10e1d8ca V12
0x37: V21 = 0x1ce
0x3a: JUMPI 0x1ce V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x1fd]
---
0x3b DUP1
0x3c PUSH4 0x19e2641e
0x41 EQ
0x42 PUSH2 0x1fd
0x45 JUMPI
---
0x3c: V22 = 0x19e2641e
0x41: V23 = EQ 0x19e2641e V12
0x42: V24 = 0x1fd
0x45: JUMPI 0x1fd V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x212]
---
0x46 DUP1
0x47 PUSH4 0x1b9265b8
0x4c EQ
0x4d PUSH2 0x212
0x50 JUMPI
---
0x47: V25 = 0x1b9265b8
0x4c: V26 = EQ 0x1b9265b8 V12
0x4d: V27 = 0x212
0x50: JUMPI 0x212 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x227]
---
0x51 DUP1
0x52 PUSH4 0x200d2ed2
0x57 EQ
0x58 PUSH2 0x227
0x5b JUMPI
---
0x52: V28 = 0x200d2ed2
0x57: V29 = EQ 0x200d2ed2 V12
0x58: V30 = 0x227
0x5b: JUMPI 0x227 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x25e]
---
0x5c DUP1
0x5d PUSH4 0x29040113
0x62 EQ
0x63 PUSH2 0x25e
0x66 JUMPI
---
0x5d: V31 = 0x29040113
0x62: V32 = EQ 0x29040113 V12
0x63: V33 = 0x25e
0x66: JUMPI 0x25e V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x28d]
---
0x67 DUP1
0x68 PUSH4 0x311a6c56
0x6d EQ
0x6e PUSH2 0x28d
0x71 JUMPI
---
0x68: V34 = 0x311a6c56
0x6d: V35 = EQ 0x311a6c56 V12
0x6e: V36 = 0x28d
0x71: JUMPI 0x28d V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x2a8]
---
0x72 DUP1
0x73 PUSH4 0x4a44c2e4
0x78 EQ
0x79 PUSH2 0x2a8
0x7c JUMPI
---
0x73: V37 = 0x4a44c2e4
0x78: V38 = EQ 0x4a44c2e4 V12
0x79: V39 = 0x2a8
0x7c: JUMPI 0x2a8 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2c0]
---
0x7d DUP1
0x7e PUSH4 0x4b40c974
0x83 EQ
0x84 PUSH2 0x2c0
0x87 JUMPI
---
0x7e: V40 = 0x4b40c974
0x83: V41 = EQ 0x4b40c974 V12
0x84: V42 = 0x2c0
0x87: JUMPI 0x2c0 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2e5]
---
0x88 DUP1
0x89 PUSH4 0x512491f1
0x8e EQ
0x8f PUSH2 0x2e5
0x92 JUMPI
---
0x89: V43 = 0x512491f1
0x8e: V44 = EQ 0x512491f1 V12
0x8f: V45 = 0x2e5
0x92: JUMPI 0x2e5 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x30a]
---
0x93 DUP1
0x94 PUSH4 0x6cc6cde1
0x99 EQ
0x9a PUSH2 0x30a
0x9d JUMPI
---
0x94: V46 = 0x6cc6cde1
0x99: V47 = EQ 0x6cc6cde1 V12
0x9a: V48 = 0x30a
0x9d: JUMPI 0x30a V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x339]
---
0x9e DUP1
0x9f PUSH4 0x70dea79a
0xa4 EQ
0xa5 PUSH2 0x339
0xa8 JUMPI
---
0x9f: V49 = 0x70dea79a
0xa4: V50 = EQ 0x70dea79a V12
0xa5: V51 = 0x339
0xa8: JUMPI 0x339 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x35e]
---
0xa9 DUP1
0xaa PUSH4 0x853c80ce
0xaf EQ
0xb0 PUSH2 0x35e
0xb3 JUMPI
---
0xaa: V52 = 0x853c80ce
0xaf: V53 = EQ 0x853c80ce V12
0xb0: V54 = 0x35e
0xb3: JUMPI 0x35e V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x373]
---
0xb4 DUP1
0xb5 PUSH4 0x8f71a265
0xba EQ
0xbb PUSH2 0x373
0xbe JUMPI
---
0xb5: V55 = 0x8f71a265
0xba: V56 = EQ 0x8f71a265 V12
0xbb: V57 = 0x373
0xbe: JUMPI 0x373 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x398]
---
0xbf DUP1
0xc0 PUSH4 0xa0109631
0xc5 EQ
0xc6 PUSH2 0x398
0xc9 JUMPI
---
0xc0: V58 = 0xa0109631
0xc5: V59 = EQ 0xa0109631 V12
0xc6: V60 = 0x398
0xc9: JUMPI 0x398 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x3a2]
---
0xca DUP1
0xcb PUSH4 0xaa8c217c
0xd0 EQ
0xd1 PUSH2 0x3a2
0xd4 JUMPI
---
0xcb: V61 = 0xaa8c217c
0xd0: V62 = EQ 0xaa8c217c V12
0xd1: V63 = 0x3a2
0xd4: JUMPI 0x3a2 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x3c7]
---
0xd5 DUP1
0xd6 PUSH4 0xb0a1e2b4
0xdb EQ
0xdc PUSH2 0x3c7
0xdf JUMPI
---
0xd6: V64 = 0xb0a1e2b4
0xdb: V65 = EQ 0xb0a1e2b4 V12
0xdc: V66 = 0x3c7
0xdf: JUMPI 0x3c7 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x3ec]
---
0xe0 DUP1
0xe1 PUSH4 0xb1bcce3a
0xe6 EQ
0xe7 PUSH2 0x3ec
0xea JUMPI
---
0xe1: V67 = 0xb1bcce3a
0xe6: V68 = EQ 0xb1bcce3a V12
0xe7: V69 = 0x3ec
0xea: JUMPI 0x3ec V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x3f6]
---
0xeb DUP1
0xec PUSH4 0xbac91e2e
0xf1 EQ
0xf2 PUSH2 0x3f6
0xf5 JUMPI
---
0xec: V70 = 0xbac91e2e
0xf1: V71 = EQ 0xbac91e2e V12
0xf2: V72 = 0x3f6
0xf5: JUMPI 0x3f6 V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0xfa]
---
Predecessors: [0x0, 0xeb]
Successors: []
---
0xf6 JUMPDEST
0xf7 PUSH1 0x0
0xf9 DUP1
0xfa REVERT
---
0xf6: JUMPDEST 
0xf7: V73 = 0x0
0xfa: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfb
[0xfb:0x140]
---
Predecessors: [0xb]
Successors: [0x449]
---
0xfb JUMPDEST
0xfc PUSH2 0x141
0xff PUSH1 0x4
0x101 PUSH1 0x24
0x103 DUP2
0x104 CALLDATALOAD
0x105 DUP2
0x106 DUP2
0x107 ADD
0x108 SWAP1
0x109 DUP4
0x10a ADD
0x10b CALLDATALOAD
0x10c DUP1
0x10d PUSH1 0x20
0x10f PUSH1 0x1f
0x111 DUP3
0x112 ADD
0x113 DUP2
0x114 SWAP1
0x115 DIV
0x116 DUP2
0x117 MUL
0x118 ADD
0x119 PUSH1 0x40
0x11b MLOAD
0x11c SWAP1
0x11d DUP2
0x11e ADD
0x11f PUSH1 0x40
0x121 MSTORE
0x122 DUP2
0x123 DUP2
0x124 MSTORE
0x125 SWAP3
0x126 SWAP2
0x127 SWAP1
0x128 PUSH1 0x20
0x12a DUP5
0x12b ADD
0x12c DUP4
0x12d DUP4
0x12e DUP1
0x12f DUP3
0x130 DUP5
0x131 CALLDATACOPY
0x132 POP
0x133 SWAP5
0x134 SWAP7
0x135 POP
0x136 PUSH2 0x449
0x139 SWAP6
0x13a POP
0x13b POP
0x13c POP
0x13d POP
0x13e POP
0x13f POP
0x140 JUMP
---
0xfb: JUMPDEST 
0xfc: V74 = 0x141
0xff: V75 = 0x4
0x101: V76 = 0x24
0x104: V77 = CALLDATALOAD 0x4
0x107: V78 = ADD V77 0x24
0x10a: V79 = ADD 0x4 V77
0x10b: V80 = CALLDATALOAD V79
0x10d: V81 = 0x20
0x10f: V82 = 0x1f
0x112: V83 = ADD V80 0x1f
0x115: V84 = DIV V83 0x20
0x117: V85 = MUL 0x20 V84
0x118: V86 = ADD V85 0x20
0x119: V87 = 0x40
0x11b: V88 = M[0x40]
0x11e: V89 = ADD V88 V86
0x11f: V90 = 0x40
0x121: M[0x40] = V89
0x124: M[V88] = V80
0x128: V91 = 0x20
0x12b: V92 = ADD V88 0x20
0x131: CALLDATACOPY V92 V78 V80
0x136: V93 = 0x449
0x140: JUMP 0x449
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141, V88]
Exit stack: [V12, 0x141, V88]

================================

Block 0x141
[0x141:0x142]
---
Predecessors: [0x552, 0x65e, 0x6bb, 0x6fc, 0x768, 0xc7f]
Successors: []
---
0x141 JUMPDEST
0x142 STOP
---
0x141: JUMPDEST 
0x142: STOP 
---
Entry stack: [V12, 0x141, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S0]

================================

Block 0x143
[0x143:0x149]
---
Predecessors: [0x25]
Successors: [0x14a, 0x14e]
---
0x143 JUMPDEST
0x144 CALLVALUE
0x145 ISZERO
0x146 PUSH2 0x14e
0x149 JUMPI
---
0x143: JUMPDEST 
0x144: V94 = CALLVALUE
0x145: V95 = ISZERO V94
0x146: V96 = 0x14e
0x149: JUMPI 0x14e V95
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14a
[0x14a:0x14d]
---
Predecessors: [0x143]
Successors: []
---
0x14a PUSH1 0x0
0x14c DUP1
0x14d REVERT
---
0x14a: V97 = 0x0
0x14d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14e
[0x14e:0x155]
---
Predecessors: [0x143]
Successors: [0x555]
---
0x14e JUMPDEST
0x14f PUSH2 0x156
0x152 PUSH2 0x555
0x155 JUMP
---
0x14e: JUMPDEST 
0x14f: V98 = 0x156
0x152: V99 = 0x555
0x155: JUMP 0x555
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x156]
Exit stack: [V12, 0x156]

================================

Block 0x156
[0x156:0x179]
---
Predecessors: [0x5eb]
Successors: [0x17a]
---
0x156 JUMPDEST
0x157 PUSH1 0x40
0x159 MLOAD
0x15a PUSH1 0x20
0x15c DUP1
0x15d DUP3
0x15e MSTORE
0x15f DUP2
0x160 SWAP1
0x161 DUP2
0x162 ADD
0x163 DUP4
0x164 DUP2
0x165 DUP2
0x166 MLOAD
0x167 DUP2
0x168 MSTORE
0x169 PUSH1 0x20
0x16b ADD
0x16c SWAP2
0x16d POP
0x16e DUP1
0x16f MLOAD
0x170 SWAP1
0x171 PUSH1 0x20
0x173 ADD
0x174 SWAP1
0x175 DUP1
0x176 DUP4
0x177 DUP4
0x178 PUSH1 0x0
---
0x156: JUMPDEST 
0x157: V100 = 0x40
0x159: V101 = M[0x40]
0x15a: V102 = 0x20
0x15e: M[V101] = 0x20
0x162: V103 = ADD V101 0x20
0x166: V104 = M[V482]
0x168: M[V103] = V104
0x169: V105 = 0x20
0x16b: V106 = ADD 0x20 V103
0x16f: V107 = M[V482]
0x171: V108 = 0x20
0x173: V109 = ADD 0x20 V482
0x178: V110 = 0x0
---
Entry stack: [V12, 0x156, V482]
Stack pops: 1
Stack additions: [S0, V101, V101, V106, V109, V107, V107, V106, V109, 0x0]
Exit stack: [V12, 0x156, V482, V101, V101, V106, V109, V107, V107, V106, V109, 0x0]

================================

Block 0x17a
[0x17a:0x182]
---
Predecessors: [0x156, 0x18b]
Successors: [0x183, 0x193]
---
0x17a JUMPDEST
0x17b DUP4
0x17c DUP2
0x17d LT
0x17e ISZERO
0x17f PUSH2 0x193
0x182 JUMPI
---
0x17a: JUMPDEST 
0x17d: V111 = LT S0 V107
0x17e: V112 = ISZERO V111
0x17f: V113 = 0x193
0x182: JUMPI 0x193 V112
---
Entry stack: [V12, 0x156, V482, V101, V101, V106, V109, V107, V107, V106, V109, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x156, V482, V101, V101, V106, V109, V107, V107, V106, V109, S0]

================================

Block 0x183
[0x183:0x18a]
---
Predecessors: [0x17a]
Successors: [0x18b]
---
0x183 DUP1
0x184 DUP3
0x185 ADD
0x186 MLOAD
0x187 DUP2
0x188 DUP5
0x189 ADD
0x18a MSTORE
---
0x185: V114 = ADD V109 S0
0x186: V115 = M[V114]
0x189: V116 = ADD V106 S0
0x18a: M[V116] = V115
---
Entry stack: [V12, 0x156, V482, V101, V101, V106, V109, V107, V107, V106, V109, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x156, V482, V101, V101, V106, V109, V107, V107, V106, V109, S0]

================================

Block 0x18b
[0x18b:0x192]
---
Predecessors: [0x183]
Successors: [0x17a]
---
0x18b JUMPDEST
0x18c PUSH1 0x20
0x18e ADD
0x18f PUSH2 0x17a
0x192 JUMP
---
0x18b: JUMPDEST 
0x18c: V117 = 0x20
0x18e: V118 = ADD 0x20 S0
0x18f: V119 = 0x17a
0x192: JUMP 0x17a
---
Entry stack: [V12, 0x156, V482, V101, V101, V106, V109, V107, V107, V106, V109, S0]
Stack pops: 1
Stack additions: [V118]
Exit stack: [V12, 0x156, V482, V101, V101, V106, V109, V107, V107, V106, V109, V118]

================================

Block 0x193
[0x193:0x1a6]
---
Predecessors: [0x17a]
Successors: [0x1a7, 0x1c0]
---
0x193 JUMPDEST
0x194 POP
0x195 POP
0x196 POP
0x197 POP
0x198 SWAP1
0x199 POP
0x19a SWAP1
0x19b DUP2
0x19c ADD
0x19d SWAP1
0x19e PUSH1 0x1f
0x1a0 AND
0x1a1 DUP1
0x1a2 ISZERO
0x1a3 PUSH2 0x1c0
0x1a6 JUMPI
---
0x193: JUMPDEST 
0x19c: V120 = ADD V107 V106
0x19e: V121 = 0x1f
0x1a0: V122 = AND 0x1f V107
0x1a2: V123 = ISZERO V122
0x1a3: V124 = 0x1c0
0x1a6: JUMPI 0x1c0 V123
---
Entry stack: [V12, 0x156, V482, V101, V101, V106, V109, V107, V107, V106, V109, S0]
Stack pops: 7
Stack additions: [V120, V122]
Exit stack: [V12, 0x156, V482, V101, V101, V120, V122]

================================

Block 0x1a7
[0x1a7:0x1bf]
---
Predecessors: [0x193]
Successors: [0x1c0]
---
0x1a7 DUP1
0x1a8 DUP3
0x1a9 SUB
0x1aa DUP1
0x1ab MLOAD
0x1ac PUSH1 0x1
0x1ae DUP4
0x1af PUSH1 0x20
0x1b1 SUB
0x1b2 PUSH2 0x100
0x1b5 EXP
0x1b6 SUB
0x1b7 NOT
0x1b8 AND
0x1b9 DUP2
0x1ba MSTORE
0x1bb PUSH1 0x20
0x1bd ADD
0x1be SWAP2
0x1bf POP
---
0x1a9: V125 = SUB V120 V122
0x1ab: V126 = M[V125]
0x1ac: V127 = 0x1
0x1af: V128 = 0x20
0x1b1: V129 = SUB 0x20 V122
0x1b2: V130 = 0x100
0x1b5: V131 = EXP 0x100 V129
0x1b6: V132 = SUB V131 0x1
0x1b7: V133 = NOT V132
0x1b8: V134 = AND V133 V126
0x1ba: M[V125] = V134
0x1bb: V135 = 0x20
0x1bd: V136 = ADD 0x20 V125
---
Entry stack: [V12, 0x156, V482, V101, V101, V120, V122]
Stack pops: 2
Stack additions: [V136, S0]
Exit stack: [V12, 0x156, V482, V101, V101, V136, V122]

================================

Block 0x1c0
[0x1c0:0x1cd]
---
Predecessors: [0x193, 0x1a7]
Successors: []
---
0x1c0 JUMPDEST
0x1c1 POP
0x1c2 SWAP3
0x1c3 POP
0x1c4 POP
0x1c5 POP
0x1c6 PUSH1 0x40
0x1c8 MLOAD
0x1c9 DUP1
0x1ca SWAP2
0x1cb SUB
0x1cc SWAP1
0x1cd RETURN
---
0x1c0: JUMPDEST 
0x1c6: V137 = 0x40
0x1c8: V138 = M[0x40]
0x1cb: V139 = SUB S1 V138
0x1cd: RETURN V138 V139
---
Entry stack: [V12, 0x156, V482, V101, V101, S1, V122]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x156]

================================

Block 0x1ce
[0x1ce:0x1d4]
---
Predecessors: [0x30]
Successors: [0x1d5, 0x1d9]
---
0x1ce JUMPDEST
0x1cf CALLVALUE
0x1d0 ISZERO
0x1d1 PUSH2 0x1d9
0x1d4 JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V140 = CALLVALUE
0x1d0: V141 = ISZERO V140
0x1d1: V142 = 0x1d9
0x1d4: JUMPI 0x1d9 V141
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d5
[0x1d5:0x1d8]
---
Predecessors: [0x1ce]
Successors: []
---
0x1d5 PUSH1 0x0
0x1d7 DUP1
0x1d8 REVERT
---
0x1d5: V143 = 0x0
0x1d8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d9
[0x1d9:0x1e0]
---
Predecessors: [0x1ce]
Successors: [0x5f3]
---
0x1d9 JUMPDEST
0x1da PUSH2 0x1e1
0x1dd PUSH2 0x5f3
0x1e0 JUMP
---
0x1d9: JUMPDEST 
0x1da: V144 = 0x1e1
0x1dd: V145 = 0x5f3
0x1e0: JUMP 0x5f3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e1]
Exit stack: [V12, 0x1e1]

================================

Block 0x1e1
[0x1e1:0x1fc]
---
Predecessors: [0x5f3, 0x6c6, 0x777]
Successors: []
---
0x1e1 JUMPDEST
0x1e2 PUSH1 0x40
0x1e4 MLOAD
0x1e5 PUSH1 0x1
0x1e7 PUSH1 0xa0
0x1e9 PUSH1 0x2
0x1eb EXP
0x1ec SUB
0x1ed SWAP1
0x1ee SWAP2
0x1ef AND
0x1f0 DUP2
0x1f1 MSTORE
0x1f2 PUSH1 0x20
0x1f4 ADD
0x1f5 PUSH1 0x40
0x1f7 MLOAD
0x1f8 DUP1
0x1f9 SWAP2
0x1fa SUB
0x1fb SWAP1
0x1fc RETURN
---
0x1e1: JUMPDEST 
0x1e2: V146 = 0x40
0x1e4: V147 = M[0x40]
0x1e5: V148 = 0x1
0x1e7: V149 = 0xa0
0x1e9: V150 = 0x2
0x1eb: V151 = EXP 0x2 0xa0
0x1ec: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ef: V153 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: M[V147] = V153
0x1f2: V154 = 0x20
0x1f4: V155 = ADD 0x20 V147
0x1f5: V156 = 0x40
0x1f7: V157 = M[0x40]
0x1fa: V158 = SUB V155 V157
0x1fc: RETURN V157 V158
---
Entry stack: [V12, 0x1e1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1e1]

================================

Block 0x1fd
[0x1fd:0x203]
---
Predecessors: [0x3b]
Successors: [0x204, 0x208]
---
0x1fd JUMPDEST
0x1fe CALLVALUE
0x1ff ISZERO
0x200 PUSH2 0x208
0x203 JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V159 = CALLVALUE
0x1ff: V160 = ISZERO V159
0x200: V161 = 0x208
0x203: JUMPI 0x208 V160
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x204
[0x204:0x207]
---
Predecessors: [0x1fd]
Successors: []
---
0x204 PUSH1 0x0
0x206 DUP1
0x207 REVERT
---
0x204: V162 = 0x0
0x207: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x208
[0x208:0x20f]
---
Predecessors: [0x1fd]
Successors: [0x602]
---
0x208 JUMPDEST
0x209 PUSH2 0x141
0x20c PUSH2 0x602
0x20f JUMP
---
0x208: JUMPDEST 
0x209: V163 = 0x141
0x20c: V164 = 0x602
0x20f: JUMP 0x602
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141]
Exit stack: [V12, 0x141]

================================

Block 0x210
[0x210:0x211]
---
Predecessors: []
Successors: []
---
0x210 JUMPDEST
0x211 STOP
---
0x210: JUMPDEST 
0x211: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x212
[0x212:0x218]
---
Predecessors: [0x46]
Successors: [0x219, 0x21d]
---
0x212 JUMPDEST
0x213 CALLVALUE
0x214 ISZERO
0x215 PUSH2 0x21d
0x218 JUMPI
---
0x212: JUMPDEST 
0x213: V165 = CALLVALUE
0x214: V166 = ISZERO V165
0x215: V167 = 0x21d
0x218: JUMPI 0x21d V166
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x219
[0x219:0x21c]
---
Predecessors: [0x212]
Successors: []
---
0x219 PUSH1 0x0
0x21b DUP1
0x21c REVERT
---
0x219: V168 = 0x0
0x21c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21d
[0x21d:0x224]
---
Predecessors: [0x212]
Successors: [0x660]
---
0x21d JUMPDEST
0x21e PUSH2 0x141
0x221 PUSH2 0x660
0x224 JUMP
---
0x21d: JUMPDEST 
0x21e: V169 = 0x141
0x221: V170 = 0x660
0x224: JUMP 0x660
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141]
Exit stack: [V12, 0x141]

================================

Block 0x225
[0x225:0x226]
---
Predecessors: []
Successors: []
---
0x225 JUMPDEST
0x226 STOP
---
0x225: JUMPDEST 
0x226: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x227
[0x227:0x22d]
---
Predecessors: [0x51]
Successors: [0x22e, 0x232]
---
0x227 JUMPDEST
0x228 CALLVALUE
0x229 ISZERO
0x22a PUSH2 0x232
0x22d JUMPI
---
0x227: JUMPDEST 
0x228: V171 = CALLVALUE
0x229: V172 = ISZERO V171
0x22a: V173 = 0x232
0x22d: JUMPI 0x232 V172
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22e
[0x22e:0x231]
---
Predecessors: [0x227]
Successors: []
---
0x22e PUSH1 0x0
0x230 DUP1
0x231 REVERT
---
0x22e: V174 = 0x0
0x231: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x232
[0x232:0x239]
---
Predecessors: [0x227]
Successors: [0x6bd]
---
0x232 JUMPDEST
0x233 PUSH2 0x23a
0x236 PUSH2 0x6bd
0x239 JUMP
---
0x232: JUMPDEST 
0x233: V175 = 0x23a
0x236: V176 = 0x6bd
0x239: JUMP 0x6bd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x23a]
Exit stack: [V12, 0x23a]

================================

Block 0x23a
[0x23a:0x248]
---
Predecessors: [0x6bd]
Successors: [0x249, 0x24a]
---
0x23a JUMPDEST
0x23b PUSH1 0x40
0x23d MLOAD
0x23e DUP1
0x23f DUP3
0x240 PUSH1 0x4
0x242 DUP2
0x243 GT
0x244 ISZERO
0x245 PUSH2 0x24a
0x248 JUMPI
---
0x23a: JUMPDEST 
0x23b: V177 = 0x40
0x23d: V178 = M[0x40]
0x240: V179 = 0x4
0x243: V180 = GT V616 0x4
0x244: V181 = ISZERO V180
0x245: V182 = 0x24a
0x248: JUMPI 0x24a V181
---
Entry stack: [V12, 0x23a, V616]
Stack pops: 1
Stack additions: [S0, V178, V178, S0]
Exit stack: [V12, 0x23a, V616, V178, V178, V616]

================================

Block 0x249
[0x249:0x249]
---
Predecessors: [0x23a]
Successors: []
---
0x249 INVALID
---
0x249: INVALID 
---
Entry stack: [V12, 0x23a, V616, V178, V178, V616]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x23a, V616, V178, V178, V616]

================================

Block 0x24a
[0x24a:0x25d]
---
Predecessors: [0x23a]
Successors: []
---
0x24a JUMPDEST
0x24b PUSH1 0xff
0x24d AND
0x24e DUP2
0x24f MSTORE
0x250 PUSH1 0x20
0x252 ADD
0x253 SWAP2
0x254 POP
0x255 POP
0x256 PUSH1 0x40
0x258 MLOAD
0x259 DUP1
0x25a SWAP2
0x25b SUB
0x25c SWAP1
0x25d RETURN
---
0x24a: JUMPDEST 
0x24b: V183 = 0xff
0x24d: V184 = AND 0xff V616
0x24f: M[V178] = V184
0x250: V185 = 0x20
0x252: V186 = ADD 0x20 V178
0x256: V187 = 0x40
0x258: V188 = M[0x40]
0x25b: V189 = SUB V186 V188
0x25d: RETURN V188 V189
---
Entry stack: [V12, 0x23a, V616, V178, V178, V616]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x23a]

================================

Block 0x25e
[0x25e:0x264]
---
Predecessors: [0x5c]
Successors: [0x265, 0x269]
---
0x25e JUMPDEST
0x25f CALLVALUE
0x260 ISZERO
0x261 PUSH2 0x269
0x264 JUMPI
---
0x25e: JUMPDEST 
0x25f: V190 = CALLVALUE
0x260: V191 = ISZERO V190
0x261: V192 = 0x269
0x264: JUMPI 0x269 V191
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x265
[0x265:0x268]
---
Predecessors: [0x25e]
Successors: []
---
0x265 PUSH1 0x0
0x267 DUP1
0x268 REVERT
---
0x265: V193 = 0x0
0x268: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x269
[0x269:0x270]
---
Predecessors: [0x25e]
Successors: [0x6c6]
---
0x269 JUMPDEST
0x26a PUSH2 0x1e1
0x26d PUSH2 0x6c6
0x270 JUMP
---
0x269: JUMPDEST 
0x26a: V194 = 0x1e1
0x26d: V195 = 0x6c6
0x270: JUMP 0x6c6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e1]
Exit stack: [V12, 0x1e1]

================================

Block 0x271
[0x271:0x28c]
---
Predecessors: []
Successors: []
---
0x271 JUMPDEST
0x272 PUSH1 0x40
0x274 MLOAD
0x275 PUSH1 0x1
0x277 PUSH1 0xa0
0x279 PUSH1 0x2
0x27b EXP
0x27c SUB
0x27d SWAP1
0x27e SWAP2
0x27f AND
0x280 DUP2
0x281 MSTORE
0x282 PUSH1 0x20
0x284 ADD
0x285 PUSH1 0x40
0x287 MLOAD
0x288 DUP1
0x289 SWAP2
0x28a SUB
0x28b SWAP1
0x28c RETURN
---
0x271: JUMPDEST 
0x272: V196 = 0x40
0x274: V197 = M[0x40]
0x275: V198 = 0x1
0x277: V199 = 0xa0
0x279: V200 = 0x2
0x27b: V201 = EXP 0x2 0xa0
0x27c: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27f: V203 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x281: M[V197] = V203
0x282: V204 = 0x20
0x284: V205 = ADD 0x20 V197
0x285: V206 = 0x40
0x287: V207 = M[0x40]
0x28a: V208 = SUB V205 V207
0x28c: RETURN V207 V208
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x28d
[0x28d:0x293]
---
Predecessors: [0x67]
Successors: [0x294, 0x298]
---
0x28d JUMPDEST
0x28e CALLVALUE
0x28f ISZERO
0x290 PUSH2 0x298
0x293 JUMPI
---
0x28d: JUMPDEST 
0x28e: V209 = CALLVALUE
0x28f: V210 = ISZERO V209
0x290: V211 = 0x298
0x293: JUMPI 0x298 V210
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x294
[0x294:0x297]
---
Predecessors: [0x28d]
Successors: []
---
0x294 PUSH1 0x0
0x296 DUP1
0x297 REVERT
---
0x294: V212 = 0x0
0x297: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x298
[0x298:0x2a5]
---
Predecessors: [0x28d]
Successors: [0x6d5]
---
0x298 JUMPDEST
0x299 PUSH2 0x141
0x29c PUSH1 0x4
0x29e CALLDATALOAD
0x29f PUSH1 0x24
0x2a1 CALLDATALOAD
0x2a2 PUSH2 0x6d5
0x2a5 JUMP
---
0x298: JUMPDEST 
0x299: V213 = 0x141
0x29c: V214 = 0x4
0x29e: V215 = CALLDATALOAD 0x4
0x29f: V216 = 0x24
0x2a1: V217 = CALLDATALOAD 0x24
0x2a2: V218 = 0x6d5
0x2a5: JUMP 0x6d5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141, V215, V217]
Exit stack: [V12, 0x141, V215, V217]

================================

Block 0x2a6
[0x2a6:0x2a7]
---
Predecessors: []
Successors: []
---
0x2a6 JUMPDEST
0x2a7 STOP
---
0x2a6: JUMPDEST 
0x2a7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2a8
[0x2a8:0x2ae]
---
Predecessors: [0x72]
Successors: [0x2af, 0x2b3]
---
0x2a8 JUMPDEST
0x2a9 CALLVALUE
0x2aa ISZERO
0x2ab PUSH2 0x2b3
0x2ae JUMPI
---
0x2a8: JUMPDEST 
0x2a9: V219 = CALLVALUE
0x2aa: V220 = ISZERO V219
0x2ab: V221 = 0x2b3
0x2ae: JUMPI 0x2b3 V220
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2af
[0x2af:0x2b2]
---
Predecessors: [0x2a8]
Successors: []
---
0x2af PUSH1 0x0
0x2b1 DUP1
0x2b2 REVERT
---
0x2af: V222 = 0x0
0x2b2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b3
[0x2b3:0x2bd]
---
Predecessors: [0x2a8]
Successors: [0x700]
---
0x2b3 JUMPDEST
0x2b4 PUSH2 0x141
0x2b7 PUSH1 0x4
0x2b9 CALLDATALOAD
0x2ba PUSH2 0x700
0x2bd JUMP
---
0x2b3: JUMPDEST 
0x2b4: V223 = 0x141
0x2b7: V224 = 0x4
0x2b9: V225 = CALLDATALOAD 0x4
0x2ba: V226 = 0x700
0x2bd: JUMP 0x700
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141, V225]
Exit stack: [V12, 0x141, V225]

================================

Block 0x2be
[0x2be:0x2bf]
---
Predecessors: []
Successors: []
---
0x2be JUMPDEST
0x2bf STOP
---
0x2be: JUMPDEST 
0x2bf: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2c0
[0x2c0:0x2c6]
---
Predecessors: [0x7d]
Successors: [0x2c7, 0x2cb]
---
0x2c0 JUMPDEST
0x2c1 CALLVALUE
0x2c2 ISZERO
0x2c3 PUSH2 0x2cb
0x2c6 JUMPI
---
0x2c0: JUMPDEST 
0x2c1: V227 = CALLVALUE
0x2c2: V228 = ISZERO V227
0x2c3: V229 = 0x2cb
0x2c6: JUMPI 0x2cb V228
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c7
[0x2c7:0x2ca]
---
Predecessors: [0x2c0]
Successors: []
---
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca REVERT
---
0x2c7: V230 = 0x0
0x2ca: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2cb
[0x2cb:0x2d2]
---
Predecessors: [0x2c0]
Successors: [0x76b]
---
0x2cb JUMPDEST
0x2cc PUSH2 0x2d3
0x2cf PUSH2 0x76b
0x2d2 JUMP
---
0x2cb: JUMPDEST 
0x2cc: V231 = 0x2d3
0x2cf: V232 = 0x76b
0x2d2: JUMP 0x76b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d3]
Exit stack: [V12, 0x2d3]

================================

Block 0x2d3
[0x2d3:0x2e4]
---
Predecessors: [0x76b, 0x771, 0x786, 0x7ea, 0x9a9, 0x9af]
Successors: []
---
0x2d3 JUMPDEST
0x2d4 PUSH1 0x40
0x2d6 MLOAD
0x2d7 SWAP1
0x2d8 DUP2
0x2d9 MSTORE
0x2da PUSH1 0x20
0x2dc ADD
0x2dd PUSH1 0x40
0x2df MLOAD
0x2e0 DUP1
0x2e1 SWAP2
0x2e2 SUB
0x2e3 SWAP1
0x2e4 RETURN
---
0x2d3: JUMPDEST 
0x2d4: V233 = 0x40
0x2d6: V234 = M[0x40]
0x2d9: M[V234] = S0
0x2da: V235 = 0x20
0x2dc: V236 = ADD 0x20 V234
0x2dd: V237 = 0x40
0x2df: V238 = M[0x40]
0x2e2: V239 = SUB V236 V238
0x2e4: RETURN V238 V239
---
Entry stack: [V12, 0x2d3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2d3]

================================

Block 0x2e5
[0x2e5:0x2eb]
---
Predecessors: [0x88]
Successors: [0x2ec, 0x2f0]
---
0x2e5 JUMPDEST
0x2e6 CALLVALUE
0x2e7 ISZERO
0x2e8 PUSH2 0x2f0
0x2eb JUMPI
---
0x2e5: JUMPDEST 
0x2e6: V240 = CALLVALUE
0x2e7: V241 = ISZERO V240
0x2e8: V242 = 0x2f0
0x2eb: JUMPI 0x2f0 V241
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ec
[0x2ec:0x2ef]
---
Predecessors: [0x2e5]
Successors: []
---
0x2ec PUSH1 0x0
0x2ee DUP1
0x2ef REVERT
---
0x2ec: V243 = 0x0
0x2ef: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f0
[0x2f0:0x2f7]
---
Predecessors: [0x2e5]
Successors: [0x771]
---
0x2f0 JUMPDEST
0x2f1 PUSH2 0x2d3
0x2f4 PUSH2 0x771
0x2f7 JUMP
---
0x2f0: JUMPDEST 
0x2f1: V244 = 0x2d3
0x2f4: V245 = 0x771
0x2f7: JUMP 0x771
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d3]
Exit stack: [V12, 0x2d3]

================================

Block 0x2f8
[0x2f8:0x309]
---
Predecessors: []
Successors: []
---
0x2f8 JUMPDEST
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc SWAP1
0x2fd DUP2
0x2fe MSTORE
0x2ff PUSH1 0x20
0x301 ADD
0x302 PUSH1 0x40
0x304 MLOAD
0x305 DUP1
0x306 SWAP2
0x307 SUB
0x308 SWAP1
0x309 RETURN
---
0x2f8: JUMPDEST 
0x2f9: V246 = 0x40
0x2fb: V247 = M[0x40]
0x2fe: M[V247] = S0
0x2ff: V248 = 0x20
0x301: V249 = ADD 0x20 V247
0x302: V250 = 0x40
0x304: V251 = M[0x40]
0x307: V252 = SUB V249 V251
0x309: RETURN V251 V252
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x30a
[0x30a:0x310]
---
Predecessors: [0x93]
Successors: [0x311, 0x315]
---
0x30a JUMPDEST
0x30b CALLVALUE
0x30c ISZERO
0x30d PUSH2 0x315
0x310 JUMPI
---
0x30a: JUMPDEST 
0x30b: V253 = CALLVALUE
0x30c: V254 = ISZERO V253
0x30d: V255 = 0x315
0x310: JUMPI 0x315 V254
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x311
[0x311:0x314]
---
Predecessors: [0x30a]
Successors: []
---
0x311 PUSH1 0x0
0x313 DUP1
0x314 REVERT
---
0x311: V256 = 0x0
0x314: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x315
[0x315:0x31c]
---
Predecessors: [0x30a]
Successors: [0x777]
---
0x315 JUMPDEST
0x316 PUSH2 0x1e1
0x319 PUSH2 0x777
0x31c JUMP
---
0x315: JUMPDEST 
0x316: V257 = 0x1e1
0x319: V258 = 0x777
0x31c: JUMP 0x777
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e1]
Exit stack: [V12, 0x1e1]

================================

Block 0x31d
[0x31d:0x338]
---
Predecessors: []
Successors: []
---
0x31d JUMPDEST
0x31e PUSH1 0x40
0x320 MLOAD
0x321 PUSH1 0x1
0x323 PUSH1 0xa0
0x325 PUSH1 0x2
0x327 EXP
0x328 SUB
0x329 SWAP1
0x32a SWAP2
0x32b AND
0x32c DUP2
0x32d MSTORE
0x32e PUSH1 0x20
0x330 ADD
0x331 PUSH1 0x40
0x333 MLOAD
0x334 DUP1
0x335 SWAP2
0x336 SUB
0x337 SWAP1
0x338 RETURN
---
0x31d: JUMPDEST 
0x31e: V259 = 0x40
0x320: V260 = M[0x40]
0x321: V261 = 0x1
0x323: V262 = 0xa0
0x325: V263 = 0x2
0x327: V264 = EXP 0x2 0xa0
0x328: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32b: V266 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x32d: M[V260] = V266
0x32e: V267 = 0x20
0x330: V268 = ADD 0x20 V260
0x331: V269 = 0x40
0x333: V270 = M[0x40]
0x336: V271 = SUB V268 V270
0x338: RETURN V270 V271
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x339
[0x339:0x33f]
---
Predecessors: [0x9e]
Successors: [0x340, 0x344]
---
0x339 JUMPDEST
0x33a CALLVALUE
0x33b ISZERO
0x33c PUSH2 0x344
0x33f JUMPI
---
0x339: JUMPDEST 
0x33a: V272 = CALLVALUE
0x33b: V273 = ISZERO V272
0x33c: V274 = 0x344
0x33f: JUMPI 0x344 V273
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x340
[0x340:0x343]
---
Predecessors: [0x339]
Successors: []
---
0x340 PUSH1 0x0
0x342 DUP1
0x343 REVERT
---
0x340: V275 = 0x0
0x343: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x344
[0x344:0x34b]
---
Predecessors: [0x339]
Successors: [0x786]
---
0x344 JUMPDEST
0x345 PUSH2 0x2d3
0x348 PUSH2 0x786
0x34b JUMP
---
0x344: JUMPDEST 
0x345: V276 = 0x2d3
0x348: V277 = 0x786
0x34b: JUMP 0x786
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d3]
Exit stack: [V12, 0x2d3]

================================

Block 0x34c
[0x34c:0x35d]
---
Predecessors: []
Successors: []
---
0x34c JUMPDEST
0x34d PUSH1 0x40
0x34f MLOAD
0x350 SWAP1
0x351 DUP2
0x352 MSTORE
0x353 PUSH1 0x20
0x355 ADD
0x356 PUSH1 0x40
0x358 MLOAD
0x359 DUP1
0x35a SWAP2
0x35b SUB
0x35c SWAP1
0x35d RETURN
---
0x34c: JUMPDEST 
0x34d: V278 = 0x40
0x34f: V279 = M[0x40]
0x352: M[V279] = S0
0x353: V280 = 0x20
0x355: V281 = ADD 0x20 V279
0x356: V282 = 0x40
0x358: V283 = M[0x40]
0x35b: V284 = SUB V281 V283
0x35d: RETURN V283 V284
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x35e
[0x35e:0x364]
---
Predecessors: [0xa9]
Successors: [0x365, 0x369]
---
0x35e JUMPDEST
0x35f CALLVALUE
0x360 ISZERO
0x361 PUSH2 0x369
0x364 JUMPI
---
0x35e: JUMPDEST 
0x35f: V285 = CALLVALUE
0x360: V286 = ISZERO V285
0x361: V287 = 0x369
0x364: JUMPI 0x369 V286
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x365
[0x365:0x368]
---
Predecessors: [0x35e]
Successors: []
---
0x365 PUSH1 0x0
0x367 DUP1
0x368 REVERT
---
0x365: V288 = 0x0
0x368: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x369
[0x369:0x370]
---
Predecessors: [0x35e]
Successors: [0x78c]
---
0x369 JUMPDEST
0x36a PUSH2 0x141
0x36d PUSH2 0x78c
0x370 JUMP
---
0x369: JUMPDEST 
0x36a: V289 = 0x141
0x36d: V290 = 0x78c
0x370: JUMP 0x78c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141]
Exit stack: [V12, 0x141]

================================

Block 0x371
[0x371:0x372]
---
Predecessors: []
Successors: []
---
0x371 JUMPDEST
0x372 STOP
---
0x371: JUMPDEST 
0x372: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x373
[0x373:0x379]
---
Predecessors: [0xb4]
Successors: [0x37a, 0x37e]
---
0x373 JUMPDEST
0x374 CALLVALUE
0x375 ISZERO
0x376 PUSH2 0x37e
0x379 JUMPI
---
0x373: JUMPDEST 
0x374: V291 = CALLVALUE
0x375: V292 = ISZERO V291
0x376: V293 = 0x37e
0x379: JUMPI 0x37e V292
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37a
[0x37a:0x37d]
---
Predecessors: [0x373]
Successors: []
---
0x37a PUSH1 0x0
0x37c DUP1
0x37d REVERT
---
0x37a: V294 = 0x0
0x37d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37e
[0x37e:0x385]
---
Predecessors: [0x373]
Successors: [0x7ea]
---
0x37e JUMPDEST
0x37f PUSH2 0x2d3
0x382 PUSH2 0x7ea
0x385 JUMP
---
0x37e: JUMPDEST 
0x37f: V295 = 0x2d3
0x382: V296 = 0x7ea
0x385: JUMP 0x7ea
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d3]
Exit stack: [V12, 0x2d3]

================================

Block 0x386
[0x386:0x397]
---
Predecessors: []
Successors: []
---
0x386 JUMPDEST
0x387 PUSH1 0x40
0x389 MLOAD
0x38a SWAP1
0x38b DUP2
0x38c MSTORE
0x38d PUSH1 0x20
0x38f ADD
0x390 PUSH1 0x40
0x392 MLOAD
0x393 DUP1
0x394 SWAP2
0x395 SUB
0x396 SWAP1
0x397 RETURN
---
0x386: JUMPDEST 
0x387: V297 = 0x40
0x389: V298 = M[0x40]
0x38c: M[V298] = S0
0x38d: V299 = 0x20
0x38f: V300 = ADD 0x20 V298
0x390: V301 = 0x40
0x392: V302 = M[0x40]
0x395: V303 = SUB V300 V302
0x397: RETURN V302 V303
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x398
[0x398:0x39f]
---
Predecessors: [0xbf]
Successors: [0x7f0]
---
0x398 JUMPDEST
0x399 PUSH2 0x141
0x39c PUSH2 0x7f0
0x39f JUMP
---
0x398: JUMPDEST 
0x399: V304 = 0x141
0x39c: V305 = 0x7f0
0x39f: JUMP 0x7f0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141]
Exit stack: [V12, 0x141]

================================

Block 0x3a0
[0x3a0:0x3a1]
---
Predecessors: []
Successors: []
---
0x3a0 JUMPDEST
0x3a1 STOP
---
0x3a0: JUMPDEST 
0x3a1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3a2
[0x3a2:0x3a8]
---
Predecessors: [0xca]
Successors: [0x3a9, 0x3ad]
---
0x3a2 JUMPDEST
0x3a3 CALLVALUE
0x3a4 ISZERO
0x3a5 PUSH2 0x3ad
0x3a8 JUMPI
---
0x3a2: JUMPDEST 
0x3a3: V306 = CALLVALUE
0x3a4: V307 = ISZERO V306
0x3a5: V308 = 0x3ad
0x3a8: JUMPI 0x3ad V307
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a9
[0x3a9:0x3ac]
---
Predecessors: [0x3a2]
Successors: []
---
0x3a9 PUSH1 0x0
0x3ab DUP1
0x3ac REVERT
---
0x3a9: V309 = 0x0
0x3ac: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ad
[0x3ad:0x3b4]
---
Predecessors: [0x3a2]
Successors: [0x9a9]
---
0x3ad JUMPDEST
0x3ae PUSH2 0x2d3
0x3b1 PUSH2 0x9a9
0x3b4 JUMP
---
0x3ad: JUMPDEST 
0x3ae: V310 = 0x2d3
0x3b1: V311 = 0x9a9
0x3b4: JUMP 0x9a9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d3]
Exit stack: [V12, 0x2d3]

================================

Block 0x3b5
[0x3b5:0x3c6]
---
Predecessors: []
Successors: []
---
0x3b5 JUMPDEST
0x3b6 PUSH1 0x40
0x3b8 MLOAD
0x3b9 SWAP1
0x3ba DUP2
0x3bb MSTORE
0x3bc PUSH1 0x20
0x3be ADD
0x3bf PUSH1 0x40
0x3c1 MLOAD
0x3c2 DUP1
0x3c3 SWAP2
0x3c4 SUB
0x3c5 SWAP1
0x3c6 RETURN
---
0x3b5: JUMPDEST 
0x3b6: V312 = 0x40
0x3b8: V313 = M[0x40]
0x3bb: M[V313] = S0
0x3bc: V314 = 0x20
0x3be: V315 = ADD 0x20 V313
0x3bf: V316 = 0x40
0x3c1: V317 = M[0x40]
0x3c4: V318 = SUB V315 V317
0x3c6: RETURN V317 V318
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3c7
[0x3c7:0x3cd]
---
Predecessors: [0xd5]
Successors: [0x3ce, 0x3d2]
---
0x3c7 JUMPDEST
0x3c8 CALLVALUE
0x3c9 ISZERO
0x3ca PUSH2 0x3d2
0x3cd JUMPI
---
0x3c7: JUMPDEST 
0x3c8: V319 = CALLVALUE
0x3c9: V320 = ISZERO V319
0x3ca: V321 = 0x3d2
0x3cd: JUMPI 0x3d2 V320
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ce
[0x3ce:0x3d1]
---
Predecessors: [0x3c7]
Successors: []
---
0x3ce PUSH1 0x0
0x3d0 DUP1
0x3d1 REVERT
---
0x3ce: V322 = 0x0
0x3d1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d2
[0x3d2:0x3d9]
---
Predecessors: [0x3c7]
Successors: [0x9af]
---
0x3d2 JUMPDEST
0x3d3 PUSH2 0x2d3
0x3d6 PUSH2 0x9af
0x3d9 JUMP
---
0x3d2: JUMPDEST 
0x3d3: V323 = 0x2d3
0x3d6: V324 = 0x9af
0x3d9: JUMP 0x9af
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d3]
Exit stack: [V12, 0x2d3]

================================

Block 0x3da
[0x3da:0x3eb]
---
Predecessors: []
Successors: []
---
0x3da JUMPDEST
0x3db PUSH1 0x40
0x3dd MLOAD
0x3de SWAP1
0x3df DUP2
0x3e0 MSTORE
0x3e1 PUSH1 0x20
0x3e3 ADD
0x3e4 PUSH1 0x40
0x3e6 MLOAD
0x3e7 DUP1
0x3e8 SWAP2
0x3e9 SUB
0x3ea SWAP1
0x3eb RETURN
---
0x3da: JUMPDEST 
0x3db: V325 = 0x40
0x3dd: V326 = M[0x40]
0x3e0: M[V326] = S0
0x3e1: V327 = 0x20
0x3e3: V328 = ADD 0x20 V326
0x3e4: V329 = 0x40
0x3e6: V330 = M[0x40]
0x3e9: V331 = SUB V328 V330
0x3eb: RETURN V330 V331
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3ec
[0x3ec:0x3f3]
---
Predecessors: [0xe0]
Successors: [0x9b5]
---
0x3ec JUMPDEST
0x3ed PUSH2 0x141
0x3f0 PUSH2 0x9b5
0x3f3 JUMP
---
0x3ec: JUMPDEST 
0x3ed: V332 = 0x141
0x3f0: V333 = 0x9b5
0x3f3: JUMP 0x9b5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141]
Exit stack: [V12, 0x141]

================================

Block 0x3f4
[0x3f4:0x3f5]
---
Predecessors: []
Successors: []
---
0x3f4 JUMPDEST
0x3f5 STOP
---
0x3f4: JUMPDEST 
0x3f5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3f6
[0x3f6:0x3fc]
---
Predecessors: [0xeb]
Successors: [0x3fd, 0x401]
---
0x3f6 JUMPDEST
0x3f7 CALLVALUE
0x3f8 ISZERO
0x3f9 PUSH2 0x401
0x3fc JUMPI
---
0x3f6: JUMPDEST 
0x3f7: V334 = CALLVALUE
0x3f8: V335 = ISZERO V334
0x3f9: V336 = 0x401
0x3fc: JUMPI 0x401 V335
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3fd
[0x3fd:0x400]
---
Predecessors: [0x3f6]
Successors: []
---
0x3fd PUSH1 0x0
0x3ff DUP1
0x400 REVERT
---
0x3fd: V337 = 0x0
0x400: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x401
[0x401:0x446]
---
Predecessors: [0x3f6]
Successors: [0xb6f]
---
0x401 JUMPDEST
0x402 PUSH2 0x141
0x405 PUSH1 0x4
0x407 PUSH1 0x24
0x409 DUP2
0x40a CALLDATALOAD
0x40b DUP2
0x40c DUP2
0x40d ADD
0x40e SWAP1
0x40f DUP4
0x410 ADD
0x411 CALLDATALOAD
0x412 DUP1
0x413 PUSH1 0x20
0x415 PUSH1 0x1f
0x417 DUP3
0x418 ADD
0x419 DUP2
0x41a SWAP1
0x41b DIV
0x41c DUP2
0x41d MUL
0x41e ADD
0x41f PUSH1 0x40
0x421 MLOAD
0x422 SWAP1
0x423 DUP2
0x424 ADD
0x425 PUSH1 0x40
0x427 MSTORE
0x428 DUP2
0x429 DUP2
0x42a MSTORE
0x42b SWAP3
0x42c SWAP2
0x42d SWAP1
0x42e PUSH1 0x20
0x430 DUP5
0x431 ADD
0x432 DUP4
0x433 DUP4
0x434 DUP1
0x435 DUP3
0x436 DUP5
0x437 CALLDATACOPY
0x438 POP
0x439 SWAP5
0x43a SWAP7
0x43b POP
0x43c PUSH2 0xb6f
0x43f SWAP6
0x440 POP
0x441 POP
0x442 POP
0x443 POP
0x444 POP
0x445 POP
0x446 JUMP
---
0x401: JUMPDEST 
0x402: V338 = 0x141
0x405: V339 = 0x4
0x407: V340 = 0x24
0x40a: V341 = CALLDATALOAD 0x4
0x40d: V342 = ADD V341 0x24
0x410: V343 = ADD 0x4 V341
0x411: V344 = CALLDATALOAD V343
0x413: V345 = 0x20
0x415: V346 = 0x1f
0x418: V347 = ADD V344 0x1f
0x41b: V348 = DIV V347 0x20
0x41d: V349 = MUL 0x20 V348
0x41e: V350 = ADD V349 0x20
0x41f: V351 = 0x40
0x421: V352 = M[0x40]
0x424: V353 = ADD V352 V350
0x425: V354 = 0x40
0x427: M[0x40] = V353
0x42a: M[V352] = V344
0x42e: V355 = 0x20
0x431: V356 = ADD V352 0x20
0x437: CALLDATACOPY V356 V342 V344
0x43c: V357 = 0xb6f
0x446: JUMP 0xb6f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141, V352]
Exit stack: [V12, 0x141, V352]

================================

Block 0x447
[0x447:0x448]
---
Predecessors: []
Successors: []
---
0x447 JUMPDEST
0x448 STOP
---
0x447: JUMPDEST 
0x448: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x449
[0x449:0x460]
---
Predecessors: [0xfb]
Successors: [0x461, 0x474]
---
0x449 JUMPDEST
0x44a PUSH1 0x2
0x44c SLOAD
0x44d CALLER
0x44e PUSH1 0x1
0x450 PUSH1 0xa0
0x452 PUSH1 0x2
0x454 EXP
0x455 SUB
0x456 SWAP1
0x457 DUP2
0x458 AND
0x459 SWAP2
0x45a AND
0x45b EQ
0x45c DUP1
0x45d PUSH2 0x474
0x460 JUMPI
---
0x449: JUMPDEST 
0x44a: V358 = 0x2
0x44c: V359 = S[0x2]
0x44d: V360 = CALLER
0x44e: V361 = 0x1
0x450: V362 = 0xa0
0x452: V363 = 0x2
0x454: V364 = EXP 0x2 0xa0
0x455: V365 = SUB 0x10000000000000000000000000000000000000000 0x1
0x458: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x45a: V367 = AND V359 0xffffffffffffffffffffffffffffffffffffffff
0x45b: V368 = EQ V367 V366
0x45d: V369 = 0x474
0x460: JUMPI 0x474 V368
---
Entry stack: [V12, 0x141, V88]
Stack pops: 0
Stack additions: [V368]
Exit stack: [V12, 0x141, V88, V368]

================================

Block 0x461
[0x461:0x473]
---
Predecessors: [0x449]
Successors: [0x474]
---
0x461 POP
0x462 PUSH1 0x3
0x464 SLOAD
0x465 CALLER
0x466 PUSH1 0x1
0x468 PUSH1 0xa0
0x46a PUSH1 0x2
0x46c EXP
0x46d SUB
0x46e SWAP1
0x46f DUP2
0x470 AND
0x471 SWAP2
0x472 AND
0x473 EQ
---
0x462: V370 = 0x3
0x464: V371 = S[0x3]
0x465: V372 = CALLER
0x466: V373 = 0x1
0x468: V374 = 0xa0
0x46a: V375 = 0x2
0x46c: V376 = EXP 0x2 0xa0
0x46d: V377 = SUB 0x10000000000000000000000000000000000000000 0x1
0x470: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x472: V379 = AND V371 0xffffffffffffffffffffffffffffffffffffffff
0x473: V380 = EQ V379 V378
---
Entry stack: [V12, 0x141, V88, V368]
Stack pops: 1
Stack additions: [V380]
Exit stack: [V12, 0x141, V88, V380]

================================

Block 0x474
[0x474:0x47a]
---
Predecessors: [0x449, 0x461]
Successors: [0x47b, 0x47f]
---
0x474 JUMPDEST
0x475 ISZERO
0x476 ISZERO
0x477 PUSH2 0x47f
0x47a JUMPI
---
0x474: JUMPDEST 
0x475: V381 = ISZERO S0
0x476: V382 = ISZERO V381
0x477: V383 = 0x47f
0x47a: JUMPI 0x47f V382
---
Entry stack: [V12, 0x141, V88, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x141, V88]

================================

Block 0x47b
[0x47b:0x47e]
---
Predecessors: [0x474]
Successors: []
---
0x47b PUSH1 0x0
0x47d DUP1
0x47e REVERT
---
0x47b: V384 = 0x0
0x47e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V88]

================================

Block 0x47f
[0x47f:0x4d6]
---
Predecessors: [0x474]
Successors: [0x4d7]
---
0x47f JUMPDEST
0x480 PUSH1 0x0
0x482 SLOAD
0x483 PUSH1 0x8
0x485 SLOAD
0x486 PUSH1 0x1
0x488 PUSH1 0xa0
0x48a PUSH1 0x2
0x48c EXP
0x48d SUB
0x48e SWAP1
0x48f SWAP2
0x490 AND
0x491 SWAP1
0x492 PUSH4 0x49912f88
0x497 SWAP1
0x498 CALLVALUE
0x499 SWAP1
0x49a DUP5
0x49b PUSH1 0x40
0x49d MLOAD
0x49e DUP5
0x49f PUSH4 0xffffffff
0x4a4 AND
0x4a5 PUSH1 0xe0
0x4a7 PUSH1 0x2
0x4a9 EXP
0x4aa MUL
0x4ab DUP2
0x4ac MSTORE
0x4ad PUSH1 0x4
0x4af ADD
0x4b0 DUP1
0x4b1 DUP4
0x4b2 DUP2
0x4b3 MSTORE
0x4b4 PUSH1 0x20
0x4b6 ADD
0x4b7 DUP1
0x4b8 PUSH1 0x20
0x4ba ADD
0x4bb DUP3
0x4bc DUP2
0x4bd SUB
0x4be DUP3
0x4bf MSTORE
0x4c0 DUP4
0x4c1 DUP2
0x4c2 DUP2
0x4c3 MLOAD
0x4c4 DUP2
0x4c5 MSTORE
0x4c6 PUSH1 0x20
0x4c8 ADD
0x4c9 SWAP2
0x4ca POP
0x4cb DUP1
0x4cc MLOAD
0x4cd SWAP1
0x4ce PUSH1 0x20
0x4d0 ADD
0x4d1 SWAP1
0x4d2 DUP1
0x4d3 DUP4
0x4d4 DUP4
0x4d5 PUSH1 0x0
---
0x47f: JUMPDEST 
0x480: V385 = 0x0
0x482: V386 = S[0x0]
0x483: V387 = 0x8
0x485: V388 = S[0x8]
0x486: V389 = 0x1
0x488: V390 = 0xa0
0x48a: V391 = 0x2
0x48c: V392 = EXP 0x2 0xa0
0x48d: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x490: V394 = AND V386 0xffffffffffffffffffffffffffffffffffffffff
0x492: V395 = 0x49912f88
0x498: V396 = CALLVALUE
0x49b: V397 = 0x40
0x49d: V398 = M[0x40]
0x49f: V399 = 0xffffffff
0x4a4: V400 = AND 0xffffffff 0x49912f88
0x4a5: V401 = 0xe0
0x4a7: V402 = 0x2
0x4a9: V403 = EXP 0x2 0xe0
0x4aa: V404 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x49912f88
0x4ac: M[V398] = 0x49912f8800000000000000000000000000000000000000000000000000000000
0x4ad: V405 = 0x4
0x4af: V406 = ADD 0x4 V398
0x4b3: M[V406] = V388
0x4b4: V407 = 0x20
0x4b6: V408 = ADD 0x20 V406
0x4b8: V409 = 0x20
0x4ba: V410 = ADD 0x20 V408
0x4bd: V411 = SUB V410 V406
0x4bf: M[V408] = V411
0x4c3: V412 = M[V88]
0x4c5: M[V410] = V412
0x4c6: V413 = 0x20
0x4c8: V414 = ADD 0x20 V410
0x4cc: V415 = M[V88]
0x4ce: V416 = 0x20
0x4d0: V417 = ADD 0x20 V88
0x4d5: V418 = 0x0
---
Entry stack: [V12, 0x141, V88]
Stack pops: 1
Stack additions: [S0, V394, 0x49912f88, V396, V388, S0, V406, V408, V414, V417, V415, V415, V414, V417, 0x0]
Exit stack: [V12, 0x141, V88, V394, 0x49912f88, V396, V388, V88, V406, V408, V414, V417, V415, V415, V414, V417, 0x0]

================================

Block 0x4d7
[0x4d7:0x4df]
---
Predecessors: [0x47f, 0x4e8]
Successors: [0x4e0, 0x4f0]
---
0x4d7 JUMPDEST
0x4d8 DUP4
0x4d9 DUP2
0x4da LT
0x4db ISZERO
0x4dc PUSH2 0x4f0
0x4df JUMPI
---
0x4d7: JUMPDEST 
0x4da: V419 = LT S0 V415
0x4db: V420 = ISZERO V419
0x4dc: V421 = 0x4f0
0x4df: JUMPI 0x4f0 V420
---
Entry stack: [V12, 0x141, V88, V394, 0x49912f88, V396, V388, V88, V406, V408, V414, V417, V415, V415, V414, V417, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x141, V88, V394, 0x49912f88, V396, V388, V88, V406, V408, V414, V417, V415, V415, V414, V417, S0]

================================

Block 0x4e0
[0x4e0:0x4e7]
---
Predecessors: [0x4d7]
Successors: [0x4e8]
---
0x4e0 DUP1
0x4e1 DUP3
0x4e2 ADD
0x4e3 MLOAD
0x4e4 DUP2
0x4e5 DUP5
0x4e6 ADD
0x4e7 MSTORE
---
0x4e2: V422 = ADD V417 S0
0x4e3: V423 = M[V422]
0x4e6: V424 = ADD V414 S0
0x4e7: M[V424] = V423
---
Entry stack: [V12, 0x141, V88, V394, 0x49912f88, V396, V388, V88, V406, V408, V414, V417, V415, V415, V414, V417, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x141, V88, V394, 0x49912f88, V396, V388, V88, V406, V408, V414, V417, V415, V415, V414, V417, S0]

================================

Block 0x4e8
[0x4e8:0x4ef]
---
Predecessors: [0x4e0]
Successors: [0x4d7]
---
0x4e8 JUMPDEST
0x4e9 PUSH1 0x20
0x4eb ADD
0x4ec PUSH2 0x4d7
0x4ef JUMP
---
0x4e8: JUMPDEST 
0x4e9: V425 = 0x20
0x4eb: V426 = ADD 0x20 S0
0x4ec: V427 = 0x4d7
0x4ef: JUMP 0x4d7
---
Entry stack: [V12, 0x141, V88, V394, 0x49912f88, V396, V388, V88, V406, V408, V414, V417, V415, V415, V414, V417, S0]
Stack pops: 1
Stack additions: [V426]
Exit stack: [V12, 0x141, V88, V394, 0x49912f88, V396, V388, V88, V406, V408, V414, V417, V415, V415, V414, V417, V426]

================================

Block 0x4f0
[0x4f0:0x503]
---
Predecessors: [0x4d7]
Successors: [0x504, 0x51d]
---
0x4f0 JUMPDEST
0x4f1 POP
0x4f2 POP
0x4f3 POP
0x4f4 POP
0x4f5 SWAP1
0x4f6 POP
0x4f7 SWAP1
0x4f8 DUP2
0x4f9 ADD
0x4fa SWAP1
0x4fb PUSH1 0x1f
0x4fd AND
0x4fe DUP1
0x4ff ISZERO
0x500 PUSH2 0x51d
0x503 JUMPI
---
0x4f0: JUMPDEST 
0x4f9: V428 = ADD V415 V414
0x4fb: V429 = 0x1f
0x4fd: V430 = AND 0x1f V415
0x4ff: V431 = ISZERO V430
0x500: V432 = 0x51d
0x503: JUMPI 0x51d V431
---
Entry stack: [V12, 0x141, V88, V394, 0x49912f88, V396, V388, V88, V406, V408, V414, V417, V415, V415, V414, V417, S0]
Stack pops: 7
Stack additions: [V428, V430]
Exit stack: [V12, 0x141, V88, V394, 0x49912f88, V396, V388, V88, V406, V408, V428, V430]

================================

Block 0x504
[0x504:0x51c]
---
Predecessors: [0x4f0]
Successors: [0x51d]
---
0x504 DUP1
0x505 DUP3
0x506 SUB
0x507 DUP1
0x508 MLOAD
0x509 PUSH1 0x1
0x50b DUP4
0x50c PUSH1 0x20
0x50e SUB
0x50f PUSH2 0x100
0x512 EXP
0x513 SUB
0x514 NOT
0x515 AND
0x516 DUP2
0x517 MSTORE
0x518 PUSH1 0x20
0x51a ADD
0x51b SWAP2
0x51c POP
---
0x506: V433 = SUB V428 V430
0x508: V434 = M[V433]
0x509: V435 = 0x1
0x50c: V436 = 0x20
0x50e: V437 = SUB 0x20 V430
0x50f: V438 = 0x100
0x512: V439 = EXP 0x100 V437
0x513: V440 = SUB V439 0x1
0x514: V441 = NOT V440
0x515: V442 = AND V441 V434
0x517: M[V433] = V442
0x518: V443 = 0x20
0x51a: V444 = ADD 0x20 V433
---
Entry stack: [V12, 0x141, V88, V394, 0x49912f88, V396, V388, V88, V406, V408, V428, V430]
Stack pops: 2
Stack additions: [V444, S0]
Exit stack: [V12, 0x141, V88, V394, 0x49912f88, V396, V388, V88, V406, V408, V444, V430]

================================

Block 0x51d
[0x51d:0x536]
---
Predecessors: [0x4f0, 0x504]
Successors: [0x537, 0x53b]
---
0x51d JUMPDEST
0x51e POP
0x51f SWAP4
0x520 POP
0x521 POP
0x522 POP
0x523 POP
0x524 PUSH1 0x0
0x526 PUSH1 0x40
0x528 MLOAD
0x529 DUP1
0x52a DUP4
0x52b SUB
0x52c DUP2
0x52d DUP6
0x52e DUP9
0x52f DUP1
0x530 EXTCODESIZE
0x531 ISZERO
0x532 ISZERO
0x533 PUSH2 0x53b
0x536 JUMPI
---
0x51d: JUMPDEST 
0x524: V445 = 0x0
0x526: V446 = 0x40
0x528: V447 = M[0x40]
0x52b: V448 = SUB S1 V447
0x530: V449 = EXTCODESIZE V394
0x531: V450 = ISZERO V449
0x532: V451 = ISZERO V450
0x533: V452 = 0x53b
0x536: JUMPI 0x53b V451
---
Entry stack: [V12, 0x141, V88, V394, 0x49912f88, V396, V388, V88, V406, V408, S1, V430]
Stack pops: 9
Stack additions: [S8, S7, S6, S1, 0x0, V447, V448, V447, S6, S8]
Exit stack: [V12, 0x141, V88, V394, 0x49912f88, V396, S1, 0x0, V447, V448, V447, V396, V394]

================================

Block 0x537
[0x537:0x53a]
---
Predecessors: [0x51d]
Successors: []
---
0x537 PUSH1 0x0
0x539 DUP1
0x53a REVERT
---
0x537: V453 = 0x0
0x53a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, V88, V394, 0x49912f88, V396, S6, 0x0, V447, V448, V447, V396, V394]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V88, V394, 0x49912f88, V396, S6, 0x0, V447, V448, V447, V396, V394]

================================

Block 0x53b
[0x53b:0x547]
---
Predecessors: [0x51d]
Successors: [0x548, 0x54c]
---
0x53b JUMPDEST
0x53c PUSH2 0x25ee
0x53f GAS
0x540 SUB
0x541 CALL
0x542 ISZERO
0x543 ISZERO
0x544 PUSH2 0x54c
0x547 JUMPI
---
0x53b: JUMPDEST 
0x53c: V454 = 0x25ee
0x53f: V455 = GAS
0x540: V456 = SUB V455 0x25ee
0x541: V457 = CALL V456 V394 V396 V447 V448 V447 0x0
0x542: V458 = ISZERO V457
0x543: V459 = ISZERO V458
0x544: V460 = 0x54c
0x547: JUMPI 0x54c V459
---
Entry stack: [V12, 0x141, V88, V394, 0x49912f88, V396, S6, 0x0, V447, V448, V447, V396, V394]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x141, V88, V394, 0x49912f88, V396, S6]

================================

Block 0x548
[0x548:0x54b]
---
Predecessors: [0x53b]
Successors: []
---
0x548 PUSH1 0x0
0x54a DUP1
0x54b REVERT
---
0x548: V461 = 0x0
0x54b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, V88, V394, 0x49912f88, V396, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V88, V394, 0x49912f88, V396, S0]

================================

Block 0x54c
[0x54c:0x550]
---
Predecessors: [0x53b]
Successors: [0x551]
---
0x54c JUMPDEST
0x54d POP
0x54e POP
0x54f POP
0x550 POP
---
0x54c: JUMPDEST 
---
Entry stack: [V12, 0x141, V88, V394, 0x49912f88, V396, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x141, V88]

================================

Block 0x551
[0x551:0x551]
---
Predecessors: [0x54c, 0x982, 0xb48, 0xef9]
Successors: [0x552]
---
0x551 JUMPDEST
---
0x551: JUMPDEST 
---
Entry stack: [V12, 0x141, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S0]

================================

Block 0x552
[0x552:0x554]
---
Predecessors: [0x551]
Successors: [0x141]
---
0x552 JUMPDEST
0x553 POP
0x554 JUMP
---
0x552: JUMPDEST 
0x554: JUMP 0x141
---
Entry stack: [V12, 0x141, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x555
[0x555:0x5a4]
---
Predecessors: [0x14e]
Successors: [0x5a5, 0x5eb]
---
0x555 JUMPDEST
0x556 PUSH1 0x6
0x558 DUP1
0x559 SLOAD
0x55a PUSH1 0x1
0x55c DUP2
0x55d PUSH1 0x1
0x55f AND
0x560 ISZERO
0x561 PUSH2 0x100
0x564 MUL
0x565 SUB
0x566 AND
0x567 PUSH1 0x2
0x569 SWAP1
0x56a DIV
0x56b DUP1
0x56c PUSH1 0x1f
0x56e ADD
0x56f PUSH1 0x20
0x571 DUP1
0x572 SWAP2
0x573 DIV
0x574 MUL
0x575 PUSH1 0x20
0x577 ADD
0x578 PUSH1 0x40
0x57a MLOAD
0x57b SWAP1
0x57c DUP2
0x57d ADD
0x57e PUSH1 0x40
0x580 MSTORE
0x581 DUP1
0x582 SWAP3
0x583 SWAP2
0x584 SWAP1
0x585 DUP2
0x586 DUP2
0x587 MSTORE
0x588 PUSH1 0x20
0x58a ADD
0x58b DUP3
0x58c DUP1
0x58d SLOAD
0x58e PUSH1 0x1
0x590 DUP2
0x591 PUSH1 0x1
0x593 AND
0x594 ISZERO
0x595 PUSH2 0x100
0x598 MUL
0x599 SUB
0x59a AND
0x59b PUSH1 0x2
0x59d SWAP1
0x59e DIV
0x59f DUP1
0x5a0 ISZERO
0x5a1 PUSH2 0x5eb
0x5a4 JUMPI
---
0x555: JUMPDEST 
0x556: V462 = 0x6
0x559: V463 = S[0x6]
0x55a: V464 = 0x1
0x55d: V465 = 0x1
0x55f: V466 = AND 0x1 V463
0x560: V467 = ISZERO V466
0x561: V468 = 0x100
0x564: V469 = MUL 0x100 V467
0x565: V470 = SUB V469 0x1
0x566: V471 = AND V470 V463
0x567: V472 = 0x2
0x56a: V473 = DIV V471 0x2
0x56c: V474 = 0x1f
0x56e: V475 = ADD 0x1f V473
0x56f: V476 = 0x20
0x573: V477 = DIV V475 0x20
0x574: V478 = MUL V477 0x20
0x575: V479 = 0x20
0x577: V480 = ADD 0x20 V478
0x578: V481 = 0x40
0x57a: V482 = M[0x40]
0x57d: V483 = ADD V482 V480
0x57e: V484 = 0x40
0x580: M[0x40] = V483
0x587: M[V482] = V473
0x588: V485 = 0x20
0x58a: V486 = ADD 0x20 V482
0x58d: V487 = S[0x6]
0x58e: V488 = 0x1
0x591: V489 = 0x1
0x593: V490 = AND 0x1 V487
0x594: V491 = ISZERO V490
0x595: V492 = 0x100
0x598: V493 = MUL 0x100 V491
0x599: V494 = SUB V493 0x1
0x59a: V495 = AND V494 V487
0x59b: V496 = 0x2
0x59e: V497 = DIV V495 0x2
0x5a0: V498 = ISZERO V497
0x5a1: V499 = 0x5eb
0x5a4: JUMPI 0x5eb V498
---
Entry stack: [V12, 0x156]
Stack pops: 0
Stack additions: [V482, 0x6, V473, V486, 0x6, V497]
Exit stack: [V12, 0x156, V482, 0x6, V473, V486, 0x6, V497]

================================

Block 0x5a5
[0x5a5:0x5ac]
---
Predecessors: [0x555]
Successors: [0x5ad, 0x5c0]
---
0x5a5 DUP1
0x5a6 PUSH1 0x1f
0x5a8 LT
0x5a9 PUSH2 0x5c0
0x5ac JUMPI
---
0x5a6: V500 = 0x1f
0x5a8: V501 = LT 0x1f V497
0x5a9: V502 = 0x5c0
0x5ac: JUMPI 0x5c0 V501
---
Entry stack: [V12, 0x156, V482, 0x6, V473, V486, 0x6, V497]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x156, V482, 0x6, V473, V486, 0x6, V497]

================================

Block 0x5ad
[0x5ad:0x5bf]
---
Predecessors: [0x5a5]
Successors: [0x5eb]
---
0x5ad PUSH2 0x100
0x5b0 DUP1
0x5b1 DUP4
0x5b2 SLOAD
0x5b3 DIV
0x5b4 MUL
0x5b5 DUP4
0x5b6 MSTORE
0x5b7 SWAP2
0x5b8 PUSH1 0x20
0x5ba ADD
0x5bb SWAP2
0x5bc PUSH2 0x5eb
0x5bf JUMP
---
0x5ad: V503 = 0x100
0x5b2: V504 = S[0x6]
0x5b3: V505 = DIV V504 0x100
0x5b4: V506 = MUL V505 0x100
0x5b6: M[V486] = V506
0x5b8: V507 = 0x20
0x5ba: V508 = ADD 0x20 V486
0x5bc: V509 = 0x5eb
0x5bf: JUMP 0x5eb
---
Entry stack: [V12, 0x156, V482, 0x6, V473, V486, 0x6, V497]
Stack pops: 3
Stack additions: [V508, S1, S0]
Exit stack: [V12, 0x156, V482, 0x6, V473, V508, 0x6, V497]

================================

Block 0x5c0
[0x5c0:0x5cd]
---
Predecessors: [0x5a5]
Successors: [0x5ce]
---
0x5c0 JUMPDEST
0x5c1 DUP3
0x5c2 ADD
0x5c3 SWAP2
0x5c4 SWAP1
0x5c5 PUSH1 0x0
0x5c7 MSTORE
0x5c8 PUSH1 0x20
0x5ca PUSH1 0x0
0x5cc SHA3
0x5cd SWAP1
---
0x5c0: JUMPDEST 
0x5c2: V510 = ADD V486 V497
0x5c5: V511 = 0x0
0x5c7: M[0x0] = 0x6
0x5c8: V512 = 0x20
0x5ca: V513 = 0x0
0x5cc: V514 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x156, V482, 0x6, V473, V486, 0x6, V497]
Stack pops: 3
Stack additions: [V510, V514, S2]
Exit stack: [V12, 0x156, V482, 0x6, V473, V510, V514, V486]

================================

Block 0x5ce
[0x5ce:0x5e1]
---
Predecessors: [0x5c0, 0x5ce]
Successors: [0x5ce, 0x5e2]
---
0x5ce JUMPDEST
0x5cf DUP2
0x5d0 SLOAD
0x5d1 DUP2
0x5d2 MSTORE
0x5d3 SWAP1
0x5d4 PUSH1 0x1
0x5d6 ADD
0x5d7 SWAP1
0x5d8 PUSH1 0x20
0x5da ADD
0x5db DUP1
0x5dc DUP4
0x5dd GT
0x5de PUSH2 0x5ce
0x5e1 JUMPI
---
0x5ce: JUMPDEST 
0x5d0: V515 = S[S1]
0x5d2: M[S0] = V515
0x5d4: V516 = 0x1
0x5d6: V517 = ADD 0x1 S1
0x5d8: V518 = 0x20
0x5da: V519 = ADD 0x20 S0
0x5dd: V520 = GT V510 V519
0x5de: V521 = 0x5ce
0x5e1: JUMPI 0x5ce V520
---
Entry stack: [V12, 0x156, V482, 0x6, V473, V510, S1, S0]
Stack pops: 3
Stack additions: [S2, V517, V519]
Exit stack: [V12, 0x156, V482, 0x6, V473, V510, V517, V519]

================================

Block 0x5e2
[0x5e2:0x5ea]
---
Predecessors: [0x5ce]
Successors: [0x5eb]
---
0x5e2 DUP3
0x5e3 SWAP1
0x5e4 SUB
0x5e5 PUSH1 0x1f
0x5e7 AND
0x5e8 DUP3
0x5e9 ADD
0x5ea SWAP2
---
0x5e4: V522 = SUB V519 V510
0x5e5: V523 = 0x1f
0x5e7: V524 = AND 0x1f V522
0x5e9: V525 = ADD V510 V524
---
Entry stack: [V12, 0x156, V482, 0x6, V473, V510, V517, V519]
Stack pops: 3
Stack additions: [V525, S1, S2]
Exit stack: [V12, 0x156, V482, 0x6, V473, V525, V517, V510]

================================

Block 0x5eb
[0x5eb:0x5f2]
---
Predecessors: [0x555, 0x5ad, 0x5e2]
Successors: [0x156]
---
0x5eb JUMPDEST
0x5ec POP
0x5ed POP
0x5ee POP
0x5ef POP
0x5f0 POP
0x5f1 DUP2
0x5f2 JUMP
---
0x5eb: JUMPDEST 
0x5f2: JUMP 0x156
---
Entry stack: [V12, 0x156, V482, 0x6, V473, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0x156, V482]

================================

Block 0x5f3
[0x5f3:0x601]
---
Predecessors: [0x1d9]
Successors: [0x1e1]
---
0x5f3 JUMPDEST
0x5f4 PUSH1 0x2
0x5f6 SLOAD
0x5f7 PUSH1 0x1
0x5f9 PUSH1 0xa0
0x5fb PUSH1 0x2
0x5fd EXP
0x5fe SUB
0x5ff AND
0x600 DUP2
0x601 JUMP
---
0x5f3: JUMPDEST 
0x5f4: V526 = 0x2
0x5f6: V527 = S[0x2]
0x5f7: V528 = 0x1
0x5f9: V529 = 0xa0
0x5fb: V530 = 0x2
0x5fd: V531 = EXP 0x2 0xa0
0x5fe: V532 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ff: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff V527
0x601: JUMP 0x1e1
---
Entry stack: [V12, 0x1e1]
Stack pops: 1
Stack additions: [S0, V533]
Exit stack: [V12, 0x1e1, V533]

================================

Block 0x602
[0x602:0x618]
---
Predecessors: [0x208]
Successors: [0x619, 0x61d]
---
0x602 JUMPDEST
0x603 PUSH1 0x2
0x605 SLOAD
0x606 CALLER
0x607 PUSH1 0x1
0x609 PUSH1 0xa0
0x60b PUSH1 0x2
0x60d EXP
0x60e SUB
0x60f SWAP1
0x610 DUP2
0x611 AND
0x612 SWAP2
0x613 AND
0x614 EQ
0x615 PUSH2 0x61d
0x618 JUMPI
---
0x602: JUMPDEST 
0x603: V534 = 0x2
0x605: V535 = S[0x2]
0x606: V536 = CALLER
0x607: V537 = 0x1
0x609: V538 = 0xa0
0x60b: V539 = 0x2
0x60d: V540 = EXP 0x2 0xa0
0x60e: V541 = SUB 0x10000000000000000000000000000000000000000 0x1
0x611: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x613: V543 = AND V535 0xffffffffffffffffffffffffffffffffffffffff
0x614: V544 = EQ V543 V542
0x615: V545 = 0x61d
0x618: JUMPI 0x61d V544
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x619
[0x619:0x61c]
---
Predecessors: [0x602]
Successors: []
---
0x619 PUSH1 0x0
0x61b DUP1
0x61c REVERT
---
0x619: V546 = 0x0
0x61c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x61d
[0x61d:0x61f]
---
Predecessors: [0x602]
Successors: [0x620]
---
0x61d JUMPDEST
0x61e PUSH1 0x1
---
0x61d: JUMPDEST 
0x61e: V547 = 0x1
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x141, 0x1]

================================

Block 0x620
[0x620:0x62f]
---
Predecessors: [0x61d]
Successors: [0x630, 0x631]
---
0x620 JUMPDEST
0x621 PUSH1 0x9
0x623 SLOAD
0x624 PUSH1 0xff
0x626 AND
0x627 PUSH1 0x4
0x629 DUP2
0x62a GT
0x62b ISZERO
0x62c PUSH2 0x631
0x62f JUMPI
---
0x620: JUMPDEST 
0x621: V548 = 0x9
0x623: V549 = S[0x9]
0x624: V550 = 0xff
0x626: V551 = AND 0xff V549
0x627: V552 = 0x4
0x62a: V553 = GT V551 0x4
0x62b: V554 = ISZERO V553
0x62c: V555 = 0x631
0x62f: JUMPI 0x631 V554
---
Entry stack: [V12, 0x141, 0x1]
Stack pops: 0
Stack additions: [V551]
Exit stack: [V12, 0x141, 0x1, V551]

================================

Block 0x630
[0x630:0x630]
---
Predecessors: [0x620]
Successors: []
---
0x630 INVALID
---
0x630: INVALID 
---
Entry stack: [V12, 0x141, 0x1, V551]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, 0x1, V551]

================================

Block 0x631
[0x631:0x636]
---
Predecessors: [0x620]
Successors: [0x637, 0x63b]
---
0x631 JUMPDEST
0x632 EQ
0x633 PUSH2 0x63b
0x636 JUMPI
---
0x631: JUMPDEST 
0x632: V556 = EQ V551 0x1
0x633: V557 = 0x63b
0x636: JUMPI 0x63b V556
---
Entry stack: [V12, 0x141, 0x1, V551]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x637
[0x637:0x63a]
---
Predecessors: [0x631]
Successors: []
---
0x637 PUSH1 0x0
0x639 DUP1
0x63a REVERT
---
0x637: V558 = 0x0
0x63a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x63b
[0x63b:0x649]
---
Predecessors: [0x631]
Successors: [0x64a, 0x64e]
---
0x63b JUMPDEST
0x63c PUSH1 0x1
0x63e SLOAD
0x63f PUSH1 0x7
0x641 SLOAD
0x642 ADD
0x643 TIMESTAMP
0x644 LT
0x645 ISZERO
0x646 PUSH2 0x64e
0x649 JUMPI
---
0x63b: JUMPDEST 
0x63c: V559 = 0x1
0x63e: V560 = S[0x1]
0x63f: V561 = 0x7
0x641: V562 = S[0x7]
0x642: V563 = ADD V562 V560
0x643: V564 = TIMESTAMP
0x644: V565 = LT V564 V563
0x645: V566 = ISZERO V565
0x646: V567 = 0x64e
0x649: JUMPI 0x64e V566
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x64a
[0x64a:0x64d]
---
Predecessors: [0x63b]
Successors: []
---
0x64a PUSH1 0x0
0x64c DUP1
0x64d REVERT
---
0x64a: V568 = 0x0
0x64d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x64e
[0x64e:0x65b]
---
Predecessors: [0x63b]
Successors: [0xc82]
---
0x64e JUMPDEST
0x64f PUSH1 0x8
0x651 SLOAD
0x652 PUSH2 0x65c
0x655 SWAP1
0x656 PUSH1 0x1
0x658 PUSH2 0xc82
0x65b JUMP
---
0x64e: JUMPDEST 
0x64f: V569 = 0x8
0x651: V570 = S[0x8]
0x652: V571 = 0x65c
0x656: V572 = 0x1
0x658: V573 = 0xc82
0x65b: JUMP 0xc82
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: [0x65c, V570, 0x1]
Exit stack: [V12, 0x141, 0x65c, V570, 0x1]

================================

Block 0x65c
[0x65c:0x65c]
---
Predecessors: [0xd08]
Successors: [0x65d]
---
0x65c JUMPDEST
---
0x65c: JUMPDEST 
---
Entry stack: [V12, 0x141, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S1, S0]

================================

Block 0x65d
[0x65d:0x65d]
---
Predecessors: [0x65c]
Successors: [0x65e]
---
0x65d JUMPDEST
---
0x65d: JUMPDEST 
---
Entry stack: [V12, 0x141, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S1, S0]

================================

Block 0x65e
[0x65e:0x65f]
---
Predecessors: [0x65d]
Successors: [0x141]
---
0x65e JUMPDEST
0x65f JUMP
---
0x65e: JUMPDEST 
0x65f: JUMP S0
---
Entry stack: [V12, 0x141, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x141, S1]

================================

Block 0x660
[0x660:0x676]
---
Predecessors: [0x21d]
Successors: [0x677, 0x67b]
---
0x660 JUMPDEST
0x661 PUSH1 0x2
0x663 SLOAD
0x664 CALLER
0x665 PUSH1 0x1
0x667 PUSH1 0xa0
0x669 PUSH1 0x2
0x66b EXP
0x66c SUB
0x66d SWAP1
0x66e DUP2
0x66f AND
0x670 SWAP2
0x671 AND
0x672 EQ
0x673 PUSH2 0x67b
0x676 JUMPI
---
0x660: JUMPDEST 
0x661: V574 = 0x2
0x663: V575 = S[0x2]
0x664: V576 = CALLER
0x665: V577 = 0x1
0x667: V578 = 0xa0
0x669: V579 = 0x2
0x66b: V580 = EXP 0x2 0xa0
0x66c: V581 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66f: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V576
0x671: V583 = AND V575 0xffffffffffffffffffffffffffffffffffffffff
0x672: V584 = EQ V583 V582
0x673: V585 = 0x67b
0x676: JUMPI 0x67b V584
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x677
[0x677:0x67a]
---
Predecessors: [0x660]
Successors: []
---
0x677 PUSH1 0x0
0x679 DUP1
0x67a REVERT
---
0x677: V586 = 0x0
0x67a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x67b
[0x67b:0x6af]
---
Predecessors: [0x660]
Successors: [0x6b0, 0x6b4]
---
0x67b JUMPDEST
0x67c PUSH1 0x3
0x67e SLOAD
0x67f PUSH1 0xa
0x681 SLOAD
0x682 PUSH1 0x1
0x684 PUSH1 0xa0
0x686 PUSH1 0x2
0x688 EXP
0x689 SUB
0x68a SWAP1
0x68b SWAP2
0x68c AND
0x68d SWAP1
0x68e DUP1
0x68f ISZERO
0x690 PUSH2 0x8fc
0x693 MUL
0x694 SWAP1
0x695 PUSH1 0x40
0x697 MLOAD
0x698 PUSH1 0x0
0x69a PUSH1 0x40
0x69c MLOAD
0x69d DUP1
0x69e DUP4
0x69f SUB
0x6a0 DUP2
0x6a1 DUP6
0x6a2 DUP9
0x6a3 DUP9
0x6a4 CALL
0x6a5 SWAP4
0x6a6 POP
0x6a7 POP
0x6a8 POP
0x6a9 POP
0x6aa ISZERO
0x6ab ISZERO
0x6ac PUSH2 0x6b4
0x6af JUMPI
---
0x67b: JUMPDEST 
0x67c: V587 = 0x3
0x67e: V588 = S[0x3]
0x67f: V589 = 0xa
0x681: V590 = S[0xa]
0x682: V591 = 0x1
0x684: V592 = 0xa0
0x686: V593 = 0x2
0x688: V594 = EXP 0x2 0xa0
0x689: V595 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68c: V596 = AND V588 0xffffffffffffffffffffffffffffffffffffffff
0x68f: V597 = ISZERO V590
0x690: V598 = 0x8fc
0x693: V599 = MUL 0x8fc V597
0x695: V600 = 0x40
0x697: V601 = M[0x40]
0x698: V602 = 0x0
0x69a: V603 = 0x40
0x69c: V604 = M[0x40]
0x69f: V605 = SUB V601 V604
0x6a4: V606 = CALL V599 V596 V590 V604 V605 V604 0x0
0x6aa: V607 = ISZERO V606
0x6ab: V608 = ISZERO V607
0x6ac: V609 = 0x6b4
0x6af: JUMPI 0x6b4 V608
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x6b0
[0x6b0:0x6b3]
---
Predecessors: [0x67b]
Successors: []
---
0x6b0 PUSH1 0x0
0x6b2 DUP1
0x6b3 REVERT
---
0x6b0: V610 = 0x0
0x6b3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x6b4
[0x6b4:0x6b9]
---
Predecessors: [0x67b]
Successors: [0x6ba]
---
0x6b4 JUMPDEST
0x6b5 PUSH1 0x0
0x6b7 PUSH1 0xa
0x6b9 SSTORE
---
0x6b4: JUMPDEST 
0x6b5: V611 = 0x0
0x6b7: V612 = 0xa
0x6b9: S[0xa] = 0x0
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x6ba
[0x6ba:0x6ba]
---
Predecessors: [0x6b4]
Successors: [0x6bb]
---
0x6ba JUMPDEST
---
0x6ba: JUMPDEST 
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x6bb
[0x6bb:0x6bc]
---
Predecessors: [0x6ba]
Successors: [0x141]
---
0x6bb JUMPDEST
0x6bc JUMP
---
0x6bb: JUMPDEST 
0x6bc: JUMP 0x141
---
Entry stack: [V12, 0x141]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x6bd
[0x6bd:0x6c5]
---
Predecessors: [0x232]
Successors: [0x23a]
---
0x6bd JUMPDEST
0x6be PUSH1 0x9
0x6c0 SLOAD
0x6c1 PUSH1 0xff
0x6c3 AND
0x6c4 DUP2
0x6c5 JUMP
---
0x6bd: JUMPDEST 
0x6be: V613 = 0x9
0x6c0: V614 = S[0x9]
0x6c1: V615 = 0xff
0x6c3: V616 = AND 0xff V614
0x6c5: JUMP 0x23a
---
Entry stack: [V12, 0x23a]
Stack pops: 1
Stack additions: [S0, V616]
Exit stack: [V12, 0x23a, V616]

================================

Block 0x6c6
[0x6c6:0x6d4]
---
Predecessors: [0x269]
Successors: [0x1e1]
---
0x6c6 JUMPDEST
0x6c7 PUSH1 0x3
0x6c9 SLOAD
0x6ca PUSH1 0x1
0x6cc PUSH1 0xa0
0x6ce PUSH1 0x2
0x6d0 EXP
0x6d1 SUB
0x6d2 AND
0x6d3 DUP2
0x6d4 JUMP
---
0x6c6: JUMPDEST 
0x6c7: V617 = 0x3
0x6c9: V618 = S[0x3]
0x6ca: V619 = 0x1
0x6cc: V620 = 0xa0
0x6ce: V621 = 0x2
0x6d0: V622 = EXP 0x2 0xa0
0x6d1: V623 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d2: V624 = AND 0xffffffffffffffffffffffffffffffffffffffff V618
0x6d4: JUMP 0x1e1
---
Entry stack: [V12, 0x1e1]
Stack pops: 1
Stack additions: [S0, V624]
Exit stack: [V12, 0x1e1, V624]

================================

Block 0x6d5
[0x6d5:0x6eb]
---
Predecessors: [0x298]
Successors: [0x6ec, 0x6f0]
---
0x6d5 JUMPDEST
0x6d6 PUSH1 0x0
0x6d8 SLOAD
0x6d9 CALLER
0x6da PUSH1 0x1
0x6dc PUSH1 0xa0
0x6de PUSH1 0x2
0x6e0 EXP
0x6e1 SUB
0x6e2 SWAP1
0x6e3 DUP2
0x6e4 AND
0x6e5 SWAP2
0x6e6 AND
0x6e7 EQ
0x6e8 PUSH2 0x6f0
0x6eb JUMPI
---
0x6d5: JUMPDEST 
0x6d6: V625 = 0x0
0x6d8: V626 = S[0x0]
0x6d9: V627 = CALLER
0x6da: V628 = 0x1
0x6dc: V629 = 0xa0
0x6de: V630 = 0x2
0x6e0: V631 = EXP 0x2 0xa0
0x6e1: V632 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e4: V633 = AND 0xffffffffffffffffffffffffffffffffffffffff V627
0x6e6: V634 = AND V626 0xffffffffffffffffffffffffffffffffffffffff
0x6e7: V635 = EQ V634 V633
0x6e8: V636 = 0x6f0
0x6eb: JUMPI 0x6f0 V635
---
Entry stack: [V12, 0x141, V215, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V215, V217]

================================

Block 0x6ec
[0x6ec:0x6ef]
---
Predecessors: [0x6d5]
Successors: []
---
0x6ec PUSH1 0x0
0x6ee DUP1
0x6ef REVERT
---
0x6ec: V637 = 0x0
0x6ef: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, V215, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V215, V217]

================================

Block 0x6f0
[0x6f0:0x6f9]
---
Predecessors: [0x6d5]
Successors: [0xc82]
---
0x6f0 JUMPDEST
0x6f1 PUSH2 0x6fa
0x6f4 DUP3
0x6f5 DUP3
0x6f6 PUSH2 0xc82
0x6f9 JUMP
---
0x6f0: JUMPDEST 
0x6f1: V638 = 0x6fa
0x6f6: V639 = 0xc82
0x6f9: JUMP 0xc82
---
Entry stack: [V12, 0x141, V215, V217]
Stack pops: 2
Stack additions: [S1, S0, 0x6fa, S1, S0]
Exit stack: [V12, 0x141, V215, V217, 0x6fa, V215, V217]

================================

Block 0x6fa
[0x6fa:0x6fa]
---
Predecessors: [0xd08]
Successors: [0x6fb]
---
0x6fa JUMPDEST
---
0x6fa: JUMPDEST 
---
Entry stack: [V12, 0x141, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S1, S0]

================================

Block 0x6fb
[0x6fb:0x6fb]
---
Predecessors: [0x6fa]
Successors: [0x6fc]
---
0x6fb JUMPDEST
---
0x6fb: JUMPDEST 
---
Entry stack: [V12, 0x141, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S1, S0]

================================

Block 0x6fc
[0x6fc:0x6ff]
---
Predecessors: [0x6fb]
Successors: [0x141]
---
0x6fc JUMPDEST
0x6fd POP
0x6fe POP
0x6ff JUMP
---
0x6fc: JUMPDEST 
0x6ff: JUMP 0x141
---
Entry stack: [V12, 0x141, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x700
[0x700:0x716]
---
Predecessors: [0x2b3]
Successors: [0x717, 0x71b]
---
0x700 JUMPDEST
0x701 PUSH1 0x3
0x703 SLOAD
0x704 CALLER
0x705 PUSH1 0x1
0x707 PUSH1 0xa0
0x709 PUSH1 0x2
0x70b EXP
0x70c SUB
0x70d SWAP1
0x70e DUP2
0x70f AND
0x710 SWAP2
0x711 AND
0x712 EQ
0x713 PUSH2 0x71b
0x716 JUMPI
---
0x700: JUMPDEST 
0x701: V640 = 0x3
0x703: V641 = S[0x3]
0x704: V642 = CALLER
0x705: V643 = 0x1
0x707: V644 = 0xa0
0x709: V645 = 0x2
0x70b: V646 = EXP 0x2 0xa0
0x70c: V647 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70f: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff V642
0x711: V649 = AND V641 0xffffffffffffffffffffffffffffffffffffffff
0x712: V650 = EQ V649 V648
0x713: V651 = 0x71b
0x716: JUMPI 0x71b V650
---
Entry stack: [V12, 0x141, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V225]

================================

Block 0x717
[0x717:0x71a]
---
Predecessors: [0x700]
Successors: []
---
0x717 PUSH1 0x0
0x719 DUP1
0x71a REVERT
---
0x717: V652 = 0x0
0x71a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V225]

================================

Block 0x71b
[0x71b:0x725]
---
Predecessors: [0x700]
Successors: [0x726, 0x72a]
---
0x71b JUMPDEST
0x71c PUSH1 0xa
0x71e SLOAD
0x71f DUP2
0x720 GT
0x721 ISZERO
0x722 PUSH2 0x72a
0x725 JUMPI
---
0x71b: JUMPDEST 
0x71c: V653 = 0xa
0x71e: V654 = S[0xa]
0x720: V655 = GT V225 V654
0x721: V656 = ISZERO V655
0x722: V657 = 0x72a
0x725: JUMPI 0x72a V656
---
Entry stack: [V12, 0x141, V225]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x141, V225]

================================

Block 0x726
[0x726:0x729]
---
Predecessors: [0x71b]
Successors: []
---
0x726 PUSH1 0x0
0x728 DUP1
0x729 REVERT
---
0x726: V658 = 0x0
0x729: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V225]

================================

Block 0x72a
[0x72a:0x758]
---
Predecessors: [0x71b]
Successors: [0x759, 0x75d]
---
0x72a JUMPDEST
0x72b PUSH1 0x2
0x72d SLOAD
0x72e PUSH1 0x1
0x730 PUSH1 0xa0
0x732 PUSH1 0x2
0x734 EXP
0x735 SUB
0x736 AND
0x737 DUP2
0x738 ISZERO
0x739 PUSH2 0x8fc
0x73c MUL
0x73d DUP3
0x73e PUSH1 0x40
0x740 MLOAD
0x741 PUSH1 0x0
0x743 PUSH1 0x40
0x745 MLOAD
0x746 DUP1
0x747 DUP4
0x748 SUB
0x749 DUP2
0x74a DUP6
0x74b DUP9
0x74c DUP9
0x74d CALL
0x74e SWAP4
0x74f POP
0x750 POP
0x751 POP
0x752 POP
0x753 ISZERO
0x754 ISZERO
0x755 PUSH2 0x75d
0x758 JUMPI
---
0x72a: JUMPDEST 
0x72b: V659 = 0x2
0x72d: V660 = S[0x2]
0x72e: V661 = 0x1
0x730: V662 = 0xa0
0x732: V663 = 0x2
0x734: V664 = EXP 0x2 0xa0
0x735: V665 = SUB 0x10000000000000000000000000000000000000000 0x1
0x736: V666 = AND 0xffffffffffffffffffffffffffffffffffffffff V660
0x738: V667 = ISZERO V225
0x739: V668 = 0x8fc
0x73c: V669 = MUL 0x8fc V667
0x73e: V670 = 0x40
0x740: V671 = M[0x40]
0x741: V672 = 0x0
0x743: V673 = 0x40
0x745: V674 = M[0x40]
0x748: V675 = SUB V671 V674
0x74d: V676 = CALL V669 V666 V225 V674 V675 V674 0x0
0x753: V677 = ISZERO V676
0x754: V678 = ISZERO V677
0x755: V679 = 0x75d
0x758: JUMPI 0x75d V678
---
Entry stack: [V12, 0x141, V225]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x141, V225]

================================

Block 0x759
[0x759:0x75c]
---
Predecessors: [0x72a]
Successors: []
---
0x759 PUSH1 0x0
0x75b DUP1
0x75c REVERT
---
0x759: V680 = 0x0
0x75c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V225]

================================

Block 0x75d
[0x75d:0x766]
---
Predecessors: [0x72a]
Successors: [0x767]
---
0x75d JUMPDEST
0x75e PUSH1 0xa
0x760 DUP1
0x761 SLOAD
0x762 DUP3
0x763 SWAP1
0x764 SUB
0x765 SWAP1
0x766 SSTORE
---
0x75d: JUMPDEST 
0x75e: V681 = 0xa
0x761: V682 = S[0xa]
0x764: V683 = SUB V682 V225
0x766: S[0xa] = V683
---
Entry stack: [V12, 0x141, V225]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x141, V225]

================================

Block 0x767
[0x767:0x767]
---
Predecessors: [0x75d]
Successors: [0x768]
---
0x767 JUMPDEST
---
0x767: JUMPDEST 
---
Entry stack: [V12, 0x141, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V225]

================================

Block 0x768
[0x768:0x76a]
---
Predecessors: [0x767]
Successors: [0x141]
---
0x768 JUMPDEST
0x769 POP
0x76a JUMP
---
0x768: JUMPDEST 
0x76a: JUMP 0x141
---
Entry stack: [V12, 0x141, V225]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x76b
[0x76b:0x770]
---
Predecessors: [0x2cb]
Successors: [0x2d3]
---
0x76b JUMPDEST
0x76c PUSH1 0x4
0x76e SLOAD
0x76f DUP2
0x770 JUMP
---
0x76b: JUMPDEST 
0x76c: V684 = 0x4
0x76e: V685 = S[0x4]
0x770: JUMP 0x2d3
---
Entry stack: [V12, 0x2d3]
Stack pops: 1
Stack additions: [S0, V685]
Exit stack: [V12, 0x2d3, V685]

================================

Block 0x771
[0x771:0x776]
---
Predecessors: [0x2f0]
Successors: [0x2d3]
---
0x771 JUMPDEST
0x772 PUSH1 0x5
0x774 SLOAD
0x775 DUP2
0x776 JUMP
---
0x771: JUMPDEST 
0x772: V686 = 0x5
0x774: V687 = S[0x5]
0x776: JUMP 0x2d3
---
Entry stack: [V12, 0x2d3]
Stack pops: 1
Stack additions: [S0, V687]
Exit stack: [V12, 0x2d3, V687]

================================

Block 0x777
[0x777:0x785]
---
Predecessors: [0x315]
Successors: [0x1e1]
---
0x777 JUMPDEST
0x778 PUSH1 0x0
0x77a SLOAD
0x77b PUSH1 0x1
0x77d PUSH1 0xa0
0x77f PUSH1 0x2
0x781 EXP
0x782 SUB
0x783 AND
0x784 DUP2
0x785 JUMP
---
0x777: JUMPDEST 
0x778: V688 = 0x0
0x77a: V689 = S[0x0]
0x77b: V690 = 0x1
0x77d: V691 = 0xa0
0x77f: V692 = 0x2
0x781: V693 = EXP 0x2 0xa0
0x782: V694 = SUB 0x10000000000000000000000000000000000000000 0x1
0x783: V695 = AND 0xffffffffffffffffffffffffffffffffffffffff V689
0x785: JUMP 0x1e1
---
Entry stack: [V12, 0x1e1]
Stack pops: 1
Stack additions: [S0, V695]
Exit stack: [V12, 0x1e1, V695]

================================

Block 0x786
[0x786:0x78b]
---
Predecessors: [0x344]
Successors: [0x2d3]
---
0x786 JUMPDEST
0x787 PUSH1 0x1
0x789 SLOAD
0x78a DUP2
0x78b JUMP
---
0x786: JUMPDEST 
0x787: V696 = 0x1
0x789: V697 = S[0x1]
0x78b: JUMP 0x2d3
---
Entry stack: [V12, 0x2d3]
Stack pops: 1
Stack additions: [S0, V697]
Exit stack: [V12, 0x2d3, V697]

================================

Block 0x78c
[0x78c:0x7a2]
---
Predecessors: [0x369]
Successors: [0x7a3, 0x7a7]
---
0x78c JUMPDEST
0x78d PUSH1 0x3
0x78f SLOAD
0x790 CALLER
0x791 PUSH1 0x1
0x793 PUSH1 0xa0
0x795 PUSH1 0x2
0x797 EXP
0x798 SUB
0x799 SWAP1
0x79a DUP2
0x79b AND
0x79c SWAP2
0x79d AND
0x79e EQ
0x79f PUSH2 0x7a7
0x7a2 JUMPI
---
0x78c: JUMPDEST 
0x78d: V698 = 0x3
0x78f: V699 = S[0x3]
0x790: V700 = CALLER
0x791: V701 = 0x1
0x793: V702 = 0xa0
0x795: V703 = 0x2
0x797: V704 = EXP 0x2 0xa0
0x798: V705 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79b: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff V700
0x79d: V707 = AND V699 0xffffffffffffffffffffffffffffffffffffffff
0x79e: V708 = EQ V707 V706
0x79f: V709 = 0x7a7
0x7a2: JUMPI 0x7a7 V708
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x7a3
[0x7a3:0x7a6]
---
Predecessors: [0x78c]
Successors: []
---
0x7a3 PUSH1 0x0
0x7a5 DUP1
0x7a6 REVERT
---
0x7a3: V710 = 0x0
0x7a6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x7a7
[0x7a7:0x7a9]
---
Predecessors: [0x78c]
Successors: [0x7aa]
---
0x7a7 JUMPDEST
0x7a8 PUSH1 0x2
---
0x7a7: JUMPDEST 
0x7a8: V711 = 0x2
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V12, 0x141, 0x2]

================================

Block 0x7aa
[0x7aa:0x7b9]
---
Predecessors: [0x7a7]
Successors: [0x7ba, 0x7bb]
---
0x7aa JUMPDEST
0x7ab PUSH1 0x9
0x7ad SLOAD
0x7ae PUSH1 0xff
0x7b0 AND
0x7b1 PUSH1 0x4
0x7b3 DUP2
0x7b4 GT
0x7b5 ISZERO
0x7b6 PUSH2 0x7bb
0x7b9 JUMPI
---
0x7aa: JUMPDEST 
0x7ab: V712 = 0x9
0x7ad: V713 = S[0x9]
0x7ae: V714 = 0xff
0x7b0: V715 = AND 0xff V713
0x7b1: V716 = 0x4
0x7b4: V717 = GT V715 0x4
0x7b5: V718 = ISZERO V717
0x7b6: V719 = 0x7bb
0x7b9: JUMPI 0x7bb V718
---
Entry stack: [V12, 0x141, 0x2]
Stack pops: 0
Stack additions: [V715]
Exit stack: [V12, 0x141, 0x2, V715]

================================

Block 0x7ba
[0x7ba:0x7ba]
---
Predecessors: [0x7aa]
Successors: []
---
0x7ba INVALID
---
0x7ba: INVALID 
---
Entry stack: [V12, 0x141, 0x2, V715]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, 0x2, V715]

================================

Block 0x7bb
[0x7bb:0x7c0]
---
Predecessors: [0x7aa]
Successors: [0x7c1, 0x7c5]
---
0x7bb JUMPDEST
0x7bc EQ
0x7bd PUSH2 0x7c5
0x7c0 JUMPI
---
0x7bb: JUMPDEST 
0x7bc: V720 = EQ V715 0x2
0x7bd: V721 = 0x7c5
0x7c0: JUMPI 0x7c5 V720
---
Entry stack: [V12, 0x141, 0x2, V715]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x7c1
[0x7c1:0x7c4]
---
Predecessors: [0x7bb]
Successors: []
---
0x7c1 PUSH1 0x0
0x7c3 DUP1
0x7c4 REVERT
---
0x7c1: V722 = 0x0
0x7c4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x7c5
[0x7c5:0x7d3]
---
Predecessors: [0x7bb]
Successors: [0x7d4, 0x7d8]
---
0x7c5 JUMPDEST
0x7c6 PUSH1 0x1
0x7c8 SLOAD
0x7c9 PUSH1 0x7
0x7cb SLOAD
0x7cc ADD
0x7cd TIMESTAMP
0x7ce LT
0x7cf ISZERO
0x7d0 PUSH2 0x7d8
0x7d3 JUMPI
---
0x7c5: JUMPDEST 
0x7c6: V723 = 0x1
0x7c8: V724 = S[0x1]
0x7c9: V725 = 0x7
0x7cb: V726 = S[0x7]
0x7cc: V727 = ADD V726 V724
0x7cd: V728 = TIMESTAMP
0x7ce: V729 = LT V728 V727
0x7cf: V730 = ISZERO V729
0x7d0: V731 = 0x7d8
0x7d3: JUMPI 0x7d8 V730
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x7d4
[0x7d4:0x7d7]
---
Predecessors: [0x7c5]
Successors: []
---
0x7d4 PUSH1 0x0
0x7d6 DUP1
0x7d7 REVERT
---
0x7d4: V732 = 0x0
0x7d7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x7d8
[0x7d8:0x7e5]
---
Predecessors: [0x7c5]
Successors: [0xc82]
---
0x7d8 JUMPDEST
0x7d9 PUSH1 0x8
0x7db SLOAD
0x7dc PUSH2 0x65c
0x7df SWAP1
0x7e0 PUSH1 0x2
0x7e2 PUSH2 0xc82
0x7e5 JUMP
---
0x7d8: JUMPDEST 
0x7d9: V733 = 0x8
0x7db: V734 = S[0x8]
0x7dc: V735 = 0x65c
0x7e0: V736 = 0x2
0x7e2: V737 = 0xc82
0x7e5: JUMP 0xc82
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: [0x65c, V734, 0x2]
Exit stack: [V12, 0x141, 0x65c, V734, 0x2]

================================

Block 0x7e6
[0x7e6:0x7e6]
---
Predecessors: []
Successors: [0x7e7]
---
0x7e6 JUMPDEST
---
0x7e6: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7e7
[0x7e7:0x7e7]
---
Predecessors: [0x7e6]
Successors: [0x7e8]
---
0x7e7 JUMPDEST
---
0x7e7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7e8
[0x7e8:0x7e9]
---
Predecessors: [0x7e7]
Successors: []
Has unresolved jump.
---
0x7e8 JUMPDEST
0x7e9 JUMP
---
0x7e8: JUMPDEST 
0x7e9: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7ea
[0x7ea:0x7ef]
---
Predecessors: [0x37e]
Successors: [0x2d3]
---
0x7ea JUMPDEST
0x7eb PUSH1 0x7
0x7ed SLOAD
0x7ee DUP2
0x7ef JUMP
---
0x7ea: JUMPDEST 
0x7eb: V738 = 0x7
0x7ed: V739 = S[0x7]
0x7ef: JUMP 0x2d3
---
Entry stack: [V12, 0x2d3]
Stack pops: 1
Stack additions: [S0, V739]
Exit stack: [V12, 0x2d3, V739]

================================

Block 0x7f0
[0x7f0:0x809]
---
Predecessors: [0x398]
Successors: [0x80a, 0x80e]
---
0x7f0 JUMPDEST
0x7f1 PUSH1 0x2
0x7f3 SLOAD
0x7f4 PUSH1 0x0
0x7f6 SWAP1
0x7f7 CALLER
0x7f8 PUSH1 0x1
0x7fa PUSH1 0xa0
0x7fc PUSH1 0x2
0x7fe EXP
0x7ff SUB
0x800 SWAP1
0x801 DUP2
0x802 AND
0x803 SWAP2
0x804 AND
0x805 EQ
0x806 PUSH2 0x80e
0x809 JUMPI
---
0x7f0: JUMPDEST 
0x7f1: V740 = 0x2
0x7f3: V741 = S[0x2]
0x7f4: V742 = 0x0
0x7f7: V743 = CALLER
0x7f8: V744 = 0x1
0x7fa: V745 = 0xa0
0x7fc: V746 = 0x2
0x7fe: V747 = EXP 0x2 0xa0
0x7ff: V748 = SUB 0x10000000000000000000000000000000000000000 0x1
0x802: V749 = AND 0xffffffffffffffffffffffffffffffffffffffff V743
0x804: V750 = AND V741 0xffffffffffffffffffffffffffffffffffffffff
0x805: V751 = EQ V750 V749
0x806: V752 = 0x80e
0x809: JUMPI 0x80e V751
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x141, 0x0]

================================

Block 0x80a
[0x80a:0x80d]
---
Predecessors: [0x7f0]
Successors: []
---
0x80a PUSH1 0x0
0x80c DUP1
0x80d REVERT
---
0x80a: V753 = 0x0
0x80d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, 0x0]

================================

Block 0x80e
[0x80e:0x875]
---
Predecessors: [0x7f0]
Successors: [0x876, 0x8bc]
---
0x80e JUMPDEST
0x80f PUSH1 0x0
0x811 DUP1
0x812 SLOAD
0x813 PUSH1 0x1
0x815 PUSH1 0xa0
0x817 PUSH1 0x2
0x819 EXP
0x81a SUB
0x81b AND
0x81c SWAP1
0x81d PUSH4 0xf7434ea9
0x822 SWAP1
0x823 PUSH1 0x6
0x825 SWAP1
0x826 PUSH1 0x40
0x828 MLOAD
0x829 PUSH1 0x20
0x82b ADD
0x82c MSTORE
0x82d PUSH1 0x40
0x82f MLOAD
0x830 PUSH1 0xe0
0x832 PUSH1 0x2
0x834 EXP
0x835 PUSH4 0xffffffff
0x83a DUP5
0x83b AND
0x83c MUL
0x83d DUP2
0x83e MSTORE
0x83f PUSH1 0x20
0x841 PUSH1 0x4
0x843 DUP3
0x844 ADD
0x845 SWAP1
0x846 DUP2
0x847 MSTORE
0x848 DUP3
0x849 SLOAD
0x84a PUSH1 0x2
0x84c PUSH1 0x0
0x84e NOT
0x84f PUSH2 0x100
0x852 PUSH1 0x1
0x854 DUP5
0x855 AND
0x856 ISZERO
0x857 MUL
0x858 ADD
0x859 SWAP1
0x85a SWAP2
0x85b AND
0x85c DIV
0x85d PUSH1 0x24
0x85f DUP4
0x860 ADD
0x861 DUP2
0x862 SWAP1
0x863 MSTORE
0x864 SWAP1
0x865 SWAP2
0x866 DUP3
0x867 SWAP2
0x868 PUSH1 0x44
0x86a SWAP1
0x86b SWAP2
0x86c ADD
0x86d SWAP1
0x86e DUP5
0x86f SWAP1
0x870 DUP1
0x871 ISZERO
0x872 PUSH2 0x8bc
0x875 JUMPI
---
0x80e: JUMPDEST 
0x80f: V754 = 0x0
0x812: V755 = S[0x0]
0x813: V756 = 0x1
0x815: V757 = 0xa0
0x817: V758 = 0x2
0x819: V759 = EXP 0x2 0xa0
0x81a: V760 = SUB 0x10000000000000000000000000000000000000000 0x1
0x81b: V761 = AND 0xffffffffffffffffffffffffffffffffffffffff V755
0x81d: V762 = 0xf7434ea9
0x823: V763 = 0x6
0x826: V764 = 0x40
0x828: V765 = M[0x40]
0x829: V766 = 0x20
0x82b: V767 = ADD 0x20 V765
0x82c: M[V767] = 0x0
0x82d: V768 = 0x40
0x82f: V769 = M[0x40]
0x830: V770 = 0xe0
0x832: V771 = 0x2
0x834: V772 = EXP 0x2 0xe0
0x835: V773 = 0xffffffff
0x83b: V774 = AND 0xf7434ea9 0xffffffff
0x83c: V775 = MUL 0xf7434ea9 0x100000000000000000000000000000000000000000000000000000000
0x83e: M[V769] = 0xf7434ea900000000000000000000000000000000000000000000000000000000
0x83f: V776 = 0x20
0x841: V777 = 0x4
0x844: V778 = ADD V769 0x4
0x847: M[V778] = 0x20
0x849: V779 = S[0x6]
0x84a: V780 = 0x2
0x84c: V781 = 0x0
0x84e: V782 = NOT 0x0
0x84f: V783 = 0x100
0x852: V784 = 0x1
0x855: V785 = AND V779 0x1
0x856: V786 = ISZERO V785
0x857: V787 = MUL V786 0x100
0x858: V788 = ADD V787 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x85b: V789 = AND V779 V788
0x85c: V790 = DIV V789 0x2
0x85d: V791 = 0x24
0x860: V792 = ADD V769 0x24
0x863: M[V792] = V790
0x868: V793 = 0x44
0x86c: V794 = ADD V769 0x44
0x871: V795 = ISZERO V790
0x872: V796 = 0x8bc
0x875: JUMPI 0x8bc V795
---
Entry stack: [V12, 0x141, 0x0]
Stack pops: 0
Stack additions: [V761, 0xf7434ea9, 0x6, V778, V778, V794, 0x6, V790]
Exit stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, 0x6, V778, V778, V794, 0x6, V790]

================================

Block 0x876
[0x876:0x87d]
---
Predecessors: [0x80e]
Successors: [0x87e, 0x891]
---
0x876 DUP1
0x877 PUSH1 0x1f
0x879 LT
0x87a PUSH2 0x891
0x87d JUMPI
---
0x877: V797 = 0x1f
0x879: V798 = LT 0x1f V790
0x87a: V799 = 0x891
0x87d: JUMPI 0x891 V798
---
Entry stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, 0x6, V778, V778, V794, 0x6, V790]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, 0x6, V778, V778, V794, 0x6, V790]

================================

Block 0x87e
[0x87e:0x890]
---
Predecessors: [0x876]
Successors: [0x8bc]
---
0x87e PUSH2 0x100
0x881 DUP1
0x882 DUP4
0x883 SLOAD
0x884 DIV
0x885 MUL
0x886 DUP4
0x887 MSTORE
0x888 SWAP2
0x889 PUSH1 0x20
0x88b ADD
0x88c SWAP2
0x88d PUSH2 0x8bc
0x890 JUMP
---
0x87e: V800 = 0x100
0x883: V801 = S[0x6]
0x884: V802 = DIV V801 0x100
0x885: V803 = MUL V802 0x100
0x887: M[V794] = V803
0x889: V804 = 0x20
0x88b: V805 = ADD 0x20 V794
0x88d: V806 = 0x8bc
0x890: JUMP 0x8bc
---
Entry stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, 0x6, V778, V778, V794, 0x6, V790]
Stack pops: 3
Stack additions: [V805, S1, S0]
Exit stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, 0x6, V778, V778, V805, 0x6, V790]

================================

Block 0x891
[0x891:0x89e]
---
Predecessors: [0x876]
Successors: [0x89f]
---
0x891 JUMPDEST
0x892 DUP3
0x893 ADD
0x894 SWAP2
0x895 SWAP1
0x896 PUSH1 0x0
0x898 MSTORE
0x899 PUSH1 0x20
0x89b PUSH1 0x0
0x89d SHA3
0x89e SWAP1
---
0x891: JUMPDEST 
0x893: V807 = ADD V794 V790
0x896: V808 = 0x0
0x898: M[0x0] = 0x6
0x899: V809 = 0x20
0x89b: V810 = 0x0
0x89d: V811 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, 0x6, V778, V778, V794, 0x6, V790]
Stack pops: 3
Stack additions: [V807, V811, S2]
Exit stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, 0x6, V778, V778, V807, V811, V794]

================================

Block 0x89f
[0x89f:0x8b2]
---
Predecessors: [0x891, 0x89f]
Successors: [0x89f, 0x8b3]
---
0x89f JUMPDEST
0x8a0 DUP2
0x8a1 SLOAD
0x8a2 DUP2
0x8a3 MSTORE
0x8a4 SWAP1
0x8a5 PUSH1 0x1
0x8a7 ADD
0x8a8 SWAP1
0x8a9 PUSH1 0x20
0x8ab ADD
0x8ac DUP1
0x8ad DUP4
0x8ae GT
0x8af PUSH2 0x89f
0x8b2 JUMPI
---
0x89f: JUMPDEST 
0x8a1: V812 = S[S1]
0x8a3: M[S0] = V812
0x8a5: V813 = 0x1
0x8a7: V814 = ADD 0x1 S1
0x8a9: V815 = 0x20
0x8ab: V816 = ADD 0x20 S0
0x8ae: V817 = GT V807 V816
0x8af: V818 = 0x89f
0x8b2: JUMPI 0x89f V817
---
Entry stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, 0x6, V778, V778, V807, S1, S0]
Stack pops: 3
Stack additions: [S2, V814, V816]
Exit stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, 0x6, V778, V778, V807, V814, V816]

================================

Block 0x8b3
[0x8b3:0x8bb]
---
Predecessors: [0x89f]
Successors: [0x8bc]
---
0x8b3 DUP3
0x8b4 SWAP1
0x8b5 SUB
0x8b6 PUSH1 0x1f
0x8b8 AND
0x8b9 DUP3
0x8ba ADD
0x8bb SWAP2
---
0x8b5: V819 = SUB V816 V807
0x8b6: V820 = 0x1f
0x8b8: V821 = AND 0x1f V819
0x8ba: V822 = ADD V807 V821
---
Entry stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, 0x6, V778, V778, V807, V814, V816]
Stack pops: 3
Stack additions: [V822, S1, S2]
Exit stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, 0x6, V778, V778, V822, V814, V807]

================================

Block 0x8bc
[0x8bc:0x8d6]
---
Predecessors: [0x80e, 0x87e, 0x8b3]
Successors: [0x8d7, 0x8db]
---
0x8bc JUMPDEST
0x8bd POP
0x8be POP
0x8bf SWAP3
0x8c0 POP
0x8c1 POP
0x8c2 POP
0x8c3 PUSH1 0x20
0x8c5 PUSH1 0x40
0x8c7 MLOAD
0x8c8 DUP1
0x8c9 DUP4
0x8ca SUB
0x8cb DUP2
0x8cc PUSH1 0x0
0x8ce DUP8
0x8cf DUP1
0x8d0 EXTCODESIZE
0x8d1 ISZERO
0x8d2 ISZERO
0x8d3 PUSH2 0x8db
0x8d6 JUMPI
---
0x8bc: JUMPDEST 
0x8c3: V823 = 0x20
0x8c5: V824 = 0x40
0x8c7: V825 = M[0x40]
0x8ca: V826 = SUB S2 V825
0x8cc: V827 = 0x0
0x8d0: V828 = EXTCODESIZE V761
0x8d1: V829 = ISZERO V828
0x8d2: V830 = ISZERO V829
0x8d3: V831 = 0x8db
0x8d6: JUMPI 0x8db V830
---
Entry stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, 0x6, V778, V778, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S2, 0x20, V825, V826, V825, 0x0, S7]
Exit stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, S2, 0x20, V825, V826, V825, 0x0, V761]

================================

Block 0x8d7
[0x8d7:0x8da]
---
Predecessors: [0x8bc]
Successors: []
---
0x8d7 PUSH1 0x0
0x8d9 DUP1
0x8da REVERT
---
0x8d7: V832 = 0x0
0x8da: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, S6, 0x20, V825, V826, V825, 0x0, V761]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, S6, 0x20, V825, V826, V825, 0x0, V761]

================================

Block 0x8db
[0x8db:0x8e7]
---
Predecessors: [0x8bc]
Successors: [0x8e8, 0x8ec]
---
0x8db JUMPDEST
0x8dc PUSH2 0x2c6
0x8df GAS
0x8e0 SUB
0x8e1 CALL
0x8e2 ISZERO
0x8e3 ISZERO
0x8e4 PUSH2 0x8ec
0x8e7 JUMPI
---
0x8db: JUMPDEST 
0x8dc: V833 = 0x2c6
0x8df: V834 = GAS
0x8e0: V835 = SUB V834 0x2c6
0x8e1: V836 = CALL V835 V761 0x0 V825 V826 V825 0x20
0x8e2: V837 = ISZERO V836
0x8e3: V838 = ISZERO V837
0x8e4: V839 = 0x8ec
0x8e7: JUMPI 0x8ec V838
---
Entry stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, S6, 0x20, V825, V826, V825, 0x0, V761]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, S6]

================================

Block 0x8e8
[0x8e8:0x8eb]
---
Predecessors: [0x8db]
Successors: []
---
0x8e8 PUSH1 0x0
0x8ea DUP1
0x8eb REVERT
---
0x8e8: V840 = 0x0
0x8eb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, S0]

================================

Block 0x8ec
[0x8ec:0x909]
---
Predecessors: [0x8db]
Successors: [0x90a, 0x90e]
---
0x8ec JUMPDEST
0x8ed POP
0x8ee POP
0x8ef POP
0x8f0 PUSH1 0x40
0x8f2 MLOAD
0x8f3 DUP1
0x8f4 MLOAD
0x8f5 PUSH1 0x4
0x8f7 DUP1
0x8f8 SLOAD
0x8f9 CALLVALUE
0x8fa ADD
0x8fb SWAP1
0x8fc DUP2
0x8fd SWAP1
0x8fe SSTORE
0x8ff SWAP1
0x900 SWAP3
0x901 POP
0x902 DUP3
0x903 EQ
0x904 SWAP1
0x905 POP
0x906 PUSH2 0x90e
0x909 JUMPI
---
0x8ec: JUMPDEST 
0x8f0: V841 = 0x40
0x8f2: V842 = M[0x40]
0x8f4: V843 = M[V842]
0x8f5: V844 = 0x4
0x8f8: V845 = S[0x4]
0x8f9: V846 = CALLVALUE
0x8fa: V847 = ADD V846 V845
0x8fe: S[0x4] = V847
0x903: V848 = EQ V843 V847
0x906: V849 = 0x90e
0x909: JUMPI 0x90e V848
---
Entry stack: [V12, 0x141, 0x0, V761, 0xf7434ea9, S0]
Stack pops: 4
Stack additions: [V843]
Exit stack: [V12, 0x141, V843]

================================

Block 0x90a
[0x90a:0x90d]
---
Predecessors: [0x8ec]
Successors: []
---
0x90a PUSH1 0x0
0x90c DUP1
0x90d REVERT
---
0x90a: V850 = 0x0
0x90d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, V843]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V843]

================================

Block 0x90e
[0x90e:0x910]
---
Predecessors: [0x8ec]
Successors: [0x911]
---
0x90e JUMPDEST
0x90f PUSH1 0x3
---
0x90e: JUMPDEST 
0x90f: V851 = 0x3
---
Entry stack: [V12, 0x141, V843]
Stack pops: 0
Stack additions: [0x3]
Exit stack: [V12, 0x141, V843, 0x3]

================================

Block 0x911
[0x911:0x920]
---
Predecessors: [0x90e]
Successors: [0x921, 0x922]
---
0x911 JUMPDEST
0x912 PUSH1 0x9
0x914 SLOAD
0x915 PUSH1 0xff
0x917 AND
0x918 PUSH1 0x4
0x91a DUP2
0x91b GT
0x91c ISZERO
0x91d PUSH2 0x922
0x920 JUMPI
---
0x911: JUMPDEST 
0x912: V852 = 0x9
0x914: V853 = S[0x9]
0x915: V854 = 0xff
0x917: V855 = AND 0xff V853
0x918: V856 = 0x4
0x91b: V857 = GT V855 0x4
0x91c: V858 = ISZERO V857
0x91d: V859 = 0x922
0x920: JUMPI 0x922 V858
---
Entry stack: [V12, 0x141, V843, 0x3]
Stack pops: 0
Stack additions: [V855]
Exit stack: [V12, 0x141, V843, 0x3, V855]

================================

Block 0x921
[0x921:0x921]
---
Predecessors: [0x911]
Successors: []
---
0x921 INVALID
---
0x921: INVALID 
---
Entry stack: [V12, 0x141, V843, 0x3, V855]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V843, 0x3, V855]

================================

Block 0x922
[0x922:0x927]
---
Predecessors: [0x911]
Successors: [0x928, 0x92c]
---
0x922 JUMPDEST
0x923 LT
0x924 PUSH2 0x92c
0x927 JUMPI
---
0x922: JUMPDEST 
0x923: V860 = LT V855 0x3
0x924: V861 = 0x92c
0x927: JUMPI 0x92c V860
---
Entry stack: [V12, 0x141, V843, 0x3, V855]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x141, V843]

================================

Block 0x928
[0x928:0x92b]
---
Predecessors: [0x922]
Successors: []
---
0x928 PUSH1 0x0
0x92a DUP1
0x92b REVERT
---
0x928: V862 = 0x0
0x92b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, V843]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V843]

================================

Block 0x92c
[0x92c:0x93b]
---
Predecessors: [0x922]
Successors: [0x93c, 0x99a]
---
0x92c JUMPDEST
0x92d TIMESTAMP
0x92e PUSH1 0x7
0x930 SSTORE
0x931 PUSH1 0x5
0x933 SLOAD
0x934 DUP2
0x935 SWAP1
0x936 LT
0x937 ISZERO
0x938 PUSH2 0x99a
0x93b JUMPI
---
0x92c: JUMPDEST 
0x92d: V863 = TIMESTAMP
0x92e: V864 = 0x7
0x930: S[0x7] = V863
0x931: V865 = 0x5
0x933: V866 = S[0x5]
0x936: V867 = LT V866 V843
0x937: V868 = ISZERO V867
0x938: V869 = 0x99a
0x93b: JUMPI 0x99a V868
---
Entry stack: [V12, 0x141, V843]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x141, V843]

================================

Block 0x93c
[0x93c:0x949]
---
Predecessors: [0x92c]
Successors: [0x94a]
---
0x93c PUSH1 0x9
0x93e DUP1
0x93f SLOAD
0x940 PUSH1 0x1
0x942 SWAP2
0x943 SWAP1
0x944 PUSH1 0xff
0x946 NOT
0x947 AND
0x948 DUP3
0x949 DUP1
---
0x93c: V870 = 0x9
0x93f: V871 = S[0x9]
0x940: V872 = 0x1
0x944: V873 = 0xff
0x946: V874 = NOT 0xff
0x947: V875 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V871
---
Entry stack: [V12, 0x141, V843]
Stack pops: 0
Stack additions: [0x1, 0x9, V875, 0x1, 0x1]
Exit stack: [V12, 0x141, V843, 0x1, 0x9, V875, 0x1, 0x1]

================================

Block 0x94a
[0x94a:0x980]
---
Predecessors: [0x93c]
Successors: [0x981, 0x982]
---
0x94a JUMPDEST
0x94b MUL
0x94c OR
0x94d SWAP1
0x94e SSTORE
0x94f POP
0x950 PUSH32 0xba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568
0x971 PUSH1 0x1
0x973 PUSH1 0x40
0x975 MLOAD
0x976 DUP1
0x977 DUP3
0x978 PUSH1 0x1
0x97a DUP2
0x97b GT
0x97c ISZERO
0x97d PUSH2 0x982
0x980 JUMPI
---
0x94a: JUMPDEST 
0x94b: V876 = MUL 0x1 0x1
0x94c: V877 = OR 0x1 V875
0x94e: S[0x9] = V877
0x950: V878 = 0xba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568
0x971: V879 = 0x1
0x973: V880 = 0x40
0x975: V881 = M[0x40]
0x978: V882 = 0x1
0x97b: V883 = GT 0x1 0x1
0x97c: V884 = ISZERO 0x0
0x97d: V885 = 0x982
0x980: JUMPI 0x982 0x1
---
Entry stack: [V12, 0x141, V843, 0x1, 0x9, V875, 0x1, 0x1]
Stack pops: 5
Stack additions: [0xba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568, 0x1, V881, V881, 0x1]
Exit stack: [V12, 0x141, V843, 0xba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568, 0x1, V881, V881, 0x1]

================================

Block 0x981
[0x981:0x981]
---
Predecessors: [0x94a]
Successors: []
---
0x981 INVALID
---
0x981: INVALID 
---
Entry stack: [V12, 0x141, V843, 0xba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568, 0x1, V881, V881, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V843, 0xba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568, 0x1, V881, V881, 0x1]

================================

Block 0x982
[0x982:0x999]
---
Predecessors: [0x94a, 0xb10]
Successors: [0x551]
---
0x982 JUMPDEST
0x983 PUSH1 0xff
0x985 AND
0x986 DUP2
0x987 MSTORE
0x988 PUSH1 0x20
0x98a ADD
0x98b SWAP2
0x98c POP
0x98d POP
0x98e PUSH1 0x40
0x990 MLOAD
0x991 DUP1
0x992 SWAP2
0x993 SUB
0x994 SWAP1
0x995 LOG1
0x996 PUSH2 0x551
0x999 JUMP
---
0x982: JUMPDEST 
0x983: V886 = 0xff
0x985: V887 = AND 0xff {0x0, 0x1}
0x987: M[S1] = V887
0x988: V888 = 0x20
0x98a: V889 = ADD 0x20 S1
0x98e: V890 = 0x40
0x990: V891 = M[0x40]
0x993: V892 = SUB V889 V891
0x995: LOG V891 V892 0xba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568
0x996: V893 = 0x551
0x999: JUMP 0x551
---
Entry stack: [V12, 0x141, S5, 0xba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568, {0x0, 0x1}, S2, S1, {0x0, 0x1}]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x141, S5]

================================

Block 0x99a
[0x99a:0x9a2]
---
Predecessors: [0x92c, 0xaf1]
Successors: [0xd0c]
---
0x99a JUMPDEST
0x99b PUSH2 0x551
0x99e DUP2
0x99f PUSH2 0xd0c
0x9a2 JUMP
---
0x99a: JUMPDEST 
0x99b: V894 = 0x551
0x99f: V895 = 0xd0c
0x9a2: JUMP 0xd0c
---
Entry stack: [V12, 0x141, S0]
Stack pops: 1
Stack additions: [S0, 0x551, S0]
Exit stack: [V12, 0x141, S0, 0x551, S0]

================================

Block 0x9a3
[0x9a3:0x9a3]
---
Predecessors: []
Successors: [0x9a4]
---
0x9a3 JUMPDEST
---
0x9a3: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9a4
[0x9a4:0x9a4]
---
Predecessors: [0x9a3]
Successors: [0x9a5]
---
0x9a4 JUMPDEST
---
0x9a4: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9a5
[0x9a5:0x9a5]
---
Predecessors: [0x9a4]
Successors: [0x9a6]
---
0x9a5 JUMPDEST
---
0x9a5: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9a6
[0x9a6:0x9a8]
---
Predecessors: [0x9a5]
Successors: []
Has unresolved jump.
---
0x9a6 JUMPDEST
0x9a7 POP
0x9a8 JUMP
---
0x9a6: JUMPDEST 
0x9a8: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x9a9
[0x9a9:0x9ae]
---
Predecessors: [0x3ad]
Successors: [0x2d3]
---
0x9a9 JUMPDEST
0x9aa PUSH1 0xa
0x9ac SLOAD
0x9ad DUP2
0x9ae JUMP
---
0x9a9: JUMPDEST 
0x9aa: V896 = 0xa
0x9ac: V897 = S[0xa]
0x9ae: JUMP 0x2d3
---
Entry stack: [V12, 0x2d3]
Stack pops: 1
Stack additions: [S0, V897]
Exit stack: [V12, 0x2d3, V897]

================================

Block 0x9af
[0x9af:0x9b4]
---
Predecessors: [0x3d2]
Successors: [0x2d3]
---
0x9af JUMPDEST
0x9b0 PUSH1 0x8
0x9b2 SLOAD
0x9b3 DUP2
0x9b4 JUMP
---
0x9af: JUMPDEST 
0x9b0: V898 = 0x8
0x9b2: V899 = S[0x8]
0x9b4: JUMP 0x2d3
---
Entry stack: [V12, 0x2d3]
Stack pops: 1
Stack additions: [S0, V899]
Exit stack: [V12, 0x2d3, V899]

================================

Block 0x9b5
[0x9b5:0x9ce]
---
Predecessors: [0x3ec]
Successors: [0x9cf, 0x9d3]
---
0x9b5 JUMPDEST
0x9b6 PUSH1 0x3
0x9b8 SLOAD
0x9b9 PUSH1 0x0
0x9bb SWAP1
0x9bc CALLER
0x9bd PUSH1 0x1
0x9bf PUSH1 0xa0
0x9c1 PUSH1 0x2
0x9c3 EXP
0x9c4 SUB
0x9c5 SWAP1
0x9c6 DUP2
0x9c7 AND
0x9c8 SWAP2
0x9c9 AND
0x9ca EQ
0x9cb PUSH2 0x9d3
0x9ce JUMPI
---
0x9b5: JUMPDEST 
0x9b6: V900 = 0x3
0x9b8: V901 = S[0x3]
0x9b9: V902 = 0x0
0x9bc: V903 = CALLER
0x9bd: V904 = 0x1
0x9bf: V905 = 0xa0
0x9c1: V906 = 0x2
0x9c3: V907 = EXP 0x2 0xa0
0x9c4: V908 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c7: V909 = AND 0xffffffffffffffffffffffffffffffffffffffff V903
0x9c9: V910 = AND V901 0xffffffffffffffffffffffffffffffffffffffff
0x9ca: V911 = EQ V910 V909
0x9cb: V912 = 0x9d3
0x9ce: JUMPI 0x9d3 V911
---
Entry stack: [V12, 0x141]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x141, 0x0]

================================

Block 0x9cf
[0x9cf:0x9d2]
---
Predecessors: [0x9b5]
Successors: []
---
0x9cf PUSH1 0x0
0x9d1 DUP1
0x9d2 REVERT
---
0x9cf: V913 = 0x0
0x9d2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, 0x0]

================================

Block 0x9d3
[0x9d3:0xa3a]
---
Predecessors: [0x9b5]
Successors: [0xa3b, 0xa81]
---
0x9d3 JUMPDEST
0x9d4 PUSH1 0x0
0x9d6 DUP1
0x9d7 SLOAD
0x9d8 PUSH1 0x1
0x9da PUSH1 0xa0
0x9dc PUSH1 0x2
0x9de EXP
0x9df SUB
0x9e0 AND
0x9e1 SWAP1
0x9e2 PUSH4 0xf7434ea9
0x9e7 SWAP1
0x9e8 PUSH1 0x6
0x9ea SWAP1
0x9eb PUSH1 0x40
0x9ed MLOAD
0x9ee PUSH1 0x20
0x9f0 ADD
0x9f1 MSTORE
0x9f2 PUSH1 0x40
0x9f4 MLOAD
0x9f5 PUSH1 0xe0
0x9f7 PUSH1 0x2
0x9f9 EXP
0x9fa PUSH4 0xffffffff
0x9ff DUP5
0xa00 AND
0xa01 MUL
0xa02 DUP2
0xa03 MSTORE
0xa04 PUSH1 0x20
0xa06 PUSH1 0x4
0xa08 DUP3
0xa09 ADD
0xa0a SWAP1
0xa0b DUP2
0xa0c MSTORE
0xa0d DUP3
0xa0e SLOAD
0xa0f PUSH1 0x2
0xa11 PUSH1 0x0
0xa13 NOT
0xa14 PUSH2 0x100
0xa17 PUSH1 0x1
0xa19 DUP5
0xa1a AND
0xa1b ISZERO
0xa1c MUL
0xa1d ADD
0xa1e SWAP1
0xa1f SWAP2
0xa20 AND
0xa21 DIV
0xa22 PUSH1 0x24
0xa24 DUP4
0xa25 ADD
0xa26 DUP2
0xa27 SWAP1
0xa28 MSTORE
0xa29 SWAP1
0xa2a SWAP2
0xa2b DUP3
0xa2c SWAP2
0xa2d PUSH1 0x44
0xa2f SWAP1
0xa30 SWAP2
0xa31 ADD
0xa32 SWAP1
0xa33 DUP5
0xa34 SWAP1
0xa35 DUP1
0xa36 ISZERO
0xa37 PUSH2 0xa81
0xa3a JUMPI
---
0x9d3: JUMPDEST 
0x9d4: V914 = 0x0
0x9d7: V915 = S[0x0]
0x9d8: V916 = 0x1
0x9da: V917 = 0xa0
0x9dc: V918 = 0x2
0x9de: V919 = EXP 0x2 0xa0
0x9df: V920 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e0: V921 = AND 0xffffffffffffffffffffffffffffffffffffffff V915
0x9e2: V922 = 0xf7434ea9
0x9e8: V923 = 0x6
0x9eb: V924 = 0x40
0x9ed: V925 = M[0x40]
0x9ee: V926 = 0x20
0x9f0: V927 = ADD 0x20 V925
0x9f1: M[V927] = 0x0
0x9f2: V928 = 0x40
0x9f4: V929 = M[0x40]
0x9f5: V930 = 0xe0
0x9f7: V931 = 0x2
0x9f9: V932 = EXP 0x2 0xe0
0x9fa: V933 = 0xffffffff
0xa00: V934 = AND 0xf7434ea9 0xffffffff
0xa01: V935 = MUL 0xf7434ea9 0x100000000000000000000000000000000000000000000000000000000
0xa03: M[V929] = 0xf7434ea900000000000000000000000000000000000000000000000000000000
0xa04: V936 = 0x20
0xa06: V937 = 0x4
0xa09: V938 = ADD V929 0x4
0xa0c: M[V938] = 0x20
0xa0e: V939 = S[0x6]
0xa0f: V940 = 0x2
0xa11: V941 = 0x0
0xa13: V942 = NOT 0x0
0xa14: V943 = 0x100
0xa17: V944 = 0x1
0xa1a: V945 = AND V939 0x1
0xa1b: V946 = ISZERO V945
0xa1c: V947 = MUL V946 0x100
0xa1d: V948 = ADD V947 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa20: V949 = AND V939 V948
0xa21: V950 = DIV V949 0x2
0xa22: V951 = 0x24
0xa25: V952 = ADD V929 0x24
0xa28: M[V952] = V950
0xa2d: V953 = 0x44
0xa31: V954 = ADD V929 0x44
0xa36: V955 = ISZERO V950
0xa37: V956 = 0xa81
0xa3a: JUMPI 0xa81 V955
---
Entry stack: [V12, 0x141, 0x0]
Stack pops: 0
Stack additions: [V921, 0xf7434ea9, 0x6, V938, V938, V954, 0x6, V950]
Exit stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, 0x6, V938, V938, V954, 0x6, V950]

================================

Block 0xa3b
[0xa3b:0xa42]
---
Predecessors: [0x9d3]
Successors: [0xa43, 0xa56]
---
0xa3b DUP1
0xa3c PUSH1 0x1f
0xa3e LT
0xa3f PUSH2 0xa56
0xa42 JUMPI
---
0xa3c: V957 = 0x1f
0xa3e: V958 = LT 0x1f V950
0xa3f: V959 = 0xa56
0xa42: JUMPI 0xa56 V958
---
Entry stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, 0x6, V938, V938, V954, 0x6, V950]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, 0x6, V938, V938, V954, 0x6, V950]

================================

Block 0xa43
[0xa43:0xa55]
---
Predecessors: [0xa3b]
Successors: [0xa81]
---
0xa43 PUSH2 0x100
0xa46 DUP1
0xa47 DUP4
0xa48 SLOAD
0xa49 DIV
0xa4a MUL
0xa4b DUP4
0xa4c MSTORE
0xa4d SWAP2
0xa4e PUSH1 0x20
0xa50 ADD
0xa51 SWAP2
0xa52 PUSH2 0xa81
0xa55 JUMP
---
0xa43: V960 = 0x100
0xa48: V961 = S[0x6]
0xa49: V962 = DIV V961 0x100
0xa4a: V963 = MUL V962 0x100
0xa4c: M[V954] = V963
0xa4e: V964 = 0x20
0xa50: V965 = ADD 0x20 V954
0xa52: V966 = 0xa81
0xa55: JUMP 0xa81
---
Entry stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, 0x6, V938, V938, V954, 0x6, V950]
Stack pops: 3
Stack additions: [V965, S1, S0]
Exit stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, 0x6, V938, V938, V965, 0x6, V950]

================================

Block 0xa56
[0xa56:0xa63]
---
Predecessors: [0xa3b]
Successors: [0xa64]
---
0xa56 JUMPDEST
0xa57 DUP3
0xa58 ADD
0xa59 SWAP2
0xa5a SWAP1
0xa5b PUSH1 0x0
0xa5d MSTORE
0xa5e PUSH1 0x20
0xa60 PUSH1 0x0
0xa62 SHA3
0xa63 SWAP1
---
0xa56: JUMPDEST 
0xa58: V967 = ADD V954 V950
0xa5b: V968 = 0x0
0xa5d: M[0x0] = 0x6
0xa5e: V969 = 0x20
0xa60: V970 = 0x0
0xa62: V971 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, 0x6, V938, V938, V954, 0x6, V950]
Stack pops: 3
Stack additions: [V967, V971, S2]
Exit stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, 0x6, V938, V938, V967, V971, V954]

================================

Block 0xa64
[0xa64:0xa77]
---
Predecessors: [0xa56, 0xa64]
Successors: [0xa64, 0xa78]
---
0xa64 JUMPDEST
0xa65 DUP2
0xa66 SLOAD
0xa67 DUP2
0xa68 MSTORE
0xa69 SWAP1
0xa6a PUSH1 0x1
0xa6c ADD
0xa6d SWAP1
0xa6e PUSH1 0x20
0xa70 ADD
0xa71 DUP1
0xa72 DUP4
0xa73 GT
0xa74 PUSH2 0xa64
0xa77 JUMPI
---
0xa64: JUMPDEST 
0xa66: V972 = S[S1]
0xa68: M[S0] = V972
0xa6a: V973 = 0x1
0xa6c: V974 = ADD 0x1 S1
0xa6e: V975 = 0x20
0xa70: V976 = ADD 0x20 S0
0xa73: V977 = GT V967 V976
0xa74: V978 = 0xa64
0xa77: JUMPI 0xa64 V977
---
Entry stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, 0x6, V938, V938, V967, S1, S0]
Stack pops: 3
Stack additions: [S2, V974, V976]
Exit stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, 0x6, V938, V938, V967, V974, V976]

================================

Block 0xa78
[0xa78:0xa80]
---
Predecessors: [0xa64]
Successors: [0xa81]
---
0xa78 DUP3
0xa79 SWAP1
0xa7a SUB
0xa7b PUSH1 0x1f
0xa7d AND
0xa7e DUP3
0xa7f ADD
0xa80 SWAP2
---
0xa7a: V979 = SUB V976 V967
0xa7b: V980 = 0x1f
0xa7d: V981 = AND 0x1f V979
0xa7f: V982 = ADD V967 V981
---
Entry stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, 0x6, V938, V938, V967, V974, V976]
Stack pops: 3
Stack additions: [V982, S1, S2]
Exit stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, 0x6, V938, V938, V982, V974, V967]

================================

Block 0xa81
[0xa81:0xa9b]
---
Predecessors: [0x9d3, 0xa43, 0xa78]
Successors: [0xa9c, 0xaa0]
---
0xa81 JUMPDEST
0xa82 POP
0xa83 POP
0xa84 SWAP3
0xa85 POP
0xa86 POP
0xa87 POP
0xa88 PUSH1 0x20
0xa8a PUSH1 0x40
0xa8c MLOAD
0xa8d DUP1
0xa8e DUP4
0xa8f SUB
0xa90 DUP2
0xa91 PUSH1 0x0
0xa93 DUP8
0xa94 DUP1
0xa95 EXTCODESIZE
0xa96 ISZERO
0xa97 ISZERO
0xa98 PUSH2 0xaa0
0xa9b JUMPI
---
0xa81: JUMPDEST 
0xa88: V983 = 0x20
0xa8a: V984 = 0x40
0xa8c: V985 = M[0x40]
0xa8f: V986 = SUB S2 V985
0xa91: V987 = 0x0
0xa95: V988 = EXTCODESIZE V921
0xa96: V989 = ISZERO V988
0xa97: V990 = ISZERO V989
0xa98: V991 = 0xaa0
0xa9b: JUMPI 0xaa0 V990
---
Entry stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, 0x6, V938, V938, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S2, 0x20, V985, V986, V985, 0x0, S7]
Exit stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, S2, 0x20, V985, V986, V985, 0x0, V921]

================================

Block 0xa9c
[0xa9c:0xa9f]
---
Predecessors: [0xa81]
Successors: []
---
0xa9c PUSH1 0x0
0xa9e DUP1
0xa9f REVERT
---
0xa9c: V992 = 0x0
0xa9f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, S6, 0x20, V985, V986, V985, 0x0, V921]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, S6, 0x20, V985, V986, V985, 0x0, V921]

================================

Block 0xaa0
[0xaa0:0xaac]
---
Predecessors: [0xa81]
Successors: [0xaad, 0xab1]
---
0xaa0 JUMPDEST
0xaa1 PUSH2 0x2c6
0xaa4 GAS
0xaa5 SUB
0xaa6 CALL
0xaa7 ISZERO
0xaa8 ISZERO
0xaa9 PUSH2 0xab1
0xaac JUMPI
---
0xaa0: JUMPDEST 
0xaa1: V993 = 0x2c6
0xaa4: V994 = GAS
0xaa5: V995 = SUB V994 0x2c6
0xaa6: V996 = CALL V995 V921 0x0 V985 V986 V985 0x20
0xaa7: V997 = ISZERO V996
0xaa8: V998 = ISZERO V997
0xaa9: V999 = 0xab1
0xaac: JUMPI 0xab1 V998
---
Entry stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, S6, 0x20, V985, V986, V985, 0x0, V921]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, S6]

================================

Block 0xaad
[0xaad:0xab0]
---
Predecessors: [0xaa0]
Successors: []
---
0xaad PUSH1 0x0
0xaaf DUP1
0xab0 REVERT
---
0xaad: V1000 = 0x0
0xab0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, S0]

================================

Block 0xab1
[0xab1:0xace]
---
Predecessors: [0xaa0]
Successors: [0xacf, 0xad3]
---
0xab1 JUMPDEST
0xab2 POP
0xab3 POP
0xab4 POP
0xab5 PUSH1 0x40
0xab7 MLOAD
0xab8 DUP1
0xab9 MLOAD
0xaba PUSH1 0x5
0xabc DUP1
0xabd SLOAD
0xabe CALLVALUE
0xabf ADD
0xac0 SWAP1
0xac1 DUP2
0xac2 SWAP1
0xac3 SSTORE
0xac4 SWAP1
0xac5 SWAP3
0xac6 POP
0xac7 DUP3
0xac8 EQ
0xac9 SWAP1
0xaca POP
0xacb PUSH2 0xad3
0xace JUMPI
---
0xab1: JUMPDEST 
0xab5: V1001 = 0x40
0xab7: V1002 = M[0x40]
0xab9: V1003 = M[V1002]
0xaba: V1004 = 0x5
0xabd: V1005 = S[0x5]
0xabe: V1006 = CALLVALUE
0xabf: V1007 = ADD V1006 V1005
0xac3: S[0x5] = V1007
0xac8: V1008 = EQ V1003 V1007
0xacb: V1009 = 0xad3
0xace: JUMPI 0xad3 V1008
---
Entry stack: [V12, 0x141, 0x0, V921, 0xf7434ea9, S0]
Stack pops: 4
Stack additions: [V1003]
Exit stack: [V12, 0x141, V1003]

================================

Block 0xacf
[0xacf:0xad2]
---
Predecessors: [0xab1]
Successors: []
---
0xacf PUSH1 0x0
0xad1 DUP1
0xad2 REVERT
---
0xacf: V1010 = 0x0
0xad2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, V1003]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V1003]

================================

Block 0xad3
[0xad3:0xad5]
---
Predecessors: [0xab1]
Successors: [0xad6]
---
0xad3 JUMPDEST
0xad4 PUSH1 0x3
---
0xad3: JUMPDEST 
0xad4: V1011 = 0x3
---
Entry stack: [V12, 0x141, V1003]
Stack pops: 0
Stack additions: [0x3]
Exit stack: [V12, 0x141, V1003, 0x3]

================================

Block 0xad6
[0xad6:0xae5]
---
Predecessors: [0xad3]
Successors: [0xae6, 0xae7]
---
0xad6 JUMPDEST
0xad7 PUSH1 0x9
0xad9 SLOAD
0xada PUSH1 0xff
0xadc AND
0xadd PUSH1 0x4
0xadf DUP2
0xae0 GT
0xae1 ISZERO
0xae2 PUSH2 0xae7
0xae5 JUMPI
---
0xad6: JUMPDEST 
0xad7: V1012 = 0x9
0xad9: V1013 = S[0x9]
0xada: V1014 = 0xff
0xadc: V1015 = AND 0xff V1013
0xadd: V1016 = 0x4
0xae0: V1017 = GT V1015 0x4
0xae1: V1018 = ISZERO V1017
0xae2: V1019 = 0xae7
0xae5: JUMPI 0xae7 V1018
---
Entry stack: [V12, 0x141, V1003, 0x3]
Stack pops: 0
Stack additions: [V1015]
Exit stack: [V12, 0x141, V1003, 0x3, V1015]

================================

Block 0xae6
[0xae6:0xae6]
---
Predecessors: [0xad6]
Successors: []
---
0xae6 INVALID
---
0xae6: INVALID 
---
Entry stack: [V12, 0x141, V1003, 0x3, V1015]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V1003, 0x3, V1015]

================================

Block 0xae7
[0xae7:0xaec]
---
Predecessors: [0xad6]
Successors: [0xaed, 0xaf1]
---
0xae7 JUMPDEST
0xae8 LT
0xae9 PUSH2 0xaf1
0xaec JUMPI
---
0xae7: JUMPDEST 
0xae8: V1020 = LT V1015 0x3
0xae9: V1021 = 0xaf1
0xaec: JUMPI 0xaf1 V1020
---
Entry stack: [V12, 0x141, V1003, 0x3, V1015]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x141, V1003]

================================

Block 0xaed
[0xaed:0xaf0]
---
Predecessors: [0xae7]
Successors: []
---
0xaed PUSH1 0x0
0xaef DUP1
0xaf0 REVERT
---
0xaed: V1022 = 0x0
0xaf0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, V1003]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V1003]

================================

Block 0xaf1
[0xaf1:0xb00]
---
Predecessors: [0xae7]
Successors: [0x99a, 0xb01]
---
0xaf1 JUMPDEST
0xaf2 TIMESTAMP
0xaf3 PUSH1 0x7
0xaf5 SSTORE
0xaf6 PUSH1 0x4
0xaf8 SLOAD
0xaf9 DUP2
0xafa SWAP1
0xafb LT
0xafc ISZERO
0xafd PUSH2 0x99a
0xb00 JUMPI
---
0xaf1: JUMPDEST 
0xaf2: V1023 = TIMESTAMP
0xaf3: V1024 = 0x7
0xaf5: S[0x7] = V1023
0xaf6: V1025 = 0x4
0xaf8: V1026 = S[0x4]
0xafb: V1027 = LT V1026 V1003
0xafc: V1028 = ISZERO V1027
0xafd: V1029 = 0x99a
0xb00: JUMPI 0x99a V1028
---
Entry stack: [V12, 0x141, V1003]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x141, V1003]

================================

Block 0xb01
[0xb01:0xb0f]
---
Predecessors: [0xaf1]
Successors: [0xb10]
---
0xb01 PUSH1 0x9
0xb03 DUP1
0xb04 SLOAD
0xb05 PUSH1 0x2
0xb07 SWAP2
0xb08 SWAP1
0xb09 PUSH1 0xff
0xb0b NOT
0xb0c AND
0xb0d PUSH1 0x1
0xb0f DUP4
---
0xb01: V1030 = 0x9
0xb04: V1031 = S[0x9]
0xb05: V1032 = 0x2
0xb09: V1033 = 0xff
0xb0b: V1034 = NOT 0xff
0xb0c: V1035 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1031
0xb0d: V1036 = 0x1
---
Entry stack: [V12, 0x141, V1003]
Stack pops: 0
Stack additions: [0x2, 0x9, V1035, 0x1, 0x2]
Exit stack: [V12, 0x141, V1003, 0x2, 0x9, V1035, 0x1, 0x2]

================================

Block 0xb10
[0xb10:0xb46]
---
Predecessors: [0xb01]
Successors: [0x982, 0xb47]
---
0xb10 JUMPDEST
0xb11 MUL
0xb12 OR
0xb13 SWAP1
0xb14 SSTORE
0xb15 POP
0xb16 PUSH32 0xba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568
0xb37 PUSH1 0x0
0xb39 PUSH1 0x40
0xb3b MLOAD
0xb3c DUP1
0xb3d DUP3
0xb3e PUSH1 0x1
0xb40 DUP2
0xb41 GT
0xb42 ISZERO
0xb43 PUSH2 0x982
0xb46 JUMPI
---
0xb10: JUMPDEST 
0xb11: V1037 = MUL 0x2 0x1
0xb12: V1038 = OR 0x2 V1035
0xb14: S[0x9] = V1038
0xb16: V1039 = 0xba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568
0xb37: V1040 = 0x0
0xb39: V1041 = 0x40
0xb3b: V1042 = M[0x40]
0xb3e: V1043 = 0x1
0xb41: V1044 = GT 0x0 0x1
0xb42: V1045 = ISZERO 0x0
0xb43: V1046 = 0x982
0xb46: JUMPI 0x982 0x1
---
Entry stack: [V12, 0x141, V1003, 0x2, 0x9, V1035, 0x1, 0x2]
Stack pops: 5
Stack additions: [0xba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568, 0x0, V1042, V1042, 0x0]
Exit stack: [V12, 0x141, V1003, 0xba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568, 0x0, V1042, V1042, 0x0]

================================

Block 0xb47
[0xb47:0xb47]
---
Predecessors: [0xb10]
Successors: []
---
0xb47 INVALID
---
0xb47: INVALID 
---
Entry stack: [V12, 0x141, V1003, 0xba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568, 0x0, V1042, V1042, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V1003, 0xba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568, 0x0, V1042, V1042, 0x0]

================================

Block 0xb48
[0xb48:0xb5f]
---
Predecessors: []
Successors: [0x551]
---
0xb48 JUMPDEST
0xb49 PUSH1 0xff
0xb4b AND
0xb4c DUP2
0xb4d MSTORE
0xb4e PUSH1 0x20
0xb50 ADD
0xb51 SWAP2
0xb52 POP
0xb53 POP
0xb54 PUSH1 0x40
0xb56 MLOAD
0xb57 DUP1
0xb58 SWAP2
0xb59 SUB
0xb5a SWAP1
0xb5b LOG1
0xb5c PUSH2 0x551
0xb5f JUMP
---
0xb48: JUMPDEST 
0xb49: V1047 = 0xff
0xb4b: V1048 = AND 0xff S0
0xb4d: M[S1] = V1048
0xb4e: V1049 = 0x20
0xb50: V1050 = ADD 0x20 S1
0xb54: V1051 = 0x40
0xb56: V1052 = M[0x40]
0xb59: V1053 = SUB V1050 V1052
0xb5b: LOG V1052 V1053 S4
0xb5c: V1054 = 0x551
0xb5f: JUMP 0x551
---
Entry stack: []
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0xb60
[0xb60:0xb68]
---
Predecessors: []
Successors: [0xd0c]
---
0xb60 JUMPDEST
0xb61 PUSH2 0x551
0xb64 DUP2
0xb65 PUSH2 0xd0c
0xb68 JUMP
---
0xb60: JUMPDEST 
0xb61: V1055 = 0x551
0xb65: V1056 = 0xd0c
0xb68: JUMP 0xd0c
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, 0x551, S0]
Exit stack: [S0, 0x551, S0]

================================

Block 0xb69
[0xb69:0xb69]
---
Predecessors: []
Successors: [0xb6a]
---
0xb69 JUMPDEST
---
0xb69: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb6a
[0xb6a:0xb6a]
---
Predecessors: [0xb69]
Successors: [0xb6b]
---
0xb6a JUMPDEST
---
0xb6a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb6b
[0xb6b:0xb6b]
---
Predecessors: [0xb6a]
Successors: [0xb6c]
---
0xb6b JUMPDEST
---
0xb6b: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb6c
[0xb6c:0xb6e]
---
Predecessors: [0xb6b]
Successors: []
Has unresolved jump.
---
0xb6c JUMPDEST
0xb6d POP
0xb6e JUMP
---
0xb6c: JUMPDEST 
0xb6e: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xb6f
[0xb6f:0xb86]
---
Predecessors: [0x401]
Successors: [0xb87, 0xb9a]
---
0xb6f JUMPDEST
0xb70 PUSH1 0x2
0xb72 SLOAD
0xb73 CALLER
0xb74 PUSH1 0x1
0xb76 PUSH1 0xa0
0xb78 PUSH1 0x2
0xb7a EXP
0xb7b SUB
0xb7c SWAP1
0xb7d DUP2
0xb7e AND
0xb7f SWAP2
0xb80 AND
0xb81 EQ
0xb82 DUP1
0xb83 PUSH2 0xb9a
0xb86 JUMPI
---
0xb6f: JUMPDEST 
0xb70: V1057 = 0x2
0xb72: V1058 = S[0x2]
0xb73: V1059 = CALLER
0xb74: V1060 = 0x1
0xb76: V1061 = 0xa0
0xb78: V1062 = 0x2
0xb7a: V1063 = EXP 0x2 0xa0
0xb7b: V1064 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7e: V1065 = AND 0xffffffffffffffffffffffffffffffffffffffff V1059
0xb80: V1066 = AND V1058 0xffffffffffffffffffffffffffffffffffffffff
0xb81: V1067 = EQ V1066 V1065
0xb83: V1068 = 0xb9a
0xb86: JUMPI 0xb9a V1067
---
Entry stack: [V12, 0x141, V352]
Stack pops: 0
Stack additions: [V1067]
Exit stack: [V12, 0x141, V352, V1067]

================================

Block 0xb87
[0xb87:0xb99]
---
Predecessors: [0xb6f]
Successors: [0xb9a]
---
0xb87 POP
0xb88 PUSH1 0x3
0xb8a SLOAD
0xb8b CALLER
0xb8c PUSH1 0x1
0xb8e PUSH1 0xa0
0xb90 PUSH1 0x2
0xb92 EXP
0xb93 SUB
0xb94 SWAP1
0xb95 DUP2
0xb96 AND
0xb97 SWAP2
0xb98 AND
0xb99 EQ
---
0xb88: V1069 = 0x3
0xb8a: V1070 = S[0x3]
0xb8b: V1071 = CALLER
0xb8c: V1072 = 0x1
0xb8e: V1073 = 0xa0
0xb90: V1074 = 0x2
0xb92: V1075 = EXP 0x2 0xa0
0xb93: V1076 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb96: V1077 = AND 0xffffffffffffffffffffffffffffffffffffffff V1071
0xb98: V1078 = AND V1070 0xffffffffffffffffffffffffffffffffffffffff
0xb99: V1079 = EQ V1078 V1077
---
Entry stack: [V12, 0x141, V352, V1067]
Stack pops: 1
Stack additions: [V1079]
Exit stack: [V12, 0x141, V352, V1079]

================================

Block 0xb9a
[0xb9a:0xba0]
---
Predecessors: [0xb6f, 0xb87]
Successors: [0xba1, 0xba5]
---
0xb9a JUMPDEST
0xb9b ISZERO
0xb9c ISZERO
0xb9d PUSH2 0xba5
0xba0 JUMPI
---
0xb9a: JUMPDEST 
0xb9b: V1080 = ISZERO S0
0xb9c: V1081 = ISZERO V1080
0xb9d: V1082 = 0xba5
0xba0: JUMPI 0xba5 V1081
---
Entry stack: [V12, 0x141, V352, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x141, V352]

================================

Block 0xba1
[0xba1:0xba4]
---
Predecessors: [0xb9a]
Successors: []
---
0xba1 PUSH1 0x0
0xba3 DUP1
0xba4 REVERT
---
0xba1: V1083 = 0x0
0xba4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, V352]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V352]

================================

Block 0xba5
[0xba5:0xba7]
---
Predecessors: [0xb9a]
Successors: [0xba8]
---
0xba5 JUMPDEST
0xba6 PUSH1 0x3
---
0xba5: JUMPDEST 
0xba6: V1084 = 0x3
---
Entry stack: [V12, 0x141, V352]
Stack pops: 0
Stack additions: [0x3]
Exit stack: [V12, 0x141, V352, 0x3]

================================

Block 0xba8
[0xba8:0xbb7]
---
Predecessors: [0xba5]
Successors: [0xbb8, 0xbb9]
---
0xba8 JUMPDEST
0xba9 PUSH1 0x9
0xbab SLOAD
0xbac PUSH1 0xff
0xbae AND
0xbaf PUSH1 0x4
0xbb1 DUP2
0xbb2 GT
0xbb3 ISZERO
0xbb4 PUSH2 0xbb9
0xbb7 JUMPI
---
0xba8: JUMPDEST 
0xba9: V1085 = 0x9
0xbab: V1086 = S[0x9]
0xbac: V1087 = 0xff
0xbae: V1088 = AND 0xff V1086
0xbaf: V1089 = 0x4
0xbb2: V1090 = GT V1088 0x4
0xbb3: V1091 = ISZERO V1090
0xbb4: V1092 = 0xbb9
0xbb7: JUMPI 0xbb9 V1091
---
Entry stack: [V12, 0x141, V352, 0x3]
Stack pops: 0
Stack additions: [V1088]
Exit stack: [V12, 0x141, V352, 0x3, V1088]

================================

Block 0xbb8
[0xbb8:0xbb8]
---
Predecessors: [0xba8]
Successors: []
---
0xbb8 INVALID
---
0xbb8: INVALID 
---
Entry stack: [V12, 0x141, V352, 0x3, V1088]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V352, 0x3, V1088]

================================

Block 0xbb9
[0xbb9:0xbbf]
---
Predecessors: [0xba8]
Successors: [0xbc0, 0xbc4]
---
0xbb9 JUMPDEST
0xbba LT
0xbbb ISZERO
0xbbc PUSH2 0xbc4
0xbbf JUMPI
---
0xbb9: JUMPDEST 
0xbba: V1093 = LT V1088 0x3
0xbbb: V1094 = ISZERO V1093
0xbbc: V1095 = 0xbc4
0xbbf: JUMPI 0xbc4 V1094
---
Entry stack: [V12, 0x141, V352, 0x3, V1088]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x141, V352]

================================

Block 0xbc0
[0xbc0:0xbc3]
---
Predecessors: [0xbb9]
Successors: []
---
0xbc0 PUSH1 0x0
0xbc2 DUP1
0xbc3 REVERT
---
0xbc0: V1096 = 0x0
0xbc3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, V352]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V352]

================================

Block 0xbc4
[0xbc4:0xc28]
---
Predecessors: [0xbb9]
Successors: [0xc29]
---
0xbc4 JUMPDEST
0xbc5 PUSH1 0x8
0xbc7 SLOAD
0xbc8 PUSH1 0x0
0xbca SLOAD
0xbcb PUSH1 0x1
0xbcd PUSH1 0xa0
0xbcf PUSH1 0x2
0xbd1 EXP
0xbd2 SUB
0xbd3 AND
0xbd4 PUSH32 0xdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c
0xbf5 CALLER
0xbf6 DUP5
0xbf7 PUSH1 0x40
0xbf9 MLOAD
0xbfa PUSH1 0x1
0xbfc PUSH1 0xa0
0xbfe PUSH1 0x2
0xc00 EXP
0xc01 SUB
0xc02 DUP4
0xc03 AND
0xc04 DUP2
0xc05 MSTORE
0xc06 PUSH1 0x40
0xc08 PUSH1 0x20
0xc0a DUP3
0xc0b ADD
0xc0c DUP2
0xc0d DUP2
0xc0e MSTORE
0xc0f SWAP1
0xc10 DUP3
0xc11 ADD
0xc12 DUP4
0xc13 DUP2
0xc14 DUP2
0xc15 MLOAD
0xc16 DUP2
0xc17 MSTORE
0xc18 PUSH1 0x20
0xc1a ADD
0xc1b SWAP2
0xc1c POP
0xc1d DUP1
0xc1e MLOAD
0xc1f SWAP1
0xc20 PUSH1 0x20
0xc22 ADD
0xc23 SWAP1
0xc24 DUP1
0xc25 DUP4
0xc26 DUP4
0xc27 PUSH1 0x0
---
0xbc4: JUMPDEST 
0xbc5: V1097 = 0x8
0xbc7: V1098 = S[0x8]
0xbc8: V1099 = 0x0
0xbca: V1100 = S[0x0]
0xbcb: V1101 = 0x1
0xbcd: V1102 = 0xa0
0xbcf: V1103 = 0x2
0xbd1: V1104 = EXP 0x2 0xa0
0xbd2: V1105 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd3: V1106 = AND 0xffffffffffffffffffffffffffffffffffffffff V1100
0xbd4: V1107 = 0xdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c
0xbf5: V1108 = CALLER
0xbf7: V1109 = 0x40
0xbf9: V1110 = M[0x40]
0xbfa: V1111 = 0x1
0xbfc: V1112 = 0xa0
0xbfe: V1113 = 0x2
0xc00: V1114 = EXP 0x2 0xa0
0xc01: V1115 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc03: V1116 = AND V1108 0xffffffffffffffffffffffffffffffffffffffff
0xc05: M[V1110] = V1116
0xc06: V1117 = 0x40
0xc08: V1118 = 0x20
0xc0b: V1119 = ADD V1110 0x20
0xc0e: M[V1119] = 0x40
0xc11: V1120 = ADD V1110 0x40
0xc15: V1121 = M[V352]
0xc17: M[V1120] = V1121
0xc18: V1122 = 0x20
0xc1a: V1123 = ADD 0x20 V1120
0xc1e: V1124 = M[V352]
0xc20: V1125 = 0x20
0xc22: V1126 = ADD 0x20 V352
0xc27: V1127 = 0x0
---
Entry stack: [V12, 0x141, V352]
Stack pops: 1
Stack additions: [S0, V1098, V1106, 0xdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c, V1108, S0, V1110, V1119, V1123, V1126, V1124, V1124, V1123, V1126, 0x0]
Exit stack: [V12, 0x141, V352, V1098, V1106, 0xdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c, V1108, V352, V1110, V1119, V1123, V1126, V1124, V1124, V1123, V1126, 0x0]

================================

Block 0xc29
[0xc29:0xc31]
---
Predecessors: [0xbc4, 0xc3a]
Successors: [0xc32, 0xc42]
---
0xc29 JUMPDEST
0xc2a DUP4
0xc2b DUP2
0xc2c LT
0xc2d ISZERO
0xc2e PUSH2 0xc42
0xc31 JUMPI
---
0xc29: JUMPDEST 
0xc2c: V1128 = LT S0 V1124
0xc2d: V1129 = ISZERO V1128
0xc2e: V1130 = 0xc42
0xc31: JUMPI 0xc42 V1129
---
Entry stack: [V12, 0x141, V352, V1098, V1106, 0xdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c, V1108, V352, V1110, V1119, V1123, V1126, V1124, V1124, V1123, V1126, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x141, V352, V1098, V1106, 0xdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c, V1108, V352, V1110, V1119, V1123, V1126, V1124, V1124, V1123, V1126, S0]

================================

Block 0xc32
[0xc32:0xc39]
---
Predecessors: [0xc29]
Successors: [0xc3a]
---
0xc32 DUP1
0xc33 DUP3
0xc34 ADD
0xc35 MLOAD
0xc36 DUP2
0xc37 DUP5
0xc38 ADD
0xc39 MSTORE
---
0xc34: V1131 = ADD V1126 S0
0xc35: V1132 = M[V1131]
0xc38: V1133 = ADD V1123 S0
0xc39: M[V1133] = V1132
---
Entry stack: [V12, 0x141, V352, V1098, V1106, 0xdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c, V1108, V352, V1110, V1119, V1123, V1126, V1124, V1124, V1123, V1126, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x141, V352, V1098, V1106, 0xdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c, V1108, V352, V1110, V1119, V1123, V1126, V1124, V1124, V1123, V1126, S0]

================================

Block 0xc3a
[0xc3a:0xc41]
---
Predecessors: [0xc32]
Successors: [0xc29]
---
0xc3a JUMPDEST
0xc3b PUSH1 0x20
0xc3d ADD
0xc3e PUSH2 0xc29
0xc41 JUMP
---
0xc3a: JUMPDEST 
0xc3b: V1134 = 0x20
0xc3d: V1135 = ADD 0x20 S0
0xc3e: V1136 = 0xc29
0xc41: JUMP 0xc29
---
Entry stack: [V12, 0x141, V352, V1098, V1106, 0xdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c, V1108, V352, V1110, V1119, V1123, V1126, V1124, V1124, V1123, V1126, S0]
Stack pops: 1
Stack additions: [V1135]
Exit stack: [V12, 0x141, V352, V1098, V1106, 0xdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c, V1108, V352, V1110, V1119, V1123, V1126, V1124, V1124, V1123, V1126, V1135]

================================

Block 0xc42
[0xc42:0xc55]
---
Predecessors: [0xc29]
Successors: [0xc56, 0xc6f]
---
0xc42 JUMPDEST
0xc43 POP
0xc44 POP
0xc45 POP
0xc46 POP
0xc47 SWAP1
0xc48 POP
0xc49 SWAP1
0xc4a DUP2
0xc4b ADD
0xc4c SWAP1
0xc4d PUSH1 0x1f
0xc4f AND
0xc50 DUP1
0xc51 ISZERO
0xc52 PUSH2 0xc6f
0xc55 JUMPI
---
0xc42: JUMPDEST 
0xc4b: V1137 = ADD V1124 V1123
0xc4d: V1138 = 0x1f
0xc4f: V1139 = AND 0x1f V1124
0xc51: V1140 = ISZERO V1139
0xc52: V1141 = 0xc6f
0xc55: JUMPI 0xc6f V1140
---
Entry stack: [V12, 0x141, V352, V1098, V1106, 0xdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c, V1108, V352, V1110, V1119, V1123, V1126, V1124, V1124, V1123, V1126, S0]
Stack pops: 7
Stack additions: [V1137, V1139]
Exit stack: [V12, 0x141, V352, V1098, V1106, 0xdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c, V1108, V352, V1110, V1119, V1137, V1139]

================================

Block 0xc56
[0xc56:0xc6e]
---
Predecessors: [0xc42]
Successors: [0xc6f]
---
0xc56 DUP1
0xc57 DUP3
0xc58 SUB
0xc59 DUP1
0xc5a MLOAD
0xc5b PUSH1 0x1
0xc5d DUP4
0xc5e PUSH1 0x20
0xc60 SUB
0xc61 PUSH2 0x100
0xc64 EXP
0xc65 SUB
0xc66 NOT
0xc67 AND
0xc68 DUP2
0xc69 MSTORE
0xc6a PUSH1 0x20
0xc6c ADD
0xc6d SWAP2
0xc6e POP
---
0xc58: V1142 = SUB V1137 V1139
0xc5a: V1143 = M[V1142]
0xc5b: V1144 = 0x1
0xc5e: V1145 = 0x20
0xc60: V1146 = SUB 0x20 V1139
0xc61: V1147 = 0x100
0xc64: V1148 = EXP 0x100 V1146
0xc65: V1149 = SUB V1148 0x1
0xc66: V1150 = NOT V1149
0xc67: V1151 = AND V1150 V1143
0xc69: M[V1142] = V1151
0xc6a: V1152 = 0x20
0xc6c: V1153 = ADD 0x20 V1142
---
Entry stack: [V12, 0x141, V352, V1098, V1106, 0xdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c, V1108, V352, V1110, V1119, V1137, V1139]
Stack pops: 2
Stack additions: [V1153, S0]
Exit stack: [V12, 0x141, V352, V1098, V1106, 0xdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c, V1108, V352, V1110, V1119, V1153, V1139]

================================

Block 0xc6f
[0xc6f:0xc7d]
---
Predecessors: [0xc42, 0xc56]
Successors: [0xc7e]
---
0xc6f JUMPDEST
0xc70 POP
0xc71 SWAP4
0xc72 POP
0xc73 POP
0xc74 POP
0xc75 POP
0xc76 PUSH1 0x40
0xc78 MLOAD
0xc79 DUP1
0xc7a SWAP2
0xc7b SUB
0xc7c SWAP1
0xc7d LOG3
---
0xc6f: JUMPDEST 
0xc76: V1154 = 0x40
0xc78: V1155 = M[0x40]
0xc7b: V1156 = SUB S1 V1155
0xc7d: LOG V1155 V1156 0xdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c V1106 V1098
---
Entry stack: [V12, 0x141, V352, V1098, V1106, 0xdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c, V1108, V352, V1110, V1119, S1, V1139]
Stack pops: 9
Stack additions: []
Exit stack: [V12, 0x141, V352]

================================

Block 0xc7e
[0xc7e:0xc7e]
---
Predecessors: [0xc6f]
Successors: [0xc7f]
---
0xc7e JUMPDEST
---
0xc7e: JUMPDEST 
---
Entry stack: [V12, 0x141, V352]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, V352]

================================

Block 0xc7f
[0xc7f:0xc81]
---
Predecessors: [0xc7e]
Successors: [0x141]
---
0xc7f JUMPDEST
0xc80 POP
0xc81 JUMP
---
0xc7f: JUMPDEST 
0xc81: JUMP 0x141
---
Entry stack: [V12, 0x141, V352]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xc82
[0xc82:0xc8b]
---
Predecessors: [0x64e, 0x6f0, 0x7d8]
Successors: [0xefc]
---
0xc82 JUMPDEST
0xc83 PUSH2 0xc8c
0xc86 DUP3
0xc87 DUP3
0xc88 PUSH2 0xefc
0xc8b JUMP
---
0xc82: JUMPDEST 
0xc83: V1157 = 0xc8c
0xc88: V1158 = 0xefc
0xc8b: JUMP 0xefc
---
Entry stack: [V12, 0x141, S4, S3, {0x65c, 0x6fa}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xc8c, S1, S0]
Exit stack: [V12, 0x141, S4, S3, {0x65c, 0x6fa}, S1, S0, 0xc8c, S1, S0]

================================

Block 0xc8c
[0xc8c:0xc95]
---
Predecessors: [0xfa4]
Successors: [0xc96, 0xcc9]
---
0xc8c JUMPDEST
0xc8d PUSH1 0x1
0xc8f DUP2
0xc90 EQ
0xc91 ISZERO
0xc92 PUSH2 0xcc9
0xc95 JUMPI
---
0xc8c: JUMPDEST 
0xc8d: V1159 = 0x1
0xc90: V1160 = EQ S0 0x1
0xc91: V1161 = ISZERO V1160
0xc92: V1162 = 0xcc9
0xc95: JUMPI 0xcc9 V1161
---
Entry stack: [V12, 0x141, S4, S3, {0x65c, 0x6fa}, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x141, S4, S3, {0x65c, 0x6fa}, S1, S0]

================================

Block 0xc96
[0xc96:0xcc8]
---
Predecessors: [0xc8c]
Successors: [0xd01]
---
0xc96 PUSH1 0x2
0xc98 SLOAD
0xc99 PUSH1 0xa
0xc9b SLOAD
0xc9c PUSH1 0x1
0xc9e PUSH1 0xa0
0xca0 PUSH1 0x2
0xca2 EXP
0xca3 SUB
0xca4 SWAP1
0xca5 SWAP2
0xca6 AND
0xca7 SWAP1
0xca8 DUP1
0xca9 ISZERO
0xcaa PUSH2 0x8fc
0xcad MUL
0xcae SWAP1
0xcaf PUSH1 0x40
0xcb1 MLOAD
0xcb2 PUSH1 0x0
0xcb4 PUSH1 0x40
0xcb6 MLOAD
0xcb7 DUP1
0xcb8 DUP4
0xcb9 SUB
0xcba DUP2
0xcbb DUP6
0xcbc DUP9
0xcbd DUP9
0xcbe CALL
0xcbf SWAP4
0xcc0 POP
0xcc1 POP
0xcc2 POP
0xcc3 POP
0xcc4 POP
0xcc5 PUSH2 0xd01
0xcc8 JUMP
---
0xc96: V1163 = 0x2
0xc98: V1164 = S[0x2]
0xc99: V1165 = 0xa
0xc9b: V1166 = S[0xa]
0xc9c: V1167 = 0x1
0xc9e: V1168 = 0xa0
0xca0: V1169 = 0x2
0xca2: V1170 = EXP 0x2 0xa0
0xca3: V1171 = SUB 0x10000000000000000000000000000000000000000 0x1
0xca6: V1172 = AND V1164 0xffffffffffffffffffffffffffffffffffffffff
0xca9: V1173 = ISZERO V1166
0xcaa: V1174 = 0x8fc
0xcad: V1175 = MUL 0x8fc V1173
0xcaf: V1176 = 0x40
0xcb1: V1177 = M[0x40]
0xcb2: V1178 = 0x0
0xcb4: V1179 = 0x40
0xcb6: V1180 = M[0x40]
0xcb9: V1181 = SUB V1177 V1180
0xcbe: V1182 = CALL V1175 V1172 V1166 V1180 V1181 V1180 0x0
0xcc5: V1183 = 0xd01
0xcc8: JUMP 0xd01
---
Entry stack: [V12, 0x141, S4, S3, {0x65c, 0x6fa}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S4, S3, {0x65c, 0x6fa}, S1, S0]

================================

Block 0xcc9
[0xcc9:0xcd2]
---
Predecessors: [0xc8c]
Successors: [0xcd3, 0xd01]
---
0xcc9 JUMPDEST
0xcca PUSH1 0x2
0xccc DUP2
0xccd EQ
0xcce ISZERO
0xccf PUSH2 0xd01
0xcd2 JUMPI
---
0xcc9: JUMPDEST 
0xcca: V1184 = 0x2
0xccd: V1185 = EQ S0 0x2
0xcce: V1186 = ISZERO V1185
0xccf: V1187 = 0xd01
0xcd2: JUMPI 0xd01 V1186
---
Entry stack: [V12, 0x141, S4, S3, {0x65c, 0x6fa}, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x141, S4, S3, {0x65c, 0x6fa}, S1, S0]

================================

Block 0xcd3
[0xcd3:0xd00]
---
Predecessors: [0xcc9]
Successors: [0xd01]
---
0xcd3 PUSH1 0x3
0xcd5 SLOAD
0xcd6 PUSH1 0xa
0xcd8 SLOAD
0xcd9 PUSH1 0x1
0xcdb PUSH1 0xa0
0xcdd PUSH1 0x2
0xcdf EXP
0xce0 SUB
0xce1 SWAP1
0xce2 SWAP2
0xce3 AND
0xce4 SWAP1
0xce5 DUP1
0xce6 ISZERO
0xce7 PUSH2 0x8fc
0xcea MUL
0xceb SWAP1
0xcec PUSH1 0x40
0xcee MLOAD
0xcef PUSH1 0x0
0xcf1 PUSH1 0x40
0xcf3 MLOAD
0xcf4 DUP1
0xcf5 DUP4
0xcf6 SUB
0xcf7 DUP2
0xcf8 DUP6
0xcf9 DUP9
0xcfa DUP9
0xcfb CALL
0xcfc POP
0xcfd POP
0xcfe POP
0xcff POP
0xd00 POP
---
0xcd3: V1188 = 0x3
0xcd5: V1189 = S[0x3]
0xcd6: V1190 = 0xa
0xcd8: V1191 = S[0xa]
0xcd9: V1192 = 0x1
0xcdb: V1193 = 0xa0
0xcdd: V1194 = 0x2
0xcdf: V1195 = EXP 0x2 0xa0
0xce0: V1196 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce3: V1197 = AND V1189 0xffffffffffffffffffffffffffffffffffffffff
0xce6: V1198 = ISZERO V1191
0xce7: V1199 = 0x8fc
0xcea: V1200 = MUL 0x8fc V1198
0xcec: V1201 = 0x40
0xcee: V1202 = M[0x40]
0xcef: V1203 = 0x0
0xcf1: V1204 = 0x40
0xcf3: V1205 = M[0x40]
0xcf6: V1206 = SUB V1202 V1205
0xcfb: V1207 = CALL V1200 V1197 V1191 V1205 V1206 V1205 0x0
---
Entry stack: [V12, 0x141, S4, S3, {0x65c, 0x6fa}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S4, S3, {0x65c, 0x6fa}, S1, S0]

================================

Block 0xd01
[0xd01:0xd01]
---
Predecessors: [0xc96, 0xcc9, 0xcd3]
Successors: [0xd02]
---
0xd01 JUMPDEST
---
0xd01: JUMPDEST 
---
Entry stack: [V12, 0x141, S4, S3, {0x65c, 0x6fa}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S4, S3, {0x65c, 0x6fa}, S1, S0]

================================

Block 0xd02
[0xd02:0xd07]
---
Predecessors: [0xd01]
Successors: [0xd08]
---
0xd02 JUMPDEST
0xd03 PUSH1 0x0
0xd05 PUSH1 0xa
0xd07 SSTORE
---
0xd02: JUMPDEST 
0xd03: V1208 = 0x0
0xd05: V1209 = 0xa
0xd07: S[0xa] = 0x0
---
Entry stack: [V12, 0x141, S4, S3, {0x65c, 0x6fa}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S4, S3, {0x65c, 0x6fa}, S1, S0]

================================

Block 0xd08
[0xd08:0xd0b]
---
Predecessors: [0xd02]
Successors: [0x65c, 0x6fa]
---
0xd08 JUMPDEST
0xd09 POP
0xd0a POP
0xd0b JUMP
---
0xd08: JUMPDEST 
0xd0b: JUMP {0x65c, 0x6fa}
---
Entry stack: [V12, 0x141, S4, S3, {0x65c, 0x6fa}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x141, S4, S3]

================================

Block 0xd0c
[0xd0c:0xd1b]
---
Predecessors: [0x99a, 0xb60]
Successors: [0xd1c]
---
0xd0c JUMPDEST
0xd0d PUSH1 0x9
0xd0f DUP1
0xd10 SLOAD
0xd11 PUSH1 0x3
0xd13 SWAP2
0xd14 SWAP1
0xd15 PUSH1 0xff
0xd17 NOT
0xd18 AND
0xd19 PUSH1 0x1
0xd1b DUP4
---
0xd0c: JUMPDEST 
0xd0d: V1210 = 0x9
0xd10: V1211 = S[0x9]
0xd11: V1212 = 0x3
0xd15: V1213 = 0xff
0xd17: V1214 = NOT 0xff
0xd18: V1215 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1211
0xd19: V1216 = 0x1
---
Entry stack: [V12, 0x141, S2, 0x551, S0]
Stack pops: 0
Stack additions: [0x3, 0x9, V1215, 0x1, 0x3]
Exit stack: [V12, 0x141, S2, 0x551, S0, 0x3, 0x9, V1215, 0x1, 0x3]

================================

Block 0xd1c
[0xd1c:0xd98]
---
Predecessors: [0xd0c]
Successors: [0xd99, 0xddf]
---
0xd1c JUMPDEST
0xd1d MUL
0xd1e OR
0xd1f SWAP1
0xd20 SSTORE
0xd21 POP
0xd22 PUSH1 0x0
0xd24 DUP1
0xd25 SLOAD
0xd26 PUSH1 0x1
0xd28 PUSH1 0xa0
0xd2a PUSH1 0x2
0xd2c EXP
0xd2d SUB
0xd2e AND
0xd2f SWAP1
0xd30 PUSH4 0xc13517e1
0xd35 SWAP1
0xd36 DUP4
0xd37 SWAP1
0xd38 PUSH1 0x2
0xd3a SWAP1
0xd3b PUSH1 0x6
0xd3d SWAP1
0xd3e PUSH1 0x40
0xd40 MLOAD
0xd41 PUSH1 0x20
0xd43 ADD
0xd44 MSTORE
0xd45 PUSH1 0x40
0xd47 MLOAD
0xd48 PUSH1 0xe0
0xd4a PUSH1 0x2
0xd4c EXP
0xd4d PUSH4 0xffffffff
0xd52 DUP7
0xd53 AND
0xd54 MUL
0xd55 DUP2
0xd56 MSTORE
0xd57 PUSH1 0xff
0xd59 DUP4
0xd5a AND
0xd5b PUSH1 0x4
0xd5d DUP3
0xd5e ADD
0xd5f SWAP1
0xd60 DUP2
0xd61 MSTORE
0xd62 PUSH1 0x40
0xd64 PUSH1 0x24
0xd66 DUP4
0xd67 ADD
0xd68 SWAP1
0xd69 DUP2
0xd6a MSTORE
0xd6b DUP4
0xd6c SLOAD
0xd6d PUSH1 0x2
0xd6f PUSH1 0x0
0xd71 NOT
0xd72 PUSH2 0x100
0xd75 PUSH1 0x1
0xd77 DUP5
0xd78 AND
0xd79 ISZERO
0xd7a MUL
0xd7b ADD
0xd7c SWAP1
0xd7d SWAP2
0xd7e AND
0xd7f DIV
0xd80 PUSH1 0x44
0xd82 DUP5
0xd83 ADD
0xd84 DUP2
0xd85 SWAP1
0xd86 MSTORE
0xd87 SWAP2
0xd88 SWAP3
0xd89 SWAP1
0xd8a SWAP2
0xd8b PUSH1 0x64
0xd8d SWAP1
0xd8e SWAP2
0xd8f ADD
0xd90 SWAP1
0xd91 DUP5
0xd92 SWAP1
0xd93 DUP1
0xd94 ISZERO
0xd95 PUSH2 0xddf
0xd98 JUMPI
---
0xd1c: JUMPDEST 
0xd1d: V1217 = MUL 0x3 0x1
0xd1e: V1218 = OR 0x3 V1215
0xd20: S[0x9] = V1218
0xd22: V1219 = 0x0
0xd25: V1220 = S[0x0]
0xd26: V1221 = 0x1
0xd28: V1222 = 0xa0
0xd2a: V1223 = 0x2
0xd2c: V1224 = EXP 0x2 0xa0
0xd2d: V1225 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd2e: V1226 = AND 0xffffffffffffffffffffffffffffffffffffffff V1220
0xd30: V1227 = 0xc13517e1
0xd38: V1228 = 0x2
0xd3b: V1229 = 0x6
0xd3e: V1230 = 0x40
0xd40: V1231 = M[0x40]
0xd41: V1232 = 0x20
0xd43: V1233 = ADD 0x20 V1231
0xd44: M[V1233] = 0x0
0xd45: V1234 = 0x40
0xd47: V1235 = M[0x40]
0xd48: V1236 = 0xe0
0xd4a: V1237 = 0x2
0xd4c: V1238 = EXP 0x2 0xe0
0xd4d: V1239 = 0xffffffff
0xd53: V1240 = AND 0xc13517e1 0xffffffff
0xd54: V1241 = MUL 0xc13517e1 0x100000000000000000000000000000000000000000000000000000000
0xd56: M[V1235] = 0xc13517e100000000000000000000000000000000000000000000000000000000
0xd57: V1242 = 0xff
0xd5a: V1243 = AND 0x2 0xff
0xd5b: V1244 = 0x4
0xd5e: V1245 = ADD V1235 0x4
0xd61: M[V1245] = 0x2
0xd62: V1246 = 0x40
0xd64: V1247 = 0x24
0xd67: V1248 = ADD V1235 0x24
0xd6a: M[V1248] = 0x40
0xd6c: V1249 = S[0x6]
0xd6d: V1250 = 0x2
0xd6f: V1251 = 0x0
0xd71: V1252 = NOT 0x0
0xd72: V1253 = 0x100
0xd75: V1254 = 0x1
0xd78: V1255 = AND V1249 0x1
0xd79: V1256 = ISZERO V1255
0xd7a: V1257 = MUL V1256 0x100
0xd7b: V1258 = ADD V1257 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xd7e: V1259 = AND V1249 V1258
0xd7f: V1260 = DIV V1259 0x2
0xd80: V1261 = 0x44
0xd83: V1262 = ADD V1235 0x44
0xd86: M[V1262] = V1260
0xd8b: V1263 = 0x64
0xd8f: V1264 = ADD V1235 0x64
0xd94: V1265 = ISZERO V1260
0xd95: V1266 = 0xddf
0xd98: JUMPI 0xddf V1265
---
Entry stack: [V12, 0x141, S7, 0x551, S5, 0x3, 0x9, V1215, 0x1, 0x3]
Stack pops: 6
Stack additions: [S5, V1226, 0xc13517e1, S5, 0x2, 0x6, V1245, V1248, V1264, 0x6, V1260]
Exit stack: [V12, 0x141, S7, 0x551, S5, V1226, 0xc13517e1, S5, 0x2, 0x6, V1245, V1248, V1264, 0x6, V1260]

================================

Block 0xd99
[0xd99:0xda0]
---
Predecessors: [0xd1c]
Successors: [0xda1, 0xdb4]
---
0xd99 DUP1
0xd9a PUSH1 0x1f
0xd9c LT
0xd9d PUSH2 0xdb4
0xda0 JUMPI
---
0xd9a: V1267 = 0x1f
0xd9c: V1268 = LT 0x1f V1260
0xd9d: V1269 = 0xdb4
0xda0: JUMPI 0xdb4 V1268
---
Entry stack: [V12, 0x141, S12, 0x551, S10, V1226, 0xc13517e1, S7, 0x2, 0x6, V1245, V1248, V1264, 0x6, V1260]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x141, S12, 0x551, S10, V1226, 0xc13517e1, S7, 0x2, 0x6, V1245, V1248, V1264, 0x6, V1260]

================================

Block 0xda1
[0xda1:0xdb3]
---
Predecessors: [0xd99]
Successors: [0xddf]
---
0xda1 PUSH2 0x100
0xda4 DUP1
0xda5 DUP4
0xda6 SLOAD
0xda7 DIV
0xda8 MUL
0xda9 DUP4
0xdaa MSTORE
0xdab SWAP2
0xdac PUSH1 0x20
0xdae ADD
0xdaf SWAP2
0xdb0 PUSH2 0xddf
0xdb3 JUMP
---
0xda1: V1270 = 0x100
0xda6: V1271 = S[0x6]
0xda7: V1272 = DIV V1271 0x100
0xda8: V1273 = MUL V1272 0x100
0xdaa: M[V1264] = V1273
0xdac: V1274 = 0x20
0xdae: V1275 = ADD 0x20 V1264
0xdb0: V1276 = 0xddf
0xdb3: JUMP 0xddf
---
Entry stack: [V12, 0x141, S12, 0x551, S10, V1226, 0xc13517e1, S7, 0x2, 0x6, V1245, V1248, V1264, 0x6, V1260]
Stack pops: 3
Stack additions: [V1275, S1, S0]
Exit stack: [V12, 0x141, S12, 0x551, S10, V1226, 0xc13517e1, S7, 0x2, 0x6, V1245, V1248, V1275, 0x6, V1260]

================================

Block 0xdb4
[0xdb4:0xdc1]
---
Predecessors: [0xd99]
Successors: [0xdc2]
---
0xdb4 JUMPDEST
0xdb5 DUP3
0xdb6 ADD
0xdb7 SWAP2
0xdb8 SWAP1
0xdb9 PUSH1 0x0
0xdbb MSTORE
0xdbc PUSH1 0x20
0xdbe PUSH1 0x0
0xdc0 SHA3
0xdc1 SWAP1
---
0xdb4: JUMPDEST 
0xdb6: V1277 = ADD V1264 V1260
0xdb9: V1278 = 0x0
0xdbb: M[0x0] = 0x6
0xdbc: V1279 = 0x20
0xdbe: V1280 = 0x0
0xdc0: V1281 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x141, S12, 0x551, S10, V1226, 0xc13517e1, S7, 0x2, 0x6, V1245, V1248, V1264, 0x6, V1260]
Stack pops: 3
Stack additions: [V1277, V1281, S2]
Exit stack: [V12, 0x141, S12, 0x551, S10, V1226, 0xc13517e1, S7, 0x2, 0x6, V1245, V1248, V1277, V1281, V1264]

================================

Block 0xdc2
[0xdc2:0xdd5]
---
Predecessors: [0xdb4, 0xdc2]
Successors: [0xdc2, 0xdd6]
---
0xdc2 JUMPDEST
0xdc3 DUP2
0xdc4 SLOAD
0xdc5 DUP2
0xdc6 MSTORE
0xdc7 SWAP1
0xdc8 PUSH1 0x1
0xdca ADD
0xdcb SWAP1
0xdcc PUSH1 0x20
0xdce ADD
0xdcf DUP1
0xdd0 DUP4
0xdd1 GT
0xdd2 PUSH2 0xdc2
0xdd5 JUMPI
---
0xdc2: JUMPDEST 
0xdc4: V1282 = S[S1]
0xdc6: M[S0] = V1282
0xdc8: V1283 = 0x1
0xdca: V1284 = ADD 0x1 S1
0xdcc: V1285 = 0x20
0xdce: V1286 = ADD 0x20 S0
0xdd1: V1287 = GT V1277 V1286
0xdd2: V1288 = 0xdc2
0xdd5: JUMPI 0xdc2 V1287
---
Entry stack: [V12, 0x141, S12, 0x551, S10, V1226, 0xc13517e1, S7, 0x2, 0x6, V1245, V1248, V1277, S1, S0]
Stack pops: 3
Stack additions: [S2, V1284, V1286]
Exit stack: [V12, 0x141, S12, 0x551, S10, V1226, 0xc13517e1, S7, 0x2, 0x6, V1245, V1248, V1277, V1284, V1286]

================================

Block 0xdd6
[0xdd6:0xdde]
---
Predecessors: [0xdc2]
Successors: [0xddf]
---
0xdd6 DUP3
0xdd7 SWAP1
0xdd8 SUB
0xdd9 PUSH1 0x1f
0xddb AND
0xddc DUP3
0xddd ADD
0xdde SWAP2
---
0xdd8: V1289 = SUB V1286 V1277
0xdd9: V1290 = 0x1f
0xddb: V1291 = AND 0x1f V1289
0xddd: V1292 = ADD V1277 V1291
---
Entry stack: [V12, 0x141, S12, 0x551, S10, V1226, 0xc13517e1, S7, 0x2, 0x6, V1245, V1248, V1277, V1284, V1286]
Stack pops: 3
Stack additions: [V1292, S1, S2]
Exit stack: [V12, 0x141, S12, 0x551, S10, V1226, 0xc13517e1, S7, 0x2, 0x6, V1245, V1248, V1292, V1284, V1277]

================================

Block 0xddf
[0xddf:0xdf9]
---
Predecessors: [0xd1c, 0xda1, 0xdd6]
Successors: [0xdfa, 0xdfe]
---
0xddf JUMPDEST
0xde0 POP
0xde1 POP
0xde2 SWAP4
0xde3 POP
0xde4 POP
0xde5 POP
0xde6 POP
0xde7 PUSH1 0x20
0xde9 PUSH1 0x40
0xdeb MLOAD
0xdec DUP1
0xded DUP4
0xdee SUB
0xdef DUP2
0xdf0 DUP6
0xdf1 DUP9
0xdf2 DUP1
0xdf3 EXTCODESIZE
0xdf4 ISZERO
0xdf5 ISZERO
0xdf6 PUSH2 0xdfe
0xdf9 JUMPI
---
0xddf: JUMPDEST 
0xde7: V1293 = 0x20
0xde9: V1294 = 0x40
0xdeb: V1295 = M[0x40]
0xdee: V1296 = SUB S2 V1295
0xdf3: V1297 = EXTCODESIZE V1226
0xdf4: V1298 = ISZERO V1297
0xdf5: V1299 = ISZERO V1298
0xdf6: V1300 = 0xdfe
0xdf9: JUMPI 0xdfe V1299
---
Entry stack: [V12, 0x141, S12, 0x551, S10, V1226, 0xc13517e1, S7, 0x2, 0x6, V1245, V1248, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S2, 0x20, V1295, V1296, V1295, S7, S9]
Exit stack: [V12, 0x141, S12, 0x551, S10, V1226, 0xc13517e1, S7, S2, 0x20, V1295, V1296, V1295, S7, V1226]

================================

Block 0xdfa
[0xdfa:0xdfd]
---
Predecessors: [0xddf]
Successors: []
---
0xdfa PUSH1 0x0
0xdfc DUP1
0xdfd REVERT
---
0xdfa: V1301 = 0x0
0xdfd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, S12, 0x551, S10, V1226, 0xc13517e1, S7, S6, 0x20, V1295, V1296, V1295, S1, V1226]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S12, 0x551, S10, V1226, 0xc13517e1, S7, S6, 0x20, V1295, V1296, V1295, S1, V1226]

================================

Block 0xdfe
[0xdfe:0xe0a]
---
Predecessors: [0xddf]
Successors: [0xe0b, 0xe0f]
---
0xdfe JUMPDEST
0xdff PUSH2 0x25ee
0xe02 GAS
0xe03 SUB
0xe04 CALL
0xe05 ISZERO
0xe06 ISZERO
0xe07 PUSH2 0xe0f
0xe0a JUMPI
---
0xdfe: JUMPDEST 
0xdff: V1302 = 0x25ee
0xe02: V1303 = GAS
0xe03: V1304 = SUB V1303 0x25ee
0xe04: V1305 = CALL V1304 V1226 S1 V1295 V1296 V1295 0x20
0xe05: V1306 = ISZERO V1305
0xe06: V1307 = ISZERO V1306
0xe07: V1308 = 0xe0f
0xe0a: JUMPI 0xe0f V1307
---
Entry stack: [V12, 0x141, S12, 0x551, S10, V1226, 0xc13517e1, S7, S6, 0x20, V1295, V1296, V1295, S1, V1226]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x141, S12, 0x551, S10, V1226, 0xc13517e1, S7, S6]

================================

Block 0xe0b
[0xe0b:0xe0e]
---
Predecessors: [0xdfe]
Successors: []
---
0xe0b PUSH1 0x0
0xe0d DUP1
0xe0e REVERT
---
0xe0b: V1309 = 0x0
0xe0e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, S6, 0x551, S4, V1226, 0xc13517e1, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S6, 0x551, S4, V1226, 0xc13517e1, S1, S0]

================================

Block 0xe0f
[0xe0f:0xea4]
---
Predecessors: [0xdfe]
Successors: [0xea5]
---
0xe0f JUMPDEST
0xe10 POP
0xe11 POP
0xe12 POP
0xe13 POP
0xe14 PUSH1 0x40
0xe16 MLOAD
0xe17 DUP1
0xe18 MLOAD
0xe19 PUSH1 0x8
0xe1b DUP2
0xe1c SWAP1
0xe1d SSTORE
0xe1e PUSH1 0x0
0xe20 SLOAD
0xe21 SWAP1
0xe22 SWAP2
0xe23 POP
0xe24 PUSH1 0x1
0xe26 PUSH1 0xa0
0xe28 PUSH1 0x2
0xe2a EXP
0xe2b SUB
0xe2c AND
0xe2d PUSH32 0x775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a12611
0xe4e PUSH1 0x40
0xe50 DUP1
0xe51 MLOAD
0xe52 SWAP1
0xe53 DUP2
0xe54 ADD
0xe55 PUSH1 0x40
0xe57 SWAP1
0xe58 DUP2
0xe59 MSTORE
0xe5a PUSH1 0x19
0xe5c DUP3
0xe5d MSTORE
0xe5e PUSH32 0x506172747920412077696e733b506172747920422077696e7300000000000000
0xe7f PUSH1 0x20
0xe81 DUP4
0xe82 ADD
0xe83 MSTORE
0xe84 MLOAD
0xe85 PUSH1 0x20
0xe87 DUP1
0xe88 DUP3
0xe89 MSTORE
0xe8a DUP2
0xe8b SWAP1
0xe8c DUP2
0xe8d ADD
0xe8e DUP4
0xe8f DUP2
0xe90 DUP2
0xe91 MLOAD
0xe92 DUP2
0xe93 MSTORE
0xe94 PUSH1 0x20
0xe96 ADD
0xe97 SWAP2
0xe98 POP
0xe99 DUP1
0xe9a MLOAD
0xe9b SWAP1
0xe9c PUSH1 0x20
0xe9e ADD
0xe9f SWAP1
0xea0 DUP1
0xea1 DUP4
0xea2 DUP4
0xea3 PUSH1 0x0
---
0xe0f: JUMPDEST 
0xe14: V1310 = 0x40
0xe16: V1311 = M[0x40]
0xe18: V1312 = M[V1311]
0xe19: V1313 = 0x8
0xe1d: S[0x8] = V1312
0xe1e: V1314 = 0x0
0xe20: V1315 = S[0x0]
0xe24: V1316 = 0x1
0xe26: V1317 = 0xa0
0xe28: V1318 = 0x2
0xe2a: V1319 = EXP 0x2 0xa0
0xe2b: V1320 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2c: V1321 = AND 0xffffffffffffffffffffffffffffffffffffffff V1315
0xe2d: V1322 = 0x775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a12611
0xe4e: V1323 = 0x40
0xe51: V1324 = M[0x40]
0xe54: V1325 = ADD V1324 0x40
0xe55: V1326 = 0x40
0xe59: M[0x40] = V1325
0xe5a: V1327 = 0x19
0xe5d: M[V1324] = 0x19
0xe5e: V1328 = 0x506172747920412077696e733b506172747920422077696e7300000000000000
0xe7f: V1329 = 0x20
0xe82: V1330 = ADD V1324 0x20
0xe83: M[V1330] = 0x506172747920412077696e733b506172747920422077696e7300000000000000
0xe84: V1331 = M[0x40]
0xe85: V1332 = 0x20
0xe89: M[V1331] = 0x20
0xe8d: V1333 = ADD V1331 0x20
0xe91: V1334 = M[V1324]
0xe93: M[V1333] = V1334
0xe94: V1335 = 0x20
0xe96: V1336 = ADD 0x20 V1333
0xe9a: V1337 = M[V1324]
0xe9c: V1338 = 0x20
0xe9e: V1339 = ADD 0x20 V1324
0xea3: V1340 = 0x0
---
Entry stack: [V12, 0x141, S6, 0x551, S4, V1226, 0xc13517e1, S1, S0]
Stack pops: 4
Stack additions: [V1312, V1321, 0x775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a12611, V1324, V1331, V1331, V1336, V1339, V1337, V1337, V1336, V1339, 0x0]
Exit stack: [V12, 0x141, S6, 0x551, S4, V1312, V1321, 0x775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a12611, V1324, V1331, V1331, V1336, V1339, V1337, V1337, V1336, V1339, 0x0]

================================

Block 0xea5
[0xea5:0xead]
---
Predecessors: [0xe0f, 0xeb6]
Successors: [0xeae, 0xebe]
---
0xea5 JUMPDEST
0xea6 DUP4
0xea7 DUP2
0xea8 LT
0xea9 ISZERO
0xeaa PUSH2 0xebe
0xead JUMPI
---
0xea5: JUMPDEST 
0xea8: V1341 = LT S0 V1337
0xea9: V1342 = ISZERO V1341
0xeaa: V1343 = 0xebe
0xead: JUMPI 0xebe V1342
---
Entry stack: [V12, 0x141, S15, 0x551, S13, V1312, V1321, 0x775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a12611, V1324, V1331, V1331, V1336, V1339, V1337, V1337, V1336, V1339, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x141, S15, 0x551, S13, V1312, V1321, 0x775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a12611, V1324, V1331, V1331, V1336, V1339, V1337, V1337, V1336, V1339, S0]

================================

Block 0xeae
[0xeae:0xeb5]
---
Predecessors: [0xea5]
Successors: [0xeb6]
---
0xeae DUP1
0xeaf DUP3
0xeb0 ADD
0xeb1 MLOAD
0xeb2 DUP2
0xeb3 DUP5
0xeb4 ADD
0xeb5 MSTORE
---
0xeb0: V1344 = ADD V1339 S0
0xeb1: V1345 = M[V1344]
0xeb4: V1346 = ADD V1336 S0
0xeb5: M[V1346] = V1345
---
Entry stack: [V12, 0x141, S15, 0x551, S13, V1312, V1321, 0x775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a12611, V1324, V1331, V1331, V1336, V1339, V1337, V1337, V1336, V1339, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x141, S15, 0x551, S13, V1312, V1321, 0x775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a12611, V1324, V1331, V1331, V1336, V1339, V1337, V1337, V1336, V1339, S0]

================================

Block 0xeb6
[0xeb6:0xebd]
---
Predecessors: [0xeae]
Successors: [0xea5]
---
0xeb6 JUMPDEST
0xeb7 PUSH1 0x20
0xeb9 ADD
0xeba PUSH2 0xea5
0xebd JUMP
---
0xeb6: JUMPDEST 
0xeb7: V1347 = 0x20
0xeb9: V1348 = ADD 0x20 S0
0xeba: V1349 = 0xea5
0xebd: JUMP 0xea5
---
Entry stack: [V12, 0x141, S15, 0x551, S13, V1312, V1321, 0x775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a12611, V1324, V1331, V1331, V1336, V1339, V1337, V1337, V1336, V1339, S0]
Stack pops: 1
Stack additions: [V1348]
Exit stack: [V12, 0x141, S15, 0x551, S13, V1312, V1321, 0x775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a12611, V1324, V1331, V1331, V1336, V1339, V1337, V1337, V1336, V1339, V1348]

================================

Block 0xebe
[0xebe:0xed1]
---
Predecessors: [0xea5]
Successors: [0xed2, 0xeeb]
---
0xebe JUMPDEST
0xebf POP
0xec0 POP
0xec1 POP
0xec2 POP
0xec3 SWAP1
0xec4 POP
0xec5 SWAP1
0xec6 DUP2
0xec7 ADD
0xec8 SWAP1
0xec9 PUSH1 0x1f
0xecb AND
0xecc DUP1
0xecd ISZERO
0xece PUSH2 0xeeb
0xed1 JUMPI
---
0xebe: JUMPDEST 
0xec7: V1350 = ADD V1337 V1336
0xec9: V1351 = 0x1f
0xecb: V1352 = AND 0x1f V1337
0xecd: V1353 = ISZERO V1352
0xece: V1354 = 0xeeb
0xed1: JUMPI 0xeeb V1353
---
Entry stack: [V12, 0x141, S15, 0x551, S13, V1312, V1321, 0x775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a12611, V1324, V1331, V1331, V1336, V1339, V1337, V1337, V1336, V1339, S0]
Stack pops: 7
Stack additions: [V1350, V1352]
Exit stack: [V12, 0x141, S15, 0x551, S13, V1312, V1321, 0x775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a12611, V1324, V1331, V1331, V1350, V1352]

================================

Block 0xed2
[0xed2:0xeea]
---
Predecessors: [0xebe]
Successors: [0xeeb]
---
0xed2 DUP1
0xed3 DUP3
0xed4 SUB
0xed5 DUP1
0xed6 MLOAD
0xed7 PUSH1 0x1
0xed9 DUP4
0xeda PUSH1 0x20
0xedc SUB
0xedd PUSH2 0x100
0xee0 EXP
0xee1 SUB
0xee2 NOT
0xee3 AND
0xee4 DUP2
0xee5 MSTORE
0xee6 PUSH1 0x20
0xee8 ADD
0xee9 SWAP2
0xeea POP
---
0xed4: V1355 = SUB V1350 V1352
0xed6: V1356 = M[V1355]
0xed7: V1357 = 0x1
0xeda: V1358 = 0x20
0xedc: V1359 = SUB 0x20 V1352
0xedd: V1360 = 0x100
0xee0: V1361 = EXP 0x100 V1359
0xee1: V1362 = SUB V1361 0x1
0xee2: V1363 = NOT V1362
0xee3: V1364 = AND V1363 V1356
0xee5: M[V1355] = V1364
0xee6: V1365 = 0x20
0xee8: V1366 = ADD 0x20 V1355
---
Entry stack: [V12, 0x141, S10, 0x551, S8, V1312, V1321, 0x775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a12611, V1324, V1331, V1331, V1350, V1352]
Stack pops: 2
Stack additions: [V1366, S0]
Exit stack: [V12, 0x141, S10, 0x551, S8, V1312, V1321, 0x775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a12611, V1324, V1331, V1331, V1366, V1352]

================================

Block 0xeeb
[0xeeb:0xef8]
---
Predecessors: [0xebe, 0xed2]
Successors: [0xef9]
---
0xeeb JUMPDEST
0xeec POP
0xeed SWAP3
0xeee POP
0xeef POP
0xef0 POP
0xef1 PUSH1 0x40
0xef3 MLOAD
0xef4 DUP1
0xef5 SWAP2
0xef6 SUB
0xef7 SWAP1
0xef8 LOG3
---
0xeeb: JUMPDEST 
0xef1: V1367 = 0x40
0xef3: V1368 = M[0x40]
0xef6: V1369 = SUB S1 V1368
0xef8: LOG V1368 V1369 0x775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a12611 V1321 V1312
---
Entry stack: [V12, 0x141, S10, 0x551, S8, V1312, V1321, 0x775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a12611, V1324, V1331, V1331, S1, V1352]
Stack pops: 8
Stack additions: []
Exit stack: [V12, 0x141, S10, 0x551, S8]

================================

Block 0xef9
[0xef9:0xefb]
---
Predecessors: [0xeeb]
Successors: [0x551]
---
0xef9 JUMPDEST
0xefa POP
0xefb JUMP
---
0xef9: JUMPDEST 
0xefb: JUMP 0x551
---
Entry stack: [V12, 0x141, S2, 0x551, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x141, S2]

================================

Block 0xefc
[0xefc:0xf05]
---
Predecessors: [0xc82]
Successors: [0xf06, 0xf0a]
---
0xefc JUMPDEST
0xefd PUSH1 0x8
0xeff SLOAD
0xf00 DUP3
0xf01 EQ
0xf02 PUSH2 0xf0a
0xf05 JUMPI
---
0xefc: JUMPDEST 
0xefd: V1370 = 0x8
0xeff: V1371 = S[0x8]
0xf01: V1372 = EQ S1 V1371
0xf02: V1373 = 0xf0a
0xf05: JUMPI 0xf0a V1372
---
Entry stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]

================================

Block 0xf06
[0xf06:0xf09]
---
Predecessors: [0xefc]
Successors: []
---
0xf06 PUSH1 0x0
0xf08 DUP1
0xf09 REVERT
---
0xf06: V1374 = 0x0
0xf09: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]

================================

Block 0xf0a
[0xf0a:0xf13]
---
Predecessors: [0xefc]
Successors: [0xf14, 0xf18]
---
0xf0a JUMPDEST
0xf0b PUSH1 0x2
0xf0d DUP2
0xf0e GT
0xf0f ISZERO
0xf10 PUSH2 0xf18
0xf13 JUMPI
---
0xf0a: JUMPDEST 
0xf0b: V1375 = 0x2
0xf0e: V1376 = GT S0 0x2
0xf0f: V1377 = ISZERO V1376
0xf10: V1378 = 0xf18
0xf13: JUMPI 0xf18 V1377
---
Entry stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]

================================

Block 0xf14
[0xf14:0xf17]
---
Predecessors: [0xf0a]
Successors: []
---
0xf14 PUSH1 0x0
0xf16 DUP1
0xf17 REVERT
---
0xf14: V1379 = 0x0
0xf17: REVERT 0x0 0x0
---
Entry stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]

================================

Block 0xf18
[0xf18:0xf21]
---
Predecessors: [0xf0a]
Successors: [0xf22, 0xf55]
---
0xf18 JUMPDEST
0xf19 PUSH1 0x1
0xf1b DUP2
0xf1c EQ
0xf1d ISZERO
0xf1e PUSH2 0xf55
0xf21 JUMPI
---
0xf18: JUMPDEST 
0xf19: V1380 = 0x1
0xf1c: V1381 = EQ S0 0x1
0xf1d: V1382 = ISZERO V1381
0xf1e: V1383 = 0xf55
0xf21: JUMPI 0xf55 V1382
---
Entry stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]

================================

Block 0xf22
[0xf22:0xf54]
---
Predecessors: [0xf18]
Successors: [0xf8d]
---
0xf22 PUSH1 0x2
0xf24 SLOAD
0xf25 PUSH1 0x4
0xf27 SLOAD
0xf28 PUSH1 0x1
0xf2a PUSH1 0xa0
0xf2c PUSH1 0x2
0xf2e EXP
0xf2f SUB
0xf30 SWAP1
0xf31 SWAP2
0xf32 AND
0xf33 SWAP1
0xf34 DUP1
0xf35 ISZERO
0xf36 PUSH2 0x8fc
0xf39 MUL
0xf3a SWAP1
0xf3b PUSH1 0x40
0xf3d MLOAD
0xf3e PUSH1 0x0
0xf40 PUSH1 0x40
0xf42 MLOAD
0xf43 DUP1
0xf44 DUP4
0xf45 SUB
0xf46 DUP2
0xf47 DUP6
0xf48 DUP9
0xf49 DUP9
0xf4a CALL
0xf4b SWAP4
0xf4c POP
0xf4d POP
0xf4e POP
0xf4f POP
0xf50 POP
0xf51 PUSH2 0xf8d
0xf54 JUMP
---
0xf22: V1384 = 0x2
0xf24: V1385 = S[0x2]
0xf25: V1386 = 0x4
0xf27: V1387 = S[0x4]
0xf28: V1388 = 0x1
0xf2a: V1389 = 0xa0
0xf2c: V1390 = 0x2
0xf2e: V1391 = EXP 0x2 0xa0
0xf2f: V1392 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf32: V1393 = AND V1385 0xffffffffffffffffffffffffffffffffffffffff
0xf35: V1394 = ISZERO V1387
0xf36: V1395 = 0x8fc
0xf39: V1396 = MUL 0x8fc V1394
0xf3b: V1397 = 0x40
0xf3d: V1398 = M[0x40]
0xf3e: V1399 = 0x0
0xf40: V1400 = 0x40
0xf42: V1401 = M[0x40]
0xf45: V1402 = SUB V1398 V1401
0xf4a: V1403 = CALL V1396 V1393 V1387 V1401 V1402 V1401 0x0
0xf51: V1404 = 0xf8d
0xf54: JUMP 0xf8d
---
Entry stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]

================================

Block 0xf55
[0xf55:0xf5e]
---
Predecessors: [0xf18]
Successors: [0xf5f, 0xf8d]
---
0xf55 JUMPDEST
0xf56 PUSH1 0x2
0xf58 DUP2
0xf59 EQ
0xf5a ISZERO
0xf5b PUSH2 0xf8d
0xf5e JUMPI
---
0xf55: JUMPDEST 
0xf56: V1405 = 0x2
0xf59: V1406 = EQ S0 0x2
0xf5a: V1407 = ISZERO V1406
0xf5b: V1408 = 0xf8d
0xf5e: JUMPI 0xf8d V1407
---
Entry stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]

================================

Block 0xf5f
[0xf5f:0xf8c]
---
Predecessors: [0xf55]
Successors: [0xf8d]
---
0xf5f PUSH1 0x3
0xf61 SLOAD
0xf62 PUSH1 0x5
0xf64 SLOAD
0xf65 PUSH1 0x1
0xf67 PUSH1 0xa0
0xf69 PUSH1 0x2
0xf6b EXP
0xf6c SUB
0xf6d SWAP1
0xf6e SWAP2
0xf6f AND
0xf70 SWAP1
0xf71 DUP1
0xf72 ISZERO
0xf73 PUSH2 0x8fc
0xf76 MUL
0xf77 SWAP1
0xf78 PUSH1 0x40
0xf7a MLOAD
0xf7b PUSH1 0x0
0xf7d PUSH1 0x40
0xf7f MLOAD
0xf80 DUP1
0xf81 DUP4
0xf82 SUB
0xf83 DUP2
0xf84 DUP6
0xf85 DUP9
0xf86 DUP9
0xf87 CALL
0xf88 POP
0xf89 POP
0xf8a POP
0xf8b POP
0xf8c POP
---
0xf5f: V1409 = 0x3
0xf61: V1410 = S[0x3]
0xf62: V1411 = 0x5
0xf64: V1412 = S[0x5]
0xf65: V1413 = 0x1
0xf67: V1414 = 0xa0
0xf69: V1415 = 0x2
0xf6b: V1416 = EXP 0x2 0xa0
0xf6c: V1417 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf6f: V1418 = AND V1410 0xffffffffffffffffffffffffffffffffffffffff
0xf72: V1419 = ISZERO V1412
0xf73: V1420 = 0x8fc
0xf76: V1421 = MUL 0x8fc V1419
0xf78: V1422 = 0x40
0xf7a: V1423 = M[0x40]
0xf7b: V1424 = 0x0
0xf7d: V1425 = 0x40
0xf7f: V1426 = M[0x40]
0xf82: V1427 = SUB V1423 V1426
0xf87: V1428 = CALL V1421 V1418 V1412 V1426 V1427 V1426 0x0
---
Entry stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]

================================

Block 0xf8d
[0xf8d:0xf8d]
---
Predecessors: [0xf22, 0xf55, 0xf5f]
Successors: [0xf8e]
---
0xf8d JUMPDEST
---
0xf8d: JUMPDEST 
---
Entry stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]

================================

Block 0xf8e
[0xf8e:0xf9d]
---
Predecessors: [0xf8d]
Successors: [0xf9e]
---
0xf8e JUMPDEST
0xf8f PUSH1 0x9
0xf91 DUP1
0xf92 SLOAD
0xf93 PUSH1 0x4
0xf95 SWAP2
0xf96 SWAP1
0xf97 PUSH1 0xff
0xf99 NOT
0xf9a AND
0xf9b PUSH1 0x1
0xf9d DUP4
---
0xf8e: JUMPDEST 
0xf8f: V1429 = 0x9
0xf92: V1430 = S[0x9]
0xf93: V1431 = 0x4
0xf97: V1432 = 0xff
0xf99: V1433 = NOT 0xff
0xf9a: V1434 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1430
0xf9b: V1435 = 0x1
---
Entry stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]
Stack pops: 0
Stack additions: [0x4, 0x9, V1434, 0x1, 0x4]
Exit stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0, 0x4, 0x9, V1434, 0x1, 0x4]

================================

Block 0xf9e
[0xf9e:0xfa3]
---
Predecessors: [0xf8e]
Successors: [0xfa4]
---
0xf9e JUMPDEST
0xf9f MUL
0xfa0 OR
0xfa1 SWAP1
0xfa2 SSTORE
0xfa3 POP
---
0xf9e: JUMPDEST 
0xf9f: V1436 = MUL 0x4 0x1
0xfa0: V1437 = OR 0x4 V1434
0xfa2: S[0x9] = V1437
---
Entry stack: [V12, 0x141, S12, S11, {0x65c, 0x6fa}, S9, S8, 0xc8c, S6, S5, 0x4, 0x9, V1434, 0x1, 0x4]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x141, S12, S11, {0x65c, 0x6fa}, S9, S8, 0xc8c, S6, S5]

================================

Block 0xfa4
[0xfa4:0xfa7]
---
Predecessors: [0xf9e]
Successors: [0xc8c]
---
0xfa4 JUMPDEST
0xfa5 POP
0xfa6 POP
0xfa7 JUMP
---
0xfa4: JUMPDEST 
0xfa7: JUMP 0xc8c
---
Entry stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3, 0xc8c, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x141, S7, S6, {0x65c, 0x6fa}, S4, S3]

================================

Block 0xfa8
[0xfa8:0xfd6]
---
Predecessors: []
Successors: []
---
0xfa8 STOP
0xfa9 LOG1
0xfaa PUSH6 0x627a7a723058
0xfb1 SHA3
0xfb2 MISSING 0x2f
0xfb3 EXTCODEHASH
0xfb4 ADDMOD
0xfb5 NOT
0xfb6 MISSING 0xb0
0xfb7 SDIV
0xfb8 SWAP14
0xfb9 SELFDESTRUCT
0xfba MISSING 0xe0
0xfbb LOG4
0xfbc MISSING 0x4b
0xfbd MISSING 0xc
0xfbe MISSING 0xce
0xfbf SWAP14
0xfc0 PUSH22 0xd6e386840b11832ca387b4966a1f5b5a2e0029
---
0xfa8: STOP 
0xfa9: LOG S0 S1 S2
0xfaa: V1438 = 0x627a7a723058
0xfb1: V1439 = SHA3 0x627a7a723058 S3
0xfb2: MISSING 0x2f
0xfb3: V1440 = EXTCODEHASH S0
0xfb4: V1441 = ADDMOD V1440 S1 S2
0xfb5: V1442 = NOT V1441
0xfb6: MISSING 0xb0
0xfb7: V1443 = SDIV S0 S1
0xfb9: SELFDESTRUCT S15
0xfba: MISSING 0xe0
0xfbb: LOG S0 S1 S2 S3 S4 S5
0xfbc: MISSING 0x4b
0xfbd: MISSING 0xc
0xfbe: MISSING 0xce
0xfc0: V1444 = 0xd6e386840b11832ca387b4966a1f5b5a2e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1439, V1442, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V1443, 0xd6e386840b11832ca387b4966a1f5b5a2e0029, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x69fae2a
Entry block: 0xfb
Exit block: 0x141
Body: 0xfb, 0x141, 0x449, 0x461, 0x474, 0x47b, 0x47f, 0x4d7, 0x4e0, 0x4e8, 0x4f0, 0x504, 0x51d, 0x537, 0x53b, 0x548, 0x54c, 0x551, 0x552

Function 1:
Public function signature: 0xc7ac7b6
Entry block: 0x143
Exit block: 0x1c0
Body: 0x143, 0x14a, 0x14e, 0x156, 0x17a, 0x183, 0x18b, 0x193, 0x1a7, 0x1c0, 0x555, 0x5a5, 0x5ad, 0x5c0, 0x5ce, 0x5e2, 0x5eb

Function 2:
Public function signature: 0x10e1d8ca
Entry block: 0x1ce
Exit block: 0x1e1
Body: 0x1ce, 0x1d5, 0x1d9, 0x1e1, 0x5f3

Function 3:
Public function signature: 0x19e2641e
Entry block: 0x1fd
Exit block: 0x141
Body: 0x141, 0x1fd, 0x204, 0x208, 0x602, 0x619, 0x61d, 0x620, 0x630, 0x631, 0x637, 0x63b, 0x64a, 0x64e, 0x65c, 0x65d, 0x65e

Function 4:
Public function signature: 0x1b9265b8
Entry block: 0x212
Exit block: 0x141
Body: 0x141, 0x212, 0x219, 0x21d, 0x660, 0x677, 0x67b, 0x6b0, 0x6b4, 0x6ba, 0x6bb

Function 5:
Public function signature: 0x200d2ed2
Entry block: 0x227
Exit block: 0x24a
Body: 0x227, 0x22e, 0x232, 0x23a, 0x249, 0x24a, 0x6bd

Function 6:
Public function signature: 0x29040113
Entry block: 0x25e
Exit block: 0x1e1
Body: 0x1e1, 0x25e, 0x265, 0x269, 0x6c6

Function 7:
Public function signature: 0x311a6c56
Entry block: 0x28d
Exit block: 0x141
Body: 0x141, 0x28d, 0x294, 0x298, 0x6d5, 0x6ec, 0x6f0, 0x6fa, 0x6fb, 0x6fc

Function 8:
Public function signature: 0x4a44c2e4
Entry block: 0x2a8
Exit block: 0x141
Body: 0x141, 0x2a8, 0x2af, 0x2b3, 0x700, 0x717, 0x71b, 0x726, 0x72a, 0x759, 0x75d, 0x767, 0x768

Function 9:
Public function signature: 0x4b40c974
Entry block: 0x2c0
Exit block: 0x2d3
Body: 0x2c0, 0x2c7, 0x2cb, 0x2d3, 0x76b

Function 10:
Public function signature: 0x512491f1
Entry block: 0x2e5
Exit block: 0x2d3
Body: 0x2d3, 0x2e5, 0x2ec, 0x2f0, 0x771

Function 11:
Public function signature: 0x6cc6cde1
Entry block: 0x30a
Exit block: 0x1e1
Body: 0x1e1, 0x30a, 0x311, 0x315, 0x777

Function 12:
Public function signature: 0x70dea79a
Entry block: 0x339
Exit block: 0x2d3
Body: 0x2d3, 0x339, 0x340, 0x344, 0x786

Function 13:
Public function signature: 0x853c80ce
Entry block: 0x35e
Exit block: 0x141
Body: 0x141, 0x35e, 0x365, 0x369, 0x65c, 0x65d, 0x65e, 0x78c, 0x7a3, 0x7a7, 0x7aa, 0x7ba, 0x7bb, 0x7c1, 0x7c5, 0x7d4, 0x7d8

Function 14:
Public function signature: 0x8f71a265
Entry block: 0x373
Exit block: 0x2d3
Body: 0x2d3, 0x373, 0x37a, 0x37e, 0x7ea

Function 15:
Public function signature: 0xa0109631
Entry block: 0x398
Exit block: 0x981
Body: 0x141, 0x398, 0x551, 0x552, 0x7f0, 0x80a, 0x80e, 0x876, 0x87e, 0x891, 0x89f, 0x8b3, 0x8bc, 0x8d7, 0x8db, 0x8e8, 0x8ec, 0x90a, 0x90e, 0x911, 0x921, 0x922, 0x928, 0x92c, 0x93c, 0x94a, 0x981, 0x982, 0x99a

Function 16:
Public function signature: 0xaa8c217c
Entry block: 0x3a2
Exit block: 0x2d3
Body: 0x2d3, 0x3a2, 0x3a9, 0x3ad, 0x9a9

Function 17:
Public function signature: 0xb0a1e2b4
Entry block: 0x3c7
Exit block: 0x2d3
Body: 0x2d3, 0x3c7, 0x3ce, 0x3d2, 0x9af

Function 18:
Public function signature: 0xb1bcce3a
Entry block: 0x3ec
Exit block: 0x141
Body: 0x141, 0x3ec, 0x551, 0x552, 0x982, 0x99a, 0x9b5, 0x9cf, 0x9d3, 0xa3b, 0xa43, 0xa56, 0xa64, 0xa78, 0xa81, 0xa9c, 0xaa0, 0xaad, 0xab1, 0xacf, 0xad3, 0xad6, 0xae6, 0xae7, 0xaed, 0xaf1, 0xb01, 0xb10, 0xb47

Function 19:
Public function signature: 0xbac91e2e
Entry block: 0x3f6
Exit block: 0x141
Body: 0x141, 0x3f6, 0x3fd, 0x401, 0xb6f, 0xb87, 0xb9a, 0xba1, 0xba5, 0xba8, 0xbb8, 0xbb9, 0xbc0, 0xbc4, 0xc29, 0xc32, 0xc3a, 0xc42, 0xc56, 0xc6f, 0xc7e, 0xc7f

Function 20:
Public fallback function
Entry block: 0xf6
Exit block: 0xf6
Body: 0xf6

Function 21:
Private function
Entry block: 0xc82
Exit block: 0xd08
Body: 0xc82, 0xc8c, 0xc96, 0xcc9, 0xcd3, 0xd01, 0xd02, 0xd08, 0xefc, 0xf0a, 0xf18, 0xf22, 0xf55, 0xf5f, 0xf8d, 0xf8e, 0xf9e, 0xfa4

Function 22:
Private function
Entry block: 0xd0c
Exit block: 0xef9
Body: 0xd0c, 0xd1c, 0xd99, 0xda1, 0xdb4, 0xdc2, 0xdd6, 0xddf, 0xdfe, 0xe0f, 0xea5, 0xeae, 0xeb6, 0xebe, 0xed2, 0xeeb, 0xef9

