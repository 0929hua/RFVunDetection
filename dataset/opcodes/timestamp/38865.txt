Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7d
0xa: JUMPI 0x7d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x18c]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x3a0d68f
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x18c
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x3a0d68f
0x20: V14 = EQ V12 0x3a0d68f
0x21: V15 = 0x18c
0x24: JUMPI 0x18c V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x1b1]
---
0x25 DUP1
0x26 PUSH4 0x38af3eed
0x2b EQ
0x2c PUSH2 0x1b1
0x2f JUMPI
---
0x26: V16 = 0x38af3eed
0x2b: V17 = EQ 0x38af3eed V12
0x2c: V18 = 0x1b1
0x2f: JUMPI 0x1b1 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x1e0]
---
0x30 DUP1
0x31 PUSH4 0x78f45340
0x36 EQ
0x37 PUSH2 0x1e0
0x3a JUMPI
---
0x31: V19 = 0x78f45340
0x36: V20 = EQ 0x78f45340 V12
0x37: V21 = 0x1e0
0x3a: JUMPI 0x1e0 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x205]
---
0x3b DUP1
0x3c PUSH4 0x79061e96
0x41 EQ
0x42 PUSH2 0x205
0x45 JUMPI
---
0x3c: V22 = 0x79061e96
0x41: V23 = EQ 0x79061e96 V12
0x42: V24 = 0x205
0x45: JUMPI 0x205 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x22c]
---
0x46 DUP1
0x47 PUSH4 0xa94510ca
0x4c EQ
0x4d PUSH2 0x22c
0x50 JUMPI
---
0x47: V25 = 0xa94510ca
0x4c: V26 = EQ 0xa94510ca V12
0x4d: V27 = 0x22c
0x50: JUMPI 0x22c V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x241]
---
0x51 DUP1
0x52 PUSH4 0xbd865d29
0x57 EQ
0x58 PUSH2 0x241
0x5b JUMPI
---
0x52: V28 = 0xbd865d29
0x57: V29 = EQ 0xbd865d29 V12
0x58: V30 = 0x241
0x5b: JUMPI 0x241 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x256]
---
0x5c DUP1
0x5d PUSH4 0xbd9215f4
0x62 EQ
0x63 PUSH2 0x256
0x66 JUMPI
---
0x5d: V31 = 0xbd9215f4
0x62: V32 = EQ 0xbd9215f4 V12
0x63: V33 = 0x256
0x66: JUMPI 0x256 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x285]
---
0x67 DUP1
0x68 PUSH4 0xcf1259d8
0x6d EQ
0x6e PUSH2 0x285
0x71 JUMPI
---
0x68: V34 = 0xcf1259d8
0x6d: V35 = EQ 0xcf1259d8 V12
0x6e: V36 = 0x285
0x71: JUMPI 0x285 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x2b4]
---
0x72 DUP1
0x73 PUSH4 0xe5c60091
0x78 EQ
0x79 PUSH2 0x2b4
0x7c JUMPI
---
0x73: V37 = 0xe5c60091
0x78: V38 = EQ 0xe5c60091 V12
0x79: V39 = 0x2b4
0x7c: JUMPI 0x2b4 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x0, 0x72]
Successors: [0x81]
---
0x7d JUMPDEST
0x7e PUSH2 0x18a
---
0x7d: JUMPDEST 
0x7e: V40 = 0x18a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18a]
Exit stack: [V12, 0x18a]

================================

Block 0x81
[0x81:0x8d]
---
Predecessors: [0x7d]
Successors: [0x8e, 0x92]
---
0x81 JUMPDEST
0x82 PUSH1 0x3
0x84 SLOAD
0x85 PUSH1 0x0
0x87 SWAP1
0x88 TIMESTAMP
0x89 LT
0x8a PUSH2 0x92
0x8d JUMPI
---
0x81: JUMPDEST 
0x82: V41 = 0x3
0x84: V42 = S[0x3]
0x85: V43 = 0x0
0x88: V44 = TIMESTAMP
0x89: V45 = LT V44 V42
0x8a: V46 = 0x92
0x8d: JUMPI 0x92 V45
---
Entry stack: [V12, 0x18a]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x18a, 0x0]

================================

Block 0x8e
[0x8e:0x91]
---
Predecessors: [0x81]
Successors: []
---
0x8e PUSH1 0x0
0x90 DUP1
0x91 REVERT
---
0x8e: V47 = 0x0
0x91: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, 0x0]

================================

Block 0x92
[0x92:0x9b]
---
Predecessors: [0x81]
Successors: [0x9c, 0xa0]
---
0x92 JUMPDEST
0x93 PUSH1 0x5
0x95 SLOAD
0x96 CALLVALUE
0x97 GT
0x98 PUSH2 0xa0
0x9b JUMPI
---
0x92: JUMPDEST 
0x93: V48 = 0x5
0x95: V49 = S[0x5]
0x96: V50 = CALLVALUE
0x97: V51 = GT V50 V49
0x98: V52 = 0xa0
0x9b: JUMPI 0xa0 V51
---
Entry stack: [V12, 0x18a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, 0x0]

================================

Block 0x9c
[0x9c:0x9f]
---
Predecessors: [0x92]
Successors: []
---
0x9c PUSH1 0x0
0x9e DUP1
0x9f REVERT
---
0x9c: V53 = 0x0
0x9f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, 0x0]

================================

Block 0xa0
[0xa0:0xf6]
---
Predecessors: [0x92]
Successors: [0xf7, 0xfb]
---
0xa0 JUMPDEST
0xa1 PUSH1 0x0
0xa3 DUP1
0xa4 SLOAD
0xa5 PUSH1 0x1
0xa7 PUSH1 0xa0
0xa9 PUSH1 0x2
0xab EXP
0xac SUB
0xad AND
0xae SWAP1
0xaf PUSH4 0x70a08231
0xb4 SWAP1
0xb5 ADDRESS
0xb6 SWAP1
0xb7 PUSH1 0x40
0xb9 MLOAD
0xba PUSH1 0x20
0xbc ADD
0xbd MSTORE
0xbe PUSH1 0x40
0xc0 MLOAD
0xc1 PUSH1 0xe0
0xc3 PUSH1 0x2
0xc5 EXP
0xc6 PUSH4 0xffffffff
0xcb DUP5
0xcc AND
0xcd MUL
0xce DUP2
0xcf MSTORE
0xd0 PUSH1 0x1
0xd2 PUSH1 0xa0
0xd4 PUSH1 0x2
0xd6 EXP
0xd7 SUB
0xd8 SWAP1
0xd9 SWAP2
0xda AND
0xdb PUSH1 0x4
0xdd DUP3
0xde ADD
0xdf MSTORE
0xe0 PUSH1 0x24
0xe2 ADD
0xe3 PUSH1 0x20
0xe5 PUSH1 0x40
0xe7 MLOAD
0xe8 DUP1
0xe9 DUP4
0xea SUB
0xeb DUP2
0xec PUSH1 0x0
0xee DUP8
0xef DUP1
0xf0 EXTCODESIZE
0xf1 ISZERO
0xf2 ISZERO
0xf3 PUSH2 0xfb
0xf6 JUMPI
---
0xa0: JUMPDEST 
0xa1: V54 = 0x0
0xa4: V55 = S[0x0]
0xa5: V56 = 0x1
0xa7: V57 = 0xa0
0xa9: V58 = 0x2
0xab: V59 = EXP 0x2 0xa0
0xac: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xaf: V62 = 0x70a08231
0xb5: V63 = ADDRESS
0xb7: V64 = 0x40
0xb9: V65 = M[0x40]
0xba: V66 = 0x20
0xbc: V67 = ADD 0x20 V65
0xbd: M[V67] = 0x0
0xbe: V68 = 0x40
0xc0: V69 = M[0x40]
0xc1: V70 = 0xe0
0xc3: V71 = 0x2
0xc5: V72 = EXP 0x2 0xe0
0xc6: V73 = 0xffffffff
0xcc: V74 = AND 0x70a08231 0xffffffff
0xcd: V75 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xcf: M[V69] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xd0: V76 = 0x1
0xd2: V77 = 0xa0
0xd4: V78 = 0x2
0xd6: V79 = EXP 0x2 0xa0
0xd7: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xda: V81 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0xdb: V82 = 0x4
0xde: V83 = ADD V69 0x4
0xdf: M[V83] = V81
0xe0: V84 = 0x24
0xe2: V85 = ADD 0x24 V69
0xe3: V86 = 0x20
0xe5: V87 = 0x40
0xe7: V88 = M[0x40]
0xea: V89 = SUB V85 V88
0xec: V90 = 0x0
0xf0: V91 = EXTCODESIZE V61
0xf1: V92 = ISZERO V91
0xf2: V93 = ISZERO V92
0xf3: V94 = 0xfb
0xf6: JUMPI 0xfb V93
---
Entry stack: [V12, 0x18a, 0x0]
Stack pops: 0
Stack additions: [V61, 0x70a08231, V85, 0x20, V88, V89, V88, 0x0, V61]
Exit stack: [V12, 0x18a, 0x0, V61, 0x70a08231, V85, 0x20, V88, V89, V88, 0x0, V61]

================================

Block 0xf7
[0xf7:0xfa]
---
Predecessors: [0xa0]
Successors: []
---
0xf7 PUSH1 0x0
0xf9 DUP1
0xfa REVERT
---
0xf7: V95 = 0x0
0xfa: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18a, 0x0, V61, 0x70a08231, V85, 0x20, V88, V89, V88, 0x0, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, 0x0, V61, 0x70a08231, V85, 0x20, V88, V89, V88, 0x0, V61]

================================

Block 0xfb
[0xfb:0x107]
---
Predecessors: [0xa0]
Successors: [0x108, 0x10c]
---
0xfb JUMPDEST
0xfc PUSH2 0x2c6
0xff GAS
0x100 SUB
0x101 CALL
0x102 ISZERO
0x103 ISZERO
0x104 PUSH2 0x10c
0x107 JUMPI
---
0xfb: JUMPDEST 
0xfc: V96 = 0x2c6
0xff: V97 = GAS
0x100: V98 = SUB V97 0x2c6
0x101: V99 = CALL V98 V61 0x0 V88 V89 V88 0x20
0x102: V100 = ISZERO V99
0x103: V101 = ISZERO V100
0x104: V102 = 0x10c
0x107: JUMPI 0x10c V101
---
Entry stack: [V12, 0x18a, 0x0, V61, 0x70a08231, V85, 0x20, V88, V89, V88, 0x0, V61]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x18a, 0x0, V61, 0x70a08231, V85]

================================

Block 0x108
[0x108:0x10b]
---
Predecessors: [0xfb]
Successors: []
---
0x108 PUSH1 0x0
0x10a DUP1
0x10b REVERT
---
0x108: V103 = 0x0
0x10b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18a, 0x0, V61, 0x70a08231, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, 0x0, V61, 0x70a08231, V85]

================================

Block 0x10c
[0x10c:0x11f]
---
Predecessors: [0xfb]
Successors: [0x120, 0x124]
---
0x10c JUMPDEST
0x10d POP
0x10e POP
0x10f POP
0x110 PUSH1 0x40
0x112 MLOAD
0x113 DUP1
0x114 MLOAD
0x115 SWAP2
0x116 POP
0x117 POP
0x118 PUSH1 0x0
0x11a DUP2
0x11b GT
0x11c PUSH2 0x124
0x11f JUMPI
---
0x10c: JUMPDEST 
0x110: V104 = 0x40
0x112: V105 = M[0x40]
0x114: V106 = M[V105]
0x118: V107 = 0x0
0x11b: V108 = GT V106 0x0
0x11c: V109 = 0x124
0x11f: JUMPI 0x124 V108
---
Entry stack: [V12, 0x18a, 0x0, V61, 0x70a08231, V85]
Stack pops: 4
Stack additions: [V106]
Exit stack: [V12, 0x18a, V106]

================================

Block 0x120
[0x120:0x123]
---
Predecessors: [0x10c]
Successors: []
---
0x120 PUSH1 0x0
0x122 DUP1
0x123 REVERT
---
0x120: V110 = 0x0
0x123: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18a, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, V106]

================================

Block 0x124
[0x124:0x135]
---
Predecessors: [0x10c]
Successors: [0x136, 0x15a]
---
0x124 JUMPDEST
0x125 PUSH1 0x4
0x127 SLOAD
0x128 PUSH1 0x1
0x12a PUSH1 0xa0
0x12c PUSH1 0x2
0x12e EXP
0x12f SUB
0x130 AND
0x131 ISZERO
0x132 PUSH2 0x15a
0x135 JUMPI
---
0x124: JUMPDEST 
0x125: V111 = 0x4
0x127: V112 = S[0x4]
0x128: V113 = 0x1
0x12a: V114 = 0xa0
0x12c: V115 = 0x2
0x12e: V116 = EXP 0x2 0xa0
0x12f: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x130: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x131: V119 = ISZERO V118
0x132: V120 = 0x15a
0x135: JUMPI 0x15a V119
---
Entry stack: [V12, 0x18a, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, V106]

================================

Block 0x136
[0x136:0x159]
---
Predecessors: [0x124]
Successors: [0x15a]
---
0x136 PUSH1 0x5
0x138 SLOAD
0x139 PUSH1 0x4
0x13b SLOAD
0x13c PUSH1 0x1
0x13e PUSH1 0xa0
0x140 PUSH1 0x2
0x142 EXP
0x143 SUB
0x144 AND
0x145 PUSH1 0x0
0x147 SWAP1
0x148 DUP2
0x149 MSTORE
0x14a PUSH1 0x6
0x14c PUSH1 0x20
0x14e MSTORE
0x14f PUSH1 0x40
0x151 SWAP1
0x152 SHA3
0x153 DUP1
0x154 SLOAD
0x155 SWAP1
0x156 SWAP2
0x157 ADD
0x158 SWAP1
0x159 SSTORE
---
0x136: V121 = 0x5
0x138: V122 = S[0x5]
0x139: V123 = 0x4
0x13b: V124 = S[0x4]
0x13c: V125 = 0x1
0x13e: V126 = 0xa0
0x140: V127 = 0x2
0x142: V128 = EXP 0x2 0xa0
0x143: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x144: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x145: V131 = 0x0
0x149: M[0x0] = V130
0x14a: V132 = 0x6
0x14c: V133 = 0x20
0x14e: M[0x20] = 0x6
0x14f: V134 = 0x40
0x152: V135 = SHA3 0x0 0x40
0x154: V136 = S[V135]
0x157: V137 = ADD V122 V136
0x159: S[V135] = V137
---
Entry stack: [V12, 0x18a, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, V106]

================================

Block 0x15a
[0x15a:0x186]
---
Predecessors: [0x124, 0x136]
Successors: [0x187]
---
0x15a JUMPDEST
0x15b PUSH1 0x4
0x15d DUP1
0x15e SLOAD
0x15f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x174 NOT
0x175 AND
0x176 CALLER
0x177 PUSH1 0x1
0x179 PUSH1 0xa0
0x17b PUSH1 0x2
0x17d EXP
0x17e SUB
0x17f AND
0x180 OR
0x181 SWAP1
0x182 SSTORE
0x183 CALLVALUE
0x184 PUSH1 0x5
0x186 SSTORE
---
0x15a: JUMPDEST 
0x15b: V138 = 0x4
0x15e: V139 = S[0x4]
0x15f: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x174: V141 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x175: V142 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V139
0x176: V143 = CALLER
0x177: V144 = 0x1
0x179: V145 = 0xa0
0x17b: V146 = 0x2
0x17d: V147 = EXP 0x2 0xa0
0x17e: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17f: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x180: V150 = OR V149 V142
0x182: S[0x4] = V150
0x183: V151 = CALLVALUE
0x184: V152 = 0x5
0x186: S[0x5] = V151
---
Entry stack: [V12, 0x18a, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, V106]

================================

Block 0x187
[0x187:0x189]
---
Predecessors: [0x15a, 0x48f]
Successors: [0x18a]
---
0x187 JUMPDEST
0x188 POP
0x189 JUMP
---
0x187: JUMPDEST 
0x189: JUMP 0x18a
---
Entry stack: [V12, 0x18a, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x18a
[0x18a:0x18b]
---
Predecessors: [0x187, 0x525]
Successors: []
---
0x18a JUMPDEST
0x18b STOP
---
0x18a: JUMPDEST 
0x18b: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18c
[0x18c:0x192]
---
Predecessors: [0xb]
Successors: [0x193, 0x197]
---
0x18c JUMPDEST
0x18d CALLVALUE
0x18e ISZERO
0x18f PUSH2 0x197
0x192 JUMPI
---
0x18c: JUMPDEST 
0x18d: V153 = CALLVALUE
0x18e: V154 = ISZERO V153
0x18f: V155 = 0x197
0x192: JUMPI 0x197 V154
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x193
[0x193:0x196]
---
Predecessors: [0x18c]
Successors: []
---
0x193 PUSH1 0x0
0x195 DUP1
0x196 REVERT
---
0x193: V156 = 0x0
0x196: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x197
[0x197:0x19e]
---
Predecessors: [0x18c]
Successors: [0x2d9]
---
0x197 JUMPDEST
0x198 PUSH2 0x19f
0x19b PUSH2 0x2d9
0x19e JUMP
---
0x197: JUMPDEST 
0x198: V157 = 0x19f
0x19b: V158 = 0x2d9
0x19e: JUMP 0x2d9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x19f]
Exit stack: [V12, 0x19f]

================================

Block 0x19f
[0x19f:0x1b0]
---
Predecessors: [0x2d9, 0x2ee, 0x584]
Successors: []
---
0x19f JUMPDEST
0x1a0 PUSH1 0x40
0x1a2 MLOAD
0x1a3 SWAP1
0x1a4 DUP2
0x1a5 MSTORE
0x1a6 PUSH1 0x20
0x1a8 ADD
0x1a9 PUSH1 0x40
0x1ab MLOAD
0x1ac DUP1
0x1ad SWAP2
0x1ae SUB
0x1af SWAP1
0x1b0 RETURN
---
0x19f: JUMPDEST 
0x1a0: V159 = 0x40
0x1a2: V160 = M[0x40]
0x1a5: M[V160] = S0
0x1a6: V161 = 0x20
0x1a8: V162 = ADD 0x20 V160
0x1a9: V163 = 0x40
0x1ab: V164 = M[0x40]
0x1ae: V165 = SUB V162 V164
0x1b0: RETURN V164 V165
---
Entry stack: [V12, 0x19f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x19f]

================================

Block 0x1b1
[0x1b1:0x1b7]
---
Predecessors: [0x25]
Successors: [0x1b8, 0x1bc]
---
0x1b1 JUMPDEST
0x1b2 CALLVALUE
0x1b3 ISZERO
0x1b4 PUSH2 0x1bc
0x1b7 JUMPI
---
0x1b1: JUMPDEST 
0x1b2: V166 = CALLVALUE
0x1b3: V167 = ISZERO V166
0x1b4: V168 = 0x1bc
0x1b7: JUMPI 0x1bc V167
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b8
[0x1b8:0x1bb]
---
Predecessors: [0x1b1]
Successors: []
---
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb REVERT
---
0x1b8: V169 = 0x0
0x1bb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bc
[0x1bc:0x1c3]
---
Predecessors: [0x1b1]
Successors: [0x2df]
---
0x1bc JUMPDEST
0x1bd PUSH2 0x1c4
0x1c0 PUSH2 0x2df
0x1c3 JUMP
---
0x1bc: JUMPDEST 
0x1bd: V170 = 0x1c4
0x1c0: V171 = 0x2df
0x1c3: JUMP 0x2df
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c4]
Exit stack: [V12, 0x1c4]

================================

Block 0x1c4
[0x1c4:0x1df]
---
Predecessors: [0x2df, 0x566, 0x575]
Successors: []
---
0x1c4 JUMPDEST
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 PUSH1 0x1
0x1ca PUSH1 0xa0
0x1cc PUSH1 0x2
0x1ce EXP
0x1cf SUB
0x1d0 SWAP1
0x1d1 SWAP2
0x1d2 AND
0x1d3 DUP2
0x1d4 MSTORE
0x1d5 PUSH1 0x20
0x1d7 ADD
0x1d8 PUSH1 0x40
0x1da MLOAD
0x1db DUP1
0x1dc SWAP2
0x1dd SUB
0x1de SWAP1
0x1df RETURN
---
0x1c4: JUMPDEST 
0x1c5: V172 = 0x40
0x1c7: V173 = M[0x40]
0x1c8: V174 = 0x1
0x1ca: V175 = 0xa0
0x1cc: V176 = 0x2
0x1ce: V177 = EXP 0x2 0xa0
0x1cf: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d2: V179 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: M[V173] = V179
0x1d5: V180 = 0x20
0x1d7: V181 = ADD 0x20 V173
0x1d8: V182 = 0x40
0x1da: V183 = M[0x40]
0x1dd: V184 = SUB V181 V183
0x1df: RETURN V183 V184
---
Entry stack: [V12, 0x1c4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1c4]

================================

Block 0x1e0
[0x1e0:0x1e6]
---
Predecessors: [0x30]
Successors: [0x1e7, 0x1eb]
---
0x1e0 JUMPDEST
0x1e1 CALLVALUE
0x1e2 ISZERO
0x1e3 PUSH2 0x1eb
0x1e6 JUMPI
---
0x1e0: JUMPDEST 
0x1e1: V185 = CALLVALUE
0x1e2: V186 = ISZERO V185
0x1e3: V187 = 0x1eb
0x1e6: JUMPI 0x1eb V186
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e7
[0x1e7:0x1ea]
---
Predecessors: [0x1e0]
Successors: []
---
0x1e7 PUSH1 0x0
0x1e9 DUP1
0x1ea REVERT
---
0x1e7: V188 = 0x0
0x1ea: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1eb
[0x1eb:0x1f2]
---
Predecessors: [0x1e0]
Successors: [0x2ee]
---
0x1eb JUMPDEST
0x1ec PUSH2 0x19f
0x1ef PUSH2 0x2ee
0x1f2 JUMP
---
0x1eb: JUMPDEST 
0x1ec: V189 = 0x19f
0x1ef: V190 = 0x2ee
0x1f2: JUMP 0x2ee
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x19f]
Exit stack: [V12, 0x19f]

================================

Block 0x1f3
[0x1f3:0x204]
---
Predecessors: []
Successors: []
---
0x1f3 JUMPDEST
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 SWAP1
0x1f8 DUP2
0x1f9 MSTORE
0x1fa PUSH1 0x20
0x1fc ADD
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 DUP1
0x201 SWAP2
0x202 SUB
0x203 SWAP1
0x204 RETURN
---
0x1f3: JUMPDEST 
0x1f4: V191 = 0x40
0x1f6: V192 = M[0x40]
0x1f9: M[V192] = S0
0x1fa: V193 = 0x20
0x1fc: V194 = ADD 0x20 V192
0x1fd: V195 = 0x40
0x1ff: V196 = M[0x40]
0x202: V197 = SUB V194 V196
0x204: RETURN V196 V197
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x205
[0x205:0x20b]
---
Predecessors: [0x3b]
Successors: [0x20c, 0x210]
---
0x205 JUMPDEST
0x206 CALLVALUE
0x207 ISZERO
0x208 PUSH2 0x210
0x20b JUMPI
---
0x205: JUMPDEST 
0x206: V198 = CALLVALUE
0x207: V199 = ISZERO V198
0x208: V200 = 0x210
0x20b: JUMPI 0x210 V199
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20c
[0x20c:0x20f]
---
Predecessors: [0x205]
Successors: []
---
0x20c PUSH1 0x0
0x20e DUP1
0x20f REVERT
---
0x20c: V201 = 0x0
0x20f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x210
[0x210:0x217]
---
Predecessors: [0x205]
Successors: [0x2f4]
---
0x210 JUMPDEST
0x211 PUSH2 0x218
0x214 PUSH2 0x2f4
0x217 JUMP
---
0x210: JUMPDEST 
0x211: V202 = 0x218
0x214: V203 = 0x2f4
0x217: JUMP 0x2f4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x218]
Exit stack: [V12, 0x218]

================================

Block 0x218
[0x218:0x22b]
---
Predecessors: [0x37c]
Successors: []
---
0x218 JUMPDEST
0x219 PUSH1 0x40
0x21b MLOAD
0x21c SWAP1
0x21d ISZERO
0x21e ISZERO
0x21f DUP2
0x220 MSTORE
0x221 PUSH1 0x20
0x223 ADD
0x224 PUSH1 0x40
0x226 MLOAD
0x227 DUP1
0x228 SWAP2
0x229 SUB
0x22a SWAP1
0x22b RETURN
---
0x218: JUMPDEST 
0x219: V204 = 0x40
0x21b: V205 = M[0x40]
0x21d: V206 = ISZERO {0x0, 0x1}
0x21e: V207 = ISZERO V206
0x220: M[V205] = V207
0x221: V208 = 0x20
0x223: V209 = ADD 0x20 V205
0x224: V210 = 0x40
0x226: V211 = M[0x40]
0x229: V212 = SUB V209 V211
0x22b: RETURN V211 V212
---
Entry stack: [V12, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x22c
[0x22c:0x232]
---
Predecessors: [0x46]
Successors: [0x233, 0x237]
---
0x22c JUMPDEST
0x22d CALLVALUE
0x22e ISZERO
0x22f PUSH2 0x237
0x232 JUMPI
---
0x22c: JUMPDEST 
0x22d: V213 = CALLVALUE
0x22e: V214 = ISZERO V213
0x22f: V215 = 0x237
0x232: JUMPI 0x237 V214
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x233
[0x233:0x236]
---
Predecessors: [0x22c]
Successors: []
---
0x233 PUSH1 0x0
0x235 DUP1
0x236 REVERT
---
0x233: V216 = 0x0
0x236: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x237
[0x237:0x23e]
---
Predecessors: [0x22c]
Successors: [0x380]
---
0x237 JUMPDEST
0x238 PUSH2 0x18a
0x23b PUSH2 0x380
0x23e JUMP
---
0x237: JUMPDEST 
0x238: V217 = 0x18a
0x23b: V218 = 0x380
0x23e: JUMP 0x380
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18a]
Exit stack: [V12, 0x18a]

================================

Block 0x23f
[0x23f:0x240]
---
Predecessors: []
Successors: []
---
0x23f JUMPDEST
0x240 STOP
---
0x23f: JUMPDEST 
0x240: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x241
[0x241:0x247]
---
Predecessors: [0x51]
Successors: [0x248, 0x24c]
---
0x241 JUMPDEST
0x242 CALLVALUE
0x243 ISZERO
0x244 PUSH2 0x24c
0x247 JUMPI
---
0x241: JUMPDEST 
0x242: V219 = CALLVALUE
0x243: V220 = ISZERO V219
0x244: V221 = 0x24c
0x247: JUMPI 0x24c V220
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x248
[0x248:0x24b]
---
Predecessors: [0x241]
Successors: []
---
0x248 PUSH1 0x0
0x24a DUP1
0x24b REVERT
---
0x248: V222 = 0x0
0x24b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24c
[0x24c:0x253]
---
Predecessors: [0x241]
Successors: [0x528]
---
0x24c JUMPDEST
0x24d PUSH2 0x18a
0x250 PUSH2 0x528
0x253 JUMP
---
0x24c: JUMPDEST 
0x24d: V223 = 0x18a
0x250: V224 = 0x528
0x253: JUMP 0x528
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18a]
Exit stack: [V12, 0x18a]

================================

Block 0x254
[0x254:0x255]
---
Predecessors: []
Successors: []
---
0x254 JUMPDEST
0x255 STOP
---
0x254: JUMPDEST 
0x255: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x256
[0x256:0x25c]
---
Predecessors: [0x5c]
Successors: [0x25d, 0x261]
---
0x256 JUMPDEST
0x257 CALLVALUE
0x258 ISZERO
0x259 PUSH2 0x261
0x25c JUMPI
---
0x256: JUMPDEST 
0x257: V225 = CALLVALUE
0x258: V226 = ISZERO V225
0x259: V227 = 0x261
0x25c: JUMPI 0x261 V226
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25d
[0x25d:0x260]
---
Predecessors: [0x256]
Successors: []
---
0x25d PUSH1 0x0
0x25f DUP1
0x260 REVERT
---
0x25d: V228 = 0x0
0x260: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x261
[0x261:0x268]
---
Predecessors: [0x256]
Successors: [0x566]
---
0x261 JUMPDEST
0x262 PUSH2 0x1c4
0x265 PUSH2 0x566
0x268 JUMP
---
0x261: JUMPDEST 
0x262: V229 = 0x1c4
0x265: V230 = 0x566
0x268: JUMP 0x566
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c4]
Exit stack: [V12, 0x1c4]

================================

Block 0x269
[0x269:0x284]
---
Predecessors: []
Successors: []
---
0x269 JUMPDEST
0x26a PUSH1 0x40
0x26c MLOAD
0x26d PUSH1 0x1
0x26f PUSH1 0xa0
0x271 PUSH1 0x2
0x273 EXP
0x274 SUB
0x275 SWAP1
0x276 SWAP2
0x277 AND
0x278 DUP2
0x279 MSTORE
0x27a PUSH1 0x20
0x27c ADD
0x27d PUSH1 0x40
0x27f MLOAD
0x280 DUP1
0x281 SWAP2
0x282 SUB
0x283 SWAP1
0x284 RETURN
---
0x269: JUMPDEST 
0x26a: V231 = 0x40
0x26c: V232 = M[0x40]
0x26d: V233 = 0x1
0x26f: V234 = 0xa0
0x271: V235 = 0x2
0x273: V236 = EXP 0x2 0xa0
0x274: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x277: V238 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x279: M[V232] = V238
0x27a: V239 = 0x20
0x27c: V240 = ADD 0x20 V232
0x27d: V241 = 0x40
0x27f: V242 = M[0x40]
0x282: V243 = SUB V240 V242
0x284: RETURN V242 V243
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x285
[0x285:0x28b]
---
Predecessors: [0x67]
Successors: [0x28c, 0x290]
---
0x285 JUMPDEST
0x286 CALLVALUE
0x287 ISZERO
0x288 PUSH2 0x290
0x28b JUMPI
---
0x285: JUMPDEST 
0x286: V244 = CALLVALUE
0x287: V245 = ISZERO V244
0x288: V246 = 0x290
0x28b: JUMPI 0x290 V245
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28c
[0x28c:0x28f]
---
Predecessors: [0x285]
Successors: []
---
0x28c PUSH1 0x0
0x28e DUP1
0x28f REVERT
---
0x28c: V247 = 0x0
0x28f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x290
[0x290:0x297]
---
Predecessors: [0x285]
Successors: [0x575]
---
0x290 JUMPDEST
0x291 PUSH2 0x1c4
0x294 PUSH2 0x575
0x297 JUMP
---
0x290: JUMPDEST 
0x291: V248 = 0x1c4
0x294: V249 = 0x575
0x297: JUMP 0x575
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c4]
Exit stack: [V12, 0x1c4]

================================

Block 0x298
[0x298:0x2b3]
---
Predecessors: []
Successors: []
---
0x298 JUMPDEST
0x299 PUSH1 0x40
0x29b MLOAD
0x29c PUSH1 0x1
0x29e PUSH1 0xa0
0x2a0 PUSH1 0x2
0x2a2 EXP
0x2a3 SUB
0x2a4 SWAP1
0x2a5 SWAP2
0x2a6 AND
0x2a7 DUP2
0x2a8 MSTORE
0x2a9 PUSH1 0x20
0x2ab ADD
0x2ac PUSH1 0x40
0x2ae MLOAD
0x2af DUP1
0x2b0 SWAP2
0x2b1 SUB
0x2b2 SWAP1
0x2b3 RETURN
---
0x298: JUMPDEST 
0x299: V250 = 0x40
0x29b: V251 = M[0x40]
0x29c: V252 = 0x1
0x29e: V253 = 0xa0
0x2a0: V254 = 0x2
0x2a2: V255 = EXP 0x2 0xa0
0x2a3: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a6: V257 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2a8: M[V251] = V257
0x2a9: V258 = 0x20
0x2ab: V259 = ADD 0x20 V251
0x2ac: V260 = 0x40
0x2ae: V261 = M[0x40]
0x2b1: V262 = SUB V259 V261
0x2b3: RETURN V261 V262
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b4
[0x2b4:0x2ba]
---
Predecessors: [0x72]
Successors: [0x2bb, 0x2bf]
---
0x2b4 JUMPDEST
0x2b5 CALLVALUE
0x2b6 ISZERO
0x2b7 PUSH2 0x2bf
0x2ba JUMPI
---
0x2b4: JUMPDEST 
0x2b5: V263 = CALLVALUE
0x2b6: V264 = ISZERO V263
0x2b7: V265 = 0x2bf
0x2ba: JUMPI 0x2bf V264
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bb
[0x2bb:0x2be]
---
Predecessors: [0x2b4]
Successors: []
---
0x2bb PUSH1 0x0
0x2bd DUP1
0x2be REVERT
---
0x2bb: V266 = 0x0
0x2be: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bf
[0x2bf:0x2c6]
---
Predecessors: [0x2b4]
Successors: [0x584]
---
0x2bf JUMPDEST
0x2c0 PUSH2 0x19f
0x2c3 PUSH2 0x584
0x2c6 JUMP
---
0x2bf: JUMPDEST 
0x2c0: V267 = 0x19f
0x2c3: V268 = 0x584
0x2c6: JUMP 0x584
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x19f]
Exit stack: [V12, 0x19f]

================================

Block 0x2c7
[0x2c7:0x2d8]
---
Predecessors: []
Successors: []
---
0x2c7 JUMPDEST
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb SWAP1
0x2cc DUP2
0x2cd MSTORE
0x2ce PUSH1 0x20
0x2d0 ADD
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 DUP1
0x2d5 SWAP2
0x2d6 SUB
0x2d7 SWAP1
0x2d8 RETURN
---
0x2c7: JUMPDEST 
0x2c8: V269 = 0x40
0x2ca: V270 = M[0x40]
0x2cd: M[V270] = S0
0x2ce: V271 = 0x20
0x2d0: V272 = ADD 0x20 V270
0x2d1: V273 = 0x40
0x2d3: V274 = M[0x40]
0x2d6: V275 = SUB V272 V274
0x2d8: RETURN V274 V275
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d9
[0x2d9:0x2de]
---
Predecessors: [0x197]
Successors: [0x19f]
---
0x2d9 JUMPDEST
0x2da PUSH1 0x3
0x2dc SLOAD
0x2dd DUP2
0x2de JUMP
---
0x2d9: JUMPDEST 
0x2da: V276 = 0x3
0x2dc: V277 = S[0x3]
0x2de: JUMP 0x19f
---
Entry stack: [V12, 0x19f]
Stack pops: 1
Stack additions: [S0, V277]
Exit stack: [V12, 0x19f, V277]

================================

Block 0x2df
[0x2df:0x2ed]
---
Predecessors: [0x1bc]
Successors: [0x1c4]
---
0x2df JUMPDEST
0x2e0 PUSH1 0x1
0x2e2 SLOAD
0x2e3 PUSH1 0x1
0x2e5 PUSH1 0xa0
0x2e7 PUSH1 0x2
0x2e9 EXP
0x2ea SUB
0x2eb AND
0x2ec DUP2
0x2ed JUMP
---
0x2df: JUMPDEST 
0x2e0: V278 = 0x1
0x2e2: V279 = S[0x1]
0x2e3: V280 = 0x1
0x2e5: V281 = 0xa0
0x2e7: V282 = 0x2
0x2e9: V283 = EXP 0x2 0xa0
0x2ea: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2eb: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x2ed: JUMP 0x1c4
---
Entry stack: [V12, 0x1c4]
Stack pops: 1
Stack additions: [S0, V285]
Exit stack: [V12, 0x1c4, V285]

================================

Block 0x2ee
[0x2ee:0x2f3]
---
Predecessors: [0x1eb]
Successors: [0x19f]
---
0x2ee JUMPDEST
0x2ef PUSH1 0x2
0x2f1 SLOAD
0x2f2 DUP2
0x2f3 JUMP
---
0x2ee: JUMPDEST 
0x2ef: V286 = 0x2
0x2f1: V287 = S[0x2]
0x2f3: JUMP 0x19f
---
Entry stack: [V12, 0x19f]
Stack pops: 1
Stack additions: [S0, V287]
Exit stack: [V12, 0x19f, V287]

================================

Block 0x2f4
[0x2f4:0x315]
---
Predecessors: [0x210]
Successors: [0x316, 0x376]
---
0x2f4 JUMPDEST
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0xa0
0x2f9 PUSH1 0x2
0x2fb EXP
0x2fc SUB
0x2fd CALLER
0x2fe AND
0x2ff PUSH1 0x0
0x301 SWAP1
0x302 DUP2
0x303 MSTORE
0x304 PUSH1 0x6
0x306 PUSH1 0x20
0x308 MSTORE
0x309 PUSH1 0x40
0x30b DUP2
0x30c SHA3
0x30d SLOAD
0x30e DUP2
0x30f DUP2
0x310 GT
0x311 ISZERO
0x312 PUSH2 0x376
0x315 JUMPI
---
0x2f4: JUMPDEST 
0x2f5: V288 = 0x1
0x2f7: V289 = 0xa0
0x2f9: V290 = 0x2
0x2fb: V291 = EXP 0x2 0xa0
0x2fc: V292 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fd: V293 = CALLER
0x2fe: V294 = AND V293 0xffffffffffffffffffffffffffffffffffffffff
0x2ff: V295 = 0x0
0x303: M[0x0] = V294
0x304: V296 = 0x6
0x306: V297 = 0x20
0x308: M[0x20] = 0x6
0x309: V298 = 0x40
0x30c: V299 = SHA3 0x0 0x40
0x30d: V300 = S[V299]
0x310: V301 = GT V300 0x0
0x311: V302 = ISZERO V301
0x312: V303 = 0x376
0x315: JUMPI 0x376 V302
---
Entry stack: [V12, 0x218]
Stack pops: 0
Stack additions: [0x0, V300]
Exit stack: [V12, 0x218, 0x0, V300]

================================

Block 0x316
[0x316:0x354]
---
Predecessors: [0x2f4]
Successors: [0x355, 0x376]
---
0x316 PUSH1 0x1
0x318 PUSH1 0xa0
0x31a PUSH1 0x2
0x31c EXP
0x31d SUB
0x31e CALLER
0x31f AND
0x320 PUSH1 0x0
0x322 DUP2
0x323 DUP2
0x324 MSTORE
0x325 PUSH1 0x6
0x327 PUSH1 0x20
0x329 MSTORE
0x32a PUSH1 0x40
0x32c DUP1
0x32d DUP3
0x32e SHA3
0x32f SWAP2
0x330 SWAP1
0x331 SWAP2
0x332 SSTORE
0x333 DUP3
0x334 ISZERO
0x335 PUSH2 0x8fc
0x338 MUL
0x339 SWAP1
0x33a DUP4
0x33b SWAP1
0x33c MLOAD
0x33d PUSH1 0x0
0x33f PUSH1 0x40
0x341 MLOAD
0x342 DUP1
0x343 DUP4
0x344 SUB
0x345 DUP2
0x346 DUP6
0x347 DUP9
0x348 DUP9
0x349 CALL
0x34a SWAP4
0x34b POP
0x34c POP
0x34d POP
0x34e POP
0x34f ISZERO
0x350 ISZERO
0x351 PUSH2 0x376
0x354 JUMPI
---
0x316: V304 = 0x1
0x318: V305 = 0xa0
0x31a: V306 = 0x2
0x31c: V307 = EXP 0x2 0xa0
0x31d: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31e: V309 = CALLER
0x31f: V310 = AND V309 0xffffffffffffffffffffffffffffffffffffffff
0x320: V311 = 0x0
0x324: M[0x0] = V310
0x325: V312 = 0x6
0x327: V313 = 0x20
0x329: M[0x20] = 0x6
0x32a: V314 = 0x40
0x32e: V315 = SHA3 0x0 0x40
0x332: S[V315] = 0x0
0x334: V316 = ISZERO V300
0x335: V317 = 0x8fc
0x338: V318 = MUL 0x8fc V316
0x33c: V319 = M[0x40]
0x33d: V320 = 0x0
0x33f: V321 = 0x40
0x341: V322 = M[0x40]
0x344: V323 = SUB V319 V322
0x349: V324 = CALL V318 V310 V300 V322 V323 V322 0x0
0x34f: V325 = ISZERO V324
0x350: V326 = ISZERO V325
0x351: V327 = 0x376
0x354: JUMPI 0x376 V326
---
Entry stack: [V12, 0x218, 0x0, V300]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x218, 0x0, V300]

================================

Block 0x355
[0x355:0x375]
---
Predecessors: [0x316]
Successors: [0x37c]
---
0x355 PUSH1 0x1
0x357 PUSH1 0xa0
0x359 PUSH1 0x2
0x35b EXP
0x35c SUB
0x35d CALLER
0x35e AND
0x35f PUSH1 0x0
0x361 SWAP1
0x362 DUP2
0x363 MSTORE
0x364 PUSH1 0x6
0x366 PUSH1 0x20
0x368 MSTORE
0x369 PUSH1 0x40
0x36b DUP2
0x36c SHA3
0x36d DUP3
0x36e SWAP1
0x36f SSTORE
0x370 SWAP2
0x371 POP
0x372 PUSH2 0x37c
0x375 JUMP
---
0x355: V328 = 0x1
0x357: V329 = 0xa0
0x359: V330 = 0x2
0x35b: V331 = EXP 0x2 0xa0
0x35c: V332 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35d: V333 = CALLER
0x35e: V334 = AND V333 0xffffffffffffffffffffffffffffffffffffffff
0x35f: V335 = 0x0
0x363: M[0x0] = V334
0x364: V336 = 0x6
0x366: V337 = 0x20
0x368: M[0x20] = 0x6
0x369: V338 = 0x40
0x36c: V339 = SHA3 0x0 0x40
0x36f: S[V339] = V300
0x372: V340 = 0x37c
0x375: JUMP 0x37c
---
Entry stack: [V12, 0x218, 0x0, V300]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0x218, 0x0, V300]

================================

Block 0x376
[0x376:0x376]
---
Predecessors: [0x2f4, 0x316]
Successors: [0x377]
---
0x376 JUMPDEST
---
0x376: JUMPDEST 
---
Entry stack: [V12, 0x218, 0x0, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x218, 0x0, V300]

================================

Block 0x377
[0x377:0x37b]
---
Predecessors: [0x376]
Successors: [0x37c]
---
0x377 JUMPDEST
0x378 PUSH1 0x1
0x37a SWAP2
0x37b POP
---
0x377: JUMPDEST 
0x378: V341 = 0x1
---
Entry stack: [V12, 0x218, 0x0, V300]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V12, 0x218, 0x1, V300]

================================

Block 0x37c
[0x37c:0x37f]
---
Predecessors: [0x355, 0x377]
Successors: [0x218]
---
0x37c JUMPDEST
0x37d POP
0x37e SWAP1
0x37f JUMP
---
0x37c: JUMPDEST 
0x37f: JUMP 0x218
---
Entry stack: [V12, 0x218, {0x0, 0x1}, V300]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x380
[0x380:0x38d]
---
Predecessors: [0x237]
Successors: [0x38e, 0x392]
---
0x380 JUMPDEST
0x381 PUSH1 0x3
0x383 SLOAD
0x384 PUSH1 0x0
0x386 SWAP1
0x387 TIMESTAMP
0x388 LT
0x389 ISZERO
0x38a PUSH2 0x392
0x38d JUMPI
---
0x380: JUMPDEST 
0x381: V342 = 0x3
0x383: V343 = S[0x3]
0x384: V344 = 0x0
0x387: V345 = TIMESTAMP
0x388: V346 = LT V345 V343
0x389: V347 = ISZERO V346
0x38a: V348 = 0x392
0x38d: JUMPI 0x392 V347
---
Entry stack: [V12, 0x18a]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x18a, 0x0]

================================

Block 0x38e
[0x38e:0x391]
---
Predecessors: [0x380]
Successors: []
---
0x38e PUSH1 0x0
0x390 DUP1
0x391 REVERT
---
0x38e: V349 = 0x0
0x391: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, 0x0]

================================

Block 0x392
[0x392:0x3e8]
---
Predecessors: [0x380]
Successors: [0x3e9, 0x3ed]
---
0x392 JUMPDEST
0x393 PUSH1 0x0
0x395 DUP1
0x396 SLOAD
0x397 PUSH1 0x1
0x399 PUSH1 0xa0
0x39b PUSH1 0x2
0x39d EXP
0x39e SUB
0x39f AND
0x3a0 SWAP1
0x3a1 PUSH4 0x70a08231
0x3a6 SWAP1
0x3a7 ADDRESS
0x3a8 SWAP1
0x3a9 PUSH1 0x40
0x3ab MLOAD
0x3ac PUSH1 0x20
0x3ae ADD
0x3af MSTORE
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 PUSH1 0xe0
0x3b5 PUSH1 0x2
0x3b7 EXP
0x3b8 PUSH4 0xffffffff
0x3bd DUP5
0x3be AND
0x3bf MUL
0x3c0 DUP2
0x3c1 MSTORE
0x3c2 PUSH1 0x1
0x3c4 PUSH1 0xa0
0x3c6 PUSH1 0x2
0x3c8 EXP
0x3c9 SUB
0x3ca SWAP1
0x3cb SWAP2
0x3cc AND
0x3cd PUSH1 0x4
0x3cf DUP3
0x3d0 ADD
0x3d1 MSTORE
0x3d2 PUSH1 0x24
0x3d4 ADD
0x3d5 PUSH1 0x20
0x3d7 PUSH1 0x40
0x3d9 MLOAD
0x3da DUP1
0x3db DUP4
0x3dc SUB
0x3dd DUP2
0x3de PUSH1 0x0
0x3e0 DUP8
0x3e1 DUP1
0x3e2 EXTCODESIZE
0x3e3 ISZERO
0x3e4 ISZERO
0x3e5 PUSH2 0x3ed
0x3e8 JUMPI
---
0x392: JUMPDEST 
0x393: V350 = 0x0
0x396: V351 = S[0x0]
0x397: V352 = 0x1
0x399: V353 = 0xa0
0x39b: V354 = 0x2
0x39d: V355 = EXP 0x2 0xa0
0x39e: V356 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39f: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x3a1: V358 = 0x70a08231
0x3a7: V359 = ADDRESS
0x3a9: V360 = 0x40
0x3ab: V361 = M[0x40]
0x3ac: V362 = 0x20
0x3ae: V363 = ADD 0x20 V361
0x3af: M[V363] = 0x0
0x3b0: V364 = 0x40
0x3b2: V365 = M[0x40]
0x3b3: V366 = 0xe0
0x3b5: V367 = 0x2
0x3b7: V368 = EXP 0x2 0xe0
0x3b8: V369 = 0xffffffff
0x3be: V370 = AND 0x70a08231 0xffffffff
0x3bf: V371 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x3c1: M[V365] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3c2: V372 = 0x1
0x3c4: V373 = 0xa0
0x3c6: V374 = 0x2
0x3c8: V375 = EXP 0x2 0xa0
0x3c9: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cc: V377 = AND V359 0xffffffffffffffffffffffffffffffffffffffff
0x3cd: V378 = 0x4
0x3d0: V379 = ADD V365 0x4
0x3d1: M[V379] = V377
0x3d2: V380 = 0x24
0x3d4: V381 = ADD 0x24 V365
0x3d5: V382 = 0x20
0x3d7: V383 = 0x40
0x3d9: V384 = M[0x40]
0x3dc: V385 = SUB V381 V384
0x3de: V386 = 0x0
0x3e2: V387 = EXTCODESIZE V357
0x3e3: V388 = ISZERO V387
0x3e4: V389 = ISZERO V388
0x3e5: V390 = 0x3ed
0x3e8: JUMPI 0x3ed V389
---
Entry stack: [V12, 0x18a, 0x0]
Stack pops: 0
Stack additions: [V357, 0x70a08231, V381, 0x20, V384, V385, V384, 0x0, V357]
Exit stack: [V12, 0x18a, 0x0, V357, 0x70a08231, V381, 0x20, V384, V385, V384, 0x0, V357]

================================

Block 0x3e9
[0x3e9:0x3ec]
---
Predecessors: [0x392]
Successors: []
---
0x3e9 PUSH1 0x0
0x3eb DUP1
0x3ec REVERT
---
0x3e9: V391 = 0x0
0x3ec: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18a, 0x0, V357, 0x70a08231, V381, 0x20, V384, V385, V384, 0x0, V357]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, 0x0, V357, 0x70a08231, V381, 0x20, V384, V385, V384, 0x0, V357]

================================

Block 0x3ed
[0x3ed:0x3f9]
---
Predecessors: [0x392]
Successors: [0x3fa, 0x3fe]
---
0x3ed JUMPDEST
0x3ee PUSH2 0x2c6
0x3f1 GAS
0x3f2 SUB
0x3f3 CALL
0x3f4 ISZERO
0x3f5 ISZERO
0x3f6 PUSH2 0x3fe
0x3f9 JUMPI
---
0x3ed: JUMPDEST 
0x3ee: V392 = 0x2c6
0x3f1: V393 = GAS
0x3f2: V394 = SUB V393 0x2c6
0x3f3: V395 = CALL V394 V357 0x0 V384 V385 V384 0x20
0x3f4: V396 = ISZERO V395
0x3f5: V397 = ISZERO V396
0x3f6: V398 = 0x3fe
0x3f9: JUMPI 0x3fe V397
---
Entry stack: [V12, 0x18a, 0x0, V357, 0x70a08231, V381, 0x20, V384, V385, V384, 0x0, V357]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x18a, 0x0, V357, 0x70a08231, V381]

================================

Block 0x3fa
[0x3fa:0x3fd]
---
Predecessors: [0x3ed]
Successors: []
---
0x3fa PUSH1 0x0
0x3fc DUP1
0x3fd REVERT
---
0x3fa: V399 = 0x0
0x3fd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18a, 0x0, V357, 0x70a08231, V381]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, 0x0, V357, 0x70a08231, V381]

================================

Block 0x3fe
[0x3fe:0x415]
---
Predecessors: [0x3ed]
Successors: [0x416, 0x49f]
---
0x3fe JUMPDEST
0x3ff POP
0x400 POP
0x401 POP
0x402 PUSH1 0x40
0x404 MLOAD
0x405 DUP1
0x406 MLOAD
0x407 SWAP1
0x408 POP
0x409 SWAP1
0x40a POP
0x40b PUSH1 0x0
0x40d PUSH1 0x5
0x40f SLOAD
0x410 GT
0x411 ISZERO
0x412 PUSH2 0x49f
0x415 JUMPI
---
0x3fe: JUMPDEST 
0x402: V400 = 0x40
0x404: V401 = M[0x40]
0x406: V402 = M[V401]
0x40b: V403 = 0x0
0x40d: V404 = 0x5
0x40f: V405 = S[0x5]
0x410: V406 = GT V405 0x0
0x411: V407 = ISZERO V406
0x412: V408 = 0x49f
0x415: JUMPI 0x49f V407
---
Entry stack: [V12, 0x18a, 0x0, V357, 0x70a08231, V381]
Stack pops: 4
Stack additions: [V402]
Exit stack: [V12, 0x18a, V402]

================================

Block 0x416
[0x416:0x479]
---
Predecessors: [0x3fe]
Successors: [0x47a, 0x47e]
---
0x416 PUSH1 0x0
0x418 DUP1
0x419 SLOAD
0x41a PUSH1 0x4
0x41c SLOAD
0x41d PUSH1 0x1
0x41f PUSH1 0xa0
0x421 PUSH1 0x2
0x423 EXP
0x424 SUB
0x425 SWAP2
0x426 DUP3
0x427 AND
0x428 SWAP3
0x429 PUSH4 0xa9059cbb
0x42e SWAP3
0x42f SWAP1
0x430 SWAP2
0x431 AND
0x432 SWAP1
0x433 DUP5
0x434 SWAP1
0x435 PUSH1 0x40
0x437 MLOAD
0x438 PUSH1 0x20
0x43a ADD
0x43b MSTORE
0x43c PUSH1 0x40
0x43e MLOAD
0x43f PUSH1 0xe0
0x441 PUSH1 0x2
0x443 EXP
0x444 PUSH4 0xffffffff
0x449 DUP6
0x44a AND
0x44b MUL
0x44c DUP2
0x44d MSTORE
0x44e PUSH1 0x1
0x450 PUSH1 0xa0
0x452 PUSH1 0x2
0x454 EXP
0x455 SUB
0x456 SWAP1
0x457 SWAP3
0x458 AND
0x459 PUSH1 0x4
0x45b DUP4
0x45c ADD
0x45d MSTORE
0x45e PUSH1 0x24
0x460 DUP3
0x461 ADD
0x462 MSTORE
0x463 PUSH1 0x44
0x465 ADD
0x466 PUSH1 0x20
0x468 PUSH1 0x40
0x46a MLOAD
0x46b DUP1
0x46c DUP4
0x46d SUB
0x46e DUP2
0x46f PUSH1 0x0
0x471 DUP8
0x472 DUP1
0x473 EXTCODESIZE
0x474 ISZERO
0x475 ISZERO
0x476 PUSH2 0x47e
0x479 JUMPI
---
0x416: V409 = 0x0
0x419: V410 = S[0x0]
0x41a: V411 = 0x4
0x41c: V412 = S[0x4]
0x41d: V413 = 0x1
0x41f: V414 = 0xa0
0x421: V415 = 0x2
0x423: V416 = EXP 0x2 0xa0
0x424: V417 = SUB 0x10000000000000000000000000000000000000000 0x1
0x427: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V410
0x429: V419 = 0xa9059cbb
0x431: V420 = AND V412 0xffffffffffffffffffffffffffffffffffffffff
0x435: V421 = 0x40
0x437: V422 = M[0x40]
0x438: V423 = 0x20
0x43a: V424 = ADD 0x20 V422
0x43b: M[V424] = 0x0
0x43c: V425 = 0x40
0x43e: V426 = M[0x40]
0x43f: V427 = 0xe0
0x441: V428 = 0x2
0x443: V429 = EXP 0x2 0xe0
0x444: V430 = 0xffffffff
0x44a: V431 = AND 0xa9059cbb 0xffffffff
0x44b: V432 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x44d: M[V426] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x44e: V433 = 0x1
0x450: V434 = 0xa0
0x452: V435 = 0x2
0x454: V436 = EXP 0x2 0xa0
0x455: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x458: V438 = AND V420 0xffffffffffffffffffffffffffffffffffffffff
0x459: V439 = 0x4
0x45c: V440 = ADD V426 0x4
0x45d: M[V440] = V438
0x45e: V441 = 0x24
0x461: V442 = ADD V426 0x24
0x462: M[V442] = V402
0x463: V443 = 0x44
0x465: V444 = ADD 0x44 V426
0x466: V445 = 0x20
0x468: V446 = 0x40
0x46a: V447 = M[0x40]
0x46d: V448 = SUB V444 V447
0x46f: V449 = 0x0
0x473: V450 = EXTCODESIZE V418
0x474: V451 = ISZERO V450
0x475: V452 = ISZERO V451
0x476: V453 = 0x47e
0x479: JUMPI 0x47e V452
---
Entry stack: [V12, 0x18a, V402]
Stack pops: 1
Stack additions: [S0, V418, 0xa9059cbb, V444, 0x20, V447, V448, V447, 0x0, V418]
Exit stack: [V12, 0x18a, V402, V418, 0xa9059cbb, V444, 0x20, V447, V448, V447, 0x0, V418]

================================

Block 0x47a
[0x47a:0x47d]
---
Predecessors: [0x416]
Successors: []
---
0x47a PUSH1 0x0
0x47c DUP1
0x47d REVERT
---
0x47a: V454 = 0x0
0x47d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18a, V402, V418, 0xa9059cbb, V444, 0x20, V447, V448, V447, 0x0, V418]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, V402, V418, 0xa9059cbb, V444, 0x20, V447, V448, V447, 0x0, V418]

================================

Block 0x47e
[0x47e:0x48a]
---
Predecessors: [0x416]
Successors: [0x48b, 0x48f]
---
0x47e JUMPDEST
0x47f PUSH2 0x2c6
0x482 GAS
0x483 SUB
0x484 CALL
0x485 ISZERO
0x486 ISZERO
0x487 PUSH2 0x48f
0x48a JUMPI
---
0x47e: JUMPDEST 
0x47f: V455 = 0x2c6
0x482: V456 = GAS
0x483: V457 = SUB V456 0x2c6
0x484: V458 = CALL V457 V418 0x0 V447 V448 V447 0x20
0x485: V459 = ISZERO V458
0x486: V460 = ISZERO V459
0x487: V461 = 0x48f
0x48a: JUMPI 0x48f V460
---
Entry stack: [V12, 0x18a, V402, V418, 0xa9059cbb, V444, 0x20, V447, V448, V447, 0x0, V418]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x18a, V402, V418, 0xa9059cbb, V444]

================================

Block 0x48b
[0x48b:0x48e]
---
Predecessors: [0x47e]
Successors: []
---
0x48b PUSH1 0x0
0x48d DUP1
0x48e REVERT
---
0x48b: V462 = 0x0
0x48e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18a, V402, V418, 0xa9059cbb, V444]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, V402, V418, 0xa9059cbb, V444]

================================

Block 0x48f
[0x48f:0x49e]
---
Predecessors: [0x47e]
Successors: [0x187]
---
0x48f JUMPDEST
0x490 POP
0x491 POP
0x492 POP
0x493 PUSH1 0x40
0x495 MLOAD
0x496 DUP1
0x497 MLOAD
0x498 SWAP1
0x499 POP
0x49a POP
0x49b PUSH2 0x187
0x49e JUMP
---
0x48f: JUMPDEST 
0x493: V463 = 0x40
0x495: V464 = M[0x40]
0x497: V465 = M[V464]
0x49b: V466 = 0x187
0x49e: JUMP 0x187
---
Entry stack: [V12, 0x18a, V402, V418, 0xa9059cbb, V444]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x18a, V402]

================================

Block 0x49f
[0x49f:0x503]
---
Predecessors: [0x3fe]
Successors: [0x504, 0x508]
---
0x49f JUMPDEST
0x4a0 PUSH1 0x0
0x4a2 DUP1
0x4a3 SLOAD
0x4a4 PUSH1 0x1
0x4a6 SLOAD
0x4a7 PUSH1 0x1
0x4a9 PUSH1 0xa0
0x4ab PUSH1 0x2
0x4ad EXP
0x4ae SUB
0x4af SWAP2
0x4b0 DUP3
0x4b1 AND
0x4b2 SWAP3
0x4b3 PUSH4 0xa9059cbb
0x4b8 SWAP3
0x4b9 SWAP1
0x4ba SWAP2
0x4bb AND
0x4bc SWAP1
0x4bd DUP5
0x4be SWAP1
0x4bf PUSH1 0x40
0x4c1 MLOAD
0x4c2 PUSH1 0x20
0x4c4 ADD
0x4c5 MSTORE
0x4c6 PUSH1 0x40
0x4c8 MLOAD
0x4c9 PUSH1 0xe0
0x4cb PUSH1 0x2
0x4cd EXP
0x4ce PUSH4 0xffffffff
0x4d3 DUP6
0x4d4 AND
0x4d5 MUL
0x4d6 DUP2
0x4d7 MSTORE
0x4d8 PUSH1 0x1
0x4da PUSH1 0xa0
0x4dc PUSH1 0x2
0x4de EXP
0x4df SUB
0x4e0 SWAP1
0x4e1 SWAP3
0x4e2 AND
0x4e3 PUSH1 0x4
0x4e5 DUP4
0x4e6 ADD
0x4e7 MSTORE
0x4e8 PUSH1 0x24
0x4ea DUP3
0x4eb ADD
0x4ec MSTORE
0x4ed PUSH1 0x44
0x4ef ADD
0x4f0 PUSH1 0x20
0x4f2 PUSH1 0x40
0x4f4 MLOAD
0x4f5 DUP1
0x4f6 DUP4
0x4f7 SUB
0x4f8 DUP2
0x4f9 PUSH1 0x0
0x4fb DUP8
0x4fc DUP1
0x4fd EXTCODESIZE
0x4fe ISZERO
0x4ff ISZERO
0x500 PUSH2 0x508
0x503 JUMPI
---
0x49f: JUMPDEST 
0x4a0: V467 = 0x0
0x4a3: V468 = S[0x0]
0x4a4: V469 = 0x1
0x4a6: V470 = S[0x1]
0x4a7: V471 = 0x1
0x4a9: V472 = 0xa0
0x4ab: V473 = 0x2
0x4ad: V474 = EXP 0x2 0xa0
0x4ae: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b1: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x4b3: V477 = 0xa9059cbb
0x4bb: V478 = AND V470 0xffffffffffffffffffffffffffffffffffffffff
0x4bf: V479 = 0x40
0x4c1: V480 = M[0x40]
0x4c2: V481 = 0x20
0x4c4: V482 = ADD 0x20 V480
0x4c5: M[V482] = 0x0
0x4c6: V483 = 0x40
0x4c8: V484 = M[0x40]
0x4c9: V485 = 0xe0
0x4cb: V486 = 0x2
0x4cd: V487 = EXP 0x2 0xe0
0x4ce: V488 = 0xffffffff
0x4d4: V489 = AND 0xa9059cbb 0xffffffff
0x4d5: V490 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x4d7: M[V484] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4d8: V491 = 0x1
0x4da: V492 = 0xa0
0x4dc: V493 = 0x2
0x4de: V494 = EXP 0x2 0xa0
0x4df: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e2: V496 = AND V478 0xffffffffffffffffffffffffffffffffffffffff
0x4e3: V497 = 0x4
0x4e6: V498 = ADD V484 0x4
0x4e7: M[V498] = V496
0x4e8: V499 = 0x24
0x4eb: V500 = ADD V484 0x24
0x4ec: M[V500] = V402
0x4ed: V501 = 0x44
0x4ef: V502 = ADD 0x44 V484
0x4f0: V503 = 0x20
0x4f2: V504 = 0x40
0x4f4: V505 = M[0x40]
0x4f7: V506 = SUB V502 V505
0x4f9: V507 = 0x0
0x4fd: V508 = EXTCODESIZE V476
0x4fe: V509 = ISZERO V508
0x4ff: V510 = ISZERO V509
0x500: V511 = 0x508
0x503: JUMPI 0x508 V510
---
Entry stack: [V12, 0x18a, V402]
Stack pops: 1
Stack additions: [S0, V476, 0xa9059cbb, V502, 0x20, V505, V506, V505, 0x0, V476]
Exit stack: [V12, 0x18a, V402, V476, 0xa9059cbb, V502, 0x20, V505, V506, V505, 0x0, V476]

================================

Block 0x504
[0x504:0x507]
---
Predecessors: [0x49f]
Successors: []
---
0x504 PUSH1 0x0
0x506 DUP1
0x507 REVERT
---
0x504: V512 = 0x0
0x507: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18a, V402, V476, 0xa9059cbb, V502, 0x20, V505, V506, V505, 0x0, V476]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, V402, V476, 0xa9059cbb, V502, 0x20, V505, V506, V505, 0x0, V476]

================================

Block 0x508
[0x508:0x514]
---
Predecessors: [0x49f]
Successors: [0x515, 0x519]
---
0x508 JUMPDEST
0x509 PUSH2 0x2c6
0x50c GAS
0x50d SUB
0x50e CALL
0x50f ISZERO
0x510 ISZERO
0x511 PUSH2 0x519
0x514 JUMPI
---
0x508: JUMPDEST 
0x509: V513 = 0x2c6
0x50c: V514 = GAS
0x50d: V515 = SUB V514 0x2c6
0x50e: V516 = CALL V515 V476 0x0 V505 V506 V505 0x20
0x50f: V517 = ISZERO V516
0x510: V518 = ISZERO V517
0x511: V519 = 0x519
0x514: JUMPI 0x519 V518
---
Entry stack: [V12, 0x18a, V402, V476, 0xa9059cbb, V502, 0x20, V505, V506, V505, 0x0, V476]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x18a, V402, V476, 0xa9059cbb, V502]

================================

Block 0x515
[0x515:0x518]
---
Predecessors: [0x508]
Successors: []
---
0x515 PUSH1 0x0
0x517 DUP1
0x518 REVERT
---
0x515: V520 = 0x0
0x518: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18a, V402, V476, 0xa9059cbb, V502]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, V402, V476, 0xa9059cbb, V502]

================================

Block 0x519
[0x519:0x523]
---
Predecessors: [0x508]
Successors: [0x524]
---
0x519 JUMPDEST
0x51a POP
0x51b POP
0x51c POP
0x51d PUSH1 0x40
0x51f MLOAD
0x520 DUP1
0x521 MLOAD
0x522 POP
0x523 POP
---
0x519: JUMPDEST 
0x51d: V521 = 0x40
0x51f: V522 = M[0x40]
0x521: V523 = M[V522]
---
Entry stack: [V12, 0x18a, V402, V476, 0xa9059cbb, V502]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x18a, V402]

================================

Block 0x524
[0x524:0x524]
---
Predecessors: [0x519]
Successors: [0x525]
---
0x524 JUMPDEST
---
0x524: JUMPDEST 
---
Entry stack: [V12, 0x18a, V402]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a, V402]

================================

Block 0x525
[0x525:0x527]
---
Predecessors: [0x524]
Successors: [0x18a]
---
0x525 JUMPDEST
0x526 POP
0x527 JUMP
---
0x525: JUMPDEST 
0x527: JUMP 0x18a
---
Entry stack: [V12, 0x18a, V402]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x528
[0x528:0x53e]
---
Predecessors: [0x24c]
Successors: [0x53f, 0x543]
---
0x528 JUMPDEST
0x529 PUSH1 0x1
0x52b SLOAD
0x52c CALLER
0x52d PUSH1 0x1
0x52f PUSH1 0xa0
0x531 PUSH1 0x2
0x533 EXP
0x534 SUB
0x535 SWAP1
0x536 DUP2
0x537 AND
0x538 SWAP2
0x539 AND
0x53a EQ
0x53b PUSH2 0x543
0x53e JUMPI
---
0x528: JUMPDEST 
0x529: V524 = 0x1
0x52b: V525 = S[0x1]
0x52c: V526 = CALLER
0x52d: V527 = 0x1
0x52f: V528 = 0xa0
0x531: V529 = 0x2
0x533: V530 = EXP 0x2 0xa0
0x534: V531 = SUB 0x10000000000000000000000000000000000000000 0x1
0x537: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V526
0x539: V533 = AND V525 0xffffffffffffffffffffffffffffffffffffffff
0x53a: V534 = EQ V533 V532
0x53b: V535 = 0x543
0x53e: JUMPI 0x543 V534
---
Entry stack: [V12, 0x18a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a]

================================

Block 0x53f
[0x53f:0x542]
---
Predecessors: [0x528]
Successors: []
---
0x53f PUSH1 0x0
0x541 DUP1
0x542 REVERT
---
0x53f: V536 = 0x0
0x542: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a]

================================

Block 0x543
[0x543:0x551]
---
Predecessors: [0x528]
Successors: [0x552, 0x556]
---
0x543 JUMPDEST
0x544 PUSH1 0x3
0x546 SLOAD
0x547 PUSH3 0x15180
0x54b ADD
0x54c TIMESTAMP
0x54d GT
0x54e PUSH2 0x556
0x551 JUMPI
---
0x543: JUMPDEST 
0x544: V537 = 0x3
0x546: V538 = S[0x3]
0x547: V539 = 0x15180
0x54b: V540 = ADD 0x15180 V538
0x54c: V541 = TIMESTAMP
0x54d: V542 = GT V541 V540
0x54e: V543 = 0x556
0x551: JUMPI 0x556 V542
---
Entry stack: [V12, 0x18a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a]

================================

Block 0x552
[0x552:0x555]
---
Predecessors: [0x543]
Successors: []
---
0x552 PUSH1 0x0
0x554 DUP1
0x555 REVERT
---
0x552: V544 = 0x0
0x555: REVERT 0x0 0x0
---
Entry stack: [V12, 0x18a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a]

================================

Block 0x556
[0x556:0x563]
---
Predecessors: [0x543]
Successors: []
---
0x556 JUMPDEST
0x557 PUSH1 0x1
0x559 SLOAD
0x55a PUSH1 0x1
0x55c PUSH1 0xa0
0x55e PUSH1 0x2
0x560 EXP
0x561 SUB
0x562 AND
0x563 SELFDESTRUCT
---
0x556: JUMPDEST 
0x557: V545 = 0x1
0x559: V546 = S[0x1]
0x55a: V547 = 0x1
0x55c: V548 = 0xa0
0x55e: V549 = 0x2
0x560: V550 = EXP 0x2 0xa0
0x561: V551 = SUB 0x10000000000000000000000000000000000000000 0x1
0x562: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x563: SELFDESTRUCT V552
---
Entry stack: [V12, 0x18a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x18a]

================================

Block 0x564
[0x564:0x565]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x564 JUMPDEST
0x565 JUMP
---
0x564: JUMPDEST 
0x565: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x566
[0x566:0x574]
---
Predecessors: [0x261]
Successors: [0x1c4]
---
0x566 JUMPDEST
0x567 PUSH1 0x4
0x569 SLOAD
0x56a PUSH1 0x1
0x56c PUSH1 0xa0
0x56e PUSH1 0x2
0x570 EXP
0x571 SUB
0x572 AND
0x573 DUP2
0x574 JUMP
---
0x566: JUMPDEST 
0x567: V553 = 0x4
0x569: V554 = S[0x4]
0x56a: V555 = 0x1
0x56c: V556 = 0xa0
0x56e: V557 = 0x2
0x570: V558 = EXP 0x2 0xa0
0x571: V559 = SUB 0x10000000000000000000000000000000000000000 0x1
0x572: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff V554
0x574: JUMP 0x1c4
---
Entry stack: [V12, 0x1c4]
Stack pops: 1
Stack additions: [S0, V560]
Exit stack: [V12, 0x1c4, V560]

================================

Block 0x575
[0x575:0x583]
---
Predecessors: [0x290]
Successors: [0x1c4]
---
0x575 JUMPDEST
0x576 PUSH1 0x0
0x578 SLOAD
0x579 PUSH1 0x1
0x57b PUSH1 0xa0
0x57d PUSH1 0x2
0x57f EXP
0x580 SUB
0x581 AND
0x582 DUP2
0x583 JUMP
---
0x575: JUMPDEST 
0x576: V561 = 0x0
0x578: V562 = S[0x0]
0x579: V563 = 0x1
0x57b: V564 = 0xa0
0x57d: V565 = 0x2
0x57f: V566 = EXP 0x2 0xa0
0x580: V567 = SUB 0x10000000000000000000000000000000000000000 0x1
0x581: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0x583: JUMP 0x1c4
---
Entry stack: [V12, 0x1c4]
Stack pops: 1
Stack additions: [S0, V568]
Exit stack: [V12, 0x1c4, V568]

================================

Block 0x584
[0x584:0x589]
---
Predecessors: [0x2bf]
Successors: [0x19f]
---
0x584 JUMPDEST
0x585 PUSH1 0x5
0x587 SLOAD
0x588 DUP2
0x589 JUMP
---
0x584: JUMPDEST 
0x585: V569 = 0x5
0x587: V570 = S[0x5]
0x589: JUMP 0x19f
---
Entry stack: [V12, 0x19f]
Stack pops: 1
Stack additions: [S0, V570]
Exit stack: [V12, 0x19f, V570]

================================

Block 0x58a
[0x58a:0x5bb]
---
Predecessors: []
Successors: []
---
0x58a STOP
0x58b LOG1
0x58c PUSH6 0x627a7a723058
0x593 SHA3
0x594 MISSING 0x48
0x595 PC
0x596 EXTCODESIZE
0x597 MISSING 0xec
0x598 EXTCODESIZE
0x599 ISZERO
0x59a MISSING 0xe8
0x59b ORIGIN
0x59c MISSING 0xe8
0x59d MISSING 0xa6
0x59e CALL
0x59f REVERT
0x5a0 MISSING 0x28
0x5a1 PUSH26 0x2add7ef2187df415e8dcabed15c58b63a0e20029
---
0x58a: STOP 
0x58b: LOG S0 S1 S2
0x58c: V571 = 0x627a7a723058
0x593: V572 = SHA3 0x627a7a723058 S3
0x594: MISSING 0x48
0x595: V573 = PC
0x596: V574 = EXTCODESIZE V573
0x597: MISSING 0xec
0x598: V575 = EXTCODESIZE S0
0x599: V576 = ISZERO V575
0x59a: MISSING 0xe8
0x59b: V577 = ORIGIN
0x59c: MISSING 0xe8
0x59d: MISSING 0xa6
0x59e: V578 = CALL S0 S1 S2 S3 S4 S5 S6
0x59f: REVERT V578 S7
0x5a0: MISSING 0x28
0x5a1: V579 = 0x2add7ef2187df415e8dcabed15c58b63a0e20029
---
Entry stack: []
Stack pops: 0
Stack additions: [V572, V574, V576, V577, 0x2add7ef2187df415e8dcabed15c58b63a0e20029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3a0d68f
Entry block: 0x18c
Exit block: 0x19f
Body: 0x18c, 0x193, 0x197, 0x19f, 0x2d9

Function 1:
Public function signature: 0x38af3eed
Entry block: 0x1b1
Exit block: 0x1c4
Body: 0x1b1, 0x1b8, 0x1bc, 0x1c4, 0x2df

Function 2:
Public function signature: 0x78f45340
Entry block: 0x1e0
Exit block: 0x19f
Body: 0x19f, 0x1e0, 0x1e7, 0x1eb, 0x2ee

Function 3:
Public function signature: 0x79061e96
Entry block: 0x205
Exit block: 0x218
Body: 0x205, 0x20c, 0x210, 0x218, 0x2f4, 0x316, 0x355, 0x376, 0x377, 0x37c

Function 4:
Public function signature: 0xa94510ca
Entry block: 0x22c
Exit block: 0x18a
Body: 0x187, 0x18a, 0x22c, 0x233, 0x237, 0x380, 0x38e, 0x392, 0x3e9, 0x3ed, 0x3fa, 0x3fe, 0x416, 0x47a, 0x47e, 0x48b, 0x48f, 0x49f, 0x504, 0x508, 0x515, 0x519, 0x524, 0x525

Function 5:
Public function signature: 0xbd865d29
Entry block: 0x241
Exit block: 0x552
Body: 0x241, 0x248, 0x24c, 0x528, 0x53f, 0x543, 0x552, 0x556

Function 6:
Public function signature: 0xbd9215f4
Entry block: 0x256
Exit block: 0x1c4
Body: 0x1c4, 0x256, 0x25d, 0x261, 0x566

Function 7:
Public function signature: 0xcf1259d8
Entry block: 0x285
Exit block: 0x1c4
Body: 0x1c4, 0x285, 0x28c, 0x290, 0x575

Function 8:
Public function signature: 0xe5c60091
Entry block: 0x2b4
Exit block: 0x19f
Body: 0x19f, 0x2b4, 0x2bb, 0x2bf, 0x584

Function 9:
Public fallback function
Entry block: 0x7d
Exit block: 0x18a
Body: 0x7d, 0x81, 0x8e, 0x92, 0x9c, 0xa0, 0xf7, 0xfb, 0x108, 0x10c, 0x120, 0x124, 0x136, 0x15a, 0x187, 0x18a

