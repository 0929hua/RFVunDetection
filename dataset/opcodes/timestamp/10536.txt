Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x10c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x10c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x10c
0xa: JUMPI 0x10c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x14d]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x101e1f2c
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x14d
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x101e1f2c
0x20: V14 = EQ V12 0x101e1f2c
0x21: V15 = 0x14d
0x24: JUMPI 0x14d V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x171]
---
0x25 DUP1
0x26 PUSH4 0x2b68b9c6
0x2b EQ
0x2c PUSH2 0x171
0x2f JUMPI
---
0x26: V16 = 0x2b68b9c6
0x2b: V17 = EQ 0x2b68b9c6 V12
0x2c: V18 = 0x171
0x2f: JUMPI 0x171 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x186]
---
0x30 DUP1
0x31 PUSH4 0x2e1a7d4d
0x36 EQ
0x37 PUSH2 0x186
0x3a JUMPI
---
0x31: V19 = 0x2e1a7d4d
0x36: V20 = EQ 0x2e1a7d4d V12
0x37: V21 = 0x186
0x3a: JUMPI 0x186 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x19e]
---
0x3b DUP1
0x3c PUSH4 0x39c2f6a0
0x41 EQ
0x42 PUSH2 0x19e
0x45 JUMPI
---
0x3c: V22 = 0x39c2f6a0
0x41: V23 = EQ 0x39c2f6a0 V12
0x42: V24 = 0x19e
0x45: JUMPI 0x19e V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1bf]
---
0x46 DUP1
0x47 PUSH4 0x3c745ad5
0x4c EQ
0x4d PUSH2 0x1bf
0x50 JUMPI
---
0x47: V25 = 0x3c745ad5
0x4c: V26 = EQ 0x3c745ad5 V12
0x4d: V27 = 0x1bf
0x50: JUMPI 0x1bf V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1e4]
---
0x51 DUP1
0x52 PUSH4 0x5f238402
0x57 EQ
0x58 PUSH2 0x1e4
0x5b JUMPI
---
0x52: V28 = 0x5f238402
0x57: V29 = EQ 0x5f238402 V12
0x58: V30 = 0x1e4
0x5b: JUMPI 0x1e4 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x209]
---
0x5c DUP1
0x5d PUSH4 0x704b6c02
0x62 EQ
0x63 PUSH2 0x209
0x66 JUMPI
---
0x5d: V31 = 0x704b6c02
0x62: V32 = EQ 0x704b6c02 V12
0x63: V33 = 0x209
0x66: JUMPI 0x209 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x22a]
---
0x67 DUP1
0x68 PUSH4 0x7826bfa8
0x6d EQ
0x6e PUSH2 0x22a
0x71 JUMPI
---
0x68: V34 = 0x7826bfa8
0x6d: V35 = EQ 0x7826bfa8 V12
0x6e: V36 = 0x22a
0x71: JUMPI 0x22a V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x259]
---
0x72 DUP1
0x73 PUSH4 0x79ba5097
0x78 EQ
0x79 PUSH2 0x259
0x7c JUMPI
---
0x73: V37 = 0x79ba5097
0x78: V38 = EQ 0x79ba5097 V12
0x79: V39 = 0x259
0x7c: JUMPI 0x259 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x26e]
---
0x7d DUP1
0x7e PUSH4 0x8a87b5c5
0x83 EQ
0x84 PUSH2 0x26e
0x87 JUMPI
---
0x7e: V40 = 0x8a87b5c5
0x83: V41 = EQ 0x8a87b5c5 V12
0x84: V42 = 0x26e
0x87: JUMPI 0x26e V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x293]
---
0x88 DUP1
0x89 PUSH4 0x8da5cb5b
0x8e EQ
0x8f PUSH2 0x293
0x92 JUMPI
---
0x89: V43 = 0x8da5cb5b
0x8e: V44 = EQ 0x8da5cb5b V12
0x8f: V45 = 0x293
0x92: JUMPI 0x293 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2c2]
---
0x93 DUP1
0x94 PUSH4 0x94081387
0x99 EQ
0x9a PUSH2 0x2c2
0x9d JUMPI
---
0x94: V46 = 0x94081387
0x99: V47 = EQ 0x94081387 V12
0x9a: V48 = 0x2c2
0x9d: JUMPI 0x2c2 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2da]
---
0x9e DUP1
0x9f PUSH4 0xb5ed298a
0xa4 EQ
0xa5 PUSH2 0x2da
0xa8 JUMPI
---
0x9f: V49 = 0xb5ed298a
0xa4: V50 = EQ 0xb5ed298a V12
0xa5: V51 = 0x2da
0xa8: JUMPI 0x2da V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x2fb]
---
0xa9 DUP1
0xaa PUSH4 0xb6253539
0xaf EQ
0xb0 PUSH2 0x2fb
0xb3 JUMPI
---
0xaa: V52 = 0xb6253539
0xaf: V53 = EQ 0xb6253539 V12
0xb0: V54 = 0x2fb
0xb3: JUMPI 0x2fb V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x322]
---
0xb4 DUP1
0xb5 PUSH4 0xb6f98e53
0xba EQ
0xbb PUSH2 0x322
0xbe JUMPI
---
0xb5: V55 = 0xb6f98e53
0xba: V56 = EQ 0xb6f98e53 V12
0xbb: V57 = 0x322
0xbe: JUMPI 0x322 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x349]
---
0xbf DUP1
0xc0 PUSH4 0xcb6d0c5f
0xc5 EQ
0xc6 PUSH2 0x349
0xc9 JUMPI
---
0xc0: V58 = 0xcb6d0c5f
0xc5: V59 = EQ 0xcb6d0c5f V12
0xc6: V60 = 0x349
0xc9: JUMPI 0x349 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x36e]
---
0xca DUP1
0xcb PUSH4 0xd153b60c
0xd0 EQ
0xd1 PUSH2 0x36e
0xd4 JUMPI
---
0xcb: V61 = 0xd153b60c
0xd0: V62 = EQ 0xd153b60c V12
0xd1: V63 = 0x36e
0xd4: JUMPI 0x36e V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x39d]
---
0xd5 DUP1
0xd6 PUSH4 0xe1a27ad3
0xdb EQ
0xdc PUSH2 0x39d
0xdf JUMPI
---
0xd6: V64 = 0xe1a27ad3
0xdb: V65 = EQ 0xe1a27ad3 V12
0xdc: V66 = 0x39d
0xdf: JUMPI 0x39d V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x3c4]
---
0xe0 DUP1
0xe1 PUSH4 0xf07edbf4
0xe6 EQ
0xe7 PUSH2 0x3c4
0xea JUMPI
---
0xe1: V67 = 0xf07edbf4
0xe6: V68 = EQ 0xf07edbf4 V12
0xe7: V69 = 0x3c4
0xea: JUMPI 0x3c4 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x3e9]
---
0xeb DUP1
0xec PUSH4 0xf1204db6
0xf1 EQ
0xf2 PUSH2 0x3e9
0xf5 JUMPI
---
0xec: V70 = 0xf1204db6
0xf1: V71 = EQ 0xf1204db6 V12
0xf2: V72 = 0x3e9
0xf5: JUMPI 0x3e9 V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x40e]
---
0xf6 DUP1
0xf7 PUSH4 0xf298083b
0xfc EQ
0xfd PUSH2 0x40e
0x100 JUMPI
---
0xf7: V73 = 0xf298083b
0xfc: V74 = EQ 0xf298083b V12
0xfd: V75 = 0x40e
0x100: JUMPI 0x40e V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0x42f]
---
0x101 DUP1
0x102 PUSH4 0xf851a440
0x107 EQ
0x108 PUSH2 0x42f
0x10b JUMPI
---
0x102: V76 = 0xf851a440
0x107: V77 = EQ 0xf851a440 V12
0x108: V78 = 0x42f
0x10b: JUMPI 0x42f V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x10c]
---
Predecessors: [0x0, 0x101]
Successors: [0x10d]
---
0x10c JUMPDEST
---
0x10c: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10d
[0x10d:0x14a]
---
Predecessors: [0x10c]
Successors: [0x14b]
---
0x10d JUMPDEST
0x10e CALLER
0x10f PUSH1 0x1
0x111 PUSH1 0xa0
0x113 PUSH1 0x2
0x115 EXP
0x116 SUB
0x117 AND
0x118 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x139 CALLVALUE
0x13a PUSH1 0x40
0x13c MLOAD
0x13d SWAP1
0x13e DUP2
0x13f MSTORE
0x140 PUSH1 0x20
0x142 ADD
0x143 PUSH1 0x40
0x145 MLOAD
0x146 DUP1
0x147 SWAP2
0x148 SUB
0x149 SWAP1
0x14a LOG2
---
0x10d: JUMPDEST 
0x10e: V79 = CALLER
0x10f: V80 = 0x1
0x111: V81 = 0xa0
0x113: V82 = 0x2
0x115: V83 = EXP 0x2 0xa0
0x116: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0x117: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x118: V86 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x139: V87 = CALLVALUE
0x13a: V88 = 0x40
0x13c: V89 = M[0x40]
0x13f: M[V89] = V87
0x140: V90 = 0x20
0x142: V91 = ADD 0x20 V89
0x143: V92 = 0x40
0x145: V93 = M[0x40]
0x148: V94 = SUB V91 V93
0x14a: LOG V93 V94 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V85
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14b
[0x14b:0x14c]
---
Predecessors: [0x10d, 0x52b, 0x5ae, 0x5e2, 0x639, 0x6ad, 0x7f0, 0x8d9, 0x905, 0xa67]
Successors: []
---
0x14b JUMPDEST
0x14c STOP
---
0x14b: JUMPDEST 
0x14c: STOP 
---
Entry stack: [V12, {0x14b, 0x30e}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x14b, 0x30e}, S1, S0]

================================

Block 0x14d
[0x14d:0x153]
---
Predecessors: [0xb]
Successors: [0x154, 0x158]
---
0x14d JUMPDEST
0x14e CALLVALUE
0x14f ISZERO
0x150 PUSH2 0x158
0x153 JUMPI
---
0x14d: JUMPDEST 
0x14e: V95 = CALLVALUE
0x14f: V96 = ISZERO V95
0x150: V97 = 0x158
0x153: JUMPI 0x158 V96
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x154
[0x154:0x157]
---
Predecessors: [0x14d]
Successors: []
---
0x154 PUSH1 0x0
0x156 DUP1
0x157 REVERT
---
0x154: V98 = 0x0
0x157: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x158
[0x158:0x16e]
---
Predecessors: [0x14d]
Successors: [0x45e]
---
0x158 JUMPDEST
0x159 PUSH2 0x14b
0x15c PUSH1 0x4
0x15e CALLDATALOAD
0x15f PUSH1 0x24
0x161 CALLDATALOAD
0x162 PUSH1 0x44
0x164 CALLDATALOAD
0x165 PUSH1 0x64
0x167 CALLDATALOAD
0x168 PUSH1 0x84
0x16a CALLDATALOAD
0x16b PUSH2 0x45e
0x16e JUMP
---
0x158: JUMPDEST 
0x159: V99 = 0x14b
0x15c: V100 = 0x4
0x15e: V101 = CALLDATALOAD 0x4
0x15f: V102 = 0x24
0x161: V103 = CALLDATALOAD 0x24
0x162: V104 = 0x44
0x164: V105 = CALLDATALOAD 0x44
0x165: V106 = 0x64
0x167: V107 = CALLDATALOAD 0x64
0x168: V108 = 0x84
0x16a: V109 = CALLDATALOAD 0x84
0x16b: V110 = 0x45e
0x16e: JUMP 0x45e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14b, V101, V103, V105, V107, V109]
Exit stack: [V12, 0x14b, V101, V103, V105, V107, V109]

================================

Block 0x16f
[0x16f:0x170]
---
Predecessors: []
Successors: []
---
0x16f JUMPDEST
0x170 STOP
---
0x16f: JUMPDEST 
0x170: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x171
[0x171:0x177]
---
Predecessors: [0x25]
Successors: [0x178, 0x17c]
---
0x171 JUMPDEST
0x172 CALLVALUE
0x173 ISZERO
0x174 PUSH2 0x17c
0x177 JUMPI
---
0x171: JUMPDEST 
0x172: V111 = CALLVALUE
0x173: V112 = ISZERO V111
0x174: V113 = 0x17c
0x177: JUMPI 0x17c V112
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x178
[0x178:0x17b]
---
Predecessors: [0x171]
Successors: []
---
0x178 PUSH1 0x0
0x17a DUP1
0x17b REVERT
---
0x178: V114 = 0x0
0x17b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17c
[0x17c:0x183]
---
Predecessors: [0x171]
Successors: [0x532]
---
0x17c JUMPDEST
0x17d PUSH2 0x14b
0x180 PUSH2 0x532
0x183 JUMP
---
0x17c: JUMPDEST 
0x17d: V115 = 0x14b
0x180: V116 = 0x532
0x183: JUMP 0x532
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14b]
Exit stack: [V12, 0x14b]

================================

Block 0x184
[0x184:0x185]
---
Predecessors: []
Successors: []
---
0x184 JUMPDEST
0x185 STOP
---
0x184: JUMPDEST 
0x185: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x186
[0x186:0x18c]
---
Predecessors: [0x30]
Successors: [0x18d, 0x191]
---
0x186 JUMPDEST
0x187 CALLVALUE
0x188 ISZERO
0x189 PUSH2 0x191
0x18c JUMPI
---
0x186: JUMPDEST 
0x187: V117 = CALLVALUE
0x188: V118 = ISZERO V117
0x189: V119 = 0x191
0x18c: JUMPI 0x191 V118
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18d
[0x18d:0x190]
---
Predecessors: [0x186]
Successors: []
---
0x18d PUSH1 0x0
0x18f DUP1
0x190 REVERT
---
0x18d: V120 = 0x0
0x190: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x191
[0x191:0x19b]
---
Predecessors: [0x186]
Successors: [0x55e]
---
0x191 JUMPDEST
0x192 PUSH2 0x14b
0x195 PUSH1 0x4
0x197 CALLDATALOAD
0x198 PUSH2 0x55e
0x19b JUMP
---
0x191: JUMPDEST 
0x192: V121 = 0x14b
0x195: V122 = 0x4
0x197: V123 = CALLDATALOAD 0x4
0x198: V124 = 0x55e
0x19b: JUMP 0x55e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14b, V123]
Exit stack: [V12, 0x14b, V123]

================================

Block 0x19c
[0x19c:0x19d]
---
Predecessors: []
Successors: []
---
0x19c JUMPDEST
0x19d STOP
---
0x19c: JUMPDEST 
0x19d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x19e
[0x19e:0x1a4]
---
Predecessors: [0x3b]
Successors: [0x1a5, 0x1a9]
---
0x19e JUMPDEST
0x19f CALLVALUE
0x1a0 ISZERO
0x1a1 PUSH2 0x1a9
0x1a4 JUMPI
---
0x19e: JUMPDEST 
0x19f: V125 = CALLVALUE
0x1a0: V126 = ISZERO V125
0x1a1: V127 = 0x1a9
0x1a4: JUMPI 0x1a9 V126
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a5
[0x1a5:0x1a8]
---
Predecessors: [0x19e]
Successors: []
---
0x1a5 PUSH1 0x0
0x1a7 DUP1
0x1a8 REVERT
---
0x1a5: V128 = 0x0
0x1a8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a9
[0x1a9:0x1bc]
---
Predecessors: [0x19e]
Successors: [0x5b1]
---
0x1a9 JUMPDEST
0x1aa PUSH2 0x14b
0x1ad PUSH1 0x4
0x1af CALLDATALOAD
0x1b0 PUSH1 0x24
0x1b2 CALLDATALOAD
0x1b3 PUSH1 0x44
0x1b5 CALLDATALOAD
0x1b6 PUSH1 0x64
0x1b8 CALLDATALOAD
0x1b9 PUSH2 0x5b1
0x1bc JUMP
---
0x1a9: JUMPDEST 
0x1aa: V129 = 0x14b
0x1ad: V130 = 0x4
0x1af: V131 = CALLDATALOAD 0x4
0x1b0: V132 = 0x24
0x1b2: V133 = CALLDATALOAD 0x24
0x1b3: V134 = 0x44
0x1b5: V135 = CALLDATALOAD 0x44
0x1b6: V136 = 0x64
0x1b8: V137 = CALLDATALOAD 0x64
0x1b9: V138 = 0x5b1
0x1bc: JUMP 0x5b1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14b, V131, V133, V135, V137]
Exit stack: [V12, 0x14b, V131, V133, V135, V137]

================================

Block 0x1bd
[0x1bd:0x1be]
---
Predecessors: []
Successors: []
---
0x1bd JUMPDEST
0x1be STOP
---
0x1bd: JUMPDEST 
0x1be: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1bf
[0x1bf:0x1c5]
---
Predecessors: [0x46]
Successors: [0x1c6, 0x1ca]
---
0x1bf JUMPDEST
0x1c0 CALLVALUE
0x1c1 ISZERO
0x1c2 PUSH2 0x1ca
0x1c5 JUMPI
---
0x1bf: JUMPDEST 
0x1c0: V139 = CALLVALUE
0x1c1: V140 = ISZERO V139
0x1c2: V141 = 0x1ca
0x1c5: JUMPI 0x1ca V140
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c6
[0x1c6:0x1c9]
---
Predecessors: [0x1bf]
Successors: []
---
0x1c6 PUSH1 0x0
0x1c8 DUP1
0x1c9 REVERT
---
0x1c6: V142 = 0x0
0x1c9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ca
[0x1ca:0x1d1]
---
Predecessors: [0x1bf]
Successors: [0x5e8]
---
0x1ca JUMPDEST
0x1cb PUSH2 0x1d2
0x1ce PUSH2 0x5e8
0x1d1 JUMP
---
0x1ca: JUMPDEST 
0x1cb: V143 = 0x1d2
0x1ce: V144 = 0x5e8
0x1d1: JUMP 0x5e8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d2]
Exit stack: [V12, 0x1d2]

================================

Block 0x1d2
[0x1d2:0x1e3]
---
Predecessors: [0x5e8, 0x5ee, 0x6af, 0x908, 0xa16, 0xa1c]
Successors: []
---
0x1d2 JUMPDEST
0x1d3 PUSH1 0x40
0x1d5 MLOAD
0x1d6 SWAP1
0x1d7 DUP2
0x1d8 MSTORE
0x1d9 PUSH1 0x20
0x1db ADD
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP1
0x1e0 SWAP2
0x1e1 SUB
0x1e2 SWAP1
0x1e3 RETURN
---
0x1d2: JUMPDEST 
0x1d3: V145 = 0x40
0x1d5: V146 = M[0x40]
0x1d8: M[V146] = S0
0x1d9: V147 = 0x20
0x1db: V148 = ADD 0x20 V146
0x1dc: V149 = 0x40
0x1de: V150 = M[0x40]
0x1e1: V151 = SUB V148 V150
0x1e3: RETURN V150 V151
---
Entry stack: [V12, 0x1d2, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1d2]

================================

Block 0x1e4
[0x1e4:0x1ea]
---
Predecessors: [0x51]
Successors: [0x1eb, 0x1ef]
---
0x1e4 JUMPDEST
0x1e5 CALLVALUE
0x1e6 ISZERO
0x1e7 PUSH2 0x1ef
0x1ea JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V152 = CALLVALUE
0x1e6: V153 = ISZERO V152
0x1e7: V154 = 0x1ef
0x1ea: JUMPI 0x1ef V153
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1eb
[0x1eb:0x1ee]
---
Predecessors: [0x1e4]
Successors: []
---
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee REVERT
---
0x1eb: V155 = 0x0
0x1ee: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ef
[0x1ef:0x1f6]
---
Predecessors: [0x1e4]
Successors: [0x5ee]
---
0x1ef JUMPDEST
0x1f0 PUSH2 0x1d2
0x1f3 PUSH2 0x5ee
0x1f6 JUMP
---
0x1ef: JUMPDEST 
0x1f0: V156 = 0x1d2
0x1f3: V157 = 0x5ee
0x1f6: JUMP 0x5ee
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d2]
Exit stack: [V12, 0x1d2]

================================

Block 0x1f7
[0x1f7:0x208]
---
Predecessors: []
Successors: []
---
0x1f7 JUMPDEST
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb SWAP1
0x1fc DUP2
0x1fd MSTORE
0x1fe PUSH1 0x20
0x200 ADD
0x201 PUSH1 0x40
0x203 MLOAD
0x204 DUP1
0x205 SWAP2
0x206 SUB
0x207 SWAP1
0x208 RETURN
---
0x1f7: JUMPDEST 
0x1f8: V158 = 0x40
0x1fa: V159 = M[0x40]
0x1fd: M[V159] = S0
0x1fe: V160 = 0x20
0x200: V161 = ADD 0x20 V159
0x201: V162 = 0x40
0x203: V163 = M[0x40]
0x206: V164 = SUB V161 V163
0x208: RETURN V163 V164
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x209
[0x209:0x20f]
---
Predecessors: [0x5c]
Successors: [0x210, 0x214]
---
0x209 JUMPDEST
0x20a CALLVALUE
0x20b ISZERO
0x20c PUSH2 0x214
0x20f JUMPI
---
0x209: JUMPDEST 
0x20a: V165 = CALLVALUE
0x20b: V166 = ISZERO V165
0x20c: V167 = 0x214
0x20f: JUMPI 0x214 V166
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x210
[0x210:0x213]
---
Predecessors: [0x209]
Successors: []
---
0x210 PUSH1 0x0
0x212 DUP1
0x213 REVERT
---
0x210: V168 = 0x0
0x213: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x214
[0x214:0x227]
---
Predecessors: [0x209]
Successors: [0x5f4]
---
0x214 JUMPDEST
0x215 PUSH2 0x14b
0x218 PUSH1 0x1
0x21a PUSH1 0xa0
0x21c PUSH1 0x2
0x21e EXP
0x21f SUB
0x220 PUSH1 0x4
0x222 CALLDATALOAD
0x223 AND
0x224 PUSH2 0x5f4
0x227 JUMP
---
0x214: JUMPDEST 
0x215: V169 = 0x14b
0x218: V170 = 0x1
0x21a: V171 = 0xa0
0x21c: V172 = 0x2
0x21e: V173 = EXP 0x2 0xa0
0x21f: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x220: V175 = 0x4
0x222: V176 = CALLDATALOAD 0x4
0x223: V177 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0x224: V178 = 0x5f4
0x227: JUMP 0x5f4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14b, V177]
Exit stack: [V12, 0x14b, V177]

================================

Block 0x228
[0x228:0x229]
---
Predecessors: []
Successors: []
---
0x228 JUMPDEST
0x229 STOP
---
0x228: JUMPDEST 
0x229: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x22a
[0x22a:0x230]
---
Predecessors: [0x67]
Successors: [0x231, 0x235]
---
0x22a JUMPDEST
0x22b CALLVALUE
0x22c ISZERO
0x22d PUSH2 0x235
0x230 JUMPI
---
0x22a: JUMPDEST 
0x22b: V179 = CALLVALUE
0x22c: V180 = ISZERO V179
0x22d: V181 = 0x235
0x230: JUMPI 0x235 V180
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x231
[0x231:0x234]
---
Predecessors: [0x22a]
Successors: []
---
0x231 PUSH1 0x0
0x233 DUP1
0x234 REVERT
---
0x231: V182 = 0x0
0x234: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x235
[0x235:0x23c]
---
Predecessors: [0x22a]
Successors: [0x63c]
---
0x235 JUMPDEST
0x236 PUSH2 0x23d
0x239 PUSH2 0x63c
0x23c JUMP
---
0x235: JUMPDEST 
0x236: V183 = 0x23d
0x239: V184 = 0x63c
0x23c: JUMP 0x63c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x23d]
Exit stack: [V12, 0x23d]

================================

Block 0x23d
[0x23d:0x258]
---
Predecessors: [0x63c, 0x6b5, 0x90e, 0xa6a]
Successors: []
---
0x23d JUMPDEST
0x23e PUSH1 0x40
0x240 MLOAD
0x241 PUSH1 0x1
0x243 PUSH1 0xa0
0x245 PUSH1 0x2
0x247 EXP
0x248 SUB
0x249 SWAP1
0x24a SWAP2
0x24b AND
0x24c DUP2
0x24d MSTORE
0x24e PUSH1 0x20
0x250 ADD
0x251 PUSH1 0x40
0x253 MLOAD
0x254 DUP1
0x255 SWAP2
0x256 SUB
0x257 SWAP1
0x258 RETURN
---
0x23d: JUMPDEST 
0x23e: V185 = 0x40
0x240: V186 = M[0x40]
0x241: V187 = 0x1
0x243: V188 = 0xa0
0x245: V189 = 0x2
0x247: V190 = EXP 0x2 0xa0
0x248: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24b: V192 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x24d: M[V186] = V192
0x24e: V193 = 0x20
0x250: V194 = ADD 0x20 V186
0x251: V195 = 0x40
0x253: V196 = M[0x40]
0x256: V197 = SUB V194 V196
0x258: RETURN V196 V197
---
Entry stack: [V12, 0x23d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x23d]

================================

Block 0x259
[0x259:0x25f]
---
Predecessors: [0x72]
Successors: [0x260, 0x264]
---
0x259 JUMPDEST
0x25a CALLVALUE
0x25b ISZERO
0x25c PUSH2 0x264
0x25f JUMPI
---
0x259: JUMPDEST 
0x25a: V198 = CALLVALUE
0x25b: V199 = ISZERO V198
0x25c: V200 = 0x264
0x25f: JUMPI 0x264 V199
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x259]
Successors: []
---
0x260 PUSH1 0x0
0x262 DUP1
0x263 REVERT
---
0x260: V201 = 0x0
0x263: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x264
[0x264:0x26b]
---
Predecessors: [0x259]
Successors: [0x64b]
---
0x264 JUMPDEST
0x265 PUSH2 0x14b
0x268 PUSH2 0x64b
0x26b JUMP
---
0x264: JUMPDEST 
0x265: V202 = 0x14b
0x268: V203 = 0x64b
0x26b: JUMP 0x64b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14b]
Exit stack: [V12, 0x14b]

================================

Block 0x26c
[0x26c:0x26d]
---
Predecessors: []
Successors: []
---
0x26c JUMPDEST
0x26d STOP
---
0x26c: JUMPDEST 
0x26d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x26e
[0x26e:0x274]
---
Predecessors: [0x7d]
Successors: [0x275, 0x279]
---
0x26e JUMPDEST
0x26f CALLVALUE
0x270 ISZERO
0x271 PUSH2 0x279
0x274 JUMPI
---
0x26e: JUMPDEST 
0x26f: V204 = CALLVALUE
0x270: V205 = ISZERO V204
0x271: V206 = 0x279
0x274: JUMPI 0x279 V205
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x275
[0x275:0x278]
---
Predecessors: [0x26e]
Successors: []
---
0x275 PUSH1 0x0
0x277 DUP1
0x278 REVERT
---
0x275: V207 = 0x0
0x278: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x279
[0x279:0x280]
---
Predecessors: [0x26e]
Successors: [0x6af]
---
0x279 JUMPDEST
0x27a PUSH2 0x1d2
0x27d PUSH2 0x6af
0x280 JUMP
---
0x279: JUMPDEST 
0x27a: V208 = 0x1d2
0x27d: V209 = 0x6af
0x280: JUMP 0x6af
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d2]
Exit stack: [V12, 0x1d2]

================================

Block 0x281
[0x281:0x292]
---
Predecessors: []
Successors: []
---
0x281 JUMPDEST
0x282 PUSH1 0x40
0x284 MLOAD
0x285 SWAP1
0x286 DUP2
0x287 MSTORE
0x288 PUSH1 0x20
0x28a ADD
0x28b PUSH1 0x40
0x28d MLOAD
0x28e DUP1
0x28f SWAP2
0x290 SUB
0x291 SWAP1
0x292 RETURN
---
0x281: JUMPDEST 
0x282: V210 = 0x40
0x284: V211 = M[0x40]
0x287: M[V211] = S0
0x288: V212 = 0x20
0x28a: V213 = ADD 0x20 V211
0x28b: V214 = 0x40
0x28d: V215 = M[0x40]
0x290: V216 = SUB V213 V215
0x292: RETURN V215 V216
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x293
[0x293:0x299]
---
Predecessors: [0x88]
Successors: [0x29a, 0x29e]
---
0x293 JUMPDEST
0x294 CALLVALUE
0x295 ISZERO
0x296 PUSH2 0x29e
0x299 JUMPI
---
0x293: JUMPDEST 
0x294: V217 = CALLVALUE
0x295: V218 = ISZERO V217
0x296: V219 = 0x29e
0x299: JUMPI 0x29e V218
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29a
[0x29a:0x29d]
---
Predecessors: [0x293]
Successors: []
---
0x29a PUSH1 0x0
0x29c DUP1
0x29d REVERT
---
0x29a: V220 = 0x0
0x29d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29e
[0x29e:0x2a5]
---
Predecessors: [0x293]
Successors: [0x6b5]
---
0x29e JUMPDEST
0x29f PUSH2 0x23d
0x2a2 PUSH2 0x6b5
0x2a5 JUMP
---
0x29e: JUMPDEST 
0x29f: V221 = 0x23d
0x2a2: V222 = 0x6b5
0x2a5: JUMP 0x6b5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x23d]
Exit stack: [V12, 0x23d]

================================

Block 0x2a6
[0x2a6:0x2c1]
---
Predecessors: []
Successors: []
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x40
0x2a9 MLOAD
0x2aa PUSH1 0x1
0x2ac PUSH1 0xa0
0x2ae PUSH1 0x2
0x2b0 EXP
0x2b1 SUB
0x2b2 SWAP1
0x2b3 SWAP2
0x2b4 AND
0x2b5 DUP2
0x2b6 MSTORE
0x2b7 PUSH1 0x20
0x2b9 ADD
0x2ba PUSH1 0x40
0x2bc MLOAD
0x2bd DUP1
0x2be SWAP2
0x2bf SUB
0x2c0 SWAP1
0x2c1 RETURN
---
0x2a6: JUMPDEST 
0x2a7: V223 = 0x40
0x2a9: V224 = M[0x40]
0x2aa: V225 = 0x1
0x2ac: V226 = 0xa0
0x2ae: V227 = 0x2
0x2b0: V228 = EXP 0x2 0xa0
0x2b1: V229 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b4: V230 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2b6: M[V224] = V230
0x2b7: V231 = 0x20
0x2b9: V232 = ADD 0x20 V224
0x2ba: V233 = 0x40
0x2bc: V234 = M[0x40]
0x2bf: V235 = SUB V232 V234
0x2c1: RETURN V234 V235
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c2
[0x2c2:0x2c8]
---
Predecessors: [0x93]
Successors: [0x2c9, 0x2cd]
---
0x2c2 JUMPDEST
0x2c3 CALLVALUE
0x2c4 ISZERO
0x2c5 PUSH2 0x2cd
0x2c8 JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V236 = CALLVALUE
0x2c4: V237 = ISZERO V236
0x2c5: V238 = 0x2cd
0x2c8: JUMPI 0x2cd V237
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c9
[0x2c9:0x2cc]
---
Predecessors: [0x2c2]
Successors: []
---
0x2c9 PUSH1 0x0
0x2cb DUP1
0x2cc REVERT
---
0x2c9: V239 = 0x0
0x2cc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2cd
[0x2cd:0x2d7]
---
Predecessors: [0x2c2]
Successors: [0x6c4]
---
0x2cd JUMPDEST
0x2ce PUSH2 0x14b
0x2d1 PUSH1 0x4
0x2d3 CALLDATALOAD
0x2d4 PUSH2 0x6c4
0x2d7 JUMP
---
0x2cd: JUMPDEST 
0x2ce: V240 = 0x14b
0x2d1: V241 = 0x4
0x2d3: V242 = CALLDATALOAD 0x4
0x2d4: V243 = 0x6c4
0x2d7: JUMP 0x6c4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14b, V242]
Exit stack: [V12, 0x14b, V242]

================================

Block 0x2d8
[0x2d8:0x2d9]
---
Predecessors: []
Successors: []
---
0x2d8 JUMPDEST
0x2d9 STOP
---
0x2d8: JUMPDEST 
0x2d9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2da
[0x2da:0x2e0]
---
Predecessors: [0x9e]
Successors: [0x2e1, 0x2e5]
---
0x2da JUMPDEST
0x2db CALLVALUE
0x2dc ISZERO
0x2dd PUSH2 0x2e5
0x2e0 JUMPI
---
0x2da: JUMPDEST 
0x2db: V244 = CALLVALUE
0x2dc: V245 = ISZERO V244
0x2dd: V246 = 0x2e5
0x2e0: JUMPI 0x2e5 V245
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e1
[0x2e1:0x2e4]
---
Predecessors: [0x2da]
Successors: []
---
0x2e1 PUSH1 0x0
0x2e3 DUP1
0x2e4 REVERT
---
0x2e1: V247 = 0x0
0x2e4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e5
[0x2e5:0x2f8]
---
Predecessors: [0x2da]
Successors: [0x7ab]
---
0x2e5 JUMPDEST
0x2e6 PUSH2 0x14b
0x2e9 PUSH1 0x1
0x2eb PUSH1 0xa0
0x2ed PUSH1 0x2
0x2ef EXP
0x2f0 SUB
0x2f1 PUSH1 0x4
0x2f3 CALLDATALOAD
0x2f4 AND
0x2f5 PUSH2 0x7ab
0x2f8 JUMP
---
0x2e5: JUMPDEST 
0x2e6: V248 = 0x14b
0x2e9: V249 = 0x1
0x2eb: V250 = 0xa0
0x2ed: V251 = 0x2
0x2ef: V252 = EXP 0x2 0xa0
0x2f0: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f1: V254 = 0x4
0x2f3: V255 = CALLDATALOAD 0x4
0x2f4: V256 = AND V255 0xffffffffffffffffffffffffffffffffffffffff
0x2f5: V257 = 0x7ab
0x2f8: JUMP 0x7ab
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14b, V256]
Exit stack: [V12, 0x14b, V256]

================================

Block 0x2f9
[0x2f9:0x2fa]
---
Predecessors: []
Successors: []
---
0x2f9 JUMPDEST
0x2fa STOP
---
0x2f9: JUMPDEST 
0x2fa: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2fb
[0x2fb:0x301]
---
Predecessors: [0xa9]
Successors: [0x302, 0x306]
---
0x2fb JUMPDEST
0x2fc CALLVALUE
0x2fd ISZERO
0x2fe PUSH2 0x306
0x301 JUMPI
---
0x2fb: JUMPDEST 
0x2fc: V258 = CALLVALUE
0x2fd: V259 = ISZERO V258
0x2fe: V260 = 0x306
0x301: JUMPI 0x306 V259
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x302
[0x302:0x305]
---
Predecessors: [0x2fb]
Successors: []
---
0x302 PUSH1 0x0
0x304 DUP1
0x305 REVERT
---
0x302: V261 = 0x0
0x305: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x306
[0x306:0x30d]
---
Predecessors: [0x2fb]
Successors: [0x7f3]
---
0x306 JUMPDEST
0x307 PUSH2 0x30e
0x30a PUSH2 0x7f3
0x30d JUMP
---
0x306: JUMPDEST 
0x307: V262 = 0x30e
0x30a: V263 = 0x7f3
0x30d: JUMP 0x7f3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x30e]
Exit stack: [V12, 0x30e]

================================

Block 0x30e
[0x30e:0x321]
---
Predecessors: [0x5ae, 0x5e2, 0x8d9, 0x905]
Successors: []
---
0x30e JUMPDEST
0x30f PUSH1 0x40
0x311 MLOAD
0x312 SWAP1
0x313 ISZERO
0x314 ISZERO
0x315 DUP2
0x316 MSTORE
0x317 PUSH1 0x20
0x319 ADD
0x31a PUSH1 0x40
0x31c MLOAD
0x31d DUP1
0x31e SWAP2
0x31f SUB
0x320 SWAP1
0x321 RETURN
---
0x30e: JUMPDEST 
0x30f: V264 = 0x40
0x311: V265 = M[0x40]
0x313: V266 = ISZERO S0
0x314: V267 = ISZERO V266
0x316: M[V265] = V267
0x317: V268 = 0x20
0x319: V269 = ADD 0x20 V265
0x31a: V270 = 0x40
0x31c: V271 = M[0x40]
0x31f: V272 = SUB V269 V271
0x321: RETURN V271 V272
---
Entry stack: [V12, {0x14b, 0x30e}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, {0x14b, 0x30e}, S1]

================================

Block 0x322
[0x322:0x328]
---
Predecessors: [0xb4]
Successors: [0x329, 0x32d]
---
0x322 JUMPDEST
0x323 CALLVALUE
0x324 ISZERO
0x325 PUSH2 0x32d
0x328 JUMPI
---
0x322: JUMPDEST 
0x323: V273 = CALLVALUE
0x324: V274 = ISZERO V273
0x325: V275 = 0x32d
0x328: JUMPI 0x32d V274
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x329
[0x329:0x32c]
---
Predecessors: [0x322]
Successors: []
---
0x329 PUSH1 0x0
0x32b DUP1
0x32c REVERT
---
0x329: V276 = 0x0
0x32c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32d
[0x32d:0x334]
---
Predecessors: [0x322]
Successors: [0x8dc]
---
0x32d JUMPDEST
0x32e PUSH2 0x30e
0x331 PUSH2 0x8dc
0x334 JUMP
---
0x32d: JUMPDEST 
0x32e: V277 = 0x30e
0x331: V278 = 0x8dc
0x334: JUMP 0x8dc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x30e]
Exit stack: [V12, 0x30e]

================================

Block 0x335
[0x335:0x348]
---
Predecessors: []
Successors: []
---
0x335 JUMPDEST
0x336 PUSH1 0x40
0x338 MLOAD
0x339 SWAP1
0x33a ISZERO
0x33b ISZERO
0x33c DUP2
0x33d MSTORE
0x33e PUSH1 0x20
0x340 ADD
0x341 PUSH1 0x40
0x343 MLOAD
0x344 DUP1
0x345 SWAP2
0x346 SUB
0x347 SWAP1
0x348 RETURN
---
0x335: JUMPDEST 
0x336: V279 = 0x40
0x338: V280 = M[0x40]
0x33a: V281 = ISZERO S0
0x33b: V282 = ISZERO V281
0x33d: M[V280] = V282
0x33e: V283 = 0x20
0x340: V284 = ADD 0x20 V280
0x341: V285 = 0x40
0x343: V286 = M[0x40]
0x346: V287 = SUB V284 V286
0x348: RETURN V286 V287
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x349
[0x349:0x34f]
---
Predecessors: [0xbf]
Successors: [0x350, 0x354]
---
0x349 JUMPDEST
0x34a CALLVALUE
0x34b ISZERO
0x34c PUSH2 0x354
0x34f JUMPI
---
0x349: JUMPDEST 
0x34a: V288 = CALLVALUE
0x34b: V289 = ISZERO V288
0x34c: V290 = 0x354
0x34f: JUMPI 0x354 V289
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x350
[0x350:0x353]
---
Predecessors: [0x349]
Successors: []
---
0x350 PUSH1 0x0
0x352 DUP1
0x353 REVERT
---
0x350: V291 = 0x0
0x353: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x354
[0x354:0x35b]
---
Predecessors: [0x349]
Successors: [0x908]
---
0x354 JUMPDEST
0x355 PUSH2 0x1d2
0x358 PUSH2 0x908
0x35b JUMP
---
0x354: JUMPDEST 
0x355: V292 = 0x1d2
0x358: V293 = 0x908
0x35b: JUMP 0x908
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d2]
Exit stack: [V12, 0x1d2]

================================

Block 0x35c
[0x35c:0x36d]
---
Predecessors: []
Successors: []
---
0x35c JUMPDEST
0x35d PUSH1 0x40
0x35f MLOAD
0x360 SWAP1
0x361 DUP2
0x362 MSTORE
0x363 PUSH1 0x20
0x365 ADD
0x366 PUSH1 0x40
0x368 MLOAD
0x369 DUP1
0x36a SWAP2
0x36b SUB
0x36c SWAP1
0x36d RETURN
---
0x35c: JUMPDEST 
0x35d: V294 = 0x40
0x35f: V295 = M[0x40]
0x362: M[V295] = S0
0x363: V296 = 0x20
0x365: V297 = ADD 0x20 V295
0x366: V298 = 0x40
0x368: V299 = M[0x40]
0x36b: V300 = SUB V297 V299
0x36d: RETURN V299 V300
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x36e
[0x36e:0x374]
---
Predecessors: [0xca]
Successors: [0x375, 0x379]
---
0x36e JUMPDEST
0x36f CALLVALUE
0x370 ISZERO
0x371 PUSH2 0x379
0x374 JUMPI
---
0x36e: JUMPDEST 
0x36f: V301 = CALLVALUE
0x370: V302 = ISZERO V301
0x371: V303 = 0x379
0x374: JUMPI 0x379 V302
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x375
[0x375:0x378]
---
Predecessors: [0x36e]
Successors: []
---
0x375 PUSH1 0x0
0x377 DUP1
0x378 REVERT
---
0x375: V304 = 0x0
0x378: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x379
[0x379:0x380]
---
Predecessors: [0x36e]
Successors: [0x90e]
---
0x379 JUMPDEST
0x37a PUSH2 0x23d
0x37d PUSH2 0x90e
0x380 JUMP
---
0x379: JUMPDEST 
0x37a: V305 = 0x23d
0x37d: V306 = 0x90e
0x380: JUMP 0x90e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x23d]
Exit stack: [V12, 0x23d]

================================

Block 0x381
[0x381:0x39c]
---
Predecessors: []
Successors: []
---
0x381 JUMPDEST
0x382 PUSH1 0x40
0x384 MLOAD
0x385 PUSH1 0x1
0x387 PUSH1 0xa0
0x389 PUSH1 0x2
0x38b EXP
0x38c SUB
0x38d SWAP1
0x38e SWAP2
0x38f AND
0x390 DUP2
0x391 MSTORE
0x392 PUSH1 0x20
0x394 ADD
0x395 PUSH1 0x40
0x397 MLOAD
0x398 DUP1
0x399 SWAP2
0x39a SUB
0x39b SWAP1
0x39c RETURN
---
0x381: JUMPDEST 
0x382: V307 = 0x40
0x384: V308 = M[0x40]
0x385: V309 = 0x1
0x387: V310 = 0xa0
0x389: V311 = 0x2
0x38b: V312 = EXP 0x2 0xa0
0x38c: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38f: V314 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x391: M[V308] = V314
0x392: V315 = 0x20
0x394: V316 = ADD 0x20 V308
0x395: V317 = 0x40
0x397: V318 = M[0x40]
0x39a: V319 = SUB V316 V318
0x39c: RETURN V318 V319
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x39d
[0x39d:0x3a3]
---
Predecessors: [0xd5]
Successors: [0x3a4, 0x3a8]
---
0x39d JUMPDEST
0x39e CALLVALUE
0x39f ISZERO
0x3a0 PUSH2 0x3a8
0x3a3 JUMPI
---
0x39d: JUMPDEST 
0x39e: V320 = CALLVALUE
0x39f: V321 = ISZERO V320
0x3a0: V322 = 0x3a8
0x3a3: JUMPI 0x3a8 V321
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a4
[0x3a4:0x3a7]
---
Predecessors: [0x39d]
Successors: []
---
0x3a4 PUSH1 0x0
0x3a6 DUP1
0x3a7 REVERT
---
0x3a4: V323 = 0x0
0x3a7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a8
[0x3a8:0x3af]
---
Predecessors: [0x39d]
Successors: [0x91d]
---
0x3a8 JUMPDEST
0x3a9 PUSH2 0x30e
0x3ac PUSH2 0x91d
0x3af JUMP
---
0x3a8: JUMPDEST 
0x3a9: V324 = 0x30e
0x3ac: V325 = 0x91d
0x3af: JUMP 0x91d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x30e]
Exit stack: [V12, 0x30e]

================================

Block 0x3b0
[0x3b0:0x3c3]
---
Predecessors: []
Successors: []
---
0x3b0 JUMPDEST
0x3b1 PUSH1 0x40
0x3b3 MLOAD
0x3b4 SWAP1
0x3b5 ISZERO
0x3b6 ISZERO
0x3b7 DUP2
0x3b8 MSTORE
0x3b9 PUSH1 0x20
0x3bb ADD
0x3bc PUSH1 0x40
0x3be MLOAD
0x3bf DUP1
0x3c0 SWAP2
0x3c1 SUB
0x3c2 SWAP1
0x3c3 RETURN
---
0x3b0: JUMPDEST 
0x3b1: V326 = 0x40
0x3b3: V327 = M[0x40]
0x3b5: V328 = ISZERO S0
0x3b6: V329 = ISZERO V328
0x3b8: M[V327] = V329
0x3b9: V330 = 0x20
0x3bb: V331 = ADD 0x20 V327
0x3bc: V332 = 0x40
0x3be: V333 = M[0x40]
0x3c1: V334 = SUB V331 V333
0x3c3: RETURN V333 V334
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3c4
[0x3c4:0x3ca]
---
Predecessors: [0xe0]
Successors: [0x3cb, 0x3cf]
---
0x3c4 JUMPDEST
0x3c5 CALLVALUE
0x3c6 ISZERO
0x3c7 PUSH2 0x3cf
0x3ca JUMPI
---
0x3c4: JUMPDEST 
0x3c5: V335 = CALLVALUE
0x3c6: V336 = ISZERO V335
0x3c7: V337 = 0x3cf
0x3ca: JUMPI 0x3cf V336
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3cb
[0x3cb:0x3ce]
---
Predecessors: [0x3c4]
Successors: []
---
0x3cb PUSH1 0x0
0x3cd DUP1
0x3ce REVERT
---
0x3cb: V338 = 0x0
0x3ce: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3cf
[0x3cf:0x3d6]
---
Predecessors: [0x3c4]
Successors: [0xa16]
---
0x3cf JUMPDEST
0x3d0 PUSH2 0x1d2
0x3d3 PUSH2 0xa16
0x3d6 JUMP
---
0x3cf: JUMPDEST 
0x3d0: V339 = 0x1d2
0x3d3: V340 = 0xa16
0x3d6: JUMP 0xa16
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d2]
Exit stack: [V12, 0x1d2]

================================

Block 0x3d7
[0x3d7:0x3e8]
---
Predecessors: []
Successors: []
---
0x3d7 JUMPDEST
0x3d8 PUSH1 0x40
0x3da MLOAD
0x3db SWAP1
0x3dc DUP2
0x3dd MSTORE
0x3de PUSH1 0x20
0x3e0 ADD
0x3e1 PUSH1 0x40
0x3e3 MLOAD
0x3e4 DUP1
0x3e5 SWAP2
0x3e6 SUB
0x3e7 SWAP1
0x3e8 RETURN
---
0x3d7: JUMPDEST 
0x3d8: V341 = 0x40
0x3da: V342 = M[0x40]
0x3dd: M[V342] = S0
0x3de: V343 = 0x20
0x3e0: V344 = ADD 0x20 V342
0x3e1: V345 = 0x40
0x3e3: V346 = M[0x40]
0x3e6: V347 = SUB V344 V346
0x3e8: RETURN V346 V347
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3e9
[0x3e9:0x3ef]
---
Predecessors: [0xeb]
Successors: [0x3f0, 0x3f4]
---
0x3e9 JUMPDEST
0x3ea CALLVALUE
0x3eb ISZERO
0x3ec PUSH2 0x3f4
0x3ef JUMPI
---
0x3e9: JUMPDEST 
0x3ea: V348 = CALLVALUE
0x3eb: V349 = ISZERO V348
0x3ec: V350 = 0x3f4
0x3ef: JUMPI 0x3f4 V349
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f0
[0x3f0:0x3f3]
---
Predecessors: [0x3e9]
Successors: []
---
0x3f0 PUSH1 0x0
0x3f2 DUP1
0x3f3 REVERT
---
0x3f0: V351 = 0x0
0x3f3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f4
[0x3f4:0x3fb]
---
Predecessors: [0x3e9]
Successors: [0xa1c]
---
0x3f4 JUMPDEST
0x3f5 PUSH2 0x1d2
0x3f8 PUSH2 0xa1c
0x3fb JUMP
---
0x3f4: JUMPDEST 
0x3f5: V352 = 0x1d2
0x3f8: V353 = 0xa1c
0x3fb: JUMP 0xa1c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d2]
Exit stack: [V12, 0x1d2]

================================

Block 0x3fc
[0x3fc:0x40d]
---
Predecessors: []
Successors: []
---
0x3fc JUMPDEST
0x3fd PUSH1 0x40
0x3ff MLOAD
0x400 SWAP1
0x401 DUP2
0x402 MSTORE
0x403 PUSH1 0x20
0x405 ADD
0x406 PUSH1 0x40
0x408 MLOAD
0x409 DUP1
0x40a SWAP2
0x40b SUB
0x40c SWAP1
0x40d RETURN
---
0x3fc: JUMPDEST 
0x3fd: V354 = 0x40
0x3ff: V355 = M[0x40]
0x402: M[V355] = S0
0x403: V356 = 0x20
0x405: V357 = ADD 0x20 V355
0x406: V358 = 0x40
0x408: V359 = M[0x40]
0x40b: V360 = SUB V357 V359
0x40d: RETURN V359 V360
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x40e
[0x40e:0x414]
---
Predecessors: [0xf6]
Successors: [0x415, 0x419]
---
0x40e JUMPDEST
0x40f CALLVALUE
0x410 ISZERO
0x411 PUSH2 0x419
0x414 JUMPI
---
0x40e: JUMPDEST 
0x40f: V361 = CALLVALUE
0x410: V362 = ISZERO V361
0x411: V363 = 0x419
0x414: JUMPI 0x419 V362
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x415
[0x415:0x418]
---
Predecessors: [0x40e]
Successors: []
---
0x415 PUSH1 0x0
0x417 DUP1
0x418 REVERT
---
0x415: V364 = 0x0
0x418: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x419
[0x419:0x42c]
---
Predecessors: [0x40e]
Successors: [0xa22]
---
0x419 JUMPDEST
0x41a PUSH2 0x14b
0x41d PUSH1 0x1
0x41f PUSH1 0xa0
0x421 PUSH1 0x2
0x423 EXP
0x424 SUB
0x425 PUSH1 0x4
0x427 CALLDATALOAD
0x428 AND
0x429 PUSH2 0xa22
0x42c JUMP
---
0x419: JUMPDEST 
0x41a: V365 = 0x14b
0x41d: V366 = 0x1
0x41f: V367 = 0xa0
0x421: V368 = 0x2
0x423: V369 = EXP 0x2 0xa0
0x424: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x425: V371 = 0x4
0x427: V372 = CALLDATALOAD 0x4
0x428: V373 = AND V372 0xffffffffffffffffffffffffffffffffffffffff
0x429: V374 = 0xa22
0x42c: JUMP 0xa22
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x14b, V373]
Exit stack: [V12, 0x14b, V373]

================================

Block 0x42d
[0x42d:0x42e]
---
Predecessors: []
Successors: []
---
0x42d JUMPDEST
0x42e STOP
---
0x42d: JUMPDEST 
0x42e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x42f
[0x42f:0x435]
---
Predecessors: [0x101]
Successors: [0x436, 0x43a]
---
0x42f JUMPDEST
0x430 CALLVALUE
0x431 ISZERO
0x432 PUSH2 0x43a
0x435 JUMPI
---
0x42f: JUMPDEST 
0x430: V375 = CALLVALUE
0x431: V376 = ISZERO V375
0x432: V377 = 0x43a
0x435: JUMPI 0x43a V376
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x436
[0x436:0x439]
---
Predecessors: [0x42f]
Successors: []
---
0x436 PUSH1 0x0
0x438 DUP1
0x439 REVERT
---
0x436: V378 = 0x0
0x439: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x43a
[0x43a:0x441]
---
Predecessors: [0x42f]
Successors: [0xa6a]
---
0x43a JUMPDEST
0x43b PUSH2 0x23d
0x43e PUSH2 0xa6a
0x441 JUMP
---
0x43a: JUMPDEST 
0x43b: V379 = 0x23d
0x43e: V380 = 0xa6a
0x441: JUMP 0xa6a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x23d]
Exit stack: [V12, 0x23d]

================================

Block 0x442
[0x442:0x45d]
---
Predecessors: []
Successors: []
---
0x442 JUMPDEST
0x443 PUSH1 0x40
0x445 MLOAD
0x446 PUSH1 0x1
0x448 PUSH1 0xa0
0x44a PUSH1 0x2
0x44c EXP
0x44d SUB
0x44e SWAP1
0x44f SWAP2
0x450 AND
0x451 DUP2
0x452 MSTORE
0x453 PUSH1 0x20
0x455 ADD
0x456 PUSH1 0x40
0x458 MLOAD
0x459 DUP1
0x45a SWAP2
0x45b SUB
0x45c SWAP1
0x45d RETURN
---
0x442: JUMPDEST 
0x443: V381 = 0x40
0x445: V382 = M[0x40]
0x446: V383 = 0x1
0x448: V384 = 0xa0
0x44a: V385 = 0x2
0x44c: V386 = EXP 0x2 0xa0
0x44d: V387 = SUB 0x10000000000000000000000000000000000000000 0x1
0x450: V388 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x452: M[V382] = V388
0x453: V389 = 0x20
0x455: V390 = ADD 0x20 V382
0x456: V391 = 0x40
0x458: V392 = M[0x40]
0x45b: V393 = SUB V390 V392
0x45d: RETURN V392 V393
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x45e
[0x45e:0x475]
---
Predecessors: [0x158]
Successors: [0x476, 0x489]
---
0x45e JUMPDEST
0x45f PUSH1 0x0
0x461 SLOAD
0x462 CALLER
0x463 PUSH1 0x1
0x465 PUSH1 0xa0
0x467 PUSH1 0x2
0x469 EXP
0x46a SUB
0x46b SWAP1
0x46c DUP2
0x46d AND
0x46e SWAP2
0x46f AND
0x470 EQ
0x471 DUP1
0x472 PUSH2 0x489
0x475 JUMPI
---
0x45e: JUMPDEST 
0x45f: V394 = 0x0
0x461: V395 = S[0x0]
0x462: V396 = CALLER
0x463: V397 = 0x1
0x465: V398 = 0xa0
0x467: V399 = 0x2
0x469: V400 = EXP 0x2 0xa0
0x46a: V401 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46d: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x46f: V403 = AND V395 0xffffffffffffffffffffffffffffffffffffffff
0x470: V404 = EQ V403 V402
0x472: V405 = 0x489
0x475: JUMPI 0x489 V404
---
Entry stack: [V12, 0x14b, V101, V103, V105, V107, V109]
Stack pops: 0
Stack additions: [V404]
Exit stack: [V12, 0x14b, V101, V103, V105, V107, V109, V404]

================================

Block 0x476
[0x476:0x488]
---
Predecessors: [0x45e]
Successors: [0x489]
---
0x476 POP
0x477 PUSH1 0x1
0x479 SLOAD
0x47a CALLER
0x47b PUSH1 0x1
0x47d PUSH1 0xa0
0x47f PUSH1 0x2
0x481 EXP
0x482 SUB
0x483 SWAP1
0x484 DUP2
0x485 AND
0x486 SWAP2
0x487 AND
0x488 EQ
---
0x477: V406 = 0x1
0x479: V407 = S[0x1]
0x47a: V408 = CALLER
0x47b: V409 = 0x1
0x47d: V410 = 0xa0
0x47f: V411 = 0x2
0x481: V412 = EXP 0x2 0xa0
0x482: V413 = SUB 0x10000000000000000000000000000000000000000 0x1
0x485: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V408
0x487: V415 = AND V407 0xffffffffffffffffffffffffffffffffffffffff
0x488: V416 = EQ V415 V414
---
Entry stack: [V12, 0x14b, V101, V103, V105, V107, V109, V404]
Stack pops: 1
Stack additions: [V416]
Exit stack: [V12, 0x14b, V101, V103, V105, V107, V109, V416]

================================

Block 0x489
[0x489:0x48f]
---
Predecessors: [0x45e, 0x476]
Successors: [0x490, 0x494]
---
0x489 JUMPDEST
0x48a ISZERO
0x48b ISZERO
0x48c PUSH2 0x494
0x48f JUMPI
---
0x489: JUMPDEST 
0x48a: V417 = ISZERO S0
0x48b: V418 = ISZERO V417
0x48c: V419 = 0x494
0x48f: JUMPI 0x494 V418
---
Entry stack: [V12, 0x14b, V101, V103, V105, V107, V109, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x14b, V101, V103, V105, V107, V109]

================================

Block 0x490
[0x490:0x493]
---
Predecessors: [0x489]
Successors: []
---
0x490 PUSH1 0x0
0x492 DUP1
0x493 REVERT
---
0x490: V420 = 0x0
0x493: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V101, V103, V105, V107, V109]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V101, V103, V105, V107, V109]

================================

Block 0x494
[0x494:0x49e]
---
Predecessors: [0x489]
Successors: [0x49f, 0x4a3]
---
0x494 JUMPDEST
0x495 PUSH1 0x6
0x497 SLOAD
0x498 DUP5
0x499 GT
0x49a ISZERO
0x49b PUSH2 0x4a3
0x49e JUMPI
---
0x494: JUMPDEST 
0x495: V421 = 0x6
0x497: V422 = S[0x6]
0x499: V423 = GT V103 V422
0x49a: V424 = ISZERO V423
0x49b: V425 = 0x4a3
0x49e: JUMPI 0x4a3 V424
---
Entry stack: [V12, 0x14b, V101, V103, V105, V107, V109]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x14b, V101, V103, V105, V107, V109]

================================

Block 0x49f
[0x49f:0x4a2]
---
Predecessors: [0x494]
Successors: []
---
0x49f PUSH1 0x0
0x4a1 DUP1
0x4a2 REVERT
---
0x49f: V426 = 0x0
0x4a2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V101, V103, V105, V107, V109]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V101, V103, V105, V107, V109]

================================

Block 0x4a3
[0x4a3:0x4ad]
---
Predecessors: [0x494]
Successors: [0x4ae, 0x4b2]
---
0x4a3 JUMPDEST
0x4a4 PUSH1 0x7
0x4a6 SLOAD
0x4a7 DUP2
0x4a8 SLT
0x4a9 ISZERO
0x4aa PUSH2 0x4b2
0x4ad JUMPI
---
0x4a3: JUMPDEST 
0x4a4: V427 = 0x7
0x4a6: V428 = S[0x7]
0x4a8: V429 = SLT V109 V428
0x4a9: V430 = ISZERO V429
0x4aa: V431 = 0x4b2
0x4ad: JUMPI 0x4b2 V430
---
Entry stack: [V12, 0x14b, V101, V103, V105, V107, V109]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x14b, V101, V103, V105, V107, V109]

================================

Block 0x4ae
[0x4ae:0x4b1]
---
Predecessors: [0x4a3]
Successors: []
---
0x4ae PUSH1 0x0
0x4b0 DUP1
0x4b1 REVERT
---
0x4ae: V432 = 0x0
0x4b1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V101, V103, V105, V107, V109]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V101, V103, V105, V107, V109]

================================

Block 0x4b2
[0x4b2:0x50f]
---
Predecessors: [0x4a3]
Successors: [0x510, 0x514]
---
0x4b2 JUMPDEST
0x4b3 PUSH1 0x9
0x4b5 DUP6
0x4b6 SWAP1
0x4b7 SSTORE
0x4b8 PUSH1 0x3
0x4ba SLOAD
0x4bb PUSH1 0x1
0x4bd PUSH1 0xa0
0x4bf PUSH1 0x2
0x4c1 EXP
0x4c2 SUB
0x4c3 AND
0x4c4 PUSH4 0xb105126f
0x4c9 DUP6
0x4ca DUP1
0x4cb DUP7
0x4cc DUP7
0x4cd DUP7
0x4ce PUSH1 0x40
0x4d0 MLOAD
0x4d1 PUSH1 0xe0
0x4d3 PUSH1 0x2
0x4d5 EXP
0x4d6 PUSH4 0xffffffff
0x4db DUP9
0x4dc AND
0x4dd MUL
0x4de DUP2
0x4df MSTORE
0x4e0 PUSH1 0x4
0x4e2 DUP2
0x4e3 ADD
0x4e4 SWAP5
0x4e5 SWAP1
0x4e6 SWAP5
0x4e7 MSTORE
0x4e8 PUSH1 0x24
0x4ea DUP5
0x4eb ADD
0x4ec SWAP3
0x4ed SWAP1
0x4ee SWAP3
0x4ef MSTORE
0x4f0 PUSH1 0x44
0x4f2 DUP4
0x4f3 ADD
0x4f4 MSTORE
0x4f5 PUSH1 0x64
0x4f7 DUP3
0x4f8 ADD
0x4f9 MSTORE
0x4fa PUSH1 0x84
0x4fc ADD
0x4fd PUSH1 0x0
0x4ff PUSH1 0x40
0x501 MLOAD
0x502 DUP1
0x503 DUP4
0x504 SUB
0x505 DUP2
0x506 DUP6
0x507 DUP9
0x508 DUP1
0x509 EXTCODESIZE
0x50a ISZERO
0x50b ISZERO
0x50c PUSH2 0x514
0x50f JUMPI
---
0x4b2: JUMPDEST 
0x4b3: V433 = 0x9
0x4b7: S[0x9] = V101
0x4b8: V434 = 0x3
0x4ba: V435 = S[0x3]
0x4bb: V436 = 0x1
0x4bd: V437 = 0xa0
0x4bf: V438 = 0x2
0x4c1: V439 = EXP 0x2 0xa0
0x4c2: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c3: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x4c4: V442 = 0xb105126f
0x4ce: V443 = 0x40
0x4d0: V444 = M[0x40]
0x4d1: V445 = 0xe0
0x4d3: V446 = 0x2
0x4d5: V447 = EXP 0x2 0xe0
0x4d6: V448 = 0xffffffff
0x4dc: V449 = AND 0xb105126f 0xffffffff
0x4dd: V450 = MUL 0xb105126f 0x100000000000000000000000000000000000000000000000000000000
0x4df: M[V444] = 0xb105126f00000000000000000000000000000000000000000000000000000000
0x4e0: V451 = 0x4
0x4e3: V452 = ADD V444 0x4
0x4e7: M[V452] = V103
0x4e8: V453 = 0x24
0x4eb: V454 = ADD V444 0x24
0x4ef: M[V454] = V105
0x4f0: V455 = 0x44
0x4f3: V456 = ADD V444 0x44
0x4f4: M[V456] = V107
0x4f5: V457 = 0x64
0x4f8: V458 = ADD V444 0x64
0x4f9: M[V458] = V109
0x4fa: V459 = 0x84
0x4fc: V460 = ADD 0x84 V444
0x4fd: V461 = 0x0
0x4ff: V462 = 0x40
0x501: V463 = M[0x40]
0x504: V464 = SUB V460 V463
0x509: V465 = EXTCODESIZE V441
0x50a: V466 = ISZERO V465
0x50b: V467 = ISZERO V466
0x50c: V468 = 0x514
0x50f: JUMPI 0x514 V467
---
Entry stack: [V12, 0x14b, V101, V103, V105, V107, V109]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V441, 0xb105126f, S3, V460, 0x0, V463, V464, V463, S3, V441]
Exit stack: [V12, 0x14b, V101, V103, V105, V107, V109, V441, 0xb105126f, V103, V460, 0x0, V463, V464, V463, V103, V441]

================================

Block 0x510
[0x510:0x513]
---
Predecessors: [0x4b2]
Successors: []
---
0x510 PUSH1 0x0
0x512 DUP1
0x513 REVERT
---
0x510: V469 = 0x0
0x513: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V101, V103, V105, V107, V109, V441, 0xb105126f, V103, V460, 0x0, V463, V464, V463, V103, V441]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V101, V103, V105, V107, V109, V441, 0xb105126f, V103, V460, 0x0, V463, V464, V463, V103, V441]

================================

Block 0x514
[0x514:0x520]
---
Predecessors: [0x4b2]
Successors: [0x521, 0x525]
---
0x514 JUMPDEST
0x515 PUSH2 0x25ee
0x518 GAS
0x519 SUB
0x51a CALL
0x51b ISZERO
0x51c ISZERO
0x51d PUSH2 0x525
0x520 JUMPI
---
0x514: JUMPDEST 
0x515: V470 = 0x25ee
0x518: V471 = GAS
0x519: V472 = SUB V471 0x25ee
0x51a: V473 = CALL V472 V441 V103 V463 V464 V463 0x0
0x51b: V474 = ISZERO V473
0x51c: V475 = ISZERO V474
0x51d: V476 = 0x525
0x520: JUMPI 0x525 V475
---
Entry stack: [V12, 0x14b, V101, V103, V105, V107, V109, V441, 0xb105126f, V103, V460, 0x0, V463, V464, V463, V103, V441]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x14b, V101, V103, V105, V107, V109, V441, 0xb105126f, V103, V460]

================================

Block 0x521
[0x521:0x524]
---
Predecessors: [0x514]
Successors: []
---
0x521 PUSH1 0x0
0x523 DUP1
0x524 REVERT
---
0x521: V477 = 0x0
0x524: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V101, V103, V105, V107, V109, V441, 0xb105126f, V103, V460]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V101, V103, V105, V107, V109, V441, 0xb105126f, V103, V460]

================================

Block 0x525
[0x525:0x529]
---
Predecessors: [0x514]
Successors: [0x52a]
---
0x525 JUMPDEST
0x526 POP
0x527 POP
0x528 POP
0x529 POP
---
0x525: JUMPDEST 
---
Entry stack: [V12, 0x14b, V101, V103, V105, V107, V109, V441, 0xb105126f, V103, V460]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x14b, V101, V103, V105, V107, V109]

================================

Block 0x52a
[0x52a:0x52a]
---
Predecessors: [0x525]
Successors: [0x52b]
---
0x52a JUMPDEST
---
0x52a: JUMPDEST 
---
Entry stack: [V12, 0x14b, V101, V103, V105, V107, V109]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V101, V103, V105, V107, V109]

================================

Block 0x52b
[0x52b:0x531]
---
Predecessors: [0x52a]
Successors: [0x14b]
---
0x52b JUMPDEST
0x52c POP
0x52d POP
0x52e POP
0x52f POP
0x530 POP
0x531 JUMP
---
0x52b: JUMPDEST 
0x531: JUMP 0x14b
---
Entry stack: [V12, 0x14b, V101, V103, V105, V107, V109]
Stack pops: 6
Stack additions: []
Exit stack: [V12]

================================

Block 0x532
[0x532:0x548]
---
Predecessors: [0x17c]
Successors: [0x549, 0x54d]
---
0x532 JUMPDEST
0x533 PUSH1 0x0
0x535 SLOAD
0x536 CALLER
0x537 PUSH1 0x1
0x539 PUSH1 0xa0
0x53b PUSH1 0x2
0x53d EXP
0x53e SUB
0x53f SWAP1
0x540 DUP2
0x541 AND
0x542 SWAP2
0x543 AND
0x544 EQ
0x545 PUSH2 0x54d
0x548 JUMPI
---
0x532: JUMPDEST 
0x533: V478 = 0x0
0x535: V479 = S[0x0]
0x536: V480 = CALLER
0x537: V481 = 0x1
0x539: V482 = 0xa0
0x53b: V483 = 0x2
0x53d: V484 = EXP 0x2 0xa0
0x53e: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x541: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x543: V487 = AND V479 0xffffffffffffffffffffffffffffffffffffffff
0x544: V488 = EQ V487 V486
0x545: V489 = 0x54d
0x548: JUMPI 0x54d V488
---
Entry stack: [V12, 0x14b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b]

================================

Block 0x549
[0x549:0x54c]
---
Predecessors: [0x532]
Successors: []
---
0x549 PUSH1 0x0
0x54b DUP1
0x54c REVERT
---
0x549: V490 = 0x0
0x54c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b]

================================

Block 0x54d
[0x54d:0x55a]
---
Predecessors: [0x532]
Successors: []
---
0x54d JUMPDEST
0x54e PUSH1 0x0
0x550 SLOAD
0x551 PUSH1 0x1
0x553 PUSH1 0xa0
0x555 PUSH1 0x2
0x557 EXP
0x558 SUB
0x559 AND
0x55a SELFDESTRUCT
---
0x54d: JUMPDEST 
0x54e: V491 = 0x0
0x550: V492 = S[0x0]
0x551: V493 = 0x1
0x553: V494 = 0xa0
0x555: V495 = 0x2
0x557: V496 = EXP 0x2 0xa0
0x558: V497 = SUB 0x10000000000000000000000000000000000000000 0x1
0x559: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x55a: SELFDESTRUCT V498
---
Entry stack: [V12, 0x14b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b]

================================

Block 0x55b
[0x55b:0x55b]
---
Predecessors: []
Successors: [0x55c]
---
0x55b JUMPDEST
---
0x55b: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x55c
[0x55c:0x55d]
---
Predecessors: [0x55b]
Successors: []
Has unresolved jump.
---
0x55c JUMPDEST
0x55d JUMP
---
0x55c: JUMPDEST 
0x55d: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x55e
[0x55e:0x574]
---
Predecessors: [0x191]
Successors: [0x575, 0x579]
---
0x55e JUMPDEST
0x55f PUSH1 0x0
0x561 SLOAD
0x562 CALLER
0x563 PUSH1 0x1
0x565 PUSH1 0xa0
0x567 PUSH1 0x2
0x569 EXP
0x56a SUB
0x56b SWAP1
0x56c DUP2
0x56d AND
0x56e SWAP2
0x56f AND
0x570 EQ
0x571 PUSH2 0x579
0x574 JUMPI
---
0x55e: JUMPDEST 
0x55f: V499 = 0x0
0x561: V500 = S[0x0]
0x562: V501 = CALLER
0x563: V502 = 0x1
0x565: V503 = 0xa0
0x567: V504 = 0x2
0x569: V505 = EXP 0x2 0xa0
0x56a: V506 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56d: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff V501
0x56f: V508 = AND V500 0xffffffffffffffffffffffffffffffffffffffff
0x570: V509 = EQ V508 V507
0x571: V510 = 0x579
0x574: JUMPI 0x579 V509
---
Entry stack: [V12, 0x14b, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V123]

================================

Block 0x575
[0x575:0x578]
---
Predecessors: [0x55e]
Successors: []
---
0x575 PUSH1 0x0
0x577 DUP1
0x578 REVERT
---
0x575: V511 = 0x0
0x578: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V123]

================================

Block 0x579
[0x579:0x5a7]
---
Predecessors: [0x55e]
Successors: [0x5a8, 0x5ac]
---
0x579 JUMPDEST
0x57a PUSH1 0x0
0x57c SLOAD
0x57d PUSH1 0x1
0x57f PUSH1 0xa0
0x581 PUSH1 0x2
0x583 EXP
0x584 SUB
0x585 AND
0x586 DUP2
0x587 ISZERO
0x588 PUSH2 0x8fc
0x58b MUL
0x58c DUP3
0x58d PUSH1 0x40
0x58f MLOAD
0x590 PUSH1 0x0
0x592 PUSH1 0x40
0x594 MLOAD
0x595 DUP1
0x596 DUP4
0x597 SUB
0x598 DUP2
0x599 DUP6
0x59a DUP9
0x59b DUP9
0x59c CALL
0x59d SWAP4
0x59e POP
0x59f POP
0x5a0 POP
0x5a1 POP
0x5a2 ISZERO
0x5a3 ISZERO
0x5a4 PUSH2 0x5ac
0x5a7 JUMPI
---
0x579: JUMPDEST 
0x57a: V512 = 0x0
0x57c: V513 = S[0x0]
0x57d: V514 = 0x1
0x57f: V515 = 0xa0
0x581: V516 = 0x2
0x583: V517 = EXP 0x2 0xa0
0x584: V518 = SUB 0x10000000000000000000000000000000000000000 0x1
0x585: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff V513
0x587: V520 = ISZERO V123
0x588: V521 = 0x8fc
0x58b: V522 = MUL 0x8fc V520
0x58d: V523 = 0x40
0x58f: V524 = M[0x40]
0x590: V525 = 0x0
0x592: V526 = 0x40
0x594: V527 = M[0x40]
0x597: V528 = SUB V524 V527
0x59c: V529 = CALL V522 V519 V123 V527 V528 V527 0x0
0x5a2: V530 = ISZERO V529
0x5a3: V531 = ISZERO V530
0x5a4: V532 = 0x5ac
0x5a7: JUMPI 0x5ac V531
---
Entry stack: [V12, 0x14b, V123]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x14b, V123]

================================

Block 0x5a8
[0x5a8:0x5ab]
---
Predecessors: [0x579]
Successors: []
---
0x5a8 PUSH1 0x0
0x5aa DUP1
0x5ab REVERT
---
0x5a8: V533 = 0x0
0x5ab: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V123]

================================

Block 0x5ac
[0x5ac:0x5ac]
---
Predecessors: [0x579, 0x744]
Successors: [0x5ad]
---
0x5ac JUMPDEST
---
0x5ac: JUMPDEST 
---
Entry stack: [V12, {0x14b, 0x30e}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x14b, 0x30e}, S0]

================================

Block 0x5ad
[0x5ad:0x5ad]
---
Predecessors: [0x5ac]
Successors: [0x5ae]
---
0x5ad JUMPDEST
---
0x5ad: JUMPDEST 
---
Entry stack: [V12, {0x14b, 0x30e}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x14b, 0x30e}, S0]

================================

Block 0x5ae
[0x5ae:0x5b0]
---
Predecessors: [0x5ad]
Successors: [0x14b, 0x30e]
---
0x5ae JUMPDEST
0x5af POP
0x5b0 JUMP
---
0x5ae: JUMPDEST 
0x5b0: JUMP {0x14b, 0x30e}
---
Entry stack: [V12, {0x14b, 0x30e}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x5b1
[0x5b1:0x5c7]
---
Predecessors: [0x1a9]
Successors: [0x5c8, 0x5cc]
---
0x5b1 JUMPDEST
0x5b2 PUSH1 0x0
0x5b4 SLOAD
0x5b5 CALLER
0x5b6 PUSH1 0x1
0x5b8 PUSH1 0xa0
0x5ba PUSH1 0x2
0x5bc EXP
0x5bd SUB
0x5be SWAP1
0x5bf DUP2
0x5c0 AND
0x5c1 SWAP2
0x5c2 AND
0x5c3 EQ
0x5c4 PUSH2 0x5cc
0x5c7 JUMPI
---
0x5b1: JUMPDEST 
0x5b2: V534 = 0x0
0x5b4: V535 = S[0x0]
0x5b5: V536 = CALLER
0x5b6: V537 = 0x1
0x5b8: V538 = 0xa0
0x5ba: V539 = 0x2
0x5bc: V540 = EXP 0x2 0xa0
0x5bd: V541 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c0: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x5c2: V543 = AND V535 0xffffffffffffffffffffffffffffffffffffffff
0x5c3: V544 = EQ V543 V542
0x5c4: V545 = 0x5cc
0x5c7: JUMPI 0x5cc V544
---
Entry stack: [V12, 0x14b, V131, V133, V135, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V131, V133, V135, V137]

================================

Block 0x5c8
[0x5c8:0x5cb]
---
Predecessors: [0x5b1]
Successors: []
---
0x5c8 PUSH1 0x0
0x5ca DUP1
0x5cb REVERT
---
0x5c8: V546 = 0x0
0x5cb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V131, V133, V135, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V131, V133, V135, V137]

================================

Block 0x5cc
[0x5cc:0x5e0]
---
Predecessors: [0x5b1]
Successors: [0x5e1]
---
0x5cc JUMPDEST
0x5cd PUSH1 0x4
0x5cf DUP5
0x5d0 SWAP1
0x5d1 SSTORE
0x5d2 PUSH1 0x5
0x5d4 DUP4
0x5d5 SWAP1
0x5d6 SSTORE
0x5d7 PUSH1 0x6
0x5d9 DUP3
0x5da SWAP1
0x5db SSTORE
0x5dc PUSH1 0x7
0x5de DUP2
0x5df SWAP1
0x5e0 SSTORE
---
0x5cc: JUMPDEST 
0x5cd: V547 = 0x4
0x5d1: S[0x4] = V131
0x5d2: V548 = 0x5
0x5d6: S[0x5] = V133
0x5d7: V549 = 0x6
0x5db: S[0x6] = V135
0x5dc: V550 = 0x7
0x5e0: S[0x7] = V137
---
Entry stack: [V12, 0x14b, V131, V133, V135, V137]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x14b, V131, V133, V135, V137]

================================

Block 0x5e1
[0x5e1:0x5e1]
---
Predecessors: [0x5cc, 0x791]
Successors: [0x5e2]
---
0x5e1 JUMPDEST
---
0x5e1: JUMPDEST 
---
Entry stack: [V12, {0x14b, 0x30e}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x14b, 0x30e}, S3, S2, S1, S0]

================================

Block 0x5e2
[0x5e2:0x5e7]
---
Predecessors: [0x5e1]
Successors: [0x14b, 0x30e]
---
0x5e2 JUMPDEST
0x5e3 POP
0x5e4 POP
0x5e5 POP
0x5e6 POP
0x5e7 JUMP
---
0x5e2: JUMPDEST 
0x5e7: JUMP {0x14b, 0x30e}
---
Entry stack: [V12, {0x14b, 0x30e}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x5e8
[0x5e8:0x5ed]
---
Predecessors: [0x1ca]
Successors: [0x1d2]
---
0x5e8 JUMPDEST
0x5e9 PUSH1 0x9
0x5eb SLOAD
0x5ec DUP2
0x5ed JUMP
---
0x5e8: JUMPDEST 
0x5e9: V551 = 0x9
0x5eb: V552 = S[0x9]
0x5ed: JUMP 0x1d2
---
Entry stack: [V12, 0x1d2]
Stack pops: 1
Stack additions: [S0, V552]
Exit stack: [V12, 0x1d2, V552]

================================

Block 0x5ee
[0x5ee:0x5f3]
---
Predecessors: [0x1ef]
Successors: [0x1d2]
---
0x5ee JUMPDEST
0x5ef PUSH1 0x8
0x5f1 SLOAD
0x5f2 DUP2
0x5f3 JUMP
---
0x5ee: JUMPDEST 
0x5ef: V553 = 0x8
0x5f1: V554 = S[0x8]
0x5f3: JUMP 0x1d2
---
Entry stack: [V12, 0x1d2]
Stack pops: 1
Stack additions: [S0, V554]
Exit stack: [V12, 0x1d2, V554]

================================

Block 0x5f4
[0x5f4:0x60a]
---
Predecessors: [0x214]
Successors: [0x60b, 0x60f]
---
0x5f4 JUMPDEST
0x5f5 PUSH1 0x0
0x5f7 SLOAD
0x5f8 CALLER
0x5f9 PUSH1 0x1
0x5fb PUSH1 0xa0
0x5fd PUSH1 0x2
0x5ff EXP
0x600 SUB
0x601 SWAP1
0x602 DUP2
0x603 AND
0x604 SWAP2
0x605 AND
0x606 EQ
0x607 PUSH2 0x60f
0x60a JUMPI
---
0x5f4: JUMPDEST 
0x5f5: V555 = 0x0
0x5f7: V556 = S[0x0]
0x5f8: V557 = CALLER
0x5f9: V558 = 0x1
0x5fb: V559 = 0xa0
0x5fd: V560 = 0x2
0x5ff: V561 = EXP 0x2 0xa0
0x600: V562 = SUB 0x10000000000000000000000000000000000000000 0x1
0x603: V563 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0x605: V564 = AND V556 0xffffffffffffffffffffffffffffffffffffffff
0x606: V565 = EQ V564 V563
0x607: V566 = 0x60f
0x60a: JUMPI 0x60f V565
---
Entry stack: [V12, 0x14b, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V177]

================================

Block 0x60b
[0x60b:0x60e]
---
Predecessors: [0x5f4]
Successors: []
---
0x60b PUSH1 0x0
0x60d DUP1
0x60e REVERT
---
0x60b: V567 = 0x0
0x60e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V177]

================================

Block 0x60f
[0x60f:0x637]
---
Predecessors: [0x5f4]
Successors: [0x638]
---
0x60f JUMPDEST
0x610 PUSH1 0x1
0x612 DUP1
0x613 SLOAD
0x614 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x629 NOT
0x62a AND
0x62b PUSH1 0x1
0x62d PUSH1 0xa0
0x62f PUSH1 0x2
0x631 EXP
0x632 SUB
0x633 DUP4
0x634 AND
0x635 OR
0x636 SWAP1
0x637 SSTORE
---
0x60f: JUMPDEST 
0x610: V568 = 0x1
0x613: V569 = S[0x1]
0x614: V570 = 0xffffffffffffffffffffffffffffffffffffffff
0x629: V571 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x62a: V572 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V569
0x62b: V573 = 0x1
0x62d: V574 = 0xa0
0x62f: V575 = 0x2
0x631: V576 = EXP 0x2 0xa0
0x632: V577 = SUB 0x10000000000000000000000000000000000000000 0x1
0x634: V578 = AND V177 0xffffffffffffffffffffffffffffffffffffffff
0x635: V579 = OR V578 V572
0x637: S[0x1] = V579
---
Entry stack: [V12, 0x14b, V177]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x14b, V177]

================================

Block 0x638
[0x638:0x638]
---
Predecessors: [0x60f]
Successors: [0x639]
---
0x638 JUMPDEST
---
0x638: JUMPDEST 
---
Entry stack: [V12, 0x14b, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V177]

================================

Block 0x639
[0x639:0x63b]
---
Predecessors: [0x638]
Successors: [0x14b]
---
0x639 JUMPDEST
0x63a POP
0x63b JUMP
---
0x639: JUMPDEST 
0x63b: JUMP 0x14b
---
Entry stack: [V12, 0x14b, V177]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x63c
[0x63c:0x64a]
---
Predecessors: [0x235]
Successors: [0x23d]
---
0x63c JUMPDEST
0x63d PUSH1 0x3
0x63f SLOAD
0x640 PUSH1 0x1
0x642 PUSH1 0xa0
0x644 PUSH1 0x2
0x646 EXP
0x647 SUB
0x648 AND
0x649 DUP2
0x64a JUMP
---
0x63c: JUMPDEST 
0x63d: V580 = 0x3
0x63f: V581 = S[0x3]
0x640: V582 = 0x1
0x642: V583 = 0xa0
0x644: V584 = 0x2
0x646: V585 = EXP 0x2 0xa0
0x647: V586 = SUB 0x10000000000000000000000000000000000000000 0x1
0x648: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x64a: JUMP 0x23d
---
Entry stack: [V12, 0x23d]
Stack pops: 1
Stack additions: [S0, V587]
Exit stack: [V12, 0x23d, V587]

================================

Block 0x64b
[0x64b:0x65d]
---
Predecessors: [0x264]
Successors: [0x65e, 0x662]
---
0x64b JUMPDEST
0x64c PUSH1 0x2
0x64e SLOAD
0x64f PUSH1 0x1
0x651 PUSH1 0xa0
0x653 PUSH1 0x2
0x655 EXP
0x656 SUB
0x657 AND
0x658 ISZERO
0x659 ISZERO
0x65a PUSH2 0x662
0x65d JUMPI
---
0x64b: JUMPDEST 
0x64c: V588 = 0x2
0x64e: V589 = S[0x2]
0x64f: V590 = 0x1
0x651: V591 = 0xa0
0x653: V592 = 0x2
0x655: V593 = EXP 0x2 0xa0
0x656: V594 = SUB 0x10000000000000000000000000000000000000000 0x1
0x657: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0x658: V596 = ISZERO V595
0x659: V597 = ISZERO V596
0x65a: V598 = 0x662
0x65d: JUMPI 0x662 V597
---
Entry stack: [V12, 0x14b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b]

================================

Block 0x65e
[0x65e:0x661]
---
Predecessors: [0x64b]
Successors: []
---
0x65e PUSH1 0x0
0x660 DUP1
0x661 REVERT
---
0x65e: V599 = 0x0
0x661: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b]

================================

Block 0x662
[0x662:0x678]
---
Predecessors: [0x64b]
Successors: [0x679, 0x67d]
---
0x662 JUMPDEST
0x663 PUSH1 0x2
0x665 SLOAD
0x666 CALLER
0x667 PUSH1 0x1
0x669 PUSH1 0xa0
0x66b PUSH1 0x2
0x66d EXP
0x66e SUB
0x66f SWAP1
0x670 DUP2
0x671 AND
0x672 SWAP2
0x673 AND
0x674 EQ
0x675 PUSH2 0x67d
0x678 JUMPI
---
0x662: JUMPDEST 
0x663: V600 = 0x2
0x665: V601 = S[0x2]
0x666: V602 = CALLER
0x667: V603 = 0x1
0x669: V604 = 0xa0
0x66b: V605 = 0x2
0x66d: V606 = EXP 0x2 0xa0
0x66e: V607 = SUB 0x10000000000000000000000000000000000000000 0x1
0x671: V608 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0x673: V609 = AND V601 0xffffffffffffffffffffffffffffffffffffffff
0x674: V610 = EQ V609 V608
0x675: V611 = 0x67d
0x678: JUMPI 0x67d V610
---
Entry stack: [V12, 0x14b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b]

================================

Block 0x679
[0x679:0x67c]
---
Predecessors: [0x662]
Successors: []
---
0x679 PUSH1 0x0
0x67b DUP1
0x67c REVERT
---
0x679: V612 = 0x0
0x67c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b]

================================

Block 0x67d
[0x67d:0x6ac]
---
Predecessors: [0x662]
Successors: [0x6ad]
---
0x67d JUMPDEST
0x67e PUSH1 0x2
0x680 SLOAD
0x681 PUSH1 0x0
0x683 DUP1
0x684 SLOAD
0x685 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69a NOT
0x69b AND
0x69c PUSH1 0x1
0x69e PUSH1 0xa0
0x6a0 PUSH1 0x2
0x6a2 EXP
0x6a3 SUB
0x6a4 SWAP1
0x6a5 SWAP3
0x6a6 AND
0x6a7 SWAP2
0x6a8 SWAP1
0x6a9 SWAP2
0x6aa OR
0x6ab SWAP1
0x6ac SSTORE
---
0x67d: JUMPDEST 
0x67e: V613 = 0x2
0x680: V614 = S[0x2]
0x681: V615 = 0x0
0x684: V616 = S[0x0]
0x685: V617 = 0xffffffffffffffffffffffffffffffffffffffff
0x69a: V618 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x69b: V619 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V616
0x69c: V620 = 0x1
0x69e: V621 = 0xa0
0x6a0: V622 = 0x2
0x6a2: V623 = EXP 0x2 0xa0
0x6a3: V624 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a6: V625 = AND V614 0xffffffffffffffffffffffffffffffffffffffff
0x6aa: V626 = OR V625 V619
0x6ac: S[0x0] = V626
---
Entry stack: [V12, 0x14b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b]

================================

Block 0x6ad
[0x6ad:0x6ae]
---
Predecessors: [0x67d]
Successors: [0x14b]
---
0x6ad JUMPDEST
0x6ae JUMP
---
0x6ad: JUMPDEST 
0x6ae: JUMP 0x14b
---
Entry stack: [V12, 0x14b]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x6af
[0x6af:0x6b4]
---
Predecessors: [0x279]
Successors: [0x1d2]
---
0x6af JUMPDEST
0x6b0 PUSH1 0x4
0x6b2 SLOAD
0x6b3 DUP2
0x6b4 JUMP
---
0x6af: JUMPDEST 
0x6b0: V627 = 0x4
0x6b2: V628 = S[0x4]
0x6b4: JUMP 0x1d2
---
Entry stack: [V12, 0x1d2]
Stack pops: 1
Stack additions: [S0, V628]
Exit stack: [V12, 0x1d2, V628]

================================

Block 0x6b5
[0x6b5:0x6c3]
---
Predecessors: [0x29e]
Successors: [0x23d]
---
0x6b5 JUMPDEST
0x6b6 PUSH1 0x0
0x6b8 SLOAD
0x6b9 PUSH1 0x1
0x6bb PUSH1 0xa0
0x6bd PUSH1 0x2
0x6bf EXP
0x6c0 SUB
0x6c1 AND
0x6c2 DUP2
0x6c3 JUMP
---
0x6b5: JUMPDEST 
0x6b6: V629 = 0x0
0x6b8: V630 = S[0x0]
0x6b9: V631 = 0x1
0x6bb: V632 = 0xa0
0x6bd: V633 = 0x2
0x6bf: V634 = EXP 0x2 0xa0
0x6c0: V635 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c1: V636 = AND 0xffffffffffffffffffffffffffffffffffffffff V630
0x6c3: JUMP 0x23d
---
Entry stack: [V12, 0x23d]
Stack pops: 1
Stack additions: [S0, V636]
Exit stack: [V12, 0x23d, V636]

================================

Block 0x6c4
[0x6c4:0x6db]
---
Predecessors: [0x2cd]
Successors: [0x6dc, 0x6ef]
---
0x6c4 JUMPDEST
0x6c5 PUSH1 0x0
0x6c7 SLOAD
0x6c8 CALLER
0x6c9 PUSH1 0x1
0x6cb PUSH1 0xa0
0x6cd PUSH1 0x2
0x6cf EXP
0x6d0 SUB
0x6d1 SWAP1
0x6d2 DUP2
0x6d3 AND
0x6d4 SWAP2
0x6d5 AND
0x6d6 EQ
0x6d7 DUP1
0x6d8 PUSH2 0x6ef
0x6db JUMPI
---
0x6c4: JUMPDEST 
0x6c5: V637 = 0x0
0x6c7: V638 = S[0x0]
0x6c8: V639 = CALLER
0x6c9: V640 = 0x1
0x6cb: V641 = 0xa0
0x6cd: V642 = 0x2
0x6cf: V643 = EXP 0x2 0xa0
0x6d0: V644 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d3: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff V639
0x6d5: V646 = AND V638 0xffffffffffffffffffffffffffffffffffffffff
0x6d6: V647 = EQ V646 V645
0x6d8: V648 = 0x6ef
0x6db: JUMPI 0x6ef V647
---
Entry stack: [V12, 0x14b, V242]
Stack pops: 0
Stack additions: [V647]
Exit stack: [V12, 0x14b, V242, V647]

================================

Block 0x6dc
[0x6dc:0x6ee]
---
Predecessors: [0x6c4]
Successors: [0x6ef]
---
0x6dc POP
0x6dd PUSH1 0x1
0x6df SLOAD
0x6e0 CALLER
0x6e1 PUSH1 0x1
0x6e3 PUSH1 0xa0
0x6e5 PUSH1 0x2
0x6e7 EXP
0x6e8 SUB
0x6e9 SWAP1
0x6ea DUP2
0x6eb AND
0x6ec SWAP2
0x6ed AND
0x6ee EQ
---
0x6dd: V649 = 0x1
0x6df: V650 = S[0x1]
0x6e0: V651 = CALLER
0x6e1: V652 = 0x1
0x6e3: V653 = 0xa0
0x6e5: V654 = 0x2
0x6e7: V655 = EXP 0x2 0xa0
0x6e8: V656 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6eb: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V651
0x6ed: V658 = AND V650 0xffffffffffffffffffffffffffffffffffffffff
0x6ee: V659 = EQ V658 V657
---
Entry stack: [V12, 0x14b, V242, V647]
Stack pops: 1
Stack additions: [V659]
Exit stack: [V12, 0x14b, V242, V659]

================================

Block 0x6ef
[0x6ef:0x6f5]
---
Predecessors: [0x6c4, 0x6dc]
Successors: [0x6f6, 0x6fa]
---
0x6ef JUMPDEST
0x6f0 ISZERO
0x6f1 ISZERO
0x6f2 PUSH2 0x6fa
0x6f5 JUMPI
---
0x6ef: JUMPDEST 
0x6f0: V660 = ISZERO S0
0x6f1: V661 = ISZERO V660
0x6f2: V662 = 0x6fa
0x6f5: JUMPI 0x6fa V661
---
Entry stack: [V12, 0x14b, V242, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x14b, V242]

================================

Block 0x6f6
[0x6f6:0x6f9]
---
Predecessors: [0x6ef]
Successors: []
---
0x6f6 PUSH1 0x0
0x6f8 DUP1
0x6f9 REVERT
---
0x6f6: V663 = 0x0
0x6f9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V242]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V242]

================================

Block 0x6fa
[0x6fa:0x701]
---
Predecessors: [0x6ef]
Successors: [0x8dc]
---
0x6fa JUMPDEST
0x6fb PUSH2 0x702
0x6fe PUSH2 0x8dc
0x701 JUMP
---
0x6fa: JUMPDEST 
0x6fb: V664 = 0x702
0x6fe: V665 = 0x8dc
0x701: JUMP 0x8dc
---
Entry stack: [V12, 0x14b, V242]
Stack pops: 0
Stack additions: [0x702]
Exit stack: [V12, 0x14b, V242, 0x702]

================================

Block 0x702
[0x702:0x707]
---
Predecessors: [0x905]
Successors: [0x708, 0x749]
---
0x702 JUMPDEST
0x703 ISZERO
0x704 PUSH2 0x749
0x707 JUMPI
---
0x702: JUMPDEST 
0x703: V666 = ISZERO S0
0x704: V667 = 0x749
0x707: JUMPI 0x749 V666
---
Entry stack: [V12, {0x14b, 0x30e}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, {0x14b, 0x30e}, S1]

================================

Block 0x708
[0x708:0x73f]
---
Predecessors: [0x702]
Successors: [0x740, 0x744]
---
0x708 TIMESTAMP
0x709 PUSH1 0x8
0x70b SSTORE
0x70c PUSH1 0x1
0x70e SLOAD
0x70f PUSH1 0x4
0x711 SLOAD
0x712 PUSH1 0x1
0x714 PUSH1 0xa0
0x716 PUSH1 0x2
0x718 EXP
0x719 SUB
0x71a SWAP1
0x71b SWAP2
0x71c AND
0x71d SWAP1
0x71e DUP1
0x71f ISZERO
0x720 PUSH2 0x8fc
0x723 MUL
0x724 SWAP1
0x725 PUSH1 0x40
0x727 MLOAD
0x728 PUSH1 0x0
0x72a PUSH1 0x40
0x72c MLOAD
0x72d DUP1
0x72e DUP4
0x72f SUB
0x730 DUP2
0x731 DUP6
0x732 DUP9
0x733 DUP9
0x734 CALL
0x735 SWAP4
0x736 POP
0x737 POP
0x738 POP
0x739 POP
0x73a ISZERO
0x73b ISZERO
0x73c PUSH2 0x744
0x73f JUMPI
---
0x708: V668 = TIMESTAMP
0x709: V669 = 0x8
0x70b: S[0x8] = V668
0x70c: V670 = 0x1
0x70e: V671 = S[0x1]
0x70f: V672 = 0x4
0x711: V673 = S[0x4]
0x712: V674 = 0x1
0x714: V675 = 0xa0
0x716: V676 = 0x2
0x718: V677 = EXP 0x2 0xa0
0x719: V678 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71c: V679 = AND V671 0xffffffffffffffffffffffffffffffffffffffff
0x71f: V680 = ISZERO V673
0x720: V681 = 0x8fc
0x723: V682 = MUL 0x8fc V680
0x725: V683 = 0x40
0x727: V684 = M[0x40]
0x728: V685 = 0x0
0x72a: V686 = 0x40
0x72c: V687 = M[0x40]
0x72f: V688 = SUB V684 V687
0x734: V689 = CALL V682 V679 V673 V687 V688 V687 0x0
0x73a: V690 = ISZERO V689
0x73b: V691 = ISZERO V690
0x73c: V692 = 0x744
0x73f: JUMPI 0x744 V691
---
Entry stack: [V12, {0x14b, 0x30e}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x14b, 0x30e}, S0]

================================

Block 0x740
[0x740:0x743]
---
Predecessors: [0x708]
Successors: []
---
0x740 PUSH1 0x0
0x742 DUP1
0x743 REVERT
---
0x740: V693 = 0x0
0x743: REVERT 0x0 0x0
---
Entry stack: [V12, {0x14b, 0x30e}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x14b, 0x30e}, S0]

================================

Block 0x744
[0x744:0x748]
---
Predecessors: [0x708]
Successors: [0x5ac]
---
0x744 JUMPDEST
0x745 PUSH2 0x5ac
0x748 JUMP
---
0x744: JUMPDEST 
0x745: V694 = 0x5ac
0x748: JUMP 0x5ac
---
Entry stack: [V12, {0x14b, 0x30e}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x14b, 0x30e}, S0]

================================

Block 0x749
[0x749:0x78c]
---
Predecessors: [0x702]
Successors: [0x78d, 0x791]
---
0x749 JUMPDEST
0x74a PUSH1 0x3
0x74c SLOAD
0x74d PUSH1 0x1
0x74f PUSH1 0xa0
0x751 PUSH1 0x2
0x753 EXP
0x754 SUB
0x755 AND
0x756 PUSH4 0xea7f7a59
0x75b DUP3
0x75c PUSH1 0x40
0x75e MLOAD
0x75f PUSH1 0xe0
0x761 PUSH1 0x2
0x763 EXP
0x764 PUSH4 0xffffffff
0x769 DUP5
0x76a AND
0x76b MUL
0x76c DUP2
0x76d MSTORE
0x76e PUSH1 0x4
0x770 DUP2
0x771 ADD
0x772 SWAP2
0x773 SWAP1
0x774 SWAP2
0x775 MSTORE
0x776 PUSH1 0x24
0x778 ADD
0x779 PUSH1 0x0
0x77b PUSH1 0x40
0x77d MLOAD
0x77e DUP1
0x77f DUP4
0x780 SUB
0x781 DUP2
0x782 PUSH1 0x0
0x784 DUP8
0x785 DUP1
0x786 EXTCODESIZE
0x787 ISZERO
0x788 ISZERO
0x789 PUSH2 0x791
0x78c JUMPI
---
0x749: JUMPDEST 
0x74a: V695 = 0x3
0x74c: V696 = S[0x3]
0x74d: V697 = 0x1
0x74f: V698 = 0xa0
0x751: V699 = 0x2
0x753: V700 = EXP 0x2 0xa0
0x754: V701 = SUB 0x10000000000000000000000000000000000000000 0x1
0x755: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff V696
0x756: V703 = 0xea7f7a59
0x75c: V704 = 0x40
0x75e: V705 = M[0x40]
0x75f: V706 = 0xe0
0x761: V707 = 0x2
0x763: V708 = EXP 0x2 0xe0
0x764: V709 = 0xffffffff
0x76a: V710 = AND 0xea7f7a59 0xffffffff
0x76b: V711 = MUL 0xea7f7a59 0x100000000000000000000000000000000000000000000000000000000
0x76d: M[V705] = 0xea7f7a5900000000000000000000000000000000000000000000000000000000
0x76e: V712 = 0x4
0x771: V713 = ADD V705 0x4
0x775: M[V713] = S0
0x776: V714 = 0x24
0x778: V715 = ADD 0x24 V705
0x779: V716 = 0x0
0x77b: V717 = 0x40
0x77d: V718 = M[0x40]
0x780: V719 = SUB V715 V718
0x782: V720 = 0x0
0x786: V721 = EXTCODESIZE V702
0x787: V722 = ISZERO V721
0x788: V723 = ISZERO V722
0x789: V724 = 0x791
0x78c: JUMPI 0x791 V723
---
Entry stack: [V12, {0x14b, 0x30e}, S0]
Stack pops: 1
Stack additions: [S0, V702, 0xea7f7a59, V715, 0x0, V718, V719, V718, 0x0, V702]
Exit stack: [V12, {0x14b, 0x30e}, S0, V702, 0xea7f7a59, V715, 0x0, V718, V719, V718, 0x0, V702]

================================

Block 0x78d
[0x78d:0x790]
---
Predecessors: [0x749]
Successors: []
---
0x78d PUSH1 0x0
0x78f DUP1
0x790 REVERT
---
0x78d: V725 = 0x0
0x790: REVERT 0x0 0x0
---
Entry stack: [V12, {0x14b, 0x30e}, S9, V702, 0xea7f7a59, V715, 0x0, V718, V719, V718, 0x0, V702]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x14b, 0x30e}, S9, V702, 0xea7f7a59, V715, 0x0, V718, V719, V718, 0x0, V702]

================================

Block 0x791
[0x791:0x79d]
---
Predecessors: [0x749]
Successors: [0x5e1, 0x79e]
---
0x791 JUMPDEST
0x792 PUSH2 0x2c6
0x795 GAS
0x796 SUB
0x797 CALL
0x798 ISZERO
0x799 ISZERO
0x79a PUSH2 0x5e1
0x79d JUMPI
---
0x791: JUMPDEST 
0x792: V726 = 0x2c6
0x795: V727 = GAS
0x796: V728 = SUB V727 0x2c6
0x797: V729 = CALL V728 V702 0x0 V718 V719 V718 0x0
0x798: V730 = ISZERO V729
0x799: V731 = ISZERO V730
0x79a: V732 = 0x5e1
0x79d: JUMPI 0x5e1 V731
---
Entry stack: [V12, {0x14b, 0x30e}, S9, V702, 0xea7f7a59, V715, 0x0, V718, V719, V718, 0x0, V702]
Stack pops: 6
Stack additions: []
Exit stack: [V12, {0x14b, 0x30e}, S9, V702, 0xea7f7a59, V715]

================================

Block 0x79e
[0x79e:0x7a1]
---
Predecessors: [0x791]
Successors: []
---
0x79e PUSH1 0x0
0x7a0 DUP1
0x7a1 REVERT
---
0x79e: V733 = 0x0
0x7a1: REVERT 0x0 0x0
---
Entry stack: [V12, {0x14b, 0x30e}, S3, S2, 0xea7f7a59, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x14b, 0x30e}, S3, S2, 0xea7f7a59, S0]

================================

Block 0x7a2
[0x7a2:0x7a5]
---
Predecessors: []
Successors: [0x7a6]
---
0x7a2 JUMPDEST
0x7a3 POP
0x7a4 POP
0x7a5 POP
---
0x7a2: JUMPDEST 
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x7a6
[0x7a6:0x7a6]
---
Predecessors: [0x7a2]
Successors: [0x7a7]
---
0x7a6 JUMPDEST
---
0x7a6: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7a7
[0x7a7:0x7a7]
---
Predecessors: [0x7a6]
Successors: [0x7a8]
---
0x7a7 JUMPDEST
---
0x7a7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7a8
[0x7a8:0x7aa]
---
Predecessors: [0x7a7]
Successors: []
Has unresolved jump.
---
0x7a8 JUMPDEST
0x7a9 POP
0x7aa JUMP
---
0x7a8: JUMPDEST 
0x7aa: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x7ab
[0x7ab:0x7c1]
---
Predecessors: [0x2e5]
Successors: [0x7c2, 0x7c6]
---
0x7ab JUMPDEST
0x7ac PUSH1 0x0
0x7ae SLOAD
0x7af CALLER
0x7b0 PUSH1 0x1
0x7b2 PUSH1 0xa0
0x7b4 PUSH1 0x2
0x7b6 EXP
0x7b7 SUB
0x7b8 SWAP1
0x7b9 DUP2
0x7ba AND
0x7bb SWAP2
0x7bc AND
0x7bd EQ
0x7be PUSH2 0x7c6
0x7c1 JUMPI
---
0x7ab: JUMPDEST 
0x7ac: V734 = 0x0
0x7ae: V735 = S[0x0]
0x7af: V736 = CALLER
0x7b0: V737 = 0x1
0x7b2: V738 = 0xa0
0x7b4: V739 = 0x2
0x7b6: V740 = EXP 0x2 0xa0
0x7b7: V741 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ba: V742 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0x7bc: V743 = AND V735 0xffffffffffffffffffffffffffffffffffffffff
0x7bd: V744 = EQ V743 V742
0x7be: V745 = 0x7c6
0x7c1: JUMPI 0x7c6 V744
---
Entry stack: [V12, 0x14b, V256]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V256]

================================

Block 0x7c2
[0x7c2:0x7c5]
---
Predecessors: [0x7ab]
Successors: []
---
0x7c2 PUSH1 0x0
0x7c4 DUP1
0x7c5 REVERT
---
0x7c2: V746 = 0x0
0x7c5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V256]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V256]

================================

Block 0x7c6
[0x7c6:0x7ee]
---
Predecessors: [0x7ab]
Successors: [0x7ef]
---
0x7c6 JUMPDEST
0x7c7 PUSH1 0x2
0x7c9 DUP1
0x7ca SLOAD
0x7cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e0 NOT
0x7e1 AND
0x7e2 PUSH1 0x1
0x7e4 PUSH1 0xa0
0x7e6 PUSH1 0x2
0x7e8 EXP
0x7e9 SUB
0x7ea DUP4
0x7eb AND
0x7ec OR
0x7ed SWAP1
0x7ee SSTORE
---
0x7c6: JUMPDEST 
0x7c7: V747 = 0x2
0x7ca: V748 = S[0x2]
0x7cb: V749 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e0: V750 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x7e1: V751 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V748
0x7e2: V752 = 0x1
0x7e4: V753 = 0xa0
0x7e6: V754 = 0x2
0x7e8: V755 = EXP 0x2 0xa0
0x7e9: V756 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7eb: V757 = AND V256 0xffffffffffffffffffffffffffffffffffffffff
0x7ec: V758 = OR V757 V751
0x7ee: S[0x2] = V758
---
Entry stack: [V12, 0x14b, V256]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x14b, V256]

================================

Block 0x7ef
[0x7ef:0x7ef]
---
Predecessors: [0x7c6]
Successors: [0x7f0]
---
0x7ef JUMPDEST
---
0x7ef: JUMPDEST 
---
Entry stack: [V12, 0x14b, V256]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V256]

================================

Block 0x7f0
[0x7f0:0x7f2]
---
Predecessors: [0x7ef]
Successors: [0x14b]
---
0x7f0 JUMPDEST
0x7f1 POP
0x7f2 JUMP
---
0x7f0: JUMPDEST 
0x7f2: JUMP 0x14b
---
Entry stack: [V12, 0x14b, V256]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f3
[0x7f3:0x83c]
---
Predecessors: [0x306]
Successors: [0x83d, 0x841]
---
0x7f3 JUMPDEST
0x7f4 PUSH1 0x3
0x7f6 SLOAD
0x7f7 PUSH1 0x0
0x7f9 SWAP1
0x7fa PUSH1 0x1
0x7fc PUSH1 0xa0
0x7fe PUSH1 0x2
0x800 EXP
0x801 SUB
0x802 ADDRESS
0x803 DUP2
0x804 AND
0x805 SWAP2
0x806 AND
0x807 PUSH4 0xf851a440
0x80c DUP4
0x80d PUSH1 0x40
0x80f MLOAD
0x810 PUSH1 0x20
0x812 ADD
0x813 MSTORE
0x814 PUSH1 0x40
0x816 MLOAD
0x817 DUP2
0x818 PUSH4 0xffffffff
0x81d AND
0x81e PUSH1 0xe0
0x820 PUSH1 0x2
0x822 EXP
0x823 MUL
0x824 DUP2
0x825 MSTORE
0x826 PUSH1 0x4
0x828 ADD
0x829 PUSH1 0x20
0x82b PUSH1 0x40
0x82d MLOAD
0x82e DUP1
0x82f DUP4
0x830 SUB
0x831 DUP2
0x832 PUSH1 0x0
0x834 DUP8
0x835 DUP1
0x836 EXTCODESIZE
0x837 ISZERO
0x838 ISZERO
0x839 PUSH2 0x841
0x83c JUMPI
---
0x7f3: JUMPDEST 
0x7f4: V759 = 0x3
0x7f6: V760 = S[0x3]
0x7f7: V761 = 0x0
0x7fa: V762 = 0x1
0x7fc: V763 = 0xa0
0x7fe: V764 = 0x2
0x800: V765 = EXP 0x2 0xa0
0x801: V766 = SUB 0x10000000000000000000000000000000000000000 0x1
0x802: V767 = ADDRESS
0x804: V768 = AND 0xffffffffffffffffffffffffffffffffffffffff V767
0x806: V769 = AND V760 0xffffffffffffffffffffffffffffffffffffffff
0x807: V770 = 0xf851a440
0x80d: V771 = 0x40
0x80f: V772 = M[0x40]
0x810: V773 = 0x20
0x812: V774 = ADD 0x20 V772
0x813: M[V774] = 0x0
0x814: V775 = 0x40
0x816: V776 = M[0x40]
0x818: V777 = 0xffffffff
0x81d: V778 = AND 0xffffffff 0xf851a440
0x81e: V779 = 0xe0
0x820: V780 = 0x2
0x822: V781 = EXP 0x2 0xe0
0x823: V782 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xf851a440
0x825: M[V776] = 0xf851a44000000000000000000000000000000000000000000000000000000000
0x826: V783 = 0x4
0x828: V784 = ADD 0x4 V776
0x829: V785 = 0x20
0x82b: V786 = 0x40
0x82d: V787 = M[0x40]
0x830: V788 = SUB V784 V787
0x832: V789 = 0x0
0x836: V790 = EXTCODESIZE V769
0x837: V791 = ISZERO V790
0x838: V792 = ISZERO V791
0x839: V793 = 0x841
0x83c: JUMPI 0x841 V792
---
Entry stack: [V12, 0x30e]
Stack pops: 0
Stack additions: [0x0, V768, V769, 0xf851a440, V784, 0x20, V787, V788, V787, 0x0, V769]
Exit stack: [V12, 0x30e, 0x0, V768, V769, 0xf851a440, V784, 0x20, V787, V788, V787, 0x0, V769]

================================

Block 0x83d
[0x83d:0x840]
---
Predecessors: [0x7f3]
Successors: []
---
0x83d PUSH1 0x0
0x83f DUP1
0x840 REVERT
---
0x83d: V794 = 0x0
0x840: REVERT 0x0 0x0
---
Entry stack: [V12, 0x30e, 0x0, V768, V769, 0xf851a440, V784, 0x20, V787, V788, V787, 0x0, V769]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30e, 0x0, V768, V769, 0xf851a440, V784, 0x20, V787, V788, V787, 0x0, V769]

================================

Block 0x841
[0x841:0x84d]
---
Predecessors: [0x7f3]
Successors: [0x84e, 0x852]
---
0x841 JUMPDEST
0x842 PUSH2 0x2c6
0x845 GAS
0x846 SUB
0x847 CALL
0x848 ISZERO
0x849 ISZERO
0x84a PUSH2 0x852
0x84d JUMPI
---
0x841: JUMPDEST 
0x842: V795 = 0x2c6
0x845: V796 = GAS
0x846: V797 = SUB V796 0x2c6
0x847: V798 = CALL V797 V769 0x0 V787 V788 V787 0x20
0x848: V799 = ISZERO V798
0x849: V800 = ISZERO V799
0x84a: V801 = 0x852
0x84d: JUMPI 0x852 V800
---
Entry stack: [V12, 0x30e, 0x0, V768, V769, 0xf851a440, V784, 0x20, V787, V788, V787, 0x0, V769]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x30e, 0x0, V768, V769, 0xf851a440, V784]

================================

Block 0x84e
[0x84e:0x851]
---
Predecessors: [0x841]
Successors: []
---
0x84e PUSH1 0x0
0x850 DUP1
0x851 REVERT
---
0x84e: V802 = 0x0
0x851: REVERT 0x0 0x0
---
Entry stack: [V12, 0x30e, 0x0, V768, V769, 0xf851a440, V784]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30e, 0x0, V768, V769, 0xf851a440, V784]

================================

Block 0x852
[0x852:0x86c]
---
Predecessors: [0x841]
Successors: [0x86d, 0x874]
---
0x852 JUMPDEST
0x853 POP
0x854 POP
0x855 POP
0x856 PUSH1 0x40
0x858 MLOAD
0x859 DUP1
0x85a MLOAD
0x85b SWAP1
0x85c POP
0x85d PUSH1 0x1
0x85f PUSH1 0xa0
0x861 PUSH1 0x2
0x863 EXP
0x864 SUB
0x865 AND
0x866 EQ
0x867 ISZERO
0x868 ISZERO
0x869 PUSH2 0x874
0x86c JUMPI
---
0x852: JUMPDEST 
0x856: V803 = 0x40
0x858: V804 = M[0x40]
0x85a: V805 = M[V804]
0x85d: V806 = 0x1
0x85f: V807 = 0xa0
0x861: V808 = 0x2
0x863: V809 = EXP 0x2 0xa0
0x864: V810 = SUB 0x10000000000000000000000000000000000000000 0x1
0x865: V811 = AND 0xffffffffffffffffffffffffffffffffffffffff V805
0x866: V812 = EQ V811 V768
0x867: V813 = ISZERO V812
0x868: V814 = ISZERO V813
0x869: V815 = 0x874
0x86c: JUMPI 0x874 V814
---
Entry stack: [V12, 0x30e, 0x0, V768, V769, 0xf851a440, V784]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x30e, 0x0]

================================

Block 0x86d
[0x86d:0x873]
---
Predecessors: [0x852]
Successors: [0x8d9]
---
0x86d POP
0x86e PUSH1 0x0
0x870 PUSH2 0x8d9
0x873 JUMP
---
0x86e: V816 = 0x0
0x870: V817 = 0x8d9
0x873: JUMP 0x8d9
---
Entry stack: [V12, 0x30e, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x30e, 0x0]

================================

Block 0x874
[0x874:0x8b7]
---
Predecessors: [0x852]
Successors: [0x8b8, 0x8bc]
---
0x874 JUMPDEST
0x875 PUSH1 0x3
0x877 SLOAD
0x878 PUSH1 0x1
0x87a PUSH1 0xa0
0x87c PUSH1 0x2
0x87e EXP
0x87f SUB
0x880 AND
0x881 PUSH4 0xb6253539
0x886 PUSH1 0x0
0x888 PUSH1 0x40
0x88a MLOAD
0x88b PUSH1 0x20
0x88d ADD
0x88e MSTORE
0x88f PUSH1 0x40
0x891 MLOAD
0x892 DUP2
0x893 PUSH4 0xffffffff
0x898 AND
0x899 PUSH1 0xe0
0x89b PUSH1 0x2
0x89d EXP
0x89e MUL
0x89f DUP2
0x8a0 MSTORE
0x8a1 PUSH1 0x4
0x8a3 ADD
0x8a4 PUSH1 0x20
0x8a6 PUSH1 0x40
0x8a8 MLOAD
0x8a9 DUP1
0x8aa DUP4
0x8ab SUB
0x8ac DUP2
0x8ad PUSH1 0x0
0x8af DUP8
0x8b0 DUP1
0x8b1 EXTCODESIZE
0x8b2 ISZERO
0x8b3 ISZERO
0x8b4 PUSH2 0x8bc
0x8b7 JUMPI
---
0x874: JUMPDEST 
0x875: V818 = 0x3
0x877: V819 = S[0x3]
0x878: V820 = 0x1
0x87a: V821 = 0xa0
0x87c: V822 = 0x2
0x87e: V823 = EXP 0x2 0xa0
0x87f: V824 = SUB 0x10000000000000000000000000000000000000000 0x1
0x880: V825 = AND 0xffffffffffffffffffffffffffffffffffffffff V819
0x881: V826 = 0xb6253539
0x886: V827 = 0x0
0x888: V828 = 0x40
0x88a: V829 = M[0x40]
0x88b: V830 = 0x20
0x88d: V831 = ADD 0x20 V829
0x88e: M[V831] = 0x0
0x88f: V832 = 0x40
0x891: V833 = M[0x40]
0x893: V834 = 0xffffffff
0x898: V835 = AND 0xffffffff 0xb6253539
0x899: V836 = 0xe0
0x89b: V837 = 0x2
0x89d: V838 = EXP 0x2 0xe0
0x89e: V839 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb6253539
0x8a0: M[V833] = 0xb625353900000000000000000000000000000000000000000000000000000000
0x8a1: V840 = 0x4
0x8a3: V841 = ADD 0x4 V833
0x8a4: V842 = 0x20
0x8a6: V843 = 0x40
0x8a8: V844 = M[0x40]
0x8ab: V845 = SUB V841 V844
0x8ad: V846 = 0x0
0x8b1: V847 = EXTCODESIZE V825
0x8b2: V848 = ISZERO V847
0x8b3: V849 = ISZERO V848
0x8b4: V850 = 0x8bc
0x8b7: JUMPI 0x8bc V849
---
Entry stack: [V12, 0x30e, 0x0]
Stack pops: 0
Stack additions: [V825, 0xb6253539, V841, 0x20, V844, V845, V844, 0x0, V825]
Exit stack: [V12, 0x30e, 0x0, V825, 0xb6253539, V841, 0x20, V844, V845, V844, 0x0, V825]

================================

Block 0x8b8
[0x8b8:0x8bb]
---
Predecessors: [0x874]
Successors: []
---
0x8b8 PUSH1 0x0
0x8ba DUP1
0x8bb REVERT
---
0x8b8: V851 = 0x0
0x8bb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x30e, 0x0, V825, 0xb6253539, V841, 0x20, V844, V845, V844, 0x0, V825]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30e, 0x0, V825, 0xb6253539, V841, 0x20, V844, V845, V844, 0x0, V825]

================================

Block 0x8bc
[0x8bc:0x8c8]
---
Predecessors: [0x874, 0x9ac]
Successors: [0x8c9, 0x8cd]
---
0x8bc JUMPDEST
0x8bd PUSH2 0x2c6
0x8c0 GAS
0x8c1 SUB
0x8c2 CALL
0x8c3 ISZERO
0x8c4 ISZERO
0x8c5 PUSH2 0x8cd
0x8c8 JUMPI
---
0x8bc: JUMPDEST 
0x8bd: V852 = 0x2c6
0x8c0: V853 = GAS
0x8c1: V854 = SUB V853 0x2c6
0x8c2: V855 = CALL V854 S0 0x0 S2 S3 S4 0x20
0x8c3: V856 = ISZERO V855
0x8c4: V857 = ISZERO V856
0x8c5: V858 = 0x8cd
0x8c8: JUMPI 0x8cd V857
---
Entry stack: [V12, {0x14b, 0x30e}, S9, S8, {0xb6253539, 0xbca7e96b}, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, {0x14b, 0x30e}, S9, S8, {0xb6253539, 0xbca7e96b}, S6]

================================

Block 0x8c9
[0x8c9:0x8cc]
---
Predecessors: [0x8bc]
Successors: []
---
0x8c9 PUSH1 0x0
0x8cb DUP1
0x8cc REVERT
---
0x8c9: V859 = 0x0
0x8cc: REVERT 0x0 0x0
---
Entry stack: [V12, {0x14b, 0x30e}, S3, S2, {0xb6253539, 0xbca7e96b}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x14b, 0x30e}, S3, S2, {0xb6253539, 0xbca7e96b}, S0]

================================

Block 0x8cd
[0x8cd:0x8d8]
---
Predecessors: [0x8bc, 0x9f4]
Successors: [0x8d9]
---
0x8cd JUMPDEST
0x8ce POP
0x8cf POP
0x8d0 POP
0x8d1 PUSH1 0x40
0x8d3 MLOAD
0x8d4 DUP1
0x8d5 MLOAD
0x8d6 SWAP2
0x8d7 POP
0x8d8 POP
---
0x8cd: JUMPDEST 
0x8d1: V860 = 0x40
0x8d3: V861 = M[0x40]
0x8d5: V862 = M[V861]
---
Entry stack: [V12, {0x14b, 0x30e}, S3, S2, {0xb6253539, 0xbca7e96b}, S0]
Stack pops: 4
Stack additions: [V862]
Exit stack: [V12, {0x14b, 0x30e}, V862]

================================

Block 0x8d9
[0x8d9:0x8db]
---
Predecessors: [0x86d, 0x8cd, 0x997]
Successors: [0x14b, 0x30e]
---
0x8d9 JUMPDEST
0x8da SWAP1
0x8db JUMP
---
0x8d9: JUMPDEST 
0x8db: JUMP {0x14b, 0x30e}
---
Entry stack: [V12, {0x14b, 0x30e}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0x8dc
[0x8dc:0x8ef]
---
Predecessors: [0x32d, 0x6fa, 0x99e]
Successors: [0x8f0, 0x902]
---
0x8dc JUMPDEST
0x8dd PUSH1 0x0
0x8df PUSH3 0x15180
0x8e3 PUSH1 0x8
0x8e5 SLOAD
0x8e6 TIMESTAMP
0x8e7 SUB
0x8e8 LT
0x8e9 ISZERO
0x8ea DUP1
0x8eb ISZERO
0x8ec PUSH2 0x902
0x8ef JUMPI
---
0x8dc: JUMPDEST 
0x8dd: V863 = 0x0
0x8df: V864 = 0x15180
0x8e3: V865 = 0x8
0x8e5: V866 = S[0x8]
0x8e6: V867 = TIMESTAMP
0x8e7: V868 = SUB V867 V866
0x8e8: V869 = LT V868 0x15180
0x8e9: V870 = ISZERO V869
0x8eb: V871 = ISZERO V870
0x8ec: V872 = 0x902
0x8ef: JUMPI 0x902 V871
---
Entry stack: [V12, {0x14b, 0x30e}, S1, {0x30e, 0x702, 0x9a6}]
Stack pops: 0
Stack additions: [0x0, V870]
Exit stack: [V12, {0x14b, 0x30e}, S1, {0x30e, 0x702, 0x9a6}, 0x0, V870]

================================

Block 0x8f0
[0x8f0:0x901]
---
Predecessors: [0x8dc]
Successors: [0x902]
---
0x8f0 POP
0x8f1 PUSH1 0x5
0x8f3 SLOAD
0x8f4 PUSH1 0x1
0x8f6 SLOAD
0x8f7 PUSH1 0x1
0x8f9 PUSH1 0xa0
0x8fb PUSH1 0x2
0x8fd EXP
0x8fe SUB
0x8ff AND
0x900 BALANCE
0x901 LT
---
0x8f1: V873 = 0x5
0x8f3: V874 = S[0x5]
0x8f4: V875 = 0x1
0x8f6: V876 = S[0x1]
0x8f7: V877 = 0x1
0x8f9: V878 = 0xa0
0x8fb: V879 = 0x2
0x8fd: V880 = EXP 0x2 0xa0
0x8fe: V881 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ff: V882 = AND 0xffffffffffffffffffffffffffffffffffffffff V876
0x900: V883 = BALANCE V882
0x901: V884 = LT V883 V874
---
Entry stack: [V12, {0x14b, 0x30e}, S3, {0x30e, 0x702, 0x9a6}, 0x0, V870]
Stack pops: 1
Stack additions: [V884]
Exit stack: [V12, {0x14b, 0x30e}, S3, {0x30e, 0x702, 0x9a6}, 0x0, V884]

================================

Block 0x902
[0x902:0x904]
---
Predecessors: [0x8dc, 0x8f0, 0x9a6]
Successors: [0x905]
---
0x902 JUMPDEST
0x903 SWAP1
0x904 POP
---
0x902: JUMPDEST 
---
Entry stack: [V12, {0x14b, 0x30e}, S3, {0x14b, 0x30e, 0x702, 0x9a6}, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, {0x14b, 0x30e}, S3, {0x14b, 0x30e, 0x702, 0x9a6}, S0]

================================

Block 0x905
[0x905:0x907]
---
Predecessors: [0x902]
Successors: [0x14b, 0x30e, 0x702, 0x9a6]
---
0x905 JUMPDEST
0x906 SWAP1
0x907 JUMP
---
0x905: JUMPDEST 
0x907: JUMP {0x14b, 0x30e, 0x702, 0x9a6}
---
Entry stack: [V12, {0x14b, 0x30e}, S2, {0x14b, 0x30e, 0x702, 0x9a6}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, {0x14b, 0x30e}, S2, S0]

================================

Block 0x908
[0x908:0x90d]
---
Predecessors: [0x354]
Successors: [0x1d2]
---
0x908 JUMPDEST
0x909 PUSH1 0x7
0x90b SLOAD
0x90c DUP2
0x90d JUMP
---
0x908: JUMPDEST 
0x909: V885 = 0x7
0x90b: V886 = S[0x7]
0x90d: JUMP 0x1d2
---
Entry stack: [V12, 0x1d2]
Stack pops: 1
Stack additions: [S0, V886]
Exit stack: [V12, 0x1d2, V886]

================================

Block 0x90e
[0x90e:0x91c]
---
Predecessors: [0x379]
Successors: [0x23d]
---
0x90e JUMPDEST
0x90f PUSH1 0x2
0x911 SLOAD
0x912 PUSH1 0x1
0x914 PUSH1 0xa0
0x916 PUSH1 0x2
0x918 EXP
0x919 SUB
0x91a AND
0x91b DUP2
0x91c JUMP
---
0x90e: JUMPDEST 
0x90f: V887 = 0x2
0x911: V888 = S[0x2]
0x912: V889 = 0x1
0x914: V890 = 0xa0
0x916: V891 = 0x2
0x918: V892 = EXP 0x2 0xa0
0x919: V893 = SUB 0x10000000000000000000000000000000000000000 0x1
0x91a: V894 = AND 0xffffffffffffffffffffffffffffffffffffffff V888
0x91c: JUMP 0x23d
---
Entry stack: [V12, 0x23d]
Stack pops: 1
Stack additions: [S0, V894]
Exit stack: [V12, 0x23d, V894]

================================

Block 0x91d
[0x91d:0x966]
---
Predecessors: [0x3a8]
Successors: [0x967, 0x96b]
---
0x91d JUMPDEST
0x91e PUSH1 0x3
0x920 SLOAD
0x921 PUSH1 0x0
0x923 SWAP1
0x924 PUSH1 0x1
0x926 PUSH1 0xa0
0x928 PUSH1 0x2
0x92a EXP
0x92b SUB
0x92c ADDRESS
0x92d DUP2
0x92e AND
0x92f SWAP2
0x930 AND
0x931 PUSH4 0xf851a440
0x936 DUP4
0x937 PUSH1 0x40
0x939 MLOAD
0x93a PUSH1 0x20
0x93c ADD
0x93d MSTORE
0x93e PUSH1 0x40
0x940 MLOAD
0x941 DUP2
0x942 PUSH4 0xffffffff
0x947 AND
0x948 PUSH1 0xe0
0x94a PUSH1 0x2
0x94c EXP
0x94d MUL
0x94e DUP2
0x94f MSTORE
0x950 PUSH1 0x4
0x952 ADD
0x953 PUSH1 0x20
0x955 PUSH1 0x40
0x957 MLOAD
0x958 DUP1
0x959 DUP4
0x95a SUB
0x95b DUP2
0x95c PUSH1 0x0
0x95e DUP8
0x95f DUP1
0x960 EXTCODESIZE
0x961 ISZERO
0x962 ISZERO
0x963 PUSH2 0x96b
0x966 JUMPI
---
0x91d: JUMPDEST 
0x91e: V895 = 0x3
0x920: V896 = S[0x3]
0x921: V897 = 0x0
0x924: V898 = 0x1
0x926: V899 = 0xa0
0x928: V900 = 0x2
0x92a: V901 = EXP 0x2 0xa0
0x92b: V902 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92c: V903 = ADDRESS
0x92e: V904 = AND 0xffffffffffffffffffffffffffffffffffffffff V903
0x930: V905 = AND V896 0xffffffffffffffffffffffffffffffffffffffff
0x931: V906 = 0xf851a440
0x937: V907 = 0x40
0x939: V908 = M[0x40]
0x93a: V909 = 0x20
0x93c: V910 = ADD 0x20 V908
0x93d: M[V910] = 0x0
0x93e: V911 = 0x40
0x940: V912 = M[0x40]
0x942: V913 = 0xffffffff
0x947: V914 = AND 0xffffffff 0xf851a440
0x948: V915 = 0xe0
0x94a: V916 = 0x2
0x94c: V917 = EXP 0x2 0xe0
0x94d: V918 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xf851a440
0x94f: M[V912] = 0xf851a44000000000000000000000000000000000000000000000000000000000
0x950: V919 = 0x4
0x952: V920 = ADD 0x4 V912
0x953: V921 = 0x20
0x955: V922 = 0x40
0x957: V923 = M[0x40]
0x95a: V924 = SUB V920 V923
0x95c: V925 = 0x0
0x960: V926 = EXTCODESIZE V905
0x961: V927 = ISZERO V926
0x962: V928 = ISZERO V927
0x963: V929 = 0x96b
0x966: JUMPI 0x96b V928
---
Entry stack: [V12, 0x30e]
Stack pops: 0
Stack additions: [0x0, V904, V905, 0xf851a440, V920, 0x20, V923, V924, V923, 0x0, V905]
Exit stack: [V12, 0x30e, 0x0, V904, V905, 0xf851a440, V920, 0x20, V923, V924, V923, 0x0, V905]

================================

Block 0x967
[0x967:0x96a]
---
Predecessors: [0x91d]
Successors: []
---
0x967 PUSH1 0x0
0x969 DUP1
0x96a REVERT
---
0x967: V930 = 0x0
0x96a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x30e, 0x0, V904, V905, 0xf851a440, V920, 0x20, V923, V924, V923, 0x0, V905]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30e, 0x0, V904, V905, 0xf851a440, V920, 0x20, V923, V924, V923, 0x0, V905]

================================

Block 0x96b
[0x96b:0x977]
---
Predecessors: [0x91d]
Successors: [0x978, 0x97c]
---
0x96b JUMPDEST
0x96c PUSH2 0x2c6
0x96f GAS
0x970 SUB
0x971 CALL
0x972 ISZERO
0x973 ISZERO
0x974 PUSH2 0x97c
0x977 JUMPI
---
0x96b: JUMPDEST 
0x96c: V931 = 0x2c6
0x96f: V932 = GAS
0x970: V933 = SUB V932 0x2c6
0x971: V934 = CALL V933 V905 0x0 V923 V924 V923 0x20
0x972: V935 = ISZERO V934
0x973: V936 = ISZERO V935
0x974: V937 = 0x97c
0x977: JUMPI 0x97c V936
---
Entry stack: [V12, 0x30e, 0x0, V904, V905, 0xf851a440, V920, 0x20, V923, V924, V923, 0x0, V905]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x30e, 0x0, V904, V905, 0xf851a440, V920]

================================

Block 0x978
[0x978:0x97b]
---
Predecessors: [0x96b]
Successors: []
---
0x978 PUSH1 0x0
0x97a DUP1
0x97b REVERT
---
0x978: V938 = 0x0
0x97b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x30e, 0x0, V904, V905, 0xf851a440, V920]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x30e, 0x0, V904, V905, 0xf851a440, V920]

================================

Block 0x97c
[0x97c:0x996]
---
Predecessors: [0x96b]
Successors: [0x997, 0x99e]
---
0x97c JUMPDEST
0x97d POP
0x97e POP
0x97f POP
0x980 PUSH1 0x40
0x982 MLOAD
0x983 DUP1
0x984 MLOAD
0x985 SWAP1
0x986 POP
0x987 PUSH1 0x1
0x989 PUSH1 0xa0
0x98b PUSH1 0x2
0x98d EXP
0x98e SUB
0x98f AND
0x990 EQ
0x991 ISZERO
0x992 ISZERO
0x993 PUSH2 0x99e
0x996 JUMPI
---
0x97c: JUMPDEST 
0x980: V939 = 0x40
0x982: V940 = M[0x40]
0x984: V941 = M[V940]
0x987: V942 = 0x1
0x989: V943 = 0xa0
0x98b: V944 = 0x2
0x98d: V945 = EXP 0x2 0xa0
0x98e: V946 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98f: V947 = AND 0xffffffffffffffffffffffffffffffffffffffff V941
0x990: V948 = EQ V947 V904
0x991: V949 = ISZERO V948
0x992: V950 = ISZERO V949
0x993: V951 = 0x99e
0x996: JUMPI 0x99e V950
---
Entry stack: [V12, 0x30e, 0x0, V904, V905, 0xf851a440, V920]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x30e, 0x0]

================================

Block 0x997
[0x997:0x99d]
---
Predecessors: [0x97c]
Successors: [0x8d9]
---
0x997 POP
0x998 PUSH1 0x0
0x99a PUSH2 0x8d9
0x99d JUMP
---
0x998: V952 = 0x0
0x99a: V953 = 0x8d9
0x99d: JUMP 0x8d9
---
Entry stack: [V12, 0x30e, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x30e, 0x0]

================================

Block 0x99e
[0x99e:0x9a5]
---
Predecessors: [0x97c]
Successors: [0x8dc]
---
0x99e JUMPDEST
0x99f PUSH2 0x9a6
0x9a2 PUSH2 0x8dc
0x9a5 JUMP
---
0x99e: JUMPDEST 
0x99f: V954 = 0x9a6
0x9a2: V955 = 0x8dc
0x9a5: JUMP 0x8dc
---
Entry stack: [V12, 0x30e, 0x0]
Stack pops: 0
Stack additions: [0x9a6]
Exit stack: [V12, 0x30e, 0x0, 0x9a6]

================================

Block 0x9a6
[0x9a6:0x9ab]
---
Predecessors: [0x905]
Successors: [0x902, 0x9ac]
---
0x9a6 JUMPDEST
0x9a7 DUP1
0x9a8 PUSH2 0x902
0x9ab JUMPI
---
0x9a6: JUMPDEST 
0x9a8: V956 = 0x902
0x9ab: JUMPI 0x902 S0
---
Entry stack: [V12, {0x14b, 0x30e}, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, {0x14b, 0x30e}, S1, S0]

================================

Block 0x9ac
[0x9ac:0x9ef]
---
Predecessors: [0x9a6]
Successors: [0x8bc, 0x9f0]
---
0x9ac POP
0x9ad PUSH1 0x3
0x9af SLOAD
0x9b0 PUSH1 0x1
0x9b2 PUSH1 0xa0
0x9b4 PUSH1 0x2
0x9b6 EXP
0x9b7 SUB
0x9b8 AND
0x9b9 PUSH4 0xbca7e96b
0x9be PUSH1 0x0
0x9c0 PUSH1 0x40
0x9c2 MLOAD
0x9c3 PUSH1 0x20
0x9c5 ADD
0x9c6 MSTORE
0x9c7 PUSH1 0x40
0x9c9 MLOAD
0x9ca DUP2
0x9cb PUSH4 0xffffffff
0x9d0 AND
0x9d1 PUSH1 0xe0
0x9d3 PUSH1 0x2
0x9d5 EXP
0x9d6 MUL
0x9d7 DUP2
0x9d8 MSTORE
0x9d9 PUSH1 0x4
0x9db ADD
0x9dc PUSH1 0x20
0x9de PUSH1 0x40
0x9e0 MLOAD
0x9e1 DUP1
0x9e2 DUP4
0x9e3 SUB
0x9e4 DUP2
0x9e5 PUSH1 0x0
0x9e7 DUP8
0x9e8 DUP1
0x9e9 EXTCODESIZE
0x9ea ISZERO
0x9eb ISZERO
0x9ec PUSH2 0x8bc
0x9ef JUMPI
---
0x9ad: V957 = 0x3
0x9af: V958 = S[0x3]
0x9b0: V959 = 0x1
0x9b2: V960 = 0xa0
0x9b4: V961 = 0x2
0x9b6: V962 = EXP 0x2 0xa0
0x9b7: V963 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b8: V964 = AND 0xffffffffffffffffffffffffffffffffffffffff V958
0x9b9: V965 = 0xbca7e96b
0x9be: V966 = 0x0
0x9c0: V967 = 0x40
0x9c2: V968 = M[0x40]
0x9c3: V969 = 0x20
0x9c5: V970 = ADD 0x20 V968
0x9c6: M[V970] = 0x0
0x9c7: V971 = 0x40
0x9c9: V972 = M[0x40]
0x9cb: V973 = 0xffffffff
0x9d0: V974 = AND 0xffffffff 0xbca7e96b
0x9d1: V975 = 0xe0
0x9d3: V976 = 0x2
0x9d5: V977 = EXP 0x2 0xe0
0x9d6: V978 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xbca7e96b
0x9d8: M[V972] = 0xbca7e96b00000000000000000000000000000000000000000000000000000000
0x9d9: V979 = 0x4
0x9db: V980 = ADD 0x4 V972
0x9dc: V981 = 0x20
0x9de: V982 = 0x40
0x9e0: V983 = M[0x40]
0x9e3: V984 = SUB V980 V983
0x9e5: V985 = 0x0
0x9e9: V986 = EXTCODESIZE V964
0x9ea: V987 = ISZERO V986
0x9eb: V988 = ISZERO V987
0x9ec: V989 = 0x8bc
0x9ef: JUMPI 0x8bc V988
---
Entry stack: [V12, {0x14b, 0x30e}, S1, S0]
Stack pops: 1
Stack additions: [V964, 0xbca7e96b, V980, 0x20, V983, V984, V983, 0x0, V964]
Exit stack: [V12, {0x14b, 0x30e}, S1, V964, 0xbca7e96b, V980, 0x20, V983, V984, V983, 0x0, V964]

================================

Block 0x9f0
[0x9f0:0x9f3]
---
Predecessors: [0x9ac]
Successors: []
---
0x9f0 PUSH1 0x0
0x9f2 DUP1
0x9f3 REVERT
---
0x9f0: V990 = 0x0
0x9f3: REVERT 0x0 0x0
---
Entry stack: [V12, {0x14b, 0x30e}, S9, V964, 0xbca7e96b, V980, 0x20, V983, V984, V983, 0x0, V964]
Stack pops: 0
Stack additions: []
Exit stack: [V12, {0x14b, 0x30e}, S9, V964, 0xbca7e96b, V980, 0x20, V983, V984, V983, 0x0, V964]

================================

Block 0x9f4
[0x9f4:0xa00]
---
Predecessors: []
Successors: [0x8cd, 0xa01]
---
0x9f4 JUMPDEST
0x9f5 PUSH2 0x2c6
0x9f8 GAS
0x9f9 SUB
0x9fa CALL
0x9fb ISZERO
0x9fc ISZERO
0x9fd PUSH2 0x8cd
0xa00 JUMPI
---
0x9f4: JUMPDEST 
0x9f5: V991 = 0x2c6
0x9f8: V992 = GAS
0x9f9: V993 = SUB V992 0x2c6
0x9fa: V994 = CALL V993 S0 S1 S2 S3 S4 S5
0x9fb: V995 = ISZERO V994
0x9fc: V996 = ISZERO V995
0x9fd: V997 = 0x8cd
0xa00: JUMPI 0x8cd V996
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0xa01
[0xa01:0xa0f]
---
Predecessors: [0x9f4]
Successors: [0xa10]
---
0xa01 PUSH1 0x0
0xa03 DUP1
0xa04 REVERT
0xa05 JUMPDEST
0xa06 POP
0xa07 POP
0xa08 POP
0xa09 PUSH1 0x40
0xa0b MLOAD
0xa0c DUP1
0xa0d MLOAD
0xa0e SWAP1
0xa0f POP
---
0xa01: V998 = 0x0
0xa04: REVERT 0x0 0x0
0xa05: JUMPDEST 
0xa09: V999 = 0x40
0xa0b: V1000 = M[0x40]
0xa0d: V1001 = M[V1000]
---
Entry stack: []
Stack pops: 0
Stack additions: [V1001]
Exit stack: []

================================

Block 0xa10
[0xa10:0xa12]
---
Predecessors: [0xa01]
Successors: [0xa13]
---
0xa10 JUMPDEST
0xa11 SWAP1
0xa12 POP
---
0xa10: JUMPDEST 
---
Entry stack: [V1001]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V1001]

================================

Block 0xa13
[0xa13:0xa15]
---
Predecessors: [0xa10]
Successors: []
Has unresolved jump.
---
0xa13 JUMPDEST
0xa14 SWAP1
0xa15 JUMP
---
0xa13: JUMPDEST 
0xa15: JUMP S1
---
Entry stack: [V1001]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V1001]

================================

Block 0xa16
[0xa16:0xa1b]
---
Predecessors: [0x3cf]
Successors: [0x1d2]
---
0xa16 JUMPDEST
0xa17 PUSH1 0x5
0xa19 SLOAD
0xa1a DUP2
0xa1b JUMP
---
0xa16: JUMPDEST 
0xa17: V1002 = 0x5
0xa19: V1003 = S[0x5]
0xa1b: JUMP 0x1d2
---
Entry stack: [V12, 0x1d2]
Stack pops: 1
Stack additions: [S0, V1003]
Exit stack: [V12, 0x1d2, V1003]

================================

Block 0xa1c
[0xa1c:0xa21]
---
Predecessors: [0x3f4]
Successors: [0x1d2]
---
0xa1c JUMPDEST
0xa1d PUSH1 0x6
0xa1f SLOAD
0xa20 DUP2
0xa21 JUMP
---
0xa1c: JUMPDEST 
0xa1d: V1004 = 0x6
0xa1f: V1005 = S[0x6]
0xa21: JUMP 0x1d2
---
Entry stack: [V12, 0x1d2]
Stack pops: 1
Stack additions: [S0, V1005]
Exit stack: [V12, 0x1d2, V1005]

================================

Block 0xa22
[0xa22:0xa38]
---
Predecessors: [0x419]
Successors: [0xa39, 0xa3d]
---
0xa22 JUMPDEST
0xa23 PUSH1 0x0
0xa25 SLOAD
0xa26 CALLER
0xa27 PUSH1 0x1
0xa29 PUSH1 0xa0
0xa2b PUSH1 0x2
0xa2d EXP
0xa2e SUB
0xa2f SWAP1
0xa30 DUP2
0xa31 AND
0xa32 SWAP2
0xa33 AND
0xa34 EQ
0xa35 PUSH2 0xa3d
0xa38 JUMPI
---
0xa22: JUMPDEST 
0xa23: V1006 = 0x0
0xa25: V1007 = S[0x0]
0xa26: V1008 = CALLER
0xa27: V1009 = 0x1
0xa29: V1010 = 0xa0
0xa2b: V1011 = 0x2
0xa2d: V1012 = EXP 0x2 0xa0
0xa2e: V1013 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa31: V1014 = AND 0xffffffffffffffffffffffffffffffffffffffff V1008
0xa33: V1015 = AND V1007 0xffffffffffffffffffffffffffffffffffffffff
0xa34: V1016 = EQ V1015 V1014
0xa35: V1017 = 0xa3d
0xa38: JUMPI 0xa3d V1016
---
Entry stack: [V12, 0x14b, V373]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V373]

================================

Block 0xa39
[0xa39:0xa3c]
---
Predecessors: [0xa22]
Successors: []
---
0xa39 PUSH1 0x0
0xa3b DUP1
0xa3c REVERT
---
0xa39: V1018 = 0x0
0xa3c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x14b, V373]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V373]

================================

Block 0xa3d
[0xa3d:0xa65]
---
Predecessors: [0xa22]
Successors: [0xa66]
---
0xa3d JUMPDEST
0xa3e PUSH1 0x3
0xa40 DUP1
0xa41 SLOAD
0xa42 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa57 NOT
0xa58 AND
0xa59 PUSH1 0x1
0xa5b PUSH1 0xa0
0xa5d PUSH1 0x2
0xa5f EXP
0xa60 SUB
0xa61 DUP4
0xa62 AND
0xa63 OR
0xa64 SWAP1
0xa65 SSTORE
---
0xa3d: JUMPDEST 
0xa3e: V1019 = 0x3
0xa41: V1020 = S[0x3]
0xa42: V1021 = 0xffffffffffffffffffffffffffffffffffffffff
0xa57: V1022 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa58: V1023 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1020
0xa59: V1024 = 0x1
0xa5b: V1025 = 0xa0
0xa5d: V1026 = 0x2
0xa5f: V1027 = EXP 0x2 0xa0
0xa60: V1028 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa62: V1029 = AND V373 0xffffffffffffffffffffffffffffffffffffffff
0xa63: V1030 = OR V1029 V1023
0xa65: S[0x3] = V1030
---
Entry stack: [V12, 0x14b, V373]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x14b, V373]

================================

Block 0xa66
[0xa66:0xa66]
---
Predecessors: [0xa3d]
Successors: [0xa67]
---
0xa66 JUMPDEST
---
0xa66: JUMPDEST 
---
Entry stack: [V12, 0x14b, V373]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x14b, V373]

================================

Block 0xa67
[0xa67:0xa69]
---
Predecessors: [0xa66]
Successors: [0x14b]
---
0xa67 JUMPDEST
0xa68 POP
0xa69 JUMP
---
0xa67: JUMPDEST 
0xa69: JUMP 0x14b
---
Entry stack: [V12, 0x14b, V373]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xa6a
[0xa6a:0xa78]
---
Predecessors: [0x43a]
Successors: [0x23d]
---
0xa6a JUMPDEST
0xa6b PUSH1 0x1
0xa6d SLOAD
0xa6e PUSH1 0x1
0xa70 PUSH1 0xa0
0xa72 PUSH1 0x2
0xa74 EXP
0xa75 SUB
0xa76 AND
0xa77 DUP2
0xa78 JUMP
---
0xa6a: JUMPDEST 
0xa6b: V1031 = 0x1
0xa6d: V1032 = S[0x1]
0xa6e: V1033 = 0x1
0xa70: V1034 = 0xa0
0xa72: V1035 = 0x2
0xa74: V1036 = EXP 0x2 0xa0
0xa75: V1037 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa76: V1038 = AND 0xffffffffffffffffffffffffffffffffffffffff V1032
0xa78: JUMP 0x23d
---
Entry stack: [V12, 0x23d]
Stack pops: 1
Stack additions: [S0, V1038]
Exit stack: [V12, 0x23d, V1038]

================================

Block 0xa79
[0xa79:0xab3]
---
Predecessors: []
Successors: []
---
0xa79 STOP
0xa7a LOG1
0xa7b PUSH6 0x627a7a723058
0xa82 SHA3
0xa83 MISSING 0xec
0xa84 BLOCKHASH
0xa85 EQ
0xa86 SWAP15
0xa87 MISSING 0xef
0xa88 SGT
0xa89 MISSING 0x5e
0xa8a MISSING 0x2e
0xa8b ORIGIN
0xa8c XOR
0xa8d MISSING 0x49
0xa8e MISSING 0xae
0xa8f ADD
0xa90 MISSING 0xd
0xa91 MISSING 0x27
0xa92 MISSING 0x2f
0xa93 MISSING 0xb2
0xa94 LOG0
0xa95 MISSING 0xc2
0xa96 MLOAD
0xa97 DIFFICULTY
0xa98 PUSH3 0xadb9fe
0xa9c MISSING 0x29
0xa9d PUSH22 0x19902f0e4f0029
---
0xa79: STOP 
0xa7a: LOG S0 S1 S2
0xa7b: V1039 = 0x627a7a723058
0xa82: V1040 = SHA3 0x627a7a723058 S3
0xa83: MISSING 0xec
0xa84: V1041 = BLOCKHASH S0
0xa85: V1042 = EQ V1041 S1
0xa87: MISSING 0xef
0xa88: V1043 = SGT S0 S1
0xa89: MISSING 0x5e
0xa8a: MISSING 0x2e
0xa8b: V1044 = ORIGIN
0xa8c: V1045 = XOR V1044 S0
0xa8d: MISSING 0x49
0xa8e: MISSING 0xae
0xa8f: V1046 = ADD S0 S1
0xa90: MISSING 0xd
0xa91: MISSING 0x27
0xa92: MISSING 0x2f
0xa93: MISSING 0xb2
0xa94: LOG S0 S1
0xa95: MISSING 0xc2
0xa96: V1047 = M[S0]
0xa97: V1048 = DIFFICULTY
0xa98: V1049 = 0xadb9fe
0xa9c: MISSING 0x29
0xa9d: V1050 = 0x19902f0e4f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1040, S16, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V1042, V1043, V1045, V1046, 0xadb9fe, V1048, V1047, 0x19902f0e4f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x101e1f2c
Entry block: 0x14d
Exit block: 0x14b
Body: 0x14b, 0x14d, 0x154, 0x158, 0x45e, 0x476, 0x489, 0x490, 0x494, 0x49f, 0x4a3, 0x4ae, 0x4b2, 0x510, 0x514, 0x521, 0x525, 0x52a, 0x52b

Function 1:
Public function signature: 0x2b68b9c6
Entry block: 0x171
Exit block: 0x549
Body: 0x171, 0x178, 0x17c, 0x532, 0x549, 0x54d

Function 2:
Public function signature: 0x2e1a7d4d
Entry block: 0x186
Exit block: 0x30e
Body: 0x14b, 0x186, 0x18d, 0x191, 0x30e, 0x55e, 0x575, 0x579, 0x5a8, 0x5ac, 0x5ad, 0x5ae

Function 3:
Public function signature: 0x39c2f6a0
Entry block: 0x19e
Exit block: 0x30e
Body: 0x14b, 0x19e, 0x1a5, 0x1a9, 0x30e, 0x5b1, 0x5c8, 0x5cc, 0x5e1, 0x5e2

Function 4:
Public function signature: 0x3c745ad5
Entry block: 0x1bf
Exit block: 0x1d2
Body: 0x1bf, 0x1c6, 0x1ca, 0x1d2, 0x5e8

Function 5:
Public function signature: 0x5f238402
Entry block: 0x1e4
Exit block: 0x1d2
Body: 0x1d2, 0x1e4, 0x1eb, 0x1ef, 0x5ee

Function 6:
Public function signature: 0x704b6c02
Entry block: 0x209
Exit block: 0x14b
Body: 0x14b, 0x209, 0x210, 0x214, 0x5f4, 0x60b, 0x60f, 0x638, 0x639

Function 7:
Public function signature: 0x7826bfa8
Entry block: 0x22a
Exit block: 0x23d
Body: 0x22a, 0x231, 0x235, 0x23d, 0x63c

Function 8:
Public function signature: 0x79ba5097
Entry block: 0x259
Exit block: 0x14b
Body: 0x14b, 0x259, 0x260, 0x264, 0x64b, 0x65e, 0x662, 0x679, 0x67d, 0x6ad

Function 9:
Public function signature: 0x8a87b5c5
Entry block: 0x26e
Exit block: 0x1d2
Body: 0x1d2, 0x26e, 0x275, 0x279, 0x6af

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x293
Exit block: 0x23d
Body: 0x23d, 0x293, 0x29a, 0x29e, 0x6b5

Function 11:
Public function signature: 0x94081387
Entry block: 0x2c2
Exit block: 0x30e
Body: 0x14b, 0x2c2, 0x2c9, 0x2cd, 0x30e, 0x5ac, 0x5ad, 0x5ae, 0x5e1, 0x5e2, 0x6c4, 0x6dc, 0x6ef, 0x6f6, 0x6fa, 0x702, 0x708, 0x740, 0x744, 0x749, 0x78d, 0x791, 0x79e

Function 12:
Public function signature: 0xb5ed298a
Entry block: 0x2da
Exit block: 0x14b
Body: 0x14b, 0x2da, 0x2e1, 0x2e5, 0x7ab, 0x7c2, 0x7c6, 0x7ef, 0x7f0

Function 13:
Public function signature: 0xb6253539
Entry block: 0x2fb
Exit block: 0x8c9
Body: 0x14b, 0x2fb, 0x302, 0x306, 0x30e, 0x7f3, 0x83d, 0x841, 0x84e, 0x852, 0x86d, 0x874, 0x8b8, 0x8bc, 0x8c9, 0x8cd, 0x8d9

Function 14:
Public function signature: 0xb6f98e53
Entry block: 0x322
Exit block: 0x30e
Body: 0x30e, 0x322, 0x329, 0x32d

Function 15:
Public function signature: 0xcb6d0c5f
Entry block: 0x349
Exit block: 0x1d2
Body: 0x1d2, 0x349, 0x350, 0x354, 0x908

Function 16:
Public function signature: 0xd153b60c
Entry block: 0x36e
Exit block: 0x23d
Body: 0x23d, 0x36e, 0x375, 0x379, 0x90e

Function 17:
Public function signature: 0xe1a27ad3
Entry block: 0x39d
Exit block: 0x8c9
Body: 0x14b, 0x30e, 0x39d, 0x3a4, 0x3a8, 0x8bc, 0x8c9, 0x8cd, 0x8d9, 0x91d, 0x967, 0x96b, 0x978, 0x97c, 0x997, 0x99e, 0x9a6, 0x9ac, 0x9f0

Function 18:
Public function signature: 0xf07edbf4
Entry block: 0x3c4
Exit block: 0x1d2
Body: 0x1d2, 0x3c4, 0x3cb, 0x3cf, 0xa16

Function 19:
Public function signature: 0xf1204db6
Entry block: 0x3e9
Exit block: 0x1d2
Body: 0x1d2, 0x3e9, 0x3f0, 0x3f4, 0xa1c

Function 20:
Public function signature: 0xf298083b
Entry block: 0x40e
Exit block: 0x14b
Body: 0x14b, 0x40e, 0x415, 0x419, 0xa22, 0xa39, 0xa3d, 0xa66, 0xa67

Function 21:
Public function signature: 0xf851a440
Entry block: 0x42f
Exit block: 0x23d
Body: 0x23d, 0x42f, 0x436, 0x43a, 0xa6a

Function 22:
Public fallback function
Entry block: 0x10c
Exit block: 0x14b
Body: 0x10c, 0x10d, 0x14b

Function 23:
Private function
Entry block: 0x8dc
Exit block: 0x905
Body: 0x8dc, 0x8f0, 0x902, 0x905

