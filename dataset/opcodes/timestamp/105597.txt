args
Namespace(bytecode=False, config=None, config_file='/home/hm/project/vandal/bin/config.ini', disassembly=False, dominators=False, graph=None, infile=<_io.TextIOWrapper name='/home/hm/project/vandal/testALL/contractByteALL/contract21/6/105597.txt' mode='r' encoding='UTF-8'>, no_out=False, opcodes=[], outfile=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>, prolix=False, tsv=None, verbose=False, version=False)
30
None
None
Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x10c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x10c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x10c
0xa: JUMPI 0x10c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x2c1]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xef504ae
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x2c1
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xef504ae
0x20: V14 = EQ V12 0xef504ae
0x21: V15 = 0x2c1
0x24: JUMPI 0x2c1 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x2e8]
---
0x25 DUP1
0x26 PUSH4 0x1c42959c
0x2b EQ
0x2c PUSH2 0x2e8
0x2f JUMPI
---
0x26: V16 = 0x1c42959c
0x2b: V17 = EQ 0x1c42959c V12
0x2c: V18 = 0x2e8
0x2f: JUMPI 0x2e8 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x30d]
---
0x30 DUP1
0x31 PUSH4 0x27e235e3
0x36 EQ
0x37 PUSH2 0x30d
0x3a JUMPI
---
0x31: V19 = 0x27e235e3
0x36: V20 = EQ 0x27e235e3 V12
0x37: V21 = 0x30d
0x3a: JUMPI 0x30d V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x344]
---
0x3b DUP1
0x3c PUSH4 0x3197cbb6
0x41 EQ
0x42 PUSH2 0x344
0x45 JUMPI
---
0x3c: V22 = 0x3197cbb6
0x41: V23 = EQ 0x3197cbb6 V12
0x42: V24 = 0x344
0x45: JUMPI 0x344 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x357]
---
0x46 DUP1
0x47 PUSH4 0x4042b66f
0x4c EQ
0x4d PUSH2 0x357
0x50 JUMPI
---
0x47: V25 = 0x4042b66f
0x4c: V26 = EQ 0x4042b66f V12
0x4d: V27 = 0x357
0x50: JUMPI 0x357 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x36a]
---
0x51 DUP1
0x52 PUSH4 0x47d3def9
0x57 EQ
0x58 PUSH2 0x36a
0x5b JUMPI
---
0x52: V28 = 0x47d3def9
0x57: V29 = EQ 0x47d3def9 V12
0x58: V30 = 0x36a
0x5b: JUMPI 0x36a V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x38e]
---
0x5c DUP1
0x5d PUSH4 0x4b8feb4f
0x62 EQ
0x63 PUSH2 0x38e
0x66 JUMPI
---
0x5d: V31 = 0x4b8feb4f
0x62: V32 = EQ 0x4b8feb4f V12
0x63: V33 = 0x38e
0x66: JUMPI 0x38e V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x3bd]
---
0x67 DUP1
0x68 PUSH4 0x519ee19e
0x6d EQ
0x6e PUSH2 0x3bd
0x71 JUMPI
---
0x68: V34 = 0x519ee19e
0x6d: V35 = EQ 0x519ee19e V12
0x6e: V36 = 0x3bd
0x71: JUMPI 0x3bd V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x3d0]
---
0x72 DUP1
0x73 PUSH4 0x61e360b7
0x78 EQ
0x79 PUSH2 0x3d0
0x7c JUMPI
---
0x73: V37 = 0x61e360b7
0x78: V38 = EQ 0x61e360b7 V12
0x79: V39 = 0x3d0
0x7c: JUMPI 0x3d0 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x3e3]
---
0x7d DUP1
0x7e PUSH4 0x6e5b064c
0x83 EQ
0x84 PUSH2 0x3e3
0x87 JUMPI
---
0x7e: V40 = 0x6e5b064c
0x83: V41 = EQ 0x6e5b064c V12
0x84: V42 = 0x3e3
0x87: JUMPI 0x3e3 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x3f6]
---
0x88 DUP1
0x89 PUSH4 0x78e97925
0x8e EQ
0x8f PUSH2 0x3f6
0x92 JUMPI
---
0x89: V43 = 0x78e97925
0x8e: V44 = EQ 0x78e97925 V12
0x8f: V45 = 0x3f6
0x92: JUMPI 0x3f6 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x409]
---
0x93 DUP1
0x94 PUSH4 0x79710f07
0x99 EQ
0x9a PUSH2 0x409
0x9d JUMPI
---
0x94: V46 = 0x79710f07
0x99: V47 = EQ 0x79710f07 V12
0x9a: V48 = 0x409
0x9d: JUMPI 0x409 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x428]
---
0x9e DUP1
0x9f PUSH4 0x8da5cb5b
0xa4 EQ
0xa5 PUSH2 0x428
0xa8 JUMPI
---
0x9f: V49 = 0x8da5cb5b
0xa4: V50 = EQ 0x8da5cb5b V12
0xa5: V51 = 0x428
0xa8: JUMPI 0x428 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x43b]
---
0xa9 DUP1
0xaa PUSH4 0x9890220b
0xaf EQ
0xb0 PUSH2 0x43b
0xb3 JUMPI
---
0xaa: V52 = 0x9890220b
0xaf: V53 = EQ 0x9890220b V12
0xb0: V54 = 0x43b
0xb3: JUMPI 0x43b V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x44e]
---
0xb4 DUP1
0xb5 PUSH4 0x9b19251a
0xba EQ
0xbb PUSH2 0x44e
0xbe JUMPI
---
0xb5: V55 = 0x9b19251a
0xba: V56 = EQ 0x9b19251a V12
0xbb: V57 = 0x44e
0xbe: JUMPI 0x44e V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x46d]
---
0xbf DUP1
0xc0 PUSH4 0xa9aa47ee
0xc5 EQ
0xc6 PUSH2 0x46d
0xc9 JUMPI
---
0xc0: V58 = 0xa9aa47ee
0xc5: V59 = EQ 0xa9aa47ee V12
0xc6: V60 = 0x46d
0xc9: JUMPI 0x46d V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x4bc]
---
0xca DUP1
0xcb PUSH4 0xb628672b
0xd0 EQ
0xd1 PUSH2 0x4bc
0xd4 JUMPI
---
0xcb: V61 = 0xb628672b
0xd0: V62 = EQ 0xb628672b V12
0xd1: V63 = 0x4bc
0xd4: JUMPI 0x4bc V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x4d4]
---
0xd5 DUP1
0xd6 PUSH4 0xb6549f75
0xdb EQ
0xdc PUSH2 0x4d4
0xdf JUMPI
---
0xd6: V64 = 0xb6549f75
0xdb: V65 = EQ 0xb6549f75 V12
0xdc: V66 = 0x4d4
0xdf: JUMPI 0x4d4 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x4e7]
---
0xe0 DUP1
0xe1 PUSH4 0xdc2b32e6
0xe6 EQ
0xe7 PUSH2 0x4e7
0xea JUMPI
---
0xe1: V67 = 0xdc2b32e6
0xe6: V68 = EQ 0xdc2b32e6 V12
0xe7: V69 = 0x4e7
0xea: JUMPI 0x4e7 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x506]
---
0xeb DUP1
0xec PUSH4 0xe6ae1a97
0xf1 EQ
0xf2 PUSH2 0x506
0xf5 JUMPI
---
0xec: V70 = 0xe6ae1a97
0xf1: V71 = EQ 0xe6ae1a97 V12
0xf2: V72 = 0x506
0xf5: JUMPI 0x506 V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x525]
---
0xf6 DUP1
0xf7 PUSH4 0xf2fde38b
0xfc EQ
0xfd PUSH2 0x525
0x100 JUMPI
---
0xf7: V73 = 0xf2fde38b
0xfc: V74 = EQ 0xf2fde38b V12
0xfd: V75 = 0x525
0x100: JUMPI 0x525 V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0x544]
---
0x101 DUP1
0x102 PUSH4 0xf381f2a5
0x107 EQ
0x108 PUSH2 0x544
0x10b JUMPI
---
0x102: V76 = 0xf381f2a5
0x107: V77 = EQ 0xf381f2a5 V12
0x108: V78 = 0x544
0x10b: JUMPI 0x544 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x11d]
---
Predecessors: [0x0, 0x101]
Successors: [0x11e, 0x125]
---
0x10c JUMPDEST
0x10d PUSH1 0x0
0x10f DUP1
0x110 PUSH1 0x0
0x112 PUSH1 0x2
0x114 SLOAD
0x115 TIMESTAMP
0x116 LT
0x117 ISZERO
0x118 DUP1
0x119 ISZERO
0x11a PUSH2 0x125
0x11d JUMPI
---
0x10c: JUMPDEST 
0x10d: V79 = 0x0
0x110: V80 = 0x0
0x112: V81 = 0x2
0x114: V82 = S[0x2]
0x115: V83 = TIMESTAMP
0x116: V84 = LT V83 V82
0x117: V85 = ISZERO V84
0x119: V86 = ISZERO V85
0x11a: V87 = 0x125
0x11d: JUMPI 0x125 V86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V85]
Exit stack: [V12, 0x0, 0x0, 0x0, V85]

================================

Block 0x11e
[0x11e:0x124]
---
Predecessors: [0x10c]
Successors: [0x125]
---
0x11e POP
0x11f PUSH1 0x3
0x121 SLOAD
0x122 TIMESTAMP
0x123 GT
0x124 ISZERO
---
0x11f: V88 = 0x3
0x121: V89 = S[0x3]
0x122: V90 = TIMESTAMP
0x123: V91 = GT V90 V89
0x124: V92 = ISZERO V91
---
Entry stack: [V12, 0x0, 0x0, 0x0, V85]
Stack pops: 1
Stack additions: [V92]
Exit stack: [V12, 0x0, 0x0, 0x0, V92]

================================

Block 0x125
[0x125:0x12b]
---
Predecessors: [0x10c, 0x11e]
Successors: [0x12c, 0x134]
---
0x125 JUMPDEST
0x126 DUP1
0x127 ISZERO
0x128 PUSH2 0x134
0x12b JUMPI
---
0x125: JUMPDEST 
0x127: V93 = ISZERO S0
0x128: V94 = 0x134
0x12b: JUMPI 0x134 V93
---
Entry stack: [V12, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x0, 0x0, 0x0, S0]

================================

Block 0x12c
[0x12c:0x133]
---
Predecessors: [0x125]
Successors: [0x134]
---
0x12c POP
0x12d PUSH1 0x5
0x12f SLOAD
0x130 PUSH1 0x9
0x132 SLOAD
0x133 LT
---
0x12d: V95 = 0x5
0x12f: V96 = S[0x5]
0x130: V97 = 0x9
0x132: V98 = S[0x9]
0x133: V99 = LT V98 V96
---
Entry stack: [V12, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [V99]
Exit stack: [V12, 0x0, 0x0, 0x0, V99]

================================

Block 0x134
[0x134:0x13a]
---
Predecessors: [0x125, 0x12c]
Successors: [0x13b, 0x13f]
---
0x134 JUMPDEST
0x135 ISZERO
0x136 ISZERO
0x137 PUSH2 0x13f
0x13a JUMPI
---
0x134: JUMPDEST 
0x135: V100 = ISZERO S0
0x136: V101 = ISZERO V100
0x137: V102 = 0x13f
0x13a: JUMPI 0x13f V101
---
Entry stack: [V12, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x13b
[0x13b:0x13e]
---
Predecessors: [0x134]
Successors: []
---
0x13b PUSH1 0x0
0x13d DUP1
0x13e REVERT
---
0x13b: V103 = 0x0
0x13e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x13f
[0x13f:0x14a]
---
Predecessors: [0x134]
Successors: [0x14b, 0x14f]
---
0x13f JUMPDEST
0x140 PUSH1 0xa
0x142 SLOAD
0x143 PUSH1 0xff
0x145 AND
0x146 ISZERO
0x147 PUSH2 0x14f
0x14a JUMPI
---
0x13f: JUMPDEST 
0x140: V104 = 0xa
0x142: V105 = S[0xa]
0x143: V106 = 0xff
0x145: V107 = AND 0xff V105
0x146: V108 = ISZERO V107
0x147: V109 = 0x14f
0x14a: JUMPI 0x14f V108
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x14b
[0x14b:0x14e]
---
Predecessors: [0x13f]
Successors: []
---
0x14b PUSH1 0x0
0x14d DUP1
0x14e REVERT
---
0x14b: V110 = 0x0
0x14e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x14f
[0x14f:0x17c]
---
Predecessors: [0x13f]
Successors: [0x17d, 0x181]
---
0x14f JUMPDEST
0x150 PUSH1 0x1
0x152 PUSH1 0xa0
0x154 PUSH1 0x2
0x156 EXP
0x157 SUB
0x158 CALLER
0x159 AND
0x15a PUSH1 0x0
0x15c SWAP1
0x15d DUP2
0x15e MSTORE
0x15f PUSH1 0xc
0x161 PUSH1 0x20
0x163 SWAP1
0x164 DUP2
0x165 MSTORE
0x166 PUSH1 0x40
0x168 DUP1
0x169 DUP4
0x16a SHA3
0x16b SLOAD
0x16c PUSH1 0xb
0x16e SWAP1
0x16f SWAP3
0x170 MSTORE
0x171 SWAP1
0x172 SWAP2
0x173 SHA3
0x174 PUSH1 0x1
0x176 ADD
0x177 SLOAD
0x178 LT
0x179 PUSH2 0x181
0x17c JUMPI
---
0x14f: JUMPDEST 
0x150: V111 = 0x1
0x152: V112 = 0xa0
0x154: V113 = 0x2
0x156: V114 = EXP 0x2 0xa0
0x157: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x158: V116 = CALLER
0x159: V117 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x15a: V118 = 0x0
0x15e: M[0x0] = V117
0x15f: V119 = 0xc
0x161: V120 = 0x20
0x165: M[0x20] = 0xc
0x166: V121 = 0x40
0x16a: V122 = SHA3 0x0 0x40
0x16b: V123 = S[V122]
0x16c: V124 = 0xb
0x170: M[0x20] = 0xb
0x173: V125 = SHA3 0x0 0x40
0x174: V126 = 0x1
0x176: V127 = ADD 0x1 V125
0x177: V128 = S[V127]
0x178: V129 = LT V128 V123
0x179: V130 = 0x181
0x17c: JUMPI 0x181 V129
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x17d
[0x17d:0x180]
---
Predecessors: [0x14f]
Successors: []
---
0x17d PUSH1 0x0
0x17f DUP1
0x180 REVERT
---
0x17d: V131 = 0x0
0x180: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0x181
[0x181:0x188]
---
Predecessors: [0x14f]
Successors: [0x557]
---
0x181 JUMPDEST
0x182 PUSH2 0x189
0x185 PUSH2 0x557
0x188 JUMP
---
0x181: JUMPDEST 
0x182: V132 = 0x189
0x185: V133 = 0x557
0x188: JUMP 0x557
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x189]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189]

================================

Block 0x189
[0x189:0x1a1]
---
Predecessors: [0x604]
Successors: [0x60e]
---
0x189 JUMPDEST
0x18a SWAP3
0x18b POP
0x18c SWAP3
0x18d POP
0x18e PUSH2 0x1a2
0x191 PUSH1 0x7
0x193 SLOAD
0x194 DUP5
0x195 PUSH2 0x60e
0x198 SWAP1
0x199 SWAP2
0x19a SWAP1
0x19b PUSH4 0xffffffff
0x1a0 AND
0x1a1 JUMP
---
0x189: JUMPDEST 
0x18e: V134 = 0x1a2
0x191: V135 = 0x7
0x193: V136 = S[0x7]
0x195: V137 = 0x60e
0x19b: V138 = 0xffffffff
0x1a0: V139 = AND 0xffffffff 0x60e
0x1a1: JUMP 0x60e
---
Entry stack: [V12, 0x0, 0x0, 0x0, S1, S0]
Stack pops: 5
Stack additions: [S1, S0, S2, 0x1a2, S1, V136]
Exit stack: [V12, S1, S0, 0x0, 0x1a2, S1, V136]

================================

Block 0x1a2
[0x1a2:0x1cd]
---
Predecessors: [0x632]
Successors: [0x639]
---
0x1a2 JUMPDEST
0x1a3 PUSH1 0x1
0x1a5 PUSH1 0xa0
0x1a7 PUSH1 0x2
0x1a9 EXP
0x1aa SUB
0x1ab CALLER
0x1ac AND
0x1ad PUSH1 0x0
0x1af SWAP1
0x1b0 DUP2
0x1b1 MSTORE
0x1b2 PUSH1 0xb
0x1b4 PUSH1 0x20
0x1b6 MSTORE
0x1b7 PUSH1 0x40
0x1b9 SWAP1
0x1ba SHA3
0x1bb SLOAD
0x1bc SWAP1
0x1bd SWAP2
0x1be POP
0x1bf PUSH2 0x1ce
0x1c2 SWAP1
0x1c3 DUP3
0x1c4 PUSH4 0xffffffff
0x1c9 PUSH2 0x639
0x1cc AND
0x1cd JUMP
---
0x1a2: JUMPDEST 
0x1a3: V140 = 0x1
0x1a5: V141 = 0xa0
0x1a7: V142 = 0x2
0x1a9: V143 = EXP 0x2 0xa0
0x1aa: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ab: V145 = CALLER
0x1ac: V146 = AND V145 0xffffffffffffffffffffffffffffffffffffffff
0x1ad: V147 = 0x0
0x1b1: M[0x0] = V146
0x1b2: V148 = 0xb
0x1b4: V149 = 0x20
0x1b6: M[0x20] = 0xb
0x1b7: V150 = 0x40
0x1ba: V151 = SHA3 0x0 0x40
0x1bb: V152 = S[V151]
0x1bf: V153 = 0x1ce
0x1c4: V154 = 0xffffffff
0x1c9: V155 = 0x639
0x1cc: V156 = AND 0x639 0xffffffff
0x1cd: JUMP 0x639
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, 0x1ce, V152, S0]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S4, S3, S2, S0, 0x1ce, V152, S0]

================================

Block 0x1ce
[0x1ce:0x1fc]
---
Predecessors: [0x632]
Successors: [0x639]
---
0x1ce JUMPDEST
0x1cf PUSH1 0x1
0x1d1 PUSH1 0xa0
0x1d3 PUSH1 0x2
0x1d5 EXP
0x1d6 SUB
0x1d7 CALLER
0x1d8 AND
0x1d9 PUSH1 0x0
0x1db SWAP1
0x1dc DUP2
0x1dd MSTORE
0x1de PUSH1 0xb
0x1e0 PUSH1 0x20
0x1e2 MSTORE
0x1e3 PUSH1 0x40
0x1e5 SWAP1
0x1e6 SHA3
0x1e7 SWAP1
0x1e8 DUP2
0x1e9 SSTORE
0x1ea PUSH1 0x1
0x1ec ADD
0x1ed SLOAD
0x1ee PUSH2 0x1fd
0x1f1 SWAP1
0x1f2 DUP5
0x1f3 PUSH4 0xffffffff
0x1f8 PUSH2 0x639
0x1fb AND
0x1fc JUMP
---
0x1ce: JUMPDEST 
0x1cf: V157 = 0x1
0x1d1: V158 = 0xa0
0x1d3: V159 = 0x2
0x1d5: V160 = EXP 0x2 0xa0
0x1d6: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d7: V162 = CALLER
0x1d8: V163 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x1d9: V164 = 0x0
0x1dd: M[0x0] = V163
0x1de: V165 = 0xb
0x1e0: V166 = 0x20
0x1e2: M[0x20] = 0xb
0x1e3: V167 = 0x40
0x1e6: V168 = SHA3 0x0 0x40
0x1e9: S[V168] = S0
0x1ea: V169 = 0x1
0x1ec: V170 = ADD 0x1 V168
0x1ed: V171 = S[V170]
0x1ee: V172 = 0x1fd
0x1f3: V173 = 0xffffffff
0x1f8: V174 = 0x639
0x1fb: V175 = AND 0x639 0xffffffff
0x1fc: JUMP 0x639
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x1fd, V171, S3]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S4, S3, S2, S1, 0x1fd, V171, S3]

================================

Block 0x1fd
[0x1fd:0x22b]
---
Predecessors: [0x632]
Successors: [0x639]
---
0x1fd JUMPDEST
0x1fe PUSH1 0x1
0x200 PUSH1 0xa0
0x202 PUSH1 0x2
0x204 EXP
0x205 SUB
0x206 CALLER
0x207 AND
0x208 PUSH1 0x0
0x20a SWAP1
0x20b DUP2
0x20c MSTORE
0x20d PUSH1 0xb
0x20f PUSH1 0x20
0x211 MSTORE
0x212 PUSH1 0x40
0x214 SWAP1
0x215 SHA3
0x216 PUSH1 0x1
0x218 ADD
0x219 SSTORE
0x21a PUSH1 0x8
0x21c SLOAD
0x21d PUSH2 0x22c
0x220 SWAP1
0x221 DUP3
0x222 PUSH4 0xffffffff
0x227 PUSH2 0x639
0x22a AND
0x22b JUMP
---
0x1fd: JUMPDEST 
0x1fe: V176 = 0x1
0x200: V177 = 0xa0
0x202: V178 = 0x2
0x204: V179 = EXP 0x2 0xa0
0x205: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x206: V181 = CALLER
0x207: V182 = AND V181 0xffffffffffffffffffffffffffffffffffffffff
0x208: V183 = 0x0
0x20c: M[0x0] = V182
0x20d: V184 = 0xb
0x20f: V185 = 0x20
0x211: M[0x20] = 0xb
0x212: V186 = 0x40
0x215: V187 = SHA3 0x0 0x40
0x216: V188 = 0x1
0x218: V189 = ADD 0x1 V187
0x219: S[V189] = S0
0x21a: V190 = 0x8
0x21c: V191 = S[0x8]
0x21d: V192 = 0x22c
0x222: V193 = 0xffffffff
0x227: V194 = 0x639
0x22a: V195 = AND 0x639 0xffffffff
0x22b: JUMP 0x639
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, 0x22c, V191, S1]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S4, S3, S2, S1, 0x22c, V191, S1]

================================

Block 0x22c
[0x22c:0x241]
---
Predecessors: [0x632]
Successors: [0x639]
---
0x22c JUMPDEST
0x22d PUSH1 0x8
0x22f SSTORE
0x230 PUSH1 0x9
0x232 SLOAD
0x233 PUSH2 0x242
0x236 SWAP1
0x237 DUP5
0x238 PUSH4 0xffffffff
0x23d PUSH2 0x639
0x240 AND
0x241 JUMP
---
0x22c: JUMPDEST 
0x22d: V196 = 0x8
0x22f: S[0x8] = S0
0x230: V197 = 0x9
0x232: V198 = S[0x9]
0x233: V199 = 0x242
0x238: V200 = 0xffffffff
0x23d: V201 = 0x639
0x240: V202 = AND 0x639 0xffffffff
0x241: JUMP 0x639
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x242, V198, S3]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S4, S3, S2, S1, 0x242, V198, S3]

================================

Block 0x242
[0x242:0x24e]
---
Predecessors: [0x632]
Successors: [0x24f, 0x27f]
---
0x242 JUMPDEST
0x243 PUSH1 0x9
0x245 SSTORE
0x246 PUSH1 0x0
0x248 DUP3
0x249 GT
0x24a ISZERO
0x24b PUSH2 0x27f
0x24e JUMPI
---
0x242: JUMPDEST 
0x243: V203 = 0x9
0x245: S[0x9] = S0
0x246: V204 = 0x0
0x249: V205 = GT S2 0x0
0x24a: V206 = ISZERO V205
0x24b: V207 = 0x27f
0x24e: JUMPI 0x27f V206
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S4, S3, S2, S1]

================================

Block 0x24f
[0x24f:0x27a]
---
Predecessors: [0x242]
Successors: [0x27b, 0x27f]
---
0x24f PUSH1 0x1
0x251 PUSH1 0xa0
0x253 PUSH1 0x2
0x255 EXP
0x256 SUB
0x257 CALLER
0x258 AND
0x259 DUP3
0x25a ISZERO
0x25b PUSH2 0x8fc
0x25e MUL
0x25f DUP4
0x260 PUSH1 0x40
0x262 MLOAD
0x263 PUSH1 0x0
0x265 PUSH1 0x40
0x267 MLOAD
0x268 DUP1
0x269 DUP4
0x26a SUB
0x26b DUP2
0x26c DUP6
0x26d DUP9
0x26e DUP9
0x26f CALL
0x270 SWAP4
0x271 POP
0x272 POP
0x273 POP
0x274 POP
0x275 ISZERO
0x276 ISZERO
0x277 PUSH2 0x27f
0x27a JUMPI
---
0x24f: V208 = 0x1
0x251: V209 = 0xa0
0x253: V210 = 0x2
0x255: V211 = EXP 0x2 0xa0
0x256: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x257: V213 = CALLER
0x258: V214 = AND V213 0xffffffffffffffffffffffffffffffffffffffff
0x25a: V215 = ISZERO S1
0x25b: V216 = 0x8fc
0x25e: V217 = MUL 0x8fc V215
0x260: V218 = 0x40
0x262: V219 = M[0x40]
0x263: V220 = 0x0
0x265: V221 = 0x40
0x267: V222 = M[0x40]
0x26a: V223 = SUB V219 V222
0x26f: V224 = CALL V217 V214 S1 V222 V223 V222 0x0
0x275: V225 = ISZERO V224
0x276: V226 = ISZERO V225
0x277: V227 = 0x27f
0x27a: JUMPI 0x27f V226
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S3, S2, S1, S0]

================================

Block 0x27b
[0x27b:0x27e]
---
Predecessors: [0x24f]
Successors: []
---
0x27b PUSH1 0x0
0x27d DUP1
0x27e REVERT
---
0x27b: V228 = 0x0
0x27e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S3, S2, S1, S0]

================================

Block 0x27f
[0x27f:0x2c0]
---
Predecessors: [0x242, 0x24f]
Successors: []
---
0x27f JUMPDEST
0x280 CALLER
0x281 PUSH1 0x1
0x283 PUSH1 0xa0
0x285 PUSH1 0x2
0x287 EXP
0x288 SUB
0x289 AND
0x28a PUSH32 0xe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e
0x2ab DUP3
0x2ac PUSH1 0x40
0x2ae MLOAD
0x2af SWAP1
0x2b0 DUP2
0x2b1 MSTORE
0x2b2 PUSH1 0x20
0x2b4 ADD
0x2b5 PUSH1 0x40
0x2b7 MLOAD
0x2b8 DUP1
0x2b9 SWAP2
0x2ba SUB
0x2bb SWAP1
0x2bc LOG2
0x2bd POP
0x2be POP
0x2bf POP
0x2c0 STOP
---
0x27f: JUMPDEST 
0x280: V229 = CALLER
0x281: V230 = 0x1
0x283: V231 = 0xa0
0x285: V232 = 0x2
0x287: V233 = EXP 0x2 0xa0
0x288: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x289: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x28a: V236 = 0xe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e
0x2ac: V237 = 0x40
0x2ae: V238 = M[0x40]
0x2b1: M[V238] = S0
0x2b2: V239 = 0x20
0x2b4: V240 = ADD 0x20 V238
0x2b5: V241 = 0x40
0x2b7: V242 = M[0x40]
0x2ba: V243 = SUB V240 V242
0x2bc: LOG V242 V243 0xe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e V235
0x2c0: STOP 
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S3]

================================

Block 0x2c1
[0x2c1:0x2c7]
---
Predecessors: [0xb]
Successors: [0x2c8, 0x2cc]
---
0x2c1 JUMPDEST
0x2c2 CALLVALUE
0x2c3 ISZERO
0x2c4 PUSH2 0x2cc
0x2c7 JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V244 = CALLVALUE
0x2c3: V245 = ISZERO V244
0x2c4: V246 = 0x2cc
0x2c7: JUMPI 0x2cc V245
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c8
[0x2c8:0x2cb]
---
Predecessors: [0x2c1]
Successors: []
---
0x2c8 PUSH1 0x0
0x2ca DUP1
0x2cb REVERT
---
0x2c8: V247 = 0x0
0x2cb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2cc
[0x2cc:0x2d3]
---
Predecessors: [0x2c1]
Successors: [0x653]
---
0x2cc JUMPDEST
0x2cd PUSH2 0x2d4
0x2d0 PUSH2 0x653
0x2d3 JUMP
---
0x2cc: JUMPDEST 
0x2cd: V248 = 0x2d4
0x2d0: V249 = 0x653
0x2d3: JUMP 0x653
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d4]
Exit stack: [V12, 0x2d4]

================================

Block 0x2d4
[0x2d4:0x2e7]
---
Predecessors: [0x653]
Successors: []
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x40
0x2d7 MLOAD
0x2d8 SWAP1
0x2d9 ISZERO
0x2da ISZERO
0x2db DUP2
0x2dc MSTORE
0x2dd PUSH1 0x20
0x2df ADD
0x2e0 PUSH1 0x40
0x2e2 MLOAD
0x2e3 DUP1
0x2e4 SWAP2
0x2e5 SUB
0x2e6 SWAP1
0x2e7 RETURN
---
0x2d4: JUMPDEST 
0x2d5: V250 = 0x40
0x2d7: V251 = M[0x40]
0x2d9: V252 = ISZERO V580
0x2da: V253 = ISZERO V252
0x2dc: M[V251] = V253
0x2dd: V254 = 0x20
0x2df: V255 = ADD 0x20 V251
0x2e0: V256 = 0x40
0x2e2: V257 = M[0x40]
0x2e5: V258 = SUB V255 V257
0x2e7: RETURN V257 V258
---
Entry stack: [V12, 0x2d4, V580]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2d4]

================================

Block 0x2e8
[0x2e8:0x2ee]
---
Predecessors: [0x25]
Successors: [0x2ef, 0x2f3]
---
0x2e8 JUMPDEST
0x2e9 CALLVALUE
0x2ea ISZERO
0x2eb PUSH2 0x2f3
0x2ee JUMPI
---
0x2e8: JUMPDEST 
0x2e9: V259 = CALLVALUE
0x2ea: V260 = ISZERO V259
0x2eb: V261 = 0x2f3
0x2ee: JUMPI 0x2f3 V260
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ef
[0x2ef:0x2f2]
---
Predecessors: [0x2e8]
Successors: []
---
0x2ef PUSH1 0x0
0x2f1 DUP1
0x2f2 REVERT
---
0x2ef: V262 = 0x0
0x2f2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f3
[0x2f3:0x2fa]
---
Predecessors: [0x2e8]
Successors: [0x65c]
---
0x2f3 JUMPDEST
0x2f4 PUSH2 0x2fb
0x2f7 PUSH2 0x65c
0x2fa JUMP
---
0x2f3: JUMPDEST 
0x2f4: V263 = 0x2fb
0x2f7: V264 = 0x65c
0x2fa: JUMP 0x65c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2fb]
Exit stack: [V12, 0x2fb]

================================

Block 0x2fb
[0x2fb:0x30c]
---
Predecessors: [0x65c, 0x67b, 0x681, 0x716, 0x71c, 0x722, 0x728, 0x916, 0xa76, 0xa94, 0xb0a]
Successors: []
---
0x2fb JUMPDEST
0x2fc PUSH1 0x40
0x2fe MLOAD
0x2ff SWAP1
0x300 DUP2
0x301 MSTORE
0x302 PUSH1 0x20
0x304 ADD
0x305 PUSH1 0x40
0x307 MLOAD
0x308 DUP1
0x309 SWAP2
0x30a SUB
0x30b SWAP1
0x30c RETURN
---
0x2fb: JUMPDEST 
0x2fc: V265 = 0x40
0x2fe: V266 = M[0x40]
0x301: M[V266] = S0
0x302: V267 = 0x20
0x304: V268 = ADD 0x20 V266
0x305: V269 = 0x40
0x307: V270 = M[0x40]
0x30a: V271 = SUB V268 V270
0x30c: RETURN V270 V271
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x30d
[0x30d:0x313]
---
Predecessors: [0x30]
Successors: [0x314, 0x318]
---
0x30d JUMPDEST
0x30e CALLVALUE
0x30f ISZERO
0x310 PUSH2 0x318
0x313 JUMPI
---
0x30d: JUMPDEST 
0x30e: V272 = CALLVALUE
0x30f: V273 = ISZERO V272
0x310: V274 = 0x318
0x313: JUMPI 0x318 V273
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x314
[0x314:0x317]
---
Predecessors: [0x30d]
Successors: []
---
0x314 PUSH1 0x0
0x316 DUP1
0x317 REVERT
---
0x314: V275 = 0x0
0x317: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x318
[0x318:0x32b]
---
Predecessors: [0x30d]
Successors: [0x662]
---
0x318 JUMPDEST
0x319 PUSH2 0x32c
0x31c PUSH1 0x1
0x31e PUSH1 0xa0
0x320 PUSH1 0x2
0x322 EXP
0x323 SUB
0x324 PUSH1 0x4
0x326 CALLDATALOAD
0x327 AND
0x328 PUSH2 0x662
0x32b JUMP
---
0x318: JUMPDEST 
0x319: V276 = 0x32c
0x31c: V277 = 0x1
0x31e: V278 = 0xa0
0x320: V279 = 0x2
0x322: V280 = EXP 0x2 0xa0
0x323: V281 = SUB 0x10000000000000000000000000000000000000000 0x1
0x324: V282 = 0x4
0x326: V283 = CALLDATALOAD 0x4
0x327: V284 = AND V283 0xffffffffffffffffffffffffffffffffffffffff
0x328: V285 = 0x662
0x32b: JUMP 0x662
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x32c, V284]
Exit stack: [V12, 0x32c, V284]

================================

Block 0x32c
[0x32c:0x343]
---
Predecessors: [0x662]
Successors: []
---
0x32c JUMPDEST
0x32d PUSH1 0x40
0x32f MLOAD
0x330 SWAP2
0x331 DUP3
0x332 MSTORE
0x333 PUSH1 0x20
0x335 DUP3
0x336 ADD
0x337 MSTORE
0x338 PUSH1 0x40
0x33a SWAP1
0x33b DUP2
0x33c ADD
0x33d SWAP1
0x33e MLOAD
0x33f DUP1
0x340 SWAP2
0x341 SUB
0x342 SWAP1
0x343 RETURN
---
0x32c: JUMPDEST 
0x32d: V286 = 0x40
0x32f: V287 = M[0x40]
0x332: M[V287] = V588
0x333: V288 = 0x20
0x336: V289 = ADD V287 0x20
0x337: M[V289] = V591
0x338: V290 = 0x40
0x33c: V291 = ADD 0x40 V287
0x33e: V292 = M[0x40]
0x341: V293 = SUB V291 V292
0x343: RETURN V292 V293
---
Entry stack: [V12, 0x32c, V588, V591]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x32c]

================================

Block 0x344
[0x344:0x34a]
---
Predecessors: [0x3b]
Successors: [0x34b, 0x34f]
---
0x344 JUMPDEST
0x345 CALLVALUE
0x346 ISZERO
0x347 PUSH2 0x34f
0x34a JUMPI
---
0x344: JUMPDEST 
0x345: V294 = CALLVALUE
0x346: V295 = ISZERO V294
0x347: V296 = 0x34f
0x34a: JUMPI 0x34f V295
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x34b
[0x34b:0x34e]
---
Predecessors: [0x344]
Successors: []
---
0x34b PUSH1 0x0
0x34d DUP1
0x34e REVERT
---
0x34b: V297 = 0x0
0x34e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x34f
[0x34f:0x356]
---
Predecessors: [0x344]
Successors: [0x67b]
---
0x34f JUMPDEST
0x350 PUSH2 0x2fb
0x353 PUSH2 0x67b
0x356 JUMP
---
0x34f: JUMPDEST 
0x350: V298 = 0x2fb
0x353: V299 = 0x67b
0x356: JUMP 0x67b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2fb]
Exit stack: [V12, 0x2fb]

================================

Block 0x357
[0x357:0x35d]
---
Predecessors: [0x46]
Successors: [0x35e, 0x362]
---
0x357 JUMPDEST
0x358 CALLVALUE
0x359 ISZERO
0x35a PUSH2 0x362
0x35d JUMPI
---
0x357: JUMPDEST 
0x358: V300 = CALLVALUE
0x359: V301 = ISZERO V300
0x35a: V302 = 0x362
0x35d: JUMPI 0x362 V301
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35e
[0x35e:0x361]
---
Predecessors: [0x357]
Successors: []
---
0x35e PUSH1 0x0
0x360 DUP1
0x361 REVERT
---
0x35e: V303 = 0x0
0x361: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x362
[0x362:0x369]
---
Predecessors: [0x357]
Successors: [0x681]
---
0x362 JUMPDEST
0x363 PUSH2 0x2fb
0x366 PUSH2 0x681
0x369 JUMP
---
0x362: JUMPDEST 
0x363: V304 = 0x2fb
0x366: V305 = 0x681
0x369: JUMP 0x681
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2fb]
Exit stack: [V12, 0x2fb]

================================

Block 0x36a
[0x36a:0x370]
---
Predecessors: [0x51]
Successors: [0x371, 0x375]
---
0x36a JUMPDEST
0x36b CALLVALUE
0x36c ISZERO
0x36d PUSH2 0x375
0x370 JUMPI
---
0x36a: JUMPDEST 
0x36b: V306 = CALLVALUE
0x36c: V307 = ISZERO V306
0x36d: V308 = 0x375
0x370: JUMPI 0x375 V307
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x371
[0x371:0x374]
---
Predecessors: [0x36a]
Successors: []
---
0x371 PUSH1 0x0
0x373 DUP1
0x374 REVERT
---
0x371: V309 = 0x0
0x374: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x375
[0x375:0x38b]
---
Predecessors: [0x36a]
Successors: [0x687]
---
0x375 JUMPDEST
0x376 PUSH2 0x38c
0x379 PUSH1 0x1
0x37b PUSH1 0xa0
0x37d PUSH1 0x2
0x37f EXP
0x380 SUB
0x381 PUSH1 0x4
0x383 CALLDATALOAD
0x384 AND
0x385 PUSH1 0x24
0x387 CALLDATALOAD
0x388 PUSH2 0x687
0x38b JUMP
---
0x375: JUMPDEST 
0x376: V310 = 0x38c
0x379: V311 = 0x1
0x37b: V312 = 0xa0
0x37d: V313 = 0x2
0x37f: V314 = EXP 0x2 0xa0
0x380: V315 = SUB 0x10000000000000000000000000000000000000000 0x1
0x381: V316 = 0x4
0x383: V317 = CALLDATALOAD 0x4
0x384: V318 = AND V317 0xffffffffffffffffffffffffffffffffffffffff
0x385: V319 = 0x24
0x387: V320 = CALLDATALOAD 0x24
0x388: V321 = 0x687
0x38b: JUMP 0x687
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x38c, V318, V320]
Exit stack: [V12, 0x38c, V318, V320]

================================

Block 0x38c
[0x38c:0x38d]
---
Predecessors: [0x6b2, 0x84a, 0x8e0, 0x995, 0xa36, 0xada]
Successors: []
---
0x38c JUMPDEST
0x38d STOP
---
0x38c: JUMPDEST 
0x38d: STOP 
---
Entry stack: [V12, 0x38c, V420, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V420, S0]

================================

Block 0x38e
[0x38e:0x394]
---
Predecessors: [0x5c]
Successors: [0x395, 0x399]
---
0x38e JUMPDEST
0x38f CALLVALUE
0x390 ISZERO
0x391 PUSH2 0x399
0x394 JUMPI
---
0x38e: JUMPDEST 
0x38f: V322 = CALLVALUE
0x390: V323 = ISZERO V322
0x391: V324 = 0x399
0x394: JUMPI 0x399 V323
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x395
[0x395:0x398]
---
Predecessors: [0x38e]
Successors: []
---
0x395 PUSH1 0x0
0x397 DUP1
0x398 REVERT
---
0x395: V325 = 0x0
0x398: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x399
[0x399:0x3a0]
---
Predecessors: [0x38e]
Successors: [0x707]
---
0x399 JUMPDEST
0x39a PUSH2 0x3a1
0x39d PUSH2 0x707
0x3a0 JUMP
---
0x399: JUMPDEST 
0x39a: V326 = 0x3a1
0x39d: V327 = 0x707
0x3a0: JUMP 0x707
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3a1]
Exit stack: [V12, 0x3a1]

================================

Block 0x3a1
[0x3a1:0x3bc]
---
Predecessors: [0x707, 0x84e]
Successors: []
---
0x3a1 JUMPDEST
0x3a2 PUSH1 0x40
0x3a4 MLOAD
0x3a5 PUSH1 0x1
0x3a7 PUSH1 0xa0
0x3a9 PUSH1 0x2
0x3ab EXP
0x3ac SUB
0x3ad SWAP1
0x3ae SWAP2
0x3af AND
0x3b0 DUP2
0x3b1 MSTORE
0x3b2 PUSH1 0x20
0x3b4 ADD
0x3b5 PUSH1 0x40
0x3b7 MLOAD
0x3b8 DUP1
0x3b9 SWAP2
0x3ba SUB
0x3bb SWAP1
0x3bc RETURN
---
0x3a1: JUMPDEST 
0x3a2: V328 = 0x40
0x3a4: V329 = M[0x40]
0x3a5: V330 = 0x1
0x3a7: V331 = 0xa0
0x3a9: V332 = 0x2
0x3ab: V333 = EXP 0x2 0xa0
0x3ac: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3af: V335 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3b1: M[V329] = V335
0x3b2: V336 = 0x20
0x3b4: V337 = ADD 0x20 V329
0x3b5: V338 = 0x40
0x3b7: V339 = M[0x40]
0x3ba: V340 = SUB V337 V339
0x3bc: RETURN V339 V340
---
Entry stack: [V12, 0x3a1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x3a1]

================================

Block 0x3bd
[0x3bd:0x3c3]
---
Predecessors: [0x67]
Successors: [0x3c4, 0x3c8]
---
0x3bd JUMPDEST
0x3be CALLVALUE
0x3bf ISZERO
0x3c0 PUSH2 0x3c8
0x3c3 JUMPI
---
0x3bd: JUMPDEST 
0x3be: V341 = CALLVALUE
0x3bf: V342 = ISZERO V341
0x3c0: V343 = 0x3c8
0x3c3: JUMPI 0x3c8 V342
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c4
[0x3c4:0x3c7]
---
Predecessors: [0x3bd]
Successors: []
---
0x3c4 PUSH1 0x0
0x3c6 DUP1
0x3c7 REVERT
---
0x3c4: V344 = 0x0
0x3c7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c8
[0x3c8:0x3cf]
---
Predecessors: [0x3bd]
Successors: [0x716]
---
0x3c8 JUMPDEST
0x3c9 PUSH2 0x2fb
0x3cc PUSH2 0x716
0x3cf JUMP
---
0x3c8: JUMPDEST 
0x3c9: V345 = 0x2fb
0x3cc: V346 = 0x716
0x3cf: JUMP 0x716
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2fb]
Exit stack: [V12, 0x2fb]

================================

Block 0x3d0
[0x3d0:0x3d6]
---
Predecessors: [0x72]
Successors: [0x3d7, 0x3db]
---
0x3d0 JUMPDEST
0x3d1 CALLVALUE
0x3d2 ISZERO
0x3d3 PUSH2 0x3db
0x3d6 JUMPI
---
0x3d0: JUMPDEST 
0x3d1: V347 = CALLVALUE
0x3d2: V348 = ISZERO V347
0x3d3: V349 = 0x3db
0x3d6: JUMPI 0x3db V348
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d7
[0x3d7:0x3da]
---
Predecessors: [0x3d0]
Successors: []
---
0x3d7 PUSH1 0x0
0x3d9 DUP1
0x3da REVERT
---
0x3d7: V350 = 0x0
0x3da: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3db
[0x3db:0x3e2]
---
Predecessors: [0x3d0]
Successors: [0x71c]
---
0x3db JUMPDEST
0x3dc PUSH2 0x2fb
0x3df PUSH2 0x71c
0x3e2 JUMP
---
0x3db: JUMPDEST 
0x3dc: V351 = 0x2fb
0x3df: V352 = 0x71c
0x3e2: JUMP 0x71c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2fb]
Exit stack: [V12, 0x2fb]

================================

Block 0x3e3
[0x3e3:0x3e9]
---
Predecessors: [0x7d]
Successors: [0x3ea, 0x3ee]
---
0x3e3 JUMPDEST
0x3e4 CALLVALUE
0x3e5 ISZERO
0x3e6 PUSH2 0x3ee
0x3e9 JUMPI
---
0x3e3: JUMPDEST 
0x3e4: V353 = CALLVALUE
0x3e5: V354 = ISZERO V353
0x3e6: V355 = 0x3ee
0x3e9: JUMPI 0x3ee V354
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ea
[0x3ea:0x3ed]
---
Predecessors: [0x3e3]
Successors: []
---
0x3ea PUSH1 0x0
0x3ec DUP1
0x3ed REVERT
---
0x3ea: V356 = 0x0
0x3ed: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ee
[0x3ee:0x3f5]
---
Predecessors: [0x3e3]
Successors: [0x722]
---
0x3ee JUMPDEST
0x3ef PUSH2 0x2fb
0x3f2 PUSH2 0x722
0x3f5 JUMP
---
0x3ee: JUMPDEST 
0x3ef: V357 = 0x2fb
0x3f2: V358 = 0x722
0x3f5: JUMP 0x722
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2fb]
Exit stack: [V12, 0x2fb]

================================

Block 0x3f6
[0x3f6:0x3fc]
---
Predecessors: [0x88]
Successors: [0x3fd, 0x401]
---
0x3f6 JUMPDEST
0x3f7 CALLVALUE
0x3f8 ISZERO
0x3f9 PUSH2 0x401
0x3fc JUMPI
---
0x3f6: JUMPDEST 
0x3f7: V359 = CALLVALUE
0x3f8: V360 = ISZERO V359
0x3f9: V361 = 0x401
0x3fc: JUMPI 0x401 V360
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3fd
[0x3fd:0x400]
---
Predecessors: [0x3f6]
Successors: []
---
0x3fd PUSH1 0x0
0x3ff DUP1
0x400 REVERT
---
0x3fd: V362 = 0x0
0x400: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x401
[0x401:0x408]
---
Predecessors: [0x3f6]
Successors: [0x728]
---
0x401 JUMPDEST
0x402 PUSH2 0x2fb
0x405 PUSH2 0x728
0x408 JUMP
---
0x401: JUMPDEST 
0x402: V363 = 0x2fb
0x405: V364 = 0x728
0x408: JUMP 0x728
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2fb]
Exit stack: [V12, 0x2fb]

================================

Block 0x409
[0x409:0x40f]
---
Predecessors: [0x93]
Successors: [0x410, 0x414]
---
0x409 JUMPDEST
0x40a CALLVALUE
0x40b ISZERO
0x40c PUSH2 0x414
0x40f JUMPI
---
0x409: JUMPDEST 
0x40a: V365 = CALLVALUE
0x40b: V366 = ISZERO V365
0x40c: V367 = 0x414
0x40f: JUMPI 0x414 V366
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x410
[0x410:0x413]
---
Predecessors: [0x409]
Successors: []
---
0x410 PUSH1 0x0
0x412 DUP1
0x413 REVERT
---
0x410: V368 = 0x0
0x413: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x414
[0x414:0x427]
---
Predecessors: [0x409]
Successors: [0x72e]
---
0x414 JUMPDEST
0x415 PUSH2 0x38c
0x418 PUSH1 0x1
0x41a PUSH1 0xa0
0x41c PUSH1 0x2
0x41e EXP
0x41f SUB
0x420 PUSH1 0x4
0x422 CALLDATALOAD
0x423 AND
0x424 PUSH2 0x72e
0x427 JUMP
---
0x414: JUMPDEST 
0x415: V369 = 0x38c
0x418: V370 = 0x1
0x41a: V371 = 0xa0
0x41c: V372 = 0x2
0x41e: V373 = EXP 0x2 0xa0
0x41f: V374 = SUB 0x10000000000000000000000000000000000000000 0x1
0x420: V375 = 0x4
0x422: V376 = CALLDATALOAD 0x4
0x423: V377 = AND V376 0xffffffffffffffffffffffffffffffffffffffff
0x424: V378 = 0x72e
0x427: JUMP 0x72e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x38c, V377]
Exit stack: [V12, 0x38c, V377]

================================

Block 0x428
[0x428:0x42e]
---
Predecessors: [0x9e]
Successors: [0x42f, 0x433]
---
0x428 JUMPDEST
0x429 CALLVALUE
0x42a ISZERO
0x42b PUSH2 0x433
0x42e JUMPI
---
0x428: JUMPDEST 
0x429: V379 = CALLVALUE
0x42a: V380 = ISZERO V379
0x42b: V381 = 0x433
0x42e: JUMPI 0x433 V380
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x42f
[0x42f:0x432]
---
Predecessors: [0x428]
Successors: []
---
0x42f PUSH1 0x0
0x431 DUP1
0x432 REVERT
---
0x42f: V382 = 0x0
0x432: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x433
[0x433:0x43a]
---
Predecessors: [0x428]
Successors: [0x84e]
---
0x433 JUMPDEST
0x434 PUSH2 0x3a1
0x437 PUSH2 0x84e
0x43a JUMP
---
0x433: JUMPDEST 
0x434: V383 = 0x3a1
0x437: V384 = 0x84e
0x43a: JUMP 0x84e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3a1]
Exit stack: [V12, 0x3a1]

================================

Block 0x43b
[0x43b:0x441]
---
Predecessors: [0xa9]
Successors: [0x442, 0x446]
---
0x43b JUMPDEST
0x43c CALLVALUE
0x43d ISZERO
0x43e PUSH2 0x446
0x441 JUMPI
---
0x43b: JUMPDEST 
0x43c: V385 = CALLVALUE
0x43d: V386 = ISZERO V385
0x43e: V387 = 0x446
0x441: JUMPI 0x446 V386
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x442
[0x442:0x445]
---
Predecessors: [0x43b]
Successors: []
---
0x442 PUSH1 0x0
0x444 DUP1
0x445 REVERT
---
0x442: V388 = 0x0
0x445: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x446
[0x446:0x44d]
---
Predecessors: [0x43b]
Successors: [0x85d]
---
0x446 JUMPDEST
0x447 PUSH2 0x38c
0x44a PUSH2 0x85d
0x44d JUMP
---
0x446: JUMPDEST 
0x447: V389 = 0x38c
0x44a: V390 = 0x85d
0x44d: JUMP 0x85d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x38c]
Exit stack: [V12, 0x38c]

================================

Block 0x44e
[0x44e:0x454]
---
Predecessors: [0xb4]
Successors: [0x455, 0x459]
---
0x44e JUMPDEST
0x44f CALLVALUE
0x450 ISZERO
0x451 PUSH2 0x459
0x454 JUMPI
---
0x44e: JUMPDEST 
0x44f: V391 = CALLVALUE
0x450: V392 = ISZERO V391
0x451: V393 = 0x459
0x454: JUMPI 0x459 V392
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x455
[0x455:0x458]
---
Predecessors: [0x44e]
Successors: []
---
0x455 PUSH1 0x0
0x457 DUP1
0x458 REVERT
---
0x455: V394 = 0x0
0x458: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x459
[0x459:0x46c]
---
Predecessors: [0x44e]
Successors: [0x916]
---
0x459 JUMPDEST
0x45a PUSH2 0x2fb
0x45d PUSH1 0x1
0x45f PUSH1 0xa0
0x461 PUSH1 0x2
0x463 EXP
0x464 SUB
0x465 PUSH1 0x4
0x467 CALLDATALOAD
0x468 AND
0x469 PUSH2 0x916
0x46c JUMP
---
0x459: JUMPDEST 
0x45a: V395 = 0x2fb
0x45d: V396 = 0x1
0x45f: V397 = 0xa0
0x461: V398 = 0x2
0x463: V399 = EXP 0x2 0xa0
0x464: V400 = SUB 0x10000000000000000000000000000000000000000 0x1
0x465: V401 = 0x4
0x467: V402 = CALLDATALOAD 0x4
0x468: V403 = AND V402 0xffffffffffffffffffffffffffffffffffffffff
0x469: V404 = 0x916
0x46c: JUMP 0x916
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2fb, V403]
Exit stack: [V12, 0x2fb, V403]

================================

Block 0x46d
[0x46d:0x473]
---
Predecessors: [0xbf]
Successors: [0x474, 0x478]
---
0x46d JUMPDEST
0x46e CALLVALUE
0x46f ISZERO
0x470 PUSH2 0x478
0x473 JUMPI
---
0x46d: JUMPDEST 
0x46e: V405 = CALLVALUE
0x46f: V406 = ISZERO V405
0x470: V407 = 0x478
0x473: JUMPI 0x478 V406
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x474
[0x474:0x477]
---
Predecessors: [0x46d]
Successors: []
---
0x474 PUSH1 0x0
0x476 DUP1
0x477 REVERT
---
0x474: V408 = 0x0
0x477: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x478
[0x478:0x4bb]
---
Predecessors: [0x46d]
Successors: [0x928]
---
0x478 JUMPDEST
0x479 PUSH2 0x38c
0x47c PUSH1 0x4
0x47e PUSH1 0x24
0x480 DUP2
0x481 CALLDATALOAD
0x482 DUP2
0x483 DUP2
0x484 ADD
0x485 SWAP1
0x486 DUP4
0x487 ADD
0x488 CALLDATALOAD
0x489 DUP1
0x48a PUSH1 0x20
0x48c DUP2
0x48d DUP2
0x48e MUL
0x48f ADD
0x490 PUSH1 0x40
0x492 MLOAD
0x493 SWAP1
0x494 DUP2
0x495 ADD
0x496 PUSH1 0x40
0x498 MSTORE
0x499 DUP1
0x49a SWAP4
0x49b SWAP3
0x49c SWAP2
0x49d SWAP1
0x49e DUP2
0x49f DUP2
0x4a0 MSTORE
0x4a1 PUSH1 0x20
0x4a3 ADD
0x4a4 DUP4
0x4a5 DUP4
0x4a6 PUSH1 0x20
0x4a8 MUL
0x4a9 DUP1
0x4aa DUP3
0x4ab DUP5
0x4ac CALLDATACOPY
0x4ad POP
0x4ae SWAP5
0x4af SWAP7
0x4b0 POP
0x4b1 PUSH2 0x928
0x4b4 SWAP6
0x4b5 POP
0x4b6 POP
0x4b7 POP
0x4b8 POP
0x4b9 POP
0x4ba POP
0x4bb JUMP
---
0x478: JUMPDEST 
0x479: V409 = 0x38c
0x47c: V410 = 0x4
0x47e: V411 = 0x24
0x481: V412 = CALLDATALOAD 0x4
0x484: V413 = ADD V412 0x24
0x487: V414 = ADD 0x4 V412
0x488: V415 = CALLDATALOAD V414
0x48a: V416 = 0x20
0x48e: V417 = MUL 0x20 V415
0x48f: V418 = ADD V417 0x20
0x490: V419 = 0x40
0x492: V420 = M[0x40]
0x495: V421 = ADD V420 V418
0x496: V422 = 0x40
0x498: M[0x40] = V421
0x4a0: M[V420] = V415
0x4a1: V423 = 0x20
0x4a3: V424 = ADD 0x20 V420
0x4a6: V425 = 0x20
0x4a8: V426 = MUL 0x20 V415
0x4ac: CALLDATACOPY V424 V413 V426
0x4b1: V427 = 0x928
0x4bb: JUMP 0x928
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x38c, V420]
Exit stack: [V12, 0x38c, V420]

================================

Block 0x4bc
[0x4bc:0x4c2]
---
Predecessors: [0xca]
Successors: [0x4c3, 0x4c7]
---
0x4bc JUMPDEST
0x4bd CALLVALUE
0x4be ISZERO
0x4bf PUSH2 0x4c7
0x4c2 JUMPI
---
0x4bc: JUMPDEST 
0x4bd: V428 = CALLVALUE
0x4be: V429 = ISZERO V428
0x4bf: V430 = 0x4c7
0x4c2: JUMPI 0x4c7 V429
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c3
[0x4c3:0x4c6]
---
Predecessors: [0x4bc]
Successors: []
---
0x4c3 PUSH1 0x0
0x4c5 DUP1
0x4c6 REVERT
---
0x4c3: V431 = 0x0
0x4c6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c7
[0x4c7:0x4d3]
---
Predecessors: [0x4bc]
Successors: [0x97a]
---
0x4c7 JUMPDEST
0x4c8 PUSH2 0x38c
0x4cb PUSH1 0x4
0x4cd CALLDATALOAD
0x4ce ISZERO
0x4cf ISZERO
0x4d0 PUSH2 0x97a
0x4d3 JUMP
---
0x4c7: JUMPDEST 
0x4c8: V432 = 0x38c
0x4cb: V433 = 0x4
0x4cd: V434 = CALLDATALOAD 0x4
0x4ce: V435 = ISZERO V434
0x4cf: V436 = ISZERO V435
0x4d0: V437 = 0x97a
0x4d3: JUMP 0x97a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x38c, V436]
Exit stack: [V12, 0x38c, V436]

================================

Block 0x4d4
[0x4d4:0x4da]
---
Predecessors: [0xd5]
Successors: [0x4db, 0x4df]
---
0x4d4 JUMPDEST
0x4d5 CALLVALUE
0x4d6 ISZERO
0x4d7 PUSH2 0x4df
0x4da JUMPI
---
0x4d4: JUMPDEST 
0x4d5: V438 = CALLVALUE
0x4d6: V439 = ISZERO V438
0x4d7: V440 = 0x4df
0x4da: JUMPI 0x4df V439
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4db
[0x4db:0x4de]
---
Predecessors: [0x4d4]
Successors: []
---
0x4db PUSH1 0x0
0x4dd DUP1
0x4de REVERT
---
0x4db: V441 = 0x0
0x4de: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4df
[0x4df:0x4e6]
---
Predecessors: [0x4d4]
Successors: [0x9a8]
---
0x4df JUMPDEST
0x4e0 PUSH2 0x38c
0x4e3 PUSH2 0x9a8
0x4e6 JUMP
---
0x4df: JUMPDEST 
0x4e0: V442 = 0x38c
0x4e3: V443 = 0x9a8
0x4e6: JUMP 0x9a8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x38c]
Exit stack: [V12, 0x38c]

================================

Block 0x4e7
[0x4e7:0x4ed]
---
Predecessors: [0xe0]
Successors: [0x4ee, 0x4f2]
---
0x4e7 JUMPDEST
0x4e8 CALLVALUE
0x4e9 ISZERO
0x4ea PUSH2 0x4f2
0x4ed JUMPI
---
0x4e7: JUMPDEST 
0x4e8: V444 = CALLVALUE
0x4e9: V445 = ISZERO V444
0x4ea: V446 = 0x4f2
0x4ed: JUMPI 0x4f2 V445
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ee
[0x4ee:0x4f1]
---
Predecessors: [0x4e7]
Successors: []
---
0x4ee PUSH1 0x0
0x4f0 DUP1
0x4f1 REVERT
---
0x4ee: V447 = 0x0
0x4f1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4f2
[0x4f2:0x505]
---
Predecessors: [0x4e7]
Successors: [0xa76]
---
0x4f2 JUMPDEST
0x4f3 PUSH2 0x2fb
0x4f6 PUSH1 0x1
0x4f8 PUSH1 0xa0
0x4fa PUSH1 0x2
0x4fc EXP
0x4fd SUB
0x4fe PUSH1 0x4
0x500 CALLDATALOAD
0x501 AND
0x502 PUSH2 0xa76
0x505 JUMP
---
0x4f2: JUMPDEST 
0x4f3: V448 = 0x2fb
0x4f6: V449 = 0x1
0x4f8: V450 = 0xa0
0x4fa: V451 = 0x2
0x4fc: V452 = EXP 0x2 0xa0
0x4fd: V453 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fe: V454 = 0x4
0x500: V455 = CALLDATALOAD 0x4
0x501: V456 = AND V455 0xffffffffffffffffffffffffffffffffffffffff
0x502: V457 = 0xa76
0x505: JUMP 0xa76
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2fb, V456]
Exit stack: [V12, 0x2fb, V456]

================================

Block 0x506
[0x506:0x50c]
---
Predecessors: [0xeb]
Successors: [0x50d, 0x511]
---
0x506 JUMPDEST
0x507 CALLVALUE
0x508 ISZERO
0x509 PUSH2 0x511
0x50c JUMPI
---
0x506: JUMPDEST 
0x507: V458 = CALLVALUE
0x508: V459 = ISZERO V458
0x509: V460 = 0x511
0x50c: JUMPI 0x511 V459
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x50d
[0x50d:0x510]
---
Predecessors: [0x506]
Successors: []
---
0x50d PUSH1 0x0
0x50f DUP1
0x510 REVERT
---
0x50d: V461 = 0x0
0x510: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x511
[0x511:0x524]
---
Predecessors: [0x506]
Successors: [0xa94]
---
0x511 JUMPDEST
0x512 PUSH2 0x2fb
0x515 PUSH1 0x1
0x517 PUSH1 0xa0
0x519 PUSH1 0x2
0x51b EXP
0x51c SUB
0x51d PUSH1 0x4
0x51f CALLDATALOAD
0x520 AND
0x521 PUSH2 0xa94
0x524 JUMP
---
0x511: JUMPDEST 
0x512: V462 = 0x2fb
0x515: V463 = 0x1
0x517: V464 = 0xa0
0x519: V465 = 0x2
0x51b: V466 = EXP 0x2 0xa0
0x51c: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51d: V468 = 0x4
0x51f: V469 = CALLDATALOAD 0x4
0x520: V470 = AND V469 0xffffffffffffffffffffffffffffffffffffffff
0x521: V471 = 0xa94
0x524: JUMP 0xa94
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2fb, V470]
Exit stack: [V12, 0x2fb, V470]

================================

Block 0x525
[0x525:0x52b]
---
Predecessors: [0xf6]
Successors: [0x52c, 0x530]
---
0x525 JUMPDEST
0x526 CALLVALUE
0x527 ISZERO
0x528 PUSH2 0x530
0x52b JUMPI
---
0x525: JUMPDEST 
0x526: V472 = CALLVALUE
0x527: V473 = ISZERO V472
0x528: V474 = 0x530
0x52b: JUMPI 0x530 V473
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x52c
[0x52c:0x52f]
---
Predecessors: [0x525]
Successors: []
---
0x52c PUSH1 0x0
0x52e DUP1
0x52f REVERT
---
0x52c: V475 = 0x0
0x52f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x530
[0x530:0x543]
---
Predecessors: [0x525]
Successors: [0xaaf]
---
0x530 JUMPDEST
0x531 PUSH2 0x38c
0x534 PUSH1 0x1
0x536 PUSH1 0xa0
0x538 PUSH1 0x2
0x53a EXP
0x53b SUB
0x53c PUSH1 0x4
0x53e CALLDATALOAD
0x53f AND
0x540 PUSH2 0xaaf
0x543 JUMP
---
0x530: JUMPDEST 
0x531: V476 = 0x38c
0x534: V477 = 0x1
0x536: V478 = 0xa0
0x538: V479 = 0x2
0x53a: V480 = EXP 0x2 0xa0
0x53b: V481 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53c: V482 = 0x4
0x53e: V483 = CALLDATALOAD 0x4
0x53f: V484 = AND V483 0xffffffffffffffffffffffffffffffffffffffff
0x540: V485 = 0xaaf
0x543: JUMP 0xaaf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x38c, V484]
Exit stack: [V12, 0x38c, V484]

================================

Block 0x544
[0x544:0x54a]
---
Predecessors: [0x101]
Successors: [0x54b, 0x54f]
---
0x544 JUMPDEST
0x545 CALLVALUE
0x546 ISZERO
0x547 PUSH2 0x54f
0x54a JUMPI
---
0x544: JUMPDEST 
0x545: V486 = CALLVALUE
0x546: V487 = ISZERO V486
0x547: V488 = 0x54f
0x54a: JUMPI 0x54f V487
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x54b
[0x54b:0x54e]
---
Predecessors: [0x544]
Successors: []
---
0x54b PUSH1 0x0
0x54d DUP1
0x54e REVERT
---
0x54b: V489 = 0x0
0x54e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x54f
[0x54f:0x556]
---
Predecessors: [0x544]
Successors: [0xb0a]
---
0x54f JUMPDEST
0x550 PUSH2 0x2fb
0x553 PUSH2 0xb0a
0x556 JUMP
---
0x54f: JUMPDEST 
0x550: V490 = 0x2fb
0x553: V491 = 0xb0a
0x556: JUMP 0xb0a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2fb]
Exit stack: [V12, 0x2fb]

================================

Block 0x557
[0x557:0x58a]
---
Predecessors: [0x181]
Successors: [0x639]
---
0x557 JUMPDEST
0x558 PUSH1 0x1
0x55a PUSH1 0xa0
0x55c PUSH1 0x2
0x55e EXP
0x55f SUB
0x560 CALLER
0x561 AND
0x562 PUSH1 0x0
0x564 SWAP1
0x565 DUP2
0x566 MSTORE
0x567 PUSH1 0xb
0x569 PUSH1 0x20
0x56b MSTORE
0x56c PUSH1 0x40
0x56e DUP2
0x56f SHA3
0x570 PUSH1 0x1
0x572 ADD
0x573 SLOAD
0x574 DUP2
0x575 SWAP1
0x576 DUP2
0x577 SWAP1
0x578 DUP2
0x579 SWAP1
0x57a DUP2
0x57b SWAP1
0x57c PUSH2 0x58b
0x57f SWAP1
0x580 CALLVALUE
0x581 PUSH4 0xffffffff
0x586 PUSH2 0x639
0x589 AND
0x58a JUMP
---
0x557: JUMPDEST 
0x558: V492 = 0x1
0x55a: V493 = 0xa0
0x55c: V494 = 0x2
0x55e: V495 = EXP 0x2 0xa0
0x55f: V496 = SUB 0x10000000000000000000000000000000000000000 0x1
0x560: V497 = CALLER
0x561: V498 = AND V497 0xffffffffffffffffffffffffffffffffffffffff
0x562: V499 = 0x0
0x566: M[0x0] = V498
0x567: V500 = 0xb
0x569: V501 = 0x20
0x56b: M[0x20] = 0xb
0x56c: V502 = 0x40
0x56f: V503 = SHA3 0x0 0x40
0x570: V504 = 0x1
0x572: V505 = ADD 0x1 V503
0x573: V506 = S[V505]
0x57c: V507 = 0x58b
0x580: V508 = CALLVALUE
0x581: V509 = 0xffffffff
0x586: V510 = 0x639
0x589: V511 = AND 0x639 0xffffffff
0x58a: JUMP 0x639
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x58b, V506, V508]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58b, V506, V508]

================================

Block 0x58b
[0x58b:0x5ad]
---
Predecessors: [0x632]
Successors: [0x5ae, 0x5b8]
---
0x58b JUMPDEST
0x58c PUSH1 0x1
0x58e PUSH1 0xa0
0x590 PUSH1 0x2
0x592 EXP
0x593 SUB
0x594 CALLER
0x595 AND
0x596 PUSH1 0x0
0x598 SWAP1
0x599 DUP2
0x59a MSTORE
0x59b PUSH1 0xc
0x59d PUSH1 0x20
0x59f MSTORE
0x5a0 PUSH1 0x40
0x5a2 SWAP1
0x5a3 SHA3
0x5a4 SLOAD
0x5a5 SWAP1
0x5a6 SWAP4
0x5a7 POP
0x5a8 DUP4
0x5a9 GT
0x5aa PUSH2 0x5b8
0x5ad JUMPI
---
0x58b: JUMPDEST 
0x58c: V512 = 0x1
0x58e: V513 = 0xa0
0x590: V514 = 0x2
0x592: V515 = EXP 0x2 0xa0
0x593: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x594: V517 = CALLER
0x595: V518 = AND V517 0xffffffffffffffffffffffffffffffffffffffff
0x596: V519 = 0x0
0x59a: M[0x0] = V518
0x59b: V520 = 0xc
0x59d: V521 = 0x20
0x59f: M[0x20] = 0xc
0x5a0: V522 = 0x40
0x5a3: V523 = SHA3 0x0 0x40
0x5a4: V524 = S[V523]
0x5a9: V525 = GT S0 V524
0x5aa: V526 = 0x5b8
0x5ad: JUMPI 0x5b8 V525
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S4, S0, S2, S1]

================================

Block 0x5ae
[0x5ae:0x5b7]
---
Predecessors: [0x58b]
Successors: [0x604]
---
0x5ae POP
0x5af CALLVALUE
0x5b0 SWAP1
0x5b1 POP
0x5b2 PUSH1 0x0
0x5b4 PUSH2 0x604
0x5b7 JUMP
---
0x5af: V527 = CALLVALUE
0x5b2: V528 = 0x0
0x5b4: V529 = 0x604
0x5b7: JUMP 0x604
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V527, 0x0]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S3, S2, V527, 0x0]

================================

Block 0x5b8
[0x5b8:0x5ee]
---
Predecessors: [0x58b]
Successors: [0xb10]
---
0x5b8 JUMPDEST
0x5b9 PUSH1 0x1
0x5bb PUSH1 0xa0
0x5bd PUSH1 0x2
0x5bf EXP
0x5c0 SUB
0x5c1 CALLER
0x5c2 AND
0x5c3 PUSH1 0x0
0x5c5 SWAP1
0x5c6 DUP2
0x5c7 MSTORE
0x5c8 PUSH1 0xb
0x5ca PUSH1 0x20
0x5cc SWAP1
0x5cd DUP2
0x5ce MSTORE
0x5cf PUSH1 0x40
0x5d1 DUP1
0x5d2 DUP4
0x5d3 SHA3
0x5d4 PUSH1 0x1
0x5d6 ADD
0x5d7 SLOAD
0x5d8 PUSH1 0xc
0x5da SWAP1
0x5db SWAP3
0x5dc MSTORE
0x5dd SWAP1
0x5de SWAP2
0x5df SHA3
0x5e0 SLOAD
0x5e1 PUSH2 0x5ef
0x5e4 SWAP2
0x5e5 PUSH4 0xffffffff
0x5ea PUSH2 0xb10
0x5ed AND
0x5ee JUMP
---
0x5b8: JUMPDEST 
0x5b9: V530 = 0x1
0x5bb: V531 = 0xa0
0x5bd: V532 = 0x2
0x5bf: V533 = EXP 0x2 0xa0
0x5c0: V534 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c1: V535 = CALLER
0x5c2: V536 = AND V535 0xffffffffffffffffffffffffffffffffffffffff
0x5c3: V537 = 0x0
0x5c7: M[0x0] = V536
0x5c8: V538 = 0xb
0x5ca: V539 = 0x20
0x5ce: M[0x20] = 0xb
0x5cf: V540 = 0x40
0x5d3: V541 = SHA3 0x0 0x40
0x5d4: V542 = 0x1
0x5d6: V543 = ADD 0x1 V541
0x5d7: V544 = S[V543]
0x5d8: V545 = 0xc
0x5dc: M[0x20] = 0xc
0x5df: V546 = SHA3 0x0 0x40
0x5e0: V547 = S[V546]
0x5e1: V548 = 0x5ef
0x5e5: V549 = 0xffffffff
0x5ea: V550 = 0xb10
0x5ed: V551 = AND 0xb10 0xffffffff
0x5ee: JUMP 0xb10
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x5ef, V547, V544]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S3, S2, S1, S0, 0x5ef, V547, V544]

================================

Block 0x5ef
[0x5ef:0x600]
---
Predecessors: [0xb1c]
Successors: [0xb10]
---
0x5ef JUMPDEST
0x5f0 SWAP2
0x5f1 POP
0x5f2 PUSH2 0x601
0x5f5 CALLVALUE
0x5f6 DUP4
0x5f7 PUSH4 0xffffffff
0x5fc PUSH2 0xb10
0x5ff AND
0x600 JUMP
---
0x5ef: JUMPDEST 
0x5f2: V552 = 0x601
0x5f5: V553 = CALLVALUE
0x5f7: V554 = 0xffffffff
0x5fc: V555 = 0xb10
0x5ff: V556 = AND 0xb10 0xffffffff
0x600: JUMP 0xb10
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S4, S3, S2, S1, V1053]
Stack pops: 3
Stack additions: [S0, S1, 0x601, V553, S0]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S4, S3, V1053, S1, 0x601, V553, V1053]

================================

Block 0x601
[0x601:0x603]
---
Predecessors: [0xb1c]
Successors: [0x604]
---
0x601 JUMPDEST
0x602 SWAP1
0x603 POP
---
0x601: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S4, S3, S2, S1, V1053]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S4, S3, S2, V1053]

================================

Block 0x604
[0x604:0x60d]
---
Predecessors: [0x5ae, 0x601]
Successors: [0x189]
---
0x604 JUMPDEST
0x605 SWAP1
0x606 SWAP5
0x607 SWAP1
0x608 SWAP4
0x609 POP
0x60a SWAP2
0x60b POP
0x60c POP
0x60d JUMP
---
0x604: JUMPDEST 
0x60d: JUMP 0x189
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S1, S0]
Exit stack: [V12, 0x0, 0x0, 0x0, S1, S0]

================================

Block 0x60e
[0x60e:0x61a]
---
Predecessors: [0x189]
Successors: [0x61b, 0x62a]
---
0x60e JUMPDEST
0x60f PUSH1 0x0
0x611 DUP3
0x612 DUP3
0x613 MUL
0x614 DUP4
0x615 ISZERO
0x616 DUP1
0x617 PUSH2 0x62a
0x61a JUMPI
---
0x60e: JUMPDEST 
0x60f: V557 = 0x0
0x613: V558 = MUL V136 S1
0x615: V559 = ISZERO S1
0x617: V560 = 0x62a
0x61a: JUMPI 0x62a V559
---
Entry stack: [V12, S5, S4, 0x0, 0x1a2, S1, V136]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V558, V559]
Exit stack: [V12, S5, S4, 0x0, 0x1a2, S1, V136, 0x0, V558, V559]

================================

Block 0x61b
[0x61b:0x625]
---
Predecessors: [0x60e]
Successors: [0x626, 0x627]
---
0x61b POP
0x61c DUP3
0x61d DUP5
0x61e DUP3
0x61f DUP2
0x620 ISZERO
0x621 ISZERO
0x622 PUSH2 0x627
0x625 JUMPI
---
0x620: V561 = ISZERO S4
0x621: V562 = ISZERO V561
0x622: V563 = 0x627
0x625: JUMPI 0x627 V562
---
Entry stack: [V12, S8, S7, 0x0, 0x1a2, S4, V136, 0x0, V558, V559]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, S8, S7, 0x0, 0x1a2, S4, V136, 0x0, V558, V136, S4, V558]

================================

Block 0x626
[0x626:0x626]
---
Predecessors: [0x61b]
Successors: []
---
0x626 INVALID
---
0x626: INVALID 
---
Entry stack: [V12, S10, S9, 0x0, 0x1a2, S6, V136, 0x0, V558, V136, S1, V558]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, 0x0, 0x1a2, S6, V136, 0x0, V558, V136, S1, V558]

================================

Block 0x627
[0x627:0x629]
---
Predecessors: [0x61b]
Successors: [0x62a]
---
0x627 JUMPDEST
0x628 DIV
0x629 EQ
---
0x627: JUMPDEST 
0x628: V564 = DIV V558 S1
0x629: V565 = EQ V564 V136
---
Entry stack: [V12, S10, S9, 0x0, 0x1a2, S6, V136, 0x0, V558, V136, S1, V558]
Stack pops: 3
Stack additions: [V565]
Exit stack: [V12, S10, S9, 0x0, 0x1a2, S6, V136, 0x0, V558, V565]

================================

Block 0x62a
[0x62a:0x630]
---
Predecessors: [0x60e, 0x627, 0x639]
Successors: [0x631, 0x632]
---
0x62a JUMPDEST
0x62b ISZERO
0x62c ISZERO
0x62d PUSH2 0x632
0x630 JUMPI
---
0x62a: JUMPDEST 
0x62b: V566 = ISZERO S0
0x62c: V567 = ISZERO V566
0x62d: V568 = 0x632
0x630: JUMPI 0x632 V567
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S9, S8, S7, S6, {0x1a2, 0x1ce, 0x1fd, 0x22c, 0x242, 0x58b}, S4, S3, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S9, S8, S7, S6, {0x1a2, 0x1ce, 0x1fd, 0x22c, 0x242, 0x58b}, S4, S3, 0x0, S1]

================================

Block 0x631
[0x631:0x631]
---
Predecessors: [0x62a]
Successors: []
---
0x631 INVALID
---
0x631: INVALID 
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S8, S7, S6, S5, {0x1a2, 0x1ce, 0x1fd, 0x22c, 0x242, 0x58b}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S8, S7, S6, S5, {0x1a2, 0x1ce, 0x1fd, 0x22c, 0x242, 0x58b}, S3, S2, 0x0, S0]

================================

Block 0x632
[0x632:0x638]
---
Predecessors: [0x62a, 0x649]
Successors: [0x1a2, 0x1ce, 0x1fd, 0x22c, 0x242, 0x58b]
---
0x632 JUMPDEST
0x633 SWAP4
0x634 SWAP3
0x635 POP
0x636 POP
0x637 POP
0x638 JUMP
---
0x632: JUMPDEST 
0x638: JUMP {0x1a2, 0x1ce, 0x1fd, 0x22c, 0x242, 0x58b}
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S8, S7, S6, S5, {0x1a2, 0x1ce, 0x1fd, 0x22c, 0x242, 0x58b}, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S8, S7, S6, S5, S0]

================================

Block 0x639
[0x639:0x648]
---
Predecessors: [0x1a2, 0x1ce, 0x1fd, 0x22c, 0x557]
Successors: [0x62a, 0x649]
---
0x639 JUMPDEST
0x63a PUSH1 0x0
0x63c DUP3
0x63d DUP3
0x63e ADD
0x63f DUP4
0x640 DUP2
0x641 LT
0x642 DUP1
0x643 ISZERO
0x644 SWAP1
0x645 PUSH2 0x62a
0x648 JUMPI
---
0x639: JUMPDEST 
0x63a: V569 = 0x0
0x63e: V570 = ADD S0 S1
0x641: V571 = LT V570 S1
0x643: V572 = ISZERO V571
0x645: V573 = 0x62a
0x648: JUMPI 0x62a V571
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S6, S5, S4, S3, {0x1ce, 0x1fd, 0x22c, 0x242, 0x58b}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V570, V572]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S6, S5, S4, S3, {0x1ce, 0x1fd, 0x22c, 0x242, 0x58b}, S1, S0, 0x0, V570, V572]

================================

Block 0x649
[0x649:0x651]
---
Predecessors: [0x639]
Successors: [0x632, 0x652]
---
0x649 POP
0x64a DUP3
0x64b DUP2
0x64c LT
0x64d ISZERO
0x64e PUSH2 0x632
0x651 JUMPI
---
0x64c: V574 = LT V570 S3
0x64d: V575 = ISZERO V574
0x64e: V576 = 0x632
0x651: JUMPI 0x632 V575
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S9, S8, S7, S6, {0x1ce, 0x1fd, 0x22c, 0x242, 0x58b}, S4, S3, 0x0, V570, V572]
Stack pops: 4
Stack additions: [S3, S2, S1]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S9, S8, S7, S6, {0x1ce, 0x1fd, 0x22c, 0x242, 0x58b}, S4, S3, 0x0, V570]

================================

Block 0x652
[0x652:0x652]
---
Predecessors: [0x649]
Successors: []
---
0x652 INVALID
---
0x652: INVALID 
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S8, S7, S6, S5, {0x1ce, 0x1fd, 0x22c, 0x242, 0x58b}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S8, S7, S6, S5, {0x1ce, 0x1fd, 0x22c, 0x242, 0x58b}, S3, S2, 0x0, S0]

================================

Block 0x653
[0x653:0x65b]
---
Predecessors: [0x2cc]
Successors: [0x2d4]
---
0x653 JUMPDEST
0x654 PUSH1 0xa
0x656 SLOAD
0x657 PUSH1 0xff
0x659 AND
0x65a DUP2
0x65b JUMP
---
0x653: JUMPDEST 
0x654: V577 = 0xa
0x656: V578 = S[0xa]
0x657: V579 = 0xff
0x659: V580 = AND 0xff V578
0x65b: JUMP 0x2d4
---
Entry stack: [V12, 0x2d4]
Stack pops: 1
Stack additions: [S0, V580]
Exit stack: [V12, 0x2d4, V580]

================================

Block 0x65c
[0x65c:0x661]
---
Predecessors: [0x2f3]
Successors: [0x2fb]
---
0x65c JUMPDEST
0x65d PUSH1 0x5
0x65f SLOAD
0x660 DUP2
0x661 JUMP
---
0x65c: JUMPDEST 
0x65d: V581 = 0x5
0x65f: V582 = S[0x5]
0x661: JUMP 0x2fb
---
Entry stack: [V12, 0x2fb]
Stack pops: 1
Stack additions: [S0, V582]
Exit stack: [V12, 0x2fb, V582]

================================

Block 0x662
[0x662:0x67a]
---
Predecessors: [0x318]
Successors: [0x32c]
---
0x662 JUMPDEST
0x663 PUSH1 0xb
0x665 PUSH1 0x20
0x667 MSTORE
0x668 PUSH1 0x0
0x66a SWAP1
0x66b DUP2
0x66c MSTORE
0x66d PUSH1 0x40
0x66f SWAP1
0x670 SHA3
0x671 DUP1
0x672 SLOAD
0x673 PUSH1 0x1
0x675 SWAP1
0x676 SWAP2
0x677 ADD
0x678 SLOAD
0x679 DUP3
0x67a JUMP
---
0x662: JUMPDEST 
0x663: V583 = 0xb
0x665: V584 = 0x20
0x667: M[0x20] = 0xb
0x668: V585 = 0x0
0x66c: M[0x0] = V284
0x66d: V586 = 0x40
0x670: V587 = SHA3 0x0 0x40
0x672: V588 = S[V587]
0x673: V589 = 0x1
0x677: V590 = ADD V587 0x1
0x678: V591 = S[V590]
0x67a: JUMP 0x32c
---
Entry stack: [V12, 0x32c, V284]
Stack pops: 2
Stack additions: [S1, V588, V591]
Exit stack: [V12, 0x32c, V588, V591]

================================

Block 0x67b
[0x67b:0x680]
---
Predecessors: [0x34f]
Successors: [0x2fb]
---
0x67b JUMPDEST
0x67c PUSH1 0x3
0x67e SLOAD
0x67f DUP2
0x680 JUMP
---
0x67b: JUMPDEST 
0x67c: V592 = 0x3
0x67e: V593 = S[0x3]
0x680: JUMP 0x2fb
---
Entry stack: [V12, 0x2fb]
Stack pops: 1
Stack additions: [S0, V593]
Exit stack: [V12, 0x2fb, V593]

================================

Block 0x681
[0x681:0x686]
---
Predecessors: [0x362]
Successors: [0x2fb]
---
0x681 JUMPDEST
0x682 PUSH1 0x9
0x684 SLOAD
0x685 DUP2
0x686 JUMP
---
0x681: JUMPDEST 
0x682: V594 = 0x9
0x684: V595 = S[0x9]
0x686: JUMP 0x2fb
---
Entry stack: [V12, 0x2fb]
Stack pops: 1
Stack additions: [S0, V595]
Exit stack: [V12, 0x2fb, V595]

================================

Block 0x687
[0x687:0x69d]
---
Predecessors: [0x375, 0x960]
Successors: [0x69e, 0x6a2]
---
0x687 JUMPDEST
0x688 PUSH1 0x0
0x68a SLOAD
0x68b CALLER
0x68c PUSH1 0x1
0x68e PUSH1 0xa0
0x690 PUSH1 0x2
0x692 EXP
0x693 SUB
0x694 SWAP1
0x695 DUP2
0x696 AND
0x697 SWAP2
0x698 AND
0x699 EQ
0x69a PUSH2 0x6a2
0x69d JUMPI
---
0x687: JUMPDEST 
0x688: V596 = 0x0
0x68a: V597 = S[0x0]
0x68b: V598 = CALLER
0x68c: V599 = 0x1
0x68e: V600 = 0xa0
0x690: V601 = 0x2
0x692: V602 = EXP 0x2 0xa0
0x693: V603 = SUB 0x10000000000000000000000000000000000000000 0x1
0x696: V604 = AND 0xffffffffffffffffffffffffffffffffffffffff V598
0x698: V605 = AND V597 0xffffffffffffffffffffffffffffffffffffffff
0x699: V606 = EQ V605 V604
0x69a: V607 = 0x6a2
0x69d: JUMPI 0x6a2 V606
---
Entry stack: [V12, 0x38c, V420, S3, {0x38c, 0x972}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V420, S3, {0x38c, 0x972}, S1, S0]

================================

Block 0x69e
[0x69e:0x6a1]
---
Predecessors: [0x687]
Successors: []
---
0x69e PUSH1 0x0
0x6a0 DUP1
0x6a1 REVERT
---
0x69e: V608 = 0x0
0x6a1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, V420, S3, {0x38c, 0x972}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V420, S3, {0x38c, 0x972}, S1, S0]

================================

Block 0x6a2
[0x6a2:0x6ad]
---
Predecessors: [0x687]
Successors: [0x6ae, 0x6b2]
---
0x6a2 JUMPDEST
0x6a3 PUSH1 0x40
0x6a5 PUSH1 0x44
0x6a7 CALLDATASIZE
0x6a8 LT
0x6a9 ISZERO
0x6aa PUSH2 0x6b2
0x6ad JUMPI
---
0x6a2: JUMPDEST 
0x6a3: V609 = 0x40
0x6a5: V610 = 0x44
0x6a7: V611 = CALLDATASIZE
0x6a8: V612 = LT V611 0x44
0x6a9: V613 = ISZERO V612
0x6aa: V614 = 0x6b2
0x6ad: JUMPI 0x6b2 V613
---
Entry stack: [V12, 0x38c, V420, S3, {0x38c, 0x972}, S1, S0]
Stack pops: 0
Stack additions: [0x40]
Exit stack: [V12, 0x38c, V420, S3, {0x38c, 0x972}, S1, S0, 0x40]

================================

Block 0x6ae
[0x6ae:0x6b1]
---
Predecessors: [0x6a2]
Successors: []
---
0x6ae PUSH1 0x0
0x6b0 DUP1
0x6b1 REVERT
---
0x6ae: V615 = 0x0
0x6b1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, V420, S4, {0x38c, 0x972}, S2, S1, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V420, S4, {0x38c, 0x972}, S2, S1, 0x40]

================================

Block 0x6b2
[0x6b2:0x706]
---
Predecessors: [0x6a2]
Successors: [0x38c, 0x972]
---
0x6b2 JUMPDEST
0x6b3 PUSH1 0x1
0x6b5 PUSH1 0xa0
0x6b7 PUSH1 0x2
0x6b9 EXP
0x6ba SUB
0x6bb DUP4
0x6bc AND
0x6bd PUSH1 0x0
0x6bf DUP2
0x6c0 DUP2
0x6c1 MSTORE
0x6c2 PUSH1 0xc
0x6c4 PUSH1 0x20
0x6c6 MSTORE
0x6c7 PUSH1 0x40
0x6c9 SWAP1
0x6ca DUP2
0x6cb SWAP1
0x6cc SHA3
0x6cd DUP5
0x6ce SWAP1
0x6cf SSTORE
0x6d0 PUSH32 0xeb6fa25b8b2e7986441a8271ce7fcc2122ba6f8e2081a9544960bf7139fa9251
0x6f1 SWAP1
0x6f2 DUP5
0x6f3 SWAP1
0x6f4 MLOAD
0x6f5 SWAP1
0x6f6 DUP2
0x6f7 MSTORE
0x6f8 PUSH1 0x20
0x6fa ADD
0x6fb PUSH1 0x40
0x6fd MLOAD
0x6fe DUP1
0x6ff SWAP2
0x700 SUB
0x701 SWAP1
0x702 LOG2
0x703 POP
0x704 POP
0x705 POP
0x706 JUMP
---
0x6b2: JUMPDEST 
0x6b3: V616 = 0x1
0x6b5: V617 = 0xa0
0x6b7: V618 = 0x2
0x6b9: V619 = EXP 0x2 0xa0
0x6ba: V620 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6bc: V621 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x6bd: V622 = 0x0
0x6c1: M[0x0] = V621
0x6c2: V623 = 0xc
0x6c4: V624 = 0x20
0x6c6: M[0x20] = 0xc
0x6c7: V625 = 0x40
0x6cc: V626 = SHA3 0x0 0x40
0x6cf: S[V626] = S1
0x6d0: V627 = 0xeb6fa25b8b2e7986441a8271ce7fcc2122ba6f8e2081a9544960bf7139fa9251
0x6f4: V628 = M[0x40]
0x6f7: M[V628] = S1
0x6f8: V629 = 0x20
0x6fa: V630 = ADD 0x20 V628
0x6fb: V631 = 0x40
0x6fd: V632 = M[0x40]
0x700: V633 = SUB V630 V632
0x702: LOG V632 V633 0xeb6fa25b8b2e7986441a8271ce7fcc2122ba6f8e2081a9544960bf7139fa9251 V621
0x706: JUMP {0x38c, 0x972}
---
Entry stack: [V12, 0x38c, V420, S4, {0x38c, 0x972}, S2, S1, 0x40]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x38c, V420, S4]

================================

Block 0x707
[0x707:0x715]
---
Predecessors: [0x399]
Successors: [0x3a1]
---
0x707 JUMPDEST
0x708 PUSH1 0x1
0x70a SLOAD
0x70b PUSH1 0x1
0x70d PUSH1 0xa0
0x70f PUSH1 0x2
0x711 EXP
0x712 SUB
0x713 AND
0x714 DUP2
0x715 JUMP
---
0x707: JUMPDEST 
0x708: V634 = 0x1
0x70a: V635 = S[0x1]
0x70b: V636 = 0x1
0x70d: V637 = 0xa0
0x70f: V638 = 0x2
0x711: V639 = EXP 0x2 0xa0
0x712: V640 = SUB 0x10000000000000000000000000000000000000000 0x1
0x713: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff V635
0x715: JUMP 0x3a1
---
Entry stack: [V12, 0x3a1]
Stack pops: 1
Stack additions: [S0, V641]
Exit stack: [V12, 0x3a1, V641]

================================

Block 0x716
[0x716:0x71b]
---
Predecessors: [0x3c8]
Successors: [0x2fb]
---
0x716 JUMPDEST
0x717 PUSH1 0x8
0x719 SLOAD
0x71a DUP2
0x71b JUMP
---
0x716: JUMPDEST 
0x717: V642 = 0x8
0x719: V643 = S[0x8]
0x71b: JUMP 0x2fb
---
Entry stack: [V12, 0x2fb]
Stack pops: 1
Stack additions: [S0, V643]
Exit stack: [V12, 0x2fb, V643]

================================

Block 0x71c
[0x71c:0x721]
---
Predecessors: [0x3db]
Successors: [0x2fb]
---
0x71c JUMPDEST
0x71d PUSH1 0x6
0x71f SLOAD
0x720 DUP2
0x721 JUMP
---
0x71c: JUMPDEST 
0x71d: V644 = 0x6
0x71f: V645 = S[0x6]
0x721: JUMP 0x2fb
---
Entry stack: [V12, 0x2fb]
Stack pops: 1
Stack additions: [S0, V645]
Exit stack: [V12, 0x2fb, V645]

================================

Block 0x722
[0x722:0x727]
---
Predecessors: [0x3ee]
Successors: [0x2fb]
---
0x722 JUMPDEST
0x723 PUSH1 0x7
0x725 SLOAD
0x726 DUP2
0x727 JUMP
---
0x722: JUMPDEST 
0x723: V646 = 0x7
0x725: V647 = S[0x7]
0x727: JUMP 0x2fb
---
Entry stack: [V12, 0x2fb]
Stack pops: 1
Stack additions: [S0, V647]
Exit stack: [V12, 0x2fb, V647]

================================

Block 0x728
[0x728:0x72d]
---
Predecessors: [0x401]
Successors: [0x2fb]
---
0x728 JUMPDEST
0x729 PUSH1 0x2
0x72b SLOAD
0x72c DUP2
0x72d JUMP
---
0x728: JUMPDEST 
0x729: V648 = 0x2
0x72b: V649 = S[0x2]
0x72d: JUMP 0x2fb
---
Entry stack: [V12, 0x2fb]
Stack pops: 1
Stack additions: [S0, V649]
Exit stack: [V12, 0x2fb, V649]

================================

Block 0x72e
[0x72e:0x744]
---
Predecessors: [0x414]
Successors: [0x745, 0x749]
---
0x72e JUMPDEST
0x72f PUSH1 0x0
0x731 SLOAD
0x732 CALLER
0x733 PUSH1 0x1
0x735 PUSH1 0xa0
0x737 PUSH1 0x2
0x739 EXP
0x73a SUB
0x73b SWAP1
0x73c DUP2
0x73d AND
0x73e SWAP2
0x73f AND
0x740 EQ
0x741 PUSH2 0x749
0x744 JUMPI
---
0x72e: JUMPDEST 
0x72f: V650 = 0x0
0x731: V651 = S[0x0]
0x732: V652 = CALLER
0x733: V653 = 0x1
0x735: V654 = 0xa0
0x737: V655 = 0x2
0x739: V656 = EXP 0x2 0xa0
0x73a: V657 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73d: V658 = AND 0xffffffffffffffffffffffffffffffffffffffff V652
0x73f: V659 = AND V651 0xffffffffffffffffffffffffffffffffffffffff
0x740: V660 = EQ V659 V658
0x741: V661 = 0x749
0x744: JUMPI 0x749 V660
---
Entry stack: [V12, 0x38c, V377]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V377]

================================

Block 0x745
[0x745:0x748]
---
Predecessors: [0x72e]
Successors: []
---
0x745 PUSH1 0x0
0x747 DUP1
0x748 REVERT
---
0x745: V662 = 0x0
0x748: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, V377]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V377]

================================

Block 0x749
[0x749:0x754]
---
Predecessors: [0x72e]
Successors: [0x755, 0x759]
---
0x749 JUMPDEST
0x74a PUSH1 0x20
0x74c PUSH1 0x24
0x74e CALLDATASIZE
0x74f LT
0x750 ISZERO
0x751 PUSH2 0x759
0x754 JUMPI
---
0x749: JUMPDEST 
0x74a: V663 = 0x20
0x74c: V664 = 0x24
0x74e: V665 = CALLDATASIZE
0x74f: V666 = LT V665 0x24
0x750: V667 = ISZERO V666
0x751: V668 = 0x759
0x754: JUMPI 0x759 V667
---
Entry stack: [V12, 0x38c, V377]
Stack pops: 0
Stack additions: [0x20]
Exit stack: [V12, 0x38c, V377, 0x20]

================================

Block 0x755
[0x755:0x758]
---
Predecessors: [0x749]
Successors: []
---
0x755 PUSH1 0x0
0x757 DUP1
0x758 REVERT
---
0x755: V669 = 0x0
0x758: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, V377, 0x20]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V377, 0x20]

================================

Block 0x759
[0x759:0x7b8]
---
Predecessors: [0x749]
Successors: [0x7b9, 0x7bd]
---
0x759 JUMPDEST
0x75a PUSH1 0x1
0x75c SLOAD
0x75d PUSH1 0x1
0x75f PUSH1 0xa0
0x761 PUSH1 0x2
0x763 EXP
0x764 SUB
0x765 DUP1
0x766 DUP5
0x767 AND
0x768 SWAP2
0x769 PUSH4 0xa9059cbb
0x76e SWAP2
0x76f AND
0x770 DUP3
0x771 PUSH4 0x70a08231
0x776 ADDRESS
0x777 PUSH1 0x0
0x779 PUSH1 0x40
0x77b MLOAD
0x77c PUSH1 0x20
0x77e ADD
0x77f MSTORE
0x780 PUSH1 0x40
0x782 MLOAD
0x783 PUSH1 0xe0
0x785 PUSH1 0x2
0x787 EXP
0x788 PUSH4 0xffffffff
0x78d DUP5
0x78e AND
0x78f MUL
0x790 DUP2
0x791 MSTORE
0x792 PUSH1 0x1
0x794 PUSH1 0xa0
0x796 PUSH1 0x2
0x798 EXP
0x799 SUB
0x79a SWAP1
0x79b SWAP2
0x79c AND
0x79d PUSH1 0x4
0x79f DUP3
0x7a0 ADD
0x7a1 MSTORE
0x7a2 PUSH1 0x24
0x7a4 ADD
0x7a5 PUSH1 0x20
0x7a7 PUSH1 0x40
0x7a9 MLOAD
0x7aa DUP1
0x7ab DUP4
0x7ac SUB
0x7ad DUP2
0x7ae PUSH1 0x0
0x7b0 DUP8
0x7b1 DUP1
0x7b2 EXTCODESIZE
0x7b3 ISZERO
0x7b4 ISZERO
0x7b5 PUSH2 0x7bd
0x7b8 JUMPI
---
0x759: JUMPDEST 
0x75a: V670 = 0x1
0x75c: V671 = S[0x1]
0x75d: V672 = 0x1
0x75f: V673 = 0xa0
0x761: V674 = 0x2
0x763: V675 = EXP 0x2 0xa0
0x764: V676 = SUB 0x10000000000000000000000000000000000000000 0x1
0x767: V677 = AND V377 0xffffffffffffffffffffffffffffffffffffffff
0x769: V678 = 0xa9059cbb
0x76f: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff V671
0x771: V680 = 0x70a08231
0x776: V681 = ADDRESS
0x777: V682 = 0x0
0x779: V683 = 0x40
0x77b: V684 = M[0x40]
0x77c: V685 = 0x20
0x77e: V686 = ADD 0x20 V684
0x77f: M[V686] = 0x0
0x780: V687 = 0x40
0x782: V688 = M[0x40]
0x783: V689 = 0xe0
0x785: V690 = 0x2
0x787: V691 = EXP 0x2 0xe0
0x788: V692 = 0xffffffff
0x78e: V693 = AND 0x70a08231 0xffffffff
0x78f: V694 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x791: M[V688] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x792: V695 = 0x1
0x794: V696 = 0xa0
0x796: V697 = 0x2
0x798: V698 = EXP 0x2 0xa0
0x799: V699 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79c: V700 = AND V681 0xffffffffffffffffffffffffffffffffffffffff
0x79d: V701 = 0x4
0x7a0: V702 = ADD V688 0x4
0x7a1: M[V702] = V700
0x7a2: V703 = 0x24
0x7a4: V704 = ADD 0x24 V688
0x7a5: V705 = 0x20
0x7a7: V706 = 0x40
0x7a9: V707 = M[0x40]
0x7ac: V708 = SUB V704 V707
0x7ae: V709 = 0x0
0x7b2: V710 = EXTCODESIZE V677
0x7b3: V711 = ISZERO V710
0x7b4: V712 = ISZERO V711
0x7b5: V713 = 0x7bd
0x7b8: JUMPI 0x7bd V712
---
Entry stack: [V12, 0x38c, V377, 0x20]
Stack pops: 2
Stack additions: [S1, S0, V677, 0xa9059cbb, V679, V677, 0x70a08231, V704, 0x20, V707, V708, V707, 0x0, V677]
Exit stack: [V12, 0x38c, V377, 0x20, V677, 0xa9059cbb, V679, V677, 0x70a08231, V704, 0x20, V707, V708, V707, 0x0, V677]

================================

Block 0x7b9
[0x7b9:0x7bc]
---
Predecessors: [0x759]
Successors: []
---
0x7b9 PUSH1 0x0
0x7bb DUP1
0x7bc REVERT
---
0x7b9: V714 = 0x0
0x7bc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, V377, 0x20, V677, 0xa9059cbb, V679, V677, 0x70a08231, V704, 0x20, V707, V708, V707, 0x0, V677]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V377, 0x20, V677, 0xa9059cbb, V679, V677, 0x70a08231, V704, 0x20, V707, V708, V707, 0x0, V677]

================================

Block 0x7bd
[0x7bd:0x7c9]
---
Predecessors: [0x759]
Successors: [0x7ca, 0x7ce]
---
0x7bd JUMPDEST
0x7be PUSH2 0x2c6
0x7c1 GAS
0x7c2 SUB
0x7c3 CALL
0x7c4 ISZERO
0x7c5 ISZERO
0x7c6 PUSH2 0x7ce
0x7c9 JUMPI
---
0x7bd: JUMPDEST 
0x7be: V715 = 0x2c6
0x7c1: V716 = GAS
0x7c2: V717 = SUB V716 0x2c6
0x7c3: V718 = CALL V717 V677 0x0 V707 V708 V707 0x20
0x7c4: V719 = ISZERO V718
0x7c5: V720 = ISZERO V719
0x7c6: V721 = 0x7ce
0x7c9: JUMPI 0x7ce V720
---
Entry stack: [V12, 0x38c, V377, 0x20, V677, 0xa9059cbb, V679, V677, 0x70a08231, V704, 0x20, V707, V708, V707, 0x0, V677]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x38c, V377, 0x20, V677, 0xa9059cbb, V679, V677, 0x70a08231, V704]

================================

Block 0x7ca
[0x7ca:0x7cd]
---
Predecessors: [0x7bd]
Successors: []
---
0x7ca PUSH1 0x0
0x7cc DUP1
0x7cd REVERT
---
0x7ca: V722 = 0x0
0x7cd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, V377, 0x20, V677, 0xa9059cbb, V679, V677, 0x70a08231, V704]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V377, 0x20, V677, 0xa9059cbb, V679, V677, 0x70a08231, V704]

================================

Block 0x7ce
[0x7ce:0x81f]
---
Predecessors: [0x7bd]
Successors: [0x820, 0x824]
---
0x7ce JUMPDEST
0x7cf POP
0x7d0 POP
0x7d1 POP
0x7d2 PUSH1 0x40
0x7d4 MLOAD
0x7d5 DUP1
0x7d6 MLOAD
0x7d7 SWAP1
0x7d8 POP
0x7d9 PUSH1 0x0
0x7db PUSH1 0x40
0x7dd MLOAD
0x7de PUSH1 0x20
0x7e0 ADD
0x7e1 MSTORE
0x7e2 PUSH1 0x40
0x7e4 MLOAD
0x7e5 PUSH1 0xe0
0x7e7 PUSH1 0x2
0x7e9 EXP
0x7ea PUSH4 0xffffffff
0x7ef DUP6
0x7f0 AND
0x7f1 MUL
0x7f2 DUP2
0x7f3 MSTORE
0x7f4 PUSH1 0x1
0x7f6 PUSH1 0xa0
0x7f8 PUSH1 0x2
0x7fa EXP
0x7fb SUB
0x7fc SWAP1
0x7fd SWAP3
0x7fe AND
0x7ff PUSH1 0x4
0x801 DUP4
0x802 ADD
0x803 MSTORE
0x804 PUSH1 0x24
0x806 DUP3
0x807 ADD
0x808 MSTORE
0x809 PUSH1 0x44
0x80b ADD
0x80c PUSH1 0x20
0x80e PUSH1 0x40
0x810 MLOAD
0x811 DUP1
0x812 DUP4
0x813 SUB
0x814 DUP2
0x815 PUSH1 0x0
0x817 DUP8
0x818 DUP1
0x819 EXTCODESIZE
0x81a ISZERO
0x81b ISZERO
0x81c PUSH2 0x824
0x81f JUMPI
---
0x7ce: JUMPDEST 
0x7d2: V723 = 0x40
0x7d4: V724 = M[0x40]
0x7d6: V725 = M[V724]
0x7d9: V726 = 0x0
0x7db: V727 = 0x40
0x7dd: V728 = M[0x40]
0x7de: V729 = 0x20
0x7e0: V730 = ADD 0x20 V728
0x7e1: M[V730] = 0x0
0x7e2: V731 = 0x40
0x7e4: V732 = M[0x40]
0x7e5: V733 = 0xe0
0x7e7: V734 = 0x2
0x7e9: V735 = EXP 0x2 0xe0
0x7ea: V736 = 0xffffffff
0x7f0: V737 = AND 0xa9059cbb 0xffffffff
0x7f1: V738 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x7f3: M[V732] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7f4: V739 = 0x1
0x7f6: V740 = 0xa0
0x7f8: V741 = 0x2
0x7fa: V742 = EXP 0x2 0xa0
0x7fb: V743 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7fe: V744 = AND V679 0xffffffffffffffffffffffffffffffffffffffff
0x7ff: V745 = 0x4
0x802: V746 = ADD V732 0x4
0x803: M[V746] = V744
0x804: V747 = 0x24
0x807: V748 = ADD V732 0x24
0x808: M[V748] = V725
0x809: V749 = 0x44
0x80b: V750 = ADD 0x44 V732
0x80c: V751 = 0x20
0x80e: V752 = 0x40
0x810: V753 = M[0x40]
0x813: V754 = SUB V750 V753
0x815: V755 = 0x0
0x819: V756 = EXTCODESIZE V677
0x81a: V757 = ISZERO V756
0x81b: V758 = ISZERO V757
0x81c: V759 = 0x824
0x81f: JUMPI 0x824 V758
---
Entry stack: [V12, 0x38c, V377, 0x20, V677, 0xa9059cbb, V679, V677, 0x70a08231, V704]
Stack pops: 6
Stack additions: [S5, S4, V750, 0x20, V753, V754, V753, 0x0, S5]
Exit stack: [V12, 0x38c, V377, 0x20, V677, 0xa9059cbb, V750, 0x20, V753, V754, V753, 0x0, V677]

================================

Block 0x820
[0x820:0x823]
---
Predecessors: [0x7ce]
Successors: []
---
0x820 PUSH1 0x0
0x822 DUP1
0x823 REVERT
---
0x820: V760 = 0x0
0x823: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, V377, 0x20, V677, 0xa9059cbb, V750, 0x20, V753, V754, V753, 0x0, V677]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V377, 0x20, V677, 0xa9059cbb, V750, 0x20, V753, V754, V753, 0x0, V677]

================================

Block 0x824
[0x824:0x830]
---
Predecessors: [0x7ce]
Successors: [0x831, 0x835]
---
0x824 JUMPDEST
0x825 PUSH2 0x2c6
0x828 GAS
0x829 SUB
0x82a CALL
0x82b ISZERO
0x82c ISZERO
0x82d PUSH2 0x835
0x830 JUMPI
---
0x824: JUMPDEST 
0x825: V761 = 0x2c6
0x828: V762 = GAS
0x829: V763 = SUB V762 0x2c6
0x82a: V764 = CALL V763 V677 0x0 V753 V754 V753 0x20
0x82b: V765 = ISZERO V764
0x82c: V766 = ISZERO V765
0x82d: V767 = 0x835
0x830: JUMPI 0x835 V766
---
Entry stack: [V12, 0x38c, V377, 0x20, V677, 0xa9059cbb, V750, 0x20, V753, V754, V753, 0x0, V677]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x38c, V377, 0x20, V677, 0xa9059cbb, V750]

================================

Block 0x831
[0x831:0x834]
---
Predecessors: [0x824]
Successors: []
---
0x831 PUSH1 0x0
0x833 DUP1
0x834 REVERT
---
0x831: V768 = 0x0
0x834: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, V377, 0x20, V677, 0xa9059cbb, V750]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V377, 0x20, V677, 0xa9059cbb, V750]

================================

Block 0x835
[0x835:0x845]
---
Predecessors: [0x824]
Successors: [0x846, 0x84a]
---
0x835 JUMPDEST
0x836 POP
0x837 POP
0x838 POP
0x839 PUSH1 0x40
0x83b MLOAD
0x83c DUP1
0x83d MLOAD
0x83e SWAP1
0x83f POP
0x840 ISZERO
0x841 ISZERO
0x842 PUSH2 0x84a
0x845 JUMPI
---
0x835: JUMPDEST 
0x839: V769 = 0x40
0x83b: V770 = M[0x40]
0x83d: V771 = M[V770]
0x840: V772 = ISZERO V771
0x841: V773 = ISZERO V772
0x842: V774 = 0x84a
0x845: JUMPI 0x84a V773
---
Entry stack: [V12, 0x38c, V377, 0x20, V677, 0xa9059cbb, V750]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x38c, V377, 0x20]

================================

Block 0x846
[0x846:0x849]
---
Predecessors: [0x835]
Successors: []
---
0x846 PUSH1 0x0
0x848 DUP1
0x849 REVERT
---
0x846: V775 = 0x0
0x849: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, V377, 0x20]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V377, 0x20]

================================

Block 0x84a
[0x84a:0x84d]
---
Predecessors: [0x835, 0x948]
Successors: [0x38c]
---
0x84a JUMPDEST
0x84b POP
0x84c POP
0x84d JUMP
---
0x84a: JUMPDEST 
0x84d: JUMP 0x38c
---
Entry stack: [V12, 0x38c, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x84e
[0x84e:0x85c]
---
Predecessors: [0x433]
Successors: [0x3a1]
---
0x84e JUMPDEST
0x84f PUSH1 0x0
0x851 SLOAD
0x852 PUSH1 0x1
0x854 PUSH1 0xa0
0x856 PUSH1 0x2
0x858 EXP
0x859 SUB
0x85a AND
0x85b DUP2
0x85c JUMP
---
0x84e: JUMPDEST 
0x84f: V776 = 0x0
0x851: V777 = S[0x0]
0x852: V778 = 0x1
0x854: V779 = 0xa0
0x856: V780 = 0x2
0x858: V781 = EXP 0x2 0xa0
0x859: V782 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85a: V783 = AND 0xffffffffffffffffffffffffffffffffffffffff V777
0x85c: JUMP 0x3a1
---
Entry stack: [V12, 0x3a1]
Stack pops: 1
Stack additions: [S0, V783]
Exit stack: [V12, 0x3a1, V783]

================================

Block 0x85d
[0x85d:0x874]
---
Predecessors: [0x446]
Successors: [0x875, 0x879]
---
0x85d JUMPDEST
0x85e PUSH1 0x0
0x860 DUP1
0x861 SLOAD
0x862 CALLER
0x863 PUSH1 0x1
0x865 PUSH1 0xa0
0x867 PUSH1 0x2
0x869 EXP
0x86a SUB
0x86b SWAP1
0x86c DUP2
0x86d AND
0x86e SWAP2
0x86f AND
0x870 EQ
0x871 PUSH2 0x879
0x874 JUMPI
---
0x85d: JUMPDEST 
0x85e: V784 = 0x0
0x861: V785 = S[0x0]
0x862: V786 = CALLER
0x863: V787 = 0x1
0x865: V788 = 0xa0
0x867: V789 = 0x2
0x869: V790 = EXP 0x2 0xa0
0x86a: V791 = SUB 0x10000000000000000000000000000000000000000 0x1
0x86d: V792 = AND 0xffffffffffffffffffffffffffffffffffffffff V786
0x86f: V793 = AND V785 0xffffffffffffffffffffffffffffffffffffffff
0x870: V794 = EQ V793 V792
0x871: V795 = 0x879
0x874: JUMPI 0x879 V794
---
Entry stack: [V12, 0x38c]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x38c, 0x0]

================================

Block 0x875
[0x875:0x878]
---
Predecessors: [0x85d]
Successors: []
---
0x875 PUSH1 0x0
0x877 DUP1
0x878 REVERT
---
0x875: V796 = 0x0
0x878: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, 0x0]

================================

Block 0x879
[0x879:0x887]
---
Predecessors: [0x85d]
Successors: [0x888, 0x89c]
---
0x879 JUMPDEST
0x87a PUSH1 0x4
0x87c SLOAD
0x87d PUSH1 0x9
0x87f SLOAD
0x880 LT
0x881 ISZERO
0x882 DUP1
0x883 ISZERO
0x884 PUSH2 0x89c
0x887 JUMPI
---
0x879: JUMPDEST 
0x87a: V797 = 0x4
0x87c: V798 = S[0x4]
0x87d: V799 = 0x9
0x87f: V800 = S[0x9]
0x880: V801 = LT V800 V798
0x881: V802 = ISZERO V801
0x883: V803 = ISZERO V802
0x884: V804 = 0x89c
0x887: JUMPI 0x89c V803
---
Entry stack: [V12, 0x38c, 0x0]
Stack pops: 0
Stack additions: [V802]
Exit stack: [V12, 0x38c, 0x0, V802]

================================

Block 0x888
[0x888:0x892]
---
Predecessors: [0x879]
Successors: [0x893, 0x89c]
---
0x888 POP
0x889 PUSH1 0x3
0x88b SLOAD
0x88c TIMESTAMP
0x88d GT
0x88e DUP1
0x88f PUSH2 0x89c
0x892 JUMPI
---
0x889: V805 = 0x3
0x88b: V806 = S[0x3]
0x88c: V807 = TIMESTAMP
0x88d: V808 = GT V807 V806
0x88f: V809 = 0x89c
0x892: JUMPI 0x89c V808
---
Entry stack: [V12, 0x38c, 0x0, V802]
Stack pops: 1
Stack additions: [V808]
Exit stack: [V12, 0x38c, 0x0, V808]

================================

Block 0x893
[0x893:0x89b]
---
Predecessors: [0x888]
Successors: [0x89c]
---
0x893 POP
0x894 PUSH1 0x5
0x896 SLOAD
0x897 PUSH1 0x9
0x899 SLOAD
0x89a LT
0x89b ISZERO
---
0x894: V810 = 0x5
0x896: V811 = S[0x5]
0x897: V812 = 0x9
0x899: V813 = S[0x9]
0x89a: V814 = LT V813 V811
0x89b: V815 = ISZERO V814
---
Entry stack: [V12, 0x38c, 0x0, V808]
Stack pops: 1
Stack additions: [V815]
Exit stack: [V12, 0x38c, 0x0, V815]

================================

Block 0x89c
[0x89c:0x8a2]
---
Predecessors: [0x879, 0x888, 0x893]
Successors: [0x8a3, 0x8a7]
---
0x89c JUMPDEST
0x89d ISZERO
0x89e ISZERO
0x89f PUSH2 0x8a7
0x8a2 JUMPI
---
0x89c: JUMPDEST 
0x89d: V816 = ISZERO S0
0x89e: V817 = ISZERO V816
0x89f: V818 = 0x8a7
0x8a2: JUMPI 0x8a7 V817
---
Entry stack: [V12, 0x38c, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x38c, 0x0]

================================

Block 0x8a3
[0x8a3:0x8a6]
---
Predecessors: [0x89c]
Successors: []
---
0x8a3 PUSH1 0x0
0x8a5 DUP1
0x8a6 REVERT
---
0x8a3: V819 = 0x0
0x8a6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, 0x0]

================================

Block 0x8a7
[0x8a7:0x8db]
---
Predecessors: [0x89c]
Successors: [0x8dc, 0x8e0]
---
0x8a7 JUMPDEST
0x8a8 POP
0x8a9 PUSH1 0x1
0x8ab SLOAD
0x8ac PUSH1 0x1
0x8ae PUSH1 0xa0
0x8b0 PUSH1 0x2
0x8b2 EXP
0x8b3 SUB
0x8b4 ADDRESS
0x8b5 DUP2
0x8b6 AND
0x8b7 BALANCE
0x8b8 SWAP2
0x8b9 AND
0x8ba DUP2
0x8bb ISZERO
0x8bc PUSH2 0x8fc
0x8bf MUL
0x8c0 DUP3
0x8c1 PUSH1 0x40
0x8c3 MLOAD
0x8c4 PUSH1 0x0
0x8c6 PUSH1 0x40
0x8c8 MLOAD
0x8c9 DUP1
0x8ca DUP4
0x8cb SUB
0x8cc DUP2
0x8cd DUP6
0x8ce DUP9
0x8cf DUP9
0x8d0 CALL
0x8d1 SWAP4
0x8d2 POP
0x8d3 POP
0x8d4 POP
0x8d5 POP
0x8d6 ISZERO
0x8d7 ISZERO
0x8d8 PUSH2 0x8e0
0x8db JUMPI
---
0x8a7: JUMPDEST 
0x8a9: V820 = 0x1
0x8ab: V821 = S[0x1]
0x8ac: V822 = 0x1
0x8ae: V823 = 0xa0
0x8b0: V824 = 0x2
0x8b2: V825 = EXP 0x2 0xa0
0x8b3: V826 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b4: V827 = ADDRESS
0x8b6: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff V827
0x8b7: V829 = BALANCE V828
0x8b9: V830 = AND V821 0xffffffffffffffffffffffffffffffffffffffff
0x8bb: V831 = ISZERO V829
0x8bc: V832 = 0x8fc
0x8bf: V833 = MUL 0x8fc V831
0x8c1: V834 = 0x40
0x8c3: V835 = M[0x40]
0x8c4: V836 = 0x0
0x8c6: V837 = 0x40
0x8c8: V838 = M[0x40]
0x8cb: V839 = SUB V835 V838
0x8d0: V840 = CALL V833 V830 V829 V838 V839 V838 0x0
0x8d6: V841 = ISZERO V840
0x8d7: V842 = ISZERO V841
0x8d8: V843 = 0x8e0
0x8db: JUMPI 0x8e0 V842
---
Entry stack: [V12, 0x38c, 0x0]
Stack pops: 1
Stack additions: [V829]
Exit stack: [V12, 0x38c, V829]

================================

Block 0x8dc
[0x8dc:0x8df]
---
Predecessors: [0x8a7]
Successors: []
---
0x8dc PUSH1 0x0
0x8de DUP1
0x8df REVERT
---
0x8dc: V844 = 0x0
0x8df: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, V829]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V829]

================================

Block 0x8e0
[0x8e0:0x915]
---
Predecessors: [0x8a7]
Successors: [0x38c]
---
0x8e0 JUMPDEST
0x8e1 PUSH32 0x7f36875e1aa63a260a86253b4178fbeb52d1d36819b47a29d15ec2a259e49efa
0x902 DUP2
0x903 PUSH1 0x40
0x905 MLOAD
0x906 SWAP1
0x907 DUP2
0x908 MSTORE
0x909 PUSH1 0x20
0x90b ADD
0x90c PUSH1 0x40
0x90e MLOAD
0x90f DUP1
0x910 SWAP2
0x911 SUB
0x912 SWAP1
0x913 LOG1
0x914 POP
0x915 JUMP
---
0x8e0: JUMPDEST 
0x8e1: V845 = 0x7f36875e1aa63a260a86253b4178fbeb52d1d36819b47a29d15ec2a259e49efa
0x903: V846 = 0x40
0x905: V847 = M[0x40]
0x908: M[V847] = V829
0x909: V848 = 0x20
0x90b: V849 = ADD 0x20 V847
0x90c: V850 = 0x40
0x90e: V851 = M[0x40]
0x911: V852 = SUB V849 V851
0x913: LOG V851 V852 0x7f36875e1aa63a260a86253b4178fbeb52d1d36819b47a29d15ec2a259e49efa
0x915: JUMP 0x38c
---
Entry stack: [V12, 0x38c, V829]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x916
[0x916:0x927]
---
Predecessors: [0x459]
Successors: [0x2fb]
---
0x916 JUMPDEST
0x917 PUSH1 0xc
0x919 PUSH1 0x20
0x91b MSTORE
0x91c PUSH1 0x0
0x91e SWAP1
0x91f DUP2
0x920 MSTORE
0x921 PUSH1 0x40
0x923 SWAP1
0x924 SHA3
0x925 SLOAD
0x926 DUP2
0x927 JUMP
---
0x916: JUMPDEST 
0x917: V853 = 0xc
0x919: V854 = 0x20
0x91b: M[0x20] = 0xc
0x91c: V855 = 0x0
0x920: M[0x0] = V403
0x921: V856 = 0x40
0x924: V857 = SHA3 0x0 0x40
0x925: V858 = S[V857]
0x927: JUMP 0x2fb
---
Entry stack: [V12, 0x2fb, V403]
Stack pops: 2
Stack additions: [S1, V858]
Exit stack: [V12, 0x2fb, V858]

================================

Block 0x928
[0x928:0x93f]
---
Predecessors: [0x478]
Successors: [0x940, 0x944]
---
0x928 JUMPDEST
0x929 PUSH1 0x0
0x92b DUP1
0x92c SLOAD
0x92d CALLER
0x92e PUSH1 0x1
0x930 PUSH1 0xa0
0x932 PUSH1 0x2
0x934 EXP
0x935 SUB
0x936 SWAP1
0x937 DUP2
0x938 AND
0x939 SWAP2
0x93a AND
0x93b EQ
0x93c PUSH2 0x944
0x93f JUMPI
---
0x928: JUMPDEST 
0x929: V859 = 0x0
0x92c: V860 = S[0x0]
0x92d: V861 = CALLER
0x92e: V862 = 0x1
0x930: V863 = 0xa0
0x932: V864 = 0x2
0x934: V865 = EXP 0x2 0xa0
0x935: V866 = SUB 0x10000000000000000000000000000000000000000 0x1
0x938: V867 = AND 0xffffffffffffffffffffffffffffffffffffffff V861
0x93a: V868 = AND V860 0xffffffffffffffffffffffffffffffffffffffff
0x93b: V869 = EQ V868 V867
0x93c: V870 = 0x944
0x93f: JUMPI 0x944 V869
---
Entry stack: [V12, 0x38c, V420]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x38c, V420, 0x0]

================================

Block 0x940
[0x940:0x943]
---
Predecessors: [0x928]
Successors: []
---
0x940 PUSH1 0x0
0x942 DUP1
0x943 REVERT
---
0x940: V871 = 0x0
0x943: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, V420, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V420, 0x0]

================================

Block 0x944
[0x944:0x947]
---
Predecessors: [0x928]
Successors: [0x948]
---
0x944 JUMPDEST
0x945 POP
0x946 PUSH1 0x0
---
0x944: JUMPDEST 
0x946: V872 = 0x0
---
Entry stack: [V12, 0x38c, V420, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x38c, V420, 0x0]

================================

Block 0x948
[0x948:0x951]
---
Predecessors: [0x944, 0x972]
Successors: [0x84a, 0x952]
---
0x948 JUMPDEST
0x949 DUP2
0x94a MLOAD
0x94b DUP2
0x94c LT
0x94d ISZERO
0x94e PUSH2 0x84a
0x951 JUMPI
---
0x948: JUMPDEST 
0x94a: V873 = M[V420]
0x94c: V874 = LT S0 V873
0x94d: V875 = ISZERO V874
0x94e: V876 = 0x84a
0x951: JUMPI 0x84a V875
---
Entry stack: [V12, 0x38c, V420, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x38c, V420, S0]

================================

Block 0x952
[0x952:0x95e]
---
Predecessors: [0x948]
Successors: [0x95f, 0x960]
---
0x952 PUSH2 0x972
0x955 DUP3
0x956 DUP3
0x957 DUP2
0x958 MLOAD
0x959 DUP2
0x95a LT
0x95b PUSH2 0x960
0x95e JUMPI
---
0x952: V877 = 0x972
0x958: V878 = M[V420]
0x95a: V879 = LT S0 V878
0x95b: V880 = 0x960
0x95e: JUMPI 0x960 V879
---
Entry stack: [V12, 0x38c, V420, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x972, S1, S0]
Exit stack: [V12, 0x38c, V420, S0, 0x972, V420, S0]

================================

Block 0x95f
[0x95f:0x95f]
---
Predecessors: [0x952]
Successors: []
---
0x95f INVALID
---
0x95f: INVALID 
---
Entry stack: [V12, 0x38c, V420, S3, 0x972, V420, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V420, S3, 0x972, V420, S0]

================================

Block 0x960
[0x960:0x971]
---
Predecessors: [0x952]
Successors: [0x687]
---
0x960 JUMPDEST
0x961 SWAP1
0x962 PUSH1 0x20
0x964 ADD
0x965 SWAP1
0x966 PUSH1 0x20
0x968 MUL
0x969 ADD
0x96a MLOAD
0x96b PUSH1 0x6
0x96d SLOAD
0x96e PUSH2 0x687
0x971 JUMP
---
0x960: JUMPDEST 
0x962: V881 = 0x20
0x964: V882 = ADD 0x20 V420
0x966: V883 = 0x20
0x968: V884 = MUL 0x20 S0
0x969: V885 = ADD V884 V882
0x96a: V886 = M[V885]
0x96b: V887 = 0x6
0x96d: V888 = S[0x6]
0x96e: V889 = 0x687
0x971: JUMP 0x687
---
Entry stack: [V12, 0x38c, V420, S3, 0x972, V420, S0]
Stack pops: 2
Stack additions: [V886, V888]
Exit stack: [V12, 0x38c, V420, S3, 0x972, V886, V888]

================================

Block 0x972
[0x972:0x979]
---
Predecessors: [0x6b2]
Successors: [0x948]
---
0x972 JUMPDEST
0x973 PUSH1 0x1
0x975 ADD
0x976 PUSH2 0x948
0x979 JUMP
---
0x972: JUMPDEST 
0x973: V890 = 0x1
0x975: V891 = ADD 0x1 S0
0x976: V892 = 0x948
0x979: JUMP 0x948
---
Entry stack: [V12, 0x38c, V420, S0]
Stack pops: 1
Stack additions: [V891]
Exit stack: [V12, 0x38c, V420, V891]

================================

Block 0x97a
[0x97a:0x990]
---
Predecessors: [0x4c7]
Successors: [0x991, 0x995]
---
0x97a JUMPDEST
0x97b PUSH1 0x0
0x97d SLOAD
0x97e CALLER
0x97f PUSH1 0x1
0x981 PUSH1 0xa0
0x983 PUSH1 0x2
0x985 EXP
0x986 SUB
0x987 SWAP1
0x988 DUP2
0x989 AND
0x98a SWAP2
0x98b AND
0x98c EQ
0x98d PUSH2 0x995
0x990 JUMPI
---
0x97a: JUMPDEST 
0x97b: V893 = 0x0
0x97d: V894 = S[0x0]
0x97e: V895 = CALLER
0x97f: V896 = 0x1
0x981: V897 = 0xa0
0x983: V898 = 0x2
0x985: V899 = EXP 0x2 0xa0
0x986: V900 = SUB 0x10000000000000000000000000000000000000000 0x1
0x989: V901 = AND 0xffffffffffffffffffffffffffffffffffffffff V895
0x98b: V902 = AND V894 0xffffffffffffffffffffffffffffffffffffffff
0x98c: V903 = EQ V902 V901
0x98d: V904 = 0x995
0x990: JUMPI 0x995 V903
---
Entry stack: [V12, 0x38c, V436]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V436]

================================

Block 0x991
[0x991:0x994]
---
Predecessors: [0x97a]
Successors: []
---
0x991 PUSH1 0x0
0x993 DUP1
0x994 REVERT
---
0x991: V905 = 0x0
0x994: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, V436]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V436]

================================

Block 0x995
[0x995:0x9a7]
---
Predecessors: [0x97a]
Successors: [0x38c]
---
0x995 JUMPDEST
0x996 PUSH1 0xa
0x998 DUP1
0x999 SLOAD
0x99a PUSH1 0xff
0x99c NOT
0x99d AND
0x99e SWAP2
0x99f ISZERO
0x9a0 ISZERO
0x9a1 SWAP2
0x9a2 SWAP1
0x9a3 SWAP2
0x9a4 OR
0x9a5 SWAP1
0x9a6 SSTORE
0x9a7 JUMP
---
0x995: JUMPDEST 
0x996: V906 = 0xa
0x999: V907 = S[0xa]
0x99a: V908 = 0xff
0x99c: V909 = NOT 0xff
0x99d: V910 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V907
0x99f: V911 = ISZERO V436
0x9a0: V912 = ISZERO V911
0x9a4: V913 = OR V912 V910
0x9a6: S[0xa] = V913
0x9a7: JUMP 0x38c
---
Entry stack: [V12, 0x38c, V436]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x9a8
[0x9a8:0x9b7]
---
Predecessors: [0x4df]
Successors: [0x9b8, 0x9be]
---
0x9a8 JUMPDEST
0x9a9 PUSH1 0x0
0x9ab PUSH1 0x4
0x9ad SLOAD
0x9ae PUSH1 0x9
0x9b0 SLOAD
0x9b1 LT
0x9b2 DUP1
0x9b3 ISZERO
0x9b4 PUSH2 0x9be
0x9b7 JUMPI
---
0x9a8: JUMPDEST 
0x9a9: V914 = 0x0
0x9ab: V915 = 0x4
0x9ad: V916 = S[0x4]
0x9ae: V917 = 0x9
0x9b0: V918 = S[0x9]
0x9b1: V919 = LT V918 V916
0x9b3: V920 = ISZERO V919
0x9b4: V921 = 0x9be
0x9b7: JUMPI 0x9be V920
---
Entry stack: [V12, 0x38c]
Stack pops: 0
Stack additions: [0x0, V919]
Exit stack: [V12, 0x38c, 0x0, V919]

================================

Block 0x9b8
[0x9b8:0x9bd]
---
Predecessors: [0x9a8]
Successors: [0x9be]
---
0x9b8 POP
0x9b9 PUSH1 0x3
0x9bb SLOAD
0x9bc TIMESTAMP
0x9bd GT
---
0x9b9: V922 = 0x3
0x9bb: V923 = S[0x3]
0x9bc: V924 = TIMESTAMP
0x9bd: V925 = GT V924 V923
---
Entry stack: [V12, 0x38c, 0x0, V919]
Stack pops: 1
Stack additions: [V925]
Exit stack: [V12, 0x38c, 0x0, V925]

================================

Block 0x9be
[0x9be:0x9c4]
---
Predecessors: [0x9a8, 0x9b8]
Successors: [0x9c5, 0x9c9]
---
0x9be JUMPDEST
0x9bf ISZERO
0x9c0 ISZERO
0x9c1 PUSH2 0x9c9
0x9c4 JUMPI
---
0x9be: JUMPDEST 
0x9bf: V926 = ISZERO S0
0x9c0: V927 = ISZERO V926
0x9c1: V928 = 0x9c9
0x9c4: JUMPI 0x9c9 V927
---
Entry stack: [V12, 0x38c, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x38c, 0x0]

================================

Block 0x9c5
[0x9c5:0x9c8]
---
Predecessors: [0x9be]
Successors: []
---
0x9c5 PUSH1 0x0
0x9c7 DUP1
0x9c8 REVERT
---
0x9c5: V929 = 0x0
0x9c8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, 0x0]

================================

Block 0x9c9
[0x9c9:0x9ed]
---
Predecessors: [0x9be]
Successors: [0x9ee, 0x9ef]
---
0x9c9 JUMPDEST
0x9ca POP
0x9cb PUSH1 0x1
0x9cd PUSH1 0xa0
0x9cf PUSH1 0x2
0x9d1 EXP
0x9d2 SUB
0x9d3 CALLER
0x9d4 AND
0x9d5 PUSH1 0x0
0x9d7 SWAP1
0x9d8 DUP2
0x9d9 MSTORE
0x9da PUSH1 0xb
0x9dc PUSH1 0x20
0x9de MSTORE
0x9df PUSH1 0x40
0x9e1 DUP2
0x9e2 SHA3
0x9e3 PUSH1 0x1
0x9e5 ADD
0x9e6 SLOAD
0x9e7 SWAP1
0x9e8 DUP2
0x9e9 GT
0x9ea PUSH2 0x9ef
0x9ed JUMPI
---
0x9c9: JUMPDEST 
0x9cb: V930 = 0x1
0x9cd: V931 = 0xa0
0x9cf: V932 = 0x2
0x9d1: V933 = EXP 0x2 0xa0
0x9d2: V934 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d3: V935 = CALLER
0x9d4: V936 = AND V935 0xffffffffffffffffffffffffffffffffffffffff
0x9d5: V937 = 0x0
0x9d9: M[0x0] = V936
0x9da: V938 = 0xb
0x9dc: V939 = 0x20
0x9de: M[0x20] = 0xb
0x9df: V940 = 0x40
0x9e2: V941 = SHA3 0x0 0x40
0x9e3: V942 = 0x1
0x9e5: V943 = ADD 0x1 V941
0x9e6: V944 = S[V943]
0x9e9: V945 = GT V944 0x0
0x9ea: V946 = 0x9ef
0x9ed: JUMPI 0x9ef V945
---
Entry stack: [V12, 0x38c, 0x0]
Stack pops: 1
Stack additions: [V944]
Exit stack: [V12, 0x38c, V944]

================================

Block 0x9ee
[0x9ee:0x9ee]
---
Predecessors: [0x9c9]
Successors: []
---
0x9ee INVALID
---
0x9ee: INVALID 
---
Entry stack: [V12, 0x38c, V944]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V944]

================================

Block 0x9ef
[0x9ef:0xa31]
---
Predecessors: [0x9c9]
Successors: [0xa32, 0xa36]
---
0x9ef JUMPDEST
0x9f0 PUSH1 0x1
0x9f2 PUSH1 0xa0
0x9f4 PUSH1 0x2
0x9f6 EXP
0x9f7 SUB
0x9f8 CALLER
0x9f9 AND
0x9fa PUSH1 0x0
0x9fc DUP2
0x9fd DUP2
0x9fe MSTORE
0x9ff PUSH1 0xb
0xa01 PUSH1 0x20
0xa03 MSTORE
0xa04 PUSH1 0x40
0xa06 DUP1
0xa07 DUP3
0xa08 SHA3
0xa09 PUSH1 0x1
0xa0b ADD
0xa0c SWAP2
0xa0d SWAP1
0xa0e SWAP2
0xa0f SSTORE
0xa10 DUP3
0xa11 ISZERO
0xa12 PUSH2 0x8fc
0xa15 MUL
0xa16 SWAP1
0xa17 DUP4
0xa18 SWAP1
0xa19 MLOAD
0xa1a PUSH1 0x0
0xa1c PUSH1 0x40
0xa1e MLOAD
0xa1f DUP1
0xa20 DUP4
0xa21 SUB
0xa22 DUP2
0xa23 DUP6
0xa24 DUP9
0xa25 DUP9
0xa26 CALL
0xa27 SWAP4
0xa28 POP
0xa29 POP
0xa2a POP
0xa2b POP
0xa2c ISZERO
0xa2d ISZERO
0xa2e PUSH2 0xa36
0xa31 JUMPI
---
0x9ef: JUMPDEST 
0x9f0: V947 = 0x1
0x9f2: V948 = 0xa0
0x9f4: V949 = 0x2
0x9f6: V950 = EXP 0x2 0xa0
0x9f7: V951 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f8: V952 = CALLER
0x9f9: V953 = AND V952 0xffffffffffffffffffffffffffffffffffffffff
0x9fa: V954 = 0x0
0x9fe: M[0x0] = V953
0x9ff: V955 = 0xb
0xa01: V956 = 0x20
0xa03: M[0x20] = 0xb
0xa04: V957 = 0x40
0xa08: V958 = SHA3 0x0 0x40
0xa09: V959 = 0x1
0xa0b: V960 = ADD 0x1 V958
0xa0f: S[V960] = 0x0
0xa11: V961 = ISZERO V944
0xa12: V962 = 0x8fc
0xa15: V963 = MUL 0x8fc V961
0xa19: V964 = M[0x40]
0xa1a: V965 = 0x0
0xa1c: V966 = 0x40
0xa1e: V967 = M[0x40]
0xa21: V968 = SUB V964 V967
0xa26: V969 = CALL V963 V953 V944 V967 V968 V967 0x0
0xa2c: V970 = ISZERO V969
0xa2d: V971 = ISZERO V970
0xa2e: V972 = 0xa36
0xa31: JUMPI 0xa36 V971
---
Entry stack: [V12, 0x38c, V944]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x38c, V944]

================================

Block 0xa32
[0xa32:0xa35]
---
Predecessors: [0x9ef]
Successors: []
---
0xa32 PUSH1 0x0
0xa34 DUP1
0xa35 REVERT
---
0xa32: V973 = 0x0
0xa35: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, V944]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V944]

================================

Block 0xa36
[0xa36:0xa75]
---
Predecessors: [0x9ef]
Successors: [0x38c]
---
0xa36 JUMPDEST
0xa37 CALLER
0xa38 PUSH1 0x1
0xa3a PUSH1 0xa0
0xa3c PUSH1 0x2
0xa3e EXP
0xa3f SUB
0xa40 AND
0xa41 PUSH32 0xec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b
0xa62 DUP3
0xa63 PUSH1 0x40
0xa65 MLOAD
0xa66 SWAP1
0xa67 DUP2
0xa68 MSTORE
0xa69 PUSH1 0x20
0xa6b ADD
0xa6c PUSH1 0x40
0xa6e MLOAD
0xa6f DUP1
0xa70 SWAP2
0xa71 SUB
0xa72 SWAP1
0xa73 LOG2
0xa74 POP
0xa75 JUMP
---
0xa36: JUMPDEST 
0xa37: V974 = CALLER
0xa38: V975 = 0x1
0xa3a: V976 = 0xa0
0xa3c: V977 = 0x2
0xa3e: V978 = EXP 0x2 0xa0
0xa3f: V979 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa40: V980 = AND 0xffffffffffffffffffffffffffffffffffffffff V974
0xa41: V981 = 0xec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b
0xa63: V982 = 0x40
0xa65: V983 = M[0x40]
0xa68: M[V983] = V944
0xa69: V984 = 0x20
0xa6b: V985 = ADD 0x20 V983
0xa6c: V986 = 0x40
0xa6e: V987 = M[0x40]
0xa71: V988 = SUB V985 V987
0xa73: LOG V987 V988 0xec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b V980
0xa75: JUMP 0x38c
---
Entry stack: [V12, 0x38c, V944]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xa76
[0xa76:0xa93]
---
Predecessors: [0x4f2]
Successors: [0x2fb]
---
0xa76 JUMPDEST
0xa77 PUSH1 0x1
0xa79 PUSH1 0xa0
0xa7b PUSH1 0x2
0xa7d EXP
0xa7e SUB
0xa7f AND
0xa80 PUSH1 0x0
0xa82 SWAP1
0xa83 DUP2
0xa84 MSTORE
0xa85 PUSH1 0xb
0xa87 PUSH1 0x20
0xa89 MSTORE
0xa8a PUSH1 0x40
0xa8c SWAP1
0xa8d SHA3
0xa8e PUSH1 0x1
0xa90 ADD
0xa91 SLOAD
0xa92 SWAP1
0xa93 JUMP
---
0xa76: JUMPDEST 
0xa77: V989 = 0x1
0xa79: V990 = 0xa0
0xa7b: V991 = 0x2
0xa7d: V992 = EXP 0x2 0xa0
0xa7e: V993 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7f: V994 = AND 0xffffffffffffffffffffffffffffffffffffffff V456
0xa80: V995 = 0x0
0xa84: M[0x0] = V994
0xa85: V996 = 0xb
0xa87: V997 = 0x20
0xa89: M[0x20] = 0xb
0xa8a: V998 = 0x40
0xa8d: V999 = SHA3 0x0 0x40
0xa8e: V1000 = 0x1
0xa90: V1001 = ADD 0x1 V999
0xa91: V1002 = S[V1001]
0xa93: JUMP 0x2fb
---
Entry stack: [V12, 0x2fb, V456]
Stack pops: 2
Stack additions: [V1002]
Exit stack: [V12, V1002]

================================

Block 0xa94
[0xa94:0xaae]
---
Predecessors: [0x511]
Successors: [0x2fb]
---
0xa94 JUMPDEST
0xa95 PUSH1 0x1
0xa97 PUSH1 0xa0
0xa99 PUSH1 0x2
0xa9b EXP
0xa9c SUB
0xa9d AND
0xa9e PUSH1 0x0
0xaa0 SWAP1
0xaa1 DUP2
0xaa2 MSTORE
0xaa3 PUSH1 0xb
0xaa5 PUSH1 0x20
0xaa7 MSTORE
0xaa8 PUSH1 0x40
0xaaa SWAP1
0xaab SHA3
0xaac SLOAD
0xaad SWAP1
0xaae JUMP
---
0xa94: JUMPDEST 
0xa95: V1003 = 0x1
0xa97: V1004 = 0xa0
0xa99: V1005 = 0x2
0xa9b: V1006 = EXP 0x2 0xa0
0xa9c: V1007 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa9d: V1008 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0xa9e: V1009 = 0x0
0xaa2: M[0x0] = V1008
0xaa3: V1010 = 0xb
0xaa5: V1011 = 0x20
0xaa7: M[0x20] = 0xb
0xaa8: V1012 = 0x40
0xaab: V1013 = SHA3 0x0 0x40
0xaac: V1014 = S[V1013]
0xaae: JUMP 0x2fb
---
Entry stack: [V12, 0x2fb, V470]
Stack pops: 2
Stack additions: [V1014]
Exit stack: [V12, V1014]

================================

Block 0xaaf
[0xaaf:0xac5]
---
Predecessors: [0x530]
Successors: [0xac6, 0xaca]
---
0xaaf JUMPDEST
0xab0 PUSH1 0x0
0xab2 SLOAD
0xab3 CALLER
0xab4 PUSH1 0x1
0xab6 PUSH1 0xa0
0xab8 PUSH1 0x2
0xaba EXP
0xabb SUB
0xabc SWAP1
0xabd DUP2
0xabe AND
0xabf SWAP2
0xac0 AND
0xac1 EQ
0xac2 PUSH2 0xaca
0xac5 JUMPI
---
0xaaf: JUMPDEST 
0xab0: V1015 = 0x0
0xab2: V1016 = S[0x0]
0xab3: V1017 = CALLER
0xab4: V1018 = 0x1
0xab6: V1019 = 0xa0
0xab8: V1020 = 0x2
0xaba: V1021 = EXP 0x2 0xa0
0xabb: V1022 = SUB 0x10000000000000000000000000000000000000000 0x1
0xabe: V1023 = AND 0xffffffffffffffffffffffffffffffffffffffff V1017
0xac0: V1024 = AND V1016 0xffffffffffffffffffffffffffffffffffffffff
0xac1: V1025 = EQ V1024 V1023
0xac2: V1026 = 0xaca
0xac5: JUMPI 0xaca V1025
---
Entry stack: [V12, 0x38c, V484]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V484]

================================

Block 0xac6
[0xac6:0xac9]
---
Predecessors: [0xaaf]
Successors: []
---
0xac6 PUSH1 0x0
0xac8 DUP1
0xac9 REVERT
---
0xac6: V1027 = 0x0
0xac9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, V484]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V484]

================================

Block 0xaca
[0xaca:0xad5]
---
Predecessors: [0xaaf]
Successors: [0xad6, 0xada]
---
0xaca JUMPDEST
0xacb PUSH1 0x20
0xacd PUSH1 0x24
0xacf CALLDATASIZE
0xad0 LT
0xad1 ISZERO
0xad2 PUSH2 0xada
0xad5 JUMPI
---
0xaca: JUMPDEST 
0xacb: V1028 = 0x20
0xacd: V1029 = 0x24
0xacf: V1030 = CALLDATASIZE
0xad0: V1031 = LT V1030 0x24
0xad1: V1032 = ISZERO V1031
0xad2: V1033 = 0xada
0xad5: JUMPI 0xada V1032
---
Entry stack: [V12, 0x38c, V484]
Stack pops: 0
Stack additions: [0x20]
Exit stack: [V12, 0x38c, V484, 0x20]

================================

Block 0xad6
[0xad6:0xad9]
---
Predecessors: [0xaca]
Successors: []
---
0xad6 PUSH1 0x0
0xad8 DUP1
0xad9 REVERT
---
0xad6: V1034 = 0x0
0xad9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38c, V484, 0x20]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38c, V484, 0x20]

================================

Block 0xada
[0xada:0xb09]
---
Predecessors: [0xaca]
Successors: [0x38c]
---
0xada JUMPDEST
0xadb POP
0xadc PUSH1 0x0
0xade DUP1
0xadf SLOAD
0xae0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf5 NOT
0xaf6 AND
0xaf7 PUSH1 0x1
0xaf9 PUSH1 0xa0
0xafb PUSH1 0x2
0xafd EXP
0xafe SUB
0xaff SWAP3
0xb00 SWAP1
0xb01 SWAP3
0xb02 AND
0xb03 SWAP2
0xb04 SWAP1
0xb05 SWAP2
0xb06 OR
0xb07 SWAP1
0xb08 SSTORE
0xb09 JUMP
---
0xada: JUMPDEST 
0xadc: V1035 = 0x0
0xadf: V1036 = S[0x0]
0xae0: V1037 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf5: V1038 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xaf6: V1039 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1036
0xaf7: V1040 = 0x1
0xaf9: V1041 = 0xa0
0xafb: V1042 = 0x2
0xafd: V1043 = EXP 0x2 0xa0
0xafe: V1044 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb02: V1045 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0xb06: V1046 = OR V1045 V1039
0xb08: S[0x0] = V1046
0xb09: JUMP 0x38c
---
Entry stack: [V12, 0x38c, V484, 0x20]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0xb0a
[0xb0a:0xb0f]
---
Predecessors: [0x54f]
Successors: [0x2fb]
---
0xb0a JUMPDEST
0xb0b PUSH1 0x4
0xb0d SLOAD
0xb0e DUP2
0xb0f JUMP
---
0xb0a: JUMPDEST 
0xb0b: V1047 = 0x4
0xb0d: V1048 = S[0x4]
0xb0f: JUMP 0x2fb
---
Entry stack: [V12, 0x2fb]
Stack pops: 1
Stack additions: [S0, V1048]
Exit stack: [V12, 0x2fb, V1048]

================================

Block 0xb10
[0xb10:0xb1a]
---
Predecessors: [0x5b8, 0x5ef]
Successors: [0xb1b, 0xb1c]
---
0xb10 JUMPDEST
0xb11 PUSH1 0x0
0xb13 DUP3
0xb14 DUP3
0xb15 GT
0xb16 ISZERO
0xb17 PUSH2 0xb1c
0xb1a JUMPI
---
0xb10: JUMPDEST 
0xb11: V1049 = 0x0
0xb15: V1050 = GT S0 S1
0xb16: V1051 = ISZERO V1050
0xb17: V1052 = 0xb1c
0xb1a: JUMPI 0xb1c V1051
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S6, S5, S4, S3, {0x5ef, 0x601}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S6, S5, S4, S3, {0x5ef, 0x601}, S1, S0, 0x0]

================================

Block 0xb1b
[0xb1b:0xb1b]
---
Predecessors: [0xb10]
Successors: []
---
0xb1b INVALID
---
0xb1b: INVALID 
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S7, S6, S5, S4, {0x5ef, 0x601}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S7, S6, S5, S4, {0x5ef, 0x601}, S2, S1, 0x0]

================================

Block 0xb1c
[0xb1c:0xb21]
---
Predecessors: [0xb10]
Successors: [0x5ef, 0x601]
---
0xb1c JUMPDEST
0xb1d POP
0xb1e SWAP1
0xb1f SUB
0xb20 SWAP1
0xb21 JUMP
---
0xb1c: JUMPDEST 
0xb1f: V1053 = SUB S2 S1
0xb21: JUMP {0x5ef, 0x601}
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S7, S6, S5, S4, {0x5ef, 0x601}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1053]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x189, 0x0, S7, S6, S5, S4, V1053]

================================

Block 0xb22
[0xb22:0xb5d]
---
Predecessors: []
Successors: []
---
0xb22 STOP
0xb23 LOG1
0xb24 PUSH6 0x627a7a723058
0xb2b SHA3
0xb2c MISSING 0xc
0xb2d COINBASE
0xb2e LOG0
0xb2f SSTORE
0xb30 MISSING 0x2e
0xb31 EXTCODECOPY
0xb32 MISSING 0xcc
0xb33 MISSING 0x28
0xb34 AND
0xb35 LOG3
0xb36 PUSH7 0x1ec095cacd4cc8
0xb3e MISSING 0xba
0xb3f MISSING 0x26
0xb40 PUSH29 0x5b8c84c97729092215ec1c0029
---
0xb22: STOP 
0xb23: LOG S0 S1 S2
0xb24: V1054 = 0x627a7a723058
0xb2b: V1055 = SHA3 0x627a7a723058 S3
0xb2c: MISSING 0xc
0xb2d: V1056 = COINBASE
0xb2e: LOG V1056 S0
0xb2f: S[S1] = S2
0xb30: MISSING 0x2e
0xb31: EXTCODECOPY S0 S1 S2 S3
0xb32: MISSING 0xcc
0xb33: MISSING 0x28
0xb34: V1057 = AND S0 S1
0xb35: LOG V1057 S2 S3 S4 S5
0xb36: V1058 = 0x1ec095cacd4cc8
0xb3e: MISSING 0xba
0xb3f: MISSING 0x26
0xb40: V1059 = 0x5b8c84c97729092215ec1c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1055, 0x1ec095cacd4cc8, 0x5b8c84c97729092215ec1c0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xef504ae
Entry block: 0x2c1
Exit block: 0x2d4
Body: 0x2c1, 0x2c8, 0x2cc, 0x2d4, 0x653

Function 1:
Public function signature: 0x1c42959c
Entry block: 0x2e8
Exit block: 0x2fb
Body: 0x2e8, 0x2ef, 0x2f3, 0x2fb, 0x65c

Function 2:
Public function signature: 0x27e235e3
Entry block: 0x30d
Exit block: 0x32c
Body: 0x30d, 0x314, 0x318, 0x32c, 0x662

Function 3:
Public function signature: 0x3197cbb6
Entry block: 0x344
Exit block: 0x2fb
Body: 0x2fb, 0x344, 0x34b, 0x34f, 0x67b

Function 4:
Public function signature: 0x4042b66f
Entry block: 0x357
Exit block: 0x2fb
Body: 0x2fb, 0x357, 0x35e, 0x362, 0x681

Function 5:
Public function signature: 0x47d3def9
Entry block: 0x36a
Exit block: 0x95f
Body: 0x36a, 0x371, 0x375, 0x38c, 0x687, 0x69e, 0x6a2, 0x6ae, 0x6b2, 0x84a, 0x948, 0x952, 0x95f, 0x960, 0x972

Function 6:
Public function signature: 0x4b8feb4f
Entry block: 0x38e
Exit block: 0x3a1
Body: 0x38e, 0x395, 0x399, 0x3a1, 0x707

Function 7:
Public function signature: 0x519ee19e
Entry block: 0x3bd
Exit block: 0x2fb
Body: 0x2fb, 0x3bd, 0x3c4, 0x3c8, 0x716

Function 8:
Public function signature: 0x61e360b7
Entry block: 0x3d0
Exit block: 0x2fb
Body: 0x2fb, 0x3d0, 0x3d7, 0x3db, 0x71c

Function 9:
Public function signature: 0x6e5b064c
Entry block: 0x3e3
Exit block: 0x2fb
Body: 0x2fb, 0x3e3, 0x3ea, 0x3ee, 0x722

Function 10:
Public function signature: 0x78e97925
Entry block: 0x3f6
Exit block: 0x2fb
Body: 0x2fb, 0x3f6, 0x3fd, 0x401, 0x728

Function 11:
Public function signature: 0x79710f07
Entry block: 0x409
Exit block: 0x38c
Body: 0x38c, 0x409, 0x410, 0x414, 0x72e, 0x745, 0x749, 0x755, 0x759, 0x7b9, 0x7bd, 0x7ca, 0x7ce, 0x820, 0x824, 0x831, 0x835, 0x846, 0x84a

Function 12:
Public function signature: 0x8da5cb5b
Entry block: 0x428
Exit block: 0x3a1
Body: 0x3a1, 0x428, 0x42f, 0x433, 0x84e

Function 13:
Public function signature: 0x9890220b
Entry block: 0x43b
Exit block: 0x38c
Body: 0x38c, 0x43b, 0x442, 0x446, 0x85d, 0x875, 0x879, 0x888, 0x893, 0x89c, 0x8a3, 0x8a7, 0x8dc, 0x8e0

Function 14:
Public function signature: 0x9b19251a
Entry block: 0x44e
Exit block: 0x2fb
Body: 0x2fb, 0x44e, 0x455, 0x459, 0x916

Function 15:
Public function signature: 0xa9aa47ee
Entry block: 0x46d
Exit block: 0x38c
Body: 0x38c, 0x46d, 0x474, 0x478, 0x687, 0x69e, 0x6a2, 0x6ae, 0x6b2, 0x84a, 0x928, 0x940, 0x944, 0x948, 0x952, 0x95f, 0x960, 0x972

Function 16:
Public function signature: 0xb628672b
Entry block: 0x4bc
Exit block: 0x38c
Body: 0x38c, 0x4bc, 0x4c3, 0x4c7, 0x97a, 0x991, 0x995

Function 17:
Public function signature: 0xb6549f75
Entry block: 0x4d4
Exit block: 0x38c
Body: 0x38c, 0x4d4, 0x4db, 0x4df, 0x9a8, 0x9b8, 0x9be, 0x9c5, 0x9c9, 0x9ee, 0x9ef, 0xa32, 0xa36

Function 18:
Public function signature: 0xdc2b32e6
Entry block: 0x4e7
Exit block: 0x2fb
Body: 0x2fb, 0x4e7, 0x4ee, 0x4f2, 0xa76

Function 19:
Public function signature: 0xe6ae1a97
Entry block: 0x506
Exit block: 0x2fb
Body: 0x2fb, 0x506, 0x50d, 0x511, 0xa94

Function 20:
Public function signature: 0xf2fde38b
Entry block: 0x525
Exit block: 0x38c
Body: 0x38c, 0x525, 0x52c, 0x530, 0xaaf, 0xac6, 0xaca, 0xad6, 0xada

Function 21:
Public function signature: 0xf381f2a5
Entry block: 0x544
Exit block: 0x2fb
Body: 0x2fb, 0x544, 0x54b, 0x54f, 0xb0a

Function 22:
Public fallback function
Entry block: 0x10c
Exit block: 0x626
Body: 0x10c, 0x11e, 0x125, 0x12c, 0x134, 0x13b, 0x13f, 0x14b, 0x14f, 0x17d, 0x181, 0x189, 0x557, 0x58b, 0x5ae, 0x5b8, 0x5ef, 0x604, 0x60e, 0x61b, 0x626, 0x627

Function 23:
Private function
Entry block: 0x639
Exit block: 0x632
Body: 0x1a2, 0x1ce, 0x62a, 0x632, 0x639, 0x649

Function 24:
Private function
Entry block: 0xb10
Exit block: 0xb1c
Body: 0xb10, 0xb1c

