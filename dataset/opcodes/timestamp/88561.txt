Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa9
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa9
0xa: JUMPI 0xa9 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x1fb]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x10700d90
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x1fb
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x10700d90
0x20: V14 = EQ V12 0x10700d90
0x21: V15 = 0x1fb
0x24: JUMPI 0x1fb V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x220]
---
0x25 DUP1
0x26 PUSH4 0x29dc7205
0x2b EQ
0x2c PUSH2 0x220
0x2f JUMPI
---
0x26: V16 = 0x29dc7205
0x2b: V17 = EQ 0x29dc7205 V12
0x2c: V18 = 0x220
0x2f: JUMPI 0x220 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x245]
---
0x30 DUP1
0x31 PUSH4 0x29dcb0cf
0x36 EQ
0x37 PUSH2 0x245
0x3a JUMPI
---
0x31: V19 = 0x29dcb0cf
0x36: V20 = EQ 0x29dcb0cf V12
0x37: V21 = 0x245
0x3a: JUMPI 0x245 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x26a]
---
0x3b DUP1
0x3c PUSH4 0x6b4a6ded
0x41 EQ
0x42 PUSH2 0x26a
0x45 JUMPI
---
0x3c: V22 = 0x6b4a6ded
0x41: V23 = EQ 0x6b4a6ded V12
0x42: V24 = 0x26a
0x45: JUMPI 0x26a V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x28f]
---
0x46 DUP1
0x47 PUSH4 0x6dbc4582
0x4c EQ
0x4d PUSH2 0x28f
0x50 JUMPI
---
0x47: V25 = 0x6dbc4582
0x4c: V26 = EQ 0x6dbc4582 V12
0x4d: V27 = 0x28f
0x50: JUMPI 0x28f V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x2b4]
---
0x51 DUP1
0x52 PUSH4 0x755e3e28
0x57 EQ
0x58 PUSH2 0x2b4
0x5b JUMPI
---
0x52: V28 = 0x755e3e28
0x57: V29 = EQ 0x755e3e28 V12
0x58: V30 = 0x2b4
0x5b: JUMPI 0x2b4 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x2d9]
---
0x5c DUP1
0x5d PUSH4 0x76d5235c
0x62 EQ
0x63 PUSH2 0x2d9
0x66 JUMPI
---
0x5d: V31 = 0x76d5235c
0x62: V32 = EQ 0x76d5235c V12
0x63: V33 = 0x2d9
0x66: JUMPI 0x2d9 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x30c]
---
0x67 DUP1
0x68 PUSH4 0x8da5cb5b
0x6d EQ
0x6e PUSH2 0x30c
0x71 JUMPI
---
0x68: V34 = 0x8da5cb5b
0x6d: V35 = EQ 0x8da5cb5b V12
0x6e: V36 = 0x30c
0x71: JUMPI 0x30c V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x33b]
---
0x72 DUP1
0x73 PUSH4 0x9b19251a
0x78 EQ
0x79 PUSH2 0x33b
0x7c JUMPI
---
0x73: V37 = 0x9b19251a
0x78: V38 = EQ 0x9b19251a V12
0x79: V39 = 0x33b
0x7c: JUMPI 0x33b V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x36e]
---
0x7d DUP1
0x7e PUSH4 0xa6f9dae1
0x83 EQ
0x84 PUSH2 0x36e
0x87 JUMPI
---
0x7e: V40 = 0xa6f9dae1
0x83: V41 = EQ 0xa6f9dae1 V12
0x84: V42 = 0x36e
0x87: JUMPI 0x36e V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x38f]
---
0x88 DUP1
0x89 PUSH4 0xd56b2889
0x8e EQ
0x8f PUSH2 0x38f
0x92 JUMPI
---
0x89: V43 = 0xd56b2889
0x8e: V44 = EQ 0xd56b2889 V12
0x8f: V45 = 0x38f
0x92: JUMPI 0x38f V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x3a4]
---
0x93 DUP1
0x94 PUSH4 0xf0ea4bfc
0x99 EQ
0x9a PUSH2 0x3a4
0x9d JUMPI
---
0x94: V46 = 0xf0ea4bfc
0x99: V47 = EQ 0xf0ea4bfc V12
0x9a: V48 = 0x3a4
0x9d: JUMPI 0x3a4 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x3c9]
---
0x9e DUP1
0x9f PUSH4 0xfc0c546a
0xa4 EQ
0xa5 PUSH2 0x3c9
0xa8 JUMPI
---
0x9f: V49 = 0xfc0c546a
0xa4: V50 = EQ 0xfc0c546a V12
0xa5: V51 = 0x3c9
0xa8: JUMPI 0x3c9 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xa9]
---
Predecessors: [0x0, 0x9e]
Successors: [0xaa]
---
0xa9 JUMPDEST
---
0xa9: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xaa
[0xaa:0xba]
---
Predecessors: [0xa9]
Successors: [0xbb, 0xcc]
---
0xaa JUMPDEST
0xab PUSH1 0x0
0xad DUP1
0xae PUSH1 0x0
0xb0 PUSH1 0x4
0xb2 SLOAD
0xb3 TIMESTAMP
0xb4 LT
0xb5 DUP1
0xb6 ISZERO
0xb7 PUSH2 0xcc
0xba JUMPI
---
0xaa: JUMPDEST 
0xab: V52 = 0x0
0xae: V53 = 0x0
0xb0: V54 = 0x4
0xb2: V55 = S[0x4]
0xb3: V56 = TIMESTAMP
0xb4: V57 = LT V56 V55
0xb6: V58 = ISZERO V57
0xb7: V59 = 0xcc
0xba: JUMPI 0xcc V58
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V57]
Exit stack: [V12, 0x0, 0x0, 0x0, V57]

================================

Block 0xbb
[0xbb:0xcb]
---
Predecessors: [0xaa]
Successors: [0xcc]
---
0xbb POP
0xbc PUSH11 0x18d0bf423c03d8de000000
0xc8 PUSH1 0x2
0xca SLOAD
0xcb LT
---
0xbc: V60 = 0x18d0bf423c03d8de000000
0xc8: V61 = 0x2
0xca: V62 = S[0x2]
0xcb: V63 = LT V62 0x18d0bf423c03d8de000000
---
Entry stack: [V12, 0x0, 0x0, 0x0, V57]
Stack pops: 1
Stack additions: [V63]
Exit stack: [V12, 0x0, 0x0, 0x0, V63]

================================

Block 0xcc
[0xcc:0xd2]
---
Predecessors: [0xaa, 0xbb]
Successors: [0xd3, 0xd7]
---
0xcc JUMPDEST
0xcd ISZERO
0xce ISZERO
0xcf PUSH2 0xd7
0xd2 JUMPI
---
0xcc: JUMPDEST 
0xcd: V64 = ISZERO S0
0xce: V65 = ISZERO V64
0xcf: V66 = 0xd7
0xd2: JUMPI 0xd7 V65
---
Entry stack: [V12, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xd3
[0xd3:0xd6]
---
Predecessors: [0xcc]
Successors: []
---
0xd3 PUSH1 0x0
0xd5 DUP1
0xd6 REVERT
---
0xd3: V67 = 0x0
0xd6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0]

================================

Block 0xd7
[0xd7:0xfa]
---
Predecessors: [0xcc]
Successors: [0xfb, 0xff]
---
0xd7 JUMPDEST
0xd8 CALLER
0xd9 PUSH1 0x1
0xdb PUSH1 0xa0
0xdd PUSH1 0x2
0xdf EXP
0xe0 SUB
0xe1 DUP2
0xe2 AND
0xe3 PUSH1 0x0
0xe5 SWAP1
0xe6 DUP2
0xe7 MSTORE
0xe8 PUSH1 0x7
0xea PUSH1 0x20
0xec MSTORE
0xed PUSH1 0x40
0xef SWAP1
0xf0 SHA3
0xf1 SLOAD
0xf2 PUSH1 0xff
0xf4 AND
0xf5 ISZERO
0xf6 ISZERO
0xf7 PUSH2 0xff
0xfa JUMPI
---
0xd7: JUMPDEST 
0xd8: V68 = CALLER
0xd9: V69 = 0x1
0xdb: V70 = 0xa0
0xdd: V71 = 0x2
0xdf: V72 = EXP 0x2 0xa0
0xe0: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2: V74 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0xe3: V75 = 0x0
0xe7: M[0x0] = V74
0xe8: V76 = 0x7
0xea: V77 = 0x20
0xec: M[0x20] = 0x7
0xed: V78 = 0x40
0xf0: V79 = SHA3 0x0 0x40
0xf1: V80 = S[V79]
0xf2: V81 = 0xff
0xf4: V82 = AND 0xff V80
0xf5: V83 = ISZERO V82
0xf6: V84 = ISZERO V83
0xf7: V85 = 0xff
0xfa: JUMPI 0xff V84
---
Entry stack: [V12, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V68]
Exit stack: [V12, 0x0, 0x0, 0x0, V68]

================================

Block 0xfb
[0xfb:0xfe]
---
Predecessors: [0xd7]
Successors: []
---
0xfb PUSH1 0x0
0xfd DUP1
0xfe REVERT
---
0xfb: V86 = 0x0
0xfe: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V68]

================================

Block 0xff
[0xff:0x10a]
---
Predecessors: [0xd7]
Successors: [0x3f8]
---
0xff JUMPDEST
0x100 PUSH2 0x10b
0x103 CALLVALUE
0x104 PUSH2 0x7530
0x107 PUSH2 0x3f8
0x10a JUMP
---
0xff: JUMPDEST 
0x100: V87 = 0x10b
0x103: V88 = CALLVALUE
0x104: V89 = 0x7530
0x107: V90 = 0x3f8
0x10a: JUMP 0x3f8
---
Entry stack: [V12, 0x0, 0x0, 0x0, V68]
Stack pops: 0
Stack additions: [0x10b, V88, 0x7530]
Exit stack: [V12, 0x0, 0x0, 0x0, V68, 0x10b, V88, 0x7530]

================================

Block 0x10b
[0x10b:0x12e]
---
Predecessors: [0x420]
Successors: [0x12f, 0x136]
---
0x10b JUMPDEST
0x10c PUSH1 0x1
0x10e PUSH1 0xa0
0x110 PUSH1 0x2
0x112 EXP
0x113 SUB
0x114 CALLER
0x115 AND
0x116 PUSH1 0x0
0x118 SWAP1
0x119 DUP2
0x11a MSTORE
0x11b PUSH1 0x6
0x11d PUSH1 0x20
0x11f MSTORE
0x120 PUSH1 0x40
0x122 SWAP1
0x123 SHA3
0x124 SLOAD
0x125 SWAP1
0x126 SWAP5
0x127 POP
0x128 PUSH1 0xff
0x12a AND
0x12b PUSH2 0x136
0x12e JUMPI
---
0x10b: JUMPDEST 
0x10c: V91 = 0x1
0x10e: V92 = 0xa0
0x110: V93 = 0x2
0x112: V94 = EXP 0x2 0xa0
0x113: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x114: V96 = CALLER
0x115: V97 = AND V96 0xffffffffffffffffffffffffffffffffffffffff
0x116: V98 = 0x0
0x11a: M[0x0] = V97
0x11b: V99 = 0x6
0x11d: V100 = 0x20
0x11f: M[0x20] = 0x6
0x120: V101 = 0x40
0x123: V102 = SHA3 0x0 0x40
0x124: V103 = S[V102]
0x128: V104 = 0xff
0x12a: V105 = AND 0xff V103
0x12b: V106 = 0x136
0x12e: JUMPI 0x136 V105
---
Entry stack: [V12, S4, S3, 0x0, V68, S0]
Stack pops: 5
Stack additions: [S0, S3, S2, S1]
Exit stack: [V12, S0, S3, 0x0, V68]

================================

Block 0x12f
[0x12f:0x135]
---
Predecessors: [0x10b]
Successors: [0x139]
---
0x12f PUSH1 0x5
0x131 SLOAD
0x132 PUSH2 0x139
0x135 JUMP
---
0x12f: V107 = 0x5
0x131: V108 = S[0x5]
0x132: V109 = 0x139
0x135: JUMP 0x139
---
Entry stack: [V12, S3, S2, 0x0, V68]
Stack pops: 0
Stack additions: [V108]
Exit stack: [V12, S3, S2, 0x0, V68, V108]

================================

Block 0x136
[0x136:0x138]
---
Predecessors: [0x10b]
Successors: [0x139]
---
0x136 JUMPDEST
0x137 PUSH1 0x0
---
0x136: JUMPDEST 
0x137: V110 = 0x0
---
Entry stack: [V12, S3, S2, 0x0, V68]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, S3, S2, 0x0, V68, 0x0]

================================

Block 0x139
[0x139:0x144]
---
Predecessors: [0x12f, 0x136]
Successors: [0x427]
---
0x139 JUMPDEST
0x13a SWAP3
0x13b POP
0x13c PUSH2 0x145
0x13f DUP4
0x140 DUP6
0x141 PUSH2 0x427
0x144 JUMP
---
0x139: JUMPDEST 
0x13c: V111 = 0x145
0x141: V112 = 0x427
0x144: JUMP 0x427
---
Entry stack: [V12, S4, S3, 0x0, V68, S0]
Stack pops: 5
Stack additions: [S4, S0, S2, S1, 0x145, S0, S4]
Exit stack: [V12, S4, S0, 0x0, V68, 0x145, S0, S4]

================================

Block 0x145
[0x145:0x1ca]
---
Predecessors: [0x420]
Successors: [0x1cb, 0x1cf]
---
0x145 JUMPDEST
0x146 PUSH1 0x1
0x148 PUSH1 0xa0
0x14a PUSH1 0x2
0x14c EXP
0x14d SUB
0x14e CALLER
0x14f DUP2
0x150 DUP2
0x151 AND
0x152 PUSH1 0x0
0x154 SWAP1
0x155 DUP2
0x156 MSTORE
0x157 PUSH1 0x6
0x159 PUSH1 0x20
0x15b MSTORE
0x15c PUSH1 0x40
0x15e DUP1
0x15f DUP3
0x160 SHA3
0x161 DUP1
0x162 SLOAD
0x163 PUSH1 0xff
0x165 NOT
0x166 AND
0x167 PUSH1 0x1
0x169 SWAP1
0x16a DUP2
0x16b OR
0x16c SWAP1
0x16d SWAP2
0x16e SSTORE
0x16f PUSH1 0x2
0x171 DUP1
0x172 SLOAD
0x173 DUP8
0x174 ADD
0x175 SWAP1
0x176 SSTORE
0x177 SLOAD
0x178 SWAP5
0x179 SWAP7
0x17a POP
0x17b SWAP4
0x17c SWAP1
0x17d SWAP3
0x17e AND
0x17f SWAP3
0x180 PUSH4 0xa9059cbb
0x185 SWAP3
0x186 DUP7
0x187 SWAP2
0x188 MLOAD
0x189 PUSH1 0x20
0x18b ADD
0x18c MSTORE
0x18d PUSH1 0x40
0x18f MLOAD
0x190 PUSH1 0xe0
0x192 PUSH1 0x2
0x194 EXP
0x195 PUSH4 0xffffffff
0x19a DUP6
0x19b AND
0x19c MUL
0x19d DUP2
0x19e MSTORE
0x19f PUSH1 0x1
0x1a1 PUSH1 0xa0
0x1a3 PUSH1 0x2
0x1a5 EXP
0x1a6 SUB
0x1a7 SWAP1
0x1a8 SWAP3
0x1a9 AND
0x1aa PUSH1 0x4
0x1ac DUP4
0x1ad ADD
0x1ae MSTORE
0x1af PUSH1 0x24
0x1b1 DUP3
0x1b2 ADD
0x1b3 MSTORE
0x1b4 PUSH1 0x44
0x1b6 ADD
0x1b7 PUSH1 0x20
0x1b9 PUSH1 0x40
0x1bb MLOAD
0x1bc DUP1
0x1bd DUP4
0x1be SUB
0x1bf DUP2
0x1c0 PUSH1 0x0
0x1c2 DUP8
0x1c3 DUP1
0x1c4 EXTCODESIZE
0x1c5 ISZERO
0x1c6 ISZERO
0x1c7 PUSH2 0x1cf
0x1ca JUMPI
---
0x145: JUMPDEST 
0x146: V113 = 0x1
0x148: V114 = 0xa0
0x14a: V115 = 0x2
0x14c: V116 = EXP 0x2 0xa0
0x14d: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14e: V118 = CALLER
0x151: V119 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x152: V120 = 0x0
0x156: M[0x0] = V119
0x157: V121 = 0x6
0x159: V122 = 0x20
0x15b: M[0x20] = 0x6
0x15c: V123 = 0x40
0x160: V124 = SHA3 0x0 0x40
0x162: V125 = S[V124]
0x163: V126 = 0xff
0x165: V127 = NOT 0xff
0x166: V128 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V125
0x167: V129 = 0x1
0x16b: V130 = OR 0x1 V128
0x16e: S[V124] = V130
0x16f: V131 = 0x2
0x172: V132 = S[0x2]
0x174: V133 = ADD S0 V132
0x176: S[0x2] = V133
0x177: V134 = S[0x1]
0x17e: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x180: V136 = 0xa9059cbb
0x188: V137 = M[0x40]
0x189: V138 = 0x20
0x18b: V139 = ADD 0x20 V137
0x18c: M[V139] = 0x0
0x18d: V140 = 0x40
0x18f: V141 = M[0x40]
0x190: V142 = 0xe0
0x192: V143 = 0x2
0x194: V144 = EXP 0x2 0xe0
0x195: V145 = 0xffffffff
0x19b: V146 = AND 0xa9059cbb 0xffffffff
0x19c: V147 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x19e: M[V141] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x19f: V148 = 0x1
0x1a1: V149 = 0xa0
0x1a3: V150 = 0x2
0x1a5: V151 = EXP 0x2 0xa0
0x1a6: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a9: V153 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V154 = 0x4
0x1ad: V155 = ADD V141 0x4
0x1ae: M[V155] = V153
0x1af: V156 = 0x24
0x1b2: V157 = ADD V141 0x24
0x1b3: M[V157] = S0
0x1b4: V158 = 0x44
0x1b6: V159 = ADD 0x44 V141
0x1b7: V160 = 0x20
0x1b9: V161 = 0x40
0x1bb: V162 = M[0x40]
0x1be: V163 = SUB V159 V162
0x1c0: V164 = 0x0
0x1c4: V165 = EXTCODESIZE V135
0x1c5: V166 = ISZERO V165
0x1c6: V167 = ISZERO V166
0x1c7: V168 = 0x1cf
0x1ca: JUMPI 0x1cf V167
---
Entry stack: [V12, S4, S3, 0x0, V68, S0]
Stack pops: 3
Stack additions: [S0, S1, V135, 0xa9059cbb, V159, 0x20, V162, V163, V162, 0x0, V135]
Exit stack: [V12, S4, S3, S0, V68, V135, 0xa9059cbb, V159, 0x20, V162, V163, V162, 0x0, V135]

================================

Block 0x1cb
[0x1cb:0x1ce]
---
Predecessors: [0x145]
Successors: []
---
0x1cb PUSH1 0x0
0x1cd DUP1
0x1ce REVERT
---
0x1cb: V169 = 0x0
0x1ce: REVERT 0x0 0x0
---
Entry stack: [V12, S12, S11, S10, V68, V135, 0xa9059cbb, V159, 0x20, V162, V163, V162, 0x0, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S12, S11, S10, V68, V135, 0xa9059cbb, V159, 0x20, V162, V163, V162, 0x0, V135]

================================

Block 0x1cf
[0x1cf:0x1db]
---
Predecessors: [0x145]
Successors: [0x1dc, 0x1e0]
---
0x1cf JUMPDEST
0x1d0 PUSH2 0x2c6
0x1d3 GAS
0x1d4 SUB
0x1d5 CALL
0x1d6 ISZERO
0x1d7 ISZERO
0x1d8 PUSH2 0x1e0
0x1db JUMPI
---
0x1cf: JUMPDEST 
0x1d0: V170 = 0x2c6
0x1d3: V171 = GAS
0x1d4: V172 = SUB V171 0x2c6
0x1d5: V173 = CALL V172 V135 0x0 V162 V163 V162 0x20
0x1d6: V174 = ISZERO V173
0x1d7: V175 = ISZERO V174
0x1d8: V176 = 0x1e0
0x1db: JUMPI 0x1e0 V175
---
Entry stack: [V12, S12, S11, S10, V68, V135, 0xa9059cbb, V159, 0x20, V162, V163, V162, 0x0, V135]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S12, S11, S10, V68, V135, 0xa9059cbb, V159]

================================

Block 0x1dc
[0x1dc:0x1df]
---
Predecessors: [0x1cf]
Successors: []
---
0x1dc PUSH1 0x0
0x1de DUP1
0x1df REVERT
---
0x1dc: V177 = 0x0
0x1df: REVERT 0x0 0x0
---
Entry stack: [V12, S6, S5, S4, V68, V135, 0xa9059cbb, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, S5, S4, V68, V135, 0xa9059cbb, V159]

================================

Block 0x1e0
[0x1e0:0x1f0]
---
Predecessors: [0x1cf]
Successors: [0x1f1, 0x1f2]
---
0x1e0 JUMPDEST
0x1e1 POP
0x1e2 POP
0x1e3 POP
0x1e4 PUSH1 0x40
0x1e6 MLOAD
0x1e7 DUP1
0x1e8 MLOAD
0x1e9 SWAP1
0x1ea POP
0x1eb ISZERO
0x1ec ISZERO
0x1ed PUSH2 0x1f2
0x1f0 JUMPI
---
0x1e0: JUMPDEST 
0x1e4: V178 = 0x40
0x1e6: V179 = M[0x40]
0x1e8: V180 = M[V179]
0x1eb: V181 = ISZERO V180
0x1ec: V182 = ISZERO V181
0x1ed: V183 = 0x1f2
0x1f0: JUMPI 0x1f2 V182
---
Entry stack: [V12, S6, S5, S4, V68, V135, 0xa9059cbb, V159]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S6, S5, S4, V68]

================================

Block 0x1f1
[0x1f1:0x1f1]
---
Predecessors: [0x1e0]
Successors: []
---
0x1f1 INVALID
---
0x1f1: INVALID 
---
Entry stack: [V12, S3, S2, S1, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, S1, V68]

================================

Block 0x1f2
[0x1f2:0x1f2]
---
Predecessors: [0x1e0]
Successors: [0x1f3]
---
0x1f2 JUMPDEST
---
0x1f2: JUMPDEST 
---
Entry stack: [V12, S3, S2, S1, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, S1, V68]

================================

Block 0x1f3
[0x1f3:0x1f3]
---
Predecessors: [0x1f2]
Successors: [0x1f4]
---
0x1f3 JUMPDEST
---
0x1f3: JUMPDEST 
---
Entry stack: [V12, S3, S2, S1, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, S1, V68]

================================

Block 0x1f4
[0x1f4:0x1f5]
---
Predecessors: [0x1f3]
Successors: [0x1f6]
---
0x1f4 JUMPDEST
0x1f5 POP
---
0x1f4: JUMPDEST 
---
Entry stack: [V12, S3, S2, S1, V68]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S3, S2, S1]

================================

Block 0x1f6
[0x1f6:0x1fa]
---
Predecessors: [0x1f4]
Successors: []
---
0x1f6 JUMPDEST
0x1f7 POP
0x1f8 POP
0x1f9 POP
0x1fa STOP
---
0x1f6: JUMPDEST 
0x1fa: STOP 
---
Entry stack: [V12, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fb
[0x1fb:0x201]
---
Predecessors: [0xb]
Successors: [0x202, 0x206]
---
0x1fb JUMPDEST
0x1fc CALLVALUE
0x1fd ISZERO
0x1fe PUSH2 0x206
0x201 JUMPI
---
0x1fb: JUMPDEST 
0x1fc: V184 = CALLVALUE
0x1fd: V185 = ISZERO V184
0x1fe: V186 = 0x206
0x201: JUMPI 0x206 V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x202
[0x202:0x205]
---
Predecessors: [0x1fb]
Successors: []
---
0x202 PUSH1 0x0
0x204 DUP1
0x205 REVERT
---
0x202: V187 = 0x0
0x205: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x206
[0x206:0x20d]
---
Predecessors: [0x1fb]
Successors: [0x441]
---
0x206 JUMPDEST
0x207 PUSH2 0x20e
0x20a PUSH2 0x441
0x20d JUMP
---
0x206: JUMPDEST 
0x207: V188 = 0x20e
0x20a: V189 = 0x441
0x20d: JUMP 0x441
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x20e]
Exit stack: [V12, 0x20e]

================================

Block 0x20e
[0x20e:0x21f]
---
Predecessors: [0x441, 0x447, 0x456, 0x45c, 0x462, 0x470, 0x64f]
Successors: []
---
0x20e JUMPDEST
0x20f PUSH1 0x40
0x211 MLOAD
0x212 SWAP1
0x213 DUP2
0x214 MSTORE
0x215 PUSH1 0x20
0x217 ADD
0x218 PUSH1 0x40
0x21a MLOAD
0x21b DUP1
0x21c SWAP2
0x21d SUB
0x21e SWAP1
0x21f RETURN
---
0x20e: JUMPDEST 
0x20f: V190 = 0x40
0x211: V191 = M[0x40]
0x214: M[V191] = S0
0x215: V192 = 0x20
0x217: V193 = ADD 0x20 V191
0x218: V194 = 0x40
0x21a: V195 = M[0x40]
0x21d: V196 = SUB V193 V195
0x21f: RETURN V195 V196
---
Entry stack: [V12, 0x20e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x20e]

================================

Block 0x220
[0x220:0x226]
---
Predecessors: [0x25]
Successors: [0x227, 0x22b]
---
0x220 JUMPDEST
0x221 CALLVALUE
0x222 ISZERO
0x223 PUSH2 0x22b
0x226 JUMPI
---
0x220: JUMPDEST 
0x221: V197 = CALLVALUE
0x222: V198 = ISZERO V197
0x223: V199 = 0x22b
0x226: JUMPI 0x22b V198
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x227
[0x227:0x22a]
---
Predecessors: [0x220]
Successors: []
---
0x227 PUSH1 0x0
0x229 DUP1
0x22a REVERT
---
0x227: V200 = 0x0
0x22a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22b
[0x22b:0x232]
---
Predecessors: [0x220]
Successors: [0x447]
---
0x22b JUMPDEST
0x22c PUSH2 0x20e
0x22f PUSH2 0x447
0x232 JUMP
---
0x22b: JUMPDEST 
0x22c: V201 = 0x20e
0x22f: V202 = 0x447
0x232: JUMP 0x447
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x20e]
Exit stack: [V12, 0x20e]

================================

Block 0x233
[0x233:0x244]
---
Predecessors: []
Successors: []
---
0x233 JUMPDEST
0x234 PUSH1 0x40
0x236 MLOAD
0x237 SWAP1
0x238 DUP2
0x239 MSTORE
0x23a PUSH1 0x20
0x23c ADD
0x23d PUSH1 0x40
0x23f MLOAD
0x240 DUP1
0x241 SWAP2
0x242 SUB
0x243 SWAP1
0x244 RETURN
---
0x233: JUMPDEST 
0x234: V203 = 0x40
0x236: V204 = M[0x40]
0x239: M[V204] = S0
0x23a: V205 = 0x20
0x23c: V206 = ADD 0x20 V204
0x23d: V207 = 0x40
0x23f: V208 = M[0x40]
0x242: V209 = SUB V206 V208
0x244: RETURN V208 V209
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x245
[0x245:0x24b]
---
Predecessors: [0x30]
Successors: [0x24c, 0x250]
---
0x245 JUMPDEST
0x246 CALLVALUE
0x247 ISZERO
0x248 PUSH2 0x250
0x24b JUMPI
---
0x245: JUMPDEST 
0x246: V210 = CALLVALUE
0x247: V211 = ISZERO V210
0x248: V212 = 0x250
0x24b: JUMPI 0x250 V211
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24c
[0x24c:0x24f]
---
Predecessors: [0x245]
Successors: []
---
0x24c PUSH1 0x0
0x24e DUP1
0x24f REVERT
---
0x24c: V213 = 0x0
0x24f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x250
[0x250:0x257]
---
Predecessors: [0x245]
Successors: [0x456]
---
0x250 JUMPDEST
0x251 PUSH2 0x20e
0x254 PUSH2 0x456
0x257 JUMP
---
0x250: JUMPDEST 
0x251: V214 = 0x20e
0x254: V215 = 0x456
0x257: JUMP 0x456
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x20e]
Exit stack: [V12, 0x20e]

================================

Block 0x258
[0x258:0x269]
---
Predecessors: []
Successors: []
---
0x258 JUMPDEST
0x259 PUSH1 0x40
0x25b MLOAD
0x25c SWAP1
0x25d DUP2
0x25e MSTORE
0x25f PUSH1 0x20
0x261 ADD
0x262 PUSH1 0x40
0x264 MLOAD
0x265 DUP1
0x266 SWAP2
0x267 SUB
0x268 SWAP1
0x269 RETURN
---
0x258: JUMPDEST 
0x259: V216 = 0x40
0x25b: V217 = M[0x40]
0x25e: M[V217] = S0
0x25f: V218 = 0x20
0x261: V219 = ADD 0x20 V217
0x262: V220 = 0x40
0x264: V221 = M[0x40]
0x267: V222 = SUB V219 V221
0x269: RETURN V221 V222
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x26a
[0x26a:0x270]
---
Predecessors: [0x3b]
Successors: [0x271, 0x275]
---
0x26a JUMPDEST
0x26b CALLVALUE
0x26c ISZERO
0x26d PUSH2 0x275
0x270 JUMPI
---
0x26a: JUMPDEST 
0x26b: V223 = CALLVALUE
0x26c: V224 = ISZERO V223
0x26d: V225 = 0x275
0x270: JUMPI 0x275 V224
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x271
[0x271:0x274]
---
Predecessors: [0x26a]
Successors: []
---
0x271 PUSH1 0x0
0x273 DUP1
0x274 REVERT
---
0x271: V226 = 0x0
0x274: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x275
[0x275:0x27c]
---
Predecessors: [0x26a]
Successors: [0x45c]
---
0x275 JUMPDEST
0x276 PUSH2 0x20e
0x279 PUSH2 0x45c
0x27c JUMP
---
0x275: JUMPDEST 
0x276: V227 = 0x20e
0x279: V228 = 0x45c
0x27c: JUMP 0x45c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x20e]
Exit stack: [V12, 0x20e]

================================

Block 0x27d
[0x27d:0x28e]
---
Predecessors: []
Successors: []
---
0x27d JUMPDEST
0x27e PUSH1 0x40
0x280 MLOAD
0x281 SWAP1
0x282 DUP2
0x283 MSTORE
0x284 PUSH1 0x20
0x286 ADD
0x287 PUSH1 0x40
0x289 MLOAD
0x28a DUP1
0x28b SWAP2
0x28c SUB
0x28d SWAP1
0x28e RETURN
---
0x27d: JUMPDEST 
0x27e: V229 = 0x40
0x280: V230 = M[0x40]
0x283: M[V230] = S0
0x284: V231 = 0x20
0x286: V232 = ADD 0x20 V230
0x287: V233 = 0x40
0x289: V234 = M[0x40]
0x28c: V235 = SUB V232 V234
0x28e: RETURN V234 V235
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x28f
[0x28f:0x295]
---
Predecessors: [0x46]
Successors: [0x296, 0x29a]
---
0x28f JUMPDEST
0x290 CALLVALUE
0x291 ISZERO
0x292 PUSH2 0x29a
0x295 JUMPI
---
0x28f: JUMPDEST 
0x290: V236 = CALLVALUE
0x291: V237 = ISZERO V236
0x292: V238 = 0x29a
0x295: JUMPI 0x29a V237
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x296
[0x296:0x299]
---
Predecessors: [0x28f]
Successors: []
---
0x296 PUSH1 0x0
0x298 DUP1
0x299 REVERT
---
0x296: V239 = 0x0
0x299: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29a
[0x29a:0x2a1]
---
Predecessors: [0x28f]
Successors: [0x462]
---
0x29a JUMPDEST
0x29b PUSH2 0x20e
0x29e PUSH2 0x462
0x2a1 JUMP
---
0x29a: JUMPDEST 
0x29b: V240 = 0x20e
0x29e: V241 = 0x462
0x2a1: JUMP 0x462
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x20e]
Exit stack: [V12, 0x20e]

================================

Block 0x2a2
[0x2a2:0x2b3]
---
Predecessors: []
Successors: []
---
0x2a2 JUMPDEST
0x2a3 PUSH1 0x40
0x2a5 MLOAD
0x2a6 SWAP1
0x2a7 DUP2
0x2a8 MSTORE
0x2a9 PUSH1 0x20
0x2ab ADD
0x2ac PUSH1 0x40
0x2ae MLOAD
0x2af DUP1
0x2b0 SWAP2
0x2b1 SUB
0x2b2 SWAP1
0x2b3 RETURN
---
0x2a2: JUMPDEST 
0x2a3: V242 = 0x40
0x2a5: V243 = M[0x40]
0x2a8: M[V243] = S0
0x2a9: V244 = 0x20
0x2ab: V245 = ADD 0x20 V243
0x2ac: V246 = 0x40
0x2ae: V247 = M[0x40]
0x2b1: V248 = SUB V245 V247
0x2b3: RETURN V247 V248
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b4
[0x2b4:0x2ba]
---
Predecessors: [0x51]
Successors: [0x2bb, 0x2bf]
---
0x2b4 JUMPDEST
0x2b5 CALLVALUE
0x2b6 ISZERO
0x2b7 PUSH2 0x2bf
0x2ba JUMPI
---
0x2b4: JUMPDEST 
0x2b5: V249 = CALLVALUE
0x2b6: V250 = ISZERO V249
0x2b7: V251 = 0x2bf
0x2ba: JUMPI 0x2bf V250
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bb
[0x2bb:0x2be]
---
Predecessors: [0x2b4]
Successors: []
---
0x2bb PUSH1 0x0
0x2bd DUP1
0x2be REVERT
---
0x2bb: V252 = 0x0
0x2be: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bf
[0x2bf:0x2c6]
---
Predecessors: [0x2b4]
Successors: [0x470]
---
0x2bf JUMPDEST
0x2c0 PUSH2 0x20e
0x2c3 PUSH2 0x470
0x2c6 JUMP
---
0x2bf: JUMPDEST 
0x2c0: V253 = 0x20e
0x2c3: V254 = 0x470
0x2c6: JUMP 0x470
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x20e]
Exit stack: [V12, 0x20e]

================================

Block 0x2c7
[0x2c7:0x2d8]
---
Predecessors: []
Successors: []
---
0x2c7 JUMPDEST
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb SWAP1
0x2cc DUP2
0x2cd MSTORE
0x2ce PUSH1 0x20
0x2d0 ADD
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 DUP1
0x2d5 SWAP2
0x2d6 SUB
0x2d7 SWAP1
0x2d8 RETURN
---
0x2c7: JUMPDEST 
0x2c8: V255 = 0x40
0x2ca: V256 = M[0x40]
0x2cd: M[V256] = S0
0x2ce: V257 = 0x20
0x2d0: V258 = ADD 0x20 V256
0x2d1: V259 = 0x40
0x2d3: V260 = M[0x40]
0x2d6: V261 = SUB V258 V260
0x2d8: RETURN V260 V261
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d9
[0x2d9:0x2df]
---
Predecessors: [0x5c]
Successors: [0x2e0, 0x2e4]
---
0x2d9 JUMPDEST
0x2da CALLVALUE
0x2db ISZERO
0x2dc PUSH2 0x2e4
0x2df JUMPI
---
0x2d9: JUMPDEST 
0x2da: V262 = CALLVALUE
0x2db: V263 = ISZERO V262
0x2dc: V264 = 0x2e4
0x2df: JUMPI 0x2e4 V263
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e0
[0x2e0:0x2e3]
---
Predecessors: [0x2d9]
Successors: []
---
0x2e0 PUSH1 0x0
0x2e2 DUP1
0x2e3 REVERT
---
0x2e0: V265 = 0x0
0x2e3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e4
[0x2e4:0x2f7]
---
Predecessors: [0x2d9]
Successors: [0x476]
---
0x2e4 JUMPDEST
0x2e5 PUSH2 0x2f8
0x2e8 PUSH1 0x1
0x2ea PUSH1 0xa0
0x2ec PUSH1 0x2
0x2ee EXP
0x2ef SUB
0x2f0 PUSH1 0x4
0x2f2 CALLDATALOAD
0x2f3 AND
0x2f4 PUSH2 0x476
0x2f7 JUMP
---
0x2e4: JUMPDEST 
0x2e5: V266 = 0x2f8
0x2e8: V267 = 0x1
0x2ea: V268 = 0xa0
0x2ec: V269 = 0x2
0x2ee: V270 = EXP 0x2 0xa0
0x2ef: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f0: V272 = 0x4
0x2f2: V273 = CALLDATALOAD 0x4
0x2f3: V274 = AND V273 0xffffffffffffffffffffffffffffffffffffffff
0x2f4: V275 = 0x476
0x2f7: JUMP 0x476
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2f8, V274]
Exit stack: [V12, 0x2f8, V274]

================================

Block 0x2f8
[0x2f8:0x30b]
---
Predecessors: [0x476, 0x49a]
Successors: []
---
0x2f8 JUMPDEST
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc SWAP1
0x2fd ISZERO
0x2fe ISZERO
0x2ff DUP2
0x300 MSTORE
0x301 PUSH1 0x20
0x303 ADD
0x304 PUSH1 0x40
0x306 MLOAD
0x307 DUP1
0x308 SWAP2
0x309 SUB
0x30a SWAP1
0x30b RETURN
---
0x2f8: JUMPDEST 
0x2f9: V276 = 0x40
0x2fb: V277 = M[0x40]
0x2fd: V278 = ISZERO S0
0x2fe: V279 = ISZERO V278
0x300: M[V277] = V279
0x301: V280 = 0x20
0x303: V281 = ADD 0x20 V277
0x304: V282 = 0x40
0x306: V283 = M[0x40]
0x309: V284 = SUB V281 V283
0x30b: RETURN V283 V284
---
Entry stack: [V12, 0x2f8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2f8]

================================

Block 0x30c
[0x30c:0x312]
---
Predecessors: [0x67]
Successors: [0x313, 0x317]
---
0x30c JUMPDEST
0x30d CALLVALUE
0x30e ISZERO
0x30f PUSH2 0x317
0x312 JUMPI
---
0x30c: JUMPDEST 
0x30d: V285 = CALLVALUE
0x30e: V286 = ISZERO V285
0x30f: V287 = 0x317
0x312: JUMPI 0x317 V286
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x313
[0x313:0x316]
---
Predecessors: [0x30c]
Successors: []
---
0x313 PUSH1 0x0
0x315 DUP1
0x316 REVERT
---
0x313: V288 = 0x0
0x316: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x317
[0x317:0x31e]
---
Predecessors: [0x30c]
Successors: [0x48b]
---
0x317 JUMPDEST
0x318 PUSH2 0x31f
0x31b PUSH2 0x48b
0x31e JUMP
---
0x317: JUMPDEST 
0x318: V289 = 0x31f
0x31b: V290 = 0x48b
0x31e: JUMP 0x48b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x31f]
Exit stack: [V12, 0x31f]

================================

Block 0x31f
[0x31f:0x33a]
---
Predecessors: [0x48b, 0x655]
Successors: []
---
0x31f JUMPDEST
0x320 PUSH1 0x40
0x322 MLOAD
0x323 PUSH1 0x1
0x325 PUSH1 0xa0
0x327 PUSH1 0x2
0x329 EXP
0x32a SUB
0x32b SWAP1
0x32c SWAP2
0x32d AND
0x32e DUP2
0x32f MSTORE
0x330 PUSH1 0x20
0x332 ADD
0x333 PUSH1 0x40
0x335 MLOAD
0x336 DUP1
0x337 SWAP2
0x338 SUB
0x339 SWAP1
0x33a RETURN
---
0x31f: JUMPDEST 
0x320: V291 = 0x40
0x322: V292 = M[0x40]
0x323: V293 = 0x1
0x325: V294 = 0xa0
0x327: V295 = 0x2
0x329: V296 = EXP 0x2 0xa0
0x32a: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32d: V298 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x32f: M[V292] = V298
0x330: V299 = 0x20
0x332: V300 = ADD 0x20 V292
0x333: V301 = 0x40
0x335: V302 = M[0x40]
0x338: V303 = SUB V300 V302
0x33a: RETURN V302 V303
---
Entry stack: [V12, 0x31f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x31f]

================================

Block 0x33b
[0x33b:0x341]
---
Predecessors: [0x72]
Successors: [0x342, 0x346]
---
0x33b JUMPDEST
0x33c CALLVALUE
0x33d ISZERO
0x33e PUSH2 0x346
0x341 JUMPI
---
0x33b: JUMPDEST 
0x33c: V304 = CALLVALUE
0x33d: V305 = ISZERO V304
0x33e: V306 = 0x346
0x341: JUMPI 0x346 V305
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x342
[0x342:0x345]
---
Predecessors: [0x33b]
Successors: []
---
0x342 PUSH1 0x0
0x344 DUP1
0x345 REVERT
---
0x342: V307 = 0x0
0x345: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x346
[0x346:0x359]
---
Predecessors: [0x33b]
Successors: [0x49a]
---
0x346 JUMPDEST
0x347 PUSH2 0x2f8
0x34a PUSH1 0x1
0x34c PUSH1 0xa0
0x34e PUSH1 0x2
0x350 EXP
0x351 SUB
0x352 PUSH1 0x4
0x354 CALLDATALOAD
0x355 AND
0x356 PUSH2 0x49a
0x359 JUMP
---
0x346: JUMPDEST 
0x347: V308 = 0x2f8
0x34a: V309 = 0x1
0x34c: V310 = 0xa0
0x34e: V311 = 0x2
0x350: V312 = EXP 0x2 0xa0
0x351: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x352: V314 = 0x4
0x354: V315 = CALLDATALOAD 0x4
0x355: V316 = AND V315 0xffffffffffffffffffffffffffffffffffffffff
0x356: V317 = 0x49a
0x359: JUMP 0x49a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2f8, V316]
Exit stack: [V12, 0x2f8, V316]

================================

Block 0x35a
[0x35a:0x36d]
---
Predecessors: []
Successors: []
---
0x35a JUMPDEST
0x35b PUSH1 0x40
0x35d MLOAD
0x35e SWAP1
0x35f ISZERO
0x360 ISZERO
0x361 DUP2
0x362 MSTORE
0x363 PUSH1 0x20
0x365 ADD
0x366 PUSH1 0x40
0x368 MLOAD
0x369 DUP1
0x36a SWAP2
0x36b SUB
0x36c SWAP1
0x36d RETURN
---
0x35a: JUMPDEST 
0x35b: V318 = 0x40
0x35d: V319 = M[0x40]
0x35f: V320 = ISZERO S0
0x360: V321 = ISZERO V320
0x362: M[V319] = V321
0x363: V322 = 0x20
0x365: V323 = ADD 0x20 V319
0x366: V324 = 0x40
0x368: V325 = M[0x40]
0x36b: V326 = SUB V323 V325
0x36d: RETURN V325 V326
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x36e
[0x36e:0x374]
---
Predecessors: [0x7d]
Successors: [0x375, 0x379]
---
0x36e JUMPDEST
0x36f CALLVALUE
0x370 ISZERO
0x371 PUSH2 0x379
0x374 JUMPI
---
0x36e: JUMPDEST 
0x36f: V327 = CALLVALUE
0x370: V328 = ISZERO V327
0x371: V329 = 0x379
0x374: JUMPI 0x379 V328
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x375
[0x375:0x378]
---
Predecessors: [0x36e]
Successors: []
---
0x375 PUSH1 0x0
0x377 DUP1
0x378 REVERT
---
0x375: V330 = 0x0
0x378: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x379
[0x379:0x38c]
---
Predecessors: [0x36e]
Successors: [0x4af]
---
0x379 JUMPDEST
0x37a PUSH2 0x38d
0x37d PUSH1 0x1
0x37f PUSH1 0xa0
0x381 PUSH1 0x2
0x383 EXP
0x384 SUB
0x385 PUSH1 0x4
0x387 CALLDATALOAD
0x388 AND
0x389 PUSH2 0x4af
0x38c JUMP
---
0x379: JUMPDEST 
0x37a: V331 = 0x38d
0x37d: V332 = 0x1
0x37f: V333 = 0xa0
0x381: V334 = 0x2
0x383: V335 = EXP 0x2 0xa0
0x384: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x385: V337 = 0x4
0x387: V338 = CALLDATALOAD 0x4
0x388: V339 = AND V338 0xffffffffffffffffffffffffffffffffffffffff
0x389: V340 = 0x4af
0x38c: JUMP 0x4af
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x38d, V339]
Exit stack: [V12, 0x38d, V339]

================================

Block 0x38d
[0x38d:0x38e]
---
Predecessors: [0x4f4, 0x64d]
Successors: []
---
0x38d JUMPDEST
0x38e STOP
---
0x38d: JUMPDEST 
0x38e: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x38f
[0x38f:0x395]
---
Predecessors: [0x88]
Successors: [0x396, 0x39a]
---
0x38f JUMPDEST
0x390 CALLVALUE
0x391 ISZERO
0x392 PUSH2 0x39a
0x395 JUMPI
---
0x38f: JUMPDEST 
0x390: V341 = CALLVALUE
0x391: V342 = ISZERO V341
0x392: V343 = 0x39a
0x395: JUMPI 0x39a V342
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x396
[0x396:0x399]
---
Predecessors: [0x38f]
Successors: []
---
0x396 PUSH1 0x0
0x398 DUP1
0x399 REVERT
---
0x396: V344 = 0x0
0x399: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39a
[0x39a:0x3a1]
---
Predecessors: [0x38f]
Successors: [0x4f7]
---
0x39a JUMPDEST
0x39b PUSH2 0x38d
0x39e PUSH2 0x4f7
0x3a1 JUMP
---
0x39a: JUMPDEST 
0x39b: V345 = 0x38d
0x39e: V346 = 0x4f7
0x3a1: JUMP 0x4f7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x38d]
Exit stack: [V12, 0x38d]

================================

Block 0x3a2
[0x3a2:0x3a3]
---
Predecessors: []
Successors: []
---
0x3a2 JUMPDEST
0x3a3 STOP
---
0x3a2: JUMPDEST 
0x3a3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3a4
[0x3a4:0x3aa]
---
Predecessors: [0x93]
Successors: [0x3ab, 0x3af]
---
0x3a4 JUMPDEST
0x3a5 CALLVALUE
0x3a6 ISZERO
0x3a7 PUSH2 0x3af
0x3aa JUMPI
---
0x3a4: JUMPDEST 
0x3a5: V347 = CALLVALUE
0x3a6: V348 = ISZERO V347
0x3a7: V349 = 0x3af
0x3aa: JUMPI 0x3af V348
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ab
[0x3ab:0x3ae]
---
Predecessors: [0x3a4]
Successors: []
---
0x3ab PUSH1 0x0
0x3ad DUP1
0x3ae REVERT
---
0x3ab: V350 = 0x0
0x3ae: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3af
[0x3af:0x3b6]
---
Predecessors: [0x3a4]
Successors: [0x64f]
---
0x3af JUMPDEST
0x3b0 PUSH2 0x20e
0x3b3 PUSH2 0x64f
0x3b6 JUMP
---
0x3af: JUMPDEST 
0x3b0: V351 = 0x20e
0x3b3: V352 = 0x64f
0x3b6: JUMP 0x64f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x20e]
Exit stack: [V12, 0x20e]

================================

Block 0x3b7
[0x3b7:0x3c8]
---
Predecessors: []
Successors: []
---
0x3b7 JUMPDEST
0x3b8 PUSH1 0x40
0x3ba MLOAD
0x3bb SWAP1
0x3bc DUP2
0x3bd MSTORE
0x3be PUSH1 0x20
0x3c0 ADD
0x3c1 PUSH1 0x40
0x3c3 MLOAD
0x3c4 DUP1
0x3c5 SWAP2
0x3c6 SUB
0x3c7 SWAP1
0x3c8 RETURN
---
0x3b7: JUMPDEST 
0x3b8: V353 = 0x40
0x3ba: V354 = M[0x40]
0x3bd: M[V354] = S0
0x3be: V355 = 0x20
0x3c0: V356 = ADD 0x20 V354
0x3c1: V357 = 0x40
0x3c3: V358 = M[0x40]
0x3c6: V359 = SUB V356 V358
0x3c8: RETURN V358 V359
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3c9
[0x3c9:0x3cf]
---
Predecessors: [0x9e]
Successors: [0x3d0, 0x3d4]
---
0x3c9 JUMPDEST
0x3ca CALLVALUE
0x3cb ISZERO
0x3cc PUSH2 0x3d4
0x3cf JUMPI
---
0x3c9: JUMPDEST 
0x3ca: V360 = CALLVALUE
0x3cb: V361 = ISZERO V360
0x3cc: V362 = 0x3d4
0x3cf: JUMPI 0x3d4 V361
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d0
[0x3d0:0x3d3]
---
Predecessors: [0x3c9]
Successors: []
---
0x3d0 PUSH1 0x0
0x3d2 DUP1
0x3d3 REVERT
---
0x3d0: V363 = 0x0
0x3d3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d4
[0x3d4:0x3db]
---
Predecessors: [0x3c9]
Successors: [0x655]
---
0x3d4 JUMPDEST
0x3d5 PUSH2 0x31f
0x3d8 PUSH2 0x655
0x3db JUMP
---
0x3d4: JUMPDEST 
0x3d5: V364 = 0x31f
0x3d8: V365 = 0x655
0x3db: JUMP 0x655
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x31f]
Exit stack: [V12, 0x31f]

================================

Block 0x3dc
[0x3dc:0x3f7]
---
Predecessors: []
Successors: []
---
0x3dc JUMPDEST
0x3dd PUSH1 0x40
0x3df MLOAD
0x3e0 PUSH1 0x1
0x3e2 PUSH1 0xa0
0x3e4 PUSH1 0x2
0x3e6 EXP
0x3e7 SUB
0x3e8 SWAP1
0x3e9 SWAP2
0x3ea AND
0x3eb DUP2
0x3ec MSTORE
0x3ed PUSH1 0x20
0x3ef ADD
0x3f0 PUSH1 0x40
0x3f2 MLOAD
0x3f3 DUP1
0x3f4 SWAP2
0x3f5 SUB
0x3f6 SWAP1
0x3f7 RETURN
---
0x3dc: JUMPDEST 
0x3dd: V366 = 0x40
0x3df: V367 = M[0x40]
0x3e0: V368 = 0x1
0x3e2: V369 = 0xa0
0x3e4: V370 = 0x2
0x3e6: V371 = EXP 0x2 0xa0
0x3e7: V372 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ea: V373 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3ec: M[V367] = V373
0x3ed: V374 = 0x20
0x3ef: V375 = ADD 0x20 V367
0x3f0: V376 = 0x40
0x3f2: V377 = M[0x40]
0x3f5: V378 = SUB V375 V377
0x3f7: RETURN V377 V378
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3f8
[0x3f8:0x404]
---
Predecessors: [0xff]
Successors: [0x405, 0x414]
---
0x3f8 JUMPDEST
0x3f9 PUSH1 0x0
0x3fb DUP3
0x3fc DUP3
0x3fd MUL
0x3fe DUP4
0x3ff ISZERO
0x400 DUP1
0x401 PUSH2 0x414
0x404 JUMPI
---
0x3f8: JUMPDEST 
0x3f9: V379 = 0x0
0x3fd: V380 = MUL 0x7530 V88
0x3ff: V381 = ISZERO V88
0x401: V382 = 0x414
0x404: JUMPI 0x414 V381
---
Entry stack: [V12, 0x0, 0x0, 0x0, V68, 0x10b, V88, 0x7530]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V380, V381]
Exit stack: [V12, 0x0, 0x0, 0x0, V68, 0x10b, V88, 0x7530, 0x0, V380, V381]

================================

Block 0x405
[0x405:0x40f]
---
Predecessors: [0x3f8]
Successors: [0x410, 0x411]
---
0x405 POP
0x406 DUP3
0x407 DUP5
0x408 DUP3
0x409 DUP2
0x40a ISZERO
0x40b ISZERO
0x40c PUSH2 0x411
0x40f JUMPI
---
0x40a: V383 = ISZERO V88
0x40b: V384 = ISZERO V383
0x40c: V385 = 0x411
0x40f: JUMPI 0x411 V384
---
Entry stack: [V12, 0x0, 0x0, 0x0, V68, 0x10b, V88, 0x7530, 0x0, V380, V381]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, 0x0, 0x0, 0x0, V68, 0x10b, V88, 0x7530, 0x0, V380, 0x7530, V88, V380]

================================

Block 0x410
[0x410:0x410]
---
Predecessors: [0x405]
Successors: []
---
0x410 INVALID
---
0x410: INVALID 
---
Entry stack: [V12, 0x0, 0x0, 0x0, V68, 0x10b, V88, 0x7530, 0x0, V380, 0x7530, V88, V380]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V68, 0x10b, V88, 0x7530, 0x0, V380, 0x7530, V88, V380]

================================

Block 0x411
[0x411:0x413]
---
Predecessors: [0x405]
Successors: [0x414]
---
0x411 JUMPDEST
0x412 DIV
0x413 EQ
---
0x411: JUMPDEST 
0x412: V386 = DIV V380 V88
0x413: V387 = EQ V386 0x7530
---
Entry stack: [V12, 0x0, 0x0, 0x0, V68, 0x10b, V88, 0x7530, 0x0, V380, 0x7530, V88, V380]
Stack pops: 3
Stack additions: [V387]
Exit stack: [V12, 0x0, 0x0, 0x0, V68, 0x10b, V88, 0x7530, 0x0, V380, V387]

================================

Block 0x414
[0x414:0x41a]
---
Predecessors: [0x3f8, 0x411]
Successors: [0x41b, 0x41c]
---
0x414 JUMPDEST
0x415 ISZERO
0x416 ISZERO
0x417 PUSH2 0x41c
0x41a JUMPI
---
0x414: JUMPDEST 
0x415: V388 = ISZERO S0
0x416: V389 = ISZERO V388
0x417: V390 = 0x41c
0x41a: JUMPI 0x41c V389
---
Entry stack: [V12, 0x0, 0x0, 0x0, V68, 0x10b, V88, 0x7530, 0x0, V380, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V68, 0x10b, V88, 0x7530, 0x0, V380]

================================

Block 0x41b
[0x41b:0x41b]
---
Predecessors: [0x414]
Successors: []
---
0x41b INVALID
---
0x41b: INVALID 
---
Entry stack: [V12, 0x0, 0x0, 0x0, V68, 0x10b, V88, 0x7530, 0x0, V380]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, V68, 0x10b, V88, 0x7530, 0x0, V380]

================================

Block 0x41c
[0x41c:0x41f]
---
Predecessors: [0x414, 0x427]
Successors: [0x420]
---
0x41c JUMPDEST
0x41d DUP1
0x41e SWAP2
0x41f POP
---
0x41c: JUMPDEST 
---
Entry stack: [V12, S8, S7, 0x0, V68, {0x10b, 0x145}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, S8, S7, 0x0, V68, {0x10b, 0x145}, S3, S2, S0, S0]

================================

Block 0x420
[0x420:0x426]
---
Predecessors: [0x41c]
Successors: [0x10b, 0x145]
---
0x420 JUMPDEST
0x421 POP
0x422 SWAP3
0x423 SWAP2
0x424 POP
0x425 POP
0x426 JUMP
---
0x420: JUMPDEST 
0x426: JUMP {0x10b, 0x145}
---
Entry stack: [V12, S8, S7, 0x0, V68, {0x10b, 0x145}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, S8, S7, 0x0, V68, S1]

================================

Block 0x427
[0x427:0x434]
---
Predecessors: [0x139]
Successors: [0x41c, 0x435]
---
0x427 JUMPDEST
0x428 PUSH1 0x0
0x42a DUP3
0x42b DUP3
0x42c ADD
0x42d DUP4
0x42e DUP2
0x42f LT
0x430 ISZERO
0x431 PUSH2 0x41c
0x434 JUMPI
---
0x427: JUMPDEST 
0x428: V391 = 0x0
0x42c: V392 = ADD S0 S1
0x42f: V393 = LT V392 S1
0x430: V394 = ISZERO V393
0x431: V395 = 0x41c
0x434: JUMPI 0x41c V394
---
Entry stack: [V12, S6, S5, 0x0, V68, 0x145, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V392]
Exit stack: [V12, S6, S5, 0x0, V68, 0x145, S1, S0, 0x0, V392]

================================

Block 0x435
[0x435:0x435]
---
Predecessors: [0x427]
Successors: []
---
0x435 INVALID
---
0x435: INVALID 
---
Entry stack: [V12, S8, S7, 0x0, V68, 0x145, S3, S2, 0x0, V392]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, 0x0, V68, 0x145, S3, S2, 0x0, V392]

================================

Block 0x436
[0x436:0x439]
---
Predecessors: []
Successors: [0x43a]
---
0x436 JUMPDEST
0x437 DUP1
0x438 SWAP2
0x439 POP
---
0x436: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S0, S0]

================================

Block 0x43a
[0x43a:0x440]
---
Predecessors: [0x436]
Successors: []
Has unresolved jump.
---
0x43a JUMPDEST
0x43b POP
0x43c SWAP3
0x43d SWAP2
0x43e POP
0x43f POP
0x440 JUMP
---
0x43a: JUMPDEST 
0x440: JUMP S4
---
Entry stack: [S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0x441
[0x441:0x446]
---
Predecessors: [0x206]
Successors: [0x20e]
---
0x441 JUMPDEST
0x442 PUSH1 0x5
0x444 SLOAD
0x445 DUP2
0x446 JUMP
---
0x441: JUMPDEST 
0x442: V396 = 0x5
0x444: V397 = S[0x5]
0x446: JUMP 0x20e
---
Entry stack: [V12, 0x20e]
Stack pops: 1
Stack additions: [S0, V397]
Exit stack: [V12, 0x20e, V397]

================================

Block 0x447
[0x447:0x455]
---
Predecessors: [0x22b]
Successors: [0x20e]
---
0x447 JUMPDEST
0x448 PUSH11 0x18d0bf423c03d8de000000
0x454 DUP2
0x455 JUMP
---
0x447: JUMPDEST 
0x448: V398 = 0x18d0bf423c03d8de000000
0x455: JUMP 0x20e
---
Entry stack: [V12, 0x20e]
Stack pops: 1
Stack additions: [S0, 0x18d0bf423c03d8de000000]
Exit stack: [V12, 0x20e, 0x18d0bf423c03d8de000000]

================================

Block 0x456
[0x456:0x45b]
---
Predecessors: [0x250]
Successors: [0x20e]
---
0x456 JUMPDEST
0x457 PUSH1 0x4
0x459 SLOAD
0x45a DUP2
0x45b JUMP
---
0x456: JUMPDEST 
0x457: V399 = 0x4
0x459: V400 = S[0x4]
0x45b: JUMP 0x20e
---
Entry stack: [V12, 0x20e]
Stack pops: 1
Stack additions: [S0, V400]
Exit stack: [V12, 0x20e, V400]

================================

Block 0x45c
[0x45c:0x461]
---
Predecessors: [0x275]
Successors: [0x20e]
---
0x45c JUMPDEST
0x45d PUSH2 0x7530
0x460 DUP2
0x461 JUMP
---
0x45c: JUMPDEST 
0x45d: V401 = 0x7530
0x461: JUMP 0x20e
---
Entry stack: [V12, 0x20e]
Stack pops: 1
Stack additions: [S0, 0x7530]
Exit stack: [V12, 0x20e, 0x7530]

================================

Block 0x462
[0x462:0x46f]
---
Predecessors: [0x29a]
Successors: [0x20e]
---
0x462 JUMPDEST
0x463 PUSH10 0xd3c21bcecceda1000000
0x46e DUP2
0x46f JUMP
---
0x462: JUMPDEST 
0x463: V402 = 0xd3c21bcecceda1000000
0x46f: JUMP 0x20e
---
Entry stack: [V12, 0x20e]
Stack pops: 1
Stack additions: [S0, 0xd3c21bcecceda1000000]
Exit stack: [V12, 0x20e, 0xd3c21bcecceda1000000]

================================

Block 0x470
[0x470:0x475]
---
Predecessors: [0x2bf]
Successors: [0x20e]
---
0x470 JUMPDEST
0x471 PUSH1 0x2
0x473 SLOAD
0x474 DUP2
0x475 JUMP
---
0x470: JUMPDEST 
0x471: V403 = 0x2
0x473: V404 = S[0x2]
0x475: JUMP 0x20e
---
Entry stack: [V12, 0x20e]
Stack pops: 1
Stack additions: [S0, V404]
Exit stack: [V12, 0x20e, V404]

================================

Block 0x476
[0x476:0x48a]
---
Predecessors: [0x2e4]
Successors: [0x2f8]
---
0x476 JUMPDEST
0x477 PUSH1 0x6
0x479 PUSH1 0x20
0x47b MSTORE
0x47c PUSH1 0x0
0x47e SWAP1
0x47f DUP2
0x480 MSTORE
0x481 PUSH1 0x40
0x483 SWAP1
0x484 SHA3
0x485 SLOAD
0x486 PUSH1 0xff
0x488 AND
0x489 DUP2
0x48a JUMP
---
0x476: JUMPDEST 
0x477: V405 = 0x6
0x479: V406 = 0x20
0x47b: M[0x20] = 0x6
0x47c: V407 = 0x0
0x480: M[0x0] = V274
0x481: V408 = 0x40
0x484: V409 = SHA3 0x0 0x40
0x485: V410 = S[V409]
0x486: V411 = 0xff
0x488: V412 = AND 0xff V410
0x48a: JUMP 0x2f8
---
Entry stack: [V12, 0x2f8, V274]
Stack pops: 2
Stack additions: [S1, V412]
Exit stack: [V12, 0x2f8, V412]

================================

Block 0x48b
[0x48b:0x499]
---
Predecessors: [0x317]
Successors: [0x31f]
---
0x48b JUMPDEST
0x48c PUSH1 0x0
0x48e SLOAD
0x48f PUSH1 0x1
0x491 PUSH1 0xa0
0x493 PUSH1 0x2
0x495 EXP
0x496 SUB
0x497 AND
0x498 DUP2
0x499 JUMP
---
0x48b: JUMPDEST 
0x48c: V413 = 0x0
0x48e: V414 = S[0x0]
0x48f: V415 = 0x1
0x491: V416 = 0xa0
0x493: V417 = 0x2
0x495: V418 = EXP 0x2 0xa0
0x496: V419 = SUB 0x10000000000000000000000000000000000000000 0x1
0x497: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x499: JUMP 0x31f
---
Entry stack: [V12, 0x31f]
Stack pops: 1
Stack additions: [S0, V420]
Exit stack: [V12, 0x31f, V420]

================================

Block 0x49a
[0x49a:0x4ae]
---
Predecessors: [0x346]
Successors: [0x2f8]
---
0x49a JUMPDEST
0x49b PUSH1 0x7
0x49d PUSH1 0x20
0x49f MSTORE
0x4a0 PUSH1 0x0
0x4a2 SWAP1
0x4a3 DUP2
0x4a4 MSTORE
0x4a5 PUSH1 0x40
0x4a7 SWAP1
0x4a8 SHA3
0x4a9 SLOAD
0x4aa PUSH1 0xff
0x4ac AND
0x4ad DUP2
0x4ae JUMP
---
0x49a: JUMPDEST 
0x49b: V421 = 0x7
0x49d: V422 = 0x20
0x49f: M[0x20] = 0x7
0x4a0: V423 = 0x0
0x4a4: M[0x0] = V316
0x4a5: V424 = 0x40
0x4a8: V425 = SHA3 0x0 0x40
0x4a9: V426 = S[V425]
0x4aa: V427 = 0xff
0x4ac: V428 = AND 0xff V426
0x4ae: JUMP 0x2f8
---
Entry stack: [V12, 0x2f8, V316]
Stack pops: 2
Stack additions: [S1, V428]
Exit stack: [V12, 0x2f8, V428]

================================

Block 0x4af
[0x4af:0x4c5]
---
Predecessors: [0x379]
Successors: [0x4c6, 0x4ca]
---
0x4af JUMPDEST
0x4b0 PUSH1 0x0
0x4b2 SLOAD
0x4b3 CALLER
0x4b4 PUSH1 0x1
0x4b6 PUSH1 0xa0
0x4b8 PUSH1 0x2
0x4ba EXP
0x4bb SUB
0x4bc SWAP1
0x4bd DUP2
0x4be AND
0x4bf SWAP2
0x4c0 AND
0x4c1 EQ
0x4c2 PUSH2 0x4ca
0x4c5 JUMPI
---
0x4af: JUMPDEST 
0x4b0: V429 = 0x0
0x4b2: V430 = S[0x0]
0x4b3: V431 = CALLER
0x4b4: V432 = 0x1
0x4b6: V433 = 0xa0
0x4b8: V434 = 0x2
0x4ba: V435 = EXP 0x2 0xa0
0x4bb: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4be: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x4c0: V438 = AND V430 0xffffffffffffffffffffffffffffffffffffffff
0x4c1: V439 = EQ V438 V437
0x4c2: V440 = 0x4ca
0x4c5: JUMPI 0x4ca V439
---
Entry stack: [V12, 0x38d, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38d, V339]

================================

Block 0x4c6
[0x4c6:0x4c9]
---
Predecessors: [0x4af]
Successors: []
---
0x4c6 PUSH1 0x0
0x4c8 DUP1
0x4c9 REVERT
---
0x4c6: V441 = 0x0
0x4c9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38d, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38d, V339]

================================

Block 0x4ca
[0x4ca:0x4f2]
---
Predecessors: [0x4af]
Successors: [0x4f3]
---
0x4ca JUMPDEST
0x4cb PUSH1 0x0
0x4cd DUP1
0x4ce SLOAD
0x4cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e4 NOT
0x4e5 AND
0x4e6 PUSH1 0x1
0x4e8 PUSH1 0xa0
0x4ea PUSH1 0x2
0x4ec EXP
0x4ed SUB
0x4ee DUP4
0x4ef AND
0x4f0 OR
0x4f1 SWAP1
0x4f2 SSTORE
---
0x4ca: JUMPDEST 
0x4cb: V442 = 0x0
0x4ce: V443 = S[0x0]
0x4cf: V444 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e4: V445 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4e5: V446 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V443
0x4e6: V447 = 0x1
0x4e8: V448 = 0xa0
0x4ea: V449 = 0x2
0x4ec: V450 = EXP 0x2 0xa0
0x4ed: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ef: V452 = AND V339 0xffffffffffffffffffffffffffffffffffffffff
0x4f0: V453 = OR V452 V446
0x4f2: S[0x0] = V453
---
Entry stack: [V12, 0x38d, V339]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x38d, V339]

================================

Block 0x4f3
[0x4f3:0x4f3]
---
Predecessors: [0x4ca]
Successors: [0x4f4]
---
0x4f3 JUMPDEST
---
0x4f3: JUMPDEST 
---
Entry stack: [V12, 0x38d, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38d, V339]

================================

Block 0x4f4
[0x4f4:0x4f6]
---
Predecessors: [0x4f3]
Successors: [0x38d]
---
0x4f4 JUMPDEST
0x4f5 POP
0x4f6 JUMP
---
0x4f4: JUMPDEST 
0x4f6: JUMP 0x38d
---
Entry stack: [V12, 0x38d, V339]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x4f7
[0x4f7:0x50d]
---
Predecessors: [0x39a]
Successors: [0x50e, 0x512]
---
0x4f7 JUMPDEST
0x4f8 PUSH1 0x0
0x4fa SLOAD
0x4fb CALLER
0x4fc PUSH1 0x1
0x4fe PUSH1 0xa0
0x500 PUSH1 0x2
0x502 EXP
0x503 SUB
0x504 SWAP1
0x505 DUP2
0x506 AND
0x507 SWAP2
0x508 AND
0x509 EQ
0x50a PUSH2 0x512
0x50d JUMPI
---
0x4f7: JUMPDEST 
0x4f8: V454 = 0x0
0x4fa: V455 = S[0x0]
0x4fb: V456 = CALLER
0x4fc: V457 = 0x1
0x4fe: V458 = 0xa0
0x500: V459 = 0x2
0x502: V460 = EXP 0x2 0xa0
0x503: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x506: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V456
0x508: V463 = AND V455 0xffffffffffffffffffffffffffffffffffffffff
0x509: V464 = EQ V463 V462
0x50a: V465 = 0x512
0x50d: JUMPI 0x512 V464
---
Entry stack: [V12, 0x38d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38d]

================================

Block 0x50e
[0x50e:0x511]
---
Predecessors: [0x4f7]
Successors: []
---
0x50e PUSH1 0x0
0x510 DUP1
0x511 REVERT
---
0x50e: V466 = 0x0
0x511: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38d]

================================

Block 0x512
[0x512:0x51b]
---
Predecessors: [0x4f7]
Successors: [0x51c, 0x520]
---
0x512 JUMPDEST
0x513 PUSH1 0x4
0x515 SLOAD
0x516 TIMESTAMP
0x517 GT
0x518 PUSH2 0x520
0x51b JUMPI
---
0x512: JUMPDEST 
0x513: V467 = 0x4
0x515: V468 = S[0x4]
0x516: V469 = TIMESTAMP
0x517: V470 = GT V469 V468
0x518: V471 = 0x520
0x51b: JUMPI 0x520 V470
---
Entry stack: [V12, 0x38d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38d]

================================

Block 0x51c
[0x51c:0x51f]
---
Predecessors: [0x512]
Successors: []
---
0x51c PUSH1 0x0
0x51e DUP1
0x51f REVERT
---
0x51c: V472 = 0x0
0x51f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38d]

================================

Block 0x520
[0x520:0x554]
---
Predecessors: [0x512]
Successors: [0x555, 0x556]
---
0x520 JUMPDEST
0x521 PUSH1 0x0
0x523 SLOAD
0x524 PUSH1 0x1
0x526 PUSH1 0xa0
0x528 PUSH1 0x2
0x52a EXP
0x52b SUB
0x52c SWAP1
0x52d DUP2
0x52e AND
0x52f SWAP1
0x530 ADDRESS
0x531 AND
0x532 BALANCE
0x533 DUP1
0x534 ISZERO
0x535 PUSH2 0x8fc
0x538 MUL
0x539 SWAP1
0x53a PUSH1 0x40
0x53c MLOAD
0x53d PUSH1 0x0
0x53f PUSH1 0x40
0x541 MLOAD
0x542 DUP1
0x543 DUP4
0x544 SUB
0x545 DUP2
0x546 DUP6
0x547 DUP9
0x548 DUP9
0x549 CALL
0x54a SWAP4
0x54b POP
0x54c POP
0x54d POP
0x54e POP
0x54f ISZERO
0x550 ISZERO
0x551 PUSH2 0x556
0x554 JUMPI
---
0x520: JUMPDEST 
0x521: V473 = 0x0
0x523: V474 = S[0x0]
0x524: V475 = 0x1
0x526: V476 = 0xa0
0x528: V477 = 0x2
0x52a: V478 = EXP 0x2 0xa0
0x52b: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52e: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x530: V481 = ADDRESS
0x531: V482 = AND V481 0xffffffffffffffffffffffffffffffffffffffff
0x532: V483 = BALANCE V482
0x534: V484 = ISZERO V483
0x535: V485 = 0x8fc
0x538: V486 = MUL 0x8fc V484
0x53a: V487 = 0x40
0x53c: V488 = M[0x40]
0x53d: V489 = 0x0
0x53f: V490 = 0x40
0x541: V491 = M[0x40]
0x544: V492 = SUB V488 V491
0x549: V493 = CALL V486 V480 V483 V491 V492 V491 0x0
0x54f: V494 = ISZERO V493
0x550: V495 = ISZERO V494
0x551: V496 = 0x556
0x554: JUMPI 0x556 V495
---
Entry stack: [V12, 0x38d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38d]

================================

Block 0x555
[0x555:0x555]
---
Predecessors: [0x520]
Successors: []
---
0x555 INVALID
---
0x555: INVALID 
---
Entry stack: [V12, 0x38d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38d]

================================

Block 0x556
[0x556:0x5bc]
---
Predecessors: [0x520]
Successors: [0x5bd, 0x5c1]
---
0x556 JUMPDEST
0x557 PUSH1 0x1
0x559 SLOAD
0x55a PUSH1 0x0
0x55c DUP1
0x55d SLOAD
0x55e PUSH1 0x1
0x560 PUSH1 0xa0
0x562 PUSH1 0x2
0x564 EXP
0x565 SUB
0x566 SWAP3
0x567 DUP4
0x568 AND
0x569 SWAP3
0x56a PUSH4 0xa9059cbb
0x56f SWAP3
0x570 SWAP2
0x571 AND
0x572 SWAP1
0x573 DUP4
0x574 SWAP1
0x575 PUSH4 0x70a08231
0x57a SWAP1
0x57b ADDRESS
0x57c SWAP1
0x57d PUSH1 0x40
0x57f MLOAD
0x580 PUSH1 0x20
0x582 ADD
0x583 MSTORE
0x584 PUSH1 0x40
0x586 MLOAD
0x587 PUSH1 0xe0
0x589 PUSH1 0x2
0x58b EXP
0x58c PUSH4 0xffffffff
0x591 DUP5
0x592 AND
0x593 MUL
0x594 DUP2
0x595 MSTORE
0x596 PUSH1 0x1
0x598 PUSH1 0xa0
0x59a PUSH1 0x2
0x59c EXP
0x59d SUB
0x59e SWAP1
0x59f SWAP2
0x5a0 AND
0x5a1 PUSH1 0x4
0x5a3 DUP3
0x5a4 ADD
0x5a5 MSTORE
0x5a6 PUSH1 0x24
0x5a8 ADD
0x5a9 PUSH1 0x20
0x5ab PUSH1 0x40
0x5ad MLOAD
0x5ae DUP1
0x5af DUP4
0x5b0 SUB
0x5b1 DUP2
0x5b2 PUSH1 0x0
0x5b4 DUP8
0x5b5 DUP1
0x5b6 EXTCODESIZE
0x5b7 ISZERO
0x5b8 ISZERO
0x5b9 PUSH2 0x5c1
0x5bc JUMPI
---
0x556: JUMPDEST 
0x557: V497 = 0x1
0x559: V498 = S[0x1]
0x55a: V499 = 0x0
0x55d: V500 = S[0x0]
0x55e: V501 = 0x1
0x560: V502 = 0xa0
0x562: V503 = 0x2
0x564: V504 = EXP 0x2 0xa0
0x565: V505 = SUB 0x10000000000000000000000000000000000000000 0x1
0x568: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x56a: V507 = 0xa9059cbb
0x571: V508 = AND V500 0xffffffffffffffffffffffffffffffffffffffff
0x575: V509 = 0x70a08231
0x57b: V510 = ADDRESS
0x57d: V511 = 0x40
0x57f: V512 = M[0x40]
0x580: V513 = 0x20
0x582: V514 = ADD 0x20 V512
0x583: M[V514] = 0x0
0x584: V515 = 0x40
0x586: V516 = M[0x40]
0x587: V517 = 0xe0
0x589: V518 = 0x2
0x58b: V519 = EXP 0x2 0xe0
0x58c: V520 = 0xffffffff
0x592: V521 = AND 0x70a08231 0xffffffff
0x593: V522 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x595: M[V516] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x596: V523 = 0x1
0x598: V524 = 0xa0
0x59a: V525 = 0x2
0x59c: V526 = EXP 0x2 0xa0
0x59d: V527 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a0: V528 = AND V510 0xffffffffffffffffffffffffffffffffffffffff
0x5a1: V529 = 0x4
0x5a4: V530 = ADD V516 0x4
0x5a5: M[V530] = V528
0x5a6: V531 = 0x24
0x5a8: V532 = ADD 0x24 V516
0x5a9: V533 = 0x20
0x5ab: V534 = 0x40
0x5ad: V535 = M[0x40]
0x5b0: V536 = SUB V532 V535
0x5b2: V537 = 0x0
0x5b6: V538 = EXTCODESIZE V506
0x5b7: V539 = ISZERO V538
0x5b8: V540 = ISZERO V539
0x5b9: V541 = 0x5c1
0x5bc: JUMPI 0x5c1 V540
---
Entry stack: [V12, 0x38d]
Stack pops: 0
Stack additions: [V506, 0xa9059cbb, V508, V506, 0x70a08231, V532, 0x20, V535, V536, V535, 0x0, V506]
Exit stack: [V12, 0x38d, V506, 0xa9059cbb, V508, V506, 0x70a08231, V532, 0x20, V535, V536, V535, 0x0, V506]

================================

Block 0x5bd
[0x5bd:0x5c0]
---
Predecessors: [0x556]
Successors: []
---
0x5bd PUSH1 0x0
0x5bf DUP1
0x5c0 REVERT
---
0x5bd: V542 = 0x0
0x5c0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38d, V506, 0xa9059cbb, V508, V506, 0x70a08231, V532, 0x20, V535, V536, V535, 0x0, V506]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38d, V506, 0xa9059cbb, V508, V506, 0x70a08231, V532, 0x20, V535, V536, V535, 0x0, V506]

================================

Block 0x5c1
[0x5c1:0x5cd]
---
Predecessors: [0x556]
Successors: [0x5ce, 0x5d2]
---
0x5c1 JUMPDEST
0x5c2 PUSH2 0x2c6
0x5c5 GAS
0x5c6 SUB
0x5c7 CALL
0x5c8 ISZERO
0x5c9 ISZERO
0x5ca PUSH2 0x5d2
0x5cd JUMPI
---
0x5c1: JUMPDEST 
0x5c2: V543 = 0x2c6
0x5c5: V544 = GAS
0x5c6: V545 = SUB V544 0x2c6
0x5c7: V546 = CALL V545 V506 0x0 V535 V536 V535 0x20
0x5c8: V547 = ISZERO V546
0x5c9: V548 = ISZERO V547
0x5ca: V549 = 0x5d2
0x5cd: JUMPI 0x5d2 V548
---
Entry stack: [V12, 0x38d, V506, 0xa9059cbb, V508, V506, 0x70a08231, V532, 0x20, V535, V536, V535, 0x0, V506]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x38d, V506, 0xa9059cbb, V508, V506, 0x70a08231, V532]

================================

Block 0x5ce
[0x5ce:0x5d1]
---
Predecessors: [0x5c1]
Successors: []
---
0x5ce PUSH1 0x0
0x5d0 DUP1
0x5d1 REVERT
---
0x5ce: V550 = 0x0
0x5d1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38d, V506, 0xa9059cbb, V508, V506, 0x70a08231, V532]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38d, V506, 0xa9059cbb, V508, V506, 0x70a08231, V532]

================================

Block 0x5d2
[0x5d2:0x623]
---
Predecessors: [0x5c1]
Successors: [0x624, 0x628]
---
0x5d2 JUMPDEST
0x5d3 POP
0x5d4 POP
0x5d5 POP
0x5d6 PUSH1 0x40
0x5d8 MLOAD
0x5d9 DUP1
0x5da MLOAD
0x5db SWAP1
0x5dc POP
0x5dd PUSH1 0x0
0x5df PUSH1 0x40
0x5e1 MLOAD
0x5e2 PUSH1 0x20
0x5e4 ADD
0x5e5 MSTORE
0x5e6 PUSH1 0x40
0x5e8 MLOAD
0x5e9 PUSH1 0xe0
0x5eb PUSH1 0x2
0x5ed EXP
0x5ee PUSH4 0xffffffff
0x5f3 DUP6
0x5f4 AND
0x5f5 MUL
0x5f6 DUP2
0x5f7 MSTORE
0x5f8 PUSH1 0x1
0x5fa PUSH1 0xa0
0x5fc PUSH1 0x2
0x5fe EXP
0x5ff SUB
0x600 SWAP1
0x601 SWAP3
0x602 AND
0x603 PUSH1 0x4
0x605 DUP4
0x606 ADD
0x607 MSTORE
0x608 PUSH1 0x24
0x60a DUP3
0x60b ADD
0x60c MSTORE
0x60d PUSH1 0x44
0x60f ADD
0x610 PUSH1 0x20
0x612 PUSH1 0x40
0x614 MLOAD
0x615 DUP1
0x616 DUP4
0x617 SUB
0x618 DUP2
0x619 PUSH1 0x0
0x61b DUP8
0x61c DUP1
0x61d EXTCODESIZE
0x61e ISZERO
0x61f ISZERO
0x620 PUSH2 0x628
0x623 JUMPI
---
0x5d2: JUMPDEST 
0x5d6: V551 = 0x40
0x5d8: V552 = M[0x40]
0x5da: V553 = M[V552]
0x5dd: V554 = 0x0
0x5df: V555 = 0x40
0x5e1: V556 = M[0x40]
0x5e2: V557 = 0x20
0x5e4: V558 = ADD 0x20 V556
0x5e5: M[V558] = 0x0
0x5e6: V559 = 0x40
0x5e8: V560 = M[0x40]
0x5e9: V561 = 0xe0
0x5eb: V562 = 0x2
0x5ed: V563 = EXP 0x2 0xe0
0x5ee: V564 = 0xffffffff
0x5f4: V565 = AND 0xa9059cbb 0xffffffff
0x5f5: V566 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x5f7: M[V560] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5f8: V567 = 0x1
0x5fa: V568 = 0xa0
0x5fc: V569 = 0x2
0x5fe: V570 = EXP 0x2 0xa0
0x5ff: V571 = SUB 0x10000000000000000000000000000000000000000 0x1
0x602: V572 = AND V508 0xffffffffffffffffffffffffffffffffffffffff
0x603: V573 = 0x4
0x606: V574 = ADD V560 0x4
0x607: M[V574] = V572
0x608: V575 = 0x24
0x60b: V576 = ADD V560 0x24
0x60c: M[V576] = V553
0x60d: V577 = 0x44
0x60f: V578 = ADD 0x44 V560
0x610: V579 = 0x20
0x612: V580 = 0x40
0x614: V581 = M[0x40]
0x617: V582 = SUB V578 V581
0x619: V583 = 0x0
0x61d: V584 = EXTCODESIZE V506
0x61e: V585 = ISZERO V584
0x61f: V586 = ISZERO V585
0x620: V587 = 0x628
0x623: JUMPI 0x628 V586
---
Entry stack: [V12, 0x38d, V506, 0xa9059cbb, V508, V506, 0x70a08231, V532]
Stack pops: 6
Stack additions: [S5, S4, V578, 0x20, V581, V582, V581, 0x0, S5]
Exit stack: [V12, 0x38d, V506, 0xa9059cbb, V578, 0x20, V581, V582, V581, 0x0, V506]

================================

Block 0x624
[0x624:0x627]
---
Predecessors: [0x5d2]
Successors: []
---
0x624 PUSH1 0x0
0x626 DUP1
0x627 REVERT
---
0x624: V588 = 0x0
0x627: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38d, V506, 0xa9059cbb, V578, 0x20, V581, V582, V581, 0x0, V506]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38d, V506, 0xa9059cbb, V578, 0x20, V581, V582, V581, 0x0, V506]

================================

Block 0x628
[0x628:0x634]
---
Predecessors: [0x5d2]
Successors: [0x635, 0x639]
---
0x628 JUMPDEST
0x629 PUSH2 0x2c6
0x62c GAS
0x62d SUB
0x62e CALL
0x62f ISZERO
0x630 ISZERO
0x631 PUSH2 0x639
0x634 JUMPI
---
0x628: JUMPDEST 
0x629: V589 = 0x2c6
0x62c: V590 = GAS
0x62d: V591 = SUB V590 0x2c6
0x62e: V592 = CALL V591 V506 0x0 V581 V582 V581 0x20
0x62f: V593 = ISZERO V592
0x630: V594 = ISZERO V593
0x631: V595 = 0x639
0x634: JUMPI 0x639 V594
---
Entry stack: [V12, 0x38d, V506, 0xa9059cbb, V578, 0x20, V581, V582, V581, 0x0, V506]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x38d, V506, 0xa9059cbb, V578]

================================

Block 0x635
[0x635:0x638]
---
Predecessors: [0x628]
Successors: []
---
0x635 PUSH1 0x0
0x637 DUP1
0x638 REVERT
---
0x635: V596 = 0x0
0x638: REVERT 0x0 0x0
---
Entry stack: [V12, 0x38d, V506, 0xa9059cbb, V578]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38d, V506, 0xa9059cbb, V578]

================================

Block 0x639
[0x639:0x649]
---
Predecessors: [0x628]
Successors: [0x64a, 0x64b]
---
0x639 JUMPDEST
0x63a POP
0x63b POP
0x63c POP
0x63d PUSH1 0x40
0x63f MLOAD
0x640 DUP1
0x641 MLOAD
0x642 SWAP1
0x643 POP
0x644 ISZERO
0x645 ISZERO
0x646 PUSH2 0x64b
0x649 JUMPI
---
0x639: JUMPDEST 
0x63d: V597 = 0x40
0x63f: V598 = M[0x40]
0x641: V599 = M[V598]
0x644: V600 = ISZERO V599
0x645: V601 = ISZERO V600
0x646: V602 = 0x64b
0x649: JUMPI 0x64b V601
---
Entry stack: [V12, 0x38d, V506, 0xa9059cbb, V578]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x38d]

================================

Block 0x64a
[0x64a:0x64a]
---
Predecessors: [0x639]
Successors: []
---
0x64a INVALID
---
0x64a: INVALID 
---
Entry stack: [V12, 0x38d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38d]

================================

Block 0x64b
[0x64b:0x64b]
---
Predecessors: [0x639]
Successors: [0x64c]
---
0x64b JUMPDEST
---
0x64b: JUMPDEST 
---
Entry stack: [V12, 0x38d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38d]

================================

Block 0x64c
[0x64c:0x64c]
---
Predecessors: [0x64b]
Successors: [0x64d]
---
0x64c JUMPDEST
---
0x64c: JUMPDEST 
---
Entry stack: [V12, 0x38d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x38d]

================================

Block 0x64d
[0x64d:0x64e]
---
Predecessors: [0x64c]
Successors: [0x38d]
---
0x64d JUMPDEST
0x64e JUMP
---
0x64d: JUMPDEST 
0x64e: JUMP 0x38d
---
Entry stack: [V12, 0x38d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x64f
[0x64f:0x654]
---
Predecessors: [0x3af]
Successors: [0x20e]
---
0x64f JUMPDEST
0x650 PUSH1 0x3
0x652 SLOAD
0x653 DUP2
0x654 JUMP
---
0x64f: JUMPDEST 
0x650: V603 = 0x3
0x652: V604 = S[0x3]
0x654: JUMP 0x20e
---
Entry stack: [V12, 0x20e]
Stack pops: 1
Stack additions: [S0, V604]
Exit stack: [V12, 0x20e, V604]

================================

Block 0x655
[0x655:0x663]
---
Predecessors: [0x3d4]
Successors: [0x31f]
---
0x655 JUMPDEST
0x656 PUSH1 0x1
0x658 SLOAD
0x659 PUSH1 0x1
0x65b PUSH1 0xa0
0x65d PUSH1 0x2
0x65f EXP
0x660 SUB
0x661 AND
0x662 DUP2
0x663 JUMP
---
0x655: JUMPDEST 
0x656: V605 = 0x1
0x658: V606 = S[0x1]
0x659: V607 = 0x1
0x65b: V608 = 0xa0
0x65d: V609 = 0x2
0x65f: V610 = EXP 0x2 0xa0
0x660: V611 = SUB 0x10000000000000000000000000000000000000000 0x1
0x661: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V606
0x663: JUMP 0x31f
---
Entry stack: [V12, 0x31f]
Stack pops: 1
Stack additions: [S0, V612]
Exit stack: [V12, 0x31f, V612]

================================

Block 0x664
[0x664:0x670]
---
Predecessors: []
Successors: [0x671, 0x672]
---
0x664 JUMPDEST
0x665 PUSH1 0x0
0x667 DUP1
0x668 DUP3
0x669 DUP5
0x66a DUP2
0x66b ISZERO
0x66c ISZERO
0x66d PUSH2 0x672
0x670 JUMPI
---
0x664: JUMPDEST 
0x665: V613 = 0x0
0x66b: V614 = ISZERO S0
0x66c: V615 = ISZERO V614
0x66d: V616 = 0x672
0x670: JUMPI 0x672 V615
---
Entry stack: []
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0x671
[0x671:0x671]
---
Predecessors: [0x664]
Successors: []
---
0x671 INVALID
---
0x671: INVALID 
---
Entry stack: [S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x672
[0x672:0x678]
---
Predecessors: [0x664]
Successors: [0x679]
---
0x672 JUMPDEST
0x673 DIV
0x674 SWAP1
0x675 POP
0x676 DUP1
0x677 SWAP2
0x678 POP
---
0x672: JUMPDEST 
0x673: V617 = DIV S0 S1
---
Entry stack: [S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 4
Stack additions: [V617, V617]
Exit stack: [S5, S4, V617, V617]

================================

Block 0x679
[0x679:0x6ae]
---
Predecessors: [0x672]
Successors: []
---
0x679 JUMPDEST
0x67a POP
0x67b SWAP3
0x67c SWAP2
0x67d POP
0x67e POP
0x67f JUMP
0x680 STOP
0x681 LOG1
0x682 PUSH6 0x627a7a723058
0x689 SHA3
0x68a PUSH13 0x5766e3da25991c340fbb1d8887
0x698 MISSING 0xae
0x699 PUSH21 0xd62c72a7587dd2e582ea9dd6f87697490029
---
0x679: JUMPDEST 
0x67f: JUMP S4
0x680: STOP 
0x681: LOG S0 S1 S2
0x682: V618 = 0x627a7a723058
0x689: V619 = SHA3 0x627a7a723058 S3
0x68a: V620 = 0x5766e3da25991c340fbb1d8887
0x698: MISSING 0xae
0x699: V621 = 0xd62c72a7587dd2e582ea9dd6f87697490029
---
Entry stack: [S3, S2, V617, V617]
Stack pops: 34
Stack additions: [0xd62c72a7587dd2e582ea9dd6f87697490029]
Exit stack: []

================================

Function 0:
Public function signature: 0x10700d90
Entry block: 0x1fb
Exit block: 0x20e
Body: 0x1fb, 0x202, 0x206, 0x20e, 0x441

Function 1:
Public function signature: 0x29dc7205
Entry block: 0x220
Exit block: 0x20e
Body: 0x20e, 0x220, 0x227, 0x22b, 0x447

Function 2:
Public function signature: 0x29dcb0cf
Entry block: 0x245
Exit block: 0x20e
Body: 0x20e, 0x245, 0x24c, 0x250, 0x456

Function 3:
Public function signature: 0x6b4a6ded
Entry block: 0x26a
Exit block: 0x20e
Body: 0x20e, 0x26a, 0x271, 0x275, 0x45c

Function 4:
Public function signature: 0x6dbc4582
Entry block: 0x28f
Exit block: 0x20e
Body: 0x20e, 0x28f, 0x296, 0x29a, 0x462

Function 5:
Public function signature: 0x755e3e28
Entry block: 0x2b4
Exit block: 0x20e
Body: 0x20e, 0x2b4, 0x2bb, 0x2bf, 0x470

Function 6:
Public function signature: 0x76d5235c
Entry block: 0x2d9
Exit block: 0x2f8
Body: 0x2d9, 0x2e0, 0x2e4, 0x2f8, 0x476

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x30c
Exit block: 0x31f
Body: 0x30c, 0x313, 0x317, 0x31f, 0x48b

Function 8:
Public function signature: 0x9b19251a
Entry block: 0x33b
Exit block: 0x2f8
Body: 0x2f8, 0x33b, 0x342, 0x346, 0x49a

Function 9:
Public function signature: 0xa6f9dae1
Entry block: 0x36e
Exit block: 0x38d
Body: 0x36e, 0x375, 0x379, 0x38d, 0x4af, 0x4c6, 0x4ca, 0x4f3, 0x4f4

Function 10:
Public function signature: 0xd56b2889
Entry block: 0x38f
Exit block: 0x38d
Body: 0x38d, 0x38f, 0x396, 0x39a, 0x4f7, 0x50e, 0x512, 0x51c, 0x520, 0x555, 0x556, 0x5bd, 0x5c1, 0x5ce, 0x5d2, 0x624, 0x628, 0x635, 0x639, 0x64a, 0x64b, 0x64c, 0x64d

Function 11:
Public function signature: 0xf0ea4bfc
Entry block: 0x3a4
Exit block: 0x20e
Body: 0x20e, 0x3a4, 0x3ab, 0x3af, 0x64f

Function 12:
Public function signature: 0xfc0c546a
Entry block: 0x3c9
Exit block: 0x31f
Body: 0x31f, 0x3c9, 0x3d0, 0x3d4, 0x655

Function 13:
Public fallback function
Entry block: 0xa9
Exit block: 0x1f6
Body: 0xa9, 0xaa, 0xbb, 0xcc, 0xd3, 0xd7, 0xfb, 0xff, 0x10b, 0x12f, 0x136, 0x139, 0x145, 0x1cb, 0x1cf, 0x1dc, 0x1e0, 0x1f1, 0x1f2, 0x1f3, 0x1f4, 0x1f6, 0x3f8, 0x405, 0x410, 0x411, 0x414, 0x41b, 0x41c, 0x420, 0x427, 0x435

