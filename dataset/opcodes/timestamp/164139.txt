Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8a
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8a
0xc: JUMPI 0x8a V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x6b9]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x27ebcf0e
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x6b9
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x27ebcf0e
0x22: V15 = EQ V13 0x27ebcf0e
0x23: V16 = 0x6b9
0x26: JUMPI 0x6b9 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x6e8]
---
0x27 DUP1
0x28 PUSH4 0x497fb5b9
0x2d EQ
0x2e PUSH2 0x6e8
0x31 JUMPI
---
0x28: V17 = 0x497fb5b9
0x2d: V18 = EQ 0x497fb5b9 V13
0x2e: V19 = 0x6e8
0x31: JUMPI 0x6e8 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x70f]
---
0x32 DUP1
0x33 PUSH4 0x519ee19e
0x38 EQ
0x39 PUSH2 0x70f
0x3c JUMPI
---
0x33: V20 = 0x519ee19e
0x38: V21 = EQ 0x519ee19e V13
0x39: V22 = 0x70f
0x3c: JUMPI 0x70f V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x734]
---
0x3d DUP1
0x3e PUSH4 0x8da5cb5b
0x43 EQ
0x44 PUSH2 0x734
0x47 JUMPI
---
0x3e: V23 = 0x8da5cb5b
0x43: V24 = EQ 0x8da5cb5b V13
0x44: V25 = 0x734
0x47: JUMPI 0x734 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x747]
---
0x48 DUP1
0x49 PUSH4 0x96c5406d
0x4e EQ
0x4f PUSH2 0x747
0x52 JUMPI
---
0x49: V26 = 0x96c5406d
0x4e: V27 = EQ 0x96c5406d V13
0x4f: V28 = 0x747
0x52: JUMPI 0x747 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x75a]
---
0x53 DUP1
0x54 PUSH4 0xa035b1fe
0x59 EQ
0x5a PUSH2 0x75a
0x5d JUMPI
---
0x54: V29 = 0xa035b1fe
0x59: V30 = EQ 0xa035b1fe V13
0x5a: V31 = 0x75a
0x5d: JUMPI 0x75a V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x7e4]
---
0x5e DUP1
0x5f PUSH4 0xabd2cc5f
0x64 EQ
0x65 PUSH2 0x7e4
0x68 JUMPI
---
0x5f: V32 = 0xabd2cc5f
0x64: V33 = EQ 0xabd2cc5f V13
0x65: V34 = 0x7e4
0x68: JUMPI 0x7e4 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x7f7]
---
0x69 DUP1
0x6a PUSH4 0xf199a9b9
0x6f EQ
0x70 PUSH2 0x7f7
0x73 JUMPI
---
0x6a: V35 = 0xf199a9b9
0x6f: V36 = EQ 0xf199a9b9 V13
0x70: V37 = 0x7f7
0x73: JUMPI 0x7f7 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x80a]
---
0x74 DUP1
0x75 PUSH4 0xf30c4101
0x7a EQ
0x7b PUSH2 0x80a
0x7e JUMPI
---
0x75: V38 = 0xf30c4101
0x7a: V39 = EQ 0xf30c4101 V13
0x7b: V40 = 0x80a
0x7e: JUMPI 0x80a V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x81d]
---
0x7f DUP1
0x80 PUSH4 0xf9081ba2
0x85 EQ
0x86 PUSH2 0x81d
0x89 JUMPI
---
0x80: V41 = 0xf9081ba2
0x85: V42 = EQ 0xf9081ba2 V13
0x86: V43 = 0x81d
0x89: JUMPI 0x81d V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0xe2]
---
Predecessors: [0x0, 0x7f]
Successors: [0xe3, 0xe7]
---
0x8a JUMPDEST
0x8b PUSH1 0x0
0x8d DUP1
0x8e SLOAD
0x8f DUP2
0x90 SWAP1
0x91 DUP2
0x92 SWAP1
0x93 PUSH1 0x1
0x95 PUSH1 0xa0
0x97 PUSH1 0x2
0x99 EXP
0x9a SUB
0x9b AND
0x9c PUSH4 0x70a08231
0xa1 ADDRESS
0xa2 DUP4
0xa3 PUSH1 0x40
0xa5 MLOAD
0xa6 PUSH1 0x20
0xa8 ADD
0xa9 MSTORE
0xaa PUSH1 0x40
0xac MLOAD
0xad PUSH1 0xe0
0xaf PUSH1 0x2
0xb1 EXP
0xb2 PUSH4 0xffffffff
0xb7 DUP5
0xb8 AND
0xb9 MUL
0xba DUP2
0xbb MSTORE
0xbc PUSH1 0x1
0xbe PUSH1 0xa0
0xc0 PUSH1 0x2
0xc2 EXP
0xc3 SUB
0xc4 SWAP1
0xc5 SWAP2
0xc6 AND
0xc7 PUSH1 0x4
0xc9 DUP3
0xca ADD
0xcb MSTORE
0xcc PUSH1 0x24
0xce ADD
0xcf PUSH1 0x20
0xd1 PUSH1 0x40
0xd3 MLOAD
0xd4 DUP1
0xd5 DUP4
0xd6 SUB
0xd7 DUP2
0xd8 PUSH1 0x0
0xda DUP8
0xdb DUP1
0xdc EXTCODESIZE
0xdd ISZERO
0xde ISZERO
0xdf PUSH2 0xe7
0xe2 JUMPI
---
0x8a: JUMPDEST 
0x8b: V44 = 0x0
0x8e: V45 = S[0x0]
0x93: V46 = 0x1
0x95: V47 = 0xa0
0x97: V48 = 0x2
0x99: V49 = EXP 0x2 0xa0
0x9a: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0x9c: V52 = 0x70a08231
0xa1: V53 = ADDRESS
0xa3: V54 = 0x40
0xa5: V55 = M[0x40]
0xa6: V56 = 0x20
0xa8: V57 = ADD 0x20 V55
0xa9: M[V57] = 0x0
0xaa: V58 = 0x40
0xac: V59 = M[0x40]
0xad: V60 = 0xe0
0xaf: V61 = 0x2
0xb1: V62 = EXP 0x2 0xe0
0xb2: V63 = 0xffffffff
0xb8: V64 = AND 0x70a08231 0xffffffff
0xb9: V65 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xbb: M[V59] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xbc: V66 = 0x1
0xbe: V67 = 0xa0
0xc0: V68 = 0x2
0xc2: V69 = EXP 0x2 0xa0
0xc3: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc6: V71 = AND V53 0xffffffffffffffffffffffffffffffffffffffff
0xc7: V72 = 0x4
0xca: V73 = ADD V59 0x4
0xcb: M[V73] = V71
0xcc: V74 = 0x24
0xce: V75 = ADD 0x24 V59
0xcf: V76 = 0x20
0xd1: V77 = 0x40
0xd3: V78 = M[0x40]
0xd6: V79 = SUB V75 V78
0xd8: V80 = 0x0
0xdc: V81 = EXTCODESIZE V51
0xdd: V82 = ISZERO V81
0xde: V83 = ISZERO V82
0xdf: V84 = 0xe7
0xe2: JUMPI 0xe7 V83
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V51, 0x70a08231, V75, 0x20, V78, V79, V78, 0x0, V51]
Exit stack: [V13, 0x0, 0x0, 0x0, V51, 0x70a08231, V75, 0x20, V78, V79, V78, 0x0, V51]

================================

Block 0xe3
[0xe3:0xe6]
---
Predecessors: [0x8a]
Successors: []
---
0xe3 PUSH1 0x0
0xe5 DUP1
0xe6 REVERT
---
0xe3: V85 = 0x0
0xe6: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0, 0x0, 0x0, V51, 0x70a08231, V75, 0x20, V78, V79, V78, 0x0, V51]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0, V51, 0x70a08231, V75, 0x20, V78, V79, V78, 0x0, V51]

================================

Block 0xe7
[0xe7:0xf3]
---
Predecessors: [0x8a]
Successors: [0xf4, 0xf8]
---
0xe7 JUMPDEST
0xe8 PUSH2 0x2c6
0xeb GAS
0xec SUB
0xed CALL
0xee ISZERO
0xef ISZERO
0xf0 PUSH2 0xf8
0xf3 JUMPI
---
0xe7: JUMPDEST 
0xe8: V86 = 0x2c6
0xeb: V87 = GAS
0xec: V88 = SUB V87 0x2c6
0xed: V89 = CALL V88 V51 0x0 V78 V79 V78 0x20
0xee: V90 = ISZERO V89
0xef: V91 = ISZERO V90
0xf0: V92 = 0xf8
0xf3: JUMPI 0xf8 V91
---
Entry stack: [V13, 0x0, 0x0, 0x0, V51, 0x70a08231, V75, 0x20, V78, V79, V78, 0x0, V51]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0, V51, 0x70a08231, V75]

================================

Block 0xf4
[0xf4:0xf7]
---
Predecessors: [0xe7]
Successors: []
---
0xf4 PUSH1 0x0
0xf6 DUP1
0xf7 REVERT
---
0xf4: V93 = 0x0
0xf7: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0, 0x0, 0x0, V51, 0x70a08231, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0, V51, 0x70a08231, V75]

================================

Block 0xf8
[0xf8:0x10e]
---
Predecessors: [0xe7]
Successors: [0x10f, 0x145]
---
0xf8 JUMPDEST
0xf9 POP
0xfa POP
0xfb POP
0xfc PUSH1 0x40
0xfe MLOAD
0xff DUP1
0x100 MLOAD
0x101 PUSH1 0x9
0x103 SSTORE
0x104 POP
0x105 PUSH1 0x3
0x107 SLOAD
0x108 TIMESTAMP
0x109 LT
0x10a ISZERO
0x10b PUSH2 0x145
0x10e JUMPI
---
0xf8: JUMPDEST 
0xfc: V94 = 0x40
0xfe: V95 = M[0x40]
0x100: V96 = M[V95]
0x101: V97 = 0x9
0x103: S[0x9] = V96
0x105: V98 = 0x3
0x107: V99 = S[0x3]
0x108: V100 = TIMESTAMP
0x109: V101 = LT V100 V99
0x10a: V102 = ISZERO V101
0x10b: V103 = 0x145
0x10e: JUMPI 0x145 V102
---
Entry stack: [V13, 0x0, 0x0, 0x0, V51, 0x70a08231, V75]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0]

================================

Block 0x10f
[0x10f:0x13b]
---
Predecessors: [0xf8]
Successors: [0x13c, 0x140]
---
0x10f PUSH1 0x1
0x111 PUSH1 0xa0
0x113 PUSH1 0x2
0x115 EXP
0x116 SUB
0x117 CALLER
0x118 AND
0x119 CALLVALUE
0x11a DUP1
0x11b ISZERO
0x11c PUSH2 0x8fc
0x11f MUL
0x120 SWAP1
0x121 PUSH1 0x40
0x123 MLOAD
0x124 PUSH1 0x0
0x126 PUSH1 0x40
0x128 MLOAD
0x129 DUP1
0x12a DUP4
0x12b SUB
0x12c DUP2
0x12d DUP6
0x12e DUP9
0x12f DUP9
0x130 CALL
0x131 SWAP4
0x132 POP
0x133 POP
0x134 POP
0x135 POP
0x136 ISZERO
0x137 ISZERO
0x138 PUSH2 0x140
0x13b JUMPI
---
0x10f: V104 = 0x1
0x111: V105 = 0xa0
0x113: V106 = 0x2
0x115: V107 = EXP 0x2 0xa0
0x116: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x117: V109 = CALLER
0x118: V110 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x119: V111 = CALLVALUE
0x11b: V112 = ISZERO V111
0x11c: V113 = 0x8fc
0x11f: V114 = MUL 0x8fc V112
0x121: V115 = 0x40
0x123: V116 = M[0x40]
0x124: V117 = 0x0
0x126: V118 = 0x40
0x128: V119 = M[0x40]
0x12b: V120 = SUB V116 V119
0x130: V121 = CALL V114 V110 V111 V119 V120 V119 0x0
0x136: V122 = ISZERO V121
0x137: V123 = ISZERO V122
0x138: V124 = 0x140
0x13b: JUMPI 0x140 V123
---
Entry stack: [V13, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0]

================================

Block 0x13c
[0x13c:0x13f]
---
Predecessors: [0x10f]
Successors: []
---
0x13c PUSH1 0x0
0x13e DUP1
0x13f REVERT
---
0x13c: V125 = 0x0
0x13f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0]

================================

Block 0x140
[0x140:0x144]
---
Predecessors: [0x10f, 0x181, 0x311, 0x493]
Successors: [0x644]
---
0x140 JUMPDEST
0x141 PUSH2 0x644
0x144 JUMP
---
0x140: JUMPDEST 
0x141: V126 = 0x644
0x144: JUMP 0x644
---
Entry stack: [V13, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S2, S1, 0x0]

================================

Block 0x145
[0x145:0x14f]
---
Predecessors: [0xf8]
Successors: [0x150, 0x305]
---
0x145 JUMPDEST
0x146 PUSH1 0x4
0x148 SLOAD
0x149 TIMESTAMP
0x14a GT
0x14b ISZERO
0x14c PUSH2 0x305
0x14f JUMPI
---
0x145: JUMPDEST 
0x146: V127 = 0x4
0x148: V128 = S[0x4]
0x149: V129 = TIMESTAMP
0x14a: V130 = GT V129 V128
0x14b: V131 = ISZERO V130
0x14c: V132 = 0x305
0x14f: JUMPI 0x305 V131
---
Entry stack: [V13, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0]

================================

Block 0x150
[0x150:0x17c]
---
Predecessors: [0x145]
Successors: [0x17d, 0x181]
---
0x150 PUSH1 0x1
0x152 PUSH1 0xa0
0x154 PUSH1 0x2
0x156 EXP
0x157 SUB
0x158 CALLER
0x159 AND
0x15a CALLVALUE
0x15b DUP1
0x15c ISZERO
0x15d PUSH2 0x8fc
0x160 MUL
0x161 SWAP1
0x162 PUSH1 0x40
0x164 MLOAD
0x165 PUSH1 0x0
0x167 PUSH1 0x40
0x169 MLOAD
0x16a DUP1
0x16b DUP4
0x16c SUB
0x16d DUP2
0x16e DUP6
0x16f DUP9
0x170 DUP9
0x171 CALL
0x172 SWAP4
0x173 POP
0x174 POP
0x175 POP
0x176 POP
0x177 ISZERO
0x178 ISZERO
0x179 PUSH2 0x181
0x17c JUMPI
---
0x150: V133 = 0x1
0x152: V134 = 0xa0
0x154: V135 = 0x2
0x156: V136 = EXP 0x2 0xa0
0x157: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x158: V138 = CALLER
0x159: V139 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x15a: V140 = CALLVALUE
0x15c: V141 = ISZERO V140
0x15d: V142 = 0x8fc
0x160: V143 = MUL 0x8fc V141
0x162: V144 = 0x40
0x164: V145 = M[0x40]
0x165: V146 = 0x0
0x167: V147 = 0x40
0x169: V148 = M[0x40]
0x16c: V149 = SUB V145 V148
0x171: V150 = CALL V143 V139 V140 V148 V149 V148 0x0
0x177: V151 = ISZERO V150
0x178: V152 = ISZERO V151
0x179: V153 = 0x181
0x17c: JUMPI 0x181 V152
---
Entry stack: [V13, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0]

================================

Block 0x17d
[0x17d:0x180]
---
Predecessors: [0x150]
Successors: []
---
0x17d PUSH1 0x0
0x17f DUP1
0x180 REVERT
---
0x17d: V154 = 0x0
0x180: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0]

================================

Block 0x181
[0x181:0x192]
---
Predecessors: [0x150]
Successors: [0x140, 0x193]
---
0x181 JUMPDEST
0x182 PUSH1 0xa
0x184 SLOAD
0x185 PUSH2 0x100
0x188 SWAP1
0x189 DIV
0x18a PUSH1 0xff
0x18c AND
0x18d ISZERO
0x18e ISZERO
0x18f PUSH2 0x140
0x192 JUMPI
---
0x181: JUMPDEST 
0x182: V155 = 0xa
0x184: V156 = S[0xa]
0x185: V157 = 0x100
0x189: V158 = DIV V156 0x100
0x18a: V159 = 0xff
0x18c: V160 = AND 0xff V158
0x18d: V161 = ISZERO V160
0x18e: V162 = ISZERO V161
0x18f: V163 = 0x140
0x192: JUMPI 0x140 V162
---
Entry stack: [V13, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0]

================================

Block 0x193
[0x193:0x1f9]
---
Predecessors: [0x181]
Successors: [0x1fa, 0x1fe]
---
0x193 PUSH1 0x0
0x195 DUP1
0x196 SLOAD
0x197 PUSH1 0x2
0x199 SLOAD
0x19a PUSH1 0x1
0x19c PUSH1 0xa0
0x19e PUSH1 0x2
0x1a0 EXP
0x1a1 SUB
0x1a2 SWAP2
0x1a3 DUP3
0x1a4 AND
0x1a5 SWAP3
0x1a6 PUSH4 0xa9059cbb
0x1ab SWAP3
0x1ac SWAP1
0x1ad SWAP2
0x1ae AND
0x1af SWAP1
0x1b0 DUP4
0x1b1 SWAP1
0x1b2 PUSH4 0x70a08231
0x1b7 SWAP1
0x1b8 ADDRESS
0x1b9 SWAP1
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 MSTORE
0x1c1 PUSH1 0x40
0x1c3 MLOAD
0x1c4 PUSH1 0xe0
0x1c6 PUSH1 0x2
0x1c8 EXP
0x1c9 PUSH4 0xffffffff
0x1ce DUP5
0x1cf AND
0x1d0 MUL
0x1d1 DUP2
0x1d2 MSTORE
0x1d3 PUSH1 0x1
0x1d5 PUSH1 0xa0
0x1d7 PUSH1 0x2
0x1d9 EXP
0x1da SUB
0x1db SWAP1
0x1dc SWAP2
0x1dd AND
0x1de PUSH1 0x4
0x1e0 DUP3
0x1e1 ADD
0x1e2 MSTORE
0x1e3 PUSH1 0x24
0x1e5 ADD
0x1e6 PUSH1 0x20
0x1e8 PUSH1 0x40
0x1ea MLOAD
0x1eb DUP1
0x1ec DUP4
0x1ed SUB
0x1ee DUP2
0x1ef PUSH1 0x0
0x1f1 DUP8
0x1f2 DUP1
0x1f3 EXTCODESIZE
0x1f4 ISZERO
0x1f5 ISZERO
0x1f6 PUSH2 0x1fe
0x1f9 JUMPI
---
0x193: V164 = 0x0
0x196: V165 = S[0x0]
0x197: V166 = 0x2
0x199: V167 = S[0x2]
0x19a: V168 = 0x1
0x19c: V169 = 0xa0
0x19e: V170 = 0x2
0x1a0: V171 = EXP 0x2 0xa0
0x1a1: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a4: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x1a6: V174 = 0xa9059cbb
0x1ae: V175 = AND V167 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V176 = 0x70a08231
0x1b8: V177 = ADDRESS
0x1ba: V178 = 0x40
0x1bc: V179 = M[0x40]
0x1bd: V180 = 0x20
0x1bf: V181 = ADD 0x20 V179
0x1c0: M[V181] = 0x0
0x1c1: V182 = 0x40
0x1c3: V183 = M[0x40]
0x1c4: V184 = 0xe0
0x1c6: V185 = 0x2
0x1c8: V186 = EXP 0x2 0xe0
0x1c9: V187 = 0xffffffff
0x1cf: V188 = AND 0x70a08231 0xffffffff
0x1d0: V189 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x1d2: M[V183] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x1d3: V190 = 0x1
0x1d5: V191 = 0xa0
0x1d7: V192 = 0x2
0x1d9: V193 = EXP 0x2 0xa0
0x1da: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1dd: V195 = AND V177 0xffffffffffffffffffffffffffffffffffffffff
0x1de: V196 = 0x4
0x1e1: V197 = ADD V183 0x4
0x1e2: M[V197] = V195
0x1e3: V198 = 0x24
0x1e5: V199 = ADD 0x24 V183
0x1e6: V200 = 0x20
0x1e8: V201 = 0x40
0x1ea: V202 = M[0x40]
0x1ed: V203 = SUB V199 V202
0x1ef: V204 = 0x0
0x1f3: V205 = EXTCODESIZE V173
0x1f4: V206 = ISZERO V205
0x1f5: V207 = ISZERO V206
0x1f6: V208 = 0x1fe
0x1f9: JUMPI 0x1fe V207
---
Entry stack: [V13, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V173, 0xa9059cbb, V175, V173, 0x70a08231, V199, 0x20, V202, V203, V202, 0x0, V173]
Exit stack: [V13, 0x0, 0x0, 0x0, V173, 0xa9059cbb, V175, V173, 0x70a08231, V199, 0x20, V202, V203, V202, 0x0, V173]

================================

Block 0x1fa
[0x1fa:0x1fd]
---
Predecessors: [0x193]
Successors: []
---
0x1fa PUSH1 0x0
0x1fc DUP1
0x1fd REVERT
---
0x1fa: V209 = 0x0
0x1fd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0, 0x0, 0x0, V173, 0xa9059cbb, V175, V173, 0x70a08231, V199, 0x20, V202, V203, V202, 0x0, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0, V173, 0xa9059cbb, V175, V173, 0x70a08231, V199, 0x20, V202, V203, V202, 0x0, V173]

================================

Block 0x1fe
[0x1fe:0x20a]
---
Predecessors: [0x193]
Successors: [0x20b, 0x20f]
---
0x1fe JUMPDEST
0x1ff PUSH2 0x2c6
0x202 GAS
0x203 SUB
0x204 CALL
0x205 ISZERO
0x206 ISZERO
0x207 PUSH2 0x20f
0x20a JUMPI
---
0x1fe: JUMPDEST 
0x1ff: V210 = 0x2c6
0x202: V211 = GAS
0x203: V212 = SUB V211 0x2c6
0x204: V213 = CALL V212 V173 0x0 V202 V203 V202 0x20
0x205: V214 = ISZERO V213
0x206: V215 = ISZERO V214
0x207: V216 = 0x20f
0x20a: JUMPI 0x20f V215
---
Entry stack: [V13, 0x0, 0x0, 0x0, V173, 0xa9059cbb, V175, V173, 0x70a08231, V199, 0x20, V202, V203, V202, 0x0, V173]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0, V173, 0xa9059cbb, V175, V173, 0x70a08231, V199]

================================

Block 0x20b
[0x20b:0x20e]
---
Predecessors: [0x1fe]
Successors: []
---
0x20b PUSH1 0x0
0x20d DUP1
0x20e REVERT
---
0x20b: V217 = 0x0
0x20e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0, 0x0, 0x0, V173, 0xa9059cbb, V175, V173, 0x70a08231, V199]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0, V173, 0xa9059cbb, V175, V173, 0x70a08231, V199]

================================

Block 0x20f
[0x20f:0x257]
---
Predecessors: [0x1fe]
Successors: [0x258, 0x25c]
---
0x20f JUMPDEST
0x210 POP
0x211 POP
0x212 POP
0x213 PUSH1 0x40
0x215 MLOAD
0x216 DUP1
0x217 MLOAD
0x218 SWAP1
0x219 POP
0x21a PUSH1 0x40
0x21c MLOAD
0x21d PUSH1 0xe0
0x21f PUSH1 0x2
0x221 EXP
0x222 PUSH4 0xffffffff
0x227 DUP6
0x228 AND
0x229 MUL
0x22a DUP2
0x22b MSTORE
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 PUSH1 0x2
0x232 EXP
0x233 SUB
0x234 SWAP1
0x235 SWAP3
0x236 AND
0x237 PUSH1 0x4
0x239 DUP4
0x23a ADD
0x23b MSTORE
0x23c PUSH1 0x24
0x23e DUP3
0x23f ADD
0x240 MSTORE
0x241 PUSH1 0x44
0x243 ADD
0x244 PUSH1 0x0
0x246 PUSH1 0x40
0x248 MLOAD
0x249 DUP1
0x24a DUP4
0x24b SUB
0x24c DUP2
0x24d PUSH1 0x0
0x24f DUP8
0x250 DUP1
0x251 EXTCODESIZE
0x252 ISZERO
0x253 ISZERO
0x254 PUSH2 0x25c
0x257 JUMPI
---
0x20f: JUMPDEST 
0x213: V218 = 0x40
0x215: V219 = M[0x40]
0x217: V220 = M[V219]
0x21a: V221 = 0x40
0x21c: V222 = M[0x40]
0x21d: V223 = 0xe0
0x21f: V224 = 0x2
0x221: V225 = EXP 0x2 0xe0
0x222: V226 = 0xffffffff
0x228: V227 = AND 0xa9059cbb 0xffffffff
0x229: V228 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x22b: M[V222] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x22c: V229 = 0x1
0x22e: V230 = 0xa0
0x230: V231 = 0x2
0x232: V232 = EXP 0x2 0xa0
0x233: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V234 = AND V175 0xffffffffffffffffffffffffffffffffffffffff
0x237: V235 = 0x4
0x23a: V236 = ADD V222 0x4
0x23b: M[V236] = V234
0x23c: V237 = 0x24
0x23f: V238 = ADD V222 0x24
0x240: M[V238] = V220
0x241: V239 = 0x44
0x243: V240 = ADD 0x44 V222
0x244: V241 = 0x0
0x246: V242 = 0x40
0x248: V243 = M[0x40]
0x24b: V244 = SUB V240 V243
0x24d: V245 = 0x0
0x251: V246 = EXTCODESIZE V173
0x252: V247 = ISZERO V246
0x253: V248 = ISZERO V247
0x254: V249 = 0x25c
0x257: JUMPI 0x25c V248
---
Entry stack: [V13, 0x0, 0x0, 0x0, V173, 0xa9059cbb, V175, V173, 0x70a08231, V199]
Stack pops: 6
Stack additions: [S5, S4, V240, 0x0, V243, V244, V243, 0x0, S5]
Exit stack: [V13, 0x0, 0x0, 0x0, V173, 0xa9059cbb, V240, 0x0, V243, V244, V243, 0x0, V173]

================================

Block 0x258
[0x258:0x25b]
---
Predecessors: [0x20f]
Successors: []
---
0x258 PUSH1 0x0
0x25a DUP1
0x25b REVERT
---
0x258: V250 = 0x0
0x25b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0, 0x0, 0x0, V173, 0xa9059cbb, V240, 0x0, V243, V244, V243, 0x0, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0, V173, 0xa9059cbb, V240, 0x0, V243, V244, V243, 0x0, V173]

================================

Block 0x25c
[0x25c:0x268]
---
Predecessors: [0x20f]
Successors: [0x269, 0x26d]
---
0x25c JUMPDEST
0x25d PUSH2 0x2c6
0x260 GAS
0x261 SUB
0x262 CALL
0x263 ISZERO
0x264 ISZERO
0x265 PUSH2 0x26d
0x268 JUMPI
---
0x25c: JUMPDEST 
0x25d: V251 = 0x2c6
0x260: V252 = GAS
0x261: V253 = SUB V252 0x2c6
0x262: V254 = CALL V253 V173 0x0 V243 V244 V243 0x0
0x263: V255 = ISZERO V254
0x264: V256 = ISZERO V255
0x265: V257 = 0x26d
0x268: JUMPI 0x26d V256
---
Entry stack: [V13, 0x0, 0x0, 0x0, V173, 0xa9059cbb, V240, 0x0, V243, V244, V243, 0x0, V173]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0, V173, 0xa9059cbb, V240]

================================

Block 0x269
[0x269:0x26c]
---
Predecessors: [0x25c]
Successors: []
---
0x269 PUSH1 0x0
0x26b DUP1
0x26c REVERT
---
0x269: V258 = 0x0
0x26c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0, 0x0, 0x0, V173, 0xa9059cbb, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0, V173, 0xa9059cbb, V240]

================================

Block 0x26d
[0x26d:0x2c6]
---
Predecessors: [0x25c]
Successors: [0x2c7, 0x2cb]
---
0x26d JUMPDEST
0x26e POP
0x26f POP
0x270 PUSH1 0x0
0x272 DUP1
0x273 SLOAD
0x274 PUSH1 0x1
0x276 PUSH1 0xa0
0x278 PUSH1 0x2
0x27a EXP
0x27b SUB
0x27c AND
0x27d SWAP2
0x27e POP
0x27f PUSH4 0x70a08231
0x284 SWAP1
0x285 ADDRESS
0x286 SWAP1
0x287 PUSH1 0x40
0x289 MLOAD
0x28a PUSH1 0x20
0x28c ADD
0x28d MSTORE
0x28e PUSH1 0x40
0x290 MLOAD
0x291 PUSH1 0xe0
0x293 PUSH1 0x2
0x295 EXP
0x296 PUSH4 0xffffffff
0x29b DUP5
0x29c AND
0x29d MUL
0x29e DUP2
0x29f MSTORE
0x2a0 PUSH1 0x1
0x2a2 PUSH1 0xa0
0x2a4 PUSH1 0x2
0x2a6 EXP
0x2a7 SUB
0x2a8 SWAP1
0x2a9 SWAP2
0x2aa AND
0x2ab PUSH1 0x4
0x2ad DUP3
0x2ae ADD
0x2af MSTORE
0x2b0 PUSH1 0x24
0x2b2 ADD
0x2b3 PUSH1 0x20
0x2b5 PUSH1 0x40
0x2b7 MLOAD
0x2b8 DUP1
0x2b9 DUP4
0x2ba SUB
0x2bb DUP2
0x2bc PUSH1 0x0
0x2be DUP8
0x2bf DUP1
0x2c0 EXTCODESIZE
0x2c1 ISZERO
0x2c2 ISZERO
0x2c3 PUSH2 0x2cb
0x2c6 JUMPI
---
0x26d: JUMPDEST 
0x270: V259 = 0x0
0x273: V260 = S[0x0]
0x274: V261 = 0x1
0x276: V262 = 0xa0
0x278: V263 = 0x2
0x27a: V264 = EXP 0x2 0xa0
0x27b: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27c: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x27f: V267 = 0x70a08231
0x285: V268 = ADDRESS
0x287: V269 = 0x40
0x289: V270 = M[0x40]
0x28a: V271 = 0x20
0x28c: V272 = ADD 0x20 V270
0x28d: M[V272] = 0x0
0x28e: V273 = 0x40
0x290: V274 = M[0x40]
0x291: V275 = 0xe0
0x293: V276 = 0x2
0x295: V277 = EXP 0x2 0xe0
0x296: V278 = 0xffffffff
0x29c: V279 = AND 0x70a08231 0xffffffff
0x29d: V280 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x29f: M[V274] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2a0: V281 = 0x1
0x2a2: V282 = 0xa0
0x2a4: V283 = 0x2
0x2a6: V284 = EXP 0x2 0xa0
0x2a7: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2aa: V286 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V287 = 0x4
0x2ae: V288 = ADD V274 0x4
0x2af: M[V288] = V286
0x2b0: V289 = 0x24
0x2b2: V290 = ADD 0x24 V274
0x2b3: V291 = 0x20
0x2b5: V292 = 0x40
0x2b7: V293 = M[0x40]
0x2ba: V294 = SUB V290 V293
0x2bc: V295 = 0x0
0x2c0: V296 = EXTCODESIZE V266
0x2c1: V297 = ISZERO V296
0x2c2: V298 = ISZERO V297
0x2c3: V299 = 0x2cb
0x2c6: JUMPI 0x2cb V298
---
Entry stack: [V13, 0x0, 0x0, 0x0, V173, 0xa9059cbb, V240]
Stack pops: 3
Stack additions: [V266, 0x70a08231, V290, 0x20, V293, V294, V293, 0x0, V266]
Exit stack: [V13, 0x0, 0x0, 0x0, V266, 0x70a08231, V290, 0x20, V293, V294, V293, 0x0, V266]

================================

Block 0x2c7
[0x2c7:0x2ca]
---
Predecessors: [0x26d]
Successors: []
---
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca REVERT
---
0x2c7: V300 = 0x0
0x2ca: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0, 0x0, 0x0, V266, 0x70a08231, V290, 0x20, V293, V294, V293, 0x0, V266]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0, V266, 0x70a08231, V290, 0x20, V293, V294, V293, 0x0, V266]

================================

Block 0x2cb
[0x2cb:0x2d7]
---
Predecessors: [0x26d]
Successors: [0x2d8, 0x2dc]
---
0x2cb JUMPDEST
0x2cc PUSH2 0x2c6
0x2cf GAS
0x2d0 SUB
0x2d1 CALL
0x2d2 ISZERO
0x2d3 ISZERO
0x2d4 PUSH2 0x2dc
0x2d7 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V301 = 0x2c6
0x2cf: V302 = GAS
0x2d0: V303 = SUB V302 0x2c6
0x2d1: V304 = CALL V303 V266 0x0 V293 V294 V293 0x20
0x2d2: V305 = ISZERO V304
0x2d3: V306 = ISZERO V305
0x2d4: V307 = 0x2dc
0x2d7: JUMPI 0x2dc V306
---
Entry stack: [V13, 0x0, 0x0, 0x0, V266, 0x70a08231, V290, 0x20, V293, V294, V293, 0x0, V266]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0, V266, 0x70a08231, V290]

================================

Block 0x2d8
[0x2d8:0x2db]
---
Predecessors: [0x2cb]
Successors: []
---
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db REVERT
---
0x2d8: V308 = 0x0
0x2db: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0, 0x0, 0x0, V266, 0x70a08231, V290]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0, V266, 0x70a08231, V290]

================================

Block 0x2dc
[0x2dc:0x304]
---
Predecessors: [0x2cb]
Successors: [0x644]
---
0x2dc JUMPDEST
0x2dd POP
0x2de POP
0x2df POP
0x2e0 PUSH1 0x40
0x2e2 MLOAD
0x2e3 DUP1
0x2e4 MLOAD
0x2e5 PUSH1 0x9
0x2e7 SSTORE
0x2e8 POP
0x2e9 PUSH1 0xa
0x2eb DUP1
0x2ec SLOAD
0x2ed PUSH1 0xff
0x2ef NOT
0x2f0 PUSH2 0xff00
0x2f3 NOT
0x2f4 SWAP1
0x2f5 SWAP2
0x2f6 AND
0x2f7 PUSH2 0x100
0x2fa OR
0x2fb AND
0x2fc PUSH1 0x1
0x2fe OR
0x2ff SWAP1
0x300 SSTORE
0x301 PUSH2 0x644
0x304 JUMP
---
0x2dc: JUMPDEST 
0x2e0: V309 = 0x40
0x2e2: V310 = M[0x40]
0x2e4: V311 = M[V310]
0x2e5: V312 = 0x9
0x2e7: S[0x9] = V311
0x2e9: V313 = 0xa
0x2ec: V314 = S[0xa]
0x2ed: V315 = 0xff
0x2ef: V316 = NOT 0xff
0x2f0: V317 = 0xff00
0x2f3: V318 = NOT 0xff00
0x2f6: V319 = AND V314 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff
0x2f7: V320 = 0x100
0x2fa: V321 = OR 0x100 V319
0x2fb: V322 = AND V321 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x2fc: V323 = 0x1
0x2fe: V324 = OR 0x1 V322
0x300: S[0xa] = V324
0x301: V325 = 0x644
0x304: JUMP 0x644
---
Entry stack: [V13, 0x0, 0x0, 0x0, V266, 0x70a08231, V290]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0]

================================

Block 0x305
[0x305:0x310]
---
Predecessors: [0x145]
Successors: [0x311, 0x342]
---
0x305 JUMPDEST
0x306 PUSH1 0xa
0x308 SLOAD
0x309 PUSH1 0xff
0x30b AND
0x30c ISZERO
0x30d PUSH2 0x342
0x310 JUMPI
---
0x305: JUMPDEST 
0x306: V326 = 0xa
0x308: V327 = S[0xa]
0x309: V328 = 0xff
0x30b: V329 = AND 0xff V327
0x30c: V330 = ISZERO V329
0x30d: V331 = 0x342
0x310: JUMPI 0x342 V330
---
Entry stack: [V13, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0]

================================

Block 0x311
[0x311:0x33d]
---
Predecessors: [0x305]
Successors: [0x140, 0x33e]
---
0x311 PUSH1 0x1
0x313 PUSH1 0xa0
0x315 PUSH1 0x2
0x317 EXP
0x318 SUB
0x319 CALLER
0x31a AND
0x31b CALLVALUE
0x31c DUP1
0x31d ISZERO
0x31e PUSH2 0x8fc
0x321 MUL
0x322 SWAP1
0x323 PUSH1 0x40
0x325 MLOAD
0x326 PUSH1 0x0
0x328 PUSH1 0x40
0x32a MLOAD
0x32b DUP1
0x32c DUP4
0x32d SUB
0x32e DUP2
0x32f DUP6
0x330 DUP9
0x331 DUP9
0x332 CALL
0x333 SWAP4
0x334 POP
0x335 POP
0x336 POP
0x337 POP
0x338 ISZERO
0x339 ISZERO
0x33a PUSH2 0x140
0x33d JUMPI
---
0x311: V332 = 0x1
0x313: V333 = 0xa0
0x315: V334 = 0x2
0x317: V335 = EXP 0x2 0xa0
0x318: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x319: V337 = CALLER
0x31a: V338 = AND V337 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V339 = CALLVALUE
0x31d: V340 = ISZERO V339
0x31e: V341 = 0x8fc
0x321: V342 = MUL 0x8fc V340
0x323: V343 = 0x40
0x325: V344 = M[0x40]
0x326: V345 = 0x0
0x328: V346 = 0x40
0x32a: V347 = M[0x40]
0x32d: V348 = SUB V344 V347
0x332: V349 = CALL V342 V338 V339 V347 V348 V347 0x0
0x338: V350 = ISZERO V349
0x339: V351 = ISZERO V350
0x33a: V352 = 0x140
0x33d: JUMPI 0x140 V351
---
Entry stack: [V13, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0]

================================

Block 0x33e
[0x33e:0x341]
---
Predecessors: [0x311]
Successors: []
---
0x33e PUSH1 0x0
0x340 DUP1
0x341 REVERT
---
0x33e: V353 = 0x0
0x341: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0]

================================

Block 0x342
[0x342:0x350]
---
Predecessors: [0x305]
Successors: [0x351, 0x352]
---
0x342 JUMPDEST
0x343 PUSH1 0x7
0x345 SLOAD
0x346 PUSH1 0x6
0x348 SLOAD
0x349 CALLVALUE
0x34a DUP2
0x34b ISZERO
0x34c ISZERO
0x34d PUSH2 0x352
0x350 JUMPI
---
0x342: JUMPDEST 
0x343: V354 = 0x7
0x345: V355 = S[0x7]
0x346: V356 = 0x6
0x348: V357 = S[0x6]
0x349: V358 = CALLVALUE
0x34b: V359 = ISZERO V357
0x34c: V360 = ISZERO V359
0x34d: V361 = 0x352
0x350: JUMPI 0x352 V360
---
Entry stack: [V13, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V355, V357, V358]
Exit stack: [V13, 0x0, 0x0, 0x0, V355, V357, V358]

================================

Block 0x351
[0x351:0x351]
---
Predecessors: [0x342]
Successors: []
---
0x351 INVALID
---
0x351: INVALID 
---
Entry stack: [V13, 0x0, 0x0, 0x0, V355, V357, V358]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0, V355, V357, V358]

================================

Block 0x352
[0x352:0x35e]
---
Predecessors: [0x342]
Successors: [0x35f, 0x390]
---
0x352 JUMPDEST
0x353 DIV
0x354 MUL
0x355 SWAP3
0x356 POP
0x357 PUSH1 0x0
0x359 DUP4
0x35a GT
0x35b PUSH2 0x390
0x35e JUMPI
---
0x352: JUMPDEST 
0x353: V362 = DIV V358 V357
0x354: V363 = MUL V362 V355
0x357: V364 = 0x0
0x35a: V365 = GT V363 0x0
0x35b: V366 = 0x390
0x35e: JUMPI 0x390 V365
---
Entry stack: [V13, 0x0, 0x0, 0x0, V355, V357, V358]
Stack pops: 6
Stack additions: [V363, S4, S3]
Exit stack: [V13, V363, 0x0, 0x0]

================================

Block 0x35f
[0x35f:0x38b]
---
Predecessors: [0x352]
Successors: [0x38c, 0x390]
---
0x35f PUSH1 0x1
0x361 PUSH1 0xa0
0x363 PUSH1 0x2
0x365 EXP
0x366 SUB
0x367 CALLER
0x368 AND
0x369 CALLVALUE
0x36a DUP1
0x36b ISZERO
0x36c PUSH2 0x8fc
0x36f MUL
0x370 SWAP1
0x371 PUSH1 0x40
0x373 MLOAD
0x374 PUSH1 0x0
0x376 PUSH1 0x40
0x378 MLOAD
0x379 DUP1
0x37a DUP4
0x37b SUB
0x37c DUP2
0x37d DUP6
0x37e DUP9
0x37f DUP9
0x380 CALL
0x381 SWAP4
0x382 POP
0x383 POP
0x384 POP
0x385 POP
0x386 ISZERO
0x387 ISZERO
0x388 PUSH2 0x390
0x38b JUMPI
---
0x35f: V367 = 0x1
0x361: V368 = 0xa0
0x363: V369 = 0x2
0x365: V370 = EXP 0x2 0xa0
0x366: V371 = SUB 0x10000000000000000000000000000000000000000 0x1
0x367: V372 = CALLER
0x368: V373 = AND V372 0xffffffffffffffffffffffffffffffffffffffff
0x369: V374 = CALLVALUE
0x36b: V375 = ISZERO V374
0x36c: V376 = 0x8fc
0x36f: V377 = MUL 0x8fc V375
0x371: V378 = 0x40
0x373: V379 = M[0x40]
0x374: V380 = 0x0
0x376: V381 = 0x40
0x378: V382 = M[0x40]
0x37b: V383 = SUB V379 V382
0x380: V384 = CALL V377 V373 V374 V382 V383 V382 0x0
0x386: V385 = ISZERO V384
0x387: V386 = ISZERO V385
0x388: V387 = 0x390
0x38b: JUMPI 0x390 V386
---
Entry stack: [V13, V363, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V363, 0x0, 0x0]

================================

Block 0x38c
[0x38c:0x38f]
---
Predecessors: [0x35f]
Successors: []
---
0x38c PUSH1 0x0
0x38e DUP1
0x38f REVERT
---
0x38c: V388 = 0x0
0x38f: REVERT 0x0 0x0
---
Entry stack: [V13, V363, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V363, 0x0, 0x0]

================================

Block 0x390
[0x390:0x398]
---
Predecessors: [0x352, 0x35f]
Successors: [0x399, 0x39d]
---
0x390 JUMPDEST
0x391 PUSH1 0x0
0x393 DUP4
0x394 GT
0x395 PUSH2 0x39d
0x398 JUMPI
---
0x390: JUMPDEST 
0x391: V389 = 0x0
0x394: V390 = GT V363 0x0
0x395: V391 = 0x39d
0x398: JUMPI 0x39d V390
---
Entry stack: [V13, V363, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, V363, 0x0, 0x0]

================================

Block 0x399
[0x399:0x39c]
---
Predecessors: [0x390]
Successors: []
---
0x399 PUSH1 0x0
0x39b DUP1
0x39c REVERT
---
0x399: V392 = 0x0
0x39c: REVERT 0x0 0x0
---
Entry stack: [V13, V363, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V363, 0x0, 0x0]

================================

Block 0x39d
[0x39d:0x3ac]
---
Predecessors: [0x390]
Successors: [0x3ad, 0x3ae]
---
0x39d JUMPDEST
0x39e PUSH1 0x7
0x3a0 SLOAD
0x3a1 PUSH1 0x6
0x3a3 SLOAD
0x3a4 DUP5
0x3a5 MUL
0x3a6 DUP2
0x3a7 ISZERO
0x3a8 ISZERO
0x3a9 PUSH2 0x3ae
0x3ac JUMPI
---
0x39d: JUMPDEST 
0x39e: V393 = 0x7
0x3a0: V394 = S[0x7]
0x3a1: V395 = 0x6
0x3a3: V396 = S[0x6]
0x3a5: V397 = MUL V363 V396
0x3a7: V398 = ISZERO V394
0x3a8: V399 = ISZERO V398
0x3a9: V400 = 0x3ae
0x3ac: JUMPI 0x3ae V399
---
Entry stack: [V13, V363, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V394, V397]
Exit stack: [V13, V363, 0x0, 0x0, V394, V397]

================================

Block 0x3ad
[0x3ad:0x3ad]
---
Predecessors: [0x39d]
Successors: []
---
0x3ad INVALID
---
0x3ad: INVALID 
---
Entry stack: [V13, V363, 0x0, 0x0, V394, V397]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V363, 0x0, 0x0, V394, V397]

================================

Block 0x3ae
[0x3ae:0x3bc]
---
Predecessors: [0x39d]
Successors: [0x3bd, 0x4c1]
---
0x3ae JUMPDEST
0x3af DIV
0x3b0 SWAP2
0x3b1 POP
0x3b2 DUP3
0x3b3 PUSH1 0x9
0x3b5 SLOAD
0x3b6 LT
0x3b7 ISZERO
0x3b8 ISZERO
0x3b9 PUSH2 0x4c1
0x3bc JUMPI
---
0x3ae: JUMPDEST 
0x3af: V401 = DIV V397 V394
0x3b3: V402 = 0x9
0x3b5: V403 = S[0x9]
0x3b6: V404 = LT V403 V363
0x3b7: V405 = ISZERO V404
0x3b8: V406 = ISZERO V405
0x3b9: V407 = 0x4c1
0x3bc: JUMPI 0x4c1 V406
---
Entry stack: [V13, V363, 0x0, 0x0, V394, V397]
Stack pops: 5
Stack additions: [S4, V401, S2]
Exit stack: [V13, V363, V401, 0x0]

================================

Block 0x3bd
[0x3bd:0x3ea]
---
Predecessors: [0x3ae]
Successors: [0x3eb, 0x3ef]
---
0x3bd PUSH1 0x1
0x3bf SLOAD
0x3c0 PUSH1 0x1
0x3c2 PUSH1 0xa0
0x3c4 PUSH1 0x2
0x3c6 EXP
0x3c7 SUB
0x3c8 AND
0x3c9 DUP3
0x3ca ISZERO
0x3cb PUSH2 0x8fc
0x3ce MUL
0x3cf DUP4
0x3d0 PUSH1 0x40
0x3d2 MLOAD
0x3d3 PUSH1 0x0
0x3d5 PUSH1 0x40
0x3d7 MLOAD
0x3d8 DUP1
0x3d9 DUP4
0x3da SUB
0x3db DUP2
0x3dc DUP6
0x3dd DUP9
0x3de DUP9
0x3df CALL
0x3e0 SWAP4
0x3e1 POP
0x3e2 POP
0x3e3 POP
0x3e4 POP
0x3e5 ISZERO
0x3e6 ISZERO
0x3e7 PUSH2 0x3ef
0x3ea JUMPI
---
0x3bd: V408 = 0x1
0x3bf: V409 = S[0x1]
0x3c0: V410 = 0x1
0x3c2: V411 = 0xa0
0x3c4: V412 = 0x2
0x3c6: V413 = EXP 0x2 0xa0
0x3c7: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c8: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x3ca: V416 = ISZERO V401
0x3cb: V417 = 0x8fc
0x3ce: V418 = MUL 0x8fc V416
0x3d0: V419 = 0x40
0x3d2: V420 = M[0x40]
0x3d3: V421 = 0x0
0x3d5: V422 = 0x40
0x3d7: V423 = M[0x40]
0x3da: V424 = SUB V420 V423
0x3df: V425 = CALL V418 V415 V401 V423 V424 V423 0x0
0x3e5: V426 = ISZERO V425
0x3e6: V427 = ISZERO V426
0x3e7: V428 = 0x3ef
0x3ea: JUMPI 0x3ef V427
---
Entry stack: [V13, V363, V401, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, V363, V401, 0x0]

================================

Block 0x3eb
[0x3eb:0x3ee]
---
Predecessors: [0x3bd]
Successors: []
---
0x3eb PUSH1 0x0
0x3ed DUP1
0x3ee REVERT
---
0x3eb: V429 = 0x0
0x3ee: REVERT 0x0 0x0
---
Entry stack: [V13, V363, V401, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V363, V401, 0x0]

================================

Block 0x3ef
[0x3ef:0x3f7]
---
Predecessors: [0x3bd]
Successors: [0x3f8, 0x42c]
---
0x3ef JUMPDEST
0x3f0 DUP2
0x3f1 CALLVALUE
0x3f2 GT
0x3f3 ISZERO
0x3f4 PUSH2 0x42c
0x3f7 JUMPI
---
0x3ef: JUMPDEST 
0x3f1: V430 = CALLVALUE
0x3f2: V431 = GT V430 V401
0x3f3: V432 = ISZERO V431
0x3f4: V433 = 0x42c
0x3f7: JUMPI 0x42c V432
---
Entry stack: [V13, V363, V401, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, V363, V401, 0x0]

================================

Block 0x3f8
[0x3f8:0x427]
---
Predecessors: [0x3ef]
Successors: [0x428, 0x42c]
---
0x3f8 CALLER
0x3f9 PUSH1 0x1
0x3fb PUSH1 0xa0
0x3fd PUSH1 0x2
0x3ff EXP
0x400 SUB
0x401 AND
0x402 PUSH2 0x8fc
0x405 DUP4
0x406 CALLVALUE
0x407 SUB
0x408 SWAP1
0x409 DUP2
0x40a ISZERO
0x40b MUL
0x40c SWAP1
0x40d PUSH1 0x40
0x40f MLOAD
0x410 PUSH1 0x0
0x412 PUSH1 0x40
0x414 MLOAD
0x415 DUP1
0x416 DUP4
0x417 SUB
0x418 DUP2
0x419 DUP6
0x41a DUP9
0x41b DUP9
0x41c CALL
0x41d SWAP4
0x41e POP
0x41f POP
0x420 POP
0x421 POP
0x422 ISZERO
0x423 ISZERO
0x424 PUSH2 0x42c
0x427 JUMPI
---
0x3f8: V434 = CALLER
0x3f9: V435 = 0x1
0x3fb: V436 = 0xa0
0x3fd: V437 = 0x2
0x3ff: V438 = EXP 0x2 0xa0
0x400: V439 = SUB 0x10000000000000000000000000000000000000000 0x1
0x401: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff V434
0x402: V441 = 0x8fc
0x406: V442 = CALLVALUE
0x407: V443 = SUB V442 V401
0x40a: V444 = ISZERO V443
0x40b: V445 = MUL V444 0x8fc
0x40d: V446 = 0x40
0x40f: V447 = M[0x40]
0x410: V448 = 0x0
0x412: V449 = 0x40
0x414: V450 = M[0x40]
0x417: V451 = SUB V447 V450
0x41c: V452 = CALL V445 V440 V443 V450 V451 V450 0x0
0x422: V453 = ISZERO V452
0x423: V454 = ISZERO V453
0x424: V455 = 0x42c
0x427: JUMPI 0x42c V454
---
Entry stack: [V13, V363, V401, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, V363, V401, 0x0]

================================

Block 0x428
[0x428:0x42b]
---
Predecessors: [0x3f8]
Successors: []
---
0x428 PUSH1 0x0
0x42a DUP1
0x42b REVERT
---
0x428: V456 = 0x0
0x42b: REVERT 0x0 0x0
---
Entry stack: [V13, V363, V401, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V363, V401, 0x0]

================================

Block 0x42c
[0x42c:0x47d]
---
Predecessors: [0x3ef, 0x3f8]
Successors: [0x47e, 0x482]
---
0x42c JUMPDEST
0x42d PUSH1 0x0
0x42f SLOAD
0x430 PUSH1 0x1
0x432 PUSH1 0xa0
0x434 PUSH1 0x2
0x436 EXP
0x437 SUB
0x438 AND
0x439 PUSH4 0xa9059cbb
0x43e CALLER
0x43f DUP6
0x440 PUSH1 0x40
0x442 MLOAD
0x443 PUSH1 0xe0
0x445 PUSH1 0x2
0x447 EXP
0x448 PUSH4 0xffffffff
0x44d DUP6
0x44e AND
0x44f MUL
0x450 DUP2
0x451 MSTORE
0x452 PUSH1 0x1
0x454 PUSH1 0xa0
0x456 PUSH1 0x2
0x458 EXP
0x459 SUB
0x45a SWAP1
0x45b SWAP3
0x45c AND
0x45d PUSH1 0x4
0x45f DUP4
0x460 ADD
0x461 MSTORE
0x462 PUSH1 0x24
0x464 DUP3
0x465 ADD
0x466 MSTORE
0x467 PUSH1 0x44
0x469 ADD
0x46a PUSH1 0x0
0x46c PUSH1 0x40
0x46e MLOAD
0x46f DUP1
0x470 DUP4
0x471 SUB
0x472 DUP2
0x473 PUSH1 0x0
0x475 DUP8
0x476 DUP1
0x477 EXTCODESIZE
0x478 ISZERO
0x479 ISZERO
0x47a PUSH2 0x482
0x47d JUMPI
---
0x42c: JUMPDEST 
0x42d: V457 = 0x0
0x42f: V458 = S[0x0]
0x430: V459 = 0x1
0x432: V460 = 0xa0
0x434: V461 = 0x2
0x436: V462 = EXP 0x2 0xa0
0x437: V463 = SUB 0x10000000000000000000000000000000000000000 0x1
0x438: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V458
0x439: V465 = 0xa9059cbb
0x43e: V466 = CALLER
0x440: V467 = 0x40
0x442: V468 = M[0x40]
0x443: V469 = 0xe0
0x445: V470 = 0x2
0x447: V471 = EXP 0x2 0xe0
0x448: V472 = 0xffffffff
0x44e: V473 = AND 0xa9059cbb 0xffffffff
0x44f: V474 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x451: M[V468] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x452: V475 = 0x1
0x454: V476 = 0xa0
0x456: V477 = 0x2
0x458: V478 = EXP 0x2 0xa0
0x459: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45c: V480 = AND V466 0xffffffffffffffffffffffffffffffffffffffff
0x45d: V481 = 0x4
0x460: V482 = ADD V468 0x4
0x461: M[V482] = V480
0x462: V483 = 0x24
0x465: V484 = ADD V468 0x24
0x466: M[V484] = V363
0x467: V485 = 0x44
0x469: V486 = ADD 0x44 V468
0x46a: V487 = 0x0
0x46c: V488 = 0x40
0x46e: V489 = M[0x40]
0x471: V490 = SUB V486 V489
0x473: V491 = 0x0
0x477: V492 = EXTCODESIZE V464
0x478: V493 = ISZERO V492
0x479: V494 = ISZERO V493
0x47a: V495 = 0x482
0x47d: JUMPI 0x482 V494
---
Entry stack: [V13, V363, V401, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V464, 0xa9059cbb, V486, 0x0, V489, V490, V489, 0x0, V464]
Exit stack: [V13, V363, V401, 0x0, V464, 0xa9059cbb, V486, 0x0, V489, V490, V489, 0x0, V464]

================================

Block 0x47e
[0x47e:0x481]
---
Predecessors: [0x42c]
Successors: []
---
0x47e PUSH1 0x0
0x480 DUP1
0x481 REVERT
---
0x47e: V496 = 0x0
0x481: REVERT 0x0 0x0
---
Entry stack: [V13, V363, V401, 0x0, V464, 0xa9059cbb, V486, 0x0, V489, V490, V489, 0x0, V464]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V363, V401, 0x0, V464, 0xa9059cbb, V486, 0x0, V489, V490, V489, 0x0, V464]

================================

Block 0x482
[0x482:0x48e]
---
Predecessors: [0x42c]
Successors: [0x48f, 0x493]
---
0x482 JUMPDEST
0x483 PUSH2 0x2c6
0x486 GAS
0x487 SUB
0x488 CALL
0x489 ISZERO
0x48a ISZERO
0x48b PUSH2 0x493
0x48e JUMPI
---
0x482: JUMPDEST 
0x483: V497 = 0x2c6
0x486: V498 = GAS
0x487: V499 = SUB V498 0x2c6
0x488: V500 = CALL V499 V464 0x0 V489 V490 V489 0x0
0x489: V501 = ISZERO V500
0x48a: V502 = ISZERO V501
0x48b: V503 = 0x493
0x48e: JUMPI 0x493 V502
---
Entry stack: [V13, V363, V401, 0x0, V464, 0xa9059cbb, V486, 0x0, V489, V490, V489, 0x0, V464]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V363, V401, 0x0, V464, 0xa9059cbb, V486]

================================

Block 0x48f
[0x48f:0x492]
---
Predecessors: [0x482]
Successors: []
---
0x48f PUSH1 0x0
0x491 DUP1
0x492 REVERT
---
0x48f: V504 = 0x0
0x492: REVERT 0x0 0x0
---
Entry stack: [V13, V363, V401, 0x0, V464, 0xa9059cbb, V486]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V363, V401, 0x0, V464, 0xa9059cbb, V486]

================================

Block 0x493
[0x493:0x4af]
---
Predecessors: [0x482]
Successors: [0x140, 0x4b0]
---
0x493 JUMPDEST
0x494 POP
0x495 POP
0x496 PUSH1 0x8
0x498 DUP1
0x499 SLOAD
0x49a DUP6
0x49b ADD
0x49c SWAP1
0x49d SSTORE
0x49e POP
0x49f PUSH1 0x9
0x4a1 DUP1
0x4a2 SLOAD
0x4a3 DUP5
0x4a4 SWAP1
0x4a5 SUB
0x4a6 SWAP1
0x4a7 DUP2
0x4a8 SWAP1
0x4a9 SSTORE
0x4aa ISZERO
0x4ab ISZERO
0x4ac PUSH2 0x140
0x4af JUMPI
---
0x493: JUMPDEST 
0x496: V505 = 0x8
0x499: V506 = S[0x8]
0x49b: V507 = ADD V363 V506
0x49d: S[0x8] = V507
0x49f: V508 = 0x9
0x4a2: V509 = S[0x9]
0x4a5: V510 = SUB V509 V363
0x4a9: S[0x9] = V510
0x4aa: V511 = ISZERO V510
0x4ab: V512 = ISZERO V511
0x4ac: V513 = 0x140
0x4af: JUMPI 0x140 V512
---
Entry stack: [V13, V363, V401, 0x0, V464, 0xa9059cbb, V486]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V13, V363, V401, 0x0]

================================

Block 0x4b0
[0x4b0:0x4c0]
---
Predecessors: [0x493]
Successors: [0x644]
---
0x4b0 PUSH1 0xa
0x4b2 DUP1
0x4b3 SLOAD
0x4b4 PUSH1 0xff
0x4b6 NOT
0x4b7 AND
0x4b8 PUSH1 0x1
0x4ba OR
0x4bb SWAP1
0x4bc SSTORE
0x4bd PUSH2 0x644
0x4c0 JUMP
---
0x4b0: V514 = 0xa
0x4b3: V515 = S[0xa]
0x4b4: V516 = 0xff
0x4b6: V517 = NOT 0xff
0x4b7: V518 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V515
0x4b8: V519 = 0x1
0x4ba: V520 = OR 0x1 V518
0x4bc: S[0xa] = V520
0x4bd: V521 = 0x644
0x4c0: JUMP 0x644
---
Entry stack: [V13, V363, V401, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V363, V401, 0x0]

================================

Block 0x4c1
[0x4c1:0x4d2]
---
Predecessors: [0x3ae]
Successors: [0x4d3, 0x4d4]
---
0x4c1 JUMPDEST
0x4c2 PUSH1 0x7
0x4c4 SLOAD
0x4c5 PUSH1 0x6
0x4c7 SLOAD
0x4c8 PUSH1 0x9
0x4ca SLOAD
0x4cb MUL
0x4cc DUP2
0x4cd ISZERO
0x4ce ISZERO
0x4cf PUSH2 0x4d4
0x4d2 JUMPI
---
0x4c1: JUMPDEST 
0x4c2: V522 = 0x7
0x4c4: V523 = S[0x7]
0x4c5: V524 = 0x6
0x4c7: V525 = S[0x6]
0x4c8: V526 = 0x9
0x4ca: V527 = S[0x9]
0x4cb: V528 = MUL V527 V525
0x4cd: V529 = ISZERO V523
0x4ce: V530 = ISZERO V529
0x4cf: V531 = 0x4d4
0x4d2: JUMPI 0x4d4 V530
---
Entry stack: [V13, V363, V401, 0x0]
Stack pops: 0
Stack additions: [V523, V528]
Exit stack: [V13, V363, V401, 0x0, V523, V528]

================================

Block 0x4d3
[0x4d3:0x4d3]
---
Predecessors: [0x4c1]
Successors: []
---
0x4d3 INVALID
---
0x4d3: INVALID 
---
Entry stack: [V13, V363, V401, 0x0, V523, V528]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V363, V401, 0x0, V523, V528]

================================

Block 0x4d4
[0x4d4:0x507]
---
Predecessors: [0x4c1]
Successors: [0x508, 0x50c]
---
0x4d4 JUMPDEST
0x4d5 PUSH1 0x1
0x4d7 SLOAD
0x4d8 SWAP2
0x4d9 SWAP1
0x4da DIV
0x4db SWAP2
0x4dc POP
0x4dd PUSH1 0x1
0x4df PUSH1 0xa0
0x4e1 PUSH1 0x2
0x4e3 EXP
0x4e4 SUB
0x4e5 AND
0x4e6 DUP2
0x4e7 ISZERO
0x4e8 PUSH2 0x8fc
0x4eb MUL
0x4ec DUP3
0x4ed PUSH1 0x40
0x4ef MLOAD
0x4f0 PUSH1 0x0
0x4f2 PUSH1 0x40
0x4f4 MLOAD
0x4f5 DUP1
0x4f6 DUP4
0x4f7 SUB
0x4f8 DUP2
0x4f9 DUP6
0x4fa DUP9
0x4fb DUP9
0x4fc CALL
0x4fd SWAP4
0x4fe POP
0x4ff POP
0x500 POP
0x501 POP
0x502 ISZERO
0x503 ISZERO
0x504 PUSH2 0x50c
0x507 JUMPI
---
0x4d4: JUMPDEST 
0x4d5: V532 = 0x1
0x4d7: V533 = S[0x1]
0x4da: V534 = DIV V528 V523
0x4dd: V535 = 0x1
0x4df: V536 = 0xa0
0x4e1: V537 = 0x2
0x4e3: V538 = EXP 0x2 0xa0
0x4e4: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e5: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V533
0x4e7: V541 = ISZERO V534
0x4e8: V542 = 0x8fc
0x4eb: V543 = MUL 0x8fc V541
0x4ed: V544 = 0x40
0x4ef: V545 = M[0x40]
0x4f0: V546 = 0x0
0x4f2: V547 = 0x40
0x4f4: V548 = M[0x40]
0x4f7: V549 = SUB V545 V548
0x4fc: V550 = CALL V543 V540 V534 V548 V549 V548 0x0
0x502: V551 = ISZERO V550
0x503: V552 = ISZERO V551
0x504: V553 = 0x50c
0x507: JUMPI 0x50c V552
---
Entry stack: [V13, V363, V401, 0x0, V523, V528]
Stack pops: 3
Stack additions: [V534]
Exit stack: [V13, V363, V401, V534]

================================

Block 0x508
[0x508:0x50b]
---
Predecessors: [0x4d4]
Successors: []
---
0x508 PUSH1 0x0
0x50a DUP1
0x50b REVERT
---
0x508: V554 = 0x0
0x50b: REVERT 0x0 0x0
---
Entry stack: [V13, V363, V401, V534]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V363, V401, V534]

================================

Block 0x50c
[0x50c:0x564]
---
Predecessors: [0x4d4]
Successors: [0x565, 0x569]
---
0x50c JUMPDEST
0x50d PUSH1 0x0
0x50f SLOAD
0x510 PUSH1 0x9
0x512 SLOAD
0x513 PUSH1 0x1
0x515 PUSH1 0xa0
0x517 PUSH1 0x2
0x519 EXP
0x51a SUB
0x51b SWAP1
0x51c SWAP2
0x51d AND
0x51e SWAP1
0x51f PUSH4 0xa9059cbb
0x524 SWAP1
0x525 CALLER
0x526 SWAP1
0x527 PUSH1 0x40
0x529 MLOAD
0x52a PUSH1 0xe0
0x52c PUSH1 0x2
0x52e EXP
0x52f PUSH4 0xffffffff
0x534 DUP6
0x535 AND
0x536 MUL
0x537 DUP2
0x538 MSTORE
0x539 PUSH1 0x1
0x53b PUSH1 0xa0
0x53d PUSH1 0x2
0x53f EXP
0x540 SUB
0x541 SWAP1
0x542 SWAP3
0x543 AND
0x544 PUSH1 0x4
0x546 DUP4
0x547 ADD
0x548 MSTORE
0x549 PUSH1 0x24
0x54b DUP3
0x54c ADD
0x54d MSTORE
0x54e PUSH1 0x44
0x550 ADD
0x551 PUSH1 0x0
0x553 PUSH1 0x40
0x555 MLOAD
0x556 DUP1
0x557 DUP4
0x558 SUB
0x559 DUP2
0x55a PUSH1 0x0
0x55c DUP8
0x55d DUP1
0x55e EXTCODESIZE
0x55f ISZERO
0x560 ISZERO
0x561 PUSH2 0x569
0x564 JUMPI
---
0x50c: JUMPDEST 
0x50d: V555 = 0x0
0x50f: V556 = S[0x0]
0x510: V557 = 0x9
0x512: V558 = S[0x9]
0x513: V559 = 0x1
0x515: V560 = 0xa0
0x517: V561 = 0x2
0x519: V562 = EXP 0x2 0xa0
0x51a: V563 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51d: V564 = AND V556 0xffffffffffffffffffffffffffffffffffffffff
0x51f: V565 = 0xa9059cbb
0x525: V566 = CALLER
0x527: V567 = 0x40
0x529: V568 = M[0x40]
0x52a: V569 = 0xe0
0x52c: V570 = 0x2
0x52e: V571 = EXP 0x2 0xe0
0x52f: V572 = 0xffffffff
0x535: V573 = AND 0xa9059cbb 0xffffffff
0x536: V574 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x538: M[V568] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x539: V575 = 0x1
0x53b: V576 = 0xa0
0x53d: V577 = 0x2
0x53f: V578 = EXP 0x2 0xa0
0x540: V579 = SUB 0x10000000000000000000000000000000000000000 0x1
0x543: V580 = AND V566 0xffffffffffffffffffffffffffffffffffffffff
0x544: V581 = 0x4
0x547: V582 = ADD V568 0x4
0x548: M[V582] = V580
0x549: V583 = 0x24
0x54c: V584 = ADD V568 0x24
0x54d: M[V584] = V558
0x54e: V585 = 0x44
0x550: V586 = ADD 0x44 V568
0x551: V587 = 0x0
0x553: V588 = 0x40
0x555: V589 = M[0x40]
0x558: V590 = SUB V586 V589
0x55a: V591 = 0x0
0x55e: V592 = EXTCODESIZE V564
0x55f: V593 = ISZERO V592
0x560: V594 = ISZERO V593
0x561: V595 = 0x569
0x564: JUMPI 0x569 V594
---
Entry stack: [V13, V363, V401, V534]
Stack pops: 0
Stack additions: [V564, 0xa9059cbb, V586, 0x0, V589, V590, V589, 0x0, V564]
Exit stack: [V13, V363, V401, V534, V564, 0xa9059cbb, V586, 0x0, V589, V590, V589, 0x0, V564]

================================

Block 0x565
[0x565:0x568]
---
Predecessors: [0x50c]
Successors: []
---
0x565 PUSH1 0x0
0x567 DUP1
0x568 REVERT
---
0x565: V596 = 0x0
0x568: REVERT 0x0 0x0
---
Entry stack: [V13, V363, V401, V534, V564, 0xa9059cbb, V586, 0x0, V589, V590, V589, 0x0, V564]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V363, V401, V534, V564, 0xa9059cbb, V586, 0x0, V589, V590, V589, 0x0, V564]

================================

Block 0x569
[0x569:0x575]
---
Predecessors: [0x50c]
Successors: [0x576, 0x57a]
---
0x569 JUMPDEST
0x56a PUSH2 0x2c6
0x56d GAS
0x56e SUB
0x56f CALL
0x570 ISZERO
0x571 ISZERO
0x572 PUSH2 0x57a
0x575 JUMPI
---
0x569: JUMPDEST 
0x56a: V597 = 0x2c6
0x56d: V598 = GAS
0x56e: V599 = SUB V598 0x2c6
0x56f: V600 = CALL V599 V564 0x0 V589 V590 V589 0x0
0x570: V601 = ISZERO V600
0x571: V602 = ISZERO V601
0x572: V603 = 0x57a
0x575: JUMPI 0x57a V602
---
Entry stack: [V13, V363, V401, V534, V564, 0xa9059cbb, V586, 0x0, V589, V590, V589, 0x0, V564]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V363, V401, V534, V564, 0xa9059cbb, V586]

================================

Block 0x576
[0x576:0x579]
---
Predecessors: [0x569]
Successors: []
---
0x576 PUSH1 0x0
0x578 DUP1
0x579 REVERT
---
0x576: V604 = 0x0
0x579: REVERT 0x0 0x0
---
Entry stack: [V13, V363, V401, V534, V564, 0xa9059cbb, V586]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V363, V401, V534, V564, 0xa9059cbb, V586]

================================

Block 0x57a
[0x57a:0x5ad]
---
Predecessors: [0x569]
Successors: [0x5ae, 0x5b2]
---
0x57a JUMPDEST
0x57b POP
0x57c POP
0x57d POP
0x57e CALLER
0x57f PUSH1 0x1
0x581 PUSH1 0xa0
0x583 PUSH1 0x2
0x585 EXP
0x586 SUB
0x587 AND
0x588 PUSH2 0x8fc
0x58b DUP3
0x58c CALLVALUE
0x58d SUB
0x58e SWAP1
0x58f DUP2
0x590 ISZERO
0x591 MUL
0x592 SWAP1
0x593 PUSH1 0x40
0x595 MLOAD
0x596 PUSH1 0x0
0x598 PUSH1 0x40
0x59a MLOAD
0x59b DUP1
0x59c DUP4
0x59d SUB
0x59e DUP2
0x59f DUP6
0x5a0 DUP9
0x5a1 DUP9
0x5a2 CALL
0x5a3 SWAP4
0x5a4 POP
0x5a5 POP
0x5a6 POP
0x5a7 POP
0x5a8 ISZERO
0x5a9 ISZERO
0x5aa PUSH2 0x5b2
0x5ad JUMPI
---
0x57a: JUMPDEST 
0x57e: V605 = CALLER
0x57f: V606 = 0x1
0x581: V607 = 0xa0
0x583: V608 = 0x2
0x585: V609 = EXP 0x2 0xa0
0x586: V610 = SUB 0x10000000000000000000000000000000000000000 0x1
0x587: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x588: V612 = 0x8fc
0x58c: V613 = CALLVALUE
0x58d: V614 = SUB V613 V534
0x590: V615 = ISZERO V614
0x591: V616 = MUL V615 0x8fc
0x593: V617 = 0x40
0x595: V618 = M[0x40]
0x596: V619 = 0x0
0x598: V620 = 0x40
0x59a: V621 = M[0x40]
0x59d: V622 = SUB V618 V621
0x5a2: V623 = CALL V616 V611 V614 V621 V622 V621 0x0
0x5a8: V624 = ISZERO V623
0x5a9: V625 = ISZERO V624
0x5aa: V626 = 0x5b2
0x5ad: JUMPI 0x5b2 V625
---
Entry stack: [V13, V363, V401, V534, V564, 0xa9059cbb, V586]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V13, V363, V401, V534]

================================

Block 0x5ae
[0x5ae:0x5b1]
---
Predecessors: [0x57a]
Successors: []
---
0x5ae PUSH1 0x0
0x5b0 DUP1
0x5b1 REVERT
---
0x5ae: V627 = 0x0
0x5b1: REVERT 0x0 0x0
---
Entry stack: [V13, V363, V401, V534]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V363, V401, V534]

================================

Block 0x5b2
[0x5b2:0x614]
---
Predecessors: [0x57a]
Successors: [0x615, 0x619]
---
0x5b2 JUMPDEST
0x5b3 PUSH1 0x9
0x5b5 SLOAD
0x5b6 PUSH1 0x8
0x5b8 DUP1
0x5b9 SLOAD
0x5ba SWAP1
0x5bb SWAP2
0x5bc ADD
0x5bd SWAP1
0x5be SSTORE
0x5bf PUSH1 0x0
0x5c1 DUP1
0x5c2 SLOAD
0x5c3 PUSH1 0x1
0x5c5 PUSH1 0xa0
0x5c7 PUSH1 0x2
0x5c9 EXP
0x5ca SUB
0x5cb AND
0x5cc SWAP1
0x5cd PUSH4 0x70a08231
0x5d2 SWAP1
0x5d3 ADDRESS
0x5d4 SWAP1
0x5d5 PUSH1 0x40
0x5d7 MLOAD
0x5d8 PUSH1 0x20
0x5da ADD
0x5db MSTORE
0x5dc PUSH1 0x40
0x5de MLOAD
0x5df PUSH1 0xe0
0x5e1 PUSH1 0x2
0x5e3 EXP
0x5e4 PUSH4 0xffffffff
0x5e9 DUP5
0x5ea AND
0x5eb MUL
0x5ec DUP2
0x5ed MSTORE
0x5ee PUSH1 0x1
0x5f0 PUSH1 0xa0
0x5f2 PUSH1 0x2
0x5f4 EXP
0x5f5 SUB
0x5f6 SWAP1
0x5f7 SWAP2
0x5f8 AND
0x5f9 PUSH1 0x4
0x5fb DUP3
0x5fc ADD
0x5fd MSTORE
0x5fe PUSH1 0x24
0x600 ADD
0x601 PUSH1 0x20
0x603 PUSH1 0x40
0x605 MLOAD
0x606 DUP1
0x607 DUP4
0x608 SUB
0x609 DUP2
0x60a PUSH1 0x0
0x60c DUP8
0x60d DUP1
0x60e EXTCODESIZE
0x60f ISZERO
0x610 ISZERO
0x611 PUSH2 0x619
0x614 JUMPI
---
0x5b2: JUMPDEST 
0x5b3: V628 = 0x9
0x5b5: V629 = S[0x9]
0x5b6: V630 = 0x8
0x5b9: V631 = S[0x8]
0x5bc: V632 = ADD V629 V631
0x5be: S[0x8] = V632
0x5bf: V633 = 0x0
0x5c2: V634 = S[0x0]
0x5c3: V635 = 0x1
0x5c5: V636 = 0xa0
0x5c7: V637 = 0x2
0x5c9: V638 = EXP 0x2 0xa0
0x5ca: V639 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5cb: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff V634
0x5cd: V641 = 0x70a08231
0x5d3: V642 = ADDRESS
0x5d5: V643 = 0x40
0x5d7: V644 = M[0x40]
0x5d8: V645 = 0x20
0x5da: V646 = ADD 0x20 V644
0x5db: M[V646] = 0x0
0x5dc: V647 = 0x40
0x5de: V648 = M[0x40]
0x5df: V649 = 0xe0
0x5e1: V650 = 0x2
0x5e3: V651 = EXP 0x2 0xe0
0x5e4: V652 = 0xffffffff
0x5ea: V653 = AND 0x70a08231 0xffffffff
0x5eb: V654 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x5ed: M[V648] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x5ee: V655 = 0x1
0x5f0: V656 = 0xa0
0x5f2: V657 = 0x2
0x5f4: V658 = EXP 0x2 0xa0
0x5f5: V659 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f8: V660 = AND V642 0xffffffffffffffffffffffffffffffffffffffff
0x5f9: V661 = 0x4
0x5fc: V662 = ADD V648 0x4
0x5fd: M[V662] = V660
0x5fe: V663 = 0x24
0x600: V664 = ADD 0x24 V648
0x601: V665 = 0x20
0x603: V666 = 0x40
0x605: V667 = M[0x40]
0x608: V668 = SUB V664 V667
0x60a: V669 = 0x0
0x60e: V670 = EXTCODESIZE V640
0x60f: V671 = ISZERO V670
0x610: V672 = ISZERO V671
0x611: V673 = 0x619
0x614: JUMPI 0x619 V672
---
Entry stack: [V13, V363, V401, V534]
Stack pops: 0
Stack additions: [V640, 0x70a08231, V664, 0x20, V667, V668, V667, 0x0, V640]
Exit stack: [V13, V363, V401, V534, V640, 0x70a08231, V664, 0x20, V667, V668, V667, 0x0, V640]

================================

Block 0x615
[0x615:0x618]
---
Predecessors: [0x5b2]
Successors: []
---
0x615 PUSH1 0x0
0x617 DUP1
0x618 REVERT
---
0x615: V674 = 0x0
0x618: REVERT 0x0 0x0
---
Entry stack: [V13, V363, V401, V534, V640, 0x70a08231, V664, 0x20, V667, V668, V667, 0x0, V640]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V363, V401, V534, V640, 0x70a08231, V664, 0x20, V667, V668, V667, 0x0, V640]

================================

Block 0x619
[0x619:0x625]
---
Predecessors: [0x5b2]
Successors: [0x626, 0x62a]
---
0x619 JUMPDEST
0x61a PUSH2 0x2c6
0x61d GAS
0x61e SUB
0x61f CALL
0x620 ISZERO
0x621 ISZERO
0x622 PUSH2 0x62a
0x625 JUMPI
---
0x619: JUMPDEST 
0x61a: V675 = 0x2c6
0x61d: V676 = GAS
0x61e: V677 = SUB V676 0x2c6
0x61f: V678 = CALL V677 V640 0x0 V667 V668 V667 0x20
0x620: V679 = ISZERO V678
0x621: V680 = ISZERO V679
0x622: V681 = 0x62a
0x625: JUMPI 0x62a V680
---
Entry stack: [V13, V363, V401, V534, V640, 0x70a08231, V664, 0x20, V667, V668, V667, 0x0, V640]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V363, V401, V534, V640, 0x70a08231, V664]

================================

Block 0x626
[0x626:0x629]
---
Predecessors: [0x619]
Successors: []
---
0x626 PUSH1 0x0
0x628 DUP1
0x629 REVERT
---
0x626: V682 = 0x0
0x629: REVERT 0x0 0x0
---
Entry stack: [V13, V363, V401, V534, V640, 0x70a08231, V664]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V363, V401, V534, V640, 0x70a08231, V664]

================================

Block 0x62a
[0x62a:0x643]
---
Predecessors: [0x619]
Successors: [0x644]
---
0x62a JUMPDEST
0x62b POP
0x62c POP
0x62d POP
0x62e PUSH1 0x40
0x630 MLOAD
0x631 DUP1
0x632 MLOAD
0x633 PUSH1 0x9
0x635 SSTORE
0x636 POP
0x637 PUSH1 0xa
0x639 DUP1
0x63a SLOAD
0x63b PUSH1 0xff
0x63d NOT
0x63e AND
0x63f PUSH1 0x1
0x641 OR
0x642 SWAP1
0x643 SSTORE
---
0x62a: JUMPDEST 
0x62e: V683 = 0x40
0x630: V684 = M[0x40]
0x632: V685 = M[V684]
0x633: V686 = 0x9
0x635: S[0x9] = V685
0x637: V687 = 0xa
0x63a: V688 = S[0xa]
0x63b: V689 = 0xff
0x63d: V690 = NOT 0xff
0x63e: V691 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V688
0x63f: V692 = 0x1
0x641: V693 = OR 0x1 V691
0x643: S[0xa] = V693
---
Entry stack: [V13, V363, V401, V534, V640, 0x70a08231, V664]
Stack pops: 3
Stack additions: []
Exit stack: [V13, V363, V401, V534]

================================

Block 0x644
[0x644:0x6b8]
---
Predecessors: [0x140, 0x2dc, 0x4b0, 0x62a]
Successors: []
---
0x644 JUMPDEST
0x645 PUSH32 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x666 PUSH1 0x9
0x668 SLOAD
0x669 PUSH1 0x40
0x66b MLOAD
0x66c SWAP1
0x66d DUP2
0x66e MSTORE
0x66f PUSH1 0x20
0x671 ADD
0x672 PUSH1 0x40
0x674 MLOAD
0x675 DUP1
0x676 SWAP2
0x677 SUB
0x678 SWAP1
0x679 LOG1
0x67a PUSH1 0xa
0x67c SLOAD
0x67d PUSH32 0x5a31ab2f920e21586c60958256e285378d9539e990dac5eb5b1f4f4b22a660d2
0x69e SWAP1
0x69f PUSH1 0xff
0x6a1 AND
0x6a2 PUSH1 0x40
0x6a4 MLOAD
0x6a5 SWAP1
0x6a6 ISZERO
0x6a7 ISZERO
0x6a8 DUP2
0x6a9 MSTORE
0x6aa PUSH1 0x20
0x6ac ADD
0x6ad PUSH1 0x40
0x6af MLOAD
0x6b0 DUP1
0x6b1 SWAP2
0x6b2 SUB
0x6b3 SWAP1
0x6b4 LOG1
0x6b5 POP
0x6b6 POP
0x6b7 POP
0x6b8 STOP
---
0x644: JUMPDEST 
0x645: V694 = 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x666: V695 = 0x9
0x668: V696 = S[0x9]
0x669: V697 = 0x40
0x66b: V698 = M[0x40]
0x66e: M[V698] = V696
0x66f: V699 = 0x20
0x671: V700 = ADD 0x20 V698
0x672: V701 = 0x40
0x674: V702 = M[0x40]
0x677: V703 = SUB V700 V702
0x679: LOG V702 V703 0x85e41e7e886c0f7ecfd1244a971d24ef6642f4167a6ae2351d701101e4b5c3af
0x67a: V704 = 0xa
0x67c: V705 = S[0xa]
0x67d: V706 = 0x5a31ab2f920e21586c60958256e285378d9539e990dac5eb5b1f4f4b22a660d2
0x69f: V707 = 0xff
0x6a1: V708 = AND 0xff V705
0x6a2: V709 = 0x40
0x6a4: V710 = M[0x40]
0x6a6: V711 = ISZERO V708
0x6a7: V712 = ISZERO V711
0x6a9: M[V710] = V712
0x6aa: V713 = 0x20
0x6ac: V714 = ADD 0x20 V710
0x6ad: V715 = 0x40
0x6af: V716 = M[0x40]
0x6b2: V717 = SUB V714 V716
0x6b4: LOG V716 V717 0x5a31ab2f920e21586c60958256e285378d9539e990dac5eb5b1f4f4b22a660d2
0x6b8: STOP 
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x6b9
[0x6b9:0x6bf]
---
Predecessors: [0xd]
Successors: [0x6c0, 0x6c4]
---
0x6b9 JUMPDEST
0x6ba CALLVALUE
0x6bb ISZERO
0x6bc PUSH2 0x6c4
0x6bf JUMPI
---
0x6b9: JUMPDEST 
0x6ba: V718 = CALLVALUE
0x6bb: V719 = ISZERO V718
0x6bc: V720 = 0x6c4
0x6bf: JUMPI 0x6c4 V719
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6c0
[0x6c0:0x6c3]
---
Predecessors: [0x6b9]
Successors: []
---
0x6c0 PUSH1 0x0
0x6c2 DUP1
0x6c3 REVERT
---
0x6c0: V721 = 0x0
0x6c3: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6c4
[0x6c4:0x6cb]
---
Predecessors: [0x6b9]
Successors: [0x830]
---
0x6c4 JUMPDEST
0x6c5 PUSH2 0x6cc
0x6c8 PUSH2 0x830
0x6cb JUMP
---
0x6c4: JUMPDEST 
0x6c5: V722 = 0x6cc
0x6c8: V723 = 0x830
0x6cb: JUMP 0x830
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x6cc]
Exit stack: [V13, 0x6cc]

================================

Block 0x6cc
[0x6cc:0x6e7]
---
Predecessors: [0x830, 0x853, 0x91b]
Successors: []
---
0x6cc JUMPDEST
0x6cd PUSH1 0x40
0x6cf MLOAD
0x6d0 PUSH1 0x1
0x6d2 PUSH1 0xa0
0x6d4 PUSH1 0x2
0x6d6 EXP
0x6d7 SUB
0x6d8 SWAP1
0x6d9 SWAP2
0x6da AND
0x6db DUP2
0x6dc MSTORE
0x6dd PUSH1 0x20
0x6df ADD
0x6e0 PUSH1 0x40
0x6e2 MLOAD
0x6e3 DUP1
0x6e4 SWAP2
0x6e5 SUB
0x6e6 SWAP1
0x6e7 RETURN
---
0x6cc: JUMPDEST 
0x6cd: V724 = 0x40
0x6cf: V725 = M[0x40]
0x6d0: V726 = 0x1
0x6d2: V727 = 0xa0
0x6d4: V728 = 0x2
0x6d6: V729 = EXP 0x2 0xa0
0x6d7: V730 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6da: V731 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x6dc: M[V725] = V731
0x6dd: V732 = 0x20
0x6df: V733 = ADD 0x20 V725
0x6e0: V734 = 0x40
0x6e2: V735 = M[0x40]
0x6e5: V736 = SUB V733 V735
0x6e7: RETURN V735 V736
---
Entry stack: [V13, 0x6cc, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x6cc]

================================

Block 0x6e8
[0x6e8:0x6ee]
---
Predecessors: [0x27]
Successors: [0x6ef, 0x6f3]
---
0x6e8 JUMPDEST
0x6e9 CALLVALUE
0x6ea ISZERO
0x6eb PUSH2 0x6f3
0x6ee JUMPI
---
0x6e8: JUMPDEST 
0x6e9: V737 = CALLVALUE
0x6ea: V738 = ISZERO V737
0x6eb: V739 = 0x6f3
0x6ee: JUMPI 0x6f3 V738
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6ef
[0x6ef:0x6f2]
---
Predecessors: [0x6e8]
Successors: []
---
0x6ef PUSH1 0x0
0x6f1 DUP1
0x6f2 REVERT
---
0x6ef: V740 = 0x0
0x6f2: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6f3
[0x6f3:0x6fa]
---
Predecessors: [0x6e8]
Successors: [0x83f]
---
0x6f3 JUMPDEST
0x6f4 PUSH2 0x6fb
0x6f7 PUSH2 0x83f
0x6fa JUMP
---
0x6f3: JUMPDEST 
0x6f4: V741 = 0x6fb
0x6f7: V742 = 0x83f
0x6fa: JUMP 0x83f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x6fb]
Exit stack: [V13, 0x6fb]

================================

Block 0x6fb
[0x6fb:0x70e]
---
Predecessors: [0x83f, 0x906]
Successors: []
---
0x6fb JUMPDEST
0x6fc PUSH1 0x40
0x6fe MLOAD
0x6ff SWAP1
0x700 ISZERO
0x701 ISZERO
0x702 DUP2
0x703 MSTORE
0x704 PUSH1 0x20
0x706 ADD
0x707 PUSH1 0x40
0x709 MLOAD
0x70a DUP1
0x70b SWAP2
0x70c SUB
0x70d SWAP1
0x70e RETURN
---
0x6fb: JUMPDEST 
0x6fc: V743 = 0x40
0x6fe: V744 = M[0x40]
0x700: V745 = ISZERO S0
0x701: V746 = ISZERO V745
0x703: M[V744] = V746
0x704: V747 = 0x20
0x706: V748 = ADD 0x20 V744
0x707: V749 = 0x40
0x709: V750 = M[0x40]
0x70c: V751 = SUB V748 V750
0x70e: RETURN V750 V751
---
Entry stack: [V13, 0x6fb, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x6fb]

================================

Block 0x70f
[0x70f:0x715]
---
Predecessors: [0x32]
Successors: [0x716, 0x71a]
---
0x70f JUMPDEST
0x710 CALLVALUE
0x711 ISZERO
0x712 PUSH2 0x71a
0x715 JUMPI
---
0x70f: JUMPDEST 
0x710: V752 = CALLVALUE
0x711: V753 = ISZERO V752
0x712: V754 = 0x71a
0x715: JUMPI 0x71a V753
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x716
[0x716:0x719]
---
Predecessors: [0x70f]
Successors: []
---
0x716 PUSH1 0x0
0x718 DUP1
0x719 REVERT
---
0x716: V755 = 0x0
0x719: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x71a
[0x71a:0x721]
---
Predecessors: [0x70f]
Successors: [0x84d]
---
0x71a JUMPDEST
0x71b PUSH2 0x722
0x71e PUSH2 0x84d
0x721 JUMP
---
0x71a: JUMPDEST 
0x71b: V756 = 0x722
0x71e: V757 = 0x84d
0x721: JUMP 0x84d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x722]
Exit stack: [V13, 0x722]

================================

Block 0x722
[0x722:0x733]
---
Predecessors: [0x84d, 0x862, 0x90f, 0x915]
Successors: []
---
0x722 JUMPDEST
0x723 PUSH1 0x40
0x725 MLOAD
0x726 SWAP1
0x727 DUP2
0x728 MSTORE
0x729 PUSH1 0x20
0x72b ADD
0x72c PUSH1 0x40
0x72e MLOAD
0x72f DUP1
0x730 SWAP2
0x731 SUB
0x732 SWAP1
0x733 RETURN
---
0x722: JUMPDEST 
0x723: V758 = 0x40
0x725: V759 = M[0x40]
0x728: M[V759] = S0
0x729: V760 = 0x20
0x72b: V761 = ADD 0x20 V759
0x72c: V762 = 0x40
0x72e: V763 = M[0x40]
0x731: V764 = SUB V761 V763
0x733: RETURN V763 V764
---
Entry stack: [V13, 0x722, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x722]

================================

Block 0x734
[0x734:0x73a]
---
Predecessors: [0x3d]
Successors: [0x73b, 0x73f]
---
0x734 JUMPDEST
0x735 CALLVALUE
0x736 ISZERO
0x737 PUSH2 0x73f
0x73a JUMPI
---
0x734: JUMPDEST 
0x735: V765 = CALLVALUE
0x736: V766 = ISZERO V765
0x737: V767 = 0x73f
0x73a: JUMPI 0x73f V766
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x73b
[0x73b:0x73e]
---
Predecessors: [0x734]
Successors: []
---
0x73b PUSH1 0x0
0x73d DUP1
0x73e REVERT
---
0x73b: V768 = 0x0
0x73e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x73f
[0x73f:0x746]
---
Predecessors: [0x734]
Successors: [0x853]
---
0x73f JUMPDEST
0x740 PUSH2 0x6cc
0x743 PUSH2 0x853
0x746 JUMP
---
0x73f: JUMPDEST 
0x740: V769 = 0x6cc
0x743: V770 = 0x853
0x746: JUMP 0x853
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x6cc]
Exit stack: [V13, 0x6cc]

================================

Block 0x747
[0x747:0x74d]
---
Predecessors: [0x48]
Successors: [0x74e, 0x752]
---
0x747 JUMPDEST
0x748 CALLVALUE
0x749 ISZERO
0x74a PUSH2 0x752
0x74d JUMPI
---
0x747: JUMPDEST 
0x748: V771 = CALLVALUE
0x749: V772 = ISZERO V771
0x74a: V773 = 0x752
0x74d: JUMPI 0x752 V772
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x74e
[0x74e:0x751]
---
Predecessors: [0x747]
Successors: []
---
0x74e PUSH1 0x0
0x750 DUP1
0x751 REVERT
---
0x74e: V774 = 0x0
0x751: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x752
[0x752:0x759]
---
Predecessors: [0x747]
Successors: [0x862]
---
0x752 JUMPDEST
0x753 PUSH2 0x722
0x756 PUSH2 0x862
0x759 JUMP
---
0x752: JUMPDEST 
0x753: V775 = 0x722
0x756: V776 = 0x862
0x759: JUMP 0x862
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x722]
Exit stack: [V13, 0x722]

================================

Block 0x75a
[0x75a:0x760]
---
Predecessors: [0x53]
Successors: [0x761, 0x765]
---
0x75a JUMPDEST
0x75b CALLVALUE
0x75c ISZERO
0x75d PUSH2 0x765
0x760 JUMPI
---
0x75a: JUMPDEST 
0x75b: V777 = CALLVALUE
0x75c: V778 = ISZERO V777
0x75d: V779 = 0x765
0x760: JUMPI 0x765 V778
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x761
[0x761:0x764]
---
Predecessors: [0x75a]
Successors: []
---
0x761 PUSH1 0x0
0x763 DUP1
0x764 REVERT
---
0x761: V780 = 0x0
0x764: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x765
[0x765:0x76c]
---
Predecessors: [0x75a]
Successors: [0x868]
---
0x765 JUMPDEST
0x766 PUSH2 0x76d
0x769 PUSH2 0x868
0x76c JUMP
---
0x765: JUMPDEST 
0x766: V781 = 0x76d
0x769: V782 = 0x868
0x76c: JUMP 0x868
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x76d]
Exit stack: [V13, 0x76d]

================================

Block 0x76d
[0x76d:0x790]
---
Predecessors: [0x8fe]
Successors: [0x791]
---
0x76d JUMPDEST
0x76e PUSH1 0x40
0x770 MLOAD
0x771 PUSH1 0x20
0x773 DUP1
0x774 DUP3
0x775 MSTORE
0x776 DUP2
0x777 SWAP1
0x778 DUP2
0x779 ADD
0x77a DUP4
0x77b DUP2
0x77c DUP2
0x77d MLOAD
0x77e DUP2
0x77f MSTORE
0x780 PUSH1 0x20
0x782 ADD
0x783 SWAP2
0x784 POP
0x785 DUP1
0x786 MLOAD
0x787 SWAP1
0x788 PUSH1 0x20
0x78a ADD
0x78b SWAP1
0x78c DUP1
0x78d DUP4
0x78e DUP4
0x78f PUSH1 0x0
---
0x76d: JUMPDEST 
0x76e: V783 = 0x40
0x770: V784 = M[0x40]
0x771: V785 = 0x20
0x775: M[V784] = 0x20
0x779: V786 = ADD V784 0x20
0x77d: V787 = M[V893]
0x77f: M[V786] = V787
0x780: V788 = 0x20
0x782: V789 = ADD 0x20 V786
0x786: V790 = M[V893]
0x788: V791 = 0x20
0x78a: V792 = ADD 0x20 V893
0x78f: V793 = 0x0
---
Entry stack: [V13, 0x76d, V893]
Stack pops: 1
Stack additions: [S0, V784, V784, V789, V792, V790, V790, V789, V792, 0x0]
Exit stack: [V13, 0x76d, V893, V784, V784, V789, V792, V790, V790, V789, V792, 0x0]

================================

Block 0x791
[0x791:0x799]
---
Predecessors: [0x76d, 0x79a]
Successors: [0x79a, 0x7a9]
---
0x791 JUMPDEST
0x792 DUP4
0x793 DUP2
0x794 LT
0x795 ISZERO
0x796 PUSH2 0x7a9
0x799 JUMPI
---
0x791: JUMPDEST 
0x794: V794 = LT S0 V790
0x795: V795 = ISZERO V794
0x796: V796 = 0x7a9
0x799: JUMPI 0x7a9 V795
---
Entry stack: [V13, 0x76d, V893, V784, V784, V789, V792, V790, V790, V789, V792, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x76d, V893, V784, V784, V789, V792, V790, V790, V789, V792, S0]

================================

Block 0x79a
[0x79a:0x7a8]
---
Predecessors: [0x791]
Successors: [0x791]
---
0x79a DUP1
0x79b DUP3
0x79c ADD
0x79d MLOAD
0x79e DUP4
0x79f DUP3
0x7a0 ADD
0x7a1 MSTORE
0x7a2 PUSH1 0x20
0x7a4 ADD
0x7a5 PUSH2 0x791
0x7a8 JUMP
---
0x79c: V797 = ADD V792 S0
0x79d: V798 = M[V797]
0x7a0: V799 = ADD S0 V789
0x7a1: M[V799] = V798
0x7a2: V800 = 0x20
0x7a4: V801 = ADD 0x20 S0
0x7a5: V802 = 0x791
0x7a8: JUMP 0x791
---
Entry stack: [V13, 0x76d, V893, V784, V784, V789, V792, V790, V790, V789, V792, S0]
Stack pops: 3
Stack additions: [S2, S1, V801]
Exit stack: [V13, 0x76d, V893, V784, V784, V789, V792, V790, V790, V789, V792, V801]

================================

Block 0x7a9
[0x7a9:0x7bc]
---
Predecessors: [0x791]
Successors: [0x7bd, 0x7d6]
---
0x7a9 JUMPDEST
0x7aa POP
0x7ab POP
0x7ac POP
0x7ad POP
0x7ae SWAP1
0x7af POP
0x7b0 SWAP1
0x7b1 DUP2
0x7b2 ADD
0x7b3 SWAP1
0x7b4 PUSH1 0x1f
0x7b6 AND
0x7b7 DUP1
0x7b8 ISZERO
0x7b9 PUSH2 0x7d6
0x7bc JUMPI
---
0x7a9: JUMPDEST 
0x7b2: V803 = ADD V790 V789
0x7b4: V804 = 0x1f
0x7b6: V805 = AND 0x1f V790
0x7b8: V806 = ISZERO V805
0x7b9: V807 = 0x7d6
0x7bc: JUMPI 0x7d6 V806
---
Entry stack: [V13, 0x76d, V893, V784, V784, V789, V792, V790, V790, V789, V792, S0]
Stack pops: 7
Stack additions: [V803, V805]
Exit stack: [V13, 0x76d, V893, V784, V784, V803, V805]

================================

Block 0x7bd
[0x7bd:0x7d5]
---
Predecessors: [0x7a9]
Successors: [0x7d6]
---
0x7bd DUP1
0x7be DUP3
0x7bf SUB
0x7c0 DUP1
0x7c1 MLOAD
0x7c2 PUSH1 0x1
0x7c4 DUP4
0x7c5 PUSH1 0x20
0x7c7 SUB
0x7c8 PUSH2 0x100
0x7cb EXP
0x7cc SUB
0x7cd NOT
0x7ce AND
0x7cf DUP2
0x7d0 MSTORE
0x7d1 PUSH1 0x20
0x7d3 ADD
0x7d4 SWAP2
0x7d5 POP
---
0x7bf: V808 = SUB V803 V805
0x7c1: V809 = M[V808]
0x7c2: V810 = 0x1
0x7c5: V811 = 0x20
0x7c7: V812 = SUB 0x20 V805
0x7c8: V813 = 0x100
0x7cb: V814 = EXP 0x100 V812
0x7cc: V815 = SUB V814 0x1
0x7cd: V816 = NOT V815
0x7ce: V817 = AND V816 V809
0x7d0: M[V808] = V817
0x7d1: V818 = 0x20
0x7d3: V819 = ADD 0x20 V808
---
Entry stack: [V13, 0x76d, V893, V784, V784, V803, V805]
Stack pops: 2
Stack additions: [V819, S0]
Exit stack: [V13, 0x76d, V893, V784, V784, V819, V805]

================================

Block 0x7d6
[0x7d6:0x7e3]
---
Predecessors: [0x7a9, 0x7bd]
Successors: []
---
0x7d6 JUMPDEST
0x7d7 POP
0x7d8 SWAP3
0x7d9 POP
0x7da POP
0x7db POP
0x7dc PUSH1 0x40
0x7de MLOAD
0x7df DUP1
0x7e0 SWAP2
0x7e1 SUB
0x7e2 SWAP1
0x7e3 RETURN
---
0x7d6: JUMPDEST 
0x7dc: V820 = 0x40
0x7de: V821 = M[0x40]
0x7e1: V822 = SUB S1 V821
0x7e3: RETURN V821 V822
---
Entry stack: [V13, 0x76d, V893, V784, V784, S1, V805]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x76d]

================================

Block 0x7e4
[0x7e4:0x7ea]
---
Predecessors: [0x5e]
Successors: [0x7eb, 0x7ef]
---
0x7e4 JUMPDEST
0x7e5 CALLVALUE
0x7e6 ISZERO
0x7e7 PUSH2 0x7ef
0x7ea JUMPI
---
0x7e4: JUMPDEST 
0x7e5: V823 = CALLVALUE
0x7e6: V824 = ISZERO V823
0x7e7: V825 = 0x7ef
0x7ea: JUMPI 0x7ef V824
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x7eb
[0x7eb:0x7ee]
---
Predecessors: [0x7e4]
Successors: []
---
0x7eb PUSH1 0x0
0x7ed DUP1
0x7ee REVERT
---
0x7eb: V826 = 0x0
0x7ee: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x7ef
[0x7ef:0x7f6]
---
Predecessors: [0x7e4]
Successors: [0x906]
---
0x7ef JUMPDEST
0x7f0 PUSH2 0x6fb
0x7f3 PUSH2 0x906
0x7f6 JUMP
---
0x7ef: JUMPDEST 
0x7f0: V827 = 0x6fb
0x7f3: V828 = 0x906
0x7f6: JUMP 0x906
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x6fb]
Exit stack: [V13, 0x6fb]

================================

Block 0x7f7
[0x7f7:0x7fd]
---
Predecessors: [0x69]
Successors: [0x7fe, 0x802]
---
0x7f7 JUMPDEST
0x7f8 CALLVALUE
0x7f9 ISZERO
0x7fa PUSH2 0x802
0x7fd JUMPI
---
0x7f7: JUMPDEST 
0x7f8: V829 = CALLVALUE
0x7f9: V830 = ISZERO V829
0x7fa: V831 = 0x802
0x7fd: JUMPI 0x802 V830
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x7fe
[0x7fe:0x801]
---
Predecessors: [0x7f7]
Successors: []
---
0x7fe PUSH1 0x0
0x800 DUP1
0x801 REVERT
---
0x7fe: V832 = 0x0
0x801: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x802
[0x802:0x809]
---
Predecessors: [0x7f7]
Successors: [0x90f]
---
0x802 JUMPDEST
0x803 PUSH2 0x722
0x806 PUSH2 0x90f
0x809 JUMP
---
0x802: JUMPDEST 
0x803: V833 = 0x722
0x806: V834 = 0x90f
0x809: JUMP 0x90f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x722]
Exit stack: [V13, 0x722]

================================

Block 0x80a
[0x80a:0x810]
---
Predecessors: [0x74]
Successors: [0x811, 0x815]
---
0x80a JUMPDEST
0x80b CALLVALUE
0x80c ISZERO
0x80d PUSH2 0x815
0x810 JUMPI
---
0x80a: JUMPDEST 
0x80b: V835 = CALLVALUE
0x80c: V836 = ISZERO V835
0x80d: V837 = 0x815
0x810: JUMPI 0x815 V836
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x811
[0x811:0x814]
---
Predecessors: [0x80a]
Successors: []
---
0x811 PUSH1 0x0
0x813 DUP1
0x814 REVERT
---
0x811: V838 = 0x0
0x814: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x815
[0x815:0x81c]
---
Predecessors: [0x80a]
Successors: [0x915]
---
0x815 JUMPDEST
0x816 PUSH2 0x722
0x819 PUSH2 0x915
0x81c JUMP
---
0x815: JUMPDEST 
0x816: V839 = 0x722
0x819: V840 = 0x915
0x81c: JUMP 0x915
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x722]
Exit stack: [V13, 0x722]

================================

Block 0x81d
[0x81d:0x823]
---
Predecessors: [0x7f]
Successors: [0x824, 0x828]
---
0x81d JUMPDEST
0x81e CALLVALUE
0x81f ISZERO
0x820 PUSH2 0x828
0x823 JUMPI
---
0x81d: JUMPDEST 
0x81e: V841 = CALLVALUE
0x81f: V842 = ISZERO V841
0x820: V843 = 0x828
0x823: JUMPI 0x828 V842
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x824
[0x824:0x827]
---
Predecessors: [0x81d]
Successors: []
---
0x824 PUSH1 0x0
0x826 DUP1
0x827 REVERT
---
0x824: V844 = 0x0
0x827: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x828
[0x828:0x82f]
---
Predecessors: [0x81d]
Successors: [0x91b]
---
0x828 JUMPDEST
0x829 PUSH2 0x6cc
0x82c PUSH2 0x91b
0x82f JUMP
---
0x828: JUMPDEST 
0x829: V845 = 0x6cc
0x82c: V846 = 0x91b
0x82f: JUMP 0x91b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x6cc]
Exit stack: [V13, 0x6cc]

================================

Block 0x830
[0x830:0x83e]
---
Predecessors: [0x6c4]
Successors: [0x6cc]
---
0x830 JUMPDEST
0x831 PUSH1 0x0
0x833 SLOAD
0x834 PUSH1 0x1
0x836 PUSH1 0xa0
0x838 PUSH1 0x2
0x83a EXP
0x83b SUB
0x83c AND
0x83d DUP2
0x83e JUMP
---
0x830: JUMPDEST 
0x831: V847 = 0x0
0x833: V848 = S[0x0]
0x834: V849 = 0x1
0x836: V850 = 0xa0
0x838: V851 = 0x2
0x83a: V852 = EXP 0x2 0xa0
0x83b: V853 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83c: V854 = AND 0xffffffffffffffffffffffffffffffffffffffff V848
0x83e: JUMP 0x6cc
---
Entry stack: [V13, 0x6cc]
Stack pops: 1
Stack additions: [S0, V854]
Exit stack: [V13, 0x6cc, V854]

================================

Block 0x83f
[0x83f:0x84c]
---
Predecessors: [0x6f3]
Successors: [0x6fb]
---
0x83f JUMPDEST
0x840 PUSH1 0xa
0x842 SLOAD
0x843 PUSH2 0x100
0x846 SWAP1
0x847 DIV
0x848 PUSH1 0xff
0x84a AND
0x84b DUP2
0x84c JUMP
---
0x83f: JUMPDEST 
0x840: V855 = 0xa
0x842: V856 = S[0xa]
0x843: V857 = 0x100
0x847: V858 = DIV V856 0x100
0x848: V859 = 0xff
0x84a: V860 = AND 0xff V858
0x84c: JUMP 0x6fb
---
Entry stack: [V13, 0x6fb]
Stack pops: 1
Stack additions: [S0, V860]
Exit stack: [V13, 0x6fb, V860]

================================

Block 0x84d
[0x84d:0x852]
---
Predecessors: [0x71a]
Successors: [0x722]
---
0x84d JUMPDEST
0x84e PUSH1 0x8
0x850 SLOAD
0x851 DUP2
0x852 JUMP
---
0x84d: JUMPDEST 
0x84e: V861 = 0x8
0x850: V862 = S[0x8]
0x852: JUMP 0x722
---
Entry stack: [V13, 0x722]
Stack pops: 1
Stack additions: [S0, V862]
Exit stack: [V13, 0x722, V862]

================================

Block 0x853
[0x853:0x861]
---
Predecessors: [0x73f]
Successors: [0x6cc]
---
0x853 JUMPDEST
0x854 PUSH1 0x1
0x856 SLOAD
0x857 PUSH1 0x1
0x859 PUSH1 0xa0
0x85b PUSH1 0x2
0x85d EXP
0x85e SUB
0x85f AND
0x860 DUP2
0x861 JUMP
---
0x853: JUMPDEST 
0x854: V863 = 0x1
0x856: V864 = S[0x1]
0x857: V865 = 0x1
0x859: V866 = 0xa0
0x85b: V867 = 0x2
0x85d: V868 = EXP 0x2 0xa0
0x85e: V869 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85f: V870 = AND 0xffffffffffffffffffffffffffffffffffffffff V864
0x861: JUMP 0x6cc
---
Entry stack: [V13, 0x6cc]
Stack pops: 1
Stack additions: [S0, V870]
Exit stack: [V13, 0x6cc, V870]

================================

Block 0x862
[0x862:0x867]
---
Predecessors: [0x752]
Successors: [0x722]
---
0x862 JUMPDEST
0x863 PUSH1 0x9
0x865 SLOAD
0x866 DUP2
0x867 JUMP
---
0x862: JUMPDEST 
0x863: V871 = 0x9
0x865: V872 = S[0x9]
0x867: JUMP 0x722
---
Entry stack: [V13, 0x722]
Stack pops: 1
Stack additions: [S0, V872]
Exit stack: [V13, 0x722, V872]

================================

Block 0x868
[0x868:0x8b7]
---
Predecessors: [0x765]
Successors: [0x8b8, 0x8fe]
---
0x868 JUMPDEST
0x869 PUSH1 0x5
0x86b DUP1
0x86c SLOAD
0x86d PUSH1 0x1
0x86f DUP2
0x870 PUSH1 0x1
0x872 AND
0x873 ISZERO
0x874 PUSH2 0x100
0x877 MUL
0x878 SUB
0x879 AND
0x87a PUSH1 0x2
0x87c SWAP1
0x87d DIV
0x87e DUP1
0x87f PUSH1 0x1f
0x881 ADD
0x882 PUSH1 0x20
0x884 DUP1
0x885 SWAP2
0x886 DIV
0x887 MUL
0x888 PUSH1 0x20
0x88a ADD
0x88b PUSH1 0x40
0x88d MLOAD
0x88e SWAP1
0x88f DUP2
0x890 ADD
0x891 PUSH1 0x40
0x893 MSTORE
0x894 DUP1
0x895 SWAP3
0x896 SWAP2
0x897 SWAP1
0x898 DUP2
0x899 DUP2
0x89a MSTORE
0x89b PUSH1 0x20
0x89d ADD
0x89e DUP3
0x89f DUP1
0x8a0 SLOAD
0x8a1 PUSH1 0x1
0x8a3 DUP2
0x8a4 PUSH1 0x1
0x8a6 AND
0x8a7 ISZERO
0x8a8 PUSH2 0x100
0x8ab MUL
0x8ac SUB
0x8ad AND
0x8ae PUSH1 0x2
0x8b0 SWAP1
0x8b1 DIV
0x8b2 DUP1
0x8b3 ISZERO
0x8b4 PUSH2 0x8fe
0x8b7 JUMPI
---
0x868: JUMPDEST 
0x869: V873 = 0x5
0x86c: V874 = S[0x5]
0x86d: V875 = 0x1
0x870: V876 = 0x1
0x872: V877 = AND 0x1 V874
0x873: V878 = ISZERO V877
0x874: V879 = 0x100
0x877: V880 = MUL 0x100 V878
0x878: V881 = SUB V880 0x1
0x879: V882 = AND V881 V874
0x87a: V883 = 0x2
0x87d: V884 = DIV V882 0x2
0x87f: V885 = 0x1f
0x881: V886 = ADD 0x1f V884
0x882: V887 = 0x20
0x886: V888 = DIV V886 0x20
0x887: V889 = MUL V888 0x20
0x888: V890 = 0x20
0x88a: V891 = ADD 0x20 V889
0x88b: V892 = 0x40
0x88d: V893 = M[0x40]
0x890: V894 = ADD V893 V891
0x891: V895 = 0x40
0x893: M[0x40] = V894
0x89a: M[V893] = V884
0x89b: V896 = 0x20
0x89d: V897 = ADD 0x20 V893
0x8a0: V898 = S[0x5]
0x8a1: V899 = 0x1
0x8a4: V900 = 0x1
0x8a6: V901 = AND 0x1 V898
0x8a7: V902 = ISZERO V901
0x8a8: V903 = 0x100
0x8ab: V904 = MUL 0x100 V902
0x8ac: V905 = SUB V904 0x1
0x8ad: V906 = AND V905 V898
0x8ae: V907 = 0x2
0x8b1: V908 = DIV V906 0x2
0x8b3: V909 = ISZERO V908
0x8b4: V910 = 0x8fe
0x8b7: JUMPI 0x8fe V909
---
Entry stack: [V13, 0x76d]
Stack pops: 0
Stack additions: [V893, 0x5, V884, V897, 0x5, V908]
Exit stack: [V13, 0x76d, V893, 0x5, V884, V897, 0x5, V908]

================================

Block 0x8b8
[0x8b8:0x8bf]
---
Predecessors: [0x868]
Successors: [0x8c0, 0x8d3]
---
0x8b8 DUP1
0x8b9 PUSH1 0x1f
0x8bb LT
0x8bc PUSH2 0x8d3
0x8bf JUMPI
---
0x8b9: V911 = 0x1f
0x8bb: V912 = LT 0x1f V908
0x8bc: V913 = 0x8d3
0x8bf: JUMPI 0x8d3 V912
---
Entry stack: [V13, 0x76d, V893, 0x5, V884, V897, 0x5, V908]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x76d, V893, 0x5, V884, V897, 0x5, V908]

================================

Block 0x8c0
[0x8c0:0x8d2]
---
Predecessors: [0x8b8]
Successors: [0x8fe]
---
0x8c0 PUSH2 0x100
0x8c3 DUP1
0x8c4 DUP4
0x8c5 SLOAD
0x8c6 DIV
0x8c7 MUL
0x8c8 DUP4
0x8c9 MSTORE
0x8ca SWAP2
0x8cb PUSH1 0x20
0x8cd ADD
0x8ce SWAP2
0x8cf PUSH2 0x8fe
0x8d2 JUMP
---
0x8c0: V914 = 0x100
0x8c5: V915 = S[0x5]
0x8c6: V916 = DIV V915 0x100
0x8c7: V917 = MUL V916 0x100
0x8c9: M[V897] = V917
0x8cb: V918 = 0x20
0x8cd: V919 = ADD 0x20 V897
0x8cf: V920 = 0x8fe
0x8d2: JUMP 0x8fe
---
Entry stack: [V13, 0x76d, V893, 0x5, V884, V897, 0x5, V908]
Stack pops: 3
Stack additions: [V919, S1, S0]
Exit stack: [V13, 0x76d, V893, 0x5, V884, V919, 0x5, V908]

================================

Block 0x8d3
[0x8d3:0x8e0]
---
Predecessors: [0x8b8]
Successors: [0x8e1]
---
0x8d3 JUMPDEST
0x8d4 DUP3
0x8d5 ADD
0x8d6 SWAP2
0x8d7 SWAP1
0x8d8 PUSH1 0x0
0x8da MSTORE
0x8db PUSH1 0x20
0x8dd PUSH1 0x0
0x8df SHA3
0x8e0 SWAP1
---
0x8d3: JUMPDEST 
0x8d5: V921 = ADD V897 V908
0x8d8: V922 = 0x0
0x8da: M[0x0] = 0x5
0x8db: V923 = 0x20
0x8dd: V924 = 0x0
0x8df: V925 = SHA3 0x0 0x20
---
Entry stack: [V13, 0x76d, V893, 0x5, V884, V897, 0x5, V908]
Stack pops: 3
Stack additions: [V921, V925, S2]
Exit stack: [V13, 0x76d, V893, 0x5, V884, V921, V925, V897]

================================

Block 0x8e1
[0x8e1:0x8f4]
---
Predecessors: [0x8d3, 0x8e1]
Successors: [0x8e1, 0x8f5]
---
0x8e1 JUMPDEST
0x8e2 DUP2
0x8e3 SLOAD
0x8e4 DUP2
0x8e5 MSTORE
0x8e6 SWAP1
0x8e7 PUSH1 0x1
0x8e9 ADD
0x8ea SWAP1
0x8eb PUSH1 0x20
0x8ed ADD
0x8ee DUP1
0x8ef DUP4
0x8f0 GT
0x8f1 PUSH2 0x8e1
0x8f4 JUMPI
---
0x8e1: JUMPDEST 
0x8e3: V926 = S[S1]
0x8e5: M[S0] = V926
0x8e7: V927 = 0x1
0x8e9: V928 = ADD 0x1 S1
0x8eb: V929 = 0x20
0x8ed: V930 = ADD 0x20 S0
0x8f0: V931 = GT V921 V930
0x8f1: V932 = 0x8e1
0x8f4: JUMPI 0x8e1 V931
---
Entry stack: [V13, 0x76d, V893, 0x5, V884, V921, S1, S0]
Stack pops: 3
Stack additions: [S2, V928, V930]
Exit stack: [V13, 0x76d, V893, 0x5, V884, V921, V928, V930]

================================

Block 0x8f5
[0x8f5:0x8fd]
---
Predecessors: [0x8e1]
Successors: [0x8fe]
---
0x8f5 DUP3
0x8f6 SWAP1
0x8f7 SUB
0x8f8 PUSH1 0x1f
0x8fa AND
0x8fb DUP3
0x8fc ADD
0x8fd SWAP2
---
0x8f7: V933 = SUB V930 V921
0x8f8: V934 = 0x1f
0x8fa: V935 = AND 0x1f V933
0x8fc: V936 = ADD V921 V935
---
Entry stack: [V13, 0x76d, V893, 0x5, V884, V921, V928, V930]
Stack pops: 3
Stack additions: [V936, S1, S2]
Exit stack: [V13, 0x76d, V893, 0x5, V884, V936, V928, V921]

================================

Block 0x8fe
[0x8fe:0x905]
---
Predecessors: [0x868, 0x8c0, 0x8f5]
Successors: [0x76d]
---
0x8fe JUMPDEST
0x8ff POP
0x900 POP
0x901 POP
0x902 POP
0x903 POP
0x904 DUP2
0x905 JUMP
---
0x8fe: JUMPDEST 
0x905: JUMP 0x76d
---
Entry stack: [V13, 0x76d, V893, 0x5, V884, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V13, 0x76d, V893]

================================

Block 0x906
[0x906:0x90e]
---
Predecessors: [0x7ef]
Successors: [0x6fb]
---
0x906 JUMPDEST
0x907 PUSH1 0xa
0x909 SLOAD
0x90a PUSH1 0xff
0x90c AND
0x90d DUP2
0x90e JUMP
---
0x906: JUMPDEST 
0x907: V937 = 0xa
0x909: V938 = S[0xa]
0x90a: V939 = 0xff
0x90c: V940 = AND 0xff V938
0x90e: JUMP 0x6fb
---
Entry stack: [V13, 0x6fb]
Stack pops: 1
Stack additions: [S0, V940]
Exit stack: [V13, 0x6fb, V940]

================================

Block 0x90f
[0x90f:0x914]
---
Predecessors: [0x802]
Successors: [0x722]
---
0x90f JUMPDEST
0x910 PUSH1 0x4
0x912 SLOAD
0x913 DUP2
0x914 JUMP
---
0x90f: JUMPDEST 
0x910: V941 = 0x4
0x912: V942 = S[0x4]
0x914: JUMP 0x722
---
Entry stack: [V13, 0x722]
Stack pops: 1
Stack additions: [S0, V942]
Exit stack: [V13, 0x722, V942]

================================

Block 0x915
[0x915:0x91a]
---
Predecessors: [0x815]
Successors: [0x722]
---
0x915 JUMPDEST
0x916 PUSH1 0x3
0x918 SLOAD
0x919 DUP2
0x91a JUMP
---
0x915: JUMPDEST 
0x916: V943 = 0x3
0x918: V944 = S[0x3]
0x91a: JUMP 0x722
---
Entry stack: [V13, 0x722]
Stack pops: 1
Stack additions: [S0, V944]
Exit stack: [V13, 0x722, V944]

================================

Block 0x91b
[0x91b:0x929]
---
Predecessors: [0x828]
Successors: [0x6cc]
---
0x91b JUMPDEST
0x91c PUSH1 0x2
0x91e SLOAD
0x91f PUSH1 0x1
0x921 PUSH1 0xa0
0x923 PUSH1 0x2
0x925 EXP
0x926 SUB
0x927 AND
0x928 DUP2
0x929 JUMP
---
0x91b: JUMPDEST 
0x91c: V945 = 0x2
0x91e: V946 = S[0x2]
0x91f: V947 = 0x1
0x921: V948 = 0xa0
0x923: V949 = 0x2
0x925: V950 = EXP 0x2 0xa0
0x926: V951 = SUB 0x10000000000000000000000000000000000000000 0x1
0x927: V952 = AND 0xffffffffffffffffffffffffffffffffffffffff V946
0x929: JUMP 0x6cc
---
Entry stack: [V13, 0x6cc]
Stack pops: 1
Stack additions: [S0, V952]
Exit stack: [V13, 0x6cc, V952]

================================

Block 0x92a
[0x92a:0x933]
---
Predecessors: []
Successors: [0x934]
---
0x92a STOP
0x92b LOG1
0x92c PUSH6 0x627a7a723058
0x933 SHA3
---
0x92a: STOP 
0x92b: LOG S0 S1 S2
0x92c: V953 = 0x627a7a723058
0x933: V954 = SHA3 0x627a7a723058 S3
---
Entry stack: []
Stack pops: 0
Stack additions: [V954]
Exit stack: []

================================

Block 0x934
[0x934:0x963]
---
Predecessors: [0x92a]
Successors: []
---
0x934 JUMPDEST
0x935 DUP10
0x936 MISSING 0xc7
0x937 STOP
0x938 MISSING 0xc0
0x939 MISSING 0xa9
0x93a CALL
0x93b DUP15
0x93c DELEGATECALL
0x93d PC
0x93e MISSING 0xb7
0x93f MISSING 0xc
0x940 MISSING 0xb5
0x941 ADDRESS
0x942 DUP14
0x943 MISSING 0x5e
0x944 MISSING 0xb2
0x945 MISSING 0xce
0x946 PUSH29 0x8069611ca520361feabc42f270029
---
0x934: JUMPDEST 
0x936: MISSING 0xc7
0x937: STOP 
0x938: MISSING 0xc0
0x939: MISSING 0xa9
0x93a: V955 = CALL S0 S1 S2 S3 S4 S5 S6
0x93c: V956 = DELEGATECALL S20 V955 S7 S8 S9 S10
0x93d: V957 = PC
0x93e: MISSING 0xb7
0x93f: MISSING 0xc
0x940: MISSING 0xb5
0x941: V958 = ADDRESS
0x943: MISSING 0x5e
0x944: MISSING 0xb2
0x945: MISSING 0xce
0x946: V959 = 0x8069611ca520361feabc42f270029
---
Entry stack: [V954]
Stack pops: 4420
Stack additions: [0x8069611ca520361feabc42f270029]
Exit stack: []

================================

Function 0:
Public function signature: 0x27ebcf0e
Entry block: 0x6b9
Exit block: 0x6cc
Body: 0x6b9, 0x6c0, 0x6c4, 0x6cc, 0x830

Function 1:
Public function signature: 0x497fb5b9
Entry block: 0x6e8
Exit block: 0x6fb
Body: 0x6e8, 0x6ef, 0x6f3, 0x6fb, 0x83f

Function 2:
Public function signature: 0x519ee19e
Entry block: 0x70f
Exit block: 0x722
Body: 0x70f, 0x716, 0x71a, 0x722, 0x84d

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x734
Exit block: 0x6cc
Body: 0x6cc, 0x734, 0x73b, 0x73f, 0x853

Function 4:
Public function signature: 0x96c5406d
Entry block: 0x747
Exit block: 0x722
Body: 0x722, 0x747, 0x74e, 0x752, 0x862

Function 5:
Public function signature: 0xa035b1fe
Entry block: 0x75a
Exit block: 0x7d6
Body: 0x75a, 0x761, 0x765, 0x76d, 0x791, 0x79a, 0x7a9, 0x7bd, 0x7d6, 0x868, 0x8b8, 0x8c0, 0x8d3, 0x8e1, 0x8f5, 0x8fe

Function 6:
Public function signature: 0xabd2cc5f
Entry block: 0x7e4
Exit block: 0x6fb
Body: 0x6fb, 0x7e4, 0x7eb, 0x7ef, 0x906

Function 7:
Public function signature: 0xf199a9b9
Entry block: 0x7f7
Exit block: 0x722
Body: 0x722, 0x7f7, 0x7fe, 0x802, 0x90f

Function 8:
Public function signature: 0xf30c4101
Entry block: 0x80a
Exit block: 0x722
Body: 0x722, 0x80a, 0x811, 0x815, 0x915

Function 9:
Public function signature: 0xf9081ba2
Entry block: 0x81d
Exit block: 0x6cc
Body: 0x6cc, 0x81d, 0x824, 0x828, 0x91b

Function 10:
Public fallback function
Entry block: 0x8a
Exit block: 0x644
Body: 0x8a, 0xe3, 0xe7, 0xf4, 0xf8, 0x10f, 0x13c, 0x140, 0x145, 0x150, 0x17d, 0x181, 0x193, 0x1fa, 0x1fe, 0x20b, 0x20f, 0x258, 0x25c, 0x269, 0x26d, 0x2c7, 0x2cb, 0x2d8, 0x2dc, 0x305, 0x311, 0x33e, 0x342, 0x351, 0x352, 0x35f, 0x38c, 0x390, 0x399, 0x39d, 0x3ad, 0x3ae, 0x3bd, 0x3eb, 0x3ef, 0x3f8, 0x428, 0x42c, 0x47e, 0x482, 0x48f, 0x493, 0x4b0, 0x4c1, 0x4d3, 0x4d4, 0x508, 0x50c, 0x565, 0x569, 0x576, 0x57a, 0x5ae, 0x5b2, 0x615, 0x619, 0x626, 0x62a, 0x644

