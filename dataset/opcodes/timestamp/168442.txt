Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xcc]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xcc
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xcc
0xc: JUMPI 0xcc V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xef]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x12065fe0
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xef
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x12065fe0
0x22: V15 = EQ V13 0x12065fe0
0x23: V16 = 0xef
0x26: JUMPI 0xef V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x114]
---
0x27 DUP1
0x28 PUSH4 0x3aedfb8b
0x2d EQ
0x2e PUSH2 0x114
0x31 JUMPI
---
0x28: V17 = 0x3aedfb8b
0x2d: V18 = EQ 0x3aedfb8b V13
0x2e: V19 = 0x114
0x31: JUMPI 0x114 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x127]
---
0x32 DUP1
0x33 PUSH4 0x3cecd719
0x38 EQ
0x39 PUSH2 0x127
0x3c JUMPI
---
0x33: V20 = 0x3cecd719
0x38: V21 = EQ 0x3cecd719 V13
0x39: V22 = 0x127
0x3c: JUMPI 0x127 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x13a]
---
0x3d DUP1
0x3e PUSH4 0x51c69b12
0x43 EQ
0x44 PUSH2 0x13a
0x47 JUMPI
---
0x3e: V23 = 0x51c69b12
0x43: V24 = EQ 0x51c69b12 V13
0x44: V25 = 0x13a
0x47: JUMPI 0x13a V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x14d]
---
0x48 DUP1
0x49 PUSH4 0x52c5785b
0x4e EQ
0x4f PUSH2 0x14d
0x52 JUMPI
---
0x49: V26 = 0x52c5785b
0x4e: V27 = EQ 0x52c5785b V13
0x4f: V28 = 0x14d
0x52: JUMPI 0x14d V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x161]
---
0x53 DUP1
0x54 PUSH4 0x590e1ae3
0x59 EQ
0x5a PUSH2 0x161
0x5d JUMPI
---
0x54: V29 = 0x590e1ae3
0x59: V30 = EQ 0x590e1ae3 V13
0x5a: V31 = 0x161
0x5d: JUMPI 0x161 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x174]
---
0x5e DUP1
0x5f PUSH4 0x83197ef0
0x64 EQ
0x65 PUSH2 0x174
0x68 JUMPI
---
0x5f: V32 = 0x83197ef0
0x64: V33 = EQ 0x83197ef0 V13
0x65: V34 = 0x174
0x68: JUMPI 0x174 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x187]
---
0x69 DUP1
0x6a PUSH4 0x8d6cc56d
0x6f EQ
0x70 PUSH2 0x187
0x73 JUMPI
---
0x6a: V35 = 0x8d6cc56d
0x6f: V36 = EQ 0x8d6cc56d V13
0x70: V37 = 0x187
0x73: JUMPI 0x187 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x19d]
---
0x74 DUP1
0x75 PUSH4 0x8da5cb5b
0x7a EQ
0x7b PUSH2 0x19d
0x7e JUMPI
---
0x75: V38 = 0x8da5cb5b
0x7a: V39 = EQ 0x8da5cb5b V13
0x7b: V40 = 0x19d
0x7e: JUMPI 0x19d V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x1cc]
---
0x7f DUP1
0x80 PUSH4 0xbe9a6555
0x85 EQ
0x86 PUSH2 0x1cc
0x89 JUMPI
---
0x80: V41 = 0xbe9a6555
0x85: V42 = EQ 0xbe9a6555 V13
0x86: V43 = 0x1cc
0x89: JUMPI 0x1cc V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x1df]
---
0x8a DUP1
0x8b PUSH4 0xce557031
0x90 EQ
0x91 PUSH2 0x1df
0x94 JUMPI
---
0x8b: V44 = 0xce557031
0x90: V45 = EQ 0xce557031 V13
0x91: V46 = 0x1df
0x94: JUMPI 0x1df V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x1f3]
---
0x95 DUP1
0x96 PUSH4 0xefbe1c1c
0x9b EQ
0x9c PUSH2 0x1f3
0x9f JUMPI
---
0x96: V47 = 0xefbe1c1c
0x9b: V48 = EQ 0xefbe1c1c V13
0x9c: V49 = 0x1f3
0x9f: JUMPI 0x1f3 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x206]
---
0xa0 DUP1
0xa1 PUSH4 0xf2fde38b
0xa6 EQ
0xa7 PUSH2 0x206
0xaa JUMPI
---
0xa1: V50 = 0xf2fde38b
0xa6: V51 = EQ 0xf2fde38b V13
0xa7: V52 = 0x206
0xaa: JUMPI 0x206 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x225]
---
0xab DUP1
0xac PUSH4 0xf81ed6ae
0xb1 EQ
0xb2 PUSH2 0x225
0xb5 JUMPI
---
0xac: V53 = 0xf81ed6ae
0xb1: V54 = EQ 0xf81ed6ae V13
0xb2: V55 = 0x225
0xb5: JUMPI 0x225 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x23b]
---
0xb6 DUP1
0xb7 PUSH4 0xfbfa77cf
0xbc EQ
0xbd PUSH2 0x23b
0xc0 JUMPI
---
0xb7: V56 = 0xfbfa77cf
0xbc: V57 = EQ 0xfbfa77cf V13
0xbd: V58 = 0x23b
0xc0: JUMPI 0x23b V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x24e]
---
0xc1 DUP1
0xc2 PUSH4 0xfc0c546a
0xc7 EQ
0xc8 PUSH2 0x24e
0xcb JUMPI
---
0xc2: V59 = 0xfc0c546a
0xc7: V60 = EQ 0xfc0c546a V13
0xc8: V61 = 0x24e
0xcb: JUMPI 0x24e V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0x0, 0xc1]
Successors: [0xd7, 0xe4]
---
0xcc JUMPDEST
0xcd PUSH1 0x5
0xcf SLOAD
0xd0 TIMESTAMP
0xd1 LT
0xd2 ISZERO
0xd3 PUSH2 0xe4
0xd6 JUMPI
---
0xcc: JUMPDEST 
0xcd: V62 = 0x5
0xcf: V63 = S[0x5]
0xd0: V64 = TIMESTAMP
0xd1: V65 = LT V64 V63
0xd2: V66 = ISZERO V65
0xd3: V67 = 0xe4
0xd6: JUMPI 0xe4 V66
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd7
[0xd7:0xde]
---
Predecessors: [0xcc]
Successors: [0x261]
---
0xd7 PUSH2 0xdf
0xda CALLER
0xdb PUSH2 0x261
0xde JUMP
---
0xd7: V68 = 0xdf
0xda: V69 = CALLER
0xdb: V70 = 0x261
0xde: JUMP 0x261
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xdf, V69]
Exit stack: [V13, 0xdf, V69]

================================

Block 0xdf
[0xdf:0xe3]
---
Predecessors: [0x44b]
Successors: [0xed]
---
0xdf JUMPDEST
0xe0 PUSH2 0xed
0xe3 JUMP
---
0xdf: JUMPDEST 
0xe0: V71 = 0xed
0xe3: JUMP 0xed
---
Entry stack: [V13, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S0]

================================

Block 0xe4
[0xe4:0xec]
---
Predecessors: [0xcc]
Successors: [0x4bf]
---
0xe4 JUMPDEST
0xe5 PUSH2 0xed
0xe8 CALLER
0xe9 PUSH2 0x4bf
0xec JUMP
---
0xe4: JUMPDEST 
0xe5: V72 = 0xed
0xe8: V73 = CALLER
0xe9: V74 = 0x4bf
0xec: JUMP 0x4bf
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xed, V73]
Exit stack: [V13, 0xed, V73]

================================

Block 0xed
[0xed:0xee]
---
Predecessors: [0xdf, 0x44b, 0x68f, 0x8cc, 0x9cd, 0xc99, 0xd42, 0xd60]
Successors: []
---
0xed JUMPDEST
0xee STOP
---
0xed: JUMPDEST 
0xee: STOP 
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S2, S1, S0]

================================

Block 0xef
[0xef:0xf5]
---
Predecessors: [0xd]
Successors: [0xf6, 0xfa]
---
0xef JUMPDEST
0xf0 CALLVALUE
0xf1 ISZERO
0xf2 PUSH2 0xfa
0xf5 JUMPI
---
0xef: JUMPDEST 
0xf0: V75 = CALLVALUE
0xf1: V76 = ISZERO V75
0xf2: V77 = 0xfa
0xf5: JUMPI 0xfa V76
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0xef]
Successors: []
---
0xf6 PUSH1 0x0
0xf8 DUP1
0xf9 REVERT
---
0xf6: V78 = 0x0
0xf9: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0xef]
Successors: [0x704]
---
0xfa JUMPDEST
0xfb PUSH2 0x102
0xfe PUSH2 0x704
0x101 JUMP
---
0xfa: JUMPDEST 
0xfb: V79 = 0x102
0xfe: V80 = 0x704
0x101: JUMP 0x704
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x102]
Exit stack: [V13, 0x102]

================================

Block 0x102
[0x102:0x113]
---
Predecessors: [0x704, 0x9d2, 0xce3, 0xce9]
Successors: []
---
0x102 JUMPDEST
0x103 PUSH1 0x40
0x105 MLOAD
0x106 SWAP1
0x107 DUP2
0x108 MSTORE
0x109 PUSH1 0x20
0x10b ADD
0x10c PUSH1 0x40
0x10e MLOAD
0x10f DUP1
0x110 SWAP2
0x111 SUB
0x112 SWAP1
0x113 RETURN
---
0x102: JUMPDEST 
0x103: V81 = 0x40
0x105: V82 = M[0x40]
0x108: M[V82] = S0
0x109: V83 = 0x20
0x10b: V84 = ADD 0x20 V82
0x10c: V85 = 0x40
0x10e: V86 = M[0x40]
0x111: V87 = SUB V84 V86
0x113: RETURN V86 V87
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x114
[0x114:0x11a]
---
Predecessors: [0x27]
Successors: [0x11b, 0x11f]
---
0x114 JUMPDEST
0x115 CALLVALUE
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x114: JUMPDEST 
0x115: V88 = CALLVALUE
0x116: V89 = ISZERO V88
0x117: V90 = 0x11f
0x11a: JUMPI 0x11f V89
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x114]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V91 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x11f
[0x11f:0x126]
---
Predecessors: [0x114]
Successors: [0x712]
---
0x11f JUMPDEST
0x120 PUSH2 0xed
0x123 PUSH2 0x712
0x126 JUMP
---
0x11f: JUMPDEST 
0x120: V92 = 0xed
0x123: V93 = 0x712
0x126: JUMP 0x712
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xed]
Exit stack: [V13, 0xed]

================================

Block 0x127
[0x127:0x12d]
---
Predecessors: [0x32]
Successors: [0x12e, 0x132]
---
0x127 JUMPDEST
0x128 CALLVALUE
0x129 ISZERO
0x12a PUSH2 0x132
0x12d JUMPI
---
0x127: JUMPDEST 
0x128: V94 = CALLVALUE
0x129: V95 = ISZERO V94
0x12a: V96 = 0x132
0x12d: JUMPI 0x132 V95
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x12e
[0x12e:0x131]
---
Predecessors: [0x127]
Successors: []
---
0x12e PUSH1 0x0
0x130 DUP1
0x131 REVERT
---
0x12e: V97 = 0x0
0x131: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x132
[0x132:0x139]
---
Predecessors: [0x127]
Successors: [0x8d3]
---
0x132 JUMPDEST
0x133 PUSH2 0xed
0x136 PUSH2 0x8d3
0x139 JUMP
---
0x132: JUMPDEST 
0x133: V98 = 0xed
0x136: V99 = 0x8d3
0x139: JUMP 0x8d3
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xed]
Exit stack: [V13, 0xed]

================================

Block 0x13a
[0x13a:0x140]
---
Predecessors: [0x3d]
Successors: [0x141, 0x145]
---
0x13a JUMPDEST
0x13b CALLVALUE
0x13c ISZERO
0x13d PUSH2 0x145
0x140 JUMPI
---
0x13a: JUMPDEST 
0x13b: V100 = CALLVALUE
0x13c: V101 = ISZERO V100
0x13d: V102 = 0x145
0x140: JUMPI 0x145 V101
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x141
[0x141:0x144]
---
Predecessors: [0x13a]
Successors: []
---
0x141 PUSH1 0x0
0x143 DUP1
0x144 REVERT
---
0x141: V103 = 0x0
0x144: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x145
[0x145:0x14c]
---
Predecessors: [0x13a]
Successors: [0x9d2]
---
0x145 JUMPDEST
0x146 PUSH2 0x102
0x149 PUSH2 0x9d2
0x14c JUMP
---
0x145: JUMPDEST 
0x146: V104 = 0x102
0x149: V105 = 0x9d2
0x14c: JUMP 0x9d2
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x102]
Exit stack: [V13, 0x102]

================================

Block 0x14d
[0x14d:0x160]
---
Predecessors: [0x48]
Successors: [0x261]
---
0x14d JUMPDEST
0x14e PUSH2 0xed
0x151 PUSH1 0x1
0x153 PUSH1 0xa0
0x155 PUSH1 0x2
0x157 EXP
0x158 SUB
0x159 PUSH1 0x4
0x15b CALLDATALOAD
0x15c AND
0x15d PUSH2 0x261
0x160 JUMP
---
0x14d: JUMPDEST 
0x14e: V106 = 0xed
0x151: V107 = 0x1
0x153: V108 = 0xa0
0x155: V109 = 0x2
0x157: V110 = EXP 0x2 0xa0
0x158: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x159: V112 = 0x4
0x15b: V113 = CALLDATALOAD 0x4
0x15c: V114 = AND V113 0xffffffffffffffffffffffffffffffffffffffff
0x15d: V115 = 0x261
0x160: JUMP 0x261
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xed, V114]
Exit stack: [V13, 0xed, V114]

================================

Block 0x161
[0x161:0x167]
---
Predecessors: [0x53]
Successors: [0x168, 0x16c]
---
0x161 JUMPDEST
0x162 CALLVALUE
0x163 ISZERO
0x164 PUSH2 0x16c
0x167 JUMPI
---
0x161: JUMPDEST 
0x162: V116 = CALLVALUE
0x163: V117 = ISZERO V116
0x164: V118 = 0x16c
0x167: JUMPI 0x16c V117
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x168
[0x168:0x16b]
---
Predecessors: [0x161]
Successors: []
---
0x168 PUSH1 0x0
0x16a DUP1
0x16b REVERT
---
0x168: V119 = 0x0
0x16b: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x16c
[0x16c:0x173]
---
Predecessors: [0x161]
Successors: [0x9d8]
---
0x16c JUMPDEST
0x16d PUSH2 0xed
0x170 PUSH2 0x9d8
0x173 JUMP
---
0x16c: JUMPDEST 
0x16d: V120 = 0xed
0x170: V121 = 0x9d8
0x173: JUMP 0x9d8
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xed]
Exit stack: [V13, 0xed]

================================

Block 0x174
[0x174:0x17a]
---
Predecessors: [0x5e]
Successors: [0x17b, 0x17f]
---
0x174 JUMPDEST
0x175 CALLVALUE
0x176 ISZERO
0x177 PUSH2 0x17f
0x17a JUMPI
---
0x174: JUMPDEST 
0x175: V122 = CALLVALUE
0x176: V123 = ISZERO V122
0x177: V124 = 0x17f
0x17a: JUMPI 0x17f V123
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x17b
[0x17b:0x17e]
---
Predecessors: [0x174]
Successors: []
---
0x17b PUSH1 0x0
0x17d DUP1
0x17e REVERT
---
0x17b: V125 = 0x0
0x17e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x17f
[0x17f:0x186]
---
Predecessors: [0x174]
Successors: [0xb17]
---
0x17f JUMPDEST
0x180 PUSH2 0xed
0x183 PUSH2 0xb17
0x186 JUMP
---
0x17f: JUMPDEST 
0x180: V126 = 0xed
0x183: V127 = 0xb17
0x186: JUMP 0xb17
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xed]
Exit stack: [V13, 0xed]

================================

Block 0x187
[0x187:0x18d]
---
Predecessors: [0x69]
Successors: [0x18e, 0x192]
---
0x187 JUMPDEST
0x188 CALLVALUE
0x189 ISZERO
0x18a PUSH2 0x192
0x18d JUMPI
---
0x187: JUMPDEST 
0x188: V128 = CALLVALUE
0x189: V129 = ISZERO V128
0x18a: V130 = 0x192
0x18d: JUMPI 0x192 V129
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x18e
[0x18e:0x191]
---
Predecessors: [0x187]
Successors: []
---
0x18e PUSH1 0x0
0x190 DUP1
0x191 REVERT
---
0x18e: V131 = 0x0
0x191: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x192
[0x192:0x19c]
---
Predecessors: [0x187]
Successors: [0xc70]
---
0x192 JUMPDEST
0x193 PUSH2 0xed
0x196 PUSH1 0x4
0x198 CALLDATALOAD
0x199 PUSH2 0xc70
0x19c JUMP
---
0x192: JUMPDEST 
0x193: V132 = 0xed
0x196: V133 = 0x4
0x198: V134 = CALLDATALOAD 0x4
0x199: V135 = 0xc70
0x19c: JUMP 0xc70
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xed, V134]
Exit stack: [V13, 0xed, V134]

================================

Block 0x19d
[0x19d:0x1a3]
---
Predecessors: [0x74]
Successors: [0x1a4, 0x1a8]
---
0x19d JUMPDEST
0x19e CALLVALUE
0x19f ISZERO
0x1a0 PUSH2 0x1a8
0x1a3 JUMPI
---
0x19d: JUMPDEST 
0x19e: V136 = CALLVALUE
0x19f: V137 = ISZERO V136
0x1a0: V138 = 0x1a8
0x1a3: JUMPI 0x1a8 V137
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a4
[0x1a4:0x1a7]
---
Predecessors: [0x19d]
Successors: []
---
0x1a4 PUSH1 0x0
0x1a6 DUP1
0x1a7 REVERT
---
0x1a4: V139 = 0x0
0x1a7: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a8
[0x1a8:0x1af]
---
Predecessors: [0x19d]
Successors: [0xcd4]
---
0x1a8 JUMPDEST
0x1a9 PUSH2 0x1b0
0x1ac PUSH2 0xcd4
0x1af JUMP
---
0x1a8: JUMPDEST 
0x1a9: V140 = 0x1b0
0x1ac: V141 = 0xcd4
0x1af: JUMP 0xcd4
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1b0]
Exit stack: [V13, 0x1b0]

================================

Block 0x1b0
[0x1b0:0x1cb]
---
Predecessors: [0xcd4, 0xd65, 0xd74]
Successors: []
---
0x1b0 JUMPDEST
0x1b1 PUSH1 0x40
0x1b3 MLOAD
0x1b4 PUSH1 0x1
0x1b6 PUSH1 0xa0
0x1b8 PUSH1 0x2
0x1ba EXP
0x1bb SUB
0x1bc SWAP1
0x1bd SWAP2
0x1be AND
0x1bf DUP2
0x1c0 MSTORE
0x1c1 PUSH1 0x20
0x1c3 ADD
0x1c4 PUSH1 0x40
0x1c6 MLOAD
0x1c7 DUP1
0x1c8 SWAP2
0x1c9 SUB
0x1ca SWAP1
0x1cb RETURN
---
0x1b0: JUMPDEST 
0x1b1: V142 = 0x40
0x1b3: V143 = M[0x40]
0x1b4: V144 = 0x1
0x1b6: V145 = 0xa0
0x1b8: V146 = 0x2
0x1ba: V147 = EXP 0x2 0xa0
0x1bb: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1be: V149 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: M[V143] = V149
0x1c1: V150 = 0x20
0x1c3: V151 = ADD 0x20 V143
0x1c4: V152 = 0x40
0x1c6: V153 = M[0x40]
0x1c9: V154 = SUB V151 V153
0x1cb: RETURN V153 V154
---
Entry stack: [V13, 0x1b0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1b0]

================================

Block 0x1cc
[0x1cc:0x1d2]
---
Predecessors: [0x7f]
Successors: [0x1d3, 0x1d7]
---
0x1cc JUMPDEST
0x1cd CALLVALUE
0x1ce ISZERO
0x1cf PUSH2 0x1d7
0x1d2 JUMPI
---
0x1cc: JUMPDEST 
0x1cd: V155 = CALLVALUE
0x1ce: V156 = ISZERO V155
0x1cf: V157 = 0x1d7
0x1d2: JUMPI 0x1d7 V156
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d3
[0x1d3:0x1d6]
---
Predecessors: [0x1cc]
Successors: []
---
0x1d3 PUSH1 0x0
0x1d5 DUP1
0x1d6 REVERT
---
0x1d3: V158 = 0x0
0x1d6: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d7
[0x1d7:0x1de]
---
Predecessors: [0x1cc]
Successors: [0xce3]
---
0x1d7 JUMPDEST
0x1d8 PUSH2 0x102
0x1db PUSH2 0xce3
0x1de JUMP
---
0x1d7: JUMPDEST 
0x1d8: V159 = 0x102
0x1db: V160 = 0xce3
0x1de: JUMP 0xce3
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x102]
Exit stack: [V13, 0x102]

================================

Block 0x1df
[0x1df:0x1f2]
---
Predecessors: [0x8a]
Successors: [0x4bf]
---
0x1df JUMPDEST
0x1e0 PUSH2 0xed
0x1e3 PUSH1 0x1
0x1e5 PUSH1 0xa0
0x1e7 PUSH1 0x2
0x1e9 EXP
0x1ea SUB
0x1eb PUSH1 0x4
0x1ed CALLDATALOAD
0x1ee AND
0x1ef PUSH2 0x4bf
0x1f2 JUMP
---
0x1df: JUMPDEST 
0x1e0: V161 = 0xed
0x1e3: V162 = 0x1
0x1e5: V163 = 0xa0
0x1e7: V164 = 0x2
0x1e9: V165 = EXP 0x2 0xa0
0x1ea: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1eb: V167 = 0x4
0x1ed: V168 = CALLDATALOAD 0x4
0x1ee: V169 = AND V168 0xffffffffffffffffffffffffffffffffffffffff
0x1ef: V170 = 0x4bf
0x1f2: JUMP 0x4bf
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xed, V169]
Exit stack: [V13, 0xed, V169]

================================

Block 0x1f3
[0x1f3:0x1f9]
---
Predecessors: [0x95]
Successors: [0x1fa, 0x1fe]
---
0x1f3 JUMPDEST
0x1f4 CALLVALUE
0x1f5 ISZERO
0x1f6 PUSH2 0x1fe
0x1f9 JUMPI
---
0x1f3: JUMPDEST 
0x1f4: V171 = CALLVALUE
0x1f5: V172 = ISZERO V171
0x1f6: V173 = 0x1fe
0x1f9: JUMPI 0x1fe V172
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1fa
[0x1fa:0x1fd]
---
Predecessors: [0x1f3]
Successors: []
---
0x1fa PUSH1 0x0
0x1fc DUP1
0x1fd REVERT
---
0x1fa: V174 = 0x0
0x1fd: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1fe
[0x1fe:0x205]
---
Predecessors: [0x1f3]
Successors: [0xce9]
---
0x1fe JUMPDEST
0x1ff PUSH2 0x102
0x202 PUSH2 0xce9
0x205 JUMP
---
0x1fe: JUMPDEST 
0x1ff: V175 = 0x102
0x202: V176 = 0xce9
0x205: JUMP 0xce9
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x102]
Exit stack: [V13, 0x102]

================================

Block 0x206
[0x206:0x20c]
---
Predecessors: [0xa0]
Successors: [0x20d, 0x211]
---
0x206 JUMPDEST
0x207 CALLVALUE
0x208 ISZERO
0x209 PUSH2 0x211
0x20c JUMPI
---
0x206: JUMPDEST 
0x207: V177 = CALLVALUE
0x208: V178 = ISZERO V177
0x209: V179 = 0x211
0x20c: JUMPI 0x211 V178
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x20d
[0x20d:0x210]
---
Predecessors: [0x206]
Successors: []
---
0x20d PUSH1 0x0
0x20f DUP1
0x210 REVERT
---
0x20d: V180 = 0x0
0x210: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x211
[0x211:0x224]
---
Predecessors: [0x206]
Successors: [0xcef]
---
0x211 JUMPDEST
0x212 PUSH2 0xed
0x215 PUSH1 0x1
0x217 PUSH1 0xa0
0x219 PUSH1 0x2
0x21b EXP
0x21c SUB
0x21d PUSH1 0x4
0x21f CALLDATALOAD
0x220 AND
0x221 PUSH2 0xcef
0x224 JUMP
---
0x211: JUMPDEST 
0x212: V181 = 0xed
0x215: V182 = 0x1
0x217: V183 = 0xa0
0x219: V184 = 0x2
0x21b: V185 = EXP 0x2 0xa0
0x21c: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21d: V187 = 0x4
0x21f: V188 = CALLDATALOAD 0x4
0x220: V189 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x221: V190 = 0xcef
0x224: JUMP 0xcef
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xed, V189]
Exit stack: [V13, 0xed, V189]

================================

Block 0x225
[0x225:0x22b]
---
Predecessors: [0xab]
Successors: [0x22c, 0x230]
---
0x225 JUMPDEST
0x226 CALLVALUE
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x225: JUMPDEST 
0x226: V191 = CALLVALUE
0x227: V192 = ISZERO V191
0x228: V193 = 0x230
0x22b: JUMPI 0x230 V192
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x225]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V194 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x230
[0x230:0x23a]
---
Predecessors: [0x225]
Successors: [0xd45]
---
0x230 JUMPDEST
0x231 PUSH2 0xed
0x234 PUSH1 0x4
0x236 CALLDATALOAD
0x237 PUSH2 0xd45
0x23a JUMP
---
0x230: JUMPDEST 
0x231: V195 = 0xed
0x234: V196 = 0x4
0x236: V197 = CALLDATALOAD 0x4
0x237: V198 = 0xd45
0x23a: JUMP 0xd45
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xed, V197]
Exit stack: [V13, 0xed, V197]

================================

Block 0x23b
[0x23b:0x241]
---
Predecessors: [0xb6]
Successors: [0x242, 0x246]
---
0x23b JUMPDEST
0x23c CALLVALUE
0x23d ISZERO
0x23e PUSH2 0x246
0x241 JUMPI
---
0x23b: JUMPDEST 
0x23c: V199 = CALLVALUE
0x23d: V200 = ISZERO V199
0x23e: V201 = 0x246
0x241: JUMPI 0x246 V200
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x242
[0x242:0x245]
---
Predecessors: [0x23b]
Successors: []
---
0x242 PUSH1 0x0
0x244 DUP1
0x245 REVERT
---
0x242: V202 = 0x0
0x245: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x246
[0x246:0x24d]
---
Predecessors: [0x23b]
Successors: [0xd65]
---
0x246 JUMPDEST
0x247 PUSH2 0x1b0
0x24a PUSH2 0xd65
0x24d JUMP
---
0x246: JUMPDEST 
0x247: V203 = 0x1b0
0x24a: V204 = 0xd65
0x24d: JUMP 0xd65
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1b0]
Exit stack: [V13, 0x1b0]

================================

Block 0x24e
[0x24e:0x254]
---
Predecessors: [0xc1]
Successors: [0x255, 0x259]
---
0x24e JUMPDEST
0x24f CALLVALUE
0x250 ISZERO
0x251 PUSH2 0x259
0x254 JUMPI
---
0x24e: JUMPDEST 
0x24f: V205 = CALLVALUE
0x250: V206 = ISZERO V205
0x251: V207 = 0x259
0x254: JUMPI 0x259 V206
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x255
[0x255:0x258]
---
Predecessors: [0x24e]
Successors: []
---
0x255 PUSH1 0x0
0x257 DUP1
0x258 REVERT
---
0x255: V208 = 0x0
0x258: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x259
[0x259:0x260]
---
Predecessors: [0x24e]
Successors: [0xd74]
---
0x259 JUMPDEST
0x25a PUSH2 0x1b0
0x25d PUSH2 0xd74
0x260 JUMP
---
0x259: JUMPDEST 
0x25a: V209 = 0x1b0
0x25d: V210 = 0xd74
0x260: JUMP 0xd74
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1b0]
Exit stack: [V13, 0x1b0]

================================

Block 0x261
[0x261:0x2b2]
---
Predecessors: [0xd7, 0x14d]
Successors: [0x2b3, 0x2b7]
---
0x261 JUMPDEST
0x262 PUSH1 0x2
0x264 SLOAD
0x265 PUSH1 0x8
0x267 SLOAD
0x268 PUSH1 0x0
0x26a SWAP2
0x26b DUP3
0x26c SWAP2
0x26d DUP3
0x26e SWAP2
0x26f SWAP1
0x270 PUSH2 0x342
0x273 SWAP1
0x274 PUSH1 0x1
0x276 PUSH1 0xa0
0x278 PUSH1 0x2
0x27a EXP
0x27b SUB
0x27c AND
0x27d PUSH4 0x860f5048
0x282 DUP5
0x283 PUSH1 0x40
0x285 MLOAD
0x286 PUSH1 0x20
0x288 ADD
0x289 MSTORE
0x28a PUSH1 0x40
0x28c MLOAD
0x28d DUP2
0x28e PUSH4 0xffffffff
0x293 AND
0x294 PUSH1 0xe0
0x296 PUSH1 0x2
0x298 EXP
0x299 MUL
0x29a DUP2
0x29b MSTORE
0x29c PUSH1 0x4
0x29e ADD
0x29f PUSH1 0x20
0x2a1 PUSH1 0x40
0x2a3 MLOAD
0x2a4 DUP1
0x2a5 DUP4
0x2a6 SUB
0x2a7 DUP2
0x2a8 PUSH1 0x0
0x2aa DUP8
0x2ab DUP1
0x2ac EXTCODESIZE
0x2ad ISZERO
0x2ae ISZERO
0x2af PUSH2 0x2b7
0x2b2 JUMPI
---
0x261: JUMPDEST 
0x262: V211 = 0x2
0x264: V212 = S[0x2]
0x265: V213 = 0x8
0x267: V214 = S[0x8]
0x268: V215 = 0x0
0x270: V216 = 0x342
0x274: V217 = 0x1
0x276: V218 = 0xa0
0x278: V219 = 0x2
0x27a: V220 = EXP 0x2 0xa0
0x27b: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27c: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x27d: V223 = 0x860f5048
0x283: V224 = 0x40
0x285: V225 = M[0x40]
0x286: V226 = 0x20
0x288: V227 = ADD 0x20 V225
0x289: M[V227] = 0x0
0x28a: V228 = 0x40
0x28c: V229 = M[0x40]
0x28e: V230 = 0xffffffff
0x293: V231 = AND 0xffffffff 0x860f5048
0x294: V232 = 0xe0
0x296: V233 = 0x2
0x298: V234 = EXP 0x2 0xe0
0x299: V235 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x860f5048
0x29b: M[V229] = 0x860f504800000000000000000000000000000000000000000000000000000000
0x29c: V236 = 0x4
0x29e: V237 = ADD 0x4 V229
0x29f: V238 = 0x20
0x2a1: V239 = 0x40
0x2a3: V240 = M[0x40]
0x2a6: V241 = SUB V237 V240
0x2a8: V242 = 0x0
0x2ac: V243 = EXTCODESIZE V222
0x2ad: V244 = ISZERO V243
0x2ae: V245 = ISZERO V244
0x2af: V246 = 0x2b7
0x2b2: JUMPI 0x2b7 V245
---
Entry stack: [V13, {0xdf, 0xed}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V212, 0x342, V222, 0x860f5048, V237, 0x20, V240, V241, V240, 0x0, V222]
Exit stack: [V13, {0xdf, 0xed}, S0, 0x0, 0x0, 0x0, V212, 0x342, V222, 0x860f5048, V237, 0x20, V240, V241, V240, 0x0, V222]

================================

Block 0x2b3
[0x2b3:0x2b6]
---
Predecessors: [0x261]
Successors: []
---
0x2b3 PUSH1 0x0
0x2b5 DUP1
0x2b6 REVERT
---
0x2b3: V247 = 0x0
0x2b6: REVERT 0x0 0x0
---
Entry stack: [V13, {0xdf, 0xed}, S14, 0x0, 0x0, 0x0, V212, 0x342, V222, 0x860f5048, V237, 0x20, V240, V241, V240, 0x0, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V13, {0xdf, 0xed}, S14, 0x0, 0x0, 0x0, V212, 0x342, V222, 0x860f5048, V237, 0x20, V240, V241, V240, 0x0, V222]

================================

Block 0x2b7
[0x2b7:0x2c3]
---
Predecessors: [0x261, 0x4bf, 0x559, 0x712, 0x780, 0x9d8, 0xa47]
Successors: [0x2c4, 0x2c8]
---
0x2b7 JUMPDEST
0x2b8 PUSH2 0x2c6
0x2bb GAS
0x2bc SUB
0x2bd CALL
0x2be ISZERO
0x2bf ISZERO
0x2c0 PUSH2 0x2c8
0x2c3 JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V248 = 0x2c6
0x2bb: V249 = GAS
0x2bc: V250 = SUB V249 0x2c6
0x2bd: V251 = CALL V250 S0 0x0 S2 S3 S4 0x20
0x2be: V252 = ISZERO V251
0x2bf: V253 = ISZERO V252
0x2c0: V254 = 0x2c8
0x2c3: JUMPI 0x2c8 V253
---
Entry stack: [V13, S17, S16, S15, S14, S13, S12, S11, S10, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99}, S8, 0x860f5048, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S17, S16, S15, S14, S13, S12, S11, S10, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99}, S8, 0x860f5048, S6]

================================

Block 0x2c4
[0x2c4:0x2c7]
---
Predecessors: [0x2b7]
Successors: []
---
0x2c4 PUSH1 0x0
0x2c6 DUP1
0x2c7 REVERT
---
0x2c4: V255 = 0x0
0x2c7: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99}, S2, 0x860f5048, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99}, S2, 0x860f5048, S0]

================================

Block 0x2c8
[0x2c8:0x316]
---
Predecessors: [0x2b7]
Successors: [0x317, 0x31b]
---
0x2c8 JUMPDEST
0x2c9 POP
0x2ca POP
0x2cb POP
0x2cc PUSH1 0x40
0x2ce MLOAD
0x2cf DUP1
0x2d0 MLOAD
0x2d1 PUSH1 0x8
0x2d3 SLOAD
0x2d4 SWAP1
0x2d5 SWAP2
0x2d6 POP
0x2d7 PUSH1 0x1
0x2d9 PUSH1 0xa0
0x2db PUSH1 0x2
0x2dd EXP
0x2de SUB
0x2df AND
0x2e0 PUSH4 0x18160ddd
0x2e5 PUSH1 0x0
0x2e7 PUSH1 0x40
0x2e9 MLOAD
0x2ea PUSH1 0x20
0x2ec ADD
0x2ed MSTORE
0x2ee PUSH1 0x40
0x2f0 MLOAD
0x2f1 DUP2
0x2f2 PUSH4 0xffffffff
0x2f7 AND
0x2f8 PUSH1 0xe0
0x2fa PUSH1 0x2
0x2fc EXP
0x2fd MUL
0x2fe DUP2
0x2ff MSTORE
0x300 PUSH1 0x4
0x302 ADD
0x303 PUSH1 0x20
0x305 PUSH1 0x40
0x307 MLOAD
0x308 DUP1
0x309 DUP4
0x30a SUB
0x30b DUP2
0x30c PUSH1 0x0
0x30e DUP8
0x30f DUP1
0x310 EXTCODESIZE
0x311 ISZERO
0x312 ISZERO
0x313 PUSH2 0x31b
0x316 JUMPI
---
0x2c8: JUMPDEST 
0x2cc: V256 = 0x40
0x2ce: V257 = M[0x40]
0x2d0: V258 = M[V257]
0x2d1: V259 = 0x8
0x2d3: V260 = S[0x8]
0x2d7: V261 = 0x1
0x2d9: V262 = 0xa0
0x2db: V263 = 0x2
0x2dd: V264 = EXP 0x2 0xa0
0x2de: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2df: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x2e0: V267 = 0x18160ddd
0x2e5: V268 = 0x0
0x2e7: V269 = 0x40
0x2e9: V270 = M[0x40]
0x2ea: V271 = 0x20
0x2ec: V272 = ADD 0x20 V270
0x2ed: M[V272] = 0x0
0x2ee: V273 = 0x40
0x2f0: V274 = M[0x40]
0x2f2: V275 = 0xffffffff
0x2f7: V276 = AND 0xffffffff 0x18160ddd
0x2f8: V277 = 0xe0
0x2fa: V278 = 0x2
0x2fc: V279 = EXP 0x2 0xe0
0x2fd: V280 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0x2ff: M[V274] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x300: V281 = 0x4
0x302: V282 = ADD 0x4 V274
0x303: V283 = 0x20
0x305: V284 = 0x40
0x307: V285 = M[0x40]
0x30a: V286 = SUB V282 V285
0x30c: V287 = 0x0
0x310: V288 = EXTCODESIZE V266
0x311: V289 = ISZERO V288
0x312: V290 = ISZERO V289
0x313: V291 = 0x31b
0x316: JUMPI 0x31b V290
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99}, S2, 0x860f5048, S0]
Stack pops: 3
Stack additions: [V258, V266, 0x18160ddd, V282, 0x20, V285, V286, V285, 0x0, V266]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99}, V258, V266, 0x18160ddd, V282, 0x20, V285, V286, V285, 0x0, V266]

================================

Block 0x317
[0x317:0x31a]
---
Predecessors: [0x2c8]
Successors: []
---
0x317 PUSH1 0x0
0x319 DUP1
0x31a REVERT
---
0x317: V292 = 0x0
0x31a: REVERT 0x0 0x0
---
Entry stack: [V13, S17, S16, S15, S14, S13, S12, S11, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99}, V258, V266, 0x18160ddd, V282, 0x20, V285, V286, V285, 0x0, V266]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S17, S16, S15, S14, S13, S12, S11, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99}, V258, V266, 0x18160ddd, V282, 0x20, V285, V286, V285, 0x0, V266]

================================

Block 0x31b
[0x31b:0x327]
---
Predecessors: [0x2c8]
Successors: [0x328, 0x32c]
---
0x31b JUMPDEST
0x31c PUSH2 0x2c6
0x31f GAS
0x320 SUB
0x321 CALL
0x322 ISZERO
0x323 ISZERO
0x324 PUSH2 0x32c
0x327 JUMPI
---
0x31b: JUMPDEST 
0x31c: V293 = 0x2c6
0x31f: V294 = GAS
0x320: V295 = SUB V294 0x2c6
0x321: V296 = CALL V295 V266 0x0 V285 V286 V285 0x20
0x322: V297 = ISZERO V296
0x323: V298 = ISZERO V297
0x324: V299 = 0x32c
0x327: JUMPI 0x32c V298
---
Entry stack: [V13, S17, S16, S15, S14, S13, S12, S11, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99}, V258, V266, 0x18160ddd, V282, 0x20, V285, V286, V285, 0x0, V266]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S17, S16, S15, S14, S13, S12, S11, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99}, V258, V266, 0x18160ddd, V282]

================================

Block 0x328
[0x328:0x32b]
---
Predecessors: [0x31b]
Successors: []
---
0x328 PUSH1 0x0
0x32a DUP1
0x32b REVERT
---
0x328: V300 = 0x0
0x32b: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99}, S3, S2, 0x18160ddd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99}, S3, S2, 0x18160ddd, S0]

================================

Block 0x32c
[0x32c:0x341]
---
Predecessors: [0x31b]
Successors: [0xd83]
---
0x32c JUMPDEST
0x32d POP
0x32e POP
0x32f POP
0x330 PUSH1 0x40
0x332 MLOAD
0x333 DUP1
0x334 MLOAD
0x335 SWAP2
0x336 SWAP1
0x337 POP
0x338 PUSH4 0xffffffff
0x33d PUSH2 0xd83
0x340 AND
0x341 JUMP
---
0x32c: JUMPDEST 
0x330: V301 = 0x40
0x332: V302 = M[0x40]
0x334: V303 = M[V302]
0x338: V304 = 0xffffffff
0x33d: V305 = 0xd83
0x340: V306 = AND 0xd83 0xffffffff
0x341: JUMP 0xd83
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99}, S3, S2, 0x18160ddd, S0]
Stack pops: 4
Stack additions: [V303, S3]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99}, V303, S3]

================================

Block 0x342
[0x342:0x34a]
---
Predecessors: [0xd8f]
Successors: [0x34b, 0x34f]
---
0x342 JUMPDEST
0x343 LT
0x344 SWAP1
0x345 POP
0x346 DUP1
0x347 PUSH2 0x34f
0x34a JUMPI
---
0x342: JUMPDEST 
0x343: V307 = LT V1367 S1
0x347: V308 = 0x34f
0x34a: JUMPI 0x34f V307
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1367]
Stack pops: 3
Stack additions: [V307]
Exit stack: [V13, S7, S6, S5, S4, S3, V307]

================================

Block 0x34b
[0x34b:0x34e]
---
Predecessors: [0x342]
Successors: []
---
0x34b PUSH1 0x0
0x34d DUP1
0x34e REVERT
---
0x34b: V309 = 0x0
0x34e: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, S2, S1, V307]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, V307]

================================

Block 0x34f
[0x34f:0x358]
---
Predecessors: [0x342]
Successors: [0x359, 0x35d]
---
0x34f JUMPDEST
0x350 PUSH1 0x5
0x352 SLOAD
0x353 TIMESTAMP
0x354 LT
0x355 PUSH2 0x35d
0x358 JUMPI
---
0x34f: JUMPDEST 
0x350: V310 = 0x5
0x352: V311 = S[0x5]
0x353: V312 = TIMESTAMP
0x354: V313 = LT V312 V311
0x355: V314 = 0x35d
0x358: JUMPI 0x35d V313
---
Entry stack: [V13, S5, S4, S3, S2, S1, V307]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, V307]

================================

Block 0x359
[0x359:0x35c]
---
Predecessors: [0x34f]
Successors: []
---
0x359 PUSH1 0x0
0x35b DUP1
0x35c REVERT
---
0x359: V315 = 0x0
0x35c: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, S2, S1, V307]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, V307]

================================

Block 0x35d
[0x35d:0x372]
---
Predecessors: [0x34f]
Successors: [0xd95]
---
0x35d JUMPDEST
0x35e PUSH1 0x4
0x360 SLOAD
0x361 CALLVALUE
0x362 SWAP4
0x363 POP
0x364 PUSH2 0x373
0x367 SWAP1
0x368 DUP5
0x369 PUSH4 0xffffffff
0x36e PUSH2 0xd95
0x371 AND
0x372 JUMP
---
0x35d: JUMPDEST 
0x35e: V316 = 0x4
0x360: V317 = S[0x4]
0x361: V318 = CALLVALUE
0x364: V319 = 0x373
0x369: V320 = 0xffffffff
0x36e: V321 = 0xd95
0x371: V322 = AND 0xd95 0xffffffff
0x372: JUMP 0xd95
---
Entry stack: [V13, S5, S4, S3, S2, S1, V307]
Stack pops: 3
Stack additions: [V318, S1, S0, 0x373, V317, V318]
Exit stack: [V13, S5, S4, S3, V318, S1, V307, 0x373, V317, V318]

================================

Block 0x373
[0x373:0x388]
---
Predecessors: [0xdb9]
Successors: [0xdc0]
---
0x373 JUMPDEST
0x374 SWAP2
0x375 POP
0x376 PUSH2 0x396
0x379 PUSH2 0x389
0x37c DUP4
0x37d PUSH1 0x4
0x37f PUSH4 0xffffffff
0x384 PUSH2 0xdc0
0x387 AND
0x388 JUMP
---
0x373: JUMPDEST 
0x376: V323 = 0x396
0x379: V324 = 0x389
0x37d: V325 = 0x4
0x37f: V326 = 0xffffffff
0x384: V327 = 0xdc0
0x387: V328 = AND 0xdc0 0xffffffff
0x388: JUMP 0xdc0
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, 0x396, 0x389, S0, 0x4]
Exit stack: [V13, S6, S5, S4, S3, S0, S1, 0x396, 0x389, S0, 0x4]

================================

Block 0x389
[0x389:0x395]
---
Predecessors: [0xdd7]
Successors: [0xde0]
---
0x389 JUMPDEST
0x38a DUP4
0x38b SWAP1
0x38c PUSH4 0xffffffff
0x391 PUSH2 0xde0
0x394 AND
0x395 JUMP
---
0x389: JUMPDEST 
0x38c: V329 = 0xffffffff
0x391: V330 = 0xde0
0x394: V331 = AND 0xde0 0xffffffff
0x395: JUMP 0xde0
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, {0x396, 0x5da}, V1386]
Stack pops: 4
Stack additions: [S3, S2, S1, S3, S0]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, {0x396, 0x5da}, S3, V1386]

================================

Block 0x396
[0x396:0x3c1]
---
Predecessors: [0xdb9]
Successors: [0xde0]
---
0x396 JUMPDEST
0x397 PUSH1 0x1
0x399 PUSH1 0xa0
0x39b PUSH1 0x2
0x39d EXP
0x39e SUB
0x39f CALLER
0x3a0 AND
0x3a1 PUSH1 0x0
0x3a3 SWAP1
0x3a4 DUP2
0x3a5 MSTORE
0x3a6 PUSH1 0xa
0x3a8 PUSH1 0x20
0x3aa MSTORE
0x3ab PUSH1 0x40
0x3ad SWAP1
0x3ae SHA3
0x3af SLOAD
0x3b0 SWAP1
0x3b1 SWAP3
0x3b2 POP
0x3b3 PUSH2 0x3c2
0x3b6 SWAP1
0x3b7 CALLVALUE
0x3b8 PUSH4 0xffffffff
0x3bd PUSH2 0xde0
0x3c0 AND
0x3c1 JUMP
---
0x396: JUMPDEST 
0x397: V332 = 0x1
0x399: V333 = 0xa0
0x39b: V334 = 0x2
0x39d: V335 = EXP 0x2 0xa0
0x39e: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39f: V337 = CALLER
0x3a0: V338 = AND V337 0xffffffffffffffffffffffffffffffffffffffff
0x3a1: V339 = 0x0
0x3a5: M[0x0] = V338
0x3a6: V340 = 0xa
0x3a8: V341 = 0x20
0x3aa: M[0x20] = 0xa
0x3ab: V342 = 0x40
0x3ae: V343 = SHA3 0x0 0x40
0x3af: V344 = S[V343]
0x3b3: V345 = 0x3c2
0x3b7: V346 = CALLVALUE
0x3b8: V347 = 0xffffffff
0x3bd: V348 = 0xde0
0x3c0: V349 = AND 0xde0 0xffffffff
0x3c1: JUMP 0xde0
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, 0x3c2, V344, V346]
Exit stack: [V13, S6, S5, S4, S3, S0, S1, 0x3c2, V344, V346]

================================

Block 0x3c2
[0x3c2:0x435]
---
Predecessors: [0xdb9]
Successors: [0x436, 0x43a]
---
0x3c2 JUMPDEST
0x3c3 PUSH1 0x1
0x3c5 PUSH1 0xa0
0x3c7 PUSH1 0x2
0x3c9 EXP
0x3ca SUB
0x3cb CALLER
0x3cc DUP2
0x3cd AND
0x3ce PUSH1 0x0
0x3d0 SWAP1
0x3d1 DUP2
0x3d2 MSTORE
0x3d3 PUSH1 0xa
0x3d5 PUSH1 0x20
0x3d7 MSTORE
0x3d8 PUSH1 0x40
0x3da DUP1
0x3db DUP3
0x3dc SHA3
0x3dd SWAP4
0x3de SWAP1
0x3df SWAP4
0x3e0 SSTORE
0x3e1 PUSH1 0x8
0x3e3 SLOAD
0x3e4 SWAP1
0x3e5 SWAP2
0x3e6 AND
0x3e7 SWAP2
0x3e8 PUSH4 0x40c10f19
0x3ed SWAP2
0x3ee DUP8
0x3ef SWAP2
0x3f0 DUP7
0x3f1 SWAP2
0x3f2 SWAP1
0x3f3 MLOAD
0x3f4 PUSH1 0x20
0x3f6 ADD
0x3f7 MSTORE
0x3f8 PUSH1 0x40
0x3fa MLOAD
0x3fb PUSH1 0xe0
0x3fd PUSH1 0x2
0x3ff EXP
0x400 PUSH4 0xffffffff
0x405 DUP6
0x406 AND
0x407 MUL
0x408 DUP2
0x409 MSTORE
0x40a PUSH1 0x1
0x40c PUSH1 0xa0
0x40e PUSH1 0x2
0x410 EXP
0x411 SUB
0x412 SWAP1
0x413 SWAP3
0x414 AND
0x415 PUSH1 0x4
0x417 DUP4
0x418 ADD
0x419 MSTORE
0x41a PUSH1 0x24
0x41c DUP3
0x41d ADD
0x41e MSTORE
0x41f PUSH1 0x44
0x421 ADD
0x422 PUSH1 0x20
0x424 PUSH1 0x40
0x426 MLOAD
0x427 DUP1
0x428 DUP4
0x429 SUB
0x42a DUP2
0x42b PUSH1 0x0
0x42d DUP8
0x42e DUP1
0x42f EXTCODESIZE
0x430 ISZERO
0x431 ISZERO
0x432 PUSH2 0x43a
0x435 JUMPI
---
0x3c2: JUMPDEST 
0x3c3: V350 = 0x1
0x3c5: V351 = 0xa0
0x3c7: V352 = 0x2
0x3c9: V353 = EXP 0x2 0xa0
0x3ca: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cb: V355 = CALLER
0x3cd: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x3ce: V357 = 0x0
0x3d2: M[0x0] = V356
0x3d3: V358 = 0xa
0x3d5: V359 = 0x20
0x3d7: M[0x20] = 0xa
0x3d8: V360 = 0x40
0x3dc: V361 = SHA3 0x0 0x40
0x3e0: S[V361] = S0
0x3e1: V362 = 0x8
0x3e3: V363 = S[0x8]
0x3e6: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x3e8: V365 = 0x40c10f19
0x3f3: V366 = M[0x40]
0x3f4: V367 = 0x20
0x3f6: V368 = ADD 0x20 V366
0x3f7: M[V368] = 0x0
0x3f8: V369 = 0x40
0x3fa: V370 = M[0x40]
0x3fb: V371 = 0xe0
0x3fd: V372 = 0x2
0x3ff: V373 = EXP 0x2 0xe0
0x400: V374 = 0xffffffff
0x406: V375 = AND 0x40c10f19 0xffffffff
0x407: V376 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x409: M[V370] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x40a: V377 = 0x1
0x40c: V378 = 0xa0
0x40e: V379 = 0x2
0x410: V380 = EXP 0x2 0xa0
0x411: V381 = SUB 0x10000000000000000000000000000000000000000 0x1
0x414: V382 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x415: V383 = 0x4
0x418: V384 = ADD V370 0x4
0x419: M[V384] = V382
0x41a: V385 = 0x24
0x41d: V386 = ADD V370 0x24
0x41e: M[V386] = S2
0x41f: V387 = 0x44
0x421: V388 = ADD 0x44 V370
0x422: V389 = 0x20
0x424: V390 = 0x40
0x426: V391 = M[0x40]
0x429: V392 = SUB V388 V391
0x42b: V393 = 0x0
0x42f: V394 = EXTCODESIZE V364
0x430: V395 = ISZERO V394
0x431: V396 = ISZERO V395
0x432: V397 = 0x43a
0x435: JUMPI 0x43a V396
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V364, 0x40c10f19, V388, 0x20, V391, V392, V391, 0x0, V364]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, V364, 0x40c10f19, V388, 0x20, V391, V392, V391, 0x0, V364]

================================

Block 0x436
[0x436:0x439]
---
Predecessors: [0x3c2]
Successors: []
---
0x436 PUSH1 0x0
0x438 DUP1
0x439 REVERT
---
0x436: V398 = 0x0
0x439: REVERT 0x0 0x0
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, V364, 0x40c10f19, V388, 0x20, V391, V392, V391, 0x0, V364]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, V364, 0x40c10f19, V388, 0x20, V391, V392, V391, 0x0, V364]

================================

Block 0x43a
[0x43a:0x446]
---
Predecessors: [0x3c2]
Successors: [0x447, 0x44b]
---
0x43a JUMPDEST
0x43b PUSH2 0x2c6
0x43e GAS
0x43f SUB
0x440 CALL
0x441 ISZERO
0x442 ISZERO
0x443 PUSH2 0x44b
0x446 JUMPI
---
0x43a: JUMPDEST 
0x43b: V399 = 0x2c6
0x43e: V400 = GAS
0x43f: V401 = SUB V400 0x2c6
0x440: V402 = CALL V401 V364 0x0 V391 V392 V391 0x20
0x441: V403 = ISZERO V402
0x442: V404 = ISZERO V403
0x443: V405 = 0x44b
0x446: JUMPI 0x44b V404
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, V364, 0x40c10f19, V388, 0x20, V391, V392, V391, 0x0, V364]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, V364, 0x40c10f19, V388]

================================

Block 0x447
[0x447:0x44a]
---
Predecessors: [0x43a]
Successors: []
---
0x447 PUSH1 0x0
0x449 DUP1
0x44a REVERT
---
0x447: V406 = 0x0
0x44a: REVERT 0x0 0x0
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, S2, 0x40c10f19, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, S4, S3, S2, 0x40c10f19, S0]

================================

Block 0x44b
[0x44b:0x4be]
---
Predecessors: [0x43a]
Successors: [0xdf, 0xed]
---
0x44b JUMPDEST
0x44c POP
0x44d POP
0x44e POP
0x44f PUSH1 0x40
0x451 MLOAD
0x452 DUP1
0x453 MLOAD
0x454 SWAP1
0x455 POP
0x456 POP
0x457 PUSH32 0xddc002e8c8b4a90c21a579964a8fd060767c719bc51190791efde1d9c4e14b65
0x478 DUP5
0x479 DUP5
0x47a DUP5
0x47b PUSH1 0x1
0x47d DUP1
0x47e PUSH1 0x40
0x480 MLOAD
0x481 PUSH1 0x1
0x483 PUSH1 0xa0
0x485 PUSH1 0x2
0x487 EXP
0x488 SUB
0x489 SWAP1
0x48a SWAP6
0x48b AND
0x48c DUP6
0x48d MSTORE
0x48e PUSH1 0x20
0x490 DUP6
0x491 ADD
0x492 SWAP4
0x493 SWAP1
0x494 SWAP4
0x495 MSTORE
0x496 PUSH1 0x40
0x498 DUP1
0x499 DUP6
0x49a ADD
0x49b SWAP3
0x49c SWAP1
0x49d SWAP3
0x49e MSTORE
0x49f ISZERO
0x4a0 ISZERO
0x4a1 PUSH1 0x60
0x4a3 DUP5
0x4a4 ADD
0x4a5 MSTORE
0x4a6 SWAP1
0x4a7 ISZERO
0x4a8 ISZERO
0x4a9 PUSH1 0x80
0x4ab DUP4
0x4ac ADD
0x4ad MSTORE
0x4ae PUSH1 0xa0
0x4b0 SWAP1
0x4b1 SWAP2
0x4b2 ADD
0x4b3 SWAP1
0x4b4 MLOAD
0x4b5 DUP1
0x4b6 SWAP2
0x4b7 SUB
0x4b8 SWAP1
0x4b9 LOG1
0x4ba POP
0x4bb POP
0x4bc POP
0x4bd POP
0x4be JUMP
---
0x44b: JUMPDEST 
0x44f: V407 = 0x40
0x451: V408 = M[0x40]
0x453: V409 = M[V408]
0x457: V410 = 0xddc002e8c8b4a90c21a579964a8fd060767c719bc51190791efde1d9c4e14b65
0x47b: V411 = 0x1
0x47e: V412 = 0x40
0x480: V413 = M[0x40]
0x481: V414 = 0x1
0x483: V415 = 0xa0
0x485: V416 = 0x2
0x487: V417 = EXP 0x2 0xa0
0x488: V418 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48b: V419 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x48d: M[V413] = V419
0x48e: V420 = 0x20
0x491: V421 = ADD V413 0x20
0x495: M[V421] = S5
0x496: V422 = 0x40
0x49a: V423 = ADD V413 0x40
0x49e: M[V423] = S4
0x49f: V424 = ISZERO 0x1
0x4a0: V425 = ISZERO 0x0
0x4a1: V426 = 0x60
0x4a4: V427 = ADD V413 0x60
0x4a5: M[V427] = 0x1
0x4a7: V428 = ISZERO 0x1
0x4a8: V429 = ISZERO 0x0
0x4a9: V430 = 0x80
0x4ac: V431 = ADD V413 0x80
0x4ad: M[V431] = 0x1
0x4ae: V432 = 0xa0
0x4b2: V433 = ADD V413 0xa0
0x4b4: V434 = M[0x40]
0x4b7: V435 = SUB V433 V434
0x4b9: LOG V434 V435 0xddc002e8c8b4a90c21a579964a8fd060767c719bc51190791efde1d9c4e14b65
0x4be: JUMP S7
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, S2, 0x40c10f19, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V13, S8]

================================

Block 0x4bf
[0x4bf:0x511]
---
Predecessors: [0xe4, 0x1df]
Successors: [0x2b7, 0x512]
---
0x4bf JUMPDEST
0x4c0 PUSH1 0x1
0x4c2 SLOAD
0x4c3 PUSH1 0x8
0x4c5 SLOAD
0x4c6 PUSH1 0x0
0x4c8 SWAP2
0x4c9 DUP3
0x4ca SWAP2
0x4cb DUP3
0x4cc SWAP2
0x4cd DUP3
0x4ce SWAP2
0x4cf PUSH2 0x516
0x4d2 SWAP1
0x4d3 PUSH1 0x1
0x4d5 PUSH1 0xa0
0x4d7 PUSH1 0x2
0x4d9 EXP
0x4da SUB
0x4db AND
0x4dc PUSH4 0x860f5048
0x4e1 DUP5
0x4e2 PUSH1 0x40
0x4e4 MLOAD
0x4e5 PUSH1 0x20
0x4e7 ADD
0x4e8 MSTORE
0x4e9 PUSH1 0x40
0x4eb MLOAD
0x4ec DUP2
0x4ed PUSH4 0xffffffff
0x4f2 AND
0x4f3 PUSH1 0xe0
0x4f5 PUSH1 0x2
0x4f7 EXP
0x4f8 MUL
0x4f9 DUP2
0x4fa MSTORE
0x4fb PUSH1 0x4
0x4fd ADD
0x4fe PUSH1 0x20
0x500 PUSH1 0x40
0x502 MLOAD
0x503 DUP1
0x504 DUP4
0x505 SUB
0x506 DUP2
0x507 PUSH1 0x0
0x509 DUP8
0x50a DUP1
0x50b EXTCODESIZE
0x50c ISZERO
0x50d ISZERO
0x50e PUSH2 0x2b7
0x511 JUMPI
---
0x4bf: JUMPDEST 
0x4c0: V436 = 0x1
0x4c2: V437 = S[0x1]
0x4c3: V438 = 0x8
0x4c5: V439 = S[0x8]
0x4c6: V440 = 0x0
0x4cf: V441 = 0x516
0x4d3: V442 = 0x1
0x4d5: V443 = 0xa0
0x4d7: V444 = 0x2
0x4d9: V445 = EXP 0x2 0xa0
0x4da: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4db: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x4dc: V448 = 0x860f5048
0x4e2: V449 = 0x40
0x4e4: V450 = M[0x40]
0x4e5: V451 = 0x20
0x4e7: V452 = ADD 0x20 V450
0x4e8: M[V452] = 0x0
0x4e9: V453 = 0x40
0x4eb: V454 = M[0x40]
0x4ed: V455 = 0xffffffff
0x4f2: V456 = AND 0xffffffff 0x860f5048
0x4f3: V457 = 0xe0
0x4f5: V458 = 0x2
0x4f7: V459 = EXP 0x2 0xe0
0x4f8: V460 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x860f5048
0x4fa: M[V454] = 0x860f504800000000000000000000000000000000000000000000000000000000
0x4fb: V461 = 0x4
0x4fd: V462 = ADD 0x4 V454
0x4fe: V463 = 0x20
0x500: V464 = 0x40
0x502: V465 = M[0x40]
0x505: V466 = SUB V462 V465
0x507: V467 = 0x0
0x50b: V468 = EXTCODESIZE V447
0x50c: V469 = ISZERO V468
0x50d: V470 = ISZERO V469
0x50e: V471 = 0x2b7
0x511: JUMPI 0x2b7 V470
---
Entry stack: [V13, 0xed, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, V437, 0x516, V447, 0x860f5048, V462, 0x20, V465, V466, V465, 0x0, V447]
Exit stack: [V13, 0xed, S0, 0x0, 0x0, 0x0, 0x0, V437, 0x516, V447, 0x860f5048, V462, 0x20, V465, V466, V465, 0x0, V447]

================================

Block 0x512
[0x512:0x515]
---
Predecessors: [0x4bf]
Successors: []
---
0x512 PUSH1 0x0
0x514 DUP1
0x515 REVERT
---
0x512: V472 = 0x0
0x515: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, S15, 0x0, 0x0, 0x0, 0x0, V437, 0x516, V447, 0x860f5048, V462, 0x20, V465, V466, V465, 0x0, V447]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, S15, 0x0, 0x0, 0x0, 0x0, V437, 0x516, V447, 0x860f5048, V462, 0x20, V465, V466, V465, 0x0, V447]

================================

Block 0x516
[0x516:0x51f]
---
Predecessors: [0xd8f]
Successors: [0x520, 0x524]
---
0x516 JUMPDEST
0x517 GT
0x518 ISZERO
0x519 SWAP1
0x51a POP
0x51b DUP1
0x51c PUSH2 0x524
0x51f JUMPI
---
0x516: JUMPDEST 
0x517: V473 = GT V1367 S1
0x518: V474 = ISZERO V473
0x51c: V475 = 0x524
0x51f: JUMPI 0x524 V474
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1367]
Stack pops: 3
Stack additions: [V474]
Exit stack: [V13, S7, S6, S5, S4, S3, V474]

================================

Block 0x520
[0x520:0x523]
---
Predecessors: [0x516]
Successors: []
---
0x520 PUSH1 0x0
0x522 DUP1
0x523 REVERT
---
0x520: V476 = 0x0
0x523: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, S2, S1, V474]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, V474]

================================

Block 0x524
[0x524:0x530]
---
Predecessors: [0x516]
Successors: [0x531, 0x538]
---
0x524 JUMPDEST
0x525 PUSH1 0x5
0x527 SLOAD
0x528 TIMESTAMP
0x529 LT
0x52a ISZERO
0x52b DUP1
0x52c ISZERO
0x52d PUSH2 0x538
0x530 JUMPI
---
0x524: JUMPDEST 
0x525: V477 = 0x5
0x527: V478 = S[0x5]
0x528: V479 = TIMESTAMP
0x529: V480 = LT V479 V478
0x52a: V481 = ISZERO V480
0x52c: V482 = ISZERO V481
0x52d: V483 = 0x538
0x530: JUMPI 0x538 V482
---
Entry stack: [V13, S5, S4, S3, S2, S1, V474]
Stack pops: 0
Stack additions: [V481]
Exit stack: [V13, S5, S4, S3, S2, S1, V474, V481]

================================

Block 0x531
[0x531:0x537]
---
Predecessors: [0x524]
Successors: [0x538]
---
0x531 POP
0x532 PUSH1 0x6
0x534 SLOAD
0x535 TIMESTAMP
0x536 GT
0x537 ISZERO
---
0x532: V484 = 0x6
0x534: V485 = S[0x6]
0x535: V486 = TIMESTAMP
0x536: V487 = GT V486 V485
0x537: V488 = ISZERO V487
---
Entry stack: [V13, S6, S5, S4, S3, S2, V474, V481]
Stack pops: 1
Stack additions: [V488]
Exit stack: [V13, S6, S5, S4, S3, S2, V474, V488]

================================

Block 0x538
[0x538:0x53e]
---
Predecessors: [0x524, 0x531]
Successors: [0x53f, 0x543]
---
0x538 JUMPDEST
0x539 ISZERO
0x53a ISZERO
0x53b PUSH2 0x543
0x53e JUMPI
---
0x538: JUMPDEST 
0x539: V489 = ISZERO S0
0x53a: V490 = ISZERO V489
0x53b: V491 = 0x543
0x53e: JUMPI 0x543 V490
---
Entry stack: [V13, S6, S5, S4, S3, S2, V474, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, V474]

================================

Block 0x53f
[0x53f:0x542]
---
Predecessors: [0x538]
Successors: []
---
0x53f PUSH1 0x0
0x541 DUP1
0x542 REVERT
---
0x53f: V492 = 0x0
0x542: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, S2, S1, V474]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, V474]

================================

Block 0x543
[0x543:0x558]
---
Predecessors: [0x538]
Successors: [0xd95]
---
0x543 JUMPDEST
0x544 PUSH1 0x4
0x546 SLOAD
0x547 CALLVALUE
0x548 SWAP5
0x549 POP
0x54a PUSH2 0x559
0x54d SWAP1
0x54e DUP6
0x54f PUSH4 0xffffffff
0x554 PUSH2 0xd95
0x557 AND
0x558 JUMP
---
0x543: JUMPDEST 
0x544: V493 = 0x4
0x546: V494 = S[0x4]
0x547: V495 = CALLVALUE
0x54a: V496 = 0x559
0x54f: V497 = 0xffffffff
0x554: V498 = 0xd95
0x557: V499 = AND 0xd95 0xffffffff
0x558: JUMP 0xd95
---
Entry stack: [V13, S5, S4, S3, S2, S1, V474]
Stack pops: 4
Stack additions: [V495, S2, S1, S0, 0x559, V494, V495]
Exit stack: [V13, S5, S4, V495, S2, S1, V474, 0x559, V494, V495]

================================

Block 0x559
[0x559:0x5aa]
---
Predecessors: [0xdb9]
Successors: [0x2b7, 0x5ab]
---
0x559 JUMPDEST
0x55a PUSH1 0x3
0x55c SLOAD
0x55d PUSH1 0x8
0x55f SLOAD
0x560 SWAP2
0x561 SWAP5
0x562 POP
0x563 PUSH1 0x0
0x565 SWAP4
0x566 POP
0x567 SWAP1
0x568 PUSH2 0x5af
0x56b SWAP1
0x56c PUSH1 0x1
0x56e PUSH1 0xa0
0x570 PUSH1 0x2
0x572 EXP
0x573 SUB
0x574 AND
0x575 PUSH4 0x860f5048
0x57a DUP6
0x57b PUSH1 0x40
0x57d MLOAD
0x57e PUSH1 0x20
0x580 ADD
0x581 MSTORE
0x582 PUSH1 0x40
0x584 MLOAD
0x585 DUP2
0x586 PUSH4 0xffffffff
0x58b AND
0x58c PUSH1 0xe0
0x58e PUSH1 0x2
0x590 EXP
0x591 MUL
0x592 DUP2
0x593 MSTORE
0x594 PUSH1 0x4
0x596 ADD
0x597 PUSH1 0x20
0x599 PUSH1 0x40
0x59b MLOAD
0x59c DUP1
0x59d DUP4
0x59e SUB
0x59f DUP2
0x5a0 PUSH1 0x0
0x5a2 DUP8
0x5a3 DUP1
0x5a4 EXTCODESIZE
0x5a5 ISZERO
0x5a6 ISZERO
0x5a7 PUSH2 0x2b7
0x5aa JUMPI
---
0x559: JUMPDEST 
0x55a: V500 = 0x3
0x55c: V501 = S[0x3]
0x55d: V502 = 0x8
0x55f: V503 = S[0x8]
0x563: V504 = 0x0
0x568: V505 = 0x5af
0x56c: V506 = 0x1
0x56e: V507 = 0xa0
0x570: V508 = 0x2
0x572: V509 = EXP 0x2 0xa0
0x573: V510 = SUB 0x10000000000000000000000000000000000000000 0x1
0x574: V511 = AND 0xffffffffffffffffffffffffffffffffffffffff V503
0x575: V512 = 0x860f5048
0x57b: V513 = 0x40
0x57d: V514 = M[0x40]
0x57e: V515 = 0x20
0x580: V516 = ADD 0x20 V514
0x581: M[V516] = 0x0
0x582: V517 = 0x40
0x584: V518 = M[0x40]
0x586: V519 = 0xffffffff
0x58b: V520 = AND 0xffffffff 0x860f5048
0x58c: V521 = 0xe0
0x58e: V522 = 0x2
0x590: V523 = EXP 0x2 0xe0
0x591: V524 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x860f5048
0x593: M[V518] = 0x860f504800000000000000000000000000000000000000000000000000000000
0x594: V525 = 0x4
0x596: V526 = ADD 0x4 V518
0x597: V527 = 0x20
0x599: V528 = 0x40
0x59b: V529 = M[0x40]
0x59e: V530 = SUB V526 V529
0x5a0: V531 = 0x0
0x5a4: V532 = EXTCODESIZE V511
0x5a5: V533 = ISZERO V532
0x5a6: V534 = ISZERO V533
0x5a7: V535 = 0x2b7
0x5aa: JUMPI 0x2b7 V534
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0, 0x0, S1, V501, 0x5af, V511, 0x860f5048, V526, 0x20, V529, V530, V529, 0x0, V511]
Exit stack: [V13, S6, S5, S4, S0, 0x0, S1, V501, 0x5af, V511, 0x860f5048, V526, 0x20, V529, V530, V529, 0x0, V511]

================================

Block 0x5ab
[0x5ab:0x5ae]
---
Predecessors: [0x559]
Successors: []
---
0x5ab PUSH1 0x0
0x5ad DUP1
0x5ae REVERT
---
0x5ab: V536 = 0x0
0x5ae: REVERT 0x0 0x0
---
Entry stack: [V13, S16, S15, S14, S13, 0x0, S11, V501, 0x5af, V511, 0x860f5048, V526, 0x20, V529, V530, V529, 0x0, V511]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S16, S15, S14, S13, 0x0, S11, V501, 0x5af, V511, 0x860f5048, V526, 0x20, V529, V530, V529, 0x0, V511]

================================

Block 0x5af
[0x5af:0x5b5]
---
Predecessors: [0xd8f]
Successors: [0x5b6, 0x5dd]
---
0x5af JUMPDEST
0x5b0 LT
0x5b1 ISZERO
0x5b2 PUSH2 0x5dd
0x5b5 JUMPI
---
0x5af: JUMPDEST 
0x5b0: V537 = LT V1367 S1
0x5b1: V538 = ISZERO V537
0x5b2: V539 = 0x5dd
0x5b5: JUMPI 0x5dd V538
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1367]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4, S3, S2]

================================

Block 0x5b6
[0x5b6:0x5cc]
---
Predecessors: [0x5af]
Successors: [0xdc0]
---
0x5b6 PUSH1 0x1
0x5b8 SWAP2
0x5b9 POP
0x5ba PUSH2 0x5da
0x5bd PUSH2 0x5cd
0x5c0 DUP5
0x5c1 PUSH1 0x5
0x5c3 PUSH4 0xffffffff
0x5c8 PUSH2 0xdc0
0x5cb AND
0x5cc JUMP
---
0x5b6: V540 = 0x1
0x5ba: V541 = 0x5da
0x5bd: V542 = 0x5cd
0x5c1: V543 = 0x5
0x5c3: V544 = 0xffffffff
0x5c8: V545 = 0xdc0
0x5cb: V546 = AND 0xdc0 0xffffffff
0x5cc: JUMP 0xdc0
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, 0x1, S0, 0x5da, 0x5cd, S2, 0x5]
Exit stack: [V13, S5, S4, S3, S2, 0x1, S0, 0x5da, 0x5cd, S2, 0x5]

================================

Block 0x5cd
[0x5cd:0x5d9]
---
Predecessors: [0xdd7]
Successors: [0xde0]
---
0x5cd JUMPDEST
0x5ce DUP5
0x5cf SWAP1
0x5d0 PUSH4 0xffffffff
0x5d5 PUSH2 0xde0
0x5d8 AND
0x5d9 JUMP
---
0x5cd: JUMPDEST 
0x5d0: V547 = 0xffffffff
0x5d5: V548 = 0xde0
0x5d8: V549 = AND 0xde0 0xffffffff
0x5d9: JUMP 0xde0
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, {0x396, 0x5da}, V1386]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S4, S0]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, {0x396, 0x5da}, S4, V1386]

================================

Block 0x5da
[0x5da:0x5dc]
---
Predecessors: [0xdb9]
Successors: [0x5dd]
---
0x5da JUMPDEST
0x5db SWAP3
0x5dc POP
---
0x5da: JUMPDEST 
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [V13, S6, S5, S4, S0, S2, S1]

================================

Block 0x5dd
[0x5dd:0x605]
---
Predecessors: [0x5af, 0x5da]
Successors: [0xde0]
---
0x5dd JUMPDEST
0x5de PUSH1 0x1
0x5e0 PUSH1 0xa0
0x5e2 PUSH1 0x2
0x5e4 EXP
0x5e5 SUB
0x5e6 CALLER
0x5e7 AND
0x5e8 PUSH1 0x0
0x5ea SWAP1
0x5eb DUP2
0x5ec MSTORE
0x5ed PUSH1 0xa
0x5ef PUSH1 0x20
0x5f1 MSTORE
0x5f2 PUSH1 0x40
0x5f4 SWAP1
0x5f5 SHA3
0x5f6 SLOAD
0x5f7 PUSH2 0x606
0x5fa SWAP1
0x5fb CALLVALUE
0x5fc PUSH4 0xffffffff
0x601 PUSH2 0xde0
0x604 AND
0x605 JUMP
---
0x5dd: JUMPDEST 
0x5de: V550 = 0x1
0x5e0: V551 = 0xa0
0x5e2: V552 = 0x2
0x5e4: V553 = EXP 0x2 0xa0
0x5e5: V554 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e6: V555 = CALLER
0x5e7: V556 = AND V555 0xffffffffffffffffffffffffffffffffffffffff
0x5e8: V557 = 0x0
0x5ec: M[0x0] = V556
0x5ed: V558 = 0xa
0x5ef: V559 = 0x20
0x5f1: M[0x20] = 0xa
0x5f2: V560 = 0x40
0x5f5: V561 = SHA3 0x0 0x40
0x5f6: V562 = S[V561]
0x5f7: V563 = 0x606
0x5fb: V564 = CALLVALUE
0x5fc: V565 = 0xffffffff
0x601: V566 = 0xde0
0x604: V567 = AND 0xde0 0xffffffff
0x605: JUMP 0xde0
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x606, V562, V564]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, 0x606, V562, V564]

================================

Block 0x606
[0x606:0x679]
---
Predecessors: [0xdb9]
Successors: [0x67a, 0x67e]
---
0x606 JUMPDEST
0x607 PUSH1 0x1
0x609 PUSH1 0xa0
0x60b PUSH1 0x2
0x60d EXP
0x60e SUB
0x60f CALLER
0x610 DUP2
0x611 AND
0x612 PUSH1 0x0
0x614 SWAP1
0x615 DUP2
0x616 MSTORE
0x617 PUSH1 0xa
0x619 PUSH1 0x20
0x61b MSTORE
0x61c PUSH1 0x40
0x61e DUP1
0x61f DUP3
0x620 SHA3
0x621 SWAP4
0x622 SWAP1
0x623 SWAP4
0x624 SSTORE
0x625 PUSH1 0x8
0x627 SLOAD
0x628 SWAP1
0x629 SWAP2
0x62a AND
0x62b SWAP2
0x62c PUSH4 0x40c10f19
0x631 SWAP2
0x632 DUP9
0x633 SWAP2
0x634 DUP8
0x635 SWAP2
0x636 SWAP1
0x637 MLOAD
0x638 PUSH1 0x20
0x63a ADD
0x63b MSTORE
0x63c PUSH1 0x40
0x63e MLOAD
0x63f PUSH1 0xe0
0x641 PUSH1 0x2
0x643 EXP
0x644 PUSH4 0xffffffff
0x649 DUP6
0x64a AND
0x64b MUL
0x64c DUP2
0x64d MSTORE
0x64e PUSH1 0x1
0x650 PUSH1 0xa0
0x652 PUSH1 0x2
0x654 EXP
0x655 SUB
0x656 SWAP1
0x657 SWAP3
0x658 AND
0x659 PUSH1 0x4
0x65b DUP4
0x65c ADD
0x65d MSTORE
0x65e PUSH1 0x24
0x660 DUP3
0x661 ADD
0x662 MSTORE
0x663 PUSH1 0x44
0x665 ADD
0x666 PUSH1 0x20
0x668 PUSH1 0x40
0x66a MLOAD
0x66b DUP1
0x66c DUP4
0x66d SUB
0x66e DUP2
0x66f PUSH1 0x0
0x671 DUP8
0x672 DUP1
0x673 EXTCODESIZE
0x674 ISZERO
0x675 ISZERO
0x676 PUSH2 0x67e
0x679 JUMPI
---
0x606: JUMPDEST 
0x607: V568 = 0x1
0x609: V569 = 0xa0
0x60b: V570 = 0x2
0x60d: V571 = EXP 0x2 0xa0
0x60e: V572 = SUB 0x10000000000000000000000000000000000000000 0x1
0x60f: V573 = CALLER
0x611: V574 = AND 0xffffffffffffffffffffffffffffffffffffffff V573
0x612: V575 = 0x0
0x616: M[0x0] = V574
0x617: V576 = 0xa
0x619: V577 = 0x20
0x61b: M[0x20] = 0xa
0x61c: V578 = 0x40
0x620: V579 = SHA3 0x0 0x40
0x624: S[V579] = S0
0x625: V580 = 0x8
0x627: V581 = S[0x8]
0x62a: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x62c: V583 = 0x40c10f19
0x637: V584 = M[0x40]
0x638: V585 = 0x20
0x63a: V586 = ADD 0x20 V584
0x63b: M[V586] = 0x0
0x63c: V587 = 0x40
0x63e: V588 = M[0x40]
0x63f: V589 = 0xe0
0x641: V590 = 0x2
0x643: V591 = EXP 0x2 0xe0
0x644: V592 = 0xffffffff
0x64a: V593 = AND 0x40c10f19 0xffffffff
0x64b: V594 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x64d: M[V588] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x64e: V595 = 0x1
0x650: V596 = 0xa0
0x652: V597 = 0x2
0x654: V598 = EXP 0x2 0xa0
0x655: V599 = SUB 0x10000000000000000000000000000000000000000 0x1
0x658: V600 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x659: V601 = 0x4
0x65c: V602 = ADD V588 0x4
0x65d: M[V602] = V600
0x65e: V603 = 0x24
0x661: V604 = ADD V588 0x24
0x662: M[V604] = S3
0x663: V605 = 0x44
0x665: V606 = ADD 0x44 V588
0x666: V607 = 0x20
0x668: V608 = 0x40
0x66a: V609 = M[0x40]
0x66d: V610 = SUB V606 V609
0x66f: V611 = 0x0
0x673: V612 = EXTCODESIZE V582
0x674: V613 = ISZERO V612
0x675: V614 = ISZERO V613
0x676: V615 = 0x67e
0x679: JUMPI 0x67e V614
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V582, 0x40c10f19, V606, 0x20, V609, V610, V609, 0x0, V582]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, V582, 0x40c10f19, V606, 0x20, V609, V610, V609, 0x0, V582]

================================

Block 0x67a
[0x67a:0x67d]
---
Predecessors: [0x606]
Successors: []
---
0x67a PUSH1 0x0
0x67c DUP1
0x67d REVERT
---
0x67a: V616 = 0x0
0x67d: REVERT 0x0 0x0
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, V582, 0x40c10f19, V606, 0x20, V609, V610, V609, 0x0, V582]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, V582, 0x40c10f19, V606, 0x20, V609, V610, V609, 0x0, V582]

================================

Block 0x67e
[0x67e:0x68a]
---
Predecessors: [0x606]
Successors: [0x68b, 0x68f]
---
0x67e JUMPDEST
0x67f PUSH2 0x2c6
0x682 GAS
0x683 SUB
0x684 CALL
0x685 ISZERO
0x686 ISZERO
0x687 PUSH2 0x68f
0x68a JUMPI
---
0x67e: JUMPDEST 
0x67f: V617 = 0x2c6
0x682: V618 = GAS
0x683: V619 = SUB V618 0x2c6
0x684: V620 = CALL V619 V582 0x0 V609 V610 V609 0x20
0x685: V621 = ISZERO V620
0x686: V622 = ISZERO V621
0x687: V623 = 0x68f
0x68a: JUMPI 0x68f V622
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, V582, 0x40c10f19, V606, 0x20, V609, V610, V609, 0x0, V582]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, V582, 0x40c10f19, V606]

================================

Block 0x68b
[0x68b:0x68e]
---
Predecessors: [0x67e]
Successors: []
---
0x68b PUSH1 0x0
0x68d DUP1
0x68e REVERT
---
0x68b: V624 = 0x0
0x68e: REVERT 0x0 0x0
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, S2, 0x40c10f19, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, S4, S3, S2, 0x40c10f19, S0]

================================

Block 0x68f
[0x68f:0x703]
---
Predecessors: [0x67e]
Successors: [0xed]
---
0x68f JUMPDEST
0x690 POP
0x691 POP
0x692 POP
0x693 PUSH1 0x40
0x695 MLOAD
0x696 DUP1
0x697 MLOAD
0x698 SWAP1
0x699 POP
0x69a POP
0x69b PUSH32 0xddc002e8c8b4a90c21a579964a8fd060767c719bc51190791efde1d9c4e14b65
0x6bc DUP6
0x6bd DUP6
0x6be DUP6
0x6bf PUSH1 0x0
0x6c1 DUP7
0x6c2 PUSH1 0x40
0x6c4 MLOAD
0x6c5 PUSH1 0x1
0x6c7 PUSH1 0xa0
0x6c9 PUSH1 0x2
0x6cb EXP
0x6cc SUB
0x6cd SWAP1
0x6ce SWAP6
0x6cf AND
0x6d0 DUP6
0x6d1 MSTORE
0x6d2 PUSH1 0x20
0x6d4 DUP6
0x6d5 ADD
0x6d6 SWAP4
0x6d7 SWAP1
0x6d8 SWAP4
0x6d9 MSTORE
0x6da PUSH1 0x40
0x6dc DUP1
0x6dd DUP6
0x6de ADD
0x6df SWAP3
0x6e0 SWAP1
0x6e1 SWAP3
0x6e2 MSTORE
0x6e3 ISZERO
0x6e4 ISZERO
0x6e5 PUSH1 0x60
0x6e7 DUP5
0x6e8 ADD
0x6e9 MSTORE
0x6ea SWAP1
0x6eb ISZERO
0x6ec ISZERO
0x6ed PUSH1 0x80
0x6ef DUP4
0x6f0 ADD
0x6f1 MSTORE
0x6f2 PUSH1 0xa0
0x6f4 SWAP1
0x6f5 SWAP2
0x6f6 ADD
0x6f7 SWAP1
0x6f8 MLOAD
0x6f9 DUP1
0x6fa SWAP2
0x6fb SUB
0x6fc SWAP1
0x6fd LOG1
0x6fe POP
0x6ff POP
0x700 POP
0x701 POP
0x702 POP
0x703 JUMP
---
0x68f: JUMPDEST 
0x693: V625 = 0x40
0x695: V626 = M[0x40]
0x697: V627 = M[V626]
0x69b: V628 = 0xddc002e8c8b4a90c21a579964a8fd060767c719bc51190791efde1d9c4e14b65
0x6bf: V629 = 0x0
0x6c2: V630 = 0x40
0x6c4: V631 = M[0x40]
0x6c5: V632 = 0x1
0x6c7: V633 = 0xa0
0x6c9: V634 = 0x2
0x6cb: V635 = EXP 0x2 0xa0
0x6cc: V636 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cf: V637 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0x6d1: M[V631] = V637
0x6d2: V638 = 0x20
0x6d5: V639 = ADD V631 0x20
0x6d9: M[V639] = S6
0x6da: V640 = 0x40
0x6de: V641 = ADD V631 0x40
0x6e2: M[V641] = S5
0x6e3: V642 = ISZERO 0x0
0x6e4: V643 = ISZERO 0x1
0x6e5: V644 = 0x60
0x6e8: V645 = ADD V631 0x60
0x6e9: M[V645] = 0x0
0x6eb: V646 = ISZERO S4
0x6ec: V647 = ISZERO V646
0x6ed: V648 = 0x80
0x6f0: V649 = ADD V631 0x80
0x6f1: M[V649] = V647
0x6f2: V650 = 0xa0
0x6f6: V651 = ADD V631 0xa0
0x6f8: V652 = M[0x40]
0x6fb: V653 = SUB V651 V652
0x6fd: LOG V652 V653 0xddc002e8c8b4a90c21a579964a8fd060767c719bc51190791efde1d9c4e14b65
0x703: JUMP S8
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, S2, 0x40c10f19, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V13]

================================

Block 0x704
[0x704:0x711]
---
Predecessors: [0xfa]
Successors: [0x102]
---
0x704 JUMPDEST
0x705 PUSH1 0x1
0x707 PUSH1 0xa0
0x709 PUSH1 0x2
0x70b EXP
0x70c SUB
0x70d ADDRESS
0x70e AND
0x70f BALANCE
0x710 SWAP1
0x711 JUMP
---
0x704: JUMPDEST 
0x705: V654 = 0x1
0x707: V655 = 0xa0
0x709: V656 = 0x2
0x70b: V657 = EXP 0x2 0xa0
0x70c: V658 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70d: V659 = ADDRESS
0x70e: V660 = AND V659 0xffffffffffffffffffffffffffffffffffffffff
0x70f: V661 = BALANCE V660
0x711: JUMP 0x102
---
Entry stack: [V13, 0x102]
Stack pops: 1
Stack additions: [V661]
Exit stack: [V13, V661]

================================

Block 0x712
[0x712:0x75f]
---
Predecessors: [0x11f]
Successors: [0x2b7, 0x760]
---
0x712 JUMPDEST
0x713 PUSH1 0x1
0x715 SLOAD
0x716 PUSH1 0x8
0x718 SLOAD
0x719 PUSH1 0x0
0x71b SWAP2
0x71c SWAP1
0x71d PUSH2 0x764
0x720 SWAP1
0x721 PUSH1 0x1
0x723 PUSH1 0xa0
0x725 PUSH1 0x2
0x727 EXP
0x728 SUB
0x729 AND
0x72a PUSH4 0x860f5048
0x72f DUP5
0x730 PUSH1 0x40
0x732 MLOAD
0x733 PUSH1 0x20
0x735 ADD
0x736 MSTORE
0x737 PUSH1 0x40
0x739 MLOAD
0x73a DUP2
0x73b PUSH4 0xffffffff
0x740 AND
0x741 PUSH1 0xe0
0x743 PUSH1 0x2
0x745 EXP
0x746 MUL
0x747 DUP2
0x748 MSTORE
0x749 PUSH1 0x4
0x74b ADD
0x74c PUSH1 0x20
0x74e PUSH1 0x40
0x750 MLOAD
0x751 DUP1
0x752 DUP4
0x753 SUB
0x754 DUP2
0x755 PUSH1 0x0
0x757 DUP8
0x758 DUP1
0x759 EXTCODESIZE
0x75a ISZERO
0x75b ISZERO
0x75c PUSH2 0x2b7
0x75f JUMPI
---
0x712: JUMPDEST 
0x713: V662 = 0x1
0x715: V663 = S[0x1]
0x716: V664 = 0x8
0x718: V665 = S[0x8]
0x719: V666 = 0x0
0x71d: V667 = 0x764
0x721: V668 = 0x1
0x723: V669 = 0xa0
0x725: V670 = 0x2
0x727: V671 = EXP 0x2 0xa0
0x728: V672 = SUB 0x10000000000000000000000000000000000000000 0x1
0x729: V673 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0x72a: V674 = 0x860f5048
0x730: V675 = 0x40
0x732: V676 = M[0x40]
0x733: V677 = 0x20
0x735: V678 = ADD 0x20 V676
0x736: M[V678] = 0x0
0x737: V679 = 0x40
0x739: V680 = M[0x40]
0x73b: V681 = 0xffffffff
0x740: V682 = AND 0xffffffff 0x860f5048
0x741: V683 = 0xe0
0x743: V684 = 0x2
0x745: V685 = EXP 0x2 0xe0
0x746: V686 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x860f5048
0x748: M[V680] = 0x860f504800000000000000000000000000000000000000000000000000000000
0x749: V687 = 0x4
0x74b: V688 = ADD 0x4 V680
0x74c: V689 = 0x20
0x74e: V690 = 0x40
0x750: V691 = M[0x40]
0x753: V692 = SUB V688 V691
0x755: V693 = 0x0
0x759: V694 = EXTCODESIZE V673
0x75a: V695 = ISZERO V694
0x75b: V696 = ISZERO V695
0x75c: V697 = 0x2b7
0x75f: JUMPI 0x2b7 V696
---
Entry stack: [V13, 0xed]
Stack pops: 0
Stack additions: [0x0, V663, 0x764, V673, 0x860f5048, V688, 0x20, V691, V692, V691, 0x0, V673]
Exit stack: [V13, 0xed, 0x0, V663, 0x764, V673, 0x860f5048, V688, 0x20, V691, V692, V691, 0x0, V673]

================================

Block 0x760
[0x760:0x763]
---
Predecessors: [0x712]
Successors: []
---
0x760 PUSH1 0x0
0x762 DUP1
0x763 REVERT
---
0x760: V698 = 0x0
0x763: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, 0x0, V663, 0x764, V673, 0x860f5048, V688, 0x20, V691, V692, V691, 0x0, V673]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, 0x0, V663, 0x764, V673, 0x860f5048, V688, 0x20, V691, V692, V691, 0x0, V673]

================================

Block 0x764
[0x764:0x772]
---
Predecessors: [0xd8f]
Successors: [0x773, 0x775]
---
0x764 JUMPDEST
0x765 LT
0x766 ISZERO
0x767 SWAP1
0x768 POP
0x769 PUSH1 0x6
0x76b SLOAD
0x76c TIMESTAMP
0x76d GT
0x76e DUP1
0x76f PUSH2 0x775
0x772 JUMPI
---
0x764: JUMPDEST 
0x765: V699 = LT V1367 S1
0x766: V700 = ISZERO V699
0x769: V701 = 0x6
0x76b: V702 = S[0x6]
0x76c: V703 = TIMESTAMP
0x76d: V704 = GT V703 V702
0x76f: V705 = 0x775
0x772: JUMPI 0x775 V704
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1367]
Stack pops: 3
Stack additions: [V700, V704]
Exit stack: [V13, S7, S6, S5, S4, S3, V700, V704]

================================

Block 0x773
[0x773:0x774]
---
Predecessors: [0x764]
Successors: [0x775]
---
0x773 POP
0x774 DUP1
---
0x773: NOP 
---
Entry stack: [V13, S6, S5, S4, S3, S2, V700, V704]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V13, S6, S5, S4, S3, S2, V700, V700]

================================

Block 0x775
[0x775:0x77b]
---
Predecessors: [0x764, 0x773]
Successors: [0x77c, 0x780]
---
0x775 JUMPDEST
0x776 ISZERO
0x777 ISZERO
0x778 PUSH2 0x780
0x77b JUMPI
---
0x775: JUMPDEST 
0x776: V706 = ISZERO S0
0x777: V707 = ISZERO V706
0x778: V708 = 0x780
0x77b: JUMPI 0x780 V707
---
Entry stack: [V13, S6, S5, S4, S3, S2, V700, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, V700]

================================

Block 0x77c
[0x77c:0x77f]
---
Predecessors: [0x775]
Successors: []
---
0x77c PUSH1 0x0
0x77e DUP1
0x77f REVERT
---
0x77c: V709 = 0x0
0x77f: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, S2, S1, V700]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, V700]

================================

Block 0x780
[0x780:0x7cd]
---
Predecessors: [0x775]
Successors: [0x2b7, 0x7ce]
---
0x780 JUMPDEST
0x781 PUSH1 0x2
0x783 SLOAD
0x784 PUSH1 0x8
0x786 SLOAD
0x787 PUSH1 0x0
0x789 SWAP2
0x78a SWAP1
0x78b PUSH2 0x7d2
0x78e SWAP1
0x78f PUSH1 0x1
0x791 PUSH1 0xa0
0x793 PUSH1 0x2
0x795 EXP
0x796 SUB
0x797 AND
0x798 PUSH4 0x860f5048
0x79d DUP5
0x79e PUSH1 0x40
0x7a0 MLOAD
0x7a1 PUSH1 0x20
0x7a3 ADD
0x7a4 MSTORE
0x7a5 PUSH1 0x40
0x7a7 MLOAD
0x7a8 DUP2
0x7a9 PUSH4 0xffffffff
0x7ae AND
0x7af PUSH1 0xe0
0x7b1 PUSH1 0x2
0x7b3 EXP
0x7b4 MUL
0x7b5 DUP2
0x7b6 MSTORE
0x7b7 PUSH1 0x4
0x7b9 ADD
0x7ba PUSH1 0x20
0x7bc PUSH1 0x40
0x7be MLOAD
0x7bf DUP1
0x7c0 DUP4
0x7c1 SUB
0x7c2 DUP2
0x7c3 PUSH1 0x0
0x7c5 DUP8
0x7c6 DUP1
0x7c7 EXTCODESIZE
0x7c8 ISZERO
0x7c9 ISZERO
0x7ca PUSH2 0x2b7
0x7cd JUMPI
---
0x780: JUMPDEST 
0x781: V710 = 0x2
0x783: V711 = S[0x2]
0x784: V712 = 0x8
0x786: V713 = S[0x8]
0x787: V714 = 0x0
0x78b: V715 = 0x7d2
0x78f: V716 = 0x1
0x791: V717 = 0xa0
0x793: V718 = 0x2
0x795: V719 = EXP 0x2 0xa0
0x796: V720 = SUB 0x10000000000000000000000000000000000000000 0x1
0x797: V721 = AND 0xffffffffffffffffffffffffffffffffffffffff V713
0x798: V722 = 0x860f5048
0x79e: V723 = 0x40
0x7a0: V724 = M[0x40]
0x7a1: V725 = 0x20
0x7a3: V726 = ADD 0x20 V724
0x7a4: M[V726] = 0x0
0x7a5: V727 = 0x40
0x7a7: V728 = M[0x40]
0x7a9: V729 = 0xffffffff
0x7ae: V730 = AND 0xffffffff 0x860f5048
0x7af: V731 = 0xe0
0x7b1: V732 = 0x2
0x7b3: V733 = EXP 0x2 0xe0
0x7b4: V734 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x860f5048
0x7b6: M[V728] = 0x860f504800000000000000000000000000000000000000000000000000000000
0x7b7: V735 = 0x4
0x7b9: V736 = ADD 0x4 V728
0x7ba: V737 = 0x20
0x7bc: V738 = 0x40
0x7be: V739 = M[0x40]
0x7c1: V740 = SUB V736 V739
0x7c3: V741 = 0x0
0x7c7: V742 = EXTCODESIZE V721
0x7c8: V743 = ISZERO V742
0x7c9: V744 = ISZERO V743
0x7ca: V745 = 0x2b7
0x7cd: JUMPI 0x2b7 V744
---
Entry stack: [V13, S5, S4, S3, S2, S1, V700]
Stack pops: 0
Stack additions: [0x0, V711, 0x7d2, V721, 0x860f5048, V736, 0x20, V739, V740, V739, 0x0, V721]
Exit stack: [V13, S5, S4, S3, S2, S1, V700, 0x0, V711, 0x7d2, V721, 0x860f5048, V736, 0x20, V739, V740, V739, 0x0, V721]

================================

Block 0x7ce
[0x7ce:0x7d1]
---
Predecessors: [0x780]
Successors: []
---
0x7ce PUSH1 0x0
0x7d0 DUP1
0x7d1 REVERT
---
0x7ce: V746 = 0x0
0x7d1: REVERT 0x0 0x0
---
Entry stack: [V13, S17, S16, S15, S14, S13, V700, 0x0, V711, 0x7d2, V721, 0x860f5048, V736, 0x20, V739, V740, V739, 0x0, V721]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S17, S16, S15, S14, S13, V700, 0x0, V711, 0x7d2, V721, 0x860f5048, V736, 0x20, V739, V740, V739, 0x0, V721]

================================

Block 0x7d2
[0x7d2:0x7db]
---
Predecessors: [0xd8f]
Successors: [0x7dc, 0x7e0]
---
0x7d2 JUMPDEST
0x7d3 LT
0x7d4 ISZERO
0x7d5 SWAP1
0x7d6 POP
0x7d7 DUP1
0x7d8 PUSH2 0x7e0
0x7db JUMPI
---
0x7d2: JUMPDEST 
0x7d3: V747 = LT V1367 S1
0x7d4: V748 = ISZERO V747
0x7d8: V749 = 0x7e0
0x7db: JUMPI 0x7e0 V748
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1367]
Stack pops: 3
Stack additions: [V748]
Exit stack: [V13, S7, S6, S5, S4, S3, V748]

================================

Block 0x7dc
[0x7dc:0x7df]
---
Predecessors: [0x7d2]
Successors: []
---
0x7dc PUSH1 0x0
0x7de DUP1
0x7df REVERT
---
0x7dc: V750 = 0x0
0x7df: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, S2, S1, V748]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, V748]

================================

Block 0x7e0
[0x7e0:0x814]
---
Predecessors: [0x7d2]
Successors: [0x815, 0x819]
---
0x7e0 JUMPDEST
0x7e1 PUSH1 0x9
0x7e3 SLOAD
0x7e4 PUSH1 0x1
0x7e6 PUSH1 0xa0
0x7e8 PUSH1 0x2
0x7ea EXP
0x7eb SUB
0x7ec SWAP1
0x7ed DUP2
0x7ee AND
0x7ef SWAP1
0x7f0 ADDRESS
0x7f1 AND
0x7f2 BALANCE
0x7f3 DUP1
0x7f4 ISZERO
0x7f5 PUSH2 0x8fc
0x7f8 MUL
0x7f9 SWAP1
0x7fa PUSH1 0x40
0x7fc MLOAD
0x7fd PUSH1 0x0
0x7ff PUSH1 0x40
0x801 MLOAD
0x802 DUP1
0x803 DUP4
0x804 SUB
0x805 DUP2
0x806 DUP6
0x807 DUP9
0x808 DUP9
0x809 CALL
0x80a SWAP4
0x80b POP
0x80c POP
0x80d POP
0x80e POP
0x80f ISZERO
0x810 ISZERO
0x811 PUSH2 0x819
0x814 JUMPI
---
0x7e0: JUMPDEST 
0x7e1: V751 = 0x9
0x7e3: V752 = S[0x9]
0x7e4: V753 = 0x1
0x7e6: V754 = 0xa0
0x7e8: V755 = 0x2
0x7ea: V756 = EXP 0x2 0xa0
0x7eb: V757 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ee: V758 = AND 0xffffffffffffffffffffffffffffffffffffffff V752
0x7f0: V759 = ADDRESS
0x7f1: V760 = AND V759 0xffffffffffffffffffffffffffffffffffffffff
0x7f2: V761 = BALANCE V760
0x7f4: V762 = ISZERO V761
0x7f5: V763 = 0x8fc
0x7f8: V764 = MUL 0x8fc V762
0x7fa: V765 = 0x40
0x7fc: V766 = M[0x40]
0x7fd: V767 = 0x0
0x7ff: V768 = 0x40
0x801: V769 = M[0x40]
0x804: V770 = SUB V766 V769
0x809: V771 = CALL V764 V758 V761 V769 V770 V769 0x0
0x80f: V772 = ISZERO V771
0x810: V773 = ISZERO V772
0x811: V774 = 0x819
0x814: JUMPI 0x819 V773
---
Entry stack: [V13, S5, S4, S3, S2, S1, V748]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, V748]

================================

Block 0x815
[0x815:0x818]
---
Predecessors: [0x7e0]
Successors: []
---
0x815 PUSH1 0x0
0x817 DUP1
0x818 REVERT
---
0x815: V775 = 0x0
0x818: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, S0]

================================

Block 0x819
[0x819:0x85c]
---
Predecessors: [0x7e0]
Successors: [0x85d, 0x861]
---
0x819 JUMPDEST
0x81a PUSH1 0x8
0x81c SLOAD
0x81d PUSH1 0x1
0x81f PUSH1 0xa0
0x821 PUSH1 0x2
0x823 EXP
0x824 SUB
0x825 AND
0x826 PUSH4 0x7d64bcb4
0x82b PUSH1 0x0
0x82d PUSH1 0x40
0x82f MLOAD
0x830 PUSH1 0x20
0x832 ADD
0x833 MSTORE
0x834 PUSH1 0x40
0x836 MLOAD
0x837 DUP2
0x838 PUSH4 0xffffffff
0x83d AND
0x83e PUSH1 0xe0
0x840 PUSH1 0x2
0x842 EXP
0x843 MUL
0x844 DUP2
0x845 MSTORE
0x846 PUSH1 0x4
0x848 ADD
0x849 PUSH1 0x20
0x84b PUSH1 0x40
0x84d MLOAD
0x84e DUP1
0x84f DUP4
0x850 SUB
0x851 DUP2
0x852 PUSH1 0x0
0x854 DUP8
0x855 DUP1
0x856 EXTCODESIZE
0x857 ISZERO
0x858 ISZERO
0x859 PUSH2 0x861
0x85c JUMPI
---
0x819: JUMPDEST 
0x81a: V776 = 0x8
0x81c: V777 = S[0x8]
0x81d: V778 = 0x1
0x81f: V779 = 0xa0
0x821: V780 = 0x2
0x823: V781 = EXP 0x2 0xa0
0x824: V782 = SUB 0x10000000000000000000000000000000000000000 0x1
0x825: V783 = AND 0xffffffffffffffffffffffffffffffffffffffff V777
0x826: V784 = 0x7d64bcb4
0x82b: V785 = 0x0
0x82d: V786 = 0x40
0x82f: V787 = M[0x40]
0x830: V788 = 0x20
0x832: V789 = ADD 0x20 V787
0x833: M[V789] = 0x0
0x834: V790 = 0x40
0x836: V791 = M[0x40]
0x838: V792 = 0xffffffff
0x83d: V793 = AND 0xffffffff 0x7d64bcb4
0x83e: V794 = 0xe0
0x840: V795 = 0x2
0x842: V796 = EXP 0x2 0xe0
0x843: V797 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7d64bcb4
0x845: M[V791] = 0x7d64bcb400000000000000000000000000000000000000000000000000000000
0x846: V798 = 0x4
0x848: V799 = ADD 0x4 V791
0x849: V800 = 0x20
0x84b: V801 = 0x40
0x84d: V802 = M[0x40]
0x850: V803 = SUB V799 V802
0x852: V804 = 0x0
0x856: V805 = EXTCODESIZE V783
0x857: V806 = ISZERO V805
0x858: V807 = ISZERO V806
0x859: V808 = 0x861
0x85c: JUMPI 0x861 V807
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V783, 0x7d64bcb4, V799, 0x20, V802, V803, V802, 0x0, V783]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, V783, 0x7d64bcb4, V799, 0x20, V802, V803, V802, 0x0, V783]

================================

Block 0x85d
[0x85d:0x860]
---
Predecessors: [0x819]
Successors: []
---
0x85d PUSH1 0x0
0x85f DUP1
0x860 REVERT
---
0x85d: V809 = 0x0
0x860: REVERT 0x0 0x0
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, V783, 0x7d64bcb4, V799, 0x20, V802, V803, V802, 0x0, V783]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, V783, 0x7d64bcb4, V799, 0x20, V802, V803, V802, 0x0, V783]

================================

Block 0x861
[0x861:0x86d]
---
Predecessors: [0x819]
Successors: [0x86e, 0x872]
---
0x861 JUMPDEST
0x862 PUSH2 0x2c6
0x865 GAS
0x866 SUB
0x867 CALL
0x868 ISZERO
0x869 ISZERO
0x86a PUSH2 0x872
0x86d JUMPI
---
0x861: JUMPDEST 
0x862: V810 = 0x2c6
0x865: V811 = GAS
0x866: V812 = SUB V811 0x2c6
0x867: V813 = CALL V812 V783 0x0 V802 V803 V802 0x20
0x868: V814 = ISZERO V813
0x869: V815 = ISZERO V814
0x86a: V816 = 0x872
0x86d: JUMPI 0x872 V815
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, V783, 0x7d64bcb4, V799, 0x20, V802, V803, V802, 0x0, V783]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, V783, 0x7d64bcb4, V799]

================================

Block 0x86e
[0x86e:0x871]
---
Predecessors: [0x861]
Successors: []
---
0x86e PUSH1 0x0
0x870 DUP1
0x871 REVERT
---
0x86e: V817 = 0x0
0x871: REVERT 0x0 0x0
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, S2, 0x7d64bcb4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, S4, S3, S2, 0x7d64bcb4, S0]

================================

Block 0x872
[0x872:0x8b6]
---
Predecessors: [0x861]
Successors: [0x8b7, 0x8bb]
---
0x872 JUMPDEST
0x873 POP
0x874 POP
0x875 POP
0x876 PUSH1 0x40
0x878 MLOAD
0x879 DUP1
0x87a MLOAD
0x87b POP
0x87c POP
0x87d PUSH1 0x8
0x87f SLOAD
0x880 PUSH1 0x1
0x882 PUSH1 0xa0
0x884 PUSH1 0x2
0x886 EXP
0x887 SUB
0x888 AND
0x889 PUSH4 0xb1b68fad
0x88e PUSH1 0x40
0x890 MLOAD
0x891 DUP2
0x892 PUSH4 0xffffffff
0x897 AND
0x898 PUSH1 0xe0
0x89a PUSH1 0x2
0x89c EXP
0x89d MUL
0x89e DUP2
0x89f MSTORE
0x8a0 PUSH1 0x4
0x8a2 ADD
0x8a3 PUSH1 0x0
0x8a5 PUSH1 0x40
0x8a7 MLOAD
0x8a8 DUP1
0x8a9 DUP4
0x8aa SUB
0x8ab DUP2
0x8ac PUSH1 0x0
0x8ae DUP8
0x8af DUP1
0x8b0 EXTCODESIZE
0x8b1 ISZERO
0x8b2 ISZERO
0x8b3 PUSH2 0x8bb
0x8b6 JUMPI
---
0x872: JUMPDEST 
0x876: V818 = 0x40
0x878: V819 = M[0x40]
0x87a: V820 = M[V819]
0x87d: V821 = 0x8
0x87f: V822 = S[0x8]
0x880: V823 = 0x1
0x882: V824 = 0xa0
0x884: V825 = 0x2
0x886: V826 = EXP 0x2 0xa0
0x887: V827 = SUB 0x10000000000000000000000000000000000000000 0x1
0x888: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff V822
0x889: V829 = 0xb1b68fad
0x88e: V830 = 0x40
0x890: V831 = M[0x40]
0x892: V832 = 0xffffffff
0x897: V833 = AND 0xffffffff 0xb1b68fad
0x898: V834 = 0xe0
0x89a: V835 = 0x2
0x89c: V836 = EXP 0x2 0xe0
0x89d: V837 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb1b68fad
0x89f: M[V831] = 0xb1b68fad00000000000000000000000000000000000000000000000000000000
0x8a0: V838 = 0x4
0x8a2: V839 = ADD 0x4 V831
0x8a3: V840 = 0x0
0x8a5: V841 = 0x40
0x8a7: V842 = M[0x40]
0x8aa: V843 = SUB V839 V842
0x8ac: V844 = 0x0
0x8b0: V845 = EXTCODESIZE V828
0x8b1: V846 = ISZERO V845
0x8b2: V847 = ISZERO V846
0x8b3: V848 = 0x8bb
0x8b6: JUMPI 0x8bb V847
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, S2, 0x7d64bcb4, S0]
Stack pops: 3
Stack additions: [V828, 0xb1b68fad, V839, 0x0, V842, V843, V842, 0x0, V828]
Exit stack: [V13, S8, S7, S6, S5, S4, S3, V828, 0xb1b68fad, V839, 0x0, V842, V843, V842, 0x0, V828]

================================

Block 0x8b7
[0x8b7:0x8ba]
---
Predecessors: [0x872]
Successors: []
---
0x8b7 PUSH1 0x0
0x8b9 DUP1
0x8ba REVERT
---
0x8b7: V849 = 0x0
0x8ba: REVERT 0x0 0x0
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, V828, 0xb1b68fad, V839, 0x0, V842, V843, V842, 0x0, V828]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, V828, 0xb1b68fad, V839, 0x0, V842, V843, V842, 0x0, V828]

================================

Block 0x8bb
[0x8bb:0x8c7]
---
Predecessors: [0x872]
Successors: [0x8c8, 0x8cc]
---
0x8bb JUMPDEST
0x8bc PUSH2 0x2c6
0x8bf GAS
0x8c0 SUB
0x8c1 CALL
0x8c2 ISZERO
0x8c3 ISZERO
0x8c4 PUSH2 0x8cc
0x8c7 JUMPI
---
0x8bb: JUMPDEST 
0x8bc: V850 = 0x2c6
0x8bf: V851 = GAS
0x8c0: V852 = SUB V851 0x2c6
0x8c1: V853 = CALL V852 V828 0x0 V842 V843 V842 0x0
0x8c2: V854 = ISZERO V853
0x8c3: V855 = ISZERO V854
0x8c4: V856 = 0x8cc
0x8c7: JUMPI 0x8cc V855
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, V828, 0xb1b68fad, V839, 0x0, V842, V843, V842, 0x0, V828]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, V828, 0xb1b68fad, V839]

================================

Block 0x8c8
[0x8c8:0x8cb]
---
Predecessors: [0x8bb]
Successors: []
---
0x8c8 PUSH1 0x0
0x8ca DUP1
0x8cb REVERT
---
0x8c8: V857 = 0x0
0x8cb: REVERT 0x0 0x0
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, S2, 0xb1b68fad, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, S4, S3, S2, 0xb1b68fad, S0]

================================

Block 0x8cc
[0x8cc:0x8d2]
---
Predecessors: [0x8bb]
Successors: [0xed]
---
0x8cc JUMPDEST
0x8cd POP
0x8ce POP
0x8cf POP
0x8d0 POP
0x8d1 POP
0x8d2 JUMP
---
0x8cc: JUMPDEST 
0x8d2: JUMP S5
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, S2, 0xb1b68fad, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S8, S7, S6]

================================

Block 0x8d3
[0x8d3:0x8dc]
---
Predecessors: [0x132]
Successors: [0x8dd, 0x8e1]
---
0x8d3 JUMPDEST
0x8d4 PUSH1 0x7
0x8d6 SLOAD
0x8d7 TIMESTAMP
0x8d8 GT
0x8d9 PUSH2 0x8e1
0x8dc JUMPI
---
0x8d3: JUMPDEST 
0x8d4: V858 = 0x7
0x8d6: V859 = S[0x7]
0x8d7: V860 = TIMESTAMP
0x8d8: V861 = GT V860 V859
0x8d9: V862 = 0x8e1
0x8dc: JUMPI 0x8e1 V861
---
Entry stack: [V13, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed]

================================

Block 0x8dd
[0x8dd:0x8e0]
---
Predecessors: [0x8d3]
Successors: []
---
0x8dd PUSH1 0x0
0x8df DUP1
0x8e0 REVERT
---
0x8dd: V863 = 0x0
0x8e0: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed]

================================

Block 0x8e1
[0x8e1:0x915]
---
Predecessors: [0x8d3]
Successors: [0x916, 0x91a]
---
0x8e1 JUMPDEST
0x8e2 PUSH1 0x9
0x8e4 SLOAD
0x8e5 PUSH1 0x1
0x8e7 PUSH1 0xa0
0x8e9 PUSH1 0x2
0x8eb EXP
0x8ec SUB
0x8ed SWAP1
0x8ee DUP2
0x8ef AND
0x8f0 SWAP1
0x8f1 ADDRESS
0x8f2 AND
0x8f3 BALANCE
0x8f4 DUP1
0x8f5 ISZERO
0x8f6 PUSH2 0x8fc
0x8f9 MUL
0x8fa SWAP1
0x8fb PUSH1 0x40
0x8fd MLOAD
0x8fe PUSH1 0x0
0x900 PUSH1 0x40
0x902 MLOAD
0x903 DUP1
0x904 DUP4
0x905 SUB
0x906 DUP2
0x907 DUP6
0x908 DUP9
0x909 DUP9
0x90a CALL
0x90b SWAP4
0x90c POP
0x90d POP
0x90e POP
0x90f POP
0x910 ISZERO
0x911 ISZERO
0x912 PUSH2 0x91a
0x915 JUMPI
---
0x8e1: JUMPDEST 
0x8e2: V864 = 0x9
0x8e4: V865 = S[0x9]
0x8e5: V866 = 0x1
0x8e7: V867 = 0xa0
0x8e9: V868 = 0x2
0x8eb: V869 = EXP 0x2 0xa0
0x8ec: V870 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ef: V871 = AND 0xffffffffffffffffffffffffffffffffffffffff V865
0x8f1: V872 = ADDRESS
0x8f2: V873 = AND V872 0xffffffffffffffffffffffffffffffffffffffff
0x8f3: V874 = BALANCE V873
0x8f5: V875 = ISZERO V874
0x8f6: V876 = 0x8fc
0x8f9: V877 = MUL 0x8fc V875
0x8fb: V878 = 0x40
0x8fd: V879 = M[0x40]
0x8fe: V880 = 0x0
0x900: V881 = 0x40
0x902: V882 = M[0x40]
0x905: V883 = SUB V879 V882
0x90a: V884 = CALL V877 V871 V874 V882 V883 V882 0x0
0x910: V885 = ISZERO V884
0x911: V886 = ISZERO V885
0x912: V887 = 0x91a
0x915: JUMPI 0x91a V886
---
Entry stack: [V13, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed]

================================

Block 0x916
[0x916:0x919]
---
Predecessors: [0x8e1]
Successors: []
---
0x916 PUSH1 0x0
0x918 DUP1
0x919 REVERT
---
0x916: V888 = 0x0
0x919: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed]

================================

Block 0x91a
[0x91a:0x95d]
---
Predecessors: [0x8e1]
Successors: [0x95e, 0x962]
---
0x91a JUMPDEST
0x91b PUSH1 0x8
0x91d SLOAD
0x91e PUSH1 0x1
0x920 PUSH1 0xa0
0x922 PUSH1 0x2
0x924 EXP
0x925 SUB
0x926 AND
0x927 PUSH4 0x7d64bcb4
0x92c PUSH1 0x0
0x92e PUSH1 0x40
0x930 MLOAD
0x931 PUSH1 0x20
0x933 ADD
0x934 MSTORE
0x935 PUSH1 0x40
0x937 MLOAD
0x938 DUP2
0x939 PUSH4 0xffffffff
0x93e AND
0x93f PUSH1 0xe0
0x941 PUSH1 0x2
0x943 EXP
0x944 MUL
0x945 DUP2
0x946 MSTORE
0x947 PUSH1 0x4
0x949 ADD
0x94a PUSH1 0x20
0x94c PUSH1 0x40
0x94e MLOAD
0x94f DUP1
0x950 DUP4
0x951 SUB
0x952 DUP2
0x953 PUSH1 0x0
0x955 DUP8
0x956 DUP1
0x957 EXTCODESIZE
0x958 ISZERO
0x959 ISZERO
0x95a PUSH2 0x962
0x95d JUMPI
---
0x91a: JUMPDEST 
0x91b: V889 = 0x8
0x91d: V890 = S[0x8]
0x91e: V891 = 0x1
0x920: V892 = 0xa0
0x922: V893 = 0x2
0x924: V894 = EXP 0x2 0xa0
0x925: V895 = SUB 0x10000000000000000000000000000000000000000 0x1
0x926: V896 = AND 0xffffffffffffffffffffffffffffffffffffffff V890
0x927: V897 = 0x7d64bcb4
0x92c: V898 = 0x0
0x92e: V899 = 0x40
0x930: V900 = M[0x40]
0x931: V901 = 0x20
0x933: V902 = ADD 0x20 V900
0x934: M[V902] = 0x0
0x935: V903 = 0x40
0x937: V904 = M[0x40]
0x939: V905 = 0xffffffff
0x93e: V906 = AND 0xffffffff 0x7d64bcb4
0x93f: V907 = 0xe0
0x941: V908 = 0x2
0x943: V909 = EXP 0x2 0xe0
0x944: V910 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7d64bcb4
0x946: M[V904] = 0x7d64bcb400000000000000000000000000000000000000000000000000000000
0x947: V911 = 0x4
0x949: V912 = ADD 0x4 V904
0x94a: V913 = 0x20
0x94c: V914 = 0x40
0x94e: V915 = M[0x40]
0x951: V916 = SUB V912 V915
0x953: V917 = 0x0
0x957: V918 = EXTCODESIZE V896
0x958: V919 = ISZERO V918
0x959: V920 = ISZERO V919
0x95a: V921 = 0x962
0x95d: JUMPI 0x962 V920
---
Entry stack: [V13, 0xed]
Stack pops: 0
Stack additions: [V896, 0x7d64bcb4, V912, 0x20, V915, V916, V915, 0x0, V896]
Exit stack: [V13, 0xed, V896, 0x7d64bcb4, V912, 0x20, V915, V916, V915, 0x0, V896]

================================

Block 0x95e
[0x95e:0x961]
---
Predecessors: [0x91a]
Successors: []
---
0x95e PUSH1 0x0
0x960 DUP1
0x961 REVERT
---
0x95e: V922 = 0x0
0x961: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, V896, 0x7d64bcb4, V912, 0x20, V915, V916, V915, 0x0, V896]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V896, 0x7d64bcb4, V912, 0x20, V915, V916, V915, 0x0, V896]

================================

Block 0x962
[0x962:0x96e]
---
Predecessors: [0x91a]
Successors: [0x96f, 0x973]
---
0x962 JUMPDEST
0x963 PUSH2 0x2c6
0x966 GAS
0x967 SUB
0x968 CALL
0x969 ISZERO
0x96a ISZERO
0x96b PUSH2 0x973
0x96e JUMPI
---
0x962: JUMPDEST 
0x963: V923 = 0x2c6
0x966: V924 = GAS
0x967: V925 = SUB V924 0x2c6
0x968: V926 = CALL V925 V896 0x0 V915 V916 V915 0x20
0x969: V927 = ISZERO V926
0x96a: V928 = ISZERO V927
0x96b: V929 = 0x973
0x96e: JUMPI 0x973 V928
---
Entry stack: [V13, 0xed, V896, 0x7d64bcb4, V912, 0x20, V915, V916, V915, 0x0, V896]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xed, V896, 0x7d64bcb4, V912]

================================

Block 0x96f
[0x96f:0x972]
---
Predecessors: [0x962]
Successors: []
---
0x96f PUSH1 0x0
0x971 DUP1
0x972 REVERT
---
0x96f: V930 = 0x0
0x972: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, V896, 0x7d64bcb4, V912]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V896, 0x7d64bcb4, V912]

================================

Block 0x973
[0x973:0x9b7]
---
Predecessors: [0x962]
Successors: [0x9b8, 0x9bc]
---
0x973 JUMPDEST
0x974 POP
0x975 POP
0x976 POP
0x977 PUSH1 0x40
0x979 MLOAD
0x97a DUP1
0x97b MLOAD
0x97c POP
0x97d POP
0x97e PUSH1 0x8
0x980 SLOAD
0x981 PUSH1 0x1
0x983 PUSH1 0xa0
0x985 PUSH1 0x2
0x987 EXP
0x988 SUB
0x989 AND
0x98a PUSH4 0xb1b68fad
0x98f PUSH1 0x40
0x991 MLOAD
0x992 DUP2
0x993 PUSH4 0xffffffff
0x998 AND
0x999 PUSH1 0xe0
0x99b PUSH1 0x2
0x99d EXP
0x99e MUL
0x99f DUP2
0x9a0 MSTORE
0x9a1 PUSH1 0x4
0x9a3 ADD
0x9a4 PUSH1 0x0
0x9a6 PUSH1 0x40
0x9a8 MLOAD
0x9a9 DUP1
0x9aa DUP4
0x9ab SUB
0x9ac DUP2
0x9ad PUSH1 0x0
0x9af DUP8
0x9b0 DUP1
0x9b1 EXTCODESIZE
0x9b2 ISZERO
0x9b3 ISZERO
0x9b4 PUSH2 0x9bc
0x9b7 JUMPI
---
0x973: JUMPDEST 
0x977: V931 = 0x40
0x979: V932 = M[0x40]
0x97b: V933 = M[V932]
0x97e: V934 = 0x8
0x980: V935 = S[0x8]
0x981: V936 = 0x1
0x983: V937 = 0xa0
0x985: V938 = 0x2
0x987: V939 = EXP 0x2 0xa0
0x988: V940 = SUB 0x10000000000000000000000000000000000000000 0x1
0x989: V941 = AND 0xffffffffffffffffffffffffffffffffffffffff V935
0x98a: V942 = 0xb1b68fad
0x98f: V943 = 0x40
0x991: V944 = M[0x40]
0x993: V945 = 0xffffffff
0x998: V946 = AND 0xffffffff 0xb1b68fad
0x999: V947 = 0xe0
0x99b: V948 = 0x2
0x99d: V949 = EXP 0x2 0xe0
0x99e: V950 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb1b68fad
0x9a0: M[V944] = 0xb1b68fad00000000000000000000000000000000000000000000000000000000
0x9a1: V951 = 0x4
0x9a3: V952 = ADD 0x4 V944
0x9a4: V953 = 0x0
0x9a6: V954 = 0x40
0x9a8: V955 = M[0x40]
0x9ab: V956 = SUB V952 V955
0x9ad: V957 = 0x0
0x9b1: V958 = EXTCODESIZE V941
0x9b2: V959 = ISZERO V958
0x9b3: V960 = ISZERO V959
0x9b4: V961 = 0x9bc
0x9b7: JUMPI 0x9bc V960
---
Entry stack: [V13, 0xed, V896, 0x7d64bcb4, V912]
Stack pops: 3
Stack additions: [V941, 0xb1b68fad, V952, 0x0, V955, V956, V955, 0x0, V941]
Exit stack: [V13, 0xed, V941, 0xb1b68fad, V952, 0x0, V955, V956, V955, 0x0, V941]

================================

Block 0x9b8
[0x9b8:0x9bb]
---
Predecessors: [0x973]
Successors: []
---
0x9b8 PUSH1 0x0
0x9ba DUP1
0x9bb REVERT
---
0x9b8: V962 = 0x0
0x9bb: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, V941, 0xb1b68fad, V952, 0x0, V955, V956, V955, 0x0, V941]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V941, 0xb1b68fad, V952, 0x0, V955, V956, V955, 0x0, V941]

================================

Block 0x9bc
[0x9bc:0x9c8]
---
Predecessors: [0x973]
Successors: [0x9c9, 0x9cd]
---
0x9bc JUMPDEST
0x9bd PUSH2 0x2c6
0x9c0 GAS
0x9c1 SUB
0x9c2 CALL
0x9c3 ISZERO
0x9c4 ISZERO
0x9c5 PUSH2 0x9cd
0x9c8 JUMPI
---
0x9bc: JUMPDEST 
0x9bd: V963 = 0x2c6
0x9c0: V964 = GAS
0x9c1: V965 = SUB V964 0x2c6
0x9c2: V966 = CALL V965 V941 0x0 V955 V956 V955 0x0
0x9c3: V967 = ISZERO V966
0x9c4: V968 = ISZERO V967
0x9c5: V969 = 0x9cd
0x9c8: JUMPI 0x9cd V968
---
Entry stack: [V13, 0xed, V941, 0xb1b68fad, V952, 0x0, V955, V956, V955, 0x0, V941]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xed, V941, 0xb1b68fad, V952]

================================

Block 0x9c9
[0x9c9:0x9cc]
---
Predecessors: [0x9bc]
Successors: []
---
0x9c9 PUSH1 0x0
0x9cb DUP1
0x9cc REVERT
---
0x9c9: V970 = 0x0
0x9cc: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, V941, 0xb1b68fad, V952]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V941, 0xb1b68fad, V952]

================================

Block 0x9cd
[0x9cd:0x9d1]
---
Predecessors: [0x9bc, 0xad1]
Successors: [0xed]
---
0x9cd JUMPDEST
0x9ce POP
0x9cf POP
0x9d0 POP
0x9d1 JUMP
---
0x9cd: JUMPDEST 
0x9d1: JUMP S3
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S6, S5, S4]

================================

Block 0x9d2
[0x9d2:0x9d7]
---
Predecessors: [0x145]
Successors: [0x102]
---
0x9d2 JUMPDEST
0x9d3 PUSH1 0x7
0x9d5 SLOAD
0x9d6 DUP2
0x9d7 JUMP
---
0x9d2: JUMPDEST 
0x9d3: V971 = 0x7
0x9d5: V972 = S[0x7]
0x9d7: JUMP 0x102
---
Entry stack: [V13, 0x102]
Stack pops: 1
Stack additions: [S0, V972]
Exit stack: [V13, 0x102, V972]

================================

Block 0x9d8
[0x9d8:0xa26]
---
Predecessors: [0x16c]
Successors: [0x2b7, 0xa27]
---
0x9d8 JUMPDEST
0x9d9 PUSH1 0x1
0x9db SLOAD
0x9dc PUSH1 0x8
0x9de SLOAD
0x9df PUSH1 0x0
0x9e1 SWAP2
0x9e2 DUP3
0x9e3 SWAP2
0x9e4 PUSH2 0xa2b
0x9e7 SWAP1
0x9e8 PUSH1 0x1
0x9ea PUSH1 0xa0
0x9ec PUSH1 0x2
0x9ee EXP
0x9ef SUB
0x9f0 AND
0x9f1 PUSH4 0x860f5048
0x9f6 DUP5
0x9f7 PUSH1 0x40
0x9f9 MLOAD
0x9fa PUSH1 0x20
0x9fc ADD
0x9fd MSTORE
0x9fe PUSH1 0x40
0xa00 MLOAD
0xa01 DUP2
0xa02 PUSH4 0xffffffff
0xa07 AND
0xa08 PUSH1 0xe0
0xa0a PUSH1 0x2
0xa0c EXP
0xa0d MUL
0xa0e DUP2
0xa0f MSTORE
0xa10 PUSH1 0x4
0xa12 ADD
0xa13 PUSH1 0x20
0xa15 PUSH1 0x40
0xa17 MLOAD
0xa18 DUP1
0xa19 DUP4
0xa1a SUB
0xa1b DUP2
0xa1c PUSH1 0x0
0xa1e DUP8
0xa1f DUP1
0xa20 EXTCODESIZE
0xa21 ISZERO
0xa22 ISZERO
0xa23 PUSH2 0x2b7
0xa26 JUMPI
---
0x9d8: JUMPDEST 
0x9d9: V973 = 0x1
0x9db: V974 = S[0x1]
0x9dc: V975 = 0x8
0x9de: V976 = S[0x8]
0x9df: V977 = 0x0
0x9e4: V978 = 0xa2b
0x9e8: V979 = 0x1
0x9ea: V980 = 0xa0
0x9ec: V981 = 0x2
0x9ee: V982 = EXP 0x2 0xa0
0x9ef: V983 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f0: V984 = AND 0xffffffffffffffffffffffffffffffffffffffff V976
0x9f1: V985 = 0x860f5048
0x9f7: V986 = 0x40
0x9f9: V987 = M[0x40]
0x9fa: V988 = 0x20
0x9fc: V989 = ADD 0x20 V987
0x9fd: M[V989] = 0x0
0x9fe: V990 = 0x40
0xa00: V991 = M[0x40]
0xa02: V992 = 0xffffffff
0xa07: V993 = AND 0xffffffff 0x860f5048
0xa08: V994 = 0xe0
0xa0a: V995 = 0x2
0xa0c: V996 = EXP 0x2 0xe0
0xa0d: V997 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x860f5048
0xa0f: M[V991] = 0x860f504800000000000000000000000000000000000000000000000000000000
0xa10: V998 = 0x4
0xa12: V999 = ADD 0x4 V991
0xa13: V1000 = 0x20
0xa15: V1001 = 0x40
0xa17: V1002 = M[0x40]
0xa1a: V1003 = SUB V999 V1002
0xa1c: V1004 = 0x0
0xa20: V1005 = EXTCODESIZE V984
0xa21: V1006 = ISZERO V1005
0xa22: V1007 = ISZERO V1006
0xa23: V1008 = 0x2b7
0xa26: JUMPI 0x2b7 V1007
---
Entry stack: [V13, 0xed]
Stack pops: 0
Stack additions: [0x0, 0x0, V974, 0xa2b, V984, 0x860f5048, V999, 0x20, V1002, V1003, V1002, 0x0, V984]
Exit stack: [V13, 0xed, 0x0, 0x0, V974, 0xa2b, V984, 0x860f5048, V999, 0x20, V1002, V1003, V1002, 0x0, V984]

================================

Block 0xa27
[0xa27:0xa2a]
---
Predecessors: [0x9d8]
Successors: []
---
0xa27 PUSH1 0x0
0xa29 DUP1
0xa2a REVERT
---
0xa27: V1009 = 0x0
0xa2a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, 0x0, 0x0, V974, 0xa2b, V984, 0x860f5048, V999, 0x20, V1002, V1003, V1002, 0x0, V984]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, 0x0, 0x0, V974, 0xa2b, V984, 0x860f5048, V999, 0x20, V1002, V1003, V1002, 0x0, V984]

================================

Block 0xa2b
[0xa2b:0xa39]
---
Predecessors: [0xd8f]
Successors: [0xa3a, 0xa3c]
---
0xa2b JUMPDEST
0xa2c LT
0xa2d ISZERO
0xa2e SWAP1
0xa2f POP
0xa30 PUSH1 0x6
0xa32 SLOAD
0xa33 TIMESTAMP
0xa34 GT
0xa35 DUP1
0xa36 PUSH2 0xa3c
0xa39 JUMPI
---
0xa2b: JUMPDEST 
0xa2c: V1010 = LT V1367 S1
0xa2d: V1011 = ISZERO V1010
0xa30: V1012 = 0x6
0xa32: V1013 = S[0x6]
0xa33: V1014 = TIMESTAMP
0xa34: V1015 = GT V1014 V1013
0xa36: V1016 = 0xa3c
0xa39: JUMPI 0xa3c V1015
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1367]
Stack pops: 3
Stack additions: [V1011, V1015]
Exit stack: [V13, S7, S6, S5, S4, S3, V1011, V1015]

================================

Block 0xa3a
[0xa3a:0xa3b]
---
Predecessors: [0xa2b]
Successors: [0xa3c]
---
0xa3a POP
0xa3b DUP1
---
0xa3a: NOP 
---
Entry stack: [V13, S6, S5, S4, S3, S2, V1011, V1015]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V13, S6, S5, S4, S3, S2, V1011, V1011]

================================

Block 0xa3c
[0xa3c:0xa42]
---
Predecessors: [0xa2b, 0xa3a]
Successors: [0xa43, 0xa47]
---
0xa3c JUMPDEST
0xa3d ISZERO
0xa3e ISZERO
0xa3f PUSH2 0xa47
0xa42 JUMPI
---
0xa3c: JUMPDEST 
0xa3d: V1017 = ISZERO S0
0xa3e: V1018 = ISZERO V1017
0xa3f: V1019 = 0xa47
0xa42: JUMPI 0xa47 V1018
---
Entry stack: [V13, S6, S5, S4, S3, S2, V1011, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, V1011]

================================

Block 0xa43
[0xa43:0xa46]
---
Predecessors: [0xa3c]
Successors: []
---
0xa43 PUSH1 0x0
0xa45 DUP1
0xa46 REVERT
---
0xa43: V1020 = 0x0
0xa46: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, S2, S1, V1011]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, V1011]

================================

Block 0xa47
[0xa47:0xa94]
---
Predecessors: [0xa3c]
Successors: [0x2b7, 0xa95]
---
0xa47 JUMPDEST
0xa48 PUSH1 0x2
0xa4a SLOAD
0xa4b PUSH1 0x8
0xa4d SLOAD
0xa4e PUSH1 0x0
0xa50 SWAP2
0xa51 SWAP1
0xa52 PUSH2 0xa99
0xa55 SWAP1
0xa56 PUSH1 0x1
0xa58 PUSH1 0xa0
0xa5a PUSH1 0x2
0xa5c EXP
0xa5d SUB
0xa5e AND
0xa5f PUSH4 0x860f5048
0xa64 DUP5
0xa65 PUSH1 0x40
0xa67 MLOAD
0xa68 PUSH1 0x20
0xa6a ADD
0xa6b MSTORE
0xa6c PUSH1 0x40
0xa6e MLOAD
0xa6f DUP2
0xa70 PUSH4 0xffffffff
0xa75 AND
0xa76 PUSH1 0xe0
0xa78 PUSH1 0x2
0xa7a EXP
0xa7b MUL
0xa7c DUP2
0xa7d MSTORE
0xa7e PUSH1 0x4
0xa80 ADD
0xa81 PUSH1 0x20
0xa83 PUSH1 0x40
0xa85 MLOAD
0xa86 DUP1
0xa87 DUP4
0xa88 SUB
0xa89 DUP2
0xa8a PUSH1 0x0
0xa8c DUP8
0xa8d DUP1
0xa8e EXTCODESIZE
0xa8f ISZERO
0xa90 ISZERO
0xa91 PUSH2 0x2b7
0xa94 JUMPI
---
0xa47: JUMPDEST 
0xa48: V1021 = 0x2
0xa4a: V1022 = S[0x2]
0xa4b: V1023 = 0x8
0xa4d: V1024 = S[0x8]
0xa4e: V1025 = 0x0
0xa52: V1026 = 0xa99
0xa56: V1027 = 0x1
0xa58: V1028 = 0xa0
0xa5a: V1029 = 0x2
0xa5c: V1030 = EXP 0x2 0xa0
0xa5d: V1031 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5e: V1032 = AND 0xffffffffffffffffffffffffffffffffffffffff V1024
0xa5f: V1033 = 0x860f5048
0xa65: V1034 = 0x40
0xa67: V1035 = M[0x40]
0xa68: V1036 = 0x20
0xa6a: V1037 = ADD 0x20 V1035
0xa6b: M[V1037] = 0x0
0xa6c: V1038 = 0x40
0xa6e: V1039 = M[0x40]
0xa70: V1040 = 0xffffffff
0xa75: V1041 = AND 0xffffffff 0x860f5048
0xa76: V1042 = 0xe0
0xa78: V1043 = 0x2
0xa7a: V1044 = EXP 0x2 0xe0
0xa7b: V1045 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x860f5048
0xa7d: M[V1039] = 0x860f504800000000000000000000000000000000000000000000000000000000
0xa7e: V1046 = 0x4
0xa80: V1047 = ADD 0x4 V1039
0xa81: V1048 = 0x20
0xa83: V1049 = 0x40
0xa85: V1050 = M[0x40]
0xa88: V1051 = SUB V1047 V1050
0xa8a: V1052 = 0x0
0xa8e: V1053 = EXTCODESIZE V1032
0xa8f: V1054 = ISZERO V1053
0xa90: V1055 = ISZERO V1054
0xa91: V1056 = 0x2b7
0xa94: JUMPI 0x2b7 V1055
---
Entry stack: [V13, S5, S4, S3, S2, S1, V1011]
Stack pops: 0
Stack additions: [0x0, V1022, 0xa99, V1032, 0x860f5048, V1047, 0x20, V1050, V1051, V1050, 0x0, V1032]
Exit stack: [V13, S5, S4, S3, S2, S1, V1011, 0x0, V1022, 0xa99, V1032, 0x860f5048, V1047, 0x20, V1050, V1051, V1050, 0x0, V1032]

================================

Block 0xa95
[0xa95:0xa98]
---
Predecessors: [0xa47]
Successors: []
---
0xa95 PUSH1 0x0
0xa97 DUP1
0xa98 REVERT
---
0xa95: V1057 = 0x0
0xa98: REVERT 0x0 0x0
---
Entry stack: [V13, S17, S16, S15, S14, S13, V1011, 0x0, V1022, 0xa99, V1032, 0x860f5048, V1047, 0x20, V1050, V1051, V1050, 0x0, V1032]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S17, S16, S15, S14, S13, V1011, 0x0, V1022, 0xa99, V1032, 0x860f5048, V1047, 0x20, V1050, V1051, V1050, 0x0, V1032]

================================

Block 0xa99
[0xa99:0xaa1]
---
Predecessors: [0xd8f]
Successors: [0xaa2, 0xaa6]
---
0xa99 JUMPDEST
0xa9a LT
0xa9b SWAP1
0xa9c POP
0xa9d DUP1
0xa9e PUSH2 0xaa6
0xaa1 JUMPI
---
0xa99: JUMPDEST 
0xa9a: V1058 = LT V1367 S1
0xa9e: V1059 = 0xaa6
0xaa1: JUMPI 0xaa6 V1058
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1367]
Stack pops: 3
Stack additions: [V1058]
Exit stack: [V13, S7, S6, S5, S4, S3, V1058]

================================

Block 0xaa2
[0xaa2:0xaa5]
---
Predecessors: [0xa99]
Successors: []
---
0xaa2 PUSH1 0x0
0xaa4 DUP1
0xaa5 REVERT
---
0xaa2: V1060 = 0x0
0xaa5: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, S2, S1, V1058]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, V1058]

================================

Block 0xaa6
[0xaa6:0xad0]
---
Predecessors: [0xa99]
Successors: [0xd83]
---
0xaa6 JUMPDEST
0xaa7 PUSH1 0x1
0xaa9 PUSH1 0xa0
0xaab PUSH1 0x2
0xaad EXP
0xaae SUB
0xaaf CALLER
0xab0 AND
0xab1 PUSH1 0x0
0xab3 SWAP1
0xab4 DUP2
0xab5 MSTORE
0xab6 PUSH1 0xa
0xab8 PUSH1 0x20
0xaba MSTORE
0xabb PUSH1 0x40
0xabd SWAP1
0xabe SHA3
0xabf SLOAD
0xac0 SWAP3
0xac1 POP
0xac2 PUSH2 0xad1
0xac5 DUP4
0xac6 DUP1
0xac7 PUSH4 0xffffffff
0xacc PUSH2 0xd83
0xacf AND
0xad0 JUMP
---
0xaa6: JUMPDEST 
0xaa7: V1061 = 0x1
0xaa9: V1062 = 0xa0
0xaab: V1063 = 0x2
0xaad: V1064 = EXP 0x2 0xa0
0xaae: V1065 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaaf: V1066 = CALLER
0xab0: V1067 = AND V1066 0xffffffffffffffffffffffffffffffffffffffff
0xab1: V1068 = 0x0
0xab5: M[0x0] = V1067
0xab6: V1069 = 0xa
0xab8: V1070 = 0x20
0xaba: M[0x20] = 0xa
0xabb: V1071 = 0x40
0xabe: V1072 = SHA3 0x0 0x40
0xabf: V1073 = S[V1072]
0xac2: V1074 = 0xad1
0xac7: V1075 = 0xffffffff
0xacc: V1076 = 0xd83
0xacf: V1077 = AND 0xd83 0xffffffff
0xad0: JUMP 0xd83
---
Entry stack: [V13, S5, S4, S3, S2, S1, V1058]
Stack pops: 3
Stack additions: [V1073, S1, S0, 0xad1, V1073, V1073]
Exit stack: [V13, S5, S4, S3, V1073, S1, V1058, 0xad1, V1073, V1073]

================================

Block 0xad1
[0xad1:0xb12]
---
Predecessors: [0xd8f]
Successors: [0x9cd, 0xb13]
---
0xad1 JUMPDEST
0xad2 PUSH1 0x1
0xad4 PUSH1 0xa0
0xad6 PUSH1 0x2
0xad8 EXP
0xad9 SUB
0xada CALLER
0xadb AND
0xadc PUSH1 0x0
0xade DUP2
0xadf DUP2
0xae0 MSTORE
0xae1 PUSH1 0xa
0xae3 PUSH1 0x20
0xae5 MSTORE
0xae6 PUSH1 0x40
0xae8 SWAP1
0xae9 DUP2
0xaea SWAP1
0xaeb SHA3
0xaec SWAP3
0xaed SWAP1
0xaee SWAP3
0xaef SSTORE
0xaf0 SWAP1
0xaf1 DUP5
0xaf2 ISZERO
0xaf3 PUSH2 0x8fc
0xaf6 MUL
0xaf7 SWAP1
0xaf8 DUP6
0xaf9 SWAP1
0xafa MLOAD
0xafb PUSH1 0x0
0xafd PUSH1 0x40
0xaff MLOAD
0xb00 DUP1
0xb01 DUP4
0xb02 SUB
0xb03 DUP2
0xb04 DUP6
0xb05 DUP9
0xb06 DUP9
0xb07 CALL
0xb08 SWAP4
0xb09 POP
0xb0a POP
0xb0b POP
0xb0c POP
0xb0d ISZERO
0xb0e ISZERO
0xb0f PUSH2 0x9cd
0xb12 JUMPI
---
0xad1: JUMPDEST 
0xad2: V1078 = 0x1
0xad4: V1079 = 0xa0
0xad6: V1080 = 0x2
0xad8: V1081 = EXP 0x2 0xa0
0xad9: V1082 = SUB 0x10000000000000000000000000000000000000000 0x1
0xada: V1083 = CALLER
0xadb: V1084 = AND V1083 0xffffffffffffffffffffffffffffffffffffffff
0xadc: V1085 = 0x0
0xae0: M[0x0] = V1084
0xae1: V1086 = 0xa
0xae3: V1087 = 0x20
0xae5: M[0x20] = 0xa
0xae6: V1088 = 0x40
0xaeb: V1089 = SHA3 0x0 0x40
0xaef: S[V1089] = V1367
0xaf2: V1090 = ISZERO S3
0xaf3: V1091 = 0x8fc
0xaf6: V1092 = MUL 0x8fc V1090
0xafa: V1093 = M[0x40]
0xafb: V1094 = 0x0
0xafd: V1095 = 0x40
0xaff: V1096 = M[0x40]
0xb02: V1097 = SUB V1093 V1096
0xb07: V1098 = CALL V1092 V1084 S3 V1096 V1097 V1096 0x0
0xb0d: V1099 = ISZERO V1098
0xb0e: V1100 = ISZERO V1099
0xb0f: V1101 = 0x9cd
0xb12: JUMPI 0x9cd V1100
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, V1367]
Stack pops: 4
Stack additions: [S3, S2, S1]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xb13
[0xb13:0xb16]
---
Predecessors: [0xad1]
Successors: []
---
0xb13 PUSH1 0x0
0xb15 DUP1
0xb16 REVERT
---
0xb13: V1102 = 0x0
0xb16: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xb17
[0xb17:0xb2d]
---
Predecessors: [0x17f]
Successors: [0xb2e, 0xb32]
---
0xb17 JUMPDEST
0xb18 PUSH1 0x0
0xb1a SLOAD
0xb1b CALLER
0xb1c PUSH1 0x1
0xb1e PUSH1 0xa0
0xb20 PUSH1 0x2
0xb22 EXP
0xb23 SUB
0xb24 SWAP1
0xb25 DUP2
0xb26 AND
0xb27 SWAP2
0xb28 AND
0xb29 EQ
0xb2a PUSH2 0xb32
0xb2d JUMPI
---
0xb17: JUMPDEST 
0xb18: V1103 = 0x0
0xb1a: V1104 = S[0x0]
0xb1b: V1105 = CALLER
0xb1c: V1106 = 0x1
0xb1e: V1107 = 0xa0
0xb20: V1108 = 0x2
0xb22: V1109 = EXP 0x2 0xa0
0xb23: V1110 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb26: V1111 = AND 0xffffffffffffffffffffffffffffffffffffffff V1105
0xb28: V1112 = AND V1104 0xffffffffffffffffffffffffffffffffffffffff
0xb29: V1113 = EQ V1112 V1111
0xb2a: V1114 = 0xb32
0xb2d: JUMPI 0xb32 V1113
---
Entry stack: [V13, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed]

================================

Block 0xb2e
[0xb2e:0xb31]
---
Predecessors: [0xb17]
Successors: []
---
0xb2e PUSH1 0x0
0xb30 DUP1
0xb31 REVERT
---
0xb2e: V1115 = 0x0
0xb31: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed]

================================

Block 0xb32
[0xb32:0xb3b]
---
Predecessors: [0xb17]
Successors: [0xb3c, 0xb40]
---
0xb32 JUMPDEST
0xb33 PUSH1 0x7
0xb35 SLOAD
0xb36 TIMESTAMP
0xb37 GT
0xb38 PUSH2 0xb40
0xb3b JUMPI
---
0xb32: JUMPDEST 
0xb33: V1116 = 0x7
0xb35: V1117 = S[0x7]
0xb36: V1118 = TIMESTAMP
0xb37: V1119 = GT V1118 V1117
0xb38: V1120 = 0xb40
0xb3b: JUMPI 0xb40 V1119
---
Entry stack: [V13, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed]

================================

Block 0xb3c
[0xb3c:0xb3f]
---
Predecessors: [0xb32]
Successors: []
---
0xb3c PUSH1 0x0
0xb3e DUP1
0xb3f REVERT
---
0xb3c: V1121 = 0x0
0xb3f: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed]

================================

Block 0xb40
[0xb40:0xb83]
---
Predecessors: [0xb32]
Successors: [0xb84, 0xb88]
---
0xb40 JUMPDEST
0xb41 PUSH1 0x8
0xb43 SLOAD
0xb44 PUSH1 0x1
0xb46 PUSH1 0xa0
0xb48 PUSH1 0x2
0xb4a EXP
0xb4b SUB
0xb4c AND
0xb4d PUSH4 0x7d64bcb4
0xb52 PUSH1 0x0
0xb54 PUSH1 0x40
0xb56 MLOAD
0xb57 PUSH1 0x20
0xb59 ADD
0xb5a MSTORE
0xb5b PUSH1 0x40
0xb5d MLOAD
0xb5e DUP2
0xb5f PUSH4 0xffffffff
0xb64 AND
0xb65 PUSH1 0xe0
0xb67 PUSH1 0x2
0xb69 EXP
0xb6a MUL
0xb6b DUP2
0xb6c MSTORE
0xb6d PUSH1 0x4
0xb6f ADD
0xb70 PUSH1 0x20
0xb72 PUSH1 0x40
0xb74 MLOAD
0xb75 DUP1
0xb76 DUP4
0xb77 SUB
0xb78 DUP2
0xb79 PUSH1 0x0
0xb7b DUP8
0xb7c DUP1
0xb7d EXTCODESIZE
0xb7e ISZERO
0xb7f ISZERO
0xb80 PUSH2 0xb88
0xb83 JUMPI
---
0xb40: JUMPDEST 
0xb41: V1122 = 0x8
0xb43: V1123 = S[0x8]
0xb44: V1124 = 0x1
0xb46: V1125 = 0xa0
0xb48: V1126 = 0x2
0xb4a: V1127 = EXP 0x2 0xa0
0xb4b: V1128 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4c: V1129 = AND 0xffffffffffffffffffffffffffffffffffffffff V1123
0xb4d: V1130 = 0x7d64bcb4
0xb52: V1131 = 0x0
0xb54: V1132 = 0x40
0xb56: V1133 = M[0x40]
0xb57: V1134 = 0x20
0xb59: V1135 = ADD 0x20 V1133
0xb5a: M[V1135] = 0x0
0xb5b: V1136 = 0x40
0xb5d: V1137 = M[0x40]
0xb5f: V1138 = 0xffffffff
0xb64: V1139 = AND 0xffffffff 0x7d64bcb4
0xb65: V1140 = 0xe0
0xb67: V1141 = 0x2
0xb69: V1142 = EXP 0x2 0xe0
0xb6a: V1143 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7d64bcb4
0xb6c: M[V1137] = 0x7d64bcb400000000000000000000000000000000000000000000000000000000
0xb6d: V1144 = 0x4
0xb6f: V1145 = ADD 0x4 V1137
0xb70: V1146 = 0x20
0xb72: V1147 = 0x40
0xb74: V1148 = M[0x40]
0xb77: V1149 = SUB V1145 V1148
0xb79: V1150 = 0x0
0xb7d: V1151 = EXTCODESIZE V1129
0xb7e: V1152 = ISZERO V1151
0xb7f: V1153 = ISZERO V1152
0xb80: V1154 = 0xb88
0xb83: JUMPI 0xb88 V1153
---
Entry stack: [V13, 0xed]
Stack pops: 0
Stack additions: [V1129, 0x7d64bcb4, V1145, 0x20, V1148, V1149, V1148, 0x0, V1129]
Exit stack: [V13, 0xed, V1129, 0x7d64bcb4, V1145, 0x20, V1148, V1149, V1148, 0x0, V1129]

================================

Block 0xb84
[0xb84:0xb87]
---
Predecessors: [0xb40]
Successors: []
---
0xb84 PUSH1 0x0
0xb86 DUP1
0xb87 REVERT
---
0xb84: V1155 = 0x0
0xb87: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, V1129, 0x7d64bcb4, V1145, 0x20, V1148, V1149, V1148, 0x0, V1129]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V1129, 0x7d64bcb4, V1145, 0x20, V1148, V1149, V1148, 0x0, V1129]

================================

Block 0xb88
[0xb88:0xb94]
---
Predecessors: [0xb40]
Successors: [0xb95, 0xb99]
---
0xb88 JUMPDEST
0xb89 PUSH2 0x2c6
0xb8c GAS
0xb8d SUB
0xb8e CALL
0xb8f ISZERO
0xb90 ISZERO
0xb91 PUSH2 0xb99
0xb94 JUMPI
---
0xb88: JUMPDEST 
0xb89: V1156 = 0x2c6
0xb8c: V1157 = GAS
0xb8d: V1158 = SUB V1157 0x2c6
0xb8e: V1159 = CALL V1158 V1129 0x0 V1148 V1149 V1148 0x20
0xb8f: V1160 = ISZERO V1159
0xb90: V1161 = ISZERO V1160
0xb91: V1162 = 0xb99
0xb94: JUMPI 0xb99 V1161
---
Entry stack: [V13, 0xed, V1129, 0x7d64bcb4, V1145, 0x20, V1148, V1149, V1148, 0x0, V1129]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xed, V1129, 0x7d64bcb4, V1145]

================================

Block 0xb95
[0xb95:0xb98]
---
Predecessors: [0xb88]
Successors: []
---
0xb95 PUSH1 0x0
0xb97 DUP1
0xb98 REVERT
---
0xb95: V1163 = 0x0
0xb98: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, V1129, 0x7d64bcb4, V1145]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V1129, 0x7d64bcb4, V1145]

================================

Block 0xb99
[0xb99:0xbdd]
---
Predecessors: [0xb88]
Successors: [0xbde, 0xbe2]
---
0xb99 JUMPDEST
0xb9a POP
0xb9b POP
0xb9c POP
0xb9d PUSH1 0x40
0xb9f MLOAD
0xba0 DUP1
0xba1 MLOAD
0xba2 POP
0xba3 POP
0xba4 PUSH1 0x8
0xba6 SLOAD
0xba7 PUSH1 0x1
0xba9 PUSH1 0xa0
0xbab PUSH1 0x2
0xbad EXP
0xbae SUB
0xbaf AND
0xbb0 PUSH4 0xb1b68fad
0xbb5 PUSH1 0x40
0xbb7 MLOAD
0xbb8 DUP2
0xbb9 PUSH4 0xffffffff
0xbbe AND
0xbbf PUSH1 0xe0
0xbc1 PUSH1 0x2
0xbc3 EXP
0xbc4 MUL
0xbc5 DUP2
0xbc6 MSTORE
0xbc7 PUSH1 0x4
0xbc9 ADD
0xbca PUSH1 0x0
0xbcc PUSH1 0x40
0xbce MLOAD
0xbcf DUP1
0xbd0 DUP4
0xbd1 SUB
0xbd2 DUP2
0xbd3 PUSH1 0x0
0xbd5 DUP8
0xbd6 DUP1
0xbd7 EXTCODESIZE
0xbd8 ISZERO
0xbd9 ISZERO
0xbda PUSH2 0xbe2
0xbdd JUMPI
---
0xb99: JUMPDEST 
0xb9d: V1164 = 0x40
0xb9f: V1165 = M[0x40]
0xba1: V1166 = M[V1165]
0xba4: V1167 = 0x8
0xba6: V1168 = S[0x8]
0xba7: V1169 = 0x1
0xba9: V1170 = 0xa0
0xbab: V1171 = 0x2
0xbad: V1172 = EXP 0x2 0xa0
0xbae: V1173 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbaf: V1174 = AND 0xffffffffffffffffffffffffffffffffffffffff V1168
0xbb0: V1175 = 0xb1b68fad
0xbb5: V1176 = 0x40
0xbb7: V1177 = M[0x40]
0xbb9: V1178 = 0xffffffff
0xbbe: V1179 = AND 0xffffffff 0xb1b68fad
0xbbf: V1180 = 0xe0
0xbc1: V1181 = 0x2
0xbc3: V1182 = EXP 0x2 0xe0
0xbc4: V1183 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb1b68fad
0xbc6: M[V1177] = 0xb1b68fad00000000000000000000000000000000000000000000000000000000
0xbc7: V1184 = 0x4
0xbc9: V1185 = ADD 0x4 V1177
0xbca: V1186 = 0x0
0xbcc: V1187 = 0x40
0xbce: V1188 = M[0x40]
0xbd1: V1189 = SUB V1185 V1188
0xbd3: V1190 = 0x0
0xbd7: V1191 = EXTCODESIZE V1174
0xbd8: V1192 = ISZERO V1191
0xbd9: V1193 = ISZERO V1192
0xbda: V1194 = 0xbe2
0xbdd: JUMPI 0xbe2 V1193
---
Entry stack: [V13, 0xed, V1129, 0x7d64bcb4, V1145]
Stack pops: 3
Stack additions: [V1174, 0xb1b68fad, V1185, 0x0, V1188, V1189, V1188, 0x0, V1174]
Exit stack: [V13, 0xed, V1174, 0xb1b68fad, V1185, 0x0, V1188, V1189, V1188, 0x0, V1174]

================================

Block 0xbde
[0xbde:0xbe1]
---
Predecessors: [0xb99]
Successors: []
---
0xbde PUSH1 0x0
0xbe0 DUP1
0xbe1 REVERT
---
0xbde: V1195 = 0x0
0xbe1: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, V1174, 0xb1b68fad, V1185, 0x0, V1188, V1189, V1188, 0x0, V1174]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V1174, 0xb1b68fad, V1185, 0x0, V1188, V1189, V1188, 0x0, V1174]

================================

Block 0xbe2
[0xbe2:0xbee]
---
Predecessors: [0xb99]
Successors: [0xbef, 0xbf3]
---
0xbe2 JUMPDEST
0xbe3 PUSH2 0x2c6
0xbe6 GAS
0xbe7 SUB
0xbe8 CALL
0xbe9 ISZERO
0xbea ISZERO
0xbeb PUSH2 0xbf3
0xbee JUMPI
---
0xbe2: JUMPDEST 
0xbe3: V1196 = 0x2c6
0xbe6: V1197 = GAS
0xbe7: V1198 = SUB V1197 0x2c6
0xbe8: V1199 = CALL V1198 V1174 0x0 V1188 V1189 V1188 0x0
0xbe9: V1200 = ISZERO V1199
0xbea: V1201 = ISZERO V1200
0xbeb: V1202 = 0xbf3
0xbee: JUMPI 0xbf3 V1201
---
Entry stack: [V13, 0xed, V1174, 0xb1b68fad, V1185, 0x0, V1188, V1189, V1188, 0x0, V1174]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xed, V1174, 0xb1b68fad, V1185]

================================

Block 0xbef
[0xbef:0xbf2]
---
Predecessors: [0xbe2]
Successors: []
---
0xbef PUSH1 0x0
0xbf1 DUP1
0xbf2 REVERT
---
0xbef: V1203 = 0x0
0xbf2: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, V1174, 0xb1b68fad, V1185]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V1174, 0xb1b68fad, V1185]

================================

Block 0xbf3
[0xbf3:0xc48]
---
Predecessors: [0xbe2]
Successors: [0xc49, 0xc4d]
---
0xbf3 JUMPDEST
0xbf4 POP
0xbf5 POP
0xbf6 PUSH1 0x8
0xbf8 SLOAD
0xbf9 PUSH1 0x0
0xbfb SLOAD
0xbfc PUSH1 0x1
0xbfe PUSH1 0xa0
0xc00 PUSH1 0x2
0xc02 EXP
0xc03 SUB
0xc04 SWAP2
0xc05 DUP3
0xc06 AND
0xc07 SWAP3
0xc08 POP
0xc09 PUSH4 0xf2fde38b
0xc0e SWAP2
0xc0f AND
0xc10 PUSH1 0x40
0xc12 MLOAD
0xc13 PUSH1 0xe0
0xc15 PUSH1 0x2
0xc17 EXP
0xc18 PUSH4 0xffffffff
0xc1d DUP5
0xc1e AND
0xc1f MUL
0xc20 DUP2
0xc21 MSTORE
0xc22 PUSH1 0x1
0xc24 PUSH1 0xa0
0xc26 PUSH1 0x2
0xc28 EXP
0xc29 SUB
0xc2a SWAP1
0xc2b SWAP2
0xc2c AND
0xc2d PUSH1 0x4
0xc2f DUP3
0xc30 ADD
0xc31 MSTORE
0xc32 PUSH1 0x24
0xc34 ADD
0xc35 PUSH1 0x0
0xc37 PUSH1 0x40
0xc39 MLOAD
0xc3a DUP1
0xc3b DUP4
0xc3c SUB
0xc3d DUP2
0xc3e PUSH1 0x0
0xc40 DUP8
0xc41 DUP1
0xc42 EXTCODESIZE
0xc43 ISZERO
0xc44 ISZERO
0xc45 PUSH2 0xc4d
0xc48 JUMPI
---
0xbf3: JUMPDEST 
0xbf6: V1204 = 0x8
0xbf8: V1205 = S[0x8]
0xbf9: V1206 = 0x0
0xbfb: V1207 = S[0x0]
0xbfc: V1208 = 0x1
0xbfe: V1209 = 0xa0
0xc00: V1210 = 0x2
0xc02: V1211 = EXP 0x2 0xa0
0xc03: V1212 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc06: V1213 = AND 0xffffffffffffffffffffffffffffffffffffffff V1205
0xc09: V1214 = 0xf2fde38b
0xc0f: V1215 = AND 0xffffffffffffffffffffffffffffffffffffffff V1207
0xc10: V1216 = 0x40
0xc12: V1217 = M[0x40]
0xc13: V1218 = 0xe0
0xc15: V1219 = 0x2
0xc17: V1220 = EXP 0x2 0xe0
0xc18: V1221 = 0xffffffff
0xc1e: V1222 = AND 0xf2fde38b 0xffffffff
0xc1f: V1223 = MUL 0xf2fde38b 0x100000000000000000000000000000000000000000000000000000000
0xc21: M[V1217] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0xc22: V1224 = 0x1
0xc24: V1225 = 0xa0
0xc26: V1226 = 0x2
0xc28: V1227 = EXP 0x2 0xa0
0xc29: V1228 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2c: V1229 = AND V1215 0xffffffffffffffffffffffffffffffffffffffff
0xc2d: V1230 = 0x4
0xc30: V1231 = ADD V1217 0x4
0xc31: M[V1231] = V1229
0xc32: V1232 = 0x24
0xc34: V1233 = ADD 0x24 V1217
0xc35: V1234 = 0x0
0xc37: V1235 = 0x40
0xc39: V1236 = M[0x40]
0xc3c: V1237 = SUB V1233 V1236
0xc3e: V1238 = 0x0
0xc42: V1239 = EXTCODESIZE V1213
0xc43: V1240 = ISZERO V1239
0xc44: V1241 = ISZERO V1240
0xc45: V1242 = 0xc4d
0xc48: JUMPI 0xc4d V1241
---
Entry stack: [V13, 0xed, V1174, 0xb1b68fad, V1185]
Stack pops: 3
Stack additions: [V1213, 0xf2fde38b, V1233, 0x0, V1236, V1237, V1236, 0x0, V1213]
Exit stack: [V13, 0xed, V1213, 0xf2fde38b, V1233, 0x0, V1236, V1237, V1236, 0x0, V1213]

================================

Block 0xc49
[0xc49:0xc4c]
---
Predecessors: [0xbf3]
Successors: []
---
0xc49 PUSH1 0x0
0xc4b DUP1
0xc4c REVERT
---
0xc49: V1243 = 0x0
0xc4c: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, V1213, 0xf2fde38b, V1233, 0x0, V1236, V1237, V1236, 0x0, V1213]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V1213, 0xf2fde38b, V1233, 0x0, V1236, V1237, V1236, 0x0, V1213]

================================

Block 0xc4d
[0xc4d:0xc59]
---
Predecessors: [0xbf3]
Successors: [0xc5a, 0xc5e]
---
0xc4d JUMPDEST
0xc4e PUSH2 0x2c6
0xc51 GAS
0xc52 SUB
0xc53 CALL
0xc54 ISZERO
0xc55 ISZERO
0xc56 PUSH2 0xc5e
0xc59 JUMPI
---
0xc4d: JUMPDEST 
0xc4e: V1244 = 0x2c6
0xc51: V1245 = GAS
0xc52: V1246 = SUB V1245 0x2c6
0xc53: V1247 = CALL V1246 V1213 0x0 V1236 V1237 V1236 0x0
0xc54: V1248 = ISZERO V1247
0xc55: V1249 = ISZERO V1248
0xc56: V1250 = 0xc5e
0xc59: JUMPI 0xc5e V1249
---
Entry stack: [V13, 0xed, V1213, 0xf2fde38b, V1233, 0x0, V1236, V1237, V1236, 0x0, V1213]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xed, V1213, 0xf2fde38b, V1233]

================================

Block 0xc5a
[0xc5a:0xc5d]
---
Predecessors: [0xc4d]
Successors: []
---
0xc5a PUSH1 0x0
0xc5c DUP1
0xc5d REVERT
---
0xc5a: V1251 = 0x0
0xc5d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, V1213, 0xf2fde38b, V1233]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V1213, 0xf2fde38b, V1233]

================================

Block 0xc5e
[0xc5e:0xc6f]
---
Predecessors: [0xc4d]
Successors: []
---
0xc5e JUMPDEST
0xc5f POP
0xc60 POP
0xc61 PUSH1 0x9
0xc63 SLOAD
0xc64 PUSH1 0x1
0xc66 PUSH1 0xa0
0xc68 PUSH1 0x2
0xc6a EXP
0xc6b SUB
0xc6c AND
0xc6d SWAP1
0xc6e POP
0xc6f SELFDESTRUCT
---
0xc5e: JUMPDEST 
0xc61: V1252 = 0x9
0xc63: V1253 = S[0x9]
0xc64: V1254 = 0x1
0xc66: V1255 = 0xa0
0xc68: V1256 = 0x2
0xc6a: V1257 = EXP 0x2 0xa0
0xc6b: V1258 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc6c: V1259 = AND 0xffffffffffffffffffffffffffffffffffffffff V1253
0xc6f: SELFDESTRUCT V1259
---
Entry stack: [V13, 0xed, V1213, 0xf2fde38b, V1233]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xed]

================================

Block 0xc70
[0xc70:0xc86]
---
Predecessors: [0x192]
Successors: [0xc87, 0xc8b]
---
0xc70 JUMPDEST
0xc71 PUSH1 0x0
0xc73 SLOAD
0xc74 CALLER
0xc75 PUSH1 0x1
0xc77 PUSH1 0xa0
0xc79 PUSH1 0x2
0xc7b EXP
0xc7c SUB
0xc7d SWAP1
0xc7e DUP2
0xc7f AND
0xc80 SWAP2
0xc81 AND
0xc82 EQ
0xc83 PUSH2 0xc8b
0xc86 JUMPI
---
0xc70: JUMPDEST 
0xc71: V1260 = 0x0
0xc73: V1261 = S[0x0]
0xc74: V1262 = CALLER
0xc75: V1263 = 0x1
0xc77: V1264 = 0xa0
0xc79: V1265 = 0x2
0xc7b: V1266 = EXP 0x2 0xa0
0xc7c: V1267 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7f: V1268 = AND 0xffffffffffffffffffffffffffffffffffffffff V1262
0xc81: V1269 = AND V1261 0xffffffffffffffffffffffffffffffffffffffff
0xc82: V1270 = EQ V1269 V1268
0xc83: V1271 = 0xc8b
0xc86: JUMPI 0xc8b V1270
---
Entry stack: [V13, 0xed, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V134]

================================

Block 0xc87
[0xc87:0xc8a]
---
Predecessors: [0xc70]
Successors: []
---
0xc87 PUSH1 0x0
0xc89 DUP1
0xc8a REVERT
---
0xc87: V1272 = 0x0
0xc8a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V134]

================================

Block 0xc8b
[0xc8b:0xc94]
---
Predecessors: [0xc70]
Successors: [0xc95, 0xc99]
---
0xc8b JUMPDEST
0xc8c PUSH1 0x5
0xc8e SLOAD
0xc8f TIMESTAMP
0xc90 LT
0xc91 PUSH2 0xc99
0xc94 JUMPI
---
0xc8b: JUMPDEST 
0xc8c: V1273 = 0x5
0xc8e: V1274 = S[0x5]
0xc8f: V1275 = TIMESTAMP
0xc90: V1276 = LT V1275 V1274
0xc91: V1277 = 0xc99
0xc94: JUMPI 0xc99 V1276
---
Entry stack: [V13, 0xed, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V134]

================================

Block 0xc95
[0xc95:0xc98]
---
Predecessors: [0xc8b]
Successors: []
---
0xc95 PUSH1 0x0
0xc97 DUP1
0xc98 REVERT
---
0xc95: V1278 = 0x0
0xc98: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V134]

================================

Block 0xc99
[0xc99:0xcd3]
---
Predecessors: [0xc8b]
Successors: [0xed]
---
0xc99 JUMPDEST
0xc9a PUSH1 0x4
0xc9c DUP2
0xc9d SWAP1
0xc9e SSTORE
0xc9f PUSH32 0x66cbca4f3c64fecf1dcb9ce094abcf7f68c3450a1d4e3a8e917dd621edb4ebe0
0xcc0 DUP2
0xcc1 PUSH1 0x40
0xcc3 MLOAD
0xcc4 SWAP1
0xcc5 DUP2
0xcc6 MSTORE
0xcc7 PUSH1 0x20
0xcc9 ADD
0xcca PUSH1 0x40
0xccc MLOAD
0xccd DUP1
0xcce SWAP2
0xccf SUB
0xcd0 SWAP1
0xcd1 LOG1
0xcd2 POP
0xcd3 JUMP
---
0xc99: JUMPDEST 
0xc9a: V1279 = 0x4
0xc9e: S[0x4] = V134
0xc9f: V1280 = 0x66cbca4f3c64fecf1dcb9ce094abcf7f68c3450a1d4e3a8e917dd621edb4ebe0
0xcc1: V1281 = 0x40
0xcc3: V1282 = M[0x40]
0xcc6: M[V1282] = V134
0xcc7: V1283 = 0x20
0xcc9: V1284 = ADD 0x20 V1282
0xcca: V1285 = 0x40
0xccc: V1286 = M[0x40]
0xccf: V1287 = SUB V1284 V1286
0xcd1: LOG V1286 V1287 0x66cbca4f3c64fecf1dcb9ce094abcf7f68c3450a1d4e3a8e917dd621edb4ebe0
0xcd3: JUMP 0xed
---
Entry stack: [V13, 0xed, V134]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xcd4
[0xcd4:0xce2]
---
Predecessors: [0x1a8]
Successors: [0x1b0]
---
0xcd4 JUMPDEST
0xcd5 PUSH1 0x0
0xcd7 SLOAD
0xcd8 PUSH1 0x1
0xcda PUSH1 0xa0
0xcdc PUSH1 0x2
0xcde EXP
0xcdf SUB
0xce0 AND
0xce1 DUP2
0xce2 JUMP
---
0xcd4: JUMPDEST 
0xcd5: V1288 = 0x0
0xcd7: V1289 = S[0x0]
0xcd8: V1290 = 0x1
0xcda: V1291 = 0xa0
0xcdc: V1292 = 0x2
0xcde: V1293 = EXP 0x2 0xa0
0xcdf: V1294 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce0: V1295 = AND 0xffffffffffffffffffffffffffffffffffffffff V1289
0xce2: JUMP 0x1b0
---
Entry stack: [V13, 0x1b0]
Stack pops: 1
Stack additions: [S0, V1295]
Exit stack: [V13, 0x1b0, V1295]

================================

Block 0xce3
[0xce3:0xce8]
---
Predecessors: [0x1d7]
Successors: [0x102]
---
0xce3 JUMPDEST
0xce4 PUSH1 0x5
0xce6 SLOAD
0xce7 DUP2
0xce8 JUMP
---
0xce3: JUMPDEST 
0xce4: V1296 = 0x5
0xce6: V1297 = S[0x5]
0xce8: JUMP 0x102
---
Entry stack: [V13, 0x102]
Stack pops: 1
Stack additions: [S0, V1297]
Exit stack: [V13, 0x102, V1297]

================================

Block 0xce9
[0xce9:0xcee]
---
Predecessors: [0x1fe]
Successors: [0x102]
---
0xce9 JUMPDEST
0xcea PUSH1 0x6
0xcec SLOAD
0xced DUP2
0xcee JUMP
---
0xce9: JUMPDEST 
0xcea: V1298 = 0x6
0xcec: V1299 = S[0x6]
0xcee: JUMP 0x102
---
Entry stack: [V13, 0x102]
Stack pops: 1
Stack additions: [S0, V1299]
Exit stack: [V13, 0x102, V1299]

================================

Block 0xcef
[0xcef:0xd05]
---
Predecessors: [0x211]
Successors: [0xd06, 0xd0a]
---
0xcef JUMPDEST
0xcf0 PUSH1 0x0
0xcf2 SLOAD
0xcf3 CALLER
0xcf4 PUSH1 0x1
0xcf6 PUSH1 0xa0
0xcf8 PUSH1 0x2
0xcfa EXP
0xcfb SUB
0xcfc SWAP1
0xcfd DUP2
0xcfe AND
0xcff SWAP2
0xd00 AND
0xd01 EQ
0xd02 PUSH2 0xd0a
0xd05 JUMPI
---
0xcef: JUMPDEST 
0xcf0: V1300 = 0x0
0xcf2: V1301 = S[0x0]
0xcf3: V1302 = CALLER
0xcf4: V1303 = 0x1
0xcf6: V1304 = 0xa0
0xcf8: V1305 = 0x2
0xcfa: V1306 = EXP 0x2 0xa0
0xcfb: V1307 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcfe: V1308 = AND 0xffffffffffffffffffffffffffffffffffffffff V1302
0xd00: V1309 = AND V1301 0xffffffffffffffffffffffffffffffffffffffff
0xd01: V1310 = EQ V1309 V1308
0xd02: V1311 = 0xd0a
0xd05: JUMPI 0xd0a V1310
---
Entry stack: [V13, 0xed, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V189]

================================

Block 0xd06
[0xd06:0xd09]
---
Predecessors: [0xcef]
Successors: []
---
0xd06 PUSH1 0x0
0xd08 DUP1
0xd09 REVERT
---
0xd06: V1312 = 0x0
0xd09: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V189]

================================

Block 0xd0a
[0xd0a:0xd19]
---
Predecessors: [0xcef]
Successors: [0xd1a, 0xd42]
---
0xd0a JUMPDEST
0xd0b PUSH1 0x1
0xd0d PUSH1 0xa0
0xd0f PUSH1 0x2
0xd11 EXP
0xd12 SUB
0xd13 DUP2
0xd14 AND
0xd15 ISZERO
0xd16 PUSH2 0xd42
0xd19 JUMPI
---
0xd0a: JUMPDEST 
0xd0b: V1313 = 0x1
0xd0d: V1314 = 0xa0
0xd0f: V1315 = 0x2
0xd11: V1316 = EXP 0x2 0xa0
0xd12: V1317 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd14: V1318 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0xd15: V1319 = ISZERO V1318
0xd16: V1320 = 0xd42
0xd19: JUMPI 0xd42 V1319
---
Entry stack: [V13, 0xed, V189]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xed, V189]

================================

Block 0xd1a
[0xd1a:0xd41]
---
Predecessors: [0xd0a]
Successors: [0xd42]
---
0xd1a PUSH1 0x0
0xd1c DUP1
0xd1d SLOAD
0xd1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd33 NOT
0xd34 AND
0xd35 PUSH1 0x1
0xd37 PUSH1 0xa0
0xd39 PUSH1 0x2
0xd3b EXP
0xd3c SUB
0xd3d DUP4
0xd3e AND
0xd3f OR
0xd40 SWAP1
0xd41 SSTORE
---
0xd1a: V1321 = 0x0
0xd1d: V1322 = S[0x0]
0xd1e: V1323 = 0xffffffffffffffffffffffffffffffffffffffff
0xd33: V1324 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd34: V1325 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1322
0xd35: V1326 = 0x1
0xd37: V1327 = 0xa0
0xd39: V1328 = 0x2
0xd3b: V1329 = EXP 0x2 0xa0
0xd3c: V1330 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd3e: V1331 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0xd3f: V1332 = OR V1331 V1325
0xd41: S[0x0] = V1332
---
Entry stack: [V13, 0xed, V189]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xed, V189]

================================

Block 0xd42
[0xd42:0xd44]
---
Predecessors: [0xd0a, 0xd1a]
Successors: [0xed]
---
0xd42 JUMPDEST
0xd43 POP
0xd44 JUMP
---
0xd42: JUMPDEST 
0xd44: JUMP 0xed
---
Entry stack: [V13, 0xed, V189]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xd45
[0xd45:0xd5b]
---
Predecessors: [0x230]
Successors: [0xd5c, 0xd60]
---
0xd45 JUMPDEST
0xd46 PUSH1 0x0
0xd48 SLOAD
0xd49 CALLER
0xd4a PUSH1 0x1
0xd4c PUSH1 0xa0
0xd4e PUSH1 0x2
0xd50 EXP
0xd51 SUB
0xd52 SWAP1
0xd53 DUP2
0xd54 AND
0xd55 SWAP2
0xd56 AND
0xd57 EQ
0xd58 PUSH2 0xd60
0xd5b JUMPI
---
0xd45: JUMPDEST 
0xd46: V1333 = 0x0
0xd48: V1334 = S[0x0]
0xd49: V1335 = CALLER
0xd4a: V1336 = 0x1
0xd4c: V1337 = 0xa0
0xd4e: V1338 = 0x2
0xd50: V1339 = EXP 0x2 0xa0
0xd51: V1340 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd54: V1341 = AND 0xffffffffffffffffffffffffffffffffffffffff V1335
0xd56: V1342 = AND V1334 0xffffffffffffffffffffffffffffffffffffffff
0xd57: V1343 = EQ V1342 V1341
0xd58: V1344 = 0xd60
0xd5b: JUMPI 0xd60 V1343
---
Entry stack: [V13, 0xed, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V197]

================================

Block 0xd5c
[0xd5c:0xd5f]
---
Predecessors: [0xd45]
Successors: []
---
0xd5c PUSH1 0x0
0xd5e DUP1
0xd5f REVERT
---
0xd5c: V1345 = 0x0
0xd5f: REVERT 0x0 0x0
---
Entry stack: [V13, 0xed, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xed, V197]

================================

Block 0xd60
[0xd60:0xd64]
---
Predecessors: [0xd45]
Successors: [0xed]
---
0xd60 JUMPDEST
0xd61 PUSH1 0x5
0xd63 SSTORE
0xd64 JUMP
---
0xd60: JUMPDEST 
0xd61: V1346 = 0x5
0xd63: S[0x5] = V197
0xd64: JUMP 0xed
---
Entry stack: [V13, 0xed, V197]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xd65
[0xd65:0xd73]
---
Predecessors: [0x246]
Successors: [0x1b0]
---
0xd65 JUMPDEST
0xd66 PUSH1 0x9
0xd68 SLOAD
0xd69 PUSH1 0x1
0xd6b PUSH1 0xa0
0xd6d PUSH1 0x2
0xd6f EXP
0xd70 SUB
0xd71 AND
0xd72 DUP2
0xd73 JUMP
---
0xd65: JUMPDEST 
0xd66: V1347 = 0x9
0xd68: V1348 = S[0x9]
0xd69: V1349 = 0x1
0xd6b: V1350 = 0xa0
0xd6d: V1351 = 0x2
0xd6f: V1352 = EXP 0x2 0xa0
0xd70: V1353 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd71: V1354 = AND 0xffffffffffffffffffffffffffffffffffffffff V1348
0xd73: JUMP 0x1b0
---
Entry stack: [V13, 0x1b0]
Stack pops: 1
Stack additions: [S0, V1354]
Exit stack: [V13, 0x1b0, V1354]

================================

Block 0xd74
[0xd74:0xd82]
---
Predecessors: [0x259]
Successors: [0x1b0]
---
0xd74 JUMPDEST
0xd75 PUSH1 0x8
0xd77 SLOAD
0xd78 PUSH1 0x1
0xd7a PUSH1 0xa0
0xd7c PUSH1 0x2
0xd7e EXP
0xd7f SUB
0xd80 AND
0xd81 DUP2
0xd82 JUMP
---
0xd74: JUMPDEST 
0xd75: V1355 = 0x8
0xd77: V1356 = S[0x8]
0xd78: V1357 = 0x1
0xd7a: V1358 = 0xa0
0xd7c: V1359 = 0x2
0xd7e: V1360 = EXP 0x2 0xa0
0xd7f: V1361 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd80: V1362 = AND 0xffffffffffffffffffffffffffffffffffffffff V1356
0xd82: JUMP 0x1b0
---
Entry stack: [V13, 0x1b0]
Stack pops: 1
Stack additions: [S0, V1362]
Exit stack: [V13, 0x1b0, V1362]

================================

Block 0xd83
[0xd83:0xd8d]
---
Predecessors: [0x32c, 0xaa6]
Successors: [0xd8e, 0xd8f]
---
0xd83 JUMPDEST
0xd84 PUSH1 0x0
0xd86 DUP3
0xd87 DUP3
0xd88 GT
0xd89 ISZERO
0xd8a PUSH2 0xd8f
0xd8d JUMPI
---
0xd83: JUMPDEST 
0xd84: V1363 = 0x0
0xd88: V1364 = GT S0 S1
0xd89: V1365 = ISZERO V1364
0xd8a: V1366 = 0xd8f
0xd8d: JUMPI 0xd8f V1365
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99, 0xad1}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99, 0xad1}, S1, S0, 0x0]

================================

Block 0xd8e
[0xd8e:0xd8e]
---
Predecessors: [0xd83]
Successors: []
---
0xd8e INVALID
---
0xd8e: INVALID 
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99, 0xad1}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99, 0xad1}, S2, S1, 0x0]

================================

Block 0xd8f
[0xd8f:0xd94]
---
Predecessors: [0xd83]
Successors: [0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99, 0xad1]
---
0xd8f JUMPDEST
0xd90 POP
0xd91 SWAP1
0xd92 SUB
0xd93 SWAP1
0xd94 JUMP
---
0xd8f: JUMPDEST 
0xd92: V1367 = SUB S2 S1
0xd94: JUMP {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99, 0xad1}
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, {0x342, 0x516, 0x5af, 0x764, 0x7d2, 0xa2b, 0xa99, 0xad1}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1367]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, V1367]

================================

Block 0xd95
[0xd95:0xda1]
---
Predecessors: [0x35d, 0x543]
Successors: [0xda2, 0xdb1]
---
0xd95 JUMPDEST
0xd96 PUSH1 0x0
0xd98 DUP3
0xd99 DUP3
0xd9a MUL
0xd9b DUP4
0xd9c ISZERO
0xd9d DUP1
0xd9e PUSH2 0xdb1
0xda1 JUMPI
---
0xd95: JUMPDEST 
0xd96: V1368 = 0x0
0xd9a: V1369 = MUL S0 S1
0xd9c: V1370 = ISZERO S1
0xd9e: V1371 = 0xdb1
0xda1: JUMPI 0xdb1 V1370
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, {0x373, 0x559}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1369, V1370]
Exit stack: [V13, S8, S7, S6, S5, S4, S3, {0x373, 0x559}, S1, S0, 0x0, V1369, V1370]

================================

Block 0xda2
[0xda2:0xdac]
---
Predecessors: [0xd95]
Successors: [0xdad, 0xdae]
---
0xda2 POP
0xda3 DUP3
0xda4 DUP5
0xda5 DUP3
0xda6 DUP2
0xda7 ISZERO
0xda8 ISZERO
0xda9 PUSH2 0xdae
0xdac JUMPI
---
0xda7: V1372 = ISZERO S4
0xda8: V1373 = ISZERO V1372
0xda9: V1374 = 0xdae
0xdac: JUMPI 0xdae V1373
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, {0x373, 0x559}, S4, S3, 0x0, V1369, V1370]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, {0x373, 0x559}, S4, S3, 0x0, V1369, S3, S4, V1369]

================================

Block 0xdad
[0xdad:0xdad]
---
Predecessors: [0xda2]
Successors: []
---
0xdad INVALID
---
0xdad: INVALID 
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, {0x373, 0x559}, S6, S5, 0x0, V1369, S2, S1, V1369]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, {0x373, 0x559}, S6, S5, 0x0, V1369, S2, S1, V1369]

================================

Block 0xdae
[0xdae:0xdb0]
---
Predecessors: [0xda2]
Successors: [0xdb1]
---
0xdae JUMPDEST
0xdaf DIV
0xdb0 EQ
---
0xdae: JUMPDEST 
0xdaf: V1375 = DIV V1369 S1
0xdb0: V1376 = EQ V1375 S2
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, {0x373, 0x559}, S6, S5, 0x0, V1369, S2, S1, V1369]
Stack pops: 3
Stack additions: [V1376]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, {0x373, 0x559}, S6, S5, 0x0, V1369, V1376]

================================

Block 0xdb1
[0xdb1:0xdb7]
---
Predecessors: [0xd95, 0xdae]
Successors: [0xdb8, 0xdb9]
---
0xdb1 JUMPDEST
0xdb2 ISZERO
0xdb3 ISZERO
0xdb4 PUSH2 0xdb9
0xdb7 JUMPI
---
0xdb1: JUMPDEST 
0xdb2: V1377 = ISZERO S0
0xdb3: V1378 = ISZERO V1377
0xdb4: V1379 = 0xdb9
0xdb7: JUMPI 0xdb9 V1378
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, {0x373, 0x559}, S4, S3, 0x0, V1369, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, {0x373, 0x559}, S4, S3, 0x0, V1369]

================================

Block 0xdb8
[0xdb8:0xdb8]
---
Predecessors: [0xdb1]
Successors: []
---
0xdb8 INVALID
---
0xdb8: INVALID 
---
Entry stack: [V13, S10, S9, S8, S7, 0x0, S5, {0x373, 0x559}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, 0x0, S5, {0x373, 0x559}, S3, S2, 0x0, S0]

================================

Block 0xdb9
[0xdb9:0xdbf]
---
Predecessors: [0xdb1, 0xde0]
Successors: [0x373, 0x396, 0x3c2, 0x559, 0x5da, 0x606]
---
0xdb9 JUMPDEST
0xdba SWAP4
0xdbb SWAP3
0xdbc POP
0xdbd POP
0xdbe POP
0xdbf JUMP
---
0xdb9: JUMPDEST 
0xdbf: JUMP {0x373, 0x396, 0x3c2, 0x559, 0x5da, 0x606}
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, {0x373, 0x396, 0x3c2, 0x559, 0x5da, 0x606}, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S0]

================================

Block 0xdc0
[0xdc0:0xdca]
---
Predecessors: [0x373, 0x5b6]
Successors: [0xdcb, 0xdcc]
---
0xdc0 JUMPDEST
0xdc1 PUSH1 0x0
0xdc3 DUP1
0xdc4 DUP1
0xdc5 DUP4
0xdc6 GT
0xdc7 PUSH2 0xdcc
0xdca JUMPI
---
0xdc0: JUMPDEST 
0xdc1: V1380 = 0x0
0xdc6: V1381 = GT {0x4, 0x5} 0x0
0xdc7: V1382 = 0xdcc
0xdca: JUMPI 0xdcc V1381
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, {0x396, 0x5da}, {0x389, 0x5cd}, S1, {0x4, 0x5}]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, {0x396, 0x5da}, {0x389, 0x5cd}, S1, {0x4, 0x5}, 0x0, 0x0]

================================

Block 0xdcb
[0xdcb:0xdcb]
---
Predecessors: [0xdc0]
Successors: []
---
0xdcb INVALID
---
0xdcb: INVALID 
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, {0x396, 0x5da}, {0x389, 0x5cd}, S3, {0x4, 0x5}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, {0x396, 0x5da}, {0x389, 0x5cd}, S3, {0x4, 0x5}, 0x0, 0x0]

================================

Block 0xdcc
[0xdcc:0xdd5]
---
Predecessors: [0xdc0]
Successors: [0xdd6, 0xdd7]
---
0xdcc JUMPDEST
0xdcd DUP3
0xdce DUP5
0xdcf DUP2
0xdd0 ISZERO
0xdd1 ISZERO
0xdd2 PUSH2 0xdd7
0xdd5 JUMPI
---
0xdcc: JUMPDEST 
0xdd0: V1383 = ISZERO {0x4, 0x5}
0xdd1: V1384 = ISZERO V1383
0xdd2: V1385 = 0xdd7
0xdd5: JUMPI 0xdd7 V1384
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, {0x396, 0x5da}, {0x389, 0x5cd}, S3, {0x4, 0x5}, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S2, S3]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, {0x396, 0x5da}, {0x389, 0x5cd}, S3, {0x4, 0x5}, 0x0, 0x0, {0x4, 0x5}, S3]

================================

Block 0xdd6
[0xdd6:0xdd6]
---
Predecessors: [0xdcc]
Successors: []
---
0xdd6 INVALID
---
0xdd6: INVALID 
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, {0x396, 0x5da}, {0x389, 0x5cd}, S5, {0x4, 0x5}, 0x0, 0x0, {0x4, 0x5}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, {0x396, 0x5da}, {0x389, 0x5cd}, S5, {0x4, 0x5}, 0x0, 0x0, {0x4, 0x5}, S0]

================================

Block 0xdd7
[0xdd7:0xddf]
---
Predecessors: [0xdcc]
Successors: [0x389, 0x5cd]
---
0xdd7 JUMPDEST
0xdd8 DIV
0xdd9 SWAP5
0xdda SWAP4
0xddb POP
0xddc POP
0xddd POP
0xdde POP
0xddf JUMP
---
0xdd7: JUMPDEST 
0xdd8: V1386 = DIV S0 {0x4, 0x5}
0xddf: JUMP {0x389, 0x5cd}
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, {0x396, 0x5da}, {0x389, 0x5cd}, S5, {0x4, 0x5}, 0x0, 0x0, {0x4, 0x5}, S0]
Stack pops: 7
Stack additions: [V1386]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, {0x396, 0x5da}, V1386]

================================

Block 0xde0
[0xde0:0xded]
---
Predecessors: [0x389, 0x396, 0x5cd, 0x5dd]
Successors: [0xdb9, 0xdee]
---
0xde0 JUMPDEST
0xde1 PUSH1 0x0
0xde3 DUP3
0xde4 DUP3
0xde5 ADD
0xde6 DUP4
0xde7 DUP2
0xde8 LT
0xde9 ISZERO
0xdea PUSH2 0xdb9
0xded JUMPI
---
0xde0: JUMPDEST 
0xde1: V1387 = 0x0
0xde5: V1388 = ADD S0 S1
0xde8: V1389 = LT V1388 S1
0xde9: V1390 = ISZERO V1389
0xdea: V1391 = 0xdb9
0xded: JUMPI 0xdb9 V1390
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, {0x396, 0x3c2, 0x5da, 0x606}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1388]
Exit stack: [V13, S8, S7, S6, S5, S4, S3, {0x396, 0x3c2, 0x5da, 0x606}, S1, S0, 0x0, V1388]

================================

Block 0xdee
[0xdee:0xdee]
---
Predecessors: [0xde0]
Successors: []
---
0xdee INVALID
---
0xdee: INVALID 
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, {0x396, 0x3c2, 0x5da, 0x606}, S3, S2, 0x0, V1388]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, S6, S5, {0x396, 0x3c2, 0x5da, 0x606}, S3, S2, 0x0, V1388]

================================

Block 0xdef
[0xdef:0xe25]
---
Predecessors: []
Successors: []
---
0xdef STOP
0xdf0 LOG1
0xdf1 PUSH6 0x627a7a723058
0xdf8 SHA3
0xdf9 DIV
0xdfa SWAP3
0xdfb MISSING 0xad
0xdfc MLOAD
0xdfd SWAP7
0xdfe MISSING 0xba
0xdff MISSING 0xbe
0xe00 MISSING 0xa9
0xe01 MISSING 0xd6
0xe02 POP
0xe03 MISSING 0xef
0xe04 MISSING 0xb7
0xe05 MISSING 0xb2
0xe06 MISSING 0x49
0xe07 MISSING 0xde
0xe08 SWAP3
0xe09 SHR
0xe0a TIMESTAMP
0xe0b PUSH26 0xa41e8eb8a9fe510928cc80a6170029
---
0xdef: STOP 
0xdf0: LOG S0 S1 S2
0xdf1: V1392 = 0x627a7a723058
0xdf8: V1393 = SHA3 0x627a7a723058 S3
0xdf9: V1394 = DIV V1393 S4
0xdfb: MISSING 0xad
0xdfc: V1395 = M[S0]
0xdfe: MISSING 0xba
0xdff: MISSING 0xbe
0xe00: MISSING 0xa9
0xe01: MISSING 0xd6
0xe03: MISSING 0xef
0xe04: MISSING 0xb7
0xe05: MISSING 0xb2
0xe06: MISSING 0x49
0xe07: MISSING 0xde
0xe09: V1396 = SHR S3 S1
0xe0a: V1397 = TIMESTAMP
0xe0b: V1398 = 0xa41e8eb8a9fe510928cc80a6170029
---
Entry stack: []
Stack pops: 0
Stack additions: [S7, S5, S6, V1394, S7, S1, S2, S3, S4, S5, S6, V1395, 0xa41e8eb8a9fe510928cc80a6170029, V1397, V1396, S2, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x12065fe0
Entry block: 0xef
Exit block: 0x102
Body: 0xef, 0xf6, 0xfa, 0x102, 0x704

Function 1:
Public function signature: 0x3aedfb8b
Entry block: 0x114
Exit block: 0xed
Body: 0xed, 0x114, 0x11b, 0x11f, 0x712, 0x764, 0x773, 0x775, 0x77c, 0x780, 0x7d2, 0x7dc, 0x7e0, 0x815, 0x819, 0x85d, 0x861, 0x86e, 0x872, 0x8b7, 0x8bb, 0x8c8, 0x8cc

Function 2:
Public function signature: 0x3cecd719
Entry block: 0x127
Exit block: 0xed
Body: 0xed, 0x127, 0x12e, 0x132, 0x8d3, 0x8dd, 0x8e1, 0x916, 0x91a, 0x95e, 0x962, 0x96f, 0x973, 0x9b8, 0x9bc, 0x9c9, 0x9cd

Function 3:
Public function signature: 0x51c69b12
Entry block: 0x13a
Exit block: 0x102
Body: 0x102, 0x13a, 0x141, 0x145, 0x9d2

Function 4:
Public function signature: 0x52c5785b
Entry block: 0x14d
Exit block: 0xed
Body: 0xed, 0x14d

Function 5:
Public function signature: 0x590e1ae3
Entry block: 0x161
Exit block: 0xdee
Body: 0x161, 0x168, 0x16c, 0x9d8, 0xa2b, 0xa3a, 0xa3c, 0xa43, 0xa47, 0xa99, 0xaa2, 0xaa6, 0xdee

Function 6:
Public function signature: 0x83197ef0
Entry block: 0x174
Exit block: 0xc5a
Body: 0x174, 0x17b, 0x17f, 0xb17, 0xb2e, 0xb32, 0xb3c, 0xb40, 0xb84, 0xb88, 0xb95, 0xb99, 0xbde, 0xbe2, 0xbef, 0xbf3, 0xc49, 0xc4d, 0xc5a, 0xc5e

Function 7:
Public function signature: 0x8d6cc56d
Entry block: 0x187
Exit block: 0xed
Body: 0xed, 0x187, 0x18e, 0x192, 0xc70, 0xc87, 0xc8b, 0xc95, 0xc99

Function 8:
Public function signature: 0x8da5cb5b
Entry block: 0x19d
Exit block: 0x1b0
Body: 0x19d, 0x1a4, 0x1a8, 0x1b0, 0xcd4

Function 9:
Public function signature: 0xbe9a6555
Entry block: 0x1cc
Exit block: 0x102
Body: 0x102, 0x1cc, 0x1d3, 0x1d7, 0xce3

Function 10:
Public function signature: 0xce557031
Entry block: 0x1df
Exit block: 0xed
Body: 0xed, 0x1df

Function 11:
Public function signature: 0xefbe1c1c
Entry block: 0x1f3
Exit block: 0x102
Body: 0x102, 0x1f3, 0x1fa, 0x1fe, 0xce9

Function 12:
Public function signature: 0xf2fde38b
Entry block: 0x206
Exit block: 0xed
Body: 0xed, 0x206, 0x20d, 0x211, 0xcef, 0xd06, 0xd0a, 0xd1a, 0xd42

Function 13:
Public function signature: 0xf81ed6ae
Entry block: 0x225
Exit block: 0xed
Body: 0xed, 0x225, 0x22c, 0x230, 0xd45, 0xd5c, 0xd60

Function 14:
Public function signature: 0xfbfa77cf
Entry block: 0x23b
Exit block: 0x1b0
Body: 0x1b0, 0x23b, 0x242, 0x246, 0xd65

Function 15:
Public function signature: 0xfc0c546a
Entry block: 0x24e
Exit block: 0x1b0
Body: 0x1b0, 0x24e, 0x255, 0x259, 0xd74

Function 16:
Public fallback function
Entry block: 0xcc
Exit block: 0xed
Body: 0xcc, 0xd7, 0xdf, 0xe4, 0xed

Function 17:
Private function
Entry block: 0xd95
Exit block: 0xdb9
Body: 0x396, 0x5da, 0x5dd, 0xd95, 0xda2, 0xdae, 0xdb1, 0xdb9

Function 18:
Private function
Entry block: 0xdc0
Exit block: 0xdd7
Body: 0xdc0, 0xdcc, 0xdd7

Function 19:
Private function
Entry block: 0x2b7
Exit block: 0xd8f
Body: 0x2b7, 0x2c8, 0x31b, 0x32c, 0xd83, 0xd8f

Function 20:
Private function
Entry block: 0xde0
Exit block: 0xdb9
Body: 0x373, 0x389, 0x396, 0x3c2, 0x559, 0x5af, 0x5b6, 0x5cd, 0x5da, 0x5dd, 0x5dd, 0x606, 0xdb9, 0xde0

Function 21:
Private function
Entry block: 0x4bf
Exit block: 0xd60
Body: 0xdf, 0x373, 0x389, 0x396, 0x3c2, 0x43a, 0x44b, 0x4bf, 0x516, 0x524, 0x531, 0x538, 0x543, 0x559, 0x559, 0x5af, 0x5b6, 0x5cd, 0x5da, 0x5dd, 0x5dd, 0x606, 0x67e, 0x68f, 0xdb9, 0xde0

Function 22:
Private function
Entry block: 0x261
Exit block: 0x44b
Body: 0x261, 0x342, 0x34f, 0x35d, 0x373, 0x373, 0x389, 0x396, 0x3c2, 0x43a, 0x44b, 0x559, 0x5af, 0x5b6, 0x5cd, 0x5da, 0x5dd, 0x5dd, 0x606, 0x67e, 0x68f, 0xdb9, 0xde0

