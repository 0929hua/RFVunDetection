Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x72]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x27f10ee0
0x3c EQ
0x3d PUSH2 0x72
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x27f10ee0
0x3c: V13 = EQ 0x27f10ee0 V11
0x3d: V14 = 0x72
0x40: JUMPI 0x72 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xcb]
---
0x41 DUP1
0x42 PUSH4 0x5a8f9b81
0x47 EQ
0x48 PUSH2 0xcb
0x4b JUMPI
---
0x42: V15 = 0x5a8f9b81
0x47: V16 = EQ 0x5a8f9b81 V11
0x48: V17 = 0xcb
0x4b: JUMPI 0xcb V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x107]
---
0x4c DUP1
0x4d PUSH4 0x7ec27ba1
0x52 EQ
0x53 PUSH2 0x107
0x56 JUMPI
---
0x4d: V18 = 0x7ec27ba1
0x52: V19 = EQ 0x7ec27ba1 V11
0x53: V20 = 0x107
0x56: JUMPI 0x107 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x151]
---
0x57 DUP1
0x58 PUSH4 0xeb8ae1ed
0x5d EQ
0x5e PUSH2 0x151
0x61 JUMPI
---
0x58: V21 = 0xeb8ae1ed
0x5d: V22 = EQ 0xeb8ae1ed V11
0x5e: V23 = 0x151
0x61: JUMPI 0x151 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1aa]
---
0x62 DUP1
0x63 PUSH4 0xf325cc91
0x68 EQ
0x69 PUSH2 0x1aa
0x6c JUMPI
---
0x63: V24 = 0xf325cc91
0x68: V25 = EQ 0xf325cc91 V11
0x69: V26 = 0x1aa
0x6c: JUMPI 0x1aa V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x71]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6d: JUMPDEST 
0x6e: V27 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0xc8]
---
Predecessors: [0xd]
Successors: [0x2c2]
---
0x72 JUMPDEST
0x73 PUSH2 0xc9
0x76 PUSH1 0x4
0x78 DUP1
0x79 CALLDATASIZE
0x7a SUB
0x7b DUP2
0x7c ADD
0x7d SWAP1
0x7e DUP1
0x7f DUP1
0x80 CALLDATALOAD
0x81 SWAP1
0x82 PUSH1 0x20
0x84 ADD
0x85 SWAP1
0x86 SWAP3
0x87 SWAP2
0x88 SWAP1
0x89 DUP1
0x8a CALLDATALOAD
0x8b PUSH12 0xffffffffffffffffffffffff
0x98 NOT
0x99 AND
0x9a SWAP1
0x9b PUSH1 0x20
0x9d ADD
0x9e SWAP1
0x9f SWAP3
0xa0 SWAP2
0xa1 SWAP1
0xa2 DUP1
0xa3 CALLDATALOAD
0xa4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9 AND
0xba SWAP1
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP1
0xbf SWAP3
0xc0 SWAP2
0xc1 SWAP1
0xc2 POP
0xc3 POP
0xc4 POP
0xc5 PUSH2 0x2c2
0xc8 JUMP
---
0x72: JUMPDEST 
0x73: V28 = 0xc9
0x76: V29 = 0x4
0x79: V30 = CALLDATASIZE
0x7a: V31 = SUB V30 0x4
0x7c: V32 = ADD 0x4 V31
0x80: V33 = CALLDATALOAD 0x4
0x82: V34 = 0x20
0x84: V35 = ADD 0x20 0x4
0x8a: V36 = CALLDATALOAD 0x24
0x8b: V37 = 0xffffffffffffffffffffffff
0x98: V38 = NOT 0xffffffffffffffffffffffff
0x99: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V36
0x9b: V40 = 0x20
0x9d: V41 = ADD 0x20 0x24
0xa3: V42 = CALLDATALOAD 0x44
0xa4: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xbb: V45 = 0x20
0xbd: V46 = ADD 0x20 0x44
0xc5: V47 = 0x2c2
0xc8: JUMP 0x2c2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc9, V33, V39, V44]
Exit stack: [V11, 0xc9, V33, V39, V44]

================================

Block 0xc9
[0xc9:0xca]
---
Predecessors: [0x570]
Successors: []
---
0xc9 JUMPDEST
0xca STOP
---
0xc9: JUMPDEST 
0xca: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcb
[0xcb:0xd2]
---
Predecessors: [0x41]
Successors: [0xd3, 0xd7]
---
0xcb JUMPDEST
0xcc CALLVALUE
0xcd DUP1
0xce ISZERO
0xcf PUSH2 0xd7
0xd2 JUMPI
---
0xcb: JUMPDEST 
0xcc: V48 = CALLVALUE
0xce: V49 = ISZERO V48
0xcf: V50 = 0xd7
0xd2: JUMPI 0xd7 V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V48]
Exit stack: [V11, V48]

================================

Block 0xd3
[0xd3:0xd6]
---
Predecessors: [0xcb]
Successors: []
---
0xd3 PUSH1 0x0
0xd5 DUP1
0xd6 REVERT
---
0xd3: V51 = 0x0
0xd6: REVERT 0x0 0x0
---
Entry stack: [V11, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V48]

================================

Block 0xd7
[0xd7:0x104]
---
Predecessors: [0xcb]
Successors: [0x640]
---
0xd7 JUMPDEST
0xd8 POP
0xd9 PUSH2 0x105
0xdc PUSH1 0x4
0xde DUP1
0xdf CALLDATASIZE
0xe0 SUB
0xe1 DUP2
0xe2 ADD
0xe3 SWAP1
0xe4 DUP1
0xe5 DUP1
0xe6 CALLDATALOAD
0xe7 PUSH12 0xffffffffffffffffffffffff
0xf4 NOT
0xf5 AND
0xf6 SWAP1
0xf7 PUSH1 0x20
0xf9 ADD
0xfa SWAP1
0xfb SWAP3
0xfc SWAP2
0xfd SWAP1
0xfe POP
0xff POP
0x100 POP
0x101 PUSH2 0x640
0x104 JUMP
---
0xd7: JUMPDEST 
0xd9: V52 = 0x105
0xdc: V53 = 0x4
0xdf: V54 = CALLDATASIZE
0xe0: V55 = SUB V54 0x4
0xe2: V56 = ADD 0x4 V55
0xe6: V57 = CALLDATALOAD 0x4
0xe7: V58 = 0xffffffffffffffffffffffff
0xf4: V59 = NOT 0xffffffffffffffffffffffff
0xf5: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V57
0xf7: V61 = 0x20
0xf9: V62 = ADD 0x20 0x4
0x101: V63 = 0x640
0x104: JUMP 0x640
---
Entry stack: [V11, V48]
Stack pops: 1
Stack additions: [0x105, V60]
Exit stack: [V11, 0x105, V60]

================================

Block 0x105
[0x105:0x106]
---
Predecessors: [0x963]
Successors: []
---
0x105 JUMPDEST
0x106 STOP
---
0x105: JUMPDEST 
0x106: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x107
[0x107:0x10e]
---
Predecessors: [0x4c]
Successors: [0x10f, 0x113]
---
0x107 JUMPDEST
0x108 CALLVALUE
0x109 DUP1
0x10a ISZERO
0x10b PUSH2 0x113
0x10e JUMPI
---
0x107: JUMPDEST 
0x108: V64 = CALLVALUE
0x10a: V65 = ISZERO V64
0x10b: V66 = 0x113
0x10e: JUMPI 0x113 V65
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V64]
Exit stack: [V11, V64]

================================

Block 0x10f
[0x10f:0x112]
---
Predecessors: [0x107]
Successors: []
---
0x10f PUSH1 0x0
0x111 DUP1
0x112 REVERT
---
0x10f: V67 = 0x0
0x112: REVERT 0x0 0x0
---
Entry stack: [V11, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V64]

================================

Block 0x113
[0x113:0x14e]
---
Predecessors: [0x107]
Successors: [0x9ea]
---
0x113 JUMPDEST
0x114 POP
0x115 PUSH2 0x14f
0x118 PUSH1 0x4
0x11a DUP1
0x11b CALLDATASIZE
0x11c SUB
0x11d DUP2
0x11e ADD
0x11f SWAP1
0x120 DUP1
0x121 DUP1
0x122 CALLDATALOAD
0x123 PUSH1 0x0
0x125 NOT
0x126 AND
0x127 SWAP1
0x128 PUSH1 0x20
0x12a ADD
0x12b SWAP1
0x12c SWAP3
0x12d SWAP2
0x12e SWAP1
0x12f DUP1
0x130 CALLDATALOAD
0x131 PUSH12 0xffffffffffffffffffffffff
0x13e NOT
0x13f AND
0x140 SWAP1
0x141 PUSH1 0x20
0x143 ADD
0x144 SWAP1
0x145 SWAP3
0x146 SWAP2
0x147 SWAP1
0x148 POP
0x149 POP
0x14a POP
0x14b PUSH2 0x9ea
0x14e JUMP
---
0x113: JUMPDEST 
0x115: V68 = 0x14f
0x118: V69 = 0x4
0x11b: V70 = CALLDATASIZE
0x11c: V71 = SUB V70 0x4
0x11e: V72 = ADD 0x4 V71
0x122: V73 = CALLDATALOAD 0x4
0x123: V74 = 0x0
0x125: V75 = NOT 0x0
0x126: V76 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V73
0x128: V77 = 0x20
0x12a: V78 = ADD 0x20 0x4
0x130: V79 = CALLDATALOAD 0x24
0x131: V80 = 0xffffffffffffffffffffffff
0x13e: V81 = NOT 0xffffffffffffffffffffffff
0x13f: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V79
0x141: V83 = 0x20
0x143: V84 = ADD 0x20 0x24
0x14b: V85 = 0x9ea
0x14e: JUMP 0x9ea
---
Entry stack: [V11, V64]
Stack pops: 1
Stack additions: [0x14f, V76, V82]
Exit stack: [V11, 0x14f, V76, V82]

================================

Block 0x14f
[0x14f:0x150]
---
Predecessors: [0xd86]
Successors: []
---
0x14f JUMPDEST
0x150 STOP
---
0x14f: JUMPDEST 
0x150: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x151
[0x151:0x1a7]
---
Predecessors: [0x57]
Successors: [0xe4b]
---
0x151 JUMPDEST
0x152 PUSH2 0x1a8
0x155 PUSH1 0x4
0x157 DUP1
0x158 CALLDATASIZE
0x159 SUB
0x15a DUP2
0x15b ADD
0x15c SWAP1
0x15d DUP1
0x15e DUP1
0x15f CALLDATALOAD
0x160 SWAP1
0x161 PUSH1 0x20
0x163 ADD
0x164 SWAP1
0x165 SWAP3
0x166 SWAP2
0x167 SWAP1
0x168 DUP1
0x169 CALLDATALOAD
0x16a PUSH12 0xffffffffffffffffffffffff
0x177 NOT
0x178 AND
0x179 SWAP1
0x17a PUSH1 0x20
0x17c ADD
0x17d SWAP1
0x17e SWAP3
0x17f SWAP2
0x180 SWAP1
0x181 DUP1
0x182 CALLDATALOAD
0x183 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x198 AND
0x199 SWAP1
0x19a PUSH1 0x20
0x19c ADD
0x19d SWAP1
0x19e SWAP3
0x19f SWAP2
0x1a0 SWAP1
0x1a1 POP
0x1a2 POP
0x1a3 POP
0x1a4 PUSH2 0xe4b
0x1a7 JUMP
---
0x151: JUMPDEST 
0x152: V86 = 0x1a8
0x155: V87 = 0x4
0x158: V88 = CALLDATASIZE
0x159: V89 = SUB V88 0x4
0x15b: V90 = ADD 0x4 V89
0x15f: V91 = CALLDATALOAD 0x4
0x161: V92 = 0x20
0x163: V93 = ADD 0x20 0x4
0x169: V94 = CALLDATALOAD 0x24
0x16a: V95 = 0xffffffffffffffffffffffff
0x177: V96 = NOT 0xffffffffffffffffffffffff
0x178: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V94
0x17a: V98 = 0x20
0x17c: V99 = ADD 0x20 0x24
0x182: V100 = CALLDATALOAD 0x44
0x183: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x198: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x19a: V103 = 0x20
0x19c: V104 = ADD 0x20 0x44
0x1a4: V105 = 0xe4b
0x1a7: JUMP 0xe4b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1a8, V91, V97, V102]
Exit stack: [V11, 0x1a8, V91, V97, V102]

================================

Block 0x1a8
[0x1a8:0x1a9]
---
Predecessors: [0x10c1]
Successors: []
---
0x1a8 JUMPDEST
0x1a9 STOP
---
0x1a8: JUMPDEST 
0x1a9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1aa
[0x1aa:0x1b1]
---
Predecessors: [0x62]
Successors: [0x1b2, 0x1b6]
---
0x1aa JUMPDEST
0x1ab CALLVALUE
0x1ac DUP1
0x1ad ISZERO
0x1ae PUSH2 0x1b6
0x1b1 JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V106 = CALLVALUE
0x1ad: V107 = ISZERO V106
0x1ae: V108 = 0x1b6
0x1b1: JUMPI 0x1b6 V107
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V106]
Exit stack: [V11, V106]

================================

Block 0x1b2
[0x1b2:0x1b5]
---
Predecessors: [0x1aa]
Successors: []
---
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 REVERT
---
0x1b2: V109 = 0x0
0x1b5: REVERT 0x0 0x0
---
Entry stack: [V11, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V106]

================================

Block 0x1b6
[0x1b6:0x1e3]
---
Predecessors: [0x1aa]
Successors: [0x120c]
---
0x1b6 JUMPDEST
0x1b7 POP
0x1b8 PUSH2 0x1e4
0x1bb PUSH1 0x4
0x1bd DUP1
0x1be CALLDATASIZE
0x1bf SUB
0x1c0 DUP2
0x1c1 ADD
0x1c2 SWAP1
0x1c3 DUP1
0x1c4 DUP1
0x1c5 CALLDATALOAD
0x1c6 PUSH12 0xffffffffffffffffffffffff
0x1d3 NOT
0x1d4 AND
0x1d5 SWAP1
0x1d6 PUSH1 0x20
0x1d8 ADD
0x1d9 SWAP1
0x1da SWAP3
0x1db SWAP2
0x1dc SWAP1
0x1dd POP
0x1de POP
0x1df POP
0x1e0 PUSH2 0x120c
0x1e3 JUMP
---
0x1b6: JUMPDEST 
0x1b8: V110 = 0x1e4
0x1bb: V111 = 0x4
0x1be: V112 = CALLDATASIZE
0x1bf: V113 = SUB V112 0x4
0x1c1: V114 = ADD 0x4 V113
0x1c5: V115 = CALLDATALOAD 0x4
0x1c6: V116 = 0xffffffffffffffffffffffff
0x1d3: V117 = NOT 0xffffffffffffffffffffffff
0x1d4: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V115
0x1d6: V119 = 0x20
0x1d8: V120 = ADD 0x20 0x4
0x1e0: V121 = 0x120c
0x1e3: JUMP 0x120c
---
Entry stack: [V11, V106]
Stack pops: 1
Stack additions: [0x1e4, V118]
Exit stack: [V11, 0x1e4, V118]

================================

Block 0x1e4
[0x1e4:0x2a4]
---
Predecessors: [0x120c]
Successors: [0x2a5, 0x2a6]
---
0x1e4 JUMPDEST
0x1e5 PUSH1 0x40
0x1e7 MLOAD
0x1e8 DUP1
0x1e9 DUP11
0x1ea DUP2
0x1eb MSTORE
0x1ec PUSH1 0x20
0x1ee ADD
0x1ef DUP10
0x1f0 DUP2
0x1f1 MSTORE
0x1f2 PUSH1 0x20
0x1f4 ADD
0x1f5 DUP9
0x1f6 PUSH12 0xffffffffffffffffffffffff
0x203 NOT
0x204 AND
0x205 PUSH12 0xffffffffffffffffffffffff
0x212 NOT
0x213 AND
0x214 DUP2
0x215 MSTORE
0x216 PUSH1 0x20
0x218 ADD
0x219 DUP8
0x21a PUSH1 0x0
0x21c NOT
0x21d AND
0x21e PUSH1 0x0
0x220 NOT
0x221 AND
0x222 DUP2
0x223 MSTORE
0x224 PUSH1 0x20
0x226 ADD
0x227 DUP7
0x228 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23d AND
0x23e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x253 AND
0x254 DUP2
0x255 MSTORE
0x256 PUSH1 0x20
0x258 ADD
0x259 DUP6
0x25a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26f AND
0x270 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x285 AND
0x286 DUP2
0x287 MSTORE
0x288 PUSH1 0x20
0x28a ADD
0x28b DUP5
0x28c DUP2
0x28d MSTORE
0x28e PUSH1 0x20
0x290 ADD
0x291 DUP4
0x292 ISZERO
0x293 ISZERO
0x294 ISZERO
0x295 ISZERO
0x296 DUP2
0x297 MSTORE
0x298 PUSH1 0x20
0x29a ADD
0x29b DUP3
0x29c PUSH1 0x2
0x29e DUP2
0x29f GT
0x2a0 ISZERO
0x2a1 PUSH2 0x2a6
0x2a4 JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V122 = 0x40
0x1e7: V123 = M[0x40]
0x1eb: M[V123] = V1291
0x1ec: V124 = 0x20
0x1ee: V125 = ADD 0x20 V123
0x1f1: M[V125] = V1294
0x1f2: V126 = 0x20
0x1f4: V127 = ADD 0x20 V125
0x1f6: V128 = 0xffffffffffffffffffffffff
0x203: V129 = NOT 0xffffffffffffffffffffffff
0x204: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V1303
0x205: V131 = 0xffffffffffffffffffffffff
0x212: V132 = NOT 0xffffffffffffffffffffffff
0x213: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V130
0x215: M[V127] = V133
0x216: V134 = 0x20
0x218: V135 = ADD 0x20 V127
0x21a: V136 = 0x0
0x21c: V137 = NOT 0x0
0x21d: V138 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1306
0x21e: V139 = 0x0
0x220: V140 = NOT 0x0
0x221: V141 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V138
0x223: M[V135] = V141
0x224: V142 = 0x20
0x226: V143 = ADD 0x20 V135
0x228: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x23d: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V1315
0x23e: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x253: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x255: M[V143] = V147
0x256: V148 = 0x20
0x258: V149 = ADD 0x20 V143
0x25a: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x26f: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V1324
0x270: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x285: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x287: M[V149] = V153
0x288: V154 = 0x20
0x28a: V155 = ADD 0x20 V149
0x28d: M[V155] = V1327
0x28e: V156 = 0x20
0x290: V157 = ADD 0x20 V155
0x292: V158 = ISZERO V1336
0x293: V159 = ISZERO V158
0x294: V160 = ISZERO V159
0x295: V161 = ISZERO V160
0x297: M[V157] = V161
0x298: V162 = 0x20
0x29a: V163 = ADD 0x20 V157
0x29c: V164 = 0x2
0x29f: V165 = GT V1345 0x2
0x2a0: V166 = ISZERO V165
0x2a1: V167 = 0x2a6
0x2a4: JUMPI 0x2a6 V166
---
Entry stack: [V11, 0x1e4, V1291, V1294, V1303, V1306, V1315, V1324, V1327, V1336, V1345]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, V123, V163, S0]
Exit stack: [V11, 0x1e4, V1291, V1294, V1303, V1306, V1315, V1324, V1327, V1336, V1345, V123, V163, V1345]

================================

Block 0x2a5
[0x2a5:0x2a5]
---
Predecessors: [0x1e4]
Successors: []
---
0x2a5 INVALID
---
0x2a5: INVALID 
---
Entry stack: [V11, 0x1e4, V1291, V1294, V1303, V1306, V1315, V1324, V1327, V1336, V1345, V123, V163, V1345]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e4, V1291, V1294, V1303, V1306, V1315, V1324, V1327, V1336, V1345, V123, V163, V1345]

================================

Block 0x2a6
[0x2a6:0x2c1]
---
Predecessors: [0x1e4]
Successors: []
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0xff
0x2a9 AND
0x2aa DUP2
0x2ab MSTORE
0x2ac PUSH1 0x20
0x2ae ADD
0x2af SWAP10
0x2b0 POP
0x2b1 POP
0x2b2 POP
0x2b3 POP
0x2b4 POP
0x2b5 POP
0x2b6 POP
0x2b7 POP
0x2b8 POP
0x2b9 POP
0x2ba PUSH1 0x40
0x2bc MLOAD
0x2bd DUP1
0x2be SWAP2
0x2bf SUB
0x2c0 SWAP1
0x2c1 RETURN
---
0x2a6: JUMPDEST 
0x2a7: V168 = 0xff
0x2a9: V169 = AND 0xff V1345
0x2ab: M[V163] = V169
0x2ac: V170 = 0x20
0x2ae: V171 = ADD 0x20 V163
0x2ba: V172 = 0x40
0x2bc: V173 = M[0x40]
0x2bf: V174 = SUB V171 V173
0x2c1: RETURN V173 V174
---
Entry stack: [V11, 0x1e4, V1291, V1294, V1303, V1306, V1315, V1324, V1327, V1336, V1345, V123, V163, V1345]
Stack pops: 12
Stack additions: []
Exit stack: [V11, 0x1e4]

================================

Block 0x2c2
[0x2c2:0x2ce]
---
Predecessors: [0x72]
Successors: [0x2cf, 0x2d0]
---
0x2c2 JUMPDEST
0x2c3 DUP2
0x2c4 PUSH1 0x0
0x2c6 PUSH1 0x2
0x2c8 DUP2
0x2c9 GT
0x2ca ISZERO
0x2cb PUSH2 0x2d0
0x2ce JUMPI
---
0x2c2: JUMPDEST 
0x2c4: V175 = 0x0
0x2c6: V176 = 0x2
0x2c9: V177 = GT 0x0 0x2
0x2ca: V178 = ISZERO 0x0
0x2cb: V179 = 0x2d0
0x2ce: JUMPI 0x2d0 0x1
---
Entry stack: [V11, 0xc9, V33, V39, V44]
Stack pops: 2
Stack additions: [S1, S0, S1, 0x0]
Exit stack: [V11, 0xc9, V33, V39, V44, V39, 0x0]

================================

Block 0x2cf
[0x2cf:0x2cf]
---
Predecessors: [0x2c2]
Successors: []
---
0x2cf INVALID
---
0x2cf: INVALID 
---
Entry stack: [V11, 0xc9, V33, V39, V44, V39, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc9, V33, V39, V44, V39, 0x0]

================================

Block 0x2d0
[0x2d0:0x31a]
---
Predecessors: [0x2c2]
Successors: [0x31b, 0x31c]
---
0x2d0 JUMPDEST
0x2d1 PUSH1 0x0
0x2d3 DUP1
0x2d4 DUP4
0x2d5 PUSH12 0xffffffffffffffffffffffff
0x2e2 NOT
0x2e3 AND
0x2e4 PUSH12 0xffffffffffffffffffffffff
0x2f1 NOT
0x2f2 AND
0x2f3 DUP2
0x2f4 MSTORE
0x2f5 PUSH1 0x20
0x2f7 ADD
0x2f8 SWAP1
0x2f9 DUP2
0x2fa MSTORE
0x2fb PUSH1 0x20
0x2fd ADD
0x2fe PUSH1 0x0
0x300 SHA3
0x301 PUSH1 0x7
0x303 ADD
0x304 PUSH1 0x1
0x306 SWAP1
0x307 SLOAD
0x308 SWAP1
0x309 PUSH2 0x100
0x30c EXP
0x30d SWAP1
0x30e DIV
0x30f PUSH1 0xff
0x311 AND
0x312 PUSH1 0x2
0x314 DUP2
0x315 GT
0x316 ISZERO
0x317 PUSH2 0x31c
0x31a JUMPI
---
0x2d0: JUMPDEST 
0x2d1: V180 = 0x0
0x2d5: V181 = 0xffffffffffffffffffffffff
0x2e2: V182 = NOT 0xffffffffffffffffffffffff
0x2e3: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V39
0x2e4: V184 = 0xffffffffffffffffffffffff
0x2f1: V185 = NOT 0xffffffffffffffffffffffff
0x2f2: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V183
0x2f4: M[0x0] = V186
0x2f5: V187 = 0x20
0x2f7: V188 = ADD 0x20 0x0
0x2fa: M[0x20] = 0x0
0x2fb: V189 = 0x20
0x2fd: V190 = ADD 0x20 0x20
0x2fe: V191 = 0x0
0x300: V192 = SHA3 0x0 0x40
0x301: V193 = 0x7
0x303: V194 = ADD 0x7 V192
0x304: V195 = 0x1
0x307: V196 = S[V194]
0x309: V197 = 0x100
0x30c: V198 = EXP 0x100 0x1
0x30e: V199 = DIV V196 0x100
0x30f: V200 = 0xff
0x311: V201 = AND 0xff V199
0x312: V202 = 0x2
0x315: V203 = GT V201 0x2
0x316: V204 = ISZERO V203
0x317: V205 = 0x31c
0x31a: JUMPI 0x31c V204
---
Entry stack: [V11, 0xc9, V33, V39, V44, V39, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V201]
Exit stack: [V11, 0xc9, V33, V39, V44, V39, 0x0, V201]

================================

Block 0x31b
[0x31b:0x31b]
---
Predecessors: [0x2d0]
Successors: []
---
0x31b INVALID
---
0x31b: INVALID 
---
Entry stack: [V11, 0xc9, V33, V39, V44, V39, 0x0, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc9, V33, V39, V44, V39, 0x0, V201]

================================

Block 0x31c
[0x31c:0x323]
---
Predecessors: [0x2d0]
Successors: [0x324, 0x328]
---
0x31c JUMPDEST
0x31d EQ
0x31e ISZERO
0x31f ISZERO
0x320 PUSH2 0x328
0x323 JUMPI
---
0x31c: JUMPDEST 
0x31d: V206 = EQ V201 0x0
0x31e: V207 = ISZERO V206
0x31f: V208 = ISZERO V207
0x320: V209 = 0x328
0x323: JUMPI 0x328 V208
---
Entry stack: [V11, 0xc9, V33, V39, V44, V39, 0x0, V201]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xc9, V33, V39, V44, V39]

================================

Block 0x324
[0x324:0x327]
---
Predecessors: [0x31c]
Successors: []
---
0x324 PUSH1 0x0
0x326 DUP1
0x327 REVERT
---
0x324: V210 = 0x0
0x327: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc9, V33, V39, V44, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc9, V33, V39, V44, V39]

================================

Block 0x328
[0x328:0x56e]
---
Predecessors: [0x31c]
Successors: [0x56f, 0x570]
---
0x328 JUMPDEST
0x329 DUP4
0x32a PUSH1 0x0
0x32c DUP1
0x32d DUP6
0x32e PUSH12 0xffffffffffffffffffffffff
0x33b NOT
0x33c AND
0x33d PUSH12 0xffffffffffffffffffffffff
0x34a NOT
0x34b AND
0x34c DUP2
0x34d MSTORE
0x34e PUSH1 0x20
0x350 ADD
0x351 SWAP1
0x352 DUP2
0x353 MSTORE
0x354 PUSH1 0x20
0x356 ADD
0x357 PUSH1 0x0
0x359 SHA3
0x35a PUSH1 0x1
0x35c ADD
0x35d DUP2
0x35e SWAP1
0x35f SSTORE
0x360 POP
0x361 TIMESTAMP
0x362 PUSH1 0x0
0x364 DUP1
0x365 DUP6
0x366 PUSH12 0xffffffffffffffffffffffff
0x373 NOT
0x374 AND
0x375 PUSH12 0xffffffffffffffffffffffff
0x382 NOT
0x383 AND
0x384 DUP2
0x385 MSTORE
0x386 PUSH1 0x20
0x388 ADD
0x389 SWAP1
0x38a DUP2
0x38b MSTORE
0x38c PUSH1 0x20
0x38e ADD
0x38f PUSH1 0x0
0x391 SHA3
0x392 PUSH1 0x0
0x394 ADD
0x395 DUP2
0x396 SWAP1
0x397 SSTORE
0x398 POP
0x399 CALLER
0x39a PUSH1 0x0
0x39c DUP1
0x39d DUP6
0x39e PUSH12 0xffffffffffffffffffffffff
0x3ab NOT
0x3ac AND
0x3ad PUSH12 0xffffffffffffffffffffffff
0x3ba NOT
0x3bb AND
0x3bc DUP2
0x3bd MSTORE
0x3be PUSH1 0x20
0x3c0 ADD
0x3c1 SWAP1
0x3c2 DUP2
0x3c3 MSTORE
0x3c4 PUSH1 0x20
0x3c6 ADD
0x3c7 PUSH1 0x0
0x3c9 SHA3
0x3ca PUSH1 0x5
0x3cc ADD
0x3cd PUSH1 0x0
0x3cf PUSH2 0x100
0x3d2 EXP
0x3d3 DUP2
0x3d4 SLOAD
0x3d5 DUP2
0x3d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3eb MUL
0x3ec NOT
0x3ed AND
0x3ee SWAP1
0x3ef DUP4
0x3f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x405 AND
0x406 MUL
0x407 OR
0x408 SWAP1
0x409 SSTORE
0x40a POP
0x40b DUP2
0x40c PUSH1 0x0
0x40e DUP1
0x40f DUP6
0x410 PUSH12 0xffffffffffffffffffffffff
0x41d NOT
0x41e AND
0x41f PUSH12 0xffffffffffffffffffffffff
0x42c NOT
0x42d AND
0x42e DUP2
0x42f MSTORE
0x430 PUSH1 0x20
0x432 ADD
0x433 SWAP1
0x434 DUP2
0x435 MSTORE
0x436 PUSH1 0x20
0x438 ADD
0x439 PUSH1 0x0
0x43b SHA3
0x43c PUSH1 0x4
0x43e ADD
0x43f PUSH1 0x0
0x441 PUSH2 0x100
0x444 EXP
0x445 DUP2
0x446 SLOAD
0x447 DUP2
0x448 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45d MUL
0x45e NOT
0x45f AND
0x460 SWAP1
0x461 DUP4
0x462 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x477 AND
0x478 MUL
0x479 OR
0x47a SWAP1
0x47b SSTORE
0x47c POP
0x47d CALLVALUE
0x47e PUSH1 0x0
0x480 DUP1
0x481 DUP6
0x482 PUSH12 0xffffffffffffffffffffffff
0x48f NOT
0x490 AND
0x491 PUSH12 0xffffffffffffffffffffffff
0x49e NOT
0x49f AND
0x4a0 DUP2
0x4a1 MSTORE
0x4a2 PUSH1 0x20
0x4a4 ADD
0x4a5 SWAP1
0x4a6 DUP2
0x4a7 MSTORE
0x4a8 PUSH1 0x20
0x4aa ADD
0x4ab PUSH1 0x0
0x4ad SHA3
0x4ae PUSH1 0x6
0x4b0 ADD
0x4b1 DUP2
0x4b2 SWAP1
0x4b3 SSTORE
0x4b4 POP
0x4b5 DUP3
0x4b6 PUSH1 0x0
0x4b8 DUP1
0x4b9 DUP6
0x4ba PUSH12 0xffffffffffffffffffffffff
0x4c7 NOT
0x4c8 AND
0x4c9 PUSH12 0xffffffffffffffffffffffff
0x4d6 NOT
0x4d7 AND
0x4d8 DUP2
0x4d9 MSTORE
0x4da PUSH1 0x20
0x4dc ADD
0x4dd SWAP1
0x4de DUP2
0x4df MSTORE
0x4e0 PUSH1 0x20
0x4e2 ADD
0x4e3 PUSH1 0x0
0x4e5 SHA3
0x4e6 PUSH1 0x2
0x4e8 ADD
0x4e9 PUSH1 0x0
0x4eb PUSH2 0x100
0x4ee EXP
0x4ef DUP2
0x4f0 SLOAD
0x4f1 DUP2
0x4f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x507 MUL
0x508 NOT
0x509 AND
0x50a SWAP1
0x50b DUP4
0x50c PUSH13 0x1000000000000000000000000
0x51a SWAP1
0x51b DIV
0x51c MUL
0x51d OR
0x51e SWAP1
0x51f SSTORE
0x520 POP
0x521 PUSH1 0x2
0x523 PUSH1 0x0
0x525 DUP1
0x526 DUP6
0x527 PUSH12 0xffffffffffffffffffffffff
0x534 NOT
0x535 AND
0x536 PUSH12 0xffffffffffffffffffffffff
0x543 NOT
0x544 AND
0x545 DUP2
0x546 MSTORE
0x547 PUSH1 0x20
0x549 ADD
0x54a SWAP1
0x54b DUP2
0x54c MSTORE
0x54d PUSH1 0x20
0x54f ADD
0x550 PUSH1 0x0
0x552 SHA3
0x553 PUSH1 0x7
0x555 ADD
0x556 PUSH1 0x1
0x558 PUSH2 0x100
0x55b EXP
0x55c DUP2
0x55d SLOAD
0x55e DUP2
0x55f PUSH1 0xff
0x561 MUL
0x562 NOT
0x563 AND
0x564 SWAP1
0x565 DUP4
0x566 PUSH1 0x2
0x568 DUP2
0x569 GT
0x56a ISZERO
0x56b PUSH2 0x570
0x56e JUMPI
---
0x328: JUMPDEST 
0x32a: V211 = 0x0
0x32e: V212 = 0xffffffffffffffffffffffff
0x33b: V213 = NOT 0xffffffffffffffffffffffff
0x33c: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V39
0x33d: V215 = 0xffffffffffffffffffffffff
0x34a: V216 = NOT 0xffffffffffffffffffffffff
0x34b: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V214
0x34d: M[0x0] = V217
0x34e: V218 = 0x20
0x350: V219 = ADD 0x20 0x0
0x353: M[0x20] = 0x0
0x354: V220 = 0x20
0x356: V221 = ADD 0x20 0x20
0x357: V222 = 0x0
0x359: V223 = SHA3 0x0 0x40
0x35a: V224 = 0x1
0x35c: V225 = ADD 0x1 V223
0x35f: S[V225] = V33
0x361: V226 = TIMESTAMP
0x362: V227 = 0x0
0x366: V228 = 0xffffffffffffffffffffffff
0x373: V229 = NOT 0xffffffffffffffffffffffff
0x374: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V39
0x375: V231 = 0xffffffffffffffffffffffff
0x382: V232 = NOT 0xffffffffffffffffffffffff
0x383: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V230
0x385: M[0x0] = V233
0x386: V234 = 0x20
0x388: V235 = ADD 0x20 0x0
0x38b: M[0x20] = 0x0
0x38c: V236 = 0x20
0x38e: V237 = ADD 0x20 0x20
0x38f: V238 = 0x0
0x391: V239 = SHA3 0x0 0x40
0x392: V240 = 0x0
0x394: V241 = ADD 0x0 V239
0x397: S[V241] = V226
0x399: V242 = CALLER
0x39a: V243 = 0x0
0x39e: V244 = 0xffffffffffffffffffffffff
0x3ab: V245 = NOT 0xffffffffffffffffffffffff
0x3ac: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V39
0x3ad: V247 = 0xffffffffffffffffffffffff
0x3ba: V248 = NOT 0xffffffffffffffffffffffff
0x3bb: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V246
0x3bd: M[0x0] = V249
0x3be: V250 = 0x20
0x3c0: V251 = ADD 0x20 0x0
0x3c3: M[0x20] = 0x0
0x3c4: V252 = 0x20
0x3c6: V253 = ADD 0x20 0x20
0x3c7: V254 = 0x0
0x3c9: V255 = SHA3 0x0 0x40
0x3ca: V256 = 0x5
0x3cc: V257 = ADD 0x5 V255
0x3cd: V258 = 0x0
0x3cf: V259 = 0x100
0x3d2: V260 = EXP 0x100 0x0
0x3d4: V261 = S[V257]
0x3d6: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x3eb: V263 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3ec: V264 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3ed: V265 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V261
0x3f0: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x405: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x406: V268 = MUL V267 0x1
0x407: V269 = OR V268 V265
0x409: S[V257] = V269
0x40c: V270 = 0x0
0x410: V271 = 0xffffffffffffffffffffffff
0x41d: V272 = NOT 0xffffffffffffffffffffffff
0x41e: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V39
0x41f: V274 = 0xffffffffffffffffffffffff
0x42c: V275 = NOT 0xffffffffffffffffffffffff
0x42d: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V273
0x42f: M[0x0] = V276
0x430: V277 = 0x20
0x432: V278 = ADD 0x20 0x0
0x435: M[0x20] = 0x0
0x436: V279 = 0x20
0x438: V280 = ADD 0x20 0x20
0x439: V281 = 0x0
0x43b: V282 = SHA3 0x0 0x40
0x43c: V283 = 0x4
0x43e: V284 = ADD 0x4 V282
0x43f: V285 = 0x0
0x441: V286 = 0x100
0x444: V287 = EXP 0x100 0x0
0x446: V288 = S[V284]
0x448: V289 = 0xffffffffffffffffffffffffffffffffffffffff
0x45d: V290 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x45e: V291 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x45f: V292 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V288
0x462: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x477: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x478: V295 = MUL V294 0x1
0x479: V296 = OR V295 V292
0x47b: S[V284] = V296
0x47d: V297 = CALLVALUE
0x47e: V298 = 0x0
0x482: V299 = 0xffffffffffffffffffffffff
0x48f: V300 = NOT 0xffffffffffffffffffffffff
0x490: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V39
0x491: V302 = 0xffffffffffffffffffffffff
0x49e: V303 = NOT 0xffffffffffffffffffffffff
0x49f: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V301
0x4a1: M[0x0] = V304
0x4a2: V305 = 0x20
0x4a4: V306 = ADD 0x20 0x0
0x4a7: M[0x20] = 0x0
0x4a8: V307 = 0x20
0x4aa: V308 = ADD 0x20 0x20
0x4ab: V309 = 0x0
0x4ad: V310 = SHA3 0x0 0x40
0x4ae: V311 = 0x6
0x4b0: V312 = ADD 0x6 V310
0x4b3: S[V312] = V297
0x4b6: V313 = 0x0
0x4ba: V314 = 0xffffffffffffffffffffffff
0x4c7: V315 = NOT 0xffffffffffffffffffffffff
0x4c8: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V39
0x4c9: V317 = 0xffffffffffffffffffffffff
0x4d6: V318 = NOT 0xffffffffffffffffffffffff
0x4d7: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V316
0x4d9: M[0x0] = V319
0x4da: V320 = 0x20
0x4dc: V321 = ADD 0x20 0x0
0x4df: M[0x20] = 0x0
0x4e0: V322 = 0x20
0x4e2: V323 = ADD 0x20 0x20
0x4e3: V324 = 0x0
0x4e5: V325 = SHA3 0x0 0x40
0x4e6: V326 = 0x2
0x4e8: V327 = ADD 0x2 V325
0x4e9: V328 = 0x0
0x4eb: V329 = 0x100
0x4ee: V330 = EXP 0x100 0x0
0x4f0: V331 = S[V327]
0x4f2: V332 = 0xffffffffffffffffffffffffffffffffffffffff
0x507: V333 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x508: V334 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x509: V335 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V331
0x50c: V336 = 0x1000000000000000000000000
0x51b: V337 = DIV V39 0x1000000000000000000000000
0x51c: V338 = MUL V337 0x1
0x51d: V339 = OR V338 V335
0x51f: S[V327] = V339
0x521: V340 = 0x2
0x523: V341 = 0x0
0x527: V342 = 0xffffffffffffffffffffffff
0x534: V343 = NOT 0xffffffffffffffffffffffff
0x535: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V39
0x536: V345 = 0xffffffffffffffffffffffff
0x543: V346 = NOT 0xffffffffffffffffffffffff
0x544: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V344
0x546: M[0x0] = V347
0x547: V348 = 0x20
0x549: V349 = ADD 0x20 0x0
0x54c: M[0x20] = 0x0
0x54d: V350 = 0x20
0x54f: V351 = ADD 0x20 0x20
0x550: V352 = 0x0
0x552: V353 = SHA3 0x0 0x40
0x553: V354 = 0x7
0x555: V355 = ADD 0x7 V353
0x556: V356 = 0x1
0x558: V357 = 0x100
0x55b: V358 = EXP 0x100 0x1
0x55d: V359 = S[V355]
0x55f: V360 = 0xff
0x561: V361 = MUL 0xff 0x100
0x562: V362 = NOT 0xff00
0x563: V363 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V359
0x566: V364 = 0x2
0x569: V365 = GT 0x2 0x2
0x56a: V366 = ISZERO 0x0
0x56b: V367 = 0x570
0x56e: JUMPI 0x570 0x1
---
Entry stack: [V11, 0xc9, V33, V39, V44, V39]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x2, V355, V363, 0x100, 0x2]
Exit stack: [V11, 0xc9, V33, V39, V44, V39, 0x2, V355, V363, 0x100, 0x2]

================================

Block 0x56f
[0x56f:0x56f]
---
Predecessors: [0x328]
Successors: []
---
0x56f INVALID
---
0x56f: INVALID 
---
Entry stack: [V11, 0xc9, V33, V39, V44, V39, 0x2, V355, V363, 0x100, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc9, V33, V39, V44, V39, 0x2, V355, V363, 0x100, 0x2]

================================

Block 0x570
[0x570:0x63f]
---
Predecessors: [0x328]
Successors: [0xc9]
---
0x570 JUMPDEST
0x571 MUL
0x572 OR
0x573 SWAP1
0x574 SSTORE
0x575 POP
0x576 PUSH32 0xd2ae53b489af667edae5247fc948af6bab36cb0ec684fb14cc114c95905f4f19
0x597 DUP3
0x598 CALLER
0x599 DUP6
0x59a CALLVALUE
0x59b PUSH1 0x40
0x59d MLOAD
0x59e DUP1
0x59f DUP6
0x5a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b5 AND
0x5b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5cb AND
0x5cc DUP2
0x5cd MSTORE
0x5ce PUSH1 0x20
0x5d0 ADD
0x5d1 DUP5
0x5d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e7 AND
0x5e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fd AND
0x5fe DUP2
0x5ff MSTORE
0x600 PUSH1 0x20
0x602 ADD
0x603 DUP4
0x604 PUSH12 0xffffffffffffffffffffffff
0x611 NOT
0x612 AND
0x613 PUSH12 0xffffffffffffffffffffffff
0x620 NOT
0x621 AND
0x622 DUP2
0x623 MSTORE
0x624 PUSH1 0x20
0x626 ADD
0x627 DUP3
0x628 DUP2
0x629 MSTORE
0x62a PUSH1 0x20
0x62c ADD
0x62d SWAP5
0x62e POP
0x62f POP
0x630 POP
0x631 POP
0x632 POP
0x633 PUSH1 0x40
0x635 MLOAD
0x636 DUP1
0x637 SWAP2
0x638 SUB
0x639 SWAP1
0x63a LOG1
0x63b POP
0x63c POP
0x63d POP
0x63e POP
0x63f JUMP
---
0x570: JUMPDEST 
0x571: V368 = MUL 0x2 0x100
0x572: V369 = OR 0x200 V363
0x574: S[V355] = V369
0x576: V370 = 0xd2ae53b489af667edae5247fc948af6bab36cb0ec684fb14cc114c95905f4f19
0x598: V371 = CALLER
0x59a: V372 = CALLVALUE
0x59b: V373 = 0x40
0x59d: V374 = M[0x40]
0x5a0: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b5: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x5b6: V377 = 0xffffffffffffffffffffffffffffffffffffffff
0x5cb: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff V376
0x5cd: M[V374] = V378
0x5ce: V379 = 0x20
0x5d0: V380 = ADD 0x20 V374
0x5d2: V381 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e7: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x5e8: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fd: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x5ff: M[V380] = V384
0x600: V385 = 0x20
0x602: V386 = ADD 0x20 V380
0x604: V387 = 0xffffffffffffffffffffffff
0x611: V388 = NOT 0xffffffffffffffffffffffff
0x612: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V39
0x613: V390 = 0xffffffffffffffffffffffff
0x620: V391 = NOT 0xffffffffffffffffffffffff
0x621: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V389
0x623: M[V386] = V392
0x624: V393 = 0x20
0x626: V394 = ADD 0x20 V386
0x629: M[V394] = V372
0x62a: V395 = 0x20
0x62c: V396 = ADD 0x20 V394
0x633: V397 = 0x40
0x635: V398 = M[0x40]
0x638: V399 = SUB V396 V398
0x63a: LOG V398 V399 0xd2ae53b489af667edae5247fc948af6bab36cb0ec684fb14cc114c95905f4f19
0x63f: JUMP 0xc9
---
Entry stack: [V11, 0xc9, V33, V39, V44, V39, 0x2, V355, V363, 0x100, 0x2]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x640
[0x640:0x6b2]
---
Predecessors: [0xd7]
Successors: [0x6b3, 0x6b7]
---
0x640 JUMPDEST
0x641 DUP1
0x642 PUSH1 0x0
0x644 DUP1
0x645 DUP3
0x646 PUSH12 0xffffffffffffffffffffffff
0x653 NOT
0x654 AND
0x655 PUSH12 0xffffffffffffffffffffffff
0x662 NOT
0x663 AND
0x664 DUP2
0x665 MSTORE
0x666 PUSH1 0x20
0x668 ADD
0x669 SWAP1
0x66a DUP2
0x66b MSTORE
0x66c PUSH1 0x20
0x66e ADD
0x66f PUSH1 0x0
0x671 SHA3
0x672 PUSH1 0x1
0x674 ADD
0x675 SLOAD
0x676 PUSH1 0x0
0x678 DUP1
0x679 DUP4
0x67a PUSH12 0xffffffffffffffffffffffff
0x687 NOT
0x688 AND
0x689 PUSH12 0xffffffffffffffffffffffff
0x696 NOT
0x697 AND
0x698 DUP2
0x699 MSTORE
0x69a PUSH1 0x20
0x69c ADD
0x69d SWAP1
0x69e DUP2
0x69f MSTORE
0x6a0 PUSH1 0x20
0x6a2 ADD
0x6a3 PUSH1 0x0
0x6a5 SHA3
0x6a6 PUSH1 0x0
0x6a8 ADD
0x6a9 SLOAD
0x6aa ADD
0x6ab TIMESTAMP
0x6ac GT
0x6ad ISZERO
0x6ae ISZERO
0x6af PUSH2 0x6b7
0x6b2 JUMPI
---
0x640: JUMPDEST 
0x642: V400 = 0x0
0x646: V401 = 0xffffffffffffffffffffffff
0x653: V402 = NOT 0xffffffffffffffffffffffff
0x654: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V60
0x655: V404 = 0xffffffffffffffffffffffff
0x662: V405 = NOT 0xffffffffffffffffffffffff
0x663: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V403
0x665: M[0x0] = V406
0x666: V407 = 0x20
0x668: V408 = ADD 0x20 0x0
0x66b: M[0x20] = 0x0
0x66c: V409 = 0x20
0x66e: V410 = ADD 0x20 0x20
0x66f: V411 = 0x0
0x671: V412 = SHA3 0x0 0x40
0x672: V413 = 0x1
0x674: V414 = ADD 0x1 V412
0x675: V415 = S[V414]
0x676: V416 = 0x0
0x67a: V417 = 0xffffffffffffffffffffffff
0x687: V418 = NOT 0xffffffffffffffffffffffff
0x688: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V60
0x689: V420 = 0xffffffffffffffffffffffff
0x696: V421 = NOT 0xffffffffffffffffffffffff
0x697: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V419
0x699: M[0x0] = V422
0x69a: V423 = 0x20
0x69c: V424 = ADD 0x20 0x0
0x69f: M[0x20] = 0x0
0x6a0: V425 = 0x20
0x6a2: V426 = ADD 0x20 0x20
0x6a3: V427 = 0x0
0x6a5: V428 = SHA3 0x0 0x40
0x6a6: V429 = 0x0
0x6a8: V430 = ADD 0x0 V428
0x6a9: V431 = S[V430]
0x6aa: V432 = ADD V431 V415
0x6ab: V433 = TIMESTAMP
0x6ac: V434 = GT V433 V432
0x6ad: V435 = ISZERO V434
0x6ae: V436 = ISZERO V435
0x6af: V437 = 0x6b7
0x6b2: JUMPI 0x6b7 V436
---
Entry stack: [V11, 0x105, V60]
Stack pops: 1
Stack additions: [S0, S0]
Exit stack: [V11, 0x105, V60, V60]

================================

Block 0x6b3
[0x6b3:0x6b6]
---
Predecessors: [0x640]
Successors: []
---
0x6b3 PUSH1 0x0
0x6b5 DUP1
0x6b6 REVERT
---
0x6b3: V438 = 0x0
0x6b6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x105, V60, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x105, V60, V60]

================================

Block 0x6b7
[0x6b7:0x705]
---
Predecessors: [0x640]
Successors: [0x706, 0x70a]
---
0x6b7 JUMPDEST
0x6b8 PUSH1 0x0
0x6ba ISZERO
0x6bb ISZERO
0x6bc PUSH1 0x0
0x6be DUP1
0x6bf DUP4
0x6c0 PUSH12 0xffffffffffffffffffffffff
0x6cd NOT
0x6ce AND
0x6cf PUSH12 0xffffffffffffffffffffffff
0x6dc NOT
0x6dd AND
0x6de DUP2
0x6df MSTORE
0x6e0 PUSH1 0x20
0x6e2 ADD
0x6e3 SWAP1
0x6e4 DUP2
0x6e5 MSTORE
0x6e6 PUSH1 0x20
0x6e8 ADD
0x6e9 PUSH1 0x0
0x6eb SHA3
0x6ec PUSH1 0x7
0x6ee ADD
0x6ef PUSH1 0x0
0x6f1 SWAP1
0x6f2 SLOAD
0x6f3 SWAP1
0x6f4 PUSH2 0x100
0x6f7 EXP
0x6f8 SWAP1
0x6f9 DIV
0x6fa PUSH1 0xff
0x6fc AND
0x6fd ISZERO
0x6fe ISZERO
0x6ff EQ
0x700 ISZERO
0x701 ISZERO
0x702 PUSH2 0x70a
0x705 JUMPI
---
0x6b7: JUMPDEST 
0x6b8: V439 = 0x0
0x6ba: V440 = ISZERO 0x0
0x6bb: V441 = ISZERO 0x1
0x6bc: V442 = 0x0
0x6c0: V443 = 0xffffffffffffffffffffffff
0x6cd: V444 = NOT 0xffffffffffffffffffffffff
0x6ce: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V60
0x6cf: V446 = 0xffffffffffffffffffffffff
0x6dc: V447 = NOT 0xffffffffffffffffffffffff
0x6dd: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V445
0x6df: M[0x0] = V448
0x6e0: V449 = 0x20
0x6e2: V450 = ADD 0x20 0x0
0x6e5: M[0x20] = 0x0
0x6e6: V451 = 0x20
0x6e8: V452 = ADD 0x20 0x20
0x6e9: V453 = 0x0
0x6eb: V454 = SHA3 0x0 0x40
0x6ec: V455 = 0x7
0x6ee: V456 = ADD 0x7 V454
0x6ef: V457 = 0x0
0x6f2: V458 = S[V456]
0x6f4: V459 = 0x100
0x6f7: V460 = EXP 0x100 0x0
0x6f9: V461 = DIV V458 0x1
0x6fa: V462 = 0xff
0x6fc: V463 = AND 0xff V461
0x6fd: V464 = ISZERO V463
0x6fe: V465 = ISZERO V464
0x6ff: V466 = EQ V465 0x0
0x700: V467 = ISZERO V466
0x701: V468 = ISZERO V467
0x702: V469 = 0x70a
0x705: JUMPI 0x70a V468
---
Entry stack: [V11, 0x105, V60, V60]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x105, V60, V60]

================================

Block 0x706
[0x706:0x709]
---
Predecessors: [0x6b7]
Successors: []
---
0x706 PUSH1 0x0
0x708 DUP1
0x709 REVERT
---
0x706: V470 = 0x0
0x709: REVERT 0x0 0x0
---
Entry stack: [V11, 0x105, V60, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x105, V60, V60]

================================

Block 0x70a
[0x70a:0x714]
---
Predecessors: [0x6b7]
Successors: [0x715, 0x716]
---
0x70a JUMPDEST
0x70b PUSH1 0x2
0x70d DUP1
0x70e DUP2
0x70f GT
0x710 ISZERO
0x711 PUSH2 0x716
0x714 JUMPI
---
0x70a: JUMPDEST 
0x70b: V471 = 0x2
0x70f: V472 = GT 0x2 0x2
0x710: V473 = ISZERO 0x0
0x711: V474 = 0x716
0x714: JUMPI 0x716 0x1
---
Entry stack: [V11, 0x105, V60, V60]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V11, 0x105, V60, V60, 0x2]

================================

Block 0x715
[0x715:0x715]
---
Predecessors: [0x70a]
Successors: []
---
0x715 INVALID
---
0x715: INVALID 
---
Entry stack: [V11, 0x105, V60, V60, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x105, V60, V60, 0x2]

================================

Block 0x716
[0x716:0x760]
---
Predecessors: [0x70a]
Successors: [0x761, 0x762]
---
0x716 JUMPDEST
0x717 PUSH1 0x0
0x719 DUP1
0x71a DUP5
0x71b PUSH12 0xffffffffffffffffffffffff
0x728 NOT
0x729 AND
0x72a PUSH12 0xffffffffffffffffffffffff
0x737 NOT
0x738 AND
0x739 DUP2
0x73a MSTORE
0x73b PUSH1 0x20
0x73d ADD
0x73e SWAP1
0x73f DUP2
0x740 MSTORE
0x741 PUSH1 0x20
0x743 ADD
0x744 PUSH1 0x0
0x746 SHA3
0x747 PUSH1 0x7
0x749 ADD
0x74a PUSH1 0x1
0x74c SWAP1
0x74d SLOAD
0x74e SWAP1
0x74f PUSH2 0x100
0x752 EXP
0x753 SWAP1
0x754 DIV
0x755 PUSH1 0xff
0x757 AND
0x758 PUSH1 0x2
0x75a DUP2
0x75b GT
0x75c ISZERO
0x75d PUSH2 0x762
0x760 JUMPI
---
0x716: JUMPDEST 
0x717: V475 = 0x0
0x71b: V476 = 0xffffffffffffffffffffffff
0x728: V477 = NOT 0xffffffffffffffffffffffff
0x729: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V60
0x72a: V479 = 0xffffffffffffffffffffffff
0x737: V480 = NOT 0xffffffffffffffffffffffff
0x738: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V478
0x73a: M[0x0] = V481
0x73b: V482 = 0x20
0x73d: V483 = ADD 0x20 0x0
0x740: M[0x20] = 0x0
0x741: V484 = 0x20
0x743: V485 = ADD 0x20 0x20
0x744: V486 = 0x0
0x746: V487 = SHA3 0x0 0x40
0x747: V488 = 0x7
0x749: V489 = ADD 0x7 V487
0x74a: V490 = 0x1
0x74d: V491 = S[V489]
0x74f: V492 = 0x100
0x752: V493 = EXP 0x100 0x1
0x754: V494 = DIV V491 0x100
0x755: V495 = 0xff
0x757: V496 = AND 0xff V494
0x758: V497 = 0x2
0x75b: V498 = GT V496 0x2
0x75c: V499 = ISZERO V498
0x75d: V500 = 0x762
0x760: JUMPI 0x762 V499
---
Entry stack: [V11, 0x105, V60, V60, 0x2]
Stack pops: 3
Stack additions: [S2, S1, S0, V496]
Exit stack: [V11, 0x105, V60, V60, 0x2, V496]

================================

Block 0x761
[0x761:0x761]
---
Predecessors: [0x716]
Successors: []
---
0x761 INVALID
---
0x761: INVALID 
---
Entry stack: [V11, 0x105, V60, V60, 0x2, V496]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x105, V60, V60, 0x2, V496]

================================

Block 0x762
[0x762:0x768]
---
Predecessors: [0x716]
Successors: [0x769, 0x836]
---
0x762 JUMPDEST
0x763 EQ
0x764 ISZERO
0x765 PUSH2 0x836
0x768 JUMPI
---
0x762: JUMPDEST 
0x763: V501 = EQ V496 0x2
0x764: V502 = ISZERO V501
0x765: V503 = 0x836
0x768: JUMPI 0x836 V502
---
Entry stack: [V11, 0x105, V60, V60, 0x2, V496]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x105, V60, V60]

================================

Block 0x769
[0x769:0x82a]
---
Predecessors: [0x762]
Successors: [0x82b, 0x834]
---
0x769 PUSH1 0x0
0x76b DUP1
0x76c DUP4
0x76d PUSH12 0xffffffffffffffffffffffff
0x77a NOT
0x77b AND
0x77c PUSH12 0xffffffffffffffffffffffff
0x789 NOT
0x78a AND
0x78b DUP2
0x78c MSTORE
0x78d PUSH1 0x20
0x78f ADD
0x790 SWAP1
0x791 DUP2
0x792 MSTORE
0x793 PUSH1 0x20
0x795 ADD
0x796 PUSH1 0x0
0x798 SHA3
0x799 PUSH1 0x5
0x79b ADD
0x79c PUSH1 0x0
0x79e SWAP1
0x79f SLOAD
0x7a0 SWAP1
0x7a1 PUSH2 0x100
0x7a4 EXP
0x7a5 SWAP1
0x7a6 DIV
0x7a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7bc AND
0x7bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d2 AND
0x7d3 PUSH2 0x8fc
0x7d6 PUSH1 0x0
0x7d8 DUP1
0x7d9 DUP6
0x7da PUSH12 0xffffffffffffffffffffffff
0x7e7 NOT
0x7e8 AND
0x7e9 PUSH12 0xffffffffffffffffffffffff
0x7f6 NOT
0x7f7 AND
0x7f8 DUP2
0x7f9 MSTORE
0x7fa PUSH1 0x20
0x7fc ADD
0x7fd SWAP1
0x7fe DUP2
0x7ff MSTORE
0x800 PUSH1 0x20
0x802 ADD
0x803 PUSH1 0x0
0x805 SHA3
0x806 PUSH1 0x6
0x808 ADD
0x809 SLOAD
0x80a SWAP1
0x80b DUP2
0x80c ISZERO
0x80d MUL
0x80e SWAP1
0x80f PUSH1 0x40
0x811 MLOAD
0x812 PUSH1 0x0
0x814 PUSH1 0x40
0x816 MLOAD
0x817 DUP1
0x818 DUP4
0x819 SUB
0x81a DUP2
0x81b DUP6
0x81c DUP9
0x81d DUP9
0x81e CALL
0x81f SWAP4
0x820 POP
0x821 POP
0x822 POP
0x823 POP
0x824 ISZERO
0x825 DUP1
0x826 ISZERO
0x827 PUSH2 0x834
0x82a JUMPI
---
0x769: V504 = 0x0
0x76d: V505 = 0xffffffffffffffffffffffff
0x77a: V506 = NOT 0xffffffffffffffffffffffff
0x77b: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V60
0x77c: V508 = 0xffffffffffffffffffffffff
0x789: V509 = NOT 0xffffffffffffffffffffffff
0x78a: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V507
0x78c: M[0x0] = V510
0x78d: V511 = 0x20
0x78f: V512 = ADD 0x20 0x0
0x792: M[0x20] = 0x0
0x793: V513 = 0x20
0x795: V514 = ADD 0x20 0x20
0x796: V515 = 0x0
0x798: V516 = SHA3 0x0 0x40
0x799: V517 = 0x5
0x79b: V518 = ADD 0x5 V516
0x79c: V519 = 0x0
0x79f: V520 = S[V518]
0x7a1: V521 = 0x100
0x7a4: V522 = EXP 0x100 0x0
0x7a6: V523 = DIV V520 0x1
0x7a7: V524 = 0xffffffffffffffffffffffffffffffffffffffff
0x7bc: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V523
0x7bd: V526 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d2: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x7d3: V528 = 0x8fc
0x7d6: V529 = 0x0
0x7da: V530 = 0xffffffffffffffffffffffff
0x7e7: V531 = NOT 0xffffffffffffffffffffffff
0x7e8: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V60
0x7e9: V533 = 0xffffffffffffffffffffffff
0x7f6: V534 = NOT 0xffffffffffffffffffffffff
0x7f7: V535 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V532
0x7f9: M[0x0] = V535
0x7fa: V536 = 0x20
0x7fc: V537 = ADD 0x20 0x0
0x7ff: M[0x20] = 0x0
0x800: V538 = 0x20
0x802: V539 = ADD 0x20 0x20
0x803: V540 = 0x0
0x805: V541 = SHA3 0x0 0x40
0x806: V542 = 0x6
0x808: V543 = ADD 0x6 V541
0x809: V544 = S[V543]
0x80c: V545 = ISZERO V544
0x80d: V546 = MUL V545 0x8fc
0x80f: V547 = 0x40
0x811: V548 = M[0x40]
0x812: V549 = 0x0
0x814: V550 = 0x40
0x816: V551 = M[0x40]
0x819: V552 = SUB V548 V551
0x81e: V553 = CALL V546 V527 V544 V551 V552 V551 0x0
0x824: V554 = ISZERO V553
0x826: V555 = ISZERO V554
0x827: V556 = 0x834
0x82a: JUMPI 0x834 V555
---
Entry stack: [V11, 0x105, V60, V60]
Stack pops: 2
Stack additions: [S1, S0, V554]
Exit stack: [V11, 0x105, V60, V60, V554]

================================

Block 0x82b
[0x82b:0x833]
---
Predecessors: [0x769]
Successors: []
---
0x82b RETURNDATASIZE
0x82c PUSH1 0x0
0x82e DUP1
0x82f RETURNDATACOPY
0x830 RETURNDATASIZE
0x831 PUSH1 0x0
0x833 REVERT
---
0x82b: V557 = RETURNDATASIZE
0x82c: V558 = 0x0
0x82f: RETURNDATACOPY 0x0 0x0 V557
0x830: V559 = RETURNDATASIZE
0x831: V560 = 0x0
0x833: REVERT 0x0 V559
---
Entry stack: [V11, 0x105, V60, V60, V554]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x105, V60, V60, V554]

================================

Block 0x834
[0x834:0x835]
---
Predecessors: [0x769]
Successors: [0x836]
---
0x834 JUMPDEST
0x835 POP
---
0x834: JUMPDEST 
---
Entry stack: [V11, 0x105, V60, V60, V554]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x105, V60, V60]

================================

Block 0x836
[0x836:0x841]
---
Predecessors: [0x762, 0x834]
Successors: [0x842, 0x843]
---
0x836 JUMPDEST
0x837 PUSH1 0x1
0x839 PUSH1 0x2
0x83b DUP2
0x83c GT
0x83d ISZERO
0x83e PUSH2 0x843
0x841 JUMPI
---
0x836: JUMPDEST 
0x837: V561 = 0x1
0x839: V562 = 0x2
0x83c: V563 = GT 0x1 0x2
0x83d: V564 = ISZERO 0x0
0x83e: V565 = 0x843
0x841: JUMPI 0x843 0x1
---
Entry stack: [V11, 0x105, V60, V60]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V11, 0x105, V60, V60, 0x1]

================================

Block 0x842
[0x842:0x842]
---
Predecessors: [0x836]
Successors: []
---
0x842 INVALID
---
0x842: INVALID 
---
Entry stack: [V11, 0x105, V60, V60, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x105, V60, V60, 0x1]

================================

Block 0x843
[0x843:0x88d]
---
Predecessors: [0x836]
Successors: [0x88e, 0x88f]
---
0x843 JUMPDEST
0x844 PUSH1 0x0
0x846 DUP1
0x847 DUP5
0x848 PUSH12 0xffffffffffffffffffffffff
0x855 NOT
0x856 AND
0x857 PUSH12 0xffffffffffffffffffffffff
0x864 NOT
0x865 AND
0x866 DUP2
0x867 MSTORE
0x868 PUSH1 0x20
0x86a ADD
0x86b SWAP1
0x86c DUP2
0x86d MSTORE
0x86e PUSH1 0x20
0x870 ADD
0x871 PUSH1 0x0
0x873 SHA3
0x874 PUSH1 0x7
0x876 ADD
0x877 PUSH1 0x1
0x879 SWAP1
0x87a SLOAD
0x87b SWAP1
0x87c PUSH2 0x100
0x87f EXP
0x880 SWAP1
0x881 DIV
0x882 PUSH1 0xff
0x884 AND
0x885 PUSH1 0x2
0x887 DUP2
0x888 GT
0x889 ISZERO
0x88a PUSH2 0x88f
0x88d JUMPI
---
0x843: JUMPDEST 
0x844: V566 = 0x0
0x848: V567 = 0xffffffffffffffffffffffff
0x855: V568 = NOT 0xffffffffffffffffffffffff
0x856: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V60
0x857: V570 = 0xffffffffffffffffffffffff
0x864: V571 = NOT 0xffffffffffffffffffffffff
0x865: V572 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V569
0x867: M[0x0] = V572
0x868: V573 = 0x20
0x86a: V574 = ADD 0x20 0x0
0x86d: M[0x20] = 0x0
0x86e: V575 = 0x20
0x870: V576 = ADD 0x20 0x20
0x871: V577 = 0x0
0x873: V578 = SHA3 0x0 0x40
0x874: V579 = 0x7
0x876: V580 = ADD 0x7 V578
0x877: V581 = 0x1
0x87a: V582 = S[V580]
0x87c: V583 = 0x100
0x87f: V584 = EXP 0x100 0x1
0x881: V585 = DIV V582 0x100
0x882: V586 = 0xff
0x884: V587 = AND 0xff V585
0x885: V588 = 0x2
0x888: V589 = GT V587 0x2
0x889: V590 = ISZERO V589
0x88a: V591 = 0x88f
0x88d: JUMPI 0x88f V590
---
Entry stack: [V11, 0x105, V60, V60, 0x1]
Stack pops: 3
Stack additions: [S2, S1, S0, V587]
Exit stack: [V11, 0x105, V60, V60, 0x1, V587]

================================

Block 0x88e
[0x88e:0x88e]
---
Predecessors: [0x843]
Successors: []
---
0x88e INVALID
---
0x88e: INVALID 
---
Entry stack: [V11, 0x105, V60, V60, 0x1, V587]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x105, V60, V60, 0x1, V587]

================================

Block 0x88f
[0x88f:0x895]
---
Predecessors: [0x843]
Successors: [0x896, 0x963]
---
0x88f JUMPDEST
0x890 EQ
0x891 ISZERO
0x892 PUSH2 0x963
0x895 JUMPI
---
0x88f: JUMPDEST 
0x890: V592 = EQ V587 0x1
0x891: V593 = ISZERO V592
0x892: V594 = 0x963
0x895: JUMPI 0x963 V593
---
Entry stack: [V11, 0x105, V60, V60, 0x1, V587]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x105, V60, V60]

================================

Block 0x896
[0x896:0x957]
---
Predecessors: [0x88f]
Successors: [0x958, 0x961]
---
0x896 PUSH1 0x0
0x898 DUP1
0x899 DUP4
0x89a PUSH12 0xffffffffffffffffffffffff
0x8a7 NOT
0x8a8 AND
0x8a9 PUSH12 0xffffffffffffffffffffffff
0x8b6 NOT
0x8b7 AND
0x8b8 DUP2
0x8b9 MSTORE
0x8ba PUSH1 0x20
0x8bc ADD
0x8bd SWAP1
0x8be DUP2
0x8bf MSTORE
0x8c0 PUSH1 0x20
0x8c2 ADD
0x8c3 PUSH1 0x0
0x8c5 SHA3
0x8c6 PUSH1 0x4
0x8c8 ADD
0x8c9 PUSH1 0x0
0x8cb SWAP1
0x8cc SLOAD
0x8cd SWAP1
0x8ce PUSH2 0x100
0x8d1 EXP
0x8d2 SWAP1
0x8d3 DIV
0x8d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e9 AND
0x8ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ff AND
0x900 PUSH2 0x8fc
0x903 PUSH1 0x0
0x905 DUP1
0x906 DUP6
0x907 PUSH12 0xffffffffffffffffffffffff
0x914 NOT
0x915 AND
0x916 PUSH12 0xffffffffffffffffffffffff
0x923 NOT
0x924 AND
0x925 DUP2
0x926 MSTORE
0x927 PUSH1 0x20
0x929 ADD
0x92a SWAP1
0x92b DUP2
0x92c MSTORE
0x92d PUSH1 0x20
0x92f ADD
0x930 PUSH1 0x0
0x932 SHA3
0x933 PUSH1 0x6
0x935 ADD
0x936 SLOAD
0x937 SWAP1
0x938 DUP2
0x939 ISZERO
0x93a MUL
0x93b SWAP1
0x93c PUSH1 0x40
0x93e MLOAD
0x93f PUSH1 0x0
0x941 PUSH1 0x40
0x943 MLOAD
0x944 DUP1
0x945 DUP4
0x946 SUB
0x947 DUP2
0x948 DUP6
0x949 DUP9
0x94a DUP9
0x94b CALL
0x94c SWAP4
0x94d POP
0x94e POP
0x94f POP
0x950 POP
0x951 ISZERO
0x952 DUP1
0x953 ISZERO
0x954 PUSH2 0x961
0x957 JUMPI
---
0x896: V595 = 0x0
0x89a: V596 = 0xffffffffffffffffffffffff
0x8a7: V597 = NOT 0xffffffffffffffffffffffff
0x8a8: V598 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V60
0x8a9: V599 = 0xffffffffffffffffffffffff
0x8b6: V600 = NOT 0xffffffffffffffffffffffff
0x8b7: V601 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V598
0x8b9: M[0x0] = V601
0x8ba: V602 = 0x20
0x8bc: V603 = ADD 0x20 0x0
0x8bf: M[0x20] = 0x0
0x8c0: V604 = 0x20
0x8c2: V605 = ADD 0x20 0x20
0x8c3: V606 = 0x0
0x8c5: V607 = SHA3 0x0 0x40
0x8c6: V608 = 0x4
0x8c8: V609 = ADD 0x4 V607
0x8c9: V610 = 0x0
0x8cc: V611 = S[V609]
0x8ce: V612 = 0x100
0x8d1: V613 = EXP 0x100 0x0
0x8d3: V614 = DIV V611 0x1
0x8d4: V615 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e9: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff V614
0x8ea: V617 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ff: V618 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0x900: V619 = 0x8fc
0x903: V620 = 0x0
0x907: V621 = 0xffffffffffffffffffffffff
0x914: V622 = NOT 0xffffffffffffffffffffffff
0x915: V623 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V60
0x916: V624 = 0xffffffffffffffffffffffff
0x923: V625 = NOT 0xffffffffffffffffffffffff
0x924: V626 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V623
0x926: M[0x0] = V626
0x927: V627 = 0x20
0x929: V628 = ADD 0x20 0x0
0x92c: M[0x20] = 0x0
0x92d: V629 = 0x20
0x92f: V630 = ADD 0x20 0x20
0x930: V631 = 0x0
0x932: V632 = SHA3 0x0 0x40
0x933: V633 = 0x6
0x935: V634 = ADD 0x6 V632
0x936: V635 = S[V634]
0x939: V636 = ISZERO V635
0x93a: V637 = MUL V636 0x8fc
0x93c: V638 = 0x40
0x93e: V639 = M[0x40]
0x93f: V640 = 0x0
0x941: V641 = 0x40
0x943: V642 = M[0x40]
0x946: V643 = SUB V639 V642
0x94b: V644 = CALL V637 V618 V635 V642 V643 V642 0x0
0x951: V645 = ISZERO V644
0x953: V646 = ISZERO V645
0x954: V647 = 0x961
0x957: JUMPI 0x961 V646
---
Entry stack: [V11, 0x105, V60, V60]
Stack pops: 2
Stack additions: [S1, S0, V645]
Exit stack: [V11, 0x105, V60, V60, V645]

================================

Block 0x958
[0x958:0x960]
---
Predecessors: [0x896]
Successors: []
---
0x958 RETURNDATASIZE
0x959 PUSH1 0x0
0x95b DUP1
0x95c RETURNDATACOPY
0x95d RETURNDATASIZE
0x95e PUSH1 0x0
0x960 REVERT
---
0x958: V648 = RETURNDATASIZE
0x959: V649 = 0x0
0x95c: RETURNDATACOPY 0x0 0x0 V648
0x95d: V650 = RETURNDATASIZE
0x95e: V651 = 0x0
0x960: REVERT 0x0 V650
---
Entry stack: [V11, 0x105, V60, V60, V645]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x105, V60, V60, V645]

================================

Block 0x961
[0x961:0x962]
---
Predecessors: [0x896]
Successors: [0x963]
---
0x961 JUMPDEST
0x962 POP
---
0x961: JUMPDEST 
---
Entry stack: [V11, 0x105, V60, V60, V645]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x105, V60, V60]

================================

Block 0x963
[0x963:0x9e9]
---
Predecessors: [0x88f, 0x961]
Successors: [0x105]
---
0x963 JUMPDEST
0x964 PUSH1 0x1
0x966 PUSH1 0x0
0x968 DUP1
0x969 DUP5
0x96a PUSH12 0xffffffffffffffffffffffff
0x977 NOT
0x978 AND
0x979 PUSH12 0xffffffffffffffffffffffff
0x986 NOT
0x987 AND
0x988 DUP2
0x989 MSTORE
0x98a PUSH1 0x20
0x98c ADD
0x98d SWAP1
0x98e DUP2
0x98f MSTORE
0x990 PUSH1 0x20
0x992 ADD
0x993 PUSH1 0x0
0x995 SHA3
0x996 PUSH1 0x7
0x998 ADD
0x999 PUSH1 0x0
0x99b PUSH2 0x100
0x99e EXP
0x99f DUP2
0x9a0 SLOAD
0x9a1 DUP2
0x9a2 PUSH1 0xff
0x9a4 MUL
0x9a5 NOT
0x9a6 AND
0x9a7 SWAP1
0x9a8 DUP4
0x9a9 ISZERO
0x9aa ISZERO
0x9ab MUL
0x9ac OR
0x9ad SWAP1
0x9ae SSTORE
0x9af POP
0x9b0 PUSH32 0x3d2a04f53164bedf9a8a46353305d6b2d2261410406df3b41f99ce6489dc003c
0x9d1 TIMESTAMP
0x9d2 PUSH1 0x40
0x9d4 MLOAD
0x9d5 DUP1
0x9d6 DUP3
0x9d7 DUP2
0x9d8 MSTORE
0x9d9 PUSH1 0x20
0x9db ADD
0x9dc SWAP2
0x9dd POP
0x9de POP
0x9df PUSH1 0x40
0x9e1 MLOAD
0x9e2 DUP1
0x9e3 SWAP2
0x9e4 SUB
0x9e5 SWAP1
0x9e6 LOG1
0x9e7 POP
0x9e8 POP
0x9e9 JUMP
---
0x963: JUMPDEST 
0x964: V652 = 0x1
0x966: V653 = 0x0
0x96a: V654 = 0xffffffffffffffffffffffff
0x977: V655 = NOT 0xffffffffffffffffffffffff
0x978: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V60
0x979: V657 = 0xffffffffffffffffffffffff
0x986: V658 = NOT 0xffffffffffffffffffffffff
0x987: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V656
0x989: M[0x0] = V659
0x98a: V660 = 0x20
0x98c: V661 = ADD 0x20 0x0
0x98f: M[0x20] = 0x0
0x990: V662 = 0x20
0x992: V663 = ADD 0x20 0x20
0x993: V664 = 0x0
0x995: V665 = SHA3 0x0 0x40
0x996: V666 = 0x7
0x998: V667 = ADD 0x7 V665
0x999: V668 = 0x0
0x99b: V669 = 0x100
0x99e: V670 = EXP 0x100 0x0
0x9a0: V671 = S[V667]
0x9a2: V672 = 0xff
0x9a4: V673 = MUL 0xff 0x1
0x9a5: V674 = NOT 0xff
0x9a6: V675 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V671
0x9a9: V676 = ISZERO 0x1
0x9aa: V677 = ISZERO 0x0
0x9ab: V678 = MUL 0x1 0x1
0x9ac: V679 = OR 0x1 V675
0x9ae: S[V667] = V679
0x9b0: V680 = 0x3d2a04f53164bedf9a8a46353305d6b2d2261410406df3b41f99ce6489dc003c
0x9d1: V681 = TIMESTAMP
0x9d2: V682 = 0x40
0x9d4: V683 = M[0x40]
0x9d8: M[V683] = V681
0x9d9: V684 = 0x20
0x9db: V685 = ADD 0x20 V683
0x9df: V686 = 0x40
0x9e1: V687 = M[0x40]
0x9e4: V688 = SUB V685 V687
0x9e6: LOG V687 V688 0x3d2a04f53164bedf9a8a46353305d6b2d2261410406df3b41f99ce6489dc003c
0x9e9: JUMP 0x105
---
Entry stack: [V11, 0x105, V60, V60]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x9ea
[0x9ea:0xa29]
---
Predecessors: [0x113]
Successors: [0xa2a, 0xa33]
---
0x9ea JUMPDEST
0x9eb DUP1
0x9ec DUP3
0x9ed DUP2
0x9ee PUSH12 0xffffffffffffffffffffffff
0x9fb NOT
0x9fc AND
0x9fd PUSH1 0x3
0x9ff DUP3
0xa00 PUSH1 0x40
0xa02 MLOAD
0xa03 DUP1
0xa04 DUP3
0xa05 PUSH1 0x0
0xa07 NOT
0xa08 AND
0xa09 PUSH1 0x0
0xa0b NOT
0xa0c AND
0xa0d DUP2
0xa0e MSTORE
0xa0f PUSH1 0x20
0xa11 ADD
0xa12 SWAP2
0xa13 POP
0xa14 POP
0xa15 PUSH1 0x20
0xa17 PUSH1 0x40
0xa19 MLOAD
0xa1a DUP1
0xa1b DUP4
0xa1c SUB
0xa1d DUP2
0xa1e PUSH1 0x0
0xa20 DUP7
0xa21 GAS
0xa22 CALL
0xa23 ISZERO
0xa24 DUP1
0xa25 ISZERO
0xa26 PUSH2 0xa33
0xa29 JUMPI
---
0x9ea: JUMPDEST 
0x9ee: V689 = 0xffffffffffffffffffffffff
0x9fb: V690 = NOT 0xffffffffffffffffffffffff
0x9fc: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V82
0x9fd: V692 = 0x3
0xa00: V693 = 0x40
0xa02: V694 = M[0x40]
0xa05: V695 = 0x0
0xa07: V696 = NOT 0x0
0xa08: V697 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V76
0xa09: V698 = 0x0
0xa0b: V699 = NOT 0x0
0xa0c: V700 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V697
0xa0e: M[V694] = V700
0xa0f: V701 = 0x20
0xa11: V702 = ADD 0x20 V694
0xa15: V703 = 0x20
0xa17: V704 = 0x40
0xa19: V705 = M[0x40]
0xa1c: V706 = SUB V702 V705
0xa1e: V707 = 0x0
0xa21: V708 = GAS
0xa22: V709 = CALL V708 0x3 0x0 V705 V706 V705 0x20
0xa23: V710 = ISZERO V709
0xa25: V711 = ISZERO V710
0xa26: V712 = 0xa33
0xa29: JUMPI 0xa33 V711
---
Entry stack: [V11, 0x14f, V76, V82]
Stack pops: 2
Stack additions: [S1, S0, S0, S1, V691, 0x3, V702, V710]
Exit stack: [V11, 0x14f, V76, V82, V82, V76, V691, 0x3, V702, V710]

================================

Block 0xa2a
[0xa2a:0xa32]
---
Predecessors: [0x9ea]
Successors: []
---
0xa2a RETURNDATASIZE
0xa2b PUSH1 0x0
0xa2d DUP1
0xa2e RETURNDATACOPY
0xa2f RETURNDATASIZE
0xa30 PUSH1 0x0
0xa32 REVERT
---
0xa2a: V713 = RETURNDATASIZE
0xa2b: V714 = 0x0
0xa2e: RETURNDATACOPY 0x0 0x0 V713
0xa2f: V715 = RETURNDATASIZE
0xa30: V716 = 0x0
0xa32: REVERT 0x0 V715
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76, V691, 0x3, V702, V710]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14f, V76, V82, V82, V76, V691, 0x3, V702, V710]

================================

Block 0xa33
[0xa33:0xa5f]
---
Predecessors: [0x9ea]
Successors: [0xa60, 0xa64]
---
0xa33 JUMPDEST
0xa34 POP
0xa35 POP
0xa36 POP
0xa37 PUSH1 0x40
0xa39 MLOAD
0xa3a MLOAD
0xa3b PUSH13 0x1000000000000000000000000
0xa49 MUL
0xa4a PUSH12 0xffffffffffffffffffffffff
0xa57 NOT
0xa58 AND
0xa59 EQ
0xa5a ISZERO
0xa5b ISZERO
0xa5c PUSH2 0xa64
0xa5f JUMPI
---
0xa33: JUMPDEST 
0xa37: V717 = 0x40
0xa39: V718 = M[0x40]
0xa3a: V719 = M[V718]
0xa3b: V720 = 0x1000000000000000000000000
0xa49: V721 = MUL 0x1000000000000000000000000 V719
0xa4a: V722 = 0xffffffffffffffffffffffff
0xa57: V723 = NOT 0xffffffffffffffffffffffff
0xa58: V724 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V721
0xa59: V725 = EQ V724 V691
0xa5a: V726 = ISZERO V725
0xa5b: V727 = ISZERO V726
0xa5c: V728 = 0xa64
0xa5f: JUMPI 0xa64 V727
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76, V691, 0x3, V702, V710]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x14f, V76, V82, V82, V76]

================================

Block 0xa60
[0xa60:0xa63]
---
Predecessors: [0xa33]
Successors: []
---
0xa60 PUSH1 0x0
0xa62 DUP1
0xa63 REVERT
---
0xa60: V729 = 0x0
0xa63: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14f, V76, V82, V82, V76]

================================

Block 0xa64
[0xa64:0xad5]
---
Predecessors: [0xa33]
Successors: [0xad6, 0xada]
---
0xa64 JUMPDEST
0xa65 PUSH1 0x0
0xa67 DUP1
0xa68 DUP4
0xa69 PUSH12 0xffffffffffffffffffffffff
0xa76 NOT
0xa77 AND
0xa78 PUSH12 0xffffffffffffffffffffffff
0xa85 NOT
0xa86 AND
0xa87 DUP2
0xa88 MSTORE
0xa89 PUSH1 0x20
0xa8b ADD
0xa8c SWAP1
0xa8d DUP2
0xa8e MSTORE
0xa8f PUSH1 0x20
0xa91 ADD
0xa92 PUSH1 0x0
0xa94 SHA3
0xa95 PUSH1 0x1
0xa97 ADD
0xa98 SLOAD
0xa99 PUSH1 0x0
0xa9b DUP1
0xa9c DUP5
0xa9d PUSH12 0xffffffffffffffffffffffff
0xaaa NOT
0xaab AND
0xaac PUSH12 0xffffffffffffffffffffffff
0xab9 NOT
0xaba AND
0xabb DUP2
0xabc MSTORE
0xabd PUSH1 0x20
0xabf ADD
0xac0 SWAP1
0xac1 DUP2
0xac2 MSTORE
0xac3 PUSH1 0x20
0xac5 ADD
0xac6 PUSH1 0x0
0xac8 SHA3
0xac9 PUSH1 0x0
0xacb ADD
0xacc SLOAD
0xacd ADD
0xace TIMESTAMP
0xacf LT
0xad0 ISZERO
0xad1 ISZERO
0xad2 PUSH2 0xada
0xad5 JUMPI
---
0xa64: JUMPDEST 
0xa65: V730 = 0x0
0xa69: V731 = 0xffffffffffffffffffffffff
0xa76: V732 = NOT 0xffffffffffffffffffffffff
0xa77: V733 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V82
0xa78: V734 = 0xffffffffffffffffffffffff
0xa85: V735 = NOT 0xffffffffffffffffffffffff
0xa86: V736 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V733
0xa88: M[0x0] = V736
0xa89: V737 = 0x20
0xa8b: V738 = ADD 0x20 0x0
0xa8e: M[0x20] = 0x0
0xa8f: V739 = 0x20
0xa91: V740 = ADD 0x20 0x20
0xa92: V741 = 0x0
0xa94: V742 = SHA3 0x0 0x40
0xa95: V743 = 0x1
0xa97: V744 = ADD 0x1 V742
0xa98: V745 = S[V744]
0xa99: V746 = 0x0
0xa9d: V747 = 0xffffffffffffffffffffffff
0xaaa: V748 = NOT 0xffffffffffffffffffffffff
0xaab: V749 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V82
0xaac: V750 = 0xffffffffffffffffffffffff
0xab9: V751 = NOT 0xffffffffffffffffffffffff
0xaba: V752 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V749
0xabc: M[0x0] = V752
0xabd: V753 = 0x20
0xabf: V754 = ADD 0x20 0x0
0xac2: M[0x20] = 0x0
0xac3: V755 = 0x20
0xac5: V756 = ADD 0x20 0x20
0xac6: V757 = 0x0
0xac8: V758 = SHA3 0x0 0x40
0xac9: V759 = 0x0
0xacb: V760 = ADD 0x0 V758
0xacc: V761 = S[V760]
0xacd: V762 = ADD V761 V745
0xace: V763 = TIMESTAMP
0xacf: V764 = LT V763 V762
0xad0: V765 = ISZERO V764
0xad1: V766 = ISZERO V765
0xad2: V767 = 0xada
0xad5: JUMPI 0xada V766
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x14f, V76, V82, V82, V76]

================================

Block 0xad6
[0xad6:0xad9]
---
Predecessors: [0xa64]
Successors: []
---
0xad6 PUSH1 0x0
0xad8 DUP1
0xad9 REVERT
---
0xad6: V768 = 0x0
0xad9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14f, V76, V82, V82, V76]

================================

Block 0xada
[0xada:0xb28]
---
Predecessors: [0xa64]
Successors: [0xb29, 0xb2d]
---
0xada JUMPDEST
0xadb PUSH1 0x0
0xadd ISZERO
0xade ISZERO
0xadf PUSH1 0x0
0xae1 DUP1
0xae2 DUP5
0xae3 PUSH12 0xffffffffffffffffffffffff
0xaf0 NOT
0xaf1 AND
0xaf2 PUSH12 0xffffffffffffffffffffffff
0xaff NOT
0xb00 AND
0xb01 DUP2
0xb02 MSTORE
0xb03 PUSH1 0x20
0xb05 ADD
0xb06 SWAP1
0xb07 DUP2
0xb08 MSTORE
0xb09 PUSH1 0x20
0xb0b ADD
0xb0c PUSH1 0x0
0xb0e SHA3
0xb0f PUSH1 0x7
0xb11 ADD
0xb12 PUSH1 0x0
0xb14 SWAP1
0xb15 SLOAD
0xb16 SWAP1
0xb17 PUSH2 0x100
0xb1a EXP
0xb1b SWAP1
0xb1c DIV
0xb1d PUSH1 0xff
0xb1f AND
0xb20 ISZERO
0xb21 ISZERO
0xb22 EQ
0xb23 ISZERO
0xb24 ISZERO
0xb25 PUSH2 0xb2d
0xb28 JUMPI
---
0xada: JUMPDEST 
0xadb: V769 = 0x0
0xadd: V770 = ISZERO 0x0
0xade: V771 = ISZERO 0x1
0xadf: V772 = 0x0
0xae3: V773 = 0xffffffffffffffffffffffff
0xaf0: V774 = NOT 0xffffffffffffffffffffffff
0xaf1: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V82
0xaf2: V776 = 0xffffffffffffffffffffffff
0xaff: V777 = NOT 0xffffffffffffffffffffffff
0xb00: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V775
0xb02: M[0x0] = V778
0xb03: V779 = 0x20
0xb05: V780 = ADD 0x20 0x0
0xb08: M[0x20] = 0x0
0xb09: V781 = 0x20
0xb0b: V782 = ADD 0x20 0x20
0xb0c: V783 = 0x0
0xb0e: V784 = SHA3 0x0 0x40
0xb0f: V785 = 0x7
0xb11: V786 = ADD 0x7 V784
0xb12: V787 = 0x0
0xb15: V788 = S[V786]
0xb17: V789 = 0x100
0xb1a: V790 = EXP 0x100 0x0
0xb1c: V791 = DIV V788 0x1
0xb1d: V792 = 0xff
0xb1f: V793 = AND 0xff V791
0xb20: V794 = ISZERO V793
0xb21: V795 = ISZERO V794
0xb22: V796 = EQ V795 0x0
0xb23: V797 = ISZERO V796
0xb24: V798 = ISZERO V797
0xb25: V799 = 0xb2d
0xb28: JUMPI 0xb2d V798
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x14f, V76, V82, V82, V76]

================================

Block 0xb29
[0xb29:0xb2c]
---
Predecessors: [0xada]
Successors: []
---
0xb29 PUSH1 0x0
0xb2b DUP1
0xb2c REVERT
---
0xb29: V800 = 0x0
0xb2c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14f, V76, V82, V82, V76]

================================

Block 0xb2d
[0xb2d:0xb37]
---
Predecessors: [0xada]
Successors: [0xb38, 0xb39]
---
0xb2d JUMPDEST
0xb2e PUSH1 0x2
0xb30 DUP1
0xb31 DUP2
0xb32 GT
0xb33 ISZERO
0xb34 PUSH2 0xb39
0xb37 JUMPI
---
0xb2d: JUMPDEST 
0xb2e: V801 = 0x2
0xb32: V802 = GT 0x2 0x2
0xb33: V803 = ISZERO 0x0
0xb34: V804 = 0xb39
0xb37: JUMPI 0xb39 0x1
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V11, 0x14f, V76, V82, V82, V76, 0x2]

================================

Block 0xb38
[0xb38:0xb38]
---
Predecessors: [0xb2d]
Successors: []
---
0xb38 INVALID
---
0xb38: INVALID 
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14f, V76, V82, V82, V76, 0x2]

================================

Block 0xb39
[0xb39:0xb83]
---
Predecessors: [0xb2d]
Successors: [0xb84, 0xb85]
---
0xb39 JUMPDEST
0xb3a PUSH1 0x0
0xb3c DUP1
0xb3d DUP6
0xb3e PUSH12 0xffffffffffffffffffffffff
0xb4b NOT
0xb4c AND
0xb4d PUSH12 0xffffffffffffffffffffffff
0xb5a NOT
0xb5b AND
0xb5c DUP2
0xb5d MSTORE
0xb5e PUSH1 0x20
0xb60 ADD
0xb61 SWAP1
0xb62 DUP2
0xb63 MSTORE
0xb64 PUSH1 0x20
0xb66 ADD
0xb67 PUSH1 0x0
0xb69 SHA3
0xb6a PUSH1 0x7
0xb6c ADD
0xb6d PUSH1 0x1
0xb6f SWAP1
0xb70 SLOAD
0xb71 SWAP1
0xb72 PUSH2 0x100
0xb75 EXP
0xb76 SWAP1
0xb77 DIV
0xb78 PUSH1 0xff
0xb7a AND
0xb7b PUSH1 0x2
0xb7d DUP2
0xb7e GT
0xb7f ISZERO
0xb80 PUSH2 0xb85
0xb83 JUMPI
---
0xb39: JUMPDEST 
0xb3a: V805 = 0x0
0xb3e: V806 = 0xffffffffffffffffffffffff
0xb4b: V807 = NOT 0xffffffffffffffffffffffff
0xb4c: V808 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V82
0xb4d: V809 = 0xffffffffffffffffffffffff
0xb5a: V810 = NOT 0xffffffffffffffffffffffff
0xb5b: V811 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V808
0xb5d: M[0x0] = V811
0xb5e: V812 = 0x20
0xb60: V813 = ADD 0x20 0x0
0xb63: M[0x20] = 0x0
0xb64: V814 = 0x20
0xb66: V815 = ADD 0x20 0x20
0xb67: V816 = 0x0
0xb69: V817 = SHA3 0x0 0x40
0xb6a: V818 = 0x7
0xb6c: V819 = ADD 0x7 V817
0xb6d: V820 = 0x1
0xb70: V821 = S[V819]
0xb72: V822 = 0x100
0xb75: V823 = EXP 0x100 0x1
0xb77: V824 = DIV V821 0x100
0xb78: V825 = 0xff
0xb7a: V826 = AND 0xff V824
0xb7b: V827 = 0x2
0xb7e: V828 = GT V826 0x2
0xb7f: V829 = ISZERO V828
0xb80: V830 = 0xb85
0xb83: JUMPI 0xb85 V829
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76, 0x2]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V826]
Exit stack: [V11, 0x14f, V76, V82, V82, V76, 0x2, V826]

================================

Block 0xb84
[0xb84:0xb84]
---
Predecessors: [0xb39]
Successors: []
---
0xb84 INVALID
---
0xb84: INVALID 
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76, 0x2, V826]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14f, V76, V82, V82, V76, 0x2, V826]

================================

Block 0xb85
[0xb85:0xb8b]
---
Predecessors: [0xb39]
Successors: [0xb8c, 0xc59]
---
0xb85 JUMPDEST
0xb86 EQ
0xb87 ISZERO
0xb88 PUSH2 0xc59
0xb8b JUMPI
---
0xb85: JUMPDEST 
0xb86: V831 = EQ V826 0x2
0xb87: V832 = ISZERO V831
0xb88: V833 = 0xc59
0xb8b: JUMPI 0xc59 V832
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76, 0x2, V826]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x14f, V76, V82, V82, V76]

================================

Block 0xb8c
[0xb8c:0xc4d]
---
Predecessors: [0xb85]
Successors: [0xc4e, 0xc57]
---
0xb8c PUSH1 0x0
0xb8e DUP1
0xb8f DUP5
0xb90 PUSH12 0xffffffffffffffffffffffff
0xb9d NOT
0xb9e AND
0xb9f PUSH12 0xffffffffffffffffffffffff
0xbac NOT
0xbad AND
0xbae DUP2
0xbaf MSTORE
0xbb0 PUSH1 0x20
0xbb2 ADD
0xbb3 SWAP1
0xbb4 DUP2
0xbb5 MSTORE
0xbb6 PUSH1 0x20
0xbb8 ADD
0xbb9 PUSH1 0x0
0xbbb SHA3
0xbbc PUSH1 0x4
0xbbe ADD
0xbbf PUSH1 0x0
0xbc1 SWAP1
0xbc2 SLOAD
0xbc3 SWAP1
0xbc4 PUSH2 0x100
0xbc7 EXP
0xbc8 SWAP1
0xbc9 DIV
0xbca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbdf AND
0xbe0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf5 AND
0xbf6 PUSH2 0x8fc
0xbf9 PUSH1 0x0
0xbfb DUP1
0xbfc DUP7
0xbfd PUSH12 0xffffffffffffffffffffffff
0xc0a NOT
0xc0b AND
0xc0c PUSH12 0xffffffffffffffffffffffff
0xc19 NOT
0xc1a AND
0xc1b DUP2
0xc1c MSTORE
0xc1d PUSH1 0x20
0xc1f ADD
0xc20 SWAP1
0xc21 DUP2
0xc22 MSTORE
0xc23 PUSH1 0x20
0xc25 ADD
0xc26 PUSH1 0x0
0xc28 SHA3
0xc29 PUSH1 0x6
0xc2b ADD
0xc2c SLOAD
0xc2d SWAP1
0xc2e DUP2
0xc2f ISZERO
0xc30 MUL
0xc31 SWAP1
0xc32 PUSH1 0x40
0xc34 MLOAD
0xc35 PUSH1 0x0
0xc37 PUSH1 0x40
0xc39 MLOAD
0xc3a DUP1
0xc3b DUP4
0xc3c SUB
0xc3d DUP2
0xc3e DUP6
0xc3f DUP9
0xc40 DUP9
0xc41 CALL
0xc42 SWAP4
0xc43 POP
0xc44 POP
0xc45 POP
0xc46 POP
0xc47 ISZERO
0xc48 DUP1
0xc49 ISZERO
0xc4a PUSH2 0xc57
0xc4d JUMPI
---
0xb8c: V834 = 0x0
0xb90: V835 = 0xffffffffffffffffffffffff
0xb9d: V836 = NOT 0xffffffffffffffffffffffff
0xb9e: V837 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V82
0xb9f: V838 = 0xffffffffffffffffffffffff
0xbac: V839 = NOT 0xffffffffffffffffffffffff
0xbad: V840 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V837
0xbaf: M[0x0] = V840
0xbb0: V841 = 0x20
0xbb2: V842 = ADD 0x20 0x0
0xbb5: M[0x20] = 0x0
0xbb6: V843 = 0x20
0xbb8: V844 = ADD 0x20 0x20
0xbb9: V845 = 0x0
0xbbb: V846 = SHA3 0x0 0x40
0xbbc: V847 = 0x4
0xbbe: V848 = ADD 0x4 V846
0xbbf: V849 = 0x0
0xbc2: V850 = S[V848]
0xbc4: V851 = 0x100
0xbc7: V852 = EXP 0x100 0x0
0xbc9: V853 = DIV V850 0x1
0xbca: V854 = 0xffffffffffffffffffffffffffffffffffffffff
0xbdf: V855 = AND 0xffffffffffffffffffffffffffffffffffffffff V853
0xbe0: V856 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf5: V857 = AND 0xffffffffffffffffffffffffffffffffffffffff V855
0xbf6: V858 = 0x8fc
0xbf9: V859 = 0x0
0xbfd: V860 = 0xffffffffffffffffffffffff
0xc0a: V861 = NOT 0xffffffffffffffffffffffff
0xc0b: V862 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V82
0xc0c: V863 = 0xffffffffffffffffffffffff
0xc19: V864 = NOT 0xffffffffffffffffffffffff
0xc1a: V865 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V862
0xc1c: M[0x0] = V865
0xc1d: V866 = 0x20
0xc1f: V867 = ADD 0x20 0x0
0xc22: M[0x20] = 0x0
0xc23: V868 = 0x20
0xc25: V869 = ADD 0x20 0x20
0xc26: V870 = 0x0
0xc28: V871 = SHA3 0x0 0x40
0xc29: V872 = 0x6
0xc2b: V873 = ADD 0x6 V871
0xc2c: V874 = S[V873]
0xc2f: V875 = ISZERO V874
0xc30: V876 = MUL V875 0x8fc
0xc32: V877 = 0x40
0xc34: V878 = M[0x40]
0xc35: V879 = 0x0
0xc37: V880 = 0x40
0xc39: V881 = M[0x40]
0xc3c: V882 = SUB V878 V881
0xc41: V883 = CALL V876 V857 V874 V881 V882 V881 0x0
0xc47: V884 = ISZERO V883
0xc49: V885 = ISZERO V884
0xc4a: V886 = 0xc57
0xc4d: JUMPI 0xc57 V885
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76]
Stack pops: 3
Stack additions: [S2, S1, S0, V884]
Exit stack: [V11, 0x14f, V76, V82, V82, V76, V884]

================================

Block 0xc4e
[0xc4e:0xc56]
---
Predecessors: [0xb8c]
Successors: []
---
0xc4e RETURNDATASIZE
0xc4f PUSH1 0x0
0xc51 DUP1
0xc52 RETURNDATACOPY
0xc53 RETURNDATASIZE
0xc54 PUSH1 0x0
0xc56 REVERT
---
0xc4e: V887 = RETURNDATASIZE
0xc4f: V888 = 0x0
0xc52: RETURNDATACOPY 0x0 0x0 V887
0xc53: V889 = RETURNDATASIZE
0xc54: V890 = 0x0
0xc56: REVERT 0x0 V889
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76, V884]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14f, V76, V82, V82, V76, V884]

================================

Block 0xc57
[0xc57:0xc58]
---
Predecessors: [0xb8c]
Successors: [0xc59]
---
0xc57 JUMPDEST
0xc58 POP
---
0xc57: JUMPDEST 
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76, V884]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14f, V76, V82, V82, V76]

================================

Block 0xc59
[0xc59:0xc64]
---
Predecessors: [0xb85, 0xc57]
Successors: [0xc65, 0xc66]
---
0xc59 JUMPDEST
0xc5a PUSH1 0x1
0xc5c PUSH1 0x2
0xc5e DUP2
0xc5f GT
0xc60 ISZERO
0xc61 PUSH2 0xc66
0xc64 JUMPI
---
0xc59: JUMPDEST 
0xc5a: V891 = 0x1
0xc5c: V892 = 0x2
0xc5f: V893 = GT 0x1 0x2
0xc60: V894 = ISZERO 0x0
0xc61: V895 = 0xc66
0xc64: JUMPI 0xc66 0x1
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V11, 0x14f, V76, V82, V82, V76, 0x1]

================================

Block 0xc65
[0xc65:0xc65]
---
Predecessors: [0xc59]
Successors: []
---
0xc65 INVALID
---
0xc65: INVALID 
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14f, V76, V82, V82, V76, 0x1]

================================

Block 0xc66
[0xc66:0xcb0]
---
Predecessors: [0xc59]
Successors: [0xcb1, 0xcb2]
---
0xc66 JUMPDEST
0xc67 PUSH1 0x0
0xc69 DUP1
0xc6a DUP6
0xc6b PUSH12 0xffffffffffffffffffffffff
0xc78 NOT
0xc79 AND
0xc7a PUSH12 0xffffffffffffffffffffffff
0xc87 NOT
0xc88 AND
0xc89 DUP2
0xc8a MSTORE
0xc8b PUSH1 0x20
0xc8d ADD
0xc8e SWAP1
0xc8f DUP2
0xc90 MSTORE
0xc91 PUSH1 0x20
0xc93 ADD
0xc94 PUSH1 0x0
0xc96 SHA3
0xc97 PUSH1 0x7
0xc99 ADD
0xc9a PUSH1 0x1
0xc9c SWAP1
0xc9d SLOAD
0xc9e SWAP1
0xc9f PUSH2 0x100
0xca2 EXP
0xca3 SWAP1
0xca4 DIV
0xca5 PUSH1 0xff
0xca7 AND
0xca8 PUSH1 0x2
0xcaa DUP2
0xcab GT
0xcac ISZERO
0xcad PUSH2 0xcb2
0xcb0 JUMPI
---
0xc66: JUMPDEST 
0xc67: V896 = 0x0
0xc6b: V897 = 0xffffffffffffffffffffffff
0xc78: V898 = NOT 0xffffffffffffffffffffffff
0xc79: V899 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V82
0xc7a: V900 = 0xffffffffffffffffffffffff
0xc87: V901 = NOT 0xffffffffffffffffffffffff
0xc88: V902 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V899
0xc8a: M[0x0] = V902
0xc8b: V903 = 0x20
0xc8d: V904 = ADD 0x20 0x0
0xc90: M[0x20] = 0x0
0xc91: V905 = 0x20
0xc93: V906 = ADD 0x20 0x20
0xc94: V907 = 0x0
0xc96: V908 = SHA3 0x0 0x40
0xc97: V909 = 0x7
0xc99: V910 = ADD 0x7 V908
0xc9a: V911 = 0x1
0xc9d: V912 = S[V910]
0xc9f: V913 = 0x100
0xca2: V914 = EXP 0x100 0x1
0xca4: V915 = DIV V912 0x100
0xca5: V916 = 0xff
0xca7: V917 = AND 0xff V915
0xca8: V918 = 0x2
0xcab: V919 = GT V917 0x2
0xcac: V920 = ISZERO V919
0xcad: V921 = 0xcb2
0xcb0: JUMPI 0xcb2 V920
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76, 0x1]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V917]
Exit stack: [V11, 0x14f, V76, V82, V82, V76, 0x1, V917]

================================

Block 0xcb1
[0xcb1:0xcb1]
---
Predecessors: [0xc66]
Successors: []
---
0xcb1 INVALID
---
0xcb1: INVALID 
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76, 0x1, V917]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14f, V76, V82, V82, V76, 0x1, V917]

================================

Block 0xcb2
[0xcb2:0xcb8]
---
Predecessors: [0xc66]
Successors: [0xcb9, 0xd86]
---
0xcb2 JUMPDEST
0xcb3 EQ
0xcb4 ISZERO
0xcb5 PUSH2 0xd86
0xcb8 JUMPI
---
0xcb2: JUMPDEST 
0xcb3: V922 = EQ V917 0x1
0xcb4: V923 = ISZERO V922
0xcb5: V924 = 0xd86
0xcb8: JUMPI 0xd86 V923
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76, 0x1, V917]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x14f, V76, V82, V82, V76]

================================

Block 0xcb9
[0xcb9:0xd7a]
---
Predecessors: [0xcb2]
Successors: [0xd7b, 0xd84]
---
0xcb9 PUSH1 0x0
0xcbb DUP1
0xcbc DUP5
0xcbd PUSH12 0xffffffffffffffffffffffff
0xcca NOT
0xccb AND
0xccc PUSH12 0xffffffffffffffffffffffff
0xcd9 NOT
0xcda AND
0xcdb DUP2
0xcdc MSTORE
0xcdd PUSH1 0x20
0xcdf ADD
0xce0 SWAP1
0xce1 DUP2
0xce2 MSTORE
0xce3 PUSH1 0x20
0xce5 ADD
0xce6 PUSH1 0x0
0xce8 SHA3
0xce9 PUSH1 0x5
0xceb ADD
0xcec PUSH1 0x0
0xcee SWAP1
0xcef SLOAD
0xcf0 SWAP1
0xcf1 PUSH2 0x100
0xcf4 EXP
0xcf5 SWAP1
0xcf6 DIV
0xcf7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd0c AND
0xd0d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd22 AND
0xd23 PUSH2 0x8fc
0xd26 PUSH1 0x0
0xd28 DUP1
0xd29 DUP7
0xd2a PUSH12 0xffffffffffffffffffffffff
0xd37 NOT
0xd38 AND
0xd39 PUSH12 0xffffffffffffffffffffffff
0xd46 NOT
0xd47 AND
0xd48 DUP2
0xd49 MSTORE
0xd4a PUSH1 0x20
0xd4c ADD
0xd4d SWAP1
0xd4e DUP2
0xd4f MSTORE
0xd50 PUSH1 0x20
0xd52 ADD
0xd53 PUSH1 0x0
0xd55 SHA3
0xd56 PUSH1 0x6
0xd58 ADD
0xd59 SLOAD
0xd5a SWAP1
0xd5b DUP2
0xd5c ISZERO
0xd5d MUL
0xd5e SWAP1
0xd5f PUSH1 0x40
0xd61 MLOAD
0xd62 PUSH1 0x0
0xd64 PUSH1 0x40
0xd66 MLOAD
0xd67 DUP1
0xd68 DUP4
0xd69 SUB
0xd6a DUP2
0xd6b DUP6
0xd6c DUP9
0xd6d DUP9
0xd6e CALL
0xd6f SWAP4
0xd70 POP
0xd71 POP
0xd72 POP
0xd73 POP
0xd74 ISZERO
0xd75 DUP1
0xd76 ISZERO
0xd77 PUSH2 0xd84
0xd7a JUMPI
---
0xcb9: V925 = 0x0
0xcbd: V926 = 0xffffffffffffffffffffffff
0xcca: V927 = NOT 0xffffffffffffffffffffffff
0xccb: V928 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V82
0xccc: V929 = 0xffffffffffffffffffffffff
0xcd9: V930 = NOT 0xffffffffffffffffffffffff
0xcda: V931 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V928
0xcdc: M[0x0] = V931
0xcdd: V932 = 0x20
0xcdf: V933 = ADD 0x20 0x0
0xce2: M[0x20] = 0x0
0xce3: V934 = 0x20
0xce5: V935 = ADD 0x20 0x20
0xce6: V936 = 0x0
0xce8: V937 = SHA3 0x0 0x40
0xce9: V938 = 0x5
0xceb: V939 = ADD 0x5 V937
0xcec: V940 = 0x0
0xcef: V941 = S[V939]
0xcf1: V942 = 0x100
0xcf4: V943 = EXP 0x100 0x0
0xcf6: V944 = DIV V941 0x1
0xcf7: V945 = 0xffffffffffffffffffffffffffffffffffffffff
0xd0c: V946 = AND 0xffffffffffffffffffffffffffffffffffffffff V944
0xd0d: V947 = 0xffffffffffffffffffffffffffffffffffffffff
0xd22: V948 = AND 0xffffffffffffffffffffffffffffffffffffffff V946
0xd23: V949 = 0x8fc
0xd26: V950 = 0x0
0xd2a: V951 = 0xffffffffffffffffffffffff
0xd37: V952 = NOT 0xffffffffffffffffffffffff
0xd38: V953 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V82
0xd39: V954 = 0xffffffffffffffffffffffff
0xd46: V955 = NOT 0xffffffffffffffffffffffff
0xd47: V956 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V953
0xd49: M[0x0] = V956
0xd4a: V957 = 0x20
0xd4c: V958 = ADD 0x20 0x0
0xd4f: M[0x20] = 0x0
0xd50: V959 = 0x20
0xd52: V960 = ADD 0x20 0x20
0xd53: V961 = 0x0
0xd55: V962 = SHA3 0x0 0x40
0xd56: V963 = 0x6
0xd58: V964 = ADD 0x6 V962
0xd59: V965 = S[V964]
0xd5c: V966 = ISZERO V965
0xd5d: V967 = MUL V966 0x8fc
0xd5f: V968 = 0x40
0xd61: V969 = M[0x40]
0xd62: V970 = 0x0
0xd64: V971 = 0x40
0xd66: V972 = M[0x40]
0xd69: V973 = SUB V969 V972
0xd6e: V974 = CALL V967 V948 V965 V972 V973 V972 0x0
0xd74: V975 = ISZERO V974
0xd76: V976 = ISZERO V975
0xd77: V977 = 0xd84
0xd7a: JUMPI 0xd84 V976
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76]
Stack pops: 3
Stack additions: [S2, S1, S0, V975]
Exit stack: [V11, 0x14f, V76, V82, V82, V76, V975]

================================

Block 0xd7b
[0xd7b:0xd83]
---
Predecessors: [0xcb9]
Successors: []
---
0xd7b RETURNDATASIZE
0xd7c PUSH1 0x0
0xd7e DUP1
0xd7f RETURNDATACOPY
0xd80 RETURNDATASIZE
0xd81 PUSH1 0x0
0xd83 REVERT
---
0xd7b: V978 = RETURNDATASIZE
0xd7c: V979 = 0x0
0xd7f: RETURNDATACOPY 0x0 0x0 V978
0xd80: V980 = RETURNDATASIZE
0xd81: V981 = 0x0
0xd83: REVERT 0x0 V980
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76, V975]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14f, V76, V82, V82, V76, V975]

================================

Block 0xd84
[0xd84:0xd85]
---
Predecessors: [0xcb9]
Successors: [0xd86]
---
0xd84 JUMPDEST
0xd85 POP
---
0xd84: JUMPDEST 
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76, V975]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14f, V76, V82, V82, V76]

================================

Block 0xd86
[0xd86:0xe4a]
---
Predecessors: [0xcb2, 0xd84]
Successors: [0x14f]
---
0xd86 JUMPDEST
0xd87 PUSH1 0x1
0xd89 PUSH1 0x0
0xd8b DUP1
0xd8c DUP6
0xd8d PUSH12 0xffffffffffffffffffffffff
0xd9a NOT
0xd9b AND
0xd9c PUSH12 0xffffffffffffffffffffffff
0xda9 NOT
0xdaa AND
0xdab DUP2
0xdac MSTORE
0xdad PUSH1 0x20
0xdaf ADD
0xdb0 SWAP1
0xdb1 DUP2
0xdb2 MSTORE
0xdb3 PUSH1 0x20
0xdb5 ADD
0xdb6 PUSH1 0x0
0xdb8 SHA3
0xdb9 PUSH1 0x7
0xdbb ADD
0xdbc PUSH1 0x0
0xdbe PUSH2 0x100
0xdc1 EXP
0xdc2 DUP2
0xdc3 SLOAD
0xdc4 DUP2
0xdc5 PUSH1 0xff
0xdc7 MUL
0xdc8 NOT
0xdc9 AND
0xdca SWAP1
0xdcb DUP4
0xdcc ISZERO
0xdcd ISZERO
0xdce MUL
0xdcf OR
0xdd0 SWAP1
0xdd1 SSTORE
0xdd2 POP
0xdd3 PUSH32 0x82498456531a1065f689ba348ce20bda781238c424cf36748dd40bc282831e03
0xdf4 TIMESTAMP
0xdf5 PUSH1 0x40
0xdf7 MLOAD
0xdf8 DUP1
0xdf9 DUP3
0xdfa DUP2
0xdfb MSTORE
0xdfc PUSH1 0x20
0xdfe ADD
0xdff SWAP2
0xe00 POP
0xe01 POP
0xe02 PUSH1 0x40
0xe04 MLOAD
0xe05 DUP1
0xe06 SWAP2
0xe07 SUB
0xe08 SWAP1
0xe09 LOG1
0xe0a DUP4
0xe0b PUSH1 0x0
0xe0d DUP1
0xe0e DUP6
0xe0f PUSH12 0xffffffffffffffffffffffff
0xe1c NOT
0xe1d AND
0xe1e PUSH12 0xffffffffffffffffffffffff
0xe2b NOT
0xe2c AND
0xe2d DUP2
0xe2e MSTORE
0xe2f PUSH1 0x20
0xe31 ADD
0xe32 SWAP1
0xe33 DUP2
0xe34 MSTORE
0xe35 PUSH1 0x20
0xe37 ADD
0xe38 PUSH1 0x0
0xe3a SHA3
0xe3b PUSH1 0x3
0xe3d ADD
0xe3e DUP2
0xe3f PUSH1 0x0
0xe41 NOT
0xe42 AND
0xe43 SWAP1
0xe44 SSTORE
0xe45 POP
0xe46 POP
0xe47 POP
0xe48 POP
0xe49 POP
0xe4a JUMP
---
0xd86: JUMPDEST 
0xd87: V982 = 0x1
0xd89: V983 = 0x0
0xd8d: V984 = 0xffffffffffffffffffffffff
0xd9a: V985 = NOT 0xffffffffffffffffffffffff
0xd9b: V986 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V82
0xd9c: V987 = 0xffffffffffffffffffffffff
0xda9: V988 = NOT 0xffffffffffffffffffffffff
0xdaa: V989 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V986
0xdac: M[0x0] = V989
0xdad: V990 = 0x20
0xdaf: V991 = ADD 0x20 0x0
0xdb2: M[0x20] = 0x0
0xdb3: V992 = 0x20
0xdb5: V993 = ADD 0x20 0x20
0xdb6: V994 = 0x0
0xdb8: V995 = SHA3 0x0 0x40
0xdb9: V996 = 0x7
0xdbb: V997 = ADD 0x7 V995
0xdbc: V998 = 0x0
0xdbe: V999 = 0x100
0xdc1: V1000 = EXP 0x100 0x0
0xdc3: V1001 = S[V997]
0xdc5: V1002 = 0xff
0xdc7: V1003 = MUL 0xff 0x1
0xdc8: V1004 = NOT 0xff
0xdc9: V1005 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1001
0xdcc: V1006 = ISZERO 0x1
0xdcd: V1007 = ISZERO 0x0
0xdce: V1008 = MUL 0x1 0x1
0xdcf: V1009 = OR 0x1 V1005
0xdd1: S[V997] = V1009
0xdd3: V1010 = 0x82498456531a1065f689ba348ce20bda781238c424cf36748dd40bc282831e03
0xdf4: V1011 = TIMESTAMP
0xdf5: V1012 = 0x40
0xdf7: V1013 = M[0x40]
0xdfb: M[V1013] = V1011
0xdfc: V1014 = 0x20
0xdfe: V1015 = ADD 0x20 V1013
0xe02: V1016 = 0x40
0xe04: V1017 = M[0x40]
0xe07: V1018 = SUB V1015 V1017
0xe09: LOG V1017 V1018 0x82498456531a1065f689ba348ce20bda781238c424cf36748dd40bc282831e03
0xe0b: V1019 = 0x0
0xe0f: V1020 = 0xffffffffffffffffffffffff
0xe1c: V1021 = NOT 0xffffffffffffffffffffffff
0xe1d: V1022 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V82
0xe1e: V1023 = 0xffffffffffffffffffffffff
0xe2b: V1024 = NOT 0xffffffffffffffffffffffff
0xe2c: V1025 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V1022
0xe2e: M[0x0] = V1025
0xe2f: V1026 = 0x20
0xe31: V1027 = ADD 0x20 0x0
0xe34: M[0x20] = 0x0
0xe35: V1028 = 0x20
0xe37: V1029 = ADD 0x20 0x20
0xe38: V1030 = 0x0
0xe3a: V1031 = SHA3 0x0 0x40
0xe3b: V1032 = 0x3
0xe3d: V1033 = ADD 0x3 V1031
0xe3f: V1034 = 0x0
0xe41: V1035 = NOT 0x0
0xe42: V1036 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V76
0xe44: S[V1033] = V1036
0xe4a: JUMP 0x14f
---
Entry stack: [V11, 0x14f, V76, V82, V82, V76]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0xe4b
[0xe4b:0xe57]
---
Predecessors: [0x151]
Successors: [0xe58, 0xe59]
---
0xe4b JUMPDEST
0xe4c DUP2
0xe4d PUSH1 0x0
0xe4f PUSH1 0x2
0xe51 DUP2
0xe52 GT
0xe53 ISZERO
0xe54 PUSH2 0xe59
0xe57 JUMPI
---
0xe4b: JUMPDEST 
0xe4d: V1037 = 0x0
0xe4f: V1038 = 0x2
0xe52: V1039 = GT 0x0 0x2
0xe53: V1040 = ISZERO 0x0
0xe54: V1041 = 0xe59
0xe57: JUMPI 0xe59 0x1
---
Entry stack: [V11, 0x1a8, V91, V97, V102]
Stack pops: 2
Stack additions: [S1, S0, S1, 0x0]
Exit stack: [V11, 0x1a8, V91, V97, V102, V97, 0x0]

================================

Block 0xe58
[0xe58:0xe58]
---
Predecessors: [0xe4b]
Successors: []
---
0xe58 INVALID
---
0xe58: INVALID 
---
Entry stack: [V11, 0x1a8, V91, V97, V102, V97, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a8, V91, V97, V102, V97, 0x0]

================================

Block 0xe59
[0xe59:0xea3]
---
Predecessors: [0xe4b]
Successors: [0xea4, 0xea5]
---
0xe59 JUMPDEST
0xe5a PUSH1 0x0
0xe5c DUP1
0xe5d DUP4
0xe5e PUSH12 0xffffffffffffffffffffffff
0xe6b NOT
0xe6c AND
0xe6d PUSH12 0xffffffffffffffffffffffff
0xe7a NOT
0xe7b AND
0xe7c DUP2
0xe7d MSTORE
0xe7e PUSH1 0x20
0xe80 ADD
0xe81 SWAP1
0xe82 DUP2
0xe83 MSTORE
0xe84 PUSH1 0x20
0xe86 ADD
0xe87 PUSH1 0x0
0xe89 SHA3
0xe8a PUSH1 0x7
0xe8c ADD
0xe8d PUSH1 0x1
0xe8f SWAP1
0xe90 SLOAD
0xe91 SWAP1
0xe92 PUSH2 0x100
0xe95 EXP
0xe96 SWAP1
0xe97 DIV
0xe98 PUSH1 0xff
0xe9a AND
0xe9b PUSH1 0x2
0xe9d DUP2
0xe9e GT
0xe9f ISZERO
0xea0 PUSH2 0xea5
0xea3 JUMPI
---
0xe59: JUMPDEST 
0xe5a: V1042 = 0x0
0xe5e: V1043 = 0xffffffffffffffffffffffff
0xe6b: V1044 = NOT 0xffffffffffffffffffffffff
0xe6c: V1045 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V97
0xe6d: V1046 = 0xffffffffffffffffffffffff
0xe7a: V1047 = NOT 0xffffffffffffffffffffffff
0xe7b: V1048 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V1045
0xe7d: M[0x0] = V1048
0xe7e: V1049 = 0x20
0xe80: V1050 = ADD 0x20 0x0
0xe83: M[0x20] = 0x0
0xe84: V1051 = 0x20
0xe86: V1052 = ADD 0x20 0x20
0xe87: V1053 = 0x0
0xe89: V1054 = SHA3 0x0 0x40
0xe8a: V1055 = 0x7
0xe8c: V1056 = ADD 0x7 V1054
0xe8d: V1057 = 0x1
0xe90: V1058 = S[V1056]
0xe92: V1059 = 0x100
0xe95: V1060 = EXP 0x100 0x1
0xe97: V1061 = DIV V1058 0x100
0xe98: V1062 = 0xff
0xe9a: V1063 = AND 0xff V1061
0xe9b: V1064 = 0x2
0xe9e: V1065 = GT V1063 0x2
0xe9f: V1066 = ISZERO V1065
0xea0: V1067 = 0xea5
0xea3: JUMPI 0xea5 V1066
---
Entry stack: [V11, 0x1a8, V91, V97, V102, V97, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V1063]
Exit stack: [V11, 0x1a8, V91, V97, V102, V97, 0x0, V1063]

================================

Block 0xea4
[0xea4:0xea4]
---
Predecessors: [0xe59]
Successors: []
---
0xea4 INVALID
---
0xea4: INVALID 
---
Entry stack: [V11, 0x1a8, V91, V97, V102, V97, 0x0, V1063]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a8, V91, V97, V102, V97, 0x0, V1063]

================================

Block 0xea5
[0xea5:0xeac]
---
Predecessors: [0xe59]
Successors: [0xead, 0xeb1]
---
0xea5 JUMPDEST
0xea6 EQ
0xea7 ISZERO
0xea8 ISZERO
0xea9 PUSH2 0xeb1
0xeac JUMPI
---
0xea5: JUMPDEST 
0xea6: V1068 = EQ V1063 0x0
0xea7: V1069 = ISZERO V1068
0xea8: V1070 = ISZERO V1069
0xea9: V1071 = 0xeb1
0xeac: JUMPI 0xeb1 V1070
---
Entry stack: [V11, 0x1a8, V91, V97, V102, V97, 0x0, V1063]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x1a8, V91, V97, V102, V97]

================================

Block 0xead
[0xead:0xeb0]
---
Predecessors: [0xea5]
Successors: []
---
0xead PUSH1 0x0
0xeaf DUP1
0xeb0 REVERT
---
0xead: V1072 = 0x0
0xeb0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a8, V91, V97, V102, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a8, V91, V97, V102, V97]

================================

Block 0xeb1
[0xeb1:0x10bf]
---
Predecessors: [0xea5]
Successors: [0x10c0, 0x10c1]
---
0xeb1 JUMPDEST
0xeb2 DUP4
0xeb3 PUSH1 0x0
0xeb5 DUP1
0xeb6 DUP6
0xeb7 PUSH12 0xffffffffffffffffffffffff
0xec4 NOT
0xec5 AND
0xec6 PUSH12 0xffffffffffffffffffffffff
0xed3 NOT
0xed4 AND
0xed5 DUP2
0xed6 MSTORE
0xed7 PUSH1 0x20
0xed9 ADD
0xeda SWAP1
0xedb DUP2
0xedc MSTORE
0xedd PUSH1 0x20
0xedf ADD
0xee0 PUSH1 0x0
0xee2 SHA3
0xee3 PUSH1 0x1
0xee5 ADD
0xee6 DUP2
0xee7 SWAP1
0xee8 SSTORE
0xee9 POP
0xeea TIMESTAMP
0xeeb PUSH1 0x0
0xeed DUP1
0xeee DUP6
0xeef PUSH12 0xffffffffffffffffffffffff
0xefc NOT
0xefd AND
0xefe PUSH12 0xffffffffffffffffffffffff
0xf0b NOT
0xf0c AND
0xf0d DUP2
0xf0e MSTORE
0xf0f PUSH1 0x20
0xf11 ADD
0xf12 SWAP1
0xf13 DUP2
0xf14 MSTORE
0xf15 PUSH1 0x20
0xf17 ADD
0xf18 PUSH1 0x0
0xf1a SHA3
0xf1b PUSH1 0x0
0xf1d ADD
0xf1e DUP2
0xf1f SWAP1
0xf20 SSTORE
0xf21 POP
0xf22 DUP3
0xf23 PUSH1 0x0
0xf25 DUP1
0xf26 DUP6
0xf27 PUSH12 0xffffffffffffffffffffffff
0xf34 NOT
0xf35 AND
0xf36 PUSH12 0xffffffffffffffffffffffff
0xf43 NOT
0xf44 AND
0xf45 DUP2
0xf46 MSTORE
0xf47 PUSH1 0x20
0xf49 ADD
0xf4a SWAP1
0xf4b DUP2
0xf4c MSTORE
0xf4d PUSH1 0x20
0xf4f ADD
0xf50 PUSH1 0x0
0xf52 SHA3
0xf53 PUSH1 0x2
0xf55 ADD
0xf56 PUSH1 0x0
0xf58 PUSH2 0x100
0xf5b EXP
0xf5c DUP2
0xf5d SLOAD
0xf5e DUP2
0xf5f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf74 MUL
0xf75 NOT
0xf76 AND
0xf77 SWAP1
0xf78 DUP4
0xf79 PUSH13 0x1000000000000000000000000
0xf87 SWAP1
0xf88 DIV
0xf89 MUL
0xf8a OR
0xf8b SWAP1
0xf8c SSTORE
0xf8d POP
0xf8e DUP2
0xf8f PUSH1 0x0
0xf91 DUP1
0xf92 DUP6
0xf93 PUSH12 0xffffffffffffffffffffffff
0xfa0 NOT
0xfa1 AND
0xfa2 PUSH12 0xffffffffffffffffffffffff
0xfaf NOT
0xfb0 AND
0xfb1 DUP2
0xfb2 MSTORE
0xfb3 PUSH1 0x20
0xfb5 ADD
0xfb6 SWAP1
0xfb7 DUP2
0xfb8 MSTORE
0xfb9 PUSH1 0x20
0xfbb ADD
0xfbc PUSH1 0x0
0xfbe SHA3
0xfbf PUSH1 0x5
0xfc1 ADD
0xfc2 PUSH1 0x0
0xfc4 PUSH2 0x100
0xfc7 EXP
0xfc8 DUP2
0xfc9 SLOAD
0xfca DUP2
0xfcb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe0 MUL
0xfe1 NOT
0xfe2 AND
0xfe3 SWAP1
0xfe4 DUP4
0xfe5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xffa AND
0xffb MUL
0xffc OR
0xffd SWAP1
0xffe SSTORE
0xfff POP
0x1000 CALLER
0x1001 PUSH1 0x0
0x1003 DUP1
0x1004 DUP6
0x1005 PUSH12 0xffffffffffffffffffffffff
0x1012 NOT
0x1013 AND
0x1014 PUSH12 0xffffffffffffffffffffffff
0x1021 NOT
0x1022 AND
0x1023 DUP2
0x1024 MSTORE
0x1025 PUSH1 0x20
0x1027 ADD
0x1028 SWAP1
0x1029 DUP2
0x102a MSTORE
0x102b PUSH1 0x20
0x102d ADD
0x102e PUSH1 0x0
0x1030 SHA3
0x1031 PUSH1 0x4
0x1033 ADD
0x1034 PUSH1 0x0
0x1036 PUSH2 0x100
0x1039 EXP
0x103a DUP2
0x103b SLOAD
0x103c DUP2
0x103d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1052 MUL
0x1053 NOT
0x1054 AND
0x1055 SWAP1
0x1056 DUP4
0x1057 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x106c AND
0x106d MUL
0x106e OR
0x106f SWAP1
0x1070 SSTORE
0x1071 POP
0x1072 PUSH1 0x1
0x1074 PUSH1 0x0
0x1076 DUP1
0x1077 DUP6
0x1078 PUSH12 0xffffffffffffffffffffffff
0x1085 NOT
0x1086 AND
0x1087 PUSH12 0xffffffffffffffffffffffff
0x1094 NOT
0x1095 AND
0x1096 DUP2
0x1097 MSTORE
0x1098 PUSH1 0x20
0x109a ADD
0x109b SWAP1
0x109c DUP2
0x109d MSTORE
0x109e PUSH1 0x20
0x10a0 ADD
0x10a1 PUSH1 0x0
0x10a3 SHA3
0x10a4 PUSH1 0x7
0x10a6 ADD
0x10a7 PUSH1 0x1
0x10a9 PUSH2 0x100
0x10ac EXP
0x10ad DUP2
0x10ae SLOAD
0x10af DUP2
0x10b0 PUSH1 0xff
0x10b2 MUL
0x10b3 NOT
0x10b4 AND
0x10b5 SWAP1
0x10b6 DUP4
0x10b7 PUSH1 0x2
0x10b9 DUP2
0x10ba GT
0x10bb ISZERO
0x10bc PUSH2 0x10c1
0x10bf JUMPI
---
0xeb1: JUMPDEST 
0xeb3: V1073 = 0x0
0xeb7: V1074 = 0xffffffffffffffffffffffff
0xec4: V1075 = NOT 0xffffffffffffffffffffffff
0xec5: V1076 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V97
0xec6: V1077 = 0xffffffffffffffffffffffff
0xed3: V1078 = NOT 0xffffffffffffffffffffffff
0xed4: V1079 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V1076
0xed6: M[0x0] = V1079
0xed7: V1080 = 0x20
0xed9: V1081 = ADD 0x20 0x0
0xedc: M[0x20] = 0x0
0xedd: V1082 = 0x20
0xedf: V1083 = ADD 0x20 0x20
0xee0: V1084 = 0x0
0xee2: V1085 = SHA3 0x0 0x40
0xee3: V1086 = 0x1
0xee5: V1087 = ADD 0x1 V1085
0xee8: S[V1087] = V91
0xeea: V1088 = TIMESTAMP
0xeeb: V1089 = 0x0
0xeef: V1090 = 0xffffffffffffffffffffffff
0xefc: V1091 = NOT 0xffffffffffffffffffffffff
0xefd: V1092 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V97
0xefe: V1093 = 0xffffffffffffffffffffffff
0xf0b: V1094 = NOT 0xffffffffffffffffffffffff
0xf0c: V1095 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V1092
0xf0e: M[0x0] = V1095
0xf0f: V1096 = 0x20
0xf11: V1097 = ADD 0x20 0x0
0xf14: M[0x20] = 0x0
0xf15: V1098 = 0x20
0xf17: V1099 = ADD 0x20 0x20
0xf18: V1100 = 0x0
0xf1a: V1101 = SHA3 0x0 0x40
0xf1b: V1102 = 0x0
0xf1d: V1103 = ADD 0x0 V1101
0xf20: S[V1103] = V1088
0xf23: V1104 = 0x0
0xf27: V1105 = 0xffffffffffffffffffffffff
0xf34: V1106 = NOT 0xffffffffffffffffffffffff
0xf35: V1107 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V97
0xf36: V1108 = 0xffffffffffffffffffffffff
0xf43: V1109 = NOT 0xffffffffffffffffffffffff
0xf44: V1110 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V1107
0xf46: M[0x0] = V1110
0xf47: V1111 = 0x20
0xf49: V1112 = ADD 0x20 0x0
0xf4c: M[0x20] = 0x0
0xf4d: V1113 = 0x20
0xf4f: V1114 = ADD 0x20 0x20
0xf50: V1115 = 0x0
0xf52: V1116 = SHA3 0x0 0x40
0xf53: V1117 = 0x2
0xf55: V1118 = ADD 0x2 V1116
0xf56: V1119 = 0x0
0xf58: V1120 = 0x100
0xf5b: V1121 = EXP 0x100 0x0
0xf5d: V1122 = S[V1118]
0xf5f: V1123 = 0xffffffffffffffffffffffffffffffffffffffff
0xf74: V1124 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xf75: V1125 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf76: V1126 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1122
0xf79: V1127 = 0x1000000000000000000000000
0xf88: V1128 = DIV V97 0x1000000000000000000000000
0xf89: V1129 = MUL V1128 0x1
0xf8a: V1130 = OR V1129 V1126
0xf8c: S[V1118] = V1130
0xf8f: V1131 = 0x0
0xf93: V1132 = 0xffffffffffffffffffffffff
0xfa0: V1133 = NOT 0xffffffffffffffffffffffff
0xfa1: V1134 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V97
0xfa2: V1135 = 0xffffffffffffffffffffffff
0xfaf: V1136 = NOT 0xffffffffffffffffffffffff
0xfb0: V1137 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V1134
0xfb2: M[0x0] = V1137
0xfb3: V1138 = 0x20
0xfb5: V1139 = ADD 0x20 0x0
0xfb8: M[0x20] = 0x0
0xfb9: V1140 = 0x20
0xfbb: V1141 = ADD 0x20 0x20
0xfbc: V1142 = 0x0
0xfbe: V1143 = SHA3 0x0 0x40
0xfbf: V1144 = 0x5
0xfc1: V1145 = ADD 0x5 V1143
0xfc2: V1146 = 0x0
0xfc4: V1147 = 0x100
0xfc7: V1148 = EXP 0x100 0x0
0xfc9: V1149 = S[V1145]
0xfcb: V1150 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe0: V1151 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xfe1: V1152 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xfe2: V1153 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1149
0xfe5: V1154 = 0xffffffffffffffffffffffffffffffffffffffff
0xffa: V1155 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0xffb: V1156 = MUL V1155 0x1
0xffc: V1157 = OR V1156 V1153
0xffe: S[V1145] = V1157
0x1000: V1158 = CALLER
0x1001: V1159 = 0x0
0x1005: V1160 = 0xffffffffffffffffffffffff
0x1012: V1161 = NOT 0xffffffffffffffffffffffff
0x1013: V1162 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V97
0x1014: V1163 = 0xffffffffffffffffffffffff
0x1021: V1164 = NOT 0xffffffffffffffffffffffff
0x1022: V1165 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V1162
0x1024: M[0x0] = V1165
0x1025: V1166 = 0x20
0x1027: V1167 = ADD 0x20 0x0
0x102a: M[0x20] = 0x0
0x102b: V1168 = 0x20
0x102d: V1169 = ADD 0x20 0x20
0x102e: V1170 = 0x0
0x1030: V1171 = SHA3 0x0 0x40
0x1031: V1172 = 0x4
0x1033: V1173 = ADD 0x4 V1171
0x1034: V1174 = 0x0
0x1036: V1175 = 0x100
0x1039: V1176 = EXP 0x100 0x0
0x103b: V1177 = S[V1173]
0x103d: V1178 = 0xffffffffffffffffffffffffffffffffffffffff
0x1052: V1179 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1053: V1180 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1054: V1181 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1177
0x1057: V1182 = 0xffffffffffffffffffffffffffffffffffffffff
0x106c: V1183 = AND 0xffffffffffffffffffffffffffffffffffffffff V1158
0x106d: V1184 = MUL V1183 0x1
0x106e: V1185 = OR V1184 V1181
0x1070: S[V1173] = V1185
0x1072: V1186 = 0x1
0x1074: V1187 = 0x0
0x1078: V1188 = 0xffffffffffffffffffffffff
0x1085: V1189 = NOT 0xffffffffffffffffffffffff
0x1086: V1190 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V97
0x1087: V1191 = 0xffffffffffffffffffffffff
0x1094: V1192 = NOT 0xffffffffffffffffffffffff
0x1095: V1193 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V1190
0x1097: M[0x0] = V1193
0x1098: V1194 = 0x20
0x109a: V1195 = ADD 0x20 0x0
0x109d: M[0x20] = 0x0
0x109e: V1196 = 0x20
0x10a0: V1197 = ADD 0x20 0x20
0x10a1: V1198 = 0x0
0x10a3: V1199 = SHA3 0x0 0x40
0x10a4: V1200 = 0x7
0x10a6: V1201 = ADD 0x7 V1199
0x10a7: V1202 = 0x1
0x10a9: V1203 = 0x100
0x10ac: V1204 = EXP 0x100 0x1
0x10ae: V1205 = S[V1201]
0x10b0: V1206 = 0xff
0x10b2: V1207 = MUL 0xff 0x100
0x10b3: V1208 = NOT 0xff00
0x10b4: V1209 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1205
0x10b7: V1210 = 0x2
0x10ba: V1211 = GT 0x1 0x2
0x10bb: V1212 = ISZERO 0x0
0x10bc: V1213 = 0x10c1
0x10bf: JUMPI 0x10c1 0x1
---
Entry stack: [V11, 0x1a8, V91, V97, V102, V97]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x1, V1201, V1209, 0x100, 0x1]
Exit stack: [V11, 0x1a8, V91, V97, V102, V97, 0x1, V1201, V1209, 0x100, 0x1]

================================

Block 0x10c0
[0x10c0:0x10c0]
---
Predecessors: [0xeb1]
Successors: []
---
0x10c0 INVALID
---
0x10c0: INVALID 
---
Entry stack: [V11, 0x1a8, V91, V97, V102, V97, 0x1, V1201, V1209, 0x100, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a8, V91, V97, V102, V97, 0x1, V1201, V1209, 0x100, 0x1]

================================

Block 0x10c1
[0x10c1:0x120b]
---
Predecessors: [0xeb1]
Successors: [0x1a8]
---
0x10c1 JUMPDEST
0x10c2 MUL
0x10c3 OR
0x10c4 SWAP1
0x10c5 SSTORE
0x10c6 POP
0x10c7 CALLVALUE
0x10c8 PUSH1 0x0
0x10ca DUP1
0x10cb DUP6
0x10cc PUSH12 0xffffffffffffffffffffffff
0x10d9 NOT
0x10da AND
0x10db PUSH12 0xffffffffffffffffffffffff
0x10e8 NOT
0x10e9 AND
0x10ea DUP2
0x10eb MSTORE
0x10ec PUSH1 0x20
0x10ee ADD
0x10ef SWAP1
0x10f0 DUP2
0x10f1 MSTORE
0x10f2 PUSH1 0x20
0x10f4 ADD
0x10f5 PUSH1 0x0
0x10f7 SHA3
0x10f8 PUSH1 0x6
0x10fa ADD
0x10fb DUP2
0x10fc SWAP1
0x10fd SSTORE
0x10fe POP
0x10ff PUSH32 0x8f52c15a8dda5af727677001f0ceb13df57f42198fd5cdde86a06aee80333a4b
0x1120 PUSH1 0x0
0x1122 DUP1
0x1123 DUP6
0x1124 PUSH12 0xffffffffffffffffffffffff
0x1131 NOT
0x1132 AND
0x1133 PUSH12 0xffffffffffffffffffffffff
0x1140 NOT
0x1141 AND
0x1142 DUP2
0x1143 MSTORE
0x1144 PUSH1 0x20
0x1146 ADD
0x1147 SWAP1
0x1148 DUP2
0x1149 MSTORE
0x114a PUSH1 0x20
0x114c ADD
0x114d PUSH1 0x0
0x114f SHA3
0x1150 PUSH1 0x0
0x1152 ADD
0x1153 SLOAD
0x1154 DUP6
0x1155 DUP6
0x1156 DUP6
0x1157 CALLER
0x1158 CALLVALUE
0x1159 PUSH1 0x40
0x115b MLOAD
0x115c DUP1
0x115d DUP8
0x115e DUP2
0x115f MSTORE
0x1160 PUSH1 0x20
0x1162 ADD
0x1163 DUP7
0x1164 DUP2
0x1165 MSTORE
0x1166 PUSH1 0x20
0x1168 ADD
0x1169 DUP6
0x116a PUSH12 0xffffffffffffffffffffffff
0x1177 NOT
0x1178 AND
0x1179 PUSH12 0xffffffffffffffffffffffff
0x1186 NOT
0x1187 AND
0x1188 DUP2
0x1189 MSTORE
0x118a PUSH1 0x20
0x118c ADD
0x118d DUP5
0x118e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11a3 AND
0x11a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b9 AND
0x11ba DUP2
0x11bb MSTORE
0x11bc PUSH1 0x20
0x11be ADD
0x11bf DUP4
0x11c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11d5 AND
0x11d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11eb AND
0x11ec DUP2
0x11ed MSTORE
0x11ee PUSH1 0x20
0x11f0 ADD
0x11f1 DUP3
0x11f2 DUP2
0x11f3 MSTORE
0x11f4 PUSH1 0x20
0x11f6 ADD
0x11f7 SWAP7
0x11f8 POP
0x11f9 POP
0x11fa POP
0x11fb POP
0x11fc POP
0x11fd POP
0x11fe POP
0x11ff PUSH1 0x40
0x1201 MLOAD
0x1202 DUP1
0x1203 SWAP2
0x1204 SUB
0x1205 SWAP1
0x1206 LOG1
0x1207 POP
0x1208 POP
0x1209 POP
0x120a POP
0x120b JUMP
---
0x10c1: JUMPDEST 
0x10c2: V1214 = MUL 0x1 0x100
0x10c3: V1215 = OR 0x100 V1209
0x10c5: S[V1201] = V1215
0x10c7: V1216 = CALLVALUE
0x10c8: V1217 = 0x0
0x10cc: V1218 = 0xffffffffffffffffffffffff
0x10d9: V1219 = NOT 0xffffffffffffffffffffffff
0x10da: V1220 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V97
0x10db: V1221 = 0xffffffffffffffffffffffff
0x10e8: V1222 = NOT 0xffffffffffffffffffffffff
0x10e9: V1223 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V1220
0x10eb: M[0x0] = V1223
0x10ec: V1224 = 0x20
0x10ee: V1225 = ADD 0x20 0x0
0x10f1: M[0x20] = 0x0
0x10f2: V1226 = 0x20
0x10f4: V1227 = ADD 0x20 0x20
0x10f5: V1228 = 0x0
0x10f7: V1229 = SHA3 0x0 0x40
0x10f8: V1230 = 0x6
0x10fa: V1231 = ADD 0x6 V1229
0x10fd: S[V1231] = V1216
0x10ff: V1232 = 0x8f52c15a8dda5af727677001f0ceb13df57f42198fd5cdde86a06aee80333a4b
0x1120: V1233 = 0x0
0x1124: V1234 = 0xffffffffffffffffffffffff
0x1131: V1235 = NOT 0xffffffffffffffffffffffff
0x1132: V1236 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V97
0x1133: V1237 = 0xffffffffffffffffffffffff
0x1140: V1238 = NOT 0xffffffffffffffffffffffff
0x1141: V1239 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V1236
0x1143: M[0x0] = V1239
0x1144: V1240 = 0x20
0x1146: V1241 = ADD 0x20 0x0
0x1149: M[0x20] = 0x0
0x114a: V1242 = 0x20
0x114c: V1243 = ADD 0x20 0x20
0x114d: V1244 = 0x0
0x114f: V1245 = SHA3 0x0 0x40
0x1150: V1246 = 0x0
0x1152: V1247 = ADD 0x0 V1245
0x1153: V1248 = S[V1247]
0x1157: V1249 = CALLER
0x1158: V1250 = CALLVALUE
0x1159: V1251 = 0x40
0x115b: V1252 = M[0x40]
0x115f: M[V1252] = V1248
0x1160: V1253 = 0x20
0x1162: V1254 = ADD 0x20 V1252
0x1165: M[V1254] = V91
0x1166: V1255 = 0x20
0x1168: V1256 = ADD 0x20 V1254
0x116a: V1257 = 0xffffffffffffffffffffffff
0x1177: V1258 = NOT 0xffffffffffffffffffffffff
0x1178: V1259 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V97
0x1179: V1260 = 0xffffffffffffffffffffffff
0x1186: V1261 = NOT 0xffffffffffffffffffffffff
0x1187: V1262 = AND 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000 V1259
0x1189: M[V1256] = V1262
0x118a: V1263 = 0x20
0x118c: V1264 = ADD 0x20 V1256
0x118e: V1265 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a3: V1266 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x11a4: V1267 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b9: V1268 = AND 0xffffffffffffffffffffffffffffffffffffffff V1266
0x11bb: M[V1264] = V1268
0x11bc: V1269 = 0x20
0x11be: V1270 = ADD 0x20 V1264
0x11c0: V1271 = 0xffffffffffffffffffffffffffffffffffffffff
0x11d5: V1272 = AND 0xffffffffffffffffffffffffffffffffffffffff V1249
0x11d6: V1273 = 0xffffffffffffffffffffffffffffffffffffffff
0x11eb: V1274 = AND 0xffffffffffffffffffffffffffffffffffffffff V1272
0x11ed: M[V1270] = V1274
0x11ee: V1275 = 0x20
0x11f0: V1276 = ADD 0x20 V1270
0x11f3: M[V1276] = V1250
0x11f4: V1277 = 0x20
0x11f6: V1278 = ADD 0x20 V1276
0x11ff: V1279 = 0x40
0x1201: V1280 = M[0x40]
0x1204: V1281 = SUB V1278 V1280
0x1206: LOG V1280 V1281 0x8f52c15a8dda5af727677001f0ceb13df57f42198fd5cdde86a06aee80333a4b
0x120b: JUMP 0x1a8
---
Entry stack: [V11, 0x1a8, V91, V97, V102, V97, 0x1, V1201, V1209, 0x100, 0x1]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x120c
[0x120c:0x12cc]
---
Predecessors: [0x1b6]
Successors: [0x1e4]
---
0x120c JUMPDEST
0x120d PUSH1 0x0
0x120f PUSH1 0x20
0x1211 MSTORE
0x1212 DUP1
0x1213 PUSH1 0x0
0x1215 MSTORE
0x1216 PUSH1 0x40
0x1218 PUSH1 0x0
0x121a SHA3
0x121b PUSH1 0x0
0x121d SWAP2
0x121e POP
0x121f SWAP1
0x1220 POP
0x1221 DUP1
0x1222 PUSH1 0x0
0x1224 ADD
0x1225 SLOAD
0x1226 SWAP1
0x1227 DUP1
0x1228 PUSH1 0x1
0x122a ADD
0x122b SLOAD
0x122c SWAP1
0x122d DUP1
0x122e PUSH1 0x2
0x1230 ADD
0x1231 PUSH1 0x0
0x1233 SWAP1
0x1234 SLOAD
0x1235 SWAP1
0x1236 PUSH2 0x100
0x1239 EXP
0x123a SWAP1
0x123b DIV
0x123c PUSH13 0x1000000000000000000000000
0x124a MUL
0x124b SWAP1
0x124c DUP1
0x124d PUSH1 0x3
0x124f ADD
0x1250 SLOAD
0x1251 SWAP1
0x1252 DUP1
0x1253 PUSH1 0x4
0x1255 ADD
0x1256 PUSH1 0x0
0x1258 SWAP1
0x1259 SLOAD
0x125a SWAP1
0x125b PUSH2 0x100
0x125e EXP
0x125f SWAP1
0x1260 DIV
0x1261 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1276 AND
0x1277 SWAP1
0x1278 DUP1
0x1279 PUSH1 0x5
0x127b ADD
0x127c PUSH1 0x0
0x127e SWAP1
0x127f SLOAD
0x1280 SWAP1
0x1281 PUSH2 0x100
0x1284 EXP
0x1285 SWAP1
0x1286 DIV
0x1287 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x129c AND
0x129d SWAP1
0x129e DUP1
0x129f PUSH1 0x6
0x12a1 ADD
0x12a2 SLOAD
0x12a3 SWAP1
0x12a4 DUP1
0x12a5 PUSH1 0x7
0x12a7 ADD
0x12a8 PUSH1 0x0
0x12aa SWAP1
0x12ab SLOAD
0x12ac SWAP1
0x12ad PUSH2 0x100
0x12b0 EXP
0x12b1 SWAP1
0x12b2 DIV
0x12b3 PUSH1 0xff
0x12b5 AND
0x12b6 SWAP1
0x12b7 DUP1
0x12b8 PUSH1 0x7
0x12ba ADD
0x12bb PUSH1 0x1
0x12bd SWAP1
0x12be SLOAD
0x12bf SWAP1
0x12c0 PUSH2 0x100
0x12c3 EXP
0x12c4 SWAP1
0x12c5 DIV
0x12c6 PUSH1 0xff
0x12c8 AND
0x12c9 SWAP1
0x12ca POP
0x12cb DUP10
0x12cc JUMP
---
0x120c: JUMPDEST 
0x120d: V1282 = 0x0
0x120f: V1283 = 0x20
0x1211: M[0x20] = 0x0
0x1213: V1284 = 0x0
0x1215: M[0x0] = V118
0x1216: V1285 = 0x40
0x1218: V1286 = 0x0
0x121a: V1287 = SHA3 0x0 0x40
0x121b: V1288 = 0x0
0x1222: V1289 = 0x0
0x1224: V1290 = ADD 0x0 V1287
0x1225: V1291 = S[V1290]
0x1228: V1292 = 0x1
0x122a: V1293 = ADD 0x1 V1287
0x122b: V1294 = S[V1293]
0x122e: V1295 = 0x2
0x1230: V1296 = ADD 0x2 V1287
0x1231: V1297 = 0x0
0x1234: V1298 = S[V1296]
0x1236: V1299 = 0x100
0x1239: V1300 = EXP 0x100 0x0
0x123b: V1301 = DIV V1298 0x1
0x123c: V1302 = 0x1000000000000000000000000
0x124a: V1303 = MUL 0x1000000000000000000000000 V1301
0x124d: V1304 = 0x3
0x124f: V1305 = ADD 0x3 V1287
0x1250: V1306 = S[V1305]
0x1253: V1307 = 0x4
0x1255: V1308 = ADD 0x4 V1287
0x1256: V1309 = 0x0
0x1259: V1310 = S[V1308]
0x125b: V1311 = 0x100
0x125e: V1312 = EXP 0x100 0x0
0x1260: V1313 = DIV V1310 0x1
0x1261: V1314 = 0xffffffffffffffffffffffffffffffffffffffff
0x1276: V1315 = AND 0xffffffffffffffffffffffffffffffffffffffff V1313
0x1279: V1316 = 0x5
0x127b: V1317 = ADD 0x5 V1287
0x127c: V1318 = 0x0
0x127f: V1319 = S[V1317]
0x1281: V1320 = 0x100
0x1284: V1321 = EXP 0x100 0x0
0x1286: V1322 = DIV V1319 0x1
0x1287: V1323 = 0xffffffffffffffffffffffffffffffffffffffff
0x129c: V1324 = AND 0xffffffffffffffffffffffffffffffffffffffff V1322
0x129f: V1325 = 0x6
0x12a1: V1326 = ADD 0x6 V1287
0x12a2: V1327 = S[V1326]
0x12a5: V1328 = 0x7
0x12a7: V1329 = ADD 0x7 V1287
0x12a8: V1330 = 0x0
0x12ab: V1331 = S[V1329]
0x12ad: V1332 = 0x100
0x12b0: V1333 = EXP 0x100 0x0
0x12b2: V1334 = DIV V1331 0x1
0x12b3: V1335 = 0xff
0x12b5: V1336 = AND 0xff V1334
0x12b8: V1337 = 0x7
0x12ba: V1338 = ADD 0x7 V1287
0x12bb: V1339 = 0x1
0x12be: V1340 = S[V1338]
0x12c0: V1341 = 0x100
0x12c3: V1342 = EXP 0x100 0x1
0x12c5: V1343 = DIV V1340 0x100
0x12c6: V1344 = 0xff
0x12c8: V1345 = AND 0xff V1343
0x12cc: JUMP 0x1e4
---
Entry stack: [V11, 0x1e4, V118]
Stack pops: 2
Stack additions: [S1, V1291, V1294, V1303, V1306, V1315, V1324, V1327, V1336, V1345]
Exit stack: [V11, 0x1e4, V1291, V1294, V1303, V1306, V1315, V1324, V1327, V1336, V1345]

================================

Block 0x12cd
[0x12cd:0x12f8]
---
Predecessors: []
Successors: []
---
0x12cd STOP
0x12ce LOG1
0x12cf PUSH6 0x627a7a723058
0x12d6 SHA3
0x12d7 MISSING 0x28
0x12d8 MISSING 0xe9
0x12d9 MUL
0x12da PUSH1 0x5a
0x12dc MISSING 0xaa
0x12dd DUP2
0x12de RETURN
0x12df DUP10
0x12e0 MISSING 0xc3
0x12e1 PUSH9 0x99aff53249c042b0a4
0x12eb MISSING 0xbb
0x12ec MISSING 0x2b
0x12ed CODESIZE
0x12ee DELEGATECALL
0x12ef GASPRICE
0x12f0 MISSING 0x2a
0x12f1 SAR
0x12f2 MISSING 0x2c
0x12f3 MISSING 0xcf
0x12f4 MISSING 0xd2
0x12f5 MISSING 0xc7
0x12f6 MISSING 0xa6
0x12f7 STOP
0x12f8 MISSING 0x29
---
0x12cd: STOP 
0x12ce: LOG S0 S1 S2
0x12cf: V1346 = 0x627a7a723058
0x12d6: V1347 = SHA3 0x627a7a723058 S3
0x12d7: MISSING 0x28
0x12d8: MISSING 0xe9
0x12d9: V1348 = MUL S0 S1
0x12da: V1349 = 0x5a
0x12dc: MISSING 0xaa
0x12de: RETURN S1 S0
0x12e0: MISSING 0xc3
0x12e1: V1350 = 0x99aff53249c042b0a4
0x12eb: MISSING 0xbb
0x12ec: MISSING 0x2b
0x12ed: V1351 = CODESIZE
0x12ee: V1352 = DELEGATECALL V1351 S0 S1 S2 S3 S4
0x12ef: V1353 = GASPRICE
0x12f0: MISSING 0x2a
0x12f1: V1354 = SAR S0 S1
0x12f2: MISSING 0x2c
0x12f3: MISSING 0xcf
0x12f4: MISSING 0xd2
0x12f5: MISSING 0xc7
0x12f6: MISSING 0xa6
0x12f7: STOP 
0x12f8: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1347, 0x5a, V1348, S1, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, 0x99aff53249c042b0a4, V1353, V1352, V1354]
Exit stack: []

================================

Function 0:
Public function signature: 0x27f10ee0
Entry block: 0x72
Exit block: 0xc9
Body: 0x72, 0xc9, 0x2c2, 0x2cf, 0x2d0, 0x31b, 0x31c, 0x324, 0x328, 0x56f, 0x570

Function 1:
Public function signature: 0x5a8f9b81
Entry block: 0xcb
Exit block: 0x958
Body: 0xcb, 0xd3, 0xd7, 0x105, 0x640, 0x6b3, 0x6b7, 0x706, 0x70a, 0x715, 0x716, 0x761, 0x762, 0x769, 0x82b, 0x834, 0x836, 0x842, 0x843, 0x88e, 0x88f, 0x896, 0x958, 0x961, 0x963

Function 2:
Public function signature: 0x7ec27ba1
Entry block: 0x107
Exit block: 0xd7b
Body: 0x107, 0x10f, 0x113, 0x14f, 0x9ea, 0xa2a, 0xa33, 0xa60, 0xa64, 0xad6, 0xada, 0xb29, 0xb2d, 0xb38, 0xb39, 0xb84, 0xb85, 0xb8c, 0xc4e, 0xc57, 0xc59, 0xc65, 0xc66, 0xcb1, 0xcb2, 0xcb9, 0xd7b, 0xd84, 0xd86

Function 3:
Public function signature: 0xeb8ae1ed
Entry block: 0x151
Exit block: 0x1a8
Body: 0x151, 0x1a8, 0xe4b, 0xe58, 0xe59, 0xea4, 0xea5, 0xead, 0xeb1, 0x10c0, 0x10c1

Function 4:
Public function signature: 0xf325cc91
Entry block: 0x1aa
Exit block: 0x2a5
Body: 0x1aa, 0x1b2, 0x1b6, 0x1e4, 0x2a5, 0x2a6, 0x120c

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

