Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x85]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x12065fe0
0x3c EQ
0x3d PUSH2 0x85
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x12065fe0
0x3c: V13 = EQ 0x12065fe0 V11
0x3d: V14 = 0x85
0x40: JUMPI 0x85 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xae]
---
0x41 DUP1
0x42 PUSH4 0x389eb9f9
0x47 EQ
0x48 PUSH2 0xae
0x4b JUMPI
---
0x42: V15 = 0x389eb9f9
0x47: V16 = EQ 0x389eb9f9 V11
0x48: V17 = 0xae
0x4b: JUMPI 0xae V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd7]
---
0x4c DUP1
0x4d PUSH4 0x3ccfd60b
0x52 EQ
0x53 PUSH2 0xd7
0x56 JUMPI
---
0x4d: V18 = 0x3ccfd60b
0x52: V19 = EQ 0x3ccfd60b V11
0x53: V20 = 0xd7
0x56: JUMPI 0xd7 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xec]
---
0x57 DUP1
0x58 PUSH4 0x8da5cb5b
0x5d EQ
0x5e PUSH2 0xec
0x61 JUMPI
---
0x58: V21 = 0x8da5cb5b
0x5d: V22 = EQ 0x8da5cb5b V11
0x5e: V23 = 0xec
0x61: JUMPI 0xec V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x141]
---
0x62 DUP1
0x63 PUSH4 0xc947db81
0x68 EQ
0x69 PUSH2 0x141
0x6c JUMPI
---
0x63: V24 = 0xc947db81
0x68: V25 = EQ 0xc947db81 V11
0x69: V26 = 0x141
0x6c: JUMPI 0x141 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x16a]
---
0x6d DUP1
0x6e PUSH4 0xd0e30db0
0x73 EQ
0x74 PUSH2 0x16a
0x77 JUMPI
---
0x6e: V27 = 0xd0e30db0
0x73: V28 = EQ 0xd0e30db0 V11
0x74: V29 = 0x16a
0x77: JUMPI 0x16a V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x174]
---
0x78 DUP1
0x79 PUSH4 0xf2fde38b
0x7e EQ
0x7f PUSH2 0x174
0x82 JUMPI
---
0x79: V30 = 0xf2fde38b
0x7e: V31 = EQ 0xf2fde38b V11
0x7f: V32 = 0x174
0x82: JUMPI 0x174 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x84]
---
Predecessors: [0x0, 0x78]
Successors: []
---
0x83 JUMPDEST
0x84 STOP
---
0x83: JUMPDEST 
0x84: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0x8b]
---
Predecessors: [0xd]
Successors: [0x8c, 0x90]
---
0x85 JUMPDEST
0x86 CALLVALUE
0x87 ISZERO
0x88 PUSH2 0x90
0x8b JUMPI
---
0x85: JUMPDEST 
0x86: V33 = CALLVALUE
0x87: V34 = ISZERO V33
0x88: V35 = 0x90
0x8b: JUMPI 0x90 V34
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8c
[0x8c:0x8f]
---
Predecessors: [0x85]
Successors: []
---
0x8c PUSH1 0x0
0x8e DUP1
0x8f REVERT
---
0x8c: V36 = 0x0
0x8f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x90
[0x90:0x97]
---
Predecessors: [0x85]
Successors: [0x1ad]
---
0x90 JUMPDEST
0x91 PUSH2 0x98
0x94 PUSH2 0x1ad
0x97 JUMP
---
0x90: JUMPDEST 
0x91: V37 = 0x98
0x94: V38 = 0x1ad
0x97: JUMP 0x1ad
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x98]
Exit stack: [V11, 0x98]

================================

Block 0x98
[0x98:0xad]
---
Predecessors: [0x1ad]
Successors: []
---
0x98 JUMPDEST
0x99 PUSH1 0x40
0x9b MLOAD
0x9c DUP1
0x9d DUP3
0x9e DUP2
0x9f MSTORE
0xa0 PUSH1 0x20
0xa2 ADD
0xa3 SWAP2
0xa4 POP
0xa5 POP
0xa6 PUSH1 0x40
0xa8 MLOAD
0xa9 DUP1
0xaa SWAP2
0xab SUB
0xac SWAP1
0xad RETURN
---
0x98: JUMPDEST 
0x99: V39 = 0x40
0x9b: V40 = M[0x40]
0x9f: M[V40] = V123
0xa0: V41 = 0x20
0xa2: V42 = ADD 0x20 V40
0xa6: V43 = 0x40
0xa8: V44 = M[0x40]
0xab: V45 = SUB V42 V44
0xad: RETURN V44 V45
---
Entry stack: [V11, V123]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb4]
---
Predecessors: [0x41]
Successors: [0xb5, 0xb9]
---
0xae JUMPDEST
0xaf CALLVALUE
0xb0 ISZERO
0xb1 PUSH2 0xb9
0xb4 JUMPI
---
0xae: JUMPDEST 
0xaf: V46 = CALLVALUE
0xb0: V47 = ISZERO V46
0xb1: V48 = 0xb9
0xb4: JUMPI 0xb9 V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb5
[0xb5:0xb8]
---
Predecessors: [0xae]
Successors: []
---
0xb5 PUSH1 0x0
0xb7 DUP1
0xb8 REVERT
---
0xb5: V49 = 0x0
0xb8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc0]
---
Predecessors: [0xae]
Successors: [0x1f4]
---
0xb9 JUMPDEST
0xba PUSH2 0xc1
0xbd PUSH2 0x1f4
0xc0 JUMP
---
0xb9: JUMPDEST 
0xba: V50 = 0xc1
0xbd: V51 = 0x1f4
0xc0: JUMP 0x1f4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V11, 0xc1]

================================

Block 0xc1
[0xc1:0xd6]
---
Predecessors: [0x1f4]
Successors: []
---
0xc1 JUMPDEST
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 DUP1
0xc6 DUP3
0xc7 DUP2
0xc8 MSTORE
0xc9 PUSH1 0x20
0xcb ADD
0xcc SWAP2
0xcd POP
0xce POP
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 DUP1
0xd3 SWAP2
0xd4 SUB
0xd5 SWAP1
0xd6 RETURN
---
0xc1: JUMPDEST 
0xc2: V52 = 0x40
0xc4: V53 = M[0x40]
0xc8: M[V53] = V125
0xc9: V54 = 0x20
0xcb: V55 = ADD 0x20 V53
0xcf: V56 = 0x40
0xd1: V57 = M[0x40]
0xd4: V58 = SUB V55 V57
0xd6: RETURN V57 V58
---
Entry stack: [V11, 0xc1, V125]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc1]

================================

Block 0xd7
[0xd7:0xdd]
---
Predecessors: [0x4c]
Successors: [0xde, 0xe2]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 ISZERO
0xda PUSH2 0xe2
0xdd JUMPI
---
0xd7: JUMPDEST 
0xd8: V59 = CALLVALUE
0xd9: V60 = ISZERO V59
0xda: V61 = 0xe2
0xdd: JUMPI 0xe2 V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xe1]
---
Predecessors: [0xd7]
Successors: []
---
0xde PUSH1 0x0
0xe0 DUP1
0xe1 REVERT
---
0xde: V62 = 0x0
0xe1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe2
[0xe2:0xe9]
---
Predecessors: [0xd7]
Successors: [0x1fa]
---
0xe2 JUMPDEST
0xe3 PUSH2 0xea
0xe6 PUSH2 0x1fa
0xe9 JUMP
---
0xe2: JUMPDEST 
0xe3: V63 = 0xea
0xe6: V64 = 0x1fa
0xe9: JUMP 0x1fa
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xea]
Exit stack: [V11, 0xea]

================================

Block 0xea
[0xea:0xeb]
---
Predecessors: [0x413]
Successors: []
---
0xea JUMPDEST
0xeb STOP
---
0xea: JUMPDEST 
0xeb: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xec
[0xec:0xf2]
---
Predecessors: [0x57]
Successors: [0xf3, 0xf7]
---
0xec JUMPDEST
0xed CALLVALUE
0xee ISZERO
0xef PUSH2 0xf7
0xf2 JUMPI
---
0xec: JUMPDEST 
0xed: V65 = CALLVALUE
0xee: V66 = ISZERO V65
0xef: V67 = 0xf7
0xf2: JUMPI 0xf7 V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf3
[0xf3:0xf6]
---
Predecessors: [0xec]
Successors: []
---
0xf3 PUSH1 0x0
0xf5 DUP1
0xf6 REVERT
---
0xf3: V68 = 0x0
0xf6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf7
[0xf7:0xfe]
---
Predecessors: [0xec]
Successors: [0x416]
---
0xf7 JUMPDEST
0xf8 PUSH2 0xff
0xfb PUSH2 0x416
0xfe JUMP
---
0xf7: JUMPDEST 
0xf8: V69 = 0xff
0xfb: V70 = 0x416
0xfe: JUMP 0x416
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xff]
Exit stack: [V11, 0xff]

================================

Block 0xff
[0xff:0x140]
---
Predecessors: [0x416]
Successors: []
---
0xff JUMPDEST
0x100 PUSH1 0x40
0x102 MLOAD
0x103 DUP1
0x104 DUP3
0x105 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11a AND
0x11b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x130 AND
0x131 DUP2
0x132 MSTORE
0x133 PUSH1 0x20
0x135 ADD
0x136 SWAP2
0x137 POP
0x138 POP
0x139 PUSH1 0x40
0x13b MLOAD
0x13c DUP1
0x13d SWAP2
0x13e SUB
0x13f SWAP1
0x140 RETURN
---
0xff: JUMPDEST 
0x100: V71 = 0x40
0x102: V72 = M[0x40]
0x105: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x11b: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x130: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x132: M[V72] = V76
0x133: V77 = 0x20
0x135: V78 = ADD 0x20 V72
0x139: V79 = 0x40
0x13b: V80 = M[0x40]
0x13e: V81 = SUB V78 V80
0x140: RETURN V80 V81
---
Entry stack: [V11, 0xff, V255]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xff]

================================

Block 0x141
[0x141:0x147]
---
Predecessors: [0x62]
Successors: [0x148, 0x14c]
---
0x141 JUMPDEST
0x142 CALLVALUE
0x143 ISZERO
0x144 PUSH2 0x14c
0x147 JUMPI
---
0x141: JUMPDEST 
0x142: V82 = CALLVALUE
0x143: V83 = ISZERO V82
0x144: V84 = 0x14c
0x147: JUMPI 0x14c V83
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x148
[0x148:0x14b]
---
Predecessors: [0x141]
Successors: []
---
0x148 PUSH1 0x0
0x14a DUP1
0x14b REVERT
---
0x148: V85 = 0x0
0x14b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14c
[0x14c:0x153]
---
Predecessors: [0x141]
Successors: [0x43b]
---
0x14c JUMPDEST
0x14d PUSH2 0x154
0x150 PUSH2 0x43b
0x153 JUMP
---
0x14c: JUMPDEST 
0x14d: V86 = 0x154
0x150: V87 = 0x43b
0x153: JUMP 0x43b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x154]
Exit stack: [V11, 0x154]

================================

Block 0x154
[0x154:0x169]
---
Predecessors: [0x43b]
Successors: []
---
0x154 JUMPDEST
0x155 PUSH1 0x40
0x157 MLOAD
0x158 DUP1
0x159 DUP3
0x15a DUP2
0x15b MSTORE
0x15c PUSH1 0x20
0x15e ADD
0x15f SWAP2
0x160 POP
0x161 POP
0x162 PUSH1 0x40
0x164 MLOAD
0x165 DUP1
0x166 SWAP2
0x167 SUB
0x168 SWAP1
0x169 RETURN
---
0x154: JUMPDEST 
0x155: V88 = 0x40
0x157: V89 = M[0x40]
0x15b: M[V89] = V257
0x15c: V90 = 0x20
0x15e: V91 = ADD 0x20 V89
0x162: V92 = 0x40
0x164: V93 = M[0x40]
0x167: V94 = SUB V91 V93
0x169: RETURN V93 V94
---
Entry stack: [V11, 0x154, V257]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x154]

================================

Block 0x16a
[0x16a:0x171]
---
Predecessors: [0x6d]
Successors: [0x441]
---
0x16a JUMPDEST
0x16b PUSH2 0x172
0x16e PUSH2 0x441
0x171 JUMP
---
0x16a: JUMPDEST 
0x16b: V95 = 0x172
0x16e: V96 = 0x441
0x171: JUMP 0x441
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x172]
Exit stack: [V11, 0x172]

================================

Block 0x172
[0x172:0x173]
---
Predecessors: [0x493]
Successors: []
---
0x172 JUMPDEST
0x173 STOP
---
0x172: JUMPDEST 
0x173: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x174
[0x174:0x17a]
---
Predecessors: [0x78]
Successors: [0x17b, 0x17f]
---
0x174 JUMPDEST
0x175 CALLVALUE
0x176 ISZERO
0x177 PUSH2 0x17f
0x17a JUMPI
---
0x174: JUMPDEST 
0x175: V97 = CALLVALUE
0x176: V98 = ISZERO V97
0x177: V99 = 0x17f
0x17a: JUMPI 0x17f V98
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x17b
[0x17b:0x17e]
---
Predecessors: [0x174]
Successors: []
---
0x17b PUSH1 0x0
0x17d DUP1
0x17e REVERT
---
0x17b: V100 = 0x0
0x17e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x17f
[0x17f:0x1aa]
---
Predecessors: [0x174]
Successors: [0x4d8]
---
0x17f JUMPDEST
0x180 PUSH2 0x1ab
0x183 PUSH1 0x4
0x185 DUP1
0x186 DUP1
0x187 CALLDATALOAD
0x188 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19d AND
0x19e SWAP1
0x19f PUSH1 0x20
0x1a1 ADD
0x1a2 SWAP1
0x1a3 SWAP2
0x1a4 SWAP1
0x1a5 POP
0x1a6 POP
0x1a7 PUSH2 0x4d8
0x1aa JUMP
---
0x17f: JUMPDEST 
0x180: V101 = 0x1ab
0x183: V102 = 0x4
0x187: V103 = CALLDATALOAD 0x4
0x188: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x19d: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x19f: V106 = 0x20
0x1a1: V107 = ADD 0x20 0x4
0x1a7: V108 = 0x4d8
0x1aa: JUMP 0x4d8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1ab, V105]
Exit stack: [V11, 0x1ab, V105]

================================

Block 0x1ab
[0x1ab:0x1ac]
---
Predecessors: [0x56f]
Successors: []
---
0x1ab JUMPDEST
0x1ac STOP
---
0x1ab: JUMPDEST 
0x1ac: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ad
[0x1ad:0x1f3]
---
Predecessors: [0x90]
Successors: [0x98]
---
0x1ad JUMPDEST
0x1ae PUSH1 0x0
0x1b0 PUSH1 0x3
0x1b2 PUSH1 0x0
0x1b4 CALLER
0x1b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ca AND
0x1cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e0 AND
0x1e1 DUP2
0x1e2 MSTORE
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 SWAP1
0x1e7 DUP2
0x1e8 MSTORE
0x1e9 PUSH1 0x20
0x1eb ADD
0x1ec PUSH1 0x0
0x1ee SHA3
0x1ef SLOAD
0x1f0 SWAP1
0x1f1 POP
0x1f2 SWAP1
0x1f3 JUMP
---
0x1ad: JUMPDEST 
0x1ae: V109 = 0x0
0x1b0: V110 = 0x3
0x1b2: V111 = 0x0
0x1b4: V112 = CALLER
0x1b5: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x1cb: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e0: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x1e2: M[0x0] = V116
0x1e3: V117 = 0x20
0x1e5: V118 = ADD 0x20 0x0
0x1e8: M[0x20] = 0x3
0x1e9: V119 = 0x20
0x1eb: V120 = ADD 0x20 0x20
0x1ec: V121 = 0x0
0x1ee: V122 = SHA3 0x0 0x40
0x1ef: V123 = S[V122]
0x1f3: JUMP 0x98
---
Entry stack: [V11, 0x98]
Stack pops: 1
Stack additions: [V123]
Exit stack: [V11, V123]

================================

Block 0x1f4
[0x1f4:0x1f9]
---
Predecessors: [0xb9]
Successors: [0xc1]
---
0x1f4 JUMPDEST
0x1f5 PUSH1 0x1
0x1f7 SLOAD
0x1f8 DUP2
0x1f9 JUMP
---
0x1f4: JUMPDEST 
0x1f5: V124 = 0x1
0x1f7: V125 = S[0x1]
0x1f9: JUMP 0xc1
---
Entry stack: [V11, 0xc1]
Stack pops: 1
Stack additions: [S0, V125]
Exit stack: [V11, 0xc1, V125]

================================

Block 0x1fa
[0x1fa:0x248]
---
Predecessors: [0xe2]
Successors: [0x249, 0x38e]
---
0x1fa JUMPDEST
0x1fb PUSH1 0x0
0x1fd PUSH1 0x3
0x1ff PUSH1 0x0
0x201 CALLER
0x202 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x217 AND
0x218 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22d AND
0x22e DUP2
0x22f MSTORE
0x230 PUSH1 0x20
0x232 ADD
0x233 SWAP1
0x234 DUP2
0x235 MSTORE
0x236 PUSH1 0x20
0x238 ADD
0x239 PUSH1 0x0
0x23b SHA3
0x23c SLOAD
0x23d SWAP1
0x23e POP
0x23f PUSH1 0x1
0x241 SLOAD
0x242 TIMESTAMP
0x243 LT
0x244 ISZERO
0x245 PUSH2 0x38e
0x248 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V126 = 0x0
0x1fd: V127 = 0x3
0x1ff: V128 = 0x0
0x201: V129 = CALLER
0x202: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x217: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x218: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x22d: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x22f: M[0x0] = V133
0x230: V134 = 0x20
0x232: V135 = ADD 0x20 0x0
0x235: M[0x20] = 0x3
0x236: V136 = 0x20
0x238: V137 = ADD 0x20 0x20
0x239: V138 = 0x0
0x23b: V139 = SHA3 0x0 0x40
0x23c: V140 = S[V139]
0x23f: V141 = 0x1
0x241: V142 = S[0x1]
0x242: V143 = TIMESTAMP
0x243: V144 = LT V143 V142
0x244: V145 = ISZERO V144
0x245: V146 = 0x38e
0x248: JUMPI 0x38e V145
---
Entry stack: [V11, 0xea]
Stack pops: 0
Stack additions: [V140]
Exit stack: [V11, 0xea, V140]

================================

Block 0x249
[0x249:0x264]
---
Predecessors: [0x1fa]
Successors: [0x62d]
---
0x249 PUSH2 0x273
0x24c PUSH1 0x64
0x24e PUSH2 0x265
0x251 PUSH1 0x2
0x253 SLOAD
0x254 PUSH1 0x64
0x256 SUB
0x257 DUP5
0x258 PUSH2 0x62d
0x25b SWAP1
0x25c SWAP2
0x25d SWAP1
0x25e PUSH4 0xffffffff
0x263 AND
0x264 JUMP
---
0x249: V147 = 0x273
0x24c: V148 = 0x64
0x24e: V149 = 0x265
0x251: V150 = 0x2
0x253: V151 = S[0x2]
0x254: V152 = 0x64
0x256: V153 = SUB 0x64 V151
0x258: V154 = 0x62d
0x25e: V155 = 0xffffffff
0x263: V156 = AND 0xffffffff 0x62d
0x264: JUMP 0x62d
---
Entry stack: [V11, 0xea, V140]
Stack pops: 1
Stack additions: [S0, 0x273, 0x64, 0x265, S0, V153]
Exit stack: [V11, 0xea, V140, 0x273, 0x64, 0x265, V140, V153]

================================

Block 0x265
[0x265:0x272]
---
Predecessors: [0x661]
Successors: [0x668]
---
0x265 JUMPDEST
0x266 PUSH2 0x668
0x269 SWAP1
0x26a SWAP2
0x26b SWAP1
0x26c PUSH4 0xffffffff
0x271 AND
0x272 JUMP
---
0x265: JUMPDEST 
0x266: V157 = 0x668
0x26c: V158 = 0xffffffff
0x271: V159 = AND 0xffffffff 0x668
0x272: JUMP 0x668
---
Entry stack: [V11, 0xea, V140, 0x273, 0x64, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V11, 0xea, V140, 0x273, S0, 0x64]

================================

Block 0x273
[0x273:0x328]
---
Predecessors: [0x676]
Successors: [0x683]
---
0x273 JUMPDEST
0x274 SWAP1
0x275 POP
0x276 PUSH2 0x329
0x279 DUP2
0x27a PUSH1 0x3
0x27c PUSH1 0x0
0x27e CALLER
0x27f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x294 AND
0x295 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2aa AND
0x2ab DUP2
0x2ac MSTORE
0x2ad PUSH1 0x20
0x2af ADD
0x2b0 SWAP1
0x2b1 DUP2
0x2b2 MSTORE
0x2b3 PUSH1 0x20
0x2b5 ADD
0x2b6 PUSH1 0x0
0x2b8 SHA3
0x2b9 SLOAD
0x2ba SUB
0x2bb PUSH1 0x3
0x2bd PUSH1 0x0
0x2bf DUP1
0x2c0 PUSH1 0x0
0x2c2 SWAP1
0x2c3 SLOAD
0x2c4 SWAP1
0x2c5 PUSH2 0x100
0x2c8 EXP
0x2c9 SWAP1
0x2ca DIV
0x2cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e0 AND
0x2e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f6 AND
0x2f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30c AND
0x30d DUP2
0x30e MSTORE
0x30f PUSH1 0x20
0x311 ADD
0x312 SWAP1
0x313 DUP2
0x314 MSTORE
0x315 PUSH1 0x20
0x317 ADD
0x318 PUSH1 0x0
0x31a SHA3
0x31b SLOAD
0x31c PUSH2 0x683
0x31f SWAP1
0x320 SWAP2
0x321 SWAP1
0x322 PUSH4 0xffffffff
0x327 AND
0x328 JUMP
---
0x273: JUMPDEST 
0x276: V160 = 0x329
0x27a: V161 = 0x3
0x27c: V162 = 0x0
0x27e: V163 = CALLER
0x27f: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x294: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x295: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x2aa: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x2ac: M[0x0] = V167
0x2ad: V168 = 0x20
0x2af: V169 = ADD 0x20 0x0
0x2b2: M[0x20] = 0x3
0x2b3: V170 = 0x20
0x2b5: V171 = ADD 0x20 0x20
0x2b6: V172 = 0x0
0x2b8: V173 = SHA3 0x0 0x40
0x2b9: V174 = S[V173]
0x2ba: V175 = SUB V174 V367
0x2bb: V176 = 0x3
0x2bd: V177 = 0x0
0x2c0: V178 = 0x0
0x2c3: V179 = S[0x0]
0x2c5: V180 = 0x100
0x2c8: V181 = EXP 0x100 0x0
0x2ca: V182 = DIV V179 0x1
0x2cb: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e0: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x2e1: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f6: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x2f7: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x30c: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x30e: M[0x0] = V188
0x30f: V189 = 0x20
0x311: V190 = ADD 0x20 0x0
0x314: M[0x20] = 0x3
0x315: V191 = 0x20
0x317: V192 = ADD 0x20 0x20
0x318: V193 = 0x0
0x31a: V194 = SHA3 0x0 0x40
0x31b: V195 = S[V194]
0x31c: V196 = 0x683
0x322: V197 = 0xffffffff
0x327: V198 = AND 0xffffffff 0x683
0x328: JUMP 0x683
---
Entry stack: [V11, 0xea, V140, V367]
Stack pops: 2
Stack additions: [S0, 0x329, V195, V175]
Exit stack: [V11, 0xea, V367, 0x329, V195, V175]

================================

Block 0x329
[0x329:0x38d]
---
Predecessors: [0x697]
Successors: [0x38e]
---
0x329 JUMPDEST
0x32a PUSH1 0x3
0x32c PUSH1 0x0
0x32e DUP1
0x32f PUSH1 0x0
0x331 SWAP1
0x332 SLOAD
0x333 SWAP1
0x334 PUSH2 0x100
0x337 EXP
0x338 SWAP1
0x339 DIV
0x33a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34f AND
0x350 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x365 AND
0x366 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37b AND
0x37c DUP2
0x37d MSTORE
0x37e PUSH1 0x20
0x380 ADD
0x381 SWAP1
0x382 DUP2
0x383 MSTORE
0x384 PUSH1 0x20
0x386 ADD
0x387 PUSH1 0x0
0x389 SHA3
0x38a DUP2
0x38b SWAP1
0x38c SSTORE
0x38d POP
---
0x329: JUMPDEST 
0x32a: V199 = 0x3
0x32c: V200 = 0x0
0x32f: V201 = 0x0
0x332: V202 = S[0x0]
0x334: V203 = 0x100
0x337: V204 = EXP 0x100 0x0
0x339: V205 = DIV V202 0x1
0x33a: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x350: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x365: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x366: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x37b: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x37d: M[0x0] = V211
0x37e: V212 = 0x20
0x380: V213 = ADD 0x20 0x0
0x383: M[0x20] = 0x3
0x384: V214 = 0x20
0x386: V215 = ADD 0x20 0x20
0x387: V216 = 0x0
0x389: V217 = SHA3 0x0 0x40
0x38c: S[V217] = S0
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S2, S1]

================================

Block 0x38e
[0x38e:0x40e]
---
Predecessors: [0x1fa, 0x329]
Successors: [0x40f, 0x413]
---
0x38e JUMPDEST
0x38f PUSH1 0x0
0x391 PUSH1 0x3
0x393 PUSH1 0x0
0x395 CALLER
0x396 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ab AND
0x3ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c1 AND
0x3c2 DUP2
0x3c3 MSTORE
0x3c4 PUSH1 0x20
0x3c6 ADD
0x3c7 SWAP1
0x3c8 DUP2
0x3c9 MSTORE
0x3ca PUSH1 0x20
0x3cc ADD
0x3cd PUSH1 0x0
0x3cf SHA3
0x3d0 DUP2
0x3d1 SWAP1
0x3d2 SSTORE
0x3d3 POP
0x3d4 CALLER
0x3d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ea AND
0x3eb PUSH2 0x8fc
0x3ee DUP3
0x3ef SWAP1
0x3f0 DUP2
0x3f1 ISZERO
0x3f2 MUL
0x3f3 SWAP1
0x3f4 PUSH1 0x40
0x3f6 MLOAD
0x3f7 PUSH1 0x0
0x3f9 PUSH1 0x40
0x3fb MLOAD
0x3fc DUP1
0x3fd DUP4
0x3fe SUB
0x3ff DUP2
0x400 DUP6
0x401 DUP9
0x402 DUP9
0x403 CALL
0x404 SWAP4
0x405 POP
0x406 POP
0x407 POP
0x408 POP
0x409 ISZERO
0x40a ISZERO
0x40b PUSH2 0x413
0x40e JUMPI
---
0x38e: JUMPDEST 
0x38f: V218 = 0x0
0x391: V219 = 0x3
0x393: V220 = 0x0
0x395: V221 = CALLER
0x396: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x3ac: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c1: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x3c3: M[0x0] = V225
0x3c4: V226 = 0x20
0x3c6: V227 = ADD 0x20 0x0
0x3c9: M[0x20] = 0x3
0x3ca: V228 = 0x20
0x3cc: V229 = ADD 0x20 0x20
0x3cd: V230 = 0x0
0x3cf: V231 = SHA3 0x0 0x40
0x3d2: S[V231] = 0x0
0x3d4: V232 = CALLER
0x3d5: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ea: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x3eb: V235 = 0x8fc
0x3f1: V236 = ISZERO S0
0x3f2: V237 = MUL V236 0x8fc
0x3f4: V238 = 0x40
0x3f6: V239 = M[0x40]
0x3f7: V240 = 0x0
0x3f9: V241 = 0x40
0x3fb: V242 = M[0x40]
0x3fe: V243 = SUB V239 V242
0x403: V244 = CALL V237 V234 S0 V242 V243 V242 0x0
0x409: V245 = ISZERO V244
0x40a: V246 = ISZERO V245
0x40b: V247 = 0x413
0x40e: JUMPI 0x413 V246
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S1, S0]

================================

Block 0x40f
[0x40f:0x412]
---
Predecessors: [0x38e]
Successors: []
---
0x40f PUSH1 0x0
0x411 DUP1
0x412 REVERT
---
0x40f: V248 = 0x0
0x412: REVERT 0x0 0x0
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0x413
[0x413:0x415]
---
Predecessors: [0x38e]
Successors: [0xea]
---
0x413 JUMPDEST
0x414 POP
0x415 JUMP
---
0x413: JUMPDEST 
0x415: JUMP S1
---
Entry stack: [V11, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x416
[0x416:0x43a]
---
Predecessors: [0xf7]
Successors: [0xff]
---
0x416 JUMPDEST
0x417 PUSH1 0x0
0x419 DUP1
0x41a SWAP1
0x41b SLOAD
0x41c SWAP1
0x41d PUSH2 0x100
0x420 EXP
0x421 SWAP1
0x422 DIV
0x423 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x438 AND
0x439 DUP2
0x43a JUMP
---
0x416: JUMPDEST 
0x417: V249 = 0x0
0x41b: V250 = S[0x0]
0x41d: V251 = 0x100
0x420: V252 = EXP 0x100 0x0
0x422: V253 = DIV V250 0x1
0x423: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x438: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x43a: JUMP 0xff
---
Entry stack: [V11, 0xff]
Stack pops: 1
Stack additions: [S0, V255]
Exit stack: [V11, 0xff, V255]

================================

Block 0x43b
[0x43b:0x440]
---
Predecessors: [0x14c]
Successors: [0x154]
---
0x43b JUMPDEST
0x43c PUSH1 0x2
0x43e SLOAD
0x43f DUP2
0x440 JUMP
---
0x43b: JUMPDEST 
0x43c: V256 = 0x2
0x43e: V257 = S[0x2]
0x440: JUMP 0x154
---
Entry stack: [V11, 0x154]
Stack pops: 1
Stack additions: [S0, V257]
Exit stack: [V11, 0x154, V257]

================================

Block 0x441
[0x441:0x492]
---
Predecessors: [0x16a]
Successors: [0x683]
---
0x441 JUMPDEST
0x442 PUSH2 0x493
0x445 CALLVALUE
0x446 PUSH1 0x3
0x448 PUSH1 0x0
0x44a CALLER
0x44b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x460 AND
0x461 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x476 AND
0x477 DUP2
0x478 MSTORE
0x479 PUSH1 0x20
0x47b ADD
0x47c SWAP1
0x47d DUP2
0x47e MSTORE
0x47f PUSH1 0x20
0x481 ADD
0x482 PUSH1 0x0
0x484 SHA3
0x485 SLOAD
0x486 PUSH2 0x683
0x489 SWAP1
0x48a SWAP2
0x48b SWAP1
0x48c PUSH4 0xffffffff
0x491 AND
0x492 JUMP
---
0x441: JUMPDEST 
0x442: V258 = 0x493
0x445: V259 = CALLVALUE
0x446: V260 = 0x3
0x448: V261 = 0x0
0x44a: V262 = CALLER
0x44b: V263 = 0xffffffffffffffffffffffffffffffffffffffff
0x460: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x461: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x476: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x478: M[0x0] = V266
0x479: V267 = 0x20
0x47b: V268 = ADD 0x20 0x0
0x47e: M[0x20] = 0x3
0x47f: V269 = 0x20
0x481: V270 = ADD 0x20 0x20
0x482: V271 = 0x0
0x484: V272 = SHA3 0x0 0x40
0x485: V273 = S[V272]
0x486: V274 = 0x683
0x48c: V275 = 0xffffffff
0x491: V276 = AND 0xffffffff 0x683
0x492: JUMP 0x683
---
Entry stack: [V11, 0x172]
Stack pops: 0
Stack additions: [0x493, V273, V259]
Exit stack: [V11, 0x172, 0x493, V273, V259]

================================

Block 0x493
[0x493:0x4d7]
---
Predecessors: [0x697]
Successors: [0x172]
---
0x493 JUMPDEST
0x494 PUSH1 0x3
0x496 PUSH1 0x0
0x498 CALLER
0x499 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ae AND
0x4af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c4 AND
0x4c5 DUP2
0x4c6 MSTORE
0x4c7 PUSH1 0x20
0x4c9 ADD
0x4ca SWAP1
0x4cb DUP2
0x4cc MSTORE
0x4cd PUSH1 0x20
0x4cf ADD
0x4d0 PUSH1 0x0
0x4d2 SHA3
0x4d3 DUP2
0x4d4 SWAP1
0x4d5 SSTORE
0x4d6 POP
0x4d7 JUMP
---
0x493: JUMPDEST 
0x494: V277 = 0x3
0x496: V278 = 0x0
0x498: V279 = CALLER
0x499: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ae: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x4af: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c4: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x4c6: M[0x0] = V283
0x4c7: V284 = 0x20
0x4c9: V285 = ADD 0x20 0x0
0x4cc: M[0x20] = 0x3
0x4cd: V286 = 0x20
0x4cf: V287 = ADD 0x20 0x20
0x4d0: V288 = 0x0
0x4d2: V289 = SHA3 0x0 0x40
0x4d5: S[V289] = S0
0x4d7: JUMP S1
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, S2]

================================

Block 0x4d8
[0x4d8:0x52e]
---
Predecessors: [0x17f]
Successors: [0x52f, 0x533]
---
0x4d8 JUMPDEST
0x4d9 PUSH1 0x0
0x4db DUP1
0x4dc SWAP1
0x4dd SLOAD
0x4de SWAP1
0x4df PUSH2 0x100
0x4e2 EXP
0x4e3 SWAP1
0x4e4 DIV
0x4e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fa AND
0x4fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x510 AND
0x511 CALLER
0x512 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x527 AND
0x528 EQ
0x529 ISZERO
0x52a ISZERO
0x52b PUSH2 0x533
0x52e JUMPI
---
0x4d8: JUMPDEST 
0x4d9: V290 = 0x0
0x4dd: V291 = S[0x0]
0x4df: V292 = 0x100
0x4e2: V293 = EXP 0x100 0x0
0x4e4: V294 = DIV V291 0x1
0x4e5: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fa: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x4fb: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x510: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x511: V299 = CALLER
0x512: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x527: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x528: V302 = EQ V301 V298
0x529: V303 = ISZERO V302
0x52a: V304 = ISZERO V303
0x52b: V305 = 0x533
0x52e: JUMPI 0x533 V304
---
Entry stack: [V11, 0x1ab, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ab, V105]

================================

Block 0x52f
[0x52f:0x532]
---
Predecessors: [0x4d8]
Successors: []
---
0x52f PUSH1 0x0
0x531 DUP1
0x532 REVERT
---
0x52f: V306 = 0x0
0x532: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ab, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ab, V105]

================================

Block 0x533
[0x533:0x56a]
---
Predecessors: [0x4d8]
Successors: [0x56b, 0x56f]
---
0x533 JUMPDEST
0x534 PUSH1 0x0
0x536 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54b AND
0x54c DUP2
0x54d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x562 AND
0x563 EQ
0x564 ISZERO
0x565 ISZERO
0x566 ISZERO
0x567 PUSH2 0x56f
0x56a JUMPI
---
0x533: JUMPDEST 
0x534: V307 = 0x0
0x536: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x54b: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x54d: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x562: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x563: V312 = EQ V311 0x0
0x564: V313 = ISZERO V312
0x565: V314 = ISZERO V313
0x566: V315 = ISZERO V314
0x567: V316 = 0x56f
0x56a: JUMPI 0x56f V315
---
Entry stack: [V11, 0x1ab, V105]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1ab, V105]

================================

Block 0x56b
[0x56b:0x56e]
---
Predecessors: [0x533]
Successors: []
---
0x56b PUSH1 0x0
0x56d DUP1
0x56e REVERT
---
0x56b: V317 = 0x0
0x56e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1ab, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1ab, V105]

================================

Block 0x56f
[0x56f:0x62c]
---
Predecessors: [0x533]
Successors: [0x1ab]
---
0x56f JUMPDEST
0x570 DUP1
0x571 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x586 AND
0x587 PUSH1 0x0
0x589 DUP1
0x58a SWAP1
0x58b SLOAD
0x58c SWAP1
0x58d PUSH2 0x100
0x590 EXP
0x591 SWAP1
0x592 DIV
0x593 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a8 AND
0x5a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5be AND
0x5bf PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x5e0 PUSH1 0x40
0x5e2 MLOAD
0x5e3 PUSH1 0x40
0x5e5 MLOAD
0x5e6 DUP1
0x5e7 SWAP2
0x5e8 SUB
0x5e9 SWAP1
0x5ea LOG3
0x5eb DUP1
0x5ec PUSH1 0x0
0x5ee DUP1
0x5ef PUSH2 0x100
0x5f2 EXP
0x5f3 DUP2
0x5f4 SLOAD
0x5f5 DUP2
0x5f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60b MUL
0x60c NOT
0x60d AND
0x60e SWAP1
0x60f DUP4
0x610 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x625 AND
0x626 MUL
0x627 OR
0x628 SWAP1
0x629 SSTORE
0x62a POP
0x62b POP
0x62c JUMP
---
0x56f: JUMPDEST 
0x571: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x586: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x587: V320 = 0x0
0x58b: V321 = S[0x0]
0x58d: V322 = 0x100
0x590: V323 = EXP 0x100 0x0
0x592: V324 = DIV V321 0x1
0x593: V325 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a8: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x5a9: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x5be: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x5bf: V329 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x5e0: V330 = 0x40
0x5e2: V331 = M[0x40]
0x5e3: V332 = 0x40
0x5e5: V333 = M[0x40]
0x5e8: V334 = SUB V331 V333
0x5ea: LOG V333 V334 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V328 V319
0x5ec: V335 = 0x0
0x5ef: V336 = 0x100
0x5f2: V337 = EXP 0x100 0x0
0x5f4: V338 = S[0x0]
0x5f6: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x60b: V340 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x60c: V341 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x60d: V342 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V338
0x610: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x625: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x626: V345 = MUL V344 0x1
0x627: V346 = OR V345 V342
0x629: S[0x0] = V346
0x62c: JUMP 0x1ab
---
Entry stack: [V11, 0x1ab, V105]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x62d
[0x62d:0x639]
---
Predecessors: [0x249]
Successors: [0x63a, 0x642]
---
0x62d JUMPDEST
0x62e PUSH1 0x0
0x630 DUP1
0x631 PUSH1 0x0
0x633 DUP5
0x634 EQ
0x635 ISZERO
0x636 PUSH2 0x642
0x639 JUMPI
---
0x62d: JUMPDEST 
0x62e: V347 = 0x0
0x631: V348 = 0x0
0x634: V349 = EQ V140 0x0
0x635: V350 = ISZERO V349
0x636: V351 = 0x642
0x639: JUMPI 0x642 V350
---
Entry stack: [V11, 0xea, V140, 0x273, 0x64, 0x265, V140, V153]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, 0xea, V140, 0x273, 0x64, 0x265, V140, V153, 0x0, 0x0]

================================

Block 0x63a
[0x63a:0x641]
---
Predecessors: [0x62d]
Successors: [0x661]
---
0x63a PUSH1 0x0
0x63c SWAP2
0x63d POP
0x63e PUSH2 0x661
0x641 JUMP
---
0x63a: V352 = 0x0
0x63e: V353 = 0x661
0x641: JUMP 0x661
---
Entry stack: [V11, 0xea, V140, 0x273, 0x64, 0x265, V140, V153, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0xea, V140, 0x273, 0x64, 0x265, V140, V153, 0x0, 0x0]

================================

Block 0x642
[0x642:0x651]
---
Predecessors: [0x62d]
Successors: [0x652, 0x653]
---
0x642 JUMPDEST
0x643 DUP3
0x644 DUP5
0x645 MUL
0x646 SWAP1
0x647 POP
0x648 DUP3
0x649 DUP5
0x64a DUP3
0x64b DUP2
0x64c ISZERO
0x64d ISZERO
0x64e PUSH2 0x653
0x651 JUMPI
---
0x642: JUMPDEST 
0x645: V354 = MUL V140 V153
0x64c: V355 = ISZERO V140
0x64d: V356 = ISZERO V355
0x64e: V357 = 0x653
0x651: JUMPI 0x653 V356
---
Entry stack: [V11, 0xea, V140, 0x273, 0x64, 0x265, V140, V153, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V354, S2, S3, V354]
Exit stack: [V11, 0xea, V140, 0x273, 0x64, 0x265, V140, V153, 0x0, V354, V153, V140, V354]

================================

Block 0x652
[0x652:0x652]
---
Predecessors: [0x642]
Successors: []
---
0x652 INVALID
---
0x652: INVALID 
---
Entry stack: [V11, 0xea, V140, 0x273, 0x64, 0x265, V140, V153, 0x0, V354, V153, V140, V354]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xea, V140, 0x273, 0x64, 0x265, V140, V153, 0x0, V354, V153, V140, V354]

================================

Block 0x653
[0x653:0x65b]
---
Predecessors: [0x642]
Successors: [0x65c, 0x65d]
---
0x653 JUMPDEST
0x654 DIV
0x655 EQ
0x656 ISZERO
0x657 ISZERO
0x658 PUSH2 0x65d
0x65b JUMPI
---
0x653: JUMPDEST 
0x654: V358 = DIV V354 V140
0x655: V359 = EQ V358 V153
0x656: V360 = ISZERO V359
0x657: V361 = ISZERO V360
0x658: V362 = 0x65d
0x65b: JUMPI 0x65d V361
---
Entry stack: [V11, 0xea, V140, 0x273, 0x64, 0x265, V140, V153, 0x0, V354, V153, V140, V354]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xea, V140, 0x273, 0x64, 0x265, V140, V153, 0x0, V354]

================================

Block 0x65c
[0x65c:0x65c]
---
Predecessors: [0x653]
Successors: []
---
0x65c INVALID
---
0x65c: INVALID 
---
Entry stack: [V11, 0xea, V140, 0x273, 0x64, 0x265, V140, V153, 0x0, V354]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xea, V140, 0x273, 0x64, 0x265, V140, V153, 0x0, V354]

================================

Block 0x65d
[0x65d:0x660]
---
Predecessors: [0x653]
Successors: [0x661]
---
0x65d JUMPDEST
0x65e DUP1
0x65f SWAP2
0x660 POP
---
0x65d: JUMPDEST 
---
Entry stack: [V11, 0xea, V140, 0x273, 0x64, 0x265, V140, V153, 0x0, V354]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V11, 0xea, V140, 0x273, 0x64, 0x265, V140, V153, V354, V354]

================================

Block 0x661
[0x661:0x667]
---
Predecessors: [0x63a, 0x65d]
Successors: [0x265]
---
0x661 JUMPDEST
0x662 POP
0x663 SWAP3
0x664 SWAP2
0x665 POP
0x666 POP
0x667 JUMP
---
0x661: JUMPDEST 
0x667: JUMP 0x265
---
Entry stack: [V11, 0xea, V140, 0x273, 0x64, 0x265, V140, V153, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, 0xea, V140, 0x273, 0x64, S1]

================================

Block 0x668
[0x668:0x674]
---
Predecessors: [0x265]
Successors: [0x675, 0x676]
---
0x668 JUMPDEST
0x669 PUSH1 0x0
0x66b DUP1
0x66c DUP3
0x66d DUP5
0x66e DUP2
0x66f ISZERO
0x670 ISZERO
0x671 PUSH2 0x676
0x674 JUMPI
---
0x668: JUMPDEST 
0x669: V363 = 0x0
0x66f: V364 = ISZERO 0x64
0x670: V365 = ISZERO 0x0
0x671: V366 = 0x676
0x674: JUMPI 0x676 0x1
---
Entry stack: [V11, 0xea, V140, 0x273, S1, 0x64]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V11, 0xea, V140, 0x273, S1, 0x64, 0x0, 0x0, 0x64, S1]

================================

Block 0x675
[0x675:0x675]
---
Predecessors: [0x668]
Successors: []
---
0x675 INVALID
---
0x675: INVALID 
---
Entry stack: [V11, 0xea, V140, 0x273, S5, 0x64, 0x0, 0x0, 0x64, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xea, V140, 0x273, S5, 0x64, 0x0, 0x0, 0x64, S0]

================================

Block 0x676
[0x676:0x682]
---
Predecessors: [0x668]
Successors: [0x273]
---
0x676 JUMPDEST
0x677 DIV
0x678 SWAP1
0x679 POP
0x67a DUP1
0x67b SWAP2
0x67c POP
0x67d POP
0x67e SWAP3
0x67f SWAP2
0x680 POP
0x681 POP
0x682 JUMP
---
0x676: JUMPDEST 
0x677: V367 = DIV S0 0x64
0x682: JUMP 0x273
---
Entry stack: [V11, 0xea, V140, 0x273, S5, 0x64, 0x0, 0x0, 0x64, S0]
Stack pops: 7
Stack additions: [V367]
Exit stack: [V11, 0xea, V140, V367]

================================

Block 0x683
[0x683:0x695]
---
Predecessors: [0x273, 0x441]
Successors: [0x696, 0x697]
---
0x683 JUMPDEST
0x684 PUSH1 0x0
0x686 DUP1
0x687 DUP3
0x688 DUP5
0x689 ADD
0x68a SWAP1
0x68b POP
0x68c DUP4
0x68d DUP2
0x68e LT
0x68f ISZERO
0x690 ISZERO
0x691 ISZERO
0x692 PUSH2 0x697
0x695 JUMPI
---
0x683: JUMPDEST 
0x684: V368 = 0x0
0x689: V369 = ADD S1 S0
0x68e: V370 = LT V369 S1
0x68f: V371 = ISZERO V370
0x690: V372 = ISZERO V371
0x691: V373 = ISZERO V372
0x692: V374 = 0x697
0x695: JUMPI 0x697 V373
---
Entry stack: [V11, S4, S3, {0x329, 0x493}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V369]
Exit stack: [V11, S4, S3, {0x329, 0x493}, S1, S0, 0x0, V369]

================================

Block 0x696
[0x696:0x696]
---
Predecessors: [0x683]
Successors: []
---
0x696 INVALID
---
0x696: INVALID 
---
Entry stack: [V11, S6, S5, {0x329, 0x493}, S3, S2, 0x0, V369]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S6, S5, {0x329, 0x493}, S3, S2, 0x0, V369]

================================

Block 0x697
[0x697:0x6a0]
---
Predecessors: [0x683]
Successors: [0x329, 0x493]
---
0x697 JUMPDEST
0x698 DUP1
0x699 SWAP2
0x69a POP
0x69b POP
0x69c SWAP3
0x69d SWAP2
0x69e POP
0x69f POP
0x6a0 JUMP
---
0x697: JUMPDEST 
0x6a0: JUMP {0x329, 0x493}
---
Entry stack: [V11, S6, S5, {0x329, 0x493}, S3, S2, 0x0, V369]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, S6, S5, V369]

================================

Block 0x6a1
[0x6a1:0x6d8]
---
Predecessors: []
Successors: []
---
0x6a1 STOP
0x6a2 LOG1
0x6a3 PUSH6 0x627a7a723058
0x6aa SHA3
0x6ab DUP13
0x6ac MISSING 0xd1
0x6ad MISSING 0xa6
0x6ae PUSH6 0x3f7f3aa87e3b
0x6b5 MISSING 0x47
0x6b6 CREATE2
0x6b7 GASPRICE
0x6b8 MISSING 0xd1
0x6b9 CREATE
0x6ba MISSING 0x4a
0x6bb PUSH29 0xa2e58f19925fa6b7384938c63bb39a0029
---
0x6a1: STOP 
0x6a2: LOG S0 S1 S2
0x6a3: V375 = 0x627a7a723058
0x6aa: V376 = SHA3 0x627a7a723058 S3
0x6ac: MISSING 0xd1
0x6ad: MISSING 0xa6
0x6ae: V377 = 0x3f7f3aa87e3b
0x6b5: MISSING 0x47
0x6b6: V378 = CREATE2 S0 S1 S2 S3
0x6b7: V379 = GASPRICE
0x6b8: MISSING 0xd1
0x6b9: V380 = CREATE S0 S1 S2
0x6ba: MISSING 0x4a
0x6bb: V381 = 0xa2e58f19925fa6b7384938c63bb39a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S15, V376, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, 0x3f7f3aa87e3b, V379, V378, V380, 0xa2e58f19925fa6b7384938c63bb39a0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x12065fe0
Entry block: 0x85
Exit block: 0x98
Body: 0x85, 0x8c, 0x90, 0x98, 0x1ad

Function 1:
Public function signature: 0x389eb9f9
Entry block: 0xae
Exit block: 0xc1
Body: 0xae, 0xb5, 0xb9, 0xc1, 0x1f4

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0xd7
Exit block: 0x675
Body: 0xd7, 0xde, 0xe2, 0xea, 0x1fa, 0x249, 0x265, 0x273, 0x329, 0x38e, 0x40f, 0x413, 0x62d, 0x63a, 0x642, 0x652, 0x653, 0x65c, 0x65d, 0x661, 0x668, 0x675, 0x676

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xec
Exit block: 0xff
Body: 0xec, 0xf3, 0xf7, 0xff, 0x416

Function 4:
Public function signature: 0xc947db81
Entry block: 0x141
Exit block: 0x154
Body: 0x141, 0x148, 0x14c, 0x154, 0x43b

Function 5:
Public function signature: 0xd0e30db0
Entry block: 0x16a
Exit block: 0x172
Body: 0x16a, 0x172, 0x441, 0x493

Function 6:
Public function signature: 0xf2fde38b
Entry block: 0x174
Exit block: 0x1ab
Body: 0x174, 0x17b, 0x17f, 0x1ab, 0x4d8, 0x52f, 0x533, 0x56b, 0x56f

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0x83
Body: 0x83

Function 8:
Private function
Entry block: 0x683
Exit block: 0x697
Body: 0x683, 0x697

