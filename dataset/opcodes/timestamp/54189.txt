Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xbf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xbf
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xbf
0xa: JUMPI 0xbf V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x25e]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x1cb3b20
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x25e
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x1cb3b20
0x20: V14 = EQ V12 0x1cb3b20
0x21: V15 = 0x25e
0x24: JUMPI 0x25e V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x273]
---
0x25 DUP1
0x26 PUSH4 0x29dcb0cf
0x2b EQ
0x2c PUSH2 0x273
0x2f JUMPI
---
0x26: V16 = 0x29dcb0cf
0x2b: V17 = EQ 0x29dcb0cf V12
0x2c: V18 = 0x273
0x2f: JUMPI 0x273 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x298]
---
0x30 DUP1
0x31 PUSH4 0x3197cbb6
0x36 EQ
0x37 PUSH2 0x298
0x3a JUMPI
---
0x31: V19 = 0x3197cbb6
0x36: V20 = EQ 0x3197cbb6 V12
0x37: V21 = 0x298
0x3a: JUMPI 0x298 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x2bd]
---
0x3b DUP1
0x3c PUSH4 0x38af3eed
0x41 EQ
0x42 PUSH2 0x2bd
0x45 JUMPI
---
0x3c: V22 = 0x38af3eed
0x41: V23 = EQ 0x38af3eed V12
0x42: V24 = 0x2bd
0x45: JUMPI 0x2bd V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x2ec]
---
0x46 DUP1
0x47 PUSH4 0x6d320b17
0x4c EQ
0x4d PUSH2 0x2ec
0x50 JUMPI
---
0x47: V25 = 0x6d320b17
0x4c: V26 = EQ 0x6d320b17 V12
0x4d: V27 = 0x2ec
0x50: JUMPI 0x2ec V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x311]
---
0x51 DUP1
0x52 PUSH4 0x6e66f6e9
0x57 EQ
0x58 PUSH2 0x311
0x5b JUMPI
---
0x52: V28 = 0x6e66f6e9
0x57: V29 = EQ 0x6e66f6e9 V12
0x58: V30 = 0x311
0x5b: JUMPI 0x311 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x340]
---
0x5c DUP1
0x5d PUSH4 0x70a08231
0x62 EQ
0x63 PUSH2 0x340
0x66 JUMPI
---
0x5d: V31 = 0x70a08231
0x62: V32 = EQ 0x70a08231 V12
0x63: V33 = 0x340
0x66: JUMPI 0x340 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x371]
---
0x67 DUP1
0x68 PUSH4 0x74f12933
0x6d EQ
0x6e PUSH2 0x371
0x71 JUMPI
---
0x68: V34 = 0x74f12933
0x6d: V35 = EQ 0x74f12933 V12
0x6e: V36 = 0x371
0x71: JUMPI 0x371 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x398]
---
0x72 DUP1
0x73 PUSH4 0x78e97925
0x78 EQ
0x79 PUSH2 0x398
0x7c JUMPI
---
0x73: V37 = 0x78e97925
0x78: V38 = EQ 0x78e97925 V12
0x79: V39 = 0x398
0x7c: JUMPI 0x398 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x3bd]
---
0x7d DUP1
0x7e PUSH4 0x7a3a0e84
0x83 EQ
0x84 PUSH2 0x3bd
0x87 JUMPI
---
0x7e: V40 = 0x7a3a0e84
0x83: V41 = EQ 0x7a3a0e84 V12
0x84: V42 = 0x3bd
0x87: JUMPI 0x3bd V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x3e2]
---
0x88 DUP1
0x89 PUSH4 0x7b3e5e7b
0x8e EQ
0x8f PUSH2 0x3e2
0x92 JUMPI
---
0x89: V43 = 0x7b3e5e7b
0x8e: V44 = EQ 0x7b3e5e7b V12
0x8f: V45 = 0x3e2
0x92: JUMPI 0x3e2 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x407]
---
0x93 DUP1
0x94 PUSH4 0xa035b1fe
0x99 EQ
0x9a PUSH2 0x407
0x9d JUMPI
---
0x94: V46 = 0xa035b1fe
0x99: V47 = EQ 0xa035b1fe V12
0x9a: V48 = 0x407
0x9d: JUMPI 0x407 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x42c]
---
0x9e DUP1
0x9f PUSH4 0xda09c72c
0xa4 EQ
0xa5 PUSH2 0x42c
0xa8 JUMPI
---
0x9f: V49 = 0xda09c72c
0xa4: V50 = EQ 0xda09c72c V12
0xa5: V51 = 0x42c
0xa8: JUMPI 0x42c V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x45b]
---
0xa9 DUP1
0xaa PUSH4 0xecb70fb7
0xaf EQ
0xb0 PUSH2 0x45b
0xb3 JUMPI
---
0xaa: V52 = 0xecb70fb7
0xaf: V53 = EQ 0xecb70fb7 V12
0xb0: V54 = 0x45b
0xb3: JUMPI 0x45b V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x482]
---
0xb4 DUP1
0xb5 PUSH4 0xfd6b7ef8
0xba EQ
0xbb PUSH2 0x482
0xbe JUMPI
---
0xb5: V55 = 0xfd6b7ef8
0xba: V56 = EQ 0xfd6b7ef8 V12
0xbb: V57 = 0x482
0xbe: JUMPI 0x482 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0x0, 0xb4]
Successors: [0xc3]
---
0xbf JUMPDEST
0xc0 PUSH2 0x25c
---
0xbf: JUMPDEST 
0xc0: V58 = 0x25c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x25c]
Exit stack: [V12, 0x25c]

================================

Block 0xc3
[0xc3:0xcd]
---
Predecessors: [0xbf]
Successors: [0x497]
---
0xc3 JUMPDEST
0xc4 PUSH1 0x0
0xc6 DUP1
0xc7 PUSH2 0xce
0xca PUSH2 0x497
0xcd JUMP
---
0xc3: JUMPDEST 
0xc4: V59 = 0x0
0xc7: V60 = 0xce
0xca: V61 = 0x497
0xcd: JUMP 0x497
---
Entry stack: [V12, 0x25c]
Stack pops: 0
Stack additions: [0x0, 0x0, 0xce]
Exit stack: [V12, 0x25c, 0x0, 0x0, 0xce]

================================

Block 0xce
[0xce:0xd4]
---
Predecessors: [0x4c3]
Successors: [0xd5, 0xd9]
---
0xce JUMPDEST
0xcf ISZERO
0xd0 ISZERO
0xd1 PUSH2 0xd9
0xd4 JUMPI
---
0xce: JUMPDEST 
0xcf: V62 = ISZERO S0
0xd0: V63 = ISZERO V62
0xd1: V64 = 0xd9
0xd4: JUMPI 0xd9 V63
---
Entry stack: [V12, 0x25c, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x25c, 0x0, 0x0]

================================

Block 0xd5
[0xd5:0xd8]
---
Predecessors: [0xce]
Successors: []
---
0xd5 PUSH1 0x0
0xd7 DUP1
0xd8 REVERT
---
0xd5: V65 = 0x0
0xd8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x25c, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, 0x0, 0x0]

================================

Block 0xd9
[0xd9:0xe3]
---
Predecessors: [0xce]
Successors: [0xe4, 0xe8]
---
0xd9 JUMPDEST
0xda PUSH1 0x5
0xdc SLOAD
0xdd CALLVALUE
0xde LT
0xdf ISZERO
0xe0 PUSH2 0xe8
0xe3 JUMPI
---
0xd9: JUMPDEST 
0xda: V66 = 0x5
0xdc: V67 = S[0x5]
0xdd: V68 = CALLVALUE
0xde: V69 = LT V68 V67
0xdf: V70 = ISZERO V69
0xe0: V71 = 0xe8
0xe3: JUMPI 0xe8 V70
---
Entry stack: [V12, 0x25c, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, 0x0, 0x0]

================================

Block 0xe4
[0xe4:0xe7]
---
Predecessors: [0xd9]
Successors: []
---
0xe4 PUSH1 0x0
0xe6 DUP1
0xe7 REVERT
---
0xe4: V72 = 0x0
0xe7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x25c, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, 0x0, 0x0]

================================

Block 0xe8
[0xe8:0xfd]
---
Predecessors: [0xd9]
Successors: [0xfe, 0xff]
---
0xe8 JUMPDEST
0xe9 CALLVALUE
0xea SWAP2
0xeb POP
0xec PUSH1 0x4
0xee SLOAD
0xef DUP3
0xf0 PUSH5 0x2540be400
0xf6 MUL
0xf7 DUP2
0xf8 ISZERO
0xf9 ISZERO
0xfa PUSH2 0xff
0xfd JUMPI
---
0xe8: JUMPDEST 
0xe9: V73 = CALLVALUE
0xec: V74 = 0x4
0xee: V75 = S[0x4]
0xf0: V76 = 0x2540be400
0xf6: V77 = MUL 0x2540be400 V73
0xf8: V78 = ISZERO V75
0xf9: V79 = ISZERO V78
0xfa: V80 = 0xff
0xfd: JUMPI 0xff V79
---
Entry stack: [V12, 0x25c, 0x0, 0x0]
Stack pops: 2
Stack additions: [V73, S0, V75, V77]
Exit stack: [V12, 0x25c, V73, 0x0, V75, V77]

================================

Block 0xfe
[0xfe:0xfe]
---
Predecessors: [0xe8]
Successors: []
---
0xfe INVALID
---
0xfe: INVALID 
---
Entry stack: [V12, 0x25c, V73, 0x0, V75, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, V73, 0x0, V75, V77]

================================

Block 0xff
[0xff:0x15a]
---
Predecessors: [0xe8]
Successors: [0x15b, 0x15f]
---
0xff JUMPDEST
0x100 PUSH1 0x7
0x102 SLOAD
0x103 SWAP2
0x104 SWAP1
0x105 DIV
0x106 SWAP2
0x107 POP
0x108 DUP2
0x109 SWAP1
0x10a PUSH1 0x1
0x10c PUSH1 0xa0
0x10e PUSH1 0x2
0x110 EXP
0x111 SUB
0x112 AND
0x113 PUSH4 0x70a08231
0x118 ADDRESS
0x119 PUSH1 0x0
0x11b PUSH1 0x40
0x11d MLOAD
0x11e PUSH1 0x20
0x120 ADD
0x121 MSTORE
0x122 PUSH1 0x40
0x124 MLOAD
0x125 PUSH1 0xe0
0x127 PUSH1 0x2
0x129 EXP
0x12a PUSH4 0xffffffff
0x12f DUP5
0x130 AND
0x131 MUL
0x132 DUP2
0x133 MSTORE
0x134 PUSH1 0x1
0x136 PUSH1 0xa0
0x138 PUSH1 0x2
0x13a EXP
0x13b SUB
0x13c SWAP1
0x13d SWAP2
0x13e AND
0x13f PUSH1 0x4
0x141 DUP3
0x142 ADD
0x143 MSTORE
0x144 PUSH1 0x24
0x146 ADD
0x147 PUSH1 0x20
0x149 PUSH1 0x40
0x14b MLOAD
0x14c DUP1
0x14d DUP4
0x14e SUB
0x14f DUP2
0x150 PUSH1 0x0
0x152 DUP8
0x153 DUP1
0x154 EXTCODESIZE
0x155 ISZERO
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0xff: JUMPDEST 
0x100: V81 = 0x7
0x102: V82 = S[0x7]
0x105: V83 = DIV V77 V75
0x10a: V84 = 0x1
0x10c: V85 = 0xa0
0x10e: V86 = 0x2
0x110: V87 = EXP 0x2 0xa0
0x111: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0x112: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x113: V90 = 0x70a08231
0x118: V91 = ADDRESS
0x119: V92 = 0x0
0x11b: V93 = 0x40
0x11d: V94 = M[0x40]
0x11e: V95 = 0x20
0x120: V96 = ADD 0x20 V94
0x121: M[V96] = 0x0
0x122: V97 = 0x40
0x124: V98 = M[0x40]
0x125: V99 = 0xe0
0x127: V100 = 0x2
0x129: V101 = EXP 0x2 0xe0
0x12a: V102 = 0xffffffff
0x130: V103 = AND 0x70a08231 0xffffffff
0x131: V104 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x133: M[V98] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x134: V105 = 0x1
0x136: V106 = 0xa0
0x138: V107 = 0x2
0x13a: V108 = EXP 0x2 0xa0
0x13b: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13e: V110 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0x13f: V111 = 0x4
0x142: V112 = ADD V98 0x4
0x143: M[V112] = V110
0x144: V113 = 0x24
0x146: V114 = ADD 0x24 V98
0x147: V115 = 0x20
0x149: V116 = 0x40
0x14b: V117 = M[0x40]
0x14e: V118 = SUB V114 V117
0x150: V119 = 0x0
0x154: V120 = EXTCODESIZE V89
0x155: V121 = ISZERO V120
0x156: V122 = ISZERO V121
0x157: V123 = 0x15f
0x15a: JUMPI 0x15f V122
---
Entry stack: [V12, 0x25c, V73, 0x0, V75, V77]
Stack pops: 3
Stack additions: [V83, V83, V89, 0x70a08231, V114, 0x20, V117, V118, V117, 0x0, V89]
Exit stack: [V12, 0x25c, V73, V83, V83, V89, 0x70a08231, V114, 0x20, V117, V118, V117, 0x0, V89]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0xff]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V124 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x25c, V73, V83, V83, V89, 0x70a08231, V114, 0x20, V117, V118, V117, 0x0, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, V73, V83, V83, V89, 0x70a08231, V114, 0x20, V117, V118, V117, 0x0, V89]

================================

Block 0x15f
[0x15f:0x16b]
---
Predecessors: [0xff]
Successors: [0x16c, 0x170]
---
0x15f JUMPDEST
0x160 PUSH2 0x2c6
0x163 GAS
0x164 SUB
0x165 CALL
0x166 ISZERO
0x167 ISZERO
0x168 PUSH2 0x170
0x16b JUMPI
---
0x15f: JUMPDEST 
0x160: V125 = 0x2c6
0x163: V126 = GAS
0x164: V127 = SUB V126 0x2c6
0x165: V128 = CALL V127 V89 0x0 V117 V118 V117 0x20
0x166: V129 = ISZERO V128
0x167: V130 = ISZERO V129
0x168: V131 = 0x170
0x16b: JUMPI 0x170 V130
---
Entry stack: [V12, 0x25c, V73, V83, V83, V89, 0x70a08231, V114, 0x20, V117, V118, V117, 0x0, V89]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x25c, V73, V83, V83, V89, 0x70a08231, V114]

================================

Block 0x16c
[0x16c:0x16f]
---
Predecessors: [0x15f]
Successors: []
---
0x16c PUSH1 0x0
0x16e DUP1
0x16f REVERT
---
0x16c: V132 = 0x0
0x16f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x25c, V73, V83, V83, V89, 0x70a08231, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, V73, V83, V83, V89, 0x70a08231, V114]

================================

Block 0x170
[0x170:0x182]
---
Predecessors: [0x15f]
Successors: [0x183, 0x187]
---
0x170 JUMPDEST
0x171 POP
0x172 POP
0x173 POP
0x174 PUSH1 0x40
0x176 MLOAD
0x177 DUP1
0x178 MLOAD
0x179 SWAP1
0x17a POP
0x17b LT
0x17c ISZERO
0x17d ISZERO
0x17e ISZERO
0x17f PUSH2 0x187
0x182 JUMPI
---
0x170: JUMPDEST 
0x174: V133 = 0x40
0x176: V134 = M[0x40]
0x178: V135 = M[V134]
0x17b: V136 = LT V135 V83
0x17c: V137 = ISZERO V136
0x17d: V138 = ISZERO V137
0x17e: V139 = ISZERO V138
0x17f: V140 = 0x187
0x182: JUMPI 0x187 V139
---
Entry stack: [V12, 0x25c, V73, V83, V83, V89, 0x70a08231, V114]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x25c, V73, V83]

================================

Block 0x183
[0x183:0x186]
---
Predecessors: [0x170]
Successors: []
---
0x183 PUSH1 0x0
0x185 DUP1
0x186 REVERT
---
0x183: V141 = 0x0
0x186: REVERT 0x0 0x0
---
Entry stack: [V12, 0x25c, V73, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, V73, V83]

================================

Block 0x187
[0x187:0x1fc]
---
Predecessors: [0x170]
Successors: [0x1fd, 0x201]
---
0x187 JUMPDEST
0x188 CALLER
0x189 PUSH1 0x1
0x18b PUSH1 0xa0
0x18d PUSH1 0x2
0x18f EXP
0x190 SUB
0x191 DUP2
0x192 DUP2
0x193 AND
0x194 PUSH1 0x0
0x196 SWAP1
0x197 DUP2
0x198 MSTORE
0x199 PUSH1 0x8
0x19b PUSH1 0x20
0x19d MSTORE
0x19e PUSH1 0x40
0x1a0 SWAP1
0x1a1 DUP2
0x1a2 SWAP1
0x1a3 SHA3
0x1a4 DUP1
0x1a5 SLOAD
0x1a6 DUP7
0x1a7 ADD
0x1a8 SWAP1
0x1a9 SSTORE
0x1aa PUSH1 0x2
0x1ac DUP1
0x1ad SLOAD
0x1ae DUP7
0x1af ADD
0x1b0 SWAP1
0x1b1 SSTORE
0x1b2 PUSH1 0x7
0x1b4 SLOAD
0x1b5 SWAP1
0x1b6 SWAP2
0x1b7 AND
0x1b8 SWAP2
0x1b9 PUSH4 0xa9059cbb
0x1be SWAP2
0x1bf DUP5
0x1c0 SWAP1
0x1c1 MLOAD
0x1c2 PUSH1 0xe0
0x1c4 PUSH1 0x2
0x1c6 EXP
0x1c7 PUSH4 0xffffffff
0x1cc DUP6
0x1cd AND
0x1ce MUL
0x1cf DUP2
0x1d0 MSTORE
0x1d1 PUSH1 0x1
0x1d3 PUSH1 0xa0
0x1d5 PUSH1 0x2
0x1d7 EXP
0x1d8 SUB
0x1d9 SWAP1
0x1da SWAP3
0x1db AND
0x1dc PUSH1 0x4
0x1de DUP4
0x1df ADD
0x1e0 MSTORE
0x1e1 PUSH1 0x24
0x1e3 DUP3
0x1e4 ADD
0x1e5 MSTORE
0x1e6 PUSH1 0x44
0x1e8 ADD
0x1e9 PUSH1 0x0
0x1eb PUSH1 0x40
0x1ed MLOAD
0x1ee DUP1
0x1ef DUP4
0x1f0 SUB
0x1f1 DUP2
0x1f2 PUSH1 0x0
0x1f4 DUP8
0x1f5 DUP1
0x1f6 EXTCODESIZE
0x1f7 ISZERO
0x1f8 ISZERO
0x1f9 PUSH2 0x201
0x1fc JUMPI
---
0x187: JUMPDEST 
0x188: V142 = CALLER
0x189: V143 = 0x1
0x18b: V144 = 0xa0
0x18d: V145 = 0x2
0x18f: V146 = EXP 0x2 0xa0
0x190: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x193: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x194: V149 = 0x0
0x198: M[0x0] = V148
0x199: V150 = 0x8
0x19b: V151 = 0x20
0x19d: M[0x20] = 0x8
0x19e: V152 = 0x40
0x1a3: V153 = SHA3 0x0 0x40
0x1a5: V154 = S[V153]
0x1a7: V155 = ADD V73 V154
0x1a9: S[V153] = V155
0x1aa: V156 = 0x2
0x1ad: V157 = S[0x2]
0x1af: V158 = ADD V73 V157
0x1b1: S[0x2] = V158
0x1b2: V159 = 0x7
0x1b4: V160 = S[0x7]
0x1b7: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x1b9: V162 = 0xa9059cbb
0x1c1: V163 = M[0x40]
0x1c2: V164 = 0xe0
0x1c4: V165 = 0x2
0x1c6: V166 = EXP 0x2 0xe0
0x1c7: V167 = 0xffffffff
0x1cd: V168 = AND 0xa9059cbb 0xffffffff
0x1ce: V169 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x1d0: M[V163] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1d1: V170 = 0x1
0x1d3: V171 = 0xa0
0x1d5: V172 = 0x2
0x1d7: V173 = EXP 0x2 0xa0
0x1d8: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1db: V175 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x1dc: V176 = 0x4
0x1df: V177 = ADD V163 0x4
0x1e0: M[V177] = V175
0x1e1: V178 = 0x24
0x1e4: V179 = ADD V163 0x24
0x1e5: M[V179] = V83
0x1e6: V180 = 0x44
0x1e8: V181 = ADD 0x44 V163
0x1e9: V182 = 0x0
0x1eb: V183 = 0x40
0x1ed: V184 = M[0x40]
0x1f0: V185 = SUB V181 V184
0x1f2: V186 = 0x0
0x1f6: V187 = EXTCODESIZE V161
0x1f7: V188 = ISZERO V187
0x1f8: V189 = ISZERO V188
0x1f9: V190 = 0x201
0x1fc: JUMPI 0x201 V189
---
Entry stack: [V12, 0x25c, V73, V83]
Stack pops: 2
Stack additions: [S1, S0, V161, 0xa9059cbb, V181, 0x0, V184, V185, V184, 0x0, V161]
Exit stack: [V12, 0x25c, V73, V83, V161, 0xa9059cbb, V181, 0x0, V184, V185, V184, 0x0, V161]

================================

Block 0x1fd
[0x1fd:0x200]
---
Predecessors: [0x187]
Successors: []
---
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 REVERT
---
0x1fd: V191 = 0x0
0x200: REVERT 0x0 0x0
---
Entry stack: [V12, 0x25c, V73, V83, V161, 0xa9059cbb, V181, 0x0, V184, V185, V184, 0x0, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, V73, V83, V161, 0xa9059cbb, V181, 0x0, V184, V185, V184, 0x0, V161]

================================

Block 0x201
[0x201:0x20d]
---
Predecessors: [0x187]
Successors: [0x20e, 0x212]
---
0x201 JUMPDEST
0x202 PUSH2 0x2c6
0x205 GAS
0x206 SUB
0x207 CALL
0x208 ISZERO
0x209 ISZERO
0x20a PUSH2 0x212
0x20d JUMPI
---
0x201: JUMPDEST 
0x202: V192 = 0x2c6
0x205: V193 = GAS
0x206: V194 = SUB V193 0x2c6
0x207: V195 = CALL V194 V161 0x0 V184 V185 V184 0x0
0x208: V196 = ISZERO V195
0x209: V197 = ISZERO V196
0x20a: V198 = 0x212
0x20d: JUMPI 0x212 V197
---
Entry stack: [V12, 0x25c, V73, V83, V161, 0xa9059cbb, V181, 0x0, V184, V185, V184, 0x0, V161]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x25c, V73, V83, V161, 0xa9059cbb, V181]

================================

Block 0x20e
[0x20e:0x211]
---
Predecessors: [0x201]
Successors: []
---
0x20e PUSH1 0x0
0x210 DUP1
0x211 REVERT
---
0x20e: V199 = 0x0
0x211: REVERT 0x0 0x0
---
Entry stack: [V12, 0x25c, V73, V83, V161, 0xa9059cbb, V181]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, V73, V83, V161, 0xa9059cbb, V181]

================================

Block 0x212
[0x212:0x257]
---
Predecessors: [0x201]
Successors: [0x258]
---
0x212 JUMPDEST
0x213 POP
0x214 POP
0x215 POP
0x216 PUSH1 0x0
0x218 DUP1
0x219 MLOAD
0x21a PUSH1 0x20
0x21c PUSH2 0x856
0x21f DUP4
0x220 CODECOPY
0x221 DUP2
0x222 MLOAD
0x223 SWAP2
0x224 MSTORE
0x225 CALLER
0x226 DUP4
0x227 PUSH1 0x1
0x229 PUSH1 0x40
0x22b MLOAD
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 PUSH1 0x2
0x232 EXP
0x233 SUB
0x234 SWAP1
0x235 SWAP4
0x236 AND
0x237 DUP4
0x238 MSTORE
0x239 PUSH1 0x20
0x23b DUP4
0x23c ADD
0x23d SWAP2
0x23e SWAP1
0x23f SWAP2
0x240 MSTORE
0x241 ISZERO
0x242 ISZERO
0x243 PUSH1 0x40
0x245 DUP1
0x246 DUP4
0x247 ADD
0x248 SWAP2
0x249 SWAP1
0x24a SWAP2
0x24b MSTORE
0x24c PUSH1 0x60
0x24e SWAP1
0x24f SWAP2
0x250 ADD
0x251 SWAP1
0x252 MLOAD
0x253 DUP1
0x254 SWAP2
0x255 SUB
0x256 SWAP1
0x257 LOG1
---
0x212: JUMPDEST 
0x216: V200 = 0x0
0x219: V201 = M[0x0]
0x21a: V202 = 0x20
0x21c: V203 = 0x856
0x220: CODECOPY 0x0 0x856 0x20
0x222: V204 = M[0x0]
0x224: M[0x0] = V201
0x225: V205 = CALLER
0x227: V206 = 0x1
0x229: V207 = 0x40
0x22b: V208 = M[0x40]
0x22c: V209 = 0x1
0x22e: V210 = 0xa0
0x230: V211 = 0x2
0x232: V212 = EXP 0x2 0xa0
0x233: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V214 = AND V205 0xffffffffffffffffffffffffffffffffffffffff
0x238: M[V208] = V214
0x239: V215 = 0x20
0x23c: V216 = ADD V208 0x20
0x240: M[V216] = V73
0x241: V217 = ISZERO 0x1
0x242: V218 = ISZERO 0x0
0x243: V219 = 0x40
0x247: V220 = ADD V208 0x40
0x24b: M[V220] = 0x1
0x24c: V221 = 0x60
0x250: V222 = ADD V208 0x60
0x252: V223 = M[0x40]
0x255: V224 = SUB V222 V223
0x257: LOG V223 V224 V204
---
Entry stack: [V12, 0x25c, V73, V83, V161, 0xa9059cbb, V181]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V12, 0x25c, V73, V83]

================================

Block 0x258
[0x258:0x25b]
---
Predecessors: [0x212, 0x5d3, 0x798, 0x7dc]
Successors: [0x25c]
---
0x258 JUMPDEST
0x259 POP
0x25a POP
0x25b JUMP
---
0x258: JUMPDEST 
0x25b: JUMP 0x25c
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x25c
[0x25c:0x25d]
---
Predecessors: [0x258, 0x550, 0x851]
Successors: []
---
0x25c JUMPDEST
0x25d STOP
---
0x25c: JUMPDEST 
0x25d: STOP 
---
Entry stack: [V12, 0x25c, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, 0x0, S0]

================================

Block 0x25e
[0x25e:0x264]
---
Predecessors: [0xb]
Successors: [0x265, 0x269]
---
0x25e JUMPDEST
0x25f CALLVALUE
0x260 ISZERO
0x261 PUSH2 0x269
0x264 JUMPI
---
0x25e: JUMPDEST 
0x25f: V225 = CALLVALUE
0x260: V226 = ISZERO V225
0x261: V227 = 0x269
0x264: JUMPI 0x269 V226
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x265
[0x265:0x268]
---
Predecessors: [0x25e]
Successors: []
---
0x265 PUSH1 0x0
0x267 DUP1
0x268 REVERT
---
0x265: V228 = 0x0
0x268: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x269
[0x269:0x270]
---
Predecessors: [0x25e]
Successors: [0x4c8]
---
0x269 JUMPDEST
0x26a PUSH2 0x25c
0x26d PUSH2 0x4c8
0x270 JUMP
---
0x269: JUMPDEST 
0x26a: V229 = 0x25c
0x26d: V230 = 0x4c8
0x270: JUMP 0x4c8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x25c]
Exit stack: [V12, 0x25c]

================================

Block 0x271
[0x271:0x272]
---
Predecessors: []
Successors: []
---
0x271 JUMPDEST
0x272 STOP
---
0x271: JUMPDEST 
0x272: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x273
[0x273:0x279]
---
Predecessors: [0x25]
Successors: [0x27a, 0x27e]
---
0x273 JUMPDEST
0x274 CALLVALUE
0x275 ISZERO
0x276 PUSH2 0x27e
0x279 JUMPI
---
0x273: JUMPDEST 
0x274: V231 = CALLVALUE
0x275: V232 = ISZERO V231
0x276: V233 = 0x27e
0x279: JUMPI 0x27e V232
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27a
[0x27a:0x27d]
---
Predecessors: [0x273]
Successors: []
---
0x27a PUSH1 0x0
0x27c DUP1
0x27d REVERT
---
0x27a: V234 = 0x0
0x27d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27e
[0x27e:0x285]
---
Predecessors: [0x273]
Successors: [0x552]
---
0x27e JUMPDEST
0x27f PUSH2 0x286
0x282 PUSH2 0x552
0x285 JUMP
---
0x27e: JUMPDEST 
0x27f: V235 = 0x286
0x282: V236 = 0x552
0x285: JUMP 0x552
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x286]
Exit stack: [V12, 0x286]

================================

Block 0x286
[0x286:0x297]
---
Predecessors: [0x552, 0x558, 0x56d, 0x582, 0x5a3, 0x5a9, 0x5af, 0x5b5]
Successors: []
---
0x286 JUMPDEST
0x287 PUSH1 0x40
0x289 MLOAD
0x28a SWAP1
0x28b DUP2
0x28c MSTORE
0x28d PUSH1 0x20
0x28f ADD
0x290 PUSH1 0x40
0x292 MLOAD
0x293 DUP1
0x294 SWAP2
0x295 SUB
0x296 SWAP1
0x297 RETURN
---
0x286: JUMPDEST 
0x287: V237 = 0x40
0x289: V238 = M[0x40]
0x28c: M[V238] = S0
0x28d: V239 = 0x20
0x28f: V240 = ADD 0x20 V238
0x290: V241 = 0x40
0x292: V242 = M[0x40]
0x295: V243 = SUB V240 V242
0x297: RETURN V242 V243
---
Entry stack: [V12, 0x286, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x286]

================================

Block 0x298
[0x298:0x29e]
---
Predecessors: [0x30]
Successors: [0x29f, 0x2a3]
---
0x298 JUMPDEST
0x299 CALLVALUE
0x29a ISZERO
0x29b PUSH2 0x2a3
0x29e JUMPI
---
0x298: JUMPDEST 
0x299: V244 = CALLVALUE
0x29a: V245 = ISZERO V244
0x29b: V246 = 0x2a3
0x29e: JUMPI 0x2a3 V245
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29f
[0x29f:0x2a2]
---
Predecessors: [0x298]
Successors: []
---
0x29f PUSH1 0x0
0x2a1 DUP1
0x2a2 REVERT
---
0x29f: V247 = 0x0
0x2a2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a3
[0x2a3:0x2aa]
---
Predecessors: [0x298]
Successors: [0x558]
---
0x2a3 JUMPDEST
0x2a4 PUSH2 0x286
0x2a7 PUSH2 0x558
0x2aa JUMP
---
0x2a3: JUMPDEST 
0x2a4: V248 = 0x286
0x2a7: V249 = 0x558
0x2aa: JUMP 0x558
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x286]
Exit stack: [V12, 0x286]

================================

Block 0x2ab
[0x2ab:0x2bc]
---
Predecessors: []
Successors: []
---
0x2ab JUMPDEST
0x2ac PUSH1 0x40
0x2ae MLOAD
0x2af SWAP1
0x2b0 DUP2
0x2b1 MSTORE
0x2b2 PUSH1 0x20
0x2b4 ADD
0x2b5 PUSH1 0x40
0x2b7 MLOAD
0x2b8 DUP1
0x2b9 SWAP2
0x2ba SUB
0x2bb SWAP1
0x2bc RETURN
---
0x2ab: JUMPDEST 
0x2ac: V250 = 0x40
0x2ae: V251 = M[0x40]
0x2b1: M[V251] = S0
0x2b2: V252 = 0x20
0x2b4: V253 = ADD 0x20 V251
0x2b5: V254 = 0x40
0x2b7: V255 = M[0x40]
0x2ba: V256 = SUB V253 V255
0x2bc: RETURN V255 V256
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2bd
[0x2bd:0x2c3]
---
Predecessors: [0x3b]
Successors: [0x2c4, 0x2c8]
---
0x2bd JUMPDEST
0x2be CALLVALUE
0x2bf ISZERO
0x2c0 PUSH2 0x2c8
0x2c3 JUMPI
---
0x2bd: JUMPDEST 
0x2be: V257 = CALLVALUE
0x2bf: V258 = ISZERO V257
0x2c0: V259 = 0x2c8
0x2c3: JUMPI 0x2c8 V258
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c4
[0x2c4:0x2c7]
---
Predecessors: [0x2bd]
Successors: []
---
0x2c4 PUSH1 0x0
0x2c6 DUP1
0x2c7 REVERT
---
0x2c4: V260 = 0x0
0x2c7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c8
[0x2c8:0x2cf]
---
Predecessors: [0x2bd]
Successors: [0x55e]
---
0x2c8 JUMPDEST
0x2c9 PUSH2 0x2d0
0x2cc PUSH2 0x55e
0x2cf JUMP
---
0x2c8: JUMPDEST 
0x2c9: V261 = 0x2d0
0x2cc: V262 = 0x55e
0x2cf: JUMP 0x55e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d0]
Exit stack: [V12, 0x2d0]

================================

Block 0x2d0
[0x2d0:0x2eb]
---
Predecessors: [0x55e, 0x573, 0x5bb]
Successors: []
---
0x2d0 JUMPDEST
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 PUSH1 0x1
0x2d6 PUSH1 0xa0
0x2d8 PUSH1 0x2
0x2da EXP
0x2db SUB
0x2dc SWAP1
0x2dd SWAP2
0x2de AND
0x2df DUP2
0x2e0 MSTORE
0x2e1 PUSH1 0x20
0x2e3 ADD
0x2e4 PUSH1 0x40
0x2e6 MLOAD
0x2e7 DUP1
0x2e8 SWAP2
0x2e9 SUB
0x2ea SWAP1
0x2eb RETURN
---
0x2d0: JUMPDEST 
0x2d1: V263 = 0x40
0x2d3: V264 = M[0x40]
0x2d4: V265 = 0x1
0x2d6: V266 = 0xa0
0x2d8: V267 = 0x2
0x2da: V268 = EXP 0x2 0xa0
0x2db: V269 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2de: V270 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2e0: M[V264] = V270
0x2e1: V271 = 0x20
0x2e3: V272 = ADD 0x20 V264
0x2e4: V273 = 0x40
0x2e6: V274 = M[0x40]
0x2e9: V275 = SUB V272 V274
0x2eb: RETURN V274 V275
---
Entry stack: [V12, 0x2d0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2d0]

================================

Block 0x2ec
[0x2ec:0x2f2]
---
Predecessors: [0x46]
Successors: [0x2f3, 0x2f7]
---
0x2ec JUMPDEST
0x2ed CALLVALUE
0x2ee ISZERO
0x2ef PUSH2 0x2f7
0x2f2 JUMPI
---
0x2ec: JUMPDEST 
0x2ed: V276 = CALLVALUE
0x2ee: V277 = ISZERO V276
0x2ef: V278 = 0x2f7
0x2f2: JUMPI 0x2f7 V277
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f3
[0x2f3:0x2f6]
---
Predecessors: [0x2ec]
Successors: []
---
0x2f3 PUSH1 0x0
0x2f5 DUP1
0x2f6 REVERT
---
0x2f3: V279 = 0x0
0x2f6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f7
[0x2f7:0x2fe]
---
Predecessors: [0x2ec]
Successors: [0x56d]
---
0x2f7 JUMPDEST
0x2f8 PUSH2 0x286
0x2fb PUSH2 0x56d
0x2fe JUMP
---
0x2f7: JUMPDEST 
0x2f8: V280 = 0x286
0x2fb: V281 = 0x56d
0x2fe: JUMP 0x56d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x286]
Exit stack: [V12, 0x286]

================================

Block 0x2ff
[0x2ff:0x310]
---
Predecessors: []
Successors: []
---
0x2ff JUMPDEST
0x300 PUSH1 0x40
0x302 MLOAD
0x303 SWAP1
0x304 DUP2
0x305 MSTORE
0x306 PUSH1 0x20
0x308 ADD
0x309 PUSH1 0x40
0x30b MLOAD
0x30c DUP1
0x30d SWAP2
0x30e SUB
0x30f SWAP1
0x310 RETURN
---
0x2ff: JUMPDEST 
0x300: V282 = 0x40
0x302: V283 = M[0x40]
0x305: M[V283] = S0
0x306: V284 = 0x20
0x308: V285 = ADD 0x20 V283
0x309: V286 = 0x40
0x30b: V287 = M[0x40]
0x30e: V288 = SUB V285 V287
0x310: RETURN V287 V288
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x311
[0x311:0x317]
---
Predecessors: [0x51]
Successors: [0x318, 0x31c]
---
0x311 JUMPDEST
0x312 CALLVALUE
0x313 ISZERO
0x314 PUSH2 0x31c
0x317 JUMPI
---
0x311: JUMPDEST 
0x312: V289 = CALLVALUE
0x313: V290 = ISZERO V289
0x314: V291 = 0x31c
0x317: JUMPI 0x31c V290
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x318
[0x318:0x31b]
---
Predecessors: [0x311]
Successors: []
---
0x318 PUSH1 0x0
0x31a DUP1
0x31b REVERT
---
0x318: V292 = 0x0
0x31b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31c
[0x31c:0x323]
---
Predecessors: [0x311]
Successors: [0x573]
---
0x31c JUMPDEST
0x31d PUSH2 0x2d0
0x320 PUSH2 0x573
0x323 JUMP
---
0x31c: JUMPDEST 
0x31d: V293 = 0x2d0
0x320: V294 = 0x573
0x323: JUMP 0x573
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d0]
Exit stack: [V12, 0x2d0]

================================

Block 0x324
[0x324:0x33f]
---
Predecessors: []
Successors: []
---
0x324 JUMPDEST
0x325 PUSH1 0x40
0x327 MLOAD
0x328 PUSH1 0x1
0x32a PUSH1 0xa0
0x32c PUSH1 0x2
0x32e EXP
0x32f SUB
0x330 SWAP1
0x331 SWAP2
0x332 AND
0x333 DUP2
0x334 MSTORE
0x335 PUSH1 0x20
0x337 ADD
0x338 PUSH1 0x40
0x33a MLOAD
0x33b DUP1
0x33c SWAP2
0x33d SUB
0x33e SWAP1
0x33f RETURN
---
0x324: JUMPDEST 
0x325: V295 = 0x40
0x327: V296 = M[0x40]
0x328: V297 = 0x1
0x32a: V298 = 0xa0
0x32c: V299 = 0x2
0x32e: V300 = EXP 0x2 0xa0
0x32f: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x332: V302 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x334: M[V296] = V302
0x335: V303 = 0x20
0x337: V304 = ADD 0x20 V296
0x338: V305 = 0x40
0x33a: V306 = M[0x40]
0x33d: V307 = SUB V304 V306
0x33f: RETURN V306 V307
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x340
[0x340:0x346]
---
Predecessors: [0x5c]
Successors: [0x347, 0x34b]
---
0x340 JUMPDEST
0x341 CALLVALUE
0x342 ISZERO
0x343 PUSH2 0x34b
0x346 JUMPI
---
0x340: JUMPDEST 
0x341: V308 = CALLVALUE
0x342: V309 = ISZERO V308
0x343: V310 = 0x34b
0x346: JUMPI 0x34b V309
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x347
[0x347:0x34a]
---
Predecessors: [0x340]
Successors: []
---
0x347 PUSH1 0x0
0x349 DUP1
0x34a REVERT
---
0x347: V311 = 0x0
0x34a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x34b
[0x34b:0x35e]
---
Predecessors: [0x340]
Successors: [0x582]
---
0x34b JUMPDEST
0x34c PUSH2 0x286
0x34f PUSH1 0x1
0x351 PUSH1 0xa0
0x353 PUSH1 0x2
0x355 EXP
0x356 SUB
0x357 PUSH1 0x4
0x359 CALLDATALOAD
0x35a AND
0x35b PUSH2 0x582
0x35e JUMP
---
0x34b: JUMPDEST 
0x34c: V312 = 0x286
0x34f: V313 = 0x1
0x351: V314 = 0xa0
0x353: V315 = 0x2
0x355: V316 = EXP 0x2 0xa0
0x356: V317 = SUB 0x10000000000000000000000000000000000000000 0x1
0x357: V318 = 0x4
0x359: V319 = CALLDATALOAD 0x4
0x35a: V320 = AND V319 0xffffffffffffffffffffffffffffffffffffffff
0x35b: V321 = 0x582
0x35e: JUMP 0x582
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x286, V320]
Exit stack: [V12, 0x286, V320]

================================

Block 0x35f
[0x35f:0x370]
---
Predecessors: []
Successors: []
---
0x35f JUMPDEST
0x360 PUSH1 0x40
0x362 MLOAD
0x363 SWAP1
0x364 DUP2
0x365 MSTORE
0x366 PUSH1 0x20
0x368 ADD
0x369 PUSH1 0x40
0x36b MLOAD
0x36c DUP1
0x36d SWAP2
0x36e SUB
0x36f SWAP1
0x370 RETURN
---
0x35f: JUMPDEST 
0x360: V322 = 0x40
0x362: V323 = M[0x40]
0x365: M[V323] = S0
0x366: V324 = 0x20
0x368: V325 = ADD 0x20 V323
0x369: V326 = 0x40
0x36b: V327 = M[0x40]
0x36e: V328 = SUB V325 V327
0x370: RETURN V327 V328
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x371
[0x371:0x377]
---
Predecessors: [0x67]
Successors: [0x378, 0x37c]
---
0x371 JUMPDEST
0x372 CALLVALUE
0x373 ISZERO
0x374 PUSH2 0x37c
0x377 JUMPI
---
0x371: JUMPDEST 
0x372: V329 = CALLVALUE
0x373: V330 = ISZERO V329
0x374: V331 = 0x37c
0x377: JUMPI 0x37c V330
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x378
[0x378:0x37b]
---
Predecessors: [0x371]
Successors: []
---
0x378 PUSH1 0x0
0x37a DUP1
0x37b REVERT
---
0x378: V332 = 0x0
0x37b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37c
[0x37c:0x383]
---
Predecessors: [0x371]
Successors: [0x594]
---
0x37c JUMPDEST
0x37d PUSH2 0x384
0x380 PUSH2 0x594
0x383 JUMP
---
0x37c: JUMPDEST 
0x37d: V333 = 0x384
0x380: V334 = 0x594
0x383: JUMP 0x594
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x384]
Exit stack: [V12, 0x384]

================================

Block 0x384
[0x384:0x397]
---
Predecessors: [0x594, 0x5d0]
Successors: []
---
0x384 JUMPDEST
0x385 PUSH1 0x40
0x387 MLOAD
0x388 SWAP1
0x389 ISZERO
0x38a ISZERO
0x38b DUP2
0x38c MSTORE
0x38d PUSH1 0x20
0x38f ADD
0x390 PUSH1 0x40
0x392 MLOAD
0x393 DUP1
0x394 SWAP2
0x395 SUB
0x396 SWAP1
0x397 RETURN
---
0x384: JUMPDEST 
0x385: V335 = 0x40
0x387: V336 = M[0x40]
0x389: V337 = ISZERO S0
0x38a: V338 = ISZERO V337
0x38c: M[V336] = V338
0x38d: V339 = 0x20
0x38f: V340 = ADD 0x20 V336
0x390: V341 = 0x40
0x392: V342 = M[0x40]
0x395: V343 = SUB V340 V342
0x397: RETURN V342 V343
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x398
[0x398:0x39e]
---
Predecessors: [0x72]
Successors: [0x39f, 0x3a3]
---
0x398 JUMPDEST
0x399 CALLVALUE
0x39a ISZERO
0x39b PUSH2 0x3a3
0x39e JUMPI
---
0x398: JUMPDEST 
0x399: V344 = CALLVALUE
0x39a: V345 = ISZERO V344
0x39b: V346 = 0x3a3
0x39e: JUMPI 0x3a3 V345
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39f
[0x39f:0x3a2]
---
Predecessors: [0x398]
Successors: []
---
0x39f PUSH1 0x0
0x3a1 DUP1
0x3a2 REVERT
---
0x39f: V347 = 0x0
0x3a2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a3
[0x3a3:0x3aa]
---
Predecessors: [0x398]
Successors: [0x5a3]
---
0x3a3 JUMPDEST
0x3a4 PUSH2 0x286
0x3a7 PUSH2 0x5a3
0x3aa JUMP
---
0x3a3: JUMPDEST 
0x3a4: V348 = 0x286
0x3a7: V349 = 0x5a3
0x3aa: JUMP 0x5a3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x286]
Exit stack: [V12, 0x286]

================================

Block 0x3ab
[0x3ab:0x3bc]
---
Predecessors: []
Successors: []
---
0x3ab JUMPDEST
0x3ac PUSH1 0x40
0x3ae MLOAD
0x3af SWAP1
0x3b0 DUP2
0x3b1 MSTORE
0x3b2 PUSH1 0x20
0x3b4 ADD
0x3b5 PUSH1 0x40
0x3b7 MLOAD
0x3b8 DUP1
0x3b9 SWAP2
0x3ba SUB
0x3bb SWAP1
0x3bc RETURN
---
0x3ab: JUMPDEST 
0x3ac: V350 = 0x40
0x3ae: V351 = M[0x40]
0x3b1: M[V351] = S0
0x3b2: V352 = 0x20
0x3b4: V353 = ADD 0x20 V351
0x3b5: V354 = 0x40
0x3b7: V355 = M[0x40]
0x3ba: V356 = SUB V353 V355
0x3bc: RETURN V355 V356
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3bd
[0x3bd:0x3c3]
---
Predecessors: [0x7d]
Successors: [0x3c4, 0x3c8]
---
0x3bd JUMPDEST
0x3be CALLVALUE
0x3bf ISZERO
0x3c0 PUSH2 0x3c8
0x3c3 JUMPI
---
0x3bd: JUMPDEST 
0x3be: V357 = CALLVALUE
0x3bf: V358 = ISZERO V357
0x3c0: V359 = 0x3c8
0x3c3: JUMPI 0x3c8 V358
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c4
[0x3c4:0x3c7]
---
Predecessors: [0x3bd]
Successors: []
---
0x3c4 PUSH1 0x0
0x3c6 DUP1
0x3c7 REVERT
---
0x3c4: V360 = 0x0
0x3c7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c8
[0x3c8:0x3cf]
---
Predecessors: [0x3bd]
Successors: [0x5a9]
---
0x3c8 JUMPDEST
0x3c9 PUSH2 0x286
0x3cc PUSH2 0x5a9
0x3cf JUMP
---
0x3c8: JUMPDEST 
0x3c9: V361 = 0x286
0x3cc: V362 = 0x5a9
0x3cf: JUMP 0x5a9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x286]
Exit stack: [V12, 0x286]

================================

Block 0x3d0
[0x3d0:0x3e1]
---
Predecessors: []
Successors: []
---
0x3d0 JUMPDEST
0x3d1 PUSH1 0x40
0x3d3 MLOAD
0x3d4 SWAP1
0x3d5 DUP2
0x3d6 MSTORE
0x3d7 PUSH1 0x20
0x3d9 ADD
0x3da PUSH1 0x40
0x3dc MLOAD
0x3dd DUP1
0x3de SWAP2
0x3df SUB
0x3e0 SWAP1
0x3e1 RETURN
---
0x3d0: JUMPDEST 
0x3d1: V363 = 0x40
0x3d3: V364 = M[0x40]
0x3d6: M[V364] = S0
0x3d7: V365 = 0x20
0x3d9: V366 = ADD 0x20 V364
0x3da: V367 = 0x40
0x3dc: V368 = M[0x40]
0x3df: V369 = SUB V366 V368
0x3e1: RETURN V368 V369
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3e2
[0x3e2:0x3e8]
---
Predecessors: [0x88]
Successors: [0x3e9, 0x3ed]
---
0x3e2 JUMPDEST
0x3e3 CALLVALUE
0x3e4 ISZERO
0x3e5 PUSH2 0x3ed
0x3e8 JUMPI
---
0x3e2: JUMPDEST 
0x3e3: V370 = CALLVALUE
0x3e4: V371 = ISZERO V370
0x3e5: V372 = 0x3ed
0x3e8: JUMPI 0x3ed V371
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e9
[0x3e9:0x3ec]
---
Predecessors: [0x3e2]
Successors: []
---
0x3e9 PUSH1 0x0
0x3eb DUP1
0x3ec REVERT
---
0x3e9: V373 = 0x0
0x3ec: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ed
[0x3ed:0x3f4]
---
Predecessors: [0x3e2]
Successors: [0x5af]
---
0x3ed JUMPDEST
0x3ee PUSH2 0x286
0x3f1 PUSH2 0x5af
0x3f4 JUMP
---
0x3ed: JUMPDEST 
0x3ee: V374 = 0x286
0x3f1: V375 = 0x5af
0x3f4: JUMP 0x5af
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x286]
Exit stack: [V12, 0x286]

================================

Block 0x3f5
[0x3f5:0x406]
---
Predecessors: []
Successors: []
---
0x3f5 JUMPDEST
0x3f6 PUSH1 0x40
0x3f8 MLOAD
0x3f9 SWAP1
0x3fa DUP2
0x3fb MSTORE
0x3fc PUSH1 0x20
0x3fe ADD
0x3ff PUSH1 0x40
0x401 MLOAD
0x402 DUP1
0x403 SWAP2
0x404 SUB
0x405 SWAP1
0x406 RETURN
---
0x3f5: JUMPDEST 
0x3f6: V376 = 0x40
0x3f8: V377 = M[0x40]
0x3fb: M[V377] = S0
0x3fc: V378 = 0x20
0x3fe: V379 = ADD 0x20 V377
0x3ff: V380 = 0x40
0x401: V381 = M[0x40]
0x404: V382 = SUB V379 V381
0x406: RETURN V381 V382
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x407
[0x407:0x40d]
---
Predecessors: [0x93]
Successors: [0x40e, 0x412]
---
0x407 JUMPDEST
0x408 CALLVALUE
0x409 ISZERO
0x40a PUSH2 0x412
0x40d JUMPI
---
0x407: JUMPDEST 
0x408: V383 = CALLVALUE
0x409: V384 = ISZERO V383
0x40a: V385 = 0x412
0x40d: JUMPI 0x412 V384
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x40e
[0x40e:0x411]
---
Predecessors: [0x407]
Successors: []
---
0x40e PUSH1 0x0
0x410 DUP1
0x411 REVERT
---
0x40e: V386 = 0x0
0x411: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x412
[0x412:0x419]
---
Predecessors: [0x407]
Successors: [0x5b5]
---
0x412 JUMPDEST
0x413 PUSH2 0x286
0x416 PUSH2 0x5b5
0x419 JUMP
---
0x412: JUMPDEST 
0x413: V387 = 0x286
0x416: V388 = 0x5b5
0x419: JUMP 0x5b5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x286]
Exit stack: [V12, 0x286]

================================

Block 0x41a
[0x41a:0x42b]
---
Predecessors: []
Successors: []
---
0x41a JUMPDEST
0x41b PUSH1 0x40
0x41d MLOAD
0x41e SWAP1
0x41f DUP2
0x420 MSTORE
0x421 PUSH1 0x20
0x423 ADD
0x424 PUSH1 0x40
0x426 MLOAD
0x427 DUP1
0x428 SWAP2
0x429 SUB
0x42a SWAP1
0x42b RETURN
---
0x41a: JUMPDEST 
0x41b: V389 = 0x40
0x41d: V390 = M[0x40]
0x420: M[V390] = S0
0x421: V391 = 0x20
0x423: V392 = ADD 0x20 V390
0x424: V393 = 0x40
0x426: V394 = M[0x40]
0x429: V395 = SUB V392 V394
0x42b: RETURN V394 V395
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x42c
[0x42c:0x432]
---
Predecessors: [0x9e]
Successors: [0x433, 0x437]
---
0x42c JUMPDEST
0x42d CALLVALUE
0x42e ISZERO
0x42f PUSH2 0x437
0x432 JUMPI
---
0x42c: JUMPDEST 
0x42d: V396 = CALLVALUE
0x42e: V397 = ISZERO V396
0x42f: V398 = 0x437
0x432: JUMPI 0x437 V397
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x433
[0x433:0x436]
---
Predecessors: [0x42c]
Successors: []
---
0x433 PUSH1 0x0
0x435 DUP1
0x436 REVERT
---
0x433: V399 = 0x0
0x436: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x437
[0x437:0x43e]
---
Predecessors: [0x42c]
Successors: [0x5bb]
---
0x437 JUMPDEST
0x438 PUSH2 0x2d0
0x43b PUSH2 0x5bb
0x43e JUMP
---
0x437: JUMPDEST 
0x438: V400 = 0x2d0
0x43b: V401 = 0x5bb
0x43e: JUMP 0x5bb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d0]
Exit stack: [V12, 0x2d0]

================================

Block 0x43f
[0x43f:0x45a]
---
Predecessors: []
Successors: []
---
0x43f JUMPDEST
0x440 PUSH1 0x40
0x442 MLOAD
0x443 PUSH1 0x1
0x445 PUSH1 0xa0
0x447 PUSH1 0x2
0x449 EXP
0x44a SUB
0x44b SWAP1
0x44c SWAP2
0x44d AND
0x44e DUP2
0x44f MSTORE
0x450 PUSH1 0x20
0x452 ADD
0x453 PUSH1 0x40
0x455 MLOAD
0x456 DUP1
0x457 SWAP2
0x458 SUB
0x459 SWAP1
0x45a RETURN
---
0x43f: JUMPDEST 
0x440: V402 = 0x40
0x442: V403 = M[0x40]
0x443: V404 = 0x1
0x445: V405 = 0xa0
0x447: V406 = 0x2
0x449: V407 = EXP 0x2 0xa0
0x44a: V408 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44d: V409 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x44f: M[V403] = V409
0x450: V410 = 0x20
0x452: V411 = ADD 0x20 V403
0x453: V412 = 0x40
0x455: V413 = M[0x40]
0x458: V414 = SUB V411 V413
0x45a: RETURN V413 V414
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x45b
[0x45b:0x461]
---
Predecessors: [0xa9]
Successors: [0x462, 0x466]
---
0x45b JUMPDEST
0x45c CALLVALUE
0x45d ISZERO
0x45e PUSH2 0x466
0x461 JUMPI
---
0x45b: JUMPDEST 
0x45c: V415 = CALLVALUE
0x45d: V416 = ISZERO V415
0x45e: V417 = 0x466
0x461: JUMPI 0x466 V416
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x462
[0x462:0x465]
---
Predecessors: [0x45b]
Successors: []
---
0x462 PUSH1 0x0
0x464 DUP1
0x465 REVERT
---
0x462: V418 = 0x0
0x465: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x466
[0x466:0x46d]
---
Predecessors: [0x45b]
Successors: [0x5ca]
---
0x466 JUMPDEST
0x467 PUSH2 0x384
0x46a PUSH2 0x5ca
0x46d JUMP
---
0x466: JUMPDEST 
0x467: V419 = 0x384
0x46a: V420 = 0x5ca
0x46d: JUMP 0x5ca
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x384]
Exit stack: [V12, 0x384]

================================

Block 0x46e
[0x46e:0x481]
---
Predecessors: []
Successors: []
---
0x46e JUMPDEST
0x46f PUSH1 0x40
0x471 MLOAD
0x472 SWAP1
0x473 ISZERO
0x474 ISZERO
0x475 DUP2
0x476 MSTORE
0x477 PUSH1 0x20
0x479 ADD
0x47a PUSH1 0x40
0x47c MLOAD
0x47d DUP1
0x47e SWAP2
0x47f SUB
0x480 SWAP1
0x481 RETURN
---
0x46e: JUMPDEST 
0x46f: V421 = 0x40
0x471: V422 = M[0x40]
0x473: V423 = ISZERO S0
0x474: V424 = ISZERO V423
0x476: M[V422] = V424
0x477: V425 = 0x20
0x479: V426 = ADD 0x20 V422
0x47a: V427 = 0x40
0x47c: V428 = M[0x40]
0x47f: V429 = SUB V426 V428
0x481: RETURN V428 V429
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x482
[0x482:0x488]
---
Predecessors: [0xb4]
Successors: [0x489, 0x48d]
---
0x482 JUMPDEST
0x483 CALLVALUE
0x484 ISZERO
0x485 PUSH2 0x48d
0x488 JUMPI
---
0x482: JUMPDEST 
0x483: V430 = CALLVALUE
0x484: V431 = ISZERO V430
0x485: V432 = 0x48d
0x488: JUMPI 0x48d V431
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x489
[0x489:0x48c]
---
Predecessors: [0x482]
Successors: []
---
0x489 PUSH1 0x0
0x48b DUP1
0x48c REVERT
---
0x489: V433 = 0x0
0x48c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x48d
[0x48d:0x494]
---
Predecessors: [0x482]
Successors: [0x5d3]
---
0x48d JUMPDEST
0x48e PUSH2 0x25c
0x491 PUSH2 0x5d3
0x494 JUMP
---
0x48d: JUMPDEST 
0x48e: V434 = 0x25c
0x491: V435 = 0x5d3
0x494: JUMP 0x5d3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x25c]
Exit stack: [V12, 0x25c]

================================

Block 0x495
[0x495:0x496]
---
Predecessors: []
Successors: []
---
0x495 JUMPDEST
0x496 STOP
---
0x495: JUMPDEST 
0x496: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x497
[0x497:0x4a8]
---
Predecessors: [0xc3]
Successors: [0x4a9, 0x4b0]
---
0x497 JUMPDEST
0x498 PUSH1 0x0
0x49a DUP1
0x49b PUSH1 0x0
0x49d PUSH1 0xa
0x49f SLOAD
0x4a0 TIMESTAMP
0x4a1 LT
0x4a2 ISZERO
0x4a3 DUP1
0x4a4 ISZERO
0x4a5 PUSH2 0x4b0
0x4a8 JUMPI
---
0x497: JUMPDEST 
0x498: V436 = 0x0
0x49b: V437 = 0x0
0x49d: V438 = 0xa
0x49f: V439 = S[0xa]
0x4a0: V440 = TIMESTAMP
0x4a1: V441 = LT V440 V439
0x4a2: V442 = ISZERO V441
0x4a4: V443 = ISZERO V442
0x4a5: V444 = 0x4b0
0x4a8: JUMPI 0x4b0 V443
---
Entry stack: [V12, 0x25c, 0x0, 0x0, 0xce]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V442]
Exit stack: [V12, 0x25c, 0x0, 0x0, 0xce, 0x0, 0x0, 0x0, V442]

================================

Block 0x4a9
[0x4a9:0x4af]
---
Predecessors: [0x497]
Successors: [0x4b0]
---
0x4a9 POP
0x4aa PUSH1 0xb
0x4ac SLOAD
0x4ad TIMESTAMP
0x4ae GT
0x4af ISZERO
---
0x4aa: V445 = 0xb
0x4ac: V446 = S[0xb]
0x4ad: V447 = TIMESTAMP
0x4ae: V448 = GT V447 V446
0x4af: V449 = ISZERO V448
---
Entry stack: [V12, 0x25c, 0x0, 0x0, 0xce, 0x0, 0x0, 0x0, V442]
Stack pops: 1
Stack additions: [V449]
Exit stack: [V12, 0x25c, 0x0, 0x0, 0xce, 0x0, 0x0, 0x0, V449]

================================

Block 0x4b0
[0x4b0:0x4bd]
---
Predecessors: [0x497, 0x4a9]
Successors: [0x4be, 0x4c0]
---
0x4b0 JUMPDEST
0x4b1 SWAP2
0x4b2 POP
0x4b3 POP
0x4b4 CALLVALUE
0x4b5 ISZERO
0x4b6 ISZERO
0x4b7 DUP2
0x4b8 DUP1
0x4b9 ISZERO
0x4ba PUSH2 0x4c0
0x4bd JUMPI
---
0x4b0: JUMPDEST 
0x4b4: V450 = CALLVALUE
0x4b5: V451 = ISZERO V450
0x4b6: V452 = ISZERO V451
0x4b9: V453 = ISZERO S0
0x4ba: V454 = 0x4c0
0x4bd: JUMPI 0x4c0 V453
---
Entry stack: [V12, 0x25c, 0x0, 0x0, 0xce, 0x0, 0x0, 0x0, S0]
Stack pops: 3
Stack additions: [S0, V452, S0]
Exit stack: [V12, 0x25c, 0x0, 0x0, 0xce, 0x0, S0, V452, S0]

================================

Block 0x4be
[0x4be:0x4bf]
---
Predecessors: [0x4b0]
Successors: [0x4c0]
---
0x4be POP
0x4bf DUP1
---
0x4be: NOP 
---
Entry stack: [V12, 0x25c, 0x0, 0x0, 0xce, 0x0, S2, V452, S0]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [V12, 0x25c, 0x0, 0x0, 0xce, 0x0, S2, V452, V452]

================================

Block 0x4c0
[0x4c0:0x4c2]
---
Predecessors: [0x4b0, 0x4be]
Successors: [0x4c3]
---
0x4c0 JUMPDEST
0x4c1 SWAP3
0x4c2 POP
---
0x4c0: JUMPDEST 
---
Entry stack: [V12, 0x25c, 0x0, 0x0, 0xce, 0x0, S2, V452, S0]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [V12, 0x25c, 0x0, 0x0, 0xce, S0, S2, V452]

================================

Block 0x4c3
[0x4c3:0x4c7]
---
Predecessors: [0x4c0]
Successors: [0xce]
---
0x4c3 JUMPDEST
0x4c4 POP
0x4c5 POP
0x4c6 SWAP1
0x4c7 JUMP
---
0x4c3: JUMPDEST 
0x4c7: JUMP 0xce
---
Entry stack: [V12, 0x25c, 0x0, 0x0, 0xce, S2, S1, V452]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, 0x25c, 0x0, 0x0, S2]

================================

Block 0x4c8
[0x4c8:0x4d2]
---
Predecessors: [0x269, 0x5e1]
Successors: [0x4d3, 0x54e]
---
0x4c8 JUMPDEST
0x4c9 PUSH1 0xb
0x4cb SLOAD
0x4cc TIMESTAMP
0x4cd GT
0x4ce ISZERO
0x4cf PUSH2 0x54e
0x4d2 JUMPI
---
0x4c8: JUMPDEST 
0x4c9: V455 = 0xb
0x4cb: V456 = S[0xb]
0x4cc: V457 = TIMESTAMP
0x4cd: V458 = GT V457 V456
0x4ce: V459 = ISZERO V458
0x4cf: V460 = 0x54e
0x4d2: JUMPI 0x54e V459
---
Entry stack: [V12, 0x25c, 0x0, S1, {0x25c, 0x5e8}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, 0x0, S1, {0x25c, 0x5e8}]

================================

Block 0x4d3
[0x4d3:0x4dd]
---
Predecessors: [0x4c8]
Successors: [0x4de, 0x53e]
---
0x4d3 PUSH1 0x1
0x4d5 SLOAD
0x4d6 PUSH1 0x2
0x4d8 SLOAD
0x4d9 LT
0x4da PUSH2 0x53e
0x4dd JUMPI
---
0x4d3: V461 = 0x1
0x4d5: V462 = S[0x1]
0x4d6: V463 = 0x2
0x4d8: V464 = S[0x2]
0x4d9: V465 = LT V464 V462
0x4da: V466 = 0x53e
0x4dd: JUMPI 0x53e V465
---
Entry stack: [V12, 0x25c, 0x0, S1, {0x25c, 0x5e8}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, 0x0, S1, {0x25c, 0x5e8}]

================================

Block 0x4de
[0x4de:0x53d]
---
Predecessors: [0x4d3]
Successors: [0x53e]
---
0x4de PUSH1 0x9
0x4e0 DUP1
0x4e1 SLOAD
0x4e2 PUSH1 0xff
0x4e4 NOT
0x4e5 AND
0x4e6 PUSH1 0x1
0x4e8 OR
0x4e9 SWAP1
0x4ea SSTORE
0x4eb PUSH1 0x0
0x4ed SLOAD
0x4ee PUSH1 0x2
0x4f0 SLOAD
0x4f1 PUSH32 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x512 SWAP2
0x513 PUSH1 0x1
0x515 PUSH1 0xa0
0x517 PUSH1 0x2
0x519 EXP
0x51a SUB
0x51b AND
0x51c SWAP1
0x51d PUSH1 0x40
0x51f MLOAD
0x520 PUSH1 0x1
0x522 PUSH1 0xa0
0x524 PUSH1 0x2
0x526 EXP
0x527 SUB
0x528 SWAP1
0x529 SWAP3
0x52a AND
0x52b DUP3
0x52c MSTORE
0x52d PUSH1 0x20
0x52f DUP3
0x530 ADD
0x531 MSTORE
0x532 PUSH1 0x40
0x534 SWAP1
0x535 DUP2
0x536 ADD
0x537 SWAP1
0x538 MLOAD
0x539 DUP1
0x53a SWAP2
0x53b SUB
0x53c SWAP1
0x53d LOG1
---
0x4de: V467 = 0x9
0x4e1: V468 = S[0x9]
0x4e2: V469 = 0xff
0x4e4: V470 = NOT 0xff
0x4e5: V471 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V468
0x4e6: V472 = 0x1
0x4e8: V473 = OR 0x1 V471
0x4ea: S[0x9] = V473
0x4eb: V474 = 0x0
0x4ed: V475 = S[0x0]
0x4ee: V476 = 0x2
0x4f0: V477 = S[0x2]
0x4f1: V478 = 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
0x513: V479 = 0x1
0x515: V480 = 0xa0
0x517: V481 = 0x2
0x519: V482 = EXP 0x2 0xa0
0x51a: V483 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51b: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff V475
0x51d: V485 = 0x40
0x51f: V486 = M[0x40]
0x520: V487 = 0x1
0x522: V488 = 0xa0
0x524: V489 = 0x2
0x526: V490 = EXP 0x2 0xa0
0x527: V491 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52a: V492 = AND V484 0xffffffffffffffffffffffffffffffffffffffff
0x52c: M[V486] = V492
0x52d: V493 = 0x20
0x530: V494 = ADD V486 0x20
0x531: M[V494] = V477
0x532: V495 = 0x40
0x536: V496 = ADD 0x40 V486
0x538: V497 = M[0x40]
0x53b: V498 = SUB V496 V497
0x53d: LOG V497 V498 0xec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c85
---
Entry stack: [V12, 0x25c, 0x0, S1, {0x25c, 0x5e8}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, 0x0, S1, {0x25c, 0x5e8}]

================================

Block 0x53e
[0x53e:0x54d]
---
Predecessors: [0x4d3, 0x4de]
Successors: [0x54e]
---
0x53e JUMPDEST
0x53f PUSH1 0x9
0x541 DUP1
0x542 SLOAD
0x543 PUSH2 0xff00
0x546 NOT
0x547 AND
0x548 PUSH2 0x100
0x54b OR
0x54c SWAP1
0x54d SSTORE
---
0x53e: JUMPDEST 
0x53f: V499 = 0x9
0x542: V500 = S[0x9]
0x543: V501 = 0xff00
0x546: V502 = NOT 0xff00
0x547: V503 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V500
0x548: V504 = 0x100
0x54b: V505 = OR 0x100 V503
0x54d: S[0x9] = V505
---
Entry stack: [V12, 0x25c, 0x0, S1, {0x25c, 0x5e8}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, 0x0, S1, {0x25c, 0x5e8}]

================================

Block 0x54e
[0x54e:0x54e]
---
Predecessors: [0x4c8, 0x53e]
Successors: [0x54f]
---
0x54e JUMPDEST
---
0x54e: JUMPDEST 
---
Entry stack: [V12, 0x25c, 0x0, S1, {0x25c, 0x5e8}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, 0x0, S1, {0x25c, 0x5e8}]

================================

Block 0x54f
[0x54f:0x54f]
---
Predecessors: [0x54e]
Successors: [0x550]
---
0x54f JUMPDEST
---
0x54f: JUMPDEST 
---
Entry stack: [V12, 0x25c, 0x0, S1, {0x25c, 0x5e8}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, 0x0, S1, {0x25c, 0x5e8}]

================================

Block 0x550
[0x550:0x551]
---
Predecessors: [0x54f]
Successors: [0x25c, 0x5e8]
---
0x550 JUMPDEST
0x551 JUMP
---
0x550: JUMPDEST 
0x551: JUMP {0x25c, 0x5e8}
---
Entry stack: [V12, 0x25c, 0x0, S1, {0x25c, 0x5e8}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x25c, 0x0, S1]

================================

Block 0x552
[0x552:0x557]
---
Predecessors: [0x27e]
Successors: [0x286]
---
0x552 JUMPDEST
0x553 PUSH1 0x3
0x555 SLOAD
0x556 DUP2
0x557 JUMP
---
0x552: JUMPDEST 
0x553: V506 = 0x3
0x555: V507 = S[0x3]
0x557: JUMP 0x286
---
Entry stack: [V12, 0x286]
Stack pops: 1
Stack additions: [S0, V507]
Exit stack: [V12, 0x286, V507]

================================

Block 0x558
[0x558:0x55d]
---
Predecessors: [0x2a3]
Successors: [0x286]
---
0x558 JUMPDEST
0x559 PUSH1 0xb
0x55b SLOAD
0x55c DUP2
0x55d JUMP
---
0x558: JUMPDEST 
0x559: V508 = 0xb
0x55b: V509 = S[0xb]
0x55d: JUMP 0x286
---
Entry stack: [V12, 0x286]
Stack pops: 1
Stack additions: [S0, V509]
Exit stack: [V12, 0x286, V509]

================================

Block 0x55e
[0x55e:0x56c]
---
Predecessors: [0x2c8]
Successors: [0x2d0]
---
0x55e JUMPDEST
0x55f PUSH1 0x0
0x561 SLOAD
0x562 PUSH1 0x1
0x564 PUSH1 0xa0
0x566 PUSH1 0x2
0x568 EXP
0x569 SUB
0x56a AND
0x56b DUP2
0x56c JUMP
---
0x55e: JUMPDEST 
0x55f: V510 = 0x0
0x561: V511 = S[0x0]
0x562: V512 = 0x1
0x564: V513 = 0xa0
0x566: V514 = 0x2
0x568: V515 = EXP 0x2 0xa0
0x569: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56a: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x56c: JUMP 0x2d0
---
Entry stack: [V12, 0x2d0]
Stack pops: 1
Stack additions: [S0, V517]
Exit stack: [V12, 0x2d0, V517]

================================

Block 0x56d
[0x56d:0x572]
---
Predecessors: [0x2f7]
Successors: [0x286]
---
0x56d JUMPDEST
0x56e PUSH1 0x5
0x570 SLOAD
0x571 DUP2
0x572 JUMP
---
0x56d: JUMPDEST 
0x56e: V518 = 0x5
0x570: V519 = S[0x5]
0x572: JUMP 0x286
---
Entry stack: [V12, 0x286]
Stack pops: 1
Stack additions: [S0, V519]
Exit stack: [V12, 0x286, V519]

================================

Block 0x573
[0x573:0x581]
---
Predecessors: [0x31c]
Successors: [0x2d0]
---
0x573 JUMPDEST
0x574 PUSH1 0x7
0x576 SLOAD
0x577 PUSH1 0x1
0x579 PUSH1 0xa0
0x57b PUSH1 0x2
0x57d EXP
0x57e SUB
0x57f AND
0x580 DUP2
0x581 JUMP
---
0x573: JUMPDEST 
0x574: V520 = 0x7
0x576: V521 = S[0x7]
0x577: V522 = 0x1
0x579: V523 = 0xa0
0x57b: V524 = 0x2
0x57d: V525 = EXP 0x2 0xa0
0x57e: V526 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57f: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x581: JUMP 0x2d0
---
Entry stack: [V12, 0x2d0]
Stack pops: 1
Stack additions: [S0, V527]
Exit stack: [V12, 0x2d0, V527]

================================

Block 0x582
[0x582:0x593]
---
Predecessors: [0x34b]
Successors: [0x286]
---
0x582 JUMPDEST
0x583 PUSH1 0x8
0x585 PUSH1 0x20
0x587 MSTORE
0x588 PUSH1 0x0
0x58a SWAP1
0x58b DUP2
0x58c MSTORE
0x58d PUSH1 0x40
0x58f SWAP1
0x590 SHA3
0x591 SLOAD
0x592 DUP2
0x593 JUMP
---
0x582: JUMPDEST 
0x583: V528 = 0x8
0x585: V529 = 0x20
0x587: M[0x20] = 0x8
0x588: V530 = 0x0
0x58c: M[0x0] = V320
0x58d: V531 = 0x40
0x590: V532 = SHA3 0x0 0x40
0x591: V533 = S[V532]
0x593: JUMP 0x286
---
Entry stack: [V12, 0x286, V320]
Stack pops: 2
Stack additions: [S1, V533]
Exit stack: [V12, 0x286, V533]

================================

Block 0x594
[0x594:0x5a2]
---
Predecessors: [0x37c]
Successors: [0x384]
---
0x594 JUMPDEST
0x595 PUSH1 0x9
0x597 SLOAD
0x598 PUSH3 0x10000
0x59c SWAP1
0x59d DIV
0x59e PUSH1 0xff
0x5a0 AND
0x5a1 DUP2
0x5a2 JUMP
---
0x594: JUMPDEST 
0x595: V534 = 0x9
0x597: V535 = S[0x9]
0x598: V536 = 0x10000
0x59d: V537 = DIV V535 0x10000
0x59e: V538 = 0xff
0x5a0: V539 = AND 0xff V537
0x5a2: JUMP 0x384
---
Entry stack: [V12, 0x384]
Stack pops: 1
Stack additions: [S0, V539]
Exit stack: [V12, 0x384, V539]

================================

Block 0x5a3
[0x5a3:0x5a8]
---
Predecessors: [0x3a3]
Successors: [0x286]
---
0x5a3 JUMPDEST
0x5a4 PUSH1 0xa
0x5a6 SLOAD
0x5a7 DUP2
0x5a8 JUMP
---
0x5a3: JUMPDEST 
0x5a4: V540 = 0xa
0x5a6: V541 = S[0xa]
0x5a8: JUMP 0x286
---
Entry stack: [V12, 0x286]
Stack pops: 1
Stack additions: [S0, V541]
Exit stack: [V12, 0x286, V541]

================================

Block 0x5a9
[0x5a9:0x5ae]
---
Predecessors: [0x3c8]
Successors: [0x286]
---
0x5a9 JUMPDEST
0x5aa PUSH1 0x1
0x5ac SLOAD
0x5ad DUP2
0x5ae JUMP
---
0x5a9: JUMPDEST 
0x5aa: V542 = 0x1
0x5ac: V543 = S[0x1]
0x5ae: JUMP 0x286
---
Entry stack: [V12, 0x286]
Stack pops: 1
Stack additions: [S0, V543]
Exit stack: [V12, 0x286, V543]

================================

Block 0x5af
[0x5af:0x5b4]
---
Predecessors: [0x3ed]
Successors: [0x286]
---
0x5af JUMPDEST
0x5b0 PUSH1 0x2
0x5b2 SLOAD
0x5b3 DUP2
0x5b4 JUMP
---
0x5af: JUMPDEST 
0x5b0: V544 = 0x2
0x5b2: V545 = S[0x2]
0x5b4: JUMP 0x286
---
Entry stack: [V12, 0x286]
Stack pops: 1
Stack additions: [S0, V545]
Exit stack: [V12, 0x286, V545]

================================

Block 0x5b5
[0x5b5:0x5ba]
---
Predecessors: [0x412]
Successors: [0x286]
---
0x5b5 JUMPDEST
0x5b6 PUSH1 0x4
0x5b8 SLOAD
0x5b9 DUP2
0x5ba JUMP
---
0x5b5: JUMPDEST 
0x5b6: V546 = 0x4
0x5b8: V547 = S[0x4]
0x5ba: JUMP 0x286
---
Entry stack: [V12, 0x286]
Stack pops: 1
Stack additions: [S0, V547]
Exit stack: [V12, 0x286, V547]

================================

Block 0x5bb
[0x5bb:0x5c9]
---
Predecessors: [0x437]
Successors: [0x2d0]
---
0x5bb JUMPDEST
0x5bc PUSH1 0x6
0x5be SLOAD
0x5bf PUSH1 0x1
0x5c1 PUSH1 0xa0
0x5c3 PUSH1 0x2
0x5c5 EXP
0x5c6 SUB
0x5c7 AND
0x5c8 DUP2
0x5c9 JUMP
---
0x5bb: JUMPDEST 
0x5bc: V548 = 0x6
0x5be: V549 = S[0x6]
0x5bf: V550 = 0x1
0x5c1: V551 = 0xa0
0x5c3: V552 = 0x2
0x5c5: V553 = EXP 0x2 0xa0
0x5c6: V554 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c7: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x5c9: JUMP 0x2d0
---
Entry stack: [V12, 0x2d0]
Stack pops: 1
Stack additions: [S0, V555]
Exit stack: [V12, 0x2d0, V555]

================================

Block 0x5ca
[0x5ca:0x5cf]
---
Predecessors: [0x466]
Successors: [0x5d0]
---
0x5ca JUMPDEST
0x5cb PUSH1 0xb
0x5cd SLOAD
0x5ce TIMESTAMP
0x5cf GT
---
0x5ca: JUMPDEST 
0x5cb: V556 = 0xb
0x5cd: V557 = S[0xb]
0x5ce: V558 = TIMESTAMP
0x5cf: V559 = GT V558 V557
---
Entry stack: [V12, 0x384]
Stack pops: 0
Stack additions: [V559]
Exit stack: [V12, 0x384, V559]

================================

Block 0x5d0
[0x5d0:0x5d2]
---
Predecessors: [0x5ca]
Successors: [0x384]
---
0x5d0 JUMPDEST
0x5d1 SWAP1
0x5d2 JUMP
---
0x5d0: JUMPDEST 
0x5d2: JUMP 0x384
---
Entry stack: [V12, 0x384, V559]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V559]

================================

Block 0x5d3
[0x5d3:0x5e0]
---
Predecessors: [0x48d]
Successors: [0x258, 0x5e1]
---
0x5d3 JUMPDEST
0x5d4 PUSH1 0x0
0x5d6 DUP1
0x5d7 PUSH1 0xb
0x5d9 SLOAD
0x5da TIMESTAMP
0x5db GT
0x5dc ISZERO
0x5dd PUSH2 0x258
0x5e0 JUMPI
---
0x5d3: JUMPDEST 
0x5d4: V560 = 0x0
0x5d7: V561 = 0xb
0x5d9: V562 = S[0xb]
0x5da: V563 = TIMESTAMP
0x5db: V564 = GT V563 V562
0x5dc: V565 = ISZERO V564
0x5dd: V566 = 0x258
0x5e0: JUMPI 0x258 V565
---
Entry stack: [V12, 0x25c]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x25c, 0x0, 0x0]

================================

Block 0x5e1
[0x5e1:0x5e7]
---
Predecessors: [0x5d3]
Successors: [0x4c8]
---
0x5e1 PUSH2 0x5e8
0x5e4 PUSH2 0x4c8
0x5e7 JUMP
---
0x5e1: V567 = 0x5e8
0x5e4: V568 = 0x4c8
0x5e7: JUMP 0x4c8
---
Entry stack: [V12, 0x25c, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x5e8]
Exit stack: [V12, 0x25c, 0x0, 0x0, 0x5e8]

================================

Block 0x5e8
[0x5e8:0x5fa]
---
Predecessors: [0x550]
Successors: [0x5fb, 0x6b5]
---
0x5e8 JUMPDEST
0x5e9 PUSH1 0x9
0x5eb SLOAD
0x5ec PUSH3 0x10000
0x5f0 SWAP1
0x5f1 DIV
0x5f2 PUSH1 0xff
0x5f4 AND
0x5f5 ISZERO
0x5f6 ISZERO
0x5f7 PUSH2 0x6b5
0x5fa JUMPI
---
0x5e8: JUMPDEST 
0x5e9: V569 = 0x9
0x5eb: V570 = S[0x9]
0x5ec: V571 = 0x10000
0x5f1: V572 = DIV V570 0x10000
0x5f2: V573 = 0xff
0x5f4: V574 = AND 0xff V572
0x5f5: V575 = ISZERO V574
0x5f6: V576 = ISZERO V575
0x5f7: V577 = 0x6b5
0x5fa: JUMPI 0x6b5 V576
---
Entry stack: [V12, 0x25c, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, 0x0, S0]

================================

Block 0x5fb
[0x5fb:0x60c]
---
Predecessors: [0x5e8]
Successors: [0x60d, 0x61c]
---
0x5fb PUSH1 0x2
0x5fd SLOAD
0x5fe PUSH8 0x8ac7230489e80000
0x607 SWAP1
0x608 LT
0x609 PUSH2 0x61c
0x60c JUMPI
---
0x5fb: V578 = 0x2
0x5fd: V579 = S[0x2]
0x5fe: V580 = 0x8ac7230489e80000
0x608: V581 = LT V579 0x8ac7230489e80000
0x609: V582 = 0x61c
0x60c: JUMPI 0x61c V581
---
Entry stack: [V12, 0x25c, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, 0x0, S0]

================================

Block 0x60d
[0x60d:0x61b]
---
Predecessors: [0x5fb]
Successors: [0x622]
---
0x60d PUSH8 0x8ac7230489e80000
0x616 SWAP2
0x617 POP
0x618 PUSH2 0x622
0x61b JUMP
---
0x60d: V583 = 0x8ac7230489e80000
0x618: V584 = 0x622
0x61b: JUMP 0x622
---
Entry stack: [V12, 0x25c, 0x0, S0]
Stack pops: 2
Stack additions: [0x8ac7230489e80000, S0]
Exit stack: [V12, 0x25c, 0x8ac7230489e80000, S0]

================================

Block 0x61c
[0x61c:0x621]
---
Predecessors: [0x5fb]
Successors: [0x622]
---
0x61c JUMPDEST
0x61d PUSH1 0x2
0x61f SLOAD
0x620 SWAP2
0x621 POP
---
0x61c: JUMPDEST 
0x61d: V585 = 0x2
0x61f: V586 = S[0x2]
---
Entry stack: [V12, 0x25c, 0x0, S0]
Stack pops: 2
Stack additions: [V586, S0]
Exit stack: [V12, 0x25c, V586, S0]

================================

Block 0x622
[0x622:0x650]
---
Predecessors: [0x60d, 0x61c]
Successors: [0x651, 0x655]
---
0x622 JUMPDEST
0x623 PUSH1 0x6
0x625 SLOAD
0x626 PUSH1 0x1
0x628 PUSH1 0xa0
0x62a PUSH1 0x2
0x62c EXP
0x62d SUB
0x62e AND
0x62f DUP3
0x630 ISZERO
0x631 PUSH2 0x8fc
0x634 MUL
0x635 DUP4
0x636 PUSH1 0x40
0x638 MLOAD
0x639 PUSH1 0x0
0x63b PUSH1 0x40
0x63d MLOAD
0x63e DUP1
0x63f DUP4
0x640 SUB
0x641 DUP2
0x642 DUP6
0x643 DUP9
0x644 DUP9
0x645 CALL
0x646 SWAP4
0x647 POP
0x648 POP
0x649 POP
0x64a POP
0x64b ISZERO
0x64c ISZERO
0x64d PUSH2 0x655
0x650 JUMPI
---
0x622: JUMPDEST 
0x623: V587 = 0x6
0x625: V588 = S[0x6]
0x626: V589 = 0x1
0x628: V590 = 0xa0
0x62a: V591 = 0x2
0x62c: V592 = EXP 0x2 0xa0
0x62d: V593 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62e: V594 = AND 0xffffffffffffffffffffffffffffffffffffffff V588
0x630: V595 = ISZERO S1
0x631: V596 = 0x8fc
0x634: V597 = MUL 0x8fc V595
0x636: V598 = 0x40
0x638: V599 = M[0x40]
0x639: V600 = 0x0
0x63b: V601 = 0x40
0x63d: V602 = M[0x40]
0x640: V603 = SUB V599 V602
0x645: V604 = CALL V597 V594 S1 V602 V603 V602 0x0
0x64b: V605 = ISZERO V604
0x64c: V606 = ISZERO V605
0x64d: V607 = 0x655
0x650: JUMPI 0x655 V606
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x25c, S1, S0]

================================

Block 0x651
[0x651:0x654]
---
Predecessors: [0x622]
Successors: []
---
0x651 PUSH1 0x0
0x653 DUP1
0x654 REVERT
---
0x651: V608 = 0x0
0x654: REVERT 0x0 0x0
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, S1, S0]

================================

Block 0x655
[0x655:0x6b4]
---
Predecessors: [0x622]
Successors: [0x6b5]
---
0x655 JUMPDEST
0x656 PUSH1 0x6
0x658 SLOAD
0x659 PUSH1 0x0
0x65b DUP1
0x65c MLOAD
0x65d PUSH1 0x20
0x65f PUSH2 0x856
0x662 DUP4
0x663 CODECOPY
0x664 DUP2
0x665 MLOAD
0x666 SWAP2
0x667 MSTORE
0x668 SWAP1
0x669 PUSH1 0x1
0x66b PUSH1 0xa0
0x66d PUSH1 0x2
0x66f EXP
0x670 SUB
0x671 AND
0x672 DUP4
0x673 PUSH1 0x1
0x675 PUSH1 0x40
0x677 MLOAD
0x678 PUSH1 0x1
0x67a PUSH1 0xa0
0x67c PUSH1 0x2
0x67e EXP
0x67f SUB
0x680 SWAP1
0x681 SWAP4
0x682 AND
0x683 DUP4
0x684 MSTORE
0x685 PUSH1 0x20
0x687 DUP4
0x688 ADD
0x689 SWAP2
0x68a SWAP1
0x68b SWAP2
0x68c MSTORE
0x68d ISZERO
0x68e ISZERO
0x68f PUSH1 0x40
0x691 DUP1
0x692 DUP4
0x693 ADD
0x694 SWAP2
0x695 SWAP1
0x696 SWAP2
0x697 MSTORE
0x698 PUSH1 0x60
0x69a SWAP1
0x69b SWAP2
0x69c ADD
0x69d SWAP1
0x69e MLOAD
0x69f DUP1
0x6a0 SWAP2
0x6a1 SUB
0x6a2 SWAP1
0x6a3 LOG1
0x6a4 PUSH1 0x9
0x6a6 DUP1
0x6a7 SLOAD
0x6a8 PUSH3 0xff0000
0x6ac NOT
0x6ad AND
0x6ae PUSH3 0x10000
0x6b2 OR
0x6b3 SWAP1
0x6b4 SSTORE
---
0x655: JUMPDEST 
0x656: V609 = 0x6
0x658: V610 = S[0x6]
0x659: V611 = 0x0
0x65c: V612 = M[0x0]
0x65d: V613 = 0x20
0x65f: V614 = 0x856
0x663: CODECOPY 0x0 0x856 0x20
0x665: V615 = M[0x0]
0x667: M[0x0] = V612
0x669: V616 = 0x1
0x66b: V617 = 0xa0
0x66d: V618 = 0x2
0x66f: V619 = EXP 0x2 0xa0
0x670: V620 = SUB 0x10000000000000000000000000000000000000000 0x1
0x671: V621 = AND 0xffffffffffffffffffffffffffffffffffffffff V610
0x673: V622 = 0x1
0x675: V623 = 0x40
0x677: V624 = M[0x40]
0x678: V625 = 0x1
0x67a: V626 = 0xa0
0x67c: V627 = 0x2
0x67e: V628 = EXP 0x2 0xa0
0x67f: V629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x682: V630 = AND V621 0xffffffffffffffffffffffffffffffffffffffff
0x684: M[V624] = V630
0x685: V631 = 0x20
0x688: V632 = ADD V624 0x20
0x68c: M[V632] = S1
0x68d: V633 = ISZERO 0x1
0x68e: V634 = ISZERO 0x0
0x68f: V635 = 0x40
0x693: V636 = ADD V624 0x40
0x697: M[V636] = 0x1
0x698: V637 = 0x60
0x69c: V638 = ADD V624 0x60
0x69e: V639 = M[0x40]
0x6a1: V640 = SUB V638 V639
0x6a3: LOG V639 V640 V615
0x6a4: V641 = 0x9
0x6a7: V642 = S[0x9]
0x6a8: V643 = 0xff0000
0x6ac: V644 = NOT 0xff0000
0x6ad: V645 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V642
0x6ae: V646 = 0x10000
0x6b2: V647 = OR 0x10000 V645
0x6b4: S[0x9] = V647
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x25c, S1, S0]

================================

Block 0x6b5
[0x6b5:0x6c1]
---
Predecessors: [0x5e8, 0x655]
Successors: [0x6c2, 0x776]
---
0x6b5 JUMPDEST
0x6b6 PUSH1 0x9
0x6b8 SLOAD
0x6b9 PUSH1 0xff
0x6bb AND
0x6bc ISZERO
0x6bd ISZERO
0x6be PUSH2 0x776
0x6c1 JUMPI
---
0x6b5: JUMPDEST 
0x6b6: V648 = 0x9
0x6b8: V649 = S[0x9]
0x6b9: V650 = 0xff
0x6bb: V651 = AND 0xff V649
0x6bc: V652 = ISZERO V651
0x6bd: V653 = ISZERO V652
0x6be: V654 = 0x776
0x6c1: JUMPI 0x776 V653
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, S1, S0]

================================

Block 0x6c2
[0x6c2:0x6e8]
---
Predecessors: [0x6b5]
Successors: [0x6e9, 0x776]
---
0x6c2 POP
0x6c3 PUSH1 0x1
0x6c5 PUSH1 0xa0
0x6c7 PUSH1 0x2
0x6c9 EXP
0x6ca SUB
0x6cb CALLER
0x6cc AND
0x6cd PUSH1 0x0
0x6cf SWAP1
0x6d0 DUP2
0x6d1 MSTORE
0x6d2 PUSH1 0x8
0x6d4 PUSH1 0x20
0x6d6 MSTORE
0x6d7 PUSH1 0x40
0x6d9 DUP2
0x6da SHA3
0x6db DUP1
0x6dc SLOAD
0x6dd SWAP1
0x6de DUP3
0x6df SWAP1
0x6e0 SSTORE
0x6e1 SWAP1
0x6e2 DUP2
0x6e3 GT
0x6e4 ISZERO
0x6e5 PUSH2 0x776
0x6e8 JUMPI
---
0x6c3: V655 = 0x1
0x6c5: V656 = 0xa0
0x6c7: V657 = 0x2
0x6c9: V658 = EXP 0x2 0xa0
0x6ca: V659 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cb: V660 = CALLER
0x6cc: V661 = AND V660 0xffffffffffffffffffffffffffffffffffffffff
0x6cd: V662 = 0x0
0x6d1: M[0x0] = V661
0x6d2: V663 = 0x8
0x6d4: V664 = 0x20
0x6d6: M[0x20] = 0x8
0x6d7: V665 = 0x40
0x6da: V666 = SHA3 0x0 0x40
0x6dc: V667 = S[V666]
0x6e0: S[V666] = 0x0
0x6e3: V668 = GT V667 0x0
0x6e4: V669 = ISZERO V668
0x6e5: V670 = 0x776
0x6e8: JUMPI 0x776 V669
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 1
Stack additions: [V667]
Exit stack: [V12, 0x25c, S1, V667]

================================

Block 0x6e9
[0x6e9:0x713]
---
Predecessors: [0x6c2]
Successors: [0x714, 0x75a]
---
0x6e9 PUSH1 0x1
0x6eb PUSH1 0xa0
0x6ed PUSH1 0x2
0x6ef EXP
0x6f0 SUB
0x6f1 CALLER
0x6f2 AND
0x6f3 DUP2
0x6f4 ISZERO
0x6f5 PUSH2 0x8fc
0x6f8 MUL
0x6f9 DUP3
0x6fa PUSH1 0x40
0x6fc MLOAD
0x6fd PUSH1 0x0
0x6ff PUSH1 0x40
0x701 MLOAD
0x702 DUP1
0x703 DUP4
0x704 SUB
0x705 DUP2
0x706 DUP6
0x707 DUP9
0x708 DUP9
0x709 CALL
0x70a SWAP4
0x70b POP
0x70c POP
0x70d POP
0x70e POP
0x70f ISZERO
0x710 PUSH2 0x75a
0x713 JUMPI
---
0x6e9: V671 = 0x1
0x6eb: V672 = 0xa0
0x6ed: V673 = 0x2
0x6ef: V674 = EXP 0x2 0xa0
0x6f0: V675 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f1: V676 = CALLER
0x6f2: V677 = AND V676 0xffffffffffffffffffffffffffffffffffffffff
0x6f4: V678 = ISZERO V667
0x6f5: V679 = 0x8fc
0x6f8: V680 = MUL 0x8fc V678
0x6fa: V681 = 0x40
0x6fc: V682 = M[0x40]
0x6fd: V683 = 0x0
0x6ff: V684 = 0x40
0x701: V685 = M[0x40]
0x704: V686 = SUB V682 V685
0x709: V687 = CALL V680 V677 V667 V685 V686 V685 0x0
0x70f: V688 = ISZERO V687
0x710: V689 = 0x75a
0x713: JUMPI 0x75a V688
---
Entry stack: [V12, 0x25c, S1, V667]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x25c, S1, V667]

================================

Block 0x714
[0x714:0x759]
---
Predecessors: [0x6e9]
Successors: [0x776]
---
0x714 PUSH1 0x0
0x716 DUP1
0x717 MLOAD
0x718 PUSH1 0x20
0x71a PUSH2 0x856
0x71d DUP4
0x71e CODECOPY
0x71f DUP2
0x720 MLOAD
0x721 SWAP2
0x722 MSTORE
0x723 CALLER
0x724 DUP3
0x725 PUSH1 0x0
0x727 PUSH1 0x40
0x729 MLOAD
0x72a PUSH1 0x1
0x72c PUSH1 0xa0
0x72e PUSH1 0x2
0x730 EXP
0x731 SUB
0x732 SWAP1
0x733 SWAP4
0x734 AND
0x735 DUP4
0x736 MSTORE
0x737 PUSH1 0x20
0x739 DUP4
0x73a ADD
0x73b SWAP2
0x73c SWAP1
0x73d SWAP2
0x73e MSTORE
0x73f ISZERO
0x740 ISZERO
0x741 PUSH1 0x40
0x743 DUP1
0x744 DUP4
0x745 ADD
0x746 SWAP2
0x747 SWAP1
0x748 SWAP2
0x749 MSTORE
0x74a PUSH1 0x60
0x74c SWAP1
0x74d SWAP2
0x74e ADD
0x74f SWAP1
0x750 MLOAD
0x751 DUP1
0x752 SWAP2
0x753 SUB
0x754 SWAP1
0x755 LOG1
0x756 PUSH2 0x776
0x759 JUMP
---
0x714: V690 = 0x0
0x717: V691 = M[0x0]
0x718: V692 = 0x20
0x71a: V693 = 0x856
0x71e: CODECOPY 0x0 0x856 0x20
0x720: V694 = M[0x0]
0x722: M[0x0] = V691
0x723: V695 = CALLER
0x725: V696 = 0x0
0x727: V697 = 0x40
0x729: V698 = M[0x40]
0x72a: V699 = 0x1
0x72c: V700 = 0xa0
0x72e: V701 = 0x2
0x730: V702 = EXP 0x2 0xa0
0x731: V703 = SUB 0x10000000000000000000000000000000000000000 0x1
0x734: V704 = AND V695 0xffffffffffffffffffffffffffffffffffffffff
0x736: M[V698] = V704
0x737: V705 = 0x20
0x73a: V706 = ADD V698 0x20
0x73e: M[V706] = V667
0x73f: V707 = ISZERO 0x0
0x740: V708 = ISZERO 0x1
0x741: V709 = 0x40
0x745: V710 = ADD V698 0x40
0x749: M[V710] = 0x0
0x74a: V711 = 0x60
0x74e: V712 = ADD V698 0x60
0x750: V713 = M[0x40]
0x753: V714 = SUB V712 V713
0x755: LOG V713 V714 V694
0x756: V715 = 0x776
0x759: JUMP 0x776
---
Entry stack: [V12, 0x25c, S1, V667]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x25c, S1, V667]

================================

Block 0x75a
[0x75a:0x775]
---
Predecessors: [0x6e9]
Successors: [0x776]
---
0x75a JUMPDEST
0x75b PUSH1 0x1
0x75d PUSH1 0xa0
0x75f PUSH1 0x2
0x761 EXP
0x762 SUB
0x763 CALLER
0x764 AND
0x765 PUSH1 0x0
0x767 SWAP1
0x768 DUP2
0x769 MSTORE
0x76a PUSH1 0x8
0x76c PUSH1 0x20
0x76e MSTORE
0x76f PUSH1 0x40
0x771 SWAP1
0x772 SHA3
0x773 DUP2
0x774 SWAP1
0x775 SSTORE
---
0x75a: JUMPDEST 
0x75b: V716 = 0x1
0x75d: V717 = 0xa0
0x75f: V718 = 0x2
0x761: V719 = EXP 0x2 0xa0
0x762: V720 = SUB 0x10000000000000000000000000000000000000000 0x1
0x763: V721 = CALLER
0x764: V722 = AND V721 0xffffffffffffffffffffffffffffffffffffffff
0x765: V723 = 0x0
0x769: M[0x0] = V722
0x76a: V724 = 0x8
0x76c: V725 = 0x20
0x76e: M[0x20] = 0x8
0x76f: V726 = 0x40
0x772: V727 = SHA3 0x0 0x40
0x775: S[V727] = V667
---
Entry stack: [V12, 0x25c, S1, V667]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x25c, S1, V667]

================================

Block 0x776
[0x776:0x776]
---
Predecessors: [0x6b5, 0x6c2, 0x714, 0x75a]
Successors: [0x777]
---
0x776 JUMPDEST
---
0x776: JUMPDEST 
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, S1, S0]

================================

Block 0x777
[0x777:0x777]
---
Predecessors: [0x776]
Successors: [0x778]
---
0x777 JUMPDEST
---
0x777: JUMPDEST 
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, S1, S0]

================================

Block 0x778
[0x778:0x784]
---
Predecessors: [0x777]
Successors: [0x785, 0x798]
---
0x778 JUMPDEST
0x779 PUSH1 0x9
0x77b SLOAD
0x77c PUSH1 0xff
0x77e AND
0x77f DUP1
0x780 ISZERO
0x781 PUSH2 0x798
0x784 JUMPI
---
0x778: JUMPDEST 
0x779: V728 = 0x9
0x77b: V729 = S[0x9]
0x77c: V730 = 0xff
0x77e: V731 = AND 0xff V729
0x780: V732 = ISZERO V731
0x781: V733 = 0x798
0x784: JUMPI 0x798 V732
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 0
Stack additions: [V731]
Exit stack: [V12, 0x25c, S1, S0, V731]

================================

Block 0x785
[0x785:0x797]
---
Predecessors: [0x778]
Successors: [0x798]
---
0x785 POP
0x786 PUSH1 0x0
0x788 SLOAD
0x789 CALLER
0x78a PUSH1 0x1
0x78c PUSH1 0xa0
0x78e PUSH1 0x2
0x790 EXP
0x791 SUB
0x792 SWAP1
0x793 DUP2
0x794 AND
0x795 SWAP2
0x796 AND
0x797 EQ
---
0x786: V734 = 0x0
0x788: V735 = S[0x0]
0x789: V736 = CALLER
0x78a: V737 = 0x1
0x78c: V738 = 0xa0
0x78e: V739 = 0x2
0x790: V740 = EXP 0x2 0xa0
0x791: V741 = SUB 0x10000000000000000000000000000000000000000 0x1
0x794: V742 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0x796: V743 = AND V735 0xffffffffffffffffffffffffffffffffffffffff
0x797: V744 = EQ V743 V742
---
Entry stack: [V12, 0x25c, S2, S1, V731]
Stack pops: 1
Stack additions: [V744]
Exit stack: [V12, 0x25c, S2, S1, V744]

================================

Block 0x798
[0x798:0x79d]
---
Predecessors: [0x778, 0x785]
Successors: [0x258, 0x79e]
---
0x798 JUMPDEST
0x799 ISZERO
0x79a PUSH2 0x258
0x79d JUMPI
---
0x798: JUMPDEST 
0x799: V745 = ISZERO S0
0x79a: V746 = 0x258
0x79d: JUMPI 0x258 V745
---
Entry stack: [V12, 0x25c, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x25c, S2, S1]

================================

Block 0x79e
[0x79e:0x7db]
---
Predecessors: [0x798]
Successors: [0x7dc, 0x842]
---
0x79e PUSH1 0x0
0x7a0 SLOAD
0x7a1 PUSH1 0x2
0x7a3 SLOAD
0x7a4 PUSH1 0x1
0x7a6 PUSH1 0xa0
0x7a8 PUSH1 0x2
0x7aa EXP
0x7ab SUB
0x7ac SWAP1
0x7ad SWAP2
0x7ae AND
0x7af SWAP1
0x7b0 PUSH8 0x8ac7230489e7ffff
0x7b9 NOT
0x7ba ADD
0x7bb DUP1
0x7bc ISZERO
0x7bd PUSH2 0x8fc
0x7c0 MUL
0x7c1 SWAP1
0x7c2 PUSH1 0x40
0x7c4 MLOAD
0x7c5 PUSH1 0x0
0x7c7 PUSH1 0x40
0x7c9 MLOAD
0x7ca DUP1
0x7cb DUP4
0x7cc SUB
0x7cd DUP2
0x7ce DUP6
0x7cf DUP9
0x7d0 DUP9
0x7d1 CALL
0x7d2 SWAP4
0x7d3 POP
0x7d4 POP
0x7d5 POP
0x7d6 POP
0x7d7 ISZERO
0x7d8 PUSH2 0x842
0x7db JUMPI
---
0x79e: V747 = 0x0
0x7a0: V748 = S[0x0]
0x7a1: V749 = 0x2
0x7a3: V750 = S[0x2]
0x7a4: V751 = 0x1
0x7a6: V752 = 0xa0
0x7a8: V753 = 0x2
0x7aa: V754 = EXP 0x2 0xa0
0x7ab: V755 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ae: V756 = AND V748 0xffffffffffffffffffffffffffffffffffffffff
0x7b0: V757 = 0x8ac7230489e7ffff
0x7b9: V758 = NOT 0x8ac7230489e7ffff
0x7ba: V759 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffff7538dcfb76180000 V750
0x7bc: V760 = ISZERO V759
0x7bd: V761 = 0x8fc
0x7c0: V762 = MUL 0x8fc V760
0x7c2: V763 = 0x40
0x7c4: V764 = M[0x40]
0x7c5: V765 = 0x0
0x7c7: V766 = 0x40
0x7c9: V767 = M[0x40]
0x7cc: V768 = SUB V764 V767
0x7d1: V769 = CALL V762 V756 V759 V767 V768 V767 0x0
0x7d7: V770 = ISZERO V769
0x7d8: V771 = 0x842
0x7db: JUMPI 0x842 V770
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, S1, S0]

================================

Block 0x7dc
[0x7dc:0x841]
---
Predecessors: [0x79e]
Successors: [0x258]
---
0x7dc PUSH1 0x0
0x7de DUP1
0x7df MLOAD
0x7e0 PUSH1 0x20
0x7e2 PUSH2 0x856
0x7e5 DUP4
0x7e6 CODECOPY
0x7e7 DUP2
0x7e8 MLOAD
0x7e9 SWAP2
0x7ea MSTORE
0x7eb PUSH1 0x0
0x7ed DUP1
0x7ee SWAP1
0x7ef SLOAD
0x7f0 SWAP1
0x7f1 PUSH2 0x100
0x7f4 EXP
0x7f5 SWAP1
0x7f6 DIV
0x7f7 PUSH1 0x1
0x7f9 PUSH1 0xa0
0x7fb PUSH1 0x2
0x7fd EXP
0x7fe SUB
0x7ff AND
0x800 PUSH8 0x8ac7230489e80000
0x809 PUSH1 0x2
0x80b SLOAD
0x80c SUB
0x80d PUSH1 0x0
0x80f PUSH1 0x40
0x811 MLOAD
0x812 PUSH1 0x1
0x814 PUSH1 0xa0
0x816 PUSH1 0x2
0x818 EXP
0x819 SUB
0x81a SWAP1
0x81b SWAP4
0x81c AND
0x81d DUP4
0x81e MSTORE
0x81f PUSH1 0x20
0x821 DUP4
0x822 ADD
0x823 SWAP2
0x824 SWAP1
0x825 SWAP2
0x826 MSTORE
0x827 ISZERO
0x828 ISZERO
0x829 PUSH1 0x40
0x82b DUP1
0x82c DUP4
0x82d ADD
0x82e SWAP2
0x82f SWAP1
0x830 SWAP2
0x831 MSTORE
0x832 PUSH1 0x60
0x834 SWAP1
0x835 SWAP2
0x836 ADD
0x837 SWAP1
0x838 MLOAD
0x839 DUP1
0x83a SWAP2
0x83b SUB
0x83c SWAP1
0x83d LOG1
0x83e PUSH2 0x258
0x841 JUMP
---
0x7dc: V772 = 0x0
0x7df: V773 = M[0x0]
0x7e0: V774 = 0x20
0x7e2: V775 = 0x856
0x7e6: CODECOPY 0x0 0x856 0x20
0x7e8: V776 = M[0x0]
0x7ea: M[0x0] = V773
0x7eb: V777 = 0x0
0x7ef: V778 = S[0x0]
0x7f1: V779 = 0x100
0x7f4: V780 = EXP 0x100 0x0
0x7f6: V781 = DIV V778 0x1
0x7f7: V782 = 0x1
0x7f9: V783 = 0xa0
0x7fb: V784 = 0x2
0x7fd: V785 = EXP 0x2 0xa0
0x7fe: V786 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ff: V787 = AND 0xffffffffffffffffffffffffffffffffffffffff V781
0x800: V788 = 0x8ac7230489e80000
0x809: V789 = 0x2
0x80b: V790 = S[0x2]
0x80c: V791 = SUB V790 0x8ac7230489e80000
0x80d: V792 = 0x0
0x80f: V793 = 0x40
0x811: V794 = M[0x40]
0x812: V795 = 0x1
0x814: V796 = 0xa0
0x816: V797 = 0x2
0x818: V798 = EXP 0x2 0xa0
0x819: V799 = SUB 0x10000000000000000000000000000000000000000 0x1
0x81c: V800 = AND V787 0xffffffffffffffffffffffffffffffffffffffff
0x81e: M[V794] = V800
0x81f: V801 = 0x20
0x822: V802 = ADD V794 0x20
0x826: M[V802] = V791
0x827: V803 = ISZERO 0x0
0x828: V804 = ISZERO 0x1
0x829: V805 = 0x40
0x82d: V806 = ADD V794 0x40
0x831: M[V806] = 0x0
0x832: V807 = 0x60
0x836: V808 = ADD V794 0x60
0x838: V809 = M[0x40]
0x83b: V810 = SUB V808 V809
0x83d: LOG V809 V810 V776
0x83e: V811 = 0x258
0x841: JUMP 0x258
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, S1, S0]

================================

Block 0x842
[0x842:0x84c]
---
Predecessors: [0x79e]
Successors: [0x84d]
---
0x842 JUMPDEST
0x843 PUSH1 0x9
0x845 DUP1
0x846 SLOAD
0x847 PUSH1 0xff
0x849 NOT
0x84a AND
0x84b SWAP1
0x84c SSTORE
---
0x842: JUMPDEST 
0x843: V812 = 0x9
0x846: V813 = S[0x9]
0x847: V814 = 0xff
0x849: V815 = NOT 0xff
0x84a: V816 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V813
0x84c: S[0x9] = V816
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, S1, S0]

================================

Block 0x84d
[0x84d:0x84d]
---
Predecessors: [0x842]
Successors: [0x84e]
---
0x84d JUMPDEST
---
0x84d: JUMPDEST 
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, S1, S0]

================================

Block 0x84e
[0x84e:0x84e]
---
Predecessors: [0x84d]
Successors: [0x84f]
---
0x84e JUMPDEST
---
0x84e: JUMPDEST 
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, S1, S0]

================================

Block 0x84f
[0x84f:0x84f]
---
Predecessors: [0x84e]
Successors: [0x850]
---
0x84f JUMPDEST
---
0x84f: JUMPDEST 
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, S1, S0]

================================

Block 0x850
[0x850:0x850]
---
Predecessors: [0x84f]
Successors: [0x851]
---
0x850 JUMPDEST
---
0x850: JUMPDEST 
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x25c, S1, S0]

================================

Block 0x851
[0x851:0x854]
---
Predecessors: [0x850]
Successors: [0x25c]
---
0x851 JUMPDEST
0x852 POP
0x853 POP
0x854 JUMP
---
0x851: JUMPDEST 
0x854: JUMP 0x25c
---
Entry stack: [V12, 0x25c, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x855
[0x855:0x8a0]
---
Predecessors: []
Successors: []
---
0x855 STOP
0x856 MISSING 0xe8
0x857 TIMESTAMP
0x858 MISSING 0xae
0x859 MISSING 0xa7
0x85a MISSING 0xa5
0x85b CALL
0x85c MISSING 0xb0
0x85d LT
0x85e MISSING 0x49
0x85f MISSING 0xd7
0x860 MSTORE
0x861 STOP
0x862 DUP13
0x863 MSTORE8
0x864 MISSING 0xc5
0x865 MISSING 0x28
0x866 SWAP1
0x867 MISSING 0xb1
0x868 MISSING 0xa6
0x869 MISSING 0xda
0x86a MISSING 0xf6
0x86b PUSH1 0xcf
0x86d CODECOPY
0x86e MISSING 0xe8
0x86f MISSING 0xee
0x870 MISSING 0xc5
0x871 MOD
0x872 GT
0x873 MISSING 0x2b
0x874 MISSING 0xbd
0x875 MISSING 0xf6
0x876 LOG1
0x877 PUSH6 0x627a7a723058
0x87e SHA3
0x87f LT
0x880 CALLER
0x881 MISSING 0xe4
0x882 ADD
0x883 DUP7
0x884 MISSING 0xdb
0x885 ADD
0x886 ISZERO
0x887 MISSING 0xea
0x888 CREATE2
0x889 PUSH13 0xcd2dd26990188fb12f9fbba78c
0x897 PUSH3 0xe489fd
0x89b MISSING 0xcf
0x89c MISSING 0xcb
0x89d MISSING 0xb1
0x89e MISSING 0x49
0x89f STOP
0x8a0 MISSING 0x29
---
0x855: STOP 
0x856: MISSING 0xe8
0x857: V817 = TIMESTAMP
0x858: MISSING 0xae
0x859: MISSING 0xa7
0x85a: MISSING 0xa5
0x85b: V818 = CALL S0 S1 S2 S3 S4 S5 S6
0x85c: MISSING 0xb0
0x85d: V819 = LT S0 S1
0x85e: MISSING 0x49
0x85f: MISSING 0xd7
0x860: M[S0] = S1
0x861: STOP 
0x863: M8[S12] = S0
0x864: MISSING 0xc5
0x865: MISSING 0x28
0x867: MISSING 0xb1
0x868: MISSING 0xa6
0x869: MISSING 0xda
0x86a: MISSING 0xf6
0x86b: V820 = 0xcf
0x86d: CODECOPY 0xcf S0 S1
0x86e: MISSING 0xe8
0x86f: MISSING 0xee
0x870: MISSING 0xc5
0x871: V821 = MOD S0 S1
0x872: V822 = GT V821 S2
0x873: MISSING 0x2b
0x874: MISSING 0xbd
0x875: MISSING 0xf6
0x876: LOG S0 S1 S2
0x877: V823 = 0x627a7a723058
0x87e: V824 = SHA3 0x627a7a723058 S3
0x87f: V825 = LT V824 S4
0x880: V826 = CALLER
0x881: MISSING 0xe4
0x882: V827 = ADD S0 S1
0x884: MISSING 0xdb
0x885: V828 = ADD S0 S1
0x886: V829 = ISZERO V828
0x887: MISSING 0xea
0x888: V830 = CREATE2 S0 S1 S2 S3
0x889: V831 = 0xcd2dd26990188fb12f9fbba78c
0x897: V832 = 0xe489fd
0x89b: MISSING 0xcf
0x89c: MISSING 0xcb
0x89d: MISSING 0xb1
0x89e: MISSING 0x49
0x89f: STOP 
0x8a0: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V817, V818, V819, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S1, S0, V822, V826, V825, S7, V827, S2, S3, S4, S5, S6, S7, V829, 0xe489fd, 0xcd2dd26990188fb12f9fbba78c, V830]
Exit stack: []

================================

Function 0:
Public function signature: 0x1cb3b20
Entry block: 0x25e
Exit block: 0x265
Body: 0x25c, 0x25e, 0x265, 0x269

Function 1:
Public function signature: 0x29dcb0cf
Entry block: 0x273
Exit block: 0x286
Body: 0x273, 0x27a, 0x27e, 0x286, 0x552

Function 2:
Public function signature: 0x3197cbb6
Entry block: 0x298
Exit block: 0x286
Body: 0x286, 0x298, 0x29f, 0x2a3, 0x558

Function 3:
Public function signature: 0x38af3eed
Entry block: 0x2bd
Exit block: 0x2d0
Body: 0x2bd, 0x2c4, 0x2c8, 0x2d0, 0x55e

Function 4:
Public function signature: 0x6d320b17
Entry block: 0x2ec
Exit block: 0x286
Body: 0x286, 0x2ec, 0x2f3, 0x2f7, 0x56d

Function 5:
Public function signature: 0x6e66f6e9
Entry block: 0x311
Exit block: 0x2d0
Body: 0x2d0, 0x311, 0x318, 0x31c, 0x573

Function 6:
Public function signature: 0x70a08231
Entry block: 0x340
Exit block: 0x286
Body: 0x286, 0x340, 0x347, 0x34b, 0x582

Function 7:
Public function signature: 0x74f12933
Entry block: 0x371
Exit block: 0x384
Body: 0x371, 0x378, 0x37c, 0x384, 0x594

Function 8:
Public function signature: 0x78e97925
Entry block: 0x398
Exit block: 0x286
Body: 0x286, 0x398, 0x39f, 0x3a3, 0x5a3

Function 9:
Public function signature: 0x7a3a0e84
Entry block: 0x3bd
Exit block: 0x286
Body: 0x286, 0x3bd, 0x3c4, 0x3c8, 0x5a9

Function 10:
Public function signature: 0x7b3e5e7b
Entry block: 0x3e2
Exit block: 0x286
Body: 0x286, 0x3e2, 0x3e9, 0x3ed, 0x5af

Function 11:
Public function signature: 0xa035b1fe
Entry block: 0x407
Exit block: 0x286
Body: 0x286, 0x407, 0x40e, 0x412, 0x5b5

Function 12:
Public function signature: 0xda09c72c
Entry block: 0x42c
Exit block: 0x2d0
Body: 0x2d0, 0x42c, 0x433, 0x437, 0x5bb

Function 13:
Public function signature: 0xecb70fb7
Entry block: 0x45b
Exit block: 0x384
Body: 0x384, 0x45b, 0x462, 0x466, 0x5ca, 0x5d0

Function 14:
Public function signature: 0xfd6b7ef8
Entry block: 0x482
Exit block: 0x25c
Body: 0x258, 0x25c, 0x482, 0x489, 0x48d, 0x5d3, 0x5e1, 0x5e8, 0x5fb, 0x60d, 0x61c, 0x622, 0x651, 0x655, 0x6b5, 0x6c2, 0x6e9, 0x714, 0x75a, 0x776, 0x777, 0x778, 0x785, 0x798, 0x79e, 0x7dc, 0x842, 0x84d, 0x84e, 0x84f, 0x850, 0x851

Function 15:
Public fallback function
Entry block: 0xbf
Exit block: 0x25c
Body: 0xbf, 0xc3, 0xce, 0xd5, 0xd9, 0xe4, 0xe8, 0xfe, 0xff, 0x15b, 0x15f, 0x16c, 0x170, 0x183, 0x187, 0x1fd, 0x201, 0x20e, 0x212, 0x258, 0x25c, 0x497, 0x4a9, 0x4b0, 0x4be, 0x4c0, 0x4c3

Function 16:
Private function
Entry block: 0x4c8
Exit block: 0x550
Body: 0x4c8, 0x4d3, 0x4de, 0x53e, 0x54e, 0x54f, 0x550

