Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4b
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4b
0xc: JUMPI 0x4b V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xaa]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x354284f2
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xaa
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x354284f2
0x3b: V13 = EQ V11 0x354284f2
0x3c: V14 = 0xaa
0x3f: JUMPI 0xaa V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xbf]
---
0x40 DUP1
0x41 PUSH4 0x4a3f17e7
0x46 EQ
0x47 PUSH2 0xbf
0x4a JUMPI
---
0x41: V15 = 0x4a3f17e7
0x46: V16 = EQ 0x4a3f17e7 V11
0x47: V17 = 0xbf
0x4a: JUMPI 0xbf V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0xa9]
---
Predecessors: [0x0, 0x40]
Successors: []
---
0x4b JUMPDEST
0x4c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61 CALLER
0x62 AND
0x63 PUSH1 0x0
0x65 DUP2
0x66 DUP2
0x67 MSTORE
0x68 PUSH1 0x20
0x6a DUP2
0x6b SWAP1
0x6c MSTORE
0x6d PUSH1 0x40
0x6f SWAP1
0x70 DUP2
0x71 SWAP1
0x72 SHA3
0x73 DUP1
0x74 SLOAD
0x75 CALLVALUE
0x76 SWAP1
0x77 DUP2
0x78 ADD
0x79 SWAP1
0x7a SWAP2
0x7b SSTORE
0x7c SWAP2
0x7d SWAP1
0x7e PUSH32 0x115522125a340a348d82c36b243d9dcbb357931a24824ddbe1d13179155e3091
0x9f SWAP1
0xa0 MLOAD
0xa1 PUSH1 0x40
0xa3 MLOAD
0xa4 DUP1
0xa5 SWAP2
0xa6 SUB
0xa7 SWAP1
0xa8 LOG3
0xa9 STOP
---
0x4b: JUMPDEST 
0x4c: V18 = 0xffffffffffffffffffffffffffffffffffffffff
0x61: V19 = CALLER
0x62: V20 = AND V19 0xffffffffffffffffffffffffffffffffffffffff
0x63: V21 = 0x0
0x67: M[0x0] = V20
0x68: V22 = 0x20
0x6c: M[0x20] = 0x0
0x6d: V23 = 0x40
0x72: V24 = SHA3 0x0 0x40
0x74: V25 = S[V24]
0x75: V26 = CALLVALUE
0x78: V27 = ADD V26 V25
0x7b: S[V24] = V27
0x7e: V28 = 0x115522125a340a348d82c36b243d9dcbb357931a24824ddbe1d13179155e3091
0xa0: V29 = M[0x40]
0xa1: V30 = 0x40
0xa3: V31 = M[0x40]
0xa6: V32 = SUB V29 V31
0xa8: LOG V31 V32 0x115522125a340a348d82c36b243d9dcbb357931a24824ddbe1d13179155e3091 V20 V26
0xa9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xaa
[0xaa:0xb0]
---
Predecessors: [0xd]
Successors: [0xb1, 0xb5]
---
0xaa JUMPDEST
0xab CALLVALUE
0xac ISZERO
0xad PUSH2 0xb5
0xb0 JUMPI
---
0xaa: JUMPDEST 
0xab: V33 = CALLVALUE
0xac: V34 = ISZERO V33
0xad: V35 = 0xb5
0xb0: JUMPI 0xb5 V34
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xb4]
---
Predecessors: [0xaa]
Successors: []
---
0xb1 PUSH1 0x0
0xb3 DUP1
0xb4 REVERT
---
0xb1: V36 = 0x0
0xb4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb5
[0xb5:0xbc]
---
Predecessors: [0xaa]
Successors: [0xfd]
---
0xb5 JUMPDEST
0xb6 PUSH2 0xbd
0xb9 PUSH2 0xfd
0xbc JUMP
---
0xb5: JUMPDEST 
0xb6: V37 = 0xbd
0xb9: V38 = 0xfd
0xbc: JUMP 0xfd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbd]
Exit stack: [V11, 0xbd]

================================

Block 0xbd
[0xbd:0xbe]
---
Predecessors: [0x196]
Successors: []
---
0xbd JUMPDEST
0xbe STOP
---
0xbd: JUMPDEST 
0xbe: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbf
[0xbf:0xc5]
---
Predecessors: [0x40]
Successors: [0xc6, 0xca]
---
0xbf JUMPDEST
0xc0 CALLVALUE
0xc1 ISZERO
0xc2 PUSH2 0xca
0xc5 JUMPI
---
0xbf: JUMPDEST 
0xc0: V39 = CALLVALUE
0xc1: V40 = ISZERO V39
0xc2: V41 = 0xca
0xc5: JUMPI 0xca V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc6
[0xc6:0xc9]
---
Predecessors: [0xbf]
Successors: []
---
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 REVERT
---
0xc6: V42 = 0x0
0xc9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xca
[0xca:0xea]
---
Predecessors: [0xbf]
Successors: [0x1dd]
---
0xca JUMPDEST
0xcb PUSH2 0xeb
0xce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3 PUSH1 0x4
0xe5 CALLDATALOAD
0xe6 AND
0xe7 PUSH2 0x1dd
0xea JUMP
---
0xca: JUMPDEST 
0xcb: V43 = 0xeb
0xce: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3: V45 = 0x4
0xe5: V46 = CALLDATALOAD 0x4
0xe6: V47 = AND V46 0xffffffffffffffffffffffffffffffffffffffff
0xe7: V48 = 0x1dd
0xea: JUMP 0x1dd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xeb, V47]
Exit stack: [V11, 0xeb, V47]

================================

Block 0xeb
[0xeb:0xfc]
---
Predecessors: [0x1dd]
Successors: []
---
0xeb JUMPDEST
0xec PUSH1 0x40
0xee MLOAD
0xef SWAP1
0xf0 DUP2
0xf1 MSTORE
0xf2 PUSH1 0x20
0xf4 ADD
0xf5 PUSH1 0x40
0xf7 MLOAD
0xf8 DUP1
0xf9 SWAP2
0xfa SUB
0xfb SWAP1
0xfc RETURN
---
0xeb: JUMPDEST 
0xec: V49 = 0x40
0xee: V50 = M[0x40]
0xf1: M[V50] = V109
0xf2: V51 = 0x20
0xf4: V52 = ADD 0x20 V50
0xf5: V53 = 0x40
0xf7: V54 = M[0x40]
0xfa: V55 = SUB V52 V54
0xfc: RETURN V54 V55
---
Entry stack: [V11, 0xeb, V109]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xeb]

================================

Block 0xfd
[0xfd:0x10c]
---
Predecessors: [0xb5]
Successors: [0x10d, 0x135]
---
0xfd JUMPDEST
0xfe PUSH1 0x0
0x100 PUSH4 0x5a24b328
0x105 TIMESTAMP
0x106 GT
0x107 DUP1
0x108 ISZERO
0x109 PUSH2 0x135
0x10c JUMPI
---
0xfd: JUMPDEST 
0xfe: V56 = 0x0
0x100: V57 = 0x5a24b328
0x105: V58 = TIMESTAMP
0x106: V59 = GT V58 0x5a24b328
0x108: V60 = ISZERO V59
0x109: V61 = 0x135
0x10c: JUMPI 0x135 V60
---
Entry stack: [V11, 0xbd]
Stack pops: 0
Stack additions: [0x0, V59]
Exit stack: [V11, 0xbd, 0x0, V59]

================================

Block 0x10d
[0x10d:0x134]
---
Predecessors: [0xfd]
Successors: [0x135]
---
0x10d POP
0x10e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x123 CALLER
0x124 AND
0x125 PUSH1 0x0
0x127 SWAP1
0x128 DUP2
0x129 MSTORE
0x12a PUSH1 0x20
0x12c DUP2
0x12d SWAP1
0x12e MSTORE
0x12f PUSH1 0x40
0x131 DUP2
0x132 SHA3
0x133 SLOAD
0x134 GT
---
0x10e: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x123: V63 = CALLER
0x124: V64 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0x125: V65 = 0x0
0x129: M[0x0] = V64
0x12a: V66 = 0x20
0x12e: M[0x20] = 0x0
0x12f: V67 = 0x40
0x132: V68 = SHA3 0x0 0x40
0x133: V69 = S[V68]
0x134: V70 = GT V69 0x0
---
Entry stack: [V11, 0xbd, 0x0, V59]
Stack pops: 1
Stack additions: [V70]
Exit stack: [V11, 0xbd, 0x0, V70]

================================

Block 0x135
[0x135:0x13b]
---
Predecessors: [0xfd, 0x10d]
Successors: [0x13c, 0x140]
---
0x135 JUMPDEST
0x136 ISZERO
0x137 ISZERO
0x138 PUSH2 0x140
0x13b JUMPI
---
0x135: JUMPDEST 
0x136: V71 = ISZERO S0
0x137: V72 = ISZERO V71
0x138: V73 = 0x140
0x13b: JUMPI 0x140 V72
---
Entry stack: [V11, 0xbd, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xbd, 0x0]

================================

Block 0x13c
[0x13c:0x13f]
---
Predecessors: [0x135]
Successors: []
---
0x13c PUSH1 0x0
0x13e DUP1
0x13f REVERT
---
0x13c: V74 = 0x0
0x13f: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbd, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, 0x0]

================================

Block 0x140
[0x140:0x191]
---
Predecessors: [0x135]
Successors: [0x192, 0x196]
---
0x140 JUMPDEST
0x141 POP
0x142 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x157 CALLER
0x158 AND
0x159 PUSH1 0x0
0x15b DUP2
0x15c DUP2
0x15d MSTORE
0x15e PUSH1 0x20
0x160 DUP2
0x161 SWAP1
0x162 MSTORE
0x163 PUSH1 0x40
0x165 DUP1
0x166 DUP3
0x167 SHA3
0x168 DUP1
0x169 SLOAD
0x16a SWAP3
0x16b SWAP1
0x16c SSTORE
0x16d SWAP1
0x16e SWAP2
0x16f SWAP1
0x170 DUP3
0x171 ISZERO
0x172 PUSH2 0x8fc
0x175 MUL
0x176 SWAP1
0x177 DUP4
0x178 SWAP1
0x179 MLOAD
0x17a PUSH1 0x0
0x17c PUSH1 0x40
0x17e MLOAD
0x17f DUP1
0x180 DUP4
0x181 SUB
0x182 DUP2
0x183 DUP6
0x184 DUP9
0x185 DUP9
0x186 CALL
0x187 SWAP4
0x188 POP
0x189 POP
0x18a POP
0x18b POP
0x18c ISZERO
0x18d ISZERO
0x18e PUSH2 0x196
0x191 JUMPI
---
0x140: JUMPDEST 
0x142: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x157: V76 = CALLER
0x158: V77 = AND V76 0xffffffffffffffffffffffffffffffffffffffff
0x159: V78 = 0x0
0x15d: M[0x0] = V77
0x15e: V79 = 0x20
0x162: M[0x20] = 0x0
0x163: V80 = 0x40
0x167: V81 = SHA3 0x0 0x40
0x169: V82 = S[V81]
0x16c: S[V81] = 0x0
0x171: V83 = ISZERO V82
0x172: V84 = 0x8fc
0x175: V85 = MUL 0x8fc V83
0x179: V86 = M[0x40]
0x17a: V87 = 0x0
0x17c: V88 = 0x40
0x17e: V89 = M[0x40]
0x181: V90 = SUB V86 V89
0x186: V91 = CALL V85 V77 V82 V89 V90 V89 0x0
0x18c: V92 = ISZERO V91
0x18d: V93 = ISZERO V92
0x18e: V94 = 0x196
0x191: JUMPI 0x196 V93
---
Entry stack: [V11, 0xbd, 0x0]
Stack pops: 1
Stack additions: [V82]
Exit stack: [V11, 0xbd, V82]

================================

Block 0x192
[0x192:0x195]
---
Predecessors: [0x140]
Successors: []
---
0x192 PUSH1 0x0
0x194 DUP1
0x195 REVERT
---
0x192: V95 = 0x0
0x195: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbd, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V82]

================================

Block 0x196
[0x196:0x1dc]
---
Predecessors: [0x140]
Successors: [0xbd]
---
0x196 JUMPDEST
0x197 DUP1
0x198 CALLER
0x199 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ae AND
0x1af PUSH32 0xdc8f43545dbeec87c6f54e44dac2d8889f2a4b3bf0f62683cd7e1c6346128e7
0x1d0 PUSH1 0x40
0x1d2 MLOAD
0x1d3 PUSH1 0x40
0x1d5 MLOAD
0x1d6 DUP1
0x1d7 SWAP2
0x1d8 SUB
0x1d9 SWAP1
0x1da LOG3
0x1db POP
0x1dc JUMP
---
0x196: JUMPDEST 
0x198: V96 = CALLER
0x199: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x1af: V99 = 0xdc8f43545dbeec87c6f54e44dac2d8889f2a4b3bf0f62683cd7e1c6346128e7
0x1d0: V100 = 0x40
0x1d2: V101 = M[0x40]
0x1d3: V102 = 0x40
0x1d5: V103 = M[0x40]
0x1d8: V104 = SUB V101 V103
0x1da: LOG V103 V104 0xdc8f43545dbeec87c6f54e44dac2d8889f2a4b3bf0f62683cd7e1c6346128e7 V98 V82
0x1dc: JUMP 0xbd
---
Entry stack: [V11, 0xbd, V82]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1dd
[0x1dd:0x1ee]
---
Predecessors: [0xca]
Successors: [0xeb]
---
0x1dd JUMPDEST
0x1de PUSH1 0x0
0x1e0 PUSH1 0x20
0x1e2 DUP2
0x1e3 SWAP1
0x1e4 MSTORE
0x1e5 SWAP1
0x1e6 DUP2
0x1e7 MSTORE
0x1e8 PUSH1 0x40
0x1ea SWAP1
0x1eb SHA3
0x1ec SLOAD
0x1ed DUP2
0x1ee JUMP
---
0x1dd: JUMPDEST 
0x1de: V105 = 0x0
0x1e0: V106 = 0x20
0x1e4: M[0x20] = 0x0
0x1e7: M[0x0] = V47
0x1e8: V107 = 0x40
0x1eb: V108 = SHA3 0x0 0x40
0x1ec: V109 = S[V108]
0x1ee: JUMP 0xeb
---
Entry stack: [V11, 0xeb, V47]
Stack pops: 2
Stack additions: [S1, V109]
Exit stack: [V11, 0xeb, V109]

================================

Block 0x1ef
[0x1ef:0x232]
---
Predecessors: []
Successors: []
---
0x1ef STOP
0x1f0 LOG1
0x1f1 PUSH6 0x627a7a723058
0x1f8 SHA3
0x1f9 MISSING 0xe8
0x1fa ADDRESS
0x1fb MISSING 0xbf
0x1fc PUSH7 0xe37292d114888d
0x204 MISSING 0xbd
0x205 CALLVALUE
0x206 LOG3
0x207 MISSING 0xe2
0x208 EQ
0x209 MISSING 0xbb
0x20a MSTORE8
0x20b MISSING 0xb1
0x20c CALLCODE
0x20d PUSH3 0xa283c0
0x211 MISSING 0xe0
0x212 MISSING 0xd9
0x213 PUSH31 0xc7d7b0715d0029
---
0x1ef: STOP 
0x1f0: LOG S0 S1 S2
0x1f1: V110 = 0x627a7a723058
0x1f8: V111 = SHA3 0x627a7a723058 S3
0x1f9: MISSING 0xe8
0x1fa: V112 = ADDRESS
0x1fb: MISSING 0xbf
0x1fc: V113 = 0xe37292d114888d
0x204: MISSING 0xbd
0x205: V114 = CALLVALUE
0x206: LOG V114 S0 S1 S2 S3
0x207: MISSING 0xe2
0x208: V115 = EQ S0 S1
0x209: MISSING 0xbb
0x20a: M8[S0] = S1
0x20b: MISSING 0xb1
0x20c: V116 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x20d: V117 = 0xa283c0
0x211: MISSING 0xe0
0x212: MISSING 0xd9
0x213: V118 = 0xc7d7b0715d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V111, V112, 0xe37292d114888d, V115, 0xa283c0, V116, 0xc7d7b0715d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x354284f2
Entry block: 0xaa
Exit block: 0xbd
Body: 0xaa, 0xb1, 0xb5, 0xbd, 0xfd, 0x10d, 0x135, 0x13c, 0x140, 0x192, 0x196

Function 1:
Public function signature: 0x4a3f17e7
Entry block: 0xbf
Exit block: 0xeb
Body: 0xbf, 0xc6, 0xca, 0xeb, 0x1dd

Function 2:
Public fallback function
Entry block: 0x4b
Exit block: 0x4b
Body: 0x4b

