Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7d]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x4758e79
0x3c EQ
0x3d PUSH2 0x7d
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x4758e79
0x3c: V13 = EQ 0x4758e79 V11
0x3d: V14 = 0x7d
0x40: JUMPI 0x7d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xd2]
---
0x41 DUP1
0x42 PUSH4 0x75aa0c4
0x47 EQ
0x48 PUSH2 0xd2
0x4b JUMPI
---
0x42: V15 = 0x75aa0c4
0x47: V16 = EQ 0x75aa0c4 V11
0x48: V17 = 0xd2
0x4b: JUMPI 0xd2 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x127]
---
0x4c DUP1
0x4d PUSH4 0xb97bc86
0x52 EQ
0x53 PUSH2 0x127
0x56 JUMPI
---
0x4d: V18 = 0xb97bc86
0x52: V19 = EQ 0xb97bc86 V11
0x53: V20 = 0x127
0x56: JUMPI 0x127 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x150]
---
0x57 DUP1
0x58 PUSH4 0x2ef2d55e
0x5d EQ
0x5e PUSH2 0x150
0x61 JUMPI
---
0x58: V21 = 0x2ef2d55e
0x5d: V22 = EQ 0x2ef2d55e V11
0x5e: V23 = 0x150
0x61: JUMPI 0x150 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x179]
---
0x62 DUP1
0x63 PUSH4 0x39658245
0x68 EQ
0x69 PUSH2 0x179
0x6c JUMPI
---
0x63: V24 = 0x39658245
0x68: V25 = EQ 0x39658245 V11
0x69: V26 = 0x179
0x6c: JUMPI 0x179 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x18e]
---
0x6d DUP1
0x6e PUSH4 0xadacb0fa
0x73 EQ
0x74 PUSH2 0x18e
0x77 JUMPI
---
0x6e: V27 = 0xadacb0fa
0x73: V28 = EQ 0xadacb0fa V11
0x74: V29 = 0x18e
0x77: JUMPI 0x18e V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7c]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x78: JUMPDEST 
0x79: V30 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0x83]
---
Predecessors: [0xd]
Successors: [0x84, 0x88]
---
0x7d JUMPDEST
0x7e CALLVALUE
0x7f ISZERO
0x80 PUSH2 0x88
0x83 JUMPI
---
0x7d: JUMPDEST 
0x7e: V31 = CALLVALUE
0x7f: V32 = ISZERO V31
0x80: V33 = 0x88
0x83: JUMPI 0x88 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x87]
---
Predecessors: [0x7d]
Successors: []
---
0x84 PUSH1 0x0
0x86 DUP1
0x87 REVERT
---
0x84: V34 = 0x0
0x87: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x88
[0x88:0x8f]
---
Predecessors: [0x7d]
Successors: [0x1e4]
---
0x88 JUMPDEST
0x89 PUSH2 0x90
0x8c PUSH2 0x1e4
0x8f JUMP
---
0x88: JUMPDEST 
0x89: V35 = 0x90
0x8c: V36 = 0x1e4
0x8f: JUMP 0x1e4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x90]
Exit stack: [V11, 0x90]

================================

Block 0x90
[0x90:0xd1]
---
Predecessors: [0x1e4]
Successors: []
---
0x90 JUMPDEST
0x91 PUSH1 0x40
0x93 MLOAD
0x94 DUP1
0x95 DUP3
0x96 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab AND
0xac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc1 AND
0xc2 DUP2
0xc3 MSTORE
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP2
0xc8 POP
0xc9 POP
0xca PUSH1 0x40
0xcc MLOAD
0xcd DUP1
0xce SWAP2
0xcf SUB
0xd0 SWAP1
0xd1 RETURN
---
0x90: JUMPDEST 
0x91: V37 = 0x40
0x93: V38 = M[0x40]
0x96: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xab: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0xac: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xc1: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xc3: M[V38] = V42
0xc4: V43 = 0x20
0xc6: V44 = ADD 0x20 V38
0xca: V45 = 0x40
0xcc: V46 = M[0x40]
0xcf: V47 = SUB V44 V46
0xd1: RETURN V46 V47
---
Entry stack: [V11, 0x90, V137]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x90]

================================

Block 0xd2
[0xd2:0xd8]
---
Predecessors: [0x41]
Successors: [0xd9, 0xdd]
---
0xd2 JUMPDEST
0xd3 CALLVALUE
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd2: JUMPDEST 
0xd3: V48 = CALLVALUE
0xd4: V49 = ISZERO V48
0xd5: V50 = 0xdd
0xd8: JUMPI 0xdd V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd2]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V51 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdd
[0xdd:0xe4]
---
Predecessors: [0xd2]
Successors: [0x20a]
---
0xdd JUMPDEST
0xde PUSH2 0xe5
0xe1 PUSH2 0x20a
0xe4 JUMP
---
0xdd: JUMPDEST 
0xde: V52 = 0xe5
0xe1: V53 = 0x20a
0xe4: JUMP 0x20a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe5]
Exit stack: [V11, 0xe5]

================================

Block 0xe5
[0xe5:0x126]
---
Predecessors: [0x20a]
Successors: []
---
0xe5 JUMPDEST
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 DUP1
0xea DUP3
0xeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x100 AND
0x101 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x116 AND
0x117 DUP2
0x118 MSTORE
0x119 PUSH1 0x20
0x11b ADD
0x11c SWAP2
0x11d POP
0x11e POP
0x11f PUSH1 0x40
0x121 MLOAD
0x122 DUP1
0x123 SWAP2
0x124 SUB
0x125 SWAP1
0x126 RETURN
---
0xe5: JUMPDEST 
0xe6: V54 = 0x40
0xe8: V55 = M[0x40]
0xeb: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x100: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x101: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0x116: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x118: M[V55] = V59
0x119: V60 = 0x20
0x11b: V61 = ADD 0x20 V55
0x11f: V62 = 0x40
0x121: V63 = M[0x40]
0x124: V64 = SUB V61 V63
0x126: RETURN V63 V64
---
Entry stack: [V11, 0xe5, V144]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe5]

================================

Block 0x127
[0x127:0x12d]
---
Predecessors: [0x4c]
Successors: [0x12e, 0x132]
---
0x127 JUMPDEST
0x128 CALLVALUE
0x129 ISZERO
0x12a PUSH2 0x132
0x12d JUMPI
---
0x127: JUMPDEST 
0x128: V65 = CALLVALUE
0x129: V66 = ISZERO V65
0x12a: V67 = 0x132
0x12d: JUMPI 0x132 V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12e
[0x12e:0x131]
---
Predecessors: [0x127]
Successors: []
---
0x12e PUSH1 0x0
0x130 DUP1
0x131 REVERT
---
0x12e: V68 = 0x0
0x131: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x132
[0x132:0x139]
---
Predecessors: [0x127]
Successors: [0x22f]
---
0x132 JUMPDEST
0x133 PUSH2 0x13a
0x136 PUSH2 0x22f
0x139 JUMP
---
0x132: JUMPDEST 
0x133: V69 = 0x13a
0x136: V70 = 0x22f
0x139: JUMP 0x22f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x13a]
Exit stack: [V11, 0x13a]

================================

Block 0x13a
[0x13a:0x14f]
---
Predecessors: [0x22f]
Successors: []
---
0x13a JUMPDEST
0x13b PUSH1 0x40
0x13d MLOAD
0x13e DUP1
0x13f DUP3
0x140 DUP2
0x141 MSTORE
0x142 PUSH1 0x20
0x144 ADD
0x145 SWAP2
0x146 POP
0x147 POP
0x148 PUSH1 0x40
0x14a MLOAD
0x14b DUP1
0x14c SWAP2
0x14d SUB
0x14e SWAP1
0x14f RETURN
---
0x13a: JUMPDEST 
0x13b: V71 = 0x40
0x13d: V72 = M[0x40]
0x141: M[V72] = V146
0x142: V73 = 0x20
0x144: V74 = ADD 0x20 V72
0x148: V75 = 0x40
0x14a: V76 = M[0x40]
0x14d: V77 = SUB V74 V76
0x14f: RETURN V76 V77
---
Entry stack: [V11, 0x13a, V146]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x13a]

================================

Block 0x150
[0x150:0x156]
---
Predecessors: [0x57]
Successors: [0x157, 0x15b]
---
0x150 JUMPDEST
0x151 CALLVALUE
0x152 ISZERO
0x153 PUSH2 0x15b
0x156 JUMPI
---
0x150: JUMPDEST 
0x151: V78 = CALLVALUE
0x152: V79 = ISZERO V78
0x153: V80 = 0x15b
0x156: JUMPI 0x15b V79
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x157
[0x157:0x15a]
---
Predecessors: [0x150]
Successors: []
---
0x157 PUSH1 0x0
0x159 DUP1
0x15a REVERT
---
0x157: V81 = 0x0
0x15a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15b
[0x15b:0x162]
---
Predecessors: [0x150]
Successors: [0x235]
---
0x15b JUMPDEST
0x15c PUSH2 0x163
0x15f PUSH2 0x235
0x162 JUMP
---
0x15b: JUMPDEST 
0x15c: V82 = 0x163
0x15f: V83 = 0x235
0x162: JUMP 0x235
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x163]
Exit stack: [V11, 0x163]

================================

Block 0x163
[0x163:0x178]
---
Predecessors: [0x235]
Successors: []
---
0x163 JUMPDEST
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 DUP3
0x169 DUP2
0x16a MSTORE
0x16b PUSH1 0x20
0x16d ADD
0x16e SWAP2
0x16f POP
0x170 POP
0x171 PUSH1 0x40
0x173 MLOAD
0x174 DUP1
0x175 SWAP2
0x176 SUB
0x177 SWAP1
0x178 RETURN
---
0x163: JUMPDEST 
0x164: V84 = 0x40
0x166: V85 = M[0x40]
0x16a: M[V85] = V148
0x16b: V86 = 0x20
0x16d: V87 = ADD 0x20 V85
0x171: V88 = 0x40
0x173: V89 = M[0x40]
0x176: V90 = SUB V87 V89
0x178: RETURN V89 V90
---
Entry stack: [V11, 0x163, V148]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x163]

================================

Block 0x179
[0x179:0x17f]
---
Predecessors: [0x62]
Successors: [0x180, 0x184]
---
0x179 JUMPDEST
0x17a CALLVALUE
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x179: JUMPDEST 
0x17a: V91 = CALLVALUE
0x17b: V92 = ISZERO V91
0x17c: V93 = 0x184
0x17f: JUMPI 0x184 V92
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x179]
Successors: []
---
0x180 PUSH1 0x0
0x182 DUP1
0x183 REVERT
---
0x180: V94 = 0x0
0x183: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x184
[0x184:0x18b]
---
Predecessors: [0x179]
Successors: [0x23b]
---
0x184 JUMPDEST
0x185 PUSH2 0x18c
0x188 PUSH2 0x23b
0x18b JUMP
---
0x184: JUMPDEST 
0x185: V95 = 0x18c
0x188: V96 = 0x23b
0x18b: JUMP 0x23b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x18c]
Exit stack: [V11, 0x18c]

================================

Block 0x18c
[0x18c:0x18d]
---
Predecessors: []
Successors: []
---
0x18c JUMPDEST
0x18d STOP
---
0x18c: JUMPDEST 
0x18d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x18e
[0x18e:0x194]
---
Predecessors: [0x6d]
Successors: [0x195, 0x199]
---
0x18e JUMPDEST
0x18f CALLVALUE
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x18e: JUMPDEST 
0x18f: V97 = CALLVALUE
0x190: V98 = ISZERO V97
0x191: V99 = 0x199
0x194: JUMPI 0x199 V98
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x18e]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V100 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x199
[0x199:0x1e1]
---
Predecessors: [0x18e]
Successors: [0x288]
---
0x199 JUMPDEST
0x19a PUSH2 0x1e2
0x19d PUSH1 0x4
0x19f DUP1
0x1a0 DUP1
0x1a1 CALLDATALOAD
0x1a2 PUSH1 0x0
0x1a4 NOT
0x1a5 AND
0x1a6 SWAP1
0x1a7 PUSH1 0x20
0x1a9 ADD
0x1aa SWAP1
0x1ab SWAP2
0x1ac SWAP1
0x1ad DUP1
0x1ae CALLDATALOAD
0x1af PUSH1 0xff
0x1b1 AND
0x1b2 SWAP1
0x1b3 PUSH1 0x20
0x1b5 ADD
0x1b6 SWAP1
0x1b7 SWAP2
0x1b8 SWAP1
0x1b9 DUP1
0x1ba CALLDATALOAD
0x1bb PUSH1 0x0
0x1bd NOT
0x1be AND
0x1bf SWAP1
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 SWAP1
0x1c4 SWAP2
0x1c5 SWAP1
0x1c6 DUP1
0x1c7 CALLDATALOAD
0x1c8 PUSH1 0x0
0x1ca NOT
0x1cb AND
0x1cc SWAP1
0x1cd PUSH1 0x20
0x1cf ADD
0x1d0 SWAP1
0x1d1 SWAP2
0x1d2 SWAP1
0x1d3 DUP1
0x1d4 CALLDATALOAD
0x1d5 SWAP1
0x1d6 PUSH1 0x20
0x1d8 ADD
0x1d9 SWAP1
0x1da SWAP2
0x1db SWAP1
0x1dc POP
0x1dd POP
0x1de PUSH2 0x288
0x1e1 JUMP
---
0x199: JUMPDEST 
0x19a: V101 = 0x1e2
0x19d: V102 = 0x4
0x1a1: V103 = CALLDATALOAD 0x4
0x1a2: V104 = 0x0
0x1a4: V105 = NOT 0x0
0x1a5: V106 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V103
0x1a7: V107 = 0x20
0x1a9: V108 = ADD 0x20 0x4
0x1ae: V109 = CALLDATALOAD 0x24
0x1af: V110 = 0xff
0x1b1: V111 = AND 0xff V109
0x1b3: V112 = 0x20
0x1b5: V113 = ADD 0x20 0x24
0x1ba: V114 = CALLDATALOAD 0x44
0x1bb: V115 = 0x0
0x1bd: V116 = NOT 0x0
0x1be: V117 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V114
0x1c0: V118 = 0x20
0x1c2: V119 = ADD 0x20 0x44
0x1c7: V120 = CALLDATALOAD 0x64
0x1c8: V121 = 0x0
0x1ca: V122 = NOT 0x0
0x1cb: V123 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V120
0x1cd: V124 = 0x20
0x1cf: V125 = ADD 0x20 0x64
0x1d4: V126 = CALLDATALOAD 0x84
0x1d6: V127 = 0x20
0x1d8: V128 = ADD 0x20 0x84
0x1de: V129 = 0x288
0x1e1: JUMP 0x288
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1e2, V106, V111, V117, V123, V126]
Exit stack: [V11, 0x1e2, V106, V111, V117, V123, V126]

================================

Block 0x1e2
[0x1e2:0x1e3]
---
Predecessors: [0x6e8]
Successors: []
---
0x1e2 JUMPDEST
0x1e3 STOP
---
0x1e2: JUMPDEST 
0x1e3: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e4
[0x1e4:0x209]
---
Predecessors: [0x88]
Successors: [0x90]
---
0x1e4 JUMPDEST
0x1e5 PUSH1 0x1
0x1e7 PUSH1 0x0
0x1e9 SWAP1
0x1ea SLOAD
0x1eb SWAP1
0x1ec PUSH2 0x100
0x1ef EXP
0x1f0 SWAP1
0x1f1 DIV
0x1f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x207 AND
0x208 DUP2
0x209 JUMP
---
0x1e4: JUMPDEST 
0x1e5: V130 = 0x1
0x1e7: V131 = 0x0
0x1ea: V132 = S[0x1]
0x1ec: V133 = 0x100
0x1ef: V134 = EXP 0x100 0x0
0x1f1: V135 = DIV V132 0x1
0x1f2: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x207: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x209: JUMP 0x90
---
Entry stack: [V11, 0x90]
Stack pops: 1
Stack additions: [S0, V137]
Exit stack: [V11, 0x90, V137]

================================

Block 0x20a
[0x20a:0x22e]
---
Predecessors: [0xdd]
Successors: [0xe5]
---
0x20a JUMPDEST
0x20b PUSH1 0x0
0x20d DUP1
0x20e SWAP1
0x20f SLOAD
0x210 SWAP1
0x211 PUSH2 0x100
0x214 EXP
0x215 SWAP1
0x216 DIV
0x217 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22c AND
0x22d DUP2
0x22e JUMP
---
0x20a: JUMPDEST 
0x20b: V138 = 0x0
0x20f: V139 = S[0x0]
0x211: V140 = 0x100
0x214: V141 = EXP 0x100 0x0
0x216: V142 = DIV V139 0x1
0x217: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x22e: JUMP 0xe5
---
Entry stack: [V11, 0xe5]
Stack pops: 1
Stack additions: [S0, V144]
Exit stack: [V11, 0xe5, V144]

================================

Block 0x22f
[0x22f:0x234]
---
Predecessors: [0x132]
Successors: [0x13a]
---
0x22f JUMPDEST
0x230 PUSH1 0x2
0x232 SLOAD
0x233 DUP2
0x234 JUMP
---
0x22f: JUMPDEST 
0x230: V145 = 0x2
0x232: V146 = S[0x2]
0x234: JUMP 0x13a
---
Entry stack: [V11, 0x13a]
Stack pops: 1
Stack additions: [S0, V146]
Exit stack: [V11, 0x13a, V146]

================================

Block 0x235
[0x235:0x23a]
---
Predecessors: [0x15b]
Successors: [0x163]
---
0x235 JUMPDEST
0x236 PUSH1 0x3
0x238 SLOAD
0x239 DUP2
0x23a JUMP
---
0x235: JUMPDEST 
0x236: V147 = 0x3
0x238: V148 = S[0x3]
0x23a: JUMP 0x163
---
Entry stack: [V11, 0x163]
Stack pops: 1
Stack additions: [S0, V148]
Exit stack: [V11, 0x163, V148]

================================

Block 0x23b
[0x23b:0x249]
---
Predecessors: [0x184]
Successors: [0x24a, 0x24e]
---
0x23b JUMPDEST
0x23c TIMESTAMP
0x23d PUSH1 0x3
0x23f SLOAD
0x240 PUSH1 0x2
0x242 SLOAD
0x243 ADD
0x244 GT
0x245 ISZERO
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x23b: JUMPDEST 
0x23c: V149 = TIMESTAMP
0x23d: V150 = 0x3
0x23f: V151 = S[0x3]
0x240: V152 = 0x2
0x242: V153 = S[0x2]
0x243: V154 = ADD V153 V151
0x244: V155 = GT V154 V149
0x245: V156 = ISZERO V155
0x246: V157 = 0x24e
0x249: JUMPI 0x24e V156
---
Entry stack: [V11, 0x18c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18c]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x23b]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V158 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x18c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18c]

================================

Block 0x24e
[0x24e:0x287]
---
Predecessors: [0x23b]
Successors: []
---
0x24e JUMPDEST
0x24f PUSH1 0x0
0x251 DUP1
0x252 SWAP1
0x253 SLOAD
0x254 SWAP1
0x255 PUSH2 0x100
0x258 EXP
0x259 SWAP1
0x25a DIV
0x25b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x270 AND
0x271 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x286 AND
0x287 SELFDESTRUCT
---
0x24e: JUMPDEST 
0x24f: V159 = 0x0
0x253: V160 = S[0x0]
0x255: V161 = 0x100
0x258: V162 = EXP 0x100 0x0
0x25a: V163 = DIV V160 0x1
0x25b: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x270: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x271: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x286: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x287: SELFDESTRUCT V167
---
Entry stack: [V11, 0x18c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x18c]

================================

Block 0x288
[0x288:0x304]
---
Predecessors: [0x199]
Successors: [0x305, 0x309]
---
0x288 JUMPDEST
0x289 PUSH1 0x0
0x28b DUP1
0x28c PUSH1 0x1
0x28e DUP8
0x28f DUP8
0x290 DUP8
0x291 DUP8
0x292 PUSH1 0x40
0x294 MLOAD
0x295 PUSH1 0x0
0x297 DUP2
0x298 MSTORE
0x299 PUSH1 0x20
0x29b ADD
0x29c PUSH1 0x40
0x29e MSTORE
0x29f PUSH1 0x0
0x2a1 PUSH1 0x40
0x2a3 MLOAD
0x2a4 PUSH1 0x20
0x2a6 ADD
0x2a7 MSTORE
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab DUP1
0x2ac DUP6
0x2ad PUSH1 0x0
0x2af NOT
0x2b0 AND
0x2b1 PUSH1 0x0
0x2b3 NOT
0x2b4 AND
0x2b5 DUP2
0x2b6 MSTORE
0x2b7 PUSH1 0x20
0x2b9 ADD
0x2ba DUP5
0x2bb PUSH1 0xff
0x2bd AND
0x2be PUSH1 0xff
0x2c0 AND
0x2c1 DUP2
0x2c2 MSTORE
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 DUP4
0x2c7 PUSH1 0x0
0x2c9 NOT
0x2ca AND
0x2cb PUSH1 0x0
0x2cd NOT
0x2ce AND
0x2cf DUP2
0x2d0 MSTORE
0x2d1 PUSH1 0x20
0x2d3 ADD
0x2d4 DUP3
0x2d5 PUSH1 0x0
0x2d7 NOT
0x2d8 AND
0x2d9 PUSH1 0x0
0x2db NOT
0x2dc AND
0x2dd DUP2
0x2de MSTORE
0x2df PUSH1 0x20
0x2e1 ADD
0x2e2 SWAP5
0x2e3 POP
0x2e4 POP
0x2e5 POP
0x2e6 POP
0x2e7 POP
0x2e8 PUSH1 0x20
0x2ea PUSH1 0x40
0x2ec MLOAD
0x2ed PUSH1 0x20
0x2ef DUP2
0x2f0 SUB
0x2f1 SWAP1
0x2f2 DUP1
0x2f3 DUP5
0x2f4 SUB
0x2f5 SWAP1
0x2f6 PUSH1 0x0
0x2f8 DUP7
0x2f9 PUSH2 0x646e
0x2fc GAS
0x2fd SUB
0x2fe CALL
0x2ff ISZERO
0x300 ISZERO
0x301 PUSH2 0x309
0x304 JUMPI
---
0x288: JUMPDEST 
0x289: V168 = 0x0
0x28c: V169 = 0x1
0x292: V170 = 0x40
0x294: V171 = M[0x40]
0x295: V172 = 0x0
0x298: M[V171] = 0x0
0x299: V173 = 0x20
0x29b: V174 = ADD 0x20 V171
0x29c: V175 = 0x40
0x29e: M[0x40] = V174
0x29f: V176 = 0x0
0x2a1: V177 = 0x40
0x2a3: V178 = M[0x40]
0x2a4: V179 = 0x20
0x2a6: V180 = ADD 0x20 V178
0x2a7: M[V180] = 0x0
0x2a8: V181 = 0x40
0x2aa: V182 = M[0x40]
0x2ad: V183 = 0x0
0x2af: V184 = NOT 0x0
0x2b0: V185 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V106
0x2b1: V186 = 0x0
0x2b3: V187 = NOT 0x0
0x2b4: V188 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V185
0x2b6: M[V182] = V188
0x2b7: V189 = 0x20
0x2b9: V190 = ADD 0x20 V182
0x2bb: V191 = 0xff
0x2bd: V192 = AND 0xff V111
0x2be: V193 = 0xff
0x2c0: V194 = AND 0xff V192
0x2c2: M[V190] = V194
0x2c3: V195 = 0x20
0x2c5: V196 = ADD 0x20 V190
0x2c7: V197 = 0x0
0x2c9: V198 = NOT 0x0
0x2ca: V199 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V117
0x2cb: V200 = 0x0
0x2cd: V201 = NOT 0x0
0x2ce: V202 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V199
0x2d0: M[V196] = V202
0x2d1: V203 = 0x20
0x2d3: V204 = ADD 0x20 V196
0x2d5: V205 = 0x0
0x2d7: V206 = NOT 0x0
0x2d8: V207 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V123
0x2d9: V208 = 0x0
0x2db: V209 = NOT 0x0
0x2dc: V210 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V207
0x2de: M[V204] = V210
0x2df: V211 = 0x20
0x2e1: V212 = ADD 0x20 V204
0x2e8: V213 = 0x20
0x2ea: V214 = 0x40
0x2ec: V215 = M[0x40]
0x2ed: V216 = 0x20
0x2f0: V217 = SUB V215 0x20
0x2f4: V218 = SUB V212 V215
0x2f6: V219 = 0x0
0x2f9: V220 = 0x646e
0x2fc: V221 = GAS
0x2fd: V222 = SUB V221 0x646e
0x2fe: V223 = CALL V222 0x1 0x0 V215 V218 V217 0x20
0x2ff: V224 = ISZERO V223
0x300: V225 = ISZERO V224
0x301: V226 = 0x309
0x304: JUMPI 0x309 V225
---
Entry stack: [V11, 0x1e2, V106, V111, V117, V123, V126]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x0, 0x0, 0x1, V212]
Exit stack: [V11, 0x1e2, V106, V111, V117, V123, V126, 0x0, 0x0, 0x1, V212]

================================

Block 0x305
[0x305:0x308]
---
Predecessors: [0x288]
Successors: []
---
0x305 PUSH1 0x0
0x307 DUP1
0x308 REVERT
---
0x305: V227 = 0x0
0x308: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1e2, V106, V111, V117, V123, V126, 0x0, 0x0, 0x1, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e2, V106, V111, V117, V123, V126, 0x0, 0x0, 0x1, V212]

================================

Block 0x309
[0x309:0x42a]
---
Predecessors: [0x288]
Successors: [0x42b, 0x47e]
---
0x309 JUMPDEST
0x30a POP
0x30b POP
0x30c PUSH1 0x20
0x30e PUSH1 0x40
0x310 MLOAD
0x311 SUB
0x312 MLOAD
0x313 SWAP2
0x314 POP
0x315 PUSH1 0x0
0x317 DUP1
0x318 SWAP1
0x319 SLOAD
0x31a SWAP1
0x31b PUSH2 0x100
0x31e EXP
0x31f SWAP1
0x320 DIV
0x321 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x336 AND
0x337 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34c AND
0x34d PUSH1 0x1
0x34f PUSH1 0x0
0x351 SWAP1
0x352 SLOAD
0x353 SWAP1
0x354 PUSH2 0x100
0x357 EXP
0x358 SWAP1
0x359 DIV
0x35a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36f AND
0x370 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x385 AND
0x386 DUP4
0x387 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39c AND
0x39d PUSH32 0x80c76b9f8bacaa14e3400d10209a4675b7aac1ee7647be13fdcd4bc5e38a3b5
0x3be DUP7
0x3bf PUSH1 0x40
0x3c1 MLOAD
0x3c2 DUP1
0x3c3 DUP3
0x3c4 DUP2
0x3c5 MSTORE
0x3c6 PUSH1 0x20
0x3c8 ADD
0x3c9 SWAP2
0x3ca POP
0x3cb POP
0x3cc PUSH1 0x40
0x3ce MLOAD
0x3cf DUP1
0x3d0 SWAP2
0x3d1 SUB
0x3d2 SWAP1
0x3d3 LOG4
0x3d4 PUSH1 0x0
0x3d6 DUP1
0x3d7 SWAP1
0x3d8 SLOAD
0x3d9 SWAP1
0x3da PUSH2 0x100
0x3dd EXP
0x3de SWAP1
0x3df DIV
0x3e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f5 AND
0x3f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40b AND
0x40c DUP3
0x40d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x422 AND
0x423 EQ
0x424 ISZERO
0x425 DUP1
0x426 ISZERO
0x427 PUSH2 0x47e
0x42a JUMPI
---
0x309: JUMPDEST 
0x30c: V228 = 0x20
0x30e: V229 = 0x40
0x310: V230 = M[0x40]
0x311: V231 = SUB V230 0x20
0x312: V232 = M[V231]
0x315: V233 = 0x0
0x319: V234 = S[0x0]
0x31b: V235 = 0x100
0x31e: V236 = EXP 0x100 0x0
0x320: V237 = DIV V234 0x1
0x321: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x336: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x337: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x34c: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x34d: V242 = 0x1
0x34f: V243 = 0x0
0x352: V244 = S[0x1]
0x354: V245 = 0x100
0x357: V246 = EXP 0x100 0x0
0x359: V247 = DIV V244 0x1
0x35a: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x36f: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x370: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x385: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x387: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x39c: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x39d: V254 = 0x80c76b9f8bacaa14e3400d10209a4675b7aac1ee7647be13fdcd4bc5e38a3b5
0x3bf: V255 = 0x40
0x3c1: V256 = M[0x40]
0x3c5: M[V256] = V126
0x3c6: V257 = 0x20
0x3c8: V258 = ADD 0x20 V256
0x3cc: V259 = 0x40
0x3ce: V260 = M[0x40]
0x3d1: V261 = SUB V258 V260
0x3d3: LOG V260 V261 0x80c76b9f8bacaa14e3400d10209a4675b7aac1ee7647be13fdcd4bc5e38a3b5 V253 V251 V241
0x3d4: V262 = 0x0
0x3d8: V263 = S[0x0]
0x3da: V264 = 0x100
0x3dd: V265 = EXP 0x100 0x0
0x3df: V266 = DIV V263 0x1
0x3e0: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f5: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x3f6: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x40b: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x40d: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x422: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x423: V273 = EQ V272 V270
0x424: V274 = ISZERO V273
0x426: V275 = ISZERO V274
0x427: V276 = 0x47e
0x42a: JUMPI 0x47e V275
---
Entry stack: [V11, 0x1e2, V106, V111, V117, V123, V126, 0x0, 0x0, 0x1, V212]
Stack pops: 5
Stack additions: [S4, V232, S2, V274]
Exit stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, 0x0, V274]

================================

Block 0x42b
[0x42b:0x47d]
---
Predecessors: [0x309]
Successors: [0x47e]
---
0x42b POP
0x42c PUSH1 0x1
0x42e PUSH1 0x0
0x430 SWAP1
0x431 SLOAD
0x432 SWAP1
0x433 PUSH2 0x100
0x436 EXP
0x437 SWAP1
0x438 DIV
0x439 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44e AND
0x44f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x464 AND
0x465 DUP3
0x466 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47b AND
0x47c EQ
0x47d ISZERO
---
0x42c: V277 = 0x1
0x42e: V278 = 0x0
0x431: V279 = S[0x1]
0x433: V280 = 0x100
0x436: V281 = EXP 0x100 0x0
0x438: V282 = DIV V279 0x1
0x439: V283 = 0xffffffffffffffffffffffffffffffffffffffff
0x44e: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x44f: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x464: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x466: V287 = 0xffffffffffffffffffffffffffffffffffffffff
0x47b: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x47c: V289 = EQ V288 V286
0x47d: V290 = ISZERO V289
---
Entry stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, 0x0, V274]
Stack pops: 3
Stack additions: [S2, S1, V290]
Exit stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, 0x0, V290]

================================

Block 0x47e
[0x47e:0x483]
---
Predecessors: [0x309, 0x42b]
Successors: [0x484, 0x488]
---
0x47e JUMPDEST
0x47f ISZERO
0x480 PUSH2 0x488
0x483 JUMPI
---
0x47e: JUMPDEST 
0x47f: V291 = ISZERO S0
0x480: V292 = 0x488
0x483: JUMPI 0x488 V291
---
Entry stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, 0x0]

================================

Block 0x484
[0x484:0x487]
---
Predecessors: [0x47e]
Successors: []
---
0x484 PUSH1 0x0
0x486 DUP1
0x487 REVERT
---
0x484: V293 = 0x0
0x487: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, 0x0]

================================

Block 0x488
[0x488:0x57c]
---
Predecessors: [0x47e]
Successors: [0x57d, 0x5db]
---
0x488 JUMPDEST
0x489 ADDRESS
0x48a DUP4
0x48b PUSH1 0x40
0x48d MLOAD
0x48e DUP1
0x48f DUP4
0x490 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a5 AND
0x4a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bb AND
0x4bc PUSH13 0x1000000000000000000000000
0x4ca MUL
0x4cb DUP2
0x4cc MSTORE
0x4cd PUSH1 0x14
0x4cf ADD
0x4d0 DUP3
0x4d1 DUP2
0x4d2 MSTORE
0x4d3 PUSH1 0x20
0x4d5 ADD
0x4d6 SWAP3
0x4d7 POP
0x4d8 POP
0x4d9 POP
0x4da PUSH1 0x40
0x4dc MLOAD
0x4dd DUP1
0x4de SWAP2
0x4df SUB
0x4e0 SWAP1
0x4e1 SHA3
0x4e2 SWAP1
0x4e3 POP
0x4e4 PUSH32 0x6552c051eb87362b1640ae2101ef0dc3f4ef3eecdb4562fc3ef22434df1e85db
0x505 DUP2
0x506 PUSH1 0x40
0x508 MLOAD
0x509 DUP1
0x50a DUP3
0x50b PUSH1 0x0
0x50d NOT
0x50e AND
0x50f PUSH1 0x0
0x511 NOT
0x512 AND
0x513 DUP2
0x514 MSTORE
0x515 PUSH1 0x20
0x517 ADD
0x518 SWAP2
0x519 POP
0x51a POP
0x51b PUSH1 0x40
0x51d MLOAD
0x51e DUP1
0x51f SWAP2
0x520 SUB
0x521 SWAP1
0x522 LOG1
0x523 PUSH1 0x0
0x525 PUSH1 0x4
0x527 PUSH1 0x0
0x529 DUP4
0x52a PUSH1 0x0
0x52c NOT
0x52d AND
0x52e PUSH1 0x0
0x530 NOT
0x531 AND
0x532 DUP2
0x533 MSTORE
0x534 PUSH1 0x20
0x536 ADD
0x537 SWAP1
0x538 DUP2
0x539 MSTORE
0x53a PUSH1 0x20
0x53c ADD
0x53d PUSH1 0x0
0x53f SHA3
0x540 PUSH1 0x0
0x542 SWAP1
0x543 SLOAD
0x544 SWAP1
0x545 PUSH2 0x100
0x548 EXP
0x549 SWAP1
0x54a DIV
0x54b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x560 AND
0x561 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x576 AND
0x577 EQ
0x578 ISZERO
0x579 PUSH2 0x5db
0x57c JUMPI
---
0x488: JUMPDEST 
0x489: V294 = ADDRESS
0x48b: V295 = 0x40
0x48d: V296 = M[0x40]
0x490: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a5: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x4a6: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bb: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x4bc: V301 = 0x1000000000000000000000000
0x4ca: V302 = MUL 0x1000000000000000000000000 V300
0x4cc: M[V296] = V302
0x4cd: V303 = 0x14
0x4cf: V304 = ADD 0x14 V296
0x4d2: M[V304] = V126
0x4d3: V305 = 0x20
0x4d5: V306 = ADD 0x20 V304
0x4da: V307 = 0x40
0x4dc: V308 = M[0x40]
0x4df: V309 = SUB V306 V308
0x4e1: V310 = SHA3 V308 V309
0x4e4: V311 = 0x6552c051eb87362b1640ae2101ef0dc3f4ef3eecdb4562fc3ef22434df1e85db
0x506: V312 = 0x40
0x508: V313 = M[0x40]
0x50b: V314 = 0x0
0x50d: V315 = NOT 0x0
0x50e: V316 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V310
0x50f: V317 = 0x0
0x511: V318 = NOT 0x0
0x512: V319 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V316
0x514: M[V313] = V319
0x515: V320 = 0x20
0x517: V321 = ADD 0x20 V313
0x51b: V322 = 0x40
0x51d: V323 = M[0x40]
0x520: V324 = SUB V321 V323
0x522: LOG V323 V324 0x6552c051eb87362b1640ae2101ef0dc3f4ef3eecdb4562fc3ef22434df1e85db
0x523: V325 = 0x0
0x525: V326 = 0x4
0x527: V327 = 0x0
0x52a: V328 = 0x0
0x52c: V329 = NOT 0x0
0x52d: V330 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V310
0x52e: V331 = 0x0
0x530: V332 = NOT 0x0
0x531: V333 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V330
0x533: M[0x0] = V333
0x534: V334 = 0x20
0x536: V335 = ADD 0x20 0x0
0x539: M[0x20] = 0x4
0x53a: V336 = 0x20
0x53c: V337 = ADD 0x20 0x20
0x53d: V338 = 0x0
0x53f: V339 = SHA3 0x0 0x40
0x540: V340 = 0x0
0x543: V341 = S[V339]
0x545: V342 = 0x100
0x548: V343 = EXP 0x100 0x0
0x54a: V344 = DIV V341 0x1
0x54b: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x560: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x561: V347 = 0xffffffffffffffffffffffffffffffffffffffff
0x576: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x577: V349 = EQ V348 0x0
0x578: V350 = ISZERO V349
0x579: V351 = 0x5db
0x57c: JUMPI 0x5db V350
---
Entry stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V310]
Exit stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, V310]

================================

Block 0x57d
[0x57d:0x5da]
---
Predecessors: [0x488]
Successors: [0x6e8]
---
0x57d DUP2
0x57e PUSH1 0x4
0x580 PUSH1 0x0
0x582 DUP4
0x583 PUSH1 0x0
0x585 NOT
0x586 AND
0x587 PUSH1 0x0
0x589 NOT
0x58a AND
0x58b DUP2
0x58c MSTORE
0x58d PUSH1 0x20
0x58f ADD
0x590 SWAP1
0x591 DUP2
0x592 MSTORE
0x593 PUSH1 0x20
0x595 ADD
0x596 PUSH1 0x0
0x598 SHA3
0x599 PUSH1 0x0
0x59b PUSH2 0x100
0x59e EXP
0x59f DUP2
0x5a0 SLOAD
0x5a1 DUP2
0x5a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b7 MUL
0x5b8 NOT
0x5b9 AND
0x5ba SWAP1
0x5bb DUP4
0x5bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d1 AND
0x5d2 MUL
0x5d3 OR
0x5d4 SWAP1
0x5d5 SSTORE
0x5d6 POP
0x5d7 PUSH2 0x6e8
0x5da JUMP
---
0x57e: V352 = 0x4
0x580: V353 = 0x0
0x583: V354 = 0x0
0x585: V355 = NOT 0x0
0x586: V356 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V310
0x587: V357 = 0x0
0x589: V358 = NOT 0x0
0x58a: V359 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V356
0x58c: M[0x0] = V359
0x58d: V360 = 0x20
0x58f: V361 = ADD 0x20 0x0
0x592: M[0x20] = 0x4
0x593: V362 = 0x20
0x595: V363 = ADD 0x20 0x20
0x596: V364 = 0x0
0x598: V365 = SHA3 0x0 0x40
0x599: V366 = 0x0
0x59b: V367 = 0x100
0x59e: V368 = EXP 0x100 0x0
0x5a0: V369 = S[V365]
0x5a2: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b7: V371 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x5b8: V372 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5b9: V373 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V369
0x5bc: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d1: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x5d2: V376 = MUL V375 0x1
0x5d3: V377 = OR V376 V373
0x5d5: S[V365] = V377
0x5d7: V378 = 0x6e8
0x5da: JUMP 0x6e8
---
Entry stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, V310]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, V310]

================================

Block 0x5db
[0x5db:0x64b]
---
Predecessors: [0x488]
Successors: [0x64c, 0x6e7]
---
0x5db JUMPDEST
0x5dc DUP2
0x5dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f2 AND
0x5f3 PUSH1 0x4
0x5f5 PUSH1 0x0
0x5f7 DUP4
0x5f8 PUSH1 0x0
0x5fa NOT
0x5fb AND
0x5fc PUSH1 0x0
0x5fe NOT
0x5ff AND
0x600 DUP2
0x601 MSTORE
0x602 PUSH1 0x20
0x604 ADD
0x605 SWAP1
0x606 DUP2
0x607 MSTORE
0x608 PUSH1 0x20
0x60a ADD
0x60b PUSH1 0x0
0x60d SHA3
0x60e PUSH1 0x0
0x610 SWAP1
0x611 SLOAD
0x612 SWAP1
0x613 PUSH2 0x100
0x616 EXP
0x617 SWAP1
0x618 DIV
0x619 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62e AND
0x62f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x644 AND
0x645 EQ
0x646 ISZERO
0x647 ISZERO
0x648 PUSH2 0x6e7
0x64b JUMPI
---
0x5db: JUMPDEST 
0x5dd: V379 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f2: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x5f3: V381 = 0x4
0x5f5: V382 = 0x0
0x5f8: V383 = 0x0
0x5fa: V384 = NOT 0x0
0x5fb: V385 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V310
0x5fc: V386 = 0x0
0x5fe: V387 = NOT 0x0
0x5ff: V388 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V385
0x601: M[0x0] = V388
0x602: V389 = 0x20
0x604: V390 = ADD 0x20 0x0
0x607: M[0x20] = 0x4
0x608: V391 = 0x20
0x60a: V392 = ADD 0x20 0x20
0x60b: V393 = 0x0
0x60d: V394 = SHA3 0x0 0x40
0x60e: V395 = 0x0
0x611: V396 = S[V394]
0x613: V397 = 0x100
0x616: V398 = EXP 0x100 0x0
0x618: V399 = DIV V396 0x1
0x619: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x62e: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x62f: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x644: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x645: V404 = EQ V403 V380
0x646: V405 = ISZERO V404
0x647: V406 = ISZERO V405
0x648: V407 = 0x6e7
0x64b: JUMPI 0x6e7 V406
---
Entry stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, V310]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, V310]

================================

Block 0x64c
[0x64c:0x6a8]
---
Predecessors: [0x5db]
Successors: [0x6a9, 0x6ad]
---
0x64c PUSH1 0x1
0x64e PUSH1 0x0
0x650 SWAP1
0x651 SLOAD
0x652 SWAP1
0x653 PUSH2 0x100
0x656 EXP
0x657 SWAP1
0x658 DIV
0x659 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66e AND
0x66f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x684 AND
0x685 PUSH2 0x8fc
0x688 DUP5
0x689 SWAP1
0x68a DUP2
0x68b ISZERO
0x68c MUL
0x68d SWAP1
0x68e PUSH1 0x40
0x690 MLOAD
0x691 PUSH1 0x0
0x693 PUSH1 0x40
0x695 MLOAD
0x696 DUP1
0x697 DUP4
0x698 SUB
0x699 DUP2
0x69a DUP6
0x69b DUP9
0x69c DUP9
0x69d CALL
0x69e SWAP4
0x69f POP
0x6a0 POP
0x6a1 POP
0x6a2 POP
0x6a3 ISZERO
0x6a4 ISZERO
0x6a5 PUSH2 0x6ad
0x6a8 JUMPI
---
0x64c: V408 = 0x1
0x64e: V409 = 0x0
0x651: V410 = S[0x1]
0x653: V411 = 0x100
0x656: V412 = EXP 0x100 0x0
0x658: V413 = DIV V410 0x1
0x659: V414 = 0xffffffffffffffffffffffffffffffffffffffff
0x66e: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V413
0x66f: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x684: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x685: V418 = 0x8fc
0x68b: V419 = ISZERO V126
0x68c: V420 = MUL V419 0x8fc
0x68e: V421 = 0x40
0x690: V422 = M[0x40]
0x691: V423 = 0x0
0x693: V424 = 0x40
0x695: V425 = M[0x40]
0x698: V426 = SUB V422 V425
0x69d: V427 = CALL V420 V417 V126 V425 V426 V425 0x0
0x6a3: V428 = ISZERO V427
0x6a4: V429 = ISZERO V428
0x6a5: V430 = 0x6ad
0x6a8: JUMPI 0x6ad V429
---
Entry stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, V310]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, V310]

================================

Block 0x6a9
[0x6a9:0x6ac]
---
Predecessors: [0x64c]
Successors: []
---
0x6a9 PUSH1 0x0
0x6ab DUP1
0x6ac REVERT
---
0x6a9: V431 = 0x0
0x6ac: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, V310]

================================

Block 0x6ad
[0x6ad:0x6e6]
---
Predecessors: [0x64c]
Successors: []
---
0x6ad JUMPDEST
0x6ae PUSH1 0x0
0x6b0 DUP1
0x6b1 SWAP1
0x6b2 SLOAD
0x6b3 SWAP1
0x6b4 PUSH2 0x100
0x6b7 EXP
0x6b8 SWAP1
0x6b9 DIV
0x6ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6cf AND
0x6d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e5 AND
0x6e6 SELFDESTRUCT
---
0x6ad: JUMPDEST 
0x6ae: V432 = 0x0
0x6b2: V433 = S[0x0]
0x6b4: V434 = 0x100
0x6b7: V435 = EXP 0x100 0x0
0x6b9: V436 = DIV V433 0x1
0x6ba: V437 = 0xffffffffffffffffffffffffffffffffffffffff
0x6cf: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x6d0: V439 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e5: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff V438
0x6e6: SELFDESTRUCT V440
---
Entry stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, V310]

================================

Block 0x6e7
[0x6e7:0x6e7]
---
Predecessors: [0x5db]
Successors: [0x6e8]
---
0x6e7 JUMPDEST
---
0x6e7: JUMPDEST 
---
Entry stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, V310]

================================

Block 0x6e8
[0x6e8:0x6f0]
---
Predecessors: [0x57d, 0x6e7]
Successors: [0x1e2]
---
0x6e8 JUMPDEST
0x6e9 POP
0x6ea POP
0x6eb POP
0x6ec POP
0x6ed POP
0x6ee POP
0x6ef POP
0x6f0 JUMP
---
0x6e8: JUMPDEST 
0x6f0: JUMP 0x1e2
---
Entry stack: [V11, 0x1e2, V106, V111, V117, V123, V126, V232, V310]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f1
[0x6f1:0x72c]
---
Predecessors: []
Successors: []
---
0x6f1 STOP
0x6f2 LOG1
0x6f3 PUSH6 0x627a7a723058
0x6fa SHA3
0x6fb XOR
0x6fc DUP3
0x6fd SWAP1
0x6fe PUSH6 0xbcc6afe20aac
0x705 CALLVALUE
0x706 MSTORE8
0x707 MISSING 0xee
0x708 COINBASE
0x709 MSIZE
0x70a DUP3
0x70b MISSING 0xb5
0x70c MISSING 0x26
0x70d MISSING 0x22
0x70e MISSING 0x4b
0x70f EXTCODEHASH
0x710 PUSH28 0x7ef63f31a339ba05b2de0029
---
0x6f1: STOP 
0x6f2: LOG S0 S1 S2
0x6f3: V441 = 0x627a7a723058
0x6fa: V442 = SHA3 0x627a7a723058 S3
0x6fb: V443 = XOR V442 S4
0x6fe: V444 = 0xbcc6afe20aac
0x705: V445 = CALLVALUE
0x706: M8[V445] = 0xbcc6afe20aac
0x707: MISSING 0xee
0x708: V446 = COINBASE
0x709: V447 = MSIZE
0x70b: MISSING 0xb5
0x70c: MISSING 0x26
0x70d: MISSING 0x22
0x70e: MISSING 0x4b
0x70f: V448 = EXTCODEHASH S0
0x710: V449 = 0x7ef63f31a339ba05b2de0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V443, S6, S5, S6, S0, V447, V446, S0, 0x7ef63f31a339ba05b2de0029, V448]
Exit stack: []

================================

Function 0:
Public function signature: 0x4758e79
Entry block: 0x7d
Exit block: 0x90
Body: 0x7d, 0x84, 0x88, 0x90, 0x1e4

Function 1:
Public function signature: 0x75aa0c4
Entry block: 0xd2
Exit block: 0xe5
Body: 0xd2, 0xd9, 0xdd, 0xe5, 0x20a

Function 2:
Public function signature: 0xb97bc86
Entry block: 0x127
Exit block: 0x13a
Body: 0x127, 0x12e, 0x132, 0x13a, 0x22f

Function 3:
Public function signature: 0x2ef2d55e
Entry block: 0x150
Exit block: 0x163
Body: 0x150, 0x157, 0x15b, 0x163, 0x235

Function 4:
Public function signature: 0x39658245
Entry block: 0x179
Exit block: 0x24e
Body: 0x179, 0x180, 0x184, 0x23b, 0x24a, 0x24e

Function 5:
Public function signature: 0xadacb0fa
Entry block: 0x18e
Exit block: 0x1e2
Body: 0x18e, 0x195, 0x199, 0x1e2, 0x288, 0x305, 0x309, 0x42b, 0x47e, 0x484, 0x488, 0x57d, 0x5db, 0x64c, 0x6a9, 0x6ad, 0x6e7, 0x6e8

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

