Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb
0xa: JUMPI 0xb V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1b]
---
Predecessors: [0x0]
Successors: [0x1c, 0x2a]
---
0xb JUMPDEST
0xc PUSH2 0xa6
0xf PUSH1 0x1
0x11 SLOAD
0x12 PUSH1 0x0
0x14 SWAP1
0x15 GT
0x16 DUP1
0x17 ISZERO
0x18 PUSH2 0x2a
0x1b JUMPI
---
0xb: JUMPDEST 
0xc: V5 = 0xa6
0xf: V6 = 0x1
0x11: V7 = S[0x1]
0x12: V8 = 0x0
0x15: V9 = GT V7 0x0
0x17: V10 = ISZERO V9
0x18: V11 = 0x2a
0x1b: JUMPI 0x2a V10
---
Entry stack: []
Stack pops: 0
Stack additions: [0xa6, V9]
Exit stack: [0xa6, V9]

================================

Block 0x1c
[0x1c:0x29]
---
Predecessors: [0xb]
Successors: [0x2a]
---
0x1c POP
0x1d PUSH3 0x15180
0x21 PUSH1 0x1
0x23 PUSH1 0x0
0x25 POP
0x26 SLOAD
0x27 TIMESTAMP
0x28 SUB
0x29 GT
---
0x1d: V12 = 0x15180
0x21: V13 = 0x1
0x23: V14 = 0x0
0x26: V15 = S[0x1]
0x27: V16 = TIMESTAMP
0x28: V17 = SUB V16 V15
0x29: V18 = GT V17 0x15180
---
Entry stack: [0xa6, V9]
Stack pops: 1
Stack additions: [V18]
Exit stack: [0xa6, V18]

================================

Block 0x2a
[0x2a:0x2f]
---
Predecessors: [0xb, 0x1c]
Successors: [0x30, 0xc6]
---
0x2a JUMPDEST
0x2b ISZERO
0x2c PUSH2 0xc6
0x2f JUMPI
---
0x2a: JUMPDEST 
0x2b: V19 = ISZERO S0
0x2c: V20 = 0xc6
0x2f: JUMPI 0xc6 V19
---
Entry stack: [0xa6, S0]
Stack pops: 1
Stack additions: []
Exit stack: [0xa6]

================================

Block 0x30
[0x30:0x5c]
---
Predecessors: [0x2a]
Successors: [0x5d, 0x118]
---
0x30 PUSH1 0x1
0x32 PUSH1 0xa0
0x34 PUSH1 0x2
0x36 EXP
0x37 SUB
0x38 CALLER
0x39 AND
0x3a PUSH1 0x0
0x3c CALLVALUE
0x3d PUSH1 0x60
0x3f DUP3
0x40 DUP2
0x41 DUP2
0x42 DUP2
0x43 DUP6
0x44 DUP9
0x45 DUP4
0x46 CALL
0x47 POP
0x48 POP
0x49 POP
0x4a ADDRESS
0x4b PUSH1 0x1
0x4d PUSH1 0xa0
0x4f PUSH1 0x2
0x51 EXP
0x52 SUB
0x53 AND
0x54 BALANCE
0x55 GT
0x56 ISZERO
0x57 SWAP1
0x58 POP
0x59 PUSH2 0x118
0x5c JUMPI
---
0x30: V21 = 0x1
0x32: V22 = 0xa0
0x34: V23 = 0x2
0x36: V24 = EXP 0x2 0xa0
0x37: V25 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38: V26 = CALLER
0x39: V27 = AND V26 0xffffffffffffffffffffffffffffffffffffffff
0x3a: V28 = 0x0
0x3c: V29 = CALLVALUE
0x3d: V30 = 0x60
0x46: V31 = CALL 0x0 V27 V29 0x60 0x0 0x60 0x0
0x4a: V32 = ADDRESS
0x4b: V33 = 0x1
0x4d: V34 = 0xa0
0x4f: V35 = 0x2
0x51: V36 = EXP 0x2 0xa0
0x52: V37 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x54: V39 = BALANCE V38
0x55: V40 = GT V39 0x0
0x56: V41 = ISZERO V40
0x59: V42 = 0x118
0x5c: JUMPI 0x118 V41
---
Entry stack: [0xa6]
Stack pops: 0
Stack additions: []
Exit stack: [0xa6]

================================

Block 0x5d
[0x5d:0xa5]
---
Predecessors: [0x30]
Successors: [0x13b]
---
0x5d PUSH1 0x0
0x5f DUP1
0x60 SLOAD
0x61 PUSH1 0x40
0x63 MLOAD
0x64 PUSH1 0x1
0x66 PUSH1 0xa0
0x68 PUSH1 0x2
0x6a EXP
0x6b SUB
0x6c SWAP2
0x6d DUP3
0x6e AND
0x6f SWAP3
0x70 SWAP2
0x71 ADDRESS
0x72 AND
0x73 BALANCE
0x74 SWAP1
0x75 DUP3
0x76 DUP2
0x77 DUP2
0x78 DUP2
0x79 DUP6
0x7a DUP9
0x7b DUP4
0x7c CALL
0x7d POP
0x7e PUSH1 0x4
0x80 DUP2
0x81 MSTORE
0x82 PUSH1 0x40
0x84 MLOAD
0x85 PUSH1 0x0
0x87 DUP1
0x88 MLOAD
0x89 PUSH1 0x20
0x8b PUSH2 0x141
0x8e DUP4
0x8f CODECOPY
0x90 DUP2
0x91 MLOAD
0x92 SWAP2
0x93 MSTORE
0x94 SWAP5
0x95 POP
0x96 SWAP1
0x97 DUP2
0x98 SWAP1
0x99 SUB
0x9a PUSH1 0x20
0x9c ADD
0x9d SWAP3
0x9e POP
0x9f SWAP1
0xa0 POP
0xa1 LOG1
0xa2 PUSH2 0x13b
0xa5 JUMP
---
0x5d: V43 = 0x0
0x60: V44 = S[0x0]
0x61: V45 = 0x40
0x63: V46 = M[0x40]
0x64: V47 = 0x1
0x66: V48 = 0xa0
0x68: V49 = 0x2
0x6a: V50 = EXP 0x2 0xa0
0x6b: V51 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x71: V53 = ADDRESS
0x72: V54 = AND V53 0xffffffffffffffffffffffffffffffffffffffff
0x73: V55 = BALANCE V54
0x7c: V56 = CALL 0x0 V52 V55 V46 0x0 V46 0x0
0x7e: V57 = 0x4
0x81: M[V46] = 0x4
0x82: V58 = 0x40
0x84: V59 = M[0x40]
0x85: V60 = 0x0
0x88: V61 = M[0x0]
0x89: V62 = 0x20
0x8b: V63 = 0x141
0x8f: CODECOPY 0x0 0x141 0x20
0x91: V64 = M[0x0]
0x93: M[0x0] = V61
0x99: V65 = SUB V46 V59
0x9a: V66 = 0x20
0x9c: V67 = ADD 0x20 V65
0xa1: LOG V59 V67 V64
0xa2: V68 = 0x13b
0xa5: JUMP 0x13b
---
Entry stack: [0xa6]
Stack pops: 0
Stack additions: []
Exit stack: [0xa6]

================================

Block 0xa6
[0xa6:0xa7]
---
Predecessors: [0xc4]
Successors: []
---
0xa6 JUMPDEST
0xa7 STOP
---
0xa6: JUMPDEST 
0xa7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa8
[0xa8:0xc3]
---
Predecessors: [0xc6]
Successors: [0xc4]
---
0xa8 JUMPDEST
0xa9 PUSH1 0x3
0xab PUSH1 0x60
0xad SWAP1
0xae DUP2
0xaf MSTORE
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 MLOAD
0xb4 PUSH1 0x20
0xb6 PUSH2 0x141
0xb9 DUP4
0xba CODECOPY
0xbb DUP2
0xbc MLOAD
0xbd SWAP2
0xbe MSTORE
0xbf SWAP1
0xc0 PUSH1 0x20
0xc2 SWAP1
0xc3 LOG1
---
0xa8: JUMPDEST 
0xa9: V69 = 0x3
0xab: V70 = 0x60
0xaf: M[0x60] = 0x3
0xb0: V71 = 0x0
0xb3: V72 = M[0x0]
0xb4: V73 = 0x20
0xb6: V74 = 0x141
0xba: CODECOPY 0x0 0x141 0x20
0xbc: V75 = M[0x0]
0xbe: M[0x0] = V72
0xc0: V76 = 0x20
0xc3: LOG 0x60 0x20 V75
---
Entry stack: [0xa6]
Stack pops: 0
Stack additions: []
Exit stack: [0xa6]

================================

Block 0xc4
[0xc4:0xc5]
---
Predecessors: [0xa8, 0xd6, 0x13b]
Successors: [0xa6]
---
0xc4 JUMPDEST
0xc5 JUMP
---
0xc4: JUMPDEST 
0xc5: JUMP 0xa6
---
Entry stack: [0xa6]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xc6
[0xc6:0xd5]
---
Predecessors: [0x2a]
Successors: [0xa8, 0xd6]
---
0xc6 JUMPDEST
0xc7 PUSH8 0xde0b6b3a7640000
0xd0 CALLVALUE
0xd1 LT
0xd2 PUSH2 0xa8
0xd5 JUMPI
---
0xc6: JUMPDEST 
0xc7: V77 = 0xde0b6b3a7640000
0xd0: V78 = CALLVALUE
0xd1: V79 = LT V78 0xde0b6b3a7640000
0xd2: V80 = 0xa8
0xd5: JUMPI 0xa8 V79
---
Entry stack: [0xa6]
Stack pops: 0
Stack additions: []
Exit stack: [0xa6]

================================

Block 0xd6
[0xd6:0x117]
---
Predecessors: [0xc6]
Successors: [0xc4]
---
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 SLOAD
0xda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef NOT
0xf0 AND
0xf1 CALLER
0xf2 OR
0xf3 SWAP1
0xf4 SSTORE
0xf5 TIMESTAMP
0xf6 PUSH1 0x1
0xf8 SSTORE
0xf9 PUSH1 0x2
0xfb PUSH1 0x60
0xfd SWAP1
0xfe DUP2
0xff MSTORE
0x100 PUSH1 0x0
0x102 DUP1
0x103 MLOAD
0x104 PUSH1 0x20
0x106 PUSH2 0x141
0x109 DUP4
0x10a CODECOPY
0x10b DUP2
0x10c MLOAD
0x10d SWAP2
0x10e MSTORE
0x10f SWAP1
0x110 PUSH1 0x20
0x112 SWAP1
0x113 LOG1
0x114 PUSH2 0xc4
0x117 JUMP
---
0xd6: V81 = 0x0
0xd9: V82 = S[0x0]
0xda: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0xef: V84 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf0: V85 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V82
0xf1: V86 = CALLER
0xf2: V87 = OR V86 V85
0xf4: S[0x0] = V87
0xf5: V88 = TIMESTAMP
0xf6: V89 = 0x1
0xf8: S[0x1] = V88
0xf9: V90 = 0x2
0xfb: V91 = 0x60
0xff: M[0x60] = 0x2
0x100: V92 = 0x0
0x103: V93 = M[0x0]
0x104: V94 = 0x20
0x106: V95 = 0x141
0x10a: CODECOPY 0x0 0x141 0x20
0x10c: V96 = M[0x0]
0x10e: M[0x0] = V93
0x110: V97 = 0x20
0x113: LOG 0x60 0x20 V96
0x114: V98 = 0xc4
0x117: JUMP 0xc4
---
Entry stack: [0xa6]
Stack pops: 0
Stack additions: []
Exit stack: [0xa6]

================================

Block 0x118
[0x118:0x13a]
---
Predecessors: [0x30]
Successors: [0x13b]
---
0x118 JUMPDEST
0x119 PUSH1 0x40
0x11b DUP1
0x11c MLOAD
0x11d PUSH1 0x5
0x11f DUP2
0x120 MSTORE
0x121 SWAP1
0x122 MLOAD
0x123 PUSH1 0x0
0x125 DUP1
0x126 MLOAD
0x127 PUSH1 0x20
0x129 PUSH2 0x141
0x12c DUP4
0x12d CODECOPY
0x12e DUP2
0x12f MLOAD
0x130 SWAP2
0x131 MSTORE
0x132 SWAP2
0x133 DUP2
0x134 SWAP1
0x135 SUB
0x136 PUSH1 0x20
0x138 ADD
0x139 SWAP1
0x13a LOG1
---
0x118: JUMPDEST 
0x119: V99 = 0x40
0x11c: V100 = M[0x40]
0x11d: V101 = 0x5
0x120: M[V100] = 0x5
0x122: V102 = M[0x40]
0x123: V103 = 0x0
0x126: V104 = M[0x0]
0x127: V105 = 0x20
0x129: V106 = 0x141
0x12d: CODECOPY 0x0 0x141 0x20
0x12f: V107 = M[0x0]
0x131: M[0x0] = V104
0x135: V108 = SUB V100 V102
0x136: V109 = 0x20
0x138: V110 = ADD 0x20 V108
0x13a: LOG V102 V110 V107
---
Entry stack: [0xa6]
Stack pops: 0
Stack additions: []
Exit stack: [0xa6]

================================

Block 0x13b
[0x13b:0x13f]
---
Predecessors: [0x5d, 0x118]
Successors: [0xc4]
---
0x13b JUMPDEST
0x13c PUSH2 0xc4
0x13f JUMP
---
0x13b: JUMPDEST 
0x13c: V111 = 0xc4
0x13f: JUMP 0xc4
---
Entry stack: [0xa6]
Stack pops: 0
Stack additions: []
Exit stack: [0xa6]

================================

Block 0x140
[0x140:0x166]
---
Predecessors: []
Successors: []
---
0x140 STOP
0x141 MISSING 0xf8
0x142 MISSING 0x2c
0x143 POP
0x144 CALL
0x145 DUP5
0x146 DUP2
0x147 CALLDATASIZE
0x148 MISSING 0xe6
0x149 MISSING 0xc1
0x14a BLOCKHASH
0x14b MISSING 0xb1
0x14c DUP7
0x14d MISSING 0xea
0x14e MISSING 0xc
0x14f PUSH23 0x8b7deda5efffe42c25e96336a90b26c744
---
0x140: STOP 
0x141: MISSING 0xf8
0x142: MISSING 0x2c
0x144: V112 = CALL S1 S2 S3 S4 S5 S6 S7
0x147: V113 = CALLDATASIZE
0x148: MISSING 0xe6
0x149: MISSING 0xc1
0x14a: V114 = BLOCKHASH S0
0x14b: MISSING 0xb1
0x14d: MISSING 0xea
0x14e: MISSING 0xc
0x14f: V115 = 0x8b7deda5efffe42c25e96336a90b26c744
---
Entry stack: []
Stack pops: 0
Stack additions: [V113, V112, S11, V112, S8, S9, S10, S11, V114, S6, S0, S1, S2, S3, S4, S5, S6, 0x8b7deda5efffe42c25e96336a90b26c744]
Exit stack: []

================================


