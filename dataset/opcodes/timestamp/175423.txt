Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x3b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x3b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3b
0xa: JUMPI 0x3b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x94]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x354284f2
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x94
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x354284f2
0x20: V14 = EQ V12 0x354284f2
0x21: V15 = 0x94
0x24: JUMPI 0x94 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xa9]
---
0x25 DUP1
0x26 PUSH4 0x4a3f17e7
0x2b EQ
0x2c PUSH2 0xa9
0x2f JUMPI
---
0x26: V16 = 0x4a3f17e7
0x2b: V17 = EQ 0x4a3f17e7 V12
0x2c: V18 = 0xa9
0x2f: JUMPI 0xa9 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xda]
---
0x30 DUP1
0x31 PUSH4 0xe58fc54c
0x36 EQ
0x37 PUSH2 0xda
0x3a JUMPI
---
0x31: V19 = 0xe58fc54c
0x36: V20 = EQ 0xe58fc54c V12
0x37: V21 = 0xda
0x3a: JUMPI 0xda V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x3e]
---
Predecessors: [0x0, 0x30]
Successors: [0x3f]
---
0x3b JUMPDEST
0x3c PUSH2 0x92
---
0x3b: JUMPDEST 
0x3c: V22 = 0x92
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x92]
Exit stack: [V12, 0x92]

================================

Block 0x3f
[0x3f:0x8f]
---
Predecessors: [0x3b]
Successors: [0x90]
---
0x3f JUMPDEST
0x40 PUSH1 0x1
0x42 PUSH1 0xa0
0x44 PUSH1 0x2
0x46 EXP
0x47 SUB
0x48 CALLER
0x49 AND
0x4a PUSH1 0x0
0x4c DUP2
0x4d DUP2
0x4e MSTORE
0x4f PUSH1 0x20
0x51 DUP2
0x52 SWAP1
0x53 MSTORE
0x54 PUSH1 0x40
0x56 SWAP1
0x57 DUP2
0x58 SWAP1
0x59 SHA3
0x5a DUP1
0x5b SLOAD
0x5c CALLVALUE
0x5d SWAP1
0x5e DUP2
0x5f ADD
0x60 SWAP1
0x61 SWAP2
0x62 SSTORE
0x63 SWAP2
0x64 SWAP1
0x65 PUSH32 0x115522125a340a348d82c36b243d9dcbb357931a24824ddbe1d13179155e3091
0x86 SWAP1
0x87 MLOAD
0x88 PUSH1 0x40
0x8a MLOAD
0x8b DUP1
0x8c SWAP2
0x8d SUB
0x8e SWAP1
0x8f LOG3
---
0x3f: JUMPDEST 
0x40: V23 = 0x1
0x42: V24 = 0xa0
0x44: V25 = 0x2
0x46: V26 = EXP 0x2 0xa0
0x47: V27 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48: V28 = CALLER
0x49: V29 = AND V28 0xffffffffffffffffffffffffffffffffffffffff
0x4a: V30 = 0x0
0x4e: M[0x0] = V29
0x4f: V31 = 0x20
0x53: M[0x20] = 0x0
0x54: V32 = 0x40
0x59: V33 = SHA3 0x0 0x40
0x5b: V34 = S[V33]
0x5c: V35 = CALLVALUE
0x5f: V36 = ADD V35 V34
0x62: S[V33] = V36
0x65: V37 = 0x115522125a340a348d82c36b243d9dcbb357931a24824ddbe1d13179155e3091
0x87: V38 = M[0x40]
0x88: V39 = 0x40
0x8a: V40 = M[0x40]
0x8d: V41 = SUB V38 V40
0x8f: LOG V40 V41 0x115522125a340a348d82c36b243d9dcbb357931a24824ddbe1d13179155e3091 V29 V35
---
Entry stack: [V12, 0x92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x92]

================================

Block 0x90
[0x90:0x91]
---
Predecessors: [0x3f]
Successors: [0x92]
---
0x90 JUMPDEST
0x91 JUMP
---
0x90: JUMPDEST 
0x91: JUMP 0x92
---
Entry stack: [V12, 0x92]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x92
[0x92:0x93]
---
Predecessors: [0x90, 0x1c4]
Successors: []
---
0x92 JUMPDEST
0x93 STOP
---
0x92: JUMPDEST 
0x93: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x94
[0x94:0x9a]
---
Predecessors: [0xb]
Successors: [0x9b, 0x9f]
---
0x94 JUMPDEST
0x95 CALLVALUE
0x96 ISZERO
0x97 PUSH2 0x9f
0x9a JUMPI
---
0x94: JUMPDEST 
0x95: V42 = CALLVALUE
0x96: V43 = ISZERO V42
0x97: V44 = 0x9f
0x9a: JUMPI 0x9f V43
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9b
[0x9b:0x9e]
---
Predecessors: [0x94]
Successors: []
---
0x9b PUSH1 0x0
0x9d DUP1
0x9e REVERT
---
0x9b: V45 = 0x0
0x9e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9f
[0x9f:0xa6]
---
Predecessors: [0x94]
Successors: [0x10d]
---
0x9f JUMPDEST
0xa0 PUSH2 0x92
0xa3 PUSH2 0x10d
0xa6 JUMP
---
0x9f: JUMPDEST 
0xa0: V46 = 0x92
0xa3: V47 = 0x10d
0xa6: JUMP 0x10d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x92]
Exit stack: [V12, 0x92]

================================

Block 0xa7
[0xa7:0xa8]
---
Predecessors: []
Successors: []
---
0xa7 JUMPDEST
0xa8 STOP
---
0xa7: JUMPDEST 
0xa8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa9
[0xa9:0xaf]
---
Predecessors: [0x25]
Successors: [0xb0, 0xb4]
---
0xa9 JUMPDEST
0xaa CALLVALUE
0xab ISZERO
0xac PUSH2 0xb4
0xaf JUMPI
---
0xa9: JUMPDEST 
0xaa: V48 = CALLVALUE
0xab: V49 = ISZERO V48
0xac: V50 = 0xb4
0xaf: JUMPI 0xb4 V49
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb0
[0xb0:0xb3]
---
Predecessors: [0xa9]
Successors: []
---
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 REVERT
---
0xb0: V51 = 0x0
0xb3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xc7]
---
Predecessors: [0xa9]
Successors: [0x1c7]
---
0xb4 JUMPDEST
0xb5 PUSH2 0xc8
0xb8 PUSH1 0x1
0xba PUSH1 0xa0
0xbc PUSH1 0x2
0xbe EXP
0xbf SUB
0xc0 PUSH1 0x4
0xc2 CALLDATALOAD
0xc3 AND
0xc4 PUSH2 0x1c7
0xc7 JUMP
---
0xb4: JUMPDEST 
0xb5: V52 = 0xc8
0xb8: V53 = 0x1
0xba: V54 = 0xa0
0xbc: V55 = 0x2
0xbe: V56 = EXP 0x2 0xa0
0xbf: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc0: V58 = 0x4
0xc2: V59 = CALLDATALOAD 0x4
0xc3: V60 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V61 = 0x1c7
0xc7: JUMP 0x1c7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc8, V60]
Exit stack: [V12, 0xc8, V60]

================================

Block 0xc8
[0xc8:0xd9]
---
Predecessors: [0x1c7]
Successors: []
---
0xc8 JUMPDEST
0xc9 PUSH1 0x40
0xcb MLOAD
0xcc SWAP1
0xcd DUP2
0xce MSTORE
0xcf PUSH1 0x20
0xd1 ADD
0xd2 PUSH1 0x40
0xd4 MLOAD
0xd5 DUP1
0xd6 SWAP2
0xd7 SUB
0xd8 SWAP1
0xd9 RETURN
---
0xc8: JUMPDEST 
0xc9: V62 = 0x40
0xcb: V63 = M[0x40]
0xce: M[V63] = V157
0xcf: V64 = 0x20
0xd1: V65 = ADD 0x20 V63
0xd2: V66 = 0x40
0xd4: V67 = M[0x40]
0xd7: V68 = SUB V65 V67
0xd9: RETURN V67 V68
---
Entry stack: [V12, 0xc8, V157]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xc8]

================================

Block 0xda
[0xda:0xe0]
---
Predecessors: [0x30]
Successors: [0xe1, 0xe5]
---
0xda JUMPDEST
0xdb CALLVALUE
0xdc ISZERO
0xdd PUSH2 0xe5
0xe0 JUMPI
---
0xda: JUMPDEST 
0xdb: V69 = CALLVALUE
0xdc: V70 = ISZERO V69
0xdd: V71 = 0xe5
0xe0: JUMPI 0xe5 V70
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe1
[0xe1:0xe4]
---
Predecessors: [0xda]
Successors: []
---
0xe1 PUSH1 0x0
0xe3 DUP1
0xe4 REVERT
---
0xe1: V72 = 0x0
0xe4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe5
[0xe5:0xf8]
---
Predecessors: [0xda]
Successors: [0x1d9]
---
0xe5 JUMPDEST
0xe6 PUSH2 0xf9
0xe9 PUSH1 0x1
0xeb PUSH1 0xa0
0xed PUSH1 0x2
0xef EXP
0xf0 SUB
0xf1 PUSH1 0x4
0xf3 CALLDATALOAD
0xf4 AND
0xf5 PUSH2 0x1d9
0xf8 JUMP
---
0xe5: JUMPDEST 
0xe6: V73 = 0xf9
0xe9: V74 = 0x1
0xeb: V75 = 0xa0
0xed: V76 = 0x2
0xef: V77 = EXP 0x2 0xa0
0xf0: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf1: V79 = 0x4
0xf3: V80 = CALLDATALOAD 0x4
0xf4: V81 = AND V80 0xffffffffffffffffffffffffffffffffffffffff
0xf5: V82 = 0x1d9
0xf8: JUMP 0x1d9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf9, V81]
Exit stack: [V12, 0xf9, V81]

================================

Block 0xf9
[0xf9:0x10c]
---
Predecessors: [0x31a]
Successors: []
---
0xf9 JUMPDEST
0xfa PUSH1 0x40
0xfc MLOAD
0xfd SWAP1
0xfe ISZERO
0xff ISZERO
0x100 DUP2
0x101 MSTORE
0x102 PUSH1 0x20
0x104 ADD
0x105 PUSH1 0x40
0x107 MLOAD
0x108 DUP1
0x109 SWAP2
0x10a SUB
0x10b SWAP1
0x10c RETURN
---
0xf9: JUMPDEST 
0xfa: V83 = 0x40
0xfc: V84 = M[0x40]
0xfe: V85 = ISZERO V280
0xff: V86 = ISZERO V85
0x101: M[V84] = V86
0x102: V87 = 0x20
0x104: V88 = ADD 0x20 V84
0x105: V89 = 0x40
0x107: V90 = M[0x40]
0x10a: V91 = SUB V88 V90
0x10c: RETURN V90 V91
---
Entry stack: [V12, V280]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x10d
[0x10d:0x11c]
---
Predecessors: [0x9f]
Successors: [0x11d, 0x138]
---
0x10d JUMPDEST
0x10e PUSH1 0x0
0x110 PUSH4 0x5c2dcd1c
0x115 TIMESTAMP
0x116 GT
0x117 DUP1
0x118 ISZERO
0x119 PUSH2 0x138
0x11c JUMPI
---
0x10d: JUMPDEST 
0x10e: V92 = 0x0
0x110: V93 = 0x5c2dcd1c
0x115: V94 = TIMESTAMP
0x116: V95 = GT V94 0x5c2dcd1c
0x118: V96 = ISZERO V95
0x119: V97 = 0x138
0x11c: JUMPI 0x138 V96
---
Entry stack: [V12, 0x92]
Stack pops: 0
Stack additions: [0x0, V95]
Exit stack: [V12, 0x92, 0x0, V95]

================================

Block 0x11d
[0x11d:0x137]
---
Predecessors: [0x10d]
Successors: [0x138]
---
0x11d POP
0x11e PUSH1 0x1
0x120 PUSH1 0xa0
0x122 PUSH1 0x2
0x124 EXP
0x125 SUB
0x126 CALLER
0x127 AND
0x128 PUSH1 0x0
0x12a SWAP1
0x12b DUP2
0x12c MSTORE
0x12d PUSH1 0x20
0x12f DUP2
0x130 SWAP1
0x131 MSTORE
0x132 PUSH1 0x40
0x134 DUP2
0x135 SHA3
0x136 SLOAD
0x137 GT
---
0x11e: V98 = 0x1
0x120: V99 = 0xa0
0x122: V100 = 0x2
0x124: V101 = EXP 0x2 0xa0
0x125: V102 = SUB 0x10000000000000000000000000000000000000000 0x1
0x126: V103 = CALLER
0x127: V104 = AND V103 0xffffffffffffffffffffffffffffffffffffffff
0x128: V105 = 0x0
0x12c: M[0x0] = V104
0x12d: V106 = 0x20
0x131: M[0x20] = 0x0
0x132: V107 = 0x40
0x135: V108 = SHA3 0x0 0x40
0x136: V109 = S[V108]
0x137: V110 = GT V109 0x0
---
Entry stack: [V12, 0x92, 0x0, V95]
Stack pops: 1
Stack additions: [V110]
Exit stack: [V12, 0x92, 0x0, V110]

================================

Block 0x138
[0x138:0x13e]
---
Predecessors: [0x10d, 0x11d]
Successors: [0x13f, 0x143]
---
0x138 JUMPDEST
0x139 ISZERO
0x13a ISZERO
0x13b PUSH2 0x143
0x13e JUMPI
---
0x138: JUMPDEST 
0x139: V111 = ISZERO S0
0x13a: V112 = ISZERO V111
0x13b: V113 = 0x143
0x13e: JUMPI 0x143 V112
---
Entry stack: [V12, 0x92, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x92, 0x0]

================================

Block 0x13f
[0x13f:0x142]
---
Predecessors: [0x138]
Successors: []
---
0x13f PUSH1 0x0
0x141 DUP1
0x142 REVERT
---
0x13f: V114 = 0x0
0x142: REVERT 0x0 0x0
---
Entry stack: [V12, 0x92, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x92, 0x0]

================================

Block 0x143
[0x143:0x187]
---
Predecessors: [0x138]
Successors: [0x188, 0x18c]
---
0x143 JUMPDEST
0x144 POP
0x145 PUSH1 0x1
0x147 PUSH1 0xa0
0x149 PUSH1 0x2
0x14b EXP
0x14c SUB
0x14d CALLER
0x14e AND
0x14f PUSH1 0x0
0x151 DUP2
0x152 DUP2
0x153 MSTORE
0x154 PUSH1 0x20
0x156 DUP2
0x157 SWAP1
0x158 MSTORE
0x159 PUSH1 0x40
0x15b DUP1
0x15c DUP3
0x15d SHA3
0x15e DUP1
0x15f SLOAD
0x160 SWAP3
0x161 SWAP1
0x162 SSTORE
0x163 SWAP1
0x164 SWAP2
0x165 SWAP1
0x166 DUP3
0x167 ISZERO
0x168 PUSH2 0x8fc
0x16b MUL
0x16c SWAP1
0x16d DUP4
0x16e SWAP1
0x16f MLOAD
0x170 PUSH1 0x0
0x172 PUSH1 0x40
0x174 MLOAD
0x175 DUP1
0x176 DUP4
0x177 SUB
0x178 DUP2
0x179 DUP6
0x17a DUP9
0x17b DUP9
0x17c CALL
0x17d SWAP4
0x17e POP
0x17f POP
0x180 POP
0x181 POP
0x182 ISZERO
0x183 ISZERO
0x184 PUSH2 0x18c
0x187 JUMPI
---
0x143: JUMPDEST 
0x145: V115 = 0x1
0x147: V116 = 0xa0
0x149: V117 = 0x2
0x14b: V118 = EXP 0x2 0xa0
0x14c: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14d: V120 = CALLER
0x14e: V121 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x14f: V122 = 0x0
0x153: M[0x0] = V121
0x154: V123 = 0x20
0x158: M[0x20] = 0x0
0x159: V124 = 0x40
0x15d: V125 = SHA3 0x0 0x40
0x15f: V126 = S[V125]
0x162: S[V125] = 0x0
0x167: V127 = ISZERO V126
0x168: V128 = 0x8fc
0x16b: V129 = MUL 0x8fc V127
0x16f: V130 = M[0x40]
0x170: V131 = 0x0
0x172: V132 = 0x40
0x174: V133 = M[0x40]
0x177: V134 = SUB V130 V133
0x17c: V135 = CALL V129 V121 V126 V133 V134 V133 0x0
0x182: V136 = ISZERO V135
0x183: V137 = ISZERO V136
0x184: V138 = 0x18c
0x187: JUMPI 0x18c V137
---
Entry stack: [V12, 0x92, 0x0]
Stack pops: 1
Stack additions: [V126]
Exit stack: [V12, 0x92, V126]

================================

Block 0x188
[0x188:0x18b]
---
Predecessors: [0x143]
Successors: []
---
0x188 PUSH1 0x0
0x18a DUP1
0x18b REVERT
---
0x188: V139 = 0x0
0x18b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x92, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x92, V126]

================================

Block 0x18c
[0x18c:0x1c3]
---
Predecessors: [0x143]
Successors: [0x1c4]
---
0x18c JUMPDEST
0x18d DUP1
0x18e CALLER
0x18f PUSH1 0x1
0x191 PUSH1 0xa0
0x193 PUSH1 0x2
0x195 EXP
0x196 SUB
0x197 AND
0x198 PUSH32 0xdc8f43545dbeec87c6f54e44dac2d8889f2a4b3bf0f62683cd7e1c6346128e7
0x1b9 PUSH1 0x40
0x1bb MLOAD
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf DUP1
0x1c0 SWAP2
0x1c1 SUB
0x1c2 SWAP1
0x1c3 LOG3
---
0x18c: JUMPDEST 
0x18e: V140 = CALLER
0x18f: V141 = 0x1
0x191: V142 = 0xa0
0x193: V143 = 0x2
0x195: V144 = EXP 0x2 0xa0
0x196: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x197: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x198: V147 = 0xdc8f43545dbeec87c6f54e44dac2d8889f2a4b3bf0f62683cd7e1c6346128e7
0x1b9: V148 = 0x40
0x1bb: V149 = M[0x40]
0x1bc: V150 = 0x40
0x1be: V151 = M[0x40]
0x1c1: V152 = SUB V149 V151
0x1c3: LOG V151 V152 0xdc8f43545dbeec87c6f54e44dac2d8889f2a4b3bf0f62683cd7e1c6346128e7 V146 V126
---
Entry stack: [V12, 0x92, V126]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x92, V126]

================================

Block 0x1c4
[0x1c4:0x1c6]
---
Predecessors: [0x18c]
Successors: [0x92]
---
0x1c4 JUMPDEST
0x1c5 POP
0x1c6 JUMP
---
0x1c4: JUMPDEST 
0x1c6: JUMP 0x92
---
Entry stack: [V12, 0x92, V126]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c7
[0x1c7:0x1d8]
---
Predecessors: [0xb4]
Successors: [0xc8]
---
0x1c7 JUMPDEST
0x1c8 PUSH1 0x0
0x1ca PUSH1 0x20
0x1cc DUP2
0x1cd SWAP1
0x1ce MSTORE
0x1cf SWAP1
0x1d0 DUP2
0x1d1 MSTORE
0x1d2 PUSH1 0x40
0x1d4 SWAP1
0x1d5 SHA3
0x1d6 SLOAD
0x1d7 DUP2
0x1d8 JUMP
---
0x1c7: JUMPDEST 
0x1c8: V153 = 0x0
0x1ca: V154 = 0x20
0x1ce: M[0x20] = 0x0
0x1d1: M[0x0] = V60
0x1d2: V155 = 0x40
0x1d5: V156 = SHA3 0x0 0x40
0x1d6: V157 = S[V156]
0x1d8: JUMP 0xc8
---
Entry stack: [V12, 0xc8, V60]
Stack pops: 2
Stack additions: [S1, V157]
Exit stack: [V12, 0xc8, V157]

================================

Block 0x1d9
[0x1d9:0x201]
---
Predecessors: [0xe5]
Successors: [0x202, 0x206]
---
0x1d9 JUMPDEST
0x1da PUSH1 0x0
0x1dc DUP1
0x1dd DUP1
0x1de PUSH20 0x6c3e1e834f780eca69d01c5f3e9c6f5afb93eb55
0x1f3 PUSH1 0x1
0x1f5 PUSH1 0xa0
0x1f7 PUSH1 0x2
0x1f9 EXP
0x1fa SUB
0x1fb CALLER
0x1fc AND
0x1fd EQ
0x1fe PUSH2 0x206
0x201 JUMPI
---
0x1d9: JUMPDEST 
0x1da: V158 = 0x0
0x1de: V159 = 0x6c3e1e834f780eca69d01c5f3e9c6f5afb93eb55
0x1f3: V160 = 0x1
0x1f5: V161 = 0xa0
0x1f7: V162 = 0x2
0x1f9: V163 = EXP 0x2 0xa0
0x1fa: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fb: V165 = CALLER
0x1fc: V166 = AND V165 0xffffffffffffffffffffffffffffffffffffffff
0x1fd: V167 = EQ V166 0x6c3e1e834f780eca69d01c5f3e9c6f5afb93eb55
0x1fe: V168 = 0x206
0x201: JUMPI 0x206 V167
---
Entry stack: [V12, 0xf9, V81]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0xf9, V81, 0x0, 0x0, 0x0]

================================

Block 0x202
[0x202:0x205]
---
Predecessors: [0x1d9]
Successors: []
---
0x202 PUSH1 0x0
0x204 DUP1
0x205 REVERT
---
0x202: V169 = 0x0
0x205: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf9, V81, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf9, V81, 0x0, 0x0, 0x0]

================================

Block 0x206
[0x206:0x211]
---
Predecessors: [0x1d9]
Successors: [0x212, 0x216]
---
0x206 JUMPDEST
0x207 PUSH4 0x5c2dcd1c
0x20c TIMESTAMP
0x20d GT
0x20e PUSH2 0x216
0x211 JUMPI
---
0x206: JUMPDEST 
0x207: V170 = 0x5c2dcd1c
0x20c: V171 = TIMESTAMP
0x20d: V172 = GT V171 0x5c2dcd1c
0x20e: V173 = 0x216
0x211: JUMPI 0x216 V172
---
Entry stack: [V12, 0xf9, V81, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf9, V81, 0x0, 0x0, 0x0]

================================

Block 0x212
[0x212:0x215]
---
Predecessors: [0x206]
Successors: []
---
0x212 PUSH1 0x0
0x214 DUP1
0x215 REVERT
---
0x212: V174 = 0x0
0x215: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf9, V81, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf9, V81, 0x0, 0x0, 0x0]

================================

Block 0x216
[0x216:0x26b]
---
Predecessors: [0x206]
Successors: [0x26c, 0x270]
---
0x216 JUMPDEST
0x217 DUP4
0x218 SWAP2
0x219 POP
0x21a DUP2
0x21b PUSH1 0x1
0x21d PUSH1 0xa0
0x21f PUSH1 0x2
0x221 EXP
0x222 SUB
0x223 AND
0x224 PUSH4 0x70a08231
0x229 ADDRESS
0x22a PUSH1 0x0
0x22c PUSH1 0x40
0x22e MLOAD
0x22f PUSH1 0x20
0x231 ADD
0x232 MSTORE
0x233 PUSH1 0x40
0x235 MLOAD
0x236 PUSH1 0xe0
0x238 PUSH1 0x2
0x23a EXP
0x23b PUSH4 0xffffffff
0x240 DUP5
0x241 AND
0x242 MUL
0x243 DUP2
0x244 MSTORE
0x245 PUSH1 0x1
0x247 PUSH1 0xa0
0x249 PUSH1 0x2
0x24b EXP
0x24c SUB
0x24d SWAP1
0x24e SWAP2
0x24f AND
0x250 PUSH1 0x4
0x252 DUP3
0x253 ADD
0x254 MSTORE
0x255 PUSH1 0x24
0x257 ADD
0x258 PUSH1 0x20
0x25a PUSH1 0x40
0x25c MLOAD
0x25d DUP1
0x25e DUP4
0x25f SUB
0x260 DUP2
0x261 PUSH1 0x0
0x263 DUP8
0x264 DUP1
0x265 EXTCODESIZE
0x266 ISZERO
0x267 ISZERO
0x268 PUSH2 0x270
0x26b JUMPI
---
0x216: JUMPDEST 
0x21b: V175 = 0x1
0x21d: V176 = 0xa0
0x21f: V177 = 0x2
0x221: V178 = EXP 0x2 0xa0
0x222: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x223: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x224: V181 = 0x70a08231
0x229: V182 = ADDRESS
0x22a: V183 = 0x0
0x22c: V184 = 0x40
0x22e: V185 = M[0x40]
0x22f: V186 = 0x20
0x231: V187 = ADD 0x20 V185
0x232: M[V187] = 0x0
0x233: V188 = 0x40
0x235: V189 = M[0x40]
0x236: V190 = 0xe0
0x238: V191 = 0x2
0x23a: V192 = EXP 0x2 0xe0
0x23b: V193 = 0xffffffff
0x241: V194 = AND 0x70a08231 0xffffffff
0x242: V195 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x244: M[V189] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x245: V196 = 0x1
0x247: V197 = 0xa0
0x249: V198 = 0x2
0x24b: V199 = EXP 0x2 0xa0
0x24c: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24f: V201 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x250: V202 = 0x4
0x253: V203 = ADD V189 0x4
0x254: M[V203] = V201
0x255: V204 = 0x24
0x257: V205 = ADD 0x24 V189
0x258: V206 = 0x20
0x25a: V207 = 0x40
0x25c: V208 = M[0x40]
0x25f: V209 = SUB V205 V208
0x261: V210 = 0x0
0x265: V211 = EXTCODESIZE V180
0x266: V212 = ISZERO V211
0x267: V213 = ISZERO V212
0x268: V214 = 0x270
0x26b: JUMPI 0x270 V213
---
Entry stack: [V12, 0xf9, V81, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V180, 0x70a08231, V205, 0x20, V208, V209, V208, 0x0, V180]
Exit stack: [V12, 0xf9, V81, 0x0, V81, 0x0, V180, 0x70a08231, V205, 0x20, V208, V209, V208, 0x0, V180]

================================

Block 0x26c
[0x26c:0x26f]
---
Predecessors: [0x216]
Successors: []
---
0x26c PUSH1 0x0
0x26e DUP1
0x26f REVERT
---
0x26c: V215 = 0x0
0x26f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf9, V81, 0x0, V81, 0x0, V180, 0x70a08231, V205, 0x20, V208, V209, V208, 0x0, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf9, V81, 0x0, V81, 0x0, V180, 0x70a08231, V205, 0x20, V208, V209, V208, 0x0, V180]

================================

Block 0x270
[0x270:0x27c]
---
Predecessors: [0x216]
Successors: [0x27d, 0x281]
---
0x270 JUMPDEST
0x271 PUSH2 0x2c6
0x274 GAS
0x275 SUB
0x276 CALL
0x277 ISZERO
0x278 ISZERO
0x279 PUSH2 0x281
0x27c JUMPI
---
0x270: JUMPDEST 
0x271: V216 = 0x2c6
0x274: V217 = GAS
0x275: V218 = SUB V217 0x2c6
0x276: V219 = CALL V218 V180 0x0 V208 V209 V208 0x20
0x277: V220 = ISZERO V219
0x278: V221 = ISZERO V220
0x279: V222 = 0x281
0x27c: JUMPI 0x281 V221
---
Entry stack: [V12, 0xf9, V81, 0x0, V81, 0x0, V180, 0x70a08231, V205, 0x20, V208, V209, V208, 0x0, V180]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xf9, V81, 0x0, V81, 0x0, V180, 0x70a08231, V205]

================================

Block 0x27d
[0x27d:0x280]
---
Predecessors: [0x270]
Successors: []
---
0x27d PUSH1 0x0
0x27f DUP1
0x280 REVERT
---
0x27d: V223 = 0x0
0x280: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf9, V81, 0x0, V81, 0x0, V180, 0x70a08231, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf9, V81, 0x0, V81, 0x0, V180, 0x70a08231, V205]

================================

Block 0x281
[0x281:0x2f8]
---
Predecessors: [0x270]
Successors: [0x2f9, 0x2fd]
---
0x281 JUMPDEST
0x282 POP
0x283 POP
0x284 POP
0x285 PUSH1 0x40
0x287 MLOAD
0x288 DUP1
0x289 MLOAD
0x28a SWAP2
0x28b POP
0x28c POP
0x28d PUSH1 0x1
0x28f PUSH1 0xa0
0x291 PUSH1 0x2
0x293 EXP
0x294 SUB
0x295 DUP3
0x296 AND
0x297 PUSH4 0xa9059cbb
0x29c PUSH20 0x6c3e1e834f780eca69d01c5f3e9c6f5afb93eb55
0x2b1 DUP4
0x2b2 PUSH1 0x0
0x2b4 PUSH1 0x40
0x2b6 MLOAD
0x2b7 PUSH1 0x20
0x2b9 ADD
0x2ba MSTORE
0x2bb PUSH1 0x40
0x2bd MLOAD
0x2be PUSH1 0xe0
0x2c0 PUSH1 0x2
0x2c2 EXP
0x2c3 PUSH4 0xffffffff
0x2c8 DUP6
0x2c9 AND
0x2ca MUL
0x2cb DUP2
0x2cc MSTORE
0x2cd PUSH1 0x1
0x2cf PUSH1 0xa0
0x2d1 PUSH1 0x2
0x2d3 EXP
0x2d4 SUB
0x2d5 SWAP1
0x2d6 SWAP3
0x2d7 AND
0x2d8 PUSH1 0x4
0x2da DUP4
0x2db ADD
0x2dc MSTORE
0x2dd PUSH1 0x24
0x2df DUP3
0x2e0 ADD
0x2e1 MSTORE
0x2e2 PUSH1 0x44
0x2e4 ADD
0x2e5 PUSH1 0x20
0x2e7 PUSH1 0x40
0x2e9 MLOAD
0x2ea DUP1
0x2eb DUP4
0x2ec SUB
0x2ed DUP2
0x2ee PUSH1 0x0
0x2f0 DUP8
0x2f1 DUP1
0x2f2 EXTCODESIZE
0x2f3 ISZERO
0x2f4 ISZERO
0x2f5 PUSH2 0x2fd
0x2f8 JUMPI
---
0x281: JUMPDEST 
0x285: V224 = 0x40
0x287: V225 = M[0x40]
0x289: V226 = M[V225]
0x28d: V227 = 0x1
0x28f: V228 = 0xa0
0x291: V229 = 0x2
0x293: V230 = EXP 0x2 0xa0
0x294: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x296: V232 = AND V81 0xffffffffffffffffffffffffffffffffffffffff
0x297: V233 = 0xa9059cbb
0x29c: V234 = 0x6c3e1e834f780eca69d01c5f3e9c6f5afb93eb55
0x2b2: V235 = 0x0
0x2b4: V236 = 0x40
0x2b6: V237 = M[0x40]
0x2b7: V238 = 0x20
0x2b9: V239 = ADD 0x20 V237
0x2ba: M[V239] = 0x0
0x2bb: V240 = 0x40
0x2bd: V241 = M[0x40]
0x2be: V242 = 0xe0
0x2c0: V243 = 0x2
0x2c2: V244 = EXP 0x2 0xe0
0x2c3: V245 = 0xffffffff
0x2c9: V246 = AND 0xa9059cbb 0xffffffff
0x2ca: V247 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x2cc: M[V241] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2cd: V248 = 0x1
0x2cf: V249 = 0xa0
0x2d1: V250 = 0x2
0x2d3: V251 = EXP 0x2 0xa0
0x2d4: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d7: V253 = AND 0x6c3e1e834f780eca69d01c5f3e9c6f5afb93eb55 0xffffffffffffffffffffffffffffffffffffffff
0x2d8: V254 = 0x4
0x2db: V255 = ADD V241 0x4
0x2dc: M[V255] = 0x6c3e1e834f780eca69d01c5f3e9c6f5afb93eb55
0x2dd: V256 = 0x24
0x2e0: V257 = ADD V241 0x24
0x2e1: M[V257] = V226
0x2e2: V258 = 0x44
0x2e4: V259 = ADD 0x44 V241
0x2e5: V260 = 0x20
0x2e7: V261 = 0x40
0x2e9: V262 = M[0x40]
0x2ec: V263 = SUB V259 V262
0x2ee: V264 = 0x0
0x2f2: V265 = EXTCODESIZE V232
0x2f3: V266 = ISZERO V265
0x2f4: V267 = ISZERO V266
0x2f5: V268 = 0x2fd
0x2f8: JUMPI 0x2fd V267
---
Entry stack: [V12, 0xf9, V81, 0x0, V81, 0x0, V180, 0x70a08231, V205]
Stack pops: 5
Stack additions: [S4, V226, V232, 0xa9059cbb, V259, 0x20, V262, V263, V262, 0x0, V232]
Exit stack: [V12, 0xf9, V81, 0x0, V81, V226, V232, 0xa9059cbb, V259, 0x20, V262, V263, V262, 0x0, V232]

================================

Block 0x2f9
[0x2f9:0x2fc]
---
Predecessors: [0x281]
Successors: []
---
0x2f9 PUSH1 0x0
0x2fb DUP1
0x2fc REVERT
---
0x2f9: V269 = 0x0
0x2fc: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf9, V81, 0x0, V81, V226, V232, 0xa9059cbb, V259, 0x20, V262, V263, V262, 0x0, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf9, V81, 0x0, V81, V226, V232, 0xa9059cbb, V259, 0x20, V262, V263, V262, 0x0, V232]

================================

Block 0x2fd
[0x2fd:0x309]
---
Predecessors: [0x281]
Successors: [0x30a, 0x30e]
---
0x2fd JUMPDEST
0x2fe PUSH2 0x2c6
0x301 GAS
0x302 SUB
0x303 CALL
0x304 ISZERO
0x305 ISZERO
0x306 PUSH2 0x30e
0x309 JUMPI
---
0x2fd: JUMPDEST 
0x2fe: V270 = 0x2c6
0x301: V271 = GAS
0x302: V272 = SUB V271 0x2c6
0x303: V273 = CALL V272 V232 0x0 V262 V263 V262 0x20
0x304: V274 = ISZERO V273
0x305: V275 = ISZERO V274
0x306: V276 = 0x30e
0x309: JUMPI 0x30e V275
---
Entry stack: [V12, 0xf9, V81, 0x0, V81, V226, V232, 0xa9059cbb, V259, 0x20, V262, V263, V262, 0x0, V232]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xf9, V81, 0x0, V81, V226, V232, 0xa9059cbb, V259]

================================

Block 0x30a
[0x30a:0x30d]
---
Predecessors: [0x2fd]
Successors: []
---
0x30a PUSH1 0x0
0x30c DUP1
0x30d REVERT
---
0x30a: V277 = 0x0
0x30d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xf9, V81, 0x0, V81, V226, V232, 0xa9059cbb, V259]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xf9, V81, 0x0, V81, V226, V232, 0xa9059cbb, V259]

================================

Block 0x30e
[0x30e:0x319]
---
Predecessors: [0x2fd]
Successors: [0x31a]
---
0x30e JUMPDEST
0x30f POP
0x310 POP
0x311 POP
0x312 PUSH1 0x40
0x314 MLOAD
0x315 DUP1
0x316 MLOAD
0x317 SWAP4
0x318 POP
0x319 POP
---
0x30e: JUMPDEST 
0x312: V278 = 0x40
0x314: V279 = M[0x40]
0x316: V280 = M[V279]
---
Entry stack: [V12, 0xf9, V81, 0x0, V81, V226, V232, 0xa9059cbb, V259]
Stack pops: 6
Stack additions: [V280, S4, S3]
Exit stack: [V12, 0xf9, V81, V280, V81, V226]

================================

Block 0x31a
[0x31a:0x320]
---
Predecessors: [0x30e]
Successors: [0xf9]
---
0x31a JUMPDEST
0x31b POP
0x31c POP
0x31d SWAP2
0x31e SWAP1
0x31f POP
0x320 JUMP
---
0x31a: JUMPDEST 
0x320: JUMP 0xf9
---
Entry stack: [V12, 0xf9, V81, V280, V81, V226]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V12, V280]

================================

Block 0x321
[0x321:0x34c]
---
Predecessors: []
Successors: []
---
0x321 STOP
0x322 LOG1
0x323 PUSH6 0x627a7a723058
0x32a SHA3
0x32b PUSH27 0xb68dfea5bb087b2a392f8245a0fa5db2516c69f982f3af5da6c684
0x347 JUMP
0x348 SWAP6
0x349 MISSING 0x2b
0x34a MSTORE8
0x34b STOP
0x34c MISSING 0x29
---
0x321: STOP 
0x322: LOG S0 S1 S2
0x323: V281 = 0x627a7a723058
0x32a: V282 = SHA3 0x627a7a723058 S3
0x32b: V283 = 0xb68dfea5bb087b2a392f8245a0fa5db2516c69f982f3af5da6c684
0x347: THROW 
0x349: MISSING 0x2b
0x34a: M8[S0] = S1
0x34b: STOP 
0x34c: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V282, S6, S1, S2, S3, S4, S5, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x354284f2
Entry block: 0x94
Exit block: 0x92
Body: 0x92, 0x94, 0x9b, 0x9f, 0x10d, 0x11d, 0x138, 0x13f, 0x143, 0x188, 0x18c, 0x1c4

Function 1:
Public function signature: 0x4a3f17e7
Entry block: 0xa9
Exit block: 0xc8
Body: 0xa9, 0xb0, 0xb4, 0xc8, 0x1c7

Function 2:
Public function signature: 0xe58fc54c
Entry block: 0xda
Exit block: 0xf9
Body: 0xda, 0xe1, 0xe5, 0xf9, 0x1d9, 0x202, 0x206, 0x212, 0x216, 0x26c, 0x270, 0x27d, 0x281, 0x2f9, 0x2fd, 0x30a, 0x30e, 0x31a

Function 3:
Public fallback function
Entry block: 0x3b
Exit block: 0x92
Body: 0x3b, 0x3f, 0x90, 0x92

