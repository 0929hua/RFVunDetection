Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xc1]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xc1
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xc1
0xc: JUMPI 0xc1 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x188]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x38af3eed
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x188
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x38af3eed
0x22: V15 = EQ V13 0x38af3eed
0x23: V16 = 0x188
0x26: JUMPI 0x188 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x1b9]
---
0x27 DUP1
0x28 PUSH4 0x3af32abf
0x2d EQ
0x2e PUSH2 0x1b9
0x31 JUMPI
---
0x28: V17 = 0x3af32abf
0x2d: V18 = EQ 0x3af32abf V13
0x2e: V19 = 0x1b9
0x31: JUMPI 0x1b9 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x1ee]
---
0x32 DUP1
0x33 PUSH4 0x3d5dff53
0x38 EQ
0x39 PUSH2 0x1ee
0x3c JUMPI
---
0x33: V20 = 0x3d5dff53
0x38: V21 = EQ 0x3d5dff53 V13
0x39: V22 = 0x1ee
0x3c: JUMPI 0x1ee V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x221]
---
0x3d DUP1
0x3e PUSH4 0x4034175e
0x43 EQ
0x44 PUSH2 0x221
0x47 JUMPI
---
0x3e: V23 = 0x4034175e
0x43: V24 = EQ 0x4034175e V13
0x44: V25 = 0x221
0x47: JUMPI 0x221 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x242]
---
0x48 DUP1
0x49 PUSH4 0x4fe5b830
0x4e EQ
0x4f PUSH2 0x242
0x52 JUMPI
---
0x49: V26 = 0x4fe5b830
0x4e: V27 = EQ 0x4fe5b830 V13
0x4f: V28 = 0x242
0x52: JUMPI 0x242 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x257]
---
0x53 DUP1
0x54 PUSH4 0x519ee19e
0x59 EQ
0x5a PUSH2 0x257
0x5d JUMPI
---
0x54: V29 = 0x519ee19e
0x59: V30 = EQ 0x519ee19e V13
0x5a: V31 = 0x257
0x5d: JUMPI 0x257 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x26c]
---
0x5e DUP1
0x5f PUSH4 0x5a03d679
0x64 EQ
0x65 PUSH2 0x26c
0x68 JUMPI
---
0x5f: V32 = 0x5a03d679
0x64: V33 = EQ 0x5a03d679 V13
0x65: V34 = 0x26c
0x68: JUMPI 0x26c V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x281]
---
0x69 DUP1
0x6a PUSH4 0x5d3f4fe4
0x6f EQ
0x70 PUSH2 0x281
0x73 JUMPI
---
0x6a: V35 = 0x5d3f4fe4
0x6f: V36 = EQ 0x5d3f4fe4 V13
0x70: V37 = 0x281
0x73: JUMPI 0x281 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x298]
---
0x74 DUP1
0x75 PUSH4 0x8da5cb5b
0x7a EQ
0x7b PUSH2 0x298
0x7e JUMPI
---
0x75: V38 = 0x8da5cb5b
0x7a: V39 = EQ 0x8da5cb5b V13
0x7b: V40 = 0x298
0x7e: JUMPI 0x298 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x2ad]
---
0x7f DUP1
0x80 PUSH4 0x9cd337de
0x85 EQ
0x86 PUSH2 0x2ad
0x89 JUMPI
---
0x80: V41 = 0x9cd337de
0x85: V42 = EQ 0x9cd337de V13
0x86: V43 = 0x2ad
0x89: JUMPI 0x2ad V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x2c2]
---
0x8a DUP1
0x8b PUSH4 0xae466db7
0x90 EQ
0x91 PUSH2 0x2c2
0x94 JUMPI
---
0x8b: V44 = 0xae466db7
0x90: V45 = EQ 0xae466db7 V13
0x91: V46 = 0x2c2
0x94: JUMPI 0x2c2 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x2d7]
---
0x95 DUP1
0x96 PUSH4 0xb579184f
0x9b EQ
0x9c PUSH2 0x2d7
0x9f JUMPI
---
0x96: V47 = 0xb579184f
0x9b: V48 = EQ 0xb579184f V13
0x9c: V49 = 0x2d7
0x9f: JUMPI 0x2d7 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x2f8]
---
0xa0 DUP1
0xa1 PUSH4 0xc6c85ca5
0xa6 EQ
0xa7 PUSH2 0x2f8
0xaa JUMPI
---
0xa1: V50 = 0xc6c85ca5
0xa6: V51 = EQ 0xc6c85ca5 V13
0xa7: V52 = 0x2f8
0xaa: JUMPI 0x2f8 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x310]
---
0xab DUP1
0xac PUSH4 0xee55efee
0xb1 EQ
0xb2 PUSH2 0x310
0xb5 JUMPI
---
0xac: V53 = 0xee55efee
0xb1: V54 = EQ 0xee55efee V13
0xb2: V55 = 0x310
0xb5: JUMPI 0x310 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x325]
---
0xb6 DUP1
0xb7 PUSH4 0xf2fde38b
0xbc EQ
0xbd PUSH2 0x325
0xc0 JUMPI
---
0xb7: V56 = 0xf2fde38b
0xbc: V57 = EQ 0xf2fde38b V13
0xbd: V58 = 0x325
0xc0: JUMPI 0x325 V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcf]
---
Predecessors: [0x0, 0xb6]
Successors: [0xd0, 0xd4]
---
0xc1 JUMPDEST
0xc2 PUSH1 0x6
0xc4 SLOAD
0xc5 PUSH1 0x0
0xc7 SWAP1
0xc8 PUSH1 0xff
0xca AND
0xcb ISZERO
0xcc PUSH2 0xd4
0xcf JUMPI
---
0xc1: JUMPDEST 
0xc2: V59 = 0x6
0xc4: V60 = S[0x6]
0xc5: V61 = 0x0
0xc8: V62 = 0xff
0xca: V63 = AND 0xff V60
0xcb: V64 = ISZERO V63
0xcc: V65 = 0xd4
0xcf: JUMPI 0xd4 V64
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x0]

================================

Block 0xd0
[0xd0:0xd3]
---
Predecessors: [0xc1]
Successors: []
---
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
---
0xd0: V66 = 0x0
0xd3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0]

================================

Block 0xd4
[0xd4:0xed]
---
Predecessors: [0xc1]
Successors: [0xee, 0xf2]
---
0xd4 JUMPDEST
0xd5 CALLER
0xd6 PUSH1 0x0
0xd8 SWAP1
0xd9 DUP2
0xda MSTORE
0xdb PUSH1 0xe
0xdd PUSH1 0x20
0xdf MSTORE
0xe0 PUSH1 0x40
0xe2 SWAP1
0xe3 SHA3
0xe4 SLOAD
0xe5 PUSH1 0xff
0xe7 AND
0xe8 ISZERO
0xe9 ISZERO
0xea PUSH2 0xf2
0xed JUMPI
---
0xd4: JUMPDEST 
0xd5: V67 = CALLER
0xd6: V68 = 0x0
0xda: M[0x0] = V67
0xdb: V69 = 0xe
0xdd: V70 = 0x20
0xdf: M[0x20] = 0xe
0xe0: V71 = 0x40
0xe3: V72 = SHA3 0x0 0x40
0xe4: V73 = S[V72]
0xe5: V74 = 0xff
0xe7: V75 = AND 0xff V73
0xe8: V76 = ISZERO V75
0xe9: V77 = ISZERO V76
0xea: V78 = 0xf2
0xed: JUMPI 0xf2 V77
---
Entry stack: [V13, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0]

================================

Block 0xee
[0xee:0xf1]
---
Predecessors: [0xd4]
Successors: []
---
0xee PUSH1 0x0
0xf0 DUP1
0xf1 REVERT
---
0xee: V79 = 0x0
0xf1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0]

================================

Block 0xf2
[0xf2:0x110]
---
Predecessors: [0xd4]
Successors: [0x346]
---
0xf2 JUMPDEST
0xf3 PUSH1 0x3
0xf5 SLOAD
0xf6 CALLVALUE
0xf7 MUL
0xf8 SWAP1
0xf9 POP
0xfa PUSH1 0x4
0xfc SLOAD
0xfd PUSH2 0x111
0x100 DUP3
0x101 PUSH1 0x5
0x103 SLOAD
0x104 PUSH2 0x346
0x107 SWAP1
0x108 SWAP2
0x109 SWAP1
0x10a PUSH4 0xffffffff
0x10f AND
0x110 JUMP
---
0xf2: JUMPDEST 
0xf3: V80 = 0x3
0xf5: V81 = S[0x3]
0xf6: V82 = CALLVALUE
0xf7: V83 = MUL V82 V81
0xfa: V84 = 0x4
0xfc: V85 = S[0x4]
0xfd: V86 = 0x111
0x101: V87 = 0x5
0x103: V88 = S[0x5]
0x104: V89 = 0x346
0x10a: V90 = 0xffffffff
0x10f: V91 = AND 0xffffffff 0x346
0x110: JUMP 0x346
---
Entry stack: [V13, 0x0]
Stack pops: 1
Stack additions: [V83, V85, 0x111, V88, V83]
Exit stack: [V13, V83, V85, 0x111, V88, V83]

================================

Block 0x111
[0x111:0x117]
---
Predecessors: [0x355]
Successors: [0x118, 0x11c]
---
0x111 JUMPDEST
0x112 GT
0x113 ISZERO
0x114 PUSH2 0x11c
0x117 JUMPI
---
0x111: JUMPDEST 
0x112: V92 = GT S0 S1
0x113: V93 = ISZERO V92
0x114: V94 = 0x11c
0x117: JUMPI 0x11c V93
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S3, S2]

================================

Block 0x118
[0x118:0x11b]
---
Predecessors: [0x111]
Successors: []
---
0x118 PUSH1 0x0
0x11a DUP1
0x11b REVERT
---
0x118: V95 = 0x0
0x11b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S1, S0]

================================

Block 0x11c
[0x11c:0x17a]
---
Predecessors: [0x111]
Successors: [0x17b, 0x184]
---
0x11c JUMPDEST
0x11d CALLER
0x11e PUSH1 0x0
0x120 SWAP1
0x121 DUP2
0x122 MSTORE
0x123 PUSH1 0xc
0x125 PUSH1 0x20
0x127 SWAP1
0x128 DUP2
0x129 MSTORE
0x12a PUSH1 0x40
0x12c DUP1
0x12d DUP4
0x12e SHA3
0x12f DUP1
0x130 SLOAD
0x131 DUP6
0x132 ADD
0x133 SWAP1
0x134 SSTORE
0x135 PUSH1 0x5
0x137 DUP1
0x138 SLOAD
0x139 DUP6
0x13a ADD
0x13b SWAP1
0x13c SSTORE
0x13d PUSH1 0xd
0x13f SWAP1
0x140 SWAP2
0x141 MSTORE
0x142 DUP1
0x143 DUP3
0x144 SHA3
0x145 DUP1
0x146 SLOAD
0x147 CALLVALUE
0x148 ADD
0x149 SWAP1
0x14a SSTORE
0x14b PUSH1 0x2
0x14d SLOAD
0x14e SWAP1
0x14f MLOAD
0x150 PUSH1 0x1
0x152 PUSH1 0xa0
0x154 PUSH1 0x2
0x156 EXP
0x157 SUB
0x158 SWAP2
0x159 SWAP1
0x15a SWAP2
0x15b AND
0x15c SWAP2
0x15d ADDRESS
0x15e BALANCE
0x15f DUP1
0x160 ISZERO
0x161 PUSH2 0x8fc
0x164 MUL
0x165 SWAP3
0x166 SWAP1
0x167 SWAP2
0x168 DUP2
0x169 DUP2
0x16a DUP2
0x16b DUP6
0x16c DUP9
0x16d DUP9
0x16e CALL
0x16f SWAP4
0x170 POP
0x171 POP
0x172 POP
0x173 POP
0x174 ISZERO
0x175 DUP1
0x176 ISZERO
0x177 PUSH2 0x184
0x17a JUMPI
---
0x11c: JUMPDEST 
0x11d: V96 = CALLER
0x11e: V97 = 0x0
0x122: M[0x0] = V96
0x123: V98 = 0xc
0x125: V99 = 0x20
0x129: M[0x20] = 0xc
0x12a: V100 = 0x40
0x12e: V101 = SHA3 0x0 0x40
0x130: V102 = S[V101]
0x132: V103 = ADD S0 V102
0x134: S[V101] = V103
0x135: V104 = 0x5
0x138: V105 = S[0x5]
0x13a: V106 = ADD S0 V105
0x13c: S[0x5] = V106
0x13d: V107 = 0xd
0x141: M[0x20] = 0xd
0x144: V108 = SHA3 0x0 0x40
0x146: V109 = S[V108]
0x147: V110 = CALLVALUE
0x148: V111 = ADD V110 V109
0x14a: S[V108] = V111
0x14b: V112 = 0x2
0x14d: V113 = S[0x2]
0x14f: V114 = M[0x40]
0x150: V115 = 0x1
0x152: V116 = 0xa0
0x154: V117 = 0x2
0x156: V118 = EXP 0x2 0xa0
0x157: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15b: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x15d: V121 = ADDRESS
0x15e: V122 = BALANCE V121
0x160: V123 = ISZERO V122
0x161: V124 = 0x8fc
0x164: V125 = MUL 0x8fc V123
0x16e: V126 = CALL V125 V120 V122 V114 0x0 V114 0x0
0x174: V127 = ISZERO V126
0x176: V128 = ISZERO V127
0x177: V129 = 0x184
0x17a: JUMPI 0x184 V128
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, V127]
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S1, S0, V127]

================================

Block 0x17b
[0x17b:0x183]
---
Predecessors: [0x11c]
Successors: []
---
0x17b RETURNDATASIZE
0x17c PUSH1 0x0
0x17e DUP1
0x17f RETURNDATACOPY
0x180 RETURNDATASIZE
0x181 PUSH1 0x0
0x183 REVERT
---
0x17b: V130 = RETURNDATASIZE
0x17c: V131 = 0x0
0x17f: RETURNDATACOPY 0x0 0x0 V130
0x180: V132 = RETURNDATASIZE
0x181: V133 = 0x0
0x183: REVERT 0x0 V132
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S2, S1, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S2, S1, V127]

================================

Block 0x184
[0x184:0x187]
---
Predecessors: [0x11c]
Successors: []
---
0x184 JUMPDEST
0x185 POP
0x186 POP
0x187 STOP
---
0x184: JUMPDEST 
0x187: STOP 
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S2, S1, V127]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S2]

================================

Block 0x188
[0x188:0x18f]
---
Predecessors: [0xd]
Successors: [0x190, 0x194]
---
0x188 JUMPDEST
0x189 CALLVALUE
0x18a DUP1
0x18b ISZERO
0x18c PUSH2 0x194
0x18f JUMPI
---
0x188: JUMPDEST 
0x189: V134 = CALLVALUE
0x18b: V135 = ISZERO V134
0x18c: V136 = 0x194
0x18f: JUMPI 0x194 V135
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V134]
Exit stack: [V13, V134]

================================

Block 0x190
[0x190:0x193]
---
Predecessors: [0x188]
Successors: []
---
0x190 PUSH1 0x0
0x192 DUP1
0x193 REVERT
---
0x190: V137 = 0x0
0x193: REVERT 0x0 0x0
---
Entry stack: [V13, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V134]

================================

Block 0x194
[0x194:0x19c]
---
Predecessors: [0x188]
Successors: [0x35c]
---
0x194 JUMPDEST
0x195 POP
0x196 PUSH2 0x19d
0x199 PUSH2 0x35c
0x19c JUMP
---
0x194: JUMPDEST 
0x196: V138 = 0x19d
0x199: V139 = 0x35c
0x19c: JUMP 0x35c
---
Entry stack: [V13, V134]
Stack pops: 1
Stack additions: [0x19d]
Exit stack: [V13, 0x19d]

================================

Block 0x19d
[0x19d:0x1b8]
---
Predecessors: [0x35c, 0x3a4, 0x533]
Successors: []
---
0x19d JUMPDEST
0x19e PUSH1 0x40
0x1a0 DUP1
0x1a1 MLOAD
0x1a2 PUSH1 0x1
0x1a4 PUSH1 0xa0
0x1a6 PUSH1 0x2
0x1a8 EXP
0x1a9 SUB
0x1aa SWAP1
0x1ab SWAP3
0x1ac AND
0x1ad DUP3
0x1ae MSTORE
0x1af MLOAD
0x1b0 SWAP1
0x1b1 DUP2
0x1b2 SWAP1
0x1b3 SUB
0x1b4 PUSH1 0x20
0x1b6 ADD
0x1b7 SWAP1
0x1b8 RETURN
---
0x19d: JUMPDEST 
0x19e: V140 = 0x40
0x1a1: V141 = M[0x40]
0x1a2: V142 = 0x1
0x1a4: V143 = 0xa0
0x1a6: V144 = 0x2
0x1a8: V145 = EXP 0x2 0xa0
0x1a9: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ac: V147 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: M[V141] = V147
0x1af: V148 = M[0x40]
0x1b3: V149 = SUB V141 V148
0x1b4: V150 = 0x20
0x1b6: V151 = ADD 0x20 V149
0x1b8: RETURN V148 V151
---
Entry stack: [V13, 0x19d, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x19d]

================================

Block 0x1b9
[0x1b9:0x1c0]
---
Predecessors: [0x27]
Successors: [0x1c1, 0x1c5]
---
0x1b9 JUMPDEST
0x1ba CALLVALUE
0x1bb DUP1
0x1bc ISZERO
0x1bd PUSH2 0x1c5
0x1c0 JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V152 = CALLVALUE
0x1bc: V153 = ISZERO V152
0x1bd: V154 = 0x1c5
0x1c0: JUMPI 0x1c5 V153
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V152]
Exit stack: [V13, V152]

================================

Block 0x1c1
[0x1c1:0x1c4]
---
Predecessors: [0x1b9]
Successors: []
---
0x1c1 PUSH1 0x0
0x1c3 DUP1
0x1c4 REVERT
---
0x1c1: V155 = 0x0
0x1c4: REVERT 0x0 0x0
---
Entry stack: [V13, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V152]

================================

Block 0x1c5
[0x1c5:0x1d9]
---
Predecessors: [0x1b9]
Successors: [0x36b]
---
0x1c5 JUMPDEST
0x1c6 POP
0x1c7 PUSH2 0x1da
0x1ca PUSH1 0x1
0x1cc PUSH1 0xa0
0x1ce PUSH1 0x2
0x1d0 EXP
0x1d1 SUB
0x1d2 PUSH1 0x4
0x1d4 CALLDATALOAD
0x1d5 AND
0x1d6 PUSH2 0x36b
0x1d9 JUMP
---
0x1c5: JUMPDEST 
0x1c7: V156 = 0x1da
0x1ca: V157 = 0x1
0x1cc: V158 = 0xa0
0x1ce: V159 = 0x2
0x1d0: V160 = EXP 0x2 0xa0
0x1d1: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d2: V162 = 0x4
0x1d4: V163 = CALLDATALOAD 0x4
0x1d5: V164 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x1d6: V165 = 0x36b
0x1d9: JUMP 0x36b
---
Entry stack: [V13, V152]
Stack pops: 1
Stack additions: [0x1da, V164]
Exit stack: [V13, 0x1da, V164]

================================

Block 0x1da
[0x1da:0x1ed]
---
Predecessors: [0x36b]
Successors: []
---
0x1da JUMPDEST
0x1db PUSH1 0x40
0x1dd DUP1
0x1de MLOAD
0x1df SWAP2
0x1e0 ISZERO
0x1e1 ISZERO
0x1e2 DUP3
0x1e3 MSTORE
0x1e4 MLOAD
0x1e5 SWAP1
0x1e6 DUP2
0x1e7 SWAP1
0x1e8 SUB
0x1e9 PUSH1 0x20
0x1eb ADD
0x1ec SWAP1
0x1ed RETURN
---
0x1da: JUMPDEST 
0x1db: V166 = 0x40
0x1de: V167 = M[0x40]
0x1e0: V168 = ISZERO V312
0x1e1: V169 = ISZERO V168
0x1e3: M[V167] = V169
0x1e4: V170 = M[0x40]
0x1e8: V171 = SUB V167 V170
0x1e9: V172 = 0x20
0x1eb: V173 = ADD 0x20 V171
0x1ed: RETURN V170 V173
---
Entry stack: [V13, 0x1da, V312]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1da]

================================

Block 0x1ee
[0x1ee:0x1f5]
---
Predecessors: [0x32]
Successors: [0x1f6, 0x1fa]
---
0x1ee JUMPDEST
0x1ef CALLVALUE
0x1f0 DUP1
0x1f1 ISZERO
0x1f2 PUSH2 0x1fa
0x1f5 JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V174 = CALLVALUE
0x1f1: V175 = ISZERO V174
0x1f2: V176 = 0x1fa
0x1f5: JUMPI 0x1fa V175
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V174]
Exit stack: [V13, V174]

================================

Block 0x1f6
[0x1f6:0x1f9]
---
Predecessors: [0x1ee]
Successors: []
---
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 REVERT
---
0x1f6: V177 = 0x0
0x1f9: REVERT 0x0 0x0
---
Entry stack: [V13, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V174]

================================

Block 0x1fa
[0x1fa:0x20e]
---
Predecessors: [0x1ee]
Successors: [0x380]
---
0x1fa JUMPDEST
0x1fb POP
0x1fc PUSH2 0x20f
0x1ff PUSH1 0x1
0x201 PUSH1 0xa0
0x203 PUSH1 0x2
0x205 EXP
0x206 SUB
0x207 PUSH1 0x4
0x209 CALLDATALOAD
0x20a AND
0x20b PUSH2 0x380
0x20e JUMP
---
0x1fa: JUMPDEST 
0x1fc: V178 = 0x20f
0x1ff: V179 = 0x1
0x201: V180 = 0xa0
0x203: V181 = 0x2
0x205: V182 = EXP 0x2 0xa0
0x206: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x207: V184 = 0x4
0x209: V185 = CALLDATALOAD 0x4
0x20a: V186 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V187 = 0x380
0x20e: JUMP 0x380
---
Entry stack: [V13, V174]
Stack pops: 1
Stack additions: [0x20f, V186]
Exit stack: [V13, 0x20f, V186]

================================

Block 0x20f
[0x20f:0x220]
---
Predecessors: [0x380, 0x392, 0x3b3, 0x3b9, 0x542]
Successors: []
---
0x20f JUMPDEST
0x210 PUSH1 0x40
0x212 DUP1
0x213 MLOAD
0x214 SWAP2
0x215 DUP3
0x216 MSTORE
0x217 MLOAD
0x218 SWAP1
0x219 DUP2
0x21a SWAP1
0x21b SUB
0x21c PUSH1 0x20
0x21e ADD
0x21f SWAP1
0x220 RETURN
---
0x20f: JUMPDEST 
0x210: V188 = 0x40
0x213: V189 = M[0x40]
0x216: M[V189] = S0
0x217: V190 = M[0x40]
0x21b: V191 = SUB V189 V190
0x21c: V192 = 0x20
0x21e: V193 = ADD 0x20 V191
0x220: RETURN V190 V193
---
Entry stack: [V13, 0x20f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x20f]

================================

Block 0x221
[0x221:0x228]
---
Predecessors: [0x3d]
Successors: [0x229, 0x22d]
---
0x221 JUMPDEST
0x222 CALLVALUE
0x223 DUP1
0x224 ISZERO
0x225 PUSH2 0x22d
0x228 JUMPI
---
0x221: JUMPDEST 
0x222: V194 = CALLVALUE
0x224: V195 = ISZERO V194
0x225: V196 = 0x22d
0x228: JUMPI 0x22d V195
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V194]
Exit stack: [V13, V194]

================================

Block 0x229
[0x229:0x22c]
---
Predecessors: [0x221]
Successors: []
---
0x229 PUSH1 0x0
0x22b DUP1
0x22c REVERT
---
0x229: V197 = 0x0
0x22c: REVERT 0x0 0x0
---
Entry stack: [V13, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V194]

================================

Block 0x22d
[0x22d:0x241]
---
Predecessors: [0x221]
Successors: [0x392]
---
0x22d JUMPDEST
0x22e POP
0x22f PUSH2 0x20f
0x232 PUSH1 0x1
0x234 PUSH1 0xa0
0x236 PUSH1 0x2
0x238 EXP
0x239 SUB
0x23a PUSH1 0x4
0x23c CALLDATALOAD
0x23d AND
0x23e PUSH2 0x392
0x241 JUMP
---
0x22d: JUMPDEST 
0x22f: V198 = 0x20f
0x232: V199 = 0x1
0x234: V200 = 0xa0
0x236: V201 = 0x2
0x238: V202 = EXP 0x2 0xa0
0x239: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23a: V204 = 0x4
0x23c: V205 = CALLDATALOAD 0x4
0x23d: V206 = AND V205 0xffffffffffffffffffffffffffffffffffffffff
0x23e: V207 = 0x392
0x241: JUMP 0x392
---
Entry stack: [V13, V194]
Stack pops: 1
Stack additions: [0x20f, V206]
Exit stack: [V13, 0x20f, V206]

================================

Block 0x242
[0x242:0x249]
---
Predecessors: [0x48]
Successors: [0x24a, 0x24e]
---
0x242 JUMPDEST
0x243 CALLVALUE
0x244 DUP1
0x245 ISZERO
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x242: JUMPDEST 
0x243: V208 = CALLVALUE
0x245: V209 = ISZERO V208
0x246: V210 = 0x24e
0x249: JUMPI 0x24e V209
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V208]
Exit stack: [V13, V208]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x242]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V211 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V13, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V208]

================================

Block 0x24e
[0x24e:0x256]
---
Predecessors: [0x242]
Successors: [0x3a4]
---
0x24e JUMPDEST
0x24f POP
0x250 PUSH2 0x19d
0x253 PUSH2 0x3a4
0x256 JUMP
---
0x24e: JUMPDEST 
0x250: V212 = 0x19d
0x253: V213 = 0x3a4
0x256: JUMP 0x3a4
---
Entry stack: [V13, V208]
Stack pops: 1
Stack additions: [0x19d]
Exit stack: [V13, 0x19d]

================================

Block 0x257
[0x257:0x25e]
---
Predecessors: [0x53]
Successors: [0x25f, 0x263]
---
0x257 JUMPDEST
0x258 CALLVALUE
0x259 DUP1
0x25a ISZERO
0x25b PUSH2 0x263
0x25e JUMPI
---
0x257: JUMPDEST 
0x258: V214 = CALLVALUE
0x25a: V215 = ISZERO V214
0x25b: V216 = 0x263
0x25e: JUMPI 0x263 V215
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V214]
Exit stack: [V13, V214]

================================

Block 0x25f
[0x25f:0x262]
---
Predecessors: [0x257]
Successors: []
---
0x25f PUSH1 0x0
0x261 DUP1
0x262 REVERT
---
0x25f: V217 = 0x0
0x262: REVERT 0x0 0x0
---
Entry stack: [V13, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V214]

================================

Block 0x263
[0x263:0x26b]
---
Predecessors: [0x257]
Successors: [0x3b3]
---
0x263 JUMPDEST
0x264 POP
0x265 PUSH2 0x20f
0x268 PUSH2 0x3b3
0x26b JUMP
---
0x263: JUMPDEST 
0x265: V218 = 0x20f
0x268: V219 = 0x3b3
0x26b: JUMP 0x3b3
---
Entry stack: [V13, V214]
Stack pops: 1
Stack additions: [0x20f]
Exit stack: [V13, 0x20f]

================================

Block 0x26c
[0x26c:0x273]
---
Predecessors: [0x5e]
Successors: [0x274, 0x278]
---
0x26c JUMPDEST
0x26d CALLVALUE
0x26e DUP1
0x26f ISZERO
0x270 PUSH2 0x278
0x273 JUMPI
---
0x26c: JUMPDEST 
0x26d: V220 = CALLVALUE
0x26f: V221 = ISZERO V220
0x270: V222 = 0x278
0x273: JUMPI 0x278 V221
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V220]
Exit stack: [V13, V220]

================================

Block 0x274
[0x274:0x277]
---
Predecessors: [0x26c]
Successors: []
---
0x274 PUSH1 0x0
0x276 DUP1
0x277 REVERT
---
0x274: V223 = 0x0
0x277: REVERT 0x0 0x0
---
Entry stack: [V13, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V220]

================================

Block 0x278
[0x278:0x280]
---
Predecessors: [0x26c]
Successors: [0x3b9]
---
0x278 JUMPDEST
0x279 POP
0x27a PUSH2 0x20f
0x27d PUSH2 0x3b9
0x280 JUMP
---
0x278: JUMPDEST 
0x27a: V224 = 0x20f
0x27d: V225 = 0x3b9
0x280: JUMP 0x3b9
---
Entry stack: [V13, V220]
Stack pops: 1
Stack additions: [0x20f]
Exit stack: [V13, 0x20f]

================================

Block 0x281
[0x281:0x288]
---
Predecessors: [0x69]
Successors: [0x289, 0x28d]
---
0x281 JUMPDEST
0x282 CALLVALUE
0x283 DUP1
0x284 ISZERO
0x285 PUSH2 0x28d
0x288 JUMPI
---
0x281: JUMPDEST 
0x282: V226 = CALLVALUE
0x284: V227 = ISZERO V226
0x285: V228 = 0x28d
0x288: JUMPI 0x28d V227
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V226]
Exit stack: [V13, V226]

================================

Block 0x289
[0x289:0x28c]
---
Predecessors: [0x281]
Successors: []
---
0x289 PUSH1 0x0
0x28b DUP1
0x28c REVERT
---
0x289: V229 = 0x0
0x28c: REVERT 0x0 0x0
---
Entry stack: [V13, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V226]

================================

Block 0x28d
[0x28d:0x295]
---
Predecessors: [0x281]
Successors: [0x3bf]
---
0x28d JUMPDEST
0x28e POP
0x28f PUSH2 0x296
0x292 PUSH2 0x3bf
0x295 JUMP
---
0x28d: JUMPDEST 
0x28f: V230 = 0x296
0x292: V231 = 0x3bf
0x295: JUMP 0x3bf
---
Entry stack: [V13, V226]
Stack pops: 1
Stack additions: [0x296]
Exit stack: [V13, 0x296]

================================

Block 0x296
[0x296:0x297]
---
Predecessors: [0x52c, 0x6bb, 0x710, 0x780, 0x92e, 0x993]
Successors: []
---
0x296 JUMPDEST
0x297 STOP
---
0x296: JUMPDEST 
0x297: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x298
[0x298:0x29f]
---
Predecessors: [0x74]
Successors: [0x2a0, 0x2a4]
---
0x298 JUMPDEST
0x299 CALLVALUE
0x29a DUP1
0x29b ISZERO
0x29c PUSH2 0x2a4
0x29f JUMPI
---
0x298: JUMPDEST 
0x299: V232 = CALLVALUE
0x29b: V233 = ISZERO V232
0x29c: V234 = 0x2a4
0x29f: JUMPI 0x2a4 V233
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V232]
Exit stack: [V13, V232]

================================

Block 0x2a0
[0x2a0:0x2a3]
---
Predecessors: [0x298]
Successors: []
---
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 REVERT
---
0x2a0: V235 = 0x0
0x2a3: REVERT 0x0 0x0
---
Entry stack: [V13, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V232]

================================

Block 0x2a4
[0x2a4:0x2ac]
---
Predecessors: [0x298]
Successors: [0x533]
---
0x2a4 JUMPDEST
0x2a5 POP
0x2a6 PUSH2 0x19d
0x2a9 PUSH2 0x533
0x2ac JUMP
---
0x2a4: JUMPDEST 
0x2a6: V236 = 0x19d
0x2a9: V237 = 0x533
0x2ac: JUMP 0x533
---
Entry stack: [V13, V232]
Stack pops: 1
Stack additions: [0x19d]
Exit stack: [V13, 0x19d]

================================

Block 0x2ad
[0x2ad:0x2b4]
---
Predecessors: [0x7f]
Successors: [0x2b5, 0x2b9]
---
0x2ad JUMPDEST
0x2ae CALLVALUE
0x2af DUP1
0x2b0 ISZERO
0x2b1 PUSH2 0x2b9
0x2b4 JUMPI
---
0x2ad: JUMPDEST 
0x2ae: V238 = CALLVALUE
0x2b0: V239 = ISZERO V238
0x2b1: V240 = 0x2b9
0x2b4: JUMPI 0x2b9 V239
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V238]
Exit stack: [V13, V238]

================================

Block 0x2b5
[0x2b5:0x2b8]
---
Predecessors: [0x2ad]
Successors: []
---
0x2b5 PUSH1 0x0
0x2b7 DUP1
0x2b8 REVERT
---
0x2b5: V241 = 0x0
0x2b8: REVERT 0x0 0x0
---
Entry stack: [V13, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V238]

================================

Block 0x2b9
[0x2b9:0x2c1]
---
Predecessors: [0x2ad]
Successors: [0x542]
---
0x2b9 JUMPDEST
0x2ba POP
0x2bb PUSH2 0x20f
0x2be PUSH2 0x542
0x2c1 JUMP
---
0x2b9: JUMPDEST 
0x2bb: V242 = 0x20f
0x2be: V243 = 0x542
0x2c1: JUMP 0x542
---
Entry stack: [V13, V238]
Stack pops: 1
Stack additions: [0x20f]
Exit stack: [V13, 0x20f]

================================

Block 0x2c2
[0x2c2:0x2c9]
---
Predecessors: [0x8a]
Successors: [0x2ca, 0x2ce]
---
0x2c2 JUMPDEST
0x2c3 CALLVALUE
0x2c4 DUP1
0x2c5 ISZERO
0x2c6 PUSH2 0x2ce
0x2c9 JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V244 = CALLVALUE
0x2c5: V245 = ISZERO V244
0x2c6: V246 = 0x2ce
0x2c9: JUMPI 0x2ce V245
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V244]
Exit stack: [V13, V244]

================================

Block 0x2ca
[0x2ca:0x2cd]
---
Predecessors: [0x2c2]
Successors: []
---
0x2ca PUSH1 0x0
0x2cc DUP1
0x2cd REVERT
---
0x2ca: V247 = 0x0
0x2cd: REVERT 0x0 0x0
---
Entry stack: [V13, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V244]

================================

Block 0x2ce
[0x2ce:0x2d6]
---
Predecessors: [0x2c2]
Successors: [0x548]
---
0x2ce JUMPDEST
0x2cf POP
0x2d0 PUSH2 0x296
0x2d3 PUSH2 0x548
0x2d6 JUMP
---
0x2ce: JUMPDEST 
0x2d0: V248 = 0x296
0x2d3: V249 = 0x548
0x2d6: JUMP 0x548
---
Entry stack: [V13, V244]
Stack pops: 1
Stack additions: [0x296]
Exit stack: [V13, 0x296]

================================

Block 0x2d7
[0x2d7:0x2de]
---
Predecessors: [0x95]
Successors: [0x2df, 0x2e3]
---
0x2d7 JUMPDEST
0x2d8 CALLVALUE
0x2d9 DUP1
0x2da ISZERO
0x2db PUSH2 0x2e3
0x2de JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V250 = CALLVALUE
0x2da: V251 = ISZERO V250
0x2db: V252 = 0x2e3
0x2de: JUMPI 0x2e3 V251
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V250]
Exit stack: [V13, V250]

================================

Block 0x2df
[0x2df:0x2e2]
---
Predecessors: [0x2d7]
Successors: []
---
0x2df PUSH1 0x0
0x2e1 DUP1
0x2e2 REVERT
---
0x2df: V253 = 0x0
0x2e2: REVERT 0x0 0x0
---
Entry stack: [V13, V250]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V250]

================================

Block 0x2e3
[0x2e3:0x2f7]
---
Predecessors: [0x2d7]
Successors: [0x6be]
---
0x2e3 JUMPDEST
0x2e4 POP
0x2e5 PUSH2 0x296
0x2e8 PUSH1 0x1
0x2ea PUSH1 0xa0
0x2ec PUSH1 0x2
0x2ee EXP
0x2ef SUB
0x2f0 PUSH1 0x4
0x2f2 CALLDATALOAD
0x2f3 AND
0x2f4 PUSH2 0x6be
0x2f7 JUMP
---
0x2e3: JUMPDEST 
0x2e5: V254 = 0x296
0x2e8: V255 = 0x1
0x2ea: V256 = 0xa0
0x2ec: V257 = 0x2
0x2ee: V258 = EXP 0x2 0xa0
0x2ef: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f0: V260 = 0x4
0x2f2: V261 = CALLDATALOAD 0x4
0x2f3: V262 = AND V261 0xffffffffffffffffffffffffffffffffffffffff
0x2f4: V263 = 0x6be
0x2f7: JUMP 0x6be
---
Entry stack: [V13, V250]
Stack pops: 1
Stack additions: [0x296, V262]
Exit stack: [V13, 0x296, V262]

================================

Block 0x2f8
[0x2f8:0x2ff]
---
Predecessors: [0xa0]
Successors: [0x300, 0x304]
---
0x2f8 JUMPDEST
0x2f9 CALLVALUE
0x2fa DUP1
0x2fb ISZERO
0x2fc PUSH2 0x304
0x2ff JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V264 = CALLVALUE
0x2fb: V265 = ISZERO V264
0x2fc: V266 = 0x304
0x2ff: JUMPI 0x304 V265
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V264]
Exit stack: [V13, V264]

================================

Block 0x300
[0x300:0x303]
---
Predecessors: [0x2f8]
Successors: []
---
0x300 PUSH1 0x0
0x302 DUP1
0x303 REVERT
---
0x300: V267 = 0x0
0x303: REVERT 0x0 0x0
---
Entry stack: [V13, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V264]

================================

Block 0x304
[0x304:0x30f]
---
Predecessors: [0x2f8]
Successors: [0x75c]
---
0x304 JUMPDEST
0x305 POP
0x306 PUSH2 0x296
0x309 PUSH1 0x4
0x30b CALLDATALOAD
0x30c PUSH2 0x75c
0x30f JUMP
---
0x304: JUMPDEST 
0x306: V268 = 0x296
0x309: V269 = 0x4
0x30b: V270 = CALLDATALOAD 0x4
0x30c: V271 = 0x75c
0x30f: JUMP 0x75c
---
Entry stack: [V13, V264]
Stack pops: 1
Stack additions: [0x296, V270]
Exit stack: [V13, 0x296, V270]

================================

Block 0x310
[0x310:0x317]
---
Predecessors: [0xab]
Successors: [0x318, 0x31c]
---
0x310 JUMPDEST
0x311 CALLVALUE
0x312 DUP1
0x313 ISZERO
0x314 PUSH2 0x31c
0x317 JUMPI
---
0x310: JUMPDEST 
0x311: V272 = CALLVALUE
0x313: V273 = ISZERO V272
0x314: V274 = 0x31c
0x317: JUMPI 0x31c V273
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V272]
Exit stack: [V13, V272]

================================

Block 0x318
[0x318:0x31b]
---
Predecessors: [0x310]
Successors: []
---
0x318 PUSH1 0x0
0x31a DUP1
0x31b REVERT
---
0x318: V275 = 0x0
0x31b: REVERT 0x0 0x0
---
Entry stack: [V13, V272]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V272]

================================

Block 0x31c
[0x31c:0x324]
---
Predecessors: [0x310]
Successors: [0x7bb]
---
0x31c JUMPDEST
0x31d POP
0x31e PUSH2 0x296
0x321 PUSH2 0x7bb
0x324 JUMP
---
0x31c: JUMPDEST 
0x31e: V276 = 0x296
0x321: V277 = 0x7bb
0x324: JUMP 0x7bb
---
Entry stack: [V13, V272]
Stack pops: 1
Stack additions: [0x296]
Exit stack: [V13, 0x296]

================================

Block 0x325
[0x325:0x32c]
---
Predecessors: [0xb6]
Successors: [0x32d, 0x331]
---
0x325 JUMPDEST
0x326 CALLVALUE
0x327 DUP1
0x328 ISZERO
0x329 PUSH2 0x331
0x32c JUMPI
---
0x325: JUMPDEST 
0x326: V278 = CALLVALUE
0x328: V279 = ISZERO V278
0x329: V280 = 0x331
0x32c: JUMPI 0x331 V279
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V278]
Exit stack: [V13, V278]

================================

Block 0x32d
[0x32d:0x330]
---
Predecessors: [0x325]
Successors: []
---
0x32d PUSH1 0x0
0x32f DUP1
0x330 REVERT
---
0x32d: V281 = 0x0
0x330: REVERT 0x0 0x0
---
Entry stack: [V13, V278]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V278]

================================

Block 0x331
[0x331:0x345]
---
Predecessors: [0x325]
Successors: [0x967]
---
0x331 JUMPDEST
0x332 POP
0x333 PUSH2 0x296
0x336 PUSH1 0x1
0x338 PUSH1 0xa0
0x33a PUSH1 0x2
0x33c EXP
0x33d SUB
0x33e PUSH1 0x4
0x340 CALLDATALOAD
0x341 AND
0x342 PUSH2 0x967
0x345 JUMP
---
0x331: JUMPDEST 
0x333: V282 = 0x296
0x336: V283 = 0x1
0x338: V284 = 0xa0
0x33a: V285 = 0x2
0x33c: V286 = EXP 0x2 0xa0
0x33d: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33e: V288 = 0x4
0x340: V289 = CALLDATALOAD 0x4
0x341: V290 = AND V289 0xffffffffffffffffffffffffffffffffffffffff
0x342: V291 = 0x967
0x345: JUMP 0x967
---
Entry stack: [V13, V278]
Stack pops: 1
Stack additions: [0x296, V290]
Exit stack: [V13, 0x296, V290]

================================

Block 0x346
[0x346:0x353]
---
Predecessors: [0xf2]
Successors: [0x354, 0x355]
---
0x346 JUMPDEST
0x347 PUSH1 0x0
0x349 DUP3
0x34a DUP3
0x34b ADD
0x34c DUP4
0x34d DUP2
0x34e LT
0x34f ISZERO
0x350 PUSH2 0x355
0x353 JUMPI
---
0x346: JUMPDEST 
0x347: V292 = 0x0
0x34b: V293 = ADD V83 V88
0x34e: V294 = LT V293 V88
0x34f: V295 = ISZERO V294
0x350: V296 = 0x355
0x353: JUMPI 0x355 V295
---
Entry stack: [V13, V83, V85, 0x111, V88, V83]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V293]
Exit stack: [V13, V83, V85, 0x111, V88, V83, 0x0, V293]

================================

Block 0x354
[0x354:0x354]
---
Predecessors: [0x346]
Successors: []
---
0x354 INVALID
---
0x354: INVALID 
---
Entry stack: [V13, V83, V85, 0x111, V88, V83, 0x0, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V83, V85, 0x111, V88, V83, 0x0, V293]

================================

Block 0x355
[0x355:0x35b]
---
Predecessors: [0x346, 0xa17]
Successors: [0x111, 0x46b]
---
0x355 JUMPDEST
0x356 SWAP4
0x357 SWAP3
0x358 POP
0x359 POP
0x35a POP
0x35b JUMP
---
0x355: JUMPDEST 
0x35b: JUMP {0x111, 0x46b}
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S7, S6, S5, {0x111, 0x46b}, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S7, S6, S5, S0]

================================

Block 0x35c
[0x35c:0x36a]
---
Predecessors: [0x194]
Successors: [0x19d]
---
0x35c JUMPDEST
0x35d PUSH1 0x2
0x35f SLOAD
0x360 PUSH1 0x1
0x362 PUSH1 0xa0
0x364 PUSH1 0x2
0x366 EXP
0x367 SUB
0x368 AND
0x369 DUP2
0x36a JUMP
---
0x35c: JUMPDEST 
0x35d: V297 = 0x2
0x35f: V298 = S[0x2]
0x360: V299 = 0x1
0x362: V300 = 0xa0
0x364: V301 = 0x2
0x366: V302 = EXP 0x2 0xa0
0x367: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x368: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x36a: JUMP 0x19d
---
Entry stack: [V13, 0x19d]
Stack pops: 1
Stack additions: [S0, V304]
Exit stack: [V13, 0x19d, V304]

================================

Block 0x36b
[0x36b:0x37f]
---
Predecessors: [0x1c5]
Successors: [0x1da]
---
0x36b JUMPDEST
0x36c PUSH1 0xe
0x36e PUSH1 0x20
0x370 MSTORE
0x371 PUSH1 0x0
0x373 SWAP1
0x374 DUP2
0x375 MSTORE
0x376 PUSH1 0x40
0x378 SWAP1
0x379 SHA3
0x37a SLOAD
0x37b PUSH1 0xff
0x37d AND
0x37e DUP2
0x37f JUMP
---
0x36b: JUMPDEST 
0x36c: V305 = 0xe
0x36e: V306 = 0x20
0x370: M[0x20] = 0xe
0x371: V307 = 0x0
0x375: M[0x0] = V164
0x376: V308 = 0x40
0x379: V309 = SHA3 0x0 0x40
0x37a: V310 = S[V309]
0x37b: V311 = 0xff
0x37d: V312 = AND 0xff V310
0x37f: JUMP 0x1da
---
Entry stack: [V13, 0x1da, V164]
Stack pops: 2
Stack additions: [S1, V312]
Exit stack: [V13, 0x1da, V312]

================================

Block 0x380
[0x380:0x391]
---
Predecessors: [0x1fa]
Successors: [0x20f]
---
0x380 JUMPDEST
0x381 PUSH1 0xc
0x383 PUSH1 0x20
0x385 MSTORE
0x386 PUSH1 0x0
0x388 SWAP1
0x389 DUP2
0x38a MSTORE
0x38b PUSH1 0x40
0x38d SWAP1
0x38e SHA3
0x38f SLOAD
0x390 DUP2
0x391 JUMP
---
0x380: JUMPDEST 
0x381: V313 = 0xc
0x383: V314 = 0x20
0x385: M[0x20] = 0xc
0x386: V315 = 0x0
0x38a: M[0x0] = V186
0x38b: V316 = 0x40
0x38e: V317 = SHA3 0x0 0x40
0x38f: V318 = S[V317]
0x391: JUMP 0x20f
---
Entry stack: [V13, 0x20f, V186]
Stack pops: 2
Stack additions: [S1, V318]
Exit stack: [V13, 0x20f, V318]

================================

Block 0x392
[0x392:0x3a3]
---
Predecessors: [0x22d]
Successors: [0x20f]
---
0x392 JUMPDEST
0x393 PUSH1 0xd
0x395 PUSH1 0x20
0x397 MSTORE
0x398 PUSH1 0x0
0x39a SWAP1
0x39b DUP2
0x39c MSTORE
0x39d PUSH1 0x40
0x39f SWAP1
0x3a0 SHA3
0x3a1 SLOAD
0x3a2 DUP2
0x3a3 JUMP
---
0x392: JUMPDEST 
0x393: V319 = 0xd
0x395: V320 = 0x20
0x397: M[0x20] = 0xd
0x398: V321 = 0x0
0x39c: M[0x0] = V206
0x39d: V322 = 0x40
0x3a0: V323 = SHA3 0x0 0x40
0x3a1: V324 = S[V323]
0x3a3: JUMP 0x20f
---
Entry stack: [V13, 0x20f, V206]
Stack pops: 2
Stack additions: [S1, V324]
Exit stack: [V13, 0x20f, V324]

================================

Block 0x3a4
[0x3a4:0x3b2]
---
Predecessors: [0x24e]
Successors: [0x19d]
---
0x3a4 JUMPDEST
0x3a5 PUSH1 0x1
0x3a7 SLOAD
0x3a8 PUSH1 0x1
0x3aa PUSH1 0xa0
0x3ac PUSH1 0x2
0x3ae EXP
0x3af SUB
0x3b0 AND
0x3b1 DUP2
0x3b2 JUMP
---
0x3a4: JUMPDEST 
0x3a5: V325 = 0x1
0x3a7: V326 = S[0x1]
0x3a8: V327 = 0x1
0x3aa: V328 = 0xa0
0x3ac: V329 = 0x2
0x3ae: V330 = EXP 0x2 0xa0
0x3af: V331 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b0: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x3b2: JUMP 0x19d
---
Entry stack: [V13, 0x19d]
Stack pops: 1
Stack additions: [S0, V332]
Exit stack: [V13, 0x19d, V332]

================================

Block 0x3b3
[0x3b3:0x3b8]
---
Predecessors: [0x263]
Successors: [0x20f]
---
0x3b3 JUMPDEST
0x3b4 PUSH1 0x5
0x3b6 SLOAD
0x3b7 DUP2
0x3b8 JUMP
---
0x3b3: JUMPDEST 
0x3b4: V333 = 0x5
0x3b6: V334 = S[0x5]
0x3b8: JUMP 0x20f
---
Entry stack: [V13, 0x20f]
Stack pops: 1
Stack additions: [S0, V334]
Exit stack: [V13, 0x20f, V334]

================================

Block 0x3b9
[0x3b9:0x3be]
---
Predecessors: [0x278]
Successors: [0x20f]
---
0x3b9 JUMPDEST
0x3ba PUSH1 0x4
0x3bc SLOAD
0x3bd DUP2
0x3be JUMP
---
0x3b9: JUMPDEST 
0x3ba: V335 = 0x4
0x3bc: V336 = S[0x4]
0x3be: JUMP 0x20f
---
Entry stack: [V13, 0x20f]
Stack pops: 1
Stack additions: [S0, V336]
Exit stack: [V13, 0x20f, V336]

================================

Block 0x3bf
[0x3bf:0x3d2]
---
Predecessors: [0x28d]
Successors: [0x3d3, 0x3d7]
---
0x3bf JUMPDEST
0x3c0 PUSH1 0x6
0x3c2 SLOAD
0x3c3 PUSH1 0x0
0x3c5 SWAP1
0x3c6 DUP2
0x3c7 SWAP1
0x3c8 DUP2
0x3c9 SWAP1
0x3ca PUSH1 0xff
0x3cc AND
0x3cd ISZERO
0x3ce ISZERO
0x3cf PUSH2 0x3d7
0x3d2 JUMPI
---
0x3bf: JUMPDEST 
0x3c0: V337 = 0x6
0x3c2: V338 = S[0x6]
0x3c3: V339 = 0x0
0x3ca: V340 = 0xff
0x3cc: V341 = AND 0xff V338
0x3cd: V342 = ISZERO V341
0x3ce: V343 = ISZERO V342
0x3cf: V344 = 0x3d7
0x3d2: JUMPI 0x3d7 V343
---
Entry stack: [V13, 0x296]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x296, 0x0, 0x0, 0x0]

================================

Block 0x3d3
[0x3d3:0x3d6]
---
Predecessors: [0x3bf]
Successors: []
---
0x3d3 PUSH1 0x0
0x3d5 DUP1
0x3d6 REVERT
---
0x3d3: V345 = 0x0
0x3d6: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, 0x0, 0x0, 0x0]

================================

Block 0x3d7
[0x3d7:0x3ec]
---
Predecessors: [0x3bf]
Successors: [0x3ed, 0x3f1]
---
0x3d7 JUMPDEST
0x3d8 CALLER
0x3d9 PUSH1 0x0
0x3db SWAP1
0x3dc DUP2
0x3dd MSTORE
0x3de PUSH1 0xc
0x3e0 PUSH1 0x20
0x3e2 MSTORE
0x3e3 PUSH1 0x40
0x3e5 DUP2
0x3e6 SHA3
0x3e7 SLOAD
0x3e8 GT
0x3e9 PUSH2 0x3f1
0x3ec JUMPI
---
0x3d7: JUMPDEST 
0x3d8: V346 = CALLER
0x3d9: V347 = 0x0
0x3dd: M[0x0] = V346
0x3de: V348 = 0xc
0x3e0: V349 = 0x20
0x3e2: M[0x20] = 0xc
0x3e3: V350 = 0x40
0x3e6: V351 = SHA3 0x0 0x40
0x3e7: V352 = S[V351]
0x3e8: V353 = GT V352 0x0
0x3e9: V354 = 0x3f1
0x3ec: JUMPI 0x3f1 V353
---
Entry stack: [V13, 0x296, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, 0x0, 0x0, 0x0]

================================

Block 0x3ed
[0x3ed:0x3f0]
---
Predecessors: [0x3d7]
Successors: []
---
0x3ed PUSH1 0x0
0x3ef DUP1
0x3f0 REVERT
---
0x3ed: V355 = 0x0
0x3f0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, 0x0, 0x0, 0x0]

================================

Block 0x3f1
[0x3f1:0x3fa]
---
Predecessors: [0x3d7]
Successors: [0x3fb, 0x3ff]
---
0x3f1 JUMPDEST
0x3f2 PUSH1 0x8
0x3f4 SLOAD
0x3f5 TIMESTAMP
0x3f6 GT
0x3f7 PUSH2 0x3ff
0x3fa JUMPI
---
0x3f1: JUMPDEST 
0x3f2: V356 = 0x8
0x3f4: V357 = S[0x8]
0x3f5: V358 = TIMESTAMP
0x3f6: V359 = GT V358 V357
0x3f7: V360 = 0x3ff
0x3fa: JUMPI 0x3ff V359
---
Entry stack: [V13, 0x296, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, 0x0, 0x0, 0x0]

================================

Block 0x3fb
[0x3fb:0x3fe]
---
Predecessors: [0x3f1]
Successors: []
---
0x3fb PUSH1 0x0
0x3fd DUP1
0x3fe REVERT
---
0x3fb: V361 = 0x0
0x3fe: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, 0x0, 0x0, 0x0]

================================

Block 0x3ff
[0x3ff:0x40d]
---
Predecessors: [0x3f1]
Successors: [0x40e, 0x416]
---
0x3ff JUMPDEST
0x400 PUSH1 0x0
0x402 SWAP3
0x403 POP
0x404 PUSH1 0xb
0x406 SLOAD
0x407 TIMESTAMP
0x408 GT
0x409 ISZERO
0x40a PUSH2 0x416
0x40d JUMPI
---
0x3ff: JUMPDEST 
0x400: V362 = 0x0
0x404: V363 = 0xb
0x406: V364 = S[0xb]
0x407: V365 = TIMESTAMP
0x408: V366 = GT V365 V364
0x409: V367 = ISZERO V366
0x40a: V368 = 0x416
0x40d: JUMPI 0x416 V367
---
Entry stack: [V13, 0x296, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V13, 0x296, 0x0, 0x0, 0x0]

================================

Block 0x40e
[0x40e:0x415]
---
Predecessors: [0x3ff]
Successors: [0x441]
---
0x40e PUSH1 0x0
0x410 SWAP3
0x411 POP
0x412 PUSH2 0x441
0x415 JUMP
---
0x40e: V369 = 0x0
0x412: V370 = 0x441
0x415: JUMP 0x441
---
Entry stack: [V13, 0x296, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V13, 0x296, 0x0, 0x0, 0x0]

================================

Block 0x416
[0x416:0x420]
---
Predecessors: [0x3ff]
Successors: [0x421, 0x429]
---
0x416 JUMPDEST
0x417 PUSH1 0xa
0x419 SLOAD
0x41a TIMESTAMP
0x41b GT
0x41c ISZERO
0x41d PUSH2 0x429
0x420 JUMPI
---
0x416: JUMPDEST 
0x417: V371 = 0xa
0x419: V372 = S[0xa]
0x41a: V373 = TIMESTAMP
0x41b: V374 = GT V373 V372
0x41c: V375 = ISZERO V374
0x41d: V376 = 0x429
0x420: JUMPI 0x429 V375
---
Entry stack: [V13, 0x296, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, 0x0, 0x0, 0x0]

================================

Block 0x421
[0x421:0x428]
---
Predecessors: [0x416]
Successors: [0x441]
---
0x421 PUSH1 0x14
0x423 SWAP3
0x424 POP
0x425 PUSH2 0x441
0x428 JUMP
---
0x421: V377 = 0x14
0x425: V378 = 0x441
0x428: JUMP 0x441
---
Entry stack: [V13, 0x296, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x14, S1, S0]
Exit stack: [V13, 0x296, 0x14, 0x0, 0x0]

================================

Block 0x429
[0x429:0x433]
---
Predecessors: [0x416]
Successors: [0x434, 0x43c]
---
0x429 JUMPDEST
0x42a PUSH1 0x9
0x42c SLOAD
0x42d TIMESTAMP
0x42e GT
0x42f ISZERO
0x430 PUSH2 0x43c
0x433 JUMPI
---
0x429: JUMPDEST 
0x42a: V379 = 0x9
0x42c: V380 = S[0x9]
0x42d: V381 = TIMESTAMP
0x42e: V382 = GT V381 V380
0x42f: V383 = ISZERO V382
0x430: V384 = 0x43c
0x433: JUMPI 0x43c V383
---
Entry stack: [V13, 0x296, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, 0x0, 0x0, 0x0]

================================

Block 0x434
[0x434:0x43b]
---
Predecessors: [0x429]
Successors: [0x441]
---
0x434 PUSH1 0x1e
0x436 SWAP3
0x437 POP
0x438 PUSH2 0x441
0x43b JUMP
---
0x434: V385 = 0x1e
0x438: V386 = 0x441
0x43b: JUMP 0x441
---
Entry stack: [V13, 0x296, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x1e, S1, S0]
Exit stack: [V13, 0x296, 0x1e, 0x0, 0x0]

================================

Block 0x43c
[0x43c:0x440]
---
Predecessors: [0x429]
Successors: [0x441]
---
0x43c JUMPDEST
0x43d PUSH1 0x28
0x43f SWAP3
0x440 POP
---
0x43c: JUMPDEST 
0x43d: V387 = 0x28
---
Entry stack: [V13, 0x296, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x28, S1, S0]
Exit stack: [V13, 0x296, 0x28, 0x0, 0x0]

================================

Block 0x441
[0x441:0x46a]
---
Predecessors: [0x40e, 0x421, 0x434, 0x43c]
Successors: [0x9fb]
---
0x441 JUMPDEST
0x442 CALLER
0x443 PUSH1 0x0
0x445 SWAP1
0x446 DUP2
0x447 MSTORE
0x448 PUSH1 0xc
0x44a PUSH1 0x20
0x44c MSTORE
0x44d PUSH1 0x40
0x44f SWAP1
0x450 SHA3
0x451 SLOAD
0x452 SWAP2
0x453 POP
0x454 PUSH2 0x484
0x457 PUSH2 0x477
0x45a PUSH1 0x64
0x45c PUSH2 0x46b
0x45f DUP6
0x460 DUP8
0x461 PUSH4 0xffffffff
0x466 PUSH2 0x9fb
0x469 AND
0x46a JUMP
---
0x441: JUMPDEST 
0x442: V388 = CALLER
0x443: V389 = 0x0
0x447: M[0x0] = V388
0x448: V390 = 0xc
0x44a: V391 = 0x20
0x44c: M[0x20] = 0xc
0x44d: V392 = 0x40
0x450: V393 = SHA3 0x0 0x40
0x451: V394 = S[V393]
0x454: V395 = 0x484
0x457: V396 = 0x477
0x45a: V397 = 0x64
0x45c: V398 = 0x46b
0x461: V399 = 0xffffffff
0x466: V400 = 0x9fb
0x469: V401 = AND 0x9fb 0xffffffff
0x46a: JUMP 0x9fb
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, V394, S0, 0x484, 0x477, 0x64, 0x46b, V394, S2]
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, 0x484, 0x477, 0x64, 0x46b, V394, {0x0, 0x14, 0x1e, 0x28}]

================================

Block 0x46b
[0x46b:0x476]
---
Predecessors: [0x355]
Successors: [0xa1f]
---
0x46b JUMPDEST
0x46c SWAP1
0x46d PUSH4 0xffffffff
0x472 PUSH2 0xa1f
0x475 AND
0x476 JUMP
---
0x46b: JUMPDEST 
0x46d: V402 = 0xffffffff
0x472: V403 = 0xa1f
0x475: V404 = AND 0xa1f 0xffffffff
0x476: JUMP 0xa1f
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S3, S2, S0, S1]

================================

Block 0x477
[0x477:0x483]
---
Predecessors: [0xa2d]
Successors: [0xa36]
---
0x477 JUMPDEST
0x478 DUP4
0x479 SWAP1
0x47a PUSH4 0xffffffff
0x47f PUSH2 0xa36
0x482 AND
0x483 JUMP
---
0x477: JUMPDEST 
0x47a: V405 = 0xffffffff
0x47f: V406 = 0xa36
0x482: V407 = AND 0xa36 0xffffffff
0x483: JUMP 0xa36
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S1, V893]
Stack pops: 4
Stack additions: [S3, S2, S1, S3, S0]
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S1, V394, V893]

================================

Block 0x484
[0x484:0x4fd]
---
Predecessors: [0xa42]
Successors: [0x4fe, 0x502]
---
0x484 JUMPDEST
0x485 CALLER
0x486 PUSH1 0x0
0x488 DUP2
0x489 DUP2
0x48a MSTORE
0x48b PUSH1 0xc
0x48d PUSH1 0x20
0x48f SWAP1
0x490 DUP2
0x491 MSTORE
0x492 PUSH1 0x40
0x494 DUP1
0x495 DUP4
0x496 SHA3
0x497 DUP4
0x498 SWAP1
0x499 SSTORE
0x49a PUSH1 0x1
0x49c SLOAD
0x49d DUP2
0x49e MLOAD
0x49f PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4c0 DUP2
0x4c1 MSTORE
0x4c2 PUSH1 0x4
0x4c4 DUP2
0x4c5 ADD
0x4c6 SWAP6
0x4c7 SWAP1
0x4c8 SWAP6
0x4c9 MSTORE
0x4ca PUSH1 0x24
0x4cc DUP6
0x4cd ADD
0x4ce DUP7
0x4cf SWAP1
0x4d0 MSTORE
0x4d1 SWAP1
0x4d2 MLOAD
0x4d3 SWAP5
0x4d4 SWAP6
0x4d5 POP
0x4d6 PUSH1 0x1
0x4d8 PUSH1 0xa0
0x4da PUSH1 0x2
0x4dc EXP
0x4dd SUB
0x4de AND
0x4df SWAP4
0x4e0 PUSH4 0xa9059cbb
0x4e5 SWAP4
0x4e6 PUSH1 0x44
0x4e8 DUP1
0x4e9 DUP3
0x4ea ADD
0x4eb SWAP5
0x4ec SWAP2
0x4ed DUP4
0x4ee SWAP1
0x4ef SUB
0x4f0 ADD
0x4f1 SWAP1
0x4f2 DUP3
0x4f3 SWAP1
0x4f4 DUP8
0x4f5 DUP1
0x4f6 EXTCODESIZE
0x4f7 ISZERO
0x4f8 DUP1
0x4f9 ISZERO
0x4fa PUSH2 0x502
0x4fd JUMPI
---
0x484: JUMPDEST 
0x485: V408 = CALLER
0x486: V409 = 0x0
0x48a: M[0x0] = V408
0x48b: V410 = 0xc
0x48d: V411 = 0x20
0x491: M[0x20] = 0xc
0x492: V412 = 0x40
0x496: V413 = SHA3 0x0 0x40
0x499: S[V413] = 0x0
0x49a: V414 = 0x1
0x49c: V415 = S[0x1]
0x49e: V416 = M[0x40]
0x49f: V417 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4c1: M[V416] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4c2: V418 = 0x4
0x4c5: V419 = ADD V416 0x4
0x4c9: M[V419] = V408
0x4ca: V420 = 0x24
0x4cd: V421 = ADD V416 0x24
0x4d0: M[V421] = V898
0x4d2: V422 = M[0x40]
0x4d6: V423 = 0x1
0x4d8: V424 = 0xa0
0x4da: V425 = 0x2
0x4dc: V426 = EXP 0x2 0xa0
0x4dd: V427 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4de: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x4e0: V429 = 0xa9059cbb
0x4e6: V430 = 0x44
0x4ea: V431 = ADD V416 0x44
0x4ef: V432 = SUB V416 V422
0x4f0: V433 = ADD V432 0x44
0x4f6: V434 = EXTCODESIZE V428
0x4f7: V435 = ISZERO V434
0x4f9: V436 = ISZERO V435
0x4fa: V437 = 0x502
0x4fd: JUMPI 0x502 V436
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, V898]
Stack pops: 2
Stack additions: [S0, V428, 0xa9059cbb, V431, 0x20, V422, V433, V422, 0x0, V428, V435]
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, V898, V428, 0xa9059cbb, V431, 0x20, V422, V433, V422, 0x0, V428, V435]

================================

Block 0x4fe
[0x4fe:0x501]
---
Predecessors: [0x484]
Successors: []
---
0x4fe PUSH1 0x0
0x500 DUP1
0x501 REVERT
---
0x4fe: V438 = 0x0
0x501: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, V898, V428, 0xa9059cbb, V431, 0x20, V422, V433, V422, 0x0, V428, V435]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, V898, V428, 0xa9059cbb, V431, 0x20, V422, V433, V422, 0x0, V428, V435]

================================

Block 0x502
[0x502:0x50c]
---
Predecessors: [0x484]
Successors: [0x50d, 0x516]
---
0x502 JUMPDEST
0x503 POP
0x504 GAS
0x505 CALL
0x506 ISZERO
0x507 DUP1
0x508 ISZERO
0x509 PUSH2 0x516
0x50c JUMPI
---
0x502: JUMPDEST 
0x504: V439 = GAS
0x505: V440 = CALL V439 V428 0x0 V422 V433 V422 0x20
0x506: V441 = ISZERO V440
0x508: V442 = ISZERO V441
0x509: V443 = 0x516
0x50c: JUMPI 0x516 V442
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, V898, V428, 0xa9059cbb, V431, 0x20, V422, V433, V422, 0x0, V428, V435]
Stack pops: 7
Stack additions: [V441]
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, V898, V428, 0xa9059cbb, V431, V441]

================================

Block 0x50d
[0x50d:0x515]
---
Predecessors: [0x502]
Successors: []
---
0x50d RETURNDATASIZE
0x50e PUSH1 0x0
0x510 DUP1
0x511 RETURNDATACOPY
0x512 RETURNDATASIZE
0x513 PUSH1 0x0
0x515 REVERT
---
0x50d: V444 = RETURNDATASIZE
0x50e: V445 = 0x0
0x511: RETURNDATACOPY 0x0 0x0 V444
0x512: V446 = RETURNDATASIZE
0x513: V447 = 0x0
0x515: REVERT 0x0 V446
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, V898, V428, 0xa9059cbb, V431, V441]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, V898, V428, 0xa9059cbb, V431, V441]

================================

Block 0x516
[0x516:0x527]
---
Predecessors: [0x502]
Successors: [0x528, 0x52c]
---
0x516 JUMPDEST
0x517 POP
0x518 POP
0x519 POP
0x51a POP
0x51b PUSH1 0x40
0x51d MLOAD
0x51e RETURNDATASIZE
0x51f PUSH1 0x20
0x521 DUP2
0x522 LT
0x523 ISZERO
0x524 PUSH2 0x52c
0x527 JUMPI
---
0x516: JUMPDEST 
0x51b: V448 = 0x40
0x51d: V449 = M[0x40]
0x51e: V450 = RETURNDATASIZE
0x51f: V451 = 0x20
0x522: V452 = LT V450 0x20
0x523: V453 = ISZERO V452
0x524: V454 = 0x52c
0x527: JUMPI 0x52c V453
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, V898, V428, 0xa9059cbb, V431, V441]
Stack pops: 4
Stack additions: [V449, V450]
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, V898, V449, V450]

================================

Block 0x528
[0x528:0x52b]
---
Predecessors: [0x516]
Successors: []
---
0x528 PUSH1 0x0
0x52a DUP1
0x52b REVERT
---
0x528: V455 = 0x0
0x52b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, V898, V449, V450]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, V898, V449, V450]

================================

Block 0x52c
[0x52c:0x532]
---
Predecessors: [0x516]
Successors: [0x296]
---
0x52c JUMPDEST
0x52d POP
0x52e POP
0x52f POP
0x530 POP
0x531 POP
0x532 JUMP
---
0x52c: JUMPDEST 
0x532: JUMP 0x296
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, V898, V449, V450]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x533
[0x533:0x541]
---
Predecessors: [0x2a4]
Successors: [0x19d]
---
0x533 JUMPDEST
0x534 PUSH1 0x0
0x536 SLOAD
0x537 PUSH1 0x1
0x539 PUSH1 0xa0
0x53b PUSH1 0x2
0x53d EXP
0x53e SUB
0x53f AND
0x540 DUP2
0x541 JUMP
---
0x533: JUMPDEST 
0x534: V456 = 0x0
0x536: V457 = S[0x0]
0x537: V458 = 0x1
0x539: V459 = 0xa0
0x53b: V460 = 0x2
0x53d: V461 = EXP 0x2 0xa0
0x53e: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53f: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x541: JUMP 0x19d
---
Entry stack: [V13, 0x19d]
Stack pops: 1
Stack additions: [S0, V463]
Exit stack: [V13, 0x19d, V463]

================================

Block 0x542
[0x542:0x547]
---
Predecessors: [0x2b9]
Successors: [0x20f]
---
0x542 JUMPDEST
0x543 PUSH1 0x3
0x545 SLOAD
0x546 DUP2
0x547 JUMP
---
0x542: JUMPDEST 
0x543: V464 = 0x3
0x545: V465 = S[0x3]
0x547: JUMP 0x20f
---
Entry stack: [V13, 0x20f]
Stack pops: 1
Stack additions: [S0, V465]
Exit stack: [V13, 0x20f, V465]

================================

Block 0x548
[0x548:0x55a]
---
Predecessors: [0x2ce]
Successors: [0x55b, 0x55f]
---
0x548 JUMPDEST
0x549 PUSH1 0x0
0x54b SLOAD
0x54c PUSH1 0x1
0x54e PUSH1 0xa0
0x550 PUSH1 0x2
0x552 EXP
0x553 SUB
0x554 AND
0x555 CALLER
0x556 EQ
0x557 PUSH2 0x55f
0x55a JUMPI
---
0x548: JUMPDEST 
0x549: V466 = 0x0
0x54b: V467 = S[0x0]
0x54c: V468 = 0x1
0x54e: V469 = 0xa0
0x550: V470 = 0x2
0x552: V471 = EXP 0x2 0xa0
0x553: V472 = SUB 0x10000000000000000000000000000000000000000 0x1
0x554: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x555: V474 = CALLER
0x556: V475 = EQ V474 V473
0x557: V476 = 0x55f
0x55a: JUMPI 0x55f V475
---
Entry stack: [V13, 0x296]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296]

================================

Block 0x55b
[0x55b:0x55e]
---
Predecessors: [0x548]
Successors: []
---
0x55b PUSH1 0x0
0x55d DUP1
0x55e REVERT
---
0x55b: V477 = 0x0
0x55e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296]

================================

Block 0x55f
[0x55f:0x568]
---
Predecessors: [0x548]
Successors: [0x569, 0x56d]
---
0x55f JUMPDEST
0x560 PUSH1 0xb
0x562 SLOAD
0x563 TIMESTAMP
0x564 GT
0x565 PUSH2 0x56d
0x568 JUMPI
---
0x55f: JUMPDEST 
0x560: V478 = 0xb
0x562: V479 = S[0xb]
0x563: V480 = TIMESTAMP
0x564: V481 = GT V480 V479
0x565: V482 = 0x56d
0x568: JUMPI 0x56d V481
---
Entry stack: [V13, 0x296]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296]

================================

Block 0x569
[0x569:0x56c]
---
Predecessors: [0x55f]
Successors: []
---
0x569 PUSH1 0x0
0x56b DUP1
0x56c REVERT
---
0x569: V483 = 0x0
0x56c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296]

================================

Block 0x56d
[0x56d:0x5d7]
---
Predecessors: [0x55f]
Successors: [0x5d8, 0x5dc]
---
0x56d JUMPDEST
0x56e PUSH1 0x1
0x570 SLOAD
0x571 PUSH1 0x40
0x573 DUP1
0x574 MLOAD
0x575 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x596 DUP2
0x597 MSTORE
0x598 ADDRESS
0x599 PUSH1 0x4
0x59b DUP3
0x59c ADD
0x59d MSTORE
0x59e SWAP1
0x59f MLOAD
0x5a0 PUSH1 0x1
0x5a2 PUSH1 0xa0
0x5a4 PUSH1 0x2
0x5a6 EXP
0x5a7 SUB
0x5a8 SWAP1
0x5a9 SWAP3
0x5aa AND
0x5ab SWAP2
0x5ac PUSH4 0xa9059cbb
0x5b1 SWAP2
0x5b2 CALLER
0x5b3 SWAP2
0x5b4 DUP5
0x5b5 SWAP2
0x5b6 PUSH4 0x70a08231
0x5bb SWAP2
0x5bc PUSH1 0x24
0x5be DUP1
0x5bf DUP4
0x5c0 ADD
0x5c1 SWAP3
0x5c2 PUSH1 0x20
0x5c4 SWAP3
0x5c5 SWAP2
0x5c6 SWAP1
0x5c7 DUP3
0x5c8 SWAP1
0x5c9 SUB
0x5ca ADD
0x5cb DUP2
0x5cc PUSH1 0x0
0x5ce DUP8
0x5cf DUP1
0x5d0 EXTCODESIZE
0x5d1 ISZERO
0x5d2 DUP1
0x5d3 ISZERO
0x5d4 PUSH2 0x5dc
0x5d7 JUMPI
---
0x56d: JUMPDEST 
0x56e: V484 = 0x1
0x570: V485 = S[0x1]
0x571: V486 = 0x40
0x574: V487 = M[0x40]
0x575: V488 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x597: M[V487] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x598: V489 = ADDRESS
0x599: V490 = 0x4
0x59c: V491 = ADD V487 0x4
0x59d: M[V491] = V489
0x59f: V492 = M[0x40]
0x5a0: V493 = 0x1
0x5a2: V494 = 0xa0
0x5a4: V495 = 0x2
0x5a6: V496 = EXP 0x2 0xa0
0x5a7: V497 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5aa: V498 = AND V485 0xffffffffffffffffffffffffffffffffffffffff
0x5ac: V499 = 0xa9059cbb
0x5b2: V500 = CALLER
0x5b6: V501 = 0x70a08231
0x5bc: V502 = 0x24
0x5c0: V503 = ADD V487 0x24
0x5c2: V504 = 0x20
0x5c9: V505 = SUB V487 V492
0x5ca: V506 = ADD V505 0x24
0x5cc: V507 = 0x0
0x5d0: V508 = EXTCODESIZE V498
0x5d1: V509 = ISZERO V508
0x5d3: V510 = ISZERO V509
0x5d4: V511 = 0x5dc
0x5d7: JUMPI 0x5dc V510
---
Entry stack: [V13, 0x296]
Stack pops: 0
Stack additions: [V498, 0xa9059cbb, V500, V498, 0x70a08231, V503, 0x20, V492, V506, V492, 0x0, V498, V509]
Exit stack: [V13, 0x296, V498, 0xa9059cbb, V500, V498, 0x70a08231, V503, 0x20, V492, V506, V492, 0x0, V498, V509]

================================

Block 0x5d8
[0x5d8:0x5db]
---
Predecessors: [0x56d]
Successors: []
---
0x5d8 PUSH1 0x0
0x5da DUP1
0x5db REVERT
---
0x5d8: V512 = 0x0
0x5db: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, V498, 0xa9059cbb, V500, V498, 0x70a08231, V503, 0x20, V492, V506, V492, 0x0, V498, V509]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V498, 0xa9059cbb, V500, V498, 0x70a08231, V503, 0x20, V492, V506, V492, 0x0, V498, V509]

================================

Block 0x5dc
[0x5dc:0x5e6]
---
Predecessors: [0x56d]
Successors: [0x5e7, 0x5f0]
---
0x5dc JUMPDEST
0x5dd POP
0x5de GAS
0x5df CALL
0x5e0 ISZERO
0x5e1 DUP1
0x5e2 ISZERO
0x5e3 PUSH2 0x5f0
0x5e6 JUMPI
---
0x5dc: JUMPDEST 
0x5de: V513 = GAS
0x5df: V514 = CALL V513 V498 0x0 V492 V506 V492 0x20
0x5e0: V515 = ISZERO V514
0x5e2: V516 = ISZERO V515
0x5e3: V517 = 0x5f0
0x5e6: JUMPI 0x5f0 V516
---
Entry stack: [V13, 0x296, V498, 0xa9059cbb, V500, V498, 0x70a08231, V503, 0x20, V492, V506, V492, 0x0, V498, V509]
Stack pops: 7
Stack additions: [V515]
Exit stack: [V13, 0x296, V498, 0xa9059cbb, V500, V498, 0x70a08231, V503, V515]

================================

Block 0x5e7
[0x5e7:0x5ef]
---
Predecessors: [0x5dc]
Successors: []
---
0x5e7 RETURNDATASIZE
0x5e8 PUSH1 0x0
0x5ea DUP1
0x5eb RETURNDATACOPY
0x5ec RETURNDATASIZE
0x5ed PUSH1 0x0
0x5ef REVERT
---
0x5e7: V518 = RETURNDATASIZE
0x5e8: V519 = 0x0
0x5eb: RETURNDATACOPY 0x0 0x0 V518
0x5ec: V520 = RETURNDATASIZE
0x5ed: V521 = 0x0
0x5ef: REVERT 0x0 V520
---
Entry stack: [V13, 0x296, V498, 0xa9059cbb, V500, V498, 0x70a08231, V503, V515]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V498, 0xa9059cbb, V500, V498, 0x70a08231, V503, V515]

================================

Block 0x5f0
[0x5f0:0x601]
---
Predecessors: [0x5dc]
Successors: [0x602, 0x606]
---
0x5f0 JUMPDEST
0x5f1 POP
0x5f2 POP
0x5f3 POP
0x5f4 POP
0x5f5 PUSH1 0x40
0x5f7 MLOAD
0x5f8 RETURNDATASIZE
0x5f9 PUSH1 0x20
0x5fb DUP2
0x5fc LT
0x5fd ISZERO
0x5fe PUSH2 0x606
0x601 JUMPI
---
0x5f0: JUMPDEST 
0x5f5: V522 = 0x40
0x5f7: V523 = M[0x40]
0x5f8: V524 = RETURNDATASIZE
0x5f9: V525 = 0x20
0x5fc: V526 = LT V524 0x20
0x5fd: V527 = ISZERO V526
0x5fe: V528 = 0x606
0x601: JUMPI 0x606 V527
---
Entry stack: [V13, 0x296, V498, 0xa9059cbb, V500, V498, 0x70a08231, V503, V515]
Stack pops: 4
Stack additions: [V523, V524]
Exit stack: [V13, 0x296, V498, 0xa9059cbb, V500, V523, V524]

================================

Block 0x602
[0x602:0x605]
---
Predecessors: [0x5f0]
Successors: []
---
0x602 PUSH1 0x0
0x604 DUP1
0x605 REVERT
---
0x602: V529 = 0x0
0x605: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, V498, 0xa9059cbb, V500, V523, V524]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V498, 0xa9059cbb, V500, V523, V524]

================================

Block 0x606
[0x606:0x650]
---
Predecessors: [0x5f0]
Successors: [0x651, 0x655]
---
0x606 JUMPDEST
0x607 POP
0x608 MLOAD
0x609 PUSH1 0x40
0x60b DUP1
0x60c MLOAD
0x60d PUSH1 0xe0
0x60f PUSH1 0x2
0x611 EXP
0x612 PUSH4 0xffffffff
0x617 DUP7
0x618 AND
0x619 MUL
0x61a DUP2
0x61b MSTORE
0x61c PUSH1 0x1
0x61e PUSH1 0xa0
0x620 PUSH1 0x2
0x622 EXP
0x623 SUB
0x624 SWAP1
0x625 SWAP4
0x626 AND
0x627 PUSH1 0x4
0x629 DUP5
0x62a ADD
0x62b MSTORE
0x62c PUSH1 0x24
0x62e DUP4
0x62f ADD
0x630 SWAP2
0x631 SWAP1
0x632 SWAP2
0x633 MSTORE
0x634 MLOAD
0x635 PUSH1 0x44
0x637 DUP1
0x638 DUP4
0x639 ADD
0x63a SWAP3
0x63b PUSH1 0x20
0x63d SWAP3
0x63e SWAP2
0x63f SWAP1
0x640 DUP3
0x641 SWAP1
0x642 SUB
0x643 ADD
0x644 DUP2
0x645 PUSH1 0x0
0x647 DUP8
0x648 DUP1
0x649 EXTCODESIZE
0x64a ISZERO
0x64b DUP1
0x64c ISZERO
0x64d PUSH2 0x655
0x650 JUMPI
---
0x606: JUMPDEST 
0x608: V530 = M[V523]
0x609: V531 = 0x40
0x60c: V532 = M[0x40]
0x60d: V533 = 0xe0
0x60f: V534 = 0x2
0x611: V535 = EXP 0x2 0xe0
0x612: V536 = 0xffffffff
0x618: V537 = AND 0xa9059cbb 0xffffffff
0x619: V538 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x61b: M[V532] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x61c: V539 = 0x1
0x61e: V540 = 0xa0
0x620: V541 = 0x2
0x622: V542 = EXP 0x2 0xa0
0x623: V543 = SUB 0x10000000000000000000000000000000000000000 0x1
0x626: V544 = AND V500 0xffffffffffffffffffffffffffffffffffffffff
0x627: V545 = 0x4
0x62a: V546 = ADD V532 0x4
0x62b: M[V546] = V544
0x62c: V547 = 0x24
0x62f: V548 = ADD V532 0x24
0x633: M[V548] = V530
0x634: V549 = M[0x40]
0x635: V550 = 0x44
0x639: V551 = ADD V532 0x44
0x63b: V552 = 0x20
0x642: V553 = SUB V532 V549
0x643: V554 = ADD V553 0x44
0x645: V555 = 0x0
0x649: V556 = EXTCODESIZE V498
0x64a: V557 = ISZERO V556
0x64c: V558 = ISZERO V557
0x64d: V559 = 0x655
0x650: JUMPI 0x655 V558
---
Entry stack: [V13, 0x296, V498, 0xa9059cbb, V500, V523, V524]
Stack pops: 5
Stack additions: [S4, S3, V551, 0x20, V549, V554, V549, 0x0, S4, V557]
Exit stack: [V13, 0x296, V498, 0xa9059cbb, V551, 0x20, V549, V554, V549, 0x0, V498, V557]

================================

Block 0x651
[0x651:0x654]
---
Predecessors: [0x606]
Successors: []
---
0x651 PUSH1 0x0
0x653 DUP1
0x654 REVERT
---
0x651: V560 = 0x0
0x654: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, V498, 0xa9059cbb, V551, 0x20, V549, V554, V549, 0x0, V498, V557]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V498, 0xa9059cbb, V551, 0x20, V549, V554, V549, 0x0, V498, V557]

================================

Block 0x655
[0x655:0x65f]
---
Predecessors: [0x606]
Successors: [0x660, 0x669]
---
0x655 JUMPDEST
0x656 POP
0x657 GAS
0x658 CALL
0x659 ISZERO
0x65a DUP1
0x65b ISZERO
0x65c PUSH2 0x669
0x65f JUMPI
---
0x655: JUMPDEST 
0x657: V561 = GAS
0x658: V562 = CALL V561 V498 0x0 V549 V554 V549 0x20
0x659: V563 = ISZERO V562
0x65b: V564 = ISZERO V563
0x65c: V565 = 0x669
0x65f: JUMPI 0x669 V564
---
Entry stack: [V13, 0x296, V498, 0xa9059cbb, V551, 0x20, V549, V554, V549, 0x0, V498, V557]
Stack pops: 7
Stack additions: [V563]
Exit stack: [V13, 0x296, V498, 0xa9059cbb, V551, V563]

================================

Block 0x660
[0x660:0x668]
---
Predecessors: [0x655]
Successors: []
---
0x660 RETURNDATASIZE
0x661 PUSH1 0x0
0x663 DUP1
0x664 RETURNDATACOPY
0x665 RETURNDATASIZE
0x666 PUSH1 0x0
0x668 REVERT
---
0x660: V566 = RETURNDATASIZE
0x661: V567 = 0x0
0x664: RETURNDATACOPY 0x0 0x0 V566
0x665: V568 = RETURNDATASIZE
0x666: V569 = 0x0
0x668: REVERT 0x0 V568
---
Entry stack: [V13, 0x296, V498, 0xa9059cbb, V551, V563]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V498, 0xa9059cbb, V551, V563]

================================

Block 0x669
[0x669:0x67a]
---
Predecessors: [0x655]
Successors: [0x67b, 0x67f]
---
0x669 JUMPDEST
0x66a POP
0x66b POP
0x66c POP
0x66d POP
0x66e PUSH1 0x40
0x670 MLOAD
0x671 RETURNDATASIZE
0x672 PUSH1 0x20
0x674 DUP2
0x675 LT
0x676 ISZERO
0x677 PUSH2 0x67f
0x67a JUMPI
---
0x669: JUMPDEST 
0x66e: V570 = 0x40
0x670: V571 = M[0x40]
0x671: V572 = RETURNDATASIZE
0x672: V573 = 0x20
0x675: V574 = LT V572 0x20
0x676: V575 = ISZERO V574
0x677: V576 = 0x67f
0x67a: JUMPI 0x67f V575
---
Entry stack: [V13, 0x296, V498, 0xa9059cbb, V551, V563]
Stack pops: 4
Stack additions: [V571, V572]
Exit stack: [V13, 0x296, V571, V572]

================================

Block 0x67b
[0x67b:0x67e]
---
Predecessors: [0x669]
Successors: []
---
0x67b PUSH1 0x0
0x67d DUP1
0x67e REVERT
---
0x67b: V577 = 0x0
0x67e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, V571, V572]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V571, V572]

================================

Block 0x67f
[0x67f:0x6b1]
---
Predecessors: [0x669]
Successors: [0x6b2, 0x6bb]
---
0x67f JUMPDEST
0x680 POP
0x681 POP
0x682 PUSH1 0x2
0x684 SLOAD
0x685 PUSH1 0x40
0x687 MLOAD
0x688 PUSH1 0x1
0x68a PUSH1 0xa0
0x68c PUSH1 0x2
0x68e EXP
0x68f SUB
0x690 SWAP1
0x691 SWAP2
0x692 AND
0x693 SWAP1
0x694 ADDRESS
0x695 BALANCE
0x696 DUP1
0x697 ISZERO
0x698 PUSH2 0x8fc
0x69b MUL
0x69c SWAP2
0x69d PUSH1 0x0
0x69f DUP2
0x6a0 DUP2
0x6a1 DUP2
0x6a2 DUP6
0x6a3 DUP9
0x6a4 DUP9
0x6a5 CALL
0x6a6 SWAP4
0x6a7 POP
0x6a8 POP
0x6a9 POP
0x6aa POP
0x6ab ISZERO
0x6ac DUP1
0x6ad ISZERO
0x6ae PUSH2 0x6bb
0x6b1 JUMPI
---
0x67f: JUMPDEST 
0x682: V578 = 0x2
0x684: V579 = S[0x2]
0x685: V580 = 0x40
0x687: V581 = M[0x40]
0x688: V582 = 0x1
0x68a: V583 = 0xa0
0x68c: V584 = 0x2
0x68e: V585 = EXP 0x2 0xa0
0x68f: V586 = SUB 0x10000000000000000000000000000000000000000 0x1
0x692: V587 = AND V579 0xffffffffffffffffffffffffffffffffffffffff
0x694: V588 = ADDRESS
0x695: V589 = BALANCE V588
0x697: V590 = ISZERO V589
0x698: V591 = 0x8fc
0x69b: V592 = MUL 0x8fc V590
0x69d: V593 = 0x0
0x6a5: V594 = CALL V592 V587 V589 V581 0x0 V581 0x0
0x6ab: V595 = ISZERO V594
0x6ad: V596 = ISZERO V595
0x6ae: V597 = 0x6bb
0x6b1: JUMPI 0x6bb V596
---
Entry stack: [V13, 0x296, V571, V572]
Stack pops: 2
Stack additions: [V595]
Exit stack: [V13, 0x296, V595]

================================

Block 0x6b2
[0x6b2:0x6ba]
---
Predecessors: [0x67f]
Successors: []
---
0x6b2 RETURNDATASIZE
0x6b3 PUSH1 0x0
0x6b5 DUP1
0x6b6 RETURNDATACOPY
0x6b7 RETURNDATASIZE
0x6b8 PUSH1 0x0
0x6ba REVERT
---
0x6b2: V598 = RETURNDATASIZE
0x6b3: V599 = 0x0
0x6b6: RETURNDATACOPY 0x0 0x0 V598
0x6b7: V600 = RETURNDATASIZE
0x6b8: V601 = 0x0
0x6ba: REVERT 0x0 V600
---
Entry stack: [V13, 0x296, V595]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V595]

================================

Block 0x6bb
[0x6bb:0x6bd]
---
Predecessors: [0x67f]
Successors: [0x296]
---
0x6bb JUMPDEST
0x6bc POP
0x6bd JUMP
---
0x6bb: JUMPDEST 
0x6bd: JUMP 0x296
---
Entry stack: [V13, 0x296, V595]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x6be
[0x6be:0x6d0]
---
Predecessors: [0x2e3]
Successors: [0x6d1, 0x6d5]
---
0x6be JUMPDEST
0x6bf PUSH1 0x0
0x6c1 SLOAD
0x6c2 PUSH1 0x1
0x6c4 PUSH1 0xa0
0x6c6 PUSH1 0x2
0x6c8 EXP
0x6c9 SUB
0x6ca AND
0x6cb CALLER
0x6cc EQ
0x6cd PUSH2 0x6d5
0x6d0 JUMPI
---
0x6be: JUMPDEST 
0x6bf: V602 = 0x0
0x6c1: V603 = S[0x0]
0x6c2: V604 = 0x1
0x6c4: V605 = 0xa0
0x6c6: V606 = 0x2
0x6c8: V607 = EXP 0x2 0xa0
0x6c9: V608 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ca: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0x6cb: V610 = CALLER
0x6cc: V611 = EQ V610 V609
0x6cd: V612 = 0x6d5
0x6d0: JUMPI 0x6d5 V611
---
Entry stack: [V13, 0x296, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V262]

================================

Block 0x6d1
[0x6d1:0x6d4]
---
Predecessors: [0x6be]
Successors: []
---
0x6d1 PUSH1 0x0
0x6d3 DUP1
0x6d4 REVERT
---
0x6d1: V613 = 0x0
0x6d4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V262]

================================

Block 0x6d5
[0x6d5:0x6e5]
---
Predecessors: [0x6be]
Successors: [0x6e6, 0x6ea]
---
0x6d5 JUMPDEST
0x6d6 PUSH1 0x1
0x6d8 PUSH1 0xa0
0x6da PUSH1 0x2
0x6dc EXP
0x6dd SUB
0x6de DUP2
0x6df AND
0x6e0 ISZERO
0x6e1 ISZERO
0x6e2 PUSH2 0x6ea
0x6e5 JUMPI
---
0x6d5: JUMPDEST 
0x6d6: V614 = 0x1
0x6d8: V615 = 0xa0
0x6da: V616 = 0x2
0x6dc: V617 = EXP 0x2 0xa0
0x6dd: V618 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6df: V619 = AND V262 0xffffffffffffffffffffffffffffffffffffffff
0x6e0: V620 = ISZERO V619
0x6e1: V621 = ISZERO V620
0x6e2: V622 = 0x6ea
0x6e5: JUMPI 0x6ea V621
---
Entry stack: [V13, 0x296, V262]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x296, V262]

================================

Block 0x6e6
[0x6e6:0x6e9]
---
Predecessors: [0x6d5]
Successors: []
---
0x6e6 PUSH1 0x0
0x6e8 DUP1
0x6e9 REVERT
---
0x6e6: V623 = 0x0
0x6e9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V262]

================================

Block 0x6ea
[0x6ea:0x70b]
---
Predecessors: [0x6d5]
Successors: [0x70c, 0x710]
---
0x6ea JUMPDEST
0x6eb PUSH1 0x1
0x6ed PUSH1 0xa0
0x6ef PUSH1 0x2
0x6f1 EXP
0x6f2 SUB
0x6f3 DUP2
0x6f4 AND
0x6f5 PUSH1 0x0
0x6f7 SWAP1
0x6f8 DUP2
0x6f9 MSTORE
0x6fa PUSH1 0xe
0x6fc PUSH1 0x20
0x6fe MSTORE
0x6ff PUSH1 0x40
0x701 SWAP1
0x702 SHA3
0x703 SLOAD
0x704 PUSH1 0xff
0x706 AND
0x707 ISZERO
0x708 PUSH2 0x710
0x70b JUMPI
---
0x6ea: JUMPDEST 
0x6eb: V624 = 0x1
0x6ed: V625 = 0xa0
0x6ef: V626 = 0x2
0x6f1: V627 = EXP 0x2 0xa0
0x6f2: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f4: V629 = AND V262 0xffffffffffffffffffffffffffffffffffffffff
0x6f5: V630 = 0x0
0x6f9: M[0x0] = V629
0x6fa: V631 = 0xe
0x6fc: V632 = 0x20
0x6fe: M[0x20] = 0xe
0x6ff: V633 = 0x40
0x702: V634 = SHA3 0x0 0x40
0x703: V635 = S[V634]
0x704: V636 = 0xff
0x706: V637 = AND 0xff V635
0x707: V638 = ISZERO V637
0x708: V639 = 0x710
0x70b: JUMPI 0x710 V638
---
Entry stack: [V13, 0x296, V262]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x296, V262]

================================

Block 0x70c
[0x70c:0x70f]
---
Predecessors: [0x6ea]
Successors: []
---
0x70c PUSH1 0x0
0x70e DUP1
0x70f REVERT
---
0x70c: V640 = 0x0
0x70f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V262]

================================

Block 0x710
[0x710:0x75b]
---
Predecessors: [0x6ea]
Successors: [0x296]
---
0x710 JUMPDEST
0x711 PUSH1 0x1
0x713 PUSH1 0xa0
0x715 PUSH1 0x2
0x717 EXP
0x718 SUB
0x719 DUP2
0x71a AND
0x71b PUSH1 0x0
0x71d DUP2
0x71e DUP2
0x71f MSTORE
0x720 PUSH1 0xe
0x722 PUSH1 0x20
0x724 MSTORE
0x725 PUSH1 0x40
0x727 DUP1
0x728 DUP3
0x729 SHA3
0x72a DUP1
0x72b SLOAD
0x72c PUSH1 0xff
0x72e NOT
0x72f AND
0x730 PUSH1 0x1
0x732 OR
0x733 SWAP1
0x734 SSTORE
0x735 MLOAD
0x736 PUSH32 0xd824f5e4ab5a8ed29c8abf265102c44a8a18e1ccf3279b48f231a572bd183c72
0x757 SWAP2
0x758 SWAP1
0x759 LOG2
0x75a POP
0x75b JUMP
---
0x710: JUMPDEST 
0x711: V641 = 0x1
0x713: V642 = 0xa0
0x715: V643 = 0x2
0x717: V644 = EXP 0x2 0xa0
0x718: V645 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71a: V646 = AND V262 0xffffffffffffffffffffffffffffffffffffffff
0x71b: V647 = 0x0
0x71f: M[0x0] = V646
0x720: V648 = 0xe
0x722: V649 = 0x20
0x724: M[0x20] = 0xe
0x725: V650 = 0x40
0x729: V651 = SHA3 0x0 0x40
0x72b: V652 = S[V651]
0x72c: V653 = 0xff
0x72e: V654 = NOT 0xff
0x72f: V655 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V652
0x730: V656 = 0x1
0x732: V657 = OR 0x1 V655
0x734: S[V651] = V657
0x735: V658 = M[0x40]
0x736: V659 = 0xd824f5e4ab5a8ed29c8abf265102c44a8a18e1ccf3279b48f231a572bd183c72
0x759: LOG V658 0x0 0xd824f5e4ab5a8ed29c8abf265102c44a8a18e1ccf3279b48f231a572bd183c72 V646
0x75b: JUMP 0x296
---
Entry stack: [V13, 0x296, V262]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x75c
[0x75c:0x76e]
---
Predecessors: [0x304]
Successors: [0x76f, 0x773]
---
0x75c JUMPDEST
0x75d PUSH1 0x0
0x75f SLOAD
0x760 PUSH1 0x1
0x762 PUSH1 0xa0
0x764 PUSH1 0x2
0x766 EXP
0x767 SUB
0x768 AND
0x769 CALLER
0x76a EQ
0x76b PUSH2 0x773
0x76e JUMPI
---
0x75c: JUMPDEST 
0x75d: V660 = 0x0
0x75f: V661 = S[0x0]
0x760: V662 = 0x1
0x762: V663 = 0xa0
0x764: V664 = 0x2
0x766: V665 = EXP 0x2 0xa0
0x767: V666 = SUB 0x10000000000000000000000000000000000000000 0x1
0x768: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V661
0x769: V668 = CALLER
0x76a: V669 = EQ V668 V667
0x76b: V670 = 0x773
0x76e: JUMPI 0x773 V669
---
Entry stack: [V13, 0x296, V270]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V270]

================================

Block 0x76f
[0x76f:0x772]
---
Predecessors: [0x75c]
Successors: []
---
0x76f PUSH1 0x0
0x771 DUP1
0x772 REVERT
---
0x76f: V671 = 0x0
0x772: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, V270]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V270]

================================

Block 0x773
[0x773:0x77b]
---
Predecessors: [0x75c]
Successors: [0x77c, 0x780]
---
0x773 JUMPDEST
0x774 PUSH1 0x0
0x776 DUP2
0x777 GT
0x778 PUSH2 0x780
0x77b JUMPI
---
0x773: JUMPDEST 
0x774: V672 = 0x0
0x777: V673 = GT V270 0x0
0x778: V674 = 0x780
0x77b: JUMPI 0x780 V673
---
Entry stack: [V13, 0x296, V270]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x296, V270]

================================

Block 0x77c
[0x77c:0x77f]
---
Predecessors: [0x773]
Successors: []
---
0x77c PUSH1 0x0
0x77e DUP1
0x77f REVERT
---
0x77c: V675 = 0x0
0x77f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, V270]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V270]

================================

Block 0x780
[0x780:0x7ba]
---
Predecessors: [0x773]
Successors: [0x296]
---
0x780 JUMPDEST
0x781 PUSH1 0x3
0x783 DUP2
0x784 SWAP1
0x785 SSTORE
0x786 PUSH1 0x40
0x788 DUP1
0x789 MLOAD
0x78a DUP3
0x78b DUP2
0x78c MSTORE
0x78d SWAP1
0x78e MLOAD
0x78f PUSH32 0xa8167a494fd63659986a35402ba134163c3e8c8f7a0ce1358588e3797419154c
0x7b0 SWAP2
0x7b1 DUP2
0x7b2 SWAP1
0x7b3 SUB
0x7b4 PUSH1 0x20
0x7b6 ADD
0x7b7 SWAP1
0x7b8 LOG1
0x7b9 POP
0x7ba JUMP
---
0x780: JUMPDEST 
0x781: V676 = 0x3
0x785: S[0x3] = V270
0x786: V677 = 0x40
0x789: V678 = M[0x40]
0x78c: M[V678] = V270
0x78e: V679 = M[0x40]
0x78f: V680 = 0xa8167a494fd63659986a35402ba134163c3e8c8f7a0ce1358588e3797419154c
0x7b3: V681 = SUB V678 V679
0x7b4: V682 = 0x20
0x7b6: V683 = ADD 0x20 V681
0x7b8: LOG V679 V683 0xa8167a494fd63659986a35402ba134163c3e8c8f7a0ce1358588e3797419154c
0x7ba: JUMP 0x296
---
Entry stack: [V13, 0x296, V270]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x7bb
[0x7bb:0x7cd]
---
Predecessors: [0x31c]
Successors: [0x7ce, 0x7d2]
---
0x7bb JUMPDEST
0x7bc PUSH1 0x0
0x7be SLOAD
0x7bf PUSH1 0x1
0x7c1 PUSH1 0xa0
0x7c3 PUSH1 0x2
0x7c5 EXP
0x7c6 SUB
0x7c7 AND
0x7c8 CALLER
0x7c9 EQ
0x7ca PUSH2 0x7d2
0x7cd JUMPI
---
0x7bb: JUMPDEST 
0x7bc: V684 = 0x0
0x7be: V685 = S[0x0]
0x7bf: V686 = 0x1
0x7c1: V687 = 0xa0
0x7c3: V688 = 0x2
0x7c5: V689 = EXP 0x2 0xa0
0x7c6: V690 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c7: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff V685
0x7c8: V692 = CALLER
0x7c9: V693 = EQ V692 V691
0x7ca: V694 = 0x7d2
0x7cd: JUMPI 0x7d2 V693
---
Entry stack: [V13, 0x296]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296]

================================

Block 0x7ce
[0x7ce:0x7d1]
---
Predecessors: [0x7bb]
Successors: []
---
0x7ce PUSH1 0x0
0x7d0 DUP1
0x7d1 REVERT
---
0x7ce: V695 = 0x0
0x7d1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296]

================================

Block 0x7d2
[0x7d2:0x7db]
---
Predecessors: [0x7bb]
Successors: [0x7dc, 0x7e0]
---
0x7d2 JUMPDEST
0x7d3 PUSH1 0x7
0x7d5 SLOAD
0x7d6 TIMESTAMP
0x7d7 GT
0x7d8 PUSH2 0x7e0
0x7db JUMPI
---
0x7d2: JUMPDEST 
0x7d3: V696 = 0x7
0x7d5: V697 = S[0x7]
0x7d6: V698 = TIMESTAMP
0x7d7: V699 = GT V698 V697
0x7d8: V700 = 0x7e0
0x7db: JUMPI 0x7e0 V699
---
Entry stack: [V13, 0x296]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296]

================================

Block 0x7dc
[0x7dc:0x7df]
---
Predecessors: [0x7d2]
Successors: []
---
0x7dc PUSH1 0x0
0x7de DUP1
0x7df REVERT
---
0x7dc: V701 = 0x0
0x7df: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296]

================================

Block 0x7e0
[0x7e0:0x84a]
---
Predecessors: [0x7d2]
Successors: [0x84b, 0x84f]
---
0x7e0 JUMPDEST
0x7e1 PUSH1 0x1
0x7e3 SLOAD
0x7e4 PUSH1 0x40
0x7e6 DUP1
0x7e7 MLOAD
0x7e8 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x809 DUP2
0x80a MSTORE
0x80b ADDRESS
0x80c PUSH1 0x4
0x80e DUP3
0x80f ADD
0x810 MSTORE
0x811 SWAP1
0x812 MLOAD
0x813 PUSH1 0x1
0x815 PUSH1 0xa0
0x817 PUSH1 0x2
0x819 EXP
0x81a SUB
0x81b SWAP1
0x81c SWAP3
0x81d AND
0x81e SWAP2
0x81f PUSH4 0xa9059cbb
0x824 SWAP2
0x825 CALLER
0x826 SWAP2
0x827 DUP5
0x828 SWAP2
0x829 PUSH4 0x70a08231
0x82e SWAP2
0x82f PUSH1 0x24
0x831 DUP1
0x832 DUP4
0x833 ADD
0x834 SWAP3
0x835 PUSH1 0x20
0x837 SWAP3
0x838 SWAP2
0x839 SWAP1
0x83a DUP3
0x83b SWAP1
0x83c SUB
0x83d ADD
0x83e DUP2
0x83f PUSH1 0x0
0x841 DUP8
0x842 DUP1
0x843 EXTCODESIZE
0x844 ISZERO
0x845 DUP1
0x846 ISZERO
0x847 PUSH2 0x84f
0x84a JUMPI
---
0x7e0: JUMPDEST 
0x7e1: V702 = 0x1
0x7e3: V703 = S[0x1]
0x7e4: V704 = 0x40
0x7e7: V705 = M[0x40]
0x7e8: V706 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x80a: M[V705] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x80b: V707 = ADDRESS
0x80c: V708 = 0x4
0x80f: V709 = ADD V705 0x4
0x810: M[V709] = V707
0x812: V710 = M[0x40]
0x813: V711 = 0x1
0x815: V712 = 0xa0
0x817: V713 = 0x2
0x819: V714 = EXP 0x2 0xa0
0x81a: V715 = SUB 0x10000000000000000000000000000000000000000 0x1
0x81d: V716 = AND V703 0xffffffffffffffffffffffffffffffffffffffff
0x81f: V717 = 0xa9059cbb
0x825: V718 = CALLER
0x829: V719 = 0x70a08231
0x82f: V720 = 0x24
0x833: V721 = ADD V705 0x24
0x835: V722 = 0x20
0x83c: V723 = SUB V705 V710
0x83d: V724 = ADD V723 0x24
0x83f: V725 = 0x0
0x843: V726 = EXTCODESIZE V716
0x844: V727 = ISZERO V726
0x846: V728 = ISZERO V727
0x847: V729 = 0x84f
0x84a: JUMPI 0x84f V728
---
Entry stack: [V13, 0x296]
Stack pops: 0
Stack additions: [V716, 0xa9059cbb, V718, V716, 0x70a08231, V721, 0x20, V710, V724, V710, 0x0, V716, V727]
Exit stack: [V13, 0x296, V716, 0xa9059cbb, V718, V716, 0x70a08231, V721, 0x20, V710, V724, V710, 0x0, V716, V727]

================================

Block 0x84b
[0x84b:0x84e]
---
Predecessors: [0x7e0]
Successors: []
---
0x84b PUSH1 0x0
0x84d DUP1
0x84e REVERT
---
0x84b: V730 = 0x0
0x84e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, V716, 0xa9059cbb, V718, V716, 0x70a08231, V721, 0x20, V710, V724, V710, 0x0, V716, V727]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V716, 0xa9059cbb, V718, V716, 0x70a08231, V721, 0x20, V710, V724, V710, 0x0, V716, V727]

================================

Block 0x84f
[0x84f:0x859]
---
Predecessors: [0x7e0]
Successors: [0x85a, 0x863]
---
0x84f JUMPDEST
0x850 POP
0x851 GAS
0x852 CALL
0x853 ISZERO
0x854 DUP1
0x855 ISZERO
0x856 PUSH2 0x863
0x859 JUMPI
---
0x84f: JUMPDEST 
0x851: V731 = GAS
0x852: V732 = CALL V731 V716 0x0 V710 V724 V710 0x20
0x853: V733 = ISZERO V732
0x855: V734 = ISZERO V733
0x856: V735 = 0x863
0x859: JUMPI 0x863 V734
---
Entry stack: [V13, 0x296, V716, 0xa9059cbb, V718, V716, 0x70a08231, V721, 0x20, V710, V724, V710, 0x0, V716, V727]
Stack pops: 7
Stack additions: [V733]
Exit stack: [V13, 0x296, V716, 0xa9059cbb, V718, V716, 0x70a08231, V721, V733]

================================

Block 0x85a
[0x85a:0x862]
---
Predecessors: [0x84f]
Successors: []
---
0x85a RETURNDATASIZE
0x85b PUSH1 0x0
0x85d DUP1
0x85e RETURNDATACOPY
0x85f RETURNDATASIZE
0x860 PUSH1 0x0
0x862 REVERT
---
0x85a: V736 = RETURNDATASIZE
0x85b: V737 = 0x0
0x85e: RETURNDATACOPY 0x0 0x0 V736
0x85f: V738 = RETURNDATASIZE
0x860: V739 = 0x0
0x862: REVERT 0x0 V738
---
Entry stack: [V13, 0x296, V716, 0xa9059cbb, V718, V716, 0x70a08231, V721, V733]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V716, 0xa9059cbb, V718, V716, 0x70a08231, V721, V733]

================================

Block 0x863
[0x863:0x874]
---
Predecessors: [0x84f]
Successors: [0x875, 0x879]
---
0x863 JUMPDEST
0x864 POP
0x865 POP
0x866 POP
0x867 POP
0x868 PUSH1 0x40
0x86a MLOAD
0x86b RETURNDATASIZE
0x86c PUSH1 0x20
0x86e DUP2
0x86f LT
0x870 ISZERO
0x871 PUSH2 0x879
0x874 JUMPI
---
0x863: JUMPDEST 
0x868: V740 = 0x40
0x86a: V741 = M[0x40]
0x86b: V742 = RETURNDATASIZE
0x86c: V743 = 0x20
0x86f: V744 = LT V742 0x20
0x870: V745 = ISZERO V744
0x871: V746 = 0x879
0x874: JUMPI 0x879 V745
---
Entry stack: [V13, 0x296, V716, 0xa9059cbb, V718, V716, 0x70a08231, V721, V733]
Stack pops: 4
Stack additions: [V741, V742]
Exit stack: [V13, 0x296, V716, 0xa9059cbb, V718, V741, V742]

================================

Block 0x875
[0x875:0x878]
---
Predecessors: [0x863]
Successors: []
---
0x875 PUSH1 0x0
0x877 DUP1
0x878 REVERT
---
0x875: V747 = 0x0
0x878: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, V716, 0xa9059cbb, V718, V741, V742]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V716, 0xa9059cbb, V718, V741, V742]

================================

Block 0x879
[0x879:0x8c3]
---
Predecessors: [0x863]
Successors: [0x8c4, 0x8c8]
---
0x879 JUMPDEST
0x87a POP
0x87b MLOAD
0x87c PUSH1 0x40
0x87e DUP1
0x87f MLOAD
0x880 PUSH1 0xe0
0x882 PUSH1 0x2
0x884 EXP
0x885 PUSH4 0xffffffff
0x88a DUP7
0x88b AND
0x88c MUL
0x88d DUP2
0x88e MSTORE
0x88f PUSH1 0x1
0x891 PUSH1 0xa0
0x893 PUSH1 0x2
0x895 EXP
0x896 SUB
0x897 SWAP1
0x898 SWAP4
0x899 AND
0x89a PUSH1 0x4
0x89c DUP5
0x89d ADD
0x89e MSTORE
0x89f PUSH1 0x24
0x8a1 DUP4
0x8a2 ADD
0x8a3 SWAP2
0x8a4 SWAP1
0x8a5 SWAP2
0x8a6 MSTORE
0x8a7 MLOAD
0x8a8 PUSH1 0x44
0x8aa DUP1
0x8ab DUP4
0x8ac ADD
0x8ad SWAP3
0x8ae PUSH1 0x20
0x8b0 SWAP3
0x8b1 SWAP2
0x8b2 SWAP1
0x8b3 DUP3
0x8b4 SWAP1
0x8b5 SUB
0x8b6 ADD
0x8b7 DUP2
0x8b8 PUSH1 0x0
0x8ba DUP8
0x8bb DUP1
0x8bc EXTCODESIZE
0x8bd ISZERO
0x8be DUP1
0x8bf ISZERO
0x8c0 PUSH2 0x8c8
0x8c3 JUMPI
---
0x879: JUMPDEST 
0x87b: V748 = M[V741]
0x87c: V749 = 0x40
0x87f: V750 = M[0x40]
0x880: V751 = 0xe0
0x882: V752 = 0x2
0x884: V753 = EXP 0x2 0xe0
0x885: V754 = 0xffffffff
0x88b: V755 = AND 0xa9059cbb 0xffffffff
0x88c: V756 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x88e: M[V750] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x88f: V757 = 0x1
0x891: V758 = 0xa0
0x893: V759 = 0x2
0x895: V760 = EXP 0x2 0xa0
0x896: V761 = SUB 0x10000000000000000000000000000000000000000 0x1
0x899: V762 = AND V718 0xffffffffffffffffffffffffffffffffffffffff
0x89a: V763 = 0x4
0x89d: V764 = ADD V750 0x4
0x89e: M[V764] = V762
0x89f: V765 = 0x24
0x8a2: V766 = ADD V750 0x24
0x8a6: M[V766] = V748
0x8a7: V767 = M[0x40]
0x8a8: V768 = 0x44
0x8ac: V769 = ADD V750 0x44
0x8ae: V770 = 0x20
0x8b5: V771 = SUB V750 V767
0x8b6: V772 = ADD V771 0x44
0x8b8: V773 = 0x0
0x8bc: V774 = EXTCODESIZE V716
0x8bd: V775 = ISZERO V774
0x8bf: V776 = ISZERO V775
0x8c0: V777 = 0x8c8
0x8c3: JUMPI 0x8c8 V776
---
Entry stack: [V13, 0x296, V716, 0xa9059cbb, V718, V741, V742]
Stack pops: 5
Stack additions: [S4, S3, V769, 0x20, V767, V772, V767, 0x0, S4, V775]
Exit stack: [V13, 0x296, V716, 0xa9059cbb, V769, 0x20, V767, V772, V767, 0x0, V716, V775]

================================

Block 0x8c4
[0x8c4:0x8c7]
---
Predecessors: [0x879]
Successors: []
---
0x8c4 PUSH1 0x0
0x8c6 DUP1
0x8c7 REVERT
---
0x8c4: V778 = 0x0
0x8c7: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, V716, 0xa9059cbb, V769, 0x20, V767, V772, V767, 0x0, V716, V775]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V716, 0xa9059cbb, V769, 0x20, V767, V772, V767, 0x0, V716, V775]

================================

Block 0x8c8
[0x8c8:0x8d2]
---
Predecessors: [0x879]
Successors: [0x8d3, 0x8dc]
---
0x8c8 JUMPDEST
0x8c9 POP
0x8ca GAS
0x8cb CALL
0x8cc ISZERO
0x8cd DUP1
0x8ce ISZERO
0x8cf PUSH2 0x8dc
0x8d2 JUMPI
---
0x8c8: JUMPDEST 
0x8ca: V779 = GAS
0x8cb: V780 = CALL V779 V716 0x0 V767 V772 V767 0x20
0x8cc: V781 = ISZERO V780
0x8ce: V782 = ISZERO V781
0x8cf: V783 = 0x8dc
0x8d2: JUMPI 0x8dc V782
---
Entry stack: [V13, 0x296, V716, 0xa9059cbb, V769, 0x20, V767, V772, V767, 0x0, V716, V775]
Stack pops: 7
Stack additions: [V781]
Exit stack: [V13, 0x296, V716, 0xa9059cbb, V769, V781]

================================

Block 0x8d3
[0x8d3:0x8db]
---
Predecessors: [0x8c8]
Successors: []
---
0x8d3 RETURNDATASIZE
0x8d4 PUSH1 0x0
0x8d6 DUP1
0x8d7 RETURNDATACOPY
0x8d8 RETURNDATASIZE
0x8d9 PUSH1 0x0
0x8db REVERT
---
0x8d3: V784 = RETURNDATASIZE
0x8d4: V785 = 0x0
0x8d7: RETURNDATACOPY 0x0 0x0 V784
0x8d8: V786 = RETURNDATASIZE
0x8d9: V787 = 0x0
0x8db: REVERT 0x0 V786
---
Entry stack: [V13, 0x296, V716, 0xa9059cbb, V769, V781]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V716, 0xa9059cbb, V769, V781]

================================

Block 0x8dc
[0x8dc:0x8ed]
---
Predecessors: [0x8c8]
Successors: [0x8ee, 0x8f2]
---
0x8dc JUMPDEST
0x8dd POP
0x8de POP
0x8df POP
0x8e0 POP
0x8e1 PUSH1 0x40
0x8e3 MLOAD
0x8e4 RETURNDATASIZE
0x8e5 PUSH1 0x20
0x8e7 DUP2
0x8e8 LT
0x8e9 ISZERO
0x8ea PUSH2 0x8f2
0x8ed JUMPI
---
0x8dc: JUMPDEST 
0x8e1: V788 = 0x40
0x8e3: V789 = M[0x40]
0x8e4: V790 = RETURNDATASIZE
0x8e5: V791 = 0x20
0x8e8: V792 = LT V790 0x20
0x8e9: V793 = ISZERO V792
0x8ea: V794 = 0x8f2
0x8ed: JUMPI 0x8f2 V793
---
Entry stack: [V13, 0x296, V716, 0xa9059cbb, V769, V781]
Stack pops: 4
Stack additions: [V789, V790]
Exit stack: [V13, 0x296, V789, V790]

================================

Block 0x8ee
[0x8ee:0x8f1]
---
Predecessors: [0x8dc]
Successors: []
---
0x8ee PUSH1 0x0
0x8f0 DUP1
0x8f1 REVERT
---
0x8ee: V795 = 0x0
0x8f1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, V789, V790]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V789, V790]

================================

Block 0x8f2
[0x8f2:0x924]
---
Predecessors: [0x8dc]
Successors: [0x925, 0x92e]
---
0x8f2 JUMPDEST
0x8f3 POP
0x8f4 POP
0x8f5 PUSH1 0x2
0x8f7 SLOAD
0x8f8 PUSH1 0x40
0x8fa MLOAD
0x8fb PUSH1 0x1
0x8fd PUSH1 0xa0
0x8ff PUSH1 0x2
0x901 EXP
0x902 SUB
0x903 SWAP1
0x904 SWAP2
0x905 AND
0x906 SWAP1
0x907 ADDRESS
0x908 BALANCE
0x909 DUP1
0x90a ISZERO
0x90b PUSH2 0x8fc
0x90e MUL
0x90f SWAP2
0x910 PUSH1 0x0
0x912 DUP2
0x913 DUP2
0x914 DUP2
0x915 DUP6
0x916 DUP9
0x917 DUP9
0x918 CALL
0x919 SWAP4
0x91a POP
0x91b POP
0x91c POP
0x91d POP
0x91e ISZERO
0x91f DUP1
0x920 ISZERO
0x921 PUSH2 0x92e
0x924 JUMPI
---
0x8f2: JUMPDEST 
0x8f5: V796 = 0x2
0x8f7: V797 = S[0x2]
0x8f8: V798 = 0x40
0x8fa: V799 = M[0x40]
0x8fb: V800 = 0x1
0x8fd: V801 = 0xa0
0x8ff: V802 = 0x2
0x901: V803 = EXP 0x2 0xa0
0x902: V804 = SUB 0x10000000000000000000000000000000000000000 0x1
0x905: V805 = AND V797 0xffffffffffffffffffffffffffffffffffffffff
0x907: V806 = ADDRESS
0x908: V807 = BALANCE V806
0x90a: V808 = ISZERO V807
0x90b: V809 = 0x8fc
0x90e: V810 = MUL 0x8fc V808
0x910: V811 = 0x0
0x918: V812 = CALL V810 V805 V807 V799 0x0 V799 0x0
0x91e: V813 = ISZERO V812
0x920: V814 = ISZERO V813
0x921: V815 = 0x92e
0x924: JUMPI 0x92e V814
---
Entry stack: [V13, 0x296, V789, V790]
Stack pops: 2
Stack additions: [V813]
Exit stack: [V13, 0x296, V813]

================================

Block 0x925
[0x925:0x92d]
---
Predecessors: [0x8f2]
Successors: []
---
0x925 RETURNDATASIZE
0x926 PUSH1 0x0
0x928 DUP1
0x929 RETURNDATACOPY
0x92a RETURNDATASIZE
0x92b PUSH1 0x0
0x92d REVERT
---
0x925: V816 = RETURNDATASIZE
0x926: V817 = 0x0
0x929: RETURNDATACOPY 0x0 0x0 V816
0x92a: V818 = RETURNDATASIZE
0x92b: V819 = 0x0
0x92d: REVERT 0x0 V818
---
Entry stack: [V13, 0x296, V813]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V813]

================================

Block 0x92e
[0x92e:0x966]
---
Predecessors: [0x8f2]
Successors: [0x296]
---
0x92e JUMPDEST
0x92f POP
0x930 PUSH1 0x6
0x932 DUP1
0x933 SLOAD
0x934 PUSH1 0xff
0x936 NOT
0x937 AND
0x938 PUSH1 0x1
0x93a OR
0x93b SWAP1
0x93c SSTORE
0x93d PUSH1 0x40
0x93f MLOAD
0x940 PUSH32 0xb6eafcae528942c33b3294eacf17907d3f993a5fd90f492627168071d97905d4
0x961 SWAP1
0x962 PUSH1 0x0
0x964 SWAP1
0x965 LOG1
0x966 JUMP
---
0x92e: JUMPDEST 
0x930: V820 = 0x6
0x933: V821 = S[0x6]
0x934: V822 = 0xff
0x936: V823 = NOT 0xff
0x937: V824 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V821
0x938: V825 = 0x1
0x93a: V826 = OR 0x1 V824
0x93c: S[0x6] = V826
0x93d: V827 = 0x40
0x93f: V828 = M[0x40]
0x940: V829 = 0xb6eafcae528942c33b3294eacf17907d3f993a5fd90f492627168071d97905d4
0x962: V830 = 0x0
0x965: LOG V828 0x0 0xb6eafcae528942c33b3294eacf17907d3f993a5fd90f492627168071d97905d4
0x966: JUMP 0x296
---
Entry stack: [V13, 0x296, V813]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x967
[0x967:0x979]
---
Predecessors: [0x331]
Successors: [0x97a, 0x97e]
---
0x967 JUMPDEST
0x968 PUSH1 0x0
0x96a SLOAD
0x96b PUSH1 0x1
0x96d PUSH1 0xa0
0x96f PUSH1 0x2
0x971 EXP
0x972 SUB
0x973 AND
0x974 CALLER
0x975 EQ
0x976 PUSH2 0x97e
0x979 JUMPI
---
0x967: JUMPDEST 
0x968: V831 = 0x0
0x96a: V832 = S[0x0]
0x96b: V833 = 0x1
0x96d: V834 = 0xa0
0x96f: V835 = 0x2
0x971: V836 = EXP 0x2 0xa0
0x972: V837 = SUB 0x10000000000000000000000000000000000000000 0x1
0x973: V838 = AND 0xffffffffffffffffffffffffffffffffffffffff V832
0x974: V839 = CALLER
0x975: V840 = EQ V839 V838
0x976: V841 = 0x97e
0x979: JUMPI 0x97e V840
---
Entry stack: [V13, 0x296, V290]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V290]

================================

Block 0x97a
[0x97a:0x97d]
---
Predecessors: [0x967]
Successors: []
---
0x97a PUSH1 0x0
0x97c DUP1
0x97d REVERT
---
0x97a: V842 = 0x0
0x97d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, V290]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V290]

================================

Block 0x97e
[0x97e:0x98e]
---
Predecessors: [0x967]
Successors: [0x98f, 0x993]
---
0x97e JUMPDEST
0x97f PUSH1 0x1
0x981 PUSH1 0xa0
0x983 PUSH1 0x2
0x985 EXP
0x986 SUB
0x987 DUP2
0x988 AND
0x989 ISZERO
0x98a ISZERO
0x98b PUSH2 0x993
0x98e JUMPI
---
0x97e: JUMPDEST 
0x97f: V843 = 0x1
0x981: V844 = 0xa0
0x983: V845 = 0x2
0x985: V846 = EXP 0x2 0xa0
0x986: V847 = SUB 0x10000000000000000000000000000000000000000 0x1
0x988: V848 = AND V290 0xffffffffffffffffffffffffffffffffffffffff
0x989: V849 = ISZERO V848
0x98a: V850 = ISZERO V849
0x98b: V851 = 0x993
0x98e: JUMPI 0x993 V850
---
Entry stack: [V13, 0x296, V290]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x296, V290]

================================

Block 0x98f
[0x98f:0x992]
---
Predecessors: [0x97e]
Successors: []
---
0x98f PUSH1 0x0
0x991 DUP1
0x992 REVERT
---
0x98f: V852 = 0x0
0x992: REVERT 0x0 0x0
---
Entry stack: [V13, 0x296, V290]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, V290]

================================

Block 0x993
[0x993:0x9fa]
---
Predecessors: [0x97e]
Successors: [0x296]
---
0x993 JUMPDEST
0x994 PUSH1 0x0
0x996 DUP1
0x997 SLOAD
0x998 PUSH1 0x40
0x99a MLOAD
0x99b PUSH1 0x1
0x99d PUSH1 0xa0
0x99f PUSH1 0x2
0x9a1 EXP
0x9a2 SUB
0x9a3 DUP1
0x9a4 DUP6
0x9a5 AND
0x9a6 SWAP4
0x9a7 SWAP3
0x9a8 AND
0x9a9 SWAP2
0x9aa PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x9cb SWAP2
0x9cc LOG3
0x9cd PUSH1 0x0
0x9cf DUP1
0x9d0 SLOAD
0x9d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e6 NOT
0x9e7 AND
0x9e8 PUSH1 0x1
0x9ea PUSH1 0xa0
0x9ec PUSH1 0x2
0x9ee EXP
0x9ef SUB
0x9f0 SWAP3
0x9f1 SWAP1
0x9f2 SWAP3
0x9f3 AND
0x9f4 SWAP2
0x9f5 SWAP1
0x9f6 SWAP2
0x9f7 OR
0x9f8 SWAP1
0x9f9 SSTORE
0x9fa JUMP
---
0x993: JUMPDEST 
0x994: V853 = 0x0
0x997: V854 = S[0x0]
0x998: V855 = 0x40
0x99a: V856 = M[0x40]
0x99b: V857 = 0x1
0x99d: V858 = 0xa0
0x99f: V859 = 0x2
0x9a1: V860 = EXP 0x2 0xa0
0x9a2: V861 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a5: V862 = AND V290 0xffffffffffffffffffffffffffffffffffffffff
0x9a8: V863 = AND V854 0xffffffffffffffffffffffffffffffffffffffff
0x9aa: V864 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x9cc: LOG V856 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V863 V862
0x9cd: V865 = 0x0
0x9d0: V866 = S[0x0]
0x9d1: V867 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e6: V868 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9e7: V869 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V866
0x9e8: V870 = 0x1
0x9ea: V871 = 0xa0
0x9ec: V872 = 0x2
0x9ee: V873 = EXP 0x2 0xa0
0x9ef: V874 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f3: V875 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x9f7: V876 = OR V875 V869
0x9f9: S[0x0] = V876
0x9fa: JUMP 0x296
---
Entry stack: [V13, 0x296, V290]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x9fb
[0x9fb:0xa07]
---
Predecessors: [0x441]
Successors: [0xa08, 0xa17]
---
0x9fb JUMPDEST
0x9fc PUSH1 0x0
0x9fe DUP3
0x9ff DUP3
0xa00 MUL
0xa01 DUP4
0xa02 ISZERO
0xa03 DUP1
0xa04 PUSH2 0xa17
0xa07 JUMPI
---
0x9fb: JUMPDEST 
0x9fc: V877 = 0x0
0xa00: V878 = MUL {0x0, 0x14, 0x1e, 0x28} V394
0xa02: V879 = ISZERO V394
0xa04: V880 = 0xa17
0xa07: JUMPI 0xa17 V879
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, 0x484, 0x477, 0x64, 0x46b, V394, {0x0, 0x14, 0x1e, 0x28}]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V878, V879]
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, 0x484, 0x477, 0x64, 0x46b, V394, {0x0, 0x14, 0x1e, 0x28}, 0x0, V878, V879]

================================

Block 0xa08
[0xa08:0xa12]
---
Predecessors: [0x9fb]
Successors: [0xa13, 0xa14]
---
0xa08 POP
0xa09 DUP3
0xa0a DUP5
0xa0b DUP3
0xa0c DUP2
0xa0d ISZERO
0xa0e ISZERO
0xa0f PUSH2 0xa14
0xa12 JUMPI
---
0xa0d: V881 = ISZERO V394
0xa0e: V882 = ISZERO V881
0xa0f: V883 = 0xa14
0xa12: JUMPI 0xa14 V882
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, 0x484, 0x477, 0x64, 0x46b, V394, {0x0, 0x14, 0x1e, 0x28}, 0x0, V878, V879]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, 0x484, 0x477, 0x64, 0x46b, V394, {0x0, 0x14, 0x1e, 0x28}, 0x0, V878, {0x0, 0x14, 0x1e, 0x28}, V394, V878]

================================

Block 0xa13
[0xa13:0xa13]
---
Predecessors: [0xa08]
Successors: []
---
0xa13 INVALID
---
0xa13: INVALID 
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, 0x484, 0x477, 0x64, 0x46b, V394, {0x0, 0x14, 0x1e, 0x28}, 0x0, V878, {0x0, 0x14, 0x1e, 0x28}, V394, V878]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, 0x484, 0x477, 0x64, 0x46b, V394, {0x0, 0x14, 0x1e, 0x28}, 0x0, V878, {0x0, 0x14, 0x1e, 0x28}, V394, V878]

================================

Block 0xa14
[0xa14:0xa16]
---
Predecessors: [0xa08]
Successors: [0xa17]
---
0xa14 JUMPDEST
0xa15 DIV
0xa16 EQ
---
0xa14: JUMPDEST 
0xa15: V884 = DIV V878 V394
0xa16: V885 = EQ V884 {0x0, 0x14, 0x1e, 0x28}
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, 0x484, 0x477, 0x64, 0x46b, V394, {0x0, 0x14, 0x1e, 0x28}, 0x0, V878, {0x0, 0x14, 0x1e, 0x28}, V394, V878]
Stack pops: 3
Stack additions: [V885]
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, 0x484, 0x477, 0x64, 0x46b, V394, {0x0, 0x14, 0x1e, 0x28}, 0x0, V878, V885]

================================

Block 0xa17
[0xa17:0xa1d]
---
Predecessors: [0x9fb, 0xa14]
Successors: [0x355, 0xa1e]
---
0xa17 JUMPDEST
0xa18 ISZERO
0xa19 ISZERO
0xa1a PUSH2 0x355
0xa1d JUMPI
---
0xa17: JUMPDEST 
0xa18: V886 = ISZERO S0
0xa19: V887 = ISZERO V886
0xa1a: V888 = 0x355
0xa1d: JUMPI 0x355 V887
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, 0x484, 0x477, 0x64, 0x46b, V394, {0x0, 0x14, 0x1e, 0x28}, 0x0, V878, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, 0x484, 0x477, 0x64, 0x46b, V394, {0x0, 0x14, 0x1e, 0x28}, 0x0, V878]

================================

Block 0xa1e
[0xa1e:0xa1e]
---
Predecessors: [0xa17]
Successors: []
---
0xa1e INVALID
---
0xa1e: INVALID 
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, 0x484, 0x477, 0x64, 0x46b, V394, {0x0, 0x14, 0x1e, 0x28}, 0x0, V878]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, 0x484, 0x477, 0x64, 0x46b, V394, {0x0, 0x14, 0x1e, 0x28}, 0x0, V878]

================================

Block 0xa1f
[0xa1f:0xa2b]
---
Predecessors: [0x46b]
Successors: [0xa2c, 0xa2d]
---
0xa1f JUMPDEST
0xa20 PUSH1 0x0
0xa22 DUP1
0xa23 DUP3
0xa24 DUP5
0xa25 DUP2
0xa26 ISZERO
0xa27 ISZERO
0xa28 PUSH2 0xa2d
0xa2b JUMPI
---
0xa1f: JUMPDEST 
0xa20: V889 = 0x0
0xa26: V890 = ISZERO S0
0xa27: V891 = ISZERO V890
0xa28: V892 = 0xa2d
0xa2b: JUMPI 0xa2d V891
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S3, S2, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0xa2c
[0xa2c:0xa2c]
---
Predecessors: [0xa1f]
Successors: []
---
0xa2c INVALID
---
0xa2c: INVALID 
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S7, S6, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0xa2d
[0xa2d:0xa35]
---
Predecessors: [0xa1f]
Successors: [0x477]
---
0xa2d JUMPDEST
0xa2e DIV
0xa2f SWAP5
0xa30 SWAP4
0xa31 POP
0xa32 POP
0xa33 POP
0xa34 POP
0xa35 JUMP
---
0xa2d: JUMPDEST 
0xa2e: V893 = DIV S0 S1
0xa35: JUMP S6
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S7, S6, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 7
Stack additions: [V893]
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S7, V893]

================================

Block 0xa36
[0xa36:0xa40]
---
Predecessors: [0x477]
Successors: [0xa41, 0xa42]
---
0xa36 JUMPDEST
0xa37 PUSH1 0x0
0xa39 DUP3
0xa3a DUP3
0xa3b GT
0xa3c ISZERO
0xa3d PUSH2 0xa42
0xa40 JUMPI
---
0xa36: JUMPDEST 
0xa37: V894 = 0x0
0xa3b: V895 = GT V893 V394
0xa3c: V896 = ISZERO V895
0xa3d: V897 = 0xa42
0xa40: JUMPI 0xa42 V896
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S2, V394, V893]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S2, V394, V893, 0x0]

================================

Block 0xa41
[0xa41:0xa41]
---
Predecessors: [0xa36]
Successors: []
---
0xa41 INVALID
---
0xa41: INVALID 
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S3, V394, V893, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S3, V394, V893, 0x0]

================================

Block 0xa42
[0xa42:0xa47]
---
Predecessors: [0xa36]
Successors: [0x484]
---
0xa42 JUMPDEST
0xa43 POP
0xa44 SWAP1
0xa45 SUB
0xa46 SWAP1
0xa47 JUMP
---
0xa42: JUMPDEST 
0xa45: V898 = SUB V394 V893
0xa47: JUMP S3
---
Entry stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, S3, V394, V893, 0x0]
Stack pops: 4
Stack additions: [V898]
Exit stack: [V13, 0x296, {0x0, 0x14, 0x1e, 0x28}, V394, 0x0, V898]

================================

Block 0xa48
[0xa48:0xa73]
---
Predecessors: []
Successors: []
---
0xa48 STOP
0xa49 LOG1
0xa4a PUSH6 0x627a7a723058
0xa51 SHA3
0xa52 MISSING 0xb1
0xa53 MISSING 0x48
0xa54 MISSING 0xc9
0xa55 ADDMOD
0xa56 DUP15
0xa57 PUSH19 0xeacc634d13703aea2c402e38b281ffdadb4ad9
0xa6b MISSING 0xba
0xa6c MISSING 0x1e
0xa6d SWAP8
0xa6e MISSING 0xab
0xa6f RETURNDATACOPY
0xa70 MISSING 0xb1
0xa71 SWAP15
0xa72 STOP
0xa73 MISSING 0x29
---
0xa48: STOP 
0xa49: LOG S0 S1 S2
0xa4a: V899 = 0x627a7a723058
0xa51: V900 = SHA3 0x627a7a723058 S3
0xa52: MISSING 0xb1
0xa53: MISSING 0x48
0xa54: MISSING 0xc9
0xa55: V901 = ADDMOD S0 S1 S2
0xa57: V902 = 0xeacc634d13703aea2c402e38b281ffdadb4ad9
0xa6b: MISSING 0xba
0xa6c: MISSING 0x1e
0xa6e: MISSING 0xab
0xa6f: RETURNDATACOPY S0 S1 S2
0xa70: MISSING 0xb1
0xa72: STOP 
0xa73: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V900, 0xeacc634d13703aea2c402e38b281ffdadb4ad9, S16, V901, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S8, S1, S2, S3, S4, S5, S6, S7, S0, S15, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x38af3eed
Entry block: 0x188
Exit block: 0x19d
Body: 0x188, 0x190, 0x194, 0x19d, 0x35c

Function 1:
Public function signature: 0x3af32abf
Entry block: 0x1b9
Exit block: 0x1da
Body: 0x1b9, 0x1c1, 0x1c5, 0x1da, 0x36b

Function 2:
Public function signature: 0x3d5dff53
Entry block: 0x1ee
Exit block: 0x20f
Body: 0x1ee, 0x1f6, 0x1fa, 0x20f, 0x380

Function 3:
Public function signature: 0x4034175e
Entry block: 0x221
Exit block: 0x20f
Body: 0x20f, 0x221, 0x229, 0x22d, 0x392

Function 4:
Public function signature: 0x4fe5b830
Entry block: 0x242
Exit block: 0x19d
Body: 0x19d, 0x242, 0x24a, 0x24e, 0x3a4

Function 5:
Public function signature: 0x519ee19e
Entry block: 0x257
Exit block: 0x20f
Body: 0x20f, 0x257, 0x25f, 0x263, 0x3b3

Function 6:
Public function signature: 0x5a03d679
Entry block: 0x26c
Exit block: 0x20f
Body: 0x20f, 0x26c, 0x274, 0x278, 0x3b9

Function 7:
Public function signature: 0x5d3f4fe4
Entry block: 0x281
Exit block: 0x296
Body: 0x111, 0x118, 0x11c, 0x17b, 0x184, 0x281, 0x289, 0x28d, 0x296, 0x355, 0x3bf, 0x3d3, 0x3d7, 0x3ed, 0x3f1, 0x3fb, 0x3ff, 0x40e, 0x416, 0x421, 0x429, 0x434, 0x43c, 0x441, 0x46b, 0x477, 0x484, 0x4fe, 0x502, 0x50d, 0x516, 0x528, 0x52c, 0x9fb, 0xa08, 0xa13, 0xa14, 0xa17, 0xa1e, 0xa1f, 0xa2c, 0xa2d, 0xa36, 0xa41, 0xa42

Function 8:
Public function signature: 0x8da5cb5b
Entry block: 0x298
Exit block: 0x19d
Body: 0x19d, 0x298, 0x2a0, 0x2a4, 0x533

Function 9:
Public function signature: 0x9cd337de
Entry block: 0x2ad
Exit block: 0x20f
Body: 0x20f, 0x2ad, 0x2b5, 0x2b9, 0x542

Function 10:
Public function signature: 0xae466db7
Entry block: 0x2c2
Exit block: 0x296
Body: 0x296, 0x2c2, 0x2ca, 0x2ce, 0x548, 0x55b, 0x55f, 0x569, 0x56d, 0x5d8, 0x5dc, 0x5e7, 0x5f0, 0x602, 0x606, 0x651, 0x655, 0x660, 0x669, 0x67b, 0x67f, 0x6b2, 0x6bb

Function 11:
Public function signature: 0xb579184f
Entry block: 0x2d7
Exit block: 0x296
Body: 0x296, 0x2d7, 0x2df, 0x2e3, 0x6be, 0x6d1, 0x6d5, 0x6e6, 0x6ea, 0x70c, 0x710

Function 12:
Public function signature: 0xc6c85ca5
Entry block: 0x2f8
Exit block: 0x296
Body: 0x296, 0x2f8, 0x300, 0x304, 0x75c, 0x76f, 0x773, 0x77c, 0x780

Function 13:
Public function signature: 0xee55efee
Entry block: 0x310
Exit block: 0x296
Body: 0x296, 0x310, 0x318, 0x31c, 0x7bb, 0x7ce, 0x7d2, 0x7dc, 0x7e0, 0x84b, 0x84f, 0x85a, 0x863, 0x875, 0x879, 0x8c4, 0x8c8, 0x8d3, 0x8dc, 0x8ee, 0x8f2, 0x925, 0x92e

Function 14:
Public function signature: 0xf2fde38b
Entry block: 0x325
Exit block: 0x296
Body: 0x296, 0x325, 0x32d, 0x331, 0x967, 0x97a, 0x97e, 0x98f, 0x993

Function 15:
Public fallback function
Entry block: 0xc1
Exit block: 0x296
Body: 0xc1, 0xd0, 0xd4, 0xee, 0xf2, 0x111, 0x118, 0x11c, 0x17b, 0x184, 0x296, 0x346, 0x354, 0x355, 0x46b, 0x477, 0x484, 0x4fe, 0x502, 0x50d, 0x516, 0x528, 0x52c, 0xa1f, 0xa2c, 0xa2d, 0xa36, 0xa41, 0xa42

