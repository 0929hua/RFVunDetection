Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x82]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x82
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x82
0xa: JUMPI 0x82 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x84]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x3fa4f245
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x84
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x3fa4f245
0x1a: V12 = EQ V10 0x3fa4f245
0x1b: V13 = 0x84
0x1e: JUMPI 0x84 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x8d]
---
0x1f DUP1
0x20 PUSH4 0x4665096d
0x25 EQ
0x26 PUSH2 0x8d
0x29 JUMPI
---
0x20: V14 = 0x4665096d
0x25: V15 = EQ 0x4665096d V10
0x26: V16 = 0x8d
0x29: JUMPI 0x8d V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x96]
---
0x2a DUP1
0x2b PUSH4 0x8da5cb5b
0x30 EQ
0x31 PUSH2 0x96
0x34 JUMPI
---
0x2b: V17 = 0x8da5cb5b
0x30: V18 = EQ 0x8da5cb5b V10
0x31: V19 = 0x96
0x34: JUMPI 0x96 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xa8]
---
0x35 DUP1
0x36 PUSH4 0x968f63d9
0x3b EQ
0x3c PUSH2 0xa8
0x3f JUMPI
---
0x36: V20 = 0x968f63d9
0x3b: V21 = EQ 0x968f63d9 V10
0x3c: V22 = 0xa8
0x3f: JUMPI 0xa8 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0xc9]
---
0x40 DUP1
0x41 PUSH4 0xa4520ecd
0x46 EQ
0x47 PUSH2 0xc9
0x4a JUMPI
---
0x41: V23 = 0xa4520ecd
0x46: V24 = EQ 0xa4520ecd V10
0x47: V25 = 0xc9
0x4a: JUMPI 0xc9 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xea]
---
0x4b DUP1
0x4c PUSH4 0xa6f9dae1
0x51 EQ
0x52 PUSH2 0xea
0x55 JUMPI
---
0x4c: V26 = 0xa6f9dae1
0x51: V27 = EQ 0xa6f9dae1 V10
0x52: V28 = 0xea
0x55: JUMPI 0xea V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x10b]
---
0x56 DUP1
0x57 PUSH4 0xa9fe33ee
0x5c EQ
0x5d PUSH2 0x10b
0x60 JUMPI
---
0x57: V29 = 0xa9fe33ee
0x5c: V30 = EQ 0xa9fe33ee V10
0x5d: V31 = 0x10b
0x60: JUMPI 0x10b V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x114]
---
0x61 DUP1
0x62 PUSH4 0xd11345e0
0x67 EQ
0x68 PUSH2 0x114
0x6b JUMPI
---
0x62: V32 = 0xd11345e0
0x67: V33 = EQ 0xd11345e0 V10
0x68: V34 = 0x114
0x6b: JUMPI 0x114 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x126]
---
0x6c DUP1
0x6d PUSH4 0xd95402e7
0x72 EQ
0x73 PUSH2 0x126
0x76 JUMPI
---
0x6d: V35 = 0xd95402e7
0x72: V36 = EQ 0xd95402e7 V10
0x73: V37 = 0x126
0x76: JUMPI 0x126 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x145]
---
0x77 DUP1
0x78 PUSH4 0xdcf7c22c
0x7d EQ
0x7e PUSH2 0x145
0x81 JUMPI
---
0x78: V38 = 0xdcf7c22c
0x7d: V39 = EQ 0xdcf7c22c V10
0x7e: V40 = 0x145
0x81: JUMPI 0x145 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x0, 0x77, 0x183, 0x1a5, 0x1b2, 0x1b7, 0x211]
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x84
[0x84:0x8c]
---
Predecessors: [0xb]
Successors: [0x166]
---
0x84 JUMPDEST
0x85 PUSH2 0x166
0x88 PUSH1 0x4
0x8a SLOAD
0x8b DUP2
0x8c JUMP
---
0x84: JUMPDEST 
0x85: V41 = 0x166
0x88: V42 = 0x4
0x8a: V43 = S[0x4]
0x8c: JUMP 0x166
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x166, V43]
Exit stack: [V10, 0x166, V43]

================================

Block 0x8d
[0x8d:0x95]
---
Predecessors: [0x1f]
Successors: [0x166]
---
0x8d JUMPDEST
0x8e PUSH2 0x166
0x91 PUSH1 0x3
0x93 SLOAD
0x94 DUP2
0x95 JUMP
---
0x8d: JUMPDEST 
0x8e: V44 = 0x166
0x91: V45 = 0x3
0x93: V46 = S[0x3]
0x95: JUMP 0x166
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x166, V46]
Exit stack: [V10, 0x166, V46]

================================

Block 0x96
[0x96:0xa7]
---
Predecessors: [0x2a]
Successors: [0x170]
---
0x96 JUMPDEST
0x97 PUSH2 0x170
0x9a PUSH1 0x0
0x9c SLOAD
0x9d PUSH1 0x1
0x9f PUSH1 0xa0
0xa1 PUSH1 0x2
0xa3 EXP
0xa4 SUB
0xa5 AND
0xa6 DUP2
0xa7 JUMP
---
0x96: JUMPDEST 
0x97: V47 = 0x170
0x9a: V48 = 0x0
0x9c: V49 = S[0x0]
0x9d: V50 = 0x1
0x9f: V51 = 0xa0
0xa1: V52 = 0x2
0xa3: V53 = EXP 0x2 0xa0
0xa4: V54 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0xa7: JUMP 0x170
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x170, V55]
Exit stack: [V10, 0x170, V55]

================================

Block 0xa8
[0xa8:0xc4]
---
Predecessors: [0x35]
Successors: [0xc5, 0x1a5]
---
0xa8 JUMPDEST
0xa9 PUSH2 0x82
0xac PUSH1 0x4
0xae CALLDATALOAD
0xaf PUSH1 0x0
0xb1 SLOAD
0xb2 CALLER
0xb3 PUSH1 0x1
0xb5 PUSH1 0xa0
0xb7 PUSH1 0x2
0xb9 EXP
0xba SUB
0xbb SWAP1
0xbc DUP2
0xbd AND
0xbe SWAP2
0xbf AND
0xc0 EQ
0xc1 PUSH2 0x1a5
0xc4 JUMPI
---
0xa8: JUMPDEST 
0xa9: V56 = 0x82
0xac: V57 = 0x4
0xae: V58 = CALLDATALOAD 0x4
0xaf: V59 = 0x0
0xb1: V60 = S[0x0]
0xb2: V61 = CALLER
0xb3: V62 = 0x1
0xb5: V63 = 0xa0
0xb7: V64 = 0x2
0xb9: V65 = EXP 0x2 0xa0
0xba: V66 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0xbf: V68 = AND V60 0xffffffffffffffffffffffffffffffffffffffff
0xc0: V69 = EQ V68 V67
0xc1: V70 = 0x1a5
0xc4: JUMPI 0x1a5 V69
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x82, V58]
Exit stack: [V10, 0x82, V58]

================================

Block 0xc5
[0xc5:0xc8]
---
Predecessors: [0xa8]
Successors: []
---
0xc5 PUSH2 0x2
0xc8 JUMP
---
0xc5: V71 = 0x2
0xc8: THROW 
---
Entry stack: [V10, 0x82, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x82, V58]

================================

Block 0xc9
[0xc9:0xe5]
---
Predecessors: [0x40]
Successors: [0xe6, 0x1b2]
---
0xc9 JUMPDEST
0xca PUSH2 0x82
0xcd PUSH1 0x4
0xcf CALLDATALOAD
0xd0 PUSH1 0x0
0xd2 SLOAD
0xd3 CALLER
0xd4 PUSH1 0x1
0xd6 PUSH1 0xa0
0xd8 PUSH1 0x2
0xda EXP
0xdb SUB
0xdc SWAP1
0xdd DUP2
0xde AND
0xdf SWAP2
0xe0 AND
0xe1 EQ
0xe2 PUSH2 0x1b2
0xe5 JUMPI
---
0xc9: JUMPDEST 
0xca: V72 = 0x82
0xcd: V73 = 0x4
0xcf: V74 = CALLDATALOAD 0x4
0xd0: V75 = 0x0
0xd2: V76 = S[0x0]
0xd3: V77 = CALLER
0xd4: V78 = 0x1
0xd6: V79 = 0xa0
0xd8: V80 = 0x2
0xda: V81 = EXP 0x2 0xa0
0xdb: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0xe0: V84 = AND V76 0xffffffffffffffffffffffffffffffffffffffff
0xe1: V85 = EQ V84 V83
0xe2: V86 = 0x1b2
0xe5: JUMPI 0x1b2 V85
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x82, V74]
Exit stack: [V10, 0x82, V74]

================================

Block 0xe6
[0xe6:0xe9]
---
Predecessors: [0xc9]
Successors: []
---
0xe6 PUSH2 0x2
0xe9 JUMP
---
0xe6: V87 = 0x2
0xe9: THROW 
---
Entry stack: [V10, 0x82, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x82, V74]

================================

Block 0xea
[0xea:0x106]
---
Predecessors: [0x4b]
Successors: [0x107, 0x183]
---
0xea JUMPDEST
0xeb PUSH2 0x82
0xee PUSH1 0x4
0xf0 CALLDATALOAD
0xf1 PUSH1 0x0
0xf3 SLOAD
0xf4 CALLER
0xf5 PUSH1 0x1
0xf7 PUSH1 0xa0
0xf9 PUSH1 0x2
0xfb EXP
0xfc SUB
0xfd SWAP1
0xfe DUP2
0xff AND
0x100 SWAP2
0x101 AND
0x102 EQ
0x103 PUSH2 0x183
0x106 JUMPI
---
0xea: JUMPDEST 
0xeb: V88 = 0x82
0xee: V89 = 0x4
0xf0: V90 = CALLDATALOAD 0x4
0xf1: V91 = 0x0
0xf3: V92 = S[0x0]
0xf4: V93 = CALLER
0xf5: V94 = 0x1
0xf7: V95 = 0xa0
0xf9: V96 = 0x2
0xfb: V97 = EXP 0x2 0xa0
0xfc: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0xff: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x101: V100 = AND V92 0xffffffffffffffffffffffffffffffffffffffff
0x102: V101 = EQ V100 V99
0x103: V102 = 0x183
0x106: JUMPI 0x183 V101
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x82, V90]
Exit stack: [V10, 0x82, V90]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0xea]
Successors: []
---
0x107 PUSH2 0x2
0x10a JUMP
---
0x107: V103 = 0x2
0x10a: THROW 
---
Entry stack: [V10, 0x82, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x82, V90]

================================

Block 0x10b
[0x10b:0x113]
---
Predecessors: [0x56]
Successors: [0x166]
---
0x10b JUMPDEST
0x10c PUSH2 0x166
0x10f PUSH1 0x2
0x111 SLOAD
0x112 DUP2
0x113 JUMP
---
0x10b: JUMPDEST 
0x10c: V104 = 0x166
0x10f: V105 = 0x2
0x111: V106 = S[0x2]
0x113: JUMP 0x166
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x166, V106]
Exit stack: [V10, 0x166, V106]

================================

Block 0x114
[0x114:0x125]
---
Predecessors: [0x61]
Successors: [0x170]
---
0x114 JUMPDEST
0x115 PUSH2 0x170
0x118 PUSH1 0x1
0x11a SLOAD
0x11b PUSH1 0x1
0x11d PUSH1 0xa0
0x11f PUSH1 0x2
0x121 EXP
0x122 SUB
0x123 AND
0x124 DUP2
0x125 JUMP
---
0x114: JUMPDEST 
0x115: V107 = 0x170
0x118: V108 = 0x1
0x11a: V109 = S[0x1]
0x11b: V110 = 0x1
0x11d: V111 = 0xa0
0x11f: V112 = 0x2
0x121: V113 = EXP 0x2 0xa0
0x122: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x123: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x125: JUMP 0x170
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x170, V115]
Exit stack: [V10, 0x170, V115]

================================

Block 0x126
[0x126:0x140]
---
Predecessors: [0x6c]
Successors: [0x141, 0x1d9]
---
0x126 JUMPDEST
0x127 PUSH2 0x82
0x12a PUSH1 0x1
0x12c SLOAD
0x12d PUSH1 0x1
0x12f PUSH1 0xa0
0x131 PUSH1 0x2
0x133 EXP
0x134 SUB
0x135 SWAP1
0x136 DUP2
0x137 AND
0x138 CALLER
0x139 SWAP1
0x13a SWAP2
0x13b AND
0x13c EQ
0x13d PUSH2 0x1d9
0x140 JUMPI
---
0x126: JUMPDEST 
0x127: V116 = 0x82
0x12a: V117 = 0x1
0x12c: V118 = S[0x1]
0x12d: V119 = 0x1
0x12f: V120 = 0xa0
0x131: V121 = 0x2
0x133: V122 = EXP 0x2 0xa0
0x134: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x137: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x138: V125 = CALLER
0x13b: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x13c: V127 = EQ V126 V124
0x13d: V128 = 0x1d9
0x140: JUMPI 0x1d9 V127
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V10, 0x82]

================================

Block 0x141
[0x141:0x144]
---
Predecessors: [0x126]
Successors: []
---
0x141 PUSH2 0x2
0x144 JUMP
---
0x141: V129 = 0x2
0x144: THROW 
---
Entry stack: [V10, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x82]

================================

Block 0x145
[0x145:0x161]
---
Predecessors: [0x77]
Successors: [0x162, 0x1b7]
---
0x145 JUMPDEST
0x146 PUSH2 0x82
0x149 PUSH1 0x4
0x14b CALLDATALOAD
0x14c PUSH1 0x0
0x14e SLOAD
0x14f CALLER
0x150 PUSH1 0x1
0x152 PUSH1 0xa0
0x154 PUSH1 0x2
0x156 EXP
0x157 SUB
0x158 SWAP1
0x159 DUP2
0x15a AND
0x15b SWAP2
0x15c AND
0x15d EQ
0x15e PUSH2 0x1b7
0x161 JUMPI
---
0x145: JUMPDEST 
0x146: V130 = 0x82
0x149: V131 = 0x4
0x14b: V132 = CALLDATALOAD 0x4
0x14c: V133 = 0x0
0x14e: V134 = S[0x0]
0x14f: V135 = CALLER
0x150: V136 = 0x1
0x152: V137 = 0xa0
0x154: V138 = 0x2
0x156: V139 = EXP 0x2 0xa0
0x157: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15a: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x15c: V142 = AND V134 0xffffffffffffffffffffffffffffffffffffffff
0x15d: V143 = EQ V142 V141
0x15e: V144 = 0x1b7
0x161: JUMPI 0x1b7 V143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x82, V132]
Exit stack: [V10, 0x82, V132]

================================

Block 0x162
[0x162:0x165]
---
Predecessors: [0x145]
Successors: []
---
0x162 PUSH2 0x2
0x165 JUMP
---
0x162: V145 = 0x2
0x165: THROW 
---
Entry stack: [V10, 0x82, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x82, V132]

================================

Block 0x166
[0x166:0x16f]
---
Predecessors: [0x84, 0x8d, 0x10b]
Successors: []
---
0x166 JUMPDEST
0x167 PUSH1 0x60
0x169 SWAP1
0x16a DUP2
0x16b MSTORE
0x16c PUSH1 0x20
0x16e SWAP1
0x16f RETURN
---
0x166: JUMPDEST 
0x167: V146 = 0x60
0x16b: M[0x60] = S0
0x16c: V147 = 0x20
0x16f: RETURN 0x60 0x20
---
Entry stack: [V10, 0x166, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x170
[0x170:0x182]
---
Predecessors: [0x96, 0x114]
Successors: []
---
0x170 JUMPDEST
0x171 PUSH1 0x1
0x173 PUSH1 0xa0
0x175 PUSH1 0x2
0x177 EXP
0x178 SUB
0x179 AND
0x17a PUSH1 0x60
0x17c SWAP1
0x17d DUP2
0x17e MSTORE
0x17f PUSH1 0x20
0x181 SWAP1
0x182 RETURN
---
0x170: JUMPDEST 
0x171: V148 = 0x1
0x173: V149 = 0xa0
0x175: V150 = 0x2
0x177: V151 = EXP 0x2 0xa0
0x178: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x179: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x17a: V154 = 0x60
0x17e: M[0x60] = V153
0x17f: V155 = 0x20
0x182: RETURN 0x60 0x20
---
Entry stack: [V10, 0x170, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x170]

================================

Block 0x183
[0x183:0x1a4]
---
Predecessors: [0xea]
Successors: [0x82]
---
0x183 JUMPDEST
0x184 PUSH1 0x0
0x186 DUP1
0x187 SLOAD
0x188 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19d NOT
0x19e AND
0x19f DUP3
0x1a0 OR
0x1a1 SWAP1
0x1a2 SSTORE
0x1a3 POP
0x1a4 JUMP
---
0x183: JUMPDEST 
0x184: V156 = 0x0
0x187: V157 = S[0x0]
0x188: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x19d: V159 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x19e: V160 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V157
0x1a0: V161 = OR V90 V160
0x1a2: S[0x0] = V161
0x1a4: JUMP 0x82
---
Entry stack: [V10, 0x82, V90]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a5
[0x1a5:0x1b1]
---
Predecessors: [0xa8]
Successors: [0x82]
---
0x1a5 JUMPDEST
0x1a6 PUSH1 0x4
0x1a8 SSTORE
0x1a9 PUSH1 0x2
0x1ab SLOAD
0x1ac TIMESTAMP
0x1ad ADD
0x1ae PUSH1 0x3
0x1b0 SSTORE
0x1b1 JUMP
---
0x1a5: JUMPDEST 
0x1a6: V162 = 0x4
0x1a8: S[0x4] = V58
0x1a9: V163 = 0x2
0x1ab: V164 = S[0x2]
0x1ac: V165 = TIMESTAMP
0x1ad: V166 = ADD V165 V164
0x1ae: V167 = 0x3
0x1b0: S[0x3] = V166
0x1b1: JUMP 0x82
---
Entry stack: [V10, 0x82, V58]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b2
[0x1b2:0x1b6]
---
Predecessors: [0xc9]
Successors: [0x82]
---
0x1b2 JUMPDEST
0x1b3 PUSH1 0x4
0x1b5 SSTORE
0x1b6 JUMP
---
0x1b2: JUMPDEST 
0x1b3: V168 = 0x4
0x1b5: S[0x4] = V74
0x1b6: JUMP 0x82
---
Entry stack: [V10, 0x82, V74]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b7
[0x1b7:0x1d8]
---
Predecessors: [0x145]
Successors: [0x82]
---
0x1b7 JUMPDEST
0x1b8 PUSH1 0x1
0x1ba DUP1
0x1bb SLOAD
0x1bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d1 NOT
0x1d2 AND
0x1d3 DUP3
0x1d4 OR
0x1d5 SWAP1
0x1d6 SSTORE
0x1d7 POP
0x1d8 JUMP
---
0x1b7: JUMPDEST 
0x1b8: V169 = 0x1
0x1bb: V170 = S[0x1]
0x1bc: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V172 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1d2: V173 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V170
0x1d4: V174 = OR V132 V173
0x1d6: S[0x1] = V174
0x1d8: JUMP 0x82
---
Entry stack: [V10, 0x82, V132]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d9
[0x1d9:0x1e3]
---
Predecessors: [0x126]
Successors: [0x1e4, 0x211]
---
0x1d9 JUMPDEST
0x1da PUSH1 0x3
0x1dc SLOAD
0x1dd TIMESTAMP
0x1de GT
0x1df ISZERO
0x1e0 PUSH2 0x211
0x1e3 JUMPI
---
0x1d9: JUMPDEST 
0x1da: V175 = 0x3
0x1dc: V176 = S[0x3]
0x1dd: V177 = TIMESTAMP
0x1de: V178 = GT V177 V176
0x1df: V179 = ISZERO V178
0x1e0: V180 = 0x211
0x1e3: JUMPI 0x211 V179
---
Entry stack: [V10, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x82]

================================

Block 0x1e4
[0x1e4:0x210]
---
Predecessors: [0x1d9]
Successors: [0x211]
---
0x1e4 PUSH1 0x1
0x1e6 SLOAD
0x1e7 PUSH1 0x4
0x1e9 SLOAD
0x1ea PUSH1 0x1
0x1ec PUSH1 0xa0
0x1ee PUSH1 0x2
0x1f0 EXP
0x1f1 SUB
0x1f2 SWAP2
0x1f3 SWAP1
0x1f4 SWAP2
0x1f5 AND
0x1f6 SWAP1
0x1f7 PUSH1 0x0
0x1f9 SWAP1
0x1fa PUSH1 0x60
0x1fc DUP3
0x1fd DUP2
0x1fe DUP2
0x1ff DUP2
0x200 DUP6
0x201 DUP9
0x202 DUP4
0x203 CALL
0x204 POP
0x205 POP
0x206 PUSH1 0x2
0x208 SLOAD
0x209 TIMESTAMP
0x20a ADD
0x20b PUSH1 0x3
0x20d SSTORE
0x20e POP
0x20f POP
0x210 POP
---
0x1e4: V181 = 0x1
0x1e6: V182 = S[0x1]
0x1e7: V183 = 0x4
0x1e9: V184 = S[0x4]
0x1ea: V185 = 0x1
0x1ec: V186 = 0xa0
0x1ee: V187 = 0x2
0x1f0: V188 = EXP 0x2 0xa0
0x1f1: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f5: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x1f7: V191 = 0x0
0x1fa: V192 = 0x60
0x203: V193 = CALL 0x0 V190 V184 0x60 0x0 0x60 0x0
0x206: V194 = 0x2
0x208: V195 = S[0x2]
0x209: V196 = TIMESTAMP
0x20a: V197 = ADD V196 V195
0x20b: V198 = 0x3
0x20d: S[0x3] = V197
---
Entry stack: [V10, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x82]

================================

Block 0x211
[0x211:0x212]
---
Predecessors: [0x1d9, 0x1e4]
Successors: [0x82]
---
0x211 JUMPDEST
0x212 JUMP
---
0x211: JUMPDEST 
0x212: JUMP 0x82
---
Entry stack: [V10, 0x82]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x3fa4f245
Entry block: 0x84
Exit block: 0x166
Body: 0x84, 0x166

Function 1:
Public function signature: 0x4665096d
Entry block: 0x8d
Exit block: 0x166
Body: 0x8d, 0x166

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x96
Exit block: 0x170
Body: 0x96, 0x170

Function 3:
Public function signature: 0x968f63d9
Entry block: 0xa8
Exit block: 0x82
Body: 0x82, 0xa8, 0xc5, 0x1a5

Function 4:
Public function signature: 0xa4520ecd
Entry block: 0xc9
Exit block: 0x82
Body: 0x82, 0xc9, 0xe6, 0x1b2

Function 5:
Public function signature: 0xa6f9dae1
Entry block: 0xea
Exit block: 0x82
Body: 0x82, 0xea, 0x107, 0x183

Function 6:
Public function signature: 0xa9fe33ee
Entry block: 0x10b
Exit block: 0x166
Body: 0x10b, 0x166

Function 7:
Public function signature: 0xd11345e0
Entry block: 0x114
Exit block: 0x170
Body: 0x114, 0x170

Function 8:
Public function signature: 0xd95402e7
Entry block: 0x126
Exit block: 0x82
Body: 0x82, 0x126, 0x141, 0x1d9, 0x1e4, 0x211

Function 9:
Public function signature: 0xdcf7c22c
Entry block: 0x145
Exit block: 0x82
Body: 0x82, 0x145, 0x162, 0x1b7

Function 10:
Public fallback function
Entry block: 0x82
Exit block: 0x82
Body: 0x82

